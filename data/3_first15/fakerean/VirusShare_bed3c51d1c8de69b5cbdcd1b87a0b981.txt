adc
and
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
sbb
inc
add
sahf
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
cs
add
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
ja
loopne
cwtl
sbb
and
sbb
and
sbb
and
push
loopne
sub
loopne
jae
loopne
sbbb
and
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
push
aad
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
and
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
out
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
jecxz
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
popf
aam
add
call
mov
jns
inc
add
add
mov
add
cmp
jae
mov
mov
jbe
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
cmp
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
insb
ret
inc
add
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
popa
les
pop
pop
pop
add
rol
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
jp
loopne
jp
loopne
cmpsb
xor
and
loopne
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pushf
xor
loopne
mov
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
popa
roll
je
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
inc
movb
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
add
pop
add
cld
lds
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
xchg
out
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
push
push
call
mov
stc
mov
enter
mov
mov
into
test
jbe
mov
popf
fsts
in
add
push
push
lea
push
lea
push
call
jns
add
mov
add
mov
add
out
mov
mov
mov
aad
sahf
add
add
lods
add
sub
pop
popl
push
push
lea
push
lea
push
push
push
push
call
push
add
out
mov
rcrl
add
add
add
add
pop
add
stos
jge
cmc
jno
repnz
out
jp
in
in
lcall
push
push
push
call
fwait
mov
idivb
filds
add
mov
test
ljmp
add
add
push
cmpsl
add
xchg
add
add
add
add
sar
mov
add
test
lods
sti
nop
popa
xlat
add
clc
lcall
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
fidivrl
add
add
leave
lods
add
loop
xlat
mov
add
fidivrl
add
mov
add
into
add
fs
pop
add
add
add
add
jbe
popf
data16
add
sub
pop
call
call
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
out
jns
add
mov
add
mov
imul
add
pusha
jp
jo
add
mov
cmpsb
add
mov
test
lcall
add
add
add
mov
cmpsl
add
bound
add
cmc
add
movsl
movsl
mov
in
loopne
lcall
add
pop
pop
add
push
lea
push
lea
push
call
add
add
add
add
popa
add
add
cmc
lock
push
cmc
loope
test
cli
iret
mov
add
lods
les
add
mov
in
hlt
pop
jmp
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
add
fildl
scas
fnstcw
add
out
iret
test
gs
add
roll
enter
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
push
call
add
movsl
loope
mov
lahf
add
xchg
stos
push
loope
add
cmpsl
out
jle
jmp
pushf
xchg
call
add
xchg
mov
jmp
add
add
fsubrs
roll
fdivrl
add
jo
nop
stos
mov
stos
pop
mov
nop
add
xchg
popl
inc
hlt
push
push
lea
push
push
push
call
jle
leave
add
xchg
add
std
mov
enter
add
leave
in
gs
push
pop
add
iret
add
add
mov
fcmove
mov
mov
roll
add
mov
xchg
loope
add
pop
xchg
add
add
lcall
pop
hlt
add
push
push
push
push
push
call
add
add
add
lcall
xchg
push
fiadds
add
xchg
lret
loopne
stos
mov
add
add
filds
movb
stos
out
lahf
add
push
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
lds
cmc
mov
std
out
mov
shl
add
add
lds
add
add
jae
add
xlat
clc
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
aam
lea
add
add
lods
js
push
cmpsl
add
push
icebp
jae
xorl
mov
in
in
mov
push
push
lea
push
push
push
call
xchg
cmpsb
mov
push
push
mov
fldl
nop
add
add
add
add
testl
add
jno
enter
add
add
mov
push
mov
push
roll
push
xlat
push
add
loop
add
loop
add
mov
test
test
xor
push
push
call
add
adcl
add
add
add
fistl
stos
cmpsl
cmpb
lods
je
rorb
in
clc
lcall
les
bound
popf
lods
push
lea
rol
ror
push
and
add
rol
sub
inc
not
ror
pop
inc
sub
inc
pop
push
lea
push
push
call
xchg
hlt
add
jns
lods
add
jnp
scas
add
pop
mov
xchg
pop
into
xchg
add
fldenv
add
jae
std
add
add
add
add
add
push
push
fucomp
add
pusha
add
add
mov
lds
fdivs
out
addr16
add
lcall
jne
call
push
push
push
push
push
lea
push
push
lea
push
call
pop
lahf
sti
shl
add
mov
fnstcw
enter
add
add
add
add
pop
add
add
add
add
nop
push
add
add
add
lcall
inc
lock
push
lea
push
push
push
call
add
nop
add
pop
add
add
xlat
loope
lds
add
push
mov
push
add
add
mov
add
add
lock
out
add
sub
pop
movl
lea
push
lea
push
lea
push
push
call
mov
add
in
in
add
scas
pushf
add
add
fistpl
iret
mov
push
shr
mov
add
add
pop
add
push
pusha
mov
cmpsb
mov
jmp
mov
hlt
or
test
popa
add
xlat
iret
jno
add
in
lock
lcall
push
lea
push
push
lea
push
push
push
push
call
add
mov
push
shl
movsl
in
popa
xchg
push
filds
insb
add
test
add
lock
add
aad
add
jmp
ret
add
add
in
mov
mov
sub
pop
pushl
pushl
push
push
push
push
push
push
push
push
push
push
call
add
test
mov
roll
add
xchg
push
pop
int3
jl
add
add
add
mov
push
mov
add
fsubl
mov
xchg
lock
icebp
jle
add
add
js
add
mov
bound
add
mov
cmc
cltd
pusha
add
add
scas
lods
fldl
xchg
mov
jecxz
in
fdivr
lcall
mulb
add
pushl
push
lea
push
push
push
push
push
lea
push
push
call
test
add
add
in
jl
add
outsl
cmpsl
stos
add
mov
add
les
push
add
loope
mov
xchg
int3
mov
add
addr16
mov
imul
mov
add
addb
jbe
pop
add
add
lock
add
add
add
roll
jnp
mov
loopne
pushl
push
push
call
push
pop
fisubl
in
add
sahf
filds
xchg
fldl
add
mov
add
jmp
add
add
mov
mov
add
add
add
jo
mov
cmpsb
scas
mov
fldl
add
add
movsb
stos
mov
je
add
sub
pop
call
push
push
sub
sub
push
or
not
add
add
add
sub
xor
pop
add
inc
inc
pop
push
push
push
lea
push
lea
push
call
add
addl
xchg
in
xlat
add
mov
jns
mov
mov
xchg
add
jns
js
add
stc
jmp
shlb
out
lds
add
jecxz
in
fists
add
push
mov
add
mov
add
add
add
add
add
jne
call
push
push
push
call
pop
add
jge
add
mov
push
push
push
add
mov
add
test
add
add
push
mov
add
fiadds
add
cld
add
pop
iret
add
add
push
mov
mov
ret
jno
jmp
mov
lcall
inc
push
push
xor
lea
push
and
add
lea
add
lea
sub
sub
xor
pop
pop
push
lea
push
push
lea
push
call
add
add
mov
add
lds
fwait
aam
add
movsl
fstl
add
add
add
add
sub
pop
push
push
push
push
push
push
lea
push
call
add
jns
pop
jge
iret
out
add
in
into
add
jmp
pop
add
mov
jo
pop
int
add
add
xchg
mov
add
loope
add
xchg
incb
mov
shl
sub
pop
push
call
push
push
call
fdiv
pop
add
add
xlat
icebp
stc
in
jbe
add
add
gs
ret
xchg
mov
add
jnp
jl
add
out
in
clc
lcall
clc
push
lea
push
push
push
push
push
call
xchg
add
mov
jge
cmpsb
add
push
fildl
outsl
add
test
bound
pop
add
stos
add
push
push
add
push
add
mov
xlat
fnsetpm(287
fsubrp
popa
lret
add
pop
add
out
in
call
push
push
lea
push
push
push
push
call
lods
add
push
add
cmc
jecxz
jns
xchg
cmpsb
add
imul
enter
pushf
add
outsl
add
add
pop
add
add
add
add
in
pop
push
mov
push
push
lea
push
push
lea
push
push
lea
push
push
call
ret
stc
add
jo
lret
int3
jae
xchg
jne
fsubrs
out
mov
add
aam
cld
add
push
xchg
lods
add
add
lcall
pop
in
add
push
push
lea
push
push
push
call
test
push
jne
xchg
mov
add
enter
rcrb
insb
add
adcb
scas
in
add
scas
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
testb
arpl
sbb
out
add
into
aam
in
test
ret
add
rcrl
in
jne
cmc
push
add
in
add
jp
nop
pop
insb
stos
out
xchg
add
jne
add
testb
add
addb
imul
add
sub
pop
mov
xor
push
push
push
lea
push
push
call
pop
into
add
add
test
jmp
xchg
push
in
icebp
jge
test
add
jecxz
add
add
add
lods
in
loop
arpl
add
add
jle
mov
faddl
add
call
lcall
jne
push
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
jge
mov
fcomps
add
lock
pusha
add
mov
push
loope
add
shrl
mov
add
inc
or
pop
jae
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
je
add
mov
movsb
hlt
add
mov
mov
add
test
nop
add
xchg
ja
add
add
faddl
add
fadds
sti
add
add
jno
sub
pop
xor
push
push
push
push
push
push
push
push
call
mov
mov
mov
mov
lods
mov
pusha
subl
push
add
mov
xchg
popa
pop
lret
cmpb
aad
add
ja
add
pop
mov
rcr
lods
add
mov
pop
loopne
call
loopne
lcall
les
add
push
push
lea
push
push
push
push
push
call
sahf
movsl
add
lock
hlt
mov
sti
add
lock
push
mov
ja
adcb
add
jne
stc
mov
movsb
add
jb
mov
add
xchg
out
add
add
xchg
push
icebp
xchg
fistpl
jno
add
mov
add
movsl
add
cmpsl
addb
sub
pop
add
push
push
lea
push
push
push
call
push
jb
imul
add
add
add
pushf
insb
lahf
mov
andl
test
in
in
pop
pop
push
lea
push
call
xchg
add
iret
ret
fs
fcmovnu
add
mov
data16
push
fiadds
jecxz
lahf
add
into
jmp
int3
lods
add
bound
add
stc
xchg
movsb
data16
cld
or
mov
add
add
add
jge
int
add
push
pop
sub
pop
mov
push
push
lea
push
push
push
call
popl
sahf
push
xorl
insb
add
pop
arpl
add
loop
add
add
jne
imull
add
jecxz
add
mov
add
add
scas
mov
add
add
mov
add
sub
pop
xor
push
push
call
fiaddl
ljmp
addr16
add
mov
add
cli
movsb
pushf
int
add
add
add
fistps
roll
les
add
push
lea
push
lea
push
push
push
push
push
call
jae
add
add
add
add
mov
add
je
add
in
js
push
mov
cli
addb
mov
mov
add
jecxz
mov
orw
lds
jns
add
rolb
add
cli
sub
pop
push
mov
xor
push
lea
push
lea
push
push
push
push
push
push
call
jb
add
add
xchg
mov
push
add
test
add
lock
add
push
lock
outsl
int
pop
clc
jle
bound
enter
add
nop
add
mov
push
roll
add
lret
xchg
out
mov
in
loopne
lcall
enter
push
push
lea
push
lea
push
push
call
push
add
xchg
add
jle
add
pop
add
add
pop
add
add
push
add
in
int
add
scas
mov
xchg
leave
cli
add
lcall
push
push
push
push
push
call
add
sti
scas
roll
test
add
mov
add
add
add
std
add
add
add
mov
clc
test
jecxz
add
add
lds
jae
pusha
mov
mov
lret
xchg
pop
rep
push
push
push
push
push
push
push
push
push
push
call
cwtl
cmpsl
fidivrl
imul
add
into
hlt
add
add
add
int
cli
add
repnz
add
imul
add
add
in
push
fadds
aad
push
arpl
add
push
int3
add
test
stos
pop
add
xorl
roll
sub
pop
pop
mov
push
push
push
push
call
add
roll
xchg
int
add
outsl
in
pop
push
movl
rcrb
jo
std
aam
xchg
add
fcoml
stos
mov
add
icebp
add
xchg
ljmp
add
add
xchg
fistpl
fxam
pop
fwait
push
add
add
add
jle
add
lcall
pop
in
push
lea
push
push
lea
push
push
push
push
call
mov
add
pusha
add
imul
add
lret
add
lret
mov
add
pop
add
jns
pop
add
add
icebp
insb
lock
je
add
fwait
jp
mov
pop
bound
add
add
in
in
in
lcall
ret
add
add
push
push
push
push
push
push
push
push
call
aad
icebp
add
mov
jns
xlat
js
add
add
jle
pop
div
add
add
imul
loopne
lcall
ret
rolb
mov
push
push
lea
push
lea
push
lea
push
push
push
call
cmc
add
int
mov
mov
xchg
addl
add
add
mov
mov
stos
sar
add
add
add
pop
add
add
popa
xchg
in
pop
pop
add
cmpsb
lcall
int
add
out
add
add
add
jae
lods
add
add
add
lcall
add
push
push
push
push
push
call
fwait
xchg
aam
jno
add
add
faddl
call
loop
out
add
add
in
xchg
popa
add
jge
mov
in
lcall
les
push
push
lea
push
call
add
mov
mov
mov
add
mov
add
fcoms
jl
add
out
lahf
xchg
stos
push
push
pop
xchg
ja
push
stos
add
add
imul
jne
in
lock
mov
xor
push
push
push
push
call
ljmp
add
xchg
out
ret
mov
fiadds
pop
add
add
rcr
mov
add
ljmp
mov
push
push
push
push
push
lea
push
call
outsl
mov
add
push
xchg
fdivr
mov
add
out
loopne
add
fsts
jle
sub
pop
xor
push
push
push
lea
push
push
push
push
call
add
mov
add
jmp
mov
push
mov
aam
jno
mov
add
in
mov
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
test
add
addb
add
mov
nop
out
add
add
in
int3
scas
add
add
add
xchg
add
add
je
add
sub
pop
add
add
push
push
push
lea
push
push
push
push
push
call
xchg
add
cltd
rorl
add
add
outsl
jne
add
mov
jnp
mov
add
add
xchg
add
xchg
add
pop
add
in
roll
jb
add
add
fsin
add
sub
pop
mov
push
push
ror
shl
push
or
not
add
not
sub
not
pop
add
ror
lea
pop
push
push
push
call
add
fistps
lahf
sahf
jbe
add
les
add
mov
jb
stos
add
add
pop
add
sub
pop
pushl
push
push
lea
push
call
add
jns
jne
in
sub
add
add
add
movsl
lods
add
add
cltd
fildl
pusha
roll
iret
clc
add
add
pop
push
add
push
not
lea
pop
push
push
push
xor
sub
push
xor
add
shr
sub
sub
pop
lea
sub
rol
pop
push
push
push
push
push
lea
push
push
push
push
push
call
popf
cld
clc
movb
rcll
testb
pop
ljmp
addl
mov
mov
outsl
add
mov
rol
add
lea
push
scas
add
mov
test
clc
add
mov
push
jp
cwtl
add
scas
sub
pop
push
push
push
call
mov
int3
mov
int
movsb
roll
pop
ret
fwait
add
out
pop
mov
add
leave
cltd
cwtl
pop
add
add
add
mov
mov
iret
faddl
add
scas
add
ret
pusha
rcll
add
movsb
pop
mov
test
pushf
bound
pop
add
frndint
jne
in
clc
lcall
add
pop
call
mov
push
add
shl
pop
push
push
lea
push
push
lea
push
push
push
push
call
pop
pop
mov
imul
cli
jl
leave
add
push
out
add
xchg
imul
mov
add
add
add
lds
add
mov
lcall
push
rol
pop
mov
push
push
lea
push
push
push
push
push
call
add
jge
bound
push
jbe
pop
ljmp
enter
push
shlb
xchg
out
add
imul
enter
add
je
add
scas
std
mov
add
hlt
neg
add
add
popl
in
add
mov
add
jb
sub
pop
add
push
pop
add
push
add
pop
add
push
add
rol
add
pop
mov
xor
push
rol
sub
not
pop
add
push
push
push
push
push
lea
push
push
call
add
lods
lahf
rol
test
in
test
rolb
out
int3
add
popl
cli
std
add
mov
sub
pop
push
push
push
push
call
js
add
mov
movsb
hlt
add
in
in
mov
pop
out
add
popl
ljmp
loope
add
in
hlt
pop
mov
push
push
push
push
push
call
jecxz
add
fidivs
add
mov
flds
rol
les
xlat
jp
add
popa
jno
add
out
fstps
lahf
iret
add
aad
faddl
add
add
arpl
mov
out
add
hlt
add
popl
add
add
addr16
in
sub
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
call
lahf
add
mov
addr16
add
add
jnp
jp
xchg
add
clc
outsl
cli
mov
stos
rcll
ljmp
sub
pop
add
push
add
pop
add
push
push
call
push
add
add
mov
add
add
ret
lcall
add
add
add
add
add
in
clc
lcall
mov
xor
push
not
pop
rep
push
add
ror
inc
pop
mov
push
push
push
lea
push
push
push
call
add
add
leave
lea
imul
test
mov
add
push
addl
lea
add
add
mov
sub
pop
xor
push
push
push
push
push
call
ret
nop
add
outsl
int3
mov
add
add
sti
add
add
add
mov
fdivrl
std
shll
add
pop
jne
cmpsl
mov
add
add
jns
mov
rolb
in
faddl
add
sub
pop
add
push
push
lea
push
call
lds
add
add
add
add
imul
add
ret
out
imul
nop
add
push
push
add
add
add
xchg
movl
rolb
xchg
rolb
mov
rcrb
scas
into
add
hlt
movsl
pop
add
lcall
leave
je
mov
xor
push
push
push
lea
push
call
out
sti
mov
lcall
add
add
pop
add
pusha
stos
cwtl
movsl
add
add
add
lock
call
add
sub
pop
mov
push
push
push
push
push
lea
push
call
jo
ljmp
add
add
add
mov
cltd
mov
add
add
add
cwtl
add
in
mov
aam
add
in
lcall
adc
push
push
call
icebp
add
mov
lret
add
jp
add
movsl
pop
mov
pop
add
lea
loope
pushf
arpl
imul
add
cmpsb
pop
lods
imul
mov
insb
add
std
rcl
xchg
incb
loope
aam
mov
out
les
add
pop
add
push
shl
pop
add
push
dec
sub
lea
xor
pop
add
push
push
call
addl
mov
jb
dec
movsb
jmp
cmpsb
add
mov
add
add
add
jns
add
sbb
pop
orb
scas
add
add
fiaddl
sar
cmc
js
pushf
scas
in
int
repnz
push
loope
sub
pop
push
push
sub
not
shr
not
pop
mov
xor
push
lea
push
push
push
call
xchg
add
idiv
jb
fiaddl
push
add
add
push
add
jecxz
add
test
add
add
popf
add
add
add
aam
add
xchg
mov
fldl
add
add
add
add
sub
pop
add
push
push
push
push
push
push
push
call
add
add
add
out
add
push
xchg
add
push
mov
add
mov
in
add
add
add
leave
jmp
cmpsb
add
outsl
int3
add
add
rcrl
in
add
add
mov
lcall
rep
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
jbe
stc
mov
mov
subl
mov
repnz
mov
les
push
add
cli
add
lahf
add
jb
add
roll
in
add
in
fcompl
dec
sub
push
push
push
call
add
movsb
outsl
pop
add
in
ror
shl
add
fiaddl
sbbl
pop
pusha
jmp
pop
add
add
xchg
add
pop
xchg
add
ja
add
addl
jecxz
add
popf
lcall
add
leave
je
push
lea
pop
mov
add
push
inc
shl
pop
add
rep
push
push
push
lea
push
push
push
push
push
lea
push
push
call
ret
iret
lcall
jns
mov
cwtl
add
add
fwait
mov
mov
incb
add
mov
add
ja
mov
add
cmc
add
xlat
test
add
mov
movsb
jno
nop
pop
add
add
addr16
insb
addb
pop
pop
push
push
sub
ror
inc
push
xor
add
sub
sub
shr
pop
sub
pop
push
xor
add
ror
pop
pop
mov
push
add
pop
mov
mov
push
sub
shr
pop
jmp
push
shl
sub
shl
inc
pop
push
mov
push
push
push
push
call
out
fucomi
push
add
add
data16
add
jp
xchg
add
arpl
push
cld
aam
cmc
add
cmc
add
push
add
test
xchg
jno
xchg
xchg
add
movsl
ja
xchg
out
add
lahf
xchg
aad
add
xchg
roll
mov
pop
add
push
lea
inc
pop
push
push
ror
dec
pop
push
push
rol
ror
pop
push
push
push
push
push
push
push
push
call
jae
add
add
clc
in
mov
rolb
add
add
add
add
add
push
pusha
shrb
lea
mov
sub
push
icebp
sti
jnp
loope
arpl
iret
xchg
add
out
mov
pop
faddl
push
mov
in
push
mov
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
faddl
add
add
add
mov
add
in
add
add
fcompl
push
add
ror
pop
pop
pop
push
not
pop
pop
leave
push
lea
ror
ror
pop
ret
push
shr
inc
pop
push
mov
push
not
ror
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
add
add
lret
mulb
add
add
add
add
flds
add
xchg
lods
out
add
add
add
popa
pop
fiadds
movsl
jge
insb
mov
in
in
push
push
push
shl
rol
add
pop
push
push
shl
add
sub
add
pop
movl
addl
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
loop
jne
add
add
test
add
stos
stos
test
mov
add
lods
out
add
cltd
sarb
roll
lea
add
add
add
mov
pop
add
xchg
sub
pop
test
je
mov
push
push
lea
push
call
add
mov
int3
push
aam
add
fstpt
movl
je
divl
add
adcl
add
fmulp
add
add
add
lea
add
lret
mov
add
in
hlt
lcall
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
call
xchg
add
lret
out
imull
add
add
add
add
add
mov
add
sahf
xchg
add
jbe
scas
add
jo
rcll
mov
in
lcall
pop
push
sub
not
dec
pop
leave
ret
push
push
push
push
push
push
push
push
lea
push
call
add
scas
out
mov
add
addr16
pop
add
mov
mov
mov
mov
cmpsb
add
add
add
add
add
add
push
shl
shr
pop
mov
push
dec
inc
dec
pop
add
push
push
push
push
push
lea
push
call
add
lret
mov
pop
jno
add
xchg
mov
cmpsb
jb
add
push
add
push
add
add
xchg
xchg
mov
mov
test
add
jle
stc
shr
xchg
iret
arpl
add
lcall
push
ror
pop
push
push
ror
sub
dec
pop
push
push
push
push
lea
push
push
lea
push
push
call
icebp
add
add
int3
nop
push
stos
pop
push
les
add
popa
add
fnstsw
add
imul
hlt
add
add
sub
pop
testl
addl
push
push
push
push
push
push
call
add
mov
loopne
add
add
lea
stc
ja
add
pusha
movb
enter
arpl
leave
add
jb
mov
add
add
mov
add
loope
out
std
add
sub
pop
push
call
push
add
ror
pop
mov
push
push
push
push
push
call
add
rolb
add
add
shrl
mov
jae
repnz
mov
push
pop
mov
mov
fildl
add
in
add
add
add
jle
add
jge
leave
add
add
add
ret
out
add
data16
add
jne
push
push
push
push
push
lea
push
lea
push
call
rolb
out
loope
testl
test
rolb
std
add
outsl
lcall
hlt
mov
lret
icebp
add
xchg
add
push
stos
out
add
add
add
pop
scas
mov
icebp
lods
nop
in
add
cmc
mov
add
add
push
sub
pop
push
push
lea
push
push
push
push
call
add
push
fldl
add
cmpsb
mov
add
push
add
test
add
movsl
lcall
data16
lcall
sar
call
not
pop
cmpl
jne
pop
push
lea
push
lea
push
push
push
push
call
add
add
sbb
lods
popl
mov
test
lock
add
add
add
add
mov
mov
out
lret
negb
ja
mov
push
sub
pop
pop
push
dec
pop
pop
push
push
push
call
mov
add
call
cmpsb
mov
insb
add
push
popa
bound
cld
jno
filds
xchg
loop
add
ficoms
add
xchg
add
add
add
add
sahf
mov
imul
mov
xchg
add
hlt
clc
xchg
add
mov
mov
filds
testb
jl
xchg
jns
jb
add
sub
pop
pop
leave
push
pop
ret
push
pop
push
push
ror
lea
lea
pop
mov
add
push
push
lea
push
lea
push
push
push
push
call
lods
xchg
mov
iret
arpl
lcall
add
add
out
add
add
pop
pop
add
mov
push
push
push
pop
push
push
push
push
push
lea
push
push
push
call
in
out
add
add
add
ja
add
add
rcl
push
rolb
xlat
add
mulb
add
bound
add
add
add
add
out
add
call
in
push
movl
push
push
push
push
push
call
add
iret
push
add
add
jne
pop
cmpsl
add
out
shll
add
roll
lret
movsl
add
add
int3
sti
add
mov
aam
aam
add
add
jnp
lret
loop
xchg
jp
jge
xchg
roll
add
add
lcall
add
call
jg
push
push
push
push
push
call
nop
add
call
sarl
fwait
testb
icebp
add
add
aad
add
arpl
add
jnp
loopne
pop
add
hlt
int
fs
add
cmc
add
mov
lret
sub
pop
call
push
push
dec
add
sub
pop
call
subl
push
ror
pop
cmpl
jne
pop
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
xchg
rclb
mov
add
test
mov
push
pop
add
mov
popa
test
int3
sub
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
aam
lret
xchg
mov
stos
stos
mov
jmp
nop
mov
incb
jbe
pop
mov
rol
mov
mov
mov
test
lcall
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
enter
hlt
mov
mov
stc
add
jns
call
jp
icebp
fwait
cltd
cwtl
add
popa
out
add
add
leave
fxch
add
bound
flds
rcl
xchg
shlb
jmp
loop
add
mov
jecxz
add
xchg
mov
sub
pop
leave
push
ror
not
pop
ret
push
push
push
push
call
add
nop
movb
movsl
add
mov
mov
pop
lahf
add
jns
mov
fwait
pop
rolb
rolb
add
xchg
outsl
jge
add
fmul
add
add
add
cmpsb
insb
add
add
lcall
in
add
push
push
push
lea
push
push
push
call
in
add
push
test
mov
add
mov
lcall
add
add
out
add
add
add
negl
repnz
scas
std
mov
mov
mov
popf
aad
out
test
add
jle
mov
les
in
call
ror
ror
pop
push
push
push
push
push
push
lea
push
push
call
jmp
add
add
xlat
jle
push
jp
pop
add
mov
ret
cltd
sbbb
pushf
sbbb
add
jo
add
add
je
pop
iret
js
loope
in
call
lea
push
lea
push
push
push
lea
push
call
sar
pop
aam
mov
pop
loopne
xchg
divl
add
js
lods
loop
js
rcll
add
push
add
add
add
xchg
ret
arpl
add
push
pop
std
pop
add
pop
mov
popa
push
add
pop
sub
push
push
call
add
lds
add
add
add
add
add
add
add
add
add
sub
pop
mov
push
push
call
mov
mov
aad
arpl
lahf
add
stc
add
repnz
cmpsl
push
movsl
add
scas
add
cmpsb
fadds
add
push
popf
std
add
lcall
call
push
push
push
call
add
fwait
stos
add
scas
add
mov
pop
pop
icebp
mov
push
mov
add
fdiv
add
push
add
add
add
popf
add
xchg
popa
fiadds
add
sub
pop
add
push
add
lea
dec
pop
mov
mov
push
push
push
push
call
xchg
testl
arpl
add
loopne
add
add
pop
lods
cltd
add
fadds
add
mov
add
add
xchg
add
roll
add
sahf
addb
add
add
arpl
leave
sub
pop
add
add
push
inc
not
pop
mov
mov
push
add
pop
cmp
jne
push
push
push
lea
push
push
lea
push
push
call
mov
leave
test
mov
fwait
std
add
mov
int3
lcall
pop
shll
add
int
jge
mov
mov
add
add
add
lcall
mov
jle
add
in
cmp
jne
push
sub
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
xchg
add
add
pop
mov
add
add
add
mov
test
int3
scas
mov
mov
xchg
test
add
add
pop
add
pop
push
add
add
in
in
call
movl
push
rol
dec
pop
jmp
push
lea
push
call
test
pushf
loope
add
mov
add
add
leave
popa
mov
jp
add
add
add
add
arpl
add
add
add
add
add
movsl
jge
rolb
add
repnz
cmp
jge
arpl
inc
cld
push
lea
push
push
call
jle
add
imul
xchg
push
add
add
lods
rorl
scas
mov
add
jle
movsl
add
leave
mov
into
mov
cld
add
jns
add
and
enter
hlt
rorb
add
sub
pop
mov
sub
jne
push
pop
mov
push
rol
xor
pop
movl
push
shr
ror
add
lea
pop
jmp
mov
push
xor
inc
dec
pop
mov
push
lea
inc
pop
cmp
jne
mov
push
pop
movl
push
dec
pop
jmp
mov
push
push
push
lea
push
push
call
add
add
jle
add
into
add
mov
in
add
fiadds
add
push
push
test
jns
push
ljmp
mov
add
movsl
add
add
pop
add
push
out
add
in
in
pop
cmpw
jne
push
lea
push
lea
push
push
push
push
push
call
je
test
in
bound
insb
add
add
add
push
mov
mov
mov
fildll
outsl
mov
iret
pop
cld
je
imul
pop
mov
scas
add
out
add
lcall
inc
adc
into
dec
add
pop
movl
push
xor
pop
jmp
push
push
push
push
call
add
out
out
add
pop
add
jno
lret
add
mov
cli
add
sti
add
addr16
retw
leave
lods
test
add
mov
cli
imul
mov
popf
jno
add
lds
loope
cltd
pop
add
enter
aam
add
je
sub
pop
pushl
pop
push
push
push
lea
push
push
push
call
add
out
add
std
lds
add
imul
test
ret
xchg
fcom
popf
add
add
add
mov
imul
sub
pop
mov
mov
push
push
call
add
mov
jmp
add
add
jae
xchg
push
ja
add
lods
add
scas
add
fs
push
fadds
test
add
add
push
jnp
ljmp
push
scas
add
lret
arpl
sub
pop
mov
push
push
xor
push
sub
add
add
xor
add
sub
sub
ror
add
pop
add
lea
rol
pop
push
lea
push
push
lea
push
lea
push
call
add
add
add
add
jnp
loop
mov
add
into
add
add
add
mov
add
mov
add
add
cli
add
cwtl
add
icebp
mov
ror
push
add
push
ja
cmpsl
add
push
shl
pop
call
cmpl
je
push
push
add
push
and
add
rol
sub
sub
ror
not
add
pop
inc
sub
add
pop
push
not
pop
push
call
push
shr
pop
cmpl
je
push
push
add
lea
push
or
inc
add
not
sub
pop
sub
pop
push
pop
push
push
sub
pop
call
push
add
pop
cmpl
je
push
push
lea
xor
push
or
inc
add
sub
xor
sub
sub
pop
shl
add
shl
pop
push
sub
add
add
add
pop
push
push
shr
pop
call
push
push
push
push
call
mov
imul
clc
lahf
int
add
lods
movsl
add
mov
add
add
test
add
incb
data16
in
lock
lcall
cmp
add
int3
je
push
push
sub
xor
push
xor
add
lea
add
inc
sub
add
sub
xor
pop
sub
add
pop
push
dec
dec
sub
pop
push
call
push
add
rol
pop
cmpl
je
push
push
sub
inc
push
push
pop
add
inc
inc
sub
rol
ror
pop
dec
dec
pop
push
add
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
rcll
mov
mov
pushf
add
lock
jmp
add
mov
out
mov
fadds
jmp
push
sub
pop
call
push
sub
lea
lea
pop
cmpl
je
push
push
add
add
sub
push
xor
add
ror
sub
sub
ror
xor
sub
pop
not
pop
push
push
push
push
push
lea
push
push
call
add
imul
add
mov
cltd
nop
mov
push
vpinsrw
scas
addb
add
add
popf
mov
stos
xchg
mov
repnz
imul
add
add
lret
push
add
jns
add
add
sub
pop
push
push
push
call
ret
xchg
lds
xlat
add
in
in
icebp
add
push
addb
insb
jns
in
add
add
add
add
add
add
add
push
pop
add
add
add
nop
lret
add
jecxz
in
mov
add
fadds
add
mov
in
clc
pop
call
push
push
push
push
push
lea
push
call
add
data16
add
les
add
add
shr
insb
in
aam
add
movsb
icebp
fidivs
add
in
movsl
xchg
fwait
add
add
xchg
mov
lret
add
lcall
cmp
or
int3
je
push
push
not
lea
ror
push
and
add
inc
sub
dec
inc
xor
pop
not
pop
push
add
inc
rol
pop
push
call
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
add
add
rolb
add
add
add
cld
cltd
add
xchg
add
arpl
add
add
xchg
add
ljmp
ljmp
lcall
cmp
or
int3
je
push
push
rol
sub
rol
push
push
pop
add
shl
rol
sub
shr
ror
sub
pop
shl
pop
push
ror
shr
pop
push
push
push
push
push
call
cmpsb
pop
add
pop
add
cwtl
cmc
fiaddl
mov
pop
lret
add
mov
add
out
test
icebp
mov
add
add
xchg
add
pop
add
jo
in
lock
call
cmpl
je
push
push
shr
dec
lea
push
and
add
xor
sub
shl
inc
sub
pop
rol
shl
ror
pop
push
lea
pop
push
push
lea
push
push
call
lret
add
add
clc
stos
sahf
cwtl
mov
add
add
jl
int
xchg
xchg
icebp
int3
add
add
cmc
addr16
clc
jbe
jns
add
ljmp
jmp
sub
pop
call
cmpl
je
push
push
shr
shl
push
xor
add
sub
lea
lea
lea
sub
add
not
shl
sub
pop
ror
sub
pop
push
rol
pop
push
call
push
lea
push
push
push
push
lea
push
push
call
imul
jl
add
mov
fldenv
xchg
nop
add
pop
lcall
in
arpl
xchg
lret
repnz
lcall
add
icebp
popa
in
add
add
lcall
js
xor
ret
test
add
add
out
ja
ror
dec
push
xor
add
lea
shl
sub
ror
dec
xor
pop
shr
not
pop
push
lea
push
push
push
push
push
push
push
call
push
add
add
add
fucom
add
movsl
add
add
add
nop
add
jge
add
cwtl
add
mov
loopne
add
jbe
in
fsubrs
clc
add
mov
add
add
push
push
push
push
push
push
call
add
scas
add
add
cmc
je
add
fs
repnz
xchg
test
ficoms
jp
out
add
add
ljmp
pop
call
push
shr
ror
dec
pop
cmpl
je
push
push
lea
sub
add
push
xor
add
sub
sub
sub
dec
add
pop
sub
pop
push
push
call
add
out
add
pop
loope
outsl
cmpsb
stc
jae
data16
xchg
stos
cld
add
mov
jp
add
ror
add
add
add
jb
add
add
add
add
loopne
call
mov
add
popf
mov
push
call
push
push
push
push
push
push
call
divl
add
add
lahf
stc
popa
insb
add
ljmp
lods
lcall
mov
addl
stc
cmpsb
scas
add
out
add
in
push
imul
xchg
mov
lea
movsb
aad
test
lock
add
shrb
mov
cmpsl
sub
pop
cmpl
jne
mov
push
add
shr
pop
movl
jmp
push
ror
pop
xor
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
call
in
push
call
mov
xchg
cld
rcl
addl
add
mov
add
add
pop
add
pusha
add
lea
call
fcoml
jne
add
test
leave
aam
add
sub
pop
pop
push
sub
inc
lea
pop
pop
push
lea
shr
pop
pop
push
not
pop
leave
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
imul
add
mov
call
cmc
addr16
lcall
add
add
lcall
or
push
push
lea
push
lea
push
push
lea
push
push
push
call
ljmp
mov
add
add
add
add
std
jo
add
loopne
add
sub
pop
push
push
xor
inc
pop
mov
push
rol
add
shr
pop
add
push
push
call
je
into
add
xchg
add
popf
push
notb
in
lods
lret
insb
cld
mov
push
add
mov
leave
mov
imul
aad
add
cmpsb
rcr
add
add
xchg
mov
push
add
xchg
add
sub
pop
cmpl
jne
push
push
shl
shr
rol
push
and
add
add
shl
sub
sub
add
pop
pop
push
ror
not
pop
pushl
push
push
call
imull
in
add
add
cmpsl
flds
scas
push
std
add
mov
lahf
xchg
add
std
sub
pop
call
push
pop
push
push
dec
sub
pop
call
push
add
dec
add
pop
jmp
cmpl
je
push
sub
ror
pop
cmpl
jne
push
lea
push
call
add
mov
add
add
jbe
xchg
roll
push
add
mov
testl
xchg
jmp
add
add
arpl
push
shl
inc
pop
add
push
add
pop
pop
push
add
inc
shr
pop
pop
push
shr
not
inc
sub
pop
pop
push
add
rol
pop
pop
push
lea
push
push
lea
push
push
call
pop
xchg
jmp
movsb
cmpsl
movsl
add
add
add
lret
xchg
mov
arpl
mov
add
gs
mov
mov
pushf
add
add
mov
in
in
pop
leave
push
push
push
push
push
call
cmpsl
jle
jmp
int3
cmpsb
add
loop
add
lret
stc
cmc
mov
add
cmc
add
xchg
insb
in
add
add
add
push
nop
lret
add
in
in
pop
add
push
lea
xor
rol
pop
ret
push
lea
add
sub
sub
pop
jmp
cmpl
jne
push
push
dec
push
push
pop
add
ror
dec
sub
shr
dec
pop
sub
pop
push
sub
not
lea
pop
pushl
push
push
push
call
popa
xchg
add
enter
flds
fsubrl
push
add
push
xchg
add
add
add
lock
jno
push
mov
push
leave
mov
add
int
out
mov
in
hlt
lcall
sub
add
shl
pop
push
call
push
push
push
push
lea
push
call
add
push
jp
add
addr16
add
add
out
add
add
push
movsl
xchg
add
jb
add
pop
int
div
push
divl
add
add
add
lock
test
lock
addb
test
filds
add
test
in
pop
jmp
cmpl
jne
push
lea
push
push
call
add
add
xchg
xchg
add
add
add
add
mov
add
bound
leave
stos
into
movsb
add
aad
add
add
add
mov
push
push
push
push
push
push
push
push
call
push
bound
fcmove
mov
stos
outsl
add
add
jmp
jb
mov
add
add
xchg
add
add
in
jmp
data16
mov
add
test
add
stos
mov
scas
gs
add
xchg
lcall
push
push
ror
push
or
not
add
not
lea
shl
sub
sub
sub
sub
pop
lea
sub
pop
push
ror
xor
ror
pop
pushl
push
pop
call
push
push
push
push
lea
push
call
jle
rclb
add
lcall
cmc
xchg
lods
cwtl
add
add
movsl
add
icebp
mov
xchg
in
rolb
stos
loopne
nop
roll
fucomp
lret
bound
mov
add
shrb
pop
cmp
leave
pop
add
not
push
or
inc
add
ror
sub
add
dec
lea
pop
ror
ror
inc
pop
push
add
pop
pushl
push
inc
pop
call
push
shl
pop
call
push
push
sub
push
and
add
not
lea
sub
ror
shr
rol
pop
shl
rol
sub
not
pop
push
sub
add
rol
pop
pushl
push
pop
call
call
push
push
shl
add
lea
push
and
add
shl
dec
rol
shl
sub
sub
xor
pop
rol
xor
ror
pop
push
lea
push
call
add
icebp
sahf
lahf
test
mov
mov
popf
jge
add
jecxz
std
add
fwait
add
imul
cld
pop
pop
lcall
push
mull
ja
add
add
in
add
push
add
movsb
test
cld
push
mov
aam
jne
add
jne
push
push
lea
push
push
push
call
mov
jb
add
mov
add
add
fisubrl
shrl
jp
add
addb
insb
mov
cli
out
out
in
in
lcall
cmpsb
sub
add
sub
mov
push
push
push
call
cmpsl
xchg
add
add
scas
lods
xchg
std
pusha
add
in
xchg
je
add
jb
cwtl
push
push
fwait
add
addr16
scas
pop
xchg
add
sahf
add
add
add
add
jmp
rorb
scas
add
jmp
add
add
add
pop
jno
add
sub
pop
call
push
push
xor
push
or
inc
add
shr
add
sub
shl
add
dec
add
pop
dec
add
not
pop
push
not
pop
pushl
push
dec
ror
pop
call
push
pop
call
push
push
rol
inc
push
push
pop
add
lea
dec
add
sub
xor
not
dec
sub
pop
inc
add
add
not
pop
push
push
push
push
lea
push
push
lea
push
call
xchg
add
out
add
add
cli
fnstenv
leave
cmpsl
mov
push
mov
push
jno
add
jne
add
jns
add
addl
add
add
scas
flds
sti
add
jns
add
add
add
out
add
add
push
aam
add
mov
loop
add
add
in
in
lcall
jne
push
inc
pop
call
push
push
push
call
sti
add
imul
push
add
add
jmp
add
jecxz
add
add
ja
mov
in
imul
addl
add
lea
hlt
pop
call
push
push
inc
shr
push
push
pop
add
lea
shl
xor
sub
dec
pop
not
sub
pop
push
dec
inc
shr
pop
pushl
call
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
add
mov
add
jb
test
pop
outsl
jne
call
mov
movsb
add
out
stc
mov
add
pusha
add
pop
push
sub
pop
call
push
push
push
push
pop
add
shl
ror
sub
shr
pop
add
xor
pop
push
push
lea
push
push
lea
push
push
push
call
rolb
frstpm(287
push
add
in
add
aad
pop
push
add
add
jp
js
imul
mov
mov
pusha
rcr
sar
jo
add
add
scas
add
fldln2
xchg
in
aam
loopne
in
in
lcall
jne
push
rol
pop
call
call
push
push
sub
push
push
pop
add
add
add
sub
dec
shr
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
call
imul
add
je
test
add
xchg
pop
jmp
add
out
add
add
adcl
cwtl
push
add
add
add
movsb
enter
add
push
incb
add
jmp
stc
add
shlb
add
jecxz
pop
xchg
push
popl
arpl
pop
pushl
push
push
call
add
mov
add
call
add
mov
add
push
add
add
lock
xchg
mov
icebp
lret
add
push
sub
pop
call
call
push
push
inc
inc
push
or
inc
add
add
ror
sub
sub
add
shr
not
pop
ror
add
ror
pop
push
push
push
call
shll
iret
add
jae
add
xlat
out
stos
add
pushf
add
shr
add
add
add
stos
add
add
mov
mov
add
xchg
sub
pop
pushl
push
inc
pop
call
push
lea
not
pop
lea
push
add
inc
ror
pop
push
call
push
push
add
sub
push
or
inc
add
ror
add
lea
rol
sub
rol
sub
pop
add
pop
push
lea
pop
pushl
push
pop
call
push
push
push
lea
push
call
pop
movsl
movsb
out
out
ret
add
add
hlt
add
fwait
stc
add
pop
jp
push
lea
mov
add
shlb
std
add
shrb
loope
out
sub
push
sub
add
dec
sub
shr
pop
sub
sub
add
pop
push
push
push
push
call
add
test
add
rcll
les
idiv
in
shlb
xchg
add
xchg
add
fldl
fdivl
outsl
xchg
lea
lcall
jne
push
lea
push
lea
push
push
push
push
call
add
add
jecxz
add
mov
jmp
add
push
cltd
add
lods
add
mov
add
roll
mov
imul
pop
pushf
add
pusha
push
add
pop
add
add
pop
add
shlb
mov
call
push
sub
add
ror
pop
call
push
push
xor
push
or
not
add
shl
sub
not
shl
rol
pop
sub
add
sub
pop
push
lea
push
push
lea
push
push
push
lea
push
call
imul
xchg
mov
add
insb
fiadds
jl
icebp
add
add
add
popf
in
xchg
add
call
out
pop
push
cltd
sub
pop
pushl
call
push
shr
add
pop
call
push
push
push
push
lea
push
push
push
call
cmpsb
add
bound
mov
iret
add
hlt
mov
add
push
movsb
fiadds
add
add
imul
add
in
stos
mov
lods
add
add
sar
xlat
cmpsb
jno
add
lcall
pushf
and
ljmp
test
into
shl
push
or
inc
add
ror
xor
sub
shl
pop
add
pop
push
xor
shl
pop
pushl
call
push
inc
sub
pop
push
call
push
push
sub
dec
sub
push
or
inc
add
xor
sub
pop
add
not
dec
pop
push
push
call
test
mov
jae
add
imul
push
jp
add
lds
scas
jns
mov
into
cwtl
jge
je
loopne
sub
pop
pushl
push
sub
pop
call
push
inc
lea
pop
call
push
shr
pop
mov
push
push
ror
not
push
xor
add
lea
sub
not
pop
add
xor
add
pop
push
push
push
push
push
push
push
lea
push
call
add
add
je
cmpsl
js
in
js
add
imul
roll
mov
rolb
add
jmp
push
mov
lea
stos
add
add
loope
push
mov
in
loopne
pushl
push
push
lea
push
push
push
push
push
call
add
push
flds
mov
add
mov
scas
add
pop
fldl
sbbl
add
popa
add
pop
pushf
push
add
fwait
repnz
testl
movb
add
mov
xchg
movl
lods
pop
add
lcall
rcrb
add
push
ror
xor
pop
push
push
push
push
lea
push
push
call
rolb
add
hlt
imul
add
add
xchg
leave
testl
mov
add
mov
rcll
add
outsl
lahf
push
incb
outsl
add
mov
add
stos
arpl
add
push
iret
fldl2e
add
add
mov
add
push
add
sub
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
call
icebp
mov
movsb
add
add
sti
xchg
mov
mov
add
add
mov
jmp
add
add
aad
sub
pop
call
push
push
dec
inc
push
and
add
dec
sub
inc
shr
pop
dec
shl
dec
pop
push
shl
pop
pushl
push
not
ror
sub
pop
call
push
push
dec
ror
not
push
sub
add
sub
sub
add
inc
pop
pop
push
push
push
xor
add
add
xor
sub
sub
pop
inc
pop
push
push
lea
push
call
push
lea
add
add
add
movb
add
mov
leave
call
add
stc
add
call
push
push
add
lea
add
sub
push
sub
add
sub
sub
shr
sub
inc
pop
shr
pop
push
not
lea
lea
pop
pushl
push
not
sub
pop
call
push
lea
shr
pop
mov
push
push
push
push
lea
push
push
push
call
pushf
add
in
test
pop
aam
jmp
add
add
rcr
add
scas
testl
fsubl
lcall
pushf
and
decl
call
lds
fstpl
push
push
push
call
fsub
add
add
fiaddl
add
push
mov
add
out
add
jp
nop
popa
add
add
add
add
arpl
ret
lods
add
add
add
add
add
ret
shr
test
fdiv
pop
pusha
jge
xchg
sub
pop
push
push
push
dec
lea
add
not
pop
push
push
inc
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
xchg
popf
xchg
mov
pop
add
add
lcall
xchg
testl
mov
add
sbbl
mov
xchg
add
mov
mov
fwait
enter
add
cmpsb
movsb
call
jecxz
add
add
addb
lret
fdivr
lcall
add
xchg
lea
push
push
push
push
push
push
call
push
pop
add
add
add
stos
add
fucomip
pop
add
cld
lds
add
add
jns
xchg
mov
sti
sti
scas
movl
add
mov
add
pop
mov
add
mov
lods
jne
mov
add
scas
subb
add
add
in
loopne
lcall
add
rcrb
add
pop
pushl
push
push
push
call
add
mov
imul
push
cld
add
cwtl
cmpsb
stos
add
add
push
add
lods
mov
xchg
scas
cwtl
int3
mov
roll
cltd
cwtl
je
cmc
leave
sub
pop
push
push
rol
inc
shr
rol
pop
call
push
push
push
or
inc
add
add
shl
sub
add
rol
lea
xor
pop
add
dec
pop
push
xor
pop
pushl
push
push
push
push
lea
push
push
push
call
add
add
xchg
xchg
lds
imul
loop
test
add
add
add
outsl
add
cli
add
add
xchg
scas
push
mov
pusha
jl
add
add
lods
cmpsb
push
sub
pop
call
push
push
push
lea
push
push
push
push
call
out
lea
test
pop
push
lods
lret
lahf
jno
add
imul
add
add
add
in
out
mov
cld
cwtl
addb
cmpsl
add
jl
push
in
in
call
push
dec
sub
xor
pop
mov
pop
push
lea
push
push
push
push
lea
push
push
push
call
xchg
lret
add
lahf
add
mov
test
ljmp
add
testb
imul
add
js
add
mov
add
push
add
imul
repnz
xchg
jb
add
iret
filds
jnp
jae
add
mov
sub
pop
dec
jne
jmp
push
sub
pop
call
push
push
dec
inc
push
or
not
add
shl
sub
rol
shl
pop
add
rol
add
ror
pop
push
add
add
pop
pushl
push
rol
sub
add
xor
pop
call
push
push
push
push
call
add
iret
push
mov
add
out
mov
add
in
pop
mul
add
sbbl
in
hlt
pop
call
push
push
lea
push
push
push
push
call
aad
fldcw
push
add
imul
je
jbe
add
jmp
push
add
iret
sahf
push
clc
lret
add
nop
add
mov
add
add
add
fwait
add
fisubs
loope
push
aad
shrl
add
add
movb
in
call
mov
push
lea
push
call
fstpl
add
add
fildl
add
pop
push
push
add
test
add
divb
add
pusha
shl
add
fstl
add
add
add
mov
lds
sub
pop
lea
push
push
rol
xor
push
and
add
rol
sub
inc
lea
add
pop
ror
xor
add
inc
pop
push
ror
pop
pushl
push
push
push
push
push
push
push
call
add
add
add
add
mov
hlt
xor
add
lret
fnsetpm(287
mov
pop
add
add
clc
add
add
add
mov
pop
add
mov
pop
push
in
cmc
add
outsl
add
add
add
fs
add
pop
sub
pop
call
push
push
lea
push
push
push
push
push
call
std
fimull
add
ja
lds
add
add
add
cld
jb
std
add
fldcw
fildl
xchg
mov
in
call
call
push
push
shr
sub
lea
lea
push
xor
add
shr
xor
inc
sub
inc
xor
pop
not
rol
inc
dec
pop
push
lea
sub
sub
pop
pushl
call
push
push
push
push
push
push
push
push
call
add
lods
gs
enter
mov
mov
add
add
int3
push
std
in
enter
pop
call
push
push
push
push
call
in
add
rcr
cltd
call
add
add
in
add
les
jns
add
add
test
pop
add
add
lds
inc
cld
push
ror
sub
xor
sub
pop
lea
push
push
rol
push
or
inc
add
shl
lea
lea
sub
dec
not
sub
pop
add
shl
pop
push
xor
add
pop
pushl
push
push
push
push
call
outsl
fucomp
pop
add
cmc
push
add
outsl
pushf
stos
mov
add
mov
jo
fiadds
add
add
mov
scas
push
add
add
jbe
add
mov
mov
sub
pop
call
push
xor
dec
rol
pop
lea
push
push
add
pop
push
push
push
lea
push
lea
push
push
call
pop
mov
pop
add
add
add
add
add
pop
mov
xchg
stos
add
push
sbb
icebp
mov
test
add
shll
mov
add
add
loope
add
xchg
add
mov
aam
leave
into
cli
add
add
push
add
sub
pop
pushl
push
push
sub
inc
ror
push
sub
add
sub
add
rol
sub
rol
shl
pop
sub
shl
xor
pop
push
add
shr
rol
pop
push
push
shr
sub
dec
rol
pop
call
push
push
push
sub
add
add
sub
lea
ror
pop
shl
pop
push
lea
push
call
xchg
pusha
push
lods
scas
popa
add
add
add
loopne
add
add
add
ret
mov
add
xchg
jae
jmp
imul
jle
lret
add
scas
add
mov
lock
in
clc
pop
pushl
push
push
push
push
push
push
call
fadd
push
stos
xchg
gs
add
cmpsl
add
mov
xchg
test
out
movsl
fcoml
fstp
add
add
f2xm1
mov
fcmovnbe
add
add
mov
add
imul
push
push
add
inc
pop
call
push
push
sub
push
or
not
add
sub
inc
pop
inc
xor
shr
pop
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
call
add
fisttpll
or
add
imul
sarb
clc
xlat
add
mov
add
out
add
add
aad
ja
out
in
fcompl
loopne
add
call
push
sub
sub
pop
jmp
pushl
push
rol
pop
mov
jmp
push
push
add
shr
push
sub
add
shr
add
sub
ror
rol
pop
dec
sub
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
movb
jnp
add
push
into
fs
aad
lret
fxch
ficompl
rcl
push
jae
xchg
loopne
add
in
fcompl
jne
push
ror
pop
call
push
ror
not
sub
pop
push
push
sub
shr
shl
pop
call
push
push
ror
lea
shr
rol
push
push
pop
add
sub
sub
add
sub
pop
add
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
pop
add
add
jecxz
add
mov
add
add
mov
add
mov
mov
add
add
stc
std
lds
mov
add
call
fdivr
lcall
jne
push
push
push
lea
push
push
push
push
push
push
push
call
mov
in
add
add
mov
movsb
add
xchg
push
ljmp
mov
add
lcall
mov
lret
mov
push
xor
add
add
mov
add
add
in
jmp
push
movsb
rcrl
pushf
mov
add
repnz
jecxz
test
call
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
pop
add
mov
jle
je
push
pop
add
arpl
add
push
add
add
add
pop
stos
pop
rolb
sahf
into
add
add
jmp
icebp
add
add
sahf
bound
jge
push
sahf
shrl
lcall
call
push
push
call
movl
add
push
movsb
add
xchg
fidivs
sahf
lret
mov
jns
add
stos
add
xchg
add
iret
lods
jnp
jl
repnz
lock
add
clc
leave
lret
mov
add
stos
xchg
enter
clc
lcall
add
push
push
lea
push
push
push
push
push
push
lea
push
call
add
std
add
popf
add
add
mov
xchg
cltd
cmpsb
jno
push
shr
pop
and
into
loopne
lret
stos
cmc
movsl
add
std
add
add
rcl
mov
add
addl
add
rol
shl
pop
pop
push
push
push
push
push
push
push
push
call
faddp
out
jo
xchg
mov
in
std
mov
popf
xchg
imul
add
add
add
add
mov
add
nop
add
mov
pop
pop
push
xor
lea
pop
leave
push
push
lea
push
call
insb
lcall
add
push
push
movl
gs
add
add
jmp
cli
xchg
add
lcall
les
push
not
lea
shr
sub
pop
leave
push
dec
shr
rol
pop
ret
push
push
rol
pop
mov
push
sub
pop
cmpl
jne
mov
push
rol
inc
pop
jmp
push
dec
pop
mov
push
sub
not
lea
pop
and
push
dec
pop
xor
push
push
push
push
push
push
lea
push
push
call
lods
insb
add
add
popa
xchg
add
add
add
mov
add
in
add
leave
rolb
test
mov
cwtl
mov
cltd
add
add
mov
into
mov
add
add
gs
sub
add
sub
pop
xor
push
push
push
push
lea
push
push
call
add
fidivl
lods
stos
les
add
iret
mov
fs
jo
add
int3
mov
add
jne
shll
repnz
hlt
add
mov
pusha
mov
lcall
add
cmpsb
add
test
mov
sub
pop
add
xor
push
push
push
push
push
push
push
push
lea
push
call
pop
call
push
in
add
in
add
aad
out
mov
push
add
xchg
movsl
add
movb
in
mov
add
add
sub
pop
dec
push
lea
push
push
push
lea
push
push
push
push
push
call
add
lods
add
lret
add
add
add
out
add
xchg
add
add
add
add
add
lcall
jmp
jmp
push
push
push
call
mov
std
notl
lods
add
mov
add
add
mov
add
add
stos
scas
pop
out
push
add
loop
add
mov
xchg
xchg
fsts
add
ret
rolb
add
std
outsl
add
pop
sub
pushl
push
push
push
lea
push
call
in
mov
in
add
add
ljmp
jp
add
outsl
jb
out
mov
pop
push
add
outsl
pop
add
out
mov
mov
mov
int3
mov
add
add
add
jl
nop
mov
sub
pop
pop
sub
push
shl
pop
cmp
jne
push
add
ror
pop
mov
lea
push
push
call
bound
test
add
jl
add
js
pop
xchg
enter
add
pusha
pusha
add
add
scas
gs
add
imul
cli
add
mov
jns
pusha
push
add
imulb
push
testl
inc
jecxz
add
sub
pop
sub
push
push
push
lea
push
push
call
ret
aad
add
mov
stc
add
pop
add
add
add
shll
out
fsubs
clc
mov
add
roll
fxch
mov
out
add
xchg
add
add
mov
shll
add
jl
mov
add
pop
add
add
mov
shr
push
ror
ror
pop
add
sub
push
push
call
leave
push
add
clc
out
mov
push
xchg
add
stos
out
stos
add
add
add
add
rcr
add
add
imul
mov
add
pop
add
lcall
add
add
add
lds
lock
ja
in
clc
lcall
xor
lea
push
push
push
push
call
add
mov
frstor
cmpsl
add
xlat
lahf
add
add
enter
addb
add
lcall
push
ror
add
add
not
pop
shr
push
rol
pop
and
sub
push
push
call
add
mov
add
add
add
add
add
scas
add
add
push
add
bound
outsl
popf
add
aad
pop
addr16
rolb
pop
xchg
call
in
imul
mov
add
lcall
stc
sbb
test
dec
push
add
sub
shr
pop
ret
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
xchg
mov
cmp
xlat
jb
xchg
jae
add
add
mov
subl
mov
add
ljmp
mov
pop
in
pop
mov
jae
stos
add
mul
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
cli
imul
test
add
aad
add
mov
stos
mov
jmp
add
add
mov
rcrb
pushf
movsl
pop
mov
add
imul
add
add
mov
add
add
testl
jbe
in
loopne
lcall
in
push
dec
add
rol
dec
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
xchg
outsl
sahf
cmpsb
rol
add
loop
aad
gs
jne
cmc
add
cwtl
add
insb
ret
mov
add
aam
leave
add
add
add
xchg
xchg
add
add
add
add
push
add
add
add
bound
add
shrb
in
fdivr
lcall
push
push
push
push
push
push
push
push
call
mov
add
lret
add
add
add
add
sarb
xchg
pop
add
pop
push
mov
add
push
roll
cld
incb
mov
sub
pop
push
push
lea
xor
pop
push
push
inc
pop
push
push
add
pop
mov
lea
push
rol
not
pop
sub
push
lea
push
lea
push
push
lea
push
push
call
movsl
fidivl
add
add
shrl
add
hlt
lods
lahf
lea
add
push
mov
add
loopne
add
pop
shrl
cmc
movb
shlb
add
add
addl
loop
loope
sub
pop
mov
shr
push
add
ror
pop
add
push
pop
mov
push
lea
push
push
lea
push
push
call
add
pop
rcrb
scas
enter
xchg
pop
add
imul
sahf
xchg
mov
mov
mov
jnp
add
add
xchg
add
repnz
popf
outsl
add
add
jecxz
add
add
lcall
pop
or
dec
push
push
push
push
call
add
mov
mov
aam
add
mov
pop
xchg
orb
add
lods
push
test
add
stc
add
add
add
add
lock
xchg
sti
lahf
lds
imul
jle
in
call
push
push
push
push
push
call
mov
add
mov
push
add
add
mov
lret
xchg
scas
add
jne
pop
stos
jle
sbbl
add
bound
add
cli
mov
mov
add
cltd
mov
clc
sub
pop
xor
push
push
push
push
push
push
push
push
call
jo
mov
add
add
cmpsb
mov
andb
xchg
add
push
out
pop
add
repnz
stos
mul
add
sahf
add
add
imul
mov
bound
add
in
ja
arpl
mull
stos
jp
add
popf
mov
lcall
xlat
and
push
push
push
push
lea
push
push
push
push
push
call
add
cmpsb
add
movsb
push
loopne
add
add
in
add
add
pop
add
add
sub
pop
rol
rol
push
push
call
fistl
add
pop
push
add
xchg
xchg
stc
movb
add
movsl
add
jns
add
jmp
add
addr16
stos
add
add
add
add
lods
push
mov
add
push
add
sub
pop
xor
push
shr
shr
pop
inc
cmpb
jne
push
push
call
leave
xchg
imul
loopne
add
add
add
add
add
add
add
out
add
outsl
into
enter
add
add
cmp
je
push
push
lea
push
call
add
mov
in
jbe
ljmp
outsl
add
outsl
stos
add
xchg
mov
xchg
add
jb
add
add
fisubs
int
add
pop
repnz
fsubl
jno
cmc
mov
push
add
mov
hlt
lcall
ret
adc
push
push
call
add
pop
testb
loop
add
pop
add
mov
add
popf
leave
popf
xchg
add
faddl
data16
pop
outsl
add
add
negb
fildl
enter
movsb
xchg
scas
rol
ficoms
jae
mov
jmp
add
rol
or
add
lcall
jnp
add
test
cld
pushl
rclb
push
dec
pop
pop
push
inc
dec
add
add
pop
pop
push
pop
pop
push
push
call
add
add
add
jecxz
xchg
add
xchg
add
add
outsl
cwtl
add
test
mov
add
add
movb
lds
enter
pop
mov
lock
xchg
add
cltd
mov
in
rcl
add
add
int3
jp
xchg
pop
add
lcall
xchg
pusha
call
cwtl
cmp
lcall
leave
push
push
push
push
lea
push
push
push
push
push
call
jecxz
mov
add
jmp
add
std
add
enter
add
add
add
add
sub
pop
ret
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
stos
add
add
roll
data16
addl
add
fnstenv
add
movsl
fwait
mov
mov
add
push
lcall
push
adc
inc
jne
call
add
add
add
pushf
lahf
mov
testl
pop
lds
fwait
adcl
mov
out
xchg
jno
add
push
scas
fstpt
mov
addb
jmp
lcall
add
add
add
sub
pop
add
push
dec
pop
push
push
push
not
ror
pop
add
push
pop
mov
push
lea
push
call
add
gs
mov
pop
add
fsubs
in
stos
addr16
add
pop
mov
add
add
test
add
andl
clc
pop
testw
push
lea
push
push
lea
push
push
lea
push
call
add
scas
mov
stos
rol
push
test
add
icebp
scas
cli
add
andb
add
in
add
lcall
test
sub
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
xchg
popa
add
add
jbe
out
icebp
jbe
add
add
outsl
mov
add
add
subl
jmp
add
push
imul
add
jnp
add
add
add
add
test
scas
push
aam
add
xchg
push
jmp
add
mov
mov
push
cmpsl
push
add
xchg
sub
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
cmpsl
out
mov
add
add
add
add
add
add
fcomps
out
insb
push
add
add
push
sahf
pop
bound
out
fiaddl
test
jns
lods
add
call
add
testl
fnstenv
pop
call
xor
push
lea
push
call
mov
add
nop
fiadds
jmp
imul
add
sti
pop
xchg
add
scas
add
add
out
add
add
add
mov
insb
add
jl
stos
push
jge
fisubrs
mov
add
leave
mov
jmp
xchg
mov
fcomps
rol
add
sub
pop
pop
push
lea
pop
pop
pop
push
add
not
dec
sub
pop
pop
push
xor
rol
pop
pop
leave
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
aam
add
loopne
mov
add
leave
sahf
in
addb
xchg
je
add
add
add
aam
arpl
xchg
mov
add
add
add
cmc
add
iret
roll
outsl
mov
add
popa
add
lcall
or
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
xchg
fdivrl
add
add
jp
pop
mov
jae
push
jno
pop
cltd
xlat
mov
imul
ljmp
add
in
add
pop
add
cmpsb
fiadds
add
lcall
push
dec
pop
mov
push
push
call
add
cmc
add
imul
cld
in
mov
mov
xchg
les
mov
in
add
add
lcall
hlt
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
mov
pop
rcll
push
add
fstpl
add
mov
add
enter
icebp
mov
lods
pop
movsl
mov
push
add
lea
stc
scas
add
cmc
mov
push
add
repnz
add
lods
cmpsl
add
sub
pop
push
push
push
lea
push
lea
push
call
xchg
out
pop
add
fiaddl
add
je
ja
lods
ljmp
test
jl
shl
jb
nop
add
jl
mov
add
xchg
add
stc
add
mov
jae
mov
call
cmc
xchg
hlt
int3
add
in
hlt
lcall
push
sub
shr
pop
mov
push
lea
add
pop
push
pop
push
lea
push
push
call
add
leave
xchg
in
push
mov
popf
clc
imul
aam
mov
decb
jl
jae
add
push
scas
imul
push
jne
out
andb
add
cmc
lahf
add
sbbl
movsl
fistpl
movsl
add
aad
std
mov
push
add
sub
pop
lea
sub
push
inc
shr
pop
mov
push
shr
add
sub
rol
pop
shr
push
push
push
push
lea
push
call
add
add
nop
add
gs
mov
test
movb
jge
test
add
add
add
jnp
cmpl
add
add
add
test
popf
jp
outsl
cmpsb
mov
in
lcall
ficoml
push
push
push
push
push
push
push
lea
push
call
add
fucomi
shrb
add
jb
fiadds
flds
stos
cli
add
add
incb
aad
add
push
jnp
add
add
sub
pop
mov
add
push
rol
sub
pop
pushl
popl
push
inc
shr
lea
add
pop
mov
add
push
shr
pop
xor
lea
push
ror
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
pop
testb
push
add
pusha
add
pop
add
add
jge
lods
add
js
add
push
add
jb
add
add
add
shl
add
add
add
add
add
lcall
shll
rclb
push
lea
push
push
push
lea
push
call
test
loope
mov
add
jle
add
mov
pop
fs
mov
add
pop
add
in
mov
addb
jne
lret
sarl
cmpb
push
iret
js
mov
jnp
lods
add
xchg
popf
sub
pop
rol
push
sub
add
shl
pop
nop
nop
push
dec
pop
xor
push
push
lea
push
push
push
push
push
call
addl
add
xchg
scas
add
add
test
fildl
mov
out
fadds
add
add
add
add
pop
cmpsb
add
in
in
nop
push
rol
add
shl
pop
nop
inc
push
push
lea
push
push
lea
push
push
push
push
push
call
push
push
jbe
nop
roll
imul
je
pop
jle
mov
push
jns
pop
jbe
int3
add
std
mov
add
outsl
popa
pusha
add
mov
add
popf
mov
add
pop
add
outsl
add
lcall
nop
push
push
lea
push
push
push
push
push
push
push
call
push
add
mov
jno
mov
add
lret
push
add
add
add
lcall
loope
mov
add
jge
in
fcompl
cmp
jne
push
push
lea
push
push
lea
push
call
cmc
xchg
add
add
add
jae
lods
shlb
add
jne
test
imul
add
shl
add
fwait
in
add
in
in
lcall
inc
pop
ss
push
ror
pop
nop
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
imul
out
add
stc
add
roll
fldl
xchg
in
add
add
fildll
add
insb
xchg
jmp
add
movsb
test
popf
add
int3
add
mov
loopne
lcall
push
not
sub
pop
cmp
je
push
lea
push
push
push
push
push
push
push
push
lea
push
call
call
add
add
add
add
xchg
mov
add
outsl
mov
icebp
add
add
mov
add
add
add
jp
call
add
add
in
add
lea
jo
repnz
out
leave
sub
pop
nop
nop
push
lea
push
push
push
push
push
push
push
call
add
add
jge
add
insb
add
les
mov
mov
lret
scas
push
jmp
xchg
add
add
shl
pop
add
testb
push
lahf
loop
aam
add
jb
fcomps
int3
mov
clc
faddl
lea
test
add
int
aad
movl
stos
out
sub
pop
inc
nop
push
push
push
call
mov
jecxz
nop
add
pop
jge
iret
push
xchg
add
add
add
fadds
add
xchg
mov
popa
push
add
add
add
push
pop
cmp
jb
push
add
add
pop
xor
push
push
push
call
mov
add
add
out
add
mov
test
add
add
mov
jecxz
out
jno
add
push
add
iret
std
roll
mov
sarb
lock
add
add
icebp
add
add
movsl
mov
lcall
stos
add
add
testl
pop
movzwl
push
push
push
push
call
and
pop
add
add
js
add
vpcomltuq
sbbb
push
add
movl
fldl
out
add
jb
add
jmp
mov
in
lock
lcall
inc
sbb
push
call
popf
mov
add
add
jle
cmpsl
add
arpl
pop
out
add
int3
pushf
push
ret
add
test
xchg
pop
add
add
mov
pop
mov
add
mov
xchg
data16
cmpsb
bound
push
add
ret
les
mov
mov
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
movl
lods
add
mov
jne
cmc
iret
add
in
add
add
mov
mov
outsl
add
add
les
add
add
add
add
add
lcall
dec
hlt
push
push
push
push
push
push
push
push
push
call
jge
xorb
add
loopne
js
pop
mov
add
add
insb
test
loopne
add
jo
push
sti
mov
nop
lahf
iret
push
add
lret
movsl
addb
mov
jp
pop
mov
add
into
jmp
ja
pushf
add
add
add
ja
loopne
nop
sub
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
push
call
push
add
shrl
ja
call
add
decb
add
add
fildl
add
sahf
add
xchg
add
add
add
sub
pop
xor
push
shr
pop
shl
xor
push
xor
sub
pop
shl
xor
push
dec
rol
add
dec
pop
shl
push
push
push
push
call
fiaddl
push
mov
sbbl
cmpl
add
add
jns
add
add
in
test
add
xchg
xchg
int
add
add
jae
add
mov
push
add
and
lock
xor
push
push
lea
push
push
lea
push
push
call
pop
add
add
add
add
add
fabs
xlat
iret
stos
mov
movsb
mov
aad
lahf
cmpsl
add
lea
add
cli
push
add
push
add
add
call
mov
push
push
push
call
add
add
add
frstor
add
jmp
lea
mov
out
ja
add
in
add
flds
cmpsb
add
add
pop
push
mov
addb
imul
add
mov
lahf
add
cli
add
sti
jo
lret
mov
enter
mov
add
add
add
add
lcall
inc
hlt
push
push
push
push
call
jmp
push
push
add
int
add
scas
shr
imul
add
test
jae
stos
push
ret
sahf
push
add
pop
or
mov
fidivs
sub
pop
pop
push
lea
push
call
stos
add
add
add
add
add
add
add
leave
fmull
out
icebp
test
mov
clc
pop
pop
pop
push
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
call
lret
mov
mov
fcompl
cltd
imul
ja
ja
add
in
scas
add
mov
jns
cbtw
test
push
lea
push
push
lea
push
push
push
push
push
call
add
add
push
mov
pop
mov
pusha
imul
js
add
add
jecxz
imul
lcall
or
push
push
ror
pop
mov
push
pop
push
push
push
lea
push
push
push
call
js
sti
mov
stos
add
xchg
int
mov
out
add
add
xchg
mov
popa
add
sti
sahf
push
sti
add
int
arpl
jns
call
mov
add
add
data16
jl
add
add
jo
jmp
aad
mov
add
mov
std
xlat
popf
sub
pop
push
push
push
push
push
call
add
add
xchg
pop
add
add
jo
icebp
lods
add
add
fdivl
rolb
jae
add
add
loopne
subl
mov
jecxz
out
xchg
push
mov
in
jmp
add
insb
add
xchg
shlb
mov
jmp
stos
jb
push
pop
jno
sub
pop
mov
push
rol
add
pop
mov
push
add
xor
pop
mov
push
push
call
add
subb
lcall
pop
enter
add
jecxz
mov
nop
popl
imul
jnp
jne
add
mov
mov
test
mov
add
jns
add
mov
nop
imul
outsl
cmpb
add
add
rorb
test
jno
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
add
std
rorb
cwtl
int3
jo
xchg
mov
cli
jmp
add
pop
mov
mov
movsl
leave
lcall
add
add
scas
mov
jns
jecxz
stos
add
jo
insb
lock
add
add
add
jl
fldl
xchg
mov
sahf
add
lcall
testb
xor
push
mov
ja
adc
push
push
call
je
fadds
out
movsl
lods
sahf
lea
add
fadds
mov
add
jecxz
mov
add
add
add
stc
jle
add
insb
add
pop
add
mov
mov
push
in
lock
mov
push
add
lea
pop
mov
mov
push
lea
push
push
call
push
popf
mov
add
add
stc
mov
add
scas
fiadds
xchg
add
fwait
test
jnp
sub
pop
inc
cmp
je
push
lea
push
push
push
push
lea
push
push
call
pop
mov
fdecstp
mov
stos
add
rclb
add
add
xchg
in
lahf
push
imul
add
add
jbe
add
addr16
sub
pop
test
je
push
push
push
call
add
mov
cmpsl
add
add
lret
outsl
cmp
xchg
lcall
add
stc
add
in
add
jge
xchg
fnstenv
pop
add
pop
gs
mov
mov
add
add
xchg
vphadduwd
add
incb
sub
pop
mov
push
not
rol
pop
inc
push
shl
xor
shl
shl
pop
cmp
je
push
push
push
push
lea
push
call
push
les
add
add
addb
lods
pop
ret
add
jnp
add
add
add
jge
add
js
test
bound
scas
pop
lds
mov
mov
out
mov
pop
stc
stos
rcr
add
loopne
add
add
add
ret
in
lcall
rorb
arpl
pushl
rclb
popf
pop
pop
push
push
push
push
push
call
mov
add
popf
add
add
lcall
add
add
jnp
xchg
rcr
add
add
jge
xchg
add
push
add
add
loopne
outsl
add
ljmp
mov
add
add
mov
mov
in
add
sub
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
pop
add
divl
add
add
add
test
push
add
leave
mov
call
mulb
out
add
call
in
popf
lea
add
shl
aad
pop
jmp
add
mov
jp
lock
pop
pop
pop
push
sub
dec
pop
leave
push
dec
lea
ror
inc
pop
ret
push
shr
pop
mov
inc
push
dec
xor
pop
cmp
jne
lea
push
rol
lea
shl
pop
mov
push
push
lea
push
push
push
push
push
call
pop
lcall
add
add
add
into
jp
add
add
cmpsl
pusha
ret
push
add
mov
add
pop
test
je
mov
push
sub
inc
add
pop
add
push
add
pop
cmp
jne
mov
push
sub
pop
test
je
push
dec
dec
lea
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
add
add
sbbb
add
add
jo
add
push
cltd
mov
jmp
fildl
add
iret
add
add
cmpsl
aad
add
mov
js
add
add
lcall
roll
lea
push
push
lea
push
push
push
push
push
push
push
call
movsb
call
add
idivl
add
add
xchg
stos
push
add
xchg
movb
mov
add
mov
mov
push
in
fcomps
loopne
test
push
lea
push
call
icebp
xchg
add
mov
add
frstor
add
add
popa
pushf
add
add
aam
add
enter
add
gs
std
int3
pop
loope
mov
popf
stc
mov
in
hlt
pop
jmp
push
push
call
jbe
adc
test
xchg
add
out
ljmp
add
push
stc
mov
add
add
mov
enter
mov
xor
push
sub
ror
add
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
xchg
add
add
arpl
add
mov
lahf
mov
add
add
add
add
rolb
mov
fisubl
add
loope
mov
in
in
in
add
bound
lea
lcall
push
not
pop
pop
push
not
shr
not
pop
pop
push
lea
push
lea
push
push
call
add
add
mov
xlat
mov
int
imul
sti
std
add
int3
lea
data16
add
add
fwait
jo
add
cltd
lahf
sarb
flds
mov
add
add
int3
add
loope
mov
aam
add
push
mov
add
mov
lock
leave
ret
push
pop
lea
push
xor
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
aam
add
mov
add
jno
lret
testb
jp
jno
add
fadd
movsb
test
push
mov
lret
add
outsl
push
add
outsl
ficompl
add
fiaddl
fildll
xchg
out
xchg
add
in
cld
add
in
fdivr
lcall
push
lea
push
lea
push
push
push
push
call
add
push
xchg
mov
lds
mov
jmp
shll
xchg
sahf
loop
cmpsb
mov
scas
in
add
mov
aad
imul
icebp
xchg
add
lcall
push
push
push
push
push
push
push
call
add
pop
add
fadds
mov
mov
fildl
pop
add
add
fsubrs
add
clc
pop
mov
add
xchg
xchg
add
add
add
add
xchg
mov
fistps
mov
jmp
in
ja
flds
xchg
mov
clc
add
push
aam
sub
pop
pop
leave
push
push
push
push
push
push
lea
push
lea
push
call
mov
mov
mulb
loopne
push
leave
test
nop
lods
add
fs
aam
xchg
jecxz
test
add
loope
test
add
in
fnsave
hlt
pop
add
mov
jno
roll
mov
add
add
mov
imul
add
lds
lcall
or
push
dec
not
pop
mov
pop
push
push
push
push
call
xchg
movsl
lods
out
in
fsubr
add
sarl
clc
jmp
add
lahf
add
add
std
pop
lds
add
aam
subl
add
add
add
push
add
pop
mov
sub
pop
pop
pop
push
sub
pop
pop
leave
push
lea
push
lea
push
lea
push
push
push
call
repnz
movsl
call
leave
xchg
ljmp
mov
add
jle
out
jmp
pop
fdivl
add
add
add
jnp
iret
jbe
roll
pop
ret
test
jae
xchg
gs
test
ja
test
jae
mov
push
dec
jae,pn
ret
push
test
push
test
push
dec
xchg
jno
pop
push
or
inc
or
inc
push
pop
sub
push
int3
jge
jne
adc
xchg
es
mov
dec
lret
fsubl
add
aad
je
mov
mov
and
cmpsl
add
mov
push
cld
xor
enter
dec
adc
fildll
xchg
call
push
xchg
mov
pop
mov
dec
mov
or
fsub
push
and
lcall
dec
pop
xchg
push
mov
and
ret
jnp
dec
push
mov
mulb
adc
mov
lret
push
out
lahf
ljmp
xchg
pop
int
mov
call
out
add
jmp
dec
inc
in
test
clc
add
lods
cmp
pop
inc
je
cmp
xchg
jge
mov
mov
adc
inc
push
mov
lret
faddl
jno
cmp
test
pop
pop
lds
ficoml
fwait
dec
sub
mov
fsubl
mov
dec
rcll
mov
cmp
push
leave
movsb
mov
inc
push
dec
cmp
dec
fists
std
loope
popa
out
popa
stos
xchg
dec
dec
stos
cmc
stos
addl
fmul
orl
cmp
rcl
mov
lods
jl
test
sbb
adc
jbe
lods
into
adc
into
pop
arpl
xchg
sbb
jae
cmp
or
and
in
popa
test
fdivrp
popf
cmp
aad
sub
js
jbe
sahf
xor
xor
push
sbb
stos
shlb
sbb
pop
pop
jns
jecxz
cmpl
mov
ds
add
and
add
out
mov
pop
jbe
dec
repnz
xchg
jb
mov
inc
pop
pop
cld
mov
mov
in
mov
scas
out
xchg
dec
outsl
sub
and
xchg
pushf
lods
flds
shr
sar
fisubrs
shlb
loop,pn
sahf
fwait
in
dec
icebp
xchg
hlt
loope
push
fidivrs
and
sbb
mov
call
rcll
aad
pop
jge
insb
lret
mov
les
out
and
and
mov
scas
or
js
mov
dec
out
mov
shrl
jae
cmp
xchg
or
pop
cmpsb
inc
add
xor
ret
adc
xor
pushf
loopne
inc
inc
dec
xchg
mov
mov
push
mov
arpl
in
out
push
cmp
push
inc
dec
insl
pop
dec
leave
lock
aam
fsts
divb
orb
js
pop
mov
sbbb
mov
mov
cmp
mov
cmpsb
jbe
mov
addr16
insb
inc
test
mov
inc
icebp
inc
fildll
or
test
clc
cmp
dec
ret
pop
mov
imulb
xchg
add
in
sub
xor
cld
into
xor
imul
push
mov
pushf
lock
inc
xchg
pop
add
std
outsl
icebp
xchg
xor
inc
scas
xchg
mov
adc
pop
out
ljmp
call
push
stos
movsl
mov
mov
and
movsb
xchg
mov
in
aas
pop
add
and
mov
adc
scas
xchg
bound
dec
pop
add
ret
mov
pop
lcall
mov
into
dec
testb
push
or
mov
sbb
jecxz
sub
push
sbbb
in
mov
fcmovnbe
divb
in
test
dec
aas
es
lret
mov
scas
push
repz
sarb
jl
outsl
xor
pushf
test
dec
movsl
and
loope
insb
test
jmp
xor
popf
lahf
inc
inc
dec
fistps
aam
addr16
or
jno
shll
nop
xchg
int3
sub
bound
mov
pop
mov
xchg
push
jg
jns
das
movsb
enter
imul
dec
hlt
jge
stc
xchg
cmp
dec
dec
aam
jg
mov
mov
jge
in
push
xor
mov
fimuls
mov
mov
cmc
les
xlat
xor
jg
adc
jg
push
cmpl
adc
adcl
cs
push
imul
adc
ret
jae
push
sub
jmp
loope
inc
mov
inc
add
adc
xchg
rclb
mov
cmc
sbb
cmp
xor
fwait
adc
ss
and
xchg
xor
or
or
repnz
mov
xchg
push
push
xchg
repz
sarb
adc
in
ljmp
pop
xlat
adc
cli
push
mov
dec
outsb
push
sbb
push
les
jecxz
xor
dec
mov
aaa
pop
pop
cmp
mov
mov
sbb
inc
dec
sbb
fdivrp
mov
rorl
cmp
ja
and
push
lret
in
mov
sbb
pop
mov
fadds
or
adcb
out
xor
or
mov
hlt
ror
cld
lds
push
ret
sub
pop
jmp
js
imul
mov
jg
dec
cmp
test
mov
scas
popf
add
add
sahf
dec
sub
pop
movl
test
lahf
push
cmp
jo
pop
adc
shl
lods
dec
push
stc
mov
sub
lods
push
or
lds
mov
cwtl
xchg
cmc
clc
test
or
pop
loope
adc
sbb
and
sub
mov
xlat
add
in
pushf
scas
mov
inc
repnz
jbe
add
fwait
mov
adc
cli
repz
fmull
xor
push
and
ja
int
jae
and
pop
scas
outsl
pusha
cmpsl
jnp
dec
mov
push
in
ret
pop
mov
jl
mov
test
pop
mov
lcall
mov
mov
sbb
cmp
in
or
fcoms
inc
push
push
loop
insb
lcall
arpl
movsb
std
adc
in
xor
repz
sub
inc
fs
stc
data16
inc
mov
aas
sbb
orl
test
ja
aas
push
pop
movsb
mov
lret
fwait
sbb
pop
push
add
jb
add
xor
sbb
inc
hlt
dec
in
mov
dec
insb
jae
mov
fnstsw
ljmp
inc
pop
in
cltd
testl
imul
rorl
push
clc
inc
mov
mov
or
ficoml
dec
add
mov
xor
push
push
sbb
dec
cmp
sbb
sub
mov
popf
mov
sub
pop
inc
mov
out
stos
push
adc
sti
insb
and
jle
ret
test
mov
mov
mov
sub
mov
outsl
dec
add
imul
or
out
decb
xchg
mov
pop
pop
ss
dec
ljmp
pop
mov
xor
je
adcl
push
loop
mov
mov
jecxz
cmp
and
mov
cmp
xchg
and
and
insl
lods
std
sbb
pop
sub
or
popa
jecxz
cld
je
or
shl
lods
jo
cltd
push
mov
in
cli
aam
sbb
loope
movsl
popf
pop
ja
fisubrs
cmp
fcomps
mul
aaa
ret
es
cli
mov
xlat
fstps
xor
sbb
mov
out
adc
jo
pop
imul
aas
dec
mov
ljmp
fwait
add
ss
mov
fwait
xor
pop
inc
addl
rcl
xchg
sbb
int
sbbl
pop
and
ljmp
or
sti
and
adc
jmp
adc
gs
inc
inc
fdivrs
bound
repnz
scas
mov
or
sbb
shl
insb
neg
adc
inc
lock
es
push
jae
cmc
mov
fadds
and
xchg
idivb
sbb
popf
fwait
push
xchg
dec
dec
je
imul
add
adc
std
in
sub
das
bound
sbb
stc
dec
push
fcoml
mov
fiadds
popa
lret
fs
enter
or
add
movb
xchg
jbe
jno
stos
inc
or
sbbl
mov
rcl
lret
dec
sbb
les
pop
sub
mov
ds
adc
cmp
mov
cli
sub
ljmp
test
pusha
adc
ret
outsl
bound
inc
fxsave
cmp
test
and
xchg
in
or
or
dec
lock
push
dec
and
jo
sub
add
lods
idivl
dec
jb
ds
xchg
push
data16
fs
out
loop
xor
rorb
ret
das
cmpsl
pop
dec
icebp
cmp
mov
aad
lcall
fimull
push
in
or
xor
lret
push
mov
pop
mov
cmp
sbb
xor
fildll
or
sbb
popa
aam
mov
ja
jmp
cmp
mov
mov
je
popf
xor
lods
inc
cmp
daa
nop
roll
rcl
subb
int
nop
and
es
jne
xor
cmp
pushf
popf
sbb
shl
xor
adc
leave
or
dec
mov
inc
popa
ror
nop
call
lea
jb
mov
arpl
les
sahf
pop
rolb
adc
jg
jle
stos
dec
ss
js
sbb
outsb
pop
add
int
repz
dec
aas
mov
cmpsl
outsb
popa
and
mov
xor
cmp
dec
mov
enter
rcl
data16
mov
loope
shl
sahf
push
flds
inc
push
lret
loopne
fldenv
cmp
les
and
mov
fistl
lea
push
test
clc
add
arpl
xor
jge
xchg
cmp
fcompl
lods
add
pop
dec
icebp
inc
and
cmc
nop
nop
and
sbb
mov
out
rcr
fst
xor
stos
ljmp
add
rclb
daa
leave
or
mov
sbb
into
jg
sub
xor
stc
cwtl
ds
out
add
xchg
cmp
push
ss
jno
imul
inc
loopne
and
pop
ja
xchg
adc
and
or
daa
jmp
add
pop
inc
xor
ljmp
pop
rol
adc
xor
aaa
outsl
into
pushl
mov
add
sbb
sbb
sub
orl
sti
add
or
push
dec
or
mov
pop
dec
or
push
mov
sahf
inc
rolb
or
mov
pop
scas
call
inc
orb
ss
enter
movsl
add
movsb
sti
cwtl
popa
pushf
xchg
mov
idivb
jnp
sub
aaa
and
rcl
incb
pushf
jmp
xor
push
divl
and
psllw
in
mov
lahf
xor
imul
rcll
mov
aas
xchg
xor
ret
lahf
int3
mov
and
loope
lods
jbe,pn
push
cmp
xchg
cmove
inc
or
addr16
ja
testl
sbb
inc
mov
shlb
std
jge
mov
test
mov
pop
pop
lock
lods
testl
push
fsts
adc
dec
lret
mov
outsb
jg
jecxz
popf
and
mov
fwait
jae
add
xor
popa
nop
and
lcall
lret
push
push
sub
mov
cwtl
add
aad
jnp
pop
rclb
insb
lret
lcall
sbb
mov
and
dec
push
jg
xchg
push
xor
sub
mov
dec
sbb
ds
icebp
fadds
ret
inc
jnp
sbb
fildll
push
push
arpl
retw
sub
mov
sbb
mov
mov
shl
or
mov
ret
mov
jbe
into
lret
jp
jge
pop
int
push
mov
xor
xor
xchg
pop
stos
mov
mov
mov
mov
insl
filds
mov
jbe
push
scas
xor
lock
lods
pop
roll
xor
pop
xor
mov
ret
and
sub
roll
lret
mov
jbe
ljmp
std
cmc
jo
sti
cmc
cmp
sti
fcoms
add
jmp
loop
pop
loopw
cmpsl
xor
sub
ljmp
inc
pushf
mov
shrl
pop
xlat
ss
daa
imul
or
sub
or
sub
je
or
repnz
mov
push
push
mov
scas
or
cltd
pop
bound
inc
ret
mov
lret
push
fmuls
jns
lret
std
sti
aad
sub
movsl
add
test
mov
and
cld
std
fcoms
fwait
mov
cmp
leave
mov
addl
std
stos
jae
call
mov
xor
or
out
scas
test
push
cmp
repnz
arpl
test
orl
jae
lret
test
popf
mov
dec
sbb
cmpb
int3
pop
fcmovnb
sarl
fistps
mov
rorb
insb
rcr
adc
in
add
xor
popl
adc
cmp
test
ja
xchg
cmp
adc
xlat
inc
push
repz
aam
call
dec
push
add
in
add
stos
push
and
js
mov
or
push
jp
sbb
in
lahf
fisttpll
dec
pop
loop
mov
out
movsb
in
cmpsb
lcall
jb
xchg
stc
or
inc
lret
adc
or
rorl
into
mov
mov
repnz
ficoml
add
mov
cmpsl
cwtl
mov
in
fisubrs
int3
ret
and
nop
dec
pop
xchg
dec
repnz
cltd
mov
jmp
push
mov
xor
insb
aam
add
sarl
in
inc
sbb
jnp
lods
mov
std
add
pop
repnz
mov
or
mov
scas
add
mov
adc
add
jmp
fildl
jecxz
fsubrs
cmp
and
push
std
stos
or
insb
aas
pop
jecxz
dec
xchg
test
dec
lods
push
test
inc
subb
jb
aas
jg
negl
inc
aam
pop
ds
dec
push
mov
outsl
enter
cs
add
pop
mov
xchg
pusha
imul
jb
imul
mov
xor
cmp
lret
pusha
fisubrl
add
jae
popa
mov
popa
stos
ljmp
jge
mov
loope
aad
sub
popf
addr16
popa
mov
mov
pop
loopne
rcrl
adc
jecxz
js
mov
cwtl
std
test
subb
ret
inc
adc
je
mov
jge
scas
or
imul
push
adc
cwtl
xchg
stos
sub
pop
ficompl
arpl
data16
rcrl
xor
les
roll
pop
aas
mov
xchg
shlb
push
cwtl
sarl
insb
cs
push
push
ljmp
cmp
imull
xor
jle
add
inc
shll
imul
insb
jg
in
inc
sarl
fwait
inc
lea
ret
in
decl
popf
mov
xchg
ds
stos
lods
or
mov
mov
mov
xor
xor
andb
pop
xchg
mov
push
rorl
rcr
stos
mov
sub
sbb
loope
hlt
push
mov
push
sbb
dec
std
outsl
addr16
inc
xor
sub
leave
sahf
ret
and
xor
cmp
jg
lcallw
jbe
jmp
les
dec
fbstp
cmpsb
push
adc
ja
scas
jno
dec
in
rorb
xchg
movsb
xchg
pop
pop
bound
push
fildl
inc
or
mov
mov
mov
mov
mov
push
out
mov
je
shll
rcl
push
data16
add
bound
jnp
dec
ret
es
cmp
fwait
fwait
adc
cmc
mov
xchg
pop
fisubl
insb
test
and
dec
sbb
sbb
stos
or
shrl
or
cmpsb
add
or
or
add
pop
sbb
jne
jle
sbb
xor
pushf
mov
push
movsl
sahf
jo
cmp
test
mov
rcrb
add
out
xor
and
sub
lock
mov
pop
adcl
call
xor
mov
mov
pop
ja
or
dec
pop
rcll
push
mov
xchg
xchg
push
mov
cmp
aas
jp
in
inc
pop
push
push
mov
add
ret
out
out
es
sbb
xchg
push
add
aaa
data16
fisubrs
mov
insl
mov
adc
jo
dec
mov
mov
or
dec
icebp
jl
adc
in
pusha
sti
repz
movsl
ja
sarb
out
sub
and
add
daa
shll
push
mov
pop
push
in
cmp
std
test
adc
std
sub
andb
cmpsb
rcrb
dec
fldl
jbe
pop
inc
push
into
or
test
lahf
cli
orl
js
ss
scas
stos
loop
inc
dec
clc
cltd
mov
out
fisubl
imul
cmc
mov
xchg
dec
push
xchg
shlb
cmp
je
mov
mov
pop
lret
xchg
mov
je
je
fs
sahf
push
push
out
adc
rorl
xchg
jno
mov
insb
adc
mov
jbe
jg
test
stc
out
in
cwtl
inc
outsb
add
lcall
addr16
mov
cmc
call
jp
or
sub
test
lods
add
fldcw
pop
outsb
insb
ds
add
cli
add
xor
cli
cwtl
xchg
dec
icebp
lea
mov
push
hlt
xchg
cmp
inc
outsb
enter
push
icebp
gs
int3
lret
callw
sbb
imul
stc
jmp
jns
and
xchg
push
es
call
xor
push
hlt
repz
scas
clc
mov
test
inc
mov
sbb
or
fbld
insl
add
stos
jecxz
pop
jb
stc
mov
adc
pop
dec
mov
test
xor
cmp
cmpsb
mov
loop
dec
inc
and
fwait
int
xor
adc
pop
mov
hlt
cwtl
mov
loope
lret
sbb
cmp
mov
push
incl
pop
xchg
sub
fs
stos
adc
add
jnp
pop
push
cmovne
arpl
xlat
mov
insb
inc
scas
cwtl
xor
daa
and
inc
pop
sub
sub
leave
mov
mov
dec
call
push
aas
mov
dec
out
lret
inc
jmp
dec
mov
mov
mov
xorb
fstpt
shlb
std
je
bound
stos
inc
sbbl
xorb
or
fisubrl
mov
popa
jns
inc
dec
dec
lods
rclb
mov
repz
ss
pop
sahf
sub
jp
jg
sbb
testb
xchg
ret
loop
and
jmp
dec
mov
or
pop
jg,pn
shrl
cli
jg
xor
sbb
aam
inc
scas
movsl
enter
pop
push
loope
mov
lcall
lods
sbb
jmp
sahf
inc
push
jne
dec
insl
pop
aam
pop
push
cmp
sbb
fidivl
incb
push
jg
outsb
adc
cmc
inc
mov
lods
mov
aaa
cmc
cli
movsb
sbb
outsl
lret
xchg
movsb
sbb
enter
and
bound
push
repnz
sbb
lock
ss
mov
pop
into
fisubrs
aas
dec
aam
lock
adc
ficoms
lds
dec
dec
jg
insb
mov
out
stos
push
pop
push
fdivrl
cmc
call
push
adc
std
inc
pop
lahf
sti
xchg
aaa
lock
and
pushl
repnz
sti
sbb
and
scas
cwtl
cmpsb
cli
xorl
xchg
inc
fdivl
push
filds
out
out
stos
mov
or
mov
mov
and
loop
sbb
xor
pop
push
xor
sub
push
aad
ret
push
xchg
dec
fldenv
push
mov
int3
test
jmp
mov
js
iret
push
int
xor
sub
pop
sbb
mov
nop
jnp
mov
jge
cld
cmovns
or
sub
fwait
push
ret
std
pop
or
mov
int
aad
inc
js
push
fnstsw
stc
xchg
inc
cmpsl
add
inc
in
adc
sub
cmpsl
mov
mov
mov
sbb
test
mov
cmp
adc
ficoms
data16
sahf
dec
add
scas
pop
aam
pop
jl
inc
out
sbb
pop
cld
dec
or
pop
popa
mov
sub
dec
gs
cmp
test
cmp
mov
push
cmp
leave
int3
ds
sarl
out
lods
mov
inc
and
pop
xor
scas
push
xchg
popa
cltd
and
outsl
adc
roll
jmp
sbb
xchg
jg
stc
push
sub
ror
rcrl
xchg
push
dec
addr16
jb
xorl
daa
mov
ret
sub
jle
adc
jmp
jb
out
idivb
jnp
mov
ljmp
jnp
leave
popa
ss
pop
popa
mov
jb
std
sub
adc
stc
cmp
test
out
xchg
cld
test
mov
lods
dec
imul
xchg
xor
jmp
push
jecxz
outsb
rcl
xor
cmpb
dec
insb
pop
daa
lcall
jbe
out
sbb
or
sti
cmpl
push
cmp
add
dec
mov
ret
sbb
fnsave
sahf
das
jo
mov
lods
scas
int
popa
fisubl
scas
out
xlat
cli
pop
ss
cli
mov
dec
xchg
movsb
mov
add
and
mov
nop
in
jmp
aaa
or
xchg
cmp
lods
ljmp
cmp
pop
adc
js
xchg
pop
inc
loope
add
fisubl
pop
out
std
lret
loop
mov
jne
inc
js
xorb
std
movsl
ret
sbb
jbe
sub
xor
add
ljmp
in
in
fdivs
jo
jbe
cmp
push
fcmovbe
pop
push
fwait
lods
idivb
pop
pop
lock
sbb
xor
call
ljmp
push
cmp
in
insl
dec
sub
lcall
add
sbb
jno
inc
nop
out
cmp
loope
push
jae
jnp
fmuls
mov
xlat
aaa
clc
sbb
fcompl
test
push
push
sub
xor
neg
xchg
insl
mov
insb
add
xor
and
ljmp
mov
push
xchg
and
dec
mov
sbb
stos
push
pop
insb
cmp
push
jne
arpl
pop
ja
aas
xor
sbb
sub
rolb
jbe
mov
xor
ds
sbb
iret
cs
or
jl
pop
mov
jnp
sbb
xchg
inc
jo
clc
push
out
pop
mov
pop
push
push
lock
cwtl
fidivs
js
dec
in
fldlg2
mov
jg
shl
sub
pop
repz
push
dec
sti
std
and
cmp
test
xchg
add
inc
cs
add
jmp
jb
sbb
shlb
add
aam
push
sub
sbb
push
lea
sbb
repz
outsb
cld
mov
nop
pop
mov
push
lock
test
xlat
xchg
xor
add
mov
sbb
xor
inc
ss
clc
xchg
jae
pop
into
push
sbb
fadds
push
mov
loop
shlb
or
sbb
test
and
daa
dec
cltd
orb
adc
dec
pop
das
aam
aam
es
mov
test
jne
push
hlt
outsb
leave
rcll
in
cmpsb
xor
sub
pop
adc
mov
adc
dec
sub
inc
dec
arpl
sub
mov
sti
outsl
adc
clc
xchg
mov
mov
test
push
push
pop
pop
fmull
popa
test
setge
inc
dec
xchg
out
je
enter
hlt
sub
cmpsb
xchg
fstl
cwtl
std
xrelease
xchg
sbb
test
sub
mov
jno
sub
pmaddwd
sbb
adc
adc
test
jo
lock
push
mov
mov
lds
sahf
nop
cltd
adc
mov
rcll
jg
or
sbb
jo
or
jne
or
adc
and
push
jno
push
jmp
inc
jae
leave
lea
popa
lods
cld
in
dec
mov
xor
mov
outsl
out
push
push
pop
test
lea
ficoml
rcrl
inc
jge
sub
rcll
and
leave
ljmp
adc
push
cmpsl
fdivp
xchg
sbb
xchg
rclb
ret
out
insb
stc
or
push
cmp
sbb
aad
xchg
cmp
out
jmp
icebp
and
sbb
xor
in
mov
sbb
cmpl
movsb
sub
out
outsb
into
mov
push
dec
fcompl
neg
xchg
mov
add
xor
pop
inc
dec
popf
jmp
mov
incl
nop
jg
pop
xlat
mov
fdivr
or
ret
cwtl
push
push
inc
or
jns
dec
and
aas
notb
insl
daa
jl
das
out
add
pusha
jo
fs
xlat
lret
or
js,pn
push
ljmp
fmuls
pop
cltd
test
pop
mov
and
jns
lds
iret
pusha
pop
icebp
dec
repnz
jmp
fs
pop
ljmp
push
test
test
lock
in
jge
push
ss
divb
lcall
push
add
ret
cmp
push
scas
xor
sahf
jp
inc
orb
cltd
sbb
xchg
jnp
gs
cmp
ret
dec
sti
mov
mov
movsl
test
arpl
gs
xchg
insb
enter
popf
outsb
ret
int
aad
jae
sti
popf
mov
mov
into
ret
mov
ret
enter
mov
pop
cmp
push
ret
jno
push
out
movsb
sbb
jl
push
flds
mov
sub
mov
fsub
and
mov
test
mov
lret
in
daa
push
stos
test
xor
andl
ret
mov
pop
fstps
or
jmp
or
mov
inc
scas
dec
lock
jmp
inc
popa
sub
push
aaa
bound
sub
loope
std
lahf
and
out
mov
mov
fildll
add
dec
push
scas
xchg
imul
mov
and
add
xor
xchg
dec
data16
mov
adc
jae
popa
mov
adcb
ficomps
out
pop
xchg
mov
fstpt
mov
hlt
ds
jb
xchg
test
push
pop
sbbb
lahf
mov
cmp
daa
sbb
inc
mov
cwtl
jae
inc
js
ss
jecxz
aad
xor
xor
rcr
repnz
test
rorb
decl
aaa
sbb
pop
movzwl
aaa
mov
mov
fwait
cltd
dec
or
test
out
les
mov
xor
into
cmp
movsl
cmp
ss
dec
xor
ss
mov
jo
das
push
mov
sub
imul
jecxz
inc
jnp
in
gs
mov
addr16
mov
bound
lods
push
adc
jno
sarb
aam
fdiv
push
imul
or
add
push
dec
imul
or
cmp
xor
push
pop
cmp
jmp
loopne
bound
and
pushf
cmpsb
nop
ljmp
pop
inc
adc
mov
inc
sub
mov
rcrl
jns
inc
sub
jmp
pop
jno
sahf
arpl
call
inc
jg
inc
mov
lcall
push
out
clc
jl
xchg
push
xchg
shl
subps
sbb
push
insl
mov
aam
push
xchg
jl
mov
sub
xorb
enter
pop
xchg
rcrl
pop
mov
or
pop
or
jno
orb
out
out
mov
mov
adc
cmp
daa
shlb
repnz
imul
adc
fistpl
sub
or
idivb
pop
sub
hlt
xchg
je
iret
cld
iret
aad
mov
jo
sar
xor
testl
adc
push
xlat
leave
dec
pop
test
enter
inc
push
cld
das
loop
cmc
outsl
pushf
xchg
fsubrl
aam
out
or
lds
movsl
popa
int3
xchg
pop
cmp
xchg
in
mov
sbb
mov
das
pop
in
jno
sbb
push
imul
pop
insl
data16
mov
mulb
cmp
xor
cltd
stc
daa
orb
adc
or
adc
or
xchg
ret
popf
andnps
insl
sub
xor
adc
nop
and
mov
es
xlat
mov
adc
inc
push
adc
daa
add
push
jge
and
add
jns
int
lea
push
test
int3
outsb
push
push
lods
cmp
adc
test
in
mov
adc
xlat
pop
and
cmp
mov
mull
and
add
sbb
xchg
movsl
push
mov
and
dec
roll
cmp
dec
adc
jle
jo
pop
stc
cmp
push
mov
addr16
jecxz
inc
repnz
push
pop
push
and
rorb
pop
jno
mov
leave
adc
inc
addr16
scas
ss
mov
inc
push
pushfw
in
mov
subb
pop
sarl
jge
jb
and
lcall
je
dec
add
faddl
xchg
rorl
int
jmp
mov
aas
dec
pop
repz
int3
sarl
adc
fdivs
fmull
mov
dec
dec
mov
insl
lods
addr16
notb
mov
push
inc
mov
inc
add
inc
cmc
and
or
fdivrp
in
cmpsl
sarb
push
cmp
dec
jl
into
test
lret
int
les
cmpb
frstor
pop
cmp
fmuls
out
call
push
dec
add
fldl
inc
dec
sbb
imul
sub
cmp
mov
cmp
push
testb
orb
icebp
stos
mov
orb
data16
jns
mov
xchg
shl
fsubs
add
paddusb
xor
dec
cmpsb
jmp
or
rcl
sbb
cmp
lods
xor
icebp
es
sbb
mov
xchg
cwtl
loopne
mov
mov
or
int
es
inc
sbb
std
cmp
rcrl
scas
rcr
mov
out
cltd
fidivs
ja
dec
dec
enter
mov
or
jb
xor
arpl
mov
sub
cmpsl
add
ljmp
mov
in
repz
lock
sub
daa
add
popa
cltd
xchg
jo
mov
dec
fidivl
iret
sti
xor
mov
out
dec
xchg
push
icebp
fists
cwtl
dec
or
cmc
test
add
fs
sub
cld
sbb
dec
ficompl
leave
cmp
lods
inc
mov
sub
adc
inc
sbb
pop
xor
cmpsb
mov
in
jb
fadd
and
rcrb
insb
imul
movb
xor
mov
push
lea
sub
or
adc
or
mov
cmpsb
mov
leave
test
repz
lret
cmc
shll
popa
rclb
dec
data16
std
inc
and
in
scas
jns
mov
out
fwait
mov
mov
and
xor
pop
mov
ret
cmp
fsubs
lods
negl
fldt
pop
sbbl
jmp
out
lds
addb
addl
xchg
xchg
xor
in
inc
mov
cmpsb
push
cmpsl
mov
fmulp
cmpsl
cmp
xchg
cs
dec
mov
iret
dec
mov
or
inc
jg
fisttpl
push
jge
add
dec
adc
pop
fs
loopne
adcb
ret
ss
or
int3
sub
sub
sbb
cmpsl
adc
icebp
std
fdivr
sub
xor
dec
data16
mov
cmpsl
repnz
test
mull
jns
adc
and
shll
xchg
push
nop
xor
xchg
cs
aaa
dec
movsb
jge
and
mov
out
movsb
jecxz
lcall
sub
popa
pop
in
pop
cli
icebp
dec
test
fnop
cwtl
ret
adc
test
lcall
jecxz
decb
add
xchg
mov
xchg
out
mov
push
xchg
push
stc
pop
mov
xchg
jmp
sbb
cwtl
out
sub
movsl
shrb
pusha
sub
cmp
ret
xchg
mov
inc
int
and
or
adc
jo
sbb
test
sbb
ret
mov
mov
xchg
popa
repnz
jnp
fistpll
in
sub
add
out
in
adc
jbe
and
mov
xchg
or
sarb
mov
outsl
inc
mov
mov
out
fstl
jbe,pt
popa
sub
push
pop
cwtl
fisubs
icebp
jb
imul
outsl
enter
test
dec
dec
push
mov
shl
insl
in
fwait
cld
nop
mov
mov
enter
add
xchg
out
sahf
lret
and
push
push
jg
bswap
add
mov
inc
dec
adc
cwtl
not
mov
mov
lods
cmp
push
sbb
add
mov
clc
lahf
rolb
lds
push
fs
neg
mov
call
cmpsl
xor
into
aas
mov
jns
lret
sub
jmp
mov
test
mov
or
adc
push
jbe
xor
mov
stc
adc
xor
mov
adcl
fiadds
leave
adc
es
fs
fmull
dec
cmp
imul
push
mov
lds
cmp
lcall
mov
imul
addl
cmpsb
inc
loopne
lahf
xchg
pop
aas
dec
sbb
pop
test
rclb
and
pop
iret
push
mov
xor
mov
in
add
sub
bound
iret
pop
sti
ffree
mov
test
das
mov
test
stc
fidivs
cs
jnp
lret
int
je
sbb
mov
outsb
popf
out
pop
sti
xor
push
pop
and
mov
or
aad
pop
sbb
cmc
pop
jbe
push
aam
lods
testl
scas
pop
push
in
and
adc
xchg
orl
imul
iret
mov
mov
out
jp
outsb
sub
cmp
mov
mov
stc
xor
int3
adc
push
pop
imul
scas
xor
andb
jg
jbe
jp
ret
jae
push
dec
xor
fwait
popf
lret
std
adc
xlat
inc
repz
cmpsb
or
xchg
ja
and
pop
stc
xor
adc
jno
dec
cs
jnp
adc
int
insb
divl
sti
cwtl
pop
loope
test
aaa
std
pop
pop
pop
dec
sub
dec
les
sub
iret
insb
sub
jmp
add
jno
dec
dec
sbb
shl
jg
dec
add
and
inc
test
mov
mov
inc
jmp
nop
loop
mov
sub
aaa
push
sbb
es
dec
rclb
clc
mov
ja
and
sti
dec
adc
leave
xor
scas
das
lret
inc
xchg
outsl
cld
mov
sub
insl
xor
pop
lds
ss
rcl
int
adc
push
add
lret
nop
gs
mov
imul
stos
push
imul
leave
leave
lods
mov
stos
aad
bound
inc
sbb
insb
mov
cmp
lock
cmp
jge
in
dec
adc
lock
sbb
push
jb
jl
add
mov
ss
sahf
xchg
and
dec
xchg
fsubrl
scas
mov
aaa
or
or
pop
mov
xchg
pop
fldt
addb
dec
push
xor
xor
clc
mov
insl
pop
out
adc
mov
cmc
stos
jg
dec
dec
xchg
add
sahf
das
in
aam
and
cmpsb
fwait
jmp
sar
add
sub
jns
in
daa
cmc
stos
adc
xor
repnz
mov
ret
out
push
popf
sub
push
pop
pop
jmp
jp
sub
daa
xor
stos
testb
addb
jg
addr16
jmp
out
push
aas
xchg
mov
xchg
jle
cmp
cmp
push
in
inc
inc
add
sub
je
pop
lods
rclb
sti
inc
lods
clc
dec
jae
loop
into
xchg
sarb
and
divb
fisubs
enter
pop
mov
leave
testb
lock
jns
dec
popf
jb
jecxz
jnp
call
lret
mov
jno
lret
sub
into
and
lea
pop
fisubl
pop
adc
add
stc
ds
cmc
cmp
inc
outsl
xor
es
movsl
mov
xchg
in
and
xor
loope
imul
inc
fs
xor
popf
out
push
cmpsb
test
scas
icebp
sub
ret
ret
cwtl
jmp
scas
add
xchg
loop
or
repnz
sbb
iret
repz
jmp
nop
mov
mov
movsl
xchg
fimuls
jmp
dec
push
testl
jns
xchg
rol
cmpsb
mov
stos
xchg
loope
mov
negl
add
loope
dec
clc
sahf
xor
in
pop
or
fcomps
ficomps
mov
push
lea
into
jae
jmp
cltd
jnp
xchg
sub
int3
sbb
add
or
out
out
dec
mov
cmp
adcl
sub
int3
outsl
adcl
lcall
imul
mov
pushf
xchg
add
pop
les
inc
emms
lock
rcr
push
fstps
insb
xorb
mov
cli
mov
inc
mov
inc
movsl
mov
jo
movsl
xchg
add
cmc
cmpsl
rol
and
shr
adc
test
pop
jecxz
ret
mov
sub
xchg
cwtl
xor
jecxz
test
clc
loop
cltd
ret
aam
or
adc
pop
mov
or
xchg
jo
sbb
cmc
repz
jnp
aas
and
pop
push
add
xor
sub
xchg
and
fnsave
gs
aaa
call
dec
dec
mov
xorb
dec
mov
dec
lods
dec
insb
or
inc
push
add
mov
mov
push
push
addb
mov
xchg
mov
adc
js
pop
mov
cli
inc
icebp
xchg
es
cmpsb
mov
mov
adc
push
pop
jne
jecxz
add
je
dec
xchg
xchg
mov
pop
pop
lahf
shll
imul
or
pop
mov
mov
pop
sub
mov
sub
lods
fcoms
orl
in
pop
aaa
dec
lds
scas
or
rclb
add
shrb
xor
jg
adc
in
data16
mov
mov
in
mov
scas
push
pop
inc
out
inc
test
adc
xlat
popf
mov
push
movsb
addr16
sbb
or
push
outsb
out
into
or
sbb
add
sahf
sbb
mov
out
pop
adc
int
lock
cmp
pop
mov
add
nop
sarb
jns
mov
cmc
sbb
orb
mov
mov
lret
scas
dec
adc
andb
popf
push
movsl
xchg
test
cmp
jae
jb
movsl
inc
dec
mul
xor
mov
push
stc
mov
adc
lods
xchg
das
pop
sub
inc
add
xchg
inc
mov
add
pop
stos
cmpsl
inc
mov
add
mov
fs
out
cmp
sub
inc
adc
das
push
mov
sbb
push
loopne
adc
xor
xchg
push
sub
push
fs
sbb
ds
fldenv
repz
inc
xor
xorb
imul
loop
test
sbb
xchg
mov
push
push
add
or
dec
fcoml
adc
repnz
rorb
or
loopne
jbe
fidivrs
mov
dec
jbe
inc
lea
sub
fisttpl
clc
lods
sbb
icebp
cmpsb
fs
je
mulb
mov
jg
sbb
std
push
xchg
movsb
je
mov
jecxz
pop
mov
aad
in
push
mov
nopl
inc
push
call
xchg
or
aad
inc
std
addb
outsl
aad
out
and
add
dec
jae
lret
shrb
fimuls
aam
aaa
pusha
jbe
pop
adc
cmp
pop
push
in
das
inc
lahf
test
arpl
xor
push
sub
pop
push
jle
mov
xor
pop
cmp
lods
loopne
mov
push
inc
xchg
mov
int3
mov
jbe
or
sbb
sti
mov
jmp
int3
data16
sbb
popw
outsb
pop
jg
sbb
dec
sub
out
loopne
push
mov
ss
bound
inc
popa
addr16
cltd
mov
mov
in
add
jb
scas
push
sub
and
shlb
push
ljmp
loopne
add
jge
mov
jno
mov
mov
sbb
ret
mov
or
shlb
sahf
jl
add
cli
add
xlat
xchg
add
jge
div
pusha
idiv
jmp
push
cmp
xor
sub
mov
jge
mov
mov
pop
repnz
outsl
jbe
sbb
and
fs
int3
or
inc
dec
ret
adc
sbb
clc
jmp
mov
mov
add
dec
push
hlt
scas
shlb
lea
sbb
mov
mov
loope
outsl
cld
sbb
mov
in
mov
or
fcmove
je
scas
jmp
pushw
in
lret
std
xor
enter
pop
sahf
jno
inc
cmp
frstor
sub
fxch
in
inc
jecxz
and
inc
mov
xor
leave
popf
mov
mov
push
pop
sbb
scas
fcoml
test
in
xlat
xor
jae
daa
inc
cmc
xor
lods
lods
adc
mov
jbe
adc
cmp
icebp
cmp
push
inc
xchg
and
insb
sub
xchg
in
dec
std
push
jmp
push
jmp
mov
cmpsl
xorb
or
sub
fisttpl
insl
std
frstor
jbe
cmp
and
push
xor
cmp
imul
subb
and
dec
mov
jno
or
cmp
es
inc
fildll
and
jo
mov
push
push
std
xorb
test
in
cmp
add
insb
je
mov
cmp
je
scas
lret
xor
xor
repz
pop
mov
cmp
jno
outsl
fwait
aas
dec
push
mov
push
movl
movsb
mov
es
push
adc
fs
xchg
fwait
test
pop
inc
push
inc
aad
daa
sub
mov
fisubrl
movsl
pop
sti
xor
fwait
test
mov
aas
mov
jl
mov
jb
jo
popa
sbb
aad
add
mov
and
push
push
sbb
push
fisubrl
add
aad
divl
jg
ret
dec
adc
dec
push
imul
rolb
insl
jmp
test
aas
ret
sub
aas
imul
sub
dec
jne
sbb
jecxz
test
add
notl
fs
xor
imul
pop
setb
dec
sbb
sbb
sbb
or
sbb
call
mov
sbb
cmp
cmp
lahf
push
loop
and
jmp
sub
adc
fcoms
xchg
arpl
lea
cs
clc
loop
out
jmp
xchg
imul
imul
mov
jecxz
clc
mov
movsb
mov
push
or
imul
push
sub
pop
dec
es
xor
ret
xchg
or
pop
pop
imul
or
lahf
jae
mov
int3
cmpsl
mov
cmpsb
hlt
add
ss
or
out
pop
loope
stos
jl
jo
mov
test
notl
adc
inc
lods
add
lock
fidivrs
add
xchg
leave
pop
dec
test
out
aam
cmp
gs
adc
xchg
ret
nopl
xor
out
lret
xor
cmp
into
fs
mov
daa
imul
xchg
xchg
push
xor
mov
lahf
fcomp
shrb
xor
fisttps
test
push
mov
dec
daa
pop
fisubl
sahf
mov
dec
cwtl
mov
mov
mov
xchg
js
insl
dec
in
iret
stos
mov
mov
bound
jecxz
inc
stos
add
pop
push
inc
cmp
repz
push
icebp
int
les
leave
arpl
dec
fidivrl
ficompl
insl
daa
imul
jecxz
sbb
ds
jl
rorl
aad
xor
iret
pop
sbb
fcmovne
and
jp
adc
jmp
loopne
insb
mov
or
pop
push
mov
outsb
repz
lods
scas
pusha
mov
sub
ror
not
scas
push
and
imul
scas
daa
cwtl
mov
aas
sub
cmpb
mov
inc
jecxz
mov
out
cs
arpl
es
add
xchg
add
mov
movsl
test
aam
lods
inc
or
xlat
xchg
mov
leave
pushf
nop
fstl
xchg
pop
shld
fwait
dec
sub
mov
pop
inc
in
sbb
mov
dec
pop
or
sahf
leave
ds
jnp
add
enter
clc
ficoml
xor
ja
and
adc
dec
sub
out
out
jle
or
in
dec
add
insb
jmp
mov
mov
jb
cmp
fwait
push
mov
les
pop
stos
inc
cmp
dec
pop
push
fidivs
push
popf
lods
not
dec
enter
mov
mov
inc
movsb
xor
mov
test
jl
dec
lret
sbb
lret
movsl
fisttps
hlt
lret
lods
mov
cmp
jge
pop
lock
cmp
outsb
xchg
std
sbb
adc
jb
addr16
ficomps
mov
popl
add
aaa
push
loop
inc
mov
adcl
adc
cmp
enter
add
mov
ss
jb
cmpsb
cmpsb
mov
out
push
pop
cmpsb
jbe
mov
lret
clc
sub
add
cwtl
test
inc
inc
mov
adc
loope
into
mov
jns
out
xchg
fiaddl
call
test
inc
jecxz
inc
jmp
shl
mov
cmp
cmp
out
les
xor
flds
stc
out
push
test
xor
or
push
add
mov
jb
or
aas
lea
xchg
arpl
jnp
popf
pop
sbb
xor
jno
and
iret
movsb
int
fadd
shr
aaa
lcall
xchg
decb
push
cli
repz
sbb
test
adc
into
das
mov
mov
ficoml
or
inc
in
jp
fs
lret
jne
dec
scas
jo
loopne
and
aaa
jmp
jge
notb
pop
jno
dec
push
sbb
dec
int
pop
rcrb
icebp
mov
sub
mov
aaa
addl
faddp
jecxz
lret
jl
push
inc
repz
es
call
xor
in
mov
fisubrs
pop
mov
lds
add
xchg
jle
lods
push
daa
repz
mov
lods
fidivrs
scas
dec
stos
sub
bound
sarb
sbb
pushf
adc
inc
pop
mov
inc
je
push
push
mov
push
push
push
xor
mov
pop
movsb
add
loopne
rolb
add
stc
push
cwtl
aad
dec
sbb
int3
push
hlt
out
cmp
xchg
lret
sub
pop
sbb
xchg
aaa
add
fstpt
mov
inc
mov
or
lea
jmp
pop
lcall
movsl
xor
sbb
or
jb
pop
sbb
or
filds
aad
mov
jae
xor
jp
mov
jg
push
mov
cltd
or
std
push
test
sarb
ds
fcmovb
negb
fdivs
mov
out
inc
lock
mov
pop
jmp
jns
popf
inc
fucomi
pop
pop
dec
fs
xchg
push
fimull
popf
out
push
cmp
movsb
jecxz
cwtl
stos
stc
js
fsubl
das
add
fldl
fldl
add
stos
stos
pushl
pop
loop
xchg
mov
rcrl
imul
cmp
mov
fildl
dec
loop
sbb
mov
int
pusha
dec
je
ljmp
imul
push
dec
add
lock
ret
std
add
repnz
cmpl
jno
mov
inc
cmp
les
sahf
cli
enter
in
pop
and
cmp
loop
jnp
inc
cmp
inc
jns
out
iret
lock
in
aas
leave
scas
add
ret
testb
jg
push
add
cmpsl
mov
xor
jno
lea
das
mov
inc
loopne
and
enter
lcall
xchg
stc
cmp
dec
shlb
sub
fs
call
sbb
jns
xchg
loopne
push
or
or
jecxz
insb
mov
push
int3
and
arpl
notl
push
mov
mov
mov
inc
pop
es
and
cmp
popf
fwait
cmp
xchg
loopne
and
mov
sahf
inc
xor
loopne
out
dec
shr
into
dec
movsl
in
add
jge
lds
call
popl
insb
fnsave
push
dec
sbb
pop
fs
mov
sbb
mov
xchg
xchg
mov
imul
inc
pop
push
push
repnz
stos
leave
mov
push
subl
sarl
lods
idivb
dec
jno
jae
pop
mov
mov
jns
psubq
addr16
aad
pop
les
dec
mov
icebp
and
cmp
mov
icebp
inc
or
into
dec
push
pop
loop
xchg
mov
lret
add
imul
dec
adc
popl
fmuls
dec
jmp
and
dec
das
adc
add
pop
dec
test
xchg
sahf
dec
repnz
mov
push
cmp
test
sub
xlat
sub
jecxz
repnz
mov
rorl
stos
or
fwait
mov
negb
jecxz
xchg
mov
xchg
mov
mov
push
push
jns
mov
outsl
mov
icebp
mov
ret
jge
cmp
add
divl
jp
fsubrp
adc
clc
sub
dec
inc
pushl
push
xor
mov
dec
fdivl
inc
addr16
and
adc
lods
test
adc
push
imul
cmp
stc
mov
inc
test
sbb
and
sahf
jno
scas
icebp
sub
and
stos
dec
add
pop
cmc
jl
sahf
sbb
lahf
mov
mov
mov
int
jbe
push
jnp
cwtl
mov
push
andl
cltd
xor
lret
sbb
jb
fimull
mov
in
and
mov
add
sub
add
mulb
sub
xor
mov
or
pop
popf
or
or
dec
movsb
mov
adc
or
pushl
testb
call
out
mov
add
imul
mov
sarl
movsl
or
popf
and
mov
pushf
leave
icebp
icebp
es
inc
mov
push
cld
movb
or
jbe
pop
loope
push
and
loop
mov
and
adc
adc
idivl
xor
jg
pop
imul
xor
fldt
out
sub
mov
repz
sub
xor
pop
int
jl
mov
mov
inc
xchg
sbb
push
int
push
rorb
idivl
rorl
or
jae
mov
jae
jecxz
mov
sub
movsl
cmp
lret
sub
dec
insl
mov
xchg
lock
cmp
jecxz
sbb
add
clc
jne
jns
mov
enter
icebp
push
in
aas
jecxz
cmp
loopne
push
movsb
dec
mov
sub
int3
insl
mov
loope
inc
dec
push
pop
std
add
mov
jle
int
pop
shll
adc
push
mov
jno
jne
jae
sbb
xchg
inc
dec
sbb
push
dec
int
sub
enter
fisubl
pop
cld
das
test
sub
sub
loop
sbb
ds
add
inc
fnsave
jecxz
inc
jnp
xlat
mov
lock
repz
nop
in
lret
jge
sub
mov
add
fidivs
aam
or
inc
lock
std
ljmp
dec
mov
sbb
lock
sbb
adc
jo
sub
sbb
test
fisttpll
fsts
incb
ficoms
fistps
add
dec
or
sbb
mov
jae
push
lods
cwtl
push
cltd
test
jae
test
lds
dec
add
mov
ljmp
je
ja
xor
mov
fiadds
in
shlb
dec
psubusb
pusha
shlb
int3
jp
lret
dec
mov
adc
mov
pop
push
mov
inc
mov
fimull
push
mov
xor
fiadds
dec
ljmp
popa
rclb
adc
les
xor
push
push
push
int
setno
aam
orl
xor
push
push
sarb
dec
pushf
es
add
cmp
shlb
xchg
mov
push
popf
mov
into
push
pop
jle
pop
cmp
lods
push
add
xor
rcr
repnz
in
add
popa
sti
filds
inc
and
mov
or
xchg
rol
dec
cmp
push
sti
fnstcw
sub
lahf
inc
out
cli
add
stc
fldcw
cmp
mov
sbb
xlat
push
lds
in
divl
pop
mov
shlb
addr16
leave
fadds
fmul
dec
sbb
xor
sbb
adc
xor
add
int
sbb
and
enter
sub
adc
subb
inc
imul
mov
arpl
cmp
or
out
lds
loopne
clc
sbb
pop
lret
push
es
addr16
xchg
pop
lahf
push
or
xchg
fadd
inc
pop
out
push
fxch
xchg
out
outsl
in
nop
dec
addr16
jne
pop
adc
fnstsw
imul
test
outsl
lahf
fisubs
stos
lret
ds
pop
sub
ficoml
divl
xchg
gs
mov
push
push
dec
mov
pop
test
dec
ss
cmp
std
lods
cmp
add
scas
push
adc
stc
xorb
push
cmp
pop
adc
aaa
loopne
ja
cli
pop
lea
mov
mov
pop
or
sbb
insl
inc
ss
push
mov
dec
out
xor
out
cmp
mov
inc
lds
xchg
jp
pop
jge
add
xorl
lahf
dec
and
jmp
daa
cmpsl
cmp
push
mov
xchg
loopne
pop
lcall
xchg
mov
insb
pusha
mov
sub
test
sbb
mov
pop
rol
jg
out
ret
sar
cwtl
out
or
int
lahf
sub
mov
sbb
imul
and
jne
mov
pop
and
jecxz
in
out
sar
dec
pop
mov
shrl
loope
mov
jp
jb
data16
mov
xchg
cmpsl
aam
inc
pop
mov
sbb
rolb
mov
imul
pop
pop
in
aad
es
xchg
dec
aas
test
push
pop
mov
mov
push
mov
push
lods
repz
and
jmp
adc
das
dec
les
das
iret
push
mov
adc
out
sub
shll
sub
add
iret
in
xchg
mov
ja
imul
mov
push
xlat
xchg
jae
mov
rep
es
dec
nop
jno
mov
or
push
pop
les
arpl
pushf
sub
push
jecxz
adc
inc
inc
out
or
stos
and
stos
lret
out
push
dec
push
push
mov
in
dec
rcl
cmp
mov
insb
xchg
sub
xchg
mov
fmul
cmp
dec
cmp
push
dec
sub
iret
add
dec
sti
jne
shrb
mov
push
decb
test
inc
push
add
pop
xor
and
pop
adc
mov
popf
fwait
aad
push
cmpsl
adc
jmp
jo
in
sub
out
sbb
rcrb
hlt
hlt
fwait
mov
lock
mov
or
adc
popa
or
into
mov
lret
addr16
outsb
jecxz
cmp
jecxz
dec
repz
pop
xchg
pop
pop
cmp
adc
cli
mov
icebp
push
imul
clc
push
dec
mov
sti
adc
xchg
push
and
imulb
icebp
add
jg
das
inc
adc
sub
mov
or
jae
mov
sbb
das
dec
jg
mov
mov
adc
sbb
popf
sbb
or
outsl
filds
add
fisubs
stos
adc
mul
mov
jae
and
iret
into
and
imul
jbe
mov
mov
jne
outsl
shlb
test
xor
dec
jmp
push
adc
ds
das
sbb
lret
xlat
xchg
sub
mov
sahf
outsl
fidivl
xchg
fwait
nop
stos
cwtl
xchg
jp
push
mov
mov
dec
repz
sar
jle
sbb
aas
hlt
adc
pushw
sub
mov
ret
lret
js
lahf
mov
jne
xchg
jl
out
pop
push
mov
add
in
addl
pushf
roll
sbb
dec
mov
shll
mul
xchg
dec
jmp
lcall
jbe
popl
movsl
xchg
jmp
add
push
outsb
xor
cmp
lock
jge
xor
jmp
je
aam
sbb
movsb
cli
mov
dec
sbb
aam
jge
rcll
shrl
pop
les
xchg
ja
jmp
imull
fsubs
movsl
test
fidivrs
xchg
sbb
es
dec
call
fsubl
mov
mov
mov
mov
loope
loopne
loop
inc
adc
mov
sub
leave
rorl
mov
or
lea
aaa
mov
cmp
sub
fldcw
push
aam
jge
mov
clc
jl
stos
sahf
ret
test
dec
jmp
inc
and
add
xor
lea
repnz
mov
dec
mov
clc
jnp
xchg
mov
negb
xchg
cmpsl
imul
das
cmpsl
xchg
lods
out
test
push
fsubr
mul
or
mov
mov
add
xchg
cwtl
fisubrl
enter
sub
xchg
fs
loopne
test
aaa
bound
addl
scas
sub
arpl
and
push
jae
adc
or
mov
dec
jle
xchg
cli
jp
pop
in
add
hlt
pop
pop
or
adc
out
pop
js
sbb
fucom
cmp
int3
hlt
xor
ja
xor
dec
dec
sub
cs
fildll
fwait
dec
cwtl
add
or
add
jo
pop
mov
mov
and
mov
or
mov
xor
sbb
mov
xor
pop
mov
mov
mov
loopne
jle
movsl
sbb
cltd
int
mov
call
loope
les
mov
ret
insl
jecxz
sbb
or
negb
adc
pop
clc
xchg
roll
fimuls
sbb
pop
shlb
mov
push
pop
cmp
inc
mov
cld
int3
int3
aas
sbb
add
or
jae
lahf
adc
out
inc
sbb
mov
fisttpl
in
inc
addr16
adc
xor
fimull
subb
mov
pop
outsl
lret
cmpsb
stos
adc
push
ja
jnp
imul
fdivs
sahf
arpl
aam
inc
out
fstpl
inc
xor
lahf
mov
jle
or
mov
pop
loop
lock
aaa
inc
xchg
test
xchg
cmpl
lahf
and
pop
mov
in
insl
sub
xchg
ret
mov
mov
aad
push
aaa
pusha
shl
sub
sahf
mov
xchg
xchg
movsb
jno
aas
outsb
sub
daa
out
pusha
fists
or
sub
mov
mov
movsl
mov
add
xor
inc
inc
or
pop
xor
inc
adc
stos
addr16
mov
mov
jbe
cmp
popw
mov
push
shll
mov
fs
mov
xchg
jecxz
dec
shrl
stos
jp
test
je
and
rclb
les
lahf
mov
pop
inc
mov
sahf
lcall
fdivs
fmull
repnz
push
push
mov
pop
arpl
adc
xor
pop
xchg
insl
imul
jmp
leave
mov
stos
xorl
mov
jno
mov
push
in
lock
lods
imull
movl
sub
iret
movsb
adc
leave
push
cmpsb
mov
sarb
dec
jmp
test
popa
dec
mov
inc
lock
pop
fwait
pusha
addl
enter
pop
inc
inc
test
mov
mov
popf
pop
push
push
xor
mov
movsl
cmp
mov
rep
pop
enter
xchg
fildl
sub
mov
mov
lds
mov
clc
cld
ds
outsb
mov
cwtl
xchg
in
inc
das
sbb
shll
daa
mov
mov
fst
inc
mov
pop
xlat
xor
dec
mov
je
cmp
mov
aam
jle
adc
sub
les
cmp
sti
pop
roll
stos
jecxz
mov
push
sbb
adc
xchg
jge
enter
mov
clc
into
inc
jmp
pop
pop
mov
push
sbb
mov
mov
adc
outsl
popf
jmp
jl
loopne
or
lret
js
rol
xlat
mov
aas
cmp
pusha
mov
jnp
cmp
pop
mov
inc
ds
fs
xchg
in
addr16
scas
jne
aas
jne
lds
loopne
mov
mov
pushf
cmp
adc
test
dec
scas
adc
inc
rcl
cmpsl
loopne
mov
ds
ja
aas
add
jle
outsl
xchg
jbe
xchg
xor
adc
in
adc
jnp
add
inc
loopne
je
xchg
jl
xor
push
popf
fisttps
fdivr
mov
dec
popf
stos
cmp
jno
push
push
call
inc
mov
ficoms
xor
mov
ret
mov
arpl
sbb
mov
out
or
push
pop
sbb
or
inc
xchg
fstp
daa
mov
jns
sbbb
jae
jl
mov
sub
mov
push
rorl
pop
and
bound
inc
cmp
xor
cld
sarb
pop
push
pop
inc
imul
pop
mov
adc
fidivs
repz
cmp
roll
adc
xor
sub
add
jecxz
shrb
or
adc
nop
call
shll
jae
sub
adc
cmc
mov
cltd
inc
add
adc
int3
enter
aas
sbbl
gs
into
xchg
sahf
cmpsl
std
leave
cmpsb
mov
lcall
xchg
jbe
bound
outsb
addb
xor
lock
and
ficomps
leave
xor
lods
mov
xor
outsb
jmp
bound
cmp
lcall
leave
inc
xor
nop
stc
jbe
and
inc
jecxz
jle
add
movsl
or
mov
std
jno
loop
xchg
mov
add
xor
xchg
xor
or
adc
jbe
sbb
inc
pop
adc
add
cmp
dec
mov
pop
mov
test
outsl
fs
ja
std
jns
rcrl
pop
sbb
inc
in
sub
push
sti
xchg
insb
push
into
adcb
jl
das
xor
jb
out
js
adc
leave
shlb
jg
bound
in
ss
ljmp
push
ss
mov
sub
dec
notl
mov
int
mov
outsl
cmp
add
xchg
mov
mov
sub
fwait
inc
pusha
daa
mov
or
or
jb
xor
shll
testb
lock
rolb
dec
jo
cmp
data16
ja
outsb
movsl
stc
and
test
add
cmp
mov
xchg
push
pop
imul
pop
mov
pop
clc
sbb
and
inc
dec
adc
lret
inc
rclb
stos
jmp
nop
sbb
imul
mov
jo
lahf
push
rclb
pop
shrb
and
push
fs
test
loope
lcall
les
push
push
sbb
repz
fs
sbb
mov
int3
shrb
popa
pushf
xchg
pushf
sarl
sbb
dec
nop
int3
rcrl
mov
into
mov
sar
jecxz
dec
loop
jnp
cwtl
xchg
mov
push
or
mov
push
cmp
push
imul
jo
shrb
out
mov
fsubs
dec
xor
sub
loop
xchg
lret
fstps
or
into
jb
popf
or
cwtl
cmpsl
jb
sahf
lcall
hlt
or
sti
cmp
dec
int3
repz
xorb
sub
sub
pop
loopne
xchg
js
mov
fildl
orl
ficoml
jns
mov
lods
ja
out
clc
mov
lret
dec
cmp
movsl
push
into
mov
cmc
jle
sub
xchg
pop
xchg
fisttps
mov
inc
mov
icebp
pop
loope
push
pushf
into
pop
cmc
sub
stos
sahf
fistl
adc
inc
in
mov
or
and
loop
daa
bound
int
jne
cmc
aam
mov
out
lods
sbb
push
movsb
mov
scas
xchg
call
out
push
andl
push
incl
js
rorl
lods
cwtl
xchg
shrb
xor
push
push
add
in
pop
cmpsl
jnp
shlb
xlat
mov
repnz
lods
lods
jne
int3
andb
mov
out
lock
shr
sbb
mov
lahf
cmpsb
adc
bound
shll
rclb
pop
std
xor
mov
lahf
jecxz
fidivl
mov
xor
add
xchg
adc
mov
jbe
dec
lea
jmp
mov
sbb
and
mov
in
inc
sbb
push
mov
outsl
xchg
sbb
jp
inc
das
int
mov
cmp
dec
fsubrs
pop
arpl
xlat
inc
sar
ljmp
fst
call
adc
push
push
mov
sbb
mov
mov
add
mov
push
pop
in
das
ret
test
fiaddl
lret
aaa
fiadds
es
add
lahf
insb
or
inc
pop
jg
push
pop
cld
jbe
xor
in
push
jo
into
testl
in
sub
add
mov
int3
divl
mov
sbb
xor
aas
cmpsb
pop
pop
push
cmp
scas
test
mov
add
sarl
jne
mov
and
and
lods
add
xchg
popa
js
jecxz
sbb
mov
push
push
scas
movsb
adc
outsb
sbb
mov
push
mov
or
enter
adc
rcrb
lretw
lods
scas
cwtl
xchg
repz
mov
cltd
sbb
ret
clc
loope
std
mov
mov
xor
xorl
dec
fdivr
outsb
add
sub
jns
cmp
sahf
sahf
outsb
cmp
pop
mov
mov
and
ss
fcmovbe
jmp
mov
adc
add
pop
call
in
sub
jnp
in
dec
lods
mov
stc
cmpsb
mov
clc
jmp
test
loop
jg
and
ret
popa
inc
push
scas
cli
pop
test
sbb
ficoml
push
and
jmp
mov
repnz
movhlps
ficoml
pop
cmp
and
fmul
aad
mov
lock
mov
pop
pop
stc
xor
sbb
jg
mov
or
push
sbb
lret
into
inc
jecxz
mov
sub
insb
xchg
push
push
sbb
iret
sbb
add
sbb
inc
xchg
clc
shr
sub
pop
lock
xor
and
subb
adc
icebp
out
pop
popf
shlb
xlat
fisttps
ss
aaa
or
add
loop
js
cmp
out
pop
lret
xchg
adc
push
pop
aad
ret
js
pushf
out
lea
jo
mov
lods
mov
in
scas
cmp
and
lods
and
mov
in
js
mov
es
add
fists
je
push
jne
adc
or
adc
inc
popf
adc
mov
sub
adc
in
rcrb
adcl
out
or
sub
cmp
movl
insb
sti
mov
xor
cmp
je
aas
sub
mov
mov
push
or
sbb
dec
adc
in
sbbl
jg
bound
pop
xor
jo
cmp
int
dec
xchg
sbb
push
es
lahf
sahf
out
call
xchg
xchg
mov
mov
push
shlb
mov
mov
jmp
sub
sub
bnd
std
aas
jns
pop
sbb
out
pop
js
pop
int
pop
pushf
stc
adc
notl
jno
pop
cmp
push
push
jmp
repnz
add
adcl
xchg
or
dec
neg
bound
int
fsubrs
push
out
xor
inc
pop
mov
inc
cmpsl
arpl
cli
insl
xor
jnp
adc
push
movq
nop
es
dec
or
fadd
in
dec
cld
repnz
insb
push
cli
sahf
addr16
adc
in
aad
xchg
push
scas
icebp
jg
xor
dec
jmp
or
mov
testb
loope
xor
add
xchg
daa
dec
sahf
out
test
imul
out
enter
xchg
inc
test
movl
mov
or
out
ljmp
divl
shlb
fcomps
push
push
rcrb
jnp
gs
push
popa
xor
push
mull
push
rolb
add
pusha
aad
mov
mov
fldenv
xor
jp
mov
arpl
xchg
inc
and
inc
adc
mov
jecxz
es
lret
xchg
mov
outsl
std
push
insb
pop
cltd
mov
cmpsl
insl
pop
in
dec
push
jbe
push
mov
mov
adc
pop
loop
xchg
lret
adc
cmpl
lods
jmp
imul
cmc
insb
popa
js
int
hlt
mov
ja
mov
scas
lret
jb
fidivs
xor
inc
cmp
ljmp
jle
push
insb
pop
jo
xchg
mov
dec
sti
adc
jno
pop
sahf
push
mov
fstpt
mov
clc
test
cs
and
rclb
fisttpl
add
dec
fcomps
dec
xor
fwait
dec
stos
sarl
push
out
mov
loop
dec
in
lock
aaa
push
repnz
mov
add
mov
sub
xor
sbb
mov
bound
sarb
or
mov
push
test
lods
push
dec
jmp
mov
shl
out
cmpsl
inc
dec
xor
xor
mov
inc
xchg
sub
cmp
fsubs
mov
into
test
in
inc
in
mov
xchg
push
pop
test
mov
pop
hlt
mov
or
mov
lods
popf
aam
aaa
lock
movb
sub
jb
add
aaa
pop
sub
adc
scas
mov
xchg
idivl
push
inc
lods
imul
cmp
mov
sub
push
xor
sub
sbbb
push
testl
sti
fs
xorb
iret
sbb
adc
cld
cs
test
mov
jnp
mov
testl
hlt
and
out
lret
xor
scas
mov
lds
xchg
fisubl
or
cmpsl
std
add
mov
hlt
push
outsl
cmpb
jl
inc
out
push
incl
dec
imul
test
pop
pushf
sbb
jl
push
cwtl
std
outsb
or
popf
loopne
mov
xor
and
add
pushf
inc
sahf
push
lds
in
mov
sub
add
out
jbe
push
repz
and
xchg
and
sar
mov
cltd
ja
push
clc
or
sub
jecxz
sbb
fwait
mov
js
je
add
sar
in
mov
and
jecxz
mov
out
xor
xor
loopne
dec
fsubl
jb
xchg
cmp
call
pop
mov
inc
push
outsl
cwtl
cmp
scas
or
mov
cmp
cli
inc
je
or
adc
in
xor
aam
sahf
rcr
mov
mull
sub
lea
int
jnp
adc
or
and
fwait
xchg
or
xchg
roll
cwtl
roll
in
fidivrl
xchg
leave
add
rolb
out
xor
in
test
ret
xor
xor
clc
sbb
fs
fmul
xor
cmp
std
lahf
mov
loop
insl
push
pusha
jg
lret
pop
outsb
or
cmp
pop
and
adc
inc
cmp
push
mov
push
outsl
fs
lods
popa
push
push
adc
insb
xor
lods
cmc
in
lock
nop
lret
xchg
and
mov
aad
shr
int3
dec
ret
lahf
jbe
lds
jns
in
js
xchg
push
andb
push
push
pushf
add
add
in
mov
add
push
lods
push
mov
icebp
pop
pop
jae
in
inc
mov
cmp
cmpb
es
std
nop
xor
mov
jmp
push
popf
jne
cmp
lret
cmp
ret
cwtl
lods
pop
sub
add
lahf
gs
gs
or
dec
sub
in
adc
push
rcrb
and
push
mov
push
mov
jmp
sbbl
mov
push
ds
cmpsl
imul
outsl
adc
scas
and
popf
pop
inc
push
pop
sti
jno
js
clc
popf
stos
insb
adc
cmp
int
xorl
ficoms
test
shll
jb
inc
fildl
fsubl
or
leave
mov
xchg
jg
je
push
dec
adc
adc
pusha
punpcklwd
push
mov
iret
adc
out
testl
mov
adc
into
cmpsb
out
hlt
cld
dec
mov
pop
dec
ss
mov
loope
roll
sub
divb
adc
add
add
scas
stc
rcrl
jb
shll
xchg
stos
sub
xor
cld
loopne
ljmp
data16
mov
cs
push
xchg
pop
mov
cmp
or
pop
icebp
xchg
cld
ja
push
addr16
dec
cltd
inc
ja
mov
rcrl
arpl
fs
ret
incb
pop
adc
jno
sub
cld
ss
pop
adc
in
arpl
jno
loope
mov
js
dec
loop
das
into
mov
outsb
shrb
sbb
push
dec
roll
cld
aas
jno
out
mov
sbb
test
jg
adc
adc
xchg
ljmp
add
pop
pop
cmp
jle
mov
mov
std
fidivl
fstps
add
jb
xor
shll
and
and
inc
push
or
push
push
jns
sbb
mov
out
iret
lret
pushf
vpshaw
and
scas
cltd
pop
hlt
ret
cmp
inc
int3
sbb
pop
jmp
fidivrs
call
sahf
inc
pop
movsb
adc
xor
mov
mov
and
pop
adc
xor
and
cmpsb
push
mov
mov
sbb
std
adc
outsl
or
sub
push
out
or
and
and
ret
mov
jne
roll
pop
fisttps
sub
out
add
js
test
mov
xchg
sbb
incb
in
leave
xor
cmp
roll
sbb
movsb
cmpb
mov
xor
xchg
fs
sbb
sarb
jle
sbb
dec
cltd
insl
testl
sub
movsb
jo
mov
push
fs
push
cmc
scas
xchg
jl
mov
shl
mov
into
dec
sbb
mov
jno
xchg
ljmp
out
std
jecxz
dec
pop
jb
cwtl
shll
movsb
rorl
mov
jp
scas
mov
jmp
xlat
xlat
hlt
mov
mov
inc
jle
jecxz
or
aad
outsl
sub
int
mov
xchg
pop
cwtl
mov
mov
loopne
movsb
ret
mov
push
in
push
outsl
das
movsb
xlat
aad
push
push
cwtl
jmp
loopne,pn
in
daa
sahf
xlat
movsb
sub
lock
pushf
cs
mov
push
adc
int
shlb
pop
dec
xchg
int3
repnz
pop
loop
mov
push
inc
mov
iretw
dec
mov
xor
pop
call
imul
adc
cltd
jl
fidivl
testl
mov
cmpsl
fcoml
mov
jb
sub
pop
in
mov
and
xchg
ret
je
popf
xor
cli
dec
fldt
sub
sub
out
push
js
pop
pop
outsb
mov
jno
rcr
mov
jl
test
ficompl
hlt
xchg
mov
nop
bound
xchg
jns
ja
test
dec
mov
lret
movsb
out
push
inc
ss
pop
lds
sbb
loop
mov
lods
mov
pop
mov
call
pop
dec
icebp
shrl
dec
mov
adc
gs
icebp
jns
aad
mov
mov
mov
icebp
notb
pop
xchg
scas
adc
mov
lods
pop
dec
adc
enter
sbb
jle
fldl
cmpsl
mov
cld
inc
loopne
pop
adc
imul
sbb
adc
add
das
sbb
jbe
repnz
pusha
loop
lahf
ja
addr16
lahf
xor
lret
jl
hlt
inc
add
rclb
jb
pop
jecxz
test
adc
pop
add
sbb
push
mov
notl
pop
jmp
ljmp
test
add
xchg
lret
jnp
into
pop
lcall
jmp
fldt
xor
xor
xchg
push
gs
dec
pop
xchg
dec
das
lahf
inc
jg
mov
mov
xchg
pusha
imul
xchg
stc
fbstp
xlat
inc
jge
in
cmpsl
mov
mov
lods
sbb
cmp
mov
out
cmp
imul
into
stos
rolb
sub
add
int
xchg
mov
add
mov
shlb
push
pop
sub
mov
fisttpll
loopne
ljmp
je
fldl
cli
decb
cmp
xor
shll
sbb
test
mov
cmpsl
enter
repz
mov
int3
and
sub
mov
fistps
cld
ljmp
and
les
mov
cltd
imul
jg
lds
sbb
inc
repz
loop
mov
sub
dec
imul
mov
mov
fsubs
hlt
mov
out
cmp
jg
fwait
sub
rcll
dec
cmc
xchg
aad
adc
pop
or
xor
fistps
imul
loop
sbbb
fisttpll
das
hlt
push
popa
sub
outsl
fcmovnbe
sarb
loope
out
jne
and
lahf
outsl
inc
leave
dec
mov
cmp
insb
test
jg
jb
popa
or
jne
cmpsb
outsb
cs
adc
sbb
jge
mov
sbb
fsubrp
add
bound
orl
pop
and
xor
stos
orb
cmpsl
into
andl
mov
js
sbbl
jg
mov
dec
xchg
popf
inc
decb
pop
or
jmp
push
aad
push
cli
test
dec
nop
jmp
jae
push
mov
xor
mov
in
cmp
cmp
sbb
cld
popa
sarb
imulb
pop
mov
lcall
xchg
pop
push
sbb
stc
mov
xchg
push
test
mov
xchg
idivl
sbb
mov
ss
nop
aas
mov
xor
xchg
fisubl
xchg
out
into
rclb
inc
dec
xlat
pop
pusha
mov
lcall
pushf
cltd
or
mov
out
push
lock
push
and
push
xor
sbb
inc
pop
nop
push
inc
mov
sub
enter
ret
jmp
test
and
pop
push
inc
addr16
lea
mov
roll
jmp
or
ja
sbb
frstor
cmpsl
fidivrl
fldl
stos
xchg
pop
shl
imul
push
sbbb
cmp
fwait
mov
sub
and
data16
cltd
push
xor
sbb
push
iret
stc
clc
imul
cmp
push
das
jg
inc
aas
mov
mov
xor
cs
pop
jmp
mov
andl
ljmp
aas
jg
fsubrs
cmp
movl
in
inc
cmp
mov
cmpsl
mov
cs
popa
pushf
push
jmp
and
sti
cmpsl
sbb
sbb
ret
fcoml
repnz
fcom
cmp
sbb
xor
fcoms
int3
pushf
aas
inc
dec
cs
inc
pop
sti
rol
daa
sub
pop
mov
fists
test
mov
rcrb
push
adc
dec
mov
fsubr
into
sub
sub
mov
pop
aaa
sub
adc
scas
lret
mov
and
addr16
rclb
jecxz
cmp
mov
adc
xor
xchg
popf
xchg
test
mov
stos
enter
je
dec
ret
sahf
rorb
std
or
int
cmpsb
or
mov
sub
shll
adc
ret
jne
leave
mov
push
repz
sbb
push
cmp
add
inc
adc
pusha
enter
push
lods
fdiv
scas
test
jno
pop
ss
mov
xchg
incb
ds
cmc
pusha
shlb
addr16
bound
and
push
mov
or
mov
xchg
leave
cmp
out
cltd
stc
push
ss
shll
rcrl
add
pop
mov
mov
cmp
pop
push
imul
jbe
iret
sarl
stos
xchg
mov
cmp
cmc
and
adc
jo
push
out
and
cmpsl
or
cmp
popfw
xor
out
stc
fisubl
add
stos
aas
lods
data16
xchg
xlat
xor
cmp
call
adc
movsl
mov
pushl
cmp
dec
or
and
insl
nop
int3
jp
push
idivb
dec
shll
leave
adc
lds
loop
mov
cmp
fistl
ljmp
imul
lods
stos
cmp
push
fwait
dec
and
add
in
mov
cmc
adc
jle
imul
sbb
ret
sub
sti
add
dec
xchg
fwait
ret
adc
cmpsl
inc
xchg
adc
lcall
repz
notl
dec
sub
lret
lret
sbb
icebp
sub
loope
and
and
andl
pusha
outsb
iret
stos
push
jae
jmp
adc
imul
xchg
rolb
sbb
dec
pop
jnp
push
mov
inc
jle
leave
out
add
shrl
pop
mov
mov
popf
jecxz
sub
adcb
pop
jle
leave
ret
cli
mov
xchg
imul
ret
inc
fs
mov
or
mov
add
dec
aaa
dec
push
roll
inc
inc
in
push
mov
xchg
sub
out
jno
pop
xor
xchg
jbe
dec
cmc
inc
nop
xchg
std
aad
mov
and
cwtl
scas
xchg
inc
xchg
into
gs
into
sbb
into
sti
lret
psrad
repnz
jne
lds
outsb
outsl
push
test
loopne
and
fsubs
rclb
lcall
gs
lods
sti
cmc
jno
scas
enter
ja
ds
push
push
sub
sbb
sub
or
push
scas
cltd
xchg
jmp
push
push
hlt
xchg
insb
decb
pushf
in
idiv
or
out
sub
and
push
lret
aam
fadds
sub
and
scas
loop
push
xchg
repnz
cmp
push
dec
add
out
cs
movsl
xor
push
push
adc
cli
lods
popa
outsb
test
ljmp
push
mov
sbb
sbb
in
xor
fisubrl
aaa
xchg
lods
mov
les
mov
sahf
sbb
popf
push
mov
scas
shrb
sub
out
inc
push
les
daa
jb
jno
jo
divl
or
xor
loopne
lods
bound
add
test
push
rcr
andb
out
je
add
jl
or
insl
xorb
loopne
adcb
outsl
ret
cmp
repz
xchg
lret
fisubrl
mov
add
adcb
xchg
xchg
xor
xchg
pop
pop
in
mov
adc
jbe
out
xchg
mov
adc
shlb
cmpsl
cmpsb
jo
test
add
mov
insl
mov
push
and
iret
xor
stc
test
dec
incl
mov
repz
mov
loope
cltd
int
sarl
cmp
gs
fidivl
and
into
jns
lret
pop
xor
mov
push
addr16
add
inc
bound
stos
push
mov
adc
xchg
dec
dec
andb
sub
jo
aam
pop
fisttpll
sbb
xchg
nop
aas
mov
lods
xlat
lcall
xor
daa
mov
jecxz
mov
xchg
aad
or
jg
fbld
imulw
dec
mull
jl
test
test
pushf
sub
in
pushf
or
and
cmp
loop
pusha
sahf
hlt
lcall
dec
dec
fsubr
pop
aas
xchg
push
in
inc
sub
xchg
call
add
xchg
sub
std
out
mov
stos
pop
sbb
les
push
mov
js
dec
push
lret
cmp
pop
cmc
rclb
and
pushf
or
jnp
or
mov
mov
loop
nop
cmp
pop
adc
cmpsb
jecxz
sub
repz
mov
adc
stc
xchg
xor
addr16
js
mov
inc
lea
pop
lret
ds
shrb
icebp
sbb
cmpsb
and
hlt
lahf
add
fstp
xchg
jl
aaa
jb
loop
fwait
cmpsb
pop
xor
fistps
mov
js
cwtl
inc
imul
inc
imul
mov
shl
ljmp
dec
or
hlt
icebp
lret
sbb
arpl
loope
loop
dec
add
iret
inc
lret
aam
sub
mov
xor
mov
xlat
mov
mov
and
adc
adcl
inc
cwtl
iret
jg
sub
xchg
gs
stos
stos
push
adc
sbb
cmp
std
push
mov
xchg
push
mov
pop
jg
xorl
pop
dec
jp
adc
rcrl
xchg
sub
cmp
call
test
or
push
push
mov
add
pop
pop
sbb
lods
xchg
fildl
sub
ja
imul
loop
or
xchg
les
jecxz
mov
push
pop
cmpsl
test
xchg
sti
add
leave
gs
mov
stos
or
push
cmpb
in
adc
mov
mov
ss
jle
lret
dec
rcll
add
shll
jge
pop
mov
lock
sub
inc
xchg
and
adc
int3
repnz
jmp
xchg
pop
or
add
mov
inc
je
int3
xchg
lahf
push
xlat
loope
xlat
or
xor
or
mov
pop
orb
imull
sub
mov
movsb
mov
mov
mov
inc
in
clc
daa
xchg
mov
in
add
push
jb
or
mov
and
xchg
jne
pop
cld
cmp
or
daa
and
add
ret
xlat
adc
xor
inc
xorb
adc
out
xlat
fisubrl
lahf
xor
mov
mov
repnz
add
jo
mov
push
cmp
and
add
mov
nop
adcb
cli
adc
sbb
fnsave
sbb
movsb
mov
inc
ss
fidivs
push
cmp
outsb
rol
and
mov
xchg
push
cs
rorb
mov
mov
test
hlt
mov
xorl
inc
push
imul
pop
pushf
out
les
stos
add
xor
pop
sbb
push
scas
sbb
lds
jo
ja
pop
lods
jns
stos
fcoms
bound
add
and
jbe
movsl
or
pushf
int
or
push
pop
dec
addr16
or
dec
inc
les
xchg
imul
rorb
cmp
push
cmp
fldcw
inc
mov
jbe
mov
rorb
addr16
in
mov
sbb
sti
pushf
js,pt
imul
loop
std
fsub
xchg
mov
fwait
and
or
adc
xor
or
in
out
in
mov
es
and
xchg
out
jo
push
xor
leave
add
ss
sti
jae
cmp
icebp
sbb
push
mov
imul
and
lret
sbb
fs
jns
inc
popf
xlat
sbb
dec
xlat
and
ds
jmp
nop
lret
leave
lods
idivb
dec
mov
sti
jmp
das
mov
sub
subl
xchg
aaa
lret
xor
adc
mov
or
pop
insl
andb
loope
ret
push
mov
sbb
jl
stc
jno
flds
pop
frstor
sbb
mov
pop
test
mov
in
mov
pop
xchg
aad
xchg
cli
scas
jnp
add
sti
pushf
jb
decl
jnp
lahf
ss
stos
dec
rorl
fsubp
xchg
inc
inc
loop
inc
sbb
imul
cld
mov
jb
dec
sar
inc
or
movsl
xchg
push
test
mov
xchg
out
clc
shrb
mov
subl
fisttpl
xchg
in
dec
clc
xor
push
sub
mov
pusha
js
icebp
in
sbb
cmpsl
xor
jo
add
add
xchg
pop
and
testb
or
clc
push
mov
push
push
out
xor
mov
imul
ret
inc
out
mov
mov
bound
sub
fs
and
aam
mov
mov
cli
js
xchg
mov
jmp
addr16
repnz
lcall
xlat
lods
lret
mov
push
cmp
jne
outsb
fcomip
fcoms
or
xchg
or
xchg
ficoms
mov
imul
xchg
outsb
mov
sub
in
loopne
ds
push
xor
aam
cld
adc
lret
movsb
push
mov
cmp
repz
mov
mov
and
std
pop
cmp
xchg
mov
or
lds
stc
prefetcht2
in
dec
jns
fcomip
imul
aaa
cmc
dec
mov
test
jae
in
xor
popf
clc
repnz
push
fsubs
cmp
rcrl
mov
mov
je
push
aaa
cmp
and
cwtl
mov
in
inc
aaa
xlat
hlt
call
ret
cmp
add
lds
ret
iret
jnp
mov
pop
rclb
pop
loopne
sahf
jno
jb
arpl
mov
shrb
sti
sbb
es
or
pop
mov
lds
inc
popa
adc
push
mov
leave
popa
cs
cltd
adc
dec
aas
dec
dec
sti
jno
sub
mov
cmp
mov
sarl
stos
jne
scas
hlt
mov
xchg
cmp
hlt
xchg
or
dec
xchg
push
dec
aaa
push
in
scas
dec
mov
ja
sbb
xor
sub
lea
sub
orl
xor
cmp
mov
lock
lret
in
sbb
push
out
cli
dec
popf
pop
inc
mov
inc
pop
jno
cmp
xchg
mov
ror
cld
sahf
dec
enter
mov
lock
es
nop
clc
dec
mov
mov
jb
mov
mov
adc
fldt
mov
movsl
lea
std
movsb
lock
in
cs
cmp
mov
xchg
aas
lret
loope
std
out
jo
sub
cmp
and
jmp
fwait
push
sbb
inc
stc
push
mov
lea
inc
bound
les
lock
inc
inc
mov
ret
enter
ret
inc
cmc
push
jne
jg
ficoms
movsb
xor
cwtl
fwait
push
mov
jg
pop
cwtl
sbb
fildl
gs
xchg
mov
lret
sub
cld
adc
out
mov
out
repnz
mov
pushf
cmpsl
addb
fimull
add
rorl
xchg
sub
mov
insl
push
ss
sub
push
ja
mov
test
sub
sub
adc
mov
out
mov
stos
mov
shll
fmulp
jg
mov
mov
das
cmp
mov
mov
lahf
sbb
push
xor
sarb
cmp
out
sub
aas
imul
inc
popf
in
xchg
rorl
out
stc
add
or
cpuid
lea
adc
cmp
sarl
mov
add
xor
dec
jnp
inc
test
add
jno
data16
sarb
mov
scas
outsl
pushw
test
add
add
mov
jno
jecxz
mov
inc
and
sahf
inc
adc
sub
movsb
fnstcw
repz
addl
pop
pop
dec
mov
sub
or
fcompl
inc
into
test
sbb
enter
adc
lret
dec
test
lods
pop
icebp
test
daa
shr
dec
lret
cmp
inc
mov
ds
int3
jecxz
fdivrl
inc
xchg
inc
mov
dec
mov
and
cmp
mov
insb
inc
mov
cld
mov
js
jae
loop
sub
push
mov
xor
loop
sub
sub
add
mov
jns
cmp
adc
cmp
mov
ds
xchg
or
cmc
lock
cmp
cmp
stos
repnz
test
leave
cwtl
dec
or
mov
fidivs
sti
mov
shlb
loop
sbb
fiadds
lock
fisubs
mov
adc
incb
repnz
test
xchg
jne
test
sar
outsl
dec
shl
pop
add
ds
js
jno
cltd
loop
inc
pop
mov
sbb
cmp
rorl
lea
das
sub
sarb
je
inc
or
mov
std
imul
jbe
adc
mov
mov
and
ds
jns
cmp
and
pop
pushf
mov
stos
xor
arpl
test
mov
or
xor
pusha
cltd
mov
jae
leave
aas
popf
dec
out
imul
ss
enter
sti
sahf
dec
sbb
jb
or
mov
cmp
int3
sbb
fisubrs
push
add
jle
push
js
inc
xchg
repz
aaa
jo
ret
add
sbb
and
jp
jge
sub
and
jo
xor
aam
add
nop
cld
cmc
hlt
mov
test
es
xor
in
mov
outsl
in
inc
out
jno
xchg
sub
mov
jae
loope
mov
jge
mov
jbe
aas
mov
cmp
dec
ficoml
dec
testb
jmp
loope
pop
lock
inc
mov
repnz
mov
adc
jbe
stc
out
ret
cli
lcall
rcrb
xor
stc
push
pop
jno
mov
add
pop
pop
rorb
dec
and
add
loope
insb
mov
scas
cmpsb
push
mov
adc
loopne
sub
or
jae
push
imul
lret
iret
or
mov
loope
fs
mov
cmp
orb
cwtl
xchg
fnstsw
aad
lahf
jns
loop
leave
mov
lcall
mov
aam
sti
xor
fsubr
daa
jmp
dec
mov
push
xor
mov
fidivl
jmp
stos
sti
movsl
inc
popf
jl
xchg
insl
mov
enter
jno
lods
dec
mov
pop
jns
leave
jmp
sti
adc
stos
ficoml
aaa
sbb
gs
negl
mov
aad
lds
lods
loop
and
pop
out
lret
xlat
sub
aam
xchg
arpl
iret
test
lcall
lret
and
xchg
or
out
push
das
mov
inc
test
ds
adc
cmpsl
jge
mov
sub
imul
sbb
leave
inc
push
ja
int3
push
testb
jmp
shll
mov
jns
mov
or
inc
inc
repz
aas
in
popa
out
xor
mov
mov
stc
jle
test
repz
sti
xchg
mov
mov
iret
xchg
mov
cwtl
ljmp
xchg
pop
addr16
pop
or
mov
push
ss
and
mov
pop
sub
ds
lock
ljmp
outsl
movsb
mov
jmp
jae
shlb
dec
stc
andb
mov
pop
jne
test
cwtl
clc
aam
stos
add
push
cmp
sbb
xchg
push
mov
lcall
pop
stos
mov
add
in
xchg
out
ja
lcall
add
xchg
mov
xchg
xchg
jge
pop
push
aaa
cmp
cmpb
and
fistl
iret
or
push
ret
mov
dec
mov
lds
dec
js
xchg
and
pop
mov
cmp
aaa
test
and
or
das
push
cltd
fdivrl
out
xchg
pop
cmp
ret
inc
add
push
inc
jmp
insb
cmpsl
insb
cmp
inc
fs
das
xor
test
andb
or
stc
pop
mov
in
inc
negl
sbb
out
mov
fwait
cmp
jg
aaa
mov
das
cld
iret
cltd
cmp
imul
das
scas
push
out
add
adc
sbb
mov
jle
xchg
mov
fadds
out
aad
mov
mov
aad
mov
xchg
mov
mulb
out
mov
jge
mov
mov
adc
mov
inc
test
stc
push
push
mov
imul
orb
loop
and
and
dec
lcall
mov
mov
stc
and
mov
push
mov
sub
mov
push
aaa
lret
lods
mov
dec
mov
sub
dec
enter
leave
popa
and
es
push
mov
pusha
push
or
notl
lods
cli
sub
cltd
xchg
adc
cmova
out
xor
cmp
xchg
daa
scas
pop
call
iret
repnz
int3
out
jle
enter
sub
addr16
shlb
mov
stos
sub
mov
sbb
ds
sub
fldenv
lds
pushw
icebp
cwtl
sbb
jmp
lods
or
inc
sbb
fstl
push
pop
andb
pop
fwait
adc
movsbl
jp
pop
enter
mov
xchg
mov
mov
clc
aad
pop
dec
xchg
lcall
sbb
cmp
jno
mov
add
push
aad
mov
adc
pop
adc
lahf
xor
pop
and
dec
inc
jne
mov
fwait
mov
sbb
jns
fidivs
mov
cmpsb
dec
push
repnz
cmpb
and
xor
add
dec
sbb
push
jg
mov
mov
push
loop
xor
mov
push
ret
imul
sbb
mov
pop
push
xor
lcall
pop
cmpl
mov
jmp
pop
cmc
leave
and
outsb
lds
daa
push
addr16
sbb
addr16
xor
sbb
int3
dec
fisubl
pusha
dec
lods
std
in
shrb
push
inc
jp
in
movsb
jg
mov
pop
push
pop
add
add
or
ja
scas
pushf
mov
mov
xor
jecxz
mul
pop
incb
cmp
fsubrs
push
or
inc
mov
imul
inc
push
push
mov
shrl
orb
mov
xchg
in
mov
sbb
lea
fdivl
inc
out
es
ja
mov
xchg
mov
inc
pop
ljmp
cwtl
push
or
mov
stos
cmp
inc
je
mov
push
fidivl
imul
sub
or
jmp
sbb
push
push
xor
cmp
dec
in
aam
jno
cld
adc
adc
lock
pop
sbb
dec
pop
call
mulb
jns
xor
mov
aas
jge
push
test
fcoml
loop
cwtl
sub
push
inc
imul
out
jno,pt
mov
xlat
movsb
cmpsl
jns
fisubs
push
cmp
jmp
cmpsl
fidivrl
push
lcall
mov
cltd
sbbb
and
sub
fs
aaa
mov
dec
inc
sbb
push
mov
mov
jmp
addr16
xchg
mov
ljmp
and
lret
add
xchg
addr16
or
dec
cltd
idivl
inc
das
inc
sbb
jb
dec
mov
ficoml
adc
fisubs
xorb
mov
cmpsb
lods
xor
push
and
fwait
push
cmp
into
pop
pushl
xchg
loope
cmp
add
dec
fisubrl
sbb
lds
jg
in
cmp
in
mov
adc
bound
sti
cmp
mov
fidivrs
xchg
add
jg
xor
cmp
add
cmp
orl
xchg
and
or
pop
cs
sar
les
inc
imul
pop
xor
insl
push
xor
lcall
push
mov
xchg
mov
jle
sbb
mov
lahf
cmp
add
adc
orl
mov
in
xchg
fwait
insl
jmp
out
xchg
jbe
adc
xor
std
js
xor
cltd
dec
and
mov
repz
adc
inc
mov
sub
inc
fwait
dec
mov
cmp
xor
andb
xlat
out
jnp
and
jmp
cli
scas
addb
in
lret
clc
push
cltd
lea
pop
jl
pop
or
jmp
sub
cltd
fcomps
inc
das
aas
cmp
or
mov
inc
sbb
in
fwait
adc
jmp
repz
bound
mov
aam
sub
int
push
js
movsl
sub
addl
xchg
xchg
mov
scas
cld
rcrl
daa
and
sub
pop
test
jae
jg
push
push
stc
popa
push
jns
and
test
xor
mov
mov
shrl
clc
mov
or
add
push
out
mov
sbb
push
cmp
lret
xor
or
mov
jp
push
jecxz
fisubrl
faddl
mov
adc
in
dec
mov
mulb
hlt
cltd
sti
aad
xchg
push
sbb
hlt
sarl
aas
xchg
jle
ljmp
dec
enter
std
gs
jge
push
imul
addr16
mov
dec
ds
add
push
xchg
clc
ljmp
enter
xchg
adc
repz
lcall
iret
sbb
jg
pop
das
xchg
fisubl
mov
sub
dec
or
mov
lret
hlt
inc
scas
loope
xor
xchg
mov
pop
in
cmp
cmpsb
daa
xorl
ret
pop
clc
je
pop
popf
jbe
sbb
adc
repz
pop
dec
inc
adc
das
jle
mov
sarw
sbb
jge
push
cmpsb
lahf
and
mov
mov
push
inc
imul
lret
bound
mov
pop
mov
mov
xchg
xlat
mov
ds
pop
call
idivb
add
xchg
js
rorb
mov
repz
jmp
mov
clc
cmp
rorb
cmp
into
gs
mov
sub
sub
sahf
popf
xor
dec
out
pop
sub
shll
xlat
lds
cmc
mov
sbb
push
lret
ficoms
stos
jno
inc
scas
mov
jecxz
ljmp
fwait
cmp
addr16
push
test
push
out
and
ficoml
fmul
ds
testl
fiaddl
lcall
jbe
imul
scas
int
sbb
jl
test
in
inc
es
jns
lds
bound
add
iret
mov
int3
pop
pop
mov
ret
mov
enter
stos
ljmp
rcr
push
lods
cmpl
lea
mov
cmpsl
cmp
fwait
sub
int3
fldenv
addr16
cmp
sub
xor
mov
mov
jo
mov
pop
jle
mov
push
ja
outsl
add
mov
or
sub
jae
inc
mov
pop
ficoml
bound
xor
cmp
dec
cmp
aad
jae
adc
pop
jns
aas
cmpsb
inc
jge
out
mov
pop
mov
add
xchg
adc
dec
pextrw
inc
outsb
inc
mov
push
inc
imul
test
add
lods
adc
adc
jge
sub
sbb
xchg
sti
sub
mov
jmp
cwtl
outsb
out
loope
cmp
mov
xor
mov
cwtl
cltd
mov
mov
ret
push
mov
int
push
push
das
and
cmp
fs
pop
js
cmpsb
iret
push
adc
shl
pop
mov
lods
push
mov
sub
pushf
enter
xlat
xchg
adc
ja
sub
dec
ja
pop
dec
loope
mov
jbe
in
dec
push
xchg
insb
push
mov
repnz
scas
repz
dec
cwtl
jmp
fisttpl
cmc
inc
adc
arpl
jnp
in
sub
movsl
mov
scas
into
cmp
mov
and
movsl
stos
cli
daa
andb
ret
std
out
mov
cwtl
test
add
add
aam
and
cmpsb
inc
pop
shlb
lock
mov
inc
leave
or
aaa
movsl
pop
pushf
push
mov
scas
repnz
xor
stos
es
and
pop
jns
test
cmp
leave
dec
aaa
es
rorb
xchg
insl
ret
push
mov
loope
inc
xor
out
inc
push
mov
sbb
popf
icebp
xchg
pop
dec
and
mov
pop
les
pop
sti
out
cmp
stos
stos
push
data16
into
lret
mov
rcr
dec
jle
daa
rcll
and
mov
lds
ret
pop
sahf
loop
es
inc
rcrl
outsl
out
cmp
xchg
stc
add
add
popf
insl
mov
dec
lret
fwait
sbbb
fistl
or
dec
dec
enter
addr16
jmp
jl
dec
daa
lds
mov
ds
jns
fidivrs
sbb
xchg
aas
cwtl
push
int
into
in
xor
cmp
iret
xchg
pop
mov
stc
sub
pop
rolb
push
imul
xchg
or
enter
pop
movb
lods
cld
mov
jl
fwait
and
xchg
fisubs
xchg
dec
je
sub
cmp
arpl
std
decb
pop
and
pusha
pusha
bound
outsb
push
data16
je
jne,pt
clc
adc
lock
mov
scas
add
add
pop
sbb
rcl
cmp
arpl
leave
gs
mov
sahf
pusha
test
mov
and
ret
inc
mov
cld
jge
jb
cltd
es
jg
lods
imul
out
pop
iret
xorb
mov
mov
clc
or
pop
mov
fcmovnb
jno
adc
test
dec
inc
mov
inc
test
aam
dec
call
sub
ficoml
sahf
cmp
cmp
fdivl
cmp
rol
jb
fwait
les
sahf
cmp
cmc
xchg
setb
push
or
sub
xchg
mul
popf
sbb
sahf
sar
xchg
jb
mov
or
cmpsl
dec
pop
in
pop
sbb
shlb
leave
or
lret
popa
or
sbb
xchg
jmp
stos
ja
xor
arpl
mov
lret
push
hlt
fdivp
xor
hlt
or
stos
rorl
jne
xchg
xor
outsb
xchg
imulb
pop
in
stos
mov
popf
jnp
ss
out
scas
mov
das
xchg
stc
in
jne
sub
mov
adc
pop
jb
rorb
mov
test
pop
sahf
jnp
fwait
shrl
lods
pop
xchg
push
ficoms
stos
out
mov
in
imul
inc
cltd
outsb
sbb
dec
loop
xor
scas
shrl
push
test
jecxz
arpl
shl
cmpsb
jno
sbb
inc
std
mov
cmp
push
outsb
imul
lahf
add
or
std
add
es
jge
adc
dec
sbb
jnp
dec
lea
xchg
outsl
sub
pop
ljmp
fcoml
pop
sbb
sti
sbb
sbb
cmp
adc
mov
pop
inc
sbb
xor
cltd
cli
push
mov
xlat
mov
mov
mov
xchg
sub
insl
jae
sbb
outsl
sbb
sarl
mov
movsb
les
or
or
xchg
jge
push
and
jns
dec
xchg
sbb
pop
test
idiv
fnsave
stc
mov
scas
xchg
mov
pop
fidivrl
mov
mov
inc
ljmp
mov
jne
arpl
out
adc
mov
push
ficoml
xor
adc
cltd
stos
pop
rclb
and
push
cmp
mov
aad
and
mov
push
clc
stc
out
jecxz
lcall
push
mov
sahf
xor
push
xchg
dec
imul
fmuls
and
fdivrp
popa
ljmp
loopne
xchg
xchg
ljmp
inc
stc
movsl
pop
add
or
sbb
mov
xchg
clc
shrb
adc
mov
fstpl
inc
into
les
in
push
and
sbb
and
insb
fists
xchg
push
push
out
lahf
pop
pop
dec
cli
sub
int3
in
rcl
movsb
mov
inc
sbb
pop
mov
dec
pop
pop
add
test
iret
popl
push
sub
jmp
iret
inc
repz
int3
sbb
mov
movsl
adc
int
xlat
xor
lods
fs
scas
push
mov
and
scas
out
pop
aaa
mov
mov
hlt
jo
inc
sub
stc
les
pushf
cld
mov
loope
aas
pop
pop
insb
push
test
mov
mov
xlat
in
mov
xor
cmpsl
cmpsl
pop
aad
mov
scas
into
dec
cmp
test
fiadds
mov
jp
rcr
out
pslld
cmp
adc
xor
add
daa
fnsave
jp
add
loopne
mov
sti
xor
ljmp
icebp
sbb
dec
movaps
call
cmp
cmp
lds
movsb
xchg
pop
bound
outsb
sub
sbb
andl
call
call
ret
pop
or
pop
mov
movsl
inc
xor
mov
nop
js
push
sub
pop
mov
in
sub
into
das
pop
jg
fsubl
ss
int
jae
rcrl
push
sbb
dec
cltd
cmpsl
sbb
fsubl
lahf
out
icebp
push
adc
test
pop
sub
sub
xchg
test
xchg
test
push
fldcw
das
pop
shl
sub
push
mov
call
cmpl
movsl
out
dec
mov
xor
mov
mov
cli
cld
les
cld
idivl
stos
in
pop
pop
jg
loopne
mov
xor
inc
roll
and
sub
jp
inc
ds
jmp
add
outsl
and
bound
lret
or
es
push
adc
mov
or
sub
lahf
testl
into
and
loopne
pop
fwait
shlb
sbb
inc
loopne
cmp
push
mov
push
stos
push
insl
adc
jno
lahf
xor
cld
mov
sbb
pop
imul
shl
mov
es
in
insb
outsb
dec
les
adc
adc
in
sbb
fsubl
pop
fsts
jg
iret
push
jl
stos
adc
rclb
cmp
rcll
aaa
loope
fcmovnu
inc
aam
xor
pop
adcl
pop
lret
mov
sbb
add
jle
sub
lds
das
call
std
repnz
sub
mov
sahf
into
xor
incb
mov
inc
xor
dec
xor
or
shlb
mov
mov
iret
sbb
inc
xor
jb
xor
rcr
ret
fcoms
lea
aaa
or
pop
cmp
and
xchg
and
data16
xor
pop
and
inc
jo
sbb
gs
mov
lret
push
mov
sub
loop
push
mov
xchg
push
mov
adcl
adc
sbb
and
dec
fwait
and
mov
pop
arpl
test
shlb
push
jae
leave
pop
mov
xor
ficompl
ds
or
ja
xchg
outsl
cmc
sbbb
arpl
mov
dec
xor
or
xchg
and
lods
lcall
int3
jbe
rorb
repz
aam
sub
add
xchg
and
xor
daa
jge
stos
test
popf
dec
or
pop
mov
xor
adc
into
add
pop
cli
add
xchg
jnp
lret
cmp
add
das
sbb
stos
sarl
mov
sub
movsb
sbb
fidivl
pop
testl
cltd
push
jle
push
push
jae
jno
push
sbb
mov
push
xor
jmp
xchg
inc
mov
xchg
pop
subl
xor
cmp
ds
mov
shll
enter
sbb
adc
mov
sbb
das
pop
negl
stos
xchg
pop
fs
cmpsb
cmp
dec
xchg
mov
inc
cmpsl
in
sub
push
mov
cmp
daa
sbb
scas
xchg
outsl
in
push
shll
push
popa
addr16
stc
and
xchg
jo
xchg
mov
push
jge
addr16
jno
inc
data16
adc
xchg
mov
jae
adc
mov
fwait
les
mov
xchg
lods
mov
mov
pop
adc
stc
loop
leave
mov
hlt
jle
xchg
loop
ljmp
andl
sbb
stc
cmp
cmpsl
fiadds
lods
mov
and
push
gs
movsl
int
test
jmp
movsb
adc
repnz
lret
xchg
xchg
push
icebp
jl
jne
and
pcmpeqb
fldt
mov
in
arpl
imul
lods
sub
icebp
mov
cmpsb
xor
dec
mov
lods
pushf
jne
xchg
pop
lock
enter
imul
add
and
enter
pop
jge
mov
imul
stc
std
loope
xlat
ret
xchg
mov
lcall
pop
loopne
mov
cmp
mov
orb
fs
fldln2
sbb
jecxz
imul
jnp
bound
xchg
xchg
sbb
bound
addr16
hlt
dec
dec
shlb
xor
pop
lcall
ret
adc
xor
jmp
sub
and
jmp
cmpsb
aaa
push
outsl
push
dec
sub
pop
outsl
cld
push
and
fdivs
or
pusha
pop
add
inc
or
or
mov
mov
mov
mov
mov
leave
push
pop
jp
cmp
mov
std
and
imul
rcll
stc
rcrl
jae
lods
sub
push
fcoms
adc
js
movl
xchg
aas
sbb
add
insl
pop
scas
cli
sahf
mov
push
mov
sub
cmp
mov
sub
popf
lcall
rorb
jb
pop
mov
sbb
aam
jecxz
call
inc
adc
xchg
mov
jmp
aas
iret
push
and
jg
test
out
dec
std
insb
aam
push
xor
jmp
inc
jmp
in
nop
fcomp
and
repnz
cs
push
adc
or
jae
rolb
jae
pop
out
testl
jns
rorl
fwait
dec
repnz
cld
xor
shr
or
mov
pushf
push
jno
pop
in
outsb
adc
std
mov
cltd
repnz
jns
in
lcall
sbb
pop
loopne
cmc
dec
push
lods
cli
lock
icebp
cmp
and
roll
sahf
daa
out
lods
in
test
mov
int
in
test
or
dec
fcomip
jmp
xor
lock
mov
mov
push
cld
push
shll
stc
pop
addl
fbld
call
divb
test
pop
push
fsubrl
or
push
dec
insb
mov
sbb
mov
push
push
popf
xchg
or
mov
jnp
call
cltd
sbb
shlb
ret
js
rcl
jo
mov
fmull
jmp
push
movsl
push
push
push
in
mov
stos
sub
push
adc
push
hlt
pop
fistpl
sahf
out
mov
push
iret
xor
sbb
xchg
data16
div
cwtl
cmp
test
mov
out
pop
jbe
cli
pusha
int3
or
jno
jbe
or
daa
mov
sti
push
mov
lret
pop
cwtl
xlat
and
lcall
adc
cmpsl
and
push
rcl
inc
or
ret
fildll
sbb
xchg
xchg
mov
fcoml
xor
loop
adc
mov
adc
shlb
fs
jb
mov
fsts
sbb
arpl
add
sbbl
mov
shr
incb
out
inc
xchg
out
lods
std
lea
jns
ljmp
xchg
mov
mov
fists
sub
or
cmp
gs
insl
cwtl
xor
clc
adc
aas
lds
push
ret
out
mov
stc
fwait
jno
jne
and
push
mov
rcll
mov
pop
ds
gs
outsb
jl
dec
iret
pop
lcall
push
int
enter
cmpsb
or
mov
xchg
faddp
sbb
xchg
add
adc
mov
push
leave
push
jno
xchg
lcall
je
imul
pop
loope,pn
lret
dec
int3
std
fcmovbe
mov
enter
sub
fldt
aam
shll
incb
push
push
xor
test
mov
pop
push
or
or
mov
cmp
dec
and
xchg
aam
imul
xchg
sub
in
add
xlat
imul
add
out
pop
adc
scas
mov
mov
inc
aas
dec
lea
push
cmp
mov
cmp
mov
in
iret
loope
hlt
push
daa
lock
or
dec
fsubrl
sbb
push
in
jg
icebp
sti
mov
test
and
addr16
pop
sub
lret
fs
rorb
cld
je
daa
ret
mov
sbb
xchg
arpl
mov
fucomip
cld
jne
test
xor
sub
and
cld
cmc
adc
lods
jae
xor
es
xchg
test
push
fbld
cmp
sti
in
mov
pushf
pop
popf
inc
test
jp
test
in
sarl
fwait
in
push
push
iret
xor
movsb
sub
jne
sbb
inc
sbb
jle
pop
and
and
aaa
std
jae
mov
xchg
lcall
push
mov
iret
fwait
cmp
pop
insl
and
das
push
fdivrl
sub
xchg
int
mov
call
jne
outsb
ret
sbb
fwait
sub
lret
or
xchg
xchg
mov
cmp
ds
cmp
xchg
fadds
mov
aas
add
testb
mov
fidivrl
pop
adc
mov
int3
sbb
push
pop
outsl
sbb
in
sub
mov
pop
cmp
push
mov
das
mov
sbb
dec
mov
ds
fistpll
or
outsl
outsl
mov
cmp
adc
mov
inc
mov
jge
nop
or
aas
aas
xchg
ja
mov
mov
mov
cmpsb
mov
xchg
pop
inc
stos
cmp
dec
xchg
push
scas
stos
outsl
sbb
insl
mov
xlat
push
js
jmp
mov
jno
jo
clc
and
jne
nop
xchg
dec
cmp
pop
sbb
sub
lods
sbb
or
sub
push
pop
or
push
in
xor
xchg
xchg
xchg
je
mov
out
and
movsl
mov
call
popa
daa
js
fldenv
mov
repnz
insb
mov
adc
mov
xchg
pop
mov
and
orl
andb
sbb
movb
int3
inc
pop
add
mov
fdiv
insl
mov
mov
adc
push
pop
fwait
jo
mov
xor
dec
subl
out
cmp
gs
adc
and
mov
icebp
cmpsb
dec
push
iret
ret
cmp
enter
insb
movsb
jmp
in
loopne
jle
jnp
sbb
stos
xor
je
pushl
pushf
test
pop
addr16
inc
mov
sti
cmp
mov
nop
leave
push
push
test
test
dec
jp
std
mov
adc
xchg
xchg
in
shll
jl
and
call
mov
out
pop
mov
inc
inc
lock
movsl
jnp
pop
jbe
or
negl
dec
addl
xor
cs
pop
pushl
add
dec
jg
mov
or
data16
mov
sub
inc
push
pop
jae
mov
push
adc
or
adc
sahf
ret
sub
mov
pop
insl
fisubl
popf
imul
pop
cmpsb
pop
lea
mov
fs
addr16
mov
into
sahf
pop
stos
xor
lret
movsl
enter
add
fwait
push
xor
les
mov
lret
mov
push
jbe
test
dec
jo
int3
mov
aam
xor
push
and
pop
xlat
cmpsb
sbb
andb
sub
add
sbb
jl
mov
add
mov
ss
out
mov
and
das
and
push
into
mov
jno
dec
jle
je
lret
xor
lods
loopne
add
out
sbb
sub
aad
inc
pop
adc
mov
pusha
mov
arpl
adc
cltd
out
decb
push
pop
ljmp
lcall
xchg
roll
cmpsl
int3
xchg
es
push
jg
jge
cmp
or
inc
popa
sub
es
shrl
dec
into
enter
inc
cmp
sti
movsb
jb
push
or
or
mov
ficompl
mov
adc
data16
data16
mov
imul
cli
push
nop
xchg
cmp
inc
lds
sbb
ds
ljmp
mov
ss
lds
arpl
in
sub
negb
leave
mov
scas
int
ret
out
pop
roll
pop
and
scas
int3
cltd
jg
pop
jge
lret
xor
getsec
sub
loope
pop
cmpsb
insb
xchg
inc
loopne
sbb
xor
add
or
pop
mov
and
xchg
adcl
push
out
imul
es
xchg
sub
mov
testb
shlb
out
dec
in
xor
fbstp
faddl
mov
or
sarb
imul
rcr
test
jo
cmpsl
stos
roll
bound
imul
data16
add
nop
sbb
push
js
in
mov
insb
jle
in
in
fisttpl
int3
push
frstor
push
push
aam
mov
ja
add
lahf
cmpsl
lcall
clc
nop
sbb
jns
add
xor
lods
arpl
pop
xchg
jno
sub
inc
mov
es
jnp
fdivrl
jb
lahf
mov
je,pn
inc
fcoml
jns
test
mov
xchg
into
les
test
mov
mov
pop
pop
mov
xor
orl
negl
xor
test
xchg
clc
roll
xorl
push
das
in
mov
pop
mov
xor
xchg
jmp
out
stc
aad
test
or
xorl
pop
push
sarl
cld
cmp
ret
in
inc
sub
mov
xchg
leave
icebp
lods
or
and
mov
jns
ja
push
xchg
mov
test
sbb
jl
les
mov
repz
cmp
arpl
jo
rorb
or
dec
mov
push
push
idivl
pop
xchg
lods
add
dec
bound
testl
mov
iret
sbb
mov
movsl
fcoml
fisubs
shl
push
sbb
mov
xor
lret
out
lahf
insb
jmp
in
xor
cmpsl
loopne
push
movsl
xor
jmp
cwtl
xchg
jnp
cli
rcr
aaa
xor
ja
mov
loop
imul
lret
and
cli
jp
jge
icebp
mov
push
xchg
sub
jmp
lcall
mov
jle,pt
or
out
and
pop
and
lret
inc
inc
xor
outsl
fsubs
aad
mov
clc
fldcw
pop
push
test
jns
fildll
xchg
pop
inc
movsl
cmp
test
cmp
insb
mov
sbb
xor
pushl
jg
or
cwtl
add
inc
xchg
les
cmp
repz
aaa
addb
nop
or
dec
daa
movb
dec
lds
xor
test
lock
outsl
mov
and
lret
scas
imul
cmp
movsb
push
stos
dec
enter
jl
idivb
shll
in
sbb
sbb
push
jns
push
push
inc
push
xor
clc
popf
sbb
push
xchg
mov
fcoms
xchg
mov
mov
sub
cmpsl
xchg
ljmp
sub
inc
inc
lahf
add
dec
enter
jecxz
sub
hlt
jo
mov
pop
out
and
pop
sbb
pop
cmp
pop
dec
and
cwtl
mov
insb
dec
fnstcw
mov
add
pop
push
test
sbb
in
js
jb
bound
xchg
in
idivl
cltd
push
mov
push
inc
push
or
mov
cmp
imul
jb
iret
xor
and
int3
sub
inc
mov
test
pop
mov
sahf
adcb
lret
pop
sbb
data16
push
ret
sub
mov
dec
lock
add
adc
or
mov
jg
jns
or
xchg
out
mov
and
repnz
inc
fwait
mov
push
ss
and
imul
addb
mov
dec
into
mov
fmulp
pop
data16
pushf
xchg
mov
sti
out
inc
pop
sub
loop
js
push
jne
and
pushf
jo
cwtl
mov
mov
test
jle
jg
push
and
cmp
add
and
test
sub
xchg
adc
mov
push
jbe
test
stos
lods
arpl
adc
mov
hlt
rcll
mov
jmp
mov
jg
shrb
shll
in
clc
add
lods
push
jle
jno
push
inc
int3
rclb
xor
icebp
das
cmp
test
mov
ficoms
mov
xorb
loopne
dec
and
sbb
push
xchg
int
lock
xchg
dec
mov
call
loope
insb
mov
sbb
mov
mov
push
or
inc
cmp
jecxz
mov
pop
xor
inc
mov
add
mov
fsubr
sbb
push
adc
mov
lcall
call
cmp
das
inc
mov
rorl
mov
loope
adc
fadd
or
aad
mov
add
inc
leave
outsb
rcl
lcall
inc
mov
or
hlt
xlat
fsubrs
gs
pusha
lcall
pop
inc
dec
jg
push
cmp
mov
aaa
add
out
pop
repnz
cli
std
jne
mov
inc
sub
or
xor
pushl
add
in
jae
idivb
xchg
xor
mov
mov
sbb
ljmp
xor
icebp
or
mov
xchg
repz
dec
xchg
or
ljmp
jmp
shr
mov
xchg
repnz
stc
jb
inc
ret
and
pop
lods
mov
testb
ficomps
aaa
daa
movsl
sub
enter
arpl
sti
push
fnstsw
stos
pushf
lea
sub
divl
stos
mov
sahf
sbb
into
stos
sbb
outsb
ss
mov
lds
repnz
hlt
test
adc
add
mov
xlat
adc
mov
lret
lods
outsl
into
movsb
dec
adc
cmp
dec
pop
test
fwait
sub
cmp
rep
sbb
xor
add
fmull
lcall
pop
fstps
or
notl
je
aas
movsb
ja
mov
or
mov
shlb
jae
push
push
test
push
jle
rcr
adc
push
fildll
scas
movsb
popf
adcb
data16
cs
jmp
insb
xor
imul
push
push
jb
mov
loop
mov
out
sub
dec
pushf
mov
add
sub
sti
push
pop
mov
and
es
repnz
dec
stos
dec
outsb
fwait
jnp
inc
popf
imul
cmp
and
jle
or
mov
movsb
lds
mov
mov
sbb
push
ds
lahf
push
lods
jle
dec
cld
push
sub
loopne
and
mov
dec
lods
fmulp
sub
sti
cmp
adc
or
cmp
fildl
mov
pop
add
adc
mov
inc
imul
jmp
das
pushf
dec
add
mov
pop
mov
fsubrs
xlat
lods
ja
or
js
add
inc
shll
pop
mull
insl
jae
rcll
or
mov
ffreep
inc
or
mov
xchg
pop
mov
xchg
xor
push
out
ret
mov
mov
pop
int
sbb
mov
cmp
dec
lcall
cmp
lcall
fstpl
fsubs
iret
inc
and
mov
xchg
ja
inc
sub
push
pushf
jecxz
loope
adc
mov
xchg
dec
pop
fisttpl
mov
popa
mov
jecxz
into
and
inc
sub
pusha
fadds
push
mov
dec
pusha
pusha
jle
mov
mov
in
mov
dec
aad
push
or
jbe
divl
das
in
cmpsb
push
movsb
cmp
pop
mov
fs
add
int3
cmp
push
pop
add
pop
pusha
pop
lret
mov
inc
mov
jb
add
xor
sub
test
mov
pop
notb
imul
jno
cmp
fildll
repnz
inc
add
fldl
or
or
in
mov
fs
ja
cmp
cbtw
pop
fsts
sub
aas
mov
pop
sbb
push
mov
aad
ss
enter
xlat
mov
jns
repnz
jns
test
cmpsb
push
mov
sbb
bound
mov
mov
cld
pop
frstor
sahf
pop
fisubrl
cltd
insb
cwtl
push
dec
imul
or
or
and
es
addl
hlt
mov
jo
mov
add
in
or
setae
mov
pop
add
out
insl
push
xorb
jl
clc
jg
idivb
aas
outsl
pop
or
xor
pop
das
add
jmp
xchg
cmc
push
leave
mov
cmp
sbb
jmp
jns
cmp
xorb
mov
cmp
pop
mov
lock
sub
psllw
jbe
shr
inc
lds
adc
sbb
adcl
jne
pop
or
ss
push
ljmp
or
or
pushf
jmp
dec
mov
in
pop
lock
movsb
lret
sbb
clc
out
cmp
ss
mov
cltd
fdivr
mov
sbb
es
lods
insl
mov
adc
cmp
xorl
dec
pop
fwait
das
or
push
mov
jecxz
mov
popf
dec
aad
push
cmpsl
outsb
fldcw
xor
mov
sub
jl
fdivl
add
lcall
mov
shl
les
mov
ljmp
gs
adc
lea
dec
inc
xchg
dec
aam
lea
clc
popa
xchg
mov
pop
je
enter
imulb
les
ret
cmp
ljmp
lcall
arpl
xor
rcrb
mov
stc
lock
pop
mov
lods
dec
dec
fcoml
dec
cltd
rcl
mov
and
sub
loop
jnp
dec
push
xor
bound
cmp
subb
andb
inc
repnz
pusha
adc
int3
popf
and
int3
dec
sub
loope
adc
jge
mov
adc
xor
inc
cmpsb
pop
xor
inc
loop
popf
xchg
fisttpll
jo
out
sub
dec
js
subb
inc
fistl
cmp
adc
sti
lret
pop
mov
pushf
and
adc
mov
out
stos
in
push
lret
jo
xor
dec
mov
lea
jl
push
test
fildll
sbb
mov
das
imul
push
nop
out
inc
mov
sub
mov
movsb
scas
pop
mov
lahf
jl
dec
lds
loope
push
inc
fisubrl
aam
xor
js
sahf
jg
je
inc
jno
jb
stos
jnp
das
jo
in
and
aam
data16
in
dec
and
mov
repz
sahf
cli
popf
adc
mov
ja
test
dec
stos
cwtl
mov
rclb
fsubs
mov
mov
mov
fwait
xor
inc
mov
out
sarb
pop
push
int3
sbb
add
dec
mov
mov
fistl
gs
lock
add
xor
xchg
pop
out
stos
cld
jbe
call
jo
pop
in
xor
mov
bound
push
adc
push
add
or
mov
loope
xor
sahf
sub
cmp
aad
cmpsb
adc
push
cwtl
sub
mov
sub
push
push
hlt
inc
dec
jnp
popf
and
xchg
fwait
or
push
jge
decl
lcall
pop
mov
outsb
movsl
xlat
and
movl
pop
arpl
lds
enter
dec
xchg
mov
adc
push
xchg
inc
bound
popa
cmp
add
nop
xor
mov
lret
mov
jb
pop
xor
mov
outsl
mov
cmpsl
sbb
cli
shrl
inc
sbb
pop
pop
adc
in
std
jne
push
and
loope
loop
leavew
nop
imul
cli
mov
jno
xchg
adc
jle,pn
scas
loop
sbb
fwait
xor
dec
in
movsl
cld
fistl
les
jg
fistps
push
ja
mov
add
mov
inc
fwait
push
mov
cmp
cli
loopne
lret
or
adc
push
gs
xchg
jns
shll
or
aaa
loopne
mov
add
mov
cs
push
dec
pop
mov
neg
push
data16
ret
test
lahf
sub
mov
and
mov
xchg
pop
test
adc
or
pop
icebp
cmp
xchg
jne
lods
pop
call
lcall
fsubr
xchg
lret
pop
cmp
andw
lods
cmp
es
dec
jae
lcall
arpl
fwait
xchg
inc
lea
sub
xchg
les
nop
faddl
adc
mov
mov
lcall
insl
pusha
sub
mov
cmp
icebp
fcoml
popf
loope
jle
cs
into
push
pusha
or
inc
das
and
cmp
pop
cs
mov
xor
arpl
icebp
and
pop
pop
das
insb
stc
mov
pop
dec
int
sahf
mov
lds
in
in
sbb
jno
fsubl
xlat
jle
inc
leave
out
adc
ss
cld
pop
outsl
scas
mov
pop
jle
push
push
scas
mov
mov
sbb
xor
loopne
pop
and
add
das
cltd
bound
push
sarb
in
mov
dec
mov
xor
push
repnz
iret
mov
sbb
pop
mov
loop
jae
push
lcall
sbb
sti
gs
sar
leave
in
notb
das
loope
push
jmp
pop
inc
mov
loop
cmpsl
mov
mov
and
hlt
sbb
dec
mov
out
pop
lds
test
out
test
test
mov
or
push
mov
push
mov
test
mov
cmp
or
mov
fimull
int
iret
push
adc
leave
out
fwait
sub
push
add
ret
adc
jae
fidivl
sbb
mov
inc
repz
lcall
dec
jmp
shlb
pusha
test
push
mov
bound
or
jno
jge
test
and
shl
cs
jnp
push
scas
stos
pop
xor
cli
adc
rolb
in
jo
inc
aas
insb
add
push
in
je,pn
push
push
dec
iret
pextrw
lods
lods
sub
mov
aaa
aad
aaa
in
xchg
mov
mov
add
fnstenv
jb
cld
sbb
adc
push
xchg
ds
jge
scas
ds
test
inc
push
loop
arpl
loopne
or
cmp
xor
in
adc
and
stos
movsl
or
add
mov
insb
pop
add
cmp
mov
pop
sahf
int
or
xchg
xchg
lods
aas
adc
jge
mov
add
mov
push
je
aad
lds
push
add
into
fisubrl
fsubrl
push
cld
shll
adc
dec
cmp
add
jecxz
imul
lret
inc
lods
lret
cmp
lcall
or
fwait
mov
xor
dec
btrl
cmp
jae
jge
add
jg
insb
ss
in
in
jns
in
push
aam
cmpsb
jnp
ss
pop
push
push
outsl
clc
jecxz
aam
push
lahf
cmp
pop
jecxz
push
mul
push
or
fistl
and
inc
push
mov
stos
hlt
ror
fistpll
xchg
loop
mov
insb
sahf
cmp
pop
xlat
ljmp
xchg
nop
sbb
fs
pushf
push
mov
add
test
add
dec
lahf
cs
mov
es
pop
iret
test
and
mov
add
inc
imul
lsl
adc
flds
xchg
push
inc
out
stc
sar
imul
jl
mov
adc
test
sbb
das
sti
iret
and
push
xchg
mov
xchg
int3
pop
in
rcrl
mov
xchg
enter
push
imul
adc
add
mov
cs
adc
loopne
sti
dec
pop
xor
jp
push
and
ret
lcall
add
std
inc
test
stc
sbb
repnz
in
adc
jno
mov
fpatan
mov
mov
sti
mov
push
add
lods
je
cmp
and
mov
cli
je
push
push
sbb
cmpl
cwtl
cmp
fninit
and
mov
fxch
sub
jl
lds
shrl
add
lds
fdivs
push
mov
push
popf
cld
dec
and
fnstenv
cmp
leave
dec
inc
cmp
fwait
sub
leave
mov
dec
lahf
lods
js
dec
or
fwait
jmp
push
pusha
pushl
inc
lods
hlt
sbb
jl
jmp
loopne
aam
out
sbb
daa
loopne
repnz
push
shlb
adc
pcmpgtb
and
lahf
mov
xchg
mov
mov
sbb
or
sbb
push
dec
sbb
xchg
jb
xchg
jmp
xor
jae
mov
jns
cld
fs
jne
icebp
jne
mov
stos
cli
ficoml
movntps
push
mov
xor
sbb
stc
out
sbb
sbb
shl
lock
je
shll
dec
shll
inc
pop
mov
cmp
lds
in
xchg
lods
xor
push
pop
mov
fstpt
cmp
jg
lret
and
imul
sbb
xchg
out
mov
xchg
mov
sti
in
and
rcr
loope
mov
jns
gs
inc
out
in
icebp
lock
mov
adc
lea
jg
ja
out
in
fisubs
loopne
adc
dec
cmp
sub
imul
mov
jecxz
or
inc
push
adc
add
sbb
sar
xor
enter
aas
aas
push
lock
or
push
xor
xor
mov
loope
cmpsb
xor
sbb
xor
cmpsb
fcmovnbe
mov
xchg
or
pop
andl
pop
test
cmp
daa
pop
subb
xor
int
dec
repnz
insl
push
mov
insl
pop
lds
xchg
mov
sbb
push
add
testl
mov
jmp
sbb
xorb
mov
imul
arpl
cmpb
pop
scas
jne
and
aad
add
lods
in
xchg
stos
dec
sbb
pop
mov
mov
in
and
push
and
mov
mov
stos
sub
jmp
fildl
dec
jg
pop
xchg
cmp
sub
sub
gs
pop
sub
jae
inc
and
dec
xlat
shll
in
sbb
sub
add
ret
insl
mov
popa
mov
push
movsb
sbb
pop
and
out
push
je
es
pop
bt
xchg
int
cmp
push
pop
jns
clc
cmp
or
mov
insb
fdivrs
insl
notb
cmp
fstps
in
es
sub
lret
fsubrp
cltd
and
xor
insl
jno
push
leave
lods
mov
xor
mov
cmc
pushf
add
inc
sub
mov
push
push
mov
jl
fsubrs
and
and
mov
mov
push
test
cmp
das
sub
shll
iret
mov
test
bound
jp
jnp
ljmp
in
add
adc
push
xor
xchg
cmp
int
cmp
push
shlb
lret
jge
pusha
icebp
sbb
lods
fidivrs
loope
xor
les
push
jle
mov
pop
shlb
pop
aaa
nop
push
cld
cmpsl
dec
or
fdivl
test
and
sbb
lods
cmp
into
jnp
cmc
sbb
daa
sub
mov
ss
insb
add
fldl
gs
cmp
imul
mov
mov
xor
fsub
nop
out
cmpsl
cmp
jmp
jl
and
aad
xor
add
lret
sub
ret
sub
xor
dec
cld
insl
out
gs
jnp
sbb
sub
sahf
into
ret
shll
push
mov
sbb
xor
negl
adc
adc
mov
jno,pt
add
xor
jmp
or
cmp
les
or
enter
lods
jne
lods
cmc
outsb
ljmp
mov
mov
inc
inc
pushf
and
adc
subb
mov
icebp
fadd
hlt
mov
dec
adc
adc
mov
mov
scas
ficomps
jb
mov
ja
aaa
push
jmp
xchg
cmc
gs
repz
ss
push
xor
jmp
mov
nop
ss
leave
call
pop
sti
dec
mov
mov
stc
ror
mov
cmp
sub
insl
mov
lea
in
pop
push
push
mov
jae
sub
jg
xlat
jb
out
out
scas
fdivl
and
sbb
mov
xchg
loope
and
push
inc
fimuls
and
push
mov
lock
adc
add
sarl
mov
lret
pop
arpl
jmp
leave
lcall
mov
jo
sbb
lcall
out
mov
out
popf
xchg
add
fdivp
cmpsl
pop
jg
ret
fisubl
and
pop
cmpxchg
and
jbe
mov
xchg
adc
sbb
mov
or
fmuls
adc
dec
frstor
in
jecxz
test
pop
lcall
jp
adc
jp
fidivs
pop
jns
in
int3
mov
aas
and
leave
test
jne
jb
lcall
sub
adc
outsb
outsb
in
in
push
push
in
jbe
pop
or
outsl
addr16
into
in
sub
mov
xchg
push
or
repnz
cmp
outsl
jae
adc
hlt
pop
pop
sahf
add
fcomp
aas
xchg
dec
loopne
adc
aas
mov
dec
mov
adc
cmc
xchg
inc
push
sub
and
mov
pop
dec
call
in
and
xchg
fsubrs
daa
or
repnz
jecxz
loopne
int3
gs
iret
fcompl
data16
arpl
pop
push
adc
and
jnp
xor
stos
nop
out
mov
insl
mov
cli
and
dec
or
or
jo
mov
js
push
cs
lsl
jmp
iret
lods
mov
repz
aaa
aam
push
das
xor
and
and
cs
jnp
jo
sub
loop
xchg
push
repnz
xorb
je
sbb
rorb
pop
xor
cli
lea
jmp
mov
inc
pop
test
push
push
movsl
lods
cli
dec
popa
push
mov
stos
jno
sbb
inc
daa
add
or
or
mov
xchg
xchg
sub
inc
inc
call
dec
das
cmc
movsl
mov
inc
push
inc
mov
int3
bound
dec
mov
dec
mov
lods
sub
adc
out
loop
outsl
enter
cmp
mov
int3
imul
lret
movsb
cmp
inc
cmpsb
outsl
fsub
add
inc
lods
push
cld
sbb
into
out
adc
sbb
jne
jg
inc
nop
in
adcb
or
jns
out
push
adc
lret
dec
test
cmpsb
xchg
out
dec
mov
rcrl
into
jge
or
imul
test
cmp
es
jecxz
sti
lods
or
add
les
fidivrl
mov
loop
flds
mov
pop
jae
pop
push
js
mov
scas
std
push
push
push
jae
jns
aam
movsl
aad
out
imul
cld
lret
lcall
loop
add
jno
jp
test
mov
xchg
inc
lea
or
ret
fisubl
push
add
int
loop
adc
and
test
loop
add
es
loopne
mov
in
ret
mov
lret
sub
loopne
push
into
ljmp
inc
mov
int
xor
cmp
xchg
xor
pusha
sbb
jg
mov
adcb
dec
iret
ficompl
xchg
out
inc
mov
das
xor
lret
inc
shlb
mov
cmpsl
subb
out
add
movsl
inc
pop
dec
lea
jge
hlt
mov
rorb
jo
repnz
jle
mov
add
fistps
push
sbb
pop
test
mov
iret
movsl
inc
xchg
mov
and
sbb
add
cltd
mov
mov
cmpsb
lods
add
shlb
sub
jmp
cmpsb
repnz
lea
xchg
fwait
adc
or
jns
hlt
cli
sbbb
movsl
ret
out
mov
fimull
mov
fucomi
mov
pop
jb
pop
aad
xor
lret
pop
jecxz
sbb
xchg
outsb
sbb
xchg
sbb
pop
in
add
push
jns
ret
and
mov
mov
dec
add
adc
sbb
mov
aad
cmpsb
push
jne
mov
push
push
cmp
out
neg
outsb
pop
cmp
pop
orb
lods
enter
aad
pop
mov
or
add
mov
pop
mov
sbb
mov
mov
dec
bound
mov
jne
inc
pop
leave
rorb
mov
xor
xchg
fmuls
pop
test
inc
push
out
arpl
jl
icebp
fildl
mov
xchg
push
mov
push
std
call
dec
push
adc
ret
hlt
je
sbb
aaa
shrl
lahf
je
xchg
dec
xor
daa
adc
cmc
mov
ret
jp
inc
push
ret
xchg
sbb
popa
mov
xchg
jbe
jg
mov
pushf
fsubr
ja
sbb
jmp
push
jb
pusha
rep
outsl
pop
mov
jae
inc
sub
sub
pop
movsl
in
sub
adc
push
int
sbb
dec
add
and
xor
aad
cmp
out
cld
daa
jle
mov
push
ror
push
cltd
xchg
repz
push
jo
xor
xor
inc
mov
stc
or
add
push
mov
push
aas
jg
mov
jg
cmpsl
add
mov
and
sub
xchg
dec
xor
dec
push
std
mov
add
stc
mov
mov
rcr
repz
loopne
ret
lods
iret
jge
icebp
lahf
and
jmp
push
mov
bound
shrb
out
sub
clc
in
arpl
aaa
adc
inc
add
out
scas
aas
cmc
lods
inc
clc
and
popf
aam
stos
dec
sub
shrb
dec
cmp
iret
mov
sbb
imul
inc
repz
into
into
sahf
fs
shlb
sbb
cmc
mov
andb
test
std
add
pop
sarb
inc
sbb
inc
mov
adc
mov
sbb
test
adc
test
cs
push
popf
jne
pop
and
fdivl
lods
add
sti
mov
mov
xlat
add
inc
ja
mov
fistps
mov
add
fnstenv
movsl
outsb
iret
push
inc
jge
ret
add
dec
lods
push
aas
inc
inc
or
xchg
imul
jnp
add
inc
sbb
es
negb
popa
mov
xor
lahf
pop
lahf
adc
or
mov
decl
mov
lahf
pop
mov
xorb
xchg
dec
jnp
or
fisubs
fisttps
cmpsb
cld
xchg
ss
mov
ss
enter
fwait
pop
mov
in
jnp
jp
in
sahf
popf
int
cmp
jbe
aaa
xchg
rorb
jle
xorl
insb
xlat
cmp
test
push
push
fsubrl
mov
mov
testl
xlat
xor
xchg
dec
push
push
adc
ret
daa
dec
and
xlat
pop
dec
subb
inc
test
push
xor
movsl
cmpsb
push
add
fisubrl
jnp
push
mov
push
cld
jno
nop
mov
push
cli
in
das
cltd
ja
cmp
jmp
loope
jnp
jo
mov
push
inc
fistl
pop
aad
es
jecxz
js
ss
mull
int3
cmc
out
mov
and
jl
imul
and
fwait
ss
jnp
mov
sub
or
sub
adc
inc
jmp
push
mov
xchg
add
jcxz
andb
aad
fsubrl
pop
fcomp
lcall
in
loope
adc
outsl
inc
scas
or
or
repz
sub
fistl
or
xchg
ja
mov
je
mov
cs
sbb
xor
lds
cmpsb
dec
test
pop
aam
xlat
ja
and
add
cmp
je
andb
scas
pop
lahf
sbbl
jg
popf
mov
rcrl
loope
xchg
cld
in
push
movsb
lods
sbb
in
xchg
ljmp
xchg
jg
sub
stc
mov
mov
adcb
leave
lock
ja
fs
scas
sub
shl
movl
or
mov
mov
and
xor
imul
clc
inc
scas
jb
stos
cld
xchg
dec
lods
int3
cmp
dec
push
dec
mov
mov
data16
in
add
into
test
lret
iret
daa
std
outsl
sbb
cli
sub
fidivrl
icebp
stos
aaa
xchg
cmpsl
ljmp
shl
adc
dec
in
xchg
mov
out
dec
cmp
xchg
lock
push
push
xchg
sbb
subb
mov
outsl
les
stc
or
sti
mov
cvtdq2ps
out
inc
mov
xchg
sbb
aad
mov
imul
sbb
nop
adc
cmp
es
loopne
testl
cwtl
pop
inc
out
or
inc
dec
pop
in
mov
jbe
addr16
xchg
call
and
sahf
sbb
jo
add
bound
scas
cmpl
mov
pop
push
inc
lds
pop
push
push
int
or
pusha
test
jge
and
pop
sti
into
jo
sub
and
mov
andl
adc
aaa
aaa
repnz
in
sbb
inc
idivl
xchg
rcrb
adcb
adc
or
mov
and
fcmove
lcall
gs
out
repz
jge
xchg
loopne
outsb
dec
xchg
xchg
outsl
inc
into
sub
loop
dec
xchg
shl
shlb
addr16
cmc
dec
jno
pop
pop
popa
sbb
in
mov
int
xor
dec
lea
ja
xor
out
dec
insb
jo
and
into
mov
mov
fstpl
cltd
mov
je
push
fwait
xchg
sub
arpl
ljmp
test
cmp
mov
adc
ret
adc
movsl
les
sbb
sub
mov
jmp
shr
fwait
xchg
andb
push
pushf
jp
dec
adc
inc
repz
sbb
jmp
lock
ss
push
inc
aaa
mov
enter
push
cmpb
rcr
mov
fdivl
ljmp
jmp
cmp
iret
add
std
popa
xchg
js
fldln2
outsb
mov
sub
cmp
es
lea
inc
add
mov
mov
sub
cltd
pop
adc
jns
out
test
or
push
and
xchg
int3
loope
jo
fsubl
jmp
push
push
lcall
inc
lods
mov
mov
inc
int
sti
dec
or
jbe
ja
jne
out
pushf
inc
out
mov
popa
xor
cltd
xor
fwait
roll
push
mov
adcl
xchg
jnp
scas
scas
pop
inc
mov
push
fidivs
lods
mov
mov
imul
jl
mov
incb
push
pushf
and
test
rol
sbb
and
inc
test
movsl
ljmp
out
popf
adc
mov
fwait
jg
dec
jp
dec
pusha
cmp
out
or
dec
inc
sbb
mov
roll
xchg
inc
push
rorb
addr16
loopne
dec
mov
in
mov
cmc
mov
ds
push
dec
test
test
mov
test
ds
ja
push
clc
sub
fnstcw
jp
ljmp
jecxz
clc
mov
cltd
ja
mov
adc
cltd
js
imul
cmpl
cwtl
es
inc
push
pop
daa
inc
outsl
inc
jb
clc
cmp
iret
add
cmp
outsl
jmp
les
add
into
xchg
mov
xor
inc
mov
push
icebp
movsb
js
outsl
push
mov
xchg
pop
push
out
sub
or
in
testl
rcrl
test
ret
lret
mov
xor
ret
sahf
arpl
aad
dec
xor
and
clc
mov
cwtl
jl
mov
pop
test
outsl
scas
mov
testl
and
jnp
xchg
mov
mov
mov
hlt
cmpb
lods
xchg
std
dec
daa
push
pushl
gs
dec
insl
pop
je
dec
mov
ret
lods
fidivs
pop
adc
mov
in
push
orb
add
sub
push
mov
lds
sbbb
arpl
add
clc
ljmp
or
sub
jg
adc
fcmovu
out
pop
jg
mov
fcmove
pop
gs
sbb
xchg
jecxz
mov
jo
sbb
leave
inc
decl
xor
in
ror
jb
cmp
xor
iret
jb
in
push
and
stos
add
or
in
lods
jl
data16
imul
mov
cmp
push
ljmp
int3
ds
adc
sar
adc
out
imul
mov
xor
lods
push
pusha
rcrb
dec
push
add
lea
push
fmul
movl
sub
ds
aas
dec
leave
jecxz
add
aad
decl
jle
test
pop
push
out
mov
cmp
into
sbb
fld
mov
gs
dec
out
aaa
dec
mov
xchg
mov
movsb
push
or
mov
mov
or
dec
xchg
add
xlat
idiv
jmp
push
mov
lea
mov
aaa
push
pop
push
cld
inc
sub
push
outsb
xor
pop
int
lds
dec
bound
sbb
pusha
mov
mov
cmc
lret
sti
iret
mov
js
data16
jmp
push
cmp
icebp
or
dec
lods
pop
mov
das
std
aad
aad
lret
popa
jno
dec
ret
sub
je
mov
inc
js
push
pop
fstl
push
inc
aad
roll
mov
inc
jnp
lock
sub
sub
jnp
cmp
xchg
inc
lock
ret
adc
jno
cmc
add
inc
jae
das
stos
insl
xor
lds
orb
push
ja
push
mov
xor
fisttpll
in
data16
jmp
and
lods
pusha
pop
test
xchg
add
xchg
fsubs
adc
or
mov
iret
cs
add
addr16
in
mov
push
int
jae
sbb
fsts
sarl
das
inc
sahf
push
rcr
xchg
jge
and
xor
arpl
lods
xlat
idivb
adc
test
sarb
sbb
mov
sbbb
push
popf
int
cmpsl
stc
cmpsl
rclb
inc
lret
popf
push
dec
aad
adc
push
jns
adc
ja
lret
out
jl
ja
leave
cmpsl
popf
cwtl
or
popa
xchg
add
popa
xor
jno
mov
stos
cmp
addr16
sbbb
sub
mov
mov
enter
fistps
lret
push
popa
fildll
push
movsl
dec
dec
mov
adc
and
xor
pop
push
lods
jle
or
mov
mov
pop
sbb
rcll
sbb
add
sub
and
mov
xchg
mov
and
int3
push
pusha
std
and
fistps
pop
mov
jecxz
mov
push
jmp
clc
int
in
repz
push
push
cmp
push
sub
mov
in
add
add
cmpl
dec
aaa
mov
xchg
jle
les
or
xor
sub
negb
pushf
sbb
cmpsb
mov
xchg
mov
inc
push
loop
and
push
mov
dec
cmp
mov
icebp
es
add
mov
xchg
ret
in
in
jg
in
xor
jns
mov
inc
fbstp
jb
cmp
push
int
enter
add
roll
dec
fdivl
in
filds
mov
jb
inc
pop
and
inc
mov
je
lock
nop
jne
push
inc
fisttps
fs
and
pop
add
cmpsb
dec
stos
clc
dec
ja
pop
mov
ljmp
rolb
sub
test
and
xor
lret
mov
mov
cmpsb
xor
push
sbb
xchg
pop
mov
add
les
and
mov
fcomps
in
pop
or
push
mov
jl
iret
into
jb
mulb
or
imul
add
jbe
xor
mov
in
leave
cwtl
inc
inc
add
push
or
in
test
and
stc
scas
pop
cmp
add
mov
cltd
mov
test
insl
loop
popf
test
shrb
xchg
cmpsl
dec
pop
push
add
mov
ds
jbe
into
ret
les
mov
dec
and
fwait
je
jns
cmp
cmp
ret
shrb
lret
mov
push
xor
mov
imul
sub
fisttpl
cltd
popf
sbb
cli
popa
mov
add
clc
imul
mov
lods
insb
mov
xlat
dec
add
and
rcrb
aas
cmp
lahf
mov
or
and
into
mov
je
push
loopne
cmp
inc
mov
adc
inc
push
add
inc
add
addb
inc
xchg
ljmp
or
movsl
xor
imul
cmp
push
jp
std
and
add
xchg
bound
xor
mov
repnz
dec
leave
mov
pop
push
inc
pop
ss
mov
mov
xor
out
sbb
orb
es
out
std
pop
flds
pop
out
mov
jg
in
mov
jne
push
dec
mov
les
cli
pop
push
aaa
mov
pop
filds
xchg
mov
ret
xchg
lret
test
dec
push
cmp
jle
and
jae
xchg
lds
stos
jp
gs
aas
and
imull
pop
mov
in
mov
in
pop
ret
aad
push
loop
xchg
nop
addr16
xor
dec
inc
add
push
icebp
out
ljmp
cmp
cmp
jge
push
repnz
nop
cmpsl
jl
push
xor
movl
jnp
scas
mov
fildl
pop
outsl
sub
inc
pop
jno
pushf
xchg
in
out
jge
mov
push
mov
jo
xor
shl
mov
bound
jle
push
jge
xchg
scas
test
sub
xorb
and
cmpsl
flds
out
je
add
arpl
mov
sub
jle
cmpb
imulb
es
mov
push
lock
jnp
jo,pn
xchg
leave
cld
inc
pop
gs
lods
scas
out
daa
inc
lahf
out
or
jl
mov
xchg
rorb
inc
iret
addb
jne
insl
jl
test
aaa
sbb
mov
fldl2e
and
pop
and
shrl
mov
cmc
fucomi
bound
fbstp
adc
mov
jge
inc
inc
add
mov
and
add
mov
fimull
arpl
imul
rorl
sbb
or
imul
inc
arpl
push
das
xor
stos
cmp
pushf
and
mov
mov
cmp
ds
imul
xchg
cmpb
or
rcr
loopne
mull
adc
mov
in
add
in
mov
lods
lds
push
movsb
xlat
push
out
mov
shl
add
ss
mov
lahf
pop
cmp
and
sub
jg
jmp
nop
mov
xchg
arpl
xlat
push
and
jle
scas
scas
in
mov
dec
jp
cwtl
pop
xor
sbb
mov
outsb
or
mov
jmp
pop
rcr
cs
xchg
ja
adc
fisttpl
xor
adc
stos
pop
lret
dec
add
xor
test
mov
jge
into
popf
ja
push
or
ficompl
movsb
dec
fwait
or
pop
gs
and
lahf
popa
fnstcw
or
js
jnp
mov
and
push
push
fwait
mov
push
pop
fisubl
out
lcall
sbb
mov
cmp
mov
sub
subb
popa
push
sarb
push
dec
jmp
jno
push
mov
icebp
and
dec
sub
mov
clc
imul
inc
inc
jae
aas
pcmpgtw
repz
xor
add
or
push
daa
cmp
dec
xchg
dec
inc
mov
lret
xchg
pop
nop
or
pop
mov
cmpsb
ret
ljmp
mov
mov
imul
stos
xchg
into
push
xchg
push
pop
add
fdivr
xchg
mov
add
je
roll
stos
jae
xchg
fs
sub
insb
or
fimull
pushf
pop
and
push
sbb
pop
ret
lea
int
out
cmp
sub
stc
out
scas
gs
lds
mov
daa
push
jne
add
sbb
pop
cmp
and
inc
dec
arpl
jp
mov
sub
jae
mov
cmpsb
xchg
popf
mov
pop
add
fstl
push
repnz
leave
push
in
push
jg
sbb
stos
sub
iret
pop
sub
stos
jle
rorb
mov
jb
aad
sbb
call
cmp
pop
imul
insl
cmpsb
jbe
loope
mov
sub
sub
pop
mov
jns
mov
jge
out
es
or
or
cmpl
push
mul
cli
jnp
leave
fdivs
cmovnp
dec
push
aaa
shlb
and
push
sub
push
adc
repnz
xchg
leave
jmp
mull
jp
sbb
push
sub
cwtl
jl
sub
inc
sbb
push
or
jg
repz
ljmp
pop
jle
sub
sub
dec
lret
pop
fistpl
pop
clc
and
in
std
cmp
xchg
mov
mov
sti
jecxz
and
push
mov
mov
push
jp
or
and
push
pushf
movsb
pop
imul
jbe
pop
shlb
test
cltd
and
jb
mov
fdivrl
jne
out
lods
mov
sub
hlt
push
dec
jecxz
insl
inc
inc
mov
dec
mov
cmp
pop
cmpb
popa
dec
and
in
push
sahf
push
iret
mov
test
fidivl
or
int3
jle
adc
cmp
test
fwait
inc
jmp
lcall
inc
jb
cld
mov
adc
jp
movsl
cmc
pop
mov
mov
inc
inc
fs
jae
add
mov
jo
orl
ja
adc
and
int
pop
jl
push
mov
adc
sub
cmp
int3
adc
addr16
cmpb
pusha
and
push
cs
ds
sbbl
loope
leave
sub
movsb
lret
cmp
pop
ficoms
jmp
in
mov
pop
jne,pt
and
sbb
adc
mov
lahf
jge
aas
fstl
xlat
scas
pop
inc
mov
dec
scas
lret
sub
inc
xchg
outsl
xor
adc
shrl
cmpsl
aad
imul
fxch
mov
outsl
mov
add
add
roll
inc
mov
adc
adc
mov
and
sti
outsw
jle
daa
dec
or
xlat
and
adc
cmp
push
fdiv
mov
fbstp
addr16
inc
sbb
int3
dec
xor
jmp
xchg
dec
es
nop
clc
ficomps
add
sbbb
push
cmp
je
dec
xchg
jl
mull
adc
inc
dec
lcall
pandn
push
test
and
mov
cmpl
mov
jmp
or
mov
roll
xchg
lea
js
add
rcrl
push
fcompl
imul
adc
and
int3
mov
mov
clc
stc
loop
pop
sub
loop
ss
call
int
lahf
dec
lds
xchg
xchg
insl
int
mov
dec
jo
mov
inc
cmovl
push
add
xor
inc
aad
mov
js
sbbb
push
clc
mov
mov
fs
adc
aam
in
cmc
cmc
test
xor
mov
push
mov
push
xlat
jnp
psubd
cltd
xor
daa
mov
fadds
outsb
sub
fdivl
xchg
xchg
std
adc
cmp
fildl
test
fisttps
call
push
inc
xchg
adc
enter
inc
mov
incb
ja
andb
sarb
mov
or
les
xchg
jns
jp
pop
or
mov
pop
lret
sub
leave
or
daa
push
nop
lcall
sub
push
daa
add
out
in
movsl
cmp
cld
out
test
push
push
shr
outsb
cli
adc
ss
and
mov
sti
pushf
lods
rcrb
sbb
xchg
mov
imul
cwtl
fmulp
xchg
lods
xchg
mov
popa
rclb
int
rorl
pop
stos
sbb
shll
adc
loope
divb
cmc
mov
icebp
cli
sub
lock
call
out
sbb
mov
xchg
sbb
pop
imul
xchg
imul
jbe
out
jp
aam
fwait
pusha
xchg
repz
xor
aad
jne
jnp
jge
sahf
and
xchg
xor
lea
test
sbb
sub
cltd
xlat
add
jg
arpl
test
cmp
mov
jl
movsb
xchg
loope
and
ljmp
out
mov
xchg
lea
xor
cmc
jb
xchg
xchg
dec
lds
test
xlat
pop
xchg
xchg
sbb
stos
std
pop
inc
dec
adc
pop
xchg
lods
sub
push
sti
push
dec
jnp
xor
xchg
test
movsl
outsb
mov
subl
je
push
lea
scas
xchg
fstps
clc
and
jmp
imul
xor
adc
lret
jo
mov
repnz
fisubrl
scas
outsl
loopne
pop
inc
or
inc
or
std
test
dec
sub
rol
dec
xchg
inc
lret
fstl
test
rcrb
test
dec
in
sbb
fiadds
cmpsl
mov
push
and
adc
dec
pop
sbb
jne
outsl
adc
bsf
fistpl
iret
clc
imul
xchg
and
insb
aaa
mov
cltd
mov
andb
les
sbb
adc
sar
sub
scas
lcall
mul
or
insb
jmp
push
push
arpl
ja
or
xchg
out
movsl
fimull
fistps
mov
add
cmp
je
jae
and
das
and
popf
sarb
xor
mov
mov
ret
imul
xchg
dec
arpl
mov
jg
cmpl
insl
int
scas
mov
cld
cmp
cmc
lcall
popf
cmc
gs
pop
cld
nop
mov
and
dec
jmp
jp
pushf
push
mov
out
xchg
incb
outsl
ret
ror
sbb
gs
into
pop
jno
mov
mov
shlb
jg
lcall
pop
mov
cmp
mov
jnp
xchg
mov
cmpl
mov
test
clc
mov
out
pop
mov
lret
imul
inc
or
inc
xlat
pop
rcrl
adc
and
popf
mov
ret
scas
sbb
mov
orb
scas
xor
pop
mov
sbb
xchg
int
add
xchg
xchg
test
pop
repz
push
pop
sub
mov
stos
xor
gs
arpl
insl
and
lret
into
dec
inc
nop
xor
rclb
bound
cmp
movhps
dec
fwait
pop
or
cmc
hlt
push
popa
movsb
cmp
pop
fs
inc
add
loop
push
jns
inc
lds
and
setae
cld
mov
scas
jo
sbb
xchg
cmp
mov
popa
std
sahf
mov
add
mov
loop
bound
in
imul
dec
jb
or
xchg
rcr
mov
add
cli
mov
divl
insb
pop
jae
mov
mov
mulb
pop
orl
push
les
inc
je
imul
push
aam
adc
sbb
sbb
xchg
push
cld
addr16
loopne
std
dec
rol
dec
mov
jns
int
lret
dec
dec
fwait
lahf
fmulp
cmp
push
movsb
pushl
cmc
clc
js
repz
jb
inc
in
lret
hlt
mov
test
inc
dec
pop
xchg
sahf
xchg
incl
es
cmp
mov
inc
mov
in
in
fimull
or
es
mull
cltd
les
adc
xor
and
sub
cmp
addr16
dec
out
jne
push
test
push
pop
mov
test
pop
in
dec
push
into
xor
add
out
in
mov
mov
add
mov
inc
aam
or
ficoms
xchg
push
pop
shrb
movsb
jb
insl
sahf
jle
out
push
mov
dec
scas
cmpsb
cli
xlat
xor
mov
adc
out
fldt
insl
std
xchg
shlb
push
dec
pop
leave
inc
and
fsts
decl
xor
lods
adc
fidivrs
andb
jns
aas
arpl
arpl
jp
test
in
inc
xchg
outsb
cmp
loope
lret
aas
out
jns
or
iret
add
fs
jmp
add
mov
push
divl
rclb
cmp
ficoml
es
ds
adc
lret
dec
mov
lret
in
sbb
jnp
and
popf
ret
cmp
adc
fildll
xor
mov
popa
call
lcall
in
push
fldenv
test
inc
dec
testl
xchg
jl
jbe
dec
push
push
sti
into
pushf
dec
into
scas
test
or
popa
notl
fmuls
sti
cmp
in
jp
shlb
xchg
aam
fbld
cmp
jno
lahf
dec
ljmp
pop
adc
sub
fmull
sbb
loopne
or
pop
add
into
add
lods
lods
insl
lds
xchg
mul
out
jnp
push
data16
and
popf
cmp
push
nopl
mov
enter
mov
popa
xchg
jb
mov
xchg
xor
jmp
dec
mov
lcall
cltd
dec
arpl
mov
cmpsb
fisubl
test
pop
loopne
and
lds
cmpsb
gs
push
pop
jno
lods
add
int3
mov
outsb
pop
inc
cmp
pushf
lret
jo
inc
je
adc
lcall
sbb
jge
lahf
lahf
enter
and
js
in
ret
shlb
inc
mov
nop
movsl
out
mov
sbb
jg
dec
push
add
lods
jne
rcl
xor
fnstcw
popa
call
scas
stos
or
mov
dec
push
gs
mov
mov
push
insb
lahf
push
jns
pop
scas
and
xchg
test
cld
jns
jne
je
sbb
pop
jns
call
adc
xchg
stos
adc
inc
sub
mov
std
cmp
movl
xchg
dec
test
mov
rorb
sbb
jmp
nop
push
pop
int
mov
lds
sbb
insb
in
mov
andl
jae
arpl
sbb
dec
push
xchg
pop
test
lret
shlb
imul
add
jns
iret
mov
sub
out
cmp
imul
orl
add
mov
shrl
xor
out
push
pop
and
and
add
mov
test
push
mov
sarl
stc
in
pop
negb
push
mov
test
rcrb
or
sub
outsb
adc
jnp
jg
inc
mov
test
mov
mov
shll
fimuls
test
pusha
ss
add
outsl
sbb
pop
push
movb
adc
pusha
insb
mov
xlat
lcall
and
ljmp
push
das
jae
lds
mov
sbb
pmulhuw
adc
loope
loope
ss
adc
aad
into
addr16
jl
mov
or
daa
shl
adc
cs
stos
mov
sbb
jo
mov
jo
jno
hlt
ror
pop
sub
ja
out
add
les
outsb
movsl
fcompl
fwait
sbb
ret
cmp
xchg
fsubrs
mov
jb
roll
test
inc
stos
sub
das
add
cmpsb
mov
cmp
inc
notl
addl
test
sub
cmc
outsl
dec
test
fs
js
sub
idivb
sbb
or
aam
or
mov
mov
lret
sbbl
test
jmp
push
add
movsl
dec
fs
inc
xchg
add
mov
arpl
ret
and
push
pushf
mov
adc
mov
lahf
pop
and
ss
in
cwtl
adc
test
insb
movsb
sub
mov
shufps
fisttps
nop
es
cmpsl
imul
std
leave
or
cwtl
and
imul
insb
pop
xchg
xchg
ljmp
push
aad
xlat
hlt
mov
add
pop
popf
inc
cmovge
and
leave
fisubl
cmpsb
add
pop
mov
mov
outsl
pshufw
jg
xchg
xlat
das
shlb
stos
jno
jmp
dec
jo
in
arpl
fdivrs
loop
mov
idivb
cli
jae
push
add
or
and
jno
lret
fiaddl
push
and
cmp
cmpsb
mulb
sbb
xlat
cwtl
inc
mov
cmpsb
mov
inc
daa
and
dec
inc
pop
xor
inc
jnp
mov
jg
mov
iret
jnp
mov
xchg
or
ljmp
jge
jl
and
lret
xchg
jmp
out
adc
loop
sub
aas
cmp
shl
jnp
push
mov
sbb
call
and
and
test
or
loop
xor
cmc
mov
stos
insl
pop
aas
out
jg
fdivr
and
adc
outsl
mov
add
jge
addr16
pop
icebp
jne
icebp
mulb
sbb
aas
in
movsl
cmp
cmp
jo
xchg
xor
frstor
int
in
insb
stos
mov
shld
jg
clc
mov
push
cltd
das
inc
leave
shlb
and
pop
cmp
hlt
jbe
add
push
xchg
mov
sub
jl
cwtl
or
arpl
and
pop
sub
fdiv
lds
ss
adc
sub
push
cmp
xor
stc
and
pop
cld
movsb
jnp
imul
lods
pop
adcl
mulb
xor
shlb
iret
scas
int3
pushf
push
mov
push
jge
gs
in
adc
xlat
cltd
rcrb
and
jmp
sahf
xorl
lods
imul
inc
lods
addr16
xor
sarb
pop
cmp
pop
idivl
pushf
mov
mov
sbb
imul
test
adc
movsb
enter
in
xchg
scas
push
jno
pushf
and
pop
pop
push
ljmp
fsts
int3
test
mov
inc
adc
cmp
mov
popa
inc
cmp
xchg
scas
jnp
and
setp
sbbl
adc
ja
imull
dec
bound
sar
xchg
inc
jae
or
lods
rcr
pop
fnstcw
or
subl
lock
cltd
pop
mov
insl
mov
inc
outsb
into
movsl
xchg
ds
xchg
aas
cwtl
mov
dec
sahf
dec
mov
inc
fistpll
fisttpl
push
aad
sbb
testl
pop
nop
lock
or
stos
ret
lcall
adc
pop
test
cwtl
into
orl
cli
popl
sarb
jmp
sub
adc
push
scas
iret
add
xchg
mov
pop
push
iret
push
xor
adc
sbb
cwtl
xchg
inc
jno
adc
adc
pop
cmp
lahf
mov
call
clc
ret
mov
sti
or
clc
jno
pusha
repz
cmc
nop
add
inc
in
mov
jle
fwait
cmpsw
xchg
dec
data16
push
rcll
mov
insl
mov
fucomip
fsubr
xchg
dec
mov
or
or
mov
fsubrs
stos
jecxz
aaa
sub
jle
mov
inc
adc
push
data16
lret
rorb
daa
mov
popf
xchg
imul
dec
push
in
push
sub
push
push
mov
adc
and
aas
lahf
cmp
lock
xor
push
pop
jmp
das
stc
cli
fists
cmp
mov
sbb
and
into
insb
out
scas
mov
sbb
xlat
lods
sbb
mov
jb
in
ss
loopne
pop
in
add
inc
cld
call
and
cwtl
adc
gs
fistpl
push
dec
jg
movq
xor
xor
jae
sarl
test
mov
ljmp
mov
decb
lea
testb
repnz
lods
inc
idivl
jl
rcrb
push
push
rcll
movsb
je
dec
mov
jb
inc
hlt
mov
shlb
add
dec
xchg
push
dec
or
jmp
negb
out
lea
and
mov
call
fdivrs
addr16
mov
cmpsl
jae
ja
clc
fwait
pop
dec
mov
ds
les
in
sbb
out
test
out
test
mov
pushf
pusha
inc
and
movsb
ja
out
dec
insl
les
test
fadds
out
sub
jb
ret
int
xchg
mov
pop
add
inc
mov
pop
stos
mov
imul
call
jno
das
sbbb
and
jns
xor
xor
ret
scas
mov
dec
lock
ljmp
imul
aad
lcall
negl
xor
decl
loope
pop
mov
sbb
push
adc
adc
int3
ret
negb
mov
xchg
int3
fwait
jecxz
imul
fisubl
out
mov
xor
push
pop
popa
scas
inc
bound
lret
sbb
popa
xor
loop
aaa
dec
hlt
test
fwait
or
dec
mov
adc
jb
xchg
mov
ficompl
fisubl
jbe
jbe
dec
movsb
neg
mov
outsl
aaa
gs
push
je
and
add
out
xor
add
add
and
jp
mov
xor
dec
pop
mov
pusha
jb
mov
outsl
or
sbb
popf
notl
sahf
fisubs
sub
pop
push
pop
adcb
arpl
icebp
add
arpl
mov
int
push
or
add
fwait
clc
aam
sub
jmp
inc
loop
mull
jne
push
or
addr16
inc
jecxz
cmp
xchg
add
dec
imul
pop
loopne
sub
enter
or
pop
xor
ljmp
xlat
xchg
jae
mov
sub
pop
pop
xchg
repz
mov
or
pop
insl
adc
out
add
push
lret
lds
inc
ret
es
pop
jecxz
mov
ret
jbe
adc
jb
sbb
or
out
sbb
inc
cld
stc
jb
sub
or
mov
movsb
or
loop
pusha
sbb
aam
sub
sub
repnz
mov
xchg
stos
push
rcl
cmp
jae
jge
lods
nop
mov
mulb
jp
call
insb
jne
mov
je
into
outsl
mov
aas
xor
lods
dec
ret
mov
mov
cltd
in
xor
pop
push
ja
cmpsl
aaa
pop
mov
mov
push
adc
mov
filds
jbe
lock
in
mov
lods
insl
inc
or
add
and
imul
adc
rcrl
sub
sub
mov
out
cltd
push
add
mov
sbb
hlt
gs
lods
jecxz
imul
insl
cmp
jns
cmpsb
cmc
push
jmp
and
loop
jl
in
loopne
into
or
push
scas
cmp
ds
dec
push
xchg
stos
sub
pop
insl
ret
xchg
sub
mov
lods
lcall
xor
std
cltd
out
das
lods
push
stos
push
adc
sar
cmc
xor
bound
mov
clc
je
jns
out
out
popf
push
mov
shll
rorb
inc
rclb
in
sbb
pop
decb
mov
repz
mov
and
sub
push
jge,pn
cmp
int3
jo
or
xor
ja
push
and
and
xlat
rorb
jg
pop
ja
lods
lret
in
lcall
bound
sbbl
xchg
sub
cli
imul
mov
push
loopne
dec
adc
mov
fmulp
push
inc
out
inc
inc
stc
adc
adc
das
push
mov
fsubrp
imul
or
sahf
ret
add
daa
push
fcmove
scas
and
cmp
pop
xchg
fisttpll
imul
into
popa
pushf
mov
lret
add
popf
push
in
mov
cli
jno
and
xchg
cmp
cli
jmp
cltd
mov
jp
cmp
mov
sbbb
mov
je
mov
inc
pushf
push
sub
jnp
into
negb
xchg
aaa
dec
mov
push
xor
pusha
inc
call
xor
and
mov
inc
push
jns
or
lret
dec
xchg
push
inc
adc
repnz
push
enter
sbb
pop
ss
push
in
sarb
insl
jmp
sbb
mov
xchg
cmp
rorl
ljmp
shll
ja
test
idivb
lods
mov
sbb
adc
jl
push
inc
fcmovb
je
or
bound
mov
sub
sub
sarb
inc
mov
repnz
xchg
inc
inc
sub
int3
repnz
dec
cmpsb
call
fisttpll
cmp
push
adc
out
inc
es
xor
sub
shlb
fdiv
insb
sub
push
std
xchg
movzwl
sahf
push
sub
bound
hlt
fsubl
or
out
xor
aaa
jl
lea
out
testb
and
das
xchg
pop
and
mov
imul
clc
cmc
mov
adc
add
mov
cs
sarb
in
shll
inc
cltd
push
and
adc
pushf
push
and
push
lods
ds
stos
adc
inc
test
rcl
cmp
pop
cmc
adc
mov
test
dec
push
pop
pop
xchg
lret
scas
pop
imul
je
and
push
xchg
add
dec
xchg
jmp
sub
lods
cmp
cwtl
or
mov
fwait
sar
jno
call
je
sub
cmp
push
pop
xchg
nop
inc
add
mov
xor
ret
xchg
jne
int
cmp
or
out
mov
les
rdmsr
or
add
repnz
nop
test
xchg
jbe
outsb
test
sarl
pop
cmp
pop
pop
inc
mov
in
aam
out
mov
es
pop
pop
ljmp
or
cmp
pop
mov
sbb
orl
push
ds
in
emms
das
sbb
mov
pop
arpl
add
dec
int
negl
push
fwait
mov
xchg
in
or
xor
jbe
mov
in
cmp
pop
insb
rcrb
dec
rclb
jnp
inc
add
cmp
xor
fcoms
inc
int
fucomi
loope
or
stos
cli
jno
xchg
fildll
cmp
sbb
mov
jge
jle
mov
xlat
cwtl
imul
bound
mov
mov
in
fsubrl
xchg
loop
mulb
andl
cmp
lret
push
lods
out
cwtl
mov
mul
fs
scas
jns
pop
dec
push
test
rcrb
xchg
int3
hlt
sbb
dec
push
aam
out
jecxz
lret
sbb
cmpb
jbe
add
lods
lcall
clc
fwait
mov
cli
sbb
add
jl
or
mov
in
ret
jbe
test
data16
and
fs
push
test
add
outsb
pop
sar
sbb
xchg
push
cmp
mov
inc
dec
adc
pop
or
scas
out
mov
cmpsb
bnd
shrb
ret
xchg
add
sub
cmp
add
int3
rorb
mov
aas
repnz
sub
es
cmp
shrl
sti
sbb
call
out
sub
mov
xchg
iret
je
add
xchg
call
dec
adcb
repnz
mov
inc
jg
outsl
sbb
or
mov
cld
repz
scas
clc
dec
daa
mov
mov
push
cmp
std
or
test
xor
mov
fildll
cmp
out
je
subl
mov
cmp
xchg
pop
add
adc
in
hlt
fisttpl
add
or
adc
xor
in
mov
clc
jg
test
andb
fdivrs
jle
or
push
lret
and
sub
movsl
cli
or
inc
in
pop
xchg
mov
xchg
add
call
icebp
pusha
xor
and
jns
jbe
inc
add
pop
cmp
or
mov
aas
jne
aam
out
addr16
outsb
pop
mov
lea
test
pop
jo
scas
test
rcrl
push
dec
or
dec
mov
call
js,pt
jb
les
dec
push
sbb
jno
decb
cmp
test
pop
mov
das
cmp
and
or
lock
jno
int
sarb
cmp
arpl
int
mov
jb
sbb
jmp
jp
xlat
push
add
pop
out
fcmovbe
xchg
push
sbb
je
dec
mov
xor
adc
push
stos
dec
enter
mov
negb
sarl
adc
jns
and
bound
rclb
adc
pop
ds
pushf
nop
cmp
xchg
imul
jne
fidivl
push
mov
add
ljmp
dec
aaa
movb
pop
out
es
cmpsl
jmp
inc
sub
jmp
idivb
lret
jmp
lock
inc
scas
xor
int
pusha
leave
test
stos
fiaddl
ljmp
test
jge
mov
lea
mov
push
orl
cmp
sti
pop
xor
mov
fistpll
nop
test
data16
xlat
and
ljmp
sbb
cwtl
and
fcmovnu
mov
push
in
push
popa
cmpsb
mov
outsb
es
xor
cmc
sub
sahf
out
sti
mov
mov
jbe
popf
ja
fidivl
mov
fmuls
xchg
xchg
jne
nop
aad
aad
sub
mov
push
mov
mov
and
daa
iret
pop
xchg
lods
pop
jecxz
out
shlb
add
xchg
iret
dec
movsl
sub
lea
xchg
repnz
xchg
pop
xlat
inc
les
mov
pushfw
or
jae
jg
lds
je
mov
jno
jbe
fsts
mov
lock
nop
cmp
dec
xor
mov
out
decl
hlt
in
arpl
incb
mov
popf
add
gs
ja
sbb
insb
aad
pop
cmpsb
xchg
inc
mov
pop
inc
shl
add
mov
xorb
mov
jbe
mov
in
or
sub
cmc
add
mov
aad
sbb
cs
push
lock
mov
push
cli
movsl
jl
push
adc
jns
inc
and
jg
adc
adc
mov
pop
fucomi
lock
adc
sbb
inc
and
pop
mov
cmp
in
insl
or
and
cmp
xor
jg
inc
add
icebp
into
out
adc
mov
or
nop
inc
call
mov
or
mov
scas
stc
add
push
adc
inc
repz
and
pop
add
lret
in
notb
jo
xlat
xchg
push
repz
jo
xor
mov
pushf
push
mov
cmp
lcall
push
adc
das
loope
xlat
sahf
int3
push
or
clc
adc
mov
sub
jb
sahf
pop
test
add
inc
out
pop
test
jle
bound
inc
cli
sub
pop
sbb
in
ja
mov
add
jle
xchg
or
sarl
dec
xchg
pop
insb
int
sbb
shl
cmpb
mov
push
lcall
and
jb
mov
sbb
lret
addl
dec
and
mov
xchg
cmp
cmp
out
stos
scas
sbb
in
in
movsb
inc
xlat
xchg
sbb
xchg
jno
imul
sub
std
xchg
icebp
lcall
pushf
out
movsb
in
addr16
inc
mov
cs
aas
dec
push
cmp
push
xor
movsb
mov
inc
int3
adc
adc
insl
adc
adc
jecxz
mov
inc
push
xchg
xorl
nop
mov
push
imul
loope
jne
sti
adc
cmpsl
dec
sahf
jp
inc
lods
int
sbb
push
aad
aad
sbb
adc
xchg
xorb
hlt
das
lret
jg
nop
inc
lods
dec
dec
lock
int3
adc
lcall
rorb
mov
scas
mov
jnp
mov
ss
and
dec
rol
inc
sub
adc
inc
jecxz
xchg
ja
iret
jb
bound
icebp
cmp
rcl
dec
cltd
adc
adc
lock
imul
rorl
mov
decb
daa
out
mov
sbb
popa
cmpsl
lods
or
lods
jg
xchg
insl
clc
and
mov
jb
repz
mov
int3
jle
xchg
jl
inc
and
mov
pop
push
std
adc
push
add
fnstsw
roll
xchg
sbb
in
arpl
xor
les
xchg
mov
pop
test
out
adc
jne
dec
sub
or
lds
sbb
imull
and
xor
or
lods
test
adc
clc
clc
and
mov
and
sbb
and
lahf
xchg
xor
jp
sarb
mull
repnz
xchg
outsb
add
pop
mov
mov
rorb
fildl
ljmp
and
cmp
xchg
test
jne
jg
cmp
repnz
mov
movsb
adc
mov
inc
fsubp
cmp
mov
lods
ds
pop
outsb
xchg
ja
idivl
dec
xlat
ror
out
cs
loopne
ficompl
dec
imul
xchg
pop
les
jl
push
out
pop
lret
pop
cmpsb
sbb
dec
mov
push
jne
push
test
imul
mov
mov
inc
aas
cmpsb
lods
stos
push
test
jp
add
js
cmp
jp
and
or
test
or
mov
data16
insl
mov
bound
jae
fisttps
pop
aad
sbb
sbb
std
jg
push
stc
mov
mov
pop
stos
adc
pop
mov
dec
flds
call
cmp
jnp
mov
mov
dec
iret
lcall
stos
mov
test
xchg
mov
fildll
das
ret
push
push
xchg
dec
and
push
loopne
jne
out
divb
lds
add
loopne
inc
or
mov
int3
adc
dec
push
cmp
mov
xchg
scas
mov
ficoml
and
add
cmp
gs
les
mov
aas
jnp
imul
cmp
xor
std
fisubs
sbb
add
les
jmp
shll
rcr
nop
or
mov
mov
mov
popa
sbb
xchg
fsts
das
dec
jg
in
mov
xchg
shll
add
fldt
fwait
jae
in
je
aad
adc
shlb
popl
mov
sub
lds
mov
jp
adc
xor
cmp
cs
or
inc
cmc
mov
mov
jnp
cmpsb
aas
or
pop
imul
adc
and
mov
call
decb
or
xlat
in
movsl
inc
jle
pop
push
xchg
int
aad
lcall
mov
movsl
leave
mov
test
xor
jecxz
or
sbb
insb
je
jecxz
sub
bound
push
sub
mov
das
mov
out
add
xor
mov
imul
jae
adc
enter
cli
fs
xor
jg
stc
test
mov
ja
sbb
jns
fs
pop
pop
int
mov
fisttpll
inc
dec
push
lret
mov
mov
outsb
scas
stos
lahf
lods
inc
std
rorl
stos
clc
sub
out
xor
test
ret
pop
pop
movsl
aad
packssdw
add
dec
lds
mov
mov
push
adc
hlt
jle
pop
pusha
dec
push
xchg
adc
orb
fnstsw
add
mov
rcrb
aad
mov
mov
test
pop
inc
mov
xor
lret
and
test
jp
test
mov
xor
ja
clc
stc
rcrl
mov
mov
and
imul
ss
jg
mov
js
js
mov
filds
movsb
xchg
sbb
arpl
or
jo
and
xchg
popf
fs
jns
dec
fwait
sahf
cmp
xor
xchg
ret
mov
push
jp
and
push
pop
int3
jmp
fcomp
and
and
and
xchg
ret
addl
jno
call
sub
inc
xlat
retw
fs
jp
outsl
inc
xchg
hlt
adc
xchg
sub
xchg
pop
adc
sub
lods
outsl
fwait
or
aad
popf
inc
sbb
hlt
fisubl
insl
stos
cmp
xchg
xor
jmp
sbb
pop
add
outsl
add
sahf
pop
or
xor
pusha
inc
out
and
sbb
inc
cmova
ljmp
mov
mov
add
sahf
lock
sub
roll
stos
mov
scas
xor
cld
or
sbb
out
jecxz
sub
dec
fisubrl
fwait
or
iret
hlt
aaa
scas
add
in
inc
ret
mov
fldl
mov
loope
sub
shrl
pop
push
repnz
mov
push
mov
pop
pop
or
adc
jl
enter
cmpsl
cmp
dec
inc
sub
mov
cmp
or
icebp
mov
xor
addr16
rorb
loop
xor
popa
adc
adcb
cmp
or
std
jp
mov
push
pop
leave
jb
test
das
cmp
adc
mov
jecxz
push
roll
test
dec
jae
scas
loopne
enter
lock
jns
pop
lea
inc
xchg
jbe
aad
pop
lcall
xor
or
out
push
and
and
clc
ret
xor
cmpsl
push
jne
adc
adc
enter
or
push
push
push
push
dec
xchg
lret
inc
sub
push
fsubrp
pop
add
test
add
jb
push
ja
inc
sbb
repnz
sub
or
stos
dec
cmpsb
mov
out
push
and
sub
lret
mov
test
xor
leave
notb
mov
xchg
fs
fsubl
mov
jle
mov
dec
insl
lods
call
popf
xchg
push
mov
repnz
mov
ja
test
in
inc
cli
leave
mov
xorb
xlat
sub
mov
repz
cmpsl
addr16
adc
movsl
sbb
outsl
mov
lods
mov
push
sbb
mov
mov
jno
test
or
stos
les
ss
aam
push
xlat
sar
add
push
jnp
push
mov
or
mov
fwait
neg
push
mov
sbb
inc
popa
lahf
sub
data16
es
jl
cmp
cmp
leave
ret
or
jmp
cmpsl
add
test
mov
push
mov
sarl
cmpsl
add
movsl
dec
loopne
push
cmpsl
out
dec
jecxz
xor
sbb
jmp
sub
sbb
sar
int3
pop
push
pop
das
cmp
lock
pushf
popf
fildl
xchg
cmp
fwait
addb
ret
sub
xchg
imul
jae
mov
pop
ja
or
push
gs
sub
jo
int
icebp
adc
push
jl
filds
loopne
popa
or
jno
ja
cmp
pushf
mov
sbb
lahf
in
adc
mov
addr16
mov
pop
sub
mov
xchg
or
leave
cmp
mov
or
cmp
ljmp
sbb
sbb
xchg
or
into
inc
add
or
push
xor
and
stc
xor
clc
push
jp
inc
hlt
hlt
das
mov
mov
popf
jae
mov
daa
or
mov
dec
sbb
leavew
fldcw
adc
sarl
mov
xor
dec
in
mov
cld
cmp
ret
dec
sbb
and
loope
cmpsb
xchg
xchg
lds
or
mov
xchg
push
sbb
jno
mov
jge
and
mov
popa
aad
out
adc
mov
mov
and
fstp
jb
bound
mov
pop
leave
repz
sbb
ljmp
and
xor
movsb
jge
dec
lds
cmp
jae
je
pop
inc
hlt
jbe
ror
dec
je
in
lods
movsl
mov
lock
xchg
cmp
sahf
int
repnz
inc
fs
xchg
icebp
nop
mov
subb
xchg
psadbw
dec
mov
fisubs
data16
loop
xchg
sub
pop
jle
pop
xchg
orb
jecxz
sub
or
push
arpl
test
dec
inc
cmc
jp
outsl
fistpl
call
or
pop
add
testb
adc
adc
arpl
test
in
lods
cli
jno
fsubrs
push
scas
sbbl
fwait
aad
aad
mov
mov
in
popl
mov
addr16
or
sbb
and
pop
add
cmp
jl
test
mov
test
xlat
mov
adc
testb
push
adc
test
nop
jmp
push
cmp
pop
scas
push
jecxz
add
mov
fisttpl
add
filds
cmc
inc
out
mov
movsl
inc
aad
or
pop
mov
subl
xor
jecxz
loopne
and
mov
test
jmp
sbb
shll
je
cmp
dec
rol
pop
dec
icebp
fdivp
push
inc
movsl
js
push
cmp
and
jle
jbe,pt
dec
mov
loop
sbb
push
push
pushf
cli
xchg
or
lret
out
adc
fcoml
lret
insl
fst
in
test
cmp
sub
lret
test
mov
xchg
scas
fistps
push
fbld
dec
icebp
mov
push
fstl
enter
rcrl
xlat
xor
push
push
mov
mov
pop
xchg
andps
xacquire
out
gs
pop
and
mov
inc
pop
inc
dec
repz
mov
test
data16
push
push
mov
mov
gs
adc
add
lcall
sbb
orb
icebp
sbb
imulb
lds
fwait
xchg
inc
mov
dec
mov
add
or
int
fs
dec
stos
shrl
push
jno
fildll
jae
add
insl
leave
loop
sub
std
jmp
cmp
cltd
xor
out
or
fnsave
popa
mov
adc
das
je
mov
rorl
jb
jmp
mov
jmp
or
push
rcrl
cmp
mov
arpl
sub
mov
daa
fisubrl
ja
ljmp
inc
sub
cmp
or
xlat
ja
jne
scas
fldcw
dec
xor
or
add
icebp
mov
push
or
sbb
mov
outsl
xchg
lcall
cmp
xchg
mov
jns
movl
rol
pop
aas
sub
or
mov
sbb
or
popa
imul
leave
in
sbb
add
push
jnp
sbb
pushf
push
push
scas
andb
fcmovb
fcoml
pop
push
add
std
data16
pop
mov
jb
adc
lods
xor
mov
mov
call
cmpsb
add
adc
mov
pop
xchg
and
cmc
cmp
in
push
inc
dec
add
push
lock
cs
iret
sbb
or
cmpsl
mov
mov
jne
rcll
std
mov
fldenv
cvtpi2ps
shrl
loope
cmpsb
xlat
negb
movsl
cwtl
and
mov
aad
add
cmp
cli
xor
fimuls
nop
test
push
cmpsl
push
inc
push
mov
inc
cs
jo
and
iretw
mov
and
sbb
mov
push
xor
loop
pop
sub
jge
setbe
mov
movd
decb
cmpsl
lret
push
ret
int3
cmpsb
pop
stc
cld
insb
inc
roll
lock
sub
adc
push
scas
scas
stc
pop
sbb
and
ja
outsl
rcrb
xor
add
cmc
lret
or
repnz
sub
xor
sub
jp
add
insb
pcmpeqw
in
pop
in
popf
stc
loope
or
jns
repz
push
insl
imul
and
adc
cmp
test
and
push
test
dec
fs
mov
dec
adc
cmp
or
pusha
or
sti
mov
stos
add
or
sbb
inc
dec
stos
les
daa
rol
adc
mov
mov
test
add
adc
jb
ja
or
out
fmul
inc
dec
lret
out
iret
jecxz
jae
mov
or
daa
and
loopne
inc
inc
in
inc
loopne
lret
ja
inc
enter
xchg
xchg
imul
mov
and
adc
mov
pop
daa
in
out
sahf
aad
pop
push
mov
sti
cld
or
jne
lods
movsb
arpl
sti
pop
mov
or
out
jmp
loope
mov
in
mov
lds
mov
fildll
xor
xchg
add
push
lcall
fisttpl
lcall
push
mov
subb
jbe
add
pushl
in
test
test
pop
pop
xorl
dec
jg
jo
push
push
subb
outsl
ss
sub
push
pop
sbb
mov
ret
pop
inc
and
dec
mov
in
mov
push
dec
jbe
lock
xchg
data16
dec
cmpsb
std
inc
je
rclb
add
sbb
jle
ss
pop
popf
or
stc
xor
in
add
leave
mov
mov
push
les
add
cmp
icebp
xlat
push
ja
lcall
nop
fiaddl
mov
add
pop
int3
cmpsb
cmp
cli
xchg
decl
pop
mov
imull
cmc
cwtl
jp
adc
fsub
cli
call
movsb
jg
int3
xchg
test
sbb
aam
jnp
pop
fldl
roll
sbb
scas
pop
inc
xor
je
mov
push
sti
out
push
fcmovbe
or
inc
test
iret
mov
pop
dec
jge
mov
std
adc
fsubrs
jp
adc
mov
fdivs
movsl
cld
mov
cmp
loop
or
sbb
sahf
mov
mov
pushf
or
fstps
mov
sub
mov
divl
lahf
and
cli
add
mov
push
xchg
fwait
outsb
in
int
fisttpll
js
fstp
xchg
fisubs
sub
nop
ljmp
in
and
daa
or
les
sub
pop
or
cmp
jbe
sub
push
ljmp
aas
sbb
ror
ljmp
pop
lahf
push
push
jb
dec
jnp
into
push
jecxz
pusha
add
sbb
cmp
movsb
mov
loopne
add
cs
sub
ljmp
inc
jle
cld
mov
pop
jle
js
loope
jecxz
mov
call
clc
xchg
dec
loop
cmp
push
insb
fwait
push
lret
cltd
dec
call
or
nop
mov
out
xor
pop
add
sbbl
mov
popa
mov
aad
mov
cmp
xchg
xchg
and
cli
insb
jle
jmp
xchg
stc
add
ja
cmp
test
out
fwait
sbb
xor
rolb
fs
fiaddl
adc
clc
imul
fcompl
out
add
jns
aas
repnz
ror
mov
loope
inc
sbb
dec
addr16
or
or
or
or
xchg
aam
mov
pop
pusha
mov
pop
int
lods
outsb
hlt
mov
push
fsubrp
aam
mov
sub
lock
cld
jecxz
push
pop
xor
sub
pop
cltd
mov
stos
push
aad
lahf
pop
mov
push
sub
aam
movsb
inc
cltd
push
mov
pusha
push
adcb
pop
data16
scas
test
rcrl
mov
xor
out
lret
hlt
and
cltd
mov
push
and
mov
cmc
or
mov
jno
push
in
sbb
mov
fbld
sarb
mov
imul
cltd
or
mov
push
in
jecxz
jns
xor
stc
dec
pop
pop
roll
add
std
adc
out
iret
lock
mov
mov
or
fcmovnb
ljmp
cs
adc
jae
mov
mov
out
jns
rorl
aad
push
jmp
jge
icebp
sbb
or
mov
xchg
in
fstpt
pop
pop
and
fdivrs
mov
push
push
repz
fwait
sbb
mov
or
jmp
dec
bound
sub
sub
jl
dec
gs
cmp
dec
adc
fbld
mov
popa
sub
sub
lea
jno
out
mov
xchg
dec
mov
and
jnp
jmp
cmp
push
ret
ja,pn
orl
cmpsl
sub
xchg
mov
repnz
mov
test
and
dec
inc
or
mov
and
mov
in
int
jmp
add
out
push
push
stos
pop
mov
push
inc
jle
xchg
cltd
sub
cmpsb
add
adc
and
pop
lea
cvtps2pi
test
fcompl
stos
arpl
and
push
dec
dec
pop
lea
xchg
ljmp
adc
imul
push
clc
test
xor
sar
popf
dec
bound
jae
jne
in
xlat
jno
ret
hlt
scas
push
in
ret
adc
jmp
outsl
cli
or
push
push
xor
xlat
cmp
sti
sbb
repz
into
mov
mov
ss
push
std
fs
dec
shl
fidivrs
aas
inc
xchg
mov
movsl
lcall
jne
and
mov
lods
iret
mov
pop
pop
adc
mov
cmpsb
loop
jg
pop
pop
enter
repnz
sub
inc
test
mov
pmuludq
cmpsb
stc
mov
jae
mov
add
ret
push
sbb
mov
or
inc
pop
mov
pop
fcmovb
push
test
jae
sbb
push
jp
roll
mov
out
movsb
jbe
xor
dec
scas
std
jne
sub
and
cli
lcall
icebp
loope
fmull
xchg
in
xchg
push
aas
pusha
sahf
add
jns
push
fwait
mov
fistpll
test
sahf
ror
dec
jecxz
mov
dec
lock
or
rcrl
dec
int
jmp
mov
cmc
mov
aaa
movsb
dec
jmp
arpl
js
xchg
cli
dec
pop
xchg
xchg
inc
cmpsb
inc
gs
add
xor
clc
cmp
sbb
mov
mov
xor
dec
cmp
mov
out
sbb
or
fdivr
mov
push
inc
mov
out
inc
sbb
addl
inc
sbb
loopne
ljmp
out
movsl
roll
jno
mov
sbb
xchg
aas
ja
or
enter
mov
out
dec
jo
fimuls
stos
call
out
pop
inc
in
jge
movsl
fidivl
dec
inc
pop
xchg
repz
pop
addr16
dec
scas
incb
test
sub
dec
inc
fists
lea
mov
sbb
aad
outsb
clc
push
add
sbb
cmp
lods
mov
xchg
add
bound
call
fs
mov
adc
bound
push
adc
shll
cmpsl
fildl
or
sbb
fisttps
push
jo
mov
int
ffreep
cs
pop
and
lsl
bound
ljmp
push
push
inc
stc
dec
dec
cmpsb
mov
cs
or
aas
push
xor
cmp
xor
jae
sub
or
push
and
pop
jecxz
shll
or
call
mov
adc
fildll
je
and
jp
loope
add
or
popf
fwait
push
xor
std
mov
imul
and
lds
fimuls
fisttpll
cmpsl
mov
xor
inc
xor
mov
xchg
jnp
inc
lret
push
outsl
shrl
or
inc
ja
cmpsb
mov
xor
popa
addr16
cli
fwait
fwait
xor
in
pop
addr16
mov
jne
sbb
mov
out
mov
sbb
inc
cmc
jle
adc
add
adc
jno
jne
cmp
ret
jge
cwtl
stc
popa
repnz
mov
stos
sub
repz
fs
sbb
lret
xchg
jle
sub
push
mov
ss
scas
aas
aaa
mov
xlat
pop
xlat
je
add
lret
mov
imul
mov
in
rcll
xchg
enter
nop
xchg
and
sub
out
push
inc
mov
or
push
inc
push
inc
mov
lock
fsubrs
not
adc
jae
push
sbb
shlb
pusha
jb
icebp
filds
push
dec
test
inc
mov
into
dec
dec
xchg
jnp
in
inc
lret
adc
inc
mov
sbb
sub
mov
sbb
stc
mov
lods
pop
loopne
sub
push
outsl
cld
jge
or
stc
fsubp
cmc
nop
repz
push
jne
pop
fs
mov
fcom
shlb
dec
outsl
pop
fcmovne
mov
push
loopne
es
fbstp
add
inc
sbb
sub
mov
pmaxub
test
pop
jmp
dec
fsubp
or
into
fdivrl
je
dec
fdivr
lods
jmp
xchg
cmpsb
pusha
xor
pop
cmp
adc
repnz
ds
xor
movsb
sahf
adc
int3
ret
fwait
pop
add
popf
out
pushf
out
mov
mov
movsb
fidivs
dec
andl
aas
mov
dec
xor
mov
scas
inc
pop
mov
dec
test
ret
pop
jp
imul
fstl
push
pop
or
pop
faddp
dec
fcmovbe
mov
nop
inc
and
sub
or
cmp
insb
dec
push
xchg
sub
in
insb
add
arpl
or
repz
fwait
xor
push
in
push
sti
fnstcw
pushf
sub
cmpb
jmp
shrb
pop
insl
mov
sub
mov
pop
xor
inc
pushf
push
push
addb
sbb
pushf
mov
jp
in
push
fldl
xchg
and
xchg
clc
jg
or
sahf
aas
cmp
enter
bound
inc
cmp
ljmp
add
mov
mov
lea
xchg
test
test
cmc
test
aam
xchg
sar
xchg
daa
mov
bound
les
sub
mov
and
xlat
mov
or
lcall
out
push
mov
sub
inc
pop
test
mov
mov
sub
add
and
outsb
fadds
mov
adc
into
jns
adc
xchg
lds
dec
push
jbe
gs
aad
xor
xor
dec
and
pop
fbld
xlat
mov
inc
add
lret
push
adc
into
scas
aas
pop
xor
push
push
in
jge
and
xlat
addb
sub
sub
insl
or
sbb
sahf
pop
fstpl
add
mov
rclb
inc
bound
sub
aas
and
cmpsl
idiv
mov
popf
enter
cmp
inc
clc
xor
movsb
xchg
mov
push
xchg
inc
xor
mov
fcomip
jne
cmp
ds
in
sti
in
push
inc
outsl
sub
das
lcall
adc
sahf
adc
jg
pop
mov
lret
xor
dec
jg
repz
push
sub
mov
mov
sbb
es
jl
sub
push
leave
fldt
sbb
pop
aaa
xorb
in
pushf
dec
add
cmpb
cld
fldt
mov
imul
push
insl
adc
cmp
scas
sbb
subl
adc
dec
sub
lock
jbe
sub
xor
divl
lret
imul
xchg
sbb
adc
shll
jmp
pop
mov
sub
mov
mov
sti
rol
fmuls
movsl
xchg
sbb
lea
lahf
movsl
sbb
rolb
js
iret
mov
pop
and
jnp
push
jo
fwait
jne
rclb
mov
mov
movsb
je
jp
inc
loop
mov
mov
js
shll
push
mov
sti
ficoms
dec
test
dec
or
jl
addb
and
xchg
jl
xchg
in
push
jns
fdivrs
addr16
xchg
dec
xchg
cmp
pop
add
lret
pushf
xor
cmp
ret
xor
ds
lds
sbb
xchg
lcall
or
sbbl
mov
lcall
mov
pop
push
in
js
dec
sahf
dec
inc
mov
dec
loope
mov
mov
jnp
loopne
out
xor
scas
test
or
loop
repnz
add
sub
jb
test
addr16
mov
push
addr16
rolb
fisttpl
lods
push
addr16
or
pop
push
aas
movsb
lock
mov
in
popf
loopne
jne
jb
push
icebp
push
and
cwtl
js
mov
int
ljmp
pop
xor
fdivl
in
or
sub
call
pop
push
jge
mov
push
or
xchg
or
int
arpl
sub
cmpsb
and
shrb
cltd
dec
std
push
mov
dec
std
andb
or
mov
adc
cmc
ja
and
dec
sarb
xor
divl
xchg
pop
and
int
and
cmp
jae
iret
pop
sbb
mov
rorl
out
insb
lcall
loope
mov
xchg
pusha
scas
sub
flds
in
mov
xlat
call
mov
pop
sbb
lahf
dec
fidivrs
or
and
jecxz
pop
outsl
popa
fwait
mov
dec
mov
int
mov
divb
sbb
jbe
sbb
push
and
xchg
orb
and
mov
lea
shrl
cmp
inc
insl
inc
leave
cmc
pushf
mov
fnsetpm(287
and
pop
or
inc
fistpl
ss
add
adc
adc
call
daa
inc
add
ljmp
xorl
daa
push
out
and
add
pavgw
push
loop
icebp
ret
push
mov
sub
mov
mov
cmp
push
call
fadds
adc
into
les
call
mov
jnp
or
int3
arpl
lods
andb
jge
sti
stc
repz
lcall
dec
fdivrl
das
pushf
imul
mov
xor
mov
repz
fistpl
fadds
dec
jp
pop
mov
xchg
mov
std
fsubl
jo
sti
pop
push
out
psubusb
sub
pop
jge
scas
sbb
loop
xchg
xchg
test
cld
mulb
jne
mov
xorb
or
and
into
insl
mov
sahf
add
add
jp
loop
shll
icebp
adc
jo
pop
jl
test
arpl
add
outsl
sub
in
mov
inc
or
loope
cmp
jge
and
cmc
cmp
frstor
subl
push
ret
in
jmp
mov
test
mov
mov
imul
sbb
add
jmp
or
inc
xchg
add
jecxz
cmp
xor
scas
xchg
stos
sub
es
cld
shll
dec
pop
jnp
rcll
fistps
test
mov
and
dec
int
mov
push
pop
in
add
mov
cmp
andb
dec
mov
ljmp
cmp
testl
mov
unpckhps
xchg
outsb
mov
jle
testl
xchg
cmpsl
sarb
data16
pusha
xchg
je
xchg
mov
lret
stos
sbb
sub
jbe
push
loop
in
push
leave
mov
and
or
mov
test
rol
dec
loop
aad
mov
jmp
js
aas
sub
add
out
mov
add
in
fistps
es
mov
rcl
or
pop
push
adc
pop
daa
aad
mov
neg
push
fnclex
loop
lds
jb
hlt
int3
clc
rol
pop
repnz
in
jbe
repnz
enter
fs
cmp
xor
adc
cmp
jbe
sbb
clc
imul
movsl
jbe
cmp
pop
add
lods
lret
movl
fsubrl
sbb
push
fwait
imul
and
xchg
ret
jbe
mov
xchg
fxch
les
jp
les
xchg
xorb
dec
push
mov
lods
leave
pop
cs
sbb
bnd
inc
cltd
cld
inc
dec
in
cmp
sbb
add
sub
ja
in
outsl
sbb
xchg
fmuls
push
lods
push
mov
add
sbb
leave
loop
addr16
inc
inc
jns
dec
push
loope
mov
cmp
into
aad
ljmp
pop
jb
dec
lods
out
loope
lods
arpl
pop
sahf
stos
out
sub
or
out
stc
in
jbe
push
cmc
lea
rol
mov
jbe
cmp
jle
insl
adc
mov
ficomps
adcl
add
inc
fwait
push
ret
in
or
fs
push
popf
test
mov
jne
sub
and
jns
call
stc
sub
jo
cmc
mov
pop
in
adc
and
mov
mov
jns
imul
lods
jbe
add
sub
mov
xchg
xor
pop
outsb
xchg
add
fsubr
out
push
daa
jecxz
ret
cld
inc
and
sti
add
add
pop
das
push
lods
movsb
pop
ret
jecxz
xor
dec
ja
mov
or
insl
fcoms
mov
add
mov
add
cs
outsl
lahf
ret
insl
aas
inc
lods
dec
sbb
shl
popa
mov
push
cld
sbb
dec
lret
js
hlt
aaa
ja
in
lret
sbb
imul
movl
xor
cld
rcrb
mov
or
push
in
jnp
mov
stos
jbe
insl
aaa
and
mov
jno
pop
adc
mov
mov
in
jg
and
mov
int
fmull
mov
mov
mov
sub
pusha
push
es
sbb
outsb
rclb
adc
popf
dec
add
aam
mov
orl
shrb
or
leave
lds
rorb
lods
push
cld
arpl
push
push
mov
inc
shlb
adc
mov
mov
push
mov
outsb
mov
int
mov
jae
cmp
inc
dec
fld
cmpsl
cwtl
cmpsb
inc
aaa
sbb
mov
std
inc
dec
bound
out
jp
in
mov
cmpsb
lods
les
dec
movsb
in
ret
adc
add
aas
push
repnz
mov
xor
sub
imul
lods
movsl
fs
mov
xlat
pop
movsb
pusha
jno
add
mov
jle
pushf
out
in
cwtl
jne
fnstsw
push
xchg
add
ret
mov
out
mov
adc
jb
cmpsb
push
ss
out
sbb
jnp
imul
jns
faddl
fwait
mov
inc
adc
dec
cwtl
pop
cmp
sub
fnstsw
pop
xchg
mov
leave
sbb
xorl
xor
rorl
push
xor
push
insb
mov
outsl
push
mov
push
out
sbb
jg
xorb
pop
mov
pop
sbb
cmp
cmpsb
pop
aad
test
pop
push
insl
and
fsubrs
int3
cmc
xlat
ret
jg
push
sub
dec
gs
and
cmp
inc
std
mov
orl
mov
and
sub
pop
jno
inc
xchg
into
inc
adc
movsl
inc
scas
sarb
push
outsl
pushf
lcall
fistpl
rol
xor
daa
push
int
cltd
int3
mov
sbb
xorb
jb
dec
jno
jae
add
ret
ljmp
imul
stos
push
xchg
test
pop
andl
jle
push
dec
lods
and
test
pop
fldcw
and
cmp
xchg
cwtl
aad
fisttps
movl
rolb
cmpl
xlat
shlb
xchg
imul
pop
or
out
pop
std
jo
dec
push
dec
jnp
imul
xchg
outsl
jne
xor
inc
lds
out
lods
inc
dec
repz
dec
mov
popa
ljmp
and
fisttpll
arpl
push
movsb
icebp
jns
in
jecxz
pop
jns
loop
and
inc
in
pusha
push
push
fimull
mov
fwait
jg
in
mov
add
and
and
das
movsb
leave
jb
jo
dec
sub
shll
jo
mov
push
mov
repnz
loope
sub
scas
cmc
sahf
jmp
pushf
orl
pop
int3
popa
das
mov
scas
adc
in
outsl
pop
pop
stos
jbe
add
jle
mov
mov
scas
ret
sahf
js
ret
sahf
mov
sbb
popf
mov
rol
stos
jmp
cmpb
int3
xor
notb
loope
pop
mov
or
and
pop
leave
in
mov
fstp
stos
lea
stos
daa
fists
cmp
jns
add
and
dec
dec
mov
jno
shrb
mov
adc
push
jb
fmulp
clc
jbe
jp
test
push
outsb
pop
cs
pushf
ss
std
stos
ret
out
cmp
push
inc
scas
popf
sbb
lcall
pop
mov
dec
or
in
xchg
int
in
add
pushf
rcrl
insl
inc
mov
int3
adc
jp
pop
mov
and
nop
inc
and
inc
frstor
lret
mov
loop
mov
in
repnz
pushf
scas
or
push
dec
jge,pt
jno
dec
and
sbb
lods
repz
mov
or
out
dec
scas
aaa
cmc
mov
xor
add
rolb
mov
pop
dec
test
mov
pusha
pop
arpl
test
ljmp
inc
sub
shll
jo
hlt
in
adc
icebp
inc
mulb
aas
jle
dec
test
in
mov
fmull
gs
xchg
jp
mov
add
lods
rcrb
sbb
add
xor
nop
sub
or
fdivp
test
mov
adc
outsb
push
mov
cmp
add
sbb
cmp
push
inc
fstpl
pop
shlb
subl
cmpl
xlat
dec
adc
ja
cmp
cmpsb
add
js
ljmp
arpl
fs
xchg
in
int
cs
mov
xchg
pushf
jg
pushf
mov
fidivl
pop
mov
add
jbe
test
aam
inc
pop
mov
add
add
fiaddl
cmpsl
or
popa
xorl
stc
push
xlat
xchg
inc
xchg
lret
lods
cwtl
mov
je
mov
loopne
cmp
xor
out
jg
lcall
mov
sub
cs
push
aam
filds
je
inc
cmp
shl
fistps
pop
adc
popf
cs
add
sub
shl
ret
push
mov
pop
fstpt
outsl
xlat
pop
rolb
insb
inc
mov
ret
lcall
pop
mov
jmp
push
insb
lods
in
cmp
out
pop
mov
pushf
cmp
ud1
out
mov
jp
sahf
lret
ficoml
shrb
xorl
mov
int3
scas
rol
outsb
jmp
loop
inc
pop
nop
scas
pop
insb
fbstp
mov
dec
mov
cmp
nop
inc
movsl
mov
pop
dec
dec
dec
mov
pushf
popf
pop
sub
inc
inc
shr
xor
or
into
ret
pop
data16
cmp
fstl
jae
push
fadds
call
fcmovb
mov
push
stos
ret
pop
in
xor
sbb
scas
push
cltd
dec
add
xor
cmp
sarb
and
mov
es
data16
fwait
sub
mov
iret
jns
mov
int
fs
outsl
mov
xor
imul
mov
push
icebp
inc
rcrb
xchg
aad
push
int
je
lods
dec
and
mov
rolb
xchg
inc
dec
push
lahf
pop
arpl
fdiv
xchg
sbb
xchg
adc
imul
movsl
adc
jbe
xor
call
xlat
in
pushf
movsb
xchg
pop
sbb
into
cltd
adc
lods
dec
dec
xor
xchg
out
inc
je
pop
sub
lods
ret
fisubrs
divl
mov
leave
ds
add
push
ja
mov
mov
adc
hlt
loope
mov
push
mov
and
adc
and
mov
pop
sahf
std
jne
call
into
rorl
fimull
jae
sub
and
aas
mov
xor
lret
loopne
hlt
jns
xor
inc
data16
sub
push
xchg
jmp
dec
and
xchg
adcb
dec
loope
cmc
pop
pop
clc
mov
mov
adc
cmp
pop
stos
jne
adc
push
add
cmp
mov
test
sahf
test
push
inc
fcoms
push
mov
add
sub
xor
pop
outsb
jmp
pusha
xchg
repz
std
iretw
add
popa
fbld
lock
cmc
dec
enter
xchg
xchg
inc
pushf
ss
xor
stos
out
mov
mov
cmp
ret
mov
pop
pusha
jne
imul
pop
addr16
into
sbb
divl
jge
jae
popf
pop
ds
adc
loope
and
insl
fisubs
xor
aam
xor
insb
cmp
inc
repz
fs
inc
xlat
sub
pop
cwtl
out
jae
sbb
js
cwtl
add
movsb
jmp
test
jno
scas
jae
push
lcall
jb
jno
sbbb
dec
jnp
scas
mov
pusha
dec
shrb
movsl
xor
push
inc
push
rcll
dec
daa
xchg
inc
push
mov
and
pop
mov
rcl
mov
je
shlb
push
cmpsb
mov
fisubs
repz
inc
sahf
pushf
add
dec
leave
mov
mov
mov
fs
mov
ljmp
ljmp
push
into
xchg
xlat
sub
mov
stos
sbb
addr16
insl
popf
dec
inc
and
cmc
loopne
mov
fsubrs
fistps
iret
sbb
adc
jbe
enter
mov
dec
mov
aaa
ret
mov
call
sarb
sub
mov
mov
repz
out
arpl
dec
add
xor
mov
cmp
lds
movsb
repz
loopne
mov
push
in
movsl
fildll
inc
mov
mov
loope
mov
jns
inc
jnp
aad
outsl
mov
decb
iret
pusha
mov
cld
mov
loopne
rorl
int
jbe
in
shll
sbb
mov
andb
rol
xchg
dec
insb
jl
mov
mov
pop
stos
xor
cmpsb
test
xchg
cmp
mov
flds
jns
in
cmovns
inc
cmc
andl
mov
and
xor
outsb
loop
jmp
fadds
in
insb
jmp
test
sub
adc
mov
mov
add
or
pop
loop
jp
lea
andl
fcmovnbe
xchg
xchg
nop
push
adc
clc
pop
call
push
aaa
mov
stos
insb
xchg
lock
pop
movsb
cs
andb
pop
cmp
iret
mov
mov
inc
adc
xor
in
xor
sub
loopne
push
jbe
enter
and
aaa
jne
dec
pop
outsb
sub
stos
out
das
shll
mov
fsubp
jecxz
hlt
push
stc
cmp
out
or
sarl
sbb
mov
lds
stc
ret
jg
daa
xor
cwtl
mov
movsb
loopne
jne
cwtl
out
inc
aas
sbbl
mov
in
pop
or
valignq
into
sub
jbe
mov
mov
push
sub
jne
add
jmp
push
cmc
jns
cmp
mov
sub
xchg
and
and
lahf
fstpt
xchg
pop
and
pop
shrb
rorb
mov
sub
test
jle
pop
inc
mov
pushf
push
mov
cmp
jle
pop
cli
jb
push
dec
push
frstor
inc
push
clc
cmp
adc
cmp
mov
into
leave
xlat
or
mov
or
push
rorb
cwtl
add
stos
repz
in
cld
inc
popa
ret
shrb
adc
leave
notl
lea
aas
mov
inc
or
lods
dec
sbb
js
add
mov
mov
inc
cltd
pushf
sbb
retw
fiaddl
jmp
outsb
jg
push
jns
cld
sbb
fnsave
push
fwait
push
std
rorl
enter
hlt
iret
mov
int
pop
mov
dec
pop
cmp
or
xor
data16
inc
pop
cld
repz
pushf
popf
int
xchg
test
inc
jno
jg
add
addr16
cmp
inc
push
faddl
negl
cltd
pushf
dec
add
sub
inc
xchg
popl
xlat
or
daa
popf
dec
dec
loopne
popf
push
fcmovne
jno
subl
cmp
cmp
dec
and
or
shlb
imul
sub
leave
pop
cmp
pop
lret
push
sbb
cmp
xchg
inc
cmp
dec
enter
jne
pop
push
data16
mov
in
orl
xchg
gs
or
xchg
mov
mov
rcrl
pop
test
fidivs
pop
mov
stc
fcom
sbb
dec
and
ret
repnz
xchg
and
jbe,pn
addr16
xor
and
test
fucomip
fidivs
mov
add
daa
mov
inc
push
dec
rorb
inc
nop
stos
loope
sbb
test
cmp
inc
sbb
lahf
jle
cmp
add
or
or
mov
rcr
hlt
repnz
jnp
inc
jnp
outsl
or
test
lahf
mov
out
rcl
pusha
loopne
sahf
movsl
fbstp
js
js
jge
add
out
sahf
pushf
jg
lret
out
inc
pop
inc
sbb
cmpsb
insb
rcll
rcrl
pcmpeqd
orb
test
cmp
or
sub
or
inc
pop
in
out
push
dec
add
jecxz
jmp
jo
shrl
sub
push
movsb
mov
cltd
inc
cli
lcall
out
sub
jns
icebp
popa
adc
std
cs
fmuls
or
into
mov
cmp
pop
outsb
fwait
shrb
pop
or
ds
insb
rorl
fs
cmp
mov
pop
pop
jmp
mov
xchg
cmp
movsl
out
cmpsl
pop
pop
or
scas
in
rcr
push
cmp
mov
sub
push
mov
mov
xchg
push
out
ss
lock
adc
dec
sbb
xchg
sbb
add
pop
fistpl
fidivs
adc
dec
xchg
mov
add
bound
push
inc
sbb
ret
jbe
dec
mov
fs
daa
addr16
and
movl
and
lock
pop
cmp
pop
xlat
insb
push
pusha
daa
mov
or
lcall
sub
dec
and
imul
xor
movsl
push
vmaxss
dec
ja
mov
jbe
jp
loopne
add
lahf
or
mov
scas
add
test
pop
das
push
stos
loop
pop
test
pop
push
test
mov
movsb
out
dec
cmp
or
das
in
adc
popf
jmp
dec
jecxz
sub
outsb
jecxz
lods
jle
jg
rorb
inc
mov
rcll
push
outsb
mov
sbbb
inc
jno
das
repz
add
adc
inc
roll
xchg
dec
or
gs
insb
and
xchg
inc
push
mov
add
fstpl
push
add
pop
pop
jne
pop
fstps
ja
mov
push
sub
mov
adc
cmp
imul
loop
adc
and
dec
push
repz
sub
fs
xchg
mov
mov
xor
test
outsl
push
fwait
cmpsb
jp
xchg
mov
pop
iret
test
add
add
dec
jo
mov
int3
pop
and
cmpsb
and
mov
xchg
pusha
mov
ss
push
push
jmp
jo
loope
cmp
ret
sub
test
adc
lahf
insl
add
jbe
mov
or
movsl
call
jae
inc
jno
fsubp
or
mov
xchg
mov
pop
pop
jne
pop
add
mov
xor
clc
xor
cmp
je
enter
out
fs
shr
sub
adc
loopne
push
stc
cmpsb
sbb
push
or
data16
mov
int
pop
jecxz
cmpxchg
int3
into
scas
stos
in
stos
add
push
sub
inc
inc
sub
clc
mov
add
test
outsl
stos
jne
insb
fwait
push
fs
fimull
mov
or
lds
stos
mov
or
dec
jecxz
sbb
fs
mov
push
test
xor
xlat
lods
stos
lret
test
xorl
popa
leave
mov
jno
mov
jbe
jecxz
or
loopne
lcall
enter
xchg
jecxz
or
vdivpd
das
popa
stos
fnop
dec
lret
iret
cmp
sub
mov
mov
push
dec
cld
adc
inc
adc
mov
sahf
out
dec
pop
mov
insl
inc
repz
out
mov
mov
out
ficoml
mov
adc
jo
jnp
xchg
scas
inc
lcall
jns
xor
inc
hlt
adc
nop
lahf
icebp
pusha
jg
mov
filds
loopne
jns
out
push
push
dec
xor
ficoml
dec
push
dec
add
sub
xchg
fchs
lret
dec
lods
jns
mov
jg
repnz
ljmp
je
sub
insb
popf
fcomps
rol
scas
cmp
arpl
add
out
ds
insb
stos
out
cmpsb
out
cmc
cli
fdivrs
nop
aaa
aaa
mov
icebp
mov
or
or
adc
mov
stos
aad
adc
lret
fwait
push
daa
and
mov
adc
out
mov
lcall
or
adc
shrl
cmp
mov
iret
adc
fistl
xor
add
mov
lock
neg
mov
fdiv
sbb
dec
rorb
push
pop
mov
xor
sub
lret
icebp
shll
iret
mov
mov
mov
pop
dec
sti
repz
cmp
cmp
bound
mov
scas
jnp
nop
outsl
sub
cli
sysexit
arpl
or
shll
push
xor
mov
lods
cli
sti
insb
xor
cmc
addr16
xlat
bound
in
sbb
push
pop
push
je
cwtl
jno
rcr
test
lock
enter
or
mov
movl
rolb
insb
lret
xor
mov
xchg
aam
mov
aad
pop
lret
aad
mov
xor
or
xlat
mov
arpl
addr16
jmp
cmc
ja
aam
push
fidivrl
in
mov
fistpl
jg
call
sub
mov
push
scas
fdivl
popa
test
jne
sarl
mov
or
or
mov
jmp
cwtl
arpl
std
and
push
push
or
sbb
lcall
push
mov
cmp
add
jle
cmpsb
mov
jle
or
push
mov
out
inc
jl
fnstsw
xchg
test
push
jo
push
icebp
xor
sbb
mov
ret
mov
pusha
cltd
shl
pop
mov
jecxz
scas
std
sbb
jle
dec
enter
sub
mov
sub
push
lods
jge
and
cmpsb
cld
push
push
xchg
sbb
daa
pop
push
fmuls
in
jo
iret
test
subl
xchg
dec
loop
lcall
test
sub
push
in
pop
sbb
insb
lock
call
inc
lock
repz
xor
popa
mov
add
loop
cmc
push
pop
adc
sbb
out
gs
adc
mov
sbb
sti
lcall
or
call
mov
cld
pop
xchg
add
nop
inc
pop
arpl
mov
mov
ljmp
cmpsl
xchg
push
push
loop
mov
mov
mov
inc
int
aad
filds
jne
push
xlat
add
xor
loope
popa
imul
cmp
cmovnp
adc
jecxz
xchg
xchg
je
iret
push
push
pushf
dec
fsubrl
mov
jle
icebp
into
adc
test
mov
ja
push
mov
mov
jo
in
mov
sub
addr16
je
mov
jmp
popa
push
inc
cmpsb
out
pop
adc
ret
insb
inc
pop
xor
rclb
ja
pop
cmp
inc
out
jnp
mov
mov
pop
pop
sub
int3
jle
pushf
sub
mov
pcmpgtb
jecxz
push
fdivrs
loope
xlat
push
outsl
dec
pusha
mov
stos
stos
mov
and
and
es
and
pushf
add
mov
push
cmp
outsb
jl
jge
nop
mov
push
iret
push
add
scas
loop
arpl
test
add
push
subb
sub
fstpl
add
arpl
test
jns
and
cmpl
jne
mov
movsl
mov
shl
jmp
sbb
inc
xlat
sub
cld
pop
flds
cwtl
stos
adc
fldl
dec
inc
sarl
mov
lods
mov
mov
test
icebp
push
imul
lret
shll
cltd
movsb
xor
in
sbb
xlat
ds
jge
in
lods
pushf
mov
push
and
jo
inc
and
subb
xchg
xchg
jg
rol
mov
adc
sbb
cmpsl
test
mov
dec
sbbb
pop
iret
repz
fcomps
or
mov
loop
sbb
or
mov
adc
std
lods
xor
pop
cmp
gs
scas
push
insb
mov
mov
and
inc
jl
repz
adc
lar
mov
aam
mov
lods
sub
sbb
shrl
xchg
inc
mov
lret
lret
shrb
jmp
push
popf
pop
scas
fucomi
stos
xchg
sub
in
mov
jbe
shll
movsl
mov
or
loop
inc
dec
fists
adc
dec
adc
inc
jo
ret
pop
mov
xor
pop
adc
loopne,pt
into
fsubr
ljmp
lds
inc
js
das
cmpsb
jle
lock
pop
xlat
cmp
pop
xchg
in
lock
sbb
rol
push
in
push
fstpt
std
xorb
fwait
cmp
loop
inc
in
push
sbb
pop
and
mov
push
pop
movsl
fwait
iret
dec
xor
mov
xchg
sti
addb
pop
ret
xor
xlat
loope
ficoms
and
aas
mov
popf
scas
scas
pop
les
and
pop
xor
lock
dec
std
mov
mov
jle
jb
xlat
xchg
pop
cmp
cmpsb
into
out
cli
mov
inc
sub
mov
inc
cmp
adc
adc
pop
mov
sbb
push
xor
mov
addl
pop
xor
pop
hlt
fistps
mov
mov
adc
cvttps2pi
xchg
and
sbb
add
cmp
cmp
iret
fistps
shlb
mov
mov
sub
in
das
pop
jnp
pusha
js
pop
in
jmp
sbb
rcll
cs
cmp
pop
push
dec
mov
add
xor
ret
pusha
rcr
pop
aas
and
leave
daa
hlt
mov
js
xchg
push
imul
mov
in
addr16
inc
add
adc
dec
divl
mov
or
push
or
cmp
mov
mov
rcrb
mov
stos
pop
jo
addr16
bound
and
inc
ret
in
leave
roll
cld
and
mov
pop
push
movsl
mov
addb
push
jle
or
xor
push
jns
add
sbb
xor
mov
fmuls
and
jp
rorb
je
cltd
orl
aas
sahf
xchg
daa
cmp
lea
lods
xor
je
iret
ja
xlat
xchg
xor
xchg
pusha
mov
arpl
cmp
ljmp
push
fistl
lahf
xor
or
mov
cmp
cmp
roll
jge
xchg
into
mov
cmpsl
ret
ret
adc
mov
mov
aaa
movsl
mov
lcall
dec
ret
inc
xor
movsl
aad
sbb
lahf
inc
testb
jmp
vpshlq
push
in
lahf
mov
ljmp
push
stc
jl
pop
je
in
iret
pop
sub
aaa
cs
mov
scas
sub
rolb
inc
lock
arpl
xor
and
leave
jb
imul
loop
fnstcw
adcb
cmc
sub
pop
xor
data16
or
test
lock
lods
push
push
ret
gs
cs
jns
jg
negl
jns
mov
out
xor
jb
aaa
mov
or
mov
scas
data16
pop
cmp
aaa
fnsave
jns
aad
into
mov
test
pop
push
sbbb
out
subb
fstpt
lret
mov
xor
lahf
ja
and
push
sbb
pop
shl
or
mov
add
ljmp
inc
xchg
xchg
and
in
insl
test
mov
iret
shll
mov
dec
pop
jl
clc
ret
movsb
out
add
jp
popf
inc
int3
mov
jns
xlat
loopne
jp
sbb
pusha
push
jle
mov
inc
shlb
sub
push
repz
outsb
es
xchg
cltd
stc
push
sbb
cld
repz
repnz
in
xor
in
nop
adc
add
mov
mov
push
dec
cmc
pop
jp
rcrb
or
shrl
out
xchg
pop
scas
outsl
sbb
lods
push
xchg
testb
outsl
pop
mov
push
xchg
filds
push
adc
dec
lea
pop
mov
mov
mov
cltd
mov
cmp
inc
cmp
test
or
adc
or
data16
hlt
ja
adc
add
adc
sub
fistps
lock
xchg
xor
fidivs
jbe
pop
and
xchg
and
test
add
mov
sbb
push
push
aam
sub
mov
cmp
mov
test
aaa
mov
arpl
sub
xchg
xchg
mov
xor
jl
pop
jecxz
repz
pop
mov
inc
jno
cmpsb
add
push
stos
div
mov
cmp
push
xor
push
and
jbe
dec
mov
xchg
adc
rcll
clc
in
lahf
pop
sub
xor
xlat
testb
adc
adc
pop
insl
jg
pop
add
and
fnstenv
cmc
inc
test
lret
fs
pusha
das
jb
mov
mov
repnz
aad
mov
sub
dec
pop
mov
push
ja
loopne
mov
or
cmpsl
lcall
cmp
and
out
idivb
mov
orl
cmp
aam
sbb
or
push
jmp
data16
data16
xor
outsb
xchg
lret
xchg
push
paddsw
fs
push
or
sub
ret
or
or
inc
jnp
adcl
rcll
mov
pop
mov
in
in
sbb
nop
push
mov
jnp
adc
push
cwtl
jne
pusha
add
mov
sub
xlat
aad
rcll
fs
xor
jp
lock
test
lock
idivb
lret
imul
stos
sub
add
inc
lods
jmp
sbb
and
cwtl
js
add
lea
mov
inc
push
and
mov
jne
aas
test
sbb
sub
in
stc
adc
aaa
setb
lods
inc
mov
mov
mov
data16
gs
cmp
test
push
testl
int3
or
jno
or
sti
and
ret
sahf
mov
push
out
mov
mov
sub
sub
push
sbbl
xchg
in
pop
mov
jge
jne
aaa
mov
shll
mov
rorl
ja
lahf
sbb
out
scas
jp
pop
jp
out
and
movsl
xor
movsl
cmp
stos
cmc
xor
ss
insl
in
xchg
mov
repnz
outsl
popf
mov
adc
test
ja
push
xchg
test
daa
mov
ljmp
sub
or
push
pop
fistpll
sbbb
ds
mov
stos
or
cmc
leave
lea
push
pop
shrl
cmpb
aad
jle
fsubrl
hlt
jecxz
dec
xchg
pop
jnp
pop
rcr
sbb
sub
mov
mov
sti
xor
add
mov
mov
jb
pop
imul
out
push
jmp
mov
cmpl
fsubrl
fadd
fisttpll
sub
mov
jl
cmpsb
mov
cmp
lds
fs
nop
push
or
cmp
or
or
shl
fcmovu
or
xchg
in
push
jmp
adc
cwtl
fcmovb
lea
int
xor
pop
ja
xlat
test
jb
ljmp
imul
filds
sbb
sbb
pop
mov
loop
jne
push
fcom
imul
aas
dec
inc
stos
pop
leave
lret
lahf
outsb
movsl
sub
test
in
add
shr
mov
shl
xchg
ljmp
mov
jnp
iret
inc
ret
adc
imul
jno
in
repnz
inc
fcomps
icebp
mov
pop
jp
repz
jno
push
push
jmp
or
sbb
scas
out
mov
fsub
dec
js,pt
push
sbb
mov
and
loope
fadd
xchg
ljmp
aad
sub
imul
inc
aas
push
jl
rcr
ror
or
cmp
lret
pop
jae
and
stos
jnp
pop
in
andb
loopne
add
adc
inc
mov
flds
and
loopne
or
xor
je
popf
xchg
leave
jne
out
iret
jno
add
dec
and
loopne
dec
cmpsl
xor
jbe
arpl
pop
xor
test
cmp
clc
sbb
mov
loop
rorb
xor
test
ljmp
sub
and
das
fs
dec
add
and
inc
cmp
pushf
dec
jge
jo
push
movsl
pop
outsl
out
mov
xchg
pop
pop
call
lods
push
xlat
loopne
push
dec
pop
inc
and
add
pop
push
xchg
sub
bound
out
push
nop
jmp
ss
jnp
add
decb
cmp
sub
sub
mov
fwait
jnp
fcomp
mov
mov
notb
sahf
cs
js
cld
sub
inc
sub
std
pop
rorl
mov
mov
sub
push
inc
sub
lret
inc
fmuls
xorl
cmp
fldl
or
aam
mov
insb
fsubrl
mov
fisubs
imul
mov
je
and
sahf
ret
add
std
das
pushf
ficoml
sub
jg
cli
fcmovb
lret
add
aad
mov
push
lea
testl
adc
mov
out
iret
ret
ret
pop
mov
out
inc
push
loop
mov
fs
mov
jge
mov
sub
incl
lea
lret
iret
cmc
repz
mov
push
adc
gs
loopne
mov
out
bound
or
aam
repz
pop
inc
dec
add
mov
pop
jns
xchg
mov
adc
je
scas
fwait
xor
aad
sub
mov
repnz
lcall
imul
jp
jmp
jp
xchg
pop
out
jno
ja
ss
xor
jnp
lret
into
cmp
xchg
push
int3
lods
and
dec
ja
ss
mov
ds
call
xor
mov
inc
jmp
fisubl
and
pop
adc
push
xor
mov
test
pop
loop
jp
push
sub
insl
lret
lods
movsl
xchg
add
aas
cltd
in
jno
push
cmpsl
adc
xchg
lock
pop
icebp
arpl
push
mov
fcmove
test
and
je
jb
sarb
jl
les
mov
or
in
sub
push
xchg
lock
jne
bound
cmp
lret
je
push
roll
mov
outsl
rclb
cmpsb
movsl
cmp
add
push
ud0
mov
sarl
mov
xor
pop
or
sbb
cld
adc
mov
jmp
test
sti
rcl
add
in
xchg
js
and
lds
add
sub
into
arpl
fmul
idiv
in
fcomps
jge
aad
fdivrl
mov
xchg
jae
pop
or
sub
sub
int
bound
out
enter
push
adc
inc
int
xchg
out
mov
add
sub
fldenv
add
nop
inc
push
out
xlat
mov
mov
int3
mov
add
mov
mov
pusha
cmp
pop
rolb
enter
cltd
rorl
mov
and
ret
aad
enter
push
jae
dec
mov
add
jne
xor
cmp
stc
push
enter
mov
adc
mov
sub
dec
cld
or
pop
fdivrl
ljmp
popa
sub
cmp
in
stos
rolb
sbb
hlt
jne
sub
mov
adc
aaa
push
push
push
jp
xchg
out
jb
ljmp
lds
xor
imul
jb
dec
ja
imul
es
loop
dec
arpl
out
repnz
xchg
insl
jle
les
add
jge
mov
sub
in
mov
lods
insl
add
adc
sahf
insb
incb
mov
sbb
ljmp
ret
cli
mov
jbe
cs
or
push
push
or
or
pop
ror
out
cmp
adc
jb
mov
xor
push
add
fs
push
push
mov
test
and
insl
xlat
pop
in
lret
xadd
mov
sub
repz
push
stos
addr16
push
push
ret
and
jg
jb
adc
jb
mov
jno
jns
xchg
icebp
loopne
xor
fidivl
nop
test
int
clc
ss
xchg
push
out
add
cmpsl
cmp
adc
and
in
lods
data16
push
adc
sub
jmp
add
pop
cmp
xor
dec
rcll
pmulhuw
or
fidivrl
xor
cs
aaa
push
je
jg
mov
cmp
fstl
insl
nop
enter
imul
fldenv
mov
push
mov
mov
stc
fsubr
or
jb
cwtl
pop
pop
mov
call
fcmovu
ljmp
pop
inc
les
int3
adc
pop
push
mov
iret
sbb
loopne
scas
cmp
push
bound
xchg
filds
pop
adc
mov
sbb
data16
out
fldt
inc
sbb
push
je
daa
imul
neg
mov
in
fstpt
ror
add
fmuls
jp
xlat
xor
xor
xor
mov
sbb
jg
bound
sbb
cmpsl
inc
popa
lcall
xchg
in
adc
mov
js
and
in
scas
xchg
iret
popf
jmp
cmp
mov
xlat
inc
enter
sbbl
inc
in
imul
in
sub
xchg
cmp
pop
dec
mov
or
add
jbe
xchg
mulb
lcall
dec
sub
inc
adc
xor
aad
sbb
repz
sub
jg
aad
das
ljmp
sbb
push
jnp
shll
test
repz
sarl
jecxz
jmp
fcoml
mov
xchg
pop
push
nop
push
outsl
daa
add
nop
shlb
pop
adc
out
lock
addb
adc
aaa
sarb
jmp
loopne
push
mov
cs
outsl
mov
mov
add
xor
out
cmp
out
push
aad
cli
in
push
jnp
lds
ljmp
in
test
aad
jle
xchg
dec
pop
bnd
sub
ds
xchg
sbb
dec
cmp
xor
adc
mov
subl
in
adc
sbb
dec
mov
or
and
clc
loope
adc
cmp
cmp
hlt
pop
jae
cmp
insb
pop
pop
xchg
xchg
cmpsb
mov
sar
je
pop
ss
addb
cmpsb
xor
lahf
inc
ljmp
add
das
dec
mov
cmpsl
inc
cmp
mov
jle
das
pop
pusha
movsl
mov
xchg
sbb
push
rcll
and
into
cmpsl
iret
add
cld
pop
inc
adc
popa
mov
adc
xchg
fnsave
add
jno
inc
mov
jnp
push
mov
dec
or
jecxz
mov
insb
std
iret
mov
adc
sub
iret
inc
fs
aas
stos
test
filds
cmpsb
test
movsb
roll
sbb
pushf
adc
bound
xor
insb
ret
push
in
mov
popa
push
pushf
add
scas
mov
xorb
jle
push
test
test
push
pop
bnd
xchg
scas
sub
adc
sub
sahf
enter
in
sub
mov
ss
mov
jne
push
cwtl
pop
sbb
jle
jle
sahf
mov
repnz
or
cmp
cmp
pop
lods
pop
xor
int3
dec
push
mov
or
sahf
and
inc
ss
insb
cmp
ret
sub
mov
clc
roll
or
and
fisttpll
xchg
or
xchg
in
xor
mov
enter
jg
xchg
lret
pop
cmpsb
adc
sub
ljmp
adc
inc
stc
jmp
in
lcall
outsl
xor
xchg
add
inc
inc
add
mov
push
cmpsl
inc
int
xor
jmp
lds
mov
cmp
cmp
shlb
lea
and
das
mov
inc
mov
movsl
cmp
insl
loopne
hlt
dec
pop
xchg
lcall
out
popa
mov
loop
frstor
fbstp
jno
jne
xor
jmp
mov
push
sub
add
ret
push
mov
add
es
sahf
nop
data16
movsb
add
jae
sahf
add
stos
push
sbb
and
jecxz
gs
dec
cld
pop
test
movsb
mull
cmp
adc
lea
loopne
cmc
add
mov
out
jecxz
jmp
dec
ss
fnstenv
dec
popf
bswap
test
jp
mov
cltd
jno
enter
dec
out
and
test
sbb
orb
sarl
inc
cmp
mov
pop
insb
fdivrs
je
shr
xor
int
sbb
sub
xlat
jo
call
cltd
enter
mov
movsb
xchg
icebp
iret
in
inc
push
fdivrs
mov
arpl
and
adc
ret
mov
jle
loope
jb
xchg
jg
into
int3
outsb
and
jg
jne
inc
or
loopne
cmp
bound
cld
xchg
in
pop
mov
insb
push
cld
in
fisubrl
loopne
dec
mov
aam
xchg
pusha
push
and
cld
sbb
push
loopne
xchg
sbb
jno
mov
daa
cwtl
mov
je
into
in
xchg
insb
arpl
cmp
and
cwtl
and
inc
sub
sub
push
adc
mov
jge
and
sbb
fcos
int3
int3
and
pushf
fwait
pop
pop
add
inc
cmc
push
leave
sti
mov
fcomps
dec
out
inc
in
dec
cmpsl
pop
mov
mov
push
push
sbb
fdivrl
or
sub
sub
jecxz
sti
jmp
pushf
loopne
cmp
xor
mov
xor
or
pop
icebp
imulb
mov
int3
xor
push
dec
and
test
mov
cmpsb
clc
xchg
mov
and
inc
bound
cmpb
loop
xchg
insl
cmp
xchg
fs
int3
mov
ficoms
jge
fiaddl
dec
sub
xchg
push
in
imulb
jns
dec
xlat
jl
mov
xlat
ret
dec
mov
fmul
dec
jno
xchg
xchg
inc
inc
aam
cwtl
mov
hlt
xor
add
mov
adc
cli
das
xchg
lds
and
pop
xchg
xor
loopne
mov
adc
iret
adc
test
lock
lcall
std
mov
repz
inc
xchg
hlt
xor
fcmovnb
and
scas
fwait
mov
jg
push
jo
xorl
push
data16
clc
dec
dec
dec
call
lret
sti
sub
dec
add
ss
imulb
lds
inc
mov
fwait
jb
inc
int3
popa
mov
imulb
cmp
out
mov
push
jb
cmp
out
adc
xor
gs
pop
repnz
jg
sbb
out
xchg
push
scas
cltd
cmp
out
pushf
xchg
or
daa
inc
pop
lods
xchg
popa
inc
shll
sub
or
ja
cmp
data16
aaa
inc
shll
rcrl
or
push
jmp
rcrl
lret
push
mov
movb
push
xchg
dec
pop
mov
sti
adc
pop
or
mov
push
lds
cmp
or
or
mov
lods
sbbb
adc
mov
inc
and
mov
xor
bswap
test
jo
bound
push
sbb
outsl
bound
sbb
fnop
mov
icebp
xchg
push
mov
dec
test
jl
xchg
pusha
mov
add
mov
iret
push
mov
push
shrl
lea
imul
pusha
jne
cmp
nop
or
mull
scas
cmc
aas
lea
or
push
sub
xor
inc
jge
jo
jge
xor
loop
inc
ljmp
mov
fwait
mov
test
push
lock
sub
pop
jp
mov
jl
cmp
pop
outsl
clc
mov
inc
insb
icebp
jnp
pop
pop
cs
roll
pop
cwtl
mov
pop
popa
loopne
push
xchg
popa
and
lcall
add
push
pop
jecxz
addr16
lret
pusha
push
mov
jge
jae
push
repnz
adc
adc
adcw
adc
dec
mov
sub
sbb
outsb
inc
mov
fcomi
rorl
outsl
mov
or
pop
mov
arpl
or
or
and
or
mov
sub
jle
inc
inc
jo
push
idivl
sub
inc
pop
mov
pop
jle
test
mov
mov
leave
sub
fisubl
push
nop
ret
clc
jns
pop
inc
divl
sti
jmp
cmp
or
arpl
repnz
sbb
sbb
mov
pop
lahf
les
jmp
bound
mov
in
and
inc
pop
lahf
rolb
dec
inc
xor
push
in
cltd
lahf
cmp
lds
les
mov
enter
ret
shrb
jmp
clc
and
xchg
dec
ret
pop
jge
xchg
aas
cmp
dec
mov
push
les
jnp
pushf
loopne
outsl
es
pushf
or
int3
xchg
push
cmp
insb
xor
dec
std
inc
or
stc
cmp
jg
adc
insb
jle
movsb
cmp
jmp
adc
push
pusha
sub
sbb
loope
loopne
cmp
push
pop
cmpsl
pop
mov
jne
sbb
or
and
xchg
in
call
xchg
test
mov
push
adc
pop
mov
in
add
pusha
add
xchg
scas
les
sti
xchg
inc
cmc
mov
stos
and
enter
popf
dec
or
pop
shl
pop
pop
lahf
xor
mov
push
adc
and
movsb
rorl
xor
int
xorl
add
inc
mov
bound
xor
ret
stos
jle
clc
dec
mov
lahf
and
lock
stc
add
fwait
sub
aam
jb
inc
jle
dec
mov
aas
xor
mov
clc
lcall
int
sahf
dec
push
loop
sbb
xlat
sub
lret
xor
cmc
insl
mov
addr16
hlt
jbe
scas
fadds
fwait
pcmpgtd
lret
pop
out
into
sahf
sbb
or
adcb
cmp
pop
sbb
loop
fbld
mov
not
cmp
sub
inc
decw
stc
jle
enter
mov
out
daa
mov
or
das
jecxz
jbe
cs
dec
sarl
subb
cltd
lcall
mov
pusha
sbb
and
pop
icebp
mov
inc
cltd
out
pop
stos
pop
aas
xchg
ds
int
pop
stos
and
scas
ret
push
jecxz
ficoms
or
fcmovnu
inc
adc
lods
call
fwait
add
pushf
stc
cltd
push
cmp
xorb
cmp
test
sarl
cmc
mov
sti
add
jge
fisttpl
jo
clc
lds
ljmp
hlt
outsb
cmp
mov
xchg
mov
xchg
repnz
js
jbe
shlb
pop
lahf
jb
sub
xor
jae
push
addr16
push
add
adc
popa
inc
add
sub
scas
mov
loopne
sbb
mov
pop
movsb
int3
out
mov
loop
pop
aaa
insl
push
daa
cmp
stos
sub
cli
fmuls
pop
cmp
inc
sbb
add
fiadds
xchg
xor
mov
jns
insb
sbb
shll
aad
sbb
cmp
pop
mov
popw
mov
sub
mov
xchg
or
test
bound
lret
inc
arpl
sbb
ficompl
sub
push
insb
pop
mov
jb
insl
jb
inc
lcall
loop
test
mov
sti
into
push
int
or
adc
mov
insl
mov
and
int
add
sub
jbe
mov
adc
repnz
push
jp
push
sub
pop
inc
inc
xor
mov
dec
dec
aam
shlb
mov
inc
stos
and
adc
cmp
rcrl
mov
xchg
enter
cmc
call
adcb
push
inc
std
cmpb
neg
and
mov
clc
xchg
lret
jecxz
adc
aaa
loopne
push
sbb
xlat
jecxz
push
pop
rcrb
xorb
dec
ret
xor
js
mov
push
push
jge
or
mov
pop
mov
and
mov
xor
aas
jp
add
in
xchg
ljmp
dec
push
repz
mov
push
std
xorl
jg
mov
aad
ljmp
sarb
mov
sub
pushf
mov
mov
push
cltd
into
and
leave
xor
fs
pop
or
xchg
fucomi
cmp
mov
pop
mov
cmp
fwait
mov
fbld
sub
push
cmp
fnstsw
mov
pop
mov
xchg
mov
dec
imul
pop
sbb
fnstenv
cmp
out
in
test
jecxz
stos
mov
xchg
cmp
aas
mov
icebp
out
js
leave
test
movsl
pushf
mov
mov
jecxz
fcmovu
xchg
fimull
push
xchg
and
bnd
and
clc
sbb
testb
pop
or
jns
sti
mov
and
icebp
ja
popf
test
jmp
or
xchg
dec
mov
adc
movsb
pop
into
fsts
ds
and
mov
cld
out
addb
mov
push
mov
and
add
jmp
sbb
or
mov
xor
clc
cmp
stos
loope
stos
lds
sbb
lret
popa
icebp
fnstcw
add
sub
mov
sbb
cli
xlat
lret
aam
lds
lret
sarl
adc
aad
push
scas
orb
andl
and
insb
and
clc
sbb
push
xchg
mov
repnz
mov
push
dec
lret
mov
sub
dec
mov
adc
and
scas
cmc
pusha
fcoml
jno
sti
leave
insb
mov
jge
pop
mov
push
push
sar
aam
push
les
imul
stos
lret
jmp
mov
pop
std
jl
push
andl
jb
inc
or
ljmp
fistl
sbb
leave
sub
clc
xchg
or
sbb
sub
pop
std
sub
cmp
or
test
and
daa
dec
or
insb
xchg
and
or
pop
cli
and
lcall
jae
cmp
or
xchg
push
mov
or
ss
movsl
and
adc
mov
inc
pushf
stos
fstpt
int3
inc
push
fidivrs
in
aaa
ja
mov
push
stos
fisubl
jp
push
pop
sbb
pop
dec
push
mov
je
push
xchg
jne
xor
repz
xor
loope
xor
fnsave
mov
das
adc
test
call
data16
out
imul
pushl
movsl
lods
jl
xchg
cmp
pop
mov
push
lcall
out
pop
sbb
jne
cmp
add
imul
outsb
sbb
cs
mov
pop
mov
push
mov
insb
sub
pushf
xor
inc
in
push
cmp
aas
hlt
mov
hlt
out
jmp
cmp
xorl
into
xor
or
jg
movsb
mov
push
jmp
arpl
or
sbb
pusha
repnz
xchg
xchg
call
mov
inc
movsb
inc
lods
sbb
inc
inc
push
cmpsb
jns
test
sub
jg
mov
jne
imul
scas
js
jmp
test
add
or
pop
int
ret
mov
popf
das
out
out
or
sub
dec
cs
pop
popf
mov
sbb
dec
ljmp
cli
pushf
aaa
or
fs
daa
mov
stos
pop
sar
push
inc
or
jnp
rorl
xchg
sub
cmp
push
imull
push
imul
sub
rorb
xchg
out
mov
jnp
mov
insb
pop
xor
xchg
inc
repnz
or
das
and
stos
clc
clc
push
adc
cmp
add
in
mov
pop
push
mov
fisubrs
dec
push
adc
push
nop
cmpl
test
packssdw
mov
inc
sbbl
insl
xchg
push
leave
lea
sbb
outsl
mov
lea
daa
repnz
xchg
bound
or
xchg
fwait
daa
mov
int
dec
push
popf
jg
outsl
shrl
scas
js
jno
mov
adc
mov
cmp
or
inc
lret
cmp
test
sahf
lock
and
add
cmp
lds
clc
mov
iretw
aaa
push
mov
nop
or
ret
mov
push
pusha
push
add
mov
je
sub
mov
lods
das
repz
inc
push
push
arpl
inc
cli
cs
movsl
popa
pop
pop
adcb
imul
lods
dec
stos
gs
das
gs
or
pop
in
jbe
cmp
orl
mov
in
and
imul
pop
push
or
scas
add
cwtl
inc
fstps
andb
mov
hlt
sti
cmpsb
notb
mov
mov
lret
pop
es
or
test
pop
sbbl
scas
xchg
cmp
fucomip
stos
mov
bndldx
das
mov
mov
cs
xor
push
andl
fadd
jmp
mov
cmp
mov
or
inc
sub
pop
test
test
mov
xchg
and
mov
push
fisubl
mov
push
cld
cmp
sbb
adc
test
pop
lea
rcll
sahf
inc
hlt
sbb
pop
ss
fs
jg
aad
lods
roll
stos
mov
xor
lock
or
cmc
adc
jbe
push
xor
aam
xchg
jg
pop
pop
xchg
scas
mov
enter
mov
sbb
fwait
inc
xchg
xchg
xchg
mov
sbb
imul
aam
xor
lds
mov
and
dec
push
xor
mov
inc
sti
sti
jno
adc
aam
cmpsb
jp
clc
sarl
xchg
jb
sub
cmp
cmpsb
mov
jnp
sub
sub
add
xor
fiaddl
pop
push
mov
aaa
inc
push
por
push
and
ret
and
pushf
adc
lods
xchg
into
orl
data16
ljmp
stos
lret
cmp
or
jl
cmp
popf
jle
mov
iret
iret
lods
repnz
popa
cmp
clc
das
mov
xchg
dec
shl
push
add
dec
jae
jecxz
and
pop
add
sub
adc
sub
orb
lock
xor
mov
jmp
cs
sub
inc
daa
test
fstl
lret
sub
push
cmpsb
jno
rorl
data16
popf
aam
aad
lock
test
clc
mov
and
leave
fstpt
sub
add
inc
mov
int
fidivl
mov
push
mov
jle
out
xchg
fiadds
fldcw
pop
cmp
xlat
inc
push
sbb
test
outsb
adc
xor
mov
mov
out
pop
out
mov
sub
sub
aaa
fstpl
add
xchg
mov
flds
add
inc
cld
xor
sbb
dec
inc
or
push
or
loopne
movsb
xchg
aaa
cmp
xor
fistpll
int
fbld
push
daa
or
sub
pop
jecxz
leave
adc
int
mov
sbb
daa
loopne
in
sbbb
jle
divb
add
test
cmp
push
test
push
sti
loopne
jge
data16
test
movsl
mov
movl
adc
popa
es
xor
cmpsl
lret
fists
mov
xchg
push
lods
jmp
in
fwait
repnz
xor
stos
jns
cltd
outsl
lcall
jae
push
out
jne
jge
sub
push
inc
call
push
push
cmpsb
adc
sub
data16
mov
or
insb
cmp
jae
mov
lea
push
dec
dec
and
aaa
and
push
out
mov
push
add
loopne
inc
inc
pop
rcl
movsb
imul
out
fs
es
adc
mov
mov
mov
call
mov
mov
jp
ret
mov
cmpsl
cld
mov
stc
jno
add
mull
data16
int3
pop
or
das
pop
adc
jl
mov
dec
mov
clc
pmaxub
jo
out
imul
sbb
sbb
in
enter
jg
movb
dec
lahf
dec
inc
cmpl
sub
pop
les
mov
pop
push
sbb
les
repnz
imul
xchg
xor
cmp
enter
jmp
mov
mov
sahf
mov
idiv
sbb
movsl
scas
mov
mov
pop
inc
inc
adc
dec
fbld
into
mov
in
dec
xor
in
movsl
leave
stos
aaa
and
jne
xchg
outsb
into
test
mov
pop
cmp
ret
xchg
lds
movsb
in
dec
dec
fistpll
cltd
fwait
movsb
sub
adcb
xor
sbb
add
push
mov
jp
push
frstor
adc
into
and
ja
adcl
pushf
pop
stos
cmpsb
sbb
cld
push
jno
mov
jnp
xor
aad
xchg
xchg
lods
psraw
cltd
das
push
mov
stos
iret
mov
fwait
lret
pop
jae
inc
mov
cmpsb
adc
repz
lods
pusha
xor
or
and
fiaddl
ret
rcl
inc
mov
subb
dec
or
jle
insl
daa
jp
jl
sub
sub
xchg
add
daa
add
push
jbe
pop
sbb
test
scas
iret
dec
push
in
dec
movsb
and
xlat
rcl
mov
clc
or
repnz
add
shll
out
imul
add
leave
ljmp
or
rorb
mov
dec
scas
mov
mov
or
popl
push
xchg
out
or
or
arpl
mov
stc
repz
add
add
loopne
inc
test
cs
sbb
out
inc
test
sbb
scas
mov
in
flds
dec
push
pop
push
or
int3
or
imul
mov
mov
jle
rorl
das
push
push
xchg
test
mov
mov
cld
xor
dec
xchg
fcoml
adc
je
push
icebp
mov
pop
sbb
stc
test
out
pusha
mov
repz
in
push
int3
arpl
push
nop
mov
push
sbb
mov
testl
xor
xor
cmpsl
popa
or
arpl
scas
and
pop
pop
inc
add
mov
mov
sbb
push
sbb
xchg
aaa
add
pop
dec
sbb
mov
imul
add
insl
push
push
add
mov
dec
fucomip
adc
mov
adc
inc
daa
sbb
dec
cmp
add
mov
adc
push
scas
mov
cli
aaa
push
jo
push
pop
jae
jno
scas
or
dec
popf
push
fwait
pop
jno
fucomip
negb
loopne
imul
mov
inc
lods
sub
in
mov
pop
cmp
pop
pop
cmp
adc
scas
rcl
pop
icebp
lods
xchg
mov
adc
int3
bound
mov
cmpsb
jbe
xchg
mov
and
cmp
jl
je
insl
std
in
scas
out
jno
push
lret
movsb
xchg
xchg
inc
lea
jno
fisubs
mov
sbb
push
call
ffree
and
and
jecxz
nop
mov
fs
dec
jnp
gs
mov
into
cltd
sub
sbb
mov
sub
in
jge
mov
punpckhdq
push
movsl
hlt
std
cli
sbb
les
xchg
cwtl
decl
fcompl
orb
cmc
inc
dec
cmpsl
and
jbe
in
lods
idivl
pusha
add
inc
pop
addr16
repz
pop
aam
mov
mov
cmc
rcrb
xlat
xor
xor
bound
bound
mov
xor
and
out
and
ljmp
jmp
and
cmc
xchg
add
jmp
scas
or
dec
scas
xchg
pop
jg
pop
mov
push
mov
push
xchg
dec
adc
insl
add
aas
and
shrl
mov
mov
std
xchg
pusha
cli
fwait
cs
mov
inc
sbb
mov
lea
lods
sahf
sbb
adc
out
and
in
xlat
shlb
mov
aad
imul
scas
or
mov
test
dec
into
fstpt
inc
and
push
add
jg
mov
out
cmc
mov
inc
adc
mov
arpl
iret
mov
jl
les
sbb
mov
ret
rcr
outsl
jae
push
or
jb
xchg
sti
mov
mov
mov
add
in
pushf
outsl
int3
ljmp
sbb
sahf
pop
cmpsl
push
adc
pop
icebp
mov
shl
cmp
sub
icebp
pop
jnp
jae
add
aam
xchg
sub
inc
popf
sub
jnp
aad
sub
dec
test
and
fadd
stos
adcb
aam
inc
pop
xorb
je
cltd
inc
rcrb
notb
xor
xlat
hlt
mov
mov
int
loop
dec
jno
aam
push
loope
dec
pop
inc
into
and
inc
std
jecxz
xchg
and
pop
hlt
jb
xlat
stc
pop
pushf
data16
mov
dec
xchg
in
xchg
sti
icebp
lods
inc
ret
push
cltd
or
js
loopne
add
push
in
dec
push
jbe
cmp
movsb
ljmp
imul
loop
popa
fildl
inc
mov
inc
or
push
jl
or
jnp
lods
inc
xchg
int
jg
pop
mov
js
mov
mov
add
stos
leave
in
cmpl
jb
testb
inc
leave
loop
xor
xchg
lcall
sbb
dec
add
xor
push
dec
enter
iret
dec
aas
inc
lret
ret
pop
lret
jmp
es
ret
hlt
xor
push
and
sbb
adcl
cli
xorl
xchg
scas
adc
daa
mov
fimull
int
cmp
inc
mov
sbb
mov
dec
sub
or
xlat
mov
pop
iret
push
pop
mov
in
andl
rolb
icebp
stos
sti
les
pop
jno
shlb
xchg
cmc
xlat
mov
insb
jmp
mov
xor
rcrb
sarb
inc
pop
vmovntps
pop
mov
insb
ds
jae
scas
add
xchg
mov
jecxz
push
adc
shrl
pop
ficoml
mov
lret
adc
pop
inc
pop
xchg
sbb
and
cmc
insb
push
orb
or
ds
adc
add
lahf
and
push
fbld
pop
jae
adc
pop
test
adc
test
scas
loop
rclb
cltd
test
pop
lret
stc
mov
xchg
aaa
lcall
stos
jp
cltd
jbe
cmc
sub
mov
xchg
loope
movaps
inc
and
push
push
push
rol
adc
ficoms
lahf
mov
push
sar
stos
cmp
mov
jnp
mov
adc
sub
rolb
push
rolb
lcall
je
cmp
adc
push
jl
nop
fmull
jbe
std
inc
jl
sub
xchg
mov
sub
push
pop
in
or
or
add
cmpsl
fnstenv
cltd
dec
jecxz
sbb
and
std
cmp
movsl
out
pop
mulb
push
sub
mov
inc
loop
fcmove
inc
jecxz
cmp
pop
sarb
push
mov
jo
es
lods
add
jb
add
jg
rol
insb
or
xchg
and
popf
imul
and
movsb
loope
shll
or
test
inc
call
push
sbb
lods
aaa
mov
or
out
insb
idivb
add
lock
rcrb
mov
or
pop
scas
ror
int
pop
xor
push
repz
sub
rcr
cmp
shl
mov
out
or
mov
add
jge
push
jge
xor
push
or
dec
inc
insl
in
cltd
sahf
out
pop
pop
dec
sbb
lods
bnd
pop
lcall
out
aam
jb
push
call
inc
insb
dec
test
mov
js
xchg
jb
push
cmp
adc
es
inc
test
jns
cs
int
lock
jo
or
or
cwtl
cmc
arpl
pop
mov
jmp
cmpb
ja
pop
insb
ljmp
inc
sub
fisubrs
aad
ja
aam
push
mov
pop
sbb
addr16
push
sub
jle
mov
inc
adc
jo
sbbb
mov
fdivs
mov
popa
push
outsl
ror
jecxz
and
xlat
out
jg
into
in
dec
jb
mov
out
inc
add
mov
pop
adc
pop
int3
jecxz
mov
mov
enter
pop
sub
xchg
into
lret
xor
xchg
fisubrl
jmp
nop
mov
dec
pop
nop
iret
push
scas
dec
lods
mov
cmp
mov
pop
sarb
cmpsb
lods
ljmp
mov
pushf
push
ds
xchg
mov
gs
cli
jns
and
and
mov
xchg
adc
sbb
scas
inc
jge
adc
imul
mov
dec
pop
add
insl
adc
cli
push
es
lods
loopne
pop
fdivrl
jg
pop
data16
or
jmp
divb
shrl
cs
fldt
cs
andb
std
std
sar
das
dec
xlat
sbb
out
inc
shl
fcomps
pop
inc
shr
stos
dec
pop
test
sbb
push
sub
mov
push
mov
fistpl
daa
cmp
lahf
xor
stc
fsubrl
cltd
cmpb
inc
mov
rorb
xchg
scas
rclb
int3
push
notl
mov
xlat
mov
push
jns
xchg
int3
rolb
orl
lret
mov
clc
mov
mov
mov
add
mov
xor
or
dec
cmp
insl
adc
jbe
std
xchg
mov
ljmp
ss
lds
pop
xchg
mov
push
lea
and
negb
negb
mov
cmp
mov
pop
fcmovnu
xchg
push
pop
icebp
sbb
cmc
out
mov
cld
push
lds
cld
sbb
lret
nop
pushf
inc
ret
pop
subl
adc
dec
js
pop
mov
mov
jle
mov
ss
push
imul
sahf
push
lea
mov
pop
sub
push
test
jp
xchg
sub
cmp
xchg
xor
pop
jg
xchg
lock
mov
adc
fsts
ja
ds
sub
sub
xor
inc
std
daa
stos
sti
xchg
aam
xor
xlat
jnp
inc
dec
pusha
sub
das
xchg
mov
aaa
sarb
dec
jp
add
insb
or
lahf
imul
ja
stos
nop
rcl
cmp
jne
int
out
mov
cmpsl
les
aas
ret
in
imul
dec
mov
mov
lds
jl
test
sub
loope
cmpl
and
jae
xadd
enter
mov
jp
and
sbb
test
in
push
je
cld
mov
pop
or
outsb
ss
popf
sbb
subb
cmp
bound
or
nop
mov
bound
rcl
lea
pop
push
cmpsb
scas
decl
pop
inc
test
cmpsl
inc
or
fwait
xor
aaa
xor
xor
lahf
mov
cmpsl
ds
call
adc
pop
xchg
adc
inc
mov
sbb
xlat
into
mov
mov
das
sbb
lock
pop
arpl
es
sub
les
inc
mov
sti
mov
pop
addr16
mov
mov
sub
mov
inc
mov
call
jmp
imul
pop
xchg
push
xlat
adc
mov
mov
call
sbb
mov
sbb
aaa
addr16
mov
ret
ljmp
in
add
bound
je
popf
or
in
fsub
xchg
insb
arpl
xchg
fsubr
dec
cmp
arpl
cmp
bound
lds
movsl
ficomps
shll
xor
leave
push
testb
sub
mov
fwait
lahf
or
fs
pop
jle
xchg
adc
fildll
ljmp
sbb
or
cmp
mov
pop
lret
cmp
cmpsl
movsb
icebp
pop
xchg
lea
push
mov
ret
jnp
movsl
test
cli
das
mov
lods
adc
mov
neg
cltd
dec
pop
mov
into
mov
dec
mov
enter
mov
pop
scas
add
ljmp
cmc
pop
push
xchg
mov
shl
test
sbb
cli
adc
mov
cwtl
dec
popa
aaa
mov
test
xchg
decl
sbb
arpl
dec
fstps
sti
and
sub
jecxz
or
dec
mov
out
cmp
mov
jmp
mov
inc
scas
push
and
pop
sarl
jae
arpl
xchg
in
popa
stc
lods
push
pop
mov
dec
push
jno
jo
call
mov
pop
pop
lcallw
mov
rorl
out
push
dec
jl
jo
jae
sarl
mov
lcall
xor
test
mov
push
inc
ljmp
cmpsl
jle
into
nop
mov
orl
jp
adc
dec
loope
xchg
mov
and
shlb
call
mov
dec
add
dec
xor
or
icebp
insl
dec
out
jmp
stc
pop
shl
push
fldt
inc
loop
adc
repnz
stos
and
xchg
inc
in
inc
sbb
cmc
xor
adc
int3
or
sub
mov
fistl
or
and
gs
nop
push
test
add
jo
mov
orb
movsl
cli
fbstp
repnz
sub
sbb
cli
shlb
ret
or
sub
aam
sbb
decl
adc
dec
scas
cmp
mov
adc
ret
rcl
mov
fisubrs
mov
mov
mov
std
sti
sbb
add
ret
adc
push
cmpsb
enter
dec
sub
inc
xchg
xor
adc
push
into
mov
gs
out
xor
insl
cmc
pop
xchg
test
or
inc
pop
shrb
test
cmpsl
bound
mov
sar
xchg
sti
mov
sti
sbb
stos
jle
adc
test
push
xchg
adc
or
mov
mov
and
pop
pop
and
out
loopne
out
movsl
mov
loope
fbld
rcrl
int
fcmovnbe
dec
and
mov
lea
jno
sub
jecxz
add
xchg
sub
add
ja
decl
in
mov
out
sbb
loope
jns
pop
adc
push
dec
std
scas
mov
and
cs
xchg
sbb
divb
aad
fucomi
icebp
push
mov
jecxz
add
ljmp
in
xor
out
sub
and
cmp
fnstcw
sbb
fs
xchg
mov
inc
js
sahf
sbb
enter
movsl
pop
mov
pop
and
stc
in
lahf
or
push
scas
cmc
xor
xor
xor
loop
add
add
lret
adc
xor
pop
in
lea
inc
ss
push
xchg
inc
xlat
pop
cmc
jp
cwtl
jnp
pop
mov
fwait
xor
inc
inc
mov
dec
cs
arpl
sbb
sbb
pop
insb
sub
mov
jp
jmp
rolb
jns
cmpsb
js
add
jnp
xchg
bound
or
popf
jne
or
mov
mov
ljmp
and
push
mov
dec
jmp
hlt
lods
scas
sti
jecxz
jge
mov
stos
jle
xor
test
or
ss
lea
mov
pusha
push
pushf
mov
incl
lock
sbb
inc
loop
push
xchg
imul
cmc
xchg
stos
stos
jnp
loopne
stos
cwtl
mov
adc
inc
clc
inc
jae
inc
mov
mov
in
add
repz
dec
xor
jo
adc
pop
es
enter
aas
out
jae
insb
outsb
xchg
out
fildl
dec
push
pop
leave
xlat
in
call
fnop
pop
ss
movsl
pop
sub
sbb
lds
inc
cmpsb
testl
jo
or
xchg
in
mulps
je
pusha
clc
sti
xchg
sti
push
lcall
cwtl
fdivrp
push
nop
in
and
sbb
mov
lret
sub
aam
fwait
mov
bound
sub
cpuid
cmc
mov
data16
push
add
les
cmp
loope
sbb
jge
loop
js
mov
insb
fcmovnb
push
sti
andb
pop
xchg
push
stos
inc
mov
rol
lods
ljmp
mov
out
and
icebp
lods
or
add
fildll
pushf
out
les
and
cmp
sub
mov
mov
pop
inc
and
sbb
rcl
and
cmp
sahf
and
sub
shll
ja
xchg
test
adc
out
lock
adc
and
lret
and
dec
xchg
sub
repnz
xchg
or
jns
lret
daa
frstor
fidivrl
mov
das
add
xor
push
maxps
les
xchg
adc
cmp
push
push
test
push
in
sbb
loopne
enter
mov
cmpsb
pusha
inc
lods
inc
mov
cmpsl
xchg
fisubl
shlb
sbb
ss
jmp
jb
adc
pop
jge
std
push
gs
in
test
mov
mov
inc
nop
sub
xlat
add
adcb
jbe
sbb
insl
int3
pop
pop
ja
mov
mulb
cmpsb
jb
dec
sub
lahf
or
jo
mov
xor
out
pop
out
cmp
cltd
add
scas
cltd
stos
xchg
mov
movl
mov
es
subb
in
gs
fcomi
adc
and
out
jb
or
or
mov
cmp
mov
shlb
pop
in
jo
insl
scas
jnp
add
pop
xlat
mov
pop
mov
push
mov
imul
pop
pop
dec
mov
imul
pusha
and
scas
loop
mov
je
pop
mov
pop
push
mov
fldenv
xchg
jns
in
out
lea
daa
xor
pop
daa
add
pusha
std
and
insb
push
imul
test
int
sub
stos
mov
fcoms
scas
dec
sbb
pushf
iret
and
mov
push
jbe
fwait
push
pushf
cli
mov
cmp
sbb
fisttps
shlb
xor
cmpsl
pop
xor
popl
or
test
roll
and
push
push
fs
and
inc
push
xorl
pop
bound
lea
mov
ficoml
jg
push
mov
mov
dec
aam
outsb
cltd
cltd
sbb
ds
cmp
ja
adc
jg
lahf
mulb
daa
sbb
dec
pop
clc
cmpsl
pop
or
subl
jo
sub
cmpsl
or
fistpl
push
jae
icebp
mov
inc
lret
mov
roll
popf
cmpsb
dec
mov
lods
ds
mov
dec
lea
lret
aam
cltd
pop
jne
lods
rclb
inc
xor
into
out
mov
cmp
sbb
dec
push
add
and
pop
and
push
loopne
xchg
dec
xchg
int3
pop
push
mov
jno
int
cmp
lods
fldcw
add
pop
lea
loop
pop
sahf
dec
dec
or
adc
call
mov
stos
imul
out
mov
cmp
outsb
sub
insl
jl
pop
xchg
dec
add
aam
icebp
lds
sti
xchg
paddsw
fcomi
out
lods
pop
push
xor
test
gs
pop
js
orb
in
jl
mov
push
fldcw
and
mov
data16
mov
inc
pop
imul
jo
mov
dec
and
in
sbb
dec
mov
sarb
out
repz
push
repnz
insl
leave
dec
repnz
and
jg
cmp
mov
test
xor
push
xchg
and
mov
inc
pop
mov
add
fsub
sbb
call
dec
sub
fs
mov
cmp
fmuls
lock
out
es
int3
sub
inc
mov
inc
test
daa
aad
push
bound
test
rcll
lahf
inc
gs
jnp
rcrl
jno
lea
sub
pop
cli
lods
mov
push
jle
xlat
xor
inc
pop
xor
and
int
or
or
addb
inc
or
jb
test
cmp
push
xchg
inc
cmp
or
pop
xchg
ds
addr16
pop
jae
push
mov
xchg
in
or
jmp
adc
cmpsl
ret
fnsave
out
loopne
sbb
sub
arpl
repz
cmp
mov
jne
lock
xchg
pop
shrb
mov
xor
nop
sti
js
cmp
sub
fiaddl
cs
js
outsb
mov
outsb
mov
mov
mov
xchg
idivb
shrl
in
aam
fcmovnu
lcall
jp
mov
mov
fimull
dec
mov
or
adc
test
lods
pop
movsl
cmp
xchg
leave
mov
xchg
mov
cmc
mov
mov
fildl
inc
ret
or
adc
mov
cmp
pushf
mov
insl
arpl
fs
mov
test
push
cmpb
pop
out
jmp
mov
cld
sbb
xor
jne
pop
rorb
mov
sub
pop
shrb
mov
jo
fcmove
inc
test
nop
sbb
push
sub
subl
movsl
clc
push
movlhps
add
mov
int
push
sbb
imul
or
call
mov
mov
stc
insb
push
jle
jmp
mov
out
loop
cltd
inc
subb
inc
cmp
fadds
mov
les
mov
mov
dec
xchg
imul
fstpt
mov
daa
push
insl
mov
mov
rorl
lods
loope
sahf
jp
inc
cmp
nop
or
das
fistpll
pop
rdmsr
cmp
adc
jmp
iret
mov
sub
adc
fstp
cmc
in
xor
sbb
pop
shll
loope
mov
pop
nop
pop
and
cmp
jmp
pusha
dec
inc
movsb
or
sbb
leave
mov
aas
stos
cmp
adcl
outsl
std
inc
and
int3
ja
mov
cltd
jno
xchg
les
ja
push
out
bound
mov
mov
loope
andl
mov
cwtl
popf
cmc
cmpsl
gs
test
pop
adc
movaps
imul
bound
rcll
xchg
sub
repz
pusha
push
pop
fstpl
push
jecxz
pop
cltd
push
or
inc
imul
imul
cli
sbb
mov
jg
loopne
leave
jae
xchg
sub
or
repz
add
xchg
cs
adc
loopne
mov
cmpsl
cltd
aad
mov
aas
loop
xchg
scas
fwait
icebp
push
sbb
sub
sub
adc
or
bound
sub
lret
fs
pop
jecxz
xchg
lods
icebp
arpl
pop
sahf
xor
adc
popf
push
sti
inc
add
or
xrelease
xchg
dec
shll
dec
mov
loope
jbe
insb
je
aaa
lea
xchg
sub
and
fwait
outsl
lods
xor
in
sub
dec
jno
lock
xchg
cmc
or
cld
jb
jne
dec
lret
pop
inc
push
ja
ljmp
lods
leave
les
add
out
sbb
int
outsb
xor
shrb
mov
fld
sbb
sbb
in
hlt
into
sub
pop
jo
xor
out
roll
xchg
cmpsb
es
push
cs
arpl
push
dec
cmp
mov
js
rorb
adc
loope
clc
xchg
push
mov
outsl
xor
sar
iret
push
mov
mov
mov
int3
popf
movsl
dec
xchg
and
icebp
lods
sbb
add
xchg
pop
test
addr16
loope
icebp
test
pop
dec
mov
xor
dec
leave
add
or
ljmp
or
xor
dec
mov
dec
pusha
sub
mov
fistps
test
fcoml
arpl
lret
mov
scas
cmp
push
inc
stc
pop
popf
adc
std
insl
inc
or
aaa
in
test
out
pop
out
jb
movsb
insb
xchg
adc
sbb
and
outsl
pop
filds
or
fstpl
mov
pop
cld
cmp
inc
orl
pop
jecxz
fidivrl
inc
sbb
fcmovnbe
add
mov
jbe
aaa
fbstp
out
mov
ret
adc
push
pop
in
lds
ja
dec
cmpsl
nop
dec
outsl
loopne
push
in
fcompl
lock
adc
rcrl
adc
ja
xchg
int3
cli
sti
cmp
or
fildll
rorl
pop
adc
scas
push
pop
pop
jno
or
cmp
xchg
in
adc
jg
je
inc
sarb
inc
inc
ret
sahf
dec
mulb
xchg
inc
inc
rcrl
mov
pop
fwait
nop
jmp
test
lcall
fstps
adc
mov
or
jb
push
mov
inc
adcl
adc
sub
mov
nopl
stos
lods
xlat
push
jo
xor
jae
mov
pusha
mov
orb
adc
cld
jg
sub
stos
mov
adc
in
jge
jb
push
dec
imul
jge
or
inc
dec
push
add
mov
ret
dec
mov
iret
sub
push
and
sub
jae
lds
xchg
mov
js
pop
dec
and
sbb
loope
cwtl
jnp
mov
sahf
cmp
mov
in
shrl
or
mov
jmp
test
jge
cmp
lods
movsb
sti
int
lret
pop
repz
dec
out
push
lcall
rcr
push
xor
push
push
xor
gs
fsts
popw
imul
out
mov
push
mov
xchg
dec
sub
in
jl
in
push
add
xor
sbb
xor
add
les
popa
cmp
inc
mov
mov
movsl
mov
sbb
imull
loop
enter
out
sbb
or
fisubs
sub
lret
push
lret
pop
and
cli
rcrl
xchg
rcll
imul
rclb
push
out
ficoms
push
data16
xor
jecxz
ljmp
cmp
in
jne
pop
dec
and
andb
fidivrs
cmp
push
bound
dec
xchg
outsl
das
xchg
repz
stos
xchg
imul
lea
mov
sub
std
loopne
inc
test
xor
mov
lods
push
adc
nop
push
jg
or
add
inc
clc
xchg
in
mov
push
add
out
lea
test
into
and
dec
out
lea
mov
lods
pop
mov
pop
fmull
push
xchg
aad
rol
shll
xor
sub
lret
int
add
jge
mov
int3
mov
cmp
movsb
jno
adc
ret
dec
xchg
pop
xor
xchg
into
aas
call
push
popl
pushf
jb
jmp
xchg
inc
sbbl
xor
jecxz
and
push
sbbb
xchg
xchg
int
mov
jae
rcll
lock
iret
fdivrs
test
lds
repnz
movsl
popf
xchg
jnp
fwait
cmp
mov
and
std
pop
dec
rolb
mov
loopne
sub
jne
decb
test
cmpsb
fwait
orb
out
icebp
imul
mov
lods
in
dec
jmp
cmp
cmp
mov
mov
push
sti
add
push
and
mov
jno
imul
aaa
xor
xchg
in
jae
mov
or
test
enter
outsb
clc
dec
rcrl
xlat
in
dec
lahf
dec
push
lods
daa
ja
pop
push
test
jbe
push
or
add
push
nop
call
sbb
in
test
out
daa
dec
aas
outsl
add
mov
andb
pop
clc
insl
jne
int3
push
mull
sbb
pushf
add
jns
stc
mov
sbb
cmc
cmc
fidivrl
jg
insl
cmp
jbe
enter
mov
adc
fldt
sub
out
push
cmc
push
sbb
mov
aam
int
lods
inc
addr16
scas
pop
or
jnp
outsb
test
movsl
dec
aas
mov
mov
mov
pop
sub
int
xor
arpl
cmp
faddp
data16
and
mov
cld
jne
das
or
das
loope
adc
stc
insb
xchg
dec
in
cmp
mov
push
cmp
xor
loope
adc
clc
andl
pop
stc
dec
xchg
das
or
pop
sbb
cld
pop
or
iret
test
icebp
bound
sarb
sti
pop
stos
stos
adcb
aam
sbb
ret
mov
jp
mov
sub
jp
jbe
add
mov
xor
mov
inc
xor
int
jp
out
loopne
stc
pop
pop
jl
dec
inc
stos
lods
or
xor
inc
or
outsb
insl
mov
and
push
sahf
iret
ss
xchg
and
mov
movsb
sub
lds
sbb
loop
cmp
es
jecxz
imul
out
popa
dec
loop
cs
dec
or
lods
inc
push
out
popf
std
clc
cmp
test
out
outsl
fsubs
aam
push
pop
xchg
mov
cmc
dec
jns
repnz
push
adc
adc
mov
out
mov
mov
filds
sub
jmp
pop
lcall
sti
pop
cmpsb
pop
dec
mov
aad
cmp
push
add
xor
fldcw
pusha
outsb
nop
dec
dec
fcmovb
in
jns
xor
pop
pop
sbb
lods
gs
xorb
inc
mov
test
dec
sub
add
out
popf
dec
add
dec
leave
sbb
fisubl
fwait
inc
add
arpl
sub
add
aaa
mov
imul
mov
adc
sub
dec
std
mov
sub
mov
jmp
xorb
mov
out
fnstcw
aam
pop
inc
mov
addr16
sub
loop
vmovaps
jae
lahf
mov
adcb
push
jle
outsb
mov
push
test
sbb
or
aas
jbe
insl
mov
fldenv
insb
mov
add
roll
inc
mov
int3
xlat
mov
sub
or
adc
mov
and
adc
xor
xor
iret
mov
jb
cmp
jae
lds
xchg
arpl
pushf
leave
in
bound
xchg
push
rcr
outsb
pop
and
pop
cli
shrb
add
lock
xchg
xchg
xchg
push
ror
sahf
sub
shll
lahf
fcompl
push
fidivs
shlb
test
mov
enter
test
add
je
mov
or
testl
gs
jp
jg
ret
jp
cld
test
xor
sbb
insb
adc
and
add
and
cmp
add
mov
ror
pop
mov
and
loopne
data16
int
mov
int
rep
push
pop
sub
jo
adc
ja
mov
jo,pn
fistpll
cmp
xlat
mov
int3
addl
ret
sti
sub
shl
or
imul
flds
fsubp
jbe
mov
xor
mov
scas
repz
into
lods
sub
xor
cmp
jge
ret
mov
cmp
adc
cmp
fucomip
cmp
jp
imul
mov
sub
rol
aad
add
loopne
ret
inc
mov
sbb
sub
add
push
shl
data16
mov
std
dec
xor
cmp
shll
adc
rorb
pop
fildl
repnz
std
add
add
outsl
mov
sub
fwait
std
pop
pop
lcall
lods
insb
mov
mov
test
jo
in
adc
cmp
imul
lods
jo
out
repz
push
jns
cmp
aam
leave
imul
ucomiss
imull
add
jbe
repnz
or
cmpsb
pop
mov
out
push
ja
in
fcoml
aas
pop
aad
mov
in
and
ret
jns
add
pop
inc
aad
cwtl
or
enter
shr
xchg
and
shrb
in
adc
mov
fadds
divl
mov
push
data16
pop
fwait
push
pop
mov
pop
push
push
push
fcomps
leave
push
xor
fisttpll
inc
xor
lods
test
mov
out
ja
lods
mov
cmc
jecxz
lahf
sub
mov
fldcw
insl
adc
push
dec
dec
pop
inc
aam
hlt
js
mov
dec
lret
mov
xchg
loopne
xchg
mov
sbb
fmul
popf
jle
mov
mov
icebp
dec
xor
jl
gs
sbb
cmp
xchg
in
mov
mov
adc
cwtl
mov
or
jmp
movsb
jno
xor
sub
adc
insb
scas
dec
mov
push
mov
mov
mov
jmp
out
sbb
pop
call
pop
loopne
push
in
outsb
mov
mov
adc
gs
jns
stc
sti
dec
xchg
add
lock
and
xor
adc
mov
dec
pop
ret
jl
xchg
xchg
int3
pushf
fnstenv
sub
lea
push
jecxz
xchg
sbb
inc
stos
out
xchg
in
test
leave
pop
push
cltd
add
insb
aas
adc
scas
cmp
add
aad
mov
cmpsb
ds
mov
push
xor
xor
jge
scas
cmp
sbb
lcall
popa
mov
and
popa
inc
and
fistpl
mov
xor
jmp
cmc
jb
inc
pop
inc
dec
inc
lcall
mov
inc
inc
or
xor
aas
int3
bound
xor
adc
xor
imul
xor
popa
jge
add
add
test
mov
fsts
fisttpl
add
in
pop
adcl
test
or
jo
in
jge
lret
scas
test
dec
pop
lret
in
int3
push
popa
shrl
mov
imul
shrl
arpl
and
add
test
fstpt
das
clc
int3
lods
inc
push
inc
loope
in
xor
and
fidivrs
icebp
jno
repnz
scas
pop
xchg
sub
push
push
jmp
pop
or
scas
mov
adc
test
push
fists
push
pop
leave
inc
xchg
xor
stos
xchg
pop
or
aaa
cltd
cmpsl
jle
stc
fwait
xor
incb
xor
push
lds
xor
xor
sbbl
std
pop
dec
daa
icebp
push
jne
add
cmp
push
add
cli
cmp
rorb
dec
cli
dec
es
mov
dec
mov
adc
std
loope
pushf
pop
test
mov
jmp
int3
stos
or
jge
and
outsl
outsb
and
out
lods
push
sbb
cmc
jb
dec
fcom
push
adc
adc
out
jmp
inc
mov
icebp
push
push
stos
inc
shrb
and
xor
decb
ret
push
stos
outsl
aas
pop
dec
int
lcall
jmp
mov
fisubrs
xchg
outsb
scas
dec
stos
jp
mov
into
mov
mov
pop
repz
imul
mov
inc
adc
sub
loope
mov
push
insl
out
dec
dec
xchg
mov
or
dec
jg
je
call
xchg
arpl
outsb
es
movl
push
xor
ds
fcomps
jns
mov
adc
movsl
outsb
pop
add
add
sub
mov
icebp
loop
mov
out
and
lahf
dec
xchg
jbe
fs
out
pusha
xor
add
mov
push
jno
movsl
movsb
xchg
jmp
xor
adc
add
imul
mov
sbb
fiaddl
popf
fstpl
lods
inc
cmp
jl
stc
and
mov
popl
push
dec
out
ret
mov
outsl
push
dec
mov
adc
gs
aaa
pop
mov
orb
mov
add
movsl
mov
jge
int
mov
cli
insb
test
push
roll
push
fadd
leave
ss
pop
mov
mov
mov
jg
call
xor
mov
ss
loopne
pop
rol
pop
test
push
imul
hlt
xchg
cmp
daa
sbbl
ljmp
lods
inc
outsb
ljmp
sti
lcall
stos
inc
insl
shrl
push
xchg
jecxz
push
and
jmp
xchg
mov
pusha
push
gs
call
mov
lea
fcoml
pusha
test
hlt
cmp
inc
aas
in
cmp
out
cmpsl
mov
sbb
or
mov
dec
push
add
and
push
pop
push
arpl
adc
cmp
lods
gs
sub
adc
repnz
test
icebp
mov
jl
or
jp
pop
mov
sub
arpl
in
or
shll
fnstcw
dec
arpl
mov
scas
jmp
je
push
dec
shrb
xlat
inc
negl
mov
int
push
and
test
xlat
stos
stos
into
pusha
movb
mov
dec
in
cmp
cmp
jns
cmp
sub
call
xchg
and
scas
and
je
imul
popf
mov
sub
imul
sbb
out
jne
push
xor
mov
adc
cmp
stc
inc
push
dec
or
out
mov
cmp
cmp
addr16
rcrl
push
outsl
or
and
mov
addr16
mov
push
cmp
out
shl
lds
out
fidivrs
cmpsl
sub
jg
imul
adcb
loop
pusha
mov
mov
movsl
jecxz
cmp
adc
inc
xchg
push
or
outsl
jno
stc
xor
xor
test
xor
xchg
pop
adc
cmp
mov
cmp
enter
sbb
repz
fadd
in
xchg
ret
xchg
dec
mov
nop
xchg
imul
outsb
jo
ret
sarl
testb
pop
sbb
jo
js
mov
sbb
movsl
pusha
xor
ja
iret
pushl
xchg
cmp
popf
add
roll
pop
mov
inc
fcomps
sub
hlt
adc
mov
cmpb
fwait
into
mulb
gs
jns
jle
flds
adc
lcall
js
mov
mov
xchg
outsl
xchg
repz
xchg
sti
popf
div
out
mov
dec
or
incb
xor
xor
ffreep
cli
cmp
mov
add
mov
aaa
mov
cmpsb
imul
mov
jb
out
lret
inc
fcmovnu
xchg
and
mov
push
mov
popa
push
pop
pop
enter
or
jns
lcall
add
pop
les
mov
in
jl
pop
popa
mov
mov
adcb
fdivrs
enter
dec
jnp
mov
lods
or
jg
test
and
sahf
or
int3
arpl
inc
add
mov
push
repnz
loop
aas
test
frstor
insb
ret
fnstcw
adc
jo,pn
sar
jg
dec
test
das
mov
inc
popf
stos
je
pop
cmpsl
sbb
imul
pop
push
shrl
pop
ljmp
pop
inc
aas
sbb
sbb
stos
add
push
or
push
aad
movsl
jns
dec
cmpsb
es
push
mov
fs
cld
loopne
rol
dec
je
jge
in
push
jbe
pop
test
xchg
fdivrs
xlat
mov
cmc
pushl
pop
rdpmc
pushf
nop
xor
ror
mov
andl
in
or
inc
cltd
jbe
fdivs
mov
fnstcw
in
lock
cwtl
jo
dec
ret
repz
test
mov
sub
cmp
pop
ficompl
fnstcw
fidivs
adc
mov
ja
cltd
jmp
movsb
inc
cmp
clc
or
ljmp
addr16
jle
push
js
mov
jns
xchg
jmp
mov
cmp
pop
insb
add
in
jge
stc
shll
mov
cwtl
xlat
jge
pop
mov
mov
data16
mov
test
dec
xor
push
inc
stos
mov
rcr
jns
lea
push
movsl
ds
js
cli
mov
pop
ret
sti
mov
insb
lahf
aas
cli
mov
std
mov
and
sbb
ffreep
dec
sub
adc
inc
mov
out
mov
popf
insb
fwait
in
jp
mov
std
insb
idivb
xchg
fldt
mov
xchg
fsubrs
stos
lods
fists
sub
leave
add
inc
mov
in
and
push
pop
std
jns
xor
ret
lret
fimull
andl
int3
jmp
dec
stc
ss
sbb
cmpsb
push
mov
jmp
mov
hlt
out
jl
dec
call
mov
cli
add
xchg
mov
inc
or
aas
sarl
adc
stc
mov
and
insl
sub
mov
mov
arpl
adc
enter
cmp
mov
push
ss
add
lret
imul
loopne
or
and
test
jge
jno
or
xlat
and
clc
mov
lock
lahf
xchg
jbe
adc
xchg
mov
pop
out
fs
les
sbb
pop
xor
xchg
aaa
imul
pop
mull
xlat
out
push
jecxz
xchg
lock
test
mov
fs
jne
in
push
jge
mov
sti
or
mov
repz
aam
ljmp
xor
dec
aad
mov
fs
insl
mov
clc
add
jp
gs
lods
xchg
fstl
or
sub
mov
pop
pop
lret
mov
ret
jae
mov
inc
ret
insb
push
ds
lret
je
xchg
sbb
sbb
mov
test
mov
jno
or
add
push
or
in
out
and
loope
shl
fwait
lea
gs
in
sub
push
mov
mov
rcrl
hlt
lret
mov
insb
fsubr
and
xor
dec
dec
adc
sbb
mov
adc
scas
out
mov
jo
jmp
in
pop
cli
icebp
pop
push
pop
aaa
jno
aas
les
sahf
dec
xchg
mov
or
adc
sbb
arpl
roll
cltd
cld
fmull
or
imulb
popf
adc
ds
icebp
fidivs
ja
stos
aaa
jbe
call
xchg
sub
mov
mov
adc
jb
insb
ror
sbb
push
push
scas
imull
sub
les
rcr
daa
pop
mov
lret
negb
push
sbb
jp
icebp
andb
push
testl
mov
and
dec
pop
popa
sub
dec
mov
pushf
mov
dec
pusha
xor
inc
outsl
aam
and
lds
lret
scas
inc
pop
pop
xorl
and
notb
mov
ret
mov
fsubs
lea
loopne
jb
aam
sbb
cwtl
fiaddl
inc
xor
iret
gs
xchg
xchg
inc
and
and
out
scas
mov
or
popf
inc
inc
int3
xor
cltd
call
mov
adc
mov
pushf
cmp
jg
outsb
mov
lea
cmpsb
add
cwtl
sarl
sbb
cmp
test
ljmp
inc
stos
cmp
sbb
adc
mov
shrb
add
xchg
jne
mov
pop
push
loope
or
mov
cwtl
mov
jnp
sbb
repz
inc
and
push
lods
xchg
inc
ds
leave
repnz
cwtl
lea
xor
outsl
push
mov
icebp
repnz
test
fiaddl
sub
sarl
jb
lds
mov
sbb
mov
xor
mov
add
js
mov
cmpsb
shl
mov
lret
jle
ret
adcl
cmp
mov
je
fidivrs
addl
leave
ss
inc
pop
xchg
arpl
aam
adc
pop
cmp
and
cmp
loope
rol
outsl
enter
dec
dec
insb
into
sbb
or
push
push
and
push
outsl
daa
add
cld
adc
lods
jo
inc
and
lods
inc
push
pop
inc
mov
imul
outsl
pop
cmp
test
int
filds
imul
mov
fwait
sahf
lret
stos
ds
sar
jmp
scas
test
test
test
and
sub
pop
push
aaa
dec
mov
xor
aad
lea
push
inc
jp
mov
cwtl
mov
imul
loop
push
mov
xor
add
dec
mov
xor
ficomps
fstpl
ljmp
cmp
pop
mov
inc
neg
lret
outsl
movsl
xchg
dec
push
jl
lcall
mov
roll
stos
in
sahf
movsb
iret
dec
pop
fisubs
mov
cmp
mov
out
aam
ficompl
push
jmp
jmp
ljmp
jl
mov
add
test
xchg
stos
mov
or
je
sti
xchg
sbb
testb
mov
or
pop
and
sbb
orl
jge
cmp
dec
xchg
add
push
xchg
xlat
mov
pop
xor
and
and
dec
cmp
pop
jg
or
cmp
mov
xchg
negb
mov
imul
scas
decl
out
and
loope
cmp
hlt
jns
or
mov
and
sbb
repnz
adcb
adc
add
cld
or
mov
jp
push
push
mov
xchg
xor
mov
inc
stc
inc
lock
rclw
push
push
mov
pop
push
mov
in
or
adc
loopne
xchg
bound
jp
fst
and
fists
mov
fdivrl
lea
xlat
inc
xor
dec
js
addr16
cs
test
mulb
cltd
mov
adc
mov
xchg
std
cmc
cmp
test
sub
and
cmp
mov
sub
test
je
sub
lea
mov
pop
cmp
push
fsts
sbb
jbe
je
sbb
cmpsb
mov
clc
add
mov
pop
out
add
sahf
jp
fwait
sbb
or
inc
and
mov
les
repnz
adc
cs
cmp
ss
idivb
ss
repz
pop
xchg
popf
sti
clc
ljmp
pop
fidivrs
pop
jp
pop
mov
cld
insb
xor
inc
mov
mov
sbb
or
jb
push
imul
sbb
adc
jno
sbb
ljmp
mov
stos
pop
push
cmp
sbb
leave
ror
sub
loope
clc
fnsave
pop
cmp
loope
xor
call
dec
stos
stos
bound
xchg
xor
jo
nop
jnp
loope
mov
call
rcll
adc
adc
scas
loope
das
cltd
dec
jl
mov
std
xchg
js
mov
mov
inc
pop
lret
in
out
mov
cmp
xchg
mov
repz
int3
mov
loop
inc
add
push
jp
lock
mov
fwait
sti
ds
adc
std
sub
pop
inc
pop
adc
icebp
incl
nop
int
imul
push
xchg
xchg
cmp
cwtl
lods
pop
jecxz
shr
ljmp
sbb
aas
cs
inc
ljmp
fcmovnbe
pop
mov
or
cmp
out
cmp
scas
jb
mov
movsb
andb
ss
out
cmpsb
xchg
js
dec
adc
pop
or
add
dec
aam
xchg
filds
dec
cmp
scas
xor
mov
push
jp
add
arpl
cltd
hlt
sub
mov
xchg
adc
lahf
aad
dec
dec
in
jnp
fstpl
subl
enter
or
das
and
adc
arpl
add
inc
fistps
leave
xchg
xor
xor
sbb
cmpsb
imul
es
mov
sub
jb
pop
inc
dec
jl
es
xchg
mov
lds
loope
push
and
lods
pusha
mov
mov
adc
aaa
ret
pop
xchg
mov
mov
xchg
loopne
jae
dec
sti
xchg
jno
stc
rcl
xor
out
testl
enter
es
mov
and
adc
lock
push
in
out
popf
mov
mov
fiaddl
test
jl
lcall
jne
mov
inc
movsb
cs
xchg
rclb
mov
aas
fdivl
popf
outsb
jne
popa
mov
sub
fimull
dec
test
sti
xchg
data16
sti
and
arpl
std
lret
mov
mov
xchg
sbb
shl
push
gs
jnp
pop
imull
cmpsb
inc
popl
sahf
rcll
push
jae
and
xchg
popf
jo
jecxz
mov
sbb
not
cli
pop
cmp
mov
pop
outsl
lcall
ss
lds
inc
mov
mov
mov
mov
stos
lea
icebp
xchg
int
adc
add
repz
scas
or
jnp
mov
xchg
lds
test
mov
into
leave
jge
rclb
xlat
outsb
rcl
cmp
xorl
popf
jle
pop
fistpll
adc
gs
sbb
mov
lret
inc
xor
leave
dec
dec
add
scas
cmp
fincstp
and
lea
stos
push
jle
xchg
cs
aas
mov
insl
fisttps
pop
xchg
jno
sbb
stc
sbbb
test
repz
sbb
arpl
mov
xchg
lods
dec
enter
scas
gs
push
test
adc
outsb
inc
gs
or
mov
dec
insb
test
cmp
jp
xor
outsb
sbb
ret
jno
pop
sti
mov
xor
sbb
inc
out
fidivs
scas
mov
mov
xchg
das
push
push
pop
mov
add
aad
xchg
dec
push
xor
les
adc
cld
call
out
ja
push
adc
add
into
aam
jmp
push
lahf
jo
decl
add
pop
das
jb
mov
mov
sbb
push
jmp
dec
add
jp
push
int3
pop
cmp
sub
push
mov
sarb
mov
js
add
std
pop
lret
mov
lahf
dec
inc
and
test
fiadds
push
lock
mov
in
cmp
inc
aad
stos
mov
pop
lods
pop
lea
call
mov
loop
mov
test
lea
jle
ljmp
cmpsb
fimull
sub
popa
fwait
sub
mov
sub
sbb
jge
pusha
cmp
mov
adc
in
xor
shll
andb
les
nop
pusha
mov
lret
mov
inc
popf
xchg
das
stos
pop
into
nop
es
xchg
outsl
sub
shll
mov
aad
pop
dec
mov
mov
pop
shl
fisubl
mov
hlt
xor
in
jb
or
daa
dec
xor
push
bnd
cmp
inc
fprem1
and
fdivrl
shll
sbb
adc
cmpsb
sbb
mov
push
das
nop
pushf
loop
and
pop
mov
call
mov
pusha
into
mov
dec
outsb
sar
mov
adc
mov
mov
adc
sbb
and
jae
daa
mov
dec
and
andl
mov
sahf
ror
nop
jp
jno
loop
or
das
jle
jg
fsubrs
sub
orb
add
jae
ja
repz
inc
movsl
xor
cs
push
out
and
fwait
cltd
xchg
cmp
sub
inc
rol
sbb
cmp
shlb
pusha
or
mov
and
in
jnp
mov
inc
push
aas
xor
daa
or
movsb
add
cmpb
mov
mov
jo
stos
repnz
pop
adc
arpl
sbb
jb
mov
test
ja
fsts
cwtl
sub
scas
cmp
sbb
and
mov
mov
xor
xchg
mulb
inc
test
xor
pop
mov
cmp
jg
movsl
out
pop
add
and
lcall
add
and
pop
sub
cli
js
adc
cmpsb
dec
ret
and
daa
push
jmp
add
adc
or
incb
pusha
jae
add
movsb
sub
inc
mov
stos
mov
xchg
aaa
je
pop
ret
testl
and
out
lahf
jne
movsb
lcall
dec
dec
mov
sbb
xor
mov
jb
sbb
stos
and
jmp
cltd
sbb
out
in
cwtl
and
add
mov
jo
lea
lods
clc
jmp
lea
dec
nop
movl
in
lret
dec
xor
mov
stc
or
cmp
int
cltd
ljmp
mov
adc
ds
or
mov
mov
loopne
xor
out
mov
push
xchg
pushf
dec
iret
pusha
fdiv
xchg
rolb
xor
mov
ds
ljmp
cmp
push
or
arpl
push
int3
and
in
out
fisttpl
mov
mov
adc
aam
add
xor
cmp
stos
call
jno
mov
hlt
pushl
pop
in
or
cmpsb
inc
pop
jmp
rolb
rcll
xchg
push
mov
mov
out
sbb
push
test
mov
push
inc
xchg
imul
dec
jae
mov
cwtl
adc
pop
pop
stos
sti
andl
cmp
pop
cmp
sub
imul
sub
cwtl
stc
mov
sbb
inc
shlb
cmp
mov
ss
cwtl
mov
stos
pop
inc
mov
jmp
jns
cmpsb
mov
mov
push
ror
add
dec
mov
pop
insb
sbb
clc
mov
dec
adc
fucomip
lcall
jnp
jg
mov
lahf
fdivl
lock
pop
int
lock
js
dec
push
out
sbb
jmp
cmp
push
fsubl
test
xchg
add
imul
ret
pop
push
fists
pushl
sti
outsb
sub
sub
out
pushf
fimuls
push
xchg
mov
fcomp
jmp
popf
mov
test
in
mov
andl
ja
sbb
mov
jecxz
jbe
shl
adc
xchg
push
sub
cli
xor
rorb
mov
push
movsl
gs
xlat
shlb
xchg
pop
std
stc
das
xor
dec
or
pop
aam
jo
pop
sbb
mov
sahf
shrl
cmpl
fbstp
mov
mov
je
xor
lock
das
inc
or
cltd
in
icebp
mov
add
xchg
push
test
rcr
jb
xlat
je
lea
push
les
repnz
mov
fdivrl
repnz
rep
fists
xor
test
and
stc
xchg
adc
aad
dec
ljmp
xor
insl
xorl
jmp
notb
xchg
icebp
fstpl
xor
out
sbb
ret
stc
push
call
js
insl
lock
sub
mov
and
in
pop
and
jecxz
mov
xor
sbb
xchg
lret
inc
xchg
out
xor
js
orb
clc
loopne
cli
adc
and
push
add
cmpsb
sub
daa
in
out
sbb
and
repnz
jecxz
mov
add
lock
jnp
mov
sysexit
and
inc
or
xchg
or
fsubp
dec
jne
mov
in
popf
and
ret
inc
js
xchg
lods
xchg
ljmp
dec
adc
and
stos
dec
mov
std
jp
mov
mov
lods
sbb
mov
stos
xchg
mov
mov
sbb
in
pushf
xchg
out
push
jecxz
pop
insb
dec
les
repnz
add
roll
out
xor
dec
push
stos
mov
or
je
fmull
hlt
cli
dec
xor
out
jecxz
xorl
xchg
loopne
mov
fimuls
jg
ljmp
in
mov
pop
sahf
insl
test
xchg
inc
push
fidivs
sbb
mov
add
xchg
or
add
dec
cmp
push
dec
mov
xor
in
or
sbbb
cli
pop
mov
cld
push
cmpb
dec
ds
adc
push
sub
or
jno
fwait
pop
imul
inc
mov
negl
dec
push
adc
xchg
cmc
test
xchg
cmp
lock
pop
sahf
xor
jb
xor
pop
lock
movsl
dec
sbb
or
or
inc
cmpsb
mov
gs
pushf
xchg
jle
add
stos
aaa
sub
aas
sub
and
add
adc
in
jecxz
xor
and
pop
xchg
hlt
fnstsw
add
cmp
push
repnz
int3
cli
fiaddl
xor
stos
ret
jl
cmpsl
test
cli
mov
inc
or
pop
cmpsl
pop
xlat
test
mov
popa
sub
incb
idivl
xchg
and
cmp
push
and
cmpsl
adc
mov
movsb
jecxz
cltd
inc
stos
shll
inc
pop
lret
clc
xor
xlat
sahf
jl
lods
scas
das
insb
lods
sbb
cld
dec
fptan
sbb
hlt
add
jo
mov
aas
repz
iret
xchg
fcompl
loop
mov
aaa
adc
mov
out
mov
mov
in
cmp
inc
or
enter
xchg
cmp
stos
insb
in
gs
pop
cs
xchg
mov
js
popa
inc
xor
addr16
pop
xchg
js
jmp
pop
mov
bound
sbb
or
pop
fwait
or
loope
inc
hlt
shrl
lahf
ret
sub
inc
mov
pop
fiadds
js
dec
loope
xchg
inc
fnstcw
ret
add
daa
xchg
test
xor
lret
mov
pop
cmp
sub
daa
cmp
jg
xchg
mov
imul
repz
mov
loope
gs
pusha
je
xchg
mov
lret
push
push
xor
add
sub
fsubl
push
or
mov
xchg
insl
jecxz
cmp
repz
data16
jge
dec
sbbb
cltd
xchg
jle
gs
into
lods
cltd
xor
sbb
xchg
sub
and
movsb
sub
and
mov
push
pop
fiaddl
leave
or
insb
dec
adc
nop
jo
sub
xchg
xor
pop
xor
lods
dec
pop
sbbl
iret
xor
cmp
sub
in
enter
add
lds
xchg
cmp
lea
ret
ljmp
inc
xchg
jo
add
adc
stc
das
dec
adcb
repnz
jg
mov
push
pop
add
jbe
dec
fs
ljmp
popa
cmp
add
test
addr16
andb
lods
gs
popf
dec
xor
adc
call
xor
pop
negl
int
xchg
scas
cltd
push
pop
xchg
push
sub
aas
decl
inc
out
loopne
dec
jg
or
movsb
jae
inc
push
mov
js
lods
xchg
or
fcomps
jne
xor
adc
insb
mov
gs
call
cmpsl
push
cmp
mov
pop
daa
pop
cmp
push
loope
js
dec
or
cmp
icebp
lea
pop
mov
pushf
push
jmp
mov
mov
pushf
push
or
xchg
mov
scas
scas
stos
push
inc
sbb
mov
cmc
mov
and
out
cwtl
push
movsl
mov
cmp
jl
ret
push
nop
mov
xchg
je
es
dec
loope
pop
push
sti
sub
pop
gs
sbb
cs
ljmp
mov
cmp
mov
xor
imul
lret
bound
inc
mov
out
test
ja
cmp
scas
enter
icebp
stos
imul
mov
add
push
aaa
out
je
push
mov
cmp
loop
mov
outsb
mov
cmp
outsl
mov
sbbb
call
inc
repnz
addr16
shll
mov
div
mov
enter
inc
imul
push
pusha
arpl
mov
inc
shl
dec
jmp
dec
loop
int3
fiaddl
pop
add
gs
xchg
data16
loop
js
hlt
mov
xor
mov
or
scas
scas
xchg
je
mov
ja
inc
ret
in
stos
fdiv
cmpl
insb
xchg
sahf
je
and
out
mov
mov
add
xchg
cmp
cs
repz
inc
clc
addr16
bound
xchg
xlat
pop
std
ss
push
add
sti
testl
mov
cwtl
aaa
or
mov
dec
imul
mov
sbb
xchg
xor
sub
es
sub
imul
pop
shll
sub
mov
inc
mov
cmp
lods
sbb
push
push
xor
cmp
sbb
push
mov
popf
imul
mov
data16
ja
gs
aas
iret
push
lret
in
sub
mov
icebp
jbe
shll
cmp
pop
stos
rcll
xchg
push
xchg
aam
hlt
pop
cli
or
jno
mov
cmpsl
push
jl
out
fidivl
addr16
mov
or
divb
or
inc
ljmp
cmp
ds
mov
aas
push
push
lea
imul
outsb
mov
pop
subb
push
xchg
mov
and
int3
push
in
pop
cmp
ja
dec
ficoms
pop
inc
lahf
frstor
out
push
sub
shl
xlat
mov
sbb
xchg
in
mov
mov
and
pmullw
push
cld
lret
pop
pop
cmp
insl
push
fnsave
lea
aad
mov
ds
jge
data16
aad
jae
sub
sbb
pushf
push
adc
xchg
pop
insb
mov
pop
pop
pushw
shrb
mov
or
push
inc
xchg
jo
in
jnp
sbb
mov
inc
adc
add
jno
fisubl
or
jl
xor
cld
inc
gs
mov
int3
sub
jb
aaa
daa
pushf
jno
add
int3
sti
paddusw
lock
inc
ret
pop
lods
push
adc
lods
fisubs
push
loopne
mov
repz
cmp
push
cltd
out
pop
mov
jne
jnp
sub
inc
dec
push
xchg
es
xchg
or
das
jl
jg,pt
adc
scas
lods
sbb
adc
jns
mov
rcrl
xor
push
jecxz
inc
call
cmpsb
aas
jecxz
add
and
rolb
jne
pop
adc
cmpsl
or
in
fsts
fmuls
and
push
lcall
std
movsl
les
es
jnp
dec
sarl
test
sub
add
decl
je
mov
cmpsb
arpl
fidivrs
sub
mov
adc
out
xchg
rol
xchg
push
xor
and
repz
dec
fstpt
xchg
mov
jle
cld
movsb
sub
cli
jb
and
pop
cmpsl
cltd
popa
xor
add
mov
insb
les
lret
jno
jg
sub
test
add
push
or
iret
pop
lods
jge
imul
sbb
ret
cmp
push
outsl
sti
pop
lret
ret
jge
rclb
fnsave
dec
xchg
xor
dec
mov
lret
cmp
dec
adc
outsl
fwait
mov
mov
xor
gs
push
add
lods
add
or
mov
cltd
jle
lds
in
sbb
in
out
cmp
adc
movsb
aaa
push
dec
lret
mov
repz
push
pop
lock
dec
jmp
pop
fbld
les
movsb
mov
shl
sbb
test
jno
and
addr16
in
ffree
cmc
mov
aad
dec
lea
mov
and
and
or
insb
fsubrl
and
sub
lds
roll
inc
jle
sbb
xchg
dec
mov
fnstsw
mov
stc
adc
xchg
imul
imul
lock
test
mov
mov
sub
sti
push
call
loopne
add
mov
pop
lret
jb
mov
mov
je
inc
mov
test
cwtl
aaa
cmpsl
test
pop
or
cmp
ret
xorl
bound
pop
add
mov
jbe
faddl
or
inc
test
into
cmp
mov
sysenter
daa
clc
pop
cmc
or
xchg
inc
daa
scas
adc
shll
cmp
movsb
jns
inc
mov
ret
lret
call
push
push
fists
movsb
inc
outsl
ds
push
int3
out
out
adc
std
xor
stos
mov
negb
and
ds
test
or
lods
xor
cli
filds
and
pop
pop
pop
scas
xchg
add
das
dec
cli
pop
sarb
ja
pop
sarb
jne
mov
lret
cld
dec
scas
jno
call
xor
dec
dec
inc
xchg
inc
mov
out
push
mov
sahf
cmpsb
arpl
cmc
xchg
jmp
inc
insb
hlt
add
cmp
das
add
xlat
testl
add
daa
jb
arpl
ljmp
ret
xor
cmpsl
cld
loop
enter
push
sti
mov
sti
aas
mov
in
adc
xchg
outsb
mov
pop
jmp
or
cmp
repz
mov
jnp
or
xchg
xor
cltd
inc
xchg
sub
fmuls
cmp
nop
sbb
data16
aas
dec
push
push
imul
mov
and
mov
jle
push
in
adc
mov
fdivs
out
test
pop
mov
add
mov
mov
cmp
dec
out
mov
cli
xchg
mov
arpl
pop
dec
jge
xchg
sbb
scas
insb
add
pop
sub
sahf
sarb
stc
cmc
inc
aas
mov
cmp
sub
or
pop
pop
dec
fildll
push
push
mov
adc
int
add
xor
movsl
les
ljmp
das
mov
lods
loope
dec
lahf
mov
or
mov
cmpsb
inc
imul
in
test
rorl
push
cwtl
pushf
and
pusha
xchg
push
cmpl
fstpl
aaa
push
out
repnz
xor
or
add
mov
repnz
mov
fmuls
dec
rcll
aad
enter
sbb
xchg
adc
les
lcall
push
sub
dec
daa
adc
idiv
lcall
push
fiaddl
lahf
adc
out
sub
cmpsl
pop
xor
fisubrs
jns
lcall
sub
mov
in
xor
mov
or
push
movsb
add
push
sbb
mov
fisubl
pusha
sarb
pop
js
repnz
aad
insb
mov
aam
addr16
gs
insb
lret
pop
ds
sub
xor
dec
sti
and
pop
or
aas
repz
test
xor
mov
push
hlt
sbb
jle
bound
shrl
clc
adc
push
and
scas
mov
ret
mov
xchg
stos
sbbl
mov
push
pop
jmp
push
pop
out
sub
faddl
call
sbb
cmp
lahf
fs
xor
sub
jmp
js
sub
lock
cwtl
fldl2e
pop
sub
xchg
push
lock
es
stos
inc
faddl
inc
adc
add
popf
lret
das
push
cmpsl
push
mull
cltd
lret
test
rclb
in
mov
in
out
test
ret
push
sub
cli
jne
test
cmp
and
cli
movl
inc
fidivl
xchg
add
pop
lret
mov
xchg
or
mov
or
jno
fidivrs
dec
dec
adc
imul
pop
dec
shll
repz
mov
xchg
subb
repnz
xchg
xor
push
call
or
ret
add
push
movsb
jge
cld
adc
cmp
dec
push
ret
sub
std
repnz
stos
imull
dec
js
pop
lret
cmpsl
mov
stc
mov
das
cs
scas
cld
and
lahf
sub
cmp
dec
fisubrs
clc
or
in
pop
inc
mov
or
insl
outsb
pop
or
lahf
test
cmp
ret
pusha
sub
mov
xor
pop
ds
loop
mov
mov
seto
and
xchg
jns
xchg
lock
dec
and
push
add
and
lds
mov
sti
xor
je
mov
popa
enter
enter
or
ret
dec
mov
fnsave
mov
jae
or
ret
inc
cmp
aad
sahf
and
sbb
mov
xor
mov
xchg
mov
repz
or
aad
mov
popf
scas
pop
mov
je
call
pop
inc
xchg
sarb
inc
add
push
pop
mov
dec
roll
out
shrl
and
xor
push
add
lods
push
cmpsl
and
icebp
je
mov
dec
lahf
loop
orl
and
lret
fmull
rol
or
sbb
lahf
cs
mov
sbb
pop
add
mov
test
pop
xorl
bound
xchg
in
enter
stos
pusha
xchg
cld
iret
outsl
out
jmp
sub
xor
icebp
fwait
mov
imull
rcl
int3
sbb
and
jbe
mov
out
aas
cwtl
ja
daa
mov
inc
mov
and
sub
adc
add
shll
test
jns
js
cwtl
add
cmc
cmp
lock
sbb
jmp
test
xchg
xor
xlat
sti
cmpsl
lret
sub
xchg
les
popf
dec
scas
mov
add
stc
out
mov
cwtl
lods
test
and
mov
mov
cmp
adc
or
hlt
add
mov
scas
and
push
notb
es
jbe
icebp
das
pop
loop
lock
pop
out
inc
outsb
sti
mov
jnp
js
scas
sbb
scas
mov
inc
rcll
and
push
mov
outsb
add
mov
xor
inc
test
out
les
adc
jnp
sub
or
hlt
jg
outsl
sbb
xchg
jb
sbb
rorb
fistl
sbb
sbb
cltd
or
mov
pop
jae
pushf
enter
lock
aaa
xchg
xor
ja
lds
cmp
or
les
fidivrs
lods
xchg
push
push
xchg
popf
dec
mov
adcb
test
js
clc
xchg
push
cmp
loopne
mov
stos
jno
push
mov
push
out
in
in
dec
xor
cmp
add
inc
and
sbb
ja
inc
mov
outsl
sub
mov
stc
addr16
es
data16
aas
cmpsb
jnp
jp
cmpsb
adc
popf
push
clc
ja
les
decb
mov
aaa
stos
xchg
pop
cmp
adc
or
pop
mov
cmpsl
mov
xchg
mov
mov
xor
adcb
xchg
dec
pop
imul
ss
dec
lea
xor
or
and
dec
aas
movsl
fcmove
jp
add
mov
pop
mov
push
lret
lds
sti
js
sbb
add
pop
pop
inc
outsb
mov
push
or
sub
test
mov
jg
ss
add
push
mov
filds
stos
lcall
xor
negl
scas
mov
or
mov
sub
cli
push
mov
mov
mov
pop
add
push
adc
pop
pushf
sbb
jge
xchg
xchg
xchg
xor
inc
xchg
add
outsb
sbb
dec
lcall
and
aad
adc
lret
push
mwait
jns
ret
sbb
or
adcb
aam
mov
das
pop
or
loopne
sar
shll
pushf
sti
leave
adc
outsb
mov
jp
dec
mov
sub
xchg
xlat
xchg
loopne
lea
ljmp
sbb
push
dec
pop
pop
inc
sbb
insb
or
inc
lea
sbb
loope
xor
cmc
push
jmp
jmp
xlat
pop
lcall
push
stos
and
inc
neg
pop
xor
mov
xor
aaa
lods
cld
test
outsl
mov
jle
sbb
pusha
pop
iret
jp
pop
out
xor
imul
sub
andb
sbbl
sub
into
stos
push
or
dec
push
pop
outsb
xchg
inc
adc
ret
jle
out
data16
mov
js
inc
hlt
or
idivb
cmp
and
out
loopne
or
xchg
in
fldl
push
pushf
out
jg
add
movsb
lea
sarl
pop
mov
addr16
ds
js
out
mov
xor
stc
test
in
cmp
nop
mov
mov
cwtl
mov
inc
das
ret
push
jmp
and
pop
push
pop
in
jl
aas
xchg
stos
leave
adc
lcall
insb
jle
data16
fdivrs
add
adc
add
test
shrb
cmpsl
scas
sub
push
mov
movzbl
and
ret
dec
daa
pop
cld
hlt
jge
xlat
popf
push
leave
lret
pop
movl
jbe
imul
add
inc
cmc
mov
incl
pushf
xor
push
in
mov
jmp
mov
adc
xchg
pushf
scas
es
push
mov
xchg
out
sbb
dec
mov
cmpsb
lods
in
mov
fmull
into
test
hlt
cmp
xchg
inc
push
adc
ss
and
insb
add
adc
stos
rcr
stos
out
pop
adc
in
div
mov
push
nop
xor
scas
push
mov
lds
and
cmp
fbld
mov
aas
mov
insb
div
mov
jge
jmp
mov
test
fildl
mov
pop
aam
xor
xor
cs
iret
loopne
lcall
xchg
test
incl
out
lods
scas
out
mov
cmp
push
cltd
and
or
fst
cld
ljmp
and
xor
inc
call
incb
aad
repz
mov
idivb
sub
adc
arpl
add
sti
xchg
fidivrs
pop
mov
or
or
xchg
inc
pop
jo
lcall
xchg
push
lahf
ja
xchg
and
sub
repz
jl
sbb
aaa
rclb
xchg
call
in
pop
sbb
mov
mov
cmp
xor
daa
out
mov
cmc
or
jns
cmp
push
test
in
enter
into
ja
cmp
sbb
jge
les
and
lret
adc
int3
cmc
stos
pushl
add
pop
movsl
jb
pusha
pop
xor
andb
aas
fistpl
fcompl
add
push
xlat
xchg
dec
fnstenv
push
les
test
mov
add
inc
xchg
mov
fistpl
add
xor
inc
cld
pop
dec
xor
movsl
xor
pop
enter
push
fnstcw
out
addr16
and
outsl
mov
and
and
inc
icebp
int3
adc
sub
xor
mov
insb
xchg
jmp
jecxz
cmpsb
mov
adc
dec
lea
adc
daa
pusha
das
adc
arpl
fldenv
fucomi
les
insb
or
inc
or
cmp
cmpb
sarl
xchg
out
outsl
decl
cs
pop
cmc
imul
add
in
in
add
or
push
dec
mov
push
or
popa
outsb
adc
sbb
or
lods
adc
in
pop
ficoms
std
or
adcb
ja
push
cli
push
outsl
dec
stos
push
test
push
push
pop
iret
xchg
mov
mov
pusha
xchg
xor
dec
fldl
arpl
jp
insb
lods
xor
pop
mov
lret
jae
vsubps
cs
xor
xorl
repz
test
push
inc
inc
mov
cwtl
adc
push
mov
jmp
repz
or
xchg
sub
lret
xor
push
push
cld
mov
add
adcl
popa
and
mov
and
lret
fbld
jecxz
int3
pop
imull
cmpsb
std
stos
adc
inc
adc
sub
xchg
imul
inc
rep
dec
fwait
jnp
jne
pop
popf
idivl
dec
pusha
in
sbb
repnz
enter
cmp
mov
mov
cltd
jbe
sbb
into
aaa
in
fs
mov
sub
addb
subl
clc
mov
sub
dec
sub
and
lahf
daa
out
out
sbb
scas
jbe
xchg
in
fbld
dec
jge
jbe
loopne,pn
mov
outsb
fnstcw
es
xchg
mov
xchg
mov
mov
fdivrs
or
pop
fiaddl
jg
pusha
loop
fistps
aaa
stc
adc
mov
xchg
xchg
xchg
or
cwtl
cli
sarb
push
pop
xchg
dec
imulb
aam
jle
scas
cltd
push
xchg
pop
lcall
hlt
ret
cmp
scas
lods
addb
in
cmp
cli
xor
into
loope
dec
adc
sar
sub
mov
or
jle
and
es
outsb
or
out
mov
jp
aaa
mov
fdivrs
testb
mov
xchg
jmp
xchg
cmpsl
sub
in
xorb
cli
sbb
xchg
or
adc
add
ret
pop
subl
add
xchg
insb
dec
mov
or
mov
stos
in
lcall
mov
xchg
xchg
neg
sbbb
mov
mov
pop
scas
enter
dec
dec
mov
fsubrl
xchg
dec
or
mov
xchg
imull
mov
in
xor
pop
gs
mov
mov
shll
inc
xchg
push
cld
outsl
mov
stc
push
mov
lret
mov
xor
sbb
sbb
xor
push
cmp
pop
xchg
xor
jbe
cmpsb
xchg
pop
leave
dec
xlat
sbb
push
mov
mov
int
lea
sbb
dec
in
sub
xor
lock
insl
nop
push
jne
out
incb
loop
lret
dec
add
dec
dec
sub
sbb
pop
mov
xor
inc
movsb
repz
and
sbb
or
xor
jnp
arpl
pop
cmp
sarb
dec
repz
xchg
mov
fildl
jnp
sbb
div
pop
sub
ja
fnstenv
fsubl
loop
xor
arpl
shll
and
aas
mov
push
sub
jno
and
sbb
cmp
test
dec
push
mov
adc
inc
ljmp
mov
insb
jns
xor
out
mov
lock
adc
fndisi(8087
jg
scas
data16
sbb
jge
mov
stos
clc
jnp
jb
ja
push
dec
ja
mov
sahf
mov
scas
lea
inc
and
pop
pop
inc
jno
add
xchg
aas
fsubl
mov
insl
pusha
jmp
vaesenclast
xor
dec
mov
in
hlt
mov
cmp
ds
xchg
xor
jge
sub
fcomps
outsb
push
sub
xlat
add
mov
int3
popf
adc
mov
xor
adc
shr
adc
jl,pn
push
or
mov
icebp
cmp
add
int3
dec
dec
xor
shl
stc
jecxz
cmp
and
aam
add
push
jbe
ljmp
pop
loop
push
xchg
iret
in
mov
add
jg
mov
orl
fstps
fwait
loopne
jno
loopne
push
test
js
dec
jmp
and
mov
fwait
and
push
push
xor
loop
mov
test
outsl
fs
sbb
add
daa
lahf
sarb
loope
xchg
adc
or
cmpsb
add
add
shlb
jecxz
and
pop
cltd
inc
lock
add
and
roll
test
mov
in
push
aas
add
mov
mov
add
fldl
data16
mov
fs
sbb
mov
lahf
push
push
or
inc
cmp
pop
xchg
sbb
repnz
mov
in
sarl
lret
popl
pop
fwait
lcall
add
ficompl
es
jp
sarl
dec
cmp
sub
cwtl
inc
mov
enter
int3
sub
fs
xor
mov
jb
add
mov
xlat
cmp
shr
push
fadd
add
pop
mov
lcall
inc
popa
inc
dec
mov
mov
shlb
std
cmpsb
out
aaa
mov
scas
xchg
sub
mov
das
inc
lock
into
push
dec
pop
mov
push
dec
pop
aaa
and
xchg
call
repnz
xchg
lcall
jp
mov
xor
and
and
subl
stos
mov
jbe
push
bound
lcall
bound
fists
cmpsl
in
sti
sti
xchg
mov
clc
inc
xchg
cmp
cld
lret
lret
cmc
sub
mov
push
ret
stos
in
sub
std
sarl
sbb
outsb
and
ds
popf
mov
mov
sub
mov
pop
in
add
mov
jmp
fists
add
test
sbb
cmp
mov
push
ss
adc
pop
mov
push
stos
cltd
loope
sub
pop
push
popa
pop
push
loopne
data16
adc
fsubp
nop
fsubrs
mov
cli
ret
mov
or
dec
xor
mov
push
or
inc
movsb
mov
pop
andb
call
jnp
pusha
pop
repz
fidivl
lret
in
std
jo
call
or
out
loop
push
cmc
dec
ljmp
cs
mov
rorl
mov
sub
jnp
fsts
nop
in
rcrb
and
xchg
jg
cmp
push
fdivr
mov
inc
jns
cmp
dec
int
cmc
push
fucom
rolb
sbb
cmpsl
test
sbb
mov
fldcw
push
nop
push
jp
mov
add
cwtl
adc
mov
xor
fiaddl
int
icebp
sarb
mov
xchg
push
nop
mov
mov
cmc
jnp
cltd
push
dec
fstps
loope
or
mov
dec
daa
jl
shrb
pop
dec
test
imul
dec
out
inc
fmuls
ficoms
add
stos
mov
je
pop
push
cltd
rcll
push
in
push
movsl
out
in
cmp
addr16
pusha
jo
ds
ljmp
jo
sbb
xchg
int
add
xorl
jae
test
aas
mov
pop
xchg
icebp
in
pushf
das
pop
rcll
aam
dec
ljmp
call
push
sub
out
cmp
pop
xchg
subl
sub
pop
mov
fistl
lahf
xchg
cs
addb
mov
and
mov
jbe
xlat
ja
rorl
push
stos
cmp
in
sub
lods
cs
shll
rorb
and
adc
and
sbb
cmp
add
outsb
negl
cmp
mov
test
test
daa
out
pop
mov
add
or
adc
mov
jns
or
xor
xchg
xchg
sbb
out
fadd
jns
sbb
cli
or
leave
sub
pop
mov
movsl
xchg
jmp
js
mov
jne
cs
jle
leave
rorb
jmp
or
in
pop
dec
sub
pop
in
test
aaa
sub
shl
jbe
lahf
imul
mov
jmp
cmp
ja
mov
push
in
ds
and
pop
cmp
mov
add
hlt
add
inc
mov
mov
jl
imul
fsincos
dec
lcall
jp
xchg
hlt
mov
sbbl
add
ror
dec
lock
shll
cmp
fimull
or
popf
lods
xchg
out
adc
adc
push
xchg
mov
jne
or
sub
dec
pop
nop
mov
sbb
pop
aad
fcmovnb
adc
xor
mov
and
xlat
mov
stc
movsb
add
flds
lret
mov
mov
jo
pop
lods
adc
mov
imul
pop
stos
sub
pop
and
pop
lret
roll
mov
fstpl
out
outsl
push
cltd
fcompl
jge
inc
out
inc
mov
push
shr
push
xchg
outsl
ljmp
sub
fisttpll
mov
scas
pushl
std
push
jnp
or
mov
and
jb
pop
add
add
jb
mov
or
stos
xor
leave
mov
adc
lret
fsubs
dec
or
cmp
pop
insb
out
sub
or
mov
rorl
push
mov
mov
inc
sbb
adc
dec
xchg
adc
pop
gs
fimuls
bound
pop
imul
inc
das
mov
cltd
call
inc
loope
sbb
adc
xor
out
sbb
jp
cltd
mov
in
aad
mov
jae
cld
sbb
int
jnp
pop
mov
mov
mov
pop
movl
iret
hlt
cmc
rol
mov
cmp
jmp
fidivrs
fnstcw
loop
das
fists
mov
add
inc
pop
pushf
daa
sub
inc
lcall
push
pop
xchg
test
inc
push
xchg
inc
repnz
cli
mov
arpl
jecxz
sahf
popf
jmp
sbb
mov
mov
xchg
arpl
aaa
mov
push
pop
or
dec
and
mov
cmp
xchg
mov
push
leave
xor
dec
fadd
mov
daa
lret
dec
insl
add
dec
ljmp
mov
fistl
cmp
xchg
data16
xchg
push
cld
imul
jmp
sbb
iret
ljmp
insl
or
inc
es
push
xlat
out
ljmp
imul
mov
jmp
dec
aad
mov
xor
mov
movsb
fstps
push
jecxz
pop
sahf
clc
add
pop
push
loope
in
dec
out
push
adc
fstpl
fmull
adc
into
xchg
cli
mov
lods
mov
popa
cmp
shlb
test
insb
pusha
in
xchg
cs
ds
mov
lea
scas
std
mov
loope
add
ret
ja
mov
sub
ficoml
das
movsl
je
mov
out
dec
outsl
push
mov
gs
and
xor
mov
clc
ss
add
jge
hlt
cmp
je
jp
nop
cmp
and
pushf
leave
or
pop
shll
mov
push
sti
hlt
mov
dec
lret
shl
rcr
inc
int3
aam
mov
jge
sbb
sbb
lahf
pop
mov
inc
lret
adc
mov
sbb
lret
dec
ficoml
sahf
add
inc
mov
insl
lock
inc
mov
ljmp
lcall
pusha
popf
cmp
arpl
jbe
add
and
jnp
sbb
adc
pop
adc
or
mov
out
movsb
pop
and
cmp
js
in
stos
pop
lret
jnp
addr16
and
lret
add
popf
in
dec
mov
adc
inc
imul
les
jo
sti
adc
aas
adc
cmp
dec
or
test
jg
cmpsl
subb
in
jmp
cltd
mov
jp
mov
jns
loop
sub
mov
pusha
les
das
cmp
loop
je
mov
mov
mov
jne
pop
mov
fldlg2
sub
jae
mov
ja
aad
shlb
sarl
sub
fisubl
or
sub
leave
pop
iret
repnz
lcall
jle
xlat
repz
ret
pop
or
xor
push
lods
frstor
sbb
mov
add
inc
cmp
imul
mov
jb
sub
mov
jg,pn
dec
xor
add
cld
stos
pop
popf
test
jmp
in
loop
or
fnstsw
test
lcall
xchg
and
cmpsl
ror
repz
outsb
fdivs
jns
inc
stos
and
mov
push
cs
mov
mov
test
cmp
push
cmp
sub
mov
mov
adc
lock
mov
ljmp
sbb
xchg
add
mov
mov
pop
loop
cmp
mov
cmp
lock
int3
sub
jbe
popf
ss
rclb
cmp
std
pop
in
fistpl
ss
adc
or
xor
repnz
jmp
pop
push
and
mov
sub
call
push
jnp
fwait
iret
jb
pshufw
inc
fmul
loope
ja
xor
sbb
push
cmp
cltd
mov
jmp
mov
es
imul
xor
mov
add
mov
pop
mov
cmp
aas
mov
adc
push
out
or
gs
test
inc
adc
movsb
push
scas
pop
das
xchg
mov
jecxz
jmp
jo
daa
and
sahf
das
adc
rcr
ljmp
xor
pop
xchg
aaa
and
jp
int
xor
test
xchg
rol
les
movsb
fnstenv
outsb
inc
mov
and
pop
xor
ja
sub
cwtl
mov
sbb
mov
testl
fdiv
test
mov
add
sbb
xchg
sbb
dec
out
sub
jb
sub
out
mov
add
cmp
bound
mov
jmp
cld
mov
jp
aad
mov
cld
or
clc
xchg
stc
cmp
insb
jle
jb
stos
ja
insl
imul
lods
or
push
mov
jge
das
scas
cli
mov
popf
mov
fdivp
addl
or
cmp
mov
sbb
gs
daa
cmpsb
sti
lock
lret
mov
stos
cwtl
movsb
cli
cmp
mov
popf
popf
in
shll
ja
pop
mov
mov
movsl
mov
mov
es
mov
sbb
cmp
sar
mov
inc
inc
jmp
out
in
in
cmc
enter
cwtl
cmp
popa
xor
xor
inc
scas
lods
cld
scas
and
ror
push
movsb
push
dec
xor
repz
test
xchg
mov
push
test
mov
fildll
jge
push
mov
sub
push
out
in
fidivrs
imul
popa
sbb
inc
ljmp
jp
or
mov
and
sarb
sub
mul
subl
push
xor
push
xchg
inc
pop
packuswb
stos
dec
xchg
mov
fisubl
xor
aas
insb
cmp
mov
sub
adc
cmc
outsl
adc
stc
mov
shrl
jg
int3
jne
sub
or
icebp
lea
or
xchg
je
cmp
hlt
jne
adc
xchg
and
pop
aam
cmpsb
stos
les
lea
in
cwtl
jns
xchg
push
aam
and
cli
sahf
and
push
adc
sub
mov
or
les
stc
shll
push
leave
aad
pop
mov
rorb
data16
lock
loope
mov
lods
adcl
ficoml
and
jmp
mov
outsl
decl
or
in
jl
hlt
insb
es
shr
mov
mov
mov
gs
pop
es
fstp
imul
mov
inc
pop
cs
call
inc
pop
or
xor
lret
mov
icebp
jno
jle
cmp
pop
pop
in
mov
aam
rorl
mov
lcall
xchg
cmp
rcll
and
lret
roll
mov
js
imulb
movsl
ds
push
cmp
test
dec
iret
pop
je
pop
shll
fstps
loope
pushf
adc
js
xchg
dec
jb
mov
sbb
test
daa
push
insl
push
fwait
lea
out
aam
or
outsl
pop
dec
dec
fs
lods
outsw
and
mov
ljmp
pop
push
jg
push
sub
sbb
pushf
into
cmp
cwtl
cmpsl
inc
cmc
jae
aad
nop
pop
jmp
sub
jno
iret
movsb
fisubrl
cwtl
mov
jecxz
insl
popf
test
arpl
push
dec
mov
fisubl
inc
fimuls
add
add
mov
adc
imul
jl
mov
inc
pop
sbb
xlat
lods
xchg
cmpsb
shr
fs
std
pop
lret
inc
iret
pop
popf
loop,pn
mov
cmpsb
sub
jp
push
push
jnp
test
jns
bound
xorb
test
mov
sbb
es
and
pop
pushf
push
mov
stos
fs
xchg
ret
out
mov
loopne
subb
xor
xor
adc
outsb
test
movsl
adc
cmp
dec
jae
ss
push
mov
fsub
jge
adc
adc
mov
mov
sub
sbb
movsb
mov
ss
inc
push
loop
mov
fcoms
push
inc
es
add
sar
mov
dec
imul
enter
pop
add
push
popa
daa
lods
mov
fwait
repz
inc
in
jbe
dec
in
or
fsub
nopl
outsl
jle
dec
mov
jae
and
lret
stos
inc
mov
adc
xor
outsb
sbb
add
adc
inc
in
jecxz
push
rolb
rcr
orl
push
std
pop
popf
xchg
sub
insl
subb
or
lret
xor
jle
jbe
inc
pop
fmuls
call
xor
ds
or
sbb
inc
lcall
dec
dec
dec
inc
fbstp
jae
adc
push
xchg
fildll
in
pop
mov
push
xchg
scas
flds
in
test
xlat
mov
aad
lret
and
jp
pop
pop
push
icebp
hlt
cwtl
mov
js
inc
inc
loop
sbb
mov
js
mov
and
push
js
and
and
scas
mov
mov
adc
iret
sub
popa
pop
cli
cld
mov
adc
incl
xor
fdivs
out
inc
inc
xor
enter
call
jle
scas
iret
sbb
fwait
push
inc
outsl
sbb
jno
cs
sub
adc
xor
aad
xor
pop
fldenv
add
pop
push
mov
dec
cli
roll
test
out
popf
mov
jae
iret
dec
adcl
jo
aam
mov
xchg
mov
push
enter
sub
pop
jnp
dec
cmp
fldenv
push
and
sbb
mov
mov
pop
jmp
test
adc
movl
sbb
xchg
inc
jno
jae
lret
into
test
pushf
xor
mov
lds
xor
sub
sub
jge
push
sbb
xor
js
inc
pop
fwait
loop
jge
add
dec
sub
mov
pop
loopne
xchg
insl
aam
and
or
fsts
in
fcoml
or
stc
push
in
pop
enter
leave
popf
test
mov
jl
inc
in
lods
mov
dec
sahf
inc
mov
cli
adc
cmp
push
sub
cmpsb
je
fs
icebp
testb
js
in
test
xchg
adc
cmp
fnsave
std
mov
cmp
jnp
xchg
push
push
jne
inc
jg
pop
js
dec
popf
dec
fnstcw
xchg
inc
inc
roll
lods
addr16
orl
shl
mov
cs
sub
mov
mov
cmp
sti
int3
addr16
mov
dec
mov
cmpsb
or
in
mov
movsb
mov
sbb
mov
movsb
cmp
cmp
xchg
dec
dec
xchg
ljmp
dec
push
pop
mov
out
sbb
repz
das
sbb
mov
ja
orb
adc
int3
cmpsb
inc
or
shr
aam
fstps
lret
lds
hlt
arpl
test
mov
mov
jno
fwait
out
adc
data16
push
and
rcrl
xor
jae
jnp
jle
cmc
repnz
lds
mov
jge
js
mov
scas
sbb
xchg
lea
or
dec
cltd
stc
aaa
lahf
ret
popa
js
stos
dec
aaa
xchg
cmpsl
mov
insb
loop
mov
or
push
xchg
call
jle
mov
inc
mov
andb
mov
mov
ficoml
push
jecxz
pop
and
push
inc
jnp
mov
mov
cmp
out
mov
outsl
push
mov
neg
js
fcmovb
xchg
jb
shl
fdivr
inc
xchg
ret
imul
mov
mov
fwait
lcall
not
daa
out
fwait
sarl
or
fdiv
or
test
les
mov
adc
adc
filds
sahf
dec
cmp
push
cld
stc
scas
test
push
stos
mov
cmc
pop
mov
or
leave
ret
dec
inc
inc
leave
and
xchg
enter
pop
jns
testb
cwtl
lods
inc
cmp
aaa
jge
sti
xchg
inc
xor
jg
sbb
xor
setle
jb
sub
pop
pushf
addl
rcrl
pop
mov
xor
mov
dec
jl
mov
out
pop
inc
adc
insb
int3
mov
mov
add
mov
in
inc
push
int
pop
pop
xchg
push
jo
jg
inc
outsb
add
mov
add
test
daa
daa
and
mov
adc
xchg
xchg
adc
mov
adc
aad
sub
insb
sbb
push
mov
add
das
push
adc
stos
sahf
add
sarb
xor
int
push
cmp
xchg
popf
rcll
outsl
push
sub
xlat
sub
xchg
mov
sub
rorl
cmp
jns
data16
js
adc
jp
out
sar
and
repnz
std
movsb
pop
ds
insl
mov
dec
sub
fldt
push
add
sbb
ja
addr16
daa
orl
clc
incb
lret
cmpsl
loope
cmp
cmp
pop
mov
lock
mov
pop
in
add
out
xor
mov
subb
sti
outsb
xchg
dec
adc
gs
cltd
push
inc
pushf
pop
jle
inc
adcl
mov
shrb
sub
push
xchg
inc
jmp
icebp
inc
aas
xchg
sub
jne
scas
imul
mov
pop
or
nop
repz
xorps
pushf
ret
je
addr16
dec
into
js
pop
dec
addr16
xor
or
addr16
dec
in
push
inc
inc
mov
fs
ret
jb
dec
sbb
out
hlt
sti
jnp
in
dec
fwait
outsb
sbb
out
hlt
mov
aaa
push
hlt
testl
inc
push
jmp
cli
dec
mov
dec
cs
les
inc
sbb
fidivs
arpl
addr16
cmp
cmpl
cmp
xchg
mov
lret
popa
call
jnp
ljmp
and
movsl
adc
rcrl
jae
lahf
addr16
jae
jl
icebp
icebp
out
jmpw
and
clc
add
fstl
adc
pop
inc
jno
repz
jne
and
adc
fldt
inc
arpl
sub
dec
mov
out
sbb
add
sub
fidivl
std
inc
push
insl
aaa
mov
or
mov
cmp
stc
stc
orl
test
rcrl
push
jbe
adc
xchg
ror
testl
adc
jb
inc
sbb
dec
ds
out
cmp
leave
cmp
mov
int
pop
pushf
mov
lods
inc
mov
mov
ror
sarb
dec
fwait
rcl
pop
cmpsb
test
imul
or
gs
daa
xor
movsb
insl
imul
jnp
sbb
mov
rolb
xchg
rorl
orb
xor
bound
lods
shl
daa
in
pop
push
dec
ret
pop
push
lret
adc
push
loope
dec
fstps
cmp
push
mov
test
std
push
jmp
jl
fwait
or
lcall
jbe
gs
jle
pop
dec
push
clc
lahf
call
adc
test
insl
push
push
jbe
insl
or
sbb
insb
add
dec
ret
outsb
mov
clc
out
rorl
inc
js
sarb
in
out
out
push
jle
dec
inc
inc
lods
pop
jl
pusha
add
pop
cmpsl
mov
push
or
mov
push
sub
insl
mov
pop
clc
icebp
sub
out
in
jge
pop
jbe
jmp
int3
push
inc
jb
xor
or
stos
mov
jp
mov
mov
fiadds
or
cli
test
sbb
int
aas
iret
sbb
test
inc
dec
in
addr16
movl
jle
adc
and
xchg
insl
mov
pusha
mov
sub
in
stc
in
dec
cltd
loope
fs
test
cltd
fwait
outsb
sub
pusha
scas
gs
adc
add
sub
fwait
xor
mov
pushf
ja
out
add
arpl
adcb
xor
dec
popa
je
xchg
adc
push
mov
jge
stos
pmuludq
or
fs
add
inc
fldl
push
pop
jmp
add
push
lods
testl
xchg
movsb
imul
fiaddl
mov
push
clc
add
addr16
and
data16
pop
cmc
dec
movsb
pop
xorl
mov
xor
and
cli
insl
adc
mov
loopne
call
das
mov
jge
bound
push
lods
loop
push
mov
out
outsb
adc
cmp
add
mov
push
inc
adc
dec
shr
add
sbb
orl
mov
jg
xor
xchg
xor
das
jb
test
dec
rorl
xor
jns
jb
iret
dec
shlb
push
pop
mov
insl
jb
hlt
test
pop
aas
jmp
mov
mov
call
cmc
notb
movsl
into
ljmp
fdivrl
xor
dec
clc
sbb
es
add
jnp
dec
pop
inc
cmpsl
hlt
sbb
inc
dec
dec
mov
aas
nop
and
out
or
pop
ret
inc
and
ljmp
hlt
mov
js
lret
enter
push
subl
xchg
or
arpl
or
inc
or
loop
xor
cmc
xchg
dec
std
sub
lea
cmp
out
mov
incl
mov
sub
loop
popf
push
cld
cld
and
xor
je
lods
cmp
xor
pop
shl
stc
add
dec
jg
add
sbb
mov
jmp
incl
jns
leave
ja
pop
push
cmp
cmpsb
pop
das
outsb
sub
bound
or
mov
test
sub
jge
push
ja
lret
lds
ret
mov
pop
sahf
cmp
sub
dec
inc
adcl
fwait
pushf
mov
mov
mov
repnz
sbb
sub
mov
jae
shll
inc
ror
cld
mov
cmp
and
xor
add
aad
mov
adc
cmp
test
or
rorb
popl
inc
jge
add
sub
push
xchg
psllw
jnp,pt
imulb
cltd
xchg
aad
icebp
subb
add
inc
pop
xor
xchg
push
addl
sub
inc
cli
mov
mov
jbe
xlat
push
fbstp
push
movq
inc
add
iret
pusha
addr16
out
mov
mov
jo
xorb
testl
add
cmp
jl
loopne
cmp
js
leave
mov
sti
cli
sti
mov
loope
out
aad
lock
push
lret
push
xchg
inc
je
leave
push
fs
sbb
and
xchg
lahf
mov
lahf
daa
cltd
repnz
adc
and
mov
or
push
cmc
adc
popf
cwtl
cmp
loope
sub
push
repnz
inc
xchg
add
repnz
rcr
jl
rol
popf
dec
push
es
aad
test
lcall
lods
pop
pop
mov
fxch
jecxz
xchg
out
push
movsl
cltd
inc
les
add
fwait
push
imul
and
mov
mov
scas
push
sub
mov
sub
push
ds
mov
adc
xor
and
jmp
and
pop
pushl
enter
push
int
or
pop
imul
loop
call
loopne
idiv
stos
xchg
xor
lret
repz
cli
ret
pop
fwait
into
dec
mov
mov
orb
cmp
and
jmp
xlat
in
incl
test
cmp
cltd
or
in
adc
enter
stos
imulb
mov
inc
push
lcall
pop
std
cwtl
fbstp
cmp
adc
push
mov
mov
lret
push
mov
xchg
inc
cli
pop
repz
adc
or
push
mov
mov
or
jl
or
jns
aad
divb
jbe
dec
iret
sub
cmp
push
or
adc
mov
out
in
fildll
add
push
sbb
jb
test
xchg
pop
insb
jp
push
dec
inc
pop
or
test
idivb
fcoms
inc
fs
sbb
inc
sub
leave
xchg
loope
rcr
jle
jne
ret
insl
cmpsl
xchg
or
xchg
push
ror
push
pop
jo
iret
xchg
scas
push
lret
les
xchg
push
rcll
pop
in
xor
jb
jl
shlb
popa
mov
cmpsl
ret
and
dec
mov
cld
outsl
sbb
hlt
dec
loop
or
pop
or
mov
pop
mov
fistl
in
scas
mov
inc
ljmp
stc
lock
movsl
mov
vmread
cmpsb
enter
mov
ljmp
popl
or
or
jbe
loop
jge
imul
outsb
imul
cmp
out
sbb
adc
shr
outsl
in
xchg
and
and
dec
inc
out
loop
outsl
jecxz
push
adc
or
and
push
xchg
sbb
ficomps
addr16
in
lods
lret
idivb
aad
imul
sbb
lock
es
jecxz
fmuls
movsl
cmp
xlat
insb
sub
push
nop
sti
cltd
iret
orb
jno
inc
outsl
mov
cmpsl
movsl
mov
jb
pushf
fdiv
das
mov
icebp
push
out
loop
sbb
fidivs
sbb
loop
sub
rcrl
fistl
in
mov
ja
mov
pop
insl
iret
das
leave
insl
cld
and
dec
ficompl
rorl
and
dec
dec
stos
jp
xlat
subl
inc
inc
xchg
jge
xchg
add
scas
mov
out
shll
mov
nop
arpl
out
jnp
pop
mov
mov
sahf
push
int3
push
into
inc
lods
out
sub
pop
roll
es
push
fwait
test
jne
pusha
rolb
sbb
pop
xchg
dec
je
jne
mov
js
out
outsb
popl
mov
pop
les
popf
xorb
dec
push
lock
lock
js
nop
sub
fwait
inc
out
and
xor
sti
sbb
mov
cmp
fnstsw
popf
add
movsb
and
addr16
adc
inc
or
loopne
mov
gs
inc
hlt
movsl
xchg
or
push
add
inc
aad
fildll
add
fistl
loop
and
push
mov
repnz
sub
mov
in
sub
scas
lahf
inc
shll
dec
pop
mov
mov
pop
jle
mov
les
adc
dec
test
std
enter
mov
pushf
xor
xor
stos
sar
push
jne
mov
nop
cld
mov
push
cmp
gs
sub
loope
xchg
cwtl
sahf
mov
inc
stos
in
dec
cwtl
pop
dec
iret
jbe
shrl
sub
popf
dec
popf
fdivs
or
sbb
jmp
mov
jae
test
mov
xchg
dec
pop
inc
xor
rol
cmp
insb
xor
and
js
cwtl
jmp
fiadds
std
adc
xchg
mov
outsl
xchg
dec
enter
adc
setne
loope
loopne
mov
cld
js
ja
kortestb
pop
movmskps
sbb
daa
lods
lret
ficoml
xor
push
inc
lahf
mov
jl
cld
sbb
nop
adc
and
mov
in
or
sbb
mov
insl
popa
dec
xchg
jle
inc
adc
cmp
mov
clc
push
sub
xchg
push
jge
sbb
mov
mov
add
cmp
jns
or
aaa
imul
lock
movl
inc
xchg
mov
sub
negl
mov
rolb
popa
push
lcall
in
in
push
imul
and
icebp
aad
jecxz
int
add
inc
sarl
out
adc
iret
imul
das
pop
adc
shlb
stos
adc
movsb
mov
cmc
jae
mov
add
or
dec
lret
std
sub
popa
out
pop
ficoms
inc
cltd
into
jno
jne
out
mov
mov
xor
mov
xchg
sub
ret
nop
sub
cld
pop
inc
xor
cmpsb
repz
int3
sahf
js
xchg
imul
es
rorb
pop
push
mov
or
adc
ds
scas
lods
pop
out
mov
lcall
or
pop
and
lcall
adc
rclb
mov
xlat
std
push
gs
mov
push
clc
add
sub
subl
mov
aaa
lss
pusha
stos
and
pop
xchg
repz
sti
xor
pop
xor
stos
iret
fisttps
out
adc
fs
push
pop
push
int
orl
add
gs
dec
outsl
push
sub
or
sbbl
shlb
and
jb
mov
sarb
adc
jmp
lret
bound
stos
sbb
mov
and
jae
imul
push
and
adc
add
clc
lods
loop
mov
mov
lret
in
mov
addr16
xchg
icebp
xchg
mov
and
into
in
xor
or
mov
imul
loop
lcall
std
sarb
stos
outsl
arpl
sbb
adc
mov
pop
inc
dec
mov
cmpsl
inc
movsb
inc
aas
sti
push
leave
mov
push
xor
push
push
push
testb
mov
pushl
add
cs
pop
and
mov
roll
dec
ret
fcmovb
xchg
cwtl
insb
xchg
dec
mov
enter
insb
cwtl
push
push
pop
lret
mov
dec
mov
inc
int
lods
repnz
stos
jg
movsb
test
nop
pusha
in
and
add
imull
rcr
ret
cmpsb
mov
outsl
test
aam
dec
stc
jecxz
mov
inc
lcall
or
out
cwtl
mov
mov
adc
push
jae
lods
inc
inc
ficoml
sub
aaa
leave
push
fs
outsb
push
bound
add
mov
ds
or
in
icebp
leave
ds
std
lock
jae
mov
xchg
popa
mov
and
push
mov
imul
inc
shll
addr16
or
mov
mov
xchg
cmc
andl
mov
add
test
popf
movb
or
or
mov
pop
aaa
mov
cmpsb
pcmpgtw
push
xchg
ja
aaa
dec
push
lret
cmp
inc
cmc
xor
lcall
loope
mov
push
mov
fstps
sub
jb
fisttpl
inc
ficomps
cwtl
xchg
jmp
pushf
xchg
paddb
dec
and
fxch
adc
dec
pop
call
stc
sub
dec
call
cwtl
sahf
in
gs
cmp
or
xor
clc
sbb
inc
mov
int3
xchg
int3
fs
cmp
in
fsub
cmp
repz
jmp
ss
xor
mov
ss
mov
pop
push
cmpsl
xchg
push
out
repnz
xchg
push
hlt
add
adc
xchg
sahf
fwait
popf
bound
mov
andl
jg
sbb
fimuls
push
andb
adc
sub
nop
xchg
adc
and
mov
dec
jae
mov
or
xorl
scas
fmul
pop
pusha
push
aad
imul
sarb
add
shlb
dec
pop
push
push
lahf
ret
mov
arpl
cs
push
push
jno
add
lret
testb
push
int
dec
or
mov
test
into
add
push
inc
dec
adc
daa
test
pop
movsb
cmp
cmp
aam
adc
out
sbb
fbstp
pop
lea
xor
sahf
scas
ja
aad
loope
mov
mov
aad
in
xchg
out
jne
jnp
enter
movsb
inc
fiaddl
adc
xchg
out
or
lds
xchg
mov
cmpsl
mov
or
mov
in
add
jp
lcall
test
jno
cmp
mov
or
adc
frstor
sbb
cltd
int3
dec
xchg
and
push
je
sbb
xchg
or
push
aaa
pop
fcom
jne
mov
sahf
aam
decb
jo
jnp
jo
mov
insl
inc
sub
push
pop
or
hlt
adc
jno
mov
inc
push
mov
jmp
push
jne
es
and
fcmovu
xor
icebp
cmp
mov
aas
aad
xchg
pop
pop
fsubl
jns
clc
mov
lds
iret
daa
or
cmp
pop
sbb
std
lock
lods
add
cwtl
rcrl
leave
clc
arpl
or
lahf
lock
mull
inc
notl
pop
out
out
pop
leave
jg
je
jne
and
mov
popa
push
jae
rolb
and
pop
add
mov
sbb
add
fldcw
jmp
dec
scas
mov
sti
popf
les
inc
mov
pop
or
and
mull
xor
jl
dec
rep
cmp
push
lret
push
cli
mov
repnz
xorl
add
loop
mov
jae
jmp
adc
sahf
out
dec
mov
or
push
out
movsb
mov
in
push
or
cmp
push
mov
push
lds
icebp
jbe
fistps
ret
inc
pop
add
xchg
push
mov
mov
popl
or
mov
inc
bound
rol
xor
addr16
adc
lock
xor
mov
push
push
std
xor
int3
pop
testl
mov
push
push
pop
jecxz
fnsave
push
fisubrs
das
mov
testl
and
sub
cld
test
cmpb
sbb
leave
loopne
mov
dec
and
inc
sbb
and
push
sbb
sub
jecxz
adcb
inc
or
inc
int3
sti
test
or
into
rcrb
sub
test
in
sbb
xchg
mov
test
push
mov
xchg
pop
push
test
push
inc
xor
adc
sahf
mov
adc
xchg
sub
mov
xchg
mov
gs
adc
gs
sub
loopne
sub
cltd
dec
push
bndstx
outsl
mov
dec
push
sbb
inc
fdivl
call
in
mov
mov
xor
dec
mov
leave
xchg
cwtl
adc
fistpll
div
inc
mov
mov
push
ja
into
mov
hlt
and
pop
inc
ja
popl
xor
dec
xor
ret
fcoml
adc
push
and
mov
inc
mov
add
aas
push
sub
adc
shl
out
xor
daa
sub
or
dec
fimull
xchg
pop
add
jecxz
and
and
push
mov
mov
mov
cmp
loope
jle
nop
fbld
std
mov
bound
cld
and
jge
sbb
xrelease
aam
adcb
jp
aad
imul
shr
push
pop
jo
and
fiaddl
cld
mov
scas
out
pop
daa
push
xchg
in
int3
in
icebp
enter
mov
mov
cmc
out
mov
pop
pop
adc
pop
cmp
push
ret
and
push
jae
popa
xchg
iret
data16
cmp
test
mov
sbb
pop
sti
adc
pushf
in
cmc
push
mov
mov
mov
shll
cltd
sbb
fmuls
mov
xchg
mov
addl
cld
movb
push
lock
pop
enter
shl
sub
push
lahf
sbb
adc
sbb
jp
popf
dec
mov
pop
in
arpl
je
iret
mov
pop
aam
nop
mov
xlat
sarb
addr16
jge
pusha
cld
outsb
dec
cmp
and
movsb
jno
in
push
fildl
push
cmp
inc
outsl
and
in
and
adc
mov
jmp
in
mov
sbb
cmp
dec
xchg
or
das
divb
and
ret
push
loop
cld
int3
int3
mov
jecxz
adc
fnstcw
std
push
filds
stos
pushf
inc
xlat
pop
nop
jg
iret
xchg
cmc
fs
add
mov
ds
icebp
or
shll
push
push
mov
mov
pusha
mov
xor
int
mov
mov
popf
adcb
icebp
jmp
cmp
xor
push
mov
mov
cltd
dec
sbb
inc
dec
mov
daa
xor
mov
push
fidivrs
shll
jne
es
setae
bound
inc
jp
pop
sub
insb
mov
jp
mov
pop
ss
ret
fwait
jbe
xchg
and
mov
xchg
mov
aam
and
aam
into
xor
sub
mov
push
and
roll
and
mov
gs
mov
adc
cltd
pop
dec
adc
push
jle
pop
notb
shlb
sbb
mov
daa
push
xchg
and
mov
movsb
shll
pop
dec
movsb
pop
xchg
inc
test
mov
jno
sub
add
xchg
test
mov
mov
inc
faddp
pop
in
sbb
xchg
or
fisttpll
sbb
or
mov
enter
mov
ss
cmp
push
in
fcmovnbe
mov
cltd
push
sbb
mov
xor
mov
or
jo
xor
mov
sbb
xchg
cmpsl
fcompl
test
outsb
hlt
pushf
mov
movsl
jp
mov
nop
mov
pop
mov
rcrl
aam
inc
jle
mov
imul
scas
jb
sbb
push
movsb
lock
mov
inc
mov
adc
leave
dec
push
fdiv
pop
ljmp
jge
and
push
sbb
mov
aam
mov
icebp
xchg
cmp
rcrl
bound
pop
test
insb
mov
and
ljmp
cltd
or
and
out
xor
mov
xor
dec
xchg
xchg
sub
into
xor
pop
ficompl
loop
es
pop
enter
sahf
and
dec
movb
negl
inc
mov
add
fnstsw
adc
mov
stos
push
jae
ss
pop
loop
inc
mov
jecxz
orb
pop
lcall
lods
in
jle
data16
outsb
cmp
repz
ss
insl
add
orb
sbb
test
stos
mov
fsubl
or
rclb
mov
daa
fisttps
sti
in
push
leave
sub
mov
jecxz
andb
jmp
xchg
outsb
sbb
adc
pop
jne
insl
add
mov
inc
aaa
xchg
arpl
xor
and
xorl
pop
cmc
fidivs
pop
fldt
jl
xor
arpl
push
lret
lret
add
test
into
jbe
out
xor
sub
push
lds
lds
in
xchg
inc
sti
xchg
les
xchg
lds
dec
or
int3
test
fstl
pop
and
cmp
adc
adc
jecxz
ror
sub
imul
mov
in
je
in
insl
cmp
add
or
mov
sbb
lahf
outsb
in
dec
inc
mov
lock
mov
inc
scas
loop
fmul
xchg
out
loope
bound
inc
out
pop
dec
mov
fistpl
lea
fcompl
ss
and
loop
and
push
cmpl
lods
mov
xchg
ret
or
or
pop
push
jnp
push
out
mov
lods
pop
add
repnz
sub
popf
insb
mov
mov
mov
iret
movsl
cmp
jne
insl
xchg
sub
negl
jmp
inc
mov
adc
adc
mov
testl
jl
lahf
lods
inc
fs
imul
test
push
inc
lds
cli
ret
adc
mov
notb
lahf
pop
jp
cli
out
lret
push
lea
xchg
dec
lods
dec
or
lret
std
and
sub
jae
fs
fisubrl
jge
data16
incl
incl
loopne
jb
or
test
imul
or
int
fwait
dec
cmp
jle
or
lea
mov
neg
sahf
nop
inc
loopne
mov
scas
push
cmp
jmp
mov
pop
js
fists
push
mov
icebp
movsl
cld
stos
icebp
loop
push
mov
ret
testl
shlb
aaa
into
das
dec
sub
cmp
arpl
mov
mov
mov
inc
addb
setae
sbb
cmpb
jle
imul
adc
lcall
test
aaa
jp
sti
cwtl
lods
sahf
cmp
mov
lret
addl
mov
in
js
mov
cmp
mov
es
in
xchg
das
jmp
arpl
cmpsl
or
rclb
lds
stos
cmp
xor
add
mov
xchg
test
movsl
mov
cld
jbe
cli
pop
data16
in
insl
ficomps
pop
jge
cmpsb
or
sbb
ss
xlat
push
adc
cltd
outsl
dec
gs
xchg
movsb
sbb
jmp
cmp
clts
lahf
push
repnz
scas
mov
aad
jns
adc
inc
add
jae
lds
movsl
mov
jmp
jno
gs
popa
ffreep
ret
or
shll
mov
jle
dec
mov
dec
fs
xacquire
push
mov
iret
rclb
test
push
push
jae
out
aad
jnp
mov
cmp
adc
shlb
add
pop
push
les
sbb
xchg
out
mov
add
leave
out
jnp
jge
xchg
in
adc
inc
loopne
or
mov
sti
imul
repnz
inc
in
in
pop
rol
jge
ret
xor
pop
movb
decl
mov
inc
imul
scas
xor
popf
xchg
int3
jle
sub
pop
adc
stos
xchg
xor
sbb
cmp
dec
aam
stos
arpl
icebp
jno,pn
icebp
loopne
xchg
insb
adc
adc
sbb
pop
ss
jl
ljmp
cs
lods
ja
xor
out
sbb
into
push
movsl
mov
aam
lcall
lods
mov
inc
mov
push
ret
xchg
jnp
aaa
mov
call
in
sbb
insb
in
lock
mov
sub
pop
stc
and
and
inc
inc
das
mov
push
or
pushf
push
lock
push
in
shll
testb
jb
jo
xor
scas
nop
xor
mov
lret
and
lcall
jno
out
leave
lea
add
and
ret
mov
push
jp
movsb
mov
aas
inc
jns
mov
testl
xchg
or
and
lcall
out
nop
mov
sbb
mov
inc
inc
in
and
repnz
mov
inc
sbbl
movsb
sub
mul
and
cmpsl
or
inc
aam
xchg
mov
xor
xchg
mov
jle
into
jbe
jmp
pop
fs
imul
pop
pop
adc
xchg
ljmp
out
push
fnstenv
inc
test
fwait
dec
xor
arpl
dec
pop
lods
loope
fxch
or
xchg
and
or
out
pushl
imul
repz
rcrb
pop
leave
dec
mov
sub
xchg
hlt
inc
cmp
sar
lods
inc
add
mov
inc
xchg
mov
xchg
sub
test
mov
imul
test
and
das
push
cwtl
mov
jp
adc
lods
test
fsubs
add
inc
cmpsl
fdiv
jg
pop
mov
sbb
ror
mov
fbstp
mov
pop
cmp
pop
xchg
dec
adc
add
neg
xchg
js
or
lock
xchg
jo
dec
cs
xchg
mov
sbb
loop
mov
mov
or
addb
push
popa
dec
rcl
xchg
loop
pop
cmp
mov
mov
sbb
xor
cmp
out
or
adc
dec
mov
hlt
push
arpl
loop
notl
in
sub
ret
stos
lahf
cltd
lods
xor
inc
xlat
repnz
or
mov
pop
sbb
mov
jne
insl
cld
aaa
jno
push
pop
notb
pop
mov
pop
lods
jno
out
xor
test
xchg
invd
adc
dec
sub
lret
jle
repz
in
sub
or
pusha
cmpsl
jb
adc
outsl
dec
or
jmp
pop
cwtl
xor
int
gs
push
mov
push
and
jae
arpl
jb
rcll
cmp
lock
jno
ret
push
lea
push
or
fst
cltd
mov
adcb
out
xlat
movsb
and
jmp
test
stc
jnp
push
push
cwtl
jae
addl
lods
dec
push
pop
addr16
rcr
loopne
jmp
inc
xchg
and
movsb
and
xlat
add
pushf
add
mov
repnz
xchg
dec
fidivrs
hlt
pusha
rcll
data16
dec
test
cmc
das
idivl
push
decl
inc
inc
adc
aaa
std
cmp
std
and
addr16
adc
adc
loopne
mov
sahf
push
aas
cmp
aas
jg
add
sub
xchg
or
mov
xlat
stos
pushf
test
add
dec
aad
mov
test
push
fwait
and
add
lahf
pop
leave
btc
test
inc
lea
repnz
jmp
push
jg
pop
cli
mov
subb
fldl
push
pop
sub
and
mov
push
adc
popa
outsl
je
mov
xchg
mov
xor
lods
cld
mov
and
dec
sbb
mov
push
xor
dec
mov
mov
movb
roll
sbb
mov
fs
and
loopne
xor
les
cmp
lret
inc
jae
stc
jp
push
outsl
mov
add
sbb
insl
jb
ror
and
sub
ds
xchg
cmp
fs
arpl
lcall
lds
ljmp
jo
push
and
mov
popa
lcall
jmp
aad
fsubs
xor
pop
cmp
cmp
daa
pop
cmpsb
and
jbe
mov
addb
or
in
call
xchg
ror
scas
bound
sbb
dec
shll
push
and
mov
inc
mov
pusha
push
push
mov
add
adc
sub
or
mulb
cmp
or
dec
inc
sbb
sub
jo
add
pushf
cmpsl
les
xchg
fldlg2
cmp
xor
sub
jae
pop
sub
push
inc
movsb
mov
ljmp
sbb
addb
xor
pop
mov
sub
aam
dec
or
insb
adc
data16
fnstcw
orl
mov
pop
add
fbld
fcmovnbe
add
insb
mov
inc
jno
pop
and
and
mov
lds
dec
cwtl
mov
push
jae
mov
jmp
js
into
lcall
lret
xchg
mov
idiv
fstpl
aaa
mov
or
add
jp
push
das
xor
mov
xchg
xor
icebp
lds
cmc
std
and
pushf
stos
bound
insl
mov
popa
fldl
loopne
push
mov
iret
and
leave
call
cmpsl
inc
sub
jmp
push
push
jg
loopne
adc
das
js
dec
filds
mov
sub
pop
daa
inc
mov
adc
adc
ja
femms
jne
pop
dec
es
dec
adc
pop
or
out
inc
lcall
jno
std
mov
ja
inc
in
mov
xchg
les
xor
es
sbb
push
nop
jnp
mov
dec
mov
lods
mov
inc
and
ja
add
test
cmp
pop
mov
fs
sub
mov
rcrl
add
movb
ret
in
xchg
movsb
dec
rcll
mov
dec
sti
jnp
data16
loop
dec
sub
push
sub
jle
mov
movsl
lret
or
cwtl
add
jg
inc
mov
inc
jnp
cmpsb
hlt
inc
pop
inc
sarb
mov
shll
xlat
add
mov
cmp
imul
jg
xchg
nop
or
dec
inc
cmp
ror
loopne
movsl
sbb
fsubs
push
lods
inc
shlb
cmp
fwait
scas
fsubrl
mov
cli
xorl
pop
push
and
push
loop
cltd
insl
add
push
or
imul
push
pushf
repnz
pop
mov
int
fs
sub
rcrl
orb
cmc
xlat
xchg
adc
fcoms
cmpsl
dec
and
mov
icebp
hlt
popa
sbb
jbe
je
inc
and
idivb
sarb
dec
mov
mov
in
bound
shl
jb
jno
inc
cli
add
pushf
sub
pushl
addr16
pop
or
leave
lcall
lcall
outsl
sub
into
shl
mov
in
lea
jnp
and
mov
mov
sbb
xor
sub
dec
leave
xor
add
lea
stc
or
mov
pop
xchg
ds
adc
outsl
inc
mov
dec
ss
fcoms
inc
push
dec
enter
ret
mov
pop
in
cltd
test
test
shlb
cmp
jecxz
adc
dec
in
adc
xchg
sti
mov
push
add
fidivs
ret
push
sti
cmc
jns
int
inc
cli
test
sbb
inc
fldl
push
xor
vpavgw
dec
aaa
add
push
stos
lret
iret
mov
movsl
add
mov
mov
jecxz
mov
mov
test
pushf
mov
sti
lock
cwtl
std
mov
mov
pop
dec
out
shrl
mov
lock
xchg
pop
js
fldenv
jb
mov
add
jb
movsb
and
cmpsl
scas
jl
sub
out
jle
ss
or
inc
jne
cmp
addr16
aas
sbb
dec
loope
sti
jae
ss
add
psadbw
lea
or
icebp
test
and
das
add
pop
mov
int
fsubrs
sbb
hlt
stos
pusha
cmpsb
xor
sub
ret
into
imul
shll
movsl
loopne
fldcw
shlb
iret
scas
push
xchg
mov
sub
xor
push
mov
sbb
loopne
sub
xor
jns
movsl
loope
inc
ss
adcb
cmp
decl
cmp
movb
arpl
daa
mov
aaa
call
pop
xor
std
adc
lcall
movsl
dec
fidivrs
mov
comiss
jge
fmull
adcb
arpl
xchg
dec
pop
leave
cmpb
dec
into
sbb
or
scas
xchg
or
lcall
daa
cmp
xchg
jmp
int3
roll
pop
jl
mov
sub
in
movsb
imull
cmp
dec
pop
xchg
mov
sbb
pushf
fnstsw
cltd
sahf
push
mov
inc
loopne
push
xchg
fincstp
sub
imul
repnz
test
loope
decl
imul
test
adc
testl
adc
mov
pop
sbb
mov
and
cmp
xor
testl
lods
and
mov
les
jmp
cld
js
sub
rolb
pop
xor
cld
jge
test
loopne
cmp
rcrb
scas
sahf
jge
mov
frstor
int
add
push
ljmp
or
lret
sbb
movb
das
jnp
adc
repnz
mov
movsb
cmp
push
sbb
push
out
jno
mov
cmp
loope
xchg
subl
xor
sbb
mov
and
aas
pushf
mov
cmpsb
sub
and
shl
arpl
xchg
add
push
out
inc
lret
pop
jmp
inc
add
push
movsb
jae
mov
mov
push
cmpsl
adc
fimull
in
cmp
decb
repz
out
add
hlt
mov
mov
sbb
insl
fldl
mov
mov
out
out
loope
rcll
mov
jae
test
push
lea
xchg
sbb
cmp
adc
pop
mov
jns
jne
mov
xchg
cld
test
xor
adc
sbbl
adc
inc
or
lret
jmp
sbb
out
imul
jl
mov
cli
mull
or
adc
xlat
sub
sbb
insl
icebp
scas
neg
negb
adc
mov
call
out
ret
lea
pop
shll
add
out
sub
push
popa
sub
sbb
xchg
cli
cld
lcall
mov
inc
fucomp
insb
xchg
mov
mov
test
out
ljmp
js
jecxz
jecxz
out
call
adc
mov
std
mov
pop
adcb
fs
and
je
aas
pop
xor
outsl
shrb
dec
imul
lahf
push
jl
ret
xor
jb
pop
das
xor
int
jp
lcall
dec
arpl
mov
jp
pop
adc
cwtl
lret
adc
aas
adc
mov
rdmsr
movsl
les
jnp
pop
and
lds
mov
pop
push
lret
loopne
or
xchg
jg
mov
add
jl
mov
push
cmp
cmp
jge
outsl
mov
dec
jne
inc
xchg
adc
cmp
out
test
adc
fcoml
mov
call
enter
sub
stc
fs
mov
int
pop
xor
mov
lret
and
dec
aam
add
adc
add
out
dec
sbb
xor
dec
sahf
cmpsb
subl
pop
mov
mov
lcall
arpl
in
jnp
jo
mov
repz
test
ftst
insl
mov
aas
sub
dec
dec
dec
movsb
or
xor
adc
jnp
movsl
dec
adc
mov
and
inc
out
and
aas
nop
dec
mov
outsb
push
inc
mov
inc
jns
out
nop
inc
dec
lret
add
sahf
inc
xor
add
stos
or
es
lret
mov
adc
test
shl
xor
add
fisttpll
and
add
adcl
inc
aas
ds
cmp
out
mov
xchg
shl
movl
addb
daa
fwait
and
mov
ja
dec
popa
arpl
cmpl
ljmp
cmp
jmp
cmpsb
aad
test
inc
loope
popf
daa
mov
mov
lret
sub
mov
arpl
imul
enter
jne
adc
mov
cmpl
imul
test
xchg
dec
xor
fmull
and
cmp
xor
ja
loopne
mov
or
pop
jnp
inc
xchg
sbb
stos
xor
mov
and
bound
imul
xor
xchg
xchg
and
mov
rcrb
mov
enter
xchg
daa
ror
adc
cld
pop
outsb
inc
mov
jp
insl
adc
mov
into
sub
or
mov
push
testl
ds
pop
mov
cmp
sbbl
stc
outsl
pop
into
stc
out
pop
imul
shl
mov
lods
sub
aas
adc
xchg
imul
sbb
jae
nop
pop
insl
push
jae
mov
pop
outsl
std
inc
or
mov
push
out
roll
add
mov
and
xchg
mov
mov
or
rol
out
sbb
push
js
cmp
movsl
xchg
in
rol
mov
test
push
pop
inc
inc
jnp
cltd
lahf
js
lds
popf
in
push
and
imul
jno
fwait
ljmp
popa
pop
into
imul
outsl
dec
std
jae
pop
out
sub
xchg
cmp
rorb
push
add
jae,pt
mov
mov
lds
jle
leave
push
fdivrp
out
xor
pop
pop
add
ror
add
sahf
pop
aaa
mov
jecxz
and
gs
xchg
adc
dec
ret
adc
icebp
movsl
cld
fsqrt
pushf
arpl
inc
add
movsb
out
inc
push
in
pushf
mov
das
sub
mov
fwait
leave
add
int
jns
mov
add
aad
sub
aad
mov
out
movsl
data16
test
inc
push
jnp
pop
movsl
sub
imul
sub
push
mov
scas
adc
push
aad
icebp
out
xlat
jne
in
fisubs
or
ja
mov
jecxz
rolb
sbb
xchg
test
or
mov
mov
cmp
and
push
roll
jns
xor
push
addb
lea
push
outsb
push
arpl
and
pop
loopne
and
pop
cs
or
adcb
aam
jmp
jne
and
jecxz
outsb
shrb
xlat
push
loop
pop
lret
frstor
add
in
addl
xchg
push
cmpsl
mov
xlat
scas
sbb
dec
int
pusha
xchg
xchg
jecxz
pop
test
mov
mov
dec
inc
mov
mov
adc
jne
outsb
xor
adc
and
jle
jmp
jbe
pop
nop
int
push
fwait
mov
sbb
lds
into
cmpsb
repnz
add
bound
pusha
imul
lea
decl
fldcw
lea
xor
aad
dec
sub
nop
jle
out
add
push
test
adc
or
or
pushf
mov
dec
pushf
jmp
lods
and
xchg
xchg
xor
fdivs
pushf
mov
mov
pop
push
lahf
jge
push
test
fsubrl
fisubrl
jp
daa
pop
in
inc
mov
stos
pushf
mov
mov
sub
ficompl
pop
pop
mov
divl
or
push
xor
xor
mov
test
xchg
jae
pop
mov
fists
xchg
ss
cmp
dec
popa
adc
call
mov
mov
mov
and
bound
dec
dec
push
rol
mov
sbb
dec
xlat
movsb
outsb
loop
sbb
and
jle
rol
jmp
call
es
arpl
add
es
fst
in
push
std
or
mov
xchg
lcall
insb
rcrb
sahf
ret
mov
cmp
into
push
sti
jp
adc
hlt
sbbl
pop
add
dec
adc
pop
bound
jo
xor
mov
xor
out
ret
pop
sbb
inc
pushf
rolb
pop
das
shrl
sahf
push
loope
mov
insb
imul
andl
xchg
jae
or
mov
adc
rorl
aam
inc
bt
mov
jp
movsl
or
pop
aaa
dec
fcmove
push
loope
fcompl
inc
pop
aad
dec
or
out
fneni(8087
jnp
sbb
adc
and
pop
pop
sub
inc
leave
test
fistl
dec
lds
fsubr
pcmpeqw
dec
inc
and
lret
push
cmpsl
add
ja
stos
sub
xor
inc
and
cmpsb
cltd
ret
into
push
outsb
mov
or
sbb
test
push
into
dec
divb
jmp
and
cmp
stc
aas
mov
mov
stc
mov
lods
ds
outsb
dec
outsl
in
decl
into
out
cltd
mov
or
pop
divb
and
inc
sarb
xchg
sub
push
push
inc
into
jns
mov
sbb
ret
ss
mov
lahf
mov
fadds
insb
in
cld
sub
push
mov
imul
out
stos
iret
push
sub
sahf
arpl
cmp
popl
sahf
add
int3
insb
pop
loope
cmp
enter
arpl
scas
xchg
mov
sbb
pop
inc
sbb
in
rol
mov
int3
inc
mov
pop
outsl
cmpsl
adc
movsb
cltd
xchg
out
fsubl
pop
mov
pop
addl
push
scas
cmpsl
mov
add
push
mov
fsts
fadds
add
addl
popa
subb
and
sbb
and
in
leave
orb
push
pop
scas
out
and
inc
movsb
inc
insb
test
fcmovnbe
shll
push
in
push
addl
in
xchg
lret
insb
fsubrs
xchg
mov
fimull
aad
and
mov
dec
pop
out
rclb
sub
iret
cltd
into
aas
inc
and
pop
fnsave
es
repz
mov
xchg
add
xchg
pop
xor
pop
jae
fsubrl
cwtl
sub
stc
jge,pt
mov
daa
mov
or
jno
les
addb
adc
testl
cltd
sti
dec
aas
push
inc
icebp
data16
xchg
cltd
leave
int
lcall
push
mov
push
hlt
pushl
std
aad
cmp
xor
cmp
push
jno
mov
adc
shl
inc
cmp
sub
iret
aaa
mov
mov
jb
xchg
mov
in
mov
sub
loopne
jae
vcvtqq2ps
ror
mov
enter
in
cmpsl
nop
dec
add
xchg
pop
cltd
or
inc
inc
dec
enter
pop
std
shll
cmpsb
mov
cmp
in
sbb
mov
scas
imul
std
xchg
test
or
push
mov
add
push
or
je
cwtl
into
xor
mov
lret
push
mov
lahf
aam
hlt
cmp
push
pop
gs
mov
push
shrb
sub
inc
out
lret
iret
stc
lds
mov
movsl
popa
xor
int
ret
add
or
mov
jg
push
and
mov
dec
jmp
add
dec
sbb
xor
dec
add
es
jb
jecxz
mov
sub
jo
jp
push
push
mov
or
dec
pop
add
push
cmp
push
leave
dec
orb
addb
cmp
jbe
cmpsl
lahf
pop
test
adc
or
out
push
add
cmp
flds
sub
test
adc
ja
dec
sbb
jae
adc
push
pop
incl
test
mov
rorl
adc
xor
inc
lret
add
adc
outsb
pusha
inc
test
cmp
xchg
cmc
add
and
jb
add
test
test
imul
std
cmp
xchg
cmp
cmpsb
and
add
and
push
push
mov
mulb
aas
ss
nop
les
inc
sub
cmp
loopne
sahf
dec
leave
or
xchg
xor
cs
mov
rcrl
pop
stos
jg
add
leave
pop
push
dec
in
and
lock
icebp
pop
test
cltd
mov
repnz
xchg
xor
sub
add
dec
ret
jnp
jae
mov
fsubl
mov
cwtl
or
sub
add
lret
jo
mov
dec
xchg
mov
lods
cmp
ljmp
in
loopne
inc
cmpb
lds
enter
jmp
mov
push
xchg
cld
sub
or
insl
cmpsb
inc
loope
aam
pop
mov
idivl
pop
cmpsb
inc
pop
clc
sbb
icebp
negb
push
inc
fucomi
in
sarl
cs
fs
lock
xchg
ja
mov
js
push
inc
push
cmc
repz
out
pop
pop
or
push
clc
scas
xor
shlb
pusha
int3
inc
cmc
lcall
ret
and
imul
xlat
js
xchg
sbb
or
sbb
cld
xor
insl
les
push
inc
cmp
cmp
leave
and
insb
add
xor
cli
push
subb
popaw
mov
inc
cmp
loop
xchg
sahf
jecxz
jmp
adc
cmc
stc
movsb
cmp
push
out
fadds
adc
add
sub
movsl
or
popa
pop
insb
ror
and
push
cmp
or
cwtl
xor
je
mov
push
mov
sub
xor
or
xor
sbb
rcrl
xor
or
mul
aas
test
aas
mov
ljmp
pop
mov
push
adc
fiaddl
adc
pusha
and
dec
xor
jge,pt
inc
aad
cwtl
pop
popf
cs
push
divl
ds
inc
sub
in
rolb
mov
pop
push
cli
fiaddl
rcrb
and
sti
repnz
inc
dec
ljmp
lock
jnp
lahf
jmp
jae
sbb
mov
addr16
fidivs
lock
repz
cmp
leave
push
push
cs
into
mov
lret
pop
repz
jbe
pop
aad
stos
lcall
add
jnp
cmp
mov
dec
pop
cmp
jae
fs
push
loope
movsb
ret
jno
add
jnp
dec
clc
loope
mov
ret
out
xchg
fs
jg
inc
sti
add
test
arpl
mov
inc
push
jmp
pop
loope
xchg
sub
in
dec
fld
push
fs
pusha
fldcw
or
and
fcmovbe
repnz
test
imul
sub
in
push
fsubl
pop
or
add
lods
pop
cld
cmp
mov
pop
aaa
insl
pop
inc
mov
sub
ret
push
or
mov
inc
adc
mov
push
in
dec
xor
in
jne
sub
jge
insb
cmpsb
xchg
in
ret
bound
stos
or
mov
aad
cli
cmpsb
push
lods
aam
rcrb
xchg
inc
out
cmp
out
pop
inc
lds
bound
outsb
fcmovb
and
push
sub
out
add
imul
xchg
push
xor
add
jae
mov
xor
xchg
cmp
jno,pn
xchg
mov
sahf
and
pusha
data16
out
fsubrp
xchg
aaa
bound
mov
and
jmp
sbb
cmp
pop
int
xor
dec
addr16
aad
pop
test
or
pop
inc
jb
mov
mov
fmuls
daa
popa
jns
rolb
cltd
lods
lea
add
mov
ljmp
mov
cmp
push
push
mov
pushf
ss
test
jae
out
push
in
xor
orb
jge
push
sahf
xchg
or
and
push
and
ds
pushf
mov
shrb
sbbb
xor
xchg
rorl
sahf
add
inc
and
add
cld
arpl
push
loopne
insb
loope
movsb
inc
dec
cmp
push
pop
inc
pop
test
or
loopne
addl
jo
xchg
scas
adc
lret
push
je
cmpsb
jmp
aaa
push
adcl
add
popa
adc
pop
jae
lcall
enter
jg
add
les
fdivrs
xchg
inc
push
lcall
cmp
add
loopne
jb
pop
in
xor
outsl
push
sbb
mov
call
andb
ret
inc
fcomp
leave
inc
pusha
xchg
sub
jne
or
ss
xchg
clc
push
mov
mov
pop
inc
dec
pop
xlat
ljmp
or
xchg
mov
ret
mov
push
test
xor
xchg
pop
add
pop
es
dec
jp,pt
roll
mov
mov
in
shll
sub
addb
fsubrp
scas
xor
xor
add
jae
loop
loope
call
xchg
stos
pop
inc
ljmp
scas
mov
mov
mov
imul
dec
fdivrs
inc
cld
hlt
inc
mov
scas
and
add
dec
adc
jne
lcall
xchg
push
loope
idivb
stos
popa
cmp
subl
and
cmp
int3
lods
and
test
jmp
stos
mov
dec
out
js
stc
mov
rcrl
xchg
mov
mov
cld
popf
lods
lret
mov
jmp
sbb
aas
testb
xchg
push
xchg
xchg
outsb
sub
mov
data16
mov
addl
or
lret
fs
jmp
sarb
mov
pusha
pop
push
mov
adc
cmpsb
mov
shl
fwait
icebp
mov
pop
xchg
sub
cmpsb
pop
out
stc
sahf
fisttps
stos
dec
xorb
push
in
cmp
adc
pop
cmp
and
sub
adc
out
push
inc
push
adc
xor
push
dec
adc
int3
data16
inc
movsb
aam
jmp
mov
sbb
repz
pop
dec
out
insb
leave
cmp
and
icebp
insb
sub
aas
add
in
dec
sar
cmp
shlb
ljmp
jno
sub
mov
mov
in
movsb
sub
clc
inc
inc
repnz
add
icebp
dec
pushf
fstp
repz
rclb
fistpll
sub
adc
sahf
rep
popa
sub
push
data16
fadds
out
ds
test
inc
xor
pop
dec
pop
leave
mov
mov
mov
cli
mov
jle
push
push
in
aaa
jle
mov
out
mulb
xchg
and
dec
in
lods
lods
imulb
int3
pop
testl
ljmp
add
int3
sub
js
add
les
push
cmp
push
jbe
je
jmp
lock
pop
lock
add
fcompl
addb
push
cltd
in
inc
jb
inc
test
mov
nop
repz
out
addr16
jbe
inc
mov
dec
leave
inc
mov
push
mov
movsb
push
mov
push
jb
outsl
push
or
aad
in
xchg
pop
test
xor
rclb
xor
leave
enter
push
fs
inc
jae
add
and
stos
sub
fcomps
clc
ja
cmpl
and
lret
subl
xchg
mov
scas
pop
push
frstor
outsb
or
inc
jp
mov
mov
jns
jno
xor
in
jecxz
cli
pop
jg
outsl
adc
lea
mov
sbb
mov
jo
xor
test
cmpb
mov
sbb
push
stos
adc
adc
mov
orl
and
outsb
mov
sbb
or
stos
fistl
out
movsb
mov
lret
sub
and
pusha
sub
or
mov
pushf
popa
fnstenv
mov
je
mov
pop
adc
loopne
jl
lret
ret
xor
fnstenv
adc
push
lret
or
xor
jl
cmpsl
mov
movsb
ret
aad
add
dec
mov
fbstp
push
out
push
movsl
push
sbb
push
ja
push
gs
jmp
pop
push
cli
dec
lods
rclb
out
push
mov
in
ret
fisubrl
fidivs
mov
xchg
shr
sub
dec
pop
cmp
test
fldenv
add
jne
mov
push
sub
addr16
jecxz
loope
mov
jnp
arpl
leave
mov
rcrb
cmc
inc
inc
cmovnp
negl
and
push
cmp
or
mov
mov
gs
fbld
pushf
insb
fisubl
xchg
or
sarl
jnp
and
clc
mov
rorb
pop
mov
lods
lods
sub
pop
mov
scas
imulb
and
fldl
test
call
adc
jle
add
xlat
les
inc
xchg
rorl
test
jge
ja
xlat
lret
xchg
pushf
and
push
fcomp
dec
ja
dec
cmp
cld
dec
insl
ja
mov
jne
mov
mov
scas
and
adc
adc
add
scas
push
neg
jmp
repz
shrb
fnstsw
sub
jmp
inc
sub
fstpl
enter
outsl
sbbb
or
es
push
pop
mov
in
arpl
pop
sarl
xlat
push
idivl
push
sub
into
repz
lret
test
icebp
ljmp
fistpl
dec
test
in
daa
popa
andb
adc
add
addb
out
pop
daa
cmp
pop
pop
shlb
xchg
lds
xchg
fmul
dec
into
pop
pop
jge
in
dec
arpl
sub
mov
sub
add
out
icebp
fsubs
ficompl
sub
dec
loope
xor
push
imul
xchg
add
sub
je
pop
pop
dec
lahf
add
adc
popf
mov
push
popf
loope
addr16
stos
xchg
shl
lahf
pop
in
adc
mov
dec
insb
mov
xchg
test
sbb
loopne
pop
adc
clc
shrl
ffreep
inc
push
test
ljmp
push
fs
test
mov
jns
or
cmc
push
and
popa
test
xor
lods
adc
pop
stos
push
testl
lds
pop
loope
fwait
cli
ret
pop
test
mov
loope
test
lahf
cmc
xor
aaa
mov
cltd
cltd
dec
mov
enter
jb
popa
inc
fisubs
or
push
addr16
pop
lods
cmp
xor
les
pop
cli
jnp
mov
shrl
aam
aad
jnp
out
sbb
stos
scas
jnp
dec
clc
xor
and
cltd
fucomp
popf
dec
dec
int
mov
out
mov
ret
jb
lret
sub
stc
pop
out
in
push
xor
gs
fnstenv
ret
repz
xchg
movsb
and
pmaxsw
sub
es
add
repz
push
shlb
jb
movsl
pop
pop
mov
mull
or
mov
mov
adc
call
xchg
fdivl
dec
js
loope
addr16
fcompl
push
int
or
mov
ficomps
mov
jp
roll
stc
and
aas
inc
mov
pop
fisttpl
jg
lret
test
and
xor
pop
bound
pop
test
mov
jge
mov
inc
loop
inc
dec
add
and
pop
xor
cmp
je
rclb
jp
mov
jno
add
ss
and
stc
sar
inc
dec
mov
lcall
inc
mov
mov
push
scas
shlb
mov
adc
inc
ret
out
fldcw
pop
lods
data16
clc
je
aam
clc
sbb
sub
leave
add
sarl
fs
popa
mov
stos
mov
xchg
aad
fnstsw
xchg
xchg
push
lahf
xor
insl
lahf
test
jns
cmp
sub
xchg
pop
cs
push
pop
out
das
inc
sbbb
mov
sti
in
push
dec
mov
int3
inc
xor
mov
adc
lret
xlat
pop
add
hlt
mov
xchg
xor
push
in
ficompl
test
enter
test
add
aad
or
sbb
aad
shlb
inc
jmp
mov
gs
push
sti
push
loope
pop
inc
mov
aas
nop
sub
mov
xchg
in
fisubrs
fnstcw
jp
sti
sbb
pop
cli
lcall
push
add
dec
testl
adc
movsl
icebp
insl
xchg
xchg
int3
sbb
outsb
mov
test
addr16
xchg
jmp
dec
adc
dec
or
mov
cld
lds
or
pop
mov
jmp
imul
mov
call
adc
test
xchg
push
mov
lret
mov
enter
sti
xor
xchg
int3
xchg
push
xlat
fbstp
int3
push
daa
mov
or
ljmp
sbb
icebp
pusha
dec
and
jl
jns
fs
push
pop
inc
push
xor
mov
jo
stos
jmp
push
nop
out
mov
push
and
stos
lods
sbb
les
test
mov
decb
jp
cmp
call
xchg
mov
xchg
sarb
fisttps
in
pop
test
pop
stc
and
cmp
adcl
pop
jg
cld
subps
adc
lret
push
imul
mov
push
mov
call
mov
stc
jmp
mov
pop
scas
sub
inc
pop
dec
sti
cmp
adc
pop
mov
pop
cmpsb
jns
push
sub
or
adc
mov
dec
lods
adc
imul
into
add
mov
or
call
dec
jecxz
xchg
rcll
xchg
push
jecxz
arpl
add
movsb
sbb
rorb
dec
aad
outsb
push
lea
mov
or
mov
clc
push
jecxz
stos
or
cmp
pop
cli
mov
xor
lock
push
xor
orl
js
push
add
add
or
lahf
mov
lods
shll
hlt
jge
int3
aaa
mov
sub
sbb
mov
lahf
lcall
pop
aad
cmp
das
inc
mov
xor
out
sbb
add
adc
sbb
adcl
test
in
test
jmp
out
pop
arpl
fsub
adc
mov
and
dec
fcomp
addr16
xchg
xchg
cld
stc
inc
je
fisubl
stos
into
imul
jge
into
shl
loope
test
add
ds
ss
mov
adc
mov
push
ror
jb
sub
mov
es
stos
or
dec
dec
mov
hlt
insb
jge
movsb
mov
gs
bound
enter
repnz
jbe
movsb
aas
mov
adc
dec
dec
jp
mov
mov
cmp
stos
sbb
fs
sbb
movsb
jp
sub
dec
push
push
mov
jbe
sub
adc
cs
fnstcw
lods
add
movsb
std
inc
rep
cli
js
cmp
lods
jae
rcll
cltd
inc
cmp
stos
xchg
jno
es
xchg
cmp
repz
adc
and
das
dec
push
lahf
aam
out
jne
loopne
scas
mov
push
jmp
div
fdivl
fstpt
loop
sbb
lcall
cmp
call
mov
dec
jo
stos
xchg
xchg
inc
stc
je
subl
or
or
lahf
or
mov
lcall
or
lds
test
add
popa
std
mov
jo
sub
sub
jp
icebp
rorb
sbb
cmp
add
jno
mov
and
xor
mov
inc
lock
cmp
jno
hlt
test
mov
sub
jle
xchg
ss
dec
sahf
mov
cwtl
sub
pusha
les
daa
pop
lahf
push
lcall
cs
push
icebp
xor
ror
push
lahf
lock
mov
cmpb
mov
movsb
pop
add
pop
hlt
push
repz
and
mov
stos
xchg
test
pop
dec
xchg
sbbl
insb
xor
icebp
inc
arpl
ja
sbb
xor
cmp
push
push
sbb
out
pop
cmp
fmull
out
jmp
or
sub
ljmp
scas
sbb
movsb
xlat
imul
lcall
cli
gs
mov
pop
and
fldenv
mov
outsb
inc
mov
or
cmp
enter
xor
in
pop
inc
out
cli
jnp
mov
xlat
mov
sti
adc
addr16
and
jg
adc
dec
push
jnp
mov
fwait
repnz
xlat
mov
inc
adc
fsub
lret
inc
jg
xorl
xor
adc
fistpl
add
push
in
lahf
cmp
mov
nop
xor
push
jnp
fisubs
xlat
shll
jae
loopne
std
mov
mov
movsl
xor
outsb
xchg
test
popa
dec
push
xchg
out
sbb
sbb
aam
push
cmp
test
mov
jge
loopne
push
sub
popa
cwtl
mov
cmp
sub
stc
pushf
cmp
lods
jo
adc
enter
push
inc
cmpsb
inc
dec
shlb
dec
mov
dec
sub
inc
in
add
andl
adc
sub
jge
clc
push
dec
dec
dec
adc
jae
clc
mov
jecxz
mov
incl
cmp
loop
ficomps
es
cmp
inc
in
mov
sub
in
imul
xchg
repz
int3
popf
fnsave
or
hlt
push
out
cmp
cmp
or
cmp
sbb
xor
mov
sti
insb
add
repz
rcrb
fdivrp
addl
push
or
or
notl
jb
cmp
cmp
inc
xorl
mov
xor
outsb
arpl
pop
mov
xor
or
mov
nop
cs
cmp
pop
pop
pop
js
pop
sahf
jbe
cmovo
stos
sub
sub
cmp
push
stos
into
dec
adc
inc
fstps
mov
cs
sub
sub
adc
sub
aam
movsb
ja
sub
fxch
stos
je
lret
stos
jmp
cwtl
mov
repz
mov
sbb
insl
sbb
mov
mov
jmp
mov
cmp
mov
lcall
out
fwait
jp
mov
mov
dec
fwait
pushf
xor
adc
mov
mov
push
or
add
cld
dec
stos
dec
fucomi
mov
xchg
nop
pop
xor
dec
jmp
cmp
push
push
or
push
les
inc
cwtl
stos
sub
sub
xchg
cli
mull
sub
mov
sbb
sub
pushf
icebp
mov
mov
in
stc
jne
fadds
dec
add
mov
lret
jae
inc
sbb
or
gs
mov
cmpsl
mov
sahf
jmp
xchg
sub
leave
pop
cmp
mov
loopne
push
mov
mov
lcall
jbe
les
movsb
mov
outsl
xor
aad
mov
movsl
mov
or
jne
notl
mov
inc
popf
lods
mov
xor
sbb
mov
mov
fisubrl
adc
ret
pop
fsubrl
shr
pushl
xor
add
jno
inc
jle
cld
xchg
sub
xor
sbb
or
add
xchg
adc
scas
rorl
mov
enter
in
xchg
or
mov
mov
cmp
adc
rcrb
es
sbb
pop
jae
sbb
pop
insb
addb
sahf
loop
ja
add
sbb
push
sub
mov
insb
lahf
mov
push
mov
jb
mov
mov
cli
add
or
ljmp
sub
mov
jns
enter
xor
jb
mov
inc
nop
mov
andb
dec
popl
mov
push
in
push
pusha
mov
out
sahf
dec
mov
mov
and
std
cmp
popa
mov
pop
inc
adc
inc
xor
or
sbb
popa
push
pop
ds
sbbb
pop
mov
mov
es
cmp
test
push
in
cwtl
adc
sub
clc
ficomps
shrl
pop
dec
movsb
pop
xchg
pop
mov
inc
jp
fwait
push
sbb
jp
push
mov
mov
mov
out
clc
cld
insl
and
xchg
fisubrl
outsl
cmp
pop
fcmovu
push
jg
cmp
add
mov
sub
shrl
aas
and
testb
or
leave
cmc
ljmp
cmp
adc
add
int3
dec
jecxz
outsb
push
in
inc
mov
popa
dec
xchg
jecxz
dec
or
mov
and
cmpsb
mov
imul
mov
xchg
pop
mov
mov
push
pop
sub
pushf
testl
mov
push
idivl
lods
ret
xlat
xchg
mov
in
lfs
in
fcom
jmp
push
push
or
icebp
aad
jecxz
jns
adc
aas
fsubl
sub
pop
pop
dec
dec
jecxz
lea
nop
sub
and
mov
add
pop
inc
sub
ljmp
shll
xlat
sub
cmp
pusha
mov
scas
adc
iret
popf
mov
pop
js
jmp
sbb
cmp
sub
adc
out
sahf
out
cmp
pushf
cmp
cli
pop
mov
xor
filds
arpl
and
inc
sbb
imul
fwait
loopne
lods
xchg
out
dec
cmpsl
aad
addr16
mov
stos
sub
and
ficomps
ds
sbb
popf
mov
ljmp
loop
aaa
stos
fistl
xor
mov
adc
push
inc
bound
out
pop
push
rcr
addl
jp
pop
fmul
call
jns
test
mov
add
js
lahf
mov
adc
testb
and
inc
xchg
cmp
cmc
sbb
xorb
mov
xor
add
pop
dec
pushf
ret
out
jle
imul
mov
fwait
push
or
aad
andl
fwait
jbe
loop
dec
ret
push
inc
mov
out
cmp
mov
mov
out
in
shll
add
cmp
fisttpll
push
xchg
add
js
adc
lret
xchg
adc
lret
dec
mov
push
inc
test
dec
adc
ret
mov
mov
scas
adc
push
icebp
adc
jl
ja
imul
mov
sub
das
cmp
xor
sub
mov
movsb
sti
mov
pop
jne
push
pop
dec
mov
icebp
mov
xchg
mov
mov
call
push
lds
lret
popf
push
cld
jle
in
xor
enter
pop
add
outsl
inc
sub
call
enter
inc
sub
out
push
xchg
shll
jbe
adc
int3
xor
and
xchg
lcall
insb
cmp
dec
mov
mov
push
roll
sbb
pop
pop
divl
pop
add
imull
rorb
xor
jb
fldl
rclb
ss
push
adcb
stos
in
pop
xor
mov
aad
mov
inc
xchg
mov
rorl
add
ljmp
push
ret
jne
push
cs
sub
fwait
push
mov
cmp
stc
mov
stos
mov
xchg
cmpsl
mov
cmp
or
mov
push
loop
daa
cmpsl
sbb
push
cmp
shll
adc
dec
inc
test
dec
add
mov
mov
jge
arpl
mov
ds
mov
inc
rcll
mov
add
cld
pop
cld
dec
test
add
mov
jp
cmpsb
push
push
dec
btc
mov
insb
cmp
bound
pop
loope
hlt
jmp
mov
daa
xor
lds
fs
xor
or
mov
mov
push
mov
xchg
mov
stos
dec
push
xor
or
fwait
or
sbb
shll
jg
cltd
rclb
test
xor
sub
sbb
xor
out
int3
inc
or
lds
inc
jp
mov
mov
hlt
fisttpll
xchg
js
mov
fistps
jbe
out
mov
adc
ds
sbb
out
ss
stos
and
or
lock
lds
adc
adc
dec
cltd
mov
test
out
mov
and
mov
frstor
outsb
fwait
and
int3
inc
imul
jmp
outsb
pop
xor
aaa
cmp
or
dec
lret
loopne
movsb
lods
or
adc
popl
pop
mov
push
je
call
pop
mov
adc
fdiv
insl
fwait
pop
data16
subb
in
out
add
dec
in
push
lret
add
outsb
scas
daa
jae
mov
in
adc
jg
jmp
out
in
sbb
scas
pop
inc
xchg
inc
fs
lea
push
loope
jle
mov
add
ror
adcb
shlb
adc
push
repnz
sub
jne
into
jl
push
inc
fyl2x
shll
and
or
inc
or
adc
dec
clc
adc
pop
push
faddl
xor
jno
fistpll
and
or
xchg
pusha
cmp
xlat
and
add
xchg
rcrb
xor
inc
clc
add
adc
jle
loop
mov
jns
out
lea
cmc
and
xor
sub
mov
jo
mov
mov
lcall
pop
fldt
movsl
in
and
mov
add
dec
int3
mov
pop
cmp
jnp
addr16
jg
test
dec
cmpsb
stos
test
inc
mov
gs
das
mov
gs
xor
aas
loop
mov
mov
cli
je
pop
xchg
mov
cmpsl
shrb
sarb
xchg
dec
xchg
mul
xlat
shl
xchg
movsl
push
cmpsb
sahf
mov
mov
and
in
xchg
pop
sbb
aas
gs
jmp
repz
orl
out
hlt
adc
pop
fldl2e
repz
imul
cli
es
xor
mov
add
pop
pop
xchg
fs
adc
daa
xchg
jmp
jge
or
cmpsb
jmp
mov
popa
pop
repz
jge
sarl
cmpsb
sahf
mov
leave
mov
mov
imul
mov
aas
jl
jb
sbb
mov
cmp
repnz
sbb
inc
les
lahf
cmpsb
push
push
mov
out
xchg
add
mov
jle
push
cmc
xchg
std
in
or
and
int
pusha
mov
ss
rcrb
adc
add
lds
sub
push
divl
repz
jge
xlat
mov
lret
movsb
enter
paddusb
mov
jmp
xlat
mov
jns
push
xchg
push
in
lret
push
je
sbb
enter
mov
sbb
in
pop
test
xor
and
adc
bound
popf
or
push
mov
or
addps
and
fwait
jo
mov
cmp
jb
mov
xlat
iret
mov
xorl
mov
in
cli
inc
and
xor
test
push
dec
inc
hlt
cltd
imul
mov
or
adc
sub
sbb
lods
push
sarl
packsswb
mov
cwtl
cs
popl
andl
pusha
mov
sub
imul
inc
cmc
test
into
pop
sahf
dec
xchg
inc
mov
dec
scas
inc
sub
int3
inc
pop
mov
mov
mov
movsl
cmp
pop
sub
fwait
shl
outsb
cmp
or
push
hlt
jg
push
das
subl
popl
xor
push
xchg
pop
in
ss
ret
xor
in
mov
aas
cmc
cld
mov
sbb
mov
dec
iret
and
cwtl
imul
ljmp
add
lret
data16
or
xor
push
adc
sub
mov
dec
sub
daa
push
insb
or
push
dec
xchg
negl
addr16
ss
scas
jge
push
adc
fldl
and
imul
lods
pop
cmc
pop
xchg
inc
mov
je
das
je
sbb
xor
es
test
mov
push
jmp
orb
cwtl
xchg
mov
push
lret
imul
xor
adc
fisubrl
cmc
pop
or
lods
adc
fsubrs
adc
pop
cmpsb
hlt
inc
out
in
addr16
rclw
insb
xchg
outsb
stos
and
outsb
stos
aam
and
popa
call
mov
mov
jno
xor
lods
or
in
andb
or
mov
sbb
push
mov
push
iret
mov
lret
out
ret
mov
rclb
dec
inc
sar
mov
lds
inc
mov
and
imull
xlat
test
push
shll
cld
aaa
jno
mov
or
in
jae
movsb
ror
lods
cmp
shrl
js
call
lds
decl
gs
xor
fsubr
test
sbb
fstp
or
or
cmp
and
in
xchg
shr
cmp
mov
mov
dec
adc
sar
pop
xchg
ret
test
xlat
insl
xchg
jno
outsl
push
nop
pop
mov
dec
or
iret
pushl
mov
movsb
aad
jns
adc
cmp
pop
test
cmp
dec
lret
jo
into
mov
test
out
push
pop
adc
fs
sub
jmp
clc
lret
sub
iret
popa
pushf
leave
add
les
int
fstpt
les
cmpb
push
xor
adc
xchg
popa
cmp
loopne
ret
mov
mov
xor
fsubrs
xchg
sbb
fdivrs
mov
fstpt
sahf
push
add
enter
mov
xchg
xchg
push
mov
pop
int3
lret
sub
outsl
roll
pop
push
pop
mov
fdivl
movsb
mov
push
mov
push
stos
fldl2e
mov
data16
mov
sti
mov
mov
loopne
push
call
or
jle
mov
hlt
cli
test
idivl
xchg
add
jp
out
push
outsb
es
xchg
mov
adc
push
and
sbb
data16
mov
cld
sbb
inc
fsts
outsl
cs
outsb
xchg
add
cs
cmp
jbe
xchg
pusha
bound
aaa
xchg
push
negl
sahf
xor
xlat
cltd
lock
addr16
dec
enter
in
fnsave
mov
cmp
orl
sbb
rcll
cs
jl
mov
push
call
out
xorb
push
push
pop
xlat
gs
fistpl
rcrb
add
pop
in
or
fstl
inc
mov
aam
ss
sub
push
dec
adcb
arpl
stos
sbb
adc
mov
jns
std
cmc
pop
arpl
nop
dec
scas
gs
sahf
mov
imul
mov
fldt
mov
cmpsl
shr
fs
pop
daa
rcl
jb
imul
dec
mov
hlt
cmp
mov
ja
cmp
cmp
push
arpl
pop
dec
jg
push
ds
mov
sub
repz
in
daa
jp
xor
shll
insl
fisubrl
mov
or
lahf
jae
mov
mov
out
in
mov
mov
push
sbb
movsl
adc
jge
shl
div
inc
jp
mov
xor
mov
ss
repz
pop
dec
out
test
daa
and
add
call
add
sbb
mov
stos
lods
mov
in
fimuls
rep
mov
mov
lret
mov
stos
sub
push
cwtl
in
xorl
jmp
out
adc
jne
pop
and
sub
es
cmpsl
loope
aas
cmp
ret
sbb
addr16
cltd
popf
jle
dec
imul
jb
jnp
jg
sbb
pop
dec
and
push
pop
pop
pushf
xchg
add
push
jbe
and
in
enter
fimuls
ret
and
cltd
mov
and
imul
sbb
mov
std
jne
popf
clc
dec
and
ret
jno
xchg
pushf
push
pop
pop
scas
test
std
subl
mov
jle
fldcw
int3
pop
stos
imul
sub
jbe
dec
push
ljmp
xor
xor
ss
call
enter
loop
adc
sbb
mov
jns
icebp
pusha
push
in
push
ret
mov
jmp
mov
sbb
and
mov
push
fsubrs
jp
aaa
ds
lret
xlat
or
sub
fadds
xchg
aad
lcall
cmp
adc
add
jns
shll
sbb
das
loop
jnp
jne
inc
in
mov
sbb
mul
aaa
mov
and
or
and
in
sbb
sub
xchg
xor
loop
pop
loope
lret
lret
shll
add
mov
mov
push
repz
out
pusha
jne
and
cmc
jae
popf
lock
hlt
movsb
in
scas
push
inc
fdivl
das
test
lds
mov
cmp
dec
cmp
and
in
pop
or
pop
inc
dec
sub
inc
xchg
xlat
xchg
hlt
xchg
sbb
sub
lock
fsubs
dec
dec
xchg
cmp
push
iret
inc
cld
mov
push
outsb
push
sub
iret
cmp
leave
movsl
cmpl
jmp
push
add
mov
pop
push
pop
and
daa
xchg
sti
lahf
and
bound
dec
jno
mov
xchg
gs
jmp
push
mov
mov
lcall
mov
inc
xor
faddl
mov
sbb
push
int3
push
mov
in
push
add
mov
cli
cmp
addl
mov
scas
out
arpl
aas
cmc
pop
std
mov
xor
xchg
sbb
pop
stos
mov
inc
add
subb
testl
cbtw
outsl
out
jo
sbb
cltd
js
lock
jnp
xchg
test
in
xchg
inc
jp
or
pop
popa
xor
sub
mov
jg
sub
and
cld
pop
loope
xchg
rcrl
ret
cmpsb
sbb
aaa
subl
xor
lahf
orl
push
outsl
stc
sbb
pop
jecxz
jmp
cwtl
dec
shrb
mov
out
stos
scas
sti
mov
jp
es
adc
divb
insb
mov
add
sub
fwait
cmp
xor
and
test
mov
stc
repz
rcl
inc
stc
call
push
xchg
dec
lahf
jmp
movsl
jns
into
mov
mov
cmp
adc
outsl
mov
out
push
not
fisttps
loope
inc
or
rorl
jg
stos
xchg
fadds
int
dec
xor
js
in
sti
or
outsb
repnz
cs
mov
xchg
sbb
ja
add
aas
leave
xorl
pop
enter
fcoml
fsts
push
popf
adc
es
jp
gs
mov
inc
xchg
idiv
hlt
xchg
pop
insb
fildl
jne
xchg
imul
inc
outsb
cs
out
dec
fs
sub
into
int3
test
movhps
aam
stc
in
test
faddl
inc
cmpsl
lock
cmp
adc
imul
lret
dec
mov
add
xchg
pusha
push
pop
push
lods
loopne
pop
or
sti
outsl
jo
outsb
sahf
ja
add
scas
ret
sub
inc
inc
push
mov
mov
outsl
adc
and
testb
and
mov
andb
pop
cmp
stos
mov
xlat
dec
cmp
scas
xchg
loop
push
jns
cmp
jmp
mov
mov
mov
pop
xchg
pop
bound
movsl
sub
lret
lret
sub
nop
je
pop
into
pop
jae
mov
or
cmp
fisubrl
mov
enter
testb
jne
lret
push
xchg
lea
push
fwait
inc
fwait
lea
push
mov
loope
in
loop
xchg
dec
dec
shlb
dec
stos
ds
adc
jne
bound
pushw
and
sub
push
hlt
pushf
bound
dec
pop
inc
aaa
insb
sub
lret
or
push
cmp
mov
es
mov
or
xor
push
nop
out
movsb
add
sahf
gs
popa
cli
mov
sbb
pop
inc
or
push
mov
xorl
xor
jne
inc
push
mov
cwtl
cld
lcall
sub
xor
sti
stos
pop
mov
cmp
mov
jmp
hlt
fwait
mov
in
jne
sti
xor
pop
sub
mov
movsl
in
sbb
mov
sbb
push
jnp
rolb
xor
mov
popa
cltd
leave
imul
pushf
and
sbb
cmc
cmc
cmp
pop
mov
bound
add
fsubs
fs
pushf
stos
mov
mov
fstl
inc
or
mov
cmpsl
xor
lret
cmpsl
rcrb
ss
sbb
mov
aam
mov
inc
stos
add
insl
lret
test
pushf
hlt
cmp
insl
lods
xlat
add
mov
push
test
aas
sahf
aad
pop
cmpsb
or
and
and
notb
test
cmp
les
ret
lds
cmpsl
and
pop
push
and
gs
cmp
push
push
cmp
adc
and
mov
adc
negb
out
push
mov
sarl
sub
lcall
and
ret
push
fnsave
iret
xchg
pop
mov
push
dec
pop
mov
arpl
cmp
lret
jle
orps
pushf
cmp
dec
and
and
mov
mov
and
pop
bound
rol
sbb
loop
adc
jg
aaa
push
cmp
jno
jge
jae
push
pushl
or
repz
adc
in
out
add
lcall
scas
pop
les
mov
sarb
and
push
daa
sarb
clc
pop
fidivrs
and
psrad
mov
and
cli
adc
mov
sti
push
ss
jmp
stc
and
jl
adcl
pop
popf
pop
jg
in
push
mov
push
fwait
add
fsubrl
lock
inc
dec
pop
insb
sbb
fiadds
pop
inc
test
cmp
std
push
aaa
aas
imul
cmp
mov
orb
mov
push
and
repnz
mov
cmc
or
repnz
push
push
or
addb
int3
add
inc
push
movsl
subb
adcl
movsb
sub
jnp
mov
lods
das
cmp
dec
call
imul
add
lcall
cli
ja
and
xor
icebp
push
lods
push
rcrl
bnd
xchg
mov
cmpsl
mov
mov
das
mov
pop
mov
or
push
lret
cmpsl
mov
cmpsl
mov
mov
push
xor
jle
inc
and
out
and
and
enter
and
add
jnp
mov
jne
jmp
vmovdqa
notl
xor
mov
or
out
ret
test
addl
fiaddl
inc
mov
ss
pop
ret
mov
pop
lret
and
mov
jecxz
push
aad
pop
or
in
aas
icebp
repz
xchg
les
dec
int
jge
xchg
sti
mov
ret
inc
rcrl
jae
inc
in
push
add
pop
je
pop
cmp
dec
mov
ret
xor
and
mov
ror
mov
fnstsw
jbe
ss
lock
add
mov
xchg
shll
popa
xchg
int
pop
lret
dec
xor
shll
pop
test
movsb
pop
adc
scas
nop
pop
adc
pop
out
xchg
in
mov
movsb
roll
dec
insl
mov
inc
call
xchg
shrl
popw
mov
int3
sti
mov
adc
mov
mov
std
jp
inc
fwait
test
lods
rcrl
imul
xor
adc
dec
dec
push
test
xlat
imul
shll
loop
pop
push
mov
xor
repnz
aaa
jo
or
jmp
add
ret
fistl
sub
imul
pop
out
subl
pop
jge
jbe
into
jle
xor
fimull
adc
sub
mov
adc
adc
aam
mov
mov
push
or
pop
lods
lock
pop
movsb
push
cmp
es
leave
loopne
cmpl
inc
das
fwait
xchg
and
sahf
movb
adc
add
mov
sar
fcompl
andl
inc
out
pusha
push
outsl
inc
dec
sbb
cmp
mov
loop
lock
xchg
dec
jge
mov
push
xlat
sub
mov
xchg
cmp
mov
dec
mov
shll
add
je
scas
sub
jno
cmp
int
imul
aas
push
inc
sar
out
movsl
daa
into
pop
push
into
test
pop
pop
mov
cmp
cwtl
sbb
mov
cltd
es
mov
mov
xor
stos
xor
aad
inc
mov
hlt
pop
sub
ficomps
xchg
cmp
sub
jg
xlat
dec
daa
clc
or
pop
inc
or
or
push
sub
or
nop
test
jp
xchg
das
dec
xchg
fmull
je
cs
lods
pop
pop
xor
sub
xor
fcoml
insl
sbb
jp
inc
pusha
cld
outsb
or
inc
adc
scas
orb
scas
repz
cmp
mov
mull
cmp
test
loope
push
js
dec
shlb
fistl
int3
lods
jecxz
hlt
repz
dec
idivl
in
sbb
cmc
inc
or
addr16
jmp
sub
fidivrs
push
or
lret
add
into
lods
add
cmp
and
ret
cmp
aaa
inc
or
xchg
push
pop
adc
and
pop
inc
lea
sti
cmp
mov
xchg
mov
mov
dec
imul
imul
movb
inc
popa
cmc
sbb
inc
push
or
jmp
mov
inc
adc
xchg
xchg
jge
xor
pusha
inc
mov
or
lret
jle
cmpsl
popf
jl
add
call
and
add
pop
mov
in
dec
insl
js
loop
movsl
add
adc
add
xchg
or
jp
cmc
sub
repz
out
cmp
sbb
sub
stos
rcll
mov
adc
inc
pop
addr16
stos
jl
and
adc
jmp
pop
push
mov
fs
shl
cmpsb
std
dec
adcl
xchg
imul
cmpsb
scas
outsb
xchg
in
add
xchg
inc
inc
mov
push
mov
subb
hlt
pop
outsb
int3
cmpsl
ret
push
icebp
sarl
xor
nop
sub
adc
clc
push
inc
inc
nop
and
mov
sbb
push
sbb
and
insl
xor
or
add
inc
mov
out
push
ss
push
leave
scas
leave
shll
mov
cmc
sahf
cwtl
mov
pop
mov
pusha
lahf
xchg
dec
push
imul
std
push
aam
loop
mov
sub
sub
imul
xlat
mov
mov
cmp
jnp
test
cmpsl
and
xchg
pop
jmp
pop
adc
adc
push
lret
nop
or
dec
xor
cmc
lea
push
jnp
imul
mov
lcall
add
adc
stos
outsb
add
ljmp
and
xchg
mov
shrl
jle
jmp
daa
in
dec
cmpsl
pop
stos
ret
mov
out
pop
test
add
mov
dec
inc
sub
pop
je
int
daa
or
lret
sbb
or
stos
ja
repnz
adc
xchg
mov
cwtl
test
push
lret
test
sbb
or
adc
mov
loope
xor
rorl
inc
in
cmc
insl
popa
adc
sbb
mov
dec
fwait
lods
xor
push
mov
arpl
into
add
mov
enter
dec
cwtl
mov
pop
mov
mov
jae
sbb
cs
sti
in
out
xchg
mov
cmp
call
int
pop
leave
pusha
mov
dec
loop
xor
cltd
xchg
fcoms
sub
pop
sub
fsubrl
xchg
xor
mov
lods
and
mov
mov
stos
fstl
or
mov
jno
or
mov
mov
sarb
mov
xchg
and
out
mov
mov
cmp
xchg
inc
or
jno
sub
outsb
adcb
xlat
or
jb
adc
outsl
ret
cmc
xor
es
lea
stc
cwtl
out
test
shll
les
inc
mov
sub
fstp
mov
cmp
pop
mov
jo
aad
inc
and
push
es
pop
sub
popa
insb
loop
mov
das
aas
push
and
les
pop
stos
scas
movsb
lret
cmpsb
dec
sbb
xorb
mov
mov
pop
inc
mov
stos
cltd
es
sbb
out
scas
lods
sti
popf
dec
dec
mov
xor
pop
mov
push
bound
inc
sahf
sbb
movsl
and
mov
pop
push
push
cmc
mov
popf
sar
cltd
sbb
or
cli
jno
out
jno
mulb
mov
inc
adc
xchg
sarl
xchg
shl
icebp
lods
adc
add
test
lods
and
test
cmpsb
cs
mov
mov
add
hlt
fcomp
xchg
jl
mov
lret
xorl
dec
fsub
dec
jno
sbb
sub
jmp
orb
adc
xchg
mov
cmp
lock
adc
int
loop
lock
xor
mov
push
stos
popf
jne
mov
std
jmp
in
out
in
loope
xchg
in
pop
test
out
pop
mov
mov
test
fsubrs
cli
xchg
filds
add
lods
jmp
push
shrb
xor
mov
pop
mov
jae
xchg
testl
pop
mov
fistl
jbe
out
cmc
pop
push
cwtl
outsb
fistl
jno
add
leave
pop
cwtl
icebp
lret
sbbb
sub
jns
fnstsw
lret
or
rcl
fcoms
xchg
cmpsb
inc
pop
inc
mov
mov
add
lret
scas
inc
cwtl
jnp
mov
fdivrl
dec
and
jo
fisubrs
mov
aaa
push
daa
dec
adcl
mov
jnp
bound
sbb
stos
or
imul
xchg
repz
scas
sbbb
in
push
pop
mov
xor
mov
cmpl
in
stos
insl
mov
fistpl
adc
jnp
cmc
scas
sub
sti
inc
call
push
inc
push
fcoms
adc
or
daa
subb
mov
dec
mov
xor
sub
scas
xlat
xor
shl
xor
sub
test
push
inc
mov
pop
add
dec
movsl
sbb
es
xchg
jns
nop
mov
pop
popa
sbb
pop
jp
pop
ljmp
loop
cmp
dec
adc
mov
jbe
in
cli
adc
jecxz
jno
push
hlt
scas
jb
xchg
mov
fsubl
xor
mov
sbb
jns
mov
xchg
push
pusha
sbb
mov
es
insl
push
pop
and
incl
rcrb
test
inc
mov
test
ljmp
sbb
aad
pop
mov
repz
std
pusha
or
mov
daa
or
stos
pop
xlat
mov
mov
push
mov
xor
rcrb
jns
and
jg
mov
cmp
inc
ror
dec
sti
jb
xchg
jns
push
subb
pop
push
inc
cmc
push
lret
xor
negb
icebp
sbb
rclb
fcompl
jmp
adc
xchg
pushf
mov
mov
xchg
daa
faddl
mov
add
dec
pop
sbb
jge
enter
add
adc
push
jne
add
rolb
sar
mov
and
push
sub
xor
dec
not
pop
leave
clc
loopne
xchg
jnp
scas
mov
add
in
jo
fcmovne
mov
jg
jmp
lods
out
ret
out
xor
push
clc
in
mov
out
push
mov
into
push
lods
mov
fistl
fwait
cmp
loope
cmp
xor
mulps
and
leave
mov
cmp
pop
pop
xor
adc
cmc
stos
xchg
add
fnstenv
add
xor
cmp
cltd
mov
pop
jg
rcrb
push
xchg
sub
fidivl
ss
bnd
xchg
pusha
pop
dec
ret
mov
mov
test
adc
and
ret
iret
mov
insl
les
iret
adc
cmp
jle
adc
mov
ret
mov
call
lods
dec
call
test
gs
mov
shrl
xor
and
jbe
or
in
pop
ret
ljmp
cmp
mov
xorb
outsb
mov
cmp
jbe
shrb
iret
jnp
cwtl
ret
ficoms
sti
aam
xchg
xchg
icebp
das
xor
fwait
push
add
imul
fidivrs
icebp
xchg
add
mov
xorl
cmp
in
and
arpl
into
push
pop
xchg
daa
cmpsb
cmp
mov
ja
mov
repz
int
scas
dec
in
jns,pn
mov
lods
xlat
mov
mov
inc
inc
dec
mov
sub
icebp
movsl
pop
mov
add
bound
mul
mov
es
mov
sbb
sahf
fcmove
and
jbe
cmpb
sub
adc
or
jb
and
sbb
mov
repz
add
xorl
imul
mov
pop
lea
mov
mov
or
inc
loope
in
insb
cmp
sub
jle
repz
xlat
jp
lea
fwait
adc
pop
ret
add
mov
sbb
jb
loopne
test
mov
inc
iret
loope
xor
mov
nop
inc
mov
or
bound
notl
inc
aas
out
mov
cmp
inc
mov
jae
pushf
arpl
adc
add
les
adc
fnstsw
or
sbbb
test
pop
lret
loope
mov
push
into
jge
jns
arpl
push
aad
jp,pn
test
popa
jne
push
push
cmpb
ret
inc
hlt
pop
mov
push
inc
ret
out
jo
xchg
mov
jg,pn
stos
addr16
iret
push
adc
and
fs
loopne
enter
pop
fsts
mov
inc
fisubl
dec
pop
adc
jno
jbe
pop
push
decl
popa
xlat
loopne
int3
mov
test
push
cmpsb
mov
mov
jp
mov
adc
or
jbe
mov
jae
pop
dec
dec
jno
add
adc
and
sub
xlat
inc
xchg
std
jge
sahf
int3
xlat
shlb
jle
das
fisttps
data16
stc
adc
scas
add
inc
add
les
cltd
adc
stos
push
js,pn
jno
and
out
push
mov
cmp
shr
in
jno
cmpsb
jo
outsb
mov
mov
or
lods
cmp
and
push
subl
sbb
jo
inc
shrl
jns
mov
insb
add
dec
jp
daa
lahf
orl
inc
pop
and
mov
mov
cwtl
pop
les
test
fdivs
cli
push
xchg
xchg
jle
sub
idivl
iret
jnp
inc
pop
sbb
inc
xor
test
mov
mov
cmpsb
pop
and
jo
outsl
enter
inc
lret
or
lds
jmp
cltd
pop
sbb
cmp
mov
mov
rcll
and
ljmp
dec
neg
rclb
mov
icebp
mov
lcall
sbb
clc
aam
cmp
xchg
xchg
jl
jge
lea
stos
jl
jl
jl
or
arpl
cltd
pop
ljmp
xorl
fidivrs
push
in
add
aam
out
jbe
sbb
movsb
dec
mov
jmp
mov
push
sbb
and
add
cli
insl
xor
push
ja
mov
lods
into
test
jns
ficomps
xor
outsb
push
addl
or
mov
pop
mov
inc
pop
movsl
jmp
into
cmp
xor
sub
or
mov
stos
outsl
xchg
int3
dec
sub
int3
sub
sub
sahf
negl
dec
or
outsb
das
and
mov
and
insl
incl
mov
iret
ja
cmp
lods
fwait
mov
inc
mov
loopne
push
dec
in
xchg
sbb
xor
xor
dec
mov
jne
push
pop
stos
shld
cmc
adc
jle
out
test
xchg
push
pop
jno
les
std
and
xchg
clc
cwtl
mov
cmc
xor
bound
shll
mov
mov
sbb
stos
int3
into
dec
pop
aas
test
movsl
adc
mov
pushf
std
adc
dec
adc
sti
inc
jmp
leave
sbb
fsts
outsl
aaa
or
f2xm1
inc
in
lahf
add
and
xor
jns
push
roll
sbb
subb
andl
into
repz
fwait
in
stos
cwtl
xor
aam
or
jnp
rcll
inc
cs
pop
inc
push
xchg
test
out
or
lds
dec
cmpsb
call
sub
pop
pop
sub
push
xor
sub
and
insb
gs
sub
dec
dec
cmc
ds
pop
push
fidivrs
cwtl
aad
mov
mov
shlb
sti
push
ds
mov
sub
ds
ret
mov
jle
add
ss
mov
and
push
pop
orb
popf
push
pop
into
sbb
mov
mov
xchg
ss
ss
aas
shrl
inc
icebp
mov
ret
fwait
icebp
mov
or
int
inc
imul
inc
dec
aad
sub
out
adc
jb
ljmp
push
pushf
js
mov
or
and
hlt
inc
adc
xchg
or
insl
inc
push
int3
andl
mov
push
hlt
cmp
cld
xchg
dec
rcll
or
adc
cmpsl
xchg
rorb
add
pop
pop
ret
push
ret
shl
dec
stc
bound
pop
lods
fnsave
cmc
cli
or
mov
inc
mov
inc
dec
jp
cltd
into
les
test
mov
es
lret
ficoml
lcall
or
jle
repnz
xor
jne
fidivl
xchg
xchg
pop
add
hlt
fs
pop
push
fildl
out
dec
scas
and
scas
pop
je
pop
mov
pop
roll
push
dec
idivb
les
and
and
subb
mov
mov
or
push
loope
outsl
aaa
jp
int3
mov
repnz
or
add
mov
sub
xchg
sbb
xor
sbb
jl
fwait
mov
cmp
cmp
mov
ret
sub
dec
push
cmp
or
add
mov
stc
out
sub
pop
pop
xchg
and
sbb
outsb
push
xchg
sbb
in
cmp
dec
cmpsb
push
insb
call
jge
xor
lods
cmp
pop
xchg
ret
iret
jmp
xor
cwtl
arpl
arpl
cmp
fdivrs
mov
nop
mov
aam
lret
pop
jl
pop
pushf
sti
std
test
mov
dec
adc
sbb
outsl
aas
xchg
xor
mov
jle
jmp
fcomp
add
fcomps
out
cmovl
out
sahf
out
xor
in
sar
xor
call
mulb
mov
jmp
loope
iret
lahf
add
dec
aam
xchg
mov
mov
ljmp
pop
lods
outsl
cmp
mov
xchg
push
stc
in
out
cmp
stc
xchg
ror
or
ror
scas
call
push
arpl
test
das
pop
rcl
cli
mov
sarl
fs
sti
fmul
cld
inc
mov
pop
cli
or
pop
mov
push
push
sub
jge
xchg
aam
mov
xchg
xor
push
or
push
cmp
push
mov
xchg
in
push
movsl
stc
add
sub
jbe
movsl
das
ds
sub
imul
push
pop
and
push
xchg
cmp
daa
icebp
cmpsb
pop
pop
cmp
sub
in
into
sub
sbb
lea
repz
inc
adc
dec
xchg
xlat
dec
jae
fwait
in
mov
xchg
repnz
orl
add
dec
scas
clc
out
lahf
mov
mov
mov
adc
insl
dec
jno
in
fstpt
test
push
das
xchg
movsl
rol
lret
in
push
je
out
xchg
les
jle
mov
mov
jg
dec
add
fbld
popf
cltd
inc
push
jnp
leave
lods
sahf
sbb
sub
lcall
sbb
mov
lock
fsubr
cltd
stos
xorb
cmpsb
mov
mov
adc
ret
push
xchg
adc
dec
test
xor
addr16
dec
mov
enter
push
out
mov
xor
mov
leave
jbe
test
cltd
es
aam
jns
sub
cwtl
aaa
scas
xchg
push
cli
arpl
sub
cmp
fldl
les
and
adc
cli
ret
notb
xor
inc
and
add
lods
mov
jae
out
scas
leave
dec
xabort
pop
xchg
ret
sub
cmp
sub
xchg
test
or
aam
push
hlt
shrl
lods
rorb
aas
mov
arpl
xor
mov
mov
mov
mov
xor
int3
xchg
push
lock
cmp
dec
jbe
inc
jae
and
out
adc
clc
test
xchg
scas
ss
push
xchg
jmp
pushf
mov
shl
adc
sub
jge
lcall
cmp
negb
pop
mov
add
lods
pop
mov
out
cmp
dec
hlt
fadds
repnz
dec
leave
adc
scas
popa
dec
lret
pusha
shl
dec
sbb
das
inc
int
bound
sub
mul
testl
mov
dec
xor
cld
sahf
pop
pop
movl
loop
sbb
push
fsubrl
sbb
fnsave
les
mov
lds
rep
int
lahf
imul
adc
insl
sahf
sarb
in
dec
cmp
cwtl
add
push
pop
inc
or
mov
mov
sahf
xor
or
sub
pop
mov
xchg
xchg
jge
stc
dec
cwtl
sub
or
pusha
leave
sub
shrb
cld
pop
gs
jne
dec
push
fcoms
data16
sahf
mov
xor
xchg
xchg
sbb
fcomip
mov
pop
movsl
pop
shl
dec
push
pop
xchg
inc
rcrb
ficompl
dec
add
scas
adc
jle
xor
xor
xchg
cmpsb
cmpsl
pop
jo
or
popf
fs
movsl
imul
testb
aaa
movsb
inc
mov
jo
adc
testl
leave
mov
xor
adc
cmp
jnp
nop
xor
or
sbb
push
pushf
mov
and
in
mov
dec
jmp
mov
mov
adc
mov
jb
add
sbb
mov
sbb
js
mov
sti
xor
push
adc
or
jnp
cli
lea
fdivrl
rcrl
cltd
outsl
push
sbb
jmp
xchg
lcall
inc
or
arpl
mov
jmp
or
sub
ja
push
in
lock
jns
mov
cmp
cmpsw
mov
inc
cmp
jp
lods
aaa
lock
out
mov
lods
push
ljmp
mov
jmp
call
lcall
jne
scas
push
push
mov
repnz
scas
fdivl
mov
sub
inc
mov
cmp
outsb
orl
pop
es
lea
loop
faddl
lcall
and
loope
dec
testb
push
cs
enter
mov
add
imul
scas
ret
sub
in
fistl
outsb
gs
aas
stos
push
stos
or
add
pop
jecxz
jnp
xchg
jle
mov
cmp
jecxz
das
int3
or
test
mov
mov
xchg
sbb
sub
sbbb
lods
inc
mov
je
hlt
addb
and
add
xchg
push
in
sub
std
scas
daa
loopne
xchg
bound
pop
pop
cld
sub
leave
pop
fbld
inc
jmp
mov
mov
mov
jp
outsb
das
and
int3
divb
mov
mov
mov
dec
sub
call
daa
or
stc
sar
push
pop
and
loopne
cmp
aaa
mov
loopne
mov
jl
xor
xchg
jb
and
popa
daa
mov
sub
jo
iret
clc
push
cs
mov
ret
push
std
aas
or
iret
test
adc
ret
mov
mov
jnp
mov
mov
insl
int
cld
xchg
cmc
aaa
outsl
mov
jle
lcall
scas
lea
cmc
imul
sbb
jmp
movsl
cmc
int
cmp
cmp
aad
or
push
outsb
jbe
or
sub
divl
push
cmpl
add
adc
dec
pop
sub
xor
roll
push
mulb
dec
loop
cmp
test
repz
jmp
jecxz
mov
cmc
xor
fistps
mov
data16
and
push
lret
fdivrp
popf
cli
or
loop
mov
add
mov
mov
sarl
mov
adc
add
sub
add
mov
sahf
loope
cmp
jmp
inc
xlat
and
repnz
es
mov
in
push
push
fmuls
ljmp
fcmovu
in
das
mov
cmp
pop
cmpsl
and
jo
pop
sbb
imul
imul
or
inc
dec
cmc
jbe
fmull
in
out
add
aad
cmp
fisttpll
add
out
shl
adc
mov
inc
lcall
data16
pop
movsb
lods
cmc
and
cmp
push
mov
adc
imul
fucomi
mov
push
adc
or
and
adc
mov
aad
push
cs
adcb
je
int
enter
aad
jp
int3
adc
pop
stc
push
sub
outsl
add
inc
xor
dec
add
xchg
pop
xor
mov
lea
sbb
ljmp
insl
jbe
js
or
pushf
dec
lods
test
push
imul
jne
es
sbb
lock
testl
push
repz
fwait
mov
xor
insl
jle
daa
fistl
sbb
cmpsl
outsb
rclb
loop
sub
scas
inc
cld
and
loopne
test
push
cli
mov
shrb
push
lods
in
in
mov
clc
js
inc
mov
adc
gs
dec
je
and
fcomps
push
pop
sbb
js
xor
ret
ss
out
adcl
shl
push
xchg
js
nop
jb,pt
and
shll
ret
inc
sahf
pusha
jnp
add
or
pushf
jae
mov
addr16
add
ret
data16
repz
adc
jae
lahf
mov
jo
daa
xchg
mov
mov
imul
mov
push
daa
xchg
loopne
fsubl
popa
sbb
cmp
mov
push
sbb
mov
jg
sarb
xlat
cli
rcrb
cmpsb
cmc
ret
dec
push
add
push
inc
movb
sbb
inc
cs
popa
divb
ficomps
push
push
testl
cltd
call
dec
inc
add
fsubl
loop
pop
add
sub
mov
cmp
ficoms
mov
adc
xor
movsb
mov
psubsb
jno
mov
jge
loop
jle
sahf
rcr
sti
or
cmp
xchg
mov
loopne
movsl
out
pop
mov
leave
mov
aaa
or
mov
insb
push
fisubs
xchg
aaa
cmp
push
cwtl
mov
cmp
xchg
gs
adc
sahf
fs
mov
stos
and
clc
lret
add
add
push
les
aam
scas
jb
sbb
fisubrs
aam
mov
xorb
shll
inc
push
sub
scas
mov
sub
add
xor
xchg
shll
pop
rolb
or
std
mov
mov
mov
mov
mov
lea
pushf
in
ljmp
leave
jne
aaa
and
fs
pop
and
sub
loop
xchg
sbb
adc
out
insb
jle
stos
cmp
mov
cmpsb
inc
inc
or
lcall
dec
popf
notb
bound
adc
scas
inc
pop
jb
out
cmp
add
lds
and
sub
sbb
pusha
pop
fists
ret
lcall
mov
sbb
push
mov
and
add
mov
imul
inc
mov
insl
sub
ficompl
adc
push
mov
sbb
lcall
pop
lret
out
aam
jno
out
fistpll
jl
dec
std
jmp
cmpsl
jbe
add
jg
push
jnp
repz
pop
pop
xor
clc
out
mov
in
xlat
push
in
push
push
aad
mov
movsl
lahf
add
jnp
pop
in
mov
repnz
and
dec
xchg
mov
sarb
nop
popa
ja
cltd
cmp
test
outsl
cs
jb
jmp
cmp
or
ret
mull
std
xchg
push
or
decb
sbb
mov
fdivl
fldcw
or
cli
mov
arpl
pop
pushf
fistps
push
inc
mov
pop
mov
push
cmovnp
and
cli
and
ret
repz
add
test
mov
lcall
ret
mov
adc
add
mov
in
inc
dec
ret
pusha
mov
cmp
jae
fdivrp
pop
push
cmp
or
ss
xor
cmp
sbbb
jp
gs
cwtl
lea
mov
xchg
fdivrl
add
das
test
cmpsl
xor
cltd
sti
jmp
add
sbb
lock
xor
mov
fsts
and
adc
gs
and
fs
fisubrs
xor
push
vucomiss
dec
sti
in
fdivl
jmp
xchg
dec
imul
scas
imul
inc
pop
test
sbb
call
cmp
lahf
push
test
testl
cmp
aaa
adc
outsl
notl
dec
mov
test
xchg
pop
push
pop
das
icebp
inc
dec
xchg
loope
inc
ljmp
dec
or
dec
shrl
jb
mov
or
es
sub
mov
je
mov
cmc
xchg
into
sub
mov
movsl
push
pop
shlb
push
jl
fs
daa
nop
aam
pop
cmp
andl
cli
pop
ret
out
mov
jecxz
mov
adc
in
pop
adc
sbb
sbb
stos
div
xor
icebp
xchg
popl
clc
lret
dec
call
xor
int3
std
inc
fidivrs
sbb
mov
xor
imul
lock
mov
mov
bound
ret
or
sbb
in
les
sbb
dec
jns
pop
insb
mov
pop
sbb
icebp
add
sbb
clc
pusha
daa
mov
pushl
or
addr16
sbb
ds
inc
sti
test
or
or
dec
scas
aad
jmp
nop
loope
jmp
mov
push
pop
add
pushf
xchg
enter
shrl
mov
cmp
sbb
dec
inc
or
fcompl
adc
into
xchg
sarl
in
jmp
rorl
mov
add
aas
scas
jle
push
mov
mov
aaa
andps
lods
pop
sahf
sbbl
pusha
sti
rorl
inc
int3
pop
mov
shr
xchg
add
ficoml
outsl
ret
cli
xor
testb
aad
fwait
sub
xor
push
cmpsb
cmpsb
dec
or
sbb
cmpb
loopne
jmp
sub
mov
stos
loop
xchg
mov
sbb
inc
std
sub
ljmp
int
mov
bound
inc
outsl
addr16
divl
lret
fcmove
jg
dec
ljmp
pop
es
jmp
icebp
mov
movsb
pop
addr16
jb
insl
pushf
mov
test
mov
popa
cmp
outsl
add
sbb
fsts
jecxz
gs
fdivr
adc
clc
sub
xchg
fisttpl
outsl
daa
inc
and
rolb
push
ficoml
mov
je
es
dec
and
mov
pop
fsts
inc
lea
gs
lds
cmpsb
test
aad
fidivs
mov
push
js
xchg
push
push
outsb
ljmpw
add
mov
jnp
xor
pop
cmovnp
xor
pushf
jmp
aad
mov
jb
test
add
rcrb
fiadds
cmpsb
mov
shrb
sub
jl
xchg
test
push
adc
imul
jecxz
jl
jne
repz
xor
inc
mov
xor
push
aad
test
cmp
and
sub
add
push
xor
mov
outsb
sbb
pop
cmp
mov
sub
mov
adc
fwait
mov
or
cmp
or
mov
adc
inc
mov
xorb
jne
jle
or
cltd
and
pop
fisubl
sbbl
out
stos
sahf
std
inc
pop
xor
or
popf
sbb
out
push
ja
cs
mov
adc
xor
push
add
cmp
stos
push
push
mov
shlb
stos
jbe
sbb
mov
ss
jge
pop
je
enter
andb
jmp
mov
aas
mov
ds
hlt
stc
sbb
inc
pop
sub
cmp
test
mov
inc
mov
pop
add
ret
stos
je
je
stc
cmp
xor
mov
push
into
pusha
dec
int3
and
mov
mov
adc
shl
popa
dec
cli
jno
mov
pop
pop
adc
les
adc
push
into
das
icebp
xlat
subl
sbb
sahf
mov
iret
jecxz
popa
rcll
sar
cmp
lea
fsts
mov
lock
aad
popf
mov
not
xor
sbb
ret
iret
push
mov
and
push
dec
es
xor
fdivp
mov
dec
enter
inc
jg
test
jo
insb
imul
adc
add
push
xor
mov
fstl
cmp
mov
es
shr
xor
inc
sub
cmp
xchg
lret
jno
xlat
cmp
and
sbb
fdivrs
dec
mov
scas
adc
xchg
xchg
mov
xor
mov
inc
enter
lea
fildl
mov
stos
pop
orb
pusha
fistpl
pop
fists
sbb
mov
rorb
push
stc
dec
scas
and
jns
lds
pop
dec
cld
dec
cld
xchg
fsubrl
std
test
dec
jo
sbb
fyl2xp1
jo
js
push
mov
push
cmpsb
cmp
jmp
mov
aaa
xchg
jae
movsl
test
pop
lds
fsubs
loop
xchg
inc
xor
push
and
or
ror
fisubs
imul
add
cmpb
xchg
sbb
jmp
cmp
pop
pop
add
shl
push
mov
mov
stos
aas
rorl
sbb
xchg
fdivrs
and
inc
adc
pop
test
xor
shl
dec
nop
mov
in
adc
flds
dec
mov
sub
aas
pop
xor
ds
adc
hlt
jbe
add
and
push
sub
fdivs
xchg
lock
iret
fucomi
cmc
jne
fsub
out
sub
ds
jo
insl
pop
adc
cli
sub
lcall
fmulp
and
dec
sub
fistps
lret
push
add
jecxz
in
jae
in
aad
pop
lods
adc
icebp
push
adc
ret
repnz
push
stos
mov
add
test
mov
push
pusha
orl
push
adc
xlat
cmp
jne
jne
xsha1
cmpsb
in
jbe
mulb
repnz
hlt
sar
push
fiadds
push
das
andb
hlt
pop
sbb
in
mov
mov
sub
clc
imul
mov
pop
lahf
adc
pop
aaa
loopne
xchg
dec
or
mov
ffree
lock
gs
jp
inc
and
fidivrl
push
pop
das
mov
lea
es
pop
xorl
pop
push
pop
pop
mov
add
mov
cmp
sub
xchg
shll
cmpsl
fists
or
popa
xor
lods
or
jmp
mov
popa
daa
inc
gs
inc
addr16
cmp
repz
into
xchg
sub
mov
lret
sbb
mov
sahf
int
push
ds
mov
xor
out
sbbl
std
js
mov
pop
jo
in
push
ljmp
outsl
and
pop
cmp
nop
xlat
cld
or
das
sbb
jnp
xchg
cmp
sub
pop
pop
lahf
fisttpll
push
mov
js
cmp
xchg
fstpt
mov
mov
adc
std
or
sbb
or
aaa
ds
pop
mov
shl
mov
in
dec
scas
mov
mov
xor
cli
xor
dec
cwtl
out
popf
and
out
std
xchg
mov
sbb
lcall
push
cmp
loop
das
lods
jnp
add
enter
pop
jo
jo
cmp
jnp
jb
mov
addl
inc
jbe
inc
rcl
movsl
pop
dec
sub
add
inc
pusha
inc
jge
pushf
pop
and
xchg
xor
bound
cltd
fcmovnu
cmp
xchg
xor
nop
rolb
popf
and
ljmp
daa
imul
jecxz
jo
mov
in
inc
sbb
int
js
popf
movsw
xchg
data16
ret
jle
dec
jno
lock
or
pusha
mov
repz
jnp
adc
xchg
inc
inc
mov
sbbb
cmp
imul
inc
pusha
sbb
stos
push
push
popf
pop
mov
fistpl
popa
mov
subl
test
fbld
xor
xor
add
mov
test
js
aad
push
imul
leave
fwait
jp
adc
jb
aaa
out
call
pop
outsl
push
adc
aaa
sti
pushf
jns
call
add
hlt
inc
lahf
mov
dec
pop
adc
loopne
pop
inc
add
movsl
imul
iret
loop
add
fldt
ret
push
cmpsl
in
and
inc
in
cwtl
das
jne
jle
movsb
gs
std
int3
push
jo
sti
cld
sub
repnz
jmp
xchg
loope
cmpsl
movntq
dec
mov
cwtl
enter
push
cwtl
pop
cmp
jnp
cltd
outsl
insl
xchg
push
fcomip
lcall
into
xor
icebp
and
ljmp
jecxz
int3
or
fs
or
xchg
fdivr
sub
or
nop
mov
add
test
dec
xchg
jp
and
or
xchg
mov
push
pop
arpl
sahf
nop
cmp
fcom
lds
push
dec
ret
ret
mov
cmp
dec
and
in
jmp
sub
pushf
sahf
sbb
jo
pop
out
jb
mov
scas
adc
sti
dec
or
outsb
repz
mov
or
in
sbb
adc
jo
and
aas
adc
pop
cmp
daa
gs
std
push
add
test
subl
fdivr
ret
lock
rcl
ja
fisubrl
incb
scas
in
pop
pop
jg
lahf
jl
cmp
insl
iret
rolb
cmpsl
idiv
inc
sub
clc
icebp
insl
push
mov
std
insl
in
mov
mov
sbb
or
in
les
mov
or
pop
dec
bound
pop
mov
outsl
loope
outsl
lret
mov
add
or
adc
jbe
add
jecxz
repz
psrlq
cmp
mov
shrl
sbb
xor
inc
insl
inc
rorl
pusha
arpl
into
cwtl
dec
jae
arpl
aad
and
pusha
out
pop
clc
pcmpeqd
mov
mov
or
jnp
sub
push
xchg
push
int
xchg
pop
cmp
push
cmpsl
pop
enter
imul
lahf
pushw
jns
adc
in
imul
mov
cmp
mov
jnp
imul
mov
jle
jb
lahf
fidivl
mov
inc
inc
dec
hlt
movsb
aas
inc
push
in
imul
mov
add
mov
movsl
sbb
jb,pn
out
inc
jp
jg
xchg
clc
add
adc
insl
inc
je
jmp
or
jbe
push
push
push
and
xlat
stos
sub
mov
lods
push
xor
int3
xor
in
xor
mov
imul
sub
cwtl
out
aam
dec
out
orb
mov
xchg
ficoms
loope
scas
dec
into
pop
aaa
fdivr
jbe
mov
or
js
insb
add
jae
mov
ds
mov
insb
adc
push
dec
inc
mov
cli
push
xor
in
add
fmull
or
cmp
popf
mov
pop
test
ret
imul
repnz
push
mov
adc
rcll
outsl
mov
imul
xor
orl
push
cmp
dec
cli
ss
and
jmp
mulb
mov
xor
aam
icebp
push
popa
mov
xchg
addr16
fidivrl
pop
int
sbb
inc
stos
jg
mov
sub
mov
sbb
pop
mov
ljmp
and
pop
mov
sub
in
adc
mov
adc
cld
mulb
call
mov
xor
xchg
push
int
out
roll
daa
or
jne
mov
mov
dec
sub
cltd
adc
outsl
mov
vunpckhpd
dec
aam
sbb
add
push
xchg
aas
daa
jle
or
popf
cli
fdivrs
jp
cwtl
mov
mov
sti
adc
or
xchg
sti
mov
xor
jge
mov
movsl
mov
cli
loope
fsubrp
adc
adc
push
in
mov
fidivrl
je
jno
mov
adc
and
cwtl
dec
cmp
inc
es
js
mov
mov
lret
pop
scas
pop
push
sbb
add
in
jmp
mov
out
popf
sub
xchg
imul
clc
js
jb
in
adc
jne
addb
cmp
iret
shl
push
imul
cmp
nop
ljmp
jae
push
or
icebp
xchg
add
call
push
push
dec
or
sub
xchg
and
jnp
jle
adc
dec
int3
fsubrp
repz
outsb
pop
dec
push
jl
aam
push
jae
push
jo
mov
cltd
lcall
in
xchg
inc
dec
cltd
push
mov
sti
bound
test
pop
and
dec
adc
fs
ret
scas
jb
mov
jnp
jns
inc
popf
divb
cmc
test
push
cmp
adc
cmp
mov
andl
testb
pop
sub
or
mov
jo
repz
xchg
mov
movb
pusha
cmp
shr
mov
popf
cltd
cmp
outsb
inc
push
lret
mov
ret
rorl
jp
les
inc
xchg
xor
lahf
adc
je
or
mov
test
mov
fisubs
pop
call
mov
rcll
outsl
loope
xor
cmp
cmp
dec
sbb
leave
push
test
jnp
scas
shll
cmp
sub
outsb
xchg
mov
xchg
add
push
pop
dec
aad
mov
xchg
popl
ficoms
add
insb
sbb
movsb
add
mov
enter
js
mov
and
cmp
mov
pop
sub
push
jb
pop
shrl
inc
aam
loope
pop
pop
addr16
xchg
fiaddl
roll
dec
jns
stos
push
cmpsb
cmc
cmpsl
xchg
jns
fucomi
div
outsb
daa
mov
xlat
push
js
subl
loope
xchg
mov
outsb
mov
mov
add
adc
testl
or
add
in
shrb
fisubl
data16
das
mov
lea
push
iret
roll
sahf
popa
lea
leave
enter
jno
cld
mov
dec
and
cmc
scas
cld
adc
aam
aad
push
outsb
test
xchg
scas
add
pop
scas
mov
incl
xchg
mov
scas
pop
push
dec
hlt
and
cwtl
dec
aad
jg
pop
xchg
daa
adc
test
mov
add
push
pop
lahf
mov
jne
add
add
js
mov
movsl
std
mov
adc
push
mov
cli
leave
push
sub
push
jle
cmc
sub
mov
sub
fs
jns
cld
cld
dec
repz
dec
movsl
cmp
mov
mov
ja
add
clc
fstpl
inc
imul
faddl
fcmovnb
sahf
into
mov
out
xchg
push
into
inc
out
sahf
pushf
inc
sub
mov
jecxz
scas
mov
sub
dec
pop
cmc
pop
pop
out
mov
mov
and
jnp
int
xor
mov
imul
cltd
in
and
movsl
mov
adc
dec
adc
inc
call
lret
or
insb
cmp
push
aaa
outsb
mov
or
jo
scas
out
orl
lock
addr16
lret
fwait
popa
sbb
into
loop
push
cmp
pop
cmp
faddl
ss
imul
and
xchg
and
cmpsl
aaa
pop
mov
mov
sbb
and
sub
mov
testl
sub
cmp
push
bound
inc
incl
cmpsl
jo
inc
jnp
pop
push
jns
fs
out
aas
sahf
lods
add
dec
ja
dec
xor
daa
lcall
jo
adc
pop
test
cwtl
pop
dec
and
stos
call
rcrb
lds
jp
pusha
inc
aad
sub
jp
push
pop
js
xor
test
xchg
lret
outsl
pop
popa
lds
stc
je
in
hlt
dec
mov
in
mov
shll
scas
shrl
xchg
insb
add
push
push
dec
inc
push
sti
jno
test
xor
mul
push
push
sub
pop
cli
sub
insl
lods
and
les
imul
and
xchg
sbb
cmp
enter
outsl
cmp
adcb
repz
sbb
loopne
movsl
rcrl
jp
add
xchg
bound
lret
mov
cmc
cmp
xchg
inc
icebp
lcall
out
cmc
dec
or
pusha
push
cmp
lahf
dec
xchg
pushl
repz
das
adc
add
iret
in
pop
into
adc
cmp
sub
mov
and
dec
sbb
mov
xchg
cmpsb
daa
mov
mov
addl
test
stos
add
push
push
add
sub
pop
sub
mov
dec
push
lds
jmp
add
jne
push
js
int
pop
mov
out
ja
jae
xchg
mov
pop
aaa
jl
cmp
repnz
mov
sahf
movsl
or
fldcw
rcr
insb
jns
shll
sbb
test
aaa
mov
mov
add
pop
cmpb
insb
mov
inc
mov
pop
das
dec
ja
sahf
aaa
lods
sub
mov
lds
jo
xchg
ret
xlat
and
push
imul
mov
cmpsb
mov
pop
mov
add
mov
orb
clc
hlt
pop
push
mov
mov
rcll
xchg
aaa
shrb
mov
cmc
rolb
cmp
or
push
jns
xchg
cmp
test
fidivrl
inc
and
xchg
sbbb
sub
adc
xor
or
subb
inc
sbb
mov
psrld
mov
hlt
sahf
test
xor
mov
test
das
out
pop
cmp
sti
jnp
aam
adc
icebp
pop
dec
xor
std
ljmp
pop
mov
mov
sub
cmc
adc
jp
bound
mov
scas
gs
aam
xor
int3
lock
aaa
cs
xchg
roll
clc
xchg
xor
test
out
xchg
test
test
xor
adc
dec
pop
lcall
add
mov
scas
jle
inc
movsl
cwtl
xor
bound
xchg
mov
fnsave
lahf
scas
jo
mov
cmp
int3
jnp
jle
ljmp
jl
pop
push
pusha
add
adc
lahf
cli
gs
jb
imulb
jae
cmp
pop
nop
loopne
and
clc
in
mov
fldcw
or
push
dec
inc
test
hlt
insl
push
mov
xlat
in
pushl
sbb
inc
test
add
loop
fs
push
out
mov
insb
in
mov
push
jmp
sti
shll
cmp
and
xchg
push
je
pop
js
cmp
mov
jecxz
xchg
lods
pushf
dec
xchg
lds
and
cs
jl
xlat
test
icebp
pushf
mov
cmp
push
mov
aad
filds
or
or
jne
mov
cmp
push
jae
lret
cmp
clc
xchg
inc
push
push
imulb
sbb
dec
xchg
add
mov
push
mov
push
adc
push
cli
mov
ror
movsb
mov
inc
mov
dec
fcomip
into
add
movsb
mov
arpl
jbe
and
or
push
sbb
mov
jae
or
push
pop
pusha
dec
fistpll
loop
pop
fisttpll
lock
adc
jno
cmp
popf
sub
cmp
pop
pop
push
sub
cli
sub
xchg
in
push
loope
adc
sti
adc
out
ret
fnstcw
loope
decl
pusha
aaa
outsb
add
js
jns,pt
push
ret
lods
cs
subl
jns
nopl
divb
cld
sarl
dec
cmpsb
icebp
xchg
cmp
cmp
loop
shll
and
pop
add
into
jmp
push
call
out
or
int
scas
out
cltd
mov
xor
push
imul
or
call
shlb
dec
mov
adc
clc
adc
sbb
out
push
das
lea
daa
add
push
popa
fsubs
lcall
clc
lret
push
ret
shl
das
outsl
add
arpl
out
push
lock
stos
inc
mov
mov
mov
ret
insl
pop
xchg
aaa
scas
bound
adc
push
dec
push
and
leave
sti
nop
xor
or
and
lock
push
sub
fwait
adc
add
sbb
and
and
sbb
aad
test
or
outsb
ja
jne
test
jmp
sub
sub
cpuid
mov
sbb
js
mov
insl
pop
xchg
jno
insb
and
xchg
xchg
adc
icebp
adc
hlt
dec
les
icebp
orb
aam
and
mov
sar
sti
insb
jbe
aas
adc
or
add
jmp
push
mov
in
xchg
data16
push
leave
xchg
xor
xchg
pop
and
jmp
inc
fcmovbe
and
fwait
adc
sub
mov
ret
dec
cmp
movsb
andl
jmp
nop
loopne
push
and
je
fiaddl
pop
or
pushf
jp
leave
loopne
scas
imul
addr16
les
addb
fmuls
dec
cmc
adc
loop
sub
pusha
adc
pushf
add
pop
push
pop
and
out
ja
mov
inc
outsl
dec
cs
daa
add
pop
lahf
in
cmp
loope
lods
in
sbb
int
test
out
inc
adc
sbb
fiaddl
xchg
dec
sub
mov
aas
mov
scas
fstpt
mov
je
cmc
lock
adc
leave
popf
cmp
push
jne
mov
mov
sbb
xor
add
ss
adc
lock
or
push
loopne
xchg
jg
outsl
insb
stc
repnz
loope
cmpsb
or
ret
inc
aaa
hlt
cmc
cmc
lock
sub
cmp
dec
push
xor
lret
fs
test
movsb
popf
adc
sub
jae
jne
cmc
jge
mov
jb
das
mov
int3
push
lea
out
add
mov
pop
mov
sbb
inc
and
ljmp
pop
js
mov
call
and
scas
dec
test
inc
hlt
sti
int3
or
arpl
xchg
xor
cmpsb
in
push
xchg
leave
mov
js
and
and
xchg
imul
gs
mov
int3
push
shll
push
xchg
and
mov
stos
sub
adc
aam
shrb
mov
mov
jnp
scas
pop
inc
ds
mov
adc
dec
mov
enter
jmp
sub
js
jecxz
jmp
mov
mov
fcmovnb
jbe
xorl
or
mov
pop
sub
pop
in
cmpsl
xchg
xchg
outsb
rorb
mov
or
lret
popf
sub
bound
push
leave
imul
jne
fsubr
loop
into
jae,pn
scas
push
fistpl
test
outsb
mov
pop
or
sbbb
aam
mov
ret
in
rolb
call
push
sti
sub
fdivp
sub
shl
inc
lock
mov
loopne
inc
loopne
mov
iret
pop
xchg
call
xchg
sbb
jg
xchg
add
inc
push
cld
pop
hlt
movsb
xor
sti
xchg
aam
jle
test
movsb
push
inc
jl
mov
movsl
dec
xchg
mov
cwtl
jb
jl
mov
cmp
push
sahf
sbb
or
aad
sti
fnstsw
xor
test
xchg
xchg
xchg
out
maxps
cmp
fidivs
into
mov
stos
rcrl
dec
fs
and
fimull
adc
pop
mov
dec
fwait
mov
rorb
pushf
loop
in
cmp
cmp
push
imul
out
jmp
add
adcb
inc
movsb
hlt
xchg
scas
fldt
add
push
aaa
in
jae
aad
or
cwtl
xchg
push
jnp
inc
push
rorb
adc
mov
xchg
ds
cmp
imul
pop
xor
mov
aaa
xchg
push
out
mov
mov
inc
mov
and
loope
add
sbb
rcrb
and
xchg
push
ljmp
cmc
mov
lods
iret
xor
clc
cmp
push
mov
icebp
xor
jle
aam
sbb
push
test
inc
xchg
cld
data16
das
lret
jbe
mov
lock
es
dec
sub
xchg
lcall
pop
xor
cmpsb
in
mov
movb
outsb
cltd
jno
add
clc
xor
ja
cltd
adc
cmp
xor
nop
aas
pop
push
pop
mov
mov
repz
imul
push
mov
push
push
dec
xchg
add
sbbb
xor
push
mov
pusha
dec
scas
stc
out
pop
mov
sub
sub
mov
mov
mov
movsb
pop
cmpsl
sbb
mov
mov
cmp
lret
sub
adc
mull
sbb
add
mov
pop
andb
jno
mov
in
xor
dec
push
insb
lock
shl
je
jecxz
sbb
inc
cltd
mov
repz
adc
jp
in
xchg
jnp
ja
leave
es
mov
jp
and
sti
mov
test
mov
test
or
lods
dec
adc
sub
mov
mov
cmp
xchg
dec
js
out
test
je
mov
pop
in
ret
dec
out
dec
xchg
repz
xchg
ja
int3
xchg
sub
jno
mov
mov
mov
repz
sbb
cli
mov
add
shrb
mov
lock
sbb
push
loopne
jecxz
cltd
sub
cs
jmp
fsubrl
dec
sub
movsb
mov
shll
stos
ss
pop
sbb
inc
int3
sti
mov
inc
mov
cmp
aam
pop
push
xor
dec
cmp
addl
cmpsb
mov
mov
jnp
ficoml
pop
popf
into
pop
clc
sbb
sub
repz
cmp
inc
sub
loopne
ja
iret
jl
jecxz
xchg
stc
in
and
and
cmc
and
push
mov
sbb
dec
cmpsb
lock
lds
sbb
rclb
out
pop
jmp
stc
sub
cmpl
subb
into
pop
in
ss
je
mov
push
dec
jnp
jmp
push
add
std
inc
fsts
in
ljmp
jge
pop
rclb
cmpsb
fdivs
push
sbb
iret
or
inc
sbbl
pop
pop
cmp
mov
mov
data16
adc
push
lahf
out
pop
out
push
je
popf
push
lods
add
gs
lret
push
mov
sub
in
lret
adc
cmc
arpl
out
fwait
cli
addl
sbbb
xchg
fldcw
inc
call
out
mov
jp
inc
jbe
add
sbb
or
pop
jecxz
inc
mov
shrb
xor
sbb
cmpsb
xor
mov
insl
jecxz
jne
jmp
lods
pop
cmp
jb
fmuls
cmpsl
stos
inc
pushf
test
out
adc
lds
sbb
stos
or
fstps
aad
and
icebp
into
lock
popf
push
in
sub
mov
gs
or
jno
dec
mov
aad
dec
out
jmp
xor
push
mov
mov
les
xor
andb
inc
test
inc
std
ja
and
cltd
cmpsl
loopne
dec
inc
int3
adc
scas
cltd
cmpsb
xchg
roll
sbb
sbbb
dec
pusha
jge
dec
pop
adc
in
add
xchg
pop
xor
aad
orl
test
fsts
pushf
xor
and
mov
clc
or
xchg
inc
dec
ds
cmp
out
call
shrb
mov
ret
pop
push
jg
lods
xor
stc
pusha
sahf
test
pop
xchg
js
sub
in
imul
icebp
adc
cmpsl
or
stc
out
bound
aam
or
xor
repnz
mov
or
cmp
lret
sti
lcall
jl
hlt
push
je
mov
xor
mov
stc
ljmp
add
pushf
jns
daa
pop
test
loope
inc
inc
scas
add
sbb
push
stos
jno
sub
fstl
inc
sub
sarw
outsb
cwtl
mov
push
lcall
ljmp
inc
dec
pusha
test
shl
dec
sub
faddp
xchg
pop
popl
loopne
adc
aam
into
push
mov
pmaxsw
mov
daa
xor
inc
aas
push
or
mov
addr16
jecxz
movsb
adc
or
lods
inc
dec
scas
push
lret
xlat
pop
iret
mov
in
pushf
mov
loop
add
push
cmp
mov
fs
mov
cld
pop
jle
mov
push
mov
pop
xchg
stos
test
rcrb
pop
clc
into
in
pop
or
loop
jnp
xchg
dec
lods
sahf
jns
fcmovu
xchg
loope
or
mov
outsb
jmp
lcall
adc
mov
and
add
mov
mov
xor
cmpsb
jg
mov
push
cmp
adc
and
pop
push
insl
rorl
sub
imul
xor
nop
jg
loop
ss
and
nop
mov
iret
loope
inc
inc
cwtl
lods
or
jae
cmpsb
fildl
in
aad
mov
arpl
enter
aas
add
pop
push
dec
in
fdivl
mov
and
sti
test
or
sbb
rorb
rorl
cmp
scas
xchg
mov
xor
cmp
push
lcall
dec
adc
mov
xor
cld
dec
clc
loop
add
push
popf
xlat
push
or
jne
and
or
outsl
xchg
dec
pop
push
mulb
icebp
xchg
hlt
rcrb
leave
add
jmp
dec
sbb
sbb
push
es
pop
jae
pop
or
rorl
xchg
std
orl
inc
pop
jae
inc
mov
push
mov
popa
xor
sub
sub
hlt
push
sub
sub
mov
mov
das
je
and
lret
pop
loop
mov
push
fistpll
mov
pop
mov
lock
fldcw
enter
jge
pop
lods
dec
lret
xchg
ret
inc
in
mov
lret
dec
jns
dec
inc
lock
fmul
push
sub
xor
sub
mov
cmp
testl
lret
mov
lcall
int
into
lea
jnp
add
add
xor
loop
cwtl
pop
lods
repz
std
inc
jecxz
repz
dec
mov
hlt
lret
xor
pop
xchg
and
push
test
ljmp
imul
xchg
and
xorl
or
jle
jb
or
or
sti
push
and
call
jb
jnp
int
pop
arpl
adc
js
movsl
shrb
add
clc
adc
fsubr
jge
pushf
sub
push
out
js
jp
jae
negl
xor
push
js
mov
lods
popa
ds
push
xchg
imul
jo
xor
cmp
loope
fmull
hlt
popa
adc
mov
xor
xor
mov
fmul
cmp
mov
pop
shlb
orb
add
das
test
stc
das
sbbb
lea
and
aaa
idiv
mov
loop
out
push
mov
pop
inc
subb
jge
cmc
inc
fwait
jge
data16
aad
orb
test
jne
mov
sub
and
pop
sbb
loopne
xchg
addl
ret
shll
jecxz
data16
je
dec
divb
mov
das
in
adc
lods
ret
dec
xlat
pop
popa
adc
inc
enter
aad
pushf
sub
cmpsb
andb
adc
in
push
iret
ret
dec
cld
cwtl
dec
je
adc
sbb
loop
pop
and
lds
fists
mov
out
fisttpll
inc
xchg
and
inc
push
out
push
sub
daa
mov
ja
xor
or
pop
lea
xchg
stos
or
lods
mov
aad
lock
inc
inc
rol
add
ret
sub
xor
lret
cltd
outsw
sbb
pop
jmp
xchg
test
sub
stos
jmp
rclb
imul
mov
shl
xor
and
fnsave
popf
fcmovb
rolb
xchg
repnz
iret
or
sbb
sbb
ret
xchg
inc
imul
loop
mov
int
cmp
sbb
cld
sub
jmp
mov
add
push
xchg
xlat
movsl
fistl
or
mov
push
mov
call
outsb
unpckhps
jp
push
cmp
adc
cs
mov
cmpsb
pushaw
in
test
test
or
pop
rclb
cmp
int
out
lods
sbb
xor
sbbl
int3
fsts
mov
call
icebp
inc
fs
xchg
test
fstpt
push
icebp
inc
sbb
cmp
addr16
pcmpgtw
fsubl
aaa
scas
and
into
stos
ja
dec
xlat
outsb
sahf
pop
adcb
and
pop
ret
imul
mov
mov
xor
notb
mov
cmpsl
sbb
push
xor
les
ret
test
sbb
outsb
mov
inc
repz
cwtl
add
fisttps
loopne
mov
cld
mov
or
ficompl
xchg
or
cmp
cwtl
cmp
outsl
test
pushf
in
pop
cmp
push
imul
jno
in
sub
aam
xchg
pop
bound
sub
inc
ds
dec
negl
inc
repnz
pop
adc
mov
add
inc
sahf
push
mov
xor
adc
xor
outsl
call
aaa
ret
xor
inc
mov
push
sbb
pop
fwait
aam
fsubl
mov
mov
js
mov
and
jecxz
inc
ret
bound
popa
inc
xor
pop
inc
and
ret
movsl
xor
repz
lds
jecxz
scas
xchg
sub
data16
xchg
pop
movsl
imul
xchg
jmp
fstpl
mov
mov
jge
test
in
add
je
xor
scas
xchg
cwtl
mov
inc
or
xchg
stos
or
inc
mov
add
int
test
fnstenv
fcmovu
push
fidivrl
lcall
pop
call
rorl
es
xchg
jae
xor
insl
ret
adc
movsl
cmp
stos
dec
add
add
ss
xchg
call
imul
stos
mov
data16
mov
cld
das
test
xor
cmpsb
arpl
stos
dec
scas
jae
push
push
test
ljmp
xchg
and
dec
fidivrl
xchg
insl
sub
bound
dec
adc
outsb
shl
jge
sub
arpl
push
lahf
mov
sbb
mov
mov
out
push
aad
aam
cs
push
jmp
loopne
movsb
cmpsb
dec
sub
fs
mov
les
lret
adc
sub
sahf
xchg
mov
pop
stc
dec
xchg
jge
add
icebp
gs
dec
lar
ds
fsubrs
fwait
movsl
cmpsl
xor
adc
xchg
lcall
rcll
filds
test
or
xchg
sarb
cltd
cmp
sub
push
cmp
or
call
jg
pop
mov
je
adcb
cmp
adc
popf
jns
push
in
clc
leave
int3
lods
fists
jmp
test
testl
das
rep
rclb
mov
mov
xor
ret
pushf
pop
aad
or
decb
xchg
aam
cld
or
cmpl
pusha
int
pop
mov
mov
in
inc
push
or
bnd
ficoml
pop
cmc
aaa
add
and
sbb
xchg
adc
jns
sbb
icebp
bnd
pop
lahf
out
or
cmp
neg
jp
rcrl
jg
loop
ljmp
xchg
xor
dec
jo
push
loope
jbe
inc
xchg
pop
gs
inc
xchg
mov
movb
or
ficoml
dec
sti
fisubl
mov
popa
lret
pusha
push
test
pop
xchg
xchg
movsl
ds
mov
aam
lahf
mov
stos
addw
adc
fs
sub
fildll
pop
xor
jo
jmp
sbb
and
xor
cmp
scas
lea
mov
popf
in
jb
sub
xchg
cmc
sbb
adc
jge
xor
mulb
mov
mov
loope
and
in
repz
js
lods
adc
in
add
decb
insb
arpl
out
fldt
test
bound
jle
sub
scas
incb
and
pop
flds
ficomps
mov
xor
cmp
iret
shrb
lret
es
xchg
insb
sahf
push
stc
ds
lret
negb
xor
mov
inc
sahf
push
mov
cmp
stos
jle
mov
mov
mov
addl
cltd
push
lods
lret
mov
shrl
adc
rcll
mov
leave
mov
nop
or
clc
mov
mov
ds
icebp
shrb
testb
dec
push
insl
jne
aaa
leave
insb
imul
or
xor
cmp
jnp
sub
outsb
dec
pushf
sub
mov
inc
or
je
ss
mov
add
idiv
divb
iret
pop
in
inc
sarl
jg
int3
fstpt
addr16
insb
fbld
roll
mov
pop
les
outsl
sub
push
cld
xchg
sub
jmp
jle
fbld
jecxz
pusha
bound
inc
mov
loopne
mov
pop
aas
mov
js
lret
bound
filds
ss
push
lea
pop
movsl
sbb
and
lds
outsb
mov
or
mov
imul
insl
jg
dec
jl
xor
add
jne
iret
pop
jl
cmpsl
mov
sti
sti
rcr
scas
sbb
cmpsl
sbb
pusha
nop
fisubl
sub
scas
ss
popa
jbe
push
sbb
cmp
add
fisubrl
lcall
fwait
pop
fs
test
cltd
fiaddl
cmpsl
les
push
sub
mov
jl
cmp
repz
push
jl
shll
outsl
mov
xchg
test
fst
and
insl
or
adc
das
sub
cmp
cmpsb
pusha
sbb
repnz
int3
mov
aad
cmpsl
pop
rolb
jge
repnz
mov
andl
add
xor
sub
and
or
inc
jmp
jae
out
lds
add
push
fs
fsubrs
xchg
mov
sbb
scas
ret
mulb
sub
lods
dec
cmovle
test
sbb
cli
cmp
mov
in
bound
addr16
pop
push
ret
and
push
or
push
dec
outsb
shll
add
sub
imul
jl
bound
out
es
xchg
cli
or
push
movsb
push
es
jp
sti
iret
inc
xchg
cs
in
push
out
add
fdivr
xor
jmp
in
pusha
adc
in
inc
pop
call
or
add
test
mov
je
js
push
mov
bound
and
jle
aam
jmp
cwtl
ja
ja
pop
das
push
jecxz
enter
ljmp
mov
mov
adc
mov
sti
add
cmpb
xor
push
xor
xor
xchg
xor
and
fwait
mov
ret
xchg
test
movsb
ss
icebp
pop
and
cmp
std
mov
fcom
jns
movsl
aam
arpl
dec
in
push
popa
fs
outsb
jbe
testb
cmp
movsl
dec
shrb
cltd
mov
daa
mov
jp
inc
mov
scas
mov
pop
sub
in
in
xor
jb
movsl
movsb
addr16
lods
movsb
xor
lcall
aad
sub
sbb
pop
into
inc
or
in
mov
and
les
fbstp
bound
pop
test
inc
inc
push
shrl
pop
mov
add
mov
mov
xchg
js
mov
sahf
xchg
outsl
dec
mov
and
push
add
loop
int
push
adcb
inc
sbb
int3
adc
lret
cmp
sbb
jle
cmc
adc
xor
rcrb
iret
sub
subb
or
popl
enter
jl
stc
out
mov
jnp
enter
sahf
sub
xchg
ljmp
jl
leave
mov
gs
cli
and
push
xchg
shlb
movsl
test
sub
mov
cli
or
and
mov
lcall
jnp
out
leave
pop
and
dec
arpl
jge
or
lcall
or
test
pop
sbb
dec
inc
ret
dec
rorl
icebp
xlat
sub
inc
mov
orb
sub
stos
xor
jne
leave
ret
jae
jmp
jo
loope
pop
jle
cmpsl
mov
imul
insl
adc
lds
int
jne
in
cmp
lods
jmp
mov
movsb
sbb
push
cmp
jo
test
or
scas
clc
push
jns
lods
ret
push
dec
lock
enter
loopne
mov
mov
cs
loope
jo
enter
sub
jp
cmc
test
xor
repz
and
jge
push
aad
into
lcall
leave
fcmovne
mov
pop
subl
xchg
jb
adc
fwait
mov
pop
jge
mov
xor
aad
cmp
xchg
or
xchg
inc
cmp
movl
mov
and
scas
pop
sub
mov
and
or
xor
cli
pusha
bound
xchg
and
hlt
or
mov
inc
push
sbb
add
mov
mov
lret
testl
inc
bound
adc
arpl
mov
insb
jge
fnstenv
mov
lea
pop
xor
ja
aam
and
xor
and
cmp
mov
arpl
push
push
pop
hlt
shrl
jb
andb
lea
push
out
xchg
pop
dec
es
lods
push
imul
movsl
xchg
xor
cld
fdivr
add
sbb
out
std
bt
outsb
mov
out
pop
xchg
cmp
fwait
jno
inc
push
pushf
adc
lret
cmp
cmp
out
clc
pop
xchg
and
xchg
fistl
cmp
gs
or
sub
cli
sub
das
mov
add
rorb
int
mov
cmpsl
mov
leave
sub
dec
scas
aam
nop
outsb
fists
pusha
push
testb
clc
mov
js
inc
jo
nop
add
insl
xor
stc
jae
xchg
clc
or
pusha
fs
mov
jns
sti
and
std
mov
inc
popf
insb
out
ficompl
fcmovne
dec
pop
adcb
mov
hlt
cmc
stc
pop
xchg
cld
mov
cs
sbb
adc
aaa
in
int
or
int3
out
and
jnp
cmp
ret
loopne
mov
mov
fs
jo
cmp
xor
push
mov
pxor
sub
cbtw
je
in
shll
sbb
push
jmp
cmp
push
add
xlat
mov
mov
push
mov
scas
call
pop
sub
repnz
mov
js
mov
pop
out
xchg
adc
pop
pop
push
push
ret
inc
inc
sub
fs
add
fmuls
mov
cld
add
pusha
jmp
dec
test
pushf
xchg
sbb
fbld
jg
ror
sub
loopne
cmp
hlt
rorl
cmovge
cli
push
scas
or
cli
mov
out
insl
or
fstps
movntps
add
sub
dec
xor
pusha
sub
pop
stos
aam
push
pusha
idiv
data16
cmpsl
pop
orl
cld
push
sbbl
mov
pop
icebp
mov
inc
in
jmp
mov
data16
cs
push
or
scas
or
sbb
ret
jg
push
lret
lcall
dec
and
aad
and
add
test
and
sbb
jns
xor
fidivrs
jnp
rolb
nopl
push
pop
push
dec
sub
sub
jbe
jbe
mov
mov
mov
jle
daa
out
ja
movsl
push
popf
lock
mov
jbe
pop
hlt
sarl
jns
loopne
loop
jnp
aaa
pop
xchg
stos
pop
push
cs
test
les
aaa
lods
out
xchg
test
push
dec
fsts
mov
std
dec
pop
push
xchg
in
mov
mov
pop
mov
mov
call
iret
mov
lods
sub
hlt
cmp
jo
outsl
and
inc
pop
lret
sar
sbb
jl
je
jge
mov
pop
cli
dec
pop
jnp
repnz
xchg
sti
or
sarb
add
inc
insb
pop
pushl
lret
in
dec
sbb
push
and
aad
aaa
pop
add
or
adc
out
cwtl
std
testb
es
sub
xchg
mov
jecxz
ljmp
mov
je
rorb
enter
add
cmp
sbb
mov
in
push
popf
lods
mov
push
jno
int3
icebp
fwait
jle
xor
jo
and
out
jmp
rcrb
shlb
pop
mov
insb
pop
aas
mov
call
mov
mov
mov
loopne
shl
xchg
loopne
inc
push
mov
into
jp
nop
sarb
and
test
mov
sahf
es
fldenv
jp
pop
and
push
mov
sbb
test
push
data16
mov
cmc
loop
sahf
daa
cmp
inc
sub
mov
jb
movsl
mov
mov
call
dec
movl
test
cs
adc
adc
in
mov
js
je
sti
aas
aad
and
sbb
lret
inc
hlt
mov
dec
xchg
xor
sbb
jp
add
xchg
cmpsl
mov
sbb
neg
sbb
sbbb
ds
xchg
jge
scas
cmp
sbb
xchg
ss
rcl
cmp
fdivs
dec
rol
in
imul
popf
ret
push
fwait
in
aaa
xor
lret
mov
fwait
or
stos
mov
ss
push
cmp
xor
mov
and
dec
or
and
inc
cltd
inc
stc
test
mov
out
mov
or
xor
popa
clc
dec
adc
mov
cmp
mov
fstl
popa
fxch
mov
xor
lds
or
or
in
inc
sbb
lds
add
divb
ja
jns
cmpsb
inc
jae
jne
cli
xchg
sbb
pop
dec
adc
add
fimuls
notl
and
xlat
das
and
aas
adc
pop
divl
in
and
xchg
inc
inc
int
add
pop
xchg
jle
lods
out
test
ffreep
lock
pushf
sbb
jg
mov
ss
xlat
mov
ljmp
fistpll
aad
pop
icebp
mov
imul
insl
cmpsl
and
mov
in
ficompl
pop
sbb
pushf
add
loop
loope
call
xchg
push
sahf
insl
or
push
cmc
xor
movl
cmpsl
call
xor
mov
addr16
rcrb
sahf
mov
in
lcall
into
pop
ss
js
inc
notb
or
addr16
cli
outsb
out
rolb
xchg
testb
std
loopne
fistps
xor
pop
xor
mov
mov
jns
adc
pop
inc
das
out
push
inc
and
push
push
dec
lret
repz
mov
ret
loope
push
cmpsb
gs
lret
mov
out
testl
jmp
addw
mov
and
ss
mov
fstpl
and
lds
rcl
inc
xchg
loop
or
mov
add
xor
iret
std
sahf
pop
aam
popf
mov
loope
loope
jns
xchg
mov
mov
movsl
pop
mov
pop
or
int
lock
xchg
test
sub
cmc
and
add
movsb
cwtl
shr
lret
sbb
push
sbb
cli
jbe
jb
push
adc
stos
pop
cltd
subb
ret
inc
mov
or
xor
cwtl
pop
loope
mov
inc
xchg
push
jno
push
jno
cmpsl
ja
xchg
mov
xlat
or
loop
loope
sbb
dec
outsb
jmp
fdivrl
imul
imul
aaa
fwait
outsb
sti
lret
jne
mov
pop
jecxz
fnsave
das
cs
sti
dec
pushf
add
xor
jo
mull
dec
jnp
aam
scas
not
pushl
push
leave
mov
shrb
bnd
std
mov
out
rorl
iret
or
dec
cs
xchg
xchg
mov
adc
lahf
adc
xor
or
fisttpll
and
inc
adc
or
int
shlb
jb
insl
insl
push
pop
or
jmp
mov
fiadds
roll
int
cmpsl
es
add
push
pop
jecxz
push
push
cmp
mov
fwait
dec
mov
imulb
push
clc
adc
lret
lock
xor
ljmp
dec
testb
lock
add
and
fisubrl
and
or
mov
shlw
push
sbbb
int
inc
jmp
sbbb
pop
adc
out
dec
arpl
xor
cmpsl
es
dec
dec
adc
add
xor
repz
and
adc
aad
pop
sbb
in
nop
in
mov
pop
xlat
shlb
add
adc
xchg
fsubrs
stos
xchg
aad
sub
je
jecxz
mov
jp
scas
loope
and
movsb
stc
mov
pop
int3
mov
pop
pop
jno
xlat
mov
dec
fmul
fbstp
sbb
jl
aam
nop
test
push
xchg
push
subl
xorl
xor
cltd
aas
shll
add
insb
cmp
clc
lods
push
dec
pop
or
mulb
mov
mov
jne
jl
int
cmp
addr16
dec
or
ror
mov
icebp
xchg
fiadds
out
inc
jge
and
add
orl
leave
in
stos
pop
inc
mov
push
insb
fsubr
std
push
stos
pusha
push
mov
mov
add
and
lcall
push
mov
arpl
inc
repz
xchg
mov
scas
push
cmpsl
dec
filds
adc
ret
dec
rorl
outsb
cmp
je
pop
ja
lret
cmp
rcrb
fwait
je
js
cltd
jbe
aam
test
test
jne
jge
cmp
jg
pop
mov
pop
out
es
ficoml
sub
and
push
enter
lods
pushf
lea
mov
push
jo
std
cwtl
cmp
jbe
js
push
add
push
dec
add
movsb
scas
jle
idivb
movsl
jecxz
add
gs
lret
nop
mov
mov
adc
outsl
popa
mov
in
test
mov
fdivl
jmp
pop
push
push
fiaddl
mov
ss
cmc
mov
scas
sbb
jge
in
popf
xchg
jmp
and
inc
cli
psllq
xor
je
lcall
icebp
dec
stc
test
pop
loop
sbb
lock
inc
mov
lods
cs
mov
xchg
mov
jo
inc
loope
sub
pushf
hlt
jns
scas
fiaddl
out
or
pop
das
iret
lock
repnz
mov
mov
push
outsl
popf
enter
cwtl
pop
mov
test
scas
jo
inc
mov
loopne
mov
dec
mov
mov
iret
pop
movsl
stc
jle
jno
adc
roll
lods
lret
sub
dec
or
fcmovb
pushl
sub
mov
jae
adcl
adc
push
sub
mov
dec
or
test
cmp
and
test
push
xor
icebp
jnp
iret
ret
iret
bound
adc
sahf
add
data16
inc
mov
das
loop
push
arpl
inc
mov
in
rorl
add
mov
sbb
dec
mov
ret
sarl
adc
dec
jb
and
mov
add
fdivr
hlt
out
inc
jbe
xor
js
aam
pop
test
loop
cltd
ret
hlt
cmpsb
mov
fiaddl
mov
push
loope
daa
loopne
out
dec
pop
or
aam
mov
cmp
aad
add
mov
sarb
lahf
es
sbb
add
jp
mov
push
push
or
xor
fidivrs
out
scas
sarb
in
iret
xor
bound
or
aam
or
pop
lahf
sbb
rcll
aas
inc
add
lret
ret
shrb
cs
scas
pusha
daa
enter
jle
iret
cmovg
and
sti
and
or
cmp
and
jle
nop
dec
push
mov
dec
mov
mov
mov
pop
or
sbb
jns
pop
cmp
mov
pop
test
test
mov
out
ss
orb
xchg
mov
push
mov
xchg
aas
push
xor
jmp
adc
push
into
pushf
rol
inc
int
or
fadds
lods
mov
filds
xchg
sti
cltd
testl
push
cwtl
in
mov
ljmp
imul
outsl
add
sbb
inc
and
pop
pop
mov
pop
scas
ljmp
push
add
add
cltd
mov
aam
ds
movsb
cmp
xor
xor
adc
inc
test
cmp
sub
xchg
add
ds
xlat
int3
mov
out
pop
negl
in
jae
loop
rcrb
xlat
fistl
add
adc
xor
mov
pushf
mov
push
cmp
sahf
xor
outsb
and
nop
jl
cmpsb
pop
mov
xchg
pop
pop
imul
jecxz
xorb
jne
sub
test
lea
cld
mov
add
fiaddl
or
mov
flds
icebp
inc
lods
repz
mov
xor
xor
loop
sub
repz
xor
ss
jge
dec
insb
jae
hlt
mov
cmpsb
dec
xor
cmp
stos
mov
fldl
out
out
pop
stos
pushf
inc
inc
outsb
pop
mov
loopne
add
imul
jle
cmp
jle
in
out
adc
push
or
sbb
stos
push
add
adc
inc
dec
stos
inc
dec
mov
dec
dec
aas
add
or
xor
pop
in
rcll
cvtps2pi
sbb
rcr
push
jmp
pop
mov
and
jg
jnp
faddl
mov
push
cmp
inc
pop
and
movsl
inc
or
sub
xchg
daa
in
roll
add
push
outsb
add
cwtl
inc
sbb
js
cltd
and
fisttpl
inc
mov
nop
mov
push
cli
stos
jecxz
pop
mov
push
hlt
iret
sahf
mov
push
ds
push
aas
stos
add
arpl
rcr
es
pop
test
rcl
jb
jbe
frstor
testb
sub
dec
roll
push
pop
mov
mov
and
addb
fimull
cld
xlat
iret
daa
pop
push
xor
cli
and
loop
ss
cmp
add
lods
leave
cli
leave
roll
fs
int3
not
xchg
jne
cltd
outsb
xchg
mov
lret
jbe
inc
mov
mov
fdivrs
lods
fcomip
push
std
lret
popl
clc
sbbl
in
outsb
test
adc
sbb
mov
dec
jmp
xor
mov
ss
imul
in
fdivl
add
and
loopne
add
xor
cwtl
scas
orl
pop
sbb
push
pop
push
out
mov
or
jmp
mov
aas
cs
fdivp
jbe
xchg
dec
loope
pop
sbb
xchg
je
sbb
leave
jle
fcmovnbe
xlat
add
sti
mov
push
mov
jnp
push
add
subl
jno
xor
mov
loopne
xchg
xor
xor
je
out
repz
jnp
jmp
cmp
jno
adc
push
pop
ss
sbb
adc
out
pop
call
stos
pop
daa
dec
adc
scas
and
xchg
jp
push
dec
inc
aam
pop
dec
mov
mov
cmp
test
inc
push
test
int
fdivl
aaa
ljmp
inc
js
rcrl
out
outsb
outsl
fsubrl
mov
sbb
das
bound
adc
out
hlt
insl
sub
jne
push
lds
mov
pop
adc
mov
and
aad
jnp
xchg
sub
sub
aaa
leave
call
movsb
mov
cli
icebp
ror
pop
aaa
mov
fisubl
mov
sbb
dec
les
mov
mov
test
mov
inc
out
int
mov
out
fnstcw
stos
call
ret
adc
cmpsl
scas
xor
pop
dec
daa
pusha
mov
test
fwait
mov
divb
fisttps
adc
cwtl
outsb
iret
xor
jnp
or
jb
xchg
inc
lret
adc
cmp
mov
and
test
loop
or
fnstenv
es
push
mov
in
popa
sahf
cltd
stos
jle
sti
ret
and
push
push
cltd
leave
pop
mov
ds
stos
movl
push
sbb
and
lods
adc
je
pop
call
xchg
ret
fs
daa
rcl
mov
xchg
jae
jnp
jmp
mov
aaa
cmpb
sub
xorw
ja
inc
incl
mov
rep
test
movb
inc
outsb
mov
adc
jns
inc
sahf
idiv
ret
int3
fs
or
jmp
adc
mov
sub
lods
mov
push
or
push
pop
mov
mov
push
popf
pop
cmp
adc
dec
push
out
xor
je
inc
fcmovu
loope
dec
cmc
fldl
dec
pop
and
push
inc
loop
adc
aad
fidivl
push
pop
xchg
gs
es
dec
in
rorl
pop
testb
mov
push
push
bound
push
adc
pop
pushf
out
push
dec
or
sahf
popa
mov
shlb
sub
pushf
ljmp
dec
std
push
popa
ljmp
fmuls
sbb
int3
push
dec
or
pop
mov
shl
subl
xchg
rcr
mov
leave
cmc
shl
fs
add
cmpsl
mov
inc
stc
inc
sbb
sub
pop
or
mov
cs
and
jge
in
aad
or
xchg
push
ret
add
sti
outsl
mov
stos
mov
jno
test
or
jp
insb
push
mov
subl
xchg
jo
inc
add
add
and
push
test
cmpsl
in
inc
pop
inc
mov
movsb
mov
mov
jecxz
loop
aam
test
out
or
mov
push
mov
push
fcoml
jmp
mov
and
inc
movsl
xchg
adc
xchg
adc
mov
repz
push
pop
rorl
mov
sbb
popf
arpl
dec
inc
xor
push
sbbl
lods
pop
mov
add
sbb
gs
ret
jg
stos
mov
arpl
int
pop
rcll
insb
inc
mov
fldt
mov
cmp
xor
jno
addr16
add
inc
fs
pusha
or
ljmp
adc
iret
dec
mov
aaa
test
aam
sahf
mov
adc
sub
cmp
push
cmc
dec
call
std
sbb
imul
dec
mov
stos
and
pop
js
jmp
leave
adc
sub
fwait
or
mov
inc
popa
jbe
incb
movsl
roll
push
orb
mov
and
movsb
shr
inc
repnz
into
jo
mov
or
mov
or
mov
dec
push
lcall
jmp
repz
movsl
sti
pop
lea
jnp
pop
inc
sbb
push
sub
jne
adc
mov
dec
lea
dec
negb
idivb
data16
add
fstl
nop
add
add
test
je
outsl
pop
mov
xor
jmp
xor
push
shlb
and
push
cwtl
mov
mov
cmp
inc
fists
push
pop
jnp
in
ret
push
test
mov
and
push
sub
movsb
repnz
add
loop
arpl
mov
xlat
int
enter
add
xor
loope
pop
cmpsb
sbb
lret
mov
mov
ret
inc
daa
sub
hlt
cmp
and
lea
fwait
pushf
mov
ret
push
int
inc
icebp
or
cmpsl
pop
dec
repnz
cltd
lods
xor
push
jle
lret
mov
inc
test
les
sub
xchg
aad
nop
xor
cmp
cli
test
stos
into
jnp
sub
dec
or
test
pushf
outsl
mov
mov
fwait
jb
adc
test
pop
sbb
xor
fimull
in
mov
insb
mov
mov
out
pop
inc
lcall
pop
or
imul
xchg
ret
or
mov
fcom
or
push
pushf
push
lcall
mov
leave
iret
mov
ss
aaa
sub
cmpsl
mov
xchg
in
clc
jp
push
dec
arpl
addb
lods
jns
push
popa
lock
call
divb
mov
fs
dec
lcall
inc
loop
inc
leave
mov
aam
and
and
iret
into
mov
push
fcmove
inc
sbb
std
dec
mov
dec
and
pop
sbb
fs
mov
mov
push
xchg
idivb
sbb
or
in
in
cltd
mov
jg
loopne
int
leave
jae
mov
mov
pushf
lcall
fisubrl
pop
bound
mov
int3
dec
jg
sysexit
fldcw
fwait
xor
hlt
dec
mov
and
mov
inc
pxor
push
je
inc
jb
pop
fcmovb
testl
cmp
mov
mov
push
mov
aas
popf
dec
add
xchg
push
xorl
mov
dec
mov
pusha
push
es
ss
mov
shll
stos
mov
addps
test
into
ret
push
iret
test
and
jno
in
aad
repnz
mov
pop
aas
xchg
test
dec
lods
in
lcall
sbb
jae
ret
sbb
clc
or
mov
or
push
pop
jb
repz
mov
repnz
sub
hlt
or
shlb
inc
divl
cmp
xchg
sarl
adc
xchg
insl
mov
fisubrs
cmpsb
and
mov
push
cmpsl
sbb
push
sbb
loop
mov
mov
sbb
xchg
mov
mov
sub
dec
fisubl
add
lahf
addr16
push
push
in
ljmp
push
je
xchg
and
sub
dec
inc
fstp
mov
mov
xlat
stos
shrb
enter
or
test
or
es
push
or
ret
jns
int
mov
mov
xlat
das
mov
imul
mov
cmp
mov
lds
lds
push
rcrb
test
mov
into
mov
addr16
test
mov
out
push
test
push
ror
jg
jl
popf
mov
idivl
loop
pop
dec
mov
aas
jl
rcr
mov
mov
mov
add
and
xchg
lods
jecxz
add
jae
mov
sahf
cmp
add
popa
stos
xchg
mov
dec
mov
mov
enter
sub
add
sub
hlt
lock
out
xchg
xor
sub
fcomps
jo
out
mov
dec
imul
xor
adc
cs
xchg
subl
sbb
in
fdivrs
sbb
shrb
mov
jae
push
test
cmp
je
pusha
fisubl
fs
stos
inc
in
adc
add
or
cmpsb
mov
adc
stos
std
cwtl
push
pop
movsb
dec
aas
and
jmp
test
mov
cmc
or
mov
lcall
push
loop
push
setno
sub
int
sbb
push
sub
or
mov
cli
lock
cs
in
xor
mov
popa
daa
mov
test
adc
mov
fiadds
jl
jecxz
out
lods
or
popa
jns
add
push
subb
lret
sarb
adc
add
cmp
mov
js
cmp
xchg
addl
cmpl
lea
popa
cmp
cmp
leave
jp
and
jmp
popf
mov
arpl
outsl
test
jb
and
sahf
nop
int3
adc
or
shll
adc
in
icebp
out
pop
push
cltd
and
mov
scas
mul
jmp
add
lret
loop
and
and
lea
shrl
aam
mov
sahf
mov
inc
mov
dec
das
push
sbb
gs
clc
loopne
dec
jne
int3
bnd
call
mov
imul
fdivs
sub
movsb
push
push
xchg
insb
adc
loop
aaa
adc
xchg
and
mov
fcompl
fildll
sbb
loopne
mov
pop
push
push
pop
ljmp
inc
out
popa
int
es
stos
xchg
insb
pop
dec
push
imul
jae
je
popf
mov
jo
jo
mov
scas
add
outsb
addr16
jmp
into
add
jno
mov
cli
cmp
mov
push
dec
add
je
jb
pop
mov
lock
fildl
sbb
dec
js
sbb
push
gs
test
or
mov
inc
adc
js
xor
xchg
mov
loop
jbe
aas
scas
scas
pop
imul
xchg
mov
cwtl
lahf
ljmp
jecxz
loope
lahf
cmp
pop
jge
pop
add
iret
jo
dec
loope
loopne
stos
stc
ja
ret
xor
lock
int3
push
in
leave
cmp
test
push
pop
xor
sbb
loopne
pop
mov
jbe
mov
add
xor
mov
xchg
jle
sub
and
rolb
sarl
jge
fidivrs
rcrb
cmp
sub
outsb
sub
pop
xor
fistps
pushf
cltd
fsubl
lock
push
or
in
insl
aam
or
mov
jmp
imul
mov
clc
or
inc
or
jo
sbb
adc
rolb
cmp
into
lods
and
hlt
lods
movsb
pop
bnd
lods
clc
sahf
adc
iret
inc
mov
loope
adc
xchg
shl
out
xor
addr16
mul
cmpsl
xchg
or
and
cmc
subl
add
mov
xchg
jge
lret
fsubrs
scas
mov
xlat
les
ds
cmp
sbb
xchg
aaa
sub
jo
dec
lods
jl
iret
mov
mov
je
out
inc
jno
mov
in
lahf
xor
cmpsb
push
inc
scas
pop
mov
and
das
mov
pop
adc
mov
add
popf
aaa
push
jno
out
add
enter
xchg
mul
repz
adc
cmp
stos
mov
xor
inc
or
pop
cmp
jg
fisttpll
loop
mov
scas
jecxz
or
inc
out
ret
arpl
mov
push
lods
shlb
dec
addr16
xchg
cmc
jle
xor
jbe
iret
aas
xor
loopne
in
and
add
xchg
cmc
shlb
arpl
adc
and
jns
mov
and
fstpl
idiv
fstpl
inc
int
dec
insl
mov
lcall
xor
divl
cs
sub
cmp
mov
lods
ret
jae
das
and
imul
enter
js
out
in
add
pusha
mov
pop
pop
and
addr16
cli
fcomp
cmp
insb
mov
out
sbb
stc
daa
pop
aam
les
sahf
nop
cld
mov
adc
subb
xchg
push
sub
mov
call
ret
sub
pop
jp
fs
dec
cmpb
cld
or
lock
aam
mov
outsb
notb
jmp
lds
mov
pop
ja
adc
mov
inc
mov
bound
lock
jno
mov
call
out
mov
popa
cld
pop
sbb
push
or
inc
sub
mov
jecxz
mull
nop
jle
cmp
add
xchg
ret
push
cmp
push
scas
sbb
lds
add
lret
ljmp
sbb
test
push
push
dec
lock
sti
in
js
cmpsl
roll
cmp
ds
mov
loopne
and
cmp
dec
hlt
test
stc
push
in
xor
pop
pop
dec
xchg
or
mov
pop
fistpll
pop
mov
leave
lcall
mov
dec
repnz
scas
mov
cmp
mov
pop
jmp
bound
mov
scas
inc
inc
js
out
daa
fdiv
or
jbe
cmpsl
add
add
call
jns,pt
xchg
movsb
ja
mov
dec
out
and
vmread
xor
div
std
dec
mov
inc
pop
cmp
sbb
push
aaa
adc
rorl
test
out
div
mov
jbe
xchg
ja
popa
sub
jns
test
and
aad
popa
push
pop
scas
fnstenv
repz
stc
cmp
mov
xchg
sbb
loopne
mov
fstl
inc
or
scas
lods
loop
push
outsl
mov
dec
or
xlat
xor
xchg
mov
push
sbbb
stos
es
lret
insl
and
adcl
add
aaa
int3
icebp
ja
xchg
and
or
push
popa
cwtl
add
aam
dec
jge
testb
jle
xorl
xor
bound
in
lods
sub
icebp
out
loopne
test
sti
sahf
fmul
rorl
push
repz
shlb
cwtl
dec
mov
es
in
js
mov
push
pop
movsl
cmp
mov
loopne
lret
jecxz
or
adc
inc
sub
mov
imul
std
mov
test
pop
push
es
mov
xor
cltd
or
js
cwtl
push
pop
fistpll
test
fs
sbb
enter
insb
popf
or
and
add
fs
cs
sub
xchg
js
nop
outsl
movsl
cmp
daa
sub
scas
dec
scas
xor
aad
mov
adc
leave
cmpsl
mov
stc
pusha
pop
out
cli
in
adc
pushf
sti
lret
loopne
and
push
sbb
or
mov
sub
adc
mov
cmp
sahf
cmp
jns
mov
fcomps
jmp
dec
sbb
xchg
mov
fbld
pop
cmp
mov
add
jle
mov
dec
lods
push
mov
jg
fidivs
insl
cmp
xchg
push
dec
jb
out
std
imul
push
mov
adc
mov
neg
or
mov
dec
ds
dec
xchg
inc
lods
ret
dec
jne
test
mov
fisubl
or
loopne
and
into
jbe
pop
test
push
jge
dec
mov
orl
mov
or
sti
xchg
test
add
dec
mov
jne
pop
pop
stc
gs
dec
rorb
xchg
and
andb
or
sub
jbe
dec
xchg
arpl
jb
sahf
jne
fistl
cs
jle
mov
inc
inc
push
pusha
xchg
data16
mov
sbb
jle
cli
je
adc
out
iret
shlb
sub
in
int3
cmc
push
je
insl
cmp
ss
xchg
ss
mov
pop
push
aaa
add
lock
in
push
mov
cmp
loopne
or
add
jb
mov
stos
mov
mov
sub
rolb
mov
mov
mov
dec
xor
out
cmp
cmpsb
stos
lods
inc
and
mov
inc
sub
jecxz
sub
push
negb
mov
es
adc
int
jbe
jne
pop
cld
bnd
xchg
enter
mov
inc
jnp
inc
xorl
push
sbb
dec
xlat
xlat
mov
mov
pop
jno
dec
ret
push
pop
out
pop
push
sub
mov
movhlps
cmpsb
js
jg
mov
neg
sub
or
xchg
adc
xlat
outsb
mov
mov
lods
push
into
sub
ret
ljmp
xchg
cltd
sti
mov
or
aad
lock
jmp
repz
xchg
add
pusha
xchg
push
aas
push
lret
dec
imul
lds
push
sub
sub
outsl
push
out
lret
loope
lock
int
add
mov
cmpsl
mov
add
imul
lea
arpl
in
rcrb
mov
cmp
add
jecxz
mov
adc
jecxz
add
lods
in
out
repz
aad
and
add
or
push
aad
jmp
imul
push
xchg
iret
hlt
or
stos
dec
cmp
or
xor
loop
fstps
dec
hlt
nop
pop
jl
sub
pop
das
loopne
push
movsl
nop
rcl
movsb
inc
inc
cmp
inc
test
dec
or
add
ret
leave
dec
sub
rcll
or
rclb
push
neg
cmp
inc
arpl
xchg
fsubs
cmpsb
pop
fidivrs
sbb
push
and
addr16
mov
gs
xchg
xor
jecxz
jne
int3
cltd
dec
ljmp
bound
lds
inc
movsl
pop
mov
push
sbb
pop
adc
pop
flds
icebp
inc
into
int3
leave
sub
mov
movsb
mov
repnz
mov
and
je
ret
mov
jae
pop
sub
or
dec
push
push
test
fwait
push
xchg
movsl
and
xchg
dec
cwtl
push
idiv
lods
stc
stos
mov
outsb
test
filds
in
sub
and
in
ficoms
and
aad
lods
mov
leave
add
test
out
loope
push
push
or
jp
and
xor
rcr
pop
sbb
xor
jne
sbb
sbb
mov
shl
jge
push
lcall
xorb
xchg
icebp
sbb
mov
xor
push
out
xchg
and
ficompl
adc
clc
pop
xchg
sbb
dec
push
ja
fmuls
mov
scas
add
and
fwait
adc
jg
insl
fistps
fcompl
sarl
sarl
and
cmpsb
sarb
repz
and
xchg
mov
stc
push
ss
pop
sbb
jmp
adc
xchg
das
stos
xor
fists
cld
lret
dec
dec
lock
jns
fsubl
xchg
insb
mov
push
out
push
lahf
out
sbb
sbb
sar
sub
push
xor
add
add
fcomi
iret
jo
hlt
test
daa
call
push
xor
lock
mov
andl
imulb
mov
movsb
cmp
or
loop
mov
dec
ja
shl
jo
lds
adc
scas
xor
xlat
sub
mov
xor
jne
jae
inc
adc
add
and
in
sbb
into
js
pop
loop
jp
mov
repz
push
mov
push
dec
xor
fst
popa
push
enter
pop
mov
das
jno
jb
loop
adc
dec
cmpsb
pushf
rcll
or
jne
cmpsl
int3
lock
ficomps
xchg
xchg
jne
pop
leave
sbb
test
inc
stos
inc
daa
jmp
lods
pop
dec
je
movsb
xor
dec
subl
test
jg
lea
dec
rsqrtps
or
subl
mov
or
mov
popa
push
mov
pop
adc
xor
jae
movsl
orl
xlat
imul
xor
ss
pop
jbe
xchg
inc
aam
mov
xchg
mov
pop
testb
push
pop
repz
lods
jne
fcoml
xchg
mov
pop
int3
movsl
lret
and
imul
and
mov
or
cs
incb
mov
jle
icebp
jbe
les
test
in
icebp
mov
xchg
mull
cmp
pop
aad
cltd
sbb
adc
andb
push
daa
mov
adc
xor
mov
cmc
loopne
inc
and
ret
mov
xchg
les
mov
jnp
das
add
adc
dec
cltd
insb
jecxz
dec
push
ja
cmp
lahf
out
xchg
sub
mov
jl
dec
enter
mov
or
mov
add
xchg
fldenv
xor
mov
lods
mov
mov
mov
pushf
mov
add
fwait
jmp
xchg
ret
dec
subl
gs
inc
std
leave
dec
push
xor
cmp
dec
pop
scas
push
dec
inc
js
add
push
push
sti
cmp
jecxz
subb
sub
addr16
call
test
jmp
lds
es
aas
sti
or
scas
inc
in
pop
loop
mov
inc
sbb
jg
jl
xor
test
int
sbb
adc
pop
test
pop
shlb
jo
mov
dec
test
mov
loope
loopne
cltd
fidivl
ja
xchg
je
adc
dec
jns
push
push
jmp
lcall
inc
and
sarb
dec
mov
clc
cli
fstl
lods
loope
fwait
lds
mov
pop
int
pop
ret
iret
call
xchg
pop
mov
mov
xor
shlb
push
out
cmp
je
enter
sbb
mov
jne
ret
int3
aaa
loop
push
and
gs
jecxz
sbb
or
aas
cmpsl
arpl
stos
xchg
mov
fisttpll
movsb
mov
leave
xchg
jp
jne
sub
je
adc
in
stc
test
movsb
cmp
xchg
push
aad
or
lock
orl
sbb
mov
push
imul
adc
fsubs
shlb
push
rcrb
in
lods
int3
mov
push
sub
imul
xor
mov
repz
xchg
out
push
cmp
jmp
cwtl
movsb
leave
insb
jecxz
xchg
aaa
jl
out
mov
adc
sbb
test
xor
or
sti
nop
popa
push
inc
enter
repz
push
cli
cmp
repnz
scas
jmp
std
adc
nop
hlt
repnz
jb
cli
lahf
sub
bound
sbb
sbb
pop
filds
xchg
dec
mov
call
sub
out
int3
or
pop
rclb
jmp
pushf
jp
sbb
jo
mov
push
or
xor
xor
out
clc
mov
rcrl
mov
aam
xchg
xlat
inc
sarb
mov
cmpsb
popf
pop
cmp
mov
xchg
cmpsl
mov
imul
loopne
mov
test
leave
pop
loope
xchg
daa
cld
push
stos
outsb
fmull
xor
xor
jno
test
cmp
mov
lcall
cld
into
xor
mov
jo
rolb
mov
shll
xor
repnz
cmpsb
es
sub
lret
fadd
ja
sub
fcoml
sub
or
lret
aad
inc
sbbb
inc
and
add
adc
cwtl
into
pop
es
jbe
repnz
ret
jl
xchg
mov
out
and
lret
imul
hlt
cmp
push
or
mov
out
push
sbb
stos
pop
jns
xor
popf
cli
or
mov
fstp
pop
rcrl
inc
or
lea
hlt
insl
inc
ljmp
inc
inc
sahf
push
jl
test
stc
negb
push
lret
fstl
dec
movsb
sbb
jg
hlt
pop
push
lods
mov
ljmp
adc
ret
stc
mov
scas
sbb
shlb
mov
and
movsb
scas
rorb
out
adc
adc
roll
jecxz
ret
dec
or
pop
jg
adc
cmp
push
pop
lret
std
inc
movsb
mov
aas
insl
data16
jle
xor
mov
aaa
xchg
inc
dec
mov
cmp
loope
int
jecxz
cltd
addr16
inc
inc
js
mov
aas
jno
into
stc
inc
mov
lock
aas
gs
popa
sbb
xor
das
or
mov
push
and
pushf
push
dec
popf
cmp
cmp
mov
cmp
inc
call
adc
out
mov
rolb
outsb
sub
mov
fstpt
mov
out
sub
push
adc
sub
sbb
pop
inc
lds
test
pop
out
jl
leave
jo
cmc
sbbl
pop
or
fprem
push
scas
dec
es
rolb
and
inc
repnz
leave
out
lds
cltd
jmp
mov
cmp
push
in
or
xchg
dec
lds
xchg
sub
into
repz
pusha
movsl
adc
das
push
fdivrs
jno
shll
ss
lea
jge
data16
negl
fwait
push
mov
data16
lea
cmpsl
mov
bound
pop
pop
imulb
icebp
sahf
mov
cmp
movsb
mov
iret
js
insl
roll
outsl
icebp
pop
dec
xor
jne
bound
fsub
out
mov
mov
push
outsb
aaa
sub
js
jo
add
into
sub
dec
fidivl
ja
std
scas
xor
inc
mov
jbe
jno
jecxz
mov
jmp
xchg
fldcw
js
mov
ds
subb
or
dec
call
jae
inc
gs
imul
add
jmp
add
clc
cld
movsb
xor
enter
mov
nop
lods
cmp
xor
fs
mov
xor
rorl
cmp
sahf
pop
fsubrs
and
popa
rol
mov
test
or
adc
or
xorl
ret
fcmovnb
ror
xor
inc
jmp
rcrb
into
lock
xchg
data16
mov
xchg
mov
inc
rcl
hlt
test
shll
and
repnz
and
or
cmc
xchg
xlat
cmp
fidivl
mov
dec
mov
int3
lock
cmpsl
loopne
xchg
or
inc
je
out
into
mov
adc
xlat
mov
sbb
mov
insl
or
das
ss
push
sbb
inc
popf
shlb
in
xchg
and
and
std
xor
xchg
pop
mov
js
adc
insl
popf
inc
and
mov
das
aas
push
pop
pusha
mov
les
call
fdivrs
fildll
sub
test
xor
pop
aaa
inc
xchg
sbb
std
jge
pop
pop
push
fists
lds
dec
cmp
cld
test
popf
sarl
xor
dec
es
jp
jg
call
inc
or
daa
ret
jmp
pop
push
je
mov
andb
lock
popa
xor
outsb
jae
pop
sub
xchg
dec
xchg
mov
mov
and
mov
sahf
pop
mov
cs
push
or
dec
in
data16
int
in
push
add
outsl
cmp
dec
add
shll
pop
fs
ja
scas
ret
mov
shl
sub
nop
and
fsubp
fisubl
mov
mov
dec
testl
stos
es
mov
push
mov
js
scas
xchg
cmc
add
mov
pop
or
aam
mov
sub
cmpsb
xchg
lcall
sbb
xor
adc
fs
cmp
cmp
out
movsb
int3
inc
jg
add
mov
rolb
jae
mov
insb
xor
xchg
inc
adcl
or
ds
mov
insl
test
jge
inc
or
add
mov
pop
add
jbe
pop
cld
mov
mov
dec
inc
xchg
cwtl
sub
fwait
aam
int3
imul
pop
adc
mov
fstl
mov
xorb
or
orl
xor
jne
les
arpl
lods
pop
movsb
aad
pop
dec
xchg
fldcw
ds
xchg
jb
push
adc
loopne
test
rclb
not
mov
out
cld
xchg
xchg
jmp
inc
cmp
hlt
leave
dec
or
into
das
xchg
out
mov
cmpsl
aas
mov
sub
repnz
pop
pushf
lods
incl
and
cwtl
mov
sbb
cmc
xchg
cmp
pop
imul
ja
in
sub
mov
and
test
pushf
cmp
push
stos
mov
pop
cmc
jmp
inc
cmpsl
adc
mov
mov
push
int
cmpsl
push
mov
test
dec
inc
mov
adc
mov
mov
leave
fistps
cmp
sub
gs
std
daa
adc
cmp
into
scas
xlat
or
lcall
adc
and
jnp
xor
mov
jecxz
xor
int3
push
mov
add
xor
imul
movsb
hlt
popl
mov
aad
scas
cltd
cmp
mov
push
imul
cmp
sbbb
mov
mov
sbb
mov
hlt
inc
cmc
inc
pop
jae
mov
xor
icebp
ljmp
mov
xor
pop
cmp
mov
subb
sub
mov
jbe
adc
in
sub
dec
pop
add
insl
fwait
sub
dec
add
sbb
push
push
jl
bswap
pop
mov
and
subb
sub
mov
push
mov
cmc
add
push
movsb
shrl
and
jno
jp
stc
pop
add
es
pop
in
jge
sub
lret
lcall
shrl
and
or
and
adcl
jecxz
cmpsb
stos
lock
mov
mov
mov
daa
popf
out
xor
mov
add
adc
pop
cmpsl
sbb
sbb
mov
fwait
mov
popf
into
inc
inc
mov
sub
sub
ret
inc
pop
jl
and
shl
aam
cmp
xor
lcall
psubusw
add
fists
out
lock
bndstx
enter
lods
ffreep
das
test
ss
fidivrs
into
je
shll
xor
cmc
mov
rcll
mov
enter
loopne
std
call
jp
clc
add
in
inc
jo
popfw
adc
sub
mov
ljmp
pop
dec
inc
jns
xor
push
pop
adcl
les
sti
scas
or
imul
jo
out
pop
push
mov
loope
pushf
lcall
and
cmp
cmp
adc
fisubs
adc
hlt
and
mov
xor
cwtl
lds
xor
arpl
icebp
shl
sub
iret
or
sahf
int3
mov
fdivrl
dec
sub
sub
cltd
stos
int3
mov
dec
loop
push
push
out
mov
inc
ds
xor
mov
and
lret
popa
ss
iret
sbb
movsl
bound
pop
sub
loopne
pop
mov
xor
imul
jne
push
xor
mov
idivl
xlat
mov
jnp
or
pop
or
push
sub
or
dec
jge
mov
pop
cmp
cs
aam
scas
imul
testl
loop
ss
push
cmc
fwait
mov
mov
lret
pushf
addl
cmc
mov
xor
mov
push
popa
lods
lahf
popa
xchg
loope
pop
mov
push
cmpl
repz
xor
dec
cmp
jmp
sbb
test
lock
sbb
mov
jo
pop
inc
les
mov
xor
jg
lods
pop
ftst
cmp
daa
pop
jmp
mov
push
daa
push
jl
out
push
mov
add
jle
push
dec
push
sub
addr16
aam
cmpsl
mov
sub
mov
sbb
add
dec
roll
in
in
fucom
popa
pop
sub
inc
and
pop
cmp
in
push
cmp
mov
push
jl
pop
xor
insl
xor
es
mov
pusha
cmpb
sbb
out
push
aas
mov
add
cwtl
sbb
cli
fsubrs
fimull
out
shrb
xchg
int3
push
adc
je
mov
xchg
rorb
fdivrs
and
adc
jg
or
xor
mov
fnstsw
icebp
jo
dec
std
dec
inc
fadd
aas
aad
mov
sub
das
mov
scas
dec
push
jmp
adc
mov
add
mov
fwait
and
fstpt
add
and
in
popf
jmp
xor
daa
jbe
jno
xchg
fwait
pop
cmc
icebp
dec
pop
ss
sahf
sub
loop
dec
into
pop
lods
sub
loop
pop
xchg
cmp
scas
add
mov
cmp
xor
cli
add
pop
int
xor
sahf
inc
out
cs
popl
sbb
pop
adc
pop
fwait
daa
xchg
hlt
jge
insb
movsl
inc
and
add
negl
cmp
jnp
fbld
pop
push
inc
push
leave
adc
adc
xor
repz
xor
jno
andl
icebp
lret
aaa
jne
add
data16
xlat
nop
pusha
ffree
jmp
inc
pop
mov
ret
inc
pop
in
mov
fstpl
pop
push
test
ja
ss
and
aas
push
mov
ja
lret
cmp
mov
mov
popa
mov
jp
cmp
scas
test
clc
jne
pop
fists
dec
or
cs
std
dec
fdiv
movsb
lds
daa
cmp
or
repnz
cmpb
cmpsl
push
or
push
and
adc
jo
aas
incl
loope
cmp
add
pop
dec
xchg
pushl
sub
xchg
cld
mov
adc
aaa
loope
pop
stos
pop
push
fsts
je
popa
or
xchg
out
into
fisubrl
jo
sub
fisubl
add
loopne
mov
push
rcr
rcr
adc
out
sub
clc
ficoml
ffreep
xchg
jnp
int
sbb
pop
int
aad
mov
inc
mov
inc
pop
imul
dec
pop
xor
out
orb
jne
mov
cmp
cld
push
cltd
dec
mov
xor
pop
xchg
or
add
movsb
sbb
xor
jne
adc
cwtl
mov
jg
rcl
or
jecxz
pop
lret
sbb
jbe
popf
inc
add
movsb
lds
push
mov
or
daa
bound
push
cmp
mov
js
sbbl
or
jl
push
jg
cwtl
cmp
ss
ret
imul
jp,pt
push
xchg
les
mov
sbb
or
adc
jge
dec
xor
in
data16
dec
add
cld
mov
insb
push
mov
out
xchg
in
adc
iret
mov
push
mov
jp
sbb
jne
push
rorl
movsb
push
mov
push
sbb
xor
and
adc
repz
mov
in
xlat
xor
push
shll
iret
push
pop
iret
daa
jno
xor
icebp
sbb
sbb
aam
cmpsb
jecxz
rcrl
xlat
dec
sahf
dec
xchg
sbb
hlt
xor
sbb
gs
mov
mov
arpl
les
dec
pop
push
iret
xor
dec
mov
scas
shl
jns
jmp
pop
mov
push
mov
cmp
jns
inc
lods
add
pop
pop
in
mov
sarb
das
int
cli
out
fs
mov
hlt
xchg
add
ficomps
std
inc
lea
aad
rclb
shll
pop
xchg
enter
inc
cmp
cld
arpl
bound
pushf
bound
mov
sbb
repnz
cmp
int
mov
mov
notl
sahf
aaa
outsl
pop
js
add
xor
lret
out
out
sar
push
cmpsl
in
fs
add
das
xchg
jo
mov
xchg
mov
adc
sbb
mov
push
arpl
data16
jg
das
cmp
enter
mov
mov
xchg
js
jb
sahf
in
sub
daa
fidivrs
jecxz
das
enter
aas
fwait
in
xchg
cwtl
fwait
mov
fldl
inc
rorl
mov
mov
mov
or
sub
push
or
cmp
jo
mov
or
test
fsubrs
mov
jg
loope
mov
hlt
push
add
lea
xchg
sbb
mov
push
dec
and
fisttpll
sbb
ja
push
sub
ret
pop
repnz
not
sub
cmc
jecxz
adc
cmp
cmpsb
dec
pop
lods
adcl
movsl
inc
cmp
cld
rcrb
pop
inc
push
xchg
jno
cmp
aad
shll
popf
lea
lahf
testl
cld
iret
lea
push
xchg
mov
xchg
mov
push
jg
aaa
jno
les
int
lods
jmp
xchg
xchg
mov
pusha
sbb
xchg
sub
popa
popa
dec
fsub
jmp
mov
inc
daa
or
mov
push
ds
adc
les
sbb
inc
scas
lret
test
and
fdivs
mov
stos
in
insb
pop
in
or
dec
mov
add
inc
frstpm(287
push
inc
mov
push
cmpb
ds
cmp
cmp
inc
outsl
aaa
xchg
cmpsb
xlat
sub
repnz
push
sahf
xlat
imul
int
and
cmp
pop
sti
gs
or
subl
mov
movsb
xor
fcomps
insb
pop
outsl
sbb
add
in
or
scas
xor
mov
jns
scas
cltd
add
mov
in
xchg
enter
arpl
inc
cmp
outsb
loopne
scas
addl
mov
dec
shl
stc
pop
popf
outsb
and
jne
imul
mov
sub
sbb
jmp
aad
je
pop
push
inc
mov
dec
adc
mov
insl
outsb
aad
bound
cmp
shl
cmpb
ret
mov
xor
jbe
pop
fldt
lock
fsubrl
fldcw
enter
cs
lret
mov
push
lret
stc
stos
mov
lock
cmc
adc
test
lock
sub
cmpsl
and
mov
pop
les
mov
xchg
outsb
xchg
add
xchg
jae
push
inc
ficoms
in
js
sti
out
push
xor
xchg
inc
fdivrs
iret
adc
push
and
jle
fidivs
ret
cli
mov
jns
insl
movsb
loop
or
push
pop
add
xlat
hlt
or
mov
sub
cmpsb
jno
inc
inc
pop
jno
mov
xlat
out
lcall
adc
lods
push
aam
out
xchg
inc
sbb
xor
daa
les
scas
out
push
pop
mov
mov
mov
imul
add
inc
cmpsb
fiadds
xchg
leave
lds
icebp
sbb
push
or
test
xchg
push
jge
adc
int3
ds
dec
cli
push
movsb
or
jle
subb
aam
lods
cmp
outsl
dec
or
aaa
jge
xchg
js
insl
mov
jnp
shrb
push
dec
cmpsb
mov
out
or
iret
and
mov
cmpsb
adc
mov
sbb
daa
adc
insl
iret
pop
jge
shrl
movsl
inc
mov
ds
cmp
and
aad
cmc
sbb
sbb
outsl
ret
leave
ficoms
rcr
pushf
pop
rclb
xor
mov
xor
aas
test
test
imul
mov
les
jmp
lret
pop
stc
imul
cmp
ffreep
add
lods
test
std
aas
enter
push
imul
xchg
or
jle
cmp
loop
imul
mov
loop
es
call
test
adc
fbstp
movsl
dec
inc
jmp
sbb
push
mov
mov
mov
lods
inc
nop
adc
mov
jb
xor
push
mov
dec
data16
js
imul
cmp
ret
aas
orl
test
ljmp
inc
push
pop
mov
popa
jmp
sub
mov
cmpl
in
popa
or
sarb
or
cmp
jmp
mov
mov
lea
cltd
cmp
fnop
test
mov
dec
pop
sbb
test
or
comiss
cmpsl
aaa
mov
mov
push
sbb
push
test
sub
push
and
int
add
jge
in
arpl
outsb
lods
arpl
jo
nop
arpl
rcr
mov
bnd
cmpsl
xchg
addr16
mov
pop
test
and
test
sbb
out
pop
stos
into
fadd
int
les
call
js
lret
test
mov
ljmp
stc
push
dec
or
jmp
ret
mov
and
push
rcrl
idivb
les
dec
or
xlat
adc
cmove
cmp
xor
fwait
mov
aam
mov
cmp
sbb
popf
push
jb
ret
fxch
jb
mov
loope
or
dec
cld
test
mov
cmp
fs
pop
mov
lahf
cmp
int
mov
or
lds
and
add
into
xor
imul
cmp
mov
cmc
dec
cld
sbb
out
int3
imul
outsb
mov
movsw
jle
icebp
loopne
pop
jb
cmp
shll
fistpll
fdivrs
inc
ljmp
sarb
lock
out
lcall
out
es
jbe
hlt
bound
push
xchg
push
mov
bound
add
or
sub
jno
je
loope
aas
out
cld
sahf
shll
clc
inc
jp
jle
xchg
pop
xlat
lock
xchg
call
filds
push
add
pop
add
pop
jl
sbb
insl
cmpsl
mov
and
xor
push
inc
mov
test
sbb
inc
and
xchg
cmp
out
xchg
popf
inc
mov
xor
cmp
sub
mov
inc
std
adc
lock
mov
add
dec
push
xchg
lds
add
movb
das
xchg
dec
outsb
divl
xchg
jnp
and
adc
mov
leave
enter
call
add
cmp
es
mov
stos
mov
aaa
push
push
int
mov
inc
les
adc
mul
into
or
xchg
mov
scas
cmp
hlt
mov
mov
cmpsb
leave
mov
jg
gs
addr16
lock
call
mov
fsubrl
es
push
xor
add
adc
stc
add
test
pop
mov
call
pop
cmp
aad
out
lods
xor
dec
mov
iret
icebp
pop
mov
adc
jge
pop
es
in
iret
jmp
xor
es
fcmovnbe
pop
cmp
pop
mov
in
jg
mov
sub
out
je
call
mov
xchg
inc
icebp
fs
mov
mov
xor
imul
fildll
sub
xchg
xor
sub
mov
xor
push
pop
jno
dec
or
pop
pop
xor
xchg
fstpl
outsb
loopne,pt
xchg
ljmp
mov
ficoml
ljmp
repz
cmp
dec
inc
movsl
inc
cmp
push
cmp
sbb
jle
mov
inc
cltd
sub
scas
cwtl
mov
pop
add
loop
inc
sbb
dec
jns
mov
js
mov
jne
mov
div
adc
push
inc
fnstcw
cmp
sub
push
adc
push
inc
or
cmpb
sbb
cmp
cmp
lcall
sbb
imul
cmpl
sbb
xorb
push
hlt
lret
fwait
xor
hlt
inc
and
pop
lds
aaa
dec
push
into
out
add
call
cltd
aam
xor
scas
test
subl
push
jecxz
pop
push
jne
jne
test
dec
in
movsl
leave
call
ffree
xor
test
cmpsl
mov
and
jnp
sti
jo
push
fsub
cmp
pop
cld
fistpl
push
jp
ja
mov
xchg
mov
scas
xchg
bound
jbe
xor
outsb
mov
repz
xor
je
add
add
inc
adc
inc
je
cmpsb
jno
dec
mov
insb
loopne
xchg
cmp
dec
push
pop
out
inc
push
and
lock
push
sbb
add
js
ret
and
shl
jbe,pn
out
xchg
hlt
cwtl
call
call
out
mov
dec
cmpsl
and
fstl
mov
adc
ja
jp
push
sbb
divl
in
pusha
fisttps
jmp
sub
or
insb
icebp
repz
cmp
stos
pop
std
lock
es
in
sbb
mov
enter
adc
sahf
jmp
fisubrl
mov
mov
push
push
fwait
and
mov
xchg
inc
call
xor
lock
lret
imul
int3
nop
cmp
or
gs
or
sub
xchg
repz
and
or
lahf
xor
add
and
hlt
add
in
jo
ret
ja
jns
dec
adc
xchg
fwait
jmp
int3
les
cld
in
aam
clc
mov
mov
popa
das
push
dec
imul
loope
xchg
or
add
fwait
cmpsl
xor
sbb
je
push
or
push
mov
outsb
loop
rcll
int3
push
cmpsb
and
out
dec
mov
imul
dec
inc
push
and
les
adc
test
cmp
cli
mov
ss
stos
xchg
std
jae
xchg
mov
sbb
pop
jbe
mov
fisttpll
int3
outsl
push
pop
or
pushf
cmpsl
js
mov
out
lea
xor
mov
jae
mov
mov
inc
jp
je
pop
fs
in
dec
fildl
or
xor
dec
nop
mov
cmp
cmpsb
aaa
sub
punpckhbw
pop
cs
xor
cmp
inc
pop
faddl
leave
aaa
je
push
stos
mov
out
pop
cmc
aam
mov
lock
sbb
sub
jbe
les
push
fistps
jmp
inc
pusha
add
rcrl
or
addr16
sbb
leave
inc
inc
roll
mov
add
xchg
jbe
xchg
mov
les
movsb
or
and
mov
imul
mov
in
scas
push
dec
mov
outsb
mov
push
adc
cmp
aaa
mov
outsb
pop
jne
add
ja
sbb
inc
fisttpll
or
cmp
and
icebp
mov
pop
sti
fldcw
xor
xor
ds
movsl
mov
pop
jae
mov
ja
jno
cli
pop
iret
mov
xlat
ja
pop
push
lret
dec
gs
out
inc
or
stos
clc
cmp
pop
test
inc
xchg
or
in
mov
inc
cld
hlt
loop
ror
jo
stc
and
in
fiadds
cmp
repnz
mov
push
adcl
in
add
inc
dec
and
repnz
adc
mov
jecxz
aam
insb
ds
int
xor
fsub
or
imul
dec
xor
inc
daa
mov
and
mov
dec
lds
and
mov
add
rcll
dec
testb
xchg
out
jbe
xor
dec
mov
add
scas
std
sar
rclb
mov
movsl
push
adc
insb
mov
pop
xor
sbb
jbe
cmp
dec
imul
jo
mov
xchg
dec
mov
xor
xor
inc
sub
xchg
scas
fdivs
mov
stc
stos
jns
rcl
inc
mov
jb
adc
push
loopne
popf
adc
outsb
sub
roll
dec
addb
mov
pop
sbb
aaa
inc
add
jo
dec
sub
jne
pop
xor
and
dec
mov
fsubrs
sbb
jle
into
vmovupd
daa
test
jle
negb
mov
push
cli
les
aas
dec
jno
dec
jecxz
fidivs
lock
into
jmp
into
jo
mov
sub
push
sbb
mov
int
les
jecxz
dec
loop
sbb
lret
lock
cmp
loopne
mov
fimull
jmp
out
push
into
xor
movsl
sbb
jno
or
mov
mov
push
fsubrs
mov
stos
test
sti
ljmp
xchg
sub
cmp
cmp
xor
mulps
pop
daa
lcall
xchg
or
fs
xchg
mov
jp
adc
jbe
cmp
outsb
ljmp
cwtl
ja
and
gs
cmp
mov
mov
insb
cld
xchg
std
dec
incb
push
in
out
je
cmpsl
xor
jns
add
inc
sub
cli
lock
and
iret
mov
outsl
mov
mov
mov
int3
fsubs
ja
out
sbb
and
sub
sarb
inc
or
push
ds
sub
aam
stc
js
enter
outsl
lods
cltd
adc
jno
jmp
ss
adcb
push
cld
lea
test
inc
lahf
sbb
int3
jno
imul
sbb
jge,pn
cmp
lock
ret
mov
jge
test
jmp
dec
xchg
adc
mov
and
jge
popf
scas
iret
jg
xchg
or
nop
and
lret
xor
pushf
outsl
cmpsb
std
in
dec
cmp
sti
nop
dec
aad
insb
jnp
cmpsl
pop
jb
cmpsb
enter
leave
repz
andl
push
lret
jno
movsb
jbe
gs
mov
mov
dec
cli
jp
call
pop
mov
xchg
mov
aas
out
out
jmp
adc
mov
sbb
mov
mov
scas
adcb
lea
adc
dec
mov
cmp
in
xchg
rcrl
inc
dec
mov
adc
lods
add
mull
insl
inc
adc
mov
xlat
jno
mov
push
xorl
adc
jp
cmp
fadd
push
rclb
lds
mov
and
mov
in
mov
jge
jbe
insl
test
pop
jl
and
cltd
cmp
sbb
xor
dec
push
push
cli
pusha
cmc
je
push
lds
mov
pop
shlb
jb
cmpsb
pushf
xlat
rcrb
mov
mov
push
movsb
pop
loope
ljmp
test
jb
adc
test
outsb
xchg
shlb
jno
jecxz
cmp
sbb
inc
rcrl
mov
pushf
repnz
fcmovne
pop
push
fidivrs
adc
and
pop
or
mov
push
jb
movsl
popa
mov
push
mov
jbe
decb
dec
stos
rorb
imul
addr16
in
jl
pop
xor
xchg
fidivrs
xchg
xchg
testb
shrb
sbb
jo
xchg
leave
push
loopne
cmovs
jb
xor
sub
insl
aam
push
mov
in
mov
mov
cmpsl
jo
mov
pop
aad
cmp
xor
cs
pcmpeqb
mov
mov
mov
popa
push
and
stc
es
fiadds
test
jo
push
out
insb
sarl
add
sub
insb
daa
and
pop
fwait
xor
scas
xchg
pusha
and
shll
sub
pop
adcl
data16
ret
mov
xchg
jno
sub
call
cmpsb
jmp
mov
vmovups
inc
test
sbb
or
inc
mov
sbb
mov
sbbb
jmp
call
push
xchg
inc
addr16
in
cld
xlat
mov
mov
outsl
mov
inc
push
lret
xchg
or
jo
inc
mov
test
push
scas
icebp
fwait
cmpsl
repz
or
sbb
je
mov
cld
pusha
loop
jl
adcl
aam
aam
scas
mov
cld
and
lret
repz
leave
int
cmp
pop
xchg
pushf
int3
rorb
mov
jecxz
std
jge
mov
repnz
inc
mov
ret
mov
fwait
cltd
mov
xor
cmpsl
out
mov
xlat
cmpsl
sbb
jg
xor
lret
cmp
int3
inc
and
fs
push
xlat
decl
mov
stc
arpl
sub
mov
or
aaa
sti
cmpsl
xchg
push
in
adc
pop
aaa
out
adc
in
fwait
es
jge
mov
stos
pop
and
mov
iret
inc
aam
scas
imul
and
shr
jns
mov
add
scas
adc
xchg
sub
stos
lds
mov
adc
imul
dec
jp
out
inc
outsl
lods
std
jmp
jne
cmp
push
inc
push
nop
int3
jecxz
in
mov
mov
bound
fwait
adc
inc
sbb
and
xchg
pop
mov
sbb
stc
pushf
ficoms
sbb
push
subb
and
mov
push
push
fdivs
or
cwtl
fadd
sbb
xor
int
cmp
aaa
and
lods
cmp
pop
or
ljmp
les
adc
setns
add
sub
mov
xchg
test
repnz
mov
sub
xlat
nop
ffreep
cmc
cmp
outsl
pop
aaa
push
es
dec
mov
inc
cmp
loope
popf
adc
inc
pop
shll
jl
notb
push
jae
rclb
push
mov
lahf
insb
and
sbb
fldcw
stc
fists
pop
mov
jmp
pop
xchg
xor
mov
mov
push
sbb
loopne
add
test
dec
cmpsl
push
ret
iret
xor
jb
fsubl
jp
sahf
test
adc
mov
jmp
jecxz
jle
inc
popa
push
and
cmp
outsb
test
icebp
cmp
movsl
enter
es
ljmp
xchg
mov
out
dec
mov
push
jmp
push
sti
aas
stos
adc
aas
sub
push
pop
or
test
xchg
mov
jns
aam
gs
mov
jno
pop
mov
scas
lods
add
adc
sbb
ret
cmp
or
inc
mov
dec
inc
adc
xchg
into
sarl
inc
xchg
fisttpll
xchg
mov
in
sti
jne
mov
shrb
out
xchg
push
ret
cmp
cld
pop
jmp
fldl
inc
data16
jb
pop
push
jno
popa
fiadds
stos
aas
testb
xor
push
adc
outsl
sub
mov
inc
sub
mov
into
cmp
add
adc
aam
in
jmp
mov
jmp
cmpsl
pushl
es
cmp
mov
mulb
ret
inc
scas
mov
mov
aas
sub
in
pop
dec
fidivs
push
fnstenv
or
stc
mov
push
lret
cmpsl
jg
xchg
xor
int
pop
pop
lock
and
pusha
push
in
clc
pop
fildll
fimuls
lret
inc
cmp
frstor
ja
pop
aad
loope
push
into
mov
or
sub
inc
shll
das
jne
imul
cmp
mov
cmpsb
cmc
mov
leave
inc
and
lods
cmp
jae
call
mov
shlb
xor
es
dec
mov
adc
insb
jb
lock
mov
cmp
aaa
cmpsb
ret
or
jae
scas
pop
cwtl
dec
mov
cmp
adc
xchg
shlb
mov
pop
cmp
sbb
push
fisubl
xor
pop
nop
fistps
lds
mov
loope
fs
and
mov
adc
jp
in
ljmp
or
or
xor
movsl
mov
jns
stc
xor
mov
add
push
push
sbb
jl
cmpsb
xchg
xor
add
nop
aad
cs
fidivrs
adc
mov
jbe
and
or
mov
daa
dec
into
or
mov
data16
xchg
insb
stos
lret
jbe
pop
adc
ret
push
jge
inc
aam
mov
or
fcomi
dec
in
jne
sbb
add
dec
fdiv
and
pop
dec
aad
add
pusha
mov
lods
push
sub
push
adc
jecxz
xor
icebp
mov
jnp
cmp
mov
lahf
pop
mov
pushf
sbb
cwtl
adc
out
mov
xchg
test
jge
sub
stc
mov
mov
jmp
inc
in
sti
out
pusha
cs
jnp
adc
rcl
and
mov
setno
mov
cmc
insl
mov
inc
xchg
xchg
pushf
fcomps
mov
adcb
xor
stos
rorb
enter
add
cmp
cmp
mov
ljmp
iret
add
add
test
scas
cmc
divb
jl
cwtl
or
movsb
jle
adc
cli
ret
lods
cwtl
daa
sub
xor
repz
jns
mov
out
push
mov
test
ret
pop
push
cld
stos
call
push
sti
fwait
js
in
dec
push
cmpsl
test
inc
xor
push
movsb
idiv
or
push
or
push
out
adc
loop
inc
jg
add
jne
or
adc
mov
ret
aaa
mov
xor
mov
stos
mov
imul
insb
jge
cmpsb
pop
dec
dec
cli
cmp
insb
ds
in
scas
mov
jg
add
mov
mov
faddl
bound
sti
rep
mov
pusha
or
nop
repz
cltd
scas
sub
add
nop
and
scas
cmp
mov
push
mov
jae
inc
push
mov
sub
adc
popf
jnp
ljmp
inc
cmp
cmp
ljmp
daa
push
xchg
insb
sub
jecxz
jo
imul
inc
std
int3
pusha
fisttps
fwait
sbb
mov
std
mov
cli
out
aaa
dec
sarb
mov
sbb
add
push
in
daa
lret
mov
dec
sub
jno
pop
test
das
cmp
push
sbb
jle
push
xchg
shrb
xchg
daa
xor
addr16
je
mov
aad
aaa
leave
mov
push
sti
xchg
daa
mov
push
inc
cltd
add
or
lcall
sub
adc
add
jl,pt
cmpsl
sub
push
adc
inc
jp
inc
xor
or
hlt
jge
cwtl
pop
popa
jg
xchg
xor
cmp
scas
jmp
mov
pop
cmp
outsl
out
loop
aas
imul
inc
int
mov
mov
imull
ljmp
shl
mov
inc
outsb
lea
mov
in
push
jns
mov
and
imul
pop
mov
pop
pop
addr16
lahf
mov
aas
stos
mov
inc
sbb
leave
shll
or
lahf
push
sbb
les
fs
je
movsl
hlt
sub
jmp
in
fcoml
or
add
rorl
movsl
fnsave
lea
pop
aad
inc
leave
push
sub
sbb
aaa
cmp
pop
push
mov
outsl
jle
jno
jne
jp
pop
sub
dec
jo
mull
and
imull
inc
out
jl
clc
xchg
lahf
fdivl
insl
pop
sbb
ss
arpl
fwait
sub
or
aaa
cmp
mov
pop
repz
sti
cmp
cmp
pushf
sti
ss
mov
int
cmpsb
cmp
out
adcl
jmp
or
js
adc
mov
xchg
cmp
ret
mov
das
outsl
outsb
shll
int3
in
mov
femms
adc
nop
push
jo
push
push
jecxz
shll
into
sar
adc
aas
mov
jne
scas
lods
jae
inc
aam
jle
pop
lahf
rcrb
clflush
adcb
xor
xchg
fsubr
adc
dec
dec
xchg
sub
push
leave
pushf
jnp
xchg
imul
jo
and
and
in
mov
outsl
repz
mov
mov
add
adc
aam
imul
in
mov
into
test
mov
cli
mov
imul
jle
nop
sub
jmp
jp
enter
scas
rclb
aas
loopne
add
cmpsl
pop
ja
push
stos
cwtl
lock
dec
push
xlat
sbb
add
mov
add
push
pop
push
sub
lret
loopne
mov
sub
push
and
jle
mov
fstl
cmpsl
jge
out
jnp
loope
jo
xor
sbbl
mov
addr16
cwtl
bnd
arpl
movsb
roll
lret
loop
nop
and
sahf
adc
leave
mov
add
mov
test
mov
fidivs
shrl
insl
mov
es
fildll
cmp
jecxz
cmpl
stos
pop
mov
ffreep
dec
insl
or
dec
aaa
pop
jne
aas
int
mov
fmuls
cmp
mov
jmp
lret
das
ret
stc
cmpsl
xchg
pop
addl
cli
or
pop
push
pop
xor
pop
sti
sahf
adc
mov
ljmp
or
jp
xchg
aas
adc
inc
pop
jne
cld
imul
jne
les
jp
insb
push
cld
sti
and
repnz
aad
sbb
inc
cmp
push
xchg
or
mov
icebp
pop
ret
fnstsw
xchg
fdivrl
gs
int
int
jae
jne
push
mov
cld
mov
call
add
aad
nop
popa
and
cmpsb
sar
out
pop
xor
jne
in
dec
adcb
in
xor
push
les
jge
jle
cli
mov
jno
xchg
sub
mov
add
repnz
and
ds
sbb
stc
inc
jecxz
or
inc
mov
mov
pop
outsb
add
mov
sbb
orl
loopne
or
int3
xchg
mov
fcoml
loope
and
ja
and
sarb
in
pop
mov
cmpsl
mov
out
nop
mov
repnz
mov
dec
cmpl
fsubr
dec
and
push
aad
icebp
outsl
jge
mov
mov
and
lcall
hlt
mov
or
fcmove
aaa
movl
sarb
mov
push
stos
pop
cmp
sub
pusha
sub
jmp
outsb
dec
jg
hlt
inc
daa
cli
ja
scas
arpl
mov
imul
je
aad
push
xchg
jecxz
push
insl
sbb
sub
pop
pop
pop
pop
cmp
insl
mov
es
cmpsl
push
outsl
pop
arpl
xor
mov
xorl
loope
aam
inc
das
lock
push
pop
notl
call
in
add
mov
insl
loopne
cmp
jns
aas
leave
fcmovne
xor
sub
je
jns
jnp
dec
hlt
push
pusha
out
mov
scas
sub
inc
jl
leave
fwait
xchg
std
test
outsl
xor
add
repnz
xsha256
cmpsb
shlb
lods
add
pop
incb
test
xor
ds
cltd
out
cltd
push
test
pushf
cmp
insl
fistps
in
fsubrs
ret
push
xchg
bt
shll
fwait
test
test
sub
jp
dec
dec
or
xchg
pop
popa
popa
mov
adc
fnstcw
mov
addb
or
mov
loop
mov
shrb
fisttpll
movsl
mov
mov
clc
imul
fstpt
aad
dec
nopl
popf
and
mov
inc
mov
push
mov
xor
cltd
mov
mov
jae
dec
push
testb
sbb
add
sbb
ret
sub
js
pop
lahf
bound
xor
adc
inc
jge
add
sub
js
mov
popa
jo
mov
clc
cmc
in
stos
mov
out
outsb
dec
push
repnz
test
notb
sub
sbb
add
dec
or
pusha
pop
bound
jp
lock
mov
xor
ljmp
sbb
dec
notl
addr16
mov
addl
outsl
lcall
push
and
cmp
pop
std
dec
jmp
mov
mov
pusha
leave
leave
sub
push
pop
jne
sarb
das
or
fs
xor
mov
xor
cmp
in
jp
xor
ja
sbb
xor
lock
and
testb
in
push
sub
mov
int3
stc
ljmp
jg
call
mov
push
mov
rorb
or
dec
jb
int3
ljmp
mov
je
ljmp
or
push
mov
xchg
aad
jmp
adc
fldcw
addr16
add
dec
xchg
bound
mov
orl
cmp
clc
sti
cltd
in
test
dec
or
inc
in
or
in
fldenv
out
movsl
jb
leave
fcomi
and
jge
cmp
out
into
and
sti
psubq
push
out
pop
aaa
scas
mov
test
jp
repnz
repnz
jp
xchg
das
leave
fisttpll
mov
jbe
pop
in
ds
push
shrl
add
jo
pop
lcall
or
cli
sbb
mov
dec
xchg
outsb
lea
lea
stos
outsb
pop
fld
adc
out
push
lods
xor
adc
mov
out
and
adc
adc
mov
xchg
stos
or
dec
mov
adc
jg
cltd
or
popa
mov
es
xchg
cmp
lret
or
test
ss
push
inc
pop
les
jmp
adc
js
arpl
into
sti
jge
xor
arpl
inc
pop
cmp
cmpsb
adc
add
jmp
cmpsb
xchg
sub
xlat
mov
mov
cld
repnz
inc
jle
data16
add
pop
xchg
popa
popa
fistl
bound
inc
and
adc
jb
or
mov
arpl
lea
testl
inc
add
lret
les
mov
xor
icebp
push
xchg
ss
stc
cmp
inc
sub
jbe
in
int
into
jle
jle
jne
xchg
xchg
popf
mov
and
arpl
rol
mov
push
jo
ficoms
inc
pop
arpl
jp
mov
stos
shlb
pop
call
mov
pop
gs
idivl
lods
jnp
ljmp
rorb
in
adc
or
dec
pop
pop
add
sahf
xor
and
xor
and
aad
out
lret
pop
mov
mov
ret
test
enter
popa
pushl
es
jno
push
mov
pop
stos
xchg
cmp
inc
xchg
mov
pop
pop
push
inc
push
push
push
jbe
cmp
inc
arpl
shrl
pop
imul
stos
gs
roll
int3
or
in
ljmp
stos
enter
cmp
shr
sub
mov
inc
enter
mov
inc
push
fimull
pop
fimull
push
mov
add
aam
inc
sbb
fistpl
iret
inc
add
push
cmp
lahf
loopne
cmp
repz
mov
mov
fadds
mov
and
cvtps2pi
mov
filds
jp
test
sub
jmp
inc
inc
lea
cltd
dec
mov
inc
push
iret
xlat
bound
adc
mov
aad
in
aad
pusha
push
lock
xor
jl
or
test
fwait
ja
dec
movsb
mov
rol
test
ljmp
aam
fsubl
and
and
test
shrd
sub
icebp
xor
sbb
loopne
cmp
cmp
sub
jmp
pop
scas
mov
inc
push
cmp
xchg
mov
xchg
int3
ret
bswap
cmc
mov
test
movsl
add
setle
push
sbb
or
mov
cmp
arpl
lret
lret
cmp
push
inc
push
or
out
mov
fwait
mov
in
mov
dec
cwtl
shll
xchg
pop
jae
jge
movsl
fmull
lret
sub
push
and
push
imul
pop
and
int
data16
pop
jbe
mov
sbb
adc
push
jno
rcrb
les
dec
pop
jmp
mov
into
out
mov
inc
nop
nop
cld
pushf
test
in
ret
pushf
add
addl
sub
out
int
xchg
xor
imul
in
scas
ficoml
rcr
push
pop
pop
pop
or
push
hlt
mov
jecxz
hlt
inc
mov
call
leave
imul
mov
popa
inc
mov
inc
ja
cmpsb
add
xchg
mov
adc
dec
insb
xchg
rcll
jg
popa
cmp
in
inc
jne
jns
stos
imul
sub
or
add
scas
pusha
lahf
dec
outsl
gs
out
xor
adc
push
clc
shl
pop
mov
mov
cmc
push
jnp
inc
lock
push
sbb
fwait
push
scas
xor
insb
push
icebp
add
fwait
sub
sub
push
mov
fwait
lock
adc
call
sbb
outsl
jne
in
pop
pop
out
lods
call
push
std
mov
cmp
xchg
push
lods
into
xlat
fwait
aam
push
lahf
das
xor
lea
sub
push
xor
cmp
dec
mov
and
push
cmp
pop
xor
jb
or
out
mov
sub
clc
std
ljmp
icebp
sti
lahf
inc
ljmp
loop
xchg
mov
sub
add
sbb
jecxz
push
jmp
xor
dec
pop
or
imul
jne
mov
mov
lret
inc
negb
mov
in
lea
inc
fs
jle
jmp
jge
ds
sbb
xchg
int
add
and
in
gs
ss
sbb
mov
das
call
inc
into
mov
jmp
aas
stos
ret
lret
cmpsb
rol
rolb
enter
sbb
negb
mov
cmp
mov
lcall
or
add
mov
rcll
cmpsb
fbld
scas
ret
pop
xchg
cmp
insb
pop
into
cld
inc
mov
xchg
enter
test
dec
push
push
dec
sbbb
xor
jecxz
stc
jmp
imul
lea
sbb
das
in
inc
adc
sahf
int3
pop
mov
cmp
sbb
popa
mov
push
das
pop
imul
stos
xchg
aas
fisttpll
negl
mov
mov
dec
or
push
and
add
inc
sub
es
sbb
inc
clc
mov
out
sub
xchg
inc
les
test
test
sub
lret
xor
loopne
mov
daa
lods
push
add
out
dec
outsb
nop
insb
loopne
or
xor
aam
test
dec
adc
int3
loop
clc
dec
xchg
add
daa
test
lods
mulb
push
push
mov
wrmsr
push
or
in
jmp
cli
ds
mov
in
jecxz
adc
mov
jo
pushf
stc
scas
scas
popa
dec
push
ja
adcl
lock
mov
cmpsl
dec
pop
or
push
outsl
das
and
mov
movsb
lds
pusha
pop
aam
jle
out
in
rcr
roll
movsl
sbb
cli
ljmp
fwait
and
jbe
cmc
aaa
sub
dec
dec
movsl
xor
shr
mov
loope
dec
sbb
lret
lret
inc
fmuls
xchg
mov
sbb
mov
leave
fucomip
icebp
sbb
xchg
lret
adc
lcall
pop
push
psubusb
stos
add
adc
adc
and
jg
xor
sbb
leave
addr16
push
inc
ret
out
mov
sbb
lcall
xchg
flds
xor
cmp
leave
push
mov
sbb
test
fmull
mov
mov
mov
cmpsl
add
inc
jmp
mov
popf
loop
mov
adc
xchg
cmpsb
decb
sbb
mov
push
sub
pop
notb
mov
aad
sub
or
sub
dec
xor
mov
sbb
cmp
pop
add
ds
or
jmp
jecxz
inc
movsb
aam
add
mov
pop
test
push
call
fstps
push
repnz
clc
sbb
int3
addr16
int3
cmp
add
fbstp
xchg
adcl
nop
push
and
pop
dec
decl
sub
leave
cld
lods
xchg
test
out
jnp
fcoms
push
and
fcoml
xor
aaa
or
or
cwtl
add
les
enter
or
inc
int
lret
cmp
lea
loope
cmp
dec
ja
in
loope
bound
sbb
push
rclb
xor
mov
sarb
xchg
mov
loope
mov
aad
mov
dec
movsb
push
out
xor
outsl
adc
fstpt
fstps
and
in
scas
push
fildl
fs
ss
mov
fcoml
repz
push
adc
in
sub
movsb
popf
sub
clc
adc
js
in
mov
into
js
movsb
pushl
sarb
or
outsl
outsb
push
ja
push
or
stc
mov
icebp
ret
gs
in
cmp
lret
ds
dec
mov
mov
subb
out
jo
out
and
cmpsb
push
push
lcall
pop
dec
addr16
sub
fidivrl
imul
xchg
adc
fildll
lods
clc
in
sub
jg
xchg
testb
pop
pushf
stos
pop
xchg
cld
xor
sarb
les
daa
and
jo
lar
adc
fistl
mov
cmp
xor
mov
fidivrs
aam
das
add
lret
push
pop
outsl
loopne
notb
or
int
mov
fucomi
test
cmpsl
ret
js
mov
repz
sub
mov
stos
cmpsb
out
ss
push
lea
xchg
push
sub
pop
les
and
sub
add
mov
mov
pop
mov
dec
inc
inc
cwtl
std
daa
lahf
inc
pop
xor
xor
jo
mov
adcl
lds
adc
xchg
and
andl
lret
int
out
js
pop
pop
jne
pushf
popl
out
int3
test
lock
xor
push
in
or
fimuls
test
push
das
ja
jmp
add
inc
pop
mov
adc
and
es
mov
jl
jnp
pop
movsl
cs
aas
sbb
adc
mov
sub
rolb
mov
mov
dec
xchg
inc
lret
dec
in
inc
aad
mov
pop
out
mov
test
pop
lret
lods
push
add
and
fs
jecxz
into
inc
sub
mov
pop
adc
and
sahf
adc
ss
dec
mov
xchg
push
std
stc
loope
out
dec
cs
rep
sub
or
push
mov
jmp
cmp
push
mul
andb
cmp
dec
fsts
adc
xchg
and
adc
lds
mov
mov
stos
out
mov
xor
xchg
cmp
mov
mov
rcl
fnsave
je
insb
push
jb
mov
mov
inc
sub
mov
xchg
and
jns
fnsave
movsl
dec
pop
mov
enter
in
cli
adc
xchg
push
movsb
leave
push
inc
out
adc
aas
int3
call
push
or
clc
lock
pop
cltd
test
mov
addr16
dec
xor
fstpt
movsl
test
jg
xor
fcompl
out
mov
cwtd
xchg
push
fmuls
lcall
repz
push
daa
dec
and
sbb
ja
stc
cmp
push
and
loop
mov
aam
xchg
aam
cmp
fidivl
xlat
jne
fisubrs
lock
idivb
in
call
lcall
scas
mov
faddp
cmp
pop
xor
xor
cli
repz
lea
popl
mov
cmpsb
stc
rclb
aam
pop
dec
test
sti
insl
xor
enter
jge
jmp
lret
xchg
push
mov
mov
sbb
cmp
hlt
push
pushf
and
lret
or
adc
lret
push
loop
subb
testb
mov
mov
out
fidivrl
insb
lahf
mov
xchg
xchg
nop
out
scas
js
adc
dec
adc
and
hlt
and
in
xchg
je
sub
and
jmp
sbb
xchg
sar
pop
jp
pop
jo
adc
pop
adc
fwait
xor
cmp
hlt
and
sub
mov
add
aad
xchg
ja
cmpsb
pop
mov
mov
mov
jl
xchg
popa
int3
into
popa
sbb
mov
cltd
adc
mov
mov
sub
cmpsl
xor
add
dec
cmp
dec
jmp
sub
push
nop
leave
and
mov
dec
in
and
rorb
cmp
add
lods
mov
hlt
in
xchg
push
fldl
jo
sbb
mov
loopne
out
ljmp
push
push
dec
lcall
mov
pop
jl
or
arpl
int
aam
xor
jge
or
out
xor
xlat
or
inc
out
cli
mov
fs
pop
xchg
inc
in
add
outsb
aam
inc
xchg
mov
clc
daa
mov
xchg
test
jmp
ficompl
inc
in
lock
popf
adc
js
pop
mov
sbb
std
xchg
inc
or
arpl
iret
sub
or
icebp
mov
mov
scas
out
pushf
testb
test
or
fisubrs
cmp
cmpsl
fwait
