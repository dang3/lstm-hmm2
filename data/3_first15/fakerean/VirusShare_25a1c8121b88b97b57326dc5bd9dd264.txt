push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
xor
push
pop
div
mov
mov
shl
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
int3
int3
repz
jae
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
sbb
pop
test
repz
mov
aam
movsb
in
pop
sbb
mov
push
sub
sub
outsb
mov
sub
cmp
dec
popa
adc
shll
mov
insl
jo
jb
mov
mov
neg
mov
add
cmp
shlb
mov
outsb
std
stos
cmp
lock
pop
outsb
aaa
jb
std
push
xor
mov
add
in
divl
idivl
test
into
mov
das
ret
mov
test
test
cld
fwait
mov
hlt
lods
xchg
icebp
mov
mov
out
lock
es
cmp
add
xor
ficoml
xchg
and
js
stos
scas
xchg
inc
mov
cmp
int
lock
xchg
xor
or
addr16
popf
push
out
aas
mov
pop
or
out
mov
mov
pop
push
jo
mov
dec
and
mov
out
stos
out
fistpl
sub
aam
out
nopl
mov
jne
jmp
mov
pop
mov
push
lret
lret
int
faddp
movsb
mov
cmc
enter
or
sub
imul
push
in
inc
lea
loopne
lods
arpl
inc
ds
pop
ja
xor
sbb
mov
add
in
cwtl
test
popa
xchg
test
inc
or
ljmp
movsl
or
jge
fisubl
jae
addr16
cmp
xchg
mov
xlat
mov
xchg
xor
bound
pop
int3
repz
push
xchg
xor
test
orl
js
mov
xor
add
shrl
mov
fwait
add
or
sub
fcomps
out
mov
mov
bound
out
scas
ljmp
push
movsl
fisubs
scas
dec
outsl
test
mov
int
fildll
dec
adc
sbb
lret
stos
aad
adc
mov
icebp
mov
xor
lea
mov
xor
sbb
popa
pop
mov
mov
arpl
test
push
les
pop
sub
scas
inc
mov
daa
ljmp
mov
mov
pop
out
test
xchg
add
aaa
xchg
iret
fmull
fwait
pop
hlt
jge
mov
dec
jle
pop
inc
ljmp
push
push
jg
cwtl
mov
mov
sti
add
lret
ret
js
inc
inc
dec
ss
aad
outsb
or
mov
sarl
jno
add
arpl
push
mov
xchg
popf
sbb
mov
inc
aaa
push
insb
lret
push
aaa
mov
fdivr
jle
sub
pop
or
mov
or
je
cltd
push
or
jp
outsl
push
mov
sub
ja
mov
add
jge
xchg
roll
jle
push
ret
enter
mov
fwait
cli
ljmp
into
jbe
xchg
out
pop
sbb
mov
subb
fldenv
add
pop
repz
int3
pop
push
and
test
mov
fwait
pop
dec
inc
sti
ret
sub
arpl
mov
or
mov
sbb
inc
test
sub
inc
rorb
test
cmp
scas
stc
rcl
add
iret
or
and
push
mov
out
jl
mov
cvtps2pi
mov
push
push
cmp
push
xor
iret
popa
int3
cld
scas
and
xchg
mov
lahf
ret
sahf
mov
aas
imul
mov
dec
adc
cmpsl
mov
mov
mov
repz
or
adc
xchg
cmp
xor
push
jle
test
cltd
dec
testb
add
daa
dec
insl
hlt
xchg
repz
sbb
cmc
adc
aas
add
jmp
cs
sub
add
call
sbb
leave
lds
jns
mov
movsl
or
add
xor
mov
in
aad
mov
jns
push
adc
es
leave
enter
pop
out
and
mov
std
jb
iret
dec
into
push
dec
push
push
mov
pop
mov
add
xchg
jnp
jmp
in
pusha
push
icebp
stos
pop
mov
sbb
or
mov
test
cmp
or
shrl
movsl
mov
rcl
nop
test
sbb
inc
mov
or
cli
movsb
shrb
push
mov
insl
jno
add
inc
js
test
int
push
movsl
jle
jns
pop
out
cmp
dec
js
sbb
sbb
sub
push
pop
fidivl
xchg
inc
jns
xor
fmuls
loopne
inc
xor
xchg
push
or
xchg
leave
xor
inc
notb
jo
int3
sub
mov
lock
push
fs
cmpsl
push
ret
pop
cmpsb
xor
adc
xor
mov
lods
insl
push
mov
stos
push
out
sbb
push
movsb
or
out
dec
sahf
adc
jno
test
mov
add
pop
or
ja
mov
popa
dec
inc
ja
out
nop
pop
or
lds
inc
push
pop
hlt
sahf
push
nop
test
out
mov
sti
sub
aad
xchg
outsl
out
scas
xor
pop
dec
insl
mov
insb
in
sub
js
xchg
mov
arpl
sbb
aaa
call
test
scas
pop
xor
mov
jns
rcrl
loope
fistps
adc
ja
orb
rcrl
icebp
and
jge
adc
out
mov
cmp
adc
cmc
or
faddp
inc
aad
ret
xor
jo
cmpsb
ljmp
pushf
dec
or
push
dec
mov
mov
call
push
sbb
mov
cs
sahf
xor
mov
or
mov
int3
sbb
cltd
loope
rclb
push
andb
out
iret
cmc
xor
gs
mov
adc
enter
xchg
fdivl
lahf
jne
aam
xchg
loopne
jns
pop
fstps
push
mov
xor
push
sbb
pop
cs
sti
outsb
cmp
out
std
xchg
and
mov
test
cmc
sub
sahf
lds
sub
inc
pop
mov
mov
out
jp
pushf
daa
pop
adcb
addr16
outsl
ljmp
cmp
mov
push
mov
dec
sbb
fwait
fwait
call
inc
aad
add
imul
xor
push
xor
dec
pop
jecxz
test
mov
std
inc
fstp
xor
loop
loopne
jle
ret
mov
pcmpeqd
call
sbb
movsb
xchg
mov
jno
mov
mov
cmp
mov
outsb
aaa
outsl
dec
aas
inc
jnp
mov
mov
fdivs
rorb
or
and
mov
pop
dec
pushf
imul
mov
mov
shlb
enter
test
push
or
ret
out
fwait
in
jle
cwtl
test
jb
mov
adc
push
shlb
bound
and
lahf
repnz
adc
test
dec
rcll
shlb
pop
or
test
mov
jle
pop
in
adc
xlat
push
mov
aad
daa
leavew
and
push
and
popf
mov
lahf
xchg
add
pop
dec
or
outsl
neg
hlt
popa
inc
enter
adc
arpl
mov
dec
pop
sub
xor
and
jp
call
jg
xchg
rcll
es
cmpsb
jb
test
and
dec
sub
cmp
repz
mov
jo
xchg
xchg
clc
data16
mov
jecxz
jecxz,pt
or
scas
in
adc
jle
push
adc
mov
or
inc
mov
adc
jnp
out
jmp
cmp
jbe
cs
sbb
xchg
iret
xor
and
mov
stos
jmp
mov
xor
dec
and
aaa
cmp
loope
add
dec
jle
lock
push
hlt
popa
jge
mov
ja
sbb
mov
mov
ja
lods
mov
pop
add
inc
cmc
sbb
fldenv
adc
mov
mov
mov
inc
jno
or
mov
xor
xchg
mov
insb
popf
mov
jmp
push
add
fsubl
xor
fildll
push
or
push
mov
inc
out
rolb
sbb
fmulp
inc
idivl
pop
mov
pop
in
loopne
fcompl
pop
and
mov
mov
je
pusha
xor
repz
cmp
push
xchg
mov
scas
cltd
and
sub
add
mov
je
sbb
mov
jmp
repz
lret
cli
xchg
xchg
or
sub
cld
cld
clc
cli
loopne
mov
lret
xchg
sbb
aaa
fists
ret
cmp
inc
pop
adcl
or
gs
mov
inc
pop
mov
iret
add
sub
xorb
sub
sub
mov
sbbb
out
mov
mov
ljmp
je
addb
scas
shlb
push
mov
xchg
mov
xor
rorl
sub
jnp
aam
imul
push
out
ja
repz
mov
mov
xchg
das
push
cmpl
mov
dec
push
mov
sub
xor
ret
and
sbb
xor
pop
xchg
dec
arpl
adc
adc
push
sbb
add
mov
cmp
jne
sbbb
push
mov
mov
clc
int
mov
fdecstp
lods
cmp
push
aam
and
js
ss
mov
mov
outsl
push
imul
add
mov
dec
les
rorl
push
push
jno
aas
loope
mull
lret
push
bnd
popa
pop
jbe
xchg
or
hlt
fimull
bnd
pop
add
push
push
lcall
mov
nop
mov
jle
sub
and
inc
jle
daa
daa
scas
xchg
push
push
push
push
push
adc
je
cwtl
mov
sbb
in
fwait
xchg
and
add
jo
mov
loopne
jg
and
mov
inc
add
fsubl
shll
fistps
movsb
xor
cs
mov
jge
mov
sub
pop
sub
rorb
sbb
mov
lret
push
lcall
inc
add
sub
ss
out
or
fcompl
ror
jle
ds
in
dec
jbe
scas
mov
fdivl
mov
cmp
sbb
adc
mov
leave
push
das
je
xchg
jmp
mov
and
pop
jbe
je
in
cmp
pop
cmc
push
pop
imul
nop
loope
in
je
les
lds
push
xchg
pop
mov
sbb
insl
sti
mov
movsl
sbb
pop
fistl
mov
inc
sub
syscall
xor
popf
push
sbb
adc
lcall
cld
out
inc
out
push
mov
mov
sub
jecxz
inc
pop
xchg
fbld
lods
xrstors
cld
dec
dec
out
or
xchg
adc
inc
fcompl
cwtl
neg
les
cmp
lock
cwtd
shll
mov
sbb
testb
test
mov
jb
sbb
mov
arpl
mov
jg
in
out
leave
inc
cmpb
and
cmp
xor
push
arpl
in
arpl
arpl
loop
ds
fstps
inc
mov
pop
out
movaps
ficoml
push
aaa
jne
les
lock
push
js
pushf
int3
inc
lcall
je
push
mov
popf
sbb
adc
mov
out
add
mov
cvtps2pd
loop
outsb
cltd
inc
aam
dec
sub
in
push
int3
push
jle
pop
aad
push
bound
sub
push
lcall
shl
jg
into
xlat
mov
push
sbb
lea
data16
xor
cmp
iret
xchg
or
xor
cmp
cmp
mov
push
mov
jbe
dec
sahf
popf
xchg
nop
inc
les
fwait
invd
dec
add
insb
movsb
mov
out
add
pop
or
test
cmc
ret
add
pop
jne
in
push
and
inc
out
push
add
cwtl
mov
es
jae
lock
jmp
lods
test
push
fwait
xchg
lahf
inc
mov
fdiv
adc
popf
adc
add
loope
je
shll
lea
lcall
mov
jecxz
jno
dec
mov
adc
fnstcw
dec
mov
movsb
negb
add
pop
push
or
ja
ret
jne
sbb
or
enter
adc
in
fwait
cmp
jg
sub
jns
cmp
test
shlb
jno
push
sarb
jmp
mov
in
or
sbb
out
ljmp
jg
adc
jno
adc
inc
mov
inc
cli
xchg
testl
jmp
push
lods
cld
dec
fs
out
xor
pop
data16
inc
push
inc
or
pop
add
inc
pusha
xor
cmp
mov
adc
push
adc
jecxz
push
pop
dec
or
adc
aas
pop
mov
mov
les
pop
imul
mov
jge
sbb
jl
jae
jb
arpl
jmp
ret
test
fisttps
or
ret
mov
orb
cmp
cmpb
or
jns
inc
and
jae
mov
xchg
addr16
ja
sbb
mov
les
cs
dec
in
enter
sub
dec
xchg
imul
fisubl
lods
xor
sbb
clc
jne
repz
dec
stos
jno
inc
jo
int
lock
add
fisttps
clc
jae
adc
xchg
test
inc
ret
inc
push
daa
xchg
mov
push
ss
push
dec
mov
sbb
icebp
popa
xor
pusha
pop
sti
sbb
cmp
cmp
add
jmp
or
adc
jmp
mov
or
arpl
ret
mov
push
pop
imul
mov
push
inc
cwtl
jae
xor
cltd
mov
fldcw
les
xchg
mov
jg
xor
cwtl
daa
or
sahf
inc
fisttpll
and
xchg
sub
jecxz
cmp
scas
lock
xchg
inc
and
xchg
xchg
pop
test
stc
sub
jo
push
dec
push
xchg
nop
pushf
dec
jge
xor
ret
cmp
push
push
inc
jge
rcll
inc
inc
cmovne
in
nop
mov
jg
lods
je
negb
scas
mov
stos
mov
add
cltd
sub
lods
mov
and
stos
outsl
imul
shlb
adc
daa
scas
or
jbe
jecxz
cmpsl
mov
jp
add
movsl
mov
repz
enter
rcr
arpl
or
cmp
sbb
xor
add
lock
mov
fidivl
push
lahf
mov
pop
and
movsl
fnsave
data16
push
lahf
xor
mov
mov
ds
and
mov
dec
pop
fstps
test
leave
hlt
xchg
scas
stos
jl
push
sbb
out
xor
inc
dec
and
inc
into
and
cmpb
fcomps
push
xor
rolb
repz
les
jae
push
aad
fimull
decl
push
fwait
inc
mov
mov
add
push
adc
icebp
jg
aaa
mov
mov
jo
cmp
sbb
int
xchg
ret
movsl
sbb
xchg
cs
adc
popf
sbb
mov
sbb
cmp
dec
lret
repnz
mov
mov
lock
dec
test
shlb
ljmp
dec
rorb
inc
orl
jg
adc
sbb
clc
jl
jne
pop
or
jno
xor
mov
cmpsb
push
fwait
pusha
adc
aad
mov
mov
repnz
pushf
aaa
adc
push
lds
jle
and
or
push
notl
cltd
mov
pop
inc
outsl
push
add
add
push
push
pop
inc
ret
mov
cwtl
xor
dec
shrl
data16
or
bound
inc
stos
inc
imul
mov
in
subl
test
test
push
pop
pop
loope
add
add
or
cmp
adcl
ljmp
jb
pop
cltd
mov
add
pop
fadd
pop
adc
in
xor
jno
xchg
and
cmp
sbb
fldt
pop
mov
jns
sbb
fs
ficoms
loop
dec
aam
fisubl
dec
call
xchg
xorb
mov
fs
mov
mov
lods
frstor
pop
test
xchg
mov
jo
and
or
mov
mov
jmp
jb
fadds
xchg
lds
adc
push
jne
pusha
sahf
xchg
sti
arpl
fcompl
sub
sbb
or
lret
cmp
dec
push
call
int3
push
xor
test
ret
sub
add
or
addr16
jb
insb
add
push
adc
add
mov
test
add
add
cmp
pusha
enter
adc
test
adc
pop
stos
rcll
adc
xchg
iretw
cli
push
fsubp
xchg
inc
mov
ss
test
or
and
bound
mov
add
mov
inc
cmp
xchg
inc
sarl
lahf
xchg
out
int3
jne
lods
add
out
or
incb
mov
icebp
jns
lret
push
mov
adc
addr16
test
inc
add
inc
cwtl
and
lods
fbstp
add
negl
push
rorb
add
je
pop
sub
dec
clc
push
xor
dec
icebp
push
xor
shll
out
outsb
repnz
movsb
jmp
jb
or
pop
ret
lods
or
cmp
rcll
sbb
fists
je
push
sbb
mov
pop
mov
jl
cltd
mov
rcrl
es
das
ljmp
imul
sub
loopne
js
shrl
lock
cltd
shrl
xchg
fcmovbe
std
icebp
ss
mov
cmp
cmp
mov
shll
jb
jo
arpl
cwtl
xchg
add
dec
mov
push
mov
sub
adc
out
pop
push
inc
mov
xchg
lods
and
faddl
mov
or
or
cs
insl
dec
jnp
cltd
int3
xchg
or
sub
add
ljmp
daa
fisubrl
adc
sbb
xchg
xlat
sub
sahf
fs
lock
jle
stos
into
hlt
jp
xor
lds
xor
insb
gs
push
inc
leave
mov
jge
call
imul
cli
movsb
mov
popf
add
sub
mov
sub
roll
cmc
cli
mov
sub
scas
xchg
and
mov
js
dec
sbb
addl
bnd
jg
mov
sbb
aas
sbb
or
test
pop
lods
in
jae
and
cmp
sub
or
adc
fbld
xor
add
les
sarl
fisttps
jno
sub
pop
inc
cmp
cmc
addr16
mov
xchg
adc
mov
xchg
es
sbb
mov
sub
jns
fwait
dec
scas
mov
sbb
gs
mov
int3
push
and
xchg
inc
jo
cs
push
sahf
mov
xchg
adc
jbe
add
push
mov
aad
scas
enter
or
mov
flds
cmc
movsl
xor
add
enter
daa
hlt
or
inc
add
or
in
add
in
xchg
lahf
cmc
cli
idivb
leave
loope
bnd
push
xchg
and
push
xor
mov
mov
testb
push
aam
push
sub
and
mov
push
daa
xchg
in
mov
int3
rclb
sbb
aad
xchg
xchg
fmuls
mov
xor
gs
pop
sub
fcomp
mov
or
jo
cmp
or
sbb
lretw
push
mov
adc
mov
mov
lret
dec
mov
out
mov
mov
je
push
lock
xchg
mov
push
inc
clc
push
stc
inc
into
outsl
add
pop
lods
adc
and
cmp
xchg
aad
movsb
fs
jg
bt
or
inc
xor
js
xchg
inc
xor
or
adc
into
adc
aas
adc
and
pop
mov
jo
aam
pop
imul
jecxz
ljmp
sbb
xchg
aaa
in
rolb
xbegin
leave
inc
xor
or
fcoml
dec
je
or
std
mov
jl
pop
adc
cmpsl
push
sub
xchg
cmp
rcll
rcr
jge
aas
stc
out
xchg
inc
mov
xor
int
fwait
sar
test
icebp
adc
addl
push
mov
out
sbb
pop
aam
add
stos
mov
mov
in
rcr
fdivs
push
cmpsl
not
sahf
dec
call
fists
or
cmp
unpcklps
loop
dec
js
or
push
add
mov
push
insl
jecxz
popa
movsl
adc
sub
adc
jge
popl
sarl
loop
cmc
negl
adc
and
clc
cmp
xor
cltd
mov
mov
sbb
movsl
and
imul
mov
insl
test
cmc
shlb
mov
adc
loope
aas
movsl
adc
das
xor
or
ret
adc
or
xchg
stc
mov
call
je
and
mov
inc
and
sub
xor
cmp
add
sbb
xor
add
test
sarl
sub
mov
popl
jbe
mov
fistpl
fs
sbb
cmp
scas
mov
inc
imul
cmp
ljmp
clc
popa
mov
add
std
cmp
and
enter
xchg
mov
lea
rorl
divb
lahf
push
outsl
push
daa
mov
jg
jl
push
repnz
xchg
stc
das
bound
adc
fists
mov
int3
mov
fstl
es
int3
pop
cmc
ljmp
rcrb
je
shlb
dec
gs
lret
jp
mov
pop
popf
imul
pop
mov
lahf
lock
push
mov
add
ficompl
jle
popa
jmp
repnz
les
dec
jl
mov
mov
add
out
int3
ror
mov
jle
in
mov
xchg
inc
xchg
stos
stos
stc
and
push
ja
and
addl
movsb
cmpl
fwait
mov
cmp
cmpsl
ja
add
fs
insl
xchg
fcmovnbe
xchg
xchg
fldl2e
scas
cld
bound
inc
mov
jg
mov
mov
sub
jbe
xchg
xchg
fwait
pusha
ljmp
int
popl
add
or
xchg
aam
enter
jp
jl
cli
fbld
ja
mov
in
inc
inc
in
xor
push
fmul
addr16
inc
daa
mov
int3
int
mov
fwait
push
push
je
add
outsl
dec
sar
jle
or
mov
stos
cli
jae
xchg
orb
sbb
mov
add
or
xor
xchg
lret
divl
dec
mov
es
inc
push
mov
pop
pop
in
outsl
fcoml
rorl
icebp
icebp
aas
mov
es
and
lea
repnz
mov
push
int3
add
fcmovbe
inc
lods
sbb
sbb
movsb
jnp
add
sub
outsb
loop
leave
sbb
loopne
jge
jno
pop
add
loopne
out
inc
arpl
int3
xchg
jae
icebp
xor
jg
lea
pop
mul
pop
jns
pop
popf
cmpsl
or
pop
psllq
sbb
jbe
or
icebp
or
inc
in
pop
inc
nop
inc
fisubrl
push
inc
ficoml
sbb
into
cmc
xchg
hlt
dec
mov
mov
xor
test
stos
lea
mov
sbb
xchg
xchg
aas
cwtl
xchg
fadd
insl
loopne
pop
sub
fsts
je
mov
inc
sahf
sub
sahf
adc
pop
xchg
mov
xchg
jne
push
sub
dec
repz
les
testl
jg
ss
cmpsl
mov
shll
mov
cmp
jg
cmp
orl
push
lods
adc
push
rorl
mov
arpl
arpl
fcmovnb
fs
dec
sbb
imul
es
mov
add
xchg
mov
lcall
or
fildl
jo
jae
xchg
push
je
int3
lea
xor
stos
mov
roll
pop
gs
jns
in
xor
pop
arpl
push
rcr
imul
inc
sub
dec
push
push
addr16
cmp
arpl
stc
or
test
fs
insb
jnp
popf
int
aam
fwait
out
dec
fs
das
and
popl
jge,pt
out
ja
enter
call
pop
mov
cli
das
xor
xlat
jbe
mov
xor
rcrb
movsl
divb
cwtl
out
gs
xor
mov
and
adc
jmp
sub
cmp
mov
add
jnp
arpl
sti
cmpsl
pop
aad
pushf
dec
insl
mov
sub
sti
popf
mov
lret
in
das
out
add
push
cmpsl
mov
int3
dec
inc
adc
inc
xor
xchg
sbb
cwtl
fwait
cmc
or
dec
and
mov
pop
scas
xor
lock
or
mov
mov
inc
mov
mov
xchg
inc
mov
mov
out
addl
sbb
xchg
lret
aas
aad
scas
or
inc
adc
je
pop
mov
aaa
mov
mov
cwtl
adc
ret
loopne
test
push
mov
adc
xchg
loopne
std
or
push
pop
jge
xchg
sbb
cmp
out
inc
pop
fstl
aas
gs
mov
mov
mov
pop
in
ret
inc
push
push
mov
dec
cwtl
mov
push
data16
sbb
or
jl
ret
out
sub
imul
pop
pop
pop
ret
push
jb
inc
adc
es
filds
sbb
push
push
sahf
cwtl
adc
lods
clc
or
lock
lods
cmp
nop
mov
mov
lds
mov
add
push
ffreep
dec
mov
cmpsl
in
icebp
mov
sub
pop
loopne
mov
jp
jae
shll
lret
pop
mov
xchg
cmp
cwtl
add
push
test
push
pop
jp
add
stos
jb
stc
pop
dec
scas
lea
pop
mov
ds
ret
xorl
stos
int
scas
jp
sahf
cmp
out
outsl
call
shlb
ja
push
mov
mov
xchg
add
cld
insb
addr16
out
sbb
dec
dec
add
arpl
mov
xlat
adc
paddb
cwtl
xor
ret
std
ljmp
mov
dec
mov
xchg
push
enter
mov
lds
insl
dec
sbb
shlb
cwtl
test
je
fiaddl
roll
dec
xchg
push
iret
mov
add
push
in
aam
xor
and
fwait
xchg
nop
insl
pop
imul
sub
lds
jo
xor
adc
push
repz
lds
mov
sbb
int
cld
jbe
mov
aaa
and
xchg
pusha
pop
ret
xchg
faddl
mov
ss
pop
and
sub
jl
mov
clc
lea
adc
fcompl
lods
adc
shrl
dec
mov
es
lahf
mov
add
leave
daa
sub
mov
ss
push
lock
xchg
add
or
or
adc
movsb
sarl
and
std
cmpsb
lret
clc
sbb
fstl
pop
pusha
mov
adc
mov
jge
gs
test
lahf
aad
or
ret
pop
xor
js
lahf
sub
xlat
ret
jnp
data16
sbb
test
clc
sub
js
fistl
out
cmp
inc
loope
jecxz
shl
pop
js
cmpsl
xchg
adc
je
imul
inc
sahf
add
pusha
mov
jbe
test
push
mulb
std
int3
mov
addr16
fsts
lods
add
mov
test
pop
jge
sbb
pop
xchg
lret
sbb
mov
out
aaa
fwait
cmp
sbb
test
pushf
adc
stos
cmp
mov
pop
loop
aad
aam
mov
movsb
mov
lock
cld
xor
adc
sub
sti
xchg
ljmp
cwtl
inc
add
and
sub
xchg
mov
in
pop
in
xchg
sbbl
out
addr16
in
dec
js
pusha
cltd
xor
xor
jbe
mov
xchg
push
sbb
pop
push
aaa
jp
mov
ret
push
mov
out
push
outsb
or
mov
push
or
shlb
sbb
dec
dec
int
push
pop
fs
int
arpl
fistps
in
jecxz
or
and
xor
addr16
cmp
arpl
test
pushf
outsb
add
jnp
sub
push
lret
dec
imull
fcoml
das
stos
mov
lds
add
loope
rclb
jne
mov
js
call
xchg
std
out
pop
adc
jg
cmpb
dec
pop
into
cmp
jne
sbb
mov
and
ja
jmp
mov
lea
mov
and
jbe
push
inc
clc
in
sbb
lcall
repnz
ja
mov
int3
sbbl
add
mov
iret
int
or
pop
inc
mov
fidivl
lret
sar
ficoml
inc
fsubrp
testl
lret
aas
dec
and
ret
mov
inc
int3
push
fsubrs
cmp
mov
insl
testb
inc
cltd
and
sahf
decl
daa
js
inc
add
pusha
pop
pop
sbb
dec
insb
leave
mov
stos
stos
aas
insl
inc
sbb
nop
dec
lcall
ljmp
jnp
adc
adc
and
test
les
je
xorb
lahf
mov
mov
rep
addr16
or
popf
dec
enter
cmp
jp
push
jmp
or
imul
cs
mov
sub
lret
and
ficoml
lds
mov
xchg
xor
imul
mov
jg
xlat
cmpsb
xchg
addr16
mov
push
loopne
enter
leave
push
add
aaa
popa
mov
inc
fisttpl
js
xor
mov
push
pushf
addr16
jp
mov
stos
pusha
xor
fwait
push
mov
jb
xchg
popf
pop
es
push
xor
outsl
in
int
jne
mov
lods
and
mov
nop
test
inc
faddl
jo
xor
daa
jo
inc
roll
subb
cmpb
mov
push
xchg
cmpsb
pop
fldt
jno
loope
cld
test
addr16
adc
xchg
xchg
insb
dec
xchg
rorb
xor
pop
sti
cs
popa
mov
aad
adc
aad
lahf
xchg
imul
xor
pushl
std
inc
lock
pop
mov
ret
add
aas
xor
inc
rol
insl
xor
cmp
cmp
mov
xorl
fldcw
dec
inc
imul
lahf
and
jl
fwait
in
in
dec
in
scas
call
fdivr
sub
sbb
xchg
dec
mov
in
and
lahf
lods
inc
and
push
push
add
and
mov
jno
sbb
std
dec
and
outsl
or
outsb
aaa
lret
push
subl
dec
addl
daa
mov
mov
adc
lods
cmp
push
and
rcrl
fs
adc
lret
xchg
lcall
aas
sub
sahf
popa
call
ret
xchg
cmp
test
ds
shlb
mov
jne
jle
mov
ljmp
pop
sub
aam
js
pop
add
jnp
jle
mov
sub
or
int
dec
les
xchg
lock
lock
test
and
inc
dec
mov
fcmovbe
or
jge
mov
and
fwait
adc
mov
push
out
daa
xchg
adcb
jae
mov
fmuls
cmp
or
test
pusha
or
mov
push
loopne
xor
inc
sub
lock
mov
out
mov
mov
in
mov
lock
iret
fldcw
fs
xlat
push
cmp
mov
sbb
out
push
adc
xchg
xchg
stos
loope
adc
mov
stos
ficoml
cmp
mov
push
mov
push
xchg
dec
loope
push
jl
sbb
jne
push
popf
in
add
fldcw
or
es
loopne
pushf
fdivrp
or
les
lret
add
or
xchg
pop
mov
adc
jg
les
in
lcall
sub
sub
rcr
repz
mov
jbe
daa
adc
add
incl
push
insl
hlt
lret
mov
stos
xlat
icebp
sbb
aas
ds
inc
and
inc
arpl
adc
mov
ds
cmp
or
into
mov
pushf
ds
push
mov
rcll
ss
pop
add
imul
mov
and
push
pusha
lds
emms
add
xchg
pop
xchg
rolb
lea
push
scas
outsl
push
push
inc
cwtl
insl
sub
cmp
mov
xor
xchg
aaa
mov
adc
nop
and
icebp
into
ja
inc
lret
jle
cld
adc
sbb
xchg
pop
ror
mov
push
icebp
sub
and
hlt
dec
and
rcl
imul
sbbl
and
fcoms
inc
or
rorl
fs
imulb
in
jae
movsb
divl
jbe
or
pop
xchg
ds
int3
push
pop
mov
sub
cmc
test
dec
mov
mov
fisttpl
mov
adc
ds
cmp
xchg
into
pop
xor
add
push
dec
lcall
or
xchg
daa
and
mov
pop
cmp
cmp
scas
mov
xor
xor
std
dec
mov
in
xchg
rolb
sbb
jecxz
xor
jl
cmp
sbb
loopne
cs
inc
dec
lods
push
ja
jl
dec
adcb
out
xlat
cmp
xor
add
sbb
adc
xchg
pop
ss
xor
dec
or
in
inc
sbb
dec
lods
ljmpw
sbb
test
in
xchg
out
push
ljmp
aaa
cmp
je
mov
idivb
stc
gs
les
add
jnp
sub
lret
in
push
nop
jae
pop
dec
stos
jmp
pop
stos
leave
rcrl
mov
xchg
pop
cmp
mov
sar
insl
sbb
mov
movsl
dec
jecxz
mov
dec
stos
cmp
add
mov
cmp
mov
dec
push
add
jb
aas
lods
int
xorb
pusha
jmp
bnd
push
inc
in
in
cld
xor
clc
movsb
push
scas
jno
mov
adc
push
test
std
add
push
cltd
push
add
cmp
or
cwtl
push
xchg
pop
dec
dec
pop
add
out
or
push
shlb
or
ffree
mov
and
sub
or
pop
insb
cli
xor
jp
pop
mov
and
or
popf
mov
imul
inc
dec
repz
popa
fdivrp
pop
adc
test
dec
nop
out
fsubr
push
cmp
mov
or
mov
sbb
push
pushf
pusha
pop
mov
insb
lods
xchg
cmpl
inc
lcall
lods
scas
dec
mov
dec
movsb
call
into
pop
lds
popa
incb
aam
je
pop
xchg
aaa
gs
scas
clc
adc
pop
xor
pop
or
js
js
mov
mulb
lods
dec
movsl
dec
mov
xor
mov
xchg
jno
loop
scas
rcrb
sbb
paddusw
in
jecxz
push
cmpsl
jl
dec
adc
adc
ljmp
imul
dec
and
test
enter
int
stc
inc
add
pop
or
add
cmp
xchg
fmull
fwait
add
shrd
pop
xchg
pop
sbb
repnz
jl
sbb
test
pusha
mov
inc
dec
cltd
adc
and
push
xchg
inc
jno,pn
pop
xchg
lret
pusha
push
imul
dec
es
test
test
pop
ret
mov
lods
adc
push
aaa
lods
imul
cmc
or
out
cld
insb
fs
loopne
cmpsb
jo
or
sbb
mov
es
pop
into
call
out
sar
sbb
mov
sbb
stos
mov
inc
mov
mov
je
mov
int3
in
arpl
dec
cli
or
xchg
icebp
scas
jns
mov
mov
and
sub
xor
pop
mov
scas
sti
jb
out
sbb
cmpsb
mov
jno
jbe
loop
pop
lods
shrb
push
mov
jle
std
movsl
jae
jmp
jo
cld
nop
mov
scas
fidivrs
add
pop
or
mov
jp
aad
ret
in
lods
xor
jmp
negl
inc
lcall
out
mov
aas
sub
push
xchg
popa
dec
fwait
stos
rcr
sti
mov
out
xor
call
sbb
cmp
push
repnz
or
or
pop
xor
sarb
in
xchg
push
lret
jbe
cld
sub
add
push
sbb
inc
cmp
pop
mov
lahf
mov
cld
push
lret
sub
push
jmp
sbb
into
add
js
pop
mov
xlat
into
mov
cmp
pop
insb
sahf
insl
lret
divl
jecxz
enter
mov
cs
lret
push
dec
dec
push
daa
push
push
mov
xor
xchg
mov
add
test
pusha
std
jns
mov
lock
lahf
pop
fnstcw
push
jae
cmpsb
push
adc
inc
dec
dec
push
loope
es
imul
scas
mov
stos
mov
push
jecxz
fistpll
jno
mov
lcall
cmp
popa
xor
divl
push
cmp
cli
jg
and
loope
add
xor
out
mov
add
rolb
cmp
pop
gs
movsb
cs
outsl
popf
mov
mov
mov
pop
fisubl
inc
mov
xchg
scas
add
or
imul
sbb
std
shl
jmp
das
mov
push
dec
add
adc
outsb
sub
inc
lret
arpl
int
xlat
frstor
inc
dec
sbb
fists
lahf
popf
xchg
icebp
mov
mov
cwtl
js
dec
xorb
mov
push
stos
pushf
pop
fldcw
hlt
fldt
jge
sub
jns
out
pop
ficoml
fsubl
imul
es
int
loop
dec
insb
cmp
pop
inc
lods
xorb
sub
iret
jg
std
popf
cmp
insb
push
lcall
insb
aas
in
mov
cltd
pusha
stc
or
mov
outsl
mov
outsb
pushf
js
gs
ret
xchg
push
sbb
stos
movsb
mov
or
stc
js
adc
sub
gs
xchg
call
mov
jae
inc
in
add
mov
inc
hlt
pop
pop
out
mov
fistpl
or
adc
inc
adc
out
clc
shll
fdivrs
mov
call
cltd
jle
imulb
shlb
dec
scas
and
and
lahf
das
insl
sub
push
push
aas
cmp
test
pop
outsb
add
sub
out
mov
push
cmp
sub
repz
and
popl
lret
bound
shrb
pop
imul
imul
sar
mov
and
and
or
out
add
imul
aaa
gs
mov
stos
sbb
or
lea
fnstsw
testb
test
xchg
add
jae
sbb
and
adc
push
rorl
inc
or
into
dec
arpl
jmp
jg
sub
xor
mov
push
sbb
sbb
mov
mov
push
ret
cs
jmp
jg
prefetcht2
or
xor
push
dec
or
in
cmpsl
ret
das
sbb
mov
cmpsb
in
jo
cli
dec
stos
or
jbe
insb
sahf
shlb
ret
mov
mov
pop
jo
dec
sti
testb
mov
mov
sbb
loop
adc
popa
push
adc
rorb
scas
int
sti
shrb
adc
inc
pop
aaa
shrl
adc
adc
iret
loope
xor
popf
xchg
sti
xchg
scas
mov
dec
push
sbb
xor
cmp
and
xchg
sbb
and
fistpll
sbb
popa
lds
leave
inc
scas
mov
mov
stos
leave
xchg
sub
imul
or
in
into
cmc
cld
sahf
adcl
mov
mov
adc
fstl
test
lods
es
mov
pushf
int
outsb
add
popf
pop
dec
divb
stc
divb
inc
jns
scas
roll
test
fbstp
jno
test
jnp
or
xor
pop
pusha
jmp
out
sbb
test
push
pop
xchg
daa
cld
enter
into
sbb
orl
pop
mov
cld
or
fcmovne
mov
int3
push
jge
sahf
nop
ss
push
cmpsl
inc
mov
pop
lret
mov
push
hlt
inc
imul
dec
in
test
xchg
push
or
clc
subl
push
cmpb
stos
cld
adc
clc
dec
dec
fldcw
jno
adc
leave
rcll
popa
lock
out
inc
adc
mov
lds
dec
or
cmovle
pusha
push
push
and
ss
lea
decl
pop
add
or
ret
out
pusha
leave
shlb
stc
jg
adc
sub
cmc
pandn
cmp
adc
mov
and
enter
add
out
push
in
mov
scas
pop
dec
dec
lahf
dec
lea
fwait
mov
xor
rcrb
ds
or
dec
loope
mov
mov
jecxz
xchg
inc
lcall
pop
and
cmpsl
hlt
daa
scas
cld
movsl
mov
lods
xchg
adc
jb
imul
test
sahf
jmp
loopne
dec
xlat
jne
push
or
mov
fdivs
add
add
stc
vmaxpd
fwait
xchg
maskmovq
divl
pop
sbb
outsb
xchg
fistpl
jmp
mov
push
scas
cmp
add
mov
dec
jno
and
adc
push
jge
decl
ret
imul
jge
iret
mov
cmp
popa
fldl
pop
lds
loopne
adc
adc
push
push
cmp
mov
dec
mov
add
cwtl
jle
mov
sbb
into
fiadds
push
push
imul
xor
jl
lods
push
sub
fsubrs
push
fwait
cmp
arpl
and
add
and
in
or
mov
out
dec
jnp
rorb
fwait
aad
sbb
fisttpll
mov
pop
pushf
js
adc
cmp
pop
ret
fidivrs
push
and
cmp
movsb
pop
adc
push
movsl
mov
hlt
add
sub
aas
outsl
out
pushf
mov
or
and
or
out
mov
hlt
and
or
push
push
add
test
je
xchg
out
push
daa
fldcw
gs
or
jge
push
hlt
ret
lahf
mov
ret
push
xchg
mov
dec
shll
mov
popa
fldt
shlb
mull
lret
sub
std
pop
jae
fdivp
jle
pushf
sbb
js
insl
std
dec
ret
mov
push
hlt
fptan
cli
sub
fisubs
mov
lret
xchg
cmp
xor
sarb
das
and
mov
xor
imul
and
xchg
adc
sti
push
test
imul
iret
imul
or
xor
mov
adc
xor
push
adc
test
in
dec
in
push
push
push
std
icebp
lahf
add
push
cmpsb
jle
mov
pusha
cmp
shlb
push
mov
xchg
sub
out
adc
add
lods
mov
fcompl
jnp
imul
mov
jmp
pop
adc
mov
loopne
mov
add
out
fildl
xchg
scas
inc
inc
enter
push
adc
xor
idivl
stos
cmp
stos
icebp
mov
mov
and
shlb
cmp
sbb
lcall
sti
mov
into
and
push
pop
inc
test
jmp
cltd
mov
or
dec
cltd
loop
and
hlt
mov
mov
push
or
push
rol
sub
add
push
mov
pop
mov
mov
jnp
in
push
scas
mov
les
cmp
out
pop
jp
shrb
mov
xor
or
cmpsl
dec
sbb
inc
mov
mov
fcoml
repnz
push
jo
or
or
andl
xchg
cmpsb
cmp
lds
cmp
jbe
and
adc
and
clc
in
addl
xor
fistps
ds
xorl
push
clc
fcomps
sahf
sub
jbe
bound
mov
push
jmp
push
xchg
test
data16
je
in
jae
test
mov
imul
cmp
sub
aas
sahf
push
add
xor
sahf
jb
push
and
inc
push
pop
push
or
pop
push
clc
push
loopne
jmp
and
fidivs
andb
adc
repnz
add
ret
mov
rcll
clc
sub
mov
mov
add
mov
pusha
aad
mov
cmpsb
push
mov
mov
xor
xlat
lods
aas
mov
pop
cmp
xor
mov
popf
xor
pop
pop
pop
js
in
popf
sbb
lods
mov
mov
cmp
xchg
xchg
push
mov
out
fdivrp
lahf
getsec
rcl
bound
int3
pusha
fwait
in
out
mov
adc
cltd
data16
xchg
or
aam
pop
or
fnsave
lods
fbstp
je
loopne
cmp
xchg
insl
movsb
iret
inc
movsb
jge
outsl
push
mov
pextrw
data16
popf
push
addl
adc
add
inc
rolb
mov
mov
mov
sahf
aad
arpl
jl
cld
out
mov
aaa
cld
add
or
dec
lock
mov
sub
insl
nop
inc
fwait
icebp
adc
out
xchg
inc
jne
xor
in
nop
jno
loop
negl
not
rcrl
std
std
or
and
pop
push
jg
cmp
mov
add
mov
cmp
lret
addr16
mov
xchg
fnstcw
jb
imul
scas
add
dec
push
jecxz
inc
pop
fldl2t
jne
xor
mov
xor
test
dec
or
cmc
lret
mov
pop
jnp
ret
jb
mov
mov
rcr
xchg
clc
xlat
stos
ficomps
hlt
cmpb
mov
scas
ss
xchg
imul
cli
xor
xchg
fmul
sahf
push
sub
jns
ss
push
stc
out
mov
fcmovne
sub
cmp
add
push
xchg
pusha
add
fsubs
mov
addr16
jnp
mov
lret
xchg
popa
test
daa
out
cmpsb
lret
xor
test
ds
imul
sub
icebp
cmp
pop
or
sub
push
lret
pop
scas
fwait
loope
dec
push
jbe
add
imul
flds
xchg
xor
cmp
pushf
mov
cmpl
sbb
sbb
adc
sub
adc
mov
cmpsl
ret
mov
jecxz
or
pushf
mov
arpl
push
push
mov
addr16
jl
push
xchg
stc
mov
outsl
popa
arpl
and
add
orb
ljmp
xchg
add
jb
push
and
push
jne
lods
push
jp
add
repz
mov
push
sahf
call
pop
xchg
push
outsb
ret
into
sub
pop
leave
inc
dec
daa
js
cmc
nop
ret
adc
movsb
or
mov
pop
xor
sbb
pop
arpl
xchg
pop
mov
jne
mov
enter
pop
push
sar
fadds
loopne
test
mov
xor
in
and
cmp
and
adc
imulb
out
ds
adc
inc
inc
pop
adc
push
mov
fisttpl
cmpsl
or
inc
mov
or
jmp
repnz
sbb
outsl
sbb
cmp
int
pop
inc
clc
leave
jge
scas
xor
arpl
mov
adc
into
xorb
dec
iret
hlt
in
vmovlps
mov
push
pop
iret
xor
xchg
or
shlb
mov
jo
outsl
idivl
cld
shll
mov
stc
fstpt
or
and
or
jp
add
pop
dec
fwait
hlt
lahf
add
int3
enter
fnsave
lods
xlat
sub
popa
lcall
xchg
push
repnz
dec
arpl
aaa
js
imul
add
outsb
sbb
insl
mov
mov
xor
mov
mov
daa
xor
mov
xor
mov
es
jns
out
cltd
mov
cmpsb
jge
int
inc
sbb
out
lock
movsl
lea
outsl
sarl
rep
cmp
push
add
jl
xchg
mov
pop
xchg
xchg
into
add
jae
dec
ficoml
push
loopne
lock
fidivrl
ljmp
lret
clc
jnp
in
imul
in
jmp
pop
movsb
mov
cmp
sti
xor
cmp
loopne
imul
mov
dec
xor
xlat
dec
mov
add
leave
cs
ja
mov
jmp
inc
pop
push
push
ret
and
nop
add
fs
cmp
mov
push
stos
jns
fdivl
jle
jmp
mov
dec
jnp
out
dec
sub
movsl
fiaddl
sub
add
inc
inc
cmpsb
xchg
ja
popl
sarb
lods
xlat
insl
shll
xchg
cbtw
pop
divl
push
adc
inc
movsl
cld
inc
fs
gs
inc
outsl
or
jo
mov
sub
loop
cli
xchg
adc
shll
mov
clc
daa
xchg
pop
adc
dec
push
jno
rcll
lahf
fnstenv
lock
inc
loop
or
jle
inc
adc
xor
aas
aas
inc
cs
sub
add
dec
or
test
pop
repz
jmp
xchg
cmp
outsl
movsb
and
or
mov
outsb
cmp
sub
cmp
stos
sbb
mov
testl
es
sbb
push
cli
mov
setb
sub
cmp
aas
adc
shl
push
or
in
sub
stos
xor
or
cmp
dec
push
sbb
int3
xchg
fisubrl
repnz
lods
aam
sar
inc
dec
nop
mov
lret
and
enter
mov
mov
fcomip
mov
sbb
inc
mov
das
push
jge
dec
in
fs
inc
arpl
xchg
inc
xchg
inc
add
push
aad
imul
or
or
lock
gs
mov
pop
stc
iret
fisttpl
fdivl
les
inc
cmp
push
add
lret
or
adc
adc
jnp
xor
orb
test
outsb
push
mov
pop
fisubs
ret
xor
pop
fsub
popa
adc
xchg
lods
inc
stc
dec
pop
lock
push
dec
xchg
mov
dec
mov
sahf
shlb
pushf
adc
adc
test
push
pop
xchg
dec
in
jo
mov
sub
in
leave
push
repnz
mov
jno
lret
adcb
jle
loope
leave
dec
jle
push
push
movntq
clc
jbe
push
fstpl
int
push
inc
bound
xor
mov
jnp
jle
mov
or
cld
iret
xchg
sub
xor
into
mov
sbb
mov
add
mov
or
push
add
xor
cmp
shll
add
push
rcr
cwtl
or
sub
jbe
dec
sbb
mov
sbb
mov
roll
pop
mov
addl
and
lret
dec
sub
mov
inc
shl
lds
scas
orl
xor
daa
test
icebp
into
jae
int3
dec
das
mov
cmpsb
dec
sahf
inc
push
dec
fmulp
imul
sbb
push
lea
pop
and
fwait
push
outsb
aaa
divb
imul
rolb
inc
ss
in
jae
xor
adc
sti
aas
or
movsb
sbb
jns
mov
sbb
sub
sahf
dec
add
and
cli
pop
orl
jle
pop
jnp
inc
popf
mov
daa
dec
or
lahf
leave
clc
test
and
mov
test
daa
xor
push
jl
push
xor
aaa
pop
xchg
outsb
movsb
and
inc
lods
cmpsl
mov
push
push
fbstp
lock
repz
cmp
arpl
xor
bound
loope
clc
sbb
cmp
add
ret
mov
xlat
mov
ljmp
nop
mov
sbb
enter
outsl
add
lahf
call
mov
jmp
into
leave
pusha
pop
adc
jp
jne
divl
mov
int3
arpl
sbb
and
scas
cmpsb
sbb
inc
and
pop
out
mul
push
sbb
sub
sub
int
xchg
and
cmpl
push
andl
std
ret
cmp
jnp
dec
shlb
adc
loop
andb
add
cli
das
clc
cmpsb
leave
push
jnp
push
inc
mov
insl
rcrb
ret
fsub
bnd
pop
xchg
int3
pop
loope
imul
push
or
mov
dec
enter
rolb
adc
movsb
jp
insl
xor
xchg
mov
dec
fstpt
test
test
and
add
add
ret
xor
aam
idivl
ljmp
mov
dec
dec
ret
cld
or
cmp
inc
adc
cmpsb
push
and
imul
jbe
dec
jle
jae
dec
sti
cmc
sbb
xchg
dec
mov
scas
mov
leave
bound
sub
pop
inc
out
test
or
mov
push
sbb
push
cmp
movsl
inc
push
mov
ljmp
repnz
idiv
push
nop
lock
hlt
adc
xor
jne
std
popf
mov
aas
shrb
adc
or
pop
jb
test
xor
adc
or
sarb
mov
mov
add
xchg
sbb
and
and
int3
pop
test
push
in
test
lods
aam
inc
scas
int
sub
dec
cmp
push
mov
idivb
cmp
dec
jg
lret
int
mov
inc
add
in
js
mov
pop
cmc
jmp
cmpb
jnp
insb
lods
jae
xlat
outsb
stos
and
jno
pop
jle
xchg
les
inc
add
ret
xor
mov
mov
push
and
clc
cmp
pop
cmc
std
mov
lea
fistl
mov
testl
mov
in
mov
aad
repnz
out
sahf
add
pop
jg
out
cmp
js
or
xor
and
outsl
in
bound
int
inc
pop
inc
hlt
outsl
jmp
xor
xchg
mov
and
jmp
leave
or
sbb
mov
js
jmp
jecxz
push
int3
mov
int
scas
stos
lret
ret
leave
clc
dec
xor
lret
mov
xchg
cmp
xlat
push
xchg
pop
dec
xor
imul
mov
inc
push
xor
stos
and
sub
iret
pop
aam
in
mov
mov
jo
push
dec
out
sub
pop
sar
mov
fbld
rolb
lods
jo
adcl
stc
mov
sbb
mov
dec
add
inc
dec
push
pop
sub
add
stos
in
arpl
aam
lea
in
add
mov
imul
fistl
xchg
pop
das
dec
outsl
int3
adc
icebp
nop
js
jp
pop
out
push
roll
outsl
incb
in
xor
adc
js
aad
jb
sti
cmp
mov
and
ret
sbb
jg
call
push
pusha
fbstp
or
fprem
pop
pop
xor
lcall
or
fidivs
sbb
cld
insl
jae
mov
xchg
je
mov
cmpl
lock
mov
and
fwait
adc
push
je
xchg
jae
roll
ds
ja
adc
push
stos
das
mov
inc
xchg
and
mov
mov
jne
in
adc
mov
jne
mov
mov
stos
movaps
jo
cmp
cmp
mov
pop
xchg
push
scas
push
fildl
pusha
lods
mov
shll
popf
or
int
cs
push
das
in
mov
sub
push
cmpsb
fidivl
add
divb
pop
add
in
pop
incb
inc
push
lods
rol
mov
stos
jp
add
dec
incb
add
mov
cmp
cmp
xor
xor
mov
mov
inc
psrld
cmp
and
ss
mov
push
out
in
cmp
loopne
pop
fwait
into
stos
sub
in
sub
dec
idiv
cmc
imul
adc
push
sub
subl
inc
in
aaa
xchg
cmpsb
insb
sub
mov
jnp
call
mov
stc
inc
pop
ret
shl
test
std
lods
in
ja
mov
cmpsb
test
mov
sti
pop
into
sarb
in
popa
inc
dec
ds
sahf
shlb
aaa
out
push
ljmp
mov
push
in
test
fs
and
cmc
loop
push
fs
push
rcll
cmp
mov
mov
in
sub
mov
dec
xor
ljmp
dec
xor
imul
lcall
mov
pop
inc
push
aas
jecxz
jle
add
fwait
imul
push
out
jmp
and
add
repnz
lahf
jmp
xor
sbb
fwait
sub
pop
and
and
inc
into
stc
loope
xchg
jb
loop
push
rcrb
ret
adc
mov
test
push
das
xor
pop
popf
mov
repz
scas
test
inc
dec
jp
fldl
daa
mov
inc
jne
sub
xchg
cld
jmp
mov
xchg
adc
or
push
and
mov
and
lock
rorl
mov
jmp
mov
push
aam
or
mov
sub
jbe
sti
xchg
in
in
sti
jbe
stos
push
push
mov
in
gs
outsb
icebp
imul
push
mov
mov
mov
inc
pop
pop
outsb
pop
xchg
in
popa
xchg
mov
inc
in
es
ret
in
add
lret
lds
scas
adc
sbb
xchg
pop
arpl
incl
xchg
and
dec
mov
xchg
stos
xchg
pusha
push
jo
add
out
test
cmpsl
cmp
addr16
sahf
insl
inc
cmp
mov
sub
ror
add
add
nop
xor
xchg
mov
xchg
sub
fisttpll
mov
fmuls
xor
jle
pop
in
mov
fistpll
push
xlat
imul
int
cs
xchg
outsb
fcoml
std
loopne
inc
jae
mov
outsl
outsb
mov
popa
mov
add
sbb
mov
loopne
bnd
push
int3
icebp
sti
jno
xlat
xchg
dec
sbb
mov
and
imul
mov
fcomi
rcll
mov
sub
adc
jecxz
andb
insl
push
les
ja
hlt
fwait
cmp
adc
fidivs
pop
int
out
test
mov
add
sbb
fwait
rol
outsl
dec
daa
pop
mov
pusha
test
xlat
mov
insb
cltd
jbe
push
jb
std
cmp
xchg
mov
int
sbb
insb
jae
lret
inc
iretw
add
stos
cli
adc
or
leave
and
jge
test
jmp
add
out
xchg
pop
js
jecxz
jle
and
scas
add
push
push
popf
rorl
sbb
xchg
movsb
or
cld
adc
icebp
aam
in
std
inc
unpcklps
add
lea
mov
loopne
push
push
sub
sahf
lahf
lret
aam
cmp
sub
adc
decb
pushf
dec
cs
inc
sbb
pop
pusha
in
int3
gs
xchg
or
in
cwtl
fwait
or
xor
pusha
jnp
and
xor
inc
sbb
les
pop
cmc
jl
pop
push
or
and
ljmp
in
imul
pop
push
out
test
mov
roll
sub
out
mov
pop
movsl
pop
stos
pop
xorb
push
cmpsb
cmp
jo
mov
add
xchg
test
mov
outsl
decb
and
sub
gs
popf
inc
sbb
push
pop
dec
fldcw
cwtl
sub
bound
cmp
shrb
jmp
mov
xlat
pusha
filds
rcrl
lods
enter
out
jne
or
outsl
xor
jge
xor
pop
lcall
sahf
adc
lret
mov
pop
sub
push
cmp
adc
and
insb
inc
roll
lea
cwtl
cmpb
mov
jnp
aam
mov
outsb
inc
pop
jne
jmp
out
testb
js
xchg
test
rcrb
jge
sub
xlat
mov
in
pop
fcomi
test
cs
mov
xchg
jmp
pop
or
sub
add
cmpsb
sbb
aas
scas
adc
jb
lahf
vxorpd
std
mov
dec
push
data16
sub
fldl2e
or
xor
add
cmp
repnz
insb
mov
pop
das
sub
out
mov
addl
addr16
xor
sub
int3
xchg
dec
mov
imull
mov
adc
in
bound
jecxz
lea
jge
jg
outsb
movsb
push
cld
pop
add
out
pop
mov
movsl
cli
fsubp
movsl
ds
and
mov
dec
jge
pop
sub
pushf
inc
shll
dec
cmp
test
fs
lods
addr16
je
inc
jmp
mov
pop
jnp
dec
push
mov
jnp
mov
cwtl
push
mov
push
aam
lods
rcrl
mov
pop
rcll
loope
push
and
and
and
in
lahf
les
add
jb
push
mov
enter
xchg
lahf
into
movsb
stos
push
lds
cmpsl
jae
scas
pop
jb
in
or
rcrl
imul
pop
das
cs
fwait
cmpsb
gs
int
inc
xor
outsb
je
fldl2t
push
cwtl
jae
fs
xchg
mov
test
jno
out
pop
mov
dec
in
nop
add
stos
sub
add
add
mov
ret
cmp
pop
mov
push
pusha
es
xor
xchg
sahf
ret
dec
mov
fdivs
int3
sbb
btr
dec
push
xor
icebp
es
mov
fdivrs
aad
fdivrl
and
pop
jb
jecxz
mov
mov
add
fwait
test
mov
rcll
iret
xor
mov
xor
rcrl
xor
bnd
cltd
int
cli
sbb
or
sub
sbb
orl
stos
sub
in
clc
and
sub
cmp
and
or
xchg
scas
ljmp
jbe
out
pop
aas
xchg
jmp
fdivrl
jmp
push
pop
imul
mov
push
ret
mov
sbb
out
push
addr16
fs
dec
inc
ret
dec
mov
mov
lret
jle
jb
aam
sbb
stos
andb
lock
dec
mov
mov
add
dec
lcall
ret
sti
sbb
adc
or
sub
mov
int
cmpsl
cmp
cmp
sbb
out
rcrl
or
aam
loopne
mov
fwait
bound
orb
xchg
insb
pop
and
lahf
shr
shrl
add
push
pop
mov
xor
jle
pushf
mov
mov
mov
xchg
cmp
rcrb
jl
loope
js
push
push
or
fimull
data16
jnp
jecxz
fistpl
xchg
cltd
xchg
shld
sar
and
xlat
out
das
lahf
fsubrs
fs
and
mov
sub
mov
daa
push
push
test
push
jbe
sti
sbb
pop
add
scas
out
bound
mov
sbb
adc
cli
daa
add
xlat
push
mov
mov
pusha
mov
pop
xor
inc
insb
xlat
andb
xchg
popf
dec
js
pop
xor
sub
repz
push
int
rcll
in
or
rolb
mov
push
dec
stos
mov
mov
xlat
cli
pusha
cmpsb
jmp
popa
sbb
push
inc
repz
dec
mov
jp
scas
mov
icebp
leave
mov
sbb
pop
pop
add
mov
fmuls
stc
mov
or
jge
xchg
aam
jbe
adc
test
repnz
scas
dec
incb
jmp
int
fistpll
xor
call
cmp
xchg
out
cmp
lea
clc
mov
and
xchg
push
xor
add
loopne
lods
addr16
iret
sub
call
dec
mov
mov
sbb
or
dec
and
sub
pop
cld
in
lret
mov
ret
clc
pop
sbb
dec
fistl
cld
jae
pop
in
xor
pop
xor
xor
jle
int3
cmp
pop
push
fstl
pop
fistps
pushf
out
mov
loope
xor
adc
call
mov
sbbb
inc
sahf
fld
jns
xor
push
add
shll
sbb
enter
mov
mov
mov
jmp
movsb
mov
pop
imul
jns
std
stos
subl
pop
jmp
dec
add
adc
cmp
popf
pusha
mull
fcompl
push
mov
lods
pop
rorb
mov
xchg
ss
push
repnz
sti
outsb
and
mov
aad
jmp
and
iret
pop
in
mov
repnz
jo
cmp
mov
and
repz
cmp
adc
inc
and
jge
into
push
mov
xor
clc
push
inc
xlat
daa
sbb
jae
pop
popaw
cltd
sub
push
adc
xlat
cmovp
mov
shlb
movsb
andb
js
ss
cltd
subb
pop
push
cmpsb
mov
int
cltd
cmp
sbb
mov
mov
dec
ret
inc
int3
jle
or
in
arpl
cld
popf
and
int3
mov
push
xlat
push
pop
test
dec
jo
xor
or
sub
adc
push
mov
pxor
pushl
xor
scas
cmp
pop
shll
outsl
push
mov
lods
add
pop
xchg
js
pop
bndstx
xchg
rorb
sbb
pop
fistpl
mov
push
test
idiv
pop
mov
addr16
rcr
xor
push
leave
out
cli
loope
jne
daa
pop
jp
addr16
sub
sbb
lea
dec
fwait
dec
popf
test
std
inc
xor
rcll
dec
dec
jbe
movl
pop
movsl
int3
jl
sub
fwait
jo
pop
pop
dec
cmc
xor
sbb
xchg
xchg
and
lea
inc
push
ret
loope
push
addr16
rcr
mov
insl
adc
cmpsl
sarl
jne
inc
inc
loope
jmp
xor
out
cmp
or
aas
int
lods
lcall
add
mov
push
cltd
lods
and
xchg
xor
sbb
fwait
jl
fnstsw
enter
jl
fwait
mov
lea
mov
cmp
or
ror
lcall
xchg
cld
cmc
xor
pop
fcompl
data16
cmp
lret
stos
addr16
inc
adc
or
negl
in
mov
xchg
ficoml
stos
sub
jns
les
roll
imul
leave
nop
cmp
cltd
add
icebp
push
mov
in
xor
xacquire
je
adc
pop
orb
ja
jge
inc
jns
xchg
pop
sbb
cmp
popa
jl
mov
insb
jge
ss
and
andl
movsb
xchg
into
pop
mov
jecxz
lods
mov
mov
xor
mov
adc
jnp
cmp
push
orl
js
pop
es
and
sub
outsl
inc
fildll
dec
loope
shlb
jg
push
or
mov
xchg
test
adc
loopne
es
pop
aas
jp
add
outsl
adc
xlat
cmp
into
jns
lods
fists
push
int
ret
pop
dec
dec
jp
jne
mov
push
jg
xrelease
ljmp
fildl
push
lock
nop
sub
mov
decb
outsb
rcrb
mov
jno
jg
cmc
pop
enter
inc
mov
cs
mov
into
dec
in
movsb
lock
repnz
outsb
js
cmp
inc
sarb
inc
jle
imul
push
enter
jne
scas
adc
jns
inc
pop
xchg
xchg
jmp
and
mov
shll
mov
mov
lods
xor
out
or
stos
jno
clc
mov
and
mov
call
sbb
pop
xlat
cmpsb
mov
jne
lods
enter
cwtl
in
and
cmpsl
push
or
je
mov
sahf
mov
and
in
mov
or
stc
cmp
jmp
fucomi
push
jmp
aas
mov
jno
sbb
rolb
cltd
je
in
adc
or
pop
ficomps
mov
dec
or
jns
push
add
arpl
nop
je
mov
rorb
sbbl
jnp
popf
int
jnp
lret
adc
stos
add
loope
insl
repnz
jl
in
xorl
cwtl
adc
xor
add
sbb
inc
call
push
scas
cmp
insb
dec
dec
cmp
jge
pop
pop
jecxz
fwait
jae
loopne
test
fs
sti
cmp
jno
or
ret
lods
outsl
test
mov
fnstsw
pushw
xchg
out
xor
lcall
lock
pop
mov
push
add
sub
int3
outsl
cmp
jo
xchg
pop
jge
sahf
jb
mov
mov
test
mov
jne
jg
mov
adc
inc
mov
inc
xor
add
xchg
push
cld
aaa
push
jo
nop
into
xor
mov
outsl
jmp
in
leave
xchg
loope
test
add
xchg
icebp
in
inc
xchg
shrl
in
pushf
ds
es
mov
pop
subl
xchg
cmovno
mov
push
into
xor
test
fnstcw
imul
fidivl
mov
test
jle
pop
and
sbb
inc
call
adc
push
xchg
jge
not
inc
jle
sub
sbb
in
mov
sti
mov
popf
or
mov
push
mov
stc
imul
add
add
add
cmp
mov
out
mov
pop
xor
test
dec
mov
roll
lock
dec
daa
cmp
push
and
inc
movsl
lods
aas
push
mov
fcmovnb
js
lds
popf
and
sub
cmp
cmp
cmp
out
stc
adc
mov
std
shlb
adc
pop
outsb
pop
jno
mov
rolb
fcomi
insl
pop
inc
cmp
push
cs
mov
scas
push
insl
xchg
out
mov
pop
out
popa
jb
outsb
adc
cmp
lcall
pusha
daa
pop
rcrl
or
in
js
xchg
testb
call
insb
cmp
in
xor
iret
xchg
xor
mov
data16
cli
leave
shll
popa
adc
in
sbb
lock
mov
loop
les
test
xchg
addr16
btc
add
push
out
cld
fucomip
sub
pop
xchg
add
and
inc
sub
cmp
ja
xchg
adc
sbb
test
lds
pushf
cmpsl
jge
sbb
enter
sbb
ret
and
aaa
rolb
shll
push
sub
mov
rorb
pop
ja
dec
arpl
je
sarb
test
stos
mov
data16
push
pop
pop
sbb
ja
out
stos
xlat
fstpl
inc
pop
leave
and
scas
test
cltd
add
mov
fs
negb
out
lods
pop
add
sbb
out
push
fsubp
fildll
xchg
mov
mov
push
mov
pop
jge
mov
pop
xchg
lcall
testl
bound
dec
jae
jbe
push
or
mov
mov
insb
push
and
xchg
xchg
popa
dec
addr16
mov
in
jl
aas
lcall
lods
fisubl
adc
xor
fabs
lods
adcl
mov
aas
aam
aad
push
or
mov
or
inc
mov
and
xor
mov
aam
sbb
lahf
sbb
lock
mov
movb
xchg
fsts
adc
xorb
pusha
enter
outsl
ret
cmp
fldcw
sarb
mov
lcall
xchg
clc
lock
cwtl
push
cmp
jb
jbe
fcoml
aaa
popa
out
adc
inc
das
or
in
mov
or
mov
arpl
jo
sahf
cwtl
and
cmp
popa
out
mov
pop
ret
loop
daa
fs
ret
icebp
clc
loop
js
mov
shlb
lea
fdivr
scas
dec
scas
xchg
fwait
jb
pop
xor
int3
call
sub
cmpsb
push
cmc
xchg
testl
movsl
mov
or
inc
fwait
lods
ljmp
nop
inc
lahf
or
inc
repnz
int3
cltd
cmp
mov
in
mov
pusha
or
mov
push
enter
or
add
add
lds
cmp
mov
add
pop
fldt
or
mov
ja
stos
int
sbb
inc
pop
and
aam
inc
inc
aam
lret
mov
dec
stos
cmp
ficoms
dec
cmpsb
add
sub
and
push
pop
daa
imul
push
daa
loop
dec
repnz
scas
pop
adc
mov
mov
cwtl
mov
hlt
pop
pop
clc
sub
out
cltd
loopne
jl
lods
adc
push
popf
cld
fdivrp
rcll
and
or
testl
aas
xor
mov
sbb
stos
inc
inc
mov
add
xchg
lret
mov
out
sbbl
mov
je
testb
test
ret
pop
iret
add
sub
cmc
movsb
out
xor
cmpsl
frstor
testl
fwait
les
sbb
test
int
fstl
jb
push
cmp
fists
dec
insl
insb
aas
add
sbb
inc
loop
scas
fildll
enter
fs
pop
mov
jg
ljmp
pop
jnp
fildl
mov
rolb
in
fimuls
aas
xor
cmpsb
inc
mov
and
cmp
cli
push
pop
push
movsl
mov
mov
mov
pop
pop
push
pop
or
xcrypt-cbc
cmpsl
rcrb
push
ds
cmpsb
or
jle
rcl
int
lret
xchg
fs
mov
stos
fstpt
je
les
jnp
hlt
scas
insl
adcl
cmp
xlat
push
push
xlat
repz
jle
add
jns
push
daa
test
pop
cmpl
loope
negb
or
lret
in
lret
fldenv
test
sub
jo
cmpsl
insb
push
cld
aas
in
popa
add
push
hlt
sub
adc
xchg
xor
nop
or
pop
nop
icebp
test
ss
mov
in
inc
popf
movsb
insl
rolb
stos
push
roll
and
mov
mov
sarb
add
out
dec
add
pop
mov
dec
outsb
sbb
in
push
stos
fidivrs
in
pop
in
pop
xchg
sarb
and
push
mov
pop
iret
movsl
jecxz
push
nop
out
pop
loopne
aad
and
push
gs
adc
icebp
das
mov
dec
jnp
jb
mov
ds
adc
inc
lret
dec
shlb
rclb
mov
mov
jmp
jmp
mov
xor
inc
dec
cwtl
mov
scas
xor
lods
enter
xchg
ds
cld
pop
jmp
rorl
jno
adc
mov
dec
and
jecxz,pt
push
sub
leave
xchg
repz
add
dec
das
leave
fstpl
repz
loop
test
mov
lods
cld
jl
arpl
ljmp
mov
dec
push
sub
andl
scas
mov
pop
cld
pop
and
dec
addr16
mov
mov
sub
pop
pop
ret
push
xor
mov
add
ret
xor
cmp
cmpsl
jmp
mov
adc
aam
sub
jl
hlt
sub
out
cs
pop
cmp
xor
pop
out
in
mov
sbb
lods
mov
adc
jg
fistpll
push
in
dec
adc
js
orl
jg
test
mov
divb
inc
push
pop
lods
cmp
icebp
in
add
and
clc
insl
mov
jbe
outsb
inc
push
jo
int3
and
iret
inc
xchg
mov
shll
or
adc
pop
lods
push
or
gs
inc
jmp
push
mov
ja
pop
xor
orl
cmp
pop
daa
mov
push
ret
popf
icebp
insb
pushf
xor
jmp
shll
push
pushl
push
fdivs
xor
inc
out
ret
mov
dec
jecxz
lret
push
lret
and
fidivrl
sub
sbb
xor
ja
inc
cmc
push
mov
pop
push
loope
push
mov
mov
andl
mov
push
imul
aad
adc
inc
cmpsb
or
out
pop
int3
pushf
pop
inc
jmp
mov
popf
dec
jmp
sub
cmp
sbb
pop
or
cmp
cmp
cwtl
and
mov
mov
in
push
xchg
pushf
int3
fdivl
rolb
cmp
jg
lods
xor
pop
fiaddl
std
and
rcr
sbb
ret
and
push
mov
lcall
pushf
iret
mulb
inc
and
pop
mov
scas
insl
sti
push
xchg
aam
xor
jmp
xchg
leave
dec
imul
mov
inc
adc
ret
mov
mov
in
fs
and
and
fstpl
aaa
repnz
push
push
pop
pushf
xchg
scas
push
xchg
sbb
sub
sbb
inc
jp
inc
clc
cmp
xchg
movsl
jl
leave
add
xlat
add
mov
pop
jo
dec
sub
popf
mov
or
sub
repz
rcll
rcr
addb
inc
jp
push
push
jmp
push
pop
add
xchg
andl
add
jnp
pop
enter
out
movsl
push
subb
mov
lret
stos
rcrb
adc
das
mov
aam
aaa
adc
mov
mov
push
repnz
aas
pushf
adc
inc
or
jns
mov
in
xor
aam
inc
popa
jmp
cld
out
or
mov
push
xlat
push
sbb
cmc
cmpsb
xchg
int3
sub
mov
das
dec
push
mov
push
jnp
push
jne
inc
pmuludq
shlb
push
loopne
xchg
pushf
nop
push
pop
in
pop
dec
ret
cmp
jecxz
pop
lret
imul
xchg
mov
test
cmp
repz
popa
sarb
mov
hlt
dec
jg
out
xor
fsubrs
jg
test
hlt
lret
in
das
test
aad
nop
adc
cltd
pop
jge
rorb
bts
lea
sbb
push
mov
jae
fdiv
xchg
xchg
xor
int3
rcrl
add
jmp
xor
or
outsb
cld
mov
mov
or
fisubrs
test
in
lods
xor
jl
xchg
jp
sub
push
bound
pop
mov
xchg
fwait
sbb
in
test
roll
jo
daa
sbb
pop
sub
jecxz
pop
pop
jmp
fidivs
push
repz
xchg
add
fildll
push
bswap
movsb
sahf
scas
add
dec
pop
xor
movsb
orl
clc
and
int
bound
cwtl
sbb
in
adcb
inc
in
inc
xchg
or
adc
adc
leave
pop
pop
or
xor
std
add
outsl
incl
out
cltd
push
dec
jo
sahf
xchg
pop
cmp
cmpsb
jb
push
sbb
push
adc
mov
mov
dec
pop
notb
or
stc
push
daa
mov
js
es
popf
inc
jmp
stos
fs
dec
add
mov
mov
std
aam
pushf
std
sub
mov
jmp
sub
fldenv
mov
and
sar
insb
out
push
ret
imul
fcmovnb
aaa
mov
mov
in
cwtl
add
mov
lds
push
add
movsl
adc
int
push
sbb
push
inc
cmp
movsl
adc
and
pop
xlat
mov
jmp
cmp
mov
movsb
or
ret
fs
mov
test
roll
mov
cmp
push
inc
test
stos
adc
jge
mov
add
inc
xor
pop
xchg
cmp
fbstp
scas
adc
iret
leave
push
add
cmp
movsb
loopne
cmc
fnstsw
jge
clc
cli
mov
dec
xor
mov
push
in
push
shlb
imul
movsb
pop
xor
sub
or
rcrb
ja
dec
mov
je
popf
cmpl
out
xchg
mov
shl
and
repz
inc
dec
inc
push
inc
pushf
aad
add
push
call
in
and
out
movsb
mov
pusha
sbb
push
mov
aam
push
pop
fildll
cmp
sub
frstor
filds
push
and
mov
inc
enter
cmp
cwtl
inc
push
xchg
adcl
and
xlat
push
sbb
insl
bound
leave
int3
and
inc
mov
ja
mov
in
mov
jb
mov
xchg
outsl
mov
popa
ret
fcomps
adc
into
mov
jecxz
cmpsb
or
add
xchg
xchg
decb
psrlq
cmp
mov
add
jae
mov
push
add
pop
cmc
std
push
lea
jge
mov
cmp
mov
mov
nop
jecxz
aad
icebp
push
pop
and
lods
push
push
sub
jno
test
adc
jge
std
mov
js
jno
mov
pop
jl
std
test
dec
sub
and
jg
call
or
mov
mov
sub
sbb
mov
pop
jne
xchg
jmp
xchg
pusha
loopne
xor
push
cli
mov
jb
shrb
lahf
daa
jno
into
pop
jmp
adcl
sti
popf
xchg
fs
icebp
rcrb
mov
adc
dec
push
add
mov
jge
mov
icebp
ljmp
out
dec
xorl
adc
mov
pushf
push
xor
aad
jo
jge
xchg
mov
lea
sbb
in
lock
push
sub
push
mov
or
add
push
push
cmpsb
shll
and
in
sub
in
ja
sub
test
roll
imul
and
mov
xor
xchg
dec
xor
clc
out
dec
icebp
xor
xor
addr16
aas
mov
dec
mov
hlt
mov
ror
jecxz
imul
movsb
lds
pop
ljmp
jl
and
inc
mov
lea
out
jnp
andl
shrl
or
and
movsb
shr
xchg
shrl
mov
mov
imul
cmpsb
xchg
push
call
or
sub
inc
add
lds
popf
jae
test
adc
jns
cmp
into
xlat
lds
sub
xchg
xor
lock
stos
incl
mov
xor
or
mov
inc
lahf
stos
sysexit
mov
addr16
ss
inc
std
aas
mov
int
je
push
xor
inc
mov
fimull
bound
xchg
cld
mov
or
adc
add
clc
cmp
pmaddwd
mov
lods
fmulp
jle
xchg
mov
out
xchg
rclb
xchg
aad
fmul
mov
xchg
pop
xor
dec
mov
push
adc
aaa
imul
dec
adcl
int
mov
adc
insb
jb
xchg
jle
mov
addr16
mov
sbb
mov
in
pop
andb
mov
lods
xchg
xor
adc
inc
sarl
movb
dec
push
stos
jne
rorl
mov
pop
sbb
jmp
mov
pop
xor
test
sub
loope
nop
sub
push
adc
lods
cmp
cmp
push
xchg
pop
sahf
or
cmpsl
sbb
mov
les
in
cmp
inc
adc
jl
pushf
inc
pop
insb
push
jbe
cmp
sub
cmp
sub
inc
dec
sahf
xchg
hlt
dec
jp
mov
add
aad
cmpsb
stos
lea
cmpsl
push
xchg
scas
outsb
loop
push
repz
fwait
add
mov
lods
dec
pop
xchg
and
push
call
out
adc
mov
shrb
xchg
repz
arpl
mov
mov
xor
lahf
jmp
popa
mov
pop
out
cmp
mov
push
jnp
mov
dec
cwtl
fstl
or
cmpsb
dec
lcall
cltd
fldenv
adc
xchg
js
mov
xchg
pop
mov
sub
mov
or
mov
daa
out
adcb
cmc
sti
rcrb
aam
ds
and
shll
or
test
iret
lahf
cmp
leave
aad
int
mov
dec
pop
fistps
scas
shl
call
adc
push
sarl
jb
outsb
cmp
add
popl
and
jmp
mov
orb
lcall
or
aaa
repnz
cs
call
add
hlt
push
jecxz
int
mov
ret
dec
leave
loopne
lea
xor
xchg
stos
pop
nop
push
iret
and
or
lahf
jno
xchg
out
clc
cld
ret
sbb
push
pop
js
fstps
pop
dec
sbb
and
movsb
ret
dec
clc
mov
mov
fistl
movsl
cmp
push
add
jns
out
xor
adc
std
lret
movb
xchg
and
cmp
fisubs
lret
jns
sbb
push
ficomps
mov
push
mov
push
ret
fwait
dec
call
leave
ret
jecxz
loope
mov
adc
xor
insl
lods
push
imul
xchg
inc
lock
jmp
addb
test
jecxz
jecxz
fidivs
jl
add
sub
cmp
cs
shrb
push
dec
xchg
mov
xchg
dec
add
and
popa
leave
shll
xor
mov
out
cmp
xchg
cld
iret
gs
insl
je
in
pop
mov
jbe
push
fcom
testl
jle
lock
inc
push
ret
cmc
into
lea
test
cmp
mov
adc
and
lods
add
jecxz
aam
cs
and
testl
ret
mov
inc
pusha
subb
mov
adc
sub
pop
add
xchg
inc
jge
ffreep
push
sbb
adc
push
fsubl
test
nop
movsl
cmpsl
hlt
mov
insb
cltd
dec
scas
xchg
fbstp
mov
dec
xchg
add
cmp
jne
arpl
repnz
cmp
mov
xchg
mov
rorb
loopne
cltd
or
jo
inc
push
push
sbb
loopne
cmp
test
pop
inc
lds
iret
jae
mov
std
xor
and
leave
dec
adc
popf
add
jb
xor
push
cmp
aam
gs
sub
je
cmp
add
xor
xor
out
negb
mov
adc
xor
cwtl
imul
jae
das
inc
divb
dec
cmp
pop
or
xchg
pop
call
jo
repnz
sub
scas
repz
xor
inc
mov
je
cmp
in
nop
adc
in
and
fisubrs
lods
jmp
and
xchg
js
cmp
lock
aas
cmp
dec
mov
sbb
jl
das
fld
out
mov
popa
sub
dec
jae
in
les
jns
out
leave
xor
push
jge
xchg
mov
stos
mov
data16
inc
xchg
notb
fldt
adc
push
mov
push
movl
fimuls
add
adc
out
or
push
push
daa
cs
insb
jl
popf
jle
je
add
mov
int3
add
pop
sub
xor
xchg
xlat
push
ja
or
incl
cmpsl
pusha
lret
lods
shll
sbb
sbb
ja
leave
loope
push
shrl
test
and
rcll
pusha
iret
ret
ljmp
sub
inc
mov
sbb
mov
push
loopne
mov
sbb
out
adc
inc
fmul
pop
test
inc
adc
out
sahf
jae
or
dec
stos
inc
sbb
pop
xchg
inc
dec
sbb
test
test
add
mov
mov
push
pop
pushf
add
jl
adc
adc
push
lods
dec
sub
push
push
in
xor
dec
mov
mov
inc
scas
stos
jge
ljmp
sbb
mov
js
pop
jnp
icebp
mov
sbb
add
nop
or
or
fcomps
sub
mov
rolb
inc
leave
lods
mov
pop
lret
inc
insl
mov
test
mov
pop
pop
addr16
scas
sbb
lea
leave
mov
lods
not
js
sarb
push
dec
loop
jecxz
adc
adc
dec
pusha
mov
in
out
aam
negl
jae
mov
jno
add
ret
imul
enter
test
cmpsb
mov
jns
inc
cmp
mov
push
jae
icebp
iret
lcall
aam
out
in
mov
or
arpl
out
lea
jnp
adc
or
gs
out
xchg
in
int3
dec
sbb
or
and
test
stos
outsb
pushf
out
push
rol
sub
faddl
mov
imul
ja
mov
xor
test
in
int
cmp
or
and
mov
das
aam
or
cmpsb
pop
dec
sbb
andb
out
jno
push
jbe
std
push
sub
push
mov
mov
and
xor
into
add
cmp
and
pop
push
and
sahf
test
cs
popf
lahf
and
cmp
or
mov
fmull
xor
ret
sub
outsl
adcl
sub
aam
jno
sbb
ret
enter
ja
mov
sub
movsl
mov
into
arpl
xchg
xor
adc
in
lcall
or
nop
push
aas
fidivrs
cli
jg
das
mov
xchg
sbb
lods
test
push
shrl
and
mov
xchg
outsl
jp
negb
jp
movl
xor
or
in
xor
cmp
and
in
fadds
add
sub
loopne
sbb
cwtl
jg
sub
jmp
mov
scas
fisttpll
and
popa
cmc
mov
cmp
ret
adc
push
push
out
xor
sbb
movsb
nop
into
adc
pushw
aad
push
push
xchg
out
je,pt
fadds
stos
pop
sahf
fstpl
pusha
in
pop
jno
jl
xchg
neg
jl
xlat
add
fcmovnbe
or
shl
mov
cmp
mov
cmova
xchg
gs
push
cltd
call
or
inc
js
fmuls
ja
and
lcall
pushf
scas
xlat
lea
push
or
and
daa
mov
ja
aas
xor
push
jl
in
mov
jp
and
lea
jl
push
lahf
pop
pop
mov
sub
movsb
push
clc
iret
xor
and
cmp
and
dec
imul
test
fbstp
jns
jns
jbe
nop
outsb
insb
pop
dec
cli
sub
inc
xor
mov
fdivrs
mov
mov
mov
inc
cmp
push
lea
pop
mov
in
stos
mov
jno
in
push
in
fcompl
dec
push
repnz
and
pushf
movsb
xor
cmp
and
in
loope
add
sbb
lahf
jno
in
push
jge
jb
mov
jb
dec
imul
pop
mov
lret
inc
imul
mov
dec
dec
add
sbb
insb
mov
sahf
arpl
jg
jns
pop
pop
movsl
das
sub
jge
cmpsb
fisttpll
adc
dec
fdivl
push
xorl
cwtl
pop
xor
daa
cmp
fisubrs
add
pop
pop
pop
mov
push
addr16
test
cwtl
scas
sbbl
ljmp
xorb
adc
loop
cmc
fstpl
inc
or
mov
adc
mov
shr
mov
mov
ret
mov
fnstcw
loope
sbb
push
ja
and
pop
adc
lods
ja
rclb
cld
mov
outsl
popf
popa
dec
dec
fisubrs
cmp
xchg
and
test
cmp
leave
outsb
jbe
dec
jg
cltd
jg
cmc
push
std
in
aas
or
dec
adc
sub
mov
cmpsb
movsl
lcall
push
shlb
imul
add
cmc
cs
movsb
call
test
mov
adc
pop
ljmp
loop
jmp
pop
pop
pmaddwd
push
jle
les
xor
fistpll
cmpsb
pop
mov
push
and
dec
mov
sub
mov
ljmp
mov
inc
bound
or
cmpsl
mov
out
xchg
cmp
mov
loopne
pushf
lock
fdivrp
movsb
test
lock
aam
sahf
jge
push
flds
out
cwtl
add
imul
sub
movsl
imul
mov
incl
pop
jnp
std
inc
stos
fldl
mov
neg
dec
cmp
dec
cmp
xchg
dec
or
adc
adc
leave
lret
clc
sub
jne
dec
and
loope
int3
add
jno
push
mov
dec
andl
sub
sbb
mov
adc
mov
cmp
mov
sbbl
out
mov
xor
mov
ret
mov
xchg
cmp
cmp
inc
dec
ret
cmpsl
lret
mov
xlat
sbb
mov
mov
xchg
xor
subb
enter
loope
rcrl
mov
loopne
push
lea
sbb
sub
popa
int3
mov
fisubrl
pop
mov
arpl
inc
push
gs
or
jno
inc
sbb
ds
jne
inc
push
xchg
xor
xorb
test
pop
fcomps
movsb
pop
pop
fistl
inc
shll
sub
fmulp
dec
aad
andl
adc
orl
in
test
dec
lds
jle
shrl
outsl
jecxz
and
mov
fidivl
in
mov
mov
neg
rcrl
dec
sbb
and
sbb
dec
mov
mov
xchg
dec
nop
std
scas
mov
leave
daa
fstp
daa
gs
cmp
fadds
add
and
adc
dec
pop
pusha
adc
sbb
pop
cmp
sub
mov
mov
or
outsb
push
clc
shrl
int
lahf
or
jge
into
lods
pop
and
scas
outsb
and
cmp
xor
or
scas
outsb
in
gs
jmp
adc
cmp
inc
stc
stos
repnz
cmp
xor
out
mov
mov
mov
sub
pop
int3
mov
push
pop
pop
push
inc
push
shlb
lods
lret
add
jle
sbb
pop
xor
sbb
addr16
stc
and
jnp
add
loop
fsubrs
xor
into
popa
inc
mov
inc
aaa
sub
jnp
mov
movsl
cmpl
cmp
stos
and
adc
or
arpl
cmp
rorb
jmp
addb
xchg
or
pop
mov
loope
stos
fwait
out
mov
mov
cltd
shrb
cmp
jae
push
jne
mov
fsub
jecxz
int
test
mov
sbb
and
je
pop
dec
push
test
cmc
mov
sub
sub
repnz
xchg
ficoml
nop
dec
sub
cmpsb
cmpsb
popl
pop
not
out
or
push
ret
ljmp
call
push
popf
out
test
mov
sbb
int
add
adc
loop
jmp
add
jl
pusha
push
int
mov
call
and
xor
es
shrb
mov
loop
sub
aas
mov
clc
ss
dec
ljmp
cmp
bound
sti
sbb
fwait
push
aaa
sbb
sub
int3
insb
fisttpl
jno
jns
mov
xor
lds
imul
popa
out
mov
adc
shll
cwtl
sbb
movsb
sub
mov
call
dec
stc
inc
sbb
inc
imulb
addr16
out
fwait
jo
aad
xor
xor
pusha
jb
out
in
xchg
jmp
pushf
rcrb
mov
mov
mov
or
and
xor
cmpsl
ret
rorb
clc
jo
lahf
inc
dec
je
push
adc
xchg
inc
cltd
insb
enter
cmp
push
out
sub
push
cmp
mov
jmp
nop
or
push
jno
rcrl
fisubrl
sbb
shll
push
nop
jg
int
and
lahf
jmp
pushf
andl
insb
mov
mov
sbb
repnz
jge
out
in
push
hlt
cmp
push
ret
add
cmp
add
fwait
xor
pushf
pop
mov
sub
clc
cmp
dec
pop
bnd
fucomip
dec
xchg
pop
mov
mov
ret
call
inc
mov
inc
int3
divb
in
xchg
mov
psubusb
cmp
xlat
cmpsb
adc
pop
fcompl
loope
sbbb
sbb
cmp
inc
jno
lods
dec
cmp
aaa
int
std
jns
sub
mov
mov
xchg
js
dec
cwtl
mov
add
xor
dec
cltd
mov
outsb
add
test
push
daa
pop
arpl
mov
dec
lahf
shl
xchg
jmp
adc
lods
lock
mov
arpl
bound
dec
testb
mov
jb
lds
loop
std
lret
lcall
daa
mov
nop
cmp
shll
and
call
sbb
jnp
mov
mov
pop
mov
movsl
jg
xchg
xor
fadds
mov
mov
xorb
in
clc
dec
aas
jnp
pop
cmp
xchg
push
xor
jge
mov
push
pop
arpl
mov
or
dec
mov
or
stos
std
movsb
fsubrs
sbb
lret
aas
sbb
or
and
inc
notb
das
sti
mov
pop
mov
mov
xor
mov
cmpsb
add
jnp
addl
fnstenv
cmp
push
loop
ja
jle
ja
lock
pusha
push
push
sbb
jmp
ret
jne
jl
fnstenv
push
sub
inc
push
push
dec
stc
or
mov
dec
aas
push
add
arpl
and
dec
call
shrl
dec
pop
arpl
push
jecxz
fstpl
imul
xor
add
pop
and
cmpsl
mov
mov
or
test
xchg
or
mov
movsl
icebp
mov
orb
std
xchg
fsubrl
inc
jg
adc
test
push
sub
test
or
push
imul
stc
xchg
mov
lods
roll
loopne
pushf
jne
push
dec
das
stos
incl
setp
mov
fucomp
enter
arpl
cmpsb
shll
jne
jne
jmp
das
sub
dec
add
cli
xor
mov
outsb
addr16
int3
mov
mov
hlt
int
xchg
lods
frstor
insl
fcos
jno
ja
int3
subl
add
jp
adc
dec
movsl
sub
xor
dec
lea
push
sub
cld
daa
sbb
jmp
icebp
orl
lock
mov
inc
aaa
dec
mov
out
inc
cmp
xchg
dec
repz
sti
dec
mov
jg
xchg
cmp
and
data16
jecxz
pop
and
sbb
add
flds
je
fistpl
mov
popf
pop
cmp
in
insl
sub
mov
aam
add
imul
adc
cs
inc
or
push
sub
xor
sbb
fistpll
ja
add
out
mov
shr
dec
lret
push
cmp
lret
nop
push
pushf
pop
dec
sub
cmp
sbb
rorb
jo
adc
loope
sub
pop
mov
or
mov
test
cmp
fdivrp
push
inc
mov
jnp
les
clc
cld
cltd
push
sahf
loop
adc
scas
push
rol
inc
imul
arpl
ja
pop
jl
test
mov
dec
dec
push
aam
sbb
or
mov
jno
adc
push
xchg
ret
pop
or
jg
daa
push
test
or
inc
jp
inc
aam
stos
ljmp
cld
in
jge
xchg
xor
pop
lods
inc
mov
les
hlt
insb
je
aam
dec
add
jp
xor
pop
dec
inc
dec
pop
xor
push
lds
in
lea
jmp
lahf
stc
adc
add
xor
sbb
and
lcall
enter
mov
ljmp
mov
sub
not
and
icebp
aam
dec
sbb
fsubrs
test
out
enter
orl
xlat
clc
mov
daa
mov
les
mov
inc
inc
and
xchg
pop
sti
add
or
xchg
nop
cli
inc
sub
popf
mov
or
push
test
es
push
enter
cwtl
lret
stos
and
push
mov
dec
test
add
daa
cli
sub
xor
dec
nop
iret
fildl
pop
loopne
in
pop
fldl
mov
daa
cmp
jl
pop
outsl
lods
lret
or
icebp
dec
adc
mov
inc
sub
pop
cvttps2pi
cmp
inc
shll
sbb
xlat
mov
and
mov
out
jmp
hlt
or
test
leave
shlb
dec
jb
sub
and
lahf
pop
cmpb
or
sti
or
xor
out
pop
lds
ret
dec
pusha
push
arpl
imul
jns
dec
js
test
test
iret
jg
lds
insb
movsb
push
imul
adc
insl
pushf
fs
jno
or
pop
in
data16
popa
pop
xchg
iret
test
aam
ret
movb
dec
mov
mov
subl
lea
mov
add
xchg
or
adc
xchg
jne
cmp
aas
loop
dec
imul
inc
or
xor
jo
test
or
adcl
fidivs
imul
ss
jmp
jnp
adc
and
push
sub
in
add
into
mov
shrl
cmp
int
insb
mov
mov
lods
scas
data16
and
sbb
scas
test
aas
ja
cwtl
pop
test
in
jge
adc
cmp
dec
mov
cmpsl
gs
leave
mov
cmc
xchg
add
and
dec
repnz
mov
dec
das
int3
and
and
rcr
jo
dec
inc
std
movsb
cmpsb
movsl
sub
cmpsl
popa
out
repz
mov
xor
cmc
je
rcr
in
insl
adc
mov
push
pop
fwait
xchg
dec
cmp
testb
pop
add
andl
rcrl
xchg
jg
pop
jae
pop
xor
ret
lods
mov
call
cltd
xchg
loope
int3
xorl
mov
jge
push
mov
mov
rolb
lcall
mov
and
push
lret
scas
jns
test
sbb
fdivr
mov
stc
and
adc
test
pushf
push
loop
insb
inc
ficomps
add
or
stc
stos
out
enter
push
rcl
mov
sbb
add
pop
bound
xchg
adc
daa
fisttps
xor
push
aam
dec
adc
imul
add
cli
xchg
jne
in
add
or
lods
push
sbb
jmp
push
out
cmp
mov
pop
sidtl
das
add
in
adc
adc
repnz
cwtl
scas
mov
sub
sub
arpl
gs
push
add
movsb
scas
aam
outsl
and
xor
fdivrs
scas
ds
imul
cmpsl
cmp
popa
jge
mov
in
ret
das
mov
sbb
cmp
mov
negl
pop
mov
jbe
pop
out
cmp
std
fsts
xchg
pushf
imul
add
push
add
scas
jge
ja
inc
insb
repnz
out
jbe
or
sahf
sbb
aad
push
or
rcrb
imul
insb
and
popa
cltd
xor
int
mov
les
cmp
jmp
lahf
mov
mov
icebp
adc
pop
sub
adc
cmp
or
or
aaa
xor
dec
loope
or
dec
rol
dec
repnz
mov
mov
mov
test
pop
ljmp
sarl
ljmp
mov
add
fcomps
subb
jp
sti
cwtl
cli
mov
fisubrl
orl
or
mov
sbb
inc
dec
push
mov
jl
test
xor
adc
ret
jnp
adc
es
pop
xchg
mov
jle
enter
jmp
mov
push
sub
mov
pop
and
jle
inc
push
dec
mov
mov
fistps
sub
scas
orl
outsb
push
cli
push
fwait
dec
fwait
adc
xor
daa
xlat
inc
aam
int
xchg
inc
repnz
mov
je
repnz
push
dec
outsl
bound
push
sbb
test
or
cld
repnz
out
mov
push
in
or
aas
out
inc
push
insl
sub
ljmp
imull
sub
aad
popa
inc
or
push
scas
jmp
shll
in
inc
aaa
sbb
je
xchg
imul
movsl
jge
and
or
icebp
jle
xor
mov
les
pop
push
add
jmp
pop
aaa
dec
mov
mov
or
or
inc
mov
repz
add
xchg
pop
loope
jo
mov
xcrypt-cbc
cmpsl
xchg
in
ret
mov
push
ja
adc
sub
pop
inc
xchg
cmp
insl
and
jg
xchg
add
in
cld
pop
cmpsl
jno
adc
xlat
add
inc
or
xlat
xor
imul
cld
scas
cmp
push
xor
mov
shlb
mov
subb
mov
and
and
sbb
cwtl
add
sub
and
insb
xchg
pop
sar
sbb
inc
dec
cmpsl
movsl
xlat
in
sub
mov
repnz
fistpl
das
ja
xchg
sbb
mov
pop
and
jge
mov
or
mov
xchg
popf
int
adc
repnz
jno
and
adc
sub
in
pop
arpl
pop
sbbl
fimuls
int3
aas
jne
xchg
or
mov
icebp
mov
cmp
shl
xchg
cmpsb
push
lret
imul
push
sub
inc
ret
and
dec
jnp
sub
out
out
je
and
pop
push
into
insl
es
repnz
mov
and
cmp
mov
jecxz
loope
push
sub
mov
pusha
cmp
vmwrite
shll
in
jne
enter
stos
and
sub
sub
loopne
add
repz
mov
in
out
mov
and
mov
inc
dec
jno
je
jp
pop
pop
jae
jmp
into
jne
add
pop
out
dec
sbb
out
xchg
insb
mov
mov
push
cld
sbb
adc
shlb
adc
out
inc
shl
sub
mov
mov
adc
in
inc
ret
jecxz
push
loopne
mov
inc
push
dec
jmp
xor
add
lret
push
fucom
movsb
stos
xchg
sarb
push
cmpsl
sbb
xor
mov
push
push
movsb
sub
enter
mov
cmpb
mov
push
mov
push
mov
cwtl
dec
fisubs
popf
jg
test
filds
imul
and
lret
lods
shrb
fistpll
add
test
mov
repnz
outsl
sbb
and
loop
ljmp
mov
cmp
inc
loope
imul
es
xchg
add
inc
cs
or
jmp
adc
pop
xchg
push
pushf
and
and
sbb
jnp
adc
mov
pusha
jl
jecxz
sbb
leave
push
shlb
adc
dec
inc
js
sbb
xchg
mov
sub
fstp
mov
sti
inc
icebp
jmp
stos
rcll
mov
jno
fstpt
lret
add
sbb
mov
ret
sbb
push
lock
cmpsl
sbb
mov
loope
lcall
leave
jb
inc
scas
xchg
cmpsb
add
orl
add
add
lcall
mov
pop
inc
jg
pop
ret
and
shrl
jae
pop
imul
jns
adc
mov
push
bound
adc
jg
shrl
mov
movsb
ret
aam
inc
cmp
mov
xchg
xchg
or
lods
gs
testl
xchg
jmp
xchg
cwtl
fistpl
and
xlat
aad
pop
stc
xor
aam
pop
add
adc
movsbl
popl
out
xor
mov
jns,pt
in
das
test
push
sub
test
mov
or
xor
lcall
lahf
cmp
add
out
jno
jp
pop
jb
lret
add
mov
jecxz
lds
and
into
jge
dec
movsb
out
jle
lods
jnp
cmp
sub
popa
arpl
jo
lods
subb
imul
gs
pop
mov
jo
enter
sub
decb
out
popf
rcll
push
pop
pop
shl
xlat
jmp
jbe
out
mov
in
lcall
aas
sbb
sub
movsl
jl
js
mov
jnp
jge
cmp
lret
rolb
fnstcw
xchg
imul
inc
xlat
gs
mov
xchg
cmp
roll
and
jns
inc
push
inc
dec
imul
jmp
shll
std
bound
sub
pop
in
push
pop
mov
pop
out
movsb
or
jp
lret
cmp
cwtl
sbb
je
outsl
sub
push
jnp
xlat
mov
sbb
cld
or
adcb
sbb
mov
andb
mov
cmp
loop
imul
subl
orb
sti
dec
cmpsl
mov
in
ljmp
mov
mov
mov
je
jecxz
pop
gs
lock
xchg
fimuls
mov
shlb
cli
jo
adc
stos
pushf
cmp
xor
scas
or
mov
push
pushf
fwait
mov
mov
scas
push
nop
das
cmpsb
push
push
aaa
push
std
iret
inc
test
popf
mov
or
lret
popa
scas
out
mov
mov
pop
icebp
and
test
loopne
inc
ja
sbb
test
lods
cmp
and
scas
dec
nop
je
inc
fs
mov
push
mov
or
xchg
faddl
mov
test
xor
lods
int3
cmc
popaw
stos
in
or
inc
popf
inc
movsl
mov
mov
push
test
adcl
mov
cltd
prefetchwt1
outsb
pop
and
fstps
aaa
testl
mov
jmp
or
adc
sbbl
pop
mov
divl
mov
mov
xchg
into
inc
mov
jg
dec
mov
lcall
sarl
mov
inc
fstpl
jns
test
arpl
cmpsl
repnz
pushf
cmp
xor
int3
dec
pushf
jnp
sbb
mov
mov
or
imul
xor
dec
cmpsl
xchg
inc
fmuls
dec
sub
add
push
shr
jbe
pusha
add
sarb
push
fldz
cmp
cmpsb
ret
jbe
loope
cs
pop
mov
and
or
pop
jg
std
push
aam
adc
lcall
cmp
xor
push
lock
dec
sti
cmp
repz
and
jge
pushl
cmc
jge
mov
jns
adc
sub
jne
aaa
cwtl
xor
push
out
fcmovnbe
rorb
test
mov
xchg
add
aaa
mov
xchg
aas
iret
in
or
pop
loopne
outsb
es
xor
sbb
inc
fimull
movb
mov
mov
mov
jne
in
or
roll
adc
lods
les
push
sbb
imul
lea
add
popf
enter
stos
rcll
jo
jnp
fcompl
sbb
lcall
loopne
push
push
shll
push
hlt
roll
fmuls
ret
fcoml
cmp
inc
andb
inc
aad
andb
enter
and
xor
xchg
add
inc
and
pop
mov
sbb
hlt
push
lret
rol
scas
or
dec
ss
popf
adc
and
sahf
pop
in
addr16
pop
or
adc
es
jl
les
test
xchg
dec
outsb
push
lcall
test
sub
dec
dec
adc
out
add
mov
clc
out
clc
shrl
adc
inc
in
gs
pop
and
in
push
pusha
xor
sub
nop
push
push
mov
jae
movsb
mov
or
mov
loop
pusha
or
push
sbb
adc
and
lret
imul
test
jae
outsl
xchg
sub
ljmp
lret
add
mov
shlb
call
aaa
pop
cmc
cmp
stc
sbb
push
cmp
arpl
mov
sub
mov
shrl
mov
add
shlb
mov
push
mov
push
mov
xchg
add
inc
imul
daa
int3
mov
jl
xor
cmp
push
and
fcoml
incl
add
add
sub
jmp
outsl
cmpb
sbb
sub
test
push
shll
cmp
cmpsl
and
cmpsl
dec
ds
jge
dec
and
shlb
ljmp
jne
loopne
mov
mov
loope
testl
psubusb
xchg
lret
insl
je
jnp
ret
pop
call
mov
dec
outsl
cmp
ja
out
cmpb
jmp
int3
divl
call
movsb
mov
dec
pop
push
mov
pop
in
add
push
push
imul
movsb
in
fistps
mov
movsb
cmpsl
clc
xchg
aas
push
inc
jle
rcrl
cmp
scas
test
roll
mov
test
sub
mov
mov
outsl
lods
push
xchg
xchg
mov
sub
inc
cli
out
shr
or
aas
mov
pop
cmp
push
pushf
cltd
mov
sub
pusha
and
sub
lods
xor
dec
mov
pop
daa
mov
sub
xchg
xor
jecxz
lods
jg
addr16
jmp
xchg
cmpsb
rcl
mov
mov
dec
sti
lds
dec
jae
mov
aaa
inc
sbb
pop
push
push
add
movsb
daa
mov
push
std
call
lods
inc
repz
mov
add
add
xchg
jp
add
ret
or
pop
jbe
xchg
daa
clc
mov
xor
push
mov
pop
psubsw
mov
addl
imul
int
add
mov
lds
inc
mov
test
ds
rcr
mov
jecxz
mov
push
pop
test
and
flds
mov
movsb
pop
hlt
xor
test
jg
pushl
call
and
xchg
pop
stos
or
stos
or
sub
inc
fldcw
pop
pusha
inc
push
rcll
sub
test
clc
mov
sub
scas
in
out
je
pop
fldt
push
test
rcrl
push
mov
outsl
inc
rcr
inc
arpl
mov
popf
insl
lock
shl
mov
call
add
lahf
mov
and
mov
add
mov
ret
add
imulb
sub
rclb
aas
mov
das
insl
lods
add
lds
cmc
jbe
icebp
push
or
jge
mov
repnz
loope
dec
and
ja
push
mov
lahf
push
mov
add
sbb
aas
xchg
or
rolb
jmp
mov
adc
push
jne
pop
mov
cs
aaa
xchg
das
pop
leave
inc
mov
movsl
add
add
and
inc
out
negl
jae
imul
dec
inc
les
in
test
push
and
call
ret
xchg
insb
pusha
loope
imul
add
sbbl
into
mov
xor
cmc
jle
lea
data16
out
in
jmp
xor
cmpsl
loop
test
or
push
push
lds
insb
std
jnp
pop
jno
sti
cmpsb
aam
sbb
or
inc
mov
sbb
jle
frstor
push
xor
lret
rcl
shlb
jecxz
jno
cmpl
addr16
add
inc
notb
mov
repnz
pop
nop
push
xchg
pop
mov
stc
and
inc
mov
xchg
cmp
sbb
jl
jmp
ror
ret
out
aas
imul
mov
pop
mov
ljmp
mov
sub
cmp
mov
sub
int
adc
popa
jne
call
mov
popa
xor
adc
cmpsl
cmp
adc
lcall
int
insl
xlat
bound
lea
sarl
mov
pop
push
jae
lea
jmp
pop
jmp
inc
stc
mov
pop
imul
cmp
sbb
add
fwait
jg
mov
xchg
mov
popf
outsl
pop
jmp
jge
sbb
pop
mov
in
fs
push
shll
out
mov
lret
pop
pushf
les
in
fsubs
cmp
xor
std
mov
dec
clc
aas
pop
xor
rcl
clc
and
adc
jbe
imul
rcll
push
and
movsl
xchg
cmpsl
stc
insb
pop
fiadds
xchg
push
jb
pop
jne
dec
xorl
fmuls
xchg
movsl
cltd
jg
jnp
cmp
gs
gs
xchg
add
fisttpll
cmpl
or
xor
mov
dec
test
jg
push
int3
add
lods
pop
cltd
popa
mov
out
or
inc
outsb
loopne
out
pop
lahf
shll
adc
iret
push
or
and
in
pop
fxch
mov
call
mov
or
movsb
test
push
add
fisubs
mov
subl
jmp
add
sbb
add
lods
orl
enter
rcrb
mov
add
notb
push
stos
hlt
mov
hlt
xor
aad
insb
in
pop
dec
push
ja
inc
sub
lea
xor
adc
test
add
push
into
addr16
pushf
call
add
repnz
adc
shr
xlat
inc
push
pop
xor
inc
out
and
mov
lods
pushf
add
les
in
jo
push
jno
cmpsb
aas
mov
daa
pop
sbbl
mov
popa
add
jecxz
test
jecxz
push
adc
mov
scas
aaa
fidivs
inc
pop
lods
sti
hlt
push
lock
add
xchg
and
mov
divl
push
add
arpl
mov
mov
pop
push
mov
sbb
mov
bound
and
in
nop
out
mov
dec
sbb
cmp
in
adc
xor
pop
js
into
cltd
cmp
xchg
adc
aad
sub
repnz
das
mov
nop
and
or
jl
fnstsw
and
rcl
popa
inc
pushf
fstpl
add
inc
pop
sbb
cmp
lcall
cmp
add
and
jne
pusha
sub
mov
data16
call
ret
das
in
fildl
pushf
cwtl
call
stos
push
cmp
cltd
jb
cwtl
dec
lods
repnz
clc
sbb
mov
out
cwtl
imulb
lcall
mov
int3
and
push
lahf
push
cmc
lret
lcall
jle
inc
or
xor
xchg
jne
les
sub
lahf
pop
shrb
xor
jno
dec
adc
push
and
loope
fwait
sbbb
xchg
push
pop
sahf
or
mov
fs
add
sub
or
dec
lds
repnz
imul
std
cltd
xchg
int
hlt
addr16
test
adc
cmpsb
enter
or
sub
bound
xchg
mov
imul
mov
jp
icebp
std
pushf
mov
xchg
arpl
pushf
cmpl
orl
dec
or
popl
xor
adcl
mov
sti
push
shlb
movl
xor
in
icebp
mov
or
and
fistl
pusha
mov
inc
jp
aaa
pop
mov
inc
std
jno
in
xor
lods
mov
xlat
fsubl
fs
aas
mov
mov
je
sub
sbb
hlt
sub
dec
xchg
xchg
xchg
daa
and
lds
stos
lret
adc
and
ja
shl
mov
xchg
rcll
pop
lock
xchg
push
sub
pop
sub
std
je
push
jne
xlat
xchg
jmp
mov
popa
mov
mov
js
je
outsb
jbe
push
sahf
jo
and
xchg
xlat
jmp
mov
in
adcb
je
pusha
mov
adcb
shr
sti
mov
out
in
add
sub
mov
jecxz
addl
dec
or
in
jo
or
data16
cld
les
in
xchg
jmp
cs
push
adcl
stos
popf
push
es
push
mov
dec
sti
cmp
sub
jecxz
outsb
mov
or
adc
cmp
arpl
pop
xor
jo
out
or
or
fimuls
inc
sbb
mov
sbb
scas
inc
neg
int
test
push
cwtl
pop
outsl
pop
xor
mov
ds
push
aaa
adc
and
pop
das
adc
fs
arpl
xor
mov
lea
js
pop
pop
jg
jo
add
incb
ret
xor
icebp
addr16
cld
ljmp
push
loop
rorl
lods
add
cmp
xchg
clc
loopne
sbb
stc
rolb
pop
adc
fdivrp
pop
jecxz
xchg
lcall
test
and
pushf
out
adc
aas
or
lcall
adc
icebp
push
lock
and
push
jbe
cmovge
cld
lds
add
add
data16
lret
push
push
xor
into
mov
and
push
inc
sub
add
dec
xchg
jo
push
dec
jp
xchg
jecxz
inc
sub
aas
mov
dec
fstl
lret
roll
mov
push
mov
pop
and
add
add
popw
or
sar
cwtl
nop
lret
jg
mov
out
dec
loope
ja
in
lret
mov
inc
adc
mov
ljmp
shrl
insl
sbb
mov
dec
std
dec
idiv
jmp
addr16
sbb
clc
push
xor
jmp
push
or
lods
cmpsl
mov
and
sbb
jnp
inc
ret
test
loop
sub
mov
outsb
mov
cmc
mov
add
cltd
inc
mov
in
subl
fistpll
mov
and
rorb
push
or
adc
sbbb
repz
into
cmp
add
jge
sbbb
fs
mov
aad
stos
xor
xor
cmp
xor
sahf
test
popa
ljmp
xor
mov
jl
rcl
pop
and
mov
lock
and
xchg
mov
cmp
outsb
out
cmpsb
lods
aaa
lds
inc
pop
mov
scas
scas
je
sarb
sbb
shll
es
std
mov
sub
lods
sbbb
push
jle
mov
adc
push
adc
cmp
adc
cs
adc
cmpsl
cld
adc
imul
int3
add
xor
push
cmp
xchg
imull
nop
insl
sbbl
hlt
inc
clc
gs
enter
mov
ds
stos
clc
jmp
ror
cmp
ljmp
push
sub
jb
xchg
repnz
push
addr16
jmp
stos
and
mov
adc
stos
xor
pop
insl
bnd
pop
lods
xor
mov
jbe
jmp
rep
jb
fidivrs
or
enter
add
popf
mov
sbb
xchg
out
adc
mov
call
ret
call
cmp
and
daa
iret
jge
mov
aad
xor
xchg
decb
cltd
pushf
fsub
dec
arpl
andb
mov
decb
mov
mov
fcomps
cmpsb
in
js
iret
mov
mov
dec
pop
xchg
mov
xchg
fildl
fsubr
pop
mov
xchg
sti
sub
cmp
jl
pop
or
mov
stc
push
mov
mov
fs
in
out
nop
inc
jne
fcoml
jmp
aad
out
cmp
jl
call
pusha
cltd
fildll
lds
mov
add
lret
cmp
cmp
xor
xor
jae
add
push
in
xor
and
jp
cmpsb
incl
loop
mov
jecxz,pt
cmc
fsubs
clc
mov
jp
sub
mov
mov
ja
mov
dec
mov
mov
sub
ja
cs
jo
inc
jns
mov
call
cltd
scas
aad
inc
sbb
sbb
sti
push
adcl
out
jne
lods
mov
in
jl
scas
test
repnz
loop
sti
icebp
or
fs
test
loope
pop
jecxz
pop
jne
rol
fimull
in
inc
inc
mov
loopne
jp
pop
jo
ljmp
int
lea
jae
push
loopne
sub
sahf
test
inc
stc
push
cmp
jae
sub
add
dec
xchg
mov
pop
out
cmp
lret
stos
dec
out
lret
icebp
mov
sbb
ljmp
insb
jns
dec
insl
inc
leave
sub
jl
dec
addl
mov
xlat
dec
sbb
outsb
out
decl
lret
mov
clc
and
outsb
xor
repz
mov
daa
mov
sub
dec
out
push
mov
sbb
int
int3
gs
mov
jne
cmp
jle
xchg
gs
inc
cmpsb
jmp
push
out
leave
daa
call
mov
pop
jnp
adc
cmp
loope
inc
mov
push
xchg
add
mov
push
pop
inc
jns
filds
icebp
xchg
and
add
push
jne
mov
lret
cli
mov
push
insl
fwait
lret
scas
dec
xor
mov
aaa
int3
mov
outsl
mov
loope
out
pop
mov
fstp
outsl
pop
and
adc
and
cld
lcall
imul
add
lret
into
ja
mov
in
ja
out
js
mov
dec
je
aaa
adc
jne
cmp
mov
xchg
in
cmp
inc
ljmp
pusha
dec
gs
jne
cmp
repz
ret
hlt
movb
mov
out
push
cmp
dec
fdiv
aad
dec
outsb
hlt
out
sbb
leave
xchg
add
or
adc
xor
ja
shlb
sub
cli
pop
icebp
dec
test
faddp
cld
in
jmp
cltd
outsl
lahf
daa
cmp
sti
lcall
inc
sbb
div
lods
inc
xchg
push
jns
dec
mov
stos
sub
ret
in
xor
sbb
and
mov
test
adc
jb
test
js
inc
pop
test
xor
fimuls
jo
cmp
adc
aas
mov
into
pop
pop
xchg
inc
stos
mov
icebp
lcall
andl
ljmp
jle
test
mov
sub
mov
popa
xor
sub
sbb
cld
add
ds
cltd
pop
in
adc
mov
lods
loop
test
push
jg
ds
test
mov
mov
lds
andl
les
mulb
sbb
dec
mov
fs
in
dec
sub
cwtl
fisubs
cmp
mov
fisubrl
dec
repz
mov
push
or
rorl
insb
xchg
or
in
ret
roll
lcall
stos
in
sub
dec
push
xor
or
pop
pop
inc
jne
lock
cltd
lds
negl
xor
jp
add
cmpsb
fucomp
fsubs
das
dec
fcoml
mov
nop
sbb
jecxz
jnp
mov
jle
push
lea
pushf
loopne
cmovae
sbb
add
mov
mov
test
add
add
or
test
nop
xor
je
leave
xor
test
and
ljmp
dec
mov
cli
mov
outsb
fdivrl
lock
push
adc
sub
sbb
mov
js
xor
ret
dec
rcll
in
pop
pop
test
daa
bound
aaa
pop
mov
and
dec
nop
mov
mov
xor
or
scas
jmp
in
lods
jbe
in
mov
aam
and
dec
inc
pop
in
mov
lods
mov
sahf
fdivrs
repz
arpl
mov
aas
mov
jns
fsubrs
aas
jl
xchg
push
xchg
iret
clc
push
jae
mov
mov
xor
nop
mov
mov
mov
mov
pop
gs
and
aas
xor
sbb
lods
cmpsb
push
inc
xlat
jns
nop
ficoms
add
lea
adc
cld
adc
rcl
push
je
sbb
clc
pushf
es
push
xchg
decl
mov
or
mov
adc
jae
xchg
fbld
push
lea
push
or
jns
dec
xchg
and
mov
fnstsw
lahf
lret
sbb
mov
inc
jp
aas
jmp
fnstsw
call
jns
adcl
divl
jb
test
aaa
fnstenv
xor
pop
jg
icebp
sub
decl
sub
cmp
cmp
pusha
add
push
mov
mov
fldt
lahf
addr16
xchg
test
mulb
enter
push
out
das
push
ds
pushf
shll
jl
jl
mov
arpl
out
sbb
adc
lret
xor
sub
or
adc
jns
mov
and
add
orb
and
mov
jno
enter
iret
mov
mov
inc
cmp
xor
push
cmp
add
imull
shll
or
mov
sbb
ja
fdivrl
inc
jb
scas
push
adc
mov
loope
xchg
loope
adc
xor
rol
push
shlb
push
shrb
fstl
mov
sahf
mov
cmp
hlt
test
pop
loope
push
ret
mov
xlat
addr16
bound
jne
out
push
fistpll
cmp
mov
sti
inc
rcrb
ret
cmp
lock
loop
or
inc
jecxz
in
leave
imul
cmp
mov
loopne
les
in
mov
fcompp
in
fsubrs
sti
jmp
popa
inc
aam
xacquire
jnp
mov
std
jge
add
push
daa
jecxz
xchg
inc
test
sbb
divb
mov
push
add
les
sub
lods
sbbl
cmp
push
add
hlt
mov
cmp
xchg
pushf
mov
push
inc
xorl
and
mov
jne
pop
icebp
or
popa
adc
in
pop
and
dec
push
aad
add
fistps
add
in
push
jl
or
dec
iret
jno
or
mov
cltd
cli
cmp
aas
pop
add
sub
pop
sub
push
pop
stc
and
scas
push
les
mov
pop
popa
mov
adc
cltd
and
mov
call
jns
pop
cltd
pop
or
adc
mov
je
roll
mov
fldt
out
fs
int
aad
lods
mov
pop
jbe
repnz
stc
jns
int
rolb
jle
test
pop
imul
dec
xchg
cld
dec
xchg
jns
nop
shll
push
jg
daa
ja
mov
sbb
addb
aaa
lods
outsl
call
mov
or
pop
lcall
test
imul
into
subl
cmp
and
inc
pop
shlb
add
ret
cltd
sub
add
and
sub
out
test
sub
jecxz
aam
xor
jnp
pop
ror
add
add
cwtl
loope
data16
sti
fbld
add
dec
cltd
mov
mov
iret
push
pop
js
xchg
lcall
or
xchg
push
sbb
fdivr
pushl
jae
jp
xlat
xor
outsb
pop
inc
pop
or
pushf
insb
test
aas
or
out
mov
lds
subl
ljmp
frstor
and
mov
fdiv
xchg
repnz
sub
mov
jl
or
fwait
fwait
mov
mov
insb
lea
or
fbstp
mov
add
and
lea
sub
shlb
cmc
out
icebp
sti
push
mov
mov
pushf
vphadduwq
mov
pop
ret
xor
or
in
push
in
pushf
push
cs
popf
sub
rcrl
sub
inc
sbb
cld
rep
inc
dec
dec
dec
out
imul
mov
push
sbb
inc
loop
test
in
jbe
fisubrl
jb
sub
push
jbe
mov
sub
inc
adc
fwait
jns
and
add
sub
adc
mov
icebp
pop
sbb
mov
addr16
mov
bound
push
push
xor
or
jecxz
push
cli
rcl
add
fld
push
push
or
jno
sbb
mov
pop
sbb
clc
mov
out
add
add
sbb
cmp
or
fwait
cmp
mov
call
push
movsb
out
bound
mov
testb
insl
test
sbb
xchg
cld
sub
xchg
into
int
test
mov
pop
daa
data16
pop
popf
push
xchg
pusha
loope
push
clc
push
sahf
or
xchg
mov
sarl
mov
xchg
pop
outsb
repz
mov
outsb
jns
movsb
add
fimull
sub
mov
cld
enter
idiv
add
jge
mov
or
out
cmpsb
sub
sbb
lahf
rclb
sbb
mov
jb
outsb
mov
ljmp
fildll
add
call
jns
fdivs
pop
iret
lods
icebp
mov
mov
in
inc
arpl
push
imul
movsb
pop
jae
add
pop
xor
lret
lahf
outsb
mov
cmpsb
je
rorb
daa
push
push
jae
imul
xchg
dec
jno
lret
data16
inc
outsb
leave
adc
dec
mov
or
add
pushf
pop
jae
adcb
inc
mov
test
into
xor
mov
aam
or
push
jnp
int3
jo
xchg
add
pop
or
bound
cmp
push
and
testl
movsb
pop
or
pop
stos
jb
mov
xchg
pop
xor
arpl
adc
popa
sti
jge
xor
rcr
mull
mov
mov
and
xor
mov
insb
cmp
cmpsb
jae
pop
mov
jnp
sbb
add
sti
out
push
mov
insl
leave
pushf
incb
and
shlb
addr16
movsl
mov
pop
ret
rcrl
and
loope
mov
rorl
stc
push
stos
xor
fistl
movsb
cmpsb
clc
mov
lods
mov
mov
es
or
les
popf
lret
jmp
sbb
cwtl
repnz
and
or
in
add
insb
sbb
xor
int
sub
jb
pop
adc
das
pusha
add
mov
arpl
xor
cmc
lret
push
pop
imul
pop
push
dec
push
rorb
pop
in
movsb
jge
sbb
dec
mov
push
cmp
iret
lods
mov
gs
mov
movsl
outsl
movsl
loope
loop
push
std
pop
cmp
flds
pop
aas
mov
cli
test
cmpl
adcl
jnp
mov
adc
jo
sti
push
nop
scas
lret
pop
inc
movsl
xor
loopne
mov
cli
xor
loop
pop
jp
dec
aam
inc
es
push
push
and
or
jno
sub
add
je
xchg
xlat
cli
cmp
mov
lahf
vmread
or
push
in
repnz
mov
push
das
mov
cmc
xchg
jnp
lods
ret
push
jnp
mov
aad
push
repnz
cmpsb
mov
movsb
mov
out
sbb
imul
jno
cmpsb
pop
push
imul
inc
mov
mov
dec
xlat
push
adcl
mov
and
data16
fists
pop
mov
mov
jo
cmpsb
mov
mov
das
shll
push
mov
mov
repz
mov
test
cmp
call
outsl
mov
push
or
lods
and
xor
and
jno
test
mov
inc
rol
jnp
jmp
adc
pop
add
js
and
mov
mov
and
and
jns
sahf
jne
repnz
mov
sti
stos
sub
ja
and
push
or
jg
nop
movsb
lret
cs
inc
push
sbb
mov
hlt
sub
dec
and
insb
dec
push
dec
jnp
clc
es
test
lahf
jns
add
js
pushf
xchg
shr
ret
inc
aad
or
cwtl
into
popf
add
data16
and
dec
and
pop
dec
mov
xchg
in
jp
xor
arpl
sti
add
sbb
outsl
inc
pop
outsl
mov
cmp
adc
sbb
add
cmc
das
repnz
lds
sbb
outsl
inc
test
clc
je
es
mov
inc
adc
popa
bndstx
cmpsb
scas
push
jge
pushf
sub
dec
outsl
pop
xchg
leave
mov
iret
lea
leave
cmp
add
or
add
pop
mov
outsl
mov
je
xchg
cs
jecxz
mov
loop
cltd
test
arpl
es
jecxz
jl
pop
pop
mov
shll
sbb
add
xchg
pop
int
pop
movsb
popa
out
and
lods
add
push
xchg
cmp
mov
push
addr16
mov
sbbl
arpl
cmp
aas
mov
pushf
dec
js
outsb
cmp
mov
sbb
ljmp
cmp
inc
mov
jle
mov
push
daa
movl
and
jns
insl
lods
xor
test
xchg
daa
fptan
and
jb
lret
or
outsl
dec
xchg
mov
jb
pop
xor
xchg
aam
rcrl
loop
lds
xchg
pusha
jge
pop
mov
rorl
int
aad
int
outsb
pusha
out
or
jnp
ss
push
inc
in
push
scas
and
dec
adc
and
mov
fsub
cmp
and
inc
mov
cli
mov
mov
pop
cld
ret
push
hlt
in
cmpsl
sub
jle
call
jnp
mov
imul
push
or
sbb
cli
loopne
or
adc
pusha
mov
pop
mov
rcr
scas
cld
sbb
int3
stos
add
dec
jo
lock
mov
sub
push
cmp
fsubrs
daa
mov
enter
add
fsub
fwait
das
cmp
push
lret
cmp
jno
inc
inc
iret
xchg
aas
pushf
inc
fimuls
mov
pop
dec
rcrl
imull
inc
cs
jne
ljmp
je
mov
in
repnz
pusha
inc
insl
dec
sbb
and
jae
mov
ljmp
inc
jae
add
dec
enter
and
in
scas
int3
mov
sbb
shll
in
aad
imul
popa
into
add
call
inc
sbb
test
jp
add
push
cmc
fldl
adc
pushf
test
xchg
xchg
lods
aaa
stos
popf
nop
and
mov
cmpsb
sbb
fstpl
outsl
mov
and
jmp
xor
add
or
adc
rclb
mov
pop
mov
xlat
je
mov
adc
and
push
dec
jnp
inc
mov
aas
fstpl
sbb
lret
mov
in
push
mov
or
stos
sbbb
xchg
mov
imull
cmc
mov
sbb
dec
adc
punpcklbw
aas
add
imul
mov
mov
js
push
push
pusha
imul
lcall
cmp
pop
cmp
mov
rorl
sbbl
pusha
push
pop
and
mov
in
and
mov
push
jne
or
cmpsl
add
cmp
dec
xlat
test
cmp
call
mov
inc
rdpmc
stos
lods
les
dec
cmp
jecxz
cmc
mov
nop
dec
pop
cmp
mov
sti
jle
jnp
inc
jns
add
cmpsl
enter
lock
cmp
scas
xchg
sbb
in
cmpsl
bnd
bnd
fadds
add
notb
stc
jne
outsb
fstl
pop
shr
das
or
push
imul
mov
ss
mov
cli
adc
jo
xlat
subb
add
pmuludq
test
or
test
or
sbb
or
psrlq
sbb
dec
pop
inc
mov
pop
into
push
ret
cs
gs
xor
popa
mov
mov
push
dec
fwait
das
pop
in
push
xlat
fstl
pop
inc
pop
subl
add
testb
pop
dec
mov
loop
sbbb
ret
xchg
lods
inc
cmpsb
and
jg
jecxz
testb
pop
and
icebp
mov
movsb
int
in
bnd
int
out
xchg
xchg
int
dec
into
push
mov
inc
xchg
mov
xchg
lahf
sarb
jne
add
push
aaa
arpl
mov
xlat
scas
mov
push
clc
jl
nop
stc
ror
xchg
jo
pop
scas
mov
mov
pop
mov
dec
sarl
jl
pop
loopne
jl
jmp
hlt
xor
inc
xor
cmp
adc
lods
call
hlt
adc
push
inc
fcompl
cmp
daa
jge
test
ja
cltd
inc
jle
rolb
sahf
imul
mov
test
out
push
push
cmp
sub
fnstenv
and
dec
push
loopne
lret
dec
or
aaa
scas
shll
inc
jmp
push
test
xor
clc
rcll
sti
mov
hlt
sub
cmp
add
in
push
lock
adc
dec
insl
cmp
inc
sub
and
std
loopne
fld
int3
test
or
and
outsb
ljmp
cmp
inc
mov
or
xchg
test
gs
shl
pop
psubusb
pop
jecxz
aas
push
adc
push
xor
add
aad
xchg
and
cwtl
fiaddl
clc
aam
scas
leave
clc
mov
jns
push
not
or
dec
mov
lods
jnp
mov
mov
ds
fmuls
imul
push
xchg
pop
sub
aad
loop
hlt
icebp
pusha
adc
inc
shrl
les
push
je
cwtl
scas
jo
or
push
in
into
test
cmp
mov
mov
xchg
movsb
jl
xchg
ret
je
adc
xor
or
outsl
in
mov
test
cmp
mov
cmc
or
ljmp
cmp
pop
ret
dec
mov
addl
pushf
mov
outsl
lds
pop
push
call
out
aas
flds
or
pusha
sbb
cmp
mov
pop
rcrl
lret
sub
add
mov
push
adcl
sbb
sub
int
pop
sbb
add
imul
bound
stc
daa
sahf
push
xor
jbe
int3
jg
jb
lods
add
mov
fbld
icebp
xchg
push
lds
dec
loopne
dec
test
dec
dec
dec
cmp
test
ret
jmp
xchg
sbb
lea
push
pop
xlat
adc
mov
dec
fnstenv
mov
xchg
pop
sub
and
jl
cli
or
int
out
repz
pop
call
mov
sahf
inc
jo
xlat
lods
mov
movsl
stos
sbb
shl
lds
adc
xchg
inc
pop
sti
popf
popa
into
sub
jecxz
jo
repnz
push
mov
jnp
inc
mov
or
pop
inc
scas
inc
mov
inc
pop
sbb
fsubrs
dec
in
lcall
ja
adc
push
and
mov
popa
clc
mov
cmp
sub
and
pop
lret
sbb
clc
xchg
add
mov
idiv
mov
inc
fcmovnbe
out
pusha
mov
gs
decb
push
movl
mov
outsb
ret
adc
push
xchg
arpl
mov
rclb
adc
push
ret
std
int
psllw
mov
in
int
push
and
and
adc
popf
push
arpl
mov
ret
dec
pop
andb
lods
xchg
mov
and
inc
cmpsb
jmp
repz
arpl
shlb
pop
fdivl
dec
pop
out
in
es
in
or
or
sbb
sub
add
aas
outsl
rcrb
mov
mov
divl
mov
pop
pop
xlat
into
pop
ds
add
xor
out
and
test
cmp
push
mov
call
dec
insb
mov
push
addr16
addb
mov
stos
sbb
iret
xor
lea
adc
push
rcl
xor
inc
sbb
stos
mov
dec
fdivrl
inc
sbb
and
push
incb
ss
mov
xor
xchg
xchg
shrl
mov
push
andb
test
mov
or
movsb
roll
mov
aas
xchg
mov
xor
or
or
cmpsl
and
adc
jns
pop
pop
and
and
and
sub
fcoml
jnp
lea
cmp
addr16
test
imul
cmp
sbb
test
push
mov
pop
xlat
pop
stos
rcrb
test
dec
call
xchg
adc
add
xor
pop
pop
jbe
mov
popa
mov
xor
hlt
mov
pop
out
shll
in
add
dec
test
loop
lods
out
mov
mov
mov
stos
adc
shll
adc
mov
push
ror
cmp
nop
and
sub
xlat
mov
adc
pop
mov
pop
push
xor
insb
clc
dec
mov
xchg
out
sbb
or
out
cmc
adc
push
or
sbb
jge
xchg
dec
inc
or
aas
test
or
inc
rolb
sbb
out
insl
mov
and
mov
sub
outsl
adcb
or
and
cmp
sahf
pop
lret
dec
mov
stos
das
jae
push
and
mov
std
adc
dec
and
xchg
push
mov
dec
leave
push
xor
push
xor
adc
adc
xchg
lds
and
jmp
dec
std
mov
and
test
movsl
out
repnz
mov
mov
pop
out
ror
lcall
mov
cmp
push
aad
sub
lds
and
test
dec
subl
pop
jnp
outsb
pop
push
mov
inc
ret
loope
and
jl
mov
test
mov
addr16
cvtdq2ps
add
gs
loop
dec
rolb
ficompl
or
dec
icebp
cmc
cltd
push
jl
scas
fisubrl
cmp
sub
push
sbb
je
int
adc
inc
jmp
dec
xchg
mov
aaa
stos
loop
iret
push
inc
adc
andl
inc
repnz
inc
cmc
push
pop
addr16
in
mov
cli
jo
inc
mov
mov
ret
jge
sbb
into
aam
sbb
scas
out
outsl
outsl
gs
je
add
into
cld
push
cmc
fbld
jmp
gs
xor
inc
inc
andl
addl
mov
jle
sbb
ds
ljmp
sbb
repz
clc
ds
sbb
sbb
lahf
mull
jnp
icebp
test
loope
insl
and
rcr
fsubr
xorl
fisubrl
das
mov
stc
xchg
es
lea
lcall
mov
adc
in
div
imul
ja
sub
clc
cmp
sbb
lahf
stc
mov
xchg
pop
push
pop
xchg
idivl
and
testl
or
lock
mov
pop
cld
jl
adc
les
jne
jbe
inc
outsl
jne
push
icebp
jl
dec
push
mov
out
adc
xchg
lock
pop
mov
pop
push
sbb
xor
ficomps
repz
imul
addl
push
arpl
lcall
orb
pop
mov
icebp
xchg
out
fidivl
or
sahf
xor
cmp
xchg
bound
lods
daa
leave
jmp
sub
mul
subl
test
jl
enter
and
xchg
mov
cwtl
test
into
test
orb
arpl
rolb
dec
hlt
dec
in
ret
into
cmp
mov
in
nop
mov
bound
test
shll
test
xor
add
jg
movsb
pop
push
cmp
out
mov
shlb
int
add
lret
sub
pusha
mov
dec
dec
lds
push
xor
lea
leave
lcall
xorl
insb
popf
push
xchg
nop
outsl
mov
scas
jnp
out
in
inc
mov
in
push
xchg
mov
pop
xchg
inc
es
sub
clc
push
or
outsb
popa
sub
mov
sbb
jb
push
xchg
dec
and
ss
mov
packuswb
loop
cltd
adc
fcomps
out
sub
ss
sub
movsl
jno
xchg
bswap
cmpl
inc
imul
imul
mov
cmp
std
test
adc
cmp
push
push
fidivrl
test
jmp
out
sbb
sub
push
and
push
stos
icebp
fsubrl
xchg
inc
sahf
lret
aaa
leave
cld
push
add
andb
sar
pushl
aas
add
leave
imul
xor
idivl
cmp
jns
in
cmp
pop
test
adc
jg
sahf
xlat
cmp
push
lods
ja
test
faddl
sub
xchg
xchg
cmp
add
cmpsl
and
and
add
fwait
xlat
aad
clc
outsb
mov
sub
in
cmp
push
mov
into
imul
out
pop
iret
xor
fcmovb
ficoms
push
cltd
dec
xchg
pop
add
or
jo
xor
dec
or
lcall
les
sub
lahf
cmp
js
stos
jne
add
aaa
sbb
and
mov
fstps
pusha
xchg
pop
dec
push
xchg
add
mov
mov
leave
pop
sub
addr16
mov
cmp
sbb
jp
adc
cmc
clc
addr16
pop
aam
xchg
lahf
or
inc
mov
add
add
scas
gs
jg
adc
jp
subb
shl
xor
xchg
and
out
test
pop
mov
push
pop
inc
ret
xchg
push
in
mov
mov
xchg
mov
xor
mov
loop
popf
cmp
push
pop
insl
sbb
int
jae
mov
scas
int
into
xor
dec
add
sub
jo
lds
inc
jle
dec
pop
nop
push
gs
movsb
shl
sbb
jge
jno
mov
arpl
mov
pop
movsb
rolb
jge
clc
sbb
ljmp
mov
ret
in
repz
rcl
sbb
andb
dec
stos
in
mov
xchg
jo
mov
sub
shl
jo
popa
sbb
pop
fisubl
aas
jno
fdiv
out
jae
inc
add
xchg
mov
xchg
mov
in
int3
add
adc
xlat
fstl
rcrb
clc
cmp
or
dec
push
cmp
roll
jno
mov
das
sbb
mov
mov
adc
inc
test
dec
iret
mov
jge
fcomps
fstp
push
mov
frstor
sub
test
push
lcall
cmp
stos
pop
js
and
fs
cmp
cmc
shr
jne
dec
jo
in
jmp
cltd
mov
xor
shl
test
lods
sbbl
and
or
xlat
sub
push
outsb
add
dec
cs
fwait
into
push
sbb
shlb
gs
sub
ss
push
lcall
mov
add
cltd
push
dec
and
shll
dec
je
mov
mov
lcall
mov
frstor
push
add
mov
xor
lahf
stos
aas
addb
inc
xchg
gs
mov
jmp
sub
cld
inc
adc
inc
ds
push
bound
pop
push
fldt
movsb
in
lods
leave
and
insl
inc
jg
outsb
sbb
in
fstpt
ret
inc
clc
xor
lea
test
mov
out
sbb
jmp
popf
xor
or
add
adc
xor
in
xchg
jbe
pushl
sub
and
cmp
sti
and
dec
inc
test
push
mov
adcl
dec
or
sbb
repnz
or
ljmp
cltd
sub
and
out
stos
sbb
dec
jns
in
mov
mov
mov
mov
in
jmp
dec
and
jl
popa
mov
lods
pusha
in
lcall
in
rcr
sub
fidivrl
sbb
into
enter
lret
dec
and
xchg
addr16
dec
cmp
push
cmp
jg
lods
fcompl
movsb
sarb
fisttpl
hlt
nop
cmp
cmpsl
adc
fwait
ljmp
xor
ss
aad
cmp
fmuls
sub
sub
out
and
xchg
call
repz
jae
cmp
dec
aad
in
aas
lahf
pusha
jg
and
movsb
loopne
repz
lret
gs
cmp
ljmp
aas
xchg
jmp
lods
insb
hlt
in
insl
pop
and
and
jno
push
mov
jmp
test
mov
cmp
enter
inc
test
sub
loopne
testb
jbe
pop
mov
ja
icebp
mov
in
inc
cmp
jecxz
nop
inc
fcoms
int
stos
xchg
leave
xchg
lret
jge
fldl
add
inc
hlt
cmc
dec
fwait
fs
inc
adc
pop
dec
push
push
add
xor
mov
sarb
mov
jne
ja
push
subl
nop
sarb
js
sbb
idivb
nop
rcl
std
std
pop
pushl
add
outsb
push
not
sub
ficomps
addl
sbb
mov
and
sbb
ss
cmp
dec
or
xorb
int
mov
jno
outsl
lea
cli
cwtl
add
testl
lock
pop
int
lahf
adc
sbb
adc
adc
aas
int3
cs
xor
aad
mov
mov
inc
fwait
pop
jno
stos
cltd
push
je
outsl
aad
mov
mov
sub
lcall
cli
jge
loop
inc
cmp
les
adcl
push
dec
lahf
adc
xchg
lea
xchg
int
fwait
pop
jne
sub
mov
mov
push
push
or
sub
adc
mull
pop
dec
add
push
out
insb
push
jns
xchg
xchg
std
orb
xor
and
in
enter
mov
mov
rcrb
faddp
inc
jno
cmp
and
jl
lahf
cvtps2pd
imul
in
pop
sub
insl
repnz
jo
and
mov
dec
adc
popl
fisttpl
push
cli
call
cmp
pop
push
mov
outsl
hlt
jecxz
sahf
dec
lods
push
pop
sbb
lcall
out
fnstenv
sub
dec
rcrb
nop
stos
aas
test
pop
rcll
add
add
int3
mov
repz
xchg
jg
lcall
outsb
rcll
sub
xor
dec
cmp
jnp
jno
mov
mov
addr16
and
aam
dec
jb
mov
cmp
out
adc
pop
dec
cli
jns
inc
test
out
imul
xlat
test
mov
lahf
call
add
add
lret
stc
fwait
xor
push
xchg
sbb
cmp
outsl
mov
sub
imul
out
mov
ud0
and
insb
aas
mov
fsubrl
das
out
arpl
adc
out
mov
rol
lea
adc
mov
jge
jo
gs
pop
insl
dec
data16
cwtl
mov
and
lret
call
pop
adc
movsb
push
pop
sbb
mov
int
jecxz
loopne
push
fstpt
mov
sbb
mov
divl
inc
das
mov
jns
shlb
xchg
pop
xor
and
pop
mov
adc
xchg
ret
gs
mov
sti
dec
or
pushf
fldenv
fmull
imul
jbe
adc
lods
movsl
nop
inc
sbb
addb
add
out
fistpl
jmp
mov
adc
out
shlb
out
addr16
pop
je
fstl
xchg
add
ja
mov
test
mov
test
sbb
iret
shr
aad
push
adc
cmpsl
stos
jmp
mov
mov
jae
jge
add
nop
out
mov
xor
shrl
xchg
clc
fisubrs
push
sbb
addb
iret
repnz
loopne
out
xor
incb
mov
fcomip
and
cmp
xchg
fwait
push
ret
imul
fcmovnbe
out
fcompl
dec
imul
mov
mov
ret
or
into
je
es
hlt
div
sbb
fwait
shl
or
mov
mov
or
sbb
lock
fiaddl
pop
fwait
scas
xor
fiadds
push
jge
mov
mov
or
xchg
lods
push
jne
repnz
mov
or
cmp
int3
xorl
add
and
aas
xchg
mov
and
lahf
aam
insl
int
dec
call
xor
insl
std
daa
cmpsb
scas
adc
pop
sub
jg
push
insb
inc
pop
call
sub
fldenv
mov
mov
ret
xlat
mov
and
push
popa
shlb
mov
int
push
into
cmp
add
mov
ret
pop
in
push
jg
pop
pop
xchg
fmuls
lcall
fisubrl
or
dec
cli
cmp
cmp
mov
std
pushf
sub
sbb
insl
push
in
addr16
mov
sub
or
sbb
lcall
sahf
or
dec
or
mov
xchg
or
cmp
in
and
out
mov
jmp
ret
lods
movsl
mov
jo
hlt
mov
lret
enter
dec
push
adc
cmp
lahf
add
xchg
cmpsb
jo
add
cmp
scas
mov
add
rorb
pop
cmc
imul
lcall
xor
dec
and
ficoml
cli
push
lcall
dec
push
bound
jmp
mov
mov
xor
pop
xlat
test
pusha
ja
arpl
cltd
faddl
rcrb
inc
or
mov
mov
add
in
cmp
jl
xchg
sbb
jp
icebp
xchg
divb
and
repnz
pusha
daa
xchg
and
jns
mov
mov
std
push
jns
push
sub
loopne
dec
hlt
jle
or
insb
rcrb
lcall
test
stc
mov
es
cmp
scas
shl
push
jp
push
popf
lcall
std
aaa
shll
cld
jle
jl
lock
inc
mov
push
mov
stos
ret
sbb
gs
xlat
add
dec
cmp
or
popa
mov
push
sub
ja
aas
or
pushf
es
lret
dec
scas
xchg
inc
loopne
data16
decl
out
mov
sbb
insb
test
jo
insl
xchg
int3
movsb
inc
adc
cltd
sbb
cmp
sub
push
aam
inc
mov
popf
je
mov
imulb
jg
ja
and
adcb
sbb
sub
mov
xchg
push
outsb
adc
daa
mov
imul
test
scas
cmpsb
nop
xor
pop
fcompl
adc
test
sbb
mov
les
and
insl
ret
jno
fs
inc
sbb
mov
ret
outsb
and
cmp
aad
imul
xor
in
jo
push
insl
add
cld
fwait
jno
inc
imul
scas
add
es
dec
push
out
xchg
mov
push
addr16
cltd
test
push
ss
sbb
sahf
mov
mov
add
jg
mov
cmp
sbb
rol
mov
cmp
inc
xor
jmp
ljmp
xor
jge
lcall
cmpsl
push
sti
pop
das
cmc
int3
xchg
pop
fsubl
xchg
shlb
sub
jne
mov
jge
sub
sbb
mov
push
mov
stos
leave
and
lret
and
arpl
es
jecxz
in
and
filds
push
inc
sbb
pusha
xchg
test
cli
cmpsl
fiadds
insl
jb
ds
lahf
cmp
and
iret
orb
ret
push
mov
les
mov
cmpb
jnp
sbb
fsubrs
sbb
jl
fcomi
outsb
mov
mov
sbb
xchg
pop
jne
fmuls
and
enter
mov
pop
loopne
pushf
pusha
test
adc
jmp
pop
loope
ljmp
sbbb
loope
sub
shlb
cld
cltd
dec
icebp
iret
gs
inc
js
add
sbb
ja
jge
dec
sbb
stos
xor
push
push
pop
jmp
aas
jle
and
shlb
push
popf
xchg
cmc
ss
xchg
push
push
xor
adc
std
loope
jmp
cltd
add
imul
stos
dec
popf
icebp
movsl
add
repz
cmp
add
test
hlt
jo
repz
xchg
aad
sub
mov
pop
pushf
sub
jp
test
outsb
mulps
mov
cmp
inc
pmaxsw
jecxz
pop
sub
dec
adc
xor
cs
and
jl
pop
mov
xchg
adc
mov
test
pop
mov
pop
mov
cli
push
mov
sbb
sbb
add
cld
mov
sbb
nop
pushf
test
out
addb
jmp
pop
test
iret
rol
sub
adc
and
and
jno
cld
cwtl
pop
and
rcpps
push
lret
sbb
jne
les
int
sbb
adc
adc
rorb
push
or
xchg
and
xor
lds
push
flds
notb
cltd
js
xchg
out
sub
xchg
cmp
stos
mov
jg
bound
cmc
in
lcall
inc
sub
add
mov
ja
icebp
mov
lods
repnz
arpl
fstl
fidivs
lahf
lock
mov
sub
or
hlt
rcll
mov
rdmsr
ss
pop
xor
arpl
lea
negl
in
test
xor
push
ss
inc
cmpsb
sbb
ror
mov
inc
jp
or
out
loope
call
mov
xchg
push
mov
cmc
xchg
aas
lret
cmp
mov
mov
xchg
xchg
add
sub
ds
push
sub
jne
dec
sub
mov
mov
add
stos
xchg
notb
jns
pusha
in
loopw
mov
movsl
int3
xchg
add
jmp
ret
aad
fs
repnz
jl
mov
inc
stos
pop
mov
pop
cmpsb
dec
mov
test
int
rclb
and
nop
add
or
andl
lock
ret
cmp
int3
nop
adc
jns
movsb
xchg
xor
lahf
leave
lret
loopne
mov
and
inc
sub
mov
hlt
xchg
pop
mov
jns
jo
jbe
fsub
xor
pop
add
ficomps
stc
sbb
jae
push
mov
mov
cmc
insb
in
add
jae
out
ret
add
icebp
mov
clc
and
addr16
out
cmp
mov
lahf
ljmp
es
lcall
pop
jmp
scas
enter
add
mov
xchg
jne
jle
ret
and
mov
mov
test
lahf
jno
mov
xchg
hlt
outsl
xor
dec
add
pop
xlat
xor
outsl
negl
xlat
inc
out
xchg
arpl
enter
cmp
xor
pop
pusha
aam
adc
sahf
pop
loopne
notb
mov
pop
cmpsl
imul
movsl
loopne
add
loopne
imul
mov
leave
xchg
les
pop
cld
mov
and
int3
add
pop
out
jl
or
adc
bound
mov
in
fwait
cwtl
push
jns
inc
cmp
lods
ds
inc
cli
xor
or
mov
popa
mov
stos
inc
mov
imul
xlat
cmp
inc
scas
in
xchg
mov
xorl
lods
lret
xchg
jbe
sub
fs
loopne
inc
xchg
dec
add
mov
inc
inc
or
lahf
mov
mov
imul
mov
push
out
cmc
mov
inc
dec
ljmp
leave
sub
mov
lret
es
les
pop
pop
push
notb
or
or
inc
push
push
inc
je
inc
lcall
mov
push
test
ja
imul
jns
out
sbb
int
push
aad
je
stos
add
xor
sub
std
repz
adc
xor
not
sbb
icebp
sahf
mov
icebp
je
call
nop
or
insl
pop
mov
cmpsl
push
cld
imul
rcl
sub
xchg
push
sub
jp
sub
insl
clc
jmp
fmuls
or
sarl
in
jmp
ret
inc
into
push
adcb
call
cmpsl
mov
dec
xchg
gs
icebp
add
imul
xor
mov
in
sbb
inc
pop
xor
sub
push
popf
out
into
xor
push
cltd
sbb
in
out
enter
cld
or
aaa
insl
xor
xchg
xchg
sbb
iret
or
mov
in
push
call
out
test
add
mov
pusha
xor
mov
cmpsb
xchg
pop
ret
sub
js
xchg
ja
shlb
and
pop
fldl
push
lock
imul
jecxz
inc
shrb
shld
sbb
dec
sub
adc
lea
sub
dec
add
and
xor
sahf
dec
in
aad
add
rorl
in
inc
je
int3
adc
cmp
in
test
repnz
and
mov
lret
arpl
xor
or
out
jns
cmp
cli
inc
inc
sub
testl
pop
and
cs
xchg
cmpsl
sub
sbb
jae
xor
insl
sub
lock
in
and
aam
scas
cmp
xor
mov
inc
xchg
fldcw
divl
adc
in
fwait
dec
xor
insb
jne
and
inc
sbb
addb
inc
jae
lcall
xor
inc
bound
frstor
dec
movsb
push
sbb
imul
mov
sub
pop
mov
push
idivb
xor
sbb
dec
jb
bnd
incl
adc
in
aaa
out
jle
push
push
jmp
add
jmp
call
push
mov
push
sti
in
cwtl
pop
ficomps
jge
jae
sahf
mov
push
adc
xor
pop
mov
add
lods
pop
out
push
fdivs
out
dec
or
xchg
dec
and
stos
add
jne
add
mov
pop
jno
dec
in
push
adc
ret
or
das
out
add
cs
inc
cmp
fisubl
and
xchg
es
stos
xor
jnp
xchg
push
push
pop
sbb
jmp
mov
lcall
xchg
rorb
mov
cmc
sbb
inc
adc
inc
js
in
mov
sti
ss
clc
call
adc
jo
push
mov
sub
rol
xchg
cs
scas
scas
sbbl
cs
lds
in
divb
sub
hlt
jae
fildll
shlb
push
out
xchg
jl
je
mov
gs
push
jp
mov
jnp
lea
sub
add
test
push
shlb
jno
inc
mov
test
lret
jae
xchg
out
iret
mov
cli
insl
mov
adc
jl
inc
addr16
jnp
fdivrl
fadd
mov
pop
insl
jmp
das
dec
pushw
outsl
popf
in
ror
jno
xchg
mov
pxor
mov
jle
inc
rolb
push
lahf
mov
enter
mov
cs
gs
mov
push
mov
adc
push
iret
adc
outsb
xchg
and
xor
add
pop
adcb
into
rcll
sbb
dec
push
xchg
pushf
push
into
lods
inc
stc
popa
enter
in
jns
adc
ret
cltd
arpl
dec
xchg
push
and
inc
adc
dec
stos
test
sub
test
aaa
or
xchg
mov
cmp
push
lock
add
pusha
jecxz
jae
loope
and
sbb
cli
shrb
add
stos
das
push
shlb
jbe
ja
loop
mov
jmp
sbb
push
pop
cmpsl
add
sbbb
and
arpl
jns
int
insb
inc
jle
push
je
flds
fldt
cmp
jle
sbb
dec
stos
data16
xchg
inc
aam
push
jl
pushf
out
xor
xor
ljmp
cmp
mov
nop
push
in
cmpsb
scas
sbb
daa
mov
test
sub
je
call
xchg
mov
popf
sub
lret
jg
mov
fs
inc
mov
xor
or
mov
inc
mov
jl
in
xchg
xor
xchg
or
pop
fs
jo
cmpsb
or
repnz
xchg
jno
xchg
rol
aad
test
cld
inc
mov
or
pushf
fwait
xchg
call
int3
push
cmp
nop
inc
push
fcomps
test
daa
imul
or
fildll
fmuls
addr16
imul
lods
fs
xchg
cmpb
ljmp
ljmp
sbb
icebp
addl
sub
das
jecxz
dec
jmp
adcl
sub
xchg
imul
jmp
int
xchg
clc
test
xchg
dec
xchg
lahf
rorl
pusha
inc
xor
jl
or
fmul
pop
pusha
push
dec
pop
add
cmp
les
in
mov
or
inc
mov
pop
rolb
dec
sub
pop
pop
xchg
jbe
dec
ljmp
ja
loop
xlat
jns
int
iret
adc
pop
or
xchg
stos
and
pop
dec
xchg
lea
repz
movsl
sub
xchg
inc
es
icebp
imul
stos
ss
adc
ret
pop
lret
mov
fadd
enter
fisubrl
jle
pop
or
movsb
loopne
mov
push
outsl
repz
cmc
pop
add
fmul
pop
cs
gs
cmp
test
adc
lret
arpl
pusha
es
jbe
ret
imul
add
pop
clc
mov
popl
dec
sbb
insb
cmpsl
adc
arpl
ss
xchg
imul
out
and
imul
in
arpl
bound
mov
xchg
dec
stos
and
dec
pusha
push
inc
and
or
aas
out
mov
or
sub
and
dec
stc
mov
fwait
daa
mov
subb
shll
es
pop
push
popa
mov
jns
or
icebp
jbe
add
orb
cmpsb
xor
ljmp
xor
jge
pushl
jnp
mov
pop
inc
mov
faddp
pusha
adc
std
out
fisttpll
pop
mov
mov
out
jp
dec
aaa
jmp
outsb
mov
xchg
gs
ljmp
cmp
movsl
xor
ljmp
daa
cli
repnz
xor
lods
xlat
loop
jmp
dec
or
mov
inc
lds
adc
movsb
xchg
loope
jl
js
inc
ret
jmp
add
aas
push
pusha
mov
cli
in
add
adc
or
dec
lret
das
sarb
repz
bound
mov
loop
insb
cmpsb
insl
adc
in
loopne
adc
xchg
inc
sub
mov
adc
stc
dec
add
mov
ret
ret
push
dec
int
mov
pop
aas
scas
sbb
repnz
mov
pusha
stc
in
adc
jp
xor
ja
jbe
cmc
test
lods
dec
sbb
xchg
rolb
ret
call
mov
jge
mov
lock
outsl
imul
subl
xor
leave
cmc
repz
test
xor
shr
rolb
xor
xchg
xor
lahf
cmpb
cmpsl
xor
mov
jge
aam
fstpt
sub
dec
ljmp
xor
inc
nop
xchg
int3
sar
aam
in
cli
mov
add
mov
addr16
out
add
inc
dec
add
xchg
je
loope
ja
adc
cmp
xchg
mov
jl
pop
jg
or
das
pop
dec
mov
mov
ljmp
int
xor
inc
stc
lods
in
icebp
inc
shl
adc
jge
cltd
add
inc
into
mov
out
out
cmpl
jne
jecxz
jge
jecxz
add
xor
cmp
movsl
and
sar
fwait
sahf
hlt
int
inc
and
ud1
filds
mov
cmpsl
incb
mov
ds
cs
adc
in
adc
adc
ficomps
pusha
mov
sub
sbb
sti
jle
or
or
pop
stos
cmp
dec
pop
mov
arpl
loope
and
cmp
stos
lds
cmpsb
les
ja
fwait
test
push
idivb
fistpl
lds
xlat
cwtl
jmp
xor
stc
add
ret
jno
sbb
jmp
loope
insb
mov
outsb
adc
leave
fisubl
cwtl
sub
sbb
add
imul
int
ret
xchg
or
rcrl
mov
das
pop
inc
push
xchg
clc
push
stos
xchg
in
mov
push
cmp
push
mov
jmp
mov
mov
test
out
sbb
mov
pusha
jns
out
cmp
dec
lock
adc
xlat
fmuls
je
mov
int3
leave
popf
xor
subl
movsl
inc
xchg
push
pop
out
mov
sti
sbb
shrb
add
gs
push
in
iret
pop
xchg
sahf
cmp
movsl
and
jmp
xchg
xorl
sbb
les
jae
sub
aaa
popa
loop
iret
test
loop,pt
cmp
int
xchg
inc
scas
push
pandn
test
or
jecxz
fldcw
incb
jae
cli
sbb
jmp
pop
push
push
mov
add
das
ret
xchg
mov
test
inc
insb
jns
ss
ss
push
fbstp
fiaddl
and
lock
sub
cmp
dec
lock
pop
fs
or
cmp
jno
cmp
lods
in
push
adc
int
ljmp
pop
arpl
lock
mov
mov
cltd
inc
pusha
icebp
jbe
lods
pop
pop
leave
shlb
ror
xchg
mov
shrb
dec
loopne
jge
fxch
jnp
mov
outsb
fs
add
jbe
xor
ds
lahf
cltd
add
xor
add
add
loope
pop
sbb
mov
int3
shll
aas
and
call
pusha
or
sbb
xchg
notl
out
dec
jge
nop
or
les
adc
cmp
ret
inc
jg
mov
shl
push
and
push
ds
cmp
lds
pop
sbbl
clc
jmp
mov
adc
xchg
roll
loope
sub
push
cli
stos
inc
fsubrl
stos
data16
xchg
mov
jg
xchg
stc
or
ljmp
add
mov
or
scas
or
outsb
cld
jge
push
adc
mov
lea
mov
cmpsb
icebp
icebp
call
dec
test
mov
repnz
or
pop
aam
test
out
shll
dec
xor
rep
adc
xchg
lods
push
push
js
mov
sbb
test
sbb
mov
push
cs
ljmp
cmpl
mov
imul
inc
scas
je
mov
scas
mov
in
mov
in
adc
je
cmp
mov
in
jge
inc
mov
inc
dec
adc
adc
adc
sbb
cmpsl
pusha
lods
inc
or
add
adc
dec
mov
inc
scas
daa
jbe
pushf
fcmovb
jg
loop
mov
and
inc
mov
pop
sbb
fcmovnbe
cmp
je
sub
pop
repnz
int
jle
cmp
dec
push
and
push
dec
mov
leave
jbe
jo
cmpsl
jns
into
fstl
dec
sub
xlat
arpl
push
stos
adc
sbb
jp
xor
and
mov
cld
lcall
pop
mov
mov
push
outsl
cli
lock
bound
ds
cmp
and
lds
sbb
ret
fstp
sahf
dec
cld
inc
and
sub
sbb
cli
mov
mov
add
frstor
pushf
in
add
jl
and
ret
jb
push
mov
popf
xchg
xor
sub
pop
mov
mov
js
push
in
inc
ja
clc
cmp
and
fimuls
out
jmp
pop
and
jl
ret
jmp
lahf
stos
sub
cltd
cmpsb
pop
add
jl
stos
cli
jae
sub
scas
mov
out
aas
push
pop
decb
es
data16
bound
js
xor
in
leave
int
xchg
cli
or
add
cmp
sahf
test
fwait
icebp
add
mov
popa
icebp
lahf
je
cs
std
lea
test
shl
push
jne
jae
stc
sub
push
test
popf
movsb
or
mov
cmc
dec
loope
cmpsl
insl
cmp
loopne
xchg
xchg
arpl
sub
jl
jecxz
cmp
mov
cltd
and
pop
mov
dec
cli
daa
xor
out
fwait
adc
or
sub
clc
clc
dec
adc
mov
test
sub
adc
imull
int3
xchg
xchg
dec
sahf
fsubr
jl
scas
stc
push
shrl
faddl
popa
mov
push
shll
icebp
sub
and
lea
cmp
call
inc
imul
xor
xor
js
addr16
mov
jg
inc
mov
enter
adc
mov
rcrb
sub
or
sar
mov
mov
and
int3
push
test
mov
lock
jb
outsl
dec
outsl
lock
aaa
jno
jae
xchg
jnp
pop
add
jge
ret
push
sahf
out
xor
dec
jbe
push
mov
test
popf
ret
sbb
test
dec
xor
xchg
outsb
ret
xor
loopne
and
cmc
repnz
xor
call
cmp
inc
xchg
call
leave
jns
or
mov
mov
and
mov
fdivl
js
jo
cmpsl
pop
ds
push
out
pop
out
mov
sub
lods
ret
jb
sub
inc
sbb
sbb
out
jecxz
jg
inc
sub
fimull
xor
push
std
mov
xor
pushf
insb
daa
adc
inc
mov
jns
out
popa
jns
push
cld
repnz
xor
cmp
insl
iret
mov
jg
insb
sahf
inc
add
jge
scas
mov
cwtl
jl
mov
lret
mov
add
stos
outsl
jae
pop
sbb
mov
mov
ret
fldcw
sahf
mov
inc
je
inc
pop
add
jl
or
imul
daa
mov
outsl
ficoml
stos
dec
in
fbstp
sbb
lods
and
push
sbb
xchg
sub
scas
lods
aad
inc
adc
test
xor
xor
outsb
test
pop
into
pop
push
stc
xchg
sbb
pop
xchg
mov
add
les
hlt
repnz
ret
pop
jp
jecxz
daa
dec
jecxz
xchg
mov
push
jge
push
in
das
gs
sub
and
out
sti
dec
push
stos
leave
mov
movsb
mov
stos
js
adc
lods
in
mov
jns
inc
out
aad
jle
popa
xchg
mov
adc
ja
das
mov
rcrl
adc
bnd
decb
mov
xor
and
fadds
push
lock
push
xchg
adc
mov
push
loop
add
cmpsl
rolb
or
fimuls
divl
pop
pop
ja
sbb
mov
enter
icebp
in
mov
inc
mov
jno
xorb
jns
js
mov
mov
in
addr16
mov
jne
pushf
push
es
loope
dec
xor
inc
insl
mov
popf
xor
pop
mov
jmp
inc
insl
into
xchg
fadds
sbb
jle
dec
ja
sbb
std
out
fwait
push
call
sbb
in
fs
mov
arpl
inc
push
pop
cmp
stos
outsl
fcmovbe
push
lcall
dec
pop
inc
dec
xor
stc
push
jne
cmpsl
mov
clc
sahf
pop
pushf
sarl
and
push
hlt
push
push
hlt
loop
repz
fidivl
dec
aam
repz
int
dec
addr16
mov
insb
out
test
arpl
inc
stos
pop
data16
jae
shrb
jmp
outsl
xchg
jne
enter
cltd
push
pushf
mov
int3
push
lret
push
ret
repz
mov
push
xor
push
and
pop
push
push
mov
sti
lock
std
mov
xor
int3
mov
dec
mov
int3
out
sbb
jne
push
insl
aam
loope
cmpl
xor
sub
inc
push
jecxz
sub
dec
dec
inc
cmp
inc
jecxz
adc
xchg
movsb
mov
dec
sub
mov
lods
cli
sbb
add
xchg
mov
repnz
rcll
incl
int
dec
insl
ds
bound
subl
xchg
aam
xor
mov
inc
mov
scas
sub
in
adc
sbb
in
aad
fstps
cltd
pop
jno
scas
jns
sbb
stos
cmpsl
push
xchg
outsb
xor
lea
sub
sub
inc
arpl
test
sti
les
icebp
out
in
and
sub
mov
inc
mov
pop
pop
inc
add
test
dec
ds
lcall
and
jne
popf
dec
inc
fsubl
xor
inc
loopne
lret
addr16
repz
and
jle
adc
mov
pop
arpl
in
dec
lahf
andl
int3
push
int
mov
push
mov
xorl
ss
cmc
stos
les
and
push
and
mov
sti
ret
sbb
lcall
xor
popf
rclb
mov
and
adcl
adc
push
int
sti
add
into
mov
mov
pop
mov
dec
adc
adc
call
mov
xchg
cmove
movsb
shr
fstpt
xor
dec
xor
xor
pop
jbe
xchg
in
ror
mov
push
push
hlt
das
mov
fwait
cmp
inc
xchg
stos
xchg
mov
jg
mov
pop
inc
xor
and
repnz
jo
inc
stos
je
aam
es
jbe
dec
gs
dec
pop
sub
scas
in
pop
enter
sub
in
shl
push
fldt
bound
popa
push
push
aas
ret
nop
sbb
sarl
jg
sub
mov
ljmp
fmul
mov
push
enter
js
repnz
jmp
push
or
sub
inc
dec
pop
cmp
stos
hlt
sbb
fwait
push
stos
mov
rol
sarl
das
mov
add
dec
int3
xlat
xor
aam
pop
adcb
test
in
stos
loope
stc
outsb
leave
cmp
inc
lcall
scas
adc
add
stos
inc
fidivrs
test
pusha
push
mov
mov
cmp
pushf
adc
mov
mov
adc
fstpl
rcl
mov
outsb
adc
hlt
repnz
xchg
bound
cwtl
jno
test
in
cltd
and
pop
movsl
sahf
push
pop
or
sahf
sub
ret
and
out
sbb
rcll
fistpll
mov
loop
mov
cmp
mul
sbb
imul
mov
or
rclb
shll
addl
mov
les
or
jnp
push
adc
mov
es
and
lock
or
add
or
jno
jae
mov
outsb
cmpsl
cmpsl
int3
mov
xchg
loopne
mov
cld
cmp
mov
dec
mov
sahf
shlb
shl
sub
daa
test
in
and
out
aad
or
clc
cmp
add
pop
mov
lcall
sbb
negl
rcll
push
pushf
imul
cltd
mov
movsl
xchg
int
xchg
dec
cmpsb
inc
add
iret
jns
add
and
daa
arpl
sub
in
xor
repnz
inc
jno
testl
mov
xor
outsl
insb
js
add
or
ds
ja
cmpsl
das
movsl
inc
jbe
scas
sub
addr16
lret
push
cmp
adc
or
xor
xchg
stc
mov
sub
into
faddp
lods
or
add
mov
and
scas
data16
inc
int
mov
subl
jmp
xlat
jmp
adc
dec
or
int
xchg
cmp
push
js
aaa
lods
adc
push
nop
pop
pusha
loopne
negl
jo
add
xor
int
mov
dec
sbb
xchg
mov
jae
xchg
cwtl
aas
test
arpl
push
mov
cmp
in
daa
out
out
mov
loopne
mov
or
clc
add
adc
sub
mov
mov
lret
sbb
cmpsl
xchg
inc
mov
adcl
sbb
movl
repnz
jnp
int
pop
jp
std
sti
jecxz
jle
mov
sbb
pushf
cmp
push
mov
dec
fdivs
pop
fcmovb
sti
scas
lods
add
xor
jge
jl
icebp
popf
mov
sub
popa
ds
mov
mov
push
pop
icebp
or
jmp
sbb
dec
or
scas
dec
movsl
adc
fdivrl
dec
mov
rcl
push
loop
inc
popf
cmpsl
sbb
xchg
and
pmuludq
mov
and
jbe
cli
xchg
loopne
les
mov
clc
jns
jb
lds
leave
sbb
sbb
and
dec
push
mov
aaa
or
test
das
movsl
pop
sub
xorl
arpl
sbb
push
insb
pop
and
mov
mov
js
inc
xchg
repz
outsl
mov
outsl
add
adc
jnp
aaa
movsb
xchg
in
mov
loop
mov
in
xor
mov
pop
adcl
xchg
jns
shrw
pop
je
push
in
add
bound
mul
addr16
jmp
adc
std
pop
or
adc
sti
adc
ss
lret
pop
jmp
dec
dec
sub
jo
and
and
std
push
push
xor
shll
jle
jle
arpl
push
jns
lods
sbb
movsb
into
ja
fadd
pop
decb
mov
fs
addr16
movsb
das
test
stos
jne
outsb
call
test
rorb
fadds
iret
repnz
mov
dec
int3
fincstp
ds
mov
pop
mov
aaa
fs
pop
aas
jae
mov
pushf
inc
xor
rcrb
push
dec
stos
aam
push
pop
lahf
inc
xor
cmp
lods
pop
add
fildll
jmp
cwtl
fwait
imul
dec
les
sbb
push
sbb
mov
mov
sbb
sub
xchg
rolb
and
push
xchg
scas
jle
push
xor
and
jns
inc
push
xchg
adc
stc
xor
jle
or
ds
and
mov
xor
cli
movsb
mov
scas
dec
push
cmp
push
mov
xchg
adc
jg
mov
sub
or
sahf
sub
dec
cli
pop
test
stos
dec
fsubr
jge
fwait
dec
jbe
arpl
mov
fidivs
out
add
sub
jmp
outsb
dec
add
dec
mov
xor
insl
mov
js
cltd
outsb
outsb
loope
add
addr16
xchg
inc
ret
roll
cmp
test
ret
mov
push
sub
sbb
movb
test
leave
push
adc
xchg
add
mov
xor
sub
mov
sub
push
dec
mov
incb
pop
add
mov
das
jmp
imul
call
dec
test
jecxz
dec
jns
bound
xor
mov
call
xchg
xor
xor
mov
fs
dec
sbb
sarb
pop
add
xchg
and
aam
xchg
into
pop
jge
sbb
pop
or
jle
int
mov
aad
out
adc
lret
movsl
out
mov
sbb
pop
aad
out
lods
out
xlat
popa
sbb
stos
fldl
and
cmc
dec
mov
inc
cmp
pop
int
lret
adc
rcrb
xchg
and
loope
loop
mov
dec
push
mov
mov
add
mov
sub
cli
jge
arpl
cmpsl
pop
dec
or
jecxz
aaa
movsl
add
testl
sbb
mov
rclb
or
jp
loopne
stos
pop
fdivr
call
sbb
push
in
or
popf
sarl
aaa
aaa
iret
mov
push
dec
cmp
in
pop
jne
popa
shl
ficomps
jp
xchg
loop
popf
xchg
cli
jne
inc
jbe
cmp
cmp
xor
xor
jmp
fists
aas
fsts
iret
push
call
test
or
arpl
xor
daa
shlb
test
xor
stos
or
icebp
mov
bound
xchg
imul
sti
or
inc
jno
jmp
or
jns
push
xlat
lret
incb
jmp
cmpsl
test
std
aam
mov
scas
xor
ja
mov
andb
sar
push
out
js
pop
subb
mov
cmp
push
mov
sub
mov
imulb
stos
vcvttsd2si
jno
int
push
bound
out
push
std
popa
in
loope
fwait
out
push
lret
mov
ds
es
and
jne
and
and
pop
mov
sbb
lret
das
sub
pusha
add
or
add
dec
adc
xlat
push
mov
mov
imul
lods
pop
out
xchg
fwait
into
push
mov
pop
push
xchg
lahf
jmp
mov
mov
sbb
je
loopne
push
inc
ret
xor
outsl
dec
mov
adc
adc
cmp
into
inc
out
add
enter
sub
push
cli
jnp
xor
fdivrl
inc
xchg
lahf
pop
pushf
mov
shlb
xchg
mov
dec
sub
jne
xchg
fidivrs
fcmovnb
out
push
repnz
dec
jae
orl
jge
daa
outsb
stc
cld
lds
push
int
mov
std
cmp
push
in
inc
dec
jnp
aad
or
pop
jmp
clc
mov
xor
and
out
out
out
jl
xor
sahf
add
xchg
mov
or
jg
pop
pop
xor
cmp
ror
testb
subl
dec
adc
mov
loop
pop
cmp
scas
cld
jg
cmpsl
mov
in
fisttpl
inc
mov
negb
xchg
aad
jne
xor
lret
shr
enter
xor
jne
mov
js
pop
pop
jne
add
mov
fwait
xor
xchg
into
pop
lea
shr
xor
in
or
insl
aas
add
pop
stos
hlt
and
das
jo
pop
leave
lea
stos
xchg
insb
sarl
iret
mov
sbb
xchg
inc
into
dec
add
or
fisttps
iret
repz
jle
testl
aas
clc
jbe,pt
sbb
mov
mov
jmp
cmp
mov
out
xor
call
mov
lea
jmp
jo
incb
jno
push
pop
es
push
sub
push
adc
or
ljmp
sub
xchg
inc
pop
pop
mov
mov
pop
or
mov
mov
fisubrl
xor
xchg
mov
cmp
sbb
or
xchg
gs
or
push
or
xor
sahf
push
ss
ret
xor
pop
cmp
and
mov
in
sub
and
xor
adc
push
mov
sub
hlt
das
gs
aas
cmc
lods
jp
push
jg
cmp
sbb
ret
mov
cs
xchg
jno
insl
sbb
or
cmp
int
mov
rorb
insl
push
adc
lahf
adc
pop
jmp
stos
in
daa
adcl
lahf
xor
inc
ljmp
cmpsb
sub
and
fwait
push
add
lahf
or
and
std
loop
inc
pop
pop
inc
cli
mov
mov
repz
loope
add
push
jae,pt
shr
pop
pop
dec
sbbl
lea
xchg
in
mov
mov
push
xchg
and
sbb
pop
mov
cmp
xchg
adc
cmp
push
and
sbb
mov
xor
cmp
popa
ss
mov
add
test
jno
push
cltd
fs
inc
mov
stc
sbb
out
jmp
mov
shrb
les
add
pusha
mov
rolb
cmp
daa
and
ds
mov
jns
gs
je
or
fs
push
shl
frstor
jle
sti
jmp
and
cltd
xchg
mov
aas
lea
test
cmp
xchg
sub
ss
add
cmp
int
adc
mov
aam
jl
dec
pop
xchg
fwait
xchg
add
mov
dec
add
aas
mov
cmc
push
sub
mov
pop
xor
imul
push
lock
rcr
dec
and
loop
push
xor
pop
lcall
jo
test
lds
aas
sar
push
add
mov
icebp
mov
mov
push
fucomp
cmp
dec
xor
mov
repnz
adc
outsl
and
or
adc
aas
jge
and
push
cmp
jae
mov
aaa
mov
pusha
std
add
pusha
js
mov
mov
cmp
repz
jnp
out
mov
aam
xor
push
inc
pop
es
adc
add
pop
sbb
js
mov
mov
cs
mov
push
les
fdivrl
ret
lods
xor
mov
stc
mov
movl
insb
cmp
scas
or
ja
add
stos
mov
scas
xor
rcrl
xchg
test
insl
pop
mov
lret
sub
test
mov
test
mov
mov
idivl
scas
dec
pop
inc
push
ficoml
cmp
xor
pop
jae
outsl
pop
jg
imul
inc
jg
test
and
xchg
popf
adc
pop
and
adc
xchg
std
mov
adc
das
in
fstl
mov
jmp
jmp
dec
outsl
in
imul
sti
test
inc
out
stos
aad
cmpb
lods
xchg
jo
pop
std
rcr
lock
push
pop
sarb
repnz
lock
cltd
jne
and
add
fwait
sbbb
push
cmp
mov
fisubrs
sbb
push
stc
add
add
cmp
adc
fsubs
ret
idiv
fdivrl
imul
and
lock
mov
stos
and
aad
push
jmp
xchg
cmp
sub
dec
fdivl
int3
mov
adcl
shl
dec
stos
sub
lret
int3
stc
add
add
or
xor
aam
pop
adc
mov
arpl
in
stc
les
arpl
xor
fnstcw
data16
add
mov
gs
push
gs
bound
add
ds
xor
lods
xchg
jns
sbb
sbb
stos
pop
popa
sarb
jnp
adc
xchg
imul
add
jnp
mov
inc
ret
outsb
lret
lahf
gs
sbb
lret
dec
push
jmp
jp
jnp,pt
lcall
cmp
je
jp
mov
test
dec
mov
imul
in
cwtl
push
js
aas
sub
cs
enter
jnp
xor
cmpsb
push
inc
inc
jle
inc
cmp
xchg
insb
fmul
out
and
adc
xchg
stos
xor
xchg
scas
cmp
sbb
push
je
pop
fadd
jns
jno
sub
push
ret
ja
fbld
nop
aaa
hlt
sar
ljmp
or
mov
xchg
notb
sbb
pop
mov
out
je
jo
sbb
enter
mov
xchg
and
in
icebp
xlat
push
dec
icebp
sub
lea
leave
cltd
loop
xor
addr16
ret
ret
fisubrs
inc
lahf
ss
dec
adc
cmp
mov
mov
pop
pop
adc
and
jnp
xor
dec
pop
cmp
outsl
ja
mov
faddp
mov
insl
xchg
ja
roll
mov
and
ljmp
dec
push
dec
and
xchg
or
insb
mov
mov
mov
or
jno
mov
imul
dec
js
les
pop
jg
push
outsb
cs
push
and
gs
shll
adc
mov
inc
pop
shlb
adc
xchg
xchg
mov
inc
cmc
idivb
add
push
inc
cltd
dec
inc
cld
out
mov
mov
inc
sub
and
xchg
cmp
mov
jge
cmp
lret
sti
mov
dec
ss
sub
or
sub
insl
insb
testl
or
pop
sbbl
add
cmp
test
lcall
jnp
push
loop
bound
mov
add
rcll
enter
stc
addr16
adc
push
stos
mov
fldcw
arpl
ljmp
leave
xor
outsb
leave
and
lock
or
cmp
push
cmp
xor
and
shr
or
pop
arpl
jns
cmp
add
mov
test
xor
jle
xchg
fwait
sub
pop
cwtl
iret
adc
test
and
add
imul
adc
das
dec
daa
loope
repz
push
sub
jns,pn
sub
lock
push
xor
dec
fs
aam
dec
adc
aaa
add
ja
leave
push
outsl
mov
ret
sbb
cld
jmp
rcrb
jno
int3
ret
dec
ret
out
icebp
icebp
ret
mov
fisttps
inc
xchg
jo
mov
aam
repz
loope
mov
xor
jne
push
stc
xchg
pusha
loopne
insl
inc
scas
call
outsb
dec
out
push
sub
mov
mov
push
mov
sub
stc
cmp
popa
sub
and
cltd
dec
and
lahf
inc
orb
sarb
daa
xor
xchg
fs
jecxz
sbb
pop
aaa
inc
or
mov
sub
lcall
movsl
push
push
pop
out
inc
cmc
leave
cmovne
scas
push
jmp
adc
mov
cld
push
repz
nop
inc
movsb
and
outsl
jp
add
xchg
popw
inc
pop
sbbl
add
push
xchg
or
out
cmp
into
loope
test
lret
mov
das
inc
add
mov
inc
loopne
pop
adc
fadds
stos
loopne
pushf
imul
outsl
aam
or
loope
mov
mov
fistpll
jno
cmc
fldl
jmp
and
repz
cmp
rcll
mov
xor
cmc
sar
jne
call
jbe
bound
sbb
push
loopne
pop
pop
lock
jl
rolb
xchg
pop
inc
packssdw
push
sbb
popf
outsl
inc
cmp
ficomps
ds
add
imul
jns
into
lsl
adc
loope
jle
push
cmpsb
mov
rcr
scas
push
fiaddl
stos
push
enter
inc
adc
imul
cmp
in
addr16
sbb
mov
sub
insl
stos
mov
push
sbb
or
pop
adc
aas
ds
dec
adc
aad
out
std
dec
aad
mov
movl
mov
sub
xor
scas
mov
into
repz
daa
mov
pushf
mov
sub
sub
add
outsb
adc
aad
push
mov
pop
mov
lods
enter
sbb
ficomps
lock
pop
add
dec
pop
movsb
sub
dec
test
push
psraw
or
outsl
cmpb
test
sbb
ficompl
ret
repz
ret
nop
insb
roll
add
sbb
test
testb
mov
mov
push
sbb
mov
std
movb
mov
xor
cmp
aad
test
dec
jecxz
ficoml
into
cs
xchg
add
dec
scas
loopne
cs
pop
enter
mov
arpl
lahf
adc
cmc
mov
std
sub
pushf
aas
in
jno
into
or
sub
mov
lds
mov
outsl
ja
add
xor
lahf
pop
out
mov
or
out
out
jge
scas
out
icebp
jae
mov
sarl
andb
out
pop
mov
icebp
pop
lahf
dec
iret
mov
fdivl
in
jae
fstp
jle
pop
sbbb
dec
adc
jb
add
pop
sarl
xchg
les
mov
adc
dec
sti
mov
test
enter
stc
clc
stc
xchg
fldt
xor
mov
or
btr
or
mov
add
xchg
fldt
mov
pop
loope
jge
test
popa
addr16
adc
xor
inc
mov
xor
jmp
fsubr
leave
mov
cwtl
loope
mov
inc
jnp
xor
int3
iret
imul
dec
jecxz
int3
or
ret
xchg
mov
mov
push
call
inc
aam
fdivrl
jb
mov
mov
mov
sbb
push
stos
repz
nop
icebp
and
stos
test
push
hlt
je
adc
clc
aad
inc
sbb
stos
xchg
mov
cmpsl
mov
daa
js
mov
popf
xchg
sbb
push
or
sarl
loope
std
cld
subb
lret
icebp
sahf
bound
mov
jo
sub
mov
xchg
add
das
or
xor
arpl
jmp
outsb
aas
adc
dec
jmp
jg
fwait
mov
clc
insb
xor
pop
insb
addb
or
jne
out
popf
add
insb
mov
repnz
rorb
leave
pushf
mov
jno
outsl
cmp
inc
sbb
sub
and
popf
cmpsb
addr16
das
rclb
xlat
sub
sub
inc
push
cli
outsb
add
shl
fcomps
lock
mov
dec
stos
fucom
xchg
movsb
loop
cmp
scas
lds
in
rorb
xchg
and
mov
sub
stc
push
in
push
insl
jae
xor
push
lahf
int3
shll
pop
je,pt
jb
repz
pop
addr16
cmp
cltd
or
lret
or
xorb
inc
jmp
dec
dec
rclb
mov
push
xor
sbbl
in
pusha
or
jp
and
cmpsb
test
cs
fcmove
stc
iret
repnz
popa
xchg
repz
sti
jb
cmp
outsl
cmpsb
stos
out
mulb
pop
mov
sub
je
loopne
pop
fldl
popa
adc
cs
scas
xlat
dec
cld
fs
int3
or
push
lea
ss
fistpll
mov
jb
jge
cmpsl
adc
or
sub
lods
mov
repnz
in
add
cs
pusha
add
je,pt
sbb
fcomip
out
mov
mov
mov
cwtl
dec
int3
or
and
jae
adc
or
jne
mov
mov
cmpxchg8b
or
jbe
push
andl
adcl
xlat
ljmp
out
adc
xlat
ret
adc
movsb
xchg
add
lea
into
sub
add
jl
cs
push
ret
or
mov
or
pop
and
std
loop
cmp
mov
scas
or
pop
filds
or
ret
mov
and
push
gs
dec
mov
xor
add
cmp
xchg
out
gs
daa
and
mov
jl
into
jmp
mov
adc
ljmp
mov
pop
lods
pop
pop
fstpl
ret
sbb
pop
sbb
decb
xlat
pop
enter
mov
xchg
push
fdivl
cmp
pop
cmc
push
or
xchg
mov
push
popa
cmpsl
sub
ret
jb
xchg
xchg
lret
adc
insl
imulb
cmp
sbb
and
rorb
shrl
fistps
cld
pop
test
cmp
jecxz
fs
cmpsl
pop
jne
mov
lret
repnz
js
push
stc
xchg
add
xchg
pop
out
adc
mov
cmpb
das
pop
or
fbstp
int
scas
adc
insl
cmp
push
jge
push
push
mov
pop
enter
jbe
mov
int3
gs
aas
cmc
sub
mov
lcall
icebp
leave
adc
lods
mov
add
jno
pop
ret
shrb
mov
cmp
pop
inc
push
out
xchg
xchg
sahf
daa
mov
adc
mov
push
dec
pop
jns
jge
test
xor
out
lcall
stos
into
in
jge
lahf
jnp
loopne
jecxz
or
adc
mov
or
pop
lret
xor
mov
es
in
mov
gs
pop
mov
add
mov
add
into
aaa
mov
inc
xor
jns
pop
xor
popw
cmp
xor
jns
stc
icebp
cmpsl
mov
mov
push
cld
fsts
stc
mov
adc
in
inc
mov
and
push
push
jb
mov
mov
cs
fdivrs
jecxz
cmc
inc
adc
jo
push
jne
xor
insb
ret
cmp
in
xchg
rcl
and
fcmovnu
jae
pop
sub
test
mov
sub
mov
lods
xor
rorb
pop
movsb
jge
out
test
fists
add
push
sub
pop
xor
cs
cmpsl
stos
cmpsl
loop
xchg
loope
les
std
aam
xchg
push
fisubs
lret
arpl
pop
or
repz
jnp
sbb
fwait
pop
mov
dec
sub
sarl
cmpsb
xor
or
pushf
pop
dec
lods
stos
fwait
lret
inc
stos
int
pushf
or
pop
es
xchg
xor
xor
arpl
mov
ret
pop
lock
rcll
push
test
mov
sub
xor
inc
mov
lahf
push
mulb
into
ds
leave
shrl
xchg
cmp
push
jl
mov
scas
in
dec
mov
or
push
scas
add
mov
fnsave
dec
pop
push
xor
mov
pusha
lds
push
inc
lret
xchg
inc
xchg
dec
outsb
loopne
xor
xchg
lcall
and
aam
mov
lret
inc
shlb
out
shrb
pop
xchg
sub
mov
insb
cs
or
push
adc
gs
fsts
mov
rdpmc
pop
int3
shlb
mov
fisubrs
ret
lods
fstpt
sbb
mov
and
jo
xor
pop
lret
inc
mov
push
sub
and
mov
aam
cmp
push
mov
inc
jl
movsl
add
sub
push
mov
mov
jb
das
cld
frstor
cmp
mov
stc
push
mov
out
lods
add
cmpsb
in
dec
cs
or
inc
out
inc
mov
loop
fs
orb
or
push
repz
arpl
fildl
nop
xchg
cmp
mov
xchg
inc
pop
cli
mov
xchg
pushf
jne
cmp
adcb
lods
adc
pop
clc
lret
fsub
xor
mov
or
stos
sahf
add
test
sbb
fwait
pop
dec
ror
enter
xchg
sar
push
push
or
inc
jmp
pop
out
ficoms
jns
loope
orb
mov
nop
or
addr16
inc
cmp
inc
cli
xchg
dec
mov
inc
add
sbb
or
add
push
push
cmp
cmp
lea
cmp
dec
pushf
inc
sbb
jmp
frstor
cmc
imul
jmp
xchg
les
push
cld
pop
jae
sub
lods
outsb
movsb
cltd
cli
inc
add
stc
jnp
jo
lods
aas
jp
lea
mov
bound
out
cmpsl
sti
nop
cltd
cwtl
outsb
cmp
mov
inc
imul
xor
jmp
iret
fcompl
stc
mov
push
cmpb
adc
fstpl
inc
or
sub
xchg
push
pop
aas
push
imul
repnz
xchg
popa
pop
and
jb
stos
and
xlat
sti
ss
fwait
cmc
mov
cmp
jmp
lret
out
addr16
lods
adc
add
mov
fs
or
jae
int
pop
dec
jl
loopne
leave
dec
rcr
loopne
jb
cmp
add
cmc
rorb
sub
xchg
shrb
add
push
lock
inc
scas
prefetch
outsb
sub
dec
fsubs
sub
in
push
mov
cmp
jp
imul
out
pushf
cld
repnz
adc
jno
aas
add
in
push
repnz
xchg
inc
mov
outsb
int3
fiadds
out
jno
xchg
or
adc
mov
jns
push
push
adc
push
aas
flds
gs
pusha
rorl
arpl
xchg
jne
push
les
lds
jne
outsl
test
cltd
push
test
fdivl
popa
mov
inc
sbb
and
mov
xchg
adc
in
arpl
dec
movsl
lods
negb
adc
adc
aas
iret
call
sub
xor
loopne
mov
pushf
or
arpl
in
xchg
jno
popa
push
add
xlat
in
sarl
dec
cmpsb
add
int
andb
inc
xchg
int3
das
adc
movsl
hlt
pop
outsb
and
pop
sbb
ja
test
enter
mov
mov
xchg
jmp
fisttpl
mov
jno
xchg
dec
in
sub
mov
mov
leave
push
and
fsubs
sbb
push
test
leave
pop
jo
push
mov
hlt
aaa
jne
mov
jns
test
call
outsl
test
lcall
pop
out
pop
aad
in
cmpsb
imul
adc
cli
mov
mov
sbb
daa
push
sbb
xchg
pop
lahf
ja
jne
xchg
xor
mov
sub
nop
add
xor
fs
pop
jb
inc
xchg
mov
push
sahf
jo
inc
jo
jns
cltd
and
xchg
leave
dec
push
addb
stos
push
and
icebp
pushl
test
inc
or
xor
push
shrb
outsl
gs
fldln2
cmp
jg
dec
cmp
popa
push
push
sub
sti
in
mov
rclb
push
or
scas
or
lcall
pop
mov
fstl
add
jmp
movsl
cmpsb
nop
inc
mov
not
adc
mulb
mov
mov
lods
adc
rorb
bound
imul
std
lods
add
leave
add
mov
cwtl
rorb
clc
lods
xchg
sti
cmpsb
mov
xor
and
sub
mov
sbb
add
ljmp
fcmovnbe
push
pop
sub
dec
into
mov
arpl
je
cmp
nop
sub
mov
xlat
popa
xchg
sub
dec
daa
dec
sub
aam
cmp
push
call
mov
fcomps
les
xor
lcall
into
sti
mov
pop
frstor
dec
jge
popa
cmp
adc
xor
insl
mov
push
sbb
std
nop
loope
add
adc
and
add
sbb
xchg
dec
aaa
aas
adc
cmp
movsb
lock
inc
cli
mov
mov
add
es
pushf
pop
insl
lods
movsl
jp
cmp
pop
xlat
outsb
in
cwtl
faddl
jle
push
adc
mov
jg
xlat
pop
adc
jbe
pop
mov
inc
pop
aam
lods
or
inc
insb
daa
jbe
sub
enter
cmp
pop
scas
push
add
jg
lea
rcl
incb
ljmp
jmp
cmpsl
pusha
dec
mov
xchg
fwait
stos
fidivrs
aas
inc
or
jae
pop
addr16
fcoms
xchg
int
pop
fnsave
imul
push
and
rcl
mov
fstpl
loope
scas
xchg
movsb
sar
into
add
movsb
repz
stc
adc
xor
bound
stos
or
mov
dec
jb
jmp
cmp
mov
in
out
cld
das
bound
mov
orl
cmp
mov
clc
shlb
inc
adc
add
aad
mov
cltd
dec
lret
push
inc
idiv
push
sbb
bound
pusha
mov
mov
inc
mov
pop
shrl
lahf
push
mov
mov
call
pusha
shll
sub
scas
loope
in
cmp
jo
cs
repz
add
enter
shl
hlt
adc
mov
xchg
sub
mov
fcomp
aam
lods
outsl
pop
mov
dec
sub
mov
jge
or
or
mov
jge
xchg
jl
test
cs
mov
addl
pushl
jp
filds
hlt
mov
out
sbb
dec
cli
das
xlat
fnstsw
lret
mov
lea
sub
mov
adc
rcr
aaa
pop
pop
cmp
mov
cltd
insl
and
push
addb
pop
or
lock
mov
addr16
push
add
out
pop
push
cmp
jecxz
ret
inc
pop
jnp
arpl
imul
lock
xor
cwtl
or
dec
adc
adc
mov
mov
xchg
inc
roll
das
adc
sbbb
cli
jns
push
push
pop
push
clc
stos
jnp
arpl
pop
pop
lds
loope
and
and
mov
int3
data16
mov
jge
push
adc
push
mov
insb
mov
add
loopne
in
mov
mov
inc
outsl
test
sub
mov
add
push
imul
fbld
sbb
and
xor
and
jmp
xchg
ja
test
repnz
push
out
cli
cmpl
dec
sbb
fbld
cmp
cmp
xor
push
sub
sbb
sbb
mov
popa
cld
in
dec
sbb
into
movsl
inc
decl
xlat
shll
stc
out
aam
add
sub
icebp
test
stos
inc
push
aad
xor
add
xchg
arpl
loopne
lods
lds
sub
dec
int3
jmp
loope
add
loopne,pn
jle
fsubrl
shlb
mov
cmpsl
pop
xor
pop
inc
adc
mov
lcall
mov
and
mov
in
jno
xlat
and
rcr
insl
sahf
ret
jno
jle
xor
and
pop
dec
xor
adc
xor
mov
mov
insb
adc
addr16
cmp
into
cmpsl
push
inc
xchg
cmp
xor
jo
aaa
dec
lods
je
or
xor
dec
ret
xor
push
or
adc
push
mov
imulb
jno
shrl
ud1
jl
ljmp
lods
lret
movsb
cwtl
fcom
cmp
dec
lret
fmulp
sti
xchg
test
mov
dec
mov
js
mov
scas
addr16
fnsave
fs
fsubr
push
movsb
cld
jecxz
das
sub
inc
arpl
orb
shlb
dec
sub
sbb
xchg
and
jp
lods
xorl
mov
js
and
jg
sbb
push
aas
and
sub
in
adc
bound
mov
mov
add
lods
sub
cmp
dec
push
or
xor
cli
pusha
mov
jnp
jmp
mov
xchg
sbb
inc
dec
xchg
test
or
cmp
cmpsb
jmp
imul
es
inc
testb
adc
dec
push
push
dec
out
sub
cmp
loopne
jg
or
xor
stc
call
xorb
in
jae
aam
push
gs
and
or
in
nop
add
add
insl
mov
lret
js
sbb
mov
xor
jl
loopne
add
cmpsl
aam
sub
scas
int3
mov
xchg
xchg
push
subl
sub
cmp
enter
adc
ja
cld
jns
data16
mov
mov
fdivrp
dec
leave
test
pop
icebp
gs
shl
xor
in
cld
ljmp
out
ja
push
mov
loope
int
cmp
push
ja
mov
sbb
inc
mov
or
mov
sub
adc
push
mov
pushf
sub
push
jo
add
sahf
loop,pt
inc
sub
mov
push
enter
mov
adcl
push
sub
inc
js
pop
jns
stos
les
hlt
mov
dec
dec
jp
push
ret
inc
jmp
leave
testl
xchg
inc
sbb
enter
cmpsl
ja
fnstsw
dec
notl
popl
cmpsl
lock
xor
sub
movsl
fstl
cmpsl
outsb
mov
xor
mov
mov
sbb
icebp
add
or
push
cltd
cmp
lar
pop
or
fldl
mov
mov
jge
jecxz
pushf
pushf
loopne
int
pop
pop
mov
xchg
pop
mov
mov
fldt
das
sbb
mov
mov
cmpsb
xchg
lcall
add
xchg
mov
in
or
out
push
mov
dec
mov
jl
enter
aas
add
cmpsb
call
das
mov
jl
ret
push
ja
push
imul
xchg
pop
sarb
and
pop
cmp
shll
adcb
add
dec
test
and
movsb
sar
sbb
push
int
mov
scas
out
lods
pop
xchg
int3
aam
mov
insl
fsubr
inc
addb
in
jmp
sarb
xor
imul
in
pop
add
negb
stos
xlat
or
outsb
js
fdivrp
test
stos
repz
scas
jecxz
je
out
out
jg
std
cmc
jge
shr
fcmovu
or
ds
sahf
aaa
sub
adc
and
stos
cmp
sub
iret
sbbl
dec
mov
iret
xor
mov
stos
push
sarb
ret
inc
add
dec
sub
jmp
pop
push
mov
imul
pop
nop
cmp
mov
push
mov
jno
pop
dec
or
test
imul
mov
xor
adc
push
adc
fwait
icebp
clc
in
decl
xor
ds
jmp
rcrb
call
mov
and
outsb
mov
es
jle
push
xor
in
out
mov
push
vorps
cmpsl
jl
sbb
sub
push
out
or
push
addl
push
pop
xor
pop
jb
adc
sti
je
notl
or
cmc
mov
xor
fildl
pop
pop
shr
ud2
dec
xchg
in
lea
push
sbb
push
mov
jo
das
mov
shl
mov
int3
pop
add
or
jno
pop
adc
in
cld
and
mov
shrl
mov
ja
push
mov
adc
dec
push
icebp
cmp
aad
sahf
lods
push
bound
push
jecxz
lock
mov
xchg
lods
mov
jnp
jecxz
inc
and
inc
xor
repnz
xor
aaa
je
pushf
cmp
or
mov
outsb
pop
sbb
mov
sahf
sbb
cmc
mov
lahf
pop
cmpsl
lret
vcvtpd2psy
jmp
in
mov
sti
mov
mov
nop
in
mov
inc
mov
pop
jae
dec
mov
mov
xor
icebp
pushf
or
jno
push
popf
shld
mov
dec
xor
mov
insb
in
mov
leave
in
xchg
sub
dec
jb
xchg
mov
pushf
mov
or
pop
push
inc
add
and
subl
pop
pop
inc
or
dec
adcl
stc
jle
addr16
mov
push
sbb
movsb
cmp
test
ffreep
sahf
int
cli
mov
push
pop
test
add
xor
arpl
lea
dec
in
mov
add
jg
xor
jno
sub
jae
add
fwait
and
out
movsl
inc
iret
mov
push
and
sahf
push
sbb
bound
sbb
xorl
jle
in
mov
inc
inc
icebp
xchg
mov
add
mov
xor
mov
test
test
insl
push
mov
sbb
jl
orb
jne
call
jecxz
les
pop
mov
add
lds
ljmp
faddp
in
jmp
stos
sar
mov
or
push
pop
pop
mov
xchg
mov
lods
pop
cmpsl
inc
dec
subb
repz
sbb
sub
ljmp
jae
push
ja
and
sbb
rcll
pop
xchg
and
mov
sbb
pop
push
int
imul
aas
pop
mul
add
popa
and
repz
jbe
pop
insb
in
pop
mov
add
mov
inc
jno
loop
push
in
push
mov
pop
aaa
jbe
lret
shll
cmp
cld
or
xor
or
dec
adc
popl
iret
xchg
flds
or
xchg
jo
add
inc
dec
cmpsl
lcall
xor
jge
imul
cltd
dec
add
dec
sbb
push
dec
je
add
jle
inc
hlt
int
out
sub
sbb
std
jae
dec
lods
in
jmp
add
movsl
pop
sub
pop
fimull
orl
aad
aas
cmp
xchg
dec
mov
xor
sti
hlt
icebp
xchg
adc
std
cmp
je
in
cltd
fistpl
xchg
xor
pop
xchg
pop
stos
adc
push
out
mov
mov
in
movsb
sbb
add
loope
lcall
in
imul
lods
or
cmp
mov
shll
mov
inc
pop
ss
repz
mov
aam
leave
cmpl
or
mov
lcall
sbb
add
cwtl
push
sbb
adc
lret
sub
aad
xor
pop
orb
lock
iret
add
jp
push
mov
std
xchg
push
out
or
or
scas
jg
add
xor
xchg
imul
cmpsb
sub
fsubr
and
call
cmp
sbb
jg
add
xchg
cs
mov
push
push
movsl
outsl
sbb
jg
jl
jbe
xor
mov
inc
sub
and
jno
cmp
jmp
test
push
xchg
sbb
adc
test
add
push
push
jp
int3
sbb
inc
bound
repnz
sub
pop
and
das
fidivrs
aad
mov
cmp
mov
flds
inc
jo
rol
pop
adc
insb
xor
subl
fdivrs
dec
jecxz
or
jne
mov
inc
sbb
loop
mov
adc
mov
and
int
sahf
fistps
clc
push
push
mov
stc
mov
push
adcl
xor
mov
bound
and
mov
jo
gs
test
popa
arpl
cltd
pusha
pop
add
jg
shll
push
fnstsw
lds
repz
mov
push
cltd
js
cmc
in
lahf
lcall
repz
mov
push
sbb
jne
jno
arpl
push
push
dec
loopne
imul
xchg
mov
int3
sahf
or
cmp
inc
aas
scas
sbb
cmp
cmp
cmp
adc
or
fstl
inc
ja
hlt
insl
cltd
xor
add
fcmovu
pop
add
andb
movsl
les
jns
out
pop
fisubrl
lret
mov
inc
dec
jno
test
outsb
lret
pushf
or
mov
mov
xchg
and
cmc
jecxz
loope
popf
icebp
inc
fcomps
lock
mov
fidivs
add
dec
mov
xchg
add
mov
fnsave
pop
jbe
or
adc
xor
aad
js
popf
pop
test
fdivrp
mov
and
sbb
pop
out
and
mov
push
and
push
sbb
push
sub
push
jmp
jb
sbb
inc
dec
lock
addr16
pop
jb
xor
push
mov
sub
dec
cs
arpl
cs
lahf
mov
in
xchg
add
lret
cmp
int3
sbb
pop
pop
dec
sub
iret
sub
imul
xor
fwait
pop
add
add
mov
or
loopne
jne
notl
sub
pop
aas
mov
jo
sar
jo
mov
inc
or
std
dec
outsb
or
mov
es
adc
fdivl
xchg
mov
mov
mov
xchg
roll
pop
mov
xor
mov
push
and
push
pop
mov
xchg
pop
push
mov
pop
incb
sbb
or
xchg
xor
push
into
jb
push
adc
push
mov
adc
pop
in
mov
jno
pop
push
xor
add
popa
mov
mov
into
pop
pop
mov
push
mov
xchg
repnz
shll
cmpsb
xlat
sub
test
call
fiaddl
inc
push
cmpsb
mov
jmp
sbb
push
xor
add
fmull
into
sub
push
push
sub
scas
push
rolb
dec
jae
lds
xor
outsl
inc
mov
mov
divps
cwtl
xchg
adc
das
orl
adc
lret
jo
icebp
test
sbb
repz
cmp
or
mov
int3
xchg
or
sbb
xchg
xchg
mov
mov
and
sbb
and
sub
js
xchg
mov
cmp
test
ror
daa
inc
scas
jg
xor
xchg
push
push
fbld
adc
push
in
pop
out
inc
cmp
aas
jmp
roll
jmp
daa
adc
mov
fwait
das
sbb
loope
push
divl
movsb
fimuls
imul
addr16
mulb
inc
xorb
sbb
or
pop
cs
in
test
jae
addr16
stc
mov
or
push
pop
outsb
fcoms
int3
pop
bound
scas
xchg
stos
outsl
cwtl
pop
out
scas
push
mov
rcrl
cli
dec
xchg
lods
or
or
push
mov
dec
fbstp
gs
jns
adc
mov
cmp
xchg
addr16
push
adc
add
sub
out
sbb
cmp
pop
in
pop
insb
shrb
fstps
lret
and
jl
popa
les
aam
pop
push
sarl
repz
mov
jbe
cmp
and
popf
insb
xchg
fdivl
call
add
iret
jmp
push
push
stos
movsl
negb
repz
mov
loopne
mov
and
imul
dec
inc
in
mov
bound
lret
stos
sbb
es
pop
in
jbe
push
jb
pop
fnstenv
xchg
add
or
je
imul
jbe
gs
push
mov
fisubl
inc
sbb
xor
and
lcall
movsl
cmpsb
xor
lcall
bnd
pop
jecxz
out
push
push
shrb
repz
subl
lods
insl
ljmp
sub
jge
and
xor
push
xlat
arpl
push
daa
lret
fwait
enter
icebp
jmp
lcall
int3
loope
mov
jae
fsubrp
dec
mov
jmp
addb
roll
push
outsb
nop
xorb
mov
inc
add
inc
es
push
test
pusha
mov
sub
into
pop
add
push
adc
dec
xor
push
test
leave
dec
cwtl
scas
cmp
or
xchg
out
lcall
mov
lahf
rclb
test
mov
pop
rcl
fists
imul
shlb
inc
popa
jge
pop
repz
das
jp
mov
and
mov
add
xorb
je
xchg
add
adc
repz
stc
cmc
jno
and
loopne
mov
dec
fmul
inc
outsl
jo
mov
mov
pop
push
shlb
cwtl
testl
xor
sbb
mov
or
xlat
icebp
out
cmp
mov
sbb
inc
jle
add
push
and
test
sub
in
in
sbb
and
js
xor
xlat
mov
xchg
loope
inc
call
mov
idiv
pop
xchg
sti
sbb
xor
lret
mov
adc
in
xor
sub
ljmp
dec
out
push
add
test
fstpt
into
sub
int
test
cmpsb
cmc
stc
into
fmuls
leave
and
mov
shlb
xor
mov
inc
lods
pop
or
mov
shll
es
sub
fwait
inc
std
pop
cs
jb
ljmp
mov
cmp
mov
mov
lods
xor
push
pop
mov
arpl
lret
cmp
mov
cld
mov
dec
jbe
jnp
pusha
or
mov
add
mov
pop
test
sti
mov
mov
into
or
xchg
mov
jecxz
pop
pop
scas
loopne
xor
mov
lret
xchg
bnd
popa
pop
dec
inc
jb
imul
repnz
push
repz
xchg
cs
sbb
or
push
fiadds
cmp
dec
jne
ds
sbb
xchg
mov
scas
ret
roll
mov
push
xchg
jb
add
mov
jns
std
sti
hlt
jmp
cli
pop
cmc
cli
mov
les
std
int
jle
add
sbb
cmp
movl
mov
inc
pop
cmp
aad
cmp
nop
popa
incb
test
sub
pusha
jnp
mov
mov
lcall
pop
imul
dec
sub
clc
repz
lods
xlat
sub
xor
xlat
dec
test
or
rcl
cmc
fdivrs
xchg
mov
in
enter
sbb
adc
ljmp
fdivrl
out
leave
aaa
cmp
mov
sbb
lea
aaa
sub
xchg
mov
add
and
outsl
out
pop
xchg
stc
sbbb
in
negl
pop
out
in
addr16
sub
ljmp
sarl
popf
jmp
and
jp
sbb
adc
andl
mov
sbb
dec
lcall
or
xchg
hlt
out
je
xchg
shl
mov
and
or
out
out
fs
repz
cld
sbb
inc
add
jg
mov
aam
mov
in
sub
xor
xchg
fdivl
and
jo
jp
or
divb
lea
std
shlb
cmc
test
xchg
dec
sub
in
sbb
jb
icebp
fildl
push
imul
outsb
daa
sbb
pop
stc
fucomi
enter
jp
xlat
add
js
xor
nop
adc
loop
sbb
inc
push
imul
add
mov
sub
inc
rorl
loop
imul
or
mov
mov
in
mov
out
mov
sbb
sbb
add
mov
jns
or
pop
mulb
in
roll
lods
jne
xor
or
lret
mov
add
or
cs
jae
adc
in
loopne
inc
fs
pop
nop
sbb
stos
adc
andl
movsl
and
mov
xor
push
nop
add
repnz
mov
jnp
cmpsb
rclb
cmpsl
ja
push
hlt
dec
sub
iret
in
mov
adc
pop
filds
aas
or
loop
sbb
cmp
int
mov
mov
in
push
jb
jns
dec
arpl
sub
in
fsubs
or
xor
daa
je
sub
cld
add
adc
popf
pop
fsqrt
dec
push
xchg
xlat
sbb
mov
shlb
in
jmp
xchg
lods
lods
inc
nop
data16
jg
into
sub
cwtl
loope
mov
aam
inc
call
mov
adcl
jno
or
xchg
mov
dec
sbb
push
mov
out
imul
push
notl
stos
mov
jecxz
jo
push
addr16
push
sbb
xor
mov
xchg
jle
imul
mov
and
outsl
pusha
xchg
enter
mov
adc
push
scas
dec
xchg
pop
push
push
cmpsl
rcrb
jmp
push
sbbl
fdivrl
cld
loopne
lods
aas
sahf
in
jp
daa
addr16
mov
fdivp
dec
push
repz
mov
jp
inc
mov
mov
sub
mov
les
push
fisubs
enter
lock
and
insb
stos
mov
ffree
sbbb
daa
out
jle
or
repz
or
daa
jo
cmc
ficompl
xor
movsb
mov
inc
fmul
and
sub
iret
gs
jg
sbb
fsubs
jle
xchg
mov
arpl
mov
xchg
or
lcall
subb
lods
inc
addb
sbb
shlb
cmp
adcb
and
mov
adc
aad
clc
add
dec
fs
in
mov
pusha
mov
inc
fcmovne
xchg
and
dec
xchg
loopne
mov
sub
inc
in
repz
mov
mov
xor
cs
and
add
pusha
je
lret
inc
inc
lcall
ljmp
imul
aad
test
movsb
std
inc
mov
push
sbbb
xchg
pop
out
fsubp
pop
jnp
bound
dec
ja
push
inc
mov
add
shrl
xor
fs
pushf
cwtl
or
and
adc
icebp
jge
cmp
pop
xchg
xchg
test
mov
mov
js
pushf
dec
jle
stc
into
dec
scas
dec
scas
subb
pop
shlb
mov
ss
jge
dec
add
sbb
adc
and
mov
sarb
mov
arpl
and
xchg
add
mov
fisubl
xor
repnz
xor
push
cld
mov
fs
and
mov
paddsb
popa
das
jae
pushf
lds
cs
fs
lea
and
xor
arpl
sbb
xchg
pop
sub
sbb
xlat
mov
inc
dec
xor
jecxz
adc
test
inc
mov
sbb
push
imul
imul
jb
stos
fnsave
dec
loope
cld
mov
add
or
and
adc
cmp
jl
out
and
arpl
xchg
push
lahf
daa
into
bound
add
bound
and
push
ret
lahf
cld
cmc
clc
dec
push
mov
mov
or
adc
jge
jb
cmpsl
mov
addr16
sub
mov
cwtl
or
xchg
dec
pop
mov
dec
pusha
mov
das
pushf
and
lcall
pop
push
lret
aas
jp
sub
sub
cmpb
loope
insb
mov
or
lret
fwait
inc
sti
in
jge
xlat
push
jo
fnstenv
pop
pop
jmp
cmp
add
push
int3
lret
jecxz
mov
and
mov
call
add
push
xchg
mov
mov
xchg
pop
data16
mov
push
cld
pop
push
cmpsb
or
push
nop
sub
mov
mov
push
cmp
adc
nop
imul
sarb
in
fldl
and
sub
add
int
lret
mov
or
add
xchg
lret
aaa
add
and
cmpsb
leave
mov
fisttpl
pop
push
mov
dec
jo
jo
aad
jl
sbb
push
movsb
cmp
decb
icebp
icebp
and
jnp
shr
jmp
stos
pop
sbb
stos
push
jae
or
xchg
repz
daa
mov
mov
ret
xor
adc
lret
ljmp
sub
daa
fildll
in
mov
cmpsl
les
mov
jmp
in
xchg
sub
adc
fnstenv
pop
jl,pn
aaa
jbe
mov
imul
add
roll
cmp
ffree
fildl
ret
sbb
rol
jno
les
in
ds
push
lret
les
sbb
jle
enter
mov
push
test
jl
xor
mov
stos
neg
sbbl
xor
mov
mov
or
mov
addl
or
pop
pop
mov
pop
fbld
ja
dec
jns
repnz
mov
and
jecxz
jbe
and
shl
leave
scas
cli
ja
lods
lods
mov
push
xchg
out
cmp
dec
cmp
cli
sahf
push
fisttpl
mov
mov
push
popa
push
mov
add
pop
imul
jne
push
arpl
mov
test
lods
stos
fwait
pop
cmp
aaa
rorb
mov
in
push
adc
xor
mov
call
fbld
mov
mov
xchg
jno
sub
in
sub
mov
cmp
mov
xor
jge
pop
xchg
inc
xchg
jns
lods
aam
ss
movsl
inc
shlb
push
mulb
lds
ffree
sahf
das
xchg
add
nop
jno
dec
fcompl
enter
mov
xchg
jmp
jge
pop
and
jmp
arpl
aad
test
sub
stos
add
test
stos
adc
sub
scas
cmp
ja
sbb
xor
dec
subl
dec
cmpsl
pop
and
call
push
gs
mov
mov
xor
xchg
and
sub
push
adc
lds
cmp
jg
or
mov
out
ret
cmp
push
xor
pop
cld
inc
scas
popa
add
loopne
outsb
daa
and
outsl
aas
jo
addr16
mov
movsl
jp
divl
addr16
sbb
fldcw
jne
xchg
xor
and
pop
push
jae
xor
outsl
cmpsb
fsub
call
lcall
inc
jmp
pop
idiv
jge
data16
ret
jbe
mov
pusha
sub
movsl
xchg
sbb
loop
sub
in
push
loop
cmp
cwtl
mov
pop
cwtl
mov
in
inc
lods
scas
test
cld
jge
jne
mov
adc
jge
mov
adc
sbb
xchg
mov
and
jne
sbbl
jb
push
sub
adc
pop
iret
mov
iret
add
dec
fbld
imul
repnz
cmp
arpl
push
data16
or
aam
or
test
mov
xchg
movsl
enter
pop
lods
imul
test
ds
rorl
mov
js
inc
jb
outsl
sub
lds
mov
imul
pop
in
mov
xor
cmp
lock
mov
fsubrp
mov
lret
and
scas
stc
enter
mov
lea
fucom
fdivl
cwtl
clc
mov
ja
dec
sbb
fistl
push
leave
jnp
sbb
adcb
sti
sub
or
lods
sub
outsb
cltd
xchg
inc
cmp
xor
pusha
jge
ret
ja
xlat
and
inc
rdpmc
push
icebp
adc
dec
outsb
inc
xchg
testb
arpl
cmpsl
xor
inc
dec
dec
sahf
dec
fwait
mov
div
sarb
je
ds
sub
dec
cmpsb
sub
ds
pop
push
int
movsb
and
icebp
mov
dec
cld
movsb
adc
mov
mov
push
cmp
mov
or
xor
fst
mov
in
ljmp
sarl
call
and
popa
je
lahf
ljmp
mov
and
cmp
arpl
cmp
mov
push
sub
lcall
xor
adc
shll
sbb
cmp
or
inc
out
push
lret
in
xor
imul
aas
lret
aad
dec
mov
jno
push
adc
adc
sti
aam
mov
cmpsl
jb
ja
addr16
xor
add
pushf
std
gs
stos
xor
rorb
jae
stos
adc
cmp
and
lock
cld
imul
xchg
fnsave
movsb
aas
int3
xorb
scas
stc
mov
xor
sbb
fdivl
lods
shr
mov
test
push
les
sti
mov
fisubrs
mov
aaa
mov
add
js
movsb
jo
add
sub
in
inc
mov
mov
mov
jecxz
mov
jo
dec
jl
je
pop
mov
std
pop
sbb
nop
rcll
adc
push
push
enter
and
cld
lahf
jno
jno
ficoml
adc
sub
pop
call
sub
test
inc
pop
add
add
pop
shll
enter
jne
xlat
push
rcrl
xchg
add
aaa
je
scas
out
push
pop
adc
mov
and
in
xchg
ljmp
pushf
xchg
xchg
leave
or
jbe
mov
lock
int
int3
xor
adc
fs
arpl
inc
add
pop
add
pop
int3
or
mov
inc
lds
push
and
jb
pop
out
pop
lock
in
test
into
mov
aad
dec
out
lret
pop
popa
fmuls
lds
and
stos
out
cwtl
or
xlat
jae
test
outsl
inc
mov
xchg
lods
dec
insb
jg
pop
in
add
and
shl
icebp
xchg
inc
or
jo
call
or
ret
ds
daa
dec
addr16
incl
inc
daa
mov
stos
sub
scas
mov
xor
mov
jge
cmp
ss
pop
sub
mov
cwtl
jecxz
cmpsl
lock
mov
mov
adc
rcr
pop
rorl
into
std
popa
mov
ss
call
insb
inc
mov
xor
push
ja
jge
fldenv
sahf
and
ljmp
inc
mov
and
fldcw
cmp
push
mov
push
shrl
shlb
aas
daa
push
xor
lds
add
dec
or
js
dec
or
mov
aas
ljmp
adc
pop
jp
movsl
dec
adcl
add
sbb
cmp
mov
lods
jns
or
mov
pop
fwait
pop
sbb
mov
cmp
les
mov
cmp
jmp
out
sbb
xchg
stos
sti
jae
scas
xor
pop
pop
lock
mov
faddl
push
jo
iret
fnstcw
pop
sti
push
xor
push
add
je
ja
dec
jge
mov
and
sub
outsb
sbb
and
push
lahf
mov
or
push
test
push
xor
mov
ljmp
stos
sub
add
or
jbe
adc
fs
jb
vmovapd
jmp
add
loop
dec
in
ss
int3
xchg
andl
push
and
jmp
cltd
sub
cmp
or
cmpsl
push
cld
cltd
ds
cmp
add
rcrl
adc
shll
pusha
xchg
pop
cmp
fldt
and
mov
mov
jp
int
imul
scas
mov
sbb
jbe
sti
sbb
mov
nop
dec
pop
lock
les
push
movsb
push
xchg
cs
scas
gs
movsl
leave
and
xchg
mov
xchg
lods
stos
or
add
cmpsl
rorl
incl
mov
out
add
cmp
insl
mov
or
sbb
fdivs
mov
std
cld
call
or
xor
cmc
fisubrs
mov
insb
cmp
pop
mov
push
std
fistpll
mov
push
out
sar
sbb
repnz
jg
lcall
addr16
jmp
xchg
shlb
fnstsw
sub
ret
mov
cmp
pushf
or
mov
pop
pop
mov
dec
in
stos
dec
sahf
xchg
inc
imul
outsb
popa
mov
imul
cmp
outsl
xor
repz
ds
xchg
daa
pop
lods
pop
js
adc
mov
test
sub
sbb
cmp
push
cmc
loop
push
adc
imul
pop
imul
xor
hlt
xor
xchg
xor
mov
daa
dec
mov
mov
mov
add
sbb
adc
sti
mov
movups
inc
mov
xlat
xchg
adc
popa
adc
and
repz
es
test
aam
jmp
push
sti
icebp
cli
push
insl
or
jl
arpl
mov
jns
inc
cmp
sarl
imul
inc
xchg
xchg
lret
dec
stos
add
add
push
faddl
ja
xor
rol
clc
mov
mov
and
repz
or
into
jb
cmp
outsl
add
pop
pop
inc
push
mov
mov
outsl
shrb
xchg
xchg
push
sbb
lahf
ljmp
out
adc
adc
sahf
insb
jg
sbbb
stc
clc
test
jge
or
leave
jecxz
lahf
sub
icebp
or
jmp
cmp
scas
sbb
push
and
hlt
aas
fisttps
lods
in
stos
shld
add
stc
loopne
fmul
pop
mov
mov
into
cmp
adc
push
adc
xor
ljmp
testb
gs
mov
shlb
adc
jmp
fisttpl
and
adc
mov
rcr
addr16
pop
fcompl
outsl
sbb
pop
nop
xchg
sbb
sub
sub
out
push
push
scas
sbb
cmp
jecxz
push
sbb
popa
mov
lock
pop
insb
adc
cld
je
dec
shlb
push
add
mov
pop
push
pop
xchg
cmpsl
data16
mov
test
push
ds
xor
mov
xor
fdiv
mov
sub
lods
jno
sti
adc
sbb
mov
jl
ljmp
mov
mov
xchg
sbb
lds
or
call
xchg
addb
pushf
and
xchg
sbb
mov
add
and
fsubl
stc
pop
inc
inc
fbld
or
add
push
fs
mov
sub
cld
aas
jl
bound
imul
jg
enter
jg
fcomi
mov
loope
xchg
stc
ljmp
mov
mov
cmp
dec
ret
loop
ret
fs
xlat
fsubrp
addb
clc
and
push
ror
out
add
or
sti
loop
fisubrs
movsl
mov
mov
mov
mov
push
subl
ret
add
call
inc
xchg
cmpsb
pop
push
rcrl
gs
jmp
orl
ret
push
pop
mov
sub
jno
icebp
mov
shlb
lahf
stos
out
pop
pop
add
sti
ljmp
in
lods
lods
ljmp
out
jo
rorl
das
xor
cmp
pop
mov
mov
pop
xor
xchg
insb
jmp
out
pop
rcll
call
jmp
push
cmpsb
cwtl
push
sbb
sbb
jmp
stos
inc
call
xchg
imul
cwtl
test
sbb
rcll
pop
lods
pusha
xor
mov
loopne
xor
push
ds
push
mul
xlat
add
jl
imull
sub
inc
test
xor
inc
dec
ljmp
add
adc
push
jmp
adc
sub
mov
pusha
sbb
andl
loop
orb
shr
pop
movsb
out
jl
dec
fsubrl
pop
jp
cld
out
mov
lret
pop
dec
push
bound
sbb
je
mov
and
fadds
jnp
popf
sub
lock
xchg
sbb
enter
aad
clc
pop
xchg
ds
pop
jg
test
sbb
pop
add
mov
inc
pop
fdivr
push
and
push
adcl
fists
mov
mov
fwait
cmp
addb
cmpsb
cmp
or
rolb
pop
sbbl
orl
pushf
gs
insl
imul
and
sub
repz
mov
das
jae
scas
iret
mov
subb
mov
mov
repnz
fs
sti
and
shrb
das
xor
dec
loop
cwtl
popa
lods
nop
inc
out
stc
cmp
mov
cmp
push
and
enter
pushf
mov
xchg
xor
std
dec
popf
xor
mov
jp
mov
scas
pop
sbb
mov
sub
ret
mov
fmul
cltd
dec
call
stos
xor
mov
dec
add
pop
push
inc
adc
sub
cmp
aaa
xchg
and
dec
push
aam
lret
ret
push
jp
lods
adc
sub
cmp
push
sti
push
adc
or
xchg
xchg
es
testb
and
sbb
mov
cmpsb
jne
inc
les
sub
jecxz
pop
scas
lea
or
dec
mov
jno
xchg
mov
push
sub
popf
mov
out
and
jp
ja
into
cmp
sbb
aaa
jmp
xchg
fldcw
cwtl
in
cmp
imul
push
sbb
hlt
sub
ret
fwait
xor
cmp
gs
adc
es
xor
sbb
es
jnp
outsl
add
pop
pop
test
lahf
ss
stc
xor
sub
sbb
divl
stos
xor
inc
test
sbb
pop
jmp
lds
sbb
in
jne
xchg
es
movsl
cmpsl
xchg
lahf
adc
xchg
jmp
push
divps
loopne
pushf
and
add
mov
cmovne
mov
dec
xchg
mov
adc
mov
pop
movsb
mov
sub
das
decl
stc
test
cltd
jb
add
outsb
bound
hlt
es
adc
mov
ror
stos
popf
push
inc
push
push
ljmp
adc
movsb
icebp
fld
mull
ret
mov
lea
adc
gs
lcall
sti
fldl
xor
jmp
je
sbb
sub
sbb
pop
lds
sbb
xchg
add
daa
loopne
jge
das
xchg
ret
add
cltd
cmpsl
lea
sbb
clc
data16
inc
adc
sbb
popa
mov
int3
dec
mov
dec
mov
jmp
and
aaa
clc
push
in
jne
mov
sarb
sub
out
add
mov
mov
jl
mov
bound
lds
mov
rcrb
add
je
into
bnd
sbb
test
cmp
lret
pop
jge
shl
jl
mov
mov
cwtl
andl
pusha
or
popa
mov
movsb
mov
dec
mov
stos
je
jmp
inc
dec
arpl
movsl
inc
push
out
sahf
dec
sub
or
xchg
sahf
jns
xor
adc
gs
pop
or
mov
adc
sti
repnz
je
into
popf
mov
sbb
addr16
pop
aas
cli
sub
xchg
sub
inc
pcmpgtd
loop
cmp
or
ret
call
dec
cmp
out
lret
dec
pop
arpl
xchg
popa
cmp
mov
xor
push
sub
adc
adc
outsb
dec
scas
lcall
adc
pop
xchg
sub
xor
cmp
dec
jge
sahf
xchg
dec
push
dec
fiaddl
leave
push
movsl
jl
iret
test
sahf
push
cmp
mov
in
push
gs
cmp
nop
subl
xchg
loopne
jge
je
sti
shr
fbstp
mov
dec
pop
mov
popa
pop
das
loop
jnp
mov
ret
out
ucomiss
fdivs
es
jno
jo
mov
ret
push
std
rcrb
pop
ds
jmp
aam
sbb
lcall
orl
cmp
xchg
pushl
scas
movsb
or
add
mov
pop
inc
daa
hlt
jo
lods
mov
xor
add
fucomi
jg
mov
out
stos
jno
stos
dec
outsl
sbb
adc
pusha
ds
in
cmp
dec
rclb
and
lods
mov
ljmp
fldt
dec
push
xor
mov
adc
xchg
jmp
xor
or
jbe
xchg
cmp
cli
das
aaa
xor
xor
mov
sub
or
aam
jb
dec
jg
lret
push
mov
out
pushf
push
xor
mov
mov
or
xchg
mov
sub
mov
mov
pop
jno
or
hlt
push
into
lock
jb
fdivrs
mov
call
jl
fs
push
iret
das
or
cmpsb
repz
xor
je
scas
and
xchg
js
movsl
std
xor
les
xchg
dec
repz
dec
lods
add
fnstsw
mov
sbb
jmp
dec
mov
sbb
dec
mov
mov
jo
out
lea
ficompl
inc
adc
test
inc
mov
pop
incl
xor
imul
loop
cmp
sar
or
xor
or
scas
adc
adcb
pop
cmp
inc
mov
cmp
arpl
lods
push
cmp
add
mov
scas
sbb
pop
jae
lcall
inc
rcll
push
test
jl
out
shll
mov
fsub
push
shll
shll
lock
fdivrs
in
test
shrb
add
in
lock
lods
sarl
ja
loopne
loope
jle
xor
xchg
adc
push
mov
and
pop
mov
mov
cltd
ds
xchg
test
xchg
sahf
je
fildll
sbb
pop
jno
cs
aas
push
inc
cltd
stc
adc
xchg
int3
das
mov
clc
sub
jg
push
insl
cwtl
mov
inc
mov
push
push
and
into
xor
cs
mov
lahf
pop
aaa
adc
and
cmp
sarl
addr16
mov
inc
lret
es
sbb
sbb
ret
call
enter
xor
push
mov
mov
inc
clc
cmp
lahf
xchg
or
orb
loopne
adc
mov
dec
fcomi
xchg
pop
pop
push
outsl
push
mov
lret
mov
mov
das
dec
in
jp
inc
pop
mov
popa
cmp
mov
push
adc
imul
negb
popf
repnz
adc
mov
push
out
je
imul
inc
inc
clc
fstps
mov
pop
adc
or
cmp
out
stc
int3
movb
inc
loope
std
push
pop
cmpsl
jl
adc
dec
fisubs
cli
pushf
in
and
jg
inc
mov
adc
push
lods
cs
adc
lods
stc
mov
mov
cmc
loop
mov
mov
cmp
frstor
mov
cmp
adc
aad
xchg
gs
jae
fcoms
jecxz
add
lods
mov
fcomi
dec
and
lock
cs
pop
pop
leavew
lods
addr16
data16
pop
hlt
in
lret
and
dec
push
in
arpl
push
pop
mov
pop
les
sbb
adc
cmp
lcall
sub
inc
or
lock
sub
ljmp
lret
lret
mov
sbbl
gs
arpl
js
mov
cmc
cwtl
and
jg
jo
lahf
push
inc
fimuls
xchg
sub
jbe
or
push
jo
ds
idivb
dec
mov
inc
mov
fsts
cmp
push
test
xor
fwait
mov
fiaddl
and
push
cmpsl
pop
rcrl
push
pop
aas
pop
popa
das
mov
cmp
pop
jbe
mov
jg
test
sbb
lret
and
js
scas
xorb
mov
ds
lods
lods
stc
call
iret
jl
and
ficoml
mov
mov
push
push
outsl
sbb
test
pop
jmp
test
mov
xchg
jb
pop
jmp
xlat
mov
in
mov
inc
test
inc
and
sub
xchg
loop
in
dec
mov
adcl
xorl
push
adc
mov
ljmp
fistpll
insl
jno
in
pop
add
daa
xor
ret
dec
ret
push
inc
lret
jmp
mov
push
loope
fyl2xp1
jae
inc
dec
sar
ja
or
test
scas
hlt
xor
shll
or
and
pop
mov
inc
fcmovnb
ss
sub
pop
fisubs
movsb
mov
mov
jno
or
shlb
aaa
mov
or
mov
cs
mov
mov
or
xor
xchg
test
add
popa
rcr
in
jb
lds
mov
cmc
xchg
lods
mov
mov
and
push
cs
and
loope
test
inc
push
call
es
mov
dec
sbb
js
aam
in
rcll
test
into
dec
icebp
adc
shrl
push
and
inc
inc
push
rorb
pop
inc
push
jb
adc
lods
adc
cmp
ss
sbb
fwait
xor
nop
pusha
push
or
mov
call
fs
pop
or
mov
nop
jnp
lcall
dec
sub
fildl
notb
in
aam
ljmp
inc
sbb
push
fidivl
aaa
ret
movsb
xchg
dec
push
ror
lock
mov
mov
adc
inc
int3
das
mov
in
pop
mov
cmp
dec
lock
jge
xchg
push
push
xor
jge
aam
aam
ret
or
outsl
mov
dec
sti
mov
into
or
aad
idivl
lret
loope
popa
adc
jge
or
push
mul
popa
cmc
dec
sub
int
ret
adc
test
jge
push
lcall
or
or
out
movsl
mov
push
push
push
inc
rcrb
pop
push
insb
inc
adc
ret
pop
es
fimull
xor
dec
jmp
xchg
adc
out
cmpsl
das
push
mov
xor
jmp
aam
negb
mov
js
mov
mov
cmp
lods
aad
test
pusha
jecxz
jg
cld
pop
fistl
jge
dec
repz
insl
stos
stos
xlat
cmp
rclb
repz
inc
sub
xor
dec
or
in
sti
outsl
aad
inc
add
lea
insb
ja
dec
icebp
inc
rorl
enter
rcrl
jnp
push
fcmovu
mov
mov
shlb
lahf
jle
or
insl
pop
ja
js
ret
pop
mov
mov
jns
std
cmp
mov
mov
cmpl
enter
cwtl
or
push
xor
lahf
ljmp
sbb
or
jl
jle
out
cmp
xor
sbb
roll
imul
shlb
test
sbb
add
push
andl
movsb
sub
push
xchg
divb
add
ljmp
movb
and
push
sarl
push
fimull
gs
xor
or
aas
pop
call
pop
lods
xchg
test
shlb
jmp
lcall
sbb
sbb
add
inc
test
sub
mov
movsl
rcll
je
cmp
int3
cli
push
in
inc
out
pop
outsb
cmc
dec
ret
xor
movzbl
adc
adc
hlt
mov
ftst
cwtl
ret
push
mov
testl
push
fmull
sarb
sahf
jl
sub
mov
and
fisubl
cli
mov
mov
xchg
aaa
push
movsb
push
xchg
fsubp
lods
and
aas
iret
adc
add
cmc
sbb
push
push
inc
sub
add
repz
sub
adc
pop
dec
adc
aas
push
adc
mov
push
adcb
ds
xchg
sti
inc
in
int3
std
jns
cwtl
push
dec
lea
xor
cli
pop
sbb
int3
mov
imul
jo
out
ds
cmpsb
out
bound
or
out
cwtl
outsb
xchg
pop
rcl
mov
loopne
xor
cmp
cli
mov
mov
sub
int3
cwtl
jmp
faddl
pop
lea
cmpsb
movsl
loopne
inc
pop
sbb
xorl
xchg
movsb
push
fidivs
mov
gs
pop
and
jl
jmp
sub
icebp
push
jnp
jge
ss
ja
imul
out
push
dec
add
clc
lods
inc
sti
cld
out
aaa
push
fs
inc
jno
and
testb
les
sub
aam
mov
jg
add
inc
in
and
mov
mov
xorb
repnz
push
pop
aas
nop
mov
shll
ret
aam
jmp
mov
mov
cmp
adc
mov
ja
mov
pop
push
sub
das
or
lea
xchg
pushf
mov
das
add
icebp
mov
scas
xchg
cs
cmp
cs
and
inc
sub
push
add
mov
adc
inc
pop
adc
sbb
mov
push
xchg
into
sbb
mov
enter
dec
daa
fwait
je
out
pop
ja
add
push
adc
push
inc
and
test
insl
addb
jo
inc
and
loop
jecxz
pushl
scas
cltd
jl
and
jg
fdivl
mov
sub
xchg
or
xor
loopne
int3
and
sub
add
popa
cmp
verr
push
pop
sub
cltd
pushf
sbb
out
ss
out
push
xor
and
cmp
int3
or
xchg
mov
lock
mov
call
push
outsb
imul
and
inc
fs
jl,pt
push
jge
js
imul
mov
int3
es
outsb
mov
add
in
jns
roll
pop
xchg
sbb
or
push
mov
xor
movaps
push
sbb
orl
inc
xchg
adc
rcrb
pop
dec
or
mov
push
add
xchg
outsl
outsb
arpl
nop
push
fsubrp
inc
lods
stos
adc
dec
mov
les
pushf
subw
add
stos
dec
sbb
add
xchg
xchg
jl
loop
ret
fidivl
pop
jno
enter
clc
pop
fdivrp
cmc
test
cmc
xchg
mov
jl
enter
insb
clc
aas
hlt
mov
aas
push
jnp
xor
jno
mov
and
leave
pop
mov
push
rorb
cmp
or
sbb
add
cmp
mov
sti
sub
ret
xor
stc
xchg
jecxz
add
cltd
scas
push
scas
fs
xor
xchg
test
xchg
popa
inc
and
jle
mov
clc
jns
mov
hlt
out
pop
sbb
add
dec
loopne
sub
dec
jmp
loope
jp
cli
mov
or
rorl
imul
xor
ret
inc
ja
jo
sub
sub
lods
int3
sub
addl
imul
mov
mov
mov
jne
int
test
ud1
pop
mov
push
sbb
dec
imul
daa
sbb
shrl
or
int3
pop
push
or
jnp
mov
ljmp
fisttpll
push
dec
or
push
insl
repz
mov
fimuls
jmp
out
mov
hlt
insl
xor
xor
cmp
insb
idivb
jecxz
insl
jmp
out
sub
in
pop
mov
mov
mov
test
add
rorb
dec
xchg
addr16
fdivl
repnz
mov
jecxz
add
dec
xlat
outsb
repnz
or
xchg
cmp
xor
push
or
rcrl
stos
sbb
orl
lcall
inc
aam
fildll
aas
lock
nop
mov
sub
add
pop
mov
add
pop
mov
cli
sbb
das
dec
mov
mov
mov
adc
mov
xor
and
pop
pop
jbe
push
rorl
sbb
addr16
dec
aas
add
or
mov
enter
mov
jno
cmpsb
ret
aam
jno
adc
or
xor
pop
int
sbb
mov
test
dec
mov
out
in
mov
inc
popa
data16
test
fdiv
push
push
push
jae
sbb
test
xchg
aaa
cwtl
in
lea
xchg
popa
mov
ret
sbb
dec
mov
pop
das
daa
popa
in
or
test
daa
push
imul
popa
mov
scas
lcall
pop
ljmp
xor
out
sub
sub
imul
and
pop
xchg
orb
push
enter
imul
mov
jae
cmp
cltd
movb
mov
cmp
cmpsb
dec
icebp
xchg
jae
cmpl
adc
jp
fiaddl
out
dec
mov
xchg
enter
and
pop
inc
xchg
ss
sub
lret
gs
sbb
push
jnp
aam
addb
jle
push
outsb
pop
sub
and
loop
lea
test
das
mov
js
pop
adcb
cli
test
ss
test
push
es
cmp
push
mov
scas
jmp
aam
push
stc
enter
add
ja
aas
jg
mov
cltd
pop
enter
sbb
lods
mov
inc
fisttpl
xchg
push
fistl
xor
jae
lods
sub
pop
mov
out
shll
xchg
cltd
je
scas
adc
jns
stos
sbb
pusha
out
sahf
loop
rcll
push
fidivrl
mov
sahf
repnz
loop
xor
in
aam
jmp
aaa
mov
mov
mov
imul
add
mov
add
sub
daa
data16
lock
adc
or
mov
add
je
gs
sbb
dec
es
test
aaa
adc
jae
mov
repnz
movb
cli
dec
mov
ljmp
js
fisttps
mov
add
jo
add
and
adc
fs
pop
add
repnz
movsb
pop
jp
sub
lret
sti
push
sbb
gs
cmp
sub
adc
xchg
scas
test
fcoms
jmp
xchg
xchg
jb
loope
pop
dec
pop
mov
lea
xchg
sub
push
cmp
pop
out
cmp
hlt
sbb
shr
stos
pop
dec
bound
filds
pop
stos
cs
cmp
imul
adc
sub
sahf
lret
or
add
sub
jge
movsl
xor
mov
or
sub
dec
in
jnp
jle
sahf
push
inc
jecxz
fs
cmp
js
jbe
xlat
fld
add
cmp
mov
inc
xor
ds
mov
stos
xchg
imul
data16
xchg
push
inc
fwait
push
sbb
xchg
out
jmp
sbb
imulb
lcall
leave
mov
or
sbb
sbbb
jecxz
push
daa
and
and
nop
leave
cmc
mov
popf
add
mov
daa
cli
push
or
add
aam
leave
insb
clc
mov
push
shr
leave
mov
je
jg
fsub
mov
mov
add
call
fildll
in
push
mov
in
pop
dec
mov
and
sbb
popa
sbb
hlt
adc
xlat
xchg
repnz
mov
movsl
iret
mov
cmp
in
xor
adc
fwait
rcrb
sbb
mov
pop
rcl
mov
mov
inc
cmp
xor
call
xchg
dec
jno
jae
jg
mov
pusha
xchg
orb
or
mov
imull
cmp
ret
jg
cmp
ret
push
clc
subb
popa
adc
jno
adc
das
insl
and
xchg
adc
shll
inc
add
ret
fistpll
hlt
faddl
pop
test
ds
sub
jecxz
mov
and
lret
aaa
pop
sbb
das
es
in
daa
jecxz
cwtl
cmc
push
subl
ret
mov
pushf
or
call
jmp
lahf
dec
dec
scas
popf
jb
mov
sbb
out
aas
and
arpl
imul
jnp
pop
sub
dec
jle
lods
pop
cs
pop
adc
lcall
and
mov
cmp
xchg
into
fwait
jle
arpl
sti
sbb
dec
fwait
pop
xchg
inc
lret
imul
mov
push
add
push
fs
hlt
mov
sbb
cmp
fimull
ss
or
cmpsl
dec
and
cmc
sbb
insl
add
ss
sbbb
leave
push
adc
mov
cmp
pop
add
jg
pusha
xchg
jecxz
pop
movsl
inc
pop
fwait
fs
mov
loopne
stos
xor
xchg
iret
pop
mov
xchg
mov
loopne
js
decb
aas
pop
mov
mov
mov
popf
int3
pop
and
jo
sub
repz
xchg
mov
mov
sub
sbb
sbb
js
mov
xlat
sahf
xchg
cld
movsb
jnp
shll
adc
inc
inc
shlb
cmp
sub
inc
stos
insl
xchg
xchg
or
outsl
lcall
mov
inc
inc
or
mov
movsb
and
test
mov
int3
shlb
cmp
lret
and
ret
frstor
data16
mov
pop
mov
cmp
shlb
out
scas
js
mov
aam
sti
cmp
inc
mov
sti
jp
push
adc
adc
xor
call
cmp
or
xor
enter
mov
shll
aas
sarb
mov
arpl
mov
je
sahf
mov
lods
mov
mov
sti
rcr
pusha
cmp
ret
pop
cli
and
inc
or
iret
pusha
scas
ret
adc
dec
test
std
mov
push
fadds
mov
xchg
cli
insl
xchg
adc
sub
pop
in
lock
fiaddl
mov
test
cmp
jl
add
cwtl
fstpl
lods
js
mov
inc
pop
jge
bound
or
out
push
sub
rorb
fcoms
cmp
insl
rcr
add
push
in
add
xchg
fwait
xchg
fscale
lods
sub
or
push
cmpsl
lret
roll
cmpsb
jmp
mov
xchg
test
cvtpi2ps
xlat
inc
sub
fs
sarl
sbb
xor
mov
jp
push
std
aaa
dec
dec
inc
mov
cmpb
fwait
pop
fucomi
je
mov
push
push
sbb
scas
icebp
fstpl
call
push
cmp
and
popf
jb
std
sub
cli
mov
rcll
add
xchg
insb
cmpsb
add
ljmp
jne
lcall
sti
adc
add
xchg
insb
cmp
movsl
mov
pusha
jae
jmp
mov
adc
cli
mov
dec
ret
sub
daa
xchg
push
scas
xchg
dec
addr16
lods
add
mov
adc
add
shrb
or
pushf
xchg
mov
mov
in
pushf
sub
sbb
xor
jp
or
mov
lods
jmp
add
scas
or
jo
lret
sub
dec
jecxz
into
shlb
clc
dec
sub
loope
push
andl
push
in
test
sbb
sbb
aaa
rcll
daa
pop
mov
lcall
xchg
sbb
pusha
setle
dec
clc
daa
in
sbb
mov
aam
mov
or
xchg
es
cli
add
icebp
clc
cmp
into
cld
lods
in
fadds
je
xchg
clc
adc
std
ss
test
xchg
xchg
mov
mov
aam
std
ret
out
das
outsl
or
adc
scas
push
or
inc
popf
sbb
push
sub
sbbb
mov
mov
add
sbb
es
mov
test
inc
cmp
xor
rep
iret
mov
jb
hlt
loop
iret
aam
insb
pop
iret
mov
addr16
int3
rcrl
sub
lods
dec
push
add
mov
cs
cmpsb
repz
test
mov
add
imul
push
mov
scas
pushf
xor
mov
mov
xchg
and
jmp
jae
push
ss
pop
mov
push
mov
cmp
data16
cli
mov
mov
aas
inc
sbb
arpl
loope
xor
xchg
mov
sbb
mov
xor
sbb
sub
xor
adc
cmc
push
dec
stos
inc
loop
pop
mov
cwtl
in
sbb
out
push
jns
pushw
js
lods
pop
xorl
xor
pushf
adc
loope
dec
cld
cmp
test
clc
inc
and
jo
call
xor
inc
and
add
outsl
add
jns
je
into
sub
cmpsb
shll
sub
xchg
jnp
sbb
cmpsb
pop
lods
or
aam
and
or
orl
mov
std
dec
test
je
arpl
js
inc
mov
inc
out
test
mov
mov
in
mov
sbb
or
push
inc
enter
insb
fs
cltd
cmp
dec
testb
loop
inc
cmpsl
inc
mov
jmp
xchg
iret
outsl
sbb
mov
movl
push
mov
idivl
sbb
sarb
sbb
cmp
mov
je
dec
ret
inc
xchg
xor
imul
rcl
or
cmpsb
inc
xchg
and
add
pop
push
lret
lcall
daa
adc
push
jb
pop
out
ret
dec
psllq
inc
shlb
fsubs
adc
stos
and
mov
mov
fsts
dec
add
mul
movsb
int
dec
mov
cld
sti
cwtl
pop
scas
nop
inc
adc
pop
pop
lret
and
lret
xchg
xchg
and
loopne
int3
jno
popa
imul
in
pop
jne
adcb
jne
or
dec
icebp
cwtl
imul
icebp
pop
and
hlt
in
dec
sub
ja
mov
mov
fisttpll
mov
outsb
inc
sub
aam
movsl
mov
rorl
push
and
sbb
andb
push
repnz
xlat
adc
fcmovb
sub
repz
mov
xor
xor
repz
pop
mov
adc
jp
mov
xorb
mov
xchg
sbb
push
sbb
sub
sbb
push
or
cld
xchg
lea
inc
sbb
and
sbb
js
inc
mov
enter
xchg
data16
mov
sub
ljmp
das
pop
lock
leave
scas
fiadds
movsb
cmp
ret
xchg
and
shlb
icebp
lods
pop
dec
mov
mov
pop
nop
xor
stos
cmp
scas
jmp
add
add
cmpsl
out
add
push
idivl
inc
inc
inc
loopne
push
xchg
jge
or
jne
out
or
rclb
adc
or
adc
mov
iret
xchg
jecxz
push
and
inc
sub
mov
mov
jae
ja
jecxz
dec
in
pushf
lret
icebp
push
add
dec
lods
dec
mov
mov
and
sahf
mov
js
rcll
pushf
jno
inc
jl
mov
jbe
daa
orl
aad
in
mov
mov
mov
xor
jecxz
insb
sub
mov
mov
jne
mov
push
xor
push
into
inc
mov
sub
hlt
stos
scas
int3
ret
inc
mov
repnz
les
cwtl
into
mov
pop
shr
scas
mov
shlb
mov
pop
shll
out
and
insb
xchg
cmp
loopne
es
daa
and
mov
push
jecxz
repz
push
sbb
inc
cwtl
xchg
repnz
aam
leave
nop
push
aad
enter
sahf
ja
repnz
fistpl
shll
pop
inc
mov
mov
fmuls
jnp
jecxz
dec
mov
insl
mov
imul
lcallw
daa
cltd
inc
das
xchg
pop
dec
jle
jcxz
sub
mov
push
ja
mov
xchg
arpl
adc
lds
xlat
movsb
enter
or
xchg
push
xor
cli
shlb
sbb
pusha
repz
xchg
jl,pn
push
xchg
push
stos
mov
mov
nop
movsb
jne
test
pop
xchg
inc
in
xchg
cmpsl
jmp
or
xor
mov
pop
sahf
sub
xor
lock
bnd
imul
ja,pt
loope
pop
mov
xor
inc
aaa
sbb
mov
insb
mov
outsl
pop
jns
popf
out
sub
in
cmp
cmp
ja
push
cmpb
test
add
push
hlt
pop
push
mov
add
stos
push
out
jle
ds
dec
xchg
loop
mov
test
cli
nop
or
icebp
ret
stc
xor
cmc
int3
mov
add
mov
fsts
push
add
ja
sbb
dec
out
jo
aam
rorl
mov
xchg
mov
and
or
mov
mov
xor
mov
loope
ja
mov
pop
fisttpl
test
mov
mov
call
movsb
xor
lret
xor
pop
inc
fcos
xor
mov
pop
insb
in
daa
adcl
into
push
loopne
lcall
lock
popa
adc
dec
inc
or
loope
sub
ret
xchg
jnp
push
pop
jae
fs
mov
rcrl
cmpsl
xchg
and
or
pop
xor
adc
fs
loopne
xchg
or
pop
sub
ret
adc
mov
mov
dec
push
dec
push
inc
jge
push
out
pop
jp
sub
and
in
hlt
notb
sbb
push
clc
out
mov
sub
cld
fisttpll
adc
mov
fcompl
jmp
sbb
leave
stc
jge
pop
testl
sub
dec
jg
cmpsb
adc
outsl
fisttpll
aas
sbb
xor
push
bound
mov
xchg
jns
xor
mov
jns
cmp
shrb
movsb
or
mov
pushl
inc
mov
in
mov
mov
adc
add
xor
sbb
sub
xchg
and
sahf
bound
rep
mov
jmp
jne
pop
mov
fbld
push
int3
add
inc
push
scas
push
dec
mov
movsb
push
pop
insb
jmp
lods
pusha
test
adc
sbb
add
fcomps
or
dec
jg
jb
mov
xor
push
loop
pusha
mov
jle
push
cmp
or
lret
das
imul
sbb
nop
and
push
pop
or
adc
dec
mov
scas
inc
js
fcomps
rcrb
mov
cli
sub
bound
sarl
lds
je
lods
xor
push
xor
xchg
decl
adc
sbb
rcll
fstps
pop
jo
sub
add
ss
imul
dec
arpl
sbb
mov
adc
and
xor
loopne
test
add
xor
ja
cwtl
mov
fwait
and
push
int3
pusha
leave
shlb
and
aaa
cli
mov
push
xchg
jecxz
add
add
cmp
pushf
push
cltd
and
in
shlb
sbb
adc
mov
or
or
in
pop
data16
dec
or
dec
push
or
iret
mov
cwtl
clc
loope
fsub
sbb
mov
inc
adcl
pop
lods
aad
cli
aas
aaa
xchg
imul
mov
repnz
push
and
out
and
iret
dec
lahf
movb
sti
and
or
sub
cmp
pop
dec
dec
cli
jecxz
in
lods
xor
sub
mov
pusha
and
mov
dec
cld
pushw
cmp
cld
fstpt
pop
fwait
jnp
xor
push
xor
push
out
movsl
sbb
push
lods
jp
cli
xor
inc
dec
cmp
mov
int3
call
inc
cmp
gs
int3
in
daa
mov
out
or
xchg
popa
lahf
inc
cmp
outsl
and
lea
fs
and
in
ds
mov
cmc
dec
add
mov
clc
xor
push
jle
fdivrp
sub
sub
sysenter
aaa
cmp
test
fistps
lahf
mov
js
sbb
lods
fisubrl
add
and
sub
les
xor
movsl
stos
mov
xchg
and
push
mov
inc
inc
xor
aaa
pop
mov
lahf
fdivrl
scas
inc
lret
mov
leave
arpl
pushf
xbegin
inc
imul
pop
in
adc
push
ror
and
jg
sub
mov
loop
mov
add
inc
mul
fs
pop
and
sub
movsb
stc
je
mov
jb
mov
xchg
pop
xor
mov
inc
rcr
xor
pop
outsb
pop
push
lds
mov
cmpb
mov
pop
rcl
sbb
add
enter
inc
movsl
mov
mov
dec
pop
push
mov
negl
push
je
in
je
aad
xorb
fldenv
adc
dec
test
and
push
ljmp
fscale
dec
mov
add
and
mov
loopne
adc
dec
testl
iret
mov
nop
call
leave
loopne
adc
enter
or
xor
mov
xchg
shl
cmp
hlt
push
andb
stos
fidivl
jnp
inc
rcll
int
movb
xor
orb
mov
lcall
cmpl
cmp
jo
inc
daa
insl
mov
push
add
xor
fst
cli
jmp
push
rcrl
fstps
test
adc
fistps
lcall
pop
jle
inc
pop
cld
nop
xchg
out
fcom
mov
dec
dec
adc
pushl
call
fwait
mov
leave
fldl
mov
mov
and
inc
jne
daa
or
mov
and
addr16
in
add
jnp
sub
inc
jmp
popf
lcall
mov
mov
ja
add
insl
in
ja
mov
push
loopne
test
or
movsl
pop
pop
jge
push
lcall
sub
xchg
sbb
jns
aas
cmp
inc
cli
cmp
js
shlb
push
xchg
sbb
mov
push
arpl
pop
sub
ja
mov
pop
pop
or
das
jge
mov
sub
or
mov
mov
push
inc
sbb
ret
push
xchg
pushf
or
pushf
hlt
pop
xlat
push
pop
xlat
jb
xchg
jge
rcrb
imul
aam
pop
cmpsl
in
adc
xchg
aas
sbb
and
jnp
addl
mov
ss
imul
iret
push
dec
mov
xor
mov
rol
mov
scas
jecxz
mov
mov
test
movsb
repz
clc
repz
lea
xor
jmp
push
pop
inc
scas
add
les
outsl
lods
push
mov
add
ficompl
pusha
pop
inc
add
push
mov
pop
mov
test
pop
movsb
add
mov
ret
popf
mov
stos
jle
test
mov
mov
repz
jmp
sbb
mov
pop
gs
rcrb
nop
loop
imul
lret
fdivrl
mov
cmpsb
popf
stc
fisubs
sti
mov
ja
push
inc
cmc
jmp
js
ffree
adc
mov
nop
enter
push
push
xchg
and
out
add
or
insb
xor
test
aam
fwait
sbb
fmuls
or
mov
jecxz
cmp
xorb
lret
das
test
dec
mov
add
shlb
js
push
dec
sub
mov
in
lods
and
mov
imull
rcrl
shr
ljmp
inc
jg
dec
daa
movsl
rolb
jg
lahf
push
mov
or
dec
clc
cmp
into
jg
sbb
cltd
jl
ja
int3
add
into
dec
jnp
or
pop
loopne
imul
mov
mov
or
add
or
je
adc
in
cltd
dec
mov
sahf
lret
mov
and
mov
fcoms
les
cmp
add
mov
add
inc
shl
sbb
xchg
outsl
lahf
addr16
enter
sti
fbld
orl
hlt
sub
inc
int
pop
dec
add
add
lock
mov
inc
push
and
mov
xlat
sub
mov
insb
loopne
scas
xor
add
ss
cs
popa
sbb
add
jl
cmp
cwtl
pushf
sub
ja
stc
or
fcomps
xchg
incl
inc
cmp
mov
mov
loop
arpl
dec
idivb
clc
lahf
mov
loop
aam
fidivrl
add
mov
inc
std
imul
pop
or
ss
ret
sub
rcll
gs
mov
add
sub
push
cmp
lock
dec
sbb
je
data16
adcb
and
sbb
outsb
push
mov
mov
xchg
xor
scas
push
mov
out
ret
gs
ds
or
inc
and
je
inc
fs
adc
jge
gs
push
xor
dec
rol
jle
dec
pop
or
out
sbb
mov
lea
inc
cs
or
cmp
icebp
inc
ja
pop
jns
addb
dec
fidivl
sub
cmpsb
or
fsts
fwait
das
leave
push
and
stc
ret
pop
push
rcl
bound
cld
jge
xor
outsb
mov
shlb
arpl
pop
push
dec
mov
bound
test
and
xchg
idivb
and
andb
bound
enter
mov
pop
jae
pop
enter
sub
pop
cmp
cwtl
fbstp
dec
mov
sbb
cmp
xor
xchg
mov
fucom
jne
or
and
adc
sahf
cmp
push
test
and
jno
pusha
cmpsl
dec
mov
hlt
das
push
loop
and
inc
xchg
jge
ret
jo
inc
lret
ss
cmpsl
sbb
lahf
mov
dec
xchg
imul
xor
lcall
lds
mov
push
inc
xor
scas
inc
push
insl
push
push
xor
loope
push
mov
xlat
inc
mov
xor
repz
ljmp
sbb
pushf
jl
rcll
hlt
jnp
fwait
cmp
mov
and
inc
ljmp
shr
arpl
mov
je
pushf
jbe
lods
pop
fwait
adc
mov
inc
mov
adc
cmp
inc
stc
push
dec
xchg
inc
fucomip
adc
ja
sahf
sarl
adc
xchg
addps
movsb
mov
cld
sarl
cmp
add
push
inc
add
ljmp
testl
rcrl
aam
pop
mov
and
ret
jecxz
add
add
inc
test
bound
or
add
pop
mov
xor
push
icebp
mov
sbb
mov
mov
cwtl
in
je
das
jp
push
push
xchg
out
mov
dec
mov
jecxz
dec
push
aaa
mov
pop
or
sub
pop
jmp
cmp
xchg
mov
inc
jo
sbb
leave
or
daa
das
lcall
jbe
dec
inc
xor
xor
cmc
cltd
sbb
xchg
out
adcb
xchg
mulb
mov
loope
and
shrb
mov
insl
sbb
movsl
push
fnstcw
pop
sbb
push
mov
push
sub
dec
rcrb
lock
ret
cmc
test
sbb
das
mov
push
adc
push
sbb
xor
push
push
push
add
sub
out
or
sub
pop
inc
mov
and
or
lret
hlt
jle
insl
mov
jge
test
inc
cmp
repz
jno
push
pusha
loopne
shlb
mov
loopne
pushf
add
lock
fsubl
or
push
arpl
jno
mov
sti
xchg
mov
adc
and
jle
fistpl
adc
and
jne
cmp
daa
mov
testb
shrl
insl
jns
jo
xor
push
pushf
push
add
adc
mov
mov
rolb
dec
mov
mov
rol
pop
arpl
test
mov
enter
ja
std
aas
and
sub
clc
test
fcmovu
std
es
or
aam
lods
pop
mov
mov
inc
daa
adc
lcall
or
lcall
pushf
sbb
mov
fs
lret
mov
jge
pop
lds
ret
lods
sbb
cmc
xchg
sbb
add
mov
rclb
es
inc
in
int3
jns
pusha
iret
fdivp
sub
int3
aad
mov
mov
pop
mov
js
insb
and
out
xchg
xchg
stos
jp
sub
ret
aam
out
sbb
test
mov
out
add
adc
outsl
sbb
add
inc
adc
xchg
xchg
rorb
jne
cmp
cwtl
mov
lret
jae
and
cltd
pop
and
sarl
mov
adc
rorl
daa
pop
lods
loop
add
popf
pushf
pop
jge
and
xchg
and
ljmp
and
mov
mov
pop
les
xor
mov
int3
cmp
dec
add
mov
ljmp
sub
mov
mov
dec
adc
cmp
int3
ret
jmp
inc
add
mov
push
adc
sbb
ss
fsubl
lahf
cmpsb
push
push
mov
pop
dec
add
push
movsl
jb
loope
mov
fdivrl
daa
push
xor
mov
pop
fs
inc
mul
pop
pop
mov
sbb
out
int3
pop
sbb
fnsave
jo
add
loope
imulb
dec
rcrb
sahf
orl
movsb
pushf
enter
jp
xchg
sbb
ret
aaa
pop
jl
scas
jo
inc
out
movsb
and
cltd
les
inc
inc
sahf
push
fst
aas
push
xor
enterw
test
xchg
imul
jb
pushf
mov
aad
xchg
fs
fstl
das
mov
push
xor
dec
add
mov
dec
in
cld
cmp
jbe
sub
and
add
jno
movsl
or
shlb
push
sbbb
jl
sub
mov
cmp
mov
pop
sti
adc
pop
in
insl
sti
mov
jns
inc
bound
insl
pop
pushf
mov
and
jae
out
mov
jl
test
xor
inc
sbb
mov
daa
sbbl
and
jae
mov
cmp
ljmp
push
mov
push
pop
add
shlb
pusha
mov
adc
pop
cwtl
jl
sub
mov
push
setno
adc
jle
bound
xor
mov
cmp
cmp
add
test
mov
cs
icebp
dec
pop
pop
jg
jge
clc
aaa
inc
mov
call
cmc
cltd
dec
push
dec
shl
sti
push
mov
hlt
into
das
sub
sub
out
xchg
dec
push
adc
cmpsl
in
xor
jbe
sarb
xor
ds
int
mov
dec
gs
insb
out
adc
or
sub
mov
loopne
pop
or
mov
cmp
mov
roll
imul
sub
into
std
pop
xchg
xor
xchg
pop
imul
add
lock
sbb
das
mov
jg
cmc
inc
dec
data16
fs
xchg
int3
xchg
inc
push
add
test
lcall
icebp
jae
ljmp
mov
insl
adc
mov
in
mov
sub
dec
mov
cmp
das
dec
jno
sbb
jge
pop
push
in
push
dec
out
int
adc
jb
xchg
pop
push
fldln2
xchg
repnz
pushf
xchg
jo
pop
aam
or
dec
mov
xor
test
outsb
pop
loopew
jne
push
subb
dec
inc
in
jb
dec
jp
sahf
mov
mov
out
and
movsl
add
xchg
pop
insl
je
and
mov
loope
push
psllq
and
inc
xchg
mov
mov
pop
jnp
xchg
insb
xchg
sahf
rclb
cwtl
std
push
push
add
imul
cmp
push
lret
cmp
push
and
jecxz
pop
lret
add
jb
xchg
inc
icebp
jecxz
sub
pusha
lcall
xor
test
mov
std
adc
jmp
insb
push
push
rolb
adc
xorb
je
push
mov
or
inc
add
mov
jne
inc
cmp
and
inc
cmpsl
out
cmpsl
arpl
movsl
fwait
dec
push
insl
sub
lahf
dec
roll
add
cwtl
es
lahf
sub
mov
and
cmc
fbstp
xchg
gs
movsl
add
int3
pop
mov
test
sub
das
xor
lock
push
xorl
std
or
bound
pusha
pusha
shll
push
vphaddbw
movsb
sbb
dec
sti
fsubr
lods
std
push
subl
cmp
push
fldl
imul
inc
jo
and
xchg
inc
negb
mov
testb
pop
inc
dec
xchg
fs
pushf
test
int
clc
mov
shlb
mov
xlat
push
mov
mov
fnstsw
fmul
cmp
aad
fs
mov
pusha
xchg
repnz
and
repz
fildl
inc
pop
arpl
aam
lcall
adc
cltd
insl
push
es
cmp
rorb
sbb
push
or
sbb
push
rcr
mov
inc
mov
or
mov
mov
lret
outsb
out
dec
rcrb
leave
test
xchg
fists
jns
sti
popf
pop
mov
sbb
jmp
push
push
xchg
dec
xchg
mov
js
aaa
loop
popf
inc
scas
sbb
adc
mov
jp
shr
mov
mov
das
mov
call
or
xchg
push
fnstenv
and
sti
inc
mov
out
fdivr
pop
dec
fstpt
pop
xchg
mov
inc
fsts
xor
out
leave
mov
mov
jo
xor
push
mov
mov
push
les
sub
and
ja
das
sub
ljmp
mov
and
shrb
xchg
frstor
adc
and
andl
mov
and
pusha
sub
dec
das
xchg
xor
out
cli
add
and
cmp
dec
jmp
push
jae
add
sub
repnz
hlt
dec
dec
xchg
mov
xor
in
and
bound
push
sbb
arpl
xchg
xorb
aas
sbb
das
and
lea
lods
std
add
fwait
lahf
pop
aas
mov
add
cld
xor
xor
sub
pop
adc
inc
mov
mov
mov
adc
mov
adc
mov
sbb
or
mov
inc
and
xor
add
icebp
fistps
pop
test
or
mulb
test
test
and
icebp
lahf
xorb
inc
jnp
add
test
inc
adc
das
mov
ss
aad
cmp
mul
sbb
scas
cmpsb
mov
cld
rolb
mov
rcrl
and
xor
es
insb
inc
test
fs
lcall
pop
xchg
add
imul
jbe
lahf
fisubl
dec
jns
push
shll
mov
cmpsl
and
sarl
notb
xor
mov
pop
pop
popf
orl
xor
sub
add
mov
lahf
mov
add
sub
dec
sbbb
pop
pop
cmp
adc
scas
sub
cli
fidivrs
sti
push
rcrl
sub
js
hlt
push
xor
js
in
ljmp
pop
or
and
inc
add
shrl
stos
enter
pop
movsb
insl
pop
ss
imul
lret
mov
cmpsl
lds
bound
shlb
xchg
lds
push
int
inc
sub
testb
repnz
push
sbb
xlat
imul
add
cmpsl
leave
aam
dec
fbstp
out
and
shlb
fdivl
jnp
cmpsl
mov
xchg
pop
sahf
jge
aam
movsl
div
push
jle
inc
addb
leave
sbb
insl
les
scas
fidivs
nop
mov
movsb
cmpsl
mov
aas
mov
adc
loopne
push
fsts
xchg
mov
add
push
daa
jo
push
xchg
jg
mov
pop
addr16
insl
in
mov
fs
push
push
outsl
andb
push
jp
push
int
rorl
jecxz
add
movsl
push
popa
xlat
xchg
adc
dec
inc
jae
loop
push
push
mov
xor
push
jae
cld
jmp
scas
les
and
jl
sbb
fcmovne
jp
dec
popa
jge
pop
pop
xor
lret
pop
stc
cltd
mov
inc
das
push
mov
gs
cwtl
ss
pop
enter
outsb
adc
insl
in
adc
xor
sti
jl
hlt
out
add
lahf
pop
add
stos
int
push
mov
cmpsl
and
fdivrp
shlb
test
movsl
adc
into
push
mov
leave
fucomip
cmpsl
pop
or
mov
leave
adc
cmp
push
jmp
in
dec
scas
adc
cmc
lea
lret
add
xor
or
inc
inc
push
xor
cmpsb
xchg
push
jmp
or
repnz
lret
subps
lret
scas
jmp
test
lret
sbbl
xor
mov
adc
sbb
xchg
push
int3
testl
cmpl
sbb
loop
jp
push
mov
fwait
insb
cs
outsb
fwait
lods
out
sbb
dec
xor
rorl
xchg
jl
out
mov
jae
int3
add
dec
cmpsb
dec
idivl
ret
and
mov
adcb
int3
in
pusha
test
lods
cmp
addb
clc
shl
cmpb
mov
xchg
add
fstl
pop
sbb
sbb
mov
lret
pop
jp
sbb
inc
daa
pop
add
inc
mov
jecxz
add
mov
mov
loope
andl
fldcw
mov
sbb
and
pop
pop
adc
add
mov
rcrl
call
sbb
fs
roll
stos
or
popl
jne
sub
rcrb
xor
leave
das
lea
shll
mov
xchg
aas
pop
fmuls
mov
shl
clc
fmuls
lret
aam
lcall
adc
insb
sub
and
fsubr
test
push
adc
loopne
rsqrtps
xchg
adc
add
cli
adc
mov
in
mov
fiaddl
fistpll
les
lea
adc
hlt
mov
and
xor
add
jl
loop
into
sbb
or
jg
sub
test
xor
cmpsb
pop
fdivrp
lret
mov
in
adc
inc
out
sub
jl
movsl
out
adc
cmp
lahf
mov
loopne
je
pop
movb
sbb
lcall
rclb
and
mov
and
leave
popf
sub
dec
xor
cmc
xchg
insb
push
fxch
mov
les
pop
mov
or
sub
mov
in
sub
add
adc
push
xchg
popa
xchg
iret
cld
xchg
shlb
xchg
jo
xorl
jle
cmpsl
cs
adc
movsl
push
inc
xchg
xchg
aad
xchg
movsl
fsts
jb
loop
jo
scas
testb
adc
mov
sub
iret
insl
out
push
aam
fiaddl
sub
mov
enter
xchg
jnp
jmp
inc
out
or
mov
insb
fnstsw
jecxz
cli
dec
push
jne
iret
inc
mov
ds
inc
in
pop
lods
scas
mov
movsl
loope
xor
lret
fnstenv
xchg
mov
out
push
jmp
popf
dec
mov
out
pop
popf
and
pop
movsl
mov
mov
jl
aas
and
lods
sub
xchg
inc
dec
pop
std
in
xchg
shll
in
inc
scas
ss
mov
stos
xchg
sbb
add
add
in
jno
daa
daa
pop
test
push
aas
inc
or
lret
lods
ss
outsl
testb
push
xchg
push
and
pop
mov
adc
test
lcall
je
pop
xor
test
add
js
mov
mov
mov
outsb
daa
lds
or
jge
dec
add
es
mov
mov
sahf
leave
jl
xchg
dec
adc
pop
and
in
out
cmpsl
repz
lcall
jg
dec
pusha
dec
inc
adc
mov
add
pop
jecxz
push
sbb
mov
dec
test
cltd
ss
fists
scas
shrl
sub
lcall
fldt
stos
rol
sub
iret
inc
es
movhps
pushf
test
mov
adc
daa
push
mov
cmp
push
jecxz
mov
jno
sub
lahf
lret
aad
loop
pop
lods
and
mov
mov
fwait
ds
pop
sbb
int
pop
and
mov
sub
pop
mov
or
jns
adc
outsb
cltd
out
sbb
sti
add
clc
daa
lea
test
xor
scas
movsb
sub
int
call
lahf
xchg
insb
ficomps
lds
inc
insl
push
or
jns
idivl
mov
std
and
inc
jg
push
ret
inc
imulb
loop
cmpsl
dec
inc
and
int
sti
dec
popf
or
cmp
sub
jbe
mov
push
push
ljmp
inc
sbb
xchg
cmpsl
pop
sbb
shlb
cmpsb
cmp
jns
push
xchg
addl
sbb
rcrb
dec
leave
mov
cmp
stos
push
ljmp
lahf
addb
hlt
jnp
lcall
or
push
pop
add
lods
or
push
fisubrs
cmc
cs
cmpsl
test
cmp
repnz
jecxz
or
dec
movsb
ds
pop
add
aam
sbb
xchg
xchg
sbb
lds
mov
or
sub
cmp
neg
pop
mov
add
add
out
out
and
mov
xchg
test
clc
ja
loopne
sbb
std
mov
jle
loope
lahf
test
cmpsl
sub
aas
jnp,pn
stos
int
cltd
mov
push
push
cld
mov
mov
aad
jg
repz
gs
insb
cmpsb
mov
or
das
ss
callw
movsb
mov
adc
mov
jle
pop
mov
jle
sub
mov
stc
pushf
sub
lcall
adc
mov
out
mov
mov
push
std
add
sbb
imul
mov
into
adc
pop
push
cmp
rcrb
filds
in
pushf
pop
fwait
jg
sarb
lahf
popf
lret
jb
jge
ret
add
push
outsb
sub
rcrb
add
sub
xor
jp
imul
jnp
inc
xlat
pop
push
mov
jecxz
sbbb
jno
sub
xor
daa
push
add
mov
sbb
push
mov
imul
jbe
or
add
lods
in
mov
lret
mov
sarl
mov
aad
add
subl
push
dec
pusha
push
mov
orl
or
cmp
mov
in
xchg
pop
inc
mov
addr16
stos
fcomps
mov
cmp
clc
leave
fcomps
sub
push
ds
lods
or
cmp
adc
outsl
mov
sahf
cli
xchg
dec
adc
popa
test
iret
xor
fcompl
ja
popf
adc
mov
xor
inc
lods
xchg
fimull
dec
and
sub
add
mov
loopne
push
pop
idivl
add
push
idivl
push
ficoml
leave
out
fwait
push
xor
add
jo
mov
rorb
arpl
fldt
enter
out
xchg
and
fwait
xor
call
mov
lea
mov
outsb
das
dec
pushf
mov
into
lahf
mov
mov
pushf
mov
jae
xchg
jns
loope
test
xchg
inc
ret
fldt
mov
mov
cltd
ret
pushl
lret
iret
xor
add
or
mov
outsl
push
jae
and
cmp
cmp
jle
jae,pn
lcall
mov
and
add
mov
imul
xchg
leave
push
mov
fsubrp
sbb
add
mov
cmp
xor
outsl
inc
loopne
je
aad
es
ljmp
adc
cwtl
out
cmp
popa
jle
popf
xchg
ror
aas
imul
mov
test
jle
adc
rol
cmp
inc
mov
aaa
adc
and
push
xchg
adc
pop
mov
cmc
cmp
push
cwtl
call
arpl
push
adc
dec
jp
lcall
push
std
sbb
test
mov
sbb
push
cmp
femms
sub
insl
repz
mov
push
out
arpl
inc
scas
filds
add
imulb
addb
inc
js
lea
push
into
dec
adc
scas
add
xchg
fildll
mulb
fwait
sub
dec
push
icebp
ljmp
cmp
mov
sahf
push
inc
add
cmp
push
lahf
orb
cmc
push
mov
mov
mov
xchg
stos
cwtl
pop
dec
mov
add
pop
outsb
aam
mov
xchg
push
test
lret
sti
lods
int3
icebp
insb
sahf
inc
int3
xchg
adc
iret
inc
js
xlat
adc
jge
add
sahf
sub
dec
cmpsl
cmc
add
cli
xchg
xor
test
ljmp
nop
push
xor
pushf
mov
sub
dec
xchg
cld
test
dec
jmp
inc
cmc
mov
pusha
add
das
add
pop
xor
lock
ret
mov
pop
outsl
icebp
mov
mov
dec
jmp
call
inc
int
insb
mov
inc
sub
mov
out
lret
inc
mov
mov
in
mov
pop
xor
push
sub
pop
sub
in
xchg
xchg
push
sbb
cmpsl
push
repz
mov
aaa
adc
std
popf
xchg
movb
adc
arpl
mov
mov
xlat
sarl
ds
imul
pop
hlt
hlt
xor
stc
adc
or
subl
pop
mov
ret
movb
or
jae
inc
mov
rorb
inc
adcb
fidivrs
fistl
xchg
push
jb
mov
inc
ficoml
ret
ljmp
in
add
cmp
mov
pop
mov
popf
stos
imul
push
ja
jl
or
or
mov
mov
lret
push
sbb
pop
dec
fidivs
sub
pop
pop
out
rcr
jecxz
flds
add
xor
sub
imul
filds
pop
jbe
mov
dec
xchg
mov
dec
xor
lret
sahf
out
in
stos
rcll
jp
sub
test
jmp
scas
shlb
add
scas
sahf
into
adc
xor
jp
mov
sub
sti
cmpsl
in
mov
dec
xchg
notl
clc
pop
mov
pop
inc
lcall
outsb
pop
test
dec
rolb
imul
out
sub
shrb
and
into
cmp
repnz
inc
pop
call
bound
testb
inc
std
fsubrl
push
call
cmp
iret
fisubrl
insb
cmc
mov
xchg
xor
outsl
add
mov
dec
outsb
scas
pop
addb
sub
pop
jge
daa
loope
pop
sub
jl
push
push
repnz
insb
adc
das
mov
xlat
mov
xor
decl
cmp
mov
cmp
cltd
push
sarb
sbb
pop
add
pop
in
movsb
iret
push
in
dec
clc
cmp
jg
sub
out
or
pop
fsubrs
shlb
adc
inc
cmp
xor
push
cmp
mov
out
testl
and
rolb
dec
iret
cs
fsubp
test
xchg
outsb
sbb
hlt
mov
lea
mov
sarl
and
mov
add
mov
mov
inc
push
or
rcl
sub
pusha
mov
mov
sbb
cs
lcall
fs
lret
imul
push
inc
fwait
adc
cwtl
cs
xor
inc
insl
add
or
lods
iret
sub
add
ficoml
popf
lea
stos
das
fmuls
push
into
fists
push
xor
sbb
sahf
loopne
out
adc
loop
or
push
cmpsb
fldcw
mov
ss
scas
lahf
shlb
setp
js
aam
icebp
pop
loop
add
jb
sbb
pop
inc
adc
std
lcall
mov
xor
sbb
lods
rorl
cmpsl
jb
fldenv
jo
dec
lret
mov
lcall
in
arpl
nop
or
orl
inc
adc
jnp
xlat
movsl
mov
out
call
push
adc
mov
sbb
mov
addr16
rcr
mov
in
inc
in
out
icebp
mov
in
add
aam
imulb
movsl
adc
jns
sbb
cmp
movsb
cmp
cli
lods
sbb
mov
mov
in
les
scas
adc
cmp
repnz
jmp
sbb
sbb
push
loopne
mov
test
fs
popf
ret
or
insb
push
pop
sbb
cmpsl
gs
sub
clc
jae
int3
adc
loopne
cld
xchg
out
stc
mov
push
or
dec
popa
fcoml
imul
cld
jle
inc
xor
mov
xchg
lods
inc
jne
test
pop
jno
rclb
jge
inc
adc
movsb
test
push
inc
dec
nop
sub
sarb
jns
pop
imul
das
es
xor
stc
int
enter
loope
jecxz
in
lea
push
push
push
push
add
xchg
pop
pop
xchg
sbb
in
daa
dec
add
push
xchg
dec
gs
adc
pusha
xor
adc
sub
call
adcb
jle
out
and
lds
add
push
dec
xor
mov
fstl
mov
push
mov
sub
lods
jge
xor
dec
push
pop
addl
aaa
dec
gs
imul
psllq
push
pop
mov
dec
cmpsl
cmp
subl
adc
test
pop
out
iret
xchg
xchg
fdivl
ret
test
and
mov
push
rol
lods
dec
or
int
push
dec
xchg
mov
pop
jno
pop
movsb
add
int3
xor
popf
mov
cltd
inc
jmp
mov
adcb
or
sahf
ret
cld
pop
xor
pop
lods
dec
sbb
cltd
addb
xchg
inc
sarl
or
jo
sahf
inc
lret
cmp
fistl
cli
or
rcrb
dec
orl
add
jg
xor
cs
shrl
push
lock
push
in
jmp
icebp
test
adc
add
lock
lret
jo
xor
add
inc
push
subb
sbb
stos
repz
and
sub
xchg
jns
mov
inc
cmc
rol
fidivrs
gs
data16
xor
jge
xchg
push
cmp
mov
pop
pop
je
notb
xor
dec
cs
lds
fcoms
sbb
les
push
sub
daa
js
pop
div
push
mov
xor
pop
adc
hlt
sbb
xchg
scas
imul
inc
test
repnz
gs
das
divl
jb
bound
imul
jne
insb
sbb
test
mov
pop
push
mov
aaa
js
into
popf
jo
push
das
mov
ja
dec
push
dec
icebp
movsb
xchg
shrb
fcomps
ret
mov
and
aaa
outsb
or
inc
scas
cmp
pop
jb
pop
inc
mov
push
jnp
mov
sti
dec
aad
stc
outsl
push
addb
adc
aas
insl
and
sbb
xor
faddl
stos
xchg
mov
pop
cli
pop
push
adc
sbb
outsb
pop
cld
adc
ret
push
and
xor
sub
dec
out
adc
shr
mov
adc
mov
and
add
sbb
rol
shrl
iret
sbb
cmpsb
xchg
out
pushf
push
add
jl
outsl
cmp
rcr
clc
mov
inc
lods
dec
xlat
icebp
lea
jle
mov
pop
dec
jae
jne
push
icebp
in
mov
cwtl
cmpsb
inc
stos
adc
cmp
adc
adc
add
dec
movsb
gs
enter
cmp
dec
sahf
fs
mov
pop
cmpsl
stos
in
call
rolb
mov
lahf
clc
nop
clc
push
into
pop
call
test
mov
push
jns
popf
pop
into
repnz
shrl
jbe
or
lahf
pop
xchg
lds
push
adc
imul
aam
shll
mov
and
in
inc
cmp
fwait
pusha
jecxz
xor
xchg
mov
movsl
ficomps
lcall
sti
adc
loope
sub
ljmp
and
mov
jbe
or
aam
imul
mov
jno
lods
cmp
and
push
or
bound
inc
jge
fldcw
cwtl
leave
lock
in
cltd
pushf
clc
loope
xor
and
icebp
ret
fstpl
push
jno
add
cmp
lcall
adc
ljmp
daa
lock
mov
pop
jecxz
jne
imul
cmp
out
fldcw
fnstcw
pop
push
mov
vmovaps
enter
push
lds
adc
push
fbld
pusha
movsb
add
ja
insb
inc
icebp
dec
arpl
fisubrl
jae
int
push
cmpb
add
aaa
or
ret
inc
add
ja
hlt
adc
lcall
aas
adc
pop
pop
popa
xchg
ds
daa
mov
stc
sbb
cwtl
pop
xchg
adc
adc
pop
push
subb
repz
xor
xchg
mov
push
xchg
daa
sbb
fstl
gs
mov
xchg
std
int3
test
jecxz
inc
mov
mov
js
or
sbb
sti
stc
xor
lods
data16
pop
lea
mov
xchg
xor
lock
cs
roll
mov
loope
mov
ljmp
je
popf
pushf
test
cli
test
cwtl
addb
push
inc
daa
repnz
iret
jmp
mov
push
in
and
jne
add
push
mov
out
jmp
mov
mov
hlt
in
lods
push
lds
xchg
push
xor
adc
pop
add
cmp
add
nop
pop
or
fs
inc
iret
cmp
mov
jbe
adc
outsb
sahf
mov
adc
cmp
insb
std
pop
mov
sbb
enter
adc
jle
mov
xor
mov
push
add
adc
mov
xchg
xlat
cmp
ss
fistpll
scas
mov
cmp
roll
popf
and
pop
cltd
cmp
inc
cmp
fstl
push
loope
push
cmp
mov
jmp
push
mov
iret
mov
fcompl
jle
lret
ljmp
cmp
pop
inc
popa
mov
mov
mov
mov
icebp
lods
inc
mov
jecxz
cmp
daa
and
xor
pmaxub
subb
adc
mov
push
mov
enter
push
ljmp
push
mov
jae
outsl
sbb
xor
dec
enter
dec
loope
lds
enter
shll
leave
mov
cmp
push
fcmovnb
les
mov
test
add
lods
testb
or
sbb
xchg
stos
sahf
cmc
xor
jbe
inc
inc
mov
add
sahf
mov
jne
jmp
mov
or
dec
mov
mov
mov
mov
or
add
pop
rolb
push
xor
fcmovbe
scas
mov
orl
xchg
jne
cmpsb
adc
cmp
push
outsb
inc
pop
pushf
popf
in
push
dec
cli
popf
jne
mov
adc
jae
test
aam
test
lcall
dec
xorl
or
out
repnz
nop
inc
ret
and
in
aam
js
or
cmpsl
outsb
xchg
imul
xor
mov
dec
lock
push
popf
pop
shl
bnd
xchg
shrb
pushf
pushf
aad
push
aas
negb
adc
mov
inc
push
outsl
inc
popf
add
mov
mov
cmp
mov
lret
inc
pop
add
mov
add
xchg
bound
and
lcall
jne
scas
inc
push
adc
nop
icebp
xchg
inc
inc
into
cs
out
pusha
ficoms
mov
es
aam
sub
cmc
xchg
out
push
mov
lahf
sub
fdivs
xchg
mov
cmpsl
stos
test
out
xor
ret
sbb
cmp
ret
arpl
jp
mov
fwait
mov
or
leave
cmp
inc
mov
inc
movsb
and
push
js
subl
xor
nop
data16
pop
rorl
sahf
in
leave
dec
repnz
xor
dec
dec
bound
cmp
faddl
jmp
jbe
shll
and
sub
and
pop
jae
cmp
cltd
lods
lret
jne
addr16
imul
pop
je
xlat
iret
xchg
ljmp
call
pop
incb
popw
mov
mov
insb
dec
mov
loopne
adc
out
dec
aas
inc
lods
mov
jmp
repnz
or
ljmp
lret
mov
xor
or
rcrb
out
fmul
les
jae
xor
ffreep
push
or
inc
xchg
loopne
ja
cld
pusha
call
adc
cmp
mov
jb
xor
jo
repnz
movsl
roll
data16
into
fidivl
aam
xchg
mov
dec
sbb
xchg
dec
sbb
clc
inc
or
jb
cmp
and
lret
sti
fmulp
dec
pop
mov
mov
cmp
pop
jmp
and
sub
or
popf
xor
xchg
pop
or
inc
push
out
aas
imulb
pop
out
mov
cli
lea
dec
jge
sti
fwait
or
cmc
fcomi
cs
loope
sub
push
clc
jae
jbe
cli
sar
pop
add
mov
sti
inc
jno
cmpsb
sub
mov
or
pop
addr16
dec
inc
in
and
add
sub
cmp
bound
add
lahf
push
inc
sbb
cmpsl
add
aas
mov
outsl
imul
scas
cmp
add
add
push
mov
insl
and
cwtl
cs
bound
push
xchg
push
mov
fs
mov
and
push
pop
pop
jle
mov
imul
rcll
leave
ja
out
pop
cmpb
ret
arpl
inc
in
es
loopne
in
cmp
ret
jg
lahf
fbstp
fistpll
nop
cmp
add
push
pop
xor
pop
popa
inc
add
add
pop
xchg
or
insb
sbb
in
sbb
xor
dec
in
incb
cmp
xchg
insl
fsubrs
sub
dec
and
subl
lods
cmp
mov
into
rcrl
aaa
and
or
xchg
cmpsl
pusha
xchg
push
dec
les
jbe
and
dec
inc
imulb
scas
arpl
xor
pusha
fninit
mov
mulb
sti
jmp
fsubrl
out
mov
mov
adc
or
inc
stos
fwait
pop
addr16
nop
shll
adc
mov
or
or
pop
jp
loopne
into
and
mov
clc
imul
xchg
and
jle
xchg
test
das
pop
fists
inc
push
cmp
movsb
dec
add
xor
cwtl
pop
cwtl
jb
push
scas
test
mov
cmp
ret
sbb
lret
dec
or
dec
mov
mov
scas
or
cltd
pop
roll
adcb
xor
cmp
subl
sub
xor
movl
mov
int
ficompl
rol
jno
pop
cltd
sub
xchg
cltd
rcll
bound
xchg
in
stc
or
dec
push
test
mov
mov
push
mov
sub
clc
cltd
popa
jg
dec
or
xchg
jmp
mov
ja
inc
into
outsl
sti
shl
xchg
mov
mov
cwtl
xor
xchg
fdivs
test
sti
rorb
mov
arpl
pop
and
add
sbb
add
inc
stos
dec
inc
xor
mov
jo
jg
xchg
pop
imul
or
movb
dec
push
xor
xchg
js
scas
push
mov
stos
repnz
xlat
xchg
sbb
adc
mov
mov
xchg
rcll
add
shr
pop
testl
gs
stc
sbb
cmp
jecxz
stos
sub
orl
cs
lret
ret
cmc
scas
imul
dec
dec
mov
ja
push
inc
jno
add
adc
rcrl
movsb
pop
jmp
loopne
data16
push
repz
cmc
iret
push
ficoms
scas
test
pop
stos
into
pop
inc
inc
popa
iret
mov
pop
mov
call
xor
mov
aad
push
idivb
fs
mov
ss
es
test
jg
add
add
mov
or
xchg
pop
inc
imul
js
fs
pop
stos
pop
je
sub
sub
xor
xlat
mov
mov
jnp
imul
jmp
cmc
test
mov
cli
shll
and
popa
adc
lea
test
rcll
mov
ja
subl
jb,pn
inc
mov
or
js
xor
cmp
mov
pop
cmp
push
mov
and
pop
pusha
dec
cmp
fstl
and
and
push
lods
xchg
movsb
cltd
into
fcoms
repz
jmp
scas
dec
arpl
add
pop
dec
mulb
xchg
loopne
and
mov
out
scas
cmpsl
out
cmp
clc
pushf
dec
aad
or
cmpsb
mov
testl
mov
fdiv
sbb
repz
les
in
aam
sbb
cs
jecxz
mov
pop
cmp
cmp
sahf
inc
and
out
mull
psubusw
imul
pop
xlat
push
add
test
ljmp
aad
int
mov
mov
bound
xchg
je
mov
cwtl
sub
scas
dec
wrmsr
scas
push
adc
mov
xchg
mov
das
out
rclb
sub
xchg
jecxz
popf
mov
mov
les
fchs
sub
daa
xchg
sub
inc
inc
stos
sbb
dec
vpsrlq
xor
inc
or
pushf
push
rclb
sub
push
lods
cmp
add
cmp
jno
pop
roll
mov
gs
mov
cmp
push
loop
xor
test
push
push
int
push
fstpt
and
into
loop
dec
mov
add
jp
inc
rclb
adc
cmp
popa
or
xor
lahf
lods
addr16
mov
addr16
test
dec
std
aaa
pop
std
pop
inc
cli
cmc
mov
fcmovnu
jb
fdivr
cmpsl
jo
in
xchg
adcb
sbb
rclb
pop
int
xor
pop
push
inc
into
loopne
xor
dec
and
cmpsb
shl
stos
cltd
cmpb
sahf
inc
out
addb
hlt
daa
arpl
loop
xchg
push
add
jle
idivb
dec
adc
icebp
and
fldl
or
stc
mov
mov
jbe
xchg
decb
push
push
inc
jno
mov
and
shll
lds
push
outsb
fcoml
enter
xchg
loop
sbb
adc
jno
scas
push
mov
or
and
jge
pop
fidivrl
or
jno
divb
inc
push
jecxz
push
sbb
insl
aaa
sub
dec
int
rol
mov
out
and
sbb
insb
sti
sbb
sti
dec
aaa
ror
testl
popl
sub
push
sub
leave
test
aaa
dec
iret
push
ret
pusha
jl
push
icebp
xor
adc
sub
fcomps
sahf
add
lods
aad
hlt
test
notb
push
lds
ficomps
loope
jl,pt
sub
lret
mov
jmp
stos
fstpl
jle
mov
in
outsb
or
cmpsb
fstl
or
push
iret
outsb
push
outsl
arpl
push
inc
gs
icebp
jbe
ljmp
nop
call
xor
xlat
fcomi
add
jns
rcr
mov
mov
hlt
cwtl
cs
xor
imul
movsb
and
xor
push
pop
cmpsl
inc
fldenv
mov
lea
or
cmc
imul
mov
ljmp
xlat
mov
daa
push
or
pop
dec
push
mov
mov
int3
pop
fwait
mov
dec
leave
adc
pop
cmp
imul
add
ret
pusha
dec
cmpsl
inc
dec
je
ret
jmp
js
pop
out
push
outsl
mov
cmp
das
testl
jge
movl
in
pushf
lcall
lahf
xchg
insl
mov
push
call
mov
mov
ficompl
jge
add
mov
outsb
cmp
xchg
ret
iret
cmc
xchg
or
inc
out
xor
jbe
in
fs
xor
dec
call
in
and
pop
movb
scas
and
sbb
pmaddwd
or
fldenv
rorl
inc
movsl
lret
mov
rcr
and
jnp
lret
or
jnp
dec
xchg
dec
xchg
lods
and
cmpsb
int
roll
jne
lock
xorb
pop
cmp
inc
fiaddl
xor
les
jle
xlat
jmp
in
insb
cs
inc
sub
sbb
sahf
jp
mov
or
int
mov
cmp
rcl
jmp
jnp
push
js
mov
add
cli
mov
test
aas
mov
xor
mov
xchg
pop
cwtl
inc
mov
xchg
loope
mov
inc
movsb
mov
add
push
add
mov
lods
xor
push
mov
lock
sahf
dec
and
pop
pcmpgtw
mov
dec
stos
gs
pusha
mov
pop
pop
mov
sub
jae
push
testb
mov
push
cltd
fisttpll
in
out
mov
cmc
ljmp
aad
stos
lret
pop
subb
push
cmpsw
adc
scas
jb
xchg
and
out
in
mov
movsl
outsl
add
fimull
mov
sub
push
lret
sbb
adc
push
cli
inc
sub
xchg
xor
out
adc
jmp
mov
test
pop
cmpsb
scas
ja
cmpsl
jp
cmc
mov
dec
hlt
mov
in
dec
inc
ret
sbb
mov
xchg
dec
rcrb
add
add
movsl
jge
cmp
or
cmc
push
mov
loope
fimull
popf
leave
mov
loopne
sbb
fnstenv
jg
out
es
lea
scas
mov
mov
scas
aam
xor
add
fcoml
imul
push
in
iret
cmpb
xor
pusha
jb
dec
jne
sti
pop
cltd
pusha
aad
js
or
dec
push
mov
ret
mov
sub
mov
xor
jge
dec
inc
jle
dec
loop
and
xchg
mov
xchg
ss
pop
pushf
inc
icebp
into
dec
test
fstpl
jne
mov
pop
xchg
incl
xchg
std
cmp
push
cmp
push
dec
xlat
sub
and
xchg
mov
push
rcrb
fisubrs
mov
adc
pop
dec
loopne
lcall
sub
filds
add
imul
fbld
dec
lcall
nop
mov
bound
add
jbe
es
icebp
into
pop
ss
clc
xor
idivl
sub
lds
jecxz
xor
insb
mov
insl
push
arpl
int
out
sub
push
and
jg
int
xchg
jmp
test
and
inc
jno
jecxz
outsl
pop
push
push
shll
es
lods
icebp
lahf
lods
aad
dec
stos
push
mov
fcoms
addl
sub
out
fistpl
xor
dec
lahf
dec
push
into
add
outsb
or
insb
in
jbe
xor
adc
popf
push
movsb
sub
scas
fsubl
inc
stos
push
inc
mov
aam
lds
stc
xor
xchg
adc
lds
jge
loope
dec
and
fs
leave
jne
les
popa
mov
pop
imull
icebp
movsl
xor
mov
repz
mov
shrl
xchg
adc
mov
cmp
jno
xor
mov
outsb
or
loope
daa
push
and
orb
js
fistl
push
aam
in
sub
sarl
les
cmpsl
push
stc
vmovsldup
das
fsubrs
dec
push
insl
adc
mov
mov
aaa
iret
repnz
movsl
mov
mov
sub
out
jl
add
rcrb
push
pop
fs
outsl
ss
xchg
jl
lahf
pop
cmpsb
in
mov
pop
ss
das
jge
dec
or
mov
and
cld
mov
inc
imul
push
push
mov
and
lcall
ss
pop
mov
adc
mov
sub
aas
ljmp
dec
ficomps
mov
sbb
lods
into
sub
add
cmp
dec
cmpsl
inc
jge
out
imul
lea
cmp
dec
mov
push
outsb
data16
add
dec
repnz
xchg
dec
jge
lahf
stos
inc
arpl
aaa
push
daa
int
add
push
roll
mov
fisubs
add
sbbl
xchg
andb
push
add
add
in
loope
cli
mov
clc
test
sub
cltd
sbbl
sub
jl
popf
jb
jl
sahf
push
push
jno
cmp
fiaddl
cmp
ret
cwtl
dec
lret
xchg
jmp
aad
in
out
std
jl
stc
cwtl
push
add
andl
test
pop
loop
pop
and
into
mov
jae
pop
out
nop
mov
xlat
lret
jmp
mov
and
add
lret
pusha
daa
xlat
push
lret
mov
test
cmp
idivl
inc
pop
movsl
jge
pop
inc
and
ss
jge
cld
xchg
mov
mov
sti
inc
lss
sbb
std
test
rcrl
xchg
and
pop
jbe
add
dec
and
pop
push
insl
ljmp
inc
dec
test
sub
cmpsb
inc
mov
pop
fimuls
dec
shlb
fdivrs
cld
test
cmp
testb
fcoml
jp
push
mov
mov
popa
inc
xor
fld
popf
rcll
cmp
cmp
sbb
jns
jnp
lods
xchg
arpl
pop
popf
jmp
push
mov
fnsave
movsb
xor
cmp
cmp
push
adc
pushf
ret
fs
movsb
aad
mov
js
or
ljmp
inc
cwtl
add
scas
push
xor
adc
mov
or
mov
test
mov
pop
jo
call
adc
loope
into
mov
and
xchg
adc
lods
mov
xor
mov
adc
cmpsb
cmpsb
add
pop
out
fisubrs
jg
inc
xchg
scas
daa
jno
xchg
in
xchg
aad
mov
es
mov
adc
loope
test
jo
out
xor
cmp
repz
xor
xchg
mov
dec
int
sbb
jl
and
sub
nop
mov
test
bts
test
inc
inc
push
jb
xchg
and
addr16
mov
iret
sbb
lea
pop
roll
and
jg
xchg
jne
xchg
and
sub
jl
mov
insb
and
xor
push
or
nop
outsl
adc
clc
cli
cld
mov
lods
lahf
cmpsl
adc
mov
cld
sbb
cmp
sti
icebp
icebp
int
hlt
mov
mov
cltd
ss
pop
adc
mov
xchg
outsb
mov
cmp
mov
jmp
or
mov
sahf
xorb
dec
sub
dec
out
or
mov
mov
lock
add
dec
rcrl
out
mov
adcb
push
es
lods
rorl
fisubs
stos
lock
dec
aam
push
shlb
movsb
push
fmulp
aam
xchg
pop
icebp
mov
inc
jbe
pop
sbb
fcmovnbe
cld
pop
push
push
adc
ret
lea
inc
cmpsb
ja
add
leave
fincstp
cmpsl
cltd
subl
dec
sti
pop
fs
add
cmc
lcall
jno
push
mov
dec
inc
ds
int3
out
cmp
xchg
ret
jbe
mov
pop
movl
jge
mov
test
add
rorl
in
add
test
pop
mov
adc
imul
shl
fcmove
jbe
xor
enter
out
mov
insl
andl
cmpsl
xchg
imul
lcall
xor
dec
imul
sub
mov
inc
mov
insb
lret
dec
test
jmp
sbb
lret
addr16
aam
add
cmp
das
pop
mov
pop
icebp
inc
movsb
outsb
mov
stos
adc
push
cmp
iret
jmp
cmc
or
cmp
repnz
push
out
mov
scas
je
push
dec
sbb
repnz
ja
sub
scas
mov
mov
insb
mov
gs
popa
mov
scas
push
xchg
xchg
add
and
sbbb
shrb
out
sbb
int
stc
cmp
das
jno
ds
je
insl
data16
mov
xchg
adc
stc
adc
mov
gs
in
push
sub
icebp
pop
pop
sbb
cli
icebp
or
loop
mov
mov
les
popf
or
mov
fistpll
add
inc
jl
and
pop
xchg
inc
out
gs
and
push
std
jmp
testb
adc
mov
dec
mov
xor
gs
jbe
xchg
mov
and
sbb
add
and
stos
dec
nop
or
out
aam
cmp
pop
out
mov
lret
pushl
lods
push
or
add
les
xor
addb
mov
adc
cmp
pop
loopne
je
xchg
push
xlat
adc
ljmp
loopne
dec
out
enter
test
enter
out
inc
and
test
lods
and
repnz
push
add
jns
pop
lds
repz
out
and
mov
inc
sbb
fldenv
or
adc
fiaddl
and
fsubp
ret
lahf
iret
popf
cltd
mov
fildl
mov
xor
xor
iret
nopl
jne
pop
js
mov
xor
jbe
out
in
xor
and
out
pusha
sti
std
mov
mov
mov
mov
jecxz
add
imul
jne
test
inc
out
push
jp
fwait
lods
dec
outsl
sbb
insl
add
hlt
mov
push
cmp
lods
adc
loope
test
sahf
popf
clc
inc
in
insb
js
and
sbbl
lret
push
addb
test
daa
xchg
out
mov
pop
jae
mov
jns
xlat
mov
push
and
inc
lods
pop
in
das
fstpl
lret
sbb
mov
popa
mov
xchg
xchg
into
sub
in
add
pop
and
or
clc
sar
pusha
addr16
pop
inc
jg
fcompl
in
pop
mov
xor
pusha
sbb
add
shll
jmp
sub
cmp
mov
test
jg
mov
or
pop
mov
xor
cmp
outsb
add
test
lret
fnsave
mov
outsl
push
jmp
out
cmp
lods
xor
mov
sub
fimuls
add
insl
inc
cwtl
gs
add
aad
subb
fwait
jnp
mov
mov
test
mov
pop
nop
ret
sub
xor
jo
out
sbb
inc
push
jecxz
pop
mov
mov
mov
jle
shrb
cmp
fistps
adcl
divb
xchg
sub
inc
mov
mov
adc
fstpt
push
jmp
sub
pusha
sbbb
pop
push
inc
dec
pop
insb
add
stos
scas
stos
jp
into
adc
shrb
and
lret
fidivs
hlt
inc
loopne
es
mov
cwtl
aas
xchg
ljmp
push
mov
cmpsb
dec
out
pop
stos
and
inc
out
adc
add
jecxz
mov
sub
sub
popa
jbe
in
out
std
in
outsl
sub
dec
enter
inc
inc
push
lea
push
sub
sti
add
jbe
and
jnp
and
mov
sahf
push
jbe
scas
xchg
inc
inc
push
addb
jns
add
out
lods
pop
dec
push
xchg
movsl
dec
fisubs
xchg
rolb
js
outsb
mov
xor
ja
adc
jle
xor
call
mov
lods
fcoms
pop
mov
xchg
jge
fsubl
dec
loopne
insl
dec
adc
inc
imul
mov
into
fistl
iret
mov
roll
leave
xchg
cmc
in
mov
xchg
and
test
push
leave
ds
sub
mov
xor
lcall
inc
sbb
test
add
loopne
cmp
or
addl
popl
and
adc
mov
push
pop
sub
pop
inc
sub
pop
add
cmp
inc
mov
movsb
add
mov
bound
mov
push
clc
xlat
jmp
mov
xor
jle
cli
bound
cmpsb
aas
mov
xchg
in
mov
add
loop
inc
inc
push
lds
fwait
dec
mov
lcall
andl
xor
and
jnp
pop
bound
dec
outsb
rcrb
mov
stc
mov
sbb
stos
xchg
xchg
jo
addl
jg
sub
rorl
lahf
out
lret
jne
call
scas
mov
inc
xchg
mov
repnz
cmp
pcmpgtd
sbb
rcl
sar
je
jl
imul
loop
push
test
mov
fildl
xchg
add
jo
push
push
scas
imul
pushf
cmp
xchg
xor
faddp
outsl
xchg
es
outsb
adc
cmpsb
lea
add
std
into
or
dec
mov
je
sub
and
shl
inc
ja
test
xlat
dec
xchg
andb
ret
mov
cmc
jo
lret
adc
jp
outsb
mov
sahf
arpl
je
push
cwtl
nop
adc
cwtl
sarl
xchg
inc
test
cmp
sbb
test
dec
repz
sti
add
rcrl
leave
outsl
fldlg2
popa
iret
enter
jno
test
push
lds
incl
mov
cmpsl
mov
addb
cmp
cmp
jmp
mulb
out
pop
jg
xorb
sub
sti
or
and
mov
mov
mov
mov
daa
or
or
ret
push
cmp
cmp
dec
dec
sarb
and
lret
filds
out
jns
fimull
stos
add
arpl
mov
mov
imul
leave
pop
fbstp
push
ja
pop
xor
int
test
push
cmp
mov
pushf
iret
fnsave
arpl
or
les
xor
dec
call
mov
push
popa
lcall
xor
pop
cmp
mov
stc
dec
cmp
movsb
fisubs
dec
stc
push
aam
lods
es
mov
outsl
cli
inc
in
mov
push
add
jg
popf
les
and
aam
xor
loope
mov
jbe
out
adc
pop
es
xchg
int3
cmp
pusha
fcoms
jnp
mov
ret
push
mov
stc
mov
jae
mov
mov
cli
push
jmp
inc
int3
fcmovbe
addr16
movsl
pop
ss
jb
inc
lea
xor
inc
xchg
mov
fidivl
nop
filds
push
cmpsl
add
stc
adc
popf
add
imul
xchg
push
xchg
mov
inc
pop
mov
test
adc
inc
sbb
lea
adc
cwtl
popa
pusha
leave
xlat
mov
call
leave
add
sub
stos
lahf
jne
movsl
jg
jno
loop
xchg
mov
or
dec
test
js
push
sbb
sbb
push
dec
jno
data16
xchg
cmp
in
ds
pop
cmp
push
inc
aas
push
loop
mov
fdivr
stc
cmp
mov
lock
orb
arpl
jmp
sbb
dec
sar
nop
fwait
xor
adc
jne
xchg
insl
sub
xchg
push
and
push
dec
and
popf
mov
insb
inc
decb
xor
fdivp
test
out
outsl
dec
hlt
inc
dec
lock
mov
sbb
repz
adc
loopne
fucomp
incb
mov
jl
test
xchg
xor
adcb
out
push
loopne
daa
repz
xchg
fsts
mov
push
in
ds
sub
dec
cmpsl
pop
fsts
scas
cs
jecxz
push
sbb
divb
mov
mov
fs
push
pop
test
subl
xor
push
repnz
push
cmc
cs
dec
testl
lods
insl
xlat
sbbl
jne
xor
incl
fsubrl
xchg
ret
add
mov
int3
xor
mov
les
dec
mov
mov
stos
pop
out
xchg
and
rclb
mov
pmullw
std
popa
jle
xor
test
movb
in
cmovb
jge
sbb
enter
mov
imul
sbb
das
out
and
mov
cmp
sbb
xchg
cmp
add
enter
repnz
cwtl
or
sbb
cmpsb
push
es
lahf
mov
mov
jns
jge
pop
push
xor
cltd
mov
mov
ret
stos
fucom
pop
jmp
sbbb
and
or
add
jp
fdivrs
mov
lock
les
xlat
pop
cmp
xchg
cmp
rolb
fcmovu
dec
cwtl
mov
adc
push
pop
xchg
push
jp
mov
movsb
cmp
jb
mov
sbb
aas
pushf
daa
push
mov
or
dec
pop
aad
loope
outsb
lret
stos
sbb
das
mov
mov
and
arpl
push
lret
mov
jmp
dec
int
pushw
lock
inc
mov
sbb
mov
inc
mov
aam
mov
cmpsl
mov
xchg
nop
or
sbb
fldln2
push
rcrb
addr16
sub
jno
das
cmp
add
shlb
lods
cmp
mov
and
mov
roll
clc
dec
ret
xchg
int
ljmp
sbbl
mov
jg
jb
repz
outsb
ror
inc
cmc
add
cmp
pushl
xchg
icebp
shlb
lods
mov
cmp
xchg
xchg
jmp
into
stos
rcr
pop
lret
lock
fs
adc
imul
pushf
int3
jne
sbb
notb
pop
and
js
fmull
aam
mov
inc
push
in
arpl
sub
adc
in
test
lret
out
adc
pop
mov
incl
pop
add
imul
sbb
dec
loop
sbb
pop
sti
dec
in
cwtl
shlb
sub
jo
mov
add
bnd
dec
arpl
jmp
add
inc
iret
subb
xchg
lds
idivb
xlat
or
roll
inc
test
fimuls
jns
mov
sbb
pop
push
out
jg
nop
or
mov
xchg
clc
sbb
adc
sub
sub
sbb
mov
xor
movsb
pop
icebp
popf
filds
fisubs
aas
lea
pop
sub
dec
mov
dec
mov
xor
mov
das
lods
test
or
jb
xchg
sarl
fisubs
sbb
out
mov
xor
mov
mov
insb
dec
mov
sub
out
xchg
push
pop
adc
rcrl
ljmp
sbb
int3
add
xchg
fwait
scas
adc
and
push
jmp
sbb
jl
dec
lahf
mov
xchg
xlat
cmp
push
adc
add
aaa
xchg
mov
or
fcoms
loopne
mov
push
out
subl
inc
add
pop
mov
aam
pop
cmp
out
xchg
jo
mulb
adc
push
add
inc
lcall
in
and
pop
sbb
mov
ret
movsb
sub
cmpsl
out
loopne
lahf
fsubrs
and
lahf
pop
out
xchg
ds
mov
push
pop
out
add
jle
dec
push
xor
icebp
pop
dec
fsubrp
xchg
adc
ret
jne
cmp
mov
push
mov
sub
and
std
xchg
jmp
inc
mov
cli
pop
inc
mov
rorb
mov
add
aad
pop
cmp
cmp
mov
nop
add
bound
pop
gs
mov
mov
fdivrs
sbb
hlt
stos
cltd
ret
mov
rcr
bound
mov
sub
cld
cld
inc
jecxz
hlt
orps
stos
push
push
std
nop
adc
mov
jne
jb
mov
jbe
jns
stos
fdivs
push
movsb
hlt
imul
xchg
subb
xchg
push
push
pmaxsw
jnp
add
add
test
add
dec
into
iret
lret
repz
jae
mov
cmc
in
sbb
js
cmp
shll
or
fstpl
xor
push
xchg
xchg
xor
sbb
mov
dec
cld
cmp
adc
xchg
loopne
das
dec
mov
shr
testl
push
or
call
test
popf
dec
mov
sbb
cltd
scas
mov
not
scas
dec
mov
add
je
or
push
insl
xor
jno
test
into
push
insl
ficomps
jns
xchg
jecxz
push
or
arpl
mov
mov
sar
rcll
add
cli
arpl
mov
aad
inc
sbb
loopne
sbb
test
pop
dec
mov
cli
mov
lret
test
aas
inc
pop
aam
and
cltd
mov
cli
iret
outsb
jecxz
pop
rorl
xchg
jnp
test
fcmovnb
call
inc
sub
and
shlb
adc
mov
in
test
lahf
cli
xchg
aaa
lods
xlat
ds
pop
sbb
add
inc
movhps
mov
imull
mov
lahf
sub
lret
ret
cmp
insb
sub
popa
les
sti
aaa
mov
adc
lods
cmp
fstps
rcrb
pop
scas
notb
pop
sub
sarb
lret
mov
test
daa
outsb
adc
cli
sub
aad
add
icebp
sub
pop
push
inc
mov
xor
add
scas
add
js
loope
nop
and
inc
cld
lods
inc
mov
inc
pusha
into
cld
fimull
jl
hlt
cmp
inc
push
cltd
loopne
stos
inc
jns
xor
movsl
xchg
cmp
outsl
dec
push
dec
jle
cmp
add
ja
xchg
inc
ret
pop
push
out
inc
rorl
xchg
pop
sti
dec
lods
sub
dec
and
xchg
int
ret
jp
das
add
inc
imul
shr
mov
and
push
std
cmp
add
and
add
aaa
movl
insl
test
adc
aaa
insl
pop
fstpt
ret
or
sbb
mov
sub
xlat
sub
dec
in
inc
jmp
nop
add
inc
xchg
jl
or
mov
or
inc
xchg
aas
mov
icebp
pop
stc
lods
xchg
outsb
inc
leave
icebp
pop
das
test
mov
aas
and
insl
mov
fstp
pop
mov
xchg
pop
sbb
sub
xchg
out
adc
push
sub
cmp
sahf
adc
pushf
sub
ljmp
scas
and
lods
add
repnz
or
in
sbb
stos
xchg
orl
sbb
sub
cmp
test
clc
data16
inc
push
xor
mov
loope
mov
xor
shrl
or
mov
fiadds
push
cld
mov
nop
dec
jg
xor
gs
in
nop
fwait
mov
adc
mov
jae
mov
dec
inc
pop
xor
push
pop
pushf
inc
xchg
paddsw
shlb
mov
mov
flds
cmp
xor
xor
mov
shl
outsb
jl
test
cmp
stc
sbb
jnp
add
add
xor
cmpsl
inc
sbb
test
adc
hlt
aad
push
fs
mov
lds
sub
sbb
icebp
sbb
test
daa
dec
adcl
pop
sbb
mov
jl
mov
mov
test
cli
dec
icebp
adc
or
pop
sbb
insb
loope
cmp
inc
and
jnp
sbbl
repnz
movsl
pushf
and
gs
ja
xor
mov
inc
adc
rcr
and
shr
into
mov
pop
mov
arpl
cmp
push
int
push
mov
loopne
in
add
mov
ljmp
sub
jg
cmc
pop
or
imul
movsb
sub
mov
call
mov
xchg
aam
in
sbb
stc
lea
mov
lods
jnp
and
js
push
orl
mov
iret
aad
pop
movsb
dec
sub
xlat
xchg
cmpsl
loop
dec
push
push
lods
mov
add
mov
imul
lea
or
loop
cs
cmp
fsts
or
mov
ss
adc
int
lods
aas
out
xor
in
xor
pushf
push
mov
les
xor
jecxz
dec
add
sub
xchg
shlb
or
jg
add
ss
xor
popf
dec
repz
xchg
sub
pop
hlt
lahf
mov
inc
pop
mov
pop
in
aaa
add
cmpsl
mull
or
aad
xchg
push
sbb
mov
push
popf
xor
das
jmp
cmpsb
or
fisubl
add
ret
and
std
push
xor
xor
imul
cmc
mov
dec
lds
std
jae
add
inc
or
scas
sub
cli
bound
std
adc
call
jge
dec
mov
out
cltd
mov
mov
fstpt
roll
inc
lods
ss
push
or
adc
mov
push
test
sbb
pop
mov
mov
stos
insl
popl
pop
add
jge
push
ss
imul
mov
pop
icebp
jae
loop
pop
cmp
fidivs
jnp
inc
insl
dec
xor
and
pop
data16
sti
push
popf
mov
outsl
xchg
xor
mul
bound
xchg
arpl
es
leave
mov
sahf
ja
cld
je
jp
dec
pop
je
xorb
mov
push
pop
mov
fs
scas
lcall
scas
out
pop
adcb
dec
js
push
pushf
adc
jbe
jbe
pop
cmp
dec
mov
inc
mov
int
stos
lret
movsb
xchg
aad
lods
mov
xchg
loope
lock
lds
adc
mov
push
out
and
push
ss
pop
jmp
aam
repnz
xchg
mov
add
data16
lods
sarb
lds
fs
sub
in
inc
movsb
imul
mov
subb
inc
insb
add
adc
fs
xor
or
mov
mov
cld
mov
notb
rcr
mov
movsb
lock
jp
xchg
js
inc
xor
dec
add
push
loopne
mov
pusha
in
ret
imul
popf
mov
sbb
jne
aam
iret
pop
cmpsb
push
or
xor
lea
xchg
and
xor
jg
push
in
repnz
stos
js
cmp
int
sub
and
add
jbe
sahf
pop
inc
lea
fidivrl
stos
add
xor
push
adc
into
jne
lahf
fnsave
into
mov
sub
push
push
cmp
xor
lods
popl
jno
jge
cmc
pop
sub
jmp
loop
inc
outsb
adc
je
pusha
aam
mov
mov
push
xchg
ds
das
jecxz,pn
mov
daa
xor
outsb
or
lea
and
xor
je
jp
add
outsb
push
rcrl
shrl
out
jbe
pop
push
das
push
mov
popa
rorb
inc
js
lret
pmulhuw
sub
inc
sbb
std
dec
loop
dec
std
mov
std
dec
add
lea
popf
out
shr
mov
pop
in
fwait
add
xor
xor
sub
xlat
xor
dec
mov
cmp
rclb
add
mov
sub
ja
mov
jno
jae
inc
xchg
and
cltd
jecxz
out
jae
add
out
cli
add
scas
test
adc
or
cmp
les
in
cmpsb
aaa
pop
lret
outsl
push
js
insb
je
jo
inc
es
push
int3
jns
fwait
add
mov
lret
xchg
loopne
or
dec
xchg
loopne
test
data16
out
sub
xchg
xor
push
mov
imul
mov
loope
cs
adc
inc
pop
or
jl
pop
lds
jmp
popl
daa
or
and
xor
into
pop
repz
cmpsl
clc
jae
loope
dec
xchg
lret
xor
lret
jns
mov
jge
outsl
lods
pushf
stc
fnstenv
call
ja
pop
cli
jno
and
xlat
sub
mov
add
jo
mov
xchg
sub
push
sub
cmpl
mov
jb
sub
repz
es
mov
add
mov
insl
lahf
sub
jae
mov
call
pop
fmuls
cmp
imul
movsl
imul
es
sub
gs
push
push
loope
inc
sub
jmp
mov
xchg
into
cmp
jns
repnz
in
and
jns
ljmp
js
lret
mov
cmpsl
pop
xchg
or
inc
data16
gs
addr16
in
cmc
push
in
push
jg
les
inc
pop
ret
inc
popf
mov
test
jbe
pop
imul
ss
rolb
mov
into
cmp
mov
pop
mov
rol
pop
jg
xor
jmp
icebp
mov
sti
sub
cld
push
repz
lds
cmp
mov
into
data16
xor
sbb
xchg
arpl
sub
inc
sub
push
sbb
mov
cmpsb
adc
sbb
mov
dec
cmp
clc
test
fwait
xor
add
jae
mov
in
je
clc
jo
inc
mov
jmp
in
jne
add
sbb
mov
mov
mov
sbb
pop
xlat
hlt
pop
testl
and
mov
push
and
xlat
jno
in
mov
cmp
in
cmp
push
into
add
outsl
icebp
sti
cvtps2pi
inc
cmp
pop
into
adc
mov
test
out
jbe
lcall
fcoml
mov
xchg
cld
orb
adc
adc
or
push
inc
mov
xor
out
dec
push
jnp
in
push
add
mov
inc
pop
lahf
add
rolb
int
and
xor
cmc
clc
mov
fmuls
scas
add
test
cmp
jno
cmp
shrb
adc
pusha
popa
shlb
daa
mov
dec
iret
cltd
xlat
pop
pop
xor
mov
sub
jo
pop
adc
mov
sub
sbb
sti
pop
stc
sti
jbe
into
jnp
and
jg
jae
and
pop
ljmp
inc
ret
movsl
xor
and
and
pushf
repnz
popf
sbb
mov
mov
and
jo
push
in
cmp
or
sub
pop
sahf
adcl
out
xchg
push
and
mov
test
jge
jle
mov
scas
jns
jae
stc
fmulp
xlat
mov
ret
out
movsl
inc
sub
addl
movsb
in
mov
rorb
insl
pop
cwtl
cmp
add
cwtl
sbb
loop
mov
out
pop
in
push
fistpl
jecxz
jns
cltd
and
add
adc
jl
sarb
mov
mov
mov
sbb
xchg
data16
aas
cmp
mov
adc
lahf
call
sub
inc
les
frstor
jmp
fdivrs
test
shrl
sti
ds
and
vpandn
scas
insl
daa
fadds
jg
data16
jle
pop
push
hlt
ret
aaa
inc
xlat
and
xorl
test
or
adc
out
sbb
inc
mov
pop
push
out
iret
pop
std
sub
mov
jp
mov
mov
adc
setno
adc
mov
inc
sahf
lods
fnstenv
push
inc
inc
dec
aam
cmp
or
sti
sbb
pop
aas
inc
ret
xor
pop
out
aam
inc
mov
ljmp
xchg
dec
cli
sbbl
ret
xchg
hlt
lods
add
es
or
mov
popa
jae
out
setb
cmc
faddl
iret
mov
jge
sbbb
mov
orb
inc
jp
cmpsb
mov
adc
jno
into
xor
mov
movsb
inc
jg
cmp
popf
cmpsl
mov
dec
sub
aam
outsb
lods
inc
xchg
push
cmpb
cwtl
sub
stos
xchg
inc
jno
lods
loope
lock
pushl
and
sbb
or
mov
push
jle
dec
fsubrl
xchg
jecxz
push
mov
sub
fcomi
sbb
cmp
add
and
test
push
jmp
lods
ss
cmp
sub
testb
test
fstpt
lea
es
cld
je
mov
jnp
cmpb
insl
enter
mov
sub
imul
push
sbb
adc
jmp
out
mov
int3
rcrl
das
loope
sub
imul
xlat
mov
xchg
out
mov
mov
xor
lcall
mov
jl
inc
add
mov
mov
lret
sbb
jge
mov
pop
leave
push
jnp
movsl
jge
jns
outsb
mov
stc
pushf
aas
out
jp
xlat
cltd
pop
inc
mov
xlat
sti
mov
push
addb
lods
xchg
push
inc
inc
adc
insb
xchg
loope
inc
push
aaa
iret
ret
daa
mov
lcall
pop
shlb
or
cld
push
or
loop,pt
stos
fcomps
cli
add
xchg
mov
push
sbb
adc
and
movsl
call
fcmovb
mov
mov
insb
fistpll
mov
mov
or
icebp
enter
stc
lods
cmc
mov
mov
pop
scas
jo
cmc
jae
dec
mov
jecxz
mov
inc
fcoml
rcrb
mov
out
sbb
mov
mov
xchg
cmp
pop
ret
clc
sub
sub
or
cmp
mov
call
or
push
or
loop
movsb
pusha
repnz
adc
notl
sub
outsl
sub
out
adc
inc
cmp
test
sub
jb
inc
out
jmp
adc
push
pop
out
iret
pop
mov
pushf
notb
int3
mov
cmpsb
sbb
stos
ret
inc
sti
movsb
pop
cli
pop
stos
iret
push
in
into
popf
dec
ror
jle
enter
lahf
inc
xor
xor
inc
pusha
xor
ds
icebp
cmpsb
adcl
push
mov
dec
push
dec
pop
jne
aaa
and
add
or
int
loop
mov
lea
mov
or
clc
adc
pop
inc
mov
in
push
dec
loop
sbb
rclb
scas
cmpsb
mov
sub
jp
sbb
test
imul
je
xchg
mov
es
xchg
push
bsf
push
repz
dec
mov
shll
rcr
into
lods
shrl
in
push
jbe
sbbb
or
pop
add
and
push
dec
pop
loope
addb
jmp
sub
pop
dec
mov
dec
cmc
pop
inc
dec
xlat
or
xchg
shl
push
lock
push
inc
inc
push
es
lds
addr16
jno
cmp
pop
push
or
leave
dec
int3
ret
sub
arpl
cmc
out
push
fs
push
repnz
xchg
xchg
shl
decb
jge
lcall
jp
leave
jmp
cltd
or
in
hlt
ss
sahf
sub
mov
ja
mov
inc
test
pop
movsb
add
mov
and
mov
add
mov
push
shll
lret
add
or
or
pop
lea
das
inc
test
aas
fists
iret
inc
mov
xchg
adc
jmp
rcll
into
cs
inc
jbe
inc
mov
xor
sti
cmp
and
popf
mov
adc
jg
jmp
add
test
xor
pushf
pushf
inc
inc
and
jne
loopne
or
add
jg
out
xchg
adc
pushf
jnp
movsl
cmp
push
or
sub
in
xchg
fidivs
lods
movsl
xor
pop
fs
aad
xlat
add
cmp
aaa
mov
or
lods
cwtl
dec
jno
cmc
and
incb
push
stc
xchg
push
addr16
mov
mov
addr16
out
in
sti
mov
cmpsl
mov
notl
push
and
and
call
add
xor
mov
pop
cli
xchg
ja
push
call
int3
ljmp
fwait
mov
xor
test
aam
cld
jo
pop
push
or
cld
lret
cmp
inc
fistps
add
addb
std
push
dec
sti
mov
sbb
mov
data16
sub
out
inc
pushf
lods
push
fisttps
inc
hlt
mov
movsl
pop
mov
repz
push
roll
fsubs
addl
sbb
jo
aaa
mov
ljmp
adc
or
addr16
call
or
in
add
fldt
xor
ret
xchg
jg
fs
notb
xor
mov
imul
mov
push
dec
dec
or
ja
sbb
xchg
cmpsl
mov
insl
out
add
gs
sahf
push
pop
add
and
sarb
pop
mov
mov
leave
lcall
push
mov
jae
push
das
sbb
xor
lret
jp
mov
mov
ficompl
cmpsl
fdiv
adc
mov
and
es
outsl
pop
ficomps
hlt
xor
push
xchg
push
mov
push
lock
ficompl
push
xor
testb
and
cmc
imul
pop
pop
gs
mov
gs
and
sub
adc
mov
cwtl
pop
xor
stc
xor
stos
mov
push
nop
in
lods
jl
and
lcall
sbbl
js
sub
sarl
movsb
cmp
movsl
pop
and
push
enter
sbb
mov
mov
adcb
das
add
ljmp
fistpl
mov
movsb
cmp
daa
addb
sar
ss
lret
push
lahf
pop
mov
adc
loop
pop
pop
lock
and
mov
aaa
jge
adc
jl
cmp
adc
movsb
lods
add
imul
fwait
jb
enter
ret
pop
xchg
push
xlat
sbb
je
rcl
adc
and
mov
insl
addl
cmp
shlb
inc
icebp
decl
clc
jp
cltd
scas
xor
cli
leave
sbb
in
sbb
int
test
jno
mov
cli
xchg
pop
pop
fstl
test
js
loop
std
xor
dec
jmp
lods
xchg
jge
mov
je
mov
xchg
cmp
adc
xor
insl
scas
pop
dec
fcom
aas
insb
mov
cmp
jg
sbb
cmp
cmpsl
add
xchg
in
sbb
push
xor
inc
test
push
aas
pop
dec
mov
in
push
xchg
cli
sub
cmpsl
pop
pusha
xchg
in
in
sbb
and
cli
jle
arpl
sbb
mov
pushf
insl
xor
sub
cwtl
mov
std
fisttpl
or
sub
sub
lahf
repnz
xchg
adcb
bound
bound
pusha
pop
and
call
and
das
repnz
mov
xor
int
cmp
jp
test
imul
xor
popf
lds
add
sbb
pop
xor
fsubs
sub
jmp
pop
jl
outsl
insl
sbb
xchg
lea
outsl
inc
push
jmp
std
mov
xor
stos
xchg
inc
lret
fcomps
std
mov
push
xchg
adc
fidivrl
or
jp
dec
and
xorb
xor
lcall
inc
jge
xchg
ds
lea
push
out
push
xor
sti
dec
out
jl
cmp
mov
push
pop
inc
in
scas
cmp
xor
fst
mov
mov
out
xor
shlb
lea
jle
push
xor
pop
inc
sub
dec
push
sbb
adc
push
daa
stos
cli
push
push
add
gs
sub
lcall
orb
test
jb
pop
inc
rclb
xchg
jno
push
lods
dec
outsl
push
xlat
inc
mov
in
sub
pop
rorb
repnz
xchg
imul
dec
mov
dec
shrb
and
jmp
ss
test
outsl
mov
out
cld
dec
xchg
mov
rolb
in
push
loopne
xchg
xchg
les
jno
ljmp
mov
lds
or
jg
xchg
jb
and
add
dec
inc
or
dec
inc
scas
xchg
mov
and
test
scas
es
int
add
pop
int3
ret
push
xlat
clc
xor
jecxz
jno
lret
inc
push
mov
xchg
and
pop
in
xchg
aaa
imul
inc
and
es
sbb
nop
ss
mov
int
enter
lods
std
ja
add
repnz
daa
mov
mov
fcomi
sub
push
mov
xchg
sbb
icebp
jl
fisttpl
jge
aam
sub
pop
imul
ljmp
add
push
je
sahf
sbb
fxch
pop
mov
ds
hlt
stc
loope
stos
pop
add
outsl
jnp
insl
push
mov
outsl
sti
push
movsb
dec
or
pushf
divl
cmp
add
jp
jne
or
je
mov
mov
cltd
cmp
repz
inc
roll
loop
xchg
xchg
pop
inc
fs
xor
adc
push
mov
mul
mov
call
mov
test
inc
inc
push
sub
sub
mov
mov
ret
fidivs
push
ret
out
test
cmp
popa
mov
daa
mov
jnp
nop
daa
or
and
sbb
imul
xor
dec
arpl
pop
ja
pop
cwtl
std
mov
mov
xchg
test
lret
in
sbb
ljmp
mov
sub
loop
or
jbe
dec
in
mov
fsubr
lret
mov
pop
mov
jmp
inc
aaa
mov
mov
cltd
xor
xchg
and
jnp
inc
cmpsl
xchg
or
inc
rcl
cmpsb
test
mov
cmc
repnz
pusha
iret
mov
jo
ljmp
or
std
mov
inc
shl
xchg
das
pop
iret
cmpsl
pop
or
sbb
jp
dec
cmp
pusha
scas
sub
clc
inc
cmp
loopne
cld
add
call
xorb
mov
popa
xor
aam
or
fwait
cmp
dec
jo
or
das
insb
mov
mov
mov
pop
cmp
cmc
enter
push
xor
or
sub
pop
mov
in
jge
pop
push
adc
ljmp
pop
ljmp
mov
add
shrl
add
xchg
push
repnz
test
inc
sbb
out
push
add
xor
jmp
xor
stos
sbb
test
clc
jmp
mov
jb
push
pop
sub
adc
flds
sub
das
pop
aaa
stos
imul
sbb
in
addr16
add
jb
mov
xchg
jecxz
xchg
push
pop
mov
xor
mov
mov
jle
cmpsl
mov
pop
les
push
or
stos
mov
or
xor
test
adc
ljmp
and
dec
sbb
fbstp
mov
jne
and
lcall
fwait
pop
mov
pop
add
mov
movsb
xor
mov
xor
adc
fadds
adc
out
rclb
or
jge
ret
shll
or
jg
xchg
and
lret
out
mov
xchg
jne
test
inc
mov
xor
out
sbb
fdivp
push
sahf
inc
dec
and
dec
je
cltd
test
insl
in
int
mov
cmc
sub
aad
push
negb
cwtl
cmp
inc
sahf
xchg
xchg
lods
or
pop
stc
imul
jle
fnstsw
mov
sti
rcr
out
gs
add
pop
jge
subb
inc
mov
push
outsb
sbb
dec
sbb
xor
outsl
dec
or
jmp
jmp
lds
sub
shlb
stc
cmp
hlt
xor
sbb
cmp
mov
fnstsw
arpl
mov
mov
dec
in
mov
movb
xchg
inc
or
dec
int3
std
fs
loopne
push
cmc
aam
aad
jg
dec
ja
and
jo
pop
sub
xor
in
addr16
push
leave
sub
cmpsb
add
xchg
add
cmpsb
push
and
scas
shrl
mov
filds
xchg
xchg
fadds
mov
int
pop
mov
mov
repz
push
mov
lahf
and
adc
ja
pop
mov
mov
fxch
push
jp
pop
cli
cmpsb
or
sbb
xchg
inc
mov
inc
mov
sbb
mov
dec
cs
push
mov
das
xor
ret
insb
ss
popf
ficoml
push
mov
mov
or
cmpsl
cli
enter
sbb
push
push
repz
jbe
dec
bound
pop
cmp
in
scas
xor
fdivr
mov
pop
ret
test
ror
sbb
cmp
hlt
dec
xlat
xor
insl
sub
arpl
push
pop
mov
jnp
push
jbe
mov
add
mov
aam
lea
int
int
dec
dec
loopew
mov
sub
std
sbb
daa
dec
mov
cmpsb
rcr
je
add
arpl
adc
inc
aam
aad
jmp
test
in
arpl
xchg
pop
scas
xchg
into
inc
ja
sarl
pop
cmc
outsb
sub
frstor
ss
pop
fwait
lods
call
mov
cmpsl
in
and
cmp
pop
and
sbb
test
mov
xchg
push
inc
xor
xor
lods
pop
mov
or
push
mov
test
mov
or
xchg
pusha
fs
scas
and
dec
ret
cmpsl
mov
clc
lea
mov
adc
xchg
or
jae
not
sbb
into
lret
enter
daa
nop
test
mov
pop
jnp
lods
jle
in
adc
cwtl
in
xchg
les
adc
in
push
mov
xchg
out
push
mov
inc
mov
or
push
push
push
adc
push
dec
add
sbb
pushf
jge
fucompp
mov
cli
imul
and
push
cs
out
lea
adc
dec
cld
jae
faddl
enter
ljmp
sbb
lds
and
inc
arpl
add
fwait
mov
xor
cmpsb
xor
lods
sbb
outsb
sub
cmp
pop
movsl
lods
jae
pop
outsl
sub
popa
add
push
shll
sub
mov
sbb
iret
out
sub
ficompl
jnp
int
int
movsl
xor
push
mov
pop
dec
push
mov
enter
enter
sbbl
out
sbb
in
in
jecxz
mov
mov
addl
dec
jo
cli
in
test
add
insb
jmp
sub
xor
sbb
or
pop
lds
mov
jp
xor
ret
push
adc
mov
subb
mov
xchg
mov
pop
aaa
aaa
sarb
pop
jle
xchg
mov
negl
add
jge
das
xchg
pop
mov
add
add
cld
loopne
pop
adc
mov
pop
push
sub
nop
lea
fmul
inc
shlb
pop
jns
sahf
add
movsl
lret
xor
mov
mov
dec
in
xor
ds
repz
lret
cmp
cmp
hlt
add
or
rolb
push
add
cld
and
sbb
outsb
or
lea
outsl
mov
fs
pop
dec
imul
arpl
loope
insb
pop
andb
test
dec
sub
filds
sub
movsl
hlt
es
popa
mov
int
outsl
mov
lock
pop
ss
push
xor
xor
or
push
lods
test
jb
jg
ret
or
push
inc
in
into
pop
gs
ja
test
imul
bound
ljmp
dec
rcll
dec
or
je
jmp
pop
push
aam
sub
cltd
and
inc
in
mov
add
mov
cmp
mov
out
les
insb
mov
cmpb
or
mov
adc
mov
in
popf
sub
push
xor
add
loope,pt
push
adc
imull
les
leave
sub
add
push
inc
scas
dec
pop
jnp
rolb
pop
mov
loope
mov
dec
mov
int3
rcr
mov
cmp
scas
jae
cmp
rcrb
cmp
xor
fstps
andb
rolb
iret
xorb
shll
mov
jecxz
pop
ret
insl
test
notl
and
mov
out
mov
ja
mov
pop
xchg
inc
mov
inc
fcom
rclb
sub
inc
rorl
adc
imul
jno
sbbb
daa
add
lock
out
stos
push
inc
add
adc
xchg
into
in
adc
subb
dec
push
stc
test
sbb
xor
xor
cmp
mov
andl
iret
cwtl
sub
dec
lcall
or
or
xor
lea
mov
aas
lret
adc
cmp
jbe
shlb
loope
cmovne
push
xor
xchg
mov
adc
mov
arpl
dec
iret
loopne
dec
int3
xchg
inc
cmc
xlat
int3
sub
xor
adc
and
and
out
dec
out
ret
or
repnz
cmp
fbld
test
fnsave
idiv
sub
xlat
std
faddl
popf
ja
dec
add
mov
xor
loope
inc
inc
jno
adc
out
push
mov
addr16
jne
mov
pop
ja
push
or
adcb
mov
sub
mov
jne
or
xor
sbb
cmp
daa
jl
enter
testb
sub
xor
arpl
or
mov
sub
adc
aaa
les
jg
push
rcrl
add
ror
jbe
mov
arpl
and
jbe
mov
cmp
xchg
lret
std
xchg
mov
lods
test
ja
xor
out
adc
jl
push
push
mov
push
xchg
mov
sbb
mov
mov
cmpsb
mov
jp
testb
xor
lds
mov
xchg
sbb
xchg
repnz
mov
popa
fsub
sbb
lods
or
sbb
add
jmp
incb
pop
pop
test
dec
jae
cld
pop
add
pop
jns
imul
lcall
pop
mov
mov
decb
xchg
push
dec
insb
xchg
faddl
mulb
xchg
pop
scas
loop
dec
in
and
mov
inc
aad
ss
pop
lret
inc
or
jmp
add
sbb
mov
in
repz
jbe
les
arpl
hlt
inc
push
jmp
pop
xchg
ret
dec
icebp
add
xchg
push
jne
shlb
add
out
xor
les
mov
out
pop
mov
cmpxchg
nop
int3
jge
jns
je
jecxz
jno
cmp
das
mov
cmp
lods
aaa
pop
lea
jbe
jmp
loopne
andl
jnp
pop
jg
ret
sub
mov
xchg
arpl
out
jb
cmp
inc
testb
mov
push
and
jb
dec
mov
add
enter
inc
sbb
add
in
inc
iret
sub
aaa
stc
mov
lret
dec
int
dec
mov
or
jns
in
jo
mov
add
mov
out
outsb
or
bound
jno
movsb
push
push
inc
fbld
sbb
sahf
pop
js
movsl
jecxz
inc
sbb
pop
mov
jmp
mov
add
xchg
cld
xor
cli
adc
or
repnz
shrl
mov
pop
cmpl
es
movsl
fldcw
push
sbb
out
cwtl
movsl
scas
cmc
roll
pop
fs
fsubrl
push
shrl
mov
add
or
aad
mov
jg
stc
sub
out
movsb
in
jmp
mov
lods
sub
add
pop
push
mov
or
jo
cld
adc
sbb
cmp
scas
aam
mov
cmp
popa
inc
xor
popa
cli
cmp
lock
push
movsl
jno
jne
jl
dec
adc
int
and
dec
pop
out
push
xchg
push
mov
in
outsl
rcrl
push
pop
shlb
daa
jp
sbb
aaa
add
shlb
add
jo
dec
jno
iret
into
or
and
sbb
or
jo
mov
popa
jbe
dec
sub
push
imul
popf
push
psllw
out
fs
aaa
rcll
into
movsl
in
add
mov
dec
pop
mov
insl
in
xchg
stos
mov
std
mov
mov
jle
pop
and
inc
xchg
cwtl
stc
aam
sub
xor
or
repnz
xlat
add
sbb
cmc
xor
aam
out
cmpb
cmc
lret
inc
xchg
or
popf
add
or
dec
js
lahf
cmp
adc
scas
mov
out
push
jl
mov
inc
adc
push
out
arpl
shlb
adc
xchg
dec
scas
cwtl
or
mov
shll
inc
sub
sbb
or
sti
pop
add
in
and
icebp
inc
xor
or
cmpsb
xchg
inc
cmp
xor
fsubr
fdivrs
les
je
push
pop
ss
int3
push
lock
data16
divl
shll
std
shrb
or
icebp
add
jp
movsl
shlb
repz
or
outsb
adc
sbb
fiadds
push
jmp
push
repnz
adc
leave
call
leave
or
lcall
das
xor
shlb
mov
pop
jns
xor
sub
jns
movsb
push
mov
fs
into
sbb
clc
push
stc
test
adcl
dec
sarl
pop
cmp
std
popa
bound
pop
fldcw
mov
pop
mov
lcall
inc
pop
in
jns
lods
sti
xor
jbe
cmp
add
or
mov
nop
fbstp
mov
mov
lret
insl
roll
pop
pmuludq
adc
lock
pop
leave
ja
dec
pop
int
rorb
rcl
fwait
mov
and
cli
loope
lea
jl
es
dec
lret
xchg
pop
push
or
xchg
pop
popa
test
mull
es
xchg
cltd
dec
mov
in
xor
inc
jns
jge
pop
and
bound
xchg
dec
xor
je
js
and
loop
mov
jno
out
repz
test
lock
into
jecxz
mov
dec
lods
stos
push
arpl
xor
loop
inc
lcall
arpl
leave
scas
lret
mov
pop
inc
sbb
jmp
pop
jge
je
insb
adc
xor
inc
aam
add
pop
push
sahf
push
mov
fldenv
sub
adc
mov
pop
pushf
mov
pop
ss
fwait
push
xchg
or
es
mov
fs
mov
outsb
lods
mov
sarb
pop
sti
dec
orb
or
daa
popf
fnsave
adc
clc
fcmovnu
ficompl
sub
mov
push
sub
call
test
fmull
aam
int3
lods
hlt
ljmp
mov
sbb
jl
pop
adc
enter
mov
add
sbb
mov
sarl
sub
andb
ret
fldcw
adc
inc
pop
pop
lods
lret
imul
aaa
and
icebp
shlb
mov
and
push
out
scas
mov
sbb
fsubrp
push
pop
jg
frstor
push
fiaddl
sbb
jecxz
ja
or
push
sub
pop
sub
mov
in
sbb
idivl
sbb
dec
es
fs
xchg
fsubl
mov
bound
frstpm(287
ret
or
mov
inc
clc
adc
jno
enter
push
shlb
adc
jle
add
cltd
xchg
shrb
mov
mov
aas
int
push
arpl
adc
int3
loop
push
or
adc
push
sub
mov
xchg
in
call
mov
ret
inc
outsb
cmp
xor
xchg
rol
xchg
sub
fnstsw
insl
jle
bnd
loope
cmp
es
sub
outsl
or
mov
mov
xchg
js
xchg
inc
cltd
dec
call
cmpsl
or
mov
push
mov
jge
sti
adc
mov
arpl
cmp
cmp
mov
inc
movsl
mov
push
test
mov
movsl
aaa
pop
std
in
ficompl
std
es
sbb
sub
jmp
cli
sbb
cmp
hlt
or
xchg
ljmp
sahf
mov
mov
and
fs
imul
in
cwtl
imul
jo
ret
cmp
divb
repz
not
lods
data16
ds
iret
mov
adc
mov
ss
sbb
jae
call
pop
ds
sub
fsubrl
jecxz
mov
xchg
clc
lcall
adc
inc
xor
push
shrb
pop
jb
aad
mov
ja
movsb
pop
test
pushf
fbld
ja
into
add
lock
xor
js
or
fisttps
movsb
fldt
pop
dec
out
jb
enter
repz
je
pop
mov
mov
loop
les
lahf
dec
pusha
xchg
shl
aaa
sbb
divl
push
push
fmulp
sub
iret
add
mov
inc
hlt
inc
in
xor
shrb
push
bnd
out
push
fldl
xor
rol
mov
imul
inc
pop
jne
mov
lcall
in
jae
gs
mov
xor
ret
push
cmp
mov
imul
popa
xchg
inc
js
lcall
popa
dec
lods
mov
sub
in
add
add
call
cmpsb
jecxz
in
push
lds
xor
je
int
sbb
pop
mov
adc
push
divl
out
imul
cli
jo
xchg
mov
aam
in
jmp
adc
int
adc
and
jle
cmp
aam
and
pop
fs
sbb
pop
add
js
jae
adc
dec
in
fbld
bound
das
cmpsb
out
sti
push
in
adc
addl
lcall
inc
push
adc
cmc
lods
mov
cmc
cltd
mov
xor
jge
loope
fiadds
fs
stos
es
data16
and
enter
ss
cmp
shll
cmp
mov
inc
mov
cmp
mov
push
dec
adc
insb
fs
adc
idivb
add
and
jmp
inc
jnp
into
rorb
rorl
in
ljmp
xlat
lret
addr16
mov
jl
pop
add
sarl
lods
inc
pop
cltd
dec
and
int3
inc
pop
rcrb
xorb
dec
in
xchg
jnp
fdivs
sbb
cmpsl
jne
sub
std
mov
jge,pt
xor
mov
mov
ret
push
mov
xchg
out
lock
cmp
mov
xor
xor
in
lfs
add
cmp
rcl
int
rolb
movsl
das
scas
xor
pop
and
xlat
outsb
sahf
pop
cmc
push
enter
fwait
clc
ljmp
rclb
movsl
sbb
gs
xchg
dec
aaa
cltd
in
inc
xor
and
rorb
xor
daa
pop
rcr
adc
mov
mov
out
or
popa
sub
clc
push
movsb
cmpl
jns
repz
fcomps
mov
sub
pop
adc
lock
lock
dec
pop
pop
mov
sub
push
rcrb
jno
test
mov
dec
in
xchg
call
mov
xor
cmp
popa
scas
bound
xchg
aad
test
sub
in
and
or
lods
int
lcall
jbe
das
adc
mov
aad
sbb
cmp
sarl
push
in
xchg
sbb
pop
push
push
aad
cmp
sub
rcrl
movsl
xchg
add
mov
adc
loop
adc
sub
add
lcall
icebp
jmp
jnp
and
icebp
std
adc
cs
fwait
movsb
add
fstpt
in
xor
add
rcrl
dec
aas
fbstp
or
xor
xor
pushf
push
adc
je
inc
cmp
xchg
jp
ret
stos
xchg
movsl
jae
fsubs
cs
xchg
push
fwait
es
rolb
mov
test
call
mov
push
lods
push
sahf
cmc
ret
jo
sahf
pop
or
aam
hlt
add
push
cmp
jne
lods
adc
daa
push
mov
shr
out
and
xor
xorl
sub
jp
sub
pop
int3
mov
add
and
mov
mov
mov
stos
ficompl
aad
and
jb
jmp
jb
sbb
loopne
xchg
jne
lret
cmp
or
sbb
lea
inc
testl
scas
sahf
fildll
imul
mov
jp
hlt
or
xchg
lret
fcmovbe
out
bound
mov
in
addr16
js
aad
fucomip
or
inc
in
fildll
out
adc
punpckhbw
pusha
mov
das
adc
sbbb
fldcw
adc
adc
xor
adc
or
loop
ljmp
dec
mov
out
aam
mov
mov
scas
or
std
scas
cmc
mov
mov
int
imul
push
push
scas
test
xor
inc
sbb
pop
or
jno
sti
rcll
push
pop
adc
cmp
push
pusha
call
jg
xchg
inc
mov
inc
mov
movsl
leave
cmp
loop
dec
and
dec
or
test
iret
xor
popa
pushf
cmc
push
push
mov
nop
cmc
and
jb
push
inc
inc
fwait
mov
neg
in
gs
pop
jmp
out
xor
fisttpl
rol
rorl
fistl
test
fcmovnb
out
add
sbb
mov
into
or
lds
mov
flds
pop
cs
jmp
enter
ret
dec
mov
int
push
stos
pop
out
pop
out
loope
sbb
cmc
dec
inc
pop
test
iret
dec
pop
pushf
fidivl
sub
in
je
cmp
cmp
stos
test
cwtl
sahf
pop
movsl
shl
andl
daa
inc
xchg
lea
jnp
lret
jne
dec
xor
mov
cmp
add
mov
cmc
xor
aas
je
lock
movsl
movsl
mov
dec
cmp
jbe
mov
fwait
pop
mov
loopne
lret
clc
xor
cwtl
aad
pop
mov
xor
xchg
push
push
enter
jae
cld
xor
xchg
or
mov
movsl
fnsave
in
mov
clc
out
icebp
mov
into
mov
add
shrl
dec
ret
out
decb
push
jb
xor
pushf
cmpsl
or
js
cs
xlat
pop
divl
cmpsb
jge
cmp
sti
add
mov
enter
cmpsb
inc
data16
add
push
push
dec
push
std
or
xor
pop
mov
andb
fadds
add
mov
xor
xchg
sub
cld
int
nop
icebp
pop
pop
and
into
lret
jmp
fnsave
inc
scas
outsl
jmp
pop
sub
movsl
in
imul
push
mov
or
mov
jbe
mov
movsl
push
jge,pn
xor
cmp
mov
ss
or
dec
xor
mov
and
fcomip
sbb
stc
or
mov
cmpsl
test
in
cld
cmp
xor
rcll
leave
sub
arpl
enter
rorl
mov
lahf
pop
inc
xchg
xor
outsl
imul
xor
dec
or
mov
ret
inc
sbb
pop
inc
sahf
ret
jmp
shlb
jg
adcb
cs
inc
loopne
push
adc
mull
fcmovbe
cs
xchg
lods
ljmp
xchg
cmp
ffree
and
inc
mov
sub
mov
lods
stos
xchg
push
inc
xor
mov
jo
imul
adc
loopne
fldenv
mov
inc
sarl
pop
sbb
pop
test
add
jbe
in
or
lock
pop
cmpsb
dec
push
xchg
or
push
aad
iret
setae
xor
in
adc
into
lock
and
fisubrs
faddl
or
pop
jb
testl
pop
add
mov
out
mov
sti
push
mov
push
fs
inc
into
inc
xor
or
lret
inc
add
and
movsl
dec
sub
sbb
xor
push
fwait
mov
in
ret
lods
aad
out
daa
xchg
cmp
adc
pushf
clc
pop
rcrl
pusha
lods
mov
jecxz
dec
addr16
das
mov
xor
mov
dec
leave
test
into
rcrl
cmpl
mov
mov
loop
inc
push
in
enter
sbb
pop
adc
push
repz
xor
imul
into
jne
sti
popf
cmpsb
bound
sub
mov
mov
pop
push
icebp
jl
repz
pop
mov
mov
fsubrs
or
mov
insl
mov
lock
xchg
dec
movsl
dec
lcall
std
sbb
out
filds
dec
pop
je
test
jecxz
add
mov
push
add
loop
add
das
in
test
call
adc
cli
rcr
lahf
sub
outsl
adc
and
mov
dec
gs
jmp
push
mov
jnp
aaa
add
or
mov
xchg
xor
shlb
inc
sbb
cmpsl
push
or
pop
cmp
mov
aam
push
pop
clc
out
lahf
push
inc
leave
push
pop
fsubrs
and
mov
les
ss
loope
fwait
call
cmpsl
xchg
add
adc
loope
test
pop
rolb
inc
pop
aaa
fs
sahf
pop
xchg
jmp
xchg
push
insl
jmp
add
les
in
push
imulb
push
and
cwtl
adc
cld
mov
mov
adc
cltd
mov
dec
gs
imul
scas
inc
gs
inc
movl
push
xchg
pop
ljmp
pop
in
lock
cmp
call
cmp
jne
out
xchg
jecxz
incb
decb
pop
mov
sub
rorl
cs
jnp
xor
ret
lods
sub
pop
sahf
add
nop
mov
push
add
leave
dec
out
or
adc
jp
mov
inc
mov
shr
mov
outsb
xchg
add
mov
mov
xor
lods
fisubs
insl
xchg
iret
stc
iret
adc
xchg
aad
aas
mov
mov
gs
ja
lret
pop
iret
loop
or
xchg
movsb
pop
mov
clc
lahf
push
mov
sbb
jl
clc
rorl
sbb
mov
ja
adc
pop
cmp
fcoml
jnp
lcall
call
nop
call
dec
and
dec
clc
mov
mov
dec
xlat
sbb
xchg
push
push
and
fwait
add
push
sub
push
pop
cmp
pop
sub
xchg
xchg
punpcklbw
jbe
adc
mov
sbb
fstl
sbb
or
lcall
imul
jge
repnz
xor
sbb
add
xor
add
cmp
xchg
jne
subl
add
insb
inc
xor
fwait
lret
cmp
enter
push
lds
xchg
mov
mov
mov
sbb
xor
ficomps
pop
push
dec
in
cmp
daa
mov
adc
push
xor
mov
shll
lods
push
mov
and
repz
cld
xchg
jg
mov
sahf
inc
test
push
pop
or
add
xchg
add
push
add
mov
add
movsb
pop
pop
mov
scas
mov
mov
idiv
test
scas
and
ljmp
jecxz
shrl
ljmp
js
mov
hlt
ja
inc
fcmovnu
cmp
daa
sbb
lods
bound
and
aas
gs
stos
mov
fcomip
push
hlt
sbb
inc
inc
jnp
mov
daa
mov
add
out
fcomps
repnz
subb
lret
xor
aam
icebp
dec
stos
rcrl
or
or
and
in
fadds
std
shll
or
or
mov
pusha
xor
test
dec
mov
xor
and
movsl
sub
adc
rep
mov
jo
mov
cwtl
cmpsl
outsb
insb
fnstcw
xchg
mov
jne
pusha
or
add
push
dec
dec
cmpsb
push
xor
dec
outsb
scas
xchg
iret
popa
mov
shlb
loopne
sbb
push
xchg
out
cmpsl
push
mov
imul
cli
popa
add
mov
sub
pusha
inc
inc
mov
stos
je,pt
xor
fucomp
adc
lds
pop
arpl
out
cmp
push
and
cltd
jae
adc
bound
inc
iret
jo
jne
vmovd
outsb
push
add
sbb
sub
call
cmp
call
jmp
out
adc
movsl
or
pusha
ljmp
sub
test
mov
xor
int3
add
sub
je
iret
sbb
inc
test
mov
adc
rcrb
int3
sbb
fs
sub
jbe
mov
lret
aas
lcall
popa
dec
scas
mov
mov
lock
insb
lcall
rol
stos
jns
push
js
cmc
xchg
inc
sahf
add
loopne
or
mov
and
cmpsb
add
scas
jb
aad
jae
and
push
imul
mov
iret
fisubs
insb
xchg
mov
sete
mov
pushf
cmp
loopne
or
inc
pop
arpl
xor
clc
fcmovbe
xchg
inc
jmp
cmc
dec
pop
lea
loopne
xor
sub
lahf
ret
dec
push
dec
leave
out
jbe
mov
mov
mov
cld
add
pop
inc
xor
pushf
out
mov
push
aad
push
push
std
add
bound
jmp
jbe
push
imul
rol
imul
fcoms
and
lods
repnz
pop
xchg
jmp
inc
mov
pushf
loopne
mov
ret
icebp
xchg
fdivrl
mov
mov
inc
mov
xor
dec
mov
out
movaps
jecxz
test
rolb
es
iret
cmp
dec
fwait
movsl
rcr
push
mov
jb
call
pusha
push
pop
sahf
call
aaa
scas
outsb
push
outsl
mov
xor
xor
jg
lods
adc
ja
jnp
xchg
rcrb
xor
loop
lcall
aaa
sbb
cltd
clc
sbb
mov
xchg
pop
stos
out
int
or
pop
pop
in
scas
clc
int
andb
imul
out
scas
mov
sti
shll
mov
fstps
push
es
dec
and
js
jmp
mov
stc
push
sbb
outsl
lds
jmp
cmp
aam
pop
dec
jns
pop
push
or
addr16
out
cld
jmp
fiaddl
call
pop
push
mov
movsl
jg
or
pop
sarl
cwtl
aam
xchg
sub
dec
xchg
cwtl
pop
psubsb
incb
mov
hlt
imul
push
shrl
stos
mov
lcall
cli
mov
js
xor
aas
push
mov
popa
int
xchg
ljmp
cmp
jne
push
insl
sbb
dec
sahf
or
jle
imul
ja
ljmp
aas
stc
lea
push
movsb
add
add
inc
loop
iret
cwtl
and
movsb
push
and
jp
outsb
sar
xchg
dec
test
pop
mov
jecxz
out
pushf
xchg
sahf
lret
jo
mov
sbb
popa
jnp
test
scas
mov
rcll
jg
cwtl
adc
icebp
dec
aad
xchg
popa
mov
mov
mov
pop
or
xor
les
addb
mov
pushf
mov
mov
cli
xor
fstpt
sbb
ds
aad
fwait
lock
push
sbb
popf
cmp
rorl
pop
pop
lock
cmc
das
mov
mull
and
das
dec
push
sub
push
adc
mov
mov
sub
adc
fisttpll
xor
xchg
xchg
mov
xor
je
lea
loope
adc
push
mov
mov
push
sbb
stc
xchg
pop
movsb
adc
jle
xchg
xchg
mulb
add
test
fs
and
xor
stos
setae
dec
mov
or
add
cli
into
scas
inc
add
ljmp
push
arpl
addr16
xchg
add
cltd
in
mov
fwait
jg
int3
mov
out
mov
sub
xchg
out
xor
mov
xlat
js
sbb
mov
jle
jnp
jmp
add
xor
add
mov
jg
rcrb
pushf
and
adc
mov
fs
xor
mov
xchg
pop
xchg
rorl
lret
pop
cmp
cmp
add
xor
dec
daa
or
mov
cmp
iret
loopne
into
push
jecxz
cwtl
movsl
jge
andb
sbb
mov
adc
cmp
dec
daa
jle
add
pop
rolb
or
dec
mov
scas
repnz
pop
cmpsl
stc
sbb
insl
xor
in
xchg
push
xchg
or
add
sbb
cmp
add
lret
mov
loop
push
mov
outsb
pop
dec
push
outsb
and
adc
faddl
cli
leave
inc
sahf
push
popa
jp
pop
sub
cltd
nop
mov
lahf
ret
pop
pop
add
pop
xor
cmpsl
aaa
cmpsl
roll
add
pushf
mov
loopne
rcll
ljmp
jp
xchg
push
sbb
jb
and
xor
je
cltd
imul
jecxz
mov
mov
out
xchg
adc
out
call
mov
fildl
pop
in
push
bound
push
inc
cmp
jno
fcompl
xor
subl
mov
or
xor
insb
lahf
push
inc
pop
xor
sarl
out
pop
mov
mov
mov
mov
mov
shll
faddl
in
cmpsb
pushf
inc
xor
lods
dec
enter
xchg
push
jns
jecxz
js
ljmp
iret
imul
mov
pop
cmc
clc
and
sub
and
fidivrl
adcl
stc
cmpsb
pop
mov
aaa
jle
jne
loope
jge
xor
xor
shrb
mov
cmp
xchg
pop
jo
xchg
jg
lods
outsb
es
movsb
cltd
and
repz
ljmp
clc
mov
xlat
enter
sbb
rcrl
jne
clc
jbe
std
and
push
xchg
in
cld
cmp
adc
xor
sbb
mov
shrl
xchg
fisttpll
imul
shrb
pop
ljmp
pop
clc
imul
pushf
pop
stos
push
ret
xadd
insl
jg
outsl
or
hlt
loop,pn
mov
movsl
ljmp
mov
jnp
mov
push
jmp
rcll
push
adc
ja
push
shrl
mov
sub
fcoml
jno
push
in
add
adc
call
mov
je
decb
add
fwait
les
decb
rorl
lret
hlt
lcall
ret
and
mov
dec
mov
sub
xor
flds
xor
stc
movsb
inc
push
cmpsl
add
push
outsb
lret
pop
inc
mov
add
es
xchg
int
rcr
xchg
xchg
push
lea
sbb
and
jns
scas
inc
mov
test
pop
jl
rclb
jg
push
repnz
mov
jl
lods
or
push
sub
aaa
push
pop
roll
cmp
jle
jecxz
mov
xchg
cli
cmp
popf
cwtl
inc
push
dec
ss
dec
sbb
cmp
es
int
gs
xchg
pushf
xchg
xchg
pop
in
dec
loop
insb
and
and
out
in
imul
cli
pop
movsl
xlat
adc
loope
xchg
loop
xchg
dec
hlt
fmull
fs
pop
dec
shrb
les
mov
push
into
pop
leave
popa
cld
mov
mov
jle
shll
imul
xlat
push
arpl
jge
insb
cmp
ja
xor
jno
in
push
inc
repnz
cmp
xchg
cld
andl
bound
out
scas
mov
iret
push
sub
sbb
arpl
sahf
mov
jg
push
xor
cmc
loop
cmp
stos
pushf
mov
or
cmp
ret
xchg
jbe
lods
and
in
inc
sub
mov
sbb
out
lret
jae
rcr
daa
add
adc
arpl
lods
call
inc
test
xor
out
sbb
iret
xchg
jb
jnp
imul
sbb
xchg
and
jmp
int3
popf
call
stc
mov
mov
lret
push
scas
xchg
std
xor
pop
inc
lock
bound
mov
sbb
jne
je
dec
adc
push
jns
push
test
fldt
xor
loope
mov
mov
sar
fisubl
cmp
ljmp
xor
insb
repnz
lods
inc
xor
out
ss
faddl
movsl
loopne
ljmp
xchg
pxor
popf
popf
imul
and
mov
jbe
or
out
mov
inc
test
sar
lods
insb
push
sbb
push
pusha
repnz
add
inc
loopne
out
lock
or
mov
inc
pushf
xlat
clc
ficompl
jnp
loopne
inc
jl
jg
lock
sub
scas
popw
lea
cmp
lea
jne
stos
loop
push
rcll
cmp
ret
fists
xlat
xor
lods
mov
gs
sbbb
ljmp
leave
es
mov
and
js
pop
and
mov
sub
xor
and
int3
cli
sti
xchg
xlat
hlt
pop
pop
faddl
add
dec
icebp
clc
mov
mov
pop
sub
ret
push
loope
xorl
movb
add
call
push
inc
shll
or
add
fists
fistl
xor
cltd
push
sub
add
jns
push
shrl
add
push
cs
je
insb
mov
mov
sbb
mov
fisubl
test
into
lods
cmc
popf
mov
cmp
sbb
inc
cmp
add
push
push
inc
test
jb
inc
pushf
inc
lret
push
dec
out
cmp
call
cwtl
les
pop
jne
and
add
in
and
sbbl
dec
mov
mov
cmc
push
ret
rorb
nop
es
hlt
pop
loop
fs
cmpsb
movl
cltd
mov
stos
ja
cmp
bound
enter
mov
rep
lods
sbb
sub
push
adc
mov
lods
maxps
inc
add
cmpsl
sbb
ja
push
mov
outsl
sub
icebp
sbb
dec
in
mov
ret
imul
sub
dec
out
mov
adc
ret
or
sub
imul
xchg
and
arpl
vxorpd
mov
scas
sub
dec
pop
push
mov
cmp
mov
out
imul
or
dec
inc
jae
sub
je
clc
push
mov
into
push
sub
shll
cli
pop
jno
add
cltd
xlat
and
stos
inc
pushf
and
dec
and
lods
lea
cli
ds
pop
mov
das
sbb
lret
and
shlb
ds
lcall
mov
pop
add
jne
lock
or
scas
xchg
cmovns
imul
cmp
sbb
and
mov
in
adc
es
pusha
std
jp
in
jmp
lcall
or
add
inc
divl
mov
pop
push
dec
sbb
das
fwait
lret
adc
and
xor
daa
mov
lock
xor
decb
mov
jge
stos
sub
cmp
imul
adc
dec
ja
inc
leave
jge
sahf
xlat
mov
sarb
cmp
jnp
filds
push
stos
test
jmp
or
mov
lret
in
fidivrl
shll
jmp
pop
je
cltd
or
fdivrp
sbb
and
adc
push
mov
xchg
into
hlt
std
mov
mov
push
xor
movl
loopne
jmp
push
and
push
jmp
out
andb
je
pop
xchg
popa
std
xchg
icebp
and
xchg
and
dec
pop
das
hlt
cld
xor
mov
inc
inc
repnz
xchg
lock
loope
xor
jae
pop
fstpl
rcll
xchg
popa
and
mov
jnp
jecxz
int3
cli
cwtl
xchg
mov
adc
xlat
inc
push
in
jmp
insl
pop
add
mov
jbe
sbb
pop
fs
loop
mov
hlt
rcrl
loope,pt
pop
jmp
stos
movb
repz
mov
imul
dec
movsl
mov
nop
and
in
or
or
int3
sti
xor
mov
fst
daa
lock
pushf
push
out
int3
lock
pop
push
push
hlt
ret
aaa
xchg
sahf
shrl
inc
pop
mov
cld
sub
cmp
mov
repnz
out
xlat
push
pop
jbe
or
inc
push
xlat
popf
push
loopne
aaa
loopne
jb
lret
add
into
shr
adc
in
aaa
insl
mov
cmpsl
mov
dec
mov
pop
and
adc
faddp
cld
or
icebp
sbb
mov
test
mov
rcrl
xor
mov
adc
int
es
sbb
ret
mov
and
iret
pop
xor
loopne
cwtl
jmp
icebp
addr16
out
push
test
into
xchg
cmp
add
mov
xor
cmp
cmp
jp
jbe
int3
fbstp
adc
fsub
lods
dec
mov
sbb
pop
or
push
cmp
dec
int
popf
arpl
in
popf
inc
xchg
divb
roll
cmc
movsl
scas
mov
adc
pushf
aaa
int3
fstl
loopne
movl
mov
sbbb
cld
out
decl
adc
pop
adc
jg
sbb
push
lret
xchg
add
dec
adc
xlat
shl
pushf
out
mov
adc
fcompl
mov
mov
test
mov
and
ljmp
aas
push
gs
mov
dec
lcall
scas
mov
shll
lret
adc
pop
cld
fildl
je
jo
movsl
into
add
sbb
test
movsl
mov
adc
mov
out
pusha
add
mov
sub
test
jp
push
add
cmp
push
arpl
out
cltd
enter
pop
mov
imul
add
popa
mov
imul
pop
lahf
push
aas
mov
mov
int
lahf
cmp
cmc
leave
xchg
and
and
mov
and
addr16
mov
cltd
xlat
inc
pop
mov
or
lret
pop
loopne
fcmovbe
inc
mov
gs
pop
aad
mov
lds
gs
enter
lock
add
lods
es
popf
std
pusha
mov
dec
pop
and
and
sbb
mov
ja
push
mov
lret
ss
clc
rorb
scas
jae
push
jno
push
enter
mov
push
shrl
les
popf
fs
push
fucom
mov
js
daa
lods
mov
and
inc
mov
fimuls
mov
add
xlat
cmpsb
fcompl
pop
adc
mov
inc
inc
adc
aas
shrl
ss
test
repz
mov
push
loope
xchg
mov
push
sti
cmp
fsubrp
outsl
ljmp
add
cmpsl
ja
jne
out
popf
and
outsb
inc
add
push
adc
imul
ficoml
xor
ror
cmp
scas
iret
or
out
add
js
mov
mulb
push
xor
movsb
aam
xchg
jp
push
mov
mov
or
ja
sahf
cmp
sbb
add
test
mov
loope
cmpsb
sub
into
push
cmp
sbb
mov
jbe
xchg
outsl
test
and
pop
adc
xchg
cmpsl
pop
ret
xlat
pop
sub
pop
add
test
pop
bound
xchg
xchg
lods
fnstsw
mov
push
jmp
fs
add
movsb
popf
rolb
adc
pop
pop
arpl
arpl
ret
lahf
fmulp
xor
mov
push
mull
pop
pushf
or
sbb
push
out
sahf
gs
jne
jle
pop
dec
mov
push
cmp
hlt
xchg
stc
std
xchg
mov
xor
insl
add
mov
xchg
inc
jmp
ss
push
out
cmpb
cli
push
mov
mov
mov
stos
sbb
pop
loopne
stos
xor
test
aad
ljmp
dec
mov
push
lret
fdivrs
sbbl
jns
lahf
mov
adc
mov
mov
or
and
xlat
jnp
data16
ret
dec
mov
and
mov
pop
mov
lret
aad
jno
xchg
mov
pop
mov
in
loopne
cld
mov
hlt
movsb
mov
outsl
sbbb
or
sub
fnsave
push
mov
dec
inc
jne
out
xchg
xchg
mov
fnstcw
jl
mov
adcl
xchg
xchg
dec
mov
or
sub
xchg
mov
xor
int
pop
jp
ja
filds
movsb
xor
fisttpl
clc
fsubs
test
das
mov
pop
inc
stc
xor
negb
bound
jle
xchg
int3
mull
jle
xor
ja
jo
popa
jl
xchg
mov
in
scas
int3
lea
stc
scas
xchg
fmuls
dec
sub
fidivrl
pop
sub
lds
pushf
aam
jo
por
inc
mov
inc
das
dec
add
dec
clc
fsts
xchg
es
lods
jnp
and
jp
and
xor
pop
hlt
sub
ficoml
push
xchg
sub
fidivrs
mov
lret
jne
leave
mov
into
push
mov
adc
mov
rolb
sub
ja
cmp
sub
pop
rorb
adc
cmp
js
pop
lret
adc
or
negb
out
add
sbb
xchg
sbb
xor
push
cmp
mov
jne
mov
mov
xor
out
mov
es
out
mov
loopne
insb
inc
or
pop
imul
dec
jno
inc
dec
xchg
jae
fwait
mov
outsb
pop
es
jo
dec
out
jl
fdivrl
jo
adc
xor
add
in
outsb
jnp
aam
xchg
movsb
lods
sbb
fiadds
popa
fists
sbbl
mov
pop
aad
inc
pushf
mov
jbe
aad
test
push
jno
push
mov
push
cld
lds
cmp
repnz
mov
shlb
enter
xor
fnstcw
movsl
aaa
jns
cmp
imul
ret
enter
iret
adc
es
shlb
jno
pop
es
imul
sti
pop
pop
sub
sbb
sub
xor
jg
dec
mov
shlb
mov
or
loop
enter
add
pop
mov
or
sbb
out
mov
sub
jmp
notl
ret
movsb
inc
ret
sbb
push
mov
mov
sbb
mov
push
mov
out
pusha
jae
dec
lds
jmp
es
sbb
sbb
scas
push
jo
hlt
sbb
mov
sahf
cmp
push
fistpl
push
enter
push
cmpsl
add
cs
sub
fsubr
sub
daa
pusha
add
enter
cmc
jp
sub
adcl
scas
cmpsl
leave
xchg
clc
mov
cmpsl
push
popa
stos
add
and
mov
push
bound
pop
into
arpl
mov
or
aas
es
sbb
adcl
std
aad
mov
insb
test
push
clc
lods
icebp
mov
xor
aam
outsb
imul
in
lret
fcom
xorl
xchg
adc
movsl
and
push
cld
testb
fwait
gs
int
sbb
and
sbb
add
test
and
and
call
xor
in
mov
enter
sahf
xchg
daa
or
pop
and
sbb
popf
fs
inc
fninit
loopne
or
mov
add
fwait
push
lds
bound
aas
shll
data16
outsl
ljmp
jmp
xor
adc
dec
add
sar
jl
push
jno
dec
fnstsw
mov
jo
add
mov
fldl
insb
test
xchg
mov
mov
push
loopne
data16
lods
adc
ss
xorb
pop
lds
aaa
xorl
sub
or
test
stc
mov
xlat
jg
lds
pop
out
std
jb
xchg
cmp
aas
fildl
test
sub
xchg
mov
jp
lret
cs
sub
ficompl
inc
int3
ror
icebp
push
pop
xchg
arpl
or
jg
adc
lret
push
add
push
xchg
pop
inc
scas
sbb
lds
sbb
mov
dec
pop
roll
mov
mov
or
push
notl
jb
add
pushf
dec
arpl
mov
inc
data16
sub
repnz
xchg
outsl
imul
pop
adc
push
ret
dec
push
into
xchg
add
mov
mov
loope
pop
loope
nop
jmp
out
lds
jl
and
popf
cli
jnp
mov
dec
jecxz
clc
push
fwait
pop
jg
ret
fwait
in
xlat
mov
arpl
jns
mov
leave
dec
loope
adc
sbb
adc
fildll
or
lcall
shll
mov
in
insl
mov
scas
nop
cmp
jne,pn
in
mov
aas
lods
fisubs
add
pop
mov
or
pop
jno
in
and
pop
sbb
jl
jno
je
icebp
or
in
xor
pusha
rclb
rclb
cmp
mov
outsb
out
fdivrl
arpl
push
adc
movsb
movsl
scas
stc
outsb
movl
sub
mov
and
pop
cmc
and
mov
daa
jl
inc
push
je
mov
pushf
mov
pop
sub
loop
shrb
aaa
adc
ret
push
xor
gs
jmp
test
lds
jne
add
aaa
xchg
xchg
xchg
mov
loopne
test
aad
ret
add
in
insb
xor
in
jo
inc
pop
nop
jno
ret
push
dec
mov
jns
repnz
ds
mov
add
cmp
and
nop
mov
mov
into
xor
inc
or
ret
mov
xor
lock
data16
cmp
xchg
sbb
addr16
mov
mul
mov
into
outsb
addr16
push
nop
pop
je
xchg
pop
push
cmp
add
pop
arpl
xchg
mov
dec
ljmp
js
inc
popf
pop
mov
sbb
push
mov
push
cmpsl
pop
dec
adc
call
stc
mov
fwait
cmpsb
mov
sahf
enter
jg
cwtl
adc
scas
movsb
and
xchg
or
pop
xor
jmp
bnd
jge
xor
adc
push
lds
xchg
mov
push
adc
inc
xchg
bound
shlb
rcrl
orl
add
in
test
jo
sarb
cmp
filds
xor
jg
inc
and
and
adc
lcall
rorb
mov
sub
fsubl
or
jbe
sahf
jl
pushl
xchg
imul
fcomp
pop
mov
xor
cmp
dec
cmc
sbb
aas
imul
cmp
lret
push
mov
xchg
push
xchg
sub
sub
cmp
xor
cmp
jne
jae
push
in
pushf
rcll
xor
jg
inc
add
xchg
leave
mov
or
mov
fstpl
push
out
jbe
mov
shrl
divl
fistl
das
xor
sbb
int
lods
scas
fnstenv
int3
push
add
mov
leave
mov
pop
mov
mov
mov
adc
jns
xor
dec
cmc
lock
xor
lods
hlt
cmp
cmp
iret
dec
and
popf
xlat
ds
inc
jo
ret
leave
pop
push
int
das
loope
pop
xorl
insl
in
shll
lods
cmp
daa
mov
push
imulb
out
xchg
movsl
aas
mov
push
xchg
push
loope
add
scas
popa
sub
std
scas
or
and
inc
and
or
inc
cmp
xchg
add
and
mov
lods
xchg
nop
or
xchg
jae
ljmp
pushf
cmp
push
add
aad
sub
jmp
lods
mov
ja
jbe
data16
loope
leave
add
ss
sbb
sub
lods
cmpsb
es
pop
jle
push
stos
mov
movsl
jle
pmullw
jae
xchg
mov
add
lcall
pushf
andb
ficoms
test
mov
sbb
popa
push
xchg
cmp
outsl
jl
xchg
jo
repnz
dec
aad
mov
arpl
jo
leave
pop
sbb
push
pop
clc
fwait
xchg
repz
int3
jle
std
insb
mov
jb
pop
idiv
movsb
sub
stos
out
jmp
clc
paddw
js
mov
inc
mov
es
into
test
push
xor
outsl
adc
mov
mov
inc
js
fldt
test
dec
mov
out
cmpsl
mov
das
das
xor
and
mov
push
clc
pusha
imul
test
mov
xor
pop
dec
or
mov
dec
or
inc
lcall
movsb
out
jne
dec
imul
cmp
jne
xor
mov
daa
pop
jmp
and
pusha
stc
das
shll
loope
mov
rclb
lds
mov
movsb
insb
stos
push
adc
aam
mov
mov
jno
push
cmp
jg
sub
mov
inc
movsl
adcb
enter
cwtd
sub
das
mov
jmp
lahf
mov
test
lret
movsb
hlt
popf
xlat
in
ret
lret
daa
mov
jbe
mov
xor
in
or
imul
fs
jle
cmp
sub
xor
in
add
jnp
bound
fscale
sub
jbe
mov
stc
pushf
clc
ja
aad
mov
or
jne
inc
jno
and
js
jmp
mov
mov
adc
mov
out
insb
outsl
shl
sahf
push
inc
sub
fmul
add
and
fwait
out
dec
dec
mov
scas
ror
outsb
or
dec
ret
aad
div
sub
add
sbb
push
cmp
rclb
movsl
shr
jge
jp
push
mov
push
ss
xor
cmp
jo
movsb
mov
pop
in
imul
into
movsl
mov
cmp
sti
dec
xor
mov
shl
dec
cwtl
mov
jnp
je
fsubr
shl
mov
movsl
imul
das
jp
ret
mov
xchg
subb
insb
mov
push
adc
sbb
cmc
and
ja
ljmp
adc
das
repz
lcall
inc
jle
mov
inc
movsb
div
sub
push
adc
add
mov
lret
and
in
repz
pop
lods
ds
mov
out
loope
jbe
push
adc
jno
test
xchg
lret
cmpsb
inc
test
xor
mul
pusha
lahf
inc
push
aas
inc
lcall
mov
jl
lods
outsb
mov
sub
mov
fs
xchg
add
aam
out
inc
sahf
push
sbb
or
sbbl
push
nop
cmp
adc
jo
fsubl
push
dec
testb
out
adc
test
bound
fistps
push
out
jne
mov
mov
sbb
xchg
jg
push
je
imul
xor
fstps
test
ds
inc
daa
push
roll
jns
fimull
jbe
mov
test
sbb
outsb
push
lods
xor
pop
shlb
and
xor
int3
jb
mov
mov
jo
leave
inc
mov
jg
in
arpl
mov
js
push
stos
xor
and
mov
loopne
mov
lock
jbe
add
and
mov
loopne
pop
orb
cmp
mov
fmull
pushf
addl
sbb
ja
sbb
pop
mov
sbb
pop
and
or
in
mov
sub
cwtl
pop
xor
jp
decl
push
push
add
cltd
add
repz
ficoml
insb
or
popf
or
adc
fs
iret
mov
sub
jno
add
aaa
mov
mov
scas
cmp
mov
lock
fstpl
inc
push
sbb
mov
cmp
jg
or
lcall
cmp
sbb
or
dec
jno
xchg
stos
xor
cld
sbb
sbb
movsl
jp
repnz
xchg
jmp
adc
dec
ds
cmp
cmp
inc
fdivr
cs
or
push
out
repnz
rcrb
movl
shl
int3
inc
cs
jno
or
pop
loope
pop
jns
adc
cmp
pop
icebp
mov
sbb
rcrl
testb
pop
mov
pusha
adc
add
stos
sbb
xchg
imul
test
jl
fnstcw
dec
cltd
jg
in
pop
dec
iret
add
add
lret
xlat
pop
cs
outsl
xorl
testb
add
pop
mov
out
cwtl
adc
push
push
cmc
adc
dec
out
mov
push
fstps
aad
jle
cli
xchg
rorl
adc
sbb
stc
ds
jne
mov
fsub
push
hlt
xor
stos
cld
xchg
cltd
adc
xchg
pop
insl
in
jns
pusha
jnp
cmp
sbb
adc
pushf
xor
sub
mov
add
sbb
sahf
push
push
adc
add
hlt
shll
ljmp
mov
mov
cmpsl
inc
daa
mov
popa
repz
pop
sub
xlat
add
mov
jmp
ds
cli
out
arpl
imulb
xchg
int
mov
insb
mov
cld
lahf
sbb
cmpsb
mov
fiadds
movsl
in
jno
pop
mov
add
leave
mov
sbb
mov
sti
or
fdivr
jb
clc
in
dec
insl
stos
or
sar
cmp
je
inc
stos
int3
sbb
fcompl
jbe
in
imul
loope
inc
in
lret
or
lods
scas
xchg
sbb
data16
cmc
shl
mov
movsl
mov
and
movups
pop
pusha
mov
addl
and
inc
pushf
pop
pop
mov
jmp
shll
sbb
dec
cmp
out
pop
lahf
mov
lea
pop
sub
add
pop
xchg
push
sub
es
add
mov
aam
or
push
pusha
rol
inc
cld
sub
movsl
andb
out
stos
sarb
pop
outsb
aam
aaa
dec
adc
mov
jno
sub
enter
gs
ja
sbb
jns
imul
inc
sti
or
inc
mov
std
sahf
int3
jp
fistpll
push
or
cmp
xchg
mov
stos
psubsw
xchg
orl
mov
push
jne
sbb
rorb
and
and
inc
push
cwtl
mov
or
adc
push
repz
mov
and
fisttpl
or
sbb
push
test
clc
pop
and
rorl
movsbl
loop
imul
mov
enter
popf
mov
out
sub
or
outsb
ret
filds
in
xchg
ss
int3
mov
fdivr
sub
or
push
sbb
fcmovu
or
jl
pop
mov
ds
cmp
pop
xor
out
push
jl
mov
rorb
les
repz
fidivl
jno
mov
push
lret
nop
pop
inc
out
add
fiadds
les
lods
xor
inc
dec
pushf
insb
aaa
push
mov
bound
push
nop
pop
pop
cmp
movsb
pushf
dec
stos
fs
inc
xor
mov
cmc
stc
movsl
sub
int
xor
mov
shll
jmp
ret
mov
cmp
pop
jbe
mov
aad
jb
test
movsb
sub
outsl
ret
dec
mov
xor
inc
xchg
xor
nop
and
data16
movb
addr16
mov
xor
fsts
fs
je
pop
lods
lods
rcrl
in
sbb
stc
imul
leave
cmp
fs
fs
mov
sti
mov
and
mov
inc
pop
jg
out
inc
pop
mov
mov
dec
add
push
mov
mov
addr16
daa
pop
xchg
adc
in
lahf
mov
shl
dec
shrb
test
push
mov
sbb
imul
push
cli
xor
jge
adc
jmp
mov
push
jbe
outsb
jne
in
outsb
sbb
cmp
mov
out
inc
mov
std
pop
mov
mov
fsubl
inc
sub
ret
dec
push
pusha
inc
pusha
or
inc
inc
push
inc
mov
ja
jle
scas
mov
xchg
hlt
sub
out
push
pop
inc
adc
dec
cmp
ljmp
mov
test
jo
mov
cmpsb
pop
cmp
xchg
in
into
inc
inc
jbe
in
mov
xor
jmp
fadds
loopne
loopne
ss
roll
leave
inc
or
pop
aad
lret
pop
or
mov
test
or
cmpb
push
jle
mov
js
push
add
dec
mov
inc
sub
sbb
jmp
ljmp
push
nop
xchg
cmp
dec
push
dec
add
push
lcall
fdivrl
aad
test
xchg
ss
sbbb
fstl
shl
jmp
xchg
jo
test
pop
pop
push
pop
pop
movsl
adc
and
jne
mov
shl
cmpsb
imul
rclb
jmp
mov
in
adc
icebp
pop
xor
mov
testb
js
in
shrl
stos
insb
std
dec
sub
iret
rol
lret
mov
cmp
out
dec
aas
loope
subb
fidivrs
jmp
cmpsl
cmp
or
add
pop
adc
sarb
dec
sbb
fisttpll
lcall
lret
in
icebp
mov
dec
inc
mov
push
adc
sbb
idivb
push
ror
adc
subb
push
pop
lcall
push
ljmp
xchg
fisttps
repnz
popf
mov
outsl
sbb
arpl
mov
out
add
pushf
pop
int
ljmp
mov
sub
xchg
rdtsc
sub
dec
sbb
push
pop
adc
test
jge
cmp
mov
or
cmp
imul
inc
mov
ja
sub
mov
cwtl
sub
add
in
adc
loop
sbb
xchg
movups
ljmp
insb
lods
lcall
push
sub
sub
data16
out
xchg
cmp
mov
mov
xor
pop
xor
mov
test
mov
jge
xor
scas
xchg
aas
mov
std
sub
xor
mov
sbb
lock
mov
sahf
mov
in
xor
add
ljmp
movsl
add
xchg
pop
sarb
mov
hlt
or
and
cmp
scas
test
adcb
or
pop
mov
or
iret
subb
outsb
outsl
or
push
movl
add
and
jb
sub
mov
ret
add
cmp
dec
xchg
arpl
aas
arpl
fiadds
or
shl
jmp
adc
mov
ret
push
test
test
leave
loopne
lahf
jb
mov
xlat
or
fcomps
repz
repz
pop
sahf
rcr
xchg
dec
cmpsb
arpl
sbb
push
xchg
and
xor
jae
out
lret
dec
jmp
or
mov
fdivs
les
jnp
fisttpll
sahf
bswap
lods
jns
cmc
ret
jb
dec
inc
es
popa
sbb
ljmp
mov
scas
inc
pop
shll
fwait
ljmp
adcl
cmp
add
sbb
lods
leave
jbe
aad
jo
mov
dec
daa
fwait
mov
xor
fiaddl
adc
dec
adc
out
xchg
data16
pop
push
lods
mov
push
rorl
add
vsubss
dec
cmp
or
sub
sti
adc
sahf
es
push
lock
xor
js
loop
xchg
movsl
das
cmp
pop
mov
and
insb
fdiv
xchg
sbb
push
and
jmp
sbb
push
xlat
or
lea
cmp
mov
ret
in
jnp
cmpb
lcall
sbb
jne
xor
sti
fcmovne
push
pop
adc
arpl
mov
scas
out
add
mov
mov
pop
adc
mov
inc
sbb
mov
filds
mov
sahf
push
pop
pushf
movsb
int
lock
js
jb
imul
test
or
mov
pop
movsl
add
pop
ja
js
pop
push
insl
pop
mov
outsl
cmpsl
sti
mov
into
pop
mov
jecxz
inc
daa
push
std
push
xchg
dec
xchg
cmp
xchg
cmp
jb
inc
mov
push
loop
inc
js
movsl
xchg
jl
dec
push
pop
ret
xchg
in
push
sarb
xor
stos
aaa
mov
adc
push
sbb
ret
jg
das
bound
ja
push
cmp
enter
hlt
loop
push
sarb
jno
movsl
push
sub
fistl
fwait
scas
mov
xor
fmuls
inc
jmp
xchg
jp
and
jl
push
sbbb
inc
clc
and
mov
inc
dec
sahf
adc
rol
leave
pop
mov
jecxz
outsb
in
jp
mulb
mov
push
add
mov
and
and
xor
push
sbb
cld
push
xor
sahf
xor
mov
sti
and
xchg
rcl
pusha
sub
pop
repz
rcrb
mov
rclb
nopl
aad
dec
div
and
movsb
js
das
adc
push
add
xchg
sub
repnz
pop
icebp
jl
pop
loop
sub
jo
sub
fidivrl
cmc
mov
mov
mov
xchg
ret
sbb
sub
jge
mov
push
or
in
xchg
inc
repz
or
mov
insl
lcall
gs
push
loopne
cmp
xor
dec
adc
popa
pop
or
xchg
xchg
push
and
iret
pop
test
mov
push
pop
je
cltd
cld
sti
cmpsb
lcall
and
xchg
clc
repnz
xchg
sti
push
lock
enter
add
lea
cltd
movsl
cmp
clc
sub
shrl
lahf
jnp
cmp
pop
pop
xor
mov
lret
imul
jne
faddl
jp
mov
aam
out
mov
and
cltd
pop
sub
scas
add
push
push
sbb
sbb
notl
daa
scas
dec
lret
movl
sbb
ja
push
fistpl
or
mov
sahf
icebp
sbb
shrl
jmp
int3
out
fisttps
ds
in
call
xchg
pop
lahf
jns
clc
js
xchg
xchg
shrl
and
mov
jge
imul
vmwrite
iret
stc
dec
scas
mov
add
jge
ret
mov
inc
and
sbb
mov
cmp
insb
sbbl
push
insl
jmp
cmc
imul
mov
divl
push
jns
dec
sub
imul
sbb
mov
pop
or
out
add
ljmp
xchg
xchg
stc
rcr
pop
fisubrl
inc
jecxz
adc
lretw
xor
adc
push
sub
int
inc
mov
push
out
shufps
fcoms
mov
mov
je
call
mov
fmull
gs
xor
dec
test
xchg
sbb
int3
mov
mov
cltd
dec
scas
enter
and
dec
out
sbb
lret
dec
sbb
xchg
lahf
or
scas
mov
lods
or
jg
mov
push
mov
cmp
fcoms
sti
cmp
lret
stos
imul
jae
mov
imul
xor
test
push
sbb
rclb
inc
insb
jbe
pop
add
jecxz
mov
xchg
push
pop
aam
cmp
xchg
outsb
push
pop
ds
addr16
inc
sub
leave
add
enter
inc
pop
fs
cs
cli
mov
or
cmp
insl
sub
mov
sub
push
fsubrs
les
es
inc
jge
cmpsl
fstpl
mov
pop
add
inc
sub
sbb
pop
out
movsl
insb
pop
xor
leave
popf
sbb
das
shll
subb
jne
or
jns
push
and
scas
enter
enter
not
or
cmpsb
cmpsb
adc
dec
pop
or
ret
decl
fldl
cmp
xor
xor
lods
pop
push
fisubs
aad
aas
pop
sahf
jg
in
movb
ljmp
jg
stos
inc
jmp
fdivrs
pop
data16
jle
add
stos
push
sbb
stos
sti
xlat
pop
bound
push
push
or
jp
movsb
aad
mov
test
mov
xor
jmp
test
push
push
idivb
xor
enter
mov
insb
push
fmull
stos
fwait
sahf
push
lds
sub
xor
fsubl
jo
std
mov
mov
push
imul
and
sub
testb
pop
or
pop
push
std
inc
xor
les
rorl
cmpsb
jne
inc
aad
sbb
shrb
mov
push
inc
aas
fnstenv
loope
orb
mov
jo
jg
mov
leave
sbb
pop
add
daa
shrb
push
lods
cmpsl
mov
inc
test
add
loop
dec
stc
lahf
xor
and
scas
clc
inc
or
xor
scas
es
cmp
push
sub
cmpl
or
cltd
mov
cmp
mov
and
xor
rcll
incb
les
push
faddl
add
push
lret
popa
lods
mov
out
roll
or
jl
jns
in
or
and
push
jecxz
leave
cmpsl
push
data16
and
aam
push
stos
push
sub
dec
rcl
insb
xor
fadds
xor
adc
push
lret
std
mov
addr16
shrl
fcomps
cmp
inc
sarb
jae
push
js
fs
jnp
enter
dec
cmpb
and
xchg
xchg
test
push
cmpl
pop
xor
mov
jne
iret
fisubrs
bound
fbstp
cltd
cmp
lahf
lret
faddl
cs
popa
lds
cwtl
stos
jecxz
out
mov
and
lea
add
or
jge
andl
sbb
xor
bound
movsl
adc
mov
stc
lods
mov
popf
inc
mov
dec
push
lcall
inc
lret
leave
xchg
add
xor
inc
fsubs
enter
pop
sbb
mov
sbb
push
add
sbb
cmp
scas
jmp
mov
aas
mov
in
and
sub
lahf
or
jl
jp
cmp
xor
lcall
dec
mov
mov
cmp
sbb
dec
loop
adcb
mov
adc
cmpsb
fs
outsb
mov
shlb
lret
dec
jb
push
insb
inc
fildl
mov
mov
jl
xchg
pop
mov
or
test
bound
dec
loopne
dec
add
jecxz
adc
add
ljmp
inc
inc
xchg
mov
push
push
mov
and
xor
add
das
shr
xor
xchg
adc
repnz
test
dec
mov
fcmovnu
int
cli
or
jbe
jbe
mov
sar
out
inc
notb
add
cmp
sbb
in
adc
mov
sbb
std
fstps
add
pop
mov
push
out
out
hlt
mov
ret
stos
cmp
inc
cmp
jns
shl
and
bound
ret
sub
lods
outsb
add
int3
call
or
pop
adc
xor
jecxz
out
jl
mov
negb
ljmp
xchg
or
adc
mov
mov
mov
jae
or
repnz
jecxz
outsl
test
or
adc
das
jle
es
inc
cmpl
cmp
cltd
mov
nop
clc
andb
push
lcall
popl
jnp
jecxz
cs
call
fwait
adc
aam
inc
test
fs
ljmp
out
aam
loopne
dec
cld
mov
cmc
push
pop
pushl
ds
hlt
sbb
xchg
mov
mov
mov
nop
lea
ds
cld
or
shrb
mov
lods
and
sub
inc
jae
or
mov
sbb
movsb
lds
add
imulb
xchg
pop
in
int3
pop
repnz
xchg
or
test
es
addb
or
jmp
testb
lret
fidivrs
cmc
inc
lock
mov
dec
jle
push
mov
lret
popaw
lret
sbb
jno
mov
sub
push
pop
and
aam
in
adcb
sbb
add
das
xchg
cmp
mov
and
mov
cmp
fwait
xor
push
push
data16
cmp
mov
test
cmpb
sbb
sub
icebp
and
out
scas
lahf
into
adc
sarb
pop
and
cmpsb
lret
jb
inc
fadds
sub
sbb
xchg
or
cmc
xor
jo
pop
or
mov
fwait
or
sbb
jge
lods
ss
dec
and
mov
inc
scas
jb,pt
inc
sub
push
pop
cli
cwtl
lahf
jle
mov
xchg
scas
jl
das
int3
ret
cmp
test
jb
or
out
lret
js
lods
sbb
jns
push
xchg
xor
or
mov
cmp
adcl
sbb
lds
loop
es
push
sub
into
inc
mov
in
jecxz
fdiv
call
test
movsl
repz
xchg
andl
pop
adc
and
fsubrs
leave
push
mov
mov
mov
pusha
mov
dec
cmc
pop
push
dec
xor
shll
lods
mov
movups
xor
movsb
dec
imul
and
add
pusha
ss
add
xchg
addb
mov
cs
mov
ja
shrl
cmp
mov
cld
call
sbb
pop
mov
lcall
sub
loope
jnp
mov
iret
ret
jmp
jmp
inc
or
mov
dec
sbb
xor
and
imul
add
push
ret
cld
xchg
repnz
std
lahf
addb
sub
aam
mov
call
out
insl
dec
ja
xor
sub
aas
and
movsb
xor
addr16
xor
and
mov
adc
shl
cmp
fwait
dec
out
dec
add
sub
popa
inc
shll
add
ljmp
and
mov
adc
add
js
fcmovb
stos
imul
jmp
mov
int3
xor
ljmp
out
pop
iret
cmpl
insb
test
lret
clc
sbbl
xor
push
add
scas
outsl
std
push
testb
add
xor
mov
repz
loopne
movsb
add
jl
cli
loopne
icebp
or
test
clc
sarb
fmuls
fdivp
ja
daa
pop
andl
loopne
inc
inc
jecxz
push
push
cmpsl
pop
int3
add
push
push
fiaddl
fwait
sub
cmp
sti
leave
or
ret
mov
inc
push
dec
jmp
das
mov
inc
cmp
add
rcrb
cli
adc
and
test
sbb
cmp
xchg
fldt
jp
loop
xor
cltd
movsb
xor
pushf
and
loope
aam
sub
xchg
fbld
adc
cli
das
mov
mov
jl
mov
lret
jg
mov
sub
push
xchg
lret
cmc
mov
mov
jecxz
out
and
or
jle
xor
pop
in
out
aad
adc
out
insl
icebp
pop
dec
xor
in
cmp
add
pop
pop
roll
testb
test
dec
negb
pop
popf
jnp
or
xchg
sub
jo
ja
imulb
sub
fwait
test
mov
test
xor
mov
or
adcl
mov
scas
movb
fwait
sbb
dec
jbe
xchg
sbb
mov
aaa
leave
sub
sbb
sbb
repnz
lock
das
push
mov
test
inc
push
fwait
les
xchg
lods
mov
and
lret
pusha
cmpsb
push
les
shr
mov
jbe
sub
dec
xchg
notb
lahf
arpl
adc
pushf
ja
dec
es
inc
xor
add
imul
sbbl
movl
out
cld
dec
mov
adc
inc
stos
xor
add
mov
insb
movsl
xchg
int
mov
mov
ss
inc
mov
mov
rclb
dec
lahf
inc
fbld
in
out
add
adc
and
push
scas
pushf
lock
rcll
test
mov
fisubs
sub
rcrl
sbb
inc
or
es
insb
mov
and
mov
cmp
and
dec
or
sti
loope
mov
in
stos
jmp
fwait
cmc
lcall
add
or
ja
or
sbb
iret
sbbl
lds
xchg
pop
aaa
dec
add
jno
stos
ja
push
xchg
insb
cmpsl
fndisi(8087
xchg
out
jnp
adc
xlat
mov
ret
xlat
add
dec
clc
mov
leave
inc
pop
push
cmc
subb
out
faddl
pop
into
xchg
jecxz
ficoms
pop
loop
or
pop
hlt
push
stos
add
add
cli
outsl
push
insl
in
cmp
or
dec
fldl2e
call
in
jmp
hlt
aam
inc
push
lahf
cmp
call
popa
jne
pop
pop
ds
popf
lahf
stos
dec
jl
loope
add
jg
xor
mov
scas
mov
clc
fisubs
pop
in
jbe
ficomps
popf
xor
fisttpll
push
pop
inc
lea
dec
cmp
stc
sbb
shrl
inc
mov
enter
push
in
fisubl
add
xchg
loopne
inc
mov
popa
out
mov
testb
mov
and
sar
je
je
je
fcom
das
add
adc
shll
mov
lret
mov
or
mov
rcrb
sub
addr16
nop
sbb
mov
insl
lds
add
xor
push
adc
jb
xchg
shlb
push
cli
dec
pop
and
loop
mov
jns
push
push
sub
xchg
cltd
dec
scas
sti
pop
pop
pop
push
sahf
mov
xor
mov
push
ss
lds
dec
or
pop
inc
mov
repz
sub
xchg
mov
adc
insb
mov
std
lock
popf
xchg
xchg
add
mov
mov
sahf
mov
sbb
loope
arpl
ljmp
inc
stc
daa
mov
cld
leave
or
sub
mov
in
jo
or
push
pop
scas
dec
inc
xor
xchg
pop
add
sarl
mov
mov
dec
addr16
push
bound
add
sarb
or
pop
dec
pop
and
dec
cmpsb
in
mov
xchg
fdivr
sub
xchg
idiv
push
inc
jnp
inc
mov
int3
inc
cmpxchg
das
fsubs
mov
inc
inc
inc
test
movsl
rorl
cmp
xor
or
xlat
jmp
mov
dec
sahf
cmpb
sahf
sub
mov
inc
ljmp
adc
vorps
sub
push
xor
rclb
pop
mov
fsubrl
pop
fmul
mov
imul
add
mov
icebp
or
mov
sti
aam
out
loop
inc
xlat
sub
pusha
daa
ds
add
dec
or
test
movl
sbb
add
push
or
getsec
out
stc
out
jnp
inc
adc
mov
push
mov
lock
jg
movsl
pop
push
lret
jl
push
cmp
mov
adc
and
sahf
shll
cmpsl
sub
test
mov
jb
leave
lcall
jno
cmp
stos
pop
jp
lods
adcb
or
xor
mov
jge
mov
or
les
aad
sub
andl
fnstsw
lea
sub
adc
sbb
ds
js
xchg
push
mov
jmp
dec
jbe
test
cmc
stc
popf
jp
ret
movsb
inc
lods
adc
push
dec
in
rcll
inc
lcall
push
testb
pushf
pop
sbb
cmp
shrb
les
mov
lcall
aas
cmp
stc
sbb
mov
jg
in
cmp
xor
jle
popa
lret
icebp
cwtl
pop
mov
xchg
pop
push
arpl
in
into
scas
push
add
int3
popa
outsl
pop
cld
mov
stos
mov
out
stos
jmp
insb
cltd
imul
xor
adc
idivl
outsb
jmp
aas
loop
cmp
lret
sbb
aas
imul
mov
fnstcw
push
mov
push
std
mov
dec
and
ss
das
movsb
adc
aas
mov
pop
sub
pop
dec
sbb
std
xchg
pop
nop
lods
mov
test
cmp
movsb
comiss
bswap
aam
xor
leave
xor
dec
hlt
inc
test
scas
mov
xor
pushf
push
mov
movsl
xor
dec
ret
fs
jmp
rolb
adc
jns
inc
nop
pop
mov
loope
cltd
fisubrs
icebp
xchg
push
fbstp
iret
pop
dec
inc
push
xor
add
movsl
aam
mov
push
mov
inc
loope
ja
push
jg
movsb
loop
loopne
adc
jl
mov
insb
mov
in
jl
jp
int3
cld
dec
aaa
movswl
cmp
lods
mov
push
add
and
pop
push
jg
hlt
mov
call
lods
xor
insl
add
and
mov
popf
mov
inc
stos
sti
ret
adc
lret
sub
cmp
fadd
stos
mov
les
shl
mov
data16
or
pop
lcall
js
xor
dec
sub
xor
dec
mov
dec
jmp
mov
jae
outsl
gs
loop
lahf
sbb
ja
sub
imul
into
mov
rdmsr
jbe
rcrl
inc
outsb
sarb
fwait
pop
in
sbb
or
out
dec
and
repnz
xchg
movsl
ret
mov
adc
add
scas
cmp
sbb
das
and
cmpsb
daa
ret
jnp
aam
imul
or
inc
or
imul
jle
lds
jo
lret
jne
or
stos
fldenv
push
jnp
imul
sahf
ret
psubb
movsb
in
jle
loop
jne
in
mov
popf
call
addl
rorl
adc
mov
sbbb
jne
jle
push
gs
jbe
sub
icebp
sub
lahf
adc
push
aas
ja
mov
inc
fists
adc
iret
inc
pop
add
lods
rolb
adc
repz
sti
jne
xchg
push
xchg
clc
cmpl
shlb
adc
cld
cmpsl
nop
push
mov
pop
ret
lret
call
adc
lods
xor
or
repnz
mov
cld
xchg
pop
cltd
aad
insb
in
loop
push
cmp
ficompl
bnd
mov
fists
sbb
sbb
in
xor
mov
testb
sbb
mov
addr16
sub
dec
add
add
in
dec
dec
in
stc
and
adc
dec
in
xor
outsb
nop
mov
fdivrl
mov
mov
lods
and
mov
movsb
sub
dec
or
cltd
or
or
lcall
and
imul
jnp
popf
sbb
and
loopne
cltd
and
stos
je
cmovae
pop
subl
adc
rcrl
gs
out
sbb
adc
fsubl
adc
lcall
dec
repz
xor
xor
in
mov
xchg
les
push
aas
or
lods
mov
push
in
rolb
adc
inc
je
fists
xchg
out
enter
and
loop
idivb
leave
in
out
add
addb
mov
aas
push
divl
test
repz
sub
fs
fwait
jnp
cs
scas
hlt
fstl
movsb
aaa
cmp
and
cs
mov
xor
arpl
adc
lcall
cmp
call
in
push
inc
adc
xchg
es
hlt
xor
mov
adc
fsubrs
pop
xor
jge
mov
cvtdq2ps
jbe
dec
inc
imul
xor
insb
jle
shrb
jmp
add
cmp
pop
pushf
loop
cmp
inc
outsl
push
inc
dec
jmp
movsl
in
clts
sub
fdiv
pusha
mov
dec
adc
mov
fsubr
cmp
xchg
js
cmp
incb
and
lods
jae
ja
xchg
hlt
sbb
stc
adc
hlt
xchg
pop
loopne
cwtl
mov
fsubl
repz
xor
out
jp
cmp
pop
scas
jae
sbb
mov
lahf
mov
sarb
fidivs
lods
sbb
mov
popa
test
mov
pop
loope
out
fwait
xchg
test
shl
adc
lock
xchg
mov
cmp
push
jno
cs
inc
cld
subb
xchg
dec
insl
jecxz
je
jg
das
push
xor
and
enter
in
mov
push
push
add
lahf
fldenv
inc
sbb
mov
outsb
sbb
jae
jl
fs
stc
test
jmp
repz
sub
test
sbb
hlt
xor
dec
mov
inc
cmp
dec
mov
xor
neg
cmp
mov
arpl
dec
jecxz
jmp
add
mov
fmull
aaa
test
les
xor
push
push
and
inc
aas
and
and
adc
test
lods
lahf
pop
faddl
mov
ret
outsl
xlat
pop
mov
mov
dec
pop
mov
in
jp
cmp
ja
push
es
in
sbb
cmp
or
push
js
add
ja
push
lret
scas
ja
pop
add
jb
rcl
push
mov
mov
inc
hlt
cwtl
je
dec
ja
xor
movsl
jecxz
push
jecxz
ret
fsubl
bound
xor
mov
and
je
rol
xor
sub
xchg
loopne
jae
sbb
or
mov
aad
out
sbb
push
ja
repnz
test
add
movsl
sub
lret
test
lds
jne
xorl
hlt
scas
scas
xchg
cmp
outsl
sbbl
or
mov
pop
in
rolb
jno
mov
push
and
xlat
sub
jnp
sbb
jns
addr16
hlt
rorl
je
push
mov
push
cmp
xlat
sarb
ds
int
pushw
cmp
cld
shl
pop
pop
adc
or
movsl
aad
ret
dec
aas
fwait
cmp
cmp
cld
push
sbb
adc
add
push
mov
inc
adcb
dec
aam
mov
push
cmp
sbb
rcr
cltd
xchg
cmp
mov
push
push
mov
dec
cmc
cmp
cmp
sub
stos
mov
mov
or
mov
pop
add
inc
call
push
pop
lahf
in
dec
jmp
push
dec
or
outsb
popf
and
push
out
fcmovnbe
mov
bsf
outsb
fiaddl
push
adc
mov
and
dec
adc
inc
and
xchg
jb
jle
cmpl
mov
mov
mov
ret
cmp
fwait
movsl
xchg
push
push
cmp
fcmovne
into
push
js
sbb
pusha
mov
repz
pop
call
sbb
dec
sbb
xchg
cmc
rolb
mov
addr16
sub
xor
imul
pop
cltd
stos
cmp
fcomps
xchg
popf
out
data16
das
cli
or
pop
fiadds
mov
stc
cli
mov
in
rcrl
lods
cmp
jp
lock
mov
pop
inc
xchg
into
adc
sbb
dec
sbb
and
pop
add
cltd
sahf
mov
dec
mov
icebp
into
shr
lahf
mov
xor
and
fwait
jl
jo
mov
shrl
testb
push
cltd
sub
insl
daa
sbb
jns
mov
cltd
repnz
jge
mov
lcall
cmp
add
seto
push
addr16
fdivrp
or
mov
and
ss
pop
push
in
push
cmp
mov
or
xchg
sbb
imul
sbb
cmpsb
jbe
jl
pusha
and
nop
mov
or
mov
ljmp
or
mov
sub
imul
pop
mov
sarl
rclb
xchg
pop
addr16
pusha
popf
shlb
iret
repnz
pop
loope
imul
flds
xor
xor
xchg
sbb
insl
orb
xor
jbe,pn
leave
enter
or
stc
out
pop
movsl
push
adc
or
add
mov
mov
or
fbstp
mov
scas
push
daa
sub
pop
jp
or
mov
jb
jmp
loope
daa
mov
push
enter
cld
int3
push
inc
push
cmp
jne
ljmp
add
xchg
jg
pop
imul
in
xor
adc
push
mov
loope
pop
pop
clc
or
inc
push
orb
lcall
adc
mov
in
test
sti
dec
imul
aam
notb
popw
int3
out
pop
hlt
push
outsl
imul
jbe
jge
phsubsw
add
daa
ret
xor
inc
out
test
pop
shll
lods
and
sbb
aas
scas
dec
and
iret
testl
xor
stc
xor
lock
daa
lock
pushf
jae
bound
fsubrl
lods
orl
test
test
sti
pop
or
repnz
sbb
sbb
out
shl
imul
lods
ss
cmp
xchg
mov
or
cmp
and
or
inc
mov
sub
aad
mov
in
leave
out
ja
jp
out
je
inc
fildll
adc
loopne
incl
push
mov
mov
pop
cmc
popf
mov
cwtl
fcmove
xor
ret
dec
adc
and
jno
sbb
cld
add
imul
push
pop
mov
jge
cmp
addr16
push
sub
cmpsb
sbb
movl
dec
cmpsl
jge
pop
cmpsb
inc
in
xchg
lods
sbbl
nop
test
pusha
out
sbbb
push
jbe
cmp
jae
cmc
das
push
xchg
adc
lret
adc
inc
mov
lret
pop
pop
inc
jge
out
mov
mov
ss
pop
int
roll
test
incb
or
adc
cmc
aad
flds
aam
in
in
rorb
sub
stos
rorb
outsl
test
int
sbb
icebp
mov
mov
adc
dec
inc
mov
push
in
in
push
mov
cld
pop
jmp
daa
and
sub
inc
xchg
in
nop
add
mov
popa
shlb
iret
lahf
cld
xor
inc
dec
lods
in
xchg
rcll
push
ds
lahf
sbb
jmp
cmp
xchg
jp
inc
push
lcall
call
push
fdivr
mov
into
cmp
insl
inc
jb
nop
cmpsl
inc
sbbb
push
ficoml
js
xor
je
ret
or
mov
or
mov
adc
jle
loopne
out
idivl
js
mov
lret
mov
push
cmp
cli
add
inc
pop
dec
jmp
into
mov
movsb
and
cmpsl
cmc
mov
test
push
rorb
movsb
add
test
in
mov
and
lret
pusha
lods
push
adc
aaa
push
arpl
iret
testb
jmp
gs
cmp
orb
lds
test
mov
push
movsb
mov
push
inc
jmp
xchg
jbe
jbe
loop
dec
lret
mov
fwait
movsb
jg
mov
iret
sarb
out
and
pop
movsb
fmull
nop
mov
stos
fcomps
loopne
push
outsl
aas
mov
jbe
jp
faddl
jns
in
out
push
fldenv
jbe
lods
ljmp
push
mov
je
xchg
es
cmpsl
adc
inc
fs
fmuls
mov
or
test
decl
jae
adc
mov
rcl
jo
leave
adc
fistpll
xchg
std
decl
orl
add
jp
fiadds
stc
add
or
sbb
xchg
or
addl
adcb
imul
push
stos
pop
sarw
in
sub
sbbl
mov
outsl
add
adc
and
rolb
bound
in
push
jl
pop
push
pushl
and
scas
fadd
in
pop
addb
xor
sub
inc
cmp
cmp
daa
xchg
mov
ret
ret
addl
mov
push
mov
loope
je
dec
xor
int
xor
xlat
sub
jg
call
push
daa
mov
arpl
mov
repz
cmp
dec
cmp
or
scas
fisubrs
sbb
ret
ljmp
sbb
mov
por
mov
xor
xchg
andl
cli
xor
dec
leave
repnz
inc
adc
jns
and
adc
enter
mov
xor
icebp
push
outsb
xor
orb
and
into
jns
mov
nop
out
sub
insb
adc
dec
test
clc
push
pop
push
adc
fnstsw
cmp
test
mov
aam
js
add
sbb
sub
jmp
dec
iret
push
and
push
fwait
xchg
fcomps
mov
or
test
icebp
push
inc
xchg
sbb
jle
cmp
adc
pop
push
stos
shl
or
sahf
pop
jle
sub
outsb
or
and
fistpll
cmpsl
push
mov
js
aaa
out
std
fsubl
pop
imul
mov
outsl
adc
xchg
and
mov
out
mov
mov
add
add
fdivr
push
cwtl
jecxz
dec
inc
or
push
jno
dec
and
cmc
sahf
lret
pop
inc
inc
pushf
fcompl
aas
or
jmp
sti
sub
and
lret
aas
lcall
sbbb
xchg
cld
push
call
push
ja
pop
mov
pop
ljmp
aas
enter
dec
pop
mov
dec
insb
xchg
xchg
jg
ss
test
in
stc
lea
es
enter
and
inc
and
mov
incl
push
mov
data16
jnp
inc
jo
inc
jmp
sub
js
outsb
sub
xchg
arpl
iret
in
call
pop
dec
out
jno
notb
aam
mov
xor
aam
fwait
enter
repnz
sbb
in
scas
mov
xchg
push
cwtl
in
xor
int3
mov
test
mov
test
adc
aaa
jle
rol
cli
cmp
xor
test
mov
in
jge
icebp
int3
movsb
shll
xchg
icebp
lock
in
and
nop
pop
hlt
pop
cmp
popa
sbb
xchg
cmp
jle
push
cmpsb
cli
sbb
mov
push
loop
sbb
pop
dec
adcl
sarb
out
popf
call
cmp
pop
dec
sbb
fsubl
ror
shrl
data16
shlb
rcr
add
loop
xchg
std
mov
fs
mov
loop
ljmp
insl
and
je
sub
xchg
jmp
mov
sbb
add
test
mov
cli
or
push
xchg
rorb
dec
aaa
lds
mov
addb
mov
push
in
pop
loopne
inc
in
jb
scas
rolb
lcall
pop
jno
jno
push
mov
mov
lahf
sub
pushf
sahf
test
jno
in
inc
adc
mov
jne
push
push
mul
cmp
pop
mov
sbb
lock
mov
xchg
ficompl
fdivs
aam
mov
xchg
or
xchg
sub
out
xor
lods
cs
cld
mov
mov
pop
or
xor
lods
pop
sub
cli
clc
jns
outsl
add
fdivs
jp
or
in
inc
enter
inc
les
mov
jb
lea
repnz
mov
cmpsl
dec
enter
imull
push
fidivrl
mov
loopne
adc
inc
dec
fnstsw
or
pop
je
das
pop
jle
gs
daa
jge
xor
push
insb
inc
test
scas
dec
mov
pushf
imul
ss
fs
loope
aas
adcl
pop
int3
mov
stc
popf
and
ret
in
sub
insb
imul
add
lods
jae
and
and
mov
gs
or
jne
xor
jmp
inc
hlt
mov
sahf
push
lahf
sub
xchg
inc
and
sbb
cmpsb
or
pop
fmull
push
mov
cmpl
xchg
adc
lea
push
ficoms
and
add
gs
rcll
push
testb
ja
ds
jb
cmp
mov
ljmp
aam
xor
cli
ja
iret
enter
aaa
inc
lret
clc
mov
sub
adcl
mov
enter
dec
ret
hlt
inc
mov
add
in
movsb
xchg
iret
xchg
ret
jle
jg
out
jne
push
mov
mov
divl
movsb
pushf
inc
cmp
xor
or
movsb
fwait
push
roll
ja
mov
sub
imul
ljmp
adc
or
scas
cmp
incl
stos
sbb
rorb
call
xor
inc
daa
jl
dec
orb
stc
repnz
mov
ljmp
push
push
or
pop
sub
push
push
aam
in
pop
pop
inc
ret
and
pop
jle
push
int3
ret
lcall
fcmovbe
sub
inc
loop
scas
fwait
mov
loope
gs
inc
sub
dec
imul
push
xor
or
fistpll
and
shlb
imul
cmp
xor
ss
xor
in
cmc
daa
stc
push
jl
popa
xor
sti
inc
mov
mov
sahf
shlb
clc
lock
push
imul
dec
jo
and
pop
cltd
jp
out
add
js
test
xlat
add
sbb
nop
and
push
fists
jb
mov
stc
mov
addr16
push
in
call
xchg
xor
loop
sbb
mov
xlat
outsl
test
sbb
pop
adc
xchg
lea
or
cmp
lods
sbb
mov
leave
das
lods
jb
shl
test
iret
in
sub
mov
mov
std
inc
push
test
call
or
sbb
fidivl
sub
xchg
lods
and
push
dec
and
jbe
out
jge
add
dec
mov
ja
out
mov
mov
pushf
push
push
aam
add
addr16
inc
xor
mov
adc
addr16
mov
mov
pop
dec
dec
lock
xchg
inc
bound
fstl
mov
inc
clc
jg
mov
inc
xor
inc
divl
loopne,pn
mov
mov
dec
hlt
loop
xor
popl
nop
cld
adc
pop
pop
mov
push
clc
mov
ja
mov
jle
add
imul
adc
lret
add
add
push
sub
scas
out
rolb
pop
adc
mov
cmpsl
mov
mov
inc
rcrl
loopne
or
cmpb
rcrb
popf
or
dec
imul
outsb
lods
in
in
iret
cltd
test
mov
xor
lret
pop
scas
cmpsl
jp
cmp
fisubrl
xchg
dec
dec
adc
mov
js
jmp
adc
daa
or
pop
mov
xchg
sub
movsb
xchg
ds
addr16
rcrl
inc
sub
cmp
mov
iret
mov
loopne
dec
adc
inc
pushf
pop
cs
push
andps
xor
call
push
mov
repnz
sub
push
sub
add
out
pop
pop
enter
or
mov
sub
mov
mov
daa
shlb
negl
or
nop
ret
sahf
push
and
hlt
mov
cwtl
insl
push
sbb
inc
out
inc
das
lcall
jg
jmp
add
cmp
lcall
jp
jb
fmuls
adc
and
fnstsw
test
flds
mov
mov
push
out
stc
leave
push
popf
or
jnp
lds
into
cmp
jno,pn
call
and
add
cmp
mov
ljmp
mov
stos
clc
stc
aam
cmp
pop
push
loopne
cltd
fs
int
negb
and
ss
rcrb
lcall
xorl
pop
or
push
addr16
push
aad
ja
push
cmp
push
into
ret
mov
sbb
std
sbb
ja
fwait
aas
dec
and
mov
icebp
jecxz
dec
cmp
sub
xchg
jns
gs
push
test
pop
dec
sbbl
mov
adcb
frndint
mov
cltd
popa
aas
pshufw
push
jmp
jae
ja
xor
add
fcmovbe
dec
icebp
pop
xchg
xchg
in
mov
stos
push
iret
add
mov
mov
jp
pushf
jno
pop
sub
notl
in
mov
pushf
addb
push
add
or
cmp
push
xor
sbb
data16
ret
js
cmp
push
inc
pop
add
or
fs
cmp
xor
aas
cmc
mov
xchg
frstor
xchg
mov
push
adc
lahf
sbb
fst
push
rorb
mov
mov
lods
jne
cmc
jns
xchg
les
rcrl
xor
scas
scas
pop
push
cmp
test
gs
xorl
test
jae
jnp
pusha
in
xchg
fs
inc
mov
sub
leave
xlat
flds
mov
icebp
ds
add
fnstsw
das
ds
sub
inc
adc
test
mov
jns
sbb
sbb
not
jmp
jl
cmp
push
sbbb
test
xchg
ljmp
pop
test
xchg
clc
and
and
or
into
shlb
into
clc
dec
or
fiaddl
xchg
cmp
cli
push
flds
dec
test
or
lods
and
inc
nop
mov
and
cmp
filds
pop
jno
addb
dec
push
gs
lcall
lds
int3
push
or
daa
push
into
xchg
outsl
call
insb
jmp
pop
add
inc
xor
leave
sub
pop
lods
or
insl
xchg
clc
inc
insb
cltd
fmul
leave
jno
add
cmp
int
mov
jle
lea
xchg
arpl
adc
test
in
stos
pop
or
push
mov
gs
loopne
mov
imul
push
fwait
jnp
loope
pop
lods
add
faddl
mov
test
cmpsb
shll
adc
cmp
sbb
cmp
mov
xor
dec
insb
dec
popf
sub
fisubs
jne
pop
dec
and
adc
mov
add
stos
and
int
xchg
cmp
xchg
adc
pusha
lock
inc
outsl
leave
ja
mov
loopne
out
cltd
aam
or
mulb
sub
jmp
mov
jne
jg
pop
ret
mov
shl
and
pop
fimull
push
sub
out
lahf
mov
mov
shrb
jb
aad
xchg
pop
or
ja
add
jb
les
or
std
inc
aas
mov
adc
cmp
gs
push
jg
dec
xor
lds
mov
fwait
xor
repnz
leave
scas
icebp
movsl
push
jne
cmp
mov
xor
nop
pop
sti
les
or
call
add
mov
dec
push
mov
sub
cltd
loope
jae
ljmp
jle
inc
adc
push
pop
adc
push
or
xchg
cmp
pop
cmc
in
mov
sub
cld
pop
adc
aas
adc
pop
rcrb
and
int3
addr16
mov
sub
jge
js
mov
adc
or
mov
shlb
mov
mov
or
sub
enter
jg
pop
push
int
dec
mov
fwait
pop
in
mov
mov
xchg
pop
mov
or
add
ret
in
xchg
pop
scas
xor
imul
fstl
fnstcw
xor
xchg
lcall
xchg
cmp
dec
xchg
mov
pusha
mov
call
inc
xchg
adc
add
dec
lock
rorl
xchg
mov
fs
sbb
adc
loopne
and
shl
pop
xchg
ljmp
pop
dec
out
stc
pop
out
pop
call
adc
jge
cli
repz
pop
stos
stc
or
jle
push
jns
cmp
jb
ret
add
stc
popf
fcomps
cltd
rcll
aaa
cs
outsb
xor
std
jnp
push
jle
cmc
jmp
mov
pop
xor
inc
inc
aad
lcall
cmp
or
xchg
push
jp
dec
fisttpl
pusha
stos
pop
bound
dec
mov
lods
flds
pushl
fcmovnb
in
push
repnz
xchg
test
leave
jb
pop
mov
std
out
mov
adc
int3
adc
mov
pop
mov
jb
popf
sub
mov
jecxz
mov
repnz
incl
mov
insb
sbb
daa
mov
cld
call
mov
iret
test
fnstcw
ljmp
cld
call
lea
daa
movsb
push
adc
push
or
add
xor
test
inc
gs
sti
sete
xlat
imul
sahf
jge
ljmp
jp
lret
cmp
xor
ret
dec
pop
adc
adc
cmp
inc
jo
xchg
cld
cltd
in
inc
out
cmp
mov
mov
push
adc
in
lahf
stos
xchg
in
cmpsb
xchg
add
dec
and
xchg
int
mov
sbb
inc
adc
adc
jb
adc
push
mov
loopne
lods
mov
call
jne
mov
pop
stos
jp
cmp
jo
out
lret
push
les
cs
sbb
and
mov
mov
clc
jle
test
loop
popf
sub
and
data16
xchg
test
push
aam
adcb
insb
mov
mov
cmc
hlt
std
push
pop
rcrl
cmpb
out
and
mov
mov
mov
mov
xor
sbb
xor
mov
repnz
loopne
xor
dec
outsb
push
adc
pushf
enter
mov
xor
mov
rcl
mov
adc
inc
mov
sbb
and
adc
mov
daa
mov
push
mov
fs
stos
pop
es
and
xchg
dec
jecxz
fcmovu
out
mov
pop
cs
jmp
mov
ljmp
pminub
mov
lahf
lods
push
les
outsl
fldcw
fldl
push
mov
stos
xor
fdivrp
pop
jno
in
enter
jbe
add
pop
ret
shlb
test
std
dec
pop
in
push
inc
mov
push
ds
ja
fwait
mov
es
pop
scas
js
mov
outsb
shr
test
xor
pop
sub
dec
mov
fxch
sbb
xorl
shrb
xor
dec
sbb
scas
les
rolb
stos
adc
push
dec
or
arpl
add
shll
arpl
sahf
out
mov
dec
mov
enter
or
test
std
jo
mov
pop
test
cmp
adc
or
test
aad
xchg
xchg
jecxz
sub
xchg
jae
push
jns
stc
pop
dec
push
push
push
idiv
sub
mov
fmuls
ret
les
popf
xchg
adc
into
cs
jmp
jle
mov
dec
repz
ret
lock
push
push
sub
dec
dec
xchg
les
lds
out
hlt
mov
call
cmc
pop
mov
aas
jge
sub
test
add
lods
pushf
hlt
inc
mov
cmp
je
test
stos
and
or
jl
test
add
cs
cmp
dec
into
ror
mov
fwait
ss
mov
dec
les
loope
sbb
and
and
sar
cltd
xchg
dec
addr16
mov
jmp
out
push
bound
push
or
dec
dec
pop
into
mov
sub
add
cmp
inc
je
jg
xor
dec
mov
movsb
dec
cmp
push
test
inc
dec
mov
inc
popf
push
roll
and
hlt
push
pop
pop
fbld
inc
jns
pop
mov
jl
iret
xchg
mov
shlb
clc
jmp
dec
xor
out
orb
aaa
sbb
or
arpl
jmp
or
pusha
adcb
aas
push
into
outsl
mov
xchg
or
insb
adc
addr16
ja
mov
rol
dec
mov
or
fcomi
pusha
call
imul
sub
dec
shrb
push
aaa
cli
inc
cmp
xor
inc
fiaddl
xor
js
xchg
fwait
aam
or
insb
fstpl
insl
push
inc
and
push
loopne
xchg
lds
movb
mov
lock
fnstcw
pop
es
mov
mov
aam
movsl
into
adc
mov
pop
dec
imul
mov
or
clc
mov
mov
imul
adcb
test
ljmp
xchg
iret
mov
adc
aam
jge
aam
sbb
or
and
jg
mov
xchg
jmp
lods
adc
pusha
shrb
sbb
mov
fs
sar
daa
lds
push
pop
loop
fdivrl
sub
addr16
jne
or
push
scas
mov
pop
stos
je
clc
xor
fiadds
xchg
pushf
shll
repz
dec
js
dec
jb
inc
xchg
es
push
dec
sbb
cmp
test
and
jp
sub
mov
pushf
into
xor
mov
test
cmp
jl
jo
xchg
push
jp
jno
xchg
ss
or
dec
cmpsb
pop
lcall
cmp
rorl
xor
xchg
pushf
sbb
outsl
push
add
adcl
push
roll
mov
sub
and
js
push
add
icebp
divl
out
sbb
add
ds
lock
les
mov
jo
subl
xor
leave
leave
mov
mov
sub
adc
pusha
pusha
subl
insb
enter
fistl
loop
push
cmp
and
cmp
clc
pop
stos
adc
and
lret
scas
lret
jne
ja
pop
addr16
sbb
mov
insl
scas
jmp
jmp
cmc
sbb
sbb
js
cmpsl
push
inc
xchg
and
inc
sub
push
xor
dec
cmpsl
pop
xchg
xor
pop
xchg
stos
or
add
xlat
call
shl
add
jecxz
je
adc
pop
or
cmp
push
xchg
cmp
xor
test
xor
cmp
mov
inc
xchg
lret
mov
mov
aaa
pop
arpl
mov
jp
jge
add
push
xor
sub
dec
hlt
push
dec
pop
mov
stos
int
add
mov
jns
pop
and
xchg
dec
vrcpps
lds
pop
inc
pushf
pop
mov
inc
inc
or
lods
ret
xchg
adc
fnstsw
jnp
mov
push
repnz
into
call
scas
cmp
adc
or
pop
clc
lock
or
pop
add
push
mov
sbb
mov
insb
push
je
loope
mov
xor
pop
jo
cmp
cs
lock
scas
mov
dec
inc
mov
lcall
leave
leave
jae
lcall
icebp
mov
mov
add
fnstenv
fwait
insl
pop
aam
dec
outsl
sub
dec
inc
ret
cmpsl
fildll
ja
fidivl
aad
popa
and
inc
roll
loopne
mov
popa
cmp
push
scas
test
stc
lret
pop
sti
rolb
mov
fldcw
or
pop
imul
push
cmp
insb
je
out
cli
das
push
jecxz
int3
cwtl
cmpsb
es
dec
push
repnz
stc
test
add
outsl
adc
daa
and
or
ret
xor
aaa
push
fistpl
imul
mov
ja
dec
icebp
pop
add
sbb
xor
mov
test
jbe
cmpsl
mov
mov
cmpsb
mov
jns
jb
pop
popa
cmp
fbstp
out
test
mov
movb
xor
fidivrl
push
pop
inc
cwtl
push
repnz
mov
dec
pop
pop
push
sarl
test
dec
sbb
push
aaa
sub
decl
ds
and
and
loop
cmpsb
ret
xchg
andl
cld
pop
lock
in
push
ja
jns
mov
cltd
xchg
pushf
push
jb
push
shll
fcomps
inc
xchg
inc
mov
sbb
into
mov
rclb
cmp
pop
push
pop
adc
jb
ficomps
push
jns
out
sbb
mov
in
sbb
push
and
nop
loop
sbb
es
push
xchg
movb
movsb
sbbb
iret
out
mov
xor
dec
mov
clc
stos
adc
xchg
pop
ja
push
or
xor
push
jae
daa
call
adc
sub
lahf
cmp
enter
popf
addr16
jae
jo
dec
inc
gs
js
xchg
rcrl
sub
aad
mov
in
inc
dec
arpl
gs
or
mov
jno
fwait
sbb
jmp
mov
lods
adc
cmp
fbstp
dec
rolb
and
dec
pushl
arpl
sbb
sub
pop
das
xchg
js
ljmp
int
pop
sti
mov
xor
xchg
sbb
xor
call
push
or
pop
mov
andl
adc
inc
mov
outsb
xchg
std
push
push
popa
and
push
leave
mov
faddl
ja
rcll
into
jecxz
cmpl
out
loop
cmp
cmp
popa
outsl
push
cwtl
or
adc
cmp
cld
dec
repnz
jg,pt
adc
lock
cmp
bound
sub
sbb
loope
movsl
idivb
jmp
lcall
dec
mov
fists
fldcw
cmp
pushl
mov
push
pop
out
cmpsb
ljmp
fs
movsl
or
inc
sti
inc
jbe
sahf
push
sub
gs
es
lret
les
insl
rcr
mov
mov
jge
in
add
fidivrl
sbb
jmp
outsl
pushf
add
sarb
adc
daa
add
add
xor
and
pop
mov
mov
das
ret
dec
and
ja
xchg
add
test
ret
cmpps
xorl
sahf
xor
xor
iret
jle
inc
es
lea
lock
out
and
xchg
xor
and
into
mov
and
dec
dec
aad
xor
adc
or
cltd
or
add
shll
push
push
mov
stos
lahf
add
mov
jecxz
enter
std
bound
push
xchg
outsl
in
sbb
mov
mov
subl
jmp
out
push
ljmp
popa
mov
out
cltd
mov
dec
fbld
sub
cltd
dec
repz
inc
mov
cmpl
xchg
lret
lahf
jecxz
cmp
test
sbb
nop
ds
test
and
int3
fnstcw
pop
sti
mov
and
lods
push
push
sti
dec
or
leave
out
or
adc
loopne
ffreep
jb
sub
mov
jo
ret
clc
rclb
inc
stc
mov
cli
shll
fwait
xor
jp
nop
clc
scas
aaa
mov
or
mov
pushf
xchg
sub
stos
dec
jmp
pushf
jno
inc
jge
mov
or
cld
sbb
iret
add
xchg
pop
push
sbb
xchg
nop
inc
jnp
nop
xlat
mov
adc
out
dec
insb
test
aam
iret
jno
jo
mov
or
mov
cmp
js
imul
ds
aam
mov
mov
scas
push
pusha
lret
adc
int
loopne
aaa
fidivs
lods
fs
ja
imul
jae
sbb
jae
mov
out
sub
in
ds
fldcw
jo
pusha
clc
cmp
popf
stc
lret
pop
jecxz
loop
sbb
fwait
pop
and
mov
sub
repz
loop
cmpsl
mov
pop
icebp
shlb
dec
cmc
xchg
cmp
mov
lcall
retw
add
pop
daa
sbb
sbb
pop
gs
pop
sub
adc
sub
cmc
mov
ss
sub
outsl
popf
mov
flds
cmp
and
add
lahf
rcrl
lods
popl
clc
xor
mov
fildl
push
sti
or
push
xlat
imul
cli
and
das
xchg
mov
mov
ficompl
sbbb
push
pop
lock
or
mov
aaa
popf
dec
cli
or
fstl
inc
lcall
jg
ja
or
arpl
add
and
dec
push
popl
outsl
push
iret
cmp
movsl
inc
dec
call
inc
and
in
and
push
in
mov
pop
arpl
bound
popa
dec
mov
inc
dec
in
sub
sti
fidivl
popa
fnstsw
dec
mov
int
into
popf
repz
jne
fisttps
xchg
clc
and
insl
daa
pushf
cld
add
and
aad
push
roll
jbe
pop
movsb
dec
lods
inc
fwait
lods
int
je
outsb
sub
jge
cmp
clc
cmp
das
outsb
arpl
stc
push
out
jge
mov
test
sbb
xor
je
out
lahf
inc
or
int
psrlq
mov
add
sub
xor
call
call
xor
std
sti
mov
push
cmp
aaa
cmc
aaa
mov
inc
cltd
les
out
push
daa
cmp
jp
mov
aad
shlb
xor
repnz
sahf
jecxz
popa
hlt
dec
lcall
dec
loopne
adc
loopne
sub
mov
mov
cmpsl
aas
loopne
sbb
push
sbb
jo
insb
add
inc
xor
xchg
sub
pop
aas
dec
div
out
loop
push
mov
dec
push
xor
push
add
xor
xchg
scas
pop
mov
das
clc
ljmp
adc
jmp
adc
xlat
add
popa
mov
outsb
pusha
mov
jnp
mov
cwtl
inc
sbb
push
je
inc
sub
inc
pop
xchg
mov
stos
cmc
rorl
decb
pop
inc
sti
sub
fucomip
lret
inc
in
jg
sub
cmp
inc
xor
call
scas
int3
adc
dec
mov
movsb
out
xor
sub
dec
pop
shll
rcrb
push
aam
js
addl
cmpsb
aad
mov
cmp
adc
and
xchg
jae
cmp
pop
push
pusha
les
inc
mov
shlb
leave
adc
or
push
mov
lods
pop
fistl
sub
xor
aad
sub
mov
xor
pop
btc
in
movb
in
mov
jp
pop
mov
dec
pop
xor
sbb
ret
nop
cmp
or
scas
in
jecxz
sbb
xchg
loopne
sbb
ja
or
xchg
mov
lods
sahf
faddl
xchg
popa
sub
mov
mov
and
mov
insl
dec
inc
scas
movsb
fsubrp
shrb
imul
das
sub
mov
ds
std
pop
add
fldenv
dec
and
fildll
fisubrs
loopne
in
dec
std
cmpsb
cs
sbb
pop
call
int
mov
test
in
jnp
mov
mov
fcompl
cmp
loopne
cmc
mov
or
scas
push
pop
jl
addr16
aad
movsl
and
pop
cmp
inc
clc
push
mov
cltd
xchg
add
push
data16
pop
addr16
out
push
or
cs
fucom
test
imul
push
les
fmull
xorl
sub
test
insl
sahf
test
xchg
loopne
xchg
mov
add
rcll
dec
or
test
dec
and
data16
pop
shlb
pop
test
sub
sbb
pusha
aad
sbb
mov
pop
incb
stos
sub
sub
enter
sbbl
and
mov
testb
fs
cmp
out
inc
inc
sbb
mov
dec
xor
data16
dec
pop
mov
sub
addr16
adcb
pop
cmp
iret
out
adc
push
push
ja
sub
cmpsl
rcrl
push
cmpsb
daa
xor
shl
dec
les
and
in
dec
fs
addr16
into
aad
repz
dec
mov
subb
mov
pop
arpl
push
push
add
int3
jecxz
xchg
adc
rorb
dec
add
mov
fisttps
ja
and
ljmp
aas
push
mov
xor
sarl
mov
xor
sbb
push
push
xor
jno
mul
sub
mov
cwtl
notb
xchg
xchg
xchg
sbb
arpl
jnp
js
andl
arpl
mov
mov
add
fldt
xchg
addr16
adc
inc
mov
sbb
inc
pop
dec
push
jl
sahf
jnp
mov
mov
cltd
stos
mov
and
mov
arpl
into
fisubrl
cld
cmp
inc
xchg
fstpl
out
xchg
int
in
ljmp
popf
pop
sti
mov
arpl
cmp
rorl
pop
jg
mov
cwtl
xor
mov
cmpsb
es
mov
das
icebp
mov
xor
insb
pop
add
pop
outsb
xor
adc
sub
cwtl
ss
jmp
pop
int3
daa
push
imul
rcrb
dec
nop
out
adc
push
xchg
sbb
inc
ret
cmp
sub
into
jno
add
int3
xlat
inc
mov
hlt
roll
sub
cmp
xorl
and
xor
or
ja
movsb
push
mov
scas
add
push
mov
mov
and
mov
mov
push
lret
mov
leave
ds
fwait
fwait
bound
pop
fcomps
lret
sahf
pop
lret
mov
ds
out
pop
mov
in
cmpsl
and
loop
mov
inc
or
movsb
jecxz
mov
mov
cltd
push
mov
jb
push
xchg
xchg
mov
xchg
loopne
arpl
out
adc
fstl
and
notb
and
shl
fimull
push
xor
ljmp
shrb
push
pop
loop
inc
cmp
mov
adc
loopne
lock
lgs
pop
je
push
sbb
jl
pop
xor
popf
or
xlat
outsl
sbb
dec
or
je
inc
leave
inc
mov
cmpsb
mov
dec
sbb
mov
mov
cmp
push
into
sbb
jl
mov
rorl
pushw
scas
sbb
mov
xchg
pop
mov
xor
sbb
pop
pop
pop
add
push
xchg
xchg
adc
mov
push
loop
out
or
aad
jp
repnz
nop
xchg
xor
cwtl
adc
fmull
test
call
lods
xchg
divb
add
add
movsb
xchg
je
dec
jo
xchg
not
push
out
xchg
les
es
jg
pop
loop
daa
pop
or
aas
out
pop
xchg
jmp
mov
nop
sahf
fstl
lahf
in
bts
imul
pop
push
ja
std
dec
xchg
pop
jbe
negb
clc
loope
fwait
pop
cld
push
fiaddl
sbb
inc
subl
imul
fmuls
shrb
or
add
fwait
lds
sti
xorb
pushl
stos
cltd
imul
dec
jne
xchg
pop
jge
popa
gs
fcoml
into
mov
cmc
movsl
pop
sbb
out
loope
shrb
daa
xchg
adc
mov
mov
xlat
mov
cwtl
sti
mov
adc
and
out
sub
test
add
adc
fs
dec
aaa
xor
push
aam
adc
sbb
cld
imul
jge
xchg
xor
stos
shlb
js
mov
mov
sub
inc
mov
lret
fadd
in
decl
outsb
mov
and
jns
dec
jecxz
sub
fwait
aas
movsl
divl
xor
mov
dec
sbb
adc
mov
cwtl
xor
andl
pusha
pop
mov
mov
lcall
inc
test
cmp
mov
push
in
les
jge
mov
mov
pop
andl
jne
leave
lods
pop
mov
fcoms
add
mov
push
lret
pop
jl
mov
xchg
pop
cmpsl
pop
mov
imul
cmp
jle
insl
out
cmpsb
hlt
push
push
pop
aam
add
jge
dec
pop
sbb
cmp
out
scas
lea
xor
stos
xchg
sbb
mov
mov
jmp
rorl
xchg
pushl
jl
pop
lcall
dec
push
cltd
out
lcall
scas
lods
or
lock
movsl
loopne
xor
aas
outsl
cmp
sub
in
ja
stc
aas
in
das
xchg
aad
int3
xor
mov
adcl
fdiv
or
jno
inc
aaa
pushf
push
push
cltd
mov
fcoml
push
scas
mov
orb
xchg
pushf
sub
push
pop
aad
jo
lods
lds
loop
jmpw
stos
adc
lods
inc
mov
xor
xchg
ret
pop
adc
mov
sbbb
fsubr
adc
jmp
xor
ret
jle
push
data16
mov
js
sbb
add
cltd
lahf
aas
jae
or
adc
rcll
sbb
mov
js
cwtl
pavgb
adc
mov
enter
gs
js
jno
xchg
sahf
rclb
push
inc
jge
push
lock
xor
and
adcl
jg
add
and
subb
les
mov
cli
outsl
int
imul
out
gs
test
inc
cmpsl
mov
aaa
enter
repz
testl
add
or
adc
jg
lods
stc
cmp
dec
add
jbe
add
mov
push
dec
loop
mov
and
ds
hlt
cld
or
es
test
stc
xor
cs
mov
aaa
cmc
xor
mov
out
sarl
xchg
jge
hlt
ds
daa
fldcw
cmp
repz
fnstenv
arpl
xchg
xchg
addr16
push
push
jns
stos
int3
mov
xchg
call
adc
mov
fildl
push
loop
lods
leave
xlat
scas
xchg
xchg
aam
adcl
ds
ret
stos
add
test
jmp
mov
icebp
jno
xchg
jns
push
push
pop
dec
pop
flds
and
movsb
aad
pop
in
in
add
imul
xchg
aam
test
pusha
or
inc
sub
xchg
popa
sbb
loope
or
mov
dec
mov
dec
mov
cmp
add
testb
sub
fsubs
lcall
push
pop
std
adc
insb
mov
lcall
int3
mov
arpl
scas
test
add
xchg
inc
out
cltd
pushf
sbbb
push
imul
repnz
push
testb
aad
pop
sbb
je
dec
jne
inc
sahf
mov
cmpsl
mov
mov
icebp
lea
mov
lret
add
movsl
inc
cmp
cmpsl
dec
les
test
sbb
add
mov
adc
aas
lock
add
cld
cmp
jecxz
mov
insl
gs
sub
or
sbb
pop
fs
rorl
fistpll
dec
aaa
test
test
xor
sub
hlt
add
sub
mov
out
movsl
daa
jp
mov
add
loopne
mov
addr16
ljmp
lock
push
clc
cli
sbbl
inc
clc
out
scas
adc
jb
mov
outsl
adc
pop
mov
arpl
outsb
adc
and
lahf
mov
cwtl
pop
pop
mov
dec
sbb
clc
lock
stc
std
outsb
xchg
stos
mov
lods
pop
xchg
iret
mov
stos
inc
push
inc
xchg
fs
in
push
mov
outsl
push
notl
ds
fisttpl
cwtl
bound
xchg
mov
mov
xchg
adc
pop
enter
push
shr
xchg
in
lods
outsl
fcmovb
rol
in
dec
cmp
xchg
xchg
mov
sahf
lods
flds
push
lods
mov
mov
test
gs
in
lea
bound
add
subl
jmp
lods
imul
insl
pop
fwait
xchg
mov
add
fwait
xor
icebp
cli
dec
push
rcrl
cmpsl
or
jmp
push
and
imul
dec
cmp
jne
jmp
and
jle
inc
add
leave
sbb
in
inc
fdivrl
cmp
sbb
mov
sub
lock
movsl
push
adc
mov
mov
sbb
in
mov
fsubl
sti
pop
ds
push
cs
xorl
lahf
adc
pop
jmp
test
fdivs
lods
sbb
mov
sub
sti
inc
and
pop
mov
insb
inc
int
jl
into
std
lock
mov
cmp
dec
lock
or
mov
adc
sbb
mov
mov
jbe
lret
inc
mov
inc
xchg
stos
stos
out
dec
ret
mov
cmp
cmpsl
jg
lock
push
cmp
mov
cmp
push
insb
jo
mov
fldl
gs
insl
or
iret
insl
sbb
popf
or
sub
insl
es
faddp
xchg
lds
ja
xchg
ficomps
es
out
xchg
xchg
leave
add
pop
inc
mov
jl
lods
roll
inc
add
ret
pusha
jnp
ds
shrl
inc
sub
xlat
xchg
std
sarb
jns
push
mov
inc
add
xor
cmpsb
pop
pop
jge
or
insl
and
and
pop
shrl
mov
stc
clc
pushf
and
icebp
lret
sbb
ret
lods
into
jmp
push
fistpll
incl
push
or
gs
scas
jl
push
stc
mov
js
jle
cs
add
stos
inc
movsb
inc
cmc
jecxz
mov
ds
xchg
fisttpl
sahf
cmp
aaa
incb
pop
hlt
mov
sbb
icebp
xchg
and
inc
loopne
popa
lret
shlb
xor
and
daa
loop
push
sub
or
lock
jns
stc
mov
loop
add
push
ja
out
or
nop
arpl
cmc
sahf
rcll
and
add
push
xchg
fimull
inc
jae
xchg
xor
fisubrl
test
aad
xchg
ja
pop
out
pop
adc
outsl
push
test
jmp
and
fs
in
add
lods
push
xchg
ss
shlb
cmpsb
lds
aaa
pop
jle
outsl
insb
lahf
sbb
sub
ds
jae
movsl
push
insl
jg
aad
pop
push
testl
or
icebp
les
enter
enter
sbb
adc
dec
mov
imul
mov
adc
je
cmp
adcl
jbe
inc
fistl
ljmp
xchg
aad
xchg
cltd
xchg
movsl
popf
and
add
mov
movb
roll
jne
sar
mov
dec
inc
test
jo
repz
pop
movsl
daa
or
fisttps
aas
sbb
dec
mov
cmp
subl
dec
insl
add
test
pop
sub
push
popa
fldcw
testl
xor
out
dec
loope
mov
mov
ficompl
inc
jmp
sub
jno
insb
pop
fmuls
push
mov
inc
test
push
push
loope
jp
jns
lods
xchg
and
clc
xor
push
arpl
dec
fcomps
iret
add
mov
dec
and
loop
bound
jb
jnp
xor
in
mov
mov
lds
vmovhpd
test
inc
dec
icebp
sar
mov
mov
lods
stos
add
add
inc
je
lods
adc
xchg
in
or
and
push
mov
inc
dec
mov
cmp
ss
mov
pop
lods
push
fmuls
ds
into
mov
insl
stos
push
jae
mov
cmp
push
jg
ljmp
jl
or
and
mov
mov
fwait
mov
or
pushf
rcrl
inc
sbb
xchg
jge
mov
movsb
pusha
jmp
adcb
lahf
xchg
xchg
ljmp
and
cli
sahf
sub
xchg
add
sub
subl
int3
icebp
or
imul
mov
mov
add
rcll
and
jbe
jo
scas
out
andl
jge
cmp
incb
movsl
add
jp
xor
dec
imul
pop
inc
insl
cmp
push
and
sbb
lods
cmpsb
aam
repz
mov
cmpsl
icebp
cmp
test
rol
mov
xchg
push
pop
jle
pushl
fsubs
add
imul
fistpll
rorl
fs
in
cmp
pop
cltd
pop
enter
stos
lods
test
dec
push
or
xor
cmp
xchg
and
push
int
es
movsb
loope
daa
xor
mov
or
push
sahf
cmpsb
push
imul
je
push
pushf
push
dec
or
pop
mov
sbb
sbb
push
mov
aam
xchg
mov
lods
pop
inc
push
daa
call
test
add
and
mov
dec
inc
mov
repnz
pusha
push
lods
in
pop
sbb
mov
xor
pop
jae
repnz
mov
mov
mov
cmp
iret
aad
xchg
lods
lcall
mov
pop
pop
sub
pop
add
mov
xchg
push
test
lret
loopne
xchg
andb
stos
fidivl
adc
enter
sahf
insl
push
cmp
lahf
out
jmp
fwait
lods
mov
aaa
sbb
or
pop
xchg
mov
mov
adc
add
push
out
aaa
and
inc
das
mov
roll
inc
add
push
xchg
bound
mov
jp
fcoml
frstor
pop
nop
add
out
filds
xchg
lods
dec
scas
es
das
hlt
jae
imul
bound
call
call
adc
xchg
dec
fstl
push
sbb
frstor
cmp
pop
push
mov
cmp
dec
popf
or
inc
insb
imul
push
mov
add
pop
fmuls
ret
push
popf
xchg
aaa
inc
and
cltd
mov
mov
mov
mov
cs
xchg
pop
jge
scas
aas
cmpb
xchg
mov
jno
mov
lret
pcmpeqd
jmp
dec
push
jecxz
or
or
adc
sub
popa
cmp
imul
stos
mov
adc
stos
andl
jp
jl
fisubl
in
test
clc
push
adc
jb
shrb
outsl
inc
mov
insb
arpl
aas
daa
and
sahf
test
adc
and
inc
pop
xchg
out
inc
nop
jl
jle
stos
jecxz
loopne
dec
sub
pop
icebp
bound
dec
out
and
leave
es
ret
loop
xor
movsl
lds
cmp
mov
sbb
inc
xlat
sbbb
mov
lods
mov
bound
cli
dec
hlt
sbb
jle
add
mov
xchg
arpl
xor
jmp
jecxz
sar
add
inc
dec
imul
inc
or
xor
sbb
sub
sub
insb
xor
outsb
xor
popa
and
mov
sbb
inc
lret
cs
pushl
fsubl
dec
jae
or
jle
inc
shrb
adc
out
inc
add
test
insb
int
push
jle
es
sub
jecxz
jge
push
aad
mov
sbb
push
test
and
insb
adc
sub
clc
pop
pushf
and
mov
hlt
test
mov
test
push
popa
or
pusha
orb
fwait
icebp
add
sbb
lock
sbb
mull
nop
add
paddusw
ss
push
jp
jmp
lahf
sbb
in
out
inc
lret
cmp
lods
not
mov
movsl
xchg
mov
add
add
mov
pushf
aam
cmp
mov
add
mov
aam
or
dec
jo
aad
mov
mov
mov
and
addl
fsubr
sub
xchg
sub
call
test
int3
fistpll
push
loop
les
out
in
cmp
adc
pop
lods
mov
lods
addr16
push
imul
mov
dec
cmpb
push
cld
inc
add
lods
jecxz
add
mov
es
mov
inc
pop
jb
push
sbb
dec
lea
adc
enter
jae
mov
mov
int3
jbe
add
rcrl
fists
ljmp
pop
push
das
mov
int
rcll
xchg
xor
lea
sub
stos
adc
adc
cmp
mov
outsb
cmc
xor
jg
jnp
ret
ljmp
test
std
lret
adc
dec
lds
mov
idivb
shrb
pop
xchg
cmp
mov
out
loop
mov
mov
and
ffree
jbe
fsubrl
cmp
dec
test
xor
andl
jns
push
cmp
jge
int
cmpsl
cmpsl
sub
lahf
xchg
push
rolb
aam
hlt
push
ss
sbb
sbb
out
jae
push
iret
sbb
xor
loope
out
inc
push
fs
mov
scas
shl
xchg
pop
pop
lret
or
inc
adc
rorb
cli
add
je
pop
nop
dec
fnstsw
outsl
jne
fcompl
push
fldl
or
jmp
push
jl
insl
je
mulb
test
mov
lock
pop
jb
mov
and
jl
sbb
add
cmpsl
aam
mov
jl
nop
mov
mov
jbe
mov
test
dec
inc
lea
xor
rcrb
add
lret
mov
adc
enter
mov
arpl
addl
sub
dec
jae
enter
movsb
sub
scas
pop
jnp
lods
fstpt
icebp
fisttpll
sub
adc
lock
cmp
cmp
add
idivb
lods
outsl
jmp
lods
lret
push
fdivrp
leave
aam
mov
sub
inc
cwtl
fildl
push
push
shlb
in
and
outsb
notl
dec
sbb
std
add
xor
out
jmp
in
out
mov
inc
pushf
insb
ficoml
push
xchg
pop
inc
push
adc
std
loopne
imul
mov
xchg
cmpsl
jbe
jmp
or
dec
inc
out
jmp
sbb
xchg
mov
push
xor
and
inc
fstl
call
mov
orb
mov
mov
mov
bound
jno
cmovo
cmc
cmp
fdivrs
sbb
pop
adc
pop
add
and
pusha
daa
scas
andb
sbb
loope
add
jae
jns
xchg
lret
or
ret
into
int3
push
push
cmc
fimuls
fnsave
push
lock
dec
cmp
push
fcompp
in
imul
pop
or
ss
jns
call
mov
mov
ljmp
cld
int3
jle
jg
jge
clc
sbb
mov
out
ljmp
push
push
inc
shr
xor
and
mov
dec
mov
inc
stc
shr
push
std
mov
jmp
and
out
rol
inc
rolb
iret
dec
push
sub
ds
cs
jnp
icebp
or
xlat
pusha
sbb
and
xor
mov
fidivl
mov
cmp
popf
and
xchg
jne
cmp
repz
pop
test
xor
add
imulb
mulb
sbbl
stos
dec
sahf
hlt
lods
rclb
mov
jp
xchg
test
outsb
pop
mov
roll
fstl
push
iret
cltd
movsl
into
sbb
insb
lcall
push
mov
ret
repz
bound
std
xor
test
lret
dec
clc
cmp
and
ficompl
jnp
pop
stos
bound
adc
xchg
sbb
je
and
hlt
pop
cltd
outsb
iret
and
mov
adc
fsubl
inc
iret
imul
pop
mov
pop
js
lahf
pop
push
pop
repz
ret
cmp
xchg
cmp
js
xchg
pushl
fs
add
xchg
sbbb
test
pop
out
ret
push
mov
into
out
pop
shlb
aas
or
loopne
mov
dec
rol
and
test
sub
jbe
cmp
popa
pusha
push
test
mov
dec
into
orl
es
and
ljmp
cmp
jbe
psrad
insl
lock
hlt
pop
sub
sbb
jmp
add
mov
pop
iret
movsb
xor
inc
enter
and
sbb
xchg
sbb
cmpsl
mov
cmp
pop
fwait
sbb
fwait
mov
inc
nop
fdivrl
in
notl
xchg
shlb
and
aas
or
add
int3
in
das
mov
cld
out
xor
inc
int
stos
ljmp
imull
inc
shl
push
and
rcrl
stc
cmpsl
test
add
in
sbb
imul
pushf
jge
sbb
jno
jnp
je
in
push
loop
popa
enter
leave
xchg
fnstcw
mov
mov
loopne
pop
mov
mov
xor
push
out
jb
and
movsl
cmpsb
lret
mov
nop
dec
xor
adc
gs
fcoms
aad
orb
dec
inc
fmulp
mov
xchg
mov
pop
and
mov
xchg
in
xor
push
sbb
or
inc
insl
xchg
data16
int
mov
mov
testb
pop
dec
inc
in
mov
lret
ds
movsb
pop
and
mov
icebp
or
das
loopne
outsl
jno
pop
jno
je
std
test
imul
jnp
cmp
cmp
dec
and
adc
xor
pop
mov
inc
out
push
pop
jmp
or
jecxz
and
inc
aaa
call
and
stc
jmp
cmp
jno
ss
pop
jne
sub
inc
adc
mov
aad
das
lock
jbe
xchg
movsb
fs
pop
sub
in
stc
in
jns
iret
mov
mov
add
shll
out
add
out
scas
dec
mov
es
pop
stos
mov
cli
imul
inc
std
iret
xchg
mov
call
ss
pop
insb
push
adc
pusha
iret
xchg
pusha
fisubs
jg
incb
pop
dec
test
or
adc
dec
cmp
xchg
iret
out
ss
aaa
jecxz
pop
dec
push
push
clc
inc
xchg
fstps
jmp
repz
fwait
cs
repz
int3
imul
adc
mov
adc
fimuls
mov
push
mov
push
jl
imul
and
inc
pop
or
repnz
xor
lds
mov
hlt
or
push
lods
stos
in
jnp
loop
aam
and
ret
xchg
imul
pop
sub
pop
cmpsl
mov
mov
push
lcall
or
push
hlt
mov
pop
add
fisubrl
inc
cmp
sbb
push
pop
sahf
faddl
loop
or
into
sub
xchg
sahf
jne
ja
sub
add
bound
mov
dec
inc
jns
pop
sbb
jnp
mov
imul
cmp
inc
jae
loop
mov
mov
arpl
sub
fiaddl
cwtl
mov
pop
sub
imul
push
dec
mov
lea
or
mulb
negb
out
jg
inc
push
ss
or
adc
iret
xor
int3
out
loop
pop
push
rcrb
jb
inc
inc
pop
rcl
mov
lea
add
mov
es
insl
hlt
mov
inc
inc
xchg
icebp
dec
out
mov
jb
jb
sub
xchg
rcl
xchg
jbe
js
pop
inc
shl
sbb
shrl
pop
pop
pop
lods
hlt
enter
pop
lea
mov
jmp
movsl
ficoms
xchg
mov
loope
push
add
or
test
fbstp
outsb
mov
xor
je
and
sbb
sbb
cwtl
xor
movb
imul
xor
jecxz
adc
lods
dec
sub
xor
cmpsb
nop
sub
dec
pusha
xor
add
mov
fs
int3
xchg
lcall
cmp
push
adc
subb
pop
and
xor
popf
aad
add
mov
pushf
or
sbb
pop
jl
jnp
xor
cltd
sbb
xchg
xchg
inc
xchg
mov
sbb
fnsetpm(287
cmp
push
stos
cmc
adc
add
pushf
ja
sbb
adc
int
jecxz
mov
or
pop
cld
mov
ja
add
clc
pop
push
adc
and
mov
orb
mov
test
popl
pop
sbb
and
cld
outsl
cmp
loope
push
xchg
and
fisttpl
cmpsl
popa
pop
insb
sar
inc
sahf
mov
das
js
jnp
test
shrb
and
dec
cltd
adc
adc
das
jbe
dec
negb
test
jge
pusha
inc
movsb
push
and
or
fcoml
cmpsb
in
clc
jb
lcall
cmp
mov
das
sub
mov
mov
sbb
addr16
stos
and
int
ss
movb
hlt
cmp
pop
mov
cmp
push
subb
movzwl
mov
cld
je
sbb
decb
add
daa
cs
pop
adc
inc
pushf
data16
push
xor
movsl
mov
xor
mov
lods
movsb
xor
mov
std
inc
movsb
cltd
rcr
or
cld
jg
push
leave
dec
cltd
fiaddl
pop
mov
sbb
cmp
sbb
pop
int
add
fidivs
std
aas
fadds
negl
ds
leave
sbb
stos
inc
fnsave
sbb
movsb
test
repnz
loopne
pop
cmp
pop
je
xor
fst
imul
xor
jo
daa
cmc
jb
push
ljmp
add
cmp
lret
xor
add
fdivs
push
cmpsb
insl
and
shrl
jecxz
cmp
xor
into
inc
mov
sbb
inc
addr16
ss
mov
push
lahf
dec
inc
jg
mov
adc
sub
mov
pop
scas
sbb
push
adcb
mov
pushf
mov
mov
pusha
mov
mov
pop
push
sub
cwtl
ds
mov
les
das
cltd
fwait
xor
js
js
cld
in
nop
xchg
sahf
in
and
test
sarl
xchg
rolb
pop
inc
fnstcw
jg
out
sbb
xchg
fstpt
add
inc
xor
mov
pop
mov
testb
stos
xchg
stos
sub
cli
push
sub
jp
js
mov
mov
mov
xchg
add
mov
daa
mov
cmp
into
xorb
or
adc
pop
sbb
sub
jae
test
in
or
outsb
mov
cmpl
sub
pop
cmc
push
ficomps
cmpsl
adc
arpl
sub
lret
ret
outsb
sbbl
sbb
mov
rcll
enter
and
fcoml
xchg
mov
movsb
pop
cwtl
out
push
shl
push
pop
mov
loop
cld
pop
mov
subb
fldenv
or
xorl
push
inc
and
and
jmp
mov
not
decl
jge
pushf
mov
test
mov
lret
mov
ds
popf
mov
mov
pop
adc
outsl
xor
jno
aad
inc
and
ss
aad
clc
xchg
xorb
push
pushf
les
jl
mull
imul
cwtl
sahf
leave
dec
lret
lock
es
sti
xor
stos
insb
and
es
mov
inc
leave
lock
mov
mov
jg
mov
mov
xor
mov
insl
into
push
pop
xor
xchg
fsub
cmc
adc
jb
roll
pop
cmpsl
xchg
repz
mov
inc
ficoms
movsl
push
fwait
test
addl
or
xor
or
pop
xchg
sbb
xor
inc
lcall
lcall
mov
iret
adc
or
hlt
lods
jne
fsubl
or
push
aam
push
fs
mov
int
mov
mov
cltd
std
push
int3
sarl
sahf
pop
repnz
pop
das
sbb
mov
push
xor
fwait
insb
clc
les
dec
sbb
jo
imul
cltd
mov
jae
xlat
dec
or
ss
das
mov
xchg
pop
ret
pop
dec
or
adc
add
dec
loope
sbb
lods
xor
xchg
add
js
dec
xchg
ss
push
pushf
mov
add
lcall
sti
jp
in
fidivs
cld
inc
cmpb
dec
imul
and
sub
sti
xor
or
sbbb
ljmp
movsb
jbe
mov
stos
adc
inc
inc
pop
or
int3
lock
lret
push
jle
cld
mov
jbe
pop
push
sahf
sti
leave
pop
addr16
mov
or
mov
inc
dec
test
mov
iret
sahf
xor
jbe
mov
and
fincstp
add
xor
inc
pop
mov
xor
out
fnstsw
jmp
pushf
cmp
cmpsb
cld
into
push
ds
push
cltd
jg
in
add
dec
popa
mov
shl
insl
lret
jge
scas
lret
cld
xchg
mov
sbb
jmp
add
jne
pop
fimuls
jmp
jns
dec
test
scas
or
or
repnz
push
out
loope
or
jmp
inc
jge
scas
sbb
cmp
fs
sbb
cld
adc
add
fisttps
xor
push
les
push
xchg
mov
out
addr16
sarl
mov
leave
arpl
movsl
mov
xchg
cmpsb
add
div
mov
fimull
or
sti
rcrb
lahf
push
push
xchg
add
push
scas
sbb
inc
push
addr16
push
mov
mov
mov
lods
add
lds
inc
xor
sub
push
sti
dec
push
cmp
xchg
mov
out
xor
cld
leave
js
adc
bound
lock
cmp
inc
imul
shlb
stos
out
movsl
movsl
mov
adcb
test
test
adc
push
movsl
add
shll
mov
sub
jge
mov
adc
inc
in
in
push
into
dec
stos
in
das
mov
fcomps
xor
pop
lahf
ds
xor
xor
dec
dec
ljmp
sub
je
gs
or
inc
adcl
xchg
ret
stc
or
xor
sub
sub
std
add
lock
or
mov
and
in
out
add
xor
sub
testb
cli
adc
arpl
add
sub
in
iret
out
daa
sbb
inc
call
rol
test
es
mov
test
push
fs
scas
jnp
cmp
lds
pop
aaa
lea
cli
ret
sbb
mov
icebp
push
stos
fisubl
addr16
mov
cmc
push
in
repnz
int
stos
cmp
xchg
rol
dec
imul
cmp
movsb
xlat
mov
push
testb
pop
mov
rol
pop
lcall
sbb
clc
call
ja
ljmp
adc
movsb
lahf
adc
push
roll
popf
sub
in
push
lcall
fidivrl
sub
xchg
call
jbe
mov
mov
repz
in
sbb
test
jnp
pop
sub
cwtl
jl
into
sti
xchg
or
shrl
into
mov
push
xor
push
add
sbb
mov
inc
fnstenv
xor
test
and
add
movsl
dec
jae
pusha
mov
mov
ja
rcrl
and
into
cmp
pop
addb
xor
jle
std
popa
out
or
or
or
insb
jp
push
jns
sub
add
into
cwtd
sub
jno
in
jle
ss
es
idiv
adc
cmpsb
lods
imul
inc
mov
cmp
push
mov
cltd
add
lods
sti
outsl
inc
jbe
test
xor
dec
pusha
pop
mov
frstor
pusha
dec
ret
mov
push
jno
mov
add
insb
loop
setg
cmp
jge
rorb
mov
adc
push
cli
outsb
stc
shrl
cli
test
cmp
dec
dec
mov
sbb
les
out
icebp
pop
sbb
xor
push
in
popf
fisttpll
int3
bnd
xchg
xchg
and
xlat
in
data16
adc
sbb
mov
jge
jb
sub
enter
les
mov
push
push
sbb
mov
aam
mov
ljmp
ret
sarl
adc
inc
call
ret
dec
adc
les
xor
leave
xchg
test
outsl
bound
add
inc
jl
jmp
das
inc
and
ret
lret
lahf
pushf
cmp
popf
cmp
iret
icebp
pop
cmp
lahf
dec
pop
push
lds
mov
lahf
ret
xchg
add
ss
cmpb
mov
imul
rcl
lea
dec
call
pop
lods
repz
sbb
bound
sub
and
mov
add
daa
push
pop
stos
pop
sbb
out
add
xchg
jae
cmc
int3
out
adc
lods
mov
lret
mov
sbbl
jl
pop
cmpsl
sti
inc
add
sub
inc
rorb
mov
sub
in
stc
ret
loop
inc
es
pop
mov
push
cmp
mov
shll
push
push
lcall
divl
add
sub
cmp
pop
ss
add
jbe
pop
and
ret
adc
fadds
add
movsl
test
mov
enter
mov
mov
inc
mov
jb
add
pushf
mov
or
imul
pop
je
pop
mov
jo
stc
mov
test
and
rorl
decb
outsl
add
in
lock
mov
mov
mov
xchg
inc
push
mov
addr16
xor
sub
addr16
pop
jl
mov
ret
ret
loopne
add
orb
loope
clc
push
inc
xchg
adc
fstp
out
scas
sub
xchg
sbb
aas
inc
jnp
add
aas
xchg
pop
xchg
jne
aad
stos
jb
xor
mov
adc
lods
adc
aad
std
icebp
mov
roll
sub
shl
push
cmp
mov
lods
xchg
aam
add
jnp
ror
ljmp
cmpsb
lock
cmp
dec
mov
mov
rcll
stos
sub
dec
les
loope
scas
sahf
pop
out
test
inc
xchg
sub
push
jmp
and
push
or
push
scas
pop
shlb
and
xchg
xor
jmp
jmp
cmp
push
xchg
addr16
cmp
call
add
test
int
xor
in
pop
add
or
ljmp
cli
pop
imul
jg
lods
jle
in
pop
push
arpl
call
popa
aad
jno
es
das
nop
ljmp
hlt
addr16
xchg
je
pop
sbb
lods
mov
ss
lds
imull
cmpsb
les
xchg
mov
add
push
mov
inc
out
lea
inc
leave
rcr
sub
sbb
fnstcw
jp
sub
aas
lret
jae
sbb
out
les
xor
sbb
enter
jns
outsb
aam
dec
scas
dec
test
dec
mov
cwtl
out
sti
jae
push
mov
int
cs
icebp
ljmp
fdivrl
cmp
je
sub
daa
movsb
icebp
gs
mov
loope
shll
pop
pop
jge
aaa
outsb
popaw
pop
loop
inc
push
test
sbb
adc
xchg
or
leave
arpl
adc
pop
jge
or
iret
lret
jecxz
jnp
fcmovne
sbb
fs
push
outsl
push
mov
adc
scas
push
aam
insl
jmp
cmp
mov
mov
cmp
xchg
inc
sahf
mov
loop
inc
lods
pop
sub
mov
sub
or
xchg
ret
outsb
mov
shl
pop
push
ffree
test
out
sbb
les
pop
mov
shll
pop
ljmp
adc
sti
adc
cmp
mov
cwtl
sti
jnp
adc
push
test
stc
sub
adc
or
sbb
loopne
add
testb
sub
sahf
mov
pop
iret
sub
aas
jo
aam
ds
xor
popa
lea
sub
shrb
lods
nop
add
js
cmp
push
inc
das
lret
js
leave
cmpsl
mov
pop
adc
mov
or
icebp
pop
sahf
inc
cld
add
pushf
stc
and
data16
and
cs
loope
jno
icebp
pop
icebp
scas
dec
or
mov
or
and
stos
lahf
pop
mov
repnz
stc
repz
jns
dec
or
push
and
sti
xor
ss
push
mov
mov
lcall
add
mov
shlb
sahf
dec
subb
stos
pop
rcrl
lahf
mov
push
mov
lods
jb
xor
dec
adc
jle
outsb
out
push
inc
add
and
mov
loopne
call
jb
aad
mov
adc
sub
push
loop
add
mov
test
mov
or
xchg
lcall
pop
dec
inc
js
mov
pop
adc
in
and
icebp
push
scas
in
popf
mov
xor
jmp
add
repz
pushf
mov
test
addb
sbb
shll
and
push
inc
scas
cltd
pop
or
test
sbb
popw
sbbb
jns
adc
cmpb
cmp
xlat
imul
pavgw
ljmp
xchg
xor
mov
in
mov
in
mov
gs
sub
loop
adc
daa
lock
jge
lret
call
jge
aad
jb
cmp
mov
mov
lock
add
xor
pop
jbe
outsb
movsl
pop
ret
xor
add
test
lret
push
xor
jl
sub
mov
insl
cmp
pop
xor
xorl
ss
sbb
push
test
jmp
or
pop
adc
mov
mov
ret
push
jle
and
push
stos
dec
jne
or
inc
test
in
dec
addr16
insb
mov
jns
inc
jnp,pn
out
pop
dec
addr16
hlt
xchg
es
dec
sbb
dec
cmpsl
fwait
nop
xchg
cmc
rorl
jle
pop
push
dec
mov
ljmp
mov
or
leave
cmp
mov
repz
xchg
adc
fcomps
stos
cmp
push
clc
fbld
scas
xor
cmp
fxch
xchg
inc
mov
mov
jecxz
xchg
mov
addr16
dec
and
jnp
cltd
pop
rcrl
add
jnp
mov
out
sbb
das
movsb
push
and
cld
jnp
lods
sbb
mov
nop
mov
sub
cld
push
cmp
test
sti
push
stos
sahf
add
mov
cmc
dec
cmp
cmp
jns
sub
scas
inc
mov
fs
gs
call
jmp
adc
xchg
mov
sbb
ljmp
add
xchg
loop
imul
outsl
push
xchg
add
and
xchg
test
pop
xor
xchg
rclb
scas
aam
pop
dec
and
clc
or
movsb
nop
adc
dec
clc
adc
mov
pushf
jge
mov
xchg
and
mov
mov
sub
insl
mov
imul
and
push
rcl
andl
pop
and
push
sub
adc
std
loop
sub
es
xchg
push
xchg
lret
jb
ljmp
push
cmpsl
das
mov
pop
mov
stc
daa
int
outsl
mov
dec
pop
or
jae
mov
jge,pn
aad
movsb
rcrl
xlat
push
aad
mov
add
ss
movsb
fistpll
mov
jecxz
cltd
fidivrl
dec
fisttpll
xchg
pop
dec
inc
pop
mov
mov
push
mov
pop
cld
inc
or
fistpll
pop
fld
aaa
mov
pop
aaa
adc
adc
sbb
aaa
negb
loop
ds
inc
push
xor
rcrb
arpl
xchg
call
add
or
outsl
dec
insb
mov
inc
xchg
mov
leave
xchg
aaa
push
cmpsl
sbb
js
jle
mov
fnstenv
push
jnp
dec
push
and
vpaddb
xchg
nop
scas
sbb
jno
dec
push
fisubl
mov
dec
insb
out
leave
xor
gs
pushf
shll
stos
fs
outsl
jge
add
cli
jg
mov
fstpt
sub
daa
jl
out
jno
mov
std
mov
dec
mov
inc
sub
mov
mov
cs
lds
jnp,pt
fnstenv
sub
inc
insl
xchg
lods
push
test
out
icebp
jmp
or
and
outsl
jmp
xchg
and
add
movsb
shlb
out
pop
push
sahf
or
push
push
jg
sbb
xchg
inc
cmp
inc
or
shll
mov
aaa
daa
outsl
dec
jnp
int
xchg
das
add
or
push
lea
sbb
xchg
ljmp
sub
xchg
xchg
testb
call
enter
sahf
cmp
js
or
xchg
cwtl
push
push
jns
dec
cmp
shlb
dec
and
es
ficompl
adc
jne
pop
push
xchg
bound
sbb
xchg
cmp
fdivrs
push
rorl
add
xor
fidivl
sbb
xchg
pop
sub
pop
lret
faddl
mov
pop
xchg
adc
imul
jns
xlat
inc
movsl
sbb
mov
xchg
insb
inc
pop
icebp
inc
sbb
iret
fists
pop
push
mov
cmp
jae
fstpl
out
mov
fnstcw
out
in
arpl
xchg
mov
jge
repz
push
loopne
loop
sub
outsl
les
push
adc
sub
lcall
or
jp
pop
cwtl
xor
sti
adc
jge
xchg
addl
lcall
fidivrl
test
jge
cmp
mov
pop
mov
clc
xlat
stc
aam
dec
sti
add
and
enter
insl
int
leave
inc
fs
insb
out
mov
lock
stos
lcall
sub
mov
inc
push
sbb
test
enter
arpl
mov
sbb
call
xlat
fists
sti
jbe
ljmp
xchg
lcall
dec
xchg
jge
xlat
and
dec
jno
outsb
ds
lods
cmc
mov
js
dec
roll
pop
add
pop
pop
mov
std
bound
add
sbb
dec
popf
aaa
mov
cwtl
sub
lea
sbb
sub
rep
and
jge
pop
out
into
loope
ret
lds
ljmp
cli
push
or
insb
mov
jl
or
mov
mov
xchg
lcall
mov
mov
mov
testb
push
out
adc
jecxz
dec
pop
adc
lods
jbe
ja
int3
out
jmp
mov
sbb
xor
rorl
push
or
and
ss
add
push
adc
add
or
xchg
mov
inc
xor
or
fidivs
stc
mov
mov
fwait
adc
cmpsb
sub
cmpsl
std
xor
mov
jmp
cwtl
sbb
ret
imul
outsl
mov
sti
ss
jl
xor
mov
mov
xchg
or
hlt
mov
sub
push
jo
mov
repz
in
lret
in
sub
mov
and
je
xor
adc
fucomip
lods
imul
pop
pop
or
push
add
xor
leave
cld
mov
sbb
enter
addr16
push
adc
and
pushf
negb
add
mull
cld
jp
arpl
ja
testb
pop
imul
movl
pop
data16
sbb
push
aad
enter
imul
jb
loop
add
add
push
out
dec
fs
insb
adcb
aam
mov
add
ss
jl
jne
loop
sub
sbb
pop
mov
xchg
xchg
in
imul
inc
or
daa
addr16
test
cmp
jne
shll
adc
das
dec
xor
fidivrs
push
stos
and
or
jecxz
pop
adc
push
push
mov
fsubrs
fstps
mov
fcomps
nop
xchg
ds
cmp
rorb
cmp
fisubl
or
incb
popa
fdivs
inc
xor
adc
and
pop
cmc
imul
mov
lock
mov
xor
rcrl
jmp
in
clc
jg
lret
enter
pushf
dec
sahf
push
ret
inc
shr
adcl
mov
push
jecxz
mov
pop
inc
rcrl
xlat
xchg
lahf
add
inc
inc
in
aaa
jmp
les
out
pop
xchg
dec
xchg
into
inc
jge
jecxz
cmp
and
dec
ficompl
jbe
cmp
loopne
icebp
mov
mov
lcall
jmp
inc
cmp
lcall
addr16
pop
pusha
and
test
mov
mov
push
xor
cmpsb
fiaddl
push
aam
pop
jl
adc
movsb
ret
cmpb
rorb
jbe
or
xor
loop
psrlw
aaa
mov
jp
pop
inc
mov
adc
pop
sahf
and
aam
lret
push
mov
andl
jnp,pn
rolb
test
hlt
inc
and
fsubl
je
ds
jo
cmp
cmp
jmp
or
movsb
mov
or
jmp
stc
int3
sub
faddl
inc
xchg
hlt
sbb
mov
test
adc
inc
adc
dec
sub
dec
out
lods
inc
outsl
repz
cwtl
and
adc
pusha
mov
sub
popf
xchg
leave
sar
and
push
or
adc
inc
andl
das
sbb
push
ret
dec
push
sub
xchg
sub
call
dec
xchg
aam
xlat
mov
mov
shrl
add
and
lret
movl
and
lret
daa
mov
sbb
dec
gs
test
push
adcb
or
sahf
mov
mov
cs
fadds
mov
inc
add
xor
enter
mov
arpl
fldt
pop
xor
push
clc
jmp
test
in
push
cmp
adc
sub
movsl
cmpsb
and
lret
scas
pop
popf
add
sub
inc
pushf
mov
sarb
js
xchg
and
imul
in
ror
jo
insb
pop
pop
iret
out
into
fmuls
xor
pusha
inc
aam
scas
lds
aad
test
dec
push
pushf
dec
pop
das
xor
mov
and
push
cmpsb
xor
int
lret
push
in
arpl
and
nop
jl
push
and
das
cli
cwtl
or
xchg
hlt
daa
repz
cltd
js
cltd
mov
sahf
pop
js
adc
add
movsl
mov
xor
and
adc
pop
clc
pop
hlt
or
jge
jbe
mov
das
shl
or
push
popf
mov
clc
xlat
jo
aas
aas
enter
jg
cmc
insl
iret
shr
mov
adc
add
mov
int
push
dec
mov
adc
mov
arpl
test
push
in
jo
sbb
mov
sub
push
fistl
push
clc
or
lret
and
pusha
mov
add
push
addr16
ret
jne
daa
inc
fistps
arpl
adc
repz
addr16
push
jo
or
jbe
test
movsb
les
sbb
repnz
daa
push
jnp
push
push
rcr
sub
cmpl
out
push
mov
and
rcr
lods
daa
jne
push
ja
pushf
leave
insb
les
outsl
sbb
ret
aad
nop
insl
popf
std
and
push
jnp
lock
mov
fwait
cltd
pop
repnz
pop
jae,pt
or
aad
sbb
jl
test
leave
adc
xor
dec
jl
sbb
dec
xchg
sub
mov
xor
clc
rcr
or
adcl
orl
lcall
mov
mov
adc
into
push
inc
jne
mov
xor
xchg
lret
mov
loop
mov
mov
into
push
jl
adc
je
out
movsbl
and
inc
jb
je
jmp
jp
jp
int
mov
fsubl
push
sub
push
aaa
imul
icebp
mov
sarb
jge
xchg
lcall
aad
sbb
in
dec
stos
out
fwait
cmp
movl
jmp
outsb
mov
jbe
sub
push
int3
dec
pop
lret
xchg
hlt
jno
push
sub
and
mov
cmc
pop
insb
xor
addb
je
or
sbb
push
mov
out
pop
sbb
mov
clc
or
lods
mov
std
dec
out
call
test
in
aas
ja
inc
jb
xor
pusha
xchg
enter
ficoms
adc
xchg
incl
repnz
push
lahf
jb
mov
inc
xchg
pop
stos
or
mov
imul
mov
jmp
and
leave
jnp
mov
fnsetpm(287
inc
test
andps
push
adc
inc
add
sub
dec
cmc
in
and
inc
shl
adc
pop
fidivrl
or
scas
mov
xor
popa
sbb
xchg
stos
dec
push
cmp
ljmp
outsl
dec
push
loope
into
addr16
imul
aad
sub
dec
outsl
jp
lret
imul
lock
xor
lahf
notb
cmp
lahf
jmp
fsubs
cli
pop
mulb
mov
inc
jno
push
lret
sub
js
stc
loopne
test
add
shlb
cmp
test
inc
xor
stc
xor
xchg
pop
addr16
xor
jnp
xchg
fwait
jecxz
push
fdivl
mov
xchg
xchg
pop
mov
pop
pushf
stc
cmp
inc
cld
dec
mov
or
xorl
je
lret
sbb
or
xchg
inc
jle
jae
pop
in
cltd
adc
sbb
push
fimuls
xchg
ret
popf
sub
notl
pop
mov
sub
pop
in
jae
xchg
ret
jle
sub
mov
femms
ret
cwtl
lahf
or
sub
dec
push
adc
in
inc
adc
movsl
xor
shl
hlt
jns
jmp
es
scas
push
adc
xorl
push
mov
jae
lods
and
ret
clc
cli
push
mov
ljmp
and
push
or
out
mov
pop
and
leave
xchg
sub
loope
movsl
popa
jl
pushf
xor
xchg
cwtl
shl
adc
lret
xor
xor
cmp
mov
adcl
mov
std
aas
dec
pop
pop
mov
xchg
das
test
xchg
cmp
stc
sub
sbb
fildl
push
xor
adc
inc
insl
dec
cmc
xorl
xchg
call
mov
fbstp
or
rclb
imul
insb
mov
scas
xchg
mov
in
adc
mov
lret
sar
stos
gs
push
pop
adc
sbb
mov
pop
das
or
cltd
adc
pop
adc
add
outsb
cmp
dec
jp
jb
cmc
mov
ror
sbb
shl
cmp
outsb
in
out
mov
fisttpll
add
sub
pusha
inc
pop
lret
sbb
data16
cltd
popf
imul
pop
or
lods
jbe
cmp
mov
cmp
sub
or
mov
dec
sbb
push
rol
pop
push
ret
adc
jge
aam
pop
sub
xor
adc
and
add
cmp
pop
fisttpll
or
in
pop
notl
jne
imul
cltd
ja
fldl
movsl
in
mov
push
lahf
cmp
push
out
xlat
pop
push
fcmovnbe
sbb
mov
sbb
mov
cmpsb
push
fsub
stc
push
rclb
inc
arpl
aaa
pop
sub
xor
leave
leave
mov
ljmp
fs
fsts
and
mov
adc
sti
pop
dec
fisubrs
bound
fucomp
xor
inc
push
jp
xor
pop
int3
dec
fcmovu
ljmp
mov
pusha
es
outsb
mov
xor
add
lds
push
rolb
stc
xor
add
sub
fs
hlt
mov
in
cmp
mov
pop
pop
mov
xchg
test
outsl
adc
addb
imul
push
and
and
add
movsl
inc
cmp
xor
lock
loop
out
nop
or
jg
dec
adc
mov
iret
push
pop
add
ljmp
push
imull
adc
adc
cmp
adc
loopne
inc
cltd
jnp
daa
jo
jecxz
lahf
stos
shrl
loop
mov
add
mov
dec
mulb
cmpsb
ret
add
in
fabs
pop
out
inc
push
scas
mov
out
stos
scas
adc
test
inc
stc
sahf
dec
out
lds
fsubs
push
sub
sbb
mov
mov
sub
and
fstpt
mov
mov
leave
xchg
mov
in
cmp
mov
int3
xchg
dec
xchg
clc
and
mov
pushf
jmp
jne
pushl
pop
adc
stos
mov
or
xchg
mov
dec
aad
test
xor
jno
movsb
outsb
std
out
movsb
dec
jns
popa
mov
shl
add
mov
ret
dec
inc
ljmp
stos
add
jg
push
mov
outsb
jnp
loop
test
sbb
and
loope
test
das
sbb
xchg
lods
lcall
inc
fs
dec
adc
mov
inc
fisubs
mov
push
out
mov
pop
or
pop
call
mov
pop
rorb
bnd
dec
push
sbb
or
jb
or
mov
out
jns
or
or
pusha
dec
adc
dec
mov
add
scas
out
fisttpll
xor
and
movsl
dec
fistpl
es
pop
test
mov
pop
daa
mov
js
sub
dec
xchg
pushf
or
jo
inc
fldz
push
push
jbe
imul
mov
arpl
dec
test
enter
iret
test
scas
inc
rcpps
inc
cmp
adc
shlb
push
jae
push
int3
push
dec
mov
subl
pop
jge
jmp
into
lock
mov
mov
cmp
push
fldenv
mov
pop
std
xlat
jnp
mov
mov
or
jbe
cmpsl
test
in
pop
pop
dec
sbb
mov
mov
ret
mov
enter
and
mov
pop
loope
sbb
cmp
mov
add
insb
mov
and
movsb
mov
je
inc
adc
xchg
xor
pop
iret
push
vmulpd
inc
dec
push
in
dec
mov
movsb
iret
inc
dec
in
or
testb
adc
stos
cwtl
ljmp
sbb
mov
call
push
or
xor
rcll
fdivrl
mov
xchg
xchg
mov
dec
andb
pop
push
xor
xor
dec
pop
fcomps
jecxz
xor
mov
test
popa
pop
jb
push
outsl
inc
push
xchg
lret
pop
sbb
out
aam
inc
push
mov
mov
pop
xor
mov
sbb
movsl
shl
xchg
in
in
sbb
jmp
sub
lea
dec
ja
xchg
fcmovbe
mov
insl
mov
scas
push
push
or
andb
loopne
cmpl
rsqrtps
sti
roll
add
iret
sbb
leave
dec
sub
dec
lods
push
pop
fwait
addb
int3
xchg
sub
aam
lret
jmp
fidivs
addr16
mov
cmc
mov
mov
pop
mov
cmp
sahf
push
ret
push
jo
or
orb
or
outsl
leave
cld
andl
xor
ja
mov
lret
sbb
gs
push
popa
mov
mov
push
addb
inc
xchg
mov
enter
into
adc
sub
xchg
nop
fwait
sub
xchg
stos
dec
or
aas
nop
arpl
pop
mov
push
xor
sbb
out
jecxz
pop
cli
movsl
sub
aas
pusha
inc
jge
cmp
push
xchg
jecxz
popf
scas
sti
jbe
sbb
scas
std
fdivr
in
xor
jmp
cmp
ss
adc
outsb
mov
adc
push
orl
mov
addl
sub
subb
fistl
loope
push
inc
inc
cmc
cld
scas
or
add
ja
popf
cmp
fwait
out
shll
fildll
and
pop
push
add
or
push
stos
out
negb
int3
lret
push
inc
fists
insl
pop
push
push
pop
sub
or
mov
dec
pop
sbb
or
sbb
call
sbb
adc
xchg
fidivrs
loop
ja
mov
cs
cmp
fimull
shrb
jmp
or
fstl
jns
jp
movsl
cmpsb
pop
or
and
fisttpl
sub
pop
in
and
repz
push
push
fstpl
sbb
nop
lods
mov
stc
lods
icebp
addr16
sub
mov
in
pop
xchg
add
bswap
dec
pop
or
mov
nop
imul
pop
mov
mov
imull
mov
ret
mov
mov
cmpps
push
mov
dec
adc
mov
adc
push
fsqrt
or
daa
sbb
mov
dec
jno
xchg
imul
ficoms
test
adc
gs
and
mov
push
outsb
pop
jne
mov
mov
mov
jns
pushf
cld
push
iret
xchg
dec
jle
inc
imul
in
pusha
loop
dec
push
cld
dec
fs
gs
xchg
push
clc
mov
or
shlb
sahf
xchg
jl
stc
push
jmp
mov
gs
or
dec
out
or
sbb
negl
push
les
cmpsb
adc
outsl
mov
and
pop
xor
xchg
add
or
adc
pop
pop
push
lahf
jg
mov
xor
push
xor
jns
dec
jmp
xlat
data16
jecxz
leave
repnz
mov
pushf
push
popa
mov
mov
shlb
aam
leave
inc
lock
movsl
jmp
cmp
fists
les
or
sbb
sbb
jne
xor
jne
ror
inc
popf
mov
sub
call
leave
cmp
inc
scas
jg
imul
xchg
cmp
mov
push
pop
pushf
add
ds
cs
rcrl
push
fstps
into
fisttpll
int
mov
dec
mov
mov
out
dec
cmovp
subb
jmp
ret
stc
pop
and
aaa
movsl
ja
fst
clc
xor
xchg
adc
sbb
xor
mov
push
mov
pop
fisttpl
inc
or
pop
scas
das
arpl
das
sub
in
mov
or
cmpsl
mov
scas
pop
int
jp
lret
cmc
mov
fsubs
fisubl
inc
mov
movsl
decl
lods
nop
mov
push
cwtl
outsb
iret
inc
push
jle
movsl
insb
push
mov
jmp
jo
inc
outsb
sahf
fmull
jnp
shrb
int3
xor
lahf
lea
xchg
outsb
data16
xor
mov
mov
cmpl
push
mov
dec
out
jns
shrl
pusha
ds
inc
call
mov
aaa
enter
icebp
inc
jecxz
lea
push
xchg
xchg
and
movsl
rorb
push
icebp
mov
mov
jecxz
cmpsl
das
jns
mov
jmp
rolb
mov
inc
rcll
and
dec
dec
and
ficoml
negl
xor
push
sbb
mov
xchg
and
sub
mov
incl
mov
pop
sub
xlat
dec
xchg
sbb
int
out
xchg
mov
mov
xor
mov
icebp
xor
lods
xor
movsl
inc
jp
hlt
inc
je
cmp
or
sbb
fmuls
cmp
in
pop
push
sbb
push
inc
cltd
add
mov
xchg
cmp
cmp
mov
mov
stos
xchg
and
stc
js
push
outsl
jbe
ss
lods
dec
sbb
mov
jge
pop
fs
fmull
dec
dec
dec
in
addl
jg
es
or
mov
arpl
mov
popf
dec
push
je
sbb
in
aad
cwtl
xor
jecxz
orl
pusha
inc
lret
popf
mov
mov
cltd
push
add
filds
adc
sub
test
jg
dec
in
rorb
insb
push
jb
adc
and
mov
je
push
jle
or
pop
push
sahf
cmp
iret
pop
aam
pop
lock
push
push
fbstp
add
movsl
xchg
add
and
dec
data16
jl
sahf
pop
cld
or
jg
sbb
in
xchg
inc
scas
repnz
xchg
xchg
xchg
sbb
js
cmp
and
jae
mov
movsb
or
stc
pop
mov
rcr
hlt
mov
xchg
cltd
dec
jmp
xchg
fsubl
adc
stc
lods
adc
test
mov
test
mov
cmp
test
bound
nop
and
mov
mov
push
jns
and
test
pop
das
sub
cmp
sub
cltd
mov
cmpsl
and
in
or
into
sub
lcall
xchg
cmp
popa
jbe
adcl
dec
dec
jnp
pop
dec
push
sbb
add
pusha
and
int3
int3
clc
mov
out
scas
or
and
mov
push
mov
fildl
aam
cmc
add
cmp
xchg
aas
xchg
repz
push
mov
inc
and
jne
and
dec
pop
mov
jnp
ficoms
mov
dec
fstpt
push
mov
mov
jns,pn
leave
fstl
fidivrs
das
add
adc
out
std
or
cmpb
cmc
loopne
xor
out
push
out
mov
cwtl
out
je
mov
popf
aad
in
fistpll
pop
pop
stc
inc
sub
pop
das
lcall
loop
push
jae
adcl
and
inc
xchg
outsb
xchg
mov
sub
inc
aaa
gs
dec
push
jnp
mov
dec
pop
sub
add
ss
test
jle
dec
or
xchg
test
adc
push
lods
cmpsl
or
icebp
scas
shlb
into
dec
movsb
das
incb
scas
repnz
xor
xor
xchg
cmpsb
or
add
js
dec
push
jg
or
dec
inc
xchg
xchg
jne
mov
push
lret
or
jnp
mov
push
das
bound
cmp
gs
in
mov
out
cmp
nop
lcall
mov
cmp
rorb
repnz
mov
mov
scas
inc
and
cmp
stos
and
fsubs
clc
aad
add
icebp
push
add
cmpl
jmp
mov
jmp
iret
lret
inc
pushf
call
sub
hlt
sbb
dec
ret
cli
mov
std
pop
mov
add
das
movsl
pop
sahf
sub
ds
pop
aad
or
cltd
push
fildl
in
aam
loope
lock
in
ret
xchg
push
fsubl
movsl
stos
frstor
dec
sbb
jno
int3
adc
adc
mov
jb
aam
aam
xor
loop
sahf
ficompl
mov
lds
in
adc
add
mov
imul
and
lods
mov
mov
xchg
sub
lods
mov
pop
std
ret
or
or
add
mov
xchg
and
sbb
and
sbb
push
xchg
cli
dec
jo
push
ss
mov
cmp
das
mov
lcall
xor
sbb
add
sbb
in
cld
dec
repnz
dec
mov
lcall
mov
test
sahf
cwtl
mov
xchg
push
jno
movsl
aas
das
scas
push
jne
xor
xor
lret
mov
arpl
cmp
sbb
jnp
repz
xchg
mov
push
stos
sub
sub
dec
inc
and
in
out
mov
out
out
pusha
test
pop
xlat
out
dec
mov
out
out
sbb
push
jg
fucomi
mov
fisttpl
dec
frstor
or
jle
es
leave
pop
xor
xchg
in
mov
fistpl
insl
imul
sub
inc
cmp
fmull
stos
orb
sbb
cmpsb
add
data16
bnd
loop
ret
test
lea
iret
cmp
push
mov
sbb
jne
pushf
push
mov
mov
in
fs
jne
pop
push
cs
ljmp
mov
push
xchg
out
sub
add
or
xchg
bound
leave
lcall
mov
js
sub
ja
jg
inc
push
pop
xor
cs
xor
lcall
dec
ljmp
mov
data16
jge
rolb
iret
addb
fs
mov
jnp
push
fstpl
lcall
mov
repz
or
std
mov
fnstenv
das
mov
sub
pop
les
int
loopne
xchg
xor
mov
fs
gs
jo
mov
sbb
jg
int3
mov
inc
notl
adc
loope
out
test
adc
sti
out
call
and
fbstp
pop
push
adc
inc
sarb
push
pop
or
fistpll
ja
xor
mov
pop
xchg
jae
lret
iret
outsl
mov
xlat
cltd
pop
cmp
push
es
cmp
mov
cmp
lea
clc
jle
xor
scas
pop
xchg
cmp
xchg
imul
dec
popf
subb
push
xor
insb
addr16
shrl
pop
sub
dec
pop
mov
and
mov
add
adc
lcall
cmp
icebp
cmp
jmp
pmaxub
mov
mov
adc
jp
mov
or
daa
xchg
sbb
push
mov
or
cmpsl
sbb
xchg
xchg
dec
mov
iret
mov
stos
in
xchg
dec
mov
aam
in
pop
je
cmp
clc
mov
add
sbb
push
mov
push
into
add
pop
sbb
push
pop
and
and
lea
dec
inc
das
sub
mov
dec
xchg
cmp
jo
mov
and
mov
aas
jns
dec
cmp
push
inc
in
xor
movsl
movsl
testb
cmp
out
mov
fwait
js
mov
int3
into
out
sbb
mov
pop
adc
jl
inc
xor
outsb
push
lahf
sti
jb
and
in
sbb
ss
cmp
xlat
iret
pop
std
aas
test
cli
lretw
mov
xchg
out
orl
xchg
into
aaa
ja
shll
jp
push
cli
gs
push
pop
and
orl
add
mov
loope
clc
push
push
mov
mov
insl
jl
jl
jmp
mov
cmpsl
out
in
or
and
lea
sbb
xor
mov
mov
add
shl
push
add
sub
xchg
mov
sbb
push
cwtl
add
cmp
pop
aam
pcmpeqw
fwait
rcr
push
int3
cwtl
les
mov
mov
pop
add
push
shr
bound
and
mov
jle
movsb
imul
jns
int3
mov
out
mov
pop
xchg
push
push
mov
int
bound
cmp
outsl
add
adc
out
and
loopne
sbb
popa
pop
jns
addl
mov
mov
sahf
sbb
mov
cmp
aaa
gs
xchg
cmp
cs
lret
adc
inc
or
rcrl
rcr
fwait
add
faddl
repnz
xor
inc
xor
mov
push
cpuid
mov
xchg
xchg
sbb
cltd
ss
lds
xchg
and
scas
push
lods
jecxz
push
in
aad
xchg
out
cmp
loop
push
inc
pushf
repnz
sbb
pop
dec
mov
cld
aas
aad
movsb
push
fs
jecxz
out
test
mov
push
insb
xchg
jae
adc
je
xor
in
adc
js
std
imulb
test
jle
mov
dec
cmpsl
insb
cli
pop
mov
push
mov
ret
je
std
mov
shrb
cmp
outsl
inc
ficompl
jmp
scas
push
cltd
je
mov
dec
test
mov
cli
aas
push
test
add
push
arpl
cmp
cmp
out
pop
fcoms
pop
rcrb
out
arpl
outsl
test
movl
rorb
int
jbe
push
loop
mov
lds
mov
jae
sbb
xchg
into
lcall
inc
lret
es
test
push
push
cmp
lods
les
iret
jl
pop
xchg
rcrb
in
aam
sub
dec
sbb
insl
sbb
movsl
jecxz
mov
push
call
iret
mov
fistl
add
in
cli
les
inc
sub
dec
xchg
je
test
out
and
loope
rclb
jge
arpl
mov
push
fnstsw
jae
call
fcmovnb
push
sub
shrb
arpl
add
outsl
inc
scas
mov
lcall
sbb
cmc
xchg
adc
adc
loopne
ret
shll
cmp
sub
mov
jae
cmpsb
inc
jne,pn
clc
inc
aas
lahf
test
push
loop
inc
push
les
xlat
mov
sar
cmpsb
iret
push
jmp
lahf
jg
rcrl
aaa
cltd
mov
into
jae
xchg
popf
scas
sub
or
jbe
es
ljmp
push
out
xchg
jecxz
neg
cld
int
pop
insb
inc
pusha
dec
sbb
insl
cld
lock
int
je
outsb
hlt
and
popa
aas
fistps
push
movsl
es
mov
gs
in
xor
mov
xor
jne
test
jns
clc
mov
unpckhps
pop
and
testl
push
jae
shlb
or
lret
push
imul
addr16
sbb
mov
xchg
iret
sti
ficoms
jp
lds
mov
fwait
inc
add
cmp
movsb
mov
enter
loopne
mov
jne
pop
lock
cmp
cmp
cmc
test
rorl
sbb
mov
pop
inc
inc
sti
in
push
jbe
movsb
scas
adc
ss
xchg
daa
stos
adc
negl
test
sub
out
pop
es
xor
cltd
xchg
rolb
outsb
pop
dec
out
mov
call
fisttpl
gs
arpl
int3
ljmp
xor
ds
cmp
std
cwtl
dec
and
xchg
dec
testl
mov
dec
shrb
pop
lock
data16
sbb
loopne
mov
sbb
out
lahf
sbb
int
jb
rcll
popa
rcl
das
jmp
sub
cmc
dec
sbb
cmp
sub
in
sti
fcompl
push
outsl
push
ret
mov
push
iret
movsb
add
xchg
lret
jecxz
cmp
shlb
sub
pushl
pop
in
jno
add
adc
and
ss
jg
lret
cmp
or
mov
cmp
xchg
cmpsb
xor
sahf
icebp
cmp
nop
hlt
out
jb
push
cmp
cld
dec
mov
xchg
fmuls
mov
fs
push
rorl
ds
sbb
push
pop
sub
sub
dec
mov
addr16
mov
loop
in
mov
or
sub
outsb
sti
sub
xor
or
xor
xchg
cmp
jecxz
jae
sub
lcall
fwait
inc
mov
xor
push
or
add
push
and
lea
jae
push
and
mov
insl
movsb
jp
outsb
cld
lea
cmpl
push
inc
or
movnti
pop
or
fadd
notl
adc
push
dec
fs
xchg
cwtl
cld
repnz
ret
adc
jo
rcrb
and
leave
jmp
repnz
and
hlt
aad
mov
jo
push
and
jo
adc
sahf
inc
adc
and
jl
movsl
mov
shrl
js
scas
mov
clc
inc
cli
out
fisubrl
and
cmp
aad
rclb
test
inc
fldl
mov
push
cli
inc
jae
mov
int3
call
lret
dec
inc
hlt
sub
or
or
push
cmc
int3
sub
add
mov
add
outsb
pop
add
sub
xchg
fmuls
aaa
mov
popa
add
adc
divl
test
xchg
jnp
es
cmpsb
cmpsl
add
int
mov
repnz
mov
push
das
dec
mov
mov
push
pop
sbb
sbb
jl
pop
dec
mov
aam
mov
pushf
mov
jl
xor
jns
add
push
pop
cmp
rcrb
ja
jno
in
repnz
sub
adc
sbb
adc
test
and
notl
pop
mov
out
sub
lods
push
inc
pop
xchg
xlat
adc
add
dec
pop
insl
cmp
and
xor
and
or
int3
jg
dec
int3
popw
int
mov
mov
jb
pop
xor
outsl
fidivrs
cmc
cs
mov
mov
or
imul
jecxz
jg
das
iret
arpl
push
aaa
rorb
enter
dec
fisttpl
push
dec
mov
mov
cmp
add
adc
outsl
aad
cmp
sub
stos
jnp
fidivrs
scas
subl
movsb
dec
cli
or
cltd
icebp
out
insb
lret
sti
loope
cmp
push
xor
xchg
jge
enter
sbb
popa
mov
jo
aaa
nop
fsubs
xchg
imul
push
and
cmc
outsl
pop
lods
pushf
mov
shl
dec
neg
mov
mov
das
inc
in
negb
enter
and
into
imul
pop
cli
popf
ja
mov
pop
pop
pop
out
bound
cld
not
push
in
adc
cwtl
bound
cmp
nop
cmp
test
pop
pop
out
test
sti
jp
lods
jbe
hlt
xor
and
jnp
lods
mov
xchg
lcall
xchg
sbbb
add
xchg
mov
dec
lds
sbb
mul
cmpsb
jecxz
lods
hlt
test
jecxz
dec
mov
or
imul
aaa
js
mov
sbb
xor
push
out
dec
mov
pop
jne
aaa
dec
test
lods
xor
pop
mov
pop
fimull
les
mov
mov
and
xchg
pop
lahf
xor
loop
mov
add
cmc
pop
pop
movsb
call
sbb
inc
push
js
cltd
fnstsw
xchg
push
dec
dec
icebp
imul
jne
push
jg
loope
push
add
sbbl
int
jnp
nop
push
mov
add
mov
adc
arpl
mov
and
divps
js
aam
lret
iret
push
and
pusha
ret
sub
iret
mov
aaa
push
and
adc
shl
nop
in
negb
and
and
arpl
rolb
pop
ljmp
ss
push
mov
xchg
jbe
or
out
sahf
add
xor
or
fwait
sbb
inc
lret
aas
and
js
push
mov
test
imul
jmp
push
popf
xor
call
outsl
lods
add
in
sub
mov
ret
adc
je
xchg
decl
push
repnz
leave
popf
jg
idivl
test
fcmovu
adc
stos
imul
loopne
xchg
stc
cmp
jnp
stos
nop
icebp
into
or
adcb
es
adc
sub
add
mov
adc
jp
fwait
or
enter
and
filds
aaa
call
aaa
cmp
or
or
inc
arpl
xchg
rorb
mov
pusha
fiadds
hlt
dec
mov
dec
fidivrs
pop
sar
xor
in
xchg
xor
pop
outsb
adc
jl
mov
pushf
je
mov
xchg
jge
cmc
sbb
pop
lods
out
mov
sbb
movsb
aaa
leave
add
incl
jle
and
pop
shlb
aad
sbb
jle
add
inc
lea
cli
mov
push
and
movsb
pop
imul
pop
lret
rcl
inc
lods
or
push
jecxz
sbb
cmp
sub
mov
nop
sbb
in
jb
jb
push
mov
jecxz
fsts
cld
and
xchg
arpl
mov
rcrl
dec
or
adc
rep
cmpl
xor
xor
xor
jmp
cmp
filds
mov
xor
or
mov
dec
and
push
aam
das
insb
xchg
mov
pop
or
int3
and
inc
js
adc
sbb
repz
push
push
scas
jmp
pop
mov
cmpsl
ja
ficompl
out
push
lcall
xchg
xchg
mov
lods
xchg
pop
pop
xchg
sub
jnp
jns
stos
loope
push
test
les
loop
inc
cmp
xor
xchg
gs
cmpsl
loope
add
out
sbb
bound
sub
jl
mov
repz
nop
mov
ljmp
sbb
outsl
enter
mov
and
mov
mov
ret
iret
out
mov
lcall
out
stos
push
sub
jbe
mov
jmp
mov
stos
mov
in
fsubs
mov
icebp
sub
xor
sbb
adc
cpuid
bound
xor
dec
cmp
xchg
pop
xchg
js
les
push
nopl
nop
push
sbb
push
xor
bswap
or
jp
fmuls
arpl
hlt
jo
jae
daa
mov
dec
lcall
packssdw
lods
sti
pop
jmp
cmp
push
push
das
push
push
out
and
loopne
outsl
mov
rdmsr
cmp
das
shl
lret
stos
jp
sti
adcl
test
outsl
jl
xor
xchg
sub
sbb
in
fstl
xchg
jecxz
lock
hlt
idiv
push
ss
jo
pusha
pop
iret
add
outsl
adc
insb
jns
mov
sbb
mov
out
xor
cs
sarb
sbb
inc
pop
adc
xchg
dec
xchg
mov
aam
pop
repnz
jp
sub
rcr
rorb
in
inc
cwtl
lds
test
and
jo
lahf
jge
inc
mov
popf
cmpsl
ds
jg
inc
add
aad
jae
daa
mov
fs
xlat
loop
sbb
shll
ljmp
or
lret
mov
push
cmpsb
dec
mov
pop
dec
push
divl
scas
mov
jmp
push
sub
mov
jns
adc
add
fimull
fldl
push
ret
mov
gs
aad
inc
cmp
loopne
out
xor
jo
lds
roll
popf
ret
push
rclb
stos
push
xchg
out
lea
adc
jns
jno
dec
jecxz
mov
pop
mov
xor
aas
fiadds
pushf
orb
lock
adc
in
xor
cltd
cs
movsl
mov
ret
divl
cmc
aas
cmpsl
call
lds
adc
mov
sti
outsl
cmpb
inc
xlat
push
or
adcb
xchg
adc
fs
icebp
test
out
and
popf
inc
pop
mov
mov
lret
sbb
sub
mov
mov
xor
inc
jb,pt
imul
mov
lret
mov
notl
xchg
mov
pop
sub
dec
sbb
imul
leave
xor
pop
cwtl
jns
sbb
enter
sbb
xchg
call
popa
cltd
adc
adc
dec
xchg
lahf
inc
and
sbb
push
mov
je
mov
and
and
xor
and
xor
mov
roll
inc
lcall
ss
insb
xor
dec
scas
shl
fwait
aas
popa
popf
outsb
mov
adc
mov
mov
sub
sbb
sahf
hlt
and
imul
push
lods
nop
cmp
fnstcw
sti
cmp
sub
iret
cs
pop
stos
popa
int
roll
mov
dec
test
popf
add
jge
movsb
sahf
sbb
dec
pusha
shl
lods
lret
pop
dec
sarb
xchg
xor
jae
mov
pusha
std
repz
push
and
je
and
jmp
andl
push
das
inc
add
addr16
aaa
js
adc
movsb
rorl
lcall
sbbl
jle
dec
cmp
mov
push
push
xor
mov
out
pop
icebp
xchg
nop
popf
sarl
imul
call
add
mov
pop
inc
pop
lcall
jge
scas
fnstenv
pop
or
test
jbe
daa
jmp
int
dec
pop
sub
mov
mov
xchg
mov
or
stc
into
repnz
imulb
dec
sub
jg
fwait
sahf
ljmp
daa
iret
sbb
inc
loop
dec
pop
adc
test
cld
gs
adc
clc
dec
mov
ss
mov
pop
fs
inc
cwtl
shll
pop
rolb
lock
fs
ljmp
jecxz
int
and
jecxz
sub
and
push
sbbl
cmp
enter
xchg
hlt
sti
lds
imul
ret
aam
add
iret
adc
push
outsl
scas
ret
dec
ja
sti
insb
movsl
arpl
mov
jno
test
out
addb
mov
movsb
movsl
mov
js
mov
xor
push
cmp
cltd
pop
cmpsb
out
sub
sub
cwtl
pushf
outsl
fldcw
xor
sub
aas
and
cmp
xor
and
push
adc
cltd
dec
movsl
push
das
inc
add
mov
push
mov
jp
jl
push
inc
cmp
arpl
inc
or
push
pop
adc
in
enter
mov
mov
imul
add
xor
and
ffree
repnz
outsl
lret
sbb
mov
dec
fists
dec
adc
push
outsb
int3
jle
es
and
jl
mov
out
jecxz
mov
push
lods
pop
mov
mov
mov
in
add
jle
fwait
mov
je
inc
jb
add
out
or
dec
lcall
out
insb
or
dec
dec
pop
cmpl
jb
push
cmp
push
mov
sub
sbb
aam
je
mov
out
mov
arpl
scas
jp
jp
sub
inc
xorb
sub
or
xor
pushf
iret
sub
sub
cmp
or
xor
ret
push
jle
lret
cmc
aas
leave
jp
pop
add
outsl
dec
leave
gs
ret
rcrb
popa
inc
lcall
icebp
test
push
insl
inc
dec
cld
mov
insb
dec
cmpsl
and
daa
jle
xchg
add
pop
mov
sub
push
mov
lods
sahf
mov
xlat
aad
fcoms
cltd
xchg
out
xchg
mov
push
fnstcw
int3
xchg
sbb
mov
sbb
cltd
and
test
cmp
lock
lock
clc
insb
jnp
ficoml
jne
lock
cmpl
popf
sahf
add
sub
jle
sub
sub
pop
jmp
cld
cltd
movsb
xor
nop
cmp
cld
pop
mov
bound
imul
inc
clc
call
in
hlt
jb
inc
sub
pop
dec
sbb
je
mov
inc
or
dec
pop
xor
out
adc
jnp
mov
sbb
movsb
lret
mov
cmp
xchg
push
orl
sbb
xchg
stos
sub
jmp
mov
std
sbb
xchg
adcb
or
inc
cmp
push
std
gs
test
pop
push
push
add
mov
mov
jno
xchg
stc
aam
aad
bound
leave
push
aad
mov
imul
rolb
cs
in
cmp
in
ret
es
inc
clc
sbb
test
inc
les
mov
xor
sbb
push
lret
xor
adc
lahf
out
insb
daa
push
add
lock
inc
dec
push
push
mov
repz
fdivrs
imul
sbb
xchg
js,pn
out
adc
in
sub
jge
adc
add
cmp
jl
and
loopne
call
xor
lds
inc
out
out
out
push
xor
cmpsl
stc
lret
pop
test
dec
repz
cmp
stos
in
in
xor
add
pop
repz
mov
jge
fidivs
xchg
subl
sub
add
in
push
mov
mov
push
lds
in
push
movb
ljmp
popf
rclb
push
imul
mov
dec
popa
push
xor
pop
inc
sub
aad
call
test
sbb
dec
or
sub
add
gs
std
xlat
inc
out
enter
bound
push
mov
mov
xchg
jg
or
xchg
mov
enter
shrl
sbb
push
push
adc
sbb
and
mov
xchg
fistpll
push
cmpsb
sbb
cmp
fwait
mov
cmpsb
testb
mov
enter
outsl
in
mov
mov
adc
pop
pop
in
mov
sub
xor
jb
sbb
cli
pushf
scas
je
fdivl
shr
inc
sbb
push
fs
movl
lret
or
adc
cmc
int3
cld
xlat
xchg
clc
dec
insl
dec
jb
push
xor
js
shl
mov
ffreep
fcomi
xchg
jne
cmp
xor
inc
push
movsl
outsb
sete
insb
loop
push
sbb
xchg
insb
cmp
addb
out
add
ret
aaa
sbb
cmp
hlt
pop
mov
adc
pop
fwait
enter
sbb
les
sub
leave
push
ja
dec
or
loopne
sbb
sahf
dec
jo
ja
cmp
cmpb
aam
fstl
xor
inc
push
iret
out
adc
sahf
stos
int3
loope
jmp
cmc
sarl
xor
pusha
inc
out
add
jmp
ljmp
xor
or
sub
or
xchg
ss
pop
push
push
sub
jmp
inc
aas
jmp
in
xor
jmp
mulb
mov
cmpsl
cmpsl
push
add
push
fyl2x
dec
fldcw
pop
out
cmp
popa
mov
enter
jbe
dec
mov
ds
insb
xor
loop
stc
xor
dec
sbb
adc
pop
dec
fistps
or
sbb
push
mov
loop
xchg
stos
sbb
leave
in
cltd
and
loopne
clc
jle
pop
sbb
stos
mov
arpl
add
add
push
xchg
push
dec
lods
iret
fsubl
and
int
mov
add
xchg
stc
cs
lea
fwait
pop
pop
movsl
jl
xlat
sbb
mov
jns
stc
loopne
jno
int
mov
addl
push
adc
mov
out
enter
aaa
xchg
ret
or
mov
sub
xchg
test
xlat
out
imul
daa
push
sbb
jp
mov
mov
cmpsb
stos
cmp
lahf
daa
bound
aaa
inc
stos
sbb
mov
dec
inc
pop
flds
mov
mov
jmp
cli
ja
xor
cmp
in
jp
cmpxchg
sarl
daa
ret
in
push
push
or
icebp
es
jns
call
xlat
pop
outsl
add
movsb
or
movsl
hlt
out
push
aas
adc
or
xor
xchg
scas
iret
lea
xor
adc
cli
sbb
movsl
cmp
fwait
pusha
es
mov
scas
sbb
mov
inc
and
mov
xchg
add
test
add
push
insb
push
stos
nopl
mov
pop
ret
imul
mov
shrd
cli
int3
cwtl
outsb
imul
xchg
and
xlat
lret
mov
pop
mov
jl
cli
and
fnstcw
fcmovnu
fsub
shlb
add
and
push
pop
inc
jb
outsb
insl
aaa
sub
mov
mov
mov
inc
cmp
loop
push
or
cwtl
sbb
ret
xchg
push
cltd
mov
push
jg
testb
sub
pop
push
push
ljmp
sti
testl
loop
sarl
jecxz
sub
xchg
dec
cmpsl
cld
inc
scas
je
sub
mov
or
loope
or
sbb
jno
idivl
mov
and
ss
fs
mov
push
push
outsb
stos
inc
mov
dec
insl
mov
movsb
je
dec
sbb
pop
roll
cmp
mov
stc
imul
bt
movl
aam
and
inc
mov
push
arpl
popf
inc
repz
push
mov
lods
dec
xorb
sub
clc
jo
lods
gs
jmp
ds
mov
cwtl
jmp
dec
inc
xchg
cld
insb
mov
sbb
add
and
iret
les
xor
std
neg
mov
mov
cmc
mov
popa
mov
dec
cmpsl
pusha
mov
sbb
pop
ds
jecxz
cmp
xor
in
sub
cmp
ficompl
or
inc
aad
lods
ljmp
fidivs
jle
mov
mov
or
pop
dec
popf
ds
mov
cmp
in
cld
inc
push
pop
jno
push
sti
int3
add
push
cmp
cmc
or
jb
bound
repnz
jge
mov
adc
ss
loope
aad
mov
ss
jge
in
or
mull
fmuls
mov
scas
pop
push
push
es
movsl
xor
mov
push
je
outsb
scas
stos
fbld
inc
jbe
ret
sbb
cmp
dec
xor
shlb
cwtl
scas
inc
rcrb
bswap
add
cs
aas
cmp
push
or
lcall
mov
out
loopne
test
push
cmp
inc
nop
cwtl
mov
xor
cmp
nop
sbb
ljmp
imul
pop
jne
testl
lods
insb
test
xchg
lods
push
cwtl
xchg
xor
add
repz
mov
mov
lods
loopne
jmp
pop
loop
in
in
dec
aaa
pop
jl
jge
test
imul
rcl
adc
gs
das
and
imul
ds
jb
cmp
cmp
mov
dec
jmp
xchg
insb
adc
nop
pop
sbb
cmp
arpl
add
mov
mov
lds
in
insb
pop
in
and
cmc
cmp
mov
adc
xor
push
mov
pusha
dec
aas
popf
or
xchg
out
test
mov
int
mov
outsb
sub
ds
xchg
ljmp
pop
mov
sub
dec
jne
jae
mov
jmp
xchg
xor
dec
ljmp
dec
fwait
test
std
cmpsb
pop
xchg
psrad
stos
and
sub
jb
ja
or
push
xchg
fwait
pop
out
jno
mov
lock
jl
or
dec
out
dec
push
adc
xor
push
push
and
fistl
jecxz
scas
jbe
jne
aaa
mov
ret
or
sub
aaa
sahf
dec
and
push
in
add
dec
hlt
jno
fmul
ljmp
mov
dec
mov
addr16
or
in
jbe
imul
push
xlat
loope
xchg
jb
mov
ljmp
sbb
sub
jb
popf
jae
xchg
xor
add
scas
jp
test
enter
fcmovnu
push
out
push
dec
daa
mov
dec
add
jbe
mov
sub
fnstenv
lock
popa
das
xor
jmp
sbb
rolb
sbb
aaa
and
mov
punpckhbw
add
fcoms
pop
mov
sbb
inc
pop
pop
pop
loopne,pn
ds
xor
stos
repnz
daa
or
out
ss
mov
sub
adc
rcll
out
pop
push
filds
cmp
mov
je
mov
mov
mov
pop
xchg
mov
mov
xchg
int
mov
sbb
push
inc
mov
repnz
pshufw
sbb
adc
repnz
mov
jp
es
xor
adc
and
std
sub
jmp
fsubr
stos
push
push
aaa
adc
cmc
add
xor
das
push
mov
dec
and
add
sub
fstpl
sbb
push
adc
cmpsb
mov
neg
cmp
cmpsl
cmpl
outsb
push
cmpsb
dec
outsl
stos
dec
pop
in
mov
ret
and
push
pop
flds
inc
pusha
push
jb
pop
and
mov
inc
jbe
js
push
mov
aad
sub
xchg
filds
xor
sub
jno
dec
add
adc
sub
jp
or
mov
lahf
inc
incl
jecxz
pop
xchg
js
cmp
mov
lahf
int3
sub
ljmp
repz
adc
inc
adc
loope
mov
ret
xchg
push
xchg
mull
dec
lahf
insb
xor
lods
fldcw
nop
sub
cmpsb
adc
repz
loope
jbe
jg
loope
xor
push
imull
and
push
push
or
dec
mov
cmpsl
out
dec
sti
in
mov
or
lret
xchg
push
fsts
fldl
xchg
js
mov
push
mov
ret
loope
mov
ds
xor
hlt
cmpsb
adc
push
adc
or
mov
in
adc
pop
sub
adc
sbb
rorl
inc
xor
mov
pop
loope
cli
cld
or
pusha
lea
push
push
std
lea
mov
inc
add
sbb
inc
out
xchg
stos
mov
stos
adcb
dec
push
jp
sub
sahf
mov
dec
jo
inc
inc
mov
mov
mov
and
test
mov
arpl
in
incl
insl
adc
stos
or
add
repz
push
addr16
not
add
daa
imul
in
test
fidivs
xor
pop
mov
loope
cld
and
add
jb
xchg
xor
add
push
insl
loopne
fsub
pop
and
pop
inc
mov
cmpsb
bound
add
scas
pop
in
dec
xchg
push
push
push
in
je
lds
mov
out
jmp
jns
jg
xor
cmpsb
call
in
arpl
pusha
xor
sahf
pslld
gs
mov
and
jmp
push
out
and
xor
das
fidivrs
lods
push
lods
xor
sbb
jne
add
rcrb
sub
stc
add
add
push
pop
jg
stc
dec
pushf
add
xchg
nop
popa
mov
fucomi
sti
lods
cmp
mov
mov
loopne
sbb
lret
fwait
into
repz
cmpsb
push
pusha
cwtl
push
mov
jbe
adc
popf
mov
cmp
dec
mov
out
cmp
nop
jle
outsb
fs
adc
jle
shrb
addr16
stos
xchg
mov
mov
out
cmc
test
rorl
adc
jnp
and
outsb
lea
out
loope
pop
in
cmpsl
mov
jns
dec
call
loope
in
pshufw
and
lea
iret
sahf
adc
rorb
aam
rcr
xlat
in
ljmp
or
or
scas
dec
dec
pop
fsubrl
int
and
cmpsl
ret
outsl
add
add
fwait
mov
pop
or
test
int
shrb
add
or
clc
loopne
shlb
imul
cmp
pop
cmpsl
cwtl
iret
dec
add
mov
sbb
pop
mov
adc
xchg
fucomi
or
and
pop
ret
push
cmpl
outsl
cmp
inc
aad
jmp
mov
aas
je
ja
loop
jl
sub
dec
and
mov
xor
jmp
add
rcl
push
pop
rolb
jno
jae
aaa
lahf
adc
in
pop
dec
in
clc
cmp
out
mov
stos
aad
dec
ret
mov
iret
xchg
sti
lret
xor
loopne
incb
add
xchg
ret
loop
in
jecxz
push
fmull
or
and
lods
out
cmpsb
ljmp
inc
adc
fstps
pop
xchg
sbb
addb
jno
sbb
lock
das
xorl
pusha
int3
out
sbb
mov
jmp
test
insl
jo
in
insl
inc
sub
cmc
push
and
inc
rorb
inc
call
aas
outsl
mov
aaa
push
mov
fmull
push
ss
nop
jne
dec
call
dec
int3
mov
mov
jne
mov
leave
push
scas
push
push
icebp
adc
insl
call
fwait
std
pop
cmp
jo
int
push
lds
popa
inc
daa
fdivrp
xchg
lret
or
cld
repz
in
ret
inc
push
xchg
jne
and
sarl
cmp
loopne
mov
and
out
jo
popa
movsb
out
hlt
push
sahf
and
rol
mov
add
adc
inc
pop
ret
mov
lret
mov
jbe
loopne
adc
add
dec
or
test
rcrb
lods
add
inc
jb
clc
mov
movl
insb
pop
lret
mov
push
outsb
and
adc
mov
cmc
lock
lret
dec
dec
mov
xchg
shlb
in
cmp
mov
inc
ss
rorl
dec
fisttpl
jbe
dec
or
xor
lahf
mov
cli
aaa
jle
mov
les
fists
movsl
rorl
aaa
jge
jno
add
mov
and
lock
mov
push
neg
lods
sarb
data16
adc
leave
xor
mov
cltd
push
mull
into
cmc
pushw
cli
popa
out
cli
push
mov
out
aad
dec
les
lahf
fidivrs
xlat
xor
ret
or
dec
sbbl
pop
cmpsb
inc
and
in
rorb
daa
mov
sti
mov
lea
mov
add
repz
inc
lock
push
mov
test
mov
fsubrp
cmp
out
mov
lret
sbb
mov
stos
sbb
repnz
es
mov
cld
pop
mov
pop
sub
cmpb
popf
es
mov
xchg
jmp
jno
ret
xchg
outsl
aad
pop
bound
pop
xor
add
adc
xchg
mov
dec
xchg
ljmp
fcmove
mov
fistpll
mov
orl
flds
repz
movb
in
mov
rcrb
xchg
jmp
fstl
sbb
inc
dec
xchg
roll
nop
lcall
inc
add
jno
lds
push
lahf
pop
movsb
mov
cmp
xchg
popa
mov
adc
fstp
push
cmpsb
mov
add
pop
add
cmpsl
sub
mov
int3
out
hlt
xchg
rol
shrl
es
mov
push
add
xorb
out
lret
in
xor
or
ss
mov
test
fwait
out
aad
mov
cs
addr16
insb
add
adc
pop
outsb
jmp
jbe
int
in
test
push
jmp
cmp
and
mov
movsb
rcrb
push
shrb
arpl
test
out
ret
dec
cwtl
in
push
enter
push
pop
xchg
clc
push
lock
and
push
sub
mov
leave
movsb
notl
mov
pop
fcompp
repz
mov
ret
insl
jg
xchg
stos
incb
dec
es
arpl
outsb
aad
mov
jle
test
add
sub
sbb
xchg
pop
les
mov
stc
push
or
jno
mov
sti
push
sbb
movsl
cltd
xor
mov
fbstp
out
push
push
cwtl
test
lods
jge
imul
ljmp
pushf
call
in
jecxz
insb
aaa
in
fstl
das
pop
lods
xchg
adc
rolb
push
push
xor
jno
aaa
fadds
jge
dec
mov
add
sbb
imul
mov
mov
xor
mov
jmp
hlt
pop
add
cld
daa
gs
sub
lret
andl
pop
adc
xchg
sarb
adc
aaa
sub
mov
push
mov
call
mov
cmpsb
repz
xlat
fisttps
xchg
lea
push
mov
lock
test
push
loop
inc
mov
jnp
pushf
sub
push
daa
inc
mov
sbb
xchg
insb
xchg
out
adc
add
adcb
aaa
out
ljmp
sub
imul
in
std
stos
outsl
mov
mov
jecxz
rcll
lock
adc
add
push
jecxz
pop
shll
fbld
add
cltd
add
fisubl
mov
icebp
cmp
popa
push
dec
dec
or
adc
pop
das
adc
add
jp
andl
adc
testb
xchg
imul
xchg
jl
pop
xchg
push
lock
sbbl
test
xor
cwtl
push
dec
mov
jne
push
aas
pop
add
aad
mov
fwait
cmp
jbe
pop
rolb
clc
arpl
or
add
push
mov
out
stc
and
popa
or
jns
push
add
out
mov
add
sar
je
xor
std
mov
sti
inc
fbstp
jb
mul
dec
dec
mov
jne
and
ficoml
stc
pop
mov
inc
or
or
push
push
lock
jecxz
mov
arpl
call
add
and
cli
jge
adc
sahf
mov
outsb
sahf
add
bound
in
data16
mov
and
dec
or
ds
add
sub
shrl
push
arpl
into
push
xor
or
mov
cwtl
mov
xor
ret
inc
mov
int3
mov
es
insl
cltd
xor
loopne
in
rcrl
xchg
jbe
sbb
clc
xchg
or
bound
rcll
mull
lock
ret
lcall
outsb
je
cmp
addr16
jae
add
adcl
xchg
pop
mov
icebp
bound
inc
or
and
push
and
mov
mov
out
rol
sbb
xchg
push
int
and
and
and
push
jl
je
shrb
and
shrd
adc
pop
inc
push
jp
push
pop
fcompl
jle,pt
int3
inc
inc
pop
sub
aas
rolb
and
and
mov
push
jbe
xchg
push
mov
clc
scas
aas
sub
jns
mov
pop
loopne
test
xchg
stos
fs
stc
xchg
loop
xorb
add
lret
dec
fldcw
lret
call
jg
icebp
pop
jg
push
aad
sub
jmp
les
pop
insl
iret
pop
sti
in
stos
inc
push
roll
jl
cli
es
inc
dec
mov
lret
xor
ret
sub
push
inc
enter
mov
fsts
push
psadbw
adc
insb
mov
movsb
mov
es
xchg
filds
rcrl
popf
adc
dec
fwait
ja
ficomps
outsl
jns
movsb
push
push
sub
cmp
inc
pop
je
test
sbb
stos
add
cmpsl
out
push
clc
mov
pop
adc
lret
and
push
inc
pop
mov
mov
sub
insb
push
jg
test
insl
push
shrl
push
and
daa
in
add
or
and
dec
xchg
or
in
js
lahf
push
in
sbb
int
jo
inc
jmp
pushf
mov
int3
add
xchg
icebp
clc
ja
dec
add
dec
adc
sahf
lds
jecxz
sub
adc
jl
xor
inc
add
xchg
jo
xchg
stc
and
popa
sub
shl
in
xchg
fs
fisubrl
mov
dec
dec
test
add
jns
push
adc
inc
and
cltd
pusha
addr16
jae
testb
or
xchg
pmaxsw
push
sub
dec
xor
mov
pushf
dec
mov
aas
and
adc
imul
lods
pusha
push
stos
loope
sbb
mov
je
cmpsb
js
out
cmp
leave
xchg
andl
sahf
cmc
test
or
test
mov
in
mov
or
mov
outsb
pop
xchg
and
faddl
notl
aad
cmp
imul
lods
imul
xor
and
push
sarl
and
jb
andl
cld
loop
sbb
sub
push
add
ljmp
pop
mov
lahf
repnz
testl
mov
xor
rcl
arpl
mov
mov
shl
cmp
in
mov
test
mov
iret
jge
pop
push
out
mov
insb
stos
mov
aam
pusha
jb
arpl
dec
out
and
pop
push
mov
outsb
push
int
sbbb
movsl
test
xchg
cmc
mov
push
jge
xor
movsb
push
cmp
push
xor
inc
out
cs
in
dec
out
push
and
fdivrs
fsubl
ss
add
enter
inc
inc
cltd
ret
push
outsl
fildl
inc
test
out
dec
icebp
jecxz
movsl
mov
jno
js
cmpsb
xchg
push
add
sbb
aad
mov
dec
or
roll
jecxz
and
push
fsubr
mov
out
leave
pop
push
pop
fidivrs
push
gs
adc
pop
pushf
jae
or
mov
cmp
sbb
imul
pop
out
jne
inc
es
test
lahf
xor
ja
popf
iret
add
aad
cld
xchg
adc
dec
arpl
je
ds
rcl
clc
adc
addr16
adc
adc
dec
dec
adc
outsb
mov
add
loope
je
adc
jnp
pop
or
pop
js
and
xchg
sbb
ret
data16
push
adc
notb
sbb
outsb
aas
adc
scas
or
mov
mov
lods
push
push
sub
and
pop
adc
push
xchg
dec
lods
cmpsl
jp
mov
test
mov
mov
xchg
mov
sbb
sub
xor
cmpl
push
jg
in
mov
movsb
fwait
imulb
sti
pop
and
dec
fistps
cmpsl
pop
sub
jo
jle
jno
loope
movsb
test
outsl
cld
dec
addl
lods
add
add
cwtl
add
mov
mov
pushf
shl
aas
ss
inc
jmp
pop
ss
xor
push
lods
sbb
pushl
or
in
cmp
add
pop
ja
stos
icebp
mov
sub
lcall
push
cmp
pushf
mov
push
mov
mov
jl
std
pop
mov
mov
push
xor
and
push
pop
adc
inc
inc
fsubrp
dec
dec
clc
mov
xchg
loopne
fcomps
lahf
scas
outsl
push
mov
mov
pop
iret
stos
sahf
mov
mov
push
or
pop
push
push
xor
adc
inc
sub
mov
and
pop
movsl
cmp
and
cmp
xchg
call
leave
stos
add
data16
pushf
cmp
or
aam
mov
out
lock
addl
xchg
scas
es
out
movsb
jno
dec
imul
cmc
jne
cmp
and
mov
pop
testb
mov
push
pop
mov
push
popa
jmp
xchg
daa
test
jle
push
adc
rorl
mov
jecxz
cmp
subl
xchg
and
imul
ljmp
push
mov
cmpsb
orb
outsl
jmp
cs
stos
ffreep
lahf
popf
jno
ficoml
inc
jg
cmp
xchg
pushf
and
cmp
cs
loopne
lds
sbb
mov
cmp
mov
mov
int3
fwait
push
subb
nop
xchg
or
jne
test
xchg
sbb
pop
ds
or
repz
dec
mov
je
xlat
lret
and
push
int
sarb
stos
xlat
test
sub
xor
gs
ss
mov
pop
push
sub
xor
repnz
mov
pop
jl
mov
in
sbb
popa
sahf
add
cmp
pop
lea
cld
dec
bound
mov
mov
sub
les
stos
sub
add
fcmovb
sbb
out
add
fucomp
fistpl
orb
cltd
adc
mov
cmp
push
jg
addr16
dec
jl
sub
add
cmpl
cs
dec
push
nop
stos
test
iret
loop
fdivr
xchg
sub
fsubs
dec
add
test
or
adc
add
or
mov
int
pop
cli
pop
scas
and
rorb
jno
jae
fnsave
pop
add
arpl
and
mov
ficomps
inc
and
imul
aaa
stc
jno
aas
mov
bound
fcompl
out
arpl
and
dec
lret
pop
arpl
sbb
xor
loope
pop
sbb
cli
cld
lahf
jmp
call
mov
xchg
and
out
dec
loopne
add
nop
xor
addr16
inc
fsubr
mov
jno
and
pushl
push
cmpsb
adc
aad
pop
push
lret
dec
cld
inc
mov
or
push
xor
dec
sti
and
gs
sub
pop
in
sbb
and
inc
push
lods
xchg
movsb
insb
mov
pop
mov
mov
sbb
and
mov
outsb
push
sbb
imul
insb
or
add
xor
mov
fmuls
iret
sti
cmp
jae
dec
or
sbb
cmp
mov
jo
std
test
sbb
mov
xchg
pusha
mov
mov
ljmp
cmp
das
and
imul
out
vminss
jp
pop
mov
push
aad
and
lods
adc
jae
dec
push
into
fimuls
xchg
xchg
push
mov
mov
jmp
shlb
stos
jb
aam
jecxz
lods
sbb
jg
cmp
adc
and
sbbl
mov
repz
int
adc
sbb
or
not
push
out
insb
loopne
pop
aam
inc
int3
dec
repz
lds
call
mov
pop
push
lret
out
call
std
jns
mov
clc
fwait
add
daa
lds
xor
lcall
sbb
lcall
pop
and
out
iret
in
ss
mov
xlat
aas
cmc
scas
push
aam
dec
int3
and
push
jns
xchg
cmp
mov
imul
fildl
sub
xchg
inc
les
pushf
and
cwtl
pushf
xchg
rcr
mov
test
iret
cmc
pop
movsl
arpl
pcmpgtb
mov
dec
sub
xchg
sub
lock
rolb
push
pop
cli
xchg
pop
dec
add
lods
ljmp
popa
jl
dec
mov
push
jg
mov
rcrl
dec
adc
mov
jmp
jo
movsl
movsb
clc
jmp
shll
sub
jl
inc
sti
aam
mov
add
dec
xor
out
repz
lods
call
cmp
cltd
loopne
xor
test
movsb
or
mov
fimull
imul
mov
and
call
in
cmp
out
clc
in
push
pop
or
mov
sub
int3
jae
add
inc
push
adc
xchg
rorb
hlt
shlb
cmp
mov
pop
inc
xor
xchg
dec
out
cli
in
sti
pop
out
mov
arpl
xor
adc
cmp
adc
pop
fildl
adc
popf
pop
cmp
jno
jns
cltd
lret
std
out
xchg
jge
dec
xchg
aaa
ficompl
and
ds
pop
jle
outsl
adc
gs
clc
ficomps
push
push
popa
adc
dec
leave
aas
add
pop
xor
sarb
xchg
xchg
sahf
mov
test
pop
mov
pop
push
in
sti
sub
push
movsb
and
fwait
cmpl
out
jno
xchg
adc
xchg
insb
jb
push
fidivs
lods
stos
out
mov
pop
jge
push
loope
rclb
pop
jae
bswap
dec
loop
cmp
inc
jnp
sub
xchg
jg
ja
push
pop
jae
xor
ljmp
gs
mov
mov
add
add
icebp
out
xlat
dec
jmp
pop
loopne
jo
jno
add
je
cmp
and
and
cmpsl
pushf
cltd
movsl
cmp
mov
mov
and
fwait
popa
daa
sti
sbb
cltd
mov
add
xor
dec
sbb
cmp
cmp
rol
jg
inc
insb
mov
mov
jl
lods
jne
mov
or
insb
and
cmp
fisttpl
in
scas
es
in
aaa
dec
push
lock
outsb
movsl
cmp
xchg
pop
pop
xchg
lods
push
or
mov
sub
mov
jne
xchg
jo
xchg
jge
je
mov
popf
xchg
lods
mov
dec
test
xchg
inc
sub
xchg
ficomps
jno
cltd
jae
in
xchg
subb
and
xchg
pop
push
mov
adc
xor
arpl
lea
inc
hlt
sub
cmp
sti
push
cmp
mov
or
xor
jne
sub
je
push
mov
mov
inc
cmp
ret
in
and
cmp
movsl
dec
xor
xor
rolb
or
int3
ss
dec
es
xchg
repnz
jb
neg
mov
pop
lret
mov
adc
mov
mov
mov
sub
jp
repnz
mov
and
das
xor
pop
jne
mov
rcrl
ljmp
negb
xchg
decl
jne
dec
adc
mov
test
aaa
rclb
pop
xchg
jle
jne
stos
xor
dec
out
jne
xor
lods
out
lret
ljmp
xchg
dec
jle
mov
mov
addb
mov
sbb
fildll
xchg
mov
comiss
ljmp
int3
out
stc
xor
jnp
and
icebp
loope
pop
test
cmc
or
mov
sbb
std
repnz
mov
idivl
cli
pop
adc
inc
aad
sbb
addb
and
popf
faddl
fnstcw
loop
and
mov
xor
int3
jg
loope
fdivrl
or
testb
into
inc
test
jecxz
jno
sbb
add
xor
sbb
xor
lcall
inc
sbb
add
sbb
push
mov
lods
mov
cmp
movsb
xchg
xor
mov
cmpsl
mov
sbb
pop
mov
add
push
aaa
xor
dec
mov
and
cwtl
sub
in
lea
sub
andb
icebp
jnp
mov
sahf
repnz
shlb
mov
mov
out
adc
shrb
in
mov
ss
jo
cmpsb
jg
cs
nop
or
and
sbb
jno
ficoml
push
mov
nop
icebp
adcb
fs
xchg
pop
inc
ret
fsub
xchg
loop
lret
cmp
fwait
mov
push
stc
push
fs
aad
mov
inc
stos
repnz
dec
stc
imul
orl
or
ror
pusha
add
dec
push
stc
jbe
push
add
xchg
xchg
jle
sub
daa
xchg
stos
and
push
cmc
movsl
jmp
lods
lods
jae
insb
sub
movsb
out
js
lea
push
icebp
jp
psubsb
mov
scas
push
pop
dec
insb
mov
repnz
cltd
mov
fnstcw
aaa
addr16
push
insl
mov
cmc
bound
test
xor
jmp
jno
mov
pushl
fsubl
lock
cmp
mov
jo
inc
pop
xor
or
insl
das
dec
cld
aad
js
cmp
mov
and
dec
mov
push
adc
dec
call
sub
divl
mov
icebp
ret
outsb
adc
jno
popa
jno
adc
outsl
icebp
xchg
stos
mov
adc
add
mov
xchg
mov
data16
pop
mov
stc
or
jns
or
rcrl
sub
arpl
push
xchg
aad
aad
mov
shlb
mov
pop
inc
mov
add
add
or
sub
ret
xchg
test
sub
adc
ret
aam
pusha
mov
mov
mov
nop
adcb
jecxz
out
out
xor
movsb
imul
lock
js
push
clc
or
jge
or
adc
cmpsl
in
je
and
call
mov
or
lods
add
inc
jo
movsb
jae
pop
push
push
movsb
es
nop
shlb
andl
aam
dec
jmp
rolb
es
pop
mov
and
pop
and
and
nop
popf
mov
dec
pop
adc
add
dec
cmp
xchg
repnz
loopne
add
push
shll
xor
add
inc
jecxz
add
adc
ds
pusha
add
shrl
or
xchg
mov
sub
mov
jbe
add
push
ds
hlt
clc
ja
mov
addl
mov
mov
adc
stos
int3
or
sbb
inc
test
popa
pusha
fdivrl
or
xlat
outsl
fnsave
sub
jmp
xor
andl
rol
int
out
fadds
cmp
mov
insl
sub
push
enter
pop
xchg
vpshld
lret
repz
sub
cld
pop
mov
add
mov
adc
inc
xchg
stc
icebp
adc
jmp
lds
or
pop
xchg
rcr
icebp
jmp
loope
cmp
mov
or
add
mov
addl
fcmovbe
popf
xchg
popf
fs
push
inc
les
or
xor
out
cli
adc
test
in
cs
sub
cmp
popf
int3
mov
add
mov
inc
mov
cmpsb
mov
insb
and
mov
inc
dec
ljmp
mov
lods
xchg
sub
cmp
out
mov
dec
push
and
daa
sub
std
sub
add
and
adc
movsb
pop
adc
test
jl
sbb
cli
daa
addr16
shl
fisttpll
mov
push
jns
pop
pop
cld
jno
lock
dec
push
popf
cwtl
cmp
repz
inc
outsb
pushf
inc
inc
push
dec
inc
cmp
sti
pop
mov
add
ja
ljmp
sub
into
or
testl
jb
lret
and
sti
mov
fnstsw
jmp
sbb
cs
out
pop
jge
push
les
mov
sub
pop
fnstcw
mov
test
xor
mov
xchg
fdivrl
and
cmp
mov
push
dec
pop
jns
mov
stos
ss
jo
int3
popl
push
mov
push
push
faddl
add
dec
in
push
lods
dec
xor
jns
out
add
push
xchg
fildll
outsl
mov
fcomp
xor
dec
mov
out
test
test
in
movsb
stos
je
orl
pop
out
adc
hlt
les
jns
fsts
loop
cmp
xor
sbb
jns
test
sub
xor
mov
movsl
int3
flds
in
cmp
int3
jge
jg
ds
mov
das
int
pop
stos
int3
add
cmpl
cmp
jns
imul
into
movsl
dec
dec
fildll
jl
sbb
pushf
mov
dec
mov
jge
mov
fisttpll
or
test
xlat
lahf
inc
or
xor
or
cmp
scas
mov
es
arpl
cli
fs
pop
or
outsl
push
add
dec
ret
stos
fucomip
arpl
sbb
pop
push
leave
jae
sbb
je
stc
mov
das
mov
lods
cmp
fwait
loope,pt
sti
push
in
dec
add
cltd
icebp
fisttpll
aad
and
jp
rcrb
insb
in
fldt
enter
js
popa
add
cmp
dec
cmp
aas
sub
mov
cmp
dec
push
scas
xor
push
mov
inc
inc
fwait
cs
pop
push
popf
mov
cwtl
stos
fld
dec
adc
mov
enter
stos
ljmp
cltd
mov
leave
rclb
or
mov
and
pop
mov
test
sbb
iret
ret
jno
movsb
cs
xchg
imul
test
sbb
mov
cltd
adc
jne
adc
sti
stc
aam
cltd
mov
ds
mov
orb
xor
push
mov
out
std
pop
xchg
adc
cmp
inc
xor
pop
push
loop
add
enter
idiv
mov
insl
addb
inc
add
repz
xor
jbe
out
std
cmpsb
sbb
or
push
sub
or
imul
cmp
addr16
pop
mov
imul
fisubs
out
cmpsl
mov
je
and
lea
imul
push
aad
mov
dec
roll
and
hlt
pop
pusha
mov
jae
ds
inc
inc
mov
xchg
popf
mov
cltd
scas
xor
aas
cmp
mul
xchg
into
push
imul
mov
inc
shlb
jns
f2xm1
test
in
inc
in
jp
push
mov
jb
repnz
inc
pop
jge
in
idivl
sbb
into
enter
daa
push
dec
push
sub
in
pop
xchg
bound
xlat
cmp
enter
xlat
pop
sub
mov
mov
je
sub
jno
jne
push
fldcw
pop
daa
enter
jns
popa
in
mov
sbb
mov
mov
jge
aad
data16
es
add
pusha
gs
cmpl
fsubl
lcall
hlt
or
ss
adc
mov
sbb
inc
lock
into
aam
push
fldt
and
mov
fstl
inc
cmp
xchg
sub
ja
enter
addr16
mov
pop
rorl
movl
stos
adcb
jg
cmp
sbb
ror
stc
aas
sete
pop
push
adcb
jmp
ds
lea
xchg
pop
add
or
mov
enter
jb
shlb
in
sub
dec
xorl
add
cmpsl
xchg
and
daa
jo
adc
cmc
pop
cmp
pop
add
sub
xor
cli
imul
sub
jl
adc
add
imul
ljmp
jle
test
jmp
pusha
sub
jbe
in
mov
test
pop
mov
fcoms
out
xor
pop
push
lahf
leave
jb
out
jb
cmc
sbb
cmp
test
and
push
mov
imul
icebp
jg
sarb
js
jae
repz
push
or
test
xlat
jg
fdivr
jae
cmp
popf
in
push
pusha
xchg
inc
sahf
adc
inc
jge
ficoml
add
adc
popf
pop
enter
sub
cwtl
jns
mulb
inc
xor
rorb
cld
push
cmp
int3
lock
shlb
xchg
push
fs
mov
pushf
call
aas
rorl
pop
js,pt
fs
or
cwtl
clc
fnsave
sarb
orl
mov
mov
int3
sub
mov
inc
cwtl
sbb
mov
mov
inc
aas
xchg
int
shrl
sub
cmpsb
inc
out
outsl
mov
adc
fwait
cwtl
arpl
dec
sbb
sub
adc
dec
cmp
or
pop
mov
or
rorl
add
gs
pop
iret
cmpsb
roll
lret
nop
ret
mov
inc
pop
shlb
pusha
jmp
fsts
cwtl
mov
sbb
cs
aad
sbb
cmpsb
xlat
fwait
ss
fisttpl
hlt
sbb
xor
pextrw
xchg
push
in
xlat
add
push
orb
sbb
cmp
jle
iret
in
js
cs
sbb
iret
cmc
add
sbb
in
mov
add
push
scas
mov
mov
adc
mov
movsl
xchg
outsb
xchg
sbb
mov
sbb
sbb
shll
dec
pop
sub
pushf
cs
outsb
sbb
movb
inc
leave
or
jp
popf
push
ss
pop
mov
stc
mov
add
xor
inc
xor
loopne
pop
cmp
sub
aam
xor
inc
mov
cmpsl
cs
and
mov
lods
clc
loope
cltd
addr16
bound
fsubr
cmpsb
sbb
sarb
gs
stos
decb
pop
cmp
mov
xor
leave
xchg
outsl
cli
int
into
cltd
dec
test
mov
add
mov
loopne
lods
ljmp
pop
mov
xchg
sbb
test
mov
cmpsb
push
xchg
mov
inc
jl
push
enter
popf
sbb
test
test
and
fisubs
mov
or
ret
cmpsb
test
adc
imul
insl
shl
fldt
and
add
mov
lods
adc
sub
mov
add
or
scas
adc
inc
or
mov
ss
out
sub
xor
repnz
ret
sbb
ror
mov
mov
xchg
dec
pop
add
push
push
test
cs
xchg
inc
adc
mov
fmull
pop
cld
push
movaps
aam
out
clc
add
jo
jns
jmp
enter
jmp
xor
in
pop
push
mov
cld
xchg
cmp
mov
mov
les
arpl
sub
ficoms
pop
lea
aam
pop
fwait
xchg
movsl
and
inc
hlt
sub
sbb
mov
jnp
sbb
sbb
add
aaa
sbb
push
inc
popa
xchg
lret
repz
sbb
jno
pop
fidivl
mov
adc
lcall
pop
adc
push
jmp
cmpsb
enter
int3
cmp
jle
stos
mov
cli
rol
add
dec
lea
sbb
scas
jae
jecxz
ret
hlt
xor
jg
jo
xor
in
sub
sbb
mov
sub
frstor
xchg
lahf
pop
and
out
xlat
daa
push
push
push
aas
ficoml
test
shlb
pop
into
rclb
ljmp
hlt
xchg
pop
add
jns
cli
test
cmpl
cli
mov
jo
imul
test
and
push
dec
add
add
mov
adc
sbb
add
fiadds
idivl
es
jbe
ficoms
int3
test
ret
pop
mov
pop
in
fstpt
sub
loop
sbb
cld
mov
ret
popf
ret
daa
imul
call
fdivl
adc
repz
push
rolb
sub
cmp
ja
in
outsb
add
pop
mov
fs
in
cmp
mov
push
inc
or
add
xorb
cmp
push
ret
and
xchg
sub
je
sbb
mov
xchg
gs
sti
js
xor
inc
mov
bound
push
jae
add
test
out
add
shll
repnz
sbb
lret
push
sahf
xchg
push
mov
cmp
push
std
push
arpl
add
out
lds
stc
sets
fnstenv
shll
cmp
loopne
mov
xchg
xchg
push
mov
out
mov
fdivr
js
loop
cli
outsb
jne
lret
mov
xchg
lcall
mov
cmp
mov
push
add
add
add
leave
xor
dec
ret
mov
lods
int3
xchg
fisubl
pop
xchg
and
mov
push
lds
pushf
add
cwtl
clc
mov
jmp
scas
dec
add
dec
fst
scas
fisubl
xor
andl
nop
xor
inc
push
jnp
ljmp
ret
into
or
inc
add
xchg
add
nop
and
mov
push
ret
outsl
sbbb
bound
test
aas
shrb
and
cmc
mov
mov
aad
xorl
dec
sahf
and
adc
hlt
lahf
fldt
icebp
pop
push
jbe
pusha
in
fsubs
movsl
cmp
fistl
mov
cmp
pop
xor
lret
mov
cwtl
dec
packsswb
loope
scas
jl
dec
sbb
jmp
and
mov
xchg
cmp
cmp
pop
lods
js
pushf
hlt
lahf
pop
out
push
outsb
xor
subb
pop
sub
sub
mov
jg
div
add
xchg
fsubs
jp
pushf
xchg
add
sub
inc
jp
nop
data16
lahf
sub
adc
fwait
icebp
fisubl
sub
mov
mov
fstpl
dec
mov
mov
dec
out
ds
push
mov
dec
outsl
daa
push
enter
sub
dec
loopne
lock
aas
enter
sbb
adc
pop
aaa
repz
cmp
xor
pop
sub
or
jns
mov
icebp
in
andl
ja
fldenv
in
push
push
mov
test
call
add
lds
das
add
inc
orl
mov
lcall
addr16
cwtl
dec
cmp
mov
pop
into
adc
testl
lea
jbe
mov
dec
divb
mov
loopne
pop
sbb
int
inc
dec
rcr
xor
arpl
pop
mov
mov
data16
aad
push
xor
les
xor
cmp
sbb
setl
xchg
add
and
dec
sub
xlat
fcoms
das
sbb
lahf
inc
testl
xor
nop
push
rep
jno
push
call
cwtl
mov
outsb
shlb
imul
icebp
dec
fs
cmp
adc
cmp
incb
orb
sbb
nop
pop
bound
cwtl
sub
dec
push
je
fucomi
sub
xchg
xor
sub
repz
push
mov
push
filds
aas
sbb
push
jne
icebp
adc
push
fiaddl
fwait
inc
dec
push
lret
ret
adc
lock
dec
cmp
cmp
jae
add
pop
daa
rcrb
push
iret
test
test
mov
jnp
add
and
lret
ja
in
and
in
and
sub
mov
aas
outsb
sbb
fdivl
rol
add
mov
imul
xchg
call
push
cld
xchg
inc
jo
lcall
xlat
std
dec
test
aam
enter
jmp
push
test
xor
xlat
hlt
ja
inc
insb
mov
add
cltd
test
mov
in
in
adc
mov
lea
add
shl
mov
sub
cmp
and
mov
xchg
jmp
cltd
jge
jge
aas
stos
mov
lcall
rolb
cmp
insl
mov
mov
cs
cmp
xchg
and
add
xchg
lea
inc
and
jmp
or
dec
pop
ss
pushf
or
cmp
rcr
fwait
in
push
pop
or
push
jle
fsts
mov
ds
dec
mov
movsb
iret
or
std
inc
ljmp
insb
dec
shlb
ljmp
sub
xlat
out
inc
outsl
mov
daa
jmp
cmp
sbb
xor
xor
jo
add
mov
jmp
jo
enter
push
adc
inc
lret
mov
test
out
mov
mov
loope
fs
inc
mov
push
adc
pop
cmp
cmpsb
lods
sbb
push
out
mov
add
test
scas
ret
dec
int3
imul
adc
shll
push
push
daa
adc
and
jno
inc
push
std
pop
add
fmull
into
pop
mov
sub
mov
addr16
mov
dec
mov
aas
in
add
sbb
enter
jp
in
call
pop
les
loope
ljmp
repnz
dec
xchg
mov
dec
dec
sbb
rcll
push
rcrw
scas
xlat
jge
inc
fildl
aaa
cmp
imul
into
mov
pusha
test
and
xor
sub
jg
mov
insb
mov
adc
test
jl
loop
fs
and
fiaddl
shrl
sbb
xor
xchg
pop
xor
cmpl
bound
sti
cmpsl
xchg
mov
mov
pop
out
das
outsl
pop
push
mov
movsb
adc
fldt
test
add
xor
hlt
jae
mov
push
sub
fldcw
jge
cmp
es
jmp
add
iret
out
inc
adc
enter
push
mov
adc
orb
test
pusha
xor
push
ret
call
cli
xor
xchg
lret
xor
loopne
adc
push
inc
out
lock
je
rorb
xchg
lods
mov
and
lods
movhps
xor
enter
insb
mov
sahf
nop
shrb
out
ret
sahf
pop
pop
lea
mov
jo
ror
out
mov
in
iret
movsb
add
jb
jl
pop
jo
dec
aaa
and
fnstsw
and
idivb
sbb
pop
test
in
loope
out
jns
rcrb
je
or
cmp
push
test
lods
pop
push
pop
sbb
xchg
sbb
cli
lock
jne
and
ffreep
mov
mov
mov
outsb
sub
aam
into
pop
test
adc
or
mov
inc
ret
sarb
loop
cmp
or
movsl
cmp
jmp
ret
jo
push
shrb
dec
pop
xor
sti
jecxz
ljmp
jbe
jo
and
add
sahf
out
shll
outsb
bound
push
xchg
push
lea
mov
jl
inc
cmp
gs
push
cmpl
push
xchg
pushf
mov
cwtl
lcall
test
add
xchg
jo
addb
je
imul
mov
js
sbb
add
ror
lods
mov
mov
cmp
push
adcl
leave
xchg
pop
rclb
sub
insl
adcl
stos
xchg
imul
outsb
mov
adc
les
jg
subl
jo
xchg
sub
testb
jbe
sbb
sbb
or
inc
lret
cmp
jnp
pop
mov
scas
sub
xor
int
mov
les
sub
popa
pop
icebp
insl
mov
test
mov
loope
clc
fwait
xchg
jno
push
into
jns
sub
sub
adc
out
and
dec
jo
cltd
popa
xorl
mov
loope
xchg
or
sahf
pop
sbb
mov
xor
adc
mulb
push
lods
and
lods
sti
rcr
mov
inc
cmp
fldcw
cld
ljmp
cmp
dec
add
fnsave
jge
stos
stos
add
lret
mov
inc
xchg
push
test
or
test
jge
stos
ja
lret
pop
popl
lret
push
mov
fildll
and
cltd
ss
jnp
push
jp
cmp
add
push
cmp
mov
jno
jle
pop
mov
jmp
inc
push
dec
test
cmp
add
sbb
mov
fdivl
in
mov
push
iret
mov
das
icebp
cli
dec
cltd
and
cwtl
xchg
aaa
fucom
dec
rcrb
pop
sub
mov
xchg
aas
pop
aam
xor
arpl
mov
rolb
popa
lds
jne
cltd
and
lret
inc
test
xor
call
hlt
fdiv
sbb
cld
fldt
cmp
sbb
mov
aas
data16
decb
or
pop
mov
mov
lea
push
sub
je
push
jnp
pop
push
cli
out
gs
iret
add
lahf
dec
mov
nop
push
cmpsl
sub
push
repnz
outsb
fdivrl
aam
push
add
aad
lahf
js
es
or
jle
mov
cs
inc
andb
sbb
insb
js
xchg
cmp
jmp
xor
cmp
loop
and
je
mov
and
fs
add
jo
adc
inc
push
aas
pushf
cmpsb
add
jecxz
fimull
or
ffreep
pop
cmpsb
or
enter
push
jno
pop
pushf
xor
imul
jl
lods
pop
scas
or
in
sar
mov
stc
nop
repz
aam
xchg
xchg
cltd
xchg
xchg
mov
dec
jmp
xorl
test
cmp
inc
cmp
fsts
sub
inc
pop
xor
xorb
jne
fld
push
js
ret
stc
hlt
jle
sbb
fdivl
pushf
fisubrl
jg
mov
sub
cmc
mov
jle
mov
sti
pushf
das
pop
mov
dec
fsubs
push
push
roll
roll
xor
jmp
lock
cmp
mov
xchg
sbb
pop
subb
cmp
inc
push
xlat
jo
cmp
sbb
and
mov
cli
cmp
jb
dec
dec
jle
loope
jno
fcomi
mov
sub
push
js
sbb
scas
cmpsl
inc
jbe
add
scas
sahf
mov
cmp
lret
js
inc
in
int
pop
loopne
rep
incl
mov
lods
and
cmc
cld
test
pop
push
insb
lcall
ret
and
xchg
std
call
mov
std
inc
fcompl
dec
mov
test
dec
pop
and
sub
or
mov
add
aaa
cmpsb
jns
sbb
dec
push
outsb
add
hlt
ficompl
mov
mov
mov
xchg
out
test
sub
mov
test
add
inc
std
push
mov
mov
cmpsb
ljmp
scas
jbe
mov
mov
jo
xchg
inc
int3
cs
xchg
sub
xlat
ljmp
mov
in
in
lods
xchg
jmp
jg
push
jmp
subl
jp
jle
mov
cli
push
out
dec
sub
mov
loopne
sub
mov
inc
ret
imul
aas
push
repnz
movsl
fiaddl
insb
jbe
out
in
jp
sbb
das
fstps
inc
xchg
addl
mov
adc
rep
push
cwtl
in
sbb
lods
pushf
shrl
lahf
push
xchg
adc
or
arpl
mov
pop
cmp
lea
xor
cmc
loope
fnstsw
cmp
test
ss
fs
fmull
mov
lret
ljmp
mov
xor
jge
rorl
lcallw
pop
out
mov
addr16
movsl
mov
popf
out
xchg
sbb
and
ret
cmp
adc
arpl
sbb
movsl
jle
adc
sub
lds
test
jecxz
call
aam
adc
gs
out
mov
dec
aad
lds
xlat
clc
push
mov
push
cmp
cwtl
repz
mov
mov
sub
and
pop
dec
movsb
inc
mov
mov
pop
xchg
cltd
aaa
test
cmp
push
xor
add
ljmp
pop
mov
stos
jecxz
cmp
decl
insl
push
or
arpl
xor
repz
xchg
test
xchg
xchg
leave
dec
dec
jne
into
les
pop
andb
mov
xor
aas
sub
jno
cli
mov
jecxz
adc
xchg
aaa
and
add
jge
clc
lock
xor
test
stc
sub
std
mov
fwait
cmpsl
sub
xlat
and
adcb
push
aaa
or
mov
daa
pop
mov
xchg
stos
inc
mov
jge
cmp
jge
pop
loopne
cmp
lahf
sbb
je
test
adc
inc
mov
js
aad
hlt
icebp
or
jge
jmp
xchg
in
xor
stos
sub
sysret
jb
std
push
iret
mov
xchg
or
movsb
xor
lods
daa
popl
sub
xchg
cld
adc
cltd
inc
clc
mov
push
add
inc
mov
mov
dec
mov
mov
pop
lods
stos
sub
in
add
sarl
dec
mov
pusha
add
cmp
sbb
pushf
adc
xor
aaa
fidivrl
or
mov
xchg
ljmp
mov
aad
and
cmp
into
movsb
lds
and
rcr
lods
arpl
adc
ret
mov
das
push
jb
pop
pusha
mov
add
jmp
jb
pop
inc
or
fwait
add
cmpxchg
mov
lret
or
cmc
sub
cmpl
jl
stos
mov
enter
repz
mov
pop
js
insl
insl
in
fisubl
jae
jb
push
rol
pop
bound
jg
andb
jp
mov
mov
loopne
adc
ja
out
xchg
leave
out
cmp
or
pop
scas
pop
lret
mov
das
mov
adc
loop
lret
jl
xor
shl
test
aaa
jle
into
aas
mov
int3
adc
mov
cmp
xor
xchg
or
int
and
and
loope
pop
mov
sub
adc
data16
insb
push
xchg
jp
mov
stc
popf
push
inc
xorl
xchg
jnp
and
lret
push
in
adcb
mov
mov
lahf
lret
pop
call
adc
sti
sub
adc
sub
cmp
mov
push
sbb
cmp
add
xor
adc
mov
flds
lea
js
xorl
push
add
shrl
jmp
lcall
jge
pushf
add
lret
and
aaa
jno
dec
xchg
icebp
out
dec
jmp
pop
mov
push
fdivrl
jle
subb
mov
in
fcom
push
insl
orl
cmpsl
shlb
dec
stos
out
outsb
out
push
cmpsb
jge
xlat
test
nop
xchg
fdivrs
or
daa
mov
enter
enter
mov
pop
decl
imul
test
inc
mov
add
dec
mov
aas
in
and
rol
arpl
rcrb
loope
inc
adc
sbb
aaa
cmc
repz
ljmp
xchg
in
push
stos
add
aas
rolb
xchg
cwtl
pop
adc
imul
jo
mov
add
fcoms
xchg
add
dec
stos
pop
add
mov
push
mov
mov
aas
mov
mov
push
int
negl
dec
xchg
popa
xchg
xor
inc
inc
iret
pop
sti
movsb
cli
out
inc
mov
add
cmp
xor
cmp
movsl
lods
push
pop
rol
add
fidivrl
scas
jne
dec
shl
add
push
pop
sbb
mov
xchg
in
popf
adc
xor
inc
int
sbb
sti
jbe
cmp
add
outsb
pop
jne
aas
jo
aam
mulb
imul
dec
dec
xchg
fdivp
jb
sbb
jnp
mov
das
jle,pn
arpl
in
les
lds
adc
test
push
xchg
lahf
add
push
push
push
test
aad
loopne
pop
adc
movsb
mov
scas
sub
mov
pushf
dec
mov
movsb
lods
inc
dec
xlat
dec
divl
js
mov
sub
pop
xor
sbb
pop
mov
mov
push
mov
test
ds
mov
xchg
rcrb
daa
xor
pop
rcll
jo
sti
loop
cmp
sub
and
lret
sti
inc
shrl
testl
xchg
lds
pop
imul
inc
in
xchg
in
out
leave
mov
hlt
cmp
mov
dec
jno
mov
filds
mov
xchg
adc
push
in
xchg
xchg
mov
pushf
inc
xchg
dec
dec
mov
cld
cmpsb
or
scas
or
add
insl
push
sarl
in
dec
jmp
clc
pop
inc
popf
inc
shll
adc
cmp
mov
in
cli
cmp
adc
outsb
cwtl
mov
xchg
testb
mov
xchg
cmpsb
jns
jl
jge
into
or
cmp
mov
mov
mov
les
in
jmp
and
or
jge
mov
out
add
push
loope
mov
sub
xor
sbb
lcall
repnz
repz
pop
push
pop
adc
ds
lods
mov
je
lods
xchg
mov
sti
fcomps
fs
mov
mov
sbb
or
scas
cmp
mov
movl
sahf
in
inc
adc
sub
xor
movsl
int3
xchg
cmp
fnsave
push
out
sarl
sbb
in
pop
icebp
in
shll
xor
lods
pop
push
and
arpl
jmp
sub
add
adc
dec
sti
lods
mov
or
es
and
jo
or
cwtl
mov
jp
jl
test
mov
rol
gs
dec
cmp
adc
mov
imul
clc
ret
decl
xchg
imull
mov
pop
lods
push
and
pop
movsb
jle
push
pop
insb
pop
mov
inc
push
push
mov
lret
repz
dec
les
pop
into
xor
rorl
aas
jno
xchg
popa
and
jnp
push
paddsb
xchg
sub
cmp
hlt
rcll
movsl
xor
scas
jmp
jno
and
xorl
popfw
sub
ret
jb
shlb
pop
mov
or
lds
lret
lock
inc
sub
dec
stc
pushl
xchg
push
xlat
jmp
ljmp
adc
fadds
div
andl
dec
repz
mov
and
mov
xor
cmp
mov
or
bound
xchg
fdivrl
or
movsb
jmp
jge
icebp
jecxz
ds
pop
adc
pop
daa
pop
push
xchg
jns
jle
pushf
nop
or
mov
ja
jmp
add
jge
sahf
loope
push
push
pop
jbe
sub
dec
repz
leave
push
jp
dec
in
dec
pop
xchg
push
les
pop
in
mov
push
pop
mov
inc
insb
cmp
pop
ret
inc
popa
adc
mov
sbb
int
push
aaa
dec
repnz
shr
out
dec
imul
sahf
push
cmp
ret
inc
negb
mov
movsb
ret
cmp
push
mov
adc
aad
add
sahf
mov
mov
inc
out
pop
pop
rcrl
stos
mov
mov
mov
jo
test
jge
pushf
hlt
xlat
insb
stos
cmp
out
ljmp
add
jns
cld
sub
xchg
insl
notl
cmp
negl
mov
inc
shl
push
aad
inc
sbb
pop
cld
das
mov
mov
or
mov
and
mov
out
jo
clc
mov
jbe
icebp
loopne
jae
lods
gs
movsl
xchg
adc
cmpb
sahf
in
repz
dec
push
mov
lock
or
sub
mov
dec
xchg
sbb
pop
out
nop
push
jmp
in
out
xchg
push
popf
mov
cltd
mov
xor
push
xchg
sbb
out
shrb
push
shl
ja
push
cmp
into
inc
add
mov
push
add
lret
or
lahf
add
add
and
xchg
add
pusha
pop
sarl
hlt
lea
lock
into
dec
or
mov
mov
arpl
dec
lcall
add
jne
inc
pop
ja
outsl
and
inc
lock
or
push
mov
aas
mov
clc
dec
in
mov
mov
mov
dec
rcrl
sbb
push
or
xchg
mov
ret
es
or
enter
daa
shll
mov
inc
cmp
sbb
mov
addr16
mov
and
test
push
cmc
or
mov
cltd
cli
loop
call
lods
and
cmp
adc
lods
add
jae
cmpsl
sub
sbb
ss
shrl
add
fwait
outsb
mov
insl
insl
out
clc
fwait
pop
test
mov
xor
lcall
test
and
loop
lods
xor
jge
lahf
stos
enter
fistl
aaa
xlat
mov
push
sub
pushf
push
aaa
test
aam
cwtl
ret
sub
xor
sub
lock
fdivl
pop
dec
push
xchg
ret
xchg
xor
mov
cli
imul
add
xor
jmp
adc
mov
pop
jg
ret
inc
push
iret
push
mov
mov
push
clc
mov
push
stos
rcll
fistpl
jae
pushf
inc
xlat
fiadds
fucom
jae
jge
push
scas
and
out
popf
dec
lea
ror
cmp
insb
testl
out
fisttpl
cs
xchg
inc
in
js
cmp
arpl
sbb
ds
adc
pop
leave
pop
xchg
inc
mov
sbb
inc
cmp
adc
enter
hlt
je
pop
ret
mov
out
and
mov
pop
sahf
xchg
repnz
lea
adc
icebp
fwait
enter
jecxz
sbb
repz
iret
push
cs
fcomp
adcl
jle
movsl
enter
fsubl
mov
mov
jne
push
adc
stos
pop
fistl
inc
xchg
xchg
jb
or
adc
push
orb
lds
addr16
mov
jle
aas
arpl
stos
sub
jns
lret
adc
add
pushf
inc
sahf
xchg
orl
mov
shrb
dec
pop
addr16
inc
test
or
pop
arpl
mov
xor
out
push
lahf
popa
sbb
repz
pop
inc
mov
cmpl
sbb
push
pushl
pop
cmc
inc
adc
jne
and
movsl
dec
out
cmp
sub
cmp
dec
xor
jle
jge
or
xchg
mov
pop
adc
mov
leave
arpl
ret
dec
ja
dec
dec
test
movb
push
cmp
dec
add
or
call
enter
cmp
xor
push
mov
jbe
jg
cli
mov
cmp
or
fcmovnu
push
adcl
push
sbb
pop
mov
pushf
in
push
loope
shlb
sbb
leave
sub
aam
iret
ficompl
push
push
sub
add
and
movq
adc
add
movsb
inc
movsl
push
mov
jecxz
pop
sbb
cmpsl
mov
mov
push
mov
clts
pop
sbb
aad
dec
idiv
lock
dec
inc
out
add
sbb
pop
sahf
in
imul
outsb
iret
xor
mov
test
pushf
gs
cwtl
sbb
jmp
push
aad
jl
push
movsl
and
add
scas
call
sub
pop
jge
sbb
ljmp
adcl
int3
icebp
inc
in
jne
dec
bound
jg
in
scas
test
ret
mov
and
inc
xlat
mov
das
inc
fucom
pushl
jmp
xor
jp
ljmp
inc
or
les
cmpsb
sbb
dec
ss
cmp
pop
xor
daa
insl
lcall
cmp
aam
aad
cltd
mov
adc
xor
pushf
add
mov
js
inc
and
cmp
cs
xor
mov
jge
scas
shll
jne
push
scas
sub
jmp
pop
dec
orb
jl
adc
cli
pushf
stos
adcl
jbe
xchg
jmp
into
mov
pop
sub
enter
jo
sub
int
call
xor
pop
xor
into
mov
or
jne
push
xchg
or
out
push
loope
cmp
test
or
cmp
mov
mov
gs
adc
mov
int
out
je
test
xchg
push
mov
jecxz
lea
sti
lods
ljmp
push
xorl
aaa
sub
pop
repnz
or
sub
pop
push
push
fimuls
dec
inc
inc
fcmove
fyl2xp1
int
adc
cltd
out
repz
adc
xor
dec
push
inc
jmp
mov
add
scas
aas
or
andl
inc
test
outsb
push
mov
sub
jge
jp
idivl
sub
sub
into
sub
jae
mov
sub
ja
aad
or
loope
ret
pop
add
outsb
add
xor
xchg
aad
ljmp
add
push
out
and
adc
mov
mov
jmp
pop
hlt
fdivl
movswl
cmpsl
sbb
pop
frstor
cwtl
dec
std
into
jmp
ds
adc
push
movsb
in
push
iret
sbb
dec
fcomp
lds
cmp
cli
xor
jb
pop
lock
jnp
andl
je
insl
pop
pop
orb
icebp
sarb
xlat
les
jno
lock
les
add
and
jmp
icebp
shll
jnp
pop
ja
cltd
mov
pop
fdivs
mov
ljmp
sbb
sbb
inc
push
lea
mov
scas
cltd
cltd
scas
fldl
dec
mov
cmpsl
dec
shlb
addr16
sbb
repz
jg
dec
outsb
outsl
sahf
and
stc
bsr
push
dec
jbe
push
shlb
xchg
inc
subb
in
fistps
inc
pop
fmulp
repz
pusha
rcr
mov
add
nop
mov
add
fmuls
sbb
into
push
gs
xorl
popw
xor
jecxz
cld
mov
bound
push
or
test
ret
scas
ds
add
jo
imul
xchg
fwait
andl
jnp
test
add
mov
inc
xchg
and
enter
inc
outsb
mov
xor
dec
mov
imul
inc
pop
cmp
push
sbb
fstpt
data16
xor
lods
test
divl
lret
hlt
sub
push
gs
mulb
dec
adc
adc
cmp
adc
cmp
ja
out
sub
lea
cmp
sub
sbb
gs
icebp
jbe
mov
or
xor
dec
push
cmpsb
xchg
add
sbb
push
sub
ds
mov
jnp
or
sbb
imul
xchg
in
hlt
sti
mov
xchg
lcall
test
call
fnstenv
insl
dec
mov
stc
stc
mov
mov
pop
mov
mov
and
sbb
mov
rolb
push
pop
cmp
xchg
out
sub
cmpsb
icebp
test
bnd
push
adc
insb
gs
jae
sub
loop
mov
das
bound
xor
data16
cmc
ljmp
sbbl
dec
enter
inc
inc
adc
inc
adc
sbb
mov
leave
push
jle
push
jmp
loop
xor
xchg
repnz
cmovno
mov
das
cmp
in
add
inc
jp
andb
cmc
push
mov
cld
cmp
mov
sbbl
scas
bound
pop
mov
testb
push
push
pushl
jmp
mov
sbb
and
fcmovnu
mov
out
push
dec
sbb
push
out
addr16
adcb
mov
sarl
idivl
hlt
in
jecxz
iret
in
hlt
addl
leave
lea
lret
jl
mov
lds
pusha
sbb
xchg
shlb
out
jo
inc
jb
xor
popf
loop
cwtl
lahf
rcrb
hlt
cmp
ja
insl
rcl
decl
pop
mov
jnp
fcomps
enter
jp
jno
movmskps
icebp
mov
xchg
nop
idivb
inc
dec
int
sbb
insb
pushf
leave
sti
lcall
sbb
jno
jg
ss
shll
call
imul
fbstp
jne
mulb
cwtl
cld
mov
and
nop
and
xor
sbb
sti
arpl
jmp
insb
and
nop
jmp
arpl
sahf
cmp
dec
fcompl
je
mov
mov
popa
adc
sub
imul
add
popa
fs
dec
and
adc
dec
rcrb
es
xchg
int
mov
adc
pop
xor
push
clc
pop
sub
movsb
dec
xor
dec
out
jns
jnp
ljmp
addr16
or
sbb
cmp
sarb
jmp
decl
mov
mov
dec
mov
inc
dec
push
mull
cmp
lahf
sbb
mov
adc
aaa
test
push
dec
into
aam
sub
imull
in
outsl
mov
sbb
pop
js
mov
mov
testl
and
xlat
cmp
mov
jns
add
xor
xchg
shrl
push
fisttpll
fisubs
cmp
popa
aad
pop
mov
movsb
sub
fcomip
fmulp
jg
cmp
aas
inc
mov
sub
fidivs
jp
push
mov
outsb
imul
mov
cmpsl
clc
out
push
pop
lods
stos
dec
dec
out
push
sub
and
adc
stc
mov
adc
bound
leave
jno
stos
ret
xchg
inc
inc
sbb
adc
ror
cld
push
mov
push
pop
adc
mov
pop
movb
test
fs
scas
mov
mov
call
test
push
aas
movsl
adcb
fcomps
daa
fsubr
in
mov
xchg
pop
popa
out
sbb
adc
jae
add
pop
stos
lcall
shl
vdivss
sti
pushf
or
int
daa
out
push
mov
sub
notb
push
jge
cwtl
pop
fidivrl
mov
les
mov
xchg
repnz
dec
idivl
dec
nop
add
mov
pop
insl
sbbb
xchg
addb
push
fcom
out
inc
jb
mov
das
sub
xorb
inc
sbb
mov
out
fsubl
iret
test
xchg
jne
inc
and
add
add
mov
cli
loop
shl
leave
shr
loop
js
mov
das
sub
add
jne
aaa
dec
cmp
in
jg
xor
pop
sahf
daa
cltd
test
sbb
popf
adc
shl
add
insb
and
fnstsw
jbe
lret
fstpt
cmc
cmp
enter
lods
sub
and
sbb
shlb
call
scas
dec
jne
cmp
sub
pop
add
or
sar
and
jle
inc
ffreep
jbe
fnsave
in
dec
call
nop
adc
mov
clc
cmp
mov
data16
jbe
pop
mov
out
xchg
mov
sbb
sub
ficomps
inc
mov
pop
cmpsb
push
mov
repz
into
and
out
out
jecxz
testb
fstpt
jp,pt
sar
cmc
push
lahf
addr16
sbb
sbb
orl
hlt
inc
in
into
movsl
sbbl
fs
xchg
push
gs
mov
jns
aad
shrl
lahf
lahf
xor
cmp
mov
ljmp
add
pop
mov
sub
xchg
fsubrs
mov
sub
or
rolb
mov
lods
pop
nop
mov
enter
jo
popf
imul
cltd
outsl
dec
neg
sub
divl
lds
iret
aam
cmpl
jnp
addr16
sbb
pop
push
sbb
push
sub
mov
lock
in
idivl
dec
pusha
shlb
out
stos
roll
inc
xor
push
sbb
aam
test
cs
test
shl
mov
mov
jae
cmp
mov
mov
in
jo
push
in
adc
or
sbb
mov
insb
sbb
jo
lock
push
test
dec
pop
out
and
dec
cwtl
cmp
inc
fildll
ret
out
xchg
dec
jb
mov
xchg
mov
pop
pushf
mov
imul
dec
outsb
xor
les
mov
fsubrs
and
cmc
sbb
or
sbb
clc
inc
std
cmp
test
and
int
imul
outsb
push
das
jle
push
or
mov
or
sub
cmp
sahf
dec
arpl
xchg
pop
fnstcw
sbb
pop
jo
sub
aaa
and
lds
push
dec
jg
in
stc
push
inc
push
xchg
rol
clc
push
cmp
test
inc
movq
push
aad
sbb
cli
aad
sbb
adc
and
sti
orb
adc
rorb
xchg
or
je
adc
jne
es
scas
nop
jnp
pop
mov
or
inc
das
pop
push
xchg
in
pop
imul
cmp
popf
repz
add
add
push
dec
rclb
popl
push
or
fmuls
aam
add
test
shlb
movsb
mov
pop
sbb
addr16
lods
pop
xor
mov
fcoms
cmp
fcoml
pop
sarb
je
mov
inc
lds
pusha
outsl
xchg
inc
inc
push
int3
mov
daa
lret
pop
lret
adc
out
iret
pop
inc
inc
sar
jle
nop
and
cmp
outsb
cltd
sbb
into
repnz
scas
inc
or
rcrb
and
idivl
push
cmp
push
lahf
push
inc
clc
inc
mov
ret
and
mov
jmp
ror
fldt
adc
xchg
mov
and
cli
lcall
adc
jbe
jno
addr16
into
pop
fisttpl
or
sbbb
lea
movsb
jle
mov
loopne
leave
mov
or
nop
movb
outsb
or
jge
sbb
stos
fisttpl
sbb
mov
xor
lods
into
mov
mov
add
ss
cmp
push
pop
int3
mov
loope
push
xor
fdivrs
imul
sub
ret
and
jno
xchg
sbb
jge
add
mov
jbe
lods
and
push
fldt
test
popa
test
mov
movsb
or
xor
aam
pop
mov
sbb
pop
mov
psrld
shll
ret
pushf
push
sbb
clc
inc
pop
mov
inc
dec
movsl
repnz
jo
mov
bnd
xor
cmpsb
mov
mov
add
pop
mov
or
clc
jb
iret
in
jbe
fcomps
popa
insl
cmc
fwait
mov
punpckhdq
ficoms
jae
jns
std
mov
push
movsb
adc
xchg
loopne
lahf
dec
mov
in
pop
adc
in
lcall
xchg
push
fdivrl
sbb
ljmp
notb
in
cmp
adc
shrb
jo
push
in
fdivrs
fcompl
dec
push
stos
movsb
pop
das
xchg
in
es
lret
inc
jo
sahf
dec
pushf
or
ljmp
movsb
xchg
pop
fisttpll
clc
push
cmp
in
loop,pn
jne
loope
xchg
jnp
fnstsw
loop
xor
push
ja
aaa
std
pop
add
sbb
ja
popa
jnp
hlt
cwtl
xor
bound
popa
dec
daa
loop
pop
inc
aaa
lret
cmp
xchg
push
inc
sub
call
xor
mov
outsb
inc
pushf
inc
mov
lret
das
add
subl
and
mov
add
add
das
cs
addr16
xor
sub
mov
jg
sbbb
insl
mov
filds
sub
mov
and
mov
imul
imul
push
movsl
jns
lret
or
xchg
mov
js
not
fpatan
sbb
inc
ljmp
insb
mov
jne
jnp
inc
hlt
repz
leave
mov
add
aam
inc
test
jmp
stos
shl
or
pop
shlb
aas
jl
in
popf
mov
in
flds
adc
xchg
aad
arpl
fsubrp
movsb
inc
frstor
popa
je
cmc
xor
es
ds
lods
cmp
push
or
std
dec
sub
lret
movsb
or
pop
rorl
mov
adc
jae
pop
add
jl
dec
fisubl
xor
sbb
fdiv
xlat
pop
decl
das
int3
push
jne
minps
adc
and
fldcw
gs
mov
testb
adc
or
add
faddl
add
inc
outsl
mov
insb
in
jmp
or
clc
icebp
push
and
dec
cwtl
shll
mov
jb
fwait
xchg
dec
aad
push
inc
adc
pop
add
dec
jbe
rcr
addb
add
lods
icebp
pop
jbe
or
adc
dec
iret
mov
imul
jmp
xchg
add
mov
push
sub
pop
fcomi
and
and
xor
lcall
mov
push
sbb
mov
sbb
out
orl
mov
cli
mov
push
ss
or
or
mov
repz
ss
insb
sbb
add
mov
sub
add
mov
rclb
pop
lahf
mov
and
mov
jg
or
sbb
cmp
lea
fwait
pop
les
cmp
mov
pop
xor
ds
fcoml
test
push
jns
in
aaa
adc
inc
pop
xchg
test
test
xor
imul
inc
aas
inc
sbb
sbb
xor
pop
stos
mov
pop
out
cld
xchg
push
cmpsl
repz
les
into
daa
push
movsl
imul
aam
cmpb
in
sbb
js
outsl
lods
lock
sub
cs
mov
inc
xor
mov
roll
enter
sub
mov
xlat
push
mov
aam
mov
js
jne
rcrb
pop
mov
push
repz
sbb
lds
out
xchg
jle
mov
repnz
sub
pop
mov
iret
xlat
movsb
cld
push
stos
fcoml
and
lds
ljmp
mov
pop
mov
dec
sub
fstp
lea
mov
nop
ret
outsl
repz
jge
xchg
or
and
lcall
setp
push
and
adc
jno
xchg
add
mov
addr16
outsb
les
arpl
test
stos
call
inc
aas
sbb
movsl
adc
xchg
inc
add
or
popf
add
adc
outsb
pop
xor
xchg
imul
insb
ret
flds
ja
and
js
mov
lret
fiaddl
outsl
jle
test
fs
mov
ret
mov
rcl
pop
lds
or
pop
add
sbb
push
std
lea
dec
arpl
insb
xor
xchg
jbe
jno
mov
int3
fld
sbb
xchg
xchg
aaa
inc
int3
aas
fst
pop
loop
loopne
aam
aas
sbb
out
pop
fnsave
js
int3
mov
cmp
jb
inc
iret
and
jl
ss
cmpb
mov
into
scas
outsl
aas
ja
mov
imul
pushf
das
push
imul
sbb
fs
dec
and
fdivrs
iret
lea
add
dec
out
ret
lret
push
inc
pop
adc
and
and
jp
mov
and
pop
sbb
push
or
fistpll
popa
clc
mov
and
mov
stos
aad
popa
aam
ret
jne
xor
test
mov
test
xchg
or
nop
mov
pop
inc
out
cmpsl
arpl
mov
ss
xchg
cmpsl
enter
fcmovnb
pop
cmp
subb
sub
push
xor
lods
mov
enter
pop
jns
inc
jae
popf
cmp
jl
cmp
movsl
sbb
inc
dec
add
sbb
pop
pop
dec
push
jg
cmp
xchg
inc
lret
and
aas
jmp
scas
add
ljmp
dec
andb
and
jmp
stc
pusha
mov
pop
imul
insl
xchg
dec
xchg
sbb
push
orb
inc
fwait
fwait
push
jmp
stos
dec
jge
sub
outsl
in
and
jo
cli
pop
test
and
out
sub
pop
scas
sbb
xor
push
imul
and
xorl
xchg
mov
pop
inc
ret
push
push
fmull
mov
mov
ja
sub
mov
dec
cmp
insb
scas
pushf
pop
movsl
out
sti
out
int
cmp
mov
dec
push
sahf
push
ret
nop
jae
outsl
cwtl
out
lahf
mov
ret
push
sbb
ljmp
jg
or
out
push
add
cmp
jae
adc
dec
xchg
lcall
mov
scas
mov
ret
aam
dec
cmp
jge
push
into
mov
sbb
sub
sub
sub
sbbl
jecxz
xor
mov
das
out
popa
pop
or
xchg
xchg
enter
test
fsubl
xchg
cmp
es
scas
sbb
jbe
inc
ficoms
insb
fs
iret
dec
push
cli
mov
cmpsl
jae
out
xchg
add
mov
inc
cmp
fsubr
dec
cltd
movsl
out
mov
shr
sub
and
cmp
push
leave
iret
fcmovnb
jp
shrl
mov
lods
xchg
xor
mov
test
out
ds
sub
cmpb
data16
sbb
sbb
jns
push
scas
scas
lock
xchg
jg
and
inc
lods
ja
lods
mov
test
lods
sbb
xchg
int3
repz
insb
push
loop
lods
outsl
jl
outsb
lahf
aad
test
jp
ret
jno
xor
iret
addr16
cld
cwtl
js
or
imul
ficoms
ss
je
xlat
jp
lahf
add
xchg
xchg
stos
push
jo
push
xor
mov
mov
fldcw
cmp
mov
lods
or
mov
and
ljmp
mov
pop
add
mov
push
jnp
cmpsb
inc
or
in
jo
add
dec
adc
in
enter
mov
leave
sub
ret
dec
mov
add
push
jb
in
ret
dec
aad
push
mov
sbb
mov
push
in
or
mov
mov
arpl
popa
scas
js
or
popa
aad
test
hlt
cmpb
in
cmp
fistps
rcr
mov
and
and
into
sub
ret
sbb
cmpsb
mov
fisubrs
fcoml
cmc
lahf
sti
lock
sbb
inc
rorl
cltd
shrl
es
test
lds
add
dec
or
ja
fwait
jge
cmp
and
push
xor
out
lret
push
out
xchg
mov
in
cwtl
xor
inc
iret
in
test
out
out
rcrb
int3
sub
aam
arpl
test
pop
xorb
repnz
sub
out
in
inc
mov
stos
enter
gs
in
xchg
inc
or
add
icebp
mov
xor
cmp
jns
sub
in
test
adc
mov
or
movsb
int3
mov
push
mov
jmp
xchg
sub
sub
pop
adc
push
sub
sbbl
mov
aam
add
pop
hlt
xchg
and
icebp
popf
dec
jns
fnstsw
mov
enter
xor
adc
subb
les
fistps
push
or
je
mov
and
out
loope
loop
popa
jge
cmp
arpl
push
push
xor
sub
es
cmp
cld
test
push
mov
push
hlt
fmull
decb
dec
arpl
mov
and
leave
adc
jge
sbb
sub
jne
jge
xchg
add
and
inc
add
cwtl
lock
cmpsb
test
aas
roll
push
pop
ja
bound
push
jle
popf
rcll
mov
popa
out
jb
or
xor
fsub
loop
push
movsl
push
mov
sti
xchg
addb
jb
ret
jg
fcompl
jno
pop
or
or
lea
cld
lods
and
cmpsb
ss
fsubl
test
rclb
das
xchg
push
pop
mov
movsb
adc
cwtl
mov
dec
adc
lcall
imul
pop
inc
loopne
sbb
mov
mov
mov
stos
jg
sbb
xlat
jbe
jle
cwtl
jb
stos
inc
pop
xor
push
mov
pop
fwait
add
ret
jg
fistl
jecxz
or
mov
cmp
mov
ja
outsl
adc
mov
test
mov
ss
push
mov
aas
ficoms
dec
and
lahf
in
push
xor
dec
movsl
jo
pop
fdivs
push
icebp
and
popf
jle
pop
in
add
inc
xor
mov
mov
adc
popf
dec
ljmp
mov
clc
enter
call
jnp
cltd
xchg
or
cmp
pushf
iret
or
push
push
sbb
dec
lahf
lds
sub
repz
add
fs
in
sub
cli
jmp
inc
xorb
or
sub
jmp
pop
movb
cwtl
fstps
push
shl
gs
ficompl
pop
add
je
dec
stc
xchg
mov
sub
subb
fnstcw
inc
insl
pusha
xor
add
jmp
test
lret
xchg
pop
push
mov
pop
jno
dec
jae
fmuls
bound
cmpsb
jne
mov
in
jg
jecxz
inc
shr
ret
dec
push
sbb
lds
xchg
mov
ret
mov
sbb
sbb
and
xor
or
mov
push
addb
mov
ljmp
stos
fistpl
cmpsl
add
xor
push
sbb
pop
pop
lahf
pop
lock
mov
out
and
or
fcoms
in
mov
test
add
fcompl
ficoms
add
mov
add
adc
dec
shrl
xor
ss
mov
scas
insb
sbb
in
shll
jl
repz
js
in
add
repnz
loopne
push
jbe
test
and
je
outsb
adc
mov
inc
fwait
or
leave
cmp
fiadds
in
sbb
repz
or
push
sub
add
movsl
jno
icebp
and
ret
inc
pushf
inc
push
add
xor
lods
pop
push
inc
add
or
pop
fistps
hlt
add
clc
call
test
fsubrs
fstl
adc
jo
subb
dec
test
sbb
cmp
shlb
stc
push
and
test
cmpsl
jns
dec
lods
xchg
int3
xor
fcompl
mov
push
test
fwait
jg
enter
push
loop
pop
loopne
in
es
dec
nop
jns
sahf
outsb
xor
sahf
add
arpl
shl
test
cld
mov
mov
mov
sbb
mov
mov
mov
das
js
scas
dec
ret
pop
adc
nop
in
ret
bound
das
sub
imul
jmp
and
xlat
aaa
js
jg
popa
and
pop
jno
stos
dec
xchg
push
outsl
sar
nop
mov
cmp
popa
ds
mov
or
outsl
pop
mov
cs
push
sbb
imul
push
cltd
adc
ror
xor
xor
push
add
add
jne
inc
sub
std
pop
out
cwtl
in
pop
lret
mov
sub
bswap
sub
mov
add
add
insl
fs
xor
std
mov
adcb
fisubrs
aas
xor
sbb
inc
cmp
push
std
add
loopne
add
or
or
clc
imul
mov
popf
sahf
scas
pop
or
test
loopne
adc
sbb
lret
icebp
call
cmpl
das
gs
out
xor
pop
inc
pop
dec
lods
xor
mov
xor
aam
test
or
stos
sbb
pop
and
fildl
cmp
mov
in
cld
test
sbb
lss
ret
dec
fwait
stos
repz
pop
je
adc
iret
xchg
insb
xchg
push
mov
scas
mov
sbb
inc
bound
push
insb
push
stos
push
into
inc
and
fmulp
push
mov
fidivs
test
nop
inc
or
aas
xchg
ror
repnz
fcmovb
adc
arpl
mov
fisubrl
mov
cmc
test
enter
mov
lar
daa
xchg
adc
jecxz
inc
lds
ficompl
enter
jl
mov
movsb
add
cs
push
dec
and
ljmp
add
addr16
lods
mov
lds
jae
add
xor
mov
sub
adc
enter
fwait
cmc
call
and
cmpsl
or
mov
mov
cmpsl
cmp
sub
aaa
add
icebp
pop
pop
xlat
push
mov
add
ret
fs
mull
nop
fsubr
dec
fsubr
in
out
push
adc
gs
xchg
mov
data16
jbe
xor
cld
pop
push
mull
cld
ds
int3
jae
cmp
movsl
loop
jno
add
and
and
mov
pop
pop
cmp
push
dec
les
aam
jecxz
cmpsl
dec
sbb
cld
xchg
aas
mov
inc
inc
pop
mov
and
mov
repz
repz
dec
mov
cmp
loop
movsl
test
dec
ficoms
mov
inc
cmpsl
pusha
sub
sbb
mull
dec
push
add
add
sbb
cmp
lds
sbb
pop
les
pop
shrl
outsb
lahf
call
mov
xchg
cmc
sub
xlat
icebp
pop
test
xor
mov
pop
jle
negl
sub
ljmp
push
je
xchg
jae
cwtl
xlat
push
jns
mov
loop
push
mov
test
sbb
aas
mov
repnz
mov
hlt
jo
inc
cmp
sarb
push
dec
cs
add
mov
movsl
faddl
inc
mov
push
add
loope
test
adc
mov
cmp
xor
xor
mov
cmpl
mov
scas
and
fidivrs
xlat
out
jne
jb
into
jns
mov
movsl
mov
sub
outsl
mov
lds
mov
xchg
xchg
sub
jmp
insl
popa
mov
pop
shlb
dec
repz
xor
inc
into
stos
add
xor
pop
aad
jns
leave
sub
bound
inc
sub
adc
icebp
sarl
imul
add
xlat
fs
enter
xor
jno
lret
iret
push
not
in
inc
stos
push
outsl
jae
cmpsl
mov
lret
mov
mov
adc
out
mov
inc
ljmp
dec
cmp
or
sbb
into
mov
icebp
sub
or
cmp
lods
add
xor
orl
ja
mov
mov
mov
ret
mov
popa
mov
fisubrs
lock
inc
hlt
xor
inc
dec
cmp
divb
push
xor
test
cs
cmp
js
and
fldenv
dec
fcmovu
loop
and
call
fsubr
push
xchg
out
push
or
and
inc
cwtl
sub
mov
sub
mulb
add
jl
and
lret
xlat
jmp
dec
sub
push
insb
jns
inc
mov
sahf
pop
pop
pop
mov
shll
or
push
ja
cwtl
xor
mull
xchg
mov
jae
ljmp
fs
js
cwtl
test
jae
or
push
gs
xor
shrb
push
pop
xchg
xchg
rcrl
es
movsb
jecxz
test
push
jno
push
gs
insl
or
cwtl
xor
cmp
hlt
jmp
aad
xchg
sub
add
push
les
sahf
dec
inc
popa
pushl
ret
add
addb
lcall
push
loope
loop
stos
jle
xor
push
loop
out
push
rcr
xchg
sarl
xchg
inc
xchg
xor
sbb
repz
out
sbb
xchg
cmpsb
mov
out
sti
and
xor
test
je
outsb
jae
enter
pop
mov
push
cmp
les
push
in
insb
cmp
mov
outsl
cwtl
mov
out
loope
pop
fnstcw
aas
mov
mov
mov
mov
imul
dec
test
rorb
mov
js
outsb
mov
outsb
fwait
lcall
jmp
test
or
cmpsb
stc
shrb
and
pop
add
js
sub
jo
ds
aam
out
subl
push
push
mov
mov
xor
fnsave
icebp
data16
repnz
inc
popf
lret
mov
test
ret
out
mov
pop
lahf
mov
cmp
popf
add
lock
cld
gs
mov
pop
inc
xchg
pop
scas
pop
hlt
inc
adc
lods
hlt
jmp
pop
mov
pop
pop
aad
popa
mov
add
xor
loopne
bound
jle
hlt
rcrl
cmp
sub
push
dec
fimull
cltd
inc
lret
dec
ret
ret
and
out
dec
xchg
adc
leave
add
sbb
loope
dec
pop
popa
nop
shrl
in
inc
adc
lcall
rolb
imul
add
stc
inc
popf
pop
shr
pop
jl
test
sbb
jg
mov
jecxz
inc
mov
ss
addr16
test
inc
fcomps
mov
clc
and
xor
andl
bound
mov
fldt
push
xorl
mov
les
xchg
into
pusha
popa
ficoms
jae
aam
insl
stos
xor
lea
xchg
xlat
sub
ljmp
pop
filds
lods
data16
jo
sbb
mov
gs
gs
js
cwtl
das
daa
mov
sub
and
xchg
mov
mov
imul
test
mov
sahf
mov
dec
mov
fabs
sbb
xor
mov
out
xor
sub
push
or
jne
pop
and
push
push
imul
mov
inc
adc
lret
out
in
push
pusha
cmp
push
loop
shrb
cmp
je
adc
rclb
mov
inc
and
jle
int3
add
mov
out
sbbl
pushf
xchg
lret
imul
dec
cvttps2pi
and
pop
inc
push
cld
enter
add
cmp
adc
add
or
arpl
or
or
mov
xor
gs
inc
cmp
pop
cmp
test
or
rcr
sahf
xor
ljmp
cmp
into
cmp
or
and
and
mov
roll
xor
add
sbb
xchg
jecxz
jo
leave
out
test
add
fistl
icebp
cld
int3
mov
sti
add
push
xchg
addr16
cmp
in
xorb
popa
dec
jnp
js
sbb
and
mov
or
mov
test
xchg
iret
mov
or
pop
mov
hlt
nop
cmpsb
fwait
dec
push
and
ficomps
movsb
mov
inc
jnp
scas
pop
xchg
popa
in
lea
insb
mov
cmovne
cmp
adc
push
push
gs
pop
mov
rol
mov
out
les
mov
stos
dec
cmp
and
xorb
xchg
out
dec
outsb
dec
fs
imul
popa
lods
lahf
inc
add
xor
push
clc
insl
test
clc
xchg
and
inc
xlat
js
mov
mov
imul
mov
mov
xor
and
adc
lcall
je
mov
pop
jnp
jmp
push
push
out
jge
adc
adc
fidivl
push
int
iret
push
inc
jp
dec
mov
lods
out
fwait
add
or
int
dec
ja
sub
cmp
popa
cli
in
gs
test
xchg
mov
inc
cltd
xchg
rorl
push
inc
xchg
pushf
ret
jo
inc
mov
fwait
mov
into
out
push
and
push
bound
jmp
dec
inc
jne
lds
stc
lock
pop
dec
jo
mov
mov
jmp
jge
mov
fsubl
hlt
fimuls
sti
cmpsb
adc
dec
adc
outsl
inc
lret
fstl
mov
jb
int
stc
scas
dec
jp
lret
les
push
ljmp
pop
jne
and
sbb
dec
sbb
movsb
test
sti
cli
or
fmull
mov
inc
lret
mov
sbb
xor
mov
or
movsl
movsl
sub
pop
mulb
add
out
cmp
insb
xchg
xor
jb
insl
inc
outsb
iret
xchg
pop
dec
jae
jle
pop
mov
lret
xchg
adc
fbld
aam
negb
and
ret
les
ror
mov
cwtl
test
outsl
in
add
and
pop
xchg
or
xchg
insb
jmp
aas
loope
mov
out
xchg
out
or
stc
std
mov
dec
jb
or
mov
sub
pop
dec
rcll
stc
mov
insb
mov
inc
mov
xor
push
mov
mov
sbb
sub
push
popf
sbb
push
xlat
mov
sbb
cltd
repz
and
or
adc
inc
or
sub
fldl
add
les
pop
mov
add
cmp
inc
push
ja
dec
mov
push
add
aas
xchg
jp
aaa
ja
rclb
aaa
and
sub
cmpsl
dec
cmp
cmc
mov
cs
in
sub
in
inc
xor
in
jp
mov
test
mov
cmp
ds
mov
cmp
popa
add
xor
lods
sbb
js
fs
dec
les
jmp
test
push
sti
sub
out
jno
dec
sbb
push
cmp
dec
data16
push
xchg
add
fidivrl
lods
loopne
outsb
xor
test
and
in
pop
mov
cli
cmc
pop
xchg
cmc
idivl
adc
cmp
call
push
push
push
mov
out
icebp
hlt
dec
icebp
adc
fimull
lahf
fiadds
aam
or
test
inc
and
mov
xchg
jge
sub
sbb
xlat
cmp
aad
fists
data16
xor
cmp
push
repz
in
sbb
clc
and
mov
ljmp
pop
cmpsl
push
enter
inc
lahf
jl
sub
add
repz
sub
or
popa
xorl
pop
test
sub
outsb
loop
xchg
stc
int3
ret
iret
xchg
jae
or
pop
pushf
xchg
or
inc
push
test
jge
inc
out
das
dec
sti
jmp
pop
ljmp
xchg
test
fiaddl
xor
pop
in
test
nop
add
pop
add
nop
repz
flds
ds
inc
inc
out
jg
lahf
add
das
outsl
pop
pushf
cmpsb
es
pop
mov
dec
mov
mov
dec
push
popa
push
add
xor
in
insl
loope
loopne
int
pop
or
push
hlt
mov
jmp
inc
lahf
add
sub
sbb
sbb
cmp
xor
addr16
mov
push
xchg
inc
aad
mov
pop
xor
aaa
cwtl
shll
push
loop
pop
outsl
jl
and
xorl
mov
mov
in
jb
pop
mov
shll
in
push
jp
dec
sbb
xor
jns
pop
es
push
xor
or
adc
aad
loopne
adc
jge
outsl
sbb
inc
loopne
push
or
adc
in
xchg
sub
mov
jo
push
fcompl
ljmp
cmpsb
aas
dec
clc
pop
pop
fdivl
push
sti
cld
mov
mov
ljmp
mov
fidivl
lods
clc
xchg
add
sti
or
iret
nop
mov
and
shlb
and
gs
inc
xchg
movsl
sub
adcl
rcl
test
clc
inc
cmpsl
xchg
adc
mov
dec
rorb
xchg
mov
cmpl
jnp
and
out
dec
lods
jge
dec
add
adc
mov
stos
jge
mov
add
lret
in
dec
push
std
jp
fistpll
xchg
sub
fildll
scas
ret
rorl
sub
xchg
ljmp
xchg
imul
outsb
stos
bound
fcompl
cld
push
mov
push
loop
adc
xchg
xchg
push
sub
jne
rolb
dec
cmpsb
add
insb
fsubl
inc
inc
xchg
jae
inc
inc
mov
mov
out
adc
cmpsl
jecxz
mov
pop
inc
lock
sbb
push
inc
cmpsl
push
mov
mov
dec
outsl
cmc
mov
and
sbb
out
pushl
hlt
dec
in
call
sub
std
cmpsl
inc
aad
pop
inc
stos
lahf
sbb
mov
and
dec
je
pop
stc
jno
popa
dec
xchg
xor
jg
mov
add
mov
out
xchg
fisttps
push
dec
inc
jne
shlb
vcvtpd2dq
aad
sbb
int
add
mov
sahf
out
sub
jae
adc
push
sub
pop
mov
sub
andb
xor
nop
fprem1
add
addr16
fs
loope
jp
repz
dec
xchg
cltd
sbb
and
mov
ljmp
adc
cmp
xor
outsl
pop
pop
push
mov
imul
cli
mov
movsb
inc
adc
adc
mov
shll
pop
dec
lea
shlb
dec
xorl
push
push
jbe
fld
dec
es
jnp
inc
mov
inc
sbb
mov
in
inc
hlt
std
dec
lods
sbb
push
ret
out
xchg
push
ret
jmp
mov
fmul
mov
mov
arpl
sub
cs
add
stos
loope
loope
aaa
push
mov
sub
xor
loopne
push
mov
gs
dec
jo
fsubrp
hlt
int
push
fistpl
xchg
repnz
add
xor
mov
sahf
inc
inc
fisttps
popa
add
jae
sti
xor
mov
fs
sarl
shl
sub
es
mov
mov
test
sti
imul
mov
and
push
pop
cmp
add
sub
inc
leave
loopne
xchg
mov
subl
mov
mov
push
les
jo
xlat
push
clc
aad
outsl
xor
cwtl
jl
adc
in
lods
inc
sub
mov
addb
jg
xor
cmp
mov
mov
clc
pop
mov
or
cmp
pop
nop
mov
cmp
xchg
pop
cmp
shrb
dec
inc
icebp
xchg
nop
mov
orb
std
out
lret
shr
mov
push
fbstp
movsl
push
xchg
push
lcall
jl
fstpt
out
jg
cmpsb
test
cmp
loop
jp
and
testb
jno
ret
or
outsl
dec
xor
mov
pushf
ljmp
adc
dec
jb
clc
lea
push
lock
and
pusha
clc
repz
mov
or
mov
sbb
cmp
imul
dec
in
jp
inc
movsb
popf
shl
addl
xor
cmpsl
xchg
stc
dec
aad
outsb
mov
test
roll
adc
adc
fdivl
hlt
jns
jnp
push
pop
in
lcall
es
mov
adc
cmp
aas
mov
push
jecxz
iret
adc
or
xchg
adc
and
push
sub
mov
enter
rcll
es
mov
aad
and
cmpb
mov
clc
into
dec
test
pop
add
sbbl
dec
add
lock
cmpsb
dec
cld
adc
jle
adc
mov
stos
cwtl
or
fildl
roll
pushf
or
in
daa
scas
scas
iret
roll
xchg
fwait
xchg
push
call
lret
push
cltd
repz
cmpsl
xor
xorb
adc
movsb
adc
insb
add
xchg
cmp
push
adc
scas
mov
das
xor
into
arpl
pop
aas
in
push
ret
push
enter
xor
insb
idivl
cmp
leave
push
xor
ret
push
repz
push
lret
adc
mov
in
rolb
jno
pop
fmuls
js
mov
mov
or
lahf
dec
dec
sbb
subl
pop
push
adc
push
push
xchg
fcmove
mov
outsb
xor
and
lret
dec
aad
int
lods
shlb
jne
decl
xchg
xlat
fisttpl
inc
in
push
mov
sti
sub
pop
out
or
pop
loope
inc
repz
jp
push
mov
cmpsb
pop
pusha
sub
sarl
mov
push
mov
stos
sbb
inc
int3
arpl
cmp
sbb
xor
repnz
test
out
sub
frstor
mov
dec
in
data16
outsb
adc
jge
lods
out
and
mov
or
hlt
stc
lret
mov
jecxz
push
nop
or
cmpsb
cmc
adc
adc
push
xor
rorb
or
and
dec
pop
push
les
cwtl
mov
dec
jo
mov
push
xor
adc
jns
scas
sbb
scas
push
in
mov
loope
loopne
sbb
iret
sub
cld
xor
ljmp
xor
xchg
les
xlat
std
mov
adc
bsf
and
and
or
pop
test
push
testl
pop
out
andl
cltd
hlt
cwtl
mov
sbb
sub
lods
mov
or
inc
repz
mov
pop
xchg
xor
xorl
aaa
dec
add
inc
test
jmp
pop
mov
mov
xchg
dec
pop
push
jmp
lret
mov
xchg
subb
movups
iret
mov
add
fists
xor
fisttps
cs
mov
cmp
xor
out
push
dec
mov
frstor
pop
cmpsl
sarl
outsl
jns
je
lock
dec
push
cmc
adc
jg
xor
sub
xor
pop
pushf
push
inc
push
sub
push
pop
imul
inc
dec
mov
inc
daa
mov
rcr
aad
dec
jbe
fcmovne
outsb
mov
ss
and
enter
sbb
sub
inc
inc
jno
dec
mov
mov
ljmp
fsubl
mov
sahf
dec
cs
aad
pushf
inc
cmp
stos
iret
add
inc
sbb
jne
stc
mov
insl
std
push
jmp
cli
cld
push
mov
dec
lds
mov
mov
int
inc
mov
sahf
outsl
xchg
or
aad
fwait
and
sbb
test
cltd
imul
pop
lea
jmp
jae
sub
mov
sub
jns
mov
sub
sbb
sub
push
rolb
jno
sub
repnz
jle
xchg
cmp
xchg
inc
out
inc
mov
dec
imul
add
and
xchg
or
cmpsb
jg
jae
gs
pop
cmp
iret
xor
jecxz
mov
icebp
mov
or
and
lahf
push
or
push
mov
mov
push
pop
out
imul
jle
mov
fstpl
sub
xlat
dec
dec
mov
fldcw
and
ficoms
popa
in
push
fwait
lock
sbb
ja
lods
test
jmp
adc
add
push
dec
in
lods
lods
sub
jb
dec
popf
lea
iret
push
fneni(8087
add
mov
jne
xchg
adc
dec
out
fiaddl
daa
inc
or
cli
cs
xchg
out
rcll
popa
lret
add
add
push
mov
dec
inc
mov
insb
and
or
scas
enter
repnz
dec
popf
or
cwtl
mov
cmp
mov
mov
mov
cli
dec
ss
mov
std
inc
push
mov
sbb
popa
sub
cli
fbstp
decl
js
and
or
arpl
cwtl
iret
mov
mov
stos
dec
cs
test
pop
add
dec
jge
mov
ss
jle
repnz
dec
mov
pop
nop
fwait
hlt
adc
pusha
mov
dec
ret
stos
test
or
shrb
xor
xor
lcall
xchg
add
out
addr16
mov
out
and
fimuls
test
shl
sbb
jns
scas
nop
pop
and
xchg
cmp
nop
ss
pop
xchg
and
out
pop
mov
loop
xlat
mov
add
iret
rep
sbb
mov
dec
lret
stos
fsubrl
into
jae
imul
add
mov
int
dec
stc
jne
or
fmulp
sub
int
mov
fsubrs
pop
mov
pop
cmp
in
mov
jb
and
cld
psubusb
lock
xor
cmovo
and
subb
fdivrs
ljmp
inc
jle
push
inc
sub
lahf
sbb
gs
mov
jge
aas
inc
add
cwtl
dec
mov
inc
orb
pop
adc
mov
dec
cmc
mov
mov
mov
mov
cld
cltd
xchg
call
loope
stos
mov
xchg
jno
inc
mov
cmp
mov
fidivrs
es
adc
fsubrs
mov
adc
sbb
in
add
dec
notl
pop
xchg
ja
shll
fldt
and
add
or
add
ds
adc
sbb
mov
adc
les
rolb
scas
pop
xlat
pop
bound
cmp
rol
pop
or
jno
or
in
cmp
inc
sbb
mov
lcall
sbb
pushf
mov
dec
or
stc
hlt
cmc
pop
rclb
imul
jl
cmp
jnp
add
xchg
ss
jno
addr16
xor
sub
sbb
inc
lahf
test
inc
outsl
loop
movsl
fcmovu
rorb
test
cmp
push
mov
sbb
pop
xchg
add
xchg
push
mov
or
movsb
cltd
mov
pusha
jmp
xlat
data16
out
ss
mov
xchg
sbb
add
jge
dec
jmp
fldpi
and
fs
out
sub
scas
fsubs
adc
ds
filds
test
xor
pop
outsl
inc
push
fbld
xor
sahf
mov
mov
insb
cmp
dec
imulb
ljmp
or
and
mov
sub
test
xor
or
and
xor
sti
pusha
in
test
pop
sbb
and
rorl
mov
xchg
je
dec
mov
lods
xor
cmc
pop
and
orb
icebp
mov
gs
in
fldenv
imul
in
popf
sar
out
lahf
arpl
leave
js
pop
mov
sub
int
ljmp
leave
pop
mov
cs
test
pop
and
xchg
sbb
imul
aas
aam
push
mov
les
imul
jmp
adc
mov
cmp
ret
mov
xor
scas
jbe
mov
sbb
icebp
dec
or
pop
mov
push
cmpsl
arpl
or
mov
sub
hlt
lods
mov
cmp
fcomi
push
dec
jo
adc
addb
mov
push
and
les
push
dec
jmp
sub
push
xor
push
xor
inc
jmp
shll
sub
cmp
mov
push
xor
lods
and
cmp
daa
add
aas
xchg
add
sbb
mov
push
push
xchg
or
xchg
ljmp
add
jmp
xor
xor
scas
outsb
cld
ficompl
movsl
test
aas
lds
imul
xor
mov
inc
mov
xchg
xchg
fnstsw
xor
xchg
lods
jb
dec
das
fs
out
insb
lret
xor
cmp
push
or
leave
cmp
icebp
dec
daa
js
repz
daa
add
push
adc
sbbb
push
xor
pushf
mov
or
sbbb
sub
xor
gs
inc
in
cmpsb
sahf
xchg
pop
xchg
pop
lods
sbb
and
lds
fwait
ret
jbe
test
xchg
lods
or
mov
lea
lea
repz
out
xor
and
cmpsl
int
sahf
add
inc
test
push
xchg
out
pop
mov
xchg
dec
inc
rcrb
mov
into
adc
push
pop
dec
mov
scas
jne
inc
insb
imul
inc
jae
lods
loopne
fs
cli
ret
dec
add
xchg
add
fmulp
aad
mov
xchg
push
inc
aam
mov
into
and
clc
pop
pop
or
ljmp
stc
inc
mov
adc
adc
insl
cmc
mov
cmc
jle
lods
sbb
lcall
imul
xchg
sbb
xlat
call
cltd
dec
lret
inc
xchg
sbb
jle
mov
jmp
leave
sub
enter
mov
dec
data16
nop
out
or
dec
cmp
mov
xor
push
mov
in
stos
test
and
iret
jg
sub
je
dec
inc
dec
push
fsubl
sub
jecxz
test
xor
int
pop
ret
fidivl
push
hlt
sahf
fstpl
mov
leave
ljmp
inc
lahf
or
mov
and
or
push
cmp
je
sbb
dec
sbb
pop
popa
mov
gs
std
adc
push
gs
lahf
jg
pop
pop
frstor
outsl
pop
sbb
ds
mov
fisubrl
fimull
leave
push
push
push
sbb
and
fidivrs
jo
jo
std
addr16
xor
roll
inc
or
daa
nop
es
mov
call
repz
add
push
sbb
mov
flds
mov
outsb
xchg
cmp
xchg
sub
xor
sbb
adc
test
outsl
xchg
scas
cmpl
push
pop
inc
lret
jmp
xchg
repnz
inc
xchg
aad
cli
mov
mov
sub
in
jge
cmc
lods
sahf
cmc
adc
in
ja
insb
and
jge
andl
lods
sub
cs
add
insb
sahf
xchg
gs
repz
into
fucomp
sub
int
lods
lcall
mov
cmc
test
lea
shlb
jno
sub
sub
sbb
jp
leave
ret
mov
ja
and
pop
adc
jp
xorb
and
pop
fld
ss
dec
dec
gs
fadds
add
xor
mulb
cld
cmp
adc
es
sbb
dec
or
inc
test
xor
and
bound
push
mov
push
les
sub
das
lret
gs
cmp
xchg
pop
and
in
lret
inc
aaa
push
push
repnz
mov
clc
pusha
das
loopne,pt
mov
mov
cs
inc
mov
add
lods
jle
in
insl
mov
xchg
loopne
mov
mov
push
inc
push
std
pusha
ds
movsb
jp
jns
jge
rcrl
insb
xchg
cmp
ret
mov
xchg
fstl
outsb
or
sbb
add
or
push
mov
cwtl
test
dec
adc
mov
sbb
sbb
jmp
xchg
and
sbb
in
jno
aam
into
push
in
and
addr16
or
xor
orl
mov
insb
icebp
add
push
inc
decl
cmp
xchg
movsb
stc
sbb
push
lahf
sub
cld
mov
pop
xor
or
mov
cltd
loop
mov
sub
sbb
out
icebp
push
test
ds
mov
cmp
inc
push
rcll
mov
mov
mov
add
pop
lret
xor
prefetch
push
rclb
or
sbb
cmp
jmp
jno
adc
loopne
pop
add
xor
loop
lcall
iret
jnp
imul
dec
cld
cmp
add
les
shrb
mov
addl
scas
scas
cmpsl
push
repz
divl
fwait
lods
fcmovu
xchg
jg
cmp
pop
cmp
leave
or
lock
stos
mov
stc
addr16
ficoms
movsl
dec
xchg
and
mov
lock
addb
call
aas
cmp
call
and
mov
sbb
fwait
insb
add
add
push
mov
jge
in
and
or
mov
ret
mov
into
xchg
add
lcall
push
vpsubsb
sub
call
jp
or
out
stos
xchg
jb
aas
mov
push
push
out
pop
pop
jmp
pop
add
test
test
jmp
inc
sub
aaa
fstl
dec
push
inc
pop
sbb
fstps
xchg
sub
inc
and
es
pop
jp
pop
and
pop
pop
pop
mov
mov
icebp
xor
jg
sub
mov
jnp
outsl
shl
cs
mov
push
cmpb
mov
ror
mov
add
jns
push
mov
mov
rcll
ljmp
jp
adc
push
ja
cmp
loop
pop
lods
xor
pop
pop
mov
in
leave
pop
addr16
push
addr16
pop
popa
adc
ficoml
pusha
sarl
mov
pop
test
xor
fdivr
lcall
ret
mov
out
push
fmul
imul
imul
in
sub
mov
cmp
out
pop
jb
pop
cmp
and
dec
adc
jg
inc
dec
insb
or
push
fcompl
test
mov
mov
mov
mov
in
xorps
icebp
pop
jo
and
and
mov
sahf
lods
daa
cmc
jle
push
cmpsb
ret
outsl
daa
test
or
jmp
adc
and
cmp
and
sub
xlat
jae
or
mov
inc
aaa
push
lock
push
call
xchg
sbb
mov
outsb
sti
sti
jae
js
or
lret
mov
sbb
mov
mov
cmp
jae
movsl
mov
pop
loopne
fadd
or
jmp
scas
mov
out
icebp
cmp
call
jno
inc
aad
cmp
mov
push
rol
adc
cmp
shrb
in
mov
hlt
cmpsl
xchg
ljmp
iret
in
pop
in
lock
lret
push
xchg
xor
in
add
inc
xor
sti
ja
pop
sub
inc
sahf
jecxz
jmp
pop
mov
or
loopne
mov
pop
push
mov
add
adc
daa
cmp
loope
cmc
mov
push
ret
andl
popa
dec
mov
call
orb
stos
push
sbb
sub
push
cmp
iret
add
decb
xor
sahf
sahf
orb
lock
clc
loope
jge
mov
and
dec
pop
jno
fbld
xchg
sbb
xor
pop
cwtl
jne
and
scas
xchg
dec
jnp
pop
and
repnz
popf
or
and
xchg
cmp
leave
mov
mov
mov
adc
orl
mov
sub
sub
mov
loop
sti
add
test
lds
sub
dec
movsl
ljmp
mov
pop
xchg
insl
dec
push
mov
add
loope
lods
movsb
mov
jge
xor
xor
test
dec
call
sbb
outsl
movsl
in
cmp
mov
jp
and
dec
jle
adcb
sti
in
mulb
aaa
jae
jb
lcall
aaa
add
sub
push
mov
push
dec
ja
or
fstpl
push
jne
inc
fsubrl
push
fimull
sti
mov
mov
test
or
pop
adc
mov
scas
fstl
push
add
test
sbbb
inc
sbb
sbb
stos
das
jg
sbb
jl
test
push
inc
jmp
mov
add
pop
jb
pop
adc
lahf
push
arpl
mov
and
push
inc
mov
loope
xchg
jb
imul
jnp
add
and
sub
call
insb
std
adc
pop
insb
sub
add
je
gs
xchg
movsl
hlt
sahf
scas
popf
cmpsl
xchg
call
imul
inc
add
mov
sahf
dec
cltd
push
in
popf
test
out
ret
add
pop
pop
jo
jmp
jp
and
ljmp
sub
scas
adc
icebp
adcl
bound
adc
xchg
rcll
std
mov
out
out
sbb
leave
or
xchg
dec
call
rclb
xor
or
and
out
out
test
lret
pop
mov
or
adc
adc
sub
mov
push
xor
pop
in
jg
inc
and
fdivrp
pop
cltd
into
in
push
scas
ds
dec
imul
add
pop
sbb
xchg
jbe
sub
mov
cmp
movups
test
pushf
gs
shrb
pop
mov
js
sbb
nop
push
out
inc
test
pop
ja
shll
dec
lds
xchg
mov
jmp
mov
xchg
js
popa
push
jmp
jle
xchg
xchg
mov
add
dec
push
shll
out
inc
idivb
mov
mov
cmp
xchg
mov
jae
ljmp
cwtl
fstpl
movsb
jno
sub
fwait
dec
mov
mov
arpl
mov
mov
inc
insb
aaa
and
pop
pop
subb
les
out
mov
sub
jo
jl
pop
into
movsl
pop
jecxz
mov
dec
aad
adc
nop
fbld
jnp
adc
pop
mov
lea
lret
out
loope
xor
adc
ret
imul
sub
sbb
popa
in
sbb
jle
xchg
nop
or
js
or
enter
inc
cli
push
lock
lahf
xchg
mov
out
or
lret
xchg
jnp
rcrl
out
arpl
cmp
clc
cmp
rcr
in
cmpsl
cmp
and
mov
mov
jmp
jnp
out
mov
sbb
mov
bnd
mov
pop
cld
jmp
jo
test
into
dec
out
xchg
subb
ja
inc
jnp
int
mov
dec
pop
idivl
jmp
push
in
icebp
dec
and
sub
out
xchg
xchg
or
sahf
adc
ret
adc
or
mov
xchg
popa
dec
lds
xor
in
and
mov
je
mov
add
jl
js
xor
dec
mov
dec
test
pop
and
pushf
aas
movsl
cmp
cli
pop
xchg
inc
pop
xchg
daa
lods
out
sub
mov
xchg
mov
imul
in
or
or
lret
fistl
fisubs
cltd
dec
or
ljmp
add
cmp
sub
out
mov
popa
pop
inc
cltd
cmp
xchg
int
das
mov
rorb
pop
fcomps
loopne
in
std
dec
inc
orb
mov
movsl
mov
mov
mov
mov
sbb
pusha
lock
push
lds
xorl
sarb
pop
sbb
mov
xor
push
inc
iret
mov
sub
push
rcll
mov
movsl
test
data16
insl
mov
xor
clc
je
push
mov
pushf
and
jnp
mov
adc
mov
mov
test
arpl
icebp
loop
pop
jge
aas
out
stos
imul
pop
lock
idiv
pushf
mov
stc
push
sarl
mov
mov
xchg
jns
stos
jno
jbe
into
dec
mov
fucom
xor
sub
loope
xor
jb
xor
xchg
xor
in
ss
lods
rorl
jb
mov
sbb
out
out
push
mov
xchg
add
js
mov
inc
lea
mov
add
popl
pop
out
popa
cltd
and
cmpl
or
xchg
push
dec
adc
sti
xchg
lock
pop
movsl
and
psubq
mov
stc
jb
push
rorb
sti
pushf
cmp
subb
imul
out
push
push
ds
cmp
sub
je
sbb
iret
fldenv
add
sbb
pop
xor
adc
nop
sub
int
lock
and
add
push
ds
mov
sti
lods
sbb
repnz
mov
xchg
push
mov
sahf
and
pop
jge
xor
inc
xchg
ret
les
idivb
shl
out
or
xchg
pop
clc
or
or
ds
inc
clc
movsl
out
push
int
js
sbb
lea
vprotb
xchg
call
fbld
xor
xchg
pop
mov
xchg
jnp
ret
xchg
jecxz
lahf
push
and
repz
mov
mov
ljmp
imul
pop
pop
inc
inc
xchg
jl
scas
sub
sti
enter
add
mov
and
cwtl
mov
dec
add
push
pop
cli
mov
add
adc
mov
xor
stc
pop
cmp
xor
jne
lods
xor
je
addr16
lret
lea
loope
push
xor
push
idivb
lret
imul
sbbb
sbb
lret
mov
rep
mov
bound
inc
jecxz
aas
cmp
outsb
jg
push
add
dec
data16
mov
xlat
sub
out
clc
sbb
mov
or
in
adc
cmpsl
dec
andl
push
outsl
addb
mov
or
or
pusha
rcll
addb
push
push
imul
dec
xchg
aam
pop
repz
loop
cmpsl
out
sub
jge
xchg
cvtpi2ps
push
cmpsl
je
xchg
xor
cmp
xchg
and
pop
arpl
xor
adc
cmpsb
jno
adc
xchg
out
and
outsb
daa
mov
lret
jle
inc
xorb
enter
or
push
xor
mov
mov
into
int3
jnp
sub
add
xlat
add
inc
loope
icebp
mov
pop
jae
and
mov
mov
inc
mov
push
aaa
loop
fisubrl
xchg
pop
das
or
xor
push
mov
fs
dec
jnp
test
gs
fs
clc
test
mov
jle
sub
fcompl
daa
push
gs
popa
jecxz
addr16
xchg
mov
push
ds
loopne
fadds
inc
xchg
sbb
fcoml
cmpsl
stos
neg
sub
repz
cmp
xor
mov
and
adc
inc
enter
or
arpl
sar
loop
add
add
stos
lea
pop
xchg
xchg
pop
nop
fs
pusha
add
mov
fisubs
pushf
jb
nop
fisubl
or
xchg
xchg
ret
cmp
decb
repz
je
jbe
dec
aas
cld
and
out
cld
ret
mov
cwtl
js
int3
push
popa
insl
xor
rolb
pushf
int3
lods
add
xor
xchg
jb
inc
mov
std
ror
sbb
test
les
ret
iret
push
outsb
ja
sbb
mov
and
sub
test
ja
push
sbb
out
aas
cmpsl
iret
clc
in
sbb
aas
adc
mov
or
jle
jmp
mov
inc
mov
jno
adc
jnp
cmp
inc
jmp
into
sbb
xchg
xor
sbb
scas
jmp
adc
mov
repz
sbb
stos
sbbb
data16
mov
jb
add
mov
test
inc
and
je
xlat
and
outsb
aas
imul
lret
pop
shrb
jecxz
inc
test
xchg
insl
or
sarb
add
sbb
insl
movsb
test
aas
arpl
std
fsub
inc
out
lods
lds
jbe
stos
dec
out
lock
negl
enter
mov
jb
inc
cmp
fnstcw
in
lds
mov
adc
dec
cmp
jno
cmc
xchg
mov
ljmp
fimuls
cmp
add
pop
call
cmpsb
jnp
sbb
out
imul
ja
and
add
imul
mov
push
rcl
push
popa
push
out
ret
pop
and
outsb
push
adc
inc
or
mov
jb
iret
push
in
mov
mov
lret
outsl
xchg
testl
rcll
mov
jb
adc
popa
lds
mov
pusha
sub
push
adc
fcompl
mov
inc
test
mov
aaa
mov
dec
mov
cmp
jnp
addl
lcall
add
lods
xlat
mov
test
dec
xor
mov
jbe
fbld
ds
lock
pop
xor
pop
movsl
clc
push
cwtl
dec
aam
add
loopne
dec
cmc
inc
jp
jns
sbb
pop
cltd
jo
xchg
mov
movsb
cltd
add
mov
in
cld
push
ret
adc
jno
cmp
lret
jo
push
pop
dec
pop
sub
cmp
popa
jp
cmp
cwtl
xor
sti
cltd
scas
insb
pop
and
addr16
fwait
jnp
push
cmp
inc
and
mov
ret
cltd
sub
lret
mov
in
adc
push
mov
add
xchg
clc
sarl
cli
scas
sub
rcl
sarl
xchg
cwtl
dec
mov
icebp
cs
cmp
fsubl
lea
stos
popf
jmp
inc
incl
push
cltd
adc
mov
xchg
into
push
addl
fmul
fcmovb
and
mov
repz
ret
mov
into
es
outsb
adc
dec
aam
call
loopne
xor
sbb
xchg
nop
test
lret
sbb
mov
mov
or
test
lret
aad
stos
mov
dec
stos
mov
pop
in
push
xchg
ficoms
adc
mov
adc
loope
push
mov
mov
jecxz
inc
loope
jae
es
mov
fimull
cmp
add
cmc
popw
add
int3
lods
add
or
cmpb
xchg
scas
jecxz
addr16
inc
ret
jecxz
jno
imul
jmp
xchg
mov
orb
mov
out
call
mov
lea
lret
mov
lret
add
and
sti
jae
test
ja
push
sarb
js
orl
mov
dec
out
xchg
scas
xor
lock
incb
out
push
data16
outsl
icebp
insb
pop
push
push
mov
and
and
das
lahf
fdivr
or
pop
xchg
mov
out
or
cmpb
jge
jo
push
jnp
add
ret
mov
jbe
mov
fs
test
add
push
add
js
mov
or
xor
mov
cli
arpl
mov
fnsave
imul
stc
mov
sbb
jg
jmp
push
pop
adc
lods
mov
jle
iret
shl
fwait
cld
jp
add
movsl
xor
xor
out
imul
add
cmp
mov
or
mov
and
add
fidivs
sti
mov
xor
out
pop
cmp
pop
xor
mov
mov
pusha
dec
in
cmp
js
jne
jo
add
mov
mov
data16
in
xor
add
inc
inc
mov
mov
pop
sbb
and
jecxz
subl
push
arpl
cltd
cmpsb
hlt
bound
fnstsw
xor
andl
pop
fnstenv
dec
xchg
xchg
jo
mov
dec
mov
jg
das
adc
scas
loopne
loope
sub
xor
fiaddl
ss
shlb
es
shlb
push
dec
cld
dec
sbb
jo
shl
xchg
or
jp
stos
pop
or
mov
stc
pop
arpl
sbb
ficomps
and
sbb
mov
rcrl
mov
or
clc
shl
jno
lcall
xchg
in
lcall
dec
js
mov
cmp
call
sbb
dec
jp
rorl
fidivs
fwait
push
dec
repz
fstpt
mov
cmpsb
cltd
xlat
mov
aad
mov
lcall
xor
insl
rol
js
shlb
pop
rcll
insb
adc
add
pop
lret
mov
pop
inc
cs
stos
mov
mov
mov
xchg
aad
pop
cli
neg
fwait
fs
or
bound
outsb
aad
mulb
mov
push
outsl
aad
inc
mov
xlat
es
or
mov
int3
sub
cmpsb
add
mov
jp
ret
vmread
lea
push
adc
mov
mov
inc
in
mov
movsb
add
rclb
or
mov
mov
ret
mov
xchg
xchg
mov
adc
cs
cmp
xchg
ss
mov
sbb
mov
adc
dec
add
mov
adc
outsl
fxsave
ret
xchg
ds
adc
jge
ljmp
cmpl
imul
stc
jl
add
das
pop
fisttpll
xchg
xor
aaa
sbbl
sarb
movsl
ret
push
mov
lret
jecxz
xchg
jp
dec
popf
add
push
add
mov
lea
mov
add
hlt
bound
sub
je
popa
pushf
test
inc
out
xchg
repnz
mov
ret
daa
movsl
mov
movsl
jo
xchg
cltd
adc
dec
inc
loop
cs
and
sub
cltd
lcall
pushf
add
popf
jg
gs
paddw
mov
mov
push
inc
in
or
mov
ss
out
xchg
adc
sarb
lcall
sar
adc
fsubrs
aas
fsubrp
sub
mov
insb
adc
sti
xor
out
daa
sbb
sub
mov
xchg
xchg
mov
rcll
movsb
cmpsl
rclb
dec
dec
sub
dec
dec
sti
ret
mulb
mov
inc
gs
je
in
test
jge
jae
outsl
cmpsl
push
inc
cmp
mull
aaa
or
xchg
stos
stos
add
sub
ss
push
push
or
jne
or
mov
jb
mov
in
mov
ffree
fistps
mov
hlt
arpl
stc
jle
and
adc
insb
movsl
sbb
out
jecxz
ds
ja
pop
push
xchg
in
aad
cmc
adc
fs
dec
fcoms
add
jge
dec
sub
dec
cmc
int
mov
dec
cmc
repz
ja
lds
fildll
cmp
xlat
lods
push
jmp
cmovne
es
xlat
add
mov
push
jg
pop
mov
jne
movl
jl
xor
cmp
jne
and
cmc
insb
ret
bswap
push
push
jge
or
mov
sbb
stc
jbe
mov
ds
bnd
cmpsl
aam
repz
inc
std
rcll
fwait
jl
ljmp
aas
orl
iret
cld
mov
add
inc
sub
inc
test
xor
jb
push
cmp
inc
insb
or
hlt
cmc
adc
jge
mov
daa
fwait
sub
popf
xor
xchg
popf
and
sbb
movsl
add
std
inc
adc
leave
xchg
aaa
sbb
adc
sbbl
cmpsl
cmp
clc
inc
push
mov
int3
mov
jnp
dec
inc
js
and
fdivp
sbb
mov
pop
or
xchg
lahf
dec
push
and
push
xchg
mov
movb
pop
sbb
and
xor
mov
andl
fadd
aad
cmpb
dec
movsb
xchg
cmpsl
ror
insb
aad
jg
icebp
popf
jne
mov
sub
pusha
and
test
or
inc
push
mov
cmp
dec
arpl
sub
rorl
shll
fucom
xlat
shll
js
loop
xchg
in
jecxz
jo
data16
adc
mov
sbb
lret
xchg
stc
mov
call
dec
clc
jge
cmpsb
ret
jo
and
lret
adc
jns
or
jecxz
cmpb
lds
xchg
pop
push
scas
mov
orl
into
jno
sbb
xchg
jb
mov
cmpsl
xor
mov
sbb
pusha
jne
leave
mov
aas
mov
xchg
push
idiv
dec
push
inc
repnz
popf
xlat
sti
mov
cmpsb
pop
mul
sub
xchg
loopne
inc
mov
lock
sahf
inc
xor
jge
and
cmp
cs
subb
insl
push
sbb
dec
xor
push
in
dec
and
push
sbb
stos
icebp
cmp
loopne
jle
push
int3
sub
cmpb
cmp
cmp
jbe
popf
add
jnp
hlt
outsl
adc
push
and
and
jnp
xchg
inc
mov
sub
aaa
adc
adc
pop
mov
pop
pop
mov
roll
xor
sub
dec
enter
fdivr
inc
xchg
int
mov
cmp
fcoms
pop
shl
or
mov
cld
loop
rcr
cmp
nop
enter
pop
sub
ret
popf
in
repz
xchg
es
adc
out
ret
lret
aaa
enter
dec
loope
xor
fs
pop
sbb
jg
xchg
pop
mov
out
jb
inc
rorl
push
movsb
jle
lea
shrb
xor
mov
repz
mov
rcrb
xor
xchg
scas
push
movswl
aaa
adc
js
in
fdivs
sbb
test
call
sub
in
cmp
insb
out
arpl
pop
jge
test
sbb
rorl
fsubrp
aas
adc
jbe
fstl
lcall
sub
sbb
rol
outsb
and
mov
lret
lds
movsl
pushf
mov
mov
pop
jb
in
mov
outsb
jl
hlt
and
lods
int3
xor
mov
xchg
gs
test
addr16
jnp
mov
or
mov
ret
jge
or
cmpl
aaa
lock
test
bound
xchg
rcll
icebp
adc
mov
or
mov
sub
int3
cmp
xchg
and
cli
jns
adc
iret
outsb
int
push
mov
jp
and
loopne
addr16
xchg
mov
and
dec
mov
cmp
mov
mov
mov
add
lret
in
int
and
cmp
xor
push
mov
push
add
push
ljmp
cmp
add
mov
cmp
dec
push
fidivrs
mov
mov
cmp
push
pop
mov
test
mov
fiadds
stos
in
test
jnp
push
int3
out
lea
mov
int
lods
imul
xchg
jl
jae
inc
clc
jmp
pop
ret
cwtl
test
ret
sbb
test
sbb
jmp
das
sub
cmp
mov
sarl
iret
sbb
add
push
cld
mov
fsubl
pop
sbb
loop
loope
popf
cwtd
push
and
pop
mov
popf
out
sti
arpl
aas
call
push
xchg
dec
xchg
mov
aam
push
sub
outsb
enterw
or
iret
sbb
orb
add
push
dec
ficoms
in
mov
js
and
mov
sub
xor
dec
sub
in
xor
add
addps
loopne
xlat
cwtl
sarl
lods
in
pop
mov
fcoml
jb
inc
xchg
lods
cld
bnd
loop
mov
fdivs
incb
fidivrl
add
and
adc
mov
mov
cmp
pop
js
enter
mov
pop
in
mov
repz
push
fdivl
mov
push
and
push
cltd
aas
jb
or
popa
dec
popa
clc
lea
data16
cld
cmp
cmp
or
inc
xchg
dec
pop
fsubrs
add
mov
adc
or
and
es
mov
roll
xchg
adc
xchg
cld
js
ljmp
test
xlat
cmp
stos
into
ret
insb
push
dec
iret
test
mull
xor
testb
cltd
out
jns
lock
sbb
xor
cmp
pushf
pop
sub
popa
int3
sbb
stos
adc
sub
fstps
sbb
or
sub
pop
dec
dec
xchg
xor
sub
ljmp
cmc
xchg
pop
or
sub
repnz
jns
insb
clc
dec
test
adc
xchg
shll
pop
push
imul
pop
adc
push
and
lods
or
pop
or
cltd
jnp
das
inc
cltd
daa
xchg
xor
aam
pop
cmp
lods
xchg
iret
inc
jnp
ljmp
shl
into
xor
popa
sbb
fstpt
push
or
imul
pop
jg,pn
sub
add
jbe
adc
into
or
pop
lcall
out
or
push
add
cmp
sub
and
scas
jne
les
movsb
nop
xlat
pop
xchg
outsl
testl
inc
fsubs
pop
xor
sbb
dec
sub
xchg
es
in
out
test
pusha
out
fsubl
push
mov
jecxz
and
jo
ds
roll
in
std
adc
xchg
div
inc
adc
pop
mov
into
xor
dec
mov
sub
pusha
jb
jne
push
xlat
cmpsl
lods
int3
or
adc
dec
in
inc
and
iret
push
stos
test
leave
or
and
lret
mov
jo
ficoml
xor
sbb
cmp
push
mov
mov
xchg
das
fucomip
cli
mov
jnp
mov
sbb
add
lret
or
repnz
aam
fldl
icebp
lock
in
jecxz
out
lret
mov
inc
enter
popa
add
mov
jmp
sarl
push
pop
iret
inc
pop
or
insb
adc
and
add
icebp
xor
mov
pop
lcall
repnz
inc
fwait
and
sahf
fwait
stos
push
fldl
aam
rcll
pop
jo
ds
push
or
mov
clc
push
pop
scas
pop
and
xchg
sub
xor
bound
inc
ret
icebp
pop
outsb
enter
je
aas
js
pop
jne
in
out
sbb
lds
jne
and
ror
lahf
sub
mov
cmc
insb
lods
cld
jmp
push
or
fwait
mov
cmp
cmpsb
jle
mov
or
mov
popf
pop
mov
xchg
or
jns
mov
push
ljmp
mov
sarl
cmp
nop
push
pop
xorb
outsb
ds
xchg
andl
ret
mov
ret
jle
outsl
scas
cmp
imul
popa
daa
pop
add
xor
sub
inc
pop
add
addr16
jp
pop
push
fsubrl
pop
shlw
addr16
dec
stos
sar
mov
scas
cmc
dec
andl
insb
test
ret
sbb
cmp
loopne
inc
data16
popf
pop
fwait
cmp
push
ret
pop
addr16
fimull
repz
push
mov
pop
add
clc
in
jns
and
les
pop
cmp
mov
decl
and
adc
orl
ss
cmpsl
lds
add
jp
jbe
test
mov
add
mov
mov
loop
sti
dec
jb
fsts
int
mov
cmp
int3
push
clc
push
push
outsb
pop
test
inc
jno
movsl
pop
or
xor
pop
cmp
cli
xchg
inc
sbb
faddl
repz
jae
sub
adc
sbb
and
add
xchg
xor
pop
sti
pop
mov
cmpsl
xchg
xchg
fcoml
sub
pushf
mov
lds
push
jbe
push
and
lret
sbb
lcall
xchg
jle
pop
push
lea
fwait
out
inc
inc
str
insl
xor
enter
dec
adc
mov
jns
dec
xchg
push
jmp
inc
xchg
sbb
sbb
mov
mov
inc
jge
int3
mov
cmp
aam
push
addr16
in
loop
mov
in
movl
fisubl
push
jl
aam
adc
jae
xor
lock
jge
ror
inc
int
mov
lea
pop
mov
int3
nop
out
andl
dec
sub
pop
out
sbb
push
mov
dec
jne
inc
xor
inc
jp
rorl
sbb
fwait
testb
and
sub
mov
pop
pop
or
arpl
add
push
adc
repnz
outsl
xchg
jnp
std
dec
cmp
fildll
pop
mov
pusha
xchg
imul
mov
dec
adc
roll
test
cwtl
inc
jge
andb
pop
push
inc
mov
cmp
adc
andl
div
sbb
jbe
dec
mov
add
cmp
inc
call
sbb
movsb
mov
pushf
push
mov
clc
pop
push
pop
sti
pop
dec
pop
mov
pop
pop
adc
test
fwait
and
xor
fs
sahf
dec
dec
rcll
int
mov
jg
mov
cld
ffreep
dec
mov
dec
add
push
pop
fnstenv
cmp
pop
and
cmpsb
mov
mov
sub
jno
lods
hlt
xor
jmp
adc
imul
mov
aaa
pop
insl
movsl
mov
ret
adc
jecxz
dec
cmc
jnp
addb
dec
pop
data16
sbb
out
shll
cmc
jbe
inc
mov
add
mov
pop
in
imul
mov
fwait
test
push
mov
add
adc
pushf
push
cmc
movsl
mov
test
jne
fs
jne
sbbb
mov
dec
in
pop
jae
xchg
std
mov
mov
jb
mov
sbb
push
lods
mov
mov
push
dec
sti
mov
sub
mov
mov
sub
cmp
pop
cwtl
sbb
ficompl
orb
rclb
lcall
pop
ret
mov
out
cmp
push
loopne
add
aas
mov
mov
pop
or
push
es
xlat
inc
or
sbb
insb
xor
rorl
xchg
xchg
lock
cmp
daa
add
pop
dec
pushf
jb
and
add
xor
pop
cmpl
mov
mov
inc
hlt
imul
xchg
mov
cltd
mov
out
mov
push
dec
xor
iret
or
fsubs
lds
dec
hlt
jp
mov
les
out
cli
cli
mov
push
int3
int
sub
mov
jl
mov
out
scas
popl
jl
xchg
dec
stc
jle
mov
mov
nop
stos
mov
cli
jl
push
lds
add
xchg
shlb
imul
cmpsb
aam
lds
popa
pop
pop
sbb
and
ret
mov
pop
adc
fs
xchg
jne
xchg
test
out
cld
mov
addr16
inc
lea
popa
mov
push
lds
into
or
in
xor
dec
xlat
pop
mov
fadd
inc
mov
pop
imul
int3
xorb
fs
push
dec
push
adc
out
push
mov
pop
push
in
out
or
test
sti
cmp
xor
lahf
sub
inc
dec
scas
sbb
and
out
mov
fcompl
lea
inc
test
lahf
sub
sub
mov
pop
jne
ret
push
dec
cmp
jg
out
aad
jne
sub
outsl
outsb
addb
test
stc
push
pop
add
loop
push
fisubrs
fsubrs
sbb
inc
mov
enter
cmp
dec
rcll
mov
fsub
xor
aaa
lods
in
mov
movsb
outsb
dec
das
jg
inc
outsb
ja
xchg
and
stc
leave
cmpsl
clc
lret
push
mov
fs
sbb
lret
cmp
add
testl
ja
mov
jbe
xchg
jo
out
js
sub
dec
dec
insb
mov
test
insl
adc
jae
push
pushf
lret
xchg
jno
xor
testl
add
push
sub
xchg
popa
jle
sbb
inc
xchg
nopl
dec
pop
xor
add
ret
jg
cmc
pop
pop
xchg
out
jecxz
and
scas
pushf
loop
and
adc
sbb
scas
jno
or
imul
inc
out
in
xor
xchg
rcr
inc
pop
lret
into
loope
cmp
mov
aaa
movsl
int
dec
inc
adcl
testb
xor
cwtl
outsb
mov
mov
std
jl
sub
popa
rol
rclb
in
xor
add
jmp
popw
rcll
and
push
mov
xchg
out
scas
add
popf
dec
or
xor
sbb
stos
jb
xchg
or
enter
stc
push
in
add
bound
lock
jge
mov
fildll
out
adc
das
dec
jecxz
mov
mov
adc
adc
imul
xchg
movsl
test
sbb
push
fiaddl
orb
mov
pop
inc
xchg
fistpl
xchg
out
out
inc
lods
mov
das
pop
mov
mov
ds
out
mov
movsl
cmc
mov
mov
fwait
pop
ret
imul
out
xchg
sahf
cmc
jle
cltd
sbb
inc
xor
cmp
jp
loop
push
push
imul
jecxz,pt
stc
mov
lahf
les
sub
out
clc
cld
jnp
loopne
ret
imul
test
or
sbb
cli
icebp
mov
mov
shlb
addl
lea
bound
aad
icebp
test
sub
stos
mov
mov
and
adc
push
fwait
repz
mov
dec
sti
jg
pop
clc
add
bound
adc
pop
add
adc
and
cmpsb
cwtl
push
xchg
or
sub
xchg
in
test
mov
mov
push
add
jnp
test
pop
ljmp
movsb
leave
imul
push
inc
pop
push
xchg
call
pop
push
outsl
pop
std
pop
jmp
jb
in
ret
pop
add
leave
add
shll
cld
xchg
jg,pn
lret
inc
lea
jno
out
dec
push
je
je
cmpsl
pop
cli
sub
xor
xchg
adc
stos
sub
ljmp
sub
sarb
xor
jmp
bound
xor
pop
pop
adc
loopne
sbb
dec
test
pop
jle
dec
dec
push
cmpl
push
cmpsb
sub
add
lret
lods
jmp
out
adc
lds
imul
jmp
iret
in
sahf
stos
or
and
sub
mov
jnp
lods
mov
xchg
into
imul
cs
pop
cld
sub
cmp
dec
xor
mov
or
popf
sti
rolb
sti
add
sti
cmp
sbb
movsl
push
add
es
mov
popa
adc
mov
mov
sub
cmpsb
adc
pop
xlat
jae
push
jno
in
push
push
movsb
icebp
sub
dec
mov
mov
outsb
jge
fiadds
scas
bound
inc
add
lods
xor
movsl
arpl
xor
loope
negb
mov
loope
lret
cld
xor
or
cmp
jg
hlt
push
mov
test
sub
xchg
sahf
jmp
sbb
lods
in
jp
sub
jecxz
out
xor
inc
xchg
inc
or
movsl
movsb
movb
jae
dec
test
jns
cmp
cwtl
mov
jb
std
fnstsw
xor
jo
mov
scas
bound
sbb
xchg
xchg
daa
inc
xor
cmp
or
sub
fisttpl
and
jg
iret
push
push
ret
xchg
stc
mov
jmp
dec
mov
es
imulb
xor
aas
jnp
sub
mov
fimuls
add
ret
js
sbb
lods
mov
stos
arpl
push
sbb
insl
push
mov
xlat
adc
popl
insl
dec
int
std
mov
insb
cli
daa
rclb
mov
stos
lret
add
push
jbe
adc
cmp
enter
push
pop
adc
pop
jne
add
pop
push
ret
insb
movsl
and
cltd
clc
xlat
jnp
daa
lods
cld
xor
imul
loopne
fwait
pop
fidivl
ljmp
push
rclb
mov
insb
sbb
mov
cmpsb
daa
scas
faddl
insl
mov
mov
mov
push
mov
in
push
iret
push
pop
xchg
js
pop
add
xchg
xlat
insl
jmp
inc
mov
mov
cmpsl
lods
aaa
mov
jmp
sti
sbb
dec
pushf
stos
addr16
daa
aam
mov
fildll
inc
mov
call
push
cmp
cmpsl
pop
call
jns
movsb
repz
dec
mov
bound
mov
mov
fcmovnbe
jno
inc
ljmp
fbstp
push
in
inc
iret
cmp
xor
or
ja
sti
and
insb
sar
loopew
ss
leave
stos
lcall
pop
or
orb
mov
jbe
mov
jne
push
dec
sbb
imul
gs
jb
cmpsl
push
cs
data16
subb
cmovns
cwtl
fisubrs
gs
push
cltd
ja
std
jne
mov
jne
push
or
xorb
aaa
std
push
push
rcrb
mov
mov
imul
sub
movsl
pop
adc
xor
out
lret
das
outsl
push
mov
mov
js
push
push
pop
dec
sar
add
lahf
mov
cld
jae
mov
repz
cli
jge
ret
mov
sub
test
or
jge
pop
xchg
sub
repnz
or
and
arpl
dec
push
outsl
into
add
mov
add
in
lret
cmpsl
loope
xor
cwtl
mov
aas
xchg
lea
in
test
push
mov
adc
aas
mov
aaa
les
pushl
outsl
mov
sub
mov
sahf
scas
add
mov
nop
popa
or
fldenv
xchg
xchg
popa
inc
jo
dec
clc
or
jnp
cmp
and
add
jb
dec
inc
and
outsb
fildl
scas
sbb
cld
push
jnp
scas
mov
cwtl
gs
dec
data16
sub
rclb
cmpsb
bound
dec
inc
mov
jmp
pavgw
cmpsl
popa
testb
stos
mov
inc
sub
adc
inc
sbb
adc
and
push
add
or
je
mov
or
data16
dec
lock
out
fcomi
inc
or
push
pop
mov
in
push
hlt
xchg
dec
add
inc
das
xor
cld
rclb
mov
mov
test
and
cmpb
dec
sub
pop
push
imul
pop
cmp
xchg
cltd
imul
xor
test
enter
jne
mov
adc
in
cmovnp
add
movd
push
push
inc
jle
jo
insb
and
test
fstl
inc
mov
dec
adc
ret
mov
inc
xor
lea
das
inc
jnp
je
dec
push
xchg
jmp
mov
js
popf
aam
notl
dec
test
cmp
push
pop
xchg
pop
pop
push
std
loope
xchg
aaa
aas
mov
sahf
pusha
pusha
mov
pushf
mov
loopne
mov
ljmp
xchg
jae
imul
and
je
hlt
imul
lret
cli
lods
sub
push
mov
jae
mov
add
and
sbb
jne
shl
add
popf
sbb
mov
push
dec
sbb
inc
movsl
ret
cltd
addb
fcompl
data16
sub
push
test
cmp
xchg
int3
arpl
leave
lret
movsl
add
mov
jle
cli
gs
push
loopne
push
fdivl
lods
ds
xchg
jmp
xchg
imul
ficoms
test
cs
jae
xchg
xor
pop
mov
pop
iret
inc
arpl
mov
fstpl
add
xchg
stc
aam
mov
ljmpw
add
xor
gs
mov
imul
pop
cs
cmp
or
adc
xchg
push
mov
dec
test
adc
add
inc
jnp
je
outsb
test
adc
and
ljmp
lods
jge,pt
inc
inc
addl
or
pop
ret
sub
jnp
aam
test
push
inc
lahf
loopne
mov
and
pop
ja
enter
push
or
notb
push
cmp
mov
add
or
loop
dec
mov
lods
dec
adc
addr16
enter
test
inc
shll
enter
and
flds
pop
pop
push
das
loopne
ret
mov
jo
jbe
cmpsl
sarb
cmc
jecxz
cmp
push
xor
push
call
xchg
loopne
hlt
sti
or
lcall
pop
mov
or
cmp
or
insb
lods
scas
add
repnz
xchg
icebp
faddl
adc
movsb
xchg
dec
push
push
cs
jge
aad
test
adcl
cmp
xchg
mov
sbb
push
mov
imul
outsl
mov
or
es
pop
insb
out
xor
mov
je
fsts
cmc
or
insl
fsub
push
ret
shrb
adc
pop
cli
repz
push
push
sbb
xchg
xor
push
aam
out
mov
push
inc
pop
jge
cmp
jne
fwait
inc
sub
nop
fsubs
test
dec
js
mov
cmpsl
pop
fadd
ret
jo
mov
mov
cmpsb
cmc
rcr
pop
jmp
dec
ljmp
cli
fisttpll
jo
xor
mov
fcmovnu
or
hlt
insl
add
call
add
fnstsw
loop
ret
xchg
stos
out
cwtl
adc
dec
and
scas
xor
rcrb
lds
leave
mov
push
dec
or
test
test
push
lds
psadbw
repnz
mov
hlt
sbbb
cmp
pop
xor
cmp
jnp
push
sti
pusha
or
xchg
imul
sub
jg
out
and
jecxz
rclb
test
mov
and
pop
and
add
mov
cmp
sub
xlat
xchg
mov
mov
push
pop
adc
das
int3
push
aaa
divb
mov
rolb
pop
cwtl
lret
xor
movsl
xchg
clc
cmp
mov
inc
or
lock
pop
dec
loope
sti
sub
jb
in
mov
aas
jno
sbb
jne
ljmp
push
pop
js
push
loopne
lret
popf
enter
aam
mov
mov
mov
xchg
fbstp
jo
pop
scas
mov
push
push
test
icebp
nop
fsubs
inc
loope
pusha
jg
rcrl
xlat
fscale
push
or
ret
stos
inc
outsl
aam
add
push
out
movsb
and
stc
mov
maxpd
and
and
out
or
in
ret
outsl
push
mov
into
arpl
rorb
sbb
jnp
dec
mov
mov
cmp
stos
or
pushf
cmp
or
mov
sbb
lret
popf
xorb
dec
cmp
lds
outsl
sub
call
sahf
mov
mov
fwait
int
push
sbb
imul
mov
ljmp
aas
dec
ret
dec
cmc
aas
jecxz
es
xchg
lods
cs
xor
mov
sub
mov
and
repnz
outsl
sbb
xor
jge
mov
pushf
mulb
inc
inc
test
cld
arpl
and
fstl
mov
jl
idivl
sahf
sub
mov
mov
ficoms
dec
adc
loopne,pt
scas
pop
lods
call
and
adc
addl
pop
ds
cmp
js
adc
and
inc
pop
mov
iret
es
mul
notl
lea
scas
stos
cmp
mov
xchg
xchg
or
mov
shrl
and
push
mov
cmpsl
jo
and
sub
mov
dec
movsb
lret
test
sbb
push
popa
or
out
dec
or
cmp
fwait
jb
and
filds
mov
popa
sbb
xchg
out
cmpsb
jns
inc
fmulp
push
and
sub
and
fisubl
into
out
gs
int3
imul
pop
aam
pop
daa
loope
pop
dec
mov
nop
js
push
cmp
add
aaa
in
adc
pop
cwtl
pop
ret
ret
lods
pusha
add
fcompl
pop
aaa
imul
xor
fcompl
pop
sub
push
mov
push
adc
int3
in
pop
sti
add
pop
js
frstpm(287
cmp
pop
scas
sbb
mov
mov
mov
lock
aas
sahf
mov
aam
out
pop
test
cli
arpl
sbb
dec
out
mov
mov
ficomps
lret
test
std
aam
adc
les
push
negl
test
cltd
or
pop
test
cmp
out
shlb
dec
sbb
int3
hlt
lea
jp
icebp
cmpsb
iret
xchg
pop
push
loop
dec
bound
pop
mov
cli
daa
push
ficompl
xor
mov
aad
mov
cmp
xor
je
push
bound
dec
adc
in
in
fistpl
iret
pop
and
fsubrl
cmp
repnz
pop
lods
mov
sti
ret
sahf
gs
lahf
push
inc
das
lods
divl
int3
daa
shlb
rcrl
xor
xchg
imul
stos
aam
dec
adc
cmp
and
jnp
repnz
aam
sarb
pop
stos
jno
les
xchg
faddp
xchg
fnstcw
mov
mov
mov
sarl
notl
xchg
fdivrs
inc
popf
xorb
bound
out
jae
aaa
ds
mov
and
nop
lods
inc
lret
inc
fimuls
lds
cmc
fs
call
pop
out
jge
mov
pop
bound
cmp
aam
test
cmpsl
dec
mov
push
inc
shl
dec
std
pusha
xchg
dec
cmp
sub
fcmovu
jecxz
inc
xchg
fucomp
daa
pop
cmp
and
push
cmp
rclb
jae
jne
add
fldt
jo
xchg
add
sbb
mov
cmp
rorb
iret
push
lock
push
addr16
jo
aaa
lds
ja
jns
js
adc
lods
cmpsl
addr16
adc
mov
xor
stos
roll
dec
inc
xchg
in
jmp
xor
movsb
inc
cld
mov
ficomps
cwtl
addr16
in
adc
lock
sub
mov
les
push
in
mov
push
dec
sbb
mov
jle
pop
les
add
fiadds
inc
pop
xchg
lahf
inc
mov
out
push
ret
sub
ljmp
ret
mov
xchg
dec
push
test
idivb
sbbb
mov
jno
ret
dec
imul
jl
push
bound
inc
cli
jb
and
sahf
adc
dec
shl
pop
dec
wbinvd
movsb
sub
cmp
push
sub
movsb
dec
sti
popf
insb
fucomp
adc
inc
jne
fwait
jle
jl
mov
push
repz
cmp
push
ret
out
add
dec
adc
aam
mov
push
xor
aam
pushf
loopne
out
and
cmpsb
icebp
pop
inc
imul
push
dec
gs
std
orb
subl
inc
arpl
aas
jne
adc
daa
push
mov
push
fsubl
inc
lret
mov
or
xchg
repnz
xchg
pop
lock
movsl
ja
fidivl
jbe
icebp
ds
mov
test
push
aaa
mov
add
lret
cltd
imul
mov
dec
leave
sbb
xor
gs
mov
jmp
int
inc
push
lea
xchg
jmp
call
cmpsl
xchg
test
gs
xor
mov
gs
mov
xchg
pop
fwait
push
nop
mov
addb
aaa
jo
insb
pusha
xchg
and
xorb
ja
sbb
das
stos
fstpl
fsubrp
les
or
cwtl
sahf
dec
pop
subb
int
jns
adcb
outsb
addr16
add
sbb
stos
xor
cmp
lods
ret
mov
std
lods
loop
arpl
fldl
dec
lock
mov
adc
mov
jmp
or
ds
shlb
sub
clc
mov
mov
outsb
sub
lret
xchg
mov
cmp
fucom
repnz
sbb
adc
cltd
jnp
xchg
out
or
les
sbb
xchg
cmova
cwtl
jp
ss
movsl
mov
and
repz
mov
add
bts
xor
cmpsb
and
insb
test
pusha
shrl
orb
jp
cltd
add
cld
movsb
mov
cmpb
test
push
insl
movsl
xchg
sub
enter
sbb
pushf
scas
and
xor
cmp
mov
out
dec
inc
sbb
add
int3
cs
mov
mov
fcmove
xchg
pop
icebp
pop
push
sub
hlt
scas
mov
insb
lds
jo
xchg
adc
mov
push
ss
lret
test
cwtl
mov
dec
movsb
jl
or
add
inc
jns
aam
lret
popf
jecxz
rcll
stos
aas
push
xor
lods
outsb
fdivr
sbb
movl
or
stc
pop
xchg
hlt
ss
mov
ljmp
or
sbb
jns
imul
xor
cmp
idivb
bound
pop
adc
adc
xor
lea
les
arpl
jl
pop
mulb
mov
leave
adc
pop
popf
loopne
scas
mov
negb
xor
and
dec
sahf
mov
or
enter
and
fisttps
cmp
leave
orl
pop
enter
aad
xor
or
cmp
mov
test
mov
or
ljmp
push
add
mov
xor
adc
adc
and
mov
mov
mov
call
ljmp
fs
mov
jle
lds
push
xchg
xor
pop
imul
call
inc
dec
pop
repz
lea
sbb
jg
xor
jl
jae
mov
cld
cld
xor
push
inc
mov
mov
insl
cmp
jo
push
bound
in
xchg
xor
mov
ds
push
dec
jmp
lcall
ret
xchg
test
ds
jbe
stc
dec
cmp
es
aam
insl
loop
xor
int3
inc
fimull
bound
dec
out
outsb
pop
mov
jmp
aad
lods
ret
filds
in
dec
data16
arpl
pop
std
mov
push
addr16
lea
into
xchg
cltd
sbb
mov
stos
les
icebp
adc
pop
xchg
aam
lods
jmp
aad
enter
and
test
or
ret
js
aad
jmp
movsb
mov
stos
sbb
insb
push
fld
push
add
fs
xchg
add
enter
inc
add
dec
jl
inc
out
sti
sbb
outsb
in
sub
mov
and
repz
pop
es
dec
or
js
scas
mov
inc
cwtl
dec
inc
cmp
loop
leave
punpckhdq
inc
xchg
mov
test
push
fsubs
in
inc
mov
sub
or
loopne
lds
fnstsw
popw
out
jl
imul
cmp
jae
push
dec
faddl
inc
push
sub
and
std
jecxz
mov
cmpsb
mov
fcmovb
inc
sbb
popa
lock
mov
ljmp
rorb
mov
int
and
push
cs
mov
dec
xchg
push
aaa
xor
sub
roll
inc
cwtl
and
inc
sub
sub
int
pop
push
mov
adc
xor
pushf
aaa
sarl
sub
cmp
loopne
add
loopne
fcmovb
pop
lret
cmpl
mov
leave
add
stc
push
push
xchg
stc
push
mov
cli
or
pop
lods
mov
insb
dec
push
or
ficoml
mov
xchg
push
and
movsl
mov
cmp
aaa
idivl
inc
hlt
xchg
xchg
jmp
pop
mov
cmp
sub
testl
xchg
jmp
aas
mov
pusha
rorl
inc
test
xchg
mov
jmp
pop
cs
subl
sub
mov
aam
jb
movl
inc
ljmp
mov
insb
nop
shll
jbe
inc
add
insb
pushl
jae
jmp
je
jno
add
cwtl
adc
cld
xchg
push
imul
rclb
pusha
pop
fwait
dec
xor
sub
mov
sahf
jmp
pop
xchg
cli
cmp
xchg
inc
daa
mov
jge
add
mov
imul
mov
pop
jp
adc
repnz
mov
dec
sahf
xchg
xchg
add
in
scas
lret
inc
sarb
jmp
fwait
shll
call
sub
pop
in
scas
xor
adc
insl
mov
jl
in
and
jl
inc
mov
shll
shll
push
lods
lds
aam
jp
in
jle
push
mov
xchg
push
push
adc
sbb
rolb
ja
push
movsl
in
push
rcrb
iret
pop
shrb
pop
mov
push
adc
cmp
pop
and
inc
cs
dec
outsb
xor
cltd
or
dec
dec
pop
mov
sbb
mov
mov
insb
mov
sarb
sub
cmp
addr16
loopne
ja
xchg
inc
sbb
popa
test
loop
sbb
adc
pop
sti
lea
imul
dec
jb
cmp
xchg
popf
pushf
gs
icebp
fsqrt
push
xchg
iret
movsb
negl
add
out
pushf
fdivrs
fisubs
in
lock
ss
dec
dec
lret
fdivrs
sub
pop
jnp
popf
out
push
and
ret
xchg
xor
aaa
mov
sbb
cmp
iret
push
adc
adc
sub
jnp
fneni(8087
push
popw
stos
aad
test
js
and
imul
adcb
lret
inc
sbb
arpl
frstor
outsl
cmp
rol
inc
subl
adc
sbb
adc
jnp
mov
shr
dec
push
orl
les
notb
std
mov
dec
adc
cmpsl
xchg
cld
insb
icebp
mov
sahf
jne
stos
je
or
cld
ficoms
push
pop
xchg
add
leave
push
add
xlat
repnz
add
int3
fsub
out
sub
lods
inc
cwtl
xchg
mov
pusha
jb
xchg
pop
fadds
lcall
cmp
std
jge
insb
or
add
in
pop
push
jnp
dec
xor
fcoml
fisttpll
xchg
xor
fcmovnbe
jno
mov
or
fwait
aad
jnp
rcrb
setns
xor
out
or
les
pop
mov
lock
movsb
dec
jmp
inc
cmp
in
xchg
inc
inc
fdivl
xchg
adc
add
xchg
push
ret
cmp
xchg
inc
aad
ret
cmp
or
imul
out
pusha
xchg
xor
mov
and
jne
int3
test
push
add
test
test
lahf
cmp
test
mov
mov
pop
mov
dec
add
in
or
insl
jp
inc
add
sub
fisubs
out
popf
adc
push
push
adc
inc
sub
add
imul
inc
dec
push
push
je
into
jb
aad
or
push
sbb
mov
dec
cmp
scas
bound
mov
testl
mov
xor
leave
lea
bound
mov
rorl
pop
les
insl
add
jno
daa
pop
push
mov
add
mov
mov
movsl
cld
jae
pop
leave
jmp
js
repz
push
mov
sbb
xchg
xor
cmp
loop
sub
pop
sub
pop
add
leave
and
mov
fcomp
out
mov
pushf
mov
fidivs
pop
iret
cwtl
repz
test
outsl
js
ja
xchg
xchg
dec
pop
outsb
jmp
sar
dec
push
pop
rolb
scas
inc
pop
push
test
mov
out
mov
in
stc
pop
add
cli
jo
add
ss
pop
out
mov
mov
dec
jle
fbld
push
xchg
pusha
fsts
mov
pop
call
aaa
jo
sbb
mov
outsb
or
push
dec
mov
dec
add
js
xchg
cmp
mov
xor
pushl
data16
or
xor
ja
and
sbb
repz
imul
or
adc
xor
push
sub
push
ss
test
sub
xchg
insb
mov
lods
repz
in
int3
xchg
lea
iret
jle
add
and
pushf
in
das
mov
mov
rclb
mov
loopne
sub
cmp
popf
je
push
sub
adcb
fsts
out
out
and
jp
dec
ficoml
mov
stos
mov
leave
pop
sbb
mov
cmpb
aas
mov
lods
outsl
or
imul
adc
lods
cmp
movsb
daa
ss
test
add
jecxz
out
jns
mov
xorb
in
adc
adc
sbb
popa
shl
and
sti
rolb
mov
adc
inc
stos
in
pop
rcrb
mov
xchg
mov
add
fdiv
adc
adc
xchg
js
inc
dec
fadds
addl
mov
rcll
cmpl
call
sbb
sar
scas
imul
stos
ss
loope
sub
mov
cwtl
jl
inc
mov
or
sbbb
mov
inc
fisubl
mov
loopne
loop
nop
rorb
shll
inc
or
inc
xchg
push
jno
insl
dec
popa
cmp
inc
sarb
subl
cmp
pop
dec
xor
lods
sti
mov
sbb
pop
xchg
mov
shlb
fcomps
xchg
je
or
xor
xchg
add
add
inc
sbb
fs
lea
jnp
sub
push
mov
xchg
pop
jo
lods
popa
movsl
nop
daa
bound
rorl
fs
cmc
int3
sti
mov
aad
out
aam
sbb
xor
or
fnstenv
les
int3
mov
sbb
pushf
xor
aad
out
adc
leave
pushl
les
sub
and
push
cmp
cmpsl
xchg
mov
pusha
movsb
loope
jmp
sub
and
pop
xor
ds
jnp
imul
sub
xor
aam
clc
xor
cld
mov
aam
xchg
clc
mov
js
clc
jp
int3
jnp
jg
jp
jle
inc
ja
cmp
mov
xchg
mov
sbb
rorl
inc
fdiv
add
push
nop
mov
test
pop
int3
jl
lret
xchg
and
mov
scas
add
sahf
adc
fs
addr16
sbb
mov
dec
imul
mov
es
mov
loop
inc
cmc
xchg
lds
sti
mov
add
push
mov
fildl
fidivrs
adc
mov
xchg
aam
rcll
sub
lret
in
ss
push
cwtl
xor
movsl
rorb
lret
js
dec
push
pop
ret
insb
and
cli
les
dec
cmp
xchg
inc
adc
ljmp
cmp
mov
imul
inc
mov
xchg
mov
pop
dec
mov
sti
xor
xorb
sub
call
mov
enter
push
xchg
cld
adc
int3
adc
xor
aas
lret
test
adc
xor
xchg
pop
in
push
adc
imul
cmp
in
and
adc
jo
pop
push
jbe
xor
inc
aas
in
xchg
out
lods
sub
lods
call
shrl
sub
adc
sbb
enter
mov
push
cld
jge
or
fcmovne
loop
rcl
in
add
pusha
xchg
pop
in
cmp
dec
add
adc
dec
lods
loop
pushf
sub
fs
ljmp
adcb
icebp
jmp
push
lods
aaa
push
dec
leave
sub
jg
push
int
in
nop
ja
popa
lret
je
dec
hlt
insl
lods
jmp
dec
pop
in
aad
out
negb
in
sub
jg
cmp
cmc
jmp
hlt
test
add
mov
cmp
jge
out
and
pop
movsb
aas
mov
fucomip
scas
xchg
iret
les
mov
pop
mov
popa
lretw
sbb
mov
das
gs
jecxz
roll
pop
pusha
aaa
mov
or
test
iret
rorl
aad
mov
inc
jmp
scas
and
mov
fmul
jns
ljmp
scas
ds
les
push
out
call
stc
cmpsb
sbb
xlat
mov
xlat
jno
mov
pop
cmp
cmp
arpl
loopne
mov
adc
mov
push
xchg
jp
and
ret
pop
bound
idivb
mov
cmp
psubw
cmc
dec
lcall
inc
iret
cmp
jl
in
sub
in
inc
adc
imul
mov
mov
mov
fldl
sbb
inc
mov
andl
imul
scas
iret
iret
stos
leave
push
and
and
jb
test
in
or
ljmp
ret
test
lock
jle
and
or
push
xchg
sub
std
fs
fcoms
add
ds
lods
out
xchg
lea
sub
das
psrlw
sbb
mov
mov
inc
mov
repz
pop
push
insb
mov
jecxz
jge
jmp
push
dec
insl
fidivs
dec
adc
or
mov
jnp
mov
inc
xchg
pushf
add
push
mov
into
je
mov
push
stc
outsl
mov
ret
push
push
arpl
call
fists
and
arpl
sub
cmp
pop
stc
enter
inc
lret
lret
push
push
repnz
ja
jmp
pushf
sbb
lds
pop
faddl
push
jmp
mov
loop
or
adc
into
into
push
add
mov
jecxz
jo
in
fsubs
outsb
jmp
negl
push
or
push
add
and
mov
aaa
mov
out
rcr
lea
xchg
addr16
daa
xor
or
sbb
sbb
adc
sbb
mov
fdivs
push
cmpsl
gs
dec
sti
jbe
push
xchg
clc
jnp
hlt
into
push
mov
loop
js
xor
dec
outsl
ret
lcall
cmp
pushf
fildl
xchg
mov
inc
in
iret
ret
dec
xor
inc
push
imul
jo
mov
push
fs
outsb
pushf
xchg
mov
lds
and
shlb
xor
sti
xchg
ret
push
in
jle
fldl
pop
sub
stc
lret
mov
mov
xchg
xor
into
mov
addr16
mulb
or
push
inc
mov
arpl
mov
or
rcll
dec
push
imul
sbb
adc
add
sbb
bound
dec
inc
xchg
insb
ja
sbb
xchg
fstl
lods
mov
mov
adc
and
arpl
stc
mov
mov
aas
dec
int3
adc
jne
pop
sti
stos
pop
jl
out
dec
dec
sub
orb
mov
fisttpl
leave
and
inc
rclb
dec
mov
adc
call
sbb
and
fs
inc
pop
xchg
clc
sub
cmpsl
cld
xchg
cmp
shlb
mov
sbb
mov
icebp
pop
jmp
mov
mov
pop
ss
cmpsl
xor
xor
adc
ja
push
pop
mov
cmp
loopne
sub
sbb
sub
aas
js
inc
and
imul
push
hlt
sub
jmp
push
push
jae
gs
xchg
and
nop
pop
bound
ljmp
lock
mov
sub
jg
repnz
add
jmp
xchg
lcall
addl
jecxz,pn
dec
icebp
in
dec
enter
loop
mov
jo
mov
xchg
inc
mov
nop
les
insl
fs
in
test
mov
ljmp
xor
jno
aas
jle
jmp
add
inc
xchg
ficompl
les
xor
insb
sub
aad
push
mov
mov
dec
shlb
mov
ret
inc
das
sahf
push
clc
in
stc
and
in
icebp
dec
jae
cltd
ds
inc
xor
push
out
clc
aam
mov
sbb
jb
sub
outsb
or
stc
and
insl
mov
mov
lods
pop
and
sbb
mov
pop
int3
jecxz
outsl
loop
fcmove
push
jno
ljmp
and
mov
cmc
std
pushl
mov
push
xlat
and
ret
in
call
call
int3
mov
push
fwait
push
call
sub
pop
imul
xor
mov
fsubrl
mov
gs
xchg
mov
popf
dec
aas
adc
sub
jle
in
nop
xor
push
divb
pusha
in
mov
inc
and
fwait
cmp
mov
pop
xchg
out
xorb
xchg
dec
call
lock
ja
sarb
aad
mov
push
xchg
jns
test
mov
xor
imul
sub
mov
adc
inc
insl
jecxz
push
or
mov
sahf
jg
lret
in
sub
pop
cmp
xchg
push
jp
pushf
addr16
mov
mov
mov
clc
mov
popl
xchg
adc
inc
jbe
jno
into
cmp
jp
pop
cs
cld
out
mov
cs
sbb
sub
test
mov
sbb
pop
popa
sub
movl
mov
lds
mov
pushf
mov
inc
xor
push
fwait
loope
out
cmp
mov
insl
mov
das
lock
add
adc
xchg
nop
das
and
ret
push
inc
pusha
shrl
imul
shlb
mov
lahf
pop
shll
daa
lods
push
xchg
or
cmp
cmp
pop
or
xlat
loop
jb
inc
add
in
mov
js
pop
xchg
mov
xor
into
lds
add
psrad
ljmp
ss
inc
mov
and
cmp
ds
jno
lret
daa
stc
lock
mov
mov
push
sbb
sub
push
imul
sub
cmp
rcl
or
cli
pop
rcrb
sub
out
xchg
gs
fmuls
cmpsl
inc
clc
ja,pt
mov
fadds
pop
sbb
mov
jae
or
and
xchg
shll
adc
or
stc
in
pop
jno
pop
add
xor
mov
add
out
shrl
lahf
xlat
imul
mov
mov
xor
mov
insl
or
test
rorl
fs
push
mov
push
test
mov
add
sahf
jae
jae
dec
jmp
orb
jbe
pop
ror
addr16
xchg
arpl
dec
cmp
xorb
cmp
sbb
call
icebp
or
jg
fisttps
mov
lcall
pop
lcall
pop
sbbl
lods
jg
dec
add
sub
fimuls
int3
repnz
inc
lods
mov
fisttpl
and
xor
imull
sbb
dec
jne
jo
out
rorl
sbb
jp
xor
push
push
inc
push
mov
push
sub
ja
idivb
or
repz
add
or
das
adc
and
mov
push
pushl
out
mov
cmpb
push
lcall
pushf
inc
cmp
or
cmp
imul
popa
icebp
sahf
push
jne
cmp
out
cmp
cmpb
adc
xor
call
xor
je
dec
jne
bound
mov
jge
pop
fisttps
jle
add
test
loopne
stos
or
lcall
dec
call
and
bound
add
mov
adc
inc
inc
push
or
pop
mov
cltd
imul
mov
mov
inc
cmp
add
pop
xor
sahf
and
dec
push
lods
filds
inc
cmpsb
cwtl
int
iret
xor
jmp
mov
push
sbb
lock
lret
push
xor
dec
test
lret
mov
call
pop
push
shll
dec
filds
in
mov
push
in
daa
sub
dec
pop
in
xor
jle
cmp
mov
mov
mov
mov
mov
pop
test
xlat
push
pop
push
das
das
mov
mov
mov
pop
and
lods
ljmp
add
mov
cs
xchg
rcll
cmp
hlt
lcall
mov
pop
pop
xor
aam
inc
pop
gs
jge
iret
lahf
mov
xchg
pop
sbb
inc
sub
fists
lock
pusha
test
ficoms
xor
fbstp
addb
rcrb
data16
lcall
out
adc
xchg
sub
jns
mov
sbb
in
inc
fs
pop
in
adc
pushf
mov
or
add
add
adc
mov
dec
enter
pop
leave
and
dec
repz
nop
in
or
fst
cmp
mov
cltd
aad
jnp
inc
mov
pop
and
cmp
xor
cmp
pop
mov
adc
shlb
xor
dec
rorb
in
mov
dec
sub
mov
cwtl
mov
jg
xchg
inc
inc
adc
sbb
fsubrs
repnz
ja
mov
pop
or
and
cmp
call
or
mov
aaa
lods
inc
popf
or
cmc
jns
inc
icebp
movsb
add
movsl
pop
repz
xor
insl
gs
das
inc
push
xchg
or
xchg
cmp
lcall
mov
dec
loop
mov
push
das
cmpb
das
incb
sbb
gs
mov
fmul
push
xchg
mov
pop
push
in
inc
jbe
and
cmpl
rcrw
sbb
shr
mov
jl
mov
sub
in
xchg
fisttps
cwtl
add
icebp
xor
fists
pop
jmp
xchg
push
dec
loopne
ds
popa
fs
mov
sbb
in
repz
jo
ret
jnp
popa
pop
pop
fwait
in
nop
mov
shrl
xchg
dec
mov
sbb
sbb
push
sti
jo
inc
out
mov
mov
lret
push
add
pop
fisubrs
pop
mov
loop
xchg
xchg
mov
mov
mov
jecxz
add
push
xor
movsl
orb
std
sbb
inc
mov
fxch
clc
cmp
xchg
xchg
sets
and
les
mov
sub
loopne
mov
mov
std
dec
jnp
shlb
or
cmp
adc
xchg
fnstenv
xor
push
cmp
cmc
push
enter
adc
bound
gs
fwait
push
ret
aam
hlt
stc
jb
leave
and
pusha
add
negl
sub
dec
ljmp
pop
ljmp
hlt
stc
add
dec
mov
mov
pushf
xor
pop
in
and
pop
push
imul
or
lahf
jbe
pop
xchg
ret
cmc
inc
push
clc
and
jno
les
cmp
xchg
dec
push
push
pop
xchg
mov
int
and
mov
orb
mov
sahf
out
and
pop
aaa
sub
or
cwtl
out
jb
cmp
xlat
bound
mov
mov
mov
test
add
mov
jl
or
adc
jno
add
cmpsb
inc
and
mov
lock
pusha
subb
je
test
fdivrl
push
pop
sub
scas
pop
dec
loope
mov
gs
lock
xchg
adc
mov
in
loopne
fmuls
mov
jp
jge
lods
adcb
mov
add
sahf
cmpb
loope
mov
insb
hlt
mov
mov
dec
movsb
mov
fisttpl
jnp
add
pushf
sub
insl
and
and
hlt
xorl
and
movsb
lret
lds
daa
shl
push
xchg
imul
mov
add
or
mov
cmpl
inc
arpl
and
and
adc
pop
and
sahf
inc
nop
xchg
ljmp
fsub
fwait
mov
mov
in
repnz
imul
xor
stos
sub
adc
lods
incl
xchg
sub
fstl
add
or
shll
cld
into
mov
roll
cmovs
mov
mov
insb
and
icebp
je
inc
dec
add
cmp
call
lods
pop
mov
test
rcl
adc
out
enter
inc
popa
push
test
push
cmp
lret
and
lahf
xor
sbb
in
clc
das
dec
xchg
cs
inc
test
dec
jns
lahf
lcall
loopne
add
ljmp
xchg
mov
mov
cmp
popf
dec
mov
in
inc
push
pop
inc
inc
and
push
cltd
mov
mov
stc
pusha
idivl
cltd
jl
call
cmp
pushf
mov
sub
adc
jl
dec
jle
fistpl
push
loopne
pusha
sub
cmp
mov
popa
or
loop
adc
cmp
push
gs
nop
test
add
insl
push
sub
ret
or
das
aam
ret
dec
sbb
jg
cmc
jp
in
dec
and
xchg
adc
aad
out
mov
and
das
vcvtdq2ps
and
cmp
fistpl
imul
out
out
jns
pop
popf
shrb
xorl
test
add
jb
mul
cmpsb
pop
andb
aad
movsl
insb
int
adc
stos
mov
aad
divb
out
insb
das
xor
je
lret
fsubl
mov
adc
mov
stos
xlat
loop
rcl
push
xchg
cmpsb
add
orl
and
mov
dec
mov
imul
adc
xor
popf
inc
adc
lea
das
std
xchg
jg
test
pop
jle
rcrl
in
add
imul
test
mov
repnz
mov
or
cmp
lods
rorl
or
icebp
mov
pop
push
rcrb
lods
faddl
jbe
ds
cmp
pushf
and
add
push
dec
inc
cmp
cmp
dec
mov
inc
mov
ljmp
pusha
sti
push
scas
and
sbb
jne
mov
aam
lcall
or
jg
pop
movsl
mov
mov
add
xchg
lcall
stos
aam
xor
test
stc
out
sbb
ja
cmp
je
mov
lods
mov
sub
jnp
insl
jp
sbb
subl
int3
cmp
mov
lahf
inc
rcl
pop
int3
cmp
push
sbb
fnsave
mov
stc
clc
scas
hlt
lds
rcrb
push
dec
xchg
test
popa
jle
adc
test
xchg
jo
mov
cltd
and
les
aaa
push
push
je
jno
dec
jge
dec
adc
or
notb
fistpll
add
call
xor
loopne
ret
clc
rorl
xchg
cmpsb
xor
mov
ljmp
stos
test
dec
cmovbe
daa
jno
cwtl
lcall
int3
or
xchg
js
test
or
xchg
jg
mov
insl
xlat
stos
out
adc
dec
xchg
push
test
xchg
call
and
loope
out
arpl
or
scas
dec
mov
or
das
call
sti
mov
repz
std
mov
pop
mov
or
add
xchg
iret
sub
lcall
xchg
push
lea
mov
sahf
call
mov
push
scas
pop
sbb
cltd
mov
aaa
repnz
push
mov
mov
incb
pop
jns
imulb
lret
add
or
enter
adc
mulb
orl
push
cmp
loope
push
lds
stc
lret
icebp
mov
cmp
sbb
push
nop
jnp
int3
inc
inc
adc
or
inc
mov
inc
jle
in
cmp
xorb
movsl
pop
dec
push
cmc
inc
sahf
test
dec
roll
jae
jge
jns
cwtl
mov
mov
stos
lcall
xchg
aam
sarb
mov
jmp
lahf
sub
xchg
push
or
fcmovu
xor
rcrb
xor
fsubrl
data16
mov
add
inc
ja
sub
ss
stc
jno
popa
aas
fwait
loop
arpl
test
sbb
inc
mov
fwait
sub
xor
aas
cld
test
or
out
cmp
or
in
cli
mov
jp
out
repnz
shl
inc
fs
dec
lcall
cli
shl
add
lds
jmp
orb
aaa
or
cmp
jp
in
aas
push
aad
mov
sbbl
lret
clc
mov
mov
xchg
popf
or
sub
pop
sbb
adc
cmp
out
xchg
xlat
push
sub
enter
dec
out
out
insb
mov
push
sti
pop
or
lret
pop
mov
jb
jo
cmovno
sbb
stc
inc
shrb
in
inc
fdivr
sbb
loopne
loope
jp
lea
and
mov
cmc
sbb
into
cmp
in
cli
imul
movsb
pushf
es
add
push
xchg
cmp
sub
mov
inc
aas
bnd
fisttpll
jo
pop
fiadds
cmp
out
jbe
test
pop
cmp
mov
push
adc
xor
lock
daa
xor
mov
iret
inc
std
mov
add
ret
pop
dec
mov
xlat
push
or
ljmp
push
outsl
insl
jo
and
jecxz
mov
into
ret
push
inc
inc
mov
dec
and
shll
andl
aad
sub
jae
outsl
mov
insl
aaa
or
adc
cs
xor
aam
jnp
nop
inc
mov
sbb
xchg
xchg
mov
push
push
lods
xor
dec
iret
sbb
lea
push
sahf
add
jb
cmpsl
std
xchg
jne
addb
xor
ja
mov
shrl
adcl
loopne
add
in
sub
add
mov
fs
sub
cli
push
mov
arpl
mov
xor
stc
mov
stos
or
rclb
data16
mov
int3
popf
popa
inc
mov
fisubrs
or
add
aaa
sbb
xchg
out
cmp
lahf
cmp
dec
stos
lret
fstpt
jcxz
pop
mov
test
daa
std
push
arpl
fsubrl
movsb
cmpsb
xor
testl
inc
popf
imul
mov
icebp
js
pop
pop
sti
mov
jnp
adc
mov
pop
and
insl
out
cltd
sub
lea
iret
lret
cld
and
in
sub
or
insb
and
push
scas
lahf
les
lea
aaa
push
xlat
jne
mov
push
lret
xlat
loopne
subl
sbb
and
push
jne
add
cmpsl
std
adc
shll
xchg
aad
mov
push
jae
xchg
mov
jge
sub
popa
leave
sub
cmpsb
ficompl
fwait
repnz
out
jl
sbb
cmpb
xchg
ljmp
fldenv
mov
push
popa
test
push
aaa
in
inc
aaa
test
shlb
add
into
push
mov
fs
mov
sbb
jp
jg
ret
inc
or
mov
rclb
adc
jle
jo
xchg
in
fbld
lret
mov
xchg
mov
cmp
std
add
popf
add
mov
cmp
xchg
pop
cmp
mov
dec
xor
jp
push
movsl
lods
sti
jns
pop
push
mov
add
ror
test
out
negb
jle
fwait
xor
mov
aaa
scas
into
cltd
jl
jp
inc
mov
inc
mov
jl
jg
ljmp
dec
pop
jae
adc
pop
mov
lret
loop
in
pop
cmpsl
mov
dec
addb
loope
xchg
loope
sbb
inc
clc
xchg
push
out
sbb
inc
inc
lods
pop
in
loopne
lods
pop
xchg
sbb
fistl
fwait
jge
push
lock
testb
lea
xlat
mull
in
xchg
pop
push
xchg
add
rol
aam
xchg
push
ds
fdivr
sub
sub
mov
cli
xchg
or
aas
cmp
imul
sbb
cwtl
dec
movsb
movsb
cmp
fstl
jg
test
mov
int
or
mov
cmp
insb
or
shll
add
xor
sub
xorb
addr16
cmpsb
push
xchg
in
cltd
push
insb
dec
aaa
mov
icebp
xor
or
out
sub
and
lcall
int
inc
or
repz
add
rorl
jl
rcrl
aam
aas
int
dec
cltd
mov
or
push
push
sbb
fidivs
lahf
add
xor
test
xchg
sbb
push
ljmp
mov
cmpsl
sub
sub
and
add
inc
loopne
or
fildl
into
and
fwait
cmpsb
div
out
addr16
mov
into
mov
jae
mov
negb
sub
cltd
aaa
int
mov
pop
mov
or
fiaddl
xor
cmp
lahf
adc
mov
ret
push
sbb
adc
mov
aad
imul
mov
add
mov
sub
xchg
sbb
aas
mov
mov
and
push
cs
dec
rcr
cmp
idivl
mov
push
sarb
scas
data16
sbb
movsb
dec
add
out
pop
mov
outsb
ja
stos
jbe
dec
data16
das
inc
and
pop
adcb
add
cmp
push
mov
mov
mov
shlb
in
loope
lcall
jo
jno
dec
mov
sbb
call
jnp
popa
das
push
rorl
imul
icebp
hlt
outsl
inc
push
cmp
mov
and
iret
ret
jbe
insb
ljmp
call
pop
je
add
or
fstpl
or
or
mov
and
mov
mov
mov
fcoml
cs
adc
loop
data16
inc
sub
mov
imul
inc
dec
mov
sub
fidivrl
imul
fwait
rcl
dec
or
out
sbb
sub
in
test
ficompl
repz
ret
dec
fmull
test
addr16
cmp
push
jno
dec
adc
push
inc
inc
cmp
shll
popa
fsubl
jmp
mov
mov
arpl
xlat
out
dec
ja
jmp
xor
lret
adc
mov
popa
mov
popf
adc
imul
fxch
xlat
dec
sarl
dec
icebp
rolb
pop
andb
stos
cld
fcompp
push
sbb
jbe
imul
std
jl
int3
mov
xchg
or
add
pop
inc
movsl
sub
lret
dec
nop
push
arpl
dec
jbe
clc
clc
mov
daa
xchg
aaa
or
call
xchg
jge
inc
adc
jne
mov
fildl
test
aam
inc
leave
lods
add
pop
jge
and
rcrb
xchg
js
and
enter
xchg
fiaddl
mov
stos
or
cmp
add
daa
out
in
ds
add
sub
cmp
or
into
in
test
xor
xor
mov
inc
mov
mulb
sub
dec
dec
std
ficoms
mov
jmp
rorb
jbe
add
cli
dec
in
lods
jp
add
push
xor
mov
adcb
in
loope
in
adc
sub
push
mov
test
adc
add
js
xor
in
test
pop
xchg
ret
and
push
and
das
or
push
push
cmpl
xchg
jns
xor
inc
cmp
pop
dec
sbb
movsb
xor
popa
mov
push
inc
mov
imull
mov
xchg
adc
pop
jp
icebp
pop
mov
out
daa
push
sbb
sti
mov
loope
fsubl
jecxz
push
jbe
xchg
repnz
stos
lds
cmp
imul
iret
cmp
pop
add
push
dec
pop
cmpsb
mov
jns
cli
sub
shrl
fs
mov
jmp
test
push
lret
std
mov
pop
or
adc
fistl
and
jl
in
fwait
push
push
shl
or
movsb
jns
xor
sub
shl
xchg
mov
or
lret
nop
outsl
jl
or
shlb
into
mov
mov
pushf
sub
rorl
push
dec
jo
push
cmpb
push
push
dec
adc
dec
mov
and
icebp
adc
out
mov
arpl
icebp
push
sbb
std
popa
pop
xor
inc
out
int3
inc
and
cmpsl
push
pop
push
xlat
adc
rorb
loop
mov
shlb
pop
inc
ret
sub
stc
roll
xchg
or
call
movsb
xor
mov
adc
subl
roll
push
jg
std
sarl
mov
push
mov
xor
test
and
nop
push
xchg
out
or
xchg
iret
sti
lds
inc
jne
jl
push
push
aaa
cmp
cld
or
fistps
rolb
cld
aam
add
imul
icebp
xchg
inc
aas
int
test
push
ds
mov
dec
adc
daa
sarb
xchg
pusha
movsl
cmp
jns
jecxz
jle
les
mov
fdivrs
stc
jb
insb
fisubl
lret
jbe
xchg
sub
push
lds
popa
into
pop
dec
js
push
insb
pop
push
jecxz
inc
sub
fstpl
fsubl
cltd
and
cmp
dec
inc
pop
jecxz
push
dec
imul
sbb
adc
jb
mov
add
adc
clc
or
jl
test
iret
mov
fstl
call
add
in
repnz
jnp
imul
cmpsl
pop
xor
cltd
das
mov
mov
fs
push
insb
push
cs
cmp
test
mov
fisttpl
mov
mov
mov
sub
cmp
lods
push
dec
cmc
lods
call
and
adc
push
adc
test
fneni(8087
in
stos
fidivl
dec
lret
iret
lcall
pop
push
jle
and
and
enter
in
int3
push
in
mov
jge
or
xorl
inc
dec
dec
pop
sbb
sub
lods
sub
cmpl
fstl
mov
int3
dec
test
fwait
dec
into
or
mov
mov
or
test
cli
add
ficoms
popf
ss
xchg
jns
das
inc
in
clc
ss
or
sub
fsts
mov
add
faddp
or
sbb
sub
stos
pushf
mov
and
cmp
mov
xchg
jle
pusha
lds
aam
rcrl
and
jne
or
xor
push
mov
pusha
xchg
shl
pop
mov
cld
out
adc
pop
dec
lret
or
loope
xor
mov
mov
pop
xlat
std
dec
dec
cmc
mov
sub
xor
cmp
sbb
and
stos
xchg
adc
xchg
jbe
cld
adc
xor
aad
xchg
pop
imul
rol
ss
test
out
aas
jle
xchg
data16
fstpt
xchg
jg
mov
jns
mov
pushl
mov
xchg
insb
rcll
inc
push
mov
mov
xorl
cmpsl
push
sub
push
mov
mov
add
leave
and
fsubs
sub
jno
les
cmp
pop
test
dec
push
mov
jmp
sbb
cmp
outsb
pop
cmp
jne
push
stos
int
outsl
cwtl
adc
cmc
sbb
add
sbb
dec
add
xchg
adc
xchg
stos
dec
repnz
aaa
inc
insl
iret
push
mov
dec
push
jbe
jl
call
inc
and
shrl
jnp
fdivr
aaa
dec
stc
outsb
xor
rorl
es
mov
push
dec
mull
jecxz
xchg
inc
in
cwtl
jno
lret
ja
jecxz
and
mov
jb
cs
mov
mov
push
push
xchg
xchg
test
stos
mul
dec
repz
lahf
push
add
incl
rcr
imul
hlt
xor
xchg
movsl
clc
inc
sbb
in
adc
scas
sbb
je
mov
popa
add
test
pushf
out
in
mov
cmp
stos
aas
imul
add
push
repz
in
sbb
lcall
pop
mov
cs
leave
xor
push
fstps
inc
and
xlat
cmp
pusha
mov
sbb
pop
mov
lds
mov
in
lret
test
sub
cltd
ja
lahf
jb
loope
jno
xor
daa
iret
ret
jbe
roll
insl
mov
mov
push
sub
loope
pop
roll
lahf
ja
mov
cmpb
sbb
loope
push
stc
enter
clc
out
push
popf
adc
adc
jbe
aaa
bound
cld
push
add
push
adc
inc
movlps
push
bound
pop
xor
pop
xor
ja
bound
pop
jae
sub
mov
inc
dec
mov
sub
dec
mov
push
cmp
in
and
imul
mov
and
leave
push
jnp
stos
loopne
call
or
jle
fldpi
lret
adc
and
aad
imul
int
cmpsl
jmp
xchg
repnz
pop
pushf
mov
or
stos
movsl
lcall
lcall
ficoms
sbb
dec
jge
addr16
xchg
mov
inc
call
cltd
sub
pusha
sti
mov
sbb
push
jbe
inc
popa
repz
fxch
adc
lock
push
sub
lahf
sahf
jno
repnz
daa
lods
xor
pop
rcl
test
adc
sarl
inc
dec
mov
fstpl
pop
add
push
lret
cmp
jnp
mov
sbb
adc
aam
xchg
jb
xor
push
pop
adc
jle
in
cmpsl
fdivl
stos
fstps
in
cmpsl
jecxz
push
push
mov
ljmp
shlb
loop
cmp
cltd
loopne
push
sub
cltd
and
lock
nop
test
loopne
cmpsb
rorl
add
or
adc
push
jle
arpl
pop
sub
pushf
push
inc
adcb
mov
inc
jb
aaa
popa
pop
cmc
pop
ret
arpl
mov
and
orb
arpl
sbb
daa
nop
mov
addl
dec
fsub
scas
mov
cmp
push
fstp
pop
sbb
lret
jo
sti
pop
push
jns
add
and
push
es
jbe
icebp
sbb
adc
and
int3
movsb
dec
sub
mov
iret
lock
ret
pop
jae
out
gs
pop
jne
xchg
xchg
pop
loopne
int
inc
cmp
xchg
inc
addb
loope
xchg
adc
loope
or
and
rclb
ljmp
cmpsb
jmp
mov
xchg
in
cmpsb
cmp
icebp
out
push
inc
xor
subl
sbb
stos
stos
lea
cmpsl
xor
and
xchg
lds
fcomps
mov
int3
insb
pushf
dec
mov
or
sub
sub
xchg
xchg
shlb
std
lods
jns
and
and
nop
jo
dec
movsb
jno
aas
jmp
popa
inc
sub
test
test
jl
ds
mov
scas
dec
popf
movsb
aas
and
iret
call
mov
sbb
mov
repnz
push
xchg
push
push
fildl
pop
leave
sti
cmp
scas
iret
inc
clc
sub
push
cld
popa
jl
inc
jb
ljmp
mov
xchg
inc
out
mov
divl
repnz
jge
adc
sub
imul
pop
jge
and
lcall
push
mov
lcall
rorb
dec
xlat
popa
pop
dec
loope
dec
push
xor
mov
mov
pop
stos
lea
xchg
into
int3
sub
adc
decb
push
sub
jmp
pop
mov
pop
test
and
cwtl
jne
mov
or
shrl
mov
sbb
mov
js
dec
cmp
push
nop
pop
add
and
mov
lret
sub
es
test
sbb
mov
mov
lcall
cmp
or
adc
xchg
insb
mov
pop
jl
add
cmp
xchg
je
adcl
bound
mov
xchg
cwtl
in
movsl
and
ljmp
int
dec
sahf
jns
fstpl
and
pop
add
mov
test
cmp
fcomps
cmc
repnz
shll
push
cwtl
in
movsb
out
rcr
dec
aas
push
insl
lods
jmp
scas
jb
leave
adc
push
hlt
pop
gs
push
or
push
pushf
je
fdivrl
xor
jbe
or
lahf
fwait
add
and
inc
stos
test
subl
aam
hlt
ds
ret
dec
icebp
fdivs
cmp
xchg
mov
or
mov
dec
inc
pop
cmp
ss
lods
and
cmp
popf
ja
push
dec
push
insl
testb
iret
dec
outsb
rclb
andnps
jecxz
gs
xor
inc
hlt
sbbb
fnstcw
sbb
shr
bound
mov
out
sub
aaa
or
inc
cmp
pop
inc
sub
jge
mov
xchg
cmp
jmp
int
sbb
cmpsb
cmp
pop
pop
fisubs
gs
cmpb
sbb
test
icebp
mov
cmp
push
and
test
push
bound
cmp
fimull
inc
cmp
aad
out
nop
inc
rcrb
xchg
mov
test
adc
stc
mov
xchg
stc
popf
jp
xchg
out
and
inc
pushf
mov
clc
cmp
pop
iret
push
pop
stos
lods
icebp
lock
iret
push
subb
add
cmp
stc
mov
or
xor
das
mov
loopne
push
lret
jo
cld
and
sbb
sub
xchg
mov
out
das
cmpsl
push
lcall
subb
imul
mov
test
cmp
cmp
sbb
add
aad
imul
xchg
aam
mov
cmpsb
cmp
inc
ljmp
popa
testl
jnp
in
out
cmp
test
ja
push
xor
dec
jne
aaa
push
sbb
mov
ret
mov
jecxz
ficompl
xchg
xchg
jns
aaa
clc
repnz
insb
adc
bound
cld
fldenv
xchg
stos
test
jne
xchg
pusha
push
xchg
daa
mov
or
jno
addr16
or
cmc
cs
aam
call
inc
test
dec
jge
daa
cltd
fiaddl
addr16
xor
mov
xchg
sbb
xlat
out
aam
xor
mov
hlt
and
pop
or
icebp
cmp
mov
icebp
jb
jp
loop
push
loop
shlb
mov
pushf
in
pop
mov
jne
mov
pop
lock
and
and
mov
es
push
pop
filds
movsl
daa
out
scas
jecxz
ffree
mov
pusha
mov
dec
sbb
dec
pusha
jl
rcl
dec
rcll
or
cltd
sbb
sub
xchg
push
xchg
call
js
adc
out
sti
mov
dec
xchg
les
fucomi
push
pop
in
daa
mov
jb
mov
iret
lock
mov
mov
int
test
push
jae
xor
dec
lock
repz
pop
mov
popf
mov
jg
inc
push
sahf
fdivr
repnz
jp
or
ds
fcoml
adc
adc
loopne
add
cmp
fists
outsl
jle
addb
negb
ljmp
or
xchg
xchg
addl
mov
xor
or
mov
or
mov
repnz
and
dec
cmpsb
ret
cltd
ret
add
inc
arpl
dec
jbe
mov
aas
movsl
loopne
mov
mov
adc
outsl
negl
fcomps
dec
jmp
mov
clc
ret
subl
sub
cmp
push
and
pop
add
dec
jle
in
test
xor
dec
lret
imul
sti
jbe
push
or
xchg
xchg
lret
les
shlb
jbe
aas
adc
or
icebp
cmp
pop
rcrl
sarb
mov
sub
sub
das
cmp
cmp
nop
push
lret
gs
jns
jae
jbe
mov
jl
mov
int
orb
and
jg
jno
or
outsb
sub
aam
sub
inc
mov
loopne
cmp
ljmp
xor
repnz
lods
push
imul
jbe
pop
mov
rcll
mov
cld
pop
lods
sahf
sbb
lcall
aam
cltd
cwtl
loope
push
jp
mov
lds
jle
xlat
cwtl
jp
jle
test
test
and
xchg
jne
add
xchg
push
push
insl
sbb
insb
or
pop
out
ret
jbe
jg
mov
into
mov
add
mov
iret
fdivl
fsubs
xor
inc
push
fisttpl
xor
insl
inc
fstpl
jnp
scas
mov
popf
dec
and
pusha
fnsave
pop
add
into
mov
lods
mov
jmp
test
mov
lock
int
push
call
mov
push
sub
mov
icebp
pop
push
mov
jecxz
dec
lahf
mov
cs
shrl
ss
cmp
iret
ljmp
adc
ss
or
mov
pop
aas
cmpsb
je
pop
rorb
bound
lds
mov
setnp
add
iret
repz
ficoml
int3
jp
adc
jae
cs
das
adcb
dec
xor
test
iret
subl
xchg
mov
sub
dec
xchg
bound
xchg
sbb
push
sub
icebp
mov
sbb
push
hlt
and
sub
mov
pop
out
xor
sahf
out
xchg
mov
xchg
test
xchg
mov
stos
jp
imul
or
lods
imull
adc
stc
jg
sbbb
mov
bound
ret
mov
add
push
or
test
mov
and
movsb
fdivrs
test
mov
inc
divl
xchg
push
lret
sbb
cmc
icebp
dec
mov
xor
inc
jmp
inc
data16
mov
insb
push
pop
out
in
filds
jbe
test
add
add
in
add
dec
test
pop
hlt
out
loopne
mov
and
sub
pop
sub
adc
fincstp
js
mov
adc
das
add
pop
jno
test
fldl
pop
inc
add
inc
dec
adc
bnd
xchg
insb
out
ds
push
stos
movsl
fmuls
sbb
scas
mov
ret
loope
pop
rcr
mov
lds
cmp
stc
jo
jmp
or
ljmp
mov
add
inc
ja
dec
scas
inc
inc
cmpsb
and
test
scas
ds
out
mov
sub
or
adc
ljmp
push
or
add
les
xchg
js
rorb
xor
mov
jle
shrb
cmpsb
pop
jmp
mov
and
fwait
xchg
fidivs
rol
sbb
into
dec
inc
dec
cmp
dec
imul
sub
out
add
fcomip
dec
testl
mov
nop
pop
cli
mov
call
in
lods
mov
add
inc
push
adc
leave
and
out
lret
inc
sbb
xor
ljmp
ficomps
lods
mov
jmp
xlat
loopne
jne
mov
outsb
subl
outsl
xor
xchg
push
into
inc
rcl
mov
ljmp
aas
stc
xor
and
lahf
push
mov
cmpsl
sub
mov
imul
fs
adc
push
and
call
lret
roll
mov
das
out
add
sub
lods
mov
repnz
push
mov
dec
pushf
mov
stc
jns
push
fnsave
jnp,pn
inc
mov
jp
loope
sbb
loopne
pushf
cmp
jp
clc
aaa
shrl
in
mov
push
repnz
and
fwait
mov
lea
gs
cld
mov
sbb
mov
dec
sarb
ret
add
aad
fcmove
dec
fcmovbe
push
icebp
xchg
test
daa
jle
mov
and
push
pop
jns
jnp
pop
in
cmp
add
lcall
cwtl
xchg
cmpb
fldt
add
inc
call
daa
sbb
mov
cmpb
jl
jle
cmpsl
imul
shlb
jle
ss
inc
xchg
pop
lods
mov
int
rcl
mov
out
stos
fbld
push
sahf
xchg
cmp
xchg
addr16
outsb
jb
sbb
xchg
mov
add
movsb
cmp
ficompl
jp
push
xchg
popf
adc
mov
jecxz
test
cmp
aam
in
scas
out
out
dec
addb
repnz
test
jge
dec
lahf
test
mov
mov
and
jbe
inc
mov
and
cld
rcrl
inc
and
push
or
aam
and
or
dec
rcl
shll
scas
test
xchg
mov
outsl
in
ss
out
mov
aaa
test
sbb
cmp
jp
out
pop
stc
add
jo
out
pop
aaa
sub
and
xorl
loopne
in
mov
sbb
lods
add
xor
popa
push
mov
dec
loope
jne
sub
fdivr
jp
xchg
dec
xor
push
sbb
lcall
outsb
scas
fbstp
mov
insl
xchg
mov
mov
lahf
icebp
movsb
clc
gs
fwait
lods
rdtsc
mov
aam
jno
pop
int3
and
out
xchg
jae
sub
push
scas
inc
mov
and
sbb
mov
std
fdivs
sbb
fnstcw
or
fsts
xchg
test
cmp
push
dec
imul
andb
pop
stos
push
xchg
jmp
ds
mov
jb
xlat
bound
inc
inc
out
fiadds
add
jns
ss
jle
push
push
inc
in
jg
mov
dec
xchg
aad
out
pop
fists
stc
push
xor
pop
dec
loopne
adc
inc
and
jbe
int
mov
aas
add
jnp
lock
and
adc
ficoml
ret
mov
mov
xchg
and
enter
mov
int3
lock
fsubp
adc
mov
pop
cmpsb
addr16
jl
das
out
aad
mov
insb
dec
mov
mov
mov
aas
fisttps
inc
jge
scas
mov
cmc
add
mov
adc
pop
or
nop
jmp
or
lock
add
pop
mov
cld
popf
pop
or
mov
rol
jmp
cmp
nop
sbb
dec
jl
add
cmp
dec
std
pop
scas
jae
sbb
adc
mov
movsl
fs
pop
xchg
or
mov
mov
mov
fldenv
push
and
daa
ja
notb
push
stc
add
loope
cmpsb
xchg
pop
and
js
mov
hlt
fdivrs
jp
mov
and
stos
ja
mov
cmp
push
mov
pushf
sub
adc
sub
push
mov
sub
pop
sbb
mov
mov
adc
xor
and
stc
ffreep
add
dec
adc
sbb
nop
jne
xchg
lcall
xchg
or
mov
int
sbb
mov
roll
inc
jp
insb
lods
in
daa
jmp
dec
jl
aam
xchg
cmpsl
test
popl
cmp
mov
cmp
dec
inc
sbb
ret
aaa
sahf
loopne
jmp
repz
out
xchg
dec
lock
fs
lock
add
icebp
mov
pop
push
rorl
and
xor
les
push
ficoml
js
cmp
sbb
push
lods
adc
test
out
cmp
xchg
addr16
in
and
add
add
psraw
cmc
xchg
add
sahf
add
dec
js
xor
mov
add
insl
jl
xchg
outsl
xor
xor
hlt
lock
jmp
pop
jb
inc
test
xchg
aas
cli
xchg
fdiv
rorb
repnz
xchg
jg
xchg
add
mov
adc
cmp
ret
gs
dec
inc
mov
push
popl
sbb
jge
fwait
mov
mov
rclb
jmp
test
cmp
rorl
iret
fisubrs
push
jbe
xchg
or
fisubs
pop
pop
push
mov
mov
cs
sbb
or
testl
lea
test
cld
fidivs
fdivs
xchg
lea
fnstenv
fwait
mov
shrl
sbb
loop
repnz
sbb
jne
cld
fisttps
jno
lcall
mov
mov
ljmp
mov
loopne
push
pop
cld
test
je
and
xchg
mov
sbb
inc
pop
das
outsl
pop
repnz
lret
call
lods
stos
jb
mov
mov
jne
jnp
jbe
insl
push
outsl
pop
pop
sbb
pop
or
or
testb
add
hlt
jp
test
adc
and
test
add
push
pop
int
cmp
nop
insb
adc
xor
dec
xlat
sbb
mov
rolb
mov
adc
hlt
push
call
xchg
push
pop
jno
xchg
mov
imul
inc
repnz
imul
hlt
mov
jae
sub
adc
aaa
sub
push
and
bound
outsb
inc
out
inc
ficompl
mov
xor
bound
pop
push
and
and
mov
rcl
push
sbb
test
icebp
and
xchg
lahf
pop
notb
shrb
jl
mov
out
fistpll
rcr
sbb
std
add
mov
adc
adc
inc
mov
mov
fsubs
repnz
je
ret
test
rcll
shl
cmp
repz
std
popa
add
ja
sbb
divl
mov
mov
fisubrs
dec
inc
jnp
fstpl
add
mov
sbbl
pop
adc
es
inc
lret
dec
mov
pop
nop
loop
jns
sub
sub
loop
mov
xor
sbb
dec
insb
and
adc
icebp
lea
or
cmp
sub
cmpsb
sub
stos
push
aad
mov
les
movsb
push
lods
xor
cmc
jae
add
dec
push
mov
sbb
jo
das
adcb
and
sub
lahf
mov
loopne
nop
mov
mov
push
inc
and
or
jle
js
inc
add
ss
cmp
jb
pop
sbb
lods
jbe
lcall
or
or
fldcw
and
mov
mov
jb
loopne
imul
lcall
subl
pop
test
fs
push
pop
pop
xor
jl
dec
or
pop
mov
stos
pop
fsubl
add
cmp
jae
stos
in
inc
insl
xor
adc
mov
stc
lock
inc
push
jno
push
iret
add
clc
cld
pusha
test
jg
rclb
enter
push
jp
out
fstpt
xchg
jl
fsubl
jnp
in
mov
dec
mov
mov
mov
movsb
ficoml
xor
pop
out
psllw
sbb
inc
lcall
arpl
cmp
cmp
xor
lock
inc
dec
addb
psubusb
pop
push
out
dec
add
mov
insl
cmp
aaa
adc
pop
into
sub
mov
arpl
cli
pop
paddusb
add
fsubrl
mov
push
xchg
push
int
pop
sub
add
jp
lret
int3
pop
and
xor
add
push
notb
add
ds
lcall
test
sub
add
or
clc
fs
cmp
xchg
or
xchg
jae
mov
jecxz
test
insb
pop
outsb
aas
cli
dec
add
inc
ret
sbb
mov
dec
fstpt
xchg
out
test
repnz
lret
adc
repz
mov
adc
xor
fdivl
sub
sub
decl
or
das
test
and
fcomps
insb
imul
inc
inc
sub
pop
push
psubd
into
add
sar
stc
mov
inc
sbb
mov
shlb
iret
mov
adc
push
xchg
loopne
mov
sbb
jbe
cmpsl
leave
pop
mov
jg
int
mov
mov
ret
adc
ficoml
gs
lock
mov
leave
popa
or
movsb
int
les
lea
pop
arpl
push
fldenv
pop
das
ss
mov
xor
notb
mov
xor
push
sbb
fs
sti
add
fcomps
mov
popf
test
mov
call
push
jno
push
ds
outsb
sbb
outsl
out
ss
mov
mov
in
and
pop
mov
and
dec
sahf
ret
aad
push
xchg
daa
and
rcr
dec
xchg
scas
jb
inc
xchg
lcall
push
jns
movsl
mov
mov
out
stos
sahf
scas
xchg
sti
outsb
push
fcompl
popf
mov
mov
cmpsl
or
aam
ffree
aam
repz
and
sub
sbbb
popf
push
stos
mov
xchg
repz
fsubs
lods
mov
mov
imul
push
gs
add
mov
jp
jp
adc
adc
xchg
sbb
mov
test
dec
dec
push
and
shlb
aad
xor
mov
cli
adc
popa
xor
xor
push
js
addl
xor
in
xchg
push
faddl
dec
sub
mov
jnp
insb
push
xchg
fistpl
mov
jnp
sbb
mov
pop
lahf
out
push
pop
jns
mov
mov
mov
and
or
jb
adc
push
adc
stos
test
sub
xor
loopnew
inc
pop
pop
pop
hlt
mov
cmpsb
ret
filds
and
hlt
sbb
fs
jle
call
add
mov
mov
mov
imul
and
lret
add
popf
lock
and
in
ss
int3
pusha
mov
jle
ret
push
roll
push
xlat
imul
mov
dec
inc
nop
mov
pop
daa
cltd
jns
mov
inc
fsub
testl
cwtl
cmpsl
sahf
lods
xchg
aas
mov
and
mov
rcrl
push
push
push
lcall
leave
dec
jg
mov
jns
shrb
xorl
xlat
mov
mov
sub
mov
rclb
pop
push
fldenv
pop
jp
mov
lret
jl
adc
and
lahf
adc
sbb
add
shr
sub
aaa
adc
pop
sbb
stos
add
std
sub
ret
push
aaa
shl
ljmp
pop
inc
xor
repz
xlat
sub
fnstcw
sbb
pop
lahf
movsl
in
pushf
inc
gs
lods
mov
rorl
test
adc
add
pop
test
cmp
mov
sub
fwait
mov
data16
mov
jg
mov
lds
scas
mov
sbb
cs
add
adc
mov
aas
inc
or
das
or
lods
sbb
xchg
xchg
inc
cmpsl
call
in
or
or
adc
push
sbb
push
ret
les
loop
adc
popf
int
jae
dec
push
leave
out
or
or
cmp
pop
bound
daa
mov
fcoms
dec
inc
ds
xchg
lds
push
or
iret
mov
or
out
int
push
inc
clc
test
sbb
xor
cmp
cmp
bound
loopne
repnz
hlt
cmp
mov
dec
dec
sti
add
popf
mov
add
ljmp
dec
sahf
xchg
ja
jle
cmpsb
int
ret
push
inc
fnstsw
inc
cmpsl
mov
hlt
cmpsl
add
enter
aas
sbb
and
mov
popf
mov
sbb
xchg
add
outsl
jl
xor
fbstp
pop
mov
mov
push
ds
push
cmc
in
dec
sarb
stos
sbb
mov
lods
push
mov
mov
inc
jno
push
gs
adc
jne
adc
push
leave
jne
mov
pop
sbb
jge
in
dec
cli
inc
xor
mov
test
loop
test
pop
js
fisttps
lcall
inc
lods
fucomp
xlat
test
xorb
out
aas
mov
xchg
xorl
pop
popf
adc
outsb
xchg
ja
outsl
fs
movsb
add
popf
lods
lods
popf
fdivrl
sub
cmp
xlat
jbe
ja
or
fisttps
lods
lods
test
sbb
jae
push
and
or
cmp
loopne
cmp
repnz
iret
sahf
cmp
mov
jne
pop
fwait
call
in
cmpsl
out
mov
jle
or
clc
sbbb
pop
xor
push
jmp
jge
fwait
das
or
add
repz
adc
pop
test
aas
mov
jl
sbb
nop
sbb
test
push
xor
pop
jb
push
fidivl
enter
ret
push
cmp
test
lret
mov
test
addl
push
jmp
jmp
jno
jecxz
aaa
xor
jnp
dec
mov
jns
or
pop
and
in
push
sarb
in
fmul
arpl
into
add
sti
popa
xchg
fmul
mov
xor
fwait
inc
sbb
nop
rcrl
cmp
xchg
in
pop
cmp
sub
xchg
mov
lret
sub
inc
mov
sub
aam
push
adc
push
or
fisttpl
cmp
test
pop
jne
jl
or
sub
xchg
hlt
add
int3
out
lret
xchg
pop
inc
movsl
push
dec
out
inc
inc
int
lea
sbb
sahf
jmp
daa
sbb
adc
fadds
sub
stos
int3
in
sub
loopne
test
test
cltd
push
cmp
arpl
ljmp
inc
pushf
pusha
xchg
or
sub
lahf
jle
pop
rorl
sub
shrb
mov
cmp
xor
leave
sahf
cmpsl
data16
in
jmp
idivb
mov
xor
mov
ret
dec
aad
mov
hlt
gs
fisubs
fbld
mov
pop
sarb
cmp
mov
mov
out
stos
test
es
sub
sbb
dec
or
and
and
lret
push
pushf
stc
repz
cs
xchg
fs
mov
jb
inc
sub
dec
leave
xchg
mov
in
pop
push
cltd
stc
cltd
and
sbb
push
push
cmp
add
clc
mov
cmp
scas
adc
or
jg
add
pop
or
mov
add
stos
xor
xchg
pop
mov
inc
jp
xchg
icebp
or
clc
les
lock
lds
mov
jg
or
mov
inc
cltd
mov
dec
lea
lock
add
add
sbb
add
stos
pop
cmp
mov
inc
and
cmp
push
andb
rclb
int3
std
mov
rorl
cmpsl
jmp
mov
leave
mov
mov
jle
mov
cltd
push
adc
fs
ja
pop
jo
addl
cmp
pop
cld
clc
push
sti
dec
xchg
ljmp
out
mov
or
jg
outsb
mov
jnp
loopne
mov
pop
jo
inc
dec
or
cmpb
ljmp
xchg
imul
sti
xchg
or
rcrl
mov
aas
adc
adc
das
cmp
jae
adc
mov
dec
lock
cmp
repz
pop
mov
jbe
or
mov
sbb
lods
lcall
push
mov
adc
mov
fdivs
mov
movsl
jmp
mov
or
fsubr
add
dec
mov
sub
pop
sti
cmpsl
loope
and
out
and
call
roll
and
pop
imul
inc
push
push
mov
addr16
mov
push
push
incl
fcompl
ljmp
xchg
and
je
or
outsb
sub
push
sarb
mov
dec
int
mov
aam
mov
mov
dec
clc
pop
in
sbb
in
aam
gs
mov
movsl
ljmp
cmc
stos
std
mov
cld
pushf
mov
stos
mov
jmp
cmpsl
decb
clc
push
outsb
aam
test
fildl
mov
or
cmp
add
cmp
add
lods
orb
jl
sarb
jecxz
fildll
test
dec
mov
repz
cwtl
mov
bound
lcall
out
jno
add
mov
lret
sarl
xchg
scas
sahf
outsb
rorb
dec
mov
lods
hlt
test
fcmovnb
adc
jge
sbb
jo
dec
pop
or
cmp
loop
xchg
rorl
pusha
sub
popf
loopne
sti
and
xor
xor
mov
inc
cmpsb
xchg
insb
xchg
lods
cltd
pop
add
xchg
hlt
pop
xor
fbld
xor
bound
nop
lock
sub
mov
in
jg
clc
mov
shr
pop
orb
cmp
dec
call
xchg
pop
mov
jp
xchg
cltd
pop
lods
pop
mov
cmp
mov
push
adc
sbb
push
mov
push
adc
outsb
inc
jecxz
mov
mov
mov
add
xchg
inc
xchg
push
inc
insl
mov
adc
push
lret
popf
hlt
es
add
dec
in
xchg
mov
jb
pop
pop
push
rcrl
xchg
inc
fidivrl
outsl
push
hlt
fstps
add
lds
ror
push
lods
pop
iret
stc
movsl
dec
fs
xchg
sbb
dec
xor
out
ds
mov
in
adc
loope
jle
mov
fisubl
and
mov
lcall
mov
add
in
lods
rcl
sbb
mov
push
inc
aaa
sbb
mov
mov
fcoml
sub
lret
mov
pop
lods
test
test
stc
hlt
outsb
pop
push
pop
dec
sbb
pop
dec
daa
cltd
sub
inc
call
mov
jnp
shlb
push
and
cmp
sbb
cltd
cs
fs
and
jae
adc
and
cld
add
push
dec
rolb
pop
stc
xchg
mull
mov
lods
in
push
dec
and
or
and
xchg
pop
int3
jb
mov
daa
cli
mov
in
push
int
add
jle
jo
outsb
cwtl
cwtl
pop
jmp
orl
sub
push
test
ret
fwait
pop
push
in
shlb
or
jle
addr16
or
bound
aad
sarl
push
mov
push
fs
stos
mov
xchg
repnz
sbb
mov
pusha
jecxz
push
fsubs
into
mov
and
cmp
dec
push
jg
jae
pop
lea
xchg
mov
in
xchg
ret
int3
jne
movsb
iret
xor
aaa
sub
jnp
pop
rcrl
jl
cwtl
or
idivl
in
dec
pop
out
mov
mov
jbe
add
testl
push
popa
sbb
aad
push
repz
mov
js
push
repnz
shlb
push
repnz
dec
mov
mov
or
fistl
rclb
test
xchg
lret
pop
jo
es
iret
and
adc
push
cmp
pop
gs
jns
movsl
mov
jo
cli
pop
cmp
fdivr
or
inc
push
rorb
xchg
in
stos
dec
cmp
or
iret
aam
cmpsl
xchg
sarl
leave
add
je
movb
add
lods
out
jb
and
out
shl
jl
in
xchg
sti
stos
lea
aad
fldl
inc
in
sbbb
loope
lahf
cmp
push
aad
stos
add
inc
aaa
pop
and
cmp
sbb
iret
adc
ss
or
dec
sbb
jo
gs
insb
outsl
arpl
int
roll
add
cmpb
test
int3
sub
pop
sti
pop
adc
imul
xor
ret
xor
sbb
outsl
add
push
pop
pop
xchg
cmp
inc
fwait
jecxz
push
js
cmp
xchg
adc
rcrl
test
lret
xchg
jbe
jb
ret
xorb
cs
push
shll
mov
lock
hlt
sbb
pop
out
cmp
or
out
hlt
add
adc
push
lods
mov
push
gs
sbb
mov
pop
push
mov
jno
movsl
mov
jne
xor
mov
pop
sbb
pop
out
scas
jmp
lods
pop
addr16
jg
pop
pop
bound
mov
inc
dec
call
xchg
add
cwtl
mov
adc
cwtl
icebp
dec
adc
pop
fbld
sub
cmp
in
mov
ds
fdivrl
dec
je
daa
xchg
xlat
or
psadbw
cmc
mov
pop
pop
and
js
aas
scas
push
shrb
fimuls
push
loopne
inc
rol
inc
cmc
repnz
and
mov
leave
xchg
bound
shll
int
mov
popa
adc
nop
mov
jl
arpl
xchg
jl
or
test
add
out
in
cmpsb
inc
adc
repnz
xlat
lcall
outsb
or
mov
sub
movsl
inc
es
inc
into
lods
nop
popl
add
and
xchg
ja
gs
adc
sub
cmpsb
mov
int
push
and
push
mov
jne
lret
push
jae
insb
mov
dec
aam
push
mov
lock
mov
xchg
push
dec
sub
adc
movsl
mov
cwtl
sub
adc
inc
cli
jle
popa
vandps
or
pop
mov
daa
push
pusha
mov
fldt
cmp
add
outsb
mov
pushf
dec
fwait
mov
cmp
mov
das
test
jge
sbb
lcall
aas
andl
data16
push
jle
stc
cmp
adcb
dec
test
frstor
cmp
cltd
fwait
test
cmp
test
jle
mov
int3
xchg
enter
sahf
push
lret
dec
adc
test
popf
stc
inc
pop
fs
je,pt
iret
adc
xchg
sub
and
imul
addl
sub
dec
iret
js
mov
xchg
stos
mov
xor
xchg
out
fldcw
cmp
shll
shlb
add
dec
mov
sbb
dec
mov
pop
lods
dec
adc
adcl
into
ja
and
xchg
push
push
sub
add
in
loopne
ret
mov
mov
out
in
iret
cltd
and
mov
mov
add
pusha
lock
pusha
pop
repnz
dec
scas
pushf
add
enter
jb
push
push
popa
call
and
cmp
std
add
xor
jns
sbb
jns
jbe
aam
syscall
xor
out
ficomps
les
mov
add
dec
out
pop
loopne
rolb
pop
insl
imul
fstpl
mov
popa
dec
mov
mov
adc
fstpl
jecxz
and
cmp
les
mov
mov
mov
fdivl
jbe
fisubs
mov
xor
add
mov
add
insb
xor
add
mov
mov
mov
push
or
cmp
movsl
dec
into
fidivl
mov
ljmp
jp
adc
and
rorb
orb
aas
jns
jb
push
repnz
div
xchg
les
fmuls
mov
clc
add
xchg
int
jge
ret
sbb
fidivs
imul
push
dec
adc
inc
jb
xchg
cli
push
add
or
divb
mov
and
sti
cld
push
fldcw
mov
mov
fwait
sbb
or
and
cli
lods
shrl
je
sub
mov
hlt
fwait
aam
or
fs
addr16
mov
lret
repz
cld
pop
mov
ficompl
mov
pop
push
or
std
icebp
cmc
and
fwait
pop
mov
lret
loop
cltd
ficoms
jecxz
xchg
and
int3
fisubs
or
mov
hlt
sub
jle
lods
mov
pop
sub
aad
xchg
retw
mov
ficompl
mov
mov
xchg
and
into
inc
pop
imul
cltd
decb
sub
ret
pop
push
xchg
leave
mov
sub
or
mov
cmp
push
pop
lock
xchg
mov
outsb
inc
cmp
ja
sub
fdivrs
inc
push
cmpl
in
mov
fstps
imul
iret
jle
jle
mov
cmp
lcall
mov
iret
mov
push
cmp
sarb
rcr
cmp
pop
xchg
test
mov
lea
loope
aaa
rcll
rolb
inc
fisubs
repz
out
stos
cld
xor
repnz
adc
inc
xchg
in
pop
test
dec
std
pop
cmp
minps
jbe
stos
imul
cmpsl
es
jecxz
int
fisubrs
subb
jecxz
add
jl
xor
jge
push
lods
mov
jmp
aad
sbb
ret
icebp
call
outsb
insb
ja
cmc
xor
adc
les
scas
mov
outsb
dec
jge
or
rcrb
adc
push
push
xchg
es
xchg
mov
push
sub
xchg
cs
loopne
mov
mov
addr16
in
add
xchg
test
ret
std
js
push
fwait
bound
pop
cmp
jb,pt
in
and
fs
ret
sbb
add
ud2
data16
fidivs
jmp
sbb
int
or
jne
cmp
xchg
ret
outsb
in
popa
inc
addr16
push
out
clc
pusha
inc
scas
icebp
add
add
scas
cmc
mov
jb
adc
or
jmp
mov
xchg
fisubrs
and
pop
out
mov
int
pushf
repz
add
mov
xor
or
cmp
fwait
add
adc
out
and
incl
pop
sub
clc
lods
bnd
inc
xchg
or
insb
mov
xchg
ljmp
ja
mov
out
sub
lahf
cmp
mov
mov
icebp
jo
call
jae
cmp
cmp
pushf
aam
aad
fsubrs
in
inc
xor
push
jg
dec
bound
sbb
daa
lea
fs
sar
inc
icebp
xor
mov
or
mov
cmp
adcb
xor
push
out
cld
scas
adc
cmp
int
jp
lret
addr16
dec
dec
dec
jb
test
loop
cmp
scas
mov
inc
mov
sbb
cmpb
int3
cmp
mov
lods
mov
adc
aas
xor
adcl
ljmp
lret
fisttpl
ss
pop
and
jbe
or
cli
rcr
cli
out
push
or
es
pop
mov
ret
xor
out
in
cltd
decb
enter
jb
ljmp
sbb
mov
adc
push
lea
mov
mov
xchg
rolb
popa
sub
or
sub
xor
imul
cmp
hlt
out
fs
stos
lcall
daa
data16
mov
lods
ja
sbb
jmp
push
in
out
cmp
cmp
cmp
sbbl
and
lods
xchg
mov
adc
ds
jge
xchg
lds
adc
insb
dec
outsl
sbb
jl
push
pop
outsl
mov
mov
pop
mov
sub
push
fs
mov
arpl
pop
sarb
imul
pop
fmull
test
sbb
adc
pusha
arpl
std
jno
pop
dec
stc
repnz
mov
push
lahf
mul
hlt
or
xor
push
dec
outsl
cmpsl
add
dec
call
mov
sahf
js
hlt
jbe
fsts
add
cs
mov
cmp
nop
sub
inc
sbb
xor
scas
mov
test
xchg
lahf
popa
add
lods
popf
cmp
mov
outsl
mov
xlat
movsb
mov
or
sub
or
dec
sub
je
outsb
and
scas
mov
push
int3
call
cltd
add
mov
jecxz
and
pop
jg
cmp
in
jae
js
es
mov
push
jge
inc
mov
and
add
jge
data16
imul
aas
pop
scas
aas
add
pushf
lret
inc
mov
aaa
add
sbb
cltd
int3
adc
nop
mov
je
fnstcw
pop
add
inc
fwait
mov
xchg
mov
pop
sbb
push
out
inc
cli
pusha
lret
fwait
push
popf
and
add
rcrl
push
fildll
adc
or
xchg
sbb
popf
scas
arpl
ljmp
pop
mov
pop
out
andb
inc
cmp
gs
push
xchg
inc
in
xor
mov
in
sbb
test
mov
movsb
in
mulb
dec
inc
and
push
jbe
out
aas
xchg
or
adc
mov
and
scas
loop
pusha
imull
or
adc
and
push
lods
sbb
cmpsb
adc
or
adc
leave
idivb
or
or
out
xchg
cmc
add
pusha
mov
les
pminub
lret
and
add
rclb
call
icebp
ljmp
jno
sbb
stos
dec
mov
insb
stc
inc
clc
mov
and
daa
test
gs
jo
adc
mov
jo,pn
ficomps
int3
loop
loop
dec
es
fisubs
ret
xchg
mov
jae
xchg
sub
hlt
sti
pushf
push
push
add
les
cmp
cltd
cmp
sub
dec
cmp
dec
mov
inc
add
pop
paddb
into
add
into
jb
lret
fistps
test
shl
xor
loopne
lahf
in
mov
mov
clc
ret
pop
mov
icebp
bound
in
mov
adc
outsl
inc
mov
in
in
xchg
testl
add
pop
xchg
outsl
repnz
insb
xchg
xchg
fstl
xchg
cmp
or
fidivl
in
insl
test
dec
add
subl
dec
cld
aad
adcl
sub
xchg
xchg
pop
push
lock
cli
sbb
cmp
inc
sub
xchg
mov
xor
out
loopne
std
lds
outsb
add
rclb
ja
sub
jge
sti
fildll
pop
stc
mov
inc
pop
in
outsb
js
sub
fdivl
mov
sahf
mov
ret
inc
sub
push
mov
enter
pop
test
jns
fwait
negb
sub
inc
sub
adc
aam
cwtl
add
imul
scas
fadds
pop
jo
pop
shrl
adc
and
mov
out
mov
loop
or
subl
stc
add
je
sarl
std
push
fcomps
test
cmp
xchg
sub
fs
insb
mov
adc
adc
out
aas
shll
and
jae
test
mov
pop
inc
loope
inc
enter
xor
nop
sbb
add
stos
jns
popa
push
mov
mov
inc
sub
je
dec
cltd
loope
ret
xor
mov
popf
and
xchg
push
xor
sub
pop
clc
pop
add
out
or
cwtl
pop
incl
je
xchg
mov
sar
lock
mul
xchg
xchg
xor
rcrl
adc
sub
mov
aam
ljmp
sbb
insb
xchg
mov
jmp
mov
push
enter
sbb
xchg
cmp
imul
loope
test
fldenv
push
push
mov
push
mov
mov
es
or
popf
dec
bound
lcall
dec
xchg
call
stc
mov
sbb
fwait
inc
mov
xor
fildl
sbb
cmpl
adc
sbb
fnsave
cs
ljmp
popa
sbb
push
push
les
cmpsl
outsb
jne
and
or
iret
std
int3
mov
push
mov
mov
dec
arpl
ja
shrb
inc
sub
mov
leave
loop
pop
xchg
cmpsl
sub
push
out
jge
jge
js
jb
sbb
push
gs
and
movsl
xor
rorb
scas
jmp
add
cmp
imul
insb
mov
cmc
cs
repnz
add
lret
xchg
mov
jbe
pop
fdivs
sbb
loop
add
cwtl
dec
mov
idivl
leave
imul
dec
dec
icebp
jmp
cld
andb
loopne
insl
mov
bound
shll
data16
jb
adc
rcr
mov
sbb
int
xchg
mov
aas
cmp
pop
adc
test
pop
pop
mov
loope
or
enter
jae
dec
jno
jg
push
jbe
push
jle
mov
sarb
fldt
sbb
push
cmc
mov
lods
cmp
cmp
mov
stc
or
sub
stos
loop
mov
and
repnz
mov
ret
scas
addb
sbb
fcmovnu
rcrl
xchg
mov
inc
or
ret
mov
jmp
loope
pop
xor
cmp
jnp
clc
mov
pop
push
push
imul
xor
or
leave
test
cmp
dec
ss
in
mov
negl
xchg
bound
out
xchg
add
dec
add
sbb
pop
mov
into
sahf
lcall
and
sub
xchg
data16
sbb
cmp
mov
adc
in
push
jns
inc
push
mov
sbb
test
in
adc
rorl
fld
test
sbb
adc
mov
mov
stos
mov
es
jle
out
int
mov
mov
pop
or
test
add
adc
daa
jle
int3
jge
pushf
lahf
push
or
dec
dec
insl
pop
jae
adc
jecxz
iret
xchg
xchg
sub
xlat
xor
sub
sub
sbb
push
out
mov
and
out
mov
inc
into
sbb
sahf
inc
cwtl
ret
or
and
inc
stos
rorb
pop
inc
fcoml
jns
ds
testb
gs
mov
pop
jns
aam
mov
inc
sbbb
lds
js
sbb
in
repz
pushf
sbb
out
rorb
push
inc
add
je
or
xor
out
out
in
mov
dec
int3
lods
and
sarb
dec
lret
add
lcall
repz
imul
xchg
cmc
inc
je
dec
push
sbb
test
jb
pop
scas
sbbb
iret
inc
pop
jle
mov
pop
les
stos
jno
pop
ret
sbb
scas
pop
out
fmuls
adc
test
test
in
jle
push
dec
mov
add
lret
inc
cmp
cltd
xchg
push
ds
std
rclb
outsl
mov
aam
mov
loope
test
aas
fnstcw
ret
leave
test
add
sbb
mov
push
ror
rcrl
dec
repnz
jmp
les
aas
outsl
adc
lahf
ficoml
inc
loop
jb
cwtl
dec
pop
hlt
mov
push
aaa
clc
cwtl
lret
jmp
rorb
ret
jne
out
rcrb
dec
cmc
ret
and
push
subl
scas
xchg
sbb
pop
dec
cli
mov
pop
add
shl
out
mov
stos
xor
in
shl
fcomps
aam
ret
push
hlt
lret
xor
insb
xor
cld
pop
mov
inc
xor
call
pop
pushaw
es
enter
fstl
daa
icebp
sti
fcmovu
inc
clc
jns
daa
in
js
ret
fldl
pop
movl
fsts
jl
dec
mov
add
adc
jae
fwait
mov
in
pop
or
mov
cmp
mov
das
pop
outsl
sub
loope
add
dec
xor
and
pop
cmpsb
insb
pop
mov
fabs
into
xchg
xor
test
mov
mov
lock
ret
pop
insl
sub
jg
popa
pop
mov
push
ss
mov
xchg
popa
shlb
mov
cmp
xor
sbb
xchg
mov
shr
imul
or
jg
jnp
iret
xchg
cmp
subb
add
mov
push
jbe
adc
mov
fcoms
lods
fdivrl
jbe
mov
pop
xor
incb
sub
divb
lods
das
or
stos
js
add
lods
jg
jecxz
mov
pop
fyl2x
inc
leave
adc
bound
psubb
sub
sbb
cld
jecxz
fwait
fwait
inc
push
imul
mov
add
js
nop
sub
sbb
fnstsw
push
pop
mov
fs
pop
jo
add
outsb
ror
mov
movl
adc
roll
inc
xchg
xor
repnz
and
aad
inc
rclb
movsb
add
insl
in
fmull
loopne
mov
gs
aas
xchg
rorb
sarl
arpl
mov
push
add
nop
lret
sarl
sub
std
jb
aaa
jb
test
add
and
push
icebp
ss
cmp
int
add
push
push
xchg
outsb
cmpsb
in
leave
lds
or
notb
mov
shl
or
shlb
cmp
cbtw
pop
aaa
int
cs
and
stos
fists
testl
dec
dec
jmp
pop
add
jne
push
add
jl
dec
movsl
pop
pop
inc
in
xlat
test
loopne
mov
in
mov
jo
clc
dec
hlt
sbb
leave
sbbl
mov
add
mov
add
pushl
scas
js
mov
mov
lods
pop
lret
cmpl
push
cmp
lret
mov
je
push
push
or
scas
add
in
xchg
xacquire
xchg
dec
lea
dec
mov
pop
fs
inc
in
jbe
pop
cltd
xor
xor
jnp
cmpsb
ficomps
jnp
popa
jp
out
outsl
xchg
scas
ss
insb
dec
roll
or
cmc
mov
std
xchg
xor
jns
sbb
pop
out
jns
xchg
hlt
inc
insb
mov
cmp
mulb
xor
mov
stos
push
dec
cmp
mov
lock
mov
cwtl
lahf
push
or
and
scas
and
cmp
ss
dec
cmp
int
cltd
mov
mov
adc
and
lahf
fcoms
ds
cmpsl
jae
popa
push
dec
rcll
lret
orb
clc
call
mov
or
sbb
loope
mov
dec
dec
stos
pop
sahf
lods
inc
push
push
ja
fstpt
cmp
les
test
mov
or
aam
xor
mov
jecxz
jb
test
mov
ret
jno
dec
lahf
fsub
mov
pop
pop
jne
add
dec
jns
sahf
fs
mov
sub
stos
jp
cmc
jo
mov
mov
inc
scas
sarb
mov
push
push
lret
or
addr16
adc
daa
leave
fisubrl
jb
fs
mov
ss
out
and
pop
ljmp
les
and
dec
insb
push
out
lret
in
fdivrl
enter
dec
mov
push
into
inc
bnd
mov
negb
test
lret
mov
lock
mov
jle
pop
pop
and
push
adc
je
pushf
adc
pop
xchg
pop
inc
fwait
jnp
cmpsb
lret
dec
mov
push
xor
iret
divl
adc
or
adc
xchg
pop
cmp
jne
mov
bound
aad
cmp
sub
add
test
out
pop
cmp
sbb
mov
xchg
cmp
popf
scas
movb
mov
aas
xlat
cmp
movsb
push
mov
lret
jg
push
lods
scas
data16
arpl
dec
and
imul
push
pop
repnz
push
xor
jno
fs
cs
lds
mov
sahf
dec
fwait
test
test
inc
push
jnp
mov
les
popf
je
add
sub
lret
insb
orb
and
mov
loope
test
hlt
inc
dec
cmp
fiadds
cmp
cmpsb
push
add
insb
jp
ret
mov
pop
dec
sti
adc
daa
in
sbbl
jge
into
ljmp
das
fwait
xchg
jp
bound
mov
into
dec
and
aad
aaa
jp
test
mov
push
lret
sbb
cmpsl
je
mov
xchg
sbbb
and
mov
aam
shll
mov
fisubs
or
outsl
adc
clc
push
iret
xchg
setge
sbb
repz
lock
dec
outsb
rcrl
or
pusha
int
shlb
inc
scas
je
sub
cmpxchg
and
sub
mov
js
insl
adc
xchg
arpl
inc
or
ljmp
mov
xchg
clc
xor
filds
push
bnd
pop
popf
add
xchg
sub
scas
cmp
jecxz
sar
xchg
ret
mov
cld
and
adc
lret
inc
pop
add
jbe
pop
lods
aas
jge
add
sbb
pop
xchg
pop
jle
lods
or
mov
addr16
or
sbbl
sub
andb
cmp
cmp
or
pushf
mov
pop
push
cmp
adc
lcall
dec
push
xor
fisubl
lcall
xchg
fbstp
and
fsubrs
push
enter
and
cmc
jp
mov
ja
xchg
fnstcw
add
add
adcl
jge
xlat
push
push
movsb
out
enter
pop
ss
pop
jno
lds
fcmove
addr16
rolb
push
xor
outsl
pop
lods
mov
fstl
es
dec
mov
pop
ficoms
sub
repz
daa
jne
dec
pop
and
sub
jbe
pop
cmpsl
and
push
ljmp
dec
pop
dec
and
out
push
xchg
sub
out
or
lcall
aaa
out
mov
dec
das
stos
or
add
mov
leave
out
cld
mov
test
mov
add
mov
push
push
mov
jo
pop
add
fidivl
xchg
scas
lods
xchg
scas
fsubrl
xor
cmc
js
dec
push
int3
inc
lcall
loope
ret
pushf
pop
lret
fsubl
and
cmp
daa
xchg
sti
mov
sti
aas
rcll
xchg
aam
or
scas
popa
outsb
out
or
mov
sub
jo
cmp
ja
stc
xchg
inc
jnp
cld
cld
in
and
cmp
ljmp
arpl
mov
jl
xor
jle
fisubrs
gs
ds
add
repz
jl
xor
mov
and
lods
xchg
in
pop
lds
sub
out
pop
cmpsb
jl
cmpsl
data16
inc
inc
add
js
sahf
cmpsb
les
push
popf
rclb
sahf
adc
jp
lock
loopne
sub
test
shrl
cmp
pop
ljmp
loope
in
xchg
mov
mov
loopne
les
xchg
mov
push
lds
jo
jle
pop
loopne
jg
mov
push
cli
stc
adc
and
loop
inc
jb
mov
mov
movsb
stos
fcomi
mov
push
jae
cmc
loop
test
je
int3
mov
psllw
jne
int3
lea
mov
adc
inc
sarb
and
pop
inc
jae
add
mov
mov
adcl
cmp
pop
rcrl
outsl
jne
adc
and
inc
nop
add
int
xor
mov
lods
in
pop
in
cmpsb
das
and
mov
pop
iret
xchg
push
divb
and
cmp
loop
or
test
mov
fwait
mov
mov
pop
dec
push
daa
ss
and
mov
out
jbe
lcall
push
mov
pop
sbb
sub
push
popf
mov
mov
icebp
iret
add
push
adc
stos
fldt
ss
call
mov
adcb
nop
jle
movb
arpl
cwtl
mov
xor
adc
lahf
repnz
jno
mov
push
xchg
adc
or
xchg
xor
aam
imulb
nop
add
inc
ret
add
sub
jns
and
jb
cmp
pusha
xchg
arpl
push
mov
or
subl
aas
mov
lret
int3
sub
dec
lret
inc
pop
aam
add
lods
mov
fcomps
cmp
dec
sbb
ja
lret
cld
push
xor
mov
jl
loopne
cmp
push
sbb
in
push
xor
ss
mov
push
mov
fcmovnu
cmp
cmp
jmp
inc
aaa
into
and
adc
xlat
pop
mov
stc
shrl
addb
sarb
jge
outsl
inc
pop
testl
out
arpl
dec
icebp
imul
or
dec
fxtract
clc
sarl
or
push
js
frstor
push
gs
scas
test
sub
pop
fcomps
pop
jl
sbb
repnz
sbb
stos
cmc
jle
push
pop
out
test
ss
adc
jp
xchg
mov
sbb
mov
push
out
pop
jb
push
sub
xor
sbb
add
cld
dec
adc
les
int
mov
jle
push
rcrl
out
pop
mov
lcall
jae
mov
jae
dec
push
mov
mov
pop
mov
dec
outsl
faddp
bound
xor
pushf
lcall
mov
push
clc
in
jg
inc
pop
lea
mov
lahf
sbb
imulb
arpl
ds
and
pop
push
xchg
xor
mov
cmp
xor
adc
pushf
and
pop
sbb
push
push
int
popa
or
fsub
fwait
mov
daa
gs
push
scas
xchg
je
or
xchg
push
iret
lcall
outsb
xchg
loope
int3
outsl
test
push
mov
jecxz
cmp
aas
sub
and
gs
fnstenv
add
or
adc
into
shll
ljmp
dec
out
ret
out
pop
push
cli
mov
pop
enter
fcmovnu
sub
addb
mov
std
sub
dec
mov
push
pop
and
shrl
int
in
add
xchg
jns
neg
or
dec
ds
jo
jge
fists
shrd
mov
leave
insl
push
pushf
popa
enter
jno
dec
xchg
out
jae
sub
ljmp
movsl
sbb
inc
pop
mov
cmc
mov
jnp
mov
inc
clc
mov
test
mov
loopne
add
fcmovbe
jae
test
jnp
mov
fimuls
fstps
nop
fs
pusha
dec
mov
sub
sarb
stos
testb
jne
aam
push
xor
cli
mov
ret
adc
mov
into
lret
out
sub
call
dec
pop
sub
dec
dec
pop
jbe
lahf
mov
mov
dec
inc
pop
xchg
jns
pop
xchg
addb
pop
aad
out
fbstp
cmpl
lea
clc
aad
push
out
call
rcll
push
repnz
scas
mov
std
out
fcomps
add
xchg
rclb
and
pop
jmp
add
gs
stos
xchg
jl
stos
and
cvtdq2ps
scas
pop
pop
jo
pop
adc
movsl
lcall
sub
lods
and
and
mov
fsubp
pop
cmpl
cltd
adc
cwtl
cmpsl
mov
mov
in
shl
jbe
mov
pop
sub
insb
cmp
lock
pop
lock
sbb
jecxz
push
cltd
push
repnz
xor
popa
in
cld
add
inc
cld
jno
int3
aad
sarb
lock
jae
ret
pop
cmp
and
mov
xor
pop
cmpsl
xchg
pop
push
ja
cmpsb
inc
add
push
arpl
push
jbe
mov
jmp
inc
sbb
add
push
loopne
aam
push
cwtl
fistps
pop
lret
and
push
test
addl
push
movsb
cmp
into
in
aaa
lods
stos
popf
mov
lcall
testl
cmp
iret
add
es
mov
insl
sarl
push
ss
lods
rcrl
popa
stc
loopne
insb
mov
fs
add
cmp
push
cs
xchg
ds
rcrb
jp
int
outsl
jge
jb
out
imul
lahf
fmull
and
mov
jns
mov
dec
das
sub
push
push
sahf
dec
mov
jp
sub
jmp
int
cmp
jecxz
xchg
sbb
outsb
pop
lds
mov
sub
pushl
mov
push
ds
lcall
add
or
sub
jmp
fisttpll
nop
sar
and
sar
sbb
arpl
lods
mov
or
adc
lock
add
jbe
cli
cmp
mov
cmpb
sub
add
xchg
ja
aas
sbb
xor
mov
or
mov
shrb
xchg
jle
inc
pop
sbb
or
adc
adc
test
in
pop
aam
xorl
xlat
popf
lret
jg
pop
mov
jne
jo
sub
out
and
stos
push
dec
gs
mov
xor
mov
jge
ds
xchg
xor
out
jne
mov
icebp
movsb
shll
xor
xor
adc
pop
or
mov
bound
sbb
mov
sub
gs
and
xchg
xchg
mov
xchg
fs
lret
adc
lea
ds
jnp
sbb
fists
jg
mov
rorb
or
mov
jl
jne
sbb
popa
inc
pusha
xor
cmp
mov
mov
negb
cmp
fadds
jmp
fwait
out
xlat
jb
iret
pusha
cmpsl
mov
xor
lea
test
in
pop
jno
sbb
imul
fists
dec
hlt
or
and
pop
pop
push
rol
fstpl
les
jae
ljmp
je
mov
out
sbb
andb
mov
cmp
lea
icebp
outsl
nop
ret
gs
mov
js
sbb
jl
sahf
adc
movsl
xchg
fwait
xchg
insb
and
stos
sbb
out
mov
out
ret
sbb
std
in
dec
in
mov
adc
fnstsw
stos
int3
das
xchg
fdivs
cmc
jp
fucomip
adc
outsl
jnp
add
pop
adc
push
dec
or
data16
xchg
ljmp
jle
inc
mov
mov
mov
fs
jo
cmpsb
je
xlat
mov
add
repz
jbe
xchg
or
dec
mov
and
leave
dec
adc
fcoms
dec
sub
repnz
sarl
dec
dec
add
inc
xchg
insb
repnz
scas
cmp
dec
popa
add
mov
or
stos
loope
lahf
push
jbe
mov
xor
mov
mov
and
dec
mov
jle
repz
pop
fs
loopne
in
dec
out
out
inc
hlt
scas
mov
and
js
xor
mov
fwait
sub
out
sub
lds
cmp
jb
cs
stc
mov
daa
andps
fistps
rorb
dec
dec
dec
add
cmp
lds
lret
dec
movsl
bound
jo
add
inc
dec
aad
rdmsr
cmpb
and
int3
or
pushf
push
test
or
int3
mov
mov
outsb
jae
add
and
inc
xorb
xlat
xchg
add
adc
idivl
rcrl
popa
jae
rcrb
jg
lock
adc
push
xchg
pop
inc
sbb
in
cmp
fs
stos
sub
add
sub
lcall
popf
test
insb
pop
and
and
cltd
lea
pusha
test
mov
mul
out
jbe
xchg
out
pusha
pusha
mov
sti
xchg
call
adc
pop
mov
scas
push
aaa
or
sub
mov
leave
inc
or
lods
xchg
iret
cmp
cld
shlb
push
add
pop
inc
add
insl
mov
mov
sub
jl
lcall
aam
out
retw
lahf
dec
mov
xchg
sbb
mov
out
jl
mov
jb
mov
cld
popf
outsl
jo
lods
adc
loopne
jnp
push
pusha
inc
int
mov
test
xor
or
mov
inc
arpl
scas
int
stos
mov
cmc
andb
call
mov
sub
vmread
xsha256
cmpsb
xchg
out
jno
call
mov
fcomi
adc
or
jo
repz
mov
mov
and
aad
in
dec
push
in
aas
jb
clc
mov
sbb
gs
inc
jno
sub
inc
shlb
into
mov
test
push
push
clc
js
mov
fnstenv
dec
sub
sbb
adcb
push
push
mov
push
mov
jle
loopne
fcomp
lock
int
pop
jge
bound
fbstp
lahf
pop
cmp
mov
test
cmp
shr
jmp
imul
mov
repz
fsts
mov
adcb
lea
xchg
xchg
adc
aam
cmp
mov
mov
in
lods
sub
jnp
jmp
fimuls
in
icebp
cli
jecxz
dec
dec
bound
xor
rep
push
dec
call
imul
mov
fcmovbe
dec
jne
in
in
fwait
sub
jp
ret
lret
mov
rcrl
cmp
push
push
in
xor
cmp
dec
cmp
mov
push
push
jae
push
push
pop
xlat
xchg
mov
add
dec
cmp
inc
xchg
lods
les
mov
push
test
mov
sahf
stc
sub
push
mov
push
push
mov
jecxz
int
arpl
cmc
mov
pop
xchg
xor
sti
rcrl
icebp
dec
das
lea
test
js
sub
mov
mov
and
call
xor
movsb
rcll
push
ret
das
mov
ds
in
adc
xor
cmp
out
lds
dec
fsubr
inc
cmpl
js
sub
push
and
rorb
icebp
push
data16
shr
mov
fldt
adc
pop
iret
jecxz
iret
push
cli
sti
sub
outsb
outsl
adc
mov
pushf
stc
mov
jle
aas
ret
pop
inc
mov
add
icebp
push
add
inc
pop
jmp
lods
xchg
addl
sub
push
pop
shlb
push
jnp
test
jge
xlat
mov
out
xchg
mov
into
mov
sub
cmpsl
mov
xchg
mov
jno
push
xor
fldt
nop
outsb
lret
xchg
cmp
pusha
andl
loope
mov
ljmp
in
pop
pop
mov
ret
ss
outsb
fbstp
cmpsw
adc
lds
daa
stos
jnp
out
ds
dec
add
xor
push
jg
movsb
xchg
loop
mov
pop
mov
int
cltd
dec
daa
push
call
ds
lock
outsb
es
data16
sbb
sti
mov
push
sti
xor
inc
or
call
cmpb
sbb
in
sub
enter
cld
mov
lret
imulb
nop
mov
dec
test
xlat
in
fldlg2
fimull
into
cmp
pop
jb
sub
inc
xor
jge
popf
pop
add
popa
scas
adc
icebp
sbb
or
adc
mov
sub
cs
inc
fwait
pushf
mov
fdiv
sahf
je
ret
nopl
nop
adc
pusha
mov
iret
in
add
xor
or
jmp
out
xchg
arpl
movsl
add
fisttpll
je
jno
jno
cmp
addr16
dec
lock
pop
mov
jno
push
lahf
inc
inc
nop
adc
mov
into
push
pop
push
ret
mov
lahf
out
shrl
rcll
jmp
scas
popf
enter
add
xchg
dec
push
ljmp
mov
push
ss
dec
sbb
adc
cmp
lret
nop
icebp
dec
out
and
js
xchg
loop
jb
xchg
xchg
rolb
fs
jbe
sub
sbb
pushf
into
call
push
loope
xor
test
lods
cmp
aas
lds
sbb
ret
out
shlb
cmp
lds
or
xchg
dec
pushf
lahf
push
mov
mov
out
repnz
mov
out
mov
shll
fs
fidivrl
xorb
mov
adc
add
bnd
mov
jo
sahf
mov
sahf
lret
add
push
mov
iret
daa
fwait
dec
pop
data16
mov
or
gs
ljmp
inc
imulb
pushf
call
fmul
adc
pop
xchg
xabort
repz
add
adc
push
lods
ficoms
lea
loopne
cmp
int
push
inc
sbb
roll
ret
lret
mov
push
cmp
dec
jl
scas
roll
adc
jne
pop
roll
loopne
and
imul
psubusw
sbb
jge
sarb
stos
push
ss
lods
not
test
fldl
gs
mov
pop
int
std
iret
xchg
jo
mov
xor
push
mov
push
les
xor
jae
stos
mov
leave
out
inc
shr
push
dec
mov
std
dec
les
adc
inc
push
lcall
dec
xor
clc
lahf
loope
out
dec
sub
test
dec
inc
sbb
jp
test
andl
roll
jno
negl
out
add
mov
dec
cs
cwtl
mov
popf
mov
jnp
je
or
sub
pusha
decb
jb
outsb
sbb
dec
enter
mov
lds
ds
ljmp
mov
dec
inc
push
and
andl
inc
adc
xor
shlb
lea
push
sbb
mov
push
dec
pop
stos
and
insl
scas
test
data16
xor
loope
xchg
roll
xchg
sub
dec
jge
add
xchg
mov
ret
cmp
dec
mov
imul
pushf
mov
xchg
sbb
pop
in
sbb
cmp
notl
or
sarl
hlt
cmpsb
ret
mov
pop
leave
leave
mov
aad
movl
and
stos
mov
jnp
pop
in
add
popa
fldln2
mov
movsl
inc
mov
test
push
xor
movsl
or
daa
lods
sbb
cld
mov
inc
rol
jge
xchg
or
fisttps
xchg
imulb
pop
pop
cmpsl
push
andb
stos
xor
sbb
inc
cs
lods
lods
mov
adc
shll
repz
fcomp
sti
subb
xchg
jge
ficoml
je
sbb
out
fstl
pmuludq
and
jl
adc
rorl
jnp
or
xor
xor
inc
add
and
mov
dec
or
mov
sbb
cmp
inc
lock
and
lds
in
push
mov
dec
add
mov
jbe
clc
add
addb
pop
add
adc
cmc
inc
inc
and
rclb
push
test
jmp
addr16
test
gs
pop
sti
xchg
xor
add
dec
or
inc
leave
xchg
in
rolb
leave
mov
int3
jl
mov
xor
mov
and
jg
mov
fdivl
mov
or
pop
fdivp
scas
mov
imul
mov
loopne
fstp
jp
stc
sbb
add
popa
cmpsb
ficoms
stos
std
sub
or
add
pop
mov
lock
jnp
mov
jbe
jmp
in
xchg
add
test
ss
pop
cmpsl
and
call
clc
into
fs
lods
fdivl
in
inc
cs
pop
pop
jp
ss
lock
imul
pop
inc
lods
or
mov
mov
call
pop
insl
cltd
call
out
sub
jmp
and
and
shrl
mov
lahf
cmp
xor
into
mov
sbb
aaa
lods
pushf
add
inc
les
fmulp
adc
inc
jle
mov
push
stos
jno
lret
aaa
add
or
gs
xchg
jge
outsl
mov
push
jo
ja
push
test
push
popa
jno
ljmp
pop
ljmp
mov
rcrl
jo
lds
test
test
mov
lea
lock
push
fwait
arpl
mov
xlat
mov
stos
loope
add
popf
inc
ret
insb
push
cmpsb
dec
ror
cmp
inc
dec
or
sti
inc
jns
test
ja
jbe
ja
mov
xchg
sbb
push
add
ja
cmp
adc
pop
mov
xor
fsubrl
ret
inc
lcall
and
dec
push
lods
mov
fldcw
loope
aas
sbb
inc
loopne
std
inc
adc
repnz
cmc
mov
adc
adc
in
sub
jno
mov
sub
inc
movsb
call
aad
cld
mov
in
lcall
inc
jne
cmp
cmpsb
cmp
iret
cmp
or
out
push
loope
inc
outsb
mov
call
rcll
adc
xlat
bnd
mov
push
cmpb
mov
popf
jge
xchg
mov
pop
aad
or
xor
pop
loope
mov
pusha
stc
loop
sbbb
inc
xor
mov
pushf
lahf
aaa
xchg
icebp
push
andl
mov
vandnps
sbb
or
jns
dec
inc
repz
add
shlb
xlat
and
loop
orb
jl
cltd
sahf
xlat
xchg
das
add
mov
cmp
insb
mov
orb
mov
pop
mov
bound
or
call
pop
pushl
or
xor
in
pop
fldl
push
jge
jle
lea
cld
sbb
mov
das
push
adc
or
lock
and
lea
cmp
popa
aam
xor
fildll
repz
movsb
pusha
mov
hlt
sub
imul
or
mov
mov
enter
pop
test
lea
xchg
into
push
xchg
mov
sbb
jle
and
jb
pop
cmp
and
push
shlb
enter
in
sahf
xchg
negb
outsb
sub
fnstenv
adc
cmp
sub
aad
js
rorl
fwait
hlt
push
jnp
mov
popf
rcr
or
add
dec
jae
inc
pop
lds
inc
hlt
cltd
in
je
js
pop
pop
mov
mov
mov
arpl
jmp
loope
inc
test
outsb
xor
pop
cs
inc
sbb
repnz
jmp
aas
and
cmp
cs
inc
sbb
ret
and
mov
pop
pop
pop
in
pop
jne
lock
and
inc
or
add
dec
push
mov
stc
mov
out
jmp
fmull
nop
pop
mov
xchg
ret
jge
mov
or
lret
mov
and
or
cmp
jbe
mov
cmp
daa
or
push
push
scas
mov
lret
outsb
adc
inc
insb
xchg
test
lret
lods
mov
jns
mov
jmp
sub
into
rcll
inc
push
mov
dec
insl
movb
jp
out
lret
push
jp
insb
aad
fistps
sub
add
es
stos
jb
test
les
std
mov
and
xor
test
aad
add
mov
adc
fxch
push
cmp
cmpb
mov
stos
or
hlt
xlat
push
imul
add
outsb
das
testl
nop
shrd
or
or
jmp
pop
leave
sub
pop
push
xchg
sub
jo
repz
xchg
mov
jecxz
mov
mov
test
pop
jo
shl
xor
jae
stos
sub
in
push
lods
ret
mov
and
push
icebp
xor
push
rol
int3
inc
add
dec
jbe
add
arpl
test
ss
inc
jecxz
mov
push
mov
sti
lock
cmc
stos
add
sub
push
aad
and
out
roll
and
push
pop
mov
or
mov
sti
fcoml
iret
in
pop
xchg
xorl
mov
dec
jg
inc
push
push
call
aad
xor
cmp
addr16
out
bnd
or
push
and
push
or
adc
iret
mov
xlat
iret
ljmp
sahf
cmp
mov
jne
cld
mov
jecxz
pop
adc
push
test
adc
push
repz
add
jae
push
out
jo
inc
xchg
gs
inc
jb
popa
lahf
or
push
mov
pop
and
arpl
push
daa
in
pop
in
ret
add
add
dec
push
insb
xchg
mov
jle
popa
aas
sbb
sub
rorb
call
inc
mov
test
mov
pop
push
cltd
mov
mov
hlt
jne
xor
paddq
repnz
into
aaa
inc
add
ss
imul
adc
sbb
and
into
xor
pop
jmp
mov
ljmp
adc
xchg
push
dec
cmp
sub
out
push
jmp
mov
popa
bound
enter
testl
leave
pop
nop
ljmp
sbb
sub
adc
scas
and
inc
pusha
inc
cmp
pop
cmp
lcall
xor
repnz
adc
xor
xor
jmp
popf
xchg
inc
lock
dec
mov
cmpsb
rcrb
push
lcall
mov
xlat
ja
push
outsl
sub
or
enterw
aam
icebp
in
dec
mov
hlt
push
pop
mov
jns
insb
and
sar
movsb
dec
mov
outsb
insl
pop
add
mov
or
dec
xchg
push
int3
adc
add
sbb
jp
pop
cmc
or
mov
push
pop
lret
sbb
xlat
push
jmp
sbb
jno
mov
shll
leave
lods
sub
add
xchg
mov
xchg
outsl
lds
or
in
xor
sbb
mov
sub
add
jmp
ja
push
push
sahf
adc
fcomi
jb
loope
xchg
push
mov
jbe
lock
in
and
cmpsl
ds
adc
mov
jecxz
test
pop
shl
inc
sbb
xchg
into
test
inc
xchg
or
aam
mov
pop
sbb
je
push
add
insl
outsl
jl
aas
pop
cmp
daa
add
mov
jae
push
jo
rcrb
cmp
call
out
loop
aas
jno
aaa
or
dec
mov
or
push
mov
out
pusha
mov
lcall
and
test
pusha
pop
push
xor
dec
adc
mov
arpl
mov
jecxz
dec
cmp
loop
xchg
push
outsb
sub
addr16
loopne
lock
shrb
mov
and
fldt
mov
add
fdivrs
mov
xlat
jbe
es
jne
enter
jne
cmp
and
and
shl
adc
mov
sarb
incb
pop
adc
loop
js
mov
lret
pop
scas
jmp
xchg
jecxz
sub
ret
inc
enter
fcmovbe
adcb
or
push
jo
insl
and
in
xor
sub
sbb
imul
sub
add
sahf
jg
mov
push
sub
xchg
pop
out
ljmp
jp
cmp
push
mov
mov
inc
adc
leave
out
pop
dec
mov
jle
ret
aam
mov
das
xchg
imull
dec
out
add
sub
gs
shll
cmp
nop
xlat
jmp
jecxz
add
in
jo
imul
test
add
xor
jb
and
movsb
pop
and
in
jno
dec
xchg
das
xchg
and
testb
test
mov
adc
fbld
dec
in
push
scas
jae
or
push
lods
add
into
enter
push
scas
or
pop
fldcw
std
cwtl
xor
xchg
or
outsl
insb
xchg
mov
in
jg
call
pop
shl
jg
sub
hlt
pop
repnz
ljmp
or
pop
addl
sbb
or
and
mov
andl
pop
mov
sub
clc
pop
cmp
aam
xor
fneni(8087
push
add
fs
call
jle
mov
push
cmpsb
fidivrl
push
int
cli
xchg
loop
mov
leave
or
fnstcw
arpl
xor
dec
or
test
mov
and
or
nop
jmp
fwait
and
push
xchg
adc
out
fimull
outsb
mov
push
fnstenv
pushl
out
mov
cmp
filds
dec
lock
and
mov
mov
mov
leave
enter
repnz
xor
sbb
ret
je
pop
mov
ficomps
cmp
notl
into
xor
shrb
lea
or
sbb
ljmp
xchg
testb
sbb
cld
xchg
pop
loopne
push
dec
rorl
lret
xor
push
dec
es
popa
xor
jno
fldenv
xor
movsb
sbb
and
push
loopne
push
pop
cmp
pop
jns
lea
mov
inc
sbb
inc
loop
sti
sbb
arpl
outsl
lock
test
dec
inc
cmp
sub
in
test
mov
cli
mov
aaa
xchg
gs
shlb
pushf
pop
mov
sbb
insb
movsl
jg
dec
or
push
arpl
inc
rolb
aam
sahf
mov
lret
pop
rcrb
cwtl
add
push
push
inc
xchg
cwtl
xchg
out
add
lea
mov
lret
xor
mov
andl
push
dec
movsl
lods
sub
mov
popa
jb
gs
imul
bound
xor
je
mov
lea
pop
mov
adc
lods
jne
add
add
inc
int3
iret
and
inc
pop
cmp
cmpb
int
icebp
ret
pop
sar
testl
jmp
movsb
push
clc
arpl
jae
ds
mov
pop
jmp
shlb
data16
mov
or
loope
lods
cmp
push
xchg
hlt
sub
xor
jge
jp
not
push
jge
lret
cmp
xor
clc
ret
add
loope
subl
xchg
pusha
dec
fildl
xchg
lret
jle
or
xorb
xlat
fstpl
xorb
and
mov
pushf
nop
ficompl
xchg
cltd
cltd
cmp
dec
daa
pusha
in
enter
push
mov
scas
mov
pop
adc
scas
sub
lods
sub
stos
fidivrs
stos
push
push
js
sbbl
mov
jno
cmp
ja
shrb
inc
lcall
rorb
lea
xchg
mov
cwtl
adc
data16
aad
inc
cmp
mov
mov
adc
sbb
push
fucomp
add
sahf
mov
xorb
cmp
lret
cmp
mov
int
hlt
repz
adc
add
fstpl
sub
call
cli
push
mov
and
cwtl
shll
dec
mov
sub
lock
js
lds
icebp
sbb
jo
stos
mov
jbe
stc
mov
shld
sub
bound
mov
push
xchg
imul
cmp
sub
popl
jae
push
mov
popf
ret
push
outsl
cs
push
sbbl
jmp
aam
xor
adc
jecxz
jecxz
daa
cld
leave
pop
fldt
push
fwait
int3
test
pop
stc
cmovl
nop
in
fwait
js
inc
sub
clc
sub
lods
mulb
inc
jl
hlt
mov
dec
push
sti
iret
ds
out
inc
xchg
or
push
es
push
in
subl
ret
sub
mov
daa
out
test
jb
les
test
cmp
pushf
xor
inc
call
lods
mov
mov
imul
wbinvd
push
lock
adc
mov
gs
sbb
adc
or
bound
add
out
mov
rcrl
ret
push
bound
cwtl
push
push
xor
icebp
inc
pusha
pop
leave
loope
test
mov
shlw
mov
dec
mov
repz
mov
leave
clc
cmpsl
push
jbe
xor
dec
pop
pushf
inc
add
add
sub
sub
xchg
cmp
mov
rolb
cmp
push
lods
imul
xor
shrb
insb
fs
jo
inc
sub
cltd
into
insb
push
cwtl
fldenv
mov
pop
lods
popa
out
jmp
lods
fdivr
inc
je
jge
mov
les
mov
mov
fwait
ljmp
test
in
jp
mov
and
pop
sbbl
sti
or
out
repz
and
push
std
pop
xchg
dec
leave
push
jl
sub
mov
loop
jl
add
push
or
ror
mov
unpckhps
mov
lods
sbb
adcl
xor
pop
fmul
mov
lret
iret
icebp
sti
inc
adc
mov
in
push
sbb
inc
int3
je
fimuls
inc
mov
arpl
aam
cmp
cmp
sti
push
push
push
stos
stc
cltd
daa
sub
ljmp
dec
mov
cmp
jne
and
add
jnp
mov
xchg
push
adc
and
lods
jo
icebp
stc
stos
xor
push
pop
cmp
jl
mov
jnp
cwtl
sbb
imul
or
mov
int
fwait
insl
xchg
nop
stc
mov
dec
test
or
sbb
jge
mov
scas
xchg
lea
sub
int
and
ljmp
pusha
lcall
clc
jnp
call
sub
pop
inc
call
fsubr
ret
cmpsl
into
addr16
insb
arpl
mov
mov
inc
add
mov
test
push
aam
adcl
or
inc
jl
lahf
fdivr
or
mov
sti
cwtl
bnd
notb
mov
fldenv
jo
adc
test
lcall
ret
orb
divl
xchg
loopne
jg
pop
stos
ja
sbb
lret
jo
jae
inc
fbld
mov
xchg
add
mov
fldl
jg
shlb
test
mov
sbb
push
gs
mov
bound
pusha
cmp
push
cmp
and
in
cmpsb
add
cmp
fwait
push
push
mov
push
jmp
lock
mov
mov
and
in
ds
ljmp
notl
dec
fcom
cmp
mov
add
xchg
inc
jg
lds
jl
call
mov
mov
pop
mov
cmp
repz
fstl
xor
sbb
shll
pop
ljmp
push
test
mov
adc
xor
sub
xor
je
push
pusha
aaa
pop
dec
gs
test
and
mov
adc
sub
mov
je
cmc
add
mov
stc
xor
data16
mov
sbb
cmpsl
sub
js,pn
setnp
mov
pop
jns
sbb
inc
scas
sub
notb
lea
rclb
cmpsb
aam
repnz
aas
test
lcall
adc
dec
pop
cmp
sbb
loopne
ret
mov
jmp
loopne
and
add
or
shlb
mov
xchg
dec
sahf
out
cli
mov
call
mov
out
ja
arpl
mov
push
fwait
repz
mov
arpl
lds
je
mov
jae
ds
push
aam
mov
jb
imul
iret
sbb
daa
hlt
and
dec
sbb
int
push
addl
or
jb,pn
sbb
xorb
push
std
fmul
and
mov
ror
and
test
dec
sbb
rcl
jbe
stos
dec
jge
loopne
xchg
repz
push
mov
sarl
pop
stos
mov
dec
or
pushf
dec
or
jmp
pop
aam
and
outsb
jns
add
push
xchg
adc
mov
push
lods
inc
jns
mov
and
inc
sahf
popa
out
js
cld
cs
mov
outsb
xlat
jp
cmp
daa
rcrb
cmc
jbe
mov
pusha
xchg
jge
jg
ficoml
sub
sub
jge
and
sbb
clc
xrelease
adc
call
cmpl
pop
add
xor
inc
mov
lds
sub
testl
aad
aad
jns
lret
pop
xchg
shlb
mov
call
cli
mov
addr16
dec
arpl
cli
cmp
jp
loope
mov
lds
inc
lret
pushf
out
js
sub
push
aaa
movsb
mov
add
gs
loope
inc
fstps
adc
and
xchg
xchg
jecxz
lahf
mov
sarl
lret
cwtl
daa
xchg
shrb
stos
fwait
push
adc
jecxz
xor
out
jmp
aam
pop
pushf
das
jmp
add
divl
jl
movsl
adc
hlt
adc
outsl
icebp
push
into
or
mov
and
test
les
in
push
mov
mov
cmp
xlat
adc
cmp
dec
mov
inc
icebp
mov
xchg
movsb
push
ret
sbb
xor
inc
mov
or
push
ljmp
cmp
push
adc
rcr
lahf
sub
add
xor
push
sub
xchg
push
add
aaa
push
ds
mov
push
inc
pop
xchg
outsl
xorl
or
fwait
push
jno
lcall
dec
popf
mov
mov
push
testb
lret
stos
mov
mov
je
loope
enter
cltd
jmp
out
add
rorb
lret
shrl
pusha
faddl
ds
lret
testl
mov
outsl
adc
imulb
vxorps
push
mov
xchg
jno
mov
push
xorb
jnp
mov
pop
movsl
frstor
scas
in
adc
ljmp
xchg
movsl
scas
xchg
cmpsl
lock
das
mov
jae
cmpsb
pop
mov
add
shr
jbe
aas
adc
ljmp
mov
lods
adc
pop
sbb
cli
stc
cmp
dec
sub
cmp
xchg
mov
aaa
pop
les
cli
xor
nop
test
fdivrl
add
orl
xchg
in
std
xchg
fstps
fcomip
cmp
sbbb
mov
sbb
jg
adc
test
or
insb
shl
xchg
insl
ret
mov
push
mov
inc
int
out
arpl
sub
xchg
loopne
dec
fisttps
clc
or
cs
adc
sbb
or
cmpl
dec
lret
and
mov
inc
clc
lret
push
in
jae
mov
shll
daa
push
rcrb
icebp
sti
dec
mov
pop
pop
ret
dec
dec
int
and
pop
sub
cltd
out
mov
adc
xchg
std
movsl
pop
push
xlat
inc
test
sub
mov
shrl
adc
pop
mov
test
ljmp
lods
dec
gs
sub
js
out
jecxz
mov
push
out
fwait
mov
jo
pusha
dec
mov
xor
loop
data16
add
dec
insb
inc
cld
repz
or
in
movsl
xchg
insb
rcrb
shl
sub
adc
ds
jns
les
mov
cmp
sbb
pop
mov
insl
mov
dec
fdivrs
cmp
ror
add
repnz
les
mov
pop
dec
xchg
push
mov
lods
cmc
out
push
jp
lock
je
aam
sbb
shll
fdivs
and
add
dec
adc
inc
mov
sub
ret
and
mov
xlat
cmpsl
addr16
lods
mov
mov
outsl
rcl
hlt
addr16
clc
lds
nop
arpl
add
xor
test
sub
hlt
nop
mov
cmp
mov
addr16
and
pop
das
mov
push
into
lods
pop
mov
jae
addl
call
xor
dec
in
arpl
push
stos
icebp
fldenv
in
aas
mov
or
mov
sbb
jecxz
cmp
adc
es
ss
xchg
int3
outsb
and
or
andl
mov
or
cld
mov
cld
loop
in
cmp
xchg
repnz
jno
repz
or
fistps
push
xchg
out
push
jb
xchg
push
mov
push
or
push
push
imul
jg
mov
imull
jnp
adc
inc
cmp
sbb
imulb
inc
add
fs
loop
xchg
and
mov
sub
orb
insb
cmpsl
sbb
mov
xor
sub
push
and
pop
out
aad
cmpsb
lea
push
inc
sbb
sub
cmc
sbb
mov
jmp
and
mov
sub
pop
lods
jg
adc
scas
mov
jecxz
jecxz
or
mov
test
into
push
xorl
mov
ficoml
test
and
fdivl
jae
pop
test
sbb
jecxz
sub
fisttpl
mov
jecxz
sub
lret
mov
push
negl
xchg
dec
adc
mov
push
fisubrs
xchg
es
mov
std
sub
jmp
ret
inc
xor
jmp
aas
jmp
outsb
adc
dec
or
adcb
pop
mov
pop
notl
es
pop
sbbb
mov
nop
jp
daa
xlat
scas
pop
lea
add
add
mov
pusha
push
xor
call
add
mov
test
cmc
jno
cld
mov
lahf
inc
iret
clc
jmp
movsl
push
or
test
or
sbb
lods
ret
jmp
xor
sub
aaa
and
mov
inc
add
aam
or
mov
lea
mov
push
xchg
xor
pop
jecxz
and
pop
test
add
fsubr
jno
iret
clc
outsl
mov
scas
adc
jae
inc
adc
es
int
inc
push
rcr
pusha
loopne
adc
cwtl
jnp
jno
jmp
movsb
jp
in
int3
clc
sbb
mulb
cwtl
mov
in
pop
aaa
mov
xchg
dec
jg
push
rclb
sti
lahf
fmuls
ds
incl
jg
mov
jns
inc
pop
pop
mov
scas
add
cmp
pop
mov
push
dec
ja
jb
fisubrs
jmp
mov
jae
mov
or
sbbb
repnz
insb
fnstsw
inc
test
sahf
sub
mov
mov
icebp
pop
cmp
popa
mov
fdivl
roll
out
fiaddl
or
ljmp
add
dec
pop
jmp
test
lds
ret
pop
insl
mov
imul
rcr
or
push
popa
xchg
nop
negl
lahf
sti
dec
jae
inc
push
jmp
inc
int
adc
test
dec
xor
or
pop
shll
or
xor
mov
dec
inc
in
loop,pn
mov
push
jle
xchg
adc
sub
adc
dec
fincstp
push
add
jne
push
lahf
xchg
sbbl
adc
jb
call
cmp
data16
jecxz
push
pop
add
mov
push
and
filds
push
sbb
push
mov
or
nop
stos
sti
mov
jo
arpl
lret
push
inc
inc
ljmp
pop
loop
in
sbb
lret
xor
stos
repz
mov
cmp
xchg
dec
mov
test
jecxz
cld
mov
push
repnz
push
popf
xchg
pop
add
cmp
inc
lcall
cld
add
test
lods
out
pop
xchg
or
adc
sbb
mov
add
mov
fwait
push
loope
adc
inc
cmpb
mov
sub
xchg
add
dec
adc
aam
add
stc
or
mov
and
cmpsb
orb
pop
lahf
loop
sbbl
pop
mov
lock
das
inc
add
inc
adc
jo
mov
add
pop
dec
push
fstpt
cld
lods
dec
pop
or
pop
jno
or
mov
imul
incl
jecxz
insl
cmp
or
aas
add
dec
push
insb
push
fstpt
ja
inc
stc
mov
pushf
add
ds
push
into
in
ds
cmc
xchg
push
or
jns
es
rcll
mov
add
shrd
push
scas
mov
mov
lcall
idivl
loopne
push
push
or
xorb
dec
add
and
sub
jae
stos
ljmp
rcrl
mov
clc
cmp
lret
loopne
inc
adc
bound
loope
fcomip
fidivs
gs
pop
std
or
jnp
pop
dec
fwait
sti
inc
js
lock
setge
dec
loopne
adc
mov
add
push
idivl
vcvtsd2si
movsb
mov
pop
in
mov
aas
lcall
inc
gs
arpl
jb
shl
push
cmp
cmp
or
pop
and
mov
push
pop
js
sarb
mov
pop
mov
pop
inc
sub
sarb
das
push
jb
xchg
cmp
or
and
cmp
pop
mov
push
outsl
push
mov
add
add
leave
filds
pop
out
test
iret
mov
xor
jl
fisttps
xchg
xchg
mov
aas
adc
push
sub
mov
and
cwtl
adc
lahf
addb
pop
mov
jle
outsb
push
sbb
jle,pt
je
sbb
sbbb
fwait
or
xchg
lock
out
dec
jnp
inc
jb
dec
outsl
lret
jg
cmp
push
mov
lods
and
or
jne
cmp
movsb
mov
inc
fadd
popf
insl
jo
pop
mov
inc
outsl
les
pop
xlat
ret
mov
incb
mov
jno
decb
xchg
adc
test
xchg
inc
push
icebp
jge
and
cmp
dec
hlt
xor
mov
sub
adc
jns
into
xchg
movsl
sbb
mov
loope,pt
addr16
jle
xchg
or
adc
mov
dec
dec
mov
mov
pop
mov
rcr
fidivs
mov
jg
adc
push
mov
fstpt
mov
testl
fdiv
lock
mov
and
jmp
dec
push
adc
add
sub
xor
or
ja
mov
jae
out
imulb
popa
jno
movsb
cmp
hlt
inc
stos
out
pop
dec
xor
daa
shll
sub
ja
xchg
lds
adcl
add
stos
fildl
sub
mov
jae
nop
inc
xor
aad
loop
inc
mov
scas
cltd
xchg
jge
imul
mov
or
push
mov
ljmp
outsl
xor
mov
dec
pop
popa
xor
jae
push
and
pop
sub
pop
js
jle
in
pop
orl
sbb
jmp
leave
mov
sub
mov
adc
pop
mov
pop
mov
fdivs
out
pop
xchg
jle
inc
pop
xor
lds
mov
jns
mov
or
std
add
jbe
div
add
jae
jns
dec
ljmp
push
out
fistps
lcall
dec
jl
xchg
fs
jg
add
imul
leave
push
fdivl
fimuls
addl
test
or
lahf
dec
sbb
mov
or
fcmovbe
fistl
lea
jae
dec
mov
push
sub
int
adc
xchg
dec
test
dec
jmp
mov
pop
insb
adc
shrl
imul
xchg
inc
add
mov
adc
divl
adc
or
push
cmp
les
add
int
ss
cmpsl
pop
jno
cmpsl
push
and
jo
leave
prefetcht2
mov
inc
sub
cld
add
sub
sbb
pop
sbb
cmpsl
push
inc
lds
sub
ss
stos
and
and
mov
outsl
dec
jge
inc
pop
es
mov
adc
mov
stos
dec
xor
jl
sub
inc
out
adc
mov
adc
xchg
lret
sbb
call
shlb
jl
test
jecxz
push
fstpl
xchg
jns
test
repz
fisubs
pop
fwait
int3
arpl
dec
subb
cs
sub
sub
jmp
dec
lcall
sub
dec
sbb
xchg
jne
add
into
xor
jb
pushf
mov
adc
das
iret
hlt
or
insl
mov
and
in
mov
fsubl
scas
fwait
or
mov
out
and
cmp
push
mov
jmp
hlt
mov
stc
pop
stos
and
jno
mov
dec
ljmp
std
and
xchg
mov
jmp
mov
xchg
push
test
mov
enter
mov
sahf
loope
icebp
loopne
pusha
xchg
gs
stos
lea
inc
xchg
fs
fdivrl
hlt
into
xchg
or
pop
ljmp
das
or
xor
shrl
xchg
inc
ret
std
test
jae
mov
inc
sub
mov
es
stc
enter
ja
xor
dec
pop
rorb
mov
movsl
mulb
mov
or
popa
mov
fidivl
xchg
inc
fadds
sbb
cmp
cmpsb
jno
cltd
fucomi
mov
or
jne
aaa
out
andl
or
lcall
fs
mov
mov
push
leave
or
cmpsl
mov
xorl
mov
cli
xor
xchg
into
jp
stc
mov
add
jl
push
sbb
jnp
faddp
sarl
ds
sub
and
je
mov
popa
jbe
insl
shlb
mov
in
cmp
sub
fcmove
ss
dec
jmp
js
test
and
xchg
out
mov
in
test
adc
andl
movsb
setg
outsl
sub
sar
hlt
fadds
sbb
scas
mov
dec
push
test
test
mov
lock
fadds
cmc
je
pop
adcb
push
ljmp
cmp
mov
mov
std
cmpsb
loopne
add
cld
add
out
loop
lock
mov
inc
lods
mov
cmc
loope
and
add
mov
xchg
mov
mov
aaa
cmp
loop
mov
stos
xor
andnps
les
push
push
jle
vpshlb
adc
inc
out
cmp
add
ret
ja
ljmp
jp
jo
mov
jns
push
cmp
mov
repnz
jl
or
or
ss
and
xor
stos
xor
out
ret
test
mov
jge
add
inc
adc
dec
cmp
xchg
lcall
dec
dec
sub
add
movsl
sub
shrl
mov
fidivl
das
es
call
add
add
jl
sub
jmp
or
pop
and
mov
in
mov
ds
out
lret
and
movsw
inc
and
lahf
nop
in
pop
sub
mov
gs
imul
xchg
notb
ror
out
test
push
enter
loope
pop
pushf
cmpps
in
dec
int3
or
xchg
mov
insb
push
push
xor
pop
fs
fucomip
fcomi
jnp
pop
mov
and
cmp
movsb
pop
cwtl
sbb
add
adc
sbb
push
sub
test
stc
xchg
jge
fwait
lcall
mov
push
fisttpl
mov
inc
dec
in
xchg
mov
cmpb
shl
fdivrs
rcl
leave
push
in
dec
mov
inc
aas
mov
inc
fld
pushf
inc
sti
inc
mov
std
mov
enter
and
int
add
not
outsb
sub
add
and
cmp
lret
push
xor
xor
adc
xor
enter
rcr
xlat
inc
insb
mov
js
push
je
enter
or
add
pop
inc
loope
out
or
pop
jae
push
jecxz
push
shrb
lcall
js
sbbb
mov
push
cld
dec
mov
jg
cmp
pop
cltd
sub
cld
add
and
cmp
jns
push
or
lret
pop
inc
pusha
mov
into
jecxz
clc
push
jle
sahf
sti
sub
movsb
push
stc
pop
pop
sub
stos
pushf
dec
jecxz
mov
dec
flds
mov
xchg
scas
popf
xchg
dec
arpl
jne
inc
dec
mov
xor
dec
dec
lret
dec
mov
xlat
sbb
pushf
lods
add
xchg
les
daa
jae
lret
push
push
fnsave
jge
idiv
lret
push
jno
pushf
leave
add
sbb
je
mov
leave
add
pushf
or
push
pop
inc
stc
add
popa
lcall
loope
xor
add
mov
mov
fstps
pop
add
mov
fs
mov
scas
add
xor
popa
add
jnp
sti
fisubl
ret
sub
adc
sub
stc
dec
mov
fstpl
sbb
xchg
xlat
aad
add
or
xchg
repz
jg
add
test
xor
pop
xor
and
add
adc
cmp
sub
push
add
movsb
jno
mov
xchg
pop
movsl
nopl
and
or
mov
xchg
add
je
call
mov
push
scas
es
xchg
filds
mov
pop
pusha
pop
mov
rolb
pushw
daa
jge
add
jns
pop
mov
mov
ret
pop
jmp
repz
inc
into
ds
xchg
adc
pop
je
aad
sbb
mov
xchg
add
xchg
ljmp
jecxz
andb
or
lcall
je
adc
dec
jmp
jg
lods
int3
dec
mov
push
and
push
int3
pop
and
add
mov
insb
fstpl
sub
push
ret
out
pop
push
jnp
adc
xlat
pop
flds
addb
xchg
cmp
sbb
sbb
lahf
push
jno
cmp
push
pop
jle
sub
fnstenv
aam
movsb
push
aaa
outsb
addl
adc
xchg
aad
xor
in
xor
je
push
pop
dec
leave
jb
sbb
insl
cmp
lahf
fs
and
push
popf
add
int
add
jecxz
or
push
sahf
ljmp
jl,pn
lcall
daa
mov
push
clc
jmp
andb
imul
dec
pop
mov
push
stc
inc
in
movsb
std
mov
lods
mov
xchg
cltd
pop
out
into
fadd
lret
xor
movsb
mov
dec
push
test
stos
test
adcb
jle
adc
or
jno
in
xchg
stos
pop
stc
lods
je
orb
mov
inc
jg
cmpl
mov
les
xor
push
loop
mov
push
adcl
sbb
push
or
lds
dec
xchg
push
inc
inc
lahf
stos
out
popa
jae
xchg
pop
adc
mov
or
test
inc
sbb
or
sti
adc
ds
jle
dec
lcall
bound
popa
inc
int
dec
ret
jmp
xor
xchg
add
das
inc
lret
repz
mov
pop
or
mov
xor
add
cmp
nop
popf
xchg
lret
aad
push
push
xchg
mov
cmp
out
pop
mov
dec
nop
xor
repnz
and
clc
mov
fldenv
aaa
adcl
pop
sbb
sarl
lret
out
jbe
push
cli
adc
jg
dec
or
ja
out
mov
mov
jo
sarb
xchg
push
mov
fists
inc
hlt
mov
mov
pop
js
outsl
mov
dec
or
dec
jmp
xchg
push
mov
inc
les
je
popa
adc
popf
xor
mull
cmpsb
jmp
shl
cmpsb
pop
cs
in
add
out
xchg
aas
mov
pop
cmp
movsl
pop
andb
fwait
jmp
movsl
lods
mov
mov
add
cmpb
fs
test
cmp
add
jp
pop
push
enter
xchg
outsb
imulb
ds
mov
shrb
mov
test
inc
add
inc
sub
inc
sub
loopne
xor
adc
pop
dec
aaa
seta
xchg
outsl
stos
pop
mov
or
mov
fndisi(8087
mov
testb
fiadds
add
mov
push
sbb
arpl
shll
mov
pop
cmp
or
jnp
and
mov
mov
mov
sub
push
jno
in
sub
sub
ds
adc
mov
testl
repnz
sahf
mov
outsb
out
insb
cmp
ljmp
push
cmc
xchg
sub
insl
out
lret
stos
int
mov
test
jae
and
shll
cmc
and
aas
les
cmp
adc
loopne
add
mov
inc
notl
ss
push
pusha
js
inc
and
xor
or
orb
test
cmpsl
mov
inc
pop
dec
outsb
lods
bound
jbe
adc
pop
mov
ret
movsb
lcall
bts
xor
pop
jae
mov
cli
jae
daa
xchg
jns
inc
enter
xor
jg
mov
daa
dec
stc
outsb
ret
in
and
mov
jb
stc
fidivl
dec
mov
in
in
je
rcl
xor
popf
mov
shrl
mov
es
and
mov
out
xor
test
inc
cmc
out
or
outsb
sbb
pop
movsl
or
iret
cmc
addps
mov
xor
aad
add
sbb
je
inc
jmp
dec
ljmp
mov
imul
pop
out
mov
fsubr
imul
push
or
pop
xchg
mov
pop
push
add
gs
adc
sub
push
adc
jmp
mov
aam
test
push
int3
cmp
gs
adc
cmc
xor
jmp
cs
or
mov
daa
test
icebp
cmp
pop
cmc
push
xchg
insl
pusha
xchg
xchg
inc
push
cmp
insl
stos
je
subl
andl
jl
fldt
add
sub
nop
out
pop
lea
in
sbb
dec
mov
cmpsl
sub
adc
cmp
aad
cmp
or
in
test
sbb
fimuls
add
test
push
add
xor
mov
fdivs
jnp
in
repnz
adc
push
jg
jbe
cmp
imul
and
movsl
fwait
lret
filds
ss
jae
mov
and
jl
mov
mov
pop
je
lret
sahf
fstpl
mov
and
inc
out
les
aas
cmpb
jp
imul
loope
dec
push
and
xchg
mov
ret
int3
push
test
popa
xchg
push
andl
inc
and
mov
movsb
adc
into
inc
mov
push
pop
xlat
add
or
jnp
push
xor
imul
popf
mov
enter
dec
outsl
movsl
xchg
flds
stc
mov
shll
int3
jbe
vmaxpd
sti
sbb
dec
sub
inc
js
stc
or
lods
jp
push
aam
fisttps
rcll
sbb
sti
xchg
sbb
push
mov
push
stc
and
mov
mov
xchg
mov
add
dec
lret
mov
jl
call
mov
xor
adc
xor
in
push
pop
pop
mov
and
mov
scas
arpl
sub
movsl
je
jns
leave
sub
aam
and
mov
dec
fsubrl
jb
out
enter
sahf
fs
push
or
pop
cmp
cmpsb
mov
jmp
mov
xor
dec
lods
nop
xor
push
pop
stos
mov
arpl
xchg
mov
mov
xlat
adc
xor
mov
mov
lahf
movsl
out
cmp
loop
mov
dec
adc
js
std
jl
mov
mov
push
and
add
scas
dec
jb
mov
iret
popa
pop
adc
mov
ficoml
data16
sbb
add
mov
mov
add
pop
stos
scas
enter
cmpsl
push
dec
cmpsl
test
call
pushf
sbb
lods
popa
mov
lods
loope
xchg
xchg
stc
adc
fcomip
mov
mov
mov
jl
std
dec
mov
inc
out
negb
add
add
sti
icebp
xchg
rolb
ljmp
inc
jb
fwait
lods
call
je
sub
out
inc
pushf
mov
stc
iret
repnz
jmp
push
adcb
out
daa
cmc
jecxz
scas
adc
inc
mov
ja
jae
or
and
xor
incb
and
scas
sbb
std
enter
out
xchg
into
movsl
jp
inc
push
inc
adc
fistpll
and
add
mov
mov
inc
andl
xchg
push
adc
cmpl
into
into
pop
xor
sbb
mov
mov
sbb
and
lea
jecxz
push
pop
out
xor
lock
ljmp
sbb
push
lret
jg
add
cmpsl
or
out
hlt
jg
es
mov
mov
cld
inc
cmc
mov
pop
std
xchg
stos
xchg
jnp
fiaddl
adc
xor
loopne
push
ror
jmp
fisttpl
test
out
sub
adc
dec
sbb
shl
mov
xor
and
xor
loope
jle
pushf
jp
jbe
scas
mov
repnz
outsl
mov
imul
adc
jnp
ss
adc
fadds
sbb
mov
pop
push
sti
int
inc
les
pop
push
test
fidivrl
fcompl
mov
pop
jo
xor
data16
ret
and
shrl
cmp
das
stc
jns
sub
xlat
mov
data16
add
imul
xchg
xlat
jp
push
cmp
loopne
rorb
inc
add
inc
shll
and
adc
in
lret
lds
jg
adc
or
xchg
xchg
lcall
jle
sbb
idiv
adc
and
sti
aad
leave
cmpsb
dec
cmp
incl
in
xor
loop
mov
insl
inc
sbb
mov
xor
daa
scas
pusha
mov
ja
sar
stc
leave
lods
mov
hlt
dec
daa
fimull
outsl
gs
sbb
lahf
xchg
in
mov
pop
mov
cmc
dec
push
std
sbb
movsl
movsl
mov
cmpsl
push
das
faddl
inc
mov
dec
fldt
and
insb
or
inc
cmp
jecxz
stos
int3
push
std
sub
rorb
in
or
mov
stos
push
in
mov
notl
movsb
pop
dec
sub
push
xchg
push
enter
sub
rcrb
mov
rcl
daa
nop
in
and
mov
push
push
aaa
add
mov
jge
and
fldt
sbb
push
test
cmp
lock
out
lds
ret
movsl
jge
mov
call
int3
aam
cs
xchg
shlb
bound
pop
imul
jae
bound
int
jp
cmp
ja
adc
dec
cmp
in
out
mov
mov
adc
jl
sbb
mov
and
icebp
mov
enter
or
or
sub
dec
rorl
jae
jp
or
jae
inc
sbb
cmp
roll
mov
daa
clc
xchg
fstpt
add
out
bound
and
sub
cmp
nop
test
and
in
xchg
test
pusha
and
or
sub
adc
push
mov
test
icebp
mov
and
push
sub
dec
test
mov
sahf
xor
decb
jle
add
inc
pusha
enter
sti
sti
je
push
sbb
push
add
jo
sbb
pushf
xor
xor
aam
test
popa
mov
mov
cwtl
mov
lcall
pushf
das
adc
push
iret
arpl
adc
roll
aad
push
cmp
pop
add
sti
ret
and
fwait
pop
sub
roll
cs
cmp
mov
enter
sbb
mov
or
jl
mov
push
je
jecxz
jl
xchg
mov
cmp
dec
je
xchg
pop
pop
pop
pop
movl
sbb
cmp
xchg
mov
out
pushf
pop
cli
dec
push
and
repnz
add
xor
cwtl
shll
and
loop
adc
sub
xchg
jb
je
inc
repnz
rcl
xchg
out
lea
xlat
or
jge
sub
faddl
jmp
cmc
test
jge
cmp
dec
loop
or
adc
fsincos
cmpsb
gs
lods
out
insl
sahf
ret
fildl
pop
in
enter
xchg
xchg
popf
loope
ret
and
pop
add
sub
repz
orl
xchg
push
notl
out
fistps
adcb
scas
mov
sbbb
leave
das
fwait
fwait
mov
rcll
mov
pop
sub
sub
in
adc
lods
fdivs
fdivrs
pop
mov
fcmovu
and
movsl
fadds
sub
push
mov
out
mov
int3
arpl
jg
inc
cmp
mov
and
xchg
stos
pop
pop
jmp
popf
sub
xchg
pop
in
fwait
pop
push
sbb
mov
mov
xlat
sbb
fsts
lret
push
sub
lea
hlt
xchg
ret
jo
mov
jne
mov
mov
addr16
popf
mov
iret
xor
movsb
sbb
add
mov
xchg
lods
mov
sbb
adc
lock
scas
inc
out
push
pop
inc
fdivrs
rcll
clc
lret
xchg
cmc
cwtl
xchg
repnz
cmc
lods
and
xor
inc
add
dec
inc
arpl
test
sbb
mov
ret
fiadds
lret
lcall
sbb
ljmp
loop
nop
scas
hlt
xor
xchg
pop
jns
mov
test
outsb
divb
add
mov
repz
mov
mov
or
mov
imul
fldenv
mov
cltd
dec
mov
mov
outsb
add
cmp
lea
push
mov
push
addr16
and
jo
push
and
test
test
cmc
pop
mov
cli
mov
jp
cmp
jg
mov
and
je
fdivr
add
mov
lahf
loopne
int
inc
lcall
into
adc
xchg
daa
cmp
jb
cmc
xlat
scas
xchg
push
std
arpl
add
or
and
inc
jns
mov
in
inc
cltd
outsb
fwait
cmp
jno
js
shlb
cs
add
movsl
addr16
mov
int3
mov
push
pop
rorb
xchg
movsb
or
fisubs
xchg
inc
fcoms
cmp
loope
mov
std
push
jl
mov
data16
ret
push
outsl
xchg
adc
adc
pusha
dec
and
cmp
xor
shrl
jp
inc
adc
lea
lahf
jne
dec
insb
push
dec
popf
data16
mov
dec
les
mov
cmp
push
jns
mov
push
leave
mov
xor
push
shl
mov
jecxz
or
pop
lea
ja
hlt
icebp
lret
or
notb
or
push
loopne
stc
mov
hlt
outsl
fsts
sub
cmp
das
push
sbb
adc
inc
jb
add
aam
sub
pop
mov
ss
orl
mov
sub
and
call
ljmp
call
dec
ret
mov
sahf
rolb
inc
pop
mov
cmc
adc
shr
int
fsubp
inc
push
out
dec
aam
push
xchg
sarl
test
jns
mov
fs
xchg
bound
push
add
or
sbb
pop
mov
das
insl
mov
cwtl
push
mov
test
inc
out
inc
mov
call
fiadds
rolb
lret
dec
sub
or
xor
out
outsl
or
xlat
adc
iret
aad
push
mov
mov
insl
sbb
xchg
pushf
shl
mov
and
pop
and
lods
pop
jae
add
xchg
mov
je
jns
xchg
sub
nop
pop
adc
lock
jo
add
adc
push
inc
jmp
xorl
pop
shlb
je
or
mov
pusha
sbb
jbe
mov
stos
cli
inc
adc
pop
stos
repz
jne
mov
jb
inc
pop
idiv
jmp
ja
mulb
int
jge
shrl
in
inc
pop
push
clc
push
fnstenv
aaa
loopne
fcoml
aam
jge
rep
mov
jge
cwtl
and
cs
pop
add
dec
mov
aad
push
pop
movsl
mov
mov
daa
sub
inc
jge
and
and
mov
cmp
jb
shl
and
jecxz
cmpsb
popa
aad
lret
in
loope
sbb
loope
fildll
in
ja
mov
test
movsb
jo
arpl
shll
stos
nop
daa
and
push
pop
push
jle
pop
lods
mov
inc
add
loop
push
imulb
enter
fwait
and
dec
cmp
daa
ds
xor
popf
push
and
push
or
imul
push
aam
mov
inc
les
faddp
lds
cmp
xchg
or
push
cmp
dec
in
xchg
or
push
inc
ja
push
adc
into
int3
push
xchg
sarb
xor
mov
xchg
mov
push
push
ds
xor
mov
jmp
mov
add
adcb
sub
outsb
testl
insl
jns
adc
xor
jbe
adc
xor
fsubs
fs
mov
jecxz
jecxz
sbb
cmp
cmpsl
xor
int
cs
push
pop
xchg
add
fwait
arpl
jle
dec
and
adc
into
lods
addb
loope
lea
jne
mov
or
cmp
push
fistps
and
nop
cli
add
scas
mov
daa
hlt
pop
mov
push
adc
mov
push
andnps
mov
dec
inc
nop
fdivrs
insb
test
je
jne
or
sub
out
dec
push
mov
outsb
cmp
jnp
add
mov
inc
mov
cmc
ret
xchg
xchg
sahf
mov
or
jle
dec
fcmovb
sub
ja
insb
js
mov
jnp
andb
xchg
jae
bound
leave
mov
leave
aaa
mov
test
pushf
fwait
loopne
xor
sub
xchg
mov
adc
cli
jnp
scas
rorl
es
jle
insb
shrl
or
add
dec
mov
out
xor
dec
cli
sbb
jmp
test
xchg
jne
cmpl
sbb
push
sbbb
fldenv
out
xchg
adc
lods
loop
lods
out
jns
dec
cmp
inc
data16
int
jl
push
mov
pushf
imul
scas
jno
xchg
movzwl
imul
mov
mov
into
dec
arpl
ja
les
jmp
sub
addr16
cmpsb
mov
or
int
daa
clc
enter
jne
inc
inc
jmp
inc
dec
push
push
movsl
push
bnd
xlat
loop
orl
pop
cmc
push
sbb
push
insb
test
cmc
or
cli
test
cli
stc
mov
nop
scas
cmp
sbb
clc
lods
sbb
push
add
mov
aas
fstpt
mov
pop
xchg
test
lret
test
xchg
mov
and
gs
imul
or
xor
xorl
outsb
dec
mov
cmp
adc
mov
test
clc
cmp
fsubrs
js
jp
jnp
or
mov
mov
out
and
push
lock
pusha
les
pop
adc
mov
gs
cmc
sub
add
sti
mov
inc
outsb
mov
and
loop
orb
lahf
imull
mov
or
add
sub
xlat
shld
pop
xchg
adc
shll
fisubrl
nop
push
sbb
mov
scas
push
mov
in
add
outsb
jmp
jmp
in
jbe
fwait
add
dec
mov
mov
fnstcw
dec
sbb
jae
test
inc
repnz
xor
out
adc
dec
ja
push
cmp
mov
aas
inc
pushf
xchg
ss
xor
sbb
popf
inc
daa
push
mov
data16
jmp
sbb
adc
jne
pop
xor
bnd
jmp
jge
sub
movd
adc
push
add
push
cld
lahf
dec
and
jmp
jns
or
or
in
in
rcrl
ja
test
and
mov
lods
scas
fisubs
lret
aam
or
jge
lods
adc
out
mov
addr16
jne
lods
pusha
mov
test
iret
cli
dec
testb
sub
xor
les
mov
outsl
sbb
cmp
jp
mov
aad
mov
lea
xor
xchg
cs
les
mov
add
cld
test
mov
pop
and
fdivrs
pop
or
in
divb
bound
add
mov
inc
leave
add
mov
je
sub
icebp
jg
imul
xor
push
xor
xchg
xor
lret
dec
cwtl
fsubr
xchg
ja
out
scas
movsb
cld
daa
and
call
jg
jne
dec
sub
stos
mov
mov
out
in
sbb
push
cs
jle
in
inc
or
mov
sti
pop
dec
cmc
dec
lods
jae
add
push
testb
xor
orl
inc
lock
gs
sbb
lret
mov
xor
and
mov
xchg
imul
inc
push
sub
scas
push
mov
pushf
enter
mov
mov
insb
push
jb
loop
cmp
js
push
and
mov
push
inc
mov
or
outsl
loop
mov
xor
incb
xchg
fdivrl
adc
or
jo
and
fnstenv
sbb
jae
in
aam
stos
lret
loop
out
sub
ja
sarl
cmc
and
mov
jp
pop
pop
jno
fmul
popa
sub
mov
cmp
dec
test
push
dec
cld
inc
pop
stc
mov
jo
or
inc
xor
add
mov
pop
push
cmp
loopne
mov
adc
dec
jns
and
inc
andl
xchg
mov
test
sub
lock
xchg
cwtl
movsb
or
int
ss
sbb
out
cld
das
dec
bnd
test
mov
test
scas
daa
mov
sahf
leave
popa
arpl
test
outsl
or
mov
aas
push
lahf
or
imul
mov
sub
add
mov
daa
pushf
scas
mov
pop
lcall
push
in
inc
sbb
dec
pop
xor
jle
int3
jbe
aas
adc
loopne
aad
inc
mov
out
and
xor
mov
cli
je
lahf
fwait
lcall
mov
punpcklbw
mov
sbb
pop
adc
les
push
pop
daa
addr16
mov
fiadds
cltd
xor
shrb
mov
inc
pop
xchg
fbld
negb
cltd
orb
movsl
mov
cltd
and
xchg
sub
or
cmp
xchg
inc
int
imul
inc
hlt
aaa
lock
addr16
loop
outsb
iret
jle
pop
iret
dec
cmp
add
clc
jl,pt
arpl
mov
out
rolb
cmp
fistl
pushf
out
arpl
cmp
ss
mov
into
adc
call
dec
mov
push
add
es
pusha
fidivrs
insl
cmp
fwait
mov
mov
add
dec
aam
push
sub
lods
aad
jae
push
cmp
jecxz
push
inc
lds
mov
rcr
stc
mov
xchg
lret
xor
out
xchg
add
pushf
add
pop
and
jbe
mov
push
fildl
sub
andb
jle
pop
in
mov
imul
lcall
lahf
push
push
test
or
mov
inc
in
add
je
loopne
or
lock
ljmp
sbb
out
cmpsb
das
loopne
hlt
jbe
movsb
call
in
ja
jle
cltd
jl
adc
jp
lahf
dec
je
mov
jecxz
inc
mov
xchg
stos
cltd
data16
ficoml
pusha
mov
daa
pop
inc
jecxz
mov
add
pop
lock
push
loopne
in
lret
xor
mov
shl
aam
jmp
add
and
and
jae
sbb
popa
mov
lea
jg
or
lods
cmp
add
push
sbb
mov
push
mov
insb
scas
das
sarl
shrb
xchg
popf
push
push
es
xchg
xor
jno
xor
clc
jmp
adc
push
in
dec
sbb
pop
xchg
and
ret
mov
mov
xor
hlt
xchg
jecxz
adc
pop
call
es
adc
shll
push
and
dec
and
je
jns
dec
rcrl
inc
movsl
shrl
push
or
pop
loope
icebp
cld
iret
sbb
adc
push
add
sub
adc
mov
adc
push
xchg
add
cmp
popa
hlt
stos
into
sub
out
mov
icebp
mov
adc
mov
mov
cmp
and
xor
mov
or
cmp
lods
or
pushf
aas
push
test
inc
int3
add
scas
mov
call
xchg
jl
pop
ss
push
push
test
sub
mov
insl
mov
js
movsb
out
es
xor
cli
jb
mov
into
aaa
jne
mov
adc
cwtl
jns
and
jp
mov
push
pop
out
xchg
out
aaa
testb
mov
adc
jl
popl
or
aaa
imul
inc
clc
divb
mov
fstl
push
sub
fwait
test
xlat
imul
fcoms
sbb
add
pop
aas
mov
pop
jecxz
stos
movsl
clc
xor
icebp
xor
add
jns
fstpl
movsb
inc
jl
lahf
mov
add
inc
js
xchg
inc
fsubrl
inc
jno
mull
cmp
rorl
movsb
push
and
int
mov
enter
xchg
jecxz
xlat
xchg
sub
xchg
add
mov
push
mov
add
inc
fs
loopne
inc
push
sar
lret
or
add
sub
dec
xchg
pop
mov
sarb
imul
cmp
pop
push
testl
stc
xor
je
adc
push
dec
push
in
lods
cmpsb
iret
mov
in
icebp
aam
add
out
hlt
les
fcmovnbe
lds
mov
hlt
repz
adc
out
aad
mov
out
cltd
jae
in
and
cmp
push
popa
aam
mov
jmp
fcomps
popf
ret
add
push
test
rcll
and
daa
and
push
or
andb
jo
fwait
dec
test
inc
jb
int
jp
adc
cmp
and
stos
sbb
aas
test
dec
lods
cltd
outsl
cmpsb
adc
lods
test
test
insl
pop
adc
cmp
sti
mov
dec
and
adc
jne
movsl
js
push
test
or
adc
shlb
push
dec
inc
sti
fsubrl
in
mov
mov
movsl
aad
bound
aam
shrl
xor
adc
cmp
cmp
notl
popl
jo
shrb
ljmp
and
cmpsb
push
or
inc
add
cmc
arpl
inc
andl
push
push
orl
iret
cmpsl
gs
lahf
test
mov
mulb
adc
dec
in
jno
je
roll
cmp
loop
push
xchg
les
imul
leave
in
loop
cs
ss
sbb
and
scas
inc
out
pop
push
jbe
cli
mov
int
gs
bound
pop
rol
je
sub
data16
out
push
pop
stos
int3
adc
sbb
jne
cld
mov
inc
out
adcl
adc
rclb
aas
js
mov
ror
icebp
xor
es
pop
sahf
iret
xor
dec
adc
lods
je
stc
lret
nop
je
mov
rcll
or
adc
jbe
ds
push
push
pop
leave
cmp
daa
lods
enter
xchg
pop
aaa
jno
adc
add
mov
mov
test
in
adc
sub
out
loop
pop
and
mov
stos
mov
or
sar
jmp
mov
outsb
cmp
std
and
xchg
in
ret
stos
mov
lock
inc
adc
or
dec
cmp
aaa
dec
or
jno
fistl
aaa
xrelease
pop
mov
hlt
pop
dec
push
mov
mov
cmc
lds
sub
mov
push
filds
adc
mov
sub
popl
fnsave
leave
xchg
std
fsts
icebp
sbb
roll
cmpsb
push
stos
enter
cld
cmpb
sbb
mulb
mov
add
push
add
inc
hlt
sub
inc
sahf
sti
sbb
repz
dec
aas
adc
insb
jns
into
ss
lock
in
out
sbb
inc
aam
add
push
enter
dec
imul
add
ds
or
push
shr
in
push
lcall
fst
add
js
inc
jecxz
xor
jmp
sahf
xchg
sub
imul
insl
shlb
cmpsb
clc
gs
sbb
mov
cmc
mov
mov
or
mov
insb
nop
bound
xor
xchg
lods
cwtl
out
loopne
idivb
pop
popf
ds
push
lods
aaa
mov
lock
mov
jge
push
mov
call
add
clc
aam
scas
and
adc
xor
mov
test
cmp
jb
jb
cmp
and
inc
pop
jae
inc
loopne
shrl
es
xlat
push
mov
jle
add
adc
jmp
and
fstl
fidivl
adc
jecxz
hlt
lock
add
sbb
push
mov
inc
dec
xor
inc
mov
clc
lret
sbb
dec
ret
inc
shll
mov
mov
dec
inc
xor
jb
pop
out
cmp
push
call
popf
fnstsw
sbb
leave
inc
lcall
call
inc
cmp
push
rcrb
push
and
dec
cs
dec
in
push
sbb
icebp
aas
sub
inc
push
ljmp
das
mov
push
mov
jne
aaa
dec
xchg
or
mov
mov
and
in
mov
out
stos
loopne
iret
xchg
xchg
test
push
mov
mov
and
dec
and
testl
gs
and
lret
sub
cmp
inc
mov
adc
arpl
ret
fnsave
cmp
outsl
mov
addb
outsl
repz
jbe
jg
xchg
in
fdivrp
icebp
mov
scas
mov
add
mov
movsl
and
add
loop
stc
shll
xor
mov
push
pop
mov
aaa
cmp
ds
sbb
outsb
test
popa
in
and
insl
fwait
sub
push
xchg
in
cld
loope
jb
jecxz
and
fs
ret
add
adc
andl
lods
inc
add
data16
sti
addr16
outsb
pop
shl
in
or
test
jecxz
dec
lock
dec
fildll
jno
fisubl
test
jo
cmp
ss
shrb
xorb
lahf
push
jns
dec
xchg
inc
mov
lret
sbb
pop
mov
jae,pt
test
scas
test
or
pop
pop
bound
ret
mov
cli
push
insl
adc
dec
sbb
jb
test
rcr
push
cmp
pop
mov
cmp
push
jae
ds
fs
cmp
mov
xchg
idivl
repnz
outsb
fdivl
lret
dec
jmp
jnp
aaa
cmp
jl
stc
push
lret
insl
arpl
pop
sub
sbb
lods
xor
and
call
inc
sub
xchg
fwait
scas
dec
sbb
and
or
add
mov
add
es
sahf
push
aad
inc
or
sbb
sbb
pop
aam
shll
inc
sbb
repnz
in
sub
adc
lods
adc
jb
push
ja
scas
jmp
jg
ds
inc
mov
adc
pop
roll
mov
mov
fwait
and
sub
clc
cmc
pusha
rclb
jmp
lods
add
lods
aas
cmp
push
xchg
lret
ret
sahf
xchg
jno
sti
clc
ror
cs
aam
sti
ds
cli
mov
scas
test
mov
ficoml
lcall
mov
js
popf
xacquire
add
dec
pop
dec
mov
sbb
xchg
xchg
js
cs
xor
and
xlat
addr16
sahf
cli
stos
pushf
sub
loopne
xor
push
int3
cmpb
xchg
mov
jbe
insl
cmp
jl
and
movsb
push
or
push
pop
xchg
ds
xor
inc
push
inc
negl
shl
jnp
sarb
imul
fucompp
xor
or
mov
xor
sti
sahf
les
ror
mov
add
mul
ficompl
andl
iret
inc
fsubrl
jl
push
and
roll
and
mov
xchg
out
pop
jl
les
fistpll
xor
adc
ja
mov
adc
push
leave
stc
xor
fldl
lea
cs
fpatan
test
int3
adcl
xchg
aaa
out
add
pop
sbb
ficomps
xchg
sbb
out
inc
jns
push
pop
sub
stos
out
pop
push
mov
iret
push
pop
pop
aad
xchg
cmp
fbld
xor
xor
inc
bound
xcrypt-cfb
cmpsl
daa
daa
imul
cmpsb
inc
pop
ss
dec
cmp
mov
mov
sbb
mov
es
cld
aam
sbb
pushf
leave
outsb
push
pop
or
mov
shrl
xchg
sub
jmp
lcall
lret
lock
mov
push
aam
rclb
mov
mov
mov
fiadds
xchg
loop
or
cmpsb
popa
int3
ret
addr16
ljmp
push
sub
mov
das
lods
fnsave
ss
inc
sub
lea
mov
xchg
jns
push
or
dec
cmp
sub
loopne
xor
or
jmp
fstl
dec
sub
mov
std
sub
bound
ss
sub
or
jb
sub
call
sti
xor
push
jb
and
jmp
cmp
push
add
cmp
in
and
idivb
addr16
inc
mov
push
xchg
mov
stc
mov
fidivrs
dec
lds
pop
push
test
fisubs
inc
outsl
and
or
call
push
out
loopne
pop
cmc
enter
stc
jmp
lock
sub
xorl
cld
mov
jb
or
inc
fs
cmp
mov
dec
jae
jno
sbb
push
push
inc
mov
mov
push
sub
andb
int
cmp
pop
lds
leave
shll
sbb
divb
adc
orb
cmpsl
jl
pinsrw
or
shrb
hlt
or
mov
xor
mov
adc
subb
lahf
dec
std
nop
xor
pop
stc
jno
pop
notl
dec
mov
ljmp
or
add
sti
jno
scas
or
pushf
jno
sbbl
adc
jne
jg
adc
push
cmp
jbe
push
mov
mov
or
jg
out
mov
arpl
in
imul
cmp
fmul
xchg
push
push
into
xlat
je
xchg
and
mov
mov
sbb
dec
lods
insl
ret
ret
inc
mov
loop
cltd
dec
stc
push
push
jle
lret
insb
rcll
ss
lds
call
cld
dec
enter
inc
lcall
mov
aaa
jno
push
pop
sub
mov
mov
sti
aad
test
adc
cmp
shrl
movsb
in
dec
dec
push
add
add
pop
jnp
movsl
pop
scas
out
popf
cli
xchg
xor
or
clc
repnz
mov
jge
mov
mov
mov
dec
test
decl
int
xor
rcll
call
jle
js
add
in
sarb
jno
popa
push
stos
jg
add
xchg
jmp
popf
loop
xchg
sahf
mov
dec
scas
mov
inc
loope
repz
adc
xchg
rclb
lock
stc
pop
cmp
test
gs
je
and
push
inc
cmp
mov
mov
lret
adc
and
aad
jge
cmp
cli
or
rclb
xor
jne
jae
push
call
pop
lahf
adc
pop
sti
pop
lahf
cmc
aas
jne
sarb
jae
or
bound
icebp
ficompl
lret
outsl
call
sbb
and
mov
int3
je
loop
or
add
xor
cmp
mov
dec
dec
cmc
and
cli
sub
aas
jg,pt
fstpl
mov
lds
cld
divl
mov
mov
xchg
icebp
mov
add
xor
mov
pusha
push
in
int3
mov
arpl
mov
mov
fimuls
pop
push
xorb
arpl
mov
jge
jns
dec
loopne
les
sub
push
fadds
dec
xor
sub
sbb
in
hlt
int
adc
cmp
mov
pop
adc
adc
pop
stc
push
rcl
loopne
out
cmp
dec
xchg
or
jno
xchg
and
add
jae
pavgw
test
in
rcll
push
mov
mov
xchg
rclb
xor
sub
insl
rolb
mov
das
push
push
adcl
daa
jbe
or
push
sahf
inc
insl
or
push
pop
or
push
lcall
mov
xor
stos
in
push
ret
data16
mov
adc
sub
jp
inc
xchg
arpl
out
je
pop
adc
lret
push
out
daa
cmp
add
rcr
mov
push
icebp
jb
rclb
adc
jmp
inc
adc
jb
nop
test
pop
test
pop
test
lds
inc
repz
xor
xlat
push
insl
insl
mov
movsl
dec
sti
push
mov
xchg
xor
push
dec
or
ljmp
stc
add
pop
mov
fcomps
adc
xchg
xchg
aam
and
mov
lahf
out
in
inc
sub
cmpsb
aam
cwtl
dec
push
pushf
in
sub
sub
mov
push
pop
dec
pop
inc
out
or
pusha
push
fs
fisttps
and
out
test
enter
cwtl
loop
flds
or
fnstcw
push
push
test
movsb
push
fcmovne
popf
iret
jno
cwtl
lcall
cmp
xchg
push
es
stc
dec
ret
push
daa
fwait
clc
sbb
pop
lods
loopne
aas
clc
or
mov
sub
icebp
inc
lods
or
data16
aam
adc
imull
xchg
jns
fwait
dec
xor
mov
lret
xorb
pop
cmp
movsl
mov
mov
push
adc
ds
bound
adc
jecxz
movsb
orb
sub
repnz
test
pop
xor
inc
test
xor
popa
push
add
fcomip
inc
adc
xor
pop
jp
or
pop
bound
into
push
jb
fldt
cmp
andb
adc
xchg
or
sub
out
mov
rorl
outsl
jmp
setg
pop
xor
mov
cld
and
imulb
add
mov
ret
and
inc
lahf
lock
repz
shlb
adc
test
sub
cmp
or
sbb
loope
and
movsb
push
outsb
in
adc
les
cmp
and
pop
mov
jbe
lds
cmp
loopne
pop
lock
mov
popa
push
popa
arpl
or
sarb
js
sub
pop
addr16
mov
dec
mov
shlb
mov
nop
or
or
jmp
push
cs
sbb
scas
or
xchg
push
or
cld
neg
lods
mov
addr16
inc
mov
pop
xor
add
push
push
add
loope
insb
ja
push
xor
and
sarl
ret
pop
add
scas
xlat
mov
daa
fmull
loope
xchg
roll
inc
cld
daa
dec
stc
xor
xchg
js
mov
dec
lea
inc
clc
jecxz
ja
inc
jnp
and
and
pusha
sahf
mov
pop
ffreep
add
aad
mov
jle
icebp
pop
push
cld
stos
je
jge
inc
pop
push
loop
aaa
mov
xchg
xor
dec
pusha
in
inc
ss
shrb
rol
xchg
mov
shll
pop
jnp
fwait
and
setno
mov
loope
push
cltd
cmpsb
out
popf
arpl
xchg
fiaddl
lret
out
int
sbbl
outsb
fs
lret
pop
add
add
clc
lret
lods
nop
push
movsb
insb
rcll
movsb
sbb
cwtl
push
or
test
clc
clc
pop
pop
adc
out
xchg
push
test
add
mov
lret
ja
pop
dec
adc
rcrl
pop
aam
push
fildl
bound
push
sub
jp
dec
les
fbstp
mov
cmp
mov
lcall
pop
ss
dec
lret
es
or
mov
rcrb
fwait
clc
mov
aad
add
loopne
frndint
xchg
and
mov
es
push
jp
mov
jecxz
push
sti
xchg
sbb
lret
xchg
adc
ficomps
mov
lds
je
pop
subb
push
int3
mov
cwtl
mov
lahf
mov
leave
mov
inc
loopne
add
icebp
divb
outsl
repnz
inc
cmc
and
cmpsb
icebp
aam
icebp
and
xor
push
sbb
cmpsl
jp
int3
ds
lahf
rep
fldenv
pushf
dec
sub
js
pop
and
push
jecxz
stos
xchg
sub
jae
adc
dec
mov
outsb
fsubrs
insb
imul
ja
push
xchg
jle
jno
mov
ret
xchg
mov
adcb
lcall
divb
mov
push
sbb
test
pushf
mov
dec
inc
push
xchg
mov
sub
push
hlt
sub
fisttpl
sbb
xchg
add
aam
popf
mov
push
movsb
cmpb
xchg
push
cmpsb
rcrb
addl
sub
mov
cs
fcom
test
test
pop
push
push
mov
das
je
stos
fcmovnu
cmpsl
inc
dec
push
xor
xor
lret
call
leave
mov
sbb
adc
jl
stos
shl
xor
insl
push
in
sub
sub
pop
pop
push
in
dec
stos
shrl
xlat
cmp
pop
cli
sub
inc
call
iret
sbb
andb
pushf
sub
dec
adc
js
push
addb
xor
ret
sti
in
mov
or
into
ret
sahf
xchg
pop
sub
cmp
mov
sahf
push
cmp
call
lea
push
inc
mov
cltd
pusha
pop
out
cwtl
shll
aad
sbb
fnstenv
xchg
cmpsl
sbb
jmp
dec
rcrb
fwait
or
jbe
sub
mov
iret
inc
cld
sbb
outsl
lock
xlat
and
and
add
stc
aam
mov
mov
adc
icebp
in
mov
cli
scas
xchg
mov
mov
bound
pop
into
sarl
jmp
inc
cltd
or
and
inc
sub
mov
sti
push
jae
mov
inc
pop
dec
push
adc
gs
ss
xchg
push
pop
fistps
or
lds
clc
push
xlat
hlt
std
push
dec
fwait
mov
sub
dec
pop
nop
clc
adc
and
pusha
mov
fiadds
scas
icebp
mov
jo
mov
xor
fcompl
sub
lret
imul
dec
adcl
out
push
insb
sbb
icebp
mov
iret
lock
outsb
jb
stc
xchg
xorl
push
aam
push
stc
test
in
sub
inc
notl
outsl
test
sbb
or
dec
jecxz
jge
popf
xor
arpl
cmp
ret
pop
lcall
adc
sbb
push
repz
push
inc
ljmp
in
mov
add
add
out
dec
adc
lcall
repz
js
sarl
inc
cmp
or
fcomps
bound
ret
sbb
inc
jae
and
lret
sbb
pop
std
in
xor
sahf
mov
call
inc
dec
pushf
test
dec
inc
jg
adc
push
ja
adc
push
or
mov
sub
cli
adc
hlt
push
cmp
int
imul
xchg
aas
pushf
js
or
xor
stc
test
mov
pop
cmpsb
and
and
orl
imul
adc
dec
fisubs
pop
jns
inc
cmc
push
xor
jno
fisubs
cld
jbe
cs
mov
loopne
mov
lods
ret
stos
int
xor
leave
shlb
dec
dec
mov
in
sbb
dec
shrb
mov
push
enter
jne
cmp
je
dec
pusha
push
popa
pop
lods
fistps
ljmp
xchg
or
into
mov
dec
cmp
shlb
movsb
sbb
dec
fwait
mov
pushf
stos
ss
data16
cmp
push
dec
iret
sub
add
sbb
mov
mov
pop
cs
mov
jl
jle
repnz
adc
xchg
pop
icebp
sub
insl
scas
scas
and
cmp
jnp
orb
cmp
outsb
or
enter
add
xchg
jbe
sbb
sar
sub
fmull
dec
mov
cmp
dec
popa
dec
sbb
ret
lods
jmp
cmpsl
imul
popa
test
insl
je
jbe
stc
jno
mov
cmp
dec
xor
ret
cmpsl
data16
loope
dec
stc
adc
in
sbb
imul
jp
subl
sbb
push
sub
mov
lods
sub
rorl
imul
outsl
mov
shlb
lock
xor
cmp
xor
cmp
das
outsb
mov
xor
lods
inc
or
bound
jp
mov
testl
adc
test
ljmp
cmp
push
adc
fmull
mov
mov
mov
mov
mov
addl
outsb
jmp
pop
xor
fucomi
out
aam
les
stos
out
sbb
or
fwait
mov
jecxz
aad
and
or
mov
pushf
xchg
fs
push
inc
mov
movsb
das
xchg
push
push
add
jg
xchg
stos
fs
mov
cmp
push
pop
test
mov
push
loopne
pop
inc
mull
inc
pop
push
xchg
cld
pop
push
mov
mov
imulb
ret
jno
inc
add
hlt
xor
mov
sarl
jp
mov
jp
push
out
dec
sub
or
lock
adc
pop
div
outsb
dec
push
cmpsb
fimull
sbb
cmp
jnp
div
ret
add
sub
sbb
jmp
aad
popa
mov
stos
es
cmp
mov
andb
out
in
push
or
pop
inc
divl
loop
stc
mov
push
jmp
or
pop
cmp
and
mov
movsl
pop
mov
daa
in
inc
shrb
inc
nop
ret
insl
pop
lcall
pop
sub
icebp
aam
jmp
cmpsl
xchg
hlt
xor
adc
sub
sbb
jno
pushf
das
dec
lret
mov
mov
inc
cmp
xlat
in
daa
xor
sbb
pop
sbb
cld
in
xor
addr16
pushf
push
imul
push
pop
and
stos
leave
cmp
fmul
xor
fstl
out
pop
divps
lret
loopne
xchg
leave
add
test
aad
or
lds
mov
push
lret
push
adc
iret
sub
testb
scas
pop
push
sahf
sahf
mov
fbstp
mov
enter
pushf
cld
lahf
stos
push
add
daa
fbld
or
cwtl
lea
lods
loope
fcoms
es
mov
sbb
sbb
cltd
sub
bound
cmp
inc
negb
in
sbbl
adc
xlat
or
loope
dec
pop
outsb
mov
push
push
adc
jae
filds
imul
divb
push
rclb
fiaddl
xor
mov
call
mov
hlt
add
xchg
sub
dec
cli
into
add
jnp
adc
sub
scas
cmp
push
out
movsl
and
push
mov
inc
add
in
inc
lea
cmp
sbb
dec
xor
fisubrl
pop
fcmovb
adc
or
cli
push
jnp
fwait
pop
jge
iret
out
adc
or
psubq
fwait
sar
pop
xor
scas
xchg
jle
jnp
dec
xor
xchg
add
popw
test
dec
out
lock
lods
xchg
or
mov
adc
lcall
sbb
or
inc
pop
mov
xor
dec
xchg
adc
mov
xchg
popf
mov
aad
jno
arpl
mov
mov
mov
dec
sub
shlb
inc
cmp
dec
insb
and
ja
in
add
adc
lcall
mov
lea
xor
out
push
mov
sbb
outsl
pop
add
push
dec
gs
fildl
hlt
jmp
jmp
and
call
int
pop
sbb
mov
dec
aad
push
test
insb
sbb
movsb
inc
sbb
jae
mov
adc
loopne
ret
adc
lock
sbb
mov
aaa
add
int
imul
cmp
mov
je
inc
lods
bound
jbe
popf
in
aaa
sub
fcompl
arpl
loop
jle
lret
xor
out
out
mov
xor
imul
addl
dec
jbe
in
mov
sbb
jns
jecxz
mov
inc
jo
loop
insl
cmp
adc
mov
adc
jp
adc
or
movsb
mov
fildll
enter
data16
inc
ds
add
ljmp
mov
add
dec
cs
jle
sub
mulb
jp
pop
pop
std
add
aam
adc
mov
push
inc
insl
fwait
mov
repnz
lret
hlt
mov
mov
orb
adcb
pop
lock
pop
push
adc
cmp
adc
fld
aam
add
mov
andb
ret
mov
jecxz
mov
and
and
int3
stos
cmp
push
mov
add
jno
in
jne
stc
pop
mov
into
adc
adc
iret
sub
sub
loope
push
int
lods
test
pop
push
xchg
je
jns
aam
push
cmpsb
das
jns
push
ss
mov
push
pop
mov
insb
mov
adc
inc
out
int
out
mov
sbb
jo
xor
pop
xor
je
dec
inc
jge
ss
pop
inc
jg
pop
adc
out
adc
cmp
stos
cli
iret
daa
dec
jmp
cmp
xchg
sbb
inc
roll
xchg
hlt
dec
pop
imul
pop
les
pop
and
pusha
enter
xchg
pop
xor
popf
loop
adc
ficoml
add
mov
je
icebp
ret
adc
xchg
icebp
jg
adc
in
sbb
sub
addl
or
pop
enter
js
lods
xor
push
mov
jle
xchg
call
and
jnp
aas
ffreep
dec
in
fistpl
mov
push
loope
sbb
aaa
fcoms
lock
cs
cmp
adc
rol
dec
les
imul
test
movsl
push
pop
out
lock
aad
push
shlb
repnz
in
mov
test
sbb
daa
shll
sbb
xchg
arpl
xchg
add
movsl
lcall
dec
sti
adc
cli
mov
and
arpl
jl
jbe
call
add
sbb
jmp
cltd
inc
inc
rcrl
dec
add
xorb
cltd
in
aaa
test
mov
loopne
and
fisubrs
mov
push
idiv
jbe
lret
cmp
pop
cwtl
lea
insb
repz
rorb
mov
sub
pop
rorl
incb
mov
inc
jmp
cmp
sub
jl
arpl
test
insl
and
scas
mov
mov
dec
cmp
sub
addl
push
pop
ficomps
int
inc
repnz
pop
rorl
std
sahf
jo
dec
pop
jle
popf
jmp
popf
push
push
fsubs
xor
mov
push
push
pop
push
gs
push
mov
push
orl
in
popf
add
xor
movsl
mov
rcr
aas
mov
pop
xchg
adc
and
add
push
add
dec
dec
pop
inc
fsts
push
roll
xor
outsb
push
mov
xlat
pushf
sub
subb
mov
pop
mov
sbb
out
cmp
lea
xchg
push
jnp
push
shl
loope
aam
je
data16
mov
sub
ret
inc
mov
jl
mov
dec
mov
pop
or
scas
inc
cmp
nop
mov
cwtl
pop
adc
mov
pop
adc
lds
cmp
mov
repz
fwait
insb
sub
fidivrl
mov
adc
adc
mov
dec
jae
cld
and
arpl
pusha
ret
cltd
iret
pop
cmp
cmpsb
sbb
dec
pop
data16
fidivl
hlt
dec
add
sti
and
pop
pop
or
popf
adc
jb
lds
xchg
jmp
pop
xchg
test
stos
loopne
addr16
or
cli
inc
and
mov
dec
mov
xor
jp
popf
pushf
imulb
addr16
mov
mov
sbbb
sbb
lahf
lods
push
rcr
xor
mov
mov
fisttpl
mov
outsl
into
xor
push
mov
into
cwtl
mov
adc
jmp
dec
arpl
fcompl
outsb
inc
sti
scas
gs
shrb
inc
lods
ja
pop
imul
movsb
aad
mov
es
dec
pop
lods
xor
xor
cwtl
stc
pop
dec
dec
push
rorb
sbb
rolb
adc
mov
fmuls
std
xor
testl
mov
pop
iret
jmp
jns
cmp
pop
mov
jecxz
inc
or
jge
cwtl
lods
and
fs
das
scas
xchg
or
mov
mov
cs
pop
jnp
jo
insb
or
mov
add
mov
mov
ret
inc
mov
mov
in
repnz
out
push
mov
aad
sbb
daa
and
and
insb
xchg
jno
inc
push
shl
mov
pop
fs
inc
inc
notl
adc
add
inc
lahf
test
sbb
insb
jae
repnz
sub
and
mov
test
jp
adc
fwait
out
fs
loopne
jne
testl
mov
mov
test
cli
push
sbb
lods
or
mov
pop
icebp
sti
aas
clc
xchg
or
push
into
inc
rcr
test
fs
rorl
inc
arpl
insl
push
andb
test
xor
jb
xor
sti
mov
jo
or
aad
push
adc
popf
cli
xchg
pop
adc
lahf
mov
or
pop
fiadds
fistpl
and
leave
ret
add
pop
repnz
jl
lods
movsb
out
notb
adcl
fnstsw
leave
mov
dec
adc
xor
mov
or
test
out
jle
cmp
xchg
addr16
pop
lret
bswap
xor
mov
jle
sub
inc
out
ficoml
or
pop
lods
mov
add
out
hlt
lret
data16
repnz
fisubs
pop
leave
inc
stos
push
dec
mov
dec
movsb
or
movsl
jg
mov
int
fs
ss
fisubrs
jl,pn
inc
xchg
into
call
mov
andl
cmp
std
mov
adc
in
test
movsb
aaa
mov
adc
lret
fld1
dec
push
lret
push
lret
cmc
je
xor
es
stos
inc
push
or
push
ja
ret
pop
inc
testb
and
push
repnz
lods
int3
enter
adc
cltd
dec
xchg
inc
sub
shrl
aaa
movsb
mov
jl
mov
dec
add
jo
imul
adc
fldenv
out
fwait
int3
outsl
daa
jmp
or
jae
incb
push
and
imul
push
ficoms
sbb
adc
mov
sub
xor
iret
movsb
or
xchg
add
mov
fbld
pop
popf
and
add
push
mov
je
pop
push
mov
add
divl
push
push
push
xchg
adc
or
push
xor
std
mov
xchg
adc
mov
sbb
sub
lret
cli
mov
xor
ret
mov
aad
push
test
imul
sub
enter
push
cltd
jle
mov
jnp
test
push
gs
roll
or
test
pop
and
dec
xchg
lcall
pop
and
icebp
out
ljmp
adc
mov
bound
pop
xchg
les
cmp
add
sbb
push
aaa
or
pop
xor
sarl
mov
dec
imul
das
pop
outsb
aam
mov
jmp
aad
test
stos
sbb
mov
cmpsb
lahf
add
sub
enter
cmp
add
inc
adcl
cmp
and
xorb
andb
adc
mov
fbstp
cltd
dec
mov
dec
hlt
lret
xlat
push
and
mul
mov
add
jp
test
add
xchg
dec
leave
or
and
aas
inc
dec
xchg
pushf
shll
push
sahf
imul
inc
jno
cmpsl
or
cmp
loope
mov
es
jbe
outsb
pop
test
pop
scas
dec
xor
imul
pusha
ds
xor
lock
mov
xchg
mov
adc
jnp
in
and
xchg
add
xchg
insl
movsb
mov
loop
lcall
xchg
scas
push
andb
sbb
les
int
xchg
nop
xor
or
cld
scas
test
sub
test
addr16
lea
push
test
sub
jmp
test
mov
sub
inc
ds
gs
loopne
test
cmp
push
lahf
sbb
je
mov
inc
cwtl
sbb
xor
or
xchg
and
xchg
cmp
call
por
shl
out
and
dec
jmp
sbb
fistps
out
notb
lea
notl
mov
shll
xchg
jmp
push
xor
mov
push
adc
imul
int3
mov
jbe
popa
loop
jae
inc
imull
xor
or
out
sti
push
push
ljmp
jb
int
jnp
scas
lods
mov
clc
pop
push
pop
inc
imul
movb
sub
movsl
loop
push
and
inc
adc
roll
mov
jbe
xchg
insb
mov
rorb
in
jb
scas
mov
or
adc
pop
fwait
mov
data16
lret
paddusb
mov
xor
push
mov
clc
leave
adc
push
cmp
iret
orb
mov
add
lret
lea
test
nop
pop
sbb
mov
inc
fiadds
jne
nop
jns
cmp
insb
ret
and
add
dec
mov
jecxz
xchg
and
dec
outsl
out
dec
push
repnz
xchg
mov
jmp
je
nop
out
cmp
shrl
rcpps
popa
push
std
into
xchg
fcoms
daa
lret
repnz
sub
mov
xchg
dec
mov
dec
cmp
cmp
pop
lahf
cltd
adc
jbe
scas
mov
xlat
fiaddl
gs
insb
add
adc
jl
mov
lods
inc
dec
jb
in
mov
ds
mov
sub
fsubs
lock
movsb
sbb
jb
add
sub
shll
cmove
fadd
mov
lcall
pop
push
jae
lds
mov
mov
xor
sub
mov
lods
cmpxchg
adc
or
test
jp
xchg
inc
test
das
aam
pop
rolb
in
int
dec
popa
arpl
fwait
rcl
mov
mov
mov
ret
hlt
dec
xchg
cmpsb
testl
push
popf
movsl
xor
and
mov
inc
pop
ja
repz
popa
sub
or
repnz
lods
push
int3
cli
pop
les
addr16
sbb
and
xor
mov
fwait
pop
xchg
es
test
cmp
jo
int3
leave
nop
sbb
cmp
mov
mov
sub
pop
xchg
jmp
ss
fdivrl
pop
cli
out
sub
sbb
push
or
xor
and
incb
inc
insl
frstor
mov
cmpsl
pop
vpmuludq
xchg
jl
add
cmp
imul
jbe
sbb
jno
in
or
xchg
pop
sbb
cwtl
aad
xor
or
sbb
mov
imul
inc
shl
mov
lods
push
pop
cmpsb
jno
mov
sbb
cmpsb
cmp
inc
pusha
dec
add
mov
cmpsb
adc
lcall
add
and
jbe
xor
lods
js
inc
adc
adc
cli
fnstsw
mov
add
rcrl
pushf
xor
je
cli
jne
outsl
jns
or
mov
mov
xlat
mov
push
xlat
jae
sbb
repz
nop
inc
cmp
mov
mov
pop
pop
xchg
stc
jno
add
mov
test
cmp
jecxz
shll
lcall
aad
dec
adc
bound
jg
lods
mov
xchg
sti
jge
inc
xor
cmpsb
popa
stc
and
imul
cmc
pushf
ja
mov
push
xor
ret
adc
cmc
lds
inc
loope
int
push
cld
pop
and
ljmp
or
jo
inc
sub
fldl
enter
sbb
mov
popa
adc
test
adc
mov
subb
xchg
jb
mov
push
and
stos
xchg
xchg
pushf
adc
or
negb
mov
sub
iret
std
cmp
inc
rcrb
popf
fs
hlt
pop
push
iret
push
add
add
and
scas
in
pop
test
adc
scas
dec
pop
or
xor
sbb
adc
xchg
xchg
repnz
in
aam
sub
jne
push
inc
sub
cmpsb
sub
jb
fs
js
daa
cli
cli
outsl
ja
push
add
int3
jns
cltd
pop
sub
ja
push
insl
mov
std
cmp
pop
or
xor
ja
movsb
and
xchg
call
imul
fnsave
adc
and
movsl
xor
gs
cwtl
jmp
jns
xchg
call
lret
xchg
cmpsb
jle
push
fadds
mov
in
stos
pop
mov
cmp
xor
pop
or
test
and
in
movsl
add
sbb
mov
jb
pop
adc
rcrl
ljmp
dec
stos
repz
adc
xor
bound
ljmp
hlt
xor
call
imul
mov
scas
mov
scas
jne
lods
push
xlat
clc
push
das
insb
or
jnp
clc
movsl
xchg
ljmp
fstl
xchg
stos
push
jmp
insl
push
loop
mov
pop
ljmp
mov
push
in
jnp
xchg
pop
xor
out
xor
push
mov
or
sub
ljmp
cmp
pop
dec
push
jae
pushf
adc
aaa
sbb
add
divb
xchg
into
out
ds
inc
ret
std
cmp
inc
pop
sbb
push
xor
ljmp
fisubrl
ret
lock
pop
jno
mov
inc
mov
adc
or
aad
out
fs
xor
mov
aam
jae
xchg
test
sbb
dec
mov
lds
fstl
std
xor
jmp
mov
pop
push
jmp
incb
mov
insb
adc
mov
in
fcmovne
push
fistps
cld
inc
and
outsl
or
dec
sahf
or
pop
add
imul
xorl
push
inc
fmul
pushf
inc
add
dec
mov
popf
and
fidivrs
repnz
jae
push
mov
mov
add
das
xor
sbb
lahf
and
mov
inc
inc
stos
adc
cmpsl
and
in
icebp
sbb
cmpsb
and
into
stos
sub
imul
xor
inc
clc
push
or
sub
int3
jmp
mov
and
leave
js
adc
divb
ficompl
insl
andl
add
push
repnz
pop
loopne
fdivl
test
push
pop
loopne
push
pop
outsb
xor
or
iret
mov
jmp
inc
xor
mov
outsb
les
xor
fisttps
inc
jb
sbb
fsubrs
jnp
sub
sti
pop
pop
push
dec
xor
sub
dec
fdiv
mov
dec
push
adc
xchg
push
push
or
push
shll
inc
push
and
xor
xor
fwait
xor
adc
sub
stos
mov
ja
xchg
add
lods
out
mov
int3
and
movl
lea
sbb
sbb
pusha
jle
js
aam
shrl
xorl
and
xor
jb
cmp
clc
push
movsl
mov
adc
mov
jecxz
aaa
adcb
es
mull
push
xchg
cwtl
pop
out
push
sbb
jecxz
cmpsb
push
outsb
adc
mov
xor
cmpsb
insl
pop
xchg
cmp
aaa
xchg
or
sub
hlt
cmp
ja
loope
lret
out
jbe
mov
dec
jl
jo
cli
pop
ds
sub
adc
in
loope
scas
pop
movsl
xor
fidivl
ds
lock
idivb
or
xchg
repnz
pushf
and
scas
sub
stc
movb
inc
xchg
push
test
and
xor
mov
loope
mov
mov
clc
js
push
mov
icebp
pop
lea
outsl
movsb
or
cltd
popf
pop
cmpsb
mov
sbb
dec
fs
cmp
mov
dec
jnp
cmpsl
mov
mov
sub
jp
mov
outsb
xchg
mov
push
inc
dec
mov
negl
in
out
push
jo
int
imul
cmp
xor
pop
and
mov
nop
testl
inc
das
inc
xchg
jbe
pop
adc
mov
outsb
pop
jecxz
mov
pop
pop
push
icebp
pop
sti
inc
mov
js
sub
in
mov
jle
sub
mov
add
bound
xor
ss
in
pop
sub
adc
mov
mov
push
sti
and
imul
inc
cmp
mov
cmp
ret
shrl
xchg
fs
xchg
adc
loope
jp
pop
aaa
pop
movsb
pop
push
gs
stos
pop
adc
enter
pop
rorb
ficompl
mov
mov
orb
pop
pop
inc
leave
ficompl
and
mov
into
rcll
daa
dec
mov
dec
repz
and
into
cltd
out
out
mov
or
mov
popa
xchg
dec
sbb
test
gs
stc
jge
add
mov
cs
mov
push
test
insb
xchg
pop
sarb
jno
insl
sub
jle
popf
pop
add
negl
in
fsubrl
fiadds
arpl
lea
ss
fmull
ljmp
in
lret
xor
adc
iret
push
or
push
dec
popa
add
add
sub
dec
jge
cmp
inc
xor
das
jno
and
stos
inc
outsl
sbb
add
fisttpll
test
and
scas
test
filds
into
mov
push
dec
inc
cmpsl
stc
imul
data16
shl
mov
or
daa
adc
xor
mov
test
loopne
pop
stos
mov
call
movsl
mov
cs
inc
iret
cwtl
enter
jl
adc
inc
fwait
les
imul
imul
and
mov
and
rcl
pushf
pushf
mov
sti
rol
add
sarl
inc
mov
add
dec
xchg
adc
or
les
push
xchg
adc
jnp
in
rcl
iret
les
mov
out
ds
negl
xchg
loop
call
push
ret
loop
loopne
dec
push
mov
add
mov
gs
cltd
daa
or
imul
iret
pop
cmp
dec
sbb
loop
adc
std
dec
lahf
insl
mov
xor
xchg
subl
scas
adc
dec
xchg
insl
int3
int3
and
adc
popa
pop
popa
loop
std
into
out
out
das
xadd
xchg
cmpsb
mov
sar
and
popa
dec
loopne
insl
mov
pop
scas
inc
push
cs
cli
jns
jb
arpl
mov
ss
out
push
add
adc
out
cmc
aad
sbb
repz
stos
mov
inc
cmc
imulb
lods
inc
jne
adc
sbb
xor
jbe
repz
add
cmpsl
sub
xchg
outsl
jne
adc
subl
dec
adc
mov
xor
call
test
or
sub
sbb
inc
jns
or
arpl
dec
dec
sub
add
ljmp
cmc
int
add
ret
cmc
or
xchg
ljmp
cmp
bound
aam
sub
mov
jmp
lods
mov
mov
lea
jg
pop
dec
adc
rol
aam
ljmp
sub
jecxz
mov
fnstenv
insl
lret
xlat
pushf
xchg
mov
inc
or
leave
imul
fidivrl
int3
test
and
test
lea
push
daa
leave
add
jns
test
cmpsl
out
cmp
add
sbb
or
int3
js
jae
shr
add
out
sub
xor
leave
int
gs
mov
insb
nop
sbb
adcb
cmp
repnz
xlat
or
std
add
xchg
push
mov
or
arpl
or
stos
ljmp
hlt
loope
add
fcomip
dec
call
jmp
jecxz
sub
cwtl
xchg
aaa
dec
in
dec
sub
cmpsb
add
pop
imul
popf
js
dec
aas
jnp
int3
xor
jbe
adc
lds
jbe
pcmpeqb
inc
jmp
and
jns
testb
push
push
jecxz
jno
xor
mov
in
jl
and
shlb
pop
ljmp
dec
fs
test
sub
jge
fsubl
push
cmp
push
pop
movsl
outsb
pop
push
push
or
mov
aad
mov
sbb
jbe
mov
sbb
sti
jo
push
add
push
xorb
pop
lret
mov
clc
lods
inc
sti
aaa
sbb
mov
mov
ljmp
dec
sub
iret
fdivl
push
cmp
cwtl
cmp
fldl2e
pushf
jmp
daa
mov
push
stc
mov
jecxz
sbb
dec
fistpl
push
notl
xchg
push
mov
jo
aas
shl
sub
out
mov
std
fs
inc
dec
lea
cmpsl
outsb
fwait
scas
lds
adc
fmul
sbbl
mov
clc
shrb
and
mov
jno
xor
jl
jge
pop
hlt
insb
xor
mov
mov
outsb
push
test
jecxz
inc
pop
push
mov
mov
or
stc
and
pop
scas
addr16
cld
pop
adc
hlt
jmp
push
mov
sbb
and
into
int
movsb
icebp
pop
test
jnp
cwtl
lods
cmp
aas
mov
xchg
cwtl
aam
mov
stos
xchg
xchg
and
cs
fidivs
outsb
nop
dec
popf
movsb
mov
xor
jmp
or
pop
adc
sahf
xlat
add
mov
add
inc
cli
sbb
ret
inc
mov
dec
and
repnz
cmp
mov
push
push
push
adc
cmp
arpl
lret
or
sub
adc
and
lods
test
scas
fmuls
dec
pop
lahf
jb
mov
insb
divb
movsl
lahf
pop
cwtl
and
or
hlt
jg
sbbl
fbld
mov
cmp
popf
sub
mov
test
notb
and
fwait
mov
stos
sub
fmuls
mov
xor
aam
mov
dec
pusha
imul
push
pusha
push
jmp
xchg
sbb
test
inc
aaa
add
cmc
lcall
mov
and
pop
jb
xor
mov
push
clc
xor
mov
mov
add
mov
and
push
sbb
push
add
das
lods
ficomps
mov
sbb
pusha
scas
out
andb
and
mov
add
xchg
clc
imul
popa
or
sub
test
xor
lds
xchg
push
cmpsl
pusha
fildl
inc
sbb
call
rclb
fbstp
in
lret
jle
clc
lds
adc
insl
pop
xchg
loopne
jmp
mov
jge
cmp
sub
pop
lds
adc
sub
jno
mov
iret
jns
pushf
and
adc
fstl
jnp
ds
test
aas
pop
in
cmc
dec
pop
pop
sti
push
push
out
mov
jnp
or
jnp
xchg
mov
lahf
xor
jmp
int3
iret
push
push
aaa
lret
push
arpl
dec
jne
sub
jae
pop
into
jno
sbb
adc
aaa
fistpll
stos
xor
or
inc
daa
inc
cmp
mov
push
inc
repnz
add
sub
lret
push
dec
pop
jbe
jo
xchg
std
stc
scas
sbb
pop
iret
call
cmc
mov
imul
jmp
mov
outsl
push
jl
sub
mov
into
sbb
sbb
and
sub
add
push
imull
lret
push
rorl
outsb
lahf
push
andl
push
cmp
repz
out
fdivp
inc
cmc
cmpsb
xor
cmp
fdivl
mov
xchg
lret
jne
repnz
cli
es
rol
icebp
cmc
imul
add
xchg
lcall
pushf
mov
sbb
sbb
mov
mov
add
sub
popf
cld
xchg
and
cmc
jo
sahf
in
scas
adc
sub
nop
in
mov
mov
jae
int3
mov
dec
lahf
arpl
cmpsb
mov
cmp
sub
int
mov
popa
mov
outsb
ja
mov
cmp
aas
shr
and
mov
jp
arpl
aad
mov
jns
or
xor
test
stc
xor
and
add
lcall
xchg
mov
dec
mov
fwait
sbb
das
test
sbb
insb
adc
and
test
jmp
cmp
mov
dec
push
loopne
fsubs
rol
jb
gs
das
rcl
mov
lcall
cmp
aaa
out
mov
inc
adc
pop
sbbb
pop
inc
fistps
sbb
add
sbb
shll
inc
sbb
and
aaa
adc
stos
pop
mov
mov
xchg
cwtl
addb
inc
mov
and
mov
sbb
cld
adc
lods
jbe
xchg
movsb
fcmovb
aad
ret
and
test
test
loope
jle
jbe
cs
xor
add
jle
adc
push
dec
inc
lret
jb
mov
adc
mov
sti
loopne
sbb
mov
or
in
xchg
loop
sbb
sub
xchg
jb
jnp
scas
lahf
popf
mov
pop
roll
cs
adc
pop
jmpw
xchg
ficoms
out
dec
xchg
adc
sbb
push
sub
out
mov
push
enter
sbb
adc
das
mov
aaa
test
push
rdpmc
adc
test
fnsave
push
cltd
leave
int3
fistpll
mov
push
push
or
lods
lcall
and
ret
jb
xchg
arpl
or
fstp
pop
ret
fidivs
mov
shrb
push
adc
into
pop
adc
sbb
or
fs
negl
cmp
stos
push
mov
cs
movsb
call
jge
scas
in
icebp
clc
pop
inc
mov
shl
mov
jmp
and
addr16
les
jmp
cs
bound
jge
int3
mov
adc
xchg
adc
adc
ss
loop
lcall
je
mov
jecxz
push
jne
cmp
inc
shr
ret
jmp
pusha
inc
adc
shrl
xchg
sbb
mov
lock
das
data16
xor
test
jg
or
push
jno
cmpsl
fsub
mov
nop
pop
mov
jbe
add
popa
ljmp
push
sarb
fwait
mov
js
shlb
mov
cmp
and
inc
inc
shlb
hlt
adc
imul
scas
push
rcrl
jo
icebp
xlat
xor
sbb
fnstcw
sub
dec
and
cmp
and
mov
mov
mov
push
out
push
adc
shl
mov
inc
xchg
idivl
dec
repnz
sar
movsl
cmpsl
shlb
arpl
roll
icebp
xchg
fs
jne
dec
jo
add
jp
pop
and
rcrl
lods
or
shrl
call
inc
cltd
jle
lcall
jne
inc
dec
fnstenv
fiaddl
mov
jp
and
out
test
rcll
jle
enter
cmp
pop
subl
push
mov
adc
cmp
test
mov
test
clc
push
xchg
and
stos
nop
sub
pop
ljmp
pusha
mov
lret
stos
push
loopne
cmpsl
fstps
test
sbb
sarb
mov
dec
pop
mov
inc
push
pushf
mov
xorb
and
jns
out
mov
into
sbb
lahf
outsl
add
mov
mov
xor
adcb
in
mov
js
adc
inc
add
push
cmp
or
popa
xor
scas
ja
inc
mov
add
cmp
bound
lcall
sub
sbb
pop
pop
cmp
mov
sbb
repz
enter
xorl
xchg
mov
jo
dec
adcl
into
clc
cltd
jo
jae
clc
je
push
cmpb
insl
iret
xor
mov
pop
jnp
test
shll
cmp
aas
movsl
or
cmp
mov
lret
jecxz
jp
aaa
popf
movsb
add
in
icebp
popa
aam
mov
leave
aam
stos
pop
jge
ds
ljmp
pusha
lret
insb
pop
mov
fnsave
pushf
rol
inc
arpl
dec
adc
push
movsb
sbb
fs
sbb
ret
out
out
je
add
dec
adc
mov
hlt
sbbl
mov
dec
push
jbe
push
or
sti
rorb
xor
mov
pop
inc
mov
out
lods
cmp
mov
sbb
hlt
movsl
push
ret
flds
mov
sbb
movsb
add
leave
sub
test
mov
not
scas
mov
cli
call
add
int3
mov
lret
das
and
in
bnd
inc
bswap
mov
xchg
dec
inc
fsts
fs
ds
stos
nop
sbb
pop
dec
ja
addr16
les
and
cmp
cltd
sbb
lock
in
xor
jg
cmpsl
pop
push
jp
loope
leave
ljmp
jmp
pop
push
pop
mov
fcoms
cmc
iret
jbe
inc
aaa
cmc
incb
into
and
fldt
or
push
cwtl
jns
mov
xchg
sub
outsb
and
mov
adc
mov
sbb
cwtl
inc
lods
push
or
and
roll
test
push
xor
xchg
lods
jp
sub
xor
cmp
cmp
xchg
jg
mov
xor
xchg
xchg
inc
fcoml
xor
xlat
lds
mov
add
lcall
clc
jae
sti
mov
xchg
lock
call
jns
dec
xchg
ret
push
pop
xor
popf
addr16
inc
add
idivl
add
add
ja
subb
adc
clc
in
and
aas
sbbb
fstpl
push
jge
outsb
xchg
push
jns
pop
inc
sbb
scas
das
loop
xchg
mov
out
test
mov
lret
sbb
mov
mov
movsb
pusha
shrl
ret
mov
mov
dec
xor
outsb
inc
aas
dec
imul
cmp
xchg
movsb
notb
pop
inc
rcrb
leave
cmp
pop
mov
sbb
push
adcb
sahf
xchg
sub
in
sbb
jno
leave
jbe
pop
and
sub
sub
push
adc
ret
into
xor
rolb
lea
cli
nop
push
fstpl
jb
cmp
jmp
movsl
rorb
dec
mov
fildl
add
push
lret
ret
imul
mov
imul
xchg
xor
xor
or
out
cmp
int3
shrb
jb
sti
das
mov
gs
cmpl
push
addr16
or
testl
pop
data16
int
sub
insb
inc
xchg
loopne
push
inc
pop
push
mov
jns
sahf
insl
push
mov
hlt
mov
inc
add
icebp
fs
inc
mov
nop
jecxz
push
cli
xor
xorl
ds
or
aaa
sti
in
xchg
lds
jl
frstor
jl
push
jl
clc
out
sub
stos
xor
test
int3
lahf
cmp
jecxz
aas
in
in
aaa
mov
repz
cld
aaa
inc
pop
in
out
mov
data16
pop
test
sbb
mov
testl
cwtl
test
jle
mov
jne
push
sbb
inc
adc
js
loop
cmp
sbb
sti
or
out
add
popf
dec
lods
das
add
jno
mov
aam
pop
fstpl
gs
add
pop
adc
sbb
aas
pop
pop
adc
ror
mov
movsb
rcll
add
lret
pop
add
mov
lock
mov
lret
and
cltd
and
shll
push
ja
ja
mov
or
incb
jne
mov
add
mov
cmpsl
mov
into
xchg
aad
ret
clc
inc
jb
jecxz
pop
push
hlt
inc
repnz
mov
xor
pop
cmp
lret
jge
lods
into
cmpsl
cmc
mov
mov
adc
mov
ljmp
cmc
xor
aam
cmp
sarl
lcall
lds
idivl
and
cbtw
das
or
mov
jno
jae
mov
loopne
mov
leave
test
incb
nop/reserved
or
or
aas
pop
dec
test
jns
cs
outsb
inc
add
loop
loope
jge
iret
out
sbb
ljmp
push
sub
data16
mov
sub
adc
dec
fildll
xor
pop
add
cmp
dec
cmp
sub
jnp
cmp
xchg
in
add
jno
mov
cs
lret
or
dec
mov
sub
or
jecxz
dec
mov
sbb
add
lret
lret
xchg
iret
aaa
es
lret
out
fidivrl
repnz
mov
lret
pop
push
cltd
push
mov
sbb
mov
mull
push
leave
sahf
or
les
bound
aam
ss
adc
mov
dec
insb
push
cmp
mov
mov
jmp
fwait
imul
sarl
mov
push
cli
dec
xchg
mov
testb
fchs
adc
repnz
outsl
dec
sbb
mov
pushf
push
jge
out
addr16
test
pop
or
and
ds
push
das
test
pop
insl
cmp
addr16
cmp
stos
lret
push
out
push
mov
cmp
sti
inc
jecxz
jo
mov
cmc
dec
mov
and
ljmp
sub
outsl
dec
fildll
movsb
out
mov
sbb
scas
ret
add
mov
sbb
or
call
jmp
loop
push
xor
pop
stos
sti
sahf
mov
ljmp
inc
int
in
fildll
inc
ds
cli
jae
push
sub
sti
jp
pop
movsb
push
xor
mov
ficoml
out
pop
movsb
dec
arpl
sub
clc
mov
faddl
and
loope
and
ret
fisttpll
shr
mov
add
xorl
sbb
inc
loopne
lea
jnp
aam
mov
xor
je
lods
xchg
ret
call
dec
addr16
sbb
and
xor
jge
pop
insb
and
pop
add
dec
sub
jmp
lods
xlat
loopne
adc
jo
mov
inc
cltd
cld
pop
or
xlat
movsl
outsl
cltd
xor
int
mov
movsl
lret
jl
jl
sbb
in
pop
negl
in
add
lds
mov
aaa
dec
lods
ja
imul
mov
jbe
icebp
cmova
stos
jno
sahf
std
xchg
add
imul
jno
sbb
fucomi
addl
cmpsb
jl
call
pushf
int
adcb
lods
xor
sbb
or
jbe
dec
jae
repnz
fadd
dec
mov
xchg
in
cwtl
xchg
call
pop
hlt
mov
lock
pop
add
lds
and
int3
mov
hlt
shl
stc
jge
rcl
add
nop
lock
out
bound
and
sbb
mov
pusha
int3
ds
or
push
mov
sbb
cmpsl
and
clc
pop
dec
xchg
push
cmp
push
scas
push
daa
insb
mov
icebp
adc
jp
push
popa
mov
in
sub
in
mov
push
mov
xchg
lods
add
push
add
leave
test
mov
mov
test
xchg
je
subb
dec
repnz
mov
aaa
nop
mov
rcll
mov
or
and
xchg
imull
jmp
lcall
pop
add
popf
mov
inc
xchg
pop
leave
pop
cmp
sti
and
adc
jo
jno
fpatan
aam
pop
test
clc
and
ljmp
bound
xchg
sti
notl
std
mov
xchg
stos
insb
mov
sub
pop
cmp
daa
lcall
dec
mov
mov
inc
into
pop
loopne
adc
aad
popf
jo
and
ret
std
cmc
outsl
sbb
mov
xor
mov
xchg
mov
mov
mov
stos
mov
inc
sbb
jmp
jmp
in
xchg
std
jg
shl
in
and
int
repnz
scas
pop
in
movsl
push
adcb
mov
or
fadd
cmpsb
mov
mov
in
aaa
es
jmp
and
mov
push
pop
push
ror
push
out
fdivp
mov
pusha
lcall
mov
push
es
inc
mov
push
bound
ss
xor
adc
daa
lret
ja
icebp
daa
inc
dec
jmp
pop
ficoms
test
xor
dec
call
push
xor
dec
add
stc
jg
xchg
push
sti
orl
cmp
jl
sub
fsubl
mov
sarl
imul
push
stos
jb
mov
into
out
les
push
cs
nop
int
jne
or
cmp
mov
hlt
inc
push
cli
add
out
lock
add
pop
dec
lret
sbbb
dec
shlb
sahf
jg
mov
pushf
adc
mov
hlt
test
and
cmp
pop
das
pop
loop
xor
dec
ljmp
iret
in
or
mov
mov
bound
xchg
lods
cmpsb
sti
inc
pop
pop
mov
push
sbb
xchg
ficompl
mov
repz
cmc
or
sub
push
aad
mov
add
loop
add
imul
mov
popa
mov
lret
mov
inc
lret
cwtl
lcall
sub
arpl
mov
mov
lahf
movsl
mov
mov
adc
jae
sbb
push
jge
push
and
imul
xchg
fucomip
mov
push
adc
fstp
mov
push
lods
iret
xor
repnz
in
push
mov
imul
icebp
je
dec
add
push
pop
in
enter
or
push
adc
test
pop
in
add
or
popf
dec
daa
or
xchg
bound
jns
cmpsl
fidivl
dec
scas
lock
add
push
dec
mov
rorb
insl
jle
mov
aam
cmp
loope
divl
adcb
and
and
and
arpl
cmpsb
jns
mov
in
mov
call
imul
push
cmp
fsubrp
jbe
push
daa
sbb
mov
mov
sbbl
jo
dec
fldcw
dec
imul
sbb
xor
cmpl
ss
push
iret
push
mov
icebp
xor
cld
dec
int
out
sub
jg
and
xchg
int3
jmp
add
xchg
nop
and
mov
bound
xchg
push
cmp
mov
mov
adcl
fidivs
lea
jnp
je
xor
sbb
pop
mov
jle
mov
inc
or
cmp
popf
out
lret
dec
leave
test
sahf
mov
imul
ljmp
push
shlb
js
sbb
inc
vaddps
add
lret
and
fcmove
mov
xchg
jp
popf
or
mov
jno
mov
jno
and
and
jl
or
jnp
xchg
pusha
sbb
jecxz
mov
push
push
adc
mov
sub
sbb
ret
lcall
xor
pop
add
dec
lret
xchg
sti
aaa
outsb
fcmovnb
mov
xor
out
add
in
les
scas
into
and
and
iret
sub
push
and
mov
jno
je
cmp
pop
enter
adc
sub
mov
scas
push
pushf
mov
std
inc
xchg
pop
pop
loop
fistpll
enter
mov
rcrl
cmc
subb
xor
shll
test
mov
lock
dec
lret
fwait
cli
into
mov
xor
cld
test
push
stos
repz
cmc
dec
notb
fdivrl
mov
ret
shl
inc
je
add
and
cmp
xchg
scas
adc
insl
leave
rcrb
inc
dec
adc
adc
imul
fs
imul
mov
out
ljmp
xchg
mov
pop
xchg
adc
inc
sub
popf
cmp
add
mov
and
loop
cmpsl
fs
pop
sub
mov
addb
lods
jg
push
flds
adc
pop
aaa
inc
aas
pop
adc
leave
push
xor
pop
imul
fdivs
mov
adc
and
fstpl
loopne
shlb
mov
js
shrl
pop
push
addl
mov
clc
mov
lods
inc
xchg
sbb
es
test
sbb
pushf
call
lahf
dec
inc
cmc
mov
mov
icebp
jl
push
lods
mov
pop
lgs
fistpl
in
movsb
pop
pop
fsubp
inc
sbb
lock
dec
xchg
outsl
add
sbbl
mov
inc
jnp
inc
and
jns
fucomp
cld
data16
adc
push
movsb
xchg
mov
xchg
push
nop
sbb
inc
enter
pop
in
dec
out
jmp
and
push
mov
negl
adc
out
leave
rorb
hlt
ljmp
xchg
rcll
add
jp
xchg
mov
mov
mov
loop
jecxz
idiv
mov
rcr
sub
jp
push
out
xor
pop
cmpsl
jo
imul
pop
inc
cli
xor
push
cmp
fadds
into
outsl
andl
sub
cwtl
jne
shrl
int
jle
mov
jb
push
jle
or
mov
inc
leave
sub
xor
fists
pop
and
mov
cmp
nop
fcomps
add
test
rcrb
bound
insl
sub
shlb
int3
cmp
popf
pop
dec
inc
out
mov
test
das
iret
std
ljmp
xor
sub
ljmp
xchg
stos
aaa
fsubs
push
sub
ja
pushf
test
mov
and
test
sbb
aas
mov
xor
fdivp
mov
xor
mul
out
add
lcall
push
test
shlb
cltd
jbe
jae
dec
mov
shrl
pop
inc
notl
push
mov
push
inc
inc
mov
mov
mov
jmp
jne
sub
add
cmc
push
enter
movsl
push
sbb
xor
ss
xchg
int3
leave
ljmp
rorb
inc
ljmp
xor
into
lea
mov
lea
add
js
inc
pushf
sahf
inc
push
pop
mov
out
int3
dec
shrd
out
call
cli
cmp
movsl
ss
mov
mov
mov
adc
cmpsl
add
dec
call
sub
jno
lods
mov
ficoml
push
xchg
inc
sbb
repz
inc
test
mov
dec
clc
adcl
pop
je
dec
pop
jbe
jl
dec
lret
push
dec
pop
mov
add
mov
push
pop
xchg
dec
test
inc
fcomps
icebp
popf
sub
xor
push
mov
js
push
or
mov
cmp
pop
xor
sub
aam
popa
es
and
in
lods
lret
push
aaa
test
rolb
dec
xchg
jb
sarb
fstpt
mov
add
xchg
loopne
lea
shrb
adc
sbb
and
lods
out
mov
or
adc
add
xchg
insb
je
inc
aam
mov
lock
fdivr
jecxz
in
imul
rol
push
pop
arpl
lret
jae
xor
sub
jmp
call
jnp
sahf
jle
or
and
lret
dec
inc
sub
cmp
xor
mov
sbb
movsl
xchg
cwtl
pusha
xlat
add
ret
stos
arpl
jnp
ss
xchg
mov
push
mov
repnz
mov
movsl
cmp
popf
or
mov
incb
jae
out
loope
mov
stos
rcll
leave
xor
or
std
xchg
pusha
sbb
and
shll
gs
mov
dec
pcmpgtw
in
jo
imul
adc
dec
lea
movsl
add
gs
sub
and
mov
mov
js
inc
sbb
aaa
inc
mov
rcr
add
inc
out
sbb
addr16
loope
xor
mov
fiaddl
push
xchg
inc
jbe
roll
ret
fmuls
push
imul
cmpsb
push
iret
daa
push
push
cmpb
jo
sub
fs
push
mov
push
cmc
mov
or
mov
stos
jns
dec
mov
clc
xchg
or
pop
pop
pushf
dec
ret
fisubl
xor
test
mov
inc
std
mov
dec
cltd
jmpw
insl
data16
and
pop
pop
cmpsb
add
push
daa
mov
dec
das
ret
iret
push
jmp
add
push
shr
or
push
mov
add
lods
jmp
add
push
push
fistps
inc
and
or
fistpll
addr16
iret
dec
in
mov
imul
js
mov
mov
cmp
call
pusha
mov
loope
push
test
jb
repnz
jo
jne,pn
sub
gs
dec
jmp
and
push
fwait
shll
pop
ret
sub
hlt
mov
inc
pop
and
mov
adc
aad
push
dec
hlt
mov
sub
test
lcall
xchg
inc
pop
into
sbb
sbb
jns
dec
add
popf
mov
cltd
mov
mov
sar
loopnew
mov
and
jmp
insl
mov
ljmp
cmpsb
push
mov
xchg
or
xor
cli
pop
clc
dec
or
inc
mov
into
ljmp
pusha
cmpsl
ret
mov
mov
mov
mov
or
shrl
int
test
pop
mov
hlt
out
les
popf
enter
cmc
dec
mov
pop
fsts
data16
cmp
rolb
popf
sbb
xlat
push
pop
add
adc
or
arpl
mov
iret
mov
les
popf
and
push
cld
aad
xchg
add
data16
mov
test
push
les
xchg
add
insb
sub
bound
cmc
not
das
shld
add
mov
aaa
dec
adc
stos
pushf
imulb
inc
jge
jecxz
add
scas
lea
xchg
in
sub
popf
lcall
pushl
repnz
scas
inc
daa
xchg
xchg
pop
add
aaa
mov
sub
mov
loop
cmpsb
adc
bnd
jns
cmp
add
stos
insl
hlt
int3
data16
sahf
leave
jle
sbbb
add
scas
ds
dec
adc
xchg
xchg
mov
in
fistpl
movsl
or
and
flds
sbb
loope
or
outsl
call
mov
aas
imul
mov
adcb
aas
fwait
add
sahf
mov
scas
adc
lock
inc
jmp
jp
imul
push
leave
xchg
shll
mov
rorl
ficoms
push
cmpsl
outsb
jmp
lret
jmp
xchg
cmpsb
or
adc
xor
in
sbb
push
mov
hlt
mov
mov
jge
mov
jo
push
fistps
cmp
ret
and
pop
cmp
mov
cs
pop
mov
push
push
out
or
cmp
push
push
jbe
or
xorl
lds
cmc
jbe
inc
cld
mov
or
or
bound
stos
mov
outsl
arpl
popf
jmp
rcrb
in
aas
fwait
pop
test
rcrb
sub
mov
bound
stos
sbb
aad
mov
xchg
add
inc
int
cmpsb
pushl
sub
pop
jmp
daa
and
frstor
notb
xor
pop
jp
push
jo
ds
je
dec
pop
das
mov
cmp
fidivs
or
xchg
into
call
sub
andl
xchg
inc
mov
cltd
xchg
push
and
sbb
lods
mov
and
es
outsl
mov
fidivrs
imul
mov
push
jo
xor
cli
insb
flds
xor
aas
sbb
adc
inc
data16
enter
mov
add
lret
inc
dec
cmp
mov
repnz
lods
in
push
dec
pop
xchg
push
add
add
rcl
mov
dec
repnz
jae
push
xorl
repnz
decb
mov
popf
bound
push
into
stos
mov
sti
dec
pop
aaa
lea
bound
mov
xor
movsl
inc
xchg
mov
cmp
outsl
mov
lret
mov
sbb
or
mov
sub
out
jmp
bound
add
rcll
sti
or
jmp
inc
pop
test
mov
or
inc
cmc
push
xchg
shrb
pusha
dec
dec
xor
fsubrl
ss
xor
leave
arpl
aaa
into
sbb
dec
and
mov
out
je
xor
sub
jmp
iret
stos
inc
std
mov
pop
sbb
dec
mov
sbb
xor
mov
mov
decl
sarb
bound
sbb
lea
insb
jg
int3
adc
xor
cld
push
fcoml
push
mov
adc
in
inc
inc
lods
test
je
paddusb
adc
cmpsb
js
pop
bound
mov
and
or
adc
cli
push
dec
cs
arpl
cli
dec
inc
inc
nop
xchg
lret
fs
jbe
xchg
adc
les
movsb
les
adc
sub
fwait
cld
jb
int
jb
lods
test
adc
leave
mov
scas
add
mov
bound
xor
ds
mov
dec
mov
or
cmp
iret
cmpsb
mov
push
jg
adc
adc
test
mov
es
adc
sub
dec
in
jmp
mov
pop
out
dec
icebp
mov
cmp
mov
add
mov
sub
cld
add
mov
imul
dec
pop
int3
pop
lcall
pop
push
pop
stos
and
dec
inc
add
cmpsb
inc
jbe
faddp
loopne
jnp
add
mov
or
ds
ret
fisttps
popa
bound
and
adc
and
mov
das
lock
mov
jo
iret
xor
stos
xchg
xor
stos
lock
aam
push
mov
or
jg
addr16
inc
jecxz
shrb
lahf
stos
mov
pusha
or
ds
push
pop
fcomps
inc
sub
push
mov
call
add
adc
es
inc
and
xor
add
add
scas
pushf
rorl
xchg
push
fisubrl
and
movsb
aad
pop
mov
mov
test
daa
movsl
cmpl
add
shr
das
out
sub
sbb
aaa
daa
lock
stos
shlb
fs
mov
cmp
xlat
iret
loopne
mov
repz
insl
sub
add
sbbl
insb
add
js
sahf
xor
into
mov
and
push
inc
jbe
xor
push
pop
loop
or
xchg
xchg
sarb
iret
lods
mov
pushf
pop
inc
adc
es
fstps
adc
out
sub
mov
pop
mov
mov
xor
sar
in
imull
cmp
xchg
sbb
arpl
inc
mov
and
adc
aad
into
ds
push
ljmp
mov
push
pop
sbb
push
pop
iret
loope
mov
inc
add
fcmovnbe
int3
mov
xor
aaa
pop
shrb
arpl
scas
mov
or
adc
loope
cmp
or
jno
fs
inc
cmp
ret
xor
out
sarb
hlt
sub
xchg
push
and
mov
push
frstor
jne
pop
enter
sti
xchg
test
mov
mov
cmp
jp
pusha
add
sbb
sub
mov
pop
adc
ds
mov
outsl
push
add
xchg
push
imul
maskmovq
notl
jmp
sbb
jecxz
cs
lods
stos
dec
push
enter
mov
adc
stos
lret
push
pop
rcl
jge
in
outsl
stos
ret
jae
ret
pop
sub
repnz
or
fs
out
mov
lock
pop
movsb
fnstenv
rcrb
xchg
pop
cmp
inc
adc
fdivrs
sbb
iret
mov
jno
adc
jb
xor
cmp
and
out
jb
adc
mov
cmp
sub
lds
test
xor
mov
or
scas
jno
add
insb
add
fadd
pop
jnp
mov
insb
xchg
pop
mov
ds
lcall
mov
orl
lcall
call
clc
jne
push
inc
mov
shll
dec
mov
push
mov
je,pt
mov
xchg
mov
popa
outsl
das
ds
pushl
outsb
or
fstl
xchg
gs
push
arpl
iret
xchg
leave
fidivrl
aaa
xor
das
filds
cs
in
dec
cmp
test
mov
outsl
xchg
call
xsave
sub
mov
add
inc
daa
leave
gs
pop
add
add
add
arpl
adc
out
mov
faddl
adc
ja
imul
dec
stos
insb
cmp
push
lcall
or
push
dec
jno
pop
adc
add
in
std
cltd
push
xchg
xchg
dec
lods
jmp
mov
les
mov
faddl
scas
dec
popa
mov
aaa
push
xor
iret
fdivrl
xchg
mov
lcall
cmpb
xor
test
in
mov
lret
xchg
ret
iret
xchg
xchg
les
cltd
mov
ljmp
imul
mov
push
loope
cwtl
or
xchg
jbe
adc
and
adc
push
iret
sub
or
jg
in
pop
fcompl
lea
popa
icebp
cmp
mov
inc
adc
test
imul
xchg
addb
adc
sbb
jb
adc
lcall
cmpsb
sar
mov
push
hlt
arpl
push
popa
int
cmp
inc
jmp
and
cs
jae
out
push
mov
fbstp
lods
xchg
das
lret
cmp
fildl
fldcw
ficomps
xchg
in
pop
ja
and
push
inc
inc
sbb
mov
add
adc
int
ret
stos
push
pop
adc
stos
insl
xor
arpl
adc
aam
sti
mov
lods
loopne
adc
int3
dec
outsl
push
repz
add
jl
add
cmp
and
adc
imul
jecxz
ret
mov
loope
notl
mov
xchg
xchg
jge
dec
mov
jmp
mov
ljmp
xlat
sub
rcrb
mov
loop
xor
xchg
imul
mov
ret
je
mov
adc
and
hlt
adc
sub
xchg
dec
lds
inc
mov
test
pop
lock
pushf
call
adc
xchg
sub
or
sarb
jns
cmp
push
int
lret
jno
add
jbe
mov
repnz
lods
test
arpl
fcmovu
mov
sar
fstpl
jmp
pop
mov
adc
sti
ret
cli
iret
add
jmp
cs
std
call
add
mov
ds
pop
xor
mov
dec
pop
adc
int3
dec
fisttpll
and
out
loopne
xor
cmp
je
lahf
xor
sub
imul
dec
popa
pop
pop
jle
pop
push
or
inc
shll
xlat
pop
mov
ret
loope
sub
lahf
push
fstpt
insl
jp
ljmp
lret
das
psllw
xor
cmp
adc
jg
aaa
add
into
cmp
daa
imul
sbbl
sub
jnp
adc
cmp
pop
jp
ror
lcall
mov
hlt
in
pop
pop
sbb
mov
fwait
sub
mov
adc
cs
data16
pop
mov
push
or
scas
add
fiadds
xchg
pop
push
xchg
mov
sahf
int
mov
mov
mov
inc
jge
push
push
testb
push
negb
pop
sarl
pop
sbb
imul
popa
cli
cmpsb
pop
or
adc
xlat
in
inc
push
push
outsb
leave
mov
jle
ljmp
or
sbb
test
stc
pushf
repz
sbb
xlat
sar
jbe
in
iret
repz
aaa
out
outsl
aaa
xchg
imul
jns
jmp
lcall
cltd
lret
aas
xchg
std
mov
hlt
cwtl
or
mov
rcrl
mov
cmc
or
paddsw
lods
cltd
cmpsl
adc
mov
fcoms
mov
cwtl
push
jno
and
xor
jge
jl
mov
lahf
add
adc
jp
adc
jl
scas
ss
vandps
mov
insb
cltd
pop
testl
lcall
fs
pop
or
cmc
rorb
stos
test
adc
jmp
xchg
adc
in
daa
mov
ljmp
sbb
inc
dec
outsl
aas
push
inc
lock
lds
xor
mov
xlat
cmp
loop
xchg
fstpt
pop
pushf
sub
xor
and
mov
cld
pushf
jne
lea
xchg
lahf
test
arpl
adc
mov
mov
mov
lcall
mov
cmp
shr
sub
and
xor
in
int3
mov
lds
xchg
dec
dec
or
int
push
orb
mov
cmpsb
nopl
sbb
push
sbb
dec
shr
mov
pop
sbb
and
inc
sarb
testb
inc
jge
imul
out
loopne
test
int3
clc
fdivr
jne
and
addb
inc
in
dec
mov
inc
daa
aas
sbb
mov
fcoms
sahf
dec
adc
into
aaa
inc
or
vmread
adc
push
jecxz
sub
mov
pop
push
arpl
dec
mov
and
pop
sub
mov
out
xorl
and
push
cld
popa
in
cmc
std
and
mov
sub
ficomps
mov
fdivrl
sub
mov
adc
push
fidivrs
into
imul
out
les
sbb
addr16
test
xchg
fwait
outsb
mov
sub
dec
add
ret
enter
test
xor
dec
add
jne
inc
jae
mov
stos
jg
adc
pop
fwait
imulb
inc
addr16
insl
lcall
in
mov
in
punpcklbw
int
cs
fbld
cmp
adc
mov
mov
cld
jecxz
mov
ljmp
call
and
mov
sbb
gs
cmpsl
rclb
dec
fs
out
jns
nop
stc
mov
and
adc
pop
insl
mov
pop
daa
sub
jns
dec
cmpsl
sti
mov
jnp
stos
push
sbbb
shlb
push
movl
insl
inc
push
ret
xchg
and
aad
inc
push
hlt
mov
sbb
je
movsl
in
aaa
mov
daa
cmp
or
sub
nop
xchg
pop
div
fldl
mov
inc
mov
mov
dec
icebp
nop
sub
outsl
roll
rorl
roll
or
mov
or
adc
dec
jecxz
les
xor
ret
ret
jg
push
jo
sub
cmp
int
out
imul
hlt
nop
inc
or
xchg
sbb
adc
aam
pushf
in
cmpl
imul
fsubl
dec
icebp
push
or
mov
aam
jb
cmpsl
pushf
stos
imul
mov
push
sarl
inc
test
jo
cmpsl
mov
cmpsw
test
pop
push
clc
and
pop
pop
loope
cmp
out
mov
xchg
adc
call
lahf
popa
or
lds
or
fistps
jo
xchg
mov
in
pop
fwait
mov
std
stos
rorb
mov
adc
sahf
pop
cmpsb
gs
cltd
mov
mov
or
xor
cmp
push
aas
xlat
aas
outsb
mov
cmpsb
xor
inc
pop
popa
icebp
aas
mov
fst
pop
xor
cs
test
push
fidivrs
push
inc
push
sbb
jle
push
pusha
add
add
push
dec
sbb
dec
ret
enter
in
inc
adc
push
daa
xchg
cmp
pop
jmp
fsts
lea
cmc
inc
xchg
cltd
out
mov
cmp
mov
inc
and
cld
sbb
in
and
rorl
xor
stc
and
jge
mov
lret
insl
and
mov
pop
lods
xlat
push
and
mov
pop
popf
cmpsl
fninit
mov
or
push
jbe
ret
push
jne
les
imul
hlt
test
test
out
jecxz
stos
dec
scas
push
nop
jb
add
sarl
pop
lock
sub
sbb
andl
cmp
mov
dec
pop
stos
mov
scas
and
pop
xor
sub
in
das
lock
lcall
mov
cmp
sti
pop
inc
cmp
adc
ss
or
shll
mov
mov
pusha
pop
ret
adc
daa
or
gs
push
cmp
clc
jmp
mov
fcom
mov
cmpsl
ljmp
inc
inc
in
ljmp
lret
cmp
fidivs
sub
lahf
fwait
adc
mov
mov
mov
cmpl
xor
lds
mov
shrl
inc
cli
sbb
imul
loop
xor
stc
adc
ret
cli
adc
sbb
inc
cs
loope
and
insl
in
fwait
cmpsb
xchg
xchg
xchg
lea
mov
stos
loop
add
inc
rorl
lahf
mov
xor
loope
jo
aaa
or
in
push
and
subl
call
inc
aad
push
insl
cwtl
push
lret
sub
sub
jnp
and
mov
push
jae
cwtl
stc
lods
insl
out
jp
dec
outsl
loopne
out
fwait
bound
sbb
add
mov
jp
popa
mov
or
xor
inc
add
into
loope
mov
push
push
inc
add
jae
push
add
add
or
cmpsl
mov
dec
jmp
nop
cmp
xchg
mov
jmp
and
push
es
rorb
popf
ss
ret
and
enter
roll
lahf
mov
pop
lds
pop
adc
sti
add
loop
js
stos
xlat
je
les
sbb
mov
imul
mov
sti
inc
pusha
and
jns
push
mov
jno
dec
sbb
mov
pop
out
out
xor
ficomps
fisubl
mov
mov
in
fisttpll
cld
adc
insl
and
andnps
add
mov
stc
xchg
dec
push
divl
inc
sbb
mov
into
or
sbb
jge
aaa
dec
or
pop
je
cs
imul
jmp
push
stos
pusha
lods
sbb
mov
scas
dec
jnp
xchg
ret
add
fldenv
push
cltd
icebp
stos
inc
jae
or
rcr
jno
scas
arpl
xlat
jns
cmpsl
sarb
push
inc
adc
push
jp
sbb
imul
pop
arpl
dec
mov
in
lret
mov
fisttpll
testl
and
subb
cmp
sbb
dec
mov
push
xor
push
movsb
ja
adc
rcrl
and
sub
jg
in
scas
sub
push
outsl
or
inc
call
mov
push
in
and
xchg
and
movsl
and
pop
jmp
adc
jle
stos
and
mov
cmpsb
loopne
cmc
fldl
imul
je
std
ret
cld
mov
int
test
cli
xor
inc
sbb
push
push
fcomps
xor
data16
add
push
fcoml
xchg
xchg
jp
jb
jmp
xor
or
test
jb
push
pop
addb
loope
sub
xchg
sub
fidivl
mov
fcompl
lret
push
and
mov
xor
sub
in
pop
push
shr
arpl
fdivl
mov
out
push
out
adc
push
arpl
mov
push
adc
cmc
and
aam
mov
in
jg
fidivrs
and
rclb
and
out
cmp
movsl
es
sbb
rolb
int3
push
sahf
mov
js
test
mov
loope
pushf
mov
inc
aas
ljmp
in
and
fdivrs
lods
inc
add
outsb
fxch
inc
shrl
xor
dec
ficomps
rorb
imul
push
popf
leave
pop
mov
jp
xor
loopne
subl
pushf
sub
pop
sbb
int3
push
lds
in
xor
jecxz
push
jae
add
xchg
add
xchg
cmc
cmp
push
dec
inc
lahf
mov
or
aad
adc
sbb
scas
pop
std
and
sti
and
js
fs
in
jl
lds
out
cmp
pushf
jle
movsb
pop
and
test
iret
and
lcall
mov
rol
xchg
xchg
xchg
out
fst
lahf
insb
jp
bound
pop
lcall
rorb
loopne
call
ret
dec
aas
lret
or
sti
adcb
fwait
add
fstl
pop
in
cwtl
adc
lock
out
icebp
xchg
push
arpl
inc
dec
xchg
jecxz
in
std
outsl
loope
xor
lret
inc
into
aas
imul
dec
push
sarl
adc
push
cmp
out
and
std
push
add
out
pop
mov
push
jg
mov
jno
xchg
inc
shl
push
shl
mov
addr16
mov
stc
pop
fmulp
mov
add
cmp
sub
and
push
mov
xor
or
adc
and
es
test
daa
popa
xor
push
mov
and
shlb
cmp
mov
fs
enter
push
mov
pop
dec
and
add
out
adc
int
sbb
or
mov
outsb
mov
movsl
or
push
and
aas
gs
xor
int3
movsb
out
fwait
pop
mov
scas
es
xchg
dec
ret
and
ret
stos
add
les
int3
inc
jl
add
jge
test
mov
push
std
hlt
add
cs
mov
mov
push
addb
sub
out
iret
repz
and
adc
test
cltd
clc
xchg
xor
es
push
pushf
jne
fnstsw
or
sub
pop
pop
data16
fsubs
pushf
aas
call
lahf
jnp
xchg
ret
cmp
out
cmp
js
std
and
movsl
nop
mov
into
negl
jae
bound
sub
pop
jns
punpckldq
movsl
xlat
in
xor
movsl
dec
jne
xorb
push
cmp
cli
sub
jae
xlat
mov
aam
iret
mov
dec
cmpsl
jo
movsb
leave
or
lock
mov
test
jno
sub
gs
xor
mov
xorb
inc
or
jmp
push
push
add
pop
push
xchg
sbb
jl
push
adc
jae
shlb
pushf
callw
shlb
and
bound
push
dec
inc
dec
fdivp
in
cmp
hlt
push
cwtl
push
stos
js
jmp
out
into
inc
mov
rcll
add
repz
pop
jo
scas
inc
bound
std
sbb
movsl
cmp
sbb
test
inc
mov
sub
lcall
jle
cmp
icebp
iret
inc
inc
lea
int
pop
mov
or
mov
ja
adc
inc
mov
add
mov
gs
mov
test
inc
mov
push
rcl
mov
imul
cmpsl
clc
jl
push
xor
and
add
adc
cwtl
pop
dec
das
pop
das
xchg
cli
cmp
add
fists
pushl
dec
cs
pop
pop
jb
imul
ficoms
pop
gs
fnstsw
popf
adc
fisubs
mov
lea
xchg
out
push
ja
xchg
rorl
enter
inc
pushf
lods
dec
ds
jg
mov
inc
scas
push
jns
mov
andb
xlat
push
adc
sbb
adc
xor
cs
add
jl
dec
arpl
xor
sahf
or
jae
fisttpll
push
mov
pushf
sub
mov
outsl
pop
mov
dec
popa
cs
fimuls
xor
fsubrp
mov
test
andb
mov
lods
pop
jno
mov
dec
ficoml
mov
das
cmp
inc
mov
or
into
test
vpmacsdd
inc
scas
in
jge
push
push
pop
js
xor
push
popa
xor
roll
js
fwait
dec
test
dec
jmp
lock
sub
pushf
lods
out
dec
movsb
ljmp
fs
sub
ficoms
jmp
add
fwait
and
mov
adc
lret
cmpb
adc
mov
add
pop
cmpsb
jmp
mov
jg
and
mov
ljmp
lret
mov
lods
or
jecxz
pop
loopne
pop
inc
push
xor
les
ljmp
fdivl
cmp
ret
rcrb
lahf
jge
dec
xor
in
je
and
fcompl
push
into
mov
das
xchg
cmc
dec
in
aas
rorb
add
stos
inc
dec
lods
loope
jns
push
and
dec
ficoms
in
xor
dec
sti
jno
outsl
daa
outsb
scas
push
das
clc
pusha
mov
and
adc
aad
testb
mov
stos
sub
xor
adc
popf
sub
in
sbb
cmp
loope
cmpsb
nop
lds
out
mov
xchg
adc
xchg
cmp
das
or
das
test
adcl
rcll
cmp
popa
dec
push
ljmp
add
add
fnsave
rorl
pop
shl
fwait
js
fsubl
mov
fwait
int
aaa
out
out
jno
js
add
shrb
movsb
movsb
mov
lods
jecxz
jp
les
testb
test
cmc
std
ret
lahf
cld
pushf
xchg
into
add
daa
je
pop
shl
shl
mov
or
sahf
inc
repnz
jne
cmp
or
xor
rolb
inc
hlt
gs
mov
dec
inc
and
xor
nop
clc
inc
jp
xor
cli
outsl
aaa
jg
or
insb
pop
mov
mov
mov
gs
leave
cmpsl
add
movsb
xchg
mov
xor
call
jmp
pop
out
cmc
or
push
mov
add
add
sub
lods
sub
sbb
or
mov
ret
push
and
mov
aam
fwait
and
push
or
cld
adc
mov
mov
push
mov
add
stc
push
mov
jmp
int3
dec
jecxz
dec
lret
mov
inc
sub
dec
push
mov
cwtl
mov
sub
sbb
mov
push
push
lret
sub
adc
fdivrs
mov
mov
add
push
mov
or
call
jl
aas
inc
enter
popa
inc
addb
xchg
sub
pushl
push
cmp
xor
mov
or
mov
imul
inc
dec
and
dec
sub
cld
and
mov
cmp
mov
sti
inc
bound
mov
ljmp
movsl
lcall
rorb
sub
or
stc
sbb
cmpsb
or
jl
jmp
popl
into
xor
sub
movsl
in
cmp
sahf
xchg
aaa
test
pop
jns
jb
inc
push
dec
push
sub
data16
mov
aam
cmp
or
mov
push
adc
cmpsl
cmp
int3
push
sti
push
incl
adc
pop
movsb
or
sbb
pop
out
mov
test
les
and
and
mov
sbb
test
mov
pop
scas
sub
gs
stos
push
and
nop
adcb
out
fadds
cli
mov
ret
push
pop
test
push
fs
rcrl
xor
push
xor
popa
mov
repnz
mov
sub
adc
mov
stos
add
pop
mov
and
rcr
out
aam
test
dec
xor
pop
mov
imul
test
sbb
push
js
xor
bound
inc
jmp
outsb
inc
dec
lods
add
or
es
decl
sbb
fisubl
jge
inc
push
xor
add
lock
pop
mov
shl
jne
push
pop
pusha
outsl
and
cmc
mov
and
movsb
mov
push
jge
xor
cmpsb
add
jmp
sbb
in
cmp
stos
mov
imul
loope
movsb
dec
jbe
sub
adc
lret
dec
jnp
cld
int3
int3
into
rclb
dec
and
mov
xchg
jbe
ss
psubb
mov
leave
push
xor
jp
xor
aam
xchg
pop
filds
xchg
add
movsl
jge
jmp
frstor
xor
xor
cli
lods
test
incl
cmp
and
push
hlt
sub
mov
repz
pusha
enter
mov
andl
in
mov
popa
mov
add
and
in
pop
ja
shlb
add
es
int
dec
mov
lock
mov
xor
dec
gs
sbb
pop
jb
jmp
or
inc
das
sbb
xor
lods
insb
lods
fstl
sysret
push
push
and
inc
aas
sarb
test
lahf
push
adc
repz
je
lcall
test
imul
loopne
insb
sbb
mov
flds
sahf
mov
sub
jo
inc
lods
stc
in
mov
xor
pop
shlb
mov
jmp
xor
popf
and
or
pop
and
mov
jne
jge
mov
push
hlt
mov
ret
mov
arpl
jnp
adc
lods
shrb
inc
mov
cli
cltd
xchg
popl
outsl
repz
xchg
loope
xchg
xlat
mov
popf
dec
mov
adc
lret
addr16
push
xor
repz
add
jne
cmp
jl
xchg
sar
jno
xorb
lea
mov
fcos
sahf
add
ss
adc
and
mov
inc
mov
sub
or
xchg
xchg
fdivl
or
sbb
pop
push
or
pushf
aaa
bound
inc
add
xlat
mov
cmp
fadd
pop
div
ds
push
arpl
push
xor
cmp
fsubrs
rcrl
scas
add
cltd
add
nop
jns
mov
mov
fs
dec
mov
xchg
and
and
imul
pop
cmp
inc
rcrb
mov
les
xchg
push
and
sub
add
mov
sbb
dec
pop
xchg
test
popa
or
xor
pusha
jg
fwait
sub
fstps
addr16
add
mov
add
dec
lahf
leave
test
clc
pop
mov
fdivrl
aad
sbb
dec
repnz
cmp
fmuls
sub
outsl
aaa
addr16
inc
sbb
jle
sti
cmp
mov
cwtl
or
sub
inc
mov
mov
ds
cvtpi2ps
cmp
jg
xchg
stos
ret
bound
mov
ret
push
adc
push
pop
and
push
ror
jmp
mov
cmp
in
inc
push
mov
mov
outsb
add
cmc
xor
sahf
or
cmp
ja
mov
faddp
or
xchg
jo
sbb
dec
xlat
lds
jg
inc
sbb
popf
jb
shl
repz
dec
inc
lock
mov
add
xor
dec
push
notb
and
lods
int3
jp
add
aas
je
or
lahf
mov
in
test
iret
push
shr
add
jae
aas
les
inc
xchg
mov
cmp
fldcw
das
mov
gs
adc
ljmp
push
sahf
add
ret
sbb
mov
aam
add
ljmp
mov
fistpl
cltd
sbb
pop
cmp
das
cld
das
in
xor
gs
mov
mov
adc
or
ret
roll
add
jo
push
lds
insb
jp
in
pop
aam
mov
pop
cmp
sti
dec
mov
inc
lcall
add
pop
imul
in
pop
outsl
and
insb
hlt
mov
add
adc
jmp
sti
push
mov
cmpsl
jg
adc
lret
aam
cld
outsb
adc
pop
loope
out
cmc
push
adcb
test
popf
insb
jo
sub
mov
push
jo
sub
mov
int
jge
mov
mov
jbe
ror
das
int3
and
adc
pop
or
mov
cli
jo
or
out
subl
add
adc
daa
es
shll
and
rcr
out
sbb
xor
adc
add
rcrl
mov
cmp
sub
out
dec
shrl
in
and
stos
aas
mov
mov
push
stc
rcl
pusha
aas
and
add
jne
jge
cli
lret
imul
movb
out
adc
mov
sub
add
and
jg
sbb
mov
cmc
in
cmc
mov
out
insl
fildll
and
dec
pop
mov
scas
stos
adc
aam
and
fisubs
rorl
xchg
mov
loopne
pop
mov
int
stos
mov
int3
dec
xor
out
inc
cwtl
ss
adc
repnz
ss
out
insb
fnsave
push
inc
divl
add
stc
test
insb
mov
pop
sub
push
lea
aam
sbb
int
sub
cld
xor
jl
push
ljmp
dec
pop
fst
adc
add
and
mov
rorl
jbe
jns
xlat
pop
jmp
add
outsl
js
pop
enter
sub
lock
data16
clc
repnz
pop
or
inc
inc
pop
in
jnp
popa
dec
sub
dec
daa
aaa
mov
int
faddp
xor
mov
aam
fbstp
rcl
mov
aaa
daa
movl
or
icebp
adc
xchg
inc
sub
js
sub
xchg
cmp
xchg
cmp
es
push
movsb
xor
push
jnp
pushf
sub
adc
test
fnstenv
sbb
dec
rclb
jl
push
pop
iret
icebp
add
leave
inc
cmp
int3
fldl
leave
jae
mov
fsubs
ljmp
xchg
push
shrb
in
push
jmp
adc
and
pop
lret
sub
push
clc
lret
xchg
cwtl
lcall
add
dec
enter
das
cs
push
jp
mov
movsl
fidivrl
cwtl
and
imul
hlt
lahf
mov
repz
out
mov
inc
and
xchg
int3
popf
dec
mov
int3
xchg
jecxz
cmp
push
xor
popa
inc
mov
xchg
mov
and
inc
stos
cld
lock
jne
test
xor
jp
ja
mov
mov
lret
jecxz
ds
out
lods
mov
notl
and
mov
ficoml
cmp
stc
sub
fdivrl
pop
jp
xchg
fildll
lds
cmpsl
ror
sub
add
sub
std
pop
or
scas
adc
adc
xchg
mov
loop
out
shlb
dec
sub
jge
fldt
xor
inc
and
ljmp
jne
lock
sub
into
ss
sub
pop
adc
dec
sahf
mov
pop
fldcw
fdivl
subl
in
add
div
push
cs
ds
push
imul
mov
pop
sub
add
mov
xchg
test
cmp
int3
pop
out
cmpb
clc
mov
or
push
rclb
loope
test
push
ja
shll
adc
or
mov
push
fwait
mov
jp
xor
inc
mov
jb
pop
stc
lods
add
push
inc
and
push
ja
popf
cs
loop
js
add
pop
cmp
test
fimull
js
data16
push
push
mov
jmp
jnp
fwait
add
pusha
imul
cmp
mov
fucom
and
lret
dec
mov
cmp
sbb
pop
mov
fisttpl
mov
stos
mov
jnp
mov
sti
or
jb
dec
push
fnstsw
bound
scas
inc
lret
add
adc
add
mov
cmpb
pop
push
jp
or
cmc
movsl
sub
inc
push
pop
mov
xchg
adc
stos
dec
cltd
test
dec
mov
bound
loopne
shll
into
mov
jecxz
adc
gs
sahf
sbb
outsb
jns
fwait
stc
inc
dec
outsb
push
lods
xchg
shrb
push
add
add
mov
sarb
notl
jne
rcll
mov
jecxz
sbb
into
mov
mov
lahf
cwtl
mov
push
insl
add
sub
push
sub
in
xchg
inc
insl
adc
outsb
rcrl
cli
mov
fcoml
and
or
lods
push
xchg
jg
cmp
fiaddl
rclb
mov
nop
stos
push
insl
adc
pop
ds
xor
fcmovu
ja
sbbb
xchg
mov
mov
sbb
pop
les
loopne
faddl
xchg
or
test
add
mov
inc
xchg
stos
lret
jl
pop
mul
hlt
pop
ljmp
jno
push
jne
jae
pop
jne
aas
cmovnp
jp
scas
sbb
daa
jg
dec
popa
stc
rcrl
shl
dec
or
or
dec
int
dec
sarl
out
shl
sahf
xor
negb
pop
fs
fwait
hlt
mov
popa
jmp
movl
add
mul
dec
xchg
mov
adc
in
daa
sbb
daa
sbb
xchg
mov
fistpl
loop
pop
out
xchg
push
fdivrl
hlt
mov
inc
push
or
popa
cs
lods
add
sub
scas
imulb
lret
xchg
or
push
dec
pop
mov
les
cwtl
push
outsb
xor
fistl
push
push
push
aaa
jbe
mov
clc
arpl
jle
rcll
dec
enter
xor
inc
repz
filds
js
mov
adc
push
lods
aaa
lods
pop
add
insb
pop
aas
dec
std
or
pushf
mov
jns
or
push
push
in
scas
callw
inc
push
pop
aad
loope
xor
sbb
in
rcrb
adc
daa
ljmp
outsl
add
and
push
jb
pushf
fldenv
cmc
mov
je
mov
push
dec
inc
mov
xchg
lods
hlt
cld
cmp
lahf
push
shlb
adc
mov
movsb
mov
pop
movsb
jmp
fisubrs
stc
shr
out
iret
repz
lahf
ds
mov
dec
dec
pop
clc
dec
je
add
in
cmp
insb
mov
lret
xor
pop
sub
add
lds
inc
xor
sub
ds
icebp
inc
mov
into
test
sbb
xchg
in
lock
mov
mov
dec
cmp
outsl
es
dec
stos
test
fwait
cmp
mov
mov
add
sub
shll
adc
and
push
inc
add
cltd
in
pop
in
mov
bound
mov
sub
andb
nop
fisttps
dec
fistpl
mov
pushf
inc
pop
cmp
xchg
mov
adc
or
cmp
xchg
mov
jge
fnsave
or
call
mov
mov
cmp
pop
mulb
pop
adc
or
and
cmp
sbb
pop
adc
push
jb
push
or
and
scas
jmp
mov
insl
out
mov
mov
jae
sbb
aas
rcll
xchg
xor
ljmp
xchg
imul
add
mov
hlt
nop
jl
ja
jne
outsl
sub
xchg
popf
repz
cmp
mov
loope
sbb
mov
jmp
lds
dec
int3
push
iret
fwait
iret
shll
stos
cmp
das
jns
fistpll
push
or
pushf
adc
mov
mov
pop
and
ja
and
cmp
pop
mov
mov
hlt
mov
lds
and
push
insl
gs
stos
pop
mov
jmp
lea
es
xchg
gs
push
mov
add
mov
mov
pop
push
ljmp
aas
and
les
mov
mov
cmp
ljmp
cmp
inc
inc
adc
cld
out
inc
push
xchg
into
aaa
xor
loop
outsb
xor
sarl
push
loope
push
int3
cmp
jg
leave
lea
fsqrt
pop
sub
test
inc
mov
inc
invd
out
add
mov
cmp
mov
cmpsb
in
addl
add
mov
loop
cwtl
jb
std
outsl
ret
les
cwtl
cmpsl
and
stc
aam
call
mov
ficompl
xchg
arpl
ret
stc
mov
fdivp
enter
inc
xchg
mov
adcb
js
dec
outsb
fwait
xchg
icebp
sub
mov
subl
and
push
subl
cmp
jge
sbb
and
adc
xor
in
iret
push
arpl
pop
pop
pop
and
dec
or
test
pop
das
adc
outsb
push
pop
int
adc
jno
mov
mov
cli
dec
add
es
ja
sub
jmp
jne
mov
and
pop
insl
roll
int3
push
jle
movsb
arpl
xchg
jecxz
jns
sbb
push
push
cmp
fisttpll
insb
imul
arpl
lea
gs
fwait
not
push
inc
and
sbb
or
or
xchg
push
mov
mov
xor
jns
and
dec
mov
dec
mov
movsb
push
adc
cltd
sub
js
cmc
cmp
fisttps
dec
decl
in
mov
inc
fwait
mov
mov
xchg
mov
jl,pt
cmp
cmp
outsb
and
fisttpl
jae
out
sti
mov
in
sub
ljmp
cltd
cmp
pop
cmp
loope
mov
and
xor
adc
pusha
ljmp
subl
mov
and
leave
add
xor
les
scas
sub
lcall
cmpsl
or
testl
inc
sub
mov
sub
pusha
mov
aas
lcall
pop
rclb
mov
cmpsb
mov
jne
in
dec
sub
push
and
mov
push
lret
sub
adc
stc
hlt
mov
sbb
xchg
mov
aas
mov
ja
lret
std
hlt
dec
lods
movsb
pop
cmp
push
pop
sarl
loopne
cmc
out
je,pn
adc
sub
ret
jle
pop
inc
ljmp
data16
adc
daa
lcall
outsb
mov
mov
shlb
mov
inc
mov
push
jno
aad
mov
pop
inc
outsb
loopne
inc
outsb
fwait
inc
adc
out
out
push
jo
adc
add
adc
mov
ja
and
add
imul
cld
push
mov
dec
lock
push
cmc
outsl
xor
cwtl
mov
xchg
push
out
scas
cmpsl
test
adc
sbb
stc
clc
add
clc
insb
pop
mov
loop
ficompl
addl
xchg
test
pop
cmp
mov
aaa
xchg
push
xchg
fcmovbe
cs
lods
and
shll
sub
in
aad
fucomp
pop
inc
jbe
imul
in
in
inc
jno
xchg
dec
pusha
ss
inc
mov
cmp
bound
mov
xlat
pop
lods
mov
fs
cmp
lea
insl
mov
outsb
in
je
cmp
jecxz
out
mov
xchg
jnp
test
xor
pushf
cmpsb
sub
dec
cwtl
add
std
shlb
jmp
mov
xchg
movsb
bound
inc
jne
sbb
jp
iret
or
cmp
xor
fcomip
dec
stc
mov
push
or
popf
test
jo
sbb
lds
cmp
jae
pop
inc
push
insl
out
jbe
and
jnp
sub
in
mov
cld
rcll
pop
pushf
aam
test
addl
ljmp
arpl
jns
loop
testb
jbe
xor
mov
push
mov
pop
arpl
inc
adc
xlat
loope
das
pop
push
mov
int
xchg
cmp
add
je
mov
sub
popa
and
pop
bound
int3
adc
and
mov
orb
btcl
bnd
aad
add
or
mov
mov
test
xchg
add
sbb
add
cmp
inc
xchg
subb
cltd
pop
jne
dec
scas
pop
leave
in
lds
rolb
inc
dec
mov
filds
lcall
pop
mov
cmp
stos
arpl
ss
shll
aam
andl
popa
xchg
xchg
loop
outsl
clc
frstor
xchg
es
and
lods
pop
and
inc
sub
xchg
jne
mov
lret
lcall
lods
jbe
xor
repnz
cmp
test
ret
mov
adc
and
cmp
sarb
push
xchg
or
sub
call
pusha
lods
xlat
sub
mov
arpl
sbb
inc
sbb
stos
push
or
push
xor
ljmp
pop
hlt
mov
pop
in
mov
imul
bound
gs
mov
pop
orl
pavgw
es
les
popf
in
lcall
xorl
es
fs
xchg
sbb
dec
mov
out
insl
in
or
iret
scas
jo
jnp
dec
jmp
std
popf
mov
push
fiaddl
sub
lret
sub
xchg
and
sbb
dec
cmp
push
lcall
imul
lahf
pop
and
sub
jl
nop
in
cmp
mov
xchg
push
imul
push
xlat
sbb
inc
mov
pushf
adc
jecxz
sarl
push
and
lcall
ficomps
cmp
cwtl
sub
out
dec
sti
pop
movsb
out
jae
add
xchg
out
outsb
push
adc
sub
inc
xchg
fstpt
pop
ficomps
pop
jle
xchg
orl
ficoml
push
addr16
or
pop
sub
push
mov
movsb
push
sub
push
in
subb
cmpsl
in
ficoms
imul
imul
dec
repnz
mov
cmc
xor
pop
es
push
dec
imul
xchg
sbb
aaa
pop
lods
gs
repnz
push
out
dec
xor
mov
lcall
mov
out
adc
lea
mov
repnz
fcmovnb
xchg
mov
or
adc
and
xor
scas
add
lods
mov
shlb
or
jecxz
jg
fistl
ds
and
outsb
inc
inc
cmp
call
jp
hlt
or
jae
pop
jne
jmp
clc
push
loop
mov
orl
mov
dec
xor
push
lock
fstl
pop
jp
or
lods
xchg
leave
scas
add
sahf
push
test
rcll
leave
data16
cmp
sahf
popa
lahf
js
push
decb
pop
jmp
mov
loopne
cwtl
pop
shll
or
out
sub
cltd
pop
jmp
ret
daa
sbb
fistpl
jp
popf
insb
mov
add
cltd
or
add
sub
movsb
mov
push
and
cmp
dec
cmp
repz
push
xor
push
xchg
test
adc
pop
push
xchg
add
mov
sub
stos
call
xor
add
pop
outsb
mov
repz
cli
lds
clc
jnp
daa
ret
loope
mov
fcoml
dec
mov
add
pop
and
xchg
out
sbb
lods
mov
mov
dec
sub
mov
divl
jge
rcll
push
enter
pusha
and
es
cmp
mov
mov
ret
push
out
in
dec
insl
ret
insb
movsl
push
cs
push
lret
nop
push
pop
and
rep
and
push
into
xchg
push
inc
leave
in
push
xchg
out
lret
imul
loop
fistl
mov
popf
idivb
outsl
jno
mov
dec
xor
jp
movsb
aaa
pop
sbb
xor
xor
int
mov
sbb
jmp
fneni(8087
addr16
pop
mov
pusha
in
call
shrl
dec
xor
add
mov
pop
mov
inc
jae
pop
xor
inc
cld
ja
fnstcw
xchg
or
lods
sbb
in
mov
xchg
dec
cwtl
mov
shll
clc
inc
enter
or
imul
jle
jno
pop
iret
mul
mov
aaa
icebp
and
jmp
scas
inc
pusha
adc
jbe
or
fcompl
aad
sbb
and
dec
test
xchg
outsl
dec
mov
sbb
enter
scas
inc
cmp
js
pop
jno
fistpl
pusha
mov
mov
push
fstl
pop
fsubr
leave
test
es
xchg
xchg
inc
sub
fidivrl
fld
stc
mov
dec
xor
xchg
or
jb
jmp
ja
inc
xor
pop
into
adc
and
stos
cmp
aad
or
or
or
pop
ror
xchg
das
push
rcll
pop
mov
sbb
sbb
sub
push
mov
adcl
pop
push
adc
cmp
mov
in
mov
cwtl
f2xm1
push
sbb
inc
in
cmp
sbb
adc
bound
add
mov
test
xchg
cmpsl
adc
or
adcl
xchg
movsb
insl
push
sub
sti
lret
xor
or
movsb
sbb
adc
into
mov
push
push
loope
push
sub
adc
fisttps
push
outsb
push
jo,pt
push
orb
cld
scas
pop
add
pushf
jo
jge
xchg
mov
out
jnp
mov
mov
xor
fldenv
loop
mov
ss
and
xor
mov
aad
mov
das
fwait
and
jp
xor
mov
movl
test
lds
nop
lahf
xor
xchg
ret
testb
jbe
cli
or
inc
mov
mov
scas
and
mov
ret
outsl
js
inc
mov
and
stc
dec
push
repz
xor
push
movsl
ja
rep
shlb
xchg
paddusb
fcomps
das
push
xor
pop
cmp
addr16
pop
push
dec
dec
add
add
mov
imul
pop
ret
inc
iret
push
fmull
cmp
xchg
es
sbb
ficompl
lcall
xchg
mov
and
pop
lods
pop
cmp
xchg
sbb
jnp
lods
push
negl
xchg
lret
test
jecxz
dec
test
xchg
mov
cmp
inc
and
adc
jb
mov
lods
add
sub
test
mov
std
inc
or
movsl
loope
ffreep
popf
cmp
push
push
pop
pop
icebp
fstl
imul
xchg
add
jbe
arpl
das
ljmp
mov
sbb
mov
sub
push
out
test
jbe
adc
sub
imul
fwait
sarb
les
scas
es
xor
movsb
jo
fnsave
adc
xchg
jmp
mov
mov
call
lds
sub
and
sub
push
movsl
scas
jecxz
int
in
xor
cmc
fdivs
lcall
mov
or
mov
push
loope
mov
sar
push
in
xlat
sarb
mov
ja
or
rclb
mov
add
imul
insb
iret
lock
lea
daa
push
sub
out
lcall
imul
and
aam
adc
sbbl
inc
dec
xchg
clc
mov
int
and
addl
jo
aaa
xor
cmp
call
sub
arpl
sbb
jmp
add
cmp
jae
mov
mov
shll
lods
mov
ret
int3
pop
or
and
insb
or
sub
ror
sbb
sti
xor
xor
mov
ss
fistpl
mov
sub
pop
sbb
or
movsb
std
nop
sbb
aam
xchg
data16
add
pop
mov
roll
nop
mov
pop
notl
or
scas
mov
test
idivb
mov
or
sub
test
sub
sub
push
hlt
jmp
mov
insb
sbb
daa
xchg
fs
jno
adc
fs
xor
sbb
ficoml
dec
sub
dec
mov
stc
addr16
dec
jmp
int3
cmp
cmp
xchg
mov
pop
addr16
je
imul
and
dec
cli
fcmovb
xor
push
cmc
clc
cmc
inc
leave
cmc
mov
mov
lret
or
js
and
add
stos
mov
pushf
dec
inc
test
lock
xchg
in
add
sahf
icebp
sbb
inc
adc
mov
fdivrs
mov
arpl
add
in
sti
pop
and
ljmp
fmul
xchg
xor
sbb
icebp
inc
ja
int3
mov
cmpsl
cli
xor
rorb
subl
xchg
cs
jmp
dec
adc
adc
cmc
popa
jecxz
aad
fwait
out
leave
adc
outsb
sbb
xchg
or
mov
notb
mov
sti
popa
xchg
mov
add
insb
mov
cltd
inc
lret
dec
cwtl
jne
shll
ss
je
pop
inc
sbb
in
popf
mov
jbe
inc
sbb
daa
pop
dec
sub
aaa
and
jno
paddsb
inc
adcb
dec
lcall
insb
movsb
insb
add
add
sub
enter
jl
xchg
sub
mov
sbb
mov
loop
outsb
cmp
xlat
repnz
icebp
mov
addb
xchg
jecxz
lret
stos
xlat
mov
fyl2x
sub
inc
jg
sbb
mov
pop
js
scas
xchg
xchg
addb
inc
sub
sbb
pop
fidivrl
inc
mov
icebp
aas
fcomip
mov
push
cli
or
filds
stc
or
icebp
addr16
push
pop
add
lret
setge
shr
insb
and
mov
jmp
sbb
mov
cltd
mov
lods
imul
mov
lods
cmp
sarb
pop
out
dec
mov
in
ljmp
pop
sub
and
fildl
sbb
sub
add
mov
pop
call
mov
test
and
mov
push
movsl
inc
xor
aaa
inc
mov
adc
xchg
addl
ds
dec
shrl
mov
filds
pop
aad
mov
add
call
mov
lods
ds
imul
sbb
and
xchg
xor
or
stos
xchg
icebp
adc
dec
movsl
xlat
add
xchg
lods
dec
aad
les
mov
inc
jl
push
mov
push
xor
jl
repnz
xchg
mov
outsl
mov
sub
pop
sti
ja
pop
mov
in
call
cs
jl
ds
pop
jmp
sub
cmp
fcom
sbb
dec
jecxz
jb
xchg
and
in
out
mov
push
and
in
push
repz
inc
mov
les
je
cmp
jp
add
mov
dec
sub
rorb
roll
jmp
mov
inc
pop
ds
stos
es
add
loop
cmp
mov
gs
lock
arpl
add
xorb
flds
ret
sbb
pop
mov
and
in
xor
dec
popa
std
lds
movsb
push
fs
repnz
push
sbb
xchg
icebp
xchg
push
pop
pop
xchg
xchg
mov
repz
cmpsb
fdivl
jge
in
cmp
imul
mov
xchg
insb
imul
std
imul
xor
cli
cwtl
adc
or
pusha
jmp
push
js
ret
gs
mov
push
lret
add
int3
fstpt
in
loop
pop
mov
mov
sahf
push
les
insb
out
mov
sub
fildll
iret
out
insb
pop
jp
leave
dec
pop
mov
outsb
xor
push
stc
lahf
push
negl
test
dec
dec
imul
scas
nop
or
orl
xchg
xor
nop
in
scas
mov
nop
or
fwait
add
xor
cmp
popf
jecxz
movsb
push
sar
jle
mov
mov
xor
sbb
sub
cli
filds
pop
jl
iret
loopne
out
lods
jno
pop
out
xchg
movsb
std
data16
mov
xor
stos
test
xchg
cmpsl
fwait
mov
pop
add
scas
outsl
sbb
add
ret
push
leave
cmc
sbb
mov
leave
adc
scas
insb
adc
dec
int3
inc
sub
or
repz
in
xor
xlat
mov
leave
inc
adc
lret
in
mov
nopl
xchg
sbb
test
fsubs
cmp
je
push
pop
inc
mov
or
adc
bound
add
ja
test
jbe
out
lods
and
jecxz
dec
addr16
mov
cmp
xchg
mov
and
arpl
fs
rolb
xchg
push
and
add
into
nop
cmp
lret
dec
push
inc
fimull
das
sub
pop
adc
jnp
push
and
loope
xchg
nop
xchg
pop
inc
and
push
pop
sti
push
std
out
loop
cmp
stc
lgs
mov
ljmp
and
roll
cld
dec
sbb
cmp
insb
movsl
fsubrs
add
sub
or
inc
dec
push
adc
and
xchg
cmpl
fdivs
cltd
fnstsw
ljmp
mov
in
inc
rcrl
call
ret
push
gs
bound
lret
test
outsl
std
jnp
movsb
push
scas
jns
jb
xor
inc
pop
leave
mov
jle
arpl
push
pop
mov
ljmp
jns
jne
cmp
popa
and
xor
fnstenv
cmc
jle
pop
cmp
adc
xorb
mov
cmp
imull
cmp
negb
adc
subl
jp
jae
push
dec
rcrl
inc
stc
insb
inc
pop
popa
jbe
xchg
and
mov
push
inc
cmp
ds
inc
add
and
pop
mov
cmp
mov
push
sub
dec
test
push
leave
cmp
add
pop
out
adc
mov
fnstsw
or
mov
ljmp
pop
repnz
mov
in
mov
push
icebp
cmp
aad
jp
xchg
out
and
sbb
or
and
jp
cmp
push
sti
lret
hlt
js
loopne
cmpsb
mov
hlt
xlat
xchg
test
adc
rcl
mov
loopne
mov
imul
lds
jmp
sub
push
orl
sbb
xchg
lret
insb
pop
test
insl
sbb
lods
adc
in
or
and
int3
mov
mov
pusha
pop
aam
sub
dec
cmp
loopne
ret
sbb
or
lret
and
scas
and
addr16
int
icebp
jne
push
jb
popf
cwtl
xor
sub
push
aaa
test
sbb
loop
ja
add
mov
adc
int3
xchg
cltd
push
popa
adc
mov
mov
xor
icebp
dec
in
inc
sbb
and
imull
jmp
jl
push
inc
push
daa
xchg
dec
mov
xchg
xchg
out
or
and
fwait
stc
testb
dec
ljmp
push
jecxz
fcmovu
cltd
in
lret
jne
in
adcl
or
jmp
sub
jo
jo
jne
push
cmp
mov
clc
cs
icebp
and
xor
cmpsb
dec
fstl
mov
pusha
cmp
loopne
cmpb
test
shll
add
into
xchg
jl
mov
cmp
outsb
sub
dec
cmpb
xchg
sub
mov
outsb
pop
loope
mov
lods
jmp
jmp
mov
imul
shrb
int
sbb
mov
xor
lea
xchg
jno
xchg
push
cmp
mov
xor
fidivl
arpl
popf
jb
mov
sub
pusha
jb
loop
stc
xchg
push
mov
enter
bound
sub
cmc
xchg
rorb
mov
pop
cmp
jle
push
inc
inc
push
push
fwait
and
sahf
mov
and
test
or
ret
lret
leave
jns
xor
mov
inc
xlat
addl
fnstsw
mov
and
inc
mov
ret
inc
daa
and
into
aaa
jne
or
jg
loope
enter
fstpt
mov
jns
jl
pop
rorl
fadd
xor
add
cmp
arpl
fstl
mov
xchg
xchg
popf
aam
add
and
jle
mov
xchg
or
pop
xchg
add
movsl
fs
cmp
test
ret
lret
mov
dec
repz
stos
inc
dec
test
sub
testl
or
dec
inc
push
dec
mov
cmp
cmp
mov
mov
pop
aaa
into
add
push
pop
jnp
push
cli
ficoml
xchg
dec
imul
sub
lods
shll
jb
rcll
push
test
scas
aas
xchg
jae
js
and
xchg
cmp
loope
inc
or
dec
int3
xorb
jecxz
pushf
push
jo
stc
outsl
lret
pop
outsl
aas
out
add
xchg
jp
popa
hlt
jmp
xchg
pop
xchg
fidivrl
mov
fidivl
cmpsl
popf
outsl
xor
add
jae
xchg
or
rcl
addb
fmull
insb
push
cmp
lret
out
cmp
lods
loopne
arpl
add
rorl
inc
or
pop
jl
sub
and
sub
mov
in
lods
lock
mov
mov
mov
xchg
into
test
fdivrs
rcll
mov
stc
fbld
fbstp
jle
cs
mov
rcrb
inc
jo
mov
sbb
pop
ret
xchg
stos
adc
pushf
fldl2t
aad
pop
xchg
out
stos
add
nop
jle
dec
jg
adc
push
test
inc
sub
mov
sahf
repz
idivl
shlb
or
sbb
inc
mov
sub
shlb
jmp
out
cmp
movsl
mov
rolb
xlat
les
sbb
jl
movl
jecxz
dec
or
pop
pushf
push
ds
loop
adc
lret
repnz
dec
lea
jno
mov
mov
add
es
inc
js
inc
cli
mov
leave
lahf
mov
and
dec
mov
jno
pop
ret
push
jmp
cs
daa
jbe
test
sub
nop
ret
mov
sahf
add
nop
nop
jecxz
aad
mov
push
cli
sub
cmpb
insl
mov
repz
je
or
cmp
data16
mov
jb
adc
adc
aam
sar
sub
dec
dec
jg
sti
stos
repnz
loop
mov
sub
jmp
lahf
mov
sahf
aas
scas
in
aad
es
stos
mov
popa
push
mov
xor
dec
js
ret
push
nop
popl
loope
sub
mov
sti
and
adc
ret
enter
lahf
js
sbbb
push
push
or
jg
fstpt
fdivp
sub
add
aad
add
sti
push
loopne
jl
adc
call
aaa
stos
andl
cmpsl
addb
push
arpl
ss
lcall
lret
or
imul
sbb
inc
cli
divb
push
xchg
jno
hlt
dec
cld
pop
jnp
and
insl
mov
xor
xor
xchg
adc
sar
cmp
fs
adc
dec
sbbb
adc
arpl
lret
adc
ljmp
push
movsl
pushf
js
push
leave
lea
or
jno
jnp
insb
sub
mov
and
jmp
jbe
mov
sbb
mov
and
pop
clc
aas
push
out
in
sbb
jae
push
cmpsb
dec
into
out
xchg
scas
cmp
jae
sub
and
aad
pop
xchg
dec
mov
add
rcrl
sahf
loopne
daa
hlt
xor
mov
popf
dec
pop
lretw
cmp
mov
lock
stos
cmpsl
mov
jecxz
test
leave
sub
jp
fisubl
add
repnz
lods
jp
lcall
mov
adc
dec
push
sub
loop
push
gs
or
adcl
add
mov
and
fsubl
not
jbe
pop
nop
push
sbb
lret
repnz
adc
jae
stc
popl
stos
add
xchg
shll
lods
push
xlat
inc
in
in
adc
pop
cltd
dec
dec
add
push
mov
das
in
int3
sub
pop
sbbl
or
or
sahf
aas
iret
mov
rclb
jno
pcmpeqw
or
fnstenv
aad
mov
jae
pusha
sbb
test
and
prefetcht2
and
sbb
aam
adc
xchg
jle
or
sub
push
pop
mov
sarb
pop
clc
pop
dec
xor
xor
adc
or
lahf
and
or
mov
sub
out
or
xchg
pop
xchg
cmp
leave
loopne
add
cmp
pop
imul
in
daa
daa
mov
cwtl
pusha
cmp
pushf
nop
xchg
lahf
lahf
shlb
ret
lcall
mov
xor
fcoms
sub
sub
mov
or
lods
stc
ret
aad
sub
cmp
xchg
mov
aam
add
idivb
add
aad
repz
aad
or
or
aad
cld
insb
mov
lret
push
mov
dec
js
popa
cltd
jl
pusha
js
or
lahf
add
std
shlb
cmc
call
in
xchg
insl
xchg
sbb
push
out
in
dec
or
roll
sti
push
jns
push
mov
jmp
inc
sub
jmp
sti
dec
pop
mov
jg
mov
xchg
cmp
push
rcr
sub
cwtl
mov
imul
mov
lahf
push
outsl
pop
pop
xchg
jne
int3
pop
cld
cli
aam
lds
cmp
pop
cmpsl
mov
jno
outsl
or
push
ficoms
ljmp
or
mov
push
lods
jae
lcall
adc
jnp
js
in
and
mov
add
xchg
cmp
fcmovnb
lahf
inc
fnstenv
inc
mov
adc
rorl
mov
add
rcl
add
inc
movsb
xlat
mov
out
dec
aas
mov
cmc
insb
or
mov
push
push
popa
movsl
clc
fxch
std
inc
dec
sub
add
jne
ja
push
mov
ret
bnd
or
insb
add
mov
pop
mov
rorl
out
aam
jg
test
jne
enter
lods
arpl
divl
pop
mov
lods
adc
mov
jno
adc
and
fadd
sub
rcl
jmp
mov
cld
xor
imul
and
data16
jp
sbb
jo
imul
fnsave
mov
popw
loopne
xor
and
pushf
loopne
pop
add
roll
fnsave
cmp
mov
xchg
call
aad
lret
hlt
or
add
rcr
cmp
xor
mov
lods
pop
nop
jo
std
int
mov
and
call
mov
inc
mov
and
movsl
or
or
loope
and
push
lcall
sub
int
scas
xchg
neg
rol
push
lea
mov
and
pop
xchg
lahf
arpl
jns
inc
and
ds
dec
in
cmp
sahf
aaa
nop
mov
mov
mov
lods
xor
inc
cmp
aas
mov
xchg
sub
inc
es
sbb
lret
and
mov
xor
and
les
es
pop
sbb
clc
hlt
mov
pop
mov
xor
test
xchg
adc
xchg
cmp
mov
dec
mov
mov
mov
mov
sub
fimuls
jbe
inc
jp
pushf
mov
sbb
add
adc
cmp
fcoms
push
xchg
xchg
mov
push
cmpsb
das
push
mov
xor
push
mov
jae
and
popf
aas
add
sub
dec
mov
push
inc
scas
movsl
stos
jmp
cmpb
inc
pop
pop
mov
addr16
mov
mov
dec
dec
mov
nop
mov
repnz
sahf
icebp
dec
mov
push
cwtl
insl
mov
js
xchg
inc
xor
js
sub
jae
fsubl
add
and
xchg
pop
cmpsl
iret
scas
outsb
cmp
scas
fistpll
sub
sarb
int
push
jae
dec
fidivs
mov
xchg
jecxz
outsl
or
and
fimuls
dec
dec
fldz
jmp
push
mov
sar
sub
cmp
cmp
and
xor
jbe
cmc
xchg
fnstcw
xchg
mov
xlat
add
ret
pushf
mov
push
jae
mov
cmp
mov
aaa
mov
imul
sbb
adc
fiaddl
adcl
inc
insb
mov
and
test
fidivl
movsb
shrb
cmp
mov
fs
cmc
outsb
pop
xchg
std
pusha
xchg
loop
cmp
fidivrs
popf
and
sbbb
adcb
pop
adc
jge
or
inc
pop
insb
mov
jb
out
rorb
cmpsl
cmc
mov
cmp
mov
ds
ds
cmp
mov
js
lret
aas
ss
shl
cltd
adc
sub
mov
scas
movsl
mov
in
jle
aaa
sbb
fimull
push
js
push
jo
ret
sbbb
fcoml
inc
repz
ret
aad
mov
mov
adc
push
jecxz
gs
enter
push
push
jb
popf
mov
dec
es
push
cmp
je
in
mov
cmp
loope
mov
inc
inc
inc
pop
adc
cmp
cld
movsb
xchg
js
cltd
xor
pop
inc
dec
mov
outsl
or
es
aam
cmp
and
add
popf
outsb
loope
lock
fimull
ret
xor
xor
rcll
aad
aad
loopne
xlat
sub
popl
mov
clc
lcall
inc
in
xchg
jg
cs
sbb
in
ds
nop
negb
add
outsb
scas
sbb
ret
popa
mov
into
pop
loope
or
popa
mov
inc
adc
and
sub
int3
jnp
pop
lods
sub
inc
jecxz
call
cli
stos
mov
enter
test
mov
xor
notl
pushf
mov
fisttpll
sub
mov
mov
xchg
sahf
sarb
popf
jne
push
ret
aad
sarb
dec
movsb
cltd
xchg
fmull
dec
loop
sbb
lahf
and
into
cltd
mov
or
push
jge
mov
fs
mov
jne
sbb
xchg
adc
sbb
xor
adc
cwtl
jle
addr16
aad
stos
pop
sbb
push
fnsave
mov
loop
or
mov
adc
inc
movsb
mov
and
push
icebp
xchg
xor
mov
in
rorl
jg
mov
inc
mov
push
xchg
jmp
mov
test
pop
gs
and
or
ror
sbb
icebp
mov
fstpl
clc
repnz
mov
into
cmovs
test
lock
dec
xor
repz
mov
xchg
stos
xorb
movsb
aam
cli
and
jmp
out
pop
in
and
fucomip
and
xlat
ret
jnp
scas
jl
adc
dec
mov
ja
or
stc
mov
inc
inc
xor
cs
aam
xor
jmp
cmp
mov
fldenv
sbb
mov
mov
add
ja
pop
popa
xchg
mov
sahf
cld
sbb
pop
fwait
xor
mov
adc
aam
movsb
sbb
mov
shrb
and
push
push
int3
mov
out
cltd
mov
pop
mov
pop
adc
in
movsb
push
sbb
cmpsl
push
inc
mov
mov
div
or
in
jmp
pop
int3
pop
rolb
or
in
cmp
mov
pushf
mov
insl
daa
xchg
jge
rorb
call
cmpsb
cmp
pop
call
lods
arpl
cmp
mov
out
inc
hlt
repz
push
cmp
push
outsb
mov
lods
sarb
adc
inc
test
ficoml
adc
lcall
nop
frstor
out
jl
lahf
lcall
fnstenv
pop
repnz
adc
lcall
int
lods
popa
sbb
push
in
cli
sahf
addb
ss
mov
dec
clc
das
jecxz
nop
std
sti
lds
fsts
ret
inc
mov
push
cmp
mov
or
jb
and
leave
cmc
adc
pusha
inc
sbbl
cmp
and
daa
por
hlt
popf
lcall
sbb
movl
out
adc
jno
push
dec
jne
imul
inc
pop
test
in
dec
cmc
and
or
mov
jnp
out
popa
insl
xchg
add
cmpsl
rolb
pop
popa
rcr
mov
pop
and
test
mov
jmp
push
push
mov
sub
add
lea
adc
inc
pop
popf
dec
push
jmp
jle
subl
movsl
mov
icebp
jae
mov
scas
dec
leave
inc
mov
dec
adc
fsts
lcall
insb
test
push
jg
sub
in
aaa
push
out
xchg
xor
push
sbb
xor
jl
add
fcompl
dec
push
jl
push
push
pusha
js
and
pop
imul
xchg
xor
sbb
fistl
mov
test
sub
xlat
mov
rcl
sub
push
push
pop
movmskps
out
subl
das
icebp
dec
fsubl
adc
test
and
pop
pop
mov
jo
int3
sub
outsl
cmp
dec
push
pop
sarb
jae
dec
and
dec
movsl
les
cld
xchg
sbbl
mov
pop
inc
inc
sbb
int3
outsl
aam
std
into
adc
jb
pop
xchg
and
jno
xchg
test
push
xchg
adc
or
rcll
push
add
push
mov
out
sbb
adc
sbb
mov
push
and
cmpsb
mov
xor
outsb
mov
mov
call
stc
ret
insl
xor
push
outsb
mov
push
and
mov
das
pop
mov
js
sbb
mov
lea
pop
aas
in
popf
movsb
push
lods
push
cmp
stc
sbb
adc
adc
out
mov
call
pop
and
mov
icebp
mov
popf
inc
xchg
sbb
lahf
js
push
add
dec
pop
cmpsl
inc
xor
and
jno
mov
mov
ds
add
test
nop
jecxz
mov
xor
ds
inc
or
and
mov
push
inc
adc
aas
cmp
mov
jp
mov
in
dec
cmp
popf
les
in
stos
jp
nop
lods
and
lods
aad
or
jno
sarl
pop
shll
mov
and
jb
mov
lahf
inc
push
inc
in
leave
faddl
xor
push
ret
mov
lahf
xor
cli
jnp
add
stc
and
jg
add
jnp
mov
les
movsb
add
outsl
dec
fs
mov
int
fisubs
cmp
mov
pop
xchg
test
test
rorl
pushf
add
push
pop
pop
mov
push
inc
xchg
aas
aad
sbb
sbb
sbb
adc
pop
push
cltd
rol
pop
lret
jl
push
sti
pop
xor
popa
call
or
sbb
adc
jmp
repz
scas
enter
add
loope
pop
cli
sbb
xchg
dec
xor
jae
outsl
movsb
pop
lret
add
lds
dec
ret
add
lock
movb
inc
daa
adc
sbb
push
pushf
xor
ret
xchg
inc
loope
out
cwtl
dec
out
cmpl
insl
jno
adc
fdivs
sub
popa
gs
pop
ss
int
cli
lock
xor
lods
inc
push
aas
mov
mov
mov
inc
pop
out
mov
dec
mov
loop
mov
movsl
decl
leave
mov
cltd
lea
xor
int3
aam
or
inc
jne
mov
dec
lea
repnz
pusha
dec
adc
call
fadds
out
sahf
sub
dec
andb
sbb
pop
aaa
adc
mov
mov
addr16
push
push
and
out
adc
rorb
js,pn
mov
xor
pop
jle
mov
enter
mov
jp
adc
insl
lods
test
lsl
mov
xor
mov
sub
jae
sub
dec
jmp
std
in
daa
cld
pop
cmp
jecxz
mov
sbb
insl
push
jo
popf
testl
cmp
xor
cltd
scas
mov
cmp
push
jle
adc
shll
lret
daa
sti
push
nop
adc
je
sbb
dec
testb
xor
mov
in
std
flds
test
cmc
xchg
scas
lret
add
andb
je
insl
enter
xchg
ss
push
jne
push
enter
cmc
clc
sti
rcrl
jge
cmpsl
inc
mov
mov
or
or
add
es
repnz
pop
jg
xchg
lret
cld
pop
lahf
add
mov
test
imul
xchg
pop
pop
mov
insb
mov
sbb
les
cmp
loope
mov
dec
je
mov
mov
loope
lods
xchg
xor
xchg
clc
dec
and
xorb
or
int3
sbb
std
clc
and
pop
pop
ss
mov
mov
xchg
or
add
lret
rcrb
xchg
add
movsb
adc
aad
and
and
movsl
xchg
fwait
sub
mov
jo
rclb
fistps
ljmp
jne
xor
mov
sbb
pop
push
fwait
addr16
xchg
ljmp
add
sqrtps
lds
push
pop
dec
add
gs
inc
mov
jb
push
pusha
jg
push
push
xor
jge
mov
mov
movsl
inc
add
in
mov
xchg
popf
mov
cltd
popf
mov
mov
cmc
jp
dec
inc
pop
in
mov
out
xchg
pop
jl
jo
leave
inc
sbb
into
gs
lret
test
outsb
push
xor
rolb
outsl
stos
arpl
lds
xor
std
adc
and
or
adc
inc
dec
jne
aaa
inc
mov
scas
cmp
inc
xor
fnclex
daa
lret
ret
mov
test
repz
push
leave
sub
faddl
inc
mov
clc
mov
push
inc
lock
es
lods
pop
movsl
fnstenv
test
divl
aaa
out
inc
and
push
cltd
lret
and
sbb
lret
inc
ljmp
scas
imul
lea
inc
cmp
xchg
arpl
add
mov
fs
cmp
test
loopne
into
add
pusha
out
pop
push
outsl
jb
push
mov
and
add
dec
jg
dec
xor
incl
pop
mov
sbb
fs
inc
mov
inc
jecxz
pop
jae
mov
sub
mov
adc
mov
add
push
push
adc
test
sti
cmp
stc
sub
add
sbb
and
out
xchg
push
add
fs
push
pop
inc
add
adc
aas
mov
mov
sbb
mov
scas
xchg
bnd
xor
stos
cs
ljmp
push
hlt
loopne
or
push
sub
inc
xchg
xchg
das
imul
pusha
cmp
jp
imul
mov
subl
insl
js
push
sbb
ja
dec
leave
pop
je
inc
pop
mov
insb
cmpsb
pop
cmp
jnp
xchg
sub
mov
imulb
jns
out
scas
or
les
andl
mov
lock
scas
or
test
ljmp
dec
push
and
adc
ds
mov
jae
inc
jmp
xchg
loope
icebp
scas
iret
in
mov
mov
push
and
into
inc
push
into
push
xchg
cli
add
mov
incl
daa
loope
mov
dec
sarl
xchg
cmp
adc
jp
rorl
imul
cmp
add
sbb
xlat
xchg
les
outsb
dec
out
dec
shll
fstps
xorl
pop
pop
and
orl
pop
jmp
xor
adc
in
daa
xor
rorl
ja
loope
pushf
or
jp
adc
addr16
sahf
ljmp
lea
or
mov
dec
inc
mov
loope
rcrb
pop
je
lea
jae
jo
das
or
cmp
adc
icebp
adc
sti
push
insl
lret
std
mov
mov
ja
stos
xchg
xchg
jae
inc
push
out
dec
sbb
mov
push
rcrb
mov
xor
into
mov
cmp
int
shll
out
bound
inc
mov
cmp
sub
out
or
xchg
lahf
xchg
push
xchg
lock
adc
mov
cmp
dec
dec
insl
adc
mov
xchg
push
inc
and
loope
mov
xor
pusha
repz
es
cmpb
xor
imul
repz
adc
aas
cmp
insb
out
loop
mov
dec
dec
xor
adc
out
sbb
push
pop
int
or
clc
adc
stos
jb
jg
addr16
pop
xchg
in
pop
fwait
mov
cmp
mov
repnz
push
sub
push
stc
enter
dec
js
xor
mov
mov
incb
xor
cmp
test
push
test
adc
add
sub
xor
mov
hlt
cltd
cmp
mov
sub
sbb
xor
clc
push
in
cwtl
fnstcw
xlat
jne
es
fisubs
push
xor
sbb
cwtl
pop
and
inc
pop
xchg
jecxz
jns
call
cmp
and
scas
lea
mov
mov
adc
add
or
sahf
loope
incl
inc
int
add
fbld
inc
aaa
leave
lods
xor
mov
xchg
pop
scas
cmp
gs
call
xorb
dec
xchg
mov
xchg
xor
dec
jae
andl
das
pushf
out
jo
push
mov
push
idiv
jne
in
mov
icebp
jno
push
mov
cwtl
adc
xor
in
ret
jno
jae
inc
cmp
insb
cld
mov
xchg
call
cvtdq2ps
mov
jmp
cmp
fistl
sti
mov
inc
fwait
insl
adc
shll
sbbl
mov
pushf
cmp
shrl
cmpsb
mov
or
adc
mov
out
mov
fidivrl
out
aaa
cmp
pop
popa
push
clc
dec
es
sub
push
ljmp
inc
xchg
pop
mov
lds
pop
pop
pop
adc
push
mov
inc
inc
test
cli
adc
add
mov
xchg
lock
out
lds
repz
cld
in
shrb
lret
xchg
jmp
push
adc
int3
dec
mov
or
stc
and
jb
in
fwait
aaa
subl
adc
sbb
push
mov
jmp
popa
scas
sar
out
das
ds
dec
inc
in
inc
inc
push
in
sbb
jmp
cltd
xor
out
mov
pop
inc
mov
xchg
fmul
pusha
add
repnz
push
jne
push
ja
cmp
stos
out
push
sbb
mov
and
pop
jge
xor
icebp
xor
je
popa
stos
jbe
xor
jp
push
push
xchg
lds
mov
jge
pop
cmp
dec
test
pushf
subb
clc
pop
loope
imul
popf
ficompl
test
mov
cmpsb
adcb
xchg
ljmp
and
dec
mov
jno
in
lods
inc
sub
shrl
mov
lret
jns
mov
fiadds
mov
jae
inc
imul
pop
push
xor
fstl
js
pop
push
aas
sbb
mov
ficoml
inc
push
xchg
mov
int3
xor
cld
sub
insb
mov
pusha
xor
jo
mov
pop
cmc
outsb
loop
ret
and
ds
in
stos
dec
pop
and
mov
xchg
ljmp
sbb
shrl
movsb
shr
ret
movsl
jp
mov
xchg
lods
in
add
insl
xchg
inc
iret
in
mov
pop
loop
xlat
push
mov
lret
push
cwtl
jae
int3
push
dec
sbb
in
push
jl
xor
mov
xchg
jle
and
movsl
cwtl
lock
das
and
int
mov
add
pop
movsl
je
ret
or
jge
clts
mov
dec
mov
push
inc
insl
adc
cld
xor
or
hlt
lock
arpl
test
fstl
mov
sbb
xchg
sub
insb
movsl
shr
es
jae
xchg
loop
cld
sbb
mov
mov
xor
test
imul
jg
sub
push
in
pop
mov
test
ficoml
ret
call
insl
push
popa
fcmovbe
and
fsubp
jo
syscall
pusha
cs
test
movsb
inc
fsubrs
cltd
xor
push
enter
dec
aad
adc
punpckldq
rcl
lock
shrl
pop
in
pushf
and
jno
jo
cld
add
mov
icebp
ja
jle
jle
pop
mulb
mov
and
sub
mov
cld
std
xchg
imul
lock
mov
out
in
jnp
inc
std
je
out
or
cmp
arpl
icebp
ljmp
mov
rol
shll
cmp
repnz
sbb
js
cmp
dec
stos
xor
add
insl
daa
out
mov
mov
xor
shl
dec
scas
fmulp
xchg
stc
jl
lods
or
popa
test
fs
fldenv
sbb
cmpl
dec
jp
add
mov
and
stc
sti
cmp
push
sub
cmp
mov
lock
and
inc
daa
push
push
xor
je
ret
andl
xchg
cmp
adc
add
cmpsb
xor
mov
out
icebp
dec
push
aas
mov
mov
les
lcall
cli
lcall
pop
lret
jne
daa
subb
jle
xchg
mov
mov
or
and
stos
jecxz
xlat
dec
test
or
xor
xchg
xchg
cltd
pop
test
scas
xchg
adc
loop
mov
mov
mov
mov
xlat
fwait
xor
dec
xor
push
lcall
xor
mov
jle
aaa
jae
loope
adc
xor
and
jae
mov
mov
inc
repnz
lods
xor
and
and
sbb
dec
leave
es
sbb
in
or
adc
lock
mov
lea
mov
mov
sbb
insl
loopne
push
daa
cmpsb
lea
mov
popa
jns
insl
pop
jp
jb
jns
cmpsl
jle
scas
scas
data16
lea
inc
lret
inc
mov
inc
sub
cmp
gs
mov
lock
pop
loopne
stos
shr
bnd
mov
fstl
mov
push
stos
sarb
mov
test
mov
cmp
cmp
fdivrs
icebp
mov
cli
fstps
sti
inc
mov
push
icebp
pushf
ret
ret
je
clc
sub
cmp
out
xor
lcall
movsb
addb
add
notl
sub
call
je
jne
push
test
mov
daa
xlat
shlb
mov
dec
call
ljmp
fcmovu
adc
sub
add
adc
xchg
stos
sbb
les
pop
cwtl
add
js
in
scas
fstpt
lcall
mov
push
pop
lcall
push
loop
test
cmp
idivb
jns
out
add
pop
testb
fiadds
scas
fistpl
ror
push
mov
dec
inc
ja
int3
aam
fwait
xchg
adc
jns
fidivrl
push
cmpsb
xchg
mov
out
adc
pop
jns
pop
cmpsl
mov
pop
dec
and
and
lret
popa
dec
test
push
negb
pop
out
xchg
and
jmp
in
inc
jmp
aad
mov
bound
lds
mov
lock
push
jo
jp
push
mov
icebp
jae
inc
pop
loop
xchg
pop
mov
cmc
daa
pop
mov
sub
mov
notl
push
pop
outsl
push
movsbl
cmp
mov
test
xor
adc
test
push
adcl
js
int3
mov
icebp
lea
pop
push
push
nop
mov
mov
jecxz
outsb
repnz
out
mov
in
cmp
mov
cwtl
lock
inc
mov
push
imul
mov
pop
jae
aad
jecxz
add
cmc
jecxz
cmp
imul
xchg
sub
pusha
inc
mov
xor
cwtl
or
adc
hlt
sub
scas
push
ds
iret
mov
roll
xchg
and
mov
jmp
or
pop
mov
jne
fldenv
xchg
mov
dec
xchg
sub
xor
cltd
adc
dec
cmp
jp
stos
out
lds
xchg
sti
push
les
sub
add
sbb
ds
stos
and
loop
daa
sbb
jp
lret
mov
out
rcrb
pop
sbb
push
adc
or
mov
in
rcl
mov
std
and
popa
mov
addr16
push
outsl
jle
mov
ss
fiadds
fdivr
jecxz
es
jmp
pop
jp
shll
ja
sub
cmp
push
lcall
icebp
sahf
xor
cmp
int
push
mov
adc
cltd
pop
inc
mov
pop
sub
jg
dec
and
cs
push
rorb
mov
lods
jae
push
int3
das
push
mov
jb
mov
dec
nop
mov
scas
test
test
mov
cmpsb
popf
pop
stos
mov
pop
lcall
xor
arpl
fcoml
adc
xchg
xor
inc
cs
mov
repz
dec
pop
dec
mov
xchg
mov
adcb
pop
mov
rep
andl
or
cmpsb
lods
dec
lods
cmc
push
and
aam
cmpxchg
out
or
mov
arpl
lods
outsb
pushf
addb
add
mov
jo
jmp
sub
sarb
pop
mov
push
test
sbb
add
pop
scas
fdivrp
mov
aad
andb
sub
jl
mov
loopne
hlt
mov
lods
lahf
hlt
cmpsb
jl
cltd
cld
addl
dec
sarb
cmpl
sahf
and
dec
in
mov
sub
aaa
cmp
sbb
lahf
or
xchg
push
add
mov
cmpsl
mov
cmp
mov
push
xor
and
add
mov
adc
push
and
sbb
ss
push
xchg
bound
in
aas
and
jl
mov
aas
and
std
jecxz
daa
jp
mov
xor
insb
fldcw
inc
xor
lret
xor
jae
jmp
jb
lea
gs
pusha
cmpsl
xchg
dec
xor
dec
add
sbb
push
sbb
jle
iret
mov
inc
pusha
inc
das
or
das
testb
insb
aas
lock
dec
inc
sti
jbe
test
cli
cmp
fwait
popf
pop
sbbb
and
or
aam
fmull
mov
aad
lea
mov
mov
mov
sbb
sarl
daa
sar
or
pop
sub
or
mov
or
sbb
cs
mov
cmp
jecxz
adc
and
xor
clc
adc
movsl
mull
jo
outsl
xlat
sub
mov
icebp
subb
xchg
cltd
mov
mov
cltd
pop
mov
mov
aad
sub
ja
pop
cmp
loop
and
cltd
inc
push
das
cmp
cmp
loopne
mov
das
inc
imul
stc
aas
cwtl
sub
enter
js
pop
adc
insl
pop
je
pop
out
inc
pop
in
and
sub
jmp
pop
stc
mov
shl
jl
push
or
sahf
setb
testl
adc
stos
pop
loope
stos
mov
mov
or
xor
sahf
sub
lahf
add
sub
fwait
push
out
shrl
imull
mov
ret
enter
cltd
mov
les
out
mov
push
sti
or
jb
inc
cmp
and
rcl
addb
mov
add
insl
and
pop
jle
pop
adc
gs
cmp
cwtl
aas
add
out
hlt
jns
ss
repnz
or
pop
outsb
leave
jo
mov
mov
add
js
insb
mov
dec
mov
xor
inc
jmp
push
negb
cmp
out
int
ljmp
fiaddl
add
lret
imulb
loop
jb
or
mov
iret
dec
xor
lock
add
push
sub
je
jnp
leave
mov
jno
stc
aam
arpl
sbb
pusha
rolb
fwait
push
mov
loopne
addr16
imul
xchg
fbld
subl
push
ret
stc
xchg
pop
xchg
pop
clc
out
mov
js
rolb
fsubrs
mov
aaa
inc
xchg
test
aam
xor
sbb
dec
dec
push
cmp
mov
jnp
add
mov
stos
stc
in
jo
dec
movsb
pop
add
mov
lcall
nop
mov
mov
popf
dec
sub
outsl
lahf
popa
ljmp
sub
jne
push
sub
sub
adc
jne
popa
and
stos
cli
insl
out
ror
lahf
outsl
sub
loopne
dec
shl
dec
stos
sbb
mov
mov
cwtl
sbb
or
adc
jle
mov
mov
lock
jecxz
cli
je
popa
dec
dec
out
xor
outsb
or
or
push
jbe
testb
sub
psrlw
mov
and
adc
add
mov
test
fcmovb
aas
lods
stos
sarl
out
gs
fwait
mov
mov
leave
add
int
fists
mov
pop
xchg
js
xor
in
sub
and
add
out
shlb
sbb
or
push
sbb
or
inc
daa
push
adc
jmp
mov
test
hlt
je
and
xchg
sbb
jp
or
mov
daa
jge
fdivrp
mov
ffree
fldl
int
dec
cmp
mov
xchg
das
ljmp
sbb
repnz
dec
cltd
jmp
shll
loop
mov
or
add
xchg
movsl
dec
mov
ret
mov
and
add
icebp
das
push
test
sti
mov
xchg
adc
sbb
mov
test
pop
jae
mov
add
mov
shlb
ret
lods
out
jl
jne
imul
or
sub
push
mov
mov
adc
repz
fimull
mov
jge
test
mov
mov
cmp
dec
add
fimull
xchg
addr16
mov
call
mov
scas
or
dec
sub
test
pop
shl
and
lods
push
and
nop
xor
add
mulb
inc
add
fs
pop
leave
stc
nopl
aas
scas
in
inc
sub
loop
cs
sbb
mov
mov
adc
sub
mov
inc
dec
lret
popf
inc
or
pusha
xchg
push
xlat
es
jp
mov
xchg
xor
pop
jecxz
ss
sbb
sbb
xchg
mov
jae
ret
or
xchg
fiaddl
inc
sbb
mov
xchg
fwait
jbe
cli
pop
mov
dec
pop
pop
or
inc
cmpsl
lds
stos
pop
js
jge
mov
dec
push
mov
cmp
xlat
aaa
js
xor
or
xchg
add
cltd
sub
xchg
mov
xor
push
xchg
nop
pop
add
push
jle
dec
cmp
scas
rcr
mov
xlat
dec
data16
dec
add
inc
cmp
sbb
negb
popa
add
aas
jbe
cmp
int
add
mov
push
daa
xor
xor
dec
xchg
cmpsb
test
aad
inc
or
mov
xchg
lods
lahf
sbb
inc
pop
sbb
or
sbb
repnz
insb
js
mov
int
icebp
cmpsl
mov
mov
lock
int3
fistps
aas
mov
ret
arpl
adc
adc
das
push
inc
fstl
pop
add
sub
pop
in
add
bound
pushf
xchg
add
fmul
lods
mov
fistps
in
je
negb
ja
push
stos
mov
in
lods
and
iret
shll
xchg
sub
mov
es
ja
inc
lcall
add
lret
stos
pop
cltd
sarb
in
rorb
jo
mov
int
es
fnstsw
add
push
dec
add
mov
int3
shll
xchg
sar
imul
pop
or
out
aam
mov
aam
scas
hlt
dec
and
xchg
cmc
mov
aaa
sbb
imul
dec
xchg
adc
mov
cmp
das
scas
push
push
loopne
in
sbb
sbb
je
jecxz
mov
sub
imul
or
xor
lods
xlat
lret
jecxz
lret
xchg
cmp
mov
js
or
fcmove
dec
adc
xor
push
sbb
cmp
xchg
jns,pt
fldenv
ret
dec
pop
aas
mov
nop
jne
leave
mov
int3
jnp
xor
lea
ret
in
lcall
dec
dec
or
or
movsl
fmuls
outsb
push
and
jl
stos
and
sbb
adc
call
ljmp
test
add
lret
movsl
cmp
repz
lods
push
data16
jp
flds
adcl
xchg
jnp
stc
repz
fdivrs
mov
pop
or
imul
jl
loope
inc
out
dec
lds
repz
lock
pop
ljmp
and
cmp
mov
ret
stos
lcall
and
xchg
sub
inc
or
int3
dec
push
push
lret
mov
lret
xchg
mov
and
insl
mov
sbb
test
cmp
pop
sbb
fisttpl
das
outsb
sbb
xchg
push
lods
jbe
aam
mov
push
dec
hlt
loop,pt
stos
cmp
lock
inc
push
sbb
adc
dec
dec
mov
icebp
lret
loope
scas
mov
jmp
test
dec
test
dec
lods
mov
ljmp
in
shl
add
dec
push
repz
loop
pop
addr16
push
mov
mov
fldcw
mov
dec
mov
pop
es
cmp
mov
in
or
inc
popa
fidivrl
or
mov
or
xor
inc
iret
fsts
aad
inc
xorb
in
cltd
cmp
and
int3
inc
mov
in
lds
jl
jecxz
movsb
insl
mov
sub
addr16
fbld
js
popf
mov
imul
int3
jo
or
mov
pop
dec
ret
and
cmpxchg
in
jae
adc
sub
dec
cs
mov
and
mov
xchg
scas
cli
xor
push
sub
rolb
loopne
in
jecxz
pop
push
xchg
dec
jp
sbb
daa
lds
stos
enter
int3
and
test
adc
add
lods
es
call
in
daa
testb
cmp
stos
pop
mov
aas
sbb
sbb
xor
jbe
popf
cwtl
mov
cs
in
mov
pusha
xchg
fldl
test
addr16
sub
sub
repz
icebp
cmp
adc
adc
adc
mov
loopne
jecxz
mov
dec
enter
inc
cltd
xor
push
pusha
sub
enter
cmp
pop
add
push
cmp
pop
pop
sub
stos
outsl
adc
push
out
into
sub
adc
out
out
sbb
data16
shrb
fstp
pop
adc
lock
clc
push
bound
dec
and
enter
out
shlb
out
cli
sub
lcall
xorb
div
hlt
add
rcrl
insl
imul
daa
inc
inc
and
loope
or
jb
jo
adc
cmpsl
xlat
imul
rcrl
or
rcr
leave
jnp
hlt
mov
pop
imul
xchg
dec
xorl
cwtl
sbb
sbb
sbb
cmpsb
gs
idivb
xor
pop
mov
or
movsl
push
jno
movsb
jnp
in
scas
cmp
fnstsw
cltd
enter
pop
frstor
sbb
lea
xor
xor
iret
out
pop
std
call
cmp
and
repnz
ret
out
sbbl
lods
jnp
icebp
lea
outsb
popa
out
adc
pop
push
dec
movsl
sti
dec
in
fstpl
loope
mov
fdivrl
lock
js
mov
add
mov
cmc
xchg
out
or
pop
mov
data16
pop
mov
mov
jp
jg
inc
inc
pop
hlt
rorb
sbb
mov
jbe
mov
add
lret
mov
xor
mov
les
ret
fmull
sub
out
xlat
ret
in
cmp
fisttpl
jbe
out
jb
and
adc
push
mov
or
jnp
add
pop
fdiv
dec
loopne
push
push
scas
lret
mov
cmpsb
icebp
js
lods
jecxz
lods
fwait
data16
xchg
stos
push
pop
push
mov
loope
adc
xchg
insb
inc
mov
push
sarb
test
push
mov
add
mov
push
fbstp
mov
test
leave
pop
xchg
mov
mov
mov
dec
daa
mov
imul
sahf
imul
out
test
push
adc
loope
mov
push
pop
add
adc
ss
fs
nop
add
push
pop
mov
add
push
test
mov
xchg
ret
movsb
jg
xor
or
scas
jno
sub
lcall
mov
mov
mov
mov
ret
or
clc
add
xlat
xor
mov
adc
fdivl
cwtl
int
push
mov
xor
mov
sbb
adc
adc
fwait
scas
add
das
hlt
and
nop
arpl
mov
div
les
adc
jnp
inc
mov
cld
mov
adc
mov
xchg
jle
into
pushf
xor
imul
mov
inc
dec
inc
and
fnsave
dec
sbb
inc
je
out
add
daa
rorb
inc
cmpsl
cmp
insl
in
jecxz
xor
xchg
outsl
jne
jns
pop
xor
test
mov
aam
add
popf
push
or
lds
sbb
fcmovnu
fidivrl
lds
and
jns
push
aaa
mov
loope
or
js
loopne
jnp
add
rcll
adc
ss
into
xor
lret
pop
movsb
test
mov
mov
shrl
adc
cmpsl
nop
addr16
ljmp
ljmp
dec
ja
pop
enter
adc
adc
mov
cld
pop
aad
subl
add
ret
ljmp
insb
mov
arpl
jb
clc
fisttpl
imul
movsl
dec
outsb
xor
ret
push
shl
cmc
xchg
out
pop
adc
scas
das
enter
push
loope
pop
mov
insl
fcmovu
mov
fcmovne
stos
data16
xchg
mov
cmp
push
sbb
xchg
jp
cmp
xchg
pop
cmp
scas
sbb
test
das
out
hlt
js
push
leave
test
mov
pop
cmp
call
xchg
add
mov
xchg
mov
xor
ficomps
inc
gs
je
sbb
xchg
sub
mov
xchg
pop
add
mov
pop
out
outsb
ja
imul
jns
test
xchg
mov
stos
lret
dec
pop
xor
into
jne
mov
popa
adc
cmc
pop
into
lea
testl
xchg
aad
add
arpl
adc
pop
movsl
push
jae
xor
cs
push
push
mov
test
dec
rorb
fs
sub
sbb
push
xor
es
push
push
fldl
dec
add
or
inc
add
mov
jmp
cmpsl
cli
leave
pop
test
add
lock
inc
out
cmpsl
jne
and
sbb
iret
gs
adc
shrl
adc
mov
add
lock
movsb
out
mov
xchg
int3
xor
push
pusha
test
jle
and
push
mov
movsb
cltd
push
jb
adc
movsb
out
ja
inc
fwait
int3
cmpsl
sahf
mov
pop
mov
inc
mov
push
mov
sub
stos
sub
adc
rcrb
popf
jg
clc
sti
xchg
and
xchg
es
fdivs
ss
es
pop
mov
and
cmp
insl
lahf
mov
push
ss
iret
imul
dec
xlat
lahf
int
outsl
mov
stc
xchg
shrb
mov
add
or
clc
test
xchg
loope
mov
add
jp
xchg
faddl
rcrb
cmpsb
stos
add
stc
pop
xchg
in
adc
adc
out
and
xor
pop
cmc
ficompl
lds
or
mov
pusha
int
or
or
mov
test
xor
mov
push
pushf
adc
fs
xchg
lahf
sub
loope
std
mov
inc
push
mov
xchg
loope
add
and
loope
push
pop
dec
pop
and
sub
push
repz
int
dec
inc
insl
fptan
or
dec
test
lret
xchg
xor
aam
dec
popf
shll
pop
or
xchg
clc
pop
cld
add
stc
pop
sahf
mov
xchg
jp
adc
fisubrs
xlat
pop
jns
pop
adcl
mov
pop
add
mov
je
cmpsb
fwait
ljmp
rolb
dec
sbb
sbb
fwait
into
xor
ret
cmp
in
push
pop
jns
push
mov
mov
dec
or
es
aas
fmulp
loopne
push
es
xorb
dec
push
sub
out
mov
mov
and
bswap
imul
out
test
jb
inc
or
scas
out
mov
inc
xor
mov
mov
and
rcpps
out
xchg
mov
lret
mov
ds
out
pusha
sbb
push
pushf
cmpsb
das
push
stc
repz
hlt
addb
mov
dec
out
or
sbb
xor
div
sbb
pop
sbb
add
jns
mov
or
cmp
rcr
repz
aaa
xchg
push
mov
adc
mov
mov
and
dec
jno
jmp
or
out
pop
xor
xor
dec
insb
sbb
fnsave
roll
push
cmc
sub
push
jbe
adc
dec
inc
push
pop
xor
mov
push
fldcw
or
mov
push
and
shll
xor
add
aad
iret
in
mov
cmp
or
or
pop
mov
jge
jl
mov
in
sbb
outsl
frstor
sub
jns
or
stc
sbb
in
and
outsb
loopne
xchg
repnz
lret
sub
xchg
lock
movsl
jle
xchg
add
jmp
xchg
sbb
cmp
dec
pop
mov
movsl
mov
mov
into
dec
xchg
fidivrl
inc
sub
cmpsb
cs
adc
icebp
clc
mov
xchg
push
stc
jmp
idivb
repnz
lret
cld
mov
inc
sbb
jmp
push
mov
mov
adc
dec
sbb
or
iret
sub
pushf
sub
movsl
fyl2x
pop
add
xchg
sub
add
frstor
jg
cmp
loope
repnz
aas
sub
stos
mov
int
sar
in
pop
fnstsw
adc
mov
pop
pop
and
mov
mov
loopne
sub
mov
fistpl
outsb
mov
xorl
stos
dec
out
jp
mov
lcall
pop
mov
mov
or
ja
fdivr
inc
loop
frstor
cmp
ret
pop
mov
mov
or
iret
ss
jo
add
push
push
ljmp
pop
dec
rcl
in
call
pop
jnp
jl
or
rcrl
movsl
out
mov
es
adc
lods
xchg
inc
sbb
stos
jmp
cmp
pop
inc
pushf
test
outsb
jae
push
xchg
sbb
cld
cltd
cmp
and
rep
sti
mov
push
out
push
xchg
sti
aas
mov
xor
pop
mov
sub
repnz
aad
iret
repnz
ffree
or
outsl
stos
arpl
fwait
and
cs
loope
or
inc
ds
adc
pop
mov
or
cld
es
and
je
fstpl
xchg
test
inc
xor
and
popf
mov
into
je
mov
adc
jmp
xchg
pop
add
and
test
inc
inc
movsb
aas
lret
mov
cmp
dec
out
jg
ljmp
sbb
add
cmp
mov
cli
cld
jo
pop
sub
lds
xchg
int
cmp
aad
mov
popa
inc
ss
aad
xor
dec
or
pusha
outsl
call
xchg
out
fsts
xchg
sbb
mov
pushf
aas
mov
jbe
cltd
out
insl
movsl
out
mov
xlat
aam
andb
jmp
test
push
xorb
xchg
imul
cmp
push
cmp
loope
pop
add
push
mov
leave
aaa
shrl
jo
and
cs
stos
push
fcmovbe
sbb
out
dec
sub
pop
pop
or
jno
and
jmp
and
dec
imul
lods
insl
add
cmpsl
xor
xchg
and
es
mov
sub
xor
lods
sub
leave
nop
test
cmp
mov
xorb
dec
xchg
jno
xorb
cmp
mov
push
cmp
jg
out
mov
mov
pop
push
push
mov
cmp
inc
jecxz
std
std
add
jno
out
test
mov
dec
mov
mov
or
aad
dec
dec
cwtl
mov
or
sbb
adc
lods
sbb
pop
fs
adc
outsl
mov
test
or
dec
mov
xor
inc
cmpsl
xchg
icebp
xchg
repz
mov
loopne
or
dec
insl
pusha
ficoms
out
mov
lret
pop
pop
push
pushl
pop
pop
std
ja
sub
je
stos
or
cltd
and
or
xchg
adc
bound
loop
cmpl
xor
add
pop
sub
mov
dec
sub
pop
jbe
lcall
test
sub
pop
mov
mov
mov
jns
int3
xor
jns
adc
cld
aaa
lock
int
push
jns
addl
mov
lahf
push
mov
mov
sbb
push
mov
rorb
icebp
ljmp
outsl
and
push
jne
mov
mov
in
sbb
bound
or
scas
ja
cmp
addl
pop
testb
fistpll
scas
sbb
pop
mov
jne
imul
jle
cmpsb
xorb
sahf
sarl
sarl
push
shlb
pop
insl
out
shlb
aam
xor
sbb
push
pop
dec
stos
dec
outsb
fists
in
rcl
int
xor
cmpsl
repnz
mov
dec
push
andl
scas
jecxz
inc
int
dec
jg
sbbb
dec
mov
xchg
push
nop
jmp
mov
test
adc
mov
xchg
nop
jmp
add
xor
push
cmc
push
stos
mov
mov
sbb
jbe
in
dec
testb
sbb
lea
add
lods
movsb
pushf
sub
xlat
xorl
cmpsl
or
jecxz
mov
adc
add
cld
and
test
test
inc
jg
cli
stc
sub
mov
dec
or
mov
xor
mov
cmp
cmpb
push
xchg
dec
test
ficoms
cwtl
stos
pop
adc
pop
and
dec
fbld
sbb
xor
aam
int
cmp
dec
inc
test
je
ja
add
lret
in
fwait
loop
mov
cmpsl
adc
xlat
xchg
inc
mov
ljmp
dec
xchg
int
mov
in
xor
negl
xchg
es
xchg
lea
adc
jmp
push
xchg
jb
pop
xor
or
or
int3
fcmovnb
or
mov
loope
xchg
jl
loopne
add
xor
adc
sarb
sahf
inc
test
pop
leave
loope
call
jmp
stc
and
jg
xor
test
pop
leave
lds
lret
mov
arpl
les
cmp
mov
call
add
test
jg
imul
xchg
idivl
xchg
mov
sub
jae
ret
push
jl
push
movsl
pop
jne
repnz
mov
dec
adc
std
xor
mov
test
pop
add
mov
iret
dec
out
es
aad
sbb
push
aad
push
stc
and
push
test
test
inc
push
mov
stos
out
in
repz
add
sub
outsl
jno
ficoms
sbb
xor
lret
fs
pop
xchg
fwait
add
stc
pop
fcmovnu
fstps
addl
jg
xor
in
je
arpl
shll
inc
cmpsl
inc
into
add
rcrl
lds
fildl
outsb
lret
ficoml
imul
mov
loop
pop
cmpsb
add
mov
outsl
cs
jg
into
mov
xlat
push
push
pop
jle
loopne
sub
popa
outsl
testb
int
dec
and
std
lret
dec
or
mov
push
push
bndldx
dec
subb
loope
add
sbb
imull
loopne
js
mov
and
jmp
ret
sbb
fstpl
add
sub
jbe
sub
inc
out
adc
in
lods
test
pop
cmp
or
sbb
popl
fldenv
out
cmp
pop
es
test
dec
test
cltd
sub
jnp
push
push
test
xchg
mov
xor
je
inc
lret
push
addr16
call
scas
inc
pop
xor
popa
repnz
mov
push
xlat
jne
aad
js
imul
add
jne
lds
pop
imul
outsl
jp
clc
cmp
xor
inc
xchg
push
or
dec
insl
push
mov
and
mov
sbb
cld
push
jl
clc
xchg
int3
cmp
push
jecxz
mov
sti
repz
stc
adcl
lret
lods
out
scas
inc
sub
push
mov
ss
add
pop
or
das
cmpb
in
lea
xor
cwtl
icebp
jb
jae
lret
das
xlat
and
mov
inc
mov
insb
or
or
jbe
cmp
xor
xchg
mov
mov
jg
movsb
mov
in
out
pop
sti
ret
lds
cmp
cmc
mov
arpl
roll
nop
mov
data16
pop
lds
mov
movsl
push
adc
dec
push
bound
out
mov
xchg
sbb
add
push
aaa
pusha
dec
loope
push
aam
push
mov
inc
mov
pop
pop
fcoml
cmp
popa
xchg
mov
and
adc
ja
dec
jp
out
pop
test
pop
fstps
inc
pusha
mov
test
loop
fsubs
sub
and
push
jno
push
pop
mov
xlat
out
cwtl
xor
cli
dec
fadds
cld
insb
aam
push
cli
cmp
inc
stc
push
add
inc
lds
je
mov
out
cmpsl
push
dec
inc
shlb
mov
push
outsb
fisubrs
fdivl
imul
or
xchg
mov
fs
xchg
adc
mov
js
inc
dec
push
jp
cmp
shrb
fwait
push
ret
and
mov
sub
mov
or
es
push
filds
repz
rcll
push
scas
cld
lahf
lcall
pop
adc
data16
stc
cmc
shlb
adc
xchg
push
adc
mov
je
sbb
sbb
js
mov
cmp
jae
sbb
arpl
or
dec
clc
icebp
cmpsb
js
push
pop
cmp
stc
inc
mov
pop
xchg
movsl
mov
push
por
aam
mov
inc
adc
mov
addr16
jnp
jae
cmp
mov
dec
xor
jmp
add
and
stc
enter
in
faddl
fisubs
inc
mov
stc
mov
lret
sub
add
push
out
cmc
adc
das
xor
aaa
cmc
shll
xlat
xchg
mov
fidivrs
je
mov
push
adc
pop
xchg
mov
in
dec
push
add
mov
bnd
inc
mov
xor
fdivrs
in
cmp
push
enter
loope
add
inc
stos
fdivrs
adc
sbb
cmp
adcb
sti
sbb
adc
jnp
or
jg
and
pop
cwtl
rsm
jmp
xchg
mul
jno
xchg
adc
js
inc
inc
push
movsl
lds
inc
and
sbb
shr
jnp
clc
xor
xchg
bound
dec
jne
jle
jmp
call
jb
arpl
jbe
sbbb
adc
sub
cmpsb
xorb
sbb
add
out
mov
into
mov
outsl
clc
sahf
into
push
cmp
popf
lods
push
outsb
dec
xchg
arpl
xchg
pop
call
mov
out
xchg
dec
xchg
cltd
cmpsl
idivb
mov
add
and
jge
adc
rcrl
lcall
faddl
insb
pusha
ja
dec
pop
mov
or
lret
addr16
ss
add
pop
mov
shr
in
push
inc
enter
add
movsb
pop
shlb
inc
add
inc
sar
fildll
insb
pop
cmp
dec
push
cmpsb
mov
dec
jle
ljmp
sub
mov
jbe
pop
scas
inc
mov
xor
stos
inc
adc
sub
incl
and
loope
hlt
sub
fdivr
dec
cwtl
gs
out
push
adc
sub
lret
cltd
xchg
sbb
cmpsb
mov
xchg
inc
jl
cltd
leave
outsb
pop
movsb
add
mov
push
push
std
idivb
imull
cmp
decb
push
xchg
sub
pop
push
clc
scas
test
and
sbb
aam
jns
cwtl
push
mov
and
mov
jae
cmp
sub
sbb
out
test
clc
lods
jle
sbb
es
push
fmuls
push
xchg
aad
nop
sub
loopne
sbb
ret
lea
pop
or
mov
test
outsb
mov
mov
mov
shlb
lea
popf
or
mov
pushl
les
stos
js
mov
lret
adc
mov
xchg
mov
dec
scas
jns
scas
push
rcr
dec
add
sbbl
jo
nop
fisubrs
mov
inc
nop
dec
jp
sbb
dec
sahf
adc
jbe
adc
test
xor
xchg
push
sub
movsl
sub
mov
dec
mov
popf
or
sti
push
es
add
or
pushf
aam
add
dec
cmc
push
add
loopne
iret
test
cld
push
test
sbb
into
add
hlt
and
and
jge
and
add
push
das
push
cli
xchg
jecxz
xchg
into
fsubs
sub
push
outsb
bound
sub
mov
ja
cli
fidivrs
sbb
adc
imull
cmpsw
pushf
xchg
pop
xor
clc
popa
aaa
sub
xor
xor
incl
call
pop
fdivs
sub
add
jmp
mov
flds
jl
ret
scas
mov
pop
fs
pop
sbb
in
pop
or
or
in
jmp
dec
sbb
imul
pop
jl
adcl
cmp
arpl
movntps
jmp
bound
or
pop
sbb
lea
scas
js
aad
lret
or
pop
imul
les
sbb
pop
mov
shlb
xchg
pop
aaa
mov
add
ret
mov
mov
mov
xchg
sbb
mov
mov
je
repnz
aas
sahf
repz
sub
andl
xor
out
sub
stc
cmc
adc
frstor
push
shlb
fcomi
out
jo
xchg
xchg
out
out
sarl
movq
punpckhdq
cmp
cmp
adc
mov
ret
mov
insb
sub
dec
loope
or
stos
sahf
popl
xchg
ret
testb
xchg
shlb
jmp
mov
mov
imul
xor
xor
cmpsb
mov
call
mov
mov
negb
lahf
mov
jmp
jae
and
inc
add
es
jnp
sub
jl
es
xor
inc
xor
mov
jl
jg
cmpsb
stos
push
xor
inc
cmp
cmp
add
mov
fistpl
xor
jmp
ja
inc
int
push
pop
and
xlat
or
lds
in
add
push
pop
xor
les
out
imul
lcall
xchg
call
inc
dec
and
push
sbb
xlat
adc
ljmp
sbb
inc
add
dec
dec
mov
mov
mov
jne
inc
dec
insl
cmp
and
lods
mov
adcl
and
into
sar
test
dec
cmp
push
sbb
ret
push
mov
fwait
fwait
jne
jae
out
scas
lret
mov
ja
fdivp
hlt
out
adc
loop
fs
xor
cmp
or
lcall
ss
sub
or
mov
mov
pop
mov
or
sub
push
xchg
sub
mulb
stos
out
pop
mov
pop
xchg
arpl
shlb
cmc
xlat
ret
es
mov
ret
aaa
cld
in
mov
xchg
mov
adc
and
cmp
mov
mov
pusha
or
push
lcall
dec
dec
mov
mov
xor
andl
push
loope
les
push
dec
fcomps
and
in
mov
pop
mov
or
outsl
add
out
inc
xchg
lret
dec
cmp
fwait
repnz
cmpsb
pusha
push
sub
jne
mov
jmp
ja
ds
mov
add
pop
jmp
add
mov
pop
adc
cmpsb
into
dec
popa
mov
mov
jge
loopne
cmp
js
ds
and
jne
jno
outsb
add
fsubp
pop
mov
and
arpl
and
inc
in
sbb
xor
or
mov
int
or
mov
dec
add
dec
out
int3
pop
xor
cltd
scas
mov
pop
cmpsl
daa
insb
pop
mov
andb
pop
xchg
jne
add
inc
test
fists
nop
and
sub
cld
fwait
jg
or
push
or
test
imul
xchg
add
pop
cli
and
jg
daa
mov
popa
es
mov
mov
in
jl
je
lods
or
jecxz
mov
pop
insl
sbb
jns
xlat
rorl
js
dec
out
xchg
inc
subb
sti
xor
add
jmp
inc
adc
mov
xchg
das
mov
mov
in
jle
loope
push
pop
decb
xor
ret
mov
xchg
test
push
shl
arpl
mov
rorl
cmp
rep
popa
dec
shlb
pop
add
aam
lahf
ret
rol
leave
data16
iret
and
test
mov
dec
xor
push
fcmovnu
mov
dec
outsl
sbb
in
cmpsb
sbb
rcr
and
sti
xlat
cmp
cmp
dec
jmp
shll
mov
sbb
jl
sbb
aam
out
outsb
sbb
aas
js
push
ljmp
mov
sub
or
push
ljmp
stos
adc
stc
mov
adc
pop
aad
inc
into
xchg
cmpsb
xor
dec
in
jbe
lret
and
fisttps
lods
mov
jg
fadd
sub
lea
dec
into
jmp
dec
pop
incl
dec
idiv
push
sbb
inc
push
pop
push
lods
fwait
repnz
xor
or
aaa
push
cmp
cmpsb
js
enter
xchg
mov
push
ljmp
adc
mov
add
cld
mov
lds
pusha
ds
bound
jns
ds
test
pop
stos
loope
lret
hlt
add
xchg
mov
sbb
dec
add
test
and
mov
rolb
sbb
cmpsl
push
bound
rep
xor
xorl
sub
push
jle
dec
and
stc
push
cmc
je
test
push
or
xlat
fldenv
pop
scas
scas
dec
cmp
sub
sahf
out
dec
ja
test
jbe
in
jnp
inc
push
inc
lahf
mov
or
out
xlat
xor
jmp
mov
outsb
jno
pop
pop
sub
add
fdivr
fsubr
push
in
inc
fcmovb
mov
mov
dec
jns
cmp
add
cs
clc
repnz
aaa
in
sbb
push
pop
and
fimull
aad
pop
int
mov
pop
pop
mov
add
pop
dec
xor
das
inc
lret
shlb
push
jmp
rcl
data16
mov
xchg
push
pop
call
leave
gs
mov
xchg
sbbl
or
popf
ja
mov
add
sub
jnp
mov
jp
aam
xor
mov
shr
jge
pop
lock
and
pop
into
or
mov
jbe
leave
xor
mov
ret
into
loope
in
int
repz
mov
data16
cmp
sbb
leave
aaa
mov
stc
insb
cmp
pop
xchg
mov
repnz
stos
mov
and
je
rorb
lcall
aas
dec
or
mov
or
sbb
jb
mov
mov
or
sarl
and
xor
cmp
dec
loop
push
aaa
add
pop
lds
push
in
in
mov
jmp
and
inc
dec
mov
push
lea
mov
testb
adcl
in
mov
scas
imul
movsb
add
bt
pop
cmp
cltd
and
fcoms
and
ss
sbb
popa
xchg
cmp
sti
xrelease
push
fiaddl
jge
sbb
lods
cvtdq2ps
mov
sahf
dec
pop
sbb
push
add
push
sub
addr16
or
mov
sarb
stos
lods
pushf
cmpsb
xor
das
cs
jmp
push
mov
adc
jg
push
pop
imul
outsb
mov
adc
ret
or
inc
mov
fwait
addr16
mov
or
stos
lret
push
in
pop
mov
daa
in
fnstcw
jb
xor
mov
in
inc
fiaddl
pop
cld
out
sbb
pusha
and
adc
fldenv
jmp
jg
and
cwtl
xor
dec
scas
jle
inc
fcomp
in
int3
fiaddl
out
and
and
or
lcall
pop
mov
sub
bound
das
mov
imul
nop
insb
in
mov
xchg
pop
icebp
adc
xor
cmc
adc
pop
adc
pushl
sub
jo
or
and
aas
mov
sub
subb
outsb
cmp
mov
pop
xchg
or
adc
out
jb
xchg
jno
mov
lods
pop
push
sub
scas
bound
dec
cwtl
dec
clc
dec
dec
call
jg
or
push
xor
and
cli
and
sub
push
mov
scas
cmpsb
adc
or
filds
pop
test
or
add
test
push
mov
das
lahf
or
sub
adc
out
or
stc
push
or
ret
push
mov
dec
stc
in
fnstenv
dec
xlat
ret
ret
out
sbb
sub
jl
inc
stc
xchg
push
divb
xor
lcall
orb
sub
shl
out
push
popl
xchg
test
push
xchg
bswap
mov
cmp
test
outsb
fistl
ljmp
jecxz
push
out
mov
cmp
inc
lahf
popa
fidivl
or
dec
out
test
repz
testb
jmp
fdivs
pop
shll
mov
or
sbb
ljmp
and
inc
push
mov
out
data16
mov
jns
adc
int3
daa
push
push
pop
sti
mov
mov
cmp
mov
shr
jg
mov
or
sbb
lret
mov
mov
je
xor
xor
out
jle
repz
icebp
pop
jmp
int3
cli
inc
and
mov
jb
add
inc
popa
ja
lock
mov
movsb
inc
inc
out
xchg
xor
xchg
xor
jne
sub
sahf
daa
cmpsl
fistps
xchg
jecxz
add
enter
jb
cmp
xlat
fiaddl
clc
or
clc
adc
mov
mov
dec
or
shl
in
test
inc
fisttpl
leave
cltd
inc
loop
or
cmp
mov
inc
insb
lret
mov
fcoml
cmpsl
cmp
and
pushf
out
xchg
add
push
inc
loope,pn
mov
sub
cmc
or
rcrl
xchg
mov
push
and
fisubrl
ds
arpl
push
xor
mov
ljmp
andl
dec
popf
cltd
push
or
adc
iret
mov
xlat
inc
test
ds
push
fdivs
add
movsl
xor
popf
jmp
dec
mov
jp
xor
mov
es
and
pushf
outsl
and
test
in
loop
stos
jne
xchg
lea
les
jge
jno
mov
inc
and
mov
pop
lret
sub
ffreep
movsb
push
lods
mov
xchg
xchg
jne
jecxz
adc
xchg
pop
mov
lock
out
arpl
insb
cmc
and
std
jmp
leave
call
inc
push
sub
out
lret
sub
es
mov
xor
lret
repnz
outsb
push
dec
dec
cmpsl
scas
jae
cmp
dec
xchg
cld
or
decb
adc
aas
icebp
lcall
inc
mov
sub
insl
mov
push
sbb
popf
jns
popa
pushl
mov
jno
xchg
dec
lock
enter
jne
adc
daa
repz
sub
cltd
loope
cli
pop
sub
cmpsl
lods
jg
loope
adc
mov
scas
xor
lock
inc
dec
es
mov
mov
mov
insl
dec
aad
add
cld
inc
icebp
lret
sub
std
movsb
or
mov
mov
mov
imul
jmp
and
xorl
in
movsb
cmp
dec
loope
imul
sub
add
mov
scas
inc
add
sub
push
mov
jl
aaa
mov
outsb
jl
jbe
inc
xor
in
or
xlat
jo
adc
adc
mov
push
xchg
stos
aas
mov
mov
sub
push
dec
jg
js
mov
jecxz
fwait
xor
lret
sbb
and
xor
pop
movsl
mov
mov
in
ret
mull
stc
xchg
pop
xor
pop
pop
js
or
scas
clc
lret
pop
xor
or
insb
mov
push
lret
stc
adc
or
stos
lret
loope
pop
mov
fisubs
je
dec
rcrb
cli
popa
test
mov
ret
mov
sbb
mov
push
push
add
gs
xor
mov
imul
loopnew
cmp
mov
movsl
out
mov
inc
mov
xchg
subl
ljmp
mov
xchg
das
or
and
loope
sub
push
dec
in
fidivs
jo
pop
pop
add
inc
or
sbb
sub
adc
rcr
mov
push
pop
nop
outsb
rcrb
inc
outsl
jb
mov
and
adc
xchg
pushf
clc
rorl
out
mov
adc
mov
inc
stos
push
dec
push
in
ja
bound
dec
scas
adc
and
push
cmp
inc
enter
test
mov
and
adc
imull
scas
incl
jnp
cmp
repz
leave
loop
jns
mov
cwtl
clc
das
int
cmpsb
aaa
iret
shl
sbb
inc
or
sub
loopne
dec
mov
push
push
mov
loop
out
push
sub
inc
mov
out
push
push
push
decb
push
xchg
aam
es
and
stos
jmp
cld
loopne
decl
pop
aaa
insl
cmp
stc
jno
or
fs
push
orl
push
adc
lret
push
adc
pusha
int3
jmp
popa
jnp
icebp
testl
in
stos
into
sbb
in
test
lret
shr
xor
cmc
dec
shl
jnp
cmpsb
inc
pop
idivb
in
cmp
mov
xchg
dec
sbb
jg
dec
jg
movsb
push
dec
sub
mov
je
jecxz
pop
fdivrs
in
push
sub
jne
cltd
and
out
arpl
push
mov
mov
into
add
pop
es
xchg
lods
mov
inc
mov
jge
push
jle
nop
fldenv
or
mov
js
and
mov
and
aaa
loopne
in
sbb
cmp
sbb
lahf
mov
push
es
cli
mov
cs
dec
imul
xchg
sbb
lea
cmc
push
xor
int3
sbb
or
and
push
xchg
xor
add
fwait
pop
pusha
cmp
imul
jp
bound
mov
clc
xchg
std
push
fistl
pusha
and
dec
jo
xchg
add
dec
sub
shl
fsubl
push
idivb
adc
ja
std
pop
dec
pushf
loope
add
stos
mov
push
jl
scas
cmpb
adc
addl
and
jno
mov
adc
cli
pop
add
pushf
push
sub
sbb
lret
ret
repz
loope,pn
aad
sbb
ret
mov
dec
jecxz
mov
out
mov
pop
inc
jo
hlt
mov
pop
in
push
pop
adc
testb
or
imul
mov
add
jae
data16
or
lods
dec
fists
sub
je
ja
arpl
cmp
mov
mov
adc
pop
out
and
jl
jp
push
jecxz
out
mov
movsb
jle
mov
stos
leave
cmpsl
inc
cltd
inc
lret
aaa
lds
pop
daa
cmc
test
rcrb
scas
sbb
ss
fstpt
xchg
arpl
loop
and
push
scas
dec
cmp
sbb
xor
out
repnz
inc
inc
sub
push
xor
mov
and
int3
push
jae
pop
xor
leave
inc
inc
je
pusha
and
xchg
fiadds
adcl
push
jbe
dec
inc
and
dec
fists
fwait
imul
pop
dec
verr
es
add
jl
inc
mov
popa
push
aad
cmpb
lds
add
dec
shrb
xor
cmp
push
mov
mov
gs
sub
lods
jbe
mov
loop
xor
pop
inc
add
xchg
fs
call
inc
mov
mov
cmp
xchg
les
and
repz
push
mov
add
or
fisttpll
push
mov
or
stc
out
add
cmp
gs
fbstp
mov
xor
lea
pop
mov
adcb
adc
dec
dec
xchg
dec
sbb
xor
xchg
in
in
and
popw
out
inc
stc
into
fnstenv
in
ss
and
insb
push
lret
std
mov
sub
and
out
push
jb
enter
mov
add
pop
rolb
out
xlat
cmpsb
out
popa
pop
in
sbb
cmpsl
popa
pushf
xlat
xchg
clc
sub
outsl
jbe
ja
dec
dec
shr
es
sub
lods
or
nop
adc
andl
and
jae
push
pop
or
addr16
cmpsb
push
sub
aam
xchg
mov
mov
jnp
cmpsb
call
sub
scas
bound
push
fs
inc
das
mov
int3
push
jns
mov
lea
data16
inc
es
push
mov
mov
hlt
pushf
adc
add
scas
inc
xor
cmpb
sbb
cld
sub
aas
jge
mov
in
sub
cmp
and
sbb
pop
cmpl
mov
xchg
shlb
mov
mov
xchg
jns
push
add
mov
sub
mov
add
push
in
shll
pop
cld
mov
mov
inc
bound
je
or
into
add
sub
add
movsl
sbb
or
xchg
cmc
cld
ja
sbb
arpl
fidivrl
adc
out
jecxz
push
test
nop
movsl
pop
cs
les
shlb
cmc
jno
les
jg
mov
cltd
insb
sbb
mov
out
adc
lahf
loopne
out
add
dec
clc
popf
or
cmpsl
mov
je
lret
adc
daa
xchg
lods
xor
pop
mov
add
and
xchg
pop
add
push
jb
xchg
inc
jmp
mov
pop
cltd
xchg
popf
pop
iret
push
xchg
int
pop
add
outsb
rcrb
pop
sbb
xlat
dec
in
fwait
bound
bound
add
pop
aas
scas
dec
aas
std
mov
sti
repnz
jb
aad
call
jno
mov
lods
inc
sarl
insl
sbb
cltd
in
jb
xlat
rol
je
enter
aam
mov
fs
adc
xchg
jno
je
js
cli
push
loop
sti
mov
dec
adcl
adc
sarl
int3
inc
jne
inc
int3
daa
stc
in
pushf
sub
xor
jle
xorl
test
push
xchg
push
into
jp
dec
jae
inc
sbb
pop
sub
iret
shlb
and
pop
cmp
mov
mov
push
leave
fwait
pop
lret
pop
pusha
imul
daa
out
cmp
pop
adc
popa
loop
test
pop
pop
outsb
test
mov
and
in
sub
mov
test
js
hlt
add
cltd
inc
dec
sbb
bound
in
ja
ds
dec
repnz
push
cmp
cwtl
add
xchg
push
std
add
stc
mov
imul
adc
jmp
pop
xchg
imul
adc
xlat
out
push
call
cmp
mov
mov
ja
mov
push
clc
jns
scas
iret
jnp
jp
imul
testl
xor
mov
into
daa
pop
cltd
push
repz
ds
loop
loop
pop
inc
fisubl
and
sbb
jbe
xchg
in
mov
mov
push
fcompl
add
data16
icebp
mov
stos
dec
loopne
inc
xor
fsub
popa
clc
fld1
mov
sub
mov
or
das
fstps
xlat
out
lods
push
mov
in
sahf
es
test
out
arpl
ror
adcl
jl
dec
inc
inc
aaa
call
je
repnz
lcall
adc
out
ja
xchg
jb
sbbl
sahf
jb
popa
xor
mov
cmp
sbb
push
cmovno
inc
mov
and
inc
in
sbb
push
mov
test
adc
mov
mov
or
lea
scas
mov
inc
dec
jl
pop
mov
cmpsb
dec
mov
adc
bound
cwtl
xor
sub
fmull
push
aam
sbb
fisubs
call
js
push
sub
sbb
fsubr
test
or
das
ret
jl
mov
aam
inc
inc
fcmovnbe
shrl
xor
mov
rclb
dec
inc
shll
or
wbinvd
mov
bound
push
xchg
dec
xchg
xor
fsubr
lds
int
cmpsl
lds
outsb
or
dec
or
loopne
add
das
sub
xor
imul
int3
mov
push
add
ja
inc
int3
cmpsl
pop
and
pop
adc
mov
repz
je
imul
iret
adc
int3
aaa
mov
aaa
and
sub
nop
loope
mov
testb
mov
jg
cltd
mov
dec
mov
repz
rcrl
and
pusha
outsl
xchg
mov
pop
cltd
push
jle
loope
pop
adc
xor
lahf
subb
xchg
pop
es
jmp
dec
mov
test
aas
xchg
bound
add
andb
int3
imull
jne
xchg
jno
inc
mov
mov
aad
mov
insb
sbb
into
orb
push
cmpb
js
adc
fwait
sub
pop
pop
dec
inc
push
or
js
hlt
icebp
sub
scas
adc
sbb
movntq
outsb
inc
adc
mov
push
out
dec
pshufw
pop
jecxz
pop
ficoms
cwtl
adc
cmpsb
adc
movsb
inc
xor
sets
pop
nop
mov
sub
dec
out
test
gs
clc
inc
aad
lret
cmpsb
mov
rorl
loope
pop
xchg
aaa
cmp
push
jp
lahf
or
xchg
scas
jnp
jbe
dec
data16
out
dec
mov
jle
jo
enter
aam
ljmp
nop
sti
sbb
insb
mov
push
aad
mov
push
sbb
sub
stos
sbb
sub
jge
aam
sbb
outsb
push
and
jns
push
push
repnz
sub
pop
push
pop
and
cwtl
push
test
push
fdivrp
and
mov
xchg
lods
ds
mov
dec
add
leave
flds
rcll
mov
jo
xorl
xor
into
mov
nop
or
or
lret
xlat
aad
scas
sbb
rcl
adc
nop
dec
or
mov
xor
outsb
dec
rep
cmp
mul
je
mov
int3
dec
lods
std
test
jecxz
xchg
jp
xchg
in
and
cmp
enter
jp
pop
cmpsb
addr16
dec
xor
les
sbb
into
push
xor
popa
dec
push
mov
test
add
into
xor
inc
cld
dec
pop
insl
leave
pop
testl
push
adc
fsts
adcl
pop
mov
cmp
sbb
mov
cwtl
sahf
mov
pop
jle
sub
xlat
push
fistl
cli
mov
fs
fwait
icebp
jnp
call
ds
and
sbb
mov
dec
std
cmp
xchg
mov
shl
xchg
in
test
repz
push
out
mov
dec
cmp
insb
fildll
or
jmp
mov
pop
pop
rcrb
cmp
add
leave
jp
stos
and
bound
cli
xor
adc
push
repnz
in
jb
lods
aam
fisubl
push
int
inc
and
test
je
mov
push
aas
jne
lcall
pusha
ja
aas
add
fdivrs
sahf
sarl
std
xchg
mov
aaa
pop
jecxz
jl
xor
jg
stos
add
push
ljmp
xchg
scas
inc
loop
iret
fstpt
leave
outsl
cmp
aad
push
jl
push
jns
movl
sbb
pushf
dec
lods
mov
stos
imull
cmp
rcrl
xchg
jnp
lret
cld
adc
adc
sub
dec
popa
xchg
and
mov
shll
nop
js
movsb
lods
stos
add
cmc
cmpsb
xor
xchg
dec
and
pushf
pop
mov
add
stos
fisubrs
shl
test
orb
sbb
faddl
xchg
das
dec
add
repz
jo
stos
call
div
fisttpl
pop
lods
mov
and
arpl
mov
add
test
mov
iret
arpl
sahf
mull
stc
repnz
cmp
sbbl
ss
xlat
xchg
outsl
hlt
outsb
cs
push
cld
and
or
jmp
jecxz
popa
shll
or
xchg
pop
cltd
jbe
rcrb
mov
cltd
daa
jae
or
loopne
mov
test
call
add
inc
ljmp
add
shl
out
lods
cmp
fwait
rcr
cmp
sub
imull
test
daa
mov
cld
lret
sbb
std
std
repz
sbb
cwtl
dec
inc
mov
loopne
das
filds
sbb
xchg
push
mov
lock
inc
scas
jno
pop
jb
inc
pop
ljmp
mov
clc
mov
fimull
fldl
and
fsub
pushf
add
mov
arpl
mov
test
add
sbb
mov
or
jnp
mov
addr16
call
ficoms
and
xor
pop
stos
mov
sub
mov
sahf
and
sub
push
testb
inc
jns
mov
mov
mov
xchg
in
sbb
std
xchg
pop
fdivrs
int3
pushf
stos
mov
add
jp
js
ss
fsubr
lahf
enter
xlat
mov
xorb
ret
jo
test
mov
dec
sbb
mov
add
mov
xor
cmp
push
push
inc
frstor
mov
mov
inc
sub
sbb
push
data16
hlt
cmc
pop
hlt
jmp
pop
or
inc
pop
mov
push
pushf
jb
repz
and
arpl
mov
mov
aas
rcl
hlt
or
or
pop
in
mov
das
fldl
lods
fs
lods
dec
adc
flds
mov
pop
ljmp
test
jbe
adc
jns
sahf
add
icebp
lea
aaa
mov
movntq
shl
xchg
pop
lret
inc
mov
jns
push
inc
fwait
sbb
sbb
or
ja
std
xor
mov
adc
push
flds
cmpsl
fsubp
cmp
imul
test
loop
cltd
mov
mov
or
out
and
movsb
jno
mov
mov
insl
sub
rorl
push
jge
into
mov
je
mov
call
fsub
push
sub
pop
call
add
mov
aas
outsb
popf
fwait
jno
mov
shl
imul
movsl
mulb
lret
xchg
ljmp
test
mov
pop
in
inc
cmp
inc
and
rcll
shrb
fstpl
popa
xchg
and
mov
push
negb
jecxz
inc
dec
addr16
movsl
movsl
popa
jae
mov
xchg
cs
inc
cmc
imul
jmp
pand
int3
xchg
pop
push
in
xlat
jle
fsubrs
add
jbe
xor
mov
sub
addl
sahf
and
fwait
cmp
shrl
subl
pop
fwait
mov
stos
jno
sbb
cmpsl
lss
jle
push
test
iret
xchg
sbb
and
pop
popf
jmp
addr16
xor
and
adc
roll
jp
stc
jl
idivl
jbe
sbb
and
addr16
xlat
pop
les
scas
adc
mov
dec
loopne
ret
jo
jmp
sahf
sbb
gs
push
aaa
mov
and
sub
mov
subb
pop
sarl
pop
aas
jmp
xchg
add
bound
int
fdivrl
in
sarl
mov
jnp
jae
pop
sbb
popf
cmpsb
push
iret
jl
aas
orb
push
push
xchg
test
loopne
lret
out
inc
ret
jmp
ret
mov
pop
cmp
lret
mov
repnz
add
or
iret
mov
push
mov
or
cmc
push
ret
stos
fstpl
dec
jg
loopne
int
xchg
fbld
sub
xchg
push
stos
add
lods
dec
ud0
fs
pop
loop
add
mov
mov
test
pop
mov
mov
inc
jmp
testb
aad
xchg
scas
cld
sbb
rcrl
add
popa
lds
nop
cs
stos
int
or
sbb
mov
pop
loopne
divb
ss
hlt
lcall
pop
roll
scas
jae
pop
add
sbb
push
jge
mov
enter
or
mov
cmp
sbb
ljmp
jl
and
mov
dec
cmp
popf
dec
imull
sbb
xchg
adc
pop
imul
mov
call
in
sub
out
fsubs
les
enter
dec
cmp
mov
jmp
js
pop
mov
aaa
push
lcall
pop
add
shr
or
jecxz
or
daa
mov
jmp
pop
sub
jb
mov
push
pop
in
jne
pop
xchg
call
popf
or
test
dec
push
push
idivl
xchg
mov
adc
mov
movsb
je
lods
push
sub
pop
dec
out
xor
xor
cmc
xchg
adc
cmp
push
fiaddl
push
lods
inc
push
xchg
inc
mov
imul
loopne
mov
stc
sahf
xchg
pop
mov
aaa
jb
test
dec
mov
out
push
push
addb
popf
leave
loopne
in
loope
dec
xor
stos
clc
jns
cmpl
cmp
xor
ljmp
cmp
sbbl
xor
pop
or
xchg
lahf
mov
out
and
dec
cmp
xchg
frstor
lds
cmp
jp
xchg
mov
push
mov
mov
mov
je
adc
in
xchg
rcr
cwtl
sub
ficoml
ljmp
cmp
aam
in
sbb
sub
inc
ds
addb
and
add
add
sarb
lods
jl
dec
pop
daa
aaa
repz
movsb
dec
sub
mov
pop
daa
sub
mov
sub
fsubs
pop
sub
fs
xor
popa
xchg
loop
mov
imul
mov
xor
add
and
in
xchg
in
and
cmp
ja
mov
movsl
int3
sbb
loopne
mov
xor
inc
xchg
lret
sbb
add
add
mov
adc
addl
lret
jo
int3
adc
add
data16
aas
pusha
jnp
imul
icebp
jb
pop
inc
jmp
push
mov
loop
popf
stc
insl
sti
inc
repz
aad
lahf
call
xor
outsb
mov
push
movsl
mov
lods
jge
sbb
and
mov
loopne
cltd
aad
rcr
xchg
pop
lret
pop
add
imul
mov
mov
or
hlt
jb
mov
jne
pop
sub
xor
xlat
test
out
pusha
xchg
inc
sub
cmp
out
mov
or
mov
imul
subl
jae
popf
jle
pusha
mov
addl
inc
lock
notb
outsl
xor
push
mov
lret
xchg
ds
loopne
adc
jg
js
ja
dec
cmp
xorl
imull
pop
cmp
cmp
incb
fcmovne
lret
cmp
out
mov
movsb
rorb
push
je
push
fwait
pop
les
jne
jne
cmp
xor
mov
mov
int3
aaa
shr
shr
sub
cmp
adc
cmp
mov
fcmovne
int
inc
inc
or
sub
call
push
pop
sub
lret
add
es
inc
in
push
movsl
jnp
xchg
xchg
das
mov
sbb
ret
fcoml
popf
sti
dec
jbe
mov
ftst
loopne
and
mov
je
inc
dec
imul
lods
pop
dec
sub
daa
int
cmpl
mov
iret
pop
bound
jno
insl
dec
and
lea
clc
cltd
dec
pop
xchg
add
or
imul
test
shr
test
sbb
push
arpl
mov
cmpsl
mov
push
aad
int3
jbe
xor
cmp
inc
xchg
adc
js
mov
push
mov
add
xchg
add
sti
push
int3
pushf
cld
mov
and
jo
xchg
inc
jne
mov
lods
jmp
mov
dec
lods
in
pushf
mov
jns
out
aam
ja
sub
in
aad
popf
js
push
dec
imul
insl
mov
sahf
dec
inc
pop
pop
lods
mov
sbb
push
mov
mov
not
test
inc
mov
xor
push
xchg
inc
jno
test
out
jbe
pop
adc
sub
cltd
mov
mov
mov
lock
pop
movsb
and
or
jnp
out
inc
adc
aaa
pop
or
out
fisttpl
test
pop
jo
cmpsb
or
loopne
cmp
fnsave
xor
xchg
ds
xchg
repnz
xchg
sub
add
rcll
lret
les
lret
fdivs
inc
sti
xchg
mov
repz
xchg
or
xchg
imul
pop
mov
sbb
ret
add
stc
fisttpll
dec
mov
test
lock
pop
imul
repnz
daa
mov
cmp
sub
dec
xchg
testl
jns
inc
aaa
cmp
stos
lcall
sub
popa
insl
insb
movsl
mov
ficoml
xlat
or
insl
mov
int
dec
add
arpl
int
mov
call
dec
movsb
out
push
jp
cltd
in
or
push
movsl
push
mov
xchg
addr16
jno
mov
pop
hlt
inc
mov
xchg
mov
rolb
stos
xor
inc
xor
aam
imul
xchg
inc
popf
push
and
pop
xchg
jecxz
enter
push
jl
mov
cmp
push
sub
sti
sub
fnsave
inc
clc
movsb
add
lea
or
add
and
out
push
push
js
adc
or
push
loope
sub
std
cltd
dec
call
mov
adc
xchg
nop
cld
push
mov
cmp
push
and
cltd
out
fucomip
cmpsl
popa
les
mov
lcall
movsl
push
in
push
popf
sbb
xor
bound
out
mov
cmpsl
xchg
inc
lods
jno
xchg
sub
mov
mov
jnp
mov
or
pop
push
movsb
or
lcall
pop
mov
cltd
sahf
jl
rol
out
loop
dec
push
dec
mov
adc
jge
out
and
and
out
sbb
test
xchg
push
pusha
into
popa
lahf
ficomps
xchg
out
ficomps
sbb
push
xchg
jl
pop
xor
cmpsb
aas
mov
sbb
adc
mov
dec
and
adc
sarb
and
or
inc
out
pcmpeqd
mov
sub
adc
pop
cs
aas
sub
test
dec
inc
xchg
jae
bound
lods
pop
cmp
xor
xchg
sbb
subl
mov
inc
xchg
mov
aad
imul
xorb
jge
xchg
fcoms
daa
and
mov
ret
repnz
shll
xchg
sbb
mov
rcl
pusha
dec
cmp
xor
mov
leave
sub
xor
add
icebp
dec
push
stc
and
xchg
mov
out
mov
sbb
mov
fildl
inc
clc
add
negb
and
dec
sahf
sub
pop
aas
popa
lods
push
sub
push
ss
test
push
test
mov
cmp
std
fsub
xor
and
mov
mov
inc
cmpsl
imul
cmpsb
inc
mov
fldcw
cwtl
xor
dec
outsl
dec
cli
jecxz
dec
loop
ja,pt
fbld
loope
push
pop
sub
icebp
imul
mov
pop
xor
cltd
xchg
test
aaa
mov
xor
iret
stos
or
lret
movsb
add
shrb
jne
hlt
push
jno
or
fs
scas
shll
adc
hlt
cmp
stc
int3
sbb
mov
adc
ja
imul
and
cmpsb
dec
rolb
xor
xlat
sub
cs
js
push
dec
cwtl
nopl
test
mov
rcrb
mov
out
movsb
cmpsl
scas
sbb
in
push
lcall
jp
cld
test
repz
jp
shll
jl
and
cltd
and
adc
ret
daa
and
mov
xchg
scas
ret
adc
lea
or
stos
inc
aaa
fs
cli
rolb
fstpl
repnz
cmp
clc
je
jg
jmp
shrb
xor
pushf
or
add
xchg
mov
pop
push
pop
stc
push
cli
and
mov
ret
fsubr
xchg
cmpsl
inc
jge
jmp
aam
pop
shll
pop
sbb
xchg
sub
lea
out
mov
mov
out
mov
bound
loopne
aam
call
mov
ja
add
mov
xor
push
leave
or
inc
sbb
jns
in
xor
xor
enter
xchg
imul
call
popf
lahf
dec
loope
cs
in
push
cwtl
mov
sub
adc
test
hlt
sarb
add
cwtl
inc
in
sbb
cmpsl
sbb
loopne
mov
js
cmc
and
xor
adc
cmpsb
xchg
cli
aam
loopne
ss
xor
mov
or
roll
push
sub
dec
aas
xchg
cli
test
jg
or
push
and
stos
aas
cmp
fldcw
insl
imul
negb
fsincos
and
mov
test
cmp
push
es
dec
adc
jae
mov
adc
dec
data16
cmp
dec
inc
dec
fisubl
in
dec
movsl
inc
sarb
fs
pop
xor
push
push
dec
mov
or
das
ret
or
pop
jge
jmp
mov
push
mov
mov
sahf
das
push
popf
jle
imul
sahf
sbb
fwait
daa
mov
mov
jae
aas
cld
int
dec
and
mov
or
icebp
subb
mov
add
jp
push
repnz
add
xchg
and
pop
mov
jge
and
jnp
push
leave
je
dec
lahf
jnp
loopne
lock
popf
cmp
mov
mov
mov
jb
xchg
add
xlat
addb
mov
aam
mov
push
sahf
movb
mov
jnp
add
xchg
mov
mov
adc
flds
mov
dec
inc
xchg
fsts
adc
mov
ret
dec
sbb
mov
shl
xchg
rcrb
xchg
fwait
sub
es
mov
cmp
push
dec
or
cmp
movsb
lods
jne
mov
pop
or
mull
sub
add
lds
jle
lods
cmp
sbb
pop
mov
imul
scas
cld
test
cmpsl
cltd
stos
sbb
sbb
lret
xchg
insl
or
or
jne
test
xchg
pop
std
loopne
fbstp
push
dec
andl
dec
pop
out
add
loope
aaa
jp
bound
dec
fdivl
mov
sbb
adc
mov
xrelease
test
lret
cmp
sbb
adc
imull
cwtl
and
scas
dec
aas
push
fwait
addr16
gs
jns
push
dec
cld
jle
sahf
ret
dec
cwtl
jae
sahf
testl
mov
mov
ljmp
andl
int3
rcl
inc
adc
xchg
stos
lret
ljmp
and
or
fxch
cmp
fnsave
pop
push
xchg
mov
mov
inc
aaa
daa
fldcw
mov
xorb
lcall
and
lds
mov
push
ret
lahf
push
pop
in
xchg
mov
push
adc
push
fisubl
pop
xchg
test
and
pop
mov
sahf
jae
sahf
outsl
jecxz
xor
cld
popf
and
cmp
in
ss
push
cwtl
call
pop
mov
shlb
addr16
test
cmp
xlat
mov
add
insb
sbb
loop
gs
sbb
sbb
xchg
inc
je
pop
test
sbb
xor
adc
leave
ret
ja
sbb
xchg
sti
sub
inc
sub
addr16
xchg
and
add
xchg
lods
inc
mov
add
and
lea
fwait
push
insb
pusha
mov
pop
popa
pop
pop
dec
mov
enter
ja
mov
in
das
int3
mov
addr16
cli
jge
or
outsb
pop
jmp
repz
fwait
jmp
out
cmp
pop
outsl
xchg
iret
jecxz
lods
xchg
mov
bound
sbb
std
cmp
lcall
outsb
cli
icebp
jbe
sub
sub
scas
cmp
jns
mov
cmp
sbb
adcb
gs
mov
mov
mov
mov
and
nop
das
sahf
scas
jnp
or
movsb
scas
test
pop
les
loopne
cli
mov
out
jmp
test
ss
pusha
dec
push
xor
test
aas
call
lds
jmp
shlb
mov
add
dec
lahf
ret
mov
xor
sahf
or
scas
out
jle
or
out
sbb
out
out
cmpl
xchg
into
idivl
mov
xchg
cld
inc
xor
mov
and
xchg
in
aas
dec
gs
or
pop
mov
aas
in
inc
adc
add
or
cmpsl
test
mov
mov
jbe
and
adc
ret
jns
cmp
fildll
mov
jno
jmp
in
mov
cmc
mov
push
out
xchg
bound
cmp
pop
mov
test
out
loopne
sbb
test
scas
cmp
es
insb
lahf
imul
adc
ret
mov
lahf
and
sbb
das
addr16
or
mov
adc
jae
loop
mov
inc
aas
loope
in
mov
nop
mov
mov
ret
push
fld
call
adc
shll
lret
in
or
mov
cmpsb
push
clc
sub
push
cs
out
rolb
sub
sti
int3
stos
ljmp
roll
add
push
ja
mov
sbb
icebp
push
daa
fwait
jo
divb
and
inc
and
jecxz
repz
adc
cwtl
dec
mov
inc
testl
ljmp
push
mov
mov
mov
adc
xor
subl
shl
xchg
clc
aas
adc
sub
out
fstps
adc
insb
fwait
mov
incl
push
inc
aaa
lods
incl
mov
test
lcall
sbb
pop
sbb
aad
dec
shlb
or
std
or
mov
push
test
sub
mov
pushf
aam
mov
mov
sub
dec
dec
mov
pushf
adc
lret
fistps
push
ficoms
dec
sbb
dec
mov
xor
repnz
popf
mov
fcomip
mov
inc
push
push
sahf
adc
inc
sahf
sbb
jns
loopne
xchg
inc
outsb
jno
sahf
mov
mov
jae
inc
inc
mov
jg
xchg
movsl
sub
sbb
dec
fisubl
sub
add
mov
and
scas
push
add
jg
int
lahf
out
shrl
in
push
xor
xor
adc
nop
int
adc
fisttpl
adc
push
decl
test
ret
pusha
into
push
pusha
loopne
xor
pop
test
hlt
adc
in
lds
sbb
cmp
xor
int
fisubs
fidivrl
cmp
mov
adc
movsl
lret
mov
cmp
sub
and
int3
jge
add
mov
cmc
jbe
enter
pop
test
ljmp
outsl
stc
add
jae
lcall
inc
mov
cmpsb
mov
cmp
dec
add
add
sub
mov
gs
jmp
pop
int
push
in
push
or
in
add
inc
push
push
out
xchg
mov
mov
jp
pop
outsl
mov
and
iret
imul
xor
or
insl
scas
inc
lods
and
jbe
hlt
dec
cmovg
repnz
mov
in
shl
xchg
fisttps
aam
xor
xor
jbe
sbb
adc
or
out
les
stc
mov
dec
adc
outsb
addl
or
sub
mov
subb
pop
mov
orb
insl
xlat
sub
cli
sub
inc
push
cmc
dec
test
mov
jle
adc
andb
sub
cmp
adc
mov
inc
cwtl
mov
mov
aas
les
mov
cli
push
push
add
jbe
rcll
mov
push
xchg
cmpsb
test
sub
cmp
sbb
or
cltd
cmpsb
add
cli
jno
in
push
push
and
cmp
imul
out
mov
xor
cld
movsb
mov
xor
push
cmc
pop
jp
cmpsb
cmp
push
jne
pop
mov
sbbb
outsl
xchg
insl
insl
clc
inc
mov
xor
add
into
push
pop
cmp
push
pop
sbb
jne
call
addr16
clc
mov
push
mov
fsts
shl
dec
xchg
std
cmc
sub
std
pushl
incb
mov
nop
arpl
push
mov
nop
mov
sbb
cmp
mov
mov
and
int
mov
lret
xchg
fistpll
out
aam
mov
test
and
test
and
mov
mov
ret
aaa
ret
into
or
mov
adc
scas
inc
add
push
mov
add
xor
inc
cs
jmp
movsl
sbb
sbb
fimuls
add
xor
jge
push
out
sarl
inc
pop
out
sub
call
push
or
idiv
add
mov
jg
pushf
rorl
fbstp
dec
rcll
and
hlt
ja
cmp
add
cmp
test
ficoms
sbbl
adc
mov
mov
icebp
push
sbb
lahf
pusha
mov
push
or
lahf
adc
mov
sbb
daa
out
fdivrs
lret
imul
dec
or
mov
movsl
aam
inc
pop
inc
dec
xchg
inc
in
aam
mov
mulb
xchg
or
aaa
test
lret
inc
mov
test
shrb
lcall
scas
repnz
rolb
lret
les
repz
mov
add
mov
movsl
xchg
sub
push
mov
push
xor
or
mov
movsl
inc
cmp
test
jno,pt
xor
les
adc
cwtl
mov
out
lcall
ret
dec
idiv
mov
test
and
xchg
and
jno
and
sbb
and
cmpsb
mov
xchg
add
shll
ret
popf
in
mov
mov
fadds
cltd
outsb
out
sub
or
fildl
test
in
xor
sbb
add
in
mov
testb
mov
test
ret
aam
repnz
dec
dec
cmpsl
dec
jno
dec
outsb
mov
pop
mov
cmp
mov
leave
js
inc
jne
test
ja
mov
int
xchg
test
mov
push
lods
lcall
xchg
lods
pop
cmp
lahf
pop
or
jo
dec
xlat
cmc
repnz
mov
pushf
cli
mov
inc
insb
add
xchg
scas
mov
push
aaa
ja
icebp
aam
sub
clc
fs
pop
gs
or
sbb
inc
jae
add
cltd
dec
fsts
jmp
movsb
mov
xchg
inc
sub
fs
addr16
repz
aam
add
pop
inc
jns
sbb
repnz
pop
add
sbb
fdivrp
lret
shrl
popf
pushf
scas
add
sub
xor
inc
les
mov
sbb
stos
hlt
lods
fldenv
das
enter
pop
adc
xor
cmc
jae
es
jecxz
dec
pop
jo
xor
test
or
push
shlb
adc
rolb
shl
shll
fcmovu
mov
lahf
or
sti
loop
sub
and
push
mov
mov
jno
or
dec
xchg
xchg
mov
cltd
ljmp
push
dec
daa
mov
gs
mov
push
pushf
adcl
scas
mov
pop
inc
sbb
cmp
or
jge
lea
sbb
dec
sub
jp
fcomps
jo
ret
push
or
sub
mov
push
inc
popf
scas
inc
cmc
test
mov
loope
inc
mov
jne
xchg
adc
push
lahf
cmpsl
outsl
dec
cld
mov
cmc
cmc
stos
xor
fildll
sbb
bound
pop
pop
in
int
xchg
sub
aad
xchg
out
outsb
cmp
test
pcmpgtw
std
stos
inc
xchg
pop
or
andl
out
mov
push
adc
push
or
lcall
movsb
inc
sbb
dec
xor
test
shlb
aad
mov
push
sahf
pop
aaa
loopne
dec
pushf
and
lret
je
int3
add
dec
pop
flds
in
int3
adc
mov
and
pop
bound
test
jbe
jge
mov
dec
test
leave
bound
jmp
push
push
pushf
or
les
push
in
sbb
jge
icebp
movsb
fld
xor
sahf
push
jle
push
adc
repnz
mov
out
out
cmp
add
test
shrb
sbb
add
push
aaa
mov
mov
arpl
adc
rorb
call
or
out
cmpsb
nop
push
sbb
mov
icebp
shlb
movsb
cli
popa
push
gs
int3
jl
aaa
loopne
cli
sbb
jmp
mov
ret
dec
out
repnz
dec
mov
xor
xor
sub
inc
ja
mull
scas
mov
lret
loopne
sub
xchg
cmpsb
leave
dec
jle
movsb
shrb
pop
divl
ficoml
out
xchg
push
fsubs
pop
adc
fwait
les
inc
fnsave
xchg
sbb
sub
xor
and
fdivs
outsl
fimuls
clc
je
call
push
iret
dec
cmc
jle
insl
inc
dec
mov
push
xchg
jmp
fsubl
pop
popa
stos
adc
vpcmpgtd
xor
rclb
mov
fiadds
sbb
xchg
lret
div
repz
lods
push
and
mov
pop
shl
xchg
popa
aaa
cld
jle
das
outsb
sbb
lods
into
push
sub
lret
fwait
sub
hlt
cmc
nop
jbe
pop
lahf
xor
add
fdivl
sub
leave
push
daa
jno
jmp
pusha
cli
jbe
sbb
ret
xor
mov
xor
jmp
pop
jge
mov
jge,pt
xchg
fcom
adc
shll
or
inc
in
divb
cvttps2pi
std
sarl
leave
or
stos
stos
and
xchg
pushl
pop
inc
dec
fcomi
jo
mov
js
push
sub
loop
scas
test
cmp
inc
fsub
mov
push
sbb
jnp
cmp
inc
imul
jns
ret
dec
pop
xchg
add
jecxz
loope
adcb
das
cmpsl
cmp
inc
stc
aad
mov
mov
jle
lcall
movb
jnp
pop
loopne
jo
iret
loope
jecxz
lock
in
in
mov
aad
mov
lret
dec
adc
xor
inc
loopne
jmp
pop
push
xchg
xor
add
mov
mov
adc
mov
sti
push
shll
push
clc
add
inc
movsb
push
mov
popa
imul
mov
sbb
adc
lea
push
fcmove
gs
and
jne
push
movsl
adc
cli
xchg
movsl
xor
out
gs
pop
push
insb
adc
cmp
imul
xchg
mov
stos
push
xchg
addr16
popf
and
push
adc
cmpsb
lds
and
mov
lds
repz
popf
push
adc
pop
and
push
inc
lock
or
add
into
scas
cmp
pop
sbb
cmpsb
in
imul
cmp
add
fdivrs
add
mov
jno
or
out
stos
movlps
cmp
mov
lods
adc
pop
fs
push
int3
jnp
xor
fwait
mov
jae
je
sub
cmp
xorl
notl
das
sub
add
sahf
adc
pop
pop
pop
ror
leave
les
lock
incl
negl
jmp
dec
and
xchg
in
enter
and
inc
dec
xchg
in
push
inc
sub
int3
xor
pop
imul
pop
push
mov
insb
inc
test
repz
add
movsl
and
in
pop
lahf
push
dec
sbb
sub
pop
mov
fildl
mov
or
js
mov
cmp
es
cmp
enter
aas
mov
mov
inc
push
or
ss
ljmp
dec
mov
xchg
and
nop
sub
cmp
jl
adc
push
jg
dec
or
push
sbb
sub
and
pop
jo
aaa
mov
nop
stos
jmp
pop
stos
repnz
jmp
xor
mov
icebp
inc
ljmp
mov
adc
fs
jmp
adc
arpl
adc
push
push
ja
inc
dec
pop
sub
movsb
dec
into
test
jne
xchg
mov
dec
fsubs
mov
mov
test
jne
xor
je
outsl
btsl
stos
fadd
pop
sbb
pushf
jecxz
dec
pop
fldt
fiadds
addb
in
in
cmp
sahf
out
cmpsb
std
push
sbbb
mov
adc
and
call
sbb
sub
shll
addr16
and
inc
iret
mov
je
sub
adc
lret
arpl
xchg
add
jbe
in
movsb
xchg
sub
hlt
dec
mov
inc
movsl
insl
adc
or
cmpl
jbe
jb
and
imul
bound
mov
mov
or
sti
dec
out
loope
scas
lods
aad
adc
mov
dec
pusha
repnz
pop
mov
add
add
sub
sub
into
jge
jge
ret
xchg
adc
and
roll
sbb
fimull
out
in
inc
pop
dec
xchg
scas
std
es
pop
inc
jg
out
and
rol
and
imul
enter
sbb
fsqrt
xor
mov
inc
mov
mov
or
mov
std
mov
idivb
testl
out
cmpsb
lret
sahf
sbb
xor
push
mov
jmp
jbe
add
sti
mov
mov
subb
pop
xchg
pop
loop
mov
int
fldenv
int
push
fisubl
popf
sbb
mov
cltd
insb
stos
xlat
stos
dec
hlt
data16
aad
test
xchg
mov
cld
add
or
cmp
pop
popa
adc
aas
mov
frstor
inc
out
fdivr
adcl
push
jns
fimuls
mull
pushf
lcall
xor
pop
lock
jbe
and
in
mov
jne
sbb
pop
ret
xor
pop
xchg
or
push
stos
push
popl
mov
cli
lock
xor
inc
in
lods
ja
xor
enter
ss
pop
inc
pop
in
lret
jmp
jmp
decl
mov
cld
mov
dec
mov
jbe
pop
fbld
int
jmp
xchg
icebp
sub
mov
aam
mov
ja
out
arpl
jnp
inc
aad
cmpsb
in
hlt
imul
or
lahf
cwtl
jne
pop
int3
xor
mov
inc
ja
insl
rcr
mov
pushf
sahf
cmc
test
in
inc
sub
adc
inc
push
xor
mov
add
les
pop
adc
fistps
pop
sti
rolb
xchg
stos
out
mov
pushf
insl
dec
mov
add
call
adc
push
es
das
jno
enter
scas
xor
push
popcnt
jns
inc
or
movsb
aam
repnz
loop
fiadds
add
popf
cmp
pop
in
adc
xor
out
into
or
mov
adc
mov
mov
xchg
add
aam
inc
sub
mov
inc
test
jl
shll
aad
jbe
inc
cltd
sarb
pop
leave
shr
mov
cmp
scas
and
sub
imul
mov
ficoms
stos
test
dec
pop
and
mov
scas
add
lds
mov
pop
adc
ljmp
testl
push
test
les
inc
push
out
jg
dec
lret
fldl
pop
fildl
mov
or
loope
sub
stos
mov
inc
aad
pop
repz
test
xor
and
lahf
jmp
cmc
inc
sub
mov
lret
and
ds
push
loop
push
jns
imul
sahf
arpl
stos
add
fucomp
xchg
sub
inc
test
icebp
test
in
aad
insw
fistpll
out
add
aas
std
and
mov
insb
enter
sbb
xchg
or
jmp
cmp
call
jno
lods
pop
and
cltd
push
push
jne
jb
mov
lea
and
mov
add
cld
in
jbe
mov
mov
imul
push
lret
mov
mov
pop
dec
mov
xor
jp
jmp
push
and
shr
nop
adc
mov
outsl
sbb
mov
fildl
daa
add
mov
mov
inc
xchg
jno
push
lods
cs
sub
fbstp
movsl
cmpsl
ds
pop
insb
repz
jp
push
xchg
loopnew
stc
sub
int3
cltd
rorb
stc
lret
cmp
push
adc
ss
adc
push
xor
adc
jmp
dec
xchg
or
cmp
icebp
fistl
aam
inc
adc
jbe
pop
fstl
addb
fwait
adc
xchg
into
mov
sbb
mul
mov
outsl
xor
and
dec
pushf
mov
pop
sub
call
push
mov
mov
xor
cltd
pop
pop
cmp
sbb
iret
mov
cmc
add
mov
int3
jl
and
xchg
push
bound
mov
incb
mov
inc
cltd
or
je
mov
fildl
jecxz
cld
cmpsl
and
push
sbb
clc
icebp
dec
in
clts
es
cltd
fcmovnb
pop
and
push
or
mov
mov
mov
inc
ret
scas
cmp
sbb
lcall
push
out
adc
push
mov
push
dec
inc
out
filds
lds
fdivl
push
loop
scas
test
cwtl
fcompl
out
fdivrs
fmuls
jno
imul
jg
sub
decl
adc
out
sbb
mov
fnstenv
mov
adc
jo
dec
add
mov
push
stos
jmp
dec
icebp
arpl
out
dec
xchg
mov
push
clc
lea
rclb
xchg
sbb
cmp
stos
xchg
in
popa
mov
jns
jbe
mov
or
and
inc
sbb
ss
test
mov
fmuls
dec
lock
call
mov
push
lret
dec
push
stos
mul
sub
cmp
cmp
fsubl
icebp
int
cmpb
inc
dec
int
lods
scas
dec
iret
sbb
int3
insb
adc
pushf
cmp
outsb
adc
mov
add
mov
and
push
lcall
mov
inc
jmp
push
iret
xchg
mov
insl
dec
les
xor
in
inc
decl
mov
or
xchg
scas
mov
out
mov
bound
push
loop
fldenv
add
aad
fnsave
cmovb
outsb
sbb
cmpsb
push
xlat
lret
inc
sbb
das
jg
repz
mov
dec
icebp
dec
mov
aas
ljmp
mov
add
or
or
or
sahf
nop
and
les
mov
push
hlt
dec
das
adc
addl
sub
je
jle
jne
out
cmp
stos
adc
iret
stc
xor
dec
fildll
xchg
push
daa
cs
popa
xchg
or
inc
mov
and
scas
lods
sub
xlat
idivl
jle
shrl
xor
mov
or
jnp
adc
push
lret
xchg
sbb
scas
inc
xchg
pop
push
sti
jge
jnp
ret
les
push
js
cwtl
fwait
lods
pop
sub
repnz
lods
test
and
sbb
xchg
jb
fcom
mov
lods
dec
lds
out
into
movsl
les
loopne
call
sub
idiv
dec
out
sbb
sbb
je
rcr
cmovbe
cmpsl
inc
addr16
or
and
push
mov
mov
mov
cmp
mov
rclb
scas
adc
fsubs
xchg
push
pop
aam
rcr
mov
xchg
lock
adc
cmp
adc
das
lahf
lock
jbe
push
mov
and
mov
push
stos
mov
xchg
sub
es
jne
repnz
rcrb
mov
push
xchg
jnp
leave
xchg
sbb
jmp
daa
xor
xchg
cmp
fstl
pop
int
jg
addr16
ficomps
scas
push
adcb
psadbw
stos
adc
pop
and
loopne
hlt
mov
sub
mov
adc
push
mov
pop
xchg
cs
cmp
bnd
aam
dec
pop
pop
cmp
mov
add
lret
fwait
loop
jae
iret
jae
xchg
adc
jl,pt
out
lock
lea
gs
cmp
sub
cmpb
test
mov
push
outsb
bound
or
xor
imul
and
pop
out
jge
ds
dec
std
add
fwait
rclb
mov
xor
mov
fcomps
sub
pop
pop
std
mov
fucomip
mov
inc
loopne
stos
ds
cmp
sub
pop
roll
in
lret
std
daa
or
shl
xchg
sarl
push
jge
sbb
xchg
aas
pop
fnsave
push
loop
repz
iret
out
push
ljmp
lea
loopne
popa
sub
adc
leave
cld
lods
xchg
cmpsb
test
or
push
mov
dec
and
push
jne
and
lods
pop
fidivrs
and
and
pop
negl
inc
jne
sbb
push
iret
pop
das
mov
lods
pop
shlb
add
outsb
mov
push
aam
aad
jno
lret
and
pop
mov
test
pop
fmull
insl
ja
dec
cmp
out
jb
mov
es
jno
rcrl
std
xchg
int3
out
inc
movsl
decb
xchg
mov
mov
aad
pop
inc
pop
jecxz
lahf
out
pop
out
cmp
dec
and
or
cli
mov
lret
mov
xchg
and
jnp
jle
pop
outsl
mov
lahf
xchg
popa
jno
lea
sbb
sub
jae
pop
pop
dec
stos
ds
rolb
jne
loope
pop
xchg
sub
and
push
test
xchg
xchg
imul
arpl
xchg
xor
sub
jle
sub
adc
lds
sbb
xchg
xor
cmp
inc
mov
jp
mov
mov
xor
mov
out
xor
dec
cmpsb
jno
call
and
mov
and
cmp
or
arpl
dec
rclb
out
or
and
je
cvtps2pi
mov
jmp
add
or
shrb
addr16
das
fcmovbe
sbb
mov
imul
mov
stos
add
mov
pushf
cmp
stc
test
jmp
fisubrs
in
daa
cld
add
xor
test
fsubp
xchg
pusha
andb
inc
rcrb
add
pushf
cmp
iret
out
push
push
fiaddl
call
cmp
mov
push
pushf
gs
out
xor
push
in
sub
cmc
jo
pusha
imul
jge
pop
outsl
filds
loope
cmpsb
sub
push
idiv
bound
lods
movsb
and
xchg
adc
scas
push
gs
push
cmp
xor
sub
xor
sub
lods
push
mov
mov
inc
mov
daa
adc
loopne
xchg
test
clc
faddl
jno
cwtl
aas
mov
push
mov
sarb
xor
sub
in
imul
lahf
inc
jecxz
scas
ja
dec
mov
lock
lods
dec
push
mov
dec
mov
and
cltd
repz
cmpsl
loope
xor
hlt
test
imul
adc
mov
mov
hlt
dec
sbb
add
mov
mov
rolb
xor
mov
stos
stc
das
cwtl
iret
cs
mov
add
sub
add
sbb
shl
mov
nop
jb
sbb
stos
mov
sbb
in
lcall
lea
jne
cmc
jecxz
adc
add
sbb
test
cli
jle
pushf
pop
add
aam
roll
negb
adc
xchg
cmp
mov
xlat
dec
xlat
xchg
xchg
mov
ret
cmp
mov
mov
mov
and
adc
mov
cmp
int3
sbb
insb
or
push
push
xchg
ret
xchg
xlat
int
flds
add
test
cld
mov
arpl
es
inc
sbb
jmp
mull
lods
xor
hlt
int
scas
lea
or
inc
daa
rcll
push
and
ja
fsts
iret
stc
inc
add
icebp
jbe
dec
xor
je
in
aaa
push
or
daa
ret
sub
push
popf
dec
pop
jmp
sub
sub
or
inc
lret
sbb
ljmp
push
or
sub
adc
mull
push
stos
pop
lret
pop
in
cmpsb
loop
xchg
adc
inc
and
faddl
out
flds
xor
cmpsb
lods
test
ss
scas
inc
mov
dec
mov
mov
xor
daa
dec
in
push
push
push
sub
or
roll
fcmovne
in
ja
cmp
lahf
js
cld
iret
push
mov
test
jnp
in
fucom
fwait
mov
pop
pop
add
mov
sbb
mov
dec
inc
shr
cwtl
lods
adc
adc
xchg
test
push
adc
inc
cmp
test
das
ss
xchg
dec
stos
sarl
je
subl
cmpb
mov
xor
aas
mov
mov
adc
sbb
or
and
mov
xchg
xchg
lods
xchg
dec
aas
scas
repz
in
add
add
xor
jmp
lahf
sbbl
xchg
call
push
jo
outsb
pop
dec
jno
mov
mov
mov
xchg
cmp
iret
inc
mov
or
xor
xor
sbb
add
cmp
popl
bnd
pop
fstp
cmp
cmpsl
popa
divb
and
addr16
sbb
add
add
xor
pop
jns
and
cmp
adc
push
loopne
loopne
pop
andb
cmp
les
mov
mov
cli
sub
sub
loopne
leave
mov
out
cwtl
out
cmp
addr16
test
fidivl
push
or
mov
fcomps
aas
rcr
adc
sbb
jecxz
xor
mov
ss
dec
repnz
mov
insb
mov
daa
pop
movsb
andb
iret
cli
data16
mov
sub
lds
aas
addr16
xchg
xchg
into
ret
inc
ret
push
xor
lahf
ss
push
or
cltd
lea
clc
out
in
jecxz
lock
pop
stos
in
ss
leave
fs
mov
sub
das
das
ret
and
add
push
mov
mov
lret
sub
push
arpl
mov
xor
rcll
lcall
mov
mov
jg
int3
cli
xor
repz
dec
call
cmpsb
mov
add
leave
inc
xor
popf
pop
fstl
lahf
loop
mov
daa
popa
fnstenv
jo
in
push
push
and
adc
pop
push
mov
test
add
lahf
and
xor
inc
mov
sar
dec
dec
sub
icebp
int
inc
jp
movsb
pushw
jg
fwait
je
xor
lods
sub
movsb
lock
leave
stc
sub
ja
add
popa
std
push
sbb
jne
mov
outsb
xor
mov
dec
ja
push
dec
sub
sbb
cmp
inc
sub
scas
mov
ja
xor
and
testl
and
insl
out
hlt
repz
inc
or
adcl
cmpsl
hlt
lods
ror
pusha
stos
incl
mov
xchg
pop
dec
shlb
mov
divb
jne
inc
outsb
bound
push
stos
movsb
lret
adc
ror
in
adc
adc
call
lret
js
push
daa
sub
inc
cmp
lds
mov
mov
xchg
into
mov
sub
lret
pop
sub
dec
test
call
and
dec
fidivl
test
inc
scas
jae
sbb
repz
xchg
xor
scas
and
jns
sahf
lea
dec
sbb
cli
test
popf
insl
insb
in
pop
pop
dec
and
cmp
lds
push
sub
sub
xchg
cmp
pushf
test
jnp
xorb
mov
jmp
add
andl
pop
fmull
lock
or
mov
or
jp
pop
lret
jmp
cmp
jle
cwtl
jle
inc
enter
insb
sti
adc
push
or
fnstsw
push
add
inc
and
inc
push
loope
dec
cmc
mov
jae
insb
dec
xor
pop
ss
cmc
mov
test
fimuls
lcall
insb
fistps
scas
adc
test
dec
push
add
scas
or
int
sub
cld
aaa
data16
push
stc
mov
mov
inc
sub
jne
pop
imul
mov
and
fimuls
adc
pop
jns
add
out
jae
pop
ljmp
in
and
inc
mov
mov
adc
int
scas
pop
cmp
xor
leave
mov
jo
insl
adc
ljmp
push
ret
ret
sub
insb
push
movd
enter
test
jno
cld
pop
dec
mov
loopne
xor
lods
out
and
out
sub
inc
xor
xchg
lods
das
dec
sbb
mov
jne
adc
cmp
outsb
push
sub
pop
repnz
lods
aad
jp
dec
mov
mov
xchg
ss
xchg
mov
cmp
mov
outsb
pop
dec
add
loope
push
and
shll
aad
ret
adc
push
mov
arpl
mov
lods
out
je
cmp
enter
sub
xchg
push
xor
add
jns
xchg
xchg
call
mov
and
adc
mov
mov
and
or
adc
lds
or
sbb
aad
xchg
and
aaa
mov
jp
mov
pop
std
out
fiaddl
out
enter
or
fidivl
paddusb
iret
mov
push
int
iret
cli
fadds
pop
test
pop
add
ret
add
jbe
jno
or
fldcw
xchg
add
sbb
xchg
shlb
sbb
jno
and
or
inc
mov
xchg
sub
dec
jle
cwtl
lahf
jle
popf
test
stos
xchg
pop
sub
ss
mov
fsubl
push
pop
mov
stos
filds
out
pop
jmp
aaa
je
cmc
inc
mov
adc
popf
add
or
add
es
sbb
fucomip
jne
mov
sar
push
das
jnp
xchg
outsl
ficompl
adc
dec
sbb
imul
push
daa
ss
xchg
xchg
xor
in
push
mov
cltd
fsts
adc
adc
inc
jnp
fsub
push
in
mov
loop,pn
push
inc
dec
add
pop
repnz
and
adc
inc
mov
sub
rol
sahf
adc
ret
pusha
sub
out
cmp
cwtl
mov
mov
xchg
dec
ds
mov
or
outsl
ss
bound
mov
pop
sahf
add
movsb
fnsave
mov
sub
inc
mov
pop
shr
dec
pusha
sbb
lret
test
dec
ret
xchg
aad
jo
insl
sarb
subb
repnz
aam
inc
clc
inc
dec
sbb
test
mov
sbb
popa
jmp
and
aas
daa
push
lods
les
jecxz
es
adc
xchg
jecxz
lods
inc
and
movsb
js
inc
loop
mov
or
jno
lcall
imul
add
xchg
in
loopne
sub
inc
sbb
loope
or
fiaddl
mov
jge
dec
je
mov
das
push
imul
push
sub
fmuls
mov
leave
inc
cmpsb
cltd
or
sub
pop
xor
sub
sub
out
imul
push
jne
repnz
dec
repz
xlat
aad
aaa
mov
loopne
nop
lret
sti
pop
pop
addb
ja
dec
jp
sti
mov
loope
jno
mov
xor
jge
mov
sbb
mov
mov
out
fists
mov
xchg
push
fs
adc
jno
ljmp
mov
add
enter
xchg
add
lods
lahf
negb
sbb
icebp
ds
leave
push
cmp
addl
outsl
cmp
pop
xchg
pop
outsb
mov
pushf
mov
mov
les
aad
lods
jo
fucomip
add
jmp
sbb
lret
mov
mov
idiv
insl
rclb
push
insb
inc
popf
jae
cmp
add
push
loop
push
stc
cmp
sub
cmp
addr16
dec
ds
leave
mov
jne
jno
test
push
in
xor
pop
std
sub
adc
test
adc
jns
std
aaa
ror
scas
clc
jae
cli
jo,pn
cmp
push
dec
out
ficompl
lods
sub
sub
cli
popa
push
cmpsl
pop
cmp
push
xlat
sbb
loopne
xor
imul
and
mov
adc
xor
sub
pop
mov
or
aad
cmp
movsb
sbb
test
push
or
sbb
sti
push
cmp
cmc
and
fists
popa
cmc
sarb
mov
adc
fisubrs
jae
dec
jns
or
push
xor
rcl
xor
pop
insl
pop
scas
imul
outsl
aad
cmp
fnsave
dec
clc
rorb
orl
sti
xor
xor
mov
mov
insl
scas
pop
pop
rcrl
lds
mov
std
loopne
lea
sbb
sub
outsb
and
daa
cld
dec
ret
mov
in
push
pop
popf
cltd
inc
push
jge
movsl
cld
push
pop
cmpsl
sbb
push
sbb
dec
scas
push
adcb
ljmp
cs
push
push
les
out
fldenv
add
mov
adcb
outsl
dec
sbb
sub
cs
test
aam
inc
and
fnstenv
pop
mov
inc
xor
outsb
std
clc
inc
inc
mov
and
movb
inc
mov
cmp
mov
movsl
clc
mov
push
adc
aas
dec
lods
xor
lret
es
push
jecxz
push
mov
mov
cwtl
clc
inc
sub
cmp
jmp
adc
cmp
add
dec
xlat
mov
jno
call
rcrb
jo
xchg
add
jg
bound
add
add
cmc
push
cmp
divb
jb
and
xchg
xor
push
xor
lcall
mov
xchg
dec
lea
jl
stos
dec
mov
pop
add
cmp
andl
push
out
fwait
dec
xchg
fwait
push
std
fistps
cmpsl
sub
jmp
aas
enter
orb
call
fistps
popf
cmp
add
sub
mov
or
cmp
inc
and
sub
iret
pusha
fstl
xor
jge
int3
ret
int
or
xchg
or
sti
jae
dec
popa
test
sahf
adc
jp
inc
cmp
or
loop
inc
push
bound
dec
mov
xor
push
pop
adc
test
pop
mov
ss
and
stc
xorb
lret
sbb
jmp
mov
cmp
or
es
into
mov
in
bound
lret
out
adc
add
cmpl
ret
cmpsl
dec
pop
sbb
and
xor
add
xchg
popf
mov
mov
das
cmp
dec
and
in
imul
sbbb
movsb
movsl
mov
jae
mov
fs
mov
inc
insl
insl
xchg
push
mov
pop
jecxz
adc
ljmp
inc
subb
push
add
and
test
push
aad
out
mov
inc
or
adc
mov
ljmp
xlat
scas
mov
sbb
add
push
mov
inc
int3
int3
fldenv
jle
cmp
inc
enter
xor
bound
int3
mov
ljmp
and
xor
lods
mov
and
addr16
mov
rclb
or
xor
jge
add
mov
mov
jns
shll
testb
addl
sub
imul
dec
aas
pop
test
mov
fsubs
xor
adc
jb
das
pop
xor
mov
jae
pop
shlb
pushl
dec
pop
cmp
bound
sub
inc
or
shr
ficomps
jl
adc
inc
xchg
lock
inc
inc
inc
sub
out
ror
xor
lock
leave
push
cmp
mov
rcrb
pop
mov
int3
shrb
dec
cmp
push
push
loope
sti
adc
movsl
jle
jae
cmp
xchg
lret
jecxz
cmp
scas
dec
add
push
int
fstl
idiv
test
dec
jo
lret
mov
inc
insl
imul
imul
pop
out
or
stos
or
or
cmp
test
lcall
sar
mov
insb
lret
inc
or
nop
xchg
ret
pop
mov
pusha
adc
cmp
hlt
mov
jae
xor
push
inc
loopne
mov
inc
imul
xchg
lea
in
push
jge
lret
sti
cmc
ja
je
cmpsb
out
mov
test
in
mov
push
cmpsb
inc
pop
cmpsb
sbb
sbb
lret
addr16
add
call
fistl
out
movsb
and
inc
xor
jge
aaa
mov
gs
imul
cltd
or
or
outsl
dec
movb
sub
dec
je
adc
cs
cmc
movsb
adc
popa
dec
testl
data16
sbb
cmp
aad
mov
and
sahf
pop
ret
pusha
inc
arpl
push
call
mov
and
insb
das
hlt
movsb
pop
popa
cmp
and
nop
fwait
mov
fwait
mov
dec
sbb
mov
xchg
dec
mov
xchg
or
ja
loopne
hlt
xor
xchg
xor
pusha
xor
push
clc
add
inc
add
jl
orl
and
mov
ja
aaa
movsl
push
mov
gs
movsb
ja
sbb
adc
sub
orl
push
cmp
sbb
bound
cmp
aad
cmp
outsb
xchg
lds
mov
sub
inc
inc
mov
in
and
test
pop
hlt
aad
icebp
sub
push
inc
inc
mov
xchg
aad
mov
call
xchg
fistps
pop
inc
pop
add
js
addr16
loop
or
dec
push
xor
cmp
pop
lahf
ja
mov
in
jmp
test
xor
out
jno
jne
and
cwtl
xorl
cmp
cmpsb
stc
stos
imul
scas
sub
jl
fmull
xchg
cmpsl
ljmp
int3
xlat
push
xchg
aas
add
dec
adc
push
xchg
ficoml
loope
add
xlat
loop
jle
inc
cmpsl
pop
mov
lods
push
sub
pushf
mov
cmc
sbb
scas
sub
xchg
inc
push
aas
and
mov
sub
movsb
fidivl
adcb
adcb
insl
jmp
lods
test
mov
add
push
gs
jmp
xlat
in
pop
mov
ljmp
jmp
mov
cld
shlb
adc
cmpsl
pop
adc
loope
out
jno
mov
cmpsl
adc
jp
dec
pusha
jns
xor
inc
ret
loopne
cmc
mov
clc
call
inc
mulb
repnz
test
loope
add
lods
xor
loopne
notb
cwtl
sbb
xchg
out
dec
mov
or
xchg
fwait
jnp
pop
scas
addb
fs
jge
fwait
loopne
push
popf
mov
mov
int3
xchg
pop
fwait
xor
xchg
adc
mov
pushf
clc
mov
lds
dec
push
js
xor
inc
pop
nop
in
inc
mov
aam
sub
dec
mov
fstl
lds
or
stos
jge
pop
sub
hlt
shll
rcl
aam
push
mov
cmpsl
pop
pop
sub
push
mov
ret
add
or
mov
test
lods
mov
jp
sub
jno
and
push
adc
inc
xor
decb
pop
push
out
insl
jne
xor
mov
jg
test
rcrl
bound
jne
pop
add
std
push
pop
mov
shll
mul
mov
xchg
aaa
repnz
or
dec
inc
lcall
lock
jmp
insb
pop
cltd
xor
sbb
or
ja
xchg
movsl
or
scas
addr16
inc
or
mov
push
mov
ds
mov
lds
pop
inc
add
adc
jb
cmovle
cmp
cs
or
xor
dec
aam
loopne
int3
adc
pop
push
popa
push
mov
mov
jle
mov
xor
fs
jl
imul
in
pop
jg
sarb
imul
in
icebp
mov
pop
aam
lock
pushf
mov
jae
cmp
out
shlb
cmp
mov
add
xchg
nop
xchg
mov
rolb
aas
adc
sub
in
push
loopne
and
daa
ljmp
push
test
mov
jmp
ret
mov
std
mov
mov
cmc
sbb
leave
mov
push
mov
cld
sbb
mov
xchg
sti
xor
fcoms
push
mov
ror
aad
mov
sbb
jae
adc
jae
jns
jb
pop
popa
inc
push
stc
sub
mov
aad
jo
rol
daa
cmp
dec
sub
mov
clc
xchg
and
xchg
jecxz
cli
mov
push
xchg
rolb
adc
rolb
dec
mov
xchg
ret
cs
or
fst
cmp
push
pop
mov
lea
cmp
pop
sti
sub
sti
clc
jge
inc
xchg
js
popf
mov
pop
mov
push
out
xchg
fldt
jne
mov
test
jno
shlb
pop
jle
or
mov
sbbb
add
sarb
adc
addl
push
sub
scas
clc
scas
push
xor
mov
inc
cmc
cltd
adc
rorb
mov
fwait
xchg
mov
jg
faddl
in
or
test
dec
dec
inc
aaa
and
ljmp
fs
mov
lcall
sub
xchg
dec
lods
insl
stos
mov
push
pop
add
shl
pop
and
adc
cmp
adc
lcall
in
mov
push
test
xchg
out
sbb
shr
xchg
insl
pop
aam
dec
out
daa
or
sbb
mov
jb
aad
in
int3
cmpsl
in
mov
lds
cmpsl
push
dec
pop
imul
clc
sbb
dec
push
pop
mov
mov
jns
mov
in
sub
movsb
pop
pop
jno
inc
int
mov
dec
add
mov
outsl
xor
pop
jg
mov
std
sbb
pop
adc
iret
imul
notl
add
mov
xorb
and
push
and
repnz
aas
mov
and
sub
or
lahf
or
xchg
ds
xchg
das
mov
sub
dec
xlat
ss
mov
xchg
stc
clc
mov
pop
mov
cmp
std
cmp
mov
fstps
adc
or
ljmp
xchg
pusha
repnz
out
and
sbb
adc
adc
shll
xchg
cltd
in
fs
dec
xor
je
js
push
mov
outsb
add
int
into
and
jp
out
xor
cld
xchg
lret
fs
std
or
popa
popl
lcall
insl
mov
sub
dec
mov
xchg
mov
int3
push
lret
adc
decl
pop
jmp
shrb
in
in
xor
push
push
push
les
sub
and
call
clc
sbb
adc
and
xchg
xor
scas
repz
and
jbe
mov
lcall
add
dec
call
test
loopne
aad
arpl
dec
jno
ljmp
xchg
das
mov
iret
sbb
nop
cmp
addb
xchg
aad
lds
sbb
or
mov
mov
sub
push
sti
xor
scas
sub
inc
decl
test
in
sahf
or
pop
es
xor
add
adc
aaa
inc
data16
bound
add
add
or
fldenv
dec
mov
xchg
call
inc
push
push
dec
data16
movsl
jl
mov
gs
or
lea
pop
scas
dec
mov
mov
adcl
les
sbb
sbb
shll
xor
cmc
lret
and
std
add
int3
jae
push
xchg
gs
lcall
jge
mov
or
add
cmp
int3
aam
iret
lods
push
inc
jmp
or
insl
push
subb
jo
sbbb
mov
or
test
mov
out
xchg
push
cmp
movsb
out
xchg
and
fnstenv
jbe
ud1
dec
cmp
movsl
daa
jo
add
cmp
cmp
xchg
xchg
xorb
into
xor
aam
sbb
movsl
iret
push
dec
jecxz
push
add
dec
imul
dec
xchg
js
pop
fwait
sub
out
mov
test
mov
pop
inc
fldl
cmpsl
loope
push
dec
mov
les
lods
roll
lock
cmp
xor
jno
jle
ret
out
cltd
pop
mov
and
dec
push
cmp
or
cli
lods
jmp
xor
lods
and
shll
cmp
clc
jp
mov
ljmp
push
dec
xchg
dec
out
cli
mov
pop
sub
mov
inc
popa
or
sbb
add
sbb
cmp
adc
insl
movsl
ss
and
or
dec
or
cmc
cmp
inc
hlt
test
in
sub
and
jle
out
scas
lahf
adc
in
jle
push
mov
push
dec
or
popa
jae
jae
test
inc
or
lahf
pop
outsl
mov
xchg
je
jecxz
cmp
jns
cs
jecxz
jmp
push
xor
or
add
xchg
sub
mov
fcompl
jmp
push
dec
fnstcw
cmp
sub
sbb
daa
ja
and
sahf
popf
into
insb
in
jecxz
in
or
pop
or
xchg
mov
xchg
cmp
das
sub
and
ficomps
scas
mov
or
aaa
adcl
call
out
popa
imul
in
xchg
mov
loope
test
add
fsubrl
dec
and
loop
aam
sbb
and
and
dec
call
jno
in
sub
in
sub
iret
push
subl
xchg
mov
fdivrl
stc
sub
fsts
adc
fwait
es
or
or
fisttpll
cld
mov
out
and
jns
loope
jmp
lods
pop
int
add
xor
enter
adc
fmul
and
jle
dec
aas
fldt
adc
mov
mov
push
xlat
add
andb
cmc
inc
std
add
pop
xchg
loopne
pop
popa
push
pop
out
lahf
push
jo
xor
push
push
cmp
and
or
inc
xchg
push
xor
pop
and
adc
jb
mov
inc
pop
mov
loope
push
aas
sub
repz
mov
cwtl
inc
std
popf
test
lods
dec
xchg
ljmp
lcall
pop
mov
stc
hlt
sub
fnsave
add
stos
mov
or
push
add
pop
add
mov
xchg
xor
jnp
jecxz
insb
dec
dec
mov
mov
shrl
xlat
lcall
jmp
push
mov
mov
or
push
shrl
and
imull
mov
adc
adc
jp
pusha
xor
test
lahf
fxch
scas
pop
pusha
sbb
xor
mov
xchg
test
test
mov
lcall
in
rcrl
gs
dec
arpl
and
mov
movsb
sbb
cmp
ljmp
fcomi
int
dec
cmp
xor
lcall
lock
mov
sub
mov
jo
sti
or
out
bound
shlb
xchg
cmp
rcll
arpl
mov
lock
mov
mov
inc
dec
dec
adc
test
dec
push
adc
pop
mov
insl
test
cmp
push
fabs
int
jb
fisubs
insb
push
sbb
or
mov
and
jecxz
xor
data16
push
mov
idivb
xor
inc
push
xorl
sbb
sub
mov
ret
in
xchg
cld
add
test
ret
ret
test
mov
xchg
and
and
push
mov
or
cli
add
out
push
or
fld
nop
es
pop
cmp
add
xchg
hlt
mov
mov
push
lods
xlat
arpl
mov
dec
mov
cmp
pop
pop
lods
pop
mov
rcrl
stc
incl
jae
test
lds
xlat
gs
and
cld
les
dec
test
mov
std
jne
inc
xchg
xchg
push
jmp
lret
in
mov
mov
or
lea
shrl
sbb
pop
ds
xlat
dec
inc
xor
xor
sub
fidivs
add
hlt
sti
mov
adc
cwtl
push
pop
mov
ss
lret
or
cs
xchg
add
mov
and
cmp
adc
mov
shr
pushf
imul
xchg
mov
push
cmp
out
sti
insl
xchg
in
jae
pusha
mov
pop
nop
or
add
dec
es
pop
and
pop
call
mov
xor
imul
mov
fstpl
jecxz
movsl
insl
cltd
pop
popf
mov
fidivrl
imul
sbb
push
out
scas
outsl
pop
mov
cmpsl
mov
test
movsb
xchg
data16
jmp
push
fs
jmp
movsl
jnp
fdiv
mov
pminsw
pop
xchg
cltd
adc
pop
add
pop
les
mov
ds
jge
mov
push
fwait
lcall
mov
mov
ret
les
xlat
les
jmp
cwtl
out
mov
iret
sbb
xor
shll
pop
sbb
dec
popf
fldl
mov
sbb
test
mov
jp
dec
add
outsl
mov
jg
sbb
loopne
aas
mov
outsl
icebp
clc
mov
mov
lods
adc
out
stos
cmp
scas
sbb
cmp
scas
repnz
push
dec
fs
adc
lcall
ret
jns
cmp
mov
mov
aas
shrb
dec
rcll
fcoms
int3
or
inc
nop
imul
int
mov
sub
xlat
out
mov
loopne
mov
inc
jle
bound
insb
rorl
and
lods
cmpsl
jb
pushf
jp
stos
inc
mov
sbb
in
out
test
jns
pop
ret
arpl
mov
addr16
push
lret
pop
xor
sub
xor
push
xchg
or
fwait
sub
sbb
cmp
aas
icebp
sub
xor
cltd
sbb
adc
jl
mov
shrb
cmp
loopne
or
adc
out
or
inc
jecxz
mov
jmp
addr16
sbb
or
mov
or
cvtpi2ps
inc
jnp
mov
or
popf
fldl
lock
iret
fstl
add
lcall
lea
jb
jbe
ljmp
movsl
fsts
incb
jecxz
jne
in
sbb
dec
add
insb
je
push
add
jns
sub
mov
xor
sti
push
jl
loop
and
xchg
push
mov
scas
in
dec
cmc
aam
lods
inc
mulb
stos
dec
testb
cmp
adc
mov
or
mov
jmp
sbb
xchg
mov
rorb
sbb
cmp
mov
bound
push
inc
sbb
xchg
push
pop
addl
push
mov
sbb
sarl
xor
in
nop
push
repz
scas
xchg
dec
xchg
mov
test
popf
adc
loope
sub
add
ret
stc
sbb
sbb
push
and
xchg
pop
cmp
lock
pop
incb
cmpsl
aad
jnp
pop
mov
push
movsl
dec
jge
mov
test
xchg
and
or
or
adc
rcl
jo
mov
sti
mov
in
cmpsb
sub
xchg
sbb
pop
mov
imul
and
cmp
lahf
jns
ficomps
rcll
mov
dec
cmpb
movsl
in
in
mov
dec
ja
mov
sub
xchg
sbb
arpl
pop
iret
seta
outsl
sbb
mov
jmp
inc
subl
pop
les
test
or
dec
scas
cmp
sbb
mov
push
mov
push
out
sbb
push
adc
loop
imul
sti
xchg
into
jle
or
insb
icebp
inc
mov
mov
fstpt
out
cmp
js
sub
in
mov
int
sub
jmp
mov
jae
outsl
daa
or
test
or
dec
jg
les
mov
jge
fldl
cwtl
fildl
out
hlt
mov
loope
sti
pop
push
loope
bound
inc
sbb
dec
das
test
insl
xor
mov
es
idivl
pusha
ret
and
out
xor
xor
pop
jae
dec
add
fisttps
das
push
mov
push
and
ss
mov
mov
roll
in
jo
lret
in
movsb
add
dec
stos
mov
data16
dec
mov
inc
push
in
mov
dec
popa
in
jmp
ja
test
cmp
xor
xor
xor
adc
sbb
test
and
mov
adcb
jl
movsb
inc
rcl
ljmp
sbb
or
pop
dec
xor
mov
xor
xor
in
sbb
fildll
enter
mov
ss
ret
outsl
dec
pushf
xchg
push
add
shll
mov
dec
sub
inc
inc
addb
mov
dec
gs
mov
clc
add
mov
and
fimuls
inc
lods
cld
out
and
test
sub
stos
or
das
adc
call
stos
xchg
xlat
rcr
add
dec
in
pop
lods
outsl
jg
fsubs
sbb
inc
sub
lds
jns
cmc
push
adc
and
imul
int3
add
in
inc
rcll
cs
js
test
mov
cs
jl
mov
mov
pop
cmc
les
add
cmpsl
lcall
mov
add
jne
in
pop
cwtl
out
push
add
mov
mov
add
leave
aad
enter
inc
sub
cwtl
dec
cwtl
mov
imul
cmc
stos
adc
sar
aaa
add
cmc
jmp
loop
adcl
addr16
rolb
adc
inc
or
out
mov
dec
dec
cwtl
leave
inc
sub
push
pushf
xorb
push
in
jmp
sub
shlb
subb
and
or
jo
notb
jbe
daa
and
cld
stos
mov
aam
jbe
or
sub
ja
iret
scas
stos
cli
xor
and
mov
mov
stos
loope
dec
and
mov
in
xchg
add
adc
std
inc
mov
fbld
pop
insl
out
dec
cwtl
cmp
jmp
sarb
lahf
outsl
rclb
out
ds
push
in
stos
les
mov
push
mov
lea
stos
in
xor
mov
pop
mov
test
sub
mov
dec
dec
xchg
add
dec
int
dec
adc
outsb
push
jo
cmpsb
adc
mov
mov
repnz
xchg
arpl
loopne
inc
xor
into
cmp
or
flds
outsb
pop
and
scas
movsl
mov
pop
es
fwait
xchg
inc
jge
lret
jo,pt
mov
pop
inc
fstl
pop
pop
daa
lea
insl
js
pop
fcoms
es
push
popf
push
mov
sti
jl
cwtl
and
in
enter
and
pop
adc
mov
cltd
das
jmp
cwtl
cld
sub
test
data16
dec
jno
imul
imul
pushf
sub
xchg
icebp
xchg
and
mov
movsl
arpl
bound
bound
xchg
lcall
nop
lret
in
lret
ds
sbb
imul
add
dec
popf
cmp
fs
adcb
out
shlb
add
fs
mov
pop
dec
into
lods
out
gs
dec
or
stos
andb
adc
fcmovu
xchg
je
pushf
sub
enter
mov
dec
or
jae
pop
mov
les
je
mov
out
stos
jae
enter
jns
mov
and
shlb
scas
push
pop
mov
cmpsb
imul
jbe
pop
icebp
mov
pop
push
out
loop
popa
xlat
lcall
pop
jnp
xchg
add
mov
pop
dec
aam
xchg
mov
dec
cmpsb
stc
daa
dec
mov
aad
cmp
mov
or
lea
pop
inc
leave
sbb
call
out
sarb
sub
pop
lret
in
jmp
xchg
adc
rolb
movsl
outsl
and
bound
pop
mov
mov
pop
xchg
push
jl
or
add
mov
lahf
xor
mov
lcall
fnstsw
xor
fistl
or
jge
aad
icebp
leave
fbstp
mov
testb
xlat
idivb
clc
outsb
lods
jne
pop
add
inc
jmp
insl
aad
mov
fbstp
daa
and
adc
gs
push
push
pop
aas
xchg
jp
push
add
rorl
dec
out
hlt
pop
mov
repnz
iret
fs
pop
pop
ror
sub
adc
into
stc
test
jo
or
or
push
sbb
movsl
adc
jbe
pop
in
lods
dec
in
fcompl
jnp
mov
into
imul
ret
imul
cmp
pop
test
mov
test
not
sbb
vdivss
aad
adc
stos
int3
sub
lret
adc
shr
cmpsb
mov
lods
xor
and
test
xchg
mov
mov
add
ljmpw
pop
or
clc
cmp
jp
and
addr16
sti
sub
jnp
push
lret
mov
ss
push
pop
filds
mov
dec
out
fmul
dec
lea
clc
lea
cld
jge
push
scas
add
dec
cmpsl
stc
popa
jle
mov
incb
mov
and
mov
aad
arpl
out
adc
and
mov
popa
sbb
hlt
add
inc
mov
cmp
movsb
addr16
scas
adc
adc
mov
stos
mov
arpl
rorb
xchg
cld
cmp
es
mov
int3
pop
xchg
push
fs
push
scas
add
scas
jnp
lds
outsb
jp
out
jo
mov
adc
repz
lret
mov
mov
arpl
pushf
inc
sbb
and
arpl
int
mull
in
jns
pushf
insl
and
and
lods
push
stc
pop
les
imul
xor
mov
jmp
arpl
imul
test
dec
stos
fsubrp
mov
jmp
dec
jmp
dec
cli
fcmove
stos
cltd
loop
sbb
mov
lds
sar
lea
lcall
push
inc
aam
sti
dec
int3
xchg
outsl
dec
or
js
jg
fiadds
cli
xor
pop
cmc
sub
decb
push
mov
push
rorb
sub
cs
fwait
stc
arpl
les
mov
adc
test
mov
xor
mov
pop
dec
xlat
cmp
popf
adc
sub
lds
mov
adc
cwtl
pushf
lcall
mov
xor
or
mov
xor
arpl
aaa
inc
sbb
push
icebp
inc
push
xor
addr16
xchg
xor
lods
push
hlt
or
sbb
enter
lds
jnp
mov
pop
icebp
aaa
sti
gs
adc
nop
mov
push
adc
push
adc
testl
xlat
xchg
imul
es
int
hlt
pop
xor
xor
xchg
testb
mov
dec
sti
xchg
jge
daa
lds
in
mov
rolb
pop
or
sbb
enter
push
push
popa
adc
test
outsb
add
stc
loope
lods
add
xor
pop
ret
lahf
mov
or
in
jp
pop
lahf
scas
aaa
icebp
pop
jmp
leave
mov
and
jno
push
pop
mov
cmpsb
outsb
aad
cld
mov
jb
testb
xor
sbb
test
add
pop
xor
inc
mov
xor
adc
add
sub
cmp
mov
cs
ret
fcoml
leave
push
pop
jle
dec
lret
pop
and
fnsave
or
leave
outsl
pop
or
pop
xorb
mov
cmp
lret
xchg
bound
loope
xchg
mov
cmp
iret
push
cmpsb
or
sub
cld
lods
outsl
sbb
pushf
cwtl
or
cmp
sti
cwtl
add
xchg
andb
repnz
jg
jns
insl
mov
and
test
in
mov
sbb
jno
aad
adc
mov
pop
xchg
xlat
xchg
or
into
in
adc
inc
gs
jle
out
cmp
loop
add
push
leave
cli
es
pop
out
xchg
outsl
outsb
shrl
xchg
xchg
insl
mov
icebp
pop
push
xor
out
jge
xor
test
out
inc
push
adcl
jle
pusha
and
xchg
pop
bound
aad
mov
mov
out
jg
or
add
rcrl
fwait
push
mov
jne
push
add
enter
sbb
push
mov
cmc
dec
cmp
icebp
sbb
gs
pop
bnd
orl
mov
pop
xor
adc
jbe
jmp
inc
test
xor
xor
sbb
push
push
icebp
enter
leave
adc
push
mov
push
or
adc
stos
pushf
mov
xor
jmp
cmp
pop
cld
adc
jmp
jo
push
lcall
mov
call
out
out
int3
lret
leave
into
and
cmpsl
in
add
fldl
or
jecxz
and
ss
pop
popf
subb
pop
pushl
shlb
insb
sbb
inc
push
cmp
lods
push
add
gs
add
push
add
and
hlt
imul
stc
push
not
inc
popa
pop
sbb
or
shlb
jge
xchg
pushf
jae
mov
rcrl
sub
push
xchg
xor
mov
lods
adc
mov
in
sbb
add
xchg
mov
xchg
into
bound
dec
push
xor
dec
pop
cmpsb
cs
add
add
test
mov
imul
dec
jge
icebp
pushf
mov
out
cmp
mov
or
cmp
das
dec
xorb
mov
and
test
sub
ljmp
xchg
mov
and
push
outsl
fnstenv
sub
or
ds
xchg
lret
cmpsl
or
in
les
cmp
push
jnp
lock
adc
out
addr16
fcmovnu
ss
jae
xchg
out
sub
sbb
loopne
sbb
dec
pop
std
ret
cmp
mov
mov
jmp
mov
dec
push
cltd
jle
and
lcall
out
push
jne
adc
lahf
mov
or
sbb
inc
mov
jp
nop
incb
mov
dec
mov
push
fwait
cltd
mov
sub
mov
mov
xchg
push
push
push
sub
lods
rclb
or
sub
xor
add
pop
mov
testl
mov
lret
lret
out
xchg
rorb
adc
jne
addb
xchg
ss
xchg
dec
lahf
ljmp
loopne
mov
es
inc
pop
inc
add
add
ljmp
jne
lcall
mov
call
dec
sti
sbb
sub
jg
idivl
cmp
hlt
ret
orl
arpl
and
and
mov
in
inc
jno
and
fadds
sub
lods
mov
jp
jge
inc
pop
mov
js,pt
cmp
pop
and
sahf
xchg
xor
push
mov
mov
ret
xor
jmp
sub
sbb
iret
mov
push
ret
das
jecxz
mov
mov
cltd
mov
adc
mov
pop
clc
pop
sarb
mov
pop
and
xchg
inc
sar
fdivrl
push
inc
cld
cmpsb
dec
cmp
addr16
cmpsl
xor
push
lret
cmp
jne
dec
adc
inc
jae
jne
insl
scas
mov
xchg
incl
adc
iret
lods
outsb
movsb
movb
loop
xchg
cs
push
jge
sub
jo
leave
addr16
pop
das
sarl
fcomps
dec
int3
adc
xor
cmp
mov
ja
jo
daa
xor
xchg
fadd
in
cmp
sub
push
or
outsl
in
xor
mov
and
cmpsb
cmp
cld
sahf
push
inc
shlb
sub
xchg
inc
jmp
into
stc
leave
sbb
push
jae
mov
pop
cmp
xlat
adc
lret
call
fiaddl
xor
icebp
sbb
or
stos
xor
fdivs
sub
add
pop
mov
push
aam
repz
sub
enter
nop
repz
mov
jo
xchg
pop
xchg
hlt
ret
mov
mov
call
dec
inc
xor
psubsb
icebp
insb
out
xor
test
cmp
cmc
or
imul
jb
repnz
ret
sub
jmp
jnp
leave
loope
jecxz
in
jae
imul
push
dec
sbb
xchg
bound
cwtl
insb
jl
sahf
sahf
add
jnp
sub
movsb
cli
inc
rorb
dec
rol
test
sahf
into
fldenv
jg
insl
roll
imul
and
fstpl
inc
jae
daa
cmpsl
enter
inc
jmp
add
mov
add
add
fildll
mov
lock
mov
add
xchg
icebp
or
jnp
out
jbe
xchg
aaa
adc
fdivrs
push
ss
jecxz
rcrb
dec
jo
add
mov
push
mov
cli
outsb
scas
stos
loop
jge
push
jg
fnstsw
mov
adcl
push
mov
adc
jbe
mov
in
or
mov
jp
adc
mov
outsl
fiaddl
lock
xor
incb
or
cs
cmc
add
mov
dec
movsl
fisubs
mov
out
mov
fldcw
sbb
jo
aaa
push
in
outsb
cmp
lcall
mov
jno
xchg
pop
xchg
and
fcoml
xor
lea
sub
mov
notb
test
cmpsl
in
repnz
jmp
fdivr
out
cmpsl
and
lcall
int
ret
fistps
ds
ljmp
in
in
mov
fsubs
out
das
and
mov
lods
fistpll
sub
pop
orl
outsl
loope
add
pop
mov
cwtl
lea
and
mov
mov
sub
xchg
add
insl
sti
inc
push
mov
fstpl
jecxz
mov
sub
add
sub
js
adcl
hlt
mov
xor
pushf
add
icebp
jmp
pop
int
fs
mov
leave
sbb
cmp
mov
pushf
xor
xchg
add
mov
sarb
movsb
hlt
xor
fs
shlb
lcall
dec
ret
lods
add
push
sbb
test
aam
sub
out
out
int3
xlat
les
pop
ljmp
inc
lods
sahf
jg
test
lcall
sub
nop
movb
lret
adc
enter
mov
pop
subps
mov
and
sti
repnz
xor
js
xchg
or
sbb
rorl
arpl
pusha
inc
sbb
jl
outsb
dec
in
movsb
es
sub
jns
insb
xchg
or
mov
xor
xchg
ds
repz
adc
pop
jmp
in
fwait
aaa
mov
roll
cli
gs
mov
jecxz
dec
inc
or
pusha
repnz
lahf
sub
popa
xor
mov
fisubs
rcl
rcl
cmpsb
testl
inc
imul
pop
stos
sti
mov
cmpsl
cwtl
xchg
imul
cs
leave
inc
and
dec
mov
inc
mov
movsl
adc
fmuls
lcall
push
icebp
icebp
sub
rcrl
cmpsb
sub
addb
dec
das
scas
mov
hlt
cmpb
adc
ret
les
cmp
jae
sub
mov
arpl
adc
insl
push
inc
call
stos
mov
jle
rcr
seta
mov
sbb
dec
jecxz
mov
push
ja
ja
cmp
nop
lock
in
mov
sbb
xchg
jp
pop
shr
ficompl
popa
stos
test
jns
enter
pop
mov
pusha
sub
adc
clc
jmp
lea
xchg
pop
inc
lahf
and
pop
sahf
sbb
and
add
js
rorl
xchg
mov
ja
push
clc
cwtl
insb
icebp
cmpb
sbb
ret
push
or
imul
push
xor
mov
pusha
out
xor
mov
lret
mov
pop
inc
push
xchg
dec
pop
xchg
test
and
or
lret
jno
scas
jns
es
jmp
or
mov
outsb
sbb
in
add
fiadds
cwtl
sahf
cmpsl
dec
push
cltd
js
gs
addr16
xlat
xor
dec
jle
sub
push
mov
and
mov
imul
xor
mov
fisubrs
jno
das
or
movsl
enter
dec
cmp
and
mov
rcrl
mov
es
jnp
add
lcall
sbb
and
add
mov
sub
push
nop
jg,pn
dec
cltd
les
add
aam
or
mov
and
or
or
in
test
jns
xchg
xchg
jbe
add
test
std
jns
mov
lods
arpl
push
dec
ds
sahf
stos
lahf
lds
sub
lcall
jg
loope
inc
shll
pop
push
mov
cld
mov
bound
jmp
xchg
jb
and
int
stos
repnz
mov
out
setp
xor
sbb
cmp
in
movsb
testl
or
or
mov
ja
rcrl
shll
stos
dec
mov
insl
dec
add
dec
pusha
test
adc
testb
int
mov
xor
pusha
mov
dec
repnz
outsl
fcoml
testl
cld
cld
out
aas
fwait
aam
pusha
addl
or
lahf
add
xchg
jle
push
mov
mov
scas
inc
das
cmpsl
or
out
mov
dec
push
in
leave
xchg
clc
pop
inc
adc
cmpsl
xor
mov
lea
mov
lcall
sahf
push
inc
pushf
jecxz
lods
mov
xchg
inc
and
imul
xor
inc
icebp
mov
addr16
movsl
sub
fistpl
lods
aaa
or
xchg
add
add
mov
mov
leave
cmp
int3
daa
push
jle
and
adc
dec
ret
dec
pop
inc
icebp
mov
mov
in
jb
mov
insl
jne
loopne
out
popa
inc
adcl
incl
rcl
xchg
jo
sbb
mov
pop
pop
cmp
push
mov
inc
mov
add
sti
dec
mov
scas
add
enter
mov
lods
mov
mov
out
std
or
jae
xchg
cltd
mov
mov
add
enter
jae
ret
pusha
pop
shll
jl
fwait
ja
int
add
cmp
clc
xchg
push
insl
xor
xchg
mov
mul
movsb
add
cwtl
or
jno
adc
dec
or
sti
je
shr
push
pop
lret
xchg
shl
xor
insb
leave
cmp
xchg
pop
or
out
xchg
jg
test
jge
dec
mov
jecxz
jge
mov
xchg
jl
aaa
xchg
mov
repnz
pop
pushf
popf
out
insl
cmp
cs
sub
pop
out
cwtl
push
int3
dec
adc
sbb
or
jge,pt
clc
sub
jns
movsb
jae
push
xor
or
xchg
dec
andl
mov
hlt
sarb
pop
sbbl
xchg
or
mov
je
pop
lcall
xor
incb
push
aas
scas
aad
jp
xchg
xor
rolb
pushf
push
dec
pusha
mov
leave
imul
shl
in
push
aad
scas
sub
sub
xor
outsb
cs
loop
adc
sbb
xchg
popa
ss
test
mov
fstpl
sbb
popf
aam
xor
xor
and
sbb
pusha
sbb
mov
xchg
xchg
mov
inc
mov
xchg
fbstp
mov
lods
inc
cmpl
popf
fnstsw
mov
stc
jg
sub
mov
mov
inc
xor
clc
and
fprem1
mov
sbb
fcomp
or
sarl
mov
and
cmp
mov
outsb
dec
mov
adc
icebp
shrb
pop
je
dec
clc
ret
das
daa
sub
and
mov
pop
or
and
mov
add
lret
nop
rolb
test
push
mov
out
sub
mov
pop
loope
inc
bound
ljmp
test
mov
or
jecxz
push
leave
sbb
test
mov
sbb
int
adc
lock
and
repnz
add
dec
push
sbb
adc
jmp
inc
js
enter
cmpsb
jmp
in
xor
xor
adc
in
xor
inc
scas
nop
add
insb
adc
sahf
daa
sub
sbb
add
sbb
fnstcw
loop
inc
jo
outsl
and
mov
push
fsubrs
rcll
push
add
out
add
lock
out
jle
xor
jg
mov
mov
insl
mov
dec
push
cmp
testb
push
xor
xor
pop
popa
jae
fcmovnbe
iret
test
out
sbb
bound
dec
ret
sarb
pop
adc
push
out
cld
jno
incb
aas
loop
sub
lret
pushf
hlt
arpl
repz
addr16
cwtl
fwait
aad
push
jae
or
jp
repnz
xchg
in
in
jne
adc
daa
xor
lods
pushf
pop
mov
idivb
adc
rcrl
lds
sbb
bound
shl
cmc
movsl
ret
insb
mov
mov
jl
and
test
sub
cld
jl
andb
imul
in
adc
or
push
mov
mov
fidivrs
sarl
mov
repz
dec
jne
cmp
mov
dec
adc
repz
push
and
inc
stc
add
mov
gs
aad
sbb
jp
in
fdivs
pop
test
shr
call
or
orb
flds
aam
cmpsb
int
cltd
cvtps2pd
dec
in
repnz
les
push
xor
ja
push
lret
call
shr
fdivrl
cmp
jae
clc
sub
hlt
pop
sahf
stc
cmp
or
or
jbe
inc
scas
jae
push
rorb
clc
movsb
mov
in
jbe
and
mov
or
add
mov
ret
mov
adcb
pop
sub
xchg
mov
mul
xchg
or
mov
and
fsubl
dec
mov
xchg
lret
aam
jmp
fadds
pop
imul
cwtl
pop
inc
popa
leave
seto
adc
pusha
hlt
xor
ret
lret
out
jnp
mov
movsb
cmp
xchg
iret
mov
sub
xchg
dec
jge
xor
cmp
lahf
sbb
xchg
xchg
add
in
mov
leave
jmp
mov
or
xchg
dec
imull
insl
js
addr16
sub
mov
repz
mov
outsl
into
mov
mov
imul
div
and
loope
stc
xchg
pop
inc
mov
fdivr
ljmp
mov
dec
inc
out
lods
dec
lahf
push
mov
loop
push
adc
dec
daa
xchg
in
arpl
loop
jmp
mov
imul
out
stc
add
ret
mov
mov
cmp
dec
aas
mov
pop
lcall
test
fistpll
or
sbb
in
stos
xchg
add
cmp
jge
dec
out
dec
leave
sub
jl
push
insb
sub
add
in
mov
movsb
mov
sub
add
fisttpll
xor
pop
int
mov
sub
imul
div
scas
les
sbb
inc
cmp
xchg
xor
jp
aas
imul
orl
in
insb
mov
sahf
push
pop
fstpt
stos
xchg
int3
lods
fucomp
into
jno
movsl
pop
sbb
insb
sub
mov
pop
cmp
fnstenv
lret
sbb
sub
pop
leave
pop
or
jg
xor
mov
test
pushf
test
xchg
rcll
test
mov
add
bnd
lods
xchg
into
push
je
add
add
cmc
add
mov
adc
mov
push
jmp
mov
ds
inc
roll
lret
xchg
adc
cmp
push
inc
repz
add
sahf
fs
ljmp
pop
loopne
dec
mov
or
shlb
xorb
pop
or
add
in
out
adc
out
je
sahf
sub
adc
jecxz
lods
fcompl
call
mov
add
xor
sub
or
dec
push
shlb
fsubrs
jecxz
int
and
mov
fistl
pop
test
adc
jae
data16
cmc
or
ss
dec
inc
out
imull
mov
outsl
popa
jae
idiv
adc
mov
push
sbb
add
ss
add
or
mov
sub
cli
mov
jg
arpl
mov
fldenv
rorb
inc
mov
stc
sub
or
shl
or
add
sbb
outsb
jmp
repz
cmp
sahf
aaa
in
jns
push
fwait
ja
cmpsb
aaa
cmp
sub
imul
repnz
push
sbb
faddl
pop
inc
jle
jg
xor
push
xchg
dec
sarb
cmp
out
mov
movntq
out
lods
push
jge
mov
sub
mov
pop
add
sbb
jecxz
pushl
test
mov
mov
mov
cmpsl
jae
lret
jmp
mov
test
inc
outsl
fisubrs
xor
bnd
insl
cs
dec
loop
in
push
clc
xchg
mov
insl
jnp
and
dec
dec
sbb
movsb
shrb
dec
inc
insb
cmp
mov
and
mov
or
mov
mov
popa
dec
mov
mov
jmp
mov
or
inc
push
imul
xchg
stos
icebp
leave
sbb
mov
movsb
sbb
incl
mov
or
dec
idivb
lahf
aaa
pop
inc
ret
adc
lahf
in
and
bound
loop
xlat
adc
repz
mov
stc
mov
cmp
dec
add
sbb
outsl
push
mov
adc
dec
or
mov
testl
push
cmpsl
test
and
lods
lcall
popa
or
push
aam
inc
mov
arpl
imul
movsb
shlb
rcrl
cld
xor
fwait
daa
jnp
ficoms
mov
and
add
icebp
nop
cltd
movsl
push
ret
shlb
jne
jmp
cli
sbb
mov
pop
fisubl
jmp
xchg
mov
cmpb
outsb
pusha
mov
pop
leave
pushf
jne
inc
sbb
push
test
pop
push
and
test
xor
je
testl
cs
idivb
jb
jge
mov
stos
jmp
es
adc
xchg
cmpsb
adc
add
mov
dec
test
jns
mov
lret
xor
or
adcl
repz
xchg
xchg
cmp
lock
insb
dec
inc
cmp
int3
sbb
mov
xchg
lea
cmp
xor
pop
out
jbe
xchg
daa
xor
or
add
stos
aam
hlt
dec
fsts
adc
aam
fidivrs
sbb
cmp
cmp
adc
imul
fidivl
lcall
xchg
pop
cld
xchg
add
pop
pop
mov
pop
insb
xchg
js
pop
mov
push
js
push
bound
mul
push
add
or
mov
in
out
sub
cmpl
sub
enter
mov
mov
push
lock
mov
scas
test
cmp
cld
and
xorb
imul
sub
push
pop
adc
insl
ret
loope
rcrl
xchg
push
mov
adc
jge
test
push
jmp
in
into
add
dec
movsb
or
push
sti
lahf
aam
mov
arpl
leave
inc
sub
lcall
arpl
or
add
sub
ss
or
and
je
fs
inc
scas
jp
call
mov
jge
cmp
div
sbb
ja
fucomi
jg
orb
shrd
push
rep
and
stos
jae
jp
rorb
cli
adc
ret
fnsave
shl
stos
mov
xor
jl
xor
jns
xor
shll
push
push
in
rcrl
icebp
push
inc
xchg
add
cmpsl
insb
ljmp
mov
insb
jns
popf
movsl
mov
mov
insb
test
adc
clc
and
int3
mov
ret
push
add
and
xchg
jne
add
mov
pop
fsincos
movsb
in
pop
inc
xor
cmp
jns
sti
pop
xchg
outsb
jae
adc
in
lods
and
out
inc
pop
add
ljmp
test
pop
repnz
out
insl
ss
push
scas
aad
mov
inc
pop
mov
mov
mov
lods
int3
mov
xchg
faddp
repnz
push
jns
stos
xor
bswap
mov
xor
adc
sub
xchg
inc
lea
jne
js
adc
daa
fwait
lret
ja
gs
xlat
xchg
iret
ret
pop
lret
push
mov
push
dec
inc
aam
xchg
sahf
push
mov
insl
inc
insl
xor
mov
push
lods
push
and
fs
arpl
int
lahf
inc
test
xor
jmp
mov
lahf
sbb
mov
or
sub
cmp
rcrl
add
je
scas
jnp
jge
popa
add
lcall
mov
inc
mov
test
imul
sti
arpl
ja
shl
mov
adc
dec
ret
push
sbb
push
sub
pop
dec
jns
out
inc
lea
out
punpckhwd
jb
negl
pushf
gs
enter
enter
ja
lock
pop
insl
int3
outsl
push
loopne
mov
sub
push
bound
cmp
fnsave
jno
xlat
cmpsl
test
test
dec
xor
sub
ret
cmc
rolb
cmp
aaa
rep
jnp
loope
push
sbb
pop
mov
in
mov
adc
das
or
push
sti
sbb
ljmp
push
cmpsb
mov
addr16
test
cwtl
cltd
sub
enter
mov
sub
cltd
pop
mov
out
mov
hlt
outsb
or
stos
aad
or
adc
pop
sub
cltd
mov
xchg
test
pop
xchg
int3
fwait
ret
lahf
lea
and
and
xchg
test
adcb
or
jge
fwait
in
cltd
popaw
inc
lods
out
sbb
test
roll
dec
jo,pt
xchg
jp
sub
xchg
clc
push
xor
or
std
adc
sahf
mov
pop
inc
or
add
mov
and
into
mov
stc
cwtl
pop
in
sbb
fucomi
mov
imul
in
inc
jns
stos
fidivl
jne
mov
andl
jo
adc
dec
dec
out
ficoml
cmp
popf
ljmp
repnz
xchg
pop
insb
iret
in
cmp
sbb
push
inc
scas
xor
shlb
leave
jbe
or
sub
xlat
in
jno
mov
or
sub
jmp
popa
dec
inc
jae,pt
sbb
xchg
lahf
dec
mov
jp
push
add
and
arpl
ret
mov
ret
push
insb
leave
sbb
pop
cmc
repz
mov
pushf
cmp
jp
in
lods
inc
in
pop
xchg
push
xor
bound
leave
sub
int
xor
jbe
stos
jp
leave
shrl
or
insb
pop
popa
jp
jae
negb
pop
in
pop
mov
xchg
fdivs
arpl
scas
es
lea
or
js
mov
aam
cmpsb
add
out
in
jb
lock
fdiv
imul
imul
inc
mov
ss
and
mov
insb
and
fwait
mov
movsb
es
mov
mov
adc
jnp
loope
jg
push
popa
push
and
das
jnp
mov
in
repz
dec
mov
push
jns
adcb
outsb
shl
adc
loope
in
das
arpl
scas
push
mov
pop
leave
pop
dec
jl
jle
insb
sbb
push
jnp
bound
mov
pop
cmp
popa
lret
nop
or
fs
or
sub
or
stos
adc
int
cmpsb
lods
pop
push
lret
jnp
test
mov
mov
scas
sbb
pop
insl
into
jle
and
sub
inc
inc
jnp
in
test
sbb
pop
pushf
in
inc
outsl
data16
movsb
filds
fwait
mov
sbbl
dec
xlat
dec
xchg
in
push
mov
lods
xchg
cld
out
jnp
addr16
stos
dec
inc
aas
adc
pop
pop
pop
lods
imul
mov
cli
pushf
nop
mov
mov
mov
notl
inc
jmp
mov
js
and
aas
pop
add
jge
cli
ret
push
rcll
scas
loop
and
xor
pusha
add
mov
mov
iret
pop
xor
inc
inc
xor
jecxz
adc
add
adc
pop
sbb
add
or
mov
jecxz
ss
ret
inc
repnz
lods
lahf
in
jb
inc
test
loopne
outsb
and
lods
addr16
mov
call
xchg
je
pop
pavgb
fisubs
adc
sub
repnz
xor
mov
cmp
inc
jnp
mov
inc
jge,pt
adc
lret
add
scas
test
xchg
pop
mov
push
hlt
and
and
clc
mov
out
or
jl
push
add
lea
jnp
add
movsb
jb
or
aas
push
inc
xchg
pusha
sahf
test
fistl
xabort
mov
push
insl
orb
fs
lock
jg
mov
xchg
cmp
mov
negb
sbb
nop
rcll
xor
push
dec
test
pop
jge
sbbb
mov
in
xor
lods
lret
xchg
xchg
test
in
and
jp
or
js
outsb
xor
push
in
xor
das
and
outsl
aad
jb
xchg
nop
movsb
inc
push
sahf
mov
lcall
jmp
stc
in
dec
daa
or
add
aaa
aas
mov
arpl
jns
in
sahf
or
cwtl
iret
shl
pushf
lahf
nop
fcom
mov
call
jns
pop
jl
sets
jmp
push
xor
sbb
movsb
repz
mov
dec
mov
test
sub
sbb
xchg
inc
js
shlb
push
xchg
repz
pusha
jne
add
repz
stc
mov
push
in
and
mov
jns
test
xor
int
pop
test
cld
push
cmp
adc
sbbb
clc
test
cmp
push
aam
outsb
fmuls
fwait
xrelease
mov
rclb
mov
sbb
jbe
pop
mov
xchg
dec
lods
mov
add
cmp
adcb
sub
lds
test
sbb
rorb
xor
push
mov
add
push
leave
dec
pop
inc
jo
js
in
imul
imul
lahf
pop
mov
cmc
adc
sbb
cld
mov
imul
enter
cmpsl
movsb
or
stos
push
mov
dec
cld
dec
scas
mov
insb
fldenv
dec
rcr
mov
push
adc
leave
scas
pop
cltd
push
lahf
das
subl
cmp
xchg
sbb
push
mov
xchg
lea
cmp
cld
sub
jge
outsb
sbb
addr16
rorl
pop
out
sbb
adc
ja
mov
int3
and
in
leave
dec
jmp
fimuls
jg
dec
popf
inc
rclb
push
or
mov
or
inc
push
xchg
jp
imul
mov
sti
imul
jb
cmpsb
sub
mov
push
cmp
sti
dec
pop
gs
mov
bound
popa
in
shrl
pop
jl
lcall
sbb
mov
test
stos
inc
and
repz
push
add
cmp
test
push
fs
push
push
ds
jbe
leave
inc
xorb
fcomps
sbb
pop
js
adc
out
rorl
sbb
in
outsb
stos
push
jle
mov
sahf
push
outsl
pop
push
cs
clc
ror
cmpsl
cltd
shl
pop
dec
lods
and
aad
je
shlb
loope
loope
cmp
cmp
into
into
aad
xor
xor
mov
mov
and
cmp
test
cmc
inc
fiaddl
sub
mov
sub
jno
push
insb
roll
fdivl
lahf
enter
sub
in
in
jno
jae
movsl
test
mov
pusha
negl
mov
lcall
mov
lcall
adc
xchg
cmp
lock
mov
cld
dec
or
addr16
add
mov
aad
aam
test
adcl
or
rcrl
cmp
fldenv
xor
sub
mov
dec
repz
enter
push
lret
push
popf
cmpsb
jp
jno
and
iret
xor
push
mov
orb
sahf
ret
jle
mov
cmp
pop
cs
jb
xor
sub
xchg
leave
in
rclb
fdivrl
push
mov
inc
cmp
xor
cld
inc
mov
ret
lds
aam
mov
shll
sbb
test
cmp
push
jecxz
cmp
fwait
sbb
add
in
xchg
mov
lock
xor
pop
pop
in
lods
out
sahf
test
test
xchg
sahf
mov
mov
das
jno
xchg
mov
roll
xor
icebp
add
test
inc
repnz
adc
dec
push
aam
js
jge
mov
cltd
mov
leave
aaa
sub
mov
xor
mov
jb
in
push
repnz
test
out
clc
fucomp
popf
inc
divl
sahf
sub
pop
into
notl
popf
pop
adc
push
push
mov
gs
inc
jbe
add
sbb
xlat
fwait
xor
fdivl
inc
cmp
and
popa
ret
in
jae
pusha
loope
pop
imul
mov
push
mov
ss
stc
leave
xchg
and
sub
fsts
pop
lock
cwtl
je
pop
or
rolb
sub
ljmp
aaa
or
cli
or
push
into
sbb
divb
shl
adc
adc
push
mov
enter
repnz
test
xchg
adc
loopne
test
std
sbb
xchg
mov
inc
jge
lds
popf
mov
gs
sbb
dec
fs
addr16
frstor
pop
dec
cld
push
mov
hlt
jg
xchg
pop
jbe
cwtl
frstor
or
push
xor
push
inc
sub
xor
rorb
mov
movsl
push
push
xchg
or
add
inc
sub
xor
and
jmp
fs
daa
or
xchg
stos
jne
sbb
add
or
xor
jb
fldcw
sbb
pop
lahf
jle
jbe
in
imul
jle
inc
cli
or
jecxz
adc
int3
clc
mov
lds
add
cwtl
xchg
cmpsl
mov
in
push
jecxz
adc
data16
out
push
fstl
cmpsb
daa
rol
subb
ret
add
sbb
pop
lret
pop
in
loopne
int3
xor
in
pop
lods
addb
jmp
in
mov
dec
rclb
dec
or
cmp
stos
xor
cmp
and
aad
or
add
test
sbb
fs
cmpsb
in
cmc
lods
fsubl
cmp
cmp
mov
push
cmp
imull
mov
sub
pushf
pop
fcmovnu
adc
jbe
subl
insb
jbe
aas
mov
pop
lock
sub
cmp
cld
push
xchg
xchg
or
pusha
sbb
ljmp
cwtl
in
lds
ss
cmp
insb
aam
inc
and
aaa
xchg
cmc
sub
stc
push
add
push
pop
inc
dec
sub
jp
out
and
dec
mov
loop
mov
mov
scas
cmp
cmpsb
xor
or
sbb
loope
in
push
inc
mov
cli
dec
pop
je
and
mov
mov
pop
ret
rcl
and
dec
xchg
sub
shl
aaa
jl
cmc
aaa
push
sbb
mov
sub
jns
inc
sahf
out
fs
call
add
mov
push
mulb
inc
mov
loop
mov
cmc
mov
xor
fsubrs
insl
outsl
loopne
pop
adcl
addr16
fcoml
push
dec
push
jl
insb
mov
pop
add
fs
xor
lahf
mov
call
aas
scas
push
jl
and
in
xor
push
outsl
and
cmc
jnp
sbb
or
sbb
push
les
leave
add
repz
icebp
test
xor
pushf
jp
xor
and
sarb
cmpsb
fwait
and
xchg
shl
fists
mov
js
aam
push
jle
jmp
roll
in
jns
mov
rorl
mov
ret
or
add
cmp
std
push
mulb
ss
mov
pop
or
shr
xchg
cmpl
loope
loope
and
or
das
mov
cli
aas
jb
sub
fisubs
xabort
adc
push
sbb
and
mov
cmp
call
sbb
stos
adc
in
add
addr16
fadds
stos
xlat
lds
jbe
mov
add
cmpsb
loopne
jl
cmp
add
pop
cli
mov
out
xor
ret
inc
or
imul
pop
cmp
stos
daa
movsl
mov
fs
fcomps
popf
and
std
cs
sbb
fistpll
sbb
push
in
in
mov
dec
stos
xchg
xor
add
xor
in
sbb
pop
xor
mov
dec
clc
mov
sub
xor
mov
add
lods
xchg
xchg
sti
repnz
cli
adc
ja
adcb
out
sub
andb
add
dec
cmpsl
xor
mov
fwait
in
rcrb
cmpsl
xchg
mov
pusha
icebp
shl
xor
adc
jnp
cltd
xor
test
jae
inc
mov
xchg
jmp
jne
mov
gs
cs
test
fcoms
dec
pop
loopne
imul
mov
and
mov
shlb
xchg
popl
mov
ljmp
pop
adc
inc
gs
jp
sahf
mov
sub
sbbb
pushl
mov
sub
xor
fisubrl
lret
in
push
jb
std
daa
sub
cwtl
stos
jl
mov
in
call
outsb
test
cmc
mov
mov
xchg
std
stos
cmp
mov
and
jb
pop
mov
mov
sarl
mov
pop
loop
xor
dec
movsb
add
inc
cmp
and
outsl
movsb
out
call
sub
or
adc
dec
sub
in
iret
add
add
jmp
mov
xchg
push
lret
adcl
push
mov
iret
rcrl
jns
mulb
adc
call
jnp
jecxz
ficomps
bswap
sub
xchg
mov
xchg
fcomp
mov
or
jp
enter
push
lret
jo
inc
std
adc
xchg
inc
mov
dec
das
xor
fisttpll
dec
ja
insl
arpl
or
fwait
movsl
mov
dec
jg
adc
pushf
dec
clc
dec
leave
adc
sub
movsl
xor
outsl
mov
xchg
ret
push
lock
xor
adc
jg
or
jo
jl
cmp
sbb
xchg
and
les
imul
int3
bndldx
add
nop
jmp
jecxz
arpl
dec
jb
jns
sbb
sahf
push
mov
fwait
mov
test
insl
call
mov
xchg
repz
movsl
imul
push
pop
cmc
xchg
insl
and
xor
cmpsl
roll
sti
push
into
jns
cli
shlb
mov
cs
out
adc
jne
push
push
pop
and
pushf
in
cmp
int
cli
inc
rcrl
dec
sub
xor
sbb
cltd
rorl
in
adc
outsb
fsubl
lods
dec
mov
shll
adc
push
ds
stos
lcall
shlb
or
idivb
xchg
dec
jbe
and
and
xchg
iret
pop
xor
je
dec
shrl
mov
insl
push
rclb
cwtl
ds
pop
adc
js
mov
stos
out
mov
cmp
jns
jp
cmp
pop
add
dec
ss
mov
xor
mov
mov
mov
mov
sbb
fadds
dec
jns
or
fbld
ss
aas
jp
inc
pop
shll
push
push
data16
orl
lret
inc
fildl
add
fcmovnu
jge
add
and
jg
mov
mov
and
cmp
je
loopne
xor
cli
shll
lret
test
cmpsl
outsb
daa
testb
inc
xor
loop
adc
mov
sub
pop
int3
test
in
jp
xchg
mov
fiaddl
mov
mov
xor
fisttpll
push
xchg
data16
jecxz
mov
xor
pop
aas
sub
cs
or
inc
mov
add
mov
lds
jne
push
mov
adc
mov
pop
fldl
cltd
js,pn
cs
in
mov
sahf
add
jg
int3
sbb
mov
mov
pop
cld
mov
pushf
aad
in
mov
roll
xor
jmp
mov
dec
and
ret
pushf
mov
pop
aam
mov
inc
dec
enter
cmp
xchg
rcrb
push
cmp
adc
add
and
adc
pop
pop
ret
add
add
insl
dec
cli
es
in
jmp
jnp
xchg
repnz
cmp
cmpsl
lret
cli
aam
sbb
pop
push
add
pushf
imul
or
add
mov
push
les
dec
cli
flds
push
loop
jne
clc
pop
divb
jno
aas
dec
ja
or
mov
rclb
js
nop
test
sbb
outsl
lret
cli
cld
jae
mov
movsl
push
or
bnd
push
imul
mov
inc
cmc
xor
insb
sbb
cmp
cmp
ds
mul
stc
hlt
sub
mov
cmc
pusha
and
movsb
out
sub
fidivrs
fidivrl
jb
mov
inc
jbe
loop
dec
jge
pop
daa
clc
dec
fisubs
inc
pop
ds
insl
test
sbb
test
add
mov
imul
pop
or
aam
xor
scas
pusha
inc
and
shrb
in
inc
ret
mov
mov
aas
repnz
and
jmp
test
rcll
or
cmc
mov
sbb
iret
mov
mov
cmpsb
and
push
sub
inc
fnclex
inc
adc
ret
inc
imul
add
repz
cltd
xor
sti
dec
ss
std
clc
fadd
pop
or
dec
dec
mov
divl
mov
inc
pop
mov
int
sbb
js
adc
push
jle
out
ss
fs
aas
outsb
sbb
js,pt
in
jne
call
xchg
stc
mov
and
add
mov
inc
pop
xchg
fildll
test
dec
dec
test
jo
icebp
and
pop
add
xor
imul
adcb
mov
jnp
enter
jecxz
push
push
cmpb
les
mov
mov
ljmp
pop
out
jecxz
mov
frstor
xchg
adc
ja
in
out
xor
scas
add
mov
add
add
pop
ds
mov
push
jb
loope
fucom
or
cmp
arpl
loopne
adc
clc
push
arpl
in
push
jl
or
xor
fistpll
int3
imul
scas
sub
clc
mov
ret
fbstp
ljmp
fnsave
repz
cltd
cmp
aam
sbbl
lods
addr16
or
mov
mov
add
mov
fxch
hlt
fildll
mov
pop
mov
pop
leave
jne
shl
adc
mov
mov
cs
pop
lahf
cs
sbb
test
int3
or
pop
ret
fsubrl
es
jp
cmpb
sub
outsl
jl
adc
sub
dec
cwtl
xchg
sbbb
mov
mov
xor
jb
inc
mov
mov
neg
jecxz
sahf
inc
add
lea
loop
aaa
dec
cli
cwtl
dec
das
into
push
dec
jbe
sub
outsl
mov
fcomip
jl
ljmp
repnz
inc
push
gs
maskmovq
xchg
adc
in
sbb
incb
repnz
pop
fdiv
lock
dec
pop
adc
mov
xchg
sahf
mov
cmp
fiadds
insl
adc
insb
push
sbb
push
mov
jg
pop
cwtl
mov
mov
gs
popf
pop
and
ret
push
mov
sbb
and
mov
and
ja
mov
xchg
ret
jo
rcl
xchg
jmp
mov
jae
xor
jl
jae
addl
aaa
nop
mov
adc
pop
sbb
pushf
pop
shlb
pop
dec
inc
dec
call
roll
divb
dec
ret
xchg
js
mov
ss
inc
add
xor
scas
mov
pop
inc
sbb
in
push
shrl
dec
or
out
pop
dec
sbb
sub
push
mov
clc
xchg
rolb
xor
inc
push
sub
push
inc
sub
pop
dec
les
sub
test
jecxz
aad
inc
out
les
test
push
dec
mov
dec
test
lahf
add
cmp
xchg
aad
push
xlat
es
adc
cld
rorb
cli
lods
jmp
dec
ja
xchg
pop
xor
movl
test
loope
inc
rclb
inc
lret
lret
es
xor
dec
fimuls
cmp
adc
jb
cmpsb
adc
xchg
jl
push
call
data16
icebp
ficompl
aaa
lcall
and
ljmp
mov
movsb
push
jle
xor
insl
data16
add
sbb
cs
pop
and
nop
cmp
in
in
sub
sbb
enter
mov
mov
lock
fdivrp
push
mov
int3
jns
mov
jmp
lahf
addr16
ss
or
add
push
pop
mov
sub
add
loopne
ss
popa
push
pop
add
pop
mov
dec
and
daa
fistpl
int3
outsb
imul
xchg
fiadds
or
inc
sbb
xor
setnp
xchg
test
mov
out
mov
lds
cld
adc
lret
cmp
cmp
jecxz
das
or
jo
sbb
clc
aaa
lock
cli
push
sbb
and
int
mov
add
shrb
mov
lods
mov
ss
adc
mov
push
leave
xor
mov
pop
cltd
cmc
pop
push
out
ret
mov
mov
mov
add
pusha
sbb
sbb
int3
cld
inc
mov
cwtl
enter
enter
jne
notb
enter
les
xor
lahf
push
jnp
movsb
cld
popf
mov
fisubs
clc
repz
and
xchg
or
mov
push
rcl
cwtl
add
bound
shll
pusha
dec
adc
repnz
enter
roll
imul
repz
and
cmp
xchg
jge
stc
xchg
fbld
dec
flds
xlat
cmp
ror
mov
inc
cmp
push
sbb
fidivrl
xchg
sub
inc
add
dec
cltd
addr16
imul
insb
cli
mov
jmp
imul
push
and
or
aaa
nop
pop
and
repz
cli
add
fisttps
mov
xor
add
pusha
mov
push
inc
xor
cmp
fwait
push
mov
in
and
xchg
or
addr16
in
addr16
aas
das
push
jbe
test
sahf
adc
dec
pusha
pop
jl
ret
adc
push
xor
adc
and
subb
cmp
inc
mov
and
aas
mov
sub
lret
push
jne
hlt
ret
add
ffree
mov
mov
and
jne
xor
xlat
jbe
movsl
inc
jno
shlb
adc
fisubl
jl
cmp
add
mov
sbb
sbb
repz
lea
popf
adc
xor
fdivs
push
push
mov
inc
cmc
test
lds
pop
cwtl
inc
add
subl
movsl
sub
in
fs
or
les
insl
mov
sarl
mov
and
ljmp
jl
push
inc
lret
dec
stos
ret
push
das
push
cmpsl
xorl
xor
pop
stos
dec
adc
cmp
imull
cmpsl
out
enter
pop
xchg
mov
cmp
mov
fidivl
int3
dec
repnz
and
inc
insb
dec
mov
shl
sub
lret
jo
and
subl
xor
into
bound
inc
lods
pop
imul
and
aas
xchg
mov
cmp
mov
pop
dec
bound
jmpw
lret
mov
jnp
mov
mov
xlat
xchg
pop
dec
or
imul
in
ror
add
push
sub
fwait
int3
add
cli
bound
dec
in
insb
jae
xchg
ret
cmc
sarb
inc
lcall
popf
dec
push
mov
or
mov
mov
push
cmovs
mov
sbb
mov
loopne
hlt
fstpt
scas
mov
imul
les
out
insb
pop
and
cli
jo
adc
jb
jmp
pop
mov
stc
cli
xchg
in
add
xor
mov
dec
or
imull
push
mov
in
hlt
mov
cmc
sbbl
addr16
push
pop
adcl
hlt
mov
mov
icebp
pusha
jb
mov
xchg
clc
cld
scas
push
mov
movsb
movsl
icebp
mov
inc
jns
shrl
add
push
shrl
mov
sti
popa
fstl
push
out
push
aad
jb
cmpsl
mov
pop
dec
pushf
jns
fidivrs
sbb
adc
sub
mov
xchg
sbb
es
call
jp
push
test
mov
cmp
xchg
mov
dec
aad
adc
andl
ljmp
imul
and
mov
inc
adc
jbe
mov
in
push
mov
rcrb
gs
stc
push
bound
and
pop
cs
stos
adc
xchg
and
lock
dec
xchg
out
lret
or
and
sub
fistpl
sbb
or
repz
call
std
add
pop
das
or
ljmp
ljmp
lds
mov
or
jns
daa
sahf
daa
insl
call
imul
pop
lock
lret
scas
dec
fisubs
xchg
dec
mov
push
pop
inc
dec
popf
xor
xor
ret
add
icebp
lds
test
popa
mov
sbb
cmp
add
pop
arpl
pop
mov
sahf
iret
repnz
pop
rcl
sub
push
into
psubsw
daa
lret
mov
jns
addr16
jbe
lcall
addr16
leave
lds
das
sub
loopne
mov
stos
mov
sbb
dec
push
jl
sub
mov
push
sub
out
aam
inc
add
jge
movsb
int
sbbb
jmp
xchg
jle
cmp
addr16
std
jle
xor
rclb
jbe
mov
sbb
xchg
in
int3
cmp
ret
xor
cmp
bound
andl
and
rcll
mov
sbb
add
xor
subl
int3
mov
xor
int3
push
mov
stos
pop
scas
lret
aas
mov
lods
mov
in
mov
cmp
mov
and
pushf
rclb
cmc
mov
js
mov
cld
movsb
or
pop
mov
jo
mov
das
nop
imul
jg
shl
nop
das
cmc
sbb
icebp
dec
and
dec
int
jb
imul
fs
mov
sbb
xor
mulb
fcompl
xor
pop
mov
jb
dec
adc
push
incl
outsb
mov
or
mov
mov
pop
rol
lock
stos
orl
add
sarl
mov
xchg
dec
dec
repz
test
stc
push
or
push
jmp
adc
push
pop
int
loope
call
add
mov
xor
aas
out
jb
cmc
fsubr
in
mov
cmp
push
insl
sbb
leave
lods
out
pop
cmp
xchg
loopne
mov
jbe
sbb
lods
cmp
mov
sbb
addr16
xchg
pop
lahf
or
cwtl
fwait
dec
stc
popf
jae
mov
or
lahf
popf
pop
sub
add
imul
dec
lods
pop
ror
xchg
xchg
mov
pop
js
mov
int
insb
movsl
inc
add
test
mov
aas
cmpsl
vdivps
and
leave
pop
fistl
adc
ss
inc
push
pop
ss
cwtl
and
or
sbb
mov
inc
xchg
out
mov
sub
rcrl
mov
sub
lods
shlb
mov
stos
out
lock
mov
stos
sub
mov
push
imul
outsl
jmp
sbb
inc
fcoms
push
pop
lcall
jl
or
pop
inc
xchg
popa
jbe
cmpsb
inc
jae
adc
push
fdivrs
mov
sub
lcall
rcrl
jo
cs
into
add
lret
and
add
insl
dec
push
in
pusha
out
jmp
out
sub
dec
and
add
inc
pop
lahf
daa
mov
push
jns
aam
mov
loope
test
mov
iret
push
xchg
aaa
pop
xchg
sti
jnp
pop
mov
jne
in
push
jb
orl
rcrb
aam
shrl
mov
scas
pop
mov
jmp
std
outsl
sbb
jmp
jb
sub
push
mov
icebp
pop
aaa
scas
cltd
inc
mov
sahf
dec
lock
mov
ja
ret
lcall
sub
push
negl
push
mull
push
push
mov
imull
movsb
sti
aad
lea
adc
mov
enter
jge
enter
or
icebp
xor
and
dec
nop
aas
shl
cli
push
xlat
cvttps2pi
lods
dec
xchg
sub
mov
xor
movsl
jo
mov
stos
mov
add
std
outsb
xchg
incl
cli
nop
int
push
xor
andb
push
xchg
fiadds
js
dec
clc
push
push
add
loope
cld
add
xchg
jbe
adc
mov
aad
xchg
push
mov
or
sbb
imul
pop
gs
std
ja
mov
leave
adc
cltd
nop
sub
push
push
xchg
notl
jecxz
ss
mov
pop
popf
mov
imul
push
shrb
xchg
sbb
daa
cli
into
nop
fists
push
mov
cmp
es
dec
xor
adc
mov
jbe
adc
int3
adc
lea
pusha
xor
mov
mov
pop
iret
sub
in
sbb
jns
xor
jns
inc
jo
cmpsb
push
jnp
call
insl
pavgb
jg
repnz
sub
pop
jle
ret
out
inc
insl
int3
xor
jmp
or
add
push
out
stc
sbb
pop
pushf
dec
clc
lods
movsl
adc
lods
jp
lea
out
sbb
pop
aas
pop
bound
mov
add
xor
std
xchg
or
test
cmpsb
adc
fnstcw
sbb
outsb
push
jbe
inc
js
mov
pusha
out
pop
cmp
add
lods
push
add
arpl
addb
loopne
dec
adc
jp
pop
bound
pop
mov
sub
jmp
imul
and
mov
test
xchg
inc
movsb
repz
rcrl
sub
lahf
mov
lods
fprem1
aas
mov
jecxz
lock
sbb
mov
cmc
add
sahf
pop
cmp
repz
fildll
adc
ret
add
mov
pop
xlat
mov
fnop
pusha
jns
jb
pop
and
xchg
xor
dec
mov
or
incl
sub
fsubp
or
cmp
lret
cwtl
jecxz
in
stos
push
test
fwait
lret
aam
cmp
jne
adc
sub
or
add
sti
fimuls
les
mov
int3
inc
repz
xchg
push
gs
scas
mov
mov
xchg
mov
pop
xor
cmpsb
add
add
push
sub
add
pop
or
bound
movsl
stos
cmc
jbe
jnp
adc
int3
jae
insl
insl
cmp
stc
lock
jbe
jae
xor
rcrl
lret
and
and
mov
lock
orl
inc
xchg
lret
push
push
movsb
and
lea
dec
pop
adc
sub
pop
shll
jle
nop
mov
bound
subb
lahf
into
pop
adc
and
and
lcall
mov
add
sub
icebp
fcomps
sbb
imul
aam
js
shlb
subl
aas
mov
aaa
movsb
rolb
mov
repnz
or
popf
cltd
addl
xor
push
div
mov
and
add
sub
js
bound
movb
into
mov
fildll
lcall
lret
cmp
pop
dec
dec
aas
xchg
jo
pop
in
jnp
popa
xlat
popf
mov
add
cmpsl
sarl
fwait
push
hlt
int
imul
adc
stos
xchg
test
test
xchg
fcmovnb
faddl
movb
rclb
inc
jmp
or
pop
sub
mov
gs
sub
pushf
push
rcl
mov
push
pop
xchg
lcall
mov
mov
cld
imul
arpl
xorb
mov
mov
into
cmp
nop
push
mov
imul
in
jmp
cmpl
jmp
incl
or
push
data16
orl
or
in
stc
jmp
mov
outsl
mov
or
test
add
push
jns
xor
sahf
lret
gs
jg
push
filds
pop
insb
out
pop
aas
adc
std
fwait
les
fdivrl
jb
imul
fs
shrl
mov
outsb
sbb
repnz
mov
mov
fisubl
bound
fsubrs
xchg
jp
pop
xor
insb
jle
add
xor
fs
push
popa
jge
call
push
mov
push
cmpsl
sbb
sbb
adc
out
int3
xor
cld
les
push
pusha
out
xchg
shr
xchg
les
dec
sbb
ja
cmp
sbb
rorb
mov
lods
jae
shll
dec
add
xor
loop
cli
stc
je
xor
fs
iret
lods
popf
js
and
cli
xor
dec
add
xor
call
pop
sub
mov
jb
loope
push
xchg
xchg
push
xor
out
jbe
inc
test
mov
fisttpll
mov
mov
cmp
pop
adc
mov
xor
lods
fisubrl
aaa
mov
shrb
mov
adc
fcmovnu
inc
cmpsb
enter
cmc
insb
out
sbbl
cmp
and
xchg
sbb
xchg
movsl
stos
sub
xor
sub
add
in
jle
inc
ret
dec
je
fldt
dec
mov
pushl
adc
mov
mov
fisttpl
mov
in
std
xor
lcall
addr16
jo
cwtl
adc
push
sbb
fldt
mov
jmp
data16
dec
jp
pop
fadd
in
aam
mov
mov
mov
loope
and
test
push
sub
lock
cmp
add
sub
mul
jmp
mov
es
cmpsb
or
inc
pushf
mov
push
je
mov
dec
test
loope
jg
add
andb
dec
add
jne
in
test
sbb
cmp
rep
mov
adc
js
addr16
nop
push
jnp
ret
pop
in
test
push
xlat
cmp
aad
or
movsl
dec
sub
rcr
add
lods
fmuls
pop
add
adc
cmpsl
add
inc
clc
and
sub
add
mov
insl
adc
adcb
xchg
test
cld
jb
mov
ret
push
push
aaa
push
or
pop
mov
movsb
icebp
cmp
and
sbb
adc
retw
in
pop
ret
push
adc
and
push
mov
xor
pusha
cmc
fisubl
and
imul
or
mov
imul
lahf
jle
ja
mov
out
sbb
std
cmp
cwtl
add
pushf
add
je
iret
je
push
xchg
sub
or
sarl
lods
insb
fcmovnu
mov
add
stc
mov
and
test
sbb
xor
push
ljmp
fcomps
dec
imul
bswap
je
inc
mov
lea
inc
jg
scas
data16
jp
fsubrp
mov
js
mov
insl
ja
ljmp
fstp
cld
ss
mov
pop
test
call
sub
xor
mov
jb
sti
enter
mov
and
adc
pop
jmp
mov
push
xchg
pop
dec
cmc
inc
xchg
or
shr
push
push
jb
inc
lahf
fistpll
mov
push
frstor
and
loopne
ljmp
daa
popf
jo
popa
cmp
mov
pop
push
fwait
dec
xchg
adc
aaa
xlat
mov
mov
lahf
pop
xor
inc
fnstsw
mov
repz
xchg
and
xchg
shrl
lret
or
inc
inc
sub
sahf
aam
jmp
loope
adc
orps
pop
cmp
mov
and
aad
ret
adc
ss
das
icebp
push
mov
ljmp
outsl
mov
mov
push
iret
ljmp
mov
or
xor
push
shll
leave
movsb
xor
pop
outsl
cmp
push
clc
xor
loop
adc
mov
mov
je
imul
sbb
jge
xchg
fisttpl
adc
xor
inc
sbb
xlat
xchg
fabs
stos
loopne
add
insb
out
xchg
push
xlat
test
repnz
xor
ud0
out
lcall
mov
pushf
lret
fisubrs
imull
out
xor
movsl
sbb
mov
lods
cli
movsb
shll
mov
xchg
xchg
dec
xor
in
fbld
mov
and
mov
in
popa
arpl
cmp
jge
jae
jbe
ficompl
cmp
mov
pop
imul
popa
clc
leave
add
andl
cwtl
into
xchg
idiv
pop
mov
pop
mov
movsl
test
dec
cwtl
cmp
dec
xor
xor
stc
hlt
pop
stos
enter
mov
push
inc
push
jg
adc
stos
xchg
and
stos
push
xchg
mov
adc
clc
cmp
jge
add
in
xchg
mov
shll
xor
adc
push
push
mov
stc
decl
and
inc
shlb
xchg
fwait
cmc
sahf
and
int3
in
aam
cmpsl
es
mov
xchg
push
lock
mov
filds
outsl
mov
ficomps
pop
mov
in
inc
gs
inc
or
mov
movsb
cmp
jbe
or
imul
mov
jae
xchg
test
rolb
movsl
hlt
or
nop
cld
popf
xor
rol
pop
mov
sahf
mov
adc
and
mov
and
into
cld
sbb
pop
je
push
pop
mov
movsl
lods
pop
popf
popa
outsl
jbe
idiv
xor
mov
outsl
ljmp
sub
adc
cli
xchg
adcb
inc
push
ss
cmpsb
test
sbb
jge
iret
int3
xor
xchg
xor
push
and
decb
xchg
fcoms
adc
aas
cltd
mov
lods
pop
flds
inc
bndldx
int3
xchg
mov
sahf
pop
lcall
mov
out
jno
call
rcl
les
mov
or
mov
mov
push
sub
inc
notb
std
addb
mov
sub
sbb
dec
or
jmp
sub
shrl
mov
sti
das
int
xchg
add
lea
jne
stc
sahf
addr16
insb
test
hlt
int3
sub
adc
leave
and
cli
nop
fcoml
jmp
std
xor
popf
mov
dec
or
in
ds
push
mov
out
dec
or
cmp
push
clc
in
dec
sub
jle
es
into
mov
xor
icebp
fisttpl
push
push
scas
cmp
inc
add
push
test
aam
pop
cmpsb
xchg
cmpsl
lods
shl
adc
sahf
rcr
outsl
xchg
ljmp
mov
les
mov
divl
gs
push
push
jge
dec
stc
or
sub
mov
clc
out
jp
ret
js
iret
adc
jmp
lods
mov
out
pop
add
add
aad
cli
add
mov
sub
add
es
cmp
das
inc
xchg
andb
mov
mov
pop
aaa
inc
lods
mov
hlt
pusha
or
movsb
jo
lods
xlat
cwtl
das
mov
mov
leave
mov
dec
jle
add
and
es
movsb
dec
mov
jl
lcall
mov
cmp
jl
add
add
xchg
outsl
xchg
fisubs
into
mov
add
pop
push
std
sbb
loope
lock
daa
sub
push
aaa
int3
inc
fcmovne
andl
lock
and
orb
sub
in
inc
adc
orl
rcrb
fisttps
push
mov
push
xor
and
into
sub
add
add
and
mov
int3
push
data16
outsb
fwait
daa
jle
movsl
popf
pop
movl
sbb
push
sbb
std
iret
jns
jae
jle
jle
popw
insb
ds
out
and
sbb
cwtl
mov
mov
imul
push
out
out
mov
loope
sub
inc
and
ret
inc
scas
cwtl
jae
cmp
pusha
mov
fwait
jecxz
xor
and
stc
call
movsb
cltd
clc
je
pop
ret
pop
in
sub
inc
lahf
mov
hlt
mov
flds
mov
cmc
test
xchg
sub
pop
lods
gs
fmull
push
mov
test
loop
mov
into
lods
mov
test
xor
shlb
mulps
pusha
xchg
xor
jns
daa
repz
add
xor
pop
pmaddwd
and
mov
ds
divl
jmp
xlat
fcmovb
sub
inc
lods
or
sub
or
lods
push
pop
cmp
shl
or
test
js
lcall
xlat
cli
enter
lods
xchg
mov
adc
xchg
push
adc
push
push
inc
ja
mov
xchg
push
out
emms
scas
add
sub
dec
push
inc
mov
jp
rorb
out
jp
bound
push
push
dec
mov
and
sbb
jo
lods
sub
mov
clc
iret
addl
cmp
enter
cmp
xor
add
and
adc
into
cwtl
jmp
and
mov
imul
fdivr
inc
arpl
lods
hlt
inc
sbb
cmpsl
je
rol
jb
xchg
inc
sub
repz
ja
push
lahf
sub
push
mov
xlat
pop
jl
lds
lds
ja
fsubp
fsubr
cmc
mov
or
mov
pop
into
jmp
jo
and
push
lcall
sarb
shlb
es
sbb
sbb
sbb
pop
cs
and
push
xchg
fwait
xchg
shlb
cmc
inc
fcmovnu
out
iret
pop
orb
fcmovne
mov
xchg
xor
dec
dec
ja
jge
inc
or
jne
cmp
dec
mov
sbb
repz
mov
mov
mov
inc
xlat
push
adc
sbb
xchg
repnz
popf
xchg
add
enter
ljmp
lret
add
xchg
lret
cmpsb
mov
jo
ds
adc
into
xor
mov
mov
sub
or
dec
mov
aas
call
push
ficompl
jae
stos
push
das
xchg
arpl
addr16
push
mov
push
sahf
std
xchg
fsubs
mov
pop
push
in
rolb
adc
cmp
pop
in
dec
xor
xor
jmp
add
pop
xchg
xchg
push
mov
cwtl
and
shll
ret
xor
cmp
pop
fstps
xor
cld
pop
or
sahf
pushf
popf
inc
mov
dec
clc
mov
xor
jg
and
xchg
or
xchg
frstor
movlps
pop
jb
sub
gs
enter
test
jp
je
push
and
jmp
lods
inc
adc
sub
jnp
jmp
push
leave
pushf
adc
jl
in
sub
mov
das
cmpsl
push
pop
jbe
and
inc
fwait
xchg
mov
imul
scas
mov
mov
pop
or
loopne
jg
mov
pusha
xchg
sbb
jle
sub
inc
pusha
in
jns
push
jmp
push
ds
mov
adc
test
sub
repnz
mov
jnp
data16
loopne
scas
outsl
adc
shufps
cmpsb
xor
out
jo
cwtl
in
subl
loop
sbb
sbbl
sti
mov
dec
cltd
dec
cmp
jo
cwtl
dec
or
mov
mov
mov
cmpsl
dec
loopne
mov
xchg
in
pop
call
cmpsl
pop
in
sub
gs
sub
int3
aaa
cmp
pop
dec
sub
mov
xchg
or
dec
xchg
shll
mov
sbb
arpl
nop
int3
fildl
enter
push
add
add
xchg
in
xchg
jnp
adcl
pop
jae
mov
mov
xor
nop
loope
lahf
icebp
scas
pop
aam
or
arpl
cmpsl
push
or
push
cltd
and
cmpsl
inc
loop
jb
loope
push
and
ret
stc
outsl
push
mov
dec
aad
je
aaa
sub
outsb
cmpsb
mov
pushf
test
rolb
lret
fiadds
sbb
inc
cmp
mov
jb
repz
cli
jb
fs
jge
push
mov
push
xor
mov
and
sub
adc
or
xchg
shll
nop
in
and
or
dec
push
scas
xchg
int3
pop
movsb
pop
push
mov
fdivs
cmp
mov
pop
je
mov
out
shrb
dec
mov
push
rorl
and
lret
shll
icebp
xor
mov
mov
add
mov
adc
sahf
inc
fwait
sub
das
jmp
jo
jl
sub
jnp
sub
sub
mov
adc
pop
aad
jo
cmp
jle
pop
fs
and
sub
loop
push
push
enter
leave
add
jo,pn
imul
cmp
push
testb
sahf
lcall
insb
in
xor
and
push
ljmp
aam
stos
push
xchg
btc
mov
sub
xor
pop
rorl
mov
jo
xor
movsl
addl
dec
je
leave
mov
dec
loop
pop
es
jb
jmp
es
pushf
cld
mov
ss
and
cld
cmp
pop
cmpsb
fidivs
sub
shll
mov
stos
and
bound
lcall
dec
mov
subb
jmp
jns
push
cli
sbb
into
and
mov
xor
shrl
and
jmp
lahf
cmp
and
and
adc
mov
mov
mov
iret
cmp
cmp
xor
incb
fs
loope
push
add
cmp
lds
mov
ss
je
fst
xchg
push
mov
shrb
pusha
mov
fdiv
pushl
cmp
or
pusha
leave
mov
ds
add
sahf
mov
test
loop
fdivrs
mov
inc
push
aad
insl
popf
and
push
ja
scas
push
in
xor
or
push
fdivs
stos
and
lods
dec
sbb
andl
cs
jp
mov
xor
or
cmpsl
push
push
push
ret
pop
arpl
mov
pop
jno
inc
sbb
jo
and
pop
push
sub
fwait
sub
or
lcall
mov
mov
and
jne
fs
cmp
jns
push
or
xchg
jbe
jne
into
mov
pop
inc
popa
pop
in
sub
pop
mov
mov
into
loope
arpl
sbb
fnstcw
xor
pop
adc
jl
xor
les
loope
popa
insl
sub
aad
mov
loopne
js
mov
lcall
mov
pushf
in
xchg
insb
cmc
lea
jnp
lods
mov
jmp
addr16
in
jl
test
fwait
in
sbb
mov
xor
mov
jnp,pn
xor
xchg
mov
out
out
frstor
jno
into
and
mov
sbb
adc
loopne
add
and
pop
xchg
and
data16
xor
das
push
pop
out
cmp
ljmp
pop
data16
fistpll
dec
aas
and
lock
movsb
inc
sub
push
push
in
outsl
inc
das
jmp
fs
sbb
mov
clc
xchg
xor
mov
out
fmull
insl
les
scas
test
jb
mov
fnsave
mov
bound
mov
mov
sbb
je
add
rorl
flds
xchg
and
cmp
shlb
sar
out
insb
pop
shll
mov
mov
out
out
xchg
mov
sbb
aam
pop
mov
dec
xchg
jno
in
push
addb
mov
shll
pusha
mov
mov
mov
mov
push
push
or
xchg
test
aad
imul
xchg
jg
fs
mov
pusha
mov
sti
data16
aaa
mov
lret
test
fnstcw
sbb
ret
or
les
aam
rclb
pop
inc
add
sub
outsl
add
loope
jnp
mov
das
into
frndint
iret
adc
jl
out
cmp
mov
fnstcw
or
sub
cmp
cmp
or
push
cmp
pop
add
mov
xchg
jns
shrl
div
outsl
loope
loop,pn
add
xchg
mov
gs
lods
out
sahf
nop
dec
mov
pop
inc
mov
jl
adc
push
mov
rclb
or
mov
mov
adc
jno
insl
xchg
xchg
cltd
mov
shl
rorl
xor
xchg
add
pop
push
fisubl
add
push
inc
pop
pop
mov
dec
lock
and
es
fldenv
das
bound
loop
subb
ret
xor
test
ret
bound
mov
sarl
outsl
lock
inc
les
fisubrs
pop
hlt
inc
inc
push
push
mov
lahf
ret
push
ret
call
call
push
popf
sbb
out
pusha
mov
sbb
push
mov
sbb
add
xor
std
sbb
xor
call
push
inc
ret
rolb
mov
outsb
clc
repz
inc
mov
sbb
xchg
popa
jp
notb
sbb
icebp
arpl
mov
aam
dec
xor
dec
aad
pop
sbb
pop
mov
js
insb
pop
scas
lahf
sub
pop
push
lds
es
jmp
mov
xor
mov
mov
arpl
lahf
mov
xor
gs
mov
mov
cmpsl
shrl
mov
jle
and
sarl
rorb
cmpsl
lock
iret
insb
popa
add
ficoms
pushf
lahf
jo
clc
dec
dec
cmp
stos
sbbl
xchg
idivl
push
in
xchg
lcall
ljmp
mov
and
inc
push
adcb
int
sbb
pop
popa
and
dec
nop
xchg
mov
dec
aam
xchg
popf
mov
popa
movsl
aas
pop
sbb
lea
sahf
insb
push
ds
gs
ret
movsb
in
hlt
mov
jp
xchg
ljmp
or
jg
fwait
mov
pop
movsb
repz
loopne
xor
inc
sti
sub
loope,pt
mov
inc
mov
mov
mov
leave
es
in
xorl
xchg
pop
outsl
ret
cmpsb
inc
cmp
and
xchg
lahf
xor
mov
jo
outsl
data16
adc
inc
xor
xchg
push
sbb
sub
xlat
dec
fsqrt
or
pop
mov
and
pop
sbbl
push
adc
adc
jnp
fcoml
out
shll
sub
jge
jle
loope
adc
mov
push
pop
add
pop
and
out
movsb
jno
mov
movsl
mov
scas
roll
or
sahf
dec
pushf
rol
xchg
or
lret
fs
jge
sub
jecxz
jmp
push
mov
pop
or
in
mov
fiaddl
jo
mov
fisubs
jecxz
sub
into
mov
jmp
enter
fwait
adc
adc
mov
xchg
mov
xchg
in
jp
rcll
rorb
pop
ficompl
inc
sub
or
je
leave
mov
push
mov
aam
push
stos
adc
sub
rcll
repz
mov
sbb
inc
dec
popf
xchg
mov
bound
lahf
xchg
addr16
dec
adc
rdpmc
data16
in
xor
sbb
and
sahf
sub
inc
out
outsl
cmp
inc
cs
inc
loop
mov
mov
or
lea
outsl
or
cs
clc
lods
pop
fst
dec
pop
negl
lret
mov
inc
out
jp
push
jp
int3
fstp
jbe
mov
cmp
inc
dec
push
mov
ss
add
daa
fildll
jl
sub
and
fs
popf
jo
xor
lds
jnp
in
cmc
mov
or
jns
outsl
aas
daa
jo
inc
stc
add
dec
dec
and
inc
hlt
test
int
xor
leave
cmc
mov
inc
dec
jg
rcl
fisttpll
jle
pop
aaa
ja
jo
sub
out
nop
outsl
lcall
icebp
hlt
pop
fadd
aam
fwait
cmp
rclb
sub
cmpsb
cli
xorl
out
aad
mov
test
cmpsb
mov
sbb
push
popf
nop
cmpb
out
stc
subl
mov
jg
mov
out
and
les
loopne
push
fnstsw
pushf
das
sub
popa
sub
in
imul
in
dec
jno
inc
lods
repnz
mov
dec
mov
out
cmc
lods
mov
icebp
lret
jo
fisttps
ret
jge
fcoml
xor
jecxz
add
sbb
call
jmp
sub
mov
mov
repnz
xchg
cmp
mov
imull
or
pop
in
mov
in
add
add
in
pop
pop
scas
insb
jmp
aas
repz
data16
je
dec
lods
shrl
push
mov
adc
hlt
adc
std
xchg
mov
cwtl
out
shrb
loopne
add
dec
adc
mov
imul
jmp
pop
sub
dec
inc
jl
icebp
mov
arpl
leave
faddl
das
adc
test
fbld
aas
mov
lds
les
hlt
jle
xchg
mov
lea
stos
cmp
mov
pop
shl
rcll
cmpsb
cmpsl
push
xor
test
cmp
ljmp
test
push
ja
pushf
sarb
icebp
sub
popf
inc
mov
in
xlat
shll
es
cmp
lret
ss
sub
sbb
test
pop
or
repnz
mov
in
fdivrs
jecxz
xor
std
xor
rdpmc
ffree
inc
sub
dec
inc
das
jbe
mov
lahf
inc
adc
mov
jp
movsb
das
fs
jl
add
int
push
cmp
shlb
clc
xchg
mov
xchg
nop
neg
ret
xchg
mov
ss
iret
aaa
cmp
xchg
popa
jle
add
jge
sbb
into
jg
lods
clc
mov
scas
aad
notl
sub
ffree
xchg
sub
lds
push
jbe
pop
jecxz
pusha
fstpl
fisubrl
test
adc
adc
pop
imul
insb
inc
add
cmp
bound
jne
sbb
test
sub
rorb
fmulp
clc
jp
fmulp
mov
lret
mov
clc
fimuls
xchg
stc
cmp
movsl
push
test
lock
popf
stos
xchg
jp
stos
mov
das
and
or
sub
mov
sub
xchg
inc
jge
mov
adc
lea
xorb
hlt
push
sti
push
adc
inc
fnsetpm(287
ror
shl
fcoms
imul
jle
iret
push
fwait
push
cli
push
xor
or
hlt
in
add
inc
adc
mov
pop
and
arpl
sbb
scas
test
or
out
loop
add
pop
add
jmp
sub
push
dec
gs
jle
and
fdivrp
dec
dec
call
add
mov
addl
loope
xor
cmp
je
jo
cli
or
insb
and
xchg
lods
inc
add
loop
test
mov
adc
xor
sbb
inc
lock
or
or
jmp
movsb
inc
les
and
cmp
test
cmp
xchg
mov
add
mov
test
dec
fwait
xchg
pop
lret
inc
xor
inc
test
frstor
repnz
pop
cli
fistl
add
mov
daa
jge
mov
dec
add
push
pusha
stc
fdivp
scas
dec
and
sub
add
idivb
sbb
out
inc
mov
fsts
xor
sbb
push
jns
fsubrs
sahf
and
mov
jge
hlt
dec
mov
adcb
daa
add
scas
sub
test
js
dec
jnp
jns
cmp
and
or
jns
sub
int3
call
and
call
dec
dec
test
imul
or
cwtl
dec
mov
cmp
jge
cltd
clc
mov
aad
mov
inc
lods
xchg
outsb
test
mov
out
add
jmp
adc
add
inc
lahf
subl
shll
dec
xor
outsb
pusha
add
sbb
out
std
and
mov
gs
repnz
jmp
pop
xchg
sub
cmp
fcomip
cmc
or
dec
xor
jb
sub
push
xor
cmp
jl
xchg
es
iret
or
xchg
loope
shlb
inc
add
adc
mov
mov
mov
mov
loopne
mov
stos
or
sub
into
push
mov
mov
mov
andps
xor
lods
ja
dec
sub
push
jns
mov
orb
mov
or
gs
push
sbb
js
out
sbb
fsubl
outsb
mov
inc
cli
test
pop
int
aam
mov
dec
cmp
sbbb
sbb
pop
inc
lock
jge
fbld
fcompl
test
jb
mov
pop
pop
sbb
insb
aas
rcrb
xor
fidivrs
adc
push
and
dec
in
and
icebp
or
jge
fs
pushf
out
jmp
out
fistpl
out
int3
pop
cltd
push
sbbl
or
inc
mov
cltd
xchg
fmuls
sbb
sub
std
xor
icebp
pop
daa
scas
inc
add
dec
loope
and
lret
jle
dec
sub
in
mov
sub
push
iret
sub
sbb
pop
insb
or
mov
mov
mov
xor
cmp
mov
mov
sbb
or
rol
inc
push
and
push
cmc
stc
dec
test
cmpsl
dec
pushl
add
sub
xchg
pushl
pop
fwait
sbb
pop
test
enter
add
cwtl
push
roll
adc
xor
jbe
adc
mov
sbb
cmp
xor
and
stc
dec
pop
push
xor
lahf
test
popf
negb
and
das
cs
mov
dec
dec
cmp
xorb
or
adc
lret
jecxz
and
add
or
cmp
bndldx
lret
or
push
or
mov
sbb
lds
add
sahf
mov
xchg
adc
inc
shll
dec
test
lods
xchg
movsl
adc
aaa
out
cld
aad
mov
xchg
popa
push
in
pop
push
push
dec
jg
pusha
add
mov
and
ss
lods
data16
mov
mov
outsl
dec
nop
and
lahf
jb
push
roll
pusha
fcomps
mov
movsl
daa
mov
outsl
out
inc
outsb
test
add
cli
out
ja
and
sahf
cmpsl
pop
dec
sub
mov
jecxz
mov
or
and
sub
and
jnp
test
sbb
sahf
es
or
push
es
pop
sarb
jmp
jp
outsb
ss
in
push
cmp
pop
mov
pop
ljmp
jae
std
cmp
jle
lea
ds
jne
mov
popf
cmp
push
cmp
scas
push
lds
hlt
xor
daa
sub
lods
call
cmp
push
hlt
mov
fsubr
fwait
add
imul
pushf
fcoms
push
es
jnp
orb
mov
div
icebp
ret
int
aaa
sti
dec
leave
push
mov
xchg
mov
sti
out
adc
mov
push
push
ljmp
ror
inc
in
xchg
ds
jg
sbb
push
push
lods
testl
xchg
sub
out
jbe
icebp
int
sbb
in
sub
ret
push
xlat
aas
lods
inc
movsl
pop
pop
fidivl
cmp
cli
mov
mov
pop
sbb
insb
lds
cltd
xor
lods
add
mov
insl
insb
cmp
pop
xchg
cmc
cmp
push
xor
out
add
orb
filds
inc
mov
jb
fwait
sub
orb
sbb
cmp
pop
sbb
jno
mov
cmp
sar
lret
push
sub
push
lcall
pop
cmp
jl
or
aaa
mov
cmpsb
mov
inc
push
sub
dec
and
insb
xchg
stos
mov
ficoml
jnp
and
mov
push
mov
mov
xor
jg
pop
sub
shll
sbb
push
or
call
pop
adc
fsubrp
in
in
jg
pop
addr16
int3
jl
cmp
xchg
pop
inc
jecxz
xchg
xchg
mov
dec
es
add
out
lods
and
or
ja
repz
dec
inc
out
sarb
sbb
fbstp
push
cmp
push
push
rcll
enter
jmp
fsubrs
add
dec
mov
push
rcll
and
mov
rorl
call
dec
sub
lahf
in
les
cltd
cwtl
in
loop
push
inc
pop
adc
addr16
cmp
dec
sahf
jne
mov
and
rcl
pop
dec
xchg
iret
cmc
das
add
gs
xchg
or
sub
cmp
jns
mov
add
pop
mov
inc
loop
in
shr
stc
jg
cmpsb
cs
aas
push
roll
pop
jns
mov
repnz
push
dec
clc
jp
inc
in
test
pop
and
arpl
ljmp
scas
in
mov
mov
pop
add
nop
imul
mov
sti
test
jp
sbb
je
shr
jp
push
sbb
inc
dec
or
adc
icebp
sub
or
addr16
jnp
inc
dec
jle
xchg
push
push
sbb
mov
jl
repz
lahf
imul
std
pop
sbb
mov
pop
mov
jge
xchg
cmp
pushf
sbb
lret
adc
xchg
out
imul
js
push
ret
pop
xchg
sbbl
mov
jnp
and
pop
mov
pop
imul
outsl
loopne
std
mov
mov
lahf
arpl
push
mov
cmp
cmp
andl
les
and
loopne
pop
adc
cmp
aad
mov
mov
dec
ljmp
je
iret
mov
jno
test
dec
pusha
cs
add
xchg
das
nop
jno
je
jg
push
xor
inc
repz
or
jle
push
push
arpl
push
push
push
fdivs
fisubrl
jnp
xchg
jmp
inc
stc
jnp
sbb
lahf
icebp
imul
mov
push
dec
jg
in
mov
inc
mov
adc
imul
shr
adcl
push
adc
leave
daa
aam
lods
ret
mov
cli
adc
mov
sbb
sbb
insl
sarb
stc
test
fsubrl
mov
jo
test
or
adc
stc
mov
pop
adc
lods
jmp
or
stos
fistl
xchg
test
mov
mov
xchg
fwait
push
and
push
jbe
add
mov
xchg
iret
pop
js
shrl
pop
lock
in
sub
sub
mov
inc
fsubrp
into
outsl
dec
xchg
xchg
mov
dec
rorl
add
and
cmc
aaa
mov
lret
push
pop
mov
into
adc
jmp
xor
mov
pop
gs
cld
pop
add
addr16
insb
sahf
aas
popa
xchg
sub
mov
lock
mov
sbbl
fdivr
adc
and
mov
stc
push
sbb
mov
sbb
out
add
int3
mov
mov
out
push
in
ss
add
pop
inc
nop
cmpsb
sarl
mov
ja
jmp
mov
jae
push
pop
lret
mov
fbld
loop
sbb
xor
dec
xor
pushf
xor
in
mov
lahf
daa
inc
xchg
push
scas
addr16
add
rolb
pushf
inc
pushf
cmp
loop
je
mov
adcl
std
aam
lods
push
icebp
cmp
add
mov
repnz
sbb
clc
mov
fs
ja
into
cmp
test
lock
cmp
mov
mov
loopne
clc
sbb
add
inc
push
adc
into
dec
mov
je
je
dec
cmp
and
mov
leave
loope
dec
mov
neg
xor
aam
mov
sbb
xor
dec
push
pushf
push
cld
inc
jo
sub
negb
in
dec
hlt
push
pop
mov
or
out
or
scas
cmpsb
movsl
pop
fcoml
xchg
sbb
add
test
cmp
sahf
xor
sub
arpl
jle
arpl
imul
add
mov
clc
dec
aaa
push
stc
dec
in
or
ja
cmpsb
or
pop
addr16
call
mov
and
mov
testb
push
mov
call
mov
ret
inc
inc
in
jg
sahf
stos
push
test
ja
das
iret
fnstenv
dec
mov
sti
or
inc
push
ljmp
sub
push
int3
add
mov
test
sti
dec
lahf
sub
cmp
mov
lea
test
jbe
nop
repnz
lea
lret
pop
add
xchg
cmp
int
mov
mov
aas
nop
push
mov
enter
or
les
xor
mov
fdivs
cwtl
mov
mov
mov
add
sub
adc
sbb
aam
out
jae
test
dec
jge
add
pushf
lret
xlat
mov
pushf
sub
mov
ds
fstl
xor
cmp
add
jbe
leave
lods
sbb
mov
aam
mov
jno
or
loope
mov
add
sub
leave
xchg
ds
outsb
sub
fcompl
xor
sbb
sbb
cs
push
mov
cmpl
mov
pop
popf
cmpsb
lahf
cmp
cltd
or
xchg
push
adc
lcall
add
push
adc
jnp
mov
and
jmp
jns
mov
insb
movsl
sub
fidivrs
aam
adc
mov
lahf
sbbl
sbb
scas
lcall
xchg
adc
fmull
sbb
cmp
push
lret
data16
adcb
lea
adc
ja
mov
into
inc
sbb
cmp
or
and
inc
sbb
popf
xlat
sti
jmp
mov
out
outsb
call
insb
jmp
ret
sub
push
mov
stc
stos
nop
sahf
das
in
dec
mov
sti
nop
xchg
out
sub
xor
or
jg
sarl
or
aam
nop
mov
cltd
adc
mov
xchg
orb
push
and
mov
int
int3
pop
inc
icebp
jno
adc
and
mov
jecxz
mov
rorl
and
rdmsr
dec
movsl
and
push
inc
mov
sti
and
lcall
sub
dec
dec
add
push
out
inc
iret
pop
gs
ljmp
pop
or
imul
shrb
outsb
cmpsb
pop
popa
inc
insb
iret
xor
mov
xchg
outsb
xchg
stc
lea
dec
pop
cmpsl
cmp
neg
push
sub
and
mov
lea
sbbb
loopne
jge
adc
scas
fcompl
ret
aaa
cmpsb
xchg
fistl
insb
dec
ja
aas
jg
inc
push
jp
std
arpl
mov
and
jl
push
and
jo
clc
outsl
mov
cmpsb
stos
sbb
cltd
xchg
lods
mov
inc
mov
cmp
or
mov
stc
loop
or
cwtl
jl
sub
and
xchg
ja
shll
add
dec
mov
sbb
in
adc
sub
je
inc
cltd
shrl
lret
rol
out
inc
imul
mov
xchg
lret
push
decl
je
dec
inc
and
sub
sub
sbb
jno
mov
pop
sub
inc
adc
movsb
loope
inc
jae
mov
lahf
mov
and
test
dec
aam
ljmp
pop
sbb
cmpsl
and
fbld
push
fcoms
ds
push
cs
jnp
std
outsl
icebp
xchg
inc
movsl
mov
mov
mov
dec
xchg
hlt
xchg
fisubl
mov
cmpsl
in
stc
or
das
loopne
adc
int3
adc
call
outsl
jl
mov
test
jg
iret
shr
add
pop
add
iret
out
mov
cmpsl
mov
pop
mov
add
add
or
dec
stos
aaa
out
fcmovbe
pushf
mov
push
mov
test
rcl
lods
cmpsb
popf
inc
aad
xor
push
orl
cmp
pop
or
jge
mov
aam
int
lret
xchg
cwtl
jo
sub
pop
adc
mov
shr
add
jg
add
mov
push
mov
icebp
ret
inc
cld
adc
mov
sbbb
ljmp
mov
jg
pop
mov
push
stos
sbb
mov
je
aad
loop
bound
fldenv
jl
cmpsl
iret
sub
sti
lock
fldcw
cwtl
inc
add
mov
mov
xor
shlb
cli
add
rcl
pop
add
adc
inc
sub
or
movsb
lea
push
ret
adc
mov
into
popa
lds
shlb
aas
int
out
push
and
test
adc
fisubrl
cmp
jne
mov
cmpsb
ret
mov
add
aam
mov
lods
shl
int3
mov
adc
dec
sub
loopne
push
insb
mov
pop
xor
movsb
movlhps
cmp
lahf
les
arpl
aad
cmp
adc
hlt
addb
push
hlt
sbb
mov
mov
sbbl
cmp
cmpsl
sbb
inc
mov
add
dec
sbb
pop
jmp
jp
inc
mov
int3
les
lods
cmpsb
dec
push
les
cmp
das
movsl
ret
and
xchg
and
addr16
mov
fidivl
push
loop
xchg
mov
lock
repz
mov
dec
pusha
in
mov
mov
mov
ja
add
jl
ds
dec
xorl
lock
das
cmp
lods
lcall
fimuls
pop
mov
mov
cs
and
inc
roll
lock
cmp
lcall
add
loopne
sahf
xor
in
sbb
mov
test
mov
gs
mov
test
nop
aas
push
pop
jne
jg
sub
or
addb
dec
cmp
mov
cmc
lods
xor
lock
jle
jae
mov
jg
or
fcoml
fmuls
adc
mov
mov
arpl
outsb
sub
jle
add
adc
out
addr16
sbb
das
cmp
and
mov
nop
or
pop
push
xchg
xchg
sub
in
mov
out
inc
or
and
inc
jl
sub
push
mov
inc
mov
adc
jnp
out
sbb
inc
fwait
xor
gs
xchg
dec
arpl
gs
dec
sbb
push
mov
jl
add
push
inc
ja
push
mov
xchg
mov
sbb
pop
jle
es
mov
lret
fscale
movsl
fdivrs
xor
lret
adc
insl
gs
add
jecxz
sbb
loop
imul
and
or
arpl
bound
mov
mov
les
stos
sbb
add
pop
cld
push
mov
sub
loopne
sub
fstpt
jno,pt
scas
inc
fwait
pusha
call
mov
movsl
pop
add
rorl
push
jmp
push
pop
push
lcall
inc
inc
and
lahf
pop
bound
add
sub
repnz
shlb
mov
cld
insl
jmp
xorl
pop
pop
call
push
scas
mov
push
out
ret
insl
jne
jmp
es
mov
cmp
mov
ds
cs
daa
xor
cli
in
js
mov
arpl
gs
iret
jns
addb
jl
test
lock
dec
xchg
loope
ret
pop
inc
add
insl
mov
pop
int3
and
aaa
pop
dec
loop
sub
sbb
and
push
ret
in
push
fmull
mov
jge
loop
mov
sub
jmp
push
pop
push
sub
iret
loope
pop
push
lds
pop
push
call
cmpsb
negl
fbld
fisubs
xor
sti
sub
fimuls
decl
es
idivb
shl
call
dec
and
es
jmp
lock
push
xchg
sbb
add
clc
into
sub
aam
mov
jae
push
sarl
fsubr
pop
pop
cmp
add
fisubs
iret
sbb
mov
aam
ret
movsb
lock
push
out
scas
xchg
pop
push
arpl
or
sub
inc
subb
mov
sbb
and
sub
pop
in
sub
pop
cmpsb
sub
push
push
xor
cli
dec
add
loope
xchg
fldt
js
xchg
bnd
bound
ss
loope
paddsw
and
mov
jo
mov
pop
popf
jg
out
cmc
cmp
mov
or
sub
cmp
mov
pop
mov
pop
and
inc
shlb
daa
test
adc
push
outsb
mov
lds
and
popa
bound
out
adc
outsl
mov
xor
pop
mov
push
aad
jbe
sbb
shlb
test
pop
push
cwtl
cmp
call
mov
sar
outsb
stos
pop
pushf
cmp
push
xor
mov
inc
mov
hlt
push
cmpsb
popf
xchg
test
push
in
and
in
sub
repnz
insb
add
mov
push
sbb
pop
adc
sub
dec
int3
push
pop
imul
cmp
dec
add
rcll
jecxz
pop
dec
paddsb
popf
test
cmp
addr16
sub
xor
sbbl
inc
or
xchg
mov
insl
cmp
std
jecxz
xchg
insb
lret
int
popa
sti
fimull
cs
call
loopne
lea
xchg
xchg
inc
aaa
test
sarl
clc
fcoms
aaa
ret
insb
incb
cmp
cld
sub
sbb
push
jno
aaa
lahf
daa
push
dec
lcall
mov
ud0
iret
clc
jmp
scas
adc
enter
cmp
insb
aam
cmp
dec
fsubrl
xchg
popa
add
flds
push
movsl
ret
notl
dec
dec
andb
stos
lods
adc
inc
push
cmp
mov
pop
call
jge
xchg
inc
enter
fistps
in
out
dec
mov
cmp
xchg
pop
test
pop
pop
data16
fs
mov
jecxz
cmp
pushf
sti
push
dec
xor
nop
sbb
enter
mov
add
mov
mov
scas
pop
xor
les
jle
mov
xchg
jns
loope
shlb
add
mov
cmp
push
and
adc
mov
cmc
fcompl
mov
in
and
stc
inc
sbb
and
xchg
mov
jmp
push
ror
xor
inc
cli
mov
xlat
sbbb
inc
xor
pushf
sub
sahf
cmpb
xchg
lahf
mov
clc
push
adc
sahf
jg
sub
mov
rcll
jge
adc
out
imul
dec
popa
or
and
loopne
adc
fbstp
jp
sub
jge
in
ror
roll
ret
aaa
sub
add
mov
test
stos
or
cmpsb
inc
gs
jbe
mov
sahf
out
add
jo
out
cmp
orb
pop
js
movsl
inc
fiaddl
or
dec
cmpsb
xchg
ljmp
mov
test
stos
jle
and
aaa
cmp
ljmp
outsb
scas
pop
cmp
xchg
inc
subb
push
sbb
int
pop
ret
nop
andb
push
or
mov
dec
adc
sub
mov
vpmaxub
mov
push
outsb
mov
les
or
xchg
xchg
test
push
mov
stos
pop
hlt
adc
jo
stos
shrl
pop
dec
test
cmc
popl
insb
sub
xchg
out
je
jl
lret
test
in
pop
ljmp
xchg
aaa
inc
cltd
push
insl
push
cmpsb
mov
pop
pop
mov
sub
xchg
and
ret
and
icebp
cwtl
pop
shlb
test
in
pop
or
xchg
pop
es
jge
fisubl
push
mov
ds
cs
add
popa
out
jg
aam
dec
fdivrs
dec
sub
ljmp
mov
add
cld
push
xchg
mov
mov
imul
fwait
lret
push
mov
sub
addb
jg
loope
lea
xor
in
popf
add
pop
dec
mov
ljmp
sub
stc
lahf
xchg
lock
es
fdivs
jge
hlt
scas
push
ret
hlt
in
fstpt
pop
mov
imul
pop
mov
sub
mov
push
mov
pop
dec
mov
test
sbb
lods
mov
cmp
xchg
fwait
jg
dec
dec
sbb
push
aad
jmp
mov
cltd
and
jo
rol
add
sbb
jecxz
pop
mov
lods
notl
mov
pop
js
mov
cltd
cmp
add
gs
push
cmp
or
fsubs
mov
cmp
mov
jp
lods
test
popa
roll
dec
inc
das
jecxz
data16
sbb
or
sbb
mov
fwait
cmpsb
pop
push
jb
int3
cmpsl
and
pop
push
xchg
stc
into
out
pop
and
mov
out
add
lret
movsb
inc
xchg
push
pusha
sbb
stc
xor
test
cmc
fs
cmp
loope
clc
loop
adc
sub
cld
mov
lret
mov
pop
and
fcomps
fcoms
das
sbb
mov
pop
mov
scas
mov
fwait
and
mov
call
cmp
adc
mov
cmpl
inc
cmp
mov
and
push
out
hlt
ds
mov
lock
fcoms
mov
mov
outsl
insl
lret
inc
jle
arpl
sbb
into
adc
push
ret
xchg
lfs
cs
sbb
test
popf
jb
lock
xor
out
fiaddl
sub
mov
mov
add
lock
fdivrl
mov
inc
mov
push
sub
mov
xchg
dec
mov
in
jns
push
fisttpll
out
mov
push
adc
mov
cmp
jns
add
or
xlat
lahf
adc
adc
and
aaa
inc
push
daa
ficoml
mov
lahf
adc
inc
ret
daa
cwtl
pop
mov
sahf
cmp
insb
fstps
cmp
inc
xchg
push
jns
sbb
stos
xchg
add
hlt
and
jns
sub
push
das
xchg
push
adc
repz
sub
stc
jle
lods
inc
pop
push
sar
mov
and
jno
xchg
pop
xchg
int
mov
in
lds
clc
inc
jmp
cwtl
cmpsl
rcr
pop
pop
and
pop
fsubrp
sbb
add
push
ret
jge
test
jg
adc
int3
adc
push
add
and
push
in
adc
out
out
jmp
pop
aam
or
pop
fisubrs
ss
cld
js
jbe
mov
mov
stos
mov
js
mov
mov
pop
add
mov
sbb
ss
fsubrl
pop
and
cs
mov
add
mov
push
mov
js
scas
fldt
or
mov
push
mov
fcomps
sub
xchg
and
and
sbb
insl
mov
daa
mov
mov
dec
lahf
xchg
loope,pn
cmpsb
stos
and
shrl
jnp
push
xor
inc
movsl
dec
mov
cmpsb
pop
push
out
lcall
jo
mov
int
jb
and
nop
xor
sbb
xor
xchg
pop
dec
dec
imul
loop
mov
pop
dec
imul
add
sub
push
sub
mov
xchg
fdivr
in
push
mov
pushw
cmc
add
and
dec
add
mov
fbld
cs
inc
sbb
movsl
pop
mov
mov
lcall
or
popf
mov
inc
jle
ja
fwait
test
pop
insl
jno
dec
repz
rorb
or
arpl
mov
pop
rcll
jecxz
cmc
push
in
push
hlt
push
arpl
cmp
pop
pop
mov
lahf
xor
push
pop
imul
push
cmp
aad
xchg
negb
insb
das
jae
sbb
inc
cmc
sti
mov
dec
pop
or
cs
loopne
clc
in
shrl
hlt
pushf
movsb
enter
mov
aaa
mov
std
sbb
xchg
imul
int3
clc
pop
popf
loopne
cmpsl
add
push
inc
sub
inc
push
repz
cmp
ds
sub
inc
rcrl
push
push
hlt
ficomps
addl
mov
pop
sarb
dec
ss
adc
pop
add
out
aad
test
pop
fcom
mov
xlat
dec
adc
fxch
mov
dec
cs
jecxz
add
out
mulps
cmpsl
pop
enter
loopne
lret
pop
jno
pop
clc
ss
leave
filds
js
mov
sbb
in
notb
scas
arpl
lret
mov
add
ret
xor
scas
lahf
into
lcall
sahf
xor
sahf
jg
push
or
xlat
rcll
push
or
cmc
pop
sub
shrb
push
or
mov
dec
pop
cmpsl
push
push
lahf
leave
les
int
mov
jns
mulb
cltd
cs
int3
fldcw
mov
cmc
add
scas
lret
push
aaa
xchg
call
icebp
loopne
shlb
cmp
leave
cmpl
xchg
xlat
shll
add
mov
lret
sub
dec
imul
in
inc
inc
dec
mov
and
pop
in
js
and
pop
pop
aad
mov
xchg
jnp
sbb
sub
cmp
mov
pop
mov
test
pop
sub
daa
shll
int3
notl
or
insb
and
andb
mov
cmpsl
mov
mov
fimuls
scas
jg
mov
iret
cmp
gs
das
int
dec
xlat
test
sbb
rolb
mov
call
ficompl
push
std
rclb
sub
push
imul
mulb
jge
add
in
jp
ljmp
ja
stos
cli
push
adc
adc
les
fistps
sbb
fs
inc
mov
jge
test
dec
roll
add
sub
fsqrt
pop
arpl
xor
sbb
das
mov
nop
xlat
jne
popf
js
aaa
xor
lods
dec
lea
jnp
icebp
xchg
mov
xchg
xor
mov
jle
out
and
inc
add
pop
fisttpl
scas
cmp
sbb
xor
and
and
pop
aam
movsl
leave
push
movsb
rcrl
lds
mov
mov
filds
sub
scas
cltd
divl
or
inc
das
orb
fdivr
cmpsb
cmpsl
inc
pop
in
loop
imul
push
or
popa
sub
inc
pop
mov
adc
cmpb
shl
mov
test
shll
sar
cmpsb
xchg
int3
mov
push
mov
xor
adcl
clc
lea
mov
iret
adc
scas
test
test
push
mov
inc
and
mov
mov
dec
scas
push
ret
and
and
int3
pusha
mov
jl
cmpb
movsl
int
add
nop
or
cmpsl
test
mov
dec
sub
fmuls
je
cld
xor
sbb
pop
add
or
stc
gs
sub
sub
out
mov
pop
jo
xchg
negb
jnp
addr16
stos
icebp
jnp
int3
scas
int3
int3
stos
pop
mov
nop
mov
iret
mov
pop
rcll
mov
pop
leave
mov
incl
push
hlt
lcall
sub
pop
insl
sub
sahf
inc
sar
mov
push
cli
xor
pop
mov
lret
and
out
into
int
insl
push
fcmovbe
cmp
adc
xor
mov
popa
and
mov
xlat
data16
scas
fs
fisubrs
cmp
adc
dec
stc
add
jmp
sub
jge
idivl
jge
sbb
cmp
scas
into
jne
pusha
xchg
stos
add
roll
out
jecxz
cmp
lods
sbb
into
fiaddl
gs
mov
or
and
std
or
add
cld
sub
into
hlt
gs
das
sub
fdivrl
lret
adc
mov
mov
call
sub
push
mov
pop
pop
and
push
mov
ds
xchg
adc
cmp
inc
pop
xchg
lret
hlt
inc
xor
ret
mov
dec
sbb
adcl
popa
fcmovbe
and
jns
scas
sub
cmpsl
xchg
aaa
mov
push
pop
jne
cltd
xchg
shrb
insb
jge
jge
sbb
cmp
mov
sub
ror
sbb
fists
arpl
movsb
sub
cmp
rolb
rorl
jmp
stos
lods
outsb
cmp
xchg
inc
xor
loopne
cs
aas
adcl
fcompl
sbb
xchg
add
add
or
daa
pop
dec
sub
aas
je
dec
xchg
outsl
ja
push
pushf
fidivl
loopne
jne
jp
cmp
jns
fisubrl
cli
sbb
add
test
jp
loop
and
fs
push
xchg
lret
cmpsb
into
mov
scas
mov
xchg
push
test
dec
jecxz
loopne
lret
mulb
jbe
and
push
imul
shrb
fistpl
fists
mov
mov
lods
pop
lds
or
and
leave
jmp
repnz
mov
mov
mov
leave
movsb
xchg
rcrb
jle
repnz
push
pop
call
ss
sysexit
mov
mov
outsb
gs
lea
addr16
fcomps
xorl
ret
out
stos
pop
call
into
lods
insl
add
decb
bnd
aaa
sbb
jb
loop
sarl
xor
mov
sahf
fisubs
outsl
rcll
imul
outsb
mov
mov
cmpsb
sbb
push
mov
mov
sub
fmulp
pop
dec
rclb
fidivrs
gs
jb
lret
lret
addb
das
mov
enter
xor
fsubp
enter
cld
pop
xchg
cmpsl
je
in
call
rorl
in
imul
pop
and
lcall
push
and
and
sti
push
lea
test
add
cltd
pop
jns
outsl
inc
inc
scas
lret
fwait
dec
stc
test
pop
cltd
sbb
jle
mov
icebp
and
or
fdivrs
sbbl
push
sub
dec
rcll
dec
ror
repz
pushf
inc
or
imul
sub
sbb
scas
inc
push
fbstp
dec
cmc
adc
mov
jnp
xchg
iret
adc
div
ret
mov
adc
mov
jnp
mov
icebp
fmuls
test
insb
lahf
insl
pop
inc
and
xchg
lock
or
cmpsl
enter
mov
mov
inc
cmp
pop
lock
loop
sub
adc
leave
adc
add
jmp
xor
mov
cld
pop
xor
stc
stos
test
dec
cmp
cmp
notl
fidivs
add
fistps
xor
icebp
gs
aam
sbb
into
mov
adc
and
movsl
mov
and
jmp
and
sbb
mov
mov
in
or
dec
lods
mov
push
aam
pop
outsl
mov
push
inc
jns
or
push
outsl
loop
inc
inc
decl
dec
jbe
outsb
arpl
add
or
cmp
pusha
xchg
sub
xchg
push
cmpsb
fistpl
inc
cmp
push
push
xlat
add
incb
hlt
xor
and
inc
mov
xor
mov
pop
std
rcrb
mov
test
test
rcll
enter
sbb
loopne
outsl
fcom
xchg
jg
loopne
xlat
js
add
jg
adc
dec
sbb
cmp
mov
pop
movsb
test
xor
pop
mov
into
sbb
xchg
data16
addr16
clc
mov
push
pop
adc
std
fiaddl
fisubrl
adc
push
cmp
sbb
mov
mov
jmp
clc
cmp
out
lods
adc
mov
fcoms
jmp
push
fsubs
jg
test
test
call
push
xor
or
jecxz
stos
jae
or
lods
adc
out
mov
and
sbbb
pushf
loope
or
lret
mov
shl
xchg
icebp
cmpsb
or
ds
bound
mov
stos
dec
shll
sbb
mov
outsb
icebp
fwait
test
ds
xor
cmp
push
jo
mov
sub
decb
loopne
les
mov
inc
insb
and
scas
scas
jg
movsb
mov
add
fdivp
aad
xor
lea
xor
into
std
mov
fldt
pop
repnz
pop
or
les
cld
xchg
subl
cmp
test
fidivs
dec
insb
xchg
lahf
push
mov
roll
stos
xlat
in
decl
cli
fs
push
cmpsl
sbb
lds
or
stc
fidivs
fildll
outsl
in
xorl
xor
rcll
fildl
dec
movsl
hlt
lret
adc
adc
push
imul
rcrl
shll
cmpsb
xor
mov
cmp
mov
outsl
enter
dec
cmpsl
aas
cs
wrmsr
sbb
xchg
sbb
dec
dec
jle
mov
fidivrl
jno
test
push
xlat
adc
outsb
jmp
lock
jnp
and
push
push
inc
packuswb
aaa
js
fwait
imul
push
scas
xchg
bound
inc
add
xchg
push
mov
fnstcw
fxch
cmp
jno
mov
xorl
pushf
mov
add
in
jno
push
rcrl
int3
cmp
lret
in
jp
fldenv
push
mov
add
and
cmp
je
icebp
xchg
xchg
lret
int3
dec
mov
cmp
inc
iret
imul
ret
xchg
dec
in
adc
sub
icebp
ss
and
pop
dec
adc
in
sbb
popf
sub
enter
lods
sbb
adc
push
lcall
adc
in
call
popa
fcomps
rolb
sti
add
mov
dec
mov
out
fsubrp
xchg
add
repz
repz
sbbl
mov
dec
cld
les
sti
cld
mov
icebp
xchg
gs
mov
test
push
inc
or
dec
inc
rcrb
cmpsl
loopne
sub
rolb
shrl
ds
lea
test
les
data16
movsb
jae
test
rcrb
xor
pop
mov
mov
subl
adc
js
in
es
imul
and
push
sbb
lret
inc
repz
lcall
ss
or
jl
dec
xchg
and
fildll
js
ss
stos
xchg
push
xor
loopne
inc
mov
mov
or
add
or
out
outsl
cltd
shlb
vcvtps2dq
mov
ljmp
jl
andb
ss
pop
repnz
lods
cmp
sahf
mov
loopne
jle
sub
test
iret
add
mov
movsb
sbb
das
push
mov
add
mov
idivl
push
inc
pop
lcall
lret
leave
xchg
test
adcl
lods
out
sahf
or
and
int3
xchg
dec
jecxz
in
dec
mov
sbb
xchg
mov
sbb
int3
loopne
cmp
push
sbb
push
filds
push
in
testb
or
sbbb
inc
data16
mov
xchg
sbb
fwait
mov
rcll
addr16
dec
aad
test
sub
scas
je
cmpsl
mov
cwtl
and
sbb
jbe
les
mov
sub
or
xchg
inc
and
mov
lret
clc
and
push
jge
jnp
fwait
rcll
fs
in
jle
rolb
clc
jbe
mov
aam
scas
or
inc
cwtl
mul
jbe
or
in
arpl
scas
stc
push
adc
movsb
xor
out
sahf
push
sub
sub
test
jae
or
jne
mov
nop
call
push
stc
jp
or
dec
pop
jnp
movsl
out
sub
nop
cld
or
push
jle
outsl
cmp
mov
add
shll
rcll
ret
mov
lret
pop
sbb
sub
jno
mov
push
icebp
and
inc
jno
mov
repnz
push
pop
pop
xchg
dec
addr16
adcl
mov
addl
sti
or
push
daa
sahf
inc
popa
popa
lahf
cmp
rcrl
int
mov
inc
sub
jo
cmpb
nop
cwtl
adc
out
stos
cmpsb
test
cmp
mov
pusha
add
in
loop
clc
hlt
incb
cmpsl
and
sbb
out
cmp
ficoms
add
mov
iret
mov
adc
shlb
das
jge
xor
psadbw
test
push
adc
call
jne
mov
sub
fadd
cmp
loope
mov
outsb
sahf
xchg
inc
cltd
bound
inc
jp
sub
or
jbe
fmuls
fadds
fistpll
and
jbe
enter
insb
fisubl
or
sahf
inc
push
dec
loope
cwtl
movsl
or
adc
sti
int3
in
int
je
es
iret
xchg
jecxz
fwait
sub
ret
lea
mov
mov
lahf
inc
popf
das
icebp
sub
xlat
push
lret
mov
or
dec
mov
adc
xchg
xor
int3
adc
cmp
cmp
imul
jecxz
xor
adc
mov
xor
push
mov
jae
mov
lods
sahf
sbb
cmpsb
cmpsb
adc
int3
or
sub
pop
jne
pop
push
jno
dec
outsl
ror
sbbb
inc
icebp
movsl
mov
cli
mov
mov
jl
mov
call
into
jne
leave
push
cli
pop
ret
xchg
ja
lea
sub
adc
push
dec
pop
and
ds
fbld
les
cld
adc
cmp
jb
xlat
fwait
adc
fstl
std
dec
call
lock
xor
xchg
add
cmpsl
ss
jo
dec
andb
daa
or
mov
scas
imul
mov
lea
dec
notb
add
popa
testl
dec
xchg
dec
nop
stc
or
nop
mov
out
jo
pop
xorb
add
inc
dec
adc
add
sub
push
mov
inc
es
or
push
push
out
cli
movsl
cmp
inc
and
push
icebp
jo
dec
adc
xlat
add
cmp
int3
mov
iret
push
jge
pop
bound
jo
or
inc
and
stos
mov
jnp
sbb
jnp
sbb
scas
lret
fidivs
dec
dec
inc
pop
sub
adc
add
pusha
xchg
int
jne
dec
lret
mov
sbb
ficoms
mov
xchg
cs
mov
loope
mov
daa
inc
addr16
mov
push
adc
inc
sti
or
mov
sbbl
scas
lock
call
and
adc
sbb
lock
mov
adc
repz
ljmp
adc
and
or
in
mov
fnstcw
or
ja
mov
inc
lds
mov
les
xchg
shll
add
jo
pop
jne
inc
aaa
pop
fldcw
and
push
cli
mov
leave
add
icebp
insb
sbb
mov
mov
jl
cmp
mov
pusha
and
jge
ds
pop
dec
adc
cmp
andl
push
insl
adc
adc
div
bound
and
jae
push
sub
mov
in
mov
es
loop
cmp
jmp
fcmovnb
inc
iret
cwtl
mov
sub
js
mov
sub
ror
mov
xchg
clc
mov
movsb
fnstcw
enter
push
sub
jl
xlat
lret
int3
orb
aas
addr16
xchg
pop
mov
sbb
clc
sti
popf
repnz
sahf
sti
pop
add
dec
shlb
imul
fadds
mov
scas
xchg
shrl
jle
leave
fldl
push
push
sub
mov
js
pop
pop
test
std
fisttpl
fdivrl
jge
adc
pop
mov
ljmp
nopl
sbb
mov
daa
les
adc
xor
cmp
sbb
xorl
xchg
add
dec
or
fmuls
xchg
jecxz
gs
and
xchg
xor
adc
push
xor
pop
mov
out
out
into
sbb
test
dec
mov
in
pop
dec
icebp
cmp
lcall
call
fidivrl
in
std
lds
test
subb
mov
cltd
xlat
mov
scas
and
insb
sub
jne
cmp
test
outsb
cmpsb
mov
mov
xchg
jne
loopne
add
addr16
rcl
xlat
daa
mov
data16
fcom
popa
fisubs
ficompl
dec
mov
out
ret
adc
xorl
pop
nop
stc
ds
xor
cmp
inc
and
jbe
adc
cmpsb
fbld
lods
ret
dec
and
imul
std
out
inc
mov
cmc
and
stos
cmp
ljmp
xor
pop
aam
pop
cmp
fidivs
adc
push
mov
jb
and
into
shlb
mov
rolb
clc
adc
mov
sub
mull
scas
aad
cmpsl
test
and
testl
sub
pusha
sub
ds
aad
imul
push
xchg
in
adc
adc
es
sar
pusha
shll
inc
lea
dec
push
icebp
stos
add
xchg
xor
xlat
mov
cltd
or
in
add
enter
dec
aaa
adc
rclb
sbb
cmp
movsb
fsqrt
rcrb
dec
sbb
test
sbb
lock
gs
add
adc
jge
or
psrad
int3
iret
xor
cli
in
pusha
stc
cmp
xchg
inc
dec
xchg
xchg
pop
fstp
jmp
mov
mov
sub
stc
mov
pop
aaa
cmp
lock
pop
fwait
std
sbb
mov
loop
dec
test
sbbb
leave
mov
aaa
enter
shr
lret
pop
pop
fcompl
add
mov
mov
iret
test
pop
jp
sub
in
xchg
popa
cmpsb
xor
fists
dec
ljmp
jg
mov
cwtl
cli
push
cmpsb
mov
jge
enter
loop
enter
andb
dec
lods
lock
pop
faddl
mov
xor
inc
mov
dec
push
jl
jbe
stos
push
in
lahf
pop
xchg
nop
xchg
push
int3
sub
inc
dec
neg
aad
inc
cmc
mov
push
mov
xor
cmpsl
loope
sub
rcl
lods
xchg
jns
ljmp
sub
cmpsb
push
shlb
loop
pop
add
jae
push
mov
test
fsubs
pop
adc
mov
sub
mov
push
push
adc
mov
cmpxchg
pop
push
insb
mov
fists
aad
lods
jle
lock
lcall
and
fdivrs
movb
mov
inc
aas
and
in
inc
adc
addr16
imul
or
rcll
adc
mov
scas
cmp
shlb
add
arpl
stos
dec
rol
ret
sub
shr
fcoms
dec
shr
repz
mov
fs
sarl
das
std
sarl
hlt
sub
sub
cmc
stc
sbbb
and
iret
push
roll
cmp
jp
inc
sbb
dec
popf
je
scas
data16
sbb
push
cmp
mov
adc
fnstcw
push
inc
rolb
jns
jbe
cmp
clc
add
xor
xchg
sbb
in
adc
mov
arpl
insl
rolb
lahf
fldt
mov
inc
inc
mov
in
insl
mov
mov
adc
sarb
pusha
dec
js
dec
insl
jle
fbstp
cltd
sub
push
cltd
xlat
adc
push
ret
out
dec
mov
push
leave
insl
dec
test
push
push
or
sub
hlt
shlb
les
push
adc
pusha
hlt
hlt
out
or
ret
xrstors
jmp
pop
add
sbbb
call
or
shll
jg
dec
add
out
or
imul
fildl
sub
and
inc
inc
and
xlat
cli
popa
in
inc
pop
in
jb
in
dec
popa
mov
stos
xorl
mov
aam
xchg
lods
outsl
sub
orl
cmp
sub
cmp
pop
ljmp
push
xor
loopne
inc
adc
rcl
cli
sbb
lahf
or
push
add
xor
divl
mov
daa
lods
adc
es
xchg
cltd
and
xor
popa
mov
cltd
lea
push
mov
test
out
adcl
jg
jl
test
out
pop
aaa
cwtl
lahf
ja
cmpsb
dec
mov
mov
sbb
in
mov
aas
vandnps
cltd
cltd
cli
sub
daa
add
jne
sub
mov
in
clc
pop
aam
fnsave
inc
mov
pop
cmp
and
test
mov
imul
inc
icebp
fistpl
outsl
ret
repz
and
sbb
lret
stc
add
sbb
pop
xchg
lods
pop
add
mov
xchg
adc
fidivl
jmp
jnp
push
and
repz
push
movl
fs
popf
dec
pop
mov
dec
outsl
call
test
cltd
dec
popf
jge
popf
pop
out
sbb
add
fsubr
int3
push
shl
add
mov
xchg
dec
sbb
rcr
cld
mov
xlat
scas
sub
gs
mov
xchg
mov
call
xor
sbb
ljmp
andb
dec
sbb
std
aad
pop
xor
add
jns
push
push
pop
xchg
cltd
mov
or
mov
pop
pop
jmp
mov
shl
aam
clc
and
sub
adc
aaa
popf
addl
dec
mov
rdpmc
mov
and
mov
mov
outsl
jns,pt
test
inc
inc
add
and
adc
push
sub
mov
out
repnz
sbb
aam
pop
lds
jne
out
bound
sbb
out
xchg
xchg
add
testl
out
fbstp
movsl
ret
xchg
mov
movsl
inc
fists
dec
cmpsl
xchg
dec
testb
hlt
lds
jle
dec
fnstcw
int
jnp
mov
adc
jno
add
and
sub
int
subl
int
icebp
fmulp
outsl
jg
sahf
cvttps2pi
dec
leave
cs
call
mov
xchg
inc
cmpsb
mov
lds
dec
leave
stc
aas
ss
movsl
out
mov
and
xchg
addb
arpl
cmp
push
push
mov
ja
testb
mov
push
xchg
push
paddb
ss
dec
in
call
loope
clc
sbb
adc
in
or
les
imul
or
imul
incl
add
mov
push
fidivl
dec
pop
gs
add
repnz
daa
shrl
pop
sub
mov
push
xor
jns
fimull
int3
or
repz
mov
jo
push
cmp
pop
or
cmpsb
outsl
imul
movsl
mov
pop
sub
mov
and
orps
inc
push
mov
xchg
icebp
mov
push
add
cwtl
push
shlb
inc
pushf
and
push
mov
popf
dec
pop
rorb
jno
jb
iret
dec
lock
adc
aaa
lods
arpl
xor
add
pusha
out
lea
or
push
mov
xchg
mov
sbb
and
insb
jo
in
xchg
sti
jg
push
cmpsl
mov
cs
pop
sbb
inc
aad
iret
xor
pop
add
jmp
fidivrl
int
mov
push
mov
jbe
ljmp
push
inc
imul
lock
ljmp
or
mov
in
jb
in
dec
aas
pop
loopne,pn
mov
push
nop
je
pop
adc
jl
xchg
adc
mov
adc
lcall
dec
ret
sub
cs
scas
aas
mov
mov
fs
push
scas
or
inc
push
cmp
mov
into
sub
push
imulb
xor
or
cwtl
flds
push
cmpb
pop
shrl
testb
je
mov
pop
add
pop
pop
jl
mov
popa
xchg
jl
insb
dec
out
mov
adc
push
ds
in
pop
fiadds
test
imul
subl
sub
dec
mov
push
pop
mov
and
sub
leave
jnp
outsl
inc
icebp
lds
movsl
cld
je
pop
fdivl
js
ss
cwtl
outsb
jg
jge
mov
push
movsl
aad
test
mov
lods
sub
popf
jne
shlb
insb
es
sbbl
iret
and
push
aaa
es
add
rclb
jp
xchg
cmp
shrb
mov
ffree
xchg
arpl
bound
int
mov
pushf
cmp
imul
jge
and
push
jl
add
popf
shlb
pop
mov
scas
pusha
pusha
repnz
aaa
pop
jp
add
inc
adc
aaa
pop
enter
and
add
outsl
adc
dec
aad
ret
nop
add
vmwrite
jl
fnstcw
xchg
dec
inc
xchg
pop
pop
sub
and
test
xchg
mov
jmp
fisttpll
dec
aam
pmulhuw
lea
lea
ret
xor
sbb
adc
loope
cmp
in
daa
repz
out
inc
in
push
out
add
jl
sahf
mov
testl
loopne
jle
cmpsl
cmc
les
pop
outsb
dec
pushf
std
gs
mov
dec
pop
les
clc
scas
dec
pop
and
dec
in
jl
sub
pop
loopne
movl
sub
add
mov
int3
jno
push
jne
sbb
fdivrs
add
call
jns
movsb
jb
xchg
pushf
loope
popa
jmp
xor
dec
ss
mov
fs
push
xchg
clc
lretw
inc
mov
and
adc
pop
cmp
movsb
fwait
pop
xor
sbb
mov
sub
or
out
cltd
out
jae
aaa
fwait
sbb
adc
lods
jns
mov
dec
dec
lock
addr16
cld
add
lahf
push
jmp
fwait
mov
mov
stc
std
mov
mov
negl
dec
add
jmp
test
popf
jge
mov
inc
arpl
nop
test
popa
adc
popf
mulb
movsl
cmp
pop
inc
addb
xorb
aaa
fisubl
mov
outsl
ja
xchg
ret
es
and
movsl
cmc
mov
mov
lds
inc
lret
cmpsb
dec
jno
ret
sbb
dec
repnz
sarb
adc
repnz
mov
push
or
cmp
push
or
outsl
or
adc
data16
insl
xorl
inc
jl
pop
shl
pop
hlt
or
pop
bound
loopne
cmpsl
or
sub
insl
inc
xchg
pop
pop
pop
ret
mov
ljmp
mov
js
dec
mov
ja
call
pop
popa
jb
cltd
mov
insb
and
rcl
xchg
les
in
inc
add
xor
jo
inc
inc
fstpt
cli
sub
sbb
icebp
mov
inc
jb
js
mov
adc
out
shll
xchg
inc
jg
aad
sub
incb
or
sarl
pop
or
aam
mov
mov
mov
adc
dec
ljmp
pusha
xchg
lret
jns
jg
push
mov
arpl
aad
in
add
icebp
into
popa
div
mov
decl
out
push
je
test
je
mov
ror
cltd
jg
add
rep
mov
jle
stos
adc
std
sti
xchg
out
sahf
cmp
add
jl
ja
pop
mov
fnsave
fcomip
xor
push
xchg
jae
hlt
stc
or
fdivrs
sub
fcmovne
lods
hlt
push
jne
sbb
push
xchg
cmpl
cmpsl
fldt
sarb
cmp
xor
xchg
hlt
test
aad
fidivl
xor
xchg
popa
pop
cmp
or
ljmp
pop
jge
pop
aad
mov
test
aaa
sub
ret
fmulp
frstor
mov
idiv
push
mov
insl
mov
inc
enter
aam
sub
push
shrb
ret
jmp
jne
je
paddd
jno
push
imul
xor
ljmp
imul
xchg
adc
mov
sub
scas
push
lock
fwait
xor
push
adc
xchg
aad
or
mov
jb
mov
mov
inc
xchg
rcll
into
inc
jnp
sub
dec
cltd
int3
push
jbe
test
jge
pop
mov
push
icebp
repnz
mov
inc
push
pop
jp
mov
out
std
mov
xchg
mov
xor
jl
mov
push
pop
cmc
dec
inc
push
in
imulb
mov
jp
inc
and
ret
mov
cmpsb
pop
jle
jl
jo
fidivl
xchg
push
ljmp
lret
lods
in
push
xchg
jae
int
add
sahf
sti
pop
mov
mov
inc
adc
popa
jbe
mov
mov
loope
mov
loopne
test
push
mov
lahf
loopne
sbb
in
in
sbb
pop
adc
or
push
pop
mov
jo
ud0
fldt
xor
push
xchg
rorl
pop
lods
add
jge
data16
imul
das
adc
mulb
shlb
test
adc
mov
pop
pop
out
imul
lret
mov
gs
sub
jbe
jl
jbe
ds
and
dec
stos
ret
test
add
popf
adc
sbb
adc
inc
cwtl
scas
and
call
sub
pusha
rcrl
add
gs
sub
or
mov
sbb
clc
add
dec
cmp
ret
dec
stos
daa
inc
ffreep
add
jg
pop
lret
jp
push
dec
pop
add
dec
imul
filds
adc
pushf
call
xchg
jno
cmpsb
popa
cmp
aad
push
cmp
xchg
call
push
jle
ret
dec
jns
sbb
xchg
adc
and
pop
out
pop
imul
push
jmp
popa
jne
pusha
mov
mov
push
jno
lcall
push
mov
mov
out
rcrb
fidivs
mov
mov
xchg
pusha
mov
pop
icebp
push
xchg
lret
or
es
cmp
push
mov
mov
pop
ja
lea
mov
lcall
jmp
dec
aam
sbb
scas
stc
jne
fldcw
test
insl
cmp
mov
or
aad
and
jl
leave
inc
lock
inc
pop
and
fwait
mov
cld
pop
pop
xchg
mov
pushl
mov
mov
cwtl
pop
outsb
dec
sbb
jle
outsl
sub
cli
int3
mov
jb
cmp
sub
jge
aaa
popf
xchg
or
sub
or
outsl
sbb
cs
jge
sahf
sbb
imul
cmc
adc
xor
add
mov
out
xchg
clc
testl
js
or
test
mov
daa
sbb
mov
add
jecxz
push
or
push
cltd
and
nop
adc
popf
and
add
les
jl
lods
jo
mov
mov
xchg
jo
testl
into
dec
adc
xor
fcmovu
xchg
cmp
cmp
test
not
dec
mov
dec
mov
jb
outsl
add
push
add
fwait
mov
xchg
test
xor
inc
stos
cwtl
sub
mov
mov
mov
mov
jle
inc
pop
out
cmpsl
imul
pop
pusha
call
stc
add
pop
dec
mov
movsb
jmp
sub
and
stc
push
scas
and
pop
lcallw
addr16
adc
sbb
add
adc
andb
xor
fcomps
lcall
jecxz
idivl
fisttpl
test
jno
sub
lds
or
mov
faddl
stos
push
dec
push
in
xor
xchg
adc
sub
pop
pushf
fildl
push
inc
movsb
sub
sub
add
js
ror
icebp
jns
mov
lea
ja
insb
xchg
es
cmp
or
pusha
imul
out
insb
out
int3
pop
cs
call
mov
adc
jnp
out
lahf
add
inc
mov
imul
inc
loopne
outsl
cmp
and
data16
arpl
sub
and
imul
and
jb
sbb
jmp
xchg
pop
mov
or
push
push
imul
aad
xchg
stc
lock
push
es
cltd
fcomps
sbb
and
fldcw
rolb
loopne
dec
iretw
jns
adc
insl
icebp
les
sub
sbb
mov
sbb
icebp
and
mov
dec
adc
xor
add
gs
jbe
outsl
dec
xchg
gs
lret
ljmp
and
fistpll
push
addr16
jg
push
add
mov
adc
mov
std
pushf
fdivrl
adcl
inc
mov
cmp
jo
loop
adc
or
mov
xor
cwtl
imul
mov
icebp
pop
out
cmp
push
fdiv
and
fs
xchg
lock
test
jmp
inc
push
xlat
js
icebp
jbe
and
jno
jl
in
dec
sub
mov
xchg
mov
aaa
dec
or
cmp
imul
popf
mov
dec
and
xchg
pop
or
ljmp
xchg
jmp
pusha
cmp
out
ss
jnp
push
in
sub
bnd
cwtl
scas
rclb
add
pop
out
sub
mov
shrb
and
jg
sti
xor
lock
sahf
imul
cmp
dec
es
dec
leave
xchg
xor
shll
jno
scas
ljmp
mov
xchg
icebp
pop
aaa
mov
mov
addb
push
or
or
pop
cmp
shlb
fsubp
inc
cmp
popl
adc
ja
add
push
mov
in
outsl
jle
inc
and
pop
adc
cltd
jmp
dec
pop
mov
aad
and
sbb
out
inc
push
dec
mov
cwtl
aam
or
mov
mov
lock
enter
add
clc
clc
add
leave
sahf
lock
xchg
mov
lea
lcall
jp
pop
lock
dec
adc
int
in
iret
ja
xchg
sbb
jns
sbb
movsl
inc
aam
push
je
test
push
mov
pop
cli
dec
out
push
mov
out
jnp
push
scas
jne
jge
add
inc
push
inc
sub
mov
cmpsb
cltd
repnz
clc
cmp
sub
int3
xor
fcmove
jnp
sbb
xchg
pop
add
push
stos
out
dec
cmpsl
sbb
inc
pop
push
inc
cwtl
push
or
jp
sub
outsb
jge
dec
data16
mov
dec
movsb
jb
popa
mov
gs
push
inc
popa
in
sub
add
dec
enter
das
aas
fstps
adc
insb
pop
data16
adc
dec
push
dec
iret
mov
sbb
mov
mov
sbb
mull
mov
fstpt
jb
pop
out
pop
aaa
xchg
mov
addb
sub
stos
pop
addb
sbb
and
lods
pop
lock
mov
or
dec
pop
xchg
or
add
dec
fisttps
pop
dec
mov
push
sbb
mov
ds
add
ret
imul
sbb
xor
jae
cmp
lea
insb
rcrl
jnp
push
out
push
pop
jmp
xor
adc
in
xor
data16
or
add
cmp
xchg
jne
adc
adc
push
daa
adc
mov
sbb
or
decl
ret
loopne
scas
loopne
sub
out
jno
cld
insb
fs
stos
mov
data16
pop
add
mov
fstpt
xor
and
xchg
and
movsb
cmc
mov
test
scas
leave
mov
jo
mov
mov
push
xchg
pusha
dec
bound
push
inc
insb
lahf
pop
add
mov
xchg
out
mov
adc
aas
test
pusha
or
je
and
cmpsb
ret
jl
add
inc
incl
mov
dec
and
test
arpl
mov
fs
fcomps
call
das
mov
sub
cmpsl
push
das
mov
jns
adc
ret
in
pop
jne
inc
insb
outsl
mov
mov
cltd
loopne
inc
imul
lods
sti
inc
xchg
and
int
in
cmc
jmp
jg
push
shrb
ret
pop
out
aaa
and
xchg
ja
jo
rclb
hlt
lret
inc
movsb
pop
cmp
stos
pusha
add
pop
cltd
test
cmp
mov
test
scas
movsl
push
imul
lods
push
pushf
mov
sub
push
jl
aaa
in
xchg
dec
andb
sti
repnz
and
popa
jno
rclb
push
lods
leave
xchg
orl
dec
push
cmp
and
das
movsl
aam
and
mov
sbb
aas
fcmovne
cmp
int
or
mov
xor
shll
mov
mov
dec
insb
sbb
and
cmp
sahf
packssdw
aad
pop
xor
add
xor
ljmp
push
pop
fidivrs
movsb
and
fbstp
dec
mov
in
and
pop
or
adc
outsb
inc
bnd
out
out
lds
pop
dec
and
mov
addr16
adc
je
pop
jl
into
dec
xchg
ljmp
add
mov
xchg
ljmp
test
and
xlat
jno
cmp
inc
push
xchg
daa
push
pandn
mov
dec
stos
testl
ret
out
das
add
cli
and
ret
sub
clc
jl
add
clc
out
mov
test
jne
fwait
test
lcall
neg
sbb
fisttpl
sahf
and
fidivrs
pop
jmp
inc
lds
gs
sbbb
mov
cmp
xor
dec
push
adc
or
sub
push
mov
ss
inc
adcl
push
xchg
lods
jno
loopne
sahf
hlt
or
pop
dec
cli
adc
mov
aaa
fidivl
xchg
sbb
mov
std
imul
jb
scas
pop
sub
adc
mov
ret
xchg
sub
iret
sbb
dec
mov
add
cmpsl
inc
out
xor
cmp
imul
inc
fsubrs
xchg
fucomip
lret
jge
in
pop
or
test
and
dec
imul
dec
xor
cmp
or
dec
and
gs
mov
xor
jo
adc
adc
outsl
xchg
in
mov
and
push
push
inc
xchg
cwtl
add
pop
or
aad
outsl
push
popa
xor
jb
jbe
push
or
cmpb
pop
xor
cmp
das
stos
jno
mov
sub
imul
cmp
jne
cmc
out
cwtl
pop
bnd
mov
mov
divl
leave
fdiv
push
int3
sub
jp
stc
jecxz
xchg
das
mov
mov
in
cli
push
hlt
aam
test
sahf
scas
xlat
add
cmp
test
test
loopne
fdivrl
mov
or
cmc
clc
cltd
add
sub
fcmovnu
pop
cmpsl
pop
stc
jmp
inc
shl
fnstenv
xchg
pop
xchg
mov
test
outsl
or
lcall
xor
loopne
mov
rcll
mov
pop
test
xchg
xchg
dec
stos
mov
imul
or
pop
aam
enter
pop
sub
or
sbb
sub
ss
cmc
inc
lds
aam
fidivrs
mov
leave
sub
push
sti
jne
dec
jmp
jno
ds
in
hlt
aaa
mov
iret
lahf
mov
int3
dec
inc
leave
sahf
push
cwtl
aam
mov
data16
test
shlb
pop
ljmp
xchg
sbb
sub
jns
mov
and
jno
dec
fucom
push
xor
or
xor
cli
adc
in
xlat
pop
clc
arpl
popa
xchg
stc
and
inc
sbb
inc
and
add
dec
dec
rcrb
sub
sbb
movsb
repz
movb
mov
xor
jg
bound
add
scas
aam
shlb
call
jmp
dec
xor
fnstcw
cmpsl
push
and
mov
int
js
cltd
pop
popa
or
out
cmp
das
cltd
mov
lds
lods
loop
and
mov
outsb
jle
xchg
cmp
test
or
sbb
gs
cwtl
jns
pop
popw
dec
aam
in
jecxz
sbb
sub
sub
mov
cmpsl
por
add
adc
cld
add
ja
sub
clc
inc
int3
aaa
cli
xorl
mov
cmp
xchg
mov
adc
xorl
dec
add
cmp
mov
dec
lret
daa
lods
sti
cmp
sti
fidivs
and
and
or
inc
cmpsb
xor
xchg
push
mov
add
push
adc
push
and
shl
xchg
popf
adc
out
adc
mov
mov
mov
sbb
sub
adc
xchg
movsl
pop
aad
cld
dec
xchg
sub
mov
dec
xchg
cwtl
cmp
les
test
ret
adc
ljmp
ljmp
daa
sub
imul
shll
mov
shlb
mov
dec
inc
xchg
pop
cltd
rcrl
dec
jnp
or
dec
push
sub
cmp
subb
push
push
fadds
and
fs
popf
push
mulps
cmp
adc
popa
push
out
scas
mov
cmp
in
movsb
jl
push
pop
xchg
push
pusha
dec
les
fwait
cmp
cwtl
push
out
sub
movsl
ja
adc
data16
cmp
jae
jno
in
leave
mov
movsb
ja
push
or
addr16
shlb
lock
cld
scas
clc
sub
pop
add
mov
xlat
jno
mov
mov
jl
mov
addr16
mov
icebp
decl
jne
or
mov
icebp
fistl
mov
clc
das
inc
std
push
test
jmp
push
sbb
lahf
add
push
aad
idiv
test
popf
lcall
jb
sbb
rorl
pop
imul
jne
stos
push
inc
sub
and
sub
lahf
lahf
test
or
cmpsl
cmp
nop
in
push
imul
dec
xchg
and
and
call
das
out
add
or
punpcklbw
stos
and
xchg
dec
xchg
ficoms
and
and
pusha
pop
aas
test
cld
cmp
push
pop
mov
or
out
jge
push
cmpsl
das
sarl
jecxz
xchg
lods
mov
sbbb
sub
pushf
jbe
adc
das
sub
imul
nop
mov
lcall
test
dec
popa
mov
xor
nop
fists
sub
stos
xchg
addr16
sbb
mov
imul
xor
or
data16
mov
gs
and
in
dec
and
cmc
adc
sarb
push
jp
xchg
ret
inc
xchg
adc
leave
adc
xchg
mov
inc
cmp
pop
pushf
inc
cmp
sbb
popf
cmc
jbe
aaa
hlt
dec
aas
sti
adc
jo
mov
xor
dec
pop
push
push
shll
inc
cwtl
sarl
mov
inc
orb
pop
or
xchg
xchg
out
imul
sbb
jp
cmc
or
ss
xchg
test
jecxz
dec
sbb
or
or
mull
mov
outsb
stos
dec
push
sbb
out
fcomp
and
leave
mov
adc
call
mov
arpl
insb
sub
sub
fstl
push
jb
stos
out
dec
cmp
and
gs
push
mov
jmp
out
xor
push
mov
imul
lods
clc
loopne
adc
mov
fistps
cli
fdivl
mov
lock
cmc
jo
stc
sbb
add
movsb
lods
test
jbe
stc
incl
dec
lcall
imul
mov
adc
loope
jmp
adc
sbb
push
ret
jb
pop
ss
or
xchg
jmp
sub
stos
push
test
loop
dec
in
aam
popf
mov
inc
sbb
decl
mov
jns
lods
mov
mov
or
stos
cld
imul
mov
jecxz
or
or
cmc
adc
xchg
hlt
mov
fwait
sub
pop
lods
dec
icebp
cmp
lods
mov
pop
pop
mov
mov
rolb
nop
jno
cmp
mov
std
in
dec
sar
ret
push
push
cmc
stos
pop
int3
adcb
pop
push
lahf
mov
jp
add
fs
dec
dec
push
sbb
add
push
lock
daa
adc
shrb
in
xchg
jnp
loopne
add
cmp
out
jb
into
sub
push
cs
stc
sbb
std
lods
iret
mov
nop
xor
mov
outsb
fstl
dec
xchg
xor
test
fstpl
jecxz
and
mov
cmpsl
cmp
clc
push
idivb
or
out
jo
ds
fnstsw
inc
push
adc
adc
repz
dec
xor
ret
push
ljmp
testl
or
mov
icebp
jmp
adc
in
adc
mov
jae
clc
sub
mov
imul
aaa
loope
mov
sub
out
cmp
or
sbb
lcall
sbb
scas
xor
fsub
popa
push
xor
or
adc
rclb
add
popf
inc
mov
xor
or
dec
and
lret
imul
xchg
pop
inc
fs
ret
ss
cltd
ret
mov
jne
js
xchg
pop
and
sub
xchg
pop
dec
test
mov
mov
jle
lcall
fiadds
mov
jno
ret
sbb
xchg
stos
cld
cltd
jae
dec
sub
and
mov
ret
lea
popf
ret
movsb
gs
add
loope
mov
mov
fadds
cltd
cmpb
xchg
xchg
mov
push
aam
add
mov
scas
cmpsl
dec
test
mov
out
pop
push
or
in
jns
mov
add
sub
add
xor
inc
aaa
fisubrl
push
sbb
rolb
sub
cs
pop
dec
mov
fists
mov
fimuls
push
pop
int
popa
lods
push
loope
notl
or
syscall
insl
das
fisubrl
sub
aam
xchg
ficomps
mov
rolb
clc
or
gs
lret
out
int3
cmp
cmp
cli
popf
mov
cmp
xchg
daa
mov
sub
cmp
add
in
fildll
stos
xor
cmp
div
jbe
xchg
jo
insl
dec
lods
sub
mov
add
pop
rclb
and
push
fwait
imul
out
movsb
jp
mov
xor
push
loop
mov
sbb
dec
hlt
inc
imul
mov
mov
mov
or
xor
mov
mov
sahf
stos
cmp
lock
dec
enter
xchg
dec
xchg
dec
in
mov
lds
adc
dec
jnp
cmc
mov
clc
repz
in
adc
test
mov
mov
cmp
jecxz
jle
cld
jb
stc
xor
push
adcb
aas
cmp
cmp
jle
mov
push
lods
push
add
dec
call
sti
add
loope
or
push
fld
cld
sub
rcl
push
cmp
adc
mov
push
cmp
aam
call
mov
dec
xchg
mov
scas
loop
movsl
das
test
sbbb
ljmp
je
dec
dec
pop
sub
je
push
xchg
and
xchg
das
jno
push
jp
adc
jno
pop
jno
cmc
fimull
notl
mov
xchg
in
sbb
std
cli
dec
out
icebp
sbb
and
pushf
pop
push
fyl2x
adc
push
pop
sub
sbb
cmp
or
inc
jle
mov
mov
mov
shr
push
sbb
ficomps
sub
and
pop
orb
popf
iret
movsl
mov
add
push
pop
scas
js
add
pusha
outsb
xchg
adc
test
jnp
arpl
hlt
xchg
adc
push
aad
push
es
aaa
push
das
insb
push
iret
dec
dec
je
lea
inc
inc
aas
bound
add
cmp
jmp
fdivl
mov
lea
lret
mov
pop
imul
popa
imul
push
bound
xchg
ja
es
ss
shrl
mov
addr16
pop
inc
movsl
dec
push
cmc
test
es
lds
ss
jecxz
mov
pushf
adc
aam
mov
add
xchg
in
jae
mov
push
rol
inc
int3
sahf
inc
bound
jnp
adc
jl
outsb
pop
push
xchg
js
out
test
leave
les
ficompl
pop
fsubs
stos
mov
setb
hlt
pop
cmp
shl
ret
icebp
xlat
or
xchg
rorl
repnz
pop
cli
cli
push
imul
cmp
sti
or
mov
adc
cmp
aam
sti
pop
push
sub
das
pusha
mov
lcall
mov
rcr
scas
inc
cmp
mov
push
je
addr16
mov
aad
pushf
pop
cwtl
sub
fcmovnb
hlt
movsb
xchg
inc
je
inc
shl
xchg
sbb
add
xorb
or
mov
or
or
push
arpl
mov
call
cwtl
mov
aam
aam
jge
out
adc
adc
pop
mov
fs
dec
lret
xchg
les
movsl
fdivrp
lods
pop
les
adc
push
pop
in
pop
rcr
jmp
or
pop
or
sub
cmpl
test
loope
lret
shll
dec
adc
in
ficoml
mov
cmp
inc
or
adc
ds
mov
push
mov
push
jg
ds
pop
and
adc
ror
incl
fcmovnu
adc
sbb
arpl
adc
mov
push
add
rcll
pop
imul
and
movsl
jle
or
mov
mov
xor
sub
scas
mov
and
insb
fneni(8087
pop
xor
or
inc
shll
push
nop
push
dec
or
lds
rol
out
cmp
cmp
dec
pop
mov
dec
notl
clc
clc
movl
sub
and
and
pop
fbld
stos
cld
test
xor
clc
stos
aaa
mov
int
cmp
cmpb
imul
jae
test
pop
sbb
cs
ss
fidivrs
dec
movb
int3
push
rorb
push
aam
mov
inc
or
mov
pop
cli
popa
add
xor
mov
mov
and
jecxz
sbb
xor
and
mov
push
xchg
pop
mov
stos
dec
cwtl
pop
mov
test
ret
scas
inc
lahf
mov
arpl
dec
repz
mov
insl
sahf
ss
sbb
ds
nop
dec
std
adc
pushl
subl
cmp
push
lcall
add
lahf
add
mov
or
mov
pushf
in
insl
xchg
aad
push
xlat
ret
xor
mov
and
lock
xchg
xchg
mov
fwait
lods
sub
cmp
jge
mov
ss
stos
mov
int3
or
inc
mov
lea
gs
xchg
addr16
fstp
jg
push
add
mov
int3
or
inc
cmp
add
sbb
mov
lods
and
lds
rsm
or
arpl
aas
out
push
xorb
movb
push
xchg
dec
add
jg
dec
pushf
jecxz
sbb
mov
fcoml
icebp
inc
dec
sbbb
in
adc
add
xchg
in
and
cmp
loope
movsb
lret
or
into
lret
roll
mov
pop
inc
adc
shlb
jae
lret
ret
jmp
jae
add
xchg
and
bound
popf
push
jg
mov
pusha
in
scas
fdivrl
repz
test
cmp
out
xchg
mov
add
rol
pop
insb
shrd
pop
cmp
outsb
inc
mov
cmp
out
xchg
cmp
ja
in
pushf
mov
xor
or
inc
gs
jmp
das
out
and
cli
hlt
lahf
cmp
xor
out
dec
xchg
aam
nop
addr16
stc
lds
mov
call
cwtl
test
jmp
mov
call
ficompl
repnz
mov
sbb
mov
repz
repnz
push
mov
stc
sub
pop
imul
sarl
sbb
outsb
jnp
int
mov
cmp
outsb
jmp
in
jl
jmp
scas
adc
add
movaps
mulb
orl
addr16
pop
imul
arpl
and
xchg
xor
mov
sbb
xor
dec
fstpt
pop
enter
mov
clc
fmul
xchg
and
mov
and
out
inc
js
test
popa
loope
jl
testl
mov
bound
icebp
cmp
hlt
imul
filds
mov
pusha
xchg
data16
or
mov
cmpsl
inc
ret
pop
xor
mov
repz
push
out
aas
mov
inc
mov
pop
adc
daa
xorb
rolb
loope
jbe
ficomps
out
mov
xor
jmp
xchg
xor
lock
inc
or
jg
push
fcom
mov
jbe
int
into
int3
push
js
shll
jns
xor
cs
lock
bnd
add
add
aas
loopne
adc
mov
aaa
xor
mov
out
mov
mov
aam
dec
adc
sub
xchg
lahf
icebp
stc
and
insl
sbb
testl
sbb
sub
imul
iret
add
sub
punpcklwd
imul
mov
jg
jmp
sub
repz
jmp
fsub
xchg
sub
aaa
loope
xor
jge
sarl
or
cmp
adc
ret
adc
xor
test
popf
sahf
pusha
rol
push
cmp
inc
mov
cmpsb
cwtl
dec
jae
xor
inc
cmp
jl
mov
cmc
sbbl
cs
sbb
std
adc
jne
jb
xor
dec
mov
mov
push
push
repz
jl
stos
xchg
sarl
in
ss
stc
xchg
into
dec
cli
xchg
hlt
ret
int3
mov
imulb
and
shll
inc
or
ret
or
sbb
clc
fadd
fsubrl
jae
mov
sub
mov
push
jb
repz
fdivr
mov
stc
gs
bound
inc
or
or
adc
or
mov
jmp
mov
mov
mov
jmp
add
ljmp
cmp
stc
pop
jne
jno
xchg
mov
scas
lock
jne
mov
decb
mov
add
jo
lret
xor
lret
imul
mov
cmp
fwait
sbbl
lcall
pop
jae
imul
mov
dec
loope
cmpsb
cld
lock
push
sub
and
cmp
add
les
lds
sub
jp
hlt
sahf
std
fists
dec
call
push
mov
hlt
push
mov
xor
out
stc
and
mov
xchg
test
call
int
cmpsl
or
mov
ds
mov
test
add
rorl
sub
inc
xchg
jno
mov
mov
pop
mov
add
dec
cmp
sub
repz
fmulp
jbe
sbb
or
or
fs
xchg
sti
and
in
push
mov
inc
shl
sbb
es
aad
out
rcll
aad
xchg
add
sub
je
lcall
lds
fistps
negl
loope
scas
cmp
hlt
rorl
imul
xchg
inc
inc
call
jae
dec
mov
lcall
std
inc
pop
sar
mov
cmovl
inc
mul
in
sbb
lods
and
inc
jl
insb
pop
adc
nop
sbb
popa
data16
out
sbb
dec
sbb
imul
aaa
jo
cmp
lahf
dec
inc
lods
in
or
std
and
in
dec
aam
cs
in
mov
push
xor
enter
jge
popf
sti
dec
xchg
inc
pushf
cmp
movsl
xchg
scas
pop
sub
out
pop
cmpsb
outsl
cmpsl
xor
out
loope
cmp
xchg
icebp
push
lods
cmp
in
sahf
dec
xchg
mov
mov
mov
add
out
sub
pop
repz
leave
mov
inc
xor
adc
ficoms
sbb
test
mov
call
push
mov
xor
or
cltd
push
xlat
fcoms
int
push
ret
fwait
xchg
imul
aas
pop
pop
shlb
fldl
dec
je
repnz
mov
sub
std
rolb
pop
dec
imul
in
enter
jle
inc
or
rcrb
aam
out
xor
daa
aas
adc
in
sarl
mov
subb
into
pop
fnsave
shll
inc
sbb
stos
add
jle
outsl
push
xchg
push
add
pop
das
jns
mov
inc
lret
sbb
dec
inc
out
movsl
sub
cmp
or
stos
inc
mov
popf
cmp
test
adc
iret
jmp
push
es
push
loope
or
insl
mov
push
dec
pop
jne
clc
push
int
mov
addr16
lahf
xorl
lea
sbb
xor
or
aas
jg
stos
pop
ror
je
cmp
test
xor
icebp
icebp
outsl
inc
inc
mov
mov
inc
sbb
and
cmp
push
jmp
mov
xor
jp
aad
ss
xorb
iret
loope
ljmp
rcll
cmpsb
nop
hlt
mov
sbb
mov
mov
aam
dec
clc
cmp
mov
mov
jno
inc
mov
pop
jg
mov
fisubs
push
and
clc
ror
lcall
dec
cmp
int3
mov
imul
jns
stos
clc
mov
je
sti
mov
hlt
int
ljmp
rcll
mov
out
mov
xchg
leave
in
aad
insb
pop
mov
push
nop
adc
adcb
lahf
out
mov
mov
sub
pop
sarl
add
xor
push
mov
sub
xchg
loop
inc
pusha
adc
insb
ret
adc
je
inc
test
mov
bound
fucomi
mov
sub
pop
cmp
dec
dec
pushf
and
jecxz
inc
add
sbb
jecxz
fidivs
pop
jno
and
mov
shrl
aas
outsl
mov
adc
lcall
scas
adcl
call
insl
nop
dec
in
push
and
cmpsb
xchg
hlt
pop
pop
bound
cltd
and
mov
jne
mov
fisubrl
sub
xchg
cmpsb
and
push
mov
and
mov
mov
cwtl
out
mov
mov
mov
mov
inc
sbb
ds
xchg
lods
dec
sbb
sti
mov
into
movsb
push
xchg
sbb
push
jle
xchg
push
xor
cltd
repnz
loop
shlb
daa
cmc
fs
or
mov
mov
or
inc
ds
out
or
or
sub
inc
cmp
pop
scas
sahf
xlat
mov
test
movsb
les
fdivs
jecxz
jns
push
wbinvd
pushf
sahf
mov
inc
sub
arpl
mov
fnstcw
and
iret
mov
xchg
dec
dec
dec
pop
xor
add
pop
jle
rorl
adc
dec
pop
sbb
pop
pop
jmp
insb
imul
out
mov
cmp
movsb
hlt
cmc
nop
mov
unpcklps
cmp
mov
test
test
out
icebp
test
nop
popa
cmpsl
xor
pop
lret
mov
sub
inc
mov
adc
jg
xchg
sub
dec
mov
lods
ja
push
inc
rcrb
sub
out
add
dec
cmp
mov
adc
cltd
test
jge
repnz
popf
pop
addr16
pop
adc
mul
xchg
lds
lods
lcall
std
ljmp
dec
scas
xor
sub
mov
mov
inc
lret
sbb
adc
out
sbb
dec
stos
mov
and
orl
clc
sbb
es
outsl
je
nop
inc
and
add
push
or
sbb
lds
sahf
mov
jp
inc
sub
xor
enter
fcomip
dec
mov
sub
cmpsb
jp
sarl
and
lcall
ret
fmulp
jno
jg
mov
pop
insl
shl
dec
or
pop
pop
sbb
xchg
into
scas
mov
sub
int3
js
inc
insl
dec
pop
jno
std
and
jns
and
test
adc
mov
inc
sbb
add
jne
fmuls
lret
cmp
sahf
mov
mov
mov
pop
jo
add
mov
mov
add
mov
mov
push
rorb
cmpsb
das
iret
popf
xor
xchg
loopne
pop
enter
fisttps
outsb
inc
jge
mov
adc
add
jbe
pop
add
out
xchg
out
or
stc
movl
mov
and
jl
lahf
mov
fadd
mov
enter
xchg
jae
aas
addr16
nop
jp
jno
inc
fsubrs
fcmovnu
and
jmp
mov
mov
push
daa
push
mov
jns
xchg
stos
sbb
mov
cmp
inc
test
jae
test
in
inc
dec
pop
cwtl
scas
imul
xorb
xchg
ds
dec
mov
adc
in
cltd
jle
mov
hlt
jge
mov
test
jp
dec
dec
xlat
fstpt
insb
movsb
aaa
dec
js
scas
xor
jp
jp
pop
imul
lea
insl
push
mov
shlb
out
mov
jp
dec
fisubs
insb
dec
sbb
aad
ret
push
mov
and
jle
fmuls
jle
mov
lcall
cmp
mov
fldenv
pop
xor
mov
jo
pushf
mov
test
sub
dec
cmp
mov
or
addr16
cmp
jae
test
cmp
insl
lcall
int
xor
jbe,pn
lods
jo
jne
in
insb
push
dec
shl
fcoms
jg
cmc
cmpsl
sbb
pop
xor
cmp
cmp
mov
or
out
fs
rcll
and
lock
clc
jne
stos
pop
and
shr
lcall
add
icebp
mov
in
add
xchg
es
add
loopne
mov
clc
negl
push
add
ss
push
push
sub
sbb
nop
mov
and
cltd
daa
ss
push
inc
data16
lods
or
add
add
mov
pop
sub
ss
rolb
add
stc
sbbl
loop
add
lods
cmp
mov
cmp
in
test
pop
push
sub
mov
imul
lret
mov
lcall
mul
in
xchg
xchg
clc
mov
xchg
cmpsb
add
cmpsl
push
add
addr16
aas
shrl
rcl
outsb
or
sbb
push
mov
mov
ret
mov
repnz
cmpsl
in
in
push
sarb
jne
sbb
std
in
xchg
data16
pop
lret
pusha
jge
loope
cwtl
mov
push
xor
mov
xor
repnz
loop
adc
jg
lcall
add
mov
lcall
mov
les
dec
and
fidivrl
in
pop
cmp
imulb
push
mov
jp
repz
jg
lret
js
cmp
fadds
push
cmpsb
int3
inc
repnz
lods
sbb
cld
adc
jmp
enter
sbb
lcall
add
inc
mov
scas
pop
push
js
out
shlb
lods
pop
in
mov
ret
push
xchg
popf
dec
int3
inc
push
repnz
mov
pop
mov
in
mov
test
repz
jg
outsb
test
rcrl
es
dec
mov
push
mov
je
xor
xor
cmp
scas
jnp
and
xor
dec
loop
stos
dec
cmpsb
imul
mov
aas
movsb
adc
mov
ljmp
and
lcall
test
and
add
add
orb
rcll
es
int
in
mov
arpl
arpl
inc
repnz
or
insl
xchg
sahf
xchg
out
sti
gs
push
shlb
xchg
jge
das
rol
inc
in
fnstcw
add
pause
pop
jle
inc
cmpsl
jmp
in
icebp
jl
subl
inc
xor
dec
mov
rcl
nop
jp
clc
cmp
pop
sbb
xor
sahf
cmp
imul
add
or
sub
jo
mov
lea
mov
out
fcmovnbe
mov
repnz
into
loope
aas
jmp
imul
scas
mov
xor
adc
mov
imulb
sbb
and
mov
loop
or
adc
mov
inc
add
push
xor
mov
pop
push
int3
jmp
jg
cmp
jle
or
xor
stc
or
pop
inc
xchg
inc
imul
push
jae
daa
adc
fcmovnu
rolb
jns
push
and
mov
mov
dec
int3
outsb
pop
jb
daa
push
andl
mov
mov
push
dec
push
push
add
dec
mov
cmpl
bound
stc
stc
adc
lret
cmp
pop
inc
int
jne
adc
insb
bound
adc
sti
dec
mov
sbb
test
stos
insb
repnz
test
movsl
pop
fisubl
gs
inc
push
lods
cmpsl
mov
sub
ret
cltd
stos
or
lods
fisubrs
fwait
stos
sub
xchg
push
xor
sub
movups
popl
sub
pop
stos
lock
mov
sti
test
and
dec
sbb
dec
xor
ret
xchg
dec
jmp
ljmp
dec
pop
inc
add
mov
mov
shr
lahf
cmovo
xchg
js
pop
js
dec
adc
negl
sti
loopne
outsb
lcall
xor
fs
dec
or
jge
dec
ficoms
or
cs
mov
ret
outsb
jnp
xchg
mov
add
xchg
and
add
mov
inc
mov
push
sti
adc
mov
cmp
mov
dec
mov
add
cwtl
pop
daa
or
sbb
adc
cmc
cmp
cmp
mov
xchg
je
sub
mov
jge
dec
push
and
dec
aas
insb
pop
nop
movsb
stos
push
xor
sub
mov
pop
inc
jnp
pop
pop
insl
add
lret
add
testl
sbb
test
loopne
inc
int3
mov
mov
cmp
cltd
sub
in
and
pop
inc
sub
inc
sbb
movsl
or
xor
stos
mov
insl
xchg
lahf
cltd
mov
push
and
and
pop
inc
or
fnstcw
lods
outsb
hlt
ss
pop
aam
xchg
cmp
scas
rcrl
xchg
jmp
push
inc
cs
push
push
sub
cld
lahf
push
jecxz
mov
cmpsb
andb
xlat
pop
imul
xchg
jl
into
ficoml
sarl
mov
push
cmp
out
ja
jbe
mov
or
xchg
push
shrl
dec
pop
adc
mov
enter
jae
aam
fiadds
movsb
outsl
fdivr
lea
mov
in
jno
sahf
pop
mov
mov
push
dec
sbb
movl
push
mov
insb
ljmp
bnd
mov
and
out
cmp
sub
and
leave
jne
into
mov
xchg
je
and
lahf
jnp
sub
fwait
xchg
jbe
adc
js
mov
add
aad
or
jge
push
andb
dec
psubb
mov
test
mov
pop
pop
push
jno
xchg
and
xor
je
jl
xchg
push
mov
in
mov
subl
ret
xchg
push
jbe
fstp
pop
inc
shll
nop
stos
xchg
xchg
push
in
int3
aad
inc
les
push
loop
jb,pt
pushf
mov
jecxz
xchg
pushf
sbb
xchg
mov
das
lock
pop
mov
push
mov
lock
mov
inc
pop
xchg
jg
push
movsl
lods
push
cmp
shrb
inc
cmp
cltd
test
daa
jae
jnp
jne
bound
mov
pop
iret
loope
call
lods
add
mov
inc
fisubrl
ret
rcrb
gs
add
test
roll
adc
ret
cmp
jne
cmpsl
pop
add
divb
add
mov
int3
add
and
xor
ret
cltd
incl
pushw
mov
in
push
sub
adc
stos
fsubr
jle
dec
push
mov
insl
rclb
scas
jae
and
lods
push
ficoml
scas
mov
adc
pusha
imul
mov
push
push
pushf
mov
test
sarl
xor
push
push
arpl
gs
out
arpl
push
notb
cmpsl
stos
stc
negb
xchg
icebp
xchg
pop
into
fadds
lods
mov
ljmp
mov
mov
pop
test
or
outsb
fnsave
push
ja
jbe
inc
enter
mov
stc
insl
outsb
ja
pop
xchg
xchg
push
xchg
push
add
sub
outsb
adc
movsl
inc
into
sub
gs
aad
jge
push
mov
xlat
cmp
and
mov
cmpsl
push
jo
pop
mov
mov
or
gs
ret
jg
imul
div
or
lea
repz
rorl
sub
inc
mov
or
int
ljmp
ds
js
out
insl
inc
add
push
imul
mov
jne
cmpsb
inc
dec
pop
and
fisttpll
push
add
mov
mov
loope
flds
fadd
jge
lods
in
xchg
adc
rcrb
push
and
jg
daa
test
xor
mov
test
add
pop
sbb
in
mov
fsub
add
or
push
pop
pop
add
int
pop
sub
pushf
icebp
aas
or
aaa
and
or
add
sbb
sub
mov
in
jbe
scas
nop
push
aaa
insl
xchg
repnz
sbb
mov
inc
dec
cltd
mov
sub
or
lret
jg
sub
iret
dec
aad
lret
fdivrl
loopne
shl
adc
popa
dec
or
mov
psrad
enter
xchg
jno
xchg
inc
jbe
pop
add
jg
fnstsw
mov
lods
aaa
pop
call
xchg
stc
cmc
shr
aas
jns
pop
pop
xor
and
pop
mov
mov
dec
aad
push
inc
xor
std
cmp
sbb
cmp
dec
jle
mov
sub
andb
nop/reserved
in
adc
and
jae
call
in
lds
out
stos
jbe
mov
data16
test
cmc
lcall
lods
xchg
jns
cmp
push
call
sub
loop
jne
cmc
push
sbb
pop
add
addb
pop
push
shl
nop
fnstsw
pop
xlat
call
jbe
ffree
sbb
dec
xchg
xchg
ret
mov
in
xchg
loope
rorl
mov
mull
cwtl
or
inc
push
dec
mov
lret
xchg
div
mov
sub
int3
rorl
aas
jmp
mov
fnstsw
lock
scas
scas
mov
shll
sbb
das
rcrb
xor
push
pop
sub
or
insb
pop
mov
lahf
add
add
sub
aam
push
push
aam
or
xor
jns
arpl
xchg
jp
imul
sahf
xor
jns
mov
sub
sbb
bound
cltd
mov
ret
jb
mov
jmp
fcmovnu
clc
jnp
int3
outsb
repnz
fistps
aad
and
lods
xor
jbe
inc
out
std
add
xlat
fdivrp
mov
dec
xchg
aas
lret
sub
mov
dec
inc
cmp
add
int3
xchg
mov
xchg
mov
ret
sub
test
jo
jecxz
xor
cmpb
inc
cmp
xchg
or
ret
mov
nop
shlb
lds
cli
adc
cmp
mov
pop
sti
jmp
or
jg
test
icebp
push
ret
fcompl
iret
push
jo
jmp
lret
mov
mov
addr16
popf
jno
cltd
xchg
in
cmpsb
dec
fidivl
mov
dec
sub
and
jle
jnp
mov
stc
sti
dec
sbb
dec
sbb
rolb
xchg
jne
and
jno
inc
xor
aad
clc
dec
loope
ljmp
sbb
ret
add
fsubs
and
jmp
xchg
mov
call
jge
pop
lods
call
jns
fst
das
jg
das
ficoms
aaa
clc
xor
les
jbe
xchg
out
push
mov
cli
dec
xor
adcb
adc
stos
fstps
aam
daa
dec
imul
dec
lods
add
pop
and
and
inc
pop
mov
popa
test
mov
mov
lods
push
xor
sbbb
jbe
mov
inc
inc
or
rcr
iret
mov
mov
outsl
scas
or
sub
ret
add
and
loop
and
cmp
ret
call
mov
out
mulb
out
mov
int3
sub
sbb
cli
cmc
fisubrl
adc
fisubrl
sub
aam
test
fldt
push
and
sbb
mov
dec
mov
pop
pop
mov
mov
mov
xchg
sub
and
notl
xchg
push
cmc
cltd
iret
ljmp
xor
in
cmpsb
jno
test
push
mov
lds
xchg
pop
repz
jo
and
inc
gs
aad
dec
push
cmp
arpl
cmpsb
inc
jne
inc
mov
inc
sbb
pop
cltd
xor
jmp
cmc
addr16
dec
pushl
xlat
in
xlat
or
pop
dec
imul
ret
out
fiadds
mov
inc
jg
mov
sub
lea
es
cltd
jmp
sbb
inc
mov
jecxz
xor
je
sbb
sarl
mov
jbe
data16
rcll
pop
add
adc
or
leave
lcall
mov
pop
xchg
daa
mov
std
adcb
sub
test
cmp
add
jge
mov
jo
dec
outsb
jb
inc
jp
call
aas
dec
mov
sbb
frstor
cmp
inc
frstor
mov
mov
dec
aam
lcall
ret
fs
lret
pop
jmp
clc
or
mov
dec
xchg
xchg
adc
aas
jl
repnz
ret
dec
ljmp
fbstp
enter
jne
mov
and
insb
loope
mov
addb
out
out
push
jle
inc
jl
sahf
pop
xchg
in
xchg
sbb
push
xchg
rorb
lret
lcall
popf
adc
push
mov
mov
xchg
xor
and
push
loop
test
xchg
or
movsl
dec
fwait
add
jge
xchg
xchg
addr16
sarl
jbe
sub
repz
cwtl
pop
int
dec
ss
loopne
or
fdivr
ret
pop
imul
mov
movsb
xor
and
fwait
adc
into
iret
out
out
cmpsb
and
inc
cmc
das
idivl
pop
aaa
xor
pop
imul
sub
scas
and
cli
aaa
clc
and
imul
mov
pop
adc
inc
scas
xchg
dec
dec
sub
sarl
aam
mov
mov
inc
cmp
mov
dec
mov
inc
nop
xor
mov
and
imul
inc
fwait
mov
mov
cmp
inc
iret
icebp
fcoms
ret
into
lods
fsts
ret
and
sub
movsl
sub
add
xchg
push
repnz
mov
jmp
push
lock
cmp
sub
jbe
pop
les
sbb
inc
rorb
inc
loopne
mov
xchg
in
add
bound
mov
xor
cmp
cmp
aam
push
mov
add
push
repz
inc
jnp
gs
xchg
adc
adc
lds
hlt
cmc
stos
jp
mov
sbb
pop
sti
pop
aad
inc
popa
in
xor
and
cmp
int
push
and
or
loop
call
adc
cmpsl
in
insl
fstl
std
cmp
push
mov
sbb
mov
hlt
xchg
cli
test
dec
lea
jns
rcrb
int3
cmp
push
and
loopne
dec
and
jmp
fsubl
jle
js
pop
nop
sar
cmc
pop
lds
mov
insb
mov
popf
test
pop
aas
leave
and
cmp
mov
arpl
jbe
movsb
adcl
sbb
and
mov
push
popf
jo
aaa
sbb
pop
jnp
add
jecxz
into
push
call
jbe
sub
cmpsl
imul
adc
notl
mov
popa
inc
cs
enter
or
sbb
mov
out
enter
enter
pop
push
push
and
push
inc
xchg
mov
sub
lret
cmp
mov
popa
add
cli
sub
jecxz
addr16
lret
mov
add
dec
cli
outsb
dec
scas
shll
iret
popa
adc
sub
jno
and
add
aas
push
insl
loope
mov
add
nop
sub
leave
out
push
inc
scas
int3
mov
adc
fisubl
inc
xchg
mov
aaa
adc
popf
mov
loop
inc
dec
stc
jecxz
loop
or
xchg
xchg
mov
pop
orl
lret
dec
dec
push
cld
jnp
add
pusha
inc
arpl
pushf
cmc
mov
and
rorl
push
jbe
mov
push
enter
xlat
push
push
test
sti
mov
in
dec
mov
add
add
fwait
movsl
ja
inc
repnz
xor
jae
or
cld
mov
or
mov
jp
pop
push
lret
mov
inc
call
scas
pushf
add
or
loopne
sub
lock
push
nop
jo
sahf
push
iret
out
lea
and
jnp
dec
gs
fiaddl
jecxz
pop
stos
pop
push
push
jp
pop
mov
sahf
xchg
sbbb
mov
hlt
inc
add
mov
jle
push
push
and
in
pop
stc
jecxz
lcall
in
add
insl
cmp
mov
pop
sub
fstl
pop
or
aas
xchg
sbbl
and
js
ljmp
ja
sti
fdivs
xchg
in
lcall
mov
bound
mov
cmp
push
mov
pusha
mov
mov
pop
mov
pop
add
xlat
inc
ret
mov
mov
test
push
fwait
cli
call
repnz
and
xor
push
or
dec
out
sbb
lds
lods
mov
sbb
lret
nop
insl
rorl
int3
fldl
sub
add
xor
jmp
jge
dec
cmp
mov
mov
int
into
ret
test
adc
cmp
loopne
jae
adc
add
call
hlt
cmp
pushf
jae
or
into
repz
repz
inc
xor
mov
aaa
icebp
pop
xlat
frstor
rclb
adc
scas
push
lea
xorb
outsb
add
or
rcrl
dec
mov
mov
mov
sub
rorb
adc
adcb
sub
adc
in
ficompl
sbb
pop
mov
or
mov
fwait
lea
sub
adc
and
mov
adc
inc
movsl
bound
shrl
hlt
loop
loope
jle
mov
push
dec
cli
and
mov
and
jmp
movsb
xchg
jae
int
pop
inc
push
lea
ds
int
lret
int3
mov
inc
out
subb
push
rorl
or
cli
outsb
js
adc
dec
mov
jne
mov
sahf
insl
paddsw
test
jl
mov
sub
fsubl
out
clc
jmp
std
jp
xchg
or
xchg
mov
xor
mov
mov
into
in
fstl
xchg
or
fsubrs
in
inc
mov
jp
push
mov
push
leave
insb
pop
loope
push
dec
pop
shl
popa
jns
mov
inc
imul
lahf
jo
fmull
fmull
sub
vmwrite
ds
ja
jae
mov
subl
lahf
mov
call
lret
dec
cmp
pop
test
stos
and
xchg
pop
xor
mov
inc
xor
dec
sbb
nop
lcall
ss
cmp
mov
sti
mov
je
pop
add
call
push
mov
mov
add
pushf
je
popa
out
fiaddl
and
fnstsw
pop
xor
pop
mov
loope
push
mov
and
imul
arpl
jne
jbe
jo
mov
test
in
bound
es
ja
stc
mov
cmp
inc
jmp
aaa
cwtl
bnd
push
add
adc
cmc
js
and
das
push
imul
hlt
in
int3
cwtl
mov
stc
push
js
pop
into
sub
clc
push
adc
or
sti
inc
mov
pop
adc
pop
push
jge
fst
lret
pop
or
xor
sarb
cmp
mov
out
aas
sbb
inc
push
cmp
sbbl
icebp
pop
fmuls
outsb
xchg
add
es
add
mov
fildl
mov
sub
push
cmpsb
dec
rcrb
pop
adc
shll
bnd
out
cmp
or
imul
xor
xor
or
imul
dec
mov
sub
int
repnz
adc
rolb
cmpsl
or
push
cmp
mov
push
lock
push
rcr
push
rcll
aam
in
jmp
add
cs
shrb
test
and
lea
sahf
pop
js
movsl
mov
outsb
popa
push
bound
adc
add
dec
idivb
enter
push
or
mov
aaa
test
das
xor
loopne
push
add
pop
and
mov
insb
or
mov
push
xchg
pop
andl
lods
enter
pop
insb
ret
bound
dec
sbb
pop
aad
add
xchg
or
test
ret
and
rcll
push
cmc
out
testw
dec
or
insb
je
adc
test
rclb
loope
out
push
stc
sbb
mov
jnp
clc
inc
fiadds
jl
rcl
jnp
dec
mov
stc
fistl
lock
xchg
push
or
or
lcall
xchg
push
je
insb
arpl
out
test
shrb
sbb
fdivrs
adc
movsb
loop
and
dec
add
fcompl
aaa
dec
mov
pop
inc
sti
and
out
lods
lcall
jg
add
arpl
aaa
pop
or
inc
loopne
insl
push
mov
mov
movsl
inc
ss
cli
and
leave
mov
sub
fadd
in
sub
ss
mov
sbb
inc
or
test
in
xor
adc
fs
jns
mov
xchg
fildl
and
pop
push
cmp
inc
or
jp
mov
fcomps
popa
ljmp
adc
fs
mov
push
push
lock
xor
negb
and
mov
xorb
and
test
and
hlt
or
xlat
arpl
pop
in
inc
jmp
pop
mov
mov
adc
adc
adc
mov
loope
rcll
push
out
lea
and
mov
addr16
push
gs
sub
loop
fistl
lret
movsb
push
outsl
pop
adc
jnp
jne
xchg
and
es
aas
mov
sub
pop
sub
mov
loope
sbb
add
xchg
jmp
jl
js
mov
daa
jne
fisubl
jp
inc
fsubrs
adc
mov
mov
and
jle
sub
leave
adc
aas
adc
mov
in
mov
cli
xlat
sub
push
or
shrb
cmp
pop
add
sbb
add
nop
add
inc
push
jecxz
or
test
loopne
or
xor
xor
dec
les
ljmp
mov
scas
and
xor
and
notb
dec
sub
lock
adc
inc
dec
mov
in
push
and
nop
sahf
sti
lds
or
cmp
cmp
imul
sbb
cwtl
sbb
cmp
mov
pop
pop
jb
add
inc
add
dec
sbb
mov
outsb
frstor
aas
loopne
xchg
sti
pop
xchg
out
cmp
inc
jnp
xchg
mov
cmp
or
mov
ror
or
or
cmp
cmc
dec
in
in
pushf
jp
rcll
loope
cmp
and
pop
cmp
addr16
icebp
push
sbb
xchg
aas
inc
std
and
stos
pop
test
adc
fdivrl
aaa
out
fiaddl
std
or
loopne
inc
mov
in
lret
fcmovu
adc
addr16
pop
mov
push
inc
add
sbb
and
lds
iret
cmp
adc
imul
rolb
outsb
mov
inc
xchg
cmpsb
cmp
inc
add
faddl
xchg
jb
xchg
ret
dec
popa
sbb
icebp
xor
stc
pop
test
es
mov
pop
cmp
and
aaa
ror
pop
pop
or
in
popa
fidivs
fstpt
ror
xor
ret
add
subb
add
add
inc
ja
xor
cwtl
push
scas
sbb
or
xor
mov
notl
fisubrl
and
sbb
jns
lea
sbb
icebp
pop
xchg
xlat
test
mov
dec
cmpsb
leave
mov
enter
cs
idivb
ja
mov
mov
das
cmpsb
cmp
jne
ret
fidivrl
xor
inc
mov
pushf
ds
pusha
sarl
push
cwtl
aaa
sbb
jge
xorl
jmp
outsb
hlt
bound
dec
sbb
lds
repz
sub
in
sarl
or
mov
xchg
sarb
hlt
ret
ja
lds
push
pusha
mov
aam
scas
xor
leave
sarl
push
inc
push
in
dec
in
pop
addb
mov
mov
dec
sub
inc
lret
sbb
pop
leave
mov
cwtl
lcall
imull
popa
push
mov
mov
inc
jmp
and
shrb
out
or
aam
fbstp
and
into
mov
and
jnp
lret
add
arpl
pusha
mov
dec
fwait
psadbw
or
xor
es
aaa
loopne
nop
ret
and
outsl
stos
mov
push
cld
loope
addr16
or
mov
movsl
rcrb
fwait
out
xlat
out
stos
xor
pop
mov
lret
mov
test
loope
scas
cltd
lods
cmp
test
and
jns
dec
dec
dec
push
ficompl
notl
xor
jmp
pop
inc
xor
cmpsb
adc
dec
ficoms
into
push
stc
push
xor
push
jae
jno
dec
push
push
movl
adc
xchg
sub
sub
out
sub
xchg
fisttpll
les
mov
jo
dec
dec
rorb
dec
jns
push
xchg
mov
test
insb
lods
sbbb
xor
movsl
or
lock
inc
adc
xchg
and
lds
into
je
sbb
loopne
add
xchg
cltd
stc
nop
sbb
mov
jmp
adc
cmpsl
shl
test
sub
inc
bswap
shr
xlat
push
mov
js
cmpsl
add
loopne
cwtl
push
xor
xor
loopne
es
lods
leave
mov
mov
insb
scas
int
lret
in
fstps
inc
out
fcomip
and
js
out
mov
push
inc
lea
lods
stos
add
or
push
fidivrl
jbe
or
cmpsb
std
sbb
mov
mov
lret
std
add
dec
cmpsl
testb
inc
lds
pop
popa
xchg
mov
cmp
rcl
cmp
in
dec
clc
jecxz
js
movsb
inc
push
cmpsl
daa
in
sub
lock
mov
and
inc
call
mov
mov
dec
mov
imul
inc
adc
and
insl
je
jno
daa
lods
negb
das
lcall
lds
clc
inc
ret
movsl
lea
jno
arpl
push
fcmovnbe
sar
xlat
inc
divb
lods
mov
mov
inc
in
and
andl
and
dec
out
xor
in
lea
out
inc
sbb
scas
push
hlt
lods
popf
in
sub
arpl
inc
data16
movsb
mov
sbbb
sbb
pop
subb
les
movd
sub
ljmp
int3
inc
lods
mov
lds
and
adc
sub
mov
adc
pcmpgtw
not
mov
mulb
les
dec
inc
xor
cld
hlt
adc
cmp
je
adc
dec
xor
push
push
mov
jae
push
ss
push
or
inc
sub
mov
xor
pop
xchg
xor
fsubp
idivb
push
decb
sbb
inc
inc
inc
scas
sarb
cmp
add
mov
popa
jnp
movsb
out
jg
ja
arpl
in
adc
ret
cli
aas
sarl
pop
mov
sbb
popa
sbb
jbe
mov
pop
outsl
shr
mov
std
enter
xor
in
rorb
inc
and
mov
bound
fstpl
xor
and
addr16
js
jl
out
test
jl
xorb
jle
daa
mov
ror
das
inc
xchg
push
test
jne
sbb
sbb
push
add
or
mov
add
sbb
jmp
adc
dec
jl
fnsetpm(287
lods
hlt
jbe,pt
je
insb
sbb
leave
sbb
adc
push
cli
mov
inc
jne
out
push
cld
dec
sub
pushf
imul
cwtl
xor
push
sar
dec
vandnps
les
jb
es
das
aaa
or
sarl
sti
shr
iret
xor
push
in
xchg
out
sbb
bound
pop
sbb
inc
fidivl
xlat
test
adc
scas
adc
repnz
jnp
ja
bound
pop
jb
nopl
push
xadd
testl
add
mov
inc
mov
into
add
mulb
data16
jbe
xor
and
cmp
push
insb
mov
or
push
inc
fiaddl
push
jl
call
idivl
pop
mov
jb
int3
push
push
cmp
sub
jno
or
fcoml
pop
pop
test
push
mov
mov
aad
insl
in
adc
adc
ficomps
mov
ret
jl
cmp
jno
jl
or
xor
jg
cmp
data16
mov
mov
mov
test
push
jo
repnz
in
xchg
loope
ljmp
pop
imul
xor
dec
jge
dec
imul
lock
popf
movsl
movl
lcall
ficomps
jno
lcall
daa
das
mov
inc
insb
inc
pop
mov
mov
cmpsb
push
add
fs
cli
push
jecxz
push
sub
dec
xlat
rorl
test
or
mov
jmp
fdivs
sub
cmp
lods
add
sbb
xor
call
add
xor
mov
dec
pop
push
mov
jbe
mov
scas
insb
aaa
xchg
aas
or
adc
cmp
lret
adc
xchg
jnp
xor
dec
mov
mov
lret
sbb
loope
or
out
ror
imul
hlt
sbb
adc
add
int
mov
in
cmp
dec
lods
mov
mov
inc
dec
test
sub
mov
inc
mov
mov
push
pop
xchg
inc
lods
push
inc
hlt
cmpsl
lret
cs
sbb
or
lret
xorb
mov
mov
bound
adc
pop
int
popf
inc
adc
pop
lods
push
and
sub
adc
sub
cltd
out
ljmp
sub
arpl
pop
out
sub
xor
cmp
sub
pop
xchg
sbb
adc
pop
out
js
mov
dec
mov
loope
shll
loopne
out
sbb
or
aaa
hlt
aas
add
and
mulb
adc
sbb
mov
jecxz
jns
sub
in
sbb
fs
adc
and
movsb
sub
dec
movsb
mov
insb
fistps
sbb
sbb
testb
jae
or
sti
and
out
mov
ret
push
repnz
mov
xor
test
in
clc
std
cmpsl
icebp
aas
jo
dec
and
jle
add
xchg
push
inc
inc
xlat
xchg
ja
mov
lea
xchg
xor
mov
ss
fwait
cmp
lcall
pop
adc
mov
sub
iret
pop
loop
lock
movsl
jg
fwait
insl
cwtl
stos
into
ljmp
daa
sahf
pop
fdivr
cwtl
or
stos
shlb
stos
inc
mov
in
fidivs
lea
pop
popf
and
aad
popa
stc
add
push
xchg
mov
popa
sti
cmpsl
movsl
pushf
mov
das
les
shll
rorl
add
scas
mov
sub
ja
cmp
addr16
loop
and
call
inc
outsb
xor
pop
rcrl
in
and
lahf
frndint
or
imul
adc
les
sbb
or
ret
iret
shr
jmpw
cmp
xor
mov
aaa
sub
jo
insl
clc
bnd
push
xor
add
out
hlt
jg
and
bound
pusha
shll
sbb
push
sbb
pop
loop
fs
lock
inc
dec
and
fmulp
aam
add
sub
gs
idivb
xchg
push
jge
pop
jbe
lock
inc
filds
push
and
push
push
adc
nop
sti
ret
adc
loop
cmp
sub
sti
and
mov
pop
pushf
neg
jbe
push
xchg
ja
loop
adc
mov
addr16
bound
adc
mov
jae
out
repnz
rol
je
int
push
inc
mov
call
insl
fisttps
sti
jb
and
pop
aas
leave
and
loop
outsb
mov
push
and
or
and
adc
and
imul
and
js
mov
nop
sub
insb
mov
xor
cli
cmpsb
inc
test
popa
add
test
add
mov
jnp
push
scas
add
je
mov
push
jns
int3
or
pop
test
nop
test
inc
test
std
add
mov
xchg
lods
fnstenv
test
jecxz
jae
out
adc
bound
out
and
dec
push
inc
sbb
test
iret
movsl
call
idiv
stos
sub
out
test
jb
and
cmc
stos
pop
lahf
movsl
add
mov
repz
ss
cld
push
outsl
push
xor
fs
add
add
call
and
loop
xchg
mov
push
mov
push
add
aad
shl
mov
imul
sbb
adc
push
cld
or
js
in
lods
mov
incl
push
xchg
repz
adcl
mov
push
or
mov
xor
and
das
aam
mov
in
dec
scas
push
jmp
into
cmp
and
xchg
jo
push
sub
inc
ljmp
hlt
js
sbb
nop
xlat
out
call
sarl
test
mov
and
fprem1
add
jl
sbb
mov
sub
and
lcall
push
out
stc
push
outsb
sbb
in
idivl
cmpsl
mov
add
push
pop
and
test
inc
mov
movsl
dec
rcll
lock
adc
outsb
lods
or
push
cmp
inc
mov
cmpsl
push
mov
call
mov
mov
push
dec
lea
push
ret
aad
enter
jno
or
ret
movsl
les
pop
pop
xchg
pushf
sbb
rep
sbb
add
xlat
popf
movsl
push
sub
repnz
push
or
mov
sbb
sarb
xor
pop
mov
scas
ljmp
mov
mov
add
jmp
xor
hlt
mov
loope
jg
subl
insb
xchg
sub
sbb
inc
mov
jbe
push
jae
mov
ret
sbb
jmp
pop
loopew
push
dec
fs
add
cmpsl
mov
fisubl
pop
je
popa
repz
andl
cld
jle
pop
imul
xchg
mov
addw
mov
pop
outsl
inc
cmpsb
stos
sub
js
lods
movsl
xorl
sbb
cmpsl
dec
cmc
push
sub
xlat
adc
fisubl
push
sbb
ret
imul
sarb
mov
sbb
test
lret
mov
sahf
adc
jbe
pop
data16
pop
mov
mov
repz
imul
subl
xor
lods
xor
outsb
sub
add
cmp
jmp
loope
jno
sub
inc
fwait
pop
inc
lods
mov
inc
outsl
mov
leave
pop
and
aaa
leave
jecxz
out
insb
xchg
cmpsb
mov
shr
inc
rorb
daa
adc
outsb
cmp
sub
pop
aas
xor
ss
lret
imul
inc
test
fcmovnbe
insl
xchg
nop
aas
stos
lea
cmp
shll
mov
or
xchg
pop
shlb
fwait
mov
sub
sbb
or
xchg
jg
mov
jno
lret
and
inc
push
jne
sub
jne
xlat
inc
sbb
nop
xchg
shll
ficoms
push
or
xchg
pushf
push
xchg
jns
shll
adc
ds
imul
popf
testb
adc
in
mov
and
add
and
pop
and
test
ret
xchg
sub
rcrb
cmp
fs
mov
mov
popf
rolb
mov
push
sti
lret
lock
and
and
rclb
inc
jo
daa
push
sbbl
out
pusha
mov
out
sti
rcrb
push
jp
push
call
push
jne
jg
hlt
add
popa
sub
arpl
cmpb
jge
push
mov
lods
setae
fs
jnp
dec
jge
mov
cs
ds
data16
mov
lret
pushl
bswap
pop
leave
insb
push
cmp
inc
add
dec
cli
fdivrs
xchg
dec
icebp
mov
das
adc
xor
cmc
inc
pop
lods
out
pop
push
mov
dec
rcl
ret
mov
lods
push
xchg
in
pop
ja
xor
jg
sub
pop
or
call
mov
pop
sub
and
cwtl
ret
pop
dec
pop
jnp
test
pop
jne
ret
mov
xchg
cmp
xor
mov
adc
or
push
das
sub
rorb
aad
add
pop
xlat
mov
cmovp
in
rolb
jns
push
fidivrl
xchg
push
fsubrs
mov
aaa
icebp
fldl
flds
cmpsl
loope
mov
leave
repz
and
pop
adc
mov
xor
pop
add
inc
fidivrs
sub
cmc
xchg
scas
xchg
adc
pop
push
stos
pop
jp
adc
mov
lret
cwtl
or
test
and
mov
ljmp
dec
mov
ljmp
mov
dec
les
pop
movsl
push
push
cld
xchg
aas
sahf
mov
sbb
inc
dec
dec
push
inc
movsl
bound
inc
mov
ja
add
dec
int3
mov
jl
sti
mov
aad
mov
pop
out
adc
icebp
push
mov
push
faddp
mov
sbb
fdiv
mov
xor
jp
in
sbb
mov
dec
call
mov
stmxcsr
mov
shrl
jo
ror
mov
cmp
cmp
xchg
fildl
cmpsb
add
int
fs
shrb
pop
das
lret
mov
adc
les
pop
mov
dec
mov
adc
dec
or
mov
push
movsb
push
mov
test
cmp
in
push
mov
sbb
jbe
out
cmpsl
push
or
jmp
add
jns
pop
xchg
rcrl
and
add
les
mov
or
addb
enter
scas
insb
rclb
loopne
loope
pop
mov
mov
ss
mov
xchg
dec
fs
js
dec
testb
pusha
jns
jl
push
cmp
rclb
and
jae
xchg
mov
add
push
loope
scas
sub
add
xchg
and
in
sti
add
ljmp
sub
and
fwait
jp
add
and
gs
sbb
ja
xchg
das
adc
add
dec
cld
xchg
fldl
loope
ret
aas
push
inc
or
lds
jmp
imul
lret
out
andb
mov
movsl
aaa
add
dec
pop
stos
cmp
out
push
and
add
loopne
or
mov
outsb
xor
push
imul
or
mov
mov
das
jns
out
cmpsb
mov
dec
enter
sub
fcompl
mov
int3
hlt
xchg
pusha
sub
cli
push
cs
fistpl
push
push
pop
dec
loop
in
fwait
xor
mov
mov
sbb
leave
lock
ret
imul
call
ss
and
cmp
and
cwtl
adcb
jg
out
es
adc
into
xor
jg
sub
mov
jnp
ds
sbb
add
call
xor
loopne
pop
jo
test
mov
xchg
pop
dec
into
dec
leave
add
jb
mov
fdivrs
std
mov
push
and
iret
jle
mov
cltd
arpl
jbe
imull
inc
jl
mov
push
mov
in
push
mov
lock
out
ret
test
xchg
cmp
adc
dec
sti
out
in
roll
aam
jp
lret
cltd
mov
in
in
fildl
out
insl
push
sahf
es
outsb
adc
cmp
data16
mov
test
scas
dec
and
mov
aaa
dec
xchg
jle
lods
into
add
clc
fadds
pop
and
xchg
sub
in
or
pop
outsb
jnp
xchg
ret
in
mov
outsl
popf
push
sub
sbb
in
lods
push
sbb
and
or
jae
nop
pop
lds
or
inc
imulb
jnp
xchg
dec
frstor
or
or
out
js
add
and
xchg
pushw
add
aad
mov
je
dec
sbb
mov
mov
mov
xchg
pushf
mov
jg
mov
adc
xchg
lods
int3
daa
or
sub
inc
jmp
repnz
push
hlt
jge
in
hlt
mov
pop
jle
or
jmp
mov
cwtl
sub
aas
in
pop
dec
adc
mov
mov
mov
dec
cmc
adc
hlt
inc
add
popf
jns
push
pop
cltd
jle
mov
xchg
push
lea
in
mov
mov
sbb
mov
sbb
test
decl
fwait
xchg
gs
lock
pop
mov
es
inc
out
push
je
test
cmp
push
repz
pop
mov
pop
mov
xchg
icebp
add
fsts
bound
push
push
je
ret
call
lcall
sub
xor
loopne
pop
jo
and
push
in
cmpsl
xchg
mov
in
jns
inc
xlat
jecxz
sbb
jg
jmp
dec
scas
icebp
mov
xchg
rorl
dec
hlt
insl
movsb
js
daa
pop
sbb
xor
add
lret
ret
fimull
push
jne
adc
ficomps
xor
clc
lods
xchg
xor
inc
sti
add
push
and
sbb
mov
inc
xor
cmp
mov
not
std
dec
mov
jp
rcrb
mov
jl
xor
sub
or
loop
fsts
into
in
add
mov
pop
mov
pushf
aad
imul
gs
imull
jge
or
push
jae
adc
mov
sahf
and
rolb
xchg
jo
dec
dec
mov
mov
clc
sub
and
cmp
pop
and
aaa
jecxz
sub
pop
call
jmp
and
add
dec
rcrb
jge
xchg
inc
and
pushf
pop
scas
shrb
lahf
daa
and
add
arpl
les
aad
shrb
mov
sub
test
aam
mov
push
inc
lods
jb
add
or
adc
inc
cmp
and
mov
dec
iret
or
test
xor
or
mov
add
cld
lods
push
std
inc
mov
stc
testb
outsl
popa
push
notl
scas
ds
pop
and
outsl
and
in
sti
leave
insb
ret
jmp
stos
push
ljmp
fincstp
push
outsb
mov
fisubrs
add
lret
lcall
test
push
cmp
fwait
inc
cs
lea
push
les
fsts
ret
push
dec
cmpsb
push
sbb
jnp
and
hlt
insb
lea
adc
adc
les
cmpl
fistps
push
mov
pop
sub
fwait
inc
mov
mov
push
xor
add
mov
out
aas
mov
jne
dec
sahf
sahf
fiadds
cmpsl
jg
dec
inc
mov
dec
inc
inc
or
imul
decl
add
aam
pop
mov
roll
push
outsb
mov
xor
add
leave
cmp
jg
cmpsb
rcrb
inc
mov
sbb
fildll
icebp
push
scas
cmp
outsb
sub
mov
mov
sbb
adc
pop
cmp
mov
sbb
shlb
xchg
jbe
sahf
mov
imul
aad
or
test
push
mov
jbe
test
mov
das
or
sub
adc
adc
movsb
cli
jno
pop
into
push
lret
cmpsl
shlb
inc
adc
cld
out
fs
les
ds
push
in
dec
sub
cmpl
pop
adc
cmc
or
data16
pop
test
push
xchg
adc
cmpl
out
mov
cmp
push
clc
test
cmp
xchg
int3
inc
bound
outsb
and
ljmp
jns
push
pop
divl
lock
mov
mov
push
lds
adc
scas
push
mov
pushf
jno
cmp
negl
add
mov
push
shrl
push
push
movsl
dec
adc
sub
ret
movsl
lods
jo
push
shld
xor
mov
popf
rorl
fcomps
dec
inc
enter
outsl
mov
xor
or
fiaddl
sub
sbb
xchg
and
xchg
scas
jns
enter
test
cltd
lods
dec
clc
rcrl
xor
es
popf
adc
xchg
add
es
cmp
das
jbe
cmpsb
ret
add
sub
xor
mov
fisttpll
mov
mov
push
lods
mov
jns
aas
rorl
mov
clc
xor
and
xchg
sahf
jns
xchg
sub
pusha
mov
pop
and
mov
mov
or
xchg
xchg
push
cmp
test
jo
adc
mov
push
insb
arpl
cli
lret
lods
imul
cmp
shlb
int3
mov
movsl
jge
repz
popf
sub
add
add
notl
loope
int
xchg
push
fdivrl
mov
dec
cltd
pop
pop
sub
fwait
lret
test
add
inc
and
cltd
shl
xor
out
lods
push
inc
mov
iret
out
ja
aam
mov
outsl
mov
int3
xchg
mov
test
dec
jno
lcall
fcoms
inc
pop
jmp
enter
std
rorb
push
test
inc
push
push
sub
je
stc
adc
inc
or
lods
adc
je
data16
loope
jecxz
jne
ss
pop
loope
sti
fcmovnbe
sbb
xorb
xor
pop
movsb
rol
fldenv
test
insb
pop
and
rorb
scas
or
mov
mov
mov
xchg
mov
jg
int
add
adcl
push
ljmp
dec
cli
out
outsl
in
fadds
shll
scas
sub
mov
xchg
dec
adc
repz
jne
lcall
mov
push
inc
dec
add
ret
xchg
mov
push
and
mov
gs
sub
mov
mov
out
sub
and
push
jmp
outsb
jnp
cmp
xchg
cs
pop
mov
subl
xchg
adc
jns
push
pop
mov
dec
scas
jg
adc
pop
adc
call
call
push
lock
jae
stc
ja
dec
clc
lahf
sbb
call
lret
push
sub
mov
adc
dec
xchg
mov
xchg
inc
fdivrl
loop
and
lds
jecxz
xor
xor
inc
lods
pop
fisubs
rcrb
xchg
popa
add
ss
mov
xlat
mov
inc
addr16
sub
repz
xchg
mov
outsl
mov
mov
out
cmp
sbb
enter
xorb
push
jl
ret
xchg
mov
adc
cmpsl
jecxz
jmp
mov
call
adc
repnz
sub
orl
inc
das
in
lods
push
pop
js
movsb
add
xchg
cmp
fcomp
rcll
outsb
pop
or
mov
scas
mov
push
lods
inc
add
mov
cmpsl
ss
outsb
mov
lods
xor
fcompl
jecxz
add
aaa
ficomps
inc
arpl
jecxz
mov
lods
rorl
pop
xor
lds
mov
flds
pop
ja
lfs
mov
leave
mov
test
repnz
insb
dec
push
adc
dec
dec
jbe
les
fucomip
fs
mov
int3
je
mov
outsl
int3
mov
aas
cltd
mov
jp
xor
push
add
mov
in
inc
scas
inc
and
cmpsl
test
shlb
xchg
lcall
lea
mov
dec
stos
cmp
mov
sbb
nop
xchg
insb
lret
fldcw
jbe
or
mov
je
add
pop
xor
jmp
js
xlat
icebp
scas
sbb
loopne
or
xlat
mov
scas
out
xor
je
data16
outsl
inc
scas
pushf
insl
dec
adc
add
or
addr16
daa
or
cwtl
les
mov
jns
pop
pusha
sbb
hlt
jmp
pop
repnz
xchg
aas
mov
sbb
sub
ret
jo
add
mov
loope
xor
cwtl
das
loop
sub
pop
and
in
xchg
cs
jnp
rorl
data16
ja
jg
sti
sarb
mov
gs
fisubl
dec
cmp
ret
lret
shrb
imul
adc
pop
int
push
push
cwtl
xor
les
outsb
ret
test
pop
insl
stos
enter
xorb
and
cld
pop
push
add
inc
dec
lret
sub
ja
enter
xchg
xchg
lcall
test
mov
cwtl
lea
aam
shll
test
jo
xor
adc
dec
pop
and
cmp
sbb
xchg
fmull
push
addr16
mov
test
cld
pop
popf
je
call
sub
cld
cmp
leave
gs
fs
lds
xor
popf
jge
subb
mov
adc
idivl
lods
ficoml
sub
lea
pop
push
imul
mov
outsl
or
jnp
push
into
lcall
and
sub
pop
lock
mov
aad
jae
dec
out
subl
loop
sub
mov
pop
str
icebp
stc
nop
lret
mov
outsb
frstor
lahf
mov
cmp
in
add
inc
or
mov
insb
dec
xor
outsl
push
and
lock
jno
nop
movsb
iret
inc
lcall
sti
lret
and
lods
test
sbb
fwait
in
mov
push
cli
push
sub
mov
lock
sub
es
sub
and
inc
jo
sbb
fcmovne
push
pop
pop
push
inc
inc
jl
imul
cmp
andl
sub
pop
sbb
pop
insb
stos
lock
repnz
aas
mov
mov
jg
fnstcw
decw
leave
pop
mov
decl
mov
fwait
test
sbb
into
xchg
push
sbb
or
lock
cmp
cwtl
mul
jne
adc
sahf
xor
cmp
jo
jns
lret
lock
mulb
dec
and
add
dec
rclb
inc
cmp
jb
mov
outsl
inc
sub
clc
lahf
xlat
inc
mov
sub
adc
shrl
aaa
xor
dec
testl
movsb
jb
lods
fs
fimull
mov
jge
xor
sub
inc
sbb
ficompl
jecxz
inc
repz
cld
push
insb
arpl
lock
dec
sub
aad
out
sub
and
xor
cli
mov
in
jns
test
leave
dec
or
jecxz
xor
leave
lcall
aam
shl
lahf
add
das
cs
and
sub
xor
int3
loop
adc
push
dec
push
mov
out
es
out
jg
pop
jae
pop
neg
scas
jno
sbb
frstor
xor
push
xchg
push
cmp
push
pop
cli
jno
inc
xchg
fwait
push
cmp
mov
jne
scas
fcoml
push
repz
popa
jmp
rclb
mov
mov
jg
scas
popf
jmp
sub
mov
sbb
in
lea
imul
fildll
out
iret
pop
imul
pop
in
test
inc
inc
push
call
add
fistpll
mov
or
mov
cmc
in
scas
mov
jbe
inc
fsubrl
loop
sub
pop
pop
lcall
pop
jo
and
cli
or
xor
pushf
inc
mov
sub
or
clc
xchg
xchg
xchg
inc
cmp
add
push
pop
loope
lds
loope
lods
push
mov
rcrb
push
test
je
test
mov
jne
jle
mov
sbb
jb
decb
loope
popf
cmc
lcall
xchg
ret
dec
or
inc
pop
ja
popf
shll
imul
cmpsb
mov
cmp
gs
xor
mov
movsl
test
mov
xchg
mov
test
stc
fimull
xchg
jmp
iret
mov
ret
jae
or
pop
int3
jmp
pushf
imull
cmc
cmp
mov
stos
push
cs
sub
and
rol
pop
sbb
loope
add
lret
lock
in
sub
inc
xchg
imul
push
iret
and
ret
xchg
xchg
xchg
ret
pusha
jp
or
jbe
mov
sbb
outsb
adc
lret
in
lods
and
and
xchg
xlat
add
call
mov
inc
in
mov
test
cmpsl
adc
lret
push
cmp
pop
sti
sbb
and
mov
and
xchg
fidivrs
std
inc
imull
ds
push
shlb
lret
repz
xabort
out
lods
imul
scas
add
pop
mov
add
push
shr
mov
inc
fwait
lret
mov
call
xor
dec
sub
fidivrl
mov
testl
push
mov
insl
adc
lahf
dec
push
pop
sbb
cmc
adcl
sub
or
xchg
xor
fsubrl
jle
add
mov
xchg
or
mov
push
iret
add
mov
imul
add
rol
xchg
mov
cwtl
or
mov
push
mov
cmpsb
push
pop
aas
sub
dec
test
push
mov
fs
inc
push
sub
or
ret
jno
jle
imul
sub
jmp
push
es
orb
aaa
inc
fs
pop
popf
sahf
or
scas
pop
out
pop
mov
sbb
gs
jmp
imul
fcmovu
mov
fs
and
add
pop
addr16
push
test
sarb
pop
sub
insb
cli
jl
enter
bound
movsl
jo
loopne
push
and
scas
pop
sub
pop
popa
iret
push
cmp
sbb
dec
aas
jae
aam
mov
test
div
stos
cli
bnd
aas
fsts
push
dec
and
decb
pop
add
nop
repz
in
add
jae
jb
andl
jle
and
sub
fistps
inc
pop
lcall
popl
push
js
lods
push
ljmp
sti
xchg
inc
aaa
dec
push
hlt
jecxz
gs
add
fsin
and
dec
cwtl
pop
addb
inc
xor
push
xchg
add
cmp
jne
pop
pop
push
movsl
and
faddp
mov
xor
mov
jae
dec
mov
push
mov
fsubrl
sbb
dec
xchg
insl
mov
rdtsc
insl
cmp
imul
jmp
bound
in
add
add
popf
xchg
xchg
loop
adc
push
movsl
mov
adc
push
repnz
ss
sub
out
inc
mov
pop
jp
repnz
xor
sbb
xor
xor
inc
jno
and
jg
pop
push
add
test
and
cmc
pop
adc
lds
daa
scas
jns
adc
test
xchg
and
cltd
rolb
sbb
fdivl
in
outsb
dec
stos
push
push
or
xor
aas
pop
adc
shll
shl
push
mov
icebp
cmp
js
sbb
mov
inc
icebp
mov
pop
dec
subb
cmp
std
inc
fcoml
adc
jae
push
jecxz
mov
clc
inc
arpl
or
out
enter
cmp
xor
push
add
push
jg
gs
hlt
push
jns
cmpxchg
jae
lods
cmp
xchg
xor
inc
dec
jns
cs
iret
xlat
mov
iret
dec
mov
inc
mov
cmpl
fsubrl
pop
xchg
aas
xchg
xor
addl
ljmp
ds
es
xchg
push
fimuls
cmc
add
xor
test
mov
push
fisttpll
rcrb
dec
scas
inc
dec
add
add
dec
fnstenv
rorl
dec
inc
pop
jae
adc
mov
ret
jg
adc
ret
mov
mov
orb
test
imulb
mov
popf
insl
dec
or
cmc
cmp
cmp
pop
outsb
jns
pop
dec
out
jno
lret
aad
out
lock
mov
adc
xchg
sbb
add
xchg
scas
fldt
adc
loop
mov
adc
sub
popa
aaa
inc
push
inc
push
dec
rorb
dec
addr16
pop
mov
sub
cwtl
pushf
gs
adc
stos
out
jo
fsubs
jno
hlt
sub
mov
pop
out
idivb
sbb
jns
adc
shll
loope
cmp
xchg
std
mov
clc
xchg
and
mov
cmc
mov
lea
inc
mov
aaa
fistpll
enter
fimull
fdivl
hlt
push
testl
and
sub
imul
jbe
dec
aad
xor
clc
cmpsb
jmp
push
int
nop
pop
xchg
call
aam
add
mov
mov
push
pop
and
iret
and
cmp
aam
jecxz
lods
and
rcrl
sbb
pop
xchg
jnp
xorl
push
inc
xlat
out
pop
jne
jne
test
jg
dec
sbb
ficoml
jge
push
scas
fnstsw
insb
inc
add
ja
fwait
push
push
sub
divb
push
push
int3
mov
loop
xor
int3
cmp
add
rorl
push
cmp
sbb
push
sbb
pop
mov
push
ss
movsl
mov
cmc
fucomi
adc
sbb
and
push
in
mov
push
out
ja
bound
cld
mov
fadds
cltd
pop
add
push
inc
lret
aam
and
aad
xor
inc
sbb
mov
adc
outsb
sti
popf
push
mov
or
scas
sub
gs
fs
imul
lds
call
pop
insb
xor
lods
fstpt
sti
xlat
sub
pop
repnz
xlat
std
test
mov
call
roll
pop
dec
xlat
inc
cmp
and
pop
jge
cmp
adc
pop
stos
jno
iret
movsb
add
mov
cmc
and
mov
or
bswap
lahf
sti
mov
shll
inc
outsl
ror
mov
dec
or
popf
out
hlt
xor
xchg
mov
adc
xorl
xchg
loopne
push
mov
cmp
or
sub
xor
inc
mov
cmp
or
aaa
jo
into
fnstcw
imul
push
push
jg
xchg
cmp
mov
shl
mov
cmp
popa
xrelease
out
push
inc
test
sub
out
mov
es
ljmp
lahf
and
les
jecxz
mov
cmc
xchg
mov
ds
inc
pop
jge
testl
jmp
repz
add
scas
pop
jecxz
ds
lcall
and
adc
add
jmp
jmp
nop
sarl
shrl
push
jbe
mov
push
sti
cmp
push
cmp
push
popa
jbe
jle
outsb
sub
popa
negb
sti
ss
cmpl
mov
adc
pop
xor
cmp
pop
filds
outsl
repz
ret
insl
bound
jne
add
iret
js
iret
inc
add
fisttpl
repz
fstpt
rcll
jmp
imul
pop
lods
sbb
mov
pop
sub
imul
cmp
gs
xchg
insl
ror
add
sti
lret
popf
dec
add
mov
push
mov
scas
in
cmpsb
jbe
jne
add
jle
in
xor
outsl
or
jno
loopne
addr16
pop
adc
jno
dec
add
push
push
xchg
xor
lock
inc
mov
into
jno
and
dec
jge
cmp
sbb
cmpb
fwait
push
cmp
dec
out
and
inc
mov
std
stos
fwait
push
dec
aas
xchg
xlat
incl
inc
mull
std
loope
cmp
sti
hlt
mov
fdivrs
jb
fisttps
add
cli
mov
push
sub
lods
movsl
ds
jl
into
or
stc
push
aam
push
aaa
or
jb
pmovmskb
or
mov
fs
add
sahf
fdivs
test
cld
aam
inc
push
mov
sub
xor
jp
ss
xlat
add
mov
cs
push
push
sbb
xor
mov
das
cmpsl
push
ss
cli
repnz
cltd
mov
xchg
mov
outsl
pop
or
bound
aas
andl
pop
sbb
pop
xchg
cmpsl
ljmp
loopne
fsubp
and
jle
jl
ljmp
das
movsl
dec
movsl
mul
sub
cmpsl
pop
sti
lea
ljmp
int3
shll
xchg
shrl
sbb
roll
aaa
jecxz
lcall
cld
loop
jb
inc
in
scas
test
aas
mov
xchg
xlat
pcmpgtd
pop
mov
add
stos
test
dec
push
sbb
xchg
notl
jl
pop
or
orl
sbb
add
imul
ret
icebp
push
pop
scas
sbb
lods
std
dec
xchg
sub
xorb
filds
adc
imul
mov
mov
dec
mov
add
lahf
sti
mov
inc
jmp
inc
or
rclb
push
and
fstpl
mov
pusha
mov
loope
jns
mov
scas
jae
ds
push
add
bound
dec
mov
mov
dec
aam
pop
mov
jle
xor
sahf
fmuls
and
sbb
fcomi
sti
clc
lods
aaa
pop
pop
add
adc
and
sub
fbstp
mov
jbe
popa
xchg
cmpb
or
fwait
push
ret
inc
addl
adc
iret
push
push
xchg
adc
fidivs
negb
add
mov
cmp
jne
imul
fmul
movsl
mov
adc
fcmovnbe
dec
add
ljmp
loopne
pop
mov
adc
jo
fwait
lcall
cmp
outsb
xchg
xor
fstps
popa
xorl
mov
xlat
pop
add
arpl
dec
jo
jg
inc
dec
ja
or
pop
or
negl
push
inc
cld
leave
sub
fldenv
inc
mov
cmp
stos
jb
and
jge
jo
mov
pop
outsb
mov
sbb
ret
cld
pop
loopne
ja
shr
or
push
jmp
outsb
jnp
pop
or
fsub
jge
outsl
out
subb
jns
pmaddwd
scas
lock
nop
fdivr
repz
fld
adc
outsb
lahf
sbb
cli
or
pop
mov
sahf
mov
ss
pop
xchg
sbb
sahf
repnz
sub
dec
sub
sub
cmp
clc
xchg
sbb
cli
jnp
cmpsl
inc
sbb
or
or
add
and
xchg
outsl
imul
sub
sbb
sbb
les
jb
stos
pop
stc
mov
enter
cmp
cmc
inc
xor
push
add
addr16
mov
sub
xchg
ja
outsb
jne
mov
sub
mov
cmpsl
mov
gs
pop
cmp
xor
mov
call
cltd
rorb
pop
lods
in
or
jbe
stc
adc
popa
ds
push
packuswb
lds
xor
mov
push
fwait
mov
je
sbb
imul
pop
jae
adc
inc
inc
sbb
arpl
jg
int
enter
cmc
xchg
jb
test
adc
sbb
insl
xlat
jo
data16
add
iret
mov
add
or
je
and
add
sub
in
mov
push
out
ds
and
xchg
shll
push
jno
or
mov
inc
sbb
lds
mov
sarb
and
repnz
into
mov
in
xchg
repz
cmp
loope
jle
xor
dec
add
push
fnsave
push
or
stos
jp
push
mov
sbb
shrb
mov
push
add
xor
xchg
xor
test
mov
sti
sbb
mov
adc
add
ret
in
push
mov
leave
mov
sahf
data16
cmp
mov
pop
loop
xchg
test
xor
xchg
shll
sti
mov
mov
dec
call
in
je
jbe
loopne
jle
inc
push
sbb
sbbb
imul
imul
xchg
mov
mov
movsb
dec
outsb
hlt
xchg
xchg
sub
adc
pop
adc
inc
jne
xchg
cwtl
push
lods
mov
push
shrb
mov
add
mov
sub
lret
sahf
sti
push
mul
push
iret
lods
imul
rcrl
movsb
icebp
test
cmpsb
lcall
jl
test
or
arpl
cmpsb
xor
cmpsb
mov
movsb
repz
xorb
push
add
mov
lods
repnz
pusha
loopne
xorl
rcr
lods
lcall
mov
add
cmp
pop
xchg
push
sbb
clc
lods
out
fwait
or
ja
stc
sub
lods
mov
test
sbb
and
ss
or
jnp
std
sbb
jbe
push
scas
cmp
jno
je
lods
pop
ret
mov
inc
push
jg
cli
mov
or
adc
das
mov
cltd
ret
adc
adc
inc
xchg
flds
fmull
adc
push
dec
aam
movsl
jae
leave
push
ficoms
fimuls
jg
sbb
aas
lea
insb
in
dec
jmp
pushf
xor
add
push
jl
adc
pop
mov
sub
inc
xchg
fisttps
pop
enterw
add
sbb
ss
mov
sbb
js
in
je
xchg
adc
int3
inc
pop
out
mov
in
jae
imul
sbb
jmp
cli
in
pusha
cmp
lock
iret
pop
addl
mov
xchg
sub
or
cwtl
add
lods
inc
btc
mov
sub
scas
inc
xor
inc
inc
aas
or
mov
mov
leave
rorb
xor
data16
cltd
loopne
fimuls
mov
add
hlt
daa
mov
jg
lods
test
aam
call
mov
xchg
in
push
mov
xlat
adc
les
hlt
cmp
pop
cmpps
mov
mov
shrl
cmc
sub
dec
psadbw
cmp
xchg
dec
stos
add
cmp
shlb
cld
pop
aas
adc
test
cwtl
xchg
xchg
out
push
or
cmpsl
adc
xor
adcb
sbb
adc
fisubrs
clc
ds
sbb
in
dec
imul
sahf
inc
fildll
fistl
lcall
enter
jl
in
pop
out
es
and
test
out
loope
inc
rcll
push
shlb
inc
pushf
stos
cmp
inc
inc
pop
aas
out
sbb
and
mov
pop
fisubrl
jecxz
negb
mov
mov
sti
inc
jle
mov
lcall
addb
jecxz
mov
push
pop
xor
cmp
xor
pop
ds
jle
add
mov
aam
xor
sub
xchg
xchg
lock
addb
adc
or
and
xor
decl
inc
inc
int3
testl
nop
mov
lcall
aaa
lahf
mov
fiaddl
cmp
cwtl
push
and
push
ret
movq
stc
push
sub
mov
addr16
insl
jbe
sbb
xchg
jns
dec
adc
nop
fwait
divb
iret
bound
mov
pop
push
mov
xor
stos
cwtl
or
fstpt
mov
mov
in
add
pop
and
jbe
aad
ljmp
inc
and
jp
xor
hlt
dec
lahf
xchg
lock
notb
inc
in
fcompl
cmp
cmc
cmp
fwait
shl
sub
mov
addb
add
cwtl
jge
mov
mov
cli
fsubrp
test
dec
jae
lock
test
sti
adc
jmp
fdivs
test
adc
mov
push
fwait
ja
lahf
lret
call
mov
inc
mov
inc
pop
sbbb
and
cld
or
xor
je
out
mov
lods
scas
das
jge
cmc
in
mov
xor
out
mov
or
cmp
repz
fidivl
xchg
dec
mov
mov
push
das
fidivl
fsts
mov
cmpsb
cwtl
lods
add
stc
or
test
imulb
jecxz
popa
cmc
repnz
mov
mov
and
scas
dec
jecxz
mov
jg
lock
cli
jg
lds
sub
sahf
mov
iret
lock
pop
push
dec
xchg
fs
jmp
xlat
xchg
shrb
addr16
add
sbb
pop
cmpl
or
add
inc
cli
lcall
push
fwait
mov
imull
iret
cmpl
xor
pop
out
add
test
jbe
sbb
popf
imul
mov
insl
cmp
jne
test
xchg
mov
cli
ficompl
mov
mov
scas
ret
lds
repz
out
xchg
in
xor
mov
and
mull
dec
xchg
push
xor
pop
decl
cld
or
and
addr16
mov
push
gs
fisttpll
cmp
cmp
dec
adc
repz
push
add
inc
movsb
xor
mov
daa
popf
sahf
sbbb
out
jg
adc
cmp
or
xchg
push
shll
inc
das
jg
jns,pt
inc
insl
ret
daa
mov
adc
out
outsb
jmp
sbb
jl
inc
scas
cmp
sbb
cmp
mov
into
fcmovu
das
pop
enter
cmpsb
lds
dec
popa
int
push
pop
rol
lahf
imul
add
imul
pusha
aam
fucomip
jno
and
sub
adc
dec
sbb
int
sti
push
call
out
arpl
cltd
imul
out
lahf
sub
scas
cmpsl
sbb
das
jb
lods
movsb
mov
add
cmp
mov
shrb
insl
loop
fisttpl
ss
sub
push
mov
xlat
repnz
arpl
jae
push
and
adc
out
push
ljmp
mov
push
roll
std
jbe
push
repnz
insb
jecxz
and
mov
call
adcl
jno
push
loopne
push
hlt
mov
enter
jbe
sub
in
or
jge
out
es
rolb
dec
insb
mov
nop
xor
push
lcall
sbb
pop
pop
cmp
inc
cwtl
loop
inc
jp
mov
jle
dec
aaa
add
dec
lods
call
popf
sub
pop
fwait
pusha
imul
loop
xor
cmp
sub
enter
jp
cmpb
xlat
out
mov
xor
in
add
cmp
add
jle
rcl
movsl
inc
movsb
add
lock
jns
inc
sbb
call
aaa
shll
aas
cmp
xor
jo
sarb
jns
lret
xchg
repz
fisubs
cwtl
xor
ret
stos
rorl
fcmovnb
out
sbb
jmp
xor
icebp
js
jp
adcl
mov
into
enter
and
push
scas
adc
fisttpll
xchg
push
push
stos
in
hlt
inc
outsl
push
mov
or
add
inc
pop
push
jno
sbb
movsb
lahf
or
lock
cmp
mov
bound
mov
insb
xchg
pop
push
loop
dec
xlat
or
sbb
jnp
les
xchg
xchg
pop
mov
fmuls
lcall
imul
jae
and
call
sbb
ret
push
mov
cli
xchg
sub
push
out
jae
addr16
xchg
adc
aaa
lods
icebp
mull
repnz
lret
scas
add
popf
loope
lods
jo
dec
mov
imul
cwtl
and
lea
inc
loope
insb
jmp
xorl
test
fsubrl
daa
jns
js
mov
cltd
and
add
leave
xchg
mov
mov
push
out
mov
xchg
in
or
cmp
push
rorb
and
push
fwait
add
loope
jo
sbb
imul
mov
pop
inc
cwtl
lods
cmp
ret
aam
push
nop
loopne
call
dec
test
sub
dec
std
dec
dec
adc
mov
mov
in
pop
pusha
jl
add
fs
mov
jp
xchg
shl
lret
pop
in
andl
cmc
sahf
fs
jo
sarl
pop
push
xchg
or
add
dec
test
mov
icebp
js
xchg
decb
sahf
lock
pop
xchg
lahf
in
and
jo
lea
loopne
dec
or
leave
mov
sbb
mov
inc
mov
ja
fbld
xor
push
rcrl
call
stc
pop
out
lahf
ficomps
adc
cmpb
fistpl
mov
jno
push
call
lock
mov
mov
mov
jno
ret
mov
add
cmp
daa
xor
sub
fnsave
adc
adc
jo
pop
jmp
inc
add
xor
lds
mov
sbb
out
movsl
repz
testb
fcompl
pop
pusha
fs
xchg
repnz
sub
pop
mov
cmp
jno
stc
mov
lret
lea
dec
sub
dec
fsubrl
push
pushl
and
sbb
xchg
jne
out
sub
testl
xchg
ljmp
jae
pop
cmp
clc
hlt
out
xchg
lods
xor
dec
add
popf
adc
pop
pop
mov
stc
js
cmp
add
ret
push
call
cmp
push
ja
mov
sar
popa
and
xchg
lret
out
push
mov
add
lods
hlt
mov
inc
test
add
bt
out
fdivs
imul
inc
daa
cs
push
ljmp
jnp
out
inc
dec
inc
or
icebp
dec
lahf
xchg
orb
xchg
inc
push
mov
cmp
mov
inc
jae
cld
iret
cmp
mov
fnstsw
clc
adc
rcl
xlat
mov
aaa
in
ja
inc
push
imul
cmpsb
roll
add
cmp
push
xchg
mov
pop
clc
ljmp
xchg
push
lock
push
fadds
sbb
addr16
in
mov
push
sub
mov
andl
mov
test
and
or
pop
fs
call
jb
aad
out
push
or
or
ljmp
stos
insb
push
xor
std
sub
sbb
icebp
pop
adc
fmull
ljmp
xor
and
mov
ja
or
cmpsl
sarl
push
sahf
loope
adc
mov
sbb
add
ljmp
push
jo
add
aaa
mov
cld
mov
mov
je
es
imul
sti
cmp
mov
mov
fcoms
popf
jae
adc
sbb
cmp
fadds
rolb
ret
loopne
mov
xchg
insl
mov
stc
or
jmp
sub
jl
test
lods
test
jo
imul
dec
sarb
into
mov
lret
pop
imul
out
inc
pushl
push
sub
pushf
in
and
pop
adc
dec
xchg
sbb
sub
cmpsb
jae
pop
jbe
in
je,pt
inc
dec
sub
test
inc
clc
jmp
das
inc
imul
stos
daa
movsl
sarl
xchg
out
popf
add
dec
int
xor
push
mov
shl
add
shrb
shrb
sbb
xlat
scas
sti
pop
pop
mov
in
adc
push
dec
or
cmpsb
rol
add
xchg
dec
push
mov
inc
xchg
adc
mov
outsb
lock
test
mov
out
pop
mulb
push
addr16
push
in
inc
xchg
mov
cmp
subl
push
sahf
push
fwait
or
add
ds
ljmp
test
cmpsb
or
pusha
test
inc
jns
call
cwtl
mov
pop
fs
rorl
jg
fnstcw
xlat
nop
xchg
mov
ja
fsts
shl
mov
pop
nop
lds
mov
out
in
push
sbb
minps
fwait
shll
mov
leave
cmp
pusha
leave
mov
lock
add
addl
add
jno
push
mov
shll
push
jbe
mov
dec
into
lea
xorb
mov
mov
mov
dec
pop
mov
and
jb
and
mov
test
jnp
jp
jae
add
xchg
jmp
fists
iret
mov
push
adcb
cli
pop
dec
inc
mov
adc
aam
ficompl
iret
adc
fldl
and
jne
ds
xor
jns
lret
mov
ss
xor
popf
test
jle
ret
ss
push
jbe
sub
and
out
int
jno
xor
in
popf
dec
stos
out
sbb
and
stos
movsb
jne
pop
mov
rorl
mov
mov
or
xchg
jp
sbb
test
jne
repnz
cmp
lcall
mov
shl
mov
xor
xchg
mov
or
test
ret
inc
fidivrs
pop
sbb
jbe
stos
and
pop
rorb
lcall
cltd
cli
inc
sub
cmp
sub
pop
mov
in
cmp
jne
clc
jge
push
sti
add
adc
pop
mov
push
dec
sbb
push
push
and
cwtl
mov
mov
adc
js
sahf
push
or
jnp
sbb
xor
lret
jbe
inc
xorl
push
scas
dec
adc
scas
sti
adc
leave
jns
inc
lods
sbb
fsubrp
out
add
movl
dec
jp
movsb
cmp
jae
and
inc
mov
cld
sarl
mov
push
subb
dec
fnstsw
and
or
adc
sbb
not
push
imul
arpl
mov
cmp
mov
fsts
popf
aad
out
jae
cmp
stc
mov
mov
lods
aas
jns
inc
int
inc
movsl
lret
and
push
out
jno
cmp
mov
ja
inc
ljmp
lds
test
es
cwtl
mov
jl
sbb
or
push
inc
stos
and
push
out
xchg
dec
cs
aad
outsl
jg
sub
jmp
in
mov
popf
xchg
pop
popf
or
fisttps
scas
pop
jg
sub
lea
in
setns
adc
mov
imul
in
adc
and
inc
cmp
inc
sub
sbb
cld
lock
ja
gs
push
dec
sbb
cld
xchg
xchg
dec
roll
xchg
enter
subb
inc
and
loopne
inc
pop
add
sub
jne
jbe
dec
mov
adc
mov
mov
mov
stc
pop
in
add
mov
sbb
fisttps
jge
stos
cli
mov
sti
sub
in
pop
shlb
aaa
jo
xlat
mov
push
jmp
addr16
mov
adc
xchg
js
or
aad
testl
sub
mov
arpl
xor
scas
clc
pushf
sub
sbb
jp
adc
leave
aaa
aaa
mov
dec
jle
pop
dec
push
stos
xor
fwait
push
hlt
in
fnstsw
shll
fcmovbe
ds
mov
aad
lock
mov
push
add
push
in
adc
and
jecxz
jne
movsl
imul
cmp
outsl
xor
cmpb
scas
ret
sbb
fcoms
xchg
mov
shll
inc
inc
dec
imul
xchg
imul
adc
mov
std
incl
or
enter
repnz
and
call
or
add
jae
inc
movsb
fs
js
mov
mov
ljmp
lods
fwait
mov
ljmp
into
fistps
mov
fnstcw
nop
stos
into
xor
nop
arpl
stos
inc
clc
dec
cmpsb
add
xchg
xchg
mov
enter
xorl
push
mov
mov
es
mov
movq
idiv
insl
and
js
arpl
pusha
test
xor
inc
das
add
lods
dec
ja
fucomip
mov
jb
in
jne
shll
in
push
decb
ret
xor
mov
lret
jl
sub
mov
xor
rcr
cwtl
fxch
fisubrs
inc
int3
dec
sbb
xor
jle
mov
or
inc
orb
cli
jge
inc
movl
sub
int3
or
enter
aad
and
xchg
ja
push
sbb
outsb
jno
pop
xor
daa
daa
sub
daa
fistpl
cmp
nop
xchg
xchg
mov
lods
cli
push
repnz
leave
test
in
out
jae
xchg
xorl
scas
out
mov
dec
xchg
lods
jl
mov
mov
popf
ja
lock
cmpl
jae
sbb
add
mov
iret
movsl
add
dec
test
pop
xchg
ss
call
sbb
jge
sti
or
icebp
insb
mov
mov
stos
stc
mov
sbb
call
negb
inc
push
lret
rcl
lret
lods
inc
and
lock
into
push
sti
leave
ror
clc
dec
pop
je
adc
mov
push
jne
sub
fldl
lret
and
shlb
cltd
or
mov
pop
insb
in
mov
jne
fisttps
jmp
dec
mov
mov
lahf
cwtl
inc
test
test
pushf
das
sahf
mov
js
daa
xchg
push
fmuls
inc
shr
hlt
fadd
icebp
adc
orl
out
out
aaa
jmp
cmpsl
or
outsb
cwtl
jp
scas
test
fs
out
and
popa
sahf
notl
jmp
shrl
ret
xchg
test
jns
ja
insl
sub
cmp
cmpsl
sub
mov
fsubr
sub
clc
hlt
leave
cmpsl
mov
sub
xor
dec
or
arpl
js
or
xor
mov
test
ret
fwait
or
iret
sbb
repz
sub
mov
push
inc
repz
jb
mov
lret
add
jnp
mov
pop
incl
add
jb
ret
repnz
inc
mov
ljmp
and
pop
sub
iret
jno
adc
sbb
pop
push
dec
dec
shll
mov
ja
push
lret
mov
lret
jno
cmc
outsb
idivb
inc
xchg
and
xor
hlt
ret
jmp
xorps
inc
mov
fiadds
push
xchg
std
fs
mov
dec
pop
cmpsl
xchg
jo
push
inc
push
xchg
in
and
mov
fsubp
sbb
jne
jno
test
cmpsl
inc
js
out
ret
mov
fwait
imul
repnz
shrb
sub
dec
adc
in
and
scas
daa
pop
aas
cwtl
imul
pop
ret
insl
inc
fwait
or
pusha
mov
push
add
bound
in
add
bound
cmpsl
std
dec
cmp
popf
xorb
ret
cli
push
jno
or
xlat
aam
jl
cmc
cmp
xchg
popa
lcall
cmp
jg
in
cmp
xor
aaa
sub
mov
xchg
push
andl
sub
pop
xor
or
js
clc
xor
add
fnsave
adc
ja
mov
dec
outsb
dec
fwait
dec
dec
loop
shll
jnp
push
shr
jne
ds
fdivrs
iret
add
and
inc
jmp
xchg
inc
dec
imul
roll
or
out
mov
fdivrl
mov
inc
push
sahf
dec
aam
mov
xor
pop
movsl
loopne
dec
cs
push
daa
dec
adc
and
in
jp
or
xor
cmp
bound
popa
mov
dec
int3
jbe
jg
dec
xchg
mov
repz
dec
cmp
cmpsb
mov
out
xchg
jmp
adc
add
fcoms
mov
movsl
pusha
jae
popa
fmul
mov
sub
pop
and
xchg
addr16
xchg
adc
fdivrp
outsb
loopne,pn
pop
and
scas
popa
movsl
xchg
rorl
pop
out
mov
cmp
mov
pop
mov
lock
insl
mov
aas
loope
repz
xor
sti
scas
push
fnstsw
mov
movsl
pop
dec
pop
mov
popl
mov
iret
ret
ret
cld
stc
jl
ljmp
movsb
fldl
xchg
pop
in
cwtl
sub
out
inc
xchg
nop
xchg
enter
in
cmp
add
add
lret
mov
or
lret
push
out
lods
or
lock
sbb
in
push
in
adc
imul
shlb
outsb
pusha
insb
add
popa
fwait
outsb
jo
dec
in
jge
sarb
mov
mov
cwtl
lea
adc
mov
fdivl
push
rorb
fimull
insl
daa
pop
mov
aas
sub
pop
dec
js
push
gs
ror
xor
ljmp
adc
sahf
clc
sub
xor
cmp
add
popf
push
push
loope
sub
sbb
sbb
in
sti
pusha
sub
xchg
push
ffree
xchg
cmp
push
jo
push
loop
xor
mov
jne
cs
popa
mov
mov
inc
lods
ja
iret
xchg
jne
js
rorb
mov
cmpsb
outsb
cmpb
jl
mov
or
or
jl
push
ret
f2xm1
and
nop
jb
sbb
cld
icebp
aas
adc
in
mov
jae
imul
sbb
xchg
jmp
jbe
adc
aaa
mov
aas
stos
and
sbb
mov
mov
loopne
or
jbe
js
jno
pop
dec
mov
xchg
pusha
popa
loope
addb
jo
pop
mov
jecxz
enter
sarl
push
sbb
test
loopne
or
mov
sub
sbbl
lea
or
cmpsl
enter
pop
and
shll
xor
adc
cs
jnp
lds
sub
fstl
mov
inc
jns
add
pop
lahf
inc
xchg
fmulp
bound
data16
xchg
mov
rcrl
fcomps
aam
jg
fmuls
xchg
fincstp
std
stc
jecxz
das
nop
push
stos
jb
jmp
xchg
ret
cmpsb
lcall
inc
adc
pusha
fldl
sti
dec
xchg
xchg
pop
cltd
xchg
dec
iret
cs
lods
or
movsl
inc
jp
push
mov
mov
mov
rep
enter
jl
dec
addr16
mov
lds
mov
add
mov
loope
ret
rcll
mov
femms
adc
jecxz
xor
xor
sbb
into
add
dec
test
xchg
mov
xchg
sub
or
loopne
sub
movsl
bound
mov
jle
sub
mov
or
push
in
nopl
fwait
out
mov
stos
fs
cwtl
mov
das
sub
loopne
fwait
pushf
lds
cld
into
sub
stc
fisubl
insl
push
mov
push
pop
fs
dec
or
jecxz
std
add
fucomip
call
xor
insb
cwtl
xchg
mov
aad
push
push
mov
mov
movsb
lock
add
outsb
test
test
pop
dec
push
rolb
jp
call
repz
enter
xchg
pop
cwtl
adc
mov
loop
push
inc
int
or
pop
pop
xchg
pushf
jbe
arpl
imul
clc
sub
into
inc
std
cwtl
sarl
mov
ss
aas
jg
imul
add
push
shr
sar
inc
and
bound
cmp
push
popa
imul
inc
mov
or
arpl
cli
jnp
add
xlat
dec
add
push
lahf
adc
imul
inc
xor
mov
jo
lcall
xor
xlat
insb
adc
jg
into
data16
js
pop
cmp
jno
inc
ficomps
ss
pop
leave
pop
jbe
dec
sbb
push
xor
and
lods
test
ret
jne
test
in
pop
pop
les
sbb
or
cmp
mov
popa
dec
addr16
shll
dec
cmc
dec
jmp
xor
xor
and
push
outsb
hlt
or
sti
enter
xor
and
sub
pop
xor
sub
cltd
sbb
push
popa
in
jno
nop
pop
loopne
pushl
insb
inc
in
adc
sub
ljmp
ret
cmpl
xchg
mov
mov
xor
test
call
mov
ss
jecxz
push
aaa
pop
insb
pop
push
and
jg
sub
sub
mov
lods
cmp
xor
or
arpl
das
int3
je
add
rorl
movsl
push
sbb
out
push
out
add
movsl
ficomps
fdivrl
pop
shll
out
xlat
shlb
dec
aas
mov
iret
xor
inc
ljmp
aaa
fdivrp
insb
out
roll
or
push
push
repnz
outsl
xchg
pop
add
mov
dec
hlt
add
cmp
add
push
js
hlt
gs
fwait
dec
mov
ret
loopne
and
iret
mov
push
push
out
arpl
das
gs
cli
cld
jne
enter
pop
test
adc
js
push
xchg
in
mov
movsb
mov
sbb
cmp
js
fiaddl
jne
xchg
jle
lock
cli
mov
les
cwtl
popa
jbe
in
push
and
test
test
push
push
sub
xchg
xor
movsb
cmpsl
test
subb
cmp
lret
outsb
mov
sti
add
adc
pushf
adc
andl
adc
xor
arpl
iret
ja
sbb
enter
dec
shrb
shrb
aam
add
xchg
shll
insl
imul
clc
xchg
cmp
sub
pop
sub
fcoml
dec
mov
push
add
mov
lds
jle
xchg
sub
std
mov
cli
xchg
xchg
sub
pop
inc
popa
scas
jns
xor
outsl
cli
mov
xchg
ja
stos
into
cmp
iret
das
scas
fxch
and
js
lahf
xchg
int
test
js
and
subb
addr16
jbe
sub
pop
mov
daa
mov
sti
loopne
add
stc
cld
sub
sahf
push
std
fidivrl
dec
lret
ljmp
push
sub
pop
add
mov
data16
xorb
mov
fcompl
gs
dec
sub
jp
push
popa
xlat
dec
stos
jbe
and
and
fildl
test
lds
popl
jo
retw
test
dec
into
jno
add
cltd
jne
mov
and
pop
mov
inc
sbb
pushf
push
dec
test
pop
push
mov
sahf
fistpl
xor
mov
idiv
push
jne
or
fwait
sub
fs
out
mov
sub
mov
pop
repnz
outsl
scas
scas
sbb
adc
pop
xor
lea
cmp
mov
addr16
addr16
loop
mov
and
inc
test
mov
les
mov
xchg
or
or
jo
loope
inc
lret
test
cmpsl
js
mov
cmp
xor
scas
or
inc
inc
and
xor
test
sti
nop
inc
xchg
fyl2xp1
cmp
or
les
jl
xor
nop
fsubl
ljmp
cmp
enter
inc
xchg
sbb
adc
pop
call
icebp
sub
dec
mov
fisubl
cmp
shlb
ret
pop
das
inc
mov
push
push
ds
xlat
jno
cmp
stos
add
andl
mov
push
test
adc
sbb
pop
sub
dec
xchg
in
test
ja
mov
cmp
xchg
add
je
lods
xchg
cmp
cld
imul
sub
push
mov
xchg
xchg
mov
lods
xchg
or
cmpsl
sub
or
pusha
ret
xchg
std
dec
xchg
int
loop
outsl
and
int3
xchg
popf
ljmp
mov
dec
lds
cld
loop
xchg
imul
pop
scas
ja
out
mov
xlat
sub
outsb
jl
cwtl
das
jo
shr
cmp
mov
outsl
sub
xchg
in
lcall
mov
mov
jbe
cmp
jle
je
lds
mov
pushf
dec
jl
cmp
dec
in
mov
test
fstl
mov
adc
and
pusha
lahf
mov
xchg
fbstp
test
adc
std
push
imul
mov
inc
xchg
adc
pop
lock
jmp
data16
dec
adc
cmp
lret
js
mov
mov
push
jbe
jbe
out
xchg
lea
out
arpl
mov
out
adc
xor
imul
ffree
xor
addps
out
xor
mov
dec
mov
leave
jbe
jbe
jno
js
nop
ljmp
mov
push
lcall
lcall
add
jbe
add
lea
fsubrs
mov
sub
mov
mov
cmp
cmc
das
pusha
shl
cmp
test
sub
xchg
loopne
dec
xor
fdivrl
scas
and
and
out
pop
sub
xor
dec
data16
pop
mov
inc
xor
data16
push
movsl
iret
push
cli
insl
dec
add
or
stos
inc
sbb
in
popa
mov
xorl
outsl
int3
add
sbb
inc
pushf
icebp
bound
jne
dec
int3
call
mov
loop
lcall
in
cmp
pop
movsl
push
mov
loop
adc
and
xchg
out
xor
ss
xor
mov
mov
and
sbb
daa
sbb
mov
or
pusha
lahf
jo
mov
push
leave
out
pop
sti
test
cmpsl
sub
xchg
push
inc
inc
cmp
loopne
mov
cwtl
stos
mov
sub
mov
lds
cmp
out
adc
stos
or
or
jp
lods
in
sbb
lea
xor
mov
sahf
pop
push
hlt
int3
icebp
push
mov
pop
ficoml
mov
sub
call
sbb
pop
jp
in
jbe
sarb
cmp
loopne
push
inc
cmpsb
add
add
mov
test
idivl
xchg
and
insb
sub
ss
fadds
mov
inc
sbb
inc
add
sub
fadds
sar
mull
subb
dec
jp
mov
stos
cmp
sbb
inc
jae
jno
loop
or
xchg
mov
pushf
cld
lret
andl
shll
pushw
jecxz
clc
gs
xor
push
insb
pop
sbb
arpl
imul
add
mov
jnp
xchg
mov
push
repz
lret
pop
pop
insl
mov
jne
mov
jae
fcomp
xor
xchg
pushf
sub
or
or
and
test
push
in
repz
jle
aam
aas
inc
xor
and
mov
jns
xor
stos
mov
mov
test
jb
sbb
mov
in
hlt
repz
jle
out
pop
mov
mov
movsb
pop
push
loopne
ret
sti
testb
ds
test
sub
je
in
xor
mov
pop
jle
ljmp
and
pop
clc
ds
out
dec
sbb
dec
xchg
xor
cmp
xor
data16
jl
inc
push
lds
push
int
lret
fisubrs
sbb
fistpl
cmp
repnz
dec
jmp
lea
mov
ljmp
ret
test
fdivl
orb
sub
push
faddl
pop
pusha
std
xchg
test
sbb
sahf
add
sbb
aaa
push
ljmp
jbe
sbb
mov
cli
push
movsl
mov
leave
daa
stc
stc
and
out
imul
nop
cmp
pop
xchg
rcll
loop
fwait
in
pop
cmpsb
popf
lret
add
sub
push
jmp
loop
fidivrs
cmpsl
nop
pop
into
sbb
gs
mov
icebp
ss
adc
ret
or
sbb
in
fldt
mov
jge
testb
je
push
sub
cmp
jno
xor
cmpl
add
push
inc
mov
stos
xchg
adc
cmp
jl
mov
andb
mov
sbb
pop
rcll
clc
inc
xchg
pop
hlt
add
into
imul
pop
aaa
outsb
sbb
sub
shrl
std
pushf
hlt
mov
or
aam
pusha
mov
mov
out
jb
icebp
int3
popa
test
dec
sbb
out
mov
sub
sub
pop
lock
jns
stos
loope
xchg
pop
call
inc
pushf
and
dec
into
sbb
sarl
jg
fwait
sbbb
outsb
ja
push
adc
inc
inc
or
ret
mov
sub
jne
testb
aas
sub
xlat
lods
insl
jne
out
stc
in
and
add
sbb
mov
mov
or
sbb
js
cmc
push
xchg
sarl
or
mov
add
lock
push
push
es
mov
jp
loop
pop
jp
std
adc
jg
mov
addb
jne
icebp
jnp
xor
add
xchg
cmpsb
pop
jo
pop
mov
sbb
cli
mov
or
add
test
rorl
add
pop
fists
loop
pop
loop
pop
cmp
xchg
orl
mov
into
push
outsl
cli
leave
dec
mov
das
lea
push
lcall
outsl
iret
test
push
mov
and
cmpsb
mov
jno
call
cli
push
mov
dec
jns
push
fists
push
sbb
lods
in
mov
and
push
ficoms
rclb
pop
mov
xor
aam
push
inc
push
into
adc
adc
inc
or
lahf
cmp
nop
nop
pop
sbb
cli
add
mov
dec
mov
pop
push
aad
dec
or
xlat
xor
xor
call
mov
xchg
test
push
fiaddl
popa
nop
enter
and
hlt
into
shlb
fwait
lret
dec
loope
mov
mov
add
popf
and
push
imul
je
push
pop
sub
lds
or
mov
arpl
push
dec
xchg
neg
sti
mov
out
pop
xchg
rcr
fldt
xchg
cltd
sti
push
or
xor
push
mov
inc
leave
or
mov
enter
inc
add
add
clc
pop
shll
addr16
loopne
push
pop
fldl
faddp
xchg
inc
out
pop
stc
mov
das
test
or
testl
jns
mov
in
dec
add
mov
pop
xor
adc
pop
push
push
int
iret
leave
jmp
test
gs
movsb
or
pop
jo
push
in
enter
faddp
fldl
push
sbb
mov
inc
push
ficoms
aas
inc
push
ret
sub
mov
std
cltd
fnstenv
clc
xchg
cmp
dec
pop
mov
mov
xchg
add
pop
pop
push
aam
in
out
pop
popf
mov
and
adc
mov
xor
daa
int3
add
sbb
cmp
ret
mov
mov
fistps
lds
pop
jmp
ja
loope
pusha
dec
adc
lret
hlt
sbb
insb
fisubs
pop
rcrl
mov
cmp
addr16
sub
out
add
fiaddl
cltd
outsl
sbb
pop
push
push
mov
pushf
mull
mov
ret
xor
mov
jge
pop
pop
rorb
xor
addr16
mov
xchg
in
movsl
lahf
dec
xchg
enter
sti
sbb
lea
lret
roll
ds
out
lahf
mov
fisubl
js
xor
icebp
out
cli
ret
push
loop
pusha
pop
sahf
jecxz
loope
test
add
cmp
hlt
aaa
mulb
cmp
push
jecxz
xchg
xor
lcall
repz
cs
sbbb
sub
test
sbb
lods
sbb
imul
ficomps
jp
mov
add
testb
sbb
fisttpl
jb
mov
lret
jecxz
cmp
sti
ret
adc
and
adc
cmp
rorb
in
sti
pushf
jp
iret
fidivrl
fsub
sahf
mov
into
adc
adc
in
inc
xchg
stc
rcrl
or
push
adc
mov
lret
das
add
lcall
and
jecxz
sbb
mov
push
cld
arpl
scas
push
imul
add
and
and
jns
in
mov
sub
cld
inc
arpl
mov
xlat
and
pop
mov
sub
scas
out
push
addr16
jmp
fdiv
adc
fistpll
in
inc
xor
and
jae
mov
mov
push
bound
pop
sahf
test
scas
scas
iret
push
loope
jmp
sar
mov
sbb
pop
add
mov
xchg
jl
loopne
andl
adc
inc
ljmp
gs
and
push
sub
mov
cmp
out
fimull
or
jg
mov
dec
pop
or
pop
add
ret
and
add
repz
mov
sbb
dec
push
cltd
loope
inc
lret
je
jae
adc
and
std
mov
repnz
arpl
xor
in
adc
pop
xchg
rcrb
pop
jbe
ret
stos
fidivs
xchg
aas
test
and
xor
jmp
add
xor
lret
jecxz
arpl
push
dec
test
mov
dec
pop
dec
push
sbb
test
std
enter
loope
int3
iret
pop
and
mov
test
mov
fmul
pop
fidivs
jp
insb
pop
testb
cmpsl
test
xchg
push
shll
push
stc
adc
push
jmp
xchg
and
adc
aad
lcall
xchg
stos
repz
int3
sub
ret
imul
adc
fwait
ljmp
ror
popa
pusha
movsl
mov
jmp
adc
push
add
dec
lea
mov
xchg
xchg
fs
sub
aad
out
repz
inc
insb
or
ficomps
movsb
mov
jmp
sti
sbbb
cmpsl
pop
in
ss
jge
xchg
mov
out
neg
inc
add
aam
dec
icebp
js
push
imul
mov
fadd
jp
push
add
imul
scas
lret
icebp
sub
mov
pop
sbb
insl
xchg
mov
jmp
xchg
outsl
inc
in
or
push
in
int3
stos
ds
mov
incl
fadds
jge
xor
adc
sub
mov
in
popf
cmp
cmp
push
fistpl
inc
or
dec
nop
loopne
test
dec
stc
xchg
ret
jle
mov
jno
mov
cmpsb
dec
dec
sub
or
and
cwtl
dec
dec
negl
in
lea
inc
mov
xor
pop
dec
adc
ficoml
pop
ss
ficoms
pop
pop
aaa
inc
faddl
outsb
mov
out
xor
lret
mov
or
data16
in
jge
pop
jp
xor
push
sbb
dec
stos
dec
lahf
subl
lahf
inc
add
bound
inc
arpl
push
and
mov
mov
cli
cltd
xchg
fsubrs
mov
push
and
jge
mov
inc
pusha
mov
adc
js
xchg
jns
imul
mov
and
add
dec
adc
inc
ljmp
xor
pushf
subl
scas
pop
dec
xor
into
xor
push
sub
fs
inc
jb
jl
dec
rcrb
dec
sub
jg
adc
or
mov
push
dec
aad
ret
mov
cmp
pop
repnz
lret
mov
adc
add
xchg
loop
cmp
bound
jge
inc
jb
fisubrs
sahf
ror
sub
mov
cmp
adc
cmp
cmp
movsl
repz
dec
in
mov
test
lock
std
scas
es
sbb
jb
arpl
sbb
hlt
cmpsb
cmpsl
addb
and
icebp
mov
lds
add
adc
mov
jae
pushw
cwtl
or
cmp
inc
daa
pop
cltd
test
push
sub
mov
mov
out
test
and
or
sub
and
add
inc
rcrl
jmp
shlb
sub
shll
pop
out
incb
enter
call
fxch
push
xor
push
xor
inc
add
lahf
ja
or
jp
mov
nop
add
icebp
sbb
mov
jbe
cmp
jmp
jecxz
icebp
mov
and
movsb
stc
pop
out
lret
hlt
pop
mov
scas
ficoms
pushf
xor
lods
loope
push
out
pushf
cwtl
dec
dec
add
push
or
inc
jp
stos
daa
std
xchg
mov
loopne
daa
mov
add
or
xor
enter
cwtl
mov
jl
lcall
cltd
pop
mov
mov
insb
test
push
leave
sbb
xchg
pcmpeqb
test
add
cmp
push
iret
mov
cmc
mov
xchg
xchg
jb
ja
or
lods
sub
lea
je
decl
sarl
xchg
pop
dec
xchg
aad
push
addb
xor
mov
adc
test
jecxz
jbe
inc
mov
outsb
mov
pop
popl
loop
and
xchg
out
inc
push
jecxz,pn
mov
jae
in
rcl
ljmp
mov
add
mov
mov
lods
mov
dec
mov
repz
movsb
or
mov
xchg
push
imul
xor
shlb
ds
pop
daa
xchg
lcall
xchg
xchg
je
push
or
in
mov
ret
fcomps
fisubrl
mov
imul
dec
les
mov
pushl
jmp
pusha
stc
inc
lea
inc
push
jo
aad
mov
jp
push
or
aaa
movsb
sub
adc
mov
imul
rcrl
and
cmp
test
mov
popf
lods
mov
mov
sub
movsl
jns
lahf
cmpl
ljmp
clc
cmpsl
or
sub
jle
leave
lret
fmuls
jl
xchg
insb
mov
xor
int3
xchg
lret
adc
pusha
imul
and
std
push
and
or
es
cmove
and
sub
aam
rorl
xchg
mov
pusha
mov
fcmove
xchg
pop
test
call
or
icebp
bound
jnp
or
dec
notl
jno
out
cmp
arpl
into
or
add
pop
jb
cmp
stc
lcall
mov
lock
fildl
rcl
ficompl
fcmovnu
xor
inc
fwait
cmp
iret
jb
daa
sbb
pop
pop
dec
mov
jle
adc
push
mov
je
push
push
sub
lds
dec
fisubl
xchg
mov
hlt
js
jp
mov
adc
xchg
mov
and
stc
fisubs
scas
jmp
xchg
sub
mov
mov
into
mov
outsb
xor
or
jns
add
rclb
mov
ret
mov
sub
cmpsl
mov
test
xor
int
pop
or
push
dec
sbb
ret
mov
mov
nop
lock
sub
int
xor
push
inc
sbb
aaa
je
out
or
inc
push
xor
cwtl
out
aas
js
push
dec
call
inc
inc
lock
pop
leave
dec
in
popa
jmp
jg
js
aad
mov
fidivs
xchg
push
ss
addl
shl
mov
lcall
aam
push
jae
mov
push
pop
lret
aam
aaa
jp
lods
jmp
cmp
leave
mov
out
push
int
out
fs
test
inc
test
sub
hlt
adc
sbb
add
fisubs
lods
sbb
je
fs
sub
jae
fisubrs
sub
mov
test
xor
test
popf
sbbl
push
xchg
jns
fcomps
lods
fwait
cmpsl
sub
cwtl
insl
test
daa
and
imul
mov
lock
jecxz
out
loop
or
stos
jbe
push
sub
fsts
jmp
dec
mov
or
xchg
addr16
fwait
or
ret
jne
adc
stos
inc
int
xor
xorl
lcall
out
scas
out
inc
adc
fwait
add
or
cmpsl
sub
mov
and
nop
pop
mov
cli
call
stos
mov
push
pop
xorl
je
adc
cld
repz
int3
adc
or
test
push
rcl
in
mov
xlat
insl
cmc
cs
sub
mov
lods
dec
mov
or
data16
lock
push
jl
cmc
mov
out
sbb
jne
jge
push
pop
push
inc
test
or
int3
sbb
fsubrl
call
cmpsb
call
mov
xchg
std
dec
pop
xor
add
pop
outsl
loopne
cmpsl
cmc
xor
in
rolb
xchg
push
mov
cmp
aad
loopne
add
mov
rorl
outsb
loop
push
or
adc
mov
lods
aad
mov
push
jge
push
xchg
pop
imul
jo
mov
xor
ds
mov
cmpsb
dec
loop
add
pop
lock
mov
movb
repz
lret
lcall
xchg
push
dec
insb
dec
mov
insb
inc
scas
ficompl
or
push
loope
jmp
fsubr
mov
in
and
test
fdivr
and
roll
subb
push
jge
add
lods
mov
dec
arpl
stos
incb
or
pop
xor
mov
pop
xchg
icebp
in
sarl
xor
adc
int
in
shlb
jne
out
mov
scas
mov
clc
loope
jmp
sub
push
loope
mov
enter
mull
mov
add
jl
sti
pop
inc
cltd
mov
mulb
dec
rol
jmp
add
or
fisubl
imulb
xor
dec
fldcw
test
dec
mov
inc
sahf
jg
cld
aad
scas
fiadds
nop
xor
jecxz
lds
pop
xchg
fstl
lds
int
pop
add
jnp
fcoml
inc
jno
push
stc
sarl
rclb
add
push
stos
and
mov
scas
pop
inc
mov
repnz
cmpsb
aaa
lcall
inc
fstl
or
jmp
mov
cmp
xlat
cltd
test
dec
lcall
mov
xchg
scas
lcall
or
test
inc
in
pusha
fimuls
cmp
adc
scas
popa
rolb
mov
push
fs
adc
jno
int3
fsubrp
sarb
cmp
arpl
sbb
push
pusha
inc
mov
test
mov
ror
ret
mov
repnz
or
bound
mov
mov
push
sbb
subb
push
mov
adc
xchg
cmp
cwtl
fldz
stos
mov
es
divl
mov
pop
ja
fsubrl
fcompl
push
mov
stos
out
push
mov
jnp
fcoms
jmp
dec
lock
test
and
jno
cmpsl
or
rorb
shrl
not
pop
push
aas
xchg
jnp
lods
fidivrl
mov
pop
mov
rcr
pop
pop
xor
jbe
or
mov
popf
pop
inc
jmp
fisttpll
mov
mov
out
push
push
js
js
push
mov
add
mov
mov
push
dec
mov
jge
scas
jl
push
std
push
call
cmp
repnz
ljmp
and
xchg
div
mov
add
popf
xor
lret
loop
in
leave
xor
daa
out
mov
push
cltd
gs
jp
or
xchg
mov
scas
dec
mov
xchg
mov
sbb
xchg
test
fidivrl
lods
decb
add
push
test
mov
mov
cmp
jp
ret
xchg
xor
xchg
outsb
dec
in
scas
movsl
nop
sub
add
and
iret
pushf
dec
push
repnz
dec
dec
cmp
lods
pop
dec
and
shrb
inc
scas
mov
popa
insb
inc
pop
push
xchg
sti
or
outsl
lock
movsb
sbb
add
insb
mov
adc
pop
sbb
fs
sub
or
mov
sub
dec
cmp
sub
and
ret
push
sub
and
mov
sub
xchg
rcrb
fisubrs
sbb
push
ds
addl
imul
mov
inc
adc
adc
xor
xchg
cmpsl
aas
test
adc
fcmovnbe
adc
fcomps
jne
cwtl
mov
lea
mov
push
cli
xchg
insb
fsubs
add
pop
and
popa
jecxz
pop
insb
pop
sub
test
lods
mov
jmp
sub
insl
add
mov
mov
in
mov
sahf
out
push
xchg
push
pusha
jge
jne
shrl
movsl
mov
push
lds
jecxz
mov
mov
testb
cmp
pusha
cmp
push
aad
add
icebp
xor
dec
sbb
jno
stc
xlat
popf
gs
enter
daa
inc
jg
sbb
enter
add
cli
mov
xchg
mov
jo
cmp
and
fsubrp
push
adc
add
stos
ljmp
xchg
pop
dec
sbbb
fcomi
pop
or
lahf
insl
sub
ja
add
push
mov
or
cmp
pop
arpl
insb
mov
mov
ds
jb
je,pt
adc
cmpsl
imul
mov
push
out
sub
divl
lods
sbb
jge
mov
sbb
ret
cmc
jnp
cld
push
in
sarl
jp
fucom
fisubs
lds
mov
mov
fmull
push
mov
outsl
ds
pop
negb
sbb
inc
movlps
mov
cmpsl
enter
pop
sbb
or
repz
rclb
mov
add
or
pop
and
dec
sub
or
sbb
into
and
inc
test
lcall
cs
and
jno
or
call
sbb
cmp
pop
fwait
mov
sbb
dec
cmp
and
outsb
sub
jl
aas
test
adc
pop
mov
cmpsb
add
sbb
mov
pushl
rcll
or
fsubl
mov
adc
inc
lcall
push
or
inc
mov
mov
add
cmp
outsb
into
stos
inc
mov
cmp
pushf
push
loop
sbbb
jb
sbb
mov
push
push
dec
push
push
lock
xchg
jmp
fdivrp
subl
mov
sbb
push
jnp
aam
xchg
out
adc
mov
insb
mov
sbb
cmp
inc
adc
or
repz
in
mov
int
pop
dec
stos
mov
rcrb
push
jae
addb
jge
test
outsl
cmpsb
shll
push
popa
test
xorb
cmp
iret
insb
push
insl
pop
cmp
sbb
cmp
adc
test
shr
or
int
cltd
out
lea
jne
xor
mov
sti
mov
xchg
push
cmc
xchg
inc
out
sbbb
insl
pop
push
and
xchg
mov
jae
mov
lea
pop
or
hlt
sub
aam
sarl
scas
cmp
mov
lret
in
fsubp
xchg
imul
insl
in
adc
in
ficoml
jns
popf
adc
push
aaa
sub
ja
and
cmp
or
cmp
and
push
cltd
notb
cmpsb
stos
imul
add
aam
add
dec
hlt
cmp
shrl
sti
lret
imul
or
mov
inc
popf
jmp
ret
outsb
jae
jp
inc
lods
shr
mov
or
fwait
add
cmc
adc
push
cli
icebp
mov
mov
jmp
mov
xor
mov
clc
xchg
aas
rolw
xchg
int3
insl
cld
stos
jno
imul
push
mov
loopne
scas
shl
cmpsb
jae
fiaddl
xchg
flds
mov
into
adc
popa
lahf
cmp
and
pop
and
add
enter
or
lahf
in
cmp
repnz
adc
ror
scas
sbb
push
cmp
fistpll
xchg
pop
insl
and
xor
cmc
flds
loope
pop
aam
push
cli
and
rclb
ja
xchg
cltd
mov
leave
xchg
or
adc
push
cmp
sbb
aad
fs
xchg
rolb
mov
popa
or
lret
imul
inc
pusha
sbb
mov
sub
jl
out
fdivl
pop
out
dec
mov
iret
mov
dec
stos
push
pushf
jle
jl
mov
movsl
xor
scas
rclb
lahf
insl
inc
in
mov
jo
andb
std
test
and
cwtl
repnz
cld
cmc
dec
push
sub
mov
pop
int3
mov
addb
lcall
add
js
sbb
lods
push
jecxz
or
jl
pop
icebp
xchg
xchg
out
or
push
notl
js
in
adc
ljmp
or
add
fldl
lahf
xchg
or
movsl
push
outsb
push
insb
lock
stc
mov
inc
ljmp
ljmp
push
pop
daa
xchg
mov
inc
push
push
xchg
mov
int3
test
xchg
mov
cmp
inc
int
int3
sbb
sub
pop
sub
pop
insb
cmc
es
pop
fwait
xor
out
lret
orl
inc
pop
dec
push
mov
fidivl
adc
subb
push
in
cmp
fistl
adc
cmp
jmp
je
mov
mov
lods
inc
pop
and
pop
xor
ja
out
pop
sbb
xchg
and
sub
nop
jbe
push
inc
sub
adc
fsubr
dec
jnp
negl
arpl
cli
mov
add
mov
stos
lods
jg
or
inc
xlat
popa
icebp
jmp
pushf
loopne
dec
cmc
sub
xor
ja
lock
or
sarb
sbb
and
pushf
test
sbb
mov
repnz
cwtl
sub
cmpsb
mov
jecxz
movsl
push
stos
push
cli
in
xor
out
fisubrs
pop
sbb
sub
ror
cmc
sub
sbbb
loopne
in
test
fidivl
and
fnstcw
or
out
mov
add
cmp
iret
sub
cld
faddl
dec
dec
or
pushf
fnstenv
adc
dec
mov
daa
in
mov
imull
mov
sti
dec
loope
or
lret
inc
sbbb
sbb
mov
icebp
mov
outsb
inc
into
fwait
test
xorb
adc
test
sbb
in
mov
sbb
inc
and
adc
pop
repnz
dec
fcomip
push
andb
repnz
icebp
push
repnz
cmp
mov
sub
daa
into
pop
cmp
lret
pop
fs
pushf
and
repz
cmp
out
cld
shlb
xor
add
jg
and
sub
sbb
and
sub
leave
std
lahf
jge
sbb
nop
push
xchg
jp
jmp
or
test
add
push
inc
int
popa
lret
stos
cwtl
js
and
or
rorb
dec
in
pop
push
mov
inc
test
icebp
out
das
xchg
aas
repz
jo
bound
leave
addb
inc
or
out
dec
jle
leave
dec
cs
inc
push
mov
aas
push
shrb
fsubr
imul
push
lret
aad
mov
mov
imul
adc
fucomp
mov
cs
adc
popa
cmp
cmp
dec
loop
std
iret
adc
mov
mov
ret
push
sbb
bound
adc
aas
adc
enter
mov
mov
leave
sbbl
ret
cmp
pop
sti
aas
call
and
cwtl
push
cmp
mov
sub
das
pop
lahf
fnstsw
int
adc
cld
shrb
push
jae
mov
lret
sbb
ret
out
cmpsl
jg
mov
stc
cmp
mov
data16
sarb
inc
loopne
loope
add
loope
push
push
call
and
pop
and
in
mov
mov
lea
jns
das
loopne
movsl
cmp
mov
sub
sub
leave
pushf
std
push
js
dec
int
rolb
pop
faddl
gs
push
sarl
mov
lret
mov
test
mov
cmp
sahf
lods
inc
fistl
je
mov
jg
int
adc
jle
pop
in
pop
es
lds
daa
std
lock
daa
cld
sub
sbb
and
mov
stos
lods
loope
or
dec
pop
fwait
jae
adc
je
dec
mov
xor
cld
cmpsl
cmp
aaa
adc
xchg
or
dec
out
ret
mov
test
mov
pop
cmp
add
push
cmp
xlat
mov
add
insl
hlt
pop
xor
pushf
pushf
cmp
insb
outsl
jb
pop
pop
mov
xor
jg
icebp
xor
inc
jns
xchg
hlt
push
push
out
sti
ja
pop
and
stos
jmp
fisubrl
hlt
adc
adc
jecxz
int
sub
push
push
and
addr16
pcmpeqb
repz
fistpll
lock
pushf
jnp
and
pop
xor
cmp
in
xor
push
lea
mov
push
leave
mov
lods
or
adc
repnz
ja
leave
push
sbb
loop
and
mov
in
icebp
mov
andl
sarb
dec
mov
mov
shrb
push
aam
ss
outsb
cmc
jnp
outsb
jmp
dec
inc
ljmp
daa
and
pushf
mov
aaa
cs
pop
sbb
lahf
mov
mov
lods
lret
call
push
jl
daa
stc
push
xor
xchg
jle
outsl
cmp
insb
out
inc
and
dec
loop
roll
fs
xor
mov
clc
jns
mov
jp
popf
jl
insb
int
pop
movsl
stos
dec
mov
push
test
add
cmp
andb
xchg
cld
addr16
rorb
fmull
and
stos
mov
add
repnz
loopne
xlat
cld
xchg
les
inc
std
add
cmp
and
addr16
sbb
lret
mov
add
das
pop
mov
mov
getsec
lcall
data16
mov
loope
mov
mov
rcr
pusha
or
leave
add
add
push
xlat
xchg
add
dec
cmp
cmp
lea
imul
adc
jl
mov
fwait
ja
adc
outsb
dec
mov
adc
mov
sbb
adc
mov
std
inc
out
mov
insb
jmp
add
dec
not
push
mov
enter
cmpsb
add
xchg
andb
xchg
inc
out
adc
out
pop
push
push
stos
dec
scas
lds
mov
xlat
xchg
fcompl
into
ds
hlt
jns
cmp
out
js
jecxz
aam
cmpsl
repnz
sub
addb
sahf
loop
sub
ret
fmuls
mov
test
pop
outsb
adc
push
sub
dec
popl
les
test
lahf
adc
sbbl
xchg
jmp
insb
dec
and
out
mov
add
push
rcll
stos
cs
fcmovnbe
and
ret
fcoml
pop
xchg
xchg
icebp
inc
inc
mov
cmp
jnp
pop
jne
or
imul
and
and
fbstp
stos
xchg
adc
nop
xchg
jg
mov
dec
leave
mov
sbb
adc
cwtl
je
mov
je
mov
adc
or
jge
xlat
insl
or
bound
jns
inc
dec
fisttpll
leave
shl
pop
adc
mov
push
aad
push
xchg
sbb
inc
or
cmpsl
jbe
lret
inc
xchg
dec
neg
notl
loope
lods
aad
sub
rorl
jge
mov
dec
arpl
adc
roll
ja
ret
bound
push
sub
loopne
xchg
mov
gs
push
xchg
pushf
xchg
ja
jmp
push
xchg
and
add
int3
xor
mov
call
insl
cmp
cmpl
lock
inc
lods
push
fdivl
cltd
xor
out
clc
les
movsb
push
gs
idivb
lret
sub
rcrl
jl
push
dec
insl
das
aaa
sbb
lods
aas
negl
ss
ss
adc
xchg
or
arpl
adc
imul
push
mov
mov
in
leave
shrl
psrad
and
mov
shll
push
push
cli
cmpsb
test
addr16
push
nop
xchg
jl
mov
test
fcompl
sub
call
sub
or
loopne
mov
adc
jp
shll
push
jbe
mov
sub
add
aam
lds
ds
shlb
jg
std
clc
test
arpl
test
ss
add
adc
outsb
ret
add
sub
sbb
jns
loopne
jne
nop
jmp
adc
out
jg
loopne
pop
aad
popf
mov
xchg
sub
jno
mov
insl
jb
sbb
test
cmp
dec
push
xchg
lds
js
iret
cmp
dec
and
shlb
sub
sub
das
mov
jge
jmp
fstpt
fwait
pop
mov
daa
sbb
xchg
xchg
add
mov
fldt
push
cltd
inc
pushf
loopne
lods
xchg
pop
push
ret
push
jle
lds
sub
xor
aam
sarl
ss
xchg
mov
aad
dec
xlat
cld
mov
xchg
dec
aas
or
fwait
push
shl
jmp
hlt
mov
lret
shlb
jp
xor
popa
roll
push
jp
cmc
dec
dec
inc
xchg
pushf
inc
adc
inc
adc
xchg
sbb
call
fsubr
fwait
ss
js
dec
scas
aaa
xorl
and
push
out
xlat
inc
and
and
test
dec
loope
mov
jnp
add
jmp
or
mov
mov
cmp
xor
or
pop
cmp
and
jns
mov
gs
and
cwtl
mov
mov
adc
lods
jns
sbb
xor
sbb
iret
addr16
insb
in
push
insl
dec
dec
cmp
adc
pop
out
mov
scas
dec
sub
sti
cmp
sub
lret
mov
divb
mov
pop
int
sbb
jbe
sub
andb
hlt
mul
in
mov
inc
xor
arpl
inc
adc
dec
ss
mov
mov
pusha
popf
inc
sbb
adc
jge
mov
lods
dec
ret
imul
scas
in
into
xchg
cmp
add
pop
inc
cmp
xacquire
mov
sbb
jo
cld
push
add
xchg
push
jb
jnp
jns
push
mov
xor
mov
fsub
inc
mov
adcb
cmpsl
lods
push
inc
pop
ret
add
pop
sbb
aaa
cwtl
push
jle
push
pusha
ljmp
rcrb
xchg
ficoml
xor
in
data16
ss
clc
aas
loop
faddl
push
mov
dec
out
repnz
in
cwtl
sbb
mov
sbb
fisubs
jnp
mov
int3
enter
inc
dec
clc
lret
jns
icebp
call
loope
ret
lcall
fsubs
xchg
ja
sub
fistps
mov
lock
and
xor
jge
cmp
sahf
dec
adc
call
idivl
sahf
jge
in
lock
mov
jae
iret
lea
pop
push
mov
push
test
mov
icebp
orb
xchg
subb
lods
xchg
aaa
xchg
xchg
sub
cmp
sti
or
cmp
addr16
xchg
push
cmc
jb
imul
out
cwtl
idiv
es
ror
pop
lock
push
cmp
rcrl
push
mov
jp
dec
push
stos
sbb
lods
and
add
ja
in
dec
gs
pop
add
xchg
jae
mov
jecxz
mov
bound
adc
and
fsts
mov
lds
enter
mov
dec
jo
cmp
jo
dec
pop
repz
mov
into
cmp
push
push
push
shll
pavgw
dec
je
sub
push
fadd
jmp
cltd
fs
pop
inc
jge
push
test
mov
mull
in
hlt
cld
dec
jnp
into
je
xchg
xor
adc
push
xorb
lret
jae
inc
jl
popl
pusha
ret
mov
cmp
movsl
sbbl
loop
lods
sub
sub
mov
fimuls
xchg
jmp
lods
cmc
aam
add
add
aaa
les
pop
fldt
pusha
idiv
in
adc
mov
int
mov
cs
out
je
movl
add
es
cli
setno
add
sbb
popa
push
mov
cmp
daa
adc
push
cmp
clc
lds
btr
jns
shlb
push
mov
outsb
mov
or
addb
sti
sti
lret
dec
xor
xchg
pop
dec
mov
jle
inc
fstl
popa
int
mov
pop
push
xchg
aas
mov
mov
ljmp
and
cli
mov
mov
lods
cmp
pop
inc
lret
rorb
insl
cmpsb
pop
cmp
mov
mov
xchg
lea
fstps
sbb
notl
data16
mov
das
lea
add
les
outsl
inc
sbb
cmp
add
mov
sub
in
push
stos
pop
or
adc
mov
and
setge
fs
je
pop
je
ja
sub
jp
adc
jl
adc
mov
xorb
adc
push
push
xchg
cmp
sbb
dec
loope
sbb
fistpl
add
gs
fwait
rclb
sbb
ret
mov
addl
lcall
lea
arpl
pop
mov
out
dec
lcall
rcrl
jmp
lret
pusha
clc
lea
in
je
adc
and
je
cld
cmpsb
ja
cmc
push
test
sub
pop
xor
xchg
stos
pop
adc
add
add
aas
ja
jl
ja
into
dec
dec
jno
xchg
lods
js
in
lcall
pop
inc
add
mov
add
inc
fsubs
add
les
mov
mov
loope
mov
in
insb
mov
int3
pause
outsb
mov
pop
or
jbe
ljmp
popf
xor
pushf
and
lcall
in
add
cwtl
push
enter
mov
sbb
icebp
cmp
in
and
lret
push
fwait
nop
mov
mov
rcl
adc
mov
std
in
or
push
test
and
je
push
and
pop
bound
stc
arpl
sbb
mov
jbe
sub
xchg
setg
xchg
in
out
jp
pop
mov
imulb
inc
das
dec
outsl
add
cmpb
movsb
sub
sbb
cmpsb
xor
movsl
incb
and
adcb
adc
dec
and
cmovge
dec
popa
arpl
adc
and
sar
pop
inc
pop
mov
push
push
les
test
mov
add
andl
dec
cmp
test
out
loop
ljmp
inc
imul
cwtl
push
xor
nop
sub
push
into
mov
dec
jge
arpl
js
sub
xchg
jae
or
push
stos
jle
push
inc
jne
cmp
xor
xchg
mul
cld
adc
or
test
jne
jge
mov
arpl
int
jmp
adc
and
data16
xchg
inc
push
test
add
notl
imul
cs
push
fs
mov
pop
icebp
out
sahf
jp
cmp
sub
pop
dec
dec
ret
mov
xor
fldl
test
sub
mov
iret
into
movsl
lcall
stos
icebp
in
mov
insl
sub
inc
and
mov
add
cwtl
xchg
or
and
aam
mov
lock
jl
pop
inc
mov
add
rorb
lds
rolb
lods
mov
mov
and
jo
lcall
sub
jmp
jge
push
dec
insl
mov
int
cmp
push
clc
pop
repnz
inc
imul
mov
pop
jne
xchg
out
pop
mov
mov
imul
pop
mov
push
dec
pop
push
sub
lret
imul
iret
inc
movsl
or
inc
adc
fisubs
or
pop
mov
cmc
adc
stc
ss
jo
movsl
push
xchg
xor
mov
aad
mov
jb
inc
cmp
push
inc
jno
sub
xor
xor
adc
movsb
mov
popl
test
or
sbb
popf
xor
out
movsb
popa
jno
inc
sub
sbb
icebp
test
bound
inc
and
outsl
adc
lea
sub
loope
push
je
mov
andb
jae
out
outsb
adc
dec
or
repnz
fnstenv
movsl
jbe
and
in
insb
ds
aaa
fistps
cmp
inc
xor
sahf
inc
sbb
push
cmp
divl
enter
bswap
mov
jg
shrl
les
sbb
aad
push
mov
mov
out
rcrb
mov
pop
js
lcall
ss
addl
fwait
test
out
adc
adc
pop
ffree
inc
xchg
xchg
mov
mov
ljmp
xchg
insl
push
adc
cli
cmp
imul
mov
mov
xor
daa
xlat
sahf
ss
out
sub
orb
inc
mov
push
mov
hlt
orb
stos
pop
push
cmp
cmp
addb
cmpsl
inc
cmp
in
mov
or
and
cmpb
popf
push
mov
cmp
add
jb
adc
cwtl
mov
jo
int
push
subb
push
aaa
add
pop
jle
icebp
shl
lds
jge
push
enter
cmp
gs
out
push
cmp
and
add
pop
cs
jne
pop
sbb
jb
outsb
orl
mov
add
rorl
iret
in
sub
sub
pop
clc
int
lret
and
jecxz
dec
and
mov
and
lret
bound
jp
hlt
repnz
push
loope
jne
mov
inc
jae
xchg
push
je
mov
fwait
jnp
pop
mov
inc
jle
xlat
mov
mov
aad
imul
and
jl
mov
mov
lds
cmpsl
sub
pop
inc
insl
loopne
out
lds
sbb
mov
sub
into
mov
xor
push
fs
pushf
xorl
lahf
pop
dec
sub
add
into
and
test
les
dec
add
lret
push
es
sub
mov
and
mov
pop
xchg
pop
pop
out
xchg
adc
or
out
sbb
mov
jmp
and
dec
popf
xor
movsl
hlt
je
insb
sub
mov
sbb
test
jge
fsts
in
scas
jmp
ret
mov
adc
loop
pop
dec
push
xlat
enter
jecxz
imul
adc
call
and
ss
xchg
and
cmpsb
inc
mov
xchg
xor
pop
inc
adc
dec
pop
push
das
imul
jg
ret
nop
mov
out
loop
out
push
mov
mov
push
sbb
inc
sbb
jge
sbb
sbb
dec
sti
outsb
les
fstpt
into
lea
and
jecxz
push
in
add
sub
and
pop
cli
add
jecxz
cmp
je
mov
jo
xor
push
enter
sub
xchg
jo
inc
ss
pop
cmpsb
adc
std
add
ss
pop
cs
sbb
add
out
shrb
decl
inc
les
jns
sbb
pop
pop
out
xor
push
xor
adc
pop
xor
in
dec
cld
xor
js
or
add
xor
add
ja
xor
push
aam
popf
or
outsb
std
jbe
into
sub
fucomip
shrb
push
push
mov
push
in
xchg
cltd
jae
xor
outsb
lahf
push
out
push
pop
cmp
les
dec
inc
push
test
mov
mov
jnp
sub
pop
sub
cli
or
mov
add
lods
xchg
repz
cmc
mov
fwait
sbb
aaa
or
inc
adc
push
dec
jl
shl
incl
ljmp
int
xchg
jmp
pop
dec
int3
jae
push
xor
sbb
jo
pop
mov
dec
lods
out
cmpsl
xor
and
pop
or
mov
mov
mov
inc
dec
out
push
hlt
add
adc
jbe
adc
daa
jmp
mov
cli
gs
inc
push
leave
cltd
ljmp
in
jle
xchg
les
aam
pop
negb
cmp
jecxz
lock
out
cwtl
cld
out
jge
les
shr
sti
mov
incl
insb
mov
lds
dec
loope
gs
imul
fmulp
xchg
inc
aaa
sarl
clc
adc
pusha
cmp
in
andl
inc
ret
stos
sub
cmc
loopne
aam
pop
jns
mov
lds
test
xor
pop
push
and
adc
addr16
call
mov
in
mov
inc
pop
and
xor
call
loop
mov
and
dec
movsb
jecxz
cwtl
pop
lock
stos
dec
push
xchg
push
sahf
sub
jmp
std
jmp
mov
pushf
mov
rcr
mov
adc
and
jno
ss
int
dec
inc
movaps
stc
ljmp
mov
adc
cmpsl
rorl
loope
aam
push
inc
xor
add
sub
mov
inc
inc
into
xor
cmp
lds
ss
cmpsb
idivl
mov
push
push
sub
insl
bound
daa
icebp
ds
mov
rcrl
dec
adc
js
add
icebp
pop
ljmp
fcompl
jg
mov
adc
xor
add
push
movsl
add
xlat
jbe
push
ret
lcall
rcl
pop
push
add
pop
jmp
push
js
testl
loop
call
mov
notl
dec
xchg
lods
ror
idivb
mov
out
xchg
insl
and
sbb
pcmpgtd
shll
mov
jecxz
cmpsb
ljmp
sti
jmp
and
aas
lahf
add
andl
pusha
data16
mov
cmpsl
into
shll
dec
ret
in
jb
fisubrl
sub
adc
adc
sti
ja
add
bound
dec
scas
xor
adc
xchg
xchg
and
or
jns
push
imul
lods
sahf
jnp
cmc
mov
insb
fcompl
mov
pop
lock
lods
cli
inc
fidivrl
and
lock
mov
int
inc
dec
outsb
and
loop
add
cmp
jl
cmpsb
mov
sbb
or
fnsave
cmc
iret
jne
clc
mov
ret
cmp
sub
and
xchg
adc
inc
ficoms
shll
aas
or
jb
out
mov
jb
movsl
pop
stos
cmp
in
pop
lods
add
stos
aas
out
add
sbb
mov
push
push
jb
in
push
xlat
lret
inc
cli
inc
roll
adc
xor
int3
lret
xchg
push
pop
ret
xchg
repnz
xor
jmp
test
lcall
shlb
sbb
fsubrl
loop
cltd
push
mov
jae
in
xor
and
popa
ficompl
cmp
xor
cmp
sbb
fld
inc
sub
je
enter
sbb
sub
shrb
jb
cltd
in
xchg
mov
mov
cmc
pop
cmp
or
std
inc
imul
and
arpl
mov
push
rcrb
mov
mov
mov
adc
mov
sub
cmp
pop
out
adc
jle
lock
or
push
mov
mov
roll
ss
aas
insb
mov
pop
push
and
into
sbb
pusha
mov
mov
loop
fwait
xor
mov
xor
and
addl
jns
pmaxsw
daa
lret
ds
push
sub
add
adc
add
cltd
cwtl
ja
sti
test
pop
cs
in
mov
pop
insb
fisubrs
jmp
dec
xchg
mov
sbb
in
jne
jle
cwtd
adc
lret
loope
and
jp
xor
mov
add
ret
outsb
push
out
jne
shr
xor
sub
push
bound
test
mov
ret
dec
movsb
fildl
aaa
push
cltd
ficompl
scas
dec
in
sub
xchg
iret
inc
jno
mov
mov
fistps
test
sub
call
fisubs
push
pushf
ds
inc
testb
inc
out
inc
ja
loope
shll
push
lods
xor
add
inc
daa
xchg
jbe
inc
mulb
fwait
or
stos
pop
faddp
enter
and
mov
gs
sti
dec
xchg
js
loopne
ds
xorb
sub
xor
fdivrs
cmp
enter
insb
sbb
icebp
lock
fwait
shlb
cltd
lahf
mov
lret
mov
mov
sti
jae
test
dec
cwtl
mov
fsub
mov
fidivl
pop
sub
jbe
ljmp
ja
and
shll
popa
pusha
testl
mov
push
mov
loope
std
and
stos
mov
jl,pn
adc
inc
xbegin
shrb
pop
push
xchg
test
inc
mov
mov
fsubr
bound
popa
xor
fyl2x
push
sub
fidivs
inc
jb
in
cmp
fldt
iret
jne
aas
fadds
push
aam
lahf
push
push
add
into
mov
mov
int
jno
and
push
push
sbb
pop
cmp
popa
cmp
mov
or
and
sub
push
nop
lods
cwtl
jnp
out
push
jne
ficoml
and
out
int3
or
out
subb
fst
cmc
div
cmp
hlt
sbb
mov
clc
cmc
fisttpll
mov
inc
cmc
jecxz
aam
mov
lret
mov
sbb
jg
arpl
xor
inc
popf
jns
dec
mov
out
cli
jl
gs
imul
ss
imul
mov
out
pop
das
cmc
mov
xor
pushf
mov
std
xchg
cmp
sub
ljmp
inc
mov
push
rolb
and
push
arpl
xor
or
fs
jecxz
movsb
sub
out
movsl
xchg
lret
out
dec
popf
dec
sub
jae
mov
sub
fnstsw
cpuid
das
das
xchg
sub
es
jno
repnz
je
fcmovnu
cli
xor
js
sub
inc
pop
mov
movsb
insb
push
je
pop
jae
jae
out
xchg
mulb
enter
jl
sahf
dec
add
xor
leave
fcomps
xchg
mov
scas
nop
mov
push
mov
add
adc
sahf
dec
jne
ja
cmp
and
fmull
mov
push
pop
or
xchg
inc
filds
addr16
lret
add
or
mov
faddl
data16
pushf
mov
mov
mov
arpl
dec
arpl
gs
xchg
dec
adc
pop
push
xor
or
movsb
pop
inc
mov
data16
add
lods
loopne
cwtl
pop
adc
leave
cmp
xor
aam
fidivrs
movsl
cltd
sahf
scas
mov
mov
icebp
cld
xchg
fld
ds
insl
sbb
or
movsl
inc
cld
or
repz
sub
jo
iret
cmp
outsl
out
mov
lcall
and
clc
mov
je
inc
fwait
push
add
push
xchg
pop
mov
mov
jle
ss
cmp
xchg
add
mov
push
inc
and
movsb
call
lea
xchg
mov
test
pop
test
mov
imul
js
and
ror
dec
and
sub
je
mov
iret
mov
dec
jne
jg
or
mov
pop
inc
scas
in
sti
fwait
sub
push
mov
fiadds
into
and
pop
cmpb
test
bound
pop
mov
call
std
idivl
jg
int3
aad
mov
clc
cmp
sub
sub
out
xor
loopne
xor
sbb
jl
leave
push
add
xchg
aad
mov
inc
pop
gs
ss
xchg
mov
movl
mov
dec
into
dec
sbb
or
adc
push
adc
lcall
and
cld
mov
fdivrs
and
jns
fldcw
jnp,pt
notl
sub
je
mov
into
dec
pop
sub
out
mov
and
push
xor
sub
repnz
shl
adc
dec
pop
inc
and
sbb
jle
les
xor
aas
jae
add
mov
inc
fimuls
jnp
fxch
out
ja
das
or
pop
lds
dec
dec
addr16
lock
jo
pop
pop
pop
xchg
fs
hlt
aaa
adc
repnz
push
mov
arpl
mov
lds
xchg
or
pop
jle
pop
sub
jo
push
jl
pop
lods
mov
pusha
fidivrs
push
rcll
fistpl
clc
cmp
lcall
cmc
repnz
test
lds
int3
mov
mov
fcmovbe
xor
cs
sbb
pop
rcrb
test
xor
lcall
inc
add
push
or
pop
fistpll
in
int
dec
xor
lds
jne
cld
ljmp
sbb
test
ljmp
ss
cmp
icebp
push
push
es
add
nop
cwtl
lock
insb
push
or
or
pushf
push
cmpsb
mov
mov
decl
test
mov
dec
sti
push
sub
insl
mov
test
xchg
es
sbb
mov
adc
test
add
fcoms
or
in
jg
out
gs
xchg
mov
inc
sbb
ficompl
rcr
pop
imul
or
lds
or
popf
jmp
jno
int3
scas
mov
jne
or
adc
jb
fstpl
das
inc
xor
sub
lods
adc
lcall
mov
sbb
pop
sub
ret
cmpl
or
jg
push
jbe
loop
pop
pop
or
loope
std
or
xorl
addb
or
in
mov
ror
pop
lock
cmp
dec
lods
mov
rcrl
jge
fwait
loop
nop
jns
dec
pop
mov
sbb
pop
mov
rcrl
push
xchg
sub
lcall
jnp
and
fs
push
push
mov
scas
cmp
aad
dec
jo
insl
insl
or
jecxz
call
rcl
mov
insb
std
flds
dec
sbb
scas
inc
cld
jg
xor
in
js
and
cmpsl
pushf
lret
add
cli
das
lods
mov
cmpsl
xor
xchg
sub
aad
adcl
sub
add
mov
pop
loop
cld
cltd
dec
push
nop
and
out
xor
pushf
sahf
push
mov
stos
and
cmp
outsl
call
xlat
inc
sbb
aas
cld
or
adc
or
mov
mov
adcb
mov
add
or
push
lret
pop
mov
and
shrl
jne
pop
fidivs
test
test
imul
shl
mov
push
movsb
mov
or
xchg
aad
mov
repz
aaa
xor
clc
xchg
xorl
loopne
jo
xor
push
addr16
pop
cmpsb
cli
stos
daa
or
push
dec
xor
mov
imul
mov
notb
std
ret
add
andl
xor
clc
je
fsubrs
ds
imul
lcall
dec
adc
lret
shl
test
pushf
and
in
mulb
in
inc
insl
lds
xchg
lahf
outsb
mov
mov
dec
inc
loopne
mov
mov
cld
cmc
das
push
loope
ret
add
or
and
cli
xchg
push
shll
add
imul
sub
dec
adc
xchg
in
jmp
inc
in
pop
out
std
pop
mov
loopne
aaa
and
cmp
inc
jecxz
test
icebp
push
dec
nop
mov
rcrl
ret
roll
inc
push
sbb
pushf
push
fdivp
xor
adc
mov
repnz
xor
imulb
rorb
dec
ljmp
data16
cmp
cmp
pop
sbb
and
sbb
fisubl
bound
int
add
imul
out
call
test
fs
fs
arpl
push
add
sub
iret
and
mov
fstps
sbb
test
cmp
hlt
inc
push
fiadds
add
push
pop
out
movsb
iret
inc
xchg
mov
pop
je
cmp
pop
loope
xchg
cli
push
or
movsb
push
fwait
insl
push
movsl
ror
mov
xor
xchg
fdivs
lahf
cmp
jns
xchg
jno
mov
stc
inc
cmc
pop
mov
sub
add
jbe
mov
inc
test
jmp
jns
mov
xor
pop
mov
mov
loop
in
jnp
xchg
push
jl
mov
mov
sahf
push
dec
pop
mov
pusha
pop
jmp
hlt
jae
rorb
xchg
ror
mov
mov
push
pop
push
add
pop
in
into
shrb
sbb
scas
jmp
adc
mov
out
shll
mov
mov
xchg
leave
movb
sbb
pop
xlat
mov
out
xor
aad
repnz
lods
pusha
and
decl
dec
cmpl
lret
xor
imul
lea
negb
ret
or
int
push
std
pop
mov
adc
out
icebp
sbb
notb
xchg
jl
shll
jg
aad
and
aam
ja
sbb
lret
mov
jo
jbe
enter
mull
cwtl
aam
addr16
shl
subb
xchg
sub
stos
outsb
cmp
ss
lret
aad
imul
add
inc
dec
popa
sbb
jne
cmc
bound
sbb
sub
add
push
xchg
sti
push
in
hlt
adc
dec
pop
mov
mov
push
in
ror
lods
cmp
or
cmp
iret
add
sti
test
repz
leave
ret
into
cs
test
adc
pop
scas
add
jecxz
jl
lahf
xchg
pusha
sub
lahf
es
xchg
dec
das
pop
addr16
and
jae
mov
scas
add
cmc
insl
or
ds
nop
movl
daa
rcl
dec
aam
stos
in
stos
push
push
pop
inc
ljmp
jnp
adc
popf
nopl
jp
push
push
outsb
jp
loop
push
test
pop
push
and
mov
idivb
sub
adc
sub
sub
xor
sbb
dec
mov
mov
add
push
pop
scas
cmp
push
scas
pop
cmp
pop
inc
pop
aad
ljmp
add
ja
and
leave
pushl
lcall
enter
or
sub
ret
repz
sub
ds
roll
xor
bound
roll
mov
aad
outsb
cmpl
test
popa
or
mov
inc
adc
cmp
sahf
mov
push
sbb
fdivrl
out
xchg
xor
and
rcrl
xchg
outsb
dec
std
xchg
inc
adc
push
dec
jbe
cld
mov
mov
ret
mov
jp
js
adc
cld
add
and
scas
mov
adcb
in
rolb
xchg
gs
and
jno
lret
outsb
jnp
call
xor
mov
jecxz
lock
sbb
leave
xor
sub
push
out
sub
mov
fsubs
sbb
mov
xchg
test
and
cltd
push
xchg
jecxz
jnp
daa
pusha
aaa
inc
das
stos
adc
cmp
mov
movsb
fisubrl
lods
mov
aas
sub
jb
xor
outsl
stc
repz
arpl
leave
rclb
push
insl
pop
shrb
mov
leave
jns
js
cmp
xchg
pop
push
addr16
je
test
push
jle
mov
mov
mov
add
dec
push
or
and
push
sbb
out
insb
push
orb
sahf
shlb
jbe
mov
adc
subb
push
gs
adc
pop
cmpsl
add
jge
hlt
dec
or
add
and
mov
fldt
inc
cmpsb
add
pop
cmp
xor
dec
and
mov
in
scas
mov
pop
jae
push
mov
bound
push
mov
inc
and
sub
cs
je
adc
mov
inc
nop
mov
cmp
je
or
insb
out
pop
jae
test
jmp
pop
int3
mov
sub
imull
insl
pop
inc
ret
outsl
cltd
mov
jns
cs
xchg
inc
fidivrs
scas
xor
les
push
add
repnz
data16
pop
dec
pop
dec
fdiv
lods
je
hlt
cld
daa
imul
in
mov
xor
jge
dec
add
lds
inc
mov
insl
in
scas
pop
fdivl
pxor
push
test
and
or
jb
fldz
adcl
cmp
std
mov
insl
sbb
dec
fwait
and
inc
push
inc
mov
and
push
loope
ret
sub
jb
dec
stos
psrld
daa
push
fildll
pop
in
push
mov
add
mov
xor
inc
dec
out
lahf
xchg
test
xor
cli
cwtl
addr16
in
cmpsl
adc
push
adc
xor
mov
mov
cmpsb
xor
scas
rcr
sub
in
loop
xchg
xlat
push
cmp
adc
cmp
jo
fdivs
mov
cmp
adc
daa
lcall
jb
imul
sbb
mov
subb
js
and
add
dec
mov
adc
ret
rcrl
push
pop
sbb
out
test
pop
xchg
xchg
sahf
scas
cmp
jo
fistpl
sub
dec
xor
enter
int
nop
fisttpl
add
add
xor
and
dec
sbb
data16
mov
jo
fisubl
incb
sbb
push
imul
sar
or
dec
in
jns
aad
mov
jnp
jecxz
adc
das
pop
rclb
dec
xchg
fmul
clc
loop
or
stos
cmp
lret
xor
mov
fs
lock
mov
mov
sahf
dec
mov
push
clc
xchg
out
inc
jne
mov
xchg
test
daa
mov
push
mov
pop
sarl
pop
into
mull
jbe
pop
push
cli
lods
outsb
loop
and
inc
push
push
or
jb
sub
xchg
sub
push
inc
mov
lds
mov
mov
mov
enter
clc
outsl
pop
mov
call
sub
outsl
icebp
out
lods
pop
enter
mov
mov
push
pop
pop
bound
in
dec
das
jmp
pop
dec
cmpsl
cs
pop
inc
push
repz
ds
inc
jbe
call
scas
in
test
jp
shl
mov
scas
xor
jl
sub
lret
fisubrs
or
je
push
dec
das
mov
adc
je
jnp
jmp
mov
xchg
inc
jns
movsb
outsl
mov
dec
pop
in
push
dec
push
jne
addb
sub
insl
xchg
or
jne
cmpsb
xlat
arpl
jnp
pop
lds
pop
into
push
mov
or
inc
jo
fbstp
xchg
xor
push
dec
inc
test
pop
inc
pop
nop
pop
je
imul
cmp
outsb
sbb
push
mov
or
int
das
xchg
xor
cli
stos
hlt
mov
inc
cmpsb
mov
cmp
push
xchg
xchg
andb
xchg
cmp
and
lcall
mov
xor
add
inc
fstl
and
dec
js
push
call
cmp
or
mov
fimuls
and
pop
out
xor
push
mov
or
test
aas
jne
mov
inc
xor
loopne
push
lods
adc
mov
aaa
mov
cmc
dec
out
dec
rcrb
push
fisttpll
jg
mov
sub
xor
xchg
jmp
cmp
inc
cli
lds
lahf
pop
xchg
inc
xchg
mov
das
jp
out
out
jecxz
clc
xchg
movsl
fisttpll
aam
cmpsb
mov
mov
push
mov
out
push
bnd
push
adc
push
cmp
out
xchg
push
int
mov
lds
xor
or
in
aas
cmp
fwait
insl
nop
inc
in
and
lods
pop
insl
test
inc
in
cmc
dec
loopne
ss
inc
xlat
cmpb
mov
ljmp
xchg
je
adc
cmp
mov
in
push
addl
jnp
or
lret
dec
divl
xor
ret
test
jl
out
insl
in
test
xor
adc
cli
sub
out
pop
dec
fs
cld
mov
cwtl
add
aas
fwait
add
sub
push
aas
pop
and
scas
adc
sub
lock
sbb
outsb
pop
stos
add
xchg
jae
push
inc
lret
in
lcall
in
inc
pop
or
aaa
addl
test
icebp
push
call
mov
and
movsl
dec
lods
xchg
adc
pop
cmp
fdivs
xor
cwtl
cwtl
jne
and
sub
stos
sbb
cmpsl
ret
jnp
sbb
pop
fs
push
mov
push
dec
add
dec
jns
cld
jecxz
mov
stc
mov
mov
jg
stos
movsb
aas
and
icebp
mov
stos
popf
adc
xchg
ret
outsb
xlat
and
daa
push
add
jmp
leave
mov
outsl
ljmp
shll
xchg
test
xchg
and
xchg
push
xor
in
es
adc
or
jmp
icebp
and
cmp
pop
adc
fsts
cmp
xor
lds
pusha
sarb
fildl
dec
ljmp
pop
xlat
test
and
aam
mov
dec
mov
or
mov
cmp
aam
negb
fbld
xor
push
mov
lea
lods
push
push
cwtl
dec
cmp
mov
push
inc
mov
clc
sbb
std
and
mov
sbb
dec
pop
xor
sub
pop
mov
loopne
ljmp
or
cmp
jg
sbb
outsl
xchg
or
inc
scas
sbb
int3
push
and
sar
shrl
addr16
ds
insb
icebp
call
xor
xchg
sub
jle
and
push
add
fldenv
enter
movsb
sub
nop
fnstsw
and
fsubrl
rcr
sbb
testb
xchg
inc
ljmp
out
or
jmp
mov
fwait
arpl
mov
cltd
pop
das
dec
mov
inc
adc
sub
in
push
mov
enterw
stos
hlt
aad
outsb
xchg
andl
sub
xor
jg
mov
push
cltd
or
cwtl
imul
stc
pop
sub
or
or
mov
daa
sahf
nop
pandn
and
aad
out
shlb
mov
mov
mov
in
shll
dec
aad
mov
aad
gs
fwait
adc
addr16
movsb
outsl
xor
jecxz
out
dec
idiv
cmpsb
jle
into
cmp
lods
xor
int3
push
xlat
lods
dec
mov
pop
jnp
nop
stc
dec
stos
ja
outsb
ja
jmp
adc
mov
fbld
stos
dec
out
mov
mov
push
lock
jo
mov
loop
aaa
test
ret
cmp
ret
inc
movsb
push
pop
cmp
add
hlt
jno
test
int
and
test
or
pop
mov
subl
arpl
push
imul
mov
or
pop
adc
lret
mov
divb
out
jbe
cmp
push
cmp
add
inc
inc
in
or
mov
xorl
and
jb
jb
hlt
cmp
daa
and
mov
sbb
out
enter
clc
cmpsl
mov
adc
jmp
xchg
cmc
and
imul
inc
outsl
mov
ljmp
jbe
sbb
daa
jo
push
aad
xorb
lret
push
fnstenv
push
mov
sti
clc
or
lret
pop
jae
jecxz
push
pop
test
dec
push
loopne
push
jne
or
fiadds
sti
mov
push
test
lahf
xchg
jne
cmp
sbb
jbe
repz
clc
lcall
fadds
scas
daa
scas
sbb
mov
aam
xchg
jbe
mov
sbb
and
je
or
mov
mov
lods
arpl
bound
adc
lcall
dec
sub
cmp
lahf
mov
sbb
adc
and
add
jnp
les
and
add
pop
xchg
adc
das
pop
jecxz
adc
in
arpl
mov
movsb
mov
push
in
sub
dec
out
jg
std
cmp
pop
mov
test
loope
sbb
inc
sub
das
xor
sub
in
test
jae
cmc
imulb
cmp
cli
icebp
pushf
dec
out
mov
pushf
add
in
mov
cmp
insb
add
or
imul
test
xor
movsl
mov
jb
fistpl
jns,pn
lods
jg
jne
iret
push
xchg
mov
test
xchg
mov
ljmp
pop
subb
aad
test
xor
mov
push
nop
sub
bound
int
pop
mov
test
pop
mov
and
and
pop
sub
cmc
es
in
and
push
fdiv
add
jns
mov
ret
lret
adc
mov
push
insl
xorl
xor
fsubr
shrb
pop
movsb
lret
xchg
xchg
sbb
xchg
fs
in
icebp
imul
pop
stc
inc
mov
mov
mov
dec
mov
stos
mov
inc
orl
popf
mov
or
xchg
pusha
inc
lcall
out
mov
push
lock
inc
adc
jge
insb
mov
js
cmp
mov
xor
mov
imul
pop
icebp
sbb
adc
mov
ret
sbb
popf
out
pop
stos
mov
and
bnd
xor
or
mov
push
or
shlb
sbb
int3
ret
mov
addr16
mov
push
in
out
mov
jmp
sti
jmp
sbb
xchg
push
leave
sbb
mov
pop
int
test
stos
jg
scas
jmp
xchg
add
js
shrl
mov
push
jb
in
mov
imul
mov
inc
and
ret
das
mov
or
push
into
enter
dec
imul
lret
mov
nop
or
add
mov
push
ljmp
call
mov
call
jno
xor
cmp
jge
clc
mov
xor
cmp
icebp
inc
dec
cmpsl
sbb
jmp
sub
call
sub
inc
ds
jge
dec
jno
js
push
mov
into
shll
and
sub
mov
adc
or
test
jl
pop
sub
mov
loope
loop
adc
push
sub
cmp
and
or
sbb
inc
test
adc
test
or
xchg
jbe
fwait
jo
pop
add
sbb
mov
icebp
lock
inc
ds
mov
add
sub
setbe
xor
fwait
test
mov
ljmp
mov
or
aam
xor
hlt
xchg
or
xchg
ss
cmp
push
add
jmp
icebp
stos
xor
mov
cs
mov
fucomp
lock
inc
jl
loope
test
aad
lds
xchg
loopne
lcall
inc
arpl
stos
pusha
jge
movsl
dec
js
inc
stos
fucomi
pop
cmovne
pop
xchg
data16
xor
cltd
or
popf
adc
mov
es
jg
push
mov
mov
pop
jns
adc
data16
xchg
fs
xchg
ss
sbb
lret
jle
push
pop
jecxz
in
sbb
xor
fstpl
inc
lahf
in
mov
stos
xchg
sub
jecxz
sbb
or
mov
rcll
and
pop
ljmp
je
mov
sub
lret
sub
lock
mov
je
cltd
xor
lahf
call
adc
mov
out
pop
movl
inc
insl
mov
push
test
inc
lret
ret
movsb
sbb
jge
jp
cmp
xor
pop
mov
and
inc
and
mov
out
jno
mov
es
add
call
xchg
sbb
test
mov
imul
ds
xor
lret
xchg
add
movsl
movsb
in
xchg
adc
fsubs
mov
js
iret
cs
cmpsl
add
scas
sarl
xchg
jns
test
fisubs
cltd
xchg
pop
repz
es
jns
movsb
ja
xor
das
lock
outsl
vunpckhps
add
adc
jp
aas
jne
out
dec
mov
jnp
mov
das
mov
leave
jb
push
and
jne
sbb
subb
flds
mov
stc
dec
adc
or
xchg
inc
clc
inc
roll
push
or
mov
pop
inc
push
in
cmp
dec
fidivrs
iret
jae
jg
je
dec
out
xor
fwait
lds
mov
add
loopne
sub
fimuls
xchg
push
sub
and
push
lods
ret
xchg
push
sub
dec
bound
stc
ljmp
pop
clc
push
or
in
dec
jle
inc
inc
pop
fsubr
rcrb
hlt
dec
imul
or
sarl
fwait
and
popf
aad
adc
icebp
movsb
in
jecxz
in
xor
mov
mov
js
jo
inc
xchg
lret
push
cmp
xor
mov
jne
xchg
ret
cwtl
xchg
xor
and
sbb
cmp
xor
mov
daa
pusha
jnp
out
mov
aad
insl
mov
or
addr16
scas
out
xchg
mov
or
jl
mov
repz
mov
xor
daa
dec
lock
jae
aas
cmpsl
xor
out
repz
cmp
and
dec
mov
enter
xor
stos
outsl
sub
out
in
and
cmp
inc
in
cmc
sub
movsl
out
out
leave
jge
or
jo
lods
or
imul
sbbb
dec
das
movsb
xor
ret
pop
test
hlt
icebp
cmc
cmp
fistpll
dec
fwait
scas
je
in
cmp
sub
imul
xor
mov
and
pop
fistpl
xchg
cmp
dec
xchg
stos
xor
push
adc
mov
stos
scas
xor
inc
inc
jae
or
xchg
mov
vmovss
enter
mov
cli
sbb
fs
sbb
dec
sbb
lret
andb
repnz
sbb
aaa
dec
imul
orb
mov
jp
adc
clc
js
add
into
orb
adc
cmp
push
push
mov
sub
xor
sbb
ja
test
lcall
aas
mov
sub
aam
dec
sbb
lods
in
pop
cwtl
adc
xchg
pop
int3
adc
pop
jns
testb
je
inc
lret
loopne
inc
popa
cmp
int
lret
icebp
lcall
pop
or
lret
hlt
mov
fidivrs
jl
jecxz
daa
pop
ja
jge
mov
xorb
call
xchg
xchg
outsl
dec
sub
mov
in
jl
popa
cmp
pop
stc
in
jmp
nop
addb
stc
in
outsb
xchg
jecxz
mov
nop
adc
jnp
pop
cltd
aam
lds
xlat
lret
in
push
dec
jle
or
mul
or
dec
cltd
cmpl
mov
loop
mov
les
inc
ret
fnstcw
pop
mov
jmp
loopne
dec
jae
cmp
sbb
cli
xor
mov
xchg
cmpsb
mov
dec
lock
sub
and
aas
xchg
mov
fucomp
dec
mov
test
and
fbld
xlat
test
inc
jo
push
ds
jo
xchg
bound
mov
sub
jl
sbb
mov
in
ja
cld
xor
lock
cmp
aaa
dec
cmp
aad
ja
negl
loope
in
push
lods
rcrl
aad
cmp
dec
or
adcb
mulb
inc
jmp
fwait
out
iret
dec
inc
push
add
out
pusha
in
fdivrs
pop
xor
testl
mov
mov
pop
mov
pop
jb
inc
aad
std
jne
fs
call
out
add
pushl
into
or
sbb
js
addr16
mov
or
or
jmp
orl
mov
int3
inc
inc
sti
faddp
and
or
test
pop
mov
addr16
mov
xchg
nop
popf
test
dec
into
mov
xor
lret
fnstsw
sbb
ds
shll
dec
leave
or
sbb
xchg
or
and
ja
std
scas
repnz
pop
cld
aad
jecxz
repnz
push
xlat
cs
into
dec
or
pop
cmp
mov
jne
scas
pop
int
test
lcall
mov
xchg
dec
adc
test
fimuls
lds
repnz
in
mov
xchg
shl
mov
in
mov
sbb
call
mov
cmp
mov
pop
pop
cmp
adc
xchg
iret
std
cmp
push
lahf
mov
push
pop
js
into
jmp
push
aas
cmp
dec
mov
jmp
fstpt
adc
in
out
loop
push
outsl
pop
test
fstpt
mov
fs
mov
rolb
mov
pushf
push
sub
fmull
jnp
test
in
mov
xor
xchg
lea
inc
adc
hlt
sbb
stos
or
add
jle
popf
int
loope
xchg
xchg
cld
sar
mov
cmp
and
mov
pop
and
das
jg
cs
xchg
xor
jp
and
adc
and
dec
jge
stc
test
push
rorl
enter
xchg
push
dec
jnp
nop
xchg
mov
dec
mov
jno
add
nop
mov
jmp
inc
push
outsb
inc
cltd
add
orb
mov
push
push
lods
das
insb
popa
mov
cmpb
mov
and
cmp
std
fs
inc
outsl
gs
addr16
mov
mov
loope
or
stos
iret
sahf
lods
push
and
sub
arpl
add
xor
adc
push
iret
jne
jo
mov
ss
popf
jne
test
pushf
ret
and
maxps
add
gs
and
cmp
xor
fstps
sbb
jb
add
loop
aas
jmp
xchg
stos
xchg
mov
mov
dec
les
xorb
int3
push
addr16
aaa
jmp
lds
add
ret
pop
sub
sbb
dec
imul
sti
pop
shrb
popa
mov
in
sbb
mov
sti
movsb
xlat
xchg
adc
dec
adc
ror
out
dec
jno
cltd
sub
outsb
mov
lcall
sub
test
xchg
aas
repz
out
adc
pop
pop
aad
scas
mov
cmp
sbb
or
test
shrb
mov
shll
xchg
out
mov
jp
mov
addr16
aas
lods
jecxz
sbb
shlb
in
adc
mov
mov
pop
adc
out
repz
xchg
adcb
mov
lahf
mov
arpl
dec
lcall
mov
and
sub
movsl
mov
mov
add
sub
dec
lahf
gs
mov
arpl
push
neg
scas
pop
test
add
mov
aam
mov
scas
mov
mov
in
mov
lret
sbb
mov
gs
dec
rcr
jns
rcrl
mov
push
leave
popf
dec
jmp
jne
mov
sbb
out
push
push
leave
jl
lret
loopne
inc
pop
aas
ss
jl
push
add
stc
subb
push
add
bound
lods
imul
fdivrs
xchg
sub
push
ja
into
mov
xlat
sbb
or
push
xchg
xor
add
lock
or
mov
movsl
in
ret
icebp
mov
sarb
push
cmp
adc
lcall
cmpsl
loope
xchg
xchg
cmp
pop
mov
ret
cmp
addr16
ljmp
in
rorb
pop
cld
dec
clc
into
loope
pop
pop
dec
fisubs
sub
pushf
adc
inc
pop
jl
in
pop
sub
inc
out
inc
push
cmp
dec
cmpsb
loop
sbb
jne
mov
or
sub
jmp
loope
jnp
std
adc
sub
inc
je
daa
cltd
es
cs
add
scas
fldl
je
testl
movsl
jnp
cmp
fs
push
ds
inc
and
push
jb
jle
in
cmp
pop
and
jge
mov
aas
sahf
daa
cmp
mov
mov
lahf
sbb
int3
cwtl
decl
clc
sbb
cwtl
cmp
pushf
dec
pop
rorb
xor
imul
stc
ficomps
mov
arpl
out
imul
stos
cmp
inc
adc
mov
addr16
iret
lahf
sbb
inc
jp
xor
dec
sbb
jns
movb
cmp
lahf
xchg
xor
cmpsb
std
jl
sbb
iret
mov
mov
loop
jb
push
call
pushl
rorb
mov
xchg
popa
or
cmp
out
jge
daa
out
scas
or
adc
and
jns
dec
repnz
out
fimuls
sub
andl
imul
jae
insl
adc
in
pop
or
push
mov
mov
fcmovnbe
jle
xchg
xchg
sbb
lret
sub
adc
adc
cmp
repnz
enter
fsts
pop
xchg
sub
mov
bound
adc
dec
shlb
rorb
jl
pusha
clc
inc
je
frstors
cmp
cmp
add
mov
mov
clc
fdivl
hlt
in
lcall
jne
pop
inc
loop
popa
fistps
xor
inc
icebp
pop
xchg
pushf
jg
ja
mov
inc
dec
in
xor
adc
shlb
cld
js
jle
test
fimull
pop
movsl
lret
xchg
or
lods
shrl
and
ror
dec
jne
jg
add
lods
fiadds
sub
data16
jmp
scas
and
hlt
dec
mov
or
lods
xor
or
in
out
fimull
ss
xchg
sub
jno
test
pop
cmc
push
into
shll
jmp
xchg
in
sub
dec
add
mov
sbb
adc
sbb
loope
cmp
loopne
or
mov
mov
jnp
add
jno
lahf
dec
jmp
dec
lahf
dec
iret
mov
call
xchg
push
sbb
xor
mov
xchg
test
inc
adc
ret
push
sub
rep
arpl
inc
lret
add
mov
pop
dec
std
fidivrs
sbb
mov
sub
icebp
mov
adc
in
out
push
ja
cltd
nop
jne
sbb
int3
xchg
test
ret
cwtl
mov
dec
and
inc
inc
add
iret
call
inc
rcll
mov
mov
push
sbb
sub
sbb
leave
fmuls
push
or
push
mov
push
popf
or
shrl
add
je
inc
imul
fistps
int3
sbb
cmp
jno
gs
in
aam
add
pop
lcall
dec
jge
sarl
jecxz
and
fnstsw
rclb
mov
lahf
mov
add
movsb
ret
adc
popf
sbb
dec
loop
lods
and
cld
xor
fldt
ja
dec
cmc
pop
inc
ret
stos
sbb
mov
fwait
mov
out
xor
inc
in
jle
push
pop
pop
test
mov
sub
xchg
addr16
in
or
inc
jge
lock
jae
mov
jecxz
push
jp
int3
insb
lcall
pushf
mov
fistpll
xchg
jne
jp
xor
jmp
push
push
mov
jbe
clc
loope
les
add
dec
xor
push
cs
add
fcmovu
inc
ljmp
lcall
mov
and
inc
pop
movsb
sub
mov
mov
jl
mov
lock
call
cmpsl
xor
jnp
push
orl
sar
and
cwtl
movsl
cmpsl
pop
push
lods
loopne
rolb
in
inc
adc
push
hlt
push
mov
negl
lods
inc
and
dec
cwtl
adc
fisttps
shr
cmpsb
in
push
std
and
mov
imul
negl
jecxz
adcl
shll
pushf
push
jg
xor
ss
mov
jno
stos
das
insb
rcl
sar
imul
popl
jb
dec
xor
jmp
call
inc
icebp
lret
mov
xchg
push
xor
and
jl
mov
loopne
inc
and
cmc
dec
cmp
xchg
mov
daa
scas
xor
mov
add
cld
movsb
scas
icebp
mov
ds
push
enter
jns
xchg
adc
rcll
cmp
push
mov
sub
mov
popf
or
data16
pop
js
pushf
loop
call
rorb
adc
pop
inc
repz
push
repnz
and
dec
lcall
shll
sub
addb
mov
cld
mov
ljmp
cmp
mov
adc
cmpsb
ss
push
pushf
add
add
mov
fcoms
dec
xchg
mov
pop
outsb
xor
push
icebp
pop
shll
lods
fldcw
mov
jae
mov
neg
or
inc
daa
sbb
cs
mov
repnz
out
das
xor
scas
leave
cmp
test
push
adc
push
dec
adcb
jbe
sbb
js
xchg
and
jae
mov
movsb
sbb
incl
loope
adc
xor
and
jns
cs
or
arpl
lahf
lock
sub
movsb
cmc
mov
mov
mov
pop
or
popa
mov
ljmp
push
inc
sbb
ljmp
adc
test
outsl
and
stc
xor
loop
pop
stos
loop
xchg
ret
jp
leave
jnp
adc
nop
dec
movsb
mov
repz
into
insb
jnp
inc
inc
stos
dec
push
mov
pop
out
jns
sbb
lcall
mov
or
push
aad
iret
xchg
push
enter
xlat
lock
int3
dec
gs
addr16
out
lahf
or
sbbl
es
adc
ds
sbb
cs
cmp
jecxz
inc
movsb
gs
pop
aad
xor
das
ds
xor
mov
clc
dec
mov
mov
decb
stos
pop
aad
jp
and
jo
dec
shlb
mov
cs
movsl
testb
or
je
inc
jp
push
das
pop
fsts
xchg
jmp
clc
mov
sub
dec
push
pusha
mov
lods
cmp
xor
and
cmp
push
xor
dec
inc
lret
loope
sarb
addl
test
push
lods
push
cmp
loop
push
loope
out
leave
cmpsb
mov
adc
cmc
add
mov
cltd
sub
sbb
cmp
ss
int
test
scas
cmp
mov
das
cmp
dec
in
cmp
jb
out
cli
add
lds
xchg
dec
mov
jae
mov
mov
xchg
jle
jg
cld
out
lret
aas
pop
mov
sub
pop
in
insb
aad
jbe
leave
ret
insb
sub
inc
lea
int
sbb
sbbl
insl
aaa
div
jb
scas
pop
into
cmp
sarb
add
cli
mov
mov
fadds
cmp
inc
xchg
xchg
repz
out
xchg
and
arpl
sbb
lcall
int3
frstor
jae
jg,pn
xlat
insl
fldlg2
xor
fidivrl
mov
mov
xchg
add
xchg
fnstsw
in
fcomps
lock
jecxz
adc
bound
and
popa
adc
add
pop
dec
mov
leave
mov
inc
jo
cmc
fsts
add
jns
ficomps
push
adc
push
mov
inc
aad
pusha
in
mov
pop
fwait
mov
xchg
add
iret
sbb
jae
cmpsb
aad
jg
push
xor
outsb
cmpsl
stos
push
bswap
jge
push
outsb
sub
dec
or
add
hlt
inc
fsubrl
add
sbbl
lahf
shlb
mov
iret
add
jmp
cld
xor
fwait
cmp
dec
sub
out
jle
and
push
out
cwtl
shll
pop
jle
ja
aas
test
jae
and
daa
mov
cltd
bound
and
rcll
fwait
popf
sbb
popf
cld
or
cltd
pop
insb
js
nop
xchg
arpl
jmp
les
sbb
mov
add
fbstp
pop
sub
inc
inc
pushf
jl
mov
cld
cmp
dec
cmp
add
mov
mov
inc
mov
xchg
adc
sub
jbe
push
lock
fisttps
pushf
sub
stc
scas
aas
mov
call
leave
mov
xchg
dec
mov
jl
lret
sbb
incb
mov
sub
cwtl
in
jbe
dec
in
xor
sbb
movsl
movsl
or
inc
mov
and
cmp
adc
inc
adc
sbb
jne
sbb
and
xor
sbb
pop
movsb
cmpsl
ret
outsl
inc
lcall
cmpsl
es
mulb
jo
mov
push
addr16
mov
push
and
fbstp
arpl
or
cmpsl
jp
sub
mov
push
sbb
sahf
inc
lcall
call
mov
fdivrs
cmp
pop
rorb
fucomip
sahf
icebp
jg
testb
test
mov
int
bound
push
push
xor
inc
xlat
jbe
inc
push
or
pop
das
pop
add
and
andl
ret
inc
sbb
and
aad
jae
sub
xor
push
lods
mov
mov
cs
movb
jg
jp
dec
movsb
rclb
jne
xor
dec
aad
pop
mov
jae
sub
std
mov
out
nop
fwait
imul
fwait
xchg
test
push
daa
loope
pop
jl
push
xchg
pushf
gs
rcrb
mov
cli
test
rcrb
pop
or
adc
and
xchg
mov
cs
cmc
arpl
inc
ljmp
mov
or
xlat
mov
outsb
xchg
fst
test
adc
scas
sub
mov
mov
sbb
or
and
call
xchg
stos
dec
sbbl
push
ror
xor
pop
cmp
lcall
mov
repnz
stos
testb
sbb
mov
jbe
inc
aas
lret
jae
lods
fwait
and
iret
ficoms
xchg
je
push
xchg
fildll
mov
punpckhwd
jb
push
cs
es
adcl
sub
into
mov
out
adc
jecxz
call
test
in
sub
jne
inc
aas
jb
add
push
mov
outsl
add
icebp
sub
push
adc
adc
fistl
xlat
lret
push
cmp
add
cmp
hlt
xchg
icebp
cmp
ret
in
push
dec
add
in
add
pop
pushf
inc
fbld
or
sub
ret
mov
add
push
ljmp
hlt
sahf
pop
movsl
pop
push
gs
outsb
sbb
test
inc
xchg
add
out
mov
pop
adc
fs
out
pop
outsl
shll
cmp
push
fisubrl
shr
cmpsl
pop
sti
and
fidivrl
aam
push
inc
out
sbb
mov
add
ja
mov
mov
mov
jle
adc
mov
mov
dec
popf
inc
add
aaa
inc
aad
mov
data16
dec
int3
fwait
shll
inc
mov
popf
xor
sbb
and
add
dec
out
stc
mov
fucomip
mov
les
push
popa
jmp
dec
mov
pop
sub
mov
mov
push
outsb
lahf
pop
jmp
testl
xchg
outsl
xor
adc
stos
xor
push
push
sti
out
mov
mov
repnz
mov
sbb
pushf
js
or
xor
sub
push
jl
mov
ja
out
shl
dec
or
xchg
jno
sar
inc
jg
incb
sbb
mov
and
cmpsl
test
aas
ds
lods
jge
xchg
std
xchg
dec
jne
sarb
push
arpl
cmp
int
insl
adc
cmp
mov
xor
fsubs
lock
aas
movsb
dec
popa
int3
push
repnz
mov
push
sti
push
aam
cmc
inc
or
jmp
rcr
cli
cmpsb
shll
test
ljmp
mov
imul
jb
push
or
push
push
fwait
xchg
int3
xchg
xchg
jle
imul
push
cmpsb
stc
iret
loope
into
lret
dec
jb
xor
and
cmpsb
and
dec
jns
xlat
out
push
dec
movhps
cli
xchg
pop
xchg
mov
hlt
push
cmp
mov
stc
mov
pop
add
pusha
jmp
fdivp
test
mov
cwtl
jmp
jecxz
ss
lret
ret
cld
sub
inc
fimuls
xchg
mov
loop
sarl
xchg
mov
shrb
daa
loope
or
jo
jae
pop
mov
xor
jbe
rdmsr
or
inc
rcrb
cs
scas
sub
mov
js
inc
out
out
call
mov
test
hlt
dec
jp
pop
mov
in
mov
ss
sub
inc
aaa
roll
xchg
push
lods
enter
pop
jg
sbb
mov
int3
cld
push
mov
adc
xchg
dec
fs
int
fldenv
jnp
clc
pop
les
mov
inc
add
out
or
and
pop
xchg
std
pop
stos
xchg
mov
arpl
add
xlat
pop
pop
adc
repz
fimuls
stc
lock
int3
out
les
outsl
add
lcall
cli
xchg
mov
repz
cmp
popf
add
push
mov
std
scas
sub
mov
outsl
mov
stos
and
cmpsl
jle
scas
lds
jecxz
shlb
rolb
dec
repz
jb
jb
or
mull
mov
sbb
jmp
fldt
hlt
jb
cmp
cltd
jns
push
stos
arpl
inc
jb
mov
add
das
mov
xor
mov
inc
lret
inc
fwait
shrb
rcrl
pop
out
inc
mov
xor
pop
lods
stc
lods
lahf
xor
xor
xchg
inc
mov
add
pop
notb
and
scas
std
xchg
dec
js
pushf
push
xlat
xor
pop
frstor
test
shrl
enter
sub
ljmp
repnz
xor
hlt
pop
inc
loope
push
xor
inc
popa
mov
lret
adc
and
sbb
sub
jmp
add
test
cmc
mov
cmp
push
push
movsb
jle
sbb
repz
test
cmp
pop
in
aas
les
xor
fmuls
stos
and
ja
and
aad
rclb
ljmp
es
jb
fisubrl
test
inc
push
mov
pop
lsl
and
daa
stos
ret
jno
inc
cld
sub
dec
cli
rcll
adcl
imul
sahf
sub
mov
xor
mov
push
sbb
sbb
jns
xchg
push
jmp
dec
xor
mov
xchg
das
push
dec
and
mov
push
push
adc
addr16
hlt
inc
sbb
xchg
fbstp
xor
fiaddl
push
sbb
cld
scas
xor
loopne
cld
scas
clc
not
push
pop
rorl
lea
loopne
rol
sbb
mov
pop
sub
aas
stos
mov
dec
mov
ja
mov
pop
out
jl
jne
push
hlt
mov
xor
jge
pop
ret
jnp
adc
jnp
jle
ss
mov
sub
pop
inc
popa
mov
cmc
movsl
aaa
rcl
mov
add
cmp
xor
xchg
dec
mov
fisttpl
rorl
push
testl
mov
xchg
fiaddl
and
inc
mov
adc
jno
push
mov
sub
ja
mov
xchg
ja
cmp
mov
pushl
dec
and
sub
loop
scas
mov
dec
adc
out
jno
pop
cwtl
dec
out
pop
and
xor
sbbl
aam
cmp
inc
and
sbb
push
mov
data16
mov
fwait
cli
pop
clc
icebp
jg
ljmp
adc
add
xchg
std
sar
int
rep
loopne
xchg
inc
fnstcw
push
sub
clc
sbbl
ljmp
dec
xchg
add
shll
adc
sbb
test
xchg
cmp
push
inc
sub
adc
xor
les
outsb
test
and
mov
fdivrl
aaa
in
mov
cmpsl
fldl
push
sahf
imul
or
sub
cmp
out
dec
jb
outsl
js
mov
sahf
insl
pushf
or
xchg
mov
pop
popa
std
stc
mov
mov
xchg
aad
push
jge
aaa
inc
and
outsl
mov
test
cmp
mov
mov
sti
jnp
cmp
pop
hlt
cwtl
outsl
or
loopne
dec
sarl
cld
adc
inc
cmc
clc
sbb
aad
pop
add
shll
push
fwait
cs
movsl
adc
int
jmp
sub
xchg
xchg
cli
sbb
xchg
test
loop
cmp
push
in
inc
sahf
int3
inc
movsb
or
xor
mov
push
cmp
lds
cmova
fwait
add
push
jge
cmp
inc
fcmovu
ficomps
sub
fwait
dec
cmp
repnz
out
xchg
or
sub
stc
in
cmp
dec
push
rcrl
jb
scas
mov
mov
jmp
dec
adc
push
iret
mov
xlat
les
incb
cmp
js
mov
int3
lods
daa
pop
daa
lret
cmp
sbb
cwtl
fsubl
fstl
pop
stos
cs
or
shlb
popf
mov
cmpsb
and
testl
mov
inc
jo
popa
data16
adcb
push
inc
jecxz
mov
dec
mov
test
jecxz
and
inc
mov
lret
push
jmp
push
out
sub
int
xchg
add
mov
pop
jmp
xor
jae
adc
sub
push
scas
push
mov
sub
pushf
outsl
lock
sbb
cli
sub
xchg
lock
pop
mov
movsl
inc
cmp
imul
xor
lods
and
xchg
daa
cwtl
aam
in
mov
arpl
mov
pop
test
fcoml
lds
hlt
stos
mov
push
sbb
aam
movsb
aad
bound
movsb
aam
cs
adc
pop
inc
mov
mov
or
and
add
xchg
incl
or
sbb
mov
in
xor
negl
pop
sub
and
loope
test
xchg
cli
cli
and
push
pop
into
xlat
stos
xchg
sub
scas
pop
scas
js
les
or
movw
mov
fs
sti
or
gs
es
aam
cmp
mov
dec
ds
popa
sub
lahf
sahf
adcl
cwtl
cmp
dec
and
xor
fiaddl
jnp
aaa
pop
test
cmp
je
lret
mov
aaa
add
push
out
pop
mov
mov
sbb
insb
or
ljmp
adc
or
and
xor
push
imul
push
cltd
cmp
arpl
rclb
pop
push
fdivl
sub
nop
inc
inc
popa
cmp
nop
insb
leave
mov
out
xchg
mov
xchg
popf
sbbl
sub
lock
mov
jle
shlb
sub
push
add
sti
lds
adc
lods
adc
les
stos
divb
loopne
mov
pop
dec
or
jle
xor
and
push
cmp
sbb
mov
jle
sbb
jl
ror
jg
cwtl
cwtl
cwtl
xorb
lcall
outsl
sbb
popf
aad
enter
ficoml
cmp
repnz
outsl
dec
scas
loope
insl
fsubrs
mov
mov
fst
mov
mov
out
fimull
pop
icebp
mov
add
scas
loop
adc
out
adc
ds
mov
mov
adc
in
and
pop
add
push
insl
and
lods
dec
aad
addl
sbb
ret
ds
cmpsb
cld
dec
sub
adc
insb
adc
movsb
inc
inc
sbb
xlat
xor
xor
gs
std
test
test
aas
xchg
mov
popl
ret
xor
xor
push
pop
popa
mov
cli
xor
or
outsb
sbbl
cmp
stc
xchg
stos
icebp
xorb
inc
xor
mov
fbld
mov
imul
roll
aas
mov
lods
sti
stos
orl
mov
or
xor
xorl
sub
push
xchg
imull
int
adc
shl
outsl
imul
fcoml
std
or
mov
inc
jo
scas
cwtl
imull
out
imul
pushf
mov
pop
push
fiaddl
cmp
arpl
icebp
pop
dec
pop
xchg
mov
cmp
sbb
inc
loop
mov
dec
jne
add
sub
addr16
ficoml
cmp
and
pop
cld
lods
mov
sub
aaa
push
ficoml
pusha
cmpb
fbstp
sbb
imull
lret
inc
out
jo
dec
inc
cmp
leave
stc
bound
or
cmovb
fstl
mov
cmp
or
stos
cmp
jo
dec
in
cwtl
lcall
inc
test
or
dec
lock
sub
mov
daa
test
mov
adc
dec
sti
popf
mov
shrb
adc
sub
mov
mov
iret
les
mov
je
aas
jp
jecxz
pop
in
sub
push
jae
add
adc
lret
inc
imul
lret
or
xchg
fists
stos
nop
pop
sbb
shl
data16
cmpsb
inc
pop
aad
dec
and
pop
pushf
dec
sub
mov
jno
cmp
add
dec
test
mov
les
push
notl
popf
cmp
xchg
frstor
lods
adc
mov
fwait
cmpb
orb
sbb
xor
in
dec
and
inc
xor
rol
push
push
fbld
dec
test
push
insb
xchg
lds
inc
out
mov
or
fwait
mov
mov
outsb
mov
sbb
jae
add
ret
add
das
fcom
aad
cltd
jecxz
add
sub
cwtl
adc
lahf
popa
mov
es
jmp
add
add
push
pop
out
test
push
fwait
inc
rorl
jo
and
jnp
or
cli
pop
and
or
subb
mov
outsl
cmc
cmp
mov
cld
sub
pop
test
enter
or
scas
mov
sub
mov
shr
mov
inc
hlt
int
aas
aam
adcb
aad
mov
aam
in
shl
dec
adc
adc
leave
jle
test
jne
cmc
sub
xchg
je
mov
out
sub
pushf
mov
xor
outsb
flds
in
jmp
arpl
int
sub
test
popf
xchg
sub
loope
pop
popf
dec
inc
imul
adcb
les
xchg
jo
pop
in
sbb
push
mov
or
cmpsb
cmp
aas
movl
ret
aam
ficoms
lea
xor
sub
add
push
inc
fs
jne
mov
cmp
xor
cli
xchg
rep
mov
imul
enter
ljmp
mov
jmp
out
mov
push
inc
add
fs
xor
pop
shrb
inc
ja
gs
jge
xor
lcall
out
pop
testl
fcoms
pop
or
sbb
dec
popa
pop
lods
sbb
stos
sub
mov
lret
push
push
test
mov
sbb
int3
add
or
xlat
sub
imul
aam
aaa
jno
mov
jle
jb
xchg
fmuls
sahf
rorb
xchg
jnp
loope
lea
out
jbe
out
aaa
xchg
jns
sub
es
fldcw
push
mov
cltd
aam
or
or
inc
dec
in
cli
mov
add
idivl
test
test
and
xlat
xchg
lea
or
cmp
xlat
jo
add
lods
fwait
push
jnp
and
fiadds
mov
hlt
cmp
std
mov
jp
int3
lods
js
shrl
bound
lea
jecxz
dec
in
js
fwait
imul
aam
popf
jle
push
or
xchg
inc
mov
jo
gs
sub
dec
add
push
mov
mov
jmp
xchg
stos
cwtl
insl
loope
data16
pop
lods
pop
mov
test
pop
ret
popf
lock
mov
add
adc
or
cmp
cli
test
pop
mov
je
inc
insl
fidivrl
jns
neg
scas
fbstp
add
mov
int
adc
test
inc
lcall
into
xchg
stos
jecxz
inc
movl
push
lods
lahf
lods
insl
sahf
iret
sbb
imul
push
lea
gs
jl
pop
dec
mov
leave
in
sub
add
mov
mov
dec
cmp
or
les
cltd
mov
dec
xor
cmpsb
and
jo
dec
cmp
pop
pop
into
add
sbb
mov
rclb
xchg
jmp
ljmp
inc
daa
sub
sbb
sbb
xor
test
pop
ja
movl
or
inc
aad
rorb
test
adc
test
mov
mov
loop
jl
push
out
dec
xchg
mov
pop
scas
loop
jbe
xchg
scas
and
outsb
mov
ja
outsb
xchg
inc
cltd
fwait
xchg
mov
mov
dec
mov
leave
inc
push
out
es
cs
mov
adc
fwait
in
xchg
shrl
outsb
add
mov
pop
xchg
add
or
jl,pt
mov
shlb
icebp
mov
lea
cmp
sbb
mov
mov
inc
dec
add
gs
call
cltd
xor
imul
les
movsb
out
dec
mov
mov
cltd
and
in
pop
push
aad
lcall
mov
jecxz
mov
push
insb
fbstp
mov
mov
lock
fisttpll
pop
in
dec
fbld
sub
cmpsb
lret
push
rcl
dec
fcmovnu
cltd
lods
or
sub
lock
fcmovb
cltd
mov
fldcw
push
cmpsb
les
adc
add
imul
cmpsl
es
xchg
mov
dec
decb
pop
popa
jb
xchg
push
sub
test
lret
popf
pop
pop
jle
loop
pushl
push
jns
mov
movsb
xchg
cld
sbb
jae
adc
cmp
mov
pop
insb
repz
sub
sbb
out
shlb
in
mov
sub
ror
or
mov
ljmp
lret
push
rcrl
scas
por
push
cmp
je
push
sub
gs
lret
xor
inc
stos
sub
jmp
orb
push
jno
scas
mov
adc
sub
and
js
imul
xor
dec
enter
pop
pop
jg
push
leave
and
ja
or
jne,pn
adc
mov
daa
xchg
movsl
adc
sahf
xchg
and
movsb
test
adc
popf
mov
addr16
fists
call
leave
js
shrb
push
shlb
test
mov
adc
fsubl
or
add
std
loopne
and
add
sbb
mov
mov
call
and
fdivrs
cmp
or
std
mov
lea
mov
pop
xchg
jge
mov
movsl
add
call
push
xor
loop
mov
loop
enter
into
jg
dec
lea
dec
pop
add
loopne
ljmp
and
cmp
and
add
cmp
rolb
xor
or
dec
pop
sbb
cmp
push
stc
mov
js
into
les
shrb
xchg
mov
fdivrs
loope
out
jns
cmpsb
stos
cmp
and
sbb
data16
xchg
xor
cmc
test
cmp
std
scas
call
or
loope
sahf
pusha
sbb
out
les
jns
cmpsl
fstps
data16
jbe
movsl
out
pop
jo
cmc
xchg
pop
faddl
movb
lods
sub
pop
add
or
lods
in
push
test
fs
in
xchg
pushf
stos
pop
scas
lahf
jmp
push
push
xor
fcmovbe
addr16
mov
xchg
xor
ja
push
and
mul
xor
call
jns,pt
lea
xor
mov
dec
mov
jno
mov
pushl
test
dec
pusha
dec
adc
inc
push
cli
fsubr
push
mov
sub
add
mov
xchg
xor
cld
push
and
int3
inc
add
pop
and
mov
jo
lahf
or
rorb
push
rcrl
xchg
shr
gs
fbld
jo
jo
out
repz
pushf
adc
mov
std
rorb
and
iret
inc
adc
mull
and
movsb
movb
fcmovnb
cmp
push
cmp
cmpl
mov
xor
out
pop
cmp
pop
xchg
popa
mov
add
push
dec
dec
out
dec
mov
scas
cmpsl
push
pushf
cs
popa
imul
pop
aad
mov
enter
int3
pop
add
dec
call
mov
iret
subb
test
pushf
xchg
add
outsb
gs
out
ficomps
push
fs
push
aas
pop
inc
inc
das
mov
push
pop
imul
xlat
js
lret
push
cmp
out
jae
sub
cmp
clc
imul
pusha
cs
cltd
push
test
sbb
mov
inc
cli
push
in
and
jne
in
xor
loope
push
scas
das
ja
outsb
adc
sahf
sub
lahf
pop
int3
sbb
inc
pop
add
adc
enter
sti
or
aam
sbb
ds
pop
mov
push
pop
sbb
rol
mov
faddl
fcomip
jo
in
rol
sbb
sbb
ret
jnp
fwait
mov
fisubl
jne
inc
lock
stc
inc
adc
popf
fists
jno
inc
mov
add
or
pop
cs
lea
cld
mov
add
cmp
mov
xchg
adc
jmp
lods
xor
popf
mov
jbe
xor
pop
inc
and
mov
fisubrl
inc
lahf
notl
sti
gs
dec
sbb
sub
dec
pop
fsubrl
jp
xchg
xchg
cmp
xchg
cld
scas
lret
add
int
mov
je
jne
sbb
mov
pop
push
mov
stc
or
pop
sub
leave
mov
insl
inc
rcrb
push
cld
test
sub
mov
jmp
xchg
scas
dec
mov
mov
fldl
mov
movsl
int3
cld
repz
lret
push
jg
add
cmc
sub
pop
pushf
leave
mov
xchg
add
or
aam
addr16
enter
fst
cmp
ror
jbe
xor
int
fstpt
in
or
push
jo
stos
ljmp
sbb
inc
cwtl
into
push
mov
addb
addr16
add
js
inc
adc
mov
xor
and
outsl
push
or
bound
adc
mov
push
inc
jbe
mov
mov
sbb
sub
movsb
mov
shl
xchg
dec
cmp
cmp
push
mov
subl
jb
xor
add
popa
out
push
jno
add
stos
sub
push
xor
jle
mov
in
xchg
out
sbb
fdiv
aad
dec
sbb
data16
xor
pop
mov
sahf
jo
xchg
mov
dec
out
inc
mov
bound
repnz
imul
sub
xchg
nop
int3
dec
jle
lcall
jmp
stos
pop
add
js,pt
xchg
dec
lds
sbbb
in
jne
jmp
and
hlt
add
dec
sbb
pusha
ficoml
push
push
ret
iret
jle
dec
sbbb
arpl
and
cmp
fucom
inc
sub
pop
in
add
sti
popa
lock
mov
adc
ljmp
call
push
scas
lcall
and
pushf
mov
sub
ljmp
xchg
xchg
popl
jg
inc
xchg
and
or
lcall
pop
jmp
jnp
sub
and
stc
sbbl
xchg
xorb
mov
mov
push
mov
imul
sub
pushl
aam
push
push
cmpsl
or
sub
xor
xor
sbb
cmp
and
adc
hlt
mov
xor
add
aas
ret
mov
scas
ljmp
jmp
pop
cmpsl
jle
rorb
xlat
daa
lock
cltd
jno
dec
jecxz
mulb
adc
fidivrs
repz
ret
adc
lods
imul
add
cwtl
hlt
rol
inc
jne
cmp
mov
inc
cmp
pop
or
aad
ror
pop
out
mov
popa
rcrb
into
sbb
popa
xchg
movsl
int3
mov
mov
xchg
cmp
xor
negb
test
fidivrs
inc
dec
push
dec
mov
push
pushf
daa
lret
jmp
push
movsl
fs
dec
pop
loop
adc
inc
xchg
xor
sbb
sahf
lods
enter
shl
push
rorb
sar
addr16
cld
mov
pop
jnp
outsb
dec
sarb
lea
pop
movsl
xchg
mov
pop
mov
ret
test
mov
icebp
pop
dec
mov
mov
pop
aad
loopne
jge
mov
sbb
aad
and
fstps
mov
sbb
cmp
push
loope
or
fidivl
popf
pop
mov
xchg
jle
movsb
or
das
out
sahf
push
jge
test
add
sub
sub
fimull
inc
mov
adc
jmp
movsb
cs
add
or
mov
sbb
cltd
or
dec
out
fisttpll
inc
cmp
mov
xor
adc
or
clc
imul
xor
push
push
sarl
in
add
xchg
mov
or
add
and
fdivl
inc
addr16
mov
inc
push
les
ss
inc
sbb
push
test
es
popa
and
ficoms
jno
pushf
mov
pop
mov
add
xchg
insb
cmp
cli
cmpsb
lea
lods
xor
dec
jbe
imul
lahf
test
pusha
dec
xor
popa
pop
enter
aaa
daa
fisttpl
inc
sub
loope
xor
pop
enter
lock
mov
fbld
loopne
enter
popa
scas
xor
jmp
jbe
cmp
leave
mov
rcr
mov
fcom
dec
pop
pop
orl
adc
out
decb
div
fsubrl
adc
jae
mov
cmpsl
adc
mov
jbe
add
push
dec
cmp
xchg
lret
stos
adc
movsb
daa
add
pop
mov
push
hlt
jge
stos
imul
iret
stos
jle
outsl
xchg
and
or
stos
pop
mov
jge
dec
mov
mov
bswap
rclb
sbb
mov
or
clc
shll
loope
sub
fucomip
bound
or
mov
cli
jbe
push
xchg
pop
mov
je
aam
add
or
bound
out
jle
cmp
scas
mov
ss
inc
mov
fimuls
sbbb
cmp
std
pushl
aas
jbe
enter
xchg
cmp
cmpsl
mov
adc
pop
cmpsl
leave
mov
add
icebp
scas
popl
or
flds
xchg
scas
sbb
push
or
je
jns
cwtl
or
push
scas
lods
and
bound
jle
mov
hlt
fstpl
inc
inc
mov
fsubs
or
daa
inc
movsl
insb
mov
ljmp
insb
dec
or
dec
sub
xor
add
pop
mov
cmpsl
mov
mov
movsb
xchg
jle
pop
cmp
fs
sbb
pop
je
call
les
divl
bound
mov
jb
imul
pusha
dec
rclb
cmp
add
xchg
mov
add
out
popl
adc
or
out
xchg
shlb
leave
cmpb
mov
mov
mov
iret
das
or
sbbl
in
sbb
cli
push
mov
int3
test
loope
mov
or
std
jns
mov
xor
dec
ljmp
lahf
jecxz
adc
xchg
out
stos
mov
outsb
repz
pop
movsb
popa
add
and
rcrl
jno
cwtl
popa
inc
and
lret
shrl
js
fwait
negl
es
test
xchg
mov
outsb
push
cwtl
js
inc
add
subb
pop
add
adc
stos
lods
addl
mov
adc
sbb
sbb
out
imul
call
pusha
fwait
in
into
or
jb
mov
mov
mov
out
jno
and
inc
xchg
mov
or
mov
call
sub
fstpl
in
push
push
movsl
sti
jge
ds
mov
test
addr16
or
sub
xchg
stos
leave
incb
pop
fsubrl
lret
scas
or
rcll
mov
dec
clc
outsb
in
cmp
loop
mov
mov
scas
and
sbb
adc
inc
or
in
int
call
jmp
jnp
popa
and
xor
je
mov
xchg
cmp
xor
rorl
loop
imul
push
imul
jmp
jge
arpl
outsl
fisubl
fistl
sub
xor
jle
mov
int
bound
mov
fnstcw
pop
push
push
push
call
pushl
cmp
lret
flds
or
aaa
movsb
push
loope
pop
je
xchg
leave
ljmp
cld
ljmp
add
cmp
or
cmp
daa
int
ja
cmp
call
push
shl
push
test
out
icebp
test
roll
test
out
in
cmp
sub
scas
test
adc
bound
cmp
xchg
sbb
lds
pusha
jg
insl
mov
push
sub
xchg
cmpsb
sbb
xchg
repnz
dec
inc
mov
pop
popf
or
rclb
pop
add
outsb
push
loopne
jecxz
or
inc
xchg
lods
icebp
dec
loopne
imul
mov
mov
push
mov
xchg
inc
mov
cmpsl
cmp
imulb
std
iret
jne
out
fsubs
ficoml
test
jmp
add
mov
into
or
sbb
outsl
leave
sbb
fiaddl
aas
das
push
xlat
mov
dec
xchg
or
pop
cmp
or
adc
adc
test
sub
cli
aad
adcb
int3
cmc
jp
mov
sbb
call
imul
pop
sub
jg
fildll
xchg
mov
sahf
xor
xchg
sbb
incl
xor
bound
stc
sbb
rcrl
lock
lods
mov
iret
xchg
frstor
add
xchg
mov
jno
xchg
adc
or
popa
add
popf
sub
fistpll
xor
adc
and
dec
push
pop
xor
ljmp
and
inc
mov
dec
cmp
and
dec
jmp
iret
sbb
mov
js
scas
cmp
cmp
pop
mov
adc
addb
mov
sbb
movsl
jnp
xor
clc
test
imul
aad
std
lret
xor
daa
rcrb
adc
inc
sarb
ret
inc
or
mov
outsl
outsb
insl
jb
sbb
lcall
and
xor
test
sub
fcompl
sbb
test
inc
fcmovne
inc
loopne
jge
in
mov
pusha
or
lahf
cmp
cmp
jg
scas
or
outsb
divb
shl
or
xchg
sbb
sahf
lock
repz
out
mov
jns
cmpsl
xchg
mov
stos
add
xor
mov
mov
lods
test
lea
mov
popf
call
pop
add
inc
icebp
loope
dec
and
xor
adc
cmp
outsb
mov
repnz
imul
lcall
pop
and
fcompl
add
adc
mov
ret
icebp
pusha
push
cmpsl
sarb
mov
sahf
jae
imul
cmpsl
or
jno
insl
and
movsb
ret
lret
mov
lock
shll
cmpsb
decl
addr16
insl
test
adc
add
push
pop
inc
pusha
mov
mov
lds
dec
jg
dec
adcl
in
fisttpll
adc
xchg
push
xchg
in
idivl
lock
or
xor
clc
pop
setne
xchg
jl
cs
push
mov
push
mov
or
stos
cs
fisttpl
fbstp
ret
jmp
jnp
enter
push
mov
mov
dec
fstl
jbe
xchg
ret
jecxz
add
ja
xor
pop
outsl
popa
adcl
lcall
add
add
sbb
cmp
mov
xlat
xchg
shlb
nop
ret
jae
data16
xchg
mov
std
or
inc
popf
in
push
cwtl
scas
pop
int
sbb
push
jb
scas
addl
fucom
mov
jmp
jp
or
adc
pop
mov
int
jmp
or
inc
mov
xchg
sbb
popa
gs
sub
cmpl
lods
imul
fsubl
jnp
mov
insb
ja
ljmp
jge
pop
and
inc
mov
imul
pop
lock
mov
shlb
xor
lahf
adc
shr
mov
ljmp
jmp
and
test
pop
mov
xchg
add
cwtl
and
pop
out
fistpll
mov
pop
cmp
sub
mov
cmpsb
xchg
sarl
shrb
cmpsb
adc
cwtl
xlat
mov
das
arpl
mov
out
add
test
das
test
call
dec
adc
cmp
jns
ret
dec
cwtl
push
orl
inc
nop
jb
clc
jge
lods
inc
lret
and
xchg
jl
push
adc
fwait
or
cmp
push
or
add
adc
test
fwait
push
and
subb
setle
stos
dec
hlt
lcall
mov
xor
mov
fcoml
popf
cld
sub
jae
push
add
inc
add
fcompl
xor
xchg
mov
or
in
out
psllw
cld
or
pop
inc
aas
aas
outsl
mov
cmp
jo
iret
pusha
inc
inc
cwtl
pop
cmp
lods
add
push
sub
xor
mov
and
fstl
sbb
xor
add
dec
call
rol
sbb
popf
stos
inc
xor
clc
ds
loope
mov
andl
or
insb
sub
hlt
adc
aam
ficoml
cmp
mov
add
test
mov
jle
mov
popa
sti
lret
push
add
test
push
lcall
push
dec
call
insb
jo
popa
jns
jp
ror
push
and
dec
sub
add
pusha
add
js
cmp
xchg
push
jmp
rcl
xor
fs
mov
adc
jne
aam
outsl
add
xor
dec
cli
push
inc
mov
adc
mov
xor
test
or
cwtl
scas
jne
hlt
mov
mov
insb
sbb
in
ss
cmp
adc
cmp
push
ja
in
fnsave
jbe
addr16
insl
mov
jmp
movsb
jmp
mov
mov
xchg
pop
bound
in
inc
jbe
les
dec
push
inc
xchg
shrl
jecxz
sbb
cmp
dec
cld
cs
bound
insl
sbb
mov
dec
mov
dec
out
lret
xor
mov
ja
ret
sub
jmp
mov
sub
pop
xchg
neg
push
dec
cmp
pop
fldl
mov
cld
rorl
mov
add
insl
jb
popf
jmp
ljmp
les
inc
pop
enter
mov
outsb
rep
xchg
fisubrs
arpl
sbbl
das
xchg
mov
jo
sub
add
out
xchg
xchg
outsb
pop
fwait
inc
sbb
shlb
xchg
cmp
adc
mov
es
mov
dec
sub
enter
leave
cmc
adc
xor
xor
and
setne
sub
bound
xchg
pushf
mov
das
outsl
cmp
push
mov
and
mov
mov
adc
jno
pop
leave
pcmpgtb
jle
les
int3
and
inc
inc
inc
dec
out
lods
dec
cmpsb
insl
out
jecxz
shl
lock
int3
out
pushf
pushl
rcl
sti
xchg
sub
aaa
pop
scas
subl
and
push
das
iret
insl
bound
jmp
or
and
out
xchg
sub
pop
jne
and
leave
and
repnz
and
dec
xchg
daa
mov
inc
cmp
mov
cmp
int
andb
pop
shrl
out
adc
aam
stos
sbb
loopne
bound
into
arpl
test
jmp
sbb
repz
sarl
sahf
mov
filds
out
in
jnp
faddl
jb
pop
ds
cmpsb
mov
inc
pusha
inc
mov
jge
pusha
outsb
add
cmp
or
in
les
jno
lret
or
fnstcw
push
loop
mov
cmpsl
or
mov
push
testb
out
pop
mov
loope
in
mov
or
pop
or
push
ss
cmp
push
push
aaa
inc
out
jo
cmp
jne
je
movsb
pop
mov
add
sub
sbb
xchg
push
mov
fmull
sarb
or
fsubrs
out
outsl
jecxz
sbb
jne
push
mov
pop
rorb
mov
stc
dec
push
sub
xor
push
ror
jp
inc
push
and
scas
pop
in
cmc
orl
popf
int3
jl
outsb
add
idivl
lods
leave
pop
fistpll
push
out
subl
jmp
and
les
mov
ljmp
cmpsl
sbb
ds
faddp
adc
jbe
je
mov
mov
xor
lret
test
mov
mov
cs
mov
jne
pop
loopne
lret
in
push
ds
xchg
xchg
adc
in
mov
jle
cs
adc
xlat
push
outsb
movsl
fimuls
xor
pop
out
and
fdivrl
dec
or
incl
outsb
fwait
push
and
xor
and
out
lea
and
or
inc
test
add
js
imul
pop
xor
lods
or
mov
fistps
lods
lea
add
mov
movsb
bound
xchg
das
fldenv
adc
out
rcr
aam
cld
xlat
mov
jae
loop
pop
push
cld
add
cli
jbe
fstl
out
xor
js
or
fbstp
hlt
or
push
xchg
or
dec
daa
test
mov
xchg
repz
nop
sarl
and
and
test
inc
xchg
xchg
icebp
lods
movsl
jge
call
dec
nop
addb
into
jns
std
jg
inc
sub
or
call
addr16
fistpll
imul
fcmovnu
dec
leave
in
mov
push
add
mov
int3
pushf
adc
push
fildl
inc
arpl
test
ret
push
ss
pop
addl
ja
pop
leave
jae
test
pop
jo
scas
sub
test
push
mov
testb
fadd
outsb
push
insb
add
rclb
int
cmp
jl
sub
in
dec
add
or
push
cmp
movl
scas
sarl
xchg
xchg
lea
nop
xor
cwtl
push
push
adc
mov
mov
bound
arpl
push
xor
inc
sbb
sub
cmp
xchg
pop
mov
punpckldq
jae
add
dec
pop
fcoml
adcl
mov
mov
out
dec
imul
into
pop
iret
sbb
das
mov
dec
xor
xor
and
lods
dec
adc
push
int
jns
mov
lods
sysret
mov
arpl
push
sub
icebp
or
inc
loop
push
loop
lret
fsub
call
lret
sbb
push
fs
dec
dec
repnz
mov
push
mov
push
cmp
mov
mov
fisubrl
ja
adc
push
ds
cmp
aad
scas
push
mov
mov
or
into
shl
mov
inc
loop
pop
pop
fcmovb
scas
ljmp
mov
enter
push
or
fisttpl
mov
adc
pop
jne
test
shl
fisubrl
inc
data16
sarb
push
adc
xor
mov
push
add
mov
inc
jns
cmpsl
fisubl
cld
ret
cwtl
pop
rolb
push
in
ret
cwtl
sbb
sahf
pop
or
loopne
call
ucomiss
testb
mov
outsb
inc
dec
add
add
shrl
cli
cltd
les
or
push
jns
jae
insb
fsub
xchg
sub
mov
in
test
jns
out
div
arpl
aaa
clc
mov
std
jno
call
adc
test
mov
and
or
dec
test
push
in
jo
fucomi
outsb
cs
adcl
gs
and
jg
add
pop
scas
sbb
loope
pop
xor
mov
mov
xchg
dec
jge
inc
jno
leave
push
push
push
ja
push
xchg
jg
stos
mov
push
imul
nop
mov
maxps
ss
aad
clc
mov
hlt
pop
jecxz
mov
fstps
loop
xchg
or
loope
or
in
sbb
dec
xchg
inc
sbb
sbb
lock
xchg
cwtl
loop
fidivrs
push
sbb
and
xor
push
adc
mov
test
xor
push
les
sub
inc
jb
mov
sub
nop
cs
nop
jl
mov
dec
jge
mov
insl
jne
and
xchg
icebp
xchg
sarb
lea
or
mov
jo
mov
adc
hlt
sbb
std
add
lahf
adc
fdivr
sahf
and
lahf
out
out
lret
andl
cs
ret
jecxz
pop
jge
mov
roll
lock
sbb
testb
xchg
test
and
add
push
jno
or
popa
int
xchg
mov
shr
add
outsl
addr16
negl
lcall
pop
dec
aam
mov
and
xor
jne
jg
mov
clc
xor
fwait
inc
jl
sub
fists
aas
jb
repz
shlb
jl
inc
mov
push
int3
test
insb
cmp
xchg
xchg
push
ss
xchg
jmp
jmp
pushf
add
sbb
mov
sbb
xchg
pop
pop
rorl
movsl
jle
inc
jns
cmp
insl
sub
add
mov
lea
das
adc
daa
add
sbb
insb
dec
add
push
jae
nop
clc
or
test
aas
repz
js
jl
ret
fdivp
jle
mov
pop
jge
xor
sbb
inc
mov
mov
mov
movsl
out
pop
adc
pop
cltd
lret
bound
test
scas
push
or
lods
sti
xor
pop
movsb
pop
cmpsl
lods
jae
ret
lcall
mov
push
loope
adc
es
jmp
pusha
inc
sbb
push
sbb
nop
push
fisubl
clc
xchg
push
les
sar
rorb
xchg
push
inc
push
das
into
lods
mov
mov
mov
pop
mov
xor
mov
mov
or
and
stc
mov
xchg
insb
xor
ss
inc
mov
inc
mov
fs
lret
mov
sub
seta
sbb
cmp
loop
cmc
call
and
xchg
push
jg
xor
std
sbb
jg
in
fbld
adc
add
fmuls
shrb
or
mov
out
scas
mov
fcom
mov
in
jnp
popa
out
dec
insb
push
filds
mov
loop
ret
cmp
pop
add
sbb
or
sub
inc
js
clc
add
jne
xchg
out
shrb
test
insb
sbb
fimull
fldl
mov
dec
xor
sbb
fxch
clc
inc
data16
jb
sub
lods
push
mov
fistl
push
mov
xor
mov
xor
dec
adcl
mov
outsb
push
fildll
jp
repnz
in
fsubrs
mov
add
jbe
inc
jl
lea
pop
xor
rcl
aas
mov
cmp
sbb
and
and
mov
push
push
outsb
in
mov
cmpsb
movsb
scas
pushf
adc
sbb
jo
aam
xchg
inc
test
cwtl
pop
loope
outsb
outsl
push
lods
filds
mov
sbb
mov
adc
cwtl
movsl
test
push
aaa
movl
or
push
xor
mov
pop
sub
sbb
jb
add
jecxz
mull
pop
lock
adc
xchg
mov
ficompl
iret
lods
sub
and
out
xchg
test
jle
cmp
loopne
xor
dec
out
add
pop
sub
xchg
mov
movsb
push
loopne
enter
push
orl
stc
outsl
inc
rcll
repz
inc
add
orl
xor
push
and
push
dec
jo
test
insb
shlb
xor
rorl
stos
enter
pxor
mov
repnz
loopnew
aad
and
out
int3
out
out
jno
mov
sbb
dec
fstpl
and
cmp
in
sti
jge
fistpll
popf
cmc
daa
lahf
mov
and
jmp
jle
insb
aaa
cld
test
sbb
add
out
out
jle
pushf
inc
mov
mov
xchg
shl
mov
daa
fs
push
cmpsl
cmp
pop
lret
and
jge
pop
mov
or
dec
inc
xor
or
daa
add
test
rclb
cmp
in
mov
gs
jl
push
sub
es
sahf
fcomps
fisubrl
dec
mov
mov
push
mov
cmp
dec
jmp
mov
pop
mov
jae
movsl
lock
push
jmp
push
fdivl
adc
fwait
out
xor
push
bound
aad
mov
mov
mov
or
mov
repz
popf
adc
mov
and
lods
lods
incb
es
push
ss
dec
or
sbb
in
lea
lahf
rep
sahf
push
xor
mov
repz
adc
fwait
add
jne
mov
xchg
ret
xor
push
outsb
pop
push
pop
jmp
clc
imul
sub
inc
lods
push
outsb
rorl
cmpsb
clc
ret
iret
adc
add
pop
lret
mov
pop
in
cmpsl
mov
hlt
xchg
mov
rcl
adc
loopne
xor
and
dec
ljmp
sub
push
aad
cwtl
pop
hlt
and
mov
mov
pop
iret
cmp
cltd
xchg
ja
pop
jb
rcll
jmp
sub
jo
in
scas
push
cltd
ljmp
hlt
push
nop
xor
nop
ret
and
loop
hlt
and
add
jno
jp
add
movsl
mov
cli
out
push
insl
ror
mov
stc
push
and
or
movsl
xchg
xchg
mov
jb
add
push
daa
inc
sbb
inc
std
cmp
cli
jg
je
clc
stos
ds
jmp
adc
lcall
test
jl
les
nop
hlt
in
mov
ds
inc
inc
sub
ljmp
jno
and
cmpsb
mov
mov
inc
mov
sbb
sub
xlat
xchg
in
bound
psllq
inc
ficoms
sbb
add
loopne
mov
stos
xor
pop
xchg
jg
sbb
jl
dec
gs
add
movsl
outsl
push
mov
adc
sbb
mov
jae
sbb
inc
or
cmpsl
push
xor
into
mov
iret
dec
je
mov
and
push
shrb
fcom
xchg
test
into
cmp
or
iret
loopne
imul
mov
in
movsl
inc
push
mov
sub
dec
adc
xchg
in
sti
pop
jmp
mov
addl
jb
push
mov
pushf
lods
sbb
inc
ja
or
cmp
sbb
shll
es
dec
lods
adc
inc
test
mov
lds
imul
lock
mov
pop
sbb
jo
divl
scas
jmp
dec
xor
stos
add
inc
int3
enter
mov
push
xchg
xchg
jg
outsb
xor
xchg
jae
sub
mov
dec
std
inc
aad
test
adc
jle
mov
mov
and
pop
sbb
xchg
pop
hlt
mov
aaa
dec
outsl
xor
cmp
clc
aad
ljmp
arpl
lahf
les
push
ja
and
movsb
ss
pop
pusha
mov
sbb
add
cli
mov
bound
mov
pop
jg
mov
mov
mov
inc
enter
test
shl
inc
pop
push
adc
dec
aas
mov
aaa
arpl
dec
pusha
jge
jmp
sti
fstpl
jbe
call
in
ss
loope
pop
pop
dec
fiaddl
xchg
addr16
dec
dec
pop
incb
adc
xchg
push
xchg
jb
bound
lcall
in
lds
pop
pop
mov
push
enter
stos
test
test
adc
popf
in
sub
insl
cld
pop
or
scas
fcmovb
pusha
fldenv
xor
inc
pusha
out
arpl
lret
fs
xor
cmp
mov
push
push
dec
sub
xchg
sbb
mov
ljmp
and
popf
insl
jecxz
sub
cmp
cs
jo
cs
xor
aaa
and
mov
orl
xor
mov
or
pop
and
scas
push
lods
push
or
imul
add
out
addr16
ficompl
sbb
pop
sbb
mov
jo
in
jecxz
jno
shl
lret
jns
push
sub
fwait
inc
mov
in
pop
inc
push
enter
cmp
cmp
popf
int
and
inc
xchg
mov
js
stos
mov
mov
xchg
push
stc
inc
inc
dec
sub
fwait
les
movsbl
dec
cwtl
inc
out
mov
cmpb
or
add
popa
loop
mov
popa
pop
jl
xor
mov
sbb
dec
movsl
movd
das
out
sbb
and
sbb
ss
add
mov
dec
cli
xchg
lods
mov
lds
sub
addr16
adc
in
dec
notl
xlat
into
mov
decl
mov
cmp
movsl
cltd
insl
neg
int
push
dec
adc
sahf
das
aas
les
ja
xchg
mov
arpl
xchg
cmp
pop
cmpsw
sub
orb
xchg
sbb
aaa
or
xor
fs
push
iret
dec
lods
xor
jp
loope
mov
mov
cmp
mov
and
pop
scas
fimuls
fdivrl
iret
cli
cmp
les
out
jne
popa
fwait
addr16
pushl
jmp
das
jp,pt
pop
cmp
cmp
pop
push
cld
push
add
push
mulb
das
es
addr16
in
ljmp
fmul
rcrb
shll
imul
lea
adc
pop
push
push
lods
data16
movl
add
daa
or
jmp
dec
sub
push
fmuls
int
lods
dec
jns
lds
loopne
repz
mov
cmp
pop
jg
in
orb
add
repnz
jmp
pop
or
adc
lock
outsb
sbb
push
and
and
dec
adc
frstor
test
movsb
aaa
out
adc
repz
xor
lret
jnp
push
addr16
sub
sbb
pop
push
xor
push
jle
test
in
mov
mov
push
adc
dec
dec
mov
fdivl
xchg
in
pop
pop
jmp
pop
lahf
xor
add
outsb
inc
shll
stc
ds
add
imul
pop
and
fistpl
cmp
icebp
in
inc
push
xor
popa
ds
ljmp
icebp
stos
add
adc
ljmp
fadd
hlt
push
push
inc
xor
mov
jmp
movsb
ret
inc
stos
sbb
mov
and
pop
mov
and
and
in
xchg
in
bound
call
shll
test
data16
into
imul
andl
and
push
testb
dec
imul
imul
loopne
mov
aaa
sub
cld
pusha
mov
pop
push
jl
testb
jmp
jns
fiadds
or
mov
jbe
les
addr16
xor
pop
push
js
dec
and
mov
or
sub
fnsave
js
stos
dec
movsl
mov
push
das
movsb
fwait
in
aad
aas
xor
sbb
xchg
mov
aas
out
dec
idivb
cwtl
aad
ljmp
or
lods
sub
mov
js
mov
sub
push
fwait
divl
jno
les
cmp
das
inc
adc
sub
pop
bound
aas
push
pop
scas
jns
bound
call
cmpsl
mov
shrl
cmp
insw
push
xchg
adc
sbb
cwtl
scas
aas
movsb
loop
jne
push
lea
jbe
mov
or
fcompp
push
das
jne
or
popa
mov
sub
aad
aad
or
in
test
outsl
inc
iret
sub
mov
pop
mov
cld
dec
inc
divl
mov
cwtl
repz
dec
xchg
lcall
adc
in
jge
pop
push
stos
dec
std
into
lods
push
rol
jecxz
repnz
pop
inc
aam
dec
inc
xor
pop
shrl
cmp
cmp
push
js
arpl
push
dec
fmull
les
sbb
es
movsb
jge
pusha
and
and
dec
hlt
dec
dec
mov
jl
mov
popa
hlt
and
fbld
xchg
cmp
ja
jg
push
in
mov
cltd
xchg
sub
mov
adc
pop
jg
pushf
repnz
sahf
stos
leave
dec
jg
pop
push
pop
cmpb
dec
xchg
pop
adc
xchg
aad
loopne
lret
cmpsb
jmp
sub
mov
xchg
dec
nop
xor
lret
mov
arpl
hlt
cmpsb
insb
loop
in
data16
adc
lea
inc
mov
adc
in
or
jmp
push
inc
pop
fcmovne
aad
or
cwtl
dec
push
outsl
and
lds
add
fs
ret
repnz
es
jl
xchg
cmc
inc
lcall
leave
shr
dec
jmp
and
mov
adc
sarb
imul
and
iret
cmp
xor
out
addl
and
ja
mov
shll
jle
loopne
repnz
add
adc
cli
mov
and
pop
or
js
jl
addw
les
adc
cmc
sub
iret
jmp
and
mov
fstpl
xlat
adc
lahf
add
mov
cld
pusha
roll
xlat
xor
dec
push
push
ret
sti
dec
aad
add
mov
pop
xchg
loope
movsl
xorl
arpl
sbb
mov
sbb
mov
mov
push
jne
js
clc
hlt
jp
cmp
mov
in
jmp
inc
mov
mov
mov
loopne
or
out
pop
mov
popf
mov
jmp
xchg
cmc
mov
sub
movsb
rolb
cmp
pop
clc
jno
and
inc
pop
lea
popl
mov
jecxz
bswap
push
jne
xor
cld
test
aad
mov
adc
lock
lcall
or
punpckhbw
imull
sub
das
mov
les
lret
addr16
mov
loop
sub
jo
mov
or
loop
jecxz
cmp
mov
dec
cmp
sub
aaa
ljmp
or
jae
mov
les
pop
fcmovnu
in
pushf
pop
insb
adc
mov
xor
insl
in
xor
movsb
pop
in
sbb
push
ret
ds
orb
dec
pop
mov
sub
add
jl
add
sub
rcrb
push
fs
push
mov
shlb
jmp
xlat
fsubrl
jp
lods
idivb
int
andl
loope
sub
dec
sub
movsl
ljmp
push
inc
inc
xchg
lock
jl
outsb
add
mov
mov
and
aad
mov
mov
aam
adc
int
das
jb
sbb
adc
mov
cwtl
cmp
rol
std
rorl
test
pop
in
xchg
ret
mov
adc
insl
hlt
loop
jg
fadd
sahf
fsubr
pop
push
loope
mov
jg
cwtl
call
ljmp
subb
aaa
lcall
mov
mov
adc
loope
mov
xor
aaa
loope
aam
orl
enter
les
mov
xchg
hlt
test
jg
push
iret
push
out
sbb
lock
ret
hlt
cld
inc
seto
or
pop
mov
fsub
cmpb
push
fdivr
cmpsl
push
add
mov
sbb
push
xor
adc
and
mov
popa
push
outsl
push
sbb
std
shlb
or
or
ja
out
iret
ret
dec
dec
push
sbb
push
cmpsb
xor
push
pop
shrl
sub
xor
ja
mov
scas
adc
lea
aaa
mov
push
jmp
shrl
mov
mov
dec
jbe
sbb
push
int3
push
or
cmp
push
imul
mov
mov
pop
in
dec
repz
rdmsr
adc
gs
mov
shll
ret
push
aad
mov
pop
cmp
sti
add
add
adc
jne
push
pop
xchg
loope
mov
pop
xchg
in
xor
push
leave
and
mov
cmpsb
sbb
flds
ja
pop
inc
lahf
lahf
popa
stos
sbb
and
sub
leave
sbb
push
in
das
cltd
orb
jle
pop
in
pusha
adc
mov
lods
iret
repz
cmpb
or
xchg
outsl
jp
jno
add
sub
dec
fs
lods
dec
sahf
adc
les
pop
bound
push
push
dec
mov
inc
fwait
outsb
pop
inc
fsub
cltd
xchg
iret
loopne
sub
lret
xlat
push
imul
pop
xchg
add
inc
scas
ror
xor
stos
mov
and
xor
sbb
out
dec
jns,pt
push
inc
popa
add
imul
pusha
in
daa
xchg
push
jns
pop
jae
mov
cltd
fsubl
test
fidivl
jmp
movsl
adc
pop
hlt
ds
pop
jbe
movl
mul
push
pushf
and
xor
adc
xchg
out
inc
inc
sbb
sti
mov
jno
adc
es
outsl
ja
push
sbb
lock
cmp
add
mov
mov
pop
out
arpl
daa
cmp
dec
mov
divl
sbb
decl
in
and
sub
cmp
xor
sarl
lds
dec
loopne
shrb
push
or
test
xchg
test
or
ss
movsb
imul
mov
hlt
imul
xor
mov
stc
jmp
cmp
push
shlb
mov
adc
out
cltd
test
dec
test
pop
jnp
ljmp
pop
or
int
mov
mov
adc
mov
insb
xchg
pop
push
and
pop
pop
push
inc
aas
cmc
inc
ret
pop
fdivrs
in
jle
mov
cmpb
sub
pushf
jnp
loop
lods
shll
imul
jo
jmp
sbb
xlat
mov
das
mov
mov
add
cmp
lcall
rcll
test
push
xor
cltd
out
xchg
and
mov
dec
sarb
push
push
xchg
pop
fimuls
mov
sti
aam
js
sub
mov
arpl
mov
imul
jg
cld
outsb
stos
mov
sub
in
jp
testb
mov
sbb
mov
loopne
stos
movsb
pusha
sbbb
rorl
das
in
ss
adc
imul
xchg
test
dec
xchg
sub
fistps
leave
test
xorb
aaa
jno
test
iret
inc
std
aas
xor
cwtl
jae
jno
xor
ficomps
sbb
mov
cld
mov
out
stos
lods
adcb
mov
pop
dec
scas
inc
push
sti
push
dec
lock
dec
imul
lcall
nop
dec
jle
js
pop
sahf
stc
das
fwait
stos
xor
xchg
mov
mov
xchg
notl
jp
stos
js
and
dec
cmp
fisttpll
push
mov
call
xchg
xor
cmp
push
pop
flds
int3
xchg
pusha
dec
popa
gs
add
mov
dec
push
ret
jns
push
sub
pop
or
xor
arpl
xchg
jg
pop
and
leave
cmp
pop
rcl
inc
cmpsl
sbb
dec
pusha
sbb
popa
or
pop
loope
pop
push
jne
pop
mov
sub
dec
rcll
stos
out
xchg
fcoms
lret
sub
arpl
inc
repz
imul
jmp
xchg
sub
add
xchg
xor
xor
xchg
push
fcoms
lods
mov
pop
jbe
mov
sub
jbe
pushf
sbb
lods
xlat
cmp
xchg
out
je
cmp
lock
bound
hlt
push
cwtl
dec
cmpl
push
fmuls
cmp
sahf
or
ds
sbb
mov
jmp
xor
mov
and
pop
mov
pop
jne
ja
ret
cmp
pop
mov
mov
mov
clc
jae
cmp
cmpb
aad
adc
xchg
adc
aas
aas
push
inc
pusha
jo
adc
add
jle,pt
and
adc
or
ret
les
repnz
jno
mov
inc
cmp
lcall
outsb
sbb
adc
scas
notb
and
arpl
test
lods
mov
test
roll
jecxz
icebp
jge
popa
adc
inc
mov
movsl
inc
mulb
xchg
mov
leave
inc
dec
adc
sahf
jg
and
popa
inc
mov
mov
sub
mov
or
jns
adc
out
aad
adc
out
or
xchg
cs
arpl
add
repnz
dec
sahf
sbb
outsb
pop
arpl
rcrb
inc
jmp
ret
btc
sbb
dec
mov
push
add
pop
pop
stc
js
into
sbb
rcl
jge
ds
mov
mov
adc
jg
loopne
out
or
adc
fxch
xchg
jnp
test
jnp
push
shll
imul
pushf
mov
push
jne
fwait
out
outsl
mov
adc
xchg
cltd
dec
addl
dec
adc
adc
ja
add
dec
gs
sbb
mov
mov
mov
cltd
dec
int3
or
push
dec
inc
insl
js
adc
das
sub
dec
mov
enter
push
or
pop
lcall
push
lret
mov
sub
and
cmpsl
js
jmp
fimull
or
fbstp
mov
insl
repnz
andb
push
inc
repnz
and
dec
lret
xchg
push
test
test
rcrl
jne
test
into
sbb
or
sub
in
insl
add
cli
jb
push
cld
stos
inc
add
sbb
or
push
pop
aaa
add
loope
push
jecxz
aas
rcrb
pusha
leave
scas
lds
sub
sub
add
fmuls
pop
ljmp
or
sbb
cmp
inc
cmc
out
repz
push
cltd
mov
jae
data16
repnz
clc
stos
sahf
dec
mov
outsb
jmp
xchg
cmp
mov
pop
pushw
int3
mov
jg
popf
inc
aad
aaa
icebp
repz
lret
fstl
ficoms
les
jbe
xlat
push
mov
movaps
and
or
inc
xchg
in
repz
lds
jecxz
stos
jl
jg
stos
test
and
pop
rol
inc
cmp
iret
mov
rcr
js
fs
je
fwait
sub
jns
jae
test
sbb
imul
push
jecxz
arpl
add
ss
lods
je
rol
add
or
sbb
das
scas
cmp
ss
xchg
outsl
out
xor
test
arpl
push
jns
int3
fst
adc
test
lock
sbb
cmp
sub
cmp
sbb
cmp
fisttpl
ss
orl
lcall
cmpl
sub
xlat
cmp
out
mov
xlat
cmpb
jle
xchg
aaa
dec
xor
jecxz
mov
inc
ja
jae
cmp
dec
dec
popf
push
pop
cmp
and
mov
in
pop
loopne
or
push
cmp
ss
mov
xchg
test
cmc
ficompl
jns
hlt
or
jle
inc
fs
inc
adc
in
inc
divl
push
mov
push
pusha
dec
xchg
adc
cmp
insl
adc
shlb
andb
orl
mov
cmp
fwait
pusha
ljmp
fs
in
data16
lret
sahf
lcall
pop
sub
mov
cmp
shll
push
dec
fxch
cmp
adc
ds
test
int3
mov
mov
frstor
jl
dec
jnp
push
enter
std
cmpsl
xor
ret
add
popa
mov
lods
movsb
lods
push
cmp
mov
imul
inc
mov
das
pop
xchg
add
mov
call
popa
mov
mov
in
adc
out
int3
lcall
pop
mov
and
mov
icebp
testb
test
add
data16
mov
mov
cmpsb
mov
leave
je,pn
fwait
test
jmp
mov
out
shrl
adc
sbb
roll
and
mov
mov
insl
test
pop
or
mov
push
cli
sub
imull
dec
data16
aad
movsb
out
or
or
sub
or
pop
lock
test
inc
push
push
sbb
mov
xlat
mov
or
push
loop
call
sub
dec
xor
arpl
sbb
xlat
scas
dec
adc
sub
out
jno
pushf
push
and
xchg
cmpl
into
push
push
je
inc
stc
test
xchg
fiadds
pop
les
dec
test
sbb
xchg
imulb
fistps
push
inc
std
xchg
push
fs
cmp
push
mov
out
hlt
mov
jns
mov
adc
mov
les
outsb
addr16
insl
ficoml
jp
sub
mov
jp
jb
lods
mov
jne
pop
jae
push
scas
mov
pop
cmp
adc
sarb
popa
mov
sbb
aad
rolb
and
cmc
loope,pt
loop
pop
movsb
push
lods
sub
ja
jg
icebp
sub
shlb
cmp
adc
push
stc
mov
ja
lds
leave
loop
out
movsb
inc
fistl
add
xor
lock
jl
cli
aaa
push
roll
pusha
xchg
sahf
sbb
sub
orb
mov
adc
jmp
das
maxps
sbb
add
cmp
mov
push
push
pop
aam
loope
ss
and
mov
dec
jno
inc
mov
dec
out
push
xor
and
cmc
xor
pop
push
mov
mov
xchg
scas
popa
inc
popf
inc
push
push
pushf
lret
dec
pop
iret
jo
clc
aaa
mov
rcrb
addl
subb
xor
mov
and
dec
push
xor
push
fwait
inc
mov
push
daa
lods
sub
outsb
nop
cmpsl
loopne
hlt
push
insl
xchg
adc
mov
dec
cmp
jbe
fsubl
fnsave
xor
lretw
lcall
scas
outsb
hlt
test
lcall
pusha
add
ret
mov
xchg
mov
sub
int3
cs
cmp
mov
cmp
stc
fsubrl
mov
inc
stos
ljmp
pop
jmp
pop
sub
xchg
data16
jne
sub
cld
stc
addr16
cmpsl
lods
js
xchg
add
add
lods
adc
movsl
mov
fmuls
inc
in
sbb
dec
cmpsl
inc
dec
ljmp
inc
sub
adc
and
cmpl
and
jb
xchg
jo
dec
hlt
jb
in
jns
and
out
cmp
add
mov
ror
mov
lahf
fstpt
arpl
jne
sbb
rcll
js
mov
stos
cmpsb
iret
jmp
mov
inc
jp
ds
add
iret
push
jne
jns
popf
les
negl
sbb
mov
sub
xchg
ljmp
push
mov
dec
jo
clc
pushl
nop
std
lods
imul
push
pop
fsubs
mov
imul
dec
sbb
js
int
roll
xorl
rclb
and
out
mov
ljmp
in
cmpsl
in
es
test
sub
or
mov
andl
inc
cmp
sbb
stos
push
loopne
adc
in
jae
test
xor
test
test
push
mov
testb
add
popf
sbb
xchg
mov
ret
repz
imul
xor
into
fistpll
dec
add
dec
sti
fidivrs
jge
and
loopne
aam
lds
pop
cmc
mov
icebp
cmp
rolb
mov
enter
bound
lret
lcall
out
incl
ffreep
movsb
or
testl
add
mov
and
lea
push
jnp
cltd
imul
out
sub
mov
xchg
rcl
in
xchg
xchg
sarb
push
mov
roll
cli
jl
cmp
jnp
fcoms
push
dec
mov
fs
lods
in
mov
mov
mov
jne
jge
add
clc
pop
mov
sub
pop
testb
push
punpckldq
int3
psadbw
pop
jbe
jo
pop
imul
mov
mov
cmp
inc
jnp
sub
add
imul
or
lahf
sbb
jbe
jbe
sub
shrl
aaa
fstpl
mov
call
jnp
dec
jecxz
jp
xchg
rcrb
xlat
call
ret
test
push
mov
cmp
sbb
mov
arpl
fwait
rcll
inc
pop
daa
mov
mov
mov
outsl
je
sahf
lret
jnp
adc
or
in
mov
mov
dec
mov
outsb
jmp
aam
pushf
push
popa
mov
mov
imul
xor
mov
or
push
mov
jo
pop
arpl
mov
xor
or
pop
pop
cs
push
dec
dec
jge
add
out
inc
mov
dec
mov
inc
out
mov
or
jbe
testb
aas
and
in
adc
mov
fisttps
leave
cmp
mov
pusha
mov
mov
mov
ficomps
inc
fsubrp
movsl
jle
xchg
pop
mov
mov
mov
pop
ret
sbb
ret
mov
fsubrs
repnz
jne
xor
cltd
xor
lds
ljmp
jne
cmp
dec
aaa
shrl
popf
inc
lret
xchg
pop
cmc
lods
pop
adc
shll
xlat
cmp
push
jnp
fisubrs
hlt
mov
gs
pop
mov
dec
add
jnp
adc
stos
subl
pop
dec
orb
cmp
inc
leave
or
cmc
xchg
fcomi
or
dec
mov
mov
pushf
lods
xchg
push
sbb
adc
cmp
mov
xlat
pop
test
cwtl
mov
aad
aaa
lahf
les
xchg
ret
jp
notl
add
mov
das
dec
xchg
pop
pusha
add
mov
xchg
out
push
mov
cmp
inc
addb
stos
sbb
outsb
orb
push
inc
in
pop
adc
iret
dec
mov
fbld
add
outsb
pusha
arpl
pushf
ss
in
sub
lods
or
in
xchg
push
xchg
push
sbb
movb
in
xor
adc
ljmp
pop
adc
dec
push
cwtl
sarb
lahf
les
or
push
mov
nop
jb
stos
in
fs
pop
mov
inc
ja
cmp
mov
push
cmp
int3
adc
out
xchg
sub
dec
pop
in
outsl
sbb
xchg
pop
testb
movsl
lods
cmp
push
mov
movsb
adcl
pop
push
cltd
pop
and
pop
cli
adc
popf
cmpsb
les
mov
mov
mov
pop
enter
xor
into
lds
das
mov
fdivl
std
jge
ret
xchg
pusha
in
outsl
xchg
in
sbb
jb
ja
ja
int
fsubl
or
push
and
mov
es
loope
adc
aaa
stc
mov
xchg
jo
loope
cmp
shll
je
iret
cmp
js
dec
pop
mov
xchg
lds
cmp
test
rcll
sbb
and
fnstsw
gs
cmpb
xor
ljmp
add
stos
mov
adc
les
into
popf
clc
and
jo
and
mov
pop
mov
pop
leave
dec
pop
test
dec
sbb
rcrb
scas
cs
jb
push
fwait
push
imulb
leave
or
pusha
incl
adc
dec
lock
hlt
les
hlt
arpl
nop
fst
inc
cwtl
stc
xor
inc
push
dec
jge
inc
test
lahf
and
inc
and
inc
outsl
inc
je
mov
push
cli
shlb
xor
lea
jg
jns
mov
adc
xlat
xchg
loop
stos
rcll
xlat
in
jp,pt
shl
mov
add
mov
jno
jl
push
jne
inc
and
rclb
mov
mov
or
je
arpl
sahf
pop
outsb
mov
adcl
aam
cmp
sub
sbb
push
sbb
sub
imul
fidivs
jne
sub
sarb
xor
push
loop
lods
or
xchg
shl
inc
jbe
xchg
rcr
sbb
lock
cmp
xchg
mov
xchg
jecxz
mov
xchg
jp
inc
push
je
mov
push
xchg
imul
and
mov
dec
mov
mov
mov
loope
sbb
push
flds
pop
sbb
imul
xlat
ret
cmp
test
add
xchg
mov
mov
out
call
addr16
das
push
push
and
fcoml
daa
test
icebp
mov
cmpsl
test
es
adc
and
in
icebp
mov
sub
cmp
push
imul
add
test
dec
loopne
cmpsl
bound
bound
repnz
cmp
add
popf
mov
iret
test
ret
cli
mov
das
insl
mov
xchg
out
jle
aam
and
les
negb
jmp
vzeroupper
imull
push
insl
inc
jecxz
and
lock
stos
lret
movsl
and
pop
sbb
sbb
sbb
mov
adc
fcoms
pushf
xlat
adc
sub
push
inc
ficoms
stos
aam
or
lds
or
jle
push
xchg
xchg
adc
mov
mov
lahf
cmp
jns
mov
add
push
inc
pusha
pop
push
pop
jmp
jle
mov
rolb
repnz
pop
sti
add
das
ja
loopne
movsb
lahf
insl
jl
jnp
repnz
push
jbe
fsubrl
mov
xchg
jb
jns
test
jg
push
dec
aad
mov
push
stc
inc
mov
imul
outsl
jb
pop
jg
and
out
popl
push
push
mov
push
mov
mov
push
iret
pop
adc
xchg
addb
and
mov
fdiv
jl
mov
adc
movsb
lds
aas
inc
or
pop
pop
aam
jns
xor
shrl
dec
cmp
mov
dec
std
xor
add
cmp
mov
adc
fiadds
insl
je
sub
mov
lds
rol
jne
call
jmp
mov
mov
jmp
xor
inc
sub
lahf
fnstcw
lret
pop
fwait
mov
daa
adc
xor
fisubs
or
arpl
add
cmpsb
mov
insl
jge
or
movsl
sbb
jg
lock
push
faddl
push
inc
or
mov
insl
cmp
jg
cli
mov
mov
pushf
cmp
jae
ret
int3
inc
je
incb
jb
mov
dec
adc
push
jne
aad
cmp
cmp
cmp
or
inc
sarl
popf
jnp
adc
jp
sbb
leave
mov
mov
ds
or
mov
leave
xchg
scas
aas
clc
out
pop
jns
dec
jg
imul
popf
rorl
inc
in
enter
mov
mov
cmpb
adc
ljmp
xchg
scas
pop
mov
lahf
jae
and
addr16
aad
clc
pop
sub
inc
cmp
adc
sub
pop
jle
jl
stc
fsubrl
nop
lahf
pop
fidivs
sbb
ss
pop
test
jb
jg
rcrb
add
sbb
ljmp
fwait
mov
jne
dec
std
pop
cmpsl
jge
fldt
mov
call
adc
cmc
adc
push
or
js
lods
out
leave
sub
scas
sub
std
xlat
sbb
ret
cwtl
mov
push
add
xor
nop
movsb
fmulp
stos
std
mov
inc
and
sbb
insb
cs
or
mov
and
daa
push
les
pop
cltd
push
fs
pop
mov
dec
push
jno
dec
and
pop
daa
add
pop
xchg
sub
add
mov
sub
pop
jl
xor
xorb
cmp
pop
jg
shr
push
ss
add
scas
loope
out
test
jle
insl
inc
pop
pop
cmp
outsb
pop
insl
cld
pushf
leave
rcll
loope
movsl
cmp
lock
popf
jns
out
add
fisttps
sbb
dec
push
jae
pop
adc
in
popf
stos
jl
clc
push
push
les
cld
push
std
jbe
sub
or
push
stos
loope
nop
jb
and
pushf
xorl
mov
aas
cld
sbb
sbb
pop
subl
dec
lcall
fwait
push
mov
scas
int3
jmp
mov
sub
lds
inc
stos
push
mov
loopne
adc
insl
hlt
fsubl
data16
divb
and
jae
rcrb
scas
cmpsb
dec
sahf
in
outsl
addb
mov
mov
das
mov
outsb
nop
sbb
push
cmp
pop
inc
test
out
rclb
pusha
mov
scas
pushf
imull
rcrl
outsl
sti
xchg
cmp
inc
repz
mov
dec
xchg
adc
add
mov
adc
in
cmp
test
sub
mov
ja
ja
adc
sub
bound
push
cmpsb
les
ret
add
lret
push
inc
je
lret
add
lods
adc
dec
pop
jbe
sub
loopne
cmp
add
add
inc
loop
fimuls
ljmp
inc
adc
inc
or
jg
fnstsw
pop
out
int3
adc
pusha
out
into
addl
cmp
sub
pop
jecxz
roll
shlb
dec
fmulp
push
lock
and
push
sub
cmp
mov
insb
cmp
testb
mov
or
stos
ljmpw
in
ja
mov
push
cmp
pusha
rorl
addr16
fdiv
mov
stc
mov
cmp
fbld
add
and
mov
repz
stos
adc
int3
test
and
test
sbb
fimuls
mov
aas
push
inc
or
fisubrl
shll
cli
cmp
dec
or
mov
data16
and
lahf
push
sub
mov
fdivrs
je
imul
int
mov
adc
push
fsubrp
mov
and
lds
adc
fdivl
adc
imul
call
dec
shlb
adc
inc
add
adc
mov
aam
stos
imul
xlat
insl
fidivrs
jnp
adc
fcomps
mov
clc
jb
adc
arpl
in
call
and
mov
cmp
scas
enter
aas
pusha
push
pop
xor
sbb
inc
jp
xchg
add
cmc
in
and
or
mov
aaa
fdivr
sbb
mov
rorl
nop
jo
test
cli
lret
gs
scas
pop
mov
test
or
push
lods
out
cmp
sbb
and
xchg
jge
data16
mov
pusha
clc
inc
push
mov
add
sbb
jae
es
push
push
and
stos
sbb
movsb
pop
cltd
sub
pusha
ds
push
xchg
add
jl
cmp
mov
pop
pop
jge
scas
adc
push
imul
xchg
xchg
rolb
jnp
sbb
hlt
icebp
push
shl
lods
rcrl
sub
cmpl
popf
in
and
cmpsb
bound
jl
arpl
bnd
sub
repnz
fcmovnb
add
pop
adc
hlt
ret
cld
outsb
jl
push
sub
imul
push
xlat
inc
movsl
fsub
add
clc
lods
in
xchg
cmpsb
xor
je
in
mov
out
add
and
lret
and
jns
repz
aas
mov
testb
jge
movsl
and
xor
movsb
ret
mov
mov
mov
aaa
xchg
or
iret
xchg
jle
arpl
jb
adc
jg
cmpsl
loope
data16
sbb
inc
pop
jne
ljmp
add
and
mov
ss
mov
sub
inc
and
scas
stos
out
in
sbb
enter
push
stos
rol
jbe
jmp
and
out
or
rolb
mov
ds
mov
hlt
mov
pop
mov
inc
pop
movsl
pushf
outsl
add
jnp
pushf
sub
dec
mov
rcrb
and
sub
lret
jne
mov
sbb
dec
sub
sub
gs
cli
out
int3
mov
cmp
mov
dec
inc
bnd
adc
lods
sbb
or
lahf
dec
xchg
adc
imul
mov
ljmp
sub
clc
ret
xor
lock
adc
adc
pop
or
testl
cmp
push
xchg
cmpps
loop
pushl
shr
mov
data16
repnz
xchg
int
dec
stos
and
xor
fisubl
jle
sahf
ret
aam
ss
stos
test
mov
in
call
fwait
es
cmp
cmp
push
out
sarb
aaa
mov
push
fiaddl
mov
mov
js
mov
jb
iret
push
sub
dec
mov
sub
inc
mov
ljmp
hlt
loope
and
enter
cmpsb
lret
xor
rcrb
cmc
mov
out
adc
push
cmp
lods
or
in
iret
ljmp
add
or
adc
and
fisttps
negb
push
cmpsl
int3
hlt
add
adc
xchg
mov
stos
shll
rolb
aad
dec
mov
xor
push
mov
cmc
adc
jge
push
or
gs
test
mov
inc
mov
je
enter
pop
sbb
mov
push
mov
xor
and
xor
out
in
push
xchg
xor
mov
adc
lea
stc
enter
ret
aad
subl
xchg
push
sub
mov
xorl
sbb
add
lret
cltd
enter
gs
inc
sub
shlb
sbb
inc
adcl
ret
out
mov
fists
sti
out
cmp
xchg
das
add
jge
sub
adc
cmp
push
adcl
and
mov
and
in
mov
nop
inc
mov
das
push
mov
mov
xchg
cmpsb
mov
adc
jb
sbb
sarl
cmp
clc
jns
in
movsl
adc
add
push
dec
scas
lds
xlat
and
out
js
imul
rol
push
inc
dec
xchg
outsb
mov
stos
xchg
cmp
movsb
push
pop
cmpsb
jecxz,pn
movsb
xchg
sub
inc
cmp
add
xchg
pop
scas
add
mov
mov
pop
jl
pop
mov
xor
sbb
sub
fcoml
das
sbb
dec
dec
ljmpw
sbb
add
lret
pop
push
xor
and
loope
or
jo
xchg
xchg
test
sbbb
mov
xchg
sbb
pushf
xchg
notl
ss
pusha
cmp
push
push
mov
pushf
jl
add
adc
lods
rcrl
rclb
insl
lods
fcompl
adc
and
jnp
xchg
fwait
out
dec
xor
inc
test
ret
and
pop
pop
inc
add
lods
add
jns
and
arpl
mov
in
jo
int
int3
lds
les
ret
cs
out
push
repz
pop
into
pop
lds
xor
icebp
call
addb
push
repz
lea
iret
ret
fstp
ds
push
and
cmp
in
clc
and
mov
into
jns
mov
jle
lret
mov
push
inc
cmp
mov
mov
mov
std
jg
test
cmpsl
jne
pop
ss
sub
cmpsb
mov
cmpsl
movsb
or
or
push
cwtl
std
add
ret
jmp
jle
scas
jge
loopnew
push
pusha
mov
mov
xchg
dec
jne
inc
fnstcw
jno
jae
mov
adc
fisttps
insb
push
scas
lods
adc
push
push
pop
mov
sub
dec
pop
xchg
cmpsl
insb
iret
or
ret
in
mov
cwtl
xor
jmp
sub
cli
push
test
jecxz
cmp
sub
das
or
inc
adc
and
fwait
lahf
pusha
cwtl
fmull
and
or
xchg
call
repz
inc
pop
cmc
cs
je
test
mov
sahf
dec
out
fwait
cmp
sub
xor
inc
adc
lods
ja
lcall
out
cmpsb
ja
or
repz
fmuls
dec
and
jge
cs
and
cmpsl
xor
adc
cltd
sahf
mov
fidivl
inc
shrb
fneni(8087
mov
push
xchg
cwtl
xor
and
aam
add
in
mov
sbb
lfs
lods
stc
outsl
out
add
sarl
mov
push
jmp
aad
arpl
testl
lods
out
cmpl
add
mov
push
fldlg2
jle
add
jbe
and
xor
dec
repz
xchg
jmp
inc
pop
mov
sub
sbb
lcall
mov
cld
xchg
movsb
mov
cld
sti
into
dec
cmp
xchg
negl
adc
insb
mov
push
int
shlb
ja
inc
mov
lock
mov
sahf
dec
mov
pop
mov
xchg
jnp
add
adc
add
mov
push
mov
xor
mov
repnz
ss
je
scas
nop
mov
out
loope
inc
outsb
lahf
inc
in
mov
mov
fcompl
ds
aas
int
mov
pop
cmp
fcomps
fucomp
sbb
imul
inc
inc
insl
xor
dec
cmp
sub
sahf
xor
dec
std
or
icebp
call
in
sbb
mov
pushf
mov
fwait
push
pop
aad
test
push
pop
mov
jne
sqrtps
ss
sbb
dec
div
lods
std
into
fsubl
scas
out
dec
or
cmc
dec
hlt
aaa
push
in
out
rcrl
xor
push
mov
cli
ja
sbb
push
sub
mov
mov
imul
cmp
push
mov
jo
pop
inc
test
dec
dec
arpl
jl
jle
inc
lea
pop
insl
lcall
int
and
or
or
leave
mov
inc
jno
loopne
pop
dec
cmpsb
je
les
mov
sahf
js
jecxz
rcl
cmp
out
jecxz
pop
add
call
add
sub
je
jmp
cmp
pand
cmp
roll
sub
pop
repz
dec
adcl
imul
fsub
les
fs
jb
mov
mov
std
stos
hlt
fisttpll
decl
movsl
pop
dec
ja
push
mov
lcall
sbb
cmpsb
cmp
xor
das
adc
fisttps
mov
daa
xchg
inc
loopne
leave
xor
xlat
outsl
and
xchg
mov
sub
pop
hlt
fsubrl
sbb
jb
fisttpl
fwait
pop
mov
and
mov
sbb
mov
ds
test
cs
xchg
stos
icebp
stc
lods
sub
mov
mov
mov
sbb
aad
js
fmuls
or
cltd
sbb
sti
adc
mov
addl
cltd
jae
test
sbb
xchg
fadd
dec
and
push
push
ret
enter
rcl
rclb
mov
sub
jg
mov
or
sti
pop
inc
mov
scas
xchg
mov
loope
mov
jmp
ja
sbb
xor
jbe
fldenv
movsb
and
bound
mov
jb
in
inc
adc
xchg
mov
push
add
xchg
testb
cmp
inc
aas
jbe
jge
lahf
jo
mov
adc
jne
pushf
subb
jg
dec
stos
lods
leave
lods
mov
sub
or
mov
stc
jge
inc
xor
daa
sbb
jge
test
push
movsl
inc
stos
scas
add
mov
fcmovbe
call
mov
push
xor
jge
test
lods
daa
out
fidivs
arpl
pop
cmp
push
xor
xchg
lds
or
xor
cwtl
fisubrl
pop
aad
jae
mov
stc
fmull
push
divb
jno
and
inc
insl
mov
cs
sub
xchg
call
or
hlt
sub
pushf
ljmp
add
inc
int
insl
xchg
add
pop
in
les
inc
mov
cmp
push
mov
mov
fcmovnbe
add
mov
push
in
cmpsl
repnz
ficompl
loop
ja
aaa
jecxz
mov
sbb
push
pop
xor
loop
int
insl
dec
fsubp
popa
jl
mov
jl
pop
std
sbb
decb
popf
idivb
fbld
test
test
movsb
and
outsb
lock
mov
adc
test
xorl
or
add
cltd
add
mov
jo
fcmovnb
push
push
lahf
fs
sub
repnz
lcall
iret
aad
push
cmp
jnp
out
loopne
bnd
pop
jl
or
pop
movsl
aam
inc
or
mov
mov
add
scas
shrb
stc
cltd
adc
call
in
leave
pop
rcl
lods
ds
cmp
xchg
enter
mov
jne
push
pushf
lret
movsb
repz
pop
jo
iret
mov
or
sub
out
inc
xchg
adc
sbb
sub
popf
xor
pop
mov
in
movb
test
pushf
inc
movsb
loop
cmp
add
mov
pop
cmp
lret
gs
push
outsb
inc
dec
pop
out
dec
mov
jb
outsb
aas
aas
js
je
inc
rcrb
jae
aaa
stos
mov
or
rcrl
nop
sbb
and
or
xor
aad
push
sub
xchg
xchg
rorl
mov
mov
jae
lds
adc
xor
inc
mov
mov
mov
sbb
cmp
xchg
rcrb
data16
lahf
mov
jl
insb
shlb
rcr
jmp
cmp
fucomip
mov
push
ror
push
loopne
push
jae
adc
dec
mov
call
lret
fidivrs
in
mov
adc
mov
cmp
popf
xlat
adc
sahf
jnp
js
js
inc
push
mov
push
lcall
xchg
pop
or
loope
mov
movsl
into
mov
push
add
jb
out
out
popa
pop
test
lahf
lcall
sbb
aad
pop
or
loopne
xchg
dec
push
cmp
adc
xor
cld
mov
jp
lret
or
cwtl
sbb
popf
mov
adc
inc
into
xchg
leave
inc
sti
dec
mov
loope
mull
push
js
dec
push
mov
sbb
js
lcall
stos
sub
bound
sbb
xor
jge
fwait
ret
iret
cmpsb
movsl
stos
lret
push
daa
push
push
cmp
and
repz
push
out
shll
out
mov
aaa
movsl
aas
push
lods
sahf
and
repnz
pop
pop
xchg
int
xlat
andb
pop
test
aad
out
jg
pushf
outsb
lock
adc
jo
loop
or
lock
aas
push
push
cmpsl
push
cli
push
jl
sub
mov
add
popf
pop
or
decb
xor
jb
push
xor
sbb
cmp
ret
je
cs
std
or
or
lds
loop
jmp
sub
outsb
mov
mov
push
or
mov
inc
mov
in
stc
out
hlt
mov
sbb
add
inc
mov
xchg
add
mov
lock
xor
push
cmp
int3
dec
add
or
stos
lcall
lcall
out
mov
sub
pop
push
js
adc
xor
mov
mov
imul
xor
scas
mov
xchg
mov
inc
adc
and
pop
data16
or
sub
dec
lods
js
loopne
push
cmp
pushf
aas
lock
imul
notb
or
adc
shlb
pusha
imul
inc
clc
dec
jno
mov
sbb
fdivl
or
sbb
adcb
data16
leave
insl
cmp
int3
jge
and
ret
mov
sbb
sub
mov
ret
push
and
mov
or
scas
jl
fs
xor
rorb
test
xchg
fs
mov
mov
inc
ljmp
adc
push
outsb
xchg
data16
int3
or
inc
test
mov
xchg
cmpsl
or
pop
push
cmp
inc
or
mov
int3
dec
xchg
in
xchg
xlat
mov
mov
and
dec
cld
faddl
imul
inc
cltd
jo
leave
repz
xor
cmp
mov
in
ret
movsb
clc
adc
dec
enter
dec
cltd
add
push
xchg
ss
stos
movsl
das
inc
pop
cmp
jo
add
mov
adc
mov
ret
cmp
test
in
inc
andl
js
pop
sub
mov
pop
mov
fidivl
mov
loope
scas
xchg
xor
cli
ret
fisttps
ret
test
negl
mov
pop
mov
in
ret
daa
xor
jmp
repnz
sbb
cmp
shr
mov
nop
mov
mov
int3
pop
push
sbb
sbb
jo
int3
xchg
push
adc
and
jge
inc
popa
ss
fbstp
repnz
std
dec
xchg
fwait
xchg
jge
mov
stc
jb
xchg
sub
mov
add
mov
popf
je
and
xor
add
mov
sbbl
jno
roll
mov
imul
enter
mov
cs
lds
and
movsb
enter
jp
sub
cmp
mov
std
es
jnp
addr16
les
xchg
fstl
xchg
imul
push
data16
xchg
lods
fs
ss
push
lock
daa
jecxz
push
cmp
imul
jle
fisubl
and
or
imul
mov
fwait
xlat
push
stc
loopne
xchg
push
cmc
push
sahf
push
sub
add
adc
das
lret
movsl
push
dec
cmpsb
push
leave
mov
fistl
stc
fwait
and
outsb
mov
hlt
pop
and
mov
movsl
xlat
push
push
stc
fdivr
pop
adc
fldl
dec
mov
pop
lods
sarb
out
loopne
fmulp
xor
mov
popf
mov
aas
stc
cmp
aas
push
mov
jecxz
cmp
mov
or
pop
lea
fistl
and
or
jmp
imull
sbb
fs
jbe
cmp
xor
ds
sbb
insb
and
stc
enter
xor
jmp
pop
and
push
dec
sbb
lds
out
outsb
adc
and
les
loope
ljmp
sub
sbb
dec
sub
mov
and
pop
adc
and
push
lock
bound
cwtl
and
sbb
cmp
push
out
pop
jmp
stos
loopne
in
sub
jno
push
cmp
push
xor
loopne
inc
mov
xchg
inc
mulb
test
jbe
dec
push
movsb
pop
jno
sahf
jno
mov
adc
shlb
pop
add
pop
xor
rcrl
shrl
sahf
mov
ljmp
in
jne
cmc
xlat
add
mov
aad
and
sti
lds
jecxz
iret
ljmp
xchg
movsb
fistpl
outsb
sub
lea
push
lret
scas
lds
fiaddl
ret
aas
das
xorl
loope
mov
fistps
pushf
jg
push
hlt
jge
inc
stos
push
cmp
xchg
scas
push
out
push
mov
xor
ljmp
add
xlat
mov
loopne
daa
subb
ja
sub
shr
cmpsl
push
xorl
sbb
sub
fbld
hlt
push
ds
movsl
arpl
cld
push
dec
jge
push
into
sub
rcrl
aad
pushf
mov
in
rcll
stos
fnsave
xor
sbb
testl
push
jecxz
mov
aaa
sahf
push
cmpsb
adc
xchg
enter
lahf
mov
sbb
fwait
jge
cwtl
lea
out
push
jmp
lret
and
lods
jne
cmp
ljmp
pop
fs
mov
arpl
lock
xchg
add
imul
mov
jmp
loope
jle
pcmpgtw
mov
jecxz
loopne
das
fmull
popf
mov
les
fdivrp
mov
scas
insl
push
and
add
dec
js
and
in
jge
jg
push
popa
lret
pop
das
mov
leave
dec
mov
test
inc
xlat
xchg
inc
mov
sub
rsqrtps
fldl2e
in
repnz
dec
test
adc
and
scas
cmc
xchg
outsl
mov
pusha
inc
fwait
and
mov
daa
sbb
lock
dec
jl
insb
gs
jb
jmp
sbb
lcall
mov
jns
scas
rcrb
in
addb
mov
mov
std
iret
test
sbb
loope
imul
pop
movswl
aaa
inc
arpl
cmp
mov
test
add
imul
negb
inc
pop
mov
or
inc
xchg
addr16
imul
add
ss
mov
mov
inc
cmp
inc
or
out
jns
aaa
out
lcall
sub
arpl
jo
out
out
cmp
mov
push
repnz
movsb
push
enter
call
pushf
add
push
dec
xchg
mov
fs
inc
fistps
cmp
outsb
imul
and
adc
ljmp
inc
pop
ret
arpl
inc
stos
aam
fildl
jmp
imul
stos
addr16
adc
fmuls
xchg
jge
xchg
repz
lret
imul
push
push
push
pop
ljmp
pop
imul
mov
mov
jnp
pop
aas
aaa
lods
jle
push
movsb
test
test
aam
fwait
and
lock
dec
pop
push
jle
xchg
adc
add
call
xchg
pop
add
loopne
rol
xor
push
xchg
bound
dec
inc
push
lods
pop
ret
jno
mov
mov
fimuls
pop
repz
out
hlt
xchg
cltd
xor
cmp
in
jg
ror
leave
out
mull
jns
xchg
mov
stos
sahf
mov
insb
jb
loopne
mov
inc
sysexit
sub
pop
xchg
xchg
xchg
xor
xor
xor
mov
nop
js
mov
and
cmp
push
push
add
les
or
fidivrl
xchg
scas
cmp
adc
and
xchg
and
xor
adc
jae
pop
sub
int3
cmpsb
loope
push
cmp
jbe
add
jne
jmp
push
dec
inc
push
xor
mov
subb
filds
loopne
adc
sub
pop
lcall
aam
dec
cmp
mov
xlat
adc
mov
cs
gs
pop
sbbl
xor
movsl
iret
rep
add
jo
addl
xchg
mov
fwait
push
mov
or
add
push
stos
sub
lahf
adc
push
mov
pusha
dec
jo
fistpll
jnp
jns
subl
sbb
filds
pop
xor
jmp
cmpsb
dec
nop
mov
call
adc
rcrb
lds
enter
xchg
xchg
sbb
mov
mov
icebp
and
sbb
xor
add
cmp
cmp
stc
inc
cmp
mov
ret
stc
nop
adc
ds
xchg
es
decl
dec
sbb
sbb
sbb
popa
add
repz
and
inc
shll
out
jg
pushf
push
lcall
in
push
roll
rcrl
test
mov
xchg
insb
subb
push
mov
adc
movsl
js
inc
inc
test
xchg
in
dec
mov
xchg
adc
or
mov
loop
pop
pop
and
ljmp
jb
adc
leave
xlat
das
cmp
sar
jg
loope
fidivrl
sub
mov
jle
test
clc
lods
loopne
sub
pop
cmc
sub
dec
fistps
pop
jl
jl
inc
nop
inc
jns
xorl
mov
inc
push
aam
adc
bound
cmp
fsqrt
cmc
fwait
mov
clc
cld
inc
lds
loopne
bnd
jnp
je
xlat
aad
int3
mov
ja
leave
lock
cltd
addr16
lahf
mov
popa
bound
push
add
mov
mov
cld
push
or
lods
ss
lahf
outsl
sbb
jmp
addr16
insb
cmp
shll
sub
lahf
arpl
mov
fnstenv
pop
test
lds
xchg
das
mov
cs
or
inc
shlb
testb
or
push
xchg
outsl
xor
adc
enter
jl
pushl
pop
gs
lret
mov
or
jne
lcall
les
mov
dec
int3
or
mov
adc
int3
mov
jmp
stc
dec
adc
sub
xor
cmp
js
insb
in
xor
push
out
jle
lods
ror
sbb
inc
sub
lds
sub
jno
outsb
loopne
sub
jb
push
test
and
push
jb
add
jne
movsl
mov
in
push
cmp
scas
shrl
mov
inc
idiv
pop
in
push
inc
push
cli
setl
imul
cmp
add
sbb
mov
test
je
and
aad
aas
adc
xchg
cmp
xchg
xchg
jno
jne
mov
add
push
sub
stc
xor
mov
sbb
sbb
lret
xchg
push
aaa
loope
mov
nop
sbb
test
lods
sti
sub
jbe
fstl
push
mov
shlb
pop
addr16
mov
mov
cmc
xor
popa
inc
ret
xor
add
ljmp
adc
mov
rorl
jbe
je
sbb
popf
push
gs
jb
rorb
fcoml
cmpsb
jmp
xchg
loope
shll
sbb
rclb
ret
adc
loope
data16
pop
jnp
pop
in
outsb
push
sbb
lock
pop
or
fdivr
xchg
je
roll
outsl
inc
js
pop
adc
mov
xor
scas
adc
lret
pop
adc
aas
dec
or
ds
data16
push
fxch
iret
mov
sbb
push
cmp
push
mov
xchg
xchg
mov
xchg
xor
xchg
clc
push
shl
mov
push
pop
push
mov
lret
jae
inc
xchg
adc
jne
xchg
fstps
or
and
data16
jecxz
and
sub
push
mov
cmp
enter
add
js
add
or
repz
sti
daa
mov
xor
dec
outsb
mov
mov
aaa
outsl
mov
pop
mov
fdivrl
loopne
add
push
lahf
fstpl
pop
mov
ljmp
adc
mov
push
cwtl
test
test
pop
cvtps2pi
insl
aam
sub
fsts
mov
xor
pop
rcrl
dec
jns
cmp
cmpsb
sbb
jbe
fstl
and
js
data16
push
jnp
xchg
popf
adc
jp
lods
iret
add
outsl
mov
rcrl
mov
adc
jnp
mov
mov
das
mov
and
or
aas
aas
mov
test
sub
dec
add
inc
cmp
out
pop
mov
in
fcoms
add
loopne
pop
push
mov
repz
inc
xchg
rcrl
sub
insb
cmp
lds
jno
test
out
idivb
pop
mov
mov
aas
outsb
sbb
lods
mov
sahf
dec
push
fimull
bnd
mov
cmp
sbb
cmp
inc
xchg
insl
imul
testb
or
or
jb
xor
addr16
repnz
xor
dec
into
idivl
push
push
xchg
sahf
clc
pop
pop
arpl
xlat
dec
dec
cmp
ret
test
mov
wrmsr
jmp
jmp
push
ret
adc
iretw
and
out
mov
dec
jnp
lock
jne
xor
inc
push
in
adc
lock
test
sub
scas
mov
add
jge
cmp
dec
mov
xor
xor
icebp
cld
into
cmp
fmuls
mov
inc
add
jae
ljmp
int3
cmpsb
fsincos
mov
push
jle
dec
xchg
xchg
mov
inc
dec
les
mov
mov
mov
incl
mov
mov
loop
jno
cmc
int3
xor
data16
pop
or
or
mov
sbb
and
or
cmpsb
cltd
out
mov
movsb
in
xchg
push
std
or
xchg
and
fidivrs
lea
mull
repnz
jne
lods
xor
lods
xor
arpl
mov
lret
fisubrs
add
popf
mov
stos
movsb
xor
cmp
xchg
into
and
push
sub
ss
sti
pop
cltd
sbb
push
lahf
push
mov
jae
adc
or
jecxz
xchg
je
add
dec
push
sub
pop
enter
push
xor
add
movq
aas
lahf
mov
jb
push
sub
or
add
pop
cmp
scas
pop
and
ret
out
xchg
jg
mov
leave
gs
adc
add
xchg
lea
ljmp
cmc
xchg
mov
inc
into
mov
xchg
outsb
jmp
and
mov
xchg
mov
inc
push
cmp
repnz
sub
test
jo
sbb
out
pop
pop
inc
cmp
push
popf
or
sub
cmp
dec
mov
adc
cmp
pop
adc
jnp
inc
push
cmp
add
aam
insl
stos
popa
push
std
popf
outsb
repz
enter
add
cmp
pop
ss
dec
mov
subl
fs
mov
or
nop
cmp
ss
ud2
mov
push
dec
test
test
pop
cli
hlt
adc
mov
jg
cmc
clc
inc
stc
jne
lds
mov
jnp
mov
lcall
fwait
lea
lahf
test
jnp
jne
sbb
das
rcll
addr16
das
push
cmc
push
jns
std
inc
ljmp
nop
pop
jo
jmp
mov
sbb
push
and
sti
sub
sub
mov
push
addr16
icebp
data16
test
pop
stos
xor
repnz
xor
sbb
sub
pusha
mov
pop
arpl
push
pop
adc
inc
push
test
xor
cmp
xor
add
frstor
aad
and
xchg
mov
nop
push
out
cmpsl
inc
aaa
sbb
fwait
scas
fistl
cmp
xor
push
xchg
adc
test
pop
and
adc
jle
mov
cli
shrb
out
xor
mov
test
shrb
sbb
mov
sti
arpl
and
js
push
cmc
pusha
inc
popf
loop
push
inc
mov
inc
add
ret
out
scas
mov
add
cmp
insb
movsb
adcb
ja
pop
dec
fcompl
icebp
push
outsl
daa
lock
scas
push
and
cmp
lret
mov
jo
leave
jno
add
imul
pushf
add
in
mov
xor
fistpl
into
push
mov
insb
cmpsl
ret
test
pop
jbe
repnz
inc
jae
mov
inc
xchg
cmpl
sbb
sub
dec
add
test
sti
js
adc
xchg
and
mov
push
xchg
cld
jmp
insl
push
iret
xor
mov
mov
pop
insb
lods
adc
scas
aaa
shrb
mov
pop
inc
mov
cld
hlt
or
mov
mov
mov
leave
push
movsb
or
les
add
mov
inc
jnp
andl
stos
xor
ja
and
ret
xchg
inc
push
push
inc
xchg
fisubs
or
sbb
lock
bound
xchg
dec
inc
lds
lret
add
pop
cld
pushf
mov
pop
nop
push
std
repnz
imull
mov
lods
lock
imul
ret
push
jnp
ja
jns
andl
stos
lret
xchg
rolb
xchg
pop
rclb
lds
push
pop
mov
or
outsb
and
xor
lea
sub
es
xor
enter
mov
sti
mov
aas
mov
fcoml
out
sub
or
or
roll
js
dec
add
mov
dec
outsl
adc
jg
mov
rcrl
gs
mov
cmp
and
xchg
lock
ja
push
enter
push
and
fnsave
jle
lods
loop
or
xchg
dec
cwtl
jg
in
mov
or
push
and
push
shl
fsubl
lock
dec
mov
jns
xor
bound
mov
movsb
pop
adc
push
and
aad
shlb
fbld
aad
push
and
xchg
mov
sti
fidivrl
pop
ljmp
ds
aad
fsubrl
mov
mov
test
mov
xor
mov
mov
lock
add
repz
cmp
xchg
push
sub
popf
add
pop
push
and
scas
insl
jg
mov
and
adc
scas
mov
filds
cmp
mov
rcrl
dec
sbb
cmp
mov
add
test
and
dec
ret
cmpsl
lods
dec
icebp
adc
test
adc
in
popa
xchg
inc
cmpsb
cmp
sub
xchg
pop
mov
lahf
lods
xor
inc
xchg
jecxz
mov
cs
add
jb
mov
cmpsb
js
or
and
jg
scas
jecxz
cmp
movsb
push
inc
push
xchg
popa
icebp
xchg
mov
and
add
push
scas
jl
pop
mov
orl
ret
ret
stc
out
adc
mov
mov
jnp
cld
mov
jg
std
sbbb
mov
out
hlt
dec
cmc
in
pop
xchg
adc
dec
adc
pop
xchg
xor
lret
add
and
into
subb
or
nop
sub
push
cs
testb
cli
lods
xchg
cltd
das
pop
xor
fstl
ret
jo
fdivl
mov
pop
xchg
shll
xlat
fsubrl
sahf
push
xchg
lcall
cwtl
push
pop
push
mov
sub
push
aaa
std
mov
ljmp
in
dec
and
lods
and
fdivrl
or
popa
pop
mov
stc
push
loopne
jle
mov
in
pop
ret
adc
dec
jns
das
push
mov
push
mov
aad
pop
mov
jo
fisubrs
shrb
fdivl
xchg
or
into
mov
iret
lea
mov
in
push
adc
and
rcl
xchg
aad
and
mov
cmp
dec
cmp
mov
fldl
shrb
dec
push
cmp
or
push
cwtl
rclb
lahf
mov
or
cltd
es
mov
sub
sbb
and
outsb
xchg
adc
imul
mov
xlat
sbb
mov
outsb
rcl
mov
js
dec
ja
mov
xchg
jp
rorl
shlb
push
xor
sbb
push
in
mov
out
cmpsb
lods
retw
lea
aas
stos
ds
les
pop
aas
imul
xchg
faddp
or
add
ret
inc
mov
push
pop
pop
mov
push
pop
cmp
mov
cmpsb
mov
pop
test
stc
sbbl
mov
shrb
stos
jl
fsts
shll
stos
push
js
or
hlt
push
pop
adc
movsb
cmpsl
lcall
scas
pop
push
pusha
hlt
inc
dec
inc
loope
shlb
pop
js
jp
jp
mov
cmp
push
scas
xchg
int
jge
pop
lds
loope
xchg
imul
xor
hlt
mov
xchg
xor
mov
sbb
test
jl
inc
cmp
push
jne
arpl
addb
ds
xchg
fisttps
inc
mov
mov
mov
cli
pop
cmpsb
cmpsb
jmp
imul
loopne
or
je
iret
push
adc
pop
loope
push
not
movsl
pop
xlat
adc
loopne
loopne
das
push
dec
outsb
scas
add
testb
sub
popf
pop
sahf
jg
mov
xor
pop
fucomip
pop
fcmovb
xchg
add
xor
lock
xabort
mov
dec
cs
ljmp
int3
in
insl
ds
sbb
xchg
jg
mov
ljmp
dec
dec
aaa
js
lret
mov
xchg
icebp
pop
xor
icebp
xchg
pop
test
stc
adc
pop
aam
fdivrl
xchg
add
dec
int
out
jo
add
int3
lods
pushf
in
ljmp
push
jb
cmpsb
cmp
inc
cld
dec
or
loope
and
xchg
and
pusha
insl
cmpsl
push
cmc
push
lea
adcb
xchg
loopne
push
or
push
in
ret
mov
xchg
cmp
or
leave
inc
sbb
inc
pop
inc
sub
adc
push
mov
pop
loop,pn
testl
divl
jl
adc
subl
adc
dec
sbb
shlb
adc
xor
inc
dec
es
lea
loope
out
xchg
sbbl
xchg
rolb
out
mov
mov
inc
aas
outsb
jmp
frstor
in
leave
push
cmp
jae
in
sub
data16
mov
jge
call
shl
pop
aaa
mov
xchg
add
mov
hlt
and
pop
repnz
pop
pushf
int
shrb
push
push
and
adc
hlt
inc
adc
xchg
mov
shll
or
xor
jecxz
stc
mov
push
pop
out
pop
add
in
pusha
jo
xchg
shl
cmpsb
mov
sahf
pop
outsb
fldcw
xor
je
test
inc
jb
xchg
es
test
ja
add
lahf
mov
fstpl
movsl
or
inc
mov
xor
mov
or
pusha
fsubrl
subl
lret
in
mov
and
xchg
xor
in
rcl
push
jnp
sbb
adc
in
push
lea
popa
stos
loop
inc
in
adc
or
sbb
push
into
pop
mov
lods
lret
fstl
nop
cmp
dec
fwait
jge
mov
jmp
repnz
jo
mov
setle
sub
test
mov
in
pop
es
inc
pop
cmovs
in
mov
mov
inc
ss
fidivs
leave
sub
shll
out
sbb
pop
fisttps
mov
loopne
xchg
adc
test
out
test
sub
popa
outsl
inc
ss
mov
jbe
jnp
cmp
xor
das
dec
inc
pop
test
cmp
pop
int
and
icebp
mov
les
lahf
push
push
cmc
rorb
add
and
stos
xor
or
jge
inc
or
dec
or
inc
xor
jno
dec
pushl
pop
and
lock
mov
adc
cmp
ret
sub
imul
pop
xchg
js
cmp
or
xor
clc
or
jmp
cmp
push
push
pop
mov
gs
push
xchg
fcomip
test
int
pop
mov
jne
sub
int
daa
je
leave
outsb
mov
and
pop
push
adc
nop
in
lods
out
out
inc
jmp
inc
inc
movsb
aas
lds
stos
inc
jl
xchg
pop
in
xor
dec
mov
mov
movsl
fstps
sbb
jo
divb
or
adc
loope
pop
xchg
jb
add
adc
loopne
push
inc
out
add
fs
mov
imulb
sbb
inc
mov
xchg
cmc
movsl
je
inc
sahf
ja
lock
loopne
in
jae
mov
pop
pop
jno
mov
arpl
sbb
addb
add
mov
xchg
mov
addl
in
xor
mov
jp
inc
mov
in
dec
lahf
in
add
stos
cli
pop
push
stc
dec
dec
sub
jmp
xchg
cmc
add
jnp
and
movl
bts
and
cli
shrl
in
push
hlt
leave
jle
outsl
xor
rolb
sub
sub
test
cwtl
mov
loope
lcall
imul
outsl
gs
out
fsubp
xor
imul
stos
cmp
jp
inc
setb
jg
jbe
mov
std
mov
jae
xchg
ja
pop
cld
add
mov
mov
push
insl
in
pop
lahf
jp
mov
sub
test
mov
fsubs
shrb
loopne
dec
mov
add
and
outsb
movsl
rorl
loopne
cli
in
clc
out
clc
sub
xor
jmp
nop
pusha
cli
mov
in
and
mov
movb
push
scas
jl
xchg
mov
ljmp
dec
xor
daa
sbb
popl
imul
pop
dec
outsb
inc
mov
pop
outsb
jne
mov
cs
cmpsb
fdivl
cmp
imul
sbb
sub
or
adc
lock
test
fisubrl
or
das
jge
sbb
inc
cmp
and
sbb
iret
push
movsb
mov
aas
jge
movl
xchg
xor
enter
bound
jb
popa
xchg
shll
dec
and
int3
pop
and
test
enter
xor
aas
push
lret
fnstsw
pop
mov
loop
mov
cld
and
xor
test
bound
aas
inc
dec
pop
inc
or
inc
sub
inc
push
jge
jge
cmp
addl
out
fstps
or
dec
out
jmp
shrl
dec
or
aad
add
jmp
fnsave
ret
iret
fsubs
and
jnp
adc
sbb
mov
popa
push
xchg
jmp
mov
pop
pusha
push
jb
push
rorb
mov
leave
mov
pop
push
daa
push
push
jbe
push
insl
in
stos
shrb
int
push
test
sti
xchg
and
mov
jns
pop
aas
jae
or
les
pop
sub
xor
and
xchg
jge
dec
mov
mov
mov
sbbb
inc
leave
or
or
pop
cmp
in
cmp
in
xlat
xchg
mov
push
incl
jno
pop
ja
lds
hlt
mov
push
or
int
enter
iret
sub
ffreep
inc
outsl
mov
loope
xchg
ljmp
fnstcw
adc
add
inc
mov
jo
xor
mov
sahf
jmp
daa
xlat
test
bound
adc
aad
stos
sub
test
repnz
jge
ds
and
mov
fwait
add
pop
je
cmp
jmp
mov
push
testl
popf
or
sub
add
pop
dec
mov
push
aas
xlat
test
leave
mov
ljmp
outsb
cli
sbbb
out
int
or
inc
aam
mov
push
fwait
stc
mov
jg
lea
pop
cs
test
xchg
inc
xor
mov
push
dec
rcrb
insb
and
xor
mov
test
jl
aad
mov
push
lret
and
orl
or
jns
mov
popf
mov
and
test
lea
cwtl
stos
mov
pop
fiaddl
lret
jb
xchg
sub
outsb
lret
jge
dec
mov
pop
or
mov
cmp
fistpl
mov
jecxz
add
fucomi
clc
cmp
ret
ret
ret
sub
lahf
mov
imul
fs
pop
mov
fwait
xor
mov
fistps
addr16
in
sub
imul
das
dec
loope
push
add
xchg
inc
repz
clc
mov
mov
out
sub
push
sub
ret
ljmp
pop
add
sub
lods
outsl
adc
into
push
or
imul
jmp
jns
int3
jp
pop
sbb
push
push
cmp
popf
mov
es
cs
mov
pop
stos
push
pop
hlt
test
mov
mov
cmp
insl
mov
push
mov
dec
stos
decb
inc
testl
adc
loopne
rorl
nop
cltd
lods
test
ret
pop
dec
vpsubusb
xchg
lds
shl
into
sarl
push
sbb
lea
sahf
icebp
sete
push
push
nop
dec
in
fisubl
aad
cmp
lcall
sar
iret
rclb
sub
jns
mov
in
test
popf
icebp
push
pop
pop
rorl
adc
inc
int3
cmp
aaa
fistpll
sub
xchg
xchg
xor
mov
loop
add
out
push
pop
clc
inc
pop
test
lods
sbbl
ret
cmp
repz
jne
rclb
mov
mov
pop
mov
dec
lods
lods
mov
pop
test
pop
dec
std
push
daa
insl
and
jmp
enter
and
es
in
jge
out
and
aam
movsb
mov
jle
lcall
daa
jp
pop
pop
xchg
sahf
es
js
dec
sbb
out
jg
dec
cli
iret
mov
ljmp
pusha
lcall
inc
push
add
jne
repnz
mov
cli
lcall
mov
mov
sarb
enter
add
jbe
inc
aad
pop
jno
test
pushl
enter
add
dec
in
xchg
iret
pop
add
call
gs
cltd
loope
push
add
dec
out
jecxz
out
or
out
sbb
out
out
push
jecxz
ja
into
and
inc
add
inc
aad
test
adc
adc
out
outsb
xchg
fucom
lcall
mov
add
aas
int
sbb
sbb
sub
das
pop
in
popa
mov
push
popa
stos
dec
jb
xchg
push
mov
fiaddl
jmp
aaa
xchg
sbbl
loop
shll
dec
fs
and
mov
inc
pop
xchg
rcrb
orb
nop
aas
mov
push
sarl
mov
xlat
in
loopne
xor
inc
es
rolb
shrb
add
jmp
lods
ret
sub
jno
mov
xor
mov
lahf
fnstcw
xor
fcmovnbe
and
aam
iret
jbe
cmp
mov
cmp
lcall
xchg
arpl
mov
push
xor
push
insl
sub
enter
insl
dec
fwait
dec
test
out
xchg
mov
xlat
pop
rcrl
lods
mov
pop
mov
xchg
mov
sarl
aam
dec
and
xor
lcall
ret
sbb
inc
inc
pop
loop
dec
cli
inc
push
pop
inc
sub
cwtl
xchg
xor
adc
dec
xchg
pop
outsl
mov
iret
jae
xchg
je
xor
jnp
idivb
mul
outsb
mov
push
xchg
add
dec
cwtl
cmp
sti
pusha
mov
test
xchg
movsl
fs
adc
mov
mov
ror
pop
rorb
mov
fsubrs
inc
mov
sub
sysexit
dec
bound
fdivs
xor
dec
pop
loope
sbb
xchg
ror
inc
mov
mov
sbb
jns
adc
mov
mov
pop
and
mov
in
rolb
or
push
pop
inc
movsb
fdivl
fdiv
jle
push
pop
and
jno
ret
enter
mov
pop
ljmp
pop
pop
add
xchg
jmp
fstl
test
xchg
jle
insb
jmp
cmp
hlt
dec
xchg
inc
iret
mov
call
out
pushf
push
adc
sub
sub
ds
push
adc
jg
jp
shlb
xor
xchg
adc
into
inc
sbb
mov
repz
mov
xchg
dec
call
scas
mov
mov
imul
in
xchg
push
cmp
dec
cli
aaa
cmpsb
xor
fisubrs
pop
inc
adc
xor
aad
loopne
imul
and
mov
mov
rol
sahf
clc
es
mov
xchg
lods
pop
pop
fildl
push
pop
mov
and
ret
pop
and
xchg
test
pop
into
adc
sbb
pop
nop
stos
mov
sbb
ret
test
fldt
imul
fsubr
test
sub
ret
iret
and
fwait
xor
cmc
cmpsb
lahf
lea
jmp
mov
clc
lds
pushf
imul
stos
cld
mov
test
aad
adc
in
jge
out
mov
loopne
cmc
ds
jnp
into
mov
loopne
ret
pop
push
add
push
out
gs
push
lret
test
jmp
push
xchg
in
mov
mov
sub
sub
aam
fcmovnbe
or
mov
cmpsl
mov
sbb
xorl
push
or
jp
ja
inc
mov
test
mov
inc
xchg
aad
scas
xor
stos
cwtl
out
mov
aad
mov
push
icebp
cmp
jne
testb
roll
mov
xchg
shrl
xor
and
mov
cmp
xchg
pop
cmc
test
mov
fs
cwtl
push
negl
mov
je
pusha
in
aam
cmp
mov
inc
cwtl
daa
int
nop
mov
cmpsb
rclb
or
push
add
pushf
loopne
xchg
je
mov
rcll
sub
lahf
lcall
mov
pushf
scas
scas
shlb
push
adc
or
jns
and
outsl
xor
enter
out
outsb
inc
ds
je
push
cmp
int
sub
ret
addr16
add
inc
in
hlt
mov
jnp
add
and
mov
inc
loope
stos
push
adc
insl
pop
pop
out
lock
ret
and
outsl
sbb
rclb
lods
movsb
sarb
push
mov
xorl
mov
out
xchg
jns
pop
mov
jns
scas
adc
jge
mov
cmc
into
dec
je
pop
adc
stos
lods
or
test
test
lods
sbb
btcl
les
mov
ss
sub
jp
xor
cli
lods
pushf
push
inc
cmp
stos
aaa
aad
lea
les
lret
dec
sub
mov
mov
and
bound
rcrl
cmpsb
xchg
jmp
sub
dec
lds
sub
mov
cmpsl
push
lret
or
adc
lcall
outsb
mov
cmp
jnp
sbb
add
arpl
mov
lcall
ja
inc
and
ret
xor
icebp
loop
in
insl
jo
iret
cmpl
stos
aam
leave
xchg
jne
sbb
pop
imul
repz
mov
dec
lahf
imulb
adc
insl
jbe
mov
cld
push
popf
cmp
pop
out
testb
pop
out
js
xchg
hlt
push
cmp
ficoml
pop
or
lret
fcomps
shll
lea
cmp
negb
jae
mov
cli
cmpsb
in
test
shlb
xchg
mov
dec
mov
push
int3
icebp
xchg
dec
sub
pushl
mov
pop
int
xchg
jbe
lret
hlt
sbb
testl
inc
js
out
lahf
enter
call
out
sub
pushw
push
xchg
push
out
mov
and
mov
das
mov
add
xor
cld
mov
testl
xchg
push
loopne
push
and
cmp
cmp
fwait
xchg
repnz
cmp
inc
jo
insl
push
ret
jae
push
push
ret
jns
es
sub
jno
pop
adc
pusha
pop
out
shlb
cmp
cli
mov
movq
loopne
fidivrs
ja
lcall
xor
shrl
cmp
loopne
nop
movsl
shrl
cwtl
rcl
xor
movsb
out
or
sbb
call
mov
decb
rclb
adcb
mov
fimuls
mov
test
aas
inc
adc
or
dec
jo
bnd
pushf
xchg
cmp
and
lret
jns
jae
xor
das
loopne
adc
sub
dec
xchg
cmc
lmsw
pop
jnp
cli
sahf
dec
mov
mov
add
cs
dec
filds
cmp
mov
pop
jp
jne
add
in
add
mov
xchg
sbb
add
push
mov
jmp
mov
mov
punpckhqdq
sub
add
inc
adc
mov
out
repnz
xlat
outsb
xchg
cmpsb
fsubs
outsb
add
fsts
gs
test
pop
push
jmp
int3
mov
lahf
xchg
mov
jno
sub
xor
mov
outsb
dec
fimull
aad
cmpl
dec
inc
lock
pop
lahf
push
out
lret
xchg
lret
push
cmp
or
or
add
cmp
bound
jo
push
test
int
fsubp
cmp
notl
mov
sbb
cs
imul
ljmp
and
iret
loopne
dec
or
lods
sub
pop
inc
lock
dec
psrad
ds
ret
test
jno
sbb
sbb
fcomps
jl
jle
mov
addl
pop
jne
sub
pop
cmp
notl
xor
in
mov
mov
loop
clc
sar
cmp
icebp
scas
shll
xor
ror
mov
sbb
das
int3
and
std
cli
icebp
or
jae
pop
push
sub
fisttpll
cltd
pop
jae
mov
mov
sbb
fadds
pusha
sahf
add
jne
push
test
jle
inc
jg
push
int
cmc
ret
ret
adc
sti
sub
cmp
lahf
inc
sbb
arpl
xor
faddl
xchg
clc
popf
pop
xchg
sbbb
mov
inc
ret
inc
xchg
and
in
cmp
dec
push
add
outsb
mov
cmp
sbb
in
loopne
sub
vpinsrw
vpmacsswd
clc
scas
ss
je
mov
push
xchg
jo
pop
adc
sub
ret
pop
dec
mov
push
pushf
dec
out
inc
mov
jno
jns
leave
ja
ljmp
sbb
xchg
outsl
pop
adc
pop
fidivrs
add
mov
js
push
fs
in
stos
les
pop
outsb
cs
xchg
xchg
or
sub
out
in
xchg
inc
inc
jp
cmp
fstps
adc
and
dec
ds
add
jne
inc
fildl
jbe
sub
and
jl
mov
loope
inc
jno
mov
pop
pop
or
sbb
mov
pop
lahf
ja
pop
adc
lea
in
push
sbb
adc
sub
mov
cmp
out
loopne
mov
xchg
aam
insl
sar
test
sub
cmp
pop
push
pop
daa
sub
jnp
pop
sub
sti
mov
push
cltd
jo
int
mov
shll
mov
jge
aad
mov
fsubs
xchg
pop
or
add
sbb
jns
sub
add
and
mov
popa
jle
cmp
nop
pop
cmp
mov
mov
push
cld
leave
add
aas
sbb
outsb
repnz
push
js
push
popf
test
sarl
comiss
cmovp
jp
mov
filds
in
inc
xor
push
lret
nop
or
les
aaa
and
das
or
loopne
mov
cmp
out
int3
cmp
inc
and
data16
out
xor
mov
jae
insb
mov
ret
and
insb
mov
push
out
jge
and
fldt
pop
je
sbb
sti
mov
andl
mov
test
mov
sub
nop
inc
sbb
jle
mov
fsubrl
cs
pop
ret
pusha
mov
mov
nop
dec
add
mov
jo
mov
xchg
xchg
mov
mov
mov
push
and
fidivrs
mov
mov
xor
clc
sbb
jl
and
dec
or
cmpsb
addr16
adc
ljmp
rcrl
iret
ds
orl
jecxz
add
xchg
jne
and
call
lret
sarl
mov
sahf
mov
lds
mov
dec
cmp
fldt
mov
clc
xor
push
insb
adc
xor
adc
cmp
sar
inc
lcall
xrelease
std
mov
sbb
dec
repnz
inc
adc
xchg
or
scas
adc
mov
andl
dec
push
ja
in
repnz
pop
sbb
jge
adcb
xor
jmp
xchg
fisttps
sbb
in
shll
jns
rorl
repz
sti
fisubrs
fsubr
jle
sub
aam
pushf
clc
add
clc
xchg
lcall
inc
loope
stos
out
pop
test
sbb
lds
mov
or
lahf
or
cmp
insb
out
leave
clc
out
cmp
cmp
fwait
das
mov
popa
fisttps
mov
rolb
mov
push
mov
stc
jl
lcall
enter
cmp
je
sbb
mov
shrb
js
fsubr
repnz
or
cmpsl
loop
push
std
dec
lcall
pushf
cwtl
subl
sub
insl
mov
inc
or
int
push
push
into
or
adc
and
pop
dec
mov
and
xor
cmp
sub
scas
int
jecxz
frstor
iret
filds
ja
rcll
insb
dec
inc
xor
ljmp
push
mov
fnsave
sti
inc
push
push
adc
repz
cwtl
dec
pop
push
lea
rol
mov
fwait
xchg
addl
dec
xor
push
mov
or
ja
stos
add
pop
mov
repnz
in
push
xchg
aam
sub
sbb
ja
xchg
mov
xchg
out
mov
scas
or
in
push
mov
or
dec
popa
mov
pop
cmp
inc
dec
add
loope
movsb
cwtl
xchg
cmp
mov
jns
fildl
lret
repz
ret
push
loope
pop
imul
in
inc
xor
dec
mov
or
int3
cs
adc
pop
xor
sbb
xchg
xor
mov
xchg
inc
mov
lret
ficomps
je
xchg
mov
ret
rcrl
inc
xchg
das
stos
push
inc
repnz
dec
sub
cmpsb
clc
outsl
jge
hlt
arpl
scas
jb
pusha
push
xchg
je
mov
movsl
push
jns
mov
in
and
mov
icebp
fwait
in
imul
inc
xor
jmp
aam
lock
or
mov
fdivrs
test
add
lret
ret
xor
repnz
sbb
and
dec
sub
mov
cmp
push
cmp
cmp
ds
adc
cmc
xchg
dec
xchg
shl
cli
add
pop
mov
adc
je
sub
dec
mov
movsb
hlt
mov
inc
aaa
dec
ds
sbb
dec
push
stos
add
addr16
xor
gs
std
pushf
xorb
fistps
aas
jp
scas
popa
adc
mov
sub
testb
and
xchg
cli
mov
xchg
sbb
cli
jp
outsb
sub
adc
or
aaa
sub
jno
inc
movsb
fldcw
outsb
inc
in
pop
cmpsb
dec
mov
jnp
inc
sub
data16
mov
sub
aaa
pop
inc
inc
pushf
mov
jl
mov
or
push
or
xchg
xor
mov
outsl
popa
aad
xchg
and
jno
sub
pop
std
and
cs
shrb
dec
jp
int
or
xchg
jns
outsl
push
xor
imul
mov
enter
adc
fldenv
pop
jb
mov
mov
mov
test
or
stc
ret
or
push
stos
nop
mov
repnz
clc
scas
xchg
cmp
xchg
aas
add
add
push
and
ret
std
mov
jge
out
into
cltd
jno
outsl
add
pop
loop
adc
push
adc
mov
cmp
test
mov
mov
xlat
ja
fimuls
loope
test
adc
dec
nop
cmc
gs
rdtsc
xchg
mov
loope
daa
pop
adc
push
xor
jne
or
pop
mov
scas
sub
ljmp
mov
lods
mov
mov
xor
inc
mov
lock
cmp
dec
sub
sarb
daa
mov
pop
in
mov
or
into
imul
notl
outsb
jge
inc
dec
data16
je
or
mov
xchg
mov
inc
jecxz
leave
cltd
ret
lods
repnz
inc
je
fsubrs
push
pop
out
xchg
pop
movsb
mov
test
pop
adc
les
adc
stos
push
movsb
mov
fmull
aad
mov
call
or
xchg
mov
out
aaa
inc
fistl
mov
out
out
mov
in
pop
dec
mov
test
mov
xchg
repz
inc
pop
lret
push
inc
xor
or
in
jmp
sahf
inc
mov
pop
pop
pcmpeqd
cmpsl
inc
push
hlt
mov
dec
sbb
push
adc
int3
cmp
lret
or
mov
loope
repnz
test
or
scas
push
adc
or
push
pop
adc
cmp
stc
add
fwait
arpl
inc
mov
xchg
lcall
mov
xchg
ror
in
add
mov
dec
push
nop
aas
pushf
test
loop
ljmp
sbb
inc
push
push
cli
outsb
cli
jbe
xor
adc
rorl
mov
pop
adc
or
mov
push
scas
fwait
adc
mov
cmp
jb
or
rcr
xor
mov
cmp
rcrl
mov
imul
repz
sbb
mov
cmp
mov
mov
xchg
cmp
mov
negb
into
and
into
gs
mov
push
das
call
frstor
in
xor
cmp
adc
mov
std
mov
sub
cltd
test
movsl
push
fs
fs
fldt
stc
xor
mov
test
fnstcw
lret
daa
mov
xchg
cltd
pop
xorl
jg
icebp
das
filds
mov
xor
mov
pop
xlat
add
test
movsb
mov
mov
inc
push
xchg
mov
add
stos
insl
xchg
adc
lea
or
lds
stos
andl
mov
outsb
gs
test
lret
inc
jmp
cli
cwtl
aad
cwtl
mov
jne
dec
adc
and
adc
fdivs
test
sub
mov
push
stos
dec
mov
aas
xchg
aam
inc
cmp
pushl
mov
sub
cmp
pop
inc
lock
js
add
and
fcmovnbe
fwait
in
bound
push
test
push
mov
adc
lcall
mov
int
fisttpl
push
mov
fstpt
dec
and
arpl
loopne
cs
cmpsb
push
js
and
dec
in
aad
and
mov
call
xchg
pop
cltd
push
jle
int3
loopne
cmp
aam
cmc
imul
cmp
decb
jle
dec
sbb
subl
and
mov
pop
stos
gs
sbb
iret
jl
lods
nop
out
andb
mov
aaa
fdivs
scas
jae
fwait
lahf
push
pop
xor
sub
sbb
xchg
xchg
and
out
mov
cmp
or
xor
cli
pushf
out
dec
or
xchg
xor
mov
das
mov
cli
jge
push
stc
fsts
enter
std
rolb
add
insl
jg
insb
dec
hlt
dec
ss
insl
loopne
and
add
rcl
aaa
xor
jb
in
fisttpl
call
les
add
pop
clc
test
inc
xor
cld
adc
lods
test
xor
shll
add
lock
scas
push
add
data16
fsubrp
cmp
adcl
xchg
shrl
subl
adc
inc
cltd
cmp
leave
jns
push
pop
hlt
lds
je
jecxz
lock
pop
pop
dec
pop
jmp
fnstenv
lea
lea
xchg
pusha
adc
dec
inc
jae
divl
push
repz
push
sub
andl
ret
xor
mov
push
outsb
cltd
fnsave
sbb
mov
lcall
dec
cmpb
or
lods
jl
sbbb
loopne
mov
out
push
mov
push
pop
shlb
cmpb
jp
in
fwait
mov
pop
sbb
test
pop
xchg
leave
sarb
test
pop
fbstp
mov
in
mov
fcoms
in
push
mov
pop
mov
cmp
sbb
outsl
sbb
jns
xchg
outsl
push
sbb
jb
xchg
and
pop
mov
fnstsw
mov
mov
or
stc
movsl
stos
call
mov
push
aas
popa
dec
das
add
insb
pop
sbb
cmp
repz
loopne
mov
adcl
lcall
inc
or
lods
push
sbb
loopne
jge
xchg
cld
addr16
out
adc
pushf
ja
fsubl
stos
out
adc
cmp
les
ss
jb
icebp
shlb
das
bound
xchg
aaa
movsb
cmc
lods
add
das
lock
test
ror
sub
arpl
ljmp
sub
push
mov
imul
and
push
in
mov
mov
shrl
fwait
push
sub
out
mov
mov
fistpll
mov
fadds
and
xor
addr16
jnp
mov
adc
data16
sbb
xor
or
lcall
jl
jle
inc
test
lods
movsb
push
xchg
pop
push
cli
fldenv
icebp
sbb
cli
cli
repz
fcmovnbe
outsl
fs
cltd
push
fistl
push
inc
clc
add
cmp
xchg
dec
jg
fs
jmp
pop
es
in
mov
push
jmp
cltd
movsl
pop
pop
xchg
inc
pusha
push
test
ljmp
xor
mov
shll
jmp
sbb
in
sub
das
aam
jae
lods
add
in
lret
sti
or
sbb
cwtl
cmp
ljmp
in
inc
leave
popa
mov
mov
adcl
jb
sbb
cmp
test
fs
cltd
je
pop
inc
mov
cmpsb
out
jns
pop
pop
xchg
jno
push
pop
ret
push
and
add
add
insl
dec
clc
jg
cmp
jno
dec
imul
test
push
ljmp
mov
test
push
pop
dec
shlb
jo
jne
and
push
outsl
out
mov
cmpsl
popf
sahf
mov
mov
pop
ficompl
xchg
lock
scas
pop
or
add
arpl
pop
jg
and
addr16
cmp
jno
sti
iret
addr16
gs
es
repz
fistps
xchg
pop
mov
enter
or
and
sub
push
in
dec
mov
lea
clc
adc
scas
sub
mov
lods
pop
mov
sub
movsl
push
mov
mov
lods
in
xchg
stos
hlt
sub
out
mov
ljmp
jo
adc
jp
mov
fmul
es
inc
fsubrl
movaps
test
and
mov
jmp
and
or
jae
sarl
ffree
fnstsw
and
sahf
out
icebp
lcall
loop
cmp
add
pop
les
pop
dec
cmpsl
adc
jne
mov
xchg
pusha
rcrb
shll
in
fiadds
lahf
ljmp
adc
dec
in
daa
iret
mov
push
in
cmp
adc
insb
shrl
jo
popa
and
repnz
inc
shrb
mov
sbb
mov
mov
cmp
jl
ljmp
pusha
icebp
stc
xchg
cmp
mov
jno
jae
int3
xchg
pop
dec
sbb
ss
push
loop
lods
imul
leave
and
fiadds
mov
lock
mov
add
mov
shlb
stos
gs
fmul
ss
in
and
push
adc
push
pop
xor
fwait
dec
sbb
fstps
icebp
test
adc
outsb
in
insb
sbb
push
adc
adc
sub
inc
cmp
popf
cli
fsubrl
xchg
and
jl
repz
test
fimuls
scas
lahf
push
add
pop
repz
pop
lret
pop
cmc
xor
clc
push
into
addps
movsl
jl
xchg
lea
xor
shrb
inc
cmp
dec
add
add
dec
push
or
repz
mov
sbb
clc
xchg
out
or
arpl
icebp
cmp
push
or
lock
cmp
adc
jge
cmpsl
stos
push
ret
sub
jge
inc
adcb
dec
ljmp
stc
ss
rorl
movsb
xchg
repz
stc
in
out
fsqrt
sbb
rcrb
xchg
test
add
xchg
aas
mov
sub
dec
into
pop
jmp
mov
shr
mov
lds
sti
cltd
clc
pop
pop
mov
loop
out
mov
movsb
mov
arpl
in
xor
mov
lods
inc
mov
sub
pop
aas
outsl
lret
or
daa
lcall
stos
pop
scas
xor
stos
outsl
mov
ss
mov
push
cmp
or
push
jge
inc
sahf
in
popf
shlb
and
bound
mov
xchg
sbb
inc
mov
inc
mov
sbb
fisubrl
sti
sbb
xchg
lea
jb
cmc
ds
jecxz
push
stos
push
fdivrs
push
xchg
fdivl
nop
cmp
xchg
je
mov
fimuls
sti
jns
fsubrl
mov
addr16
insl
punpckhwd
inc
daa
sbb
js
iret
loop
out
out
cmp
jbe
sarl
addr16
mov
out
jnp
mov
lcall
mov
inc
rol
testl
lret
xchg
jns
pop
pushf
lret
bound
mov
bound
popf
push
push
imul
insb
xchg
sub
fwait
js
nop
mov
vmwrite
fnstenv
push
mov
sub
fwait
jae
sub
sub
ja
adc
xor
inc
scas
iret
pop
adc
jp
pop
dec
jmp
xchg
push
in
test
outsb
inc
cmp
cmp
outsb
push
or
cs
xor
xchg
lds
cmpsb
ss
xchg
jmp
sbb
xor
dec
jbe
mov
ret
insb
and
jbe
stos
xorl
push
xchg
enter
xor
dec
sarb
sti
inc
add
dec
mov
inc
shll
mov
and
lods
xchg
ljmp
mov
mov
xchg
fwait
not
push
aas
xchg
add
mov
pop
mov
sti
mov
jle
adc
aaa
fdivr
adc
dec
and
mov
jle
outsl
into
in
in
lcall
pop
js
dec
fsubp
bnd
insb
sub
sahf
call
push
pop
les
dec
mov
sub
std
test
mov
inc
push
xchg
iret
xor
sbb
icebp
jmp
bound
mov
adc
jmp
or
shll
out
push
into
or
lcall
mov
or
push
mov
cld
stc
adc
adc
lods
adc
movsl
nop
push
push
out
js
orb
push
push
lcall
ror
jbe
aaa
jecxz
dec
in
andl
push
adc
xor
inc
scas
mov
mov
jns
add
incb
js
lock
sbb
jno
or
pop
test
arpl
jno
sub
mov
outsb
push
and
sbb
out
test
out
cltd
outsb
rol
add
adc
outsb
fildl
xor
fsubl
ret
shr
dec
push
stos
insb
mov
pop
popa
pop
iret
adc
dec
movsl
aad
pop
in
cmp
sti
call
mov
sbb
mov
push
xchg
inc
pushf
clc
call
ss
pop
es
fld
mov
add
add
xchg
pop
sub
push
imul
adc
push
jge
xchg
fadd
fdivs
sahf
bound
adc
ljmp
ret
xchg
inc
or
nop
jnp
cltd
imul
xchg
push
insl
aaa
or
jmp
inc
push
mov
punpckhwd
pop
int3
sub
add
cli
and
mov
adc
xchg
push
lods
jge
sti
push
out
inc
pop
sbb
push
outsl
les
gs
xor
jae
jae
push
add
inc
jmp
out
je
mov
mov
push
sub
sbb
add
mov
or
ret
push
bnd
sahf
fistpll
das
mov
push
mov
cmp
jbe
sbb
xor
repnz
pushf
dec
cwtl
dec
mov
shrb
jge
mov
dec
add
ret
ljmp
or
les
in
mov
mov
lods
cmp
inc
imul
and
insb
leave
add
jb
or
xchg
push
adc
cmp
mov
lds
pop
sub
fcompl
fdivl
lret
mov
scas
aas
out
sbb
pop
pop
xchg
mov
cwtl
inc
push
cmp
mov
sub
mov
cmp
pop
ds
cltd
jg
lds
mov
test
daa
in
aas
mov
push
sub
xchg
sub
stos
aas
adc
ret
leave
mov
dec
and
xor
mov
fsubp
pop
mov
and
xchg
movaps
push
and
cmpsb
xor
pop
jl
lret
pusha
cmpl
cmp
jbe
cmpsb
adc
xchg
fstps
lods
rorb
jge
std
mov
mov
incb
stos
ss
push
sbb
in
mov
mov
mov
cmp
je
adc
add
mov
push
mov
loope
pop
rorl
fninit
sbb
es
outsl
mov
mov
inc
pop
jmp
mov
pop
pop
leave
inc
mov
push
lret
into
inc
lcall
in
add
test
or
add
lret
push
mov
and
pop
and
pop
aas
sub
cld
sbb
jne
dec
cwtl
and
inc
cs
or
lret
jb
fsubrs
mov
fisttpl
in
dec
lock
pop
mov
mov
aaa
sub
imul
mov
lds
adc
cmp
mov
js
sbb
and
dec
adc
rolb
cli
pop
add
out
movsb
in
int
shlb
insb
jmp
lret
roll
sub
sahf
mov
in
test
xchg
hlt
popa
aad
hlt
mov
or
adc
add
cli
out
jmp
sti
pop
leave
sbb
stc
push
ds
jnp
sarl
in
in
lea
adc
loopne
repz
mov
inc
stos
xchg
loop
add
mov
cmp
and
enter
rcrb
mov
or
mov
out
xchg
adc
push
sbb
push
loope
add
pop
pop
sub
dec
xlat
call
mov
in
ljmp
fildl
idiv
inc
or
into
repz
scas
sub
xchg
adc
sub
sbb
lret
jl
xchg
aad
lods
pusha
lcall
cmpsl
inc
and
sbbl
add
xor
lret
aad
sarb
aam
adc
pop
push
scas
out
xlat
mov
cmp
dec
dec
fnsave
jmp
push
stos
jecxz
iret
jp
mov
out
imul
push
xchg
mov
pop
aam
mov
add
jb
rorl
pop
pop
movsb
dec
cld
sub
test
add
sub
in
hlt
les
cmp
jbe
arpl
xor
sub
mov
jle
out
leave
inc
rorb
pop
sub
imul
sbb
incl
bound
fisubl
cmpsl
test
adc
dec
arpl
sub
dec
dec
mov
add
aas
xchg
inc
jae
sbbl
rcr
or
adc
icebp
hlt
inc
xor
rcrl
mov
xor
sub
push
cld
cmpsb
fldl
in
adc
cmp
mov
push
push
mov
in
push
cld
sbb
lahf
pop
add
fstpl
mov
jno
pop
dec
std
insb
push
adc
mov
xchg
sbb
gs
add
test
jg
or
mov
push
aam
sahf
loopne
inc
aas
xor
mov
pop
rcll
add
arpl
pop
dec
push
sub
push
out
sbb
jnp
aaa
sbb
insb
dec
mov
jnp
sti
mov
mov
mov
test
sbb
sahf
ret
xchg
cmp
jmp
inc
pusha
push
sbb
rcrb
dec
shrb
push
imul
xchg
adc
add
adc
out
add
outsb
daa
clc
popl
mov
repnz
adc
xor
insl
das
sbb
pop
sub
mov
mov
neg
mov
mov
lods
insl
mov
or
aaa
test
aas
icebp
cld
mov
psubq
bound
sub
pop
cs
out
mov
sarl
cmp
outsl
aas
jge
lods
leave
imul
aaa
and
and
lods
pop
xchg
leave
cmpsl
out
mov
imul
addr16
jo
mov
pop
or
out
call
mov
adc
jo
scas
xchg
popa
sarb
test
mov
pop
or
jne
stos
xchg
add
rorl
je
mov
bound
xchg
stos
in
cmp
std
dec
lret
fnsave
insl
stc
mov
insl
sbb
push
mov
dec
ret
sbb
push
mov
and
push
xchg
lahf
lret
imul
dec
out
push
or
mov
sub
lret
lock
shlb
mov
stc
mov
sbb
inc
ljmp
call
pushf
lahf
xchg
or
shlb
sub
mov
int3
insb
mov
scas
outsb
push
rcll
xchg
fsts
nop
mov
lds
mov
pop
sub
push
repz
int3
mov
ljmp
add
sbb
daa
outsl
jge
jmp
icebp
int
test
cmpsb
mov
cmc
not
data16
or
shll
mov
mov
mov
jae
call
mov
aas
repz
mov
ret
jge
lock
cwtl
xchg
or
iret
in
movsl
push
imul
scas
imul
or
push
fdivr
cmpsl
mov
inc
mov
add
dec
sbb
add
fidivrs
mov
adc
int
add
mov
inc
jg
and
lods
out
mov
lods
mov
scas
sub
ror
inc
cmp
aam
cmpsb
xchg
sbb
fdiv
ds
paddd
adc
adc
ja
push
in
sub
mov
mov
cltd
cld
icebp
outsb
mov
outsb
out
pop
adc
jnp
jge
xorb
and
pop
cmp
sbb
lds
mov
fidivrs
aad
ja
stos
icebp
aaa
lea
pusha
pop
cmp
hlt
jmp
sub
loop
int
xor
in
pop
mov
aaa
dec
test
mov
icebp
dec
xchg
sub
jns
fcoml
fmul
test
scas
jle
mov
mul
mov
inc
lret
adc
xor
jecxz
ud0
sub
andb
sub
cmc
xchg
adc
push
and
jns
in
and
out
or
inc
or
mov
pop
addr16
lret
cmp
pop
mov
add
clc
sbb
ficoml
inc
int3
sub
push
jle
pop
mov
mov
xor
mov
push
pushf
cld
xchg
ret
cmp
fwait
lds
stos
adc
cmp
mov
cltd
out
pusha
shl
push
dec
clc
sub
std
sbb
inc
mov
cmpsb
addr16
rcll
es
add
popa
dec
jecxz
cmp
clc
rcll
jecxz
add
xchg
sti
rcrl
subb
xchg
sbbb
in
add
sbbb
lea
bswap
test
add
adc
jle
cmc
mov
xorl
jge
sub
imul
pop
mov
mov
jb
in
lock
sub
pop
je
xchg
xor
pop
imul
ret
stc
sub
mov
cltd
clc
mov
mov
cmp
dec
loopne
inc
gs
testl
or
sub
mov
jns
xor
mov
lods
mov
xorl
in
and
std
imul
add
or
add
cmpl
fs
push
adc
andb
jmp
pop
mov
or
or
jmp
in
sarb
mov
mov
ds
inc
pop
cli
and
inc
pop
pop
inc
jae
imul
fimull
xor
add
fimuls
cmp
fwait
mov
pop
push
jmp
adc
sub
jl
or
xchg
clc
fists
adc
aam
dec
adc
jg
sbb
setnp
out
cmp
outsb
sarb
int3
push
les
jg
sub
enter
or
xor
cmpsl
pop
dec
jne
insl
xchg
mov
repz
sub
sub
mov
int
pushf
xchg
jns
dec
xor
mov
sbb
das
xor
adc
pop
and
jbe
push
cmp
push
out
add
fdivrs
aaa
test
cmpsb
inc
in
loop
stos
mov
loope
sbb
dec
sahf
or
pop
ja
and
fistpl
or
frstor
jecxz
imul
jmp
icebp
js
xchg
dec
pop
testl
je
jnp
rcrl
mov
mov
mulb
jbe
jo
inc
push
push
push
cmc
in
xor
adc
pop
ret
mov
push
inc
arpl
mov
adc
cmc
loope
adc
adc
lahf
inc
dec
cmp
add
iret
fldl
push
cmpsl
sbb
add
out
or
jbe
push
mov
dec
movsl
or
movsl
loopne
jae
pop
adc
jp
xor
test
dec
aam
shr
stc
fimull
test
repz
sbb
sahf
ljmp
rol
push
jl
inc
shlb
jno
xor
or
sbb
mov
jecxz
out
and
adc
or
shlb
or
lahf
jl
mov
push
mov
jg
and
xor
push
cmp
push
arpl
fwait
sub
movsb
and
dec
sbb
pop
push
mov
addr16
mov
out
pcmpeqb
mov
cmp
lea
mov
test
stos
subl
pushl
cwtl
pop
fildl
and
push
mov
out
add
pop
imul
mov
sub
cld
dec
jl
pop
adc
adc
add
scas
push
fcmovnu
insl
jo
shll
or
add
adc
mov
sbb
pop
aas
inc
insl
inc
push
ret
jg
xlat
aaa
or
push
leave
lds
xor
ret
jp
outsl
ret
mov
fstp
or
aaa
aas
loop
imul
adc
jne
repz
out
add
jb
or
sbb
jecxz
mov
pop
das
int
arpl
dec
in
pop
sub
inc
bound
pop
push
xchg
push
push
push
test
out
sbb
loopne
mov
push
jnp
sub
xchg
push
aas
call
adc
xor
inc
or
enter
xchg
xor
adc
mov
lahf
sub
js
pop
notl
mov
shlb
out
push
cmp
jbe
cmp
js
xchg
ret
push
inc
loope
mov
pop
pushf
mov
jns
jp
jbe
dec
loop
movsl
add
inc
imul
mov
mov
mov
adc
mov
into
jnp
xor
jp
jbe
cltd
xor
adc
xchg
ljmp
dec
test
add
mov
leave
stos
popf
outsl
inc
icebp
push
pop
xor
xor
sbb
jne
jns
dec
mov
clc
cmp
sbb
loope
mov
in
adc
test
push
adc
cmp
jae
and
mov
adcl
loopne
cltd
xchg
adc
into
xchg
inc
push
adc
add
xchg
clc
fdivp
xor
sub
push
repz
jnp
mov
mov
cwtl
cmp
mul
bound
ja
orl
ss
push
unpcklps
jp
jne
dec
jmp
in
xchg
flds
mov
push
push
test
sbb
stc
pop
std
pop
jnp
insl
testb
xorl
pop
push
adc
jp
inc
inc
add
out
inc
jo
gs
pushf
mov
push
push
lods
xchg
push
aad
inc
cmpsl
stc
into
ss
hlt
sbb
xorb
lret
mov
popf
inc
aas
dec
mov
test
int3
cmc
ljmp
fucomi
call
aas
fucomp
iret
loop
aam
cmpsb
cmp
push
cltd
fs
call
outsl
call
mov
sti
int3
aad
cmp
add
jae
push
jne
sub
inc
xchg
cld
cmpsb
aaa
push
cmp
test
pop
mov
xor
lods
push
cltd
sub
movsb
push
sbb
outsl
in
mov
mull
jnp
dec
jge
mov
mulb
cmc
add
pushf
adc
clc
addr16
push
repz
and
inc
jae
pop
push
mov
int3
add
shll
call
filds
jno
cld
xchg
pop
dec
jb
dec
push
cmp
sbb
leave
and
mov
mov
mov
xchg
pop
lcall
fldl
fucomi
pop
fadd
jmp
inc
lods
lds
pushf
int
cwtl
rcll
stos
out
mov
push
das
jg
add
push
std
add
cmc
lcall
lock
and
sbb
es
stos
fld
rol
ds
mov
mov
in
sbb
fs
andb
mov
jb
in
cld
cmp
inc
inc
adc
jg
into
xchg
notb
out
add
inc
out
push
mov
enter
mov
xor
pushf
xchg
dec
bound
mov
inc
rol
cld
xchg
push
jno
mov
fwait
pop
out
out
sbb
adc
dec
mov
orl
push
ja
jmp
sub
sbb
aas
in
fcomps
xchg
arpl
jne
xlat
ds
inc
imul
rol
pop
pop
and
icebp
adc
fisttpl
mov
incl
push
jb
jp
shll
scas
pop
xor
xor
and
leave
jg
iret
cmp
outsl
mov
dec
movsl
mov
outsl
mov
jg
jno
call
push
sub
fcmovu
add
xchg
popa
gs
dec
int
cld
negl
cmc
sahf
mov
lcall
test
into
orl
pop
fwait
out
scas
dec
std
dec
pop
aaa
push
and
aas
not
pushf
xlat
outsb
fnsave
jge
xor
mov
mov
hlt
outsl
shl
lock
mov
sub
repz
xor
fiadds
es
jge
cmp
jmp
rcr
push
jnp
cmpsl
fimull
subl
xchg
mov
popf
or
popf
xchg
xlat
pop
sbb
iret
mov
and
jle
sub
scas
mov
stos
imul
pop
movhps
out
shrl
clc
adc
and
and
loop
js
xchg
add
stc
jae
rcl
into
mov
inc
cmp
out
adc
mov
pop
dec
cmp
in
mov
fs
ljmp
lret
cmp
sub
leave
out
ret
mulb
and
mov
add
mov
push
push
and
push
in
sbb
or
leave
cwtl
test
sbb
xor
mov
test
sbb
in
fstps
das
stc
imul
jle
ds
fldt
jmp
mov
push
push
addl
sub
cmp
pop
fisubrl
push
or
stc
lds
hlt
jmp
cmpsb
mov
jp
jl
ficoms
outsb
hlt
and
pushf
scas
pop
push
fcomp
inc
nop
mov
pop
shrb
xor
push
fildl
movsb
cmp
add
test
xorb
xchg
scas
rcll
ja
insb
dec
out
fcom
add
inc
fdivl
mov
mov
mov
out
in
xchg
pop
xchg
inc
lock
cwtl
scas
or
imul
mov
cmp
mov
mov
xlat
mov
popw
aad
add
mov
cmc
jecxz
jno
mov
sbb
imul
fnstenv
xchg
ljmp
xchg
ja
gs
roll
add
gs
push
push
jae
js
fwait
in
das
scas
js
and
sbb
fcoml
sbb
imul
pop
xor
adc
scas
in
sbb
dec
and
in
setge
and
lea
divl
loop
push
jg
jo
into
cmp
ficoms
mov
clc
fcompl
dec
push
push
cs
aas
pop
sub
loopne
bound
repz
pop
popf
cmp
ja
sbb
cmp
pop
pop
pop
into
pop
cmp
out
add
dec
jb
mov
jne
mov
cmp
aas
and
pop
aas
scas
mov
cmp
pop
xlat
orb
and
dec
lods
fstpl
xchg
inc
xchg
lods
sbb
fwait
into
push
test
call
cltd
orb
divl
arpl
cld
movsb
mov
in
out
push
enter
scas
scas
mov
push
jmp
mov
mov
test
jnp,pn
fdivrs
into
cmp
ja
dec
xchg
repnz
mov
mov
push
add
adcb
decl
mov
icebp
mov
dec
into
push
addr16
xor
test
xchg
into
lahf
push
test
xchg
movsb
push
decl
mov
sbb
jecxz
fwait
or
out
imul
icebp
cwtl
and
cltd
xor
inc
sbb
push
and
pushf
xor
mov
out
daa
xor
bound
dec
jp
cmpsb
or
dec
or
pop
pop
fidivl
enter
shlb
cmpsb
lcall
inc
data16
sub
nop
ret
daa
and
dec
dec
in
and
xchg
inc
mov
negb
lea
xchg
inc
cmp
add
test
jecxz
aad
ljmp
xor
cwtl
cld
sahf
in
loop
gs
jbe
mov
stc
insb
in
call
enter
jmp
test
jb
jno
in
cmp
mov
mov
mov
and
adc
int
std
xor
xor
inc
fiaddl
push
push
hlt
mov
cmp
aaa
xchg
sbb
loope
mov
and
daa
dec
cmpsl
iret
sbb
mov
jle
jmp
mov
pop
push
testb
dec
xchg
sahf
cltd
lcall
mov
sub
mov
xor
lret
es
shl
roll
fcomps
gs
scas
in
push
or
inc
xchg
jle
loop
mov
orb
cli
lock
das
mov
xor
in
dec
dec
push
insb
add
sub
insl
jmp
sub
daa
and
stc
cltd
dec
les
dec
xchg
cmp
pop
push
add
mov
pop
and
sbb
ljmp
popa
loope
std
inc
mov
sub
incb
sub
pop
sub
cmovs
sbbl
out
aas
daa
ja
loop
testb
mov
dec
adc
pop
sub
ss
sbb
xchg
xchg
enter
pop
add
insb
inc
loopne
sub
or
loop
sahf
dec
jp
push
sbb
dec
push
push
icebp
into
jmp
xor
mov
xchg
shl
xor
sub
pop
test
aad
push
dec
push
pop
dec
sahf
imul
sbb
pop
mov
add
or
clc
cmpsl
sub
push
xchg
push
push
mov
fcompl
scas
test
jg
jge
stos
dec
or
adc
inc
cmp
loope
cltd
xor
inc
scas
test
cld
enter
push
push
movsb
push
cmp
std
pusha
gs
aaa
jno
push
jne
cwtl
out
pop
ljmp
in
xchg
adc
lret
jl
arpl
pop
cmp
push
adc
jmp
xor
subl
xor
nop
out
inc
adc
mov
ss
inc
mov
push
ret
jne
xchg
stos
inc
rcll
push
or
enter
pop
or
enter
mov
movsb
in
sbb
mov
scas
sbb
in
ss
mov
cmp
fistpl
xchg
repnz
aas
cs
imul
mov
add
iret
test
mov
and
pop
xacquire
or
sti
inc
or
cld
fwait
hlt
fistpll
ljmp
test
mov
insb
pop
xor
sub
loop
scas
mov
andb
jbe
lret
cmp
mov
enter
sbb
pusha
adc
push
scas
jae
mov
adc
sti
popa
mov
mov
lods
dec
out
stos
mov
inc
mov
xor
jge
push
or
das
imull
cli
or
js
mov
shrb
pop
stos
adc
mov
cmp
xchg
mov
dec
out
rol
pusha
adc
push
xchg
mov
inc
imul
fwait
insl
fldenv
fisttpll
test
jmp
enter
shlb
pusha
in
lock
inc
inc
sbb
into
and
xchg
ror
je,pt
add
push
stos
hlt
jne
jns
pop
adcl
aaa
sub
add
sbb
sub
push
inc
mov
or
ds
fsubrs
imul
pop
loopne
cli
adc
xchg
mov
cli
jmp
in
xchg
and
fldt
int3
testl
sub
into
cli
cmovb
jae
roll
jg
mov
sub
jnp
push
imul
add
inc
push
mov
jmp
mov
aad
hlt
mov
mov
sub
adc
ret
jecxz
add
xor
jo
mov
sub
popf
fs
xchg
inc
loopne
dec
insl
mov
inc
mov
jo
rcrb
sbb
mov
call
movsl
push
xchg
mov
aas
cltd
test
rcl
loope
mov
pop
lahf
lahf
lret
or
pop
dec
or
and
fdivs
out
adc
inc
and
pop
sti
leave
xor
push
ret
xor
push
xchg
jle
sbb
add
insl
in
test
cmpb
add
pop
mov
clc
inc
pop
mov
out
jbe
push
ret
xchg
sbb
push
jecxz
add
rorl
pop
and
inc
xchg
cmp
cmp
test
fsubl
test
cltd
xor
cmp
loop
addr16
test
aad
add
and
push
jmp
cmpsl
jo
sub
adc
ucomiss
stos
inc
xchg
jae
ljmp
dec
sub
mov
jge
mov
push
mov
or
jp
jle
adc
shrl
mov
xor
cmp
push
pop
mov
gs
and
jae
int3
cmpsb
out
dec
sub
mov
sbb
bnd
inc
jmp
shll
mov
popa
cmp
sti
ja
mov
jp
fmuls
lods
mov
and
and
mov
pop
mov
sti
push
jbe
cmp
out
inc
pop
icebp
addr16
sub
enter
in
scas
je
loopne
jge
leave
fidivrl
sbb
fmull
xor
mov
pop
pop
push
xchg
ss
cmp
ds
pop
cli
loope
sbb
sbb
js
mov
dec
daa
iret
adc
inc
shrb
into
dec
inc
xor
fstl
mov
movsl
lea
cmp
inc
inc
xor
jo
lahf
test
mov
fstpl
cmp
bound
pop
out
and
icebp
rcl
test
cwtl
insb
into
jb
adc
decl
imul
xor
cmp
xchg
shlb
fiadds
and
rolb
mov
icebp
fiadds
addr16
out
lret
inc
stos
xchg
aas
js
sbb
pop
sbbb
stos
ret
aaa
mov
pop
jmp
mov
repz
sahf
imulb
or
xor
inc
mov
push
sete
xchg
xor
pop
mov
mov
aad
negl
mov
lcall
mov
mov
addb
loope
cld
xor
jg
movsl
cs
xor
sub
jmp
lea
dec
gs
pop
mov
insb
mov
sbb
in
push
or
xchg
stos
xor
inc
flds
aad
jae
mov
out
mov
jecxz
call
xchg
cmc
xor
mov
xchg
enter
lock
test
hlt
push
ret
cmpl
inc
shlb
call
mov
sub
imull
fs
in
jnp
das
aam
mov
push
in
push
es
xchg
iret
pop
jne
mov
add
cmpsl
mov
int
sahf
push
iret
xor
sbb
dec
fldt
shrb
iret
bound
xchg
mov
xchg
pop
sbb
xor
das
xor
imul
sub
jae
push
push
sbb
mov
mov
sub
mov
cwtl
sub
and
xor
out
scas
ljmp
sbb
insb
clc
dec
jo
mov
add
mov
mov
push
test
xchg
test
enter
out
mov
add
mov
xchg
xchg
ja
mov
jle
mov
leave
jl
dec
push
and
fnstcw
sbb
shlb
jecxz
subb
and
lods
jecxz
stos
lahf
test
mov
lea
mov
addr16
stos
repz
jg
jae
mov
xchg
push
adc
pop
cltd
xlat
or
mov
aas
xchg
xchg
dec
xchg
data16
hlt
jno
aam
out
je
adc
repnz
es
leave
mov
out
les
mov
jnp
imul
cmp
insb
fsub
shll
loop
jecxz
sbb
in
les
data16
push
cli
nop
inc
bnd
sub
mov
inc
testl
and
mov
std
sbb
adc
outsb
scas
or
pop
ss
add
roll
test
jp
jb
push
sbb
outsl
xchg
divl
or
lods
xlat
pop
icebp
das
mov
fs
aam
ljmp
cmp
pop
hlt
lods
adc
cmp
enter
mov
pop
xadd
inc
call
rorb
popf
and
xchg
xor
ljmp
aam
ja
xor
ret
xor
aaa
or
fsubrs
sbb
pop
jmp
jge
lods
into
cmpsl
xor
mov
mov
rcll
shl
out
gs
jmp
xchg
dec
test
pushl
repz
inc
adc
je
sbb
fdivrs
fiaddl
sbbl
ret
decl
fdiv
push
jo
inc
fstl
sub
or
lea
mov
jnp
jno
jbe
sbb
lea
std
sbb
ja
push
mov
test
cmp
lar
mov
nop
or
mov
aaa
jo
xor
dec
sti
mov
test
dec
cmp
mov
shlb
outsl
push
movsl
inc
mov
pushf
pop
pop
movsl
mov
in
test
cmp
fmul
dec
or
lds
jge
enter
mov
sbbl
pop
lods
cmp
fstps
push
mov
jae
cmc
clc
movsl
ret
sbb
mov
mov
fsubrs
and
adc
out
sub
inc
test
pusha
dec
ret
sbb
test
lods
and
aas
inc
jecxz
enter
cmp
or
or
movsl
mov
add
cli
test
cs
fistps
sub
fstpt
movl
and
pop
jg
jecxz,pt
int
or
movsl
xor
hlt
movsb
fidivs
lods
stos
or
dec
orl
jge
std
lahf
xor
sbb
shlb
xchg
cmp
mov
dec
inc
xchg
xor
stos
xrstors
jb
cmp
call
xor
add
scas
incb
sti
pop
jns
mov
in
mov
lret
cltd
cmp
mov
adcb
sahf
cmc
jns
mov
test
ret
inc
xchg
cld
dec
dec
sbb
nop
push
sub
ljmp
cmp
xchg
test
adc
cmp
jno
inc
repz
mov
xor
sub
cmp
sti
rclb
in
or
sbb
aam
test
movsb
arpl
or
lcall
push
leave
jae
mov
mov
je
adc
pop
sub
scas
in
xor
push
repnz
mov
push
lods
call
and
xchg
jae
adc
lret
add
xorl
sub
clc
lds
aam
mov
or
addl
cmp
rcrl
shll
sub
fiadds
push
stos
fcmovnbe
cmc
mov
cmpsl
imul
jg
aas
mov
inc
stos
inc
xor
xchg
or
jae
mov
cmc
mov
repz
adc
fidivrs
outsl
sarl
lahf
stos
fdivrl
mul
jb
sub
jo
sbb
lret
jae
lret
adc
jmp
das
lock
std
mov
js
stc
mov
fwait
add
sub
stos
in
push
adc
jg
insb
jg
arpl
mov
fcmove
inc
dec
sub
mov
std
lret
sub
leave
outsb
popa
pop
cmp
dec
pop
out
pushf
shll
out
cli
sbb
testl
jae
cld
movsb
mov
das
rorl
pop
xchg
inc
jae
jecxz
dec
clc
lcall
dec
dec
jle
xlat
mov
iret
fnstenv
or
popa
loop
fimull
mov
adc
jne
sub
or
jae
pop
pop
loope
inc
push
jecxz
jecxz
mov
imul
mov
rcrb
xchg
cmp
jne
push
int3
popf
pushf
imul
mov
movsl
sbb
ja
mov
int3
mov
fnstenv
out
test
pop
test
test
imul
lret
xchg
ss
and
cmc
sub
aad
test
lahf
push
mov
sub
ja
test
cmpsb
sbbb
xchg
pop
insb
mov
pop
push
and
xor
xor
dec
sbb
call
push
ljmp
and
ljmp
add
repnz
movsb
loop
cmovns
imulb
xchg
mov
or
and
out
test
pop
pop
shrl
xchg
add
int3
addr16
sub
pushf
lds
inc
mov
push
ds
daa
jbe
lds
xchg
imul
pop
jns
enter
pop
lret
mov
adc
aaa
jbe
push
xchg
jbe
popf
cmp
outsb
pop
into
incl
pop
pusha
adc
jl
mov
pushf
pushf
pop
mov
dec
jge
stos
mov
cmp
sub
stos
adc
mov
adc
bound
aam
sarl
mov
es
outsb
nop
jnp
stos
inc
pushf
xchg
jae
movsl
jo
mov
loope
adcb
fmuls
mov
sub
jmp
mov
jecxz
repz
dec
clc
cli
clc
cmpsl
in
ds
cwtl
int
xlat
pop
sub
push
out
clc
stos
cmp
jmp
add
mov
in
lock
outsb
ds
cltd
adc
lahf
dec
rorb
jge
mov
in
fildll
shll
dec
cs
sbb
mov
fadds
cmpb
jb
cmpsl
mov
xchg
imul
ss
imul
cmpsl
sub
dec
xor
sub
adc
data16
xchg
adc
xorl
xchg
mov
loope
mov
sti
jne
pop
fcomps
adc
call
inc
pusha
js
push
inc
push
inc
mov
xchg
inc
dec
in
inc
arpl
fiaddl
mov
dec
sub
mov
in
lret
lret
std
aad
ss
sub
or
or
mull
add
cmpsl
outsl
lea
lret
xor
test
jp
xor
add
jg
jbe
adcl
jb
mov
addr16
sbb
cmovg
es
loope
push
ja
icebp
push
into
jae
cmp
pusha
cltd
jp
outsl
mov
push
inc
icebp
lods
in
lea
popf
movsb
pushf
push
inc
enter
xor
sub
xchg
dec
lret
lahf
cwtl
repnz
ja
lret
shll
xor
and
pop
stos
sahf
push
fldl
imul
aad
pop
shrl
insl
sbbb
sub
shrl
jl
js
leave
scas
in
repnz
push
xchg
aam
sahf
bound
mov
les
pushf
push
mov
popa
aad
scas
scas
les
sbb
iret
add
sbb
or
faddl
mov
loop
jmp
mov
cmpl
dec
jnp
es
les
pushf
popf
or
test
lret
jno
sbb
enter
adc
cwtl
faddp
stos
xchg
push
or
xor
out
out
aas
insl
cli
in
jge
cmpsl
decb
add
leave
xchg
fisttpl
adc
int
add
punpckhwd
leave
mov
out
mov
lods
into
scas
pusha
xchg
ret
sub
out
pop
mov
scas
or
push
out
dec
leave
popf
push
xor
sub
rcrl
arpl
sbbl
pushf
into
aas
nop
and
call
lret
ja
push
cmpb
xchg
out
popa
jle
out
lds
decl
fcmovnu
aas
movsl
jns
push
bound
int3
sbb
jmp
push
xor
into
adc
and
fs
and
sub
and
adc
sti
sub
sarb
dec
pop
je
dec
dec
jne
int
addl
pop
and
mov
cmpsl
shrl
lcall
gs
dec
xchg
xor
sub
test
bound
les
fidivl
sub
mov
mov
hlt
or
int3
js
cld
movsb
ljmp
pop
xor
fcmovu
and
add
or
push
add
call
fs
cld
fs
xor
fstpt
cmp
mov
inc
sbb
call
sbb
ret
and
mov
ficoml
int
push
mov
mov
gs
mov
scas
rcrl
and
sub
jmp
jne
xchg
xchg
inc
fcoml
insl
inc
cmp
lret
cmp
pop
in
clc
mov
int
test
sahf
dec
mov
and
fstl
arpl
jae
popa
or
dec
popf
or
das
xor
and
push
xchg
xchg
call
movl
std
test
mov
cmpsl
dec
push
mov
cltd
adc
cli
pop
imul
mov
in
mov
int
jl
push
sbb
push
icebp
cmp
mov
incb
pop
pusha
push
cld
xor
and
fstpl
sbb
fsqrt
push
mov
test
imul
fsubrl
sbb
lret
mov
fidivs
dec
mov
fmuls
sbb
or
sbb
out
lock
push
scas
mull
jmp
mov
sbb
aad
clc
and
hlt
jbe
mov
mov
ljmp
adc
bound
xor
gs
inc
push
int
fstpt
enter
and
daa
xchg
or
add
dec
sub
jmp
clc
add
push
shrl
mov
nop
and
and
adc
sahf
aaa
test
icebp
cmp
mov
fcompp
sub
nop
cmp
and
xor
icebp
scas
and
push
xor
dec
js
sbb
lods
xchg
fdivp
jae
rclb
lea
push
dec
mov
cmp
rcr
orb
cmp
cmp
adc
rcl
mov
mov
neg
pop
and
cld
xchg
xchg
mov
adc
addb
jp
mov
mov
clc
xlat
fisubl
dec
mov
cmp
add
jge
cli
orl
testl
arpl
push
imul
in
cmp
lea
xchg
adc
out
mov
movsl
jae
loope
adcb
mov
cmp
sbb
inc
repnz
inc
in
dec
mov
dec
fistps
lret
cltd
mov
xchg
adc
jns
lret
dec
sahf
out
out
mov
pop
and
add
or
sti
xor
clts
or
adc
mov
xor
xchg
fists
nop
push
push
into
mov
cmp
pop
mulps
add
xchg
out
cmpsb
ss
daa
add
sub
push
inc
or
in
mov
jb
push
sti
sti
test
cmp
push
mov
cld
aad
or
push
mov
dec
xchg
flds
mov
inc
and
lods
daa
movsl
or
jecxz
push
cld
inc
cmp
pop
and
imul
mov
aas
mov
add
push
mov
jecxz
andb
mov
mov
lods
test
xchg
inc
out
pop
xchg
pop
and
std
adc
sub
jg
hlt
add
mov
mov
leave
iret
mov
nop
lret
push
jno
or
loope
mov
pop
hlt
cwtl
dec
and
and
ss
mov
xchg
fsubl
push
or
ds
daa
into
nop
loop
int3
or
cltd
call
pusha
sub
mul
insl
int
fnstcw
push
xlat
cmp
repnz
xor
and
or
out
mov
push
mov
scas
cmp
mov
push
sbb
in
or
mov
push
aaa
xchg
ljmp
ljmp
mov
enter
or
shll
mov
push
jge
xchg
dec
test
in
mov
dec
notb
lods
jmp
xchg
push
shrb
in
dec
outsb
cmp
sbb
in
gs
cmpsb
jne
dec
xchg
jg
mov
xor
loope
and
cwtl
sub
stc
js
push
rcr
sub
add
sbb
std
jg
xor
outsb
mov
adc
jp
cld
cmpsb
aas
add
adc
dec
pop
in
push
push
jae
shl
aaa
fwait
mov
test
aas
ds
push
sub
or
xlat
push
adc
popf
mov
outsb
xchg
notb
fsubp
pop
lds
push
dec
pop
or
cmpsl
data16
xchg
push
in
test
sub
mov
mov
mov
sarb
imul
pop
out
jae
lcall
fstl
cmp
xor
cmp
test
lsl
pop
jecxz
dec
fistl
inc
push
cwtl
or
out
lods
mov
xorb
mov
cmpsl
push
dec
cld
mov
out
jecxz
imull
pop
imull
dec
aad
jmp
adc
inc
lods
mov
adc
pop
push
lods
add
loop
cmc
aam
pop
push
push
or
mov
subl
mov
xchg
repnz
cmp
mov
push
cmp
xor
cmpb
es
lcall
pop
fs
cmp
jmp
jno
insb
xchg
es
pop
mov
in
cmc
loope
test
cmp
in
ja
xchg
mov
dec
ret
jae
daa
inc
xor
pop
aam
pop
xor
mov
fisubl
adc
xor
sub
sahf
and
mov
xchg
add
adc
jge
jp
and
inc
add
xor
dec
sub
sar
or
mov
sbb
into
inc
dec
push
jl
sbb
or
mov
mov
cmc
pop
out
repnz
or
sbb
ja
jae
jp
add
std
cmpsl
inc
pop
dec
stos
ja
ss
negb
ss
movsl
divl
icebp
cmp
sub
in
xor
stos
dec
mov
cmp
fldlg2
xor
aas
pop
fwait
pop
ja
fld
inc
pop
adc
xor
gs
adc
push
or
sar
sub
xchg
lods
pushf
jl
shlb
dec
mov
pop
inc
outsl
xorb
call
ret
pop
adc
fbld
dec
jmp
adc
aam
pop
dec
sbb
xchg
dec
inc
cwtl
mov
jo
cmpsb
mov
and
jp
cltd
jbe
mov
cs
insb
xor
test
sub
xor
ja
xor
testl
mov
into
bound
adc
push
pop
inc
bound
lods
jg
cmpsb
mov
sub
push
in
sub
orl
fucom
pop
loopne
and
xchg
test
adc
add
or
and
adc
testl
sbb
sahf
dec
scas
sbb
sub
add
fwait
jb
sub
lods
shrl
rcl
mov
mov
xchg
stos
mov
ja
out
xchg
dec
movsl
lods
pop
fmuls
pop
test
and
cmp
cmp
push
daa
cmp
xor
xor
mov
jnp
pop
inc
dec
lods
nop
sub
jnp
insl
pop
mov
jns
sub
and
ret
xchg
in
int3
or
xchg
xchg
mov
lcall
loope
and
mov
sbb
mov
rol
mov
incb
pop
jns
push
push
inc
sub
pop
adc
dec
inc
cmpsb
inc
in
sub
or
lret
call
jnp
jne
mov
fnsave
push
sub
or
insl
or
data16
adc
inc
mov
mov
cmp
add
push
cwtl
push
jbe
scas
lret
icebp
iret
data16
stos
xor
and
sbb
xor
mov
xchg
and
mov
push
xor
add
mov
pop
cmp
int3
jbe
sub
push
out
ficoml
test
aad
jnp
sub
pop
pop
ja
cwtl
loope
loop
and
gs
outsb
out
fmulp
ret
push
lahf
mov
add
enter
scas
push
aad
aas
mov
imul
hlt
cld
adc
negb
mov
xchg
adc
insb
inc
stc
jno
pop
sahf
popf
add
les
dec
dec
sbb
mov
fwait
jbe
lcall
mov
jecxz
cltd
xchg
pop
data16
icebp
xor
mov
ret
ds
in
or
cli
add
cmc
test
or
js
xchg
out
jbe
lcall
xor
lret
inc
mov
inc
xchg
inc
mov
cmp
fdivrl
fwait
int3
les
das
mov
cmpsl
pop
mov
adc
mov
pop
testl
xor
repnz
mov
add
xchg
outsb
fildll
lret
pop
outsl
add
push
js
sbb
or
ret
movsl
enter
xchg
and
and
or
icebp
jae
jl
sbb
cmp
inc
fisttps
enter
dec
xchg
push
dec
into
mov
sub
push
imul
dec
add
dec
fnsave
int3
and
pop
popf
push
in
pop
push
imul
sbb
pop
mov
and
ret
add
icebp
cmpb
lods
mov
jb
pop
mov
loopne
int
adc
shl
pop
lret
sub
mov
sarb
sub
ret
lock
dec
inc
adc
jnp
out
stc
dec
sbbl
mov
push
adc
adc
je
jae
repnz
mov
arpl
fucomp
xlat
mov
or
mov
mov
roll
loopne
or
test
inc
fdivp
push
lock
std
out
pop
divb
leave
push
leave
dec
sti
divb
inc
and
cmp
popa
pop
shlb
xor
jbe
ds
loopne
xchg
ret
fidivrs
call
lret
sti
repnz
and
mov
andb
clc
jns
divl
mov
cmpsl
inc
jo,pt
pop
fldenv
cmc
enter
cmpsl
arpl
jmp
lret
dec
xchg
cmp
ret
push
int
mov
xorb
xor
insb
mov
cld
mov
sarb
or
lret
divb
jle
mov
gs
int
sbb
fisubs
mov
out
pop
iret
jp
adc
pushf
out
test
lcall
push
pushf
jbe
outsb
pop
xchg
jnp
mov
xchg
inc
xchg
stos
pop
xor
xor
es
or
pusha
outsb
mov
mov
inc
aam
xor
fs
pop
mov
pop
lcall
cmp
repnz
fdivrp
insb
std
data16
cmp
inc
sbb
decl
xchg
mov
notl
sar
loope
andl
mov
icebp
fisubrs
loope
inc
sbbb
mov
les
cmpsb
inc
push
sub
dec
mov
pop
add
push
cli
lods
add
xor
shlb
dec
nop
outsb
pop
je
pop
fwait
andl
xor
lret
fwait
cmpsl
call
xor
mov
call
jg
lret
cmc
sbb
lea
stos
mov
movsb
or
repz
leave
jne
cmp
fwait
push
add
dec
andl
push
push
test
pop
jbe
shl
lret
movsb
cmp
inc
inc
sub
in
jo
sub
mov
inc
mov
ja
fsubl
or
cmp
and
add
pop
push
dec
xor
inc
mov
mov
xchg
pop
mov
in
rcr
addb
mov
es
sub
ss
stc
fcoms
mov
in
sahf
mov
xchg
jnp
std
pop
mov
cmp
fs
dec
outsb
pop
inc
iret
fadds
loopne
jae
mov
xchg
mov
inc
inc
add
xlat
insb
test
xchg
pop
jecxz
adc
imul
xor
push
popf
subb
inc
jbe
sub
dec
pushf
mov
adc
in
pop
loope
adc
stc
push
xchg
es
test
in
cmp
or
or
je
movsb
aam
dec
or
in
pop
aam
and
adc
adcb
sarl
int
jno
fisttpl
and
cmp
ficompl
fcom
adc
add
sbb
and
push
ss
icebp
fsts
mov
fimuls
mov
and
mov
rcr
and
loop
xchg
xchg
out
negl
inc
scas
cmp
fnstsw
pop
mov
inc
jo
mov
mov
mov
cltd
nop
xchg
mov
cmc
aam
arpl
jl
push
es
test
lods
push
fwait
mov
ret
ret
dec
sahf
xor
test
cmp
mov
into
inc
mov
out
dec
add
loopne
mov
adc
in
cmp
jl
call
xchg
mov
cmc
inc
mov
call
xchg
mov
push
fidivs
out
test
cmpb
insb
aam
movsl
push
xor
lods
fistpl
aam
xchg
jmp
xchg
outsl
pusha
test
mov
pop
fld
and
insb
addb
outsb
movsb
imul
or
mov
adc
inc
or
and
cli
cmpsl
jns
add
movsl
sub
xchg
adc
xchg
xor
xchg
enter
mov
es
outsl
insb
aaa
jle
dec
mov
sbb
ljmp
inc
mov
pop
movsl
mov
outsb
cli
xchg
push
cld
cmp
and
inc
push
aas
addr16
dec
jp
dec
dec
iret
sub
insb
xchg
pop
push
loopne
fidivs
negl
fs
mov
jb
inc
dec
inc
test
xor
ds
dec
xlat
cs
scas
push
lcall
dec
add
mov
dec
popf
jnp
xlat
or
pop
fmuls
flds
mov
mov
pop
sbb
pop
inc
sub
lea
xor
xchg
cmpsl
push
push
dec
xor
xor
or
in
fwait
je
stc
movntps
repz
js
sbb
add
out
daa
test
and
inc
pop
scas
gs
repnz
push
add
loopne
lods
call
out
dec
push
icebp
mov
push
mov
pop
nop
pop
jnp
push
dec
xchg
mov
cmp
fdivs
inc
aaa
jp
int3
imul
in
call
lods
jb
lea
pop
add
or
outsb
cmp
stos
sbb
push
dec
std
pushf
sahf
sahf
adc
mov
scas
pop
std
jp
push
xchg
insb
je
sbb
out
lods
jae
dec
arpl
pop
xlat
mov
xchg
fdivrs
addr16
push
inc
arpl
call
sbb
stc
xor
mov
das
xor
outsb
mov
or
pusha
shll
jo
insl
inc
cmp
add
leave
js
mov
scas
setge
adc
in
add
aas
pop
pop
addr16
andl
dec
je
leave
fwait
testb
xor
fwait
mov
add
lock
movsb
cmpsl
leave
dec
loope
enter
pop
test
mov
dec
jp,pt
pop
enter
xchg
sub
aam
in
fstps
aad
xlat
sbb
movsl
leave
mov
out
xchg
out
imul
xchg
xchg
dec
sub
push
jns
clc
shrl
push
cmp
xor
adc
pop
pop
xorb
bound
jge
lods
push
mov
mov
xor
xlat
push
imul
sub
add
adc
dec
fisttpll
jecxz
mov
add
outsl
roll
in
pusha
cmp
fcmovbe
dec
lret
stos
psrlw
and
adc
gs
rorb
dec
xchg
cs
xor
dec
inc
mov
add
sub
mov
jo
and
adc
pushf
pop
mov
testl
es
xchg
pop
dec
xchg
ret
jge
mov
in
xor
out
stos
jmp
xchg
inc
adc
clc
aam
cmpl
aam
sbb
xor
mov
cmp
aas
jecxz
jmp
sub
push
add
icebp
mov
jno
fsubr
iret
mov
dec
jl
insl
sbb
int3
sub
add
fwait
data16
in
and
fnstenv
daa
inc
jle
sbb
rcl
daa
fs
mov
inc
scas
jno
sbb
inc
stos
stos
outsb
mov
out
popf
xchg
dec
pop
push
inc
inc
xchg
push
daa
iret
lea
in
aas
int
imul
jne
int
mov
ret
pop
inc
lcall
popa
and
mov
lcall
out
push
xchg
lcall
inc
mov
inc
into
mov
cmc
and
adc
ret
int
mov
mov
add
imul
lods
xlat
incl
adc
add
mov
jg
or
lock
lcall
xor
mov
fcmovnb
or
je
mov
add
or
ja
int3
faddl
adc
xor
loopne
sahf
push
cld
push
sbb
add
cli
enter
roll
jae
jge
inc
imul
push
sbb
mov
fs
mov
sti
mov
lret
das
fidivl
sbb
lret
add
dec
insb
adc
fidivs
adc
add
adc
orb
jo
push
data16
outsl
decl
sub
addl
or
in
xor
jno
daa
jmp
and
aam
adc
idivb
push
mov
mov
inc
mov
mov
arpl
adc
lds
popf
pop
cmp
mov
imul
clc
mov
adc
dec
xchg
sti
and
and
jle
incb
into
pop
leave
cmc
lea
movsl
jbe
jns
stc
dec
mov
push
or
pop
jnp
jb
gs
dec
fcmovnbe
rcll
mov
aad
in
into
and
xchg
push
jmp
mov
ljmp
lods
mov
pop
sbb
test
sub
add
loop
xor
mov
or
cli
test
stos
pop
lds
mov
xchg
dec
add
std
sbb
bound
jb
push
pop
repnz
cmp
test
pop
mov
dec
pop
out
aam
xor
jge
arpl
and
repnz
push
or
inc
jno
aad
sahf
or
pusha
repz
test
imul
nop
mov
and
scas
ss
sbb
stc
or
or
test
insl
loopne
sbb
shl
arpl
add
mov
ret
lods
fnstenv
lds
sub
nop
cmpl
push
xchg
cmpsb
mov
in
out
popf
sbb
in
mov
mov
dec
movsb
ret
inc
in
push
stos
or
aad
leave
inc
sbb
std
push
jmp
cltd
sbb
aaa
add
addl
pop
aaa
jl
mov
movsl
test
les
insb
hlt
scas
shll
lret
mov
mov
push
xchg
jne
mov
cmpsb
in
lret
idivl
das
and
mov
shll
xchg
imulb
xlat
adc
cmp
push
and
mov
in
jns
xchg
daa
push
jp
xchg
les
fcomps
mov
int
insb
or
mov
loope
stc
mov
popa
sbb
movsb
in
aad
xlat
dec
mov
xchg
cltd
test
jecxz
cmp
mov
add
add
sti
inc
shrb
push
or
cmp
cwtl
add
lods
jae
inc
aad
sub
arpl
in
push
xor
dec
mov
add
and
into
test
xchg
lcall
out
pop
xchg
fsubs
out
sbb
dec
call
jnp
iret
xor
insb
mov
xchg
insb
setle
in
arpl
jno
fdiv
sub
jae
in
gs
frstpm(287
jne
enter
ficoms
dec
ss
jo
rolb
fwait
js
test
and
or
mov
ret
pop
push
or
jbe
jbe
xor
fdivr
cmp
popf
imul
pop
sub
fldenv
mov
inc
mov
test
scas
push
cld
and
vpxor
adc
cmp
hlt
dec
mov
fistl
ds
pop
inc
out
adc
inc
jge
xchg
in
mov
or
cmp
adc
cltd
jae
cwtl
push
stc
fdivr
test
jno
or
std
mov
fiaddl
sti
adc
fstl
jmp
icebp
clc
jg
fwait
leave
loopne
insb
add
cld
add
xchg
into
in
jl
push
sarl
test
sub
insl
xchg
fidivl
xchg
sbb
nop
add
fcompl
je
ret
sub
repnz
lahf
pop
fwait
and
sbb
mov
mov
scas
push
and
stos
scas
pop
int
clc
sub
add
jmp
int3
subl
inc
ret
xchg
mov
rcl
inc
cmp
fisttpl
add
rcll
xchg
es
add
scas
mov
push
imul
test
clc
push
push
popf
sbb
ljmp
push
cmpb
mov
mov
pusha
jb
out
imul
outsl
ljmp
adc
sub
lret
jmp
mov
out
adc
xlat
xchg
add
fsts
negl
mov
call
dec
shl
arpl
mov
icebp
jle
stc
lcall
xchg
pop
mov
jecxz
cmp
cmp
push
add
mov
fwait
mov
adc
push
in
lock
pop
ja
es
insl
sub
rorl
test
mov
in
bound
fwait
adc
add
or
outsl
lret
popf
test
push
xchg
sahf
icebp
pop
mov
mov
cltd
sbb
adc
pusha
shlb
push
pop
imul
inc
add
push
jo
rolb
push
addr16
stos
out
sti
xchg
add
jne
test
or
add
jge
loopne
sub
sub
jmp
mov
cltd
clc
movsl
mov
xchg
ss
and
push
or
imul
je
test
out
add
jns
arpl
pop
and
cmp
enter
lcall
test
lock
jne
push
mov
addr16
ret
fs
loopne
pop
js
xor
aas
inc
add
lock
das
ficoms
push
jecxz
xor
xor
push
repz
ds
ret
push
arpl
rcll
fidivrl
xchg
leave
mov
lahf
xchg
add
adc
fidivl
pop
mov
daa
jnp
das
or
sub
dec
push
and
inc
mov
pop
lret
in
mov
cld
mov
or
test
aad
mov
out
fldcw
push
sbb
arpl
mov
cmc
jb
and
shrl
in
aad
out
outsb
popf
cmpsl
xchg
push
mov
jl
cmpsb
add
jle
push
rorb
add
mov
cmp
pop
dec
jae
adc
jno
dec
cmp
fisubl
inc
pop
les
mov
leave
subb
daa
dec
adc
das
adc
xchg
and
rclb
mov
test
cmp
std
mov
push
ja
xchg
pop
lret
or
or
mov
das
cmp
mov
mov
inc
jae
loop
xor
aaa
cld
sbb
sub
mov
jp
sbb
push
pop
cld
js
mov
pop
inc
sub
push
sbb
mov
fbld
sub
cmc
sbb
mov
inc
loop
jns
xor
xchg
sub
icebp
pop
imul
lea
lret
adc
nop
fstpl
pop
cmc
loope
mov
jne
pushf
fwait
mov
xchg
mov
xor
lcall
sbb
shlb
lret
xchg
insl
iret
pop
nop
in
jmp
pop
ficoms
mov
mov
add
pop
jns
fs
cs
fldt
pop
xor
and
movsb
imul
stos
jle
mov
xchg
cmpsb
lea
stos
in
adc
cmp
idivb
ret
mov
push
dec
lods
xchg
jge
adc
push
jnp
insl
daa
xor
cmp
inc
push
addr16
inc
fcomps
dec
cmp
and
and
subb
xchg
shll
mov
pop
or
pushl
add
loope
dec
sbb
stos
repz
in
sbb
inc
adc
mov
and
xor
fadds
imul
and
mov
xchg
mov
mov
xchg
ljmp
std
jno
jns,pn
jmp
sahf
inc
adc
stc
jb
and
mov
push
jno
push
fistpll
repz
and
inc
pop
mov
es
insb
add
add
xor
ja
rorl
inc
ja
push
out
mov
lret
mov
push
ror
jge
out
cmpsl
dec
and
shll
mov
std
cltd
cmpsb
cmpsl
or
and
out
hlt
into
sbb
insl
js
pusha
inc
push
aam
fnstcw
jno
lahf
insl
mov
cld
andb
out
inc
cmp
cwtl
addr16
mov
fnstcw
pop
fs
sbb
popa
or
popa
push
sub
push
jbe
clc
push
sbb
inc
sub
xchg
in
insb
lds
sbb
and
ret
jno
sbb
pop
xchg
jmp
imul
pop
push
jmp
outsl
mov
shl
cmpsb
cmp
cmc
mov
mov
push
mov
cs
dec
inc
add
pop
lret
adc
cld
pop
in
fisubrl
sub
push
xor
push
jb
das
pop
sarl
xchg
out
add
cmp
dec
mov
movsb
cmp
mov
lcall
aad
add
xchg
pusha
in
inc
pop
sbb
or
dec
mov
sbb
ljmp
loope
test
jo
ret
js
pop
cmp
jns
mov
inc
dec
jo
lods
inc
out
mov
imul
pop
pop
fwait
fs
jg
xor
sbb
or
jns
sub
add
pop
lcall
fdivr
inc
sahf
cmc
ja
cmpsl
iret
xchg
cmpsb
sarb
outsl
add
js
adc
dec
dec
enter
add
aam
dec
and
sub
xchg
mov
hlt
neg
je
push
hlt
pop
movsb
les
in
push
decl
xchg
push
xor
sub
imull
cwtl
movb
or
sbb
xor
mov
xchg
cmp
roll
jp
cmpsb
and
into
jns
test
mov
ds
push
dec
ret
add
cmp
gs
dec
lret
mov
fstpl
pop
sub
fcmovnbe
pop
inc
jl
fsubrp
in
shl
cmp
mov
push
pop
or
and
jno
mov
pop
js
das
mov
test
or
mov
rcr
mov
sbb
and
stc
mov
insb
rol
mov
push
jle
jns
cmovg
repz
sub
outsb
push
test
or
mov
flds
lret
std
xchg
bound
or
jo
js
test
sbb
or
cli
mov
and
adc
cmc
jae
loopne
pop
dec
les
mov
jmp
sbb
bndstx
je
mov
xchg
out
ljmp
push
pop
push
xchg
jle
inc
gs
adcl
mov
in
pop
adc
loopne
daa
ret
push
jns
dec
fsubl
mov
fadds
fidivs
mov
pop
in
inc
jle
lahf
sbb
and
cli
ret
lea
sbb
outsl
mov
aaa
lods
pop
and
or
lret
mov
dec
xchg
jl
test
mov
mov
and
mulb
js
scas
pop
add
mov
lret
push
cld
mov
in
dec
loop
and
dec
mov
out
mov
je
jb
or
sub
sub
inc
pop
repnz
leave
sbb
pop
test
xchg
in
cltd
cmp
jl
mov
inc
and
shlb
push
mov
cmp
ljmp
cmp
shll
cs
fstps
push
xor
popa
jmp
sbb
xor
dec
add
shlb
aaa
xor
sbb
cmp
pusha
ret
fwait
jne
push
ret
xchg
pop
jns
cmc
mov
mov
and
adcl
cltd
addl
ret
mov
add
sub
jg
mov
mov
adc
fwait
test
call
add
ss
aas
jg
fidivl
repnz
jns
sti
add
mov
add
mov
mov
mov
jmp
lds
pusha
jae
es
push
loopne
jb
cmpsl
mov
mov
aaa
mov
popf
outsb
push
sbb
mov
mov
movsb
push
sbb
mulb
into
adc
mov
jl
and
leave
outsl
adcb
push
push
sbb
sbb
out
subl
sti
xor
jae
sbb
ror
subb
jno
adc
enter
push
push
cmp
outsl
shll
ret
push
loopne,pn
into
jne
push
cmpsl
xchg
cmpsb
xchg
mov
insb
rcrb
lds
repz
fwait
xchg
adc
add
add
dec
aad
xchg
mov
bnd
movsl
push
push
dec
xor
dec
xchg
out
lods
mov
test
lock
enter
negb
mov
mov
push
mov
fadds
fnstcw
fscale
or
ss
push
je
xchg
lods
aas
inc
imul
push
enter
cli
add
jg
stos
jne
mov
int3
xchg
lods
mov
xchg
fwait
pop
fsubp
pop
sbb
std
sub
push
push
test
fisttpll
pop
jecxz
xor
out
in
das
in
jne
xchg
push
xchg
xor
test
xchg
add
sub
pop
mov
loop
and
jb
imul
popa
mov
add
out
sub
mov
jbe
xor
jnp
push
mov
cs
mov
out
mov
inc
push
or
mov
adc
sbb
ja
call
jge
dec
out
push
test
les
ss
jl
mov
add
dec
scas
outsl
leave
mov
aad
pop
add
jae
les
jecxz
cmpsl
xchg
int3
xor
sbbl
pop
push
add
jg
insl
movsl
mov
xchg
mov
nop
cmp
mov
pushf
or
pop
dec
cwtl
shlb
xor
imulb
int3
cmp
sub
cmp
push
shll
pop
sbb
nop
and
stc
shl
cmpsl
xchg
cmp
pop
dec
pop
mov
xchg
pop
sbb
lahf
adc
pusha
xchg
in
stc
cmp
mov
scas
repnz
mov
paddusw
sub
jnp
cmp
out
pop
dec
bound
mov
pusha
pushw
pop
test
cmpsb
js
sbb
inc
in
insb
stos
sbb
ficoms
ljmp
xchg
xchg
movsl
mov
jae
into
addr16
shr
xor
jmpw
fldenv
fidivl
pop
or
clc
mov
dec
pop
imul
mov
inc
dec
jns
or
lock
mov
xor
push
sti
xchg
jae
or
inc
int
jg
jne
daa
incl
nop
pushf
inc
and
adc
sbb
push
cmc
adc
mov
xchg
jb
dec
pop
jne
push
jecxz
cmp
mov
pop
test
mov
scas
out
xchg
repz
fstps
cld
xchg
push
lretw
jnp
push
inc
xchg
sbb
push
pop
out
xor
sub
das
mov
dec
dec
pop
mov
adc
lds
stos
cmp
punpckhwd
mov
lret
dec
cwtl
int
or
aad
sbb
in
loop
inc
mov
rolb
out
aas
cmp
mov
and
push
insl
scas
push
lahf
cmc
outsl
negb
dec
test
popf
mov
add
cs
and
call
push
push
jge
faddl
pop
jmp
xchg
and
and
dec
jb
out
cltd
xlat
jns
cmp
mov
push
movsl
bound
push
mov
adcb
nop
sar
mov
int
pop
ljmp
xchg
dec
in
in
mov
or
pop
lock
xor
scas
pop
es
std
ret
loope
pop
scas
test
mov
xor
and
mov
ficoml
aaa
out
std
mov
adc
jo
sbb
sub
imul
aad
shrb
jb
dec
push
mov
and
call
add
push
daa
rcll
cmovle
adc
int
jg
loopne
add
mov
mov
test
ror
cmp
push
mov
cmp
scas
add
push
pop
cmc
sbb
and
fdivl
push
iret
lret
pop
xchg
aad
enter
arpl
fs
lock
in
or
stos
lods
movsl
sub
repnz
push
jns
adc
or
dec
adc
sub
dec
and
dec
les
dec
and
in
mov
std
jle
test
test
stos
call
pop
dec
jo
testb
daa
loopne
sbb
jecxz
mov
sub
addr16
arpl
lcall
xchg
xchg
mov
or
cmpsb
pop
lds
cmpsb
sbb
xchg
xor
cmpsl
add
cmc
pushf
xor
pop
pop
xchg
inc
loope
test
jbe
pop
es
lcall
adc
es
mov
dec
out
lret
aas
roll
mov
into
out
pusha
das
and
dec
outsb
add
ds
scas
ret
mov
xchg
repnz
mov
bound
ljmp
xchg
fldenv
add
pop
popf
call
jg
jns
pop
add
mov
shrb
imul
inc
mov
jns
or
mov
out
ja
call
mov
dec
fdivrs
push
cmp
loopne
mov
stos
loop
cld
dec
fnstsw
sub
movsb
xchg
cmpsb
jmp
xor
mov
mov
ja
gs
lret
popf
mov
xchg
bnd
mov
movsl
push
mov
sub
cltd
lret
mov
jmp
into
add
repz
xchg
stos
fcompl
cli
lods
stc
popa
jns
leave
aaa
inc
addr16
sbb
sti
mov
mov
xchg
fisubs
rcr
push
adc
pause
loope
cmp
push
pop
aam
or
fdivr
jb
xchg
add
adc
ss
mov
inc
ret
mov
mov
lods
jb
js
ret
add
fwait
imul
pop
add
in
jecxz
ds
pop
sub
pop
dec
je
sbb
dec
std
out
into
mov
sbb
mov
jmp
cmpsl
or
xchg
or
xlat
mov
fistps
and
in
clc
sbb
mov
jmp
mov
cwtl
aas
pop
jmp
fistps
cltd
test
cmp
leave
nop
jb
inc
sahf
aaa
pusha
cmp
pop
aam
push
and
bound
xor
lahf
jmp
or
cmp
push
test
mulb
call
mov
inc
xor
gs
add
mov
xor
in
cmp
stc
stos
out
xchg
lcall
scas
loope
imul
loope
inc
inc
ja
mov
inc
mov
mov
lods
lock
inc
es
cmpsb
out
pushl
rorl
hlt
bound
in
dec
xor
pop
pop
fistpl
test
cmc
sbb
or
jns
mov
pop
jno
sahf
adc
dec
inc
lret
aas
fs
out
xor
mov
inc
negb
mov
cltd
mov
add
jp
mov
adc
jl
mov
cmp
pop
cmp
hlt
mov
enter
jnp
pop
inc
movsb
movsb
ja
add
mov
push
adc
fidivs
adc
dec
sbb
cs
pop
and
stc
and
xchg
out
or
clc
or
imul
fdivrs
and
stc
or
sub
test
xchg
rclb
pop
xor
nop
mov
repnz
stc
sbb
fstl
aaa
jne
and
adc
stos
cmpsl
subb
aaa
int
mov
in
add
cmp
es
cwtl
pop
and
stos
pop
and
mov
clc
pusha
mov
xor
into
push
mov
mov
not
inc
mov
test
fldt
out
repz
imul
add
cmp
jbe
and
inc
clc
and
fcmove
jg
pushf
iret
cmp
sub
and
jl
jae
xchg
inc
pop
pop
incb
hlt
js
in
mov
sub
int3
ficompl
jb
jg
push
testl
sbb
imul
push
ljmp
frstor
dec
pop
repz
push
sbb
lahf
fmulp
pop
add
mov
scas
push
addr16
xlat
xor
lds
cmp
icebp
mov
loopne
test
sub
mov
mov
repnz
int
or
push
sbb
icebp
adc
pop
leave
push
outsb
pop
add
js
dec
je
pop
mov
faddl
mov
fwait
out
enter
test
ljmp
test
fs
adc
jl
test
cmpsb
test
mov
enter
mov
sub
addr16
mov
lret
push
es
mov
mov
int3
xor
dec
adc
xlat
sub
add
lahf
scas
mov
hlt
jge
inc
leave
lods
adc
push
faddl
dec
mov
jmp
adc
iret
sbb
cmp
push
cmp
bound
aam
adc
loope
and
mov
shll
add
cmpsb
xchg
out
stc
lret
pop
cmp
movsb
push
mov
clc
les
fdivrs
inc
push
or
sbb
insb
mov
cmp
xchg
popf
sbb
jne
add
mov
scas
cmpsl
inc
fidivrl
fs
jne
adc
out
sub
jbe
mov
dec
scas
mov
std
enter
vsubps
pushf
or
aam
pop
lods
andb
lock
dec
loopne
adc
pop
stos
pusha
int3
inc
cmc
fnstsw
mov
mov
or
arpl
mov
into
xor
clc
jg
mov
xor
dec
in
lret
aas
std
push
fs
mov
gs
pop
in
sbbb
in
cmp
mov
pop
lahf
mov
imul
pop
cmpsb
pop
push
aam
pop
cmc
or
out
xchg
pop
dec
fs
cmpsb
and
pop
adc
in
dec
pop
mov
xchg
shlb
pop
je
mov
mov
mov
lahf
push
mov
pusha
fnstcw
mov
ljmp
and
bound
xchg
push
nop
push
dec
int
lock
addb
fcomps
jg
ss
scas
hlt
xor
mov
lods
inc
xor
jb
jbe
cmp
notb
gs
or
data16
sub
pop
bound
mov
or
ret
pop
mov
lret
data16
cmpsl
mov
pop
xchg
xchg
loopne
xor
cmc
into
shlb
push
das
in
or
fnstcw
or
rorb
mov
or
jnp
sub
push
mov
sub
aam
add
jbe
inc
xor
push
mov
into
sub
add
ficoml
scas
xchg
pop
mov
xchg
jle
dec
mov
and
shlb
push
std
xlat
sbb
sti
fbstp
jmp
mov
add
outsb
or
jo
test
imul
js
jb
bound
inc
sbb
jbe
cmpsl
mov
cmpsl
je
mov
and
dec
repz
pushf
pop
xchg
or
mov
pop
pop
iret
sahf
ret
jge
inc
mov
push
lods
ljmp
sub
ljmp
xchg
xor
sbb
ret
and
mov
sbb
push
jg
into
pop
jl
inc
or
addr16
subl
lock
fcoms
movsb
sbb
mov
fistpll
lret
jne
cld
fcomip
mov
fcomps
cmpsl
push
pusha
or
jp
icebp
cmp
ret
fsubs
je
mov
pop
pop
lods
in
cmp
pop
es
outsb
jecxz
mov
sti
push
adc
into
es
push
enter
pushf
jge
fstpt
in
int3
inc
mulb
add
bound
cwtl
std
jbe
pushf
call
sub
ds
sahf
adc
es
ds
subb
inc
inc
fcoms
ret
pop
imul
scas
pop
cld
rorl
jge
sbb
add
test
jae
arpl
fs
lea
mov
fimull
stc
jne
xchg
sbb
adc
mov
out
clc
cmp
jp
loopne
repz
cmp
sub
jl
js
adc
and
mov
frndint
cmp
jp
outsl
in
lods
repz
shrl
dec
and
ret
in
add
cli
pop
dec
pop
pop
fistpll
cmp
mov
mov
imulb
mov
xchg
pop
fisubrs
mov
mov
stos
loope
dec
mov
test
cmpsb
call
add
jae
cli
mov
sbb
and
push
xlat
movsl
and
in
jecxz
out
fsubrs
mov
inc
push
iret
aas
xlat
push
inc
adc
mov
mov
pop
fndisi(8087
sub
mov
dec
jp
add
push
adc
xchg
js
pop
mov
push
xor
outsl
xor
lods
lcall
cli
stos
orb
outsl
iret
in
testb
adc
adcb
insl
push
cmp
pop
jle
xchg
lods
pop
mov
out
in
adc
ret
push
aaa
inc
cmp
and
paddb
inc
rcrl
ja
add
leave
dec
fwait
outsl
mov
loopne
adc
mov
sar
mov
ds
addr16
arpl
out
pusha
and
and
xchg
aaa
leave
ret
cmovns
xor
xor
xchg
push
and
add
push
push
dec
mov
data16
push
xorb
mov
jbe
stos
lea
adc
repz
jne
jmp
out
adcl
sub
lahf
xchg
dec
les
aad
movsb
lds
lock
push
pop
dec
imul
pop
lods
mov
cltd
dec
cmp
jbe
pop
mov
pop
ret
js
dec
test
movsb
adcb
sbb
fs
cld
push
adc
fwait
subb
out
push
jp
or
lds
push
mov
cs
add
mov
sub
and
dec
or
inc
dec
and
or
mov
sbb
dec
cmpsl
dec
popa
or
pop
dec
mov
das
xor
add
fnsave
roll
inc
xor
xchg
add
dec
xor
lock
jp
sub
loop
cltd
fcoms
std
bnd
insb
stos
xchg
cs
outsb
repz
pusha
push
lret
sbb
cs
xchg
xchg
mov
xor
xorl
lret
aad
in
lcall
dec
lcall
cmp
ret
outsl
and
leave
popf
fimuls
fs
aas
sbb
das
nop
and
xor
out
jo
sbbb
mov
lcall
aad
mov
scas
push
inc
icebp
xchg
test
push
jno
scas
inc
pop
adc
popa
jae
leave
jno
cld
rcl
bound
into
dec
push
aas
inc
lcall
jne
aaa
mov
enter
mov
mov
sbb
jo
clc
adc
mov
hlt
fs
pop
xchg
cltd
inc
sbb
outsb
jns
fcmovb
inc
mov
push
push
xor
int3
in
cmc
or
cltd
inc
xchg
pop
pushf
mov
or
insl
push
pop
roll
cmp
mov
imul
out
lret
fisubrs
loopne
in
sub
jmp
enter
ss
pop
and
ss
movsl
push
bnd
fldt
fstpt
dec
dec
lods
cmp
mov
jecxz
xor
inc
push
cld
idiv
addr16
inc
dec
xchg
repnz
fmuls
mov
in
lret
xchg
or
lods
mov
jnp
sbb
mov
inc
into
data16
imul
movsl
fnstenv
jnp
or
inc
jle
mov
enter
adc
xlat
push
imul
neg
dec
xchg
jecxz
clc
in
loop
outsl
inc
jbe
es
inc
rolb
pushl
and
aaa
or
push
pop
pop
mov
movb
jbe
jl
fcoms
mov
hlt
jae
jnp
stos
push
xchg
fdivrs
lods
cltd
daa
push
cwtl
or
lar
ret
or
jbe
xchg
pop
cli
inc
loopne
xchg
out
jns
ss
rcrb
sbbl
push
push
sub
add
ja
daa
jl
dec
movsb
popl
push
sub
shll
loope
or
shl
mov
pop
movl
jnp
aas
fsubrl
and
mov
dec
or
cli
dec
addl
sbb
cmp
jle
add
outsb
jb
dec
xchg
mov
sub
cmp
xor
test
jl
mov
ljmp
push
jns
icebp
push
inc
icebp
fs
jne
enter
enter
out
lret
mov
inc
loop
pop
aam
and
mov
fimuls
mov
mov
jae
pop
dec
jg
cmp
mulps
inc
adc
pusha
aaa
addb
je
jno
adc
stos
call
imulb
jmp
and
insl
inc
xchg
push
xchg
mov
insb
add
adc
adc
in
lds
cmp
and
fstps
pop
popf
dec
inc
jmp
repz
add
mov
icebp
sub
mov
jb
adcb
mov
mov
lods
xor
mov
call
or
xor
sahf
and
fisubl
inc
mov
inc
aam
mov
mov
dec
pop
sbb
lea
popa
imul
imul
inc
cli
adcl
imul
sub
subl
push
test
and
mov
push
pop
stos
nop
arpl
push
ljmp
add
outsb
icebp
cmpsl
lea
inc
daa
pop
popa
xchg
push
xor
or
pop
jnp
std
icebp
sbb
dec
fdiv
dec
adc
or
push
js
std
loop
leave
or
pop
jno
or
mov
fmul
bound
or
arpl
into
mov
xlat
inc
filds
movsb
andb
insl
sub
mov
sbb
pop
nop
fst
inc
in
sub
cmp
pop
add
in
xchg
outsb
flds
xor
pop
push
in
push
inc
push
int3
inc
mov
and
dec
inc
daa
cmpsl
dec
push
outsl
or
mov
ja
jns
ret
jae
outsb
push
lea
hlt
mov
or
decb
dec
mov
mov
fwait
mov
adc
sbb
div
in
xchg
inc
orb
push
mov
in
mov
and
jb
out
dec
add
xchg
movsb
jae
jno
in
in
adc
jnp
add
pop
sub
push
addr16
and
xchg
insl
sbb
cmp
push
cmp
test
mov
outsl
das
ja
je
outsb
inc
cmp
mov
dec
fbstp
inc
mov
sub
jne
xor
imul
mov
fucomip
ljmp
les
mov
or
loop
ljmp
jl
sub
pop
int3
or
test
imul
ss
jl
sbb
mov
icebp
or
jnp
scas
mov
sub
xor
adc
add
mov
mov
fidivl
fs
xchg
jmp
mov
arpl
push
pop
mov
in
repnz
jae
and
mov
xor
std
mov
jp
mov
rclb
add
out
jbe
pop
pop
jle
sbbb
repz
fwait
xchg
pop
push
mov
inc
testl
rclb
push
sub
mov
inc
pusha
mov
ljmp
jne
ret
push
cmpsb
shll
sub
inc
sub
xchg
in
push
fildll
sub
testb
out
xor
xchg
adc
inc
stc
call
dec
pop
insl
test
ficomps
add
in
movsb
out
testl
imul
mov
xchg
cmpsl
xor
popf
imul
loopne
push
jne
jge
xchg
and
lcall
fs
pop
imul
mov
mov
sbb
and
gs
add
mov
xchg
jecxz
mov
test
dec
push
out
faddl
push
in
repz
xchg
mov
loope
aad
int
or
or
xchg
dec
cmp
sbb
xchg
ss
test
andl
mov
inc
int
cmc
push
adc
clc
aad
fs
mov
pop
cmp
xor
mov
jbe
ja
ds
inc
outsb
popf
sub
inc
push
outsl
test
inc
mov
pop
push
pusha
xchg
stos
in
insb
sbb
sub
lea
push
and
outsl
fisttpll
mov
pop
ficoms
cmp
adc
test
ss
or
mov
cmp
jp
mov
mov
enter
mov
sub
cmp
mull
scas
lcall
dec
mov
clc
add
push
stc
movsl
sbb
and
or
sbb
lods
sub
mov
add
pop
mov
sub
dec
push
pop
lock
push
out
frstor
out
xor
pop
ret
loopne
xor
dec
mov
jne
icebp
icebp
in
nop
mov
add
sub
pushf
push
sbb
loopne
and
mov
sub
pop
push
add
pop
and
stos
dec
dec
fldz
dec
mov
aam
or
fmull
rolb
mov
pop
sbb
aad
outsl
sbb
clc
pop
mov
mov
sbb
push
das
sbb
push
add
mov
sahf
xchg
imul
rcrl
inc
adc
pop
cltd
mov
movsb
aaa
jle
xchg
lods
scas
ret
push
scas
loopne
test
add
leave
cmp
stos
dec
movsl
or
les
lods
jecxz
testb
pop
insl
mov
mov
orl
rcrb
daa
sbb
sahf
ret
ljmp
roll
inc
push
gs
shrb
outsb
cmp
add
arpl
out
adc
cmp
jb
and
aas
ficompl
js
sti
sub
xchg
jp
ja
push
je
cmp
dec
cld
inc
test
push
push
cmp
xor
mov
cld
lds
adc
mov
push
cltd
enter
pop
pusha
inc
mov
test
push
cld
in
insl
outsb
cs
xchg
ret
cld
cwtl
or
jbe
cmp
aas
cmp
jg
push
xchg
dec
popf
arpl
cld
icebp
insl
rclb
adc
cmp
aaa
fildl
movb
jno
mov
jmp
add
fst
inc
cmp
mov
lcall
sbb
jge
and
lcall
lret
inc
clc
push
test
jbe
loope
out
loopne
mov
add
pop
push
jo
es
pop
push
push
rcl
pop
mov
xchg
xchg
sbb
or
or
push
adcb
adc
xchg
or
popa
jmp
sub
aaa
loope
push
xlat
xchg
sub
inc
push
imul
sbb
and
stos
stos
push
push
push
sti
test
in
pop
test
std
push
loop
insl
inc
imull
mov
daa
jp
aad
mov
mov
lret
sbb
and
arpl
xchg
leave
lds
int3
jns
and
rclb
rolb
adc
sti
inc
fsubrl
jno
pop
jb
cmp
xchg
adc
and
cld
jbe
nop
inc
mov
lods
mov
clc
adc
cs
insl
fdivrp
outsb
clc
mov
cmpsl
xor
mov
xchg
dec
jp
sub
jge
mov
sub
mov
popa
dec
cld
outsl
push
fwait
jns
push
jne
cmpsl
out
and
add
mulb
daa
out
xor
cmp
mov
xor
loop
repz
out
ss
test
and
mov
andl
test
pop
xorb
add
andb
jp
aam
mov
sahf
hlt
xlat
loop
jmp
dec
lods
lret
movsl
mov
push
and
loop
xchg
stos
jno
das
jge
or
call
dec
aam
push
mov
insb
jno
and
test
out
cli
mov
popa
mov
popf
dec
popf
push
or
sub
jg
ljmp
pop
pop
xor
dec
in
push
mov
sti
stos
sbb
sub
cld
stc
jo
test
js
inc
ds
sub
jo
push
out
sahf
pusha
movsl
mov
jno
imul
inc
insl
mov
pop
in
in
adc
test
mov
mov
pop
or
lods
ljmp
aam
fs
jno
aam
stos
jge
ret
lock
fisubs
cli
les
sub
add
repz
das
lods
mov
mov
sub
fiadds
push
mov
ret
xchg
sbb
repnz
aas
sub
or
jl
xor
mov
sub
push
ljmp
dec
jae
adc
ljmp
inc
mov
cltd
mov
mov
nop
inc
ror
lds
out
dec
movsb
movsl
adcl
insb
sub
mov
dec
or
or
add
pop
rol
scas
sahf
sbb
pop
cwtl
push
xchg
jg
test
clc
test
loop
ret
cwtl
or
mov
mov
lock
cmp
arpl
repnz
push
ret
in
jbe
addl
sbb
mov
lds
adc
outsl
and
jmp
mov
jns
mov
pop
cld
sahf
add
mov
and
incl
jb
in
aas
pushf
xchg
add
lcall
mov
jb
or
aaa
lret
mov
notb
or
subb
jecxz
and
pop
lahf
xchg
jecxz
into
repz
add
mov
js
fwait
pop
sbb
jg
int3
cld
jne
pusha
shlb
dec
sbb
cmp
mov
push
xchg
cmp
jnp
xchg
arpl
bswap
push
adc
scas
dec
push
adc
xor
es
adc
scas
xlat
in
gs
loope
and
xchg
or
and
ret
clc
loope
add
frstor
lea
or
cmp
dec
jmp
cmp
inc
int
cmpsb
push
aam
icebp
mov
lret
int
jle
test
inc
les
xor
or
call
es
addr16
addr16
call
cmp
jae
pop
adc
sub
mov
push
mov
jb
xchg
loope
push
mov
cld
pop
out
test
sub
jb
fcomps
add
or
jecxz
in
lods
pop
pop
push
nop
xor
add
sbb
cs
aas
xchg
ja
or
add
ret
cwtl
and
out
ret
sub
sub
push
in
sarb
pop
mov
jp
pop
int3
mov
arpl
push
sti
adc
cwtl
xchg
aam
out
jge
pop
mov
sbb
pop
xchg
shlb
popa
sub
ds
push
push
inc
mov
into
scas
and
jge
mov
xchg
sahf
xchg
hlt
add
sub
lods
adc
mov
cmp
pop
mov
add
idivl
sub
xchg
or
lock
mov
sub
mov
cmp
sub
or
cld
mov
pop
pop
fprem
pop
loopne
mov
outsl
cmp
out
or
inc
mov
xchg
sub
shrl
sbb
hlt
xchg
push
jne
jge
ljmp
or
pushw
mov
xor
mov
mov
and
dec
cmpsb
push
repz
push
fsubs
cmp
rcl
mov
cli
dec
out
mov
mov
daa
ret
xor
into
and
jle
lods
xchg
mov
or
loopne
es
mov
sub
cmc
leave
shlb
jle
lds
inc
push
sbb
imul
inc
xorl
and
mov
sbb
test
adc
outsb
inc
add
imul
aas
icebp
fwait
lea
mov
mov
push
pop
sub
xor
xor
pop
mov
dec
or
out
es
lds
or
sbb
rclb
xchg
sbb
popf
inc
arpl
lods
pop
push
jne
push
je
rorl
sub
pop
daa
repnz
pop
pop
pop
mov
jmp
push
ds
ret
pop
roll
xchg
popf
cmp
scas
inc
mov
mov
sarl
pop
dec
xchg
lcall
loopne
or
adc
sti
stos
aaa
out
dec
in
shlb
cltd
fdiv
mov
dec
addr16
mov
ljmp
gs
inc
or
insb
loop
movsb
and
std
shr
mov
mov
stc
rcll
dec
in
divb
sahf
push
xchg
pop
push
add
lgs
pop
cmc
test
sub
pusha
sahf
mov
inc
leave
out
and
mov
ror
xor
jno
insb
sub
cmp
insb
gs
bound
dec
mov
std
xchg
push
push
sbb
imul
pop
xchg
push
sbb
xchg
test
sub
leave
mov
xchg
cltd
push
mov
cmp
and
outsb
das
leave
clc
js
push
arpl
xor
add
jae
pushf
fadd
sub
xchg
mov
pushf
test
cmp
add
mov
icebp
fsubr
inc
outsl
sbb
in
cmp
adc
imul
xchg
jl
icebp
cmpl
jne
xchg
sub
or
aaa
cmp
and
ret
outsb
repz
aad
popf
add
sbb
loop
notb
cs
jbe
sbb
jmp
add
and
mov
push
xor
inc
adc
data16
iret
popa
mov
into
decb
cli
inc
movsb
call
mov
enter
stos
inc
jp
add
out
jp
call
aad
popa
stos
jmp
inc
aas
xor
push
mov
mov
jo
sub
cld
out
pusha
cmp
xchg
jae
leave
pop
cwtl
imul
jnp
or
movsl
mov
call
dec
orb
mov
xchg
loope
jae
test
scas
inc
cmp
pop
push
jp
mov
jge
mov
add
std
into
and
andb
int3
push
jns
xor
jbe
xor
cmp
cmp
mov
call
and
xor
test
mov
or
sub
scas
les
and
scas
ss
imull
mov
fbstp
mov
adc
adc
pop
pop
iret
pop
jno
mov
jmp
cld
pop
and
mov
movsl
adc
or
mov
pop
cwtl
jg
add
cmpsb
cmp
bound
and
and
jne
adc
clc
test
pop
les
or
or
add
push
int
and
pop
pusha
das
add
mov
pop
aas
mov
in
test
xchg
fisubs
mov
loop
pop
imul
lcall
xlat
xchg
sahf
pop
in
jp
and
add
sbb
cmpb
lds
add
xchg
mov
jnp
pop
xchg
stc
repnz
mov
sub
mov
xchg
dec
ret
repnz
decl
loope
adc
in
add
xor
rorl
loope
test
jb
lahf
sub
xchg
push
xlat
bound
pop
dec
and
add
xchg
sbb
stos
inc
inc
cmp
xchg
sbb
adc
and
or
cmp
into
mov
adc
mov
sbb
push
mov
test
loopne
mov
xor
int3
sarb
fadd
pop
pop
and
icebp
push
mov
xchg
les
sar
repz
sbb
repnz
push
xor
mov
shl
mov
outsl
push
or
dec
push
xor
lds
inc
mov
add
outsb
mov
es
outsl
xor
pop
jae
filds
shll
je
mov
hlt
xchg
push
pop
movl
mov
rorl
shl
xchg
lret
push
popa
push
or
inc
sub
and
cmp
and
lret
mov
rol
mov
add
jne
and
jo
shrl
mov
xor
sbb
ja
mov
xorb
lret
scas
inc
aas
in
or
insl
sbb
flds
cld
mov
std
xchg
sub
jp
dec
stc
xchg
int3
xor
inc
subb
repnz
lcall
push
bound
add
js
cmp
dec
add
dec
out
pop
inc
in
lods
repz
aaa
push
and
jo
dec
jo
jmp
nop
dec
shl
pop
mov
mov
add
out
adc
hlt
into
pop
icebp
bound
loopne
nop
sbb
out
xchg
and
mov
lret
xchg
loopne
aad
lahf
cltd
and
stc
lret
mov
test
jp
rorl
xor
push
hlt
popf
pop
or
and
flds
daa
push
inc
add
xchg
std
or
sbb
test
popf
pushf
cmp
xor
xor
loope
or
jle
loopne
add
nop
scas
fcmove
push
push
das
cmp
fadd
clc
into
inc
rcl
sahf
pop
jo
loop
xchg
cmp
mov
push
aas
mov
and
fldl
pop
sub
sar
scas
jge
stos
cwtl
fmull
cld
lods
hlt
mov
sahf
mov
dec
cli
mov
inc
inc
or
movsl
daa
imul
jns
or
fdivl
outsb
daa
shrb
addr16
sub
sbb
rcrb
addr16
adc
das
dec
ret
push
cmp
inc
pop
and
inc
shrb
mov
jb
sub
cmp
sar
sub
jnp
add
jnp
sub
push
sbb
mov
pusha
add
fs
shlb
add
push
mov
mov
into
cmp
aas
or
push
jp
aam
xor
out
int3
push
sbb
push
aad
and
cs
fcoml
repz
test
test
aaa
sbb
pop
add
cltd
xchg
js
xor
cmp
into
out
jnp
adc
sahf
xor
mov
sbb
adc
int
and
cwtl
push
in
pop
stc
mov
nop
clc
popa
lds
popa
jg
jecxz
rol
or
test
imul
xor
dec
jb
xchg
cli
fsubr
xor
mov
add
cmpsl
push
inc
loop
mov
cs
add
mov
add
adc
ret
and
cwtl
pop
int
pop
and
push
cld
sbb
out
inc
adc
pop
leave
repz
add
push
ret
dec
lcall
push
jecxz
push
mov
js
nop
loope
mov
dec
inc
push
sbb
or
push
cmp
xor
lcall
add
inc
fisttpll
stc
stos
push
ds
cmp
fwait
inc
dec
xchg
outsb
cmpsb
jg
jle
push
push
xor
push
pop
dec
and
add
xchg
fildll
insb
sbb
out
push
pop
xor
mov
in
sub
sub
xor
sbb
pop
push
xadd
out
pop
jp
inc
dec
pop
in
jge
jbe
cli
mov
adc
push
in
outsl
popa
pop
movsb
push
negb
ljmp
into
inc
add
xor
jne
mov
jl
push
and
xchg
pusha
imul
xchg
int3
mov
add
push
icebp
sbb
and
test
aad
or
and
scas
xchg
insl
stos
xor
and
pop
adcl
and
pop
pop
filds
enter
or
lcall
push
xor
sti
stc
jne
imul
rcrl
aas
cmpsl
lods
insl
rcrb
sub
in
mov
cmp
roll
lahf
push
sbb
in
mov
fidivrl
outsl
pusha
cmp
dec
jo
dec
mov
dec
movsb
in
add
fsubl
test
xchg
add
popa
sub
rol
js
dec
jmp
add
fcomps
imul
mov
adc
out
hlt
and
fbstp
enter
out
ljmp
out
outsb
push
cmp
mov
ret
inc
inc
rclb
dec
movsl
dec
xor
pop
mov
mov
data16
sbb
push
pop
or
mov
fbstp
xor
shrl
push
ljmp
pop
movsb
or
jg
in
mov
rcl
aaa
repz
dec
lret
aas
add
dec
cvtps2pi
mov
mov
mov
mov
js
movsb
sub
ljmp
std
in
inc
aam
lret
xchg
out
loopne
incb
out
mov
imul
mov
mov
add
sbb
lods
rcl
filds
cli
testl
les
shll
adc
stc
std
pop
fdivs
scas
lea
testl
fidivrl
pop
movsl
call
lret
jnp
cmp
jle
mov
sar
cwtl
addl
pushf
and
loope
cmp
aaa
jns
fsubl
xchg
out
cmpsb
mov
lods
iret
icebp
insb
or
std
cmp
mov
into
xor
pop
xchg
sahf
adc
pushf
inc
repnz
xchg
insb
jno
fxch
push
mov
cmp
imul
jp
and
call
cmp
push
loop
mov
sahf
xchg
sub
enter
in
fsubl
or
dec
sub
mov
movsl
cmp
dec
out
lcall
push
repnz
test
pop
xchg
inc
cmc
std
push
aas
shr
add
sbb
movsl
cmpsb
push
dec
mov
xor
fisubrl
div
mov
outsl
and
rorl
add
lods
out
sbb
mov
xor
or
shrb
das
push
clc
ljmp
add
in
pop
cmp
inc
test
sub
push
sub
gs
dec
sbb
push
sub
pop
mov
xchg
ljmp
xor
movsl
ss
inc
xchg
mov
std
xchg
rorb
xor
cld
inc
outsb
fsubl
adc
ficompl
pop
mov
push
mov
fiadds
mov
in
sbb
clc
xor
ss
xchg
inc
repnz
xchg
mov
into
out
or
bound
mov
shlb
cs
mov
mov
ds
mov
lea
and
adc
add
das
jno
das
in
lods
fisttpl
imul
add
shlb
rcll
jecxz
int3
mov
iret
inc
lods
cmpsb
xchg
jp
repnz
cmpsl
in
orl
aad
lahf
push
data16
shl
andb
mov
mov
and
repnz
je
scas
adc
outsb
outsl
pop
cmp
stos
shrl
lods
aam
pop
lcall
scas
rclb
test
aad
dec
into
jmp
xchg
or
dec
stos
fs
add
xchg
out
insl
mov
aad
lea
sub
jle
lcall
fwait
and
inc
sub
ja
stos
pop
inc
add
sub
dec
jns
cmp
out
pop
mov
dec
inc
clc
mov
push
fisubs
xchg
adc
pop
pop
mov
orl
lds
popf
mov
sub
int
sub
or
xchg
sub
mov
push
decl
cld
ror
xor
mov
pop
mov
add
repnz
jmp
xchg
shll
mov
cmp
pusha
jmp
stc
ja
out
outsb
adc
and
mov
js
mov
sahf
cmpl
cmc
daa
ret
cmp
sub
or
or
testl
or
dec
inc
adc
jno
pop
mov
imul
jmp
es
arpl
adc
repnz
ret
jle
inc
sbb
add
cs
jmp
rcrl
add
cmp
shll
xor
xor
aaa
mov
or
inc
jno
xchg
and
jge,pn
in
dec
mov
xchg
bound
aaa
fadds
popa
gs
dec
mov
stos
xor
lret
pushf
iret
sub
ja
cld
fdivl
mov
xchg
fistpl
xchg
imul
es
sub
int3
cli
ss
push
inc
xchg
loope
inc
orb
sarl
push
jmp
rcrl
fldcw
mov
repz
add
inc
inc
bound
out
imul
mov
mov
shll
sahf
fnstcw
aas
mov
lret
xchg
add
push
cmc
cltd
aad
push
sbb
cmp
dec
pushf
inc
jmp
xchg
cmp
mov
jmp
inc
jl
je
push
sbb
inc
cli
dec
or
dec
dec
inc
incl
pusha
jg
cmpsb
adc
mov
sbb
pop
mov
ja
leave
cwtl
cmp
or
or
insb
xor
repz
out
cmp
hlt
pop
testl
pop
mov
xchg
jg
jecxz
cmc
xlat
adc
xchg
push
push
lret
je
bound
mov
in
lret
pusha
fidivs
pop
xchg
add
mov
mov
jg
mov
out
mov
jae
lds
loopne
mov
jmp
or
mov
pop
in
repnz
in
sti
testb
imul
cmp
ret
iret
imul
loopne
pop
or
ljmp
out
mov
and
xchg
loope
xchg
mov
ret
sarb
mov
in
fnstenv
xchg
xchg
movsl
fndisi(8087
aad
fsubrl
pop
xor
jecxz
mov
mov
out
pop
fiadds
jb
hlt
and
int3
repnz
hlt
inc
arpl
or
jo
mov
into
pop
popf
bound
push
mov
in
outsb
mov
sti
sbbl
sahf
sub
sub
adc
xor
mov
stos
cmp
and
jl
sbb
ret
aam
rorl
add
cltd
lahf
cs
adc
adc
fidivrl
adcb
mov
testb
ds
or
mov
fwait
mov
int3
cmp
mov
mov
int3
pusha
pop
in
mov
add
push
pop
mov
lcall
ret
sub
aam
sbb
push
ror
call
inc
mov
dec
mov
lcall
into
pop
cmp
out
xorl
lods
std
inc
cmpsl
data16
scas
fcmovne
enter
mov
jns
and
int3
jbe
and
lods
lods
sbb
out
adc
test
jmp
fs
sub
sub
into
mov
jp
addb
sub
inc
xlat
cld
fdivrl
ja
and
test
outsl
scas
movsb
out
test
sar
pop
imul
dec
addb
xorl
out
cs
xchg
nop
mov
pop
and
pop
adc
jno
sar
es
push
adc
pop
out
in
daa
test
mov
arpl
mov
xchg
cmp
or
loopne
in
leave
into
jno
loopne
sub
cld
push
stos
in
lcall
imul
mov
outsl
mov
dec
int
lds
add
jns
cmpsl
add
scas
es
and
int
insb
push
mov
lea
adc
pop
mull
lock
mov
rcrb
push
out
lods
mov
dec
gs
add
inc
push
leave
jle
in
and
pusha
in
rolb
cmp
adc
fldenv
push
jge
xor
push
adc
flds
out
cld
shll
and
daa
shl
inc
loop
jns
leave
jnp
loope
out
xor
vpmulhuw
in
outsl
pop
call
outsb
enter
iret
xor
jp
cmc
mov
js
imul
dec
xchg
clc
subb
adc
push
sub
nop
repz
orl
push
add
loop
mov
shlb
sub
ss
add
pushf
and
jle
add
dec
call
daa
rclb
sub
pop
ret
sbb
test
shlb
dec
xor
test
adc
mov
add
cld
lcall
mov
sbb
cwtl
xchg
fwait
add
repnz
outsl
or
mov
xchg
cmpsb
call
cmp
and
adc
push
outsl
lods
aad
push
mov
popa
mov
popf
xchg
fwait
fs
stc
pushfw
cmp
loope
out
mov
ficompl
adc
std
lods
fwait
lods
add
inc
pop
pop
pop
xor
inc
movsb
arpl
sbb
outsl
push
jne
xchg
stos
decl
out
jle
adc
sub
push
add
sub
faddl
jge
sti
or
int
or
pop
dec
dec
movsb
arpl
push
sahf
mov
xchg
fsubrl
sub
loopne
pop
fwait
mov
mov
call
xchg
rep
mov
add
push
gs
mov
cmp
mov
jb
cmpsb
pop
push
cmp
cmp
dec
mov
out
into
repnz
dec
push
cmpsl
shrb
add
xchg
lds
popa
sbb
xor
in
or
inc
cmpsb
cmp
mov
jmp
xor
outsb
xor
mov
sti
dec
je
mov
into
push
pusha
xor
rcll
sahf
pop
dec
fdivrl
xchg
je
jne
adc
xchg
or
xor
test
hlt
mov
fldcw
jo
pmulhuw
sbb
ss
addr16
sub
int3
or
push
push
mov
sub
xchg
cmc
and
push
jo
arpl
cmpsl
jp
into
ror
add
int3
jg
pushw
not
sub
mov
adc
sbb
sbb
push
fs
mov
cmc
push
and
xor
fsts
adc
scas
pop
outsb
mulb
or
lock
adc
and
mov
test
ljmp
fisubrs
nop
cltd
movsb
out
out
or
push
rorb
fildll
dec
outsb
jl
jecxz
jb
mov
add
pop
mov
das
cmp
push
xor
je
iret
ret
popa
mov
lods
out
add
mov
pop
push
adc
adc
cmc
add
inc
dec
adc
outsb
cli
fists
movsl
push
jb
fs
cmc
test
push
call
cltd
pop
cmp
out
out
pop
pop
sbb
js
insl
adc
insb
or
dec
pop
sub
sub
inc
aam
mov
popa
enter
fs
test
add
lea
out
mov
leave
mov
dec
and
pop
mov
xorb
cmp
push
mov
jae
outsl
and
push
sbb
leave
sbb
in
xchg
loope
push
loop
iret
adc
std
mov
sub
sub
push
mov
popf
gs
movsb
mov
test
insb
ss
out
pop
cmp
add
jp
adc
rclb
cwtl
xchg
fcos
movsb
mov
outsl
push
add
mov
fldl
and
cmp
pop
rorl
mov
fldt
xlat
pop
inc
xchg
push
jecxz
dec
fistps
dec
sub
loope
xor
push
js
xlat
mov
hlt
sub
pop
fstpt
mov
sbb
insb
out
dec
clc
mov
or
push
fisttps
mov
xor
xlat
lds
mov
lods
mov
mov
ljmp
or
xchg
repz
insl
mov
popf
xlat
int3
push
stos
xor
add
fmul
cltd
add
fldcw
mov
jns
push
ret
mov
in
insb
insl
out
cmp
mov
inc
mov
mov
cs
pop
aad
jge
in
add
and
sbb
push
inc
sub
movsl
cmp
fsubrs
mov
or
cmp
xchg
inc
dec
repnz
fwait
sbb
call
add
outsl
lds
iret
inc
pop
or
sbb
mov
rorl
ds
rol
inc
andl
gs
inc
sub
pop
ljmp
mov
stos
mov
shlb
pop
push
imul
push
push
mov
leave
std
inc
out
movsb
scas
repnz
mov
add
imul
pusha
mov
filds
adc
sbb
cli
mov
icebp
data16
cs
fisttpll
int3
adc
repz
cmp
pop
out
mov
or
jp
add
lods
in
cld
jge
jg
or
cmp
pop
sahf
call
dec
outsl
cmp
cld
cltd
lret
push
xchg
and
adc
xchg
sbb
out
std
adc
int
dec
adc
fisttpll
mov
mov
dec
sub
ffree
xor
jns
test
icebp
xor
stos
stos
and
in
fiadds
popa
jecxz
push
loopne
cmp
jo
lods
pop
and
incl
pop
stc
or
adc
cmp
lahf
xchg
cs
jb
push
lods
sbb
adcl
inc
mov
rolb
mov
mov
lahf
or
mov
std
adc
lods
inc
cmpsb
int
movsb
sub
dec
js
loopne
add
add
popf
loopne
call
jno
fwait
pop
or
shll
repz
adc
mov
cli
mov
in
xor
xor
cmp
ss
xchg
jmp
lcall
mov
sbb
push
out
sbb
sbb
xchg
sti
cmp
repz
call
fldenv
adc
out
out
jl
clc
mov
out
neg
pusha
pop
scas
xchg
adc
pop
imul
js
imul
out
or
cmp
add
lods
fcmovb
push
test
inc
push
xchg
movsb
cmp
jmp
stc
dec
jnp
add
rorl
cmc
add
cmp
push
ds
xor
mov
pop
lods
out
cmp
sub
inc
insl
icebp
push
mov
sub
or
sbbb
stos
pop
push
cwtl
sub
cmp
stos
adc
cmp
aaa
int
out
push
xchg
movsl
jge
xor
xchg
pop
std
inc
jae
loopne
je
ja
daa
into
fnstcw
int
out
mov
imul
push
test
adcl
mov
inc
mov
mov
dec
cmp
sub
mov
sbb
addr16
adc
dec
idivb
shl
add
enter
xor
cld
cs
lods
mov
and
aad
sbb
scas
shrb
sub
and
shlb
push
inc
mov
lock
adc
mov
inc
pop
bound
adc
mov
and
orb
push
outsl
push
fnstcw
or
adc
clc
pop
fwait
mov
test
cltd
subb
pop
push
push
mov
imul
movsb
inc
test
jg
pusha
movsb
dec
jmp
insb
xchg
aad
popf
jne
dec
xchg
inc
aad
faddp
dec
test
or
lea
pop
ss
push
xor
les
icebp
movsl
pop
jg
sar
jbe
sbbb
and
stos
fs
test
call
push
and
and
cltd
xchg
push
xchg
mov
dec
hlt
jl
bound
dec
pop
enter
out
mov
mov
mov
or
lods
mov
cmp
sbb
add
dec
and
dec
sbb
hlt
sbb
fnstsw
dec
test
pop
mov
jo
test
pop
outsb
or
add
inc
add
xchg
stos
mov
popf
clc
int3
add
push
test
cmp
jecxz
xchg
pop
loope
xchg
lods
rorl
stc
cli
jae
int3
loopne
data16
insb
aam
xchg
dec
aad
xchg
stc
stos
scas
xlat
sub
movsb
sbb
mov
stos
iret
std
jne
mov
mov
mov
cmc
adc
pop
sarb
push
repz
inc
test
and
mov
sahf
inc
jae
sub
loope
and
bound
es
jno
cli
sbb
subb
fldt
push
inc
push
ja
mov
pop
fbld
in
in
push
leave
push
xchg
lret
test
stc
dec
mov
mov
test
decb
xor
push
push
sbb
xchg
mov
scas
xor
fcmovne
dec
insb
jbe
test
pop
push
ljmp
jno
mov
xchg
add
xlat
mov
pop
gs
inc
pop
loopne
int3
jle
adc
xor
jb
mov
cltd
push
mov
or
mov
pop
lock
into
add
js
cmc
in
sbb
jnp
pusha
pop
shlb
rclb
adc
arpl
push
arpl
test
sti
leave
push
or
push
sahf
push
scas
mov
jo
jo
sbb
or
mov
icebp
mov
flds
fidivs
sbb
sub
sub
clc
cmp
shl
sbb
insl
outsb
fsubr
out
insl
mov
mov
or
push
jbe
rcrl
sub
in
jb
cmp
mov
lods
lret
cld
sbb
les
inc
js
sub
mov
cwtl
out
adc
mov
insb
movsl
int3
dec
imul
jmp
and
dec
stos
scas
lret
add
sahf
ss
test
inc
aas
inc
pop
outsb
ret
stos
pop
push
mov
xchg
add
sar
jg
jmp
xchg
add
add
push
filds
mov
cmp
pop
mov
jg
shlb
jb
scas
jo
mov
push
sbb
pushl
dec
sub
je
int
push
in
fwait
int3
cmp
fldl2t
stos
notl
jno
jge
filds
push
fidivrl
ret
out
xor
adc
int
push
jbe
shll
or
insb
dec
pop
test
push
test
push
pop
mov
xlat
lret
ss
pop
and
imul
js
nop
stos
inc
stos
xor
jbe
std
inc
rcrb
mov
sbbb
aas
pop
push
das
outsb
arpl
push
and
or
cmpsl
aaa
mov
sub
mov
sub
lds
adc
pop
pop
sub
dec
inc
push
movsb
mov
jae
inc
xchg
xlat
push
sbb
notl
fnsave
clc
inc
jbe
les
mov
sub
sahf
mov
xchg
dec
sti
mov
scas
sahf
cli
inc
iret
mov
jb
mov
or
push
jno
loope
or
lock
loope
mov
dec
fnstsw
ficomps
repz
arpl
pusha
ds
fnstsw
inc
xchg
mov
and
xchg
adc
push
adc
pop
sub
push
rcrb
nop/reserved
mov
dec
lea
sbb
or
cltd
lea
jl
loopne
xor
push
dec
je
clc
mov
gs
lock
inc
mov
leave
popf
dec
fimuls
imul
pop
jnp
mov
push
das
sbb
jbe
add
push
lcall
mov
mov
push
lea
push
lret
mov
imul
cmc
cmp
jno
mov
imul
pop
and
cmpsb
cmpsb
xchg
mov
ljmp
cltd
dec
add
mov
insl
adc
div
es
mov
aaa
adc
jno
int
mov
cmp
imulb
sbb
and
mov
inc
xchg
sti
test
pop
cs
and
cmpsl
xchg
or
mov
cmp
xchg
sub
iret
push
rcr
or
adc
xchg
mov
xchg
fstpt
add
jp
jno
sub
xlat
sahf
xor
pop
les
jo
sub
add
stos
push
jns
cltd
pop
test
pop
dec
mov
mov
mov
mov
xchg
dec
repz
in
jmp
xchg
add
aaa
mov
divl
int3
enter
dec
mov
add
popa
add
test
jo
pop
daa
ja
sbb
clc
mov
aas
mov
push
shl
jb
sub
and
cmp
inc
xorl
pop
scas
sahf
jo
cs
push
jnp
cmpsb
imul
loope
in
std
test
xor
fimull
or
jmp
mov
popf
inc
pop
mov
mov
jae
pushf
mov
jb
ja
xchg
cwtl
inc
mov
aad
xchg
aas
loopne
lods
js
add
movsl
cmp
out
mov
xor
aaa
pushf
lock
and
or
jp
jo
pop
stos
dec
adc
inc
fisubl
movb
fbld
pop
fcmovne
xor
add
hlt
rolb
xchg
cwtl
cs
loope
xchg
nop
mov
out
lock
jl
icebp
cmc
rol
or
iret
mov
mov
cwtl
mov
test
jg
in
cs
xor
jecxz
mov
cmc
push
insb
das
add
mov
outsl
mov
insl
nop
and
xchg
and
xchg
in
mov
out
pop
sbb
inc
lods
daa
push
ds
inc
mov
lock
fidivs
push
mov
and
orl
adc
je
xchg
aas
shr
mov
push
rcrb
outsl
shl
mov
or
add
in
xchg
jnp
sti
add
cld
stc
mov
dec
mov
cmp
sbb
jmp
push
rclb
rolb
mov
dec
mov
sub
pop
cmp
pop
dec
pop
movsb
bound
inc
mov
aam
push
xchg
popf
ja
cli
mov
jbe
fadds
xchg
imull
xor
pop
add
pop
cmp
push
sbb
xchg
or
lods
vaddsubps
pop
jg
xchg
into
xor
lsl
pusha
scas
mov
mov
jle
add
pushf
decb
xorl
arpl
inc
lods
pop
jo
test
fucom
inc
xor
aaa
iret
sub
or
out
jg
pop
mov
imul
push
mov
in
sub
dec
push
lock
lods
ret
xchg
jnp
inc
daa
in
dec
bnd
sub
mov
out
es
xchg
jle
in
stc
xor
add
and
lds
out
clc
and
mov
cmp
pop
mov
scas
push
push
fistpll
cli
jnp
jg
sbb
and
jne
ret
fsubrl
push
jae
adc
ja
mov
fcomp
daa
sub
repz
push
test
adc
and
idiv
flds
setbe
adc
fsubs
pusha
xor
gs
or
add
out
arpl
sbb
xor
mov
subb
xchg
mov
dec
shl
push
je
add
pop
sub
jae
jb
rcrl
cltd
push
sbb
test
xor
add
jg
mov
lods
insl
cmp
hlt
and
mov
cwtl
outsl
aad
pushf
lcall
mov
sub
and
adc
insb
mov
iret
xorb
fsubs
sbb
xlat
jg
in
lahf
mov
popa
sbb
test
iret
adcb
orl
mov
rcrb
xchg
add
cmp
pusha
and
jg
outsl
add
or
mov
pop
cmp
cmp
or
adc
or
aas
mov
shrb
dec
leave
xchg
and
in
inc
and
imul
push
cmp
push
lcall
lahf
dec
sbb
and
rcll
mov
push
adc
xchg
xchg
stos
rolb
or
xor
aad
xchg
add
mov
xchg
addr16
bound
mov
cmp
jae
scas
inc
stos
stos
cmp
in
test
cmp
xchg
xchg
out
push
push
push
jg
push
jge
outsb
outsb
dec
insb
fcmovnbe
xor
or
pusha
in
lods
mov
lds
mov
mov
cmp
and
loop
mov
repnz
or
xchg
ss
push
xchg
call
call
mov
pop
inc
jno
sub
movsl
jle
push
push
push
xchg
dec
mov
adc
add
test
mov
out
adcl
cmpsl
cltd
repz
pop
jns
ljmp
mov
sahf
xchg
loope
mov
xchg
cmpl
testb
xor
insb
lea
mov
mov
cmpsl
cmpsl
mov
pop
leave
std
loope
push
std
dec
std
jmp
or
xor
mov
sub
jmp
sub
divl
aad
jle
stos
fsubrp
mov
xor
mov
test
push
outsb
lock
jno
inc
fwait
add
xor
mov
adc
dec
push
es
push
jae
rorl
sbb
ljmp
add
pusha
lcall
adc
cmpsb
dec
loope
fcom
xor
sub
outsl
cmpsl
je
inc
sbb
rol
shrl
leave
pop
cli
push
ret
stc
push
pop
iret
int
push
leave
jge
sub
lcall
lods
test
aam
sub
add
mov
xchg
push
pop
pop
jl
cs
xor
fwait
inc
adc
scas
jmp
mov
sti
or
jne
push
push
lret
jbe
xchg
rcll
sub
loopne
jl
hlt
stos
out
and
dec
xchg
inc
mov
into
shrb
xchg
xlat
jnp
mov
jecxz
sbb
pop
icebp
mov
jno
and
push
jnp
cmpb
pop
mov
push
jne
insl
add
push
jmp
adc
jo
push
dec
sub
test
push
inc
mov
push
hlt
js
loopne
and
sub
mov
aam
aad
adc
stc
lret
cs
fs
pop
add
stc
rorb
loopne
fisubl
repz
mov
repnz
movsl
ffreep
adc
sub
mov
cs
out
data16
pop
div
inc
dec
inc
cmc
mov
scas
int
popf
mov
sub
outsb
xor
and
xchg
loope
mov
mov
adc
xor
int
rcl
mov
xchg
dec
mov
loopne
dec
pop
xchg
lcall
rolb
ljmp
xor
mulb
push
xchg
call
mov
cmp
insl
sbb
push
lock
in
dec
pop
lea
fstpt
mov
dec
push
push
fmul
jbe
sub
dec
xor
fisttps
iret
inc
addl
pushf
add
or
pop
mov
lock
sarb
cmpsb
lret
fiaddl
or
mov
iret
inc
mov
dec
std
cmp
negl
inc
sbb
js
ror
mov
mov
pop
dec
mov
test
mov
aam
sbb
mov
ret
nop
sub
pushw
aam
push
jmp
xchg
roll
or
cmc
mov
adc
out
add
sar
mov
mov
mov
mov
cmp
jae
cmp
adc
dec
pop
cmp
dec
mov
fwait
sub
pop
test
scas
mov
xchg
loop
jno
mov
test
cs
or
or
es
dec
cmpb
mov
mov
inc
imul
stos
aad
int3
test
out
les
or
scas
ljmp
imul
icebp
or
mov
dec
call
je
js
jle
sub
es
fistpll
fs
mov
mov
inc
xchg
loop
dec
mov
testb
mov
jo
sbb
mov
lods
jb
pop
jle
xchg
insl
scas
inc
lock
ret
push
mov
fildl
xor
sub
xor
ds
and
out
aaa
lcall
pop
cmp
mov
pop
cmp
sub
mov
rolb
stc
jecxz
repz
mov
and
ja
push
mov
ljmp
out
int
jne
je
idivb
jo
push
fbstp
call
sbb
push
femms
ret
insl
sub
push
pop
xchg
push
clc
jg
cmpsb
jnp
dec
out
xor
push
lret
dec
xor
shlb
or
ja
add
and
cltd
inc
jb
push
mov
add
mov
or
jmp
testb
leave
rorl
mov
jge
jle
std
and
jl
rcrb
loop
imull
sbb
cmp
jp
jns
push
test
add
cmpsl
sbb
push
popa
push
mov
or
fcmovnu
js
rep
and
bndstx
notb
inc
cli
fstl
xchg
in
andl
jp
and
add
inc
xor
in
outsl
cmp
enter
jmp
or
cli
stos
pop
jl
lods
js
pop
mov
sub
leave
mulb
push
jns
cwtl
outsl
push
stc
mov
loope
jl
xchg
fldcw
xchg
cld
test
in
rcl
mov
xchg
xchg
ljmp
incl
and
push
push
xlat
mov
rcll
sbb
xlat
cmpb
and
dec
ljmp
inc
sbb
negb
xlat
scas
inc
mov
inc
sbbl
xchg
jge
in
ret
enter
mov
push
in
xchg
sbb
arpl
add
xchg
in
or
addr16
xor
or
cmpb
das
adc
or
in
lds
pop
fstl
js
icebp
push
xor
ret
mov
sahf
shrb
fwait
into
bound
call
jmp
pusha
fisubs
and
aas
push
insb
or
orb
mov
cmpsb
repz
xchg
xlat
test
loopne
xor
jg,pt
sub
jge
pop
cs
xor
cs
or
dec
jns
out
xor
xlat
sub
int3
in
iret
iret
jg
ja
mov
mov
jns
loop
xor
mov
cli
int
push
arpl
fisubl
inc
jge
aas
dec
popf
insb
fwait
cvttps2pi
fdivrp
pop
daa
std
mov
data16
sbb
push
xchg
testl
lret
jnp
enter
mov
cmpsl
jns
fcoms
add
mov
loopne
lea
inc
push
sti
scas
and
shlb
cli
xor
jns
cmp
pop
jae
mov
sub
outsb
push
out
rcll
mov
lods
jmp
inc
lock
rol
leave
and
int
xchg
sahf
out
fnstsw
sub
cmp
stos
shlb
cmp
stos
pop
mov
pop
adcl
outsl
mov
add
call
int3
mov
sub
jns
fldenv
mov
inc
ss
popf
jne
inc
cwtl
xor
add
icebp
inc
cli
and
outsl
push
shll
pop
mov
mov
out
shll
jno
push
xchg
cmpb
push
dec
jecxz
cmp
pop
jns
jmp
lods
ja
xor
aad
adc
xor
cs
mov
sbb
stos
ror
ds
nop
jnp
xor
cld
mov
sbb
push
push
xor
adc
out
pop
mov
push
push
test
or
lods
popa
mov
dec
xchg
add
andl
pop
fstpl
push
test
movb
test
mov
daa
inc
fdivrl
pop
pop
jecxz
test
mov
es
outsl
xchg
jb
jl
loop
sahf
mov
hlt
sub
sbb
jmp
mov
inc
and
inc
push
pusha
fwait
xor
xor
test
mov
xchg
mov
push
mov
sub
xchg
push
dec
dec
fbstp
mov
inc
adc
cmc
push
xor
jbe
cmpsl
mov
cltd
push
call
cmp
jmp
gs
cmp
stos
test
xlat
cld
push
pop
dec
jae
jge
jmp
and
or
sub
test
rcrb
int3
add
and
into
fs
mov
dec
aad
std
jbe
and
push
cwtl
data16
mov
pop
xor
xor
adc
in
out
orl
aas
daa
std
inc
inc
mov
out
pop
adc
mov
add
pop
inc
adc
lret
lcall
mov
pop
dec
in
adc
popa
notb
cmp
gs
lea
pusha
lods
mov
in
out
add
out
out
push
stc
and
dec
outsb
mov
out
fisubrl
jno
or
fcos
push
mov
inc
cmp
pop
shl
fiadds
cwtl
and
div
loope
cld
mov
int
repnz
mov
je
sbb
jo
cmp
out
lret
call
or
movsl
fistpll
daa
or
pop
and
and
pop
outsl
shll
jae
insb
mov
iret
jp
shlb
data16
int3
mov
add
push
popa
addb
xchg
xchg
push
and
inc
rcl
arpl
std
mov
sub
cmp
loop
pushf
imul
or
or
xchg
in
mov
jg
cmp
sti
pusha
out
mov
jp
dec
and
loopne
jae
dec
stos
fcoml
jecxz
sbb
mov
add
add
cli
lret
inc
adc
xchg
repnz
ss
jns
cli
jmp
sub
popa
punpckhwd
jmp
lret
or
mov
ret
push
pop
sbb
mov
inc
push
in
mov
and
shlb
pop
ljmp
popf
aad
add
pop
push
cmpsl
sbb
xor
sub
cmp
scas
popf
daa
call
mov
fwait
and
scas
add
mov
sbb
jmp
mov
loopne
add
fcoml
cld
fld
pcmpeqw
mov
pop
fs
jmp
mov
inc
lret
adc
adc
jne
xchg
mov
xlat
xchg
add
and
xchg
inc
test
xchg
push
cmp
je
push
mov
pop
mov
ret
xor
gs
adc
adc
xlat
adc
sub
mov
scas
mov
lods
loop
xchg
lods
and
jo
mov
dec
jl
or
scas
shlb
hlt
mov
jns
jecxz
sti
xchg
xchg
xor
pusha
or
lods
mov
push
mov
fwait
mov
lea
and
flds
inc
popf
pop
dec
call
int
mov
leave
xchg
int
mov
call
adc
rolb
scas
rorl
icebp
pop
adc
xor
ds
aad
jp
movsb
mov
in
dec
lret
sub
pop
mov
mov
sbb
int
cmp
je
fstl
daa
int
adc
scas
imulb
scas
inc
jnp
out
xchg
cs
pop
dec
sbbl
shlb
dec
out
addb
ret
lcall
repz
jbe
pop
cld
push
nop
jge
mov
adc
sbb
outsl
sbb
lret
cmpsl
pop
into
push
insb
or
pop
std
pushf
je
sbb
xor
jae
mov
inc
cmp
subb
xchg
shrb
inc
repnz
in
test
std
std
sahf
xor
adc
ljmp
orl
sbb
ss
mov
in
mov
aam
pushf
push
xor
push
pop
mov
insb
mov
lds
shr
sbb
mov
fwait
iret
cld
or
movl
outsl
mov
xor
imul
sub
jne
add
jg
jg
sub
popf
sub
andl
icebp
xchg
fcompl
mov
popa
rol
add
test
mov
lock
loop
outsl
sbbb
push
cli
sbb
sub
addr16
pop
aad
jecxz
dec
xchg
push
pop
int3
movsl
dec
call
mov
push
xchg
xchg
push
rol
mov
lret
dec
lods
adcb
xchg
mov
das
adc
repz
xchg
dec
jmp
and
pop
out
lret
cmpsl
adc
mov
int
int
cmpsl
in
popf
xchg
adc
xchg
leave
jns
sti
rcll
repz
sbb
pop
shll
mov
sbb
mov
xor
push
add
mov
adc
testb
popf
pop
dec
pop
dec
popf
movsb
pop
or
mov
movsb
xchg
pop
fwait
movsl
sbb
cmp
and
fiadds
adcb
das
int
or
mov
pop
fistpl
pop
into
jae
dec
sub
sbb
out
add
shrl
push
jb
daa
mov
push
pop
adc
les
xchg
test
scas
inc
or
or
shlb
in
shr
pop
push
loopne
dec
mov
cmp
movsb
add
lcall
mov
pop
sbb
iret
jne
dec
xor
pmuludq
in
cmovo
int3
cmpsb
or
pop
bnd
fwait
push
add
sub
aas
test
add
jecxz
xor
icebp
shll
xor
dec
mov
int
sbb
push
hlt
inc
push
xor
outsl
mov
in
cmpsl
sbb
jge
lcall
and
push
cmpsb
and
xor
xchg
movsb
push
hlt
sub
mov
mov
repz
jmp
nop
pop
mov
lret
lea
push
and
jnp
pusha
aad
sbb
cmc
mov
stc
and
into
jp
lods
enter
sub
adc
pop
push
jmp
or
ja
leave
mov
inc
inc
arpl
fwait
inc
das
cmpsl
insb
and
xor
scas
aaa
test
xchg
or
mov
es
mov
call
jp
mov
rcrb
movsb
push
xor
mov
fdivrs
pop
dec
sti
pop
insl
mov
cmpsb
adc
jmp
jae
stc
ja
movsb
adc
test
mov
pop
gs
add
cmpsb
std
mov
mov
inc
mov
or
push
cmp
pop
inc
mov
fsubrs
ret
sub
sti
lea
pop
dec
sti
sbb
push
cmp
cmpsb
add
sbb
jmp
push
and
pushf
mov
jge
add
fwait
mov
in
aad
push
add
or
iret
dec
outsb
fildll
add
movsb
xor
ret
fadds
cli
xchg
sahf
xor
jb
inc
ljmp
leave
cli
or
dec
insl
aam
xor
cmp
cmp
shll
int
adc
dec
xlat
mov
xor
pushf
icebp
dec
add
je
movsb
stos
mov
call
popa
outsb
arpl
outsb
das
popa
add
popa
popa
add
das
add
sub
jg
mov
add
push
push
xor
dec
enter
test
adc
xchg
setge
ja
in
data16
cli
loope
pop
in
xchg
cli
pop
data16
in
loope
jne
xchg
in
sti
adc
ja
decl
lods
addr16
and
pusha
and
push
push
xchg
repz
fnstcw
pop
iret
add
cmpsl
into
xchg
outsl
in
lods
mov
jle
cmpb
add
decl
push
lahf
ss
in
cmc
mov
lahf
jbe
jecxz
inc
int3
xchg
xchg
fidivs
push
cmp
mov
scas
aad
add
test
inc
pop
stos
pop
jae
sub
jno
lret
shlb
push
shr
dec
sub
xlat
and
in
inc
dec
jecxz
nop
push
jo
cmpsb
sub
or
out
out
xchg
push
xchg
and
les
pop
stos
xor
add
arpl
dec
inc
je
and
mov
dec
add
xor
test
lret
insl
lock
adc
imul
nop
cs
mov
and
ljmp
inc
test
cld
sbb
mov
push
ljmp
mov
js
dec
push
cltd
jl
sub
jg,pn
jge
push
xchg
jp
sbb
jge
cmp
repz
xchg
jo
add
gs
stc
aam
lret
or
pop
lods
xchg
lahf
flds
aas
in
jl
lcall
sbb
dec
mov
cwtl
dec
push
fcompl
jmp
and
add
lock
aaa
enter
jne
jb
pusha
inc
cmpsl
mov
xor
xor
pop
push
pop
lds
and
jbe
ss
add
mov
add
addr16
testl
mov
imul
and
insl
pop
mov
cmc
pop
pop
in
add
dec
add
std
xchg
fwait
rol
add
push
and
jmp
test
and
push
out
dec
mov
sbb
jp
mov
and
jp
pushl
add
pusha
jno
xor
fcomip
xlat
lock
icebp
test
xchg
daa
pop
or
xchg
arpl
in
movsb
pop
jnp
jge
enter
inc
ljmp
add
sbb
movsl
lahf
test
xchg
fdivs
out
out
lods
push
mov
aam
mov
pusha
sub
adc
dec
dec
add
clc
jg
jns
imulb
stos
popa
insb
inc
dec
pop
jb
pop
fst
leave
movsb
loope
mov
lock
rclb
mov
mov
gs
testl
adc
dec
xchg
jle
sbb
es
sti
xlat
cmp
push
mov
cmp
push
sbbb
and
and
push
inc
rolb
adc
or
fimull
les
jae
lret
scas
out
in
ret
or
scas
mov
xchg
xchg
dec
mov
dec
and
jnp
aaa
es
rolb
cwtl
stc
out
pop
sbb
roll
call
dec
cmp
push
jb
xchg
add
repnz
jae
push
add
fwait
jne
mov
adc
push
push
sub
fdiv
aas
jp
pop
pop
pop
adc
or
ja
add
pop
inc
add
cmc
outsb
mov
lods
aas
pop
scas
sub
and
dec
add
test
pop
sbb
lea
loop
in
and
pop
sub
or
sti
cmp
and
aad
or
add
mov
mov
bound
mov
adc
mov
mov
pop
or
push
push
sar
ss
imul
add
fcmovnbe
scas
cli
popf
dec
jge
cmp
dec
addr16
push
add
into
stc
ja
add
pop
andl
lods
ja
push
add
test
int3
jne
adc
fists
repz
nop
adc
mov
dec
orb
cmp
lret
mov
mov
jne
aas
mov
adc
jecxz
rep
lcall
add
xchg
push
adc
pusha
jo
divb
pop
lret
dec
cmp
push
ja
lods
repz
ret
xor
pop
mov
sbbl
test
cmpsl
and
add
and
jbe
xlat
sarb
mov
insb
out
cs
lods
popa
fisttpll
or
mov
mov
jl
push
ja
jmp
inc
dec
imul
stos
inc
popa
int3
movsl
adcb
or
pop
lcall
sub
or
push
pop
pop
test
cltd
jb
lcall
cmpsb
pop
imul
in
loope
or
les
add
scas
pop
or
pop
popa
imul
lds
mov
pop
ja
ljmp
mov
pop
aam
or
lcall
mov
mov
fdivs
push
daa
aad
mov
dec
insb
cmc
xchg
orb
xor
out
mov
pop
cs
mov
add
pop
inc
clc
push
pop
and
outsb
xchg
insl
addb
rolb
shl
and
or
sub
pop
mov
loopne
mov
or
dec
inc
mov
aaa
xor
push
imul
out
pop
push
fisubs
or
imull
inc
sbb
jbe
adc
or
jecxz
aaa
pushf
dec
jno
bound
mov
call
xorb
pop
arpl
adc
mov
push
jb
fldenv
mov
cs
loop
cmp
ljmp
pushf
jp
fs
mov
ret
xchg
arpl
into
mov
xchg
and
sbb
and
repz
roll
ret
mov
mov
lret
cld
daa
popa
jb
hlt
bound
jb
jle
mov
or
adc
mov
jae
pop
cli
xchg
dec
xchg
nop
fdivl
aad
push
cmp
dec
mov
sub
into
ret
shlb
aas
push
dec
psrlq
stos
int
aas
jne
out
icebp
jge
push
adcl
adc
jb
mov
pop
loop
fstps
es
inc
mov
add
les
int3
or
pop
add
push
cmp
and
mov
add
addl
lods
mov
js
test
inc
adc
dec
xchg
jae
push
push
aaa
inc
cmp
inc
mov
jo
adc
sbb
enter
out
jmp
cltd
dec
movsb
daa
aaa
in
push
jne
loope
aaa
in
cmpsl
and
pop
sub
and
or
icebp
or
xor
mov
cmp
pusha
jl
pushf
mov
jnp
cltd
repnz
fisubrl
cmp
push
lea
xor
out
loop
sbb
mov
mov
adc
int3
enter
incl
mov
push
push
in
xor
addr16
xor
vcmpss
insl
dec
push
xchg
test
or
or
scas
adc
lods
add
sbb
pop
inc
int
mov
adc
stos
loopne
into
rcl
js
pop
pop
cld
fnstenv
and
lods
add
xor
fucomp
jmp
mov
loop
shrb
mov
push
jbe
jp
test
mov
mov
add
mov
sbb
push
test
jle
push
movsb
ja
xor
jb
sbbb
push
or
lcall
ljmp
je
mov
jnp
mov
fisubs
les
cwtl
lds
sub
or
scas
leave
loop
mov
or
xchg
aad
dec
push
lret
push
mov
push
inc
dec
std
dec
shr
xchg
add
ret
nop
mov
sbb
pop
inc
pushf
sbb
mov
outsl
aad
lods
dec
dec
fs
or
mov
xor
sub
imul
cmpsb
lret
inc
adc
fwait
inc
lods
pop
xor
sarl
data16
pop
int3
shll
and
das
mov
imul
mov
jbe
cmpsl
loop
sbb
xchg
fdivl
repz
pop
pop
pop
adc
or
dec
sbb
jne
insb
cmpsb
jecxz
lret
cs
jnp
inc
pop
cs
mov
dec
jg
fldt
jg
shrl
test
ss
fistps
das
pop
xchg
fwait
push
or
inc
push
je
in
inc
stc
addr16
push
fimuls
cmpl
test
jp
xor
sar
test
stos
fwait
out
jbe
xor
mov
or
xadd
pusha
leave
mov
icebp
cmpsb
js
insl
xchg
cltd
inc
cmpsb
adc
aam
dec
rorb
idivb
jmp
pushl
or
in
lret
std
pusha
adc
xchg
cmp
insl
ja
addr16
xor
mov
jecxz
enter
cmpb
or
cmp
adc
gs
and
mov
push
jno
sub
jl
iret
daa
mov
mov
bound
sbb
mov
cmpsl
je
xlat
xlat
fadds
sub
sbb
insl
bound
push
ljmp
or
xor
out
adc
cmp
add
rol
in
cmp
jl
in
outsb
fs
pop
rorb
div
cs
out
and
aam
out
sbb
jg
out
push
dec
mov
jb
nop
cmpsl
ret
sbb
mov
mov
cmp
jne
pop
lret
mov
xchg
cwtl
push
pusha
cltd
mov
xchg
and
push
xchg
jns
bound
cli
lret
adc
mov
stos
fldenv
or
out
push
mov
sbb
or
ds
sub
lret
xor
jl
fwait
and
mov
mov
xlat
test
subb
adc
int3
adc
sub
call
fstpt
inc
scas
inc
adcl
popa
xor
mov
dec
adc
gs
out
mov
xchg
clc
add
pusha
mov
ss
cmp
ret
push
mull
sarl
cmp
hlt
jbe
int
sub
out
pop
imul
inc
jle
sub
jbe
and
xor
lcall
out
scas
mov
loopne
je
mov
ret
push
push
push
mov
out
shrb
dec
lods
sub
sti
iret
jne
popf
pop
mov
xchg
and
addr16
daa
mov
cld
int3
lods
cli
hlt
pop
fiadds
mov
inc
pop
jg
pop
out
repz
adc
mov
add
sbb
adcb
inc
inc
mov
in
loope
decl
pop
pop
lods
cmp
add
imulb
test
cltd
rcl
inc
js
pop
mov
cli
ret
outsl
outsb
xchg
je
adc
xchg
inc
lret
loop
in
cmp
cld
cmpsw
popl
sarb
cmp
and
or
outsl
sub
or
xchg
mov
and
pop
and
rcrl
pushw
ret
notl
sub
test
pop
add
push
scas
fidivl
mov
loopne
jno
dec
mov
jl
jno
mov
lret
ds
shlb
push
mov
leave
bound
cmp
xor
mov
and
jle
in
jne
in
dec
in
je
push
loopne
shlb
pop
and
in
push
pop
lods
or
jmp
xchg
lock
push
mov
and
sub
in
dec
into
test
cmc
lahf
imul
jp
sbb
jo
arpl
out
fst
mov
pop
cmpsl
mov
mov
shr
cmpsl
jge
or
adc
rorb
mov
mov
pop
adc
xchg
sub
ret
dec
loope
fsub
pop
test
pop
mov
lcall
pop
rcrl
or
push
mov
mov
mov
sub
lea
fcmovbe
mov
cmpsb
pop
fistps
mov
inc
scas
or
sahf
insb
xchg
adc
lds
cli
pop
sbb
push
add
push
scas
ret
mov
dec
pop
lods
cld
hlt
sub
jp
sti
pop
mov
daa
xor
cld
out
xor
mov
test
aas
xor
mov
hlt
add
push
adc
adc
ret
stos
and
pop
jmp
vcmpltps
and
push
ss
xchg
pop
into
dec
sahf
jbe
mov
test
push
in
fisttps
add
data16
pop
adc
inc
bound
std
push
shrb
pop
push
sbb
mov
sub
insb
fdivrp
dec
aaa
cmpsl
negb
adc
jp
cmpsl
mov
pusha
sbb
mov
enter
jl
sub
shll
push
outsl
out
std
jg,pn
sbb
ss
xor
xchg
daa
mov
jmp
sub
dec
popa
popa
push
pop
inc
sahf
cmp
push
lds
push
imul
xchg
dec
pop
mov
sbb
or
fcoml
lret
aad
pop
lahf
push
lock
in
pusha
in
pop
mov
or
pop
subl
add
in
fbstp
xorl
xchg
mov
fs
push
out
mov
lret
lcall
iret
jle
in
pop
dec
push
adc
xchg
inc
pop
push
movsl
dec
jp
or
fsubr
stos
out
out
dec
out
fidivrs
fidivrl
cmpsb
jns
inc
pop
cmc
sub
std
pop
jl
es
mov
mov
shll
lea
ficomps
jne
xchg
dec
xor
inc
adc
mov
mov
cltd
add
mov
jnp
push
daa
push
cltd
sbb
repnz
fs
inc
lahf
mov
int
dec
push
push
sub
mov
pop
js
push
orb
push
mov
add
push
and
cmc
add
es
or
lahf
testb
xor
xor
ja
popa
mov
aam
cld
sbb
iret
push
lcall
addb
cmpsl
sbb
sbb
sub
pusha
into
mov
mov
push
xor
mov
mov
ja
test
insb
cwtl
cmpl
adc
vmovaps
inc
repz
test
mov
call
ds
sarb
inc
jno
loopne
mov
fisubs
ja
adc
add
xchg
out
shll
xchg
jg
mov
cmp
fwait
mov
adc
cltd
jb
push
pusha
mov
shrl
cmp
pop
inc
insb
clc
insb
popa
addr16
call
cmp
mov
jnp
adc
lea
mov
lds
lcall
mov
inc
mov
inc
add
mov
add
enter
in
mov
sbb
loope
std
sbb
add
push
sbb
xchg
clc
xor
int
sub
inc
ljmp
scas
decl
sub
mov
push
cmpsb
lcall
subl
fldenv
inc
cmova
push
insl
shl
push
pop
in
inc
xchg
ss
xchg
imul
xor
stc
popf
push
and
data16
sbb
lahf
jmp
es
je
imul
lret
push
sbb
sbb
or
test
ja
and
sub
fs
mov
jecxz
sbb
jne
xchg
push
sti
fucomi
add
jmp
jmp
xor
xchg
into
xchg
pop
add
cmp
sbb
inc
cwtl
cwtl
and
scas
jmp
ss
sbb
frstor
mov
add
push
sti
imul
xor
test
jbe
mov
push
add
hlt
pusha
xchg
out
dec
ret
stc
incl
cmpsl
out
adc
ret
subl
mov
xchg
xchg
xchg
xchg
adc
sbb
or
push
mov
sbb
mov
std
in
cmp
lods
add
addl
cmp
push
xchg
je
fs
xor
adcl
lcall
sti
mov
in
mov
cwtl
int3
mov
sbb
add
cmpsb
mov
je
cmpsl
test
sti
popf
pop
je
or
ljmp
cltd
in
mov
cmp
inc
push
int3
push
ljmp
bound
mov
push
push
mov
lcall
cmpsl
xlat
mov
sti
fucomi
fists
mov
or
pop
aad
add
fcoms
cmp
ja
rorb
mov
sbb
mov
lea
lods
mov
imul
push
xor
push
fiadds
sub
and
sbb
cmc
adc
fisttpl
call
pop
dec
xor
sahf
cli
hlt
leave
jno
jmp
test
ja
xchg
xchg
out
adc
xor
push
jo
andb
or
mov
mov
in
pop
push
or
mov
add
cmp
daa
nop
mov
and
es
out
div
fildll
jmp
jbe
lahf
xor
sarl
enter
rcll
jl
test
pop
and
bound
mov
lods
and
in
xchg
mov
ror
add
das
adc
loop
iret
cwtl
movsb
fnstsw
cmpsb
or
out
inc
pop
and
sbb
cli
jne
lahf
jecxz
jnp
jge
xchg
fstpl
jmp
xchg
dec
jle
mov
inc
arpl
push
cmp
hlt
shrl
ror
in
mov
aad
xchg
mov
int
and
imul
out
sbb
movsb
push
fisubrl
or
xchg
cwtl
pop
push
push
mov
mov
push
mov
adc
pop
jl
pop
es
fnstcw
and
or
cmp
xor
test
dec
xor
xor
pop
or
into
mov
fidivs
lock
movsl
loopne
int
add
shlb
or
divb
mov
sbb
sub
push
aas
jge
in
inc
jns
pusha
loope
mov
rolb
jb
dec
sahf
scas
shrb
pop
clc
jmp
adc
shll
cmp
mov
add
stc
cmp
orl
loop
dec
arpl
aaa
mov
loope
pusha
pop
mov
daa
mov
adc
pop
xchg
test
bound
rcrl
std
outsl
xor
or
inc
pop
lret
aas
cmp
test
movsb
mov
adc
sub
lock
pop
test
stos
mov
jl
jmp
dec
jns
test
rorl
adc
push
add
lea
cmp
out
xor
movsb
jns
push
xor
in
sub
aaa
push
cvtpi2ps
mov
aaa
in
test
mov
repz
fildll
push
jmp
jecxz
das
push
ret
mov
ret
pop
ds
test
sub
sbb
adc
jmp
cmp
sbb
iret
das
sti
scas
cmc
add
inc
adc
add
inc
add
adc
mov
in
dec
jne
jp
insl
cmp
xor
cltd
fstps
ds
arpl
mov
out
addr16
xchg
add
pop
sti
push
pop
push
je
sbb
mov
lods
sub
cwtl
sti
shrl
push
jo
cmpsb
cmp
pop
mov
jne
mov
xchg
adc
xor
in
rorb
aas
shrl
inc
mov
mov
rcl
and
pop
cmp
aad
cs
cmpsb
mov
dec
sub
push
les
insl
adc
popf
ds
pop
ds
ds
sub
mov
add
xor
dec
stc
pusha
and
fisttpl
and
and
lods
repz
int
sahf
xor
mov
cli
in
fldt
int
loopne
decb
loopne
pop
cld
ret
mov
mov
xchg
daa
das
shll
and
cmc
movsb
mov
mov
in
jge
fisttps
push
sbb
in
push
clc
fucomi
mov
mov
int
int3
dec
xchg
mov
adc
push
inc
outsl
xchg
es
fwait
lahf
cmp
dec
rorl
clc
ljmp
mov
dec
bound
mov
xor
adc
jle
sarb
test
inc
std
inc
int
adc
lock
jg,pn
push
cmp
xor
rcll
jecxz
lea
fwait
jl
fs
inc
stc
jae
ret
push
das
shll
lods
sbb
into
pop
pop
sbb
adcb
mov
xor
les
and
pmaxsw
pop
sbbb
inc
mov
pop
cmpsb
dec
mov
xor
sti
inc
cmp
call
jbe
lods
inc
mov
sahf
js
int3
adc
mov
mov
sbb
dec
mov
push
in
fsubrp
push
sarl
cmc
push
and
sub
repz
jmp
push
call
out
mov
int
sbb
das
adc
pop
pushl
mov
jge
jle
movsl
sarl
or
nop
int
xlat
add
jno
jg
cmp
or
fnstcw
stos
pop
mov
je
adcb
insl
imul
das
clc
cmp
aaa
nop
insb
dec
inc
mov
popf
push
dec
dec
notl
lret
loop
mov
popf
inc
fsubs
xor
ljmp
ret
stc
or
dec
adc
lss
cwtl
int3
cmp
and
mov
adc
ret
jl
shl
inc
out
ret
in
shll
adc
dec
pop
iret
in
dec
outsb
inc
jg
lods
push
sub
sbb
xlat
insl
cli
ljmp
scas
out
lahf
xchg
xchg
out
pop
out
jne
dec
inc
cmp
dec
mov
mov
add
aaa
scas
ret
xor
cmc
jae
js
mov
or
loope
cmp
insb
aam
and
popa
add
out
pop
scas
in
cli
pop
push
vphaddubw
jns
inc
ss
mov
lds
sub
sbb
jmp
rcll
mov
pop
or
ret
fst
mov
shr
mov
js
imulb
out
pop
pop
int
lds
pcmpeqd
mov
ljmp
mov
xchg
loopne
out
out
xchg
and
fucomi
jmp
nop
pop
xor
sti
addl
pop
mov
pop
sbb
jae
lret
xchg
cmp
mov
mov
jle
pop
mov
bound
and
or
xchg
jge
sub
fcoml
push
dec
pop
push
jle
out
ret
inc
test
push
bound
xlat
mov
add
ljmp
push
mov
sub
repnz
inc
mov
sub
xorps
out
mov
js
jo
mov
and
pop
repnz
imul
mov
bound
or
add
pop
jnp
stos
jl
cmp
push
adc
jne
test
and
mov
aam
cs
cmpsl
das
test
pop
mov
push
std
insl
stos
adc
rorb
sub
push
test
call
imul
hlt
mov
clc
jle
adc
inc
jl
std
inc
rcrb
rol
inc
mulb
adc
ds
or
lret
sub
push
jne
and
mov
mov
xchg
jb
sub
test
mov
cmpsb
mov
push
cld
lock
lods
xor
fldt
icebp
daa
lods
popa
mov
lock
ljmp
leave
push
cmpsb
andl
lods
add
repz
popl
cmp
jnp
xor
jg
dec
mov
ja
pop
jo
jno
test
push
mov
pop
xchg
mov
or
imulb
scas
push
push
xor
mov
cmpsl
sub
popl
cmpsb
out
int
inc
jne
dec
push
int
cmp
mov
imulb
je
sbb
outsb
in
dec
fs
sti
jbe
mov
shll
mov
push
sbb
sbb
dec
je
jo
or
mov
and
add
cs
mov
push
dec
sbb
lcall
mov
xor
sub
test
dec
dec
sub
push
repnz
sahf
cmpb
test
cmp
leave
test
push
cmp
lret
gs
addr16
test
push
scas
testb
jg
mov
fdivrl
lea
jne
mov
enter
cld
inc
clc
dec
jmp
mov
inc
inc
and
mov
add
or
pusha
and
jp
nop
adc
roll
xchg
and
jns
pop
sub
sahf
xchg
push
insl
lret
fisttpll
xorl
loop
cmp
rcrb
test
mov
adc
lods
punpckhdq
scas
sarb
jg
pusha
xor
mov
cmc
add
push
xchg
push
xchg
sub
in
in
jns
or
mov
xor
jno
sub
loopne
jb
shlb
arpl
pushf
ret
adc
cs
jnp
pop
cmp
repz
mov
mov
mov
push
repz
clc
nop
mov
addr16
or
testl
daa
imul
sub
sbb
xchg
xor
mov
inc
add
inc
dec
sub
lcall
cmp
mov
xor
out
adc
push
aas
push
shlb
cs
popa
lods
mov
pop
std
leave
mov
jecxz
adc
call
imul
gs
cmpsl
out
rcll
mov
jle
mov
testb
mov
push
or
jne
scas
out
push
and
sbb
push
xor
lahf
bound
ret
mov
push
test
loope
xor
mov
dec
pop
test
into
mov
cmp
mov
sbb
mov
iret
mov
lahf
stos
stos
xor
ret
ret
cmpsl
clc
enter
add
lcall
push
mov
ror
rcr
pop
xchg
pop
jns
mov
xchg
fcomi
add
mov
xchg
add
xor
xlat
cmp
pop
popf
pop
movsl
dec
dec
xorb
mov
sub
addb
inc
sub
jns
adc
mov
mov
stos
mov
movsl
sbb
and
push
add
pop
cmp
xchg
out
xchg
jge
mov
int
sub
inc
and
xchg
xchg
mov
sbb
dec
loop
lret
mov
imul
pushf
gs
lds
pushf
sub
or
std
nop
adc
xlat
ljmp
add
mov
bound
loop
pop
adcb
jg
pop
push
inc
arpl
xor
lcall
dec
push
dec
cmp
add
xor
fildl
in
mov
push
mov
nop
xchg
xor
mov
hlt
sub
les
mov
clc
loopne
dec
xchg
pop
cmp
jb
inc
cmpb
push
cmp
add
insl
in
inc
jmp
or
test
imul
int3
outsl
cwtl
jb
lret
hlt
stos
xchg
test
pushf
mov
fdivrs
rolb
jns
xchg
adc
mov
es
sbb
movsl
add
out
push
xchg
mov
fsts
clc
out
outsl
fmull
imul
daa
inc
aas
lret
ret
push
test
insb
scas
add
cli
jno
out
lods
add
bound
pop
inc
call
fidivrs
out
sbb
insl
cltd
mov
test
int
stos
sub
stos
inc
fcomps
add
in
and
cmp
cmp
shrb
mov
stos
rcrb
xchg
adc
shlb
pop
mov
cli
jb
into
sahf
daa
or
and
pushf
mov
enter
ljmp
test
add
sub
dec
repz
fsts
pop
inc
andb
clc
xor
pop
push
dec
mov
pop
jmp
outsb
xchg
stc
mov
xorl
aam
lcall
cmc
int3
sarl
mov
dec
mov
xchg
push
mov
cmp
xor
push
notl
stos
out
ret
fstpt
add
inc
ljmp
adc
nop
adc
sub
sbb
stc
jle
mov
jae
jne
imul
rolb
stos
xchg
sti
in
push
mov
push
mov
jae
pusha
fs
mov
sarb
mov
cwtl
fnstcw
push
mov
out
pop
inc
jmp
mov
xlat
cmp
xchg
dec
es
aas
and
pop
scas
sbb
pop
mov
and
or
faddl
lahf
fwait
stos
jecxz
cmpsb
or
inc
adc
stc
fidivrs
jb
lahf
rolb
mov
fsub
mov
xchg
popf
mov
or
jno
loop
mov
outsl
cmp
je
pop
xor
mov
xorb
pop
test
jle
cs
movsb
cmc
cmp
adc
sub
rorl
and
mov
cli
mulps
mov
add
out
pusha
or
push
call
inc
cmp
lds
pusha
inc
and
mov
fdivrs
fdivrl
test
popa
cmpsl
pop
ss
lods
gs
mov
aam
ret
inc
jb
aad
jns
adcb
mov
cwtl
lahf
inc
aas
jae
xchg
cld
stc
sbb
sahf
mov
jne
and
pop
mov
in
or
int3
lret
sub
xor
sub
loop
mov
pop
inc
xchg
jge
mov
xor
push
lods
pop
insl
pushf
sahf
xor
test
je
sbb
subl
mov
or
xor
arpl
mov
dec
sub
das
mov
fwait
es
push
lcall
xchg
jmp
cmp
pop
dec
ja
in
clc
int3
inc
add
js
out
mov
mov
xchg
std
adc
sub
lahf
push
mov
dec
jecxz
popa
inc
aaa
aas
lret
cmp
and
jecxz
sti
jle
lods
cmp
sti
rcrl
mov
mov
mov
loop
int3
fldl
insl
inc
pop
outsl
adc
mov
push
mov
pop
nop
xchg
dec
add
loopne
outsb
outsb
stc
jne
cmp
sti
push
xchg
mov
sbb
mov
sbb
repz
lock
mov
scas
mov
or
mov
mov
sarl
adc
mov
stos
push
jb
out
push
adc
cmp
movsl
and
add
xchg
je
push
lcall
cli
dec
daa
inc
insl
iret
sbb
sti
ret
out
gs
testb
lods
xor
mov
pop
jmp
mov
mov
push
xchg
sub
dec
mov
adc
sbb
sbb
inc
fdivs
lods
shll
in
mov
subb
push
add
out
mov
xor
fcoml
cmp
movups
ffreep
sbb
aad
inc
xor
je,pt
dec
jmp
lock
out
lahf
push
jp
aad
mov
sub
fisttps
ljmp
sbbb
in
push
sub
decl
pop
sbb
sbb
fists
fildl
add
daa
xchg
jae
mov
addr16
xchg
lods
shll
dec
or
cmp
push
negb
xlat
es
push
int
sti
and
lods
push
rcl
arpl
lds
stos
jecxz
push
inc
cwtd
out
pusha
dec
addr16
inc
jnp
add
cltd
cli
dec
jne
push
push
iret
cmp
ret
adc
sahf
imul
clc
jmp
and
pop
pop
pop
xlat
inc
pop
add
pop
aad
push
mov
push
lds
add
pop
loop
mov
in
test
pop
int3
mov
popa
cmp
ret
notl
cmc
cltd
cmp
dec
mov
cwtl
mov
pop
and
aad
push
sbb
or
pusha
jo
push
mov
cmp
fldenv
xor
ret
pop
sub
in
scas
lret
aam
addr16
sub
and
mov
cmp
out
shlb
test
testb
xchg
pop
arpl
pop
ficoml
repnz
and
sbb
in
js
arpl
addl
mov
loopne
mov
popf
js
outsb
fs
das
push
iret
or
lock
loope
repz
stos
outsl
loopne
rcll
je
push
push
jecxz
mov
outsl
jmp
jmp
pop
or
ljmp
jo
orb
cmp
lcall
sahf
mov
and
sub
mov
mov
call
jbe
ja
shrl
lahf
dec
cmp
lea
mov
adc
jmp
sbb
lret
push
push
in
fsubl
ljmp
pop
jecxz
or
push
or
fnstsw
push
cmp
loope
push
inc
xor
fsubl
jl
inc
cmp
push
jp
push
and
xor
aas
mov
int3
pop
and
pop
xor
sub
push
test
scas
xchg
test
call
std
inc
jle
xorl
adc
mov
jge
mull
sbb
cmpsb
mov
jbe
cmp
or
or
cmp
sub
inc
push
into
lods
or
lret
je
xor
mov
sbb
nop
mov
push
les
cmpsl
pusha
fstp
dec
cld
mov
or
stos
xor
jge
loop
jmp
cmp
mov
rcl
pop
pop
ss
cmp
pop
push
shr
mov
xor
fwait
stc
cmp
fnstcw
or
roll
mov
mov
xor
fiadds
add
outsb
stos
ss
ljmp
loopne
outsb
fisttps
mov
in
movsl
call
xchg
adc
xchg
test
addb
pop
xor
mov
sbb
cltd
lret
sub
mov
lds
insl
sbb
dec
aad
lds
lret
mov
hlt
and
sub
sar
sbb
cmp
pop
ljmp
es
xchg
dec
add
pop
mov
mov
push
dec
jnp
dec
or
fdivrs
in
sub
jle
fmull
and
cmpsb
jo
out
sub
xchg
scas
add
lahf
call
mov
sub
jne
lods
cmp
test
lds
adc
mov
mov
cmp
jmp
arpl
xchg
inc
jo
sbb
in
mov
mov
cmpsb
mov
jecxz
loop
push
rcr
orb
sub
clc
push
lds
sbbb
pop
or
int
inc
adc
sub
xor
add
pop
pop
je
push
jns
mov
pop
addr16
mov
loop
or
adc
or
lret
out
sbbb
pushf
sbb
rorl
jno
dec
test
mov
xor
push
pop
push
sub
and
mov
mov
mov
call
jnp
xchg
xchg
imul
movsl
sub
pop
dec
inc
sbb
adc
call
and
jecxz
or
mov
aaa
jge
lret
pop
and
xor
sub
add
inc
pushf
or
mov
add
rcrb
mov
add
xor
sub
scas
xor
mov
fwait
mov
inc
ror
test
cltd
outsl
cs
push
xor
notb
hlt
cmc
adc
int
mov
xchg
mov
pop
mov
sbb
sub
outsl
push
lahf
and
movsb
aas
insb
push
bound
out
mov
stos
cmp
push
loope
xchg
jne
push
scas
add
inc
ljmp
movsl
inc
or
pop
test
and
sub
das
or
jecxz
inc
mov
push
xor
aad
inc
and
sub
jecxz
cmp
sarl
loope
mov
rcll
pop
das
in
ds
testl
int
rolb
cwtl
inc
mov
or
sub
mov
test
int3
sbb
xlat
jl
arpl
add
les
pop
pop
pop
mov
pop
movsl
insb
lds
push
stos
insb
test
pop
fwait
sbb
insl
pushf
xchg
iret
loopne
mov
lods
mov
inc
ret
jns
movsb
enter
mov
xor
dec
push
lods
cwtl
mov
dec
push
les
sub
test
aaa
insl
push
outsb
aaa
pop
ud2
mov
addl
or
xorb
lcall
cwtl
jne
push
loop
gs
mov
xlat
mov
inc
xlat
sahf
inc
andb
orl
and
cmpsb
jg
fiadds
jo
push
push
faddp
testb
sbb
inc
push
jae
jo
or
test
jecxz
mov
pop
int
xor
cmp
arpl
mov
test
push
push
jae
mov
jo
je
icebp
stos
stos
adc
movnti
cmp
push
aad
inc
insb
jg
push
test
jg
mov
and
fdivrl
mov
dec
push
das
xor
mov
dec
das
add
hlt
int3
cli
xchg
mov
fdivs
jg
push
int
inc
cmp
ja
cld
and
les
out
dec
mov
pop
adc
sahf
dec
gs
add
jp
xor
mov
cmpsl
lret
adc
lea
fwait
in
addr16
dec
dec
sbb
add
mov
sub
cmp
or
push
xlat
sbb
inc
inc
je
adc
cmp
push
es
enter
stc
or
mov
sbb
lods
dec
cs
fldl
es
fwait
aad
lcall
mov
test
xlat
mov
repnz
dec
inc
pop
add
and
dec
ljmp
adc
lock
sti
into
hlt
inc
jge
adc
mov
jae
mov
dec
or
pop
test
int3
xor
int3
jl
scas
push
mov
pushf
aaa
test
pop
adc
cmp
cmp
lahf
test
xor
dec
mov
sub
cmp
jmp
imul
cmp
fldl
or
add
jl
push
sub
lret
jns
mov
frstor
leave
in
xchg
cmp
lea
scas
mov
adc
push
out
xor
jp
xor
push
lea
std
icebp
push
sbb
adc
inc
mov
xchg
rclb
into
xchg
pusha
data16
adc
into
dec
stos
dec
inc
mov
mov
cmp
outsl
jno
stos
addps
in
popa
outsb
jne
sarb
mov
xorb
das
push
dec
add
pop
add
adc
roll
adc
rcll
xchg
xchg
rcl
aaa
inc
mov
je
dec
sub
jl
jle
add
inc
cmp
pop
insb
jg
xor
jmp
leave
les
cmp
rorb
push
lods
popa
test
shrl
lret
jp
rcll
pop
cld
xor
adc
mov
xlat
imulb
mov
dec
dec
aad
aad
mov
out
movl
push
pop
and
imull
rorl
or
rorb
jmp
xchg
lcall
testl
pop
into
jae
iret
fnstcw
mov
sbb
pop
loop
sub
push
in
and
inc
adc
jae
out
cmpsb
xchg
mov
sub
sarl
repz
cmpsl
dec
adc
fildll
add
sbb
pop
fstpt
test
test
mov
ret
ja
or
cmp
jae
jp
or
call
cmp
arpl
cs
dec
push
jae
and
pop
sbb
repnz
jbe
shrl
pop
dec
clc
xor
nop
adc
call
lods
test
push
xchg
cmp
jno
lods
push
and
inc
xor
mov
lds
scas
das
loope
xlat
add
clc
out
inc
inc
adc
or
ljmp
inc
iret
mov
push
sub
cmpsl
dec
and
popa
rclb
mov
sub
mov
pop
sbb
fucomi
insb
orl
jecxz
jmp
pop
imul
or
jae
sti
dec
add
xor
pop
xor
push
adc
add
mov
roll
jne
pop
stc
rclb
xchg
pop
sub
sar
std
inc
push
add
mov
and
and
adc
push
mov
js,pt
push
ret
rcll
lea
sahf
cmp
mov
rcr
data16
xchg
sub
xchg
lods
dec
jmp
int
or
popa
push
cltd
push
add
jmp
ljmp
js
outsb
cld
xchg
mov
fstl
push
adc
rclb
insl
loopne
lcall
repnz
push
pop
inc
dec
in
lods
cli
add
cwtl
push
roll
pop
jmp
and
sbb
lahf
test
jmp
cld
push
mov
mov
and
dec
sbb
ljmp
inc
insb
stos
jnp
mov
add
iret
fs
jl
jae
popfw
daa
mov
clc
push
mov
cmp
cmp
fsubs
insb
ds
xchg
fwait
jns
incl
push
push
mov
scas
nop
aas
adc
mov
dec
mov
cmpsl
jecxz
add
es
inc
xchg
or
xchg
mov
mov
push
dec
sbb
test
dec
test
out
cwtl
mov
xchg
inc
stos
lret
adc
iret
jns
jb
cmpsb
xchg
shr
pop
insl
into
xchg
push
outsb
push
mov
mov
pusha
arpl
xor
out
repz
sbb
pop
inc
xchg
or
aaa
xchg
test
adc
add
jns
xchg
jl
mov
mov
push
movsl
add
xlat
push
dec
push
pop
das
rclb
mov
dec
jb
rsqrtps
insl
roll
mov
adc
mov
stos
push
xor
and
xchg
mov
pushf
fs
sub
mov
add
push
pop
jmp
inc
push
pop
insb
jmp
inc
aas
test
add
pop
fstp
in
test
test
xor
outsb
cmpsb
sub
sub
mov
pop
xchg
mov
in
test
jge
push
xchg
das
sub
inc
xchg
lds
lcall
and
call
ljmp
mov
es
clc
sub
xchg
jle
rorl
push
push
clc
cmp
scas
sub
fcoml
mov
cmc
and
rcrb
es
sub
sahf
xor
ljmp
orl
repnz
addl
xchg
mov
shll
mov
call
mov
cmc
sahf
jg
xorl
mov
shrl
xchg
mov
sbb
mov
adc
cli
sbb
sbb
imul
xor
lret
cmp
lock
mov
push
aaa
ret
push
jmp
mov
cs
cwtl
sbbb
mov
mov
test
aaa
jae
fsubrs
stc
mov
sbb
clc
and
jo
sti
in
fwait
pushf
cwtl
mulb
fxch
lods
inc
lret
cli
clc
mov
push
int
jns
ss
lods
mov
xchg
inc
in
cmpsb
xchg
jae
test
mov
movsb
sti
orl
xor
and
xlat
mov
mov
mov
xchg
and
arpl
pop
and
mov
pop
shrl
mov
out
push
sbb
lds
sub
arpl
fstpt
adc
call
outsb
pusha
xchg
sbb
ret
fucom
mov
sbbl
push
sub
push
adc
pop
xchg
ror
adc
rorl
and
jb
fisttpll
mov
xor
jne
pop
pop
dec
repnz
cmpsb
rcr
jg
testl
mov
imul
fbstp
clc
aad
sub
dec
add
imul
into
lret
jl
fidivrl
pop
scas
lret
fs
jmp
inc
or
mov
cmp
push
enter
cs
loope
clc
jg
mov
add
and
add
bnd
stos
adc
sub
mov
ret
xchg
js
adc
cmp
ss
shrb
lods
shrb
jb
sbb
inc
imul
aas
test
jg
mov
jnp
lcall
sbb
mov
mov
push
pop
xchg
popf
dec
test
jmp
mov
sbb
push
enter
xor
cmpsl
test
ds
and
in
ds
das
sbb
addr16
cld
sbb
add
hlt
push
mov
in
fistpl
xor
gs
push
mov
cmp
inc
out
jbe
outsl
adc
fistpll
enter
fidivrl
out
push
cmc
js
cli
outsb
mov
fisttpll
mov
xchg
in
push
fstpt
xor
nop
adc
lea
xchg
adc
xchg
jmp
insb
and
jne
test
rorl
dec
adc
cli
loopne
push
sub
jnp
ss
mov
adc
mov
bound
jne
bound
mov
jge
scas
fidivrl
aas
pop
jle
jnp
jp
adc
lock
sbb
sub
jno
loope
cmp
test
jp
cli
inc
insb
mov
cmc
adc
jno
jno
add
outsb
pop
stos
xchg
jbe,pn
push
dec
dec
mov
xchg
mov
or
std
push
jmp
xlat
dec
lahf
outsb
xchg
scas
or
jne
or
cli
movsl
jne
insl
pop
popf
xchg
sbb
xchg
outsb
repz
sbb
and
iret
bound
adc
fistl
stos
cltd
sub
pop
mov
data16
mov
sbb
cmp
add
sub
xor
imul
stos
lods
leave
fnstenv
cli
in
push
fwait
push
inc
popa
cltd
jne
inc
xor
ja
iret
jl
cwtl
xor
add
pop
in
or
pop
push
push
mov
jns
popf
icebp
js
xor
lock
xor
mov
mov
jp
sbb
push
pop
xchg
or
mov
xor
lahf
cmp
test
cmc
add
jae
fsubrl
push
je
ja
out
test
inc
in
popf
cmp
pop
mov
sar
mov
dec
sbb
mov
sbb
mov
shrl
adc
enter
call
inc
adc
popa
mov
mov
jae
in
fs
jmp
sbb
and
dec
in
inc
cmp
xor
xor
pop
pop
std
xchg
lret
and
jno
mov
out
jae
mov
add
cltd
scas
ja
fists
and
xor
int
mov
mov
pop
sbb
dec
sbb
or
add
dec
mov
dec
add
dec
nop
mov
popa
ret
lret
mov
add
cmovle
bnd
pop
ficoml
int3
cltd
fbld
sahf
ds
or
sbb
repnz
bnd
add
jb
jne
ss
push
mov
in
mov
adc
rclb
cmp
mov
xor
mov
mov
out
addr16
mov
loope
insl
cltd
mov
mov
pop
loop
add
cmp
cltd
loope
dec
sub
rolb
repnz
pusha
inc
ja
inc
and
xlat
pop
cmp
push
mov
inc
jle
enter
inc
xor
out
out
mov
sbb
jg
jmp
adc
adc
inc
pop
xchg
inc
iret
jg
cmp
xchg
inc
pop
shr
loopne
mov
lret
cmp
stos
sbb
stc
sub
loope
fmuls
adc
jp
imul
xchg
aam
call
call
sbb
jecxz
rorb
push
shl
rorl
into
in
mov
sti
in
push
das
or
xchg
imul
int
jmp
or
cmpsb
fwait
das
movsl
add
jno
cmp
int3
xor
popa
imul
xor
push
jae
jl
xor
fwait
jmp
mov
mov
fstp
push
test
adc
cmp
scas
loop
in
pusha
mov
lcall
and
sahf
push
loopne,pn
call
dec
push
decb
aas
dec
aaa
mov
mov
adc
jo
shl
inc
sti
jnp
dec
push
xor
dec
cmpb
mov
dec
push
std
dec
hlt
inc
sub
mov
in
add
cmpsl
or
out
xor
mov
lret
and
aam
and
xor
xchg
or
cmp
or
lds
pop
push
or
idivb
jmp
dec
sbb
sbb
xchg
test
fistpl
push
in
lcall
call
andl
mov
or
fmuls
cli
lock
data16
cmpsb
add
sbb
mov
out
movsb
rep
mov
js
sub
mov
out
pop
rcrb
jne
test
sbb
xchg
out
inc
popl
fsubr
es
test
sbb
mov
pop
lods
inc
or
and
sbb
xor
icebp
sahf
xor
ret
das
data16
shrl
ror
clc
mov
je
mov
xor
test
cmp
dec
ret
jo
or
fmull
movsl
jnp
std
xor
adc
adc
cmp
xor
jae
xchg
inc
cs
dec
not
dec
ss
jmp
jb
mov
scas
in
aaa
lret
and
loope
out
jg
push
insb
xor
sti
test
push
xchg
test
in
jg
dec
xchg
fcompl
scas
pop
push
xorl
or
and
lret
popf
jns
shrl
mov
jbe
or
test
popf
loope
mov
int
cli
ljmp
xchg
mov
mov
push
out
push
js
out
pop
movsl
fsubs
xchg
cli
jmpw
mov
cmp
xchg
push
xchg
stc
rcr
or
movsl
mov
fwait
dec
adc
cmpsb
ljmp
dec
inc
inc
push
and
xor
aam
xor
dec
and
scas
mov
xor
loop
dec
mov
and
xchg
xchg
cltd
outsl
in
add
jle
and
js
dec
lds
arpl
hlt
push
iret
cwtl
sti
scas
xor
adc
dec
shrb
and
sub
je
inc
pop
push
aaa
pop
add
out
inc
mov
notl
cwtl
mov
push
dec
sbb
mov
out
sti
jp
sahf
xor
sub
xchg
cmp
cmp
jmp
hlt
xor
pop
adc
int3
mov
add
add
sbb
mov
push
hlt
push
shlb
clc
sbb
xchg
cmp
notb
das
sbb
pop
test
mov
insl
add
and
cmpsb
mov
push
es
fmull
add
pop
ja
mov
mov
cwtl
aaa
lahf
jo
dec
mov
xchg
addr16
mov
ja
mov
push
mov
xor
les
jecxz
or
fisttpl
ljmp
ss
dec
enter
cmpsl
mov
aad
stos
roll
pop
or
aaa
subb
stc
inc
loopne
fildl
mov
hlt
pop
inc
inc
pusha
jnp
mov
mov
mov
or
sbb
outsl
insl
repnz
xor
out
sub
clc
adc
in
add
addb
pop
cmpsb
jno
cli
jecxz
shl
movsb
rclb
adcl
shlb
adc
sbb
mov
loope
xor
inc
or
mov
popf
sbb
dec
ljmp
hlt
xor
sbb
mov
mov
inc
in
mov
pop
push
mov
cli
mov
lahf
push
cli
andb
sub
leave
test
add
test
sbb
push
leave
jecxz
sub
inc
addb
aad
addr16
pop
mov
or
push
lea
dec
dec
and
dec
mov
rcl
movsl
add
ret
pop
movsb
inc
jns
adc
push
inc
lods
push
shll
jg
lret
out
sbb
push
popf
xchg
dec
icebp
dec
dec
lret
dec
xlat
loope
push
int
aam
sarb
sub
jge
jecxz
push
pop
push
addb
cs
in
xchg
push
movsl
pop
adc
mov
xchg
inc
ficomps
cli
add
dec
cmp
jo
cs
inc
and
daa
std
mov
in
xchg
arpl
or
xlat
pop
and
popf
or
add
pop
mov
xchg
out
mov
daa
pusha
cltd
add
lcall
xchg
mov
mov
rcr
xor
cmp
rclb
sub
xor
sbb
pop
mov
mov
jae
xchg
cli
jg
or
mov
stos
lods
adc
repz
lcall
adc
pop
or
jno
lret
jne
pop
leave
adc
mov
xor
fxch
cmp
aas
add
mov
push
daa
jno
into
in
push
adc
xchg
jae
mov
jo
icebp
push
popa
inc
aas
pop
jmp
jne
push
pop
rcl
pop
sarl
cld
or
jns
xchg
scas
push
adc
testb
push
xchg
cmp
mov
clc
out
addb
mov
loope
xchg
loope
push
fst
sub
rcrb
loope
sbb
arpl
push
int
ret
and
call
pop
fimull
and
insl
jmp
fisubs
xor
outsb
out
jmp
in
rolb
jno
pop
dec
int
jbe
lret
or
push
and
lods
iret
jns
loope
xchg
dec
sub
and
test
scas
jno
add
lock
xchg
dec
sub
adc
adc
adc
push
shll
daa
divb
cwtl
mov
or
push
pop
inc
cs
test
test
jmp
push
fldcw
dec
aaa
or
ljmp
sti
into
jb
out
dec
mov
nop
xlat
mov
pop
lahf
fwait
mov
or
test
jl
cltd
shll
or
sub
xor
mov
mov
int3
stos
and
dec
arpl
sbb
bound
add
jno
movsl
test
inc
aas
lret
push
fwait
or
cmp
xor
nop
mov
cmp
cmp
es
mov
call
mov
orl
nop
jmp
inc
xorb
mov
dec
sbb
pop
fwait
jmp
aaa
lods
ja
sbb
in
enter
inc
fbld
insl
jecxz
sub
and
push
or
in
adc
das
xor
sub
mov
inc
sbb
pop
jo
mov
xchg
call
mov
cmp
push
lcall
xlat
xchg
cwtl
test
ret
add
sub
ss
nop
nop
iret
leave
or
ret
ret
jmp
mov
jo
jne
push
clc
scas
or
fsubrl
push
js
inc
jg
xchg
cmpsl
add
test
fstps
nop
cmp
enter
popa
pop
leave
rol
cmp
mov
pop
nop
repnz
or
dec
cld
cld
mov
nop
and
inc
ds
dec
insb
in
fcompl
push
rorl
ret
xor
mov
and
scas
pusha
clc
leave
jle
data16
mov
add
les
and
inc
jmp
iret
jp
xchg
bound
lahf
jmp
mov
inc
xchg
repz
sahf
adc
ret
ret
subl
xor
cmpsl
stos
or
subl
lahf
pushf
loopne
outsl
scas
iret
into
lods
mov
push
sbb
push
dec
adc
bound
sub
xor
icebp
aam
dec
pop
mov
stos
ljmp
xor
xchg
lret
in
xor
jo
xchg
adc
mov
mov
adc
push
lods
pushf
push
xor
jl
movsl
mov
repnz
js
scas
or
cmp
pop
push
nop
fdivs
mov
mov
test
int
mov
mov
sbb
les
loopne
push
mov
scas
cs
adc
daa
gs
jmp
cmc
js
lret
sbb
fwait
push
push
jmp
adc
lcall
dec
cltd
sub
pop
mov
pop
jmp
enter
out
inc
push
xchg
imul
rolb
push
mov
movsb
movsb
push
aam
scas
and
inc
mov
mov
dec
mov
sub
loopne
mov
mov
cmpsb
int
xor
pop
data16
mov
lods
nop
push
lret
mov
and
cmpsb
inc
xor
cmp
pop
xchg
stos
sahf
shrb
mov
adc
cmpsb
xor
xor
inc
stos
ret
mov
jmp
add
jo
cmp
call
shrb
aam
pop
cmp
cmp
das
push
xlat
xor
ss
fisubrs
xor
xchg
orl
adc
adc
inc
cmp
pop
xlat
mov
xchg
add
fstps
add
mov
xlat
pop
add
cs
sub
pop
cmp
adc
repz
cmp
popa
cmpsb
pop
cmpsl
push
pusha
aas
cmpsb
or
loop
mov
iret
outsl
das
xchg
into
and
pop
testb
jge
scas
insb
test
stos
inc
ljmp
movsl
inc
sbb
insl
or
into
push
cmpsw
fmuls
mov
mov
sahf
repz
jmp
adcb
or
sbb
xchg
sub
jno
out
in
rclb
push
xchg
movsl
adc
pop
andl
or
clc
les
fcmove
loop
out
or
in
mov
inc
sbb
push
pop
mov
fnstcw
xor
add
cmp
movsb
fwait
sti
mov
clc
leave
pop
shl
adc
movsl
inc
ret
aas
lcall
data16
lods
sub
dec
push
test
popf
mov
call
out
cmpb
jns
loope
add
ja
mov
ret
mov
adc
in
fdivl
cmp
cmpsb
imul
pushf
pop
addr16
dec
stos
cmovnp
mov
aad
pusha
adc
repz
pop
cmp
aas
mov
add
and
jge
loopne
ret
mov
pop
fmulp
xchg
sbb
loopne
mov
popf
lret
inc
inc
testl
addr16
push
cmpsb
xlat
jecxz
ds
lods
ljmp
out
sbbl
sub
clc
cmp
test
pop
les
loopne
cmp
inc
xchg
dec
ret
mov
inc
movzbl
or
aad
cmp
fidivrl
filds
sub
sub
pop
lds
add
out
adc
arpl
or
sub
mov
repz
sbb
cmp
dec
push
cmp
add
xor
int
popa
adc
pop
cs
lcall
mov
add
fistpll
adc
aas
icebp
jb
sub
and
pop
scas
lock
scas
add
popf
cli
jae
in
aam
xchg
dec
mov
lods
xor
xchg
out
xchg
mov
movsl
scas
push
test
mov
cmc
mov
das
pop
sub
sub
inc
dec
add
dec
push
aad
sbb
mov
jbe
inc
insb
and
cmp
mov
mov
sahf
jecxz
popf
aaa
test
out
push
pushf
clc
das
mov
bound
pushl
int
jp
jae
cwtl
cmpsb
lret
mov
cld
loop
jb
ds
pop
jg
cs
gs
cs
sub
and
lods
push
jg
in
and
push
dec
cmp
sub
mov
cld
mov
cltd
mov
or
push
das
call
xorb
sub
and
fnsave
out
test
cmpsl
popa
insl
push
adc
lds
mov
mov
push
and
mov
cli
mov
mov
add
je
xchg
js
push
in
add
pop
insl
insl
mov
xor
pop
mov
outsl
ss
ss
mov
pop
or
sub
test
shll
sahf
or
cmp
sub
push
insb
push
fsub
pop
leave
xchg
out
xchg
rcrl
pop
push
pop
adc
cmp
mov
pop
lods
mov
push
mov
mov
imul
int
shlb
push
mov
lods
or
daa
sbb
inc
xchg
rcr
dec
adc
imul
xlat
xchg
shlb
pop
dec
jb
push
jg
add
and
insb
pop
xchg
je
sub
sub
stc
pop
mov
xor
addr16
add
mov
adc
mov
inc
dec
fwait
sub
nop
dec
arpl
dec
xchg
push
push
jmp
dec
sub
xorl
mov
xchg
hlt
cmpsb
test
imul
fs
fldt
pop
mov
push
sbb
fldcw
clc
xchg
fs
clc
scas
stos
mov
pop
lcall
movsb
inc
outsl
jbe
popf
xor
or
ret
hlt
mov
icebp
int3
jmp
sbb
inc
dec
sub
jmp
mov
orb
mov
pop
inc
add
mov
push
pushf
outsl
dec
push
sub
and
cmp
dec
jg
add
inc
jb
sbb
and
mov
fistps
push
lret
movsl
sbb
jmp
mov
sahf
into
push
test
and
inc
dec
loop
fcoml
jb
or
fwait
cmp
jle
test
pop
test
mov
mov
fs
sbb
scas
lds
push
mov
test
and
mov
jbe
mov
sbb
xchg
cs
jo
mov
fmuls
in
sub
filds
insb
repnz
mov
dec
sub
xor
sub
je
mov
cltd
ljmp
lcall
lods
and
jb
fsubl
shlb
pop
cmpsl
lret
pusha
jge
cmp
mov
xchg
test
jl
shl
cmp
aaa
inc
stos
mov
iret
xchg
pop
mov
pop
and
or
adc
mov
mov
xor
cmp
sub
ds
sbb
cmp
aas
lods
xor
rcl
add
mov
mov
fcmovnbe
mov
ret
scas
xor
jge
in
in
dec
pushf
pop
imul
cmpl
add
shlb
dec
push
nop
jge
and
pop
pop
mov
sbb
testb
dec
mov
or
mov
and
cs
sti
daa
pop
rcll
pop
xor
adc
fsubs
lret
out
jp
leave
pop
add
sub
pop
inc
cmp
dec
or
mov
sbb
in
imul
mov
movsb
dec
dec
rcr
fisubl
xchg
dec
pusha
push
arpl
pop
std
sub
sub
jne
sbb
mov
dec
std
push
xchg
aam
cmp
mov
pop
jns
jp
icebp
pop
mov
cmpb
daa
stc
mov
repz
mov
cmc
cmpsb
xchg
inc
iret
insb
push
mov
insl
clc
dec
cltd
mov
pop
pushw
ja
inc
nop
jmp
add
inc
adc
sbb
cli
cs
mov
sub
or
es
cwtl
iret
ja
sub
xchg
push
jp
push
xchg
jl
int3
dec
repnz
fwait
aaa
fmuls
ds
sti
xor
sbb
xor
fiaddl
xor
movsl
fbstp
mov
outsb
jae
mov
push
or
and
lock
or
shl
sub
rolb
out
sub
jne
sbb
icebp
sub
aad
std
jp
jo
mov
or
mov
jnp
push
cmpsb
mov
dec
into
sarb
mov
adc
xchg
test
cmp
ja
out
out
adc
roll
outsl
cmpsl
cmp
push
ljmp
pop
lods
out
aas
jns
dec
xchg
push
std
stos
test
add
stos
adc
xchg
jno
adc
cmp
pusha
xor
lock
add
std
or
lods
sahf
and
xchg
fstpl
xchg
and
xor
rcl
jp
movl
mov
xchg
lock
jp
adc
out
mov
mov
cmpsl
and
add
adc
js
in
inc
fbld
test
xchg
insl
push
ss
cmp
xchg
mov
fsubr
jns
cli
mov
adc
adc
repz
dec
pop
gs
in
rsqrtps
lret
push
cs
sahf
cmp
lods
daa
xor
mov
mov
je
inc
push
inc
test
xchg
mov
fisttpl
and
xchg
mov
cmpsb
in
in
xchg
enter
clc
dec
add
inc
push
addb
mov
fisttps
ffreep
jbe
fiadds
test
mov
adc
stos
jle
jno
arpl
hlt
adc
cmp
dec
pop
cmp
into
sub
cltd
add
cmp
xor
cmp
filds
icebp
aas
push
call
cs
jle
inc
fwait
imul
or
pop
popa
arpl
mov
movb
int
mull
sbb
scas
das
ss
mov
push
adc
js
pop
clc
inc
in
sub
js
fimuls
out
and
mov
add
xorl
sbb
jno
mov
ficoml
adc
add
jno
pop
cmp
sub
scas
jae
pop
mov
repnz
loope
fs
lds
cmp
mov
mov
js
xchg
fwait
pushf
movsl
and
adc
sub
xor
and
dec
pop
repz
es
pop
ja
scas
pop
pop
adc
pop
imull
cmp
inc
xor
lods
dec
jae
xor
in
cmpsb
xor
and
inc
mov
mov
mov
jle
and
mov
mov
mov
jbe
dec
repnz
outsb
mov
jmp
and
pop
mov
mov
inc
cmpsl
pop
and
out
adc
out
mov
cmp
rolb
sub
lcall
push
mov
mov
pop
dec
xor
out
aaa
pop
stc
cmp
lret
sbb
pushf
sarb
dec
push
in
insl
movsl
sbb
testl
fwait
clc
lods
in
add
stos
ss
jb
xchg
cld
das
push
je
movsl
push
lods
daa
sub
mov
and
xchg
lock
enter
cmp
add
in
outsl
out
loope
cmpsb
jo
jb
push
aam
lcall
jns
mov
lds
lcall
pop
fbstp
ja
dec
add
clc
sahf
push
jg
dec
ja
dec
xlat
lret
jg
pop
sub
addl
es
outsl
xchg
ljmp
mov
push
xchg
fbstp
inc
orl
fcmove
int3
mov
jecxz
jmp
mov
das
or
bnd
mov
int
push
cmp
xchg
call
or
out
pop
out
xor
insb
dec
inc
cmp
pop
push
mov
xchg
aam
or
jle
or
mov
fidivl
lods
pop
sbb
jg
or
not
fisttpl
in
sti
addb
in
or
cmp
mov
push
scas
pop
fsubrl
jecxz
mov
addr16
test
jns
pop
lret
jg
sub
mov
mov
pop
adc
data16
pop
cwtl
pop
cmpsb
jns
mov
ljmp
sub
das
jmp
mov
ljmp
idivb
mov
call
xorb
cwtl
vcvtpd2dqy
imul
jnp
adc
xchg
outsl
mov
pop
in
pushf
addr16
repnz
mov
jae
movsb
into
ds
insb
lea
andb
pop
fwait
std
or
repnz
out
fwait
ds
clc
xchg
lods
sti
sub
js
jl
xchg
cmpsl
inc
cmp
repz
incb
and
out
hlt
bound
adc
in
add
dec
cmp
and
aam
mov
mov
pop
mov
shlb
jg
sbb
lret
and
ret
test
clc
aam
fmuls
je
out
lods
inc
push
jb
jg
push
outsl
es
sub
adc
push
sbb
mov
ret
xchg
daa
xchg
push
or
xchg
mov
sub
mov
jbe
fucom
dec
out
pop
test
mov
sub
stos
fstpt
or
movsb
test
divb
js
out
add
pop
in
nop
xor
mov
out
dec
sbb
cli
add
and
insl
cs
roll
mov
pop
xchg
inc
js
cmp
dec
mov
or
lcall
loopne
outsl
sub
push
andl
mov
push
push
pop
mov
popf
sub
jo
jae
adc
icebp
outsl
pop
mov
xor
or
sbb
mov
jp
sbb
js
loope
mov
jmp
push
push
test
rorb
jne
in
mov
push
pushl
nop
dec
jp
adcb
and
aad
dec
fcomp
adc
pop
shll
andl
xchg
mov
hlt
xchg
clc
mov
mov
lret
sbb
add
lret
mov
sbb
pop
xchg
mov
dec
cmpsb
mov
cmp
testl
test
xor
dec
popa
daa
repz
shlb
es
jns
filds
xor
or
popf
jbe
adcb
jae
popf
jge
test
ljmp
popf
les
call
das
jge
push
cltd
pop
mov
les
xor
add
out
push
adc
lahf
adc
mov
in
xor
into
cs
mov
sar
sbb
jno
push
jne
into
mov
adc
mov
jbe
loope
lods
pop
cld
mov
mov
cmp
call
jno
cwtl
nop
movsb
fisubrs
push
out
rcll
cli
ljmp
dec
popa
add
scas
cmp
out
add
jb
push
lahf
mull
mov
cmp
je
iret
fisttpll
mov
inc
sbb
add
sub
aas
sbb
jg
jge
cli
adc
fidivrl
loope
mov
popa
cli
aam
dec
ret
lock
cwtl
mov
pop
call
mov
push
jecxz
sub
js
lahf
in
iret
es
adc
dec
aad
xor
in
ljmp
xor
std
sub
call
imul
adc
enter
enter
in
mov
rcrl
dec
push
pop
repnz
inc
or
aas
adc
gs
in
xchg
in
or
inc
sub
bound
mov
and
data16
jg
adc
loop
jge
push
lret
loope
cmp
fldenv
pop
sbb
lods
sub
dec
xor
push
daa
lcall
shlb
add
mov
aam
sub
inc
loope
out
leave
cltd
ja
and
bnd
sub
mov
inc
rcrb
pop
sahf
xor
adc
stos
inc
mov
stc
add
xchg
sbb
loope
and
sbb
sbb
mov
jecxz
cmp
xchg
xchg
sub
mov
push
xor
push
jle
adc
add
inc
mov
scas
fsubrs
mov
fildll
xlat
aaa
mov
ljmp
inc
inc
out
ss
pop
rolb
hlt
inc
xlat
mov
xor
push
add
adc
dec
repz
movsb
lock
dec
cmc
inc
cwtl
adc
faddl
rcrl
lret
ss
lds
cli
cmp
pop
sub
adc
aas
aad
out
clc
jl
lods
insl
fs
test
fnstcw
xchg
cld
mov
les
lock
fiadds
jmp
lahf
or
fdivr
loope
mov
lods
push
cmpl
loope
inc
xor
lods
mov
call
sbb
mov
add
jp
xor
jge
mov
dec
mov
cmp
cli
xchg
rol
imul
bound
adc
fwait
lods
jle
out
ret
pop
aad
scas
scas
jle
add
jnp
dec
out
xrelease
dec
mov
lods
popfw
mov
pop
ja
and
insb
or
jns
xchg
xorb
mov
sub
mov
inc
imul
pop
jp
mov
lret
add
push
fstps
or
fisubrl
dec
test
cmp
out
dec
mov
loop
jno
stos
jmp
lods
lea
rclb
add
mov
sbbl
testb
push
sub
xor
das
int3
je
sbb
dec
xchg
inc
pop
movsb
push
mov
mov
rolb
test
aas
in
mov
test
lods
push
adc
adc
roll
lahf
push
mov
movsl
push
and
mov
cmc
loope
vmwrite
or
mov
mov
xor
lahf
push
xor
mov
mov
popf
or
iret
addr16
inc
rclb
fs
call
mov
mov
mov
outsb
les
icebp
ss
stos
daa
aaa
fcmovnu
arpl
mov
sbb
mov
xor
cmc
dec
sbb
adc
repnz
cmp
adc
popf
divb
sbb
inc
mov
aaa
ret
fidivs
cmp
xchg
testb
ss
ficompl
mov
stos
lock
das
inc
stos
int
int
mov
mov
jecxz
xor
cmp
arpl
and
add
and
lock
mov
aad
out
out
enter
or
scas
fidivrl
inc
fisttpl
sbb
nop
jb
insl
scas
push
dec
pop
sbb
enter
adc
sub
cmp
and
mov
adc
ja
icebp
push
jp
insl
and
in
sarl
fs
or
jge
fadds
xrelease
adc
sahf
out
xchg
popa
xor
pop
notb
scas
mov
cli
push
aaa
or
ds
ds
ja,pt
les
jb
and
xchg
dec
test
xchg
xchg
jl
std
clc
pop
adc
push
clc
loopne
or
jmp
mov
adc
sti
mov
aad
dec
or
fwait
cli
testb
xor
fdivp
add
jo
add
mov
mov
mov
jnp,pt
loope
inc
iret
pusha
pop
sub
jae
es
mov
mov
cmp
mov
xor
test
nop
inc
pop
adcb
outsl
pop
cmp
jns
and
mov
je
gs
xchg
push
repnz
clc
lods
xor
cmpsb
dec
sbb
inc
sub
jnp
cmp
shrl
testl
mov
mov
pop
adcb
imul
push
xchg
xchg
sbb
mov
aaa
out
and
and
int3
shlb
imul
daa
pusha
xor
imul
lock
aas
inc
popf
bswap
cmp
or
jb
jnp
inc
xlat
and
xor
int3
mov
aas
fiadds
lods
imul
sti
xor
rcr
adc
jns
pop
pop
nop
add
std
inc
jl
sbb
jno
clc
xchg
adc
ficomps
inc
adc
sbb
lds
notb
mov
aas
scas
cmc
mulb
lods
pop
lods
add
adc
adc
shll
lahf
sub
imul
int
and
es
jbe
jae
test
xor
mov
xor
es
cmc
adc
in
pop
mov
cmp
pop
rcl
add
push
pop
xchg
mov
xchg
adc
sub
pop
pop
stc
pop
mov
sub
lock
bound
sbb
xchg
and
ficoml
push
pop
add
icebp
pop
or
adc
jg
jns
dec
inc
mov
cmp
mov
mov
mov
in
in
mov
cmp
jbe
sub
lcall
shrl
xor
add
xchg
cli
lret
and
in
xor
mov
insl
push
in
adc
nop
inc
add
lock
jp
dec
sbb
xor
jb
daa
jne
cmp
mov
sub
sbb
sbb
lods
adc
pop
cmc
jecxz
lahf
int
mov
ret
jecxz
sbb
ja
ljmp
cmc
ja
cmpsl
fdivs
shlb
sub
push
mov
loop
sub
aaa
xchg
out
push
inc
lods
or
ret
mov
xchg
xchg
js
or
inc
aad
andl
cmp
fnstenv
test
sbb
popl
scas
cwtl
lods
scas
ret
inc
add
push
pop
dec
push
sub
or
xchg
rolb
outsl
lea
dec
scas
jno
repz
repz
adc
iret
push
push
push
adc
cltd
xchg
cmpsl
push
adc
inc
aad
ss
mov
je
jae
jmp
pop
dec
cmp
gs
jl
sbb
mov
lret
adc
xchg
push
adc
dec
inc
icebp
bound
sub
and
jns
out
iret
seto
cs
ljmp
xchg
lret
pop
sub
fs
sub
sti
push
test
xchg
pop
adc
sarl
and
lds
and
dec
fs
pop
push
movsb
mov
jge
in
and
sbb
cs
push
or
push
dec
scas
jl
bound
mov
push
xor
cltd
leave
stos
out
add
fdivl
and
in
in
sbb
out
jge
fdiv
push
jle
xchg
lcall
mov
push
push
xchg
in
xlat
sub
sub
mov
xchg
sbb
push
dec
mov
sub
cltd
push
add
sahf
inc
sub
mov
inc
dec
xor
push
jbe
outsl
and
cmp
packuswb
imul
and
mov
fs
out
shlb
and
fwait
mov
and
or
mov
jbe
push
bound
mov
adc
mov
xor
inc
test
dec
pop
shr
push
adc
rol
les
test
cs
add
cmp
inc
sbb
dec
push
movsl
mov
mov
orps
add
jb
cld
in
movsl
xchg
aas
add
movsb
scas
in
cmpsl
push
sub
mov
pusha
cmc
lcall
aas
loop
jbe
jg
es
loop
sti
std
dec
mov
dec
add
out
inc
aaa
jmp
xchg
mov
std
data16
bound
mov
test
push
xchg
and
loop
add
and
xor
mov
or
and
push
pushf
jle
pop
test
mov
adc
push
jb
xchg
adc
pop
scas
and
cmpsb
pop
and
mov
fbld
movsb
push
xlat
movsl
test
fwait
lret
mov
push
mov
add
fstpt
arpl
xor
mov
push
push
mov
xchg
xor
push
dec
add
cs
dec
scas
rolb
inc
mov
ss
outsb
pop
enter
repz
or
adc
dec
aad
mov
lret
mov
out
push
orl
loopne
adc
iret
sbb
sub
push
cld
cs
insl
stc
mov
rol
add
int3
imul
insb
imul
cmp
mov
ret
lea
pop
push
neg
push
mov
lea
js
xchg
xchg
mov
fnstcw
jg
and
lahf
add
ja
jne
adcl
jg
fildl
sbb
fldcw
push
movsb
sub
in
rolb
mov
fscale
or
mov
xchg
mov
mov
call
lea
lods
fdivrl
push
xor
rcrb
mov
jnp
enter
xchg
jnp
push
or
xchg
arpl
addl
pop
movsb
xchg
pmaxsw
adc
pop
cltd
nop
mov
jno
shlb
rclb
in
lret
in
push
mov
test
xchg
dec
out
sbb
enter
xchg
jae
clc
std
cmp
mov
rol
nop
hlt
in
scas
pop
cwtl
jo
aad
les
push
mov
pop
inc
ficompl
xchg
sub
sub
loopne
dec
lds
push
push
fmulp
enter
pop
stos
out
scas
push
mov
jno
les
sbb
push
lcall
pop
sbbl
arpl
xchg
pop
fldcw
enter
cwtl
pop
jmp
ror
pop
inc
mov
gs
pop
icebp
pop
scas
cs
inc
or
lea
repz
repz
enter
out
xor
out
dec
data16
bound
xchg
lret
loopne
scas
mov
add
pop
fdivl
call
scas
int3
icebp
loope
rorl
push
push
or
cmpsb
add
jge
orb
jp
jnp
out
imul
lret
scas
xchg
mov
adc
les
cmp
jecxz
mov
pop
adc
scas
or
into
or
xor
fsubs
add
popf
or
cmc
pop
and
imul
lcall
push
fnstsw
repz
xchg
jmp
int3
cmp
xor
dec
xor
rcll
pop
adc
stc
add
dec
mov
hlt
in
retw
in
mov
in
pop
mov
shrb
add
into
jecxz
cmp
dec
jge
aam
inc
push
lods
sbb
xorb
dec
daa
in
test
xchg
xchg
mov
mov
ds
mov
mov
jp
rol
rolb
fstpt
mov
stos
pushf
push
mov
jnp
pop
sub
dec
jo
xchg
fidivs
pop
ret
mov
insb
inc
inc
xchg
mov
ja
fsubs
fisttpl
movsl
scas
fldenv
arpl
jns
loopne
pop
cwtl
ret
lods
lcall
or
enter
icebp
fldt
dec
dec
enter
xchg
xchg
cmpsl
push
cmc
dec
xor
testb
je
push
imul
je
push
inc
fcomp
pop
lock
imul
lds
aaa
and
frstor
jb
mov
cwtl
lcall
xchg
fs
push
jb
aad
xor
aam
mov
add
sub
test
mov
push
jbe
test
repnz
lods
or
out
scas
xor
dec
push
insb
into
pop
xor
in
ret
and
negb
and
loopne
jo
inc
call
out
mov
sbb
mov
jns
mov
mov
inc
cmp
bnd
pushf
int
leave
and
ds
cmp
push
in
ffreep
ret
cmc
inc
jne
call
dec
andb
xchg
add
mov
inc
or
aas
int
loop
xlat
shll
das
pop
or
pop
mov
push
cmpsl
pop
lcall
js
xor
xor
adc
je
lret
in
and
inc
jmp
lret
lea
shlb
jns
sub
repnz
sub
add
int3
cmp
adc
cmp
loope
inc
mov
imul
call
hlt
das
xor
rcrl
cmp
xchg
or
inc
pusha
ror
les
fwait
sub
mov
loopne
lock
push
dec
sub
mov
sub
xor
pop
mov
das
shl
fmuls
cmp
and
movsb
cmc
inc
jmp
in
mov
sub
add
sahf
cltd
out
ds
test
lret
lret
lahf
mov
pop
out
jmp
jl
pop
xchg
movsl
arpl
addr16
mov
fildll
or
inc
and
rcrb
inc
fstpl
rcrb
cwtl
test
and
ret
cmpsb
icebp
sub
lods
scas
mov
xor
movl
lea
add
sub
inc
pop
sbb
repnz
and
pop
imulb
ljmp
mov
mov
mov
imul
je
cmp
lahf
pop
mov
dec
movsb
lds
sub
cmp
sbb
dec
mov
and
test
pop
loope
lock
shlb
rcll
lds
jne
lock
lret
les
shll
fidivs
cli
js
xor
pop
or
sbb
mov
leave
add
sub
jecxz
orb
or
dec
cltd
fimull
repz
mov
pop
dec
inc
sub
jo
sub
ss
xchg
inc
dec
xor
jb
and
lret
dec
xor
sbb
hlt
fsubl
jae
and
cmp
pop
lods
rclb
xor
pop
faddl
fsts
and
sbb
dec
je
jmp
lods
daa
jg
sbb
xor
gs
xchg
mov
enter
into
adc
cmp
cmp
loop
js
push
test
movsb
notl
scas
addr16
ja
push
cwtl
xlat
mov
cmpsl
sub
ss
jo
rcr
das
cs
decl
pop
pop
pop
lock
roll
dec
ror
clc
into
hlt
loop
add
test
icebp
rcrl
jne
cmp
cmp
nop
cld
cmp
xor
jae
sub
or
or
mov
push
push
iret
mov
mov
push
jno
or
popa
test
adc
lret
inc
dec
enter
bound
mov
add
mov
inc
iret
and
bound
out
movsb
int3
mov
cmpsb
and
aad
xor
leave
mov
sarl
cmp
pop
fwait
or
mov
int
adc
xchg
inc
push
and
call
bound
cmp
sub
push
mov
dec
mov
lods
clc
pop
fbstp
out
popf
popa
xor
and
iret
fucomi
jecxz
cmp
out
jns
mov
dec
mov
push
fwait
and
clc
leave
jge
inc
nop
mov
dec
mov
cmovle
pop
out
fbld
outsb
adc
adc
push
mov
cmp
mov
add
sbb
lods
jl
sub
dec
sti
incl
movsb
les
cmp
fimull
and
icebp
jae
orb
pop
sub
imul
enter
or
fcomp
jecxz
jmp
cmp
adc
shrb
sbb
ss
arpl
addr16
loopne
mov
ds
shl
sbb
pop
mov
fwait
inc
clc
xor
sbb
test
mov
stc
cmc
lret
les
jge
pop
fdivr
mulb
sbb
lcall
add
insb
imul
mov
cmpsb
mov
add
mov
int3
xchg
cmp
aad
les
aas
inc
fs
jo
pop
rorb
hlt
int3
push
ljmp
or
stos
or
cmp
mov
shrb
aam
cmp
in
enter
xor
gs
mov
out
mov
jle
push
sahf
arpl
add
cld
push
iret
rcll
mov
sub
sbb
cmp
std
and
jle
and
jecxz
out
push
push
fs
mov
cmp
ds
or
aam
adc
xor
fstpl
or
aas
or
dec
push
inc
out
xchg
xchg
or
cmpsl
mov
shrb
mov
rcrl
dec
mov
in
pop
out
and
das
cli
xchg
loop
rcrl
fisubs
cmp
daa
cmp
push
jmp
shrl
or
pop
subl
or
int3
jae
xor
mov
ret
jmp
sub
xchg
jns
inc
mov
adc
add
mov
add
cltd
mov
or
mov
lcall
adc
fnstcw
add
dec
rorl
xchg
clc
sub
aad
lock
scas
xor
cmpsl
cmpsb
dec
xchg
cwtl
jp
nop
sti
pop
bound
jnp
or
lods
je
insl
and
js
hlt
push
stos
std
sbb
sbbb
out
pop
push
cmp
jl
push
clc
sbb
or
jne
cwtl
testb
push
int
movsl
xor
mov
push
fsub
aad
xchg
dec
jo
add
xchg
ja
imul
popf
faddl
hlt
aaa
lods
xlat
lahf
push
das
mov
test
xor
push
push
jecxz
inc
mov
jb
cli
cmp
add
lret
mov
repnz
cmp
test
xchg
push
xchg
mov
notb
xor
jno
sti
outsb
aaa
fdivrs
mov
xchg
adc
andl
cmp
sbb
mov
das
xor
shlb
ds
ss
das
sbb
repnz
or
rcl
stc
lock
insl
out
xchg
pop
pop
pop
arpl
out
or
loop
mov
outsl
scas
lret
mov
jno
ljmp
mov
inc
mov
movsb
cld
inc
in
lds
and
out
test
gs
mov
insb
outsl
add
insl
xchg
decl
cmc
int3
ss
mov
mov
loop
jae
or
xchg
rcrl
lret
jg
aam
xor
push
lds
jecxz
or
es
fidivrl
fldcw
sub
xchg
jp
push
aaa
add
je
sbb
dec
add
out
cld
fcmovnb
mov
in
sbb
push
cld
push
cmp
inc
mov
sub
cltd
call
fcoms
insl
out
jle
jp
pop
imul
lret
pop
add
nop
xor
fiaddl
inc
iret
jns
push
shlb
mov
pushf
add
push
in
loop
push
adc
fnstsw
je
pop
lea
lock
pop
sub
sti
hlt
xor
add
xchg
push
mov
pop
xchg
or
jp
popf
lahf
lds
or
int3
push
int3
jb
movsl
sahf
inc
pop
xlat
or
rcr
clc
stos
mov
xlat
gs
jno
mov
into
sub
in
into
stc
lock
mov
add
xchg
dec
aad
into
lds
or
and
fisubl
test
sub
or
cmpsb
out
insb
lret
xchg
jmp
mov
repnz
cltd
mov
add
add
cwtl
fbstp
lret
in
into
sbb
aam
xchg
add
test
cli
cmp
mov
mov
or
repnz
mov
rcl
add
stos
mov
jb
pop
aaa
adc
lret
in
test
jle
movsb
jnp
xchg
push
lods
adc
orb
pop
dec
nop
mov
outsl
das
pop
dec
mov
repnz
dec
es
pop
loopne
scas
push
cwtl
mov
jmp
cmp
xor
sub
push
push
outsl
daa
testb
sbb
rorl
xorl
add
dec
and
fucomip
in
mov
aaa
clc
js
mov
scas
mov
idivb
xchg
dec
movzwl
imul
std
xor
aad
jbe
cltd
nop
fldenv
jb
xor
addb
pop
mov
add
xlat
subb
cli
mov
ss
lret
scas
or
add
hlt
test
mov
mov
fsubl
aad
mov
mov
bound
iret
clc
xchg
es
sbb
out
xor
fnstenv
mov
adc
sbb
nop
push
rcrb
jbe
or
rol
and
sbb
shr
fwait
cli
fstpt
push
out
in
pop
lahf
stc
imul
ja
ljmp
rorb
dec
sub
mov
je
and
jb
repz
in
aas
add
dec
push
inc
sar
fbld
cmp
xorb
push
mov
sub
subb
xor
scas
into
lock
arpl
mov
dec
test
fimuls
jbe
cmc
jno
cwtl
mov
jp
cld
mov
push
fnstcw
sti
stos
pop
popa
leave
jno
and
test
cmp
pop
inc
scas
pop
mov
scas
mov
sub
lds
fwait
dec
pop
adc
pop
push
call
mov
inc
test
xor
mov
ja
ss
pop
mov
rorl
lock
jmp
fs
inc
jno
mov
jmp
mov
shrl
xchg
pop
push
or
fistl
rcr
mov
pusha
lock
ja
test
jp
jae
pusha
or
jbe
shlb
orb
cli
xchg
sub
mov
inc
jl
jo
pushf
pop
dec
sbb
xchg
push
aas
inc
fcmovu
cmp
inc
ja
dec
and
lret
xchg
out
jmp
xor
dec
in
add
ret
out
add
adc
testl
xor
or
lods
shlb
movsb
sbb
imulb
mov
rcrb
scas
mov
cmp
aad
cmp
jg
mov
shrb
sub
or
sub
insb
mov
sti
incl
flds
aam
xchg
das
or
js
push
jmp
xchg
jnp
push
add
push
adc
and
push
inc
mov
jmp
lahf
daa
es
push
jle
and
cmc
int3
adc
xlat
add
xor
push
cld
push
test
or
and
add
out
roll
and
mov
and
xchg
mov
jnp
pop
xchg
andl
mov
movsl
je
es
in
lea
pushl
loop
iret
push
push
and
int3
insl
adc
out
std
jmp
jmp
or
mov
imul
cmp
out
out
jmp
mov
into
es
es
es
mov
mov
ja
cli
iret
cmp
imull
or
or
jnp
aas
movsbl
and
insb
jmp
loopne
add
or
popa
pop
ja
mov
mov
leave
fcmovu
shlb
repz
data16
cli
mov
movsb
sub
outsl
std
mov
jae
out
jo
test
shll
lods
stc
aas
xor
push
mov
pop
cmpsl
inc
gs
aaa
and
cmp
ljmp
sbb
mov
fstl
sub
fists
clc
std
inc
fwait
cmp
sub
mov
push
xor
hlt
sub
lock
and
and
inc
stc
in
and
data16
cmp
aas
and
mov
mov
jge
stos
popf
dec
es
or
aas
and
pusha
sbb
push
or
push
dec
adc
xchg
xchg
shrb
sbb
push
cli
sub
mov
outsl
shrl
test
inc
ret
jne
rcll
divl
xchg
pop
cwtl
inc
mov
push
fsubl
mov
mov
xchg
xor
inc
mov
mov
mov
lret
and
in
mov
jbe
mov
mov
mov
lahf
add
adcl
fadds
push
add
pop
repnz
jno
mov
fsub
les
add
test
out
test
and
in
mov
adc
test
jb
and
push
jmp
mov
xorl
jns
icebp
mov
les
pop
popa
mov
pop
insb
ljmp
jmp
movsl
push
mov
jge
inc
icebp
xchg
dec
ret
fistpl
jp
pop
dec
xor
mov
imul
test
lock
aas
mov
cmp
ret
repz
mov
and
cmp
and
scas
loop
cmpsl
mov
cltd
cmp
repnz
jno
and
push
fdivl
je
fwait
and
add
int
push
mov
hlt
adc
sbb
or
shrl
inc
or
mov
rcr
push
xchg
and
xor
repz
cmp
push
sub
sub
push
xchg
pop
stos
int
jp
sbb
test
aad
dec
push
jle
lods
jg
pop
int3
enter
dec
int3
sbb
popa
pushf
mov
rcrl
pusha
cwtl
push
mov
lods
mov
loop
pop
cs
add
sub
xlat
push
mov
push
inc
cmpsb
out
or
sub
lea
ret
sbb
mov
cmp
add
rclb
sbb
adc
imul
push
push
mov
sbb
popf
daa
aas
insl
or
sahf
int
lret
jae
clc
lahf
das
jge
mov
sub
shrb
int
out
aad
das
fisubs
in
lcall
aaa
push
popf
dec
negl
xor
iret
jp
sub
mov
sub
insb
andl
movsb
adc
and
adc
ret
jmp
sbb
loop
divl
adc
mov
push
test
dec
mov
ja
pusha
test
into
into
in
pop
iret
fs
cmp
mov
mov
rorb
in
mov
mov
mov
pop
pop
push
lock
push
add
push
arpl
iret
or
mov
push
mov
sbb
pop
icebp
mov
sub
pop
or
cld
dec
test
inc
orb
cltd
or
pushf
test
sub
call
int
call
loope
mov
fwait
lds
mov
push
aad
mov
out
imul
cmp
mov
es
xchg
push
push
xchg
js
aaa
rcr
pop
add
and
ss
xchg
ss
pop
int3
lods
dec
mov
mov
mov
scas
xchg
inc
ljmp
divb
mov
jns
mov
push
mov
mov
adc
mov
test
int
jb
ret
out
test
adc
or
lcall
outsb
jo
out
stc
out
mov
push
sub
popl
jle
xchg
mov
lods
jl
mov
inc
ficoms
icebp
sti
sub
arpl
fisubl
xorb
mov
adc
loopne
cmpsl
mov
mov
push
add
mov
cmp
mov
gs
das
sbb
clc
mov
sub
call
xchg
cli
mov
jo
push
cld
imul
incb
ss
sahf
mov
push
add
mov
jb
mov
popa
push
inc
popf
movsl
pop
or
shlb
mov
fsubl
jno
dec
dec
dec
mov
xchg
jnp
ret
add
or
mov
and
xchg
sub
cmp
pop
sub
sub
fnstsw
mov
sub
test
sbb
adcl
leave
lret
push
inc
arpl
push
shrb
je
mov
add
and
pop
adc
sbb
add
inc
cmp
shll
or
sub
ret
push
push
push
xchg
addb
mov
out
stos
enter
sbb
sbb
stos
jo
push
jno
cmp
test
jl
mov
les
and
cmp
imul
js
push
xchg
adc
push
push
lret
xor
iret
add
std
inc
int
mov
sti
mov
leave
into
pop
lock
mov
add
iret
cmovno
stc
sub
ss
mov
pop
sti
lret
xor
dec
add
xchg
ror
cmp
rcrb
and
inc
push
js,pn
dec
outsb
push
xor
mov
in
or
add
dec
loope
mov
iret
and
mov
sub
jecxz
es
in
dec
mov
jge
sbb
test
rcl
xor
fs
daa
mov
sub
pop
or
imul
sub
xor
icebp
push
push
icebp
inc
lods
ret
in
jns
pop
scas
lds
pop
bound
push
inc
xchg
mov
add
jge
in
sub
pop
scas
sub
mov
inc
jbe
dec
lahf
fadd
pop
nop
mov
xchg
scas
lret
jns
lods
mov
mov
sbbb
aaa
inc
insl
loop
cmpsb
push
ret
pop
push
loope
mov
xor
stc
mov
inc
scas
cmc
lods
mov
daa
sub
rol
aas
ret
mov
push
adc
sbb
outsb
fwait
xchg
loope
stos
scas
dec
push
xchg
jp
xor
lock
fstps
mov
mov
andl
xlat
outsl
into
lcall
xchg
and
shrb
pusha
stos
sbb
test
xchg
lds
cld
mov
add
cmp
sti
call
int
cmp
lds
add
in
movsb
add
andb
std
add
and
lret
fsubrl
cld
insl
mov
push
add
cmp
mov
sarb
sahf
push
mov
in
push
ja
lahf
jo
cmp
sar
fiaddl
dec
mov
jecxz
arpl
jl
mov
mov
clc
inc
mov
dec
cltd
shlb
and
loope
std
mov
dec
call
pop
xor
mov
repnz
mov
ds
adc
enter
lret
ret
cwtl
fbld
enter
dec
mov
adc
push
std
notl
in
in
cmp
mov
jecxz
flds
mov
pop
movsb
pop
add
xor
inc
pop
into
push
shl
imul
xchg
ds
push
mov
enter
call
shrl
gs
scas
xor
or
or
notl
push
cmp
dec
sbb
add
xchg
push
stos
inc
ljmp
pop
das
adc
jo
xor
mov
test
push
out
movsb
xchg
xor
xlat
ljmp
inc
js
bound
sbb
imul
mov
fdivs
mov
mov
adc
push
daa
sub
pop
mov
mov
dec
or
dec
push
sbb
ljmp
push
xchg
add
mov
out
hlt
sub
and
add
in
fwait
divb
out
mov
dec
mov
push
repz
sahf
cmpsb
sub
loope
or
out
adc
xchg
lret
je
dec
fisttpll
or
dec
call
adc
and
movsl
ret
shll
sub
pop
jecxz
leave
insb
mov
shl
jnp
inc
sahf
fdivr
xchg
xchg
fisttpl
notl
aaa
mov
push
fistps
pop
xchg
xchg
xchg
xor
xchg
aam
cwtl
sbb
xor
pushf
pop
or
clc
sbb
ss
jp
das
testl
movsl
ret
iret
sub
outsb
mov
das
and
or
pop
fld1
pop
xor
cwtl
jecxz
inc
das
int3
and
pop
push
and
mov
arpl
in
mov
adc
add
ret
xor
adc
arpl
jns
lods
int
shrl
dec
outsl
pop
xor
dec
in
push
stc
add
and
addb
inc
xchg
cli
loopne
loopne
faddp
xor
pop
xor
cmpsl
jl
cmp
xchg
inc
cmp
ds
fs
stos
ret
push
lods
xchg
inc
xor
sub
mov
mov
leave
lcall
pop
dec
or
pop
test
sub
inc
add
or
aam
xchg
icebp
scas
and
inc
push
or
mov
sbb
stos
cld
inc
and
enter
aas
xor
mov
cmp
jge
mov
jmp
arpl
rep
pop
dec
mov
jmp
stc
pusha
and
sbb
push
xchg
fwait
aad
push
lea
sahf
in
or
scas
insb
in
rorl
dec
dec
lret
test
xor
add
push
dec
cmp
sbb
stc
fwait
or
insl
out
addb
lods
sub
cwtl
jge
test
mov
jb
out
aas
adc
loope
jo
test
icebp
into
dec
push
cwtl
xchg
aaa
nop
pushw
or
dec
mov
les
cmpsb
std
mov
mov
jge
and
test
mov
add
cwtl
push
jle
xchg
sub
inc
inc
rorl
inc
inc
dec
sbb
ret
mov
mov
shl
pop
adc
push
stos
hlt
inc
std
inc
sub
cltd
mov
les
and
add
movsl
cwtl
ljmp
stos
gs
sbb
inc
xchg
add
cmp
pop
cmp
cmp
jle
sbb
jo
das
cmp
pop
les
leave
rorl
xchg
aaa
fisttps
fwait
test
gs
outsb
js
fldcw
sub
mov
movsb
cld
dec
adc
sbb
or
xor
cmp
mov
pop
inc
push
pop
push
sub
loope
shll
jmp
shlb
xchg
mov
xor
popl
es
rdtsc
adc
xchg
stos
pop
push
pop
aas
hlt
cli
add
or
adc
cmp
test
lods
push
push
das
js
mov
mov
pop
mov
aad
lret
loope
jmp
pop
sub
sar
dec
test
cs
rolb
shl
and
jle
movsb
fisubl
lahf
or
cmp
mov
scas
mov
jae
das
arpl
out
repz
mov
fdivrl
rolb
lods
ret
dec
lret
clc
xchg
push
incl
stos
or
leave
sbb
shll
inc
je
faddl
int
lea
xchg
or
movsb
xchg
xchg
sub
mov
pop
dec
ja
sarl
test
cmp
adc
add
int3
jae
scas
and
xor
mov
mov
gs
negw
mov
mov
test
insl
inc
adc
push
arpl
or
xchg
int
push
out
aam
or
inc
mov
sbbl
bound
push
push
int
cmp
pop
adc
rclb
xor
jo
adc
fldcw
fsub
sub
cs
and
pushf
xlat
pop
loope
ss
mov
sub
mov
outsl
pop
jae
xchg
or
dec
cmpsl
testb
jle
insb
fidivs
or
lret
lock
mov
mov
push
mov
sub
add
ljmp
fstl
outsb
les
add
int3
jg
mov
cmp
jge
repz
xor
stc
push
add
sub
ret
push
pop
sbb
sbb
in
out
fsub
out
pop
sarb
inc
lock
leave
add
in
xchg
call
or
outsb
test
je
inc
mov
inc
cli
push
dec
leave
lds
sub
aaa
daa
rcrl
pop
dec
outsb
push
pop
mov
jnp
mov
pop
xchg
push
pop
cmp
ss
outsb
jle
jp
cld
nop
mov
movsl
mov
and
call
aam
outsl
and
or
pop
sub
shll
imul
adc
aas
addl
es
pop
rcrl
out
ja
pop
leave
out
xorb
jb
jmp
sbb
stos
std
or
mov
pop
out
xlat
sub
lahf
or
aaa
dec
stc
xchg
movsb
rcl
mov
mov
mov
pushf
stc
shll
push
push
xor
xor
pop
fnstenv
xorl
cmpsl
lea
insl
cmp
dec
mov
shr
aas
sbb
aad
ret
xchg
sbb
pop
push
or
mov
dec
sbb
sbb
xchg
lock
out
dec
sbb
jp
mov
or
stos
test
xor
rclb
aaa
aas
aas
and
cmp
cli
dec
dec
or
repnz
pop
fcomi
lods
scas
sti
sbb
cmp
adc
mov
and
lcall
mov
test
and
mov
dec
xor
stos
ss
jo
or
jecxz
mov
cmp
fs
dec
int3
movsb
push
clc
xchg
outsl
rclb
mov
mov
adc
jne
cmpsb
test
je
push
pop
jne
cmpsb
lock
pop
in
add
lret
dec
clc
cmp
mov
dec
pop
mov
lods
clc
pop
mov
add
push
xor
lea
xchg
mov
inc
and
gs
mov
jno
in
pop
sbb
scas
xor
leave
outsb
mov
inc
stc
xor
aam
sbb
inc
sub
adc
jmp
sub
int3
hlt
push
arpl
pop
cmpb
mov
orl
int
sbb
jb
xchg
push
xorl
sbb
mov
test
ja
push
test
sbb
pop
test
in
ja
push
xchg
push
jmp
xorb
inc
or
std
jns
hlt
lds
loop
pop
mov
stc
call
mov
and
inc
xchg
jg
xchg
mov
jbe
push
pop
mov
cmc
mov
cli
push
and
adc
fcoml
push
jmp
ljmp
mov
and
cwtl
xor
xor
cmpsb
push
lock
mov
addr16
sub
pop
push
or
scas
je
ja
mov
cmc
fstps
inc
fdivrl
xor
sub
fld
mov
les
icebp
sub
mov
sar
popa
arpl
add
jno
xchg
dec
pop
jp
std
popa
popf
bound
mov
cmpb
call
fs
xor
fstpt
and
sub
fcoml
jecxz
and
push
in
inc
push
std
popl
mov
push
add
mov
test
pop
mov
xor
dec
sbb
test
call
mov
dec
sub
call
imul
cmp
and
sbb
and
mov
xor
out
icebp
or
shrl
outsb
xchg
int3
mov
arpl
pop
shlb
cmp
adc
xor
jl
cmp
cmp
cmp
and
push
push
testb
mov
or
pop
aas
pushf
hlt
aam
and
ret
xor
jne
push
mov
rclb
sub
jge
cmp
mov
aam
pop
std
js
lret
adc
dec
lcall
or
cmp
mov
xor
mov
mov
cmc
push
dec
push
xlat
mov
cmc
jnp
mov
sub
mov
outsl
test
lods
and
push
dec
leave
push
adc
and
ret
js
data16
dec
data16
mov
dec
add
pop
bound
rcrb
daa
jg
mov
push
add
fmuls
xchg
ret
sbb
cwtl
arpl
jo
cmp
movsl
out
gs
push
sbb
subl
cmp
ss
cmp
cmp
ss
adc
cld
mov
call
add
pop
pop
push
inc
xchg
ja
sbb
test
in
test
add
pop
andb
enter
sti
repz
ss
xor
out
pop
push
xor
sbb
mov
mov
dec
jbe
sub
imul
pop
jno
std
incl
xor
cmc
inc
imul
iret
jnp
ljmp
popf
sub
orb
jge
jo
mov
or
rorb
lods
mov
loop
push
loopne
roll
push
push
push
cmp
cmp
loop
and
sbb
sub
push
lods
or
dec
mov
mov
cmp
sbb
int
jne
push
jg
jge
push
in
xchg
cmp
leave
inc
lret
and
xchg
je
subb
sti
mov
mov
dec
iret
sub
dec
pop
xchg
cltd
jge
inc
inc
pop
and
outsl
sub
ss
and
mov
aas
mov
or
lret
imul
xor
jmp
inc
bound
iret
xchg
inc
psubusw
dec
lock
mov
insl
movb
popa
mov
xchg
add
ljmp
adc
mov
add
dec
in
mov
sbb
sub
adc
mov
clc
adc
jg
pusha
push
and
in
fadd
lcall
std
mov
out
nop
xchg
inc
loop
lods
int3
lahf
aas
aas
and
cwtl
je
lods
or
dec
ret
lods
fstl
xlat
push
in
mov
jb
imul
js
and
test
lock
push
enter
leave
adc
sub
lods
cwtl
push
and
das
sub
jle
and
push
pop
inc
pop
cmp
add
movsb
pop
pop
lds
cmp
mov
lret
mov
push
and
andl
in
fldt
jmp
call
xor
dec
in
mov
stc
cs
ss
sub
add
xorb
gs
pop
pop
dec
repnz
sub
xor
adc
mov
xchg
insl
mov
out
sbb
out
pop
cli
and
adc
mov
xorl
jno
push
mov
in
push
movsl
pop
inc
cmp
push
shll
cmp
xor
pushf
lock
xlat
jp
ficoms
inc
mov
push
imul
inc
rol
outsl
add
add
inc
loope
xor
int
mov
subl
mov
inc
das
sub
loop
xchg
push
cli
xchg
push
shll
mov
xor
adc
or
sub
mov
jae
std
insb
inc
cs
aas
movsb
adc
sbb
dec
in
sti
sarl
push
jp
cmp
cmp
and
jl
sbb
nop
cmp
lock
pusha
sbb
lcall
inc
out
cltd
cmc
jge
add
stos
push
cmp
push
mov
adc
mov
test
popf
inc
scas
pop
mov
xchg
jo
ljmp
enter
sahf
sbb
iret
push
sahf
imul
push
jb
outsb
pop
inc
mov
cmp
je
icebp
mov
out
xchg
pop
mov
fnsave
scas
push
leave
pop
int
ljmp
ja
xor
sub
dec
aaa
fistpll
icebp
cmp
xchg
inc
xchg
out
data16
mov
fs
fistpl
push
aaa
or
jae
bound
orl
pop
dec
rorl
jg
out
xor
pop
sbb
pop
sub
fistpll
sarl
addr16
xchg
mov
cmp
lock
in
ret
mov
test
or
ror
xchg
fiadds
in
insb
xchg
sbb
bound
int
lret
cmpsl
xchg
mov
jl
cwtl
mov
mov
imul
xor
lahf
aam
bnd
inc
icebp
icebp
inc
into
lret
test
lds
loope
sbb
mov
ss
subb
nop
cmpsl
pop
jbe
mov
xchg
bound
xchg
aas
ds
loope
sub
ror
xchg
movsl
ja
sbb
ljmp
sbb
data16
mov
dec
inc
aad
and
jg
jae
push
cmp
mov
cli
pop
fistps
xchg
pop
cmp
dec
mov
in
les
sbb
shrl
xchg
and
mov
adc
add
cmp
fbstp
out
leave
inc
xor
fwait
pop
xor
ficomps
or
ja
std
mov
fldl
dec
cld
arpl
movsb
cmp
jbe
subl
lds
shl
and
jecxz
and
pop
dec
adc
xchg
in
sbb
pop
fisubs
push
jg
mov
xor
mov
jo
mov
fwait
push
adc
pop
je
dec
cmc
ss
in
lcall
jb
adc
cmpsl
xor
or
or
loop
mov
icebp
pop
int3
xor
cmpsb
add
testl
jnp
pop
sbb
les
ja
insl
pusha
int3
sti
jo
test
jnp
popf
in
cmova
jnp
movsl
aas
sbb
inc
push
pop
test
add
jp
cmp
pop
rcr
xor
nop
cmp
sbb
pushf
orb
aaa
movsb
lods
lock
dec
mov
js
das
clc
mov
movsl
jmp
inc
xchg
movsb
sub
lock
outsl
jp
mov
pop
add
add
mov
imul
lcall
idiv
jecxz
inc
cmpsb
lahf
out
sub
shl
cmp
xchg
pop
lea
pop
xor
or
inc
and
hlt
mov
inc
hlt
ret
jb
push
insl
aaa
sub
cmp
add
ret
mov
gs
adc
jmp
stc
cmc
push
cmp
ds
adcb
xor
add
mov
mov
xchg
xchg
in
xorl
fnsave
add
pop
aam
sbb
mov
out
inc
mov
imul
idivb
scas
push
es
rolb
ficomps
mov
int
fcmovnu
stos
or
sbb
mov
icebp
std
adc
jp
sub
push
and
aaa
mov
aam
jns
dec
ja
push
ret
inc
call
les
negl
or
out
or
cmpl
mov
nop
xchg
inc
pop
mov
push
mov
push
arpl
and
loop
in
pop
xor
jns
and
pusha
hlt
inc
xchg
pop
scas
inc
out
adc
mov
xor
movsl
out
stos
mov
pop
nop
mov
inc
push
stc
test
dec
dec
orl
or
xchg
or
cmpsb
cltd
rorl
push
sar
cltd
inc
sar
inc
gs
sbb
sub
ja
dec
cmp
imul
or
call
es
jns
mov
and
lods
push
dec
sub
xchg
jl
dec
stos
mov
fwait
popa
push
push
pop
repz
mov
scas
cmp
idivl
cmp
rolb
jge
lods
sub
lds
jns
pop
jb
aam
nop
shll
data16
fistps
popa
xor
xchg
mov
data16
rol
mov
out
fwait
ja
mov
mov
mov
stc
xor
push
or
jne
inc
rcll
pop
xor
jmp
lods
std
jnp
xchg
shrl
sub
je
int3
and
bound
mov
ljmp
dec
jo
lods
imul
or
loopne
push
lahf
mulb
push
xchg
sahf
in
ja
push
iret
and
cmc
cmp
cmpb
cltd
test
pop
aaa
cwtl
dec
cmpsb
aad
fimull
sbb
add
xlat
jg
mov
fimull
or
lds
or
mov
xchg
cmp
mov
repnz
jmp
push
mov
in
inc
push
or
jge
dec
mov
out
pop
bound
xchg
sti
cs
testb
push
popa
fwait
mov
js
mov
lahf
sbb
mov
dec
lahf
inc
jo
xchg
push
pop
cmpsb
das
cmp
push
mov
lods
stc
jl
movsl
hlt
stc
outsl
sub
and
push
inc
cmp
je
fidivl
jbe
sbbl
jns
pop
or
pop
shlb
sub
jge
lds
jo
stc
xor
movsl
bound
ljmp
fdivrl
pusha
mov
sbb
dec
fwait
insl
in
insb
js
inc
out
jno
cmc
aad
incl
adc
add
mov
jp
xor
xor
inc
dec
mov
cmp
mov
bound
xchg
mov
sti
xor
cld
loope
xchg
sub
movsl
std
mov
loopne
js
lret
scas
xor
and
sub
mov
addr16
data16
xor
rclb
sub
scas
in
mov
dec
fwait
je
mov
addr16
repz
shrl
push
cmp
or
or
sbb
push
shll
out
fwait
mov
push
pop
add
add
je
dec
and
adc
test
jno
rclb
cmp
cmpsl
andl
jbe
in
and
test
loopne
sub
or
dec
mov
push
dec
jb
out
xlat
fstps
ds
in
pop
add
jae
aad
add
into
mov
inc
xchg
add
scas
push
cld
lret
sub
push
imul
fsubrs
pop
xor
mov
push
roll
imul
ja
push
pop
xlat
push
sub
addr16
jnp
push
xor
push
adcb
out
inc
ret
mov
mov
lea
orb
or
jae
mov
add
jnp
jg
push
ret
sahf
xor
test
ja
call
add
jle
int
lock
ja
cmp
daa
cld
pop
rclb
mov
sub
xor
mov
addl
fadd
and
call
shll
mov
and
fmuls
movsl
ret
fistpll
xor
sahf
xchg
icebp
in
cmp
ret
mov
sbb
dec
int
lahf
add
call
into
push
mov
mov
scas
movl
xor
cltd
lret
xor
push
pop
test
mov
gs
es
cmp
sbb
dec
aaa
mov
cmp
je
sub
xchg
adc
cmp
dec
pop
cmpsl
imul
push
mov
xor
ljmp
push
pusha
pop
enter
pusha
popf
pusha
push
cltd
cs
add
sbb
and
pop
pop
lahf
clc
fs
notl
adc
dec
in
loope
mov
das
leave
jmp
dec
jmp
aaa
lahf
or
mov
mulb
addr16
mov
adc
int
add
lea
mov
ret
inc
sbb
in
lods
imul
mov
filds
xlat
daa
in
dec
lret
push
sar
inc
xor
clc
arpl
xor
pop
xchg
mov
xor
iret
rol
mov
xchg
mov
dec
adc
xor
lret
mov
sbb
test
sbb
es
call
push
xchg
adc
iret
xchg
scas
cmp
xor
mov
inc
cmp
sub
and
push
arpl
popf
xor
jp
sbb
dec
loopne
mov
xchg
ljmp
and
fdivrs
repz
ljmp
bsf
ffreep
jbe
adc
dec
xor
out
push
std
mov
stos
inc
insb
push
add
movsb
sbb
test
and
xor
je
mov
push
inc
mov
addr16
das
ja
iret
andl
and
fprem
pop
shr
mov
in
lcall
pop
xor
stos
mov
and
popf
cmp
push
std
push
test
or
cmpsl
mov
popa
cmp
sarl
jo
daa
or
inc
adc
pop
sub
sti
js
fs
in
mov
inc
xlat
insl
cld
inc
mov
fistpl
sbb
test
xchg
cli
jmp
mov
test
mov
sahf
add
test
jge
pop
in
lock
fs
or
push
add
pop
jmp
scas
inc
movntps
xchg
fcmove
pop
lea
pop
lcall
cmp
test
push
andb
lret
nop
int
test
inc
mov
clc
mov
dec
lock
lret
sub
jl
push
pop
mov
mov
mov
insl
loop
imul
jmp
add
mov
mov
popf
push
push
or
mov
adcb
icebp
cmp
dec
jne
hlt
xor
adc
jmp
popa
aam
add
mov
jl
sahf
jp
dec
mov
xchg
ret
dec
lock
inc
cmp
push
jle
aas
jns
jecxz
xchg
sbb
pop
add
fwait
xchg
mov
adc
inc
jns
jb
fmul
jmp
fadds
out
cltd
xchg
das
adc
ret
mov
push
xor
dec
and
mov
test
pushaw
jp
push
repnz
xor
jp
push
dec
std
add
xchg
push
pop
les
rcr
inc
inc
pop
jle
adc
aad
cmp
dec
or
test
test
out
mov
dec
mov
cmp
adc
sub
into
aad
jbe
or
cwtl
jno
inc
or
out
pop
mov
mull
or
cmpsl
sahf
call
or
pop
roll
les
data16
int3
add
lods
rolb
lahf
mov
orl
loope
xor
xchg
adc
dec
loope
fwait
lock
and
sbb
jmp
in
js
cmpsl
push
lret
lds
fiaddl
inc
pop
add
cmp
test
mov
cmpl
xchg
sub
mov
hlt
fs
xor
pop
out
cmc
lcall
testb
scas
jno
push
nop
sbb
je
add
in
cmp
sub
mov
bound
lcall
cmp
enter
call
inc
imul
xor
scas
ss
mov
mov
pop
pop
mov
imul
cltd
push
sbb
scas
jo
push
outsb
rorl
pop
pop
ja
mov
push
adc
nop
sahf
adcb
xchg
movsb
jo
pop
je
js
not
and
aas
xchg
xor
in
jns
aad
add
scas
fstps
jge
shll
xchg
sbb
mov
push
sub
int3
lret
jecxz
es
xlat
mov
aas
stos
pop
sbb
cmp
push
pop
mov
pushf
jmp
ret
xchg
pop
cmpb
sbb
mov
dec
int
stos
push
jp
jb
mov
fnstcw
movb
jb
adc
cmpsl
es
mov
aaa
mov
or
push
mov
and
fwait
pop
and
push
xchg
rcrl
xlat
sbb
jge
addl
movsb
xor
dec
cmpsl
negl
mov
out
push
pop
push
fsubr
jne
daa
loop
mov
add
jmp
xor
test
or
mov
and
jb
mov
xorb
inc
fstps
cmc
pop
xchg
es
cld
push
inc
repnz
cmp
dec
repnz
in
push
jbe
and
xor
cltd
mov
fs
mov
je
js
adc
push
faddl
add
xor
outsl
lcall
cmpsl
ficompl
scas
icebp
int3
push
xorb
push
loop
inc
mov
pop
or
mov
pushf
lock
cmp
inc
mov
movsl
mov
stc
out
stc
iret
xchg
int3
into
mov
arpl
ret
test
ljmp
addb
loop
enter
cmp
loope
out
mov
and
test
fstpl
ds
aad
mov
pop
cmp
push
jle
jb
fdivs
loop
movsb
cmc
pop
stos
insl
fidivrl
fs
iret
push
dec
xor
jns
or
je
push
inc
iret
aam
movsb
mov
cmpsb
pshufw
addr16
lret
pushf
adc
jb
jns
add
add
insb
dec
sarb
out
dec
pop
inc
leave
imulb
lock
shll
gs
pmaxsw
cmpb
lahf
pop
test
pop
mov
or
scas
and
aas
lds
scas
add
mov
cltd
mov
sub
dec
ja
arpl
jmp
inc
jge
adc
dec
outsb
popa
in
fnstsw
mov
cld
mov
and
xchg
mov
pushl
je
mov
adc
dec
fstp
inc
rorb
mov
push
xor
and
cmpsl
stc
test
stos
int3
ja
xor
jno
scas
xchg
aad
jg
xorb
inc
push
das
aam
cwtl
adc
dec
mov
rcrb
jl
fwait
in
fnsave
inc
out
int
and
dec
dec
jge
ret
incb
jne
aam
mov
mov
addb
or
scas
inc
andl
xchg
loopne
xchg
or
xchg
imul
add
jbe
jg
jnp
cwtl
loope
xchg
pop
es
push
fisttpll
sbb
cld
push
clc
nop
xchg
sbb
icebp
push
xchg
and
adc
mulb
jbe
std
mov
scas
adc
jo
sub
or
adc
and
out
adcl
pop
lods
ret
ljmp
int
pop
jle
fimull
mov
xchg
imul
imul
das
or
push
in
lods
xor
xchg
xchg
lock
cmp
loopne
mov
movsb
mov
ret
adc
sahf
mov
dec
sti
and
icebp
inc
mov
pop
jbe
cltd
xchg
jp
xlat
xchg
or
jnp
add
out
cmp
and
mov
mov
sarl
repnz
enter
push
test
insb
imul
cmp
cltd
enter
cmpsb
mov
xor
and
ljmp
cmp
lods
daa
jecxz
pop
push
xchg
inc
insl
jmp
ret
pop
movsl
xchg
push
mov
and
xor
lock
shrl
pop
arpl
inc
ss
and
mov
sti
xor
ret
push
push
es
test
dec
jmp
subb
dec
repnz
into
push
jae
ljmp
inc
mov
sbb
jns
mov
aas
js
pop
test
add
add
mov
testb
ljmp
and
enter
daa
testb
xchg
xchg
pop
inc
inc
cmc
mov
dec
pop
or
bound
in
mov
or
ja
mov
inc
das
loop
jnp
push
mov
lods
das
loopne
in
dec
repz
out
or
cli
mov
sub
cltd
and
jbe
cs
push
mov
movsl
cwtl
in
psrad
xorl
push
push
sub
add
mov
pop
fadd
shll
sub
xchg
or
sub
mov
and
in
jo
jns
pop
mov
jns
add
jbe
rcrb
cmp
pop
lods
mov
sbb
push
inc
lods
lock
adcl
mov
add
lea
lahf
out
lret
clc
mov
dec
inc
xor
xlat
mov
div
hlt
jae
and
lcall
loop
pop
lcall
sbb
sbb
inc
pushf
xor
icebp
dec
out
test
cwtl
push
andb
mov
push
mull
clc
push
pop
dec
sub
dec
and
pusha
and
lods
mov
pop
fidivs
xchg
sbb
or
xchg
push
jne
orb
mov
outsl
mov
lods
test
push
popa
pop
push
out
or
dec
mov
ret
jne
in
rcll
jl
sub
add
pushf
mov
add
stc
test
mov
jp
push
aad
xor
imul
stos
fdiv
je
xchg
jle
xor
cmp
dec
xchg
testl
daa
jecxz
orb
in
or
and
repz
out
push
dec
aaa
jg
jp
jmp
scas
loope
pop
sar
cs
dec
lods
inc
push
mov
scas
sahf
iret
xchg
fwait
shl
inc
sbb
sahf
sar
jl
inc
loopne
jmp
mov
adc
mov
ds
lret
daa
mov
insb
and
push
mov
sbb
lds
jp
and
fistpll
shll
xchg
push
mov
jecxz
mov
gs
inc
incl
mov
mov
push
scas
lret
rcrb
arpl
sbb
sub
inc
scas
shr
pop
roll
xchg
pop
mov
adc
popf
mov
rcll
outsl
adc
mov
call
adc
push
jne
jnp
jecxz
sbb
out
xchg
push
imul
notb
call
push
inc
pop
or
pop
std
test
xchg
subb
nop
xchg
aas
jle
repz
mov
fbld
and
rclb
cli
push
aas
ds
xchg
stos
pop
std
fisubrl
scas
pop
arpl
add
mov
ficomps
mov
nop
mov
vmovntdq
inc
mov
fsincos
pop
divb
mov
jb
pop
add
jge
xchg
test
fdiv
inc
mov
mov
loope
ret
jg
sti
movsl
pop
shrb
push
mov
mov
mov
rorb
sbb
inc
scas
mov
mov
arpl
inc
lcall
std
xchg
sbb
fcmovnb
push
ret
sbb
mov
ficomps
repz
mov
pusha
ljmp
cmpsb
ja
add
fists
jno
push
mov
jns
in
cmp
inc
sbb
push
sub
push
bound
inc
andl
jle
test
xor
out
mov
xchg
insb
jne
push
aas
dec
cmp
mov
cwtl
stos
add
shll
inc
rclb
lods
jo
stos
push
and
mov
subl
test
cmp
in
aaa
cli
dec
mov
mov
pop
pop
in
stos
shlb
cmp
dec
daa
lea
leave
mov
and
push
mov
cwtl
fxch
dec
jno
push
imul
xchg
jecxz
fs
aam
mov
adc
cmpsb
div
or
hlt
and
jnp
or
xor
lods
mov
lcall
ficoms
outsb
nop
push
call
inc
xor
repnz
jp
mov
int3
inc
stos
jns
xlat
out
fmulp
sub
jge
pop
sub
pop
test
dec
pop
xchg
aam
dec
ret
test
xor
movsb
call
mov
cld
rcll
loopne
dec
inc
dec
ret
jg
iret
mov
out
cmp
cmpsb
sub
mov
push
mov
outsb
stos
push
fucomp
sar
stos
push
push
loopne
lahf
aad
or
popa
ss
add
or
xchg
ret
repnz
movsl
cmp
rcrb
pop
xor
or
pop
enter
jb
dec
xor
jmp
pop
sti
inc
adc
out
mov
mov
rorl
imul
dec
push
insl
ret
push
out
add
aaa
mov
in
adc
jo
stos
or
and
stc
xor
cmp
mov
mov
add
push
ds
test
lds
pop
cmc
push
scas
push
sub
iret
popf
sub
fmull
lahf
outsl
and
es
xchg
xor
outsb
xor
cwtl
push
imulb
outsb
addr16
dec
iret
roll
lahf
and
lcall
fsts
jnp
loope
sti
addr16
pop
jle
divl
icebp
jnp
fsubs
loop
adc
inc
and
cli
sbb
inc
fmull
loop
sar
stc
mov
or
les
mov
adc
mov
popa
pop
push
pop
outsl
cs
push
sub
pop
push
call
add
inc
sbb
adc
loopne
into
or
into
hlt
inc
inc
mov
sahf
into
cmp
popl
mov
pop
es
pop
sbb
inc
stos
aas
jg
repz
fnstenv
xor
aam
and
pop
pop
push
insl
add
or
push
into
lods
iret
test
sbb
dec
inc
loopne
jae
xchg
jle
and
mulb
aas
or
hlt
sbb
loop
fstps
jne,pt
xchg
and
jp
das
rorl
mov
adc
cli
inc
mov
add
gs
das
mov
inc
jnp
call
test
mov
repz
add
pop
in
decb
leave
mov
jae
mov
icebp
mov
scas
adc
dec
outsb
mov
rorb
jl
xchg
cmp
gs
ss
and
add
outsb
or
bound
jl
ret
testl
out
inc
sarl
outsl
jmp
in
push
mov
dec
xlat
xor
or
scas
sar
mov
xchg
dec
out
dec
aam
sahf
xchg
push
add
mov
fisubl
adcl
or
push
popf
xchg
out
dec
jo
inc
cmc
adc
outsl
xchg
mov
sbbl
or
mov
cli
ret
lods
aaa
lock
ljmp
push
mov
icebp
gs
scas
mov
inc
jne
cld
pushf
sbbb
lret
gs
and
jae
shll
cld
test
enter
add
xlat
mov
test
pavgw
xor
lds
ds
jge
xchg
dec
std
sub
jae
xor
and
sub
pop
fiadds
cltd
cmp
bnd
jecxz
mov
xchg
xlat
jmp
rcll
stos
cmc
test
andl
add
cmp
hlt
add
shll
add
or
and
lret
adc
mov
or
cmp
shrl
jp
ror
add
push
adc
cmp
pop
lods
adc
adc
xor
cmc
insl
ficoms
push
cltd
mov
add
aas
fstpl
dec
jg,pn
xchg
fcmovu
add
mov
dec
and
mov
scas
cli
or
aad
mov
cld
xchg
and
xchg
movsl
mov
testl
andl
mov
dec
sub
inc
sbb
jge
mov
aad
sbb
xchg
lods
sub
jnp
stc
sub
in
movl
sti
adc
xchg
pop
fdivl
ret
lea
jnp
clc
pop
mov
popa
lock
xorb
mov
and
push
push
cwtl
xchg
jl
outsb
fists
jge
and
pop
lret
cmpsb
pcmpgtd
aam
xchg
and
jo
popf
es
inc
movsl
scas
ret
loopne
xchg
mov
aas
xchg
cmp
loope
pop
outsl
add
mov
sahf
jb
cltd
outsb
rdtsc
in
lcall
jmp
fimull
jge
push
mov
mov
xor
xor
flds
mov
cmp
jnp
xor
mov
leave
aas
cmpsb
and
dec
cld
sub
orl
jg
out
sahf
mov
aad
lcall
sarb
xchg
call
mov
add
dec
aas
scas
push
jb
xor
sbb
outsb
cmp
sub
stc
xlat
fbld
add
idivb
sarl
dec
push
iret
cmpsl
xor
and
sbb
repz
mov
fsubrs
push
sarb
fsubrl
stos
loopne
push
sub
es
filds
adc
jecxz
test
dec
dec
loope
sub
xor
jmp
aad
jmp
push
and
lcall
or
into
jno
popf
cmp
jmp
lahf
xorb
cmc
cli
fwait
xchg
xchg
jo
stos
xor
xor
and
cmp
adc
sbb
or
rcl
popf
push
fisubrs
xor
cltd
xor
arpl
cmp
repnz
in
push
and
loope
mov
inc
repz
push
mov
push
lahf
inc
cs
setns
jae
mov
xor
fnsave
inc
stos
cmpsl
cmp
imul
movsl
cmpsl
imul
jb
push
and
orb
fisubrl
outsl
aam
add
push
ds
mov
push
cwtl
in
push
cmp
mov
stos
sbb
xchg
cmp
int
loope
fucom
cmp
jle
stos
mov
mov
outsl
fucom
xchg
xchg
enter
outsb
xor
xchg
neg
mov
rorl
fistl
xor
cmp
pop
fisttpll
stos
sarb
cltd
mov
mov
aas
sarb
xchg
jns
aas
jmp
outsl
mov
outsl
lahf
sbb
repz
xchg
dec
push
jb
pop
lods
inc
adc
sub
es
repnz
rorb
push
into
aad
push
mov
inc
rcr
or
fidivs
cmp
mov
int
pop
adc
xor
inc
mov
jmp
dec
jne
xchg
pop
push
jnp
in
mov
out
push
std
rcrb
lock
pop
sub
lret
inc
cs
imul
sub
jl
std
jo
lahf
test
into
incl
jmp
cmp
pusha
pop
in
mov
pop
xor
cmc
int3
jb
add
jae
insl
test
jb
in
popa
sub
daa
dec
lahf
sti
into
pop
or
mov
subb
mov
cs
pushf
mov
jl
int
pop
test
rol
sti
xor
xchg
das
cltd
xor
subl
xchg
outsl
es
mov
push
jp
scas
mov
lds
jbe
lahf
inc
xchg
cmpsb
js
cmpsl
push
jno
xor
clc
sub
pop
cmpsl
test
pop
fs
push
jb
stc
subl
lcall
ss
test
push
decl
and
inc
add
cltd
outsl
inc
sbb
push
xor
or
push
loopne
or
ljmp
pop
mov
iret
xchg
jae
inc
cwtl
addr16
push
out
jnp
jb
addl
mov
lds
pop
cmp
or
popa
shr
call
stc
loope
inc
pop
mov
fs
mov
mov
mov
and
lods
pop
xchg
xor
xor
mov
jle
std
dec
lea
loope
mov
movsl
into
xor
mov
lods
cmpsl
int
int
sarl
adc
sub
pop
xchg
mov
adc
outsl
in
push
xor
and
js
xchg
xlat
cmp
cmc
adc
jae
pop
outsb
xor
test
mov
mov
fistps
aam
xchg
fisubrl
fsubrs
sahf
jns
int
pusha
xchg
jp
push
je
xchg
iret
lcall
lret
mov
fcomi
mov
xchg
mov
mov
mov
cmpsb
inc
jns
xchg
ljmp
cmp
ret
inc
dec
outsl
insl
mov
add
mov
jge,pn
and
mov
in
pop
push
addr16
arpl
lods
inc
push
adc
jno
and
mov
push
pop
cmp
xor
lea
or
inc
insl
mov
xor
in
xor
and
adc
jb
pop
mov
add
push
sub
dec
jge
rol
fcomps
std
in
or
pop
or
jb
mov
sbb
iret
aam
repnz
loope
cmp
pop
jge
js
cwtl
out
das
std
aaa
ljmp
add
jle
fisubl
movaps
ret
xchg
ficompl
sbb
hlt
popaw
inc
data16
xor
imul
dec
mov
add
inc
daa
dec
in
sbb
add
pusha
pop
pop
xor
adc
test
lock
mov
cmp
push
lret
adc
fs
scas
ds
push
imul
dec
pop
inc
in
mov
jae
arpl
xchg
pop
jl
mov
ds
imul
dec
sbb
adc
data16
dec
divl
mov
or
in
sub
daa
repz
andb
test
fildll
add
cld
or
pop
adc
mov
stc
add
stos
nop
jge
cld
ret
dec
mov
imul
jb
mov
shl
sub
sbb
test
fcmove
mov
enter
ljmp
fs
dec
cmp
shll
xchg
test
scas
lods
daa
mov
decl
gs
gs
jg
lcall
xchg
mov
sub
inc
rolb
mov
movsb
xchg
adcl
loope
push
mov
adc
fwait
add
stos
sbb
xchg
rcrb
jl
jns
inc
test
out
jbe
xor
data16
sub
ljmp
shll
pushf
xchg
dec
cmpsb
test
dec
or
xchg
cmp
mov
mov
xor
mov
int
push
jecxz
pop
mov
pop
push
je
dec
xchg
std
inc
dec
mov
notb
insb
aas
push
xor
fsubr
repz
lret
lahf
push
dec
push
jg
lds
push
inc
mov
jmp
lds
jne
mov
push
add
data16
add
lods
clc
inc
mov
jl
pmaxub
xchg
andl
lahf
rcrl
jp
add
stc
dec
lret
xchg
pop
outsl
fisubs
push
jb
movsb
je
loope
insl
shrb
jmp
or
dec
daa
je
adc
push
enter
dec
mov
mov
xchg
xchg
dec
test
pop
cmp
xor
mov
les
cmp
pop
ret
repnz
arpl
and
mov
std
sub
in
and
and
xor
dec
add
stos
inc
out
fidivrl
dec
or
enter
shrb
gs
xchg
xor
pop
into
sbb
mov
add
in
mov
lret
repz
lock
add
sbb
movsl
jno
cmp
sub
ljmp
mov
and
fisttps
sbb
sbb
or
fwait
repnz
lea
pushf
add
jae
outsl
fiadds
jp
dec
icebp
out
sbb
xor
cmpsl
pusha
mov
lock
sub
mov
xchg
adc
iret
jo
jg
pop
test
push
mov
out
inc
lret
xchg
xor
xchg
test
xchg
mov
jno
lock
insb
das
enter
jg
cmp
jne
dec
mov
out
in
call
jge
sahf
jnp
push
xchg
les
adc
popa
cmc
mov
pop
jp
enter
push
out
fwait
dec
mov
sbb
dec
sbb
fnstenv
xor
mov
call
cmp
into
add
push
cmpsb
sbb
ret
add
push
test
adc
add
inc
notb
xor
rcll
xchg
cld
je
jge
ret
push
sbb
clc
mull
sub
mov
jb
pop
mov
xchg
sub
inc
gs
aas
imul
push
mov
aaa
xchg
insb
movsb
push
rcl
push
xor
mov
shrl
aas
xchg
xchg
mov
adc
iret
mov
addb
lret
jae
jp
dec
ret
ret
lods
pop
pop
push
add
mov
andb
int3
loope
and
insl
fs
or
call
leave
repnz
pop
xor
mov
mov
xchg
lods
lods
mov
mov
lcall
jno
push
std
mov
jns
push
aam
das
enter
fadds
cmc
mov
and
pusha
lcall
stos
adc
mov
roll
je
lea
iret
loop
xor
mov
xchg
sbb
rcrb
jo
icebp
addl
sub
adc
sbb
xchg
iret
push
in
dec
sbb
cmpsl
cli
ja
into
adc
and
push
xor
mov
mov
push
mov
mov
pop
sbb
push
stos
popf
jb
adc
push
push
divb
xchg
ljmp
cmpsb
outsb
add
inc
jmp
ss
jge
mov
dec
push
icebp
mull
ds
pop
xor
pop
jo
add
cwtl
push
xor
ljmp
fimuls
pop
sbb
std
jno
cmp
jle
pop
ljmp
insb
cmp
adc
test
scas
xlat
je
adc
push
cmp
mov
mov
imul
inc
xchg
in
dec
push
clc
jae
push
fldl
mov
ret
rclb
in
cmp
nop
stos
gs
imul
leave
or
ds
je
rcrl
xchg
stos
mov
xor
aam
push
outsl
lret
loopne
inc
fwait
mov
in
inc
mov
and
arpl
inc
shll
rclb
stos
and
movsb
inc
leave
jnp
out
jno
shl
pop
cmp
dec
loop
rol
or
jns
out
mov
std
in
jno
std
das
xchg
rcrb
xchg
hlt
rcr
fstpt
test
jle
pop
pop
mov
jl
seto
jmp
popa
xlat
xor
adc
cltd
sub
negb
push
and
in
cmp
ljmp
and
pop
adc
lcall
sti
jne
ret
jbe
test
inc
sbb
adc
inc
imull
stc
test
std
lds
fucom
in
int3
pop
stos
mov
jno
aam
arpl
lret
mov
inc
push
sbb
inc
mov
rorb
sti
sahf
pop
imul
mov
ret
mov
mov
daa
test
xchg
push
rol
xchg
arpl
mov
push
or
movsl
jns
insb
lret
mov
mov
cmp
cs
call
cmp
or
adc
sbbl
pop
cmp
movsb
push
out
pop
ljmp
xchg
popf
pop
icebp
clc
fdivp
xchg
jnp
les
cltd
fs
xor
mov
testl
dec
push
add
sub
call
out
xor
aam
mov
test
mov
inc
dec
insl
loop
or
adc
sub
mov
mov
je
dec
sub
or
aam
inc
jne
loope
ret
outsb
pop
dec
fmull
out
das
jge
aad
lahf
jmp
xchg
xorl
sbb
jle
add
or
scas
ljmp
add
dec
icebp
ja
lret
push
cmpsb
inc
sbb
outsb
pop
insl
push
adc
mov
mov
mov
cs
mov
shrl
cmpsb
test
in
lahf
cmp
mov
push
cmp
or
loop
xchg
push
shll
inc
dec
mov
dec
out
xchg
in
xlat
cwtl
mov
lds
and
dec
mov
pop
jne
xor
pop
mov
test
xor
test
gs
pop
add
push
jmp
jmp
pop
test
xor
outsb
outsb
mov
ja
xor
sub
incb
xchg
imulb
and
mov
sarb
scas
test
push
push
mov
ds
cltd
shr
jmp
ss
pop
cmc
jae
mov
fisttpll
adc
aaa
mov
cmp
lahf
mov
mov
pop
packuswb
xor
mov
ficoms
adc
testb
xchg
inc
push
add
int
inc
mov
mov
negl
sub
adc
scas
add
in
lret
mov
add
fidivs
mov
out
add
jno
lret
mov
sti
or
push
xchg
ficomps
rcrl
aad
std
cli
jecxz
mov
fidivrs
jg
ret
xor
cmp
mov
pop
xor
insb
add
enter
xchg
int
out
and
mov
cltd
pop
push
bound
add
xchg
das
ficoms
outsl
mov
add
cmp
sub
test
popf
lahf
test
dec
pop
and
repz
push
mov
mov
xor
das
insl
sbb
fidivrl
mov
dec
lcall
dec
int3
jmp
scas
xchg
ret
sahf
fwait
sbb
pop
inc
aaa
dec
loope
ficomps
jp
sti
outsl
pop
push
shrl
add
cmp
mov
adc
mov
push
imul
xor
mov
dec
jmp
out
popf
fiadds
inc
out
push
cmc
or
push
ds
in
adc
inc
sbb
ud0
scas
jne
lcall
and
adc
ljmp
stos
das
xor
lahf
push
bound
lahf
dec
cmp
test
mov
xor
or
mov
sti
iret
mov
inc
add
jo
ljmp
jecxz
inc
cltd
icebp
mov
cmp
jle
lret
and
rcr
inc
mov
lret
clc
mov
mov
outsb
ljmp
es
xlat
je
or
ret
sub
arpl
inc
data16
jl
insb
ds
xchg
lods
cmc
sub
or
imul
jb
cmpsl
push
mov
mov
cli
pop
push
cmp
mov
test
and
mov
mov
ret
push
lds
push
and
mov
pop
scas
adc
xchg
out
xor
fisttps
enter
scas
dec
lret
and
mov
cltd
or
out
add
lret
loopne
ret
mov
out
inc
mov
inc
lods
cmc
xor
mov
aad
cmpsb
jnp
adc
rolb
stos
test
push
arpl
jo
cmpsl
test
outsb
mov
jno
push
jp
rol
mov
sub
xchg
mov
fwait
sub
xchg
dec
aaa
adc
fs
out
push
xchg
fidivrl
movsl
sub
xor
scas
gs
std
or
sbbb
clc
xchg
bound
jecxz
imul
xor
jg
add
leave
sbb
mov
bound
mov
xor
sarl
push
sbb
rcr
fs
xorb
dec
mov
movsb
ja
not
push
hlt
cmp
mov
in
mov
mov
sub
or
and
cmpsb
shl
mov
jo
cmp
cmp
fcoms
ret
sub
dec
movsb
push
insb
bnd
int3
xor
inc
imul
inc
lea
cs
push
scas
sub
mov
movsb
fwait
stos
out
mov
fidivrl
gs
mov
lret
sahf
sbb
and
data16
sub
stos
push
mov
lret
jp
lcall
cmp
lock
iret
dec
push
fstps
pop
ret
sbb
test
sbb
mov
fldcw
cmp
dec
cmp
jno
jle
mov
xlat
enter
push
insl
push
xchg
mov
jge
and
stos
into
cwtl
lgs
xor
bound
lret
add
cmp
das
sbb
sub
ret
shll
rolb
jge
inc
push
mov
push
inc
hlt
aad
dec
test
cmp
jge
push
js
cs
push
pop
insb
mov
lds
testb
inc
push
test
inc
sub
aas
push
int3
mov
push
insl
fnstcw
roll
outsl
cmp
pop
xor
inc
inc
jnp,pn
jge
lret
in
dec
push
add
inc
and
dec
in
test
push
jecxz
sub
daa
pop
push
roll
mov
rorb
push
lods
notl
daa
push
stos
mov
mov
lock
jg
insl
les
int
pop
leave
mov
pushf
pop
lahf
div
push
data16
sbb
mov
fwait
fwait
aaa
arpl
aad
inc
popa
cmp
sbb
push
mov
sub
xchg
mov
cmp
jns
out
and
and
mov
cmp
cli
cltd
fcomip
ja
add
sbb
dec
rorb
repnz
les
push
lahf
mov
dec
lods
test
cmp
lea
xchg
jo
ficomps
xchg
movsb
pop
out
mov
lahf
ljmp
arpl
fcomps
or
jg
cmp
mov
jae
dec
xchg
inc
adc
pop
adc
add
adcb
daa
and
lahf
dec
mov
inc
or
pushl
fwait
dec
mov
and
push
or
ret
in
xlat
rolb
cmpsb
pop
lock
push
in
fstpl
push
jp
xchg
inc
lods
push
jp
cmp
push
sbb
roll
test
xchg
xchg
js
mov
dec
test
pop
push
fistpl
jbe
jle
jbe
xchg
dec
cmpsl
push
adc
adc
mov
fs
pop
mov
icebp
ja
notb
xchg
ficoms
cmp
clc
and
scas
dec
mov
mov
ss
mov
push
call
push
sbb
jmp
lock
push
xlat
and
xchg
sbb
xorl
dec
daa
xchg
mov
in
sti
pop
out
iret
pop
mov
cwtl
pushf
cwtl
mov
dec
adc
or
dec
fidivs
pop
test
repz
inc
adc
mov
jb
pop
xchg
popf
sub
dec
cld
mov
jbe
hlt
jo
ds
ja
mov
add
dec
aas
adc
pop
jg
push
popa
in
addl
mov
call
call
pop
fs
mov
sbb
pop
jbe
xchg
pop
sub
mov
les
cmpl
lahf
add
loopne
pop
es
push
mov
jp
leave
into
int3
add
popf
cwtl
xchg
fstl
cltd
sbb
nop
jle
jg
mov
xor
xchg
out
adc
xor
and
sub
jge
dec
movsb
pushf
out
or
clc
pop
popa
stc
and
mov
xor
mov
aam
mov
pop
pop
fld
jne
in
sahf
xor
mov
pop
or
addl
cmp
cmpsb
mov
mov
mov
pop
xor
cmpb
fnstsw
sub
imul
je
cld
sub
icebp
jmp
mov
divb
add
mov
shlb
mov
shrl
arpl
pop
lret
mov
pop
pop
imul
pushf
jmp
test
in
xchg
jbe
jge
push
push
data16
push
mov
pop
or
add
orb
ficoml
mov
mov
jg
imull
ret
mov
jns
dec
inc
sbb
sbb
mov
les
insl
mov
adc
ret
pop
jle
add
addr16
mov
sbb
je
mov
add
and
add
mov
mov
xchg
sub
lret
loope
cmp
pop
shr
pop
mov
sbb
inc
lcall
daa
lret
push
out
push
cs
add
aam
gs
inc
les
dec
mov
add
ss
je
das
out
sub
pop
mov
out
cmc
cli
in
xor
pusha
stos
pop
scas
stos
lods
adc
mov
aaa
adc
mov
icebp
or
push
pop
mov
nop
pop
xchg
xchg
inc
les
insl
pop
pop
mov
mov
outsl
jns
sbb
movsl
notl
sub
je
mov
pop
dec
push
stc
sub
repz
clc
fdivrp
mov
popa
outsl
movsb
dec
aaa
mov
push
mov
cmp
push
inc
fs
repz
mov
fsubs
sbb
mov
adc
out
adc
dec
jge
subb
dec
sub
jbe
mov
sbb
and
clc
sub
adc
popa
cs
addr16
mov
inc
jl
or
jle
loopne
pop
imul
cs
jmp
sarb
push
push
idiv
jne
or
fwait
in
push
incl
outsb
pop
and
push
adcl
adc
lods
and
bound
fcompl
cs
jnp
push
mov
xchg
mov
mov
sub
cmpsl
pop
jmp
push
add
das
mov
fcompl
jo,pn
int
je
xor
inc
out
sbb
popf
xor
movsl
repz
lock
cmp
out
dec
inc
js
shll
dec
fadds
xchg
ficomps
pop
rcr
mov
inc
cmp
jg
hlt
rcrb
inc
add
xor
cmp
fdivs
sarb
dec
inc
jo
jne
lock
lds
and
and
xchg
sub
and
bound
and
pop
cmc
xchg
xchg
mov
andl
dec
insb
pop
and
jmp
fldenv
icebp
cltd
in
in
repz
into
add
in
sbb
add
aam
add
sbb
cmpsb
jbe
test
iret
rcrb
or
sbb
pop
xchg
xchg
mov
xchg
mov
int3
fiadds
rcrb
jle
repnz
xor
pop
pop
inc
shrb
pop
stc
inc
test
cmc
pop
and
aad
hlt
lock
adc
fdivrs
ds
dec
xor
testl
cmpsl
mov
out
pop
mov
xchg
stos
pextrw
lods
adc
stos
jle
and
jge
int3
mov
push
adc
inc
mov
dec
enter
jno
repnz
xchg
stos
loop
imul
je
pop
int3
gs
push
xchg
popa
jmp
mov
scas
aaa
outsl
xchg
icebp
lds
cs
test
aas
fwait
xor
pushf
cld
js
fs
inc
fs
adc
push
ss
mov
mov
sub
jmp
adc
push
cmp
mov
addr16
jbe
inc
adc
aad
sbb
mov
fstps
shll
sbb
pop
pushf
fsubrl
push
pop
or
fistpll
jns
pusha
test
inc
rcll
and
dec
repz
xor
sbb
xchg
dec
es
add
and
adc
aam
dec
and
sub
std
imul
push
pop
rcrl
lock
pop
fdivrs
push
pop
mov
ficoml
pop
test
xlat
testl
cmp
test
push
adc
mov
cmpsb
icebp
pop
cmc
dec
in
xchg
inc
cmpsb
adc
pop
movsb
xchg
sahf
dec
mov
testl
popf
dec
jle
ret
mov
imul
push
jle
pop
loopew
xchg
adcb
inc
push
dec
adc
out
mov
jecxz
ljmp
or
mov
mov
arpl
cmp
inc
inc
das
dec
movsb
push
inc
xchg
mov
lcall
mov
fbstp
loope
and
daa
fsubs
pushf
mov
sahf
add
mov
loop
addb
inc
sub
and
fisubs
insb
lock
repz
push
xchg
aas
cmp
cwtl
fdivp
cltd
mov
pusha
mov
dec
sub
cmp
fdivp
fdiv
inc
push
out
fwait
daa
fisubl
inc
cmp
jge
stc
fs
scas
pushf
subl
fstl
adc
jle
aas
pop
test
test
aaa
loope
in
xor
push
inc
inc
push
fs
pushf
jne
repnz
pop
nop
sbb
rcrb
ljmp
cs
cmp
vmread
pop
dec
stc
dec
mov
movsb
jae
mov
je
adc
mov
cmp
arpl
jae
sbb
addr16
cld
xchg
push
xor
sub
sbb
hlt
lahf
xchg
pop
aas
cmp
sub
ficomps
fidivrs
scas
lock
paddusw
cmp
xchg
cmp
push
insb
or
jecxz
push
sbb
inc
ss
and
leave
popf
pop
call
sub
daa
and
mov
lahf
addb
push
push
pop
movsb
jno
sbb
addr16
lods
or
xchg
pop
enter
dec
dec
cld
cmp
aad
stc
pop
rclb
dec
push
add
repz
mov
inc
rolb
in
mov
sbb
shlb
sbb
flds
filds
push
mov
or
cmp
bnd
sbb
cmp
dec
hlt
cmp
adc
dec
scas
push
push
and
adc
gs
dec
cwtl
jp
xor
dec
push
out
xor
dec
and
adc
int3
daa
mov
jle
ja
or
cmpsl
out
and
add
push
aas
adc
xchg
ss
pop
sbb
in
cmpsb
fmull
hlt
jnp
mov
nop
xchg
inc
push
stc
mov
mov
sbb
sub
pushf
mov
mov
mov
xor
inc
xor
inc
jo
orb
flds
jp
out
in
add
cld
pushf
and
fucom
sub
pop
enter
xchg
mov
imul
add
sbb
clc
insb
int
or
jb
pop
call
xchg
into
popf
push
lcall
lds
mov
scas
cmp
adc
lea
lahf
push
sub
pop
mov
xor
ret
sahf
pop
sub
insb
sbb
add
pop
jmp
cmpsb
sbb
push
mov
outsl
adc
fbld
push
jns
xchg
or
mov
cmp
nop
test
ss
add
xchg
andl
inc
ja
ret
xchg
mov
and
rorl
sub
mov
mov
mov
xor
mov
in
dec
fs
popa
mov
jo
ret
lcall
data16
pop
mul
push
test
cmp
mov
in
sbb
cmc
out
jg
mov
lret
hlt
fisttpl
pop
sub
jae
cmpsl
dec
ljmp
lock
xchg
popf
sbb
mull
mov
xchg
mov
sahf
nop
mov
in
xor
jmp
mov
insb
jecxz
fstpl
or
adc
mov
mov
or
lds
mov
fidivrl
repz
lahf
test
fdiv
add
xchg
pop
adc
es
pushf
call
inc
cmp
mul
adc
and
xor
into
pushf
cmpsb
icebp
stos
outsb
dec
xor
loopne
push
mov
jb
scas
cmpsl
jbe
adc
inc
test
fstp
sarb
call
enter
scas
fmuls
sbb
les
ficoms
cmpsb
leave
fisubrl
je
enter
cmpsl
fdivl
shll
lods
mov
xor
outsb
repz
lcall
push
cmpsl
or
pop
mov
jno
ljmp
stos
lods
xchg
pop
bound
jg
sahf
adc
dec
mov
push
testb
sti
cmp
inc
dec
ret
pop
pop
jns
cs
pop
and
inc
fcmovu
or
rorb
jge
movsb
jmp
lcall
jnp
ljmp
inc
mov
xor
push
mov
lret
fwait
lock
mov
idiv
je
add
pop
adc
les
xor
loopne
loopne
leave
bound
loope
or
cmp
test
cmpsl
nop
and
pop
outsb
mov
ret
sub
adc
es
daa
xchg
insb
popa
into
jbe
lret
bound
add
xor
in
mov
es
push
jns
movl
sub
pop
xchg
ljmp
mov
mov
and
outsb
in
sbb
repz
xor
lds
add
jae
ljmp
mov
xor
test
xor
mov
inc
and
pop
adc
out
test
pushf
mov
cltd
fstpl
push
into
lods
ds
ljmp
add
push
sbb
mov
mov
dec
nop
mov
aas
adc
sbb
loopne
xchg
mov
aad
adc
popf
lods
push
cmovo
mov
vpand
subb
fnsave
jno
xor
mov
shll
stos
sub
lea
pop
test
xor
sbb
jmp
ss
push
pop
cmc
mov
dec
hlt
std
xor
jp
loope
out
adc
push
fcomps
fsubr
cmpsl
jo
dec
stos
push
cmp
popa
mov
dec
insb
jnp
jne
call
xor
push
dec
mov
cmp
xor
fldcw
push
scas
ret
arpl
add
test
mov
mov
sbb
pop
lcall
jns
sub
add
rcll
mov
fcmovnu
mov
into
pop
push
pop
mov
inc
mov
sbb
mov
cli
repz
pop
xchg
add
adc
cmp
pop
cmp
cmp
push
sbb
push
cmc
push
inc
cwtl
cmp
push
int
pop
xchg
fcom
flds
inc
clc
xor
inc
out
inc
and
cmpl
jae
sub
scas
sbb
out
cmp
lret
jg
fisubl
std
in
pop
jbe
or
jno
mov
inc
lock
adc
mov
pop
push
das
lock
test
xor
xchg
push
push
push
jb
sbb
insb
stos
adc
je
add
jmp
lock
push
imul
mov
pop
sub
mov
in
sub
addr16
cmp
or
fdivr
dec
add
cs
inc
xchg
dec
and
test
cmpsb
pop
jle
mov
mov
test
push
data16
hlt
xor
stos
pop
mov
xlat
iret
pop
outsl
popf
rorb
dec
cmp
and
insl
arpl
shl
lock
and
scas
mov
jp
jecxz
dec
popf
and
loopne
sbb
inc
fldcw
lret
icebp
mov
sub
inc
jne
mov
dec
add
lods
sub
ja
jg
add
ja
xchg
or
pop
pushf
pop
aaa
out
inc
sub
sbb
and
cmpsl
daa
xchg
ja
cmp
cmc
stos
outsb
cld
mov
dec
ret
dec
dec
lods
lret
fcmove
lods
and
repz
addr16
xchg
test
jnp
daa
lret
in
sbb
rolb
jmp
lret
xor
jno
cmp
dec
mov
or
inc
add
imul
inc
jl
push
aad
sub
xchg
push
mov
pop
push
rcrb
mov
sub
call
mov
stos
adc
mov
sub
cltd
movsb
dec
cli
jns
lahf
popf
mov
adc
jecxz
add
cmpsl
jmp
adc
call
std
and
adcl
jnp
push
test
sar
decb
hlt
adc
notb
adc
rorb
jae
mov
loope
iret
fucomi
pop
aas
lea
add
cs
das
insl
lcall
mov
adc
out
cmc
loop
sbb
pop
jl
sbb
out
lcall
or
jb
mov
scas
sub
fistps
aam
inc
pop
push
ror
fimull
shll
into
fistl
push
ret
test
mov
test
cld
mov
push
outsl
sbb
or
iret
push
popa
cltd
repz
enter
sbb
xchg
cmp
push
lds
iret
cli
sbb
sub
pop
jb
pop
lods
mov
lret
jne
mov
push
push
sbb
lret
mov
add
movsb
push
shr
insl
sub
ds
scas
inc
and
scas
bound
outsl
xor
sub
or
jecxz
dec
add
test
fiaddl
add
repz
mov
push
pop
mov
ds
lea
xchg
fdivs
insl
fidivl
stc
dec
mov
insb
mov
in
jnp
subl
pop
fstpl
add
jmp
jecxz
xchg
jl
inc
popa
adc
add
pushf
movsl
call
or
sarb
mov
scas
pop
sbb
pop
in
pop
or
adcl
and
outsb
jne
rclb
xchg
lods
faddl
test
jb,pt
cmp
push
adc
fidivrl
mov
or
scas
cmp
cwtl
add
jnp
loope
stos
insl
fidivl
jmp
in
sti
sub
adc
push
push
jmp
push
pop
sbbb
xor
add
pop
push
inc
aaa
jns
adc
dec
fldl
sbb
ljmp
adc
xchg
and
push
cmp
cmp
out
xor
addr16
aaa
jbe
mov
sub
dec
pushl
insb
xor
popa
stc
cmp
pop
out
and
push
popa
jle
bound
add
mov
push
pop
andl
mov
cmp
frstor
xchg
lcall
psubd
dec
pusha
cmpsl
push
stc
mov
mov
fistpl
add
and
jo
repnz
imul
mov
sub
mov
pop
sbb
inc
mov
or
mov
xchg
scas
std
pop
cmp
adc
aaa
lret
push
or
jno
jae
mov
lret
sahf
filds
iret
cld
xlat
sbb
cli
or
outsb
stos
and
fnstsw
add
ret
ret
push
xor
dec
xor
cmp
sub
iret
adc
jecxz
cmp
xchg
mov
sub
xor
and
xchg
sbb
pop
or
jge
insl
movb
mov
add
push
add
jmp
dec
cmp
jecxz
add
pop
pop
rcll
jecxz
mov
push
insb
ret
mov
imul
cmp
mov
addb
mov
or
jmp
lret
daa
stos
addb
into
jno
xor
jmp
es
ds
ficoms
mov
push
in
mov
cmc
xlat
fisubl
inc
cmp
test
je
pop
mov
dec
sub
shll
movsb
lea
cli
sbb
loope
adc
jp
jno
sub
addr16
repnz
insb
divb
mov
in
ss
lret
cltd
data16
mov
dec
mov
in
adc
shl
lea
mov
mov
rcr
rcl
dec
addr16
cli
mov
mov
aas
mov
jbe
ffreep
jns
push
popa
jl
sbb
add
mov
faddl
movsl
dec
call
in
xchg
fs
xlat
andb
add
movb
or
push
mov
pop
jno
lahf
mov
fs
test
xchg
enter
shlb
test
lds
movsl
xchg
xchg
dec
iret
inc
jl
mov
out
insl
sbb
pop
arpl
loopne
xchg
cmp
scas
and
push
sbb
pop
sahf
hlt
or
cmpsl
inc
ds
pop
cmp
jb
inc
aas
popa
add
cmp
jmp
sbb
push
dec
push
fsin
dec
or
and
test
cmpsb
das
jb
into
dec
push
leave
mov
mov
mov
xchg
aaa
push
aas
xor
push
cmp
lahf
jle
int
int3
xchg
lds
in
fs
lahf
xchg
int
xlat
mov
or
lcall
shll
rorl
cmc
push
iret
mov
add
sub
cmp
popa
and
sbb
ret
fnstcw
cwtl
int
cli
sahf
out
jnp
lahf
and
mov
stos
xchg
pop
or
push
outsl
sub
sub
addr16
test
xor
fidivs
pop
loopne
and
popf
mov
adc
movsl
flds
sub
mov
fcoml
cmp
jns
lcall
pop
xor
in
repnz
inc
push
or
mov
orl
outsb
and
inc
cmpsb
cmp
and
loope
cmp
push
jl
jl
xchg
jns
and
lods
adc
push
cli
sub
repnz
cmp
push
inc
and
adc
inc
loop
lahf
inc
dec
das
rcrb
scas
icebp
aas
push
push
pop
mov
pop
xchg
es
mov
rcrl
popa
mov
clc
mov
int
pusha
xor
cli
fdivrl
push
cmpsb
aam
adc
mov
sti
enter
rorl
aad
int3
lods
inc
jp
repnz
jns
push
add
jg
ja
mov
out
andb
mov
out
das
data16
pusha
mov
popf
inc
mov
je
je
dec
popf
push
dec
repnz
pop
push
gs
and
cwtl
pop
out
adc
mov
js
out
xchg
mov
jnp
hlt
push
je
xchg
es
cmp
inc
cmpsb
adc
push
xlat
sbb
pop
test
sbb
cmp
inc
movb
jle
fimull
pop
loop
mov
xor
mov
cmp
insb
pop
or
jo
sbb
aad
push
and
or
jle
adcb
and
cmp
or
adc
push
jns
jl
cmc
or
scas
jmp
popf
lahf
jns
incb
hlt
sbb
push
sub
es
std
cli
decl
xor
mov
sarl
dec
js
clc
test
pushf
fstpt
sub
mov
out
lock
adc
pop
xor
frstor
dec
push
adc
xor
mov
std
or
sub
psubq
add
movsb
sbb
addr16
into
test
push
add
xchg
mov
mov
sub
pushf
lea
push
push
ljmp
sub
mov
cmp
jecxz
das
push
dec
push
sub
mov
clc
inc
add
icebp
cs
lret
push
dec
shll
push
sbb
imulb
iret
xor
jnp
loop
pop
and
popf
notl
iret
sbb
add
cmp
roll
ja
xor
push
dec
js
push
and
mov
out
or
je
inc
fwait
pop
mov
sub
lcall
adc
arpl
and
mov
insl
stc
sbb
gs
mov
sbb
adc
lahf
jb
repnz
mov
and
gs
in
popf
xor
dec
xor
mov
inc
sti
cltd
insb
ficomps
mov
adc
cmp
sub
mov
sbb
adc
outsb
and
out
add
das
xchg
mov
test
rorb
imull
sarl
dec
je
xchg
sub
push
adc
cmp
ja
je
mov
ret
mov
pop
aad
adcb
insl
mov
fstps
bound
adcl
push
imul
and
mov
xchg
mov
cvtdq2ps
add
inc
outsl
sub
cmp
inc
daa
cs
test
inc
mov
stos
imul
mov
mov
bound
mov
out
in
icebp
loop
test
xchg
mov
fistl
jae
or
leave
in
mov
roll
sbb
push
add
push
jecxz
mov
into
aam
sub
push
push
ja
int3
cmp
sti
mov
cmp
out
lock
pop
out
mov
jmp
xchg
push
jmp
ret
icebp
dec
adc
xchg
mov
pop
mov
dec
and
lds
fiadds
xchg
jl
lods
push
ljmp
jb
fwait
xor
dec
aam
nop
das
repz
mov
sbb
subb
add
into
mov
jg
push
mov
inc
ficompl
mov
cmpsl
xchg
iret
mov
lea
rcl
out
sahf
mov
xor
repz
mov
aad
hlt
rolb
dec
xor
xchg
loopne
mov
mov
insl
nop
adc
xor
sti
addr16
mov
jp
iret
leave
sbb
mov
movmskps
mov
cwtl
dec
dec
push
outsb
jecxz
pusha
add
idivb
push
hlt
or
lret
mov
or
mov
es
movsl
lock
movsl
jecxz
daa
xor
push
in
xlat
dec
jp
ljmp
hlt
cs
sahf
shll
scas
movsl
pop
stos
cwtl
test
mov
xchg
fidivs
mov
dec
inc
sbb
sti
je
enter
adc
call
mov
or
loopne
sbb
aaa
jae
and
lret
push
insb
add
cmp
adc
and
mov
fisubs
jmp
lods
mov
mov
adc
cs
mov
mov
mov
push
cmp
std
faddl
popa
and
mov
xchg
sbb
or
push
mov
add
fmuls
push
fwait
out
xlat
jp
xchg
fsubl
dec
dec
xchg
js
ds
sbb
sub
ret
pop
scas
xchg
pushf
mov
mov
bound
push
jb
lds
dec
sub
dec
mov
adcb
xchg
adc
jnp
sub
cli
and
and
adc
push
les
nop
pop
fdivr
scas
pop
xchg
sub
bound
fs
gs
xchg
mov
sbb
inc
scas
orl
push
lds
repnz
aaa
adc
fwait
pop
lods
inc
add
push
insl
testl
cmp
in
adc
loopne
cli
push
adc
shlb
sbb
sti
mov
push
inc
ffree
shrb
scas
cltd
mov
cmc
push
sub
xor
mov
push
mov
push
sub
mov
mov
lret
pushf
pushf
sbb
mov
ja
mov
mov
inc
out
jp
fcmovnb
mov
fistl
cmp
lahf
sub
push
sub
fwait
insl
dec
leave
je
pop
inc
aas
lahf
scas
ror
insb
sub
ffree
xorl
lahf
mov
inc
sub
mov
cwtl
cmp
dec
mov
mov
dec
sub
mov
addr16
dec
xchg
bound
inc
scas
push
jg
pop
out
xchg
cmp
jo
cmp
lahf
push
test
push
fwait
inc
sub
inc
out
or
xchg
test
pop
sahf
push
cmc
push
mov
mov
inc
push
sbb
js
jns
arpl
pop
dec
or
arpl
inc
mov
std
out
jecxz
mov
jge
inc
lahf
cltd
arpl
inc
jns
add
mov
xor
lods
jg
push
mov
fwait
pushf
adcb
aaa
int
jae
pop
mov
xor
div
popf
and
jb
cli
cmpsl
mov
push
xchg
loopne
jbe
jns
mov
outsb
stos
and
or
fsin
ss
add
aas
inc
insl
or
push
xchg
xchg
scas
push
fldcw
loopne
insb
mov
xchg
pop
lods
shr
pop
cmp
or
popf
xchg
jl
xchg
insb
stos
cli
push
aaa
pop
insb
jb
xchg
ds
popa
push
xor
or
fs
insl
pop
insb
ret
rcrb
push
sbb
pusha
addl
jae
cmpsl
std
aam
outsl
test
pop
xchg
cmp
cmp
test
push
push
out
icebp
loop
mov
test
insb
cmp
bnd
and
mov
mov
jns
xchg
sbb
and
xchg
hlt
and
cwtl
iret
push
inc
popf
mov
mov
and
xchg
add
xor
cli
xchg
jno
lret
xor
in
mov
es
add
int
mov
in
insl
shll
adc
ret
mov
xor
or
das
imul
je
bound
fcoms
sbb
pop
push
pop
movsl
je
cmpb
fimull
sbb
sti
cmp
dec
scas
js
mov
add
enter
aam
ss
lret
xchg
push
or
lds
arpl
cwtl
mov
imul
xlat
loopne
xor
mov
iret
mov
icebp
xchg
ficoml
pop
push
pop
xorb
pop
shlb
and
jb
mov
sbb
xchg
jnp
push
or
call
std
xor
mov
xchg
or
jp
pop
popa
push
arpl
mov
fsubs
xchg
pop
lea
mov
jae
pusha
inc
pusha
test
lcall
xchg
push
pop
loope
jmp
nop
imul
lods
outsl
jmp
repz
testb
imul
jg
add
adc
arpl
sub
push
fwait
sub
mov
push
shl
mov
mov
xchg
dec
pop
pusha
sti
jo
and
insb
pop
xor
add
push
pop
xor
iret
xor
mov
xchg
ss
lcall
gs
push
sub
scas
out
lods
add
jle
xchg
adc
test
pop
adc
test
pop
add
and
shr
js
fst
mov
ljmp
nop
cmc
cmp
test
jae
mov
jo
icebp
stc
push
roll
add
sbb
nop
test
rdrand
lret
scas
inc
dec
mov
xor
mov
lds
inc
stos
lock
loope
mov
cmpsb
add
mov
leave
jg
jbe
addl
push
and
aad
dec
cmp
rclb
call
xchg
dec
adc
lods
ljmp
dec
fidivrl
out
pop
sub
in
scas
add
adc
dec
test
adc
jo
das
mov
mov
jnp
xor
adc
or
jge
xchg
mov
lea
lcall
dec
push
xchg
push
fstl
jbe
scas
loop
out
clc
fsub
dec
lret
int3
jg
stos
pop
test
sub
cmp
aas
add
test
cmp
dec
andl
popf
leave
mov
arpl
movsb
paddsb
in
in
fistpl
loopne
ljmp
sub
jns
das
pop
jbe
lahf
xchg
hlt
push
mov
add
das
insl
mov
lahf
and
push
gs
xchg
movsb
cld
sub
popf
repz
sbb
and
out
shll
loop
push
jg
cli
mov
mov
das
daa
sub
pop
in
xor
lds
xor
out
push
mov
js
pop
lahf
and
ja
xor
insl
fadds
xor
jbe
outsl
repz
xor
nop
lret
cmp
pmuludq
adc
push
mov
dec
or
sbb
jne
loop
or
mov
ss
cltd
mov
inc
xchg
jp
inc
test
mov
and
xor
xchg
lds
adc
lock
push
imul
push
stc
repz
xchg
jmp
sbb
fidivl
and
pop
dec
movsb
mov
cmp
jo
lcall
stc
lds
enter
inc
cmp
mov
mov
cmpsl
or
dec
test
push
push
imul
inc
out
in
stos
fs
adc
adc
inc
loop
addl
fidivrs
fs
data16
cld
mov
lcall
fsubrl
pop
fisttpl
cmp
stos
lods
mull
popf
iret
dec
mov
pop
and
cld
lock
movsb
mov
popa
add
cltd
fs
lods
das
mov
push
mov
mov
je
aad
xchg
gs
arpl
scas
ficoms
popf
lcall
jae
mov
mov
leave
ret
mov
add
xchg
divb
imul
mov
push
jbe
stc
xor
mov
mov
pop
xor
mov
inc
push
iret
popa
jb
loopne
aad
jbe
and
daa
mov
lock
lret
cmp
add
cmpsl
stos
pop
in
loope
imul
push
pop
data16
into
add
pop
push
aaa
sahf
stc
sbb
pop
cmp
push
aas
cmp
movsl
or
inc
push
xor
xor
in
arpl
push
scas
adc
push
sub
xor
xor
adc
es
xchg
or
scas
out
sbb
mov
mov
add
lret
mov
xchg
into
push
mov
stos
mov
xlat
lods
repz
jnp
cmpsl
icebp
push
lea
into
in
mov
pop
inc
add
fistl
je
mov
jge
loop
cmp
or
ret
xor
xor
pop
pop
out
pushl
lds
sub
mov
pop
jle
js
lock
inc
in
and
cmp
in
cwtl
int
xchg
push
push
lods
xchg
sub
loopne
cmpsl
gs
xchg
jp
sbb
cmp
popa
cmpsl
ljmp
sub
pop
std
stos
pop
mov
cmp
jnp
testb
mov
out
scas
es
test
add
sbb
sbb
fiadds
stos
lret
das
mov
adc
and
outsb
or
add
popa
or
popa
aad
pop
out
mov
enter
sub
pop
adc
dec
ss
das
inc
ret
repz
fiaddl
ficoml
xor
push
mov
scas
fwait
add
out
xchg
xchg
mov
inc
and
and
ret
mov
xchg
mov
add
or
xor
test
imul
ljmp
adc
xor
jle
aam
jecxz
stos
and
scas
sub
bound
push
add
jl
testl
int3
sti
jmp
cmp
cvtdq2ps
and
mov
sahf
loop
inc
xchg
jmp
leave
into
jno
testl
test
repz
inc
in
repnz
pop
dec
mov
in
pop
cmp
jae
mov
jecxz
repnz
sub
cwtl
xchg
xchg
pop
aad
idivb
leave
pop
call
cmpsb
jnp
cmc
daa
inc
push
sub
sti
loop
xlat
push
sub
ja
pushf
lds
push
jle
push
ret
sub
les
and
push
add
in
xor
aad
inc
aaa
hlt
xchg
rcll
imul
sub
and
je
jmp
inc
cmp
mov
add
enter
adc
push
and
faddp
dec
mov
out
or
push
or
imul
xchg
sub
js
test
dec
sbb
in
mov
dec
pop
sbb
xchg
sarl
and
push
push
inc
mov
shrb
adc
daa
stos
imul
xlat
daa
jmp
inc
scas
xchg
pop
mov
mov
jle
dec
adc
lds
xor
cltd
rcrb
xchg
outsl
and
fsubs
pop
je
mov
adc
pop
push
les
xlat
mov
sub
loop
xchg
int
dec
sbb
rcrl
jo
enter
push
and
sub
sbb
pop
fildl
iret
movsb
out
mov
xor
or
push
movsb
lret
outsl
sbb
movsl
mov
js
cmc
sub
pop
lock
inc
sahf
jnp
jle
sbb
adc
in
lcall
inc
sub
fmuls
jge
fdivrs
mov
xor
xchg
test
hlt
ret
mov
cmp
mov
pop
fildll
ret
sahf
clc
cmp
dec
add
imul
mov
mov
inc
xor
pop
mov
sub
dec
and
icebp
popa
sbb
inc
or
xchg
pop
xorl
dec
and
aam
cwtl
sbb
repnz
ror
fs
jb
faddp
fcmovu
push
xchg
jg
cmc
cs
inc
loop
nop
pop
mov
mov
pop
in
mov
push
fimull
jns
dec
xor
xor
in
inc
lods
and
sub
push
inc
mov
sbb
clc
inc
pop
push
pextrw
mov
call
sub
faddl
imul
push
dec
cmp
sbb
popf
cli
push
rclb
iret
cltd
fistpl
xchg
filds
push
ljmp
mov
iret
adc
inc
mov
mov
xchg
data16
and
sub
lock
lods
cmp
outsl
jns
cmp
cmp
cmp
lahf
dec
lock
mov
aam
dec
jge
into
aam
mov
adc
sub
adc
leave
cli
pop
and
test
jae
out
jne
in
xchg
clc
add
dec
repz
inc
cmp
push
mov
addb
test
adc
into
mov
mov
sbb
fcomip
lock
rep
mov
mov
adc
out
cltd
icebp
in
pop
int3
mov
pop
mov
mov
pop
fistpll
icebp
sub
popa
mov
add
pop
fstps
push
aas
push
sbb
mov
mov
les
lods
mov
dec
jnp
jo
enter
enter
cmp
movsl
push
sub
insb
push
mov
jo
push
lret
adc
push
jge
pushf
test
add
jle
lret
and
lea
jg
push
out
cmp
push
mov
mov
in
hlt
mov
mov
cld
mov
leave
cmpsl
call
icebp
pop
fadd
sbb
jmp
push
xchg
mov
pop
mov
xchg
ds
outsb
in
dec
adc
push
arpl
sbb
adc
dec
dec
dec
stos
xchg
call
sbb
jecxz
mov
mov
pop
cmc
cwtl
jb
or
mov
testb
xor
cmp
mov
imul
clc
adc
xor
mov
mov
lahf
jo
mov
aad
mov
imul
inc
clc
mov
mov
pop
mov
xchg
fnstcw
xor
fldt
test
fnstenv
cmpsb
mov
dec
fstl
negl
gs
loopne
in
push
inc
pminub
xor
fucompp
push
stc
cmpsl
fwait
sbb
das
xchg
mov
cmp
sbb
icebp
movsb
mov
mov
fwait
mov
and
push
cltd
xor
push
sbb
mov
mov
cmp
xchg
cltd
or
jno
sbb
jae
jae
test
fsubrs
in
pop
mov
jbe
xchg
loopne
sbb
lds
insl
cmp
rolb
fisubrs
ror
lods
mov
fcmovnbe
mov
or
clc
and
test
in
rol
sbb
pop
shl
adc
push
repz
sbb
jp
xchg
mov
sub
dec
xlat
mov
push
ds
scas
cmp
insl
cld
or
push
aad
add
push
lahf
test
andb
cld
scas
pop
sahf
jnp
fdiv
jno
jae
outsb
sub
scas
mov
addr16
jnp
loope
sbb
sbb
in
jg
sub
adc
cmp
fmull
repnz
xor
nop
imul
insl
push
insb
ljmp
das
xchg
jb
pop
xor
mov
sub
push
in
movsl
mov
in
icebp
dec
pop
test
add
pop
out
adc
lea
scas
add
cmpsl
ror
xchg
pop
mov
lea
mov
inc
lea
xor
loopne
stos
repz
dec
cmp
jnp
cmp
lea
movsb
and
aas
stos
push
or
jae
aad
dec
and
fnstcw
rep
cmp
repnz
sbb
pop
and
aad
mov
pop
push
or
pop
fdivrl
bound
pop
mov
inc
jecxz
jne
jne
aad
movsl
fisttps
data16
xchg
mov
push
jns
jnp
pop
pop
or
fs
mov
sbb
and
cwtl
call
xor
adc
mov
js
push
scas
loop
loopne
call
movsb
stc
test
jp
push
shlb
adc
lahf
inc
imul
add
ret
popa
std
add
jecxz
cmp
mov
xor
inc
and
xchg
es
mov
je
repz
xor
fsubl
mov
cmp
push
in
adc
push
adc
ja
mov
enter
pusha
and
push
dec
jno
repnz
mov
or
inc
sub
push
xor
adc
sub
lock
cld
push
cmpsl
or
sbb
out
pop
popf
xor
mov
or
pop
loope
fwait
ja
inc
mov
or
ja
sbbl
mov
in
test
insb
pop
sub
pop
mov
lret
aad
mov
out
adc
push
inc
fbstp
repnz
decl
fsubs
repnz
fldl2e
jns
fisubs
aam
rcrl
in
mov
cmp
data16
adc
mov
sub
push
int3
mov
dec
jo
mov
cmpsl
addr16
fldenv
movsb
leave
mov
hlt
pusha
outsb
lock
add
fwait
jl
test
push
shrl
xchg
pop
ss
aam
add
mov
inc
xchg
xor
outsb
out
fnstsw
clc
shll
push
or
dec
push
pusha
mov
jbe
mov
movsb
enter
clc
jo
xchg
dec
data16
jl
loopne
adc
loopne
das
pop
mov
scas
lods
scas
les
sbb
xchg
xor
bound
or
add
aam
testb
iret
lods
das
mov
insl
jp
dec
shl
aas
dec
and
test
mov
cltd
push
lahf
and
stos
iret
xchg
mov
lods
cmp
out
xor
xchg
repnz
enter
sub
and
andb
hlt
or
jmp
stos
jb
inc
sbb
xlat
and
ret
add
jo
xor
dec
ss
dec
out
lret
mov
dec
iret
lret
pop
jne
fisubrl
cld
cmp
sbb
or
dec
aam
xor
loope
data16
testl
stc
xor
inc
push
mov
int3
imul
sub
mov
insl
mov
std
push
sahf
xor
and
lds
and
mov
ds
mov
sbb
sbbb
es
adc
cld
aam
movsb
cmpsl
in
addr16
int
and
lods
lret
repz
out
sbb
movsl
adc
push
ucomiss
out
lea
ss
movsl
jmp
jns
lret
lahf
in
inc
jmp
test
testl
sub
ja
inc
out
sub
jecxz
mov
add
ret
mov
jns
lret
int
and
int3
pop
fmull
add
scas
inc
push
roll
jl
mulb
cs
dec
pop
lds
stc
push
sub
out
add
adc
lahf
stc
mov
cwtl
inc
inc
sbb
jb
mov
cltd
lret
lea
iret
in
and
mov
or
cli
and
mov
pop
adc
movsl
daa
push
and
pushf
sub
in
jge
push
loop
pop
in
stos
mov
shll
jmp
xor
and
loopne
test
movaps
adc
lds
cli
call
ret
dec
dec
lahf
ss
pop
das
rol
pop
ja
leave
nop
shl
xor
cmp
jno
gs
mov
push
cld
cmp
aad
andb
mov
popf
jbe
scas
stos
mov
xor
cmp
dec
sub
aad
mov
js
pusha
sub
les
insl
inc
mov
mov
adc
push
mov
sbb
push
push
scas
stc
adc
jmp
inc
push
std
ret
jo
lds
pop
and
movsl
cli
sub
mov
fcomps
sbb
xlat
adcb
sbb
pop
scas
fs
das
cltd
icebp
or
sbb
jmp
xor
dec
sbb
mov
sbb
dec
lea
popf
das
xchg
sbb
fs
push
cwtl
arpl
or
mov
test
add
dec
sub
sub
es
mov
dec
xchg
sbb
push
scas
dec
ret
out
js
jae
out
xchg
hlt
cli
imul
fnsave
pushw
xchg
and
in
fidivs
fs
cmc
pop
add
inc
shrb
xchg
jecxz
xor
out
sub
lret
lds
add
mov
jne
sbbl
rcrb
mov
add
xchg
and
mov
stos
xchg
pop
pop
push
daa
push
mov
repnz
mov
mov
addr16
push
inc
and
mov
leave
mov
pushf
push
mov
xchg
pop
pop
ret
ficomps
jge
mov
mov
xchg
lcallw
loop
in
ret
idivl
aas
iret
dec
push
adcb
lea
pop
xchg
xchg
xchg
sbb
cli
lea
sbb
es
pushf
jmp
loop
in
mov
pop
cmc
subb
mov
jp
stos
dec
push
dec
test
ds
adc
dec
add
mov
xor
jae
loopne
ret
inc
test
xor
push
sbb
dec
fs
push
or
mov
mov
shrl
jmp
decb
clc
sub
jl
xlat
pop
jb
mov
jle
mov
mov
push
rcl
inc
in
push
icebp
ja
jp
push
pop
jg
inc
daa
pop
inc
jmp
in
mov
out
xor
mov
decl
add
insl
inc
fsubr
fwait
out
mov
rol
mov
or
mov
sub
adc
cmp
xchg
hlt
clc
dec
ss
shl
sbb
call
fnstsw
mov
dec
xchg
jge
push
popf
inc
sti
mov
aaa
cltd
into
bound
jnp
dec
out
je
pusha
pop
sbb
pop
xchg
dec
mov
loope
pusha
or
push
push
das
pusha
in
inc
xlat
out
stc
insl
pop
dec
xor
in
xor
push
cmp
imulb
mov
xchg
jecxz
nop
inc
sbb
lods
nop
jge
sbb
push
pop
xchg
cli
sbb
push
fidivrs
xchg
jbe
aaa
popf
jmp
push
ja
orl
test
shrl
idivl
into
movsb
addr16
push
popa
imul
xor
sbb
mov
inc
push
dec
mov
dec
stos
ret
adc
or
imul
imul
inc
in
test
or
xor
mov
add
pusha
cld
iret
test
lds
fnsave
clc
test
adc
int3
jb
dec
outsb
and
pop
pop
fistps
ret
pop
jle,pt
cmp
xchg
roll
dec
daa
xchg
jo
mov
mov
incl
xchg
cs
lea
mov
pop
pop
in
push
mov
xchg
pop
into
mov
cmp
pop
fimuls
scas
fsubrs
mov
lods
outsl
dec
sub
fcmovb
sbb
addr16
je
push
int
jnp
pop
or
scas
dec
aaa
sub
mov
inc
aad
push
mov
push
dec
xlat
js
or
loop
ret
adc
push
pop
lret
rcrb
arpl
pop
lds
out
xchg
mov
js,pn
icebp
push
mov
test
cltd
push
add
popf
add
adc
repnz
add
lahf
cmpsl
adc
jecxz
aam
dec
pop
enter
call
int
mov
fs
mov
fcoms
add
mov
sbb
push
lahf
clc
mov
shll
mov
outsb
sti
inc
ljmp
pop
mov
enter
mov
imul
decb
fcmovb
daa
data16
cs
cmpsb
sbb
aad
jle
imul
dec
inc
es
addb
test
mov
mov
mov
push
rcll
push
adc
call
cmp
xor
aad
mov
in
int3
bound
in
cmp
in
inc
cmpsb
inc
sbb
das
lds
add
lcall
and
repz
ja
aad
pop
rcrl
jg
cmpsl
arpl
adcl
or
outsb
push
cmp
js
xchg
jno
mov
sub
xchg
mov
jbe
xor
mov
mov
stos
ja
movsb
andl
cmpsb
out
cmp
adc
ds
out
sub
sbb
sub
dec
cs
aas
sbb
dec
mov
sub
pop
pcmpeqb
push
cmp
jge
fsubp
mov
push
sti
sbb
arpl
stc
lret
daa
das
cmp
arpl
hlt
mov
mov
adc
cmc
adc
and
mov
sbb
orb
dec
xor
pop
ljmp
hlt
or
loopne
scas
pusha
add
dec
mov
lret
mov
outsl
pop
xor
fldl
hlt
call
dec
lret
lea
call
pop
cmp
subb
aad
push
scas
mov
divb
lea
nop
push
xchg
movsb
dec
out
cmp
mov
sub
cmp
test
cmp
mov
mov
inc
das
mov
js
rcrl
mov
aas
pop
lds
loop
in
out
jno
mov
jb
pop
sbb
jno
test
out
jnp
inc
fldenv
mov
cli
sbb
clc
aaa
out
ljmp
mov
xor
xchg
shl
aas
push
or
out
imul
cmp
xor
daa
pop
xchg
xor
jl
mov
or
push
nop
adc
aam
outsl
mov
cmp
mov
inc
ficoms
and
fldenv
lods
sarl
imul
mov
xchg
fidivs
lcall
pop
lret
cmp
out
or
pop
daa
les
pop
incb
movsl
mov
rcr
xchg
iret
lds
push
negb
jmp
outsl
xor
or
sbb
test
sbb
mov
push
fsub
fs
stos
or
cmp
push
out
daa
adc
mov
sub
ret
insl
dec
dec
popf
xor
cmp
ds
adc
imulb
imul
pop
push
ret
movsb
out
dec
and
cmc
dec
mov
imul
add
stos
sub
test
sub
push
dec
es
pop
and
sub
out
mov
adc
scas
sahf
or
sbb
pop
std
js
xor
adc
jp
push
pop
outsl
xchg
imul
mov
push
xchg
sub
dec
in
and
jne
pop
das
nop
add
loope
add
push
pusha
push
imul
enter
add
scas
lods
jbe
lahf
out
mov
or
addb
mov
xor
mov
mov
out
cmp
cli
sti
fisubs
gs
popf
scas
jg
imul
pop
xorb
arpl
imul
out
rclb
inc
addl
dec
sub
insl
pusha
add
or
adc
xor
rorb
push
push
jge
out
nop
adc
inc
movsl
add
sbb
fldl
out
fsubr
jns
pop
in
iret
cmp
sub
inc
sar
xchg
icebp
fdivl
out
iret
or
dec
jb
and
test
xchg
js
push
lods
mov
das
jmp
call
sub
ja
lock
je
jle
test
mov
andb
jae
ss
idivl
or
nop
ror
sti
lahf
and
jnp
xchg
xor
push
lret
test
mov
out
clc
enter
xchg
inc
push
jns
jmp
push
out
sbb
mov
inc
loope
lcall
je
or
mov
xor
sbbb
sahf
add
push
testb
dec
sbb
jae
pop
add
loop
sahf
jg
test
mov
cmpsb
inc
sbb
decl
stos
or
and
add
mov
dec
clc
dec
mov
xlat
pop
and
pop
loope
jno
push
rcrl
jmp
push
out
and
pop
cmc
xor
adc
mov
dec
imul
cmpsb
mov
add
add
dec
cmc
out
cmp
xor
push
jmp
addb
pushf
push
scas
or
sarl
shlb
dec
mov
xchg
push
mov
pop
adc
gs
mov
testl
cwtl
test
fldt
cmp
imul
pop
mov
dec
leave
cmp
fsubl
sbb
pop
xor
out
enter
sbb
inc
jp
mov
ljmp
dec
in
test
adc
arpl
std
add
loopne
shl
stc
pop
ds
cmp
rclb
leave
jge
scas
test
int3
mov
lods
adc
mov
arpl
int
pop
pop
inc
cmc
dec
sbb
cmpsb
int
ss
mov
aam
sbb
pop
inc
imul
or
pop
movsl
mov
cwtl
adc
add
test
jnp
jo
hlt
mov
mov
pop
jmp
pop
mov
rorl
cld
ret
jb
sbb
sti
sti
stos
sub
pushf
out
adc
rorb
test
ja
jle
loop
xchg
adc
les
inc
or
sub
fsubr
ja
jno
stos
mov
mov
pop
arpl
xor
sbb
cltd
push
jg
call
mov
scas
fldl
mov
shll
aaa
push
in
lods
sub
jl
idivl
sar
xor
repnz
xor
jbe
jmp
xor
adcl
sbb
hlt
xchg
mov
cmp
jns
clc
outsb
in
addr16
fistps
aaa
fbstp
je
add
mov
rorl
ds
clc
dec
in
stc
mov
out
rorb
arpl
add
cmp
jmp
inc
or
sub
xchg
xor
cmpsb
pop
repnz
je
addr16
xchg
addr16
xor
adc
mov
push
xor
daa
loopne
and
mov
mov
mov
fmull
sbb
jmp
sub
jle
push
dec
and
pop
xor
or
divl
dec
mov
mov
mov
loop
or
in
stos
jg
into
outsb
cmp
xchg
cwtl
dec
add
cld
xor
adc
scas
push
enter
lods
popa
sbb
mov
jne
mov
xor
and
inc
mov
pop
mov
jmp
sub
push
pop
jl
push
fs
pop
jnp
dec
dec
inc
jnp
mov
dec
sbb
xchg
outsl
loope
push
or
lods
imul
aam
sub
cmp
add
shlb
in
icebp
je
push
shll
in
in
jne
or
jae
clc
ret
xchg
push
ja
pushf
dec
lahf
inc
jno
mov
nop
sti
or
in
mov
pop
fldenv
jp
add
insb
shrb
je
iret
add
bound
out
mov
test
in
jmp
sbb
lods
ret
rol
adc
in
jns
fiadds
jp
int3
cltd
xor
mov
test
pushf
in
mov
xchg
aad
jne
xchg
xchg
in
mov
mov
jge
mov
test
cmp
loopne
test
sub
dec
inc
ficomps
fmull
nop
mov
fidivs
movsl
gs
xchg
addb
inc
xchg
inc
cmp
fcomi
decl
into
cmc
sbb
pop
fisubrs
mov
aam
cmpsb
aas
mov
gs
lcall
and
pop
cli
mov
int
push
or
stos
fidivrl
into
ss
mov
call
cmp
and
fndisi(8087
repz
popl
es
loop
insl
adc
imul
sbb
pop
pushf
loop
dec
jge
ja
push
das
cmpsl
das
cld
and
stos
or
pushf
daa
fnstsw
hlt
sbb
addr16
and
xchg
stc
mov
fnsave
mov
lret
scas
push
jmp
sarb
sub
and
jnp
sub
push
inc
movsl
iret
inc
jle
and
push
pop
vshufpd
imul
dec
jb
les
inc
push
loop
xchg
dec
add
out
push
xor
call
fildll
loopne
cwtl
jb
sub
adc
or
jp
insb
add
add
xchg
jns
lahf
xor
mov
lods
mov
std
push
adc
pushf
filds
in
es
dec
mov
inc
enter
jge
lea
cmp
jp
or
sub
pushf
fwait
dec
jbe
xchg
or
lock
jnp
sub
into
pop
xchg
pop
inc
mov
and
sbb
in
mov
jmp
xchg
lea
fisttps
ret
icebp
das
shlb
rcl
add
ret
movsb
push
or
int3
and
leave
xor
cmp
aas
add
cmpsb
or
and
jp
mov
xor
adc
xchg
or
xchg
mov
cmp
push
xchg
scas
nop
jge
lods
or
push
mov
in
mov
stc
ret
fmull
inc
scas
mov
aaa
pop
jge
xchg
btc
jge
cmp
jo
ja
ss
jae
and
lods
jb
mov
pop
xor
frstor
mov
jno
push
adc
push
mov
adc
inc
push
test
rorb
cmp
sti
imul
push
xor
mov
inc
sbb
push
les
sub
push
push
inc
leave
data16
push
ss
stos
mov
jg
pop
adc
je
inc
push
mov
faddl
aas
push
xchg
jecxz
dec
push
andb
and
cmc
icebp
cmpsl
addr16
sbb
mov
sub
insb
mov
inc
ret
lods
out
cwtl
pop
mov
out
dec
adc
loop
pushf
fldl
xchg
lds
and
mov
js
pop
xor
sub
mov
sub
sub
aam
aaa
dec
shrd
hlt
mov
adc
lea
push
int
pop
or
xor
dec
xlat
fldcw
aam
sbb
ja
push
into
in
mov
sub
xor
dec
std
push
sub
dec
bound
lds
pusha
cli
xor
jb
pop
popa
pop
hlt
push
or
mov
pop
scas
xlat
sub
les
cmp
mov
or
add
add
scas
ror
jne
lret
faddl
xor
mov
subl
out
ds
loopne
cwtl
cli
cmpsl
xor
lret
outsb
dec
or
pusha
fidivl
dec
inc
and
pextrw
stos
or
fisubrl
lock
jne
mov
jnp
aam
bound
mov
pusha
sbb
arpl
aas
push
xchg
daa
mov
std
imul
out
and
adc
or
ret
dec
inc
dec
jae
pop
inc
adc
lcall
clc
imul
in
jle
inc
mov
dec
pop
out
mov
repnz
adc
push
test
mov
in
movsb
sti
mov
mov
or
scas
mov
dec
movlps
mov
add
push
in
ss
in
and
movsl
jbe
cmpsl
pop
in
add
add
xor
cmc
mov
xlat
inc
mov
pushf
and
push
xchg
imul
pop
adc
jae
inc
sbb
sub
jg
lods
fsubs
pop
jge
cmp
or
sub
xchg
cmp
daa
mov
add
incb
mov
mov
adc
add
adcb
dec
pop
mov
or
xor
sti
push
in
int
cmpsb
je
inc
cmc
xchg
push
xlat
mov
cltd
daa
stc
cld
in
jb
dec
cltd
xlat
ret
sahf
in
out
insb
daa
mov
jnp
fimuls
repz
sub
rcr
dec
inc
pop
add
mov
dec
sbb
jp
notl
xchg
xchg
in
mov
adc
pop
sub
dec
sbb
push
adc
out
xor
inc
js
iret
daa
dec
cmp
outsl
jae
andb
je
lock
arpl
push
cmp
ljmp
ret
sbb
or
dec
pop
ja
mov
out
fsubr
test
es
nop
js
add
mov
xchg
add
enter
fisubs
test
iret
push
ficoms
dec
push
cmp
mov
or
push
and
sbbl
iret
pop
stos
xor
stc
loope,pn
fcmovbe
mov
in
and
or
mov
ficoms
stc
repnz
enter
push
cld
push
mov
lods
pop
daa
pop
mov
jg
out
lods
xor
rep
daa
xchg
sbb
pop
pop
adc
mov
jb
lret
scas
sub
lods
int3
rclb
and
int3
xchg
sti
push
test
jp
insb
loope
clc
mov
das
inc
adc
xchg
icebp
mov
add
scas
push
xor
subb
stos
or
in
fmull
ja
das
pop
cmp
xchg
movsl
adc
pop
inc
lret
jo
push
loopne
adc
test
loopne
cwtl
dec
xor
leave
mov
fcompl
inc
into
push
pop
add
adc
sbb
mov
xchg
push
pusha
xor
mov
pop
mov
bound
push
pop
mov
ds
xchg
push
dec
xor
sti
mov
add
pushf
push
mov
jg
sbbb
mov
pusha
pop
outsb
stos
sbb
adc
test
popa
lods
loope
data16
mov
push
jmp
cs
add
js
pop
cltd
ud0
jne
shl
mov
xchg
inc
or
dec
jecxz
and
movsl
add
mov
imul
mov
push
pushf
pusha
jl
cmpsl
int3
xchg
subl
sbb
cmp
jae
bound
adc
dec
popf
or
loop
push
fildll
add
aas
sub
outsb
ds
std
push
imul
jns
or
stc
mov
pop
insl
hlt
push
shr
xchg
xlat
stos
test
dec
xchg
dec
lea
aas
ret
ds
pop
shll
bound
or
or
push
and
test
jbe
push
adc
into
jge
push
cli
or
out
call
fiaddl
sbb
sub
test
mov
mov
pop
pop
mov
pop
push
fisubs
stc
aam
add
out
iret
int3
enter
xchg
mov
addl
popa
sbb
adc
cld
andb
insl
pop
adc
push
repnz
adc
rcrb
mov
cli
and
sub
sub
and
je
nop
mov
xor
pop
hlt
loopne
fimuls
push
sub
or
sub
dec
dec
dec
jl
lret
xchg
adc
pop
pushf
pop
mov
lods
pusha
stc
ficomps
sahf
mov
aaa
mov
xor
out
adc
dec
inc
mov
sub
or
pop
scas
scas
xor
jno
xchg
push
adcl
adc
jge
and
loop
push
movmskps
rcr
fcoml
jmp
in
sub
jle
dec
imul
and
sbb
push
push
rclb
popf
cmp
shlb
adc
mov
dec
dec
call
out
or
jl
ja
add
pusha
fldl
adc
in
or
sub
jmp
popa
adc
scas
orb
mov
stc
mov
fwait
adc
xor
dec
jnp
jae
ds
inc
xor
lcall
sbb
sub
mov
and
fldcw
imul
push
ja
mov
xchg
push
or
fstps
pushf
cmpsl
add
movsb
push
out
sub
sub
test
rorl
and
inc
mov
add
pop
out
mov
gs
aad
jo
push
std
xchg
xchg
aad
fistl
clc
pop
int3
ret
xchg
and
fisttps
inc
dec
sub
pop
mov
inc
adc
xor
lret
cli
and
ljmp
push
push
adc
fisubl
lret
outsl
in
notl
jns
stc
or
jae
xadd
sbb
inc
imull
mov
sbb
cld
in
testb
fwait
ja
push
dec
mov
loopne
adc
or
imul
in
sti
ret
pop
iret
add
push
repnz
cmp
pushf
push
push
xchg
insb
es
and
test
mov
lahf
or
arpl
adc
jl
xor
repz
iret
repz
cmp
dec
jns
pushf
jb
adc
lret
sahf
inc
test
pop
mov
sbb
es
test
dec
cmpsl
mov
daa
adc
test
rcl
jb
sub
add
push
rcrl
inc
xor
mov
lods
push
jb
lcall
xor
push
mov
xchg
xor
xorb
mov
and
outsb
jg
and
insl
jle
lds
std
or
add
fidivrl
push
mov
daa
cmpsb
adc
aam
push
sub
pop
sub
sbb
test
cld
dec
mov
ret
cmp
imul
rolb
test
out
xchg
xchg
lret
cld
mov
mov
js
dec
dec
push
imul
jbe
mov
and
test
in
push
pop
sub
fmuls
rorl
mov
mov
fs
dec
mov
loop
iret
jo
lcall
lock
les
mov
push
gs
mov
popa
and
push
cmp
inc
mov
icebp
in
pushf
mov
mov
mov
adc
push
xor
sub
sub
mov
loopne
enter
std
shrl
and
and
push
ret
shll
lods
addb
in
lret
pop
je
mov
xor
movsb
lea
and
out
divl
xchg
popf
and
test
out
mov
call
mov
ss
into
mov
test
pop
in
fcmovnb
push
loope
popa
cli
add
dec
xor
push
int
addr16
nop
pop
pushf
xor
xor
fdivs
dec
mov
xlat
imul
lcall
popa
or
xchg
xchg
sub
es
sub
xor
jecxz
fadds
and
cld
sti
out
dec
call
es
sbb
adc
xor
cli
leave
shlb
mov
cmovl
or
fwait
sub
and
inc
hlt
adc
pop
mov
pop
in
aas
mov
jbe
or
cmpsb
cwtl
pop
jbe
inc
add
jle
jne
sub
pop
jmp
test
pushf
mov
aam
out
fisttpll
aaa
das
aam
add
fiadds
inc
stos
jae
out
cmpsb
fadd
push
push
xor
add
mov
ds
inc
sub
xchg
pop
movsb
fildll
sub
adc
pop
or
fidivrl
fs
push
sar
adc
inc
mov
js
jno
js
and
mov
pop
clc
push
mov
enter
xor
rcl
lret
push
loope
push
inc
negl
push
fnsave
repnz
test
fimuls
mov
iret
mov
mov
jg
lret
and
pop
fists
push
std
sbbl
cmp
jno
in
push
inc
stos
jns
negl
aad
movsb
sbb
iret
pop
xchg
stos
dec
or
push
hlt
jl
inc
loop
addr16
and
and
pop
xlat
stos
popa
adc
add
repz
jno,pn
dec
sti
je
loop
int3
add
xbegin
into
mov
push
xchg
outsb
sbb
repnz
bound
in
or
cld
in
movsb
sbb
cmp
nop
sub
ja
fstpt
cmpsb
mov
sbb
imul
dec
or
sti
repz
rorb
and
fiaddl
pop
fdivl
xor
cmp
in
pop
cmp
in
sbb
mov
inc
scas
cmp
mov
inc
fidivs
fwait
scas
aas
pop
sbb
je
es
stc
add
sub
mov
dec
outsb
aad
inc
sarl
mov
into
jp
out
dec
in
aaa
and
mov
push
inc
mov
pop
into
movsb
cmpsb
stc
aaa
fildll
jns
adc
sti
mov
in
mov
sarl
cwtl
xor
dec
adc
lcall
push
nop
jle
jb
lahf
xchg
adcl
ss
movsb
orl
bnd
pop
mov
ds
jg
out
imul
mov
and
call
xor
jo
jb
cmp
loope
gs
repnz
jl
xchg
mov
jo
dec
lea
in
ret
and
aam
add
repnz
or
mov
push
sub
pop
mov
scas
sub
mov
pop
es
inc
xlat
mov
fmuls
mov
insl
cmp
lcall
dec
shr
pop
xchg
push
loop
test
pop
mov
mov
mov
imul
imul
cmp
sub
sbb
lock
js
dec
mov
repnz
pop
fisubrs
xchg
xchg
sub
out
cmp
test
cmpsb
mov
mov
xor
mov
sub
sub
rcrl
dec
out
es
xchg
icebp
popa
jns
inc
dec
pop
mov
jo
test
in
aaa
call
scas
pop
pop
xlat
addr16
or
mov
stos
cmp
push
mov
lods
lods
fs
xchg
nop
or
dec
mov
xlat
inc
mov
xchg
mov
movsb
xchg
test
add
cmpsb
addr16
fbld
xchg
or
dec
inc
jecxz
and
cmp
in
xchg
loope
enter
andb
and
cmp
sub
pop
int3
mov
test
imul
cli
xlat
cmp
inc
jge
jecxz
mov
lds
push
push
cmp
popa
es
ficoml
ficoms
sahf
pop
shrl
bound
jle
mov
mulb
jmp
mov
subl
aam
dec
xor
add
divb
sarb
dec
inc
mov
pop
notb
mov
ljmp
cli
shl
scas
mov
insl
pusha
shll
jle
test
stos
inc
xchg
das
add
mov
dec
inc
mov
in
mov
mov
mov
mov
rolb
push
mov
ja
push
icebp
stc
mov
jo
pop
and
mov
mov
cmpsl
push
add
inc
jnp
mov
jb
xchg
jns
add
xor
fcmovbe
push
jno
dec
xlat
sub
or
cwtl
arpl
mov
pushl
dec
mov
mov
mov
mov
fs
rclb
inc
out
int3
cmc
imul
push
rcl
adc
mov
add
test
lret
scas
inc
and
adc
dec
cmp
mov
stos
mov
outsl
mov
mov
dec
pop
dec
xor
in
rcrl
insb
add
ret
add
jbe
cmpsb
ret
add
fildl
in
add
call
ror
outsb
sbb
adc
xchg
das
not
mov
and
and
pop
add
dec
sbb
add
aad
dec
xchg
pop
xor
rcl
aas
movsb
std
or
aas
adcb
push
js
adc
test
subb
dec
addr16
sub
xchg
pop
inc
addr16
stc
push
in
inc
mov
scas
in
fisubrl
repnz
mov
or
mov
push
dec
jns
sub
push
jmp
rcr
jecxz
push
iret
fwait
popf
sahf
sub
add
sub
mov
in
outsb
adcb
add
or
and
mov
jge
leave
prefetchnta
rol
or
int3
jb
xchg
mov
pusha
sub
pop
cmpsb
dec
hlt
xchg
jmp
add
push
mov
aas
lods
mov
movsl
les
sub
sbb
sbb
xchg
lcall
cmp
or
mov
mov
rorb
jmp
xlat
inc
or
xchg
cltd
in
mov
ljmp
test
outsl
cli
inc
adc
pusha
scas
pop
and
movsl
leave
dec
inc
mov
pop
mov
ljmp
outsb
jo
pushf
adc
pop
mov
dec
arpl
pop
xchg
loopne
fisttpl
dec
sub
sahf
test
cmp
into
hlt
das
mov
push
mov
ficompl
insb
sbb
xor
sub
xchg
icebp
movsl
jg
pop
mov
cs
pop
sbb
adcb
stos
cld
xchg
lds
jae
push
xor
dec
int
adc
mov
lea
push
in
xchg
pushf
xchg
pop
xchg
fisubl
inc
adc
push
lock
into
outsb
mov
sahf
popa
mov
xor
or
xchg
imul
dec
add
fisubs
cmp
test
xor
mov
call
fs
out
adc
jmp
or
repz
sbb
aam
adc
test
subb
or
shrb
adc
daa
mov
mov
jns
cmpsl
js
imul
cmp
mov
sbb
xchg
pop
jns
shll
mov
jne
mov
jb
sbb
push
out
nop
jbe
in
mov
mov
into
mov
jle
cmp
add
cmpl
lock
sbb
into
mov
inc
xchg
pusha
add
std
jnp
rorl
pop
dec
adc
mov
cmpsb
and
mov
push
xorl
test
xor
lret
clc
add
ss
push
sbb
enter
pop
data16
scas
sbb
notb
jo
mov
fstps
lret
dec
test
addr16
pop
push
push
jg
jo
mov
out
adc
movsl
loop
xor
loopne
or
int3
mov
std
inc
cltd
adc
mov
ljmp
xchg
leave
mov
and
mov
mov
adc
xchg
jb
fst
mov
scas
adcb
ret
je
jo
insb
inc
fs
hlt
lahf
ds
out
sbb
mov
adc
cwtl
cli
and
xor
xor
and
repz
push
pop
pop
inc
js
mov
sub
aad
pop
or
ret
loope
sarl
pop
add
in
add
in
int
or
sub
into
adc
xlat
or
mov
test
fs
cmovnp
fadd
fldenv
mov
repnz
cmp
into
push
mov
stos
in
and
in
scas
pushf
lea
nop
rcll
popa
and
jno
idivl
xchg
mov
mov
gs
rclb
dec
jp
loope
cmp
push
popf
mov
cltd
ljmp
add
nop
popf
sub
mov
inc
sub
imul
dec
cmp
leave
pop
inc
pextrw
jb
jp
mov
jmp
adc
cmp
sbb
loop
jne
adcl
and
das
cmc
fiaddl
push
lea
jne
pop
mov
repz
cmpsb
ret
add
mov
pop
push
or
jb
test
cmove
mov
imul
lds
ret
imul
lret
fs
or
out
cwtl
adc
arpl
test
xor
xchg
inc
dec
mov
pop
add
mov
fptan
jmp
ret
int
das
mov
push
mov
cmp
pop
adcl
xor
adcl
lea
mov
iret
faddl
out
mov
xchg
es
pop
mov
in
push
mov
pop
jge
push
push
jl
mov
jb
or
cmc
aad
repz
cmp
push
push
test
xchg
cs
add
lods
fmull
sbb
jae
xor
es
negl
scas
fsubl
cmp
scas
jae
pop
pop
or
fcompl
jp
xchg
orl
je
inc
int
test
lret
daa
pusha
inc
cmpsb
or
loop
inc
mov
mov
sub
push
test
pop
inc
sbb
sub
imul
push
xchg
cmc
cmpb
push
ret
nop
push
cli
push
xor
outsb
aas
arpl
adc
xchg
push
xor
or
daa
lods
mov
push
and
bound
sub
lret
jp
pop
arpl
sub
and
loopne
push
jo
daa
cmp
lret
inc
push
add
mov
nop
xchg
lods
mov
cs
mov
clc
jbe
fwait
stos
jbe
mov
hlt
inc
mov
mov
cmpsl
out
fstps
jge
into
aas
cmp
stc
cmp
add
adc
stos
outsl
fisubrl
mov
fcoms
or
xor
xor
mov
out
test
sbb
pop
sbb
sarb
inc
int3
pop
push
cmp
inc
mov
leave
pop
cmp
pop
push
mov
scas
repnz
popf
out
scas
jg
dec
add
mov
jnp
daa
clc
push
fsubr
outsb
aam
and
mov
stc
outsl
shlb
int
mov
jecxz
mov
imul
stos
fs
add
loope
sbb
lahf
dec
test
leave
sub
push
xor
xchg
cmp
sub
mov
or
mov
lret
or
loope
inc
mov
mov
cltd
test
lcall
lret
addb
lock
fs
jp
or
ret
inc
sbb
enter
enter
mov
aas
jl
or
mov
enter
cltd
je
ja
dec
mov
dec
mov
jnp
aaa
xchg
loope
mov
push
add
pop
adc
in
sbb
cli
hlt
cmp
testl
push
jmp
xchg
hlt
shl
lock
data16
test
jp
mov
cmp
movb
inc
mov
jne
insl
mov
push
shll
or
dec
jnp
cmp
dec
xchg
pop
lods
add
lahf
lods
movb
xchg
jecxz
mov
std
scas
dec
and
mov
popf
jl
rcrl
or
mov
jno
xor
mov
cli
imul
dec
cmp
lcall
gs
sub
int
mov
mov
arpl
loope
leave
lret
mov
int3
notb
cmc
inc
xchg
pop
xor
repnz
pushf
sahf
dec
scas
mov
fcmovbe
roll
push
outsb
std
ficompl
pop
xchg
and
sub
adc
loopne,pn
jmp
push
dec
jl
stc
clc
sbb
xor
inc
lock
nop
nop
pop
or
andl
mov
daa
daa
jb
sub
mov
lret
inc
lcall
call
repnz
mov
js
xor
notl
das
inc
scas
mov
notl
mov
cmp
aaa
insb
jl
fdivrl
lock
mov
cwtl
inc
scas
cmp
inc
dec
jne
sbb
leave
pushf
fidivrl
stc
popl
push
mov
adc
movsb
push
cmp
rcl
test
xor
mov
ja
push
sahf
std
loope
pop
xchg
sbb
xchg
mov
jge
sar
icebp
and
push
das
out
leave
aaa
xchg
imul
loope
dec
fnstcw
lret
xlat
inc
dec
mov
and
ror
imul
push
clc
adc
push
mov
movsb
adc
pushf
pop
xor
inc
add
lock
pop
adc
aam
fs
push
pusha
cmp
sub
ss
xlat
in
popf
and
or
fnsave
aad
inc
cmpsl
and
and
sub
push
jecxz
subl
sub
xor
das
lret
aam
jp
call
call
mov
out
arpl
cmp
pop
inc
jno
loop
pop
adc
js
xchg
icebp
inc
mov
pop
mov
add
imul
incl
imul
stos
inc
arpl
gs
xlat
sbb
dec
pushf
shl
icebp
js
mov
mov
dec
push
mov
push
enter
lea
cli
out
clc
dec
and
push
adcb
add
pop
pop
pop
mov
or
xchg
push
cli
jns
je
movsl
and
test
push
stc
aam
mov
fs
push
fucom
popa
data16
jbe
push
scas
mov
add
cmp
icebp
movsl
push
push
into
push
mov
scas
jle
fnstenv
mov
cmp
xlat
mov
mov
sar
inc
xchg
stos
je
out
xchg
inc
imul
sahf
or
dec
jmp
cmp
push
pop
aas
sbb
hlt
mov
dec
daa
sbb
fnsave
enter
jne
sbb
pop
jp
lea
cli
outsb
lods
jmp
movsl
cltd
loope
xchg
mov
lds
mov
ficomps
mov
sub
out
int
and
pop
xchg
inc
mov
add
mov
rol
nop
mov
sub
mov
lret
adc
fnstenv
mov
pop
das
dec
in
int3
stc
or
popf
in
popf
movsb
loopne
das
inc
or
ret
mov
insb
xor
cld
movsl
data16
in
mov
aaa
int3
mov
mov
cwtl
lret
fmul
fisttps
mov
dec
sub
adc
enter
sbb
pop
pop
into
int
leave
or
mov
dec
adc
scas
inc
mov
add
mov
xchg
int
ret
or
adc
lods
bound
lods
mov
xchg
sbb
ret
lret
mov
sub
out
sbb
dec
jp
push
adc
jo
xchg
mov
lret
rclb
cmpsl
sbb
xchg
mov
es
sub
xchg
adc
mov
mov
gs
hlt
jns
lret
aas
icebp
fisubrs
or
outsb
fstps
dec
ja
lods
mov
mov
stos
ljmp
lods
mov
mov
repnz
test
mov
mov
rorb
mov
sub
mov
push
int3
xlat
adc
outsb
dec
and
or
sti
addb
jne
leave
cmc
jne
jge
test
adc
loop
xchg
int3
push
ret
pop
rcll
hlt
fadds
popa
in
test
adc
enter
loope
aaa
adc
push
cmpsb
xlat
inc
stos
push
mov
push
jg
jb
jbe
mov
or
xor
sbb
jle
mov
out
sub
dec
scas
jbe
dec
stos
into
or
ss
sbb
mov
out
pop
test
hlt
enterw
push
push
adc
cmp
jb
pop
outsb
pop
out
pushf
fistps
clc
stos
or
mov
push
outsl
or
or
push
xchg
jl
hlt
mov
shrb
inc
int
xchg
sbb
sub
addb
mov
dec
push
cmp
inc
cltd
sbb
das
add
jnp
mov
insb
ljmp
add
test
leave
je
jmp
in
lods
jae
ret
mov
cmp
xchg
loop
insl
sbb
lods
add
sbb
adc
cmc
lcall
pop
mov
lock
inc
mov
inc
in
sbb
stos
bound
jg
inc
fwait
jmp
push
sbb
outsb
dec
sub
das
jmp
negb
es
idivb
pop
jb
push
xorb
sbb
ja
cmp
jo
jmp
out
dec
mov
xchg
sti
lret
cwtl
not
jmp
out
push
mov
cmp
fsubr
aas
lret
fiaddl
in
add
jbe
imul
and
cmpb
sub
stos
sti
out
test
out
adc
jns
popf
mov
jmp
cmp
and
jae
and
incl
mov
daa
add
lcall
sub
mov
ret
enter
or
gs
xchg
xor
mov
mov
stos
sbb
add
test
add
xor
pop
mov
outsb
movhps
xlat
jne
in
cmp
lea
jle
jne
xor
xlat
lcall
shrb
adc
les
movsb
cmc
shlb
mov
jmp
sub
pop
sbb
inc
sbb
jb
ljmp
insb
mov
or
je
in
fldt
fisubs
pop
mov
ret
scas
data16
ja
and
mov
out
test
inc
xor
mov
jnp
inc
cli
cmp
mov
xor
mov
dec
les
mov
xchg
mov
xor
mov
fiadds
mov
add
std
or
lahf
dec
shlb
jo
dec
jae
mov
push
mov
cmp
out
call
mov
xchg
jne
xchg
push
add
scas
ds
pop
push
loop
cmp
or
rcrl
mov
aad
inc
sahf
add
push
pop
cwtl
shll
xchg
jp
add
loope
push
dec
jmp
mov
ss
outsb
add
icebp
cmpsb
jg
cmp
cs
js
mov
sbbb
out
idivb
hlt
dec
gs
pop
or
add
dec
xchg
dec
dec
push
icebp
cmp
filds
lahf
cwtl
jo
std
or
pop
loop
movsl
sub
or
das
outsb
cmp
jg
push
mov
rclb
or
push
ljmp
das
cld
xchg
daa
movsb
sti
cld
xchg
jo
in
inc
ja
pusha
ret
mov
shrb
shlb
shrl
push
aas
sbb
jno
or
cwtl
and
sub
or
mov
push
sbb
add
add
sub
jecxz
fldcw
les
je
testl
push
xchg
movsl
dec
cltd
cwtl
jne
inc
fidivrl
xor
cld
outsb
and
movsb
sub
fmuls
jne
pop
xchg
mov
push
mov
loop
jl
into
leave
jmp
sbb
mov
rol
and
xorl
rcrb
sbb
roll
xor
ret
adc
mov
divb
gs
testl
cmpsl
jno
fwait
pushl
push
pop
imul
add
dec
jno
ficoms
cmp
movsl
sub
icebp
or
mov
leave
scas
push
imul
inc
or
push
push
inc
xor
out
jns
mov
push
mov
inc
lods
std
ret
inc
or
shll
xor
lock
inc
adc
pop
xchg
or
loopne
push
mov
push
out
xor
inc
push
out
outsl
ret
xchg
scas
adc
mov
inc
insb
mov
outsb
pop
scas
mov
jecxz
shl
fcompl
test
loop
popa
sbb
push
aas
test
cltd
repnz
pop
mov
mov
mov
mov
lods
and
mov
push
jmp
rorl
add
lods
cwtl
sbb
in
pop
das
lods
in
adc
xor
xor
repz
data16
and
xchg
fcomps
add
imul
mov
jne
scas
adc
maskmovq
sbb
add
popa
insb
fwait
les
loope
or
outsl
fwait
in
xchg
mov
add
or
pop
hlt
or
es
or
mov
adc
cmp
push
in
add
mov
mov
nop
into
pop
fcompl
push
jecxz
ficompl
pop
out
std
add
push
xchg
lock
fistl
mov
mov
sti
leave
sub
nop
xchg
xchg
lcall
and
jae
or
loop
stc
in
and
pusha
nop
outsb
les
out
push
outsl
fs
and
stc
lcall
fwait
mulb
aaa
rcll
dec
sarb
inc
loope
ficompl
repz
or
jbe
pop
pusha
and
adc
or
loop
adc
sbbl
loope
and
dec
mov
or
loopne
test
dec
movsb
dec
in
xchg
fistl
cmpsl
idivl
sbb
jge
shll
outsl
out
cmpsb
mov
jns
testl
mov
push
jmp
or
pop
int3
shr
dec
jbe
xor
out
pop
xchg
cmpl
xchg
sbb
adc
jb
jnp
jns
adc
dec
jb
lahf
cltd
xor
cmp
stos
ret
into
dec
cmp
test
cmp
test
test
aam
aad
push
add
inc
pop
push
enter
jecxz
jae
xor
mov
orl
insb
jge
clc
sub
imul
dec
mov
adc
jnp
out
rolb
or
stos
xlat
mov
incb
cmp
lods
int
sbb
mov
pop
push
add
imul
cmp
pop
or
stc
add
sbb
pop
cmpsl
loope
sub
mov
loop
mov
cmc
lods
add
push
sub
enter
push
mov
adc
test
psrld
les
adc
popa
dec
adc
lahf
popa
lret
mov
insb
xor
enter
sub
pop
push
mov
adc
add
ljmp
ds
pop
outsl
fnstcw
jb
fildl
iret
xor
sbb
cmc
pop
clc
mov
jl
scas
inc
rorl
insl
rorb
mov
fcmovbe
arpl
push
daa
or
dec
not
idiv
add
pop
add
sub
and
cmp
iret
jno
inc
adc
mov
pop
shrl
mov
lahf
iret
jmp
pop
xchg
repz
in
xor
jb
pop
xchg
sar
lea
sti
ja
pop
mov
jmp
cmp
sbb
lods
stos
and
jne
popa
xchg
xorb
pop
or
xchg
stc
xchg
sbb
pop
xor
repnz
icebp
fldl
mov
mov
out
fs
sarl
adc
push
sub
push
sub
stos
nop
jns
sbb
jmp
push
dec
bound
pop
movaps
or
int3
mov
xchg
jo
movsb
dec
das
scas
push
push
out
mov
sub
jg
ds
scas
mov
cmp
inc
push
js
fcompl
mov
cmpsl
sub
and
rolb
outsl
int3
pop
fwait
push
in
imul
push
and
ret
fdiv
or
sbb
adc
jl
mov
pop
cmp
inc
mov
lret
in
shlb
sti
dec
adc
out
cli
push
scas
xchg
mov
mov
andl
loope
adc
sub
icebp
xchg
or
push
mov
jmp
daa
fidivl
clc
mov
out
frstor
cwtl
push
ficoms
cld
cmp
xor
pop
mov
mov
xchg
sub
lret
mov
xlat
cmp
mov
repz
or
pause
aaa
lea
xlat
cmpsb
fistpl
sbb
outsb
cmc
divb
inc
mov
es
inc
leave
pop
xchg
adc
lods
jle
cmp
test
xor
loope
dec
cli
std
fnstenv
xlat
push
mov
lret
imul
mov
aad
push
jns
mov
stc
stos
xchg
in
xor
filds
xchg
or
cmpl
stos
mov
pop
fld
fwait
jecxz
stc
jmp
shrl
lea
fwait
insl
adc
fisttpll
leave
test
lret
loop
or
jae
fnsave
mov
mov
mov
pop
mov
pop
cwtl
or
sub
outsb
outsb
mov
mov
inc
cmpsl
xchg
xchg
aas
adc
mov
or
and
inc
insb
inc
add
test
jno
lcall
xchg
add
xchg
or
sbb
mov
in
or
adc
push
clc
jg
sub
mov
mov
jecxz
outsb
cli
inc
add
sub
xchg
pop
ja
aas
mov
inc
jecxz
std
test
mov
out
cmp
sbb
jne
jnp
ja
xchg
push
mov
jno
and
cld
outsl
xor
push
stos
js
mov
sub
pop
mov
add
sar
cld
mov
push
bound
mov
cmc
enter
mov
shll
fcomip
pop
push
cmp
fidivl
mov
adc
lods
xchg
xchg
in
lcall
stos
jmp
fstps
pop
aam
mov
ss
jmp
push
pop
jnp
and
add
xchg
jle
sbb
jne
divl
lret
or
mov
lock
push
xchg
push
shll
xor
fnstsw
movsb
je
push
stos
test
movsl
sub
jg
mov
icebp
lahf
push
add
xchg
fldt
ret
and
mov
mov
add
dec
pop
xchg
cwtl
jmp
xchg
mov
pop
pop
push
mov
sbb
mov
js
jae
push
add
adc
add
cmp
test
push
out
xchg
test
jb
inc
mov
sub
cwtl
jns
iret
mov
ds
insl
fmull
dec
fisttps
push
jmp
mov
inc
mov
and
or
jae
sbb
dec
mov
and
ljmp
jnp
xchg
rolb
xor
inc
out
psrlq
jmp
or
bound
sbb
out
dec
ja
push
mov
inc
leave
ds
fdivrs
insb
add
mov
or
push
fwait
fs
stos
sub
int3
repnz
inc
leave
mov
xor
out
pop
sub
cmp
nop
les
sub
and
dec
xchg
pushf
xor
sub
xor
mov
fnstenv
movb
cli
xchg
rorb
mulb
cmp
jmp
inc
cmp
xlat
sbb
adc
aad
and
pop
test
inc
mov
mov
out
cmp
jmp
pushf
fwait
subb
aaa
and
jp
and
cmc
inc
or
pop
inc
add
ret
out
les
dec
sub
dec
je
xor
clc
and
adc
cli
jmp
jbe
scas
fildll
mov
sub
out
sbb
rol
fs
shlb
mov
aas
hlt
sti
xchg
and
jecxz
outsb
sbb
inc
ret
mov
cmp
mov
mov
inc
pop
fisubrs
sbb
in
add
jle
xor
xlat
jecxz
mov
mov
jge
push
and
cld
stos
sbb
mov
stos
ffreep
pop
and
int3
addr16
mov
adcb
daa
int
bound
cmp
pop
sub
testl
mov
mov
xchg
adc
inc
roll
mov
stc
or
dec
test
imul
adc
or
jnp
jbe
adc
in
jbe
adc
pop
mov
div
dec
mov
push
sbb
mov
xor
and
or
movsb
sub
cmp
sbb
and
dec
adc
orb
lret
jo
jl
pop
xor
lret
inc
push
and
int3
xlat
pop
jge
dec
mov
fucom
cmp
cmp
stos
imulb
fucomip
fstps
lahf
mov
pushf
or
inc
jae
mov
push
movsl
jp
enter
dec
aad
xchg
imul
jo
nop
andb
popa
push
xchg
js
movsb
pop
mov
sbbb
sub
fmulp
sbb
push
insl
jnp
jp
mov
lret
cmc
jb
mov
dec
jne
shl
add
inc
mov
fwait
ja
in
ljmp
negl
aaa
sub
mov
mov
scas
pushf
lock
sub
addr16
jmp
fwait
pushf
cmp
xchg
sahf
lahf
cmp
cmp
mov
mov
lock
pop
sub
cmpsb
pop
xor
xor
lods
es
push
push
cmp
xor
xchg
ret
es
inc
call
pop
sbb
or
push
dec
pop
inc
nop
mov
xchg
rorl
stos
loope
push
mov
outsl
xor
call
pop
and
jne
in
or
push
insb
icebp
je
dec
xchg
jp
or
jge
inc
add
sub
hlt
pop
pop
aam
mov
cmp
mov
hlt
outsl
fdivs
test
sbb
lret
mov
mov
movsb
mov
shr
in
xchg
inc
shrl
dec
sarb
add
xchg
fsubrl
icebp
add
and
fs
enter
and
in
loopne
cmp
idivl
fwait
mov
cmp
xor
push
inc
lcall
cmp
fiaddl
hlt
mov
jmp
pop
pop
icebp
lods
lahf
mov
call
cmpsl
out
lods
insl
cmp
jnp
fidivl
lock
shlb
movsl
enter
inc
adc
mov
and
sbb
ds
out
inc
cmp
rcl
or
mov
jno
pushf
rcll
add
out
mov
dec
mov
enter
or
inc
push
test
and
push
add
dec
mov
adcb
jbe
out
push
or
dec
or
out
and
pop
add
rorl
pop
mov
adc
jmp
test
and
pop
xchg
cmc
aaa
int
adc
adc
push
loope
push
daa
adc
mov
cmp
xchg
out
jne
notb
je
jbe
enter
cli
test
outsb
mov
jp
out
add
xchg
aaa
push
xchg
insl
adc
rcrb
inc
fwait
hlt
daa
mov
popl
mov
mov
loop
push
and
repz
inc
pushf
movsl
adc
jmp
ljmp
inc
dec
adcb
adc
loope
fcomps
es
mov
into
push
mov
inc
bound
jne
movsl
rorb
hlt
jecxz
stc
mov
ret
jne
xor
sbb
jl
pusha
fwait
add
stc
pop
ret
stc
inc
in
mov
xchg
mov
leave
jne
fnstenv
pop
clc
lods
fwait
sbb
push
push
add
jno
push
push
out
pusha
dec
push
aaa
xor
js
xchg
aad
rclb
jle
sbb
sub
adc
jne
loopne
jno
out
or
jnp
negb
push
and
mov
push
sub
xor
mov
shl
add
jle
jmp
sti
sbb
xchg
cltd
and
mov
out
js
jnp
xchg
mov
leave
pop
xor
lock
sbb
out
fld
sahf
cmc
mov
dec
push
addl
sub
inc
nop
cmc
jnp
lds
dec
push
js
pop
lods
jno
mov
jge
mov
and
out
add
inc
xchg
mov
aaa
adc
test
insl
add
sarl
inc
leave
test
mov
cmc
gs
pop
cmp
push
dec
das
push
dec
push
push
xor
nop
pop
xor
sub
cltd
sub
mov
xor
mov
mov
pop
stos
adc
jmp
mov
pushw
xchg
sbbl
add
jne
add
xchg
jp
rorb
insb
mov
push
fwait
inc
or
sub
scas
ja
mov
mov
cmpsb
pop
dec
mov
fisubrs
jne
push
and
aaa
sbb
xor
cmp
dec
mov
jne
add
out
add
adc
cmp
dec
mov
dec
jl
lcall
mov
int
sahf
push
xor
mov
dec
call
pop
movsb
push
and
push
cmp
mov
and
out
clc
jge
stc
jae
sub
mov
ja
xchg
add
mov
hlt
pop
sub
ret
lahf
inc
or
scas
test
mov
out
aad
hlt
subb
push
enter
mov
cs
pop
bound
mov
dec
fwait
movb
ret
repnz
lds
xor
fimull
shr
lret
sub
je
dec
fbld
or
dec
add
fistps
push
xor
cwtl
mov
clc
adcl
arpl
pop
into
movsl
push
imul
sub
mov
fisttps
rol
test
je
lods
xchg
notb
leave
ret
icebp
cmc
pop
inc
mov
inc
addr16
stos
jns
cmp
pushw
bound
jb
push
lcall
shrl
or
push
adc
enter
imul
ss
dec
rcl
xorl
cmp
loop
pop
jge
mov
out
dec
or
pop
test
pop
mov
sub
imul
sub
and
fwait
mov
jge
and
lea
outsl
jnp
jnp
nop
mov
insb
mov
or
mov
es
ficoml
bound
push
cwtl
mov
jmp
in
pop
push
pop
test
lock
jnp
outsb
mov
jae
lods
ret
and
shrb
mov
sbb
test
shrl
inc
loopne
arpl
pop
outsl
fwait
adcl
insl
and
frstor
ljmp
add
repnz
data16
add
pop
in
fimull
xchg
adc
prefetchnta
sbb
sti
repz
and
cmpsl
lock
add
jbe
fsincos
test
dec
das
test
fcmovnb
mov
xor
sarl
in
add
sarl
dec
aaa
sbb
cli
cmp
aaa
mov
test
cmp
test
push
jg
lret
and
testl
cmp
or
repnz
dec
lret
cli
xor
add
cmc
fidivrs
mov
mov
sbb
es
inc
pushw
lret
lods
pop
sub
inc
ja
in
int3
add
sub
push
loope
dec
or
xchg
cmc
loope
out
out
adc
push
jb
je
fcomi
or
mov
inc
jno
lods
pop
repnz
ret
sbb
xlat
icebp
pop
fs
dec
pop
inc
fidivrs
data16
add
cli
jne
xchg
add
jg
mov
imul
out
sbb
xor
xor
adc
mov
xor
test
xor
cmp
dec
or
std
lds
cwtl
std
adc
fistpll
sbb
or
sub
push
sbb
push
pop
xlat
pop
fstp
cmp
lahf
push
daa
adc
out
jp
outsl
fisttps
xchg
cltd
xchg
mov
pop
xor
dec
imul
outsl
pop
lea
mov
add
sub
mov
push
xchg
dec
rorb
cmp
lret
rclb
add
data16
push
pop
xchg
cli
mov
ret
dec
add
shl
gs
xor
inc
adc
add
pop
cmc
dec
add
inc
lcall
std
ret
xor
lret
imulb
stos
mov
roll
lret
and
jnp
mov
push
xchg
fisttpll
pop
push
sbb
hlt
push
sub
out
loopne
pop
jle
in
or
jecxz
jmp
leave
sbb
mov
xchg
xor
and
cli
cmc
sahf
mov
mov
or
and
fwait
cmc
push
dec
or
mov
repnz
adc
or
test
out
jle
push
fimull
pushf
iret
mov
mov
imul
lea
aas
cmc
mov
into
outsl
shl
or
lret
repnz
push
fdiv
lods
arpl
inc
xor
test
xor
mov
cmpsl
fidivrs
mov
pop
loopne
in
out
mov
add
adc
mov
pop
jl
lock
insb
jbe
sbb
je
mov
add
inc
nop
pop
pop
xchg
ljmp
mov
aaa
adc
aam
jbe
in
adc
inc
jns
push
sbb
push
scas
mov
cmp
scas
or
xchg
push
out
out
inc
sub
ret
push
pop
sub
cwtl
aam
cmpsb
gs
add
push
jo
pop
fcoms
jno
sub
mov
gs
push
pushf
mov
cmpsl
dec
xor
in
xor
jge
lret
subl
xor
repnz
enter
cmp
mov
ficomps
dec
push
push
dec
lock
popa
dec
outsb
and
pop
sbb
bound
hlt
clc
inc
aad
pop
shll
xor
inc
xchg
cmp
sub
xchg
pop
jg
mov
pop
or
fadds
loop
jb
push
jmp
inc
pop
ja
push
mov
mul
jmp
scas
fsubrl
jge,pt
jns
pop
mov
std
sbb
mov
stos
push
negb
or
add
adc
fwait
insl
pop
sub
insb
ja
arpl
in
or
adc
sbb
inc
dec
jno
push
push
int
mov
scas
or
push
nop
outsb
cmpsl
xor
pop
jle
movsb
outsb
imul
xchg
lods
das
cmp
mov
cmc
adc
pushl
or
pushl
sbb
and
sub
lods
xchg
fsts
jne
scas
sub
imul
gs
fwait
insl
xchg
punpckldq
xchg
outsb
xchg
aam
add
mov
and
lds
shll
push
nop
cmp
test
sub
jecxz
sbb
xchg
iret
je
pop
das
leave
push
icebp
rclb
flds
xlat
dec
decl
stos
dec
jae
out
pop
cmp
mov
rcll
movsl
daa
loopne
push
push
xchg
mov
push
test
icebp
dec
xchg
enter
and
adc
out
sbb
push
pop
xchg
sub
push
stos
add
push
in
cli
pop
and
shll
pop
gs
jp
cmpsb
xchg
ljmp
cmp
jg
iret
mov
or
bound
sbb
mov
ss
mov
daa
pop
lods
mov
shl
mov
jmp
jo
pop
lcall
cmc
xor
lock
test
cmp
stos
lea
out
or
add
pop
out
jg
pop
jg
or
push
ss
daa
pop
std
fwait
pusha
ja
push
jge
mov
xchg
adc
into
or
xor
icebp
call
push
aad
aam
adc
andb
and
sub
sub
add
add
jge
xor
mov
sti
pop
loop
pop
push
scas
fldl
outsl
mov
or
fsub
insb
lret
cmp
xor
pushf
xor
xor
das
push
enter
das
xlat
daa
dec
mov
pop
dec
push
pusha
movsb
movsb
fsub
push
and
lds
dec
dec
loop
fdivs
mov
lret
or
hlt
jmp
mov
arpl
outsb
inc
hlt
adc
push
mov
arpl
inc
jp
sub
int
xor
sbb
jecxz
shr
jle
shlb
xorb
mov
cmp
or
cmp
dec
xor
or
fsts
sub
pop
hlt
mov
orb
push
cld
lahf
imul
and
mov
jbe
xor
push
pushf
add
lcall
jmp
mov
add
fisttpll
dec
lock
and
loope
test
mov
push
mov
mov
roll
xlat
mov
insb
pop
adc
lods
lret
flds
shrb
lret
scas
adc
jecxz
sti
cmp
fildll
aas
cmp
in
insb
xchg
ret
rep
mov
and
pop
push
cmpl
xchg
add
push
les
mov
pop
and
and
loope
jbe
mov
iret
sub
aam
inc
pop
adc
fiadds
mov
enter
fstpl
sbb
sti
xor
popf
and
jae
sbb
mov
es
bnd
leave
mov
aas
cmc
mov
shl
sbb
clc
mov
stc
or
lcall
xchg
in
popa
sub
or
jp
cmp
add
ficoms
cmpb
mov
lahf
and
arpl
fcmovbe
inc
and
and
imul
mov
mov
adc
fcomip
sub
jg
dec
sub
mov
rclb
mov
push
test
cmp
push
xlat
in
test
dec
xor
aaa
inc
test
mov
sub
cmp
push
dec
sub
jnp
and
mov
dec
mov
or
repz
cwtl
mov
inc
push
xor
xchg
push
popa
push
pop
cmp
dec
push
mov
andb
and
popf
into
fnstsw
out
aad
aam
push
insl
pop
inc
ljmp
sub
push
sub
jmp
or
loope
divl
add
or
int3
mov
cmpsl
inc
jne
or
adc
mov
int
in
insl
shrl
mov
movsb
fs
lret
ljmp
sti
filds
fcmovne
lcall
ret
pusha
std
adc
mov
dec
push
mov
xor
repz
movsb
in
pop
cmpsl
jle
sbb
xor
ret
push
adc
lds
and
jge
dec
je
jge
loope
adc
movsl
xor
inc
dec
sub
inc
inc
imull
adc
ds
stos
jae
jp
and
adc
xchg
mov
pop
and
test
dec
iret
cmp
push
gs
add
insb
testl
cmp
clc
insb
cs
push
adc
enter
mov
les
out
jnp
push
mov
mov
movsb
aad
push
and
cs
jl
aad
addb
loopne
mov
inc
dec
dec
fisttpll
xor
mov
adc
inc
and
je
clc
xchg
adc
cmc
jg
adc
push
mov
mov
shl
shrl
fldcw
dec
lds
insb
push
dec
sbb
mov
inc
xor
mov
adc
ja
out
ret
adc
inc
xchg
test
movsl
out
mov
lahf
cmpsb
clc
xchg
negl
jp
fwait
insl
jp
aam
inc
movb
hlt
test
out
xchg
lretw
ds
adc
sar
mov
jecxz
mov
or
fdivrl
xor
push
ret
lahf
or
test
and
mov
mov
cmp
sbb
adc
push
pusha
dec
or
addps
sub
pusha
or
test
xor
lock
popa
and
dec
ret
jbe
dec
xchg
jg
dec
xchg
or
add
adc
add
inc
jne
stc
ret
jns
or
pop
pop
fldcw
xor
sbb
xchg
lahf
fucom
mov
fmulp
insb
xor
mov
cld
inc
jg
dec
arpl
js
in
ret
push
insl
in
sahf
sbb
xor
jb
mov
mov
sbb
repz
push
pop
push
push
dec
and
cld
bound
lods
lcall
lea
out
repnz
aam
sub
test
popa
pop
bound
jo
push
xor
cmp
lret
push
mov
ljmp
hlt
das
jnp
or
xchg
sbb
ret
pop
ljmp
out
and
ljmp
pusha
aad
stos
push
mov
shrb
jecxz
mov
add
push
shrb
es
push
shll
or
and
shlb
out
xlat
repz
push
pop
out
stos
ljmp
icebp
jmp
or
and
ret
pop
cmp
enter
pop
nop
je
insb
cmp
shlb
push
lahf
std
add
sbb
imulb
aam
cltd
addb
in
into
add
adcl
sbb
cld
cli
push
movsb
mov
or
xor
jns
add
into
or
dec
xlat
rorl
xchg
aam
jne
lahf
leave
xchg
das
insb
cmp
daa
hlt
in
ret
aad
xchg
mov
mov
mov
fists
mov
sub
in
pop
test
jnp
mov
mov
adc
pop
jp
pusha
add
lock
push
pop
push
or
pop
movsb
mov
and
das
es
les
loope
push
aam
js
add
push
scas
insl
shlb
xor
inc
mov
mov
cmp
dec
pushl
leave
jbe
pop
ds
fldt
data16
cli
lods
ds
fildll
mul
jnp
bound
jecxz
int3
dec
pop
imul
inc
sti
add
mov
dec
insb
jnp
mov
call
pop
int
insb
jg
mov
lock
mov
cmp
scas
pop
cltd
lds
arpl
dec
rol
repnz
mov
add
out
mov
mov
xor
sub
pop
pop
fisttpll
xor
jecxz
mov
push
js
lds
xor
dec
push
dec
sbb
pop
mov
adc
ret
pop
mov
filds
in
out
inc
push
ss
mov
fildl
lret
pop
outsl
jge
mov
jp
aam
push
lock
sbb
jmp
lods
jg
sbb
xchg
adc
aas
adc
iret
mov
nop
shlb
sbb
push
dec
jl
fstps
ljmp
mov
mov
mov
sbb
aam
add
ljmp
and
push
jae
or
or
cwtl
jnp
hlt
xor
lock
jecxz
mov
add
lret
mov
repnz
xchg
cmpsl
add
rcrl
ror
stos
or
repnz
and
pop
adc
cli
jnp
mov
icebp
arpl
mov
insb
insb
ret
mov
fidivrs
adcb
enter
jecxz
push
sub
add
mov
xchg
fdivl
dec
or
mov
jno
jmp
mov
mov
cli
push
pop
and
cli
xchg
ljmp
outsb
mov
jns
lock
and
xchg
paddq
add
loopne
cmpl
mov
repnz
xchg
xor
pop
sti
insl
or
daa
inc
test
cmp
and
dec
sub
into
cmpsb
xlat
inc
leave
add
adc
orb
stc
mov
fcmove
dec
daa
or
mov
insl
mov
mov
insl
cmp
test
minps
mov
outsb
cmp
mov
repz
bound
sbb
sti
inc
std
daa
cmc
in
cmp
ret
lods
out
or
mov
adc
add
insl
movsb
mov
outsl
mov
pop
popf
jl
mov
and
push
pop
mov
cmpsb
daa
jne
mov
add
out
test
dec
decl
dec
xchg
pop
pop
xchg
popa
sti
insl
hlt
mov
sbb
imul
sbb
mov
push
popa
xor
inc
cmp
jmp
out
movsl
mov
call
pop
lret
xchg
xor
ss
pop
es
rorb
les
sahf
cs
jne
push
mov
popa
fstpt
sbb
imul
lahf
jns
and
out
shll
ja
jns
mov
dec
or
das
je
ja
xor
lret
dec
loope
inc
scas
xchg
adcb
popa
mov
es
push
push
or
mov
sbb
jbe
or
mov
fnsave
cmp
js
add
jno
push
jg
les
lret
scas
outsb
scas
inc
mov
inc
loop
mov
inc
ljmp
add
loopne,pn
lea
adc
dec
pop
sbbb
test
or
mov
les
popa
js
ret
icebp
insl
cmp
mov
pop
mov
push
and
cwtl
xor
ret
sub
lods
push
mov
jecxz
in
sti
test
icebp
xchg
sub
cmp
or
mov
xchg
in
fs
test
cmp
push
andb
rolb
rcrb
and
ret
insl
xor
dec
addl
or
sbb
sahf
push
lahf
daa
xchg
mov
das
imul
lcall
xchg
in
sbb
pop
and
dec
pusha
sbb
hlt
cmp
nop
cmp
mov
pop
out
popf
nop
pop
ja
mov
xchg
or
comiss
push
cmpsb
cmp
cmp
dec
inc
sub
cmpsb
mov
pop
mov
dec
pop
test
es
stc
jge
mov
lds
sbb
mov
ja
cmp
add
and
loop
roll
xor
jnp
roll
hlt
jecxz
lock
jno
mov
xor
mov
daa
movsl
por
mov
jne
inc
and
adc
out
bound
lea
sbb
add
rorl
std
mov
sub
call
ja
cmp
xchg
add
mov
fdivrp
movsb
int
repz
ret
test
cmc
push
enter
add
push
pop
test
shr
adc
xchg
gs
mov
mov
mov
jae
mov
movsb
jp
push
fstpt
sub
lock
mov
jp
cmp
push
sahf
lahf
pop
cmpsb
pop
or
mov
mov
cmp
aam
in
jno
sub
fcmove
cmp
lret
repz
pop
push
adc
aam
pop
xchg
add
or
in
scas
push
nop
imul
and
dec
mov
test
jge
inc
mov
xor
jbe
inc
inc
fistl
pusha
outsb
push
imulb
lods
stos
xchg
shlb
fwait
mov
xor
enter
iret
xchg
out
jg
push
mov
pop
mov
mov
pusha
leave
push
loopne
pop
rolb
pop
push
hlt
orl
js
mov
mov
add
mov
add
sub
aad
jo
pop
notl
xchg
idivb
daa
jnp
mov
sub
dec
add
xor
aas
mov
addr16
lods
rcrl
mov
fcomp
cltd
mov
test
les
cs
ss
stos
cmpsl
orb
mov
ret
cltd
repnz
cs
sbb
test
cmp
add
jbe
sub
xchg
fidivrl
js
std
je
xchg
and
cmp
inc
mov
sarb
out
iret
push
and
jle
mov
sbb
jmp
ret
jbe
bound
inc
out
jmp
ds
sbb
pop
std
inc
enter
fsub
dec
add
jecxz
ds
aas
mov
mov
jb
mov
movsl
dec
and
out
xorb
cmp
mov
mov
mov
movsb
jbe
jne
into
cmc
loope
iret
cmpl
push
mov
into
dec
es
adc
add
pop
cmp
cmp
out
int3
rcrb
xor
out
mov
sub
int
pop
sahf
lods
data16
jge
xor
cmpsl
jno
test
repz
xchg
sub
cmp
xchg
cmp
sub
rorl
mov
xchg
push
leave
mov
pop
aaa
add
fs
dec
adcb
mov
jp
xchg
cmp
jle
add
sar
pop
mov
int
sub
test
movsb
add
xor
xchg
cmp
stos
int3
mov
out
mov
std
setle
jle
inc
movsb
jecxz
inc
call
sub
pop
dec
filds
xchg
flds
cmc
ficoms
push
iret
aad
jae
pop
imul
ds
and
inc
pushf
xor
mov
pop
and
cltd
call
notl
loope
pop
inc
xchg
inc
mov
nop
or
outsb
push
jle
or
hlt
dec
mov
std
subl
lods
push
mov
or
push
add
jmp
mov
insb
push
test
ret
or
pop
scas
pop
lods
cmpl
sbb
outsl
frstor
int
insl
or
and
into
add
dec
add
xchg
out
jnp
fwait
daa
fcoms
mov
insb
es
jno
je
mov
cmp
pop
dec
lret
jg
stos
cld
push
insl
sub
mov
je
ret
icebp
pop
std
or
lods
inc
fcompl
jmp
fildll
cwtl
add
xchg
rclb
dec
imul
adc
call
pop
add
pop
enter
add
push
xchg
dec
rcrl
and
aaa
sbb
push
mov
dec
push
and
mov
les
mov
dec
lods
arpl
cmp
mov
mov
mov
call
inc
mov
jge
xchg
fdiv
rorb
notl
inc
inc
icebp
arpl
and
jl
cmp
or
insb
outsb
sub
leave
push
push
mov
por
pop
xchg
inc
xor
inc
jmp
add
xorl
test
stc
lds
lds
add
inc
inc
shl
mov
pop
sbb
imul
mov
pop
jle
jmp
dec
stos
aaa
sbb
xorl
rcl
jge
mov
imul
inc
mov
jnp
sub
mov
notb
mov
jg
ljmp
mov
push
lea
ret
jae
loop
iret
inc
push
push
mov
lea
stos
xchg
mov
inc
sub
dec
sahf
imull
sbb
xor
pop
ljmp
dec
cmp
add
jmp
cmpsb
and
jnp
xor
sbb
xor
jp
adcl
out
aaa
xor
jl
push
call
imul
hlt
mov
loop
cs
lds
jno
movl
loop
enter
jl
xchg
sub
and
pop
jno
xchg
xor
fildll
dec
or
bound
and
jp
bound
hlt
jbe
cmpl
dec
xchg
add
mov
dec
dec
cmp
jbe
push
je
jb
jge
dec
loope
int3
inc
mov
stos
inc
inc
push
pop
and
mov
repz
jl
or
ja
repz
add
push
into
das
stc
cs
cmc
push
mov
sub
fidivrl
pop
mov
mov
fimuls
outsb
add
push
rcrl
hlt
jp
mov
addb
add
jmp
xchg
push
jne
movsb
mov
push
into
popa
insl
hlt
jb
mov
jnp
pop
and
lahf
sub
push
out
inc
and
mov
loop
shrl
out
dec
out
int
rcll
add
or
pop
inc
repz
fdivl
shll
and
ss
jmp
stos
dec
jp
or
sub
mov
shll
cld
cli
mov
and
loope
ds
ret
rolb
int
jno
mov
addl
xor
cmp
dec
jno
test
daa
test
bound
repz
push
and
lret
jge
lcall
pop
pop
xchg
xor
ret
sbb
sub
push
mov
jno
jp
aad
ror
popa
imul
jo,pt
pop
xchg
adc
jge
fwait
lds
adc
jnp
ret
mov
sbb
cmpsb
frstpm(287
and
dec
push
pop
sbb
and
adc
in
cmpb
sbb
sbb
orl
rcll
add
lret
jb
sbb
sbb
adc
mov
xor
ret
jbe
and
jae
pop
xchg
fld
out
daa
jne
sbb
hlt
cmp
cli
push
xor
fwait
add
xor
insl
pusha
test
lea
fldenv
inc
adc
push
int3
cmp
inc
insb
dec
lret
cwtl
push
sbbb
mov
adc
adc
mov
mov
or
daa
aas
mov
inc
movsl
cli
dec
push
mull
hlt
aaa
or
stc
mov
mov
imul
out
jge
mov
aas
pop
sub
les
out
adc
inc
xor
add
daa
jbe
nop
sbb
or
jle
sarl
xor
pop
sub
out
or
xor
or
cmp
inc
out
mov
jecxz
xor
sbb
lret
out
push
cmp
pop
dec
nop
xorl
leave
bound
jge
cwtl
pop
idivb
mov
sarl
cmp
inc
test
and
ficomps
sbb
aad
xor
xor
push
call
mov
sbb
or
insl
push
mov
int3
pop
cli
ds
push
push
sub
scas
fisttps
negl
mov
adc
je
xorb
inc
sbb
out
push
pop
popa
into
push
jnp
pop
arpl
packuswb
shlb
jge
pop
adc
mov
or
inc
add
pop
push
aad
dec
stos
add
or
ss
scas
loopne
push
xor
adc
jns
add
rol
test
mov
adc
pop
jns
mov
pop
inc
jbe
decl
dec
jge
cmp
push
add
mov
mov
repnz
dec
mov
adc
mov
lcall
int
inc
pop
inc
out
jecxz
xor
or
lea
scas
cmpsl
iret
dec
repnz
mov
clc
jne
pop
sub
in
mov
jns
inc
or
ffree
pop
rorl
loop
aam
dec
cli
cvtps2pd
adc
imul
add
data16
pop
nop
pop
or
add
jecxz
fists
mov
ljmp
das
jl
jae
or
pop
ds
push
push
xor
test
xchg
hlt
mov
or
mov
jl
movsb
out
scas
js
or
mov
mov
add
dec
xor
das
push
fwait
mov
hlt
testl
imul
pushf
lods
mov
std
imul
loopne
data16
jp
mov
imul
movsb
xchg
cmpsb
in
shl
sbb
mov
mov
dec
pop
aaa
movsb
mov
dec
add
ficoms
data16
adc
test
aam
fcomip
cmp
popf
into
psubsw
stos
sahf
sbb
std
mov
jae
fimull
inc
push
mov
insl
adc
mov
in
dec
or
xor
xor
push
imul
out
dec
insl
xchg
inc
iret
mov
iret
jbe
mov
and
fisubrs
mov
mov
mov
or
mov
xor
mov
enter
jnp
mov
inc
ds
fiadds
mov
fiaddl
pusha
push
add
addb
push
fisubs
andb
iret
sar
fwait
into
dec
jae
jl
daa
in
ljmp
fnclex
arpl
inc
icebp
add
dec
mov
or
inc
pop
outsb
sbb
inc
shrb
mov
popa
stos
mov
xor
cmpl
inc
bound
jnp
inc
or
xchg
nop
push
cwtl
sub
rclb
sbb
insb
nop
and
jno
imul
stos
xorb
adc
cmp
test
mov
cmp
aad
andb
mov
shl
mov
push
or
mov
xchg
xchg
cmp
outsl
cmp
mov
adc
xor
test
out
mov
sti
std
xor
cmc
add
mov
hlt
shrb
aaa
mov
imul
loopne
fldl
ret
or
push
gs
inc
mov
fnsave
arpl
lahf
in
outsl
inc
pusha
subl
shll
lods
addr16
inc
adc
mov
loop
scas
dec
movzwl
loopne
fbld
push
scas
cli
push
das
jne
arpl
and
popa
adc
mov
add
popa
xchg
insl
mov
sub
and
xor
inc
sub
dec
mov
shlb
sbb
popa
aaa
mov
mov
and
lods
push
pop
cs
cmp
dec
aam
jl
ja
xchg
push
mov
inc
test
dec
jg
popa
pop
mov
push
mov
imul
loop
fnsave
xchg
sbb
jno
hlt
and
and
loope
cmpsl
fstps
mov
dec
or
push
loope
enter
push
repz
add
popa
xchg
push
dec
sbb
fisttps
les
push
les
fcmovnb
and
repz
inc
mov
mov
imul
and
adc
popf
mov
and
and
sbb
fwait
mov
popa
fsubs
sti
jg
aaa
or
bound
mov
mov
jns
cs
xchg
pop
jb
push
rorb
xchg
lcall
sub
push
mov
sbbl
rclb
hlt
jbe
out
push
xor
inc
call
bound
jmp
fdivr
icebp
mov
out
lods
or
in
dec
inc
je
insb
mov
and
jge
jne
sahf
mov
sbb
fsubrs
nop
int
adc
scas
mov
mov
jne
pop
sub
mov
cltd
jb
pushf
or
lea
pop
ret
sbb
addr16
and
mov
loop
xchg
jnp
mov
movsl
jg
popa
es
in
pop
out
rcl
movsl
push
xchg
xor
push
and
inc
pop
je
lcall
movsl
push
ret
add
jl
std
xor
and
stos
lock
mov
xchg
into
sub
mov
xor
mov
sar
and
mov
imul
or
lahf
mov
add
push
int3
aam
xor
cli
inc
outsb
fcom
dec
fwait
iret
leave
jmp
xor
xor
mov
shll
adc
adc
ss
sti
jg
mov
call
jmp
test
fs
outsb
mov
rcll
mov
imul
mov
or
push
push
sub
call
out
sbb
and
mov
and
rcrb
mov
inc
xchg
add
es
ds
enter
or
ss
outsl
sub
gs
cmpsl
lods
test
aaa
outsl
mov
mov
ja
dec
inc
jle
cmp
cmpsb
xor
icebp
repnz
inc
mov
sahf
sub
loopne
mov
push
movsb
bound
scas
inc
inc
insb
movsl
rcl
in
dec
fsubrl
mov
pop
stos
in
int3
or
jmp
or
inc
movsb
cmp
fcoms
adc
and
sbb
lods
out
ljmp
or
jnp
inc
xchg
adc
dec
iret
shl
add
inc
or
sti
lret
xchg
pusha
xor
dec
push
bound
jle
and
cmp
jle
jns
imul
ficompl
inc
clc
shr
pop
inc
cs
mov
testb
cmp
sbb
das
add
adc
nop
add
ds
mov
clc
addr16
addl
and
stos
gs
xor
jbe
ljmp
sub
cmp
fildll
sti
xchg
ss
pusha
cmp
test
jecxz
and
pop
stos
jno
sbb
sbb
clc
ffreep
mov
inc
push
add
sbb
mov
fisttps
jle
inc
mov
inc
or
pop
or
bound
push
out
movsl
lcall
fwait
pop
fmul
stos
aam
icebp
dec
mov
sub
xchg
vsqrtpd
call
lods
cli
dec
leave
push
inc
xchg
dec
fwait
negl
mov
mov
inc
push
pop
hlt
jno
mov
fmulp
cmp
jbe
push
xchg
arpl
sub
push
xchg
int3
cli
mov
lock
popf
orl
mov
test
cmpsb
mov
dec
dec
iret
sub
add
les
mov
cmp
arpl
ja
fnstcw
xchg
mov
and
loopne
jl
loope
clc
fisubrl
test
mov
push
and
cmp
mov
jmp
clc
pop
lret
sub
sub
loop
cmc
movsb
out
xor
inc
nop
pop
mov
call
icebp
mov
mov
cld
dec
rorl
out
fsubr
lods
xor
or
lcall
xor
in
cli
jle
mov
loop
int
pop
andl
stc
ror
test
pop
cmc
jne
movl
mov
sbb
call
mov
leave
jno
lock
and
cmc
out
push
pop
cmpl
outsb
push
mov
into
xor
jmp
enter
mov
mov
loop
lahf
sahf
lods
lock
sbb
gs
mov
jns
cli
dec
sarl
cmp
lret
arpl
inc
cli
push
add
jmp
jo
xor
int3
pop
loope
jno
pop
icebp
xchg
addps
push
inc
xchg
arpl
pop
fwait
pop
xor
sbb
movsb
ja
mov
cmpsb
cltd
xchg
test
arpl
movsb
and
cmpsb
inc
fldt
push
nop
mov
fcoms
outsl
call
fcoml
sub
fsub
gs
cmp
xchg
into
imul
mov
loop
xlat
outsl
aaa
repz
frstor
inc
and
xchg
sbb
sbb
mov
dec
mov
stos
outsb
cltd
imul
xor
push
sbb
and
sbb
mov
adc
adc
pop
or
sahf
inc
in
sub
ret
inc
loop
mov
jne
and
divl
idivb
arpl
clc
and
mov
dec
cmp
mov
xor
in
cmp
jge
pop
dec
imul
dec
or
pop
pop
pop
call
mov
jo
stos
popa
das
outsb
push
popa
pop
or
xchg
adcb
daa
leave
je
add
sbb
cmp
mov
sub
sub
aas
mov
sbb
jo
shrl
loop
in
imul
rcrb
mov
push
xchg
leave
pop
jmp
mov
mov
inc
pop
shll
or
push
push
jnp
mov
mov
jge
int3
dec
fcoms
xor
mov
clc
pop
inc
sbb
into
adc
in
or
lods
dec
jb
mov
mov
push
xor
or
cmp
pop
adc
xchg
lahf
clc
faddl
filds
push
fucomi
pop
lock
js
push
cmc
loopne
test
ficompl
mov
pop
leave
sarl
movb
gs
mov
inc
lock
mov
test
mov
and
sub
xor
in
mov
test
mov
bnd
mov
dec
dec
push
outsb
sbb
in
stos
and
cmp
stc
xor
fidivrs
imulb
out
int3
pushl
xchg
xchg
fistps
cmp
push
push
test
fsubrs
sti
fwait
int3
cmp
in
outsb
cmp
cmp
and
and
lret
or
sahf
cmp
into
daa
sbb
aaa
cmp
pop
pop
inc
leave
dec
sbb
call
lea
mov
rol
imul
mov
divl
loop
cmp
add
sub
and
push
rcl
cli
jge
test
in
push
cmpsl
mov
lcall
mov
shll
out
inc
ss
xor
aam
mov
mov
sub
pop
je
fldcw
lea
push
adc
or
pop
iret
cmpsl
pop
mov
and
lcall
gs
jns
lock
mov
jl
fisubrs
fistpll
std
push
daa
adc
jne
sti
cld
fcomip
cmp
adcl
xchg
add
jl
sub
ficoms
nop
xchg
push
mov
xor
and
jbe
add
in
imul
das
inc
dec
loopne
adc
loope
mov
lahf
idivb
mov
cmp
orl
movsl
mov
jb
jmp
out
fildl
test
sahf
das
sub
and
outsl
xlat
cmp
jae
adc
or
je
in
into
ljmp
inc
aam
xor
jecxz
loop
sbb
jge
adc
lret
mov
imul
jmp
xor
cld
xor
xor
test
push
mov
mov
out
les
jmp
push
add
test
and
mov
jnp
or
in
dec
push
addr16
cmpl
dec
push
xchg
inc
mov
mov
adc
dec
xchg
adc
stos
mov
jnp
call
punpcklbw
pop
mov
test
mov
popa
ja
jg
xchg
mov
push
inc
in
mov
sahf
leave
fsubs
cli
sbb
push
test
push
sar
ds
fiaddl
inc
repz
fmuls
outsb
push
daa
insl
cs
add
insl
add
adc
sub
xchg
dec
jg
jns
in
movsb
jae
pop
fimuls
push
dec
dec
pusha
jns
and
xchg
sub
cmp
int3
pop
push
out
hlt
inc
jg
cmp
and
in
rcl
mov
movsb
stc
sbb
or
sub
mov
inc
mov
js
loopne
fsubl
jmp
out
jae
jge
in
loop
adc
push
pop
rorw
add
and
push
or
fs
add
mov
push
inc
daa
sub
push
add
popl
inc
popa
cmp
jecxz
jle
mov
sbb
lds
arpl
mov
mov
pushf
faddl
sub
push
mov
out
jne
sti
lcall
inc
stc
aaa
outsb
sub
sub
push
adc
mov
xchg
dec
mov
inc
push
jb
cld
lcall
fildl
sbb
and
gs
pop
outsl
ret
pop
and
cltd
lret
adc
int3
push
jno
rcrb
inc
xchg
mov
lcall
mov
xlat
hlt
mov
sbb
lea
or
arpl
mov
cmp
mov
xor
out
jno
les
inc
xor
xchg
lret
das
out
sub
fcomip
clc
movsl
sbb
push
popa
leave
data16
in
int3
cmpsl
ret
or
push
lcall
data16
aam
and
pop
mov
test
test
lods
mov
int3
push
sahf
pop
lcall
faddl
xor
add
insb
lods
mov
inc
clts
pushf
sub
mov
fwait
out
jne
out
xchg
daa
inc
bound
fimuls
rorl
rcrb
push
pushf
fs
call
aad
cmpsl
xchg
nop
sub
push
push
inc
add
cmpl
scas
sahf
mov
jbe
push
pop
and
pop
push
sub
lret
insb
inc
pop
aad
lods
in
adc
push
cld
sub
mov
and
push
adc
or
adc
pushf
ja
cmp
adc
divb
into
clc
sbb
pop
jns
mov
xchg
xor
insl
aas
sbb
hlt
sti
lock
aad
inc
jnp
stos
stc
mov
pop
jno
mov
push
pop
push
stos
nop
repz
push
mov
xchg
movsb
movsl
mov
pop
pop
dec
lret
adc
movsl
mov
leave
jg
mov
out
lcall
push
rorb
aaa
adc
mov
enter
int3
aaa
shrl
add
xlat
jl
stos
fbld
jb
push
popa
ret
mov
outsl
or
pop
in
cmpsl
movsl
cs
fwait
jp
jl
psrlq
in
dec
push
ret
dec
adc
lods
mov
xchg
ret
in
into
decl
in
xchg
mov
sti
stc
jmp
cmp
int
inc
jp
add
xchg
aad
xchg
scas
ss
mov
dec
ret
sbbl
aam
outsl
js
sbb
adc
push
cmp
mov
popf
jnp
leave
adc
push
outsb
push
rclb
and
lods
mov
in
je
mov
ret
lock
ljmp
push
into
pop
or
xchg
shll
lods
add
sbbl
lock
shll
jo
ja
out
out
fdivs
and
mov
jg
ror
repnz
mov
dec
clc
cmc
push
fsubrl
cmc
push
mov
test
addr16
push
xchg
mov
aas
inc
inc
movsb
jno
jl
aas
shlb
in
xchg
and
ret
test
cmp
mov
cmc
scas
stos
and
aad
xchg
jne
int3
push
mov
iret
cs
int3
lea
shrb
lds
jbe
dec
pop
into
pop
and
in
cmp
lret
jae
mov
cltd
inc
imul
push
out
fcmovb
scas
outsb
sbbl
sbb
xor
jbe
jmp
jbe
imull
push
stos
loopne
xlat
aam
xchg
addr16
cmpsl
test
scas
into
push
cwtl
mov
mov
jb
das
xor
fs
cmpsb
dec
add
sar
ljmp
jne
xchg
lret
xchg
pop
ret
insl
gs
push
or
cwtl
mov
movsb
add
js
cwtl
xchg
gs
popa
in
mov
or
cmc
mov
fs
aad
in
xchg
mov
inc
notb
cmp
xlat
popf
sub
mov
iret
jae
popa
push
out
push
movsb
rolb
dec
int3
push
push
or
pop
or
sbb
shr
cltd
inc
stos
bound
int3
repz
scas
aad
pop
call
mov
das
xor
gs
rcll
sbb
testl
mov
bound
xchg
mov
bound
xchg
shlb
out
pop
popf
push
mov
aaa
xor
xchg
test
iret
popa
mov
xchg
shll
pop
out
pop
or
mov
dec
sub
data16
add
icebp
jmp
jne
or
stos
cmp
xor
pop
out
dec
sub
pop
cmp
and
lock
arpl
ja
stos
cmp
enter
adc
xor
and
or
imul
outsl
jns
add
ds
sbb
test
in
pop
dec
repz
in
push
or
lcall
in
lahf
pusha
ret
shrb
fidivrs
stc
xor
xchg
pop
xorl
cmp
scas
sbb
lods
sti
push
stos
in
mov
xchg
xchg
and
iret
xor
jp
sub
sbb
arpl
xchg
sub
scas
jno
xlat
adc
cli
mov
inc
add
daa
std
or
push
jnp
pop
mov
stos
mov
inc
cmc
mov
and
bound
jmp
xor
rcll
xchg
aad
pusha
aas
fdivrs
xchg
je
leave
rorl
jmp
decb
les
jg
iret
decb
outsl
mov
mov
inc
or
cs
jae
jl
push
adc
push
dec
ss
rcl
sbb
xchg
mov
dec
jo
fs
xchg
imul
xchg
lahf
sub
and
movsl
ljmp
fdivrl
mov
inc
ljmp
test
nop
and
subl
add
cmpl
sti
xchg
jne
or
mov
jle
into
push
into
imul
sbb
mov
std
addr16
push
jl
mov
ret
add
jo
and
aas
pushf
insl
inc
repz
out
out
sar
and
adc
pop
xchg
fs
pop
aam
or
repz
test
sub
aas
dec
push
adc
shl
mov
cmc
and
mov
sub
popa
push
icebp
inc
cmpl
ja
ret
sub
pop
cwtl
add
sbb
je
pop
fdivl
adc
xor
xchg
leave
jp
ss
xchg
and
das
and
fidivrs
inc
jle
js
loopne
jne
or
sub
xlat
add
mov
outsl
jnp
loopne
stc
call
lret
and
scas
push
clc
or
pop
pop
ja
mov
dec
fiadds
jg,pt
add
xchg
xor
inc
add
scas
lcall
add
and
test
movsl
shrb
sbb
adc
ss
imul
data16
mov
pusha
iret
movsb
jbe
dec
xlat
mov
push
or
cwtl
inc
enter
ret
enter
hlt
call
iret
xchg
xchg
jae
inc
pushf
shrb
xor
mov
mov
in
mov
inc
lcall
mov
rcrb
sarl
add
stos
xchg
mov
iret
mov
daa
xchg
fs
test
adc
test
inc
xchg
inc
add
mov
sbb
sbb
mov
inc
pushf
xchg
jle
sub
loop
or
data16
mov
daa
dec
jno
pop
or
mov
add
movsl
pop
xchg
shrb
sub
inc
adc
mov
imul
ja
mov
sbb
mov
int3
inc
out
add
in
test
out
mov
fistpll
ds
repnz
fcomi
mov
mov
mov
jno
pop
clc
insl
test
pop
mov
add
dec
cmpsb
cmp
lock
test
xor
or
iret
lret
aaa
push
dec
cmpsl
and
mov
movsb
cmpsb
nop
stos
dec
add
jo
lock
xchg
test
inc
mov
bound
add
sbb
lahf
inc
xor
sub
lea
push
je
mov
push
sub
ret
cmp
ss
ja
ljmp
stos
mov
leave
pop
ljmp
adc
push
loopne
pop
xor
mov
sub
dec
xchg
lea
daa
hlt
xor
push
push
stc
jae
xlat
and
mov
sbb
jl
imul
mov
bound
inc
or
xor
sub
pop
imul
jnp
aam
jmp
inc
xchg
pop
or
hlt
mov
mov
lahf
push
sub
lahf
xor
insb
icebp
push
popa
mov
mov
lods
lahf
cwtl
lret
rcrb
fwait
xchg
push
fptan
jbe
or
popf
adcl
inc
push
insb
push
sub
in
bound
dec
outsb
imul
adc
outsb
xchg
jae
inc
mov
push
loop
sbb
jbe
pop
aam
xor
decb
mov
bound
out
mov
enter
cmpsb
xlat
pop
sbb
xchg
daa
cld
mov
xor
test
insb
push
cmc
xor
jns
or
test
hlt
in
inc
lret
sbb
inc
enter
in
mov
data16
stos
fisttps
sub
add
pop
bndldx
xchg
out
aas
inc
test
pop
mov
cld
lods
jmp
sbb
jecxz
sub
pop
mov
insl
xchg
mov
lods
lock
pavgb
out
aaa
inc
adc
sub
fwait
pop
aas
andl
mov
insb
pop
shll
mov
fidivs
inc
clc
out
mov
jo
lock
mov
aam
test
bsr
aad
cltd
leave
outsl
rolb
ljmp
dec
fildll
adc
dec
ja
fnsave
vunpcklpd
add
sbb
dec
cmpsl
inc
pop
das
movsb
jno
dec
lcall
inc
inc
pop
cmp
xchg
andb
imulb
mov
stc
push
add
lods
mov
xchg
cmpsl
pop
jns
push
cwtl
sbb
mov
sub
lods
add
xor
dec
inc
imul
inc
xor
pop
jp
repz
cltd
movsb
adc
test
cmpsb
fisttps
jle
jb
push
jns
aam
cmp
rorb
cs
repnz
mov
out
dec
lret
je
stc
sbb
pop
addr16
out
lcall
outsb
dec
mov
pop
pusha
or
test
pop
adc
iret
mov
or
fdivrl
out
sub
mov
add
fisubl
mov
pop
fs
pop
sbb
and
push
inc
xorb
cmp
mul
fdivrs
xchg
test
cli
mov
bound
ja
mov
cmp
jp
pop
xchg
xor
xchg
loopne
mov
stos
mov
mov
xchg
and
insb
out
xchg
divl
or
push
inc
jb
scas
xchg
add
enter
fdivl
aam
ret
mov
cwtl
lds
mov
inc
or
and
ret
jo
cld
mov
sti
jle
or
sbb
test
call
nop
iret
movsb
dec
lods
loopne
jl
cmp
fcmovnbe
cltd
fsubl
xchg
scas
ja
and
push
jmp
mov
sbb
pop
scas
xchg
cmp
push
xchg
sbb
hlt
mov
or
xchg
hlt
pop
cmp
repnz
mov
lcall
lods
stc
jle
mov
xor
jb
jne
push
imul
insb
fdivrs
ja
xor
repz
insb
nop
icebp
inc
mov
pop
repnz
or
in
insl
scas
popa
test
fdivrs
sbb
xchg
cmpsl
stos
enter
mov
xchg
fistpl
dec
xchg
shlb
pop
lods
repz
call
aad
out
outsb
mov
jecxz
cmpsb
sbb
outsl
imul
insl
pop
notl
jo
xchg
lock
cmp
mov
or
notb
aas
ret
stos
or
fidivl
test
xor
pop
ret
mov
inc
inc
outsb
fwait
push
jo
adc
cmp
lret
mov
adc
inc
test
fwait
add
fimull
ja
bound
js
push
inc
or
ljmp
sbbb
not
push
and
lea
pop
in
repz
xchg
ds
vmovaps
xorl
xor
push
jge
mov
insl
popf
lods
outsb
or
pop
jecxz
fistl
push
test
sbb
fwait
mov
cmp
adc
fisttps
add
ret
fwait
pushf
repnz
les
nop
adc
int3
inc
roll
xor
icebp
les
sbb
or
data16
dec
popa
push
push
inc
dec
jbe
mov
daa
test
push
fsubrs
mov
lret
pop
das
adcl
add
ja
lret
pop
ljmp
test
sub
pop
add
notl
pop
pusha
insl
fs
sbb
in
mov
dec
push
cltd
add
sbb
cmp
addr16
inc
cmp
push
and
push
cmp
xor
add
test
adc
js
popa
dec
inc
int3
inc
das
aam
in
mov
jmp
fmul
fucomi
push
push
repnz
imul
sub
inc
mov
push
push
test
cmp
addr16
inc
xor
inc
push
sbb
xchg
mov
adc
mov
test
aas
pop
sahf
add
dec
adc
pop
xchg
xchg
cmc
mov
mov
push
jb
mov
adc
cmpsl
push
rcll
rol
sbb
lock
stc
jmp
ret
scas
shl
pop
sub
pop
and
inc
imul
stos
movsb
out
dec
in
mov
mov
int3
inc
xchg
das
pusha
js
xchg
mov
scas
stc
lret
notb
pop
pavgw
cwtl
adc
movsl
repnz
cmp
add
pop
les
daa
mov
push
stc
cmp
xchg
xchg
push
rclb
cmp
aaa
cmp
fsubr
rolb
mov
rcl
int
out
repz
sub
scas
fs
xchg
push
aad
hlt
aad
mov
addr16
jnp
cld
loope
loope
test
add
les
add
mov
inc
push
or
or
mov
fs
push
jg
loopne
cmpsb
inc
dec
ret
mov
or
xor
std
pop
sub
xlat
pop
push
adc
jle
lret
jl
pushf
sub
das
outsb
stc
inc
and
cmpsb
movsl
add
outsb
hlt
xor
pop
sbb
push
push
insl
inc
push
jns
scas
mov
insl
test
inc
mov
adc
cwtl
inc
bound
mov
sbbl
xor
aam
fnstsw
mov
ds
movsl
fnstsw
jb
mov
das
aas
loopne
push
jno
mov
jnp
push
out
pop
fwait
outsl
sbb
iret
add
ret
mov
mov
pop
aaa
mov
mov
and
js
cmp
xchg
std
filds
mov
and
xchg
and
fidivrl
fdivrl
inc
fdivp
lret
jle
inc
js
outsb
adc
mov
loop
imul
faddl
mov
pop
pop
dec
out
push
fwait
mov
cmp
not
sbb
cld
xlat
pop
sub
add
and
shlb
mov
adc
xchg
pop
jg
cmpsb
faddl
push
or
inc
mov
ss
shll
adc
ret
or
cmp
xorl
int3
icebp
dec
arpl
adc
pushf
mov
shrb
adc
sub
sub
pop
mov
mov
jecxz
bnd
test
mov
ja
or
mov
mov
pop
faddl
push
xchg
mov
gs
cmpsb
mov
sub
xor
inc
push
loopne
aaa
mov
adc
fs
xchg
add
mov
out
sahf
adc
sti
das
xchg
jo
rcr
mov
sub
jne
xor
xchg
pop
pop
loope
sahf
mov
add
mov
add
imul
pusha
adc
xor
int
add
int3
fwait
cld
cmp
inc
jo
xor
cmp
stos
call
xor
ror
roll
jp
outsl
push
jmp
faddl
inc
inc
pop
das
aad
xor
xor
enter
jmp
loop
mov
rcrl
aam
int
push
pop
or
in
xchg
inc
add
mov
jp
jecxz
iret
test
sub
test
jg
test
xchg
jno
je
mov
adc
lock
fcoms
xchg
mov
jo,pn
into
pusha
adc
popf
fmul
mov
xor
adc
lock
jnp
inc
cmp
or
stc
mov
and
push
xor
lds
push
fsubrp
popa
aas
pop
pushf
pop
scas
dec
adc
daa
sub
int
rcrl
out
inc
adcb
sub
cld
inc
outsl
cmp
das
insb
pop
mov
add
sub
insl
js
leave
mov
sahf
imul
in
inc
inc
push
pop
outsl
xchg
xchg
mov
dec
lods
cmp
sub
sbb
xor
into
inc
ja
lods
inc
adc
sbb
xchg
xchg
pop
addr16
daa
xor
xor
jo
or
sub
insb
ss
add
adc
xchg
xchg
repz
push
pop
out
popa
cmp
mov
push
aad
sub
push
jne,pt
jecxz
sbb
adc
inc
jae
xor
sub
fcoms
mov
xchg
pop
add
test
sbb
rorb
xchg
ror
lods
cmpsb
nop
pop
add
jbe
mov
push
pop
fildll
movsb
jge
ret
out
mov
inc
mov
test
cltd
add
mov
pusha
dec
xor
repnz
xchg
scas
jae
mov
or
adc
sub
mov
push
sub
lods
scas
stos
jbe
imul
jbe
push
imul
sbb
pcmpgtw
sbb
leave
mov
arpl
dec
ja
popa
inc
add
xchg
push
lods
ja
adc
cmp
dec
inc
rcl
jp
mov
xorb
mov
pushf
dec
sbb
jecxz
mov
fwait
pop
sbb
inc
bound
into
cltd
stos
test
sbb
pop
cmp
cmp
xor
test
cmp
cmp
lods
scas
mov
fisttps
cmp
or
push
ret
pop
ficomps
pusha
and
sub
add
mov
xor
insb
cwtl
sub
jae
je
cmc
nop
and
sbb
or
rorl
jg
cld
nop
xor
cmpsb
enter
mov
sbb
aam
pop
adc
scas
lret
mov
data16
mov
movsb
pop
push
addr16
xor
jbe
mov
std
popa
outsb
pop
dec
jae
outsb
gs
and
dec
ds
das
cs
sbb
adc
sbb
sar
sub
rcrb
xchg
jp
hlt
dec
push
add
in
xor
jl
sbb
dec
inc
or
mov
loop
ljmp
daa
mov
gs
sub
ljmp
dec
pop
mov
xchg
fs
mov
push
sbb
lock
test
cmp
push
leave
push
out
jle
cli
xor
jns
jge,pt
js
push
inc
stos
inc
pop
call
or
pop
fadd
xchg
outsb
out
inc
xor
push
xlat
icebp
xchg
sub
fwait
outsl
mov
clc
mov
or
addr16
adc
lods
mov
cmpxchg
mov
adc
fwait
add
stos
or
lea
xchg
and
jp
push
fs
lock
imul
orb
cmp
add
movsb
push
dec
dec
test
loope
adc
les
lret
pushf
push
fsubs
inc
movsb
cs
cwtl
stos
push
push
adc
test
mov
add
sbb
decb
dec
daa
cvtdq2ps
adc
push
repnz
jo
sbb
mov
push
lds
lods
xor
and
sti
push
lock
bound
mov
jne
jmp
sub
jae
push
pop
and
add
mov
jle
pop
scas
cmp
dec
and
pop
sbb
fs
rcll
xchg
aaa
adc
jle
sub
icebp
fdivl
cmp
lret
imul
mov
xchg
jne
dec
dec
lahf
xchg
mov
outsl
xchg
cmp
popa
mov
sub
les
loope
sbbl
repz
sarl
dec
push
adc
inc
dec
xlat
test
inc
sbb
scas
mov
cmpb
mov
jecxz
adc
lds
outsl
mov
dec
repz
aam
sbb
or
ret
xchg
daa
cld
pop
negb
insl
jl
xchg
sbb
inc
inc
sarb
or
clc
xlat
mov
push
adc
insl
jo
xor
push
lahf
push
lods
test
mov
scas
imul
aam
loope
pop
sbb
out
shll
push
pop
stos
out
dec
jns
mov
ret
mov
mov
mov
xor
stc
bound
in
sbb
bound
leave
fldl
cli
mov
jno
jnp
cmpsl
sbb
scas
cmp
test
cltd
in
and
gs
sbb
fld
xchg
inc
pavgw
mov
fs
loopne
lahf
xor
dec
pusha
pop
mov
dec
js
cmpsl
shlb
mov
mov
dec
sub
and
add
adc
lret
xor
xor
in
test
cli
pop
adc
pop
fstpt
lahf
ds
mov
in
loopne
pop
adc
lods
test
iret
cltd
das
pop
sbb
cmp
mov
inc
mov
ja
insb
sti
outsl
cmp
enter
xor
push
or
add
repz
pop
jb
cwtl
in
iret
mov
scas
cmpsl
lods
stos
dec
mov
add
mov
js
pop
mov
jmp
sub
dec
je
sub
cs
shrb
and
das
push
in
inc
or
fwait
xchg
fcomip
xor
sbb
sarl
popf
shrb
imul
xchg
aaa
fisubl
push
pusha
add
fistps
mov
pop
adc
adc
dec
or
bound
movsb
aaa
jae
xchg
add
cmpsl
add
jne
faddl
mov
pop
xorb
add
pop
fidivrs
sbb
iret
jmp
add
mov
aad
arpl
xchg
hlt
cmpsb
imul
jae
xor
idiv
sub
sub
aam
pop
or
sbb
nop
or
sbb
jmp
jae
fbstp
jg
xchg
fdivr
jmp
cli
sub
xlat
sub
sub
cmp
sbb
adc
ret
addl
aad
icebp
adc
das
xor
xchg
inc
or
adc
sti
cmpsl
xlat
ljmp
add
mov
in
cmp
dec
arpl
cmpsl
or
outsb
imul
xchg
ljmp
push
fimuls
xor
ret
or
cmp
cmp
jle
lret
fstpt
std
and
adc
xor
mov
enter
rol
mov
rclb
push
out
xchg
test
mov
test
jge
data16
push
les
dec
ja
push
xchg
pop
jae
les
clc
cwtl
xchg
popa
pop
adc
pusha
jmp
mov
shlb
aaa
adc
lahf
fdivrs
loop
fmull
outsl
dec
inc
ret
sahf
fcomps
aaa
cs
lahf
jo
movsb
jl
scas
outsb
loop
inc
pop
mov
aas
cmovns
iret
mov
in
add
test
mov
mov
sub
pushf
call
loopne
je
imul
ret
cmpsb
pop
ja
jb
aad
shl
pushf
dec
mov
rcr
xchg
imul
and
xchg
mov
xchg
cmp
out
push
ds
pushf
mov
ljmp
pop
aad
jmp
cwtl
stc
push
mov
aas
push
push
loopne
adc
or
js
int
inc
out
push
mov
cmp
pop
in
ret
mov
or
sbb
mov
xor
cltd
mov
call
fisubrs
sahf
xor
push
es
pop
mov
repnz
fistpl
insl
cli
jb
xor
inc
mov
dec
enter
or
fwait
aaa
loopne
dec
mul
mov
xchg
adc
popa
jge
xor
xchg
cmp
call
jno
mov
adc
xchg
mov
xchg
lock
out
jb
cs
mov
sub
bound
jecxz
xchg
adc
out
adc
push
nop
sbb
and
clc
std
xchg
addb
test
adc
sbb
mov
orl
test
mov
fnstsw
lods
mov
clc
mov
sbb
adc
cmp
mov
arpl
pop
imul
movsb
cmp
jns
push
lock
sub
cwtl
mov
rcr
jbe
jno
cmp
fmul
push
outsb
fistl
sarl
fiaddl
inc
fcmovnu
movsb
and
dec
ljmp
mov
mov
push
in
adc
out
xor
in
adc
push
daa
repnz
adc
decl
pop
lock
push
and
outsl
in
sub
hlt
jl
insl
inc
aaa
xchg
and
aam
jno
mov
mov
mov
push
idivl
fcomi
jne
ljmp
insl
inc
push
pushf
inc
jns
das
clc
add
sbb
insb
jg
inc
jb
mov
arpl
das
push
subb
mov
in
leave
fsubs
ficoms
call
outsb
jnp
shll
sahf
xchg
pop
rcrl
dec
cmpsb
xor
push
xchg
xorb
dec
inc
loopne
popf
aam
pop
push
dec
icebp
xchg
bound
cmpsl
stos
jb
aad
outsl
fnstsw
aaa
adc
adc
and
sbb
aas
bound
mov
dec
pop
aas
enter
rcl
lret
mov
test
xor
data16
or
pop
icebp
repnz
add
popf
push
sbb
cmpsb
cltd
bound
mov
cwtl
decl
pop
mov
mov
inc
pop
add
cli
push
bound
and
xor
or
xor
data16
jns
cs
scas
push
push
dec
in
add
rolb
mov
shll
jnp
or
dec
or
daa
rcr
mov
or
cmc
mov
rolb
sub
out
inc
out
jecxz
xchg
jmp
add
lcall
clc
gs
and
cmpsb
mov
jecxz
lret
push
inc
jle
loopne
shll
adc
decl
and
enter
cmp
or
aas
pop
leave
stos
fistl
mov
and
xchg
xchg
sub
sti
fcomps
xchg
cmpsl
mov
and
mov
test
pop
push
call
das
das
insb
xchg
icebp
jle
dec
mov
mov
inc
sub
cmp
or
adc
cmp
jl
push
test
in
pop
push
or
jo
pop
mov
or
adc
dec
sub
push
push
cs
loopne
mov
mov
jecxz
cmp
add
aam
fcmovnbe
sbb
testl
mov
mov
and
shl
and
or
rolb
movsl
pop
jo
loop,pn
stos
sbb
out
mov
stc
fildl
add
adcl
clc
es
xchg
rcll
adc
arpl
scas
mov
stos
mov
cmp
sub
test
add
popa
std
ds
les
jno
jb
jp
sbb
dec
and
dec
add
or
cmpsb
sahf
mov
imul
rorl
ffree
sbb
mov
dec
ja
mov
pop
xchg
pop
cmp
test
pop
sbbb
lahf
stos
or
aaa
loope
aad
jecxz
fchs
dec
js
jle
daa
mov
mov
pop
adc
jle
mov
xlat
gs
cmp
push
xchg
mov
jge
sahf
xchg
xor
sarl
mov
clc
dec
scas
insl
clc
mov
mov
pop
and
fstpt
push
mov
clc
stc
int
or
repnz
jg
jns
lods
push
xchg
or
ja
fnstcw
jp
leave
xchg
and
adc
scas
push
mov
jb
lret
pop
adc
xor
sub
jg
ret
int3
lea
stc
sbb
dec
add
shrb
fs
dec
inc
out
xlat
mov
out
aas
iret
adc
push
cs
xchg
daa
je
pop
imul
mov
inc
insb
iret
mov
xor
stos
sub
pop
imull
dec
push
es
stc
int
ret
clc
icebp
cmp
sub
into
xchg
push
addb
test
mov
sbb
nop
movsl
mov
inc
aas
iret
jns
aad
jno
add
fbld
sub
mov
xor
mov
adc
rolb
iret
arpl
pusha
outsl
mov
sub
mov
in
cmpsb
cmovs
in
jge
fwait
js
test
stc
movb
mov
testb
ret
std
sbb
js
jae,pn
jo
popa
mov
shrb
push
scas
inc
ds
es
add
addl
test
xor
mov
sub
mov
pop
xchg
xchg
pop
xchg
lea
jnp
or
sti
testl
out
sub
shr
fwait
lret
les
cmp
in
mov
fs
sub
das
incl
sbb
xchg
ret
sub
lds
lea
xor
divl
sub
data16
pop
xchg
pop
orl
movb
push
or
es
jl
push
test
xchg
dec
lods
add
sbb
das
push
jp
push
sub
pop
rolb
stos
ret
and
or
cmp
dec
xchg
mov
cmp
outsb
or
lret
mov
cmpl
jne
outsb
mov
inc
sub
test
push
jmp
out
cmp
stc
jns
dec
xchg
and
cltd
sbb
andl
mov
mov
lret
lock
lea
adc
ss
cmp
test
imul
insb
js
push
ret
xor
dec
data16
jl
fisubrl
jge
and
sub
push
xlat
lds
pop
xchg
pop
pop
ljmp
pop
dec
adc
and
jne
test
lret
andps
movsl
jle
daa
or
vminps
cmpsl
mov
repnz
into
push
in
into
lock
xor
int
rorl
cmp
add
mov
mov
rorb
pop
out
loopne
adc
insl
cmpsb
arpl
sbb
je
imul
push
adc
leave
jle
insl
outsb
add
pop
xchg
adc
jae
fisttpl
xor
cmp
adc
fimuls
dec
xchg
out
pop
subl
xor
push
add
les
pop
outsl
and
or
mov
sub
outsb
int
inc
aaa
jl
mov
loop
dec
mov
inc
inc
inc
ljmp
fcoml
aaa
bound
sbb
xor
mov
test
inc
sahf
popf
shlb
mov
repz
orl
push
xchg
push
test
stc
or
lods
fcoms
xlat
push
push
xor
lahf
mov
or
add
mov
andl
sbb
pop
mov
repnz
mov
xor
sbb
repnz
pop
aad
cmp
cmp
adc
pop
sbb
sbb
xchg
adc
jbe
mov
pop
xor
add
repz
sbb
fbld
out
in
inc
jp
bound
fistpll
cmpsl
imul
push
mov
or
repz
mov
xor
jbe
lock
fsubrl
xchg
mov
test
call
mov
ljmp
gs
mov
jge
mov
and
int3
addr16
mov
xchg
cmp
lahf
lock
dec
sbb
aas
lods
dec
add
mov
and
rorb
scas
add
loope
jl
and
inc
push
pop
movsl
rcr
xchg
dec
in
pop
std
xchg
jno
pop
xchg
outsl
ss
inc
shrl
xor
mov
push
into
cltd
lods
es
dec
leave
dec
sbb
xchg
aad
mov
sbb
push
test
sbb
xchg
cmp
orl
mov
jne
movsb
cltd
adc
or
mov
mov
in
jecxz
andl
mov
mov
jmp
xor
or
xchg
add
dec
pushf
and
jnp
cmpl
jbe
cmpb
pop
test
sub
mov
in
xor
mov
xlat
in
movb
xchg
les
mov
jae
loopne
mov
aam
fldt
dec
add
cmp
xchg
or
rolb
mul
out
push
jne
jmp
in
je
aas
movsb
sbbb
movb
sbb
aas
out
jmp
mov
movsl
cmp
aad
inc
jae
es
jae
inc
jbe
lret
xchg
iret
mov
cmp
xchg
std
sub
fisttps
mov
fdivl
pop
cmp
ljmp
pop
fistl
lahf
jg
mov
sbb
cmc
xchg
pop
cmpsl
or
xchg
xchg
add
jns
pop
sub
cmc
mov
sub
mov
xor
imul
add
popf
or
push
fsubp
push
fmuls
lods
sbb
or
add
aaa
mov
or
mov
test
out
adc
aas
jo
and
dec
fs
inc
gs
cli
rorl
xchg
xor
push
jae
xchg
jecxz
pushf
in
and
or
sti
add
dec
push
inc
and
mov
or
ja
sbb
aad
add
repnz
dec
int3
pop
pop
pop
sub
int
cmp
xchg
nop
or
pop
jae
out
lcall
push
ret
shrb
inc
imul
insl
sbb
idivl
sbb
dec
jge
sbb
xchg
add
mov
pop
ret
xchg
int3
fwait
mov
pop
setp
loope
cltd
je
in
cltd
xor
call
pusha
ds
mov
pop
and
mov
lds
out
lret
jp
dec
push
jle
xchg
lea
xchg
sahf
and
loop
fdivrs
mov
sti
push
arpl
mov
adc
mov
int3
out
inc
mov
aad
pop
scas
push
imul
xchg
cmpsl
push
scas
sbb
cli
movsl
decl
ja
sbbb
push
cmp
jmp
bound
jecxz
insb
adc
pop
hlt
aad
fisttps
jns
xor
cli
pushf
jge
fcmovbe
ret
in
lods
jns
mov
popa
mov
jbe
out
push
dec
add
or
cmp
push
cwtl
cltd
add
push
hlt
shrb
into
jp
adc
mov
mov
inc
push
cs
mov
stos
in
mov
and
or
or
into
push
and
dec
pop
scas
andb
jmp
push
pop
pop
push
cli
mov
enter
cmpsl
das
divb
mov
arpl
les
jmp
mov
out
adc
dec
pop
cmp
loopne
sub
push
outsl
data16
fcmovnbe
scas
ja
ljmp
shll
cmp
dec
hlt
add
adc
imul
push
outsl
cli
ljmp
sti
mov
mov
xlat
dec
dec
in
inc
jg
push
lods
push
or
dec
push
add
test
sub
ss
cmp
inc
pop
mov
les
jnp
in
call
aaa
jmp
and
push
lret
sbb
pushf
push
icebp
xchg
xor
sbb
inc
push
cmp
pop
push
xor
in
nop
mov
mov
stc
cmpsb
mov
outsb
add
mov
shrl
and
fsubl
lret
xchg
push
fsubs
mov
push
lods
decb
lcall
aad
pusha
pop
mov
loopne
and
leave
loope
sahf
mov
and
push
pop
jge
lds
xchg
mov
stc
test
xor
pop
push
ja
lods
movsl
adc
shl
dec
hlt
loopne
mov
outsb
sbb
cmp
in
daa
jo
and
dec
cld
dec
adc
arpl
inc
xlat
push
cmpsb
daa
sub
push
scas
mov
dec
mov
psubb
xchg
mov
cmp
and
stos
sbb
xchg
mov
adcb
dec
aaa
or
icebp
cmpsb
dec
dec
sysret
sahf
out
aas
ds
mov
mov
das
push
mov
sub
scas
mov
adc
sti
dec
ja
popf
mov
push
jns
mov
inc
sub
mov
push
push
iret
or
jno
xor
lock
cld
push
jbe
jmp
xchg
imul
fidivl
int
xchg
repz
insb
sub
imul
mov
and
mov
stos
and
pusha
cmp
push
psadbw
cwtl
test
mov
mov
rorb
mov
dec
jg
inc
in
aam
mov
int
mov
pop
pop
cli
shlb
pop
jae
push
mov
rcrl
xchg
repz
getsec
subl
outsb
mov
stos
jmp
rclb
sbb
movsl
push
lret
sti
hlt
iret
negb
push
mov
scas
mov
sub
lock
call
andl
sub
ja
popf
dec
jne
inc
das
sub
mov
lret
into
out
lcall
lods
sbb
sbb
push
and
repnz
in
push
xor
mov
jecxz
push
out
pop
scas
test
rcrb
adc
dec
pop
adc
add
mov
test
inc
and
xchg
jle
aas
dec
fmul
cmpsb
andb
ss
push
mov
pop
mov
xchg
adc
cmp
imul
aam
scas
stos
sub
pop
push
mov
stos
sub
xchg
loopne
inc
mov
sub
ds
lock
or
jb
push
or
shlb
rcr
xchg
fcmovnb
push
jbe
outsl
sbb
mov
adc
cmp
test
negl
sub
xor
push
imull
aas
xor
dec
mov
jne
cwtl
or
int3
add
addb
mov
jmp
add
and
insl
dec
jmp
loope
clc
cmp
pop
data16
xchg
fisubrs
xor
ljmp
push
cmc
out
push
imul
ret
mov
and
add
xchg
dec
dec
push
xor
add
jl
imul
test
mov
mov
and
push
loopne
pop
cmpsl
scas
repz
jmp
in
jns
jb
sbbb
orb
in
aas
lret
stc
mov
lock
push
jb
inc
aas
cltd
sub
inc
lret
jmp
roll
rcrb
dec
sti
adc
mov
aad
push
mov
dec
lea
outsl
std
sbb
and
xchg
popf
jae
mov
cmpsl
ljmp
ret
dec
fisubrs
dec
out
pop
mov
inc
popa
cmpsb
ret
pop
cli
pop
leave
das
dec
aam
fwait
pop
inc
test
jle
adc
daa
push
fstl
sbb
fstpl
ret
and
int
ja
jnp
jge
inc
fwait
in
mov
push
mov
cmpsb
adc
bound
xchg
inc
jns
aaa
mov
dec
psllw
cwtl
dec
incb
inc
pop
xorl
sbb
cmpsl
inc
cmp
pushf
and
jbe
jno
pop
push
cmp
dec
sub
pop
punpckhwd
fsubrl
imul
in
add
dec
std
dec
dec
inc
push
loopne
xchg
fbstp
rcrb
mov
bound
mov
pop
in
popa
adc
fcompl
fistl
or
inc
pop
inc
mov
out
mov
popf
cmpsl
sahf
pop
mov
test
adcl
pop
cld
pusha
mov
scas
dec
pop
fists
sbb
cli
inc
addl
xchg
movl
cs
cld
adc
or
outsl
mov
les
pop
xchg
aas
jns
cld
dec
xchg
pop
and
cmp
andb
mov
mov
or
mov
imul
add
daa
scas
lcall
xor
bound
shrl
shlb
pop
subl
push
add
imul
push
testl
aaa
or
data16
sub
add
xor
mov
addb
out
cmc
pusha
sbb
aas
xor
movsl
movsb
pop
das
lods
xchg
daa
fmuls
idiv
rcr
mov
add
mov
xor
xchg
xchg
or
xorb
inc
sbb
imul
cmp
aas
call
sub
xor
mov
aas
sbb
push
dec
dec
andb
adcb
mov
jl
sbbb
jbe
idiv
jbe
addr16
pop
dec
xchg
aas
lcall
outsl
xchg
sub
inc
add
or
dec
and
push
loopne
cmp
icebp
ficoms
sub
jmp
mov
xor
popa
dec
jns
lods
mov
into
push
andb
mov
test
iret
outsb
xchg
pop
lods
pusha
push
push
ret
or
and
mov
mov
pop
incb
jmp
sbb
fsubrl
xor
call
dec
stos
sub
jne
mov
jge
js
push
int
cmp
fcmovnu
xlat
push
pop
in
jle
popf
out
push
mov
lock
movsl
imul
sub
dec
call
add
mov
stc
inc
mov
fstps
jl
pop
imul
dec
je
dec
add
cmpsw
loopne
pop
shlb
jno
jnp
sbb
frstor
movsb
xor
mov
push
out
jne
pop
subl
jle
jno
orb
stos
test
fcmovu
jecxz
repnz
clc
outsb
sbb
mov
pop
test
aam
cmp
add
dec
test
loop
push
lahf
repnz
in
or
jnp
mov
sbb
lods
gs
push
sarb
push
mov
sub
enter
xor
out
cld
aaa
adc
cmp
xchg
hlt
jl
or
sti
loopne
push
push
loope
or
out
insl
gs
add
xor
mov
ds
jo
cmc
sub
cmp
arpl
mov
jmp
movsb
cmpsb
std
add
sbbb
cld
sbb
adc
sub
cmpsb
fsubl
dec
shr
jecxz
sbb
lock
in
add
mov
test
inc
shl
repnz
jmp
cld
lods
inc
push
pop
dec
test
or
xor
shlb
insb
inc
jnp
fcoms
add
pusha
out
lock
push
mov
dec
lcall
std
in
sub
add
mov
fwait
cmpl
subb
rorl
sub
dec
jge
xchg
fs
outsl
inc
jge
int
lock
jle
mov
sbb
adc
dec
push
lods
jge
and
xchg
cli
into
repnz
inc
insb
js
cmp
pop
fsub
aaa
mov
shl
nop
lock
rorb
js
sbb
jbe
ret
push
mov
pop
lcall
loopne
es
push
shll
inc
inc
inc
add
and
sub
sahf
inc
sbb
dec
jns
shlb
into
popf
xor
jecxz
add
test
shll
mov
das
and
test
mov
adc
loopne
dec
arpl
popf
call
xor
das
pop
cs
rolb
adc
sub
ror
dec
dec
adc
lds
fs
push
or
mov
outsb
sbb
inc
icebp
out
mov
shl
ret
ficoml
xor
ret
cmp
cwtl
stos
cwtl
xchg
sbb
sbb
xchg
mov
jl
xor
nopl
stos
in
xor
jge
nop
out
xor
lds
jl
mov
pop
pusha
imul
mov
adc
psraw
das
pop
popf
jnp
out
data16
inc
adc
xchg
in
mov
cmp
gs
lret
stos
mov
push
shll
mov
nop
fstps
lods
cmpsl
pop
popf
dec
inc
dec
ret
adc
inc
xlat
jno
int3
xchg
add
sti
mov
fidivs
pop
clc
xchg
pop
sbb
fisttpl
fs
push
xlat
in
lods
test
mov
inc
jmp
mov
std
fstps
mov
mov
test
jg
pop
lahf
cmp
mov
movsl
mov
push
inc
xor
andb
mov
mov
mov
mov
fadd
cwtl
mov
sub
nop
jl
ds
pop
sarb
sbb
out
mov
dec
fwait
inc
mov
in
mov
nop
inc
xchg
repz
inc
insl
xor
sub
test
test
pop
pop
mov
nop
scas
cmp
lret
push
xor
rclb
lods
subl
faddp
repz
aas
rcr
mov
push
inc
add
subb
push
xchg
mov
xor
sub
lock
jp
xchg
add
adcl
xchg
fadd
push
pop
adc
xchg
jp
pop
mov
add
clc
dec
xchg
adc
sarl
xor
fldcw
mov
xchg
dec
ror
in
in
nop
inc
pop
dec
ret
add
lods
dec
in
sbb
or
or
mov
or
sub
mov
loopne
xchg
dec
inc
cltd
jb
lods
mov
mov
fistps
lods
or
mov
sub
movsl
adc
insl
daa
mov
adc
cltd
push
add
leave
mov
and
cwtl
jle
sahf
cmp
test
inc
push
shr
jns
or
push
xlat
push
das
loop
aad
divb
cld
push
addb
sbb
sbb
sahf
add
lods
shl
aad
std
xchg
sbbl
jnp
in
imul
jo
cld
pop
push
inc
push
adc
mov
xchg
lods
xor
mov
add
jle
add
cltd
adc
fmul
mov
mov
jns
movsl
ret
or
repz
xlat
jb
dec
push
fstp
dec
and
adc
cwtl
cli
xchg
inc
imul
xorb
mov
xchg
mov
sbb
movsl
js
cmpsl
push
mov
add
mov
add
and
xchg
sahf
mov
shll
mov
iret
adc
fmulp
das
add
mov
mov
jbe
jo
xchg
cmc
jo
mov
stc
lret
pop
outsb
lds
std
xor
data16
xor
imul
out
mov
jmp
pop
jge
gs
lret
stos
leave
ret
push
loop
divb
aad
mov
out
mov
mov
pop
popa
out
cmc
dec
sub
sbb
pop
test
sbb
mov
add
ret
add
xchg
adc
xchg
mov
jg
push
scas
hlt
stos
pusha
lock
lahf
call
mov
sub
mov
push
out
mov
xor
xor
mov
xchg
sub
inc
sbb
rcrl
rorl
cmp
pop
repnz
mov
xchg
pop
xor
fwait
or
mov
lret
movsb
test
add
sbb
aas
lcall
vandpd
jne
push
sbb
jnp
das
gs
out
xchg
jno
frstor
sahf
pop
inc
push
cmc
out
cmpsl
mov
xchg
pop
lods
test
icebp
sub
jp
mov
pop
dec
jmp
adc
aad
cltd
add
in
sbb
cmpsl
icebp
jns
xchg
sub
data16
sub
push
adc
jae
sarl
cmp
scas
fstps
mov
dec
xchg
mov
sub
mov
lahf
data16
icebp
stc
jle
and
pop
iret
mov
xchg
and
jbe
hlt
jle
leave
mov
mov
stos
inc
movsb
xor
cmc
mov
es
xor
in
aam
push
xor
call
pop
jns
cmpsb
sti
clc
xor
mov
movsl
fwait
test
add
inc
into
jno
fwait
in
push
jle
cmp
std
dec
pop
sub
movsl
sub
sub
pop
mov
xchg
sub
mov
outsb
not
into
sub
or
adc
mov
jb
mov
inc
lock
lahf
cmp
xlat
pop
fsubr
cmpsl
into
pushf
jo
and
mov
addb
mulb
shl
jl
loop
test
mov
nop
shrb
out
pop
xor
popa
pop
mov
lret
xchg
les
leave
arpl
pushf
sub
out
es
mov
jp
subl
add
mov
std
or
jmp
pop
jmp
pop
mov
aad
push
rcll
xor
cltd
or
add
sub
mov
test
pushf
cli
mov
dec
xchg
lea
cli
xorb
push
and
cmc
fnstenv
add
jne
arpl
dec
jle
mov
mov
dec
push
int
xchg
jb
sahf
outsl
dec
orl
jp
dec
mov
ljmp
andl
xor
or
xor
adc
pop
jo
inc
cwtl
scas
sbb
push
loopne
push
jge
pop
enter
iret
jne
out
cli
imul
xor
adc
jle
sbbb
mov
adc
frstor
test
mov
sbb
shrb
dec
leave
out
mov
out
mov
xor
add
xchg
jno
mov
push
adc
push
sub
xor
xchg
push
dec
mov
dec
scas
cmp
inc
jmp
shlb
and
jo
lahf
std
outsb
sbb
mov
or
mov
cmp
cmp
mov
adc
jge
cmp
je
pusha
adc
jnp
pop
xor
pop
aam
fisttpl
and
lret
fidivs
call
push
jg
adc
ds
shlb
xor
sub
mov
add
xor
lahf
std
inc
mov
dec
push
out
std
nop
rcr
and
push
fcmovne
sbb
stos
sbb
xlat
inc
pop
mov
aas
mov
insb
or
or
inc
mov
adc
cli
pop
lret
cmp
into
xlat
lahf
test
nop
movsl
xor
call
jns
sbb
mov
out
xchg
mov
adc
popa
les
out
mov
lret
stc
loopne
sbb
pusha
scas
lea
out
es
lods
lahf
mov
dec
movsl
test
addl
test
pop
xchg
and
imul
pop
pop
add
jnp
test
dec
negb
sub
outsl
repz
pop
ret
sub
aam
rcrb
xor
rcl
and
xor
aas
cmp
add
hlt
fisttpll
imul
icebp
mov
mov
stos
xor
and
adc
dec
mov
xchg
rorb
pop
daa
jge
in
cmp
mov
daa
jo
cmp
clc
push
jno
push
adc
or
mov
jl
fwait
jo
ret
loope
xchg
sbb
add
out
sahf
mov
psubb
or
imul
icebp
cmpsl
cmpsl
or
pop
jle
dec
ds
mov
gs
aaa
in
ss
das
mov
sub
mov
and
dec
scas
jmp
jno
into
push
xchg
out
mov
fistps
cmp
sbb
test
mov
lret
push
decl
insb
mov
fsubl
mov
inc
aam
fstps
hlt
pop
lods
fiadds
scas
fistpll
ret
sub
xor
adc
cmc
cmp
enter
or
xchg
mov
in
push
decb
test
in
inc
jnp
sahf
xchg
pop
int
push
cmc
cmp
addr16
subb
rorl
inc
or
enter
cltd
jl
pop
in
push
mov
sarl
and
iret
mov
sti
adcb
clc
jo
lahf
loope
push
ds
out
mov
mulb
jns
jp
mov
sub
lods
xchg
jo
and
aam
xchg
push
dec
movsb
inc
ret
jecxz
scas
out
rclb
inc
push
jne
daa
cmp
jecxz
rcll
aam
xorl
sub
sahf
sbb
call
in
popf
mov
lret
int3
adc
pop
movsl
xchg
xchg
adc
fsts
fprem1
cmpsb
pop
lahf
cmpsl
loopne
idivb
sbb
pop
push
push
and
icebp
popf
mov
popa
in
xchg
mov
mov
push
fwait
int3
lcall
sbb
in
bound
mov
and
mov
fcmovb
roll
inc
out
test
fwait
mov
fucomp
imul
fdivr
adc
aad
cwtl
stos
mov
push
mov
sub
sub
push
bnd
bnd
and
lods
pop
push
pop
rclb
fstl
mov
inc
iret
lods
sub
pop
cli
sti
sub
jno
inc
fiaddl
pop
jno
dec
jge
dec
cmpsl
dec
push
ret
mov
stos
int
mov
popf
mov
add
mov
add
orl
adc
flds
rolb
fdivrs
cmp
add
jae
out
push
in
xchg
mov
aas
push
movsb
ljmp
cmpsl
mov
ljmp
lock
add
mov
inc
push
add
xchg
push
fstpl
dec
ss
jg
fnstsw
inc
sbb
dec
pushf
cld
mov
cli
pop
xor
aaa
dec
loop
mov
out
push
inc
in
jle
fbstp
loopne
movsb
sbb
fmuls
mov
in
aam
ss
out
push
dec
lret
mov
sbbl
cmp
movsb
es
mov
hlt
mov
and
xchg
sbb
cmp
push
scas
paddusb
jecxz
jns
loope
ds
lret
loop
and
scas
lds
imul
inc
pushf
jle
jg
dec
jnp
aam
je
push
cmp
jbe
adc
fprem
das
ret
mov
fs
fwait
xor
gs
jmp
mov
add
mov
cmp
fs
sahf
pop
push
popf
js
test
add
xchg
sti
repz
cmc
pop
mov
jecxz
adc
xchg
xor
stos
cmovae
cmp
pushf
dec
dec
outsb
imul
shll
repz
adc
fcoms
out
pop
int3
cltd
fcoml
mov
movsb
imul
sub
add
out
adc
xor
scas
cld
mov
xchg
adc
or
add
daa
jae
push
push
repz
dec
aaa
es
arpl
mov
test
nop
sbb
lret
inc
mov
lret
ret
outsl
jae
xor
mov
mov
in
in
xchg
clc
xor
xchg
mov
movsb
arpl
or
push
scas
test
cs
dec
xchg
adc
inc
fwait
dec
sub
fldenv
adc
mov
and
insb
enter
mov
pop
cmp
clc
addr16
mov
inc
jle
pop
mov
inc
push
daa
cli
scas
cmp
shll
scas
ror
lret
inc
push
movb
xlat
mov
mov
xchg
ljmp
mov
adc
sbb
pop
inc
dec
push
adc
out
negb
jnp
in
jmp
lock
sub
inc
jmp
jbe
mov
int
clc
popf
jnp
xchg
xor
das
cmp
push
fldenv
pop
mov
les
je
loop
cmp
mov
pop
or
daa
or
jno
mov
jmp
xchg
inc
mov
sarb
frstor
stos
inc
fucomp
jle
lock
ret
xor
add
sub
adc
pushf
pop
mov
jp
lea
jns
iret
test
adc
add
sub
or
add
sbb
mov
jbe
adc
inc
aad
push
or
and
xor
add
sbb
sbb
stc
outsb
adc
sti
jmp
out
cmp
mov
nop
xchg
dec
adc
aam
bound
je
fwait
push
jmp
test
test
dec
repz
jle
sub
dec
out
hlt
test
push
add
aad
repnz
mov
pop
in
das
inc
and
inc
into
syscall
ss
adc
cltd
jnp
icebp
pop
or
and
sarb
and
jnp
das
jae
repz
mov
mov
sbb
sbb
pop
lahf
or
repz
shlb
lock
fdivl
inc
pop
inc
scas
rcrb
mov
movsb
in
mov
arpl
loope
cltd
in
mov
js
mov
pop
xor
imul
push
scas
notl
cmp
mov
mov
fisubrl
dec
sub
inc
mov
sub
add
jae
lods
call
imul
cmp
or
movsl
into
sbb
push
fnstsw
shll
scas
test
inc
rcl
cmc
js
fcomps
sbb
icebp
cli
jecxz
lea
jp
imulb
jge
enter
pop
or
sti
and
xchg
jno
lret
out
xchg
sti
mov
outsb
dec
mov
add
pop
push
popl
mov
outsb
jl
call
mov
adc
clc
std
xlat
push
ret
dec
add
loope
imul
lea
xchg
dec
ret
adc
loop
jne
inc
cmp
sbb
std
mov
push
jb
mov
pop
xor
lods
sub
and
loope
lea
fs
add
pop
xor
xchg
stc
bswap
adc
mov
int3
push
inc
cmp
ja
dec
sbbl
jge,pt
data16
in
ja
xor
mov
add
lret
adc
rcl
jp
inc
ret
add
das
jp
dec
push
movsb
add
bound
cmpsl
xchg
ss
stc
jns
jle
insb
insb
sub
inc
push
xchg
mov
das
sub
or
jp
mov
mov
mov
add
mov
push
aam
sbb
pop
fadd
pop
mov
es
stos
aam
imul
push
adc
je
add
es
inc
lahf
mov
aaa
jo
mov
jmp
faddl
xor
adc
add
ljmp
movsl
testl
imul
xor
pop
sub
sub
xchg
mov
movsl
adc
mov
daa
std
xor
push
cli
jg
imul
mov
cli
repz
mov
dec
push
push
mov
push
pop
mov
fldcw
push
mov
pop
pop
sub
jecxz
jo
push
push
gs
inc
xchg
aaa
inc
ja
std
movsb
fdivrs
xor
les
mov
loopne
cmp
pop
je
mov
push
popa
ljmp
dec
xor
cmc
mov
sbb
in
sbb
nop
into
add
ljmp
outsb
popa
dec
pop
jo
int3
adc
and
popa
into
mov
push
push
leave
sar
inc
lret
dec
ss
pop
stos
rorb
std
lret
adc
inc
mov
mov
clc
xlat
dec
aad
cwtl
movsl
out
scas
jns
sub
dec
inc
push
jmp
pop
push
pop
inc
insl
ret
push
cmc
lret
push
or
xor
adc
mov
or
daa
mov
cltd
lds
mov
mov
hlt
xchg
push
xchg
rorl
clc
and
cs
mov
sbb
or
cmp
add
jp
xlat
mov
or
ss
xor
jb
out
inc
into
iret
cwtl
xchg
jnp
enter
and
outsl
pop
in
cmc
insb
sbb
pusha
xor
daa
or
in
test
add
je
xchg
inc
dec
jns
dec
in
notb
and
push
cmp
test
pop
fsubl
xor
mov
es
sub
cltd
sub
lods
das
inc
mov
mov
pop
inc
lds
aad
loop
push
lods
push
ljmp
aad
inc
pop
xchg
mov
outsl
dec
push
xchg
pop
stc
mov
inc
je
pop
sub
jmp
mov
and
mov
popf
leave
std
adc
in
pop
fsubl
lahf
je
cltd
mov
dec
pushf
in
sbb
rolb
jle
gs
mov
test
dec
cltd
and
mov
orb
add
sub
orb
repnz
push
sarb
cmp
loope
jl
ret
fxch
sarl
add
dec
cmp
push
fnstsw
xor
sbb
mov
nop
stos
in
cli
pop
inc
add
dec
mov
cld
stos
jns
pop
and
clc
cmpsl
mov
pop
push
cltd
push
push
adc
xchg
cmp
xor
jp
add
sahf
ja
scas
outsb
jo
fnstsw
push
popf
fucomi
jecxz
repz
adc
outsl
or
pusha
in
jg
pop
jge
faddp
adc
outsb
sub
or
xchg
dec
push
sbb
sbb
ds
das
std
pop
sub
and
adc
out
add
push
mov
pop
ficoml
and
pop
les
mov
cmp
cli
aaa
out
lea
cld
nop
xlat
pop
mov
push
int
pusha
mov
add
pop
stc
mov
insb
mov
fisttpll
xchg
pop
pop
out
hlt
jne
lret
mov
lods
jg
sbb
loopne
ret
into
and
jecxz
xchg
mov
shlb
mov
loop
inc
out
enter
xchg
lcall
and
in
pop
fwait
mov
sbb
cmpsl
pushl
fmul
xor
aad
xor
mov
jg
cwtl
xor
out
int
int3
ljmp
mov
and
or
ret
lods
hlt
adc
push
mov
in
outsl
jae
and
jne
cmpsb
movsl
les
pop
xor
sbb
mov
repz
sbb
repnz
repz
in
test
cltd
push
push
lret
add
cmpb
in
fnsave
mov
into
jnp
mov
and
pop
cmpsb
sub
fisttpll
bound
pop
push
mov
fistps
call
lea
stos
mov
mov
test
cli
push
rcrb
test
push
and
lods
jo
sub
das
dec
or
aad
or
add
adc
ljmp
je
or
and
add
cmc
rolb
out
clc
cmp
xor
std
jge
loop
jns
jle
jg,pn
cmpsl
push
dec
in
xor
adc
imul
xchg
dec
leave
mov
add
inc
daa
out
sti
or
and
fistl
fdivrl
testl
outsl
int3
addl
cmp
in
jno
and
adc
test
adc
loope
jl
jo
mov
mov
into
out
cmp
insl
icebp
enter
shl
int
lcall
push
negb
and
mov
push
push
xchg
pop
pop
fisttps
out
dec
xchg
aad
pop
xor
mov
sahf
ficompl
in
into
call
shll
sbb
dec
lock
or
and
leave
outsb
lahf
in
jb
fs
pop
adc
aam
daa
sub
mov
xchg
fsts
pushf
sub
dec
mov
mov
in
push
fcomp
stos
mov
sbb
scas
fs
pop
dec
cli
inc
iret
popf
mov
cmp
push
push
pop
xchg
ret
push
mov
jo
jnp
xor
gs
mov
xor
call
push
lret
jle
add
cmc
test
gs
shll
roll
mov
fnsave
push
mov
sbb
lret
xor
inc
aaa
xchg
mov
inc
decl
jbe
rcll
loopne
push
je
jmp
fimuls
mov
mov
imull
mov
mov
push
xor
inc
cmp
leave
lock
pop
cmp
lret
or
or
rol
ja
cld
jo
jl
mov
sub
adc
xor
hlt
out
out
push
mov
push
loope
lea
sub
cmp
aad
pushf
jae
rolb
pop
push
jl
std
pop
hlt
mov
inc
push
cmp
lea
sbbl
adc
ja
dec
or
mov
add
add
fists
std
imul
fxch
xor
push
jecxz
pusha
ja
outsl
sbb
leave
jecxz
xor
add
das
dec
jns
les
jmp
add
sahf
faddl
inc
stc
mov
add
pop
ja
push
aam
sub
icebp
mov
xor
stos
scas
subb
movsb
fwait
ret
dec
xorb
mov
mov
enter
push
push
inc
nop
and
xor
jnp
mov
shl
stos
loope
fstps
popa
bound
pop
sarl
add
mov
cwtd
ljmp
sbb
outsl
insl
cltd
cmp
ja
add
call
or
inc
addr16
popa
scas
jne
shll
jle
or
cld
adc
mov
iret
aas
push
jbe
jl
cltd
pop
shrl
push
pop
mov
xchg
jbe
cmpsl
inc
xor
or
scas
push
mov
insb
scas
movsb
mov
mov
pop
xchg
loop
push
lods
add
roll
push
push
repz
popf
and
dec
pop
pusha
xchg
test
out
push
or
inc
mov
testl
cmp
sti
xchg
aad
adc
cmp
daa
dec
push
mov
dec
gs
pushf
bound
ret
dec
jae
add
ficoms
lods
and
and
aad
adc
push
aad
fcoml
in
adc
add
or
in
test
js
test
push
mov
lea
cli
lods
lcall
jno
mov
fistpll
ja
and
adc
in
lock
pop
xlat
cmp
sbb
jns
dec
jg
gs
imull
xchg
aam
mov
in
hlt
hlt
hlt
mov
daa
es
xor
and
daa
out
je
imulb
xlat
and
test
and
int3
icebp
jecxz
xor
inc
mov
jmp
xchg
mov
mov
stc
enter
and
js
lret
mov
clc
out
clc
js
pop
popa
es
decb
cmp
pushl
jnp
icebp
sub
sub
ret
add
cltd
and
pop
mov
subl
mov
mov
push
dec
sbb
pop
mov
pop
out
and
mov
inc
mov
mov
in
dec
and
xchg
adc
imul
arpl
pop
icebp
dec
rcll
add
cwtl
sub
and
popa
and
pop
push
or
inc
inc
lret
add
aaa
pop
ret
and
inc
xchg
out
pop
xor
add
mov
ja
or
and
mov
pop
mov
cmp
push
push
out
iret
mov
addr16
mov
jae
add
jge
cld
mov
jmp
aas
mov
pop
leave
jecxz
hlt
xchg
out
push
jp
xchg
popa
jbe
or
xor
sahf
pop
gs
pop
mov
cmpb
inc
test
inc
mov
push
mov
stc
mov
dec
negl
aad
mov
push
cmp
xchg
xor
outsl
sub
lret
xor
imul
test
lret
ja
lcall
std
xor
jnp
hlt
add
in
xchg
loopne
mov
ret
inc
dec
shl
lock
stos
int3
pop
in
inc
fadd
mov
clc
faddp
jmp
and
mov
mov
cmp
jmp
out
pop
test
lcall
mov
push
sbb
lret
sbb
mov
cmp
or
push
adc
mov
sub
pop
ja
add
insl
scas
xchg
mov
mov
ss
lcall
or
dec
push
es
mov
jb
sbb
stc
call
mov
lahf
mov
jae
cmp
test
fwait
stos
pop
jl
faddl
ds
inc
daa
cmc
fldlg2
aad
aaa
incb
movl
add
fisubl
mov
outsb
repnz
inc
add
cmpb
cmp
fmuls
sti
adc
mov
gs
scas
out
lea
cld
dec
mov
mov
push
and
pop
stc
jne
arpl
xchg
or
int3
out
sbb
push
hlt
push
mov
dec
pop
mov
sub
cmp
jle
or
jbe
add
xor
aaa
xor
dec
pop
scas
xor
ret
sahf
xchg
loopne
xchg
in
stos
movsl
test
xchg
in
inc
ds
jo
mov
bnd
aad
jns
stos
cmp
pop
cmp
aad
test
hlt
cmp
shll
daa
xchg
cs
rclb
in
cmpsl
les
and
mov
out
mov
stc
pop
out
in
dec
ja
pop
outsb
out
bound
xor
and
lods
cmp
jae
es
cmp
out
xor
jl
pushf
push
les
push
xchg
stos
pop
push
inc
testl
jge
pop
add
repnz
dec
ret
movsb
adc
jecxz
sahf
fistpl
add
and
push
shrl
nop
or
nop
sbb
stos
dec
xor
int3
fisttps
dec
ja
iret
add
jge
push
outsl
mov
aad
push
cs
fbld
stc
lret
pushf
in
mov
mov
addr16
test
sbb
xor
es
movsb
sahf
and
cltd
sbb
sub
clc
mov
inc
loope
cld
pop
and
sbb
loope
fwait
dec
ret
jmp
xor
pop
jne
call
or
int
out
mov
sbb
insl
xor
xlat
mov
mov
xchg
iret
aad
scas
lea
mov
in
insl
mov
mov
inc
jno,pn
jmp
inc
jbe,pt
mov
test
mov
rcrl
ljmp
ljmp
xchg
and
cmc
sbb
lsl
xchg
xchg
cmc
je
rorl
push
cmpsl
mov
xor
mov
es
iret
mov
jnp
xor
and
mov
int
add
iret
add
lret
cmc
push
pop
cld
pop
mov
jmp
iret
mov
sub
data16
pop
or
loop
sti
push
icebp
pop
mov
push
ljmp
les
cmpsl
jo
pusha
mov
scas
leave
pop
mov
push
sbb
outsb
cltd
cmpsb
leave
addl
iret
iret
mov
sahf
popf
scas
or
scas
cmpb
insb
imul
clc
xchg
leave
or
jl
add
add
jge
popf
sub
adc
mov
nop
stc
lret
or
test
adc
pop
popa
sub
xchg
gs
lret
add
dec
stos
jle
cmp
jae
popa
rcl
and
outsl
ja
clc
push
cmp
pop
jmp
test
shr
sbb
pop
cmp
mov
mov
jge
xchg
xor
lcall
cmpsb
lods
notl
inc
dec
roll
dec
ficompl
push
push
addr16
fcomps
mov
jae
mov
add
lds
jp
pop
adc
negl
add
gs
mov
int3
cmpsb
loopne
xchg
int
inc
push
and
and
cmp
inc
xacquire
or
mov
mov
cmpsb
and
push
mov
xchg
adc
inc
push
cmc
out
cltd
lret
inc
dec
add
loope
insb
inc
addb
adc
xor
sub
imul
clc
into
pop
gs
and
testb
push
nop
loope
fucomip
stc
add
out
adc
rol
fisubrl
es
mov
fsubrs
vpunpcklwd
add
testl
pop
loop
push
f2xm1
mov
add
pop
inc
dec
jp
add
mov
test
shlb
cwtl
sbb
pop
in
adcl
pop
fwait
jns
test
out
loopne
mov
push
and
pop
in
jle
push
push
push
xor
aaa
fidivs
movsl
add
scas
movsl
adc
add
lods
fsub
roll
push
imul
ja
or
xchg
mov
inc
or
mov
pushl
lods
and
mov
movsb
pushf
lea
dec
cmp
pushl
ss
or
aad
mov
mov
and
dec
dec
cld
inc
jno
and
shrb
fmuls
dec
pop
inc
xchg
and
call
in
pop
jne
fcomp
insl
jnp
push
lock
mov
mov
mov
mull
mov
jbe
mov
out
dec
xor
pop
enter
imul
iret
outsl
push
int3
loope
mov
cmp
jge
sub
push
popa
push
cltd
mov
dec
in
adc
out
cs
sbb
adc
fs
out
loope
sti
lods
push
loop
jl
and
xor
int
cld
jmp
rolb
adc
lock
push
dec
fs
movsb
cmp
pop
push
stos
ja
shll
fcoms
cs
and
cwtl
adc
mov
cmp
hlt
cmp
add
xchg
not
int
aas
jae
add
adc
jae
xchg
lret
pop
sahf
sub
iret
push
sub
inc
aad
inc
jae
inc
movsb
cwtl
fimull
inc
sub
leave
push
push
xchg
push
rolb
pop
cmp
ss
sub
mov
ret
lds
mov
outsb
mov
mull
and
imul
push
aaa
pushf
add
mov
sbb
jno
cmpsl
add
jmp
xchg
outsb
jne
test
and
inc
imul
xchg
loope
dec
sub
mov
stos
dec
jbe
mov
repnz
outsl
adc
adc
daa
iret
adc
cmp
repz
enter
rcrl
mov
rorl
inc
rol
shlb
out
jno
and
out
lods
sub
loopne
test
mov
mov
mov
outsb
cmp
in
scas
mov
mov
xchg
ret
sub
cmp
int
iret
sbb
cmc
jecxz
stc
cmp
popa
mov
jno
ds
mov
jne
daa
loop
xchg
cmp
clc
hlt
adc
bound
xchg
mov
pop
or
ja
inc
mov
pop
xor
jl
pop
mov
les
push
inc
xchg
sub
cmp
push
int
or
inc
add
movaps
arpl
or
rcrl
fstpl
xor
in
dec
jg
cwtl
imulb
daa
lock
popa
mov
ja
or
pop
jae
fbld
rcl
jns
imul
ljmp
jb
sbb
xchg
add
imul
jl
stos
out
xchg
not
cmpb
stc
mov
add
xchg
pop
test
shll
or
nop
jge
cmpsb
and
and
jg
cmp
ds
outsl
leave
pop
mov
loope
mov
pop
faddl
aaa
shrl
out
dec
lock
mov
xchg
cmp
jns
js
scas
xchg
xor
ret
inc
loope
xlat
addl
and
movsl
inc
lret
push
pop
push
je
loop
inc
repz
pop
jns
insl
xchg
scas
filds
push
aaa
adc
mov
cmpsl
sub
jns
mov
lods
fimuls
pop
mov
jne
sbb
adc
out
mov
notl
mov
lahf
movsb
or
pusha
stos
lds
in
pop
sti
mov
inc
jp
mov
fsubrs
xor
iret
iret
jns
pop
loop
and
dec
mov
dec
leave
inc
pop
sbb
jmp
mov
movsb
push
ror
ror
mov
je
mov
mov
ret
jae
aam
pop
outsb
sub
mov
and
sbb
mov
int3
cs
aaa
pop
pop
mov
daa
cmpsl
jp
jp
out
pop
shrl
arpl
loop
inc
jle
lahf
lds
arpl
sub
out
push
pop
dec
mov
mov
in
mov
fwait
cltd
adc
dec
xlat
xchg
jl
pop
mov
jg
inc
and
mov
xchg
cmp
jge
dec
leave
bnd
popfw
jp
cmp
cmpsb
sbb
ja
push
incb
ljmp
imul
jo
lea
int
mov
dec
xchg
repz
xchg
mull
sub
scas
add
adc
test
or
pusha
mov
dec
lock
inc
push
cmp
sbb
mov
lret
mov
pop
jp
in
imul
xor
mov
pusha
jb
nop
mov
fwait
loope
ljmp
push
mov
ja
fwait
mov
adc
push
scas
jno
adc
sbb
xchg
jecxz
mov
cmp
cmp
inc
repnz
stos
mov
sub
jns
ljmp
mov
jmp
loope
or
xlat
in
das
inc
jne
testl
pop
push
sbb
sbb
ret
pop
cli
inc
lea
mov
pop
mov
outsl
fcomps
and
or
or
int3
fwait
inc
and
inc
cmp
or
out
js
pusha
aas
push
sub
sbb
and
add
call
pop
xlat
in
int
in
repz
das
jp
pop
jo
lods
out
mov
pop
jle
add
pop
adc
and
add
js
test
pop
push
push
stos
test
xlat
dec
mov
repnz
in
orb
and
fwait
imul
xor
mov
add
test
adc
xor
sbb
cwtl
jmp
pop
push
pop
repz
outsb
incl
call
loop
jg
ja
sub
sub
in
push
or
push
adc
gs
inc
cmp
dec
enter
ljmp
xor
lahf
xchg
icebp
mov
mov
push
sbb
lea
push
and
and
orb
mov
adc
cmc
shrl
pop
jecxz
sub
add
cmp
jl
pop
ljmp
das
out
test
adc
outsl
pop
loope
adc
jecxz
in
sbb
mov
daa
ds
xchg
test
mov
iret
mov
push
mov
ja
movsb
mov
cld
jecxz
mov
test
std
fs
ret
mov
jecxz
pop
mov
mov
push
xlat
aad
gs
xor
jge
and
adc
iret
sub
or
aad
pop
fnsave
rcll
push
xor
push
mov
mov
xor
aad
xchg
int
adc
pop
movsl
scas
and
fsubrl
jge
divb
dec
outsl
xor
jle
pop
pop
adc
pop
dec
add
les
fsqrt
jbe
jecxz
std
shrb
cmp
inc
lcall
push
adc
adc
adc
fisubrl
out
int3
popf
cvtdq2ps
mull
ds
lds
icebp
aad
subb
stos
xor
push
repz
xor
pusha
cmpsb
ljmp
vphaddwd
xor
ja
test
cmp
mov
cmpsl
push
int3
push
sbb
dec
jmp
sub
or
idivl
aas
jecxz
aaa
rcl
push
lret
outsl
out
mov
mov
aad
inc
push
mov
push
stos
cmp
mov
jge
and
xchg
dec
jg
sbb
mov
dec
add
mov
loop
inc
movsl
mov
xor
sahf
ds
rorb
es
add
shl
cmp
sub
mov
cli
xor
lahf
or
ret
cli
repnz
xchg
iret
jecxz
lahf
jecxz
cmpb
mov
lds
aam
mov
push
dec
adc
xor
aas
jecxz
lods
dec
mov
mov
shlb
jl
adc
push
scas
std
leave
scas
pop
rorb
outsb
movsl
sub
push
push
add
dec
addr16
sbb
mov
pop
mov
mov
and
out
fwait
or
mov
cmp
xor
cmp
gs
pop
std
imul
cmp
push
xchg
mov
lods
mov
xor
nop
dec
lods
out
sarb
repnz
stc
pop
mov
jne
imul
pop
mov
inc
gs
jmp
pop
add
in
arpl
mov
std
pop
adc
or
es
add
mov
fsubrs
pop
imul
xchg
push
adc
adc
fiaddl
mov
dec
jbe
popf
mov
sahf
add
aam
das
mov
shrl
stos
adc
xchg
cmp
sbb
repz
fbstp
and
ret
fisubrl
push
sbb
add
icebp
je
pushl
inc
mov
popa
inc
fimuls
shlb
sbb
jnp
mov
sbb
hlt
jno
mov
jae
out
icebp
jb
inc
ficoms
push
lret
add
insb
mov
pop
movsl
jmp
pushf
xchg
mov
inc
pusha
insb
xor
scas
test
addl
mov
sti
inc
jg
orb
test
mov
sti
xchg
ds
rclb
mov
sbb
mov
imulb
daa
pop
mov
orb
or
cmpsb
mov
test
inc
call
inc
cs
adc
pop
sahf
sbb
adc
add
test
in
mov
cs
adc
jmp
pop
lock
in
out
cmp
fnstcw
adc
sbb
mov
mul
xor
xor
iret
push
jae
shll
fs
rcrb
mov
scas
rcrb
idiv
and
jae
sbbb
jne
cltd
lods
loop
cmp
pop
push
jno
mov
mov
lods
inc
ds
stos
int
outsl
jnp
push
or
repnz
xchg
xchg
pushf
push
or
out
xchg
pop
jp
pop
shlb
and
or
in
insl
fidivrs
call
js
outsl
inc
sub
xchg
dec
imul
jecxz
jp
punpckhdq
add
loop
sbb
jle
cmp
sub
insb
ljmp
cmp
push
xor
and
cmp
stos
mov
mov
fwait
ds
jle
sub
pop
lods
push
aaa
pop
xor
imul
ret
imul
mov
mov
mov
out
inc
cmp
adc
and
add
lahf
push
sbb
pop
mov
and
test
or
or
push
add
lret
mov
xchg
mov
pop
shll
ret
lea
fildl
jg
das
pop
pop
fisubs
inc
and
ja
adc
cmpsl
pop
icebp
pop
or
es
pop
add
stc
add
mov
insl
and
aam
movsl
sbb
xchg
les
xchg
in
aam
sbb
cmp
rcrb
in
sub
pushf
jge
fidivrl
pop
int
dec
stos
mov
and
jb
mov
mov
out
psraw
sbb
fisubrs
mov
out
and
mov
xchg
jns
loope
bnd
pop
mov
jmp
in
push
xor
xchg
popl
jge
inc
jmp
lds
addr16
adcl
outsb
jl
and
dec
mov
xchg
mov
pop
dec
add
jns
xlat
in
cltd
and
cmp
and
outsb
cmp
xor
mov
and
out
adc
mov
andl
imul
push
orb
mov
and
pop
add
loopne
cmovp
xchg
sub
cwtl
outsb
push
and
test
arpl
mov
rep
dec
push
mov
or
jmp
jns
out
sbb
in
sub
in
adc
lahf
les
shrb
or
repnz
cs
repz
je
jbe
mov
fidivs
test
inc
out
mov
aad
push
pop
es
xor
leave
mov
aas
lods
add
mov
jne
in
pop
rorl
jl
mov
inc
lcall
int3
mov
aam
mov
test
push
xchg
push
mov
je
or
inc
dec
mov
sbb
test
mov
lea
mov
into
add
mov
xchg
pop
push
cmp
inc
mov
iret
mov
mov
sbbb
push
sbb
stos
pusha
adc
hlt
je
push
lds
cmp
ret
testb
outsb
mov
cmpsl
and
mull
in
jl
jle
lahf
std
ds
rcrb
pushf
pop
mov
aam
pop
jno
ja
xchg
fstps
shr
add
cmp
mov
or
jecxz
pop
scas
fistps
std
arpl
es
das
jnp
into
mov
int3
lds
cmp
lea
sbb
push
cwtl
into
int
or
push
popf
iret
jp
and
dec
call
repz
mov
push
xor
adc
lds
mov
pop
pop
pop
addr16
out
fisubs
add
adc
mov
xabort
rclb
loope
mov
xor
inc
ja
mov
pop
mull
or
or
cmpsb
mov
sahf
mov
pusha
dec
repz
jo
lds
inc
sbb
sbb
mov
insl
andl
shrl
rcll
cli
pop
mov
or
rcrl
jle
mull
ret
insl
repnz
daa
sub
std
xor
stc
les
pop
pop
fs
xchg
ja
outsb
inc
lahf
lret
imul
xchg
test
xchg
loopne
pop
and
test
test
push
es
dec
push
cmpsl
repz
xchg
rcrb
push
rcrl
xchg
popf
xlat
adc
rclb
mov
jp
xor
clc
or
hlt
in
mov
mov
xchg
mov
in
pop
in
pop
in
inc
xor
ret
sub
sbb
dec
rclb
dec
shrb
mov
and
popa
out
imul
shll
lret
test
sbb
adc
adc
jge
sbb
mov
adc
dec
and
mov
bound
jno
lods
pop
bound
ss
pop
scas
push
or
es
lods
push
sub
movsb
pushf
jno
popa
cmp
movsb
scas
in
loop
orb
xchg
cmp
jp
cmc
imul
cli
mov
fstpt
jno
int3
movsb
lret
fsubrs
inc
cmp
sbb
ss
push
ret
inc
push
addr16
in
cli
test
popa
js
adc
mov
adc
iret
pop
jo
out
imul
into
and
inc
aaa
hlt
jl
cmc
mov
xchg
sbb
or
add
cmp
pop
sbb
jg
sbb
stos
xor
jl
cmpsl
test
cmp
pop
aad
adc
enter
mov
sub
loop
pop
mov
adc
dec
loop
enter
cmp
inc
fcomps
push
ret
movsl
jp
sbb
dec
pusha
sub
test
jl
int
std
push
scas
adc
sub
outsb
jecxz
jmp
lahf
sub
cltd
les
mov
das
sahf
xor
xor
jns
and
in
sbb
adc
nop
enter
rol
jecxz
xchg
fld
rcr
and
lret
and
outsl
icebp
push
andl
add
outsl
inc
sbb
jl
int3
sbb
stos
arpl
fstpl
flds
cltd
lahf
mov
inc
cmp
mov
jb
cli
loop
adc
mov
pop
mov
mov
jns
jne
jo
pushf
aaa
std
push
adc
jae
fisttpl
out
adc
shrb
ja
sbb
adc
xchg
push
pop
out
outsl
push
fwait
or
mov
mov
jne
adc
dec
add
lret
pop
xor
pop
sub
iret
jp
out
mov
mov
push
xlat
stos
imul
mov
sbb
inc
xchg
push
sahf
scas
pop
data16
mov
mov
push
sbb
pusha
sub
jmp
ret
popa
add
jle
in
mulb
sub
pop
xlat
adc
leave
ja
xchg
ja
mov
adc
test
fidivrl
jge
sarb
push
cmp
call
cmc
shll
mov
aas
jg
enter
cmp
ror
shr
fwait
dec
lret
mov
sbb
ret
or
pop
xchg
inc
insl
pop
or
pop
push
in
cli
insb
mov
repnz
sbb
out
mov
push
imull
cmpsb
xchg
fcmovnu
or
pop
dec
and
push
negb
stc
popf
jo
int3
int3
pop
sub
cwtl
cmpsb
and
xchg
cs
inc
cltd
test
jae
test
mov
add
or
lea
pop
mov
dec
and
pushf
stos
push
add
inc
es
mov
cltd
out
in
stc
mov
popa
divl
cmc
push
cmc
sub
mov
sbb
fsubs
outsb
cmp
sbb
mov
std
insl
test
test
pop
jmp
pop
mov
mov
sub
or
lds
pop
fs
or
mov
mov
dec
ds
push
jne
inc
out
idivb
inc
out
ss
cmp
fnsave
mov
jne
aad
adc
mov
aam
jp
xor
js
les
movsb
pop
xchg
inc
ret
fidivrs
repz
dec
into
push
jno
add
and
adc
xchg
mov
mov
add
sub
jae
mov
in
jnp
adc
pop
cmpsl
mov
enter
daa
pop
and
leave
or
cmpsl
mov
pop
adcl
rolb
test
fsubrs
movsb
xchg
mov
out
or
out
bnd
pop
call
mov
loopne
jle
aad
push
mov
decl
icebp
add
sahf
fldt
mov
mov
repz
push
rcrl
js
push
push
jno
call
push
mov
mov
std
mov
mov
push
enter
jo
pop
sbb
adc
cs
adc
adc
jno
aad
cs
pop
dec
out
mov
add
ret
mov
sub
lock
sbb
and
mov
pusha
pop
push
cld
inc
scas
out
out
add
scas
mov
jmp
push
mov
sbb
pop
add
cmp
sub
push
push
ret
ds
pop
rclb
xchg
inc
mov
inc
in
mov
push
nop
cmc
dec
outsl
sbb
adc
arpl
jle
xchg
cmp
fsubs
int3
stos
inc
add
repz
cmpsd
cmc
jo
sbb
rcr
add
cmp
lea
xor
mov
nop
cmpsb
jno
repnz
cmpsb
sub
dec
adc
xorl
and
mov
push
push
nop
fs
sti
outsb
imul
pop
insl
ret
adc
fwait
aad
adc
in
or
in
pop
neg
mov
fwait
cmp
adc
mov
fld
loopne
xchg
lds
sbb
loopne
sbb
mov
cmp
pop
jae
add
xchg
outsb
hlt
mov
pushf
xchg
ret
pushf
pop
xor
das
xchg
pop
js
add
sbb
mov
pop
adc
or
sbb
xchg
lret
mov
and
xor
xchg
test
sub
and
pop
mov
dec
push
or
mov
jmp
mov
add
dec
cmp
and
cmpsl
in
and
subl
add
jl
pop
stos
hlt
add
pop
add
jle
mov
sbb
dec
and
xor
int3
testb
pop
add
adc
repz
fsubrs
adcl
xchg
into
in
push
sbb
dec
sbb
or
int3
notb
xor
xor
in
push
pop
add
out
fsubr
adc
cmp
iret
cmp
or
mov
mov
aaa
out
push
stos
mov
jb
mov
sub
into
popa
lods
lock
dec
fisubrl
fidivrs
test
inc
ja
bound
jns
in
popf
scas
aad
jne
popa
xchg
clc
add
stos
das
out
test
ja
push
push
adc
mov
or
xchg
arpl
fnstenv
ficoms
jle
push
jg
aam
cltd
dec
pop
lock
test
fldt
or
jbe
jae
out
loop
mov
or
mov
sbb
sbb
push
pusha
mov
les
pop
pop
dec
fiaddl
add
insb
sub
push
mov
and
shrb
nop
push
mov
push
or
fsubp
aaa
mov
dec
fwait
pop
ret
xchg
xchg
mov
es
cmp
stos
push
mov
loope
mov
faddl
ljmp
jns
mov
jecxz
cli
xchg
jb
decl
adc
scas
cs
aas
and
gs
xor
adc
inc
sbbl
xor
and
in
xor
in
inc
gs
push
sahf
repz
add
sbb
jo
rcrl
push
mov
dec
fyl2x
mov
movsl
sub
xor
std
aad
es
mov
mov
pop
stos
or
insb
movsl
mov
addr16
leave
scas
xchg
arpl
jne
mov
and
fstps
gs
inc
lods
cmp
mov
lds
mov
and
mov
dec
and
in
add
inc
adcl
clc
fdivr
and
xorb
or
jecxz
mov
lods
cmp
inc
pop
sbb
and
jle
fucom
mov
dec
vphsubdq
and
dec
inc
stos
in
sarl
jle
outsb
mov
fmull
xchg
mov
jno
add
les
mov
fcoms
ss
pop
repz
das
add
loope
ret
xchg
mov
cs
inc
cwtl
ret
mov
icebp
jg
adc
pop
dec
into
decl
xlat
fidivrl
stc
in
jnp
test
cmp
pop
loop
mov
push
imulb
movsb
out
int
pop
pop
sub
shlb
jl
imul
xchg
mov
mov
repz
push
and
or
xchg
pop
push
inc
pop
xchg
mov
jo
icebp
in
jmp
dec
aam
mov
sub
call
jge
jmp
popa
cmpsb
pop
movsl
outsb
cld
enter
pop
jl
xor
xor
adc
jp
mov
cvtps2pd
adc
cs
cmp
lret
lahf
hlt
xchg
push
data16
xor
out
iret
shrb
aam
daa
cmp
loope
pushf
mov
gs
test
jbe
lds
mull
ret
in
std
mov
cwtl
hlt
sbb
sub
test
mov
mov
mov
adc
adc
in
insl
je
pop
pop
loop
xchg
test
sbb
add
out
or
inc
push
les
es
sahf
jnp
mov
push
cld
loop
and
jne
mov
adc
jecxz
push
push
add
into
int
and
pushf
ficompl
call
je
mov
jl
fcomp
pop
push
mov
inc
sbb
cmp
leave
adc
cltd
push
test
leave
movsb
sbb
xchg
cs
inc
dec
sbb
imul
sbb
aaa
nop
sbb
mov
dec
pushf
in
cmp
out
adc
mov
adc
lret
pop
roll
sbb
dec
test
stc
stos
mov
jo
inc
sbb
mov
jecxz
jae
icebp
movsl
pop
pop
cltd
dec
aad
xor
or
test
mov
stos
insl
sbb
or
adc
mov
ret
aas
imul
icebp
add
dec
lea
or
xor
out
mov
mov
pop
jge
xchg
pop
mov
adc
mov
jmp
push
shll
mov
js
fcompl
out
pop
and
pop
cmp
inc
pushf
stos
notl
add
pushf
test
std
push
stos
idivb
testb
push
out
pop
dec
xchg
jnp
int
out
and
fstpl
mov
fsts
jnp
sete
scas
daa
fisttpl
bound
loopne
pushf
pop
sub
and
cmp
cmc
adc
lahf
in
push
sbb
sub
xchg
mov
shl
jmp
leave
or
test
mov
jecxz
sub
scas
ds
xor
and
bound
or
aas
repz
fbld
cmp
out
les
imull
pop
xchg
xchg
pop
arpl
test
fwait
bound
inc
shrl
add
cld
sbb
mov
aas
adc
lahf
in
mov
loope
xor
add
lods
lahf
test
test
mov
xor
add
sub
imul
xor
mov
xor
shrb
call
cmc
sub
cmp
xchg
xor
icebp
xchg
xchg
inc
mov
test
ljmp
jl
sbb
pop
push
inc
repz
cmp
xchg
rcrl
xchg
cmc
mov
fistpl
cli
in
lock
sub
into
and
arpl
rcrb
cltd
imul
ja
in
push
add
pop
add
xchg
mov
out
lds
pop
xchg
sub
hlt
push
out
ljmp
cmc
test
jbe
inc
fidivrl
out
push
add
int3
std
loop
aad
sub
pop
dec
shlb
pop
adc
and
mov
xchg
add
repz
sar
mov
imul
sub
into
adc
or
pop
pop
mov
pop
cmp
sbb
mov
sahf
or
sbb
cmpsl
mov
mov
fs
adc
aas
and
fstl
stos
or
cmpsl
addr16
rcrb
rcrl
pusha
jae
imulb
adc
push
cmp
dec
xor
int3
insb
push
jne
pop
or
or
adc
and
inc
addr16
dec
add
ss
pop
test
sbb
xor
push
pop
lret
jns
and
movsb
mov
inc
fisubs
push
pushf
into
add
daa
add
jl
das
int3
or
lret
bnd
add
loope
iret
xor
mov
test
or
aaa
or
adc
in
mov
xchg
sbb
jb
dec
push
jmp
test
aas
jbe
push
sbb
ljmp
test
pop
out
int
push
push
fwait
das
mov
pop
rol
sbb
dec
ljmp
sub
pop
inc
jbe
imul
fcomps
lcall
jge
loope
and
out
xor
adc
fisubrs
or
and
inc
mov
loop
lret
addb
mov
out
mov
cld
jp
add
jae
jnp
xor
fstps
jbe
push
popa
mov
pop
cwtl
fcompl
pop
adc
push
pop
adc
aas
sahf
pop
lret
mov
xchg
sub
pop
xchg
xchg
mov
mov
cmp
cmpsb
sub
cmc
inc
lods
addr16
push
movl
jmp
adc
imulb
mov
into
lcall
cmp
fnsave
stos
cmp
pusha
xlat
lcall
lret
lods
and
pop
or
cwtl
inc
xchg
push
popa
inc
hlt
lea
rolb
setae
daa
bound
jp
mov
hlt
dec
push
movsl
dec
mov
sbb
lahf
dec
adc
inc
sahf
or
xor
mov
lods
movsl
jl
fs
bound
and
mov
shrl
sub
and
rclb
cmpsl
mov
fwait
pop
data16
xchg
inc
mov
mov
push
inc
cmp
pop
cmp
cwtl
scas
mov
movsb
es
int
adc
mov
or
fstps
jbe
cmp
lret
xor
imul
pop
push
aad
push
sahf
and
mov
les
mov
mov
adc
add
in
shrb
xor
cmp
orb
jge
sbbb
andl
xchg
mov
pop
jg
test
xor
call
mov
pop
clc
mov
fdivp
add
orl
mov
cmpsb
scas
push
jl
ja
lahf
mov
and
repnz
jns
push
xlat
xchg
mov
xchg
xchg
sarb
cmp
sti
outsl
loop
jle
xchg
xchg
inc
int3
sbb
sub
cmp
std
negl
stos
mov
fwait
add
add
add
sub
popa
cmp
push
cmpl
push
xchg
int
movsl
push
adc
daa
add
pop
stos
in
mov
lret
clc
jmp
pop
fadd
cs
sub
jo
pop
inc
xchg
fwait
lods
repnz
inc
jne
mov
lahf
and
repz
js
cmpsl
adc
les
or
jl
jecxz
jbe
pop
cmp
loop
stos
jno
ret
cmp
mov
adc
inc
xor
aam
mov
lcall
pop
dec
push
aad
mov
orb
xor
cmp
shl
xor
mov
dec
in
jno
scas
into
pushl
shlb
jo
add
je
jne
fcmovne
jg
or
sbb
stos
andl
xlat
add
jb
cmp
into
leave
fstl
sub
jl
mov
fldt
mov
add
xchg
push
out
inc
out
jmp
add
or
nop
mov
data16
loopne
js
das
cmpsl
imul
xor
imul
test
ret
sarb
aaa
stc
divps
inc
repnz
leave
jmp
testl
adc
inc
inc
pop
mov
fcmovnbe
clc
fwait
dec
inc
dec
in
or
repnz
iret
fsts
cld
or
xor
mov
insl
cmpsb
fbstp
movsb
mov
pushf
jmp
jne
xchg
jnp
hlt
or
push
pop
push
jno
ljmp
fnstcw
aas
cli
mov
mov
cwtl
int
out
mov
movsb
loopne
and
arpl
icebp
add
leave
xor
sahf
xchg
push
jno
cmp
test
xchg
nop
mov
add
xor
jne
pop
sub
ds
add
stc
js
mov
aam
bound
inc
movsb
ret
mov
lret
testb
mov
sbb
mov
ret
dec
ror
jbe
push
ss
mov
ss
cmpsl
arpl
mov
out
xor
mov
dec
in
jecxz
out
or
in
cli
fimuls
test
xor
pop
stos
mov
jecxz
les
test
les
lcall
cltd
xlat
mov
xchg
rcrl
movsb
xchg
and
dec
outsl
shrb
dec
push
mov
imul
xlat
imul
mov
inc
int
mov
das
push
jnp
out
xor
and
lret
int
repnz
sub
rclb
out
and
inc
inc
enter
pusha
dec
inc
mov
dec
push
or
fsubs
cmp
add
out
leave
int3
lahf
push
adc
mov
xchg
push
jae
xor
lock
subb
dec
out
mov
adc
inc
popf
jae
addr16
sub
in
rolb
test
mov
fnstsw
data16
xchg
xchg
pop
fidivrl
xor
xor
dec
mov
gs
enter
jmp
icebp
test
pop
js
mov
push
testb
nop
scas
lea
jno
cmovg
push
mov
push
mov
jg
cmpsb
adcb
adc
xchg
rcrb
jae
into
jecxz
inc
adc
mov
push
iret
je
inc
scas
mov
mov
mov
enter
lds
stc
sbb
adc
out
push
xchg
je
jp
je
inc
inc
mov
pop
stc
scas
test
mov
lahf
test
je
es
sub
push
in
js
rolb
pop
dec
mov
stc
outsb
cs
lahf
jmp
jp
pop
ret
stos
std
mov
jp
cmp
stc
sbb
icebp
inc
xor
dec
pushf
mov
or
icebp
mov
mov
xlat
jne
lcall
and
insl
mov
jb
mov
cmp
pop
ss
repnz
jg
lock
mov
jne
adc
xor
clc
cli
insb
cmp
inc
inc
lock
sub
jns
mov
nop
scas
rorl
hlt
xor
outsl
aam
cmp
sbb
mov
adc
cmp
inc
xor
mov
fidivl
mov
mov
jnp
inc
cmpsl
mov
loopne
push
fcompl
mov
and
jbe
sub
enter
cmp
sub
jne
xchg
test
mov
dec
add
push
jmp
add
jecxz
fistps
mov
pop
pop
pop
cwtl
or
popl
aaa
call
adc
inc
scas
mov
sub
ja
xchg
daa
flds
adcb
push
dec
add
sub
pop
cwtl
sbb
pop
scas
fisttps
inc
aad
loope
inc
lods
xor
dec
movswl
sti
jb
scas
aaa
int
testl
mov
rorb
outsl
repnz
test
xchg
ss
pop
mov
add
stos
push
mov
pop
xchg
jge
popa
and
mov
xor
mov
testb
js
lret
scas
mov
into
loope
in
or
pop
push
jg
jp
push
je
jge
cmp
fsubrs
sti
out
movsb
sarb
incb
sbb
pop
in
jp
or
xchg
nop
pop
aaa
mov
push
int
cltd
lret
xor
mov
inc
adc
aaa
repz
push
push
out
jl
enter
and
jecxz
aaa
adc
jg
pop
dec
das
bound
jne,pt
rcrb
or
dec
pusha
push
iret
lret
pop
mov
push
mov
testl
sbb
jmp
jmp
pop
xor
or
dec
xor
enter
jb
dec
inc
jo
mov
rcll
adc
fs
mov
and
stos
loopne
insb
lods
mov
stos
mov
adc
sbb
inc
xor
sbb
mov
mov
stos
dec
or
lock
fadd
rcll
ss
cs
jp
fildl
dec
push
xor
jo
stc
in
clc
dec
xchg
or
xchg
and
mov
insl
cli
icebp
xchg
rcr
add
aam
push
pcmpgtw
add
or
mov
or
cs
pop
adc
mov
cli
ja
rclb
sbb
ja
push
mov
xchg
xchg
rcll
mov
cmp
mov
rcll
shlb
adcb
push
xlat
lret
fs
mov
out
and
xlat
mov
in
mov
ss
icebp
push
or
and
and
sbb
push
js
outsl
cmp
es
mov
sbb
lea
jp
xor
pop
mov
pushf
stos
aaa
js
mov
fadds
clc
add
sub
sbbb
push
cmp
out
adc
pop
push
mov
fidivrs
fs
in
repnz
cmp
sbb
les
lcall
call
mov
cmp
clc
dec
pop
into
je
pushf
pop
test
xchg
mov
nop
daa
fstpt
test
test
sbb
into
push
enter
mov
push
jb
nop
iret
mov
popl
outsb
mov
push
cmp
hlt
ret
addr16
push
push
ret
int3
cs
imul
in
sarb
arpl
or
gs
mov
popf
lcall
lahf
fwait
daa
xchg
cmp
mov
dec
test
adc
push
pushf
adc
hlt
lds
das
adc
add
icebp
int
in
mov
popa
mov
addr16
cs
jl
into
sbb
hlt
jl
sti
cld
cmp
inc
scas
sub
movsb
mov
cmpsb
dec
cmovle
lds
shrl
in
jge
or
add
xchg
mov
clc
repz
out
cmpsb
test
mov
out
xchg
stc
in
pushf
stc
iret
mov
add
insb
cmp
jnp
scas
addb
sbb
nopl
and
push
add
fldl
femms
inc
jae
dec
stos
dec
pusha
repz
cmp
imul
dec
loop
sbb
movsb
jo
xchg
daa
jo
xchg
mov
xchg
test
int
jg
fbstp
mov
add
mov
lds
mov
ret
shlb
dec
pop
dec
xchg
enter
mov
mov
out
mov
and
scas
shll
gs
arpl
xchg
mov
push
inc
dec
sub
lods
stc
adc
loop
cvtps2pi
lods
fimull
and
jno
mov
xchg
insb
mov
mov
inc
add
dec
test
jo,pn
cmp
sti
xor
jge
rcrl
sbb
jle
lds
lcall
mov
adc
jne
fwait
sub
inc
je
in
sub
mov
pop
lods
sti
xor
dec
lea
adc
stos
lcall
add
filds
mov
lret
pop
test
sub
jae
fs
fwait
imul
imul
pop
jno
jns
mov
xchg
or
addr16
rcrl
mov
test
test
in
out
mov
and
adc
nop
lret
jmp
mov
cmp
mov
or
dec
call
inc
and
dec
iret
in
lods
mov
mov
jge
pop
mov
gs
inc
rolb
daa
mov
popaw
pushf
aam
aam
xlat
mov
push
fwait
xor
mov
gs
push
rcrl
cmpsb
loope
mov
fwait
dec
aas
pop
lods
sub
sti
push
addr16
and
sbb
shlb
push
shr
out
loope
arpl
sbb
insl
pop
icebp
xchg
mov
push
dec
pop
fiaddl
popf
or
fisttpl
mov
xchg
repnz
int3
int
mov
sahf
or
sbb
dec
sbb
pop
inc
mov
xchg
int3
sbb
mov
jns
jl
fmul
imul
push
loop
mov
jnp
int
jns
inc
loop
xchg
sub
ret
mov
add
jle
adc
repnz
xor
lods
cmp
ds
xchg
inc
in
xorl
or
sub
fiadds
stos
xor
xchg
insb
dec
sbb
inc
cmp
xor
sbb
repnz
clc
andb
cs
icebp
push
ljmp
or
pop
cwtl
mov
jge
out
movsb
sbb
pop
notl
int3
in
sbb
notl
mov
inc
xlat
mov
or
lahf
stos
fs
test
mov
rorl
push
inc
je
fmul
outsb
int
mov
aam
sub
dec
push
adc
mov
mov
xor
sbb
in
cmpsb
push
test
xor
xor
mov
sbb
mov
add
mov
out
ret
js
adc
fadd
pop
bound
xor
jg
xor
aaa
sub
outsb
sub
mov
dec
pop
in
push
repnz
loopne
mov
andb
je
pushf
dec
cmp
clc
mulps
outsl
lds
shll
sbb
mov
cld
or
push
jle
scas
iret
daa
scas
jno
or
pop
xchg
adc
or
aam
mov
or
outsb
inc
xor
test
sbb
mov
mov
mov
lods
divl
push
testb
imul
push
xchg
scas
inc
cmp
fldenv
inc
movsl
inc
xchg
xchg
lcall
rcl
scas
aam
inc
rclb
ret
int3
push
stos
xor
jae
sub
push
jmp
jg
adc
push
inc
mov
xor
xor
pop
jle
pop
or
pop
dec
mov
push
adc
sbb
pop
pop
pop
cmpl
and
hlt
or
lock
stc
pop
in
je
jno
out
shll
stc
push
mov
jae
xlat
inc
xchg
or
dec
sub
loop
imul
add
mov
test
xchg
in
lods
lock
and
mov
add
or
arpl
rorl
out
pop
jl
push
mov
or
mov
scas
imul
inc
jp
mov
push
lcall
add
cli
fs
int3
or
jne
xor
ret
sbb
jae
hlt
mov
cli
repnz
dec
mov
inc
mov
imul
rorl
ja
lea
movsb
rorb
mov
xchg
icebp
cmp
outsl
fistl
push
ljmp
stc
inc
pop
adc
mov
ret
lahf
sbb
dec
in
mov
cwtl
adc
ret
ret
and
fwait
sbb
mov
lret
cmp
ss
mov
pusha
rorb
js
and
push
lods
pop
dec
jmp
lret
xor
jecxz
xchg
pop
add
xlat
jg
sahf
cwtl
out
xchg
orl
mov
int
lahf
in
jmp
pushf
dec
sub
mov
nop
add
push
clc
fs
push
and
mov
je
jl
sbb
cmp
xor
loope
adc
sti
fs
insb
and
xchg
inc
es
push
mov
stos
and
adc
push
sbb
push
push
ret
push
mov
inc
pop
mov
xchg
loope
mov
jae
shrb
test
pop
mov
pusha
iret
xor
icebp
setnp
loope
negb
sti
jno
dec
dec
neg
cld
lahf
pop
in
mov
icebp
sbb
icebp
mov
push
pop
sbbl
fidivs
stc
jge
lods
outsl
push
sti
or
aam
daa
mov
icebp
push
js
or
test
icebp
in
int3
mov
lret
xchg
rcll
mov
xor
jns
imul
and
pop
push
data16
ret
adc
cpuid
inc
add
jmp
sti
fwait
test
cmpsb
push
push
outsb
xor
push
repz
sarb
cmp
mov
pushf
hlt
arpl
jg
fistpll
fisubrs
cmp
jae
enter
mov
icebp
pop
int3
rcl
sets
inc
out
fucomip
and
subl
mov
adc
loopne
xor
xor
in
iret
std
pushl
sbb
in
insb
and
ret
jecxz
push
enter
mov
mov
xor
pop
lea
dec
mov
into
mov
incl
mov
lock
or
mov
push
add
out
xchg
das
outsb
push
popa
test
int
push
scas
jp
push
int3
jns
mov
dec
jnp
xchg
mov
push
shrd
das
adc
in
mov
add
xchg
sarl
adcb
xchg
enter
lock
cmp
cltd
or
repz
or
pop
dec
loop
aaa
lock
shlb
mov
pop
enter
and
mov
dec
fsin
into
and
arpl
insb
push
push
aas
and
pcmpeqw
movsb
sub
lea
xor
jge
addb
cltd
or
pop
push
scas
dec
aad
out
and
out
lock
ret
jg
lret
int
mov
xchg
xchg
rorb
and
stc
fs
aas
jo
mov
cli
mov
arpl
inc
xchg
cmc
cwtl
repnz
and
rdmsr
xor
mov
add
bound
mov
xor
lock
add
push
psllq
mov
fwait
jb
mov
mov
jae
and
adc
cli
inc
push
jecxz
enter
or
or
xor
inc
sub
hlt
adc
notb
iret
cmc
adc
push
into
push
stos
fldz
jbe
aaa
pop
xchg
inc
call
fbld
movl
scas
inc
mov
sbb
mov
fisubrl
fcom
out
daa
aas
bound
sti
xchg
shrl
mov
add
andb
add
ret
dec
loopne
clts
sub
cmpsb
cwtl
cmc
mov
repnz
adc
cmp
fcompl
inc
xchg
mov
pushf
and
pop
outsb
pop
mov
outsb
lcall
or
xchg
dec
and
dec
xlat
cmp
loope
fsubl
inc
sub
pop
addr16
cmp
aas
adc
jg
push
fdivrs
jno
jb
push
addb
out
outsb
insb
lret
insb
or
int
jmp
cld
je
scas
dec
xchg
std
shlb
push
mov
aad
mov
test
fists
inc
xchg
cli
cmp
sub
cmp
lods
and
rcrl
movsb
jbe
outsb
bound
adc
xchg
push
or
movsb
mov
test
test
popa
push
sbb
mov
fwait
insb
fcomp
and
add
sub
mov
addr16
sbb
out
fdivrl
fnstcw
xchg
scas
roll
loop
mov
mov
fists
xlat
push
movsl
xchg
nop
filds
out
and
mov
idivl
cltd
jns
shrl
adc
mov
fwait
adc
mov
sbb
fidivrl
xor
insl
mov
repz
ljmp
jle
mov
mov
xor
imul
dec
push
call
adc
loopne
adc
inc
jnp
stc
mov
aaa
pusha
in
inc
push
xchg
jg
test
or
lock
sti
rclb
icebp
sbb
stos
xor
popa
cld
cwtl
or
xchg
arpl
call
cltd
adc
jno
out
adc
fcompp
outsl
push
mov
int
insl
or
ret
add
dec
dec
pop
adc
es
mov
shll
or
arpl
shl
jge
jb
ds
sub
inc
mov
add
jne
test
dec
cmp
xchg
ss
push
inc
insl
pop
daa
cmp
subb
stos
add
sub
lret
iret
push
aam
loop
inc
mov
dec
lock
add
iret
in
sub
cmp
loopne
nop
cli
int3
dec
sahf
sbb
ljmp
pop
out
dec
and
pop
cld
push
jne
and
jae
shlb
cli
pop
int
dec
add
push
rcrb
xor
add
stos
icebp
in
stc
mov
dec
imul
jle
sub
xchg
or
sub
movsb
inc
xchg
insl
fidivrl
out
and
jmp
sbb
jle
outsl
adc
fstl
xor
dec
lahf
icebp
xchg
ja
push
jl
inc
das
call
mov
cmpsb
fcoms
shl
lahf
fbld
iret
loop
mov
movl
lahf
jg
mov
test
pop
loope
mov
out
xchg
jnp
jecxz
mov
in
pop
sbb
icebp
sbb
in
xor
push
inc
xlat
push
mov
pop
ret
psrlq
mov
jns
or
sbb
xor
std
push
or
jns
shlb
xor
xchg
cmp
push
or
divl
mov
mov
pop
sbb
sub
lea
mov
dec
outsb
xor
jg
enter
aam
add
and
icebp
leavew
push
xchg
push
aaa
mov
pop
or
orps
adc
cwtl
out
mov
jp
and
int
test
iret
cmc
dec
dec
dec
push
mov
gs
nop
and
mov
jns
xchg
out
mov
leave
jp
incl
inc
test
pushf
mov
xchg
test
cmp
cmp
pop
jecxz
pop
pop
lods
sar
imul
out
push
lret
pop
add
xchg
addr16
mov
push
rcrl
pop
adc
rorl
mov
jo
clc
or
clc
jno
or
arpl
mov
jbe
sbb
jo
aas
cmc
gs
xchg
xchg
or
enter
std
add
mov
and
cmp
fwait
sub
aad
pop
loopne
mov
cltd
loope
lods
hlt
mov
add
out
push
lds
in
jne
adc
loope
push
add
roll
out
cwtl
cmp
jg
out
fdivrp
out
cmp
inc
lods
mov
ljmp
mov
xchg
cli
outsl
add
flds
xor
jne
push
xor
popl
adc
mov
sbb
mov
jb
daa
test
imul
sbb
or
inc
xor
popa
jae
rolb
ret
fldt
inc
adc
jb
sub
and
cmp
pop
js
mov
lcall
sarb
lret
jae
adc
or
adc
adc
scas
loopne
mov
push
shll
lahf
popa
aad
stos
xchg
iret
xchg
mov
and
pop
push
shrl
sbb
sti
fbstp
mov
cwtl
int
sub
lahf
and
xchg
push
ret
push
xlat
lods
imul
mov
clc
and
negb
cwtl
or
sub
adc
nop
sbb
or
mov
cld
or
repnz
inc
fnstenv
sbb
pop
cmc
in
adc
pop
out
sbbb
mov
cmp
cs
jo
nop
push
push
out
xor
mov
stos
mov
sbb
jo
xchg
jmp
lcall
xor
inc
sbb
loope
pop
push
fisubrs
insb
mov
mov
sub
jecxz
int3
xor
lahf
aas
fmull
iret
inc
add
and
jg
jle
in
mov
dec
rcrb
mov
cs
and
jnp
imull
add
out
cmp
stc
push
test
test
insl
push
je
push
add
mov
or
pop
jns
popf
and
repnz
pusha
dec
sbb
stos
jge
xor
or
mov
loope
jge
sbb
rolb
lahf
test
fcoml
pusha
je
ret
sub
ljmp
lcall
mov
rcrb
push
mov
push
in
xchg
or
shlb
add
jbe
inc
mov
push
lods
xor
dec
cmc
leave
and
enter
ret
push
fnstsw
iret
xor
out
inc
pop
mov
lahf
push
arpl
loop
fistpl
mov
ljmp
data16
mov
addb
ja
dec
gs
cs
imul
cmp
or
and
mov
in
jle
sbbb
pushf
jecxz
or
stos
inc
fidivl
xor
fs
add
xor
repz
arpl
je
pop
cmp
jns
inc
jbe
sub
lcall
in
rclb
mov
movsl
js
cmp
mov
sub
push
out
pop
fcmove
cmp
fidivrs
adc
xchg
in
push
repz
divb
jge
insb
clc
adc
mov
pop
hlt
push
js
cmpsb
subb
loop
adc
pop
std
pop
jl
cmp
stos
packuswb
jle
jl
mov
sbb
jae
icebp
dec
int3
sub
sub
and
ljmp
sbb
lea
sub
jne
hlt
mov
jbe
out
or
aas
xor
in
sbb
std
cmpsb
jge
loope
mov
cmp
fldl
push
pop
movb
ds
outsb
jne
add
arpl
dec
adc
adc
push
pop
outsl
sbb
out
rclb
xchg
mov
add
shlb
mov
cmp
cmpsb
jne
int
fwait
or
rorl
lods
mov
and
cmp
out
shrl
and
mov
or
mov
cmc
jb
jge
jne
loopne
insl
mov
push
and
stos
push
adc
lret
cmp
dec
fwait
mov
push
fdivrl
or
popf
adc
ss
mov
call
adc
jb
out
cmpsb
dec
adc
inc
xchg
and
sub
lcall
rorb
add
mov
lods
insb
dec
cld
ret
out
xor
pushf
adc
subb
jecxz
mov
fucomp
ret
mov
stos
decb
out
xchg
fidivs
leave
test
xchg
cs
add
and
cld
lea
or
das
add
mov
jne
add
je
inc
or
stc
adc
jbe
lods
mov
testl
das
push
or
in
pop
jno
pop
sti
mov
cld
scas
push
icebp
pop
sbb
outsb
mov
xor
in
inc
mov
int3
xor
rcll
pop
shlb
xchg
fsubr
fwait
aaa
sbb
aaa
cmp
sub
sub
es
sbb
xchg
xchg
les
popa
xchg
movsl
dec
gs
inc
sti
and
or
jle
fsubrl
popf
inc
pop
in
jb
mov
sti
shrb
add
lds
mov
das
inc
or
sub
xor
push
mov
cmp
shl
jnp
sarl
cmp
insl
clc
das
inc
dec
adc
inc
adc
popf
push
aad
mov
addl
or
or
push
jno
xchg
sti
dec
int3
inc
fiadds
xchg
lcall
repz
int3
add
cli
repnz
decl
ret
fimull
push
test
sub
xor
out
xchg
sbb
push
aam
pop
add
dec
push
call
es
jecxz
add
das
rcr
xor
shrb
out
lahf
mov
push
push
mov
aas
mov
jnp
sub
jo
adc
mov
repnz
xor
and
popf
dec
or
dec
push
pushl
nop
inc
sub
push
ds
les
or
add
mov
out
inc
mov
jl
xor
rolb
cwtl
pop
xor
xlat
sbb
aam
dec
mov
out
xor
cmpsb
mov
scas
mov
stc
roll
xchg
or
inc
mov
mov
enter
pop
inc
cmp
dec
mov
xor
cmp
pop
aas
out
jbe
fistl
adcb
fidivl
jecxz
cld
daa
stc
dec
aaa
lcall
mov
mov
mov
push
stc
sub
xchg
mov
std
pusha
dec
ficoml
cld
xchg
lods
insb
mov
pop
clc
fidivrs
rolb
lods
rcl
jl
sbb
dec
call
push
scas
mov
inc
jnp
js
movsb
ficompl
dec
cmpsl
xchg
mov
pop
xor
outsl
push
addr16
xor
fsubl
rorb
dec
in
pop
testb
sub
xchg
ret
add
or
or
cmp
out
hlt
add
scas
push
jp
pop
jno
or
lds
jle
mov
mov
icebp
xchg
mov
test
clc
add
dec
insl
jl
push
add
lock
mov
stos
test
fs
arpl
addl
cli
bound
mov
cli
sbb
movsl
repnz
cltd
stos
sahf
sbb
push
lahf
mov
sbb
shlb
jecxz
ja
mov
repnz
sbb
in
into
xchg
popl
fidivrs
or
sub
aaa
mov
ljmp
aad
mov
loopne
add
shrl
push
sbb
ret
push
scas
push
push
ja
leave
mov
jbe
aam
xor
pop
ss
cmp
sbb
mov
lret
or
nop
push
sbb
mov
cmc
xlat
lock
aaa
popa
je
sbb
popa
mov
jno
and
mov
xchg
fs
add
arpl
xchg
jl
rolb
ret
aas
cvtdq2ps
lret
js
insb
add
sub
aas
mov
mov
insb
lcall
inc
popa
std
stos
mov
sbb
loop
add
pop
aam
cld
in
jb
xor
popf
icebp
push
flds
clc
mov
imul
aas
ja
ss
fiadds
insl
add
out
andl
adc
fimuls
mov
sub
jecxz
cmp
pop
insb
aas
mov
or
scas
popa
cld
sub
mov
sbb
sub
push
mov
pop
enter
sbb
je
into
sub
dec
iret
fldpi
sbb
lods
scas
stos
add
cmp
sub
popa
or
std
sbb
adcb
and
mov
ja
mov
imul
cmp
out
dec
fmuls
lcall
jbe
bound
cmpsl
mov
clc
jecxz
push
pop
add
add
mov
mov
hlt
or
scas
xchg
bound
adc
mov
mov
add
stos
imul
inc
mov
ds
imul
pushf
pop
add
mov
push
jp
push
int
push
add
ficoms
insl
call
cwtl
sarb
repz
adcl
rcr
jno
or
int
leave
loopne
sbb
leave
fwait
push
lahf
insb
aas
stos
pushf
stos
pop
mov
adc
mov
jecxz
push
cld
and
test
sbb
lds
arpl
rcrb
mov
xchg
fldl
icebp
push
insb
in
into
push
push
mov
sub
outsb
cmp
aaa
mov
push
push
leave
inc
pop
jecxz
jecxz
mov
push
fldt
fisubrl
popf
rolb
enter
sub
aam
sti
cmp
xchg
mov
xchg
xor
mov
mov
push
mov
gs
push
xor
ret
pmaddwd
loope
shrb
cmp
daa
mov
and
cmp
or
add
imulb
mov
jnp
push
mov
dec
sbb
jae
or
xchg
fildll
loop
in
out
cmp
decb
cmpsl
add
punpckldq
mov
fiadds
mov
subb
lods
mov
cmp
xor
imul
jle
xchg
repz
xchg
or
rorb
je
cmp
out
fxch
dec
mov
add
mov
mov
jne
jge
mov
mov
and
js
and
cmpsb
rcl
and
jae
push
fstl
daa
jle
pusha
filds
bound
jecxz
leave
sbb
jp
or
addr16
ljmp
pop
jae
lods
mov
push
jmp
or
push
out
inc
into
mov
test
mov
clc
imul
sub
testl
adc
inc
cmpsl
cwtl
cmp
in
fstpt
or
test
xor
inc
inc
sbbl
fiadds
inc
fstp
or
call
in
mov
cltd
push
inc
adc
pop
adc
push
jp
out
add
mov
in
and
jle
or
daa
bnd
push
xlat
jne
aas
jne
push
test
jo
subb
xchg
movsl
add
je
fwait
std
push
enter
jge
filds
mov
cmp
sahf
popl
xor
mov
lcall
je
test
push
negl
pop
cltd
in
leave
xchg
test
sar
lahf
push
or
call
mov
iret
pop
cltd
loopne
sahf
jp
and
mov
test
psubsb
sub
adc
inc
jnp
popf
rclb
sbb
ret
decl
add
ja
jle
sub
mov
mov
sbb
ror
dec
notl
or
lds
fldt
xor
xor
ljmp
fcmovnbe
arpl
dec
adc
nop
sub
sub
push
dec
dec
pinsrw
mov
sbb
ss
mov
fwait
mov
in
adc
mov
ja
xor
test
mov
int
mov
lock
jne
xor
add
jb
add
ja
mov
jecxz
dec
adc
and
es
xchg
imul
push
adc
in
repnz
inc
push
xor
in
pushf
adc
outsl
push
jo
dec
cmp
lahf
jg
xor
mov
xlat
or
nop
jbe
push
add
sub
rolb
in
pushf
neg
fadds
or
and
mov
xchg
mov
jne
test
and
into
sub
sub
iret
and
mov
push
push
and
jg
ljmp
std
mov
pop
or
dec
orl
add
aad
adc
cmp
lea
jecxz
inc
push
das
addr16
xchg
push
aad
test
imul
scas
popf
sbb
popa
sub
ficoml
outsb
pushf
or
call
xor
lds
imul
imul
pop
lahf
out
dec
lret
pusha
test
in
or
mov
int
xchg
sbb
mov
xor
popa
and
add
fmuls
cmpsl
xchg
cs
sub
stos
pop
push
call
orb
popf
mov
fsub
mov
push
insl
dec
jp
sub
dec
nop
jns
aas
aas
icebp
gs
test
outsl
out
jo
xchg
test
enter
mov
mov
xor
fs
nop
popa
imul
gs
mov
ret
xlat
or
adcl
in
es
test
shrb
lcall
and
push
dec
push
sub
xor
fsubp
ret
xchg
lds
mov
fldl
pop
lea
imul
shl
jb
sbb
mov
or
les
imul
aam
ret
sahf
mov
movl
pop
mov
es
push
lock
or
add
addb
lods
aam
insl
shl
outsl
test
mov
into
adc
cmp
ja
iret
loop
rcrl
pop
popa
call
mov
sbbb
adc
push
lahf
xor
dec
insb
pusha
xor
fnstcw
adcl
xchg
push
adc
insl
push
fisttpl
fidivrl
cmp
lds
stos
add
xor
mov
xchg
ret
jg
or
out
jecxz
lea
inc
aas
jo
call
mov
fnsave
push
das
xor
and
pusha
cli
lods
loop
cmp
jp
mov
inc
int
lock
dec
mov
jbe
lods
cmc
add
xlat
shlb
push
data16
lea
je
sub
pop
adc
mov
mov
test
sub
mov
mov
andb
adc
dec
or
or
mov
nop
pop
xchg
lods
sbb
cltd
aam
pop
sbb
or
out
outsl
jecxz
add
das
mov
je
enter
cmp
rorb
inc
mov
fisttpll
adc
bnd
mull
sbb
jnp
xchg
vphaddbd
sbb
mov
fldl
cli
xchg
push
scas
lods
sahf
fsub
xchg
mov
xchg
push
sbb
in
je
mov
mov
scas
bound
leave
inc
mov
sub
jp
xor
pop
in
sbbl
sbb
nop
lods
jnp
dec
adc
mov
mov
dec
dec
cmp
mov
sub
add
xchg
pop
push
pop
xchg
push
push
xor
popf
cmp
pusha
repnz
nop
rol
lock
xchg
das
push
test
push
jb
insl
fs
pushf
sub
movsl
xchg
cmpsl
sub
das
xchg
sbb
push
mov
xchg
add
movsl
mov
fwait
repz
enter
call
enter
mov
les
dec
ss
sbb
andnps
andb
adc
pop
mov
push
jne
pop
cmp
std
mov
movsl
jb
jecxz
rcrb
inc
outsb
cli
fchs
adc
sarb
pushf
mov
mov
mov
xchg
pop
inc
ljmp
rcrb
js
mov
dec
in
outsb
stos
sub
and
cmp
and
pop
xorb
push
bound
mov
sub
sub
out
mov
fistpll
nop
test
mov
add
es
ss
jno
xchg
in
jno
pop
fcomi
fmull
in
in
lcall
fwait
mov
lock
jnp
mulb
sbb
adc
jecxz
sub
sub
jp
mov
cmp
sub
xchg
test
dec
stos
ret
or
mov
roll
inc
fsubr
movsl
mov
dec
shr
sub
scas
imul
xchg
std
orl
flds
cmp
push
or
add
iret
out
inc
xor
push
loopne
in
cwtl
idivl
dec
and
test
dec
push
shll
test
xchg
mov
loopne
sbb
ds
adc
xchg
dec
and
xchg
insl
sub
pushl
pushf
jmp
pop
punpckhbw
sbb
sbb
adc
out
adc
dec
pop
xlat
add
add
jbe
jnp
sbbl
adc
adc
add
dec
loop
xchg
rcrl
fadds
inc
js
cmc
rolb
mov
jl
push
imul
outsl
ret
jle
test
enter
shll
les
das
arpl
mov
jno
and
lods
clc
stc
clc
ret
imul
loop
xchg
call
inc
mov
and
xchg
or
neg
mov
ret
sahf
aad
add
and
popf
insb
adc
mov
arpl
push
js
mov
call
cld
cmp
inc
sub
rcr
cmp
test
jmp
scas
iret
pusha
and
pop
cmp
xor
stc
and
shrb
fs
and
push
pushf
inc
push
inc
and
adc
inc
cwtl
clc
jne
movsb
xchg
xchg
mov
sub
lods
xorb
nop
scas
xchg
repnz
adc
adc
push
cmc
sub
ljmp
jno
cmpsl
data16
jne
inc
lods
xor
idivb
add
cmp
and
mov
jl
lcall
dec
sbb
jecxz
mov
xor
je
add
or
add
test
dec
xchg
rorb
dec
pusha
or
sbb
insb
cmp
sub
xchg
bound
int
or
mov
adc
getsec
int
repz
out
popa
add
jp
cmpsl
test
aam
push
push
push
test
mov
pop
addr16
inc
sbb
jb
jo
xor
inc
lock
fstl
fstl
mov
fwait
mov
in
or
in
repnz
and
shl
fldcw
adc
mov
and
fsubrl
mov
xor
jns
cmp
lea
icebp
ficoms
cmpsb
add
jl
repz
xor
or
nop
pop
xor
mov
test
bound
test
jnp
or
adc
roll
or
fldl
stos
push
cmp
inc
stos
packuswb
movsl
fyl2x
xor
jmp
cld
adc
mov
and
lret
stos
mov
int
push
test
inc
mov
pop
cmp
inc
sub
out
xor
xor
movsl
imul
outsl
xchg
lcall
pop
xchg
sti
aas
mov
in
add
ljmp
push
mov
mov
mov
jae
xchg
mov
cld
mov
ror
adc
cmp
dec
pop
sbb
imul
mov
mov
mov
cwtl
addb
mov
outsb
mov
fadds
fdivs
add
sbb
rorl
sub
jnp
jb
inc
popf
scas
cmp
arpl
movsl
pop
loope
or
sahf
cmpsb
xchg
shll
fsubrs
out
repz
cmp
pop
push
fcmovu
xor
test
imulb
setl
cmp
js
push
inc
je
repz
fs
pop
push
shl
dec
std
jbe
inc
lret
popf
dec
add
addb
cmp
out
jae
icebp
fisubrl
scas
mov
pop
sbb
rcl
mov
cmpsl
scas
std
je
and
mov
xchg
cmp
push
bound
cli
sub
icebp
mov
out
out
and
xlat
sub
jne
and
aad
pushf
hlt
sbb
cmp
lods
adc
push
leave
mov
jno
push
sarb
call
ds
dec
stc
push
adc
loope
fcmovnbe
pop
je
cwtl
or
jns
add
repnz
inc
in
movsb
das
push
jecxz
repnz
test
pop
xchg
and
and
cmc
mov
stos
add
loopne
xor
pop
ds
and
dec
mov
shll
in
mov
cmpsb
cli
in
insl
cmp
cli
lods
add
jg
pop
xchg
sahf
adc
push
dec
movsb
leave
shl
push
lret
test
adc
sub
or
addr16
cli
or
std
std
imulb
jno
mulb
insb
int3
int
jo
push
mov
mov
rolb
fadd
aas
mov
dec
mov
adc
push
mov
sub
dec
bound
lea
sub
xchg
inc
adcb
pusha
adc
add
sbb
shl
add
daa
js
pop
lock
add
jb
cmp
or
lahf
cwtl
xlat
sbb
repnz
jo
mov
xchg
sub
pop
popf
imul
ds
stc
adc
sbbb
clc
or
faddl
sub
je
adc
out
lods
repnz
dec
adc
stc
fdivrs
cmp
jl
addr16
sub
inc
stos
cmp
imull
dec
and
aad
aaa
mov
dec
and
pop
pusha
js
mov
ja
xor
push
push
lcall
mov
mov
inc
push
loope
push
pop
pop
mov
int
rorb
arpl
sub
loope
and
cli
and
xor
test
jp
out
lds
shr
fs
mov
add
les
xchg
lret
push
shrb
cmp
inc
cmp
iret
mov
sbb
sbb
sub
lret
inc
add
fs
pop
xchg
cmpsl
jg
nop
dec
inc
inc
lcall
stos
lods
jmp
shll
aam
lods
cmp
or
imul
push
addr16
clc
out
dec
cwtl
mov
adc
in
cmp
pop
sub
jo
xor
jmp
dec
pop
pop
push
jecxz
mov
call
icebp
add
xor
outsl
push
fildll
and
or
jnp
inc
push
add
jno
lcall
and
sub
test
sub
mov
dec
xorb
jno
push
in
inc
push
ja
mov
mov
lret
sub
adc
xchg
out
fisttpl
xor
cwtl
incl
xchg
stos
pop
das
mov
and
sahf
or
mov
sahf
cmp
cld
sahf
lock
mov
xchg
jno
lcall
jl
mov
loopne
jno
test
pop
inc
cmp
adc
daa
out
adc
lods
shlb
sub
cli
push
adcl
add
repnz
mov
add
push
adc
shrb
push
jae
sbb
std
adcb
rorl
call
inc
cmpsl
add
cltd
mov
sbb
mov
icebp
popa
jae
int
adc
out
mov
inc
jne
pushf
sbbl
xchg
mov
sarl
push
mov
and
fprem1
movsb
add
outsl
jecxz
xchg
enter
jb
dec
pop
jg
sbb
lcall
mov
int3
ja
inc
fbstp
fwait
daa
js
push
xchg
insb
je
mov
push
jecxz
cmc
jg
hlt
frstor
dec
xchg
push
mov
and
push
pop
sbb
cli
cmpsl
xchg
clc
enter
inc
jg
testl
adc
sbb
or
jno
inc
lods
test
incb
pop
rcl
add
outsl
icebp
adc
int
bound
sarl
cmp
sbb
inc
jo
js
mov
orl
loop
mov
xorb
shrb
fstpt
mov
xor
mov
xchg
add
and
test
rclb
jne
push
divb
sub
jns
pop
test
aad
cmp
shl
inc
fdiv
and
daa
cli
xor
bound
push
cmp
cmp
sbb
mov
fisttps
lea
mov
xchg
sbb
push
push
lahf
pop
sbb
scas
and
into
xor
sbb
lock
popa
pop
add
inc
arpl
xchg
test
stos
adcb
mov
in
cmp
sub
pushf
push
pop
dec
or
mov
sub
aas
dec
out
xchg
dec
movsb
and
int
and
xor
notl
in
dec
sub
loopne
or
dec
popa
iret
lea
push
push
lock
stos
nop
and
mov
xor
das
icebp
sbb
dec
mov
repz
cmpb
test
jns
sub
xlat
adc
jge
jp
repz
mov
cmc
std
adc
fdivs
xchg
mov
sub
jecxz
xor
push
popa
fsub
mov
fisubl
std
fimull
insl
push
clc
and
mov
jge
mov
pop
add
lds
xchg
adc
cmpsb
push
cmpsl
sar
xlat
fcompl
cmpsb
xor
push
ja
sbb
mov
scas
int3
ret
outsl
idivl
pop
outsb
fistpll
xlat
rorl
aaa
fs
mov
jle
movaps
out
int3
mov
loopne
lahf
or
jg
out
push
cltd
insb
aas
into
jno
xchg
mov
in
jp
decl
arpl
lods
jo
xchg
mov
dec
xchg
inc
mov
push
jle
mov
mov
test
push
push
push
call
cmp
and
add
sahf
mov
hlt
pop
addb
push
and
xchg
mov
mov
sbb
xor
xchg
pop
sub
shl
cwtl
lret
fstpl
fldl
or
ja
leave
inc
xor
cmpsl
shrb
and
mov
jp
sub
jb
cli
push
cwtl
add
push
lock
mov
imul
inc
repz
ss
push
shll
out
lea
and
sti
mov
adc
rorl
loopne
add
mov
out
icebp
aas
pop
shlb
mov
pop
filds
adc
push
pop
ljmp
or
inc
outsl
daa
mov
decl
dec
add
les
sbb
inc
adcl
fsubrs
fld
fiadds
dec
adc
sub
int3
sub
imul
scas
jo
notb
sbb
imul
xchg
sti
mov
mov
push
aaa
mov
cwtl
or
mov
xchg
outsl
pop
pop
fwait
adc
or
push
inc
insl
into
dec
fcmove
jns
push
sub
daa
push
sti
in
inc
iret
in
jg
cmpsl
mov
out
popf
aaa
or
mov
xchg
and
jg
or
xor
in
lahf
in
push
jne
push
popl
add
test
push
inc
lea
mov
data16
push
push
adc
jno
ret
xchg
sti
test
rorl
rclb
mov
inc
inc
das
rorb
adcl
xchg
pusha
faddl
stc
gs
add
aas
pop
mov
xor
pop
pmaxub
stos
jae
pop
dec
xor
daa
shll
push
push
call
push
mov
sbb
sub
ficomps
cmp
stos
push
jno
pop
mov
sub
mov
adc
test
fwait
and
xchg
jecxz
sbb
mov
dec
push
repnz
hlt
jae
in
ja
mov
cmpsb
divl
sbbl
sbb
in
cld
sub
divb
test
mov
sub
filds
repnz
jmp
fisubrs
dec
enter
mull
jmp
dec
mov
mov
jo
mov
out
inc
pop
dec
xor
mov
sub
mov
jne
pop
mov
inc
sar
daa
mov
lret
jmp
addr16
fs
mov
stc
xor
mov
push
jecxz
pop
aad
loopne
mov
sbb
dec
shr
loope
mov
repz
std
adc
fisttpl
fistpl
jbe
mov
mov
aas
jge
mov
mov
cmp
mov
cmp
popa
mov
cmp
rorl
addr16
xchg
cmp
and
dec
mov
das
out
push
mov
jmp
xlat
das
je
jae
and
add
lea
dec
mov
loope
xchg
add
push
shll
and
call
lods
or
push
roll
lea
in
sar
cld
xchg
mov
sub
jge
repz
mov
inc
lods
and
shlb
push
push
das
imul
sub
or
xchg
jg
jg
xchg
shll
xchg
inc
mov
push
or
stos
or
xor
push
ficoms
or
mov
mov
jmp
int
xchg
in
mov
daa
xchg
ret
inc
cmp
out
cmp
sbb
rol
cmp
notl
mov
cmpsl
pop
ret
fiadds
das
mov
leave
jns
sbb
mov
addr16
jecxz
imul
or
mov
dec
jmp
pop
jb
insl
dec
pop
cli
push
outsl
adc
pop
sub
lea
aad
sub
xchg
iret
aam
shl
pop
fcoml
cwtl
decl
or
and
fnstsw
mov
imulb
inc
stos
lock
in
push
aad
mov
push
inc
roll
xchg
fiaddl
or
mov
out
cld
repz
cmp
and
sbb
jb
pop
sbb
sbb
dec
sbb
test
popl
sub
dec
int
repnz
cltd
retw
data16
mov
push
rcll
mov
push
loopne
movsl
push
dec
sbb
mov
add
and
dec
shll
push
push
enter
lret
dec
je
mov
xchg
xchg
adc
and
jg
dec
xchg
rcrb
sbb
jns
popf
jl
fisttps
jp
inc
int
shll
dec
pop
call
or
push
std
or
std
ljmp
les
enter
sbb
daa
mov
jne
ja
lret
stos
mov
mov
add
outsb
mov
mov
sbb
add
add
mov
inc
shrb
enter
shll
ljmp
loopne
ret
add
das
jmp
sub
sub
cmp
imul
fadds
mov
mov
mov
gs
sub
adc
xchg
inc
ljmp
cmp
and
jle
leave
in
pop
add
ss
syscall
mov
test
cmp
cwtl
aad
sar
jo
test
cld
rorl
push
push
aaa
int3
adc
aas
lock
js
or
mov
sbb
pop
pop
mov
dec
xor
inc
ficoml
popa
fxch
out
jle
xchg
scas
enter
push
dec
in
popa
xor
scas
or
jmp
out
in
out
lods
lret
cmc
cltd
jp
in
out
adc
pusha
mov
adc
adc
mov
cmp
or
mov
mov
or
xchg
add
xchg
fimull
popl
inc
add
jp
jecxz
lahf
sbb
sub
mov
aad
ret
stos
fs
adc
pop
add
sub
xchg
loop
jle
pop
mov
mov
popa
pushl
and
xchg
lret
mov
inc
dec
clc
xor
xchg
sarb
stc
jecxz
ret
jnp
push
inc
mov
aad
adc
cmpsb
or
mov
mov
sarl
popf
cld
sbb
mov
or
mov
fiaddl
andb
and
addl
imul
push
push
in
inc
xchg
ljmp
inc
outsl
into
mov
xor
jg
enter
je
xor
mov
mov
xlat
icebp
arpl
cs
push
das
sub
jb
mov
mov
dec
cs
outsb
inc
jle
mov
jmp
mov
orl
pop
fsubrs
pop
and
mov
popa
pop
outsl
mov
mov
clc
into
lahf
jle
lock
dec
scas
not
and
mov
xor
pop
jmp
cmc
sub
loopne
jae
fdivs
mov
and
push
xchg
mov
sub
and
lcall
fs
push
adc
outsb
das
out
in
fisttpll
enter
adc
lds
jp
nop
imul
mov
cmp
mov
inc
repz
test
lods
sete
imul
cmp
xchg
jno
pushf
aad
cmp
leave
mov
add
std
rolb
mov
inc
popa
mov
fsubs
lret
rolb
movsl
cmp
addl
xchg
ljmp
out
insb
pop
mov
push
xor
or
adc
std
xor
test
xchg
cmp
or
fmull
dec
in
in
cs
or
imul
push
dec
mov
mov
dec
shlb
out
push
shl
adc
push
movsl
jo
sub
mov
xorb
sbb
rep
les
js
add
sti
pusha
mov
sbb
adc
imul
paddsb
loopne
mov
mov
jns
mov
test
add
cmp
push
loop
loop
cmp
sub
cmpsl
icebp
mov
in
and
mov
cmp
das
outsb
lret
inc
mov
fcmovu
mov
lcall
push
dec
inc
mov
pop
dec
sub
icebp
int
xchg
push
mov
dec
pop
or
leave
cmpsb
insb
mov
xchg
mov
mov
mov
mov
and
pop
and
cmp
sbb
adc
jmp
jl
cld
xor
out
movsb
test
fildll
shll
pop
sbb
xchg
outsl
aad
push
xchg
test
outsb
push
test
test
pop
push
cli
andb
dec
int
fwait
jno
xlat
aam
adc
cmp
loopne
add
lods
insb
lock
mov
xor
sub
pop
jecxz
sub
shrl
insb
bound
fwait
mov
jno
lock
mov
mov
repnz
sbb
xchg
cmp
or
std
mov
xchg
loope
xchg
loop
xchg
sub
jbe
lret
adc
pop
mov
test
rorl
sub
in
outsl
andb
add
cmc
ret
ja
jae
dec
enter
call
outsb
mov
xor
iret
movsl
mov
xchg
add
xor
outsb
orb
jge
dec
mov
ja
xchg
mov
sub
arpl
sub
add
movsl
or
inc
fsubl
addr16
ds
js
std
pop
test
iret
into
and
adc
xor
mov
testb
sbb
xchg
arpl
xchg
mov
test
mov
movsl
push
out
repnz
dec
cmp
notb
lret
aaa
sbb
mov
lret
adc
push
nop
xchg
roll
jecxz
jmp
xor
pop
test
ljmp
inc
mov
mov
inc
push
xchg
test
ja
cli
or
lea
loop
pushf
scas
xlat
mov
adcl
add
jecxz
shlb
dec
jae
jnp
xchg
loopne
jne
into
mov
subb
fwait
inc
fdivrs
adc
stc
lahf
mov
inc
cmc
sub
insb
or
jmp
inc
adc
fmul
and
sbb
jl
jle
stc
test
push
rol
xor
fimuls
or
ret
xchg
jge
mov
jno
popf
cmpsl
inc
sti
loopne
mov
mov
ljmp
jns
sbb
lods
fisttpll
insb
jl
sub
pmaxsw
orl
cmp
call
add
jb
cltd
xchg
xor
mov
sub
jae
loope
into
fwait
or
jns
leave
mov
jne
add
adc
and
lods
xchg
test
jle
fucomip
sub
sahf
push
mov
daa
mov
je
ja
loopne
into
mov
cmp
leave
or
push
lret
les
or
aad
mov
sub
ret
push
inc
sub
or
xor
push
sbb
mov
jl
sahf
pop
sbb
stos
bound
xor
push
mov
stc
mov
jne
nop
fs
cmp
mov
dec
push
arpl
sbb
inc
mov
scas
add
and
sahf
mov
sub
mov
or
clts
test
or
mov
jg
mov
adc
xchg
cmp
std
imul
mov
inc
pusha
insb
mov
sbb
mov
mov
or
mov
fisubs
stc
add
xor
adc
je
adc
jb
fs
jp
jbe
jmp
cmpsb
filds
mov
pop
sub
cmp
adc
cmpsl
frstor
int
orl
scas
pop
into
lea
adc
in
inc
mov
cmp
icebp
shrl
shl
enter
sub
gs
sub
cmpsb
mov
inc
mov
cli
pop
cmpb
fisttps
jnp
jne
inc
xchg
jo
out
lret
out
jo
or
add
push
or
mov
fsubs
dec
aas
jb
and
insl
lods
das
test
inc
cli
adc
fistpl
cmpsl
imul
inc
and
and
std
mov
imul
dec
fnstcw
packuswb
sahf
push
jle
es
aam
sbb
xor
stc
sbbl
aas
or
gs
fisubrl
pop
inc
outsl
dec
jo
xchg
dec
mov
into
test
loope
lret
nop
mov
movsb
dec
jo
negb
jne
cltd
xlat
inc
push
xor
mov
daa
or
out
jnp
sub
adc
loop
es
loop
xchg
xchg
mov
push
outsb
xchg
pop
inc
aam
and
sti
add
dec
roll
push
jbe
sbb
push
sub
jecxz
pop
xor
aam
dec
jns
or
xor
or
cmp
push
sub
sbbl
cli
adc
jne
mov
incb
dec
inc
inc
cli
es
or
mov
insb
pushf
pop
les
mov
push
jbe
dec
out
sbb
filds
scas
jle
pop
mov
jns
xlat
rcll
push
mov
jb
pop
dec
push
fadds
dec
aaa
test
xor
mov
xchg
pop
fs
shrb
addr16
addr16
jb
dec
or
out
xchg
leave
xchg
push
inc
or
ja
shr
jg
jns
mov
stos
and
outsb
inc
jmp
inc
mov
lods
iret
mov
clc
cmp
test
cmpsl
or
fiaddl
stc
fucomip
sbb
add
jnp
js
shlb
push
jl
push
into
cmp
nop
and
int3
roll
mov
int
sar
das
ljmp
es
mov
dec
es
pop
sbb
xchg
jmp
add
enter
push
and
test
ljmp
pop
lret
jge
pop
scas
gs
push
xchg
insb
mov
aad
in
jecxz
inc
lods
daa
inc
sub
in
jmp
jb
movsl
stos
jnp
cmp
rcr
jmp
fcompl
lea
cmpsl
popf
bound
push
dec
lret
fnsave
sbb
stos
test
mov
imul
mov
mov
push
and
out
gs
add
hlt
xchg
dec
sub
out
push
idivl
sub
clc
pusha
lret
hlt
imul
push
xor
push
les
movsb
dec
xor
and
lods
push
inc
dec
jbe
xchg
add
xor
div
pop
cli
sub
dec
push
sbb
popf
popa
ljmp
mov
mov
fs
sti
lahf
push
mov
pop
iret
dec
add
add
mulb
jns
xchg
inc
mov
jmp
push
mov
adc
imul
add
gs
bound
push
add
sti
xchg
mov
push
fwait
pushf
sub
mov
mov
pop
push
pop
js
pop
loop
dec
cmpsl
adc
push
lret
ffree
cmp
sbb
data16
pop
in
xlat
testb
jle
mov
cmc
out
das
addr16
cmp
lret
stos
inc
jg
push
mov
sub
sub
pop
movsb
adc
pop
fwait
mov
push
add
cmp
xchg
push
and
call
ret
dec
pushf
push
dec
xor
dec
push
inc
mov
inc
dec
or
jmp
movsb
ljmp
mov
mov
sub
rclb
adc
sub
stos
inc
inc
nop
fsts
hlt
arpl
xlat
enter
out
dec
inc
in
mov
test
bswap
and
adc
data16
xrelease
add
rclb
bound
mov
push
inc
sbb
push
pop
jge
les
cmp
mov
in
mov
mov
mov
test
push
in
sahf
xlat
jge
pop
cwtl
sub
push
mov
cli
sub
jg
aad
icebp
in
mov
cld
rolb
xor
mov
pop
das
lea
mov
es
std
inc
loop
decl
mov
test
xchg
enter
cs
imul
sub
fldl
cmp
les
outsl
add
xlat
loope,pn
push
lods
sahf
mov
js
fcomip
fnstcw
movsb
mov
lret
into
out
dec
inc
repz
movsb
adc
les
lret
ffree
pop
mov
fisubl
scas
arpl
and
cmp
and
dec
add
imul
stc
push
and
push
sub
push
pop
pop
mov
cmp
jnp
xchg
cli
ja
rorl
mov
jne
jge
aad
stos
mov
aam
subl
clc
out
pushl
clc
jno
aas
repnz
js
fiadds
cmp
mov
or
dec
dec
mov
push
andb
enter
inc
stos
gs
and
xor
or
mov
das
xor
xchg
cmp
or
fadd
cmpsb
pop
mov
inc
xchg
daa
ftst
xor
mov
sbb
add
cld
sub
popf
popa
popa
push
mov
loope
cmp
repz
mov
lcall
js
pusha
leave
imul
movsb
push
clc
add
in
gs
inc
xor
add
mov
adcb
mov
decb
iret
cmp
xor
pop
mov
add
jg
jmp
stos
mov
pop
jmp
test
pushl
jl
jge
sti
fisttpll
les
imul
movsl
jmp
data16
fsubl
cmp
cld
xchg
xchg
xchg
rcll
pop
aas
lret
shrl
call
repnz
sub
lret
mov
adc
sbb
in
jno
inc
js
std
sbb
leave
cmp
call
xchg
fidivrs
add
inc
mov
es
inc
test
inc
jns
mov
out
leave
ficompl
jbe
mov
mov
inc
stos
adc
mov
cmp
call
lea
mov
cmp
movsb
mov
addr16
stos
push
sahf
mov
lcall
mov
lods
add
enter
xor
decb
adc
xor
out
les
fst
pop
fwait
mov
xor
pop
call
pop
iret
aad
aas
cmovnp
push
mov
lods
or
or
popf
cmp
pop
push
mov
incl
add
dec
imul
pop
movsl
sub
ss
and
cmp
inc
sbb
cli
mov
mov
push
push
jnp
daa
in
sbbl
add
shrl
popf
imul
push
imul
rorb
dec
mov
pop
inc
add
xchg
inc
sbb
addr16
pop
cmp
push
fstl
jae
fcmovnu
xchg
mov
cmpsb
out
arpl
into
sti
mov
hlt
movl
lock
dec
mov
ja
cmpsl
std
fistpl
push
leave
and
aas
jae
inc
sbb
adc
sahf
pushf
jecxz
mov
popf
aaa
aam
adc
lods
in
sbb
aad
mov
test
jle
stos
inc
push
inc
ljmp
stos
les
lcall
inc
fwait
jnp
clc
jnp
inc
arpl
mov
dec
cmp
in
loopne
add
push
bound
and
push
sbb
stos
jbe
inc
cmp
hlt
jg
push
mov
adc
nop
cmp
xor
stos
sub
jg
xchg
xchg
insl
sub
clc
inc
adc
int
aaa
je
pop
and
outsb
adc
mov
negb
das
jge
sarl
lock
pop
or
or
push
hlt
cmc
sbb
out
and
xor
sub
cmp
lods
inc
or
dec
fdivrl
lret
mov
shlb
popl
mov
cmp
cld
and
inc
ror
inc
pop
lcall
insb
test
ss
cli
stc
cld
mov
adc
xchg
scas
dec
test
sbb
push
lret
gs
xchg
or
xchg
adc
scas
cmp
dec
lock
dec
hlt
sub
jnp
les
ljmp
and
or
mov
jp
test
outsl
mov
xchg
sbb
sbb
dec
jnp
mov
lea
je
xlat
push
inc
inc
add
ds
or
mov
fs
out
mov
add
loope
push
rcr
jmp
mov
mov
sbb
addr16
or
iret
xchg
rcr
cli
mov
inc
movlps
and
sub
push
int
pop
outsb
push
mov
lock
arpl
mov
or
xchg
or
in
test
jnp
or
cmp
mov
andl
test
xor
dec
mov
lock
and
push
dec
cwtl
push
imul
pop
sbb
mov
loope
inc
insl
popf
inc
stos
mov
stos
stos
shrl
xor
test
add
fwait
mov
or
mov
sbbb
cmpb
add
rep
clc
nop
cmpsl
push
dec
mov
xchg
and
daa
insl
imul
adc
xlat
sub
sbb
cmc
daa
ss
inc
movsb
mov
and
push
jp
adc
and
test
sbb
sti
in
xchg
int3
cmc
inc
jbe
nop
xor
xor
mov
cltd
xor
loop
lahf
rolb
jecxz
adc
mov
cli
xchg
mov
xchg
add
sbb
xchg
jb
adcl
or
adc
aam
mov
xchg
xor
jmp
rorb
mov
in
mov
aaa
mov
rclb
push
dec
jg
sub
adc
pushf
inc
inc
jae
pop
mov
lds
add
loope
imul
cmp
mov
test
imul
lcall
fwait
sbb
scas
mov
mov
rorl
pop
lods
fldenv
mov
lahf
push
lret
arpl
xchg
inc
rclb
int3
fs
mov
xchg
lods
sbb
ss
xor
push
cmp
or
cld
cmp
adc
mov
cltd
mov
or
xorb
fcoml
rcrb
and
mov
fsubr
jne
sbb
add
imul
nop
aam
loope
xchg
imul
sub
sub
in
fstps
or
or
das
pop
int3
nop
incl
cmp
push
jl
pop
or
roll
pop
jp
test
fdivrs
rorl
mov
shrl
pop
and
shll
jbe
shll
int3
cltd
or
sub
in
in
enter
lahf
or
jae
dec
lret
rcl
out
sub
hlt
dec
jp
dec
adc
sbb
scas
gs
popf
pop
out
xor
inc
cli
fcomps
cmpsl
divb
das
shlb
fs
pop
xor
gs
int3
push
ljmp
dec
and
scas
icebp
aad
or
push
cmpsl
lahf
ret
inc
mov
dec
div
inc
or
jge
bnd
fwait
inc
mov
xor
cmc
das
xchg
cmp
roll
int
mov
pop
or
addr16
leave
lods
clc
jno
inc
xchg
out
data16
adc
and
or
xor
and
loopne
pop
ljmp
inc
sub
cltd
icebp
loopne
leave
mov
mov
dec
add
inc
push
sub
fmulp
mov
aam
leave
add
adc
pop
mov
wbinvd
js
push
cmpb
mov
outsl
cmp
arpl
dec
arpl
jmp
mov
mov
pop
stos
xchg
stc
enter
pop
or
lret
hlt
inc
jle
repz
push
ja
stos
adc
xchg
into
lds
mov
cmpb
icebp
cmp
out
dec
clc
jo
dec
jne
arpl
shld
pushl
shlb
scas
xor
std
out
imul
add
inc
lret
fwait
xchg
movsl
std
loope
mov
and
or
or
mov
and
xchg
xchg
incl
sbb
test
sbb
popf
xor
fcmovu
aam
push
pop
adc
and
hlt
cmpsl
insb
cmp
outsb
cmp
inc
or
xlat
add
mov
mulb
loop
sti
sub
in
or
add
orl
pop
inc
aam
andl
add
add
fsubs
ljmp
and
xlat
and
sbbb
jmp
ds
and
mov
xor
repz
push
inc
mov
push
dec
cld
jmp
mov
sub
dec
xlat
inc
pop
pushf
jmp
aad
outsl
jne
sub
sahf
fdiv
mov
pop
movsb
outsl
ret
mov
mov
adc
cmp
inc
xor
cltd
sarb
rcll
cmc
in
sbb
cmpsb
push
dec
jbe
hlt
add
loope
setl
and
jnp
out
sarb
adc
pop
dec
cld
or
leave
das
das
and
sub
dec
movsl
mov
lret
clc
fisttpl
and
test
stos
inc
test
adc
mov
and
ds
out
dec
xor
mov
fwait
arpl
push
pop
inc
xlat
das
fidivrl
iret
fs
leave
inc
pop
lret
add
jae
mov
xchg
outsl
fiaddl
lahf
stc
je
stc
and
in
out
outsb
pop
test
mull
outsb
xchg
iret
lods
stc
mov
ficoms
push
sbb
scas
daa
stos
inc
subl
xchg
mov
add
jb
or
adc
imul
and
add
mov
mov
or
test
adc
jno
jle
mov
out
daa
push
and
ljmp
dec
inc
ficoml
adc
rcrl
sar
cli
lret
dec
iret
adc
dec
pop
jae
adc
inc
out
and
outsb
and
dec
pop
mov
inc
mov
mov
xchg
or
dec
xchg
mov
and
addb
mov
adc
lret
sub
fmull
cmp
arpl
shrb
cli
cmpsb
decl
lret
push
clc
adc
imul
sbb
aaa
mov
aam
mov
xchg
dec
frstor
add
loop
push
sub
cmp
insl
ljmp
xchg
sbb
scas
push
jecxz
out
or
fldt
mov
cvtdq2ps
shrl
push
jecxz
fcmove
dec
jmp
aam
stos
jge
adc
movsl
aas
push
ja
mov
enter
mov
push
outsl
xor
jns
out
mov
jnp
jbe
push
out
xchg
jae
bound
xchg
jge
mov
dec
mov
sbb
mov
sbb
int
push
mov
push
mov
cmpsl
push
mov
cs
out
mov
mov
push
test
les
xchg
xchg
pop
mov
lahf
loopne
add
mov
mov
adc
pop
adc
push
pop
adc
sbb
add
arpl
test
fcmovnu
fs
cmc
mov
and
inc
fwait
cmp
push
out
mov
xchg
fstpl
cmp
add
or
cwtl
mov
xchg
xor
dec
aaa
push
dec
mov
cmp
jmp
loop
popf
adc
fiaddl
insb
xchg
pusha
fwait
rcll
sarb
push
fwait
aas
pop
in
ss
mov
jmp
stos
jecxz
mov
roll
xlat
mov
incb
cld
out
xchg
mov
push
sbb
xlat
andb
rorl
jecxz
stc
nop
push
mov
or
into
mov
cmp
xchg
dec
es
fisttpl
mov
cmc
cmp
cmp
iret
aam
outsb
shlb
int3
stos
leave
nop
xchg
repnz
push
test
jo
hlt
sahf
shrl
mov
or
sub
jno
js
leave
jp
outsb
popf
mov
sbb
ret
hlt
jbe
shrl
and
iret
and
sbb
iret
fisttpl
stos
xchg
jb
in
sti
bound
mov
imul
add
sub
inc
outsb
mov
je
lock
dec
sbb
pop
mov
cmc
cmpsb
int
repz
cmp
dec
je
mov
dec
addr16
lahf
xchg
mov
jle
mov
in
jno
subb
les
sub
subl
les
loope
jae
stos
push
pop
fbstp
push
movsl
or
ljmp
push
cs
jl
imul
data16
push
daa
into
nop
cmp
push
xchg
movsb
pop
leave
mov
mov
xor
cs
fistpl
dec
rcrl
movsl
and
hlt
push
pop
or
or
mov
or
inc
fstl
mov
xchg
sbb
add
mov
sar
or
adc
pusha
movsl
addr16
ja
es
cmpsl
sbb
pushl
sbb
fwait
lret
fs
pop
push
adc
push
adc
and
pop
cmc
insl
aas
push
lods
xor
or
rcrl
mov
sbb
pusha
jbe
cltd
cmpl
add
rcll
mov
sbb
cmp
lock
out
or
adc
into
cmp
mov
ds
xor
dec
pop
scas
and
xor
add
add
icebp
xor
fsts
push
mov
lock
mov
aas
insl
mov
idivl
lahf
xchg
pop
jmp
mov
mov
xor
adc
cwtl
test
sahf
js
or
jp
cli
mov
ds
sbb
cmc
jl
repz
mov
mov
insb
test
in
clc
pop
icebp
hlt
shlb
xor
pop
push
inc
xlat
sbb
add
cmpsl
hlt
fsubs
xor
mov
pusha
je
clc
sub
loopne
xor
add
lahf
lods
je
loopne
gs
out
cli
sub
arpl
xor
out
shlb
aad
push
ja
cwtl
and
push
jle
sbb
push
lahf
call
pop
jno
cwtl
sbb
mov
cmp
fiadds
jnp
pop
cmc
sbb
test
cmp
mov
test
jb
hlt
mov
jge
pop
xor
fistl
movsl
and
mov
sahf
pop
mov
push
and
and
mov
push
xchg
sbb
jae
rcrb
pop
cmc
inc
mov
mov
push
adc
cvttps2pi
popf
stos
lret
rclb
insl
jecxz
mov
inc
mov
dec
lock
aad
int
inc
push
mov
arpl
cmp
add
rcll
in
mov
push
adc
aas
test
test
mov
xchg
mov
stc
scas
stc
jo
fcoml
adc
xor
into
xor
clc
mov
or
push
fmuls
fwait
es
cmp
jge
movsl
xlat
addl
and
and
fcompl
mov
cld
xchg
dec
icebp
mov
xchg
fsubrl
js
mov
cld
jg
test
test
push
cmp
mov
lea
sbb
jne
or
test
jmp
or
stc
pop
hlt
cmp
shrb
loop
test
int
jecxz
pop
push
mov
or
insb
fmuls
mov
mov
push
adc
jo
addr16
movsl
fs
sbb
mov
xor
sbb
arpl
push
ds
sub
or
mulb
iret
add
add
sbb
inc
push
daa
int3
ljmp
xor
mov
aaa
std
pop
mulb
push
stos
jnp
clc
xchg
xor
popa
iret
mov
dec
nop
push
dec
sbb
movsl
jnp
mov
clc
enter
add
mov
sub
ss
pop
out
push
fcmovnb
jmp
xor
push
and
hlt
cmp
enter
lret
jg
jne
lret
out
js
push
add
fists
mov
push
inc
out
loop
sbb
in
imul
jnp
jl
and
pop
xchg
mov
sub
in
sub
xchg
popa
pop
adc
lods
xorb
dec
ja
xchg
or
mov
xchg
push
div
mov
test
push
add
lods
or
mov
xor
inc
stos
cmp
loop
xor
hlt
lret
adc
shll
pop
sbb
scas
push
or
xor
aam
dec
jno,pt
mov
test
xchg
fidivs
pusha
stos
sarl
loope
pop
add
mov
sarb
xor
int3
out
lds
inc
mov
xchg
xchg
jb
fucomi
push
les
lcall
inc
scas
lock
loop
pop
test
aas
push
insb
arpl
rcl
aaa
sbb
lret
and
out
shlb
mov
pop
jl
andl
enter
stos
mov
test
in
stc
cwtl
mov
sbb
insl
arpl
sub
push
loope
pop
xchg
add
cmp
xchg
ret
push
fadd
aaa
ljmp
out
push
pop
sbb
jge
pop
idivb
cs
fisubrs
adc
stos
test
pop
mov
outsb
out
flds
fadds
sbb
andl
data16
cmp
xchg
inc
jnp
fldenv
popa
loopne
fucomi
lock
cwtl
or
inc
test
in
add
push
jae
cld
add
xchg
in
mov
outsb
pushf
cli
aas
jmp
pop
pop
addr16
adc
push
push
mov
mov
jmp
adc
aaa
or
lods
pop
lods
jnp
int3
jp
push
pop
push
adc
addr16
ljmp
mov
cs
outsb
lahf
mov
dec
cmpsl
lock
xchg
push
outsl
xchg
das
sbb
mov
or
imul
xchg
cmc
lods
cs
test
cmp
repnz
sub
loopne
dec
out
xchg
push
rolb
pop
div
xchg
xor
or
mov
dec
call
inc
and
nop
xor
and
in
into
stos
push
and
inc
sti
mov
aaa
or
jle
pop
pop
daa
dec
inc
adc
push
aad
into
push
mulb
sbb
fdivr
xchg
push
pushf
cmp
add
bound
fisubl
mov
repnz
dec
sbb
cmp
push
jmp
xchg
push
sti
cwtl
incb
add
andb
fistpll
cmpsb
incb
xchg
mov
in
sub
les
loopne
xor
cmp
add
lret
dec
lret
or
jmp
leave
push
add
bound
addr16
outsb
fdiv
pop
stos
push
test
adc
cmpsb
inc
cltd
mov
adc
jg
cmp
add
stos
mov
inc
cmp
jecxz
cwtl
stos
insb
loop
rorb
xor
out
ficoml
repnz
dec
outsb
std
xor
dec
loop
mov
adc
shl
stos
ret
push
cmp
and
fcomps
or
sbbl
ret
lahf
jg
cmpl
fcompl
lret
xchg
jae
repnz
and
xchg
std
ret
das
mov
inc
daa
out
dec
jmp
call
mov
into
cmc
cmc
sbb
pop
jbe
inc
push
sub
cmp
arpl
aaa
sti
les
mov
sub
cmp
jnp
sbb
js
cld
cmp
sub
pop
test
addr16
mov
test
clc
leave
or
lret
push
inc
pop
adc
out
dec
inc
xor
xor
cmp
xorl
jbe
dec
testb
mov
pop
pop
mov
pop
jns
ja
imul
subb
loop
mov
pushf
and
stc
push
adc
push
cmp
jle
movsl
pop
or
dec
fucomp
scas
repz
cwtl
sbb
fs
mov
jb
jmp
adc
sub
inc
mov
xchg
icebp
xor
and
sub
cmpl
jle,pn
sub
mov
and
jb
loop
mov
cmp
fs
sbb
add
aam
and
shll
push
jb
sub
pop
mov
adc
ja
dec
sub
pop
adc
movsl
mov
mov
lock
push
xchg
outsb
negl
mov
sbb
xor
shll
addl
xchg
cmp
mov
out
sub
add
xor
add
xchg
loope
lock
shl
gs
jbe
negl
adc
fnsave
and
mov
popa
xchg
lahf
xor
js
sub
loop
lcall
jmp
push
lods
hlt
pop
sbb
cmp
xor
push
shll
in
sbb
cmpsl
or
lds
and
imul
dec
jp
mov
into
or
insb
sbb
fs
popf
pop
cmp
pop
sbb
test
lock
cwtl
xchg
cmp
mov
or
sti
movsb
mov
mov
bound
loopne
mov
jl
push
lea
adc
mov
cwtl
mov
push
lcall
aad
repnz
das
mov
lods
xor
jb
inc
xchg
or
and
push
jg
inc
test
leave
fstl
or
mov
push
pop
add
mov
rcll
sarl
das
in
orb
int
stos
pop
fsubr
jle
outsb
data16
icebp
rep
aas
inc
mov
push
popa
test
mov
insl
mov
sbb
sbb
outsl
sbb
out
lret
into
test
aas
in
cwtl
clc
mov
lcall
dec
push
or
das
xchg
or
call
inc
shll
xchg
ret
fistl
pop
sbb
inc
out
push
push
or
pop
insb
inc
pop
ja
adc
push
sbb
sub
mov
lea
gs
cmpsb
andl
arpl
cs
mov
addr16
das
mov
and
loopne
mov
push
cmpsb
fldcw
testl
imull
sahf
cmpsl
ret
arpl
mov
fistpll
scas
vunpckhps
xor
js
test
je
shl
mov
aad
pop
cmp
push
sbb
pushf
and
dec
aas
dec
inc
movsb
add
fwait
xor
std
loopne
sub
loope
xchg
jp
cmc
sti
xchg
in
push
stos
or
xchg
dec
inc
jmp
pushf
xchg
cld
daa
repnz
fwait
aam
cld
sti
xchg
or
push
jmp
xor
mov
inc
push
dec
inc
out
imul
ds
mov
pusha
loop
push
leave
mov
mov
mov
cmc
repz
setbe
addb
mov
lret
lret
cmc
mov
stos
push
ret
mov
cmp
leave
add
jcxz
adc
and
jno
push
mov
es
popa
sti
ljmp
mov
fdivr
stos
lret
jo
cmp
jge
fs
cwtl
inc
dec
stos
aam
adc
pop
push
jo
in
dec
cli
les
push
inc
fisttpl
incb
lret
movb
out
inc
leave
pop
xor
ret
pop
fidivrl
jae
aas
cmovo
xor
mov
adc
in
iret
out
popa
je
aas
mov
int
pusha
sub
dec
sbb
push
mov
and
rolb
mov
lods
sbb
inc
clc
cmpsb
rcrb
or
cltd
dec
sub
test
mov
or
pop
insl
mov
dec
stos
lahf
adc
std
mov
dec
push
or
stc
and
jb
adc
movl
dec
xchg
jne
mov
in
cli
insb
popa
pop
sub
in
iret
fadds
mov
sti
cwtl
stc
outsl
push
daa
sub
rorb
cmpsb
pop
mov
loop
xor
jo
sbb
sbb
enter
rcrl
push
push
pop
cmpsb
inc
test
xchg
outsb
push
pop
sbb
mov
ret
pop
push
cmp
inc
or
pop
test
fists
or
aad
xor
jno
push
jge
sub
mov
stc
jmp
xor
fisttpl
xchg
pop
cmp
fadd
and
push
inc
and
sbb
xchg
or
fadds
out
dec
mov
fisubs
je
mov
test
mov
xorl
push
movsl
jp
pop
stos
scas
pop
mov
cmpsl
jge
xchg
xchg
or
cmp
fldl
ret
lea
mov
aad
inc
jno
mov
test
inc
rcr
or
cmp
lods
add
test
mov
jns
in
mov
or
sub
fmul
fidivrs
pop
push
push
arpl
and
ret
and
sub
in
dec
idivl
push
or
fsubrs
cltd
lds
lock
xchg
mov
add
rcrl
ret
fstps
outsl
stos
aas
ja
shrl
sbb
ficompl
rcll
mov
and
lret
movsb
sub
mov
or
add
sub
scas
divb
loopne
ljmp
ja
nop
pushw
adc
insl
inc
lret
mov
jp
out
add
fnstsw
push
int
loop
sub
pop
jne
mov
jecxz
test
mov
ss
pop
xlat
cmp
inc
dec
jae
cmc
gs
into
fwait
or
fdivrl
push
inc
xchg
xchg
jb
jbe
xor
xor
push
xchg
jle
movsl
xchg
add
cmc
mov
mov
or
pop
dec
cmc
dec
mov
es
xor
lret
repnz
ds
xor
mov
or
lret
dec
iret
adc
insl
dec
sub
push
lahf
mov
cmc
xchg
mov
mov
out
dec
xchg
sbb
pop
push
or
scas
cmpl
mov
xchg
dec
mov
cmp
jl
rol
xchg
xorl
dec
dec
mov
in
sbb
out
ficompl
push
popa
daa
subb
mov
cmp
jnp
adc
xchg
push
rorb
mov
lret
push
test
lret
mov
out
cmp
cmpsb
xor
lods
ds
xor
iret
mov
dec
mov
out
cmpsl
cwtl
call
imul
fdivs
dec
das
pop
pop
aam
imulb
ret
pop
sbb
mov
mov
das
mov
mov
pop
loop
xor
scas
mov
es
mov
xchg
mov
mov
roll
stc
mov
pop
pop
int
jo
mov
pop
call
and
mov
add
shll
or
dec
push
add
orl
arpl
inc
fcompl
mov
xchg
movsl
popa
paddw
xchg
push
sub
inc
jno
xchg
sub
test
je
sub
sbb
sub
jmp
sbb
push
icebp
sub
aaa
sub
in
sbb
push
push
inc
inc
add
xor
movsb
mov
fdivl
jle
xchg
gs
outsl
lock
fldl
cmp
and
sbb
enter
adc
lock
test
gs
inc
notl
or
or
gs
inc
cmp
repz
fwait
sbb
xor
nop
stos
rclb
add
ljmp
mov
mov
mov
insl
jne
pop
push
mov
push
lcall
dec
sbb
mov
mov
pushf
xchg
fimuls
or
imul
cmpsl
pop
pop
je
push
add
ljmp
xchg
add
add
adc
mov
shl
xorl
ret
pop
shlb
in
fsts
lea
test
out
push
cmpsb
xchg
frstor
add
pusha
repnz
and
push
fs
or
sub
or
shr
js
lds
dec
jg
daa
call
movsb
aaa
pop
mov
movsl
movsl
mov
lahf
in
scas
adc
xchg
lods
xchg
mov
cs
cld
adc
jnp
cwtl
ds
ss
fs
mov
mov
inc
ret
imul
sbb
mov
ret
inc
mov
scas
enter
aaa
inc
mov
ja
mov
jno
rclb
sbb
dec
je
data16
bt
int3
bound
stos
fsubl
inc
clc
addr16
ficoms
in
mov
int
insb
xchg
ret
or
inc
add
push
andl
xor
sub
ror
sub
enter
pusha
jle
lret
inc
xor
xor
dec
adc
mul
mov
les
frstor
pop
dec
inc
mov
xchg
into
out
cwtl
aam
mov
arpl
in
call
lcall
bound
sti
aam
or
cld
loopne
mov
cmp
pop
and
cmpsl
adc
inc
enter
outsl
sub
in
cwtl
jecxz
test
ljmp
test
or
and
dec
sbb
pop
jnp
out
push
je
nop
push
fwait
iret
add
sbb
jns
lahf
adc
into
inc
or
aas
call
jne
loope
xor
lret
add
jne
inc
jb
jl
mov
rcrb
imul
popf
fwait
mov
mov
lods
jge
sbb
fldt
mov
mov
jge
cmp
cmp
leave
inc
mov
inc
sub
ss
mov
fnsave
adc
xor
xor
or
mov
inc
xchg
xor
lods
pop
and
scas
mov
jmp
enter
adc
adc
and
push
add
push
test
int3
and
ss
fistl
orl
pop
push
loopne
mov
sub
and
je
xchg
lods
lcall
pop
xchg
and
stos
shl
loope
call
or
pop
add
inc
pop
sub
inc
fsubrs
mov
lret
xor
adc
push
or
lahf
push
imul
xchg
pop
lods
das
mov
andb
or
fildll
xchg
pop
fisttps
call
mov
std
movb
add
adc
jg
mov
das
test
adc
mov
stos
rcrl
iret
ret
xchg
dec
push
jg
fwait
enter
fcmovnu
leave
sbb
rolb
loopne
push
rcll
mov
sub
sub
adc
in
inc
cli
jns
hlt
ret
es
repnz
adc
mov
scas
jnp
mov
or
adc
mov
out
lea
insl
sbb
out
inc
in
jg
jae
stos
xchg
fmull
or
lds
sbb
pop
xor
cs
xor
pop
jge
stc
cli
push
lret
and
jp
loope
push
add
test
xor
int3
pusha
and
or
sbb
mov
bound
sub
jge
andb
sar
lcall
ss
sub
testl
cmp
orb
inc
or
in
or
push
mov
ds
mov
negb
cmp
mov
push
imul
out
mov
dec
sub
addr16
xchg
dec
mov
mov
jp
sbb
add
int3
cmc
or
cltd
ret
push
cmpsl
add
addr16
sti
cwtl
cmp
push
fidivl
lea
nop
dec
or
sgdtl
sub
add
stos
popa
sub
stos
lahf
stos
hlt
mov
or
ja
sub
test
pop
testl
das
addr16
xchg
or
lahf
cmpsl
push
add
hlt
dec
cmp
mov
movlps
rolb
dec
mov
xor
pop
dec
inc
or
movsl
fcoms
dec
loopne
lahf
mov
fcoms
jp
stos
mov
pusha
mov
pop
mov
jp
test
popa
gs
fs
jbe
cmp
cs
enter
jle
bound
std
add
push
xor
adcl
outsl
movsl
mov
mov
jge
insb
inc
xchg
or
mov
xor
cmpb
nop
cmp
sbb
mul
xchg
mov
cmp
dec
xchg
aam
scas
idiv
or
test
ss
bound
add
shlb
push
pop
ret
mov
mov
mov
xchg
or
cmpb
sbb
mov
lods
out
pop
pop
into
sbb
push
xchg
pop
loop
or
in
pop
stos
mov
aaa
mov
enter
inc
mov
mov
ljmp
bound
jle
cld
push
mov
xor
xchg
push
xchg
mov
cltd
adc
inc
push
push
mov
test
jp
mov
mov
int
cs
clc
xchg
cltd
data16
das
cs
sub
lds
mov
and
rclb
mov
jb
mov
pop
pushf
xchg
daa
push
je
cmpb
lahf
xchg
cmp
test
and
inc
or
jecxz
popa
sbb
dec
xchg
movsl
jno
or
scas
or
rolb
shlb
popf
les
inc
mov
rol
mov
mov
push
mov
mov
movb
inc
add
lock
dec
xor
jo
lret
adc
mov
or
loope
repz
fwait
nop
pop
shl
rcr
stos
pop
movsl
xchg
mov
fsubrs
sbb
mov
cmc
out
push
pop
hlt
stos
in
repz
and
xor
jp
test
test
fistps
cwtl
movb
jmp
xor
rcrl
inc
les
pop
mov
cmp
push
jl
sbb
cmp
mov
dec
lea
pop
add
xchg
mov
rcrl
cli
test
jb
imul
imul
dec
pop
and
dec
pushl
cmp
push
cmp
add
fiaddl
jmp
bound
scas
std
lea
cwtl
cmp
pop
jl
mov
xchg
jae
cmpsl
mov
xchg
cmp
jb
pop
or
mov
ret
sub
ds
pushf
inc
mov
mov
inc
xchg
sub
ss
sub
push
xor
jge
out
inc
dec
repnz
adc
movsl
insb
xchg
push
xor
scas
xor
dec
icebp
adc
setl
mov
push
pusha
cli
enter
xchg
nop
mov
adc
int3
mov
sub
in
loopne
stc
jle
adc
js
loopne
inc
in
push
lret
sbbl
fcomi
adc
jae
cmp
shrl
loope
mov
test
ficomps
cmpsl
in
sub
cmp
lahf
ds
pop
pop
and
add
in
sahf
mov
lea
mov
jmp
cmp
push
jge
roll
in
mov
fldl2t
fwait
cwtl
inc
adc
ror
aaa
rolb
sbb
stc
push
inc
bound
neg
or
dec
push
lret
fs
mov
adc
or
jle
lcall
jnp
lods
sarb
pop
pushf
pop
push
jo
psrlq
add
xor
push
fildll
sti
xchg
in
add
arpl
adc
xchg
cmpsb
mov
cmp
push
cmp
jbe
push
mov
add
dec
mov
in
fistpll
push
mov
popa
repz
push
insb
dec
imul
rorb
adc
or
pushf
mov
dec
mov
rcrl
push
std
mov
scas
push
xchg
push
mov
jne
cmpsb
adc
or
call
imul
loope
jmp
imul
cmpsl
adc
test
jns
loopnew
and
das
jae
jae
ss
xor
pop
xchg
sahf
sbb
leave
pushf
push
xor
test
clc
rcll
and
lods
arpl
cmp
rolb
in
adc
or
mov
ds
mov
mov
loop
sbb
xor
iret
push
xor
ret
xchg
jle
add
addr16
dec
mov
push
push
icebp
mov
repnz
dec
jnp
jg
sub
sbb
mov
or
mulb
jbe
xchg
decb
je
inc
fs
push
inc
in
dec
pop
xchg
hlt
jns
cmp
adc
out
sbb
sbb
add
add
and
imul
and
xchg
pop
sahf
loop
ret
ja
nop
xchg
lret
pop
and
xchg
ss
sbb
mov
dec
lds
push
aas
outsb
lods
fs
xor
cwtl
rclb
movsb
sub
mov
sahf
cmp
fsubr
shll
loope
xchg
lret
lea
cmp
imul
jae
popl
xor
xlat
add
lea
pop
sub
popf
mov
xor
mov
inc
mov
cmpsl
aaa
jnp
adc
in
out
call
loop
xor
mov
pop
adc
or
data16
or
call
or
cmp
scas
mov
cmp
dec
out
and
mov
dec
gs
pop
push
bound
aad
lods
cltd
jmp
inc
or
cwtl
push
sbb
loope
js
add
lcall
jge
pusha
mov
push
jp
and
orl
adc
mov
push
adc
gs
movsb
sub
dec
and
shll
sub
and
cld
adc
dec
jb
adc
test
inc
jge
data16
ret
in
loope
fldl
add
fsts
pop
pop
insl
jbe
mov
iret
xor
ss
filds
xor
sub
int3
rclb
cmp
out
test
mov
xchg
ljmp
add
lret
arpl
fwait
push
mov
gs
add
mov
repnz
jae
adc
mov
pusha
pop
mov
jno
push
ficoml
das
inc
in
dec
pop
rorl
xchg
mov
fs
xlat
ret
dec
bound
outsb
pop
add
or
mov
push
mov
dec
add
fistps
inc
jl
iret
mov
push
xchg
add
add
roll
in
or
shll
push
out
frstor
cmpsl
pop
movsb
test
push
cmp
int
test
cmp
push
mov
sbb
xor
mov
rcrb
cmpsl
out
enter
repnz
aaa
lret
jge
dec
cmp
pop
ja
addl
add
xor
call
pop
jae
fldenv
and
scas
sub
movsb
fbstp
aaa
cmp
stos
fdivrp
adcb
movsl
inc
xchg
push
add
insl
inc
mov
hlt
jnp
jne
cmc
nop
jno
mov
test
rorl
nop
sbb
sub
sub
int
mul
mov
xlat
cmpsl
xlat
rcll
rclb
ret
sub
out
ljmp
and
add
jo
in
call
sub
xor
scas
aam
jmp
xchg
loopne
mov
and
fimuls
push
pushf
add
pop
push
test
movsb
cmp
jns
or
loopne
por
mov
imul
or
cmp
ret
pop
and
test
jle
inc
adc
js
push
mov
mov
cmp
push
mov
shr
dec
cmpsl
push
push
push
stos
push
xchg
cmp
xor
mov
ret
fcmovbe
and
ds
arpl
mov
pop
inc
and
dec
lret
aaa
jle
xlat
mov
lcall
mov
jbe
sbb
movl
imull
fcompl
cmpsb
arpl
cmp
jecxz
sub
popa
rol
inc
or
ficomps
or
in
or
popa
push
in
das
sub
es
stc
ret
scas
clc
mov
jae
mov
aad
cmp
clc
sbb
sbb
test
std
sub
lahf
pop
xor
adc
fistps
pop
mov
stc
push
test
mov
dec
stos
inc
inc
xor
cmp
repnz
mov
xor
push
xchg
adc
popl
in
push
sbb
test
push
ficompl
fwait
addr16
cmp
fsubrl
pop
cmc
cmpsl
in
iret
mov
xor
dec
fisttpll
xchg
push
clc
mov
lahf
sbb
loopne
push
inc
fistps
sbb
ficomps
mov
lahf
in
lock
xchg
seto
aam
cmpsb
jl
imul
add
and
dec
popf
dec
js
pop
adc
mov
jecxz
hlt
jecxz
sbb
push
icebp
or
push
xor
ret
push
mov
jne
adc
inc
pop
pop
je
mov
adc
movsl
mov
jge
adc
xchg
mov
adc
push
push
sahf
aad
stc
bound
adcb
repnz
das
cmp
sbb
cmp
sbb
les
dec
and
mov
inc
jno
sbb
mov
cmp
xchg
mov
lock
insl
jp
test
daa
and
cwtl
bound
test
ljmp
inc
adc
and
cmp
nop
and
or
sub
fwait
pop
push
fmuls
into
push
pop
test
repnz
xchg
mov
mov
xchg
test
cmp
fbld
outsb
sbb
xchg
repz
jbe
pop
pusha
cmp
push
jle
mov
in
in
lods
cmp
mov
xchg
pop
lret
dec
jno
shl
sub
pop
mov
or
jne
imul
mov
jbe
xorb
add
inc
test
mov
sahf
xor
je
sahf
pop
mov
mov
loopne
ss
dec
jo
lret
out
jmp
and
insb
fadds
mov
out
test
mov
ret
push
jns
xor
out
int
and
aad
pop
pusha
mov
sub
lret
mov
xchg
xchg
loope
out
xchg
fs
and
pop
aaa
shl
inc
push
subl
lahf
fimull
addr16
cmpsl
fildl
ja
test
imul
cwtl
popa
sbb
clc
mov
daa
enter
jns
mov
inc
jbe
adc
jg
stc
out
sbb
jle
mov
mov
dec
jnp
lret
cld
push
xor
dec
sub
ja
int
xor
cmc
popa
sub
cmc
jno
push
push
test
sbb
xchg
add
hlt
xchg
inc
or
adc
jae
test
insb
ja
jo
ljmp
jb
jnp
jp
outsl
add
xchg
pop
jo
xor
push
fwait
hlt
inc
scas
xchg
xchg
mov
jecxz
xchg
ss
mov
test
dec
lds
cmp
rclb
gs
lea
call
mov
mov
mov
test
push
call
xchg
jb
add
pop
push
lcall
pushf
inc
xor
adcb
push
test
add
and
add
sbb
int3
scas
or
out
out
in
xchg
lcall
xor
add
sbb
add
lds
pop
pop
jae
mov
cmpsb
jge
sub
adc
inc
xchg
cmc
jne
xrelease
test
ss
dec
sub
andb
cmp
xchg
cs
je
adc
jecxz
lock
inc
std
push
adc
xor
jg
dec
add
ja
pushf
nop
jecxz
inc
mov
push
sbb
ffreep
inc
and
out
mov
outsw
xor
pop
push
xor
fldcw
aad
imul
add
or
cmp
out
in
and
and
out
cmp
fsubrl
mov
adc
sub
inc
pop
fcoms
mov
enter
push
loopne
rol
adc
ret
pop
sub
pop
fidivl
aam
push
add
add
add
notl
inc
insb
jg
push
notl
lea
cs
mov
adc
jae
jmp
pop
decb
cmp
mov
add
outsl
in
das
mov
xchg
adc
sub
and
mov
movsb
aas
inc
mov
sub
fs
shr
mov
jmp
xchg
sbb
mov
scas
or
cmp
ljmp
jle
xchg
dec
and
mov
bound
cltd
and
sbb
sbb
in
rorl
mov
inc
mov
movsb
or
dec
mov
xor
and
xchg
stc
sarb
loop
stc
aam
dec
mov
bound
mov
cmc
jns
sbb
test
lcall
mov
dec
iret
jb
mov
xchg
mov
adc
mov
and
and
subl
mov
cld
iret
mov
ret
sbb
dec
notl
fisttpl
xlat
push
daa
jg
filds
mov
pop
cmp
push
push
cmpl
lea
fsubr
enter
mov
imul
xchg
arpl
cmpsb
xchg
xchg
insl
mov
pushf
arpl
loopne
mov
in
jae
mov
fwait
mov
cmp
iret
jg
xchg
jg
inc
test
inc
dec
mov
dec
daa
cltd
sbb
pop
or
cwtl
add
aas
cld
enter
lahf
in
cs
push
mov
insb
and
sub
jne
xor
xchg
rcll
ret
jo
movsl
jne
rcll
pop
jbe
in
dec
out
int3
mov
out
movsb
xchg
dec
and
mov
mov
shrb
mov
sbb
lock
jmp
aaa
pop
push
cmc
sbb
cmp
ret
cmp
enter
jae
fldl2e
sbb
in
jne
dec
adc
loope
sbb
pop
xchg
sub
pop
out
mov
xor
ja
fbstp
sub
pop
fisubs
cs
sbb
popa
sub
add
mov
clc
jae
pusha
int
je
add
jge
leave
add
mov
jmp
sti
push
jmp
andb
andl
or
hlt
vandps
mov
mov
xor
xor
and
addr16
pop
outsb
xchg
pushf
leave
rcll
mov
lods
xchg
xor
xor
lahf
xor
sub
into
aad
or
and
idiv
sbb
fisttpl
repz
add
lock
pop
inc
clc
mov
cli
jb
mov
push
movups
repz
inc
loop
loope
xor
aas
mov
or
pop
push
stos
push
aad
dec
push
scas
std
enter
jns
sbb
xor
and
cmpsl
cmp
mov
cmp
push
mov
push
pop
sahf
inc
pop
out
ss
cmp
loop
add
movsb
scas
push
stos
jbe
in
mov
inc
pop
cld
shrb
fcomi
mulb
roll
sahf
mulb
dec
icebp
lods
es
xlat
ds
mov
popa
test
or
in
imul
add
pop
cmp
rolb
cld
aam
in
inc
loope
cmp
stos
adc
dec
jp
dec
xor
lea
cmp
pop
pop
clc
mov
or
leave
scas
in
mov
pop
in
subb
cmp
jmp
mov
lods
js
hlt
xchg
xor
in
js
fdivl
fldcw
and
lahf
sub
xchg
sub
ss
mulb
clc
add
ss
cmp
fwait
xor
popf
pop
ret
scas
push
inc
ds
adc
xor
or
sbb
or
push
lea
cmp
jp
sub
push
je
nop
push
sbb
jge
jbe
jns
xchg
shlb
mov
icebp
push
inc
out
sub
add
xchg
orb
stc
xor
and
jl
adc
and
ret
jge
aaa
mov
cwtl
jb
sub
into
lahf
jge
mov
int3
clc
jg
test
test
adc
mov
adc
push
jae
aam
sarb
push
sbb
aaa
jns
or
sbb
cwtl
ret
mov
shll
cmpsb
fiadds
inc
data16
mov
jmp
xchg
or
cmp
sbb
jl
popa
jae
ja
jecxz
in
lahf
popf
adc
shlb
add
or
xchg
cltd
leave
stc
jb
scas
and
pop
pop
lods
insb
push
push
stos
jns
fxch
dec
push
aad
loop
in
sub
fucomip
xchg
adc
jns
mov
sbb
aaa
ret
xor
loop
out
fildll
xchg
sub
addr16
and
mov
or
sbb
mov
adc
addr16
xchg
cmp
lcall
inc
mov
testb
aas
lret
call
and
dec
mov
xchg
xchg
jl
dec
mov
pop
xchg
adc
push
push
shrb
push
inc
in
outsb
decb
cmp
push
or
mov
push
loopne
cmc
hlt
dec
daa
out
sub
xchg
enter
sub
add
int3
lock
rorl
stc
nop
out
imulb
adc
jo
mov
daa
push
stos
hlt
lea
cld
out
aas
lods
xor
adc
add
mov
loopne
inc
daa
xchg
add
cmp
in
or
push
lock
sub
pop
jno
dec
scas
xchg
testb
cmp
std
ret
arpl
rclw
xchg
pop
lret
rol
fsubl
mov
fsts
ffreep
std
enter
arpl
out
inc
hlt
shl
mov
lock
clc
xor
hlt
push
loopne
adc
lea
rolb
sub
lods
mov
scas
mov
mov
popf
aas
hlt
mov
sub
sub
stos
ret
ja
fs
sbb
loope
outsl
sub
ja
nop
mov
out
jno
scas
mov
fsubrl
outsl
xor
xor
pop
subb
adc
jno
inc
roll
jne
xchg
mov
jle
adc
xlat
int
push
hlt
mov
pop
scas
cmp
add
mov
push
and
xchg
out
and
lods
fs
loopne
daa
cli
cmc
adc
adc
push
dec
adc
mov
je
addl
cmp
xor
jmp
push
decl
jle
dec
cmp
add
repz
enter
rolb
pop
push
add
jne
popa
movsl
lods
push
push
test
mov
faddl
dec
xchg
push
cli
mov
ret
mov
scas
sbbl
nop
xorb
test
adc
fmulp
aas
or
jns
js
and
sbb
mov
xchg
sub
js
push
movsb
xchg
popa
imul
in
push
ljmp
cmc
lret
or
mov
add
mov
lds
mov
xchg
hlt
adc
in
jbe
add
leave
inc
xchg
mulps
testl
add
enter
and
pop
mov
and
vmread
mov
adc
jae
in
test
cmp
lods
test
aad
xchg
stos
insb
xor
loopne
call
in
ret
push
shll
pusha
pop
inc
daa
lret
pop
popa
jae
arpl
fimuls
ffree
or
cmpsb
ds
push
jns
cmc
outsb
sub
mov
aaa
cli
mov
sbb
or
mull
nop
and
cmp
mov
push
xor
adc
pop
pop
jnp
inc
dec
mov
loopne
bound
add
mov
add
aam
loope
or
clc
sbb
dec
xchg
jmp
ds
loopnew
mov
iret
ja
sub
les
and
jbe
popf
jp
insl
pop
insl
in
popf
ret
rcrl
pop
pop
push
stc
js
mov
pop
pop
xor
or
andb
clc
nop
mov
mov
push
das
xchg
push
js
repnz
in
lea
mul
icebp
into
sub
adc
add
je,pt
jp
pop
add
ja
dec
inc
pop
pusha
and
xor
xchg
mov
xchg
bound
or
mov
add
pop
mov
scas
jnp
jp
adc
xchg
lods
lods
ret
ficoml
cmpsl
fidivrl
insb
pop
imul
lahf
cmpsl
lret
push
call
mov
int
push
sbb
adc
lods
in
add
shr
mov
idiv
mov
insl
sti
xor
dec
out
repz
ja
lea
cmc
adc
ljmp
jbe
das
lods
add
rorl
sbb
js
inc
ljmp
pop
inc
pop
jle
xor
dec
sub
adc
popw
loopne
cs
sub
popf
sub
xor
ss
push
icebp
dec
lcall
and
xchg
cmpsb
push
pop
call
imul
cld
rorl
test
test
mov
xchg
lock
addl
xor
pop
jbe
pop
sbb
pop
hlt
cmpsl
lea
pop
jmp
leave
test
mov
mov
imul
js
pusha
mov
pop
inc
or
and
push
sahf
je
sub
xchg
mov
aaa
cmp
mov
lret
inc
jg
xchg
ret
pushf
xor
push
mov
mov
pusha
dec
jmp
push
sti
cmp
outsb
dec
push
adc
xchg
xor
and
cmp
aad
cmc
lods
inc
jbe
mov
and
jle
xor
ds
push
sub
cli
negb
cmpsl
sbb
jno
rcl
jns
call
xchg
aam
mov
mov
push
mov
or
ss
pop
add
icebp
mov
lock
jecxz
sbb
es
mov
xchg
or
cmpsb
filds
pop
rorl
pop
fdivp
loopne
lock
or
mov
mov
fistps
mov
call
out
lods
lea
out
adc
outsl
pop
sub
mov
push
and
push
outsl
cltd
jl
push
daa
fidivl
sub
lods
sbb
es
mov
cmpb
gs
pop
sub
fsts
xchg
fisttpl
testl
pop
inc
mov
cmp
xchg
jnp
xor
cmp
dec
jb
mov
inc
push
push
cli
mov
imul
pusha
and
jecxz
ljmp
cmp
push
push
mov
lea
ss
lds
push
xchg
mov
mov
xchg
loope
mov
int3
adc
inc
push
ds
or
or
add
fbld
mov
leave
call
stos
push
xchg
idiv
shll
dec
mov
in
cmp
sbb
sub
add
nop
or
ja
xorb
dec
iret
cmp
mov
xlat
push
push
push
pop
fnstenv
cmpsl
jne,pt
xor
jg
out
sub
xlat
cmp
out
mov
in
addr16
cmp
sbbb
frstor
xchg
and
xchg
int
dec
or
std
mov
push
leave
inc
rcrb
push
jecxz
les
fmull
and
ljmp
jo
cmpsl
lret
dec
dec
xor
ja
inc
or
jp
into
nop
sti
jmp
fisttps
push
mov
mov
sti
ds
mov
mov
das
pop
or
stos
push
push
lret
or
lods
repnz
daa
pop
inc
shrb
cli
dec
inc
cltd
popa
nop
xor
sahf
sbb
pop
push
je
je
out
push
sbb
pop
jo
xchg
add
inc
jbe
cmp
shrb
xor
clc
int3
es
ljmp
daa
fcoms
cmp
jle
les
leave
add
add
sahf
xlat
sub
mov
pop
test
hlt
imul
test
push
mov
add
sbb
popa
sbb
aaa
repz
add
and
pop
push
aad
pusha
dec
add
inc
add
addr16
fwait
int3
mov
mov
xor
mov
into
inc
mov
add
push
lods
xchg
mov
or
cmp
jl
pop
mov
lcall
mov
sub
xor
lcall
mov
shll
push
jl
je
in
cmp
add
lret
pop
add
or
or
mov
insb
or
std
in
push
cwtl
xlat
pop
lds
aaa
int3
or
and
clc
clc
push
mov
subb
mov
std
adcl
sbb
push
lret
stc
pop
lret
lea
int3
ja
imul
fwait
adc
lahf
jb
inc
mov
adc
inc
mov
adc
aas
fsts
insl
cmc
dec
jp
inc
js
inc
cmp
sbb
or
pop
xor
mov
orl
rorb
xlat
jmp
out
inc
add
adc
movsb
mov
mov
das
es
nop
arpl
stos
sbb
xchg
repnz
inc
add
ds
aam
test
cmp
scas
push
mov
xor
lods
sti
mov
adcb
sbb
lcall
and
xchg
adc
sbb
bnd
das
sub
inc
pusha
jecxz
xchg
popa
mov
popf
mov
pop
jbe
andb
dec
out
aam
xor
daa
test
repnz
scas
lahf
pop
daa
popf
dec
sbb
sbb
mov
mov
cmp
lock
mov
xchg
ss
mov
fsubs
mov
jle
and
pop
mov
in
lods
icebp
popa
cmpsb
dec
dec
jecxz
js
daa
sbb
test
push
rorl
outsb
enter
fstpl
insl
pushl
add
cmp
je
push
lods
dec
aaa
or
mov
or
sbb
dec
dec
inc
dec
mov
imul
jae
xchg
cmc
jmp
mov
mov
ds
lock
mov
sar
sub
inc
push
add
fnstcw
inc
mov
push
jecxz
shll
jle
rol
in
ds
enter
xchg
cmp
inc
andb
xor
mov
test
loope
xchg
mov
cmpsl
mov
hlt
shrl
leave
sbb
dec
fistps
and
imul
mov
shll
gs
loopne
pusha
mov
or
inc
fistps
mov
cmovae
mov
sub
lcall
lret
sub
cwtl
mov
into
and
push
sbb
and
enter
xor
add
xor
scas
xor
cld
out
loopne
pusha
aad
test
popf
dec
cmc
sbbl
mov
xor
inc
xor
test
sbb
fiadds
daa
shl
cmpb
and
mov
filds
xor
cld
addr16
sbb
mov
out
fstps
xor
mov
mov
outsb
cmpsl
out
mov
pop
sbbb
sahf
xchg
fdivrs
je
or
sbb
mov
xchg
mov
push
sti
or
cs
xchg
push
jo
ret
adc
jge
jae
mov
jmp
idiv
cld
inc
adc
gs
jle
cmp
pop
cmpsb
dec
and
jg
mov
aad
sub
xor
fistpll
fidivrl
add
cmpsl
cs
int3
jmp
lds
push
add
cmp
out
adc
insl
movsl
adc
scas
fwait
ret
lahf
pop
jne
negb
outsl
add
aaa
test
push
lods
mov
adc
adc
push
mov
pop
lret
or
add
or
aaa
cld
push
ja
ud0
xlat
jp
pop
mov
dec
sub
test
xchg
loop
dec
cmp
and
pushf
lret
inc
repnz
dec
mov
das
int
pop
sub
arpl
mov
pop
ss
jp
pop
fnstcw
xor
xchg
imul
or
sub
lods
jo
cmp
inc
cmp
cld
and
push
sbb
loop
mov
mov
ja
andb
xchg
out
jecxz
sbb
mov
dec
and
xor
jns
inc
je
push
jb
out
inc
fisubl
xor
sahf
sbb
popa
mov
inc
xorb
adc
inc
test
imul
adc
stc
cmp
mov
pop
cli
cs
dec
loop
insb
cltd
xchg
lds
popa
loopne
shll
stc
fcoms
jle
push
jb
lods
inc
imul
mov
shrb
mov
cmp
xor
jnp
push
cmp
xor
jecxz
imul
lcall
mov
pop
fsts
cmp
aam
negb
shll
xchg
iret
push
dec
in
shrb
test
pop
int
aam
sub
pushw
pop
iret
sub
ss
sub
gs
adc
neg
dec
in
sub
dec
dec
dec
mov
or
adc
fcoms
inc
movsl
mov
movsb
out
adc
in
mov
jecxz
sbb
xor
loope
lcall
test
cmp
jl
in
mov
mov
mov
sub
mov
lcall
xchg
outsl
push
jl
cmp
cmp
inc
or
sub
adc
mov
cmp
jmp
loop
out
add
scas
mov
in
sub
jmp
lret
aam
cld
iret
std
sub
lret
into
test
mov
mov
popa
add
lcall
jle
sbb
jmp
loop
add
inc
jg
rcrb
outsb
mov
fisubrl
mov
mov
cltd
out
mov
or
jno
inc
fcomi
or
dec
mov
xor
imul
aaa
shl
in
xor
mov
jo
pop
push
das
lret
mov
dec
pop
jp
in
pop
mov
pop
jbe
pusha
cmp
shlb
int3
rorl
or
inc
jecxz
cmp
repnz
ja
jbe
adc
xchg
out
fsts
and
ret
or
repnz
xor
jbe
adc
mov
xchg
fimull
dec
call
pop
mov
insl
movsb
mov
fldcw
scas
rorl
ljmp
lret
ljmp
into
or
std
movsl
mov
sub
test
sub
shlb
inc
sub
inc
mov
jp
fcomip
gs
outsb
mov
iret
push
dec
xchg
cmp
cli
mov
out
fsubrs
leave
lret
outsl
pop
in
cltd
sarl
das
lcall
ss
addr16
ret
shl
xlat
mov
arpl
sbb
fstps
bswap
push
mov
sti
es
fisubrs
test
ja
in
xlat
out
push
sub
loopne
insl
repz
mov
and
cli
stos
sbb
sub
fldt
dec
dec
sbb
daa
in
cli
add
xchg
add
adcb
fmull
xchg
mov
int
sub
cmp
shrb
lds
mov
or
dec
outsb
xor
outsb
ljmp
cmp
mov
movsl
pop
or
push
aaa
xor
xor
pop
mov
sbb
sub
rcrb
mov
lea
pushf
mov
gs
and
and
out
sbb
out
rcrb
xchg
inc
pusha
xchg
inc
std
das
jecxz
pushf
fistpll
cmp
pop
sbb
xchg
lahf
idivl
lods
mov
push
test
xchg
subl
cs
xor
shlb
daa
adc
sub
negl
testb
mov
insb
sub
notb
shrl
ss
lock
fwait
mov
out
loope
pop
cmp
cmpsl
push
add
jns
bound
in
jge
ss
push
subl
in
xor
adc
ds
lret
int
xor
addr16
inc
jge
lea
pop
mov
push
cmp
es
in
jge
dec
ret
sti
fdivl
shl
xor
repnz
cmp
xor
cmpsb
mov
jns
push
xlat
in
sub
xchg
enter
sub
movsb
paddd
add
xchg
sub
testb
xchg
xlat
iret
push
rorb
out
sub
shlb
lcall
mul
push
scas
mov
jnp
stos
mov
mov
repnz
fldcw
jmp
outsl
pop
leave
nop
icebp
mov
mov
jbe
lods
ds
xor
mov
jl
inc
xor
dec
into
into
mov
stos
fs
out
shrl
es
xor
xchg
sub
test
roll
pop
add
fmull
pop
add
push
xor
jp
in
adc
mov
sbb
mov
aad
out
push
dec
cwtl
ret
clc
dec
push
pop
mov
cs
mov
dec
faddp
shrb
sub
subl
cmpsl
and
orb
mov
dec
inc
loop
xchg
sbb
clc
pop
mov
or
shl
mov
daa
call
adc
mov
mov
dec
out
cmp
shlb
pop
and
adc
jge
adc
sub
push
aas
add
pop
pop
roll
cmc
cmp
jl
mov
sbb
test
lahf
mov
mov
jnp
and
movsl
and
ret
out
fwait
fs
jge
xchg
or
movb
dec
xor
xlat
lods
dec
in
cmp
mov
loope
outsl
daa
and
mov
test
sub
xor
fildll
dec
mov
dec
inc
stos
fnstenv
cmp
nop
in
jmp
jg
mov
pop
add
sti
sarl
fsubl
in
xor
clc
mov
mov
pop
mov
nop
std
stc
pop
lods
imul
idivl
nop
cltd
stos
jmp
out
xor
dec
mov
dec
enter
jl
dec
loop
dec
and
ljmp
sbb
aaa
in
pop
repz
add
inc
shlb
push
scas
std
fwait
cmp
xchg
jle
dec
stos
lock
mov
sub
fwait
ss
daa
mov
loope
jp
lret
mov
ja
sbb
sbb
dec
aam
rorb
and
mov
stos
xlat
add
push
rcr
sbb
adc
xchg
or
jle
icebp
push
sbb
stos
adc
xlat
sub
push
push
jge
jns
subb
hlt
sahf
dec
enter
mov
test
loop
pcmpgtw
cwtl
shrl
xchg
nop
or
adc
out
xchg
inc
repnz
leave
test
cli
bound
ja
nop
and
and
cmp
mov
pusha
loopne
mov
icebp
pop
mov
aad
aam
xchg
mov
mov
jp
fs
dec
inc
out
push
inc
out
rcrl
mov
cs
aaa
stos
dec
adc
cmpl
dec
mov
mov
stc
mov
and
or
cld
pop
mov
push
cmp
inc
mov
sbb
loope
test
mov
aad
mov
mov
pusha
sbb
lret
fsubrl
outsb
sti
out
jl
mov
les
sub
push
movsb
movsb
sbb
sub
pop
dec
shlb
test
insb
addr16
lret
fstpt
mov
fisttpl
adc
cltd
mov
xlat
into
insl
or
xor
cmp
jmp
pop
fistl
int3
sbb
push
xor
and
sbbb
adc
and
inc
mov
bound
jge
nop
mov
jne
sbb
jnp
xchg
dec
or
and
sbb
sub
cmp
jmp
je
xchg
idiv
movsl
clc
addr16
fwait
testb
scas
stos
pop
in
sub
xorl
xor
leave
cmp
test
xor
xchg
mov
push
inc
jo
cs
out
inc
and
push
cli
sub
mov
pusha
flds
xor
jp
in
dec
fucomi
xor
mov
mov
cmp
mov
adc
cmc
xor
mov
cmpb
sbb
cmp
xorl
adc
inc
lea
adc
insl
lea
and
xlat
sbb
lahf
repz
imul
dec
popa
pop
jge
insb
jle
scas
mov
xchg
loop
pop
stos
jb
decl
push
fmull
inc
xchg
pop
mov
insb
mov
popf
leave
das
push
cld
in
xlat
jns
or
add
ja
jb
jne
and
mov
sub
aad
ljmp
shll
in
jmp
mov
push
repz
ffreep
aaa
pop
cmp
filds
sahf
sub
mov
sbb
icebp
dec
in
add
lock
cmpsl
mull
or
and
cmpl
inc
test
repnz
xor
add
cmpb
and
pop
sar
ficoms
jb
inc
dec
shlb
sbbl
push
adc
dec
das
xchg
test
sbb
fdivs
pop
jae
orl
in
lea
insb
call
orl
adc
stos
adc
fcmovbe
shr
cmp
into
lea
andb
dec
sub
xchg
into
xchg
sti
pop
inc
cmp
push
ret
loop
mov
jne
out
clc
inc
ret
or
xor
mov
arpl
mov
inc
mov
cmp
nop
pop
test
mov
dec
dec
sbb
cmp
lods
or
jmp
push
fsubrs
xchg
dec
cli
stos
neg
adc
lods
jbe
or
lock
movsb
out
pop
sub
cltd
shrb
lods
das
sbb
pop
addl
test
dec
sub
add
sbb
lret
das
mov
insl
jmp
test
lods
sbb
mov
xor
out
outsl
shr
jne
mov
cmpb
mov
xchg
ss
jp
or
ret
rorb
enter
xor
in
icebp
repz
outsb
add
lahf
lahf
inc
cltd
aaa
mov
in
dec
in
stos
dec
shrb
pop
cmp
rclb
popl
repnz
sar
cltd
jns
in
cmp
loopne
push
insb
mov
rcll
mov
sahf
jge
push
jae
pop
xchg
jns
pop
popa
icebp
popa
shl
mov
std
cmp
mov
data16
out
popf
inc
mov
sbb
arpl
jle
mov
hlt
cmpsb
jmp
jns
rcll
fldt
lret
pop
orb
jb
and
jbe
enter
lret
xor
push
mov
inc
pop
add
subl
outsl
mov
mov
pushf
mov
bound
xchg
mov
clc
adc
push
mov
dec
xchg
xchg
mov
mov
jns
aaa
das
mov
adc
ja
sbb
scas
xor
jp
mov
and
push
inc
leave
mov
out
adc
jo
push
cmpsl
imul
xor
add
sbb
stos
add
mov
mov
mov
jb
adc
fwait
out
arpl
xor
mov
out
test
cmc
push
mov
xchg
push
repz
jecxz
and
add
cmpsb
pushf
fcompl
ret
push
add
cmp
or
jp
repnz
test
push
adc
insb
jge
mov
lods
ss
lcall
idiv
cmp
lcall
mov
mov
repz
aas
adc
into
negb
ret
rorb
xor
scas
fnstcw
mov
idiv
jmp
iret
jp
gs
loopne
shll
xor
jl
dec
lock
mov
or
mov
insb
mov
pop
ja
pop
xchg
dec
jecxz
scas
xchg
add
jns
ss
cltd
in
jmp
popa
lret
lret
hlt
imul
cmp
xor
scas
test
dec
imul
inc
lock
ds
ret
pusha
pop
daa
pop
dec
sub
xor
enter
push
or
jno
xor
hlt
jmp
sub
add
lock
or
dec
jo
or
dec
cmp
cmp
push
cltd
mov
test
inc
sbb
sub
mov
xor
add
sbb
bound
push
xor
xchg
sub
mov
daa
pop
stc
dec
cmc
sbb
movsl
xabort
std
aas
roll
and
sub
xchg
nop
inc
push
mov
out
mov
jae
insl
ja
es
shl
mov
movsl
dec
mov
xchg
ret
loope
mov
pop
jbe
out
add
mov
dec
int
imul
xor
ficomps
xchg
shl
push
std
test
jp
int3
frstor
pop
inc
gs
scas
xchg
mov
aam
mov
inc
dec
xlat
add
jb
ret
and
aaa
negb
mov
xorb
daa
cmpb
sub
and
adc
and
mov
cld
lahf
xorb
into
rep
jmp
je
xchg
xchg
sub
mov
stos
push
mov
and
xor
scas
cmc
in
mov
scas
pop
imul
popf
pusha
lret
mov
cmp
sarb
dec
pop
jo
xor
cmp
push
aam
ja
cld
inc
mov
mull
outsl
ds
fiadds
sub
fistps
nop
push
sbb
and
add
pop
dec
xchg
std
outsb
clc
xchg
aad
sbb
into
pop
mov
jne
test
js
les
inc
push
or
int3
or
xchg
fisubrs
add
push
shll
js
sarb
sarl
dec
pushf
xor
or
xor
dec
lock
add
jp
xchg
sbb
pop
cmp
dec
jo
into
inc
push
push
lds
xlat
xchg
jl
cmpsb
pop
cmp
scas
daa
push
in
mov
push
int3
out
xchg
outsl
jno
push
out
inc
pop
cmp
lahf
imull
clc
jnp
sbb
inc
in
xlat
cld
mov
push
lahf
iret
sub
jae
sti
pushf
pop
ret
rorb
in
test
mov
or
sbb
inc
dec
les
push
pop
mov
xchg
pop
xor
in
les
int3
cmc
sbb
mov
and
cmc
cli
enter
mov
push
loopne
dec
pop
rclb
in
adc
lcall
imul
fldcw
cmp
adc
aad
mov
lahf
xor
and
out
xor
das
mov
adc
dec
imul
jle
push
loopne
in
arpl
shll
or
xor
mov
jecxz
jmp
inc
mov
stos
pop
push
rorl
aam
pop
mov
adc
mov
sahf
insl
test
fistpl
rcrb
call
daa
int
mov
add
xor
jl
test
stos
add
sub
add
inc
dec
movsb
test
enter
push
push
mov
scas
sbb
add
dec
mov
jae
push
pop
jmp
test
fcomi
xor
sub
push
xchg
clc
and
xchg
movsl
push
divb
jmp
lcall
cmp
mov
out
and
sarb
and
xor
imul
sbb
ficoms
push
std
jecxz
jne
insl
mov
adc
adc
cmp
int3
add
push
mov
xlat
imul
data16
sub
leave
inc
ret
adc
mov
or
dec
xor
adc
jmp
inc
call
dec
and
cli
in
xchg
shll
pop
cld
jl
testb
add
mov
sarb
pop
cli
jg
clc
je
push
stos
cmp
in
mov
adcl
xorl
xchg
dec
roll
xor
divl
imul
insl
aam
and
cmp
cmp
icebp
cmp
idivb
jle
inc
or
fwait
aaa
mov
push
and
jns
lods
xchg
sub
mov
add
adc
pop
xchg
xor
stos
lods
hlt
and
mov
shll
inc
bound
mov
inc
js
stos
sub
xor
sub
push
or
mov
sbb
push
mov
mov
adc
ss
imul
add
mov
xor
dec
enter
imul
fldt
aam
bound
jle
jno
lret
cmp
and
push
mov
out
pushf
in
mov
adc
mov
jmp
lcall
cmp
lock
mov
sbb
adc
xor
lret
test
lds
xchg
js
pop
xchg
movsb
pop
sbb
mov
cmp
call
mov
fildl
lahf
push
push
popf
popf
add
and
das
test
xchg
and
sarl
adc
data16
sub
mov
out
xor
push
add
int
daa
and
adc
loopne
cwtl
push
sub
inc
fisubrl
pop
sbb
addl
rorl
fiadds
lret
sub
into
lods
mov
pop
rorb
inc
jmp
cmp
pop
jecxz
pushf
mov
cmpsb
dec
cltd
pop
xor
xor
sub
and
cmp
adc
add
push
sbb
xor
sub
jle
mov
fsubl
lahf
pusha
add
ficoml
sub
aaa
movsl
imul
int
nop
add
ss
test
jecxz
pop
hlt
inc
fbstp
mov
repnz
sbb
cs
insb
push
mov
mov
mov
repz
xor
mov
dec
and
lretw
test
or
cmp
or
jns
cltd
xlat
popf
pop
dec
scas
xor
je
or
cld
jne
out
xor
sub
add
aaa
pop
jl
sbb
xchg
pop
inc
iret
sbb
sub
mov
mov
ret
scas
cmpsb
sbb
lock
dec
out
xchg
cltd
cmp
pop
sbb
lds
or
lock
push
mov
xor
testl
scas
enter
mov
mov
lods
das
mov
hlt
mov
addr16
out
and
push
or
pop
mov
mov
cmp
stc
push
pop
xor
push
or
dec
addr16
scas
in
iret
add
pop
dec
push
xchg
rcrb
adc
pushf
pop
aas
adc
sahf
jle
nop
mov
jbe
das
fsubl
pop
int
jbe
pop
cmp
js
and
cmpsl
or
jmp
gs
pop
lods
xor
sahf
pop
and
xchg
loopne
jg
and
dec
or
or
jecxz
cmp
mov
sbb
leave
or
sbb
insl
add
decl
mov
je
das
cld
ret
pop
int
add
sub
rorb
out
in
xlat
push
adc
es
mov
pop
decl
in
lcall
xor
mov
pop
push
xor
dec
ja
aad
cltd
cmp
push
inc
pop
outsb
inc
mov
sahf
lahf
pushf
cmp
mov
cwtl
divb
stos
mov
das
scas
test
leave
add
or
jmp
or
inc
clc
xlat
out
pop
lods
pop
imul
ss
lahf
push
ficoml
aas
int
jecxz
inc
pop
or
imul
nop
pop
xchg
jno
xor
bound
mov
mov
jns
mov
leave
or
jge
sbb
rcll
xor
jle
jmp
rorl
movsl
dec
lea
ds
scas
sbb
add
cmp
push
mov
je
fsubl
and
lods
xor
cmp
or
pop
iret
inc
jmp
jo
jne
sub
pop
out
loopne
movsb
dec
adc
lea
jne
sub
cld
sub
mov
mov
mov
mov
outsl
pop
shll
leave
dec
lock
popa
push
std
jmp
scas
repz
lea
mov
adc
pop
push
dec
fisttps
out
pusha
inc
popf
pop
xchg
mov
pusha
jo
ficomps
fwait
dec
mov
sbb
jb
xchg
enter
scas
mov
fcom
xor
mov
sbb
test
mov
inc
sti
adc
inc
adc
dec
popa
fwait
ljmp
sahf
int
dec
out
add
outsb
into
aad
sbb
es
popa
adc
pop
mov
cmc
test
push
jns
pusha
bound
add
cmp
mov
mov
imul
adc
int
lods
mov
loope
shlb
and
push
add
lret
clc
test
js
test
lea
sub
pushf
xchg
iret
lock
cmp
pop
sbb
stos
mov
jp
js
cltd
sbb
mov
mov
inc
pop
es
dec
repnz
popa
xchg
add
jle
imul
call
rol
mov
mov
outsb
popl
xchg
xlat
or
jmp
popf
pop
mov
dec
jae
mov
jo
mov
ss
test
mov
into
xor
bnd
test
cli
dec
and
jns
xchg
xor
add
xor
addr16
pop
jp
cwtl
lea
adc
addr16
jle
jmp
push
jmp
sbb
lods
icebp
push
cmp
add
add
sbb
add
mov
in
orb
xor
xchg
sub
cltd
mov
call
out
jne
dec
sub
sahf
insb
sub
fists
hlt
xor
mov
pop
cwtl
mov
sbb
jle
push
inc
add
inc
jo
adc
pusha
sahf
shlb
mov
adc
inc
push
xor
mov
lret
mov
cld
movsb
sbb
push
addr16
addr16
repnz
adc
jmp
cmp
adc
loope
xor
ljmp
jns
loopne
add
xor
rcrb
cs
jns
insl
imul
xorb
and
mov
push
adc
lret
rsm
lahf
sub
xorl
or
adc
xchg
rorl
fimuls
popa
divb
mov
mov
notb
cmp
xor
inc
hlt
in
aad
mov
dec
sub
mov
xor
jae
pusha
out
sub
mov
mov
subb
mov
fcomps
lods
mov
sub
lds
int3
popf
adc
and
mov
push
cmp
incb
dec
insb
leave
adc
jge
xchg
sbb
xchg
cmpb
lret
jb
xchg
cmp
data16
sbb
das
in
cmp
push
xor
fnstcw
push
xor
or
int
push
cmp
bnd
xchg
or
mov
adc
push
push
es
lea
mov
test
movsb
jg
mov
ss
cmp
fwait
or
jne
scas
test
xor
pop
into
sub
mov
andnps
adcb
popf
ljmp
xchg
mov
data16
int3
fcom
xor
lret
js
push
loop
fsubs
xchg
ret
loop
push
add
jno
mov
xor
jns
stos
xor
sbb
push
lods
popa
aam
and
sbbb
out
les
sbb
pusha
repz
rclb
xor
pop
xchg
push
les
dec
sbbb
lds
nop
mov
mov
push
out
jbe
adc
loop
xchg
push
sbb
testl
cltd
and
fsubrs
push
push
mov
cmc
mov
jge
jmp
jmp
mov
pop
adc
test
cmp
ds
sub
sbb
adc
xchg
mov
or
arpl
pop
test
add
cmp
xchg
push
jb
push
jmp
fs
jle
cmp
push
lcall
or
push
loopne
and
xor
out
popf
sbb
pop
add
test
test
mov
imul
pusha
mov
imul
and
test
pop
addr16
add
sbb
cwtl
pop
sub
in
xchg
ja
testb
and
test
in
dec
sub
sbbb
add
xlat
mov
sbb
adc
or
int
movb
push
dec
inc
imull
outsb
pop
jmp
roll
mov
add
adc
out
sbb
mov
and
add
jmp
jne
dec
xchg
jp
call
sub
mov
ds
sub
sbbb
les
je
mov
push
mov
sub
lret
aad
jl
aaa
rolb
push
ljmp
cmp
mov
cmc
data16
push
jge
jge
aad
outsb
inc
adc
out
xchg
sarl
cmp
mov
inc
fmull
inc
add
sti
sub
jo
pop
mov
lock
ret
int3
and
xchg
stc
cmovge
arpl
iret
test
push
sahf
shll
inc
mov
mov
pop
enter
add
push
mov
adc
ja
mov
pop
in
test
enter
inc
aad
rclb
lcall
cmp
cmp
stos
cmp
mov
imul
and
popa
lods
shl
push
or
pop
adc
sub
int3
mov
xor
mov
fwait
push
and
xor
mov
or
out
lock
cs
lcall
pusha
fcmovbe
sbb
mov
sbb
and
inc
stos
jnp
movsl
scas
popa
mov
iret
ret
iret
sub
and
sub
ss
loopne
mov
cmpsb
fidivs
mov
xor
in
pop
faddl
mov
mov
out
pop
testb
iret
out
lcall
aam
and
faddl
out
mov
add
ds
or
int
pop
roll
xor
repz
mov
lea
push
or
test
cltd
sbb
mov
jecxz
jns
shll
sub
xchg
lcall
aad
int3
cmpsb
push
into
mov
mov
adc
adcl
aas
stc
out
sbb
mov
lret
dec
repz
or
jmp
ret
cltd
adc
mov
ljmp
xchg
shlb
ja
ficoms
push
jnp
mov
dec
data16
adc
sub
test
jmp
in
test
lret
dec
inc
nop
pop
jmp
ja
cmpsb
mov
scas
mov
addb
add
cmp
mov
add
dec
lret
in
stos
cwtl
xchg
xchg
inc
add
xlat
test
iret
mov
orb
adc
sub
pop
push
jmp
cmpsl
jge
push
sbb
or
pop
out
fwait
lock
ss
push
sub
out
jns
cld
jl
iret
scas
xlat
fucomi
fsub
mov
mov
movsl
add
imul
mov
arpl
mov
xor
and
mov
pop
int
je
out
faddp
mov
cmp
fwait
imul
mov
jno
pop
push
adc
sbb
dec
fsts
orl
or
int3
pusha
mov
dec
mov
sub
push
push
popf
enter
test
sbb
lods
jge
int
dec
or
jg
cmp
pop
sbbl
mov
in
aad
push
mov
and
adc
or
jae
or
adc
and
push
into
std
or
push
daa
dec
cmpsb
int
nop
fmuls
loop
aad
lahf
sahf
sbb
pop
out
mov
adc
mov
jne
xchg
or
lret
icebp
inc
ljmp
gs
insl
hlt
movsl
cmp
add
stos
lcall
cmp
shrb
int
ss
pop
cltd
cmpb
aam
sub
mov
push
sbb
pusha
or
int3
dec
test
xchg
out
mov
xor
cwtl
pop
push
jl
in
push
mov
addr16
sbbl
outsl
dec
xchg
jge
sbb
iret
aas
jo
neg
push
test
std
fistpll
mov
pop
xor
callw
jo
das
push
jge
rolb
roll
popf
push
std
cld
cmp
and
mov
call
addr16
gs
sbb
sub
mov
push
xor
inc
sbb
ret
inc
push
pop
addr16
push
data16
lds
outsl
icebp
jle,pn
add
mov
add
xchg
loopne
lret
lcall
add
mov
push
je
sub
subl
lea
sarl
and
in
dec
scas
inc
adc
mov
push
mov
lods
cmp
aas
sbb
adc
out
mov
lahf
inc
mov
inc
arpl
cmp
flds
shlb
in
call
in
fcompl
in
rcrl
mov
lods
jae
test
in
add
sub
mov
mov
mov
das
xchg
addr16
jnp
ja
pop
pop
loop
in
mov
jmp
loopne
adc
mov
jle
leave
push
or
pop
scas
lahf
aam
xor
addr16
loop
dec
dec
push
aaa
jb
insb
lcall
int3
pop
inc
sub
fcmovne
shrb
dec
stc
xor
sbb
fcomps
bound
push
sub
std
loop
cmp
mov
push
movsb
add
inc
dec
inc
sahf
mov
sbb
jo
mov
popa
aas
hlt
ficoml
dec
dec
rcrb
bound
inc
push
lahf
imul
dec
std
sub
fs
cmp
mov
lcall
shrb
jg
or
rolb
idivb
add
rcrb
xchg
pop
push
insl
adc
and
cmp
sub
sbb
xchg
stc
mov
lds
shl
ja
in
pop
dec
les
sbbb
cltd
xchg
add
ljmp
cwtl
jl
iret
pop
les
rcrl
push
or
jg
lods
or
in
call
rolb
rcrb
push
ja
or
pushf
aam
enter
push
int3
fistps
or
jo,pt
mov
sbb
ja
jge
rclb
mov
inc
jae
nop
scas
fldln2
pushl
je
push
scas
jns
add
imul
mov
dec
add
jmp
je
xorb
in
nop
enter
jmp
sbb
jecxz
dec
int
xchg
mov
scas
cmpsb
sbb
sti
and
jae
sarb
xchg
xor
jge
sub
icebp
push
mov
iret
das
ljmp
sti
cli
scas
mov
daa
add
outsl
pop
enter
test
cmp
push
faddl
int3
pop
loopne
je
dec
sub
repz
inc
jae
pop
adc
shrb
inc
mov
pop
sub
test
lret
in
inc
in
xchg
jecxz
cmp
iret
sub
inc
daa
pop
add
gs
repnz
daa
inc
xor
call
movsl
hlt
scas
rcrl
mov
jae
call
sbb
push
cmpsl
jb
addr16
xlat
fs
call
psubsb
roll
ret
es
ret
dec
add
mov
int
mov
xor
es
stc
js
in
pop
mov
pop
mov
mov
cli
mov
int3
xor
push
sub
jl
imul
mov
dec
or
push
and
xchg
inc
lods
mov
out
ror
rsm
clc
jecxz
stc
out
loop
mov
in
pop
aad
les
stos
je
xor
or
xchg
jp
xor
mov
outsb
movsb
imull
mov
mov
test
cmp
ja
adc
call
outsl
in
pushf
adc
imul
jae
insl
add
push
movsb
xchg
mov
sbb
add
std
dec
xor
mov
js
scas
je
hlt
add
cmp
mov
mov
gs
jle
inc
lock
xchg
data16
xchg
sbb
and
inc
sub
and
jl
enter
mov
jg
mov
lds
push
or
mov
mov
jg
outsb
push
jge
stos
inc
popl
dec
ja
fnstenv
in
add
jno
sub
repnz
sbb
mov
sti
inc
and
lea
daa
fidivrs
dec
gs
lods
adc
aam
lret
sbb
pop
inc
and
jecxz
add
imul
adc
mov
lret
fld
fildl
fs
or
sbb
sbb
jge
push
insb
imul
aad
push
sub
push
int3
xchg
aam
adc
cltd
and
ret
xchg
ja
fwait
pop
push
xchg
lret
std
gs
pop
cmp
sbbb
imul
loopne
pop
popf
scas
sbb
add
arpl
rorb
jae
and
jl
jl
dec
lock
fcomps
push
sahf
in
mov
or
std
jge
pusha
das
mov
pop
or
xor
dec
dec
data16
xor
lock
ds
adc
or
repz
xchg
lods
pushf
jecxz
sub
xor
or
add
int
or
push
adc
mov
and
aam
lock
push
inc
daa
daa
test
mov
test
ljmp
mov
lods
sbb
mov
add
lret
add
xor
sbb
cmc
out
adc
inc
ss
scas
icebp
sbb
lcall
gs
push
pushl
lods
pop
add
pop
ficoml
mov
inc
sbb
ss
std
mov
insb
repnz
push
in
mov
push
movsb
adc
mov
vaddss
repz
adc
xor
sub
jbe
sub
idivl
cmc
mov
roll
pop
shrl
out
sbb
add
jae
jb
or
data16
hlt
lret
aam
cld
jo
mov
push
aaa
cli
dec
data16
lock
jnp
xchg
add
and
jo
gs
xchg
xchg
shlb
std
jmp
adc
stc
js
leave
inc
fists
xchg
or
or
jns
lahf
xchg
sbb
shrb
out
push
push
mov
sarb
arpl
repnz
mov
pop
or
roll
pop
daa
shll
cmp
lock
outsb
jge
fstl
cmp
ja
int
jno
dec
das
and
pop
je
push
in
push
dec
jmp
scas
sarl
jae
pop
iret
mov
pop
out
daa
aaa
sbb
cmp
adc
or
leave
mov
nop
mov
dec
sti
cmpsb
dec
outsb
out
adcl
or
pop
loop
push
mov
and
mov
loopne
ss
fnstenv
sub
test
mov
push
cmp
mov
xor
pusha
daa
sub
mov
cmp
adc
pop
or
sub
hlt
popa
xrelease
jl
jecxz
out
inc
out
adc
int3
mov
iret
mov
fimull
shr
gs
out
sub
dec
mulb
pop
pop
iret
out
fsubs
sbb
and
jle
testl
xor
push
xchg
xor
notb
fcomps
cmp
push
mov
jb
jg
movb
mov
fbstp
mov
insl
mov
dec
js
xchg
cmp
fcmovnbe
add
cmp
fsubrl
es
cs
cmp
aaa
repnz
test
popf
dec
jl
push
testl
fisubs
popa
xchg
or
dec
mov
pshufw
pushf
iret
enter
jl
jb
xchg
pop
ljmp
div
add
loop
xchg
cmp
mov
out
jne
jne
cmp
stc
cvtps2pi
jmp
adc
repz
lcall
xchg
in
mov
cmp
xchg
stc
or
adc
jae
mov
lret
pop
fsubs
popa
pusha
xchg
out
cmpb
jp
testl
inc
pop
pop
aas
loop
pusha
fistl
add
in
pushf
int
lahf
test
dec
mov
mov
inc
fs
jecxz
pushf
jmp
stos
inc
outsb
fdivrs
xchg
and
and
daa
mov
arpl
ret
test
pop
cmp
mov
push
and
pop
stos
enter
shlb
and
aas
lods
push
ret
pop
in
icebp
dec
jno
mov
jne
fwait
lahf
or
push
mov
insb
int
push
push
pushf
mov
xchg
cld
or
ds
xchg
mov
mov
popl
in
and
lret
mov
jbe
fsubr
pop
daa
lahf
lea
dec
xor
push
in
add
dec
fnstcw
push
dec
xlat
scas
loopne
mov
and
test
lret
and
push
mov
sub
xor
sbb
cmp
subb
gs
mov
mov
mov
push
add
or
lea
xor
test
xor
cmpsl
stos
ljmp
and
and
cmp
repnz
mov
nop
pop
rcrb
or
hlt
push
sbb
movsl
mov
pop
push
int
push
into
addb
lock
icebp
lods
push
add
icebp
add
pushf
lcall
inc
arpl
nop
leave
fisttps
add
jmp
xchg
add
mov
fcoml
mov
cmp
jns
arpl
dec
sub
mov
xchg
cmp
mov
scas
je
dec
push
mov
lcall
dec
aam
mov
jmp
test
adc
push
cli
into
xchg
inc
pushf
movsb
adc
jp
push
mov
lahf
cmp
jns
vmread
hlt
push
shlb
inc
cmp
dec
cmpsb
sbb
cmp
rcr
cs
mov
pop
int
loope
or
xchg
xor
jle
mov
dec
dec
les
sub
xor
push
sub
pop
lods
add
daa
pop
mov
cmp
hlt
cli
jns
leave
loopne
fistl
jno
add
loope
cmp
fbstp
lock
xlat
movsb
adc
les
dec
push
push
dec
negb
in
push
loopne
ficoms
add
push
xchg
lock
jp
pusha
insl
jns
nop
inc
lret
popa
cmpl
icebp
mov
cwtl
sub
and
mov
leave
jl
cmp
and
cmp
je
enter
adc
jnp
nop
fwait
arpl
mov
cmp
xchg
sub
cmp
jns
sbb
movsb
push
enter
out
adc
xor
inc
push
add
dec
loopne
mov
cli
stos
es
movsb
ds
mov
sub
movsb
cmc
mov
jno
out
std
sbb
aas
sarb
out
ret
mov
gs
push
mov
cli
sub
es
clc
inc
or
or
mov
imul
xor
lahf
inc
pop
lock
nop
or
sbbb
faddl
dec
cs
inc
sbb
cmp
arpl
jae
lea
int
outsl
add
xorb
lahf
in
call
jecxz
sub
mov
shrb
lods
xlat
xchg
daa
arpl
sahf
call
xchg
push
xor
arpl
mov
mov
mov
xchg
imul
fisttpll
data16
xor
fcompl
popa
sub
add
ljmp
inc
mov
push
mov
mov
jne
jne
out
mov
and
fmul
mov
dec
push
sbb
imul
push
stos
add
cltd
bound
scas
or
lods
sar
fidivrl
in
imul
subl
jl
sarl
outsl
clc
jno
push
jns
xor
mov
xchg
push
gs
repnz
ja
adc
and
push
leave
xchg
fisubl
stc
sub
ljmp
mov
pop
ja
jno
mov
cmp
xor
inc
nop
test
lods
outsl
add
psrlq
lahf
imul
add
call
cmpsl
fstpt
sbb
insl
test
adc
jb
bound
and
or
sub
mov
add
xor
and
and
notb
aad
xchg
mov
fwait
leave
bound
push
add
daa
add
scas
sbb
fwait
mov
mov
sbb
xor
sub
mov
or
hlt
in
lret
xor
xor
adc
jo
pop
loopne
call
push
pop
mov
xchg
sbb
stc
xchg
testb
fcoms
scas
mov
lods
xor
jno
stc
push
idivb
inc
push
xchg
iret
in
daa
rcrl
cli
roll
cmp
in
adc
fistpl
adc
sub
add
inc
xorl
xor
pop
xor
test
push
dec
jmp
fiadds
xor
and
rcrb
test
sub
popf
xchg
push
mov
xor
scas
mov
dec
jp
push
mov
mov
cmp
divb
shll
jge
je
push
mov
fstps
push
nop
push
fiadds
xchg
xchg
cs
lds
ret
jmp
mov
pop
arpl
pop
jb
dec
inc
dec
xchg
push
je
mov
cltd
cli
xchg
gs
fldcw
cli
fucomip
mov
add
sbb
cmp
jnp
mov
leave
pushf
pop
jo
sbb
shll
pop
sbb
je
sub
mov
add
enter
test
push
adc
roll
cmp
scas
loopne
xchg
cmpsb
lahf
jmp
call
xor
ds
jbe
add
dec
leave
inc
pop
mov
cld
out
fnstenv
cmp
cli
shrb
or
push
insl
push
sub
das
pop
lcall
outsl
sti
inc
mov
jp
dec
lods
push
ljmp
pop
dec
dec
mov
negl
cmp
in
out
scas
add
mov
or
and
outsl
or
cs
jb
xchg
fwait
add
filds
aad
hlt
jo
or
cmc
xlat
ret
lods
mov
stc
pop
xor
and
jne
ljmp
add
cmp
sub
notb
sbb
xor
les
sbb
cmpl
xorb
test
mov
loope
outsl
lret
in
sarb
jno
movsb
ss
daa
stos
jno
jp
push
loopne
dec
loopne
notl
cltd
add
push
inc
cwtl
inc
int
cmp
mull
test
daa
push
xlat
xchg
mov
jp
cs
push
aas
and
dec
pop
test
sahf
sbb
push
and
lds
mov
fdivr
int3
shr
lods
sbb
andb
mov
mov
jne
or
sbb
call
mov
clc
sbb
into
int3
mov
fsts
mov
push
sti
mov
xchg
sub
dec
sbb
mov
orb
mov
lods
ja
imul
icebp
push
inc
sub
jp
mov
dec
inc
xchg
mov
lret
dec
push
pushf
dec
lret
sbb
mov
cltd
pop
je
shlb
push
push
loopne
mov
outsb
mov
jle
mov
sub
inc
ja
dec
mov
cmp
add
jb
mov
jecxz
or
cli
test
rcr
and
add
xchg
out
mov
out
stos
insb
adc
cld
bound
pop
dec
push
jo
je
out
fstpl
in
test
jns
addr16
aaa
jecxz
pop
div
imul
xor
and
or
inc
hlt
push
pop
cmovne
loope
add
inc
dec
xchg
adc
psubw
in
ror
les
out
mov
aas
aam
movsb
mov
cmp
cmp
sbb
pop
shlb
mov
jne
mov
js
movsl
into
in
mov
cmp
mov
js
fdivr
cmpsb
mov
lock
jo
xorb
mov
test
xchg
dec
enter
mov
into
lds
push
cmp
adc
mov
roll
scas
ret
jle
adc
out
dec
outsb
xchg
negl
out
add
pop
dec
sarl
js
and
jl
jo
lods
push
dec
addr16
shl
jno
adc
add
js
xchg
mov
dec
mov
rcrl
adc
and
jb
mov
adc
mov
dec
cli
mov
test
inc
jbe
cltd
nopl
sub
shrl
xor
loopne
sti
enter
lods
fiadds
and
mov
inc
mov
std
inc
aad
cmp
lret
stc
gs
imul
test
stos
and
and
mov
sub
mov
mov
in
push
pop
adc
jne
lcall
mov
icebp
or
ret
or
in
out
rol
or
fcmovnbe
pop
jge
shlb
xchg
jp
mov
ja
cwtl
loope
cltd
jecxz
xor
xor
xchg
jne
or
inc
xchg
dec
shl
adc
cmp
jo
int
inc
and
mov
xchg
adc
xor
mov
dec
xchg
cld
xchg
out
pop
mov
mov
repz
mov
sbbb
jo
movb
rcrl
sbb
lock
cmc
fsubrp
sbb
mull
pop
lea
das
pusha
cmp
movsl
lahf
adc
sahf
stc
mov
inc
mull
sbb
int3
add
or
stos
adc
fildll
in
pop
fildl
js
xor
xchg
and
aad
fs
cmp
fidivrs
sbb
pop
pop
jecxz
movsb
scas
sbb
inc
pop
add
test
push
mov
out
dec
jmp
daa
in
push
hlt
xlat
dec
jnp
cmp
mov
sbb
cmp
in
and
jae
sub
cmc
xchg
add
jae
mov
mov
rolb
pop
ficompl
in
push
frstor
jbe
push
ljmp
xor
dec
mov
out
mov
or
fs
dec
les
mov
fcmove
mov
in
mov
cmp
scas
cmp
or
stos
pop
jl
test
push
ffreep
mov
xlat
lods
ss
lods
mov
lea
es
fmulp
mov
test
push
inc
rorb
inc
gs
ficompl
cmp
sub
push
jo
or
lret
jg
hlt
inc
push
pop
out
stos
mov
out
outsl
fiaddl
pop
lock
adc
test
dec
add
or
or
fmul
add
test
or
adc
fistps
xchg
xor
push
pop
jb
cltd
cltd
push
into
loopne
mov
jnp
push
ljmp
pop
pop
add
dec
and
iret
add
ljmp
leave
add
push
imulb
test
jge
movsb
pop
and
mov
popa
mov
inc
inc
mull
int3
sbb
or
inc
pop
fbstp
iret
clc
sub
sub
inc
in
push
out
jg
xchg
and
popa
push
push
mov
pop
aaa
xor
inc
mov
jae
inc
faddl
and
pusha
mov
imull
fadds
movsl
xor
cmp
mov
jl
adc
mov
loopne
jecxz
gs
jo
pop
push
out
ljmp
adc
dec
fcmovb
sbb
jp
push
fmuls
mov
loopne
stc
pop
or
stos
popa
jo
lock
pop
fldln2
xor
pop
pop
jp
shrb
inc
lahf
dec
rcr
push
fiadds
and
mov
loope
mov
insl
or
cmc
orl
jecxz
sub
in
mov
cmp
jge
sbb
adc
insl
pop
stc
dec
push
mov
or
add
xor
fmull
sti
sbb
push
lcall
or
inc
or
imull
push
aaa
lds
xor
pop
jb
fistps
jl
mov
xlat
and
clc
adc
cmp
arpl
stc
jecxz
daa
jecxz
pop
sub
jnp
hlt
jne
mov
into
pusha
stc
cvttps2pi
in
inc
mull
outsb
and
mov
jecxz
sub
ret
xchg
lcall
in
mov
test
testl
adc
push
pop
xchg
or
jmp
sbb
in
inc
repnz
nop
cmp
mov
jmp
fldl
xchg
pop
pop
pop
fidivl
pop
jle
pop
stos
lret
add
adc
adc
xchg
jo
lods
cmpsl
cmpsl
aaa
inc
dec
in
lcall
test
xlat
dec
dec
sbb
pop
sbb
scas
sbb
mov
or
mov
idivb
pop
into
andb
addr16
in
fwait
negl
mov
push
data16
add
mov
push
fimuls
sahf
into
in
cwtl
xlat
std
out
xchg
xchg
xor
pop
lea
mov
cmp
sti
mov
adc
orb
mov
push
jp
mov
mov
adc
xor
shl
push
int
outsb
scas
cmc
mov
rcrb
loop
cli
popa
addr16
mov
jns
pop
add
lds
or
out
test
mulb
mov
ds
out
mov
jns
mov
popa
sub
cmp
and
repnz
sarl
inc
inc
popf
clc
lcall
out
dec
fildl
inc
add
icebp
repz
stos
adc
mov
movsb
addl
mov
jns
lods
mov
insl
jnp
cmp
adc
pop
imulb
adc
mov
sahf
icebp
pop
test
std
mov
outsl
ss
je
lock
mov
mov
adc
dec
ret
mov
xchg
daa
cmp
pop
enter
fisttpl
push
arpl
imul
and
jmp
inc
push
cmp
shlb
mov
and
sbb
cmpsb
imul
and
pop
pusha
and
nop
jb
and
adc
in
insl
test
leave
fdivr
shrb
mov
xor
lcall
bound
jae
rclb
sub
cs
fdivl
pop
cmp
inc
lcall
ds
mov
pop
or
sub
cmp
mov
jl
and
sub
lods
lcall
pop
dec
dec
mov
sbb
or
dec
sbb
stos
add
pop
int3
cli
cmp
cwtl
mov
clc
xchg
fwait
xchg
mov
or
mov
loopne
add
sti
jno
adc
adcl
nop
pop
mull
dec
xor
mov
xor
int3
pop
repz
xor
push
mov
cwtl
cmp
xchg
sbb
mov
cltd
dec
sub
cmpsl
addr16
das
mov
dec
sbbb
and
pop
dec
adc
dec
pushf
fcomi
insl
fstps
ds
outsb
cmp
mov
mov
pop
mov
pushf
addr16
cwtl
dec
nopl
ret
cmp
jecxz
cmp
bound
loop
repz
sub
shll
push
xchg
sbb
seta
loopne
push
cmp
mov
or
ljmp
cmpb
sub
jge
jle
xor
ja
add
in
xchg
psubsw
mov
loop
lcall
in
shlb
mov
scas
arpl
add
jbe
stos
out
addr16
out
dec
xchg
pushf
mov
insl
sbb
cmp
loopne
shlb
xchg
add
popa
and
rorl
xchg
pop
mov
inc
and
ja
addr16
mov
outsl
and
gs
test
lret
add
pop
cltd
outsl
loopne
aaa
mov
lock
adc
jecxz
push
pop
cmp
and
sbb
dec
inc
mov
in
rcrb
cld
fld
inc
mov
sbb
lret
ds
clc
fmuls
cmp
pop
pop
cmp
pop
pop
enter
push
xchg
imul
ror
insl
cltd
mov
icebp
push
fcoms
data16
mov
jno
or
adc
mov
loop
push
mov
or
scas
mov
mov
imul
xchg
imul
test
pop
mov
ds
outsl
mov
mov
inc
add
jae
cmc
stc
scas
inc
stc
rcll
shr
xlat
sub
sub
shr
jg
mov
xor
imul
pop
or
sbb
mov
and
bound
imull
sub
fldcw
mov
add
cs
push
in
xor
fidivl
add
out
sub
mov
sarl
pop
cmp
ficoml
and
shrl
int3
push
push
mov
rcl
fs
or
in
sbbw
lcall
roll
push
push
jb
cli
jb
cmp
movb
scas
inc
pop
mov
xchg
imulb
mov
cs
xchg
lds
shrl
mov
std
pop
adc
das
scas
cmc
push
xchg
adc
call
ds
push
xchg
cmovg
adc
fisubl
push
mov
mov
roll
loop
push
scas
pop
or
add
mov
mov
js
dec
xchg
push
cltd
sti
test
adc
out
lcall
out
pop
inc
mov
fucomi
je
outsl
rorb
shll
scas
ljmp
fidivl
fistps
pop
mov
add
push
in
push
or
pop
addr16
lcall
xchg
adcb
es
xor
pop
or
test
pop
test
std
cmp
sti
xchg
popa
jnp
mov
fiadds
adc
xorl
mov
cmp
out
mov
rcrb
scas
push
sti
pop
xchg
subl
sub
mov
cmp
and
sub
jecxz
hlt
adc
into
aaa
dec
inc
mov
mov
mov
add
or
test
in
mov
xchg
jmp
add
mov
call
cmp
loop
pop
and
add
aam
mov
mov
into
fldcw
or
sbb
shll
sub
push
xchg
je
and
jb
sub
xor
mov
mov
adc
pop
mov
sub
fs
or
xor
out
faddl
sarl
aad
add
sub
test
xor
mov
jmp
xor
jmp
sbb
jbe
push
out
sbbl
mov
xor
daa
js
sbbl
mov
in
cmp
rorb
je
cmpsl
aam
mov
je
cmp
lods
cmpb
inc
mov
lds
xchg
cs
sbb
subl
add
or
push
das
mov
andl
loopne
sub
or
xchg
out
mov
cmp
ljmp
dec
or
mov
nop
dec
cltd
sub
int
imul
push
lods
fs
movsb
pop
mov
cltd
mov
mov
inc
sbb
add
popf
xchg
rolb
js
daa
dec
inc
hlt
adc
aas
in
add
lods
sub
mov
mov
mov
xchg
shll
push
jbe
push
rorl
add
sub
out
call
stc
loope
lcall
imul
and
jg
sbb
mov
xor
or
loope
repz
out
lret
roll
mov
inc
sbb
xlat
mov
inc
jl
hlt
or
dec
xchg
loop
jmp
popf
inc
xor
out
rcrl
mov
fildl
loope
pop
movsl
fldt
mov
dec
daa
fstpl
das
mov
mov
sub
sub
inc
jecxz
test
sbb
outsb
scas
and
shll
scas
clc
repz
push
test
sbb
mov
or
dec
sub
cli
pop
push
cmp
mov
push
shll
outsb
sub
push
mov
and
rorl
inc
lcall
dec
in
out
inc
insb
push
dec
push
dec
cmc
lods
xchg
into
push
movsl
cs
iret
xor
xor
shl
jne
sub
scas
fldcw
jbe
xor
sti
rorb
mov
loop
mov
insb
jle,pt
xchg
mov
sarl
pusha
inc
imul
dec
jnp
sbb
scas
mov
mov
cmp
inc
add
lret
es
out
lds
xor
repnz
pop
pop
inc
lcall
inc
sbb
jp
pop
or
mov
dec
enter
push
jne
xor
lods
aas
loopne
dec
mov
outsl
mov
mov
and
cmp
out
lock
bound
adc
aam
jle
je
cltd
ficomps
jae
mov
fwait
int
mov
std
jle
jbe
mov
inc
mov
stc
mov
test
mov
pop
mov
cld
sub
in
cmp
nop
inc
mov
xchg
cmp
push
into
test
jmp
push
cwtl
insl
clc
or
jns
loope
mov
or
ror
insl
adc
mov
je
push
out
lods
lcall
bound
push
pop
push
pop
scas
ret
mov
mov
cmc
cmp
mov
daa
fs
pop
loopne
mov
mov
xchg
sub
adc
inc
pusha
mov
push
in
sbb
fisubrl
jae
cmp
push
inc
lret
fcomps
or
pop
aas
pop
dec
ja
dec
jbe
xchg
sti
pop
insb
inc
cwtl
mov
inc
sub
cmp
fdivp
mov
adc
hlt
sbb
sahf
fidivrl
adc
add
fnstenv
mov
pop
lahf
shll
mov
jbe
lods
or
push
mov
pop
jae
int
mov
shl
enter
cmc
loop
lds
dec
jno
cmc
aas
mov
push
mov
mulb
jns
mov
jae
cltd
adc
iret
fsubp
sub
xchg
out
sbb
jno
lret
adc
cmp
daa
lock
inc
popf
xchg
mov
mov
outsl
pushf
movsl
aad
xor
dec
testb
fidivl
ret
cmp
ds
mov
dec
dec
mov
dec
mov
shlb
jl
inc
sub
cmc
dec
sbb
shll
subl
test
xchg
pop
adcl
pop
inc
sbb
mov
arpl
sar
jge
cld
xchg
xchg
jnp
lods
fdiv
rcll
lea
stc
jb
mov
mov
sarl
aam
push
repz
inc
jecxz
sbb
inc
cltd
pop
rcll
xchg
or
outsl
pop
xor
push
adc
push
imulb
pusha
nop
push
insb
jo
aaa
adc
repz
std
push
inc
movsb
std
inc
xor
lds
inc
and
jnp
call
jmp
dec
mov
push
or
mov
out
rcrb
mov
cmp
fnstcw
lods
or
mov
pushf
les
inc
mov
xor
aam
popf
movb
lret
mov
out
shlb
push
dec
nop
mov
or
test
lods
xchg
mov
mov
sub
pushf
imul
push
jge
fisubrs
lods
lock
repnz
inc
test
mov
out
aaa
sub
pushf
ret
fists
out
les
repz
push
inc
mov
push
add
mov
rorl
bnd
adc
cltd
xchg
aaa
add
xchg
xchg
inc
lods
rclb
test
sbbb
int
add
push
or
pop
push
lcall
jbe
stos
aaa
movzbl
inc
lcall
push
dec
ss
out
and
gs
xchg
jne
jge
dec
sbb
inc
ret
add
sar
jmp
push
gs
mov
lods
fdivrs
and
jnp
mov
inc
cmp
mov
xchg
ds
xchg
xor
test
hlt
popa
dec
neg
mov
or
hlt
mov
adc
in
out
and
push
adc
arpl
dec
call
int3
out
pushf
push
jecxz
je
hlt
in
jmp
mov
cs
out
lahf
jb
adc
int3
mov
nop
stos
pushl
movsb
ja
pop
in
lret
adcb
btr
and
or
xor
es
inc
cmp
fdivl
push
cmp
jno
add
sbb
mov
dec
lods
jmp
mov
popf
mov
mov
sbb
mov
dec
imul
push
xor
pop
xchg
lods
sar
pop
lock
dec
pop
xor
ljmp
test
xor
inc
and
add
pop
lcall
inc
cmp
lret
scas
mov
stos
inc
mov
pusha
pop
fisubrl
jmp
outsl
fisttpll
and
jae
insl
jmp
push
mov
jb
inc
dec
iret
push
arpl
jecxz
rcrl
push
sub
sti
pop
dec
imul
mov
xor
xor
mov
fistps
mov
test
les
cmpb
and
js
ss
call
pushl
jns,pn
push
mov
ret
pusha
call
pop
push
mov
insl
jae
mov
add
cld
fiaddl
sbb
lret
adc
scas
std
popa
xchg
mov
xchg
cmpxchg
sub
addl
mov
cmpsl
jns
addr16
aas
push
xor
movsl
cmp
sub
fisubrl
mov
in
insl
loopne
mov
ss
pop
fisttpll
sbb
and
mov
lods
mov
adc
scas
xor
mov
out
js
enter
jg
jge
pop
lcall
daa
inc
fcompl
and
cmp
shlb
or
sahf
sbbb
adc
xor
pop
out
mov
test
mov
add
mov
sub
std
add
adc
and
test
cmp
jmp
mov
jns
aam
lret
iret
inc
out
jb
ljmp
mov
pop
dec
mov
lea
rorb
jbe
nop
jb
xlat
dec
add
gs
push
dec
enter
outsb
mov
mov
adc
cs
int
pop
mov
inc
xor
orb
or
dec
mov
mov
push
fs
sbb
xor
mov
mov
cwtl
fsubs
jb
call
inc
mov
sbb
pop
movsb
dec
mov
jge
out
outsl
ud1
mov
adc
fdivr
mov
lea
mov
loop
inc
sbb
int
dec
imul
jmp
mov
xchg
lahf
jb
mov
test
lods
xchg
xchg
cmp
rolb
rolb
and
xor
daa
cmpsb
out
insl
jb
ret
scas
xchg
mov
call
xor
cltd
lds
ljmp
sub
jns
pop
loope
sbb
mov
mov
clc
cmp
cmp
mov
ds
jae
shrl
ret
add
and
popf
addr16
jb
dec
xor
dec
insb
jmp
int3
dec
pop
adc
fcomi
mov
pop
sbb
cwtl
out
or
xchg
insl
popa
and
push
sub
scas
and
push
sub
aas
or
out
stos
imul
mov
xchg
je
cltd
imul
shll
sub
add
mov
and
cmpb
pushf
mov
out
xchg
cmp
and
xchg
test
push
pop
xchg
cmp
xchg
es
aad
arpl
or
jns
xor
adc
adc
jg
fldcw
daa
movsb
adc
ljmp
fimuls
and
pop
or
cmp
repnz
mov
aam
jg
inc
mov
jne
lods
cmc
add
add
adc
and
test
pop
xor
pop
mov
loopne
mov
outsl
mov
dec
pop
xchg
xlat
ds
cmpsl
sarb
xor
push
pop
pusha
mov
idivl
clc
dec
sub
adc
mov
test
lret
jmp
stc
dec
loop
inc
mov
ss
js
cmpl
dec
xchg
in
lock
inc
add
xor
xor
dec
test
mov
or
sbb
imul
cmp
mov
loopne
loop
dec
inc
dec
cmpsl
mov
fadd
iret
add
rol
cltd
inc
insl
mov
cli
dec
jge
mul
jg
lret
sub
ljmp
scas
pusha
shll
lds
pop
pop
addl
roll
popf
push
gs
clc
lret
es
out
pop
dec
cmp
out
mov
das
andb
sbb
jnp
adcb
or
sub
pop
and
push
mov
add
xchg
mov
daa
cmp
pop
pusha
xchg
ds
xchg
pushf
add
inc
or
jbe
push
mov
add
enter
popf
aam
stos
add
cmpsl
mov
sbb
dec
rorb
test
xchg
inc
call
arpl
mov
xchg
fisubs
push
sub
aaa
cmpsb
cs
adc
push
mov
pusha
es
xor
es
and
inc
lret
scas
push
shrb
xlat
enter
sbb
add
and
ds
mov
adc
mov
test
enter
cmp
or
adc
cmpsl
xchg
inc
and
pop
mov
or
mov
loopne
scas
push
les
call
out
sub
sbbb
sub
bound
xchg
xchg
repz
jbe
cmp
out
cmp
shrl
ret
xchg
dec
enter
sub
mov
rclb
sbb
orl
mov
cmp
ljmp
push
dec
mov
mov
and
gs
jle
imul
fs
rclb
dec
stc
pop
negb
jb
subb
shll
cmpsb
add
sti
xor
scas
sarb
loope
xchg
mov
aas
pop
ljmp
mov
xor
push
scas
fs
cltd
mov
std
bound
and
xor
sub
jne
pushf
and
sub
or
adc
xchg
setae
popa
mov
push
stc
adc
test
mov
lret
ficompl
xor
jl
jle
dec
dec
add
pop
ja
xor
in
gs
cmp
ffree
dec
mov
in
cs
adc
inc
push
sub
pop
stos
scas
xlat
rcr
cli
jle
nop
lret
dec
test
mov
push
ds
adcl
bound
dec
les
cwtl
outsl
sub
sub
movsb
mov
jne
repnz
loop
aas
mov
sbb
cld
cmp
mov
cmpl
xchg
pop
push
mov
lods
std
mov
xchg
jne
mov
insl
outsl
jge
mov
insl
into
xchg
mov
js
mov
arpl
push
sbb
or
adc
pusha
sbb
or
mov
add
sub
fwait
lock
outsl
popf
jb
test
and
sbb
dec
add
sbb
je
mov
mov
inc
jg
push
movsl
dec
popa
in
dec
loope
jp
call
adc
adcb
fsub
xor
mov
xchg
pop
ljmp
cmp
cltd
cmp
repnz
out
repz
fs
cwtl
in
adc
and
push
or
mov
inc
xchg
cltd
test
popf
jmp
inc
nop
pop
cmp
jbe
aam
call
subb
adc
mov
add
shl
pop
pop
daa
ljmp
inc
in
add
push
jmp
out
lahf
lods
outsb
movd
popf
ljmp
dec
cmp
and
mov
stc
lret
mov
mov
test
enter
ret
push
lods
lret
idivl
push
pop
rorb
push
in
sub
dec
dec
test
mov
movsl
mov
outsb
mov
es
or
pop
lods
repnz
jo
and
jmp
std
xor
push
push
mov
or
lods
stos
sub
mov
aad
push
mov
mov
mov
dec
imul
xor
lds
testl
into
ds
and
or
push
cs
mov
rol
xchg
pop
cmp
movsb
fwait
out
push
out
adc
or
test
xor
pop
xchg
js
mov
jle
sbb
mov
sub
xor
mov
or
aas
cs
or
sbb
mov
out
leave
jns
pop
cwtl
fidivrs
push
mov
loopne
jns
jb
out
cltd
das
push
jb
lods
or
xor
push
xor
pop
fistpl
std
data16
dec
inc
xchg
push
pop
lds
mov
lock
fdivs
movsb
push
stc
add
mov
pop
inc
xchg
jae
push
push
pop
in
xchg
push
mov
stos
out
stos
nop
fidivrs
mov
out
adc
jg
imul
hlt
mov
adc
insb
cmp
mov
pop
dec
adc
subps
jns
test
fs
enter
pop
lds
mov
push
test
pop
jmp
popf
pop
xor
sub
mov
dec
jge
xor
scas
adc
outsl
xor
or
inc
call
push
mov
cmpsb
stc
aad
fistpll
push
xor
and
rcl
push
inc
stos
add
sbb
sub
adc
add
int3
ljmp
mov
or
jo
stc
rep
dec
scas
std
push
adc
popa
rcll
and
push
test
xchg
push
lods
call
xor
mov
orl
adc
jnp
add
clc
xor
clc
push
mov
pop
je
mov
cmpsl
jns
dec
lds
aas
sbb
inc
stos
mov
lret
insb
hlt
js
out
dec
and
cld
bound
hlt
test
test
not
cmpl
xchg
pop
ds
pusha
dec
outsb
adc
imul
decl
loope
push
jbe
stos
aaa
stos
movsl
stc
ja
jb
sbb
mov
shrl
out
je
sbb
cmp
pop
jge
xchg
mov
cmp
push
add
mov
ds
js
mov
lock
ss
scas
lret
les
or
mov
xchg
jp
addr16
imul
pop
push
mov
imul
inc
xor
jmp
mov
negl
pushf
pop
cld
or
cmp
jecxz
cwtl
jecxz
test
lret
dec
add
add
pop
in
sahf
nop
gs
sbb
sbb
int
ja
sbb
les
jecxz
pavgb
sbb
mov
sub
xchg
rcrl
push
insl
pop
pusha
push
mov
adcl
stc
ss
mov
dec
pop
xor
xchg
lock
mov
pop
mov
mov
cltd
seta
jecxz
xchg
out
mov
cmpsl
in
lock
mov
xchg
nop
mov
push
mov
mov
jno
outsl
pop
sub
test
jbe
push
and
sub
pusha
mov
clc
add
test
push
jge
ret
clc
popf
sub
xor
jp
or
and
popa
and
and
cmp
les
idivl
call
js
ror
push
leave
adc
pusha
scas
cmp
push
mov
lahf
and
in
jnp
jecxz
adc
daa
mov
jbe
pop
call
test
fsubs
adc
int
cli
gs
daa
loopne
xlat
test
push
and
daa
pusha
out
cmpsb
mov
inc
xchg
nop
push
sub
aam
fnstenv
ds
dec
lds
popa
pusha
push
dec
sarl
xchg
in
out
sbb
mov
jns
int3
std
inc
or
je
adc
inc
sub
int3
xor
subb
lock
adc
shll
es
push
les
out
mov
mov
or
xchg
outsl
dec
cld
sahf
xlat
jmp
rorl
sub
push
push
es
dec
mov
addr16
jl
out
arpl
cmp
cwtl
test
jnp
lock
pop
arpl
add
inc
xchg
call
lock
fistl
push
mov
shlb
mov
loop
lret
les
sti
ficompl
loope
push
cli
out
les
test
leave
mov
mov
fsubr
subb
test
repz
dec
clc
outsb
outsl
ret
std
shrl
push
daa
pop
pop
icebp
out
sbb
pop
bnd
stos
push
mov
call
loope
sbb
and
pop
jmp
or
clc
jp
cwtl
cmc
aam
lcall
cmpl
and
push
inc
in
loop
pop
adc
pop
inc
mov
pusha
xchg
push
imul
and
in
mov
pop
sbb
jns
mov
or
test
push
rclb
cld
cmpl
push
xchg
lret
es
adc
dec
in
xor
xor
or
ret
add
out
push
mov
orl
sbb
mov
das
pop
pop
jge
jo
xchg
sub
cmp
xor
push
imul
idivb
mov
push
loope
sub
leave
add
cmp
pop
incb
test
movsb
outsl
nop
lds
cmpb
pop
or
enter
adc
stos
jbe
les
cmp
and
inc
cmp
leave
cmc
sub
xor
popf
xchg
out
xchg
mov
jecxz
pop
mov
lods
and
rolb
xor
hlt
fistpll
popf
mov
outsl
cmpsl
lods
lret
mov
data16
rcrl
jo
or
shr
jle
xchg
inc
lcall
xor
jle
jle
shll
cmc
xchg
imul
inc
lea
mov
dec
xchg
mov
call
or
fcomps
gs
mov
loope
add
pop
ret
loop
dec
sub
xchg
push
lret
and
sbb
add
movsb
pop
jp
addl
xchg
push
dec
das
cltd
push
lods
mov
ljmp
xchg
std
xchg
adc
xor
sub
into
or
addr16
int
mov
ljmp
inc
cmpsb
stc
xor
insb
adc
add
cmp
daa
roll
dec
and
inc
movsb
popa
shlb
add
test
add
stc
cmpsl
push
or
sub
or
adc
pop
or
int3
inc
les
imul
outsl
jns
out
inc
jno
xor
cmc
fistl
loope
mov
mov
clc
sbb
scas
rorb
mov
inc
data16
pushf
in
int
cmp
cmp
xchg
jne
repz
and
test
pop
xchg
scas
push
inc
daa
xchg
adc
shrl
fnstcw
and
jbe
sbb
scas
adc
pop
in
pop
inc
jg
adcb
and
adc
mov
adcl
mov
in
inc
lods
loop
lret
jmp
fs
rcrl
mov
fisttpll
dec
ss
add
mov
flds
pushf
ffreep
je
mov
or
out
mov
xchg
mov
cltd
into
addr16
bound
aam
mov
push
rorb
add
test
dec
xchg
or
mov
cmpsb
insl
push
scas
pop
adc
insb
out
inc
hlt
mulb
frstor
cltd
gs
insl
aad
dec
mov
outsl
bound
adc
sahf
pop
pushf
ja
test
push
stos
nop
push
aam
or
push
lods
out
gs
pop
inc
loope
inc
adc
pushf
cmp
stos
inc
clc
mov
aas
inc
addl
push
clc
mov
or
dec
cli
mov
cmpsl
ret
out
jg
xor
popf
ds
leave
imul
inc
loop
or
adc
repz
sub
mov
mov
jno
scas
xchg
dec
add
xlat
in
sar
jmp
push
bound
push
pop
or
mov
out
cli
js
or
test
mov
test
dec
sbb
arpl
fadd
loope
push
xchg
inc
fnsave
insb
out
lahf
xchg
add
push
lock
or
mov
repnz
mov
ret
jp
jo
sbb
xor
vmwrite
aaa
adc
sbb
aas
push
cmp
xchg
pop
and
cmpsl
js
push
daa
popf
rcrb
aad
pop
mov
cli
sub
hlt
xchg
and
leave
adc
xchg
jns
jbe
cmp
mov
xchg
mov
test
ds
add
pop
jl
cltd
ljmp
push
pop
pop
xor
mov
fiaddl
xor
sbb
xor
pop
loop
mov
cmp
outsb
faddl
std
xor
adc
jmp
sbb
push
lcall
or
xor
clc
rcrb
sbb
aad
sarb
popl
mov
sbb
test
lods
lds
cmp
push
sbb
into
mov
int3
cwtl
push
inc
mov
adc
mov
mov
xor
fcompl
lock
mov
dec
dec
lods
in
push
outsl
mov
repz
pop
mov
jecxz
inc
das
adc
ja
xchg
mov
fiaddl
xchg
or
scas
cmpl
push
repnz
in
dec
dec
mov
addr16
nop
rcl
mov
das
xchg
in
ljmp
pop
in
mov
push
mov
scas
cmp
ljmp
push
es
lcall
insb
cwtl
lret
leave
cwtl
aaa
push
scas
push
out
ror
add
xchg
gs
notb
jbe
pusha
in
rcrl
icebp
in
repnz
and
inc
movsl
shrl
mov
sbb
inc
mov
push
mov
test
cmp
jmp
jecxz
insl
push
ret
mov
ss
mov
mov
popa
ja
lods
lds
ss
call
jecxz
cld
or
jb
mov
push
sbb
and
rcll
sub
xlat
fst
movsb
cwtl
shrb
movsl
movsb
xor
mov
and
fwait
popf
inc
or
sarb
sbb
les
ljmp
push
dec
push
test
iret
xor
fucomip
mov
dec
sbb
pop
lock
fnsave
inc
insl
cmpsb
loop
in
fsubs
mov
jne
pop
jl
adc
mov
jp
ja
movsl
outsb
sub
xor
jle
jb
outsb
cmpsb
xlat
sub
jle
jno
mov
je
push
sub
push
int
mov
fstpt
adc
clc
pusha
mov
outsl
cltd
outsb
inc
test
cli
in
pop
fdivrl
inc
insl
or
pop
jo
mov
fnsave
cmp
jns
inc
popf
cmp
shll
and
mov
das
test
in
lock
add
sbb
jbe
inc
add
jbe
lods
bound
mov
jmp
dec
or
push
adc
fiadds
je
and
mov
cmp
movsl
add
loop
sub
pop
andb
or
add
cmpsb
sbb
jp
mov
shll
iret
mov
sti
cltd
inc
jecxz
jecxz
scas
adc
pop
push
mov
lret
adc
pushf
orl
leave
xchg
dec
or
lock
inc
dec
lods
lods
out
jecxz
xchg
cmpsb
je
push
or
inc
aam
jmp
cmpsb
ja
push
mov
js
cmp
and
mov
outsl
pop
loopne
rorb
xchg
push
repnz
mov
bound
xchg
ss
imul
cmp
lods
lea
mov
mov
out
or
sahf
mov
cmp
push
add
cld
add
scas
sub
or
adc
inc
popa
and
icebp
shll
imul
xor
fcoms
fimuls
adc
outsl
mov
arpl
and
sub
test
mov
cwtl
adcl
add
jno
std
inc
pop
pop
in
push
jg
pusha
xor
pushl
push
mov
test
mov
ja
addl
in
push
fs
and
out
fs
loopne
pop
sub
push
pop
inc
rolb
icebp
shlb
popf
or
or
repz
ficomps
inc
inc
jns
sub
jns
adc
push
rcrb
inc
repnz
divb
pop
jns
rcrb
out
dec
pop
push
inc
add
xchg
mov
mov
repz
repnz
lock
mov
mov
pop
and
out
xor
aam
jnp
iret
mov
mov
js
cwtl
pop
xchg
inc
mov
lcall
andb
jge
or
sub
mov
inc
popa
out
xchg
je
push
push
mov
cmp
bound
and
or
in
nop
add
fldt
repz
and
cmp
mov
popa
pop
jge
int
jne
aas
sbb
and
dec
adc
dec
lahf
mov
lret
pop
mov
aad
pop
cld
fimull
dec
push
mov
cmc
xchg
mov
inc
out
subb
nop
stc
inc
jo
dec
push
or
repnz
clc
fnstenv
dec
dec
in
dec
sbb
push
dec
mov
cmpl
xor
jae
sbb
daa
sbb
jecxz
daa
imul
adc
adc
lahf
lcall
idivb
inc
sbb
inc
jno
xchg
mov
cmpsl
addl
lcall
out
xchg
int
lods
cmp
adc
rolb
hlt
aaa
inc
jae
push
adc
dec
jno
sahf
das
mov
movsb
aad
push
sbb
push
jge
xorb
aam
hlt
mov
sub
jbe
or
int
push
xchg
mov
insl
fmuls
and
adc
out
xorl
cli
sbb
dec
push
fidivl
pop
xchg
and
sbb
inc
mov
movsl
lret
pop
jge
cli
sub
pop
sub
test
or
js
sbb
mov
dec
dec
les
in
outsl
andb
xor
int3
ja
push
push
mov
cmpsl
adc
inc
subb
in
outsb
xchg
xchg
or
cmpsl
lahf
adc
inc
xor
mov
pop
cmp
sub
push
sahf
out
insb
js
push
movsl
pop
dec
cld
jmp
addl
sbb
or
sti
cltd
cmpsl
testb
and
ja
pushf
decb
xlat
loop
cs
loope
fisttpl
aaa
cltd
sub
outsl
scas
les
sub
push
adc
sub
dec
shll
sub
cmpb
lret
sub
addl
fsubl
ds
pop
xor
pop
mov
jns
add
pop
dec
mov
add
repz
andl
inc
add
push
out
mov
lret
lods
mov
xchg
insl
adc
ja
divb
stos
add
fsubl
pop
adc
sub
or
nop
xor
das
adc
sbb
repnz
enter
dec
push
dec
mov
inc
sbb
lret
adc
adc
repnz
addb
xchg
jnp
cmp
repz
pop
push
ss
pop
pusha
hlt
push
mov
loop
arpl
or
push
lcall
mov
push
mov
inc
jl
ja
jmp
fadds
jmp
push
add
add
or
popf
add
jns
in
orl
sti
fwait
and
les
fcoms
sub
test
and
movsl
inc
dec
loop
movups
xor
sub
xchg
inc
lahf
pop
push
xlat
jb
mulb
push
clc
inc
adc
ret
pop
pop
enter
pop
sbb
mov
jl
mov
inc
lods
jmp
push
call
lcall
int
mov
in
ss
imul
call
andl
aad
add
add
mov
xor
bound
ljmp
or
xlat
fcompl
inc
sbb
ljmp
adc
daa
xchg
and
dec
fisttps
sub
and
or
stos
add
cmpsl
faddl
mov
nop
pop
jbe
das
pop
xchg
ds
xchg
adc
lahf
cltd
mov
ja
lods
into
sbb
fsubrs
fmulp
mov
stc
jns
adc
pop
and
insb
dec
jbe
dec
fisttpll
push
push
and
je
mov
inc
hlt
mov
cmpsl
inc
cmpb
mov
jb
adcl
push
add
and
add
mov
add
in
dec
mov
movsl
push
add
cmp
movsl
dec
xchg
xor
jno
movsb
lods
out
mov
loop
dec
push
das
and
iret
push
add
pop
jecxz
decb
jmp
push
jnp
adc
popa
in
mov
fstpl
insb
popa
sbb
add
repz
add
imul
int3
mov
xchg
xchg
mov
das
js
aas
test
cmp
lahf
dec
cld
mov
push
imul
test
inc
sti
sarl
jl
aam
ficompl
das
jae
jne
inc
or
mov
cmpsl
aas
movsl
add
fwait
xor
aas
cli
push
push
sub
push
addb
cmp
cli
jbe
sbb
sahf
xchg
clc
inc
push
fdivp
fstpl
xor
xchg
loopne
mov
jle
sub
das
mov
pop
lahf
jg
push
movsb
ret
xchg
sbbl
ljmp
sbb
mov
rorb
rolb
cmp
push
push
bound
mov
push
iret
outsb
push
xor
inc
lods
andl
lahf
test
adc
adc
stc
add
cld
dec
pop
or
inc
lea
cmp
mov
aaa
fwait
sub
pushl
outsl
adc
je
sub
out
adc
icebp
mov
mov
push
cmc
ret
loop
aam
jbe
shl
movsl
inc
sbb
mov
adc
les
push
jno
cmp
shll
nop
push
out
adc
inc
pop
xchg
gs
stos
push
mov
lea
loopne
movsb
jge
mov
int
mov
xor
mov
push
das
test
push
jp
pop
rcll
rcpps
mov
mov
call
jnp
adc
sub
out
aas
addr16
jp
cmp
bound
xlat
iret
xchg
fildl
inc
movsb
pop
movsb
cmp
ss
int
lods
xchg
in
pop
pop
mov
insl
sbb
ficomps
jg
fmul
rcrb
or
jge
cmp
mov
mov
lahf
mov
out
mov
int
fs
add
xchg
aad
int3
mov
mov
cmp
scas
out
xchg
ffree
jbe
xchg
shll
mov
cli
adc
add
icebp
ds
push
int
mov
xor
movsb
ss
ficoml
pop
fcoml
add
testl
inc
dec
lds
mull
push
mov
xlat
xlat
or
adc
aaa
sub
mov
xor
push
mov
xor
out
jne
mov
stos
xacquire
sub
adc
in
addr16
mov
inc
sub
mov
enter
nop
xchg
clc
or
xchg
xor
pop
jmp
fbstp
scas
pop
nop
add
cltd
cmp
cwtl
int3
in
cmc
mov
sbb
int3
pushf
dec
loopne,pn
inc
cmp
dec
rcll
jl
jb
std
movsb
jo
pop
sub
iret
jbe
in
jecxz
push
cmpsb
push
dec
sub
cmp
js
int3
not
setl
jne
testl
jle
adc
and
jl
push
insb
lea
xchg
and
push
jmp
mov
divb
jbe
iret
push
sbb
adc
repnz
mov
cs
pop
pop
inc
mov
push
or
sbb
mov
bound
push
push
scas
pop
push
insb
cltd
cltd
fcmovnbe
jbe
mov
jo
out
cwtl
bound
roll
lock
call
dec
outsb
fstpl
fnsave
cmc
into
cli
test
and
call
mov
mov
loopne
adc
lahf
leave
out
mov
push
inc
ss
das
and
add
inc
das
fiaddl
leave
or
push
scas
nop
mov
sbb
sbb
push
xor
je
sbb
xor
adc
push
push
int3
add
jb
sbb
pop
jb
rclb
mov
xchg
sbb
cmp
lock
outsb
cmp
add
fwait
mov
or
mov
out
movups
add
js
popf
insl
xchg
jb
sub
out
and
sub
out
jbe
mov
xor
fiaddl
jle
lahf
pop
rol
sub
inc
into
inc
js
out
in
mov
ret
loopne
movswl
hlt
ss
dec
lret
lock
push
jne
pop
fcompl
ret
mov
nop
scas
addb
inc
add
pop
jno
fsubs
repnz
inc
jns
shlb
loopne
aaa
adc
out
cmp
cmp
mov
sti
out
scas
dec
xor
sarb
fwait
or
call
lret
add
jo
movsl
repz
adc
sub
pop
icebp
cwtl
adc
call
or
adc
aas
bound
dec
adc
xor
or
mull
fwait
test
push
cmp
pushl
jno
jmp
arpl
movsb
pop
mov
pop
shrl
inc
mov
nop
ljmp
add
jb
inc
or
out
loopne
mov
bound
mov
xchg
dec
loope
je
scas
jns
cmp
and
mov
fwait
popa
cmp
lods
dec
xor
movsb
arpl
testl
inc
adc
pop
dec
scas
dec
add
fimull
mov
fistps
sahf
daa
and
sbb
mov
jl
bound
pusha
inc
xchg
adc
push
mov
xchg
in
fdivrs
loopne
stc
fwait
pop
rorb
add
nop
adc
pushf
test
pop
inc
fldl
movswl
pop
cmpsb
cmp
mov
mov
pop
dec
js
cmp
dec
sub
mov
pusha
rolb
mov
sbb
stc
repz
lods
dec
stc
leave
jmp
inc
es
cmpsb
clc
hlt
insb
inc
xchg
sbb
push
pop
and
pop
or
adc
or
lods
test
bound
jno
sbb
pop
push
in
xor
jle
rol
stos
or
iret
adc
mov
mov
je
sub
fistl
dec
push
stos
mov
js
or
add
adc
pop
lahf
repnz
in
outsb
into
mov
fildll
movsl
adc
fs
dec
jns
mov
aaa
jle
xor
dec
ret
push
je
loop
xchg
dec
xchg
xchg
mov
in
cltd
out
inc
nop
xor
arpl
dec
jno
movsl
dec
ds
push
stc
xlat
out
leave
or
mov
lea
jp
movb
mov
adc
xchg
dec
dec
out
sbb
jno
mov
dec
test
pusha
ret
cvtps2pi
cs
adc
out
lods
xor
out
call
xchg
ss
mov
das
xlat
dec
xchg
fs
dec
jne
jbe
jp
mov
pusha
int
mov
sub
shll
push
jns
aas
fidivrs
mov
pop
aas
xchg
rolb
mov
cmp
insb
pop
or
jbe
leave
adc
xor
jo
sti
aas
cmp
lea
push
cmpsl
loope
mov
jns
xorb
adc
outsl
roll
jbe
insl
cli
sbb
daa
filds
mov
mov
cld
lock
cld
xlat
imul
sahf
insb
iret
mov
lods
in
repnz
ja
add
scas
ja
xor
icebp
jb
inc
push
fisttpll
sub
mov
jge
push
test
add
les
add
push
rorl
inc
xchg
sbb
sub
test
nop
mov
in
mov
test
cmp
and
les
rcrl
add
sbb
cmp
std
lock
dec
push
pop
test
iret
inc
fs
push
push
std
mov
nop
mov
push
setne
push
sahf
xchg
jne
shlb
repnz
cmp
sbb
stc
mov
and
inc
leave
and
lahf
sub
dec
lock
scas
faddl
jecxz
sar
mov
sbb
inc
push
mov
xchg
fimull
mov
das
mov
dec
mov
pop
sbb
fistpl
into
push
xchg
push
push
pusha
inc
push
mov
lea
mov
popf
imul
cli
push
rorl
scas
sbbb
xchg
in
stos
popa
stc
into
pop
lahf
loop
inc
fnstcw
in
lods
mov
arpl
cwtl
mov
movsb
lret
add
adc
jg
fidivs
mov
mov
bound
push
lahf
cmp
out
jns
dec
leave
pop
adc
imul
mov
mov
shrb
orl
cs
loopne
fwait
pop
xchg
push
pop
out
aas
rolb
lahf
sub
jecxz
vpminub
inc
mov
pop
ja
in
cs
xchg
das
dec
cvtps2pd
or
addl
div
out
jno
mov
in
fcomps
sub
xchg
outsb
mov
xchg
out
push
add
inc
fadds
mov
push
mov
mov
out
pushf
pop
pop
and
arpl
test
push
mov
sub
das
mov
js
pop
cld
dec
push
shl
add
sahf
aaa
adc
mov
mov
mov
shlb
insl
rcrb
std
sbb
mov
int
test
push
pop
pop
add
sbb
call
outsl
mov
push
jecxz
xor
lret
dec
into
xchg
shll
pop
and
sub
icebp
shrl
push
leave
jg
xchg
cmp
clc
pop
mov
stos
mov
popf
outsl
bndldx
es
shrl
jae
cmc
lods
push
out
rcrl
mov
into
and
call
xor
xchg
cs
cwtl
lahf
in
push
imul
mov
sbb
dec
cmp
xor
lret
loopne
in
inc
sti
jno
push
dec
daa
mov
push
cmp
int
push
in
push
mov
xor
sub
xchg
lret
and
jns
pop
leave
fnstenv
jp
push
imulb
mov
stos
sbb
mov
addr16
lods
add
repz
xor
xor
data16
ret
lahf
lds
mov
inc
mov
pop
mov
push
ds
test
hlt
fcoms
andl
dec
lcall
scas
test
scas
cmp
std
test
mov
scas
pop
std
mov
nop
add
inc
outsl
ret
stc
ds
out
mov
lds
fidivl
repz
int
adc
imull
push
jne
aad
je
test
mov
add
adc
or
divb
push
dec
vcvttpd2dqx
cltd
sub
jns
xor
xor
sub
add
jno
add
push
aas
pop
inc
push
into
ljmp
and
push
dec
mov
dec
out
jmp
js
sub
or
or
cmp
outsl
mov
sub
call
pop
lret
shr
cmpb
jbe
sbb
cmc
lods
xchg
out
mov
mov
sub
or
pop
jp
int3
xchg
ljmp
pop
imul
hlt
clc
bound
scas
ds
outsl
lock
lods
jl
in
xchg
pusha
mull
sbb
push
loopne
imul
les
or
movsb
jle
lret
fisttpll
icebp
cmc
pushl
loope
cmp
pop
in
popa
aad
mov
leave
and
mov
push
push
jb
cmp
iret
inc
xchg
sbb
dec
or
cwtl
pop
fcomip
aad
adc
inc
imul
sti
pushf
stos
or
dec
mov
scas
bound
mov
inc
add
push
jge
imul
adc
xchg
and
sub
repz
mov
jns
jp
sbb
mov
in
push
sbb
outsb
jb
or
insb
fmull
add
sub
ja
arpl
add
fdivrl
pop
pop
cmp
lock
and
and
in
inc
push
add
push
jg
pop
mov
popa
xor
int
cmp
and
add
addr16
dec
cmp
jae
ljmp
and
xchg
stc
lret
xor
nop
push
cmc
lahf
xor
xor
mov
jb
push
lahf
loope
nop
sub
sbb
push
push
ljmp
mov
inc
pop
xorl
xor
les
jns
loopne
dec
pop
mov
mov
test
cmp
mov
outsb
dec
cmp
dec
dec
push
inc
inc
or
das
lret
sbb
and
movsb
pop
loope
aas
mov
cmp
test
sub
or
sub
add
lods
in
loopne
sbb
jmp
out
movsl
and
outsb
dec
mov
mov
loope
cmpsl
aam
movsl
mov
mov
cwtl
mov
mov
test
aaa
adc
pop
push
xor
jae
xchg
cmc
mov
into
push
ret
rol
sbb
into
pop
loope
jmp
aad
addb
push
sbb
fidivrl
push
add
lea
out
in
xchg
push
stos
popf
xchg
or
fsubr
adcl
imulb
jns
mov
pop
testb
mov
inc
mov
lods
loope
fildll
dec
mov
pushf
inc
push
or
xchg
add
shll
dec
into
ljmp
data16
in
stos
push
mov
lcall
mov
stos
jb
dec
jp
jno
push
cmp
sti
sti
andl
loop
lcall
pop
ja
comiss
jecxz
into
icebp
jnp
cwtl
cld
rorb
cmp
pop
and
pop
and
inc
sbb
aaa
data16
push
pop
iret
jecxz
jno
loopne
cmp
enter
stos
lods
dec
xchg
mov
and
push
andb
cmp
pushf
jmp
adc
sub
fcoms
jge
and
add
push
push
mov
lods
mov
testl
pop
add
xchg
mov
imul
or
repz
mov
or
mov
or
mov
xlat
jp
fdivl
mov
sti
in
fidivrs
sub
out
sbb
dec
mov
lods
dec
test
negb
lret
bound
je
ljmp
add
push
sub
cs
xlat
adc
ds
ficoml
movsl
enter
pushf
or
xor
std
pop
pushf
xor
mov
xchg
inc
lods
hlt
test
add
dec
fstl
adc
jo
push
push
cmpsl
outsl
fcoms
mov
mov
and
fwait
push
ds
cmp
nop
xlat
cmc
jb
aaa
push
sahf
cld
lcall
or
or
lods
in
push
inc
sti
fbstp
xorb
mov
pusha
mov
daa
data16
add
dec
rorl
test
test
scas
add
je
pop
mov
repz
call
jg
leave
push
test
lcall
mov
jne
xchg
icebp
lds
cltd
mov
into
iret
xor
and
sub
dec
in
mov
dec
push
cmp
add
jns
mov
insb
aas
push
int3
cltd
lahf
sub
adc
stos
lret
in
cmc
mov
mov
data16
inc
aaa
mov
sbb
rolb
mov
imul
mov
test
xorl
outsl
popf
das
aam
push
sbb
xor
fcmove
test
jbe
inc
jmp
andb
jp
aas
jb
jns
xor
ja
lcall
cmp
jb
xor
inc
es
sbb
fdivs
jo
and
popl
inc
cmc
int
pop
xchg
add
std
outsb
mov
loop
xchg
mov
loop
into
lods
push
ja
jne
mov
jmp
mov
testl
call
cmpsb
mov
xor
cmp
in
sbb
mov
pop
mov
xchg
pop
in
repz
adcl
push
dec
jns
cmp
push
inc
xchg
jmp
aaa
add
xchg
add
and
adc
icebp
cmp
lods
dec
pop
add
sub
push
push
jae
cmpsl
test
rol
jg
and
and
pop
repz
call
xor
inc
sub
sarl
mov
pusha
ficomps
jb
add
pop
cmp
add
pop
xor
push
pusha
jae
aas
adc
addr16
push
cld
sub
testl
divl
jb
test
lds
aad
jmp
lods
sahf
mov
or
and
popa
jns
mov
and
add
stc
rcrb
push
mov
rcrb
mov
jae
hlt
pop
test
stos
jb
fmull
je
and
in
out
pushl
mov
lret
pushf
mov
int3
jne
pushf
adc
add
int3
jl
es
fcmovnb
mov
into
sbb
or
nop
pop
mov
xchg
push
scas
aam
xchg
cmpsl
inc
adc
xchg
mov
dec
mov
xchg
add
jne
dec
scas
mov
rcr
sub
mov
xlat
mov
leave
aam
test
sub
jae
or
mov
test
pop
jp
scas
loop
notl
in
ds
inc
sub
inc
push
scas
cmp
sbb
les
pushf
out
push
or
push
sub
xor
push
iret
rcrl
mov
fistps
out
orl
ficoms
push
std
xchg
pop
push
fidivrl
and
xchg
push
xor
cmpsb
jno
sahf
popf
sub
mov
je
aad
mov
adc
std
ret
cmpsl
mov
push
stos
ja
inc
stos
cwtl
outsl
jne
dec
xchg
jbe
cmp
lods
arpl
sahf
loopne
popf
lds
out
mov
mov
xlat
mov
xor
fmuls
xchg
mov
jg
loopne
adc
push
jbe
mov
and
fstps
xor
insb
xrelease
adc
add
pop
pop
mov
sub
cld
cmp
add
rcrl
aam
pop
or
xchg
inc
cmpsb
scas
loop
or
xchg
dec
mov
sub
add
mov
ss
adc
aad
out
nop
iret
lret
cmpsb
shll
iret
sbb
mov
jb
gs
inc
mov
lods
nop
enter
aaa
jns
mov
jle,pn
jae
add
popa
mov
mov
lock
xor
in
arpl
aad
jno
outsb
pop
test
fnstsw
pushf
mov
psrlw
mov
lahf
adc
stos
int
dec
sub
test
sbbb
adc
iret
enter
sub
roll
ss
mov
jo
mov
les
cmp
sbb
in
xor
outsl
xor
test
sahf
test
inc
pop
inc
gs
popa
jb
test
adc
das
lods
out
push
mov
ljmp
jge
adc
xlat
dec
inc
ja
loop
es
jns
pop
leave
daa
jmp
adc
cmc
js
sbb
mov
pop
jmp
test
enter
jae
jns
mov
mov
mov
adc
push
mov
lods
fsts
cmpsb
adc
mov
cmc
lock
mov
rorl
cmpl
mov
insb
aas
push
xor
sbb
jp
sti
pop
dec
jg
mov
cmpsl
jbe
xchg
out
pop
sub
repz
leave
cmp
sahf
xor
ror
adc
gs
negl
cmp
mov
add
daa
sub
imul
sub
and
loop
pop
xor
daa
mov
xchg
dec
lret
imul
dec
add
or
mov
dec
jo
dec
hlt
jb
mov
add
or
das
sbb
jecxz
mull
cmp
test
faddl
ja
in
fdivrl
shl
adc
push
mov
pop
in
cmp
sbb
sub
mov
mov
out
xchg
das
insb
mov
jne
cmp
mov
xchg
xchg
push
push
mov
inc
insb
push
mov
or
add
cmp
imul
pop
mov
cmp
inc
jecxz
dec
aad
test
mov
adc
xchg
xchg
xchg
sbb
outsl
aaa
push
or
rolb
mov
adc
cltd
jecxz
cli
ljmp
test
xchg
cmpsb
bound
into
adc
sahf
add
shll
adc
in
mov
repz
xchg
xor
jnp
cli
int
into
notb
pop
pop
sub
hlt
ret
pop
stos
xor
fdivrs
push
test
pop
dec
add
lahf
pop
mov
or
xchg
loopne
test
shlb
mov
dec
cmp
pushf
jmp
movsb
mov
pop
xor
adc
pop
or
faddl
cmp
inc
mov
out
push
xor
jnp
or
ss
lods
cmp
cmp
adc
push
pusha
arpl
stos
call
push
jns
out
cli
pop
mov
fs
push
aaa
sub
jge
and
insl
stc
loope
popf
divb
insb
adc
jae
inc
inc
sub
cld
sahf
sub
and
pop
adc
mov
adc
push
inc
data16
lret
inc
insb
jecxz
jno
xor
loope
jne
add
xchg
loope
xchg
xchg
outsl
aad
pop
mov
out
cmp
fildll
hlt
ficoml
je
scas
xor
ss
cmpsl
sub
icebp
shlb
out
push
mov
aam
enter
ret
rorl
outsl
mov
imul
enter
cmpsl
lahf
aas
loopew
jge
cmp
add
add
pusha
dec
das
cmpsb
jmp
loope
insb
push
test
cmp
pop
mov
push
jp
xchg
jnp
xchg
cmc
int
mov
dec
jo
repz
movsl
popf
mov
adc
movsb
sub
cmp
adc
fistpl
and
std
inc
aad
xchg
sbb
mov
jmp
push
and
sahf
sbb
dec
int3
stc
mov
dec
mov
test
pushf
std
add
lret
ss
or
test
insb
pusha
dec
hlt
inc
mov
in
jno
xchg
xchg
mov
in
rcll
dec
xor
xchg
jmp
jne
inc
fsubs
sbb
iret
jns
inc
adcl
mov
inc
test
leave
push
popf
mov
sub
mov
loope
xchg
mov
fld
je
or
shll
push
cmp
loopne
xlat
sub
pop
les
std
pop
pop
cmc
dec
mov
inc
sbb
inc
inc
mov
stos
lock
push
outsb
push
lret
xor
and
xor
cmc
sbb
or
jl
into
mov
loopne
add
mov
push
dec
ret
jmp
pop
in
or
mov
xchg
and
lret
jmp
push
pop
add
int
mov
mov
sbb
popa
ss
dec
lahf
xchg
stos
mov
xchg
lea
cmpl
mov
jg
or
ffree
stos
inc
xlat
pop
adc
jmp
test
jecxz
js
mov
or
shl
mov
int3
jb
or
cmc
lcall
jg
aaa
add
or
shl
sub
insl
mov
mov
sti
push
jns
pop
imul
push
mov
cmp
scas
mov
inc
xor
enter
cltd
pop
and
pop
sub
adc
pushf
jne
nop
fildl
sbbl
jno
xchg
mov
adc
push
mov
inc
ljmp
test
test
jb
repnz
test
cmpsl
pop
xchg
add
das
adc
dec
adc
xor
or
out
jnp
mov
cmp
and
shll
shll
out
lods
leave
nop
sub
and
lock
scas
push
jo
inc
pop
cmp
sub
in
int
xchg
in
adc
add
lods
dec
mov
daa
sbb
bound
inc
adcb
cld
andl
lret
lcall
cltd
arpl
push
jl
jmp
jl
cmp
or
ret
cmpsb
inc
rorl
sbbb
ret
inc
sti
or
add
push
jbe
jg
push
stos
movsl
inc
push
push
es
insl
repnz
rorl
std
push
add
inc
test
stos
fs
xchg
push
mov
jmp
sti
sub
inc
and
movsl
stos
ss
nop
rorl
xor
mov
mov
mov
adc
add
mov
cmpsb
jmp
mov
and
adc
push
pusha
leave
enter
enter
jmp
push
pop
xchg
push
jmp
mov
sbb
movsl
aad
adc
add
cmc
jnp
adc
xchg
movsl
or
push
lret
mov
in
aad
pushf
pusha
cmc
andb
inc
jecxz
rclb
xchg
lds
adc
stos
sub
add
jbe
or
mov
mov
mov
mov
outsl
jge
scas
mov
push
mov
xchg
in
pop
cli
nop
das
leave
pop
xor
mov
xchg
push
add
dec
fisttps
cmp
jnp
add
push
pop
jl
dec
decl
cltd
mov
pop
dec
test
fwait
inc
push
imul
cmp
cmc
or
bound
or
in
adc
adc
cmp
fdivrs
int
sub
jb
loope
mov
aam
lods
sub
in
inc
pop
inc
jnp
sub
adc
dec
jnp
nop
xchg
mov
ss
sub
lods
ljmp
clc
jne
adc
fisttpll
lock
dec
sbb
outsl
roll
shl
imull
jo
aas
lea
aam
lds
sub
fwait
cmpsl
dec
adcl
dec
lcall
ds
add
pop
fstps
xchg
ds
push
popa
fsubrs
inc
dec
and
and
test
cltd
dec
adc
adcl
movsb
mov
imul
pusha
jp
lods
icebp
and
das
lahf
outsb
sub
mov
push
add
jl
out
dec
inc
inc
popa
out
std
jp
fwait
popa
scas
fs
mov
push
mov
push
sub
adc
jmp
and
jns
jle
rol
mov
out
or
nop
sbb
push
push
add
dec
mov
cmp
mov
mov
adc
dec
leave
or
aam
dec
add
nop
inc
leave
nop
cwtl
jl
xchg
imul
dec
or
mov
push
out
xchg
lret
aas
pushf
xor
test
movsl
pop
push
stos
push
arpl
das
std
ror
outsb
xor
add
arpl
cmc
int3
push
adc
ret
mov
mov
sbb
mov
pop
maxps
xor
fidivrl
pop
scas
mov
dec
dec
jmp
movsb
shrb
cmc
push
aad
std
sbb
fidivrs
add
jecxz
sbb
cmpsb
jbe
jle
push
jae
adc
fdivrl
push
mov
lock
or
outsl
scas
stos
pop
jl
mov
dec
aaa
jle
insb
jge
jnp
int3
xchg
cmp
lret
dec
mov
inc
mov
xor
pop
push
add
mulb
fcmove
lods
icebp
push
jp
cmp
mov
push
stos
or
lea
jns
xor
lret
gs
mov
push
or
push
xor
sbb
scas
xchg
js
test
mov
cmp
int3
sbb
jle
cld
mov
and
out
mov
sti
je
inc
mov
xchg
fcompl
notl
mov
xchg
pop
lcall
addl
hlt
out
in
testb
pop
pushl
mov
mov
aaa
in
lods
push
gs
xor
loopne
sbb
pop
in
mov
pusha
fsubs
pop
bound
ja
ficompl
and
inc
in
movsb
enter
test
cwtl
sbb
sbb
pop
into
xchg
inc
adc
mov
cmp
std
mov
jmp
add
mov
leave
fwait
loop
hlt
stos
cmp
adc
jnp
mov
outsb
pop
add
or
dec
pop
xchg
cmpl
dec
dec
faddl
pop
getsec
scas
fstps
in
stc
or
inc
cmc
call
addr16
dec
aam
cmc
cld
hlt
xchg
xchg
inc
inc
lahf
or
movsl
scas
xor
aam
frstor
adcl
test
adc
sahf
js
out
mov
jge
or
jle
daa
mov
dec
xor
popf
insl
fdivs
cmp
insb
or
into
rcrl
and
xor
shrb
jne
dec
dec
fsubp
mov
xor
sti
and
repz
sub
cmpsl
bound
inc
mov
test
jb
sub
mov
stos
clc
dec
jbe
fdiv
pop
sub
fmulp
fwait
sbb
sti
iret
int
lds
repnz
lahf
jo
js
mov
roll
sarl
push
rorb
xor
adcl
idivl
js
sbb
into
and
fs
pushf
dec
and
out
inc
mov
stos
loop
jno
ja
jns
sbb
mov
sub
adc
add
in
xor
ljmp
dec
sbb
mov
mov
xchg
iret
add
adc
jle
test
iret
repz
mov
mov
stos
jnp
sbb
sub
lret
mov
pop
lods
shlb
ret
test
rcr
sahf
adc
mov
lret
imul
ds
loopne
mov
mov
aam
clc
push
shll
add
aad
dec
aam
faddl
cli
fcmovbe
adc
pop
dec
push
mov
andb
rorb
lods
xor
shrb
push
popa
dec
mov
dec
add
xor
xlat
add
xlat
clc
lds
out
cmp
in
jns
cmc
leave
dec
pop
sub
ljmp
test
jp
or
ja
leave
aam
pop
mov
and
iret
outsb
jecxz
xchg
test
lods
sahf
cs
dec
loopne
jb
cltd
arpl
rcl
sub
push
add
negl
daa
add
aas
cmp
lea
add
cmp
rorl
mov
das
adc
addr16
and
dec
mov
mov
test
decb
push
jp
enter
dec
pop
in
mov
insb
hlt
xchg
aad
mov
pop
mov
rolb
adc
inc
jmp
cli
cwtl
lea
fwait
mov
ficoml
and
stos
sub
add
pop
adc
push
fisubs
rorl
jl
push
adc
ficompl
cmpb
xchg
ss
es
clc
icebp
popa
sti
lret
iret
sbb
lock
pusha
pusha
inc
inc
mov
fildl
lock
outsb
and
sub
out
sub
rep
or
fmuls
jne
inc
into
divl
lcall
and
jae
fisttps
add
jne
lds
shr
jp
test
and
outsb
inc
fcoml
push
sub
push
into
and
lock
push
jne
shl
subl
pop
add
jns
add
and
cmc
aaa
push
call
adc
xor
push
mov
shll
jbe
outsl
cwtl
mov
or
jo
ljmp
or
test
mov
lret
dec
dec
les
xchg
daa
xchg
xorb
or
shl
or
cmp
fsubr
or
in
xor
sub
arpl
fnstenv
cmp
pop
jno
cld
or
ret
and
pop
cmp
cmpsb
jmp
andb
sbb
in
lods
pop
aam
push
ret
cmp
ret
das
mov
mov
imul
or
clc
sub
inc
je
mov
fdivrl
outsb
enter
inc
movsl
mov
hlt
push
xchg
out
in
mov
jne
sbb
sbb
ljmp
sbb
ret
out
inc
rclb
mov
sub
push
inc
pop
daa
push
push
sub
jno
or
mov
fldenv
pop
loopne
lahf
roll
test
leave
cwtl
or
mov
or
jge
sbb
loop
mov
mov
jg
bound
and
sub
iret
mov
pop
sub
ljmp
cmpsl
or
mov
mov
xchg
ljmp
and
cmpsl
sti
scas
leave
pop
cmpsl
in
movsl
mov
mov
hlt
outsl
movsl
shrb
inc
hlt
lea
jnp
xor
xchg
adc
loope
fsubrp
shlb
movsl
ja
aaa
xor
push
push
add
cs
jno
adcb
in
popa
and
push
lock
aam
das
sub
imul
dec
roll
or
mov
jne
repz
repnz
sub
or
aaa
iret
or
cmovne
data16
daa
xchg
pop
cwtl
scas
mov
out
jge
jnp
mov
mov
sbb
dec
mov
inc
dec
in
dec
fnstenv
xchg
out
imul
daa
loop
mov
cld
push
pop
sti
inc
in
ret
dec
sbb
loopne
icebp
xchg
jno
push
out
shlb
add
sbb
dec
xchg
xlat
in
mov
fcom
insl
mov
std
aad
leave
mov
add
out
inc
and
in
dec
loope
sbb
mov
or
jecxz
cltd
and
pushf
call
jmp
fwait
inc
stc
xor
aad
cmp
mov
dec
push
test
or
loope
mov
lcall
jns
mov
fnstcw
nop
stc
loop
cmp
ja
test
gs
movsl
and
or
rolb
xchg
mov
in
enter
mov
inc
push
filds
mov
cmpsb
sub
shr
movsl
or
pop
push
pop
test
xchg
cmpsl
cmpsb
pop
data16
leave
loope
xchg
dec
or
in
dec
jmp
xchg
sarl
inc
fcmovnu
imul
ja
imul
mov
push
jge
pop
adc
add
jmp
mov
or
push
jnp
imul
mov
adc
out
inc
mov
jae
xchg
cmc
imul
cmp
lahf
fs
mov
and
rdpmc
out
addb
mov
inc
push
jmp
test
mov
enter
movsl
cmpl
lock
movsl
sarb
lea
sub
jp
jns
adc
cmp
and
arpl
dec
sub
test
inc
shll
jg
imul
out
sbb
out
mov
leave
mov
sub
cmp
inc
jne
xchg
gs
mov
lods
aad
dec
add
imul
test
mov
add
call
incl
inc
xchg
mov
icebp
push
jae
out
lret
xlat
shlb
dec
fldt
sbb
not
adc
fmulp
fxch
pop
test
out
subb
push
sbb
shll
movsl
inc
leave
test
lock
mov
sbb
mov
cmpl
push
sbb
imul
bound
or
xlat
and
lret
dec
js
scas
sub
stos
aas
es
add
mov
roll
inc
cwtl
insb
jecxz
les
and
push
inc
and
or
mov
arpl
mov
mov
ljmp
mov
xor
cmpsl
xchg
push
mov
mov
les
adc
jns
lock
lock
paddq
fimuls
mov
sub
jecxz
stc
dec
jbe
inc
or
add
int
ret
cmp
mov
fs
daa
adc
jae
shrl
push
or
inc
jmp
ja
les
mov
mov
aas
or
or
pop
mov
adc
push
adc
sub
mov
mov
daa
mov
xchg
dec
das
xchg
push
rcll
enter
cmp
add
fwait
mov
and
inc
xor
pop
xchg
insl
xchg
inc
mov
ficomps
dec
leave
sahf
mov
imul
inc
cmp
hlt
lcall
pop
adc
popf
cmp
data16
mov
out
decl
cld
stos
mov
js
iret
sbb
xchg
mov
imul
mov
push
add
cli
popa
or
inc
mov
or
test
xchg
adc
adc
mov
cmp
data16
push
push
cmp
xor
insb
ret
xchg
adc
icebp
int
pop
std
testb
lea
sbb
and
cwtl
ret
push
in
dec
cld
xor
pop
sub
mov
lods
jmp
testb
clc
sub
push
jecxz
inc
fsubrs
les
pusha
jnp
shl
jns
repnz
sub
jns
das
arpl
lret
or
in
cmc
out
int
inc
call
jae
push
add
test
xchg
shl
xchg
aam
mov
xchg
add
sub
icebp
or
push
dec
sbb
xchg
push
push
aam
mov
lret
jecxz
ljmp
xor
cmp
jmp
mov
cmp
push
jns
js
push
in
dec
mov
jp
bound
andl
jle
out
icebp
mov
pop
jbe
or
mov
test
xchg
into
test
pop
or
test
sahf
or
loopne
mov
cmp
roll
xchg
mov
lret
xor
addr16
or
in
and
push
lret
int3
mov
push
mov
test
xor
jne
inc
sub
and
test
and
popa
and
stc
and
icebp
sub
xchg
aaa
insl
jl
add
cld
out
sub
adc
mov
and
sub
xor
inc
mov
lods
lds
sbb
ljmp
lock
mov
dec
bound
in
cld
imul
popf
pusha
xor
mov
lahf
mov
cmp
push
and
movsb
mov
mov
js
das
cmpsl
pop
cwtl
loopne
jecxz
cmc
inc
cmpsb
pop
push
jge
shl
in
in
repz
pop
arpl
scas
mov
lods
lcall
mov
and
mov
mov
shl
rcl
mov
sub
add
mov
jmp
int3
popl
data16
inc
and
call
cltd
movsb
inc
dec
mov
inc
and
dec
dec
lods
lahf
pop
adc
cmp
imul
sbb
push
inc
mov
adc
adc
lods
inc
test
add
icebp
push
mov
sub
xor
jnp
lret
fsubrl
enter
sub
clc
outsl
sbb
lds
test
insl
push
mov
and
and
fs
ret
fmull
pop
nop
clc
rcrb
mov
add
and
test
xchg
and
pop
movq
dec
aad
mov
sbbl
aas
popa
pop
push
jg
mov
jmp
gs
cmpsl
jo
or
push
adc
adc
scas
test
sub
outsb
sbb
cwtl
rolb
or
leave
inc
cmp
xchg
ja
cmp
pop
push
push
inc
mov
xchg
adc
and
pop
imul
sub
pop
ja
or
mov
lret
mov
and
mov
push
mov
xchg
incl
test
pop
mov
mov
jmp
jle
sarb
mov
and
or
cwtl
cli
mov
cmp
pop
add
in
sbb
add
xchg
mov
sub
jmp
addr16
jae
and
jle
imul
sbb
push
sbb
daa
arpl
je
inc
stc
push
or
aas
mov
mov
jecxz
sbb
loop
pop
mov
out
in
out
mov
vmovmskpd
xor
xorl
stos
mov
lods
gs
loop
sahf
leave
xor
aad
fldl
ss
pop
dec
sbb
and
lods
andb
dec
inc
cli
adc
or
loop
das
fucomip
push
cmp
xchg
ficoml
pop
rcrb
fldcw
pop
add
out
negb
repnz
sub
lea
or
fstpt
push
mov
imul
and
int
aas
add
daa
xor
call
push
aad
test
lret
jo
cmp
push
out
ja
dec
stos
jp
xor
push
arpl
out
and
repz
mov
xchg
stos
jb
and
sub
sbb
shrb
cmpsb
pushf
aas
imul
adc
les
insl
pop
pop
mov
adc
orb
sub
dec
push
clc
aam
adc
mov
roll
sarb
ffree
push
mov
add
and
pop
test
push
loopne
shl
lea
fdivrp
or
aas
and
notb
loope
inc
lock
lret
fs
mov
ja
sbb
inc
outsb
ss
lret
out
movsl
xchg
int3
sub
cltd
mov
adc
jno
push
xlat
test
faddl
inc
xor
mov
test
inc
movsb
push
dec
clc
leave
je
mov
insb
mov
mov
mov
pop
outsl
push
mov
jo
dec
pop
mov
mov
jl
inc
daa
add
mov
cmp
push
xchg
fistps
cwtl
jecxz
cmp
ss
push
cli
imul
hlt
fstpt
or
mov
mov
daa
mov
pop
mov
loope
repz
sarl
or
pop
fidivrs
iret
in
push
dec
adc
xchg
fwait
mov
xchg
cmp
pop
add
or
daa
stc
ret
popf
xchg
xor
lret
fcomi
mov
mov
repnz
lcall
cli
das
dec
call
mov
mov
mov
adc
push
divl
shl
mov
in
pop
fs
rol
pusha
movsb
mov
cs
call
rorl
int3
cmp
test
daa
push
xor
pop
jmp
cmp
mov
jo
mov
in
adc
xchg
mov
imul
xchg
rorb
push
mov
mov
jb
jne
popf
xor
dec
out
or
jb
mov
int
outsb
sub
add
nop
mov
nop
sub
hlt
ljmp
pushf
cmp
xchg
mov
movsb
enter
arpl
fidivrl
pop
pop
cmp
sahf
icebp
lods
xchg
inc
adc
add
sbb
push
xchg
das
dec
inc
insl
xchg
in
jl
jns
and
mov
mov
cmp
xchg
pop
fisubrl
movsb
xchg
jo
je
ja
mov
jo
adc
and
sbb
jp
imul
xor
jge
gs
mov
inc
enter
imul
jno
cltd
mov
sub
div
fbld
lds
sbbl
cmpb
lcall
pop
and
lahf
stos
jno
xor
lods
pop
adc
add
repz
mov
mov
testb
mov
sub
sbb
cmpsb
cmp
out
cmp
cs
sub
or
aas
mov
popa
scas
dec
scas
std
popf
cmpsl
repz
inc
dec
insb
int
sub
hlt
paddb
cmpsl
xchg
in
ficoml
mov
aaa
fistpl
jnp
sbb
pop
fistl
xor
leave
jbe
adc
test
cwtl
adc
out
cmp
jecxz
out
sub
fldt
mov
flds
mov
mov
inc
inc
sbb
pop
les
inc
mov
gs
ss
cltd
sub
mov
xor
inc
je
call
dec
rcrl
int3
xor
dec
lock
ret
test
mov
fsubrs
xor
hlt
fwait
lock
jecxz
jne
hlt
inc
mov
into
inc
mov
mov
xchg
xchg
mov
add
sahf
mov
imul
sub
popa
cld
fidivrl
or
in
shlb
out
mov
pop
xchg
shl
clc
pushf
rcl
pop
hlt
sub
jno
sarb
sbb
es
lea
sbb
xchg
in
mov
cmpsl
adc
jecxz
adc
xchg
out
out
faddl
js
nop
sbb
insb
aad
jbe
stos
dec
cmp
sbb
insl
adc
add
cmc
aam
lret
cmpsl
mov
fistpll
repnz
in
jmp
rclb
xchg
ret
cmp
ljmp
sbb
aas
push
mov
mov
inc
pushw
aaa
sti
sbb
loopne
xchg
sub
and
pop
xchg
sahf
leave
test
or
jbe
in
repnz
sahf
mov
ljmp
stos
and
loop
mov
hlt
inc
cwtl
scas
cltd
insl
cmpsb
cmp
fcmovb
jge
lret
int
bound
xorb
repz
mov
or
imul
outsb
mov
adc
and
xchg
adc
push
or
data16
push
fmul
push
mov
ret
fnstsw
leave
xor
xchg
push
cwtl
iret
inc
sbb
fsubrs
dec
or
fnstcw
lahf
addr16
inc
xor
jg
sbb
adcb
sub
aas
cmpl
adc
jno
cmc
mov
or
in
or
leave
push
mov
or
cld
in
jnp
mov
hlt
bound
mov
push
sbb
cltd
in
adc
scas
int
scas
lret
sub
lds
sbb
popf
enter
jl
inc
push
fimull
inc
popa
and
xchg
and
ficomps
fists
repz
in
push
or
cltd
push
ret
inc
out
movsl
pusha
lahf
adc
adc
sahf
shll
sub
jb
inc
rolb
int3
lret
pop
xchg
cmp
cltd
inc
mov
lods
jle
xor
push
nop
push
jl
push
add
pop
inc
mov
ret
sbb
fistps
repz
mov
jmp
and
push
stos
fwait
pop
jo
or
int
ljmp
mov
loop
aam
xor
out
shrb
lahf
popa
sub
neg
in
push
pusha
ret
cli
cmp
inc
flds
mov
mov
mov
scas
andl
jge
jmp
cltd
xchg
lods
inc
movsb
dec
xchg
push
sub
test
lret
mov
inc
loop
mov
push
jmp
jae
mov
cli
mov
adc
fimuls
push
adc
pusha
and
lahf
or
outsl
int3
sub
sub
mov
pop
out
in
popf
add
xor
cld
xchg
jge
flds
jmp
add
dec
add
in
jmp
inc
xor
mov
shrb
outsb
fs
idiv
sbb
insb
adc
nop
clc
xorl
and
xor
repz
push
insb
push
jle
and
fistl
popf
rorb
mov
js
dec
pop
mov
into
inc
lds
push
push
jo
pop
sub
scas
js
mov
inc
adc
inc
jnp
sbb
push
pop
addr16
sbb
add
pop
xor
rorb
lret
rcrb
adcb
jmp
aam
subb
imul
jne
sub
pop
call
sub
imul
sbb
mov
popa
in
imul
push
push
xchg
or
filds
mov
int
icebp
or
lret
imul
ret
pop
stc
and
je
xchg
sarl
test
inc
cwtl
pop
xor
cld
add
or
inc
and
fpatan
int3
or
in
cmc
sbb
push
dec
inc
xchg
out
fcoml
in
ds
add
add
xchg
push
ds
cmpsb
xchg
and
arpl
cmc
push
cmc
xor
in
lret
decl
cmp
or
mov
add
shlb
inc
mov
je
add
sub
sbb
orb
mov
push
sub
mov
movsb
inc
xchg
xor
push
sub
subb
gs
mov
cwtl
sbb
cwtl
leave
jne
loopne
xchg
out
pop
xchg
pop
push
movsl
mov
ljmp
scas
inc
nop
push
and
fnstsw
movsb
or
mov
cltd
pop
mov
mov
and
push
xchg
fisubs
aad
mov
or
mov
pusha
jnp
jnp
cmpsb
sbb
cmc
mov
cmp
mov
test
gs
xor
mov
or
ffreep
dec
xor
inc
in
or
testb
cli
js
scas
nop
and
xchg
leave
mov
xor
inc
jno
inc
loopne
fbld
fwait
xor
cmp
test
mov
in
or
dec
sbb
cmp
and
mov
cmp
inc
mov
in
push
lods
xor
pop
movsl
push
cmpb
fidivs
inc
push
jns
stos
out
fldcw
pop
fsubp
nop
subb
pop
daa
sub
add
lods
pop
xchg
popf
je
or
out
dec
mov
inc
inc
xchg
icebp
movsl
dec
loop
pop
mov
jge
push
not
mov
jne
hlt
out
push
cli
adc
pop
out
repz
push
stos
adc
out
adc
inc
mov
rclb
test
mov
mov
std
int
xor
cltd
mov
lret
cmp
sub
adc
flds
addr16
ja
ljmp
or
mov
push
jb
dec
gs
sub
pop
fsubrs
adc
xor
pop
xlat
jno
mov
ss
pop
push
jle
test
repz
addr16
and
or
jo
ljmp
inc
nop
or
fstpl
pop
adc
ja
jbe
cmp
sbb
pop
ret
cmp
add
sub
in
jnp
push
mov
mov
push
jmp
and
out
push
orb
insl
lock
dec
lret
dec
or
movsl
push
xlat
ljmp
mov
repnz
sub
aad
inc
xor
xchg
dec
fstpt
daa
test
fisttpl
inc
jo
and
pop
cld
xor
test
lahf
pop
jg
jb
fnstcw
shl
xchg
and
xchg
mov
pop
push
mov
adc
push
nop
mov
sbb
outsb
push
ret
jno
push
add
sub
rolb
cmp
add
cwtl
and
test
add
mov
sub
pop
sbb
int3
cmp
into
dec
lret
lock
cmpsb
fbstp
enter
inc
dec
daa
dec
pop
sahf
push
addr16
decb
lds
sar
aaa
adc
out
icebp
dec
scas
out
pushf
adc
in
test
vaddsd
dec
mov
xchg
jle
pop
out
xchg
dec
inc
int3
xlat
or
jl
jns
sbb
and
jle
or
insl
dec
das
pop
lret
ret
inc
jnp
mov
cld
mov
in
push
rcrb
or
roll
jl
cmp
jne
int
pop
das
xor
sub
bound
sbb
jae
aad
sub
push
jp
pop
lock
shrl
mov
loopne
and
xor
fwait
mov
jl
icebp
lret
rcl
in
push
mov
xchg
cmp
inc
aad
and
adc
rclb
or
xchg
in
mov
push
xchg
xor
and
in
cmp
faddl
adc
ds
adc
pop
les
xlat
movsl
loop
jne
push
outsl
int
jge
and
sub
pop
xchg
xchg
xchg
xlat
inc
cmc
into
jbe
ret
jp
call
push
sub
fs
mov
in
mov
dec
dec
popf
lret
hlt
bound
test
xor
js
in
fwait
cmp
loope
adc
lods
outsb
push
pop
ret
cmp
sti
sahf
cld
popf
loop
loope
sbb
jbe
movsb
xor
bound
rcll
pushf
cmpsl
pop
fldenv
xor
pop
cmp
sub
jp
cs
mov
fnstenv
loope
mov
lods
dec
sti
and
mov
lcall
imul
mov
cmp
insb
xchg
jle
in
mov
cmp
lock
mov
jo
push
int
outsl
and
xchg
xchg
imul
test
inc
shl
ror
ss
sub
test
cltd
out
adc
jnp
in
insl
dec
movsl
sbb
je
dec
cmp
in
or
mov
pushf
cld
pop
sbb
pusha
rclb
dec
adcl
mov
jo
jb
mov
push
add
shlb
stc
js
and
dec
shl
roll
adc
jecxz
xchg
mov
iret
mov
stc
test
loop
cli
inc
shlb
sbb
movsl
or
cmp
or
mov
inc
cli
pop
push
fdivrl
inc
xchg
outsl
pop
pop
fbstp
pop
xlat
call
xchg
ret
fdivl
test
dec
xorl
dec
ret
inc
fldl
adc
sub
sub
sbbl
mov
cs
jb
ficoms
stos
loopne
fs
and
inc
sti
addb
inc
repz
push
incb
mov
movsb
jmp
loopne
and
fs
ret
dec
arpl
out
sbb
and
int
stc
in
xor
or
and
stc
fs
mov
les
push
pop
pusha
call
pop
lcall
imul
pop
fsin
sbb
xor
orl
in
sarl
aam
mov
xchg
dec
repnz
ds
cmpb
push
pop
and
xchg
xor
hlt
aad
pop
mov
pop
dec
jmp
push
and
aam
adc
sbb
fsubl
popf
push
aam
inc
ficoml
dec
inc
jl
notb
cmpsb
mov
repz
sbb
and
aaa
leave
sub
in
sti
ds
lret
movsb
jno
push
mov
jle
test
adc
icebp
fcmovbe
mov
lock
cmp
xor
iret
push
mov
dec
adcl
repz
loop
mov
lods
xchg
jae
outsl
fwait
inc
lret
push
into
xor
test
test
mov
rorl
addr16
fmuls
stos
pop
insb
pusha
mov
repnz
and
repnz
dec
mov
ljmp
repz
xor
dec
leave
xor
mov
daa
xor
xor
sti
jmp
dec
pop
rcrb
mov
mov
mov
adc
mov
xchg
xor
sbb
enter
cltd
mov
lahf
sahf
jge
mov
add
les
xchg
cmpsl
inc
idivb
cmpsb
push
repnz
sqrtps
loopne
add
mov
nop
into
into
stos
sub
in
data16
dec
mov
repnz
fcmovne
loope
lret
idivl
push
mov
mov
push
or
xchg
sub
ret
out
dec
xor
and
push
stc
stos
or
xchg
fcmovu
icebp
les
or
mov
sbb
mov
cmc
lds
into
loopne
stos
jmp
push
ret
dec
or
dec
xor
push
cmpsb
lods
addr16
adc
xchg
pop
adc
insb
push
xlat
inc
jae
shl
xor
jb
imul
notl
xchg
jl
lcall
in
pop
xchg
cltd
dec
enter
fptan
mov
js
and
xchg
add
cwtl
into
stos
test
jmp
mov
jne
js
shrb
js
sbb
lds
das
aas
cmp
inc
cmp
mov
pusha
sti
or
jmp
push
ljmp
insb
fidivrl
fsubrs
mov
fnstenv
cld
pushf
lret
dec
push
js
ffree
pusha
cld
inc
inc
xor
es
mov
and
mov
and
je
arpl
mov
cmp
adc
subl
xchg
test
roll
jns
jnp
into
sub
iret
dec
insl
mov
and
push
cmpsl
loop
negb
stc
ret
xchg
jo
les
pop
bound
push
adc
xorb
je
mov
cmp
mov
lods
adc
xor
pushf
push
outsl
mov
xor
pop
ja
insl
out
mov
aas
leave
cmpsb
mov
test
rcr
lret
jecxz
pop
repz
jmp
or
jp
pusha
pop
push
sarb
adc
push
addr16
and
mov
arpl
loope
ret
xchg
mov
or
gs
xor
add
loope
and
add
rolb
popf
aad
sub
js
mov
inc
in
jecxz
pop
dec
xchg
scas
out
mov
sarw
mov
jecxz
mov
push
incl
out
pop
jne
sti
cmp
mov
stos
lea
inc
test
clc
fistpl
mov
xor
xchg
add
enter
mov
mov
xchg
cld
push
pop
imul
fwait
and
mov
or
dec
or
stc
mov
lds
ret
add
cwtl
adc
scas
inc
jb
mov
jle
iret
clc
pop
sahf
out
xchg
outsb
scas
js
cmp
push
ja
jp
popa
push
add
dec
or
test
jnp
lock
es
or
sbb
dec
aaa
iret
loop
cmp
and
std
or
lea
dec
xor
jecxz
testb
jbe
mov
scas
add
pop
inc
out
call
daa
mov
mov
adc
mov
mov
inc
xchg
out
mov
rcrb
fidivrl
loope
ss
loope
scas
sbb
ror
js
mov
sbb
jl
cmp
mov
mov
push
mov
cmp
or
jbe
mov
aaa
ret
gs
inc
stos
cwtl
imul
leave
aaa
or
call
add
scas
pop
cli
fnstcw
mov
add
adc
inc
std
into
cltd
out
or
inc
xchg
cmp
pop
mov
adc
inc
xor
sub
js
add
imul
add
test
or
mov
test
mov
js
frstor
inc
in
cmc
les
xchg
ret
mov
push
repz
and
mov
ds
aaa
mov
adc
insl
or
jae
les
sti
fiadds
enter
sbb
aad
int
cmp
adc
pop
or
into
sub
loopne
dec
add
imul
jecxz
stos
cmp
jnp
daa
dec
sub
dec
mov
mov
push
popa
shlb
andb
add
enter
ret
jp
incb
hlt
in
xchg
icebp
xchg
hlt
inc
int3
jo
popf
xchg
adc
pushf
fs
mov
outsl
out
shll
pop
icebp
mov
or
sub
imul
lcall
xlat
icebp
mov
mov
into
adc
pop
pusha
es
mul
mov
cmp
inc
scas
fldl
cmpsl
xor
adc
insl
sbb
pop
mov
jns
scas
out
ds
xor
pop
pop
mov
adc
jmp
push
sbbl
iret
jo
int
jmp
mov
push
data16
mov
movsb
adc
shrl
and
fwait
loop
sbb
pop
sub
mov
jb
sub
add
sti
mov
push
sub
leave
dec
mov
adc
in
dec
cmp
sub
in
add
hlt
inc
push
push
push
or
icebp
dec
ret
cmc
fs
pop
jmp
pop
pop
cmp
push
jle
and
mov
mov
inc
scas
push
push
add
scas
sub
ljmp
dec
ds
icebp
or
bound
sbb
iret
jecxz
andl
aaa
adc
add
lahf
aad
popf
pop
adc
mov
push
icebp
ljmp
adc
pop
sub
bound
sahf
dec
je
jecxz
icebp
sarl
mov
jo
or
scas
add
test
mov
cli
xchg
mov
add
sub
mov
rolb
push
arpl
fldt
jo
cmp
inc
dec
test
out
inc
enter
dec
mov
shrb
lea
lods
jb
repz
das
push
xor
rorb
or
iret
mov
xchg
xchg
push
xchg
stos
popa
or
cmpsb
jl
jle
inc
mov
pop
xchg
or
or
pop
adcl
dec
int3
mov
mov
dec
mov
mov
add
jl
xchg
or
sbb
scas
and
or
inc
hlt
fdecstp
test
mov
fidivrs
jbe
xor
mov
pop
nop
mov
mov
push
pop
in
push
popa
sti
je
pop
sub
notb
call
or
and
inc
push
fdivrs
jb
pop
mov
adc
movsb
mov
clc
xchg
or
out
cltd
and
aas
es
outsl
push
jp
and
dec
daa
lahf
sub
pop
and
dec
femms
and
movsl
push
popf
and
fs
cmpb
loope
stos
mov
inc
mov
or
in
cmp
mov
push
dec
xchg
add
and
inc
mov
add
mov
stc
test
mov
ret
mov
scas
pushf
jno
cmpsb
xor
dec
ret
out
cmp
adc
out
xchg
repz
fnstenv
sbb
int3
clc
loopne,pn
or
jmp
fcomp
ret
sbb
je
fwait
mov
repz
dec
cmpsb
andb
shrl
scas
movsl
ret
test
fisubrl
adc
dec
mov
stos
push
pop
movd
fistpl
xchg
mov
inc
hlt
sub
je
int
cmp
mov
test
insl
dec
pusha
lods
notb
stos
inc
stos
jp
repnz
push
loope,pn
jp
ret
jg
inc
mov
loop
cmp
imul
jnp
out
iret
aam
adc
shlb
into
gs
inc
dec
and
imul
jns
paddb
fcmovb
xchg
xor
adc
ret
and
test
fldcw
jne
push
dec
lcall
mov
fcomi
xchg
jb
cmp
xor
pushf
sbb
out
mov
push
cmpsl
xlat
pop
jp
xchg
push
inc
mov
pusha
std
push
mov
enter
outsb
mov
cmp
cmp
lsl
rcll
pop
cmc
sbb
mov
call
pop
je
inc
test
std
hlt
imul
movsb
jno
adc
insb
adc
add
fmuls
lret
ljmp
insl
lock
mov
hlt
jge
shr
push
gs
lods
scas
jle
fldl
cmp
mov
sti
ljmp
lret
es
and
jno
dec
jae
filds
or
mov
mov
jp
loope
les
fdivl
pop
inc
jnp
dec
dec
out
mov
lahf
or
loop
sub
and
ja
insb
popl
mov
lahf
pop
inc
sbb
incl
or
mov
pop
pop
das
mov
xchg
and
cmp
cld
xchg
loop
aas
cltd
repnz
subb
and
aas
lock
mov
pop
movsb
loop
adc
stc
sbbl
mov
add
jo
xor
adc
fidivl
arpl
sti
repnz
push
inc
sub
cmpsb
in
fstl
mov
fptan
or
subl
imull
xchg
xchg
dec
fdivrl
cmc
imul
dec
cltd
rclb
cltd
cmpsl
pop
sub
lea
rorl
lret
frstor
push
mov
movsl
subl
mov
mov
jl
sub
test
insb
in
mov
decl
pextrw
nop
fdivrs
adc
fldcw
and
fs
or
aad
pop
lods
rcll
imul
mov
cli
fsub
in
stos
call
icebp
ja
scas
lcall
lret
repz
testb
sbb
movsb
out
out
pop
out
push
cmp
sub
rcrb
pop
sbb
es
jne
xor
jecxz
in
mov
adc
xchg
dec
mov
leave
inc
arpl
jl
cld
xchg
sub
in
xchg
inc
or
push
pop
ss
and
adc
inc
mov
movsb
xchg
gs
sub
repnz
enter
lock
jbe
ret
aaa
jecxz
inc
add
add
inc
and
mov
and
mov
mov
sarb
fadds
adc
mov
ret
cltd
das
xchg
fwait
jb
bound
test
mov
fmuls
sbb
sti
push
push
repz
scas
jbe
ljmp
lods
or
rcrl
inc
sub
cmp
call
ljmp
pop
push
mov
pushf
push
cmp
push
cmpsb
pop
cmp
int3
mov
add
out
mov
jbe
add
int
dec
mov
jbe
adc
mov
sahf
pop
clc
sbb
jl
sbb
mov
repnz
jge
mov
mov
jmp
pop
mov
fisubrs
add
inc
mov
jb
dec
test
clc
mov
repz
cmp
mov
adc
push
loope
imul
xchg
loop
rolb
inc
shrb
mov
adc
arpl
adc
ss
and
mov
popa
je
adc
dec
mov
loopne
pop
mov
test
fmull
int
xor
lret
dec
mov
ret
cmp
cmp
testb
testl
iret
and
lock
push
cmpsl
add
cmpsl
cmc
xchg
scas
cli
mov
lea
lahf
rcrl
xor
icebp
cmpsb
add
adc
cltd
aad
ljmp
cmpsb
mov
jmp
imul
in
dec
xor
stc
ss
in
push
jecxz
push
imul
les
cltd
mov
popf
add
push
insb
and
cmc
dec
fadds
xor
adc
xor
mov
cmpsb
movsb
es
push
pop
add
fwait
stos
stos
pop
add
dec
call
pop
loop
int3
cwtl
in
sbb
cwtl
dec
addb
adc
mov
orl
and
adc
inc
dec
dec
cmc
mov
aas
and
rep
sub
loop
outsw
xchg
and
mov
jae
loopne
ret
push
sub
outsl
sub
sub
cmp
fstps
imul
xchg
xchg
ljmp
xor
pusha
mulb
xchg
mov
mov
jecxz
movsl
pop
stos
mov
and
and
mov
mov
or
jle
mov
cmp
sub
xchg
sbb
cmpsl
lret
jmp
fcomp
movsl
xchg
clc
mov
std
popa
dec
lcall
push
out
or
mov
pop
cld
bound
movsb
push
pop
push
lcall
and
mov
mov
mov
mov
cmp
jns
lahf
inc
jmp
mov
mov
pusha
jmp
lret
push
lahf
push
aas
call
mov
cmp
ret
mov
dec
xchg
loope
sahf
fwait
movsl
mov
sbb
repz
mov
es
nop
inc
jae
or
mov
cmp
pop
and
pushf
pop
popf
fistpl
dec
jle
dec
andl
inc
dec
gs
push
enter
mov
xchg
das
lds
pop
add
lret
arpl
dec
jg
push
lahf
jmp
es
popa
mov
mov
and
cli
mov
adc
rolb
xchg
xor
jle
std
xchg
sub
or
mov
in
xchg
push
into
sbb
dec
lds
cmp
fwait
je
nop
push
in
dec
pop
pop
and
mov
adc
movsb
sub
cmp
push
lock
jns
cmp
sbb
sbb
mov
jb
fcomi
mov
jbe
shll
jl
push
cmp
xor
fisttpl
mov
ret
scas
rorl
xchg
std
push
and
insl
fucomi
test
pop
inc
mov
aas
inc
sub
xchg
push
in
test
shrb
mov
xor
movsb
mov
mov
andb
dec
ljmp
inc
push
push
mov
loope
je
xchg
push
icebp
movsb
cmp
mov
or
gs
bound
mov
gs
push
repnz
adc
mov
sub
lods
negb
adc
es
nop
adc
fcmove
pop
insb
in
pop
mov
dec
or
movsl
movsl
ljmp
data16
push
jmp
aaa
fprem1
xchg
xor
in
jmp
jmp
xor
mov
icebp
inc
add
loope
les
xor
lds
lock
ds
ffreep
fcoml
bound
dec
cmp
pop
dec
and
stos
jae
mov
xor
into
imul
pusha
loope
xor
mov
push
test
add
cmp
ja
cmp
stos
sbb
outsb
repz
add
loop
push
xchg
addr16
xchg
std
mov
pop
cli
mov
xor
push
repz
mov
shl
lahf
lea
xor
hlt
das
pop
fsubl
mov
rorl
adc
sub
mov
cmp
call
iret
cmp
mul
pop
xchg
add
add
xor
cmc
cmp
pop
xorb
inc
lahf
out
movsl
jne
add
mov
adcb
popf
out
jae
add
lock
clc
sub
pop
xor
xchg
jnp
pop
data16
cmp
cmpsl
add
je
cltd
test
sti
testb
aas
inc
daa
incb
popa
jmp
inc
lds
mov
adc
add
mov
push
scas
addr16
or
lahf
jge
hlt
dec
les
pop
jge
add
int3
push
or
jl
ret
fiadds
and
inc
cmp
dec
pushf
enter
push
jl
mov
push
or
daa
sbb
les
inc
jbe
test
imul
dec
sbb
push
imul
gs
cmp
test
mov
popa
xchg
xchg
xor
gs
in
mov
addr16
sarl
loop
or
sti
imul
cs
clc
xchg
shll
inc
pandn
push
sbb
rorl
jns
leave
movsl
push
inc
lret
push
sub
mov
pop
mov
inc
inc
sbb
dec
pop
mov
xchg
fldz
pop
adc
call
mov
lret
sub
push
pusha
sub
outsl
mov
insb
pushf
shll
fmulp
cmp
cmp
dec
test
in
sarl
rclb
mov
mov
add
pop
fidivs
xchg
or
mov
xor
stc
add
fs
mov
lea
and
call
inc
les
pop
je
or
cmp
add
sub
cmpsl
gs
mov
mov
enter
adc
rolb
add
inc
scas
and
inc
daa
movsb
leave
stc
loopne
pop
mov
aaa
inc
call
adc
inc
add
xchg
lds
add
in
inc
aam
cltd
mov
repz
jg
testb
ret
inc
aas
push
inc
jmp
shlb
mov
int
adc
and
jno
and
jp
add
jmp
lret
arpl
and
jns
or
adc
loop
and
mov
clc
jge
dec
mov
add
or
and
sbbb
mov
rcr
sti
cmpsb
popa
cld
aad
jno
pop
mov
enter
lods
adc
mov
xor
push
icebp
or
inc
dec
cs
in
cmp
add
sbb
insl
dec
mov
mov
xor
sbb
jb
loop
adc
shll
jbe
filds
ret
insb
call
repz
jp
jg
loope
sbb
dec
xchg
in
add
or
lods
outsl
pushw
cmp
jne
in
jno
and
dec
sbb
xor
ss
lods
in
test
fdivrl
sub
negl
rcl
push
push
les
pop
data16
xor
fdiv
std
jge,pt
test
add
das
xchg
mov
push
add
jecxz
call
jl
inc
mov
lock
cmpsb
mov
mov
and
mov
sbb
dec
mov
dec
lcall
pusha
mov
cli
insl
or
cmpsl
xchg
in
in
xchg
push
xchg
xchg
adc
xor
aam
cld
and
in
outsl
es
inc
xor
das
or
lock
add
cs
cmpsb
jb
push
mov
dec
cmp
jno
fcoml
xor
out
inc
imul
mov
repnz
pop
adc
pop
dec
repz
inc
ret
adc
cld
div
push
xchg
ja
dec
or
xchg
and
push
popf
pop
xchg
ljmp
jg,pt
popa
cmp
xchg
cltd
xor
jae
jnp
push
dec
adc
xchg
dec
cmpsb
loope
lahf
mov
insl
and
sub
stc
insl
cltd
nop
sarl
or
and
xchg
call
add
cmpsl
mov
inc
cli
sbb
test
nop
aas
jae
movsl
mov
popa
push
cmp
cmp
or
jnp
xorl
out
sahf
lcall
mov
mov
cltd
push
lock
jmp
inc
jg
ds
add
mov
rcr
dec
fmulp
les
leave
mov
pop
jb
and
adc
push
jl
fisubl
jae
jp
jl
pop
jbe
popf
mov
lret
push
mov
inc
push
push
adc
push
xchg
pop
or
rcll
stos
and
lcall
divl
mov
sti
or
dec
sub
push
inc
dec
test
dec
xor
jg
xor
jmp
adc
popl
lods
dec
lcall
mov
jecxz
inc
icebp
jge
cmp
out
and
pop
dec
pushf
sbb
fwait
movsl
push
xchg
mov
sbb
iret
dec
cwtl
pop
jb
out
sbb
fwait
inc
int3
jo
fistl
mov
dec
dec
mov
lea
daa
mov
xchg
mov
inc
push
loopne
jmp
filds
lock
sbb
rclb
dec
dec
outsl
stos
call
aad
sub
dec
pop
push
mov
repz
andb
fisttpl
sar
jno
jle
jecxz
xchg
mov
cmp
mov
hlt
or
sub
cmp
lock
inc
add
inc
rcrl
fiadds
mov
pushf
jae
inc
repz
pop
fcoms
mov
incl
push
pop
roll
mov
loop
bound
test
sub
lods
rolb
and
sahf
and
ljmp
sbb
xchg
stos
mov
pop
adc
mov
stos
xchg
add
pop
sar
xlat
sub
cwtl
aaa
xchg
jg
call
mov
jae
adc
sub
sub
dec
pushf
sub
jne
xchg
push
rcl
lds
cmp
or
pop
subl
inc
xchg
sbb
lahf
lret
pusha
dec
jb
daa
cltd
jnp
and
aaa
js
lods
jg
adc
sub
xor
add
leave
iret
xchg
imul
xor
mov
lahf
in
mov
cli
out
sbb
insl
outsl
pop
add
and
mov
adc
inc
stos
aam
lcall
fs
cmpsb
or
ret
or
add
leave
fstl
jge
jno
mov
push
lea
mov
xor
cli
jg
sahf
roll
inc
mov
nop
or
xchg
xor
push
sub
adc
adc
pop
ss
loope
xchg
fistl
add
loopne
pop
mov
jo
ds
loope
ja
stc
push
sbb
pop
cmp
inc
rorb
jne
rcrb
inc
leave
es
mov
mov
jmp
jmp
js
and
mov
add
leave
and
inc
lret
xor
int3
sub
add
mov
push
stos
inc
jg
addr16
add
pop
mov
mov
add
mov
insl
mov
mov
sbb
push
aam
cmp
jnp
popa
pop
ss
cld
cmp
xchg
and
lock
lock
divl
mov
adc
inc
cmp
stos
mov
or
imul
arpl
mov
jno
pusha
xlat
jle
das
mov
push
xchg
adcb
ja
iret
fwait
insb
iret
xchg
rcrb
pop
xchg
mov
fildll
aad
or
adc
add
js
data16
push
sahf
mov
lret
data16
ljmp
add
pop
aam
rorb
push
dec
pop
outsb
movsb
mov
out
pop
dec
gs
sbb
mov
or
add
add
test
jo
jl
xor
insl
out
in
add
cmpsl
loope
test
dec
mov
mov
push
push
loopne
fsts
js
mov
das
aas
stos
jo
add
add
into
adc
rorl
lods
divl
sub
jnp
mov
dec
xchg
dec
popa
pop
dec
jbe
pop
and
or
mov
pop
xor
adc
cmpsb
push
fbld
sub
stos
mov
nop
not
xchg
cmp
pop
dec
add
xlat
push
pop
mov
popf
add
cmp
out
mov
pop
push
xlat
pop
mov
or
or
dec
fst
xchg
sbb
test
inc
aas
push
dec
inc
xchg
testl
adc
mov
xchg
sub
std
fcomi
dec
add
jg
les
xchg
lea
mov
aad
dec
or
fcoms
mov
cmp
arpl
stc
outsl
fstpt
out
je
jae
pusha
dec
sbb
or
jp
fldl
xor
sbb
imull
icebp
repz
pushl
sbb
mov
into
lods
dec
andl
stos
outsl
adc
jp
ret
jns
aad
inc
push
pop
sahf
sbb
std
sti
clc
push
cltd
stos
inc
cmp
lods
loop
scas
nop
jne
push
call
dec
xor
adc
test
roll
cmp
mov
fwait
jg
cld
es
push
pop
ds
insl
movsl
scas
sub
cli
in
stos
stos
incl
jb
xchg
lods
cmp
push
iret
add
mov
xlat
or
or
xor
mov
cli
cmpsb
inc
and
or
js
mov
lods
add
pop
mov
cmp
xchg
sahf
jae
lcall
push
movsb
dec
sbb
loop
sbb
not
and
add
leave
xchg
jbe
mov
pushf
loope
mov
shll
test
rorl
pop
daa
push
cmp
notb
imul
push
idivl
pop
out
inc
inc
sbb
xchg
pop
adc
and
pop
cltd
push
cmp
pop
fsubl
fwait
pop
in
shrb
adc
jg
push
stos
leave
xor
inc
push
jnp
inc
pop
push
inc
adc
xchg
inc
sub
pop
imul
inc
dec
mov
inc
and
mov
inc
fcmovbe
xor
push
je
fistps
adcl
sbb
pop
mov
andb
add
lock
jl
mov
dec
mov
loop
mov
insl
add
aaa
jl
dec
insl
lock
mov
addb
pop
mov
jle
xor
test
and
push
sti
ds
mov
hlt
out
or
xchg
leave
rol
mov
and
xchg
shrl
test
outsb
push
jmp
std
sub
cltd
xchg
gs
iret
dec
std
aas
mov
push
jp
ljmp
or
cmc
jecxz
fwait
leave
mov
sbb
push
jp
into
movsl
adc
stos
movsl
cmp
mov
and
popf
sub
pop
sub
dec
jbe
sub
sbb
ja
ja
movsb
loope
in
sbb
add
fcomp
in
jno
fs
lahf
call
cmp
lods
pop
push
and
leave
inc
jp
movsb
pusha
int
les
clc
cmp
pop
or
in
and
jo
into
xor
test
mov
or
mov
iret
xchg
leave
add
rep
pop
imul
test
sbb
lcall
movsb
dec
xor
mov
pop
sti
jb
jge
mov
xor
mulb
pushl
je
aaa
je
std
movsb
or
sub
lock
xor
cs
jecxz
mov
lcall
movb
fadd
jne
cmpl
icebp
or
mov
pushf
ja
xchg
aad
ret
lods
jns
dec
fsts
jno
cmpsl
dec
stos
push
lock
outsl
pop
inc
sbb
jbe
adc
jns
fidivl
fmull
or
jno
mov
mov
dec
insl
cmp
stos
inc
xchg
pusha
mov
out
outsl
mov
divps
mov
pop
stos
or
add
pop
inc
cld
loopne
popf
pop
insl
cmp
mov
or
cmpb
mov
lret
mov
sub
out
mov
cmp
and
inc
nop
movsb
mov
push
fadds
mov
sarb
mov
dec
arpl
push
mov
pop
fmull
xchg
add
adc
mov
xchg
lods
or
pop
xor
repz
push
nop
xor
cltd
out
cmp
jg
cmc
out
inc
mov
sbb
or
mov
stc
xchg
mov
js
nop
lahf
jg
or
push
stos
lods
push
push
hlt
das
lfs
push
out
fidivl
stos
push
mov
mov
test
pushf
pop
fmull
aad
or
or
mov
mov
lods
cld
cmpsb
orb
fnsave
push
test
dec
sbb
imul
mov
nop
jns
inc
pushw
sarl
imul
out
mov
enter
xchg
jecxz
mov
jge
stos
jb
rep
fiadds
mov
dec
sbb
stos
push
je
xor
cmp
outsl
cmpsb
mov
mov
adc
clc
push
push
ss
outsb
popa
pop
sbb
xchg
out
push
scas
mov
jne
test
cmp
cmpsl
out
nop
in
jg
stos
xchg
mov
push
daa
dec
orb
bound
jmp
daa
loop
lret
imul
shr
mov
push
mov
xor
mov
mov
xor
in
xchg
jecxz
cmp
scas
outsl
mov
enter
lods
lods
lock
cmp
es
notl
push
pop
std
neg
xchg
push
ret
or
jb
ds
pushf
or
add
mov
mov
scas
jnp
inc
xchg
dec
sti
divl
imul
js
int
mov
mov
sub
cli
add
sub
lock
xor
mov
mov
xor
pushf
negb
lods
xchg
mov
xor
jne
fildl
std
out
push
shlb
pop
and
cmpsb
insb
ret
inc
sub
pop
sub
jg
sar
ret
ja
loope
cmp
pushf
bound
fdivl
push
sub
jg
sarb
scas
mov
jae
shll
xchg
xorb
xor
and
das
sbb
adcb
mov
cmpb
call
out
push
xchg
mov
xlat
addl
aas
mov
lcall
and
mull
in
pop
pop
push
fdivs
add
pop
ja
sub
rorb
out
pop
mov
inc
pop
das
fildl
in
aas
xor
xor
fdiv
es
push
push
in
jge
or
xor
cmp
out
xchg
jnp
add
into
xchg
sbb
xchg
rcr
fs
adc
sti
xchg
test
sbbb
xor
daa
fwait
xchg
xchg
in
xchg
movsb
popf
aas
test
adcl
jo
je
paddusb
sbb
iret
cmp
xchg
clc
inc
mov
je
adc
dec
push
out
jp
lock
pop
mov
or
pop
sub
inc
xlat
cmp
xor
pop
add
pop
and
lahf
jl
movsl
addr16
lahf
push
shr
rcrl
xchg
mul
xor
lods
fnstenv
aas
lods
jbe
adc
cmp
adc
les
hlt
mov
fimuls
mov
jecxz
insb
scas
ret
xor
or
mov
mov
mov
sub
push
xchg
sarl
cwtl
jmp
lret
inc
fcomip
rorl
add
push
sub
and
cmp
enter
mov
pop
mov
jl
dec
jbe
scas
mov
cmp
dec
pop
daa
ss
mov
mov
movsb
mov
jmp
adc
je
addr16
call
pop
mov
adc
inc
movsl
jo
add
rcll
or
or
dec
or
and
int
cmp
jae
mov
leave
xor
in
cmp
mov
inc
iret
jmp
push
pop
mov
pop
out
leave
fbld
and
shll
imul
rcrb
scas
vmwrite
xchg
adcb
call
stos
sbb
or
jne
or
mov
daa
cmpl
cmp
ds
stos
pop
sub
sub
lcall
pop
cs
rclb
adc
pop
mov
ret
popf
mov
stc
xor
inc
je
dec
pop
stc
ss
movsl
xchg
cli
cmpl
lods
dec
fidivs
call
sbb
cmp
mov
fidivrs
dec
mull
cwtl
adc
cmpsb
sub
adc
les
jle
dec
std
xor
test
cld
nop
sub
dec
decb
dec
stos
cmp
add
push
push
xchg
addr16
negl
xchg
rorl
das
push
mov
sbb
stos
cmc
bsr
pusha
adc
dec
xor
mov
xor
dec
stos
aaa
adc
movl
lea
sahf
fsubrl
lret
jno
push
cmc
clc
jl
and
popf
in
cmp
divb
sub
cvtps2pi
mov
add
pop
cwtl
jmp
aam
loopne
pusha
xor
sbb
inc
test
repz
push
lods
stc
fdivrl
addr16
insb
shl
dec
push
movsl
pusha
push
pop
jl
hlt
push
into
icebp
cld
jae
jae
fmuls
fpatan
gs
pop
pushf
lret
shrl
outsl
sub
cmp
or
xchg
arpl
push
push
jnp
enter
lods
and
pop
mov
out
add
dec
inc
and
ja
mov
outsb
in
add
mov
pusha
leave
adc
cmp
mov
push
aad
jno
js
nop
inc
cmp
cmpsb
ljmp
sub
pusha
push
xor
rcrb
test
inc
mov
push
fwait
sub
out
dec
fildll
jnp
xchg
repnz
jmp
cli
js
fwait
push
cli
fidivrs
lcall
insb
pop
add
mov
mov
jnp
jmp
dec
pop
out
jns
ret
sbb
rcrl
add
sti
dec
fmul
sbb
ss
xor
xchg
imul
jns
sbb
add
push
push
xchg
mov
leave
mov
fcomp
mov
jmp
jbe
push
cld
clc
clc
outsb
push
fistpl
push
push
add
push
or
inc
pushf
arpl
dec
or
stc
and
pop
inc
repz
shr
xchg
add
cmp
dec
call
ss
jle
ja
outsb
lock
ret
stos
dec
idivl
jns
ds
ret
push
addr16
out
mov
leave
xor
xchg
aaa
pusha
jecxz
mov
lock
cmp
stos
and
push
or
lds
jo
cmp
scas
es
fs
test
jle
jae
jb
push
push
std
arpl
jmp
mov
out
hlt
dec
sub
sub
push
out
mov
cmpsl
scas
mov
lods
xlat
dec
xor
mov
insb
cmp
stos
jp
dec
loop
mov
or
cmpsb
movsb
call
xchg
dec
js
scas
push
pop
mov
icebp
sti
adc
mov
gs
push
xor
pop
mov
fistps
mov
mov
fmull
add
cmp
jo
jo
lret
insl
out
adc
pushf
add
add
jno
shlb
mov
xchg
adcb
in
loope
jb
int
ficoml
jae
xchg
loope
cmp
decb
pop
inc
pop
xor
mov
cmp
add
adc
movsl
push
fstps
sub
int
notl
and
push
cmp
push
popf
decl
outsb
xchg
jne
xor
inc
aaa
pushl
sahf
dec
xchg
pushf
aaa
fldt
aas
mov
out
out
inc
xchg
arpl
push
filds
cmp
popa
sub
jle
jmp
into
out
or
push
int
outsl
sbbl
sub
bound
push
sub
pop
mov
mov
mov
mov
jbe
and
insl
push
adc
les
andb
sbb
test
jl
pop
ret
mov
lods
xchg
jg
mov
sub
xchg
fcomip
mov
xchg
sbb
sub
dec
es
rcll
loopne
mov
loopne
xor
test
stos
mov
imul
xchg
cld
xchg
pop
data16
sub
jmp
jnp
sahf
or
test
lret
aad
sub
and
jge
ja
ficoms
mov
add
mov
push
scas
xchg
mov
push
test
insl
inc
xor
jmp
lcall
imul
or
jnp
xor
cmp
cmpsl
mov
test
lock
loopne
xlat
pop
aas
mov
mov
push
xor
sbb
loop
and
ja
out
jo
fdivrl
inc
xlat
aas
shlb
stos
xlat
xchg
sbb
pop
mov
xchg
push
dec
sbb
icebp
adc
ljmp
enter
push
enter
add
xlat
iret
insl
or
sub
mov
jmp
ja
loop
in
loopne
push
stos
pop
and
jno
cmpsb
icebp
idivb
out
dec
jp
jae
mov
shl
sub
bound
sbb
loopne
aad
xchg
sahf
ja
mov
arpl
xchg
into
rorb
out
rcr
cmc
add
inc
push
mov
inc
pop
pop
fidivrs
js
and
outsl
pop
add
lds
add
stos
mov
and
and
xchg
repz
jg
adc
mov
jge
das
add
movsl
repnz
jp
cmpsl
insl
arpl
negb
jecxz
add
jmp
test
fld
rcl
mov
adc
mov
fmuls
std
fs
jmp
jecxz
pushf
imul
mov
fdiv
hlt
test
jge
fs
mov
sub
out
push
fcoms
mov
inc
mov
jle
cmp
int
movsl
test
mov
sub
jbe
mov
scas
out
fimull
push
jecxz
mov
inc
stc
xor
xor
jecxz
push
scas
adc
sub
inc
pop
fisubl
or
shr
or
xchg
adc
or
out
fmull
jo
push
loop
inc
push
and
outsl
lock
cmp
mov
scas
addr16
sub
xchg
inc
rorl
inc
adc
push
enter
dec
dec
stos
int3
mov
aam
xchg
ret
sub
mov
mov
sarb
outsb
push
push
mov
fbld
mov
jns
adc
and
cmp
xchg
jge
popa
in
out
adc
cmp
cmpsl
dec
imul
popa
jle
lods
adc
call
add
cmp
push
inc
ficoml
push
xchg
or
idiv
subb
xor
lock
adc
outsb
pop
add
xchg
add
push
shl
cltd
es
xchg
arpl
xchg
jbe
mov
cmpsb
mov
movsl
fwait
or
aam
inc
bound
clc
jae
mov
movsb
in
lea
add
or
or
xor
or
dec
push
xor
vsqrtps
idivb
pop
xrelease
mov
popa
scas
sti
aad
and
mov
sbb
adc
ret
dec
icebp
cmp
sbb
pop
mov
jo
or
pop
push
mov
jbe
ret
inc
lahf
scas
and
pmaxub
mov
mov
pop
ret
rclb
xor
or
mov
mov
push
jnp
inc
sbb
lret
lret
sti
cmp
xchg
enter
aas
loope
nop
mov
repz
sbb
sub
test
pop
ja
jl
ds
inc
test
cmp
fdivrl
jecxz
pop
mov
sub
mov
imulb
in
mov
pop
test
xor
jle
data16
dec
xor
jbe
syscall
test
test
mov
fmul
lds
jbe
xchg
mov
sub
or
cli
pusha
cmp
out
ret
push
push
es
popa
decl
adc
mov
lock
loopew
into
push
dec
cmp
cmp
leave
pusha
aaa
arpl
roll
inc
into
adc
xchg
sbb
mov
pop
shrb
fisttpl
int3
outsb
mov
push
sub
push
fcmovne
rclb
fildll
add
adc
cmc
add
push
cli
adc
cmp
sbb
mov
adc
inc
xchg
in
add
adc
mov
lahf
ss
cmp
bound
addr16
popa
push
dec
loopne
movsb
inc
push
imul
mov
fldcw
pusha
scas
les
in
mov
cmp
jne
mov
mov
je
push
shlb
pushf
inc
sahf
sahf
adc
mov
pop
xchg
addr16
inc
enter
shrb
push
lods
sti
fiaddl
daa
rorl
xchg
xchg
insl
pop
sbb
pop
mov
dec
lcall
and
dec
movsl
cmpsl
and
mov
pop
cmp
sahf
fsincos
test
lahf
push
jp
sbb
outsb
rorl
cmp
das
mov
adc
imul
addl
jmp
push
pusha
jg
mov
sahf
in
loopne
cli
jns
loope
cmp
popf
lods
pop
orl
out
in
fadds
xchg
mov
mov
out
push
cwtl
xchg
fsts
jmp
sbb
dec
and
push
leave
cmp
ss
cli
xchg
imul
dec
or
cmpsb
in
idivb
xorb
adc
subb
out
loope
nop
mov
push
or
dec
inc
mov
adc
dec
add
inc
xchg
xchg
cld
push
es
loop
inc
hlt
repz
test
sub
sub
cmp
or
into
lods
fdivs
test
push
mov
outsl
push
push
xor
scas
or
int3
cmp
add
inc
lods
xchg
cmp
inc
rcll
lea
cmp
popf
inc
mov
pop
test
frstor
mov
jmp
dec
xchg
shll
push
in
mov
pushf
loop
mov
cmp
and
into
sub
lods
and
sbb
icebp
cmp
xor
aad
sbb
fwait
jne
mov
push
das
js
cmc
rcl
aad
mov
pop
sub
dec
cmp
mov
mov
int
stos
popf
sub
in
add
les
not
mov
sti
das
or
or
pop
subb
mov
into
mov
sbb
loopne
stc
inc
in
dec
sarb
ficoml
loope
adc
jno
hlt
adc
xchg
mov
sbb
or
popa
or
sub
sub
pop
call
pushf
hlt
dec
push
and
mov
add
faddl
jecxz
pop
or
sub
je
lea
notb
dec
popw
aam
jle
ljmp
vmread
and
sub
pop
adc
ficompl
andb
dec
pop
bound
push
inc
mov
jns
mov
push
add
xchg
in
cmpb
dec
pop
outsb
xchg
sub
xchg
push
pop
mov
and
mov
sub
mov
js
cmp
xor
sub
xchg
negl
push
fst
or
mov
out
dec
rcl
xor
pop
int
les
mov
add
push
fsubr
xchg
mov
dec
mov
cmp
psubusw
je
and
cmc
sbb
shr
in
mov
mov
scas
cmp
lcall
add
and
mov
imul
data16
pusha
mov
pop
in
cmpsb
mov
xor
xor
test
push
dec
mov
js
mov
or
mov
fisubrs
pop
jns
pop
call
push
xchg
push
or
inc
xchg
dec
dec
faddl
repz
sub
or
mov
lret
sahf
adc
sbb
cli
lret
icebp
inc
mov
stc
xor
mov
popf
das
insl
inc
jmp
arpl
xor
fucomp
mov
mov
push
xorl
add
or
test
push
or
cmp
movsl
push
push
push
pushf
sbb
pop
or
icebp
or
xor
decl
push
loopne
es
push
fucomip
repnz
popl
xchg
rcl
or
lods
movb
push
out
sbb
stc
call
push
dec
jecxz,pt
sbb
fisttpll
xchg
dec
sub
pop
sub
pop
dec
and
imul
sub
add
sub
in
pop
imul
or
adc
add
pop
icebp
inc
in
mov
mov
out
loope
scas
jns
adc
loop
ret
xor
repnz
sbb
and
inc
mov
mov
adc
fcomip
push
in
adcl
push
fld
sub
popa
aas
add
cwtl
lret
loopne
cltd
out
or
in
mov
aas
lret
insb
loopne
push
add
mov
jnp
jbe
mov
jns
jae
inc
inc
sbb
mov
into
jmp
fdivrs
inc
pop
sub
fisubrl
adc
sub
mov
call
lods
add
and
stc
xorl
xor
jecxz
push
fisubs
je
out
dec
jle
out
js
mov
mov
push
es
cli
lret
outsb
inc
popa
fs
cmp
add
mov
and
lea
sbb
mov
rcrb
fst
inc
lods
std
push
cmc
push
mov
dec
cmp
pusha
fisubl
lret
daa
clc
lods
aas
das
lock
mov
les
sbb
subb
ljmp
or
dec
and
adc
dec
jp
dec
sbb
inc
lds
pop
push
jmp
xchg
xchg
mov
fs
clc
imul
dec
adc
imul
jle
dec
inc
insl
out
jp
test
adc
movsl
sbb
pusha
ror
dec
and
jb
jl
lods
jecxz
push
pop
mov
xorl
mov
out
push
xor
and
xor
sti
mov
iret
insl
push
sub
test
pop
adc
pop
mov
movd
pmaddwd
out
cmp
mov
add
gs
or
lock
jp
scas
add
inc
shlb
adc
movsb
inc
fs
push
fwait
int3
adcb
xor
sub
stos
mov
sbb
inc
push
or
test
out
adc
and
mov
sbb
sbb
jg
lcall
mov
insb
lock
in
sar
mov
mov
out
sub
dec
scas
and
mov
and
push
xor
imul
outsb
push
cltd
outsl
cld
push
sbb
filds
cmpsb
fcomps
xchg
enter
jle
int
or
lret
iret
out
push
cs
cmpsb
or
hlt
les
push
dec
mov
test
pop
sbb
mov
dec
lea
pop
loop
cmp
push
xchg
es
xchg
je
int3
sahf
loop
repnz
rolb
in
jae
rolb
rorl
dec
cli
test
add
ja
rcrl
add
cmp
sbb
in
adc
mov
sub
jae
sbb
mov
inc
push
cld
xor
push
jl
cmp
adcl
mov
iret
add
adc
sbb
push
xor
inc
je
out
cmp
inc
sbb
out
repnz
dec
arpl
out
fldl
or
xchg
les
xor
fidivl
rcrb
fcoms
ret
aad
add
lcall
dec
in
mov
stos
hlt
insl
lods
lret
mov
xlat
adc
add
add
ror
add
lock
out
jo
fisttps
pushf
and
add
nop
outsb
xor
fisttpll
leave
shrl
sti
mov
fidivs
pop
mov
adc
gs
adc
notb
negl
icebp
add
pop
cmp
and
sar
scas
push
lock
int
pop
and
jle
lcall
es
pop
or
push
adc
int3
cmp
movsl
fs
in
sub
xchg
int
das
enter
or
stos
xchg
popa
cmp
push
inc
mov
push
xchg
mov
addl
cltd
je
fcmovnbe
inc
pop
jbe
jge
adc
sub
adc
mov
sub
pushf
cmp
lcall
insl
gs
popf
xor
hlt
push
mov
sar
dec
rcr
cmp
arpl
pusha
adc
push
and
jp
loopne
mov
ret
adc
cmp
mov
jae
fdivrp
and
push
cmc
lods
aam
jecxz
push
popa
xor
mov
pushf
jle
mov
jb
push
lret
and
ret
sbb
jbe
push
bound
inc
dec
xor
lea
and
bound
cs
rorb
or
sbb
inc
arpl
fwait
arpl
pop
imul
xchg
sub
mov
repz
iret
aas
cmp
sub
fs
and
push
addr16
fbld
jne
clc
and
mov
pop
jbe
push
or
mov
inc
push
xchg
jle
call
cmp
add
cmp
sub
ds
call
fidivrs
and
dec
int
add
enter
aam
stos
test
lahf
and
into
rcrl
xor
loope
push
js
mov
xlat
dec
sbb
xorb
sub
outsb
cld
dec
inc
jo
jno
push
out
and
jge
shll
ror
shlb
jle
fcoml
repz
and
push
pusha
sub
jne
dec
outsb
pushf
cmp
cmovge
sar
out
sub
xchg
or
sbb
cmpsb
sarl
in
es
adc
je
xor
push
mov
or
jns
jnp
or
push
jle
ljmp
pop
dec
xlat
ja
dec
addr16
iret
add
and
cmp
ret
mov
dec
incb
fnstsw
pushf
mov
xor
fwait
ja
or
xor
adc
repz
inc
ror
sub
mov
daa
dec
das
mov
xchg
aam
mov
xor
sub
loop
xor
cltd
shl
pop
aam
dec
inc
rcrl
mov
cmp
hlt
push
sbb
orl
inc
jno
lea
jp
movsb
aaa
inc
mov
mov
movsb
lods
inc
mov
cmpl
xchg
mov
ja
shll
push
mov
xchg
and
add
push
xchg
mov
sub
andb
add
leave
stc
pop
mov
and
into
xor
mull
into
push
or
cmp
sub
push
iret
push
stc
int
sarl
push
aam
roll
out
xchg
outsl
fcomps
cmp
cmp
into
and
popf
xor
or
out
movsl
std
lods
pop
stos
mov
js
mov
lcall
or
push
jecxz
lahf
fsubrl
jle
in
enter
inc
push
pushf
arpl
dec
or
test
mov
or
sub
pop
sub
mov
dec
mov
es
cmp
xchg
dec
dec
pop
aad
orb
inc
adc
cwtl
jno
bound
pusha
andl
xchg
push
sub
icebp
add
mov
adc
test
iret
repz
fisubrl
sub
popf
shlb
sbb
movsb
pop
adc
cltd
jo
and
dec
scas
hlt
push
xchg
sub
push
cld
adc
addl
mov
add
lahf
ljmp
rol
ljmp
xchg
hlt
add
inc
pushf
jb
dec
sub
inc
mov
xor
mov
ds
rcl
insb
shrb
ret
lds
mov
sub
xchg
and
sub
sub
in
pusha
out
cmp
dec
xor
lods
mov
mov
sub
or
hlt
retw
pop
lahf
adc
outsb
sahf
cmp
out
fcompl
push
int
pop
xchg
mov
jle
xor
jmp
outsb
jo
or
xor
sub
ss
mov
add
movsl
iret
testb
cmp
mov
mov
mov
dec
shll
repnz
lcall
js
lcall
pop
aam
mov
repnz
pop
div
hlt
push
stos
inc
test
cmp
sub
les
sar
mov
sbb
inc
lahf
sub
js
cmp
sbb
cwtl
out
test
js
lea
dec
lods
outsl
test
pop
cmpsl
pop
cmc
std
pusha
and
inc
inc
dec
testb
jb
addr16
dec
rorl
cmp
jne
xor
jo
sub
xchg
repnz
pop
pop
ja
inc
inc
int3
cltd
or
fmuls
push
cmp
jae
mov
ss
xchg
fs
ret
add
inc
mov
add
int
fnstcw
add
pop
or
lds
xor
clc
loope
sbb
aaa
sbb
ds
jnp
les
mov
cmp
fcomps
scas
push
ljmp
bound
sbb
adc
rorb
pop
shrb
adc
loopne
sub
outsl
and
pop
adc
cmp
dec
outsl
dec
lcall
in
aas
jmp
stos
pop
sbb
bound
sbb
push
cwtl
adc
arpl
testl
loop
add
or
ja
rorb
push
cltd
lods
lds
roll
fstps
jmp
data16
out
inc
bound
dec
mov
movsb
cmp
adc
outsl
xor
xchg
or
test
xchg
addl
stc
jnp
xchg
jno
xchg
outsl
cmp
leave
divb
fisttps
push
lcall
mov
in
dec
push
scas
shl
mov
add
cmp
pop
mov
adc
out
dec
sbb
adc
dec
test
fmuls
jo
outsb
das
and
dec
imulb
adcl
mov
int
nop
into
jno
push
pop
dec
fiadds
scas
aaa
and
cmc
shl
xor
arpl
clc
int3
lds
jge
adc
xchg
mov
push
mov
pop
dec
cmp
xorl
shr
mov
fmuls
insb
out
sub
sub
iret
arpl
addb
test
scas
push
rcr
cmp
add
mov
inc
inc
jmp
leave
or
mov
or
int3
outsl
cmp
mov
mov
and
mov
jl
lea
jle
and
mov
sar
sub
rol
pop
jae
cli
lcall
mov
xchg
cld
inc
fadds
and
or
sbb
sub
cltd
pushf
bound
pop
mov
lea
leave
stc
loop
call
pop
stos
pop
xchg
dec
lahf
mov
or
cmp
pop
addr16
mov
jo
pop
test
push
add
sti
adc
sub
mov
inc
cli
or
push
sbb
lods
daa
sub
js
fs
dec
sbb
mov
inc
xlat
int
push
shl
pop
js
mov
or
xor
mov
adc
test
sbb
dec
test
gs
out
std
cmpl
cwtl
mov
mov
rorl
fidivl
mov
in
nop
fcmovnu
cmpsb
and
arpl
ja
iret
cmc
xchg
sahf
out
dec
jle
push
jne
and
push
cmpb
fdivs
rol
sub
sbb
mov
lds
gs
and
mov
lret
push
fldcw
rcrl
out
ret
fdivp
int3
fld
pop
push
rolb
inc
jl
mov
into
inc
bound
push
outsl
fnsave
outsb
mov
lahf
pushf
pop
lahf
sarb
push
cmp
in
inc
add
xchg
xchg
push
les
pop
sbb
mov
pop
xchg
mov
jbe
mov
add
test
fstl
shll
addr16
sbb
or
fildl
in
scas
sbb
inc
add
dec
push
bnd
insb
lcall
aas
test
push
frstor
pop
sbb
jmp
inc
jae
jecxz
ret
mov
aaa
imul
sarb
jne
js
and
rdtsc
sub
notb
fst
mov
inc
inc
jnp
frstor
jg
sbb
lea
stc
jecxz
arpl
mov
icebp
lret
ficompl
cld
faddl
and
aam
mov
mov
or
rcr
test
jae
daa
jmp
and
mov
repz
mov
dec
stos
mov
cmp
divb
scas
insb
and
fsts
add
lds
sbb
and
or
scas
mov
out
daa
pop
xlat
pop
mov
lods
push
mov
push
mov
lods
add
shlb
int
xchg
scas
sbb
and
popa
jle
cld
int
repnz
push
push
test
jo
dec
mov
or
clc
mov
xchg
ror
popa
xor
aas
xchg
sub
xchg
inc
fistps
notb
push
repz
dec
or
sti
in
popa
xchg
push
into
inc
insb
or
bound
add
iret
or
aad
jl
fs
test
es
adc
cld
js
mov
xchg
push
out
or
inc
cli
sub
jno
movlps
cmpsl
mov
aam
dec
jmp
lds
imul
mull
or
cmp
insl
mov
out
push
dec
push
aam
sbb
xchg
jae
adc
sbb
ss
xchg
adc
and
push
push
shlb
inc
push
cmpsb
mov
or
mov
jo
jmp
inc
and
jmp
mov
sbb
movsb
insb
shlb
mov
push
cs
xchg
xchg
and
stos
jb
add
test
data16
sbb
adc
mov
mov
lods
xchg
add
shll
adc
std
ret
test
jnp
call
push
fucomi
insl
addr16
sub
xor
cmp
add
out
sub
pop
lcall
aad
nop
xor
cld
lahf
push
mov
outsl
hlt
push
pop
iret
sti
mov
jb
sbb
cmp
xchg
mov
sahf
cmp
add
dec
fs
add
sub
mov
inc
mov
push
push
das
popf
push
and
in
pop
or
imul
inc
mov
xchg
loopne
dec
sub
bound
adc
in
mov
imul
xchg
xor
push
mov
lcall
insb
xlat
outsb
fwait
cmc
push
cwtl
rcrl
mov
sbb
xchg
jmp
inc
fbstp
dec
push
inc
xor
stc
mov
mov
stc
int
icebp
pushf
jle
xchg
negb
cmpsb
out
out
andb
and
leave
push
jo
xor
pushf
mov
decb
int
and
jmp
lods
push
ja
addb
xor
lret
mov
orb
cltd
or
add
arpl
repnz
or
dec
push
lods
adc
adc
dec
or
jge
dec
loop
lods
fcmovnbe
mov
sbb
pop
jo
repnz
mov
test
jp
pop
xchg
pop
cmp
movsl
rclb
in
pop
jge
jo
sub
dec
sub
jmp
mov
iret
out
aaa
decl
sub
inc
push
push
mov
pop
inc
add
pop
push
fnstsw
int3
call
adc
inc
lock
mov
mov
sub
xchg
jmp
adc
mov
xor
out
cmpb
arpl
jne
js
or
andnps
pop
cmp
cmpl
inc
or
sbb
mov
ss
push
jnp
jne
pop
fsubs
mov
pusha
and
mov
movsb
xor
subl
shll
xor
adc
sahf
dec
xor
lcall
out
or
add
push
cltd
clc
in
lret
insl
aaa
popa
sbb
out
sub
mov
fs
out
sbb
xchg
out
imul
sbb
cmp
inc
mulb
inc
mov
and
dec
orb
fmul
sets
xor
movb
aad
xor
xor
lret
sub
pusha
call
or
daa
pop
addr16
js
in
xor
xchg
out
gs
pop
xor
cmovns
mov
adc
rolb
adc
mov
jmp
fs
lds
push
xchg
or
mov
mov
sti
notl
imul
and
adc
sub
jo
rcrl
arpl
not
push
out
sti
cmp
aam
and
fnstenv
and
jge
mov
or
sub
inc
lret
addr16
jne
cmp
lea
and
aas
clc
in
add
xor
pop
cmc
or
sahf
and
jle
cwtl
or
mov
test
repnz
pop
repnz
aad
jbe
data16
mov
and
and
cmp
scas
shlb
sarb
repnz
repz
jb
in
push
jns
mov
add
fcmovnbe
mov
sub
push
mov
xchg
inc
shll
sub
mov
ficompl
xor
aam
mov
sbb
ss
push
sahf
in
int
pop
mov
cltd
ljmp
rorb
pushf
mov
lea
je
outsl
outsb
push
inc
arpl
pop
xchg
add
xchg
test
push
mov
jle
lret
stos
enter
xchg
pop
mov
ja
sti
loope
sbb
xchg
faddl
xor
cmp
pop
pop
push
ljmp
fxch
jo
xlat
push
cmp
notb
xchg
repnz
push
mov
and
gs
mov
and
scas
call
call
subl
insl
jmp
xchg
xchg
pop
in
adc
scas
aad
jl,pn
popf
cli
pop
cmpl
mov
pop
aaa
lcall
sbb
ret
out
fs
add
loopne
mov
test
adc
or
arpl
pop
sub
leave
xor
bound
sbb
push
pop
test
std
pop
mov
ret
gs
fsts
shll
leave
rcrb
jge
fdivs
mov
aam
sbb
sbb
sbb
stos
pop
sti
aas
or
fs
sti
xchg
repnz
std
sbb
mov
lds
incl
cltd
aad
sbb
fldcw
fnstsw
mov
jae
out
or
push
imul
mov
push
sub
mov
into
cmp
jo
push
ljmp
mov
dec
dec
mov
and
push
and
sub
jo
mov
sti
push
push
jae
bound
out
xor
dec
adc
repnz
cmp
inc
inc
dec
sub
test
ljmp
cltd
jl
rorb
jne
loopne
mov
add
sub
inc
mov
sbb
pop
int3
ret
sub
add
sbb
mov
outsb
inc
or
cmp
clc
dec
pop
mov
jmp
dec
test
sub
std
mov
dec
xchg
iret
pop
loop
mov
mov
mov
shlb
loopne
adc
add
pop
cmp
mov
jb
call
sub
adc
pop
imul
and
ja
loope
pop
repz
arpl
inc
repz
int3
lret
xor
pop
inc
aam
adc
xor
add
xchg
cs
mov
push
add
aaa
push
es
fimull
adc
pop
add
into
jb
stos
cmp
xor
fbld
hlt
es
sub
lahf
dec
mov
mov
pop
add
mov
icebp
push
js
movsb
push
sbb
jno
pushf
or
loop
xchg
or
out
pop
cmp
sub
leave
jg
cmpsl
into
fstpl
jno
lea
fcompl
rclb
sub
inc
push
jp
pop
lea
ljmp
jne
mov
xchg
xchg
mov
or
lcall
adc
or
stc
lods
xlat
movsb
push
mov
into
jge
xor
or
xchg
and
and
sbb
pop
jnp
mov
mov
xor
adc
pop
fimuls
arpl
mov
push
nop
fsubs
mov
push
xor
mov
push
inc
pop
add
notl
popa
lods
in
insl
ss
add
mov
dec
ret
sbb
mov
jo
jno
fistpl
lds
xchg
ficompl
xlat
dec
out
fbstp
dec
jl
outsb
les
inc
sub
in
repz
or
sbb
inc
stos
xorb
mov
stos
ret
cmpb
inc
cmp
adc
sbb
dec
sarl
adc
sub
int3
cmpsl
lods
call
adc
adc
jge
sub
pop
xchg
push
ja
incl
fcoml
inc
pusha
pop
mov
dec
jl
mov
jmp
lods
das
mov
out
sti
dec
icebp
out
into
lret
mov
mov
inc
je
jge
fdivrs
dec
popf
dec
jle
fldcw
leave
fldl
test
stos
addb
inc
pop
pop
cmpsb
xchg
iret
imul
xchg
arpl
stos
xchg
adc
mov
aad
and
sti
cmp
adc
sbb
xchg
std
mov
adc
mov
inc
cmp
and
mov
mov
mov
cli
aam
roll
or
mov
jp
iret
shrb
fsub
cltd
jnp
xchg
jns
push
sbb
shll
or
add
xchg
inc
movsb
enter
fst
fiadds
in
pusha
pop
push
insb
repnz
jecxz
xor
pop
nop
mov
daa
push
call
and
ret
push
pusha
push
mov
push
fildl
cmp
outsl
lcall
sbb
lcall
lock
in
jmp
inc
jge
repnz
ja
jmp
sub
mov
mov
icebp
cmpsb
imul
out
or
sub
mov
add
je
aam
dec
stos
mov
xchg
popa
pop
sti
or
in
mov
arpl
jae
sub
push
and
into
inc
fwait
jae
cmpsb
pop
mov
xchg
jecxz
lods
push
dec
sbb
dec
cmpsb
das
pop
jns
push
shlb
pushf
pop
es
fs
mov
rorb
xchg
or
add
mov
divb
hlt
out
imul
lcall
sub
shl
xlat
adcb
mov
fbld
mov
add
dec
or
fwait
pop
rcrl
ss
cmp
add
jnp
fstpt
xchg
cmpsl
test
movsb
repz
inc
inc
movsb
pop
or
jecxz
jp
dec
cmp
icebp
dec
mov
mov
in
pop
std
inc
pushf
ficomps
popf
shr
or
outsl
andl
and
push
call
jae
cltd
mov
sub
fsts
ror
test
adc
arpl
jle
mov
pop
push
jb
incl
ret
xor
and
ljmp
aam
mov
pushf
or
xor
enter
pop
mov
test
push
lods
test
xchg
shlb
in
add
push
test
sbb
xor
int3
xchg
xchg
insb
imull
andl
push
or
nop
jb
les
sub
in
fldl
sub
inc
mov
lods
jecxz
inc
fwait
mov
push
jge
sub
out
jae
cmc
sbb
fucom
adc
call
xor
mov
jnp
mov
pop
inc
out
add
mov
shrb
mov
push
orb
jbe
js
in
negl
cld
fisubl
ds
es
dec
hlt
enter
sub
adc
pop
pop
jae
aad
ds
push
jge
fwait
iret
or
into
paddb
push
xchg
pusha
loopne
add
inc
fsincos
sub
adc
iret
mov
ss
mov
sub
lcall
pop
lret
xor
test
shrb
and
mov
push
popa
insb
dec
aad
jg
hlt
jmp
pop
insb
sub
or
in
imul
jecxz
adc
mov
fwait
jns
ss
and
stos
loop
dec
pop
add
jo
mov
lods
jb
outsl
test
push
mov
cltd
int3
loopne
jo
nop
xor
pusha
mov
iret
fwait
arpl
mov
push
loope
cmp
fwait
mov
fdivrl
lods
inc
push
jns
scas
sbb
das
rclb
xorl
movl
popf
adc
xchg
add
icebp
mov
popa
mov
sbb
mov
add
gs
mov
nop
dec
lods
xchg
fwait
jge
jae
gs
nop
mov
pushf
cmp
sub
jbe
cs
mov
aad
push
test
fmull
mov
in
shr
push
subl
or
xor
das
push
mov
std
call
push
cmpsl
outsb
xlat
push
jecxz
in
daa
sub
lods
xor
add
shrb
or
add
jge
into
and
mov
pop
cld
inc
mov
jmp
xchg
xor
mov
sub
cmc
jl
xchg
pop
sarl
sbb
repz
push
into
pop
fstps
lcall
and
mov
jmp
ds
mov
dec
mov
nop
inc
out
xor
xchg
cmp
jne
add
addb
add
cmc
mov
int3
sti
call
mov
test
loope
push
mov
leave
sub
xor
insb
mov
negb
push
aas
jb
jl
cld
lcall
mov
rcrl
jb
mov
jge
push
mov
cmp
arpl
test
repz
call
push
mov
dec
adc
and
cld
push
nop
jmp
mov
rolb
cld
push
aad
xchg
inc
es
aad
or
add
xor
adc
pushf
dec
mov
fdivrp
push
jb
jne
cmp
inc
iret
sahf
push
xchg
add
and
bound
push
enter
jmp
sub
in
lret
mov
push
xchg
pop
iret
jnp
push
lds
xchg
xor
loop
hlt
xchg
les
in
nop
mov
adc
scas
fstl
or
fcos
ret
dec
fsubrl
push
in
nop
arpl
mov
xchg
int3
dec
pop
fsts
sti
inc
insl
mov
lods
add
test
mov
addl
sbb
sbb
push
mov
rcll
add
clc
es
aam
or
pop
shll
push
ja
in
mov
xor
mov
fldt
dec
xchg
jl
sub
inc
cmp
xor
add
push
mov
ljmp
jg
call
add
outsl
ret
jmp
fiaddl
and
lcall
daa
addr16
ljmp
popf
adc
ficomps
mov
push
bound
mov
xchg
rolb
stc
sub
xorl
nop
in
cmpsb
lea
and
add
cmp
and
js
popf
nop
add
push
ja
pop
cmpsb
inc
inc
loope
jns
cli
jbe
inc
adc
inc
sub
cmp
xchg
add
sub
inc
movsl
sub
and
rcr
dec
decl
aas
sub
push
mov
out
fidivl
inc
sbb
repnz
aas
loopne
out
jo
mov
out
shlb
dec
mov
mov
and
scas
pop
mov
xlat
dec
cli
popl
push
jo
and
push
jns
testb
and
ja
mov
int3
jmp
or
push
inc
aas
add
xor
mov
push
mov
dec
push
push
jmp
sbb
pop
imul
cmp
idivl
mov
cmp
sbb
jno
je
cwtl
sbbl
orb
imul
jg
xor
pop
movsl
xorb
add
mov
adc
pop
fwait
add
call
cmp
mov
mov
xchg
jae
imul
or
outsl
js
xchg
mov
mov
cmp
or
add
xchg
cmp
icebp
fbstp
imul
inc
lods
and
xor
sub
mov
out
hlt
shrb
mov
push
sbb
bnd
icebp
sbb
xor
lret
movsl
or
stos
sub
movsb
push
cmp
cli
movsb
pop
mulb
insb
lds
dec
dec
fstpt
push
ljmp
xor
dec
push
xchg
popf
add
gs
leave
daa
xchg
jns
or
data16
adc
mov
inc
inc
sbb
mov
js
bound
leave
sbb
sub
pusha
push
fldcw
cmp
movsl
cmp
and
push
mov
jl
inc
sub
or
cmp
loope
rol
push
fcmovbe
pop
pop
sbb
adc
lods
lcall
dec
mov
xor
jae
sbb
std
mov
inc
bswap
mov
rolb
dec
mov
repz
scas
xor
mov
in
pop
xor
inc
mov
pop
lods
and
jb
jno
cmp
push
ret
addr16
dec
sti
jmp
pushf
push
cmp
jbe
ss
cmp
lret
pop
pop
movsl
jl
cmp
or
xlat
ret
xor
fs
push
lods
fwait
xlat
das
dec
xchg
adc
int3
imul
repnz
nop
lret
inc
jp
cmp
adc
cmc
sbb
cltd
lcall
int
movsl
sbb
xor
lcall
fsincos
add
xchg
loopne
rcrl
and
mov
jle
outsb
push
insl
and
push
mov
mov
jecxz
mov
xchg
in
sub
lret
pop
jne
dec
push
mov
push
hlt
hlt
test
repz
das
pop
fcomps
inc
cs
inc
xor
mov
adc
repz
or
testb
sub
inc
aad
mov
jge
cmp
xchg
popa
popa
cwtl
pop
mov
adc
jnp
inc
inc
cmp
aaa
xchg
aas
mov
xchg
mov
or
arpl
sbbb
mov
xor
xlat
push
jae
movsb
aaa
inc
sbb
jbe
adc
lcall
or
lods
mov
ljmp
jge
cmp
mov
adcb
mov
mov
push
pusha
and
xor
icebp
ljmp
jge
aas
stos
add
inc
outsl
imul
mov
test
pop
hlt
pop
mov
mov
fstps
aas
add
dec
cmp
mov
scas
push
fcmovbe
pop
sahf
cmp
lods
push
inc
inc
jo
in
xchg
push
ds
movsl
testb
fisubs
xor
pop
inc
adc
cmp
mov
iret
sahf
mov
arpl
lahf
in
repz
sbb
adc
pop
pop
adc
xchg
mov
out
pop
fwait
pop
add
cs
daa
std
fsubrl
test
xchg
shr
sub
add
popa
gs
adc
push
push
repz
xchg
xchg
cmp
fadd
int
dec
dec
stos
adc
fisubs
mov
dec
xor
cld
pop
mov
xor
mov
lock
mov
mov
iret
adc
sbb
movb
xchg
sbb
sub
sarb
adc
adc
pop
adc
pop
jb
mov
imul
adc
mov
push
fwait
jge
push
adc
sbb
adc
mov
pop
adcb
jb
mov
inc
dec
mov
push
jle
jecxz
lods
inc
cmp
pop
sbb
stos
sbb
es
dec
pop
jne
xlat
pop
push
push
or
mov
cmpsl
test
scas
sub
xlat
mov
cltd
fld
out
roll
adc
aaa
cmpl
stos
mov
das
loopne
lods
je
mov
inc
fistps
stos
push
mov
adc
or
sti
mov
fwait
sti
push
mov
mov
out
js
mov
imul
xor
gs
inc
ffree
and
pop
pop
sahf
stos
sti
pop
cmc
sbb
pop
jae
shll
into
lret
fmuls
jb
aad
test
dec
addr16
xchg
outsl
xchg
ja
lods
shll
lret
dec
xchg
inc
lea
insb
fisubrl
addl
sbbb
jnp
inc
mulb
jno
cmp
mov
and
mov
inc
jne
rcrb
pop
gs
out
mov
xor
in
pop
jae
push
cmc
jp
xor
inc
xchg
hlt
jb
push
and
inc
xor
mov
cmpsl
out
cmp
inc
icebp
inc
hlt
lods
mov
scas
aas
ja
push
sub
idivl
ja
mov
xor
lock
mov
outsb
in
stc
fmull
cmpsl
xor
cltd
je
cli
mov
fdivl
popf
decb
movsb
xchg
enter
mov
rclb
and
gs
pop
int3
pop
gs
loop
mov
aad
jg
mov
inc
mov
jno
subl
pushf
lahf
or
pop
sub
scas
jns
fmuls
mulb
and
sub
cmpl
lods
mov
dec
pop
xor
call
pop
stos
cmc
mov
push
insb
xchg
push
cmpsl
add
adc
pop
fiadds
into
outsb
sub
iret
xchg
jmp
adcl
sti
fidivl
pop
mov
push
adc
lods
dec
mov
or
scas
lahf
mov
jp
in
out
inc
sbb
pusha
out
in
mov
jmp
std
xchg
ds
dec
lret
stos
sbb
cmc
jmp
clc
or
mov
cmpps
lret
mov
in
fsubrs
pop
scas
jg
mov
jge
gs
pop
xor
add
xchg
in
sbb
test
enter
packsswb
pop
cmp
cmp
adc
inc
jle
or
sbb
push
or
jbe
inc
lcall
daa
test
loope
leave
mov
rep
clts
pop
out
dec
jge
lods
mov
cld
int
inc
gs
ret
bound
decl
push
xchg
mov
dec
stc
jecxz
mov
outsb
shll
sbb
inc
adc
pop
cmp
shlb
xchg
imul
mov
jmp
xchg
int
ret
or
fcmovne
sub
outsl
es
sbb
out
pop
out
int
mov
fdiv
adc
cltd
adc
mov
cld
or
push
pushl
imul
jnp
push
push
sbb
add
dec
test
popa
inc
or
mov
cmp
jae
sbb
sub
cmc
jae
lea
push
repz
clc
repnz
mov
xor
stc
cld
pop
aam
jle
bound
add
jb
lahf
sub
jbe
mov
push
inc
pushf
and
out
lahf
cs
and
aaa
arpl
cmp
cld
jbe
lret
or
add
js
mov
shll
pop
js
mov
test
jge
jle
and
testl
or
sub
sbb
and
fstl
fnstsw
or
xchg
popf
xchg
sbb
xchg
add
loopne
in
mov
iret
and
divb
mov
xor
jl
sahf
adcb
loop
fidivl
cmp
popf
jle
xchg
mov
and
fimull
call
adcb
jle
ret
sub
sahf
xor
xchg
sub
mov
inc
int3
mov
dec
insl
es
aam
fstps
arpl
add
jns
sti
mov
insl
pop
pop
mull
les
or
rcl
hlt
leave
inc
ret
add
negb
in
das
call
inc
mov
jb
dec
mov
lcall
insl
dec
fiadds
movsb
jmp
jp
xchg
pop
mov
dec
mov
jae
add
jmp
hlt
add
jnp
ss
cltd
cmpsb
sahf
lods
mov
stos
out
jno
fidivl
pop
or
mov
push
mov
cwtl
lock
cmp
adc
test
inc
inc
dec
add
pop
jp
push
add
pop
inc
aam
dec
sub
int
pop
mov
xchg
jnp
jge
add
sbbb
jo
lcall
lods
es
and
shr
push
dec
mov
test
movsb
dec
cmpsb
cmpsb
popf
or
insl
inc
roll
jbe
test
les
mov
ror
iret
arpl
test
cs
stc
fnsave
and
jecxz
push
add
sub
cmp
movsl
sti
ja
pop
lods
repnz
pop
xchg
mov
jbe
sub
xlat
int3
sarb
jae
in
test
pop
nop
js
clc
js
jg
adc
pusha
xor
adc
xor
popa
xor
ss
sub
lret
movl
lcall
add
int
push
into
push
add
out
and
mull
mov
sahf
test
mov
loopne
addl
cmc
call
aaa
push
aad
add
push
mov
adc
sti
pop
clc
pop
adc
insl
mov
add
pop
add
je
or
adc
int
test
xor
sub
xor
mov
in
and
mov
fldt
loope
or
out
or
push
add
lahf
adc
jmp
cmpsb
jae
psubusb
dec
loopne
insb
xchg
sub
mov
push
rol
movsl
arpl
lret
add
insl
ljmp
aaa
pop
out
cs
push
mov
inc
fwait
mov
adc
and
add
in
push
shll
popf
mov
mov
rolb
push
cmp
push
push
dec
rol
xchg
lock
lret
into
adc
xor
stc
cmpsl
or
loop
mov
lcall
aas
aam
cmp
lret
and
and
jle
fisttpll
in
xor
push
repz
hlt
cmp
and
mov
insl
xchg
pop
mov
test
cmp
push
enter
cld
or
cmp
jle
jecxz
popf
inc
movsb
out
inc
mov
xlat
mov
std
dec
fsub
jge
lahf
add
scas
inc
loope,pt
test
mov
mov
xchg
roll
add
xchg
fmuls
das
scas
dec
repnz
mov
push
dec
mov
stos
mov
stc
shrb
clc
movsl
mov
mov
sarl
xchg
scas
mov
sbb
jmp
push
ret
mov
jo
js
lods
xchg
je
jecxz
sarb
stos
out
pop
cmpsl
in
aam
pop
lock
sbb
dec
outsl
pusha
or
sti
in
je
ja
mov
adc
test
lret
push
xor
fdivrl
enter
xchg
test
popa
jmp
insb
popf
push
fsubs
mov
inc
cmp
cmp
or
push
int
imul
mov
add
sbb
icebp
pop
loope
call
leave
xchg
enter
mov
sub
cld
adc
lret
add
loopne
push
cmp
xchg
ret
ss
inc
push
pop
add
adc
sbb
sbb
xlat
mull
out
inc
add
incb
imul
shrb
adc
popf
insb
mov
pusha
push
pop
shll
call
int3
pop
rclb
addr16
mov
popf
cmp
inc
jmp
push
push
pop
lcall
lahf
popa
mov
lea
nop
lahf
shrb
xor
dec
or
call
sbb
pusha
jge
call
sub
dec
sahf
dec
xlat
mov
sub
stc
out
mov
and
inc
shrl
mov
aas
call
or
dec
mov
mov
dec
fs
lcall
lea
push
inc
inc
aaa
call
push
mov
hlt
repz
jae
and
pop
mov
add
sub
mov
es
psubb
push
lea
cltd
mov
iret
pushf
loop
mov
movl
jno
pop
repz
xor
stos
xchg
adc
dec
hlt
and
push
pop
outsb
fidivrl
adc
or
roll
dec
bound
xor
sbb
cltd
pushf
add
xchg
movsb
stc
adcb
mov
lret
data16
sbb
shr
in
jnp
test
lods
out
fstpl
mov
call
xor
xchg
ret
aas
pop
ljmp
cs
dec
sbb
shll
jge
sub
sub
jbe
addl
jmp
mov
jl
test
and
cs
outsl
or
iret
mov
loop
int
pop
ljmp
add
mov
push
or
jo
add
xchg
fisubs
sub
pop
and
jns
mov
jbe
loop
lret
dec
jno
or
dec
insb
pop
jnp
xchg
into
dec
jp
insl
mov
aad
int3
arpl
jae
stc
push
insb
icebp
dec
hlt
add
dec
fdivs
call
cmp
jmp
mov
das
add
pop
xor
sahf
test
cmp
movups
push
cmp
push
mov
and
movsl
sub
mov
xor
dec
push
pop
cmp
mov
jecxz
dec
popa
ljmp
sti
dec
cmp
ljmp
sub
jo
inc
je
movsb
leave
je
cmp
xor
aam
pushf
out
inc
xor
pop
jns
fs
mov
push
inc
movsl
xchg
mov
aaa
inc
roll
dec
and
cmp
sbb
pop
dec
lods
or
test
dec
hlt
movb
and
cld
jne
arpl
mov
or
inc
inc
imul
dec
cmc
mov
rol
dec
cs
xor
scas
movsb
testl
dec
in
dec
movsb
sbb
nop/reserved
out
sbb
or
popf
fwait
pop
jge
adc
adc
mov
icebp
cmp
fsubr
rcrb
and
sbb
sub
stos
xlat
test
clc
and
out
mov
push
imul
aad
sub
jo
push
mov
lods
fnstcw
outsb
sub
add
adc
dec
test
aad
cmp
test
stos
ds
and
ja
sub
daa
inc
fmuls
int
push
fs
cmp
and
xor
xchg
sbb
jecxz
and
jb
jno
rorl
add
pop
xchg
mov
mov
mov
push
xor
xchg
inc
mov
rol
push
daa
hlt
dec
pop
cmp
stc
mov
push
shlb
or
adc
lds
inc
mov
push
pop
or
add
pop
out
ret
jne
sub
lret
pop
jne
in
mov
test
loope
xor
orl
pop
scas
cmpsb
shlb
out
push
cmpl
movsb
aas
aam
addr16
pop
aaa
push
add
aas
mulb
mov
push
pop
lods
mov
push
dec
jmp
das
adc
into
leave
jmp
mov
into
aaa
int3
and
sbb
jb
das
xchg
lea
cmp
cmp
pop
push
jg
ret
xchg
sbb
xchg
xchg
iret
dec
adc
lea
arpl
pop
adc
mov
cltd
cmp
xor
pop
fwait
shrl
repz
and
rcrl
mov
insb
mov
mov
rcll
or
ljmp
xor
call
aaa
mov
dec
mov
add
xchg
sub
mov
pop
dec
outsl
or
inc
pop
xchg
mov
pusha
test
xchg
pushw
into
or
or
cli
loope
cmpsb
push
lock
cmp
cmpsl
leave
dec
andb
xor
mov
pop
ret
sarb
add
in
es
outsl
imul
push
xchg
orb
ret
imul
jbe
out
mov
xchg
leave
aas
jo
adc
jmp
fs
mov
sub
mov
adc
fmuls
mov
je
xor
push
rcl
cmpsb
pop
add
les
push
out
jl
cmp
and
cmpsb
hlt
mov
lcall
scas
ds
cmp
lods
insl
cmc
push
in
dec
xchg
pop
xor
fiaddl
subl
cmp
pop
ja
push
dec
out
mov
mov
add
xor
mov
out
mov
out
mov
xchg
std
arpl
loopne
mov
ja
out
out
sarl
pop
push
ja
repnz
dec
jle
and
into
jbe
fsts
pop
push
inc
fcmovnu
ja
and
out
mov
es
inc
fwait
inc
daa
popf
dec
ret
mov
mov
jno
push
mov
adc
lock
sbb
popf
and
xor
cs
je
test
push
xor
daa
mov
cmpsb
cwtl
mov
mov
scas
sub
loope
fsts
dec
pop
xor
jae
push
mov
push
cld
imul
mov
mov
jae
xchg
add
and
push
lcall
jecxz
push
cwtl
insb
fnstcw
dec
inc
sub
pop
icebp
xorl
lods
stc
aad
dec
pop
lea
stos
pop
pusha
xchg
xor
jg
jg
jns
lret
pop
cltd
subb
cmp
sbbl
fsubrl
pop
rcrb
in
add
ret
xchg
das
cmc
incl
inc
aad
jne
mov
call
push
cmp
mov
jbe
push
mov
stos
push
xchg
push
fwait
cwtl
pop
and
adc
push
cltd
pop
push
mov
xchg
out
mov
clc
mov
or
mov
jns
xchg
or
add
out
aad
js
aaa
scas
or
lahf
add
dec
test
fwait
cmp
mov
push
clc
push
sarl
pop
ret
push
or
orl
cmpsb
imul
pop
mov
mov
cmc
and
enter
inc
loopne
add
push
sub
nop
xor
faddl
jne
mov
frstor
bound
xor
xchg
mov
ficompl
insb
or
and
push
cli
lahf
fistpll
dec
lods
ret
sbb
mov
aas
icebp
out
cltd
pop
inc
dec
mov
xor
dec
sub
lock
mov
ficoml
jle
mov
pop
outsl
cld
leave
push
test
rolb
add
test
inc
adc
cli
or
aaa
add
mov
je
inc
fldenv
shrl
nop
movsl
pop
inc
sbb
rorl
addr16
divps
stos
mov
jae
movsl
jmp
dec
mov
jmpw
fstps
repz
aas
jns
adc
movl
notl
ret
sbb
mov
icebp
sbb
push
lock
add
fwait
stos
mov
pop
add
pop
gs
jo
lcall
fwait
insl
lret
clc
inc
cs
jno
xchg
ja
dec
pop
or
movsl
pop
cmc
movsl
push
ds
lods
push
sub
push
rcrb
repz
push
push
xchg
scas
push
ljmp
rcl
jecxz
or
decb
xchg
add
loopne
addr16
sub
xlat
jle
dec
xchg
dec
enter
cwtl
inc
fidivrl
inc
stos
mov
ljmp
dec
in
insl
sahf
outsb
pop
stos
add
dec
dec
movsb
in
decb
mov
aam
push
das
and
inc
test
xchg
mov
push
inc
adcl
add
mov
mov
out
out
insl
fists
or
daa
call
aaa
mov
mov
je
inc
fildll
push
pop
lea
imul
rcll
jg
mov
and
inc
enter
adc
mov
jne
jmp
pusha
mov
sbb
inc
pop
pop
std
mov
jle
mov
xchg
or
adc
in
popf
jmp
and
add
xor
sbb
jbe
shll
jns
ret
pop
inc
mov
movsb
add
call
mov
mov
mov
sti
das
push
lret
dec
push
lods
out
mov
addr16
das
lcall
push
inc
adc
pop
mov
mov
add
cs
popf
cmp
aam
dec
dec
movups
push
mov
mov
stos
pop
mov
cmpb
pop
mov
mov
pop
mov
sahf
mov
rep
xor
jno
sbb
mov
mov
es
mov
push
imul
popf
ja
ja
xor
aad
xchg
popf
push
lahf
inc
mov
mov
out
mov
push
mov
xchg
sub
mov
mov
inc
xchg
stos
dec
mov
int3
mov
imul
jl
aam
mov
mov
pushf
daa
dec
mov
out
data16
negl
in
push
and
jno
xchg
scas
iret
fwait
test
dec
mov
pushf
mov
and
insb
mov
adc
mov
je
xchg
shll
and
divb
insl
rolb
ds
popa
sub
or
xor
lods
ss
test
sub
jmp
pop
insb
inc
pop
repnz
mov
aaa
jnp
int3
pusha
push
gs
dec
jg
xor
cmp
xchg
aaa
stc
int
mov
pop
nop
outsl
ljmp
mov
or
mov
xchg
rcl
mov
lea
ficomps
xor
mov
mov
addb
dec
sub
mov
and
inc
lahf
out
mov
pop
movl
lret
inc
sub
pushf
add
in
xor
mov
cmp
loopne
cmp
inc
mov
xchg
lret
xor
rorb
push
lret
or
das
xchg
cmp
dec
mov
push
mov
pop
testl
add
sub
stc
jg
sub
jb
outsb
sub
jne
adc
pop
jle
sub
pop
add
and
mov
ljmp
clc
mov
ja
pop
push
ficompl
sub
jnp
test
js
push
inc
in
jle
movsb
enter
aam
xchg
icebp
stc
dec
xor
pop
or
add
inc
jl
add
pop
fiaddl
and
jle
lret
inc
push
push
xlat
sub
jecxz
stc
pop
and
pushf
aas
mov
lahf
in
dec
mov
test
insb
and
mov
loopne
fadds
pop
sub
sub
hlt
push
sub
mov
lods
jl
sti
push
or
in
push
mov
cmp
addr16
fwait
mov
jle
ret
push
mov
je
adc
mov
loope
jnp
mov
in
test
scas
pop
gs
int
mov
shll
imul
xchg
lea
xchg
push
aaa
stos
out
stc
add
cmp
fildl
add
lock
pop
or
clc
imul
loop
or
fcompl
sarl
cmp
mov
mov
pop
fldl
inc
mov
jecxz
ja
add
jg
sbb
mov
shrb
jmp
mov
cli
push
iret
push
add
shll
aad
nop
inc
pop
sbb
jg
jmp
loop
xchg
mov
xor
or
shrl
sub
xor
fs
xchg
lret
add
mov
inc
fwait
mov
adc
mov
add
sub
cmc
xchg
or
out
mov
pop
sarl
adc
sbb
adc
aad
cltd
jae
push
test
sbb
movb
and
adcb
addr16
sbb
lock
add
dec
subb
inc
dec
cld
fs
mov
cmp
es
popa
add
hlt
insl
sbb
cmp
mov
hlt
push
sbb
push
pusha
shrb
hlt
enter
mov
xor
adc
outsl
fcomps
sbb
push
jno
gs
xchg
xor
mov
inc
cld
add
sub
adc
adc
pop
in
or
sub
cmc
sti
test
adc
jns
xchg
repnz
mov
jecxz
out
mov
mov
sub
dec
jg
push
sti
ja
pusha
or
xor
inc
cmc
mov
andb
out
and
in
test
pusha
xlat
xchg
push
mov
in
ret
dec
push
int
push
xchg
sub
mulb
dec
mov
out
rcr
push
mov
pop
addr16
cld
xchg
cmpsb
fiadds
cmpsl
add
fiadds
out
loopne
ljmp
pop
stos
insl
dec
stos
cmpsl
cmp
int3
call
push
add
xor
inc
sub
xchg
test
xchg
daa
gs
push
pop
adc
jmp
push
mov
mov
iret
repz
test
sti
sub
adc
jmp
jg
mov
add
mov
jnp
adc
mov
rorl
in
movsb
mov
xlat
std
inc
call
mov
cmp
mov
mov
popf
mov
es
das
inc
xorl
fwait
xchg
push
orl
xor
loop
adc
and
mov
or
mov
pusha
stc
lods
enter
loopne
insb
push
add
push
int
das
das
popf
pop
add
dec
add
sub
xchg
fldenv
sub
mov
mov
fldl
pop
shrl
add
hlt
outsb
mov
ss
dec
jmp
mov
cwtl
inc
daa
loop
cmp
inc
lahf
mov
and
mov
stos
int
xchg
inc
lods
and
xor
outsl
add
int
inc
lcall
movsb
stc
cmp
test
jbe
data16
cmp
push
mov
mov
nop
int
ret
outsl
adc
jp
sbb
or
pop
mov
sbb
jns
jecxz
int3
shrl
mov
daa
repz
call
sti
jmp
sbb
rorl
incl
int
sub
lods
lahf
arpl
in
shl
jmp
lahf
daa
xchg
bound
outsl
cltd
sarl
loopne
ja
sar
add
adc
leave
push
data16
adc
into
mov
xchg
iret
jnp
sbb
aas
test
add
sbb
lock
std
pop
add
mov
aad
shlb
xor
jl
divb
mov
dec
imul
sub
cmp
push
lcall
iret
testb
jno
cmp
inc
sbb
mov
mov
idivl
xchg
es
dec
jmp
push
mov
rorl
mov
fsubr
push
xlat
push
mov
out
pusha
leave
fxam
andl
inc
cmp
les
das
inc
lahf
lods
or
jge
push
jo
xor
jb
inc
pop
jmp
jbe
ret
mov
lods
pusha
mov
clc
sub
aas
in
push
outsb
jne
ret
sub
inc
lock
insb
mov
cmpsl
sub
mov
ja
cmpsb
or
lds
dec
in
pop
xchg
fsubl
or
xor
inc
jno
pop
cmp
dec
andl
jg
bound
push
ret
std
data16
inc
cmpsl
xor
arpl
imulb
xchg
data16
pop
push
inc
lret
pop
xchg
xchg
out
mov
adc
push
sub
jp
cli
pop
ljmp
mov
lahf
es
adc
pop
inc
mov
xchg
pusha
jl
dec
scas
jae
sbb
xor
push
lea
out
and
ljmp
adc
adc
decb
xchg
add
mov
lret
cmp
ja
jg
inc
or
dec
test
insl
mov
inc
xor
or
lahf
jecxz
pop
xchg
jl
mov
pop
inc
scas
fucomip
loop
test
mov
sub
push
loopne
lock
jnp
test
ds
daa
jle
adc
cmp
mov
aas
in
adcl
or
jp
add
aas
and
sub
mov
loop
lods
push
aaa
sbb
cld
je
push
das
and
push
cli
sub
mov
and
dec
jo
pop
lret
pop
dec
inc
js
loope
ss
ss
mov
imul
add
push
jns
dec
mov
repnz
push
rdtsc
xor
pop
loope
in
ffreep
dec
sarb
sahf
scas
xchg
mull
stos
add
pop
int3
mov
bound
lret
ljmp
mov
add
push
mov
push
sub
mov
sbb
ds
cmpsl
cmp
pop
cmp
adc
ss
push
arpl
outsb
jmp
test
push
cwtl
loope
ret
mov
fsubrl
stos
in
fstp
xchg
icebp
insl
out
sbb
jo
int
ret
add
rclb
mov
or
rcrb
mov
out
call
jbe
jns
loop
add
pop
xor
faddl
inc
lea
scas
stos
or
jmp
daa
pushf
mov
lea
and
or
into
ja
lds
movsb
addr16
mov
mov
sarl
pop
mov
push
mov
sbb
jnp
pop
jle
movb
sub
xor
or
push
std
push
js
fs
lcall
rorb
cwtl
pop
rcl
and
inc
adc
jnp
repz
call
sub
pop
fadds
dec
jmp
cld
inc
fdivrl
sub
andb
cmp
shrl
xchg
nop
lret
leave
imul
enter
pop
or
jg
adc
and
pop
add
lock
xchg
xlat
ljmp
cli
push
leave
add
fnsave
mov
jg
dec
lret
cld
andb
lcall
adc
add
aam
and
popa
pop
out
inc
or
mov
es
adc
sub
mov
fstp
ljmp
mov
xchg
ljmp
pop
fcmovbe
add
mov
pushf
jne
stos
int
pushaw
inc
jmp
lret
lea
test
imulb
ret
outsl
xchg
bound
or
mov
daa
or
inc
mov
push
adc
xchg
ja
les
xchg
mov
and
fwait
and
inc
cmp
lods
out
ss
int3
les
push
fcomps
repz
mov
xlat
and
jno
and
int3
adc
lret
out
push
jl
subb
ja
mov
inc
fwait
pusha
into
aaa
mov
js
pop
pop
repz
jns
inc
js
inc
add
stos
dec
xchg
jge
bound
rcrl
jbe
lcall
aas
stos
inc
mov
sbb
popa
pop
inc
pushf
das
adc
jmp
ror
in
or
ficomps
xchg
or
mov
inc
movsl
hlt
push
sbb
loopne
cmp
sbb
adc
fwait
pushf
xlat
cmpsl
ss
test
movsl
push
adc
out
mov
jmp
or
lcall
dec
and
mov
imul
xchg
sbb
lahf
out
add
jne
sub
sti
bound
sub
mov
jmp
xchg
out
xchg
xchg
in
pop
mov
dec
cmp
jle
adc
insl
jle
jnp
jnp
adc
das
dec
mov
jmp
inc
orl
imul
test
pop
repz
imul
rclb
adc
mov
pushf
jbe
and
jne
mov
xchg
wrmsr
inc
dec
cmp
bnd
stos
pop
and
push
mov
sbb
xchg
pop
sti
cmp
scas
out
adc
mov
cmpsb
or
dec
dec
ficompl
les
xor
pop
addr16
push
addb
aam
cmp
xchg
mov
jns
in
mov
lods
or
push
insl
mov
mov
pop
xchg
leave
xorl
jmp
loope
cmp
aam
xchg
xchg
xchg
ret
fstp
icebp
mov
adc
inc
or
push
and
jnp
xor
movsl
cmp
and
xor
inc
sti
cmp
stos
scas
lods
or
movsl
or
mov
sbb
cmp
jb
js
les
adc
mov
mov
add
lret
loop
cltd
sbb
loop
pop
mov
sti
rorl
mov
jl
mov
mov
inc
or
pusha
pop
push
xchg
ljmp
sbb
js
mov
in
adc
push
cmp
sahf
push
lods
scas
cmpb
iret
cmp
pop
out
pop
jg
push
std
fistpl
jecxz
xlat
adc
push
xchg
push
stos
mov
and
aaa
add
sti
xor
jnp
roll
shlb
das
test
cmp
bound
push
mov
push
aaa
shll
xor
shll
aad
rolb
dec
push
dec
and
sub
jecxz
xor
fcmovnbe
sahf
xchg
push
cli
xchg
scas
mov
mov
mov
in
jle
push
scas
cmovbe
aas
mov
dec
sbb
or
inc
lret
cmp
cmpsb
dec
out
add
movsl
sbb
dec
add
int3
dec
inc
stc
les
jne
fnsave
dec
push
push
pop
ja
mov
xor
and
xchg
std
adc
ror
xchg
pop
emms
add
push
and
int
data16
mov
sahf
sub
out
insb
ret
inc
adcl
mov
dec
sub
test
and
je
or
add
aam
mov
jns
dec
dec
out
xchg
cmpsb
std
sbb
jge
pop
fcomip
aam
cmp
stos
ljmp
roll
decl
mov
pushf
stc
inc
movsb
mov
test
add
mov
mov
out
imull
arpl
icebp
iret
test
out
mov
xor
sahf
sbb
test
out
jl
clc
jmp
mov
movsb
fwait
jp
call
outsl
aas
jnp
mov
es
sub
mov
mov
stos
mov
xchg
push
mov
rorb
push
and
cmc
clc
int
cmp
sbb
pop
sarl
and
sbb
cmp
in
lock
enter
fwait
jnp
int
sbb
sub
in
sub
sub
lock
je
out
pop
adc
fisubs
es
push
fisttpll
xlat
out
mov
sub
ss
es
dec
daa
shr
test
lods
jno
orb
cmp
push
enter
mov
sahf
daa
mov
pop
les
sbb
repz
cmc
jge
out
aad
mov
ret
and
fcoml
jp
push
test
aam
bound
xor
cmc
scas
test
sti
scas
movl
filds
insl
loope
xchg
sub
sbb
jne
inc
push
loopne
testl
bound
test
push
xchg
jge
pusha
inc
inc
push
sub
dec
fcompl
bound
lret
xchg
and
cmpsl
or
lock
cmp
dec
pusha
outsb
xchg
push
fwait
lahf
cmpsl
xor
stc
iret
imul
xchg
mulb
ljmp
pushf
scas
push
lds
xlat
jbe
adc
sahf
mov
lcall
inc
popa
bound
xor
mov
rcll
xor
sbb
fwait
dec
sarb
scas
xchg
push
mull
outsb
stos
imul
insl
cmp
dec
clc
call
cmp
ljmp
xor
adc
fldenv
lds
lcall
call
out
fistps
lods
das
arpl
adc
lods
stc
jle
jnp
sbb
mov
hlt
repnz
mov
jge
push
out
loopne
jae
in
dec
inc
leave
ss
mov
jmp
or
cwtl
negb
clc
repnz
add
es
sbb
jns
mull
xor
or
adc
xchg
cltd
mov
add
ss
cmp
mov
jmp
pushf
jns
lret
es
out
dec
sub
and
and
aaa
sbb
sbb
dec
ret
call
imul
push
mov
bound
mov
test
push
push
jmp
test
sbb
sub
bound
call
in
sub
push
xor
mov
sub
in
dec
sarb
rol
data16
int3
inc
loop
adc
sbb
mov
jne
das
add
leave
imul
loop
sbb
sahf
push
mov
das
pop
xchg
xor
or
sbb
mov
movsb
xchg
fidivrl
sbb
ljmp
sub
ret
jne
inc
loope
push
xor
mov
xchg
call
xchg
insb
lcall
int3
sub
les
adc
jbe
fidivs
sub
sub
mov
ds
and
jl
mov
xlat
push
jae
fildll
inc
in
mov
dec
mov
push
push
sub
aad
cmc
daa
cmp
dec
push
stos
sub
stos
mov
sbb
in
test
dec
ss
enter
mov
imul
adc
inc
pop
aas
fwait
imul
lret
dec
mov
jbe
sub
or
sbb
fsubr
gs
sbb
jmp
sahf
mov
je
adc
test
pop
adc
mov
stos
fstp
nop
std
mov
aam
sub
push
loope
sbbb
push
dec
cmp
inc
ja
rorb
shll
mov
xor
or
scas
aaa
sbb
mov
mov
repnz
sbb
inc
xchg
dec
jmp
jbe
in
in
push
xchg
xchg
or
call
cmovne
dec
pushf
imul
inc
mov
xor
cmp
sbb
pop
push
sbb
lret
push
loopne
jmp
pop
cmp
add
inc
lcall
mov
mov
xor
push
pushf
hlt
dec
add
pop
int
movsl
cwtl
dec
lret
and
mov
out
and
lea
icebp
xor
out
lret
popa
sbb
stos
fsubs
adc
mov
test
pop
in
adc
mov
ret
movsl
je
jmp
xor
dec
and
in
or
in
push
popa
sbb
xchg
sub
mov
sub
pusha
inc
and
and
push
adcl
pop
add
push
imul
in
repnz
lods
push
or
mov
ret
jae
mov
jnp
adc
pop
ljmp
addl
movsl
popf
sbb
mov
add
inc
xchg
xchg
lret
mov
test
pop
leave
shll
stc
xor
arpl
in
subl
pop
xor
gs
mov
dec
push
pop
dec
mov
sub
outsb
mov
jno
andb
sbb
cmp
in
rolb
xchg
inc
pop
cmp
into
vmread
lock
xor
loop
fs
stc
and
scas
sahf
out
add
xchg
nop
ds
mov
pusha
stos
fists
stos
dec
imul
lret
lea
cmpsl
imul
mov
sub
lea
repz
subb
xor
xor
dec
rorl
sub
jno
mov
fstps
das
pop
pusha
xchg
lret
ffree
loope
mov
or
sbb
push
or
arpl
out
repz
or
jmp
aad
cmp
imul
add
addl
push
fisubs
das
inc
inc
in
mulb
hlt
xchg
xor
xor
ljmp
or
ja
std
or
xchg
mov
and
push
push
sub
data16
out
testl
or
pop
subb
pop
fbld
inc
gs
sbb
bnd
out
push
and
je
inc
sbb
mov
shrb
push
or
cmp
pop
lret
nop
or
shll
xorb
and
pop
pushf
adc
sbb
stc
push
xor
fcmovb
push
cmp
push
mov
movb
repz
push
sub
mov
test
lahf
scas
inc
divb
mov
scas
fidivs
jp
rclb
dec
addr16
fisubl
add
sub
adc
decb
push
cmp
in
mov
popaw
lea
out
mov
dec
fstps
jae
inc
mov
imul
push
ja
shrl
in
sub
jne
mov
xor
push
add
cmp
xchg
fcompl
inc
shll
gs
stos
in
repz
xor
push
aaa
xchg
pushf
xor
popf
notl
cmp
inc
cmpsb
je
mov
and
push
sar
or
cltd
movsb
xor
mov
add
adc
push
jo
inc
insl
xor
test
jnp
popf
je
es
aas
cld
cld
pusha
stc
xchg
mov
popf
xlat
jmp
pop
daa
sbb
aam
pusha
pusha
pop
incb
mov
jp
push
iret
sti
mov
sbb
push
in
mov
call
leave
ljmp
xchg
jp
pop
js
mov
dec
sbb
leave
rcll
dec
sbb
dec
xor
fnstcw
dec
cmp
xchg
jae
lcall
cld
shll
aas
jns
je
lea
mov
adc
cwtl
and
push
sbb
mov
imul
outsl
mov
and
xchg
rorb
imull
push
repnz
sub
xor
add
pop
inc
ja
dec
push
inc
xor
add
fucom
mov
out
dec
pop
dec
adc
cmp
xchg
jp
mov
mov
mov
lods
fimuls
stc
clc
adc
addr16
adc
push
sub
mov
fmul
pop
popf
out
lcall
pop
shrb
cs
jle
aas
sbb
ja
jmp
pop
imul
push
ret
int3
jl
xchg
fcomps
ficompl
sbb
mov
dec
pop
test
ret
and
push
sysenter
mov
shrl
rcrl
in
testb
or
push
mov
popf
mov
and
out
fwait
xor
scas
insb
out
stos
nop
mov
loopne
pop
mov
xor
cwtl
xor
add
pop
cmp
out
rcll
push
push
jno
sbb
jnp
sahf
add
fbstp
jne
add
setnp
jecxz
or
push
icebp
bnd
push
mov
mov
fs
sub
sbb
mov
mov
lret
or
loopne
push
jmp
xchg
lcall
clc
xchg
roll
xchg
dec
setbe
or
mov
mov
in
orb
stc
stos
imul
mov
mov
sbb
ja
icebp
imul
jmp
aad
fld1
jp
mov
test
movsl
gs
mov
mov
add
rclb
fbstp
incb
nop
daa
ret
xchg
jne
add
or
aaa
out
sti
mov
mov
inc
add
lods
mov
das
cmp
adc
push
jbe
cwtl
push
mov
dec
sbbb
pop
inc
dec
dec
xchg
mov
add
inc
in
mov
pop
jno
cmpl
ret
imul
or
xchg
dec
cltd
jp
jmp
insb
sub
clc
fcom
test
in
xchg
push
sub
out
in
mov
jmp
push
dec
sbb
sbb
movsl
and
add
outsl
fsubr
jmp
xor
ret
test
movsb
sbb
sbb
and
out
push
scas
xor
testl
pop
sbb
aaa
jns
pop
daa
mov
mov
subl
and
addr16
xchg
mov
mov
enter
add
in
das
adc
push
adc
leave
inc
jo
arpl
mov
mov
int3
jmp
sbb
dec
mov
dec
fwait
ljmp
loop
add
mov
fisttpll
dec
pop
ds
xorl
adc
xor
lret
int
jno
andb
and
pop
psrld
int3
rorb
nop
out
bnd
push
pop
out
mov
push
xorb
cmp
xor
cmp
mov
xor
and
mov
loopne
mov
mov
lea
lret
inc
imul
push
mov
jp
or
call
dec
cvtdq2ps
out
push
ret
rcr
xlat
in
sbb
cmc
mov
jl
shll
cmp
in
push
push
inc
in
into
jns
adc
mov
dec
jg
daa
insb
add
stc
mov
rcl
sbb
xchg
iret
jnp
jecxz
data16
rclb
aas
dec
aam
pushf
fsubrl
xchg
dec
fwait
in
and
cld
xchg
pop
mov
lods
mov
cltd
rclb
stos
pop
push
push
lock
cltd
cwtl
and
popf
inc
pcmpeqb
inc
cmc
into
push
sub
add
addr16
ss
jge
sub
xor
movl
lods
aaa
mov
adc
cmpl
scas
aas
scas
gs
lret
xchg
xchg
mov
outsb
decl
ficoml
xor
jmp
movl
inc
das
sub
dec
sbb
mov
xor
lea
pusha
and
jg
fnstsw
xchg
stos
ljmp
cmp
mov
mov
cmpsb
enter
or
fcompl
sbb
mov
cmpb
xchg
inc
cmp
aas
cli
xorb
ss
outsl
jno
popf
or
jae
stos
aad
pop
or
mov
add
nop
push
fdivrl
test
call
and
mov
rcrl
stos
ss
cmp
adc
pop
aam
push
cli
ja
inc
mov
orb
lock
or
mov
pushf
fldcw
push
lods
ret
mov
addr16
cmp
shlb
pop
mov
fs
aad
xlat
cld
fdivrs
push
sbb
pop
in
or
sahf
cmp
iret
fwait
movsl
aas
cmp
sub
inc
arpl
movsb
mov
sarl
addb
aam
xor
arpl
insl
mov
mov
fcoms
sub
mov
mov
insl
lods
xchg
cmp
cmp
es
adc
imul
jae
das
ss
cmp
mov
sarb
test
xor
dec
or
sbb
adc
aad
mov
mov
cwtl
icebp
or
pop
test
push
pop
adc
pop
scas
mov
mov
and
inc
and
xchg
xor
jbe
adc
loop
and
insb
lret
mov
cld
push
push
shl
sbb
add
aas
mov
xor
test
pop
subb
addl
testl
push
das
rcrb
in
mov
int
adcb
cmpsl
push
or
xchg
imul
pop
mov
xchg
out
fcmovu
and
in
mov
insb
or
loopne
dec
nop
sbb
fsubrp
fidivrs
lret
mov
inc
mov
enter
notl
adc
rol
arpl
xor
movsl
loopne
lea
lea
out
out
adc
cmpsb
hlt
pop
aad
cmpsb
sbbl
cmpsb
and
inc
lahf
or
pop
int3
in
inc
div
xorl
iret
repz
adc
mov
inc
stc
in
fdiv
or
iret
icebp
push
or
out
jne
mov
mov
aad
lds
aaa
out
imul
fmull
or
dec
xor
ret
jne
inc
dec
lcall
adc
fnstsw
pop
dec
cmpsl
dec
cmp
lret
aas
mov
adc
cmp
mov
mov
lahf
jno
es
pop
jo
xor
pop
mov
aas
nop
orl
xchg
repnz
stc
test
fisubl
loop
inc
frstor
mov
adc
dec
sub
xchg
sahf
xchg
in
pop
xor
mov
dec
dec
inc
xchg
mov
idivb
icebp
out
push
lods
adc
cs
test
cmc
inc
in
jecxz
mov
jle
cld
jg
inc
xchg
out
inc
mov
push
pop
cld
inc
adc
mov
pop
dec
std
inc
xchg
jmp
fstpl
inc
inc
dec
sbb
xorl
lea
pop
xchg
pop
out
mov
add
mov
js
icebp
mov
xor
pop
fistpl
std
fwait
jge
fiaddl
mov
outsb
cmp
ss
ret
dec
je
js
inc
cmpsl
push
mov
aad
push
test
push
lea
xchg
shll
mov
sbb
and
aaa
push
clc
popf
sub
cli
fcmove
enter
sbb
scas
xchg
mov
cwtl
lret
stc
rorl
das
or
inc
mov
lods
push
arpl
mov
xor
arpl
xchg
push
dec
mov
adc
inc
sbb
lret
xchg
ret
xchg
pop
pop
icebp
mov
pop
xchg
lods
fadds
adc
shrb
cmc
push
dec
mov
mov
lods
inc
adc
push
popf
mov
test
icebp
xchg
ljmp
fstpt
ljmp
cmp
mov
jle
xor
icebp
cwtl
push
aad
sub
xor
movsl
cmpsl
xchg
push
adc
stc
pop
movsl
je
dec
in
mov
mov
loope
fiaddl
pop
push
xchg
cwtl
pop
sub
outsl
xchg
cmp
fildll
es
xlat
or
aas
sbb
imul
sbb
clc
mov
xchg
ds
push
push
and
outsl
ss
mov
jmp
ret
adcl
testl
xor
out
ds
pop
dec
mov
orb
sbb
cmc
cmp
ret
inc
loop
icebp
loopne
add
sbb
pop
push
ror
jp
inc
pop
pop
mul
push
sbb
ss
or
pusha
fs
sub
jno
sti
imul
dec
and
mov
and
inc
pop
gs
push
sbb
stc
je
sbbb
inc
in
movsb
lret
push
xchg
pop
add
sbb
dec
inc
aad
sub
pop
lods
sti
daa
sti
jmp
in
shl
and
xchg
out
and
push
push
add
in
aam
iret
sbb
xor
xchg
ret
sbb
cltd
xchg
sarl
sbb
push
and
repz
lea
mov
sub
inc
sahf
or
jns
cli
cmp
rolb
in
or
out
pop
mov
repnz
inc
inc
lret
cmp
pop
xchg
scas
je
push
sbb
popf
out
add
or
clc
movsb
sbb
sub
adc
xor
sub
sbb
xchg
or
mov
xchg
sbb
push
lahf
lods
push
lds
pop
inc
ja
or
jbe
sbb
into
sbb
dec
fldl2t
dec
shlb
pop
mov
xorb
mov
subl
pusha
scas
dec
fsubs
shlb
inc
sub
adc
rcll
into
stos
dec
jl
jle
in
scas
add
movsb
pcmpgtd
jle
enter
xchg
jmp
fimuls
mov
cmp
aad
add
inc
lcall
xchg
aas
inc
jg
in
cwtl
sub
bnd
outsb
nop
sub
sub
notb
and
test
jns
cmp
push
insl
int3
adc
mov
xor
mov
aaa
adc
lahf
xorl
or
roll
fs
rclb
test
mov
and
pop
mov
sub
sub
sbb
mov
shll
lea
pushf
movsl
push
inc
loop
fs
jbe
loope
psrad
ret
mov
test
inc
mov
or
mov
dec
pushl
loope
lret
sarb
xchg
xchg
pop
cld
leave
aam
mov
cltd
push
lods
bound
or
bound
iret
insb
into
cld
cmp
fistpll
mov
inc
movsb
mov
iret
or
out
xor
xchg
pop
sbb
inc
inc
or
fadds
mov
push
stc
je
pop
fcmovnu
and
mov
mov
jmp
pop
or
cmp
pushf
sbb
jp
stos
jb
jb
mov
mov
dec
push
add
aam
mov
inc
popf
mov
cmp
inc
xchg
mov
test
stos
aaa
xlat
cmp
cmp
repnz
push
lcall
dec
and
stos
sarb
add
xor
pop
push
dec
mov
inc
rol
leave
or
add
pusha
imul
inc
xchg
movsb
stc
fidivrs
pop
lods
push
gs
add
imul
mov
sub
in
sbb
iret
inc
jnp
mov
sbb
minps
mov
aaa
inc
sub
insb
cmp
xor
hlt
jmp
adc
dec
cwtl
stc
cwtl
jb
and
mov
popa
int
test
cmp
xchg
out
ret
pop
add
lods
rcr
or
adc
inc
movlps
jl
aaa
call
pop
repz
rol
xchg
daa
cli
sarl
dec
jp
insb
dec
fdivl
daa
or
repnz
mov
leave
xor
lock
sub
jb,pt
fldl
add
out
xchg
pushf
mov
fsubr
pop
das
jae
pop
imul
cmp
xchg
les
int
push
test
jo
dec
int
addl
push
ljmp
jle
pop
loope
ret
jmp
rorb
xchg
aaa
sbbb
fstps
into
add
sti
mov
lds
sub
call
lods
dec
movsl
in
mov
in
sub
mov
sbb
je
cmpsb
leave
pop
nop
jecxz
ds
in
imul
test
jmp
push
fmuls
sub
mov
or
xchg
movsb
mov
fwait
movsb
push
and
lds
sbb
sbb
insb
push
cld
mov
jns
cmpsb
sti
es
aam
hlt
sub
scas
aad
sub
mov
sbb
jg
push
test
xchg
xchg
sub
pop
xchg
in
into
inc
fistps
mov
inc
imul
fwait
adc
cmp
mov
inc
stos
insl
out
pop
and
insb
daa
xlat
fwait
scas
and
mov
jl
and
and
aad
adc
adc
lea
cmpsl
cli
js
rcr
cmp
testl
push
add
pop
addr16
xchg
rol
rorl
lcall
ja
mov
rcl
addr16
push
std
rcll
xor
fcoms
xor
stos
or
dec
cmpsl
push
push
mov
ss
enter
dec
lds
adcl
inc
push
repnz
int3
orl
cmpsb
mov
scas
push
fldenv
lahf
mov
jge
pop
mov
hlt
pop
jbe
lret
aam
mov
sarb
or
inc
jne
push
dec
lea
mov
push
xor
mov
xor
daa
xchg
lds
mov
aam
xor
fildl
sub
mov
xorb
or
xor
inc
dec
sarl
mov
lret
pop
cwtl
stos
cmp
pop
jae
leave
add
aad
xlat
mov
stos
lea
js
or
sbb
outsl
xchg
je
xor
dec
sub
fisttpl
mov
push
mov
xlat
pop
jl
mov
test
sbb
sbb
ret
arpl
stos
cmp
inc
sahf
adcb
lods
sahf
cmpsb
jge
ror
or
push
inc
movsb
ljmp
icebp
pop
pop
ljmp
test
pop
in
mov
jmp
jne
les
adc
mov
addl
test
mov
icebp
push
add
gs
out
or
fstps
pusha
rcll
into
inc
cmp
jno
pop
or
add
stos
jge
nop
inc
lods
or
add
push
xor
out
dec
jne
adc
cmpb
jnp
cwtl
push
dec
rolb
aaa
xchg
sub
hlt
inc
shll
add
mov
insb
cwtl
lock
adc
inc
ss
adc
popa
pop
cmp
pusha
adc
mov
sub
dec
xchg
adcb
std
pop
push
adc
arpl
and
iret
shlb
test
xchg
pop
jp
adc
js
mov
gs
adc
lods
loopne
lcall
gs
dec
cmpsb
xchg
in
ret
cmp
inc
je
dec
sub
lods
and
sbb
add
jp
sti
rolb
adc
jne
aaa
cmp
xchg
insb
xchg
es
jo
test
xchg
sbb
add
push
vpsrlw
push
mov
mov
inc
pop
and
sbb
aas
sbb
out
jle
fisttps
xchg
fisubl
pop
mov
inc
pop
shrb
stos
incl
outsb
adc
fisttps
mov
mov
xlat
cmc
insl
ret
movsb
mov
or
xlat
xor
jg
gs
pop
xor
hlt
ljmp
ret
mov
in
lock
inc
aas
rorl
rorb
push
mov
outsl
punpckhdq
sbb
loopne
mov
mov
xor
push
push
shlb
push
into
xor
add
cmc
pop
ret
cli
fwait
stos
or
andb
std
push
jnp
xchg
fwait
push
push
push
xor
out
popf
xor
jne
lds
aaa
push
and
jg
adc
pop
pop
scas
mov
into
enter
add
add
cmp
xor
add
test
es
xor
ret
push
movsl
repnz
sti
xchg
mov
pop
shlb
vprotq
mov
sub
not
fwait
or
mov
cltd
out
sbb
data16
cwtl
std
sarb
fisubl
sub
imull
test
jg
outsl
inc
add
test
movsl
xor
in
gs
lcall
push
out
dec
sbb
xor
push
xchg
rcll
lret
jae
sbb
loope
lahf
xchg
lret
das
lock
mov
std
popf
jge
dec
pushf
lock
stos
pop
aad
sub
lahf
test
test
aas
xor
andl
sti
or
add
or
adc
std
fcoms
xor
xchg
loop
push
xor
push
cwtl
pop
or
mov
pop
xor
lcall
in
fidivl
mov
leave
dec
imul
mov
ficompl
arpl
xor
cmpsb
mov
in
jnp
or
mov
lock
mov
jo
addb
mov
aad
add
jg
out
adc
jmp
jne
ret
cwtl
ljmp
pop
xchg
mov
inc
push
push
adc
gs
cmc
gs
cld
gs
call
cmpsb
addr16
int
fs
jl
sub
cli
sub
mov
inc
aaa
jl
imul
mov
outsl
mov
xchg
dec
frstor
cmpsl
aad
shrl
jle
les
jbe
sbb
fldenv
sti
push
arpl
int
test
int3
inc
xchg
jl
movsl
pop
movsl
fwait
or
popa
cld
add
xchg
jl
ret
jp
stos
bound
std
mov
xlat
movsl
arpl
or
pop
add
ss
in
pop
mov
jbe
or
shlb
jnp
fnstenv
sti
cmpsl
lcall
mov
inc
dec
cld
scas
cmp
push
dec
ret
mov
adc
add
inc
mov
clc
cld
xlat
cmpsb
mov
adc
sub
cmp
andl
or
pop
sahf
mov
mov
imul
inc
addr16
adc
decl
fmuls
push
bound
lret
jg
fsubrs
in
pop
push
mull
lahf
into
add
xor
inc
in
into
fisubrl
pop
mov
das
xlat
pusha
aas
sahf
stos
insl
and
jle
jo
push
scas
lret
loopne
int
lock
cmp
sbb
xlat
adc
out
and
in
or
pushf
add
or
mov
cmp
in
fstpt
inc
insl
sub
js
icebp
in
adc
fwait
das
sti
sti
fsub
mov
pop
jecxz
xor
faddl
fsub
mov
jb
mov
mov
adc
cmp
dec
inc
repz
pop
sti
push
xlat
in
jns
sbb
sahf
bound
xchg
xchg
clc
xchg
cld
int3
daa
sahf
lret
in
incl
push
notl
inc
mov
mov
push
pop
push
rorb
bound
sti
je
cli
and
std
subl
and
jnp
xor
jmp
dec
mov
shr
push
test
mov
cmp
jmp
aad
adc
js
jns
mov
pop
jnp
sub
or
int
ljmp
adc
lods
mov
pop
mov
mov
dec
ljmp
or
or
push
or
int
fcomps
jge
loope
lods
sbb
push
push
fs
add
sahf
xor
jne
pop
nop
fwait
arpl
repz
mov
mov
shl
push
xor
pop
lcall
insl
lock
jns
scas
arpl
xchg
sub
mov
adc
xor
js
cmp
mull
cmpsl
mov
test
or
pop
or
xchg
dec
rorb
movsb
add
or
add
mov
cmp
inc
inc
test
enter
xchg
mov
mov
adc
icebp
fs
xorb
push
jnp
ret
xchg
out
mov
cwtl
add
and
daa
sub
jo
adc
clc
fsubp
xchg
loop
xchg
in
int3
or
aam
test
popa
or
fwait
scas
cmp
pop
cli
loope
push
imul
call
add
aaa
js
jl
in
lods
push
shl
les
cmp
dec
mov
mov
xor
jnp
mov
movsl
loope
les
jb
call
adc
push
pand
inc
int
jecxz
push
and
xchg
xchg
cltd
test
fildl
add
sbb
mov
fistl
fistl
stos
out
in
sub
ss
sbb
push
pop
inc
cs
or
das
mov
mov
or
push
lock
loopne
add
insb
jns
add
add
ficompl
push
jo
lret
mov
push
cmp
mov
stos
or
ret
sbb
int3
push
add
push
loope
xor
and
shl
ja
add
xchg
or
bound
jo
inc
jg
add
push
or
leave
dec
or
jnp
sub
mov
popf
jno
rcl
push
lahf
pop
adc
pop
out
xor
and
and
mov
insb
push
je
cmp
jbe
clc
out
leave
leave
inc
imul
ret
outsb
pop
mov
mov
mov
push
das
jno
scas
xor
dec
xchg
ret
xchg
jne
mov
xor
shrl
add
gs
mov
adc
test
ds
icebp
push
xchg
add
repnz
inc
bound
xchg
mov
cmp
clc
adc
sbb
mov
dec
inc
pop
ret
bound
cs
arpl
fcmovnb
mov
lods
jp
imul
dec
inc
into
mov
pusha
ss
test
inc
pusha
arpl
popa
call
pop
and
push
adc
jmp
mov
pop
je
pop
or
stos
mov
repz
insl
out
or
jae
ja
cmp
and
stos
inc
mov
outsb
test
adc
movsb
sub
subb
addb
les
mov
or
shl
cltd
add
daa
rcl
hlt
loope
div
mov
int3
pop
dec
dec
sbb
rcll
adcl
insb
push
rcr
mov
das
dec
or
rorl
mov
or
mov
scas
push
fsubr
and
repz
jmp
test
in
inc
sbb
lcall
mov
jns
enter
out
xor
jae
mov
xor
cmp
fidivrs
shlb
xchg
inc
int3
fwait
mov
mov
jne
and
adc
insb
push
sti
das
out
ds
pusha
adcl
hlt
ljmp
iret
xchg
mov
jae
xchg
insl
cld
mov
sub
adc
xchg
sub
push
sub
lods
mov
shr
push
aad
lcall
cmp
cmp
int3
shrl
inc
cs
dec
hlt
popf
in
test
ficoms
fwait
xlat
mov
cld
jb
test
add
fisttpl
shlb
int
inc
pop
jle
inc
push
pushf
jg
cmc
mov
mov
lock
add
and
push
dec
gs
lea
fimull
cmpsl
enter
pop
inc
mov
aas
scas
and
cwtl
push
fucom
movsb
fnstsw
adc
add
pusha
jge
push
or
dec
inc
pop
push
dec
mov
out
mov
int3
push
rcrl
jle
push
mov
mov
adc
es
pop
mov
jge
add
or
aam
mov
imul
fiaddl
xchg
dec
dec
inc
lods
out
mov
mov
aam
sub
inc
xor
push
push
and
mov
bound
cmp
inc
mov
jbe
xchg
ljmp
push
js
in
shll
jg
jb
cmpsl
cmc
imull
jg
shlb
dec
dec
insl
mov
adc
mov
mov
mov
cld
mov
xchg
mov
daa
in
loopne
mov
je
vunpckhps
cmp
insb
imul
xchg
rcrb
mov
xchg
mov
popa
test
sub
es
hlt
in
add
test
push
xor
lock
fadd
mov
lods
daa
sub
shr
ljmp
mov
je
mov
and
adc
jns
cmp
pop
fstpt
push
loop
jecxz
loopne
push
insl
push
xchg
ljmp
dec
js
dec
cmp
dec
adc
push
cmpsb
pop
mov
xor
pop
imul
ss
sbb
and
imul
add
cwtl
jle
enter
sub
repz
and
xchg
lret
ficoms
or
sub
dec
cmp
pop
pop
mov
pop
pop
sbb
cmp
leave
cld
data16
inc
test
adc
sub
aaa
fisubl
fsubrs
add
push
push
inc
inc
cmpsb
add
js
adc
ror
es
xor
cs
orl
repnz
dec
add
adc
in
sbbl
add
fidivl
inc
jp
push
sub
jmp
repnz
xchg
jns
incl
addr16
add
roll
jle
dec
loope
mov
xor
ja
jns
in
sarl
mov
inc
mov
hlt
inc
jg
sub
mov
fsubs
out
aaa
jo
dec
adc
aad
push
jo
ret
ljmp
jl
ds
add
mov
push
mov
add
shlb
dec
leave
cmpl
in
shl
mov
into
cmp
arpl
clc
test
xchg
aas
mov
lock
inc
ret
mov
mov
xchg
mov
pop
inc
iret
cmp
test
or
xchg
fbld
sbb
stos
data16
jnp
scas
cmpsb
ret
xchg
mov
inc
xor
mov
dec
and
cmp
or
das
mov
adc
and
andb
js
arpl
add
pop
fcomps
xchg
ja
jmp
sub
mov
lret
pop
xchg
rcrl
bound
push
jmp
inc
out
lcall
add
dec
pop
das
inc
fldt
dec
in
mov
orb
push
insl
movb
or
ret
jecxz
ret
mov
pop
call
jl,pt
fcomps
imul
ja
scas
scas
shl
popa
cmp
push
arpl
dec
sub
in
fs
push
and
jp
push
push
add
cmp
scas
aaa
adc
dec
fbld
sbb
leave
pop
aam
shl
stc
test
out
lret
add
mov
dec
adc
std
pop
xchg
sbb
adc
cmp
in
push
shll
nop
xchg
pop
scas
pop
xor
gs
enter
fildl
jecxz
sbb
jbe
push
je
pop
sbb
pop
fdivl
inc
js
mov
arpl
cmp
mov
lds
or
dec
scas
out
data16
adc
push
mov
out
jg
fwait
mov
sahf
pusha
mov
fsts
cmp
or
inc
add
push
idivl
adc
mov
je
cltd
cmp
and
mov
insl
ss
or
iret
xor
push
subb
mov
shll
mov
pusha
add
lahf
cmpsl
sbbl
and
pop
arpl
cmp
xchg
jge
ret
test
inc
in
ffree
adc
das
add
cmp
xchg
in
and
push
mov
jg
stc
mov
mov
ja
xchg
mov
imul
pop
mov
xchg
int3
fstpt
dec
jb
mov
mov
dec
and
sbb
xchg
jmp
lds
jnp
aaa
jnp
sahf
jp
dec
push
movsl
cmp
sub
xchg
and
xchg
test
and
scas
mov
jp
bound
or
adc
xchg
mov
pop
adc
sbb
adc
sbb
sbb
inc
fs
mov
fsubr
sub
xchg
js
pop
lods
fisubl
mov
mov
aad
cmc
jg
or
scas
sti
or
je
scas
mull
das
mov
jo
jecxz
xchg
sbb
sarl
fidivrl
mov
mov
xchg
stos
repnz
mov
call
scas
add
or
shlb
push
dec
mov
inc
andl
push
punpcklwd
pop
sbb
jne
das
jne
inc
insb
mov
in
aad
sub
fwait
sbb
nop
mov
sbb
loopne
in
sub
rcrb
mov
jmp
push
jp
lcall
mov
jl
mov
sti
pop
mov
std
lods
ret
dec
shll
in
mov
mov
cmp
aas
jns
lcall
cmc
pop
dec
pop
and
loop
pop
sub
xor
mov
out
mov
or
test
sarb
push
ja
in
dec
iret
inc
adc
popa
pop
outsl
push
pusha
xor
xor
or
je
sub
stos
adc
fcomps
int
or
mov
and
cld
rorb
and
cli
sbbl
test
fldenv
movsb
push
pop
and
cmpsb
lods
call
adc
inc
inc
mov
push
mov
mov
and
iret
add
mov
in
lods
shr
inc
cwtl
add
pop
inc
xorl
sbb
lds
nop
test
mov
fidivrs
mov
stos
popa
test
mov
or
rolb
call
lds
jmp
jmp
pop
js
dec
jne
jne
cmp
dec
mov
cmp
xchg
xchg
ljmp
inc
enter
lods
sbb
pop
test
xchg
shll
push
mov
rolb
mov
ret
dec
dec
in
cwtl
inc
lds
cmp
lods
pop
xor
scas
push
xchg
lds
enter
popf
jb
xchg
mov
addl
xor
xchg
cltd
push
jo
or
lea
call
jecxz
jmp
mov
pop
scas
inc
shll
jl
lea
lcall
jp
out
je
in
or
ja
adc
shrb
aas
shrb
dec
xchg
or
cmpsb
repnz
add
mov
jno
shll
jle
xchg
rol
sub
jae
or
stc
stos
hlt
in
dec
lret
jg
shlb
push
je
jne
fcmovu
sti
ljmp
in
dec
or
ljmp
lea
and
sbb
dec
and
sub
ds
sub
push
xchg
jle
arpl
jl
push
cmp
int
push
mov
mov
mov
add
jg
dec
push
loop
and
cmp
cld
sub
cmpsb
xor
inc
sbb
pop
sbb
pop
cmpsb
jb
lods
inc
fs
jo
div
jg
pusha
mov
pop
call
into
lret
cs
pop
jne
aas
and
loope
nop
jnp
ret
sarb
and
mov
mov
movl
jecxz
mov
shrl
xlat
loop
jl
sbb
in
lcall
rcrb
xchg
daa
in
jb
cmp
fimull
jo
dec
fildll
movsl
sbb
cmp
xchg
outsl
and
or
jo
icebp
ds
mov
or
push
idivb
sbb
and
mov
add
mov
pop
xor
fcomi
ja
sbb
xchg
xchg
jne
jae
and
dec
scas
and
int3
cmc
jl
imul
sbb
cli
out
enter
cltd
push
inc
stc
xor
mov
ffree
push
inc
test
jg
shll
cwtl
mov
mov
pop
inc
test
or
pop
jns
mov
dec
mov
cmpb
mov
mov
or
outsb
hlt
daa
inc
cltd
subb
pop
cmp
xchg
ljmp
inc
jns
ljmp
jp
arpl
add
imul
jb
ss
or
push
pop
xchg
pop
push
inc
mov
or
lret
mov
ss
sarl
push
aas
mov
loope
dec
push
leave
adc
lcall
dec
jle
jnp
adc
jb
pop
jl
push
jmp
sahf
cmp
jae
xor
mov
and
dec
push
int
rorb
pop
cmpsl
jg
fsubrl
xor
and
jecxz
or
mov
ljmp
fwait
test
cmc
daa
dec
inc
daa
mov
mov
lcall
mov
test
loop
add
outsb
sub
cmpsl
adc
pop
push
xchg
add
lret
xchg
mov
fsubrl
imul
lret
subb
xor
xor
sub
adc
pop
loop
mov
rolb
mov
test
cmp
fsub
xor
pop
or
fisubl
lock
popa
push
jae
leave
fs
dec
mov
mov
mov
xor
sbb
cmp
dec
rorb
sbb
loope
pop
inc
jns,pt
loopne
sbb
mov
int3
mov
push
mov
jg
lret
in
xor
fdivl
iret
subb
jl
ss
loope
mov
movsb
popf
sub
pop
mov
inc
ja
call
das
jecxz
xchg
inc
push
test
shlb
jbe
mov
int
push
adc
pop
fstpt
xchg
sbb
addr16
and
scas
mov
dec
mov
data16
jne
jo
mov
test
ljmp
incb
pop
ds
or
shrb
mov
es
sti
or
xor
lods
clc
das
sub
inc
push
jae
roll
stos
cmpsl
cmp
ret
xor
xchg
cmpsb
cmp
ds
or
lahf
xorb
xchg
mov
cmp
push
loopne
or
jg
jmp
push
inc
lcall
adc
cwtl
movsl
js
ss
mov
pop
cwtl
outsb
repnz
cmp
das
lods
xchg
jp
imul
aaa
enter
cmp
add
out
push
cmp
mov
or
iret
jge
xchg
cwtl
rcr
lock
stos
loope
scas
xlat
loop
gs
inc
xchg
loop
stc
lcallw
clc
inc
sbb
or
popa
push
js
out
cli
shlb
sub
mov
sub
rcrl
pop
mov
or
mov
ret
push
mov
stos
shll
pop
mov
adc
loope
aad
mov
dec
and
sbb
push
mov
lods
pop
mov
sbb
adc
jge
popl
jbe
inc
rorl
add
out
loopne
in
je
ljmp
jp
lods
inc
es
call
pushl
push
pop
and
out
bound
sbb
mov
sub
cmp
sub
fidivs
js
pop
insl
push
pop
jg
lds
xchg
pop
mov
mov
int
mov
mov
loopne
cmp
cltd
cmpsb
jmp
call
mov
xlat
xchg
mov
pop
mov
jbe
imul
or
aas
dec
or
lds
fistl
pop
xlat
pushf
cmpsl
sbb
in
or
stos
dec
fsubrl
jp
xchg
loopne
repz
mov
scas
xlat
into
mulb
xor
mov
in
icebp
in
mov
loop
ds
xor
sub
mov
add
xor
scas
stos
and
nop
push
add
aam
sub
ret
int3
cmp
pusha
subb
out
or
and
add
imul
loope
jg
adc
push
xchg
mov
xchg
jecxz
rorb
push
push
jb
clc
xor
push
fisubs
adc
sub
jmp
push
sbb
loop
push
pop
ret
mov
cmpsl
jbe
mov
jo
in
push
adc
call
inc
dec
dec
cmp
add
mov
negb
xorb
push
call
xor
aas
pop
mov
pop
and
ja
push
mov
fisubrl
push
int
sub
push
std
add
cmp
and
iret
aad
pop
pushf
mov
and
jns
jmp
cs
cld
sbb
push
push
push
fpatan
mov
int3
mov
into
jo
sti
adc
xor
stc
mov
ret
inc
inc
push
xor
add
movsl
inc
fidivrs
movsb
cmpsb
cmpb
imul
jl
sub
sbb
pop
stc
mov
gs
nop
inc
outsb
inc
push
push
lahf
jl
loopne
xor
les
test
cmpl
cmpsl
and
jmp
int3
add
cmp
pop
data16
fs
mov
sahf
add
mov
gs
fldcw
arpl
sahf
adc
mov
sub
mov
mov
or
aaa
je
cltd
insl
add
clc
std
jo
pusha
xchg
imul
mov
jle
push
and
add
mov
jg
decb
xor
pop
dec
xchg
inc
jge
mov
dec
aas
shlb
jbe
mov
adc
ret
icebp
sbb
out
add
ret
int
jae
cmp
sub
ja
pop
rolb
dec
fdivrs
in
mov
out
push
xchg
mov
cwtl
inc
push
imul
je
or
jg
sub
adc
mov
lods
cmpsl
add
fildll
dec
ss
sbbl
xchg
sub
xor
mov
clc
enter
out
adc
xchg
add
dec
sub
adc
cmpsb
insb
rcrb
icebp
popa
inc
dec
icebp
mov
lods
and
inc
add
sub
adc
das
mov
push
cmpsl
stos
cmpb
jno
repz
stos
aas
enter
shr
pushf
loop
mov
mov
xchg
cli
sbb
ljmp
cmp
sbb
in
bound
xorl
and
js
jns
imul
inc
lcall
xchg
outsb
stos
movsl
and
inc
inc
cmpl
sahf
xor
jns
repz
jl
sar
mov
inc
sbb
mov
xchg
lods
repnz
out
mov
sbb
xchg
int
cwtl
stc
mov
and
shlb
dec
jne
stc
out
loop
repnz
push
lods
sub
mov
out
scas
pushf
jecxz
mov
in
lahf
iret
test
cwtl
and
dec
lcall
mov
jg
or
movsl
les
fiaddl
sbb
jo
pop
mov
test
lret
bound
xchg
aad
int
or
mov
sbb
cmp
pop
out
mov
enter
fcmove
rclb
icebp
sti
and
jb
sbb
pop
sbb
add
adc
jae
pop
outsl
push
lods
cmpsl
mov
and
outsl
xchg
mov
xchg
bnd
dec
leave
popf
aaa
repz
leave
and
stc
cltd
push
adc
mov
adc
mov
inc
pusha
xchg
mov
push
sbb
jns
cli
test
adc
pop
mov
pop
popa
jecxz
andb
setg
dec
dec
fsub
loop
inc
test
out
pop
xor
fs
jns
xchg
and
bound
sub
cmp
cmpsb
xchg
jb
iret
add
or
aad
aad
imul
push
fwait
cli
adc
sbb
loopne
inc
bound
xchg
sub
ret
loopne
cltd
inc
into
xchg
or
jg
btc
rcl
jl
push
cmc
pop
dec
outsl
inc
push
push
xchg
mov
sub
mov
out
adc
add
movsl
push
add
loop
sub
cmp
and
lret
fmul
xor
lret
sbb
and
stos
bound
movsl
ret
push
insl
movsl
push
mov
ficoms
sti
pusha
push
add
add
jne
or
inc
ret
jno
cmp
xchg
push
lret
mov
fldt
xchg
jnp
clc
cs
ret
lret
movsl
lret
xor
call
test
scas
repnz
dec
dec
and
repz
int3
aad
ljmp
sub
leave
xchg
xchg
mov
add
dec
jg
or
test
dec
mov
and
mov
cld
cmp
daa
push
dec
dec
mov
ss
jb
jo
out
rcrb
nop
shrl
xorl
inc
jp
xor
lret
adc
mov
outsb
mov
add
xchg
sbb
xchg
bound
sub
lcall
int3
cli
lock
lcall
aam
or
int
fldcw
jne
pop
test
gs
or
xchg
hlt
icebp
or
push
icebp
adcl
dec
aad
pop
pop
push
notb
int
mov
shlb
dec
inc
xor
bound
mov
or
push
lds
iret
sbb
xchg
jle
mov
lods
dec
sti
dec
jno
mov
jb
pop
push
movsl
inc
mov
push
jns
jbe
mov
pop
mov
pushf
pop
lret
es
jle
inc
ss
aad
push
mov
lods
pushf
cwtl
dec
test
inc
call
add
mov
movsl
ret
ret
daa
and
xchg
in
push
push
repnz
mov
mov
push
sti
fwait
std
mov
test
repz
lret
and
or
movsb
cmp
fdivs
cmp
inc
insl
cmp
adc
call
jns
push
aam
push
hlt
push
fists
ds
sbb
int3
mov
ret
adc
aaa
and
les
dec
enter
dec
out
xchg
lock
sbb
pushf
push
adc
scas
xchg
test
cli
ret
jbe
mov
nop
pop
push
sub
jl
lea
add
push
ljmp
dec
enter
fwait
push
xor
add
sarl
pusha
xor
inc
addr16
ret
arpl
xor
jle
mov
scas
push
out
in
jns
pop
lods
ljmp
sub
push
inc
in
pop
addb
hlt
ret
sub
pop
mov
lods
scas
pop
pop
ret
mov
hlt
stos
mov
cmpsl
mov
adc
inc
adc
data16
repnz
add
aad
ds
cmpsl
cmc
cmp
fdivrl
inc
jecxz
cmp
bnd
xor
xchg
rorl
stos
hlt
int
leave
icebp
cmp
loope
in
dec
leave
pop
aaa
xchg
adc
add
pop
inc
prefetch
or
mov
fs
decb
cmp
push
or
mov
add
into
lcall
mov
pop
mov
aas
mov
test
jl
sub
push
iret
pop
scas
ljmp
jg
mov
mov
and
out
in
jno
xchg
or
cs
fs
fisubs
in
fs
sub
xlat
loope
pop
les
aam
or
insb
in
sub
xor
cld
mov
test
xor
pop
bt
jae
cwtl
jns
jp
jp
aam
mov
in
inc
hlt
mov
jb
or
and
into
lcall
lahf
adc
sbb
sub
xor
pop
sarl
push
scas
aad
jg
sbb
mov
push
jo
dec
sbb
lahf
mov
test
cmp
jg
shrb
test
jecxz
insl
xchg
in
mov
ds
idivl
mov
icebp
or
dec
cmp
popf
hlt
pusha
loop
arpl
add
popf
insb
setne
or
rorb
cmc
sub
testb
in
fdivrs
test
nop
sub
sub
fcmove
adc
xor
sub
fisubs
sti
rorl
dec
rcll
jno
mov
dec
xchg
mov
or
aad
sbb
bound
test
pusha
dec
or
hlt
sbb
push
mov
out
mov
js
mov
popf
pop
icebp
push
jle
repz
ja
or
jge
lock
out
in
sub
mov
inc
ss
insb
lods
call
xorb
jnp
or
insb
xchg
jecxz
jo
inc
test
xchg
and
in
inc
inc
repnz
jl
xchg
aad
xchg
addr16
arpl
mov
js
icebp
xor
ljmp
imul
jg
loope
test
aam
cwtl
mov
fisttpll
mov
into
mov
js
lret
mov
rolb
push
pop
jl
push
lea
jmp
jmp
pop
dec
lods
xchg
loopne
inc
push
cmpsl
mov
mov
add
filds
sub
xchg
pushf
xchg
pop
ds
and
stos
insb
dec
loopne
dec
loope
pop
inc
mov
ss
xchg
es
xchg
cmp
popa
daa
lds
pop
mov
in
aaa
pop
adc
shlb
mov
aam
rclb
jecxz
imul
lods
sub
and
dec
jne
pop
dec
sub
dec
pop
cmpsl
lock
or
inc
or
add
dec
push
jns
lcall
ds
rorb
add
pop
inc
xchg
sub
cli
lea
imul
test
inc
test
stos
xlat
dec
int
rcrb
popf
and
pop
pop
push
fcomi
nop
lock
jmp
shr
add
pop
adc
daa
jmp
mov
pop
fdiv
scas
jae
aad
mov
add
mov
add
sub
dec
cmpsl
add
in
es
and
lcall
push
dec
jo
sti
sub
testl
incl
xchg
sbb
sbb
sub
icebp
pop
mov
outsb
push
push
pushf
inc
popf
add
mov
xchg
int
jb
push
bnd
push
or
pop
ja
mov
cwtl
cmpb
and
aad
sbb
adc
mov
jmp
andb
in
dec
or
pop
cli
hlt
out
popa
sbb
rorl
lcall
movsb
jne
je
popa
loopne
or
nop
mov
or
js
movsb
js
or
sbb
xchg
dec
shlb
inc
push
adc
lea
jo
out
sbb
mov
adc
outsl
sti
xchg
jno
push
and
adc
or
in
cmp
dec
ja
mov
lods
sub
ret
repnz
andb
in
add
add
int
cmc
imul
add
jl
lret
and
mov
and
sbb
mov
dec
repnz
pop
or
mov
xchg
cmp
cmp
test
push
divl
mov
andb
push
mov
iret
and
popf
bnd
pop
push
in
and
hlt
ret
or
xorl
mov
pop
xor
arpl
dec
in
cmovge
loopne
inc
into
inc
bound
mov
xor
or
jg
pop
push
es
cltd
sub
xor
cmp
ret
pop
xchg
xchg
popf
adc
push
clc
stos
das
add
decb
mov
lods
call
lock
mov
cmp
and
rolb
inc
pusha
add
xchg
mov
cmc
sub
lock
mov
rcll
sub
aas
rol
push
pop
loop
fwait
xchg
xchg
push
rdpmc
xchg
out
dec
add
mov
insb
hlt
repz
cltd
pushf
dec
xor
adc
lds
mov
ja
jmp
sub
daa
cmpl
fisubs
sbb
sbb
sarb
shlb
inc
mov
nop
mov
pop
dec
rorb
adc
nop
dec
inc
mov
jmp
arpl
sbb
jno
sub
popa
xchg
rcll
in
jp
mov
adc
enter
sbb
or
cmp
mov
inc
sti
fwait
adcl
xchg
or
aas
cmpsb
and
jne
pop
sub
fsubs
aaa
xor
jno
dec
or
hlt
jmp
xchg
mov
cmpsb
pop
mov
xchg
push
mov
repnz
test
jns
cwtl
sbb
jb
cmpsl
mov
fsubp
xor
or
add
push
clc
adc
adc
push
test
fs
stos
cli
sub
jno
mov
push
in
pusha
or
dec
stc
xor
outsb
fcompl
mov
mov
mov
cmp
fdivr
add
lea
sbb
inc
cwtl
mov
out
pop
scas
jl
les
test
pop
mov
sub
push
in
ficomps
insb
mov
rorb
cmc
mov
ja
dec
jp
insb
push
add
data16
and
stos
sub
mov
xchg
mov
and
jnp
pusha
ret
xor
mov
push
mov
inc
xor
push
mov
inc
cmpsb
lea
mov
lahf
xchg
push
mov
pushf
popa
loopne
cmp
iret
xor
mov
es
mov
sub
mov
frstor
sti
mov
movq
lock
adc
roll
test
ss
dec
out
fidivrs
psrlw
arpl
stc
and
mov
xchg
shr
add
dec
mov
inc
into
sbb
insb
xchg
aas
lods
sbb
lcall
inc
cmp
dec
sub
lahf
xchg
out
inc
popa
and
xchg
test
cmp
sbb
pop
xchg
insl
ja
loop
fucomi
jo
mov
pop
int
in
dec
shll
mov
daa
cmp
movsb
and
stos
aas
repnz
inc
sub
jbe
fdivs
loop
loope
rolb
mov
add
add
inc
test
xor
add
les
fucomi
pop
jmp
push
and
inc
or
push
out
in
aaa
mov
add
lahf
pop
push
push
adc
adc
lcall
jecxz
sbb
mov
xor
bound
in
insb
das
add
jnp
push
cmp
lret
cmp
imul
arpl
pop
jnp
adc
unpckhps
mov
rclb
cmp
aad
lods
es
sub
inc
sub
loope
mov
mov
lock
out
lock
out
mull
jge
roll
daa
adc
idiv
pop
lods
cmp
or
jl
rorb
dec
add
sahf
xor
stc
cltd
push
mov
adcl
sub
cmp
arpl
bound
mov
sub
sub
rcrb
dec
sub
dec
in
imul
xchg
sti
push
xchg
fsubs
les
mov
xlat
movsb
test
leave
pop
cmp
sti
xchg
imulb
int
ja
test
divl
and
jns
scas
mov
fwait
pop
mulb
adc
je
mov
mov
mov
pop
push
mov
sub
xchg
jae
fistps
daa
push
inc
cld
ror
loop
pop
dec
sahf
add
sbb
mov
mov
cs
sbb
aad
call
mov
nop
lret
imull
insb
xor
loopne
cmp
in
sbb
test
clc
rsm
push
mov
sub
mov
add
and
jge
ja
mov
cmp
adc
insl
cltd
addr16
orb
fcoms
jno
sbb
in
aas
shl
cmp
pop
mov
jle
sub
lea
xor
loop
and
stos
push
adc
inc
repnz
xchg
test
push
or
and
add
pushf
out
jnp
or
mov
mov
shll
mov
sbb
pop
imul
mov
loopne
add
mov
sub
orl
mov
cmp
pop
movsb
pop
mov
jns
mov
xorl
dec
inc
mov
dec
outsl
lret
addr16
or
movsl
loopne
mov
cwtl
pop
sarl
ss
jmp
cmpsb
inc
lcall
iret
xor
sti
jp
daa
cmp
and
lock
call
rcll
ljmp
mov
cmp
subl
inc
fbld
push
scas
inc
test
fbld
sbb
lea
insb
xor
xchg
mov
loop
clc
inc
out
mov
es
jo
scas
pslld
jnp
xchg
and
or
jnp
aas
stos
in
loopne
mov
pop
mov
sub
out
movl
insb
mov
sahf
xchg
int3
push
jg
mov
mov
jne
insl
sbb
pop
sub
pushf
jb
shlb
dec
idivl
hlt
lds
pushf
mov
imul
push
pop
stos
sub
xchg
xchg
icebp
jp
inc
data16
fimuls
dec
sbb
jmp
dec
xchg
add
fs
fsub
add
sub
xchg
popf
inc
arpl
or
add
xchg
push
fldt
cmp
loope
push
pop
repz
dec
adc
cmp
xchg
inc
adc
std
cld
push
fldcw
cmpsl
scas
sbb
jnp
aaa
xchg
es
insl
out
add
sub
imul
sahf
scas
enter
jle
jg
and
add
in
jmp
dec
xchg
lock
cs
xchg
mov
dec
push
xor
xor
push
imul
hlt
mov
xchg
fcmovbe
repz
shlb
push
stos
sub
inc
das
pop
inc
mov
mov
push
sti
and
movsb
push
mov
adc
push
adc
repz
jb
xor
sub
fs
lds
mov
out
add
test
loopne
test
std
fidivrs
ja
mov
shr
out
add
mov
jp
test
iret
dec
clc
sbb
push
dec
mov
fldl
mov
cmp
jb
lock
add
mov
xchg
cld
ret
mov
negb
mov
cmpsb
aaa
outsb
mov
ds
sub
ljmp
cmpsl
repz
imull
push
inc
ja
test
mov
popa
push
cmpsl
mov
imul
sub
je
mov
mov
stos
lret
adc
popa
dec
loopne
xlat
les
sub
stc
roll
sbb
dec
sahf
inc
sub
scas
imul
cmc
xchg
js
adc
mov
mov
and
mov
mov
mov
clc
aas
mov
cmpl
test
or
icebp
adc
outsl
fsubr
sub
sbb
clc
or
pand
scas
sbb
mov
push
mov
iret
adc
shll
fbstp
daa
or
mov
xchg
or
icebp
dec
testl
mov
enter
mov
push
add
inc
test
add
out
adcl
mov
mov
ds
xchg
call
inc
xchg
sbb
je
fidivl
fidivl
mov
fs
addr16
repz
cmp
inc
xor
outsb
jecxz
sbb
loope
popf
loopne
out
rclb
pop
cmp
xchg
es
cmpsl
loope
inc
inc
pop
push
flds
les
push
int3
sbb
and
xor
xchg
push
dec
jns
stc
sub
dec
push
das
lods
cmpsl
imul
pop
and
sub
mov
fisttpl
jns
in
xorl
shl
mov
xor
nop
xor
loope
mov
xor
icebp
add
fsts
bound
or
pop
test
pop
frstor
test
ror
dec
jg
aad
push
mov
pop
loopne
xchg
cmpsb
out
xor
or
cmp
or
or
imul
leave
xor
stc
lods
out
push
sbb
xchg
dec
insb
push
mov
push
fsubrp
dec
aas
popa
jmp
or
lock
imul
inc
jae
add
cmpsb
orl
cmpsl
adc
inc
clc
pushf
mov
inc
test
int
jl
fsubp
outsl
pop
lcall
mov
cmp
enter
dec
mov
in
inc
inc
lea
repz
push
jae
push
and
popw
fadds
movsb
dec
fsubrp
fsubrl
loope
sbb
dec
sti
adc
jl
push
xor
hlt
into
es
add
dec
sti
daa
daa
pusha
loop
xor
dec
xchg
jp
add
jp
jnp
cmpsb
push
sarb
flds
fsubrs
jo
inc
popf
jl
sahf
test
dec
test
mov
inc
sub
jbe
lret
cmpsb
jle
lods
lret
jns
pop
std
fadd
add
or
mov
fistps
cmpsl
dec
jo
stos
sbb
mov
out
inc
pop
adc
push
push
inc
inc
and
jmp
pop
hlt
js
and
push
mov
mov
sti
mov
outsl
mov
shlb
push
lcall
fldcw
or
xor
inc
fcmovnbe
mov
xor
xchg
fcomp
add
out
repnz
outsl
or
xorl
sbb
inc
lods
out
add
mov
xor
out
loop
jo
jnp
mov
add
xchg
jle
das
xchg
int3
scas
mov
xor
loopne
leave
pop
scas
adcl
leave
sub
das
add
mov
subb
push
mov
pop
mov
push
outsb
jge
jns
jno
xchg
ret
push
pop
imulb
ss
iret
nop
in
add
mov
adc
dec
push
mov
sbb
cli
dec
shrb
popf
push
les
xor
outsb
fldl2e
lods
sarb
sbb
mov
mov
and
push
jp
arpl
pushf
clc
ror
or
mov
icebp
sbb
mov
sub
test
stc
inc
cld
jl
ret
testb
jns
sbb
dec
iret
mov
sub
jno
pop
add
fistpl
cwtl
mov
fists
or
movsb
xchg
sub
push
stos
inc
jle
push
jmp
test
icebp
aad
jno
aas
mov
mov
test
fnstsw
inc
int3
into
inc
push
lret
aaa
notb
push
jle
and
cmp
push
pop
sbb
je
cmpsl
or
push
fwait
sub
xor
adc
stos
out
repnz
cld
sub
ss
hlt
aaa
xchg
adc
and
sbb
push
xchg
in
cwtl
xor
lret
or
mulb
hlt
push
push
test
jno
loop
and
hlt
push
and
jns
shrb
jle
stos
fsubp
out
jno
ret
sub
aaa
push
aam
sbb
enter
int3
cmp
ljmp
add
cmc
inc
subb
faddp
jmp
sbb
push
orl
repz
push
jmp
or
inc
adc
scas
or
and
adcb
mov
add
js
or
aad
or
add
gs
cmpsl
icebp
push
adc
jns
outsl
xlat
mov
sti
es
mov
xlat
test
lds
dec
sub
mov
cmp
mov
cwtl
rcrb
mov
pop
push
icebp
xchg
cmp
xor
inc
or
fnstenv
je
repz
popa
push
and
fnstenv
cmpsb
jle,pn
sub
es
movsb
xchg
test
cltd
in
sbb
cwtl
shlb
mov
sbb
push
outsb
cmp
lea
test
inc
or
add
mov
inc
enter
ja
mul
jmp
add
nop
pop
daa
cmpsb
into
pop
xchg
shll
mov
pushf
imul
stos
inc
mov
inc
mov
inc
adc
pop
shll
notb
into
rcl
mov
sbb
xrelease
cmp
ret
mov
pop
test
mov
pop
and
fdivrl
out
aam
lea
sbb
inc
xor
out
loopne
jns
pop
mov
mov
ret
popf
ljmp
stos
sub
inc
movsb
clc
jl
ret
and
loop
loopne
inc
stc
dec
insl
and
xchg
mov
gs
in
cltd
leave
nop
or
mov
inc
test
jns
mov
fmul
test
sbb
sbb
pop
jnp
hlt
int
lret
subb
ja
lret
repz
idivb
and
out
imulb
in
add
andl
cmpsl
adc
fwait
or
mov
jb
jno
inc
dec
fisubs
add
dec
leave
out
pop
and
sbbb
les
sub
andb
ficomps
mov
xchg
jbe
mov
mov
push
es
outsb
mov
mov
inc
xorb
shll
xor
mov
call
pop
jle
addr16
xchg
clc
aaa
push
jns
and
jo
ja
ss
pushf
orl
push
jno
jg
sbb
out
shr
push
xor
jg
out
add
xchg
cmpl
cwtl
dec
xchg
pop
lock
dec
pop
lock
sbb
sbb
shlb
in
pop
popf
fnsave
mov
nop
xor
js
daa
push
popa
xor
and
or
leave
lods
fnstenv
lds
add
stos
xor
cwtl
xchg
inc
cmp
xchg
lds
rol
inc
dec
int
shll
inc
nop
lea
xor
inc
mov
mov
jle
push
adc
ljmp
add
sub
adc
mov
imul
adcl
sub
or
icebp
ror
xor
inc
in
mov
int3
ja
mov
adc
jl
int3
adc
in
aad
rcl
mov
mov
xchg
pop
xchg
outsl
add
inc
movsb
xchg
sub
je
add
outsb
es
cmp
sub
in
xchg
cmovnp
out
dec
inc
pop
aaa
sbb
pop
xchg
sahf
movsl
decb
add
adc
and
cmp
push
jle
movsl
int
pop
scas
leave
xor
push
in
repz
or
outsl
popf
notl
adc
inc
push
or
aaa
ret
sbb
xchg
sub
in
and
push
jae
mov
dec
inc
gs
stos
add
stos
loop
mov
inc
xorl
popa
and
push
jle
jmp
adc
ret
inc
push
sbb
lods
lods
in
jp
jge
push
sbbb
mov
mov
dec
fistpl
or
insl
mov
shrl
in
pop
aas
pushf
and
lds
push
dec
xchg
inc
add
maskmovq
negl
outsl
push
out
stos
lret
pushf
fisubrl
cmp
loop
nop
mov
cmp
push
lock
int3
or
push
inc
add
push
cmpsl
movsl
dec
arpl
mov
adc
mov
imul
push
pop
cltd
xchg
sub
cmp
pop
push
sbb
ret
add
jbe
int
pushf
add
push
into
adc
inc
addb
int
es
xchg
bound
mov
cmp
enter
dec
mov
inc
leave
mov
sbb
out
shlb
mov
xchg
cltd
sbb
mov
iret
mov
sbb
or
clc
sarl
out
mov
push
daa
pop
ds
adc
lds
rolb
test
jae
jae
in
or
fs
scas
pop
popl
daa
cmp
pop
clc
negb
std
jmp
sbb
mov
add
lret
inc
hlt
xor
dec
pusha
push
sub
inc
gs
aas
fidivl
pusha
repz
jo
jnp
jmp
imul
inc
pop
sbb
cmpb
or
bound
sub
dec
outsl
mov
fbld
dec
mul
dec
sbbb
pop
stos
cmc
xchg
or
and
push
mov
imul
mov
les
inc
daa
imul
push
and
outsl
out
das
leave
sub
into
jb
icebp
ds
mov
sbb
insl
adc
and
mov
sbb
jge
mov
cmp
add
test
ffreep
dec
cmp
insl
arpl
or
loope
outsb
mov
adc
imul
jns
push
shll
ret
dec
jl
insl
nop
adc
xchg
sbb
in
stc
ljmp
pop
cld
je
test
leave
cmc
add
cltd
cmpsl
xor
xchg
fiaddl
divb
adc
adcb
pop
jnp
and
jbe
xor
sbb
aad
jge
movsb
ljmp
js
call
nop
push
cmp
aas
add
jecxz
add
lret
out
stc
lea
fcoml
lock
and
jl
dec
xchg
sti
dec
push
gs
js
and
adc
bsf
aam
xchg
pop
inc
xchg
int
xor
nop
dec
mov
xlat
popa
mov
jge
mov
js
mov
lods
stos
pop
jmp
xor
jns
sub
mov
iret
fwait
lahf
cmp
dec
pop
mov
add
iret
push
pusha
cs
sahf
push
jns
and
cwtl
jp
lods
pushf
cs
sbb
xchg
jb
rclb
pop
dec
pop
pop
mov
push
xor
insl
cmpsl
bound
fdivrl
imul
subl
ss
imul
cmc
or
xor
stos
dec
shll
mov
leave
std
mov
inc
pop
push
clc
jmp
lods
loope
push
adc
and
adc
mov
jmp
pop
dec
xor
cli
push
push
enter
dec
sbb
call
xchg
es
int3
loope
fistl
xchg
mov
arpl
data16
loop
ret
adc
shr
xchg
insb
jmp
xor
test
sub
or
cwtl
je
movsb
and
scas
ja
sbbb
je
ffreep
push
xchg
outsb
jge
jnp
in
hlt
xor
jb
pop
ds
mov
pushf
pop
sub
pop
mov
ret
pop
mov
cwtl
or
and
jmp
outsl
push
sahf
lret
adc
push
cs
xor
flds
ffreep
add
out
xor
mov
ss
icebp
enter
mov
lods
mov
je
inc
loopne
shrl
outsl
dec
fisttpl
in
pop
push
pushf
and
addr16
sahf
outsl
jo
xor
sbb
mov
push
test
nop
flds
test
cli
bound
inc
in
imul
iret
sub
test
ds
jns
lcall
ret
dec
rcr
push
inc
inc
mov
mov
shrl
aas
push
enter
mov
xlat
mov
mov
lea
dec
mov
adc
jo
xchg
jmp
nop
mov
inc
shl
jne
xor
test
shll
push
push
sbb
setbe
and
pop
cmpb
enter
repnz
pop
jnp
leave
gs
and
in
adc
into
push
and
push
int3
or
push
test
adc
in
xchg
outsl
xor
cmp
stos
or
mov
pushf
xchg
mov
cmp
pop
mov
dec
shll
mov
mov
daa
cmp
sahf
cltd
mov
sub
or
imul
sbb
mov
xchg
loope
push
push
push
sub
outsl
out
shrl
and
jo
mov
xor
fstpt
jmp
jp
cwtl
push
jb
jbe
dec
cld
adcl
in
lea
imul
pop
aas
pop
sbb
xchg
test
decl
xchg
jp
pop
repz
daa
test
nop
daa
mov
jmp
dec
xchg
mov
test
fs
dec
push
psubsb
xor
push
cmp
out
pop
ret
jmp
outsb
inc
mov
pusha
mov
sub
xor
or
outsb
mov
aam
dec
dec
fsubp
popf
shl
sbb
js
push
xchg
in
or
pop
xor
pop
adc
stos
sub
xchg
pop
mov
mov
xchg
loop
mov
test
or
mov
ret
xchg
and
fcom
xor
add
push
push
imul
jge
adc
pushf
sahf
lods
lds
mov
pop
ffree
push
cmp
push
fistl
rorl
cmp
sbb
xchg
xor
dec
mov
xor
adc
test
and
inc
mov
push
repz
jbe
inc
sub
mov
pop
aad
les
scas
ficomps
addr16
mov
lock
jmp
cli
and
and
decb
test
test
test
dec
rcl
popa
jmp
lea
pop
xchg
mov
popf
test
sub
push
xchg
mov
jg
fwait
dec
div
aas
cli
shl
push
xchg
pusha
cmp
or
loope
pusha
adc
cmp
int3
mov
mov
and
adc
shlb
push
xchg
test
fdiv
jnp
cli
dec
lock
test
jbe
xchg
test
loopne
lret
xor
in
out
lcall
xchg
iret
dec
lds
xchg
mov
cmpsl
testl
mov
fisttpll
pushf
movsb
lods
pop
xor
pop
mov
push
push
je
lock
pop
icebp
lds
lret
pop
and
popa
in
in
and
lret
lahf
mov
shll
sti
dec
dec
pop
inc
notb
add
les
mov
sbb
aad
adc
aam
mov
out
or
push
dec
xor
in
lcall
aam
sub
cmp
mov
aas
das
xor
pop
mov
mov
into
xlat
adc
daa
std
out
and
mov
lea
lock
jmp
push
cwtl
jmp
stos
push
cld
pop
cld
cmp
mov
cmpsb
add
dec
sbb
adc
and
fnsave
loopne
js
adc
xor
cmpb
mov
push
mov
mov
inc
adc
fstpl
xchg
xor
ret
push
sub
lods
test
xor
inc
mov
cwtl
cmp
shlb
test
mov
leave
sti
loope
fdivrs
pop
inc
jle
lcall
fidivrs
or
testl
and
clc
push
cmp
movl
in
fnstsw
cmp
sbb
dec
push
cs
loop
popf
xchg
mulps
inc
jecxz
mov
xor
pop
dec
or
imul
sub
xor
outsl
pusha
xor
push
cmp
shlb
xor
adc
inc
dec
push
pop
jns
pusha
xlat
xchg
jmp
adcb
daa
and
loop
add
lock
clc
mov
mov
shll
cli
and
jecxz
mov
jbe
scas
lock
push
push
sub
inc
adc
fs
inc
xchg
mov
xor
in
mov
xor
dec
jge
insb
out
sarb
aaa
jne
andl
mov
arpl
push
lds
outsb
sbb
add
ljmp
mov
or
push
lret
and
jo
das
dec
xchg
ds
aad
push
lds
scas
and
sub
and
jecxz
movsl
scas
mov
ret
add
xchg
sbbb
sub
test
mov
inc
lock
dec
push
loope
pop
aaa
inc
pop
mov
jne
or
dec
mov
in
mov
fucomp
popf
shrb
push
cmp
push
or
adc
std
cmp
sub
lea
add
pop
ret
sti
retw
lret
aad
sbb
data16
mov
xor
mov
les
lret
lock
cmovo
fs
popf
dec
roll
mov
pcmpeqd
ficoml
or
xor
sub
or
dec
push
loop
add
push
jno
jbe
stos
sarl
cmp
inc
pop
daa
test
rcrb
popa
outsl
es
jns
arpl
sbbl
mov
in
mov
jecxz
fld
das
fistl
sub
bound
mov
mov
in
push
rol
push
or
mov
in
in
clc
orl
loop
adc
insb
mov
loope
imul
mov
cwtl
out
nop
jb
and
adc
xchg
cmp
in
xchg
sub
enter
test
lods
idivb
mov
adc
push
adc
dec
rcll
pop
and
sbb
push
test
aam
fwait
aas
fidivrl
inc
ja
cmpsl
pop
mov
add
orl
pushf
dec
mov
sbb
fimuls
imul
mov
jb
lcall
xchg
sub
sti
mov
insb
cs
das
ja
jg
cmp
fimuls
fstpl
repnz
in
cmp
push
cltd
add
and
inc
cmpl
pop
or
iret
push
sub
inc
push
addr16
aad
sarl
xor
or
not
gs
jle
xchg
fdivrs
das
pop
pop
dec
sub
adc
nop
clc
int3
sub
mov
je
mov
insl
ds
adc
mov
inc
xor
shlb
and
add
xor
mov
test
out
aad
inc
in
sub
mov
add
sbb
jp
cwtl
jno
cs
movl
leave
add
stc
sub
and
cwtl
and
push
sbb
inc
or
test
stos
lods
add
mov
sahf
lahf
aad
or
add
sub
inc
jle
enter
cmpl
pop
pushf
out
sub
in
insl
loop
in
jecxz
cmp
aaa
sub
sub
mov
aas
mov
fdivp
fildl
jmp
jl
insl
pop
jmp
cmp
xchg
dec
mov
sbb
gs
jle
sti
and
mov
je
xor
xor
dec
ja
mov
xchg
sbb
sbb
enter
lock
jne
scas
outsb
mov
pop
sbb
sub
sub
jbe
add
lods
sub
pusha
inc
cmpsb
or
jnp
inc
xlat
aaa
push
add
mov
mov
inc
or
sub
imul
xchg
jb
mov
xchg
not
fnstcw
xor
fadds
repz
sbb
fisttpll
push
push
scas
mov
scas
jmp
incb
scas
pusha
pop
mov
mov
cmp
test
sbb
sub
into
out
cmc
lret
mov
icebp
jo
inc
sahf
fs
push
mov
hlt
dec
jl
pop
call
lahf
lahf
jns
pop
lea
cli
or
or
mov
enter
jne
pop
daa
adc
mov
push
mov
enter
loope
push
xor
cmp
sub
cli
shll
aas
jle
cld
lret
leave
cmp
sub
test
xchg
cmp
call
and
fldcw
cmp
gs
int3
push
sbb
dec
xchg
idivl
and
sub
xchg
aad
and
mov
jl
shl
mov
es
cmp
test
js
cmp
inc
adcl
pop
fiadds
jnp
inc
inc
mov
scas
popf
xlat
sub
into
jnp
ja
mov
pop
imul
in
mov
ja
xchg
inc
fidivs
inc
ds
loop
divb
jl
mov
sbb
push
mov
push
mov
add
add
adc
pushf
sbb
jae
jb
sub
std
stc
cli
icebp
call
jne
lret
out
jo
push
ss
cli
sbb
das
or
cmpb
test
ja
arpl
insb
int3
test
loope
sub
mov
xor
sti
mov
pusha
sbb
mov
add
imul
xchg
icebp
mov
pop
andb
add
dec
nop
lret
repz
shlb
jp
cmpsl
fistpl
jnp
test
or
cld
sub
inc
mov
int3
stc
cmp
ret
add
aaa
shll
push
fucomip
out
cmp
mov
dec
jne
sbb
push
mov
cmp
mov
subl
sub
cltd
push
popl
adc
push
mov
pop
jle
hlt
dec
dec
in
xchg
je
mov
pop
mov
fnstsw
adc
sbb
lods
fdivs
inc
jecxz
out
inc
lea
jns
int
das
sbb
adc
mov
in
iret
jb
or
stc
add
lret
rorl
cwtl
aam
fadds
sub
mov
adc
scas
push
push
adc
mov
xrelease
push
xchg
push
sbbl
xorl
test
stc
add
jmp
lret
jns
and
mov
mov
jnp
jno
and
push
add
mov
cmc
rorl
cmpb
ds
ret
lods
xor
arpl
cli
out
cltd
push
push
mov
jo
int
ret
and
dec
cmp
aaa
imul
lods
movsl
cli
icebp
icebp
mov
ja
adc
int3
into
fcoms
jb
imul
xor
push
mov
adc
inc
jle
sub
cwtl
je
push
lea
imul
pandn
and
sbb
ja
dec
fisttpl
xor
cmp
mov
sub
scas
jo
adc
les
and
add
jo
mov
lahf
sbb
push
mov
lock
sub
xchg
cwtl
insb
inc
mov
jl
xchg
ret
add
pop
out
jae
push
es
daa
adc
adc
sahf
fwait
popa
sub
jno
add
mov
sbb
add
pushf
std
pop
leave
mov
xchg
subb
test
mov
rol
jge
cwtl
xor
addl
negl
scas
pop
mov
xchg
xor
sbbb
lahf
popf
sub
mov
out
mov
mov
lock
es
scas
mov
pop
push
cmp
and
xor
mov
pusha
sub
lahf
jmp
repz
aam
fbstp
vpshlq
pop
adc
fs
ja
rcrb
cmpb
shlb
pop
push
enter
jb
push
pop
xor
js
add
dec
jbe
and
and
jp
jnp
int
lret
cmp
mulb
xor
push
addb
test
imul
sub
stc
pop
fdivs
sbb
xchg
pop
jp
xchg
pop
sub
dec
into
bound
rolb
jbe
pusha
mov
test
mov
mov
fistpll
test
inc
dec
inc
pop
fwait
push
cli
and
inc
and
pop
inc
xchg
mov
pop
cmp
pusha
add
jbe
jb
dec
mov
cmpsl
cld
jo
dec
xchg
orl
cmp
rol
sbb
scas
pushf
push
push
push
int3
hlt
cmc
movsb
pusha
popf
jge
xchg
mov
add
std
adc
push
je
dec
add
adc
lock
xchg
inc
inc
adc
into
int
adc
lahf
pop
icebp
mov
aaa
fdivl
jmp
push
adc
sub
jmp
aam
rol
aad
ja
xchg
cmp
or
test
fdivs
cs
iret
imul
pop
mov
sub
dec
inc
inc
cmp
fldt
orb
sbb
movsb
arpl
popf
xchg
dec
cmp
cmp
int
and
dec
hlt
int
push
inc
add
jge
pusha
and
insb
mov
xor
push
mov
jmp
jge
push
mov
sub
pushf
sub
dec
outsl
push
pop
xchg
lea
fistl
cmp
mov
das
fwait
outsb
push
jo
cmpsl
repnz
pop
dec
or
jae
mov
mov
adc
push
pop
fdivrs
mov
in
jecxz
jp
and
fst
subl
sbb
mov
mov
enter
addr16
add
gs
sbb
dec
testb
dec
leave
dec
outsb
pop
inc
cmp
icebp
push
pushf
pop
mov
movsl
mov
xor
dec
sub
inc
jno
mov
sbb
mov
cmp
push
dec
in
or
adc
or
fidivl
test
rorl
and
mov
in
in
mov
dec
data16
xchg
mov
aaa
sbb
add
loope
or
adc
fwait
inc
push
into
out
push
cwtl
shl
cmp
in
mov
mov
out
or
dec
xlat
mov
cmc
xchg
out
cmp
ud0
out
insl
data16
pop
incb
movsb
or
lea
inc
in
out
mov
ret
mov
push
idivb
fisubrs
mov
out
push
lret
mov
xchg
repnz
lret
fwait
push
mov
adc
das
pop
sub
mov
mov
adc
scas
out
sub
xchg
in
loop
in
sub
sbb
mov
sub
lds
js
adc
add
pop
subb
fs
sbb
add
or
xor
inc
jno
sub
insl
clc
mov
mov
xchg
push
dec
out
sahf
mov
cmp
mov
aad
arpl
sub
add
pop
sub
in
pushf
push
or
sbb
or
cltd
stos
cmp
mov
jp
sti
xor
push
pushf
sub
data16
pushf
mov
sbb
and
mov
push
imul
xchg
ret
dec
jmp
mov
mov
push
inc
bnd
xchg
fcom
inc
jb
and
pop
push
lret
cltd
or
bnd
lahf
pop
pop
arpl
lock
js
out
popa
inc
xor
jne
push
add
push
pop
shl
lcall
lock
out
xor
and
cs
ja
dec
jge
jmp
sahf
les
inc
std
add
cmp
andb
mov
inc
and
push
scas
add
xor
in
cmp
cs
mov
or
pop
dec
jae
jbe
aam
scas
jb
push
jae
sbb
out
aam
mov
insl
out
mov
dec
mov
adc
into
je
and
add
lea
js
jo
aas
xor
ret
out
mov
sarl
sbb
popf
cmp
test
fistps
test
mov
lds
aas
test
in
sahf
dec
inc
popa
adc
ss
xor
dec
cmp
jge
xor
push
cmc
mov
lahf
adc
and
enter
aaa
ja
rcrb
pop
mov
and
mov
push
hlt
popa
xchg
cld
inc
mov
jle
bound
push
inc
push
stos
add
mov
js
popa
mov
adc
sbb
shrb
fdivs
sarb
add
cmpsl
ficompl
pusha
adc
xchg
mov
xor
xchg
inc
sbb
inc
mov
in
and
or
lcall
sti
push
xlat
inc
push
xchg
daa
pop
cmp
xor
adc
sti
repnz
test
roll
addr16
js
dec
inc
xor
sarl
jo
adc
cmp
jae
or
test
lods
addr16
lret
sbb
sbb
cld
mov
and
out
xor
xor
int
jo
lds
mov
leave
dec
nop
iret
or
fists
fs
ret
cmp
fsubl
mov
inc
jnp
pop
or
xchg
adc
pop
dec
pushf
add
roll
cmp
push
pop
mov
push
int3
outsl
push
es
mov
dec
insl
in
sbb
clc
cli
lret
mov
mov
pop
mov
sub
mov
mov
inc
push
sar
insl
lcall
cmpsb
adc
jmp
or
add
jmp
pusha
cmp
call
addr16
std
movsb
mov
iret
sub
loopne
rorb
push
adc
lahf
xchg
ja
and
fsubs
sti
cld
xor
lock
ret
out
pop
ret
into
jecxz
shr
push
nop
sbb
addr16
testb
jge
in
ljmp
cmp
xchg
dec
pop
stos
mov
pop
fwait
cld
lds
inc
add
jo
mov
and
out
mov
xchg
push
dec
lret
test
push
adc
mov
ds
inc
xchg
sub
in
mov
add
mov
ja
rcll
sub
pop
in
loopne
in
lea
push
cwtl
les
pop
add
xchg
ss
xor
sar
lea
mov
cmpsb
inc
cmp
adc
push
xchg
dec
loop
into
shl
fisttpll
dec
insb
dec
adc
adc
pop
popa
jmp
jnp
jge
lea
jle
cmc
imul
sub
push
out
dec
sbb
pusha
ss
pop
sub
popa
xchg
mov
jge
movsl
popf
mov
pusha
pop
adc
mov
dec
icebp
scas
fstpt
or
adcb
adc
pop
and
je
ja
mov
cli
cltd
lahf
or
dec
mov
scas
movsl
push
jecxz
imul
cld
inc
repnz
hlt
gs
into
adc
popf
xor
xor
jmp
xchg
push
psubw
sbb
aas
push
cmp
gs
popf
out
add
xor
pop
cld
lds
add
adc
jge
mov
cs
mov
adc
addr16
pop
gs
pop
jecxz
nop
aaa
inc
jg
push
hlt
cmpsb
cmpsb
ss
fwait
aaa
insl
sbb
decb
sbb
sbb
sbb
xchg
cltd
lock
out
cmpb
pop
push
loope
ret
stos
sub
out
pop
or
xchg
repnz
ds
push
push
cmpsl
mov
dec
pushf
fisttps
test
daa
xor
std
testb
ror
or
popf
push
and
push
adc
bound
and
dec
or
ss
std
into
xchg
das
mov
imul
cwtl
enter
nop
sbb
pop
inc
mov
cs
inc
mov
jne
scas
jp
inc
cmpsl
inc
enter
repz
clc
fsubrs
and
dec
fwait
pop
dec
sub
and
pop
insl
jle
xchg
imul
mov
repnz
cs
lret
ds
adc
lods
jge
xchg
xchg
enter
sub
mov
push
shlb
test
sub
mov
push
pop
cvtps2pd
xchg
sbb
movsb
sbb
enter
cmp
ss
addr16
ret
mov
jno
clc
cmpsl
push
mov
jp
and
ret
std
js
into
dec
mull
mov
jmp
sbb
arpl
mov
scas
and
inc
sarl
out
pushf
pop
mov
dec
popa
adc
inc
movsb
xchg
cmp
fucomip
dec
mov
cld
dec
pop
cwtl
xlat
pop
pop
mov
and
vcvtps2pd
xor
or
arpl
sbb
mov
and
sarb
and
add
dec
mov
mov
lds
push
in
sub
decl
jmp
fwait
adc
testl
or
push
dec
lret
fdivrl
push
test
mov
fnsave
cltd
sub
shl
test
mov
xor
loopne
mov
lret
push
xlat
sub
sub
xchg
hlt
mov
out
fcompl
pop
push
jmp
out
call
xchg
fs
femms
imul
ds
hlt
mov
mov
fneni(8087
aam
lds
or
inc
adc
outsb
data16
jo
sub
mov
imul
inc
jmp
sarb
mov
pop
loop
sti
inc
or
js
repz
shlb
test
rcrb
sub
rcrb
repnz
and
sub
add
mov
call
gs
jmp
and
cmp
jmp
fs
stc
popf
mov
cmp
dec
add
mov
adc
int
int
xchg
ja
ss
movsl
dec
jno
repz
jns
lret
dec
adc
pop
push
test
stos
xchg
sub
pop
decl
cmp
cmp
mov
sbb
or
fwait
in
jno
cmc
es
sub
sbb
jne
ret
shlb
mov
inc
iret
jp
lods
aam
add
cmp
test
mov
pop
push
xor
movsl
lock
dec
jae
push
inc
add
fdivl
lods
inc
arpl
cli
push
js,pn
mov
xchg
lret
repz
push
jns
inc
push
and
movsb
mov
cmpsl
cmp
cmpsb
or
dec
cmp
push
aaa
mov
push
jns
mov
jmp
push
dec
and
inc
sahf
sahf
add
adc
ljmp
cs
stc
adc
pop
insb
xor
insb
adc
rclb
or
sbb
repz
shrl
add
and
or
jo
inc
and
popa
jmp
push
dec
push
lods
js
push
pusha
scas
mov
rcrb
scas
add
adc
push
daa
mov
sbb
xlat
sub
sbb
out
stos
pop
mov
mov
add
stos
movsl
jmp
push
lock
and
stc
sbb
in
mov
test
add
mov
sbb
cmpsb
aas
and
adc
mov
stos
outsw
mov
mov
and
test
arpl
cmp
test
clc
iret
in
repz
inc
popa
pusha
adc
push
loopne
imul
loop
push
fidivl
sub
cwtl
push
lcall
fisubs
add
lds
jmp
iret
mov
push
mov
ds
sahf
mov
int3
and
or
subb
mov
and
shll
pop
and
adc
mov
add
cmpsb
mov
sbb
outsl
mov
cmc
inc
push
cmp
sbb
dec
adc
test
clc
out
dec
rcrl
and
pop
lock
mov
inc
lods
xor
and
cmp
and
sbb
ljmp
in
or
mov
inc
in
sbbl
dec
or
mov
rorl
scas
dec
cltd
sti
repz
cmp
jb
jnp
imul
sbb
xorb
push
aaa
lock
pop
or
or
or
mov
xchg
aaa
pop
aad
cmp
xchg
sbb
jle
pop
movl
js
in
jl
test
pop
push
sti
push
es
test
adc
out
cmovae
sub
or
jl
cmc
mov
mov
add
xor
fmull
inc
div
pushw
add
gs
and
adc
pop
xchg
sbb
mov
pop
imul
mov
jp
mov
mov
adc
movsb
bndldx
inc
fld
out
imul
je
cmp
pop
mov
adc
sbb
jo
in
mov
mov
mov
inc
fmull
push
xor
and
xor
aaa
pusha
xchg
xor
stos
xor
popa
add
sub
aas
ljmp
sbb
sbb
out
aad
loope
and
lods
lods
leave
inc
inc
mov
out
cmc
mov
cmp
or
subb
xchg
imul
sbb
int3
test
jl
out
jb
sbb
jbe
or
sbb
and
imul
xchg
out
xor
adc
push
ljmp
rcrl
stos
push
rol
aam
push
iret
sbb
int
jecxz
scas
xor
sub
xchg
add
sbb
roll
stos
mov
in
inc
jb
pop
pop
mov
lcall
pop
or
cmp
adc
repnz
repnz
sti
mov
mov
mov
cmp
add
sbb
sbb
inc
test
or
aas
sub
or
cmpsb
xchg
xor
testl
mov
add
push
cmpsb
mov
into
or
push
xor
movsb
mov
cmp
hlt
pop
popf
cli
sub
push
jmp
or
push
push
test
xchg
inc
xchg
push
push
into
movsb
push
push
push
cs
mov
fwait
sbb
push
fildll
stos
inc
dec
add
jb
fcmovb
xchg
insb
sbb
mov
jne
or
aad
roll
divb
aaa
mov
pop
pop
into
pop
movsl
popf
stos
andnps
mov
push
out
lock
mov
test
jne
nop
add
fisubrl
sarl
push
orl
xchg
cmc
sub
in
sarl
pop
and
sahf
ret
fcoml
pushf
jp
gs
mov
jbe
popa
add
mov
cmp
cld
push
dec
add
pushl
fisubrl
cmp
fdivr
and
mov
jmp
mov
xor
jle
leave
sbb
ljmp
push
stos
pop
mov
add
inc
add
bound
pop
pop
mov
add
xchg
leave
cwtl
popa
fildl
and
and
pusha
sbb
mov
sub
cmp
sbb
outsb
test
lea
hlt
addr16
mov
add
jmp
fistpll
ret
dec
or
int3
xchg
adc
stc
cmp
mov
loope
lods
xchg
mov
sbbb
push
fildll
lahf
fldt
push
mov
mov
xchg
pop
loope
push
div
add
push
push
inc
pop
je
push
stc
adc
vfmsubaddps
fcoml
jmp
sub
adc
mov
xchg
rol
pop
ljmp
adc
pusha
xorl
jno
or
cmpsb
xchg
mov
pop
imul
int3
es
stos
sub
inc
das
and
cwtl
sub
mov
sbb
mov
push
out
push
xchg
outsl
into
jl
fiadds
shll
pop
sub
push
pusha
mov
lret
dec
or
and
shl
lods
sub
cmp
leave
jecxz
aaa
imul
xor
mov
lcall
sub
inc
mov
push
add
xchg
shlb
leave
jae
loope
fcoms
insb
int3
cmpsl
and
add
adc
push
ret
inc
adc
xchg
mov
xlat
mov
pop
sbbl
pop
xchg
rorb
xchg
dec
xor
dec
shrb
push
aam
and
inc
ss
fdivs
dec
inc
aas
fwait
and
inc
add
or
pop
lock
mov
iret
gs
pop
scas
pop
in
ja
outsb
dec
pushf
dec
out
shll
je
mov
loop
jnp
mov
fidivs
cli
pusha
dec
mov
stos
mov
inc
dec
cmc
mov
jmp
adc
adc
sub
mov
insl
mov
dec
jmp
xchg
pop
insb
xchg
sub
fnstcw
aam
mov
mov
xor
lcall
jno
jne
dec
add
scas
push
test
cwtl
pop
dec
jo
pop
sahf
std
adc
and
dec
lds
ret
sbb
or
inc
adc
lcall
xchg
xchg
out
xchg
fcomps
xchg
sub
or
addr16
lock
mov
jl
mov
push
adc
sti
je
add
out
mov
les
xor
xchg
xor
cmp
jg
fcmove
out
or
xor
xor
gs
dec
mov
stos
ljmp
popf
outsb
popf
mov
xor
ficomps
and
cld
cmp
jne
call
xchg
cmp
mul
leave
jo
shr
cmpl
dec
rclb
and
add
mov
lret
xchg
sbb
mov
or
mov
test
pop
cmpsl
clc
mov
or
sub
mov
xor
into
jle
sub
mov
cli
repz
or
mov
dec
dec
mov
int3
test
adcb
inc
divl
jne
das
out
sbb
push
sbb
add
mov
dec
inc
insl
jno
dec
mov
stos
jns
dec
mov
dec
mov
test
mov
out
sub
testl
rol
loopne
fidivs
in
adc
sub
out
inc
call
jns
rclb
int3
mov
xchg
dec
or
xchg
stos
push
lock
mov
sub
pop
js
adc
lods
mov
dec
insl
jbe
iret
jl
sbb
cli
sub
out
pop
fnstsw
das
cmp
xchg
mov
xchg
fmuls
adc
pop
int3
lret
clc
lds
clc
adc
adc
adc
imul
jecxz
out
enter
pushf
ret
sub
mov
xchg
iret
adc
ja
pop
sbb
icebp
xchg
fiaddl
mov
add
inc
imul
dec
ret
ja
mov
adc
dec
push
mov
mov
scas
fwait
inc
int
cmp
mov
fdivr
clc
and
pushf
ljmp
repz
jbe
pop
mov
ljmp
add
adc
sbb
dec
scas
aas
test
cmp
pop
cli
jmp
inc
mov
jle
mov
data16
enter
mov
cwtl
repz
inc
das
lds
fcoml
xor
aam
add
sbb
rcrb
jg
cld
ljmp
std
in
mov
fwait
jo
inc
sbb
dec
xchg
ret
add
movsb
dec
add
lea
mov
xchg
icebp
fs
add
mov
shrl
mov
pop
imul
xlat
lcall
inc
sti
mov
out
dec
in
pop
mov
push
sbb
stos
insb
fwait
push
xor
imul
pop
and
pop
insl
push
icebp
outsb
jmp
sub
cmc
pusha
pop
or
xor
or
addl
scas
jge
mov
stos
jl
jbe
jp
dec
mov
mov
adc
xor
xchg
inc
sub
shlb
xchg
scas
xor
fisubrl
pop
xchg
add
sbb
fsubl
test
push
pop
sti
pop
les
mov
mov
cwtl
jecxz
dec
int
cmp
or
dec
cmp
add
fisubs
jg
or
data16
sbbb
jecxz
inc
pop
repz
shll
sub
es
movsb
jb
xchg
cli
push
pop
mov
push
ret
lods
les
push
nop
adc
jbe
popf
mov
ret
outsb
insl
mov
xchg
sahf
das
in
pop
cmp
jno
sbb
push
in
fwait
dec
cmp
lds
push
movsl
nop
nop
add
push
scas
lock
inc
mov
push
scas
jg
movsl
jl
jecxz
insb
mov
outsb
filds
push
int
adc
std
ja
scas
sub
call
push
mov
pop
cmpsl
test
pop
nop
sbb
and
imull
and
jle
scas
aaa
subb
int3
fldcw
jmp
mov
mov
loope
outsb
jge
out
shrl
adc
test
dec
pop
pop
cmc
xchg
mov
daa
cmp
xchg
imull
xchg
mov
aam
mov
mov
add
mov
jge
xchg
pop
mov
xor
mov
adc
cmp
xchg
push
int
rolb
inc
das
mov
xor
shll
scas
or
mov
sti
call
repz
sbb
roll
ficompl
or
and
adc
into
mov
addr16
push
scas
adc
outsb
fucomip
imul
jo
inc
push
dec
test
mov
mov
dec
sub
mov
jle
mov
cld
divb
inc
add
aaa
das
cmp
mov
cmp
jae
ja
lcall
jbe
jbe
jno
xchg
test
ss
mov
push
in
cltd
je
dec
daa
cmpsl
jmp
loop
sbb
and
in
push
sub
fistpl
sub
out
leave
lods
ljmp
or
popa
xor
ljmp
cli
aas
sbb
xchg
clc
call
mov
pop
repnz
int3
es
cmpsb
sub
mov
add
cmp
dec
or
das
mov
js
mov
daa
movsb
xchg
mov
inc
test
ss
andl
pop
xchg
fmuls
testb
jns
jno
cmc
add
fldt
std
popa
cmp
outsb
jb
xor
push
adc
aam
xorb
sub
adc
lcall
movsl
std
xor
mov
inc
mov
test
adc
pop
pop
dec
cmpsl
loope
js
sbb
add
cmp
insb
shll
xchg
or
xchg
pop
dec
mov
adc
mov
subl
insb
pop
cmp
imulb
movsb
mov
seta
or
lods
dec
xor
fwait
cmp
in
subl
stc
sarl
inc
movsb
sar
test
jo
xor
mov
mov
addr16
aas
push
iret
xor
inc
mov
sbb
xchg
xchg
mov
sub
add
xchg
or
fistpll
addr16
xor
xchg
jae
dec
adc
mov
cmp
out
add
and
xlat
clc
stos
stc
ret
std
imul
mov
test
and
lret
fsubs
mov
and
outsb
dec
outsb
push
lret
ficoml
addb
nop
iret
imul
lods
cmpsb
mov
cmp
int
dec
add
ja
pop
movsl
js
adc
push
jo
mov
mov
and
add
clc
push
mov
inc
out
inc
cmpb
cmp
nop
jg
sub
xor
push
in
rcrb
mov
jecxz
rolb
icebp
leave
pop
cmp
imul
inc
xor
outsl
sarl
mov
loope
test
or
in
pop
and
xchg
push
xchg
jecxz
lods
pop
or
dec
cmp
sbb
pop
and
cmp
shll
jmp
mov
loopne
xchg
dec
inc
scas
mov
xchg
or
cmp
out
bound
sbb
jnp
mov
cmpsb
out
adc
scas
xchg
adc
in
xchg
cmpsb
xor
cli
aam
bound
int3
popl
std
dec
add
iret
push
scas
pop
in
inc
pop
jae
sbb
sahf
scas
jge
inc
mov
lods
and
xchg
sbb
cmp
mov
xchg
mov
pop
push
gs
add
dec
into
cmp
add
jno
dec
pop
lret
les
fadds
jb
inc
enter
dec
cwtl
cmp
mov
cmp
loop
out
sarb
cltd
mov
and
sub
cmp
add
es
jae
out
fsubr
js
stc
adc
test
mov
into
dec
cmp
leave
sbb
cs
xor
cmc
out
adc
mov
push
dec
jl
mov
or
or
or
fbstp
out
movsb
jg
lcall
fldt
xor
xchg
mov
fwait
push
leave
movb
data16
pop
mov
or
out
fldenv
pop
cmc
loopne
sub
in
add
mov
faddl
jmp
xchg
xorl
mov
sbb
int3
mov
lock
pop
xchg
cs
sbb
or
loop
jle
lcall
mov
xchg
or
mov
jl
add
push
adc
movsl
mov
adc
adc
jmp
push
mov
lcall
jb
jb
imul
stos
inc
cmp
mov
and
lds
adc
inc
xor
add
adc
and
add
push
sub
inc
xchg
push
inc
sub
es
or
mov
pop
and
je
jecxz
mov
or
or
sub
or
jne
add
mov
movsb
inc
mov
cmpsl
cld
les
scas
sub
lret
enter
scas
ja
mov
add
movsl
push
sub
inc
or
and
add
lock
push
lcall
fstps
pushf
mov
jo
jl
imul
xor
loopne
mov
out
mov
les
je
sbb
jae
lahf
mov
clc
aam
mov
scas
and
mov
enter
sub
sbb
dec
and
into
pop
inc
loop
fnstenv
ja
test
fiadds
jno
adc
xor
or
leave
lcall
mov
andb
xor
xor
inc
aaa
or
addr16
imul
movsl
sti
nop
adc
mov
pushl
popa
ret
xchg
add
cmpsb
or
dec
aas
in
add
jb
add
xchg
rcll
lock
dec
pop
xchg
es
ja
xor
mov
shrl
xchg
cmc
inc
psrlw
inc
mov
xor
lods
cltd
stos
push
les
movsb
mov
jb
pusha
pop
jmp
push
mov
dec
sbb
sbb
lods
int3
iret
jb
jae
movsb
mov
lods
jb
pop
push
nop
xchg
test
dec
das
divl
cmp
bound
sbb
mov
sbb
mov
push
rcrl
pop
push
leave
add
jg
mov
loop
scas
mov
insl
inc
sbb
add
and
inc
mov
fdivp
xchg
cmp
jp
jecxz
sahf
fisttps
mov
pop
mov
ja
cmp
cmp
test
inc
jle
js
mov
rcrl
mov
or
cwtl
int3
dec
xorl
lret
loope
aad
add
fwait
insl
sbb
add
pop
jmp
cmp
add
stos
push
ja
xchg
popf
out
stos
test
leave
loopne
lcall
jno
mov
orl
mov
mov
sub
cwtl
mov
loopne
pop
push
cmpl
mov
push
std
jno
xchg
daa
xchg
fildl
in
add
movsl
add
ss
nop
stc
or
pop
inc
mov
xor
push
jmp
adc
in
imul
stc
les
mov
adc
test
or
ss
sub
cltd
adc
push
xchg
icebp
sarb
fwait
inc
sbb
mov
dec
or
out
push
jbe
jnp
lock
nop
dec
push
add
pop
push
push
jg
jmp
pop
adc
fwait
lds
pop
loopne
je
std
push
insl
fldcw
jge
sub
sbb
sahf
mov
xchg
xor
pop
in
movsl
adc
aad
jmp
add
aaa
add
adc
sub
adc
into
pop
out
mov
add
fidivl
jg
jno
sti
sub
push
ficoml
in
mov
sub
pushl
addr16
xor
xchg
leave
loop
addr16
push
clc
lea
jb
fldenv
call
lods
mov
jne
fs
sub
clts
movsl
dec
loopne
xchg
jle
or
mov
addr16
leave
push
cmp
jecxz
dec
pop
in
pop
bound
bound
or
loopne
repz
xchg
jbe
orb
cmp
jp
sbb
leave
dec
mov
mov
cwtl
insb
push
sbb
pxor
xchg
mov
hlt
test
cwtl
mov
jo
mov
call
push
stc
mov
std
rcl
xchg
mov
dec
cmpb
dec
int
test
bound
fucomi
xor
mov
cmp
xchg
les
imul
lahf
decl
jle
jecxz
cltd
mov
mov
lret
test
fiadds
lds
jae
stos
cmp
lret
rcrl
adcb
incb
or
lods
pop
cmp
sbb
and
pop
push
xlat
xor
sbb
in
shr
lods
add
int3
scas
jnp
int
and
pop
ret
pushf
adc
inc
iret
outsl
test
hlt
jl
std
jmp
add
push
fadds
mov
and
add
fdivrs
pop
les
pop
aad
cmpsb
xchg
pop
movsb
dec
out
inc
lock
movsl
mov
inc
and
test
cltd
cwtl
insb
dec
outsb
bound
mov
xchg
xchg
out
mov
mov
imul
inc
pop
repnz
stc
push
inc
fwait
pop
dec
shll
int
jl
jb
add
xchg
or
rclb
xor
push
stc
inc
push
pushf
test
mov
ficoms
sub
mov
pop
adc
ret
sbb
ret
lret
lret
adc
mov
cmp
cmp
test
cmc
mov
or
int3
pop
and
imul
cmp
mov
in
cmp
or
and
push
gs
push
push
mov
fs
jno
and
cwtl
int
out
js
adc
push
sub
pop
cmp
pop
out
or
fstpl
jecxz
sub
test
pop
notb
fimull
test
add
xchg
data16
pop
sbb
lods
push
mov
pop
cmp
fcoms
push
mov
push
dec
lea
and
fiaddl
sub
ja
mov
aad
mov
fidivl
ss
outsl
imul
popf
dec
xchg
mov
sbb
sbb
mov
adc
or
inc
jl
cltd
push
adc
add
add
dec
inc
xchg
gs
and
scas
jno
push
xchg
js
sbbb
xchg
push
mov
xchg
fildll
out
test
dec
jg
add
xchg
mov
addl
adc
clc
out
sub
push
clc
sub
jne
jge
or
enter
xchg
inc
add
andl
jmp
dec
cmpsl
das
cwtl
jg
gs
push
pop
jg
movsb
mov
and
fwait
inc
inc
daa
xchg
jne
test
sbb
bound
pop
cwtl
xlat
lods
push
push
dec
jno
mov
push
data16
nop
add
hlt
call
sti
loop
cmpsl
add
fidivl
add
dec
lods
shl
stos
add
in
mov
das
mov
push
jo
cmpsb
outsb
rorb
mov
fsts
das
or
fcoms
dec
les
and
mov
inc
mov
shlb
out
push
and
mov
mov
jae
mov
incl
dec
loop
dec
mov
push
pop
aam
adc
xor
sub
mov
inc
cli
sub
push
adc
cli
push
fchs
inc
out
in
add
jnp
mov
repz
sbb
mull
push
out
sub
pushf
sbb
push
out
mov
into
sub
sub
jge
mov
out
test
aaa
sub
pop
sub
fnop
jbe
imull
xchg
inc
or
mov
xchg
xchg
jbe
ljmp
notb
cmp
dec
sub
iret
mov
nop
and
push
pop
pop
clc
xor
mov
xchg
push
mov
or
fildll
mov
adc
cli
call
inc
popf
clc
cmp
xor
cld
jns
jne
and
leave
std
mov
mov
out
cmc
dec
push
xor
pop
push
cmpsl
insl
push
scas
push
lahf
pop
sarl
push
in
mov
lahf
scas
sarl
dec
fucomip
jmp
push
cmp
call
or
imul
xchg
adc
xor
or
and
jmp
mov
shr
or
mov
stos
stos
imul
ja
push
pop
sahf
cmp
jg
push
cltd
cmp
push
xchg
subb
mov
xchg
shll
std
imul
lock
xor
lds
pop
push
push
inc
loop
out
cli
test
daa
sub
and
xsave
and
stc
mov
in
call
out
xor
and
pop
pop
pusha
dec
and
jle
pop
ds
xchg
xchg
dec
jne
mov
xchg
repnz
cmpsb
jo
push
rcrl
aad
and
scas
or
mov
out
mov
jge
sub
xor
mov
jae
mov
xor
lods
popf
ja
sbb
jge
pop
push
jae
popa
adc
mov
dec
and
xor
subl
xchg
dec
movsl
push
loope
addb
inc
or
push
sahf
push
fldl
push
incb
sbb
fld
adc
xchg
push
add
aad
lret
bnd
xchg
mov
in
subl
xor
mov
jns
mov
inc
aas
movsb
test
push
decb
mov
cmpb
pop
add
sar
adc
cmp
fisubrs
xchg
mov
lods
cmp
jne
aam
mov
push
imull
adc
push
fildll
test
push
jg
jnp
scas
jnp
pop
inc
std
loope
ljmp
inc
xchg
int3
jbe
pusha
lret
testb
mov
cmp
mov
push
mov
int3
rclb
pusha
mov
fcmovnbe
mov
inc
pop
pop
xor
push
fistpll
mov
outsb
outsl
scas
mov
aad
inc
jge
or
lock
subb
cld
orps
or
pop
in
outsl
xchg
or
fisubs
mov
dec
push
mov
cmp
pop
std
clc
mov
pop
push
lock
hlt
daa
ljmp
push
dec
outsb
clc
sbb
lods
cmp
mov
mov
pop
cmp
scas
addr16
in
fildll
xchg
daa
int3
pop
ret
fistl
jecxz
push
dec
mov
mov
sahf
mov
fucomp
mov
test
aas
inc
sub
fwait
inc
sbb
rcr
js
in
daa
addb
ljmp
daa
fs
pushf
mov
mov
dec
xchg
mov
or
mov
fisubl
pop
pop
sbb
jp
add
cld
jp
int
and
repz
orb
xor
mov
test
popa
push
xchg
add
out
movd
fisubrl
iret
int
cmp
adc
iret
fcmove
cmc
insb
ret
fwait
ds
xchg
dec
push
xor
je
enter
jnp
repnz
in
cmc
cmpsl
sbb
or
push
push
mov
push
and
sub
mov
or
pop
es
cs
pop
cmp
pushl
fisubrs
ja
dec
popa
jmp
xchg
push
nop
cld
push
jp
hlt
or
mov
and
dec
cwtl
xchg
in
push
add
xor
mov
pop
sbb
xchg
test
sbb
push
and
adcb
mov
push
jbe
adc
clc
push
jecxz
fdivrs
shl
and
dec
mov
lock
outsl
les
dec
cmpsl
ljmp
cmpsw
and
push
cmp
inc
cmp
or
pop
lcall
in
mov
mov
xlat
adc
popf
xchg
loop
xchg
fnstsw
mov
hlt
sarb
mov
shlb
lret
inc
mull
imulb
adc
jns
stc
pushf
out
clc
mov
stc
lock
out
push
pop
mov
or
and
jne
loopne
or
jae
mov
add
xchg
push
xchg
jae
jb
mov
push
stos
mov
inc
xor
sbbl
cltd
fcoml
or
jge
sbb
dec
xor
adc
cmc
punpcklbw
test
insb
repz
dec
mov
sub
xchg
lahf
int
data16
push
test
inc
cmpsb
test
inc
adc
mov
mov
aas
ja
inc
das
mov
ret
jb
lods
jne
rclb
add
add
mov
mull
in
cmc
cmc
jne
out
outsl
xor
mov
add
jnp
call
add
cwtl
xor
out
ljmp
ss
push
jbe
aaa
sbb
add
xor
jp
dec
pusha
mov
insl
adc
sub
pop
xchg
dec
scas
cmpsb
lods
pop
mov
push
xchg
pop
xchg
stc
pop
push
je
xchg
out
xchg
jmp
out
and
into
cmpsl
insl
add
xchg
inc
hlt
mov
mov
in
test
call
mov
or
add
push
sbbb
dec
cmp
sti
bnd
lea
push
inc
adc
lock
add
loope
fnstenv
shll
jge
push
xchg
mov
cmp
push
pop
jno
push
cmp
fs
lret
pop
dec
dec
jno
jl
bound
or
inc
fiadds
out
pop
cmp
fstpt
rclb
ficomps
or
pop
repz
cmpsl
mov
sub
cmp
in
pop
test
dec
xchg
cmc
rcl
pop
int3
stc
and
xchg
rorb
mov
fstps
arpl
push
loop
xor
push
inc
or
popl
pop
stc
sbb
xor
les
add
jp
push
xlat
movsl
leave
pop
loope
push
xchg
adc
jns
jae
xchg
xor
dec
cmp
pop
inc
jmp
aaa
pop
outsb
push
or
jb
mov
jne
ds
push
rorb
cmp
arpl
nop
aad
add
pop
loope
push
loop
jge
ds
or
mov
out
fldcw
or
fisubrs
push
rorb
dec
and
sub
dec
sbb
xor
pop
aaa
add
mov
lret
mov
pop
add
inc
sub
dec
jle
push
inc
xlat
out
and
cs
sub
xor
mov
idiv
push
in
das
xor
sbbl
mov
addr16
push
stos
mov
sub
in
aas
ds
jnp
insl
das
pop
sub
sub
hlt
mov
cmp
ret
fwait
rorb
int
mov
fnstcw
or
testl
sub
sbb
fwait
xchg
movsl
adc
sbb
fs
std
je
adc
dec
push
test
pusha
les
and
dec
mov
jmp
les
scas
jle
loop
call
shll
aas
addr16
mov
sbb
mov
into
push
fcoms
in
push
push
pop
push
imul
rorb
xchg
pushf
push
lahf
cltd
je
dec
sahf
jle
fsubs
pushf
ss
inc
enter
mov
inc
push
adc
mull
push
jecxz
ja
add
leave
clc
lcall
mov
adc
scas
mov
mov
mov
xor
dec
adc
and
or
xchg
fistps
add
test
fstps
cmp
jle
cmpsl
repz
fwait
pop
mov
subb
jbe
sub
fucom
sti
or
push
mov
add
fs
jg
mov
arpl
fwait
dec
fwait
jb
xor
imul
mov
sbb
ds
call
sbb
and
adc
pop
inc
dec
jo
adc
dec
out
out
cmc
out
scas
pop
mov
iret
sub
jge
inc
outsb
dec
push
and
cmp
xor
xor
adc
ja
add
cmp
xor
fisttps
jle
sbb
mov
ret
xor
nop
cld
aam
inc
adc
sbb
cmpsl
or
setne
fwait
sbb
fistps
lret
inc
mov
lods
sbb
xchg
xchg
push
lret
mov
fwait
lea
mov
mov
adcl
sti
inc
cmc
fisubs
add
mov
cmp
jg
icebp
lcall
into
cli
jmp
sbbb
movsl
das
daa
lret
push
insb
add
sarb
movsl
push
rcrb
xchg
lea
push
stos
lret
jnp
imul
pop
push
je
xor
arpl
xor
clc
imul
jb
mov
or
pop
shlb
bound
out
ret
jp,pn
or
add
movsb
cmp
mov
mov
pcmpeqb
push
sbb
jns
enter
xchg
pop
fsubs
aaa
movsb
mov
test
aas
dec
out
inc
insb
in
dec
inc
je
sub
div
cmpb
pushl
sar
movsb
mov
mov
xchg
movsb
fwait
mov
xchg
xor
sbb
bound
cmp
dec
sub
movsb
out
lret
mov
add
out
outsl
repnz
mov
xor
int
xor
sub
cmp
dec
leave
xor
out
fstpt
mov
and
cld
adc
pop
sbb
mov
test
inc
aaa
stos
scas
popf
mov
or
lock
inc
cli
sahf
push
aad
dec
mov
mov
and
inc
add
mov
fwait
rcrb
xlat
push
or
setge
mov
mov
mov
insl
add
outsb
test
insl
data16
or
push
pop
jno
pop
jno
sahf
loopne
push
jae
push
adc
or
test
mov
push
cwtl
in
xor
xor
pop
jae
lods
inc
xchg
insb
out
leave
in
cwtl
cwtl
shrl
sahf
pushf
push
rcrb
pop
mov
xor
into
sbb
xchg
adc
popf
pop
insl
out
or
ret
mov
lds
cmp
mov
dec
ret
add
mov
ja
insl
xchg
adc
lds
stc
mov
jne
loop
lcall
push
push
into
dec
cmpsb
adc
cmpsl
mov
add
push
inc
push
clc
int3
pop
inc
add
scas
xchg
inc
push
dec
and
sbb
inc
popf
dec
sbb
call
mov
xor
sti
lods
push
es
cmp
test
push
xor
sbb
or
pop
loop
mov
fwait
add
sbb
sarb
fmull
sub
into
jg
adc
test
aam
xchg
and
add
jmp
aaa
or
test
frstor
inc
cld
cltd
dec
jmp
inc
push
js
sub
mov
aas
in
mov
mov
pop
orb
sbb
fcoms
das
pop
rcl
mov
mov
icebp
ret
mov
xchg
gs
mov
xchg
mov
mov
mov
push
pusha
pop
xor
dec
repz
stos
repz
pop
xchg
add
test
data16
xchg
clc
fldlg2
scas
jmp
sti
lock
push
fdivr
sbb
jg
loop
test
loop
adc
sbb
sbb
fldl
outsb
popf
mov
movl
aaa
jge
jbe
loopne
xchg
inc
out
sub
mov
outsl
pop
mov
cmc
sbb
orb
fs
lret
popf
fadd
outsl
cmp
test
int3
jns
sbb
xor
push
pop
jmp
sahf
jecxz
rep
lods
test
in
idivl
ss
mov
mov
mov
rcl
jne
jl
xchg
pop
add
pop
cs
ds
in
mov
lret
add
add
dec
imul
mov
pop
mov
mov
adc
jmp
cmp
icebp
jnp
inc
add
es
sub
sbb
add
in
xchg
cmc
je
pop
xor
shlb
inc
xor
jmp
jmp
xor
adc
adc
push
lock
jle
repz
jbe
stos
arpl
push
lret
add
inc
repz
stos
xor
orb
xchg
imul
ret
and
xor
movsb
sub
enter
xor
aaa
mov
xchg
pop
pop
in
mov
add
call
daa
pop
orb
mov
fisubs
sub
xor
dec
int3
dec
jl
cs
lods
cmp
stos
fcoml
mov
xchg
data16
or
push
mov
jmp
inc
outsl
stc
loop
in
and
fldt
bound
xor
add
dec
daa
pop
ljmp
mov
add
dec
sub
mov
cwtl
test
ds
lods
push
je
or
loope
adc
add
loope
sub
decl
jg
orl
shrl
or
les
sub
loopne
add
adc
pop
enter
int3
mov
or
out
out
push
mov
test
ret
and
bound
xchg
shrl
pop
dec
xor
popa
div
mov
mov
iret
dec
cs
addr16
push
movsb
xor
mov
add
rcrl
push
and
inc
cmc
add
cwtl
arpl
lret
in
push
push
stos
outsl
mov
pop
sub
adc
jnp
std
inc
xchg
subl
mov
xor
dec
add
jnp
hlt
mov
std
mov
in
sahf
divb
push
cltd
jmp
cmp
xchg
sub
je
in
dec
std
xor
xor
std
pop
fdivr
aad
add
clc
jp
in
fiaddl
repnz
in
xor
mov
aam
cmp
lret
and
add
scas
aaa
scas
jg
mov
data16
jo
mov
dec
add
in
dec
mov
push
xor
in
das
insl
rorb
xchg
mov
cmp
pushaw
loopne,pn
stos
jmp
mov
aam
inc
inc
push
mov
sbb
ret
jnp
adc
cld
insl
test
in
imul
sbb
jl
inc
scas
jl
push
inc
fwait
pusha
jnp
lahf
cmpsl
adc
adc
fdivs
bound
push
iret
inc
jno
mov
addl
enter
or
cs
and
sbb
sahf
push
repz
jg
out
add
push
test
jle
xor
rcrl
jp
pusha
mov
sbb
mov
sahf
or
int
jo
flds
mov
adc
ror
pop
inc
fs
outsb
jp
gs
out
adc
testl
xchg
clc
cmpl
mov
xor
jecxz
hlt
outsb
dec
dec
sbb
stc
idiv
add
jle
je
icebp
imul
xor
ljmp
or
push
je
insl
jge
ja
stos
xlat
sbb
inc
adc
mov
inc
fst
fcmove
and
mov
jle
imul
int
adc
inc
sti
fmul
loope
jns
mov
pop
fistps
pop
adc
data16
mov
mov
add
push
inc
cmp
int
outsb
ljmp
mov
inc
into
jmp
pop
jmp
rcrl
jge
xor
call
mov
or
jle
ret
aam
outsl
fbld
sbb
ret
pop
fistps
jp
push
popf
adc
mov
add
jne
add
jp
or
bound
jno
loope
inc
jmp
test
enter
pop
add
mov
adc
inc
sub
stos
jae
pop
mov
jns
xor
pusha
into
lcall
mov
add
or
push
pop
mov
es
repnz
xor
inc
std
mov
cmp
pop
cs
out
xchg
jmp
jae
push
shrb
push
mov
or
scas
pop
inc
adc
mov
adc
int3
out
xchg
push
stc
mov
andb
adc
sbb
dec
mov
inc
mov
aad
inc
cmpsl
fildl
adc
jecxz
shll
mov
scas
dec
les
int3
lret
les
repz
in
into
push
push
push
adc
cmp
scas
sbb
arpl
and
push
bound
cmp
sbb
out
insl
popf
sub
dec
push
xlat
pop
push
dec
push
xor
xor
lahf
in
inc
add
imulb
lahf
jae
test
xchg
movswl
pop
mov
repz
and
lods
cld
bound
dec
jb
enter
xor
or
in
inc
xor
sub
call
insl
es
sbb
xchg
fwait
dec
or
out
movl
aad
push
and
imul
pop
mov
cmpsb
cli
imul
mov
sub
shlb
scas
xlat
sbb
pushl
jo
jge
inc
sbb
ret
mov
xchg
dec
sub
pusha
ret
push
aad
or
mov
shlb
cmc
fs
inc
add
and
fbstp
xor
inc
mov
mov
and
enter
enter
jle
dec
xchg
sbb
lock
in
mov
fdivl
out
push
in
push
xchg
xchg
mov
fcmovbe
jnp
sub
iret
outsl
xor
popa
popa
add
daa
shrb
pop
inc
inc
jo
lret
stos
mov
dec
jmp
jl
sbb
sbb
sub
push
sbb
dec
and
inc
aas
mov
cmpsl
cmp
mov
mov
mov
fs
popa
ja
out
jecxz
int
out
jns
cs
pop
xor
ja
sbb
test
addr16
sub
mov
mov
fadd
add
xchg
xchg
into
and
jnp
rclb
out
mov
xlat
jp
lea
push
mov
push
out
mov
cltd
mov
insb
lock
test
outsl
insb
aam
add
stos
mov
cmp
cli
imul
sahf
adc
setl
xchg
bound
pop
cwtl
and
xchg
xchg
mov
or
mov
xchg
fstl
movsb
call
mov
mov
cld
and
adc
sbb
dec
repz
jae
jecxz
out
mov
xor
jne
stos
jmp
popf
mov
xor
jmp
bound
fxtract
mov
in
cli
cld
adc
add
sub
xorb
test
push
xchg
dec
push
xchg
shll
xchg
pushl
xchg
pop
xor
mov
mov
mov
jecxz
mov
add
out
mov
bswap
shll
pop
mov
push
or
dec
or
and
mov
pop
adc
jo
push
test
mov
adc
xchg
dec
shl
sahf
jg
mov
push
popa
sbb
push
arpl
dec
loope
adc
xchg
repz
int
mov
pop
jmp
nop
add
inc
fidivs
xchg
mov
call
push
fnstenv
aad
shrb
cmp
jo
sbb
cmpl
stc
or
out
jno
add
jb
mov
jmp
add
adc
into
sub
loope
or
jb
mov
fildll
mov
sub
mov
dec
shl
jecxz
fmul
imul
xchg
inc
sti
pop
jnp
jbe
jg
std
cmpb
pop
adc
fistps
jge
and
lret
sahf
inc
sbb
jno
or
adc
xor
es
test
sahf
daa
leave
and
adc
and
jae
fcomps
scas
sub
mov
stos
push
cmp
dec
cltd
mov
fs
scas
sbb
xchg
das
jl
mov
out
addr16
ds
push
inc
mov
insl
dec
popf
sbb
mov
ret
imul
inc
push
test
dec
mov
cltd
ljmp
xor
je
jb
add
dec
add
jno
or
call
mov
mov
int
jb
loope
mov
bound
inc
loopne
jle
inc
scas
mull
inc
fsubl
add
pop
mov
es
bnd
cld
shl
xor
mov
sub
inc
push
xor
mov
push
mov
insb
inc
or
loop
pop
xorb
jb
sub
sub
jge
stc
pop
push
cmp
and
sub
repnz
dec
sbb
mov
xor
cmc
push
pop
insl
cmp
and
jp
inc
cmpsl
test
jmp
dec
aas
jne
dec
push
pop
fidivl
lods
call
push
adc
xchg
sub
sub
call
sub
and
clc
pop
sti
rcrl
xchg
xchg
movsl
push
sbb
pushf
loope
das
insl
or
addr16
cltd
lcall
inc
xorl
or
iret
mov
jg
out
or
pop
cwtl
repnz
inc
sbb
cmc
jmp
fistps
xor
xor
jb
pusha
jae
push
lret
lods
push
shll
push
adc
xchg
int3
shrl
push
aas
out
and
mov
push
add
inc
pushf
sbb
mov
pop
xor
inc
jno
scas
sub
pop
cmp
aas
add
mov
pop
test
sbb
dec
lret
cltd
fidivs
int
dec
daa
test
sub
fwait
mov
mov
jno
sub
lret
pushf
dec
mov
or
push
clc
loopne
push
jns
call
sub
stos
std
dec
pop
xchg
sti
out
cld
pop
mov
jnp
testl
arpl
cmp
outsb
mov
push
xchg
pop
push
imul
aam
test
dec
push
outsl
sbbb
loopne
into
fistpll
movsl
movsb
jne
out
in
pop
push
fnstsw
xchg
mov
cmpsb
cs
ret
xchg
stos
dec
or
jle
imul
mov
rolb
adc
pushf
mov
add
rorl
scas
cld
lret
push
inc
sub
push
out
cmp
jg
clc
adc
or
in
sub
jecxz
jle
ficoml
popf
outsl
data16
fcmovnu
mov
adcl
mov
mov
add
test
dec
push
sbb
dec
inc
shrl
stos
sub
lds
inc
push
lea
jnp
ja
mov
and
stos
pop
and
sub
jo
inc
ret
sar
push
shrb
cmp
xor
imul
sub
cmp
inc
imul
mov
mov
add
fidivs
and
int
sbb
mov
stos
jp
push
sub
pop
movsl
sub
aaa
scas
add
fiaddl
pop
jle
shr
or
out
xor
jno
rcll
add
mov
dec
mov
or
sub
xor
cmp
int3
add
cwtl
mov
popa
sbb
sbb
xor
sub
xchg
cld
mov
mov
shll
bound
ds
jbe
and
push
movsb
add
gs
shlb
push
in
cmp
dec
add
test
sbb
lds
call
rorb
pop
xlat
scas
bound
fstps
mov
imull
jb
and
popa
and
xchg
inc
rcl
inc
sbb
idivb
sbb
and
xor
jecxz
xor
jle
cmp
mov
in
push
lcall
js
adc
fmulp
jne
mov
xchg
mov
sub
inc
adc
xlat
push
iret
fcoml
jecxz
lds
pop
mov
xchg
shll
jl
xlat
push
outsb
insb
or
xor
jno
sbb
test
jge
dec
aam
cs
xchg
sbb
sub
dec
in
call
in
sub
roll
or
add
jl
jecxz
addr16
push
cld
leave
pop
cmp
mov
cmpl
or
xchg
cltd
xchg
sti
lock
dec
cmp
mov
jmp
sti
movsl
fimull
out
mov
jg
or
imul
lock
pushf
inc
dec
add
jp
cmp
add
add
out
loope
mov
xchg
dec
gs
out
adc
cmp
push
sub
popa
daa
sub
push
into
ljmp
xor
mov
xchg
pop
sbb
mov
aaa
hlt
push
push
fadd
test
mov
scas
pop
and
movsl
sbb
mov
sub
movsb
or
sub
pop
pushf
sahf
sbb
jae
inc
jge
das
out
jns
js
imul
loopne
jno
mov
cmp
incl
lea
sub
dec
inc
push
push
mov
push
jmp
rolb
jno
pop
fcmovne
sub
ficompl
mov
mov
mov
ja
mulb
fwait
xchg
gs
ret
loop
sub
jnp
xchg
or
loope
stc
and
xchg
push
test
dec
xchg
lods
xor
mov
dec
dec
add
or
inc
jb
xchg
jecxz
add
dec
jne
push
pushf
jmp
add
xchg
or
mov
loope
adc
fistps
pop
test
lea
decl
popf
jbe
jbe
repnz
mov
cmp
cli
leave
pop
push
xchg
or
pop
cli
scas
in
pop
adc
adc
xchg
int
leave
scas
test
inc
aaa
mov
stc
ret
mov
rcrl
jp
test
ss
aaa
fucomp
clc
mov
push
in
mov
lds
dec
insl
popa
lret
popa
stc
subb
dec
sub
adc
lods
inc
cmp
int3
int3
adc
mov
push
dec
data16
les
out
scas
mov
mov
test
sub
aaa
lret
addl
or
mov
push
cmpb
push
mov
xor
in
inc
and
fisttps
out
cmp
popa
out
inc
xlat
mov
adc
add
push
add
sbb
pop
xor
bound
xor
decb
loop
ret
mov
outsb
cmpsb
jecxz
pop
test
pusha
dec
mov
out
out
add
cmpsb
inc
adc
xorb
add
lods
mov
clc
sub
mov
pop
pop
mov
dec
insb
cltd
repnz
mov
and
inc
cmp
js
xchg
mov
or
arpl
mov
add
inc
jae
pop
dec
mov
pop
and
in
fstpt
negl
jp
push
test
and
sub
or
sbbl
adc
sbb
xor
stos
cltd
mov
adc
xchg
or
orl
and
mov
and
in
xchg
imul
and
sahf
sbb
jmp
and
ss
mov
into
dec
dec
insb
addr16
stos
cmp
jl
mov
pop
mov
mov
or
repz
mov
mov
cltd
dec
jo
push
mov
jle
std
fstpt
sarb
cmp
insl
and
push
test
std
pop
jle
cmpsb
xor
mov
adc
sbb
movsb
lahf
popf
ret
shlb
ret
mov
mov
mov
push
adc
adc
mov
xchg
or
out
pop
fisttpl
rcll
mov
popf
sub
mov
mov
xchg
push
pop
pop
mov
and
pop
push
add
stos
outsl
mov
arpl
fstpt
test
mov
popa
lahf
ret
outsl
add
sub
cmpsl
hlt
cmp
mov
or
lret
cli
mov
lea
sub
je
inc
mov
xchg
pop
out
lcall
out
test
icebp
mov
shll
or
rol
sahf
scas
sbb
orl
or
sbb
xchg
cmp
repnz
in
call
jmp
dec
sub
mov
std
cli
dec
repnz
clc
mov
sbb
jo
inc
nop
popa
sbb
ja
pcmpeqd
dec
adc
cmpsb
cmp
pusha
and
fst
and
push
jno
push
xchg
xchg
shlb
insb
jae
mov
dec
lret
popf
xor
icebp
xchg
adc
push
insb
push
push
jecxz
jmp
scas
lcall
and
jns
push
mov
test
es
lods
inc
inc
imul
roll
sub
add
xor
sbb
push
movsl
fidivl
dec
inc
sbb
testb
xor
and
test
xchg
xor
xchg
pop
inc
leave
xor
and
add
loop
cwtl
scas
lahf
pop
aaa
mov
movsb
push
sbb
aas
mov
cmp
sbb
add
inc
xorl
and
jge
testl
les
xchg
xor
pushf
add
lea
fistl
lea
ss
sarb
and
cld
cmp
cmc
adc
orb
movb
push
jb
pop
mulb
test
lahf
ret
xlat
enter
jns
popa
sub
daa
dec
hlt
pop
sahf
inc
lods
mov
lods
inc
xchg
sbb
loop
leave
leave
mov
pusha
pop
popa
push
mull
je
adc
or
lea
push
or
lock
xorl
dec
adc
notl
cli
sub
mov
fwait
jne
cmp
dec
jnp
or
xchg
jmp
mov
jle
addr16
mov
rcll
sub
mov
stos
ret
xchg
adc
mov
imul
jns
cmp
mov
iret
jmp
add
pop
xchg
sub
push
mov
mov
pop
mov
ret
scas
jp
shrl
xchg
mov
nop
aas
pushf
iret
mov
stos
push
into
xchg
mov
imul
inc
ds
ret
xchg
sbb
inc
mov
std
sbb
xchg
icebp
xor
arpl
shrl
lods
push
cmc
sub
out
mov
mov
push
aas
das
ljmp
or
aam
sbb
mov
mov
dec
and
jmp
test
stc
sbbl
push
mov
ficoml
xor
inc
adc
dec
adc
inc
jbe
imul
cmc
addl
imul
clc
jecxz
cmp
movb
sbb
popf
stos
and
aam
das
sbb
xchg
jne
add
cmp
jp
inc
leave
sbb
xor
push
mov
mov
dec
imul
mov
push
in
mov
or
neg
les
pop
jp
fs
lods
pop
cwtl
mov
sbb
push
imulb
flds
in
mov
xchg
out
xchg
out
jae
loope
jae
mov
jno
and
imul
and
cld
out
sbb
aas
psrad
jae
push
mov
cmp
push
mov
mov
mov
pop
addr16
xlat
mov
rolb
lcall
jl
out
jmp
xor
prefetcht2
pop
xor
ret
xchg
sbb
xor
adc
push
sbb
cmp
mov
jl
xchg
adc
insb
cmpsl
insl
inc
xchg
jecxz
mov
jns
sahf
mov
adc
jbe
ljmp
push
clc
jmp
adc
push
fstpl
shrl
lods
push
pop
pop
xor
sub
mov
cltd
ret
add
ss
dec
cs
lret
test
vpcmpeqw
lea
test
in
shl
jns
inc
adc
pop
push
ja
sti
push
pushf
pusha
adc
jg
add
adc
and
pop
mov
push
xchg
sub
mov
sbb
orb
bound
xor
mov
pop
and
adc
mov
add
imul
push
andb
div
push
adc
xchg
test
and
cli
add
mov
xchg
sbb
adc
daa
xchg
loope
cmp
mov
mov
ljmp
mov
rorl
pop
or
pop
fisttps
mov
xchg
cwtl
daa
push
mov
xor
int3
push
xchg
mov
push
mov
and
das
lods
jo
and
leave
sbb
push
lret
repz
roll
stc
jo
pop
adc
inc
test
notl
or
filds
push
cwtl
lret
test
or
outsb
mov
inc
addl
sub
imul
cwtl
or
ss
test
fisttps
jge
fs
inc
repz
pop
test
mov
cltd
test
xor
xchg
pop
cmp
loopne
or
inc
push
stos
pop
mov
inc
mov
imul
push
jge
insb
jg
mov
lds
adc
and
das
orb
in
insb
leave
pop
push
jl
cwtl
hlt
mov
stos
xchg
dec
sub
repnz
sub
adc
mov
cmpl
push
jb
xchg
fsts
sbb
push
mov
adcb
popf
mov
fstl
xchg
mov
sub
lock
jmp
shlb
or
ja
mov
arpl
sbb
mov
push
data16
cmp
sub
jmp
mov
push
movsb
sub
jp
or
push
adc
push
aaa
add
cmp
out
dec
pop
dec
dec
movsb
lret
stc
test
ror
push
sti
pop
pusha
mov
data16
or
or
pop
cmp
add
cmc
or
mov
stos
mov
push
fldt
cmpsb
push
andb
ss
mov
xor
mov
aaa
add
rcrb
xchg
xchg
push
dec
test
jg
mov
or
and
cmova
mov
stos
enter
add
popa
or
div
test
jae
fisubrl
sub
pop
jb
xlat
or
imul
outsb
mov
fdivs
dec
cltd
pop
inc
cmp
pop
jbe
mov
mov
xor
cmp
call
sub
mov
in
and
add
arpl
lods
xlat
add
xchg
jp
sbb
stos
push
xchg
mov
js
push
mov
cli
enter
dec
pop
nop
int3
inc
dec
or
cld
cmp
xchg
addr16
cmp
pop
xor
repz
stc
jmp
add
adc
ret
imul
outsl
imul
mov
dec
and
pusha
flds
adc
ds
icebp
adc
aaa
js
cmp
cmp
xchg
inc
arpl
adc
add
adc
fdiv
and
incb
mov
stos
mov
push
neg
push
jns
loop
shl
xlat
pop
cs
fcompl
jo
sbb
std
jl
mov
adc
ss
sub
stos
lods
push
mov
ljmp
ss
ret
nop
mov
xlat
popf
dec
jbe
or
ljmp
pop
mov
adc
int3
add
pusha
mov
movsl
mov
dec
retw
scas
fsubrs
shl
xchg
in
xor
fnstcw
xor
repz
ss
push
popf
gs
inc
mov
jne
pop
and
dec
cmp
and
or
push
inc
and
psubsb
pushf
inc
or
mov
popf
add
loopne
and
data16
sub
stos
jns
or
dec
imul
push
out
rcr
insl
mov
popa
sbbl
int
sub
movsb
adc
ljmp
add
sbb
nop
cwtl
or
fbstp
xchg
push
cltd
cmp
xchg
push
dec
ds
mov
jno
or
push
push
push
pusha
pop
fcmovnu
jmp
orb
dec
mov
gs
nop
data16
fiadds
push
cmp
sub
xchg
cld
cmpsb
cbtw
mov
dec
fwait
xor
pusha
repnz
cwtl
in
inc
cwtl
xchg
mov
pop
mov
xchg
pop
xchg
mov
int
or
push
xor
mov
insl
xor
jl
add
ja
mov
cmpsb
mov
ss
cmp
xor
outsl
xor
mov
pop
icebp
sub
jo
jb
daa
jae
outsb
cmp
clc
shrb
jo
push
add
inc
sbb
adc
aaa
sbb
das
pop
aaa
test
sahf
int
and
pop
mov
add
cmp
ficompl
cmpsb
xchg
inc
dec
int3
inc
xchg
cli
pop
sbb
out
mov
out
dec
xor
and
aad
cld
dec
shrb
dec
sbb
int3
test
sbb
xchg
loop
lods
dec
pop
ds
js
jg
lods
add
xchg
cwtl
xchg
cli
cmp
les
iret
jnp
add
push
mov
test
xor
adcb
or
and
dec
mov
gs
cmc
cmp
lods
insl
mov
loopne
and
jg
movsb
idivb
data16
int3
pop
adc
pop
push
jle
scas
pop
out
mov
into
jno
and
scas
stos
add
int3
scas
add
adc
call
xchg
push
push
dec
mov
hlt
mov
test
or
cmp
mov
jne
mov
mov
pop
je
inc
add
loope
les
mov
mov
cwtl
sbb
xor
xchg
insl
xor
inc
out
and
movsl
mov
lds
sbb
add
jae
jl
and
xlat
adc
pushl
xchg
lahf
push
inc
iret
ds
push
or
fnstsw
jns
xor
cmpsb
or
xchg
insb
pop
orl
clc
and
leave
mov
cltd
lcall
js
xchg
fcmovne
daa
and
jge
movsl
leave
std
fildl
je
xlat
imul
mov
mov
repz
fld
int
lock
inc
xchg
mov
pop
push
and
iret
outsb
adc
js
dec
mov
dec
sub
cmpsl
mov
pop
inc
scas
mov
outsl
push
mov
or
addr16
fistl
scas
sub
pop
out
nop
test
mov
out
lds
xchg
push
inc
lock
xor
mov
xchg
mov
mov
jns
mov
idivl
adc
push
lea
in
lret
push
xor
lds
fmull
loope
mov
xor
addr16
subl
mov
pop
idivb
dec
xor
xor
fadd
mov
leave
cmp
mov
outsb
daa
adc
push
out
movsb
push
cld
pop
aam
lods
andb
lahf
mov
addr16
pop
cltd
sbbb
adc
aad
mov
mov
xchg
mov
push
addb
sub
mov
sbb
pop
xchg
push
adc
xor
mov
cmc
sarb
adc
sub
inc
fsubs
mov
cmp
xchg
cmp
cmp
or
jmp
inc
or
in
sti
mov
push
add
mov
in
xor
lret
int
xor
sbb
je
ja
bnd
daa
mov
push
sbb
dec
push
out
cwtl
scas
int
pop
push
lret
add
inc
imul
sub
mov
dec
out
out
adc
out
frstor
loop
cmp
jns
in
push
sub
sub
movsl
mov
and
sarb
add
or
cli
mov
addb
mov
mov
jae
mov
jbe
mov
xchg
adc
into
lret
mov
push
je
mov
mov
out
pop
inc
mov
clc
or
adc
mov
out
xchg
stos
pop
or
scas
pop
dec
jno
je
mull
push
sub
xor
icebp
in
sub
out
adc
mov
dec
fadds
shrb
rcll
pushf
pop
push
lds
fsts
outsl
ret
xchg
popa
mov
push
jbe
lods
cmp
mov
jl
aaa
ss
and
xor
addb
xchg
decl
lcall
shlb
lea
inc
rcrl
pop
test
sahf
mov
xlat
xor
or
insb
jmp
in
popa
test
cmpsl
or
jge
cli
sbb
dec
out
int3
repnz
aad
jae
lret
dec
movsl
movsl
mov
scas
sub
jecxz
daa
cmp
pushf
sub
les
xchg
std
icebp
cmpsl
lock
xor
inc
xor
push
jbe
icebp
adc
lahf
and
jge
movsl
sahf
out
data16
add
push
jmp
data16
sbb
icebp
jns
push
xchg
cmp
sub
jecxz
dec
fsub
mov
movb
cmp
shlb
cmc
xchg
inc
xor
icebp
out
aad
js
add
push
cmp
fldcw
add
aad
pop
xchg
cmp
std
mov
fs
outsb
in
mov
or
ficomps
or
addr16
mov
inc
enter
and
fdiv
mov
sub
aas
mov
dec
mov
sti
mov
push
sbb
or
es
lods
jnp
mov
mov
jmp
jge
gs
addr16
adc
mov
dec
mov
sub
aaa
int
pop
cmp
int
sbb
adc
insb
jl
vzeroall
scas
jg
les
clc
outsl
pop
sub
in
hlt
dec
mov
pop
jmp
mov
test
loop
outsb
pop
dec
inc
inc
fchs
movsb
sbb
arpl
enter
adc
out
mov
call
xchg
cld
sbb
fchs
inc
sub
dec
cmpsl
into
or
cltd
cltd
cmp
and
mov
ljmp
push
xchg
mov
fsubs
xor
xchg
jnp
or
pop
xchg
fcoml
lods
push
sub
mov
adc
mov
adcb
imul
lahf
cmp
xchg
or
test
inc
pop
sub
aad
sub
mov
xchg
test
loopne
push
repz
repz
jo
mov
fidivrl
in
mov
mov
icebp
dec
fstpl
adc
xchg
in
jl
in
pop
xchg
sbb
lods
add
jno
clc
dec
iret
out
dec
or
shrl
inc
or
or
stos
or
xchg
scas
xchg
icebp
shlb
imul
sbb
mov
pop
in
leave
iret
jns
ret
movsl
addr16
push
sbb
add
add
lock
lds
rcrl
adc
mov
int
push
push
ret
add
lahf
popa
mov
testl
scas
mov
scas
and
testl
das
fwait
arpl
bound
fisttpll
jp
mov
jb
cltd
adc
das
cwtl
xchg
jmp
xchg
or
stc
jge
mov
test
mov
jge
xchg
mov
dec
fdivrl
into
pop
sub
cmpsl
ja
sbb
mov
aaa
insb
cmc
mov
sub
sbb
xor
addr16
mov
in
mov
aad
push
fidivrl
cmp
xchg
popa
fisubrl
enter
repz
sbb
pop
sahf
mov
push
test
insl
pop
and
sti
pop
stos
and
push
cltd
mov
dec
xchg
cltd
popa
mov
cs
fsubrs
mov
or
inc
mov
add
pop
lea
cltd
mov
push
mov
popa
icebp
jp
sbb
mov
mov
cmp
js
xchg
add
cs
push
cmp
pop
ficoms
or
fwait
inc
sbb
fbstp
movsl
in
stc
mov
addr16
add
sub
mov
imul
orb
test
mov
cmp
mov
mov
ficomps
mov
pop
out
test
lahf
sbb
clc
cs
imul
pop
jne
lahf
hlt
loopne
xchg
cmpsl
xlat
add
adc
push
nop
ja
and
lods
call
and
add
ljmp
cmp
iret
or
fbstp
mov
pop
cmp
adc
jg
adcl
and
sub
orb
jbe
push
int3
xor
xchg
lods
pop
xchg
ret
out
insb
sti
bound
out
aaa
bound
data16
arpl
xor
add
add
inc
cmp
adc
in
xchg
pop
add
pop
add
mov
dec
add
add
pop
test
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
