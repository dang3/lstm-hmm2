sbb
add
jo
pop
nop
dec
xchg
inc
xor
inc
and
inc
sbb
mov
cltd
mov
ljmp
jnp
and
dec
orb
push
into
test
or
sub
icebp
mov
or
or
hlt
pop
andb
inc
scas
push
pop
add
and
and
jne
dec
xchg
jecxz
sbb
adc
inc
in
lods
sbb
shll
bound
arpl
and
or
imul
fildl
mov
je
mov
inc
sub
stos
cmp
lods
or
leave
adc
imull
imul
aas
mov
jle
pop
sahf
dec
sbb
loop
pop
pusha
shlb
aam
push
fmuls
or
push
out
ret
fcomps
call
mov
lods
mov
pop
push
cmp
pop
fistps
cmc
daa
xor
pop
mov
xor
dec
dec
push
lret
test
adc
les
pop
adc
test
pop
fldt
stos
stos
push
jb
stos
jge
sbb
xor
arpl
in
pop
movsb
ds
fs
push
adc
rol
out
outsl
psubsb
pop
out
pop
ror
mov
jmp
or
jb
xor
pop
push
adc
bnd
imul
xor
cli
dec
pop
push
fcmovnbe
int3
fldcw
jl
adc
sarl
jg
push
sbb
inc
js
lret
jne
cmp
movsb
hlt
push
cmp
lds
add
or
inc
shl
xchg
loopne
mov
mov
popf
icebp
adc
lds
sbb
int
rcll
xor
fwait
mov
int
rorl
cli
inc
jnp
push
scas
andl
sub
lods
insb
adc
into
cld
cmc
in
push
cmp
mov
clc
mov
push
dec
add
and
in
fcmovnbe
popa
xor
test
out
or
int
push
in
jae
stos
js
imul
sub
hlt
fadds
add
out
das
gs
jmp
ret
inc
mov
int
and
mov
fistpl
jnp
inc
inc
fs
pop
jb
add
xchg
cld
xor
add
dec
sbb
ss
inc
cmpsb
push
sahf
imul
cmpsb
adc
sbb
aad
test
pop
movsb
dec
fstps
orb
mov
cmp
or
mov
ja
cltd
dec
mov
aas
adc
lds
movsb
lahf
inc
dec
push
fidivl
inc
pop
or
stc
mov
cld
push
xchg
lret
test
test
sahf
adc
dec
inc
push
jno
jp
int3
int3
dec
mov
pop
cmp
mov
add
notb
push
xor
jno
test
pop
jnp
addl
in
pop
push
mov
dec
mov
mov
jnp
in
jnp
addr16
push
cmpsb
fldenv
push
loope
push
xlat
out
cmp
jle
add
xchg
xorb
loop
cmp
pop
fidivs
pop
mov
cli
jmp
dec
mov
scas
bound
pop
jb
hlt
gs
pop
mov
or
test
jns
add
loopne
sti
xchg
pop
cmp
add
arpl
imul
inc
sti
scas
imul
sbb
ds
out
pop
out
mov
mov
mov
js
ljmp
minps
jno
imul
sbb
sbbl
lds
push
push
mov
scas
mov
addr16
push
rcrl
clc
fidivl
test
pop
push
adc
sbbl
shr
lods
xchg
sub
dec
jg
inc
pop
inc
mov
aam
dec
push
or
jne
mov
mov
ror
sub
mov
and
mov
mov
xor
or
dec
leave
mov
mov
inc
dec
roll
jmp
mov
pop
scas
out
add
in
add
pop
fwait
nop
adc
test
mov
and
mov
repnz
xchg
dec
es
or
pop
mov
mov
arpl
pop
or
call
lret
xor
jecxz
rclb
cmp
jo
push
sub
leave
es
test
push
nop
gs
int3
das
dec
pop
xchg
push
push
add
mov
pushf
cli
stos
sahf
push
jno
cmpsl
imul
xchg
and
sbbl
mov
cli
pop
lret
pop
loope
mov
icebp
inc
jmp
mov
pop
jbe
ds
repz
push
mov
cli
outsb
test
in
ret
mov
pop
pop
dec
int3
dec
dec
or
sub
cmpsb
or
in
pop
jbe
out
and
and
jno
loop
int3
stc
in
jo
inc
es
jmp
mov
xor
pusha
cmpb
mov
push
mov
jecxz
push
cwtl
ss
xor
xor
rol
adc
and
cmpsl
and
mov
ret
push
fidivl
inc
adcb
mov
enter
xchg
xchg
and
mov
fwait
icebp
out
inc
fdivs
ja
rolb
adc
or
cltd
inc
sbb
ss
push
cltd
sub
xor
gs
out
fdivp
mov
xchg
into
int3
sti
and
cmp
insb
push
cmpsl
pop
adc
imul
or
rolb
lea
or
rorl
shl
icebp
and
adc
mov
mov
aad
scas
push
into
cmp
add
mov
cmp
xchg
push
addb
mov
mov
cmp
out
fisubs
fsubrs
dec
push
push
xchg
xor
pop
in
xor
mov
sbbb
pop
cwtl
fisubl
add
add
and
icebp
sub
jge
sbb
mov
pop
push
add
insl
cld
xor
outsl
shl
int3
push
outsl
out
sbb
inc
jecxz
and
mov
mov
sub
dec
push
subl
lret
pop
adc
call
rcrl
loop
lods
and
ja
mov
jmp
sbb
jbe
test
jg
jl
mov
or
stc
jne
dec
or
mov
lahf
push
jns
or
dec
dec
xchg
jnp
pop
jo
mov
and
mov
stos
cmpsl
loopne
gs
lret
push
and
test
xchg
lds
movsl
test
jl
mov
sti
sti
ljmp
std
hlt
adc
ret
sub
pusha
jle
sbb
popf
inc
push
dec
mov
mov
xor
sub
xchg
imul
inc
in
mov
aad
mov
scas
je
movsb
cmpsb
repz
pop
cmp
jno
icebp
dec
lods
cmp
test
jle
add
clc
push
adc
inc
jne
adc
or
out
aam
aas
mov
sbb
cmp
ja
ret
mov
fists
pop
testb
jnp
xor
pushf
and
and
mov
shl
inc
cmpsl
fcmovne
cmp
xchg
jno
push
clc
outsb
push
cltd
jp
jmp
pop
lods
mov
lds
orb
mov
test
push
cltd
adc
lahf
adc
int3
imul
push
cmp
outsl
rolb
adc
jb
lahf
inc
or
int
inc
data16
stos
push
xlat
pop
and
pop
pop
repnz
leave
jecxz
fadds
jne
inc
and
sub
movsb
dec
push
mov
cmpsb
mov
stc
inc
out
fidivrl
mov
mov
fisubrs
pop
push
adc
mov
je
mov
xor
scas
jb
scas
xchg
pusha
imul
push
xchg
addr16
cmp
add
add
inc
pop
jmp
jae
data16
push
lahf
repz
out
inc
jp
in
adc
pop
ljmp
and
sarb
cmp
repnz
test
or
int
lcall
sbb
test
inc
xlat
mov
clc
jo
sbb
cmpsb
mov
lahf
in
outsl
jecxz
mov
dec
nop
stos
and
outsl
iret
mov
jne
push
dec
dec
mov
xchg
ja
xchg
push
inc
and
xchg
mov
cmp
add
cld
jns
movsb
mov
fmull
mov
or
rorl
sbb
jns
shll
bts
jle
in
jecxz
xor
int
in
push
sub
cltd
inc
mov
cmp
push
inc
ja
push
push
lahf
loop
and
inc
lahf
xor
dec
or
popa
cmp
adc
int
mov
cmpsl
loop
scas
add
jl
jge
nop
sbb
pop
sti
jo
negb
and
lea
repnz
xor
inc
mov
pushl
movsl
mov
imulb
jne
sbb
call
cmp
pop
mov
xchg
andl
fcomip
push
mov
jl
loopne
pop
or
add
ja
insl
fldcw
cmp
xchg
xchg
push
xor
pop
bnd
jnp
cld
hlt
imul
adc
mov
mov
addr16
lock
std
add
mov
sbb
add
push
repnz
roll
jg
adc
sub
or
out
out
pop
xor
mov
in
or
repz
gs
jbe
scas
dec
push
jge
cld
jge
lods
xchg
xorl
test
cmc
movsl
ja
mov
into
lcall
popa
mov
nop
sub
sbb
rorb
add
sbb
je
jge
mov
je
sbb
or
cli
loopne
insb
jge
mov
jle
push
out
lods
out
popf
in
ret
jg
cwtl
inc
dec
pusha
imul
add
movsb
fs
sub
add
mov
das
cwtl
pop
mov
test
loop
sbb
jle
mov
loop
jle
cmp
sbb
cmpsb
loopne
and
cmp
dec
out
pop
or
jnp
pop
and
xchg
inc
loope
cld
scas
cmp
xchg
push
push
fisttpll
pusha
push
outsb
data16
sbb
sbb
add
fisttps
mov
repnz
and
lods
jl
add
fmull
je
fsts
frstor
cli
loop
sahf
xor
cmp
dec
jecxz
sub
sub
mov
xchg
or
js
xor
mov
je
lret
inc
pusha
push
jb
lods
cmp
cmp
cmp
lds
sbb
pop
or
push
stos
out
inc
pop
pop
mov
and
dec
add
outsb
out
notb
dec
or
lcall
add
inc
pop
or
cwtl
out
imul
mov
rolb
repz
notb
fsts
inc
enter
imul
lret
subb
sbb
rorl
inc
jl
push
out
jp
insl
dec
into
sub
fisubrl
add
push
imul
pop
pop
stos
into
sub
lock
mov
inc
mov
loopne
xchg
add
mov
inc
stc
xor
sbbb
lcall
jo
mov
ret
mov
inc
jge
adc
push
fstpl
sub
lock
in
or
rcll
jle
push
in
sub
out
sub
imul
pop
mov
push
xchg
jo
inc
cwtl
sbb
imul
rolb
ret
jb
push
xor
and
cmp
loop
cld
mov
lea
dec
adc
cld
hlt
ret
jns
mov
pop
js
je
ror
fidivs
cmp
sub
outsl
insl
imul
out
lret
mov
arpl
dec
jbe
insb
mov
fstps
mov
ds
ret
xor
andl
push
push
mov
cmp
or
or
xlat
xchg
ret
jns
div
pop
adc
ret
pop
cmp
mov
xchg
adc
ljmp
fmull
inc
push
cmp
sar
xchg
jnp
inc
cmpsl
mov
ret
mov
xchg
fs
lods
mov
inc
arpl
cmc
sbb
movl
add
mov
jnp
fdivp
daa
fbld
out
pop
add
fldt
loopne
fistpll
test
mov
add
xchg
pop
popa
lds
sahf
xorl
lods
mov
sub
fnclex
lods
mov
and
stos
push
inc
and
sub
outsl
push
adc
adc
and
mov
mov
addr16
fwait
or
cmp
lahf
xchg
pop
lahf
in
jp
or
mov
loopne
fs
test
in
adc
lcall
pop
cmpsb
lock
mov
bound
push
adcb
insl
stos
push
mov
mov
push
arpl
ss
addr16
clc
push
mov
cmp
dec
lcall
or
loopne
jno
add
pop
sub
mov
out
cmp
xor
sbb
xchg
cmp
rorb
filds
inc
pop
daa
shrb
insb
lcall
popf
fimuls
popa
cltd
cmp
fisubrs
push
push
add
ret
jg
bound
mov
fsubl
pop
push
cltd
cmp
pop
xchg
or
sbb
jbe
pop
xchg
lahf
filds
cltd
adc
lahf
or
cmp
mov
mov
push
hlt
or
fcmovb
mov
in
mov
pop
cmp
mov
xchg
in
icebp
fwait
xchg
fsubrs
mov
nop
push
iret
or
jae
frstor
pop
xchg
cltd
fadds
and
pop
mov
jl
adc
in
cs
push
sbb
shlb
int
mov
insl
xchg
into
sbb
das
ficoml
xor
shll
ljmp
mov
add
divb
dec
std
rclb
clc
push
mov
lahf
clc
pop
mov
mov
inc
ljmp
pop
hlt
insl
ja
aam
xor
les
outsl
or
mov
push
dec
iret
fcomp
sub
mov
push
sub
in
gs
sub
je
push
aaa
sub
movsb
cmpb
adc
or
ret
xchg
xor
in
insb
das
cmpsb
mov
ljmp
orl
fdivp
cmp
xor
stos
movsl
mov
into
js
mov
xchg
sbb
cmp
subl
leave
xchg
roll
mov
push
std
fwait
xchg
mov
in
movsb
in
and
add
sbb
pop
inc
gs
dec
lods
xor
mov
out
mov
xchg
mov
push
cmp
aad
out
icebp
adc
popf
push
mov
cltd
jecxz
fcomps
mov
adc
leave
push
sbb
push
xchg
xchg
and
adc
mov
test
repz
insl
test
and
jbe
cmp
inc
call
cmc
popa
or
test
jb
sub
push
sub
jbe
xorl
fnstenv
daa
mov
xchg
movsb
enter
add
xorb
push
xor
shrb
xor
pushf
int
shr
rolb
out
mov
outsl
bound
pop
pop
mov
daa
mov
addr16
or
sbb
xchg
popa
loopne
sti
push
fwait
imul
cmp
stos
push
loope
arpl
addr16
jae
xchg
fidivs
arpl
xlat
nop
sub
mov
and
rolb
cmp
mov
xchg
mov
push
mov
pop
dec
sub
test
in
xchg
mov
aam
int3
jne
xchg
dec
inc
dec
cs
cli
in
xchg
les
jl
add
mov
les
jb
sbb
test
mov
mov
add
mov
test
call
popf
sub
sub
les
dec
mov
loopne
sbb
dec
iret
and
ja
push
rcrl
cmp
pop
loope
aam
shl
jl
in
hlt
js
shlb
je
lds
push
ljmp
xlat
pop
xchg
arpl
mov
xor
sahf
in
cmp
add
inc
ss
cli
repz
std
and
sahf
shrl
or
cmpb
lds
lods
xchg
cmpsb
mov
mov
negb
mov
outsl
sti
mov
outsl
test
ljmp
sub
push
ss
nop
adc
xchg
push
xorl
mov
dec
xchg
sarl
aam
outsb
add
les
or
mov
mov
into
jno
and
lds
and
mov
pop
mov
jb
stos
push
dec
xor
rcl
ret
daa
fs
shr
push
cltd
pop
dec
out
pop
xor
or
fwait
mov
fsts
push
lahf
fimuls
add
fs
inc
and
inc
sub
mov
notb
mov
inc
mov
pushf
mov
fstpt
rcr
adc
jo
cmp
aas
aas
inc
out
stos
adc
and
rclb
data16
cmp
xchg
rclb
jp
pop
add
mov
or
stos
hlt
sbb
ficompl
shr
aam
sbb
mov
cld
into
mov
iret
bound
xchg
daa
mov
push
ret
or
inc
push
mov
add
sahf
repz
lret
test
out
scas
fiadds
jmp
fdivrs
stc
lret
and
outsb
push
js
scas
and
add
push
mov
mov
mov
int3
jp
cwtl
mov
ds
cmp
dec
jne
in
rorl
scas
xlat
cmp
insl
out
cwtl
filds
add
push
hlt
stc
test
or
push
inc
mov
into
mov
jecxz
stos
daa
in
shll
es
insl
lods
enter
xor
dec
cmp
mov
jb
out
xchg
das
fdivl
sarl
cwtl
outsb
sub
jle
dec
outsb
mov
mov
ror
bound
adc
inc
push
mov
dec
sahf
inc
fistpl
xchg
pop
sti
ret
or
jmp
jp
mov
inc
jp
pop
ss
cwtl
insl
or
lret
pusha
and
mov
or
jmp
or
out
push
jnp
sbb
fsub
jno
dec
adc
adc
dec
pop
sbb
fistpl
or
cmc
sbbb
je
test
and
or
pop
popa
push
mov
push
or
into
insb
and
rorb
arpl
jb
add
std
cmc
and
xchg
mov
jmp
add
xchg
data16
enter
pop
jns
jl
cmp
sbb
repnz
faddl
or
jle
fimuls
push
jge
test
adc
pop
pop
and
scas
movsb
jae
stos
stos
xor
xchg
lahf
or
sub
andl
xlat
jge
lds
sahf
push
inc
rcrb
add
jmp
jmp
in
cltd
sahf
rcr
in
loop
jnp
outsb
adcl
add
sar
loopne
sbb
lcall
cwtl
loope
rcl
push
push
dec
mov
loope
in
adc
sbb
cmpsb
mov
xor
test
dec
and
nop
psrld
mov
outsl
arpl
or
mov
cli
xchg
mov
push
std
fsubl
push
jg
clc
xor
jo
insb
xor
movsl
je
or
sbb
add
cltd
xchg
popa
sti
js
jp
push
daa
call
add
mov
out
push
dec
sub
adc
ja
xor
gs
sbb
leave
sbb
js
ror
dec
jp
lcall
inc
jp
das
jle,pn
cmp
add
push
stos
arpl
adc
aam
jecxz
popa
imul
pop
sub
or
out
cli
std
movsb
mov
push
mov
shl
test
test
pop
sbb
or
mov
or
lcall
push
addr16
lret
aam
dec
test
push
ljmp
jbe
xchg
enter
mov
daa
mov
cmp
sbb
dec
fadds
jge
inc
mov
dec
adc
imul
nop
bound
adc
sbb
mov
aad
test
mov
incl
stc
inc
ficoms
jl
or
es
mov
test
mov
mov
pop
or
dec
loope
adc
aaa
mov
push
ds
mov
adc
jge
fbld
sub
sbb
lea
adc
jne
lret
fsubl
mov
mov
inc
test
xor
ret
jns
push
mov
push
mov
in
push
and
xchg
jb
sahf
dec
aaa
inc
aas
sbb
jecxz
jnp
xor
lcallw
stos
xor
xchg
out
imul
faddl
mov
mov
jg
out
push
fmuls
lds
mov
in
push
pop
adc
bound
jbe
sub
push
fsubrl
mov
outsl
rcrb
push
jbe
sbb
loopne
stos
jno
out
push
add
sub
sbb
roll
aas
mov
jne
pop
xchg
xor
push
mov
sub
sub
mov
and
push
jno
dec
xor
cmp
and
sbb
rcll
cmp
cmp
push
clc
je
mov
pop
mov
add
cmp
arpl
fucomip
xlat
xchg
adc
inc
inc
fsubl
adc
mov
cmp
and
pop
jg
xchg
jge
hlt
mov
call
lret
and
pop
leave
push
xchg
and
mov
inc
imul
rcrl
push
push
loop
lret
out
and
popa
adc
cltd
ret
adcb
icebp
jge
inc
inc
in
and
adc
cs
cmp
jp
xchg
push
push
jns
cmpsl
add
cmc
mov
push
jbe
add
aaa
jne
jge
stos
mov
push
ds
hlt
outsb
mov
fbstp
loop
into
popl
arpl
inc
fnstsw
push
push
mov
mov
mov
mov
stos
mov
add
xchg
lcall
lods
sub
movl
push
mov
cmp
insl
cmpsb
loop
loopne
ffree
gs
mov
sbb
xchg
or
push
cmpb
outsb
rcll
xchg
mov
xor
jb
rcl
mov
cmove
icebp
cltd
lret
push
xor
ja
repz
test
lds
adc
aad
dec
test
mov
jge
xchg
icebp
jns
shrl
mov
fldl2e
push
pop
mov
mov
mov
arpl
inc
lahf
je
dec
clc
inc
pusha
pop
adc
mov
xchg
fs
jno
jge
sub
adc
lretw
add
jo
test
xchg
fidivl
repnz
test
mov
xor
or
sbb
mov
cld
pop
xchg
push
jnp
shll
mov
fcompl
pop
dec
inc
inc
mov
movsb
adc
add
das
push
pop
sub
pop
sbb
sub
stos
call
pop
pusha
mov
xor
sub
dec
jl
sbb
popl
aad
stos
jne
fstpt
push
push
add
adc
and
inc
lock
rcll
hlt
xchg
sub
sub
fisttpl
jmp
cmp
xor
cmp
pop
outsl
ljmp
jmp
fmull
mov
gs
movsb
out
pushf
std
rorb
loopne
push
xor
push
pop
test
sub
jmp
xchg
pop
push
mov
push
das
dec
std
aad
xchg
mov
cltd
pusha
and
and
adcl
out
loop
out
jecxz
lods
push
testb
repz
mov
icebp
push
nop
cmp
push
shlb
test
call
das
adc
data16
mov
dec
add
jo
and
cmc
mov
es
dec
sbb
stos
shlb
xor
xchg
in
cli
xlat
imul
xchg
ret
imul
popf
mov
mov
loopne
rorl
shlb
xchg
sbb
inc
push
loopne
leave
ret
dec
lret
test
jbe,pn
lret
fsts
jp
xor
cli
or
push
cmp
mov
aas
iret
addr16
pop
rcrb
lcall
jmp
and
leave
daa
jp
cmp
xor
sub
lock
cmp
loope
jmp
ljmp
dec
xor
sub
xchg
aam
adc
mov
xor
adc
or
mov
push
lock
mov
subb
ljmp
jmp
mov
cmp
addb
jmp
es
lds
movsl
mov
cmp
and
push
pop
stos
addr16
lcall
cmc
and
or
cmpl
add
lea
fbstp
adc
aam
std
in
int
add
pop
subl
clc
ficoms
movsb
jb
mov
das
lahf
or
rolb
and
mov
cltd
and
mov
jg
ljmp
ret
adc
push
sub
mov
stc
out
test
adc
icebp
lods
inc
sahf
add
aam
movl
sbb
mov
cmpsl
xor
unpcklps
and
aas
icebp
dec
ds
xchg
iret
push
sub
jg
stos
ja
in
add
pop
sbb
cmp
gs
or
subl
jns
adc
jecxz
ja
lock
pop
jb
in
shl
es
sar
pusha
fsubp
bsf
mov
mov
dec
das
popf
call
mov
test
fs
and
inc
test
imul
in
xlat
jmp
jbe
add
xor
lock
insb
daa
hlt
pop
stos
jg
popa
in
loopne
mov
leave
mov
pop
xor
out
mov
iret
dec
gs
popf
jne
push
xchg
dec
push
lods
daa
fwait
push
jge
adc
mov
and
std
or
jl
shlb
adc
adc
inc
lea
jp
dec
pop
mov
jl
dec
jmp
mov
test
aad
and
jo
xchg
sbb
cld
mov
mov
or
jnp
aad
das
or
mov
lods
daa
test
add
inc
cmpsb
mov
xor
adc
call
xchg
xor
and
dec
sbb
scas
cmp
inc
scas
inc
mov
pushf
add
loopne
mov
repnz
jmp
add
sbb
jne
andb
aad
ud0
addr16
lcall
roll
stc
mov
outsl
insb
cwtl
outsl
xchg
icebp
jge
movsb
lea
packssdw
xor
mov
filds
add
mov
adc
jl
dec
jp
jo
and
addr16
mov
jle
popf
ficoml
cmovle
movsb
out
xlat
sub
or
shl
mov
imul
sarl
add
jle
add
testb
cs
pop
out
xlat
sbbl
in
sbb
pop
imul
ret
mov
xor
insl
loopne
movsb
lahf
leave
fdivrl
cmpb
add
jmp
xchg
push
mov
adc
xor
jae
sub
add
out
test
cmp
int
aad
das
push
fsubl
les
mov
mov
dec
movsb
nop
jo
mov
add
fisubs
scas
cltd
mov
leave
out
enter
xchg
scas
xchg
addl
shlb
notb
xchg
add
mov
fadd
adc
and
mov
ja
pushf
mov
js
mov
adc
and
bound
and
push
shll
dec
leave
jns
cld
movsb
test
push
jp
xchg
push
dec
stos
and
mov
adc
fisttpl
pop
out
jg
repnz
test
out
add
sub
pop
cmp
and
mov
cltd
mov
out
xchg
pop
push
popf
fisubrs
push
mov
inc
push
fstpl
mov
inc
arpl
outsl
push
add
repz
pop
xchg
mov
popa
pop
inc
push
push
xchg
pop
mov
xlat
fstpl
out
mov
jge
jo
fidivrl
jo
add
lahf
loop
sbb
and
jo
xchg
mov
lcall
sub
sbb
mov
inc
cmp
push
in
lcall
add
pop
and
sbb
or
mov
dec
mov
sbb
cmp
gs
pop
fimull
xor
nop
dec
jno
stos
sub
and
inc
push
pop
dec
mov
and
sub
mov
and
js
lret
sbb
push
inc
repnz
popf
add
ss
cmp
std
std
fsts
xchg
dec
jmp
and
mov
pop
push
inc
xchg
arpl
xor
lea
adc
arpl
pop
bound
cmpsb
popf
dec
pop
insb
jnp
push
sahf
and
add
cld
jmp
je
mov
push
stc
das
gs
outsl
mov
pushf
js
jl
enter
dec
sub
xchg
aam
in
add
int
popa
out
pop
sbb
or
clc
paddusw
fmul
mull
cld
dec
rorl
mov
push
or
loop
jmp
call
scas
fcmovu
es
xchg
pushf
mov
mov
sub
out
movsb
loop
mov
or
jle
mov
enter
mov
cwtl
xor
xlat
daa
mov
lahf
es
xchg
dec
fimull
imul
cmc
stos
loop
ds
int
in
xchg
and
xchg
adc
test
rol
sub
xchg
xchg
push
sbb
push
inc
add
imul
inc
dec
adc
ja
ds
xchg
inc
cmp
fdivrl
repnz
jmp
sbb
cltd
xchg
push
scas
or
mov
inc
arpl
inc
sub
push
fwait
sub
sahf
test
xor
rcrb
ljmp
sbb
pop
test
and
cmp
lret
movsl
xor
mov
popf
jb
sbb
in
sub
push
sti
or
jbe
add
mov
or
dec
push
xchg
stos
xor
bound
sbb
loope
les
mov
add
leave
jecxz
push
cmp
mov
and
shll
loop
push
insb
mov
inc
and
xor
aam
xchg
repnz
in
jno
mov
mov
jmp
daa
mov
mov
push
out
movsl
pop
pop
xor
ss
shrb
cmp
mov
orl
std
rcrb
je
cmp
sub
adc
jno
push
pop
aas
test
or
sub
out
pop
fiadds
out
xor
pop
arpl
sub
enter
inc
hlt
rolb
movsl
fwait
pop
test
push
inc
and
addb
cmp
dec
mov
xchg
mov
cmc
and
sahf
fimuls
js
xchg
imull
xor
repz
sbb
jl
dec
aam
push
or
stc
jle
shl
cmp
fimuls
jmp
es
stc
in
cs
pop
mov
jno
mov
jbe
add
mov
pop
lret
cmp
ret
inc
jb
lret
loop
popf
mov
xchg
mov
cs
addr16
pop
and
ljmp
and
idiv
sub
shll
inc
enter
adc
mov
mov
pop
mov
sbb
subl
inc
xor
movsl
inc
popa
in
shrb
add
repz
js
fildll
sbb
int
fdivrs
subb
sub
jp
adc
ficoml
test
pop
adc
ret
adc
popa
jecxz
add
cwtl
and
lea
mov
xchg
js
outsb
orb
and
mov
mov
dec
mov
sbb
or
ret
adc
cmp
insb
clc
and
push
subb
std
nop
ret
popf
add
jle
mov
movsb
int
popf
fstpt
mov
stos
hlt
sti
loope
jnp
pop
or
in
ret
icebp
push
das
adc
sub
push
xor
mov
aas
leave
pop
icebp
cmc
dec
mov
outsb
stc
mov
jae
add
and
xchg
outsl
or
in
js
jecxz
sub
minps
and
mov
xchg
mov
aad
adc
dec
enter
cmp
pop
mov
cmp
or
add
dec
add
xor
daa
mov
sub
pop
mov
pushf
xor
xchg
cmp
mov
pop
dec
sbb
inc
xchg
cmc
pop
xor
push
adc
mov
jns
sub
scas
push
bound
rolb
jg
inc
inc
mov
loopne
sahf
lds
in
test
or
mov
cmp
fwait
xor
outsl
jle,pt
in
sub
pusha
out
jne
mov
cmpsb
mov
mov
loopne
inc
icebp
cli
lods
es
xchg
adc
scas
adc
pop
pop
inc
xchg
mov
mov
xor
fnsave
jecxz
hlt
movsl
inc
mov
fisttpll
in
jmp
rorb
pop
add
mov
dec
es
dec
js
lea
mov
aaa
adc
jnp
mov
rorl
jnp
lahf
jnp
inc
push
or
or
rorl
or
lcall
out
leave
cmp
add
es
mov
jo
jne
jno
loopne
loopne
jb
cmpsb
mov
rcll
inc
cltd
ret
add
push
xchg
shl
mov
push
and
ffreep
loop
insb
lcall
sbb
enter
cltd
mov
push
leave
add
cmc
arpl
sbb
xlat
and
daa
int3
lods
nop
leave
lods
loopne
imul
loop
jnp
or
add
movsb
fcompl
push
mov
jecxz
adc
data16
shlb
pop
dec
xor
ficoms
cld
xor
xor
test
cwtl
icebp
cmc
test
jno
je
insb
hlt
in
push
ror
scas
insb
jecxz
or
in
lret
xchg
fstps
sahf
dec
div
inc
rcll
mov
aaa
add
dec
jg
lods
mov
shrb
push
sti
pop
loop
out
aam
add
cwtl
xor
cmc
or
mov
faddl
scas
mov
mov
enter
gs
orl
jmp
out
movsb
adc
mov
inc
in
pushf
lds
dec
mov
xor
dec
addr16
hlt
testb
jge
jmp
push
pop
inc
push
push
mov
xor
imul
cmp
mov
jno
dec
inc
pusha
cmc
pop
sti
sbb
daa
dec
or
cmp
adc
adc
call
dec
dec
jne
scas
dec
outsb
adcb
adc
push
or
mov
loop
cmp
inc
xchg
dec
ljmp
idivl
imul
and
push
jns
cld
lods
int
in
dec
sub
jns
mov
cmp
mov
ret
push
sub
out
cmpsl
cmpsl
test
ss
adc
adc
pusha
mov
jbe
inc
outsl
iret
daa
in
lock
dec
cmp
mov
imulb
sbb
jbe
or
jmp
xchg
dec
vphaddudq
in
das
inc
or
mov
hlt
orb
gs
out
sub
fsubl
adc
and
in
xor
ret
enter
inc
das
or
movsb
xor
clts
push
push
loopne
out
push
sbb
mov
dec
bound
adc
popa
nop
push
add
outsb
leave
cmc
test
notl
or
sbb
xor
sub
aaa
stos
icebp
sub
cmc
xchg
imul
xchg
push
pushl
iret
or
jmp
xchg
into
or
flds
and
mov
mov
lcall
adc
cld
mov
fdivl
push
loopne
xchg
movsb
pushf
and
lds
jge
mov
xor
fistl
pop
xor
adc
or
sbb
ja
ljmp
jno
inc
mov
xor
mov
xchg
scas
mov
add
data16
sub
das
icebp
dec
cli
push
xorps
mov
test
sahf
xchg
push
dec
and
imul
call
bound
push
xchg
test
and
pop
mov
adc
dec
imul
mov
jne
mov
add
and
in
mov
ret
stos
fs
frstor
lds
fbld
cld
in
and
mov
out
cmp
leave
sbb
subl
fs
lds
cmpsb
mov
scas
push
cs
rcll
loopne
fldl
or
add
mov
inc
ja
aam
push
mov
in
pushf
sbb
sub
fstl
pop
xchg
rcrb
mov
loop
fcmovb
fmul
addr16
repz
push
mov
dec
ja
cs
scas
push
mov
bound
in
push
pushl
pop
dec
test
lret
fs
jns
leave
or
sub
cwtl
dec
xchg
mov
and
adc
xchg
pop
sub
xchg
cmpsl
mov
sar
ljmp
xor
std
and
and
js
movsb
xchg
nop
lcall
cs
add
je
filds
flds
lods
mov
frstor
dec
add
push
and
mov
pop
aaa
rcrl
inc
mov
fwait
xor
inc
jnp
push
lcall
hlt
and
pop
push
shrb
mov
xor
mov
inc
icebp
outsb
inc
add
pop
scas
mov
fimull
adcl
adc
fildll
sub
in
jo
bound
push
mov
orb
cmp
ljmp
imul
xor
sbbl
mov
es
jecxz
aas
testl
and
rcll
mov
lret
test
dec
sahf
insl
mov
mov
push
push
ret
aad
fnstenv
test
insb
push
es
pop
sub
push
sbb
push
or
mov
jo
jb
and
int3
cmp
xchg
inc
js,pn
dec
cmp
adc
aam
nop
pop
mov
sbb
in
xor
bound
in
cmp
inc
jl
mov
cmp
movb
divl
enter
aam
aad
pop
test
pop
rolb
dec
mov
fsubr
and
sub
push
mov
movsl
xor
out
and
xchg
mov
jno
sub
in
mov
les
and
sbb
jnp
test
jbe
in
adc
jp
xchg
and
lock
jb
or
cmc
popf
test
cmp
pop
std
mov
adc
pop
xchg
lahf
loopne
pop
scas
insl
mov
into
daa
out
es
stos
sbbb
push
rcl
scas
cmpsl
and
out
xchg
rorl
mov
cmpsl
dec
push
push
sahf
xlat
pop
test
mov
pop
addr16
cmp
cmp
push
mov
pushf
stc
fwait
xchg
add
xlat
and
xchg
es
into
push
mov
xor
and
add
xor
mov
push
leave
pop
pop
push
enter
mov
fdiv
rolb
mov
push
popa
data16
or
jbe
inc
sahf
mov
pop
cmp
sarb
rcll
sbbb
es
sub
cwtd
push
loope
inc
loopne
sub
xor
jns
inc
out
jnp
stc
xchg
fs
ret
mov
movsb
out
fimull
cmp
fldcw
movsb
stc
inc
dec
mov
dec
loope
rcrl
jb
and
popf
loopne
push
dec
xchg
push
add
adc
outsb
dec
nop
pop
in
les
sub
dec
fucomp
jg
xchg
fadds
cmp
in
scas
or
sbb
or
push
pop
pop
call
mov
repnz
sbb
leave
sbb
loop,pn
lods
xor
iret
inc
mov
xchg
mov
mov
dec
jae
shlb
xchg
xor
jl
aam
int
xchg
or
mulb
xchg
faddp
jle
mulb
mov
xor
jnp
pop
loopne
jns
insb
jb
mov
mov
loope
lods
outsl
dec
inc
inc
inc
add
sahf
pop
xorb
xor
xchg
movsl
leave
leave
notb
or
dec
pushf
std
inc
jl
mov
mov
and
jp
cmpsl
jbe
fcomps
gs
cs
int
add
je
xor
in
int
or
inc
jo
sbb
mov
lock
cwtl
lock
fwait
addr16
and
repz
fbld
mov
add
sti
cmp
popa
rep
dec
mov
mov
aam
mov
sbb
cmp
fnsave
sahf
push
dec
sbbb
cltd
cltd
js
mov
divb
decl
push
push
sub
cwtl
pop
mov
fildl
lds
aam
in
inc
add
stos
ds
xchg
out
inc
testl
push
lock
sbb
cmp
pop
sti
xchg
jbe
xor
inc
dec
fs
repnz
xor
dec
cmpl
mov
jg
popf
push
dec
out
fsubp
pop
cmpsb
mov
mov
movsl
add
inc
pop
cli
mov
mov
cmp
mov
dec
push
add
inc
mov
lea
mov
je
ljmp
xor
in
pop
ret
lret
icebp
adc
xchg
xor
xchg
add
out
sub
jnp
in
adc
add
sbb
es
mov
jecxz
sub
call
out
sbb
mov
mov
cmp
mov
and
push
neg
sti
sbb
test
call
fsub
fistpl
mul
popf
push
daa
add
mov
jp
fcmovnbe
mov
jbe
les
sbb
arpl
or
jmp
popl
or
cmp
fstpl
dec
cwtl
jl
popa
push
testb
sbb
stos
pop
xchg
xlat
loop
shlb
xor
repnz
test
xchg
int3
mov
imul
outsl
mov
push
ud1
std
mov
cmp
loop
loope
sti
push
jb
xchg
adc
cmp
int3
clc
inc
mov
and
aaa
or
xor
push
jmp
fsubrs
add
cmp
jl
mov
xor
insl
stos
xchg
sub
mov
cmp
sub
mov
or
pop
popf
insl
daa
leave
and
jnp
xchg
or
iret
lock
cmp
shlb
je
lods
push
dec
cli
pop
mov
xor
xor
inc
out
or
outsl
fisttpll
pop
mov
mov
fsubrp
stos
test
test
sbb
stc
fdivrs
aaa
daa
xor
stos
cli
shr
rolb
leave
fistl
or
out
inc
inc
adc
pusha
sbb
sub
in
sarl
pop
ret
xchg
mov
fstps
scas
fisttps
bound
mov
rclb
jmp
imul
jns
sahf
scas
pop
lea
add
pop
scas
jl
lcall
mov
stos
aaa
adc
aam
cli
jb
popf
push
add
fisubrs
xchg
cltd
inc
pop
pop
movd
push
sbb
fcmovnbe
ja
dec
negb
xchg
cmc
sbb
cmp
jns
adc
sub
and
jns
hlt
jb
sbb
and
adc
js
mov
xchg
fstps
jne
loope
jae
jmp
or
jg
jle
cmpl
or
aaa
ljmp
cld
sahf
or
loope
xchg
mov
sete
mov
in
subl
insb
test
lds
lcall
test
sbb
cs
cmpsb
out
cld
xor
mov
cmc
sub
loop
adc
movsb
sub
es
shrl
cs
cmp
cvtps2pi
cmp
xchg
xor
lods
aam
lcall
es
ret
mov
mov
in
pop
shr
repnz
push
mov
and
jae
fcmovne
notb
test
pop
adc
or
and
jne
into
std
jno
and
or
lock
sub
rclb
fisttpl
and
fistps
cmp
xor
inc
adcl
mov
cmpsb
je
jae
rcrb
mov
repz
mov
sbb
arpl
bound
or
mov
test
fcmovbe
lahf
inc
pop
andl
xor
add
xor
sub
fwait
pop
pop
inc
into
pop
in
scas
andb
pop
in
jl
sub
or
sub
jbe
xchg
cltd
jp
je
adc
movsl
inc
gs
js
outsl
push
scas
push
movsb
mov
leave
pop
push
lea
or
data16
scas
test
mov
mov
mov
jo
pop
push
adc
dec
mov
inc
fcom
pop
imul
sbb
pop
jae
dec
push
xchg
pop
xor
inc
or
sbb
ss
pushf
out
stc
mov
mov
pop
int
fucomip
pusha
and
dec
xchg
scas
into
inc
pusha
insb
in
jne
inc
cmp
and
lahf
shlb
push
or
mov
in
ljmp
test
addr16
sti
xchg
dec
arpl
mov
mov
imul
mov
dec
jns
stc
pushf
out
movsb
test
fildl
mov
or
pop
dec
dec
push
pop
xor
dec
cltd
mov
int3
or
xor
lret
push
mov
push
cld
es
and
adc
jecxz
xchg
mov
lahf
jae
nop
ss
mov
imul
sbb
push
xchg
fadd
mov
inc
ss
lcall
mulb
repnz
pop
sub
clc
aaa
cmpsl
loope
addr16
cmc
mov
decb
ror
and
shl
ljmp
sbb
mov
int3
pop
sub
out
adc
cmp
cmp
cmp
stos
sbb
xlat
nop
cs
fidivrl
xchg
xor
or
lret
mov
and
dec
jns
pop
lret
mov
ror
js
xlat
scas
cmpsb
mov
xor
rclb
add
ret
mov
dec
ret
loopne
push
sbb
push
cld
xchg
fiaddl
mov
push
lcall
xchg
test
addr16
xorl
inc
inc
pop
pop
xchg
addr16
out
inc
lret
jno
aad
sbb
jns
es
push
loop
cmpsb
jge
jle
jb
pop
jmp
add
cmp
adc
scas
jge
xchg
xchg
arpl
cli
add
or
fnstenv
dec
add
cmp
cwtl
icebp
rolb
xchg
js
fucomp
aad
mov
test
pop
sbb
mov
int
out
add
xor
and
mov
je
stos
add
mov
popa
inc
mov
jmp
sbb
pop
jecxz
push
repz
dec
or
fimuls
int3
mov
clc
clc
sub
inc
inc
lcall
sti
push
mov
push
pop
inc
add
imul
fsubrl
sbb
outsl
lods
out
mov
xor
xor
cmp
push
inc
cmp
cwtl
push
jle
pop
out
mov
mov
jg
dec
lahf
jne
ds
mov
es
jns
call
cld
ffree
mov
in
push
addr16
push
cmp
sti
lahf
fmuls
stos
mov
sub
sbb
fs
push
test
ficomps
mov
imul
adc
cs
inc
cmp
fnstcw
lods
dec
cmp
testb
scas
cmp
sub
ret
je
int3
lods
in
imul
fidivl
movsb
mov
inc
hlt
hlt
add
repnz
or
lea
arpl
sahf
adcl
jbe
ret
adc
clc
aam
fbld
int
imull
mov
cmpsb
je
push
out
adc
insl
aas
rcl
insb
mov
insl
mov
push
cmpsb
lds
inc
lock
push
fistps
xlat
mov
popa
inc
ljmp
icebp
jne
test
fs
mov
divl
cld
or
fwait
mov
jnp
mov
lret
adc
xchg
cwtl
adc
cmpsb
nop
mov
cmc
bound
sti
iret
xchg
repnz
mov
inc
in
mov
and
int
ja
dec
sbb
scas
je
mov
inc
in
js
sbb
jns
movsl
repz
adc
xchg
fwait
push
addr16
sub
cld
dec
or
adcl
jmp
hlt
je
adc
mov
mov
push
inc
cmp
jl
and
aas
inc
cld
lods
insl
sub
adc
iret
loopne
pop
pop
test
or
test
xchg
jns
push
add
mov
testb
mov
xor
mov
or
stc
cmp
xchg
mov
pop
dec
fwait
ss
adc
pop
inc
shlb
mov
lret
icebp
inc
pop
pop
leave
mov
push
mov
or
lcall
repz
pop
shlb
ret
das
cmp
arpl
sbbb
lcall
xchg
mov
cmc
test
mov
test
jmp
cmc
movsb
dec
in
hlt
cmp
jmp
jnp
add
lods
mov
insl
icebp
leave
and
sbb
adc
add
aaa
jp
xchg
loopne
fstpt
jle
push
into
inc
push
std
aad
pop
jle
ds
add
mov
sti
scas
adc
push
jns
mov
xlat
dec
mov
daa
mov
ret
test
stc
outsb
push
movsb
inc
push
repz
jmp
pop
insb
jo
shll
push
mov
inc
insb
icebp
mov
jmp
inc
scas
lcall
xorl
test
dec
test
and
lahf
popa
test
sub
lahf
insb
in
mov
ret
sub
cmpsb
mov
lods
mov
jbe
gs
xchg
mov
cmp
dec
pushl
jns
or
repz
lret
ja
mov
mov
movsb
out
add
aam
aaa
mov
popf
lods
insl
sbb
aad
ja
lock
int
and
les
jle
clc
sub
pop
pushf
out
xor
push
jo
ret
cmc
fldenv
xchg
repnz
jb
add
mov
add
push
mov
jecxz
mov
sahf
mov
fcomps
insl
push
test
cmp
add
push
cs
mov
pop
mov
mov
jns
and
and
push
mov
imul
sbb
mov
pop
imul
push
inc
or
dec
mov
cmp
repnz
push
mov
adc
popf
bound
mov
scas
ss
jl
pop
xor
roll
lods
out
rolb
iret
lods
xchg
mov
push
popf
cmp
dec
cmp
test
lods
xor
adc
int
movsl
xor
xchg
fcomi
mov
addr16
or
push
add
data16
mov
xchg
xorb
xor
dec
push
icebp
adcl
nop
mov
fistpll
mov
mov
jo
jns
adc
ja
xchg
push
or
pop
repnz
enter
adc
cwtl
dec
jmp
insb
sub
test
mov
lock
hlt
adc
pop
xchg
fs
adc
mov
and
mov
xor
jecxz
sub
mov
iret
and
cmp
bound
stc
test
les
ja
lahf
cmp
addr16
in
xchg
into
xchg
cwtl
push
mov
int
dec
int
popa
mov
ffree
adc
in
jle
iret
es
cld
pop
out
sub
rorb
int
repnz
int3
js
not
dec
adc
mov
cmc
mov
xlat
ret
inc
ret
mov
lahf
mov
and
es
adc
in
xchg
mov
shr
xchg
add
sub
and
ficoml
cmp
adc
cmc
lock
cmp
std
ds
cltd
inc
cmp
rcl
loopne,pn
mov
mov
pop
in
or
push
outsb
lock
in
loop
add
ret
fucomip
mov
movsb
icebp
adc
out
mov
arpl
into
sbb
jle
sbb
dec
data16
into
inc
pusha
loop
cmp
push
pop
cmp
fildll
outsb
pop
adc
cmp
jns
xchg
aam
push
movsb
movsb
mov
xlat
call
xchg
sbb
lcall
fisubl
xchg
cld
stos
jae
sbb
jp
add
or
adc
xchg
dec
hlt
and
sub
sbb
lcall
loop
mov
fwait
mov
fidivrs
outsl
jp
lods
mov
cmp
push
scas
pop
bound
cmp
cld
dec
outsl
stos
mov
jmp
out
rcl
xor
roll
mov
jbe
testl
mov
jb
js
xchg
mov
lret
or
mov
xchg
leave
nop
or
outsl
pop
jmp
mov
imul
and
shll
fcoml
jp
pop
and
jecxz
out
insl
adc
cwtl
xchg
into
pop
xor
fwait
xchg
jbe
or
test
pop
adc
popa
ficompl
outsl
into
jbe
fst
cmp
and
jge
lret
add
lock
mov
stc
cwtl
mov
in
cmpsb
mov
pand
and
ret
inc
insb
lahf
into
add
mov
ljmp
pop
cmp
insl
mov
or
inc
xchg
and
mov
inc
imul
bound
js
popf
or
nop
jae
movsb
mov
pop
fidivrs
cmp
push
cwtl
add
dec
or
fiaddl
popa
sub
ja
in
xchg
loope
loop
les
add
or
dec
sub
fsubrs
movsb
scas
push
repz
ja
lahf
sahf
es
jmp
push
movsl
xor
xchg
pop
add
adc
push
ficomps
push
sub
xor
lea
test
negb
mov
in
stc
test
arpl
add
xchg
lcall
jnp
and
push
dec
scas
das
push
cli
push
inc
movsb
push
cmpsl
lea
imul
jbe
push
repnz
add
mov
test
jns
scas
call
add
jmp
std
mov
cmp
ds
pop
or
aam
icebp
xor
enter
fistl
mov
sub
js
aad
cmp
or
les
dec
loopne
loopne
xor
and
mov
bnd
loop
sbb
and
fbld
cmp
fwait
aam
adc
mov
dec
hlt
and
aas
push
fstps
sub
mov
inc
sub
or
or
lret
lea
adc
xor
hlt
imul
or
xlat
test
cld
dec
xor
sub
jne
fs
ret
sahf
xor
es
cmp
lods
or
vxorpd
in
xchg
mov
and
in
mov
pop
dec
lahf
sub
leave
cmp
insl
fsubrl
clc
sbb
pop
in
popf
xchg
jmp
outsb
shlb
or
test
stos
mov
adc
aad
es
lods
mov
add
push
mov
sbb
push
dec
xchg
ret
lret
adc
scas
out
stos
fmuls
xchg
movl
mov
inc
inc
sbb
ds
or
jne
add
bound
push
out
mov
mov
aaa
jl
inc
insb
lret
push
in
xchg
jnp
and
dec
pop
loope
sub
stc
mov
bound
fcmovnu
lds
xchg
shlb
cmp
rcrl
jb
push
xor
add
scas
das
idivb
add
vpsubsb
aaa
je
xor
int3
rcrb
std
adc
adc
or
xor
cmp
ror
pusha
mov
fmuls
cs
repnz
bound
cmpsb
jne
sub
inc
cmpsb
jl
loopne
mov
pushf
add
pusha
ss
inc
ret
ja
repnz
pop
sahf
sbb
fcmove
sub
add
addr16
ja
add
push
dec
pop
and
xchg
dec
gs
or
scas
mov
dec
aam
iret
pop
sub
ret
popf
mov
lret
xor
dec
sahf
xlat
cmc
sub
push
xlat
out
fstps
add
or
mov
idivl
mov
scas
push
in
pop
loopne
xor
in
sbb
pop
sbb
movsl
pop
mov
aaa
dec
movb
cmpsb
cli
gs
xchg
lcall
js
xchg
adc
popa
loope
fsubl
cmp
add
test
cmp
inc
pop
and
leave
daa
pop
cli
mov
inc
push
mov
fwait
js
push
out
sub
div
inc
aas
aaa
inc
fwait
xor
and
fimuls
mov
mov
test
imul
test
scas
xchg
lcall
mov
mov
add
pop
mov
mov
stos
mov
outsl
insl
cmpsb
mov
scas
testb
xchg
add
push
pop
out
mov
bound
adc
mov
pop
sarb
sbb
mov
mov
cmpsb
cmc
repz
movsb
stos
jbe
lea
pop
mov
outsl
mov
cld
je
adc
into
hlt
out
xchg
mov
int
jecxz
xor
push
and
imull
call
in
stc
mov
xor
xor
hlt
push
aam
xor
xor
inc
push
mov
lods
fidivs
test
loopne
mov
outsl
je
mov
add
call
mov
ss
pop
lret
or
arpl
adcl
loopne
sbb
bsr
lods
xchg
push
repz
rclb
lret
cmp
test
inc
sti
lds
or
push
adc
lds
xor
or
xchg
popf
cmpsl
add
rorb
aad
mov
lcall
push
and
or
xor
push
mov
or
cmp
in
dec
andl
test
jns
insl
fsubrl
rol
mov
mov
push
adcb
popf
and
sahf
mov
mov
into
loopne
inc
xchg
out
cmp
mov
cwtl
insb
fisubrs
inc
adc
rclb
pop
push
jne
jg
jecxz
push
fdivrs
mov
call
fsubp
ror
stc
jle
lds
out
fldenv
fcoms
mov
or
add
pop
dec
shll
jns
pop
adc
je
mov
and
mov
aaa
fwait
mov
push
outsw
jp
fs
popa
cmpsl
daa
xchg
lret
es
mov
push
fs
outsb
fstps
test
loop
daa
in
inc
orb
in
mov
push
arpl
insl
std
cli
stos
lea
js
call
xchg
loopne
imul
push
push
in
xchg
fisubl
dec
mov
push
push
icebp
sbb
mov
mov
leave
sbbl
cmpsl
out
shr
jnp
fwait
sbb
cltd
lock
inc
lods
jmp
loope
dec
mov
mov
ja
ljmp
int
call
xor
cld
divb
int
jnp
cs
mov
hlt
scas
lcall
sahf
fwait
arpl
out
and
aad
repnz
fsubrp
mov
jne
popa
iret
dec
pop
xchg
jg
inc
push
stos
dec
dec
mov
mov
loopne
cmp
fstpl
stos
rcll
rorb
push
fiadds
in
add
int
and
sti
outsb
push
aad
xor
pop
insl
loope
lds
jg
mov
stos
sbb
out
sbb
cmp
lds
push
test
les
mov
mov
into
insl
xorb
or
lds
jmp
popf
call
aaa
mov
bound
pop
lret
cmp
repz
fists
lods
mov
lret
add
shll
xor
jne
mov
pop
jl
loopne
mov
adc
les
mull
movsb
cltd
inc
mov
jne
sbb
add
pop
mov
lea
push
jnp
lock
fiaddl
jnp
stos
movsl
loop
jns
int3
cld
mov
ljmp
cmp
push
add
pusha
popf
xor
cld
fidivrl
add
push
fs
mov
adc
iret
adc
mov
lcall
push
add
add
shlb
cli
jno
sub
adc
fwait
aam
movsl
xor
pop
mulb
pop
ret
push
mov
adc
cmp
mov
scas
xchg
jg
jge
push
mov
mov
mov
mov
shl
or
pop
jne
shl
data16
cmp
mov
loop
mov
cwtl
stos
test
sti
and
shll
jl
dec
fisubrs
mov
mov
add
mov
xor
cwtl
movsb
std
push
xorb
gs
js
andb
les
adc
insb
movsb
insb
out
sarl
pusha
jbe
pop
enter
xchg
int
push
xor
in
pop
and
jl
and
mov
addr16
mov
cwtl
add
mov
push
cmp
popa
sahf
imul
lds
bound
cmp
and
jbe
sti
inc
and
lods
aas
mov
and
arpl
test
in
mov
testl
xchg
int
arpl
jle
addl
mov
ficoml
mov
inc
sbb
imul
jbe
out
mov
mov
daa
jecxz
hlt
pop
pop
mov
in
and
push
xchg
adcl
pushf
iret
int3
inc
inc
lret
pop
mov
jno
mov
loope
inc
es
sub
aam
inc
fsubrs
leave
pop
mov
in
mov
test
mov
lods
js
sbb
enter
xchg
pandn
loopne
add
mov
or
ret
pop
xor
dec
adc
pushf
stos
sbb
jb
test
xchg
xor
push
add
imull
test
outsb
push
enter
and
adc
aas
adcb
movsl
dec
xchg
ret
push
aad
xchg
int
fisubl
jmp
add
fidivrs
and
insl
mov
rcl
jmp
pop
out
fildll
adc
rcrl
pop
repz
push
push
mov
mov
sub
decl
lock
xor
out
mov
add
hlt
je
out
loopne
data16
or
push
loope
push
or
cmp
int
movsb
ljmp
adc
lods
xchg
xorl
inc
in
xor
push
pop
or
sub
pop
lods
inc
pop
fsubs
outsl
jge
cmp
adc
xchg
clc
enter
sub
adc
inc
bound
xor
dec
xlat
mov
pop
sub
add
push
lahf
daa
adc
imul
mov
mov
push
cmpsb
pminub
cs
or
push
inc
fists
daa
stos
in
sbb
cmp
popf
xchg
mov
push
mov
sbb
add
sti
adc
mov
aad
pop
lret
rorb
and
xor
enter
test
filds
xchg
lods
loop
sbb
test
sbb
test
inc
inc
cmp
fmull
aad
pop
dec
sahf
or
ss
inc
hlt
mov
cmpsl
clc
mov
xor
and
in
push
rcl
icebp
mov
in
pop
mov
sbb
mov
xchg
enter
jge
ss
sub
mov
leave
sub
sub
adc
int3
dec
mov
mov
ss
and
sbb
rcll
jmp
push
mov
fildl
gs
add
xor
cmp
or
inc
icebp
leave
or
jecxz
cmp
daa
cmp
pop
jne
sbb
inc
add
cwtl
dec
notl
aaa
dec
mov
push
jge
call
mov
ds
cmp
nop
enter
cmp
mov
fwait
orl
sarb
movsb
mov
xor
rol
fisubs
xchg
adc
xorl
cmp
adc
cmp
push
or
xor
loopne
push
lock
dec
mov
icebp
orb
sub
dec
subl
in
dec
or
push
jg
dec
jns
sbbl
addb
insb
les
popf
ds
cmp
adc
cmp
cli
and
jo
dec
cmpsl
sub
fisubrl
in
sahf
jp
je
push
push
adc
pop
sbbl
aas
push
loopne
pop
push
mov
sbb
pop
test
into
stos
xor
or
push
mov
pop
stos
iret
add
jns
mov
filds
std
lods
push
cli
cs
subb
cmp
and
test
or
xor
fnstenv
dec
adc
rcrb
les
jmp
out
gs
mov
punpckhdq
cmp
scas
inc
or
or
mov
int
fidivl
rolb
inc
mov
inc
mov
pop
imul
outsb
bound
and
xor
jo
stc
loopne
andl
pop
aad
or
into
mov
sub
mov
cmp
and
or
test
add
mov
lds
pop
mov
inc
mov
xchg
fucom
outsl
pop
insl
iret
pop
dec
cwtl
push
cmp
push
xchg
push
sub
popa
mov
xchg
mov
rclb
test
loope
fwait
xor
push
push
shll
loopne
es
xor
sahf
mov
dec
add
inc
dec
repz
ja
add
or
add
pushf
dec
mov
mov
cmp
dec
jge
in
and
and
addr16
sub
test
mov
mov
add
dec
dec
mov
cld
xchg
mov
movsl
pop
pop
shll
cmp
out
addr16
push
gs
jge
mov
arpl
or
add
in
jge
add
fs
mov
pop
push
mov
xlat
ret
jecxz
pop
lock
lcall
repnz
jne
iret
cli
pop
test
vandpd
xchg
push
call
pop
or
jmp
icebp
mov
leave
je
imulb
test
push
sahf
das
or
fiadds
nop
mov
sbb
fiadds
cmp
jnp
stos
xor
mov
dec
dec
inc
out
ljmp
mov
inc
xor
movsb
out
shlb
pushf
sahf
loopne
mov
stos
or
lods
sbb
stos
out
jne
mov
inc
inc
xor
jge
dec
enter
jno
pop
sub
lods
neg
mov
lods
mov
cmp
push
lret
or
mov
orb
je
cmp
mov
mov
outsl
les
inc
std
and
jg
inc
xlat
push
push
stc
pop
inc
mov
clc
mov
out
and
add
mov
jl
mov
inc
shll
add
clc
je
insl
dec
xchg
scas
jnp
jnp
out
out
pop
stos
outsb
shlb
into
push
jecxz
iret
inc
imul
mov
js
push
mov
fistpll
outsb
nop
push
cmp
push
mov
dec
and
daa
stos
shrb
fmul
mov
mov
and
lods
mov
aam
or
aad
stc
inc
cmp
aas
repnz
pusha
out
addr16
push
or
divb
jle
ror
mov
addl
jmp
pop
nop
dec
adcb
adc
pushf
rolb
test
cmpsb
je
shlb
lret
or
fcmovb
je
test
cwtl
dec
push
in
sahf
insl
add
fs
aas
fmul
gs
jl
add
ret
jne
rcrb
jmp
push
fiaddl
mov
movsb
pop
ret
loopne
sub
popf
pop
push
dec
fildll
mov
repnz
cmp
sbb
ljmp
xchg
psubsw
ret
scas
push
test
insl
mov
lret
dec
cwtl
xchg
mov
test
sub
add
stos
push
fiadds
jecxz
xchg
fwait
into
aaa
mov
push
mov
pop
call
outsl
icebp
mov
and
in
mov
jnp
xchg
sbb
mov
jmp
mov
in
pop
xchg
insl
inc
cs
dec
shll
dec
cltd
or
pop
xor
mov
adc
mov
pop
mov
loope
xchg
fwait
xchg
scas
lea
lds
shl
je
fwait
add
outsb
inc
jg
mov
out
out
out
xchg
inc
cltd
mov
arpl
movsb
mov
dec
lock
mov
add
pop
clc
xorl
lds
dec
test
lea
mov
cs
mov
cmp
insl
shrl
fs
pop
sub
xchg
sti
cmp
stc
push
ret
or
jbe
xor
rep
lret
jnp
test
pop
bound
sbb
inc
outsb
and
call
lods
adc
add
aaa
and
test
xor
mov
push
hlt
and
xchg
aas
es
imul
push
mov
mov
pop
movsl
xchg
sub
lret
dec
stc
dec
jge
mov
stos
push
mov
jle
dec
xor
pop
jae
lret
jnp
inc
stc
jne
xchg
sahf
mov
dec
xchg
adc
cmc
insl
pushl
lock
xchg
xor
imul
outsb
cmpsl
test
sbb
popa
mov
push
pusha
mov
cltd
leave
mov
xchg
fmull
jbe
pop
mov
and
aam
add
int3
std
daa
add
xor
lahf
or
bound
cmp
push
imul
cwtl
sbb
sub
xor
scas
adc
outsb
and
dec
xchg
fistps
pushf
adc
cltd
imul
adc
or
movsl
jnp
mov
bound
dec
and
mov
and
adc
xchg
mov
xor
inc
dec
jb
mov
mov
data16
xor
inc
xor
loop
shll
fidivl
push
push
add
xchg
mov
sbb
push
push
movsl
or
pop
cmp
insb
sub
push
xor
cltd
or
div
dec
pusha
mov
aad
mov
pushf
inc
dec
push
lds
shrb
lds
int
mov
cli
ret
bound
mov
push
cmp
imul
mov
testb
lcall
dec
out
icebp
pop
cld
sbb
mov
inc
and
js
das
enter
pop
jp
pop
cmp
test
in
lcall
clc
mov
jge
pop
in
cmp
sbb
scas
out
mov
add
xchg
pop
sbb
leave
negl
enter
mov
out
lret
in
js
test
push
vpcmpgtb
sbb
push
mov
jnp
cmpsl
cmp
jns
adcl
clc
mov
call
xchg
fdivrl
cld
mov
hlt
xor
frstor
or
mov
repz
cmc
jle
into
nop
andl
rorl
sub
data16
mov
dec
nop
dec
adc
mov
fnsave
lods
andb
push
imul
cmpsb
outsb
mov
jp
adc
cmp
das
out
push
push
outsb
in
fnstcw
xor
scas
in
adc
and
jecxz
mov
cmp
sbb
cmpsl
sbb
xor
jnp
repnz
fs
test
jo
xchg
ret
aam
xor
scas
inc
mov
mov
adc
mov
ljmp
clc
xchg
pushf
js
fimuls
cwtl
pusha
mov
sti
mov
mov
xchg
pop
imul
push
mov
hlt
cs
cmp
inc
leave
push
rorl
cli
add
xchg
add
dec
imul
cltd
push
les
fistpll
inc
inc
sub
insb
in
pop
mov
outsb
out
add
jb
sbb
pop
jae
mov
ret
idivb
adc
pop
mov
push
daa
inc
loope
popf
out
test
xor
in
xchg
xor
rcrl
fldcw
call
mov
sbb
int
in
jle
adc
imul
or
sub
iret
scas
jbe
lea
adc
push
scas
adc
pusha
xchg
xor
xchg
and
call
rclb
xchg
adc
add
or
cmc
or
inc
sbb
dec
add
test
cmp
daa
flds
cs
add
xchg
push
ja
data16
insl
mov
into
mov
sbb
xchg
push
cmpl
and
js
adc
push
scas
sub
xchg
pop
fdivr
cld
add
xchg
or
cmpsb
test
jo
in
jl
sub
sti
cltd
mov
mov
test
dec
add
pop
repz
mov
xor
mov
pop
loope
pop
inc
mov
es
cmp
scas
dec
add
aad
add
js
mov
sub
test
or
out
fisttps
jecxz
pop
mov
lods
mov
xchg
lret
lock
mov
add
clc
push
mov
jb
fsubrs
mov
mov
sub
imull
jmp
jae
inc
push
sub
jecxz
sub
loopne
pop
push
adc
mov
out
loopne
jne
xor
push
jg
xor
xchg
sub
pop
sub
jecxz
outsl
or
ja
xchg
jb
orb
adc
sub
shlb
jnp
adc
jmp
mov
dec
je
arpl
sub
xor
push
cltd
dec
xchg
sub
arpl
push
lods
movsl
jbe
in
inc
mov
mov
push
orl
das
jbe
xor
roll
ds
stos
pop
aam
out
inc
out
sbb
cmp
jp
jle
mov
adc
es
inc
insb
ret
add
cmpsb
cmp
jo
or
cwtl
adc
shll
xchg
arpl
test
in
and
pop
call
cltd
mov
repnz
fistps
in
mov
add
add
adc
idivl
sbb
pop
or
sahf
scas
push
xchg
pop
das
add
jnp
sub
jp,pn
mov
shlb
sub
sbb
adc
roll
sbb
in
dec
and
dec
jecxz
mov
popa
pop
loopne
push
sarb
jb
stos
out
sub
xchg
xor
test
insl
fs
das
inc
aas
scas
test
ror
mov
cmp
cld
popf
pop
std
cli
or
and
pushf
mov
les
sti
cmpsl
lret
xor
sbb
fs
or
xchg
out
mov
loop
jmp
lahf
jl
daa
cmpl
and
lret
ret
mov
inc
mov
leave
test
adc
sbb
sbb
insl
scas
pushf
bound
push
lock
fimuls
dec
mov
push
test
mov
fisubrs
inc
push
sbb
xor
jne
sbb
cmp
movsb
std
mov
sti
repnz
mov
fsubrp
inc
jns
out
cmc
test
inc
mov
and
add
sbb
or
push
push
add
adcl
lock
test
nop
cs
ja
add
stc
inc
lds
jns
xchg
cmp
sub
pop
cmp
xchg
mov
ja
mov
jecxz
pop
xorl
outsl
xchg
mov
sbb
mov
xchg
addl
dec
bound
callw
sbb
repz
pop
loop
push
xor
cmp
or
ret
mov
fildl
aam
inc
sub
addb
hlt
and
idivb
pop
aad
mov
xor
test
out
out
data16
ret
jbe
mov
fnstenv
push
bnd
xchg
dec
daa
psubusw
inc
mov
ds
cwtl
push
mov
jb
dec
xlat
fstpt
shll
orl
sti
xchg
das
cld
popa
inc
pop
mov
xchg
int
mov
out
int3
bound
or
sub
inc
xchg
sub
stos
xor
push
insl
sahf
mov
movsl
pop
jnp
ljmp
mov
xor
cli
xor
into
jmp
mov
and
add
jo
dec
jne
ss
push
cmpb
jns
jae
xchg
repnz
push
xchg
scas
fnstsw
nop
bound
cmpsl
add
dec
mov
leave
adc
test
and
out
xor
incl
iret
test
insl
aas
inc
std
inc
mov
xchg
cmp
jp
je
sub
scas
pop
lock
out
jne
mov
mov
clc
mov
ljmp
je
mov
outsl
push
xchg
jb
out
lcall
fs
sbb
stos
inc
or
sti
ja
sbb
push
in
adc
push
adc
je
push
lea
xchg
jge
test
or
sub
jg
cwtl
push
out
pop
addb
sbb
sub
cmp
push
mov
and
nop
clc
xchg
nop
and
bswap
stos
arpl
or
xor
int
adc
add
leave
mov
push
stos
mov
lahf
or
push
pslld
sub
xor
pop
add
inc
cld
sub
xchg
jle
add
jp
sarb
jl
rcll
fstps
lods
rclb
pop
lods
ja
push
xchg
mov
jmp
pmullw
ret
repnz
push
jge
cli
jg
inc
push
push
mov
mov
repnz
aad
in
jo
inc
mov
xor
in
push
adc
cmpsb
mov
in
or
repz
sub
lods
mov
sub
mov
sub
sbb
lds
ds
xchg
xor
sub
aad
adc
fldlg2
xchg
out
or
hlt
cmc
loopne
out
rolb
das
push
push
arpl
pop
movsl
jge
lods
dec
stos
outsl
cmp
sbb
cmpsb
cwtl
cmp
mov
lcall
sbb
mov
xchg
mov
mov
push
add
sub
insb
cli
out
sub
cmp
inc
adc
mov
dec
rorl
ss
push
insb
outsl
xchg
mov
dec
jns
sbb
ss
inc
inc
sti
mov
mov
xchg
decb
ss
loop
out
xchg
jb
popaw
loop
xchg
outsl
mov
add
repz
xchg
or
mov
lods
jmp
xchg
inc
subb
dec
jmp
mov
adc
dec
adc
lret
leave
movsl
mov
ljmp
inc
lcall
ljmp
pop
xlat
pop
lods
lret
sbb
add
push
inc
rcrl
mov
test
ja
or
xor
lret
fcomp
sarb
cmp
push
xor
sbb
pop
popf
push
or
wrpkru
adc
sbb
fs
cmp
and
loope
jmp
xor
sbb
js
gs
test
sub
rorl
jns
xchg
lret
data16
push
loope
or
cld
negb
inc
in
cmp
mov
ds
loopne
fistpll
add
ja
pop
mov
mov
mov
add
add
outsb
icebp
cmp
in
push
outsl
inc
cmp
push
nop
js
inc
xor
mov
xchg
das
arpl
lods
frndint
and
inc
xchg
mov
fcoml
cs
sub
lock
sbb
jmp
inc
jmp
sub
orb
or
fsubrl
xorb
mov
xor
push
dec
xchg
sbb
out
dec
inc
xchg
std
mov
jecxz
inc
add
popf
ret
int
cmpsb
push
mov
bound
js
ja
sub
inc
push
sbb
cmp
pop
es
mov
je
test
dec
cmp
int3
imul
xchg
jmp
fstpt
loopne
es
fisubrl
mov
rcll
push
push
sub
sub
cmpsl
adcl
ja
or
push
xchg
jae
clc
sub
xor
hlt
into
cld
pop
adc
mov
mov
inc
adc
mov
insb
into
add
pop
inc
ja
ljmp
xor
push
arpl
ja
mov
aas
sub
iret
les
out
enter
imul
lock
mov
mov
or
add
add
xor
adc
mov
add
in
jl
add
insb
mov
aas
adc
incl
jmp
scas
push
dec
dec
rorb
repnz
dec
add
push
aam
ss
push
gs
dec
jge
cli
xchg
in
cmp
sbb
icebp
je
decl
adc
pop
jae
mov
loopne
add
ja
ds
sbb
int
out
fs
sbb
cmpsb
test
leave
imul
shrb
sub
sarl
cmp
lahf
in
shr
add
outsb
lret
sti
repz
aaa
or
popl
pop
loop
add
xor
mov
loop
mov
push
jae
sub
lds
cmp
fadds
fwait
mov
cmpsl
mov
sub
mov
lret
into
sub
sub
sub
scas
mov
add
pushf
cmpsb
xchg
and
jb
lret
sar
das
push
mov
sarl
or
icebp
cs
ret
jecxz
xlat
sub
sbbb
jne
loopne
lcall
cmpsb
pusha
dec
mov
jb
push
popa
movsb
icebp
or
movsb
out
add
fisubrl
pop
add
loopne
sbb
lahf
inc
fdivl
mov
mov
insb
mov
sub
or
add
xchg
push
shll
fwait
mov
adc
add
lods
arpl
ret
sub
mov
orb
jo
cwtl
adc
or
insb
inc
pop
push
push
loop
arpl
rclb
jle
cwtl
push
pop
cwtl
cli
push
xchg
cmp
imul
ja
mov
xor
mov
rorb
mov
cltd
fiadds
cs
into
hlt
pop
add
in
pop
das
ret
push
pop
rcrl
or
sbb
lods
cmpsl
icebp
mov
cli
andb
dec
mov
ds
es
out
dec
in
leave
shr
enter
idivl
cmp
cmc
icebp
js
mov
aad
mov
mov
test
pop
mov
arpl
rclb
out
and
and
push
es
out
cmp
leave
xor
dec
loopne
add
inc
xchg
or
fldt
into
xorl
sub
push
pop
stos
in
cmp
xchg
leave
jo
add
inc
jmp
and
mov
mov
add
xor
sbb
imul
pop
outsb
punpckhwd
rorl
ret
cmp
neg
mov
imul
adc
pop
jns
rclb
xor
adc
adc
cmpb
sub
cwtl
push
stc
test
jns
mov
jnp
cmp
loope
out
arpl
xor
popa
fucomi
outsl
out
fwait
mov
push
pop
lods
jle
hlt
popf
cmp
movsl
stc
xor
jo
adc
mov
rcl
stc
ja
xchg
xchg
mov
push
jmp
xor
mov
cmp
aaa
adc
sbb
cmc
jmp
mov
xchg
inc
ja
and
movsl
roll
jae
xchg
xor
mov
in
cmp
xor
mov
in
xchg
inc
daa
add
ss
and
repz
mov
mov
shll
sti
jp
inc
cmp
jp
jnp
cmpsl
std
outsb
cltd
bound
xchg
fiadds
jp
push
and
leave
out
pusha
add
stos
dec
mov
stos
dec
mov
push
sub
insb
notl
inc
dec
mov
sbb
xchg
xchg
scas
push
jl
jle
int3
xor
mov
cmp
enter
sub
xchg
or
and
jl
rolb
loopne
or
subb
aad
stos
test
shll
push
sub
not
test
leave
push
mov
dec
mov
lret
dec
xlat
mov
lret
insl
jecxz
jmp
pop
je
and
lock
xadd
jno
aas
push
xchg
sub
out
stos
pop
mov
adc
leave
icebp
adc
push
jae
into
or
mov
sbbb
cmpsl
outsb
cmp
add
mov
dec
fisubrl
hlt
or
mov
les
push
adc
sbb
push
sub
push
xlat
inc
mov
push
movsl
in
sbb
sub
or
lret
sub
fcmove
mov
jmp
pop
stos
xchg
cmc
stos
or
push
orb
orl
xchg
lcall
lahf
popf
scas
pusha
jae
jg
push
nop
pop
int
mov
push
mov
mov
jg
sahf
dec
jo
sarb
out
sarl
lods
pop
and
cwtl
pop
pop
fidivrs
and
or
push
sbb
enter
mov
mov
js
xor
pop
jae
xchg
xlat
cmp
push
push
mov
lods
jno
insb
add
insl
jge
push
cmp
xlat
inc
cwtl
stos
enter
mov
inc
sub
push
pop
sub
jmp
pop
add
pop
inc
hlt
sbb
sub
loop
xor
cwtl
sub
sbb
mov
dec
popa
enter
test
dec
xor
stos
es
int3
mov
cmp
mov
ret
mov
imulb
ret
out
push
xchg
mov
xorb
add
shl
dec
rcr
mov
addr16
jbe,pn
js
pop
mov
cmp
ret
outsl
mov
mov
push
bound
arpl
das
sub
loope
mov
mov
mov
jnp
mov
or
sarb
and
pop
std
iret
cmpsl
mov
mov
cmc
sub
rorl
add
aas
mov
cmp
cmpsb
inc
jno
or
or
int
loop
or
scas
fyl2xp1
push
inc
jecxz
aas
sub
gs
add
ficoml
sbb
dec
scas
leave
test
xor
rcll
in
or
testb
sbb
icebp
orb
faddl
scas
in
sub
cmp
inc
add
shlb
push
fwait
and
xor
adcb
aas
xor
cs
test
push
mov
pop
jmp
mov
out
shrb
clc
out
push
cwtl
roll
ss
roll
les
jge
std
movsl
dec
mov
sbb
or
ret
mov
ret
dec
sub
adc
fldcw
push
insl
add
pop
mov
pop
sub
out
xchg
jp
loop
and
pop
push
push
add
outsb
pop
pop
scas
stc
incl
aad
mov
mov
jne
sarb
sbb
sahf
lock
incl
push
push
leave
std
dec
push
fistl
sbb
add
sbb
push
sbb
in
inc
and
xchg
jno
adcl
mov
and
out
stos
mov
scas
pop
ud0
xchg
mov
ret
jns
repz
in
test
inc
rcll
xor
loop
inc
cs
mov
out
pop
mov
mov
inc
ds
or
loopne
jno
ffree
data16
jle
lcall
and
clc
lea
clc
insb
inc
repz
cmp
xor
xor
push
adc
sar
inc
jno
divb
out
mov
arpl
mov
sbb
sub
nop
negl
js
add
mov
hlt
lock
loopne
pop
pop
ljmp
push
add
dec
or
aad
pop
dec
je
mov
jecxz
xor
adc
sub
rorl
movsl
std
insl
mov
out
gs
cmp
push
popa
in
dec
xor
fldenv
lods
sbb
push
iret
xlat
out
add
push
jmp
notl
sub
xlat
or
mov
xor
adc
add
inc
mov
dec
xchg
adc
xchg
cmp
dec
mov
aaa
add
cmpsb
adc
inc
add
inc
push
xor
add
adc
push
std
and
jecxz
push
daa
sbb
and
cmpb
mov
xchg
cmpsl
fidivrs
lods
mov
sbb
loopne
push
mov
mov
loope
jle
mov
and
loope
sbb
xchg
in
lds
xchg
ror
sub
mov
shll
dec
inc
mov
shrl
jecxz
xor
je
push
iret
jbe
and
mov
sbb
or
cmp
xor
lock
sbb
js
leave
dec
int
aaa
pop
cli
jne
mov
dec
xchg
shll
xor
mov
in
push
mov
std
insb
pop
popa
fidivs
out
into
cltd
push
cltd
sub
sbb
and
mov
stc
jg
xchg
movsb
shlb
or
pop
pop
roll
cmp
sub
mov
aaa
lock
shld
mov
mov
and
sbb
inc
rorl
pusha
jno
lea
pop
lea
sub
outsb
add
cmp
jne
adc
addr16
loopne
dec
push
sbb
fwait
cmpl
lret
repz
and
sbb
lahf
sbb
mov
add
or
lods
aad
mov
dec
dec
call
movsl
inc
add
adc
daa
stos
sti
push
mov
pop
inc
or
mov
das
xchg
sbb
adc
out
insl
pop
mov
mov
ffreep
sbb
adc
xchg
movsb
xor
inc
jb
movsl
pop
sysret
scas
les
jbe
aaa
stc
cmp
lock
mov
mov
xor
out
add
cltd
adc
mov
jb
xchg
in
mulb
lds
mov
sub
fwait
test
pop
iret
clc
das
mov
jl
or
out
scas
adc
fldcw
aad
cs
dec
and
jno
mov
push
and
cmp
cmp
push
aad
pop
add
pop
push
mov
sbb
scas
add
ja
pop
xchg
lock
fidivrl
push
cmp
pop
jmp
das
stos
mov
jl
cmp
xchg
leave
push
jae
xor
sbb
jge
add
cmc
aad
and
xor
shrd
fs
sbb
add
les
mov
jo
pop
xchg
cmpsb
addr16
into
add
push
sbb
fwait
cmp
lock
mov
popf
pop
aaa
pop
pop
mov
sbb
sub
xor
call
mov
dec
cmpsb
scas
bound
test
cmpsl
adc
aam
loopne
stc
clc
mov
fstps
jne
decb
int3
stc
mov
sti
imul
sahf
dec
mov
stos
fcompl
push
or
sbb
ror
push
adc
jle
popa
out
pop
divl
lods
loope
pop
xchg
ljmp
in
cmp
cmp
orb
push
aas
or
lea
and
adc
stos
jb
jecxz
in
mov
push
es
int
out
lcall
jb
sbb
lahf
lahf
adc
ret
cmp
popa
jb
push
adc
ret
sub
rorl
xabort
push
or
mov
pop
fstpt
xchg
ror
int
lock
mov
imul
mov
imul
inc
and
cmp
fwait
mov
ret
cmpsl
mov
jo
sti
imul
or
outsl
outsb
cmp
mov
cmpsl
ja
dec
add
dec
inc
push
ret
xor
call
push
and
mov
cmp
mov
dec
sbb
in
push
jae
xor
rcrl
mov
pop
scas
adc
jmp
out
mov
add
mov
loope
xor
and
xchg
in
sbb
enter
lret
pusha
dec
sarb
lock
xchg
sarl
inc
and
out
ret
rcll
pushf
mov
das
mov
push
adc
fld1
and
loopne
cmp
test
add
xor
push
stos
mov
iret
inc
fwait
gs
xor
dec
mov
jecxz
or
js
and
jg
sbb
dec
jae
push
cmpsb
inc
repnz
inc
rcll
sbb
pop
add
or
ss
shll
and
scas
es
xor
mov
add
test
or
adc
bound
mov
lds
and
sar
inc
loope
jb
lds
add
dec
xchg
mov
stos
inc
and
jne
add
dec
pop
add
out
insl
shr
sub
into
aas
scas
out
notb
in
in
cwtl
pop
add
jp
pop
xchg
movsb
jno
out
jae
and
je
mov
push
or
cld
scas
je
mov
cmp
pop
push
fs
popa
je
int
push
pushf
sbb
adc
cs
jg
push
pushf
mov
inc
loopne
cld
sub
leave
jle
inc
push
xor
out
mov
rcrb
rcr
dec
dec
sub
xchg
add
xchg
sub
lea
out
adc
andnps
or
push
and
and
dec
jg
cmp
jns
inc
xchg
fs
cli
pop
jmp
jg
fistps
xchg
cli
cmp
pop
dec
test
mov
int3
insl
shl
pop
scas
sub
or
outsb
ss
das
jle
or
add
mov
mov
mov
xor
xor
sbb
mov
inc
jbe
pop
mov
cmpsl
clc
sahf
ljmp
enter
stos
fcompl
pop
dec
rorb
pop
pop
sbb
or
hlt
ja
and
stos
dec
mov
mov
xchg
jl
push
xchg
mov
push
adc
testb
xchg
push
lcall
pop
ret
xchg
mov
fldenv
mov
sbb
fnstsw
lods
xor
fisubrs
mov
lods
xchg
cmpsl
cmp
pop
sbb
pop
push
dec
push
cmc
inc
inc
ret
jno
mov
addb
mov
stc
jno
mov
add
jbe
push
jge
jg
inc
mov
iret
aaa
cmp
or
mov
test
js
push
outsl
movsb
lahf
stos
sbb
dec
wbinvd
pusha
jns
fstpt
xchg
lret
in
jp
sbb
push
cmp
mov
push
sbb
add
push
pushf
cmp
lds
test
mov
nop
fldt
aaa
lea
mov
js
sub
pusha
mov
out
xor
lods
and
mov
fdivrl
sbb
outsb
or
icebp
test
enter
cmp
mov
and
loopne
into
cs
pop
fcmove
movsb
xor
push
lret
push
and
push
jno
add
xchg
pop
mov
xor
sbb
xor
mov
mov
test
outsl
sbb
mov
cli
and
mulb
jmp
jg
sub
jno
or
loop
xchg
fistpl
in
lcall
js
mov
loopne
int3
outsb
sub
enter
lret
cwtl
dec
scas
inc
lret
cmpsl
jns
push
mov
push
sahf
lret
pop
mov
outsb
iret
enter
cwtl
xlat
fistpll
mov
addr16
mov
mov
sub
cmp
pusha
lcall
push
out
jge
inc
jl
xor
adc
lahf
aas
dec
xchg
cmp
adc
add
sahf
add
adc
inc
cmp
repz
repnz
jmp
inc
cs
pop
jnp
outsb
ds
lods
pop
clc
ror
cmp
repnz
fisttps
clc
insl
lea
pop
andb
cmp
jo
cmc
dec
push
sbb
std
pop
rcr
iret
add
push
call
negl
add
xchg
mov
aam
ret
jno
jecxz
cld
mov
scas
loopne
push
out
pop
call
push
sub
xchg
push
test
mov
iret
adc
cmp
xchg
xchg
push
push
fistpl
push
and
sbb
xor
imul
xchg
loop
mov
aad
insl
idivl
stc
mov
jns
push
push
push
jl
test
cmp
stos
adc
mov
mov
jbe
in
cwtl
mov
mov
dec
sub
add
add
inc
jg
outsb
mov
mov
or
xor
mov
stos
jb
sbb
fmulp
aam
xchg
call
pusha
daa
rcl
jno
int
outsl
in
loop
faddl
add
pop
push
out
scas
mov
or
subb
bound
inc
aaa
roll
dec
fcomp
push
sub
in
jmp
popa
scas
add
or
les
or
xor
xchg
jp
test
cmpsl
test
jmp
xchg
movsb
pop
inc
and
dec
inc
scas
inc
jg
mov
or
or
stos
ret
adc
cmp
mov
cmp
cmp
adc
mov
mov
pop
lahf
pop
sti
stos
push
cli
xor
xor
jecxz
cmp
test
insb
gs
in
rorl
pop
scas
cs
leave
push
punpcklbw
xchg
jo
gs
idivl
xchg
fdivl
rorb
or
pop
pop
xor
int
stos
mulb
pop
cli
inc
xor
jmp
scas
pushf
addr16
mov
jnp
inc
clc
and
and
jl
adc
push
imul
and
mov
or
or
push
sub
pop
push
inc
lahf
and
mov
ds
or
add
lods
inc
in
inc
adc
hlt
shrb
jbe
mov
inc
jmp
mov
or
out
sub
mov
lret
pop
arpl
leave
jg
scas
jns
mov
jnp
movsl
jnp
in
repnz
out
dec
pop
sub
mov
add
fcom
jae
xchg
repz
pop
sqrtps
inc
popa
in
jl
jmp
cmp
sbb
rcrl
inc
sbb
divl
int3
or
mov
xor
arpl
daa
lret
mov
lods
addr16
and
cwtl
xor
stos
out
pop
scas
nop
dec
pop
cmpsb
fsubrp
sbb
jnp
mov
mov
mov
inc
jl
and
xchg
dec
mov
dec
cmp
imul
repz
mov
in
adc
mov
or
xor
fcoms
jno
fdivl
bound
inc
test
mov
sbb
rcrl
cmp
push
jo
lret
into
xor
iret
inc
jb
sbb
xchg
enter
push
test
mov
and
icebp
sahf
loopne
and
sbb
jle
rolb
or
ja
adc
mov
sbb
jp
mov
sbb
adc
stos
cwtl
sub
or
pop
shr
aad
stc
push
cwtl
xchg
cltd
fisubl
imul
test
mov
inc
mov
xor
int3
mov
pop
cwtl
imul
orb
cmpsb
jnp
filds
xor
push
popa
xchg
repz
pop
push
inc
sahf
xchg
cmpl
xor
sub
inc
or
daa
jns
mov
and
sbbb
popf
js
iret
loope
stos
fwait
jo
sti
shll
arpl
iret
insl
fidivs
hlt
sub
hlt
rorl
push
push
xor
add
insl
mov
pusha
push
jg
ret
sub
fsubr
das
pushw
xchg
xlat
mov
pop
lahf
dec
cmp
mov
xor
and
mov
and
sub
sub
out
lock
hlt
popf
or
insb
xchg
out
mov
daa
repnz
sub
sahf
jne
mov
dec
push
aad
sub
jns
pushf
pop
in
outsl
enter
test
cmp
adc
mov
ss
fs
cli
lret
in
inc
cvttps2pi
out
in
xchg
inc
xor
pop
divl
outsl
mov
xchg
mov
push
cld
add
sahf
xchg
adc
sbb
sub
mov
and
and
and
cmp
lock
mov
outsb
push
mov
sbb
ret
mov
out
push
mov
pop
jnp
xchg
adc
add
rcrl
sub
xchg
mov
sbb
ljmp
imul
lock
dec
jecxz
aam
testl
stc
push
imul
inc
jae
fsts
add
fs
push
andl
mov
push
jbe
paddb
adc
das
mov
pop
sbb
mov
repz
mov
cmpb
pusha
xchg
mov
push
add
rol
jg
in
test
jae
mov
hlt
pop
js
subl
xchg
jns
insb
lcall
push
adc
pop
stos
loope
pop
and
pop
loope
adc
repz
ljmp
pop
sbb
lret
fildl
imul
sub
mov
mov
jl
scas
mov
test
and
scas
leave
mov
test
mov
or
faddl
es
mov
adc
mov
sbb
cmp
sti
notb
cmp
mov
jno
pop
xor
cmpsb
add
lds
lcall
or
cmpsl
int3
dec
jge
sub
add
inc
pop
fcmovnbe
xor
xor
loope
push
jl
in
repz
cmp
xlat
lahf
ja
int3
int3
les
push
incl
mov
mov
push
fdivs
pop
push
scas
dec
push
lds
gs
ret
sbb
fs
test
popa
movsl
sub
push
mov
shll
or
cmpsl
andl
adc
cmp
cmpsl
sti
sub
ds
int3
cmp
lea
lods
dec
pop
ds
int
mov
jl
dec
and
cmp
or
inc
push
scas
in
ret
xor
fwait
pop
mov
ret
jae
insl
sub
mov
sub
outsl
adc
push
mov
and
xor
lea
or
out
je
inc
jne
iret
test
out
js
jbe
cmp
scas
ficoms
cmp
push
cwtl
cli
loopne
inc
cmp
insl
cli
or
jp
ljmp
gs
insb
lret
into
dec
push
pop
mov
push
movsl
mov
mov
fisubrs
adc
inc
pop
push
jmp
aad
fildl
xchg
mov
push
int
movsb
loopne
mov
dec
xchg
jns
or
adc
push
sbb
scas
inc
or
cmpsb
dec
daa
repnz
mov
jmp
lea
insl
loope
iret
lcall
mov
loope
fimuls
sub
mov
adc
fcmovnb
mov
in
aaa
cmp
push
mov
sub
add
mov
pop
je
push
mulb
movsl
mov
inc
mov
push
push
loopne
outsl
ss
xlat
mov
mov
mov
push
sahf
das
das
pop
loop
out
xchg
dec
stc
in
and
adcb
mov
sub
fwait
xor
jge
leave
mov
lret
mov
cmpsl
insl
mov
js
mov
or
mov
std
insb
dec
cmpl
inc
xchg
dec
add
pop
push
cmp
inc
xchg
cs
test
cmp
scas
insl
adcl
fwait
nop
mov
leave
dec
inc
shlb
xor
mov
pmaxsw
repnz
or
jnp
int3
and
mov
jge
jle
and
mulb
add
je
scas
aaa
mov
imulb
cmp
sub
jno,pt
mov
adc
or
mov
cmp
jb
push
call
cmp
inc
inc
insl
mov
push
sbb
js
mov
hlt
loop
sbb
fldl
filds
fxch
push
xor
pop
jge
in
dec
insl
gs
pusha
mov
xor
mov
cmpsb
mov
lods
in
stc
pop
fcoms
adc
subb
pop
push
sarb
lcall
inc
dec
jb
movsb
or
mov
lea
std
mov
rcrb
idiv
mov
or
add
stos
incl
imul
mov
push
enter
mov
xchg
push
js
add
mov
jne
dec
shl
inc
push
and
and
imul
jnp
mov
idivl
pop
lods
arpl
mov
or
mov
in
xchg
pop
lock
addr16
aam
dec
jb
pop
dec
mov
test
popa
cmp
repz
dec
mov
popf
mov
push
inc
xchg
and
jnp
ja
xor
repnz
and
inc
popa
rol
fcompl
add
push
jb
and
push
mov
andl
mov
push
cmpsb
in
insb
jb
fisttpll
gs
or
popf
sbb
jg
into
iret
popa
leave
add
fimull
out
push
pop
fwait
imul
jp
in
test
mov
and
vpmacsdql
pusha
scas
decb
lea
fsubrl
add
push
mov
out
fs
test
out
lods
pop
js
adc
test
ja
sarw
sti
sbb
ja
inc
leave
xchg
xchg
jp
sahf
sub
pop
in
int3
cmc
dec
sub
xor
cs
in
sub
les
cmp
arpl
add
jno
dec
scas
movb
lods
int
fwait
push
imul
rcll
cmp
dec
dec
jg
repz
repz
jmp
add
cmp
and
stc
andb
jae
pop
loop
and
mov
and
sbb
jecxz
jbe
add
push
pop
shlb
sub
ja
jo
daa
xchg
push
xchg
out
arpl
inc
lea
add
scas
sbb
adc
pop
adcl
lret
push
jmp
data16
rorb
ja
xchg
jb
lock
mov
adcb
loope
incb
jecxz
sub
push
adc
push
jbe
movsl
push
adc
cmp
outsl
sti
insl
sahf
gs
push
dec
imul
adc
scas
sub
sub
adc
out
jp
jb
int3
daa
gs
sar
movsl
sarl
les
mov
fwait
cmp
jmp
lret
testb
enter
negl
xchg
int
movsb
cmc
mov
shrl
int
inc
jbe
cmp
and
jge
negl
adc
or
inc
jb
pusha
das
inc
gs
test
cwtl
js
lcall
mov
cs
arpl
pop
fiaddl
sub
daa
mov
xor
pop
adc
pop
scas
cmc
mov
sub
mov
pop
xor
sbb
and
out
clc
pusha
sbb
sub
xchg
std
jo
push
int
cli
and
inc
mov
icebp
mov
test
mov
enter
outsb
fidivs
push
lods
cld
adc
jne
loopne
lahf
lret
inc
lret
add
test
push
loopne
mov
sbb
inc
jmp
mov
inc
mov
sbb
fadds
mov
adc
dec
ficomps
xor
sahf
test
sub
stos
xor
push
enter
mov
dec
sbb
push
pop
pop
xchg
inc
repz
ja
cmpsl
movsb
pushf
mov
insb
and
sub
adc
pop
inc
jne
add
jae
bound
jo
inc
aaa
mov
leave
lock
sbb
sub
add
rcl
fdivs
movsb
lock
jbe
push
fldcw
ret
jge
lock
leave
mov
and
cmpsl
stos
cli
sub
jmp
or
stc
jnp
inc
ret
add
xchg
cmpb
outsb
add
jle
stc
lcall
xchg
push
mov
mov
push
pop
lcall
lahf
test
sbb
imull
pop
jns
and
test
cmpsl
pop
mov
and
or
ljmp
repnz
sbb
cmp
aam
sub
dec
add
out
sbb
imul
mov
les
data16
xor
xor
pop
sbb
pushf
and
push
xor
jp
pop
out
push
sbb
sub
lcall
inc
jbe
je
in
test
rep
jge
js
mov
int3
scas
loope
loopne
ss
mov
mov
test
out
xlat
negb
das
pop
in
dec
adc
out
jns
cmp
pop
mulb
and
or
cmpsb
fwait
leave
mov
and
lock
in
fsts
lods
dec
jp
stc
enter
push
cltd
aad
add
xchg
mov
adcl
cwtl
xchg
pop
scas
cmp
push
ror
push
andb
loopne
rcrl
lods
arpl
mov
aam
imul
scas
dec
pushf
adc
sbb
xor
mov
dec
mov
loope
add
inc
in
das
leave
mov
and
shlb
mov
and
or
int
push
pop
ss
jno
sbb
push
add
xchg
cmpsb
cmp
mov
push
hlt
sub
mov
cmc
out
xlat
push
dec
pop
sub
xchg
aam
scas
cmpsl
cld
aad
test
adc
and
sahf
test
push
sub
and
sub
shll
inc
jmp
jnp
rolb
arpl
popf
add
out
sub
andl
das
cmpsl
cmpsb
mov
jmp
out
inc
sbbb
lcall
lods
push
lret
xchg
in
cltd
jbe
ljmp
movsb
jle
cmp
lahf
lahf
rcrb
sbb
andl
mov
movsb
dec
dec
into
push
push
pop
ss
leave
fistpl
jle
inc
test
sbb
xor
mov
sbb
inc
movsl
xor
lds
imul
mov
test
pop
out
pushf
out
and
test
int3
int3
in
icebp
dec
ljmp
testb
lods
pop
xor
jne
or
arpl
lods
ret
clc
cltd
inc
nop
sub
jae
and
je
iret
adc
shrb
pop
ss
in
pop
xchg
in
sti
cmp
inc
xchg
int
sbb
aaa
mov
pop
aad
xchg
lea
sti
es
lods
test
rcr
out
fstl
mov
xor
sbb
rcrb
mov
rclb
pop
dec
mov
pop
out
jne
cmp
fisubl
outsl
xor
std
js
orb
add
hlt
mov
adc
mov
add
std
mov
pusha
shrb
sbb
aaa
fistpl
jl
cmc
dec
in
xchg
xor
xchg
jns
aaa
dec
sub
lods
push
movaps
ljmp
mov
insb
ss
cltd
outsb
das
inc
mov
mov
jno
jno
js
loope
mov
lret
sti
js
jbe
cmp
add
ljmp
sysret
add
mov
pop
mov
fwait
jae
mov
push
data16
jle
mov
outsb
fs
xchg
push
and
dec
movsl
loope
mov
std
in
out
push
cmp
sbb
insl
fdiv
jmp
xchg
dec
stos
sbb
into
sbb
jg
sbb
icebp
mov
dec
test
jecxz
outsl
mov
iret
fidivl
cmpsl
mov
ret
sub
pop
mov
inc
mov
lahf
inc
lods
les
mov
lahf
lcall
arpl
lcall
enter
sbb
js
sub
aas
mov
mov
add
dec
cwtl
xor
iret
cmovbe
lods
pushl
and
aaa
cmp
add
fnsave
push
mov
inc
mov
xor
pushf
or
sbbl
ret
push
or
out
mov
sar
xor
pop
sbb
and
mov
sub
xor
test
mov
xchg
test
inc
clc
mov
jbe
fwait
jb
inc
stos
xchg
shl
jo
loope
inc
xchg
ljmp
sub
mov
xor
push
mov
fucom
xor
pop
filds
jo
mov
in
sub
adc
psrlq
pop
dec
sub
mov
test
sahf
sbb
push
jae
add
fcmovnb
jo
cmpsl
out
out
jp
pushf
cmp
lea
push
push
xor
dec
pop
or
xchg
rorb
lods
fdivs
push
sbb
clc
push
arpl
aas
repz
xchg
out
xchg
popa
mov
enter
sbb
xchg
jl
sti
stos
jns
mov
push
xor
and
out
fcomip
xor
push
movsl
in
mov
pop
jmp
or
pop
jge
test
lcall
push
pop
lcall
loope
xorl
adc
push
nop
out
clc
std
pusha
xchg
testb
imul
imul
mov
xchg
fldt
lds
loope
lds
xor
insb
cmc
mov
sarl
push
pop
or
fcoml
sbb
shlb
mov
pop
fnstenv
mov
lret
mov
sbb
pop
stc
or
xor
pop
int3
mov
mov
mov
inc
sub
push
fiaddl
inc
mov
inc
mov
adc
setg
loope
ljmp
pop
xchg
mov
les
inc
ds
sti
adc
adc
dec
sbb
push
xlat
inc
aaa
loopne
mov
pusha
push
andb
loopne
leave
xor
xor
inc
push
out
loopne
pop
jbe
out
and
dec
icebp
and
adc
push
stos
mov
dec
push
vdivss
xorb
push
mov
cltd
or
adc
dec
clc
ss
pop
mov
xorl
lret
pop
mov
adc
lea
push
sbb
pop
mov
cmp
pop
push
clc
mov
fnsave
rcrl
mov
or
dec
leave
jp
sbb
nop
inc
scas
or
push
jp
scas
inc
mov
inc
push
pop
dec
loopne
sub
xor
cltd
xchg
pop
push
jg
stos
lret
or
repz
push
push
aas
and
ja
jmp
dec
repz
cli
pop
mov
add
xor
js
mov
in
sbb
out
leave
dec
test
test
aam
pushf
rorl
push
lret
jo
jmp
fistpll
pusha
inc
ret
scas
in
jbe
mov
cmp
outsb
xlat
aas
adc
call
dec
add
push
stc
ss
sub
nop
mov
or
or
xchg
aad
mov
loop
callw
rclb
loope
loopne
negl
test
inc
inc
dec
int
push
sbb
movsl
mov
ficoml
outsb
pop
mov
mov
imul
mov
fst
mov
jg
fmull
insb
jmp
sbb
fisttpll
jmp
rcrb
add
jge,pt
mov
rclb
out
mov
aam
push
adc
insl
aad
sbb
in
rcrl
jns
out
add
mov
mov
daa
popa
mulb
jnp
sub
inc
stc
inc
orb
insb
movsb
mov
add
jg
lret
sbb
loopne
dec
cltd
mov
fidivl
dec
pop
out
test
enter
lds
inc
scas
movsl
call
and
xchg
scas
in
mov
loope
and
stos
idiv
adc
ds
adc
aam
xchg
xor
test
dec
repnz
incb
cmp
xchg
rcll
rorl
inc
repnz
xchg
rcrl
jno
lret
shlb
mov
and
adc
ss
jnp
add
sbb
insl
in
inc
add
inc
sub
inc
jo
lret
mov
fyl2x
stos
das
ss
sbb
mov
mov
int3
test
popa
mov
cmp
out
xor
int
das
imulb
je
rcrb
cmp
push
push
mov
ja
and
push
cmp
stos
cmp
repz
inc
jo
sahf
or
mov
in
ljmp
add
xor
mov
mov
mov
mov
adc
inc
das
addr16
hlt
enter
push
mov
fsubp
pop
xor
popa
pop
dec
mov
and
filds
out
lods
jmp
gs
ret
sbb
jo
ss
fwait
mov
push
push
mov
adc
out
dec
data16
pop
push
inc
pop
test
inc
std
ljmp
and
inc
sbb
clc
aam
dec
dec
leave
inc
xchg
lds
mov
ss
xchg
into
divb
lcall
inc
jb
cmp
mov
fidivl
pop
push
mov
mov
and
fisubrs
movsb
and
das
aad
test
in
mov
xor
in
aad
push
dec
cmp
addr16
rclb
stos
lea
add
aad
icebp
mov
scas
xchg
cwtl
xchg
xchg
or
mov
sti
xor
stc
inc
popf
call
inc
les
mov
mov
les
add
imull
es
movsb
out
xchg
fwait
dec
popf
leave
mov
mov
test
out
jmp
int
mov
xor
scas
insl
shrb
inc
mov
mov
xchg
pop
cmp
jae
and
imul
cwtl
jl
outsl
and
jge
jecxz
inc
push
sub
xlat
cwtl
les
cmpl
roll
or
mov
js
inc
bound
and
dec
mov
add
loope
mov
cwtl
inc
call
aas
lret
sbb
jmp
mov
mov
push
inc
xchg
push
neg
push
mov
loope
loope
lret
les
stos
in
test
xchg
xor
sub
lahf
mov
mov
pusha
or
daa
pop
jne
xor
fcomp
insl
fdivrs
push
and
adc
push
push
imul
or
jge
dec
scas
rorl
jmp
pop
mov
mov
jecxz
add
sbb
flds
jb
pushf
fisubrl
subl
cmp
ja
test
enter
or
dec
mov
sahf
jmp
dec
cmp
jmp
adc
jno
ds
and
jecxz
imul
push
mov
sub
aas
cmp
sbb
fs
outsb
sbb
lods
mov
movsb
insl
outsb
dec
mov
es
inc
imul
jmp
push
cwtl
shll
fsubrl
mov
pop
or
xchg
jle
sbb
ljmp
sbb
aaa
rorb
sti
test
xor
insb
add
mov
notb
xchg
enter
pop
xor
inc
inc
mov
addr16
mov
arpl
cmp
iret
push
mov
mov
or
push
in
and
lods
cmp
cmc
ds
iret
mov
xor
push
jae
mov
pushf
pushf
or
sbb
mov
pusha
jno
dec
in
cmp
rcrl
cmc
cmpsb
mov
inc
mov
das
mov
xor
mov
adc
shlb
aas
mov
out
std
adc
cmp
xchg
push
daa
adc
ret
popa
aam
rcll
pop
xchg
cltd
pop
pop
les
int
lea
jmp
test
add
or
sub
sub
xchg
pop
stc
add
dec
addr16
pop
jp
mov
add
call
jge
clc
jl
xchg
fbld
lds
fdivrl
aam
pop
movsb
scas
jmp
pop
inc
fstps
inc
es
pop
sbb
les
repz
in
adc
loope
cmp
sti
sbb
adc
push
outsb
shll
jae
and
imul
cmp
popf
gs
sbb
jnp
xchg
mov
xor
repnz
gs
idivl
mov
fisubrs
or
mov
push
xor
push
mov
mov
adc
xor
hlt
mov
push
push
add
andb
jne
inc
das
lods
jb
cmp
filds
shlb
pop
push
and
inc
lds
mov
int3
xchg
push
or
mov
stos
add
pop
loop
cmpsb
out
mov
xchg
lock
mov
stos
insb
jecxz
add
aas
fdivl
stc
movsb
dec
notb
mov
pop
or
mov
jae
push
popf
cmc
rcll
iret
stos
sbb
scas
mov
xchg
test
movsb
imul
fdivs
mov
loopne
sub
add
cltd
cs
mov
dec
push
ret
mull
cs
out
divb
xor
cmp
sbb
inc
shl
push
mov
adcb
subl
sbb
dec
int
fildl
movsl
cmp
loopne
and
lea
cld
addr16
dec
mov
test
int3
sbb
mov
xchg
pop
cs
out
fadds
sub
cmc
mov
cld
sub
stc
push
ljmp
scas
cs
push
mov
jl
ret
rorl
out
ds
inc
dec
orb
and
js
xor
imull
adcl
sbb
mov
in
add
pop
push
in
mov
test
icebp
inc
fdivs
call
lods
xor
js
out
ret
cs
aam
in
xor
and
lret
and
pop
shlb
loopne
dec
or
enter
adc
orb
lcall
lea
fdivl
or
pop
cs
cmp
loopne
int
shl
pop
call
outsb
pop
pop
sbb
pop
mov
push
adc
test
or
jmp
or
cmc
pop
cmpsb
int
inc
xchg
loop
xor
inc
dec
cmp
sub
cmp
or
mov
pop
dec
xor
cmp
loope
rcrl
je
push
test
jo
cld
dec
jno
jle
jne
mov
stos
xor
outsb
and
sbb
mov
popf
xchg
movsb
data16
call
adc
daa
adc
xchg
add
decb
lahf
push
sbb
mov
fistpl
cmpsb
pop
mov
sbb
scas
mov
dec
cwtl
popf
sbb
pop
int3
and
push
xchg
pop
scas
fs
mov
fs
push
push
aaa
lods
push
cli
adc
mov
jb,pn
sbb
mov
cmp
xlat
stos
add
out
aas
xchg
enter
push
in
mov
pop
dec
popf
xchg
nop
fs
je
popa
imul
stc
mov
xlat
or
mov
cmpsb
xor
rolb
insb
push
aaa
je
xchg
xchg
xchg
aas
jl
lds
add
loope
rep
movsl
sbb
cmc
aas
xchg
adc
mov
lcall
loop
rcr
sub
xchg
xchg
repz
jae
ja
in
sub
push
xor
sub
xor
shrl
mov
sub
negl
push
mov
push
adc
mov
fdivp
insb
xchg
in
std
mov
imul
loop
pop
push
pop
pop
mov
aad
xchg
jae
fcomps
bound
daa
cmp
movsl
insl
inc
insb
mov
insb
jmp
mov
stos
lds
xor
loopne
add
xchg
xchg
xchg
mov
pop
loope
pop
call
daa
or
and
cmp
stos
arpl
insb
xchg
lds
fucomi
jns
sbb
popf
mov
loopne
pop
inc
sub
arpl
jmp
sbb
nop
add
test
xchg
add
popa
adc
mov
ffree
add
push
fidivl
mov
push
mov
flds
outsb
sidtl
and
and
push
outsb
mov
test
das
pop
sbb
pop
inc
hlt
repz
leave
mov
sbb
cmp
and
fisubrs
daa
adc
jae
loope
pop
mov
aad
mov
pop
lahf
mov
fistpll
nop
lcall
lds
adc
xchg
jmp
cmp
sbb
mov
lret
enter
mulb
push
pop
lock
loope
inc
test
mov
mov
cmpsb
jno
insl
out
test
dec
cmc
cmpsl
mov
mov
pop
fnsave
inc
lods
mov
mov
divb
push
loope
dec
arpl
xor
jmp
fdivl
scas
sbb
jb
cli
testl
xchg
sub
dec
ja
std
xor
push
mov
pusha
xchg
cmp
scas
je
sbb
arpl
in
aam
jle
insb
mov
cmp
lock
inc
out
push
divl
mov
xor
mov
inc
mov
mov
xor
and
jg
lcall
sub
inc
push
gs
push
xchg
cmp
cmc
out
push
jne
pop
fmuls
add
clc
and
pop
std
or
jno
arpl
mov
bound
imul
stos
mov
insb
aas
adc
xor
xchg
idivl
movsl
popa
in
inc
jbe
notl
les
hlt
xchg
and
inc
cwtl
dec
data16
inc
shrl
push
push
inc
fidivs
repnz
pop
mov
les
or
nop
inc
shlb
mov
and
mov
and
push
outsb
lret
mov
mov
mov
loope
fldenv
and
sub
sbbl
fidivs
mov
mov
stc
aam
test
cmp
cmp
cmp
scas
rclb
or
mov
mov
fidivs
popa
mov
lock
inc
dec
push
jns
xchg
ljmp
adc
in
lods
and
adc
jecxz
inc
stc
xchg
and
xor
ret
xor
pusha
pop
sti
and
cmp
xchg
push
lret
out
dec
xchg
xchg
xor
les
pop
sti
push
bnd
int3
mov
jbe
int
push
movb
lcall
sub
adc
idiv
jo
mov
cmpsb
inc
in
xor
aam
or
cmp
adc
cli
xchg
and
clc
mov
and
outsl
push
out
and
rclb
fsubs
mov
call
roll
addl
inc
or
es
and
mov
fdivrl
rolb
mov
xor
mov
std
inc
xor
add
addb
enter
or
aas
dec
dec
out
inc
ljmp
lcall
xchg
in
stos
cmp
repnz
or
adc
scas
pop
sub
setl
pop
rorl
add
pop
frstor
outsl
stc
aaa
pusha
lds
dec
mov
lds
or
or
hlt
sti
sub
mov
mov
popf
push
push
mov
sbb
jg
movsl
mov
pushf
jnp
cs
adc
jmp
ss
pushf
cli
inc
xor
xchg
fwait
pop
insb
mov
nop
dec
rorl
mov
pop
inc
stos
xchg
mov
lea
inc
mov
jle
icebp
inc
scas
fistpll
mov
sarb
dec
ret
pusha
movsb
bound
ret
data16
idivl
mov
pop
sbb
outsb
or
jge
jns
clc
jb
mov
sub
sbbb
fs
mov
js
lds
and
and
xchg
lods
inc
inc
inc
gs
ss
fbld
push
cmp
fsubr
movsb
popf
sarb
in
adc
dec
aaa
sti
arpl
add
daa
push
loope
and
fisubl
dec
mov
arpl
mov
in
inc
pop
jge
sbb
std
insb
sarb
xor
dec
sub
xchg
pop
es
xchg
in
out
insl
ror
scas
xor
lea
fs
xor
in
pop
inc
adc
mov
push
fiadds
cmpsl
pop
ret
test
pop
ds
fs
lock
xchg
xor
arpl
loop
mov
jno
mov
xor
std
mov
jle
push
insl
aam
mov
gs
das
subl
mov
xchg
outsb
in
push
mov
rcrl
xchg
lea
popa
sub
test
xchg
std
or
jl
stc
out
testl
or
pushf
jl
push
xor
test
je
aam
or
adc
mov
xchg
adc
push
add
call
push
cmp
loop
insl
int
sahf
je
push
mov
cmp
ficoms
in
fadd
fcmovnu
bound
adc
outsb
mov
lods
pop
rcr
lret
jmp
ret
mov
pop
pop
add
jb
ljmp
push
sub
add
mov
iret
mov
addr16
adc
dec
push
jmp
rcll
outsb
lahf
aam
out
repz
stos
fdivrl
mov
jl
push
jae
or
jp
shl
loopne
jnp
into
add
jno
sahf
or
cmpsl
sub
xchg
cmp
xor
outsl
aaa
mov
lcall
enter
add
adc
sti
cmp
in
mov
stos
dec
mov
call
cmp
leave
insl
and
jl
pop
mov
xchg
jbe
sbb
and
mov
pushf
mov
push
and
clc
mov
pop
xor
shl
cmc
pop
in
stc
dec
mov
xchg
mov
subb
pop
jno
jo
cmpsl
inc
dec
popf
push
dec
jns
testl
mov
shrb
leave
out
pusha
xchg
jno
jbe
sub
push
lahf
dec
and
std
cltd
push
mov
and
in
mov
inc
push
jb
inc
aaa
in
movsb
imul
je
sub
pop
or
xchg
cmpsl
ds
nop
xchg
xor
cwtl
push
xchg
out
mov
sti
jbe
cltd
jno
dec
jmp
mov
push
into
jmp
dec
mov
or
lahf
pop
and
jb
test
rcrb
mov
add
jns
and
push
or
sbbb
adc
out
pop
pusha
stc
or
in
add
dec
int
stos
cwtl
mov
dec
dec
push
lret
es
icebp
int3
pop
movsb
cmpsb
xor
inc
push
adc
mov
popf
movb
pop
jmp
jl
cmp
aad
sub
ljmp
push
scas
push
rorb
je
cmp
stc
sarb
pop
clc
push
xchg
sub
xchg
or
insb
cld
push
cld
sbb
pushl
adc
lods
mov
xor
mov
pop
test
add
lahf
cmpsb
xor
inc
dec
out
jl
pop
sbbl
aaa
movnti
push
pop
jp
sub
jl
or
jp
ss
mov
repz
dec
in
shr
dec
test
dec
fisubrl
test
fwait
push
arpl
hlt
add
xchg
pushf
or
inc
idivb
das
inc
lock
stos
loopne
lret
push
cmpsb
js
cltd
scas
mull
fsubl
fisttps
cmp
ss
xchg
fs
test
xor
gs
fdivs
xchg
mov
inc
sub
bswap
scas
les
dec
mov
std
mov
lods
mov
xchg
fwait
dec
gs
push
lea
mov
rcll
sub
jp
lock
xor
les
jb
test
ss
int
loopne
shlb
inc
imul
lcall
or
pop
xchg
dec
sti
cwtl
mov
pop
cs
aam
push
or
outsb
sub
and
adc
lret
pusha
push
push
scas
mov
push
jns
mov
or
jecxz
sub
sub
movsl
and
stos
or
jg
xchg
fnstsw
jge
mov
iret
xor
popa
mov
out
and
call
aad
and
mov
aas
sbb
mov
push
pop
sbb
ss
push
push
sub
pop
rcl
adc
pop
test
test
dec
xchg
pop
mov
pop
loope
inc
xor
movsl
aam
jmp
out
jo
or
push
adc
rclb
push
xchg
outsb
cmpsl
add
aam
cmp
push
imul
jae
dec
cltd
and
mov
or
es
sub
lret
test
jecxz
cs
dec
push
xchg
adc
into
mov
xlat
pop
or
ja
dec
jnp
cmp
xchg
pop
lret
mov
loop
lds
and
sbb
mov
mov
ret
xchg
mov
and
stc
imul
jnp
inc
cli
add
mov
jp
adc
push
int
or
mov
stc
mov
adc
scas
ds
int3
or
mov
enter
xchg
punpckhwd
and
and
push
ds
aad
xor
inc
cmpsb
jle
mov
fwait
test
or
sti
or
adc
pushf
or
xchg
lcall
xlat
jge
test
pop
xchg
lea
sbb
push
mov
loope
xor
inc
mov
outsl
jae
mov
js,pn
ret
icebp
test
hlt
adc
jns
dec
sbbb
jp
test
mov
lods
mov
mov
jne
cmp
mov
das
add
ret
dec
cwtl
mov
cmpsl
in
sub
mov
aaa
mov
es
pusha
cmpsb
mov
addr16
pop
xchg
jmp
inc
cmp
loop
or
xchg
mov
xchg
sbb
imul
xchg
jl
out
pop
and
cli
and
pop
cmpsb
dec
fwait
fsts
arpl
cld
fcom
adc
mov
dec
mov
add
jp
dec
jge
mov
sbb
or
mov
bound
push
lret
push
push
xchg
mov
mov
dec
inc
adc
add
das
inc
push
cmpsb
mov
mov
mov
fnstsw
xchg
add
fdivs
andb
dec
je
add
cmp
lcall
add
mov
addr16
mov
ror
rcrb
or
push
adc
xor
sbb
mov
sub
xor
jge
in
gs
in
sbb
ds
dec
dec
cmp
in
lcall
int3
cmc
adc
dec
cli
jnp
ja
jle
push
xor
cmp
ret
xor
rdseed
or
imul
dec
sub
mov
push
and
jne
call
test
mov
push
pop
out
scas
push
sub
jns
inc
pop
nop
cmp
pop
xor
push
in
dec
dec
adc
jnp
es
or
and
clc
test
je
lret
xchg
fdivrl
sbb
cmp
ret
fsubr
dec
sub
jns
pop
inc
in
xor
stos
lret
pop
add
or
jne
aad
push
fsts
sbb
mov
shr
cmp
shrb
sbb
xchg
data16
hlt
inc
mov
lds
adc
sub
enter
adc
arpl
ja
cld
and
loopne
es
xchg
scas
mov
mov
daa
in
into
and
aam
jmp
push
cmpb
pop
push
fs
out
out
inc
lods
push
sub
push
jle
aas
mov
or
testl
adc
out
push
ret
jge
adc
xor
add
stos
jae
dec
jbe
fnstenv
dec
bound
mov
pop
out
int
lods
loopne
jmp
dec
and
or
loope
xchg
icebp
cli
outsb
push
xchg
and
mov
lea
or
xor
pop
dec
fs
in
imul
lods
ror
aas
jo
mul
jmp
ret
lods
xchg
xor
sub
nop
das
cmpsb
inc
pop
xchg
xchg
mul
xchg
out
rcrb
outsl
dec
pop
int
nop
pop
shlb
test
shll
add
jnp
cmp
and
jae
sbb
add
mov
mov
testl
adc
imull
mov
lcall
xchg
icebp
ror
xchg
xor
daa
pushf
xor
out
xchg
loop
mov
mov
repz
push
fbld
mov
cmp
jmp
cmp
es
frstor
sub
in
add
push
aam
loop
or
xchg
push
or
pop
and
lahf
mov
in
adc
dec
cmc
cmp
or
jecxz
push
sbb
mov
inc
xor
cmp
jns
mov
jnp
lods
lods
inc
arpl
pop
aas
sub
mull
cmpsb
sbb
or
lds
xlat
cmp
pop
sbb
xor
lcall
inc
clc
shl
xchg
loop
mov
inc
leave
jl
push
xchg
lock
adc
lock
push
dec
aad
outsb
cld
mov
sub
daa
leave
adc
jg
mov
add
enter
dec
mov
adcb
lret
gs
add
pop
ss
mov
sti
stc
inc
mov
std
jmp
out
xchg
repnz
jno
movsl
imul
cmp
cld
mov
xlat
sub
xlat
xchg
in
add
inc
pop
pushf
lret
iret
cltd
shl
imul
je
ss
imul
insb
add
out
int
repnz
loop
sub
sbb
and
xor
xlat
pop
adc
pusha
jl
jo
aam
adc
inc
mov
push
dec
ja
testb
dec
repz
incb
out
dec
jb
jl
js
fstl
fldt
insb
movsb
int3
pop
mov
mov
xor
and
and
pop
adc
repz
mov
push
cli
cmc
cld
data16
gs
inc
fnsave
fs
adc
cmp
gs
lock
add
dec
or
push
movsl
shlb
mov
xchg
mov
fistpll
dec
xor
aaa
fsubr
je
imul
xchg
mov
cmpsl
fnstcw
mov
pop
dec
inc
cmpsb
mov
aad
add
xchg
and
js
mov
pop
data16
stc
and
mov
add
in
in
pop
mov
aam
stos
fldcw
pusha
sbb
fsubrs
sub
or
hlt
inc
mov
push
push
lods
jp
bound
movsl
xchg
aas
shlb
dec
pop
pushl
dec
push
outsb
mov
inc
xor
std
shll
sub
mov
test
in
mov
enter
dec
pop
dec
xor
fistpl
add
and
dec
addb
mov
mov
mov
dec
mov
jb
push
sarb
sub
xchg
lea
je
ret
les
pop
insl
pop
mov
jnp
push
lret
es
int
sbb
jl
jl
inc
xchg
mov
pop
xor
xchg
adc
div
adcl
add
aas
cvtps2pi
inc
pop
pusha
cmpsl
adc
mov
mov
or
inc
lret
out
into
or
rclb
push
call
xchg
testl
mov
mov
xchg
adc
stos
stos
inc
fcmove
enter
sahf
push
rorb
mov
es
mov
dec
rolw
in
iret
insb
loope
sub
sti
xor
push
sbb
lea
fs
sub
sbb
mov
inc
cmp
jecxz
inc
les
mov
dec
mov
das
mov
xlat
fmull
jno
pop
and
inc
dec
cmp
sbb
push
pop
loope
loop
inc
add
ljmp
out
sbb
sbb
mov
jecxz
pushl
pop
cld
hlt
out
dec
sub
nop
enter
and
add
lcall
inc
cmpsl
xor
lea
mov
mov
push
ds
mov
sbb
xchg
fs
mov
push
push
shlb
xchg
pop
rcrb
test
mov
or
out
sbb
cltd
cltd
repz
and
hlt
dec
mov
stos
xor
mov
mov
fstl
xor
sbb
mov
cmp
mov
jmp
jecxz
aas
inc
jg
jne
lds
mov
xchg
and
mov
sbb
pop
int
aas
xchg
sub
ret
clc
pushf
jne
pop
loope
and
xlat
inc
add
addr16
inc
loopne
test
sarl
fcoml
mov
mov
call
sub
std
fnstsw
mov
fsubrl
enter
push
mov
pop
push
mov
andl
ficoms
outsl
loopne
jb
in
dec
shlb
std
xchg
fsubrs
js
cmpsl
fbstp
lret
in
xchg
sti
test
sub
jns
shlb
jae
cmpsb
std
rcrl
mov
jle
out
movsl
movsb
movsl
push
or
jb
cmpl
adc
cmp
dec
mulb
cltd
push
rcll
jae
adc
dec
xlat
or
mov
in
mov
sub
iret
or
push
jle
idivb
test
shll
std
cmpsl
movsb
mov
mov
sti
mov
les
icebp
push
sbb
sub
icebp
xchg
bound
mov
adc
fmuls
mov
xchg
popa
adc
stos
xchg
ss
inc
jns
adc
lret
adc
scas
sub
pop
pushf
mov
clc
inc
add
dec
icebp
adc
sahf
fidivrl
je
fdiv
sub
loopne
mov
add
cmpsl
out
sbb
and
push
fs
dec
jecxz
js
sub
jbe
rcrl
test
es
sahf
daa
sub
shll
in
sub
adc
pop
daa
das
cmp
sub
lock
cmp
sarb
lds
push
inc
dec
aam
inc
cmp
dec
popa
mov
pushf
push
out
fstl
or
out
mov
mov
repnz
xor
inc
movsb
aaa
test
mov
stos
lret
ds
push
jo
mov
mov
cmpsl
cmp
push
xchg
cmp
stos
pop
mov
dec
mov
lea
fdivr
out
flds
out
dec
das
inc
sub
xchg
sub
bound
inc
xlat
xchg
pop
sarb
mov
daa
jnp
mov
or
neg
sbb
dec
call
adcb
pop
inc
xor
mov
sub
fmuls
or
fistps
ljmp
pop
jno
cmp
xor
les
xchg
dec
fcomi
outsl
adcb
mov
je
nop
dec
sbb
jecxz
mov
dec
mov
in
pop
add
sarl
aas
mov
mov
pop
push
mov
sub
sub
xlat
aam
out
jae
jmp
xchg
sub
push
rorb
hlt
pop
pop
fsts
daa
imul
dec
adc
imul
and
pop
add
imul
stos
jl
adc
ss
jae
and
mov
sub
int3
int
pop
lods
push
dec
sbbl
shll
mov
sbb
sub
pop
xchg
pushf
fnstenv
aam
or
nop
repz
xchg
lds
fisubrl
stos
nop
sahf
sbb
cmp
add
xor
cmp
mov
mov
out
push
mov
dec
scas
sub
filds
sbb
out
pop
add
test
bound
inc
cld
cmp
bnd
xor
adc
lret
xor
inc
dec
lods
and
jno
insb
mov
jg
cmp
jns
dec
push
add
xor
xchg
push
bound
mov
cli
jmp
jb
mov
mov
adc
inc
and
push
lea
add
ret
cmp
andl
ret
and
xlat
sub
dec
iret
popf
shlb
fadd
mov
subb
mov
inc
jae
sub
cwtl
mov
sub
add
stos
rol
add
insl
mov
pop
orl
mov
aam
fldenv
clc
pusha
and
mull
jno
push
add
add
sbb
and
xchg
sub
mov
sbb
mov
mov
in
cmc
add
push
cs
faddl
ja
adc
mov
sub
inc
sbb
or
dec
sahf
lods
iret
mov
xchg
cld
xchg
lods
sub
jnp
fsts
jecxz
jl
test
sub
push
mov
and
shrb
repz
or
nop
outsl
movups
fxch
fidivrs
jle
icebp
push
xchg
jge
adc
nop
loopne
push
xor
mov
imul
jmp
enter
mov
cmp
push
fdivr
mov
xchg
push
ljmp
pop
popa
pop
in
std
insb
xrelease
push
xchg
subb
adc
add
es
testl
mov
in
add
scas
dec
sub
aaa
sbb
cltd
and
jg
sub
sarb
lahf
imul
aam
repnz
and
stos
mov
pop
ja
inc
test
mov
mov
dec
lcall
sub
and
add
adc
ja
xor
or
add
shrl
xchg
fidivrl
pop
cltd
int3
cmp
or
inc
inc
pop
jge
xchg
lds
ss
popa
lahf
push
push
dec
and
cmp
lret
push
push
mov
in
test
inc
or
addb
int
xorb
mov
decb
push
or
rcrb
jno
adc
arpl
jmp
inc
xchg
rcl
out
ret
lock
and
fstpt
jmp
dec
hlt
shrb
mov
nop
fs
dec
jecxz
shrl
jne
int
lds
add
mov
out
subl
sub
mov
js
out
je
mov
sbbb
xchg
mov
pusha
test
lds
mov
cmp
cmp
repz
rcll
push
outsb
rcr
pusha
outsb
push
inc
push
and
out
mov
aas
rcrl
xlat
push
push
adc
mov
imul
or
mov
dec
subl
call
mov
cmp
sbb
aas
or
stc
xorl
cmp
in
pop
dec
mov
cmpsb
in
je
in
loope
rcrl
fildl
xor
out
mov
push
fildll
or
fwait
test
lahf
es
xchg
jp
cmp
lds
mov
shrl
aam
xor
or
push
stc
pop
sbb
inc
es
sbb
or
psrlw
sbb
push
gs
or
cmp
fistps
cmp
aad
in
outsb
shlb
mov
mov
xchg
fcomps
les
jmp
ds
iret
dec
lret
leave
adc
ret
sub
fcoml
adc
lcall
pop
or
popa
or
aaa
sarl
pop
repnz
xor
add
sub
jl
xor
sbb
cld
cmp
insb
repz
pop
insl
inc
movsb
aas
addr16
xchg
andb
mov
dec
add
es
mov
lret
mov
orl
adc
outsl
and
push
add
xor
inc
lock
pop
pop
into
fsubrl
outsl
push
repnz
or
cltd
aaa
out
push
ror
sar
xor
ret
filds
inc
pop
fsubs
popa
push
sbb
mov
fisubrl
js
xor
push
je
ss
fstps
cltd
and
imul
mov
dec
pop
adc
lret
lahf
jo
pop
clc
cmp
mov
xor
add
and
jne
prefetcht0
insb
insb
adc
in
rolb
data16
mov
mov
xor
pop
leave
or
les
pushf
and
add
pop
mov
lret
sbb
cltd
pusha
lahf
bound
cwtl
jbe
nop
lcall
push
sub
aad
and
or
xchg
mov
aad
mov
push
pop
mov
mov
and
fsubs
add
sbb
push
in
lds
inc
movsl
mov
mov
mov
gs
inc
scas
mov
xchg
mov
xor
mov
pop
out
sarl
jecxz
lods
lret
mov
inc
adcl
fstps
pop
jne
insl
mov
xchg
mov
sub
jnp
stos
in
xchg
sbb
dec
out
clc
pop
es
push
movsl
xor
or
popf
repnz
xchg
push
andb
inc
out
int3
ds
cmpsl
sbb
push
call
fbstp
and
add
dec
cwtl
pop
xor
fwait
test
inc
fbld
or
xorl
subb
movsb
fxch
dec
mov
xor
and
mov
outsl
sub
test
mov
mov
leave
mov
aaa
clc
xor
or
inc
jp
xorb
inc
ret
fwait
add
add
push
psllq
clc
jl
dec
lahf
sbb
dec
push
push
xchg
test
push
outsb
inc
clc
out
leave
push
test
mov
push
pop
inc
xchg
scas
fldcw
inc
add
std
jmp
addr16
fidivs
sub
pop
xchg
rcll
jae
mov
nop
fucomi
cld
mov
push
and
je
cmp
test
movsb
fldt
and
ds
dec
rcrb
xor
repz
sbb
mov
pop
inc
daa
jne
push
lret
jnp
push
cmp
in
jno
sahf
or
mov
jns
aam
push
pop
mov
adc
and
pop
cmpsb
nop
sbbb
iret
jno
mov
insl
out
push
out
popa
xchg
or
sbb
mov
dec
test
xchg
in
es
sbb
insl
adcl
in
jno
xor
push
call
mov
pop
dec
arpl
sbb
enter
mov
movsb
mov
arpl
stos
push
rcrb
jmp
shl
stc
pop
xor
ss
cwtl
cmp
mov
cli
popf
lcall
mov
xchg
mov
xchg
push
or
pushf
repnz
insl
movsl
cmp
fdiv
loopne
fs
pop
in
shrl
xchg
hlt
fistpll
cmp
ret
aaa
xchg
jbe
jmp
sbb
loop
mul
jmp
test
xchg
mov
mov
ds
pusha
rorl
ret
test
in
mov
das
jmp
inc
pop
or
or
push
xor
jae
hlt
scas
jp
sbb
sbb
ss
popf
xchg
push
les
cld
loope
jb
ret
add
adc
std
imulb
jmp
pop
mov
sub
ss
aas
nop
sbb
dec
cltd
faddl
push
ret
push
jl
pop
mov
cwtl
test
int
ds
les
mov
jecxz
push
or
outsb
test
dec
ret
mov
pop
shll
push
movsb
pop
pop
in
es
repz
push
mov
push
aaa
ds
leave
pop
and
imul
stc
scas
dec
lcall
scas
add
adc
jmp
in
into
cmp
add
push
repz
adc
fs
cmp
add
pop
repz
in
pop
add
push
push
outsb
popa
sbbb
lock
pop
mov
sub
movsl
jae,pt
mov
scas
mov
inc
out
sub
stc
fcom
add
imul
or
hlt
jge
adc
and
ffreep
jbe
xor
inc
dec
inc
cmp
add
inc
sbb
jle
movsb
lods
mov
jge
mov
mov
xor
inc
cmp
pop
add
lret
cmp
pop
or
add
pop
repnz
pushf
sar
cmpsl
jne
push
es
std
adcl
adcl
dec
xchg
ficoms
pop
cli
jb
loope
inc
cld
cmpsl
rolb
pushf
adc
ror
or
je
pushf
xlat
aas
push
pop
push
es
or
push
mov
xor
jmp
mov
cli
pop
ss
xor
sub
cmpb
sbb
push
leave
dec
fldcw
punpcklwd
add
or
dec
ficoml
scas
mov
sbb
fisubs
scas
add
mov
mov
push
scas
pop
stos
push
and
cmp
enter
mov
add
std
lods
daa
dec
adc
mov
mov
xchg
ret
sbb
add
aaa
and
cmp
xor
pop
nop
repz
pop
mov
aam
adc
push
mov
push
call
add
mov
sbb
imul
and
push
cld
movsw
loop
adc
jae
in
lds
cltd
jecxz
and
jp
mov
stos
xchg
pushf
jle
xor
sub
inc
cmp
dec
dec
mov
lea
jle
hlt
out
dec
lods
adc
test
jecxz
les
cmpsl
outsl
sbbb
jae
and
test
inc
popa
int
dec
cmpsl
pop
cmpsb
orl
imull
pop
xchg
jmp
daa
mov
scas
pop
jg
xor
fmuls
mov
jmp
jno
mov
fwait
jge
das
ficompl
mov
fildll
out
fimuls
pop
xchg
arpl
mov
fs
mov
test
mov
cmpl
loopne
fwait
jge
mov
mov
mov
js
test
or
andl
mov
je
filds
je
or
add
jmp
and
sahf
adc
mov
jns
push
dec
cmpb
lds
loop
jge
xchg
lret
pusha
test
sub
push
pop
in
push
mov
stos
or
insb
shlb
divl
or
cmpsl
sub
rol
pop
ja
jg
xchg
mov
clc
jne
push
xor
lods
lahf
sub
sahf
cld
xor
add
cmp
ja
add
ss
cmp
jecxz
xchg
cmpsl
cmc
arpl
dec
fidivl
int
mov
xor
movsb
bnd
push
bound
xor
adc
adc
fcoml
shlb
fists
mov
jbe
pop
jbe
or
push
xor
adc
add
adc
cmp
dec
mov
jo
or
fnstcw
mov
fbstp
ds
mov
push
lret
adc
imul
ljmpw
sub
cmp
xchg
add
mov
ja
mov
or
and
mov
inc
jnp
mov
ja
pop
loopne
mov
pop
pop
xchg
push
loope
cltd
dec
mov
inc
or
jl
add
fsts
cs
addr16
jl
push
mov
pop
cmc
mov
xor
lcall
mov
sub
add
or
out
lock
dec
sbbl
xor
adc
jge
inc
ret
mov
pop
mov
or
and
hlt
pop
decb
push
clc
push
pop
sti
push
adc
clc
icebp
dec
sub
ror
stc
test
movsl
jne
lcall
mov
mov
xor
pop
test
sarl
adc
push
repnz
cs
gs
add
std
es
mov
mov
in
ss
lahf
lret
mov
jmp
arpl
pop
or
in
sarb
mov
mov
xor
adc
cmpb
and
jle
xchg
cmp
mov
pop
stos
mov
pop
pop
shl
jl
cmp
and
ds
xchg
cmpsl
fdivrl
cli
push
dec
test
add
leave
addb
sahf
jno
loopne
scas
hlt
mov
in
pusha
in
mov
mov
pop
dec
cwtl
dec
xor
xor
arpl
adc
xor
adc
cltd
pop
lahf
pop
bound
imul
pushl
scas
out
test
or
pusha
repz
repz
mov
inc
sub
cmp
lahf
mov
stc
sbb
mov
iret
bound
sahf
movsb
lret
hlt
or
fldenv
xchg
sti
cmp
dec
xor
ss
dec
ret
push
stos
pop
dec
sub
leave
cmp
xchg
mov
test
int
add
loopne
or
movsb
lock
in
jmp
mov
inc
or
add
jmp
xor
and
sbb
aaa
idivb
test
cmp
lock
pop
mov
push
inc
push
outsl
push
fs
jns
movsb
or
xchg
ret
hlt
lds
fs
mov
dec
push
mov
imul
xchg
sbb
dec
dec
push
lods
pop
or
sbb
push
push
je
sub
popf
outsl
jo
lods
js
and
ja
test
pop
lds
jecxz
jno
mov
xchg
stos
xor
inc
popf
hlt
lcall
jmp
inc
add
fisubl
je
push
cmpsl
test
pop
jbe
xlat
int
sti
aad
push
out
dec
mov
or
sahf
push
out
mov
mov
aam
aam
xchg
xor
xchg
and
and
ret
sbb
add
cwtl
dec
into
cld
loopne
add
sti
lods
aaa
adc
cmp
insb
out
sbb
das
mov
mov
inc
and
jb
and
popa
outsl
and
push
int3
in
jl
lahf
mov
dec
call
xorl
ljmp
sbbl
in
jl
add
cli
mov
mov
int3
mov
movsb
sar
cmp
dec
push
rcr
divb
mov
fdivs
dec
dec
out
lds
jp
sbb
aam
mov
clc
jg
pop
movsl
xchg
xchg
jae
push
stos
jb
mov
fptan
jns
cs
aaa
dec
pop
negl
and
dec
pop
jnp
addr16
fdivs
or
jecxz
mov
mov
lret
fildll
sbb
cmp
push
popa
sbb
mov
fwait
push
mov
aas
push
jb
pop
jecxz
pop
imul
imull
lock
cs
std
add
imul
leave
cmp
sbb
mov
push
mov
or
pusha
xor
jbe
repz
mov
iret
out
aam
incb
mov
nop
jb
sbb
jno
scas
fldenv
out
scas
xor
sub
and
jmp
xor
jge
jbe
cmp
push
mov
jns
inc
out
pop
fsts
into
jae
inc
sub
lods
sbb
xlat
dec
test
fwait
jge
arpl
js
into
popa
dec
inc
fisubl
xor
jae
push
outsb
or
popf
cmp
xchg
lea
pop
sbb
mov
push
stos
jnp
xor
lds
and
lcall
pop
scas
enter
lcall
mov
pop
scas
out
adc
jmp
iret
clc
jp
or
jbe
jne
fwait
adc
lods
test
outsl
fisubl
mov
pop
js
add
insb
mov
cmp
cmp
sub
pushf
rcrl
scas
pop
or
int
pop
out
cwtl
cmp
loop
jl
pop
mov
loop
mov
sbb
out
xchg
cmc
rorl
data16
mov
mov
imul
jl
lods
jne
es
mov
lahf
add
daa
ja
xchg
scas
rclb
push
mov
into
xor
sbb
cld
sbb
mov
cmpsb
and
xchg
in
mov
or
cmp
sahf
add
mov
mov
add
xlat
dec
inc
aas
fisubl
inc
fwait
xchg
push
testb
add
mov
sub
stos
jbe
js
xor
push
add
cmc
enter
mov
adc
mov
xchg
cmp
fldcw
rorb
outsb
rcl
add
daa
clc
insb
imul
push
mov
inc
mov
pop
cmp
jbe
imul
adc
popa
inc
xchg
dec
sub
pop
mov
push
mov
adc
lods
fldt
out
and
inc
xchg
dec
mov
add
mov
mov
scas
add
pop
iret
mov
sbb
in
popa
jl
push
xlat
mov
dec
xchg
and
mov
insb
or
mov
jb
icebp
xor
imul
mov
sbb
cmp
popf
into
les
in
cli
pop
adc
loopne
and
scas
in
shlb
mov
int
jb
mov
arpl
cmp
xchg
cmp
mov
mov
push
push
cmp
ror
push
cltd
lock
pop
lods
xchg
aam
inc
das
jne
out
in
sub
fdivrs
in
jg
in
fdivs
jbe
cmp
push
jmp
mov
xor
out
aam
add
mov
inc
fwait
jecxz
xchg
xor
mov
sti
es
mov
pusha
and
andb
push
pop
jnp
neg
gs
mov
dec
mov
xchg
or
cs
loop
push
xchg
dec
cmpsb
xchg
mov
ja
and
xchg
fldl
inc
js
mov
scas
mov
xor
sub
jb
cmp
dec
lret
hlt
inc
js
inc
lds
fwait
mov
or
pop
bswap
jb
mov
mov
psraw
notl
int
inc
adc
or
test
and
divb
repnz
and
std
pop
jnp
pop
enter
xor
push
outsb
jmp
add
adc
xor
xchg
test
mov
mov
daa
lock
cmc
mov
stos
push
test
and
and
cmp
add
lea
jecxz
xlat
jl
jmp
mov
sub
rorb
cmpsl
ret
mov
mov
cmp
aas
sbb
imul
in
lahf
shr
dec
inc
fs
dec
dec
fistpl
sbb
imul
sub
stc
sub
andb
out
popf
lods
inc
cmp
mov
outsb
mov
add
lods
movl
stc
mov
cmp
sub
jmp
or
sub
mov
ja
int3
jne
cs
je
or
mov
cltd
mov
rorl
dec
aas
mov
ss
sbb
lret
clc
outsl
lds
push
sbb
and
in
mov
sahf
std
mov
push
out
aad
pop
xlat
shl
cmpsb
push
stos
add
int3
std
add
or
repz
ja
int3
jecxz
cmp
pop
cmpsb
pop
popl
jmp
aam
das
and
lahf
rorb
mov
test
xor
or
arpl
jns
jne
lock
push
or
push
testl
lock
xor
pop
jne
mov
test
xor
sbb
fsubr
push
dec
aas
ds
lret
test
in
inc
mov
call
js
xchg
xorl
mov
icebp
addr16
scas
das
adc
je
mov
add
xor
frstor
stc
sbb
mov
add
dec
jl
mov
and
xlat
and
push
add
push
shr
loope
cmp
lea
mov
stc
sbb
mov
jnp
sbb
rol
pop
jge
mov
add
sbb
mov
mov
jae
mov
les
frstor
pop
fwait
mov
dec
inc
pop
pop
lock
mov
dec
mov
pop
fldl
iret
enter
inc
fwait
jnp
stc
mov
mov
dec
or
inc
fidivs
in
sub
inc
dec
push
mov
lds
or
push
cwtl
mov
fisubrl
sub
jb
movsb
test
pusha
jno
push
out
int3
push
rcll
mov
cmp
mov
repz
mov
xor
cmp
test
pop
pop
cmp
push
inc
or
int
sub
mov
shrl
popf
add
in
scas
popf
adc
cltd
inc
mov
jae
and
fmull
and
jnp
clc
mov
add
xor
hlt
inc
push
pop
inc
xlat
clc
mov
adc
sahf
pop
jo
push
push
push
leave
outsb
in
push
push
into
aas
jae
or
in
lods
and
aam
pusha
nop
aaa
out
addl
sbb
fldcw
fs
sbb
int
jno
andl
cmc
xor
decl
jo
out
scas
adc
aaa
inc
sbbl
push
std
pop
xchg
shr
gs
pop
xchg
lock
out
in
cmp
inc
out
outsb
das
stc
inc
mov
mov
mov
loope
test
xor
fs
clc
cld
and
imul
inc
mov
jnp
lahf
cmp
sub
push
inc
subb
sub
add
adc
mov
jmp
dec
fidivrs
sub
ret
shll
inc
and
nop
xchg
stos
dec
fwait
dec
cmp
mov
int3
mov
aam
js
rcrb
adc
lea
shr
cmpsb
icebp
cmpb
push
pop
push
popa
mov
sub
fcoms
dec
or
roll
push
and
cmp
cli
and
add
ficoms
sbb
enter
movsl
xchg
push
lahf
sbb
mov
and
push
jnp
cmpsl
insl
jg
loop
xchg
xchg
dec
cmpsb
cmpsb
repnz
or
xor
dec
adc
in
jmp
jge
fimuls
insb
adc
jo
in
jge
dec
xchg
orb
mov
push
cmc
xor
repz
inc
lea
imul
addr16
jmp
xor
hlt
jg
cmpsb
push
das
dec
xor
push
je
cmp
lahf
adc
call
mov
adc
dec
mov
jnp
mov
inc
sbb
fiaddl
aas
inc
jg
jne
sbb
std
lcall
push
adc
ja
mov
aam
push
cld
push
and
push
movsl
aad
test
inc
push
sbbb
mov
ljmp
rcr
mov
cmp
adc
inc
pop
dec
sbb
adc
mov
in
sbb
inc
rolb
loop
adc
mov
cmp
adc
jmp
xchg
aad
lret
push
jae
aaa
lahf
repnz
fimuls
fiadds
repnz
sub
int
cmp
inc
enter
xchg
inc
popa
xor
jmp
mov
sbb
xor
sub
cmc
and
lcall
push
movsb
fldl
mov
cmpsb
popf
movsb
xchg
xor
xchg
into
movsl
inc
es
in
or
test
pop
iret
test
cld
lods
mov
loop
aad
add
ljmp
daa
and
sub
scas
and
xchg
xchg
ret
add
pop
cwtl
xchg
movsl
mov
pop
mov
aas
mov
jecxz
cmp
pusha
rorl
idivl
sbb
xchg
xor
fstps
outsb
adc
lods
xchg
jb
adc
pushf
clc
es
in
xchg
sub
xor
pop
movsb
cmp
fsubrl
stos
fsubs
inc
xor
and
jbe
int3
jns
test
insl
dec
push
mov
xor
in
js
mov
popa
testb
mov
rcll
iret
mov
aaa
xchg
stc
cli
imul
or
pop
imul
daa
addl
cmpsb
jne
mov
fldcw
outsb
lahf
and
cmpsl
lds
adc
stos
into
jge
test
pop
pop
dec
inc
mov
sbb
ret
xchg
cld
call
in
test
push
scas
repz
mov
xchg
jno
sbb
enter
xor
mov
das
cmc
jo
or
adc
and
sbb
sub
adc
cmc
push
mov
adc
xchg
mov
testl
ficoml
lds
mov
push
mov
dec
sub
push
mov
mov
sbb
aad
cmpsb
mov
pop
cltd
popf
mov
sub
ljmp
pop
arpl
aad
mov
cmp
mov
pop
lahf
fs
fs
cwtl
imul
loope
pop
or
sub
bound
xor
pop
ret
mov
enter
aam
data16
incl
jg
push
mov
push
mov
push
pushf
jle,pt
pop
out
imul
pop
push
outsl
dec
jbe
push
adc
rorb
inc
jae
imul
ds
jbe
fwait
cmp
lcall
mov
imul
mov
inc
loope
fisubrl
mov
cmp
adc
mov
test
std
gs
lods
int3
imul
icebp
imul
mov
addr16
xchg
icebp
test
rol
sub
mov
jmp
scas
cld
or
push
lock
push
rolb
pmulhw
mov
and
dec
mov
and
sbb
int
jecxz
adc
inc
das
stos
jnp
mov
shrb
mov
add
cmpsb
call
insl
loope
scas
jecxz
adc
adc
dec
inc
or
inc
mov
push
jne
xor
xchg
rorl
cli
add
pop
xchg
decb
sbb
jg
adc
pop
and
cs
dec
addr16
pop
xchg
fstl
cmp
enter
call
sub
adc
data16
les
xchg
leave
jl
fcoml
xchg
and
add
pop
insb
inc
xor
jmp
mov
xchg
push
sub
mov
call
jne
clc
dec
add
loopne
adc
lods
repnz
mov
inc
lods
gs
xchg
movsl
rorl
fcomps
enter
and
movb
int
arpl
shlb
mov
mov
or
and
dec
push
lret
outsl
xchg
add
pop
pop
jae
xor
testl
aam
outsl
fmuls
dec
test
clc
mov
pop
mov
inc
push
sub
js,pt
lods
bound
or
in
mov
out
call
dec
repnz
sahf
nop
jno
or
lds
ds
fisubrl
js
inc
jl
jnp
mov
mov
jb
xchg
iret
loop
pop
inc
divb
adc
push
pusha
inc
test
xchg
push
and
and
push
jecxz
scas
inc
lea
roll
lret
bound
ret
test
jb
pop
loope
push
push
mov
push
mov
sbb
cmp
sbb
or
imul
lods
inc
ret
ret
pop
ds
ret
icebp
and
xor
push
je
and
pusha
stos
xchg
or
pop
mov
lret
jb
dec
ljmp
xchg
pop
shrl
mov
inc
xor
fisubl
fucomp
jle
call
popf
xor
xor
dec
jb
icebp
loope
mov
sbb
push
int
pop
xchg
out
sar
in
pushf
pop
cmpsl
pop
xchg
push
es
and
ficoms
lods
bound
test
out
xchg
mov
push
test
inc
insl
mov
notb
push
repnz
rclb
inc
aad
test
xor
or
adc
outsb
mov
jno
mov
xor
jbe
sahf
scas
jne
mov
inc
js
pop
push
popf
jnp
rcrb
push
aas
arpl
mov
movsb
add
fldt
xchg
mov
and
imul
xor
lods
xlat
rorl
jno
popf
or
push
rclb
lahf
sahf
outsb
je
addr16
ret
out
pop
push
adc
mov
rclb
rol
lods
push
mov
dec
adc
out
loope
pop
pop
or
ja
and
sub
push
pusha
xlat
hlt
jmp
cwtl
push
jns
in
jno
popa
push
iret
sub
lods
xchg
pop
jo
sub
movsb
daa
es
bnd
push
xrelease
gs
pop
pop
jp
fbstp
pop
es
adc
sbbl
xor
inc
pop
mov
mov
inc
inc
outsb
leave
jo
testb
rcrb
xor
jge
adc
ficompl
sbb
xor
adcb
imul
push
cmp
mov
clc
sbb
xchg
addl
jae
pop
mov
dec
mov
mov
cmp
lds
insb
inc
push
sbb
push
cmp
adc
lahf
push
pop
mov
mov
stos
inc
popa
scas
popa
arpl
jne
out
insb
adc
out
xchg
cltd
cmp
out
fsubs
xlat
push
lret
loopne
mov
jp
loope
dec
loope
cwtl
loopne
add
mov
cli
jbe
fmuls
jo
ret
daa
inc
pushf
mov
jp
leave
rcll
and
jbe
in
pop
cmpsl
test
inc
fisttpl
pop
jmp
test
jmp
repz
jns
pop
pusha
insl
inc
xchg
sub
hlt
addr16
outsl
aam
xorb
jne
ret
fisttpll
mov
jl
lods
push
dec
ss
cltd
jno
ljmp
push
pop
or
test
loopne
notl
cltd
sub
mov
pop
pusha
repz
stos
imul
dec
cwtl
sahf
addr16
loope
nop
jnp
nop
hlt
lea
lret
jns
pusha
pop
stos
iret
fistl
mov
in
lea
mov
loope
loope
cld
subb
pushl
or
jne
mov
sbb
bound
cmc
push
or
popa
inc
les
xchg
cmp
push
sti
adc
popf
mov
mov
cld
out
int3
or
movsb
xchg
xchg
sbb
lds
rorl
negl
imul
mov
fucomi
or
jmp
sbb
mov
mov
sub
mov
mov
cmp
mov
cmpl
mov
mov
sub
adc
push
cmp
mov
or
divb
dec
shrb
cmp
loop
pop
jno
mov
jmp
leave
lea
jecxz
inc
fs
stos
stc
cmp
divl
dec
psrld
or
sub
cmpb
imul
enter
pop
dec
dec
xor
push
dec
out
imul
mov
and
fsubp
jo
shlb
push
push
test
es
sub
cwtl
fisttpl
jb
mov
ljmp
sub
mov
ret
push
or
xchg
jns
dec
push
pushf
lea
loope
jnp
jbe
pop
inc
jnp
call
lock
pop
int3
adc
sahf
and
inc
dec
pop
xchg
clc
scas
cmpb
mov
pop
das
cld
mov
stos
out
push
cmp
ljmp
dec
daa
aaa
jmp
push
mov
leave
idivb
insl
jle
jmp
mov
mov
inc
sub
cmpsb
bound
cs
xor
pop
in
push
dec
ficompl
mov
aad
leave
mov
inc
xlat
jge
adc
xchg
jae
mov
jp
sub
push
jno
in
pop
cli
iret
test
and
or
pop
xor
pop
cmp
push
rcl
xchg
loop
pop
pushf
cmp
xor
mov
jl
insb
and
sbb
xchg
fisubs
in
loopne
fidivrl
and
adc
insl
push
insb
or
jnp
sub
js
dec
add
outsb
test
xchg
enter
sub
loopne
stos
in
mov
add
mov
dec
orl
pop
mov
add
sbb
mov
gs
pop
sub
mov
pop
decb
push
adc
stos
shll
std
xchg
nop
lea
mov
jmp
pusha
jno
mov
inc
cmc
cmpsl
std
jl
mov
lcall
push
in
out
adc
loope
pop
test
in
nop
out
or
ret
and
and
pop
push
inc
cli
sub
cmc
rcr
mov
in
inc
arpl
sub
cmp
iret
xor
cmpsl
inc
push
pop
imul
jecxz
cmc
aam
pop
and
inc
cmp
rep
inc
mov
jns
push
rcrl
push
jns
mov
and
or
outsb
test
cmp
and
pop
clc
sbb
lahf
test
inc
inc
jle
das
push
insb
and
in
xchg
lock
xor
inc
jnp
mov
mov
sub
in
sbb
mov
rolb
pushf
sbbl
sti
xor
inc
inc
dec
in
add
add
push
mov
sbb
call
mov
shrl
test
sub
cld
and
mov
dec
jle
aam
int3
cmp
imul
lea
aas
fstp
idivl
jb
jne
and
push
or
jno
sarb
lea
int
sbb
push
ljmp
lds
inc
cmp
mov
in
push
aaa
and
xchg
mov
mov
je
xchg
das
dec
jbe
ret
sbb
or
cmp
fucomip
cmp
mov
mov
in
pop
cmp
test
mov
movsl
lahf
in
lcall
test
xlat
adcl
insb
es
enter
xor
jo
mov
shll
adc
cmpsl
out
xchg
jl
dec
in
sbb
push
mov
pushf
jbe
es
mov
test
int
mov
ljmp
push
mov
mov
mov
add
call
fists
int
dec
mov
mov
movsl
popa
icebp
andb
mov
loop
pop
mov
out
cmpsb
out
mov
add
push
psadbw
mov
lds
and
pop
adc
cmp
cmp
cmp
fnstsw
int
outsl
notl
dec
fstps
lret
int3
btrl
hlt
mov
nop
adc
jns
sahf
mov
push
xlat
jne
adc
repnz
push
cld
mov
inc
or
in
sbb
mov
cmp
loope
daa
fwait
rcr
mov
out
mov
mov
jge
sbb
loope
sub
xor
push
cmc
mov
or
test
clc
frstpm(287
lahf
adc
aaa
jo
inc
mov
mov
sub
dec
push
ret
inc
and
aam
sub
jae
ljmp
divb
divl
and
les
hlt
cmc
popf
rorb
jns
imul
cmc
rclb
ss
pop
jbe
flds
cmp
in
aas
ja
pop
pop
mov
push
mov
push
dec
scas
jecxz
jle
lcall
in
into
or
push
fsubr
das
pop
jl
xchg
xchg
mov
mov
pushf
je
in
loopne
insb
fstps
test
adc
call
push
icebp
inc
jns
mov
sbb
jno
out
aaa
mov
insb
mov
mov
lret
and
pop
rorl
cmp
out
ljmp
hlt
inc
jbe
fidivs
or
pop
repnz
lret
and
imul
or
scas
scas
cli
sarl
in
push
les
dec
xchg
dec
pop
fwait
std
sahf
dec
xor
xchg
adc
popa
cmc
add
lock
adc
out
ss
gs
or
and
jb
imulb
pop
pushf
xor
out
insl
ljmp
pop
test
inc
adc
inc
movl
jne
fmulp
cmp
fdivl
fs
adc
jle
cltd
jbe
and
js
fwait
popl
pop
adc
or
xor
aaa
popa
lret
push
xor
popf
mov
insb
fld
jmp
dec
jmp
pushf
aam
pushf
rcrl
addl
sub
stos
mov
cmpsb
mov
jp
xchg
ljmp
or
inc
mov
pop
neg
lahf
lock
scas
ds
rcrb
or
mov
insl
scas
mov
push
xchg
or
stos
sub
push
add
int
js
fwait
fnsave
arpl
sub
and
frstor
mov
lcall
and
imul
mov
inc
mov
sub
mov
cltd
mov
fwait
and
jo
test
loopne
out
adc
inc
fwait
stc
pop
cmp
cmc
dec
push
push
adc
decl
xchg
addr16
cld
pop
sub
pavgb
lock
lcall
mov
jge
je
mov
mov
jbe
mov
push
jle
dec
bound
xor
jg
inc
jl
mov
add
cmc
or
inc
sbb
ja
popf
xchg
cld
clc
xorb
and
mov
es
adc
mov
ret
pop
aas
or
inc
cmp
sbb
incl
fldt
jns
rolb
repz
mov
mov
sbb
xchg
notb
lods
outsl
std
repz
hlt
pop
adc
and
test
out
jl
inc
adc
mov
popf
arpl
jp
dec
add
jb
push
jl
inc
add
out
xchg
lcall
enter
cltd
add
or
ds
fnsave
insb
enter
stos
jle
mov
dec
fyl2xp1
and
mov
outsb
into
js
aaa
xor
arpl
lea
jge
dec
fcoml
lahf
push
addr16
popf
outsl
pop
xchg
xor
mov
lods
sbb
out
jecxz
out
out
inc
movl
push
or
faddl
mov
test
sub
xchg
clc
or
js
out
mulb
pop
jbe
sbb
push
pop
aam
movl
jg,pn
adc
inc
and
rcrb
adc
push
jae
cwtl
inc
inc
frstpm(287
mov
xchg
xchg
add
xchg
movsb
decb
dec
test
stos
call
cmc
mov
sahf
cli
and
scas
lahf
sub
mov
imul
or
jg
outsl
pop
mov
clc
sbb
jno
push
in
insl
xchg
sub
push
xlat
popw
daa
cmpsb
dec
push
and
out
lods
xchg
lret
mov
jno
or
lahf
add
sub
mov
mov
cmpsb
stc
outsl
out
hlt
nop
jecxz
xor
fadds
call
cli
xchg
xchg
fbstp
inc
gs
pop
sub
aam
aas
or
out
sbb
xor
cmpsb
cmp
in
dec
sarb
xor
aam
mov
sarl
test
jle
xchg
adc
cmpsb
das
mov
mov
subb
inc
popf
cmp
mov
aaa
mov
sub
clc
pop
pop
dec
dec
or
sub
insl
sub
xor
mov
pop
jge
sub
jae
test
adcb
repz
mov
hlt
loope
lsl
sub
cmp
jmp
or
popa
fisttpl
cltd
sub
cld
pop
les
push
xor
clc
popa
cltd
push
cwtl
popf
pop
mov
sub
xor
ljmp
sub
cmp
mov
test
mov
mov
outsb
mov
mov
mov
jb
mov
outsb
add
jle
movsb
popa
fdivl
inc
sahf
mov
rcl
hlt
cmp
mov
lahf
and
scas
aam
ss
fldenv
mov
fdivrs
lahf
ja
lret
sub
out
inc
add
ret
and
sbb
adc
leave
or
imul
repnz
or
push
ret
cld
jmp
test
jnp
out
jecxz
cmp
cs
xchg
std
jecxz
or
jp
push
pop
incl
and
dec
mov
fisubl
adc
cltd
inc
jae
jl
push
outsb
pop
sbb
jecxz
mov
loopne
shlb
mov
movsb
mov
mov
mov
inc
mov
in
adc
and
adc
sbb
stos
cmp
jo
in
sub
pop
jmp
mov
out
xchg
leave
sbb
jp
rorb
sub
loope
mov
jp
je
mov
pushf
fidivs
insl
aad
insl
xor
xlat
in
cmp
pushf
or
stos
repz
decb
add
sbb
aaa
cmp
mov
jmp
add
cltd
inc
cmp
movsb
xor
pop
push
xchg
pushf
into
flds
daa
add
test
xlat
arpl
pop
mov
mov
xchg
movsl
adc
loope
mov
pop
mov
sub
aam
data16
and
nop
ljmp
or
xor
xchg
adc
clc
addb
and
push
lods
lcall
jp
lds
mov
pop
daa
das
jne
mov
std
cs
stos
dec
loope
push
sbb
ret
jge
mov
in
dec
mov
mov
outsb
scas
jmp
jmp
inc
fisttps
dec
jl,pn
out
pop
test
mov
dec
pushf
rcl
aam
ljmp
xchg
pop
enter
sbb
stc
xor
in
movsl
cmc
sbb
pop
outsb
in
aas
mov
into
jo
push
xchg
sbb
push
lds
or
jne
lea
pop
cmp
jg
push
and
mov
negl
stos
pop
sub
push
dec
inc
addr16
fidivl
dec
inc
fcmove
add
lahf
jo
insl
outsb
or
jnp
shlb
mov
out
xor
mov
push
pop
les
pusha
mov
hlt
pop
mov
adc
mov
aas
jo
mov
sub
jae
insb
lret
fsubrs
mov
sub
bound
cmp
xchg
push
in
jge
outsb
pop
dec
jmp
rolb
inc
pop
loopne
adc
xor
insb
fcoml
pushf
adc
pop
fistpl
jnp
jle
mov
and
xor
cld
add
adc
std
pushl
inc
sub
cld
mov
cli
out
out
sub
push
test
hlt
jne
mov
insb
sub
inc
jle
push
mov
insl
rorb
adc
mov
sub
xor
xor
sbbl
add
mov
sub
test
add
dec
insl
push
insl
xor
pop
addr16
loope
das
push
aaa
dec
fmuls
mov
pop
mov
mov
add
mov
mov
sub
into
call
int3
xor
cmp
call
jb
inc
shrb
cmp
adc
and
cli
inc
addb
sbb
sub
shl
fdivs
mov
mov
pop
icebp
lods
stos
pop
push
lcall
aas
pushf
stos
add
mov
nop
push
cmp
ret
mov
push
dec
loop
jbe
mov
adc
aad
test
ljmp
add
rolb
pushf
lods
lods
or
pusha
cmp
sbb
cmc
dec
leave
sbb
mov
das
inc
jne
sar
and
mov
stos
aam
or
aas
pmaxub
push
jbe
cmc
stc
test
in
fildll
lds
jp
ja
xchg
jne
inc
xor
dec
iret
jno
cltd
jl
jo
dec
pop
out
sub
push
xchg
and
jp
clc
imul
jp
jle
aad
test
mov
movsb
jp
lahf
jmp
inc
mov
dec
adc
or
mov
movsb
mov
sub
fidivrs
push
mov
ds
add
fdivrl
mov
aam
mov
sbbl
outsb
test
or
outsl
jecxz
scas
std
popa
int
out
sbb
sti
jo
aad
dec
push
pop
or
mov
loopne
add
das
push
movsl
imul
xor
push
push
adc
data16
outsl
jae
mov
jne
lods
std
loope
inc
xchg
imul
pop
movsl
mov
jne
jge
add
add
leave
cwtl
mov
repz
imul
test
aas
inc
clc
xchg
cmp
imul
jno
js
push
cmp
mov
and
fsub
test
dec
cmc
lods
push
popf
mov
mov
test
lcall
sbb
rcll
ja
into
jl
lods
xchg
test
outsb
negl
mov
adc
ds
jbe
dec
dec
pushf
scas
mov
mov
movsb
jmp
outsl
dec
mov
scas
sub
or
push
pop
inc
and
mov
lahf
test
xor
roll
inc
xchg
and
aam
pop
mov
mov
push
in
mov
push
arpl
sub
dec
data16
hlt
sub
dec
stos
out
lcall
and
jo
jb
and
mov
mov
rolb
mov
push
jl
outsb
mov
cld
pop
dec
cwtl
adc
call
clc
insl
or
les
clc
sahf
sub
pop
lods
lods
pop
hlt
out
sub
stos
lods
in
cmp
scas
mov
out
loope
cwtl
ret
jbe
mov
add
lock
mov
mov
daa
xchg
push
adc
cltd
dec
cmpsl
sarl
push
adc
outsb
int
bswap
cmpsl
sub
mov
lcall
int3
cld
mov
pop
ds
cltd
imul
cmpsb
sbb
das
and
stos
leave
xor
mov
push
add
xor
mov
rcrl
add
sub
jmp
push
pop
enter
aas
popf
xor
addr16
jecxz
jae
cmp
mov
sub
outsb
loope
pop
pop
iret
mov
negb
shlb
mov
pop
sub
outsl
and
cwtl
push
into
inc
rorl
fimuls
aad
ret
dec
bound
jg
lret
repz
rclb
stos
or
sbb
sub
addl
lods
icebp
sbb
bound
adc
sarl
dec
mov
loop
add
out
sub
xor
xchg
mov
or
mov
div
imul
inc
mov
dec
xor
mov
mov
enter
cmp
and
cltd
push
scas
cmp
sti
test
sub
cli
outsl
pop
mov
mov
pop
fst
push
fsub
fldenv
pushf
test
sbb
jb
inc
stos
xchg
call
xlat
xlat
int3
adc
leave
in
cwtl
fs
xchg
subb
pop
scas
cmpsb
xchg
fnsave
sbb
das
mov
pop
daa
mov
adc
cmp
jno
xchg
pushf
ds
push
mov
jecxz
stos
dec
xchg
mov
mov
arpl
subb
xchg
xchg
dec
or
jno
bound
push
js
fcmovu
in
jno
and
ljmp
testl
sbb
in
cltd
add
data16
xchg
add
dec
lds
outsl
test
cltd
out
scas
push
jg
fs
outsb
cmp
jmp
repz
fnstenv
adcl
fnstcw
mov
test
in
mov
jg
dec
addb
lock
push
and
mov
xorl
lock
clc
cmp
jp
bound
mov
das
mov
insb
imulb
sub
das
pop
sbb
lods
je
aad
es
adc
pusha
scas
jmp
jg
cmp
addr16
mov
scas
xor
imul
xor
mov
lahf
push
or
or
jno
add
and
dec
add
xchg
and
xchg
push
hlt
xor
int
adc
daa
jb
adc
mov
hlt
mov
mov
adc
push
rcll
push
pop
cmpsb
adc
scas
ret
xchg
cs
scas
aam
pop
bound
pop
inc
ljmp
xchg
jl
cmpsb
stos
loop
or
movb
and
mov
dec
fidivs
or
xchg
popa
bound
ds
test
andl
pushf
inc
fucomi
pxor
cmp
ja
ja
xor
push
sub
js
sub
test
or
insl
stos
cmp
xor
mov
mov
das
sub
add
jmp
inc
push
pusha
dec
out
clc
mov
xchg
mov
adc
sbb
es
clc
sub
fiadds
adc
cmp
xchg
sti
inc
scas
dec
mov
addr16
das
test
xchg
in
push
pop
add
and
sub
cpuid
shl
pusha
mov
mov
int3
pop
mov
nop
pop
xor
push
mov
fsub
ljmp
cmp
inc
and
push
insl
clc
popa
shlb
dec
stos
lods
rcrb
ret
jae
hlt
sbb
inc
fimuls
pop
pop
andl
mov
mov
outsl
stos
les
jp
mov
ret
mov
cli
jno
push
lret
test
cs
aad
in
sub
adc
stos
jnp
addl
insb
flds
fidivs
fcoml
dec
sbb
inc
adc
and
movsb
bound
jbe
mov
add
pop
mov
ja
ficoms
or
push
hlt
xchg
push
ss
xchg
roll
popa
xor
rclb
mov
jae
in
push
nop
cli
sarb
lea
pushf
ds
loope
stc
fldl
stos
scas
or
jmp
cmpsb
call
cmp
sub
mov
push
fcmovnu
xchg
sbbl
idivl
sub
inc
out
and
cmp
mov
and
mov
xchg
jge
mov
xor
push
push
adc
lds
insb
xor
movsb
lcallw
mov
loopne
test
popa
aam
cmp
sbb
cs
cmp
adc
in
fisubrl
mov
sarb
sbb
push
push
add
sub
xchg
int3
out
ret
aam
xchg
imul
xor
pop
cs
test
jbe
cmp
movsb
leave
std
add
jbe
mov
mov
mov
sub
cmpsb
mov
cmp
xchg
cld
inc
dec
push
push
fstps
sub
push
jmp
mov
das
enter
push
stc
leave
sub
dec
push
push
fwait
or
mov
int3
mov
cmc
test
and
sub
jge
jnp
aas
andl
inc
mov
lcall
bound
subb
cld
aam
dec
push
fistps
push
iret
add
push
add
push
cli
sub
faddl
pop
leave
mov
cmp
loop
fldcw
repz
dec
adc
adcl
dec
lret
in
mov
xchg
xor
pop
pushf
lahf
mov
sbb
and
rcl
fisubrl
lods
fists
int
scas
xchg
add
and
stos
imul
in
xchg
pop
jg
mov
lds
and
js
clc
scas
sbb
xchg
adc
rep
lcall
adc
sahf
and
adc
std
shrb
xchg
lcall
enter
out
mov
int
adcb
movsb
aaa
sub
add
inc
cli
adc
sub
pushf
mov
icebp
push
out
dec
mov
movl
push
into
dec
jns
jmp
stos
jno
xor
add
sub
mov
pusha
sbb
dec
jno
rcl
push
popl
repz
xchg
push
sbbl
cmp
stos
sti
mov
cmp
nop
and
cli
dec
mov
or
test
popf
push
test
xchg
or
mov
and
leave
pop
mov
fadds
mov
out
jmp
cld
xor
mov
pop
add
xor
push
or
movzbl
lods
insb
xorl
das
mov
jl
inc
mov
rolb
jb
mov
outsb
pop
movsb
add
or
rolb
jmp
inc
mov
test
xor
xor
adc
pop
fsubl
mov
dec
cli
push
adc
loop
outsb
cmpsl
lds
adc
add
insl
jbe
mov
flds
adc
aas
dec
jnp
neg
jno
std
sub
and
mov
repnz
jae
dec
sbb
xchg
mov
imul
outsb
push
push
test
fcoms
pop
dec
jbe
cwtl
and
inc
arpl
sub
jecxz
scas
mov
fstps
repz
pop
mov
sub
je
adc
stos
shlb
add
mov
adc
mov
cmp
push
push
clc
divl
cmpl
inc
xchg
cmp
or
push
inc
std
push
dec
xor
dec
mov
pop
or
fsubs
call
push
inc
or
adc
fcoms
sbb
fistpl
test
movsb
icebp
mov
adc
sub
es
adc
mov
outsl
inc
insl
dec
inc
inc
out
xchg
add
repnz
cmpsb
clc
mov
in
pushf
xchg
lods
leave
sbb
pop
test
mov
popf
pusha
and
dec
lret
inc
xchg
adc
push
mov
mov
dec
mov
jmp
mov
sbb
es
neg
addr16
push
out
sbb
push
sub
sarb
orl
fsubrl
test
loopne
out
js
test
xchg
cmpsl
pop
stos
enter
adc
arpl
in
cmp
fsubrp
jmp
stos
mov
inc
mov
mov
mov
push
cmp
mov
dec
xor
sbb
sbb
cmp
jg
add
xorb
dec
mov
sub
pop
pop
in
pop
and
in
loopne
mov
ret
leave
inc
lds
xchg
sarl
cmc
push
mov
mov
xlat
sbb
and
mov
lahf
int
inc
jecxz
jne
gs
scas
into
mov
cmpsl
add
ss
shlb
loop
mov
mov
xbegin
leave
repnz
scas
adc
icebp
loopne
rcl
fmuls
fsubrs
sahf
lods
scas
cltd
into
outsb
dec
stos
insl
push
xchg
ret
cmpsl
pop
dec
repnz
sbb
js
jge
pop
adc
jne
mov
mov
iret
movsl
cmp
xor
stos
jl
sbb
ret
addb
mov
fdivrs
or
xor
mov
jo
call
push
mov
mov
call
in
inc
lahf
cmp
or
xor
add
inc
ret
inc
in
xchg
in
stc
or
inc
popf
rol
push
fimull
pusha
int3
mov
xchg
cmp
mov
adc
lret
jmp
cmp
dec
ret
mov
adc
mov
js
out
int
loopne
mov
ret
and
cmc
les
cli
fstps
movsb
cld
sbb
push
fmuls
pop
dec
jae
jb
pop
push
in
mov
sbb
sub
jno
je
sbb
mull
push
cmp
xchg
test
mov
sbb
xchg
pop
jp
scas
add
mov
push
mov
ret
adc
jecxz
mov
ljmp
in
stos
outsl
or
push
xor
push
and
hlt
lret
mov
jle
sti
jge
mov
aaa
movsb
fsubrs
sub
into
adcl
decb
lret
repnz
mov
repz
in
mov
mov
push
cmp
outsl
and
cmpsb
lods
icebp
xor
leave
std
xchg
bt
push
imul
int
push
pusha
mov
out
jmp
xor
lea
or
mov
ds
jne
shll
pop
stos
pop
shlb
movsb
push
inc
in
popf
insl
xor
sti
aaa
push
push
loop
push
mov
sub
inc
or
push
sbb
loopne
xchg
mov
pop
cmpsl
and
inc
ret
mov
dec
pusha
leave
mov
push
mov
loopne
fstpl
pop
jbe
add
test
cmp
icebp
cmpl
imul
mov
push
push
shll
push
cmp
sub
push
and
dec
mov
outsb
in
pop
test
filds
loopne
sbb
js
seto
push
and
adc
fcmovb
adc
in
cwtl
addr16
and
mov
pop
hlt
cmp
dec
cmp
and
jl
cmpsb
dec
mov
jge
mov
fists
dec
fsts
scas
ret
test
insb
jge
mov
insl
xchg
js
jecxz
xchg
adc
in
out
repnz
sbb
shlb
jno
es
xchg
out
fs
push
test
inc
addr16
adc
xchg
outsl
fsub
lea
movsl
add
dec
fs
jp
push
aas
inc
lret
gs
int3
je
jno
les
popa
outsl
sub
in
xchg
out
enter
std
xchg
int
adcl
or
jnp
aas
lods
test
push
and
sbb
and
inc
scas
push
sub
sub
je
leave
call
cmpl
int3
pop
xchg
add
inc
cwtl
pop
aaa
scas
add
je
int
cltd
or
jb
mov
sbb
and
jl
mov
rcrb
push
adc
rorb
rcrb
push
rolb
clc
pop
jp
repnz
sbb
xchg
pusha
dec
in
nop
roll
xchg
and
idivb
or
scas
sub
test
mov
push
sub
xchg
push
testb
inc
mov
and
pusha
aas
insl
sbb
pop
mov
sub
in
repnz
adc
xor
xchg
fdivrp
test
jmp
lds
ret
push
es
push
pusha
cmpsb
icebp
in
add
push
aad
xchg
mov
mov
fiadds
fimuls
add
adc
jl
test
std
outsl
push
dec
xor
jg
xor
popf
dec
adc
out
xor
or
test
mov
fcoms
pop
cmp
dec
jle
xchg
push
incb
xchg
lods
and
add
pop
xor
aas
xor
cmp
aad
adc
in
sahf
or
adc
mov
aaa
jbe
scas
into
test
add
xorb
xchg
nop
mov
std
adc
xchg
mov
mov
dec
in
and
adc
xchg
jno
push
lret
mov
negl
pop
pop
xchg
add
les
clc
mov
fstl
das
mov
and
dec
mov
std
or
adc
jl
call
sub
sbb
das
xchg
out
sbb
lds
adc
mov
loop
shr
js
pop
pop
test
jg
loopne
cs
xchg
xor
mov
je
pop
aas
loop
lds
inc
jp
lods
arpl
out
inc
fmul
mov
push
mov
addr16
test
repnz
js
pop
int
sub
mov
jbe
ds
cmp
lods
pop
in
push
cwtl
roll
rcl
fidivl
pusha
mov
cmp
pop
xor
mov
mov
push
enter
mov
mov
jecxz
jns
lret
xchg
testb
dec
mov
cs
shll
idivb
cli
movl
incb
adc
mov
bound
inc
adc
mov
repz
dec
cmp
nop
jg
outsb
insl
fld
push
dec
inc
mov
jp
adc
jo
inc
dec
pop
repnz
push
lret
jecxz
mov
fstpt
push
not
xchg
insl
mov
shlb
int
pusha
es
inc
dec
pop
std
xor
xor
ds
inc
arpl
jmp
push
lock
test
xchg
mov
cmp
repz
push
pop
push
hlt
mov
lds
out
jne
cltd
aaa
sti
push
add
ljmp
rol
test
into
pop
mov
cld
sub
mov
cmp
pop
xor
out
push
dec
push
outsb
popf
divb
sbbb
pop
cmpsb
pop
dec
hlt
jg
pop
pop
add
stc
sbb
or
lods
in
scas
movsl
jnp
stc
xor
xor
pop
stos
add
mov
jns
adcb
xchg
int3
inc
stos
xor
sub
icebp
push
shll
cmp
cs
rcrl
popa
fisttps
add
pushf
jg
inc
jno
call
cmp
jo
add
pop
test
sarb
js
aad
cmp
jne
call
inc
in
add
cltd
mov
mov
adc
cmpsb
push
sbb
fwait
imul
out
push
pop
jb
fsubrl
arpl
sub
jae
lret
pop
sahf
repnz
mov
jmp
push
cmp
mov
push
movsl
test
iret
or
mov
add
es
in
arpl
xor
andb
and
or
jge
sub
xor
ss
adc
ss
xchg
sti
fdivrs
push
popf
ja
loopne
fs
push
mov
dec
and
ret
add
lds
fdivl
icebp
fnstcw
rorl
mov
push
lock
and
jmp
ret
xchg
mov
addr16
cmc
cmp
mov
insl
clc
push
mov
push
xchg
inc
and
imul
inc
jb
sub
scas
mov
pop
adc
inc
arpl
inc
inc
or
ja
push
icebp
push
adc
mov
push
pop
movsb
shr
mov
push
push
mov
pushf
mov
loopne
call
mov
pop
dec
int
aas
bnd
xchg
cli
pop
jecxz
sarl
or
lret
xchg
dec
data16
inc
push
or
inc
imul
jno
add
and
cmp
adc
mov
dec
jae
sub
sbb
pop
jo
cmpsb
lahf
push
mov
loopne
ret
push
adc
rcr
inc
hlt
popa
das
aam
add
or
lcall
push
pop
andb
mov
jmp
scas
pop
dec
es
mov
cltd
scas
inc
dec
icebp
add
jg
mov
adc
or
idivb
and
cwtl
shll
lcall
inc
std
and
sub
jmp
sbb
dec
sbb
jno
mov
aam
nop
into
mov
lahf
adcl
or
out
fisubrs
and
push
inc
leave
dec
jmp
sbb
sbbl
popf
inc
cmp
mov
sub
or
addl
movsl
les
ret
mov
jmp
mov
out
push
lcall
scas
iret
xor
leave
imull
cmc
xor
cltd
aam
push
xorl
into
addr16
jns
pop
push
inc
mov
mull
cmpsl
clc
jb
loopne
inc
xor
lret
daa
xchg
push
mov
mov
mov
rcl
mov
pusha
jge
cmpsl
movnti
push
jae
ds
inc
add
mov
repz
cmp
dec
cltd
push
adc
sub
sub
adc
sub
frstor
and
push
outsb
dec
rolb
inc
or
ret
mov
mov
or
lcall
push
pop
es
sub
mov
xchg
or
cmpsb
les
adc
in
outsb
or
sub
aaa
push
lods
pop
std
push
call
add
rcrl
imul
mov
jecxz
imul
stos
mov
ficomps
subl
push
lods
inc
sbb
jle
mov
cmp
sar
in
cmp
pushf
mov
jnp
push
cmp
sbb
xorl
xchg
insl
sub
ret
xchg
jbe
xlat
adcb
adc
clc
adc
push
xchg
jl
cmp
pop
dec
mov
in
int3
cmpsl
aaa
stc
pushf
call
aam
inc
push
popa
and
cmpsb
clc
xor
jle
jno
addr16
cmp
push
mov
je
rcrb
dec
bnd
rcr
loope
and
cmp
loope
jmp
and
sbb
and
insl
push
inc
fadds
daa
add
mov
shl
mov
js,pt
lea
mov
popf
sbb
aad
out
and
push
mov
mov
es
loop
mov
outsb
xchg
lods
jbe
inc
call
dec
jbe
inc
fsts
jp
adc
hlt
fstpl
xchg
mov
adc
adc
cmp
sbb
and
dec
lret
jnp
cmp
or
ljmp
bound
repnz
leave
orb
lret
pop
out
cmc
pop
push
xor
sbb
fimuls
ds
and
cmp
sub
pop
pop
mov
sub
iret
rolb
cwtl
pop
mov
pop
sub
shl
lock
and
lahf
cmp
xor
stos
inc
sahf
mov
jmp
stc
cmp
popa
add
shrb
jge
test
jge
hlt
in
inc
shlb
inc
pop
mov
push
dec
or
push
mov
push
notl
xor
cwtl
ja
in
sub
jae
andb
mov
popa
enter
mov
mov
xorb
lds
jno
das
mov
push
jecxz
lcall
sbb
insl
cs
xchg
out
sbb
js
jno
clc
lods
inc
sub
out
mov
sub
fiaddl
lret
add
jp
fbld
int3
push
mov
lock
xchg
fimuls
movl
inc
xorb
xlat
clc
repz
lods
jge
fsubl
fs
adc
scas
aas
push
daa
iret
roll
std
jmp
idivb
lret
adc
xor
cld
add
jp
push
cmp
ds
mov
sub
iret
aaa
sub
pop
adc
insl
out
loopne
es
shll
xor
loopne
cmpsl
stc
xchg
scas
dec
mov
pop
fwait
push
pushf
movsb
and
jl
es
or
out
mov
inc
mov
jns
dec
jg
adc
inc
xor
mov
pop
mov
bswap
loop
xchg
ljmp
or
lret
xor
xchg
jecxz
jns
cmp
jl
enter
and
lock
cwtl
mov
in
inc
mov
outsl
inc
andb
stos
jbe
sbb
cmp
test
lahf
dec
mov
add
xchg
sbb
lock
xchg
push
inc
inc
xor
imul
repz
add
arpl
xor
ljmp
in
addl
fsubs
imul
test
mov
mov
xchg
add
ss
outsb
and
jmp
std
pushw
or
addr16
inc
sbb
mov
push
pop
adc
mov
stos
sti
dec
mov
pop
lret
add
mov
mov
jne
push
dec
add
cmp
inc
into
out
mov
cmp
lea
out
add
fisttpll
jmp
sbb
xor
flds
in
lods
inc
repnz
pop
adcb
les
pop
orl
adc
imul
mov
mov
inc
mov
adc
cmp
rcl
cld
push
mov
push
pop
mov
negb
negb
adc
fcomp
je
sbb
sub
jmp
cmp
mov
fisubl
inc
xor
test
pop
shrb
cltd
sbb
inc
sbb
ret
negb
sbb
mov
and
loop
and
paddw
xchg
movsl
xor
pop
jbe
sub
loop
mov
sub
mov
xor
add
pusha
or
lds
or
xor
inc
xor
pop
cs
out
jne
pop
lret
lret
inc
pop
push
ljmp
mov
mov
mov
jecxz
stos
dec
push
fsubl
xor
insb
xchg
std
test
sub
push
jne
fdiv
mov
dec
push
sub
leave
inc
int
xlat
pusha
mov
sbb
or
sbb
dec
push
jle
out
outsl
scas
sar
insb
inc
xchg
dec
cmpb
mov
popf
adc
pusha
cmp
jge
ficomps
mov
jp
dec
test
mov
lods
fwait
mov
pushf
fidivs
cmp
ss
mov
xchg
into
mov
mov
jns
lret
cmp
fldt
or
insb
mov
cmpsl
lods
fwait
sub
scas
aas
jo
stos
js
cmp
int3
fsubrs
pop
clc
jnp
add
scas
xchg
icebp
or
in
push
pop
stc
cmpl
push
cmc
lret
sbb
out
push
loopne
cmp
inc
shrl
xor
adc
sub
cmp
outsl
inc
idivl
sarl
insb
insl
mov
mov
mov
xchg
and
mov
movsb
jae
sti
push
js
pop
iret
mov
pop
or
cwtl
imulb
jmp
or
pop
dec
hlt
ss
fwait
int3
push
lods
fadds
aas
mov
in
sub
cwtl
test
xor
in
dec
shll
enter
xor
test
mov
cmpsb
ret
cld
testb
mov
add
in
lods
inc
sub
outsb
mov
mov
inc
xorl
jge
push
rolb
xchg
popl
fcoml
push
hlt
push
and
jno
in
out
fcomps
mov
ss
jmp
scas
rorl
in
xchg
movsl
into
cmpsl
mov
jmp
outsb
out
fdivl
leave
imul
sbb
adc
mov
lcall
jmp
and
in
inc
je
mov
dec
jmp
shr
sbbl
cmp
int
gs
ljmp
mov
sarb
mov
cmp
jns
dec
and
inc
out
iret
popf
lret
jmp
insl
push
sbb
push
ret
add
jbe
lods
sbb
and
cli
mov
stos
sti
push
or
jmp
stos
adc
ret
push
push
adc
mov
fs
pop
sub
les
cmp
icebp
movb
aas
std
sub
lods
movsl
in
aas
rcl
je
pop
and
sub
fidivs
xchg
xor
and
mov
lds
inc
mov
mov
push
loope
mov
adc
fildl
adc
dec
mov
cmp
cmc
addb
ss
push
push
out
aad
dec
cmpsb
adc
jb
adc
cs
test
shll
push
daa
enter
les
incb
andl
push
popf
push
lods
shr
or
xor
outsl
ljmp
lea
arpl
cmp
loope
into
lret
test
arpl
mov
mov
call
cld
int
das
sbb
inc
jecxz
or
into
iret
add
mov
fcoml
lahf
push
xchg
adc
insl
fimull
dec
xchg
int3
and
sub
negl
jns
popf
xorl
mov
outsb
mov
nop
xchg
popf
dec
and
push
out
push
or
jnp
dec
and
imulb
popa
adc
jnp
xchg
dec
loop
inc
jp
iret
mov
or
out
xor
xor
test
std
imul
cmc
sbb
negb
addr16
test
outsb
je
scas
xchg
push
inc
xchg
in
cltd
sub
shl
push
ret
jle
sub
mov
xor
add
xchg
nop
fisubrl
loopne
jnp
dec
test
lods
add
out
ja
mov
mov
iret
ja
sub
cmp
jnp
fildl
bound
adc
dec
sub
mov
or
xor
and
mov
shl
js
and
pusha
and
xorb
lock
jecxz
cli
addr16
sbb
or
push
add
ret
sbb
pop
push
inc
pushf
pushf
mov
inc
push
add
stos
lods
clc
sbb
mov
xchg
ljmp
push
std
add
sbb
push
jl
and
push
out
out
mov
adc
adc
xlat
loopnew
inc
mov
scas
or
int3
sti
fsubrl
mov
inc
aas
xor
loop
inc
jg
add
sti
xchg
inc
xor
pop
jg
mov
vmovmskps
mov
or
jle
adcb
test
push
push
push
push
das
inc
cmp
in
mov
lods
call
sbb
dec
imul
pop
or
mov
addl
jns
or
scas
jae
cmc
test
std
aad
mov
dec
adc
into
mov
xlat
jge
inc
xchg
lcall
add
dec
mov
mov
dec
or
sub
mov
or
fldln2
mov
xor
imul
scas
lods
xchg
fdivrs
mov
sub
shll
jns
or
add
std
jl
xchg
inc
nop
xchg
cli
mov
mov
jnp
in
and
ja
je
push
mov
cmpsb
in
adc
into
sar
xrelease
add
pop
adc
pushf
lock
arpl
outsb
sbb
aaa
imul
xlat
cltd
shl
xorb
emms
mov
fldenv
sbb
push
insl
sub
push
push
mov
mov
pop
and
mov
xor
dec
dec
mov
xchg
adc
lret
cmp
mov
shrl
into
insl
mov
push
cs
mov
sub
inc
sbb
sbbb
add
dec
loope
sub
dec
test
adc
loope
bnd
and
in
mov
shlb
imul
ret
stos
nop
mov
push
sub
insl
cmp
fisubs
and
pop
cmp
sbb
sbb
cmpsb
icebp
movsl
imul
jne
enter
add
push
dec
sbb
lea
pop
or
push
adc
push
adc
lret
out
cmp
mov
movsb
mov
sti
add
fbstp
push
mov
inc
stos
xchg
add
bound
fs
cmp
repz
add
pop
jne
inc
cltd
add
xor
shlb
xorb
out
loopne
cmp
sarb
dec
in
rcr
push
xor
fstpl
scas
icebp
mov
sbb
lds
push
in
fucomip
adc
mov
pop
pop
loopne
sbb
aaa
push
fstpl
push
inc
xchg
jne
out
je
xchg
or
scas
mov
roll
push
sbb
dec
testb
mov
sbb
adc
inc
inc
push
adc
sub
mov
mov
xchg
and
or
mov
das
and
or
xchg
lret
sbbb
cmp
aam
dec
lods
or
sbb
jae
in
push
shll
in
xor
add
fisttpl
stos
and
xchg
jle
xlat
push
sub
xorl
jp
cmp
movsl
jmp
aaa
pusha
xor
aas
adc
hlt
stos
shlb
movsb
or
xor
cmpl
cmp
lods
rcll
scas
adc
sahf
cs
or
xor
cs
cs
sbb
jl
inc
inc
add
push
jp
dec
xor
xchg
dec
xchg
mov
and
pop
repz
push
test
rorl
adc
inc
and
jmp
dec
cmp
cmp
push
leave
outsl
jp
mov
inc
and
add
outsl
movsl
push
add
fisubl
sub
inc
xchg
jmp
xor
inc
fs
jo
mov
sarl
lds
arpl
and
jae
dec
jne
mov
or
push
sti
outsb
popf
lret
dec
pusha
jbe
loop
nop
pop
outsl
in
stos
jecxz
xchg
out
mov
jp
out
je
xchg
adc
lea
pusha
popa
inc
js
mov
cmp
gs
out
bound
icebp
xor
adc
cmp
xchg
loopne
and
mov
call
inc
rcrl
sbb
fsub
mov
fsubs
dec
jno
in
call
jg
ret
aaa
cmp
dec
rclb
adc
jp
hlt
mov
leave
dec
gs
test
push
cmp
aaa
dec
xchg
jo
ljmp
fisubrl
inc
cmp
mov
shlb
std
maskmovq
mull
scas
and
mov
inc
xchg
jecxz
inc
sub
mov
mov
ret
pushf
lods
adc
mov
sub
mov
cmpsb
cmp
jge
xchg
leave
mov
or
and
sub
fwait
popf
ret
xlat
inc
mov
push
add
add
push
mov
push
jecxz
inc
or
xchg
dec
rorl
push
dec
stos
pop
iret
inc
and
mov
sbb
std
push
loope
cmc
mov
mov
pop
pop
int3
lock
inc
cmp
pop
or
mov
xchg
pop
rclb
mov
mov
mov
rcrb
and
mov
or
lds
pop
sub
push
je
pop
pop
jl
int3
fwait
and
leave
das
lahf
jns
pop
sti
js
jnp
sbb
add
pop
icebp
jge
mov
and
mov
lcall
andb
or
dec
cs
andb
int
mov
or
cmc
flds
int3
xor
pusha
aad
sbb
jns
sbb
movsb
and
aad
xchg
pop
or
out
gs
or
fiaddl
or
pop
push
pop
scas
out
stos
lahf
adc
ds
jl
adc
dec
shll
or
mov
imul
push
sub
sub
inc
push
cmp
shlb
mov
test
out
jnp
xor
adcb
repz
jge
test
lret
sbb
jmp
fstl
adc
mov
mov
imul
loop
mov
and
outsl
sbb
mov
into
add
fsubl
imul
fwait
std
mov
pop
cvtdq2ps
xchg
push
pop
cmp
gs
pop
loopne
inc
push
cmp
mov
dec
push
cltd
mov
or
mov
mov
hlt
sar
stos
fbstp
ljmp
iret
dec
jg
push
fcmovu
popa
mov
mov
repz
out
mov
cmc
mov
mov
sub
into
mov
pusha
sub
idivb
adc
test
mov
and
rcrl
mov
cmp
add
mov
cmp
add
int
inc
repnz
cs
xchg
lods
loop
dec
cmp
shrl
xchg
fdivrl
fadds
lods
or
inc
clc
mov
jnp
sub
and
lods
add
pusha
enter
sub
les
cmp
ret
aam
sbb
js
dec
hlt
or
jbe
lcall
negl
dec
into
and
lret
movsl
push
mov
dec
dec
jno
or
dec
add
pop
mov
push
fbstp
ljmp
aam
xchg
leave
push
divb
js
mov
xchg
jp
xchg
cmp
xlat
pop
mov
xor
inc
cmp
inc
stc
cmpsb
xlat
iret
insb
mov
scas
jl
stos
imul
jle
and
push
out
sub
sub
jg
dec
aad
inc
sub
in
aad
push
push
subb
rcl
or
dec
mov
mov
sub
cmpsb
and
mov
dec
stos
sahf
inc
sub
inc
mov
stos
mov
scas
xor
jge
outsl
adc
dec
xor
pop
xor
test
popf
mov
mov
in
mov
scas
out
les
rolb
rol
and
add
sub
adc
pop
mov
xchg
xor
mov
neg
cltd
adc
adc
sahf
pop
repz
push
enter
aas
sub
ret
inc
pushf
push
sti
dec
xchg
jb
xchg
xor
es
lds
in
sub
mov
jg
mov
push
jge
push
xor
fimuls
outsb
dec
outsb
pop
inc
push
xor
sarl
fnsave
pop
dec
jg
lret
mov
mov
mov
and
mov
jns
dec
adc
and
xor
ja
adc
cmp
cmpb
push
mov
add
lret
ds
push
sbb
xor
pop
mov
pop
sbb
cwtl
cmpsl
cmp
aam
imul
das
jno
pop
out
insl
mov
sub
mov
repnz
int
sarb
loopne
jae
jnp
mov
sub
mov
gs
test
pop
pushf
loop
roll
push
push
adc
out
mov
mov
and
sbb
shlb
and
les
les
outsl
pop
sahf
sbb
cmp
cmpsb
loopne
nop
cld
das
inc
cmp
and
mov
or
jne
sti
sub
jmp
pop
add
cmp
xlat
ja
aas
jae
push
bound
hlt
add
aaa
aas
xchg
push
enter
imul
fucomi
jmp
outsl
stc
lret
fistpll
es
cmp
mov
pop
stos
std
js
adc
add
movsl
and
dec
xor
mov
jmp
ss
xlat
sbb
std
sub
jecxz
lea
fidivs
sub
cwtl
insb
push
sbb
sbb
or
lods
mov
adc
inc
out
inc
lock
rcr
ret
outsl
ret
xor
mov
cmc
sbb
xchg
add
lret
dec
mov
push
cmp
mov
call
insl
les
fwait
cmp
subb
pop
pop
cmp
pop
fdivr
and
insl
sbb
mov
in
daa
jne
out
mov
mov
xlat
or
xor
inc
xor
jns
and
jnp
cld
fistl
pop
adc
lock
or
int
cld
addr16
je
and
sahf
std
add
dec
jg
nop
gs
iret
aam
push
clc
pushf
dec
std
dec
sub
ds
lds
mov
test
jl
sbb
cmc
xor
mov
push
push
mov
jecxz
dec
fisttps
fwait
sbb
dec
adc
scas
cltd
jge
fists
pop
out
clc
enter
sahf
inc
in
add
es
subb
std
inc
jg
xchg
or
stc
xchg
mov
xchg
push
addr16
mov
pop
dec
aas
loop
pop
cmpsl
add
pop
mov
inc
add
setge
xchg
incb
adc
addr16
shrl
fadds
or
scas
das
inc
stos
incl
sbb
or
push
xchg
out
dec
pop
jbe
and
mov
in
mov
dec
in
loope
mov
orl
imul
movsb
xlat
ret
fld
sarb
lods
push
outsl
pop
jmp
pop
add
dec
sub
pushf
fisttps
loope
scas
loopnew
fstpl
push
test
push
aas
ficoml
and
in
adc
out
push
mov
xchg
pop
repnz
xchg
les
or
mov
mov
in
stc
daa
sub
push
inc
inc
test
sbb
pop
xchg
je
mov
int
push
jns
push
mov
sbb
jae
mov
xchg
add
xchg
fiadds
push
fstpl
push
movsb
inc
out
das
and
mov
cltd
or
fwait
int3
into
mov
notl
arpl
add
push
lret
push
mov
test
mov
into
dec
mov
clc
mov
das
stc
cli
outsb
js
or
inc
xchg
ja
and
xchg
sti
fiaddl
outsb
cli
inc
sahf
cmpsl
aas
push
jnp
daa
mov
aam
pop
je
mov
cmp
xchg
mov
movl
dec
inc
push
dec
ficoml
test
xor
pop
and
inc
sub
bound
jle
mov
rcl
mov
aas
xor
and
aam
dec
scas
adc
jg
pop
add
and
es
mov
jo
xchg
sub
stc
jb
icebp
sbb
pop
cmp
cmc
ds
cmp
pushf
sbb
inc
or
imul
iret
aas
cmp
jb
xchg
test
pop
push
sub
sar
inc
bound
mov
aaa
pusha
push
dec
sub
sahf
pop
cmpsb
jmp
inc
ffree
push
xor
je
pop
xchg
or
fists
icebp
dec
and
inc
mov
mov
in
insl
sub
ljmp
dec
jg
push
pop
sub
jno
xchg
sbb
jecxz
cmp
bnd
and
sti
hlt
repz
pop
jl
fnstenv
mov
push
and
push
pop
dec
cmp
and
insl
or
or
add
fisubrs
push
test
loop
test
mov
push
push
rolb
rcrb
int
sbb
jnp,pn
push
jnp
xchg
cmp
sub
in
in
arpl
idivl
lea
scas
outsl
cld
jno
push
stos
or
and
push
mov
pop
mov
sub
mov
dec
and
stos
call
lods
arpl
inc
mov
in
jns
ss
clc
cmp
icebp
push
dec
inc
test
popa
inc
arpl
cwtl
insb
push
cwtl
lret
jnp
add
mov
les
sub
jne
das
ret
and
ficomps
leave
shr
sahf
pop
or
xor
out
addr16
dec
stos
mov
jo
mov
hlt
inc
push
stos
cmp
cwtl
push
add
dec
pop
je
mov
fucom
loope
insb
xor
insl
add
inc
outsb
js
jae
adc
push
fimull
xor
inc
test
xor
jae
mov
ret
xchg
push
in
xor
xor
sbb
mov
push
jmp
xor
sub
pop
inc
push
xor
outsl
lret
mov
add
outsl
xor
aas
adc
subl
xlat
ret
xchg
push
ret
popf
inc
mov
pop
push
bound
mov
jne
pop
push
jb
cmp
gs
add
push
faddl
outsb
lods
xlat
xchg
push
iret
nop
fstp
xchg
cmp
lahf
cli
in
cli
xchg
pop
dec
sub
loopne
xchg
lcall
sahf
jecxz
xchg
ror
pop
xor
int3
add
fsubrs
insl
jl
xor
push
fwait
mov
loope
and
jg
sbb
jne
add
nop
push
dec
cld
cmp
push
push
pop
loope
xor
xor
or
ret
or
adc
fisubs
insl
fcoml
push
or
mov
adc
scas
cmpsl
xchg
daa
test
jmp
imul
mov
imul
sti
xchg
test
push
jae
dec
mov
setle
push
pop
or
stos
imul
insl
xchg
outsl
fcomps
ret
notl
rorl
push
add
jmp
ret
add
stos
mov
orl
push
sbb
mov
das
dec
out
lods
enter
movsl
push
jge
scas
fisttpll
inc
push
xchg
pop
push
lret
lcall
xor
faddl
test
in
rolb
mov
mov
mov
xor
cmp
stc
shll
fsubs
repz
pop
aaa
enter
lods
and
les
and
movsl
mov
or
lahf
mov
or
lds
xchg
sbb
pop
add
mov
cmp
jl
es
cmp
pushl
jmp
out
fcmovnbe
jle
inc
jo
lret
test
arpl
out
push
adc
es
inc
and
out
repnz
inc
ficoms
push
inc
adc
popl
sbb
mov
clc
jnp
inc
pop
insb
je
popf
sub
pop
sub
ja
dec
push
ret
xor
push
add
lock
cmp
out
lods
push
lods
fucomp
xor
stos
jnp
jo
xlat
std
repnz
hlt
das
repz
pop
xchg
and
xchg
test
xor
pop
push
or
push
adc
clc
pop
mov
icebp
jbe
xchg
mov
and
shl
push
out
rcr
dec
mov
push
mov
pop
lahf
xor
or
pmaxub
dec
iret
pop
add
dec
ljmp
or
aam
sbbb
sbb
pop
roll
iret
sub
cmp
jbe
jge
push
addr16
out
lahf
lods
dec
jp
and
adc
dec
sbb
out
addr16
in
jle
int3
push
lea
pusha
mov
out
mov
fiaddl
xor
ljmp
mov
push
fcmovnbe
aam
loop
and
ret
mov
in
mov
pop
and
xor
push
adc
divl
jo
shrb
pop
inc
adc
inc
mov
fs
mov
jne,pn
xchg
fwait
out
lret
pop
inc
je
add
and
or
or
fsts
inc
cmp
push
lea
sub
into
ficoms
roll
xchg
into
mov
push
push
push
dec
sbb
dec
sbb
or
xchg
and
xchg
add
out
jg
mov
ss
popa
inc
outsb
pusha
rdmsr
cmpsl
lret
jecxz
jle
jb
mov
mov
sbb
mov
sub
shlb
aaa
mov
rorl
orl
jmp
cwtl
inc
push
test
adc
stc
test
ljmp
sbb
push
jae
inc
xchg
cmp
add
mov
cmp
mov
ss
sbb
add
int3
jbe
loop
jmp
pop
fs
push
inc
hlt
lods
leave
xchg
mov
xor
movsb
xorb
jnp
xchg
inc
out
xchg
movsb
sub
fstl
push
int
pop
fwait
xlat
push
inc
in
int
or
or
lret
scas
lcall
subb
and
addr16
cmpsb
sahf
sub
pop
popf
and
imul
pop
out
adc
std
jne
xchg
push
inc
es
mov
adc
test
sub
mov
or
je
xchg
repnz
xchg
imul
jne
xchg
repnz
in
mov
in
and
mov
jmp
in
inc
dec
mov
fsubl
int
sub
push
int3
jae
enter
test
loop
lahf
mov
roll
pop
daa
mov
loop
sbb
hlt
pushf
inc
aad
enter
shlb
xchg
adc
xchg
xchg
or
add
pop
lret
movsl
repnz
mov
enter
sub
dec
ficoml
jecxz
outsl
inc
ret
cs
pusha
mov
mov
dec
cmc
lods
imul
sbb
xor
cltd
lret
xor
outsb
sub
sub
cmp
test
mov
out
mov
sahf
cld
push
mov
jmp
test
mov
inc
xchg
cmp
pop
jp
and
fwait
cmpsb
push
push
jmp
adc
movsl
lea
xchg
int3
cmp
push
cltd
adc
lock
sbb
and
lcall
pop
push
cmp
xchg
pop
out
sub
out
xor
test
lods
cmp
sub
movsb
mov
sub
cmp
in
push
lods
or
ret
cli
pop
hlt
mov
mov
aas
jo
fldcw
push
in
ficoms
and
push
fbstp
movsl
jmp
xor
mov
std
pop
repnz
pop
stos
lock
into
and
cmp
push
push
sti
sub
rcll
mov
loopne
loop
jno
rorl
dec
int3
fwait
and
test
jbe
cmc
mov
push
inc
cmp
jmp
xchg
fdivl
rcrl
cli
xchg
decb
aad
lcall
stos
fucomp
and
pop
adc
xchg
aam
pushf
popf
and
dec
or
clc
call
adc
repnz
adc
arpl
fmull
imul
loope
inc
inc
sbb
out
in
mov
dec
in
xchg
xorl
cmp
in
pop
fcoml
in
cmpsb
lahf
cmp
dec
push
sbbb
jno
xchg
mov
test
adc
sub
fbstp
in
stc
mov
scas
inc
jmp
es
ja
ds
fs
adc
dec
sbb
hlt
push
or
pop
je
push
dec
jle
inc
pop
lods
xor
fcompl
lods
mov
mov
cmc
inc
out
mov
jmp
pop
xchg
les
and
cmpsl
jecxz
mov
jg
or
sbb
dec
dec
bound
es
or
sarl
adc
ret
jnp
adc
adcb
int3
je
mov
arpl
scas
xchg
das
pop
or
mov
test
jno
call
pop
push
fcmovnu
mov
xchg
stc
xchg
mov
sbb
sbb
shll
cmp
nop
dec
ss
repnz
hlt
imul
pop
pop
int3
js
jbe
xchg
mov
pop
pusha
shl
inc
mov
mov
mov
mov
fildl
outsb
inc
divb
adc
shr
jle
imul
repz
stc
das
testl
inc
in
mov
and
sar
xor
mov
inc
jge
push
or
aad
dec
jge
mov
or
xchg
popa
aaa
mov
fcmovbe
test
push
andl
dec
and
out
xlat
jno
pop
int3
cmp
sub
mov
ret
mov
test
mov
adc
lret
popf
jp
pop
adc
jp
movsb
cmp
add
pop
in
or
inc
pop
and
dec
jg
xlat
inc
jp
jo
jecxz
cmp
in
repnz
ljmp
addr16
push
and
add
push
lock
xchg
lock
cli
cld
nop
divl
cld
dec
mov
out
xchg
data16
insb
adc
loop
dec
inc
lods
ljmp
jmp
add
pop
push
shrl
aam
cmp
jmp
sbb
int3
fcoms
jns
push
lock
test
xchg
mov
inc
sbb
out
jmp
jmp
or
jle
cwtl
and
add
repnz
sbb
sub
cmpsl
testb
jne
test
mov
sahf
jl
stos
je
push
xorl
and
xchg
lahf
jl
cltd
mov
dec
dec
addr16
inc
js
or
popa
jo
lods
into
and
mov
pop
push
lea
pop
lods
xlat
ljmpw
mov
sub
es
push
ret
inc
repz
and
pop
dec
add
ret
sbb
test
test
cmp
cmp
sub
cli
and
adc
inc
imul
pop
insb
lcall
add
gs
shll
test
aaa
popl
imul
repnz
jae
xchg
jno
add
in
adc
aam
jl
nop
adc
lret
cmp
add
notl
push
sete
sbb
incb
push
mov
imul
mov
mov
mov
dec
fnsave
dec
iret
sbb
cmpsb
pop
in
std
ror
les
mov
arpl
mov
sbb
cltd
imul
mov
es
sarb
push
lock
sub
mov
popa
push
fiaddl
sbb
sbbl
push
bound
or
ds
xchg
movsb
push
xchg
mov
addr16
push
stos
mov
leave
pop
mov
fbld
addl
fcomps
sbb
jmp
jb
and
and
lods
scas
and
adc
and
xchg
xchg
mov
mov
mov
push
and
pop
add
sub
sub
xor
inc
cltd
cmc
xchg
dec
lret
aam
sub
jl
xor
adc
xlat
outsl
bound
xchg
xchg
aad
dec
out
ret
out
lret
mov
lods
outsb
sti
jae
cmovg
into
int
sbb
xor
hlt
addr16
xchg
inc
push
movsl
in
xchg
ret
push
hlt
xor
dec
mov
clc
lret
or
and
and
pop
test
imul
inc
mov
xor
mov
fdivrp
lods
mov
jne
and
sti
jp
in
arpl
push
out
and
mov
push
inc
pop
hlt
inc
in
push
mov
adc
or
push
arpl
test
idivb
imul
lock
sbb
test
pusha
pop
cmp
fwait
xlat
sahf
addr16
daa
xor
jne
jnp
xchg
or
out
cmc
jg
mov
adc
push
xchg
cmp
icebp
jmp
sub
xchg
aam
xchg
jge
xchg
pusha
outsb
icebp
mov
orb
aad
xchg
lods
inc
popa
imulb
mov
cli
add
insl
adc
arpl
psubq
aad
mov
add
mov
cmp
mov
pop
jnp
cwtl
std
mov
nop
mov
inc
outsl
movb
mov
lods
or
jae
sbb
fs
or
repz
mov
inc
insl
adc
jbe
cmc
lret
es
push
imul
or
adc
aas
xchg
scas
cmp
lds
cmp
les
pop
into
pop
dec
mov
pop
pop
jmp
cs
jns
cmp
incb
push
movzwl
push
pushf
lea
pushf
cmc
mov
out
arpl
or
aaa
xor
int3
pushl
lds
jg
movsl
sbb
fs
mov
sar
sub
loope
sbb
xor
mov
and
ret
adc
xchg
das
and
jge
insl
stos
mov
pop
es
cmp
ret
repz
jbe
loop
fwait
xchg
cltd
orb
in
sbb
popf
repz
dec
jnp
enter
popa
adc
xor
inc
out
pop
movsl
ret
pop
addl
stos
mov
and
outsl
mov
pop
jno
mov
mov
loopne
arpl
cs
xor
stos
imul
sbb
pop
nop
inc
stos
popa
sbb
and
je
pusha
mov
adc
pop
jp
loope
jmp
repz
sbb
dec
mov
dec
fnsave
push
sbb
in
push
scas
and
inc
mov
aam
jae
jmp
add
mov
or
push
or
test
mov
jle
sub
dec
or
mov
xor
add
popf
cmp
stos
xor
int3
jge
rorl
mov
pminub
pop
jge
sub
stc
inc
inc
fstpt
lds
orb
cltd
jl
rep
hlt
and
xchg
pop
mov
fsubs
imul
mov
out
push
add
sahf
and
cmp
adc
xchg
mov
lcall
xlat
mov
jb
clc
or
push
jb
xor
cmp
je
inc
xchg
in
test
out
push
divb
mov
imul
addl
sub
addr16
dec
push
aad
mov
mov
js
cmp
push
xor
repnz
push
rclb
aaa
aaa
push
jp
cld
add
xchg
pop
push
or
arpl
and
xchg
push
fmul
inc
imul
mov
movsb
inc
in
cmpb
inc
jns
cmpsl
mov
push
dec
fwait
inc
sar
adc
icebp
add
inc
pushf
dec
jg
das
cltd
aaa
fisttpl
std
dec
aaa
mov
sub
scas
cmc
xchg
call
imull
enter
jne
mov
arpl
out
xor
push
ja
movsb
orl
jmp
mov
push
add
add
shlb
inc
faddp
aas
cmp
rcrl
stos
fimuls
mov
pop
mov
jp
in
mov
xchg
scas
divl
movsb
push
mov
xor
ss
add
cmp
xor
mov
lret
pop
or
std
sub
into
mov
out
fs
clc
dec
jle
sub
aam
ret
xchg
push
in
popa
fwait
sbb
dec
jb
arpl
int
add
repnz
xchg
sbb
fldl
out
cmp
iret
mov
inc
cmp
gs
xchg
fadds
mov
or
fcompl
cmovs
add
xchg
mov
xchg
pop
mov
pop
outsl
xor
mov
dec
xchg
jmp
push
mov
mov
hlt
cld
test
jns
or
xchg
jbe
popl
test
cmpsb
fcom
xchg
mov
pop
ds
je
dec
bound
bound
out
xor
insl
sub
into
outsb
icebp
les
cmpsb
jnp
jb
sbb
mov
mov
adc
fs
and
in
mov
xlat
jmp
push
pusha
add
mov
pop
mov
pop
adc
sub
adc
push
call
push
xchg
xchg
loope
pop
test
loope
addr16
and
int3
popf
or
pop
insl
pop
dec
in
repz
lcall
rcl
gs
pop
adc
ds
es
arpl
mov
cmp
rcrb
das
bound
jae
addr16
push
sub
jmp
xor
imul
xchg
outsl
sub
dec
pop
in
insl
mov
sbb
repnz
sbb
in
mov
and
mov
jmp
or
push
jmp
cmp
call
fbstp
and
insb
stc
popa
cmp
shll
or
jp
push
adc
arpl
xor
jns
fiaddl
sub
repnz
cmp
pop
aaa
xchg
add
lods
bound
push
popf
mov
cli
fisubrs
dec
sbb
pop
dec
sbb
cmp
sub
es
out
inc
xchg
jbe
adc
mov
mov
bound
out
dec
and
pop
popa
jl
jp
subb
xchg
lock
adc
lock
push
ljmp
and
aas
sub
fs
scas
mov
push
idivb
push
or
lods
shlb
cmp
inc
pop
xchg
imul
jp
mov
sub
xorb
lock
rorb
xor
aam
shl
dec
xchg
sub
sub
sub
cmc
test
add
sbb
leave
inc
fwait
jbe
enter
lock
add
pop
cmc
cltd
jns
loopne
aas
fs
jecxz
mov
sub
mov
and
dec
push
cmpsb
dec
pop
mov
cmpsl
mov
fadds
dec
insl
popa
mov
cli
insl
mulb
outsb
insb
mov
ficompl
jecxz
sbbb
push
ja
call
dec
pop
lcall
shlb
ffree
out
out
das
mov
rcrl
test
mov
outsl
cmc
fsubp
mov
cli
xchg
inc
push
aas
inc
mov
mov
add
xchg
ror
rolb
jae
pop
decl
pop
sub
inc
mov
mov
data16
lods
jp
mov
or
and
mov
adc
mov
pushf
test
xlat
dec
jle
pop
jae
dec
call
jmp
neg
stos
shrl
xchg
and
xchg
jge
pop
lcall
mov
or
dec
dec
xchg
adc
sahf
and
sbb
mov
out
jp
xor
inc
enter
dec
pop
add
popa
aam
dec
les
flds
rorb
xlat
rclb
inc
divl
cmpsl
fiaddl
rcl
iret
hlt
pop
cmp
and
lcall
stc
dec
dec
lds
dec
mov
dec
fwait
xchg
push
pop
ja
out
je
mov
mov
sub
sub
push
adc
mov
addr16
lods
fisttps
xor
pop
add
jmp
fimull
testl
xchg
cld
xchg
pop
mov
cmpsl
mov
push
and
mov
sbb
jecxz
pop
out
and
sbb
sbb
inc
fs
bound
mov
mov
pop
aaa
repz
lods
in
and
adc
lahf
mov
sbb
jo
dec
ficoml
repnz
mov
sbb
xor
int3
js
enter
aad
push
sub
add
repz
push
lock
and
mov
push
push
xchg
dec
daa
std
notb
cmp
shrb
push
push
ficoms
sub
pop
imul
push
inc
call
xor
xchg
mov
lcall
xlat
outsb
insl
mov
xor
mov
into
daa
mov
xchg
xchg
das
or
popw
xor
cmp
notb
dec
mov
sbb
xchg
ret
inc
push
sbb
xchg
aam
pop
push
push
xor
scas
addr16
cmc
jb
shlb
enter
cmp
mov
shrb
jle
in
decl
lea
lods
cmpsl
test
push
inc
shr
pop
add
mov
sbb
mov
ret
ss
sub
lock
cmp
lret
lcall
nop
inc
push
inc
jno
or
mov
and
mov
lret
sub
mov
push
movsl
inc
sub
cmp
inc
mov
sbbl
ljmp
fwait
push
sahf
ret
xchg
inc
and
jne
aaa
ret
gs
mov
jge
or
imul
test
cli
adc
inc
push
adc
xor
lock
loope
addr16
jmp
call
pop
push
lahf
cmpsb
cs
push
in
mov
push
sub
out
xchg
dec
lds
mov
adc
add
dec
jle
sub
pop
movsb
cmp
ljmp
push
inc
jb
loope
aam
enter
mov
js
jae
cwtl
addr16
aad
imul
cli
hlt
adc
negb
insl
cmc
pop
sbbb
mov
scas
jo
dec
inc
mov
fimull
jb
mov
nop
lret
mov
inc
ds
dec
cmp
ret
sub
sub
stos
pop
out
cmc
adc
lock
insb
lods
and
push
stos
out
and
out
lock
popf
mov
adc
orl
in
or
adc
mov
or
cltd
pop
mov
jg
scas
and
ret
mov
in
rcrl
out
xor
repnz
mov
adc
push
dec
cmp
mov
dec
pusha
pop
shlb
mov
ret
ror
push
pushf
cmpsb
mov
dec
xchg
mov
push
sbb
jmp
les
mov
imul
cmpsl
bound
xor
ret
cmp
ja
ret
push
pop
mov
cmpsl
cs
dec
dec
shl
lods
xchg
lods
shrl
sub
pop
mov
lcall
pop
clc
out
into
aam
cmp
ss
fldt
mov
int
mov
and
push
pop
cmp
sbb
test
je
sbb
sbb
sbb
push
mov
cmp
repnz
sub
adc
sub
cmp
xor
adc
mov
and
loop
inc
sbb
orb
or
loopne
sbbl
or
sub
out
mov
sub
xchg
jnp
add
cltd
inc
jae
jmp
popa
out
mov
ljmp
test
xchg
lret
into
sbb
fwait
bound
in
shrl
mov
clc
movsb
inc
ficompl
hlt
dec
leave
xor
pop
scas
aas
rcll
sub
pop
lcall
or
leave
mov
outsb
inc
lahf
lahf
xlat
mov
aam
cld
mov
outsl
push
inc
mov
xchg
loop
jo
jno
add
jnp
inc
jecxz
mov
push
outsb
test
sub
add
mov
fidivl
add
or
idivb
sti
clc
xor
in
stos
in
add
push
lods
or
es
lret
lods
cmp
icebp
stc
in
rcr
call
movl
ficomps
test
adcl
inc
mov
test
xchg
test
jecxz
xchg
fsubs
mov
add
jl
dec
cwtl
mov
jmp
xchg
inc
les
xor
pop
push
push
fs
cmpl
ret
dec
fs
es
mov
sbb
loope
sbb
shl
inc
cmpsb
popf
and
inc
dec
push
in
cmp
adc
jne
or
jle
in
jnp
mov
scas
push
mov
es
nop
cmpsb
sub
cli
mov
cltd
into
cmp
notl
mov
sub
in
cmp
add
cmp
jp
outsl
bound
iret
jb
popf
mov
xchg
aam
pop
mov
xchg
testl
add
pusha
adc
jne
jle,pn
loopew
or
jmp
popa
jp
mov
adc
push
push
adc
add
or
dec
out
les
add
insb
insb
push
sbb
leave
push
xor
cli
xchg
adc
cli
mov
pop
and
mov
mov
je
add
push
imul
out
movsl
add
push
std
jo
test
dec
fmuls
sub
stc
aaa
mov
sub
or
jbe
aas
pop
jbe
popa
mov
ds
xlat
xchg
jl
dec
and
jge
outsb
inc
test
add
cmp
dec
lret
fistpl
jp
lock
dec
testl
xchg
xchg
cmp
cmpsl
xor
repnz
in
cmp
ljmp
sbbb
movsb
aaa
lret
stos
and
aad
sahf
mov
or
inc
stc
sahf
movl
pop
shr
adc
dec
enter
xchg
sub
inc
jge
or
cmpsb
sbb
pop
ds
pop
shl
sbb
pusha
lock
sti
xor
imul
sub
push
sti
std
aas
pop
mov
push
mov
scas
mov
pop
adc
arpl
mov
arpl
cwtl
repz
mov
and
jnp
sub
sbbb
aaa
mov
loop,pn
lock
or
pop
sub
adc
in
sar
and
jle
lahf
loop
jnp
flds
cmp
fdivrl
imul
cmp
xchg
pop
in
leave
mov
in
sbb
xchg
nop
jg
jle
xchg
cmp
mov
push
fdivrl
sahf
js
dec
ftst
push
push
add
mov
lret
mov
jmp
jg
xchg
test
js
gs
mov
std
jns
scas
mov
push
mov
mov
cli
sub
mov
clc
pop
jns
loop
dec
out
pusha
aas
pushf
jmp
cmc
aam
sahf
in
xor
push
insl
jns
decb
cmp
or
mov
inc
popa
enter
mov
or
push
xchg
repz
stos
repz
and
sub
negl
loop
mov
xchg
dec
xchg
mov
jp
dec
cmp
jp
jle
push
pop
cwtl
inc
dec
jae
sub
sub
cmp
inc
cmc
inc
loopne
sub
arpl
cltd
sbb
loope
fisubrl
sub
or
fxch
lds
cmp
arpl
sub
stc
pop
fdivrl
add
aas
dec
fnstsw
dec
pop
adc
mov
bound
jmp
adc
add
outsb
popf
jge
fs
mov
shl
mov
xor
mov
ja
jno
jns
movl
sbb
mov
mov
xor
inc
jle
push
or
push
pop
paddw
ljmp
xchg
inc
lock
loope
pop
lods
add
xchg
test
fcompl
push
gs
dec
xor
out
xchg
imul
rorb
orl
shrb
movsl
sub
in
aas
dec
adc
lret
xor
ret
loop
pop
repz
aas
sub
sahf
cwtl
or
ljmp
hlt
jbe
jae
inc
fistl
mov
jmp
test
mov
mov
sti
daa
mov
sbb
adc
sbb
jg
ret
sarl
or
popf
sbb
jnp
push
sarb
sub
mov
aam
test
dec
xlat
sahf
pop
insl
aas
push
movsl
jecxz
dec
and
jns
push
ljmp
shlb
dec
jl
push
stos
movsb
cmpsb
lcall
clc
mov
pop
inc
sub
ds
push
popa
ret
jecxz
enter
inc
sti
mov
incb
lahf
mov
xor
enter
sbb
fisttpll
cmc
inc
pop
cmp
jmp
mov
lret
mov
push
cli
fmull
cmpsl
pop
cmp
xchg
rcr
add
bound
test
sarb
lods
bound
je
in
sub
in
xor
jg
lahf
or
sub
sti
add
mov
stos
lds
xor
aad
and
cs
mov
into
fwait
sub
fisttps
ficoms
rcrb
fmul
mov
adc
dec
ret
or
sbbl
jne
jbe
xchg
or
dec
xchg
data16
jecxz
and
and
push
add
mov
push
jg
lds
inc
bound
fcmovu
lock
xlat
pop
es
jle
sub
add
outsb
loopne
pop
sbb
mov
cmp
push
xor
jl
mov
xchg
insb
push
daa
daa
jp
push
add
test
jno
dec
jbe
pop
aam
lock
pop
movsb
mov
adc
loope
icebp
testb
mov
scas
dec
mov
shr
ret
mov
push
push
in
push
pop
imul
mov
cmpb
scas
and
out
scas
nop
push
std
sub
mov
in
shrl
cmpsl
sbb
mov
xor
mov
mov
arpl
pop
enter
fwait
lret
mov
stos
sub
addr16
sbb
das
ss
or
cmpsl
gs
cmc
jp
add
lea
daa
push
xchg
cli
pop
nop
lods
loope
or
jnp
dec
xlat
gs
ficoms
jae
xchg
inc
sbb
sub
xchg
stos
xchg
xchg
xchg
imul
mov
pop
out
push
jl
testl
or
negl
icebp
call
xchg
and
or
and
mov
jl
movsb
jmp
fwait
jno
mov
shlb
xor
sbb
sub
test
jae
add
adcb
sub
dec
cwtl
inc
xor
mov
pop
sbb
jg
test
push
mov
data16
sub
mov
mov
fwait
mov
mov
idiv
jno
pop
mov
or
flds
enter
mov
jno
jmp
xor
pop
fdiv
in
testl
addb
fidivrl
stc
scas
cmp
sub
push
adc
jecxz
jl
add
or
sub
fisttpl
sub
cs
jbe
add
loop
ja
lahf
stos
imul
in
xlat
xor
cmp
out
out
arpl
fs
sbb
push
cli
ljmp
out
js
aaa
add
adc
mov
movsb
add
sub
and
loope
cs
ret
or
jge,pn
sahf
lock
rcrl
inc
aaa
adc
cs
mov
popf
mov
sbb
sbbl
push
shlb
pop
pushl
bnd
push
imul
dec
dec
insb
adc
dec
ret
test
ret
inc
imul
xchg
adc
or
mov
pop
gs
sbb
pop
test
dec
sbb
cltd
test
jae
mov
xor
xor
mov
div
fsubs
sub
inc
xchg
mov
fwait
sbb
sub
dec
icebp
mov
test
push
cs
ds
outsb
xchg
xchg
adc
adcb
mov
int3
pop
in
add
dec
js
fsts
or
lds
pop
dec
cmp
scas
xor
push
cwtl
inc
loop
push
pop
jmp
mov
jg
fimuls
xorl
imul
aam
pop
je
and
push
sub
mov
test
or
sub
enter
inc
sbb
ret
into
jns
ja
imul
xorb
or
cmp
push
ret
lret
sti
fnsave
stos
mov
es
pop
pop
push
push
aam
inc
mov
int3
jecxz
fmull
sahf
shlb
jp
mov
outsl
insl
imul
sbb
gs
sub
push
fcomps
out
jmp
pop
nop
sahf
jnp
and
in
mov
or
xchg
imul
cmp
sub
fldenv
not
aaa
pop
jns
fsubl
mov
arpl
pop
es
jno
loop
add
add
push
inc
ja
out
addr16
cmp
xchg
sub
mov
in
and
loope
rol
pushf
sti
push
lock
stos
popl
imul
roll
in
xor
add
shl
mov
xor
jne,pt
inc
cwtl
movsb
ret
into
inc
cmp
mov
hlt
sbb
push
jl
aad
stos
inc
out
adc
test
adc
dec
sub
clc
mov
mov
or
stos
ret
xor
in
and
sub
fcomps
lcall
mov
pop
pop
sub
jge
outsl
fwait
push
aam
dec
jae
push
and
sub
sub
xor
sbb
and
nop
or
fdivrs
xor
into
scas
loop
cltd
sub
push
repz
mov
shlb
push
jg
xchg
push
fdivl
cmp
pop
jno
push
les
xor
pusha
mov
jnp
add
xchg
lret
sbb
mov
inc
imul
push
mov
cmp
or
lret
mov
ds
inc
xlat
mov
xchg
lea
pop
xchg
ret
mov
push
insb
neg
dec
sbb
push
or
mov
push
mov
mov
scas
jecxz
cmp
ret
inc
stos
cwtl
ja
sub
std
mov
mov
scas
pop
adc
jnp
in
fldt
test
rol
aam
arpl
mov
movsb
fisttpll
push
add
stc
sub
adc
clc
mov
loopne
pop
and
adc
dec
ja
adc
std
pushf
mov
cmpsl
loope
inc
pop
sbb
push
xchg
adc
sub
cmpsb
pop
ds
mov
mov
outsb
int3
scas
mov
ljmp
jmp
inc
push
fisubrl
jnp
mov
stos
lea
lds
out
jecxz
mov
xchg
cmp
add
lahf
sub
xor
and
iret
or
pop
and
lds
fwait
call
mov
iret
in
and
das
mov
jne
xchg
aas
jnp
mov
popa
sub
cmp
xorl
cli
adc
sbbl
jae
scas
cwtl
mov
mov
bound
xor
fcmovne
or
fidivrs
sbb
daa
mov
leave
add
mov
mov
pop
mov
data16
and
or
scas
popf
pop
cli
lds
and
jb
les
in
mov
test
dec
mov
ficomps
pop
mov
cmp
gs
sti
pop
fwait
in
out
jle
test
jae
jp
ljmp
in
fstl
mov
add
pop
push
jns
je
outsb
cmp
mov
pop
popa
pop
fmuls
in
in
pop
sahf
nop
inc
nop
pop
test
mov
aaa
dec
mov
pop
dec
or
xchg
push
cmp
and
insb
mov
mov
mov
add
jp
xor
sub
insl
pop
xor
mov
jmp
daa
call
push
cwtl
into
sahf
fistl
cmp
push
push
lahf
arpl
shl
pop
cwtl
loop
or
or
inc
testb
movsb
bound
pop
jge
cmp
into
aaa
fs
adc
xchg
mov
xor
les
sti
popl
sub
or
clc
pop
insb
fiaddl
fcompl
roll
fstps
pop
sbb
dec
push
jge
ret
push
aad
mov
insl
je
and
ret
push
pop
call
cltd
sahf
mov
and
inc
mov
popf
insl
or
pop
mov
imul
push
ret
push
lea
decl
loopne
ljmp
push
loop
ret
loopne
into
inc
mov
cmp
pop
sbb
and
inc
and
jmp
mov
iret
pop
jge
push
mov
cmpsl
sbb
xchg
sbb
mov
inc
push
fs
shrl
jle
ljmp
arpl
mov
das
cltd
test
xchg
arpl
xor
ljmp
jmp
out
call
imull
xchg
aam
lret
repnz
jecxz
mov
sub
sbb
push
out
xor
xor
int3
cmc
in
pop
cmp
push
das
les
add
push
ja
pop
adc
and
ret
rclb
std
pop
xor
into
add
jp
xor
std
hlt
push
fildll
cs
xor
push
sbb
pop
ret
dec
jge
jbe
adc
pop
popa
ja
pop
mov
lret
mov
mov
add
in
or
fisubrl
mov
repnz
daa
cmp
jnp
dec
cmp
dec
mov
jmp
push
push
mov
dec
loope
pop
loop
shll
cmp
xor
cmp
lahf
out
repnz
call
sub
and
mov
divl
mulb
jae
xchg
dec
into
inc
iret
cmp
push
les
pop
dec
shll
loope
ja
or
mov
xchg
loope
in
rcr
ss
cltd
add
mov
mov
les
sbb
pushf
and
mov
testb
loopne
jmp
ja
sub
pop
pushf
push
dec
xor
fsubrl
push
mov
cmp
lds
cmp
xchg
mov
out
xchg
fcomps
pop
cld
ja
lods
add
jno
adc
fidivrs
xchg
mov
push
pop
fldt
out
cwtl
repnz
movsb
add
fnstenv
cmc
jae
test
cwtl
pop
rclb
xlat
cld
dec
test
xchg
and
add
ja
adc
cmc
sub
inc
jb
cmc
dec
popa
test
subb
sub
arpl
mov
pop
dec
mov
js
cmp
mov
lds
mov
test
out
and
xchg
push
cmpb
jns
popf
xchg
fs
ljmp
fadds
repnz
dec
and
adc
out
dec
add
mov
js
dec
jne
mov
cs
jns
out
push
mov
push
sub
and
mov
loopne
addr16
sti
in
and
mov
push
gs
aam
sbb
dec
mov
xor
scas
dec
jo
in
inc
mov
add
push
mov
leave
xchg
sub
cltd
fistpll
cmp
movsb
adc
das
sub
pop
adc
push
rorl
in
rorb
push
jmp
jmp
div
aam
or
dec
test
in
into
pop
repz
sub
sbb
ljmp
in
push
or
push
dec
xor
scas
andb
dec
lahf
xchg
mov
out
jb
adc
test
jns
cwtl
jle
adc
pop
jne
sahf
cs
sbb
outsl
aaa
pop
cltd
pop
and
in
scas
cmp
xor
adc
mov
or
lret
jge
push
sub
lret
cmp
sbb
int
nop
mov
fisubrl
lock
int3
loope
insb
sub
xlat
sbb
xchg
test
mov
ret
and
sub
lock
ror
andb
jb
xor
in
sbb
xchg
loopne
push
lods
shlb
mov
sub
aam
sub
inc
insl
pop
faddl
pusha
loopne
cmp
dec
cmp
imul
mov
cli
mov
xchg
xchg
xchg
mov
mov
xor
lret
cltd
fwait
mov
in
repnz
mov
mov
add
jno
pusha
lock
jle
rorb
mov
cmp
cmp
pop
sub
scas
inc
mov
cltd
cwtl
dec
adc
push
fisttpl
xor
mov
in
or
shl
jg
sbb
fsubrs
imul
mov
sub
repz
push
jl
fidivl
nop
and
push
adc
movsl
mov
jae
pop
rolb
mov
push
and
loop
fld
decl
xchg
push
jmp
and
pop
test
pop
hlt
roll
mov
mov
mov
adc
dec
mov
jl
xor
loope
or
dec
call
jno
bound
xor
fcmovne
gs
push
xchg
push
outsl
add
mov
jge
mov
lods
sbb
pusha
xlat
lods
jp
cmp
mov
mov
and
jne
sahf
cmpsb
addl
aam
pop
add
nop
aas
out
xchg
imul
xor
cmpsb
inc
inc
outsl
mov
fld
mov
fistpll
mov
lret
inc
mov
repz
pop
dec
push
adc
xchg
icebp
add
aaa
ret
jg
into
sbb
adc
das
pop
or
cmpsb
adc
push
sbb
mov
aad
repz
xchg
or
aad
jl
xchg
ss
cmc
gs
inc
pop
mov
lock
lock
jns
mov
and
xchg
cmc
jbe
push
rcrl
dec
lods
cwtl
ret
mov
jo
adc
jg
fdivrl
cwtl
shr
push
lahf
mov
sbb
out
iret
dec
scas
cmpsb
bound
cltd
repz
mov
sub
fdivl
xor
pop
mov
adc
addr16
hlt
fistl
cmp
adc
shl
movsl
mov
push
ret
and
pop
fstpt
aaa
lods
pop
sbb
lock
cmp
ljmp
test
lret
loopne
je
das
jo
push
mov
jnp
xchg
mov
xor
pop
cmp
dec
jbe
sbb
rolb
or
roll
data16
jb
xor
pop
mov
call
jg
into
add
xchg
pop
mov
scas
add
xlat
mov
jge
adc
dec
pop
das
sti
sub
sub
int3
push
sub
imul
mov
and
mov
stos
sub
aas
mov
mov
dec
dec
mov
dec
add
int3
xor
loopne
call
jmp
mov
fcoms
inc
frstor
iret
decb
repz
imul
bound
outsb
aad
push
mov
push
shrb
dec
les
dec
popf
mov
addl
cli
push
adc
xchg
hlt
lret
pushf
mov
movsl
pop
scas
lahf
sub
jnp
mov
cmp
sbb
dec
mov
sub
or
pushl
pop
repz
inc
inc
and
mov
stos
sub
pop
leave
loop
xor
jg
inc
lock
or
pop
and
lahf
test
lods
sbb
sub
pushf
sub
pop
pop
xor
sbb
mov
sarl
adc
sub
jle
add
sbb
xchg
iret
adc
dec
inc
in
cltd
lret
push
xchg
mov
aaa
inc
mull
add
notb
cltd
in
inc
lret
cmpsl
push
mov
dec
popa
xchg
testl
xlat
adc
ljmp
adc
in
mov
ja
fmull
jle
out
fbstp
fcmovu
push
out
sbb
cmp
push
xchg
push
ficoml
dec
ret
icebp
xchg
push
sti
js
js
xor
xchg
mov
mov
shll
aam
cltd
lahf
scas
or
push
push
inc
cmpsb
cmp
cmp
mov
sbb
inc
add
cmpsb
shlb
sub
shl
sbb
sub
fistps
int3
pop
out
fcmovu
ret
xchg
cmp
xchg
das
scas
xor
stc
sub
dec
push
leave
scas
sbb
lea
mov
adc
or
pop
mov
orb
push
jmp
scas
push
popa
inc
push
cs
cmpsb
bound
lea
mov
test
inc
mov
jge
mov
mov
mov
das
push
push
mov
stos
lods
test
sti
push
outsl
or
dec
movsb
lea
xor
mov
inc
adc
or
push
pop
popa
pop
das
mov
jo
and
mov
push
push
mov
inc
and
loope
dec
insb
shl
fisttps
mov
in
icebp
xchg
jg
scas
push
mov
adc
pop
int
pop
inc
sbb
or
pop
pop
mov
inc
inc
popf
test
sub
inc
ret
xchg
rcrl
fcompl
scas
stc
fnstsw
pop
ja
data16
stc
movsl
test
xchg
dec
and
xlat
mov
jnp
xchg
clc
cld
stos
add
insb
add
js
sub
inc
iret
aaa
fistpl
pop
ret
add
push
push
adc
lods
add
push
stos
mov
dec
bound
push
mov
out
or
std
roll
mov
dec
or
stc
cli
mov
jge
xor
es
sub
sub
inc
sbb
les
ja
sahf
cmp
jle
popf
xor
mov
aas
or
or
inc
aaa
jge
adc
mov
or
loope
insb
div
jge
test
out
sub
mov
and
rcl
jae
dec
xchg
sahf
cld
mov
jo
sub
mov
rol
notb
jmp
mov
xchg
mov
test
xchg
push
fs
ss
cmpsl
jmp
push
outsb
filds
add
gs
test
jno
leave
lret
enter
imull
cmc
xor
lds
outsb
mov
aas
add
pop
test
lock
inc
scas
jmp
push
inc
mov
cwtl
push
mov
ret
pushf
sub
push
hlt
sbb
out
mov
mov
pop
or
imul
mov
jmp
jmp
bound
dec
in
insb
or
mov
pop
xor
lret
into
xchg
fsub
out
test
lock
iret
mov
xor
movsl
scas
enter
xchg
push
xchg
fdivrl
or
imul
popa
jecxz
pop
sub
add
stos
out
movsb
lods
fisttpl
jb
les
mov
out
jl
pop
or
fdiv
sub
mov
mov
cmp
fsubrs
or
jns
shl
xchg
sub
leave
and
loop
jl
add
ret
or
out
ljmp
add
mov
sub
icebp
xlat
cwtl
inc
dec
mov
jnp
pop
mov
cmpsl
mov
mov
sub
jb
repnz
adc
push
lret
sub
iret
or
push
imul
pop
movl
icebp
sahf
icebp
cwtl
pop
out
out
inc
add
movsb
movsb
roll
dec
and
cmp
mov
notb
mov
mov
cmp
inc
jae
inc
fdivs
insb
xchg
ds
je
push
pushl
bound
int3
jl
adc
les
inc
outsl
ret
dec
and
push
push
jmp
xchg
inc
dec
push
cmp
lods
push
jle
mov
sub
pop
popf
popa
outsb
mov
cmp
repnz
fwait
inc
mov
daa
push
jae
mov
pop
iret
orb
xor
jmp
pop
dec
inc
mov
dec
ljmp
dec
push
pop
jmp
outsl
xor
test
dec
jns
cli
es
cmp
out
lea
mov
add
fcomip
in
cmp
rorb
flds
cmpsb
xchg
insb
pop
xor
mov
jno
je
sti
lret
shlb
mov
enter
fwait
into
mov
adc
and
aad
adc
inc
in
rclb
xchg
jne
sub
xchg
adcl
loop
ret
adc
fucom
push
lods
in
xor
push
add
jl
icebp
inc
cmp
cwtl
pop
cmp
enter
loope
mov
xchg
pop
jecxz
xor
in
xchg
pusha
inc
not
xor
and
imul
aam
scas
sub
aaa
cmp
jno
div
test
dec
mov
dec
mov
mov
jl
sbb
addr16
repz
les
jmp
jp
cwtl
push
jne
pop
mov
ja
pop
mov
xor
bound
shll
adc
jecxz
aad
adc
data16
mov
push
xchg
inc
xchg
sbb
push
shrl
aas
inc
mov
adc
lods
adc
inc
fcmovnu
repz
pop
mov
pushf
in
dec
jns
ds
int3
xchg
fnstenv
out
mov
stos
push
movsb
jecxz
xlat
pop
mov
cmp
das
ss
or
mov
pop
movsb
jp
movsl
add
lds
fsubp
orl
ljmp
mov
sub
sub
cmp
subl
and
fimuls
xor
dec
mov
mov
pop
mov
sbb
jl
dec
pop
repnz
push
push
mov
mov
mov
or
jb
mov
add
das
add
inc
clc
dec
pop
pop
jae
into
pop
inc
xchg
outsl
or
lock
test
cmp
mov
xchg
lahf
jle
inc
cs
sbb
push
pop
adc
movsb
cmp
and
add
push
add
push
pop
aad
insb
ret
mov
out
push
fcoml
call
push
movsl
mov
xor
xor
repnz
cmp
xor
mov
push
and
pop
xchg
sbb
jle
mov
adc
mov
add
push
rcll
imul
xchg
and
xchg
cmp
out
pusha
cli
xchg
xor
hlt
cmp
jmp
and
sub
add
mov
mov
outsl
or
or
mov
dec
stc
mov
jb
mov
cltd
mov
add
repnz
popf
mov
mov
subl
sbbb
les
xchg
xor
inc
cmp
je
inc
jb
add
cmpb
imul
lods
add
or
jb
jbe
push
sbbl
testb
mov
dec
in
lcall
mov
or
scas
push
cwtl
loopne
cltd
rcrb
je
add
jecxz
fimull
or
xchg
insl
and
lcall
pop
xchg
popf
lret
mov
jle
sbbb
mov
push
xchg
or
mov
adc
pop
add
outsl
or
and
lahf
inc
incl
push
fucomp
ds
std
ljmp
inc
jns
daa
lret
push
out
adcl
xor
jg
mov
ret
push
cmp
lods
cmp
in
adc
push
test
mov
shll
pusha
sahf
push
lea
lea
sbbb
stos
xchg
push
cmc
jge
dec
and
inc
outsl
and
mov
xchg
sub
in
push
fstps
and
xor
std
ficompl
into
adc
in
clc
lahf
and
push
rcrb
stc
adc
cli
xor
xchg
es
push
sbb
clc
inc
mov
xor
imul
pushf
cmp
mov
fimull
sbb
sbb
mov
dec
mov
das
and
data16
jns
jno
jmp
add
cmp
pop
adc
fildl
out
outsl
jb
bound
cmpl
ljmp
sub
pop
xor
and
in
cmp
jnp
loope
push
divb
xchg
je
mov
push
pop
xchg
sbb
or
jo
lea
jb
cmp
popa
add
lahf
mov
mov
or
mov
xor
aas
cmp
xchg
jl
xor
xchg
pusha
aad
jl
xchg
inc
or
sub
shrl
mov
mov
mov
pop
mov
adc
test
notb
cmp
mov
sub
decl
ja
ljmp
in
push
test
add
xor
lods
test
adcb
cmp
gs
outsl
das
lret
rolb
leave
mov
xchg
rorb
dec
addb
je
adc
fldlg2
push
sub
fcoml
sub
mov
adc
daa
and
loopne
inc
sub
rcll
popf
pusha
jnp
mov
lods
daa
push
inc
mov
jl
pop
fistps
ficompl
rol
pushl
and
or
clc
dec
push
dec
push
push
pop
cmp
out
jge
lock
pop
clc
inc
adc
jb
fisubrl
sub
sub
xor
gs
mov
setbe
cmp
stc
mov
int
jmp
mov
or
pop
sub
out
adc
xor
adc
and
in
divl
imul
jp
add
in
xchg
pop
add
jbe
imul
inc
jp
fsts
jmp
pushf
pop
pop
inc
lock
das
jmp
xor
mov
outsl
mov
jecxz
mov
jno
mov
fwait
iret
mov
in
xchg
fcoms
bound
xchg
clc
fstpl
mov
cwtl
push
xchg
mov
outsl
xor
in
or
out
insb
mov
mov
or
xor
add
push
sub
clc
inc
fldcw
dec
cmc
rol
test
inc
inc
jo
cmp
jne
test
bound
or
pop
fdiv
mov
dec
mov
pop
outsl
ret
xchg
out
jns
dec
and
lret
scas
and
xchg
lock
mov
cmp
test
adc
pop
addb
sbb
int
lret
pop
mov
test
sbb
fadd
daa
nop
mull
pop
gs
sarl
mov
test
mov
push
sbb
jmp
mov
pop
and
shll
es
cmp
sbb
dec
or
enter
push
mov
popf
test
xchg
scas
popf
jae
pop
rorl
add
mov
pop
aad
rcrb
jbe
jnp
stos
pushf
in
xchg
mov
ret
fisubl
std
cli
shl
lds
sbb
sbb
xchg
insl
dec
mulb
outsl
std
sbb
dec
jb
cmp
stos
cltd
test
cs
mov
test
pop
outsl
data16
shl
jo
lock
rcrb
jb
push
rcrl
sub
aaa
sub
lds
shll
shlb
pop
mov
add
in
pop
cmp
inc
in
ja
xor
push
insb
mov
pop
mov
add
xabort
fildl
jle
in
fdecstp
ficompl
pop
je
mov
push
clc
mov
loopne
sbb
rcr
in
push
call
imul
shrb
fidivrs
xchg
xor
push
into
adc
push
cmp
outsb
loop
mov
pop
cmp
push
mov
mov
dec
pop
jb
lcall
dec
adc
mov
in
and
cmp
adc
hlt
scas
add
loop
out
xchg
jl
push
adc
mov
cli
xchg
sub
jp
out
mov
mov
pop
cmc
push
mov
xchg
iret
xor
inc
and
pop
push
push
rcl
imul
scas
pop
cmc
repz
push
adc
lret
pop
and
insb
add
mov
outsb
fwait
pop
popf
rol
dec
in
out
push
xchg
filds
push
add
pop
in
lea
or
popa
mov
das
inc
cmp
clc
mov
lea
inc
cltd
inc
jae
mov
std
ljmp
out
inc
sbb
mov
push
inc
xchg
mov
out
jmp
das
jbe
sub
xchg
and
adc
es
vpsraw
add
sub
cs
sub
cs
pop
and
fimuls
jno
sahf
dec
cmp
lcall
das
adc
or
jg
dec
addr16
push
and
and
mov
int
xor
jmp
cwtl
cmp
inc
movsb
ficoml
or
scas
jg
xchg
rcr
sub
inc
daa
sub
sub
jmp
inc
inc
jmp
jo
jmp
lock
insb
xor
xchg
pop
xchg
iret
cltd
mov
orl
xor
inc
sbb
daa
mov
xor
sbb
mov
push
sbbl
mov
test
sub
cltd
pusha
lds
nop
inc
xchg
fs
lods
pushf
mov
fs
subl
pop
iret
jbe
loope
insl
pop
rclb
sub
ret
testb
fs
fsts
xchg
and
stc
movsl
arpl
and
sub
mov
xlat
mov
pop
xor
aad
scas
jmp
enter
call
xchg
xor
iret
cmp
aam
jl
lret
push
adc
xchg
dec
pop
je
cmp
and
jae
insb
adc
dec
sbb
mov
and
outsl
xchg
xor
ret
inc
sub
popa
fldcw
xchg
int
movsl
fildll
int
enter
sub
dec
test
out
jge
lahf
out
add
mov
pusha
sbb
test
lock
lea
xchg
jo
push
es
xchg
or
sub
xchg
mov
test
push
imul
negb
add
std
gs
adc
lret
pop
sub
mov
mov
or
out
push
pop
arpl
fisubrs
dec
dec
cltd
jo
mov
fwait
inc
or
adc
imul
ljmp
add
or
and
jnp
test
sub
inc
inc
leave
mov
addb
add
int
out
cmp
mov
aad
jge
hlt
test
mov
mov
mov
cwtl
sub
aaa
pop
icebp
jae
xor
jle
jmp
cmp
jmp
cmpsb
jo
adc
movsl
jo
subl
stos
add
loop
xor
cli
ja
xchg
inc
lahf
lret
subl
imul
into
ljmp
fld
mov
cwtl
loope
sub
fs
pop
and
push
call
mov
lds
pop
std
push
jbe
mov
mov
cltd
test
ss
mov
cmp
dec
jl
arpl
sbb
mov
mov
add
mov
imul
in
cmp
cmp
es
hlt
push
inc
jns
dec
pop
push
mov
mov
mov
aad
mov
add
xchg
xchg
cmp
inc
and
sbb
jecxz
fisubrs
insb
pop
lret
or
push
fwait
lahf
insl
or
jl
mov
dec
mov
fsubr
sbb
mov
call
jo
push
jg
sti
mov
sub
jo
lock
popf
or
test
add
or
mov
out
pop
adc
daa
or
fldl2e
fisttps
add
fsubrl
inc
jl
pusha
or
data16
movsb
xchg
sub
std
inc
lar
test
jo
mov
ret
mov
shl
jne
bound
das
or
movsl
jno
sarb
js
sarb
cld
out
loopne
ret
addr16
cmpsl
in
ret
inc
inc
push
dec
arpl
dec
ljmp
and
enter
adc
xor
or
lds
xchg
lods
ret
sub
lock
jb
cwtl
cmp
sarl
stc
aas
inc
cltd
ret
lock
fsin
dec
mov
js
fldl
cmp
sbb
cld
mov
gs
and
xchg
dec
mov
shrb
fdivl
scas
insl
sub
dec
hlt
adc
inc
pop
fidivrl
call
cs
loopw
inc
push
mov
movsb
test
cwtl
mul
cmp
stc
std
cltd
push
push
or
dec
mov
insl
push
adc
scas
inc
mov
push
lcall
xlat
nop
cld
orb
push
ss
mov
aad
hlt
outsb
arpl
and
aam
push
lods
push
pushf
cmp
push
xor
mov
negl
mov
jmp
lret
xor
xlat
aam
add
in
sbb
insl
jno
adc
js
jae
fdivrp
jge
sub
notl
dec
fidivs
repnz
test
mov
dec
insb
push
daa
fcmovu
int
adc
inc
imull
lahf
stos
xchg
sub
repnz
retw
data16
mov
lea
pop
negl
pop
mov
mov
std
push
out
pop
popa
ja
icebp
hlt
or
cmp
xorb
or
and
push
imul
fimuls
js
insl
mov
iret
mov
lret
repz
xor
or
mov
sbb
aaa
testl
cwtl
xchg
adcl
adc
insl
xchg
sbb
xor
ljmp
mov
aaa
pop
icebp
or
push
enter
adc
gs
xchg
lret
call
dec
mov
pusha
mov
repz
icebp
popa
add
rorb
mov
les
stc
dec
aaa
cmp
scas
dec
in
add
mov
into
movsl
jo
pop
xchg
cmc
xlat
or
daa
rclb
ss
mov
pop
xor
pop
push
cld
xor
das
mov
mov
mov
cmp
and
xchg
shl
adcb
jnp
jno
mov
push
sub
mov
in
sub
or
rolb
shl
movsl
aad
push
popa
mov
mov
sbb
jns
andb
cmp
pusha
mov
out
daa
jnp
cmpsb
push
xor
jp
xchg
add
cmpsb
xor
popf
shll
in
rcr
mov
push
or
mov
mov
mov
fwait
rol
sub
shlb
sarb
lock
xchg
pop
mov
mov
lahf
add
movsb
add
jl
push
jmp
cmpsl
out
jns
fs
jge
addb
add
xchg
sarl
aas
sbb
pop
mov
bound
mov
sbb
loopne
mov
sbb
leave
push
mov
mov
mov
dec
or
cmpsb
push
fnstenv
cmp
cmpl
pop
mov
cwtl
mov
and
xchg
xor
clc
ja
sub
aam
jno
sar
icebp
jae
aaa
jge
mov
xchg
xchg
sbb
pop
sti
pop
lret
xchg
lret
mulb
test
cmp
lods
sub
pop
das
push
test
push
pop
or
pushf
insl
ret
mov
dec
inc
ss
out
push
fildll
mov
insb
cmc
mull
test
mov
dec
sub
inc
rcll
popa
adcb
sub
subl
das
incb
jg
sbb
loop
test
leave
xorl
popa
inc
push
cmp
jl
fsubrp
lahf
dec
xlat
lods
lea
lret
daa
inc
or
ficompl
and
xor
jbe
test
fs
les
test
add
cmp
in
mov
in
push
cld
loope
divl
sub
stos
jbe
and
in
lds
hlt
xor
das
cmp
imul
cmp
decb
fcoml
nop
mov
inc
dec
fstpt
mov
dec
inc
jb
mov
test
sbb
js
cmp
leave
pop
mov
cmpsl
mov
cmp
aas
cmc
and
cmpsb
and
dec
xchg
sub
testb
fistpl
ret
lahf
in
lcall
and
xlat
mov
int
xor
popf
cmp
push
into
jge
scas
pop
or
or
mov
daa
pusha
pop
inc
dec
mov
mov
clc
jo
mov
jne
out
sub
sbb
inc
mov
push
out
jge
test
outsl
xchg
repz
cmp
les
cmp
add
and
outsb
mov
lods
out
push
addb
daa
mov
and
sbb
sbb
cmpsl
incl
not
daa
incb
adc
pop
scas
jae
jl
xchg
subps
or
jnp
notl
cltd
stc
lret
movsb
add
and
jmp
sbb
xchg
or
xor
dec
adc
add
sbb
jmp
xlat
pop
xor
out
dec
xchg
push
mov
pusha
mov
fidivrl
xchg
icebp
out
jecxz
sbb
lods
cmp
push
pop
mov
and
or
lahf
push
sbb
jl
mov
int
aad
outsl
sub
dec
add
pop
dec
call
dec
decb
sub
inc
lods
sub
sub
or
or
mov
and
or
pop
push
cmp
mov
pop
xor
shll
bound
out
or
mov
loop
xor
imul
repz
pop
dec
out
xchg
in
data16
pop
scas
rclb
sub
das
add
lcall
sub
sub
repz
lret
arpl
mov
mov
and
mov
dec
outsl
inc
nop
xchg
cld
cmpsl
xchg
mov
lea
rcrb
in
add
hlt
sahf
rcrl
mov
test
iret
pushf
fs
aam
scas
inc
cmp
xchg
jl
and
sub
mov
fisttpl
outsl
xchg
pop
mov
cs
call
in
cmp
movsl
mov
mov
fildll
repnz
xor
in
mov
inc
jle
xchg
sbb
out
push
pusha
sub
xorl
push
mov
leave
mov
icebp
notb
fists
cmp
mov
xchg
xchg
ja
dec
aaa
sub
jmp
sub
ds
mov
inc
push
insb
dec
mov
aam
xchg
rcll
lea
inc
enter
pop
xchg
ss
icebp
insb
jecxz
xorl
hlt
test
mov
add
push
push
or
jmp
verr
fwait
iret
daa
cltd
push
sub
lret
mov
orb
orl
mov
loop
adc
jbe
push
sub
mov
in
addl
rcrl
call
mov
jno
outsb
insl
xchg
aaa
adc
repnz
or
xor
scas
ds
fs
jg
stc
mov
pop
movsl
push
mov
mov
test
jae
dec
cld
imul
and
leave
xchg
cwtl
sahf
add
xor
lahf
pop
mov
inc
fidivrl
bound
add
js
mov
jecxz
pop
clc
inc
bound
cmp
stos
add
out
adc
cmp
stos
xchg
mov
mov
fdivl
push
inc
outsl
movsb
loope
lds
cmpsl
mov
popl
pop
lds
out
ficomps
js
cmp
pop
pop
loop
xchg
add
arpl
push
sbb
sub
icebp
scas
mov
inc
iret
test
sarl
add
scas
in
movsb
test
ds
inc
cmp
jle
jnp
sub
mov
icebp
sub
sbb
mov
xchg
lea
and
daa
and
xchg
imull
pop
dec
call
icebp
push
int3
orps
loopne
sbb
pop
decb
jle
lcall
cmc
mov
hlt
imul
fwait
sbb
lods
mov
inc
sarb
adc
out
adc
inc
mov
out
sub
inc
je
jno
sbb
and
add
sub
imul
adc
movsb
dec
lds
je
mov
sbb
cmp
gs
sub
out
pop
outsb
sub
or
ja
pop
adc
adc
and
adc
pop
mov
mov
xor
rclb
pop
xor
dec
pop
pop
mov
fildl
movsb
and
jns
mov
pushl
fimuls
in
movsb
ret
cwtl
lret
lret
or
push
sbb
dec
pop
xchg
in
test
lcall
ret
xchg
in
push
sbb
dec
xchg
jbe
pop
jae
push
add
paddusw
jo
push
or
pop
mov
jl
imul
and
rorb
pop
cmp
jae
rorl
rcrl
fbld
adc
adc
push
mov
adc
and
std
sub
repz
or
sbb
push
push
ss
ret
and
mov
push
jge
mov
rcrl
sub
fistpll
call
sub
xchg
cmpsl
aas
in
adcl
mov
mov
xchg
xor
div
and
aam
xchg
outsb
xchg
lea
xor
sbb
adc
int
movsl
ja
iret
popf
movsb
cmp
push
sbb
addr16
call
enter
xchg
jp
xor
outsl
or
pop
push
adc
adc
cmp
bound
test
outsb
cmp
aad
adc
cmp
out
shll
adc
or
fdiv
sbb
sub
cmpsl
addr16
fmul
adc
roll
sbb
pop
fnstsw
enter
aam
insl
push
push
inc
pop
fldt
loope
inc
push
js
mov
jl
xor
rorb
je
stos
push
xchg
jecxz
sub
xor
lods
fisubl
pop
loop
outsb
sti
adc
mov
mov
into
scas
repnz
sbb
pop
mov
sbb
push
leave
and
add
pop
loop
mov
xchg
imul
lock
dec
icebp
jnp
push
pop
sti
mov
push
cmp
cmp
inc
stc
sbb
jl
pop
paddw
adc
pop
cld
mov
test
mov
sbb
stos
fsubrs
rol
pop
jne
xchg
repz
mov
mov
daa
mov
xorb
imul
jo
adc
mov
cmp
mov
out
fldenv
mov
cld
pop
fdivs
arpl
jne
addr16
mov
aam
popf
cwtl
cmp
out
insb
sub
ss
enter
lods
dec
push
sub
sbb
xorb
inc
dec
xor
jns
ror
int
ds
cmc
mov
mov
jge
lods
pop
pusha
sub
lds
xor
testb
lea
popf
imul
mov
and
pop
xor
nop
fisttpl
imul
mov
sbb
sbb
cltd
mov
mov
add
clc
ljmp
xor
movsl
jg
mov
dec
orb
sahf
mov
mov
mov
mov
adc
aad
ljmp
xlat
lcall
mov
lea
jmp
mov
push
fists
cmp
dec
outsl
loop
int3
lret
or
inc
dec
pop
and
imul
sbb
divb
fsub
test
dec
dec
or
repnz
lds
dec
dec
push
cmpsl
aad
fcmovne
adcl
roll
mov
cmpsb
xlat
arpl
mov
jecxz
dec
out
sbb
inc
fsubr
pop
cmp
rorl
jno
sbb
jl
sahf
scas
popa
inc
leave
jmp
adc
imul
and
mov
push
sbb
pushf
pop
jne
cmp
mov
xchg
sub
pushf
lods
iret
mov
into
xor
inc
xchg
xor
mov
push
pop
test
push
fidivrs
xchg
aas
mov
sbb
jnp
cmp
mov
jo
xchg
or
sbb
cmp
add
sbb
arpl
mov
insb
fdivs
jecxz
mov
mov
mov
je
sub
std
popf
rorl
mov
and
loop
xor
sbb
bound
mov
jae
ret
xlat
xchg
cmpsl
test
std
arpl
jge
les
in
jge
test
xor
iret
add
clc
enter
fdivrp
push
test
xchg
ret
jecxz
loopne
and
push
jg
out
das
inc
mov
mov
mov
mov
jb
js
dec
jno
push
or
xor
aas
sub
and
mov
outsl
lahf
dec
ret
or
loop
xor
leave
je
mov
lods
push
push
lods
sub
loopne
dec
sub
roll
pop
mov
mov
jl
scas
bound
xor
mov
ficoms
out
mov
fistps
sub
dec
jle
pop
cli
test
xchg
mov
push
cmp
das
jle
hlt
mov
or
imul
sub
aaa
out
aad
rolb
mov
mov
hlt
mov
in
roll
ret
pop
lret
loope
mov
test
mov
lock
rorl
psubsb
aas
or
ljmp
daa
jns
pop
fsts
mov
repnz
in
or
leave
lcall
addr16
loope
push
sbb
xor
movsb
pop
sti
imul
ds
aaa
sub
xor
push
sub
or
xor
clc
rcrl
mov
js
arpl
dec
add
testl
ret
mov
inc
sub
nop
mov
xchg
adc
xor
clc
add
cmp
popa
mov
jecxz
addr16
jle
mov
mov
cmp
leave
js
add
insb
mov
fnstenv
loop
ja
call
int3
inc
ja
add
enter
mov
jo
push
mov
lret
xor
mov
les
jle
test
shlb
dec
sub
dec
shrl
in
jb
enter
ret
es
sbb
mov
push
or
inc
pop
scas
inc
call
imul
rcrl
outsl
and
push
popa
sub
push
in
mov
pop
mov
jmp
lea
shlb
out
cmpsl
lret
push
popa
shll
mov
stc
adc
das
xchg
inc
lock
cmp
dec
adc
jno
sbb
ret
call
sbb
lock
lret
ret
stc
cmc
mov
pop
mov
jecxz
inc
std
outsl
cmp
fnstenv
shl
dec
cli
testl
add
fistpl
sub
add
or
iret
xchg
mov
aam
aaa
mov
insl
pop
mov
fldenv
lahf
popa
pop
rcll
jg
leave
xchg
outsl
arpl
out
cmp
or
sub
popa
mov
mov
xorb
addr16
hlt
xchg
inc
mov
iret
stos
lds
mov
sub
icebp
sub
lret
mov
add
pusha
out
lea
cmp
js
stc
or
shll
cmp
xchg
push
xlat
bound
hlt
lods
xor
sub
cmp
push
push
xor
call
and
pop
mov
fildll
loopne
sbb
jmp
pop
push
fmuls
sub
es
adc
jge
rorb
in
xor
in
fisubrs
popa
iret
imul
jae
jle
xchg
insl
push
xor
jnp
push
and
mov
add
sub
les
mov
int3
mulps
add
dec
outsl
icebp
adc
shll
das
es
movsl
test
es
aad
inc
gs
mov
add
mov
cli
xor
xchg
stos
cmc
int3
outsb
daa
div
stos
xorb
xchg
add
dec
jl
cmp
mov
dec
in
test
push
dec
fcmovb
jp
movsb
mov
addr16
lahf
cltd
sbb
xor
imull
ja
loop
test
and
xor
dec
insb
dec
mov
icebp
xchg
fs
mov
movsb
push
mov
and
lods
in
push
ja
sbb
sbb
xchg
jns
mov
pusha
arpl
pop
test
sub
pop
hlt
fwait
movsb
les
decl
cltd
jle
push
dec
lods
mov
jnp
xchg
por
js
add
imul
push
mov
xlat
jmp
shlb
sub
arpl
fidivrs
sar
mull
cmpsb
jno
xchg
test
incl
mov
out
dec
jecxz
mov
ja
mov
fs
dec
lock
rcrb
push
jle
mov
jns
lret
ds
test
sbb
ljmp
sbb
sub
jge
jns
pop
xchg
xor
and
cs
ja
pop
movsl
add
movsb
ret
cmp
push
dec
aas
hlt
mov
rolb
dec
pop
lock
jne
mov
icebp
inc
outsb
inc
in
pop
adc
sub
and
mov
xchg
dec
cwtl
sub
inc
dec
adc
xor
adc
xchg
data16
ffreep
cmc
sub
mov
xor
fcoml
dec
or
fsubs
pop
xor
cwtl
movsl
loop
fstpl
push
adc
pop
xor
decl
or
cwtl
sbb
push
xor
adc
inc
in
pop
addr16
scas
push
jo
xor
lds
xchg
add
pop
pop
stos
fistps
lock
cmp
xchg
or
fdivs
inc
pop
test
outsl
cld
nop
aam
inc
sub
mov
scas
inc
imul
loope
pop
dec
aam
jbe
loope
outsl
pop
add
mov
popa
lods
xchg
gs
pushf
cmpsl
mov
and
imull
xlat
mov
adc
mov
imul
fisttpll
and
xchg
test
mov
lret
faddl
pop
jp
lret
outsl
aam
or
and
fbstp
aad
in
lds
test
call
push
loop
inc
mov
mov
ret
add
addb
jnp
movsl
mov
lcall
adc
test
adc
fsubrs
mov
les
std
test
adc
icebp
pop
loope
orb
cmp
xchg
sub
push
roll
inc
sbb
push
adc
dec
pushf
cmp
out
pusha
xchg
imul
leave
sti
and
outsb
xor
adc
mov
jg
imul
mov
outsb
jnp
sahf
ss
hlt
jl
jae
imul
movsb
dec
imul
sarl
int
mov
aaa
call
cmp
mov
push
popa
sub
sbb
mov
xor
cmp
and
mov
mov
add
jmp
mov
inc
adc
or
daa
pop
scas
mov
rcrl
aaa
add
clc
rcl
scas
mov
cmp
das
mov
pop
imul
shrl
ja
sbb
sub
mov
arpl
adc
inc
stos
cld
inc
js
test
hlt
into
mov
inc
or
mov
std
or
adc
into
shll
fcompl
inc
mov
mov
cmp
cmp
pushf
mov
js
out
pop
mov
and
sahf
pop
lcall
inc
push
test
mov
add
cmpsl
stos
mov
shrb
sahf
dec
aad
rcr
push
xor
mov
into
xchg
adc
cmpsb
inc
jecxz
dec
jp
and
xchg
sub
jno
and
mov
xorb
stc
jnp
insl
js
dec
repnz
scas
push
lret
jns
mov
rolb
not
sti
imul
into
out
call
xchg
movsb
ljmp
mov
movd
in
fs
xor
addr16
cmp
mov
lret
xchg
push
in
popa
into
push
bound
or
mov
xor
and
pop
lea
pop
inc
or
ja
xchg
jno
xor
cld
fs
add
and
pop
dec
push
jb
xchg
and
xchg
jl
push
pop
jl
inc
es
dec
sbb
and
jnp
mov
clc
les
cmp
or
add
cmp
add
jl
repz
sbb
add
pop
imul
into
sbb
cmp
insb
enter
push
loopne
and
gs
ret
out
psadbw
push
sub
in
add
xlat
jo
bound
rcrb
push
jns
adcl
test
mov
cmpsb
es
scas
push
cmp
adc
xchg
leave
scas
jge
push
cli
inc
sbb
xor
repnz
frstor
add
popf
in
mov
movsl
push
icebp
pop
sti
das
add
xlat
push
jbe
jle
sbb
and
jbe
aad
fcoml
or
aam
mov
pop
mov
cmp
jne
dec
sti
inc
stos
xlat
mov
push
out
les
out
mov
outsb
jmp
xchg
xchg
in
jno
push
push
xor
pop
pop
cmp
add
xor
add
enter
push
ret
cs
sub
or
aas
cmp
enter
aad
cmpsl
cltd
sti
inc
cmp
clc
imul
in
test
or
lock
stc
popa
jne
loope
jo
imull
clc
add
jbe
into
add
loopne
xor
inc
add
ss
pop
fmuls
pushf
std
lcall
imul
adc
outsb
aad
and
es
mov
loopne
leave
inc
add
pop
push
les
and
jle
lret
inc
repnz
jecxz
gs
repz
add
mov
scas
adc
les
int3
bound
insl
jnp
xchg
jge
jbe
inc
or
dec
ds
sub
mov
add
cmpsb
pop
es
add
cmpsb
jmp
lcall
adc
mov
or
push
in
out
dec
test
jge
or
jmp
dec
sarb
push
enter
hlt
inc
in
sbb
scas
scas
adc
pop
jae
in
or
xor
std
push
mov
or
push
movsl
loop
ja
rcll
arpl
mov
std
ret
sbb
sbb
int3
add
adc
mov
int3
aas
dec
enter
in
sti
jnp
js
inc
adc
sub
xor
test
sbb
push
ret
mov
mov
popl
cmp
inc
inc
nop
sub
dec
add
fneni(8087
inc
dec
ljmp
rcl
mov
jb
movsb
pop
mov
enter
insb
mov
ds
sub
sbb
mov
inc
dec
repz
cmpsb
out
sub
dec
pop
out
sbb
pop
scas
xchg
adc
cmp
rclb
or
cmp
jg
ds
xor
xchg
mov
cmpsl
int3
inc
pushf
loope
lret
loope
rcll
xor
sbbl
pop
popf
pop
int3
andb
xchg
std
adc
lret
out
push
fdivrs
cmp
jo
leave
cmp
push
xlat
cli
sub
addr16
xor
add
loop
std
and
aas
adc
mov
in
mov
push
dec
aaa
sub
repnz
add
lret
mov
in
jno
mov
push
scas
mov
fistpl
stos
test
mov
out
test
pop
or
aaa
outsl
cltd
push
dec
clc
dec
adc
push
push
fsubp
mov
xchg
jg
repnz
lods
xchg
js
cmp
movsl
adc
test
loope
fildll
and
mov
sbb
cmp
cld
xorb
cmp
fistps
loope
sub
pop
push
pop
daa
les
loop
dec
orb
push
sarl
sbb
inc
ret
mov
les
dec
in
aam
out
add
fists
cmc
sub
or
call
in
add
stos
jge
out
sub
jbe
pusha
sub
jb
xchg
jo
mov
adc
cmp
idivb
push
fsubrs
and
jne
in
call
sbb
push
ljmp
lods
adc
aas
adc
subl
cmp
in
lea
or
ja
loop
or
and
call
pusha
mov
push
push
xlat
jnp
fnstenv
into
test
mov
jg
cltd
inc
or
jmp
fmuls
push
dec
adc
sbb
sbb
shrl
scas
push
adc
dec
add
cld
int3
ljmp
or
mov
mov
cli
out
clc
mov
dec
or
pop
fbstp
xchg
inc
fadds
das
sub
xchg
mov
aas
clc
sahf
add
outsl
mov
lahf
mov
push
into
aam
push
inc
leave
call
mov
push
pop
lods
fisttpl
sahf
jecxz
ja
sbb
mov
jl
xor
or
or
lret
inc
and
sub
popa
cmpsl
adc
insb
popf
xchg
and
fcoml
push
push
add
jo
jno
add
es
inc
fcoml
les
or
sahf
ret
popf
stc
repz
fisttpl
fucomip
int3
dec
loop
shl
pop
push
cmp
cli
inc
add
test
and
call
filds
arpl
nop
fcomps
xchg
sbb
adc
mov
subl
jp
push
gs
mov
jl
and
shrb
scas
gs
int
sar
sub
dec
mov
out
jnp
mov
cld
sub
dec
insl
sub
jle
mov
ret
jne
imul
cltd
mov
dec
repz
push
adc
test
lods
daa
insl
sub
mov
or
and
shl
fiaddl
mov
lcall
adc
daa
mov
aad
inc
hlt
outsb
jmp
jl
jle
out
popa
loop
pop
jns
mov
hlt
add
mov
jmp
cld
xchg
loope
shrb
and
fdivp
and
mulb
jg
fdivs
mov
in
jg
and
push
cs
mov
ljmp
push
xchg
adc
scas
outsb
rolb
cmp
fsubp
push
add
loopne
mov
adc
push
aam
out
inc
daa
cmp
rolb
aad
incb
pop
pop
out
lods
popf
jmp
xlat
leave
and
mov
daa
out
jne
in
jo
lret
xor
sbb
push
sbb
add
jno
xor
test
and
das
pop
xor
int3
clc
and
adc
sub
mov
decb
movsb
inc
or
loopne
pop
adc
shlb
adc
and
not
or
or
or
adc
lea
dec
mov
cmpsl
in
orl
push
in
mov
jp
aaa
dec
das
push
insl
outsb
lods
push
xchg
out
iret
xlat
rcrl
mov
neg
orb
mov
pop
xchg
add
insb
inc
shll
test
pop
in
sbb
out
sub
dec
mov
popf
cmp
orb
cmp
fists
jle
lret
sbb
mov
fistpll
arpl
nop
mov
mov
adc
cmpsl
mov
into
cmpsb
mov
push
sub
pusha
push
mov
and
ret
sti
xor
cwtl
and
ret
sub
xchg
inc
cmp
lods
and
push
sahf
dec
mov
insb
jb
andb
ret
scas
scas
je
mov
mov
jl
jp
pop
cwtl
sbb
rorl
ret
shll
cmp
mov
lret
push
mov
test
call
pop
cmpsw
push
inc
mov
ss
add
movsl
mov
pop
mov
fisubl
cwtl
mov
sarb
cmp
das
repnz
add
addl
les
xor
pop
mov
stc
rcrb
pop
test
pop
mov
sbb
mov
rorl
mov
lret
cs
xchg
test
inc
xlat
outsb
xlat
fwait
inc
lods
sub
pushl
test
daa
or
mov
loopne
sub
jp
mul
mov
dec
xchg
push
dec
fsub
arpl
jae
pop
ljmp
pop
cmpsl
xchg
push
cmp
push
mov
leave
add
dec
out
mov
jnp
insl
outsl
lock
pop
sbb
mov
sti
aaa
cli
notb
int3
jmp
pop
mov
mov
add
insl
cmp
pop
stos
icebp
xchg
and
lcall
mov
inc
lods
mov
cltd
mov
mov
sub
stos
dec
test
in
and
push
fdivs
scas
mov
or
ljmp
lods
and
and
xchg
shll
lret
sbb
mov
mov
mov
jnp
adc
in
sbb
push
jecxz
rol
push
cs
jae
sbb
push
fs
inc
test
add
inc
shl
push
xchg
mov
pop
stos
lcall
cltd
int
out
cmp
gs
push
xchg
hlt
ret
xchg
pop
leave
sbb
popf
push
sahf
jp
loope
sub
fisttpll
fimull
addb
test
test
xchg
sahf
mov
mov
cmpl
push
aaa
xchg
in
add
jno
jecxz
icebp
mov
fstps
jl
cmp
dec
cmp
fwait
cmpsb
mov
pop
mov
push
inc
out
js,pn
xchg
movsb
jae
inc
jbe
or
push
sahf
clc
in
or
jg
pop
movsl
mov
add
adc
jl
vmovaps
mov
pop
sbb
je
hlt
cs
roll
cmc
cwtl
std
sahf
ss
cmpsb
xlat
iret
add
stos
sti
cmpsb
mov
in
mov
xor
adc
daa
push
cmpsl
push
aad
jl
fs
and
pushf
push
mov
dec
and
ret
gs
stos
int
ja
cmp
xchg
arpl
mov
lahf
cmp
cmc
inc
testb
in
push
jnp
and
lahf
push
cs
cmpsb
inc
adc
pop
stos
inc
repz
shrb
mov
pop
insl
jl
out
or
push
inc
nop
xlat
add
cmpb
fisttps
test
or
jl
mov
mov
out
sub
jge
mov
adc
roll
jae
fstps
repnz
out
leave
hlt
inc
fidivrl
stos
jecxz
mov
jmp
sbb
decb
lods
inc
scas
xor
mov
lea
test
jge
fwait
aas
scas
loop
imul
mov
inc
bound
dec
dec
outsl
mov
lock
jecxz
icebp
clc
rcll
and
mov
push
inc
cltd
push
xlat
mov
in
pushf
dec
rclb
mov
je
push
fisttpl
jecxz
xchg
imulb
popf
int3
insb
dec
sarb
fstpt
pop
inc
adc
sbb
add
add
cmp
aad
fbld
inc
adc
xchg
push
jb
or
sbb
or
pop
fcoml
popf
add
push
arpl
add
mov
cld
or
inc
or
pop
daa
and
std
out
or
in
cltd
pop
sub
cmp
push
out
mov
imul
pop
lret
jo
sbb
stos
pop
sub
test
sbb
call
push
adc
das
bt
push
dec
insb
movsb
das
pusha
sti
fs
rol
inc
aad
xchg
xchg
jne
bound
adcb
ret
push
imul
lret
aad
cs
fcompl
flds
incl
scas
adc
push
adc
mov
adc
test
pop
or
dec
movsb
xchg
jge
imul
insb
sbb
rorl
xchg
adc
dec
inc
cmc
adc
jae
jge
inc
addr16
pushl
das
sub
movsl
mov
inc
push
or
mov
jle
mov
push
lock
dec
or
dec
leave
scas
sub
fimuls
in
rcll
in
icebp
std
arpl
fcomip
push
mov
test
inc
fists
mov
and
fistps
ljmp
jl
and
rorl
pop
pop
bswap
sar
fcmovnbe
in
rcll
cmp
dec
fcmovnb
dec
fimull
adc
arpl
cmpsb
inc
push
cmp
popl
or
push
nop
inc
stos
mov
or
sbb
and
push
movsb
loop
dec
mov
pop
outsb
fisttps
dec
jmp
jmp
mov
push
aad
add
inc
jp
inc
adc
and
mov
jge
xchg
cmp
loop
xor
and
xchg
xor
sbb
fwait
mov
mov
xchg
adc
pusha
into
imul
int
mov
sbb
jb
out
aas
push
pavgb
pop
xchg
jae
mov
clc
jno
jbe
aas
nop
inc
popa
xor
cltd
jp
popf
jae
dec
repnz
sahf
sbb
dec
add
cmpsl
pop
mov
jmp
push
cwtl
dec
mov
inc
cmp
pop
loope
lret
daa
push
add
cmc
clc
cwtl
xchg
pop
mov
js
imul
mov
addr16
adc
rcrl
push
adc
push
dec
inc
jo
mov
inc
addr16
filds
push
scas
jne
adc
jno
lds
dec
repz
aaa
push
addr16
adcl
jmp
xchg
imul
cmp
sbb
mov
fisubrl
leave
xor
leave
mov
cmp
push
fmul
sbb
or
push
or
mov
and
adc
and
daa
scas
jmp
inc
insl
stc
js
lods
jae
andl
push
mov
paddw
adc
mov
pop
push
stc
sub
out
mov
xchg
or
xchg
mov
cmpsl
xchg
xor
add
imul
dec
cmp
pop
addr16
cmp
sahf
mov
mov
subl
and
mov
push
cmp
idiv
in
adc
xorl
mov
out
jne
cld
shl
cltd
loopne
xor
push
pop
and
es
or
divb
je
arpl
mov
mov
jp
lock
shrb
xchg
mov
cmp
scas
adc
xor
push
sahf
lahf
inc
ss
std
push
mov
mov
push
and
cltd
jp
jecxz
fdivrl
ret
popa
xchg
aam
cmp
jns
neg
push
inc
out
sub
inc
fidivrl
adc
push
pusha
lea
daa
mov
das
mulb
stc
ret
in
ss
ja
in
es
pop
xor
not
push
popa
xor
mov
jmp
push
cmp
repz
pop
ret
or
cmp
ja
mov
cmc
mov
push
bound
inc
stos
mov
rcr
mov
negb
fwait
mov
movsl
aad
sub
xlat
lahf
mov
dec
jmp
inc
jp
pusha
shrl
lods
fisttpll
pusha
loope
out
sarl
or
lock
arpl
inc
sbb
cli
sub
add
mov
fildl
int3
aaa
push
clc
cmpsb
sub
ret
inc
jno
inc
arpl
add
scas
and
inc
push
js
pop
cmp
out
mov
cli
stos
dec
fs
test
cli
scas
push
loop
sub
ss
cmc
loopne
insb
ds
xor
dec
lcall
popf
sub
adc
sbb
xor
insb
dec
cmp
push
or
lods
fnstcw
mov
sahf
out
push
pusha
sub
aad
repz
cmp
pop
ret
ret
push
dec
mov
cmp
jle
inc
popf
out
int
xor
adc
jne
outsb
popa
stc
cmc
aam
aas
int
xchg
sarb
adc
dec
insw
xor
jp
sahf
in
pop
or
push
xor
and
jae
mov
jge
icebp
stos
sbb
aas
arpl
push
fiaddl
fs
pusha
mov
in
lods
add
and
pop
pop
add
push
xchg
out
sub
stos
cmp
xor
mov
mov
js
mov
fisttpl
pop
pop
xchg
cmp
rolb
movsl
cmpsl
aas
lods
sub
xchg
mov
cmc
mov
sti
mov
sub
or
cmpltps
add
sarb
pop
loopne
rol
sbb
cmp
data16
sbb
arpl
push
and
jp
cmpl
jo
rorb
rorl
mov
roll
xchg
out
fwait
cmpb
mov
or
in
scas
mov
dec
jmp
les
arpl
sti
jbe
lea
jb
insb
push
xchg
lods
mov
sbb
push
in
inc
cmc
mov
xchg
jmp
cmpsb
fwait
scas
dec
sbb
inc
mov
dec
into
adc
out
xchg
mov
movsl
decb
fdivrl
nop
xlat
fists
xor
add
sub
adc
fistl
sbb
cmp
nop
inc
scas
jbe
add
cmpsl
and
pop
xor
mov
and
aad
js
mov
mov
mov
cmp
or
flds
inc
dec
jno
aas
in
jle
jb
mull
rorl
gs
adc
mov
xor
shrb
bsf
sbb
push
sub
push
test
mov
mov
dec
test
push
jnp
mov
push
flds
mov
mov
inc
stc
cld
jo
ja
hlt
mov
in
mov
insl
and
loop
aas
mov
mov
cmp
jge
add
push
scas
mov
and
mov
cwtl
cmpsb
or
mov
jnp
inc
fxam
pop
adc
les
pop
out
loop
ljmp
out
lock
jns
stos
and
and
xlat
push
push
inc
pusha
mov
in
aaa
push
mov
andl
jmp
adc
frstor
jne
cmc
jle
jbe
jno
inc
xorb
in
dec
mov
lods
pop
comiss
xchg
xor
movsl
andl
sti
or
lea
adcb
add
inc
aam
ds
popf
mov
xchg
mov
mov
outsb
loop
stos
cs
pop
imul
xchg
dec
loope
int3
sub
inc
or
inc
ljmp
clc
cwtl
cmp
imul
stc
lret
cmp
pop
scas
dec
dec
and
es
or
push
flds
in
jne
lock
lock
adc
test
sub
mov
js
push
fwait
push
jl
push
and
mov
mov
add
xchg
xchg
cmp
jle
imul
pop
and
add
mov
cmc
xchg
stos
cmp
jg,pn
hlt
popa
xor
xchg
push
sub
pop
testb
test
pushf
jecxz
test
popl
jae
lret
and
jb
int3
ja
push
mov
mov
jl
xchg
test
mov
push
push
cli
mov
jne
mov
pop
push
loopne
push
jg
dec
leave
fs
jnp
or
imul
fsubr
pop
insb
and
movsb
orb
in
mov
sti
dec
adc
jno
movsl
sbb
vpunpcklwd
xor
inc
dec
jne
lcall
fwait
je
scas
pop
sub
jp
imul
xor
es
divb
jg
test
iret
xor
fs
movb
mov
inc
in
test
fisubrs
jp
popa
out
and
hlt
lea
call
ljmp
out
pop
jle
or
xor
imul
les
sbb
jl
sub
ja
mov
loope
cmp
ja
or
mov
add
out
stos
mov
ja
fld
scas
nop
test
leave
sbb
adc
vmovlpd
out
inc
jp
aad
mov
push
leave
aas
push
pop
pop
fstl
incl
lds
sub
movsl
stos
sbb
xchg
cwtl
icebp
push
adc
rcrl
jno
andb
sarb
pop
ds
pop
cmp
inc
cs
pop
fisubl
mov
push
xchg
xor
ja,pn
pop
pop
jle
sub
sarl
pop
sub
dec
push
aam
jb
sarl
xchg
mov
adc
and
xchg
decl
andl
data16
test
jnp
add
loop
lods
jl
jle
dec
mov
xchg
dec
sbb
ja
or
int3
xorl
xor
out
sub
mov
xchg
mov
pop
outsl
sbb
jge
fldenv
int3
ds
ficoms
or
imul
int3
xor
mov
enter
loop
add
mov
push
sbb
sbb
xor
lret
int3
inc
or
jmp
pop
mov
jae
jnp
out
cmpsb
add
mov
shlb
mov
pop
pusha
ficoml
loope
cltd
adc
roll
jb
cmpsb
add
and
jecxz
xchg
or
dec
clc
stos
jno
jnp
insb
push
jne
stc
std
cmp
cmp
jp
push
mov
add
dec
xchg
icebp
xor
stc
cld
aam
and
add
mov
negb
xor
pop
add
dec
add
and
insb
adc
jge
cmp
or
daa
in
pusha
dec
dec
mov
xchg
adc
fldl
inc
outsb
loop
cmp
loopne
push
and
pop
inc
addr16
cmp
xorb
or
iret
cld
sub
xchg
lock
fxtract
and
das
cmp
fisttps
mov
mov
imul
pop
ds
ret
cli
cmp
push
int
push
lds
sbb
dec
xor
jle
pusha
mov
push
cmp
mov
jl
mov
push
mov
fsts
stc
sar
cmp
or
icebp
sbb
stc
sbb
outsb
out
fwait
cmp
inc
leave
arpl
es
jne
out
outsb
insb
mov
jno
scas
adc
add
mov
arpl
mov
or
xorb
daa
add
mov
sub
aad
push
push
mov
sbb
push
xor
jbe
push
fidivrl
mov
push
sub
or
sub
mov
lcall
into
pusha
mov
mov
pop
inc
clc
sbb
je
shll
ret
stos
or
aaa
jnp
adc
jns
fstl
mov
mov
mov
decl
rorb
iret
and
scas
adc
sub
mov
fiaddl
cmp
fisubrs
mov
aaa
test
mov
lock
test
xchg
sbb
mov
add
in
sti
mov
pop
test
data16
jp
xrelease
enter
arpl
out
lahf
mov
inc
push
cmpsl
aad
ja
shll
and
adcb
xor
xorb
or
pop
mov
xor
or
fstpt
stc
and
in
test
sub
sub
and
inc
jo
cmp
aam
outsb
lds
xchg
divb
fdivrl
pop
stc
int3
and
pop
aad
sbb
mov
lea
or
mov
bound
mov
jb
outsb
add
out
adc
sbb
mulb
sub
repnz
mov
test
and
inc
mov
sbb
push
aas
jp
dec
mov
mov
push
push
out
pop
cmp
lret
or
inc
push
add
loope
mov
shll
mov
sub
xchg
lock
inc
and
in
shlb
mov
mov
dec
mov
out
js
imul
add
cmp
test
or
inc
pushf
cli
or
mov
dec
repnz
clc
roll
mov
jecxz
or
sbb
insl
push
inc
inc
in
fiadds
cs
adc
lods
cmp
gs
mov
inc
jmp
std
or
xchg
pop
lret
push
push
push
add
jae
or
sti
ja
sbb
sub
mov
push
daa
push
pop
sti
mov
pop
aas
lret
pop
clc
or
ljmp
leave
mov
sbb
cmpl
bound
jl
xchg
push
scas
ja
shrb
mov
lahf
aaa
jne
jl
dec
clc
mov
lds
sti
fnstenv
in
dec
das
popf
fwait
mov
pop
int
lret
sub
popf
or
lods
push
scas
pop
xor
rcll
dec
insl
and
sarb
fmuls
add
mov
add
shl
aaa
lret
xor
mov
out
out
movsb
pop
mov
pop
mov
test
sarl
pop
test
xor
movsl
cltd
sbbl
lahf
push
fbstp
rcll
test
xor
mov
adc
ds
dec
call
fistpl
fadds
pop
mov
xchg
xor
fists
xchg
adc
or
xchg
lock
ret
jns
sub
inc
imul
and
in
sbb
push
push
cli
pop
sti
mov
lret
mov
adc
out
push
sub
ljmp
xchg
pop
and
outsb
sbb
sub
shlb
gs
and
push
dec
mov
cmp
adc
test
cmp
clc
sbb
cmc
ss
mov
adc
sbb
pushf
and
sti
bound
mulb
sbb
fdivrl
sub
out
push
rolb
in
or
cwtl
mov
xchg
sub
dec
mov
adcl
push
push
mov
push
popf
mov
mov
arpl
into
fisttpll
xchg
inc
push
cmp
stos
mov
adc
cmp
iret
jne
fcoml
ljmp
pop
iret
insl
sub
arpl
push
sti
inc
and
mov
jle
or
inc
or
int
xlat
jl
push
sub
adc
inc
int3
xor
jbe
out
push
adcl
or
jnp
inc
sbb
pop
mov
or
pop
leave
jg
mov
add
push
cmp
xchg
out
pop
fidivs
ret
cmp
cmp
xorl
mov
ret
mov
fwait
adc
pop
adc
jns
mov
cmp
adc
ljmp
rolb
xchg
cmp
popa
lds
call
jne
aaa
cmpsl
jmp
sub
push
daa
pushl
pop
xlat
inc
push
stos
pop
cmc
mov
add
mov
jge
inc
sti
push
mov
push
push
push
popf
cltd
pop
call
lea
sbb
out
or
fdivs
loope
or
aam
xor
xor
sub
cmp
loope
mov
fs
fs
xor
xlat
sub
sbb
dec
xchg
les
jp
xor
push
adc
mov
and
sbbb
insl
fsubrl
jp
movsb
lret
and
cmc
movsb
imul
xor
fsts
cltd
ror
xor
mov
cmp
fcoml
outsl
fcmove
sub
aam
mov
es
dec
or
test
inc
mov
xchg
jno
movsb
sbb
cmp
push
hlt
cmp
add
ljmp
dec
mov
mov
add
fdivp
mov
insl
out
push
addb
rcll
mov
xchg
pushf
fs
push
mov
adc
push
push
jle
xchg
add
lea
push
stc
jecxz
stc
adc
pop
sbb
int3
aad
adc
scas
push
adc
bound
ffreep
icebp
push
cmp
sbb
xor
idivb
repz
mov
pop
inc
scas
sbb
xor
pop
push
jmp
outsb
shlb
iret
ficoms
insb
test
xor
jae
cmp
sbb
mov
sbb
stos
sarb
mov
sub
mov
lahf
lock
mov
test
pop
add
and
pmullw
int3
fistpl
int
aam
mov
bound
xor
insb
aas
in
mov
pop
repnz
push
adc
lret
movsl
aaa
cmp
fbld
enter
out
mov
lock
aad
into
cmpsb
stc
push
pop
push
push
cs
scas
xchg
je
or
loop
push
cmpsl
rcrl
dec
sbb
sub
lock
cmp
mov
repz
mov
cli
xchg
add
mov
xchg
insl
sbbb
popf
cmp
mov
xlat
cmp
xor
lods
in
ret
popf
iret
cltd
inc
adc
pop
push
mov
sub
scas
mov
ret
pop
outsb
sbb
decl
xor
sub
inc
not
mov
cmp
cmc
into
rorb
rcrl
push
xor
jmp
mov
aas
imul
test
jae
or
outsb
jo
arpl
jns
xor
mov
fisubl
test
in
and
daa
fcmovb
andb
sahf
sub
push
xor
inc
mov
adc
mov
je
cwtl
sub
dec
sahf
mov
pushf
das
mov
sub
or
popf
sub
push
xor
repz
cmc
lods
sbb
bswap
adc
notb
xchg
arpl
fistl
insb
shrl
iret
scas
jne
mov
ljmp
mov
jecxz
insl
xchg
pop
test
and
lcall
pop
pop
out
mov
arpl
lcall
adc
sub
xor
xor
mov
mov
pop
mov
inc
stc
add
lret
out
fsubr
bswap
add
xchg
ret
int3
cli
loope
mov
pop
pop
jnp
ss
jnp
sub
aaa
or
and
pop
fidivrs
inc
ja
xor
shl
out
pop
dec
std
lock
push
aaa
mov
sbb
daa
into
sbb
push
and
insb
or
dec
je
and
and
xor
mov
fldcw
test
cmp
mov
subl
jle
fistpl
popa
mov
dec
cmp
xchg
out
pop
insl
test
add
adc
loop
push
sub
sub
mov
sbb
mov
fsubrp
mov
pop
adc
int
cli
pushf
clc
testb
or
in
out
dec
popf
cwtl
push
jno
xchg
addb
data16
hlt
pop
js
adc
imul
inc
mov
enter
xchg
xor
mov
test
or
imull
popa
xchg
mov
push
mov
inc
insb
xchg
and
sbb
nop
lods
or
push
adc
add
outsl
fstps
mov
call
in
pop
jbe
test
divb
pop
add
mov
stos
jae
or
rol
xor
loop
fucom
or
push
into
cmp
stos
shl
sub
inc
lcall
sbb
mov
sbb
adc
sbb
cmp
jl
mov
cli
push
test
pop
subl
and
ljmp
cmc
jmp
scas
je
subb
sbb
fsubrl
pop
lds
cmp
mov
inc
cmovge
gs
cmp
lret
inc
fldz
sbb
push
shlb
mov
nop
mov
imul
rorb
sarb
sbb
scas
cmp
in
mov
adcb
cltd
cmp
and
aam
mov
jo
shll
repz
cwtl
pusha
or
rcrl
aam
out
andl
sub
imul
push
fs
push
aas
mov
jl
and
subl
and
jmp
andl
aam
push
or
adc
dec
add
repz
inc
and
stos
pusha
and
rclb
cmp
shll
cmp
xor
mov
es
push
idivl
mov
pop
cli
jno
xor
fbstp
stos
clc
arpl
movsl
and
movsb
add
jecxz
dec
lds
adc
scas
pop
adc
pop
inc
stc
xorb
test
ficoml
dec
lock
addr16
out
aas
push
mov
ja
or
jg
jb
jmp
inc
pop
sub
outsl
movsb
pop
inc
dec
push
lahf
sub
jne
jg
je
dec
jns
xor
ret
hlt
sub
add
lods
mov
icebp
push
popf
xchg
mov
fcompl
add
lock
pop
arpl
fisubrs
jne
test
bound
scas
mov
inc
popf
addb
push
mov
jp
inc
mov
fidivrs
outsb
lods
and
inc
cmp
jmp
inc
pusha
popa
loope
test
shll
shlb
aaa
sbb
adc
hlt
mov
or
jbe
ljmp
xor
rorl
mov
lret
jp
inc
xchg
cmpsb
data16
cltd
ret
decl
sbbb
int
jne
or
pop
popf
outsb
pushf
mov
mov
mov
sub
cmpb
and
jp
pop
or
pop
push
pop
fnsave
iret
mov
leave
pop
es
or
lea
jnp
sbb
aaa
fidivs
adc
mov
jo
dec
xchg
xchg
push
dec
jb
lods
mov
or
cmp
js
jo
cmp
out
inc
xlat
mov
mov
sbbl
xchg
clc
jno
and
ds
rcrl
cmp
sti
inc
loope
inc
int3
adc
add
adc
pop
and
inc
jno
and
push
add
insb
push
sub
hlt
out
push
loop
arpl
push
lock
and
push
in
mov
out
cmpsl
nop
rol
aas
fwait
push
jno
mov
mov
lret
mov
pop
mov
xchg
mov
mov
dec
jle
xor
mov
sbb
jmp
js
fdivs
clc
fbld
mov
xchg
and
mov
popf
push
out
dec
fldl
mov
inc
fdivrl
loopne
xchg
mov
test
int
cmp
gs
lea
or
mov
cmp
push
jb
insb
popa
xchg
mov
push
or
xchg
cmpsl
cmp
addr16
pop
nop
aad
sbb
mov
addb
rcl
cmpsl
or
xchg
mov
stc
pop
inc
adc
xchg
out
and
imul
gs
fnstcw
sbb
and
pop
pushf
fnstsw
pop
dec
dec
sub
xor
outsb
mov
jge
xorb
das
loop
loope
add
clc
leave
es
and
jno
cmp
hlt
fists
adc
sub
je
hlt
mov
add
xchg
iret
push
cmp
addr16
cmp
cmp
cmp
pushf
push
ss
pop
call
mov
fwait
sbb
in
sub
mov
out
jl
jg
sbb
jb
inc
inc
jnp
pop
lods
xor
mov
or
pop
out
jmp
pop
lret
cmpsb
xor
gs
ret
xchg
imull
mov
pop
iret
or
xlat
pop
jmp
push
lock
idivb
iret
ljmp
push
mov
xchg
pop
push
dec
push
mov
inc
rol
enter
pop
pop
or
cltd
ret
repnz
call
or
adc
imull
cltd
xchg
cli
lds
push
adc
or
and
sbb
cmpsb
jno
and
outsb
sub
push
lcall
lea
je
cmc
jne
xchg
push
dec
xor
pop
mov
pop
fdivs
xchg
lock
sahf
into
and
js
enter
stc
cmp
jmp
dec
mov
sub
pop
sbb
test
add
xchg
popf
aad
stos
or
notl
cmpsb
push
xor
mov
cli
aad
and
test
jl
xchg
jns
leave
pop
fcompl
and
scas
add
ficoms
ss
sbb
fs
push
out
int
fld
fnsave
push
mov
js
shrl
or
out
push
loop
inc
dec
inc
xchg
sub
pusha
mov
pop
and
add
jbe
pop
adc
out
inc
add
push
idivb
pop
int3
mov
fdivl
dec
pop
imul
adc
out
pop
clc
xor
jbe
mov
mov
in
repz
and
ss
cltd
inc
add
rcrb
in
inc
jne
jmp
or
push
adc
push
es
lea
jae
test
push
and
loop
int3
jp
mov
xor
push
lret
sub
call
ljmp
inc
adc
repnz
lcall
repz
push
insb
adc
adcb
xchg
clc
in
sbb
mov
and
sub
test
bound
lods
fsub
push
shlb
add
cli
andl
add
add
xchg
popa
nop
and
or
inc
popa
dec
xchg
mov
cmp
dec
push
adc
cmp
sub
gs
xchg
outsb
jbe
cmp
ja
aaa
push
cli
lret
and
repnz
ds
mov
jle
xchg
test
stos
jae
pop
mov
pop
pop
arpl
cmc
je
mov
xchg
xchg
push
lcall
or
int3
rorb
dec
fdivrl
cmp
adc
hlt
dec
clc
test
aaa
mov
or
into
aad
sub
aam
lea
lods
shll
repnz
and
xchg
jl
jns
cli
ret
push
mov
sbb
cmp
out
bound
aad
dec
xchg
pop
lock
stos
jp
push
sbb
mov
dec
daa
push
pop
mov
xchg
test
mov
in
mov
pop
out
or
rcrl
ljmp
dec
sub
mov
adc
mov
push
dec
mov
add
dec
pop
movl
xchg
imul
lock
mov
fstl
inc
sbb
adc
adc
cmp
sbb
jns
pop
pop
bound
lods
push
pop
add
inc
jl
push
sarb
bound
pop
jle
dec
mov
scas
fmulp
scas
mov
sub
xor
orl
fmull
jle
mov
fldt
add
jo
in
inc
jns
shll
inc
stc
dec
stos
and
push
push
xchg
xchg
stc
sub
es
loop
push
outsb
aaa
stos
ret
lea
add
dec
pop
or
popa
loope
pop
cli
mov
cmp
push
clc
push
or
out
or
rcll
xchg
sub
push
enter
adc
pop
or
sub
dec
mov
insb
data16
dec
hlt
popa
jnp
mov
je
sub
and
repnz
dec
xor
mov
nop
xor
aas
lea
andl
sarb
int3
adc
push
bound
shl
outsb
cmp
and
cmp
and
addr16
mov
movsb
dec
or
lock
inc
fcomp
inc
push
aaa
dec
push
dec
mov
push
or
xor
jle
test
mov
mov
scas
repnz
and
outsb
rdmsr
mov
mov
aad
push
mov
ds
mov
xor
data16
sti
imul
outsl
mov
mov
add
cmpsl
cmp
xchg
mov
pop
dec
dec
jbe
xchg
xchg
and
stos
into
xchg
inc
pushf
rcl
std
cmp
mov
inc
adc
cmp
lahf
repnz
sub
and
pop
adc
cld
push
pop
jo
pushf
jnp
stos
mov
mov
jnp
insl
insl
push
sub
clc
inc
adc
jb
repnz
dec
ds
dec
out
sarb
add
xchg
movswl
and
push
decb
add
scas
imul
cmp
jns
cmp
push
pop
sub
xchg
jbe
push
push
dec
sub
sti
mov
mov
xor
pusha
xor
push
xor
dec
mov
repnz
mov
fidivs
aaa
cmpb
mov
and
mov
fsubrl
sub
iret
adc
pop
and
add
loope
inc
ljmp
shrl
ja
stos
fimull
xchg
out
and
mov
cmovle
ds
arpl
xchg
inc
fadds
pushf
movl
mov
ss
xor
inc
pushl
cltd
dec
and
lret
sub
inc
jae
mov
push
jge
push
cmpsb
js
sbb
mov
sti
scas
cmp
out
test
mov
ss
bound
ficoms
cld
call
xchg
aaa
pslld
pop
or
xchg
adc
inc
int
and
inc
mov
out
inc
ret
stc
fisubrl
cmp
mov
mov
push
mov
push
inc
sub
subl
dec
pushf
rcll
xchg
fdivr
dec
mov
movl
or
cmp
push
xor
sub
xchg
aad
imul
aaa
call
mov
cltd
gs
sbbb
sub
jno
sbb
ja
jmp
repnz
loope
mov
in
fs
scas
dec
ror
xchg
cmp
pop
addl
sar
out
adc
imul
cmp
push
jmp
enter
xor
lds
add
sarl
push
lds
rolb
test
lds
es
xlat
shrb
xor
pop
push
and
enter
sahf
mov
pop
xchg
xor
push
fwait
pusha
lods
add
or
jns
iret
sbb
add
push
loop
js
sub
inc
div
adc
stos
pop
cltd
fstps
add
or
arpl
decb
sbb
call
test
sub
fisttpll
inc
mov
pop
mov
call
or
loopne
rolb
mov
push
xor
out
loopne
jo
test
aas
inc
mov
mov
scas
cwtl
daa
mov
ror
frstor
out
xchg
push
adc
sub
cmp
jecxz
cmc
ja
jl
xor
jns
stos
pop
pushf
pop
test
popa
inc
sbb
sbb
mov
loop
insb
mov
insb
push
jns
mov
lret
adc
jo
hlt
mulb
or
xchg
leave
xor
or
jmp
aam
cmp
mov
out
adc
sub
outsb
nop
clc
rcl
adc
mov
shll
movsl
mov
push
inc
das
popf
xlat
add
ja
dec
jne
pop
mov
mov
or
jno
cli
divb
das
xchg
enter
inc
ja
ret
shlb
and
sub
jo
repz
cld
mov
jo
insl
jmp
cmp
call
aad
adc
aad
nop
dec
test
int3
cmp
ret
arpl
add
jb
push
cmp
in
xor
dec
orl
hlt
mov
inc
sbb
pop
and
dec
and
sbb
jns
xorl
hlt
cs
test
cmp
movsl
mov
lods
jo
adcb
ret
cli
mov
mov
test
pop
lock
dec
cld
mov
je
lahf
daa
imul
outsb
call
pop
mov
loopne
add
outsl
iret
popa
jns
loopne
pushf
aas
jne
popf
push
lahf
dec
sarb
pop
jbe
pop
lea
jmp
lahf
jp
clc
mov
shlb
roll
xchg
push
jecxz
xor
popa
or
xchg
cmp
fs
mov
push
or
push
xchg
repnz
imul
lret
inc
dec
addr16
addr16
lds
ds
cmp
cli
mov
das
repz
repz
push
stos
icebp
mov
daa
jno
mov
cwtl
sahf
push
pop
dec
xor
sub
cmp
and
fadd
jne
jl
mov
pop
push
addps
pop
insl
pop
mov
xchg
jne
jmp
inc
loope
mov
mov
dec
dec
in
ret
push
push
int3
std
movsl
push
cmpsb
pop
out
mov
pop
out
push
mov
dec
insl
fimuls
test
enter
mov
jecxz
movsl
les
pop
jns
adc
add
xchg
xor
mov
sbbl
inc
cmp
sub
add
sub
stos
inc
cld
push
leave
pop
pop
adc
xor
iret
pop
testb
aam
adc
mov
jp
mov
cmp
push
hlt
mov
cli
cmp
mov
daa
lods
sahf
mov
add
sbb
ss
push
push
sub
out
dec
or
sar
js
sbb
iret
jbe
stos
inc
or
mov
xor
sub
cwtl
lret
mov
add
mul
cmpsl
jl
mov
mov
enter
push
mov
in
adc
lret
rcll
cli
xchg
mov
and
xchg
add
scas
xchg
repnz
stos
and
sbb
push
xchg
xchg
stc
pop
pop
lcall
loop
out
aad
cwtl
movsl
nop
mov
int3
mov
rcl
inc
pop
xor
jge
test
pop
cmpsl
add
cli
or
out
inc
pushf
insb
inc
cli
hlt
icebp
adc
jl
nop
sti
cmpb
add
mov
jo
nop
ds
test
xlat
mov
ljmp
loop
fcom
mov
cmp
das
push
in
and
addb
ja
lods
aad
iret
movb
jecxz
sbb
ja
mov
aam
inc
xorb
mov
cmp
shr
out
mov
rolb
or
out
fsubs
pop
pop
lds
add
mov
and
cwtl
pop
add
jge
mov
icebp
jg
pop
mov
sti
sub
sub
out
sub
neg
mov
hlt
push
push
adcb
and
push
ss
dec
into
imul
fbld
shlb
jne
xchg
xchg
jle
movq
jge
xchg
roll
outsb
jg
stc
in
lds
mov
dec
mov
jnp
mov
movsb
cld
scas
or
jecxz
add
lret
aaa
daa
push
mov
addr16
push
adc
mov
fildll
movsb
leave
push
test
repnz
jmp
inc
fsubl
adc
push
add
jnp
mov
xchg
dec
loop
stc
insl
jns
jb
outsl
xchg
das
rcl
mov
outsb
rcrb
jge
sti
jno
fsubrs
dec
cs
and
pop
mov
js
mov
add
mov
out
inc
cmp
jp
add
or
inc
cmp
cmpsb
cmp
outsl
push
xor
mov
movsb
push
cmp
jge
aas
pushf
addr16
sbbb
mov
shrb
jne
ret
add
sbb
xchg
mov
xor
les
sub
and
push
dec
xlat
or
inc
std
ror
mov
in
pusha
test
jge
push
mov
dec
xchg
out
cmp
addb
mov
hlt
cmp
test
jns
pop
mov
push
lds
sahf
dec
or
jb
mov
dec
mov
push
inc
xor
pop
js
or
aas
leave
shrb
repz
in
pop
jl
aas
sbb
xchg
mov
inc
in
jge
inc
push
cmp
push
in
imul
aas
xchg
icebp
mov
repz
jnp
in
hlt
sub
add
jecxz
pop
adc
mov
sahf
test
outsl
jns
xor
mov
push
ljmp
push
out
mov
leave
add
pop
pop
xor
inc
lret
out
sbb
pop
loopne
arpl
add
aad
and
xchg
subl
jmp
add
and
sub
jle
xlat
push
mov
jle
nop
rcr
repnz
stos
push
add
xchg
cmpl
sti
jp
shr
dec
js
popf
xlat
push
sub
jmp
pushf
cli
aam
pop
stos
pop
fimull
stos
ret
mov
stos
fldcw
pop
clc
test
adc
test
hlt
scas
pusha
mov
pushf
out
sub
sub
mov
ret
inc
into
cmp
out
inc
cmp
les
bound
pop
or
loope
mov
sub
jg
and
pop
fildl
out
shl
pop
js
bound
addr16
jo
ljmp
bound
add
push
or
push
inc
movsl
sub
lea
hlt
jg
jae
rclb
push
pop
iret
and
pop
xor
sbb
fs
xchg
adc
enter
fdivl
icebp
xchg
add
push
lret
dec
and
int
mov
cmp
mov
cmpl
pop
and
xor
xor
sub
push
jp
cmp
shlb
iret
cmp
stos
mov
xor
shll
and
sub
loop
arpl
push
addr16
mov
and
roll
pushf
ret
arpl
fs
scas
push
gs
dec
pop
cmp
jbe
sub
adc
mov
mov
iret
push
and
push
jb
hlt
paddw
inc
mov
es
cmpsl
out
jmp
cwtl
cmp
inc
add
seto
mov
inc
dec
sbb
data16
push
push
xor
repz
add
nop
jo
mov
add
out
test
jge
shll
fidivs
and
mov
andl
imul
dec
ja
mov
into
inc
out
mov
in
and
clc
mov
daa
push
ljmp
mov
sbb
push
stc
sahf
add
jno
push
loopne
lea
dec
ret
in
addr16
adc
adc
addr16
inc
shrl
fwait
and
push
mov
rcll
add
int
mov
xchg
or
or
xchg
mov
jmp
jb
fldcw
cld
ret
test
xchg
xchg
rolb
mov
imul
xchg
iret
adc
xchg
adc
iret
mov
notl
call
sub
pop
sbb
xor
fisubl
sub
cmp
mov
dec
mov
dec
mov
ficompl
in
in
dec
mov
mov
mov
push
or
jae
lock
imul
push
stc
test
das
imull
arpl
pop
dec
cmp
dec
xor
mov
cmpsl
add
jo
fisubl
add
iret
pop
js
mov
addb
jae
pop
rolb
pusha
adc
movsb
push
out
xchg
sarl
nop
dec
and
jne
jp
and
xchg
cmp
cmpsl
test
xor
ret
add
test
test
jecxz
inc
inc
repnz
scas
or
add
movsb
data16
ljmp
cmpsl
jb
sti
ds
mov
mov
outsl
in
rorb
mov
adc
xor
mov
push
cltd
mov
pop
and
jnp
cmp
std
adc
mov
cmpl
mov
imul
fs
mov
outsb
dec
fsub
and
mov
mov
test
fsubrp
cmc
repnz
int
sarb
frstor
mov
add
or
gs
in
xor
lahf
mov
jo
cmc
les
and
sbbb
popf
sub
jno
test
jae
dec
enter
mov
test
pop
mov
push
stc
insl
adc
mulb
hlt
stc
mov
stos
xchg
jo
and
or
adc
sarb
dec
xchg
shl
adc
push
mov
mov
xchg
roll
icebp
xchg
dec
test
xor
mov
mov
mov
pop
sbb
xchg
dec
rcll
sub
mov
out
pop
add
push
mov
mov
and
inc
js
das
out
out
ficoml
cmpsl
adc
lahf
mov
push
movsb
mov
cmp
sub
and
or
jl
add
jge
inc
fndisi(8087
lret
xchg
test
mov
fdivl
mov
enter
xor
cmpsb
loopne
shll
push
xchg
cmc
push
mov
inc
rcll
cmp
inc
mov
sub
div
dec
mov
lcall
mov
pop
aam
or
xor
cmpsl
pcmpgtd
cmc
fs
adc
lahf
lret
sahf
notl
inc
aaa
or
push
int
mov
pop
jbe
jne
pop
cmp
and
fs
add
fimull
out
aam
test
jae
add
scas
sub
popf
dec
in
repnz
inc
cmpsl
inc
inc
lahf
push
jl
cwtl
stos
pop
stos
call
pop
ljmp
mov
xchg
jnp
cmp
mov
shl
lret
subb
xor
popa
dec
sub
xor
call
icebp
jbe
and
sbb
mov
adc
sub
xor
push
daa
add
enter
inc
jecxz
mov
xchg
rcrl
bound
cmpsl
into
push
sub
xchg
ds
int3
mov
pushf
mov
push
data16
in
sbb
pop
cmp
clc
mov
xchg
lret
cltd
lods
inc
aad
ss
daa
sahf
mov
add
lret
pop
sbb
fmuls
out
adc
stos
int
call
in
add
icebp
inc
mov
add
cmp
sub
out
push
cli
flds
dec
js
push
xor
imul
fnstcw
push
pop
pushf
jae
stos
sbb
sub
or
les
cmp
lods
stc
lret
mov
xchg
or
into
popf
andb
je
and
out
sbb
lds
inc
movsb
push
xor
xchg
or
fwait
js
cmpsb
xor
push
add
inc
lret
jl
insb
mov
data16
cltd
je
add
icebp
ja
rclb
cmp
dec
jbe
push
addr16
jle
jmp
call
cmp
loop
cli
dec
ss
cmp
cwtl
cmp
mov
int
add
repnz
sti
jae
enter
and
lods
inc
xlat
or
out
pushf
xchg
sub
out
cmp
add
pop
insb
ss
stos
scas
push
addr16
pop
shrl
sbb
jmp
test
push
sti
dec
sbb
cmc
pop
test
push
xchg
mov
or
jmp
mov
sti
cwtl
insb
sbb
dec
pop
xor
or
arpl
or
lcall
jb
cmc
jnp
std
push
and
cltd
xlat
loop
mov
inc
push
or
scas
arpl
or
hlt
pushf
std
or
push
push
adc
in
in
pop
xor
adc
sbb
xchg
lods
jl
mov
mov
rolb
cmp
out
sbb
pushf
and
pop
sub
pushf
shll
lret
test
pop
mov
sub
repz
aad
repz
jns
dec
lret
mov
pop
mov
mov
fmulp
pop
lret
pop
jae
fwait
test
push
sub
and
out
pop
dec
jo
insb
xchg
jae
aam
jle
adc
adc
cmp
leave
jge
iret
test
in
push
out
insl
push
adc
loope
bound
push
repnz
and
cmp
aam
rorb
rcrb
sub
mov
lods
mov
shl
subps
insb
addr16
pop
pusha
and
ror
loope
xchg
cmp
sbb
or
test
out
ret
rcr
inc
xchg
pop
jmp
and
outsb
in
and
dec
subb
add
aam
int
adcl
shl
loopne
jecxz
xor
pinsrw
in
xchg
cmpsl
fnstsw
movsb
push
push
jbe
cmp
into
js,pn
clc
cmp
add
pop
push
xor
repnz
mov
inc
jecxz
out
xor
imulb
fcom
inc
mov
sbb
adc
loopne
stc
dec
in
jb
fdivl
loopne
xchg
mov
mov
pop
popf
stc
in
hlt
cmp
repnz
aam
aas
scas
push
cmp
addr16
adc
push
sub
dec
push
int
jno,pn
js
orb
cmp
bound
ja
icebp
xchg
and
stos
sub
jnp
iret
inc
test
fdivrl
cmp
mov
push
xchg
add
or
sbb
sti
push
xor
jp
in
mov
xor
dec
int
inc
fdivr
pop
es
mov
jb
cmpsl
mov
iret
pop
mov
sbb
sbb
push
push
dec
sti
xchg
test
inc
out
and
hlt
add
inc
xor
cmp
shll
xchg
int3
push
aam
jg
pop
dec
rclb
in
rcll
and
push
sub
or
call
xlat
xor
sbb
xor
std
pop
mov
mov
and
outsl
push
dec
cmp
xchg
lret
shrb
mov
and
mov
cltd
adc
pushf
mov
lock
aam
inc
xlat
test
jmp
shlb
ret
sub
pushf
adc
pop
add
cmp
repnz
adc
stc
pop
push
js
mov
in
stos
sahf
push
push
or
int3
inc
push
or
inc
push
push
fstps
cmpl
jo
repnz
or
pushf
loope
fs
jmp
je
test
subb
xchg
pop
mov
pop
arpl
cmpsb
adc
roll
scas
mov
sub
mov
pop
repz
jle
xchg
mov
sti
loope
popf
je
xchg
xchg
push
nop
popa
ret
jle
in
dec
in
fcomps
dec
aad
int3
ret
movsb
jae
mov
shll
push
imul
pop
add
jmp
out
fisttpl
xchg
xor
or
stos
cli
dec
and
pop
pop
add
cltd
cmp
ror
push
cmp
pop
fsubrl
mov
rcl
stc
jl
adc
cmp
cmp
pop
cltd
or
lar
ret
scas
push
imul
inc
inc
out
ja
icebp
gs
pop
jae
add
push
sarb
sbb
cs
aad
fsubl
addl
lahf
pop
adc
cmp
les
sbb
pop
ret
pushw
and
out
mov
lea
mov
cmp
insl
mov
cmc
add
rclb
dec
dec
mov
fldt
leave
test
and
jp
mov
or
jle
adc
sbb
or
iret
mov
add
inc
das
pop
int
insl
jbe
and
sub
fsubrl
arpl
std
sbb
mov
mov
mov
mov
xchg
mov
stos
add
iret
mov
cs
iret
fildll
xchg
dec
pop
repnz
jno
int
add
pop
jno
in
and
into
cmp
push
xor
dec
pop
xlat
movsl
push
rcrb
inc
ss
mov
paddsb
sbb
insl
mov
lods
ss
sub
mov
sbb
inc
and
inc
sbb
test
and
test
fsubr
pusha
cltd
jle
dec
xor
mov
xchg
push
and
test
scas
aas
inc
adc
xchg
mov
mov
or
sbbl
cwtl
cmp
in
test
cld
adc
jmp
imul
xor
cmc
mov
nop
jl
aam
popa
ficomps
mov
cmpsb
mov
lcall
jns
mov
lcall
ret
and
add
dec
inc
lret
add
or
pop
push
sbb
ret
scas
fistps
mov
xor
mov
enter
pop
nop
push
pop
aam
ljmp
mov
outsb
pop
inc
insb
pop
pushf
fidivrs
sti
popl
mov
inc
out
lds
cmp
cltd
jge
fs
xchg
xchg
cltd
mov
xor
sbb
fdivr
xlat
dec
outsl
xorb
mulb
adc
pop
pushf
les
xor
fnsave
xor
mov
mov
jecxz
mov
pop
loope
inc
int
fst
in
icebp
dec
xchg
cli
in
lahf
jnp
icebp
mov
or
subl
jge
jp
jo
push
sub
mov
mov
pusha
popa
rcr
call
inc
pop
dec
cmp
xchg
xchg
das
test
mov
lcall
mov
dec
cmpsb
scas
cmpl
imul
mov
out
testl
jo
mov
cmp
rorb
test
outsl
inc
je
xchg
push
pop
dec
add
pop
std
adc
scas
push
nop
dec
iret
mov
nop
cwtl
je
aas
shrb
fwait
inc
jae
loope
popf
dec
adc
push
fs
gs
cmp
fcmovnb
cmpsb
testb
int
push
loopne
or
jno
pop
pop
dec
xchg
in
mov
mov
arpl
mov
push
inc
add
fs
mov
frstor
and
and
ss
pop
or
out
add
subb
cmp
adc
jnp
xor
in
jnp
jmp
test
mov
andb
ja
enter
add
das
fs
xor
adc
and
sub
loopne
inc
cmp
add
inc
fildll
inc
aaa
fsubrl
sbb
nop
repnz
push
int3
pminub
insb
adc
jbe
pop
andb
insl
insb
std
xor
cld
push
cmp
xor
adc
add
movsb
add
fsubrl
sbb
insl
lret
int
jno
adc
lahf
scas
repnz
ja
or
and
in
repnz
jns
fcoms
push
aad
je
rcll
pusha
or
sahf
jle
repnz
push
mov
repnz
add
jbe
dec
sbb
pop
out
dec
movsb
ret
or
js
push
sub
jb
inc
out
adc
jae
sub
xor
lods
popa
mov
push
je
cmp
xlat
dec
fisubs
xchg
add
sbb
xchg
enter
jno
cltd
xor
mov
inc
je
testl
adc
int
adc
enter
cmp
pop
cs
test
dec
mov
jmp
push
xchg
inc
aam
fwait
mov
daa
sbb
xchg
hlt
testl
or
jge
pop
jbe
pop
je
cmp
mov
pop
cmpsl
inc
xchg
dec
stc
movb
mov
mov
sbbl
push
sub
test
or
adc
cli
rcll
sub
ja
je
mov
sbb
out
in
jno
pop
jmp
inc
mov
sub
sbb
or
pop
divl
scas
fildll
dec
pop
inc
imul
xor
outsl
fistl
xor
nop
adc
repz
test
mov
sahf
push
pop
pop
xchg
pop
mov
lea
mov
push
movsl
jno
rcl
movsb
mov
ret
mov
pop
jle
mov
xchg
jg
jns
or
push
in
sarl
sub
enter
xchg
adc
cmp
and
xlat
ds
loope
popf
call
dec
nop
and
mov
mov
xchg
lret
xchg
iret
mov
push
jmp
shrl
mov
bound
lods
dec
test
jo
test
pop
in
ror
in
pop
jb
xchg
jge
cmc
pop
push
std
inc
js
sbb
xlat
xchg
mov
out
pop
mov
ljmp
sahf
lods
dec
sub
mov
fs
lods
or
adc
adc
cli
xor
int3
imul
pop
scas
pusha
mov
std
mov
aas
mov
mov
movsb
dec
pop
push
jge
sahf
pop
sub
xor
loop
jnp
fwait
test
jnp
pop
sbb
movsl
cmp
bound
into
clc
pop
shlb
leave
inc
mov
testl
xlat
data16
cwtl
sbb
push
ds
inc
xchg
inc
movsl
ror
data16
push
xchg
pop
mov
adc
push
in
ret
fs
inc
and
pop
add
outsb
dec
loopne
aas
mov
test
pop
mov
inc
pop
ljmp
xchg
das
sub
mov
mov
dec
int3
jg
pusha
mov
dec
ja
popa
pop
jns
xor
xor
sbb
sbb
mov
xchg
sub
cltd
and
cmpsl
mov
xlat
mov
jne
and
scas
popa
inc
mov
in
xor
negb
arpl
adc
aam
testb
jg
fwait
xchg
push
xor
test
sbbl
cli
jne
stos
je
fisubs
mov
pusha
pop
push
or
idivb
and
mov
jae
adc
add
test
faddl
loope
movsl
cmp
and
cmp
imul
ret
xchg
pop
mov
push
idivb
aas
mov
xor
and
fwait
mov
jae
dec
add
adc
jno
and
aas
test
mov
mov
sarl
jecxz
xchg
inc
adc
pusha
imul
or
pop
dec
sbb
add
xchg
je
cmc
add
pop
mov
pandn
ficomps
test
cmpsl
jecxz
aam
jl
mov
cld
mov
gs
negl
inc
and
adc
xchg
nop
mov
mov
xchg
inc
loop
mov
sub
cmp
daa
xor
shll
repnz
cwtl
xchg
push
cmp
mov
pop
add
jg
mov
loopne
jmp
es
mov
add
cltd
xchg
push
test
out
mov
or
iret
stos
add
xor
scas
add
sbb
jnp
mov
mov
and
pushf
xorl
jbe
mov
test
cmp
pop
into
pop
in
lret
icebp
pop
decl
mov
lea
pop
sub
pop
mov
mov
jo
pop
dec
sub
fdivl
shll
push
inc
inc
pushf
and
pop
data16
fucom
in
inc
jg
insb
stc
dec
insb
aad
or
mov
or
test
inc
push
js
repnz
or
test
mov
into
movsl
in
test
dec
ja
sub
inc
cli
mov
jecxz
shl
mov
and
popf
lock
pop
inc
icebp
mov
pushf
or
sub
xchg
and
lock
and
addl
push
pop
in
jl
bnd
sub
lds
mov
xchg
loope
xchg
dec
cmp
xor
out
lea
mov
leave
sub
out
inc
xchg
jb
movsb
mov
imul
mov
cmp
sub
andb
leave
mov
divl
push
mov
jo
jb
mov
sub
jnp
imul
dec
fpatan
and
or
cmc
or
icebp
mov
sti
jle
aaa
bnd
test
js
ljmp
dec
pop
mov
or
pop
add
xchg
rcrb
sub
sbb
xchg
jg
imul
repnz
mov
inc
lahf
sti
scas
movsl
dec
jno
or
dec
pop
sti
push
inc
jae
or
sbb
mov
in
jne
das
jae
mov
or
inc
pop
xchg
loop
cwtl
lea
movsb
out
jg
insb
mov
pusha
sahf
jge
dec
lret
arpl
and
int3
pop
cmp
and
fildll
and
daa
jns
mov
inc
or
pop
or
and
repnz
mov
sbb
dec
inc
fcoms
fstpt
fcomps
cmp
xchg
xor
lock
sarl
roll
mov
aaa
insl
fstl
icebp
out
lds
lods
xchg
mov
mov
movq
ret
fwait
int
push
mov
xor
repnz
imul
inc
dec
sbb
mov
jge
mov
sub
je
iret
adc
movl
mov
cli
add
push
add
inc
lods
pop
lods
push
xchg
mov
into
movsl
adc
cmpsl
cwtl
xchg
and
xchg
cwtl
dec
orl
out
mul
arpl
jmp
lret
xor
pop
push
mov
and
lds
insb
sbb
jno
iret
and
push
out
pop
xchg
mov
sbb
test
wbinvd
bound
int3
add
mov
cmp
mov
inc
mov
adc
cwtl
int3
mov
fiaddl
mov
sti
loope
and
jnp
sahf
out
pop
push
mov
xchg
inc
test
sub
mov
push
adc
out
shll
pop
dec
lret
loopne
adc
js
addb
xchg
push
xcrypt-cbc
cmpsl
xchg
mov
sarl
jmp
or
jno
mov
add
mov
inc
nop
lret
fisttpl
outsl
add
fsubp
jns
jmp
into
enter
pushf
push
lea
pop
inc
pop
int3
aas
and
stos
add
jg
cwtl
ror
movsl
fnstenvs
insl
cmp
xchg
dec
or
push
arpl
fsubs
jl
push
clc
cs
adc
inc
enter
rcll
data16
test
sbb
pop
sbb
mov
add
repz
sbb
das
roll
inc
and
sub
push
and
or
lods
dec
repnz
in
and
dec
stos
cmp
inc
je
mov
xor
scas
pusha
loopne
jb
or
out
hlt
fdivp
mov
xor
dec
jno
fwait
mov
xor
xchg
sbb
cmc
sbbl
loope
leave
xor
sar
and
fsubrl
mov
inc
mov
sbb
mov
sysexit
sub
movsl
pop
mov
repz
ret
jg
out
jae
frstor
scas
dec
mov
daa
sbb
xchg
flds
stos
push
push
and
dec
mov
int3
add
adc
pop
hlt
aas
int3
addb
sbb
mov
in
push
xor
fstpl
hlt
fldcw
filds
lret
dec
xor
mov
cmpsl
loopne
xor
test
leave
cmp
outsb
push
loopne
pop
jne
cmp
pop
jp
test
adc
lret
js
sbb
sbb
sbb
inc
jp
mov
add
cmp
push
stos
sbb
hlt
out
cmp
frstor
mov
in
jl
inc
inc
fxch
jg
gs
jns
out
add
adc
in
shrb
stos
xor
adc
jecxz
pop
repz
inc
or
out
sbb
pushf
and
mul
das
int
push
and
push
inc
fdivrp
daa
les
out
adcb
cld
adc
mov
cmp
xchg
sbb
mov
icebp
adc
sub
icebp
pushf
mov
pop
add
mov
dec
sbb
push
ds
mov
in
pushf
push
test
jnp
dec
rcl
mul
ss
jo
jmp
stos
or
xchg
hlt
into
dec
add
test
fsubl
jp
dec
repnz
stos
xor
addr16
jae
add
jae
test
xchg
daa
into
iret
mov
inc
clc
inc
popa
xor
dec
pop
jb
mov
xor
xchg
sub
cwtl
fwait
or
mov
mov
out
and
push
add
out
cmp
pop
fstl
outsl
mov
inc
push
push
pop
mov
xor
ljmp
pop
stos
and
daa
xchg
mov
inc
mov
es
push
inc
or
ljmp
jecxz
mov
and
je
xchg
dec
mov
sbb
push
xchg
sahf
add
mov
out
aam
and
mov
mov
pop
addr16
inc
out
mov
inc
push
loope
add
or
or
sahf
sub
divb
mov
pusha
scas
lret
adcb
fwait
pop
pusha
test
mov
push
jge
mov
cmp
daa
xor
js
test
jle
or
cmc
and
lret
jae
add
or
adc
push
or
mov
push
fwait
mov
lret
repnz
pushf
loop
outsb
mov
cmpsl
mov
adc
mull
popa
xlat
cld
pop
in
pop
icebp
xchg
jne
jb
mov
mov
cwtl
out
sarl
pusha
faddl
stc
push
rclb
inc
mov
jecxz
fwait
pop
imul
dec
mov
pop
push
ja
jmp
enter
ss
xorl
je
push
cli
insl
sub
cmc
loopne
pop
mov
test
jae
pop
outsl
inc
aaa
mov
mov
shll
add
mov
insl
orb
push
lret
mov
jg
push
outsl
popf
cld
stos
sbb
bound
int3
orl
mov
xchg
lock
cli
xlat
pop
stc
sub
mov
jmp
imul
out
adc
in
jge
push
push
cmc
push
sbb
adc
lods
fbld
add
fisttpl
cmp
ljmp
and
pop
xor
daa
mov
mov
mov
cs
and
push
stos
adc
pop
sbb
lcall
cmp
pop
mov
fldt
cmp
and
mov
les
mov
or
loop
test
rol
mov
fldl
push
sbb
sub
add
out
jp
lods
in
les
dec
das
dec
pop
jne
xor
push
es
cmpsl
mov
sbb
ljmp
sahf
pop
int3
jno
sbb
push
push
xchg
jbe
mov
mov
in
mov
jl
mov
ret
xchg
cmp
mov
mov
adc
push
das
xor
sub
pop
inc
xor
cwtl
push
jmp
jmp
aad
fwait
xor
adc
inc
adc
lahf
testb
outsl
xchg
inc
insl
mov
xchg
pop
adc
jne
int3
nop
mov
fcmovb
rcrb
jg
dec
push
aam
rol
inc
pop
addr16
push
ja
pop
repnz
add
mov
aas
repnz
push
test
dec
pop
pop
sub
decb
sbb
loop
dec
cs
cs
push
int
dec
ljmp
dec
mov
imull
or
jmp
flds
aaa
scas
mov
or
sbb
jl
mov
addr16
fxch
sub
jg
push
mov
dec
pushw
aam
cmp
test
into
jge
or
dec
out
icebp
mov
imul
mulb
rep
vunpcklps
loopne
arpl
test
enter
arpl
xor
mov
fistpl
jmp
scas
add
or
pusha
lea
shlb
subl
xlat
inc
dec
in
xchg
dec
jge
pop
push
dec
mov
ljmp
sbb
clc
adc
das
cwtl
fnsave
dec
inc
rcl
inc
cli
pusha
push
xchg
cltd
pop
mov
xchg
popf
nop
adc
pop
add
mov
cmp
adc
or
mov
data16
testb
adc
add
inc
test
jo
loop
enter
imul
or
mov
test
dec
sbb
repz
jae
jae
cld
jge
cli
xor
mov
push
shll
pop
imul
js
div
push
repz
push
jmp
cwtl
xchg
ja
cmp
cmp
adc
std
fld
lea
pop
inc
sahf
inc
stos
out
adc
pop
adc
cmpsb
sbb
sbb
jno
loopne
fnsave
sub
xchg
and
pop
cmpl
jmp
imul
cmp
cmp
push
ja
aas
dec
mov
aam
jb
fdivl
adc
jne
and
mov
fwait
movsb
mov
dec
sub
in
imul
dec
cs
mov
lea
adc
and
inc
xor
sub
pop
adc
inc
push
stc
cmpl
data16
test
sbb
pop
jbe
leave
xor
or
lgs
pushf
mov
mov
lea
cmp
inc
xchg
mov
dec
outsb
mov
bound
lret
pusha
or
xchg
mov
pop
jno
mov
add
pushf
in
movsb
mov
dec
pop
and
repz
jmp
enter
dec
mov
xor
sbb
movsl
sub
pop
dec
pusha
or
push
into
cmc
and
fsubl
cld
adc
inc
repz
in
sub
out
cmp
xchg
movsb
pop
call
jno
mov
jb
popf
mov
pop
push
inc
stc
repnz
fs
pop
mov
jge
adc
mov
imul
inc
int3
lret
pop
cmpsb
mov
add
imul
inc
movsl
call
pop
stc
int3
xor
mov
push
ds
lcall
add
or
lds
fnop
into
sbb
inc
ja
jmp
pop
xchg
rcrl
cmp
adc
sbb
cmp
and
jg
scas
push
lcall
adc
or
sbb
mov
cmp
fstpt
sub
js
inc
xacquire
sbb
leave
cmpsl
mov
xchg
sub
out
imul
sarb
jns
push
xchg
inc
test
inc
fcomi
and
mov
stos
lret
fcomps
push
test
pop
std
mov
mov
sbb
rorl
mov
adc
xchg
push
jb
xchg
jae
lds
cmc
jno
aas
lods
test
ja
das
mov
lods
bound
dec
fisubrs
ljmp
or
repz
add
jge
or
in
dec
or
pop
mov
dec
cmp
fwait
in
in
xchg
push
mov
dec
lea
filds
adc
test
shll
es
popf
xchg
mov
lcall
scas
adcb
mov
subb
arpl
mov
rcl
sub
js
adc
pop
orb
outsl
inc
cmp
and
inc
xor
jecxz
mov
cwtl
dec
negl
push
jge
xchg
imul
push
data16
cmp
lcall
mov
push
in
jbe
loop
jle
lahf
repz
push
pop
cltd
or
adc
stos
outsb
ret
cmp
cmc
out
pop
and
aam
sbb
xchg
rolb
xchg
fnstcw
sbb
sbb
dec
dec
mov
test
inc
jle
push
xchg
loopne
mov
xchg
mov
clc
rcll
cmc
int3
test
jne
lea
cmp
test
repz
outsl
cld
fadd
ss
idivb
rcl
jo
inc
sub
cwtl
cmpsb
dec
iret
lock
cmp
dec
pop
inc
mov
inc
imul
push
xor
adcb
jecxz
popa
adc
cltd
icebp
sbb
mov
repz
jne
cmp
cmp
push
xor
cmpsb
pop
in
jl
mov
push
sub
dec
mov
outsb
or
cmp
movsl
mov
int3
call
mov
jo
adc
out
pop
mov
sti
mov
mov
shl
fnstcw
call
loop
lret
sbb
xchg
add
popf
push
xor
push
jle
jge,pn
mov
or
dec
std
fwait
test
and
mov
cmc
push
and
int
xchg
push
mov
add
mov
lahf
add
dec
out
cmp
fmul
mov
out
xor
jecxz
cld
out
shll
adc
or
adc
push
xor
and
cmp
xchg
pop
jp
fdivrp
jno
bnd
cli
xchg
jbe
bound
js
mov
fsubrp
mov
cmp
imull
mov
xor
out
das
push
jb
fbld
mov
push
jecxz
inc
xchg
push
push
adc
dec
xchg
and
test
inc
flds
cs
mov
fwait
std
cs
stos
mov
lock
cltd
inc
push
iret
cmp
xor
dec
fmull
adc
push
mov
fimull
sbb
les
orps
inc
push
jne
add
dec
in
add
or
and
add
inc
andl
stos
les
in
mov
push
xor
js
jp
jo
js
cmc
outsl
sbb
adc
inc
bound
shlb
sbb
lods
push
pop
fisttpl
sub
and
xchg
xor
std
stos
loope
cmc
in
cmc
orb
lods
aaa
movsb
sbb
lock
out
fidivs
mov
neg
mov
test
out
leave
xchg
xor
mov
adc
jb
inc
fwait
data16
pop
xchg
or
and
jnp
icebp
mov
cltd
ret
ljmp
fldt
mov
sbb
cmp
push
mov
mov
clc
cltd
inc
xchg
mov
sub
inc
pop
cmp
dec
lahf
jp
cwtl
insb
jmp
and
push
imul
xor
pop
xchg
xchg
and
sbb
pop
mov
push
cmp
xchg
lds
enter
inc
insl
outsl
xlat
addr16
orl
cmpsl
pop
inc
jle
subl
push
in
push
sbb
pop
push
xorb
into
jg
lea
and
scas
mov
pop
dec
add
jbe
dec
fsubs
test
lock
add
adc
jns
cmc
outsb
enter
jge
arpl
sti
jo
loope
and
iret
cmpsl
pop
mov
sbb
cmc
test
push
fmul
add
mov
add
cs
das
cmpb
leave
pop
push
pop
aas
jnp
movsb
jmp
adc
inc
push
or
shufps
jne
cmc
adc
repnz
or
push
fimuls
fdiv
sbb
aaa
mov
push
cmp
xchg
popf
inc
lcall
cltd
adc
iret
sbb
movsl
aas
es
enter
sbb
cmp
testb
andb
add
loope
and
call
adc
pop
mov
cmp
mov
loopne
psrlw
sbb
frstor
mov
in
scas
cmp
sbb
in
sub
insl
cmp
lret
mov
sub
loopne
popf
pop
pop
lods
in
add
xchg
xchg
rorb
popf
cmp
cltd
popa
pop
fld
mov
imul
stos
insl
mov
xchg
aad
clc
cmp
cltd
idiv
mov
xchg
lock
scas
dec
mov
mov
daa
sub
xchg
push
dec
sbb
cmpb
popf
das
mov
in
xchg
mov
out
and
mov
cmp
mov
dec
mov
mov
inc
cmpsl
push
sbb
fs
lcall
repz
xchg
data16
dec
clc
push
scas
mov
add
mov
imul
dec
push
push
add
fcomps
cld
adc
xor
push
add
pop
lcall
fmull
rclb
int
adc
inc
xchg
cmp
mov
fisttpl
pop
push
mov
xor
cltd
int
push
and
imul
negb
out
push
mov
xchg
lods
insl
inc
or
cmpsb
hlt
nop
sarl
test
in
out
icebp
jmp
add
and
mov
and
in
test
inc
jns
push
daa
jb
in
pop
sti
mov
rcrl
add
stc
push
cmp
dec
xchg
and
gs
outsl
test
adc
push
dec
dec
outsl
stc
sub
arpl
in
pushf
mov
sahf
xor
sbb
dec
push
ficoms
enter
subb
push
cmp
pop
mov
loop
fdivrs
pop
cmc
jbe
sti
subb
loope
fmuls
jecxz
mull
ds
fbld
fistps
movsb
lods
push
shll
and
push
pop
and
pusha
call
out
les
mov
insb
xchg
repz
xchg
mov
lock
sub
insl
mov
mov
mov
mov
into
test
std
cmp
jmp
imul
adc
pop
adc
dec
cmp
imul
cld
cmpsl
cwtl
std
imul
jb
cmp
popf
xchg
adc
insb
popa
loope
sbb
jle
dec
lcall
jbe
mov
and
cmpsb
cmc
jae
sarb
xchg
dec
pop
xchg
das
insb
fsub
into
loope,pt
fcomip
jmp
popa
sbb
xor
int3
leave
das
or
fnstenv
xorb
mov
nop
inc
push
rcrb
jbe
add
hlt
and
daa
dec
lds
repnz
shlb
sbb
in
xchg
and
fnstsw
dec
mov
in
movsb
adc
or
xorb
push
sbb
sub
leave
add
hlt
cltd
daa
dec
sbb
stc
mov
std
out
sbb
lods
sbb
jb
mov
push
xlat
push
fucomip
dec
add
jmp
leave
lods
aad
popa
jl
stc
lods
and
je
mov
and
fdivrl
das
mov
and
stos
rclb
pop
fiadds
imul
push
fadd
loopne
rcl
dec
add
pop
sar
insb
nop
fnstcw
loopne
loope
fdivrl
mov
cmc
xchg
daa
das
jo
outsb
mov
cmp
mov
movsl
fwait
sbb
or
int3
out
pop
negl
xor
cwtl
lds
mov
loop
dec
jmp
bound
arpl
cmp
xchg
aas
mov
pop
test
ret
push
clc
fsubp
lea
mov
push
dec
sbb
jbe
cmp
xlat
sub
sbb
push
fimuls
pusha
addr16
cli
movsl
adc
outsb
and
dec
clc
lock
add
inc
out
in
cmpsl
mov
push
out
jne
mov
in
test
sbb
add
js
fs
inc
push
or
pop
push
incl
fucomip
test
out
pop
add
cmp
call
sbb
pop
mov
loop
into
jge
pop
cmp
fwait
hlt
nop
and
jns
cli
mov
dec
inc
jo
subb
repz
inc
sbbb
js
mov
cmp
stos
lret
mov
pushf
jg
pop
push
xchg
or
pop
shl
shll
or
sub
pop
shll
inc
ret
lock
aam
mov
push
popa
cmpsl
sbbl
orb
xchg
gs
mov
cmpl
or
or
nop
dec
aam
lret
sub
jns
loope
mov
jle
sbb
cmpsl
lds
push
mov
sub
xchg
xor
mov
repz
leave
pop
xchg
data16
daa
inc
jbe
rcrb
outsl
das
mov
int3
cmp
mov
clc
aaa
inc
push
mov
ljmp
fstpl
xor
cmp
mov
push
sbb
adc
pop
lods
stos
sbb
lds
enter
inc
mov
mov
mov
enter
xorb
aaa
jl
fmull
cmpsl
jl
les
xchg
push
daa
jno
divl
sbb
mov
das
add
xchg
push
nop
push
add
fsubrs
push
call
add
std
mov
inc
popa
pop
cmpsb
scas
cmp
imul
aam
ja
into
imulb
mov
push
hlt
leave
inc
popa
jmp
sbb
addb
xchg
jns
stc
inc
xchg
mov
sbb
xchg
ja
pop
sub
sti
lret
adc
loope
es
jecxz
imul
jl
jne
mov
shl
dec
sidtl
addb
test
loop
xchg
xorb
popa
sbb
out
xor
pop
lahf
mov
mov
and
lods
sbb
or
aad
out
xor
and
and
jmp
dec
js
jecxz
add
sbb
mov
sub
inc
add
adc
lods
in
jg
fstl
or
cmp
adc
cmpsb
pop
mov
iret
push
dec
addr16
push
enter
add
xor
std
jo
test
jmp
ja
push
mov
iret
xor
shlb
push
rclb
insl
mov
pop
cmp
out
ret
dec
inc
mov
popf
pop
fldcw
xchg
das
sbb
jnp
ror
and
test
dec
dec
mov
push
sbb
lahf
or
hlt
jl
mov
pop
aad
sbb
adc
add
popf
popl
inc
pushf
lret
xchg
repz
mov
lds
and
xlat
daa
dec
and
imul
insl
adc
lcall
ret
outsl
jb
icebp
lds
ftst
jl
lea
or
mov
pop
sbb
dec
pop
cwtl
or
dec
or
lods
cmp
push
jg
add
rol
pusha
pop
sbb
cltd
es
or
and
mov
inc
nop
jne
xchg
push
imul
inc
adcb
ljmp
mov
fstpl
cmp
and
movsl
decl
push
sub
gs
mov
sub
in
mov
mov
or
loop
add
mov
fidivl
pop
aas
int3
cmp
or
aam
sub
es
lcall
pop
dec
stc
mov
popf
xchg
repz
pop
out
xor
stos
pop
sarl
cli
or
xor
jae
jecxz
mov
cmpsb
call
loopne
mov
iret
adc
add
aas
dec
push
and
sbb
ljmp
pop
mov
cmp
ds
cwtl
cmp
jge
xchg
aad
xor
inc
xor
popa
push
push
loop
or
ret
in
hlt
cmp
push
cmc
pop
sub
mov
jbe
popf
cwtl
and
cld
adc
push
pop
out
pop
lods
sub
sub
lcall
add
in
or
and
sbb
shlb
insl
lret
cmp
jnp
mov
jns
mov
dec
push
mov
into
push
hlt
push
or
sbb
mov
mov
int
or
jno
xchg
sub
fdivrs
jge
push
and
and
aam
aam
or
lea
xchg
mov
pop
xlat
jae
loop
sti
xor
and
aad
sub
xchg
jbe
jmp
lea
test
push
inc
aaa
inc
pop
outsl
push
mov
mov
inc
test
cltd
insb
popa
inc
pusha
add
mov
jle
lock
sbb
xor
pop
adc
mov
adc
aad
push
xchg
rolb
jg
jle
mov
fisubrs
cmp
ficomps
lods
xchg
jae
and
dec
and
xor
aaa
cmpsb
mov
mov
iret
jecxz
pop
stos
xchg
push
cmp
inc
mov
jge
inc
divb
lods
shrb
cli
std
mov
and
mov
mov
cmp
andb
jle
mov
and
pop
xchg
xchg
xor
fstpt
loope
jmp
enter
mov
repnz
push
or
add
sub
out
mov
in
cld
dec
cmp
inc
bound
fnstsw
sub
cld
mov
js
lcall
pop
sub
xchg
pop
pop
xchg
ljmp
icebp
mov
faddl
jmp
fstl
pop
pop
and
mov
adcl
add
cmp
or
mov
xchg
in
lock
cwtl
ja
xor
dec
sbb
adc
xchg
dec
mov
cmpl
sbb
sbbb
fs
cltd
xor
repz
fstl
insl
sbb
cmp
test
mov
cwtl
add
ljmp
cwtl
or
stc
mov
sub
inc
push
dec
enter
mov
jns
fisubl
fcmovnb
inc
es
enter
test
hlt
dec
sub
rorb
jl
test
jne
jecxz
cwtl
xchg
mov
xlat
sub
dec
xor
pop
add
mov
xchg
pusha
pop
push
ljmp
jle
sbb
jnp
cs
jnp
call
dec
xor
mov
insl
mov
xor
or
jge
data16
cmp
mov
mov
pop
xchg
subl
jno
mov
cwtl
call
imul
test
adc
test
dec
jnp
aad
es
push
stos
loop
sbb
jp
lods
ret
sarl
aam
xchg
ret
ljmp
leave
imulb
xor
mov
loope
stos
pop
fwait
pop
mov
adc
int
or
pop
repnz
jl
testb
hlt
lret
daa
fidivrs
in
cmp
out
xchg
or
gs
ret
dec
imul
jns
fucomi
in
icebp
cmp
add
push
mov
adc
adc
mov
hlt
mov
mov
sub
pushw
popa
out
pop
and
mov
jno
push
jo
mov
ret
dec
pusha
sub
in
fcmovb
jecxz
mov
sub
bound
call
lock
pop
jns
in
push
and
adc
lock
int3
jnp
subl
jmp
sub
in
jle
out
mov
mov
test
pusha
mov
sub
leave
jae
push
iret
cmp
sbb
enter
pop
xor
xchg
dec
jge
fwait
mov
xor
mov
scas
mov
lds
test
mov
clc
sbb
shl
mov
xchg
pop
arpl
sbbb
pop
cli
insb
xor
scas
and
cltd
xchg
pusha
fiaddl
int3
gs
mov
stos
pop
dec
cmpsl
iret
mov
shl
inc
fldt
and
test
inc
sbb
out
push
cwtl
push
icebp
out
add
pop
jmp
xor
adc
ret
xor
push
jbe
andnps
das
inc
pusha
dec
and
and
push
mov
cltd
mov
aas
cs
lock
sbb
sbb
mov
mov
imul
dec
hlt
push
xchg
cmp
adc
jmp
jbe
jmp
xchg
imul
lret
sub
mov
push
loope
test
test
sbb
push
jno
sbb
insb
fs
dec
rorb
cs
jle
movsb
pop
repnz
adc
stos
sub
aaa
and
jne
jp
fldenv
sbb
icebp
push
loopne
das
jno
mov
je
pop
cs
cmp
push
and
es
jbe
cmp
mov
mov
inc
mov
xor
mov
adc
mov
jno
inc
sbb
shll
push
push
sbb
pop
xchg
mov
mov
push
mov
cmp
push
sub
jno
xor
call
xchg
pop
push
add
and
mov
insl
movsl
or
test
cwtd
aad
popf
ret
jecxz
mov
adcb
lods
das
xor
adc
xchg
push
lea
lea
fisubrl
movsl
mov
jo
int3
or
push
mov
insb
inc
sti
out
inc
insl
repnz
leave
and
in
adc
sub
outsb
jno
pushf
dec
hlt
iret
ja
cltd
mov
and
mov
popf
and
jno
dec
dec
hlt
or
sub
lods
setp
or
loopne
loopne
sbb
adc
test
mov
jns
xchg
xchg
adc
xchg
mov
mov
add
push
adc
sub
jne
insb
jge
daa
addr16
mov
stos
arpl
inc
cmp
xchg
adc
dec
sbb
es
mov
mov
rolb
ret
out
movsl
cmp
jg
lods
fstpl
div
dec
mov
push
jne
fsubl
cmpsb
lret
sbb
add
aas
mov
test
pop
rolb
movsb
das
cmp
notl
jmp
push
sbb
movsl
fstps
popf
mov
clc
sbb
sbb
sbb
leave
add
sahf
push
je
or
ss
fildl
adc
xor
mov
cmpsl
stc
xchg
decb
sbb
repnz
addr16
inc
repz
push
sbb
arpl
leave
in
test
scas
sbb
hlt
je
in
loope
insl
lock
pop
sarb
popf
pop
xchg
pop
incb
inc
sahf
mov
or
xor
jl
iret
jmp
xchg
mov
sub
int3
ss
outsb
pop
in
aam
sti
push
xor
jnp
push
clc
push
or
fsubrp
repnz
or
popa
push
or
cmp
pop
neg
sbb
sbb
dec
mov
gs
xor
cld
or
push
dec
insb
cmpsl
cs
dec
shl
cmpsb
loop
or
ds
leave
in
or
jl
mov
cmc
stos
mov
divb
in
mov
push
sub
shll
mov
ljmp
orl
shlb
add
pop
popf
push
adc
ja
mov
in
aam
mov
push
pop
jmp
cmp
mov
into
in
add
sub
sbb
fbld
mov
movsl
dec
xchg
jb
pusha
nop
aaa
sbb
das
dec
cltd
push
insb
rcrb
lcall
mov
aas
mov
jle
mov
sbb
sbb
add
mov
cmc
out
stc
ja
bound
cmp
jnp
mov
and
jge
pop
push
sbb
movsb
iret
mov
adc
hlt
jge
adc
cmpsb
loope
sub
cmp
push
adc
mov
scas
mov
or
mov
xor
scas
mov
jbe
in
movsl
pop
dec
xor
scas
andl
sahf
mov
jne
mov
sub
mov
popf
sti
fldt
and
cltd
sub
pop
xchg
loopne
xor
adc
add
iret
sbb
loop
ror
xlat
movsl
clc
test
outsl
pop
jge
xchg
popf
pop
repnz
add
movsb
lret
push
and
sti
pop
stos
jle
mov
push
jl
mov
mov
insl
popa
mov
and
mov
dec
fmul
adc
mov
aam
push
xchg
stos
lods
fs
rcrb
stos
mov
mov
cmc
pop
sbb
int
hlt
data16
loope
lea
adcl
hlt
addr16
cmp
fldl
mov
fildll
inc
mov
leave
loop
shll
je
out
sub
mov
lock
pop
rcrb
mov
jae
in
aam
xchg
sbb
and
cmp
inc
sub
dec
inc
xchg
xchg
out
ret
sahf
mov
and
inc
sub
cmpsb
aas
fldcw
mov
in
jae
cmp
fcompl
jns
rcrb
inc
jmp
fiaddl
push
dec
pop
or
cmp
add
push
xor
stos
cmpsl
sahf
insl
mov
adcl
pop
sbb
ret
ficomps
ss
faddl
xor
pop
lock
add
cmp
pop
int3
gs
jae
cmp
mov
xchg
fwait
mov
push
cmc
and
push
mov
outsb
mov
adc
imul
lods
out
adc
pop
movsb
pop
xchg
xchg
mov
ja
test
inc
mov
mov
cli
cltd
or
push
clc
aam
sahf
outsb
jae
and
lds
imul
and
add
data16
outsl
or
lahf
xorl
ret
mov
popa
sbb
adc
repnz
lods
movsb
enter
mov
and
call
js
push
test
add
push
inc
cmp
inc
inc
outsl
sbb
ja
test
repz
jge
sbb
mov
inc
es
mov
cmp
nop
aas
mov
or
fdivp
push
divl
jns
jae
gs
testb
stc
xchg
mov
shl
outsl
or
or
mov
jns
rolb
push
inc
ljmp
stos
test
pop
mov
inc
mov
or
mov
mov
addl
stos
push
lret
outsb
add
inc
testl
int
mov
in
jmp
addr16
pusha
fcoml
sbb
xor
roll
sbb
or
repz
pop
mov
rclb
js
lret
insl
mov
int
pop
out
sub
and
add
arpl
addr16
in
pop
push
divb
lock
fmull
js
das
dec
adc
mov
iret
test
jns
in
int
jmp
out
ret
dec
test
shrl
hlt
popf
ss
fidivrl
cmpsl
ss
inc
jno
adc
ja
mov
inc
xchg
and
push
jb
pop
xchg
icebp
or
mov
jo
pop
mov
xor
xchg
stc
fstpt
ror
je
fiadds
mov
or
add
mov
sub
xor
popa
and
repz
or
jae
insl
xchg
xor
je
sub
lret
iret
add
movl
cmp
aaa
cli
test
stos
test
dec
addr16
or
aas
std
mov
daa
push
aad
mov
add
mov
clc
inc
xor
push
out
xor
adc
jg
leave
call
add
inc
ret
iret
cwtl
js
cmc
outsb
jb
xchg
int3
add
out
jnp
aaa
adc
sti
int3
rcrl
imul
push
ret
mov
lods
xchg
jns
movsb
inc
cmp
jg
leave
push
push
dec
push
sub
jl
mov
jge
mov
or
mov
xchg
outsl
xchg
sub
imul
xor
mov
lret
and
or
cmp
lods
in
dec
and
fwait
lcall
jl
shlb
mov
and
push
mov
in
into
gs
pop
fdivrs
and
outsl
mov
psubusw
ljmp
adc
leave
insb
dec
xchg
dec
insl
les
pop
xchg
pop
popa
jns
jb
in
xchg
lds
mov
rclb
test
pop
mov
mov
fcompl
negb
addr16
test
add
enterw
leave
ljmp
add
bound
out
dec
and
daa
xor
jp
jecxz
addr16
xchg
jl
pop
fistps
gs
cld
test
sbb
loopne
addb
loope
push
movsl
or
dec
cmp
lods
pop
outsl
pop
xor
and
add
sbb
in
icebp
add
addb
cmpsl
jg
popa
call
mov
fdivl
adc
push
ja
mov
lret
adc
ds
mov
popa
mov
mov
fadd
mov
fldenv
addr16
inc
les
fdivrl
push
dec
ljmp
iret
xor
sub
or
xor
add
faddl
mov
xor
push
in
mov
sbbb
add
inc
into
repnz
mov
xchg
mov
sbb
mov
test
mov
inc
sbb
ss
mov
bound
pop
ds
mov
lock
push
mov
mov
pop
repz
mov
pop
sbb
mov
jb
jge
xor
or
movsl
repnz
pop
test
ret
fs
sub
dec
addr16
sahf
test
push
lods
repnz
out
mov
in
add
dec
divb
dec
in
imul
cmpsb
out
popf
adc
add
insb
jle
xor
sahf
push
jo
lds
cmp
repnz
test
int
in
xor
cmp
add
dec
jbe
jp
sbb
dec
jae
fbstp
test
jmp
sbbb
push
js
shl
pop
test
cmc
mov
mov
push
loopne
mov
push
cld
xchg
inc
and
adc
fidivl
in
movb
lods
imul
in
ret
push
insb
push
pop
pusha
aaa
and
xchg
in
fldt
and
sbb
mov
mov
jle
push
ja
jle
cwtl
push
movl
insl
inc
outsb
pushf
lahf
shll
enter
push
lods
fwait
stos
add
fs
lcall
xor
rcrb
icebp
fcoms
cwtl
lea
or
cmp
xor
icebp
mov
and
or
push
pushl
sub
sub
loopne
sarb
push
or
jne
jg
inc
pop
sbb
and
scas
in
test
loope
sahf
pop
scas
cmpsb
dec
adc
mov
xor
pusha
mov
inc
scas
inc
cld
inc
jo
shll
in
rcr
iret
daa
mov
or
sub
sbb
fsubl
and
and
jb
mov
cmpsb
cmp
dec
pop
jae
add
cltd
jecxz
fidivrl
or
jnp
mov
js
mov
xor
and
and
cmc
out
mov
jae
pop
mov
adc
jnp
xchg
sbb
insb
stc
cld
or
icebp
xchg
jb
and
sbb
or
cmc
loope
cmpsl
popa
stc
xor
mov
pop
mov
outsb
push
imul
mov
subl
jnp
mov
cmp
idiv
popa
out
and
lahf
jns
pop
sub
jecxz
or
sub
fimull
pusha
lods
cmpsb
insb
xor
out
arpl
or
mov
dec
pushf
sub
sti
test
stos
mov
int3
es
jle
in
mov
sbb
rcll
ljmp
js
mov
and
call
popf
pop
movsb
nop
add
adc
shl
cltd
pusha
pop
stos
add
add
out
jnp
pop
pop
into
mov
ja
aaa
pop
push
push
arpl
cmpsl
mov
dec
cltd
sub
mov
into
div
mov
pop
sbb
pop
test
fsub
stos
outsb
arpl
xchg
dec
dec
lods
rcrl
cmc
pop
jge
daa
add
xor
sub
orl
cmc
adc
add
int3
and
daa
and
inc
push
lcall
test
jg
leave
or
mov
and
pop
jno
ja
outsl
add
inc
aam
push
cmp
and
stos
call
push
pop
pop
lretw
inc
loop
sub
pop
or
mov
and
jne
push
adc
or
call
les
xchg
xor
fiaddl
inc
fisubrl
xor
por
rolb
pop
bswap
pop
pop
insb
jbe
cs
inc
add
das
mov
add
mov
adc
dec
int3
jmp
lock
push
push
ljmp
loopne
mov
loop
outsl
jp
adc
ds
pushf
enter
movsb
cmp
or
repz
mov
jp
out
out
jge
pop
inc
jecxz
mov
mov
pop
ljmp
xor
or
fisttpll
pop
mov
shll
jl
cmp
roll
enter
rcrb
xchg
mov
mov
mov
iret
xor
pop
iret
fistpll
add
jmp
je
sti
sub
outsl
imul
in
jb
push
fmull
ljmp
lods
in
xor
or
addr16
mov
jg
jno
cmp
fistpl
cmp
loopne
flds
add
add
mov
mov
inc
ljmp
rcrl
iret
inc
jns
mov
cmp
hlt
mov
dec
add
mov
and
mov
cmpsb
sub
sub
xchg
loop
ds
in
rorb
pushf
imul
mov
xor
mov
xchg
or
clc
mov
fists
cmc
push
fldcw
icebp
sbb
push
pusha
lock
into
or
pop
adc
xchg
fcomps
addl
mov
idivl
xchg
cmp
cmpsb
xor
mov
or
clc
in
xchg
pop
loopne
mov
lea
pop
aad
adc
scas
fists
ret
jg
xor
fs
pop
xchg
fdivl
popf
sbb
adc
and
xchg
pinsrw
pop
inc
jp
adc
add
stc
pop
stos
gs
add
xchg
in
into
push
push
push
xchg
lds
in
xchg
rol
jbe
movsb
jl
lcall
dec
rcrl
hlt
popf
loopne
ds
std
int3
xor
and
popf
hlt
and
jg
lret
in
repz
and
int3
leave
cmp
jbe
or
into
clc
mov
mov
es
xlat
shlb
jo
mov
mov
and
inc
arpl
out
push
shrl
insl
dec
sbb
xchg
pop
out
push
push
dec
adc
sub
mov
ret
mov
nop
inc
mov
xor
push
sbb
pop
or
fsts
mov
aad
mov
inc
mov
ret
xchg
and
loop
cmpb
adc
inc
rclb
xchg
xchg
shlb
dec
dec
push
mov
pushf
fldt
mov
add
pop
jo
out
cmp
int
jb
sbbl
fdivl
sbbl
push
push
dec
sbb
insl
dec
shlb
push
add
or
sbb
xor
call
psllq
jbe
sarl
jo
adc
add
pop
jge
jmp
jb
jg
sbb
testb
cmp
lret
cs
das
add
data16
add
xchg
xchg
sbb
cmp
sbb
xor
shll
push
mov
lods
inc
fimull
in
inc
dec
rcrl
adc
lods
insl
lcall
lcall
ret
mov
sti
push
jno
lret
fld
lea
andl
mov
inc
xor
out
sbb
gs
cmpsl
sarl
push
ds
cmp
insl
insb
pop
out
mov
dec
sbb
jecxz
lret
das
xor
xchg
test
arpl
lahf
jmp
mov
test
mov
inc
or
pusha
pusha
xchg
xchg
xor
pushw
add
lds
xchg
or
ret
pop
adc
xor
mov
push
jmp
jmp
int3
push
jle
mov
xor
dec
jmp
aad
clc
mov
push
int
clc
dec
cmp
sarb
mov
xchg
mov
jecxz
mov
cmp
jmp
push
mov
pop
jmp
rcll
inc
jno
pop
lock
out
inc
pop
xchg
sti
ja
repz
xchg
repz
inc
push
scas
mov
sub
dec
in
aas
ds
test
add
lds
cli
dec
or
pop
mov
int3
pop
int3
subb
pop
out
test
test
outsl
clc
sti
es
inc
test
jae
and
adcl
sub
cmp
mov
iret
stos
icebp
sbb
pop
dec
out
pop
pop
std
sub
xor
in
xchg
and
xchg
outsb
xchg
imul
in
out
fisubrl
inc
adcl
es
jne
push
jns
pop
lods
push
push
out
repz
dec
pushf
lret
jo
lea
stos
nop
sub
add
jg
xchg
mov
cmp
sbb
std
inc
sbb
aad
sbb
dec
std
fcmovnb
repz
or
adc
and
mov
and
pop
pop
aam
out
lds
out
pop
sti
sbb
sub
je
imul
fildll
mov
adc
shll
inc
lcall
dec
xlat
xchg
push
sub
psubsw
adcl
enter
stos
repz
dec
push
andb
into
xchg
imul
push
or
or
js
je
sahf
cld
lds
cltd
movsl
pop
jle
lcall
orb
sbb
ret
popa
hlt
dec
adc
mov
lret
pop
fmul
out
or
cmp
inc
jae
imul
inc
push
jl
cli
mov
hlt
cmp
leave
jecxz
xchg
sub
mov
mov
loop
stos
in
pop
imul
jae
and
insb
mov
out
fidivrs
mov
xlat
mov
stc
cmp
xorb
add
mov
mov
in
sbb
pop
dec
sti
dec
mov
sbb
imul
inc
ror
mov
mov
aas
test
lret
pop
lods
mov
push
sbb
fidivrl
mov
hlt
jb
xor
test
mov
mov
jne
adc
mov
adc
sbb
scas
xlat
mov
sahf
xor
pop
fs
jg
sub
pop
aaa
xlat
call
shll
mov
repz
and
adc
xor
inc
inc
add
mov
in
sub
cmp
mov
mov
add
cmpsb
pop
cmpb
push
jnp
and
cmp
aaa
ss
sbbb
add
inc
das
adc
sbb
mov
inc
mov
dec
aas
lea
dec
clc
mov
pop
or
out
cld
cmpsb
in
pusha
and
outsl
mov
pop
jbe
pusha
out
aas
test
add
xchg
popf
std
lret
negl
test
cmp
aas
add
stos
and
lock
ret
mov
test
rcrb
sub
sbb
stc
mov
outsl
jg
push
sub
pop
mov
mov
dec
or
fldenv
inc
sub
dec
xchg
cmp
mov
andb
push
push
push
lock
out
js
lret
jmp
mov
xlat
and
or
sub
mov
mov
push
add
cmpb
adc
cmp
hlt
and
dec
loope
pop
pop
das
xor
inc
loop
pop
mov
mov
test
add
leave
dec
aaa
and
fimull
gs
roll
xchg
inc
outsl
xor
pop
mov
sub
gs
fs
jno
shrb
jmp
sbb
xchg
jo
sbb
pop
mov
sti
cld
or
xchg
ljmp
cmpsb
mov
fst
or
xchg
aam
shlb
dec
addr16
jnp
jno
dec
xchg
cmp
je
inc
in
stc
hlt
mov
pop
sub
sub
pop
clc
popf
and
hlt
and
movsl
push
jns
push
lret
push
adc
in
fimuls
or
mov
or
jbe
mov
mov
dec
cmpsb
imul
ja
mov
arpl
push
push
adc
rcrl
outsb
sbb
call
outsb
ss
call
cmp
shrb
mov
mov
lcall
lahf
adc
insl
fnstenv
sbb
jbe
lods
push
scas
jne
adc
xor
stc
xor
xchg
stos
inc
sub
repz
sbb
cld
push
push
pop
xorl
push
rorb
out
jno
pushf
aaa
fyl2xp1
cli
jl
ljmp
sbb
je
adc
jae
aam
lret
insl
gs
push
adc
test
xor
out
ret
inc
cltd
lret
lahf
inc
jns
jp
enter
xchg
add
sbb
pop
out
pop
test
mov
cmpsb
push
push
clc
and
dec
stos
adc
cli
or
pop
icebp
pop
mov
jl
dec
outsl
lds
sbb
in
mov
dec
sbb
test
add
fwait
mull
sahf
cli
xchg
mov
icebp
scas
add
jno
aaa
sarl
jp
push
sub
sub
pop
shrl
add
xchg
push
and
push
push
insb
inc
fwait
add
mov
mov
dec
sbb
jmp
loop
iret
xor
mov
mov
out
and
into
ret
fsubl
jg
jo
push
in
mov
and
xchg
xor
rclb
or
inc
mov
mov
jns
les
fs
jne
mov
ljmp
add
jp
scas
adc
jmp
add
pop
add
lret
fsubp
lds
hlt
xor
mov
insl
out
cwtl
and
mov
loop
jae
int
in
dec
or
mov
pop
push
inc
xorb
dec
jno
iret
fucomi
roll
movsb
movsb
push
fincstp
jne
xor
outsl
pop
and
mov
ret
mov
xlat
pushf
pop
mov
mov
neg
jns
mov
xor
push
gs
xor
sub
push
lea
sahf
in
sbb
push
inc
or
sub
inc
xor
inc
sahf
inc
ss
mov
jne
jmp
sbb
mov
add
cmpsl
call
sbb
lret
mov
mov
outsl
das
push
out
in
xlat
loop
in
cmc
xor
roll
call
dec
lcall
dec
inc
lock
testl
mov
inc
pushf
or
add
ja
js
outsl
fstpt
inc
and
sub
ds
inc
jle
in
cmpsb
call
mov
jnp
sub
mov
sbb
das
arpl
inc
pushf
or
adc
and
jo,pt
shll
icebp
inc
sub
inc
aad
jbe
lret
xchg
mov
xor
dec
push
sbb
add
popa
xchg
sbb
lret
xor
sub
xor
inc
xchg
cltd
loop
push
xchg
jl
bsf
pop
inc
gs
test
xor
mov
aad
fstp
loop
scas
or
mov
hlt
sti
lret
jmp
cmp
or
call
dec
fsubl
fstl
and
cmp
pusha
mov
inc
mov
inc
fsubr
cmp
mov
mov
sti
adc
jecxz
cmp
lods
testl
pop
ret
or
data16
js
and
jecxz
pop
inc
cmpsb
mov
add
jle
in
stc
arpl
lcall
push
ficoml
cmpsb
lods
rcrb
push
shr
adcb
dec
pop
rep
push
mov
inc
push
sub
xchg
mov
aaa
add
add
jp
push
call
nop
inc
and
pop
mov
cmp
daa
lods
fsubrl
popf
lcall
in
in
test
or
push
daa
lcall
movsb
notl
and
push
adc
and
rcrl
jne
add
shlb
pop
and
xor
daa
add
push
out
rcrb
shlb
movsl
add
inc
fildl
mov
cmp
push
jbe
std
or
mov
and
xchg
pop
adc
lock
xchg
mov
cmpsb
ljmp
pop
fsubrs
push
dec
movsb
adc
sbb
mov
cmpsb
pushf
mov
stos
es
sub
aas
adc
xchg
ud1
jne
pop
mov
out
xlat
ret
lods
mov
call
push
divb
mov
in
call
rorb
and
add
jb
ror
xor
ss
jae
sbb
test
jnp
xor
cmpsl
mov
sub
outsb
xchg
pop
cmp
pop
flds
jl
ret
packsswb
out
mov
clc
loop
sub
outsb
mov
or
andb
sub
cwtl
inc
dec
cmp
pushf
bound
mov
fstl
cs
jp
push
xor
pop
js
insb
mov
push
mov
es
add
jo
pop
dec
lcall
cwtl
mov
adc
out
popf
mov
or
loopne
loopne
xlat
sub
sbb
mov
negl
in
lret
or
insl
and
mov
lods
aaa
mov
push
dec
adc
add
mov
shl
test
cmp
inc
inc
cli
mov
in
pop
add
jno
lods
hlt
inc
call
push
jge
arpl
out
fwait
jmp
and
aas
dec
rol
jl
gs
aam
xchg
lcall
mov
push
ja
aas
mov
stos
insb
test
xor
mov
push
sbbb
pop
cmp
std
jmp
cmp
xor
pushf
xlat
add
pop
inc
push
and
psubb
outsb
sub
mov
cli
pop
inc
mov
daa
push
and
call
imul
sbb
mov
je
popa
in
xchg
cmc
scas
lock
movsb
pop
testl
lock
xchg
sub
int
in
out
in
sub
std
es
add
mov
push
dec
adc
sahf
mov
adc
or
shr
adc
mov
scas
scas
popf
mov
sbb
push
adc
jge
xor
dec
emms
lcall
inc
mov
out
fcoml
mov
mov
pop
mov
mov
inc
push
mov
mov
pop
pop
jmp
xor
inc
mov
scas
mov
xchg
fimuls
aam
lods
shlb
in
dec
leave
pop
jge
add
shr
jno
xor
or
dec
jg
es
icebp
mov
adc
hlt
mov
je
adc
test
and
mov
add
push
iret
pop
xor
shl
cmp
out
mov
test
jg
mov
jmp
sub
loop
out
js
fsts
and
insl
enter
fiadds
out
inc
nop
subb
jp
cmp
sub
sbb
lret
flds
dec
cs
xchg
xor
loope
shlb
lret
inc
adc
out
cmp
push
inc
xor
scas
xchg
cwtl
mov
push
pop
sbb
xchg
jp
out
fwait
pop
sti
xorl
enter
loop
mov
mov
insb
leave
pop
out
or
add
jl
mov
lcall
push
data16
jg
sub
sbb
iret
dec
fsubrp
push
inc
mov
clc
xchg
imul
repz
adc
and
arpl
mov
inc
int
cmp
mov
and
repz
xchg
push
out
add
jmp
aad
rcr
jns
dec
mov
jge
dec
mov
jge
jae
stos
test
fdivl
jl
cmp
xor
repnz
inc
jmp
leavew
and
inc
jne
pop
add
cmp
lods
push
add
cld
xchg
cmc
movsb
xchg
inc
mov
xor
mov
out
fstl
xchg
ss
bound
jne
test
xchg
push
out
arpl
icebp
jbe
mov
xlat
cmpsl
lret
mov
stos
push
jge
or
xor
inc
sbb
int3
dec
cmc
push
loope
inc
mov
push
fs
add
enter
xchg
mov
out
ds
push
mov
in
and
adc
sahf
jecxz
in
jp
pop
pop
pushf
xor
jle
pop
inc
add
xchg
jecxz
jl
adc
pop
and
adc
cmp
test
sub
push
or
sbb
insb
lcall
push
mov
imul
enter
mov
inc
dec
cmp
in
adc
push
add
add
push
unpckhps
mov
jb
cmp
push
or
out
sub
jecxz
and
int
int3
fucom
jle
outsb
arpl
fwait
rcrl
lahf
sub
pop
pop
inc
jb
out
inc
adc
jo
xchg
das
dec
mov
xor
mov
jl
out
ljmp
lods
push
fcoms
icebp
mov
push
loope,pn
ds
inc
clc
dec
fisubrl
and
inc
inc
dec
ret
or
and
sbb
stc
dec
jae
sbb
popl
cmp
add
scas
inc
out
push
adc
inc
jg
push
jb
push
push
lods
icebp
sti
add
push
cmp
das
mov
jmp
aas
das
into
inc
rcll
sbb
pop
push
jmp
test
loope
or
in
scas
pop
in
pop
lods
pop
mov
mov
or
xchg
or
out
dec
and
cmp
mov
fnsave
lods
cmp
loop
dec
push
add
add
lret
rcrl
xor
add
clc
mov
popa
adc
mov
out
rcrl
dec
xor
sub
iret
lahf
adc
push
mov
lahf
and
into
add
out
popa
inc
mov
aad
lock
mov
and
gs
sbb
fs
fistpll
push
mov
xor
sbb
xchg
std
ja
aas
pop
jne
dec
shlb
sbbl
jbe
loope
jg
jl
stos
inc
cmpsb
mov
jecxz
xchg
add
aam
mov
inc
sub
mov
push
stos
pop
fimuls
push
pop
iret
cmp
xchg
xchg
aaa
out
add
ja
jl
pop
push
or
adc
in
pop
cmpb
pusha
pop
add
lock
movsb
dec
or
out
pusha
fcomp
mov
cmp
subb
shr
aad
xor
sbb
enter
cmpl
es
je
lea
mov
sbb
ja
shlb
xlat
add
cmp
cmp
dec
or
cmpb
ljmp
fcmove
bnd
jmp
push
add
mov
lret
cmp
mov
sti
into
lods
cmpsb
sahf
and
cmp
sbb
insl
xchg
test
mov
xor
loop
add
mov
inc
jo
jp
xor
cmp
or
test
dec
cmc
xor
adc
xor
ret
inc
cli
mov
or
jmp
xchg
ret
aam
sub
mov
xor
jns
lret
jp
iret
lcall
jb
jle
mov
das
pop
mov
rorb
popf
frstor
dec
movsb
dec
pop
push
test
rcll
mov
ret
inc
jo
lret
jg
dec
jmp
cwtl
ds
cmp
lea
popf
adc
int3
lret
int3
bound
jb
leave
dec
data16
sub
mov
loope
fxch
jne
jmp
cmp
in
test
inc
int3
pop
add
aam
popl
add
mov
mov
pushf
push
sub
jne
sub
rol
call
into
inc
call
lret
mov
add
out
cmc
mov
imul
push
mov
jge
jg
cmp
xor
or
lock
add
popf
stc
jg
inc
xchg
test
mov
mov
cli
out
pop
cmp
and
inc
mov
mov
mov
movsl
xchg
cvtdq2ps
shll
dec
sbb
cmp
div
fxtract
mov
push
mov
xchg
push
leave
adc
lock
loopne,pt
outsb
pop
mov
dec
inc
cwtl
add
sub
out
mov
pop
adc
push
in
out
xlat
lcall
pop
adc
xorb
pop
iret
jge
mov
mov
mov
dec
outsb
inc
int3
add
push
in
mul
sarw
jb
loopne
test
sbb
push
scas
ja
repz
inc
shlb
push
dec
rol
xor
dec
push
xchg
push
cmc
or
jle
inc
ret
movsb
and
mov
pop
or
jmp
jbe
xorb
ret
dec
jne
gs
lods
orb
inc
or
call
cli
sub
rcll
mov
std
scas
popa
adc
rclb
sub
push
dec
enter
add
push
dec
adc
inc
daa
mov
mov
scas
iret
scas
shl
test
popa
aad
sub
rclb
adc
adc
clc
mov
int
int3
mov
pushf
std
data16
jp
stos
lcall
mov
lahf
mov
enter
mov
shrl
push
pop
mov
add
cmp
insl
mov
lods
fmul
dec
or
add
int3
xor
in
adc
jl
es
sub
mov
sub
int3
mov
ret
stos
shrl
xchg
mov
js
fldcw
mov
xchg
aaa
and
mov
icebp
and
xlat
in
jp
mov
push
fdivrl
fucom
filds
sbb
ret
lret
jno
dec
stc
nop
dec
adc
movsl
into
out
lcall
and
out
ret
scas
add
pop
push
cmp
pop
call
dec
loopne
cmc
push
sbb
mov
inc
ffree
xorl
enter
xorl
dec
xlat
sub
mov
lods
mov
popf
mov
std
loop
push
jno
out
test
adc
lcall
pop
or
outsl
adc
mov
mov
lret
mov
jnp
or
or
adc
lods
icebp
subb
testb
mov
sub
push
ffree
jp
cli
lret
xchg
jp
pop
cld
stc
push
adc
adc
ret
sub
jp
or
stos
pop
decl
mov
fcoms
addb
fmulp
or
push
jle
jns
pop
xchg
aaa
stc
jae
in
mov
jo
ds
pop
inc
pop
cmp
jp
jae
fninit
pop
fwait
out
ret
cmpsb
push
cltd
jecxz
mov
sar
rcl
out
cmp
ljmp
sub
popf
pop
xlat
push
sbbl
les
mov
push
xor
xchg
inc
cwtl
sub
addr16
cmovl
je
iret
aaa
aaa
push
fimuls
es
cmp
mov
in
loop
dec
or
xchg
ret
and
mov
lahf
out
xor
rcll
mov
add
jecxz
jb
adc
adc
hlt
push
into
mov
or
or
mov
scas
cmc
or
jns
mov
mov
fstps
movsb
mov
imul
mov
test
sub
xor
lods
mov
lea
jbe
or
sub
outsl
mov
xor
push
mov
icebp
dec
push
and
aam
out
in
pop
pusha
jnp
xor
jle
jmp
imul
imul
loop
adc
insl
xchg
adc
movsb
xor
out
pop
jmp
in
clc
lret
jge
lahf
mov
mov
out
mov
pop
aad
inc
sbb
push
aam
int3
js
and
mov
adc
and
aam
das
and
mov
sbb
mov
sarl
pop
push
scas
jp
sbb
add
cs
in
stos
shlb
fldcw
sub
and
enter
push
cltd
cld
into
mov
ds
insl
outsl
sbbb
in
push
psubd
pop
andl
nop
fisttpl
mov
daa
push
xlat
in
cmpsb
cmp
enter
fchs
ds
mov
sub
xor
dec
sbb
lret
subb
mov
addl
dec
xchg
push
dec
addr16
and
xorb
push
or
and
jl
cltd
xchg
mov
xchg
adc
out
rcl
jp
mov
lods
push
mov
shrb
ljmp
bound
jmp
xlat
mov
inc
adc
fdivl
and
push
mov
add
mov
pusha
xor
mov
dec
dec
cmpsl
call
mov
inc
arpl
dec
xchg
ja
and
mov
jmp
stc
pop
cli
mov
outsb
repz
stos
push
sub
push
cmp
scas
shrl
test
fucomp
push
cltd
fcomps
out
xchg
sub
pushf
out
add
sub
cmp
cmpsl
inc
push
mov
les
pop
setns
inc
pusha
jle
inc
je
loope
sub
imul
imul
loop
xor
xor
sbb
sub
mov
xchg
int3
xchg
lret
pusha
or
and
or
imul
adc
dec
cmp
push
pushf
dec
daa
or
lcall
add
inc
xor
jmp
mov
popa
test
xlat
cmp
sub
or
testl
lcall
mov
jo
lods
adc
out
add
notb
adc
pop
and
aaa
lods
pop
jmp
inc
xchg
popa
lret
pop
icebp
mov
psubb
movsb
orl
inc
cmpsb
push
jmp
call
rolb
sub
or
cmp
jge
fs
shrl
and
repnz
aad
jne
aaa
jp
jnp
jg
sub
shr
push
or
add
mov
or
mov
push
jne
fcomps
sub
push
out
das
cwtl
xchg
dec
idivl
mov
jl
or
ljmp
mov
lods
sub
mov
mov
loopne
mov
lret
clc
and
mov
popf
lods
je
pop
cmc
in
js
mov
test
in
jg
add
xchg
push
mov
insb
jge
or
mov
mov
ficoms
mov
int
mov
in
inc
popa
mov
lods
fcompl
ffreep
daa
shlb
cmpsb
int3
pop
cmp
sub
dec
loope
and
cmp
jne
in
test
jl
enter
jne
sbb
outsb
movsl
inc
dec
add
push
repnz
or
pop
mov
lret
fdiv
sbb
mov
lds
sub
add
xchg
clc
fucom
push
rcll
movb
loop
cmp
divb
or
clc
sub
jo
dec
repnz
cmp
sbb
arpl
sahf
mov
sub
sti
inc
mov
and
push
push
lds
jo
repz
push
pop
into
rcl
mov
nop
and
insb
fsubs
mov
dec
cmp
push
fimull
jmp
pop
mov
loop
and
jg
jmp
out
movsl
add
movsl
repz
sub
xor
popa
mull
jbe
sub
scas
in
adc
out
das
sbb
std
sti
mov
imul
fldenv
xchg
jno
pop
sub
pop
inc
jmp
ffreep
push
cwtl
outsl
loope
scas
xor
inc
xchg
and
fwait
add
pop
sub
scas
rorb
fstpl
jl
mov
and
cmc
mov
xor
mov
ss
push
add
and
scas
cmp
rcll
popf
cltd
sbb
lret
js
mov
push
sbb
ja
leave
pslld
test
xchg
cli
xchg
or
mov
or
andb
leave
xchg
xchg
aaa
xor
jl
cmpsl
xchg
js
cltd
out
dec
imul
mov
mov
cmp
jecxz
mov
mov
in
jno
xchg
cmp
or
sbbb
hlt
dec
xor
adc
loope
and
icebp
stos
imul
imul
push
mov
insl
xor
in
mov
lock
lods
mov
mov
sbb
push
and
xchg
lods
clc
sub
mov
aaa
jp
sbb
repnz
std
fistpl
jmp
clc
pop
mov
push
cmp
inc
popa
or
dec
pop
or
xchg
mov
pop
xor
mov
repz
outsl
jmp
fldl
adc
pop
insb
inc
dec
xchg
fbld
push
repz
mov
cmpsb
data16
das
sub
jo
lds
cmp
inc
xchg
and
out
cli
call
jmp
lea
rcrl
std
popa
and
or
xchg
mov
mov
dec
xchg
cmpsb
mov
adc
mov
decb
loope
pop
mov
push
or
and
cli
pop
mov
and
xchg
cs
sti
sbb
inc
fldt
dec
xchg
lcall
sbb
inc
xchg
jb
push
int3
or
mov
pop
shl
outsb
xor
int
aam
sbb
loope
in
sbb
jnp
outsb
stos
stc
sbb
or
dec
inc
sub
sti
or
es
jae
mov
ss
and
inc
pop
mov
sbb
adc
shr
imul
addb
loopne
fnsave
sub
ja
in
insb
cmc
jb
jge
jne
push
dec
pop
pop
dec
lahf
add
pop
cli
movsl
int
jg
jno
inc
incb
adc
xor
daa
pop
push
mov
push
mov
roll
push
orl
adc
jns
mov
add
mov
push
push
sub
sbb
xor
inc
mov
adc
lcall
and
inc
sub
fnstcw
out
std
stos
mov
scas
pop
movsb
jg
ds
push
int
imul
jne
and
push
mov
and
ljmp
cs
mov
outsb
lock
cmp
dec
add
add
rcll
fmul
es
fsubr
clc
add
xor
je
push
pop
cmp
iret
xchg
pop
outsb
imul
jge
mov
pop
sub
in
sbb
and
add
inc
lock
out
jne
ficoml
dec
xor
xor
mov
ss
pop
or
xchg
pop
outsb
enter
arpl
insl
outsl
mov
inc
adc
addb
scas
das
es
xlat
js
js
lret
fnsave
mov
pop
icebp
dec
pusha
movsb
out
adc
pop
mov
fnstsw
data16
jno
pop
dec
sbb
jmp
loope
test
call
fildll
sti
inc
add
sbb
das
push
xor
repnz
jle
jns
fdivl
mov
vpaddsw
push
cmp
or
adc
and
mov
or
imul
outsl
sbb
jg
stos
mov
js
mov
imul
xchg
iret
popf
cwtl
ja
pushf
lds
mov
push
mov
dec
sub
loopne
je
add
into
pcmpgtd
popa
out
inc
jne
nop
lods
mov
pop
jb
clc
mov
pop
xchg
pop
jle
arpl
dec
js
out
daa
mov
push
push
je
pop
xchg
in
fnstsw
out
ja
mov
mov
cmpsb
call
das
adcb
inc
push
movsl
lods
std
jmp
push
inc
out
lods
lret
inc
mov
xor
jo
test
sub
mov
jp
sub
imul
adc
and
fidivrs
xor
jno
sbb
mov
mov
jle
xor
aam
lret
cmp
daa
insl
push
addr16
push
loopne
mov
sahf
pop
inc
ljmp
sbb
mov
pop
sarb
xor
lahf
dec
push
push
xchg
mov
cmp
mov
fdivs
mov
or
or
or
int
mov
or
lret
push
iret
loope
cld
js
xor
mov
in
fisubrl
jmp
dec
pop
mov
out
cmc
hlt
xor
pcmpgtd
in
cmp
out
movsb
filds
insl
pop
dec
cltd
jne
shlb
mov
setle
push
jecxz
jno
movsl
xor
lcall
adc
push
jecxz
popa
mov
lcall
lods
adc
ja
pop
daa
mov
jecxz
andb
xor
jecxz
jmp
xchg
mov
fnstsw
cmp
andb
xchg
pusha
pop
ja
rcrb
clc
mov
cwtl
fmuls
jo
ja
mov
pop
shl
xor
mov
lock
cmp
xor
inc
out
arpl
push
xchg
mov
sbb
add
adc
pop
push
pusha
faddp
jbe
jl
mov
sub
mov
xlat
inc
sbb
clc
jg
scas
call
test
fsubrl
cmp
xchg
cmp
mov
sbb
rclb
in
in
fidivl
insl
filds
cli
push
mov
add
add
sbb
xor
dec
jno
cmp
push
imul
inc
fisubl
mov
dec
mov
pop
loope
cmp
outsl
mov
loope
loopne
leave
sbb
adc
fildl
lods
fisubrs
lret
cmp
push
loopne
shll
mov
pop
mov
xor
push
add
out
in
lret
stc
out
ror
test
or
mov
cmp
add
cmpsl
jno
and
mov
jmp
mov
sub
cltd
dec
mov
add
jne
loope
mov
fcmovnbe
push
mov
mov
jne
stos
xor
push
jecxz
cmc
cltd
ljmp
in
mov
cld
push
add
and
loop
fadd
jns
ds
lea
xchg
es
out
add
mov
jno
mov
call
xchg
iret
jae
jns
daa
aam
sbb
mov
mov
xchg
std
mov
cmp
jl
mov
or
xchg
rcr
out
mov
ljmp
filds
push
cmpsb
ret
push
add
loopne
adc
xor
imul
jecxz
sub
out
cs
fwait
push
ds
add
adc
sub
jmp
xchg
js
mov
iret
push
adc
test
fidivl
jmp
push
and
ss
in
mov
xchg
adc
adc
mov
fdivrl
popa
lea
mov
cmpb
push
lcall
push
lahf
notb
mov
icebp
stos
popf
mov
cmpsb
sub
mov
nop
cmp
les
and
insb
testl
mov
cmp
idiv
or
push
push
jae
sarb
or
leave
fildl
jo
jp
sbb
sti
sarl
lret
add
inc
imul
mov
lea
push
sahf
pop
and
in
pop
lock
xor
aad
jo
mov
stos
dec
outsb
cmpsb
adc
add
add
inc
jae
and
in
insb
popf
mov
cmpsl
addb
push
cmp
cmpsb
mov
jae
dec
ds
cli
sub
push
and
pusha
cmp
jns
rcr
mov
iret
fistpll
xchg
sbb
cld
std
aaa
mov
aam
xor
orl
or
push
sub
push
cmp
adc
enter
int3
or
insl
aam
or
cmp
arpl
push
pop
loop
xchg
sahf
xlat
push
movsb
popf
cmpl
adc
and
inc
cli
add
mov
add
and
out
out
stc
mov
push
sbb
push
jp
out
fildll
pusha
xor
mov
movsl
sbb
cmpsb
cwtl
loop
subb
or
adc
pop
test
push
pushl
fdivrl
pushf
into
rolb
shrd
pop
sub
stos
outsl
inc
fistpl
mov
sub
sarl
adc
mov
mov
dec
add
inc
xchg
loop
test
ds
aaa
mov
inc
inc
cwtl
lea
mov
out
or
pop
add
int
lock
pop
les
jmp
jnp
mov
sbb
int3
insl
xchg
outsb
ds
in
sub
mov
or
mov
inc
xchg
cmp
insb
scas
sahf
push
jl
rorl
dec
call
rcrl
jno
aad
xor
xchg
and
sbb
out
cmp
add
scas
xor
push
and
and
push
je
repz
cmpsb
fisubl
jp
fsubs
rorl
dec
daa
sbb
mov
repz
jp
push
jo
jns
adc
jo
sbb
and
mov
outsl
cld
inc
dec
in
mov
sarb
jbe
enter
push
or
jp
in
or
or
jmp
nop
mov
and
xchg
sub
xchg
or
mov
xor
imul
mov
out
push
ficomps
iret
fwait
cmp
cmpsb
std
mov
movsb
lahf
inc
addb
push
outsb
pop
add
jnp
jae
cmp
arpl
stc
add
ja
test
mov
outsb
sbb
adc
or
xchg
sbb
test
mov
mov
add
mov
and
xor
std
loopne
pop
hlt
or
jnp
ret
dec
xchg
adc
test
push
sub
dec
xor
lahf
rclb
add
jno
jb
inc
lcall
push
aaa
xchg
fwait
roll
fcomip
outsl
fsubrl
dec
push
jbe
es
popa
xchg
hlt
jns
cmp
mov
mov
mov
in
test
xchg
mov
dec
pop
addr16
mov
ds
aaa
insl
adc
inc
imul
fs
shlb
in
aas
mov
lds
inc
je
andl
iret
std
stos
negb
lods
scas
in
outsb
insb
sbb
sub
pop
sbb
jg
addr16
lods
test
jns
bound
int3
sbb
sahf
lret
std
push
mov
adc
mov
sti
push
enter
adc
pop
and
push
gs
outsl
or
outsl
mov
xchg
mov
out
mov
mov
adc
inc
or
loop
adc
pusha
lahf
mov
in
and
xchg
xlat
pop
int3
ret
arpl
xchg
adc
loope
std
leave
xor
lock
call
lret
mov
jg
sti
jmp
xchg
sub
pop
or
inc
int
scas
inc
xchg
pop
iret
cmpsl
in
xchg
dec
push
and
pop
jp
jno
packssdw
loop
icebp
and
rol
sbb
inc
push
js
cmc
out
scas
dec
aaa
nop
mov
mov
fstps
sti
and
test
scas
inc
aam
fists
cwtl
push
mov
test
and
fsubs
lods
adc
lret
jge
or
jno
ficomps
ss
adc
gs
test
mov
out
add
aam
xor
mov
dec
pushf
mov
jl
iret
mov
xchg
mov
fldenv
sbbb
je
mov
cmp
dec
in
jmp
push
js
dec
cltd
sbb
stc
pop
mov
je
cs
lret
out
in
jge
mov
sbb
jbe
xchg
movsb
scas
loopne
out
sub
into
xchg
lods
xchg
cli
repnz
dec
iret
aad
in
xchg
popl
sahf
std
pop
loopne
ret
mov
jle
fstps
repz
js
or
adc
jg
sbb
fnstenv
dec
int
push
dec
int3
add
jae
leave
stos
out
in
or
insl
or
jmp
inc
push
int3
xchg
pushf
sbb
scas
inc
bound
cmp
jb
cmpsb
jg
sarl
adc
dec
cs
cli
jp
sub
out
push
fadds
loopne
daa
xor
or
out
xchg
xchg
ja
adc
add
xor
rcr
mov
fidivl
cli
mov
xlat
pop
or
fstl
cli
movsl
sti
fcoml
aaa
pop
mov
arpl
jnp
xor
mov
aam
repz
sbb
daa
sahf
add
xor
lods
cld
dec
jnp
out
stos
imul
loop
push
jg
sti
mov
mov
insb
xorb
xchg
jg
or
loop
loope
push
je
cmpsb
push
dec
xor
in
push
lahf
sbb
add
out
out
repz
dec
icebp
fldcw
lcall
xor
mov
in
dec
mov
mov
inc
jbe
cmp
les
in
dec
or
xchg
dec
pop
ljmp
stos
adcb
ja
cmp
sub
add
inc
jo
pop
jmp
pop
dec
in
pop
je
cwtl
cmp
xor
adc
jle
pop
fiadds
push
jae
jnp
clc
and
add
aaa
xchg
and
call
xchg
hlt
sbb
dec
jg
xchg
pushf
fucom
movsb
adc
fmulp
loope
xor
stos
and
rclb
mov
lahf
in
movsl
push
cli
sbb
cld
jb
loopw
nop
sub
pop
xchg
popa
out
inc
dec
shl
inc
outsb
dec
add
cmc
icebp
out
xchg
sarb
movsl
sub
in
insb
out
shlb
cmp
adc
subb
pop
sbb
xorb
addr16
sbbb
mov
jno
push
popa
sub
lea
push
add
push
in
mov
hlt
pop
xchg
mov
ss
mov
mov
cmp
mov
mov
mov
mov
enter
in
lods
test
fisubrs
and
mov
or
out
jb
cmpsb
pop
inc
clc
insb
lods
data16
mov
loopne
sub
and
jne
popf
pop
pop
ret
jecxz
lcall
loop
sub
inc
push
adcb
add
in
inc
xlat
push
je
lock
pop
push
jno
xchg
ds
ficoml
mov
cmp
in
and
mov
push
sub
lahf
push
lds
insl
in
xchg
push
pop
bound
dec
int3
sbb
adc
lahf
scas
fstl
mov
jnp
fwait
push
xchg
mov
fldln2
hlt
mov
sahf
les
mov
inc
mov
shrb
stc
fldt
loope
jl
add
xor
dec
iret
shl
call
lds
data16
rsm
mov
cs
cmp
sahf
cmp
jb
pop
mov
shll
inc
and
xchg
ret
pop
add
adc
xchg
jl
and
sub
mul
pop
push
lahf
mov
cmp
inc
aad
cmp
insb
add
cmp
repnz
ret
enter
call
mov
faddl
adc
xchg
xor
aaa
outsb
add
sbb
and
out
outsl
jmp
push
xor
adc
loop
push
add
out
mov
enter
fldenv
push
sbb
flds
jns
fsubrl
dec
mov
sbb
mov
scas
test
lahf
xor
insb
arpl
in
fidivrl
outsl
sbb
mov
or
notb
mov
test
mov
mov
and
jl
push
incl
mov
adc
mov
xor
pushf
dec
fdivrl
lcall
scas
jae
mov
or
test
inc
ret
add
icebp
insl
push
pop
jecxz
pushf
pop
dec
dec
mov
cld
mov
mov
cld
lods
sub
out
adc
in
add
movsb
int
inc
arpl
enter
arpl
mov
das
enter
jl
ficoml
imul
in
aaa
paddw
pop
pop
inc
fwait
push
cli
mov
jnp
sbb
out
mov
fistpll
mov
in
fldenv
out
ret
fsubs
mov
mov
jmp
arpl
aam
mov
test
cmpsb
add
arpl
sbb
int
inc
sti
lret
cli
pop
add
or
inc
cld
imul
mov
xchg
movsb
jno
mov
rolb
mov
mov
and
and
leave
leave
fmull
fs
lods
ja
fdiv
push
jns
fs
rorb
push
sub
arpl
mov
js
push
cwtd
adc
push
cmp
arpl
jns
movsb
ljmp
push
pop
sbb
push
mov
pop
aaa
jb
xor
dec
mov
and
je
into
clc
xchg
adc
add
mov
daa
mov
es
cld
push
fmul
inc
cwtl
out
shll
pop
cmp
push
jmp
dec
les
add
movsb
pop
lods
push
and
jecxz
lock
adc
sub
push
call
rcrb
mov
scas
push
mov
push
cmp
aam
jns
aaa
out
insb
jle
xor
cmp
icebp
les
inc
xchg
mov
adc
mov
or
pop
aad
xor
mov
outsl
rclb
int3
iret
and
pusha
test
enter
test
in
push
add
lcall
push
mov
cmpsb
sub
in
jle
test
ljmp
pop
xchg
mov
adc
sub
in
fnstsw
stc
rorb
loop
mov
scas
pop
fsubrs
lds
mov
cwtl
dec
andb
push
cli
dec
mov
cld
dec
jge
sub
fwait
and
inc
push
outsl
xchg
pop
push
aaa
adc
aaa
adc
ss
or
xchg
popf
jo
xor
sub
push
xchg
bound
mov
or
xor
nop
or
sbb
jmp
jne
sar
cwtl
sbb
out
leave
out
ss
xor
in
pop
pop
dec
inc
std
lods
mov
das
loopne
out
mov
adc
mov
dec
hlt
cmpsl
and
mov
jnp
outsb
xchg
sarb
dec
jnp
loope
and
lock
cmp
add
or
mov
dec
add
ficoms
in
mov
imul
inc
sbb
cmp
adc
xchg
in
test
aaa
outsb
and
mov
stos
and
xchg
mov
loopne
xchg
int3
mov
adc
jae
insb
xchg
pop
jl
mov
push
mov
and
pop
jle
pop
add
ja
fcomps
enter
adc
cltd
clc
push
dec
arpl
xchg
jb
cmpsl
or
stc
cmp
int3
jecxz
bound
stos
int
sub
mov
jp
test
in
pop
iret
lods
pop
cmp
add
cmp
xor
sbb
ja
mov
sub
ret
in
and
sub
popf
add
test
sub
push
notl
push
push
imul
and
push
int
add
bound
mov
clc
in
xchg
out
cli
out
pop
outsb
adc
dec
push
add
imul
lret
sub
in
add
pop
dec
out
jb
mov
inc
in
mov
jge
or
cmp
inc
xchg
jmp
mov
or
jmp
sbb
pop
incl
ja
dec
xor
push
fs
notb
xor
xor
les
mov
jo
lds
shlb
push
push
sub
mov
add
lods
sbb
mov
imul
loopne
or
cmp
jmp
shrl
xor
gs
into
mov
mov
gs
mov
mov
add
and
xchg
dec
xchg
adc
mov
sub
sahf
inc
xor
cmp
iret
mov
xchg
das
jns
daa
call
cs
fbld
sbb
loopne
pop
out
mov
pop
sub
sbb
pop
test
jmp
rcrb
mov
fildll
je
or
sarl
mov
mov
jecxz
push
clc
push
push
jl
add
inc
fidivl
jmp
test
mov
sarb
mov
pushf
mov
inc
cwtl
out
idiv
sub
sub
sub
scas
scas
stos
insl
std
cltd
ficoml
dec
jge
clc
xlat
bound
sbb
ficoml
mov
adc
repz
xchg
lds
xchg
mov
test
dec
cli
or
dec
push
es
push
mov
lahf
shrb
aad
outsb
pop
mov
jl
mov
stc
imulb
popa
jno
mov
push
aam
pushf
std
xchg
adc
mov
cmpsl
mov
test
stc
jbe
pushw
out
out
push
push
jbe
mov
mov
or
ds
or
cltd
and
outsl
jno
jecxz
push
pop
cwtl
loopne
mov
push
in
aam
jns
out
inc
or
jne
fistpll
inc
dec
xor
loopne
loope
outsb
scas
ficoml
cld
repz
iret
jo
adc
pop
pushf
sbb
mov
or
adc
dec
movsl
push
sbb
mov
and
adc
dec
pop
imul
inc
xchg
mov
jle
adc
loop
and
test
ficoms
jp
push
or
pop
or
inc
cmp
aam
ja
xor
into
jns
testl
in
stos
sub
hlt
or
dec
mov
hlt
xchg
adc
loop
inc
xchg
fcomps
imul
adc
into
fcoms
jo
inc
lds
mov
xchg
xlat
sbb
sub
xchg
je
call
enter
xchg
aas
aaa
loop
mov
inc
clc
xchg
ret
ficomps
sahf
or
enter
mov
fwait
jae
sub
xor
pushf
mov
ds
push
push
or
fisttpl
jb
dec
xor
in
and
sbb
movsl
dec
pop
sbbl
add
jmp
jae
xchg
jo
decl
ds
sub
js
xchg
jle
ss
scas
jl
aam
mov
sub
jae
ffreep
inc
rolb
pop
push
cmpsb
daa
mov
and
pop
mov
lret
add
push
stos
jb
mov
jge
clc
lods
loop
mov
push
js
inc
scas
xchg
out
es
data16
sbb
xor
outsl
pushf
pop
sub
mov
or
ret
int
out
test
jle
cwtl
fwait
sbb
push
pop
in
xor
loope
in
repnz
js
pop
sbb
hlt
cmpl
out
movsb
sbb
xor
sbb
jo
aaa
sbb
enter
cmp
pop
mov
call
lret
or
fiaddl
es
js
es
jnp
in
cltd
data16
xor
push
lret
imul
icebp
xchg
cs
jmp
outsl
xlat
mov
mov
in
ret
dec
dec
pop
rorb
mov
sbb
mov
push
shrb
in
lds
xor
or
sbb
push
xchg
mov
xchg
cltd
or
lock
call
aas
jo
outsb
subb
push
pop
cmp
pop
and
cld
sbb
insl
or
push
pop
or
and
clc
pop
push
adc
out
data16
dec
icebp
jne
int3
mov
arpl
imul
cmc
and
in
rcl
ss
xor
pop
and
dec
mov
lods
adc
dec
jns
inc
mov
jmp
xchg
insl
scas
into
adc
cmp
in
mov
dec
arpl
add
cli
jmp
out
xor
je
mov
jns
dec
ss
in
mov
sti
inc
xor
inc
push
dec
add
std
cmp
out
out
xchg
ror
cltd
cmp
push
std
xchg
mov
fstpl
inc
aad
arpl
pop
sahf
sbbl
fs
jb
sar
jbe
jo
push
xlat
ror
nop
xor
pop
add
out
out
pop
mov
jnp
scas
sbb
xor
and
push
lock
dec
test
jl
sub
js
jmp
shr
adc
cmp
stos
mov
adc
push
cmp
cmp
cmp
mov
shrb
gs
jae
jle
pop
cmp
stc
inc
mov
pusha
daa
mov
pop
jb
fwait
sbb
jno
mov
std
call
sub
sbb
cmpsb
adc
psubb
cltd
push
add
or
push
addr16
shlb
pop
arpl
inc
int
jne
cltd
aam
shrb
mov
addr16
vmaxps
lret
sbb
cmp
arpl
jnp
mov
pop
mov
or
jae
das
cmpsl
and
pop
jmp
inc
notl
cmpsl
cwtl
or
lret
lahf
jmp
adc
fdivrs
pop
pop
or
into
aas
mov
mov
xor
mov
mov
cmc
je
xlat
push
cs
adc
lea
arpl
mov
ljmp
inc
adc
mov
cmp
jl
mov
mov
mov
sbbb
cmpsl
adc
pop
rorl
pop
add
fisttpll
cli
lcall
add
dec
xchg
call
pop
loop
scas
movsb
in
adc
loope
sub
dec
mov
or
mov
das
dec
cmpsb
popf
outsb
sub
jecxz
lods
xlat
decb
push
adc
pop
and
outsb
dec
pop
dec
loopne
lock
jo
sarl
jne
jle
jbe
mov
adc
sbb
daa
sub
add
or
sbbb
lret
push
xchg
push
les
mov
jl
ficomps
xchg
scas
popa
push
xor
mov
dec
inc
jns
outsb
lds
dec
std
das
aad
repz
mov
mov
sbb
clc
repz
ja
arpl
jl
cs
je
scas
mov
in
inc
mov
fldenv
fcmovnb
mov
jbe
repnz
sub
cmpsl
lret
fnsave
testl
xlat
test
push
fisttpl
sub
lahf
jp
jns
mov
inc
jns
shr
daa
subb
and
fs
test
pushf
iret
dec
mov
ljmp
jne
fidivrs
and
xchg
in
xchg
sub
mov
scas
jnp
repnz
xor
pop
out
jo
rcrb
adc
adc
mov
cmp
ror
inc
mov
adc
jo
or
sbb
sar
stc
hlt
xchg
shll
mov
sub
xchg
fldcw
bound
hlt
or
fdivr
inc
out
icebp
movsl
in
xor
jnp
scas
dec
and
jae
sub
mov
adc
add
pop
cmp
out
enter
pop
cmpsb
mov
leave
pop
cmp
inc
std
mov
cmp
add
dec
pop
mov
test
and
in
cli
imul
jp
push
sti
sub
inc
pop
mov
sub
test
gs
cmp
ret
pushf
roll
negl
pusha
decb
loopne
mov
xor
dec
mov
fwait
mov
cmp
inc
xor
or
pop
das
push
or
imull
aam
into
arpl
in
sub
insl
shlb
jl
mov
mov
andb
mov
mov
dec
repnz
mov
mov
cmp
repz
mov
mov
insb
jne
mov
push
shrd
call
cli
jno
sub
int3
imul
das
into
mov
or
pop
cmpxchg
cli
or
test
fstpt
sub
fcmovbe
mov
push
push
mov
icebp
outsl
push
imul
inc
aam
pop
stos
inc
pop
pop
pushf
add
sbb
stos
inc
xor
adc
sub
loope
andl
rcrl
jb
decb
xchg
int3
pop
jno
clc
scas
xchg
outsb
dec
and
cmp
imull
mov
sub
popf
jne
lfs
push
fcoml
loopne
push
sbb
aas
imul
and
xchg
roll
popf
scas
mov
imul
jp
test
xor
mov
xchg
or
mov
pop
sub
arpl
fstps
xchg
dec
sub
push
test
ljmp
push
mov
addr16
pop
movd
xchg
lret
jbe
mov
imul
lcall
lahf
push
xlat
int
push
xchg
jge
stos
dec
cmp
es
dec
inc
stc
jnp
xchg
popa
outsb
jbe
in
pop
dec
mov
cmp
mov
cmpsb
pushf
and
and
dec
dec
or
xchg
mov
pop
jnp
mov
adc
mov
sub
sub
call
les
ficoml
pop
jge
mov
lahf
fstps
xor
insl
or
leave
jae
dec
leave
shlb
ljmp
sbb
pop
stos
inc
and
int
and
icebp
push
jns
mov
xchg
lret
sub
inc
rorl
inc
inc
fldt
fs
das
mov
rcrl
int
out
or
xor
lock
sahf
ljmp
inc
cmp
mov
dec
leave
int
mov
lahf
out
jo
imul
aas
xchg
js
xchg
decb
cs
clc
mov
adc
fstpl
leave
enter
xlat
imul
call
mov
stos
inc
lret
lods
dec
or
push
mov
sbb
roll
mov
sub
or
aas
mov
push
mov
or
insl
in
mov
jmp
push
push
inc
enter
and
imul
jp
push
push
and
hlt
data16
movsl
sti
xorb
out
lret
lods
mov
mov
ret
es
in
lret
pop
or
mov
pop
pop
das
mov
pop
gs
in
out
lret
pop
rorb
arpl
fs
fistps
rcrl
repz
rclb
dec
jle
sub
and
imul
loop
or
out
icebp
jp
out
or
mov
jnp
add
lods
push
add
xchg
or
arpl
movsl
mov
adc
jl
sbb
and
leave
xor
dec
arpl
movsl
packuswb
mov
mov
insl
fsubl
out
xchg
mov
pop
xor
add
repz
daa
push
xor
cmp
je
mov
xor
in
lods
jl
cld
pushf
pop
pop
cmp
mov
lret
ficompl
xor
dec
rol
daa
lods
and
cli
outsl
xchg
sbb
sbb
outsb
push
mov
movsl
cmp
sbb
popa
pushf
aas
mov
push
adc
adc
sub
sbb
push
dec
jnp
stc
das
or
ds
jmp
pop
mov
adc
push
call
push
imul
bswap
or
js
fdivrl
jne
and
jnp
jb
push
cmpsl
imul
cli
push
mov
ljmp
xor
sbb
cmp
dec
xchg
dec
inc
mov
mov
pop
hlt
mov
adc
pushf
je
ss
decb
aaa
mov
adc
scas
popa
pop
and
lock
xchg
push
mov
cld
jae
add
push
lods
adc
imulb
stos
inc
scas
push
movsl
sbb
dec
xchg
cs
xorl
push
jmp
decl
adc
sub
int3
pop
rorb
mov
pop
add
int
enter
std
inc
insb
cmpsl
mov
inc
pop
push
scas
outsb
sub
pusha
pop
and
mov
cmp
pop
lock
or
or
mov
and
mov
pop
rcl
and
xor
rclb
movsb
das
popa
mov
xchg
add
mov
inc
xchg
cmp
xchg
test
xchg
sub
xchg
fbld
push
jae
fucomip
mov
sub
fwait
sub
push
shl
gs
fisubl
aas
mov
daa
enter
cmc
dec
sbb
insl
pop
sub
clc
sbb
movsl
std
int3
stos
push
or
fwait
pushf
scas
push
mov
sub
inc
xchg
sub
into
dec
inc
xlat
sahf
mov
sbb
fists
test
or
dec
sbb
jo
jl
xchg
mov
mov
fwait
push
pushf
ljmp
sbb
outsl
xchg
in
les
dec
mov
lds
jno
stc
jg
push
ror
pop
xor
sarb
sti
clc
push
add
roll
and
mov
sub
bnd
lret
repnz
aad
loop
xchg
sub
cld
push
mov
mov
shll
jle
fdivrl
and
ljmp
or
stos
imul
sbb
or
adc
jno
in
dec
shlb
xchg
ds
pop
mov
adc
mov
out
test
lock
cmp
out
outsb
jp
push
lds
dec
mov
adc
jo
subb
rcll
ljmp
jmp
aas
lret
mov
imul
cltd
out
sbb
xchg
mov
mov
mov
and
mov
adc
xchg
bound
lea
dec
gs
js
fldenv
sbb
or
xchg
imul
xchg
mov
sti
push
and
repnz
cmc
je
push
fcmovnb
sbb
repz
sbb
sbb
repnz
mov
or
pop
cmc
xlat
dec
cld
scas
fisttpll
sbb
xor
call
pop
out
repnz
sub
push
xchg
sbbl
nop
les
ret
sub
in
adc
stos
sti
divb
jb
icebp
pop
jo
addr16
or
inc
add
out
dec
cltd
jl
xor
mulb
lcall
lret
hlt
insl
adc
inc
sub
out
and
pop
xchg
xchg
cmpb
dec
in
cmpsl
lret
mov
sbbl
or
inc
jmp
cmpsb
bound
sub
pop
xchg
int
js
and
mulb
pop
fwait
dec
stos
xchg
mov
movsl
inc
out
mov
pop
add
cmp
adc
es
mov
int3
insl
arpl
clc
sub
in
out
fcoms
push
pop
add
dec
roll
dec
pop
mov
ja,pt
push
jecxz
and
sti
loope
dec
mov
js
sti
jg
mov
adc
jns
cmp
filds
dec
lret
ret
into
inc
add
push
mov
inc
fidivs
sbb
pop
clc
mov
mov
test
xchg
mov
mov
cmp
shll
jnp
xor
orl
repnz
out
dec
mov
gs
sub
int
push
pop
sub
bnd
cs
fdivs
das
ficompl
pop
int3
out
ficompl
pop
xlat
push
lock
enter
test
pop
mov
out
leave
out
mov
mov
pop
jl
jo
lock
inc
fcomps
jecxz
mov
int3
or
cltd
mov
test
mov
mov
aaa
xor
decb
mov
add
icebp
js
int3
add
pop
popf
inc
jnp
xor
jae
pop
push
push
and
lea
jo
addl
adc
cmp
or
adc
dec
leave
ja
mov
dec
out
jae
lds
xchg
jns
arpl
fwait
push
add
pop
xchg
data16
add
push
stos
arpl
int
repz
cmp
scas
fmuls
fs
sub
inc
rcrb
loope
sbb
sub
lcall
sarl
mov
dec
mov
mov
push
inc
ficoms
jnp
mov
dec
mov
xorl
xchg
movsb
popf
into
arpl
psraw
and
pop
movsb
pop
in
xor
add
out
cmp
sub
mov
pop
or
out
jo
int
xor
lcall
xchg
xchg
mov
jns
lock
push
and
cmpsb
mov
or
je
fldenv
push
cli
or
xchg
ljmp
mov
cmp
pop
ss
add
mov
mov
sub
call
or
sub
popf
imul
scas
popa
jo
aad
and
push
mov
addr16
add
mov
mov
outsb
aam
rolb
mov
sti
outsl
mov
add
xchg
xor
cmp
and
lret
add
jb
jp
jecxz
add
bnd
or
pop
adc
cmp
jno
mov
push
jle
cmp
fs
in
push
lret
xor
lcall
inc
cmpsb
aad
test
fstpt
into
mull
pop
dec
jl
ret
sbb
dec
sbb
mov
pop
xor
in
imul
jp
pop
or
mov
das
sbb
xor
out
sbbl
or
xor
push
xlat
fistpl
int
fsubrp
enter
out
sbb
dec
aas
adc
fisubl
xor
jno
adc
cmp
push
fimuls
lret
sbb
js
lods
mov
mov
mov
popa
push
jno
and
arpl
in
pop
fwait
scas
lcall
xchg
roll
xor
stos
hlt
insl
pushf
pop
push
out
test
ret
cmp
mov
out
outsb
nop
fs
sub
or
and
pop
addr16
push
push
xchg
in
pop
adc
adcl
out
daa
jb
aam
ja
or
mov
into
rorl
loope
mov
leave
ja
push
pop
movsb
jbe
inc
dec
outsb
jcxz
and
xlat
sti
sub
clc
xchg
inc
or
orl
dec
mov
mov
xor
cmp
jecxz
inc
push
jg
mov
cmpsb
pop
lods
pop
sbb
je
mov
subb
cwtl
hlt
xchg
push
lcall
push
adc
push
pop
mov
or
ja
into
pop
arpl
jl
xchg
ljmp
clc
cmp
push
xchg
jno
out
faddl
hlt
out
mov
xchg
push
ljmp
int3
aas
xchg
popf
negb
push
and
stos
inc
add
push
cmp
jb
and
mov
mov
sbb
adc
cmpl
stos
adc
scas
jo
and
insb
xchg
aas
out
inc
test
mov
shrl
pop
lock
cs
sti
and
dec
pop
mov
adc
popa
pop
fmuls
jns
xchg
xor
xchg
pop
sub
fldt
xor
push
fwait
cld
add
test
insb
jmp
add
sbb
push
cld
sub
cmpl
and
pop
shlb
mov
adc
sbb
cmp
lods
test
adc
adc
dec
push
mov
adc
mov
clc
adc
push
pop
stos
and
insl
add
push
roll
stc
fldt
jns
adc
xor
adc
in
inc
adc
jg
mov
push
push
and
dec
sbb
sub
arpl
xor
outsb
imul
cmp
fsts
mov
xchg
ret
out
rorl
fstps
dec
fsts
enter
in
lahf
loopne
or
or
sbb
pop
leave
clc
inc
sub
jmp
je
dec
std
cmp
pop
lret
add
mov
roll
pop
hlt
lods
mov
cwtl
out
mov
sbb
stos
inc
iret
and
in
jg
push
inc
int
rolb
sbb
mull
cmp
aaa
sbbl
xchg
mov
dec
xchg
or
or
mov
push
pop
aad
hlt
jb
rcr
or
rclb
and
xor
in
mov
js
bound
xor
data16
mov
aaa
jo
sbb
pop
insl
xor
mov
mov
movsb
in
cmp
pop
xchg
or
shld
les
xorl
ljmp
sbb
js
mov
mov
xor
outsb
leave
jp
sbb
in
ljmp
aam
movsb
stos
lret
or
mov
jl
xlat
mov
ficompl
jg
xchg
mov
sub
lret
mov
dec
pop
repnz
insb
imul
cmp
jbe
sbb
push
inc
test
push
shl
push
mov
xchg
int
sub
std
scas
push
rcrl
mov
fisubl
dec
aaa
cmp
mov
sbb
push
imul
dec
ficoml
cmp
lds
xor
mov
sahf
mov
dec
dec
test
jne
xchg
ds
or
inc
cld
jp
movsl
push
pop
mov
or
pop
test
fs
adc
in
or
aad
std
leave
push
std
pop
movsl
ror
repz
test
lahf
mul
sbb
push
aam
loopne
aam
xor
daa
add
xchg
ja
jge
lds
mov
mov
dec
or
ljmp
sub
cmpsl
pop
adc
xchg
dec
test
mov
sahf
dec
inc
mov
inc
jno
cmp
out
mov
sbb
out
lahf
scas
push
inc
or
xchg
sti
rorl
xor
adc
testl
lock
mov
mov
ja
mov
les
jl
xor
sub
xchg
cmp
ljmp
int
sbb
ss
sbb
xchg
incl
push
inc
cltd
insb
xor
pop
loop
xor
mov
lods
mov
shll
jnp
dec
inc
jb
mov
mov
jecxz
cwtl
pop
int
popa
xor
imul
into
add
jae
xor
jecxz
xlat
dec
mov
or
push
mov
fbld
push
or
stos
cmp
adcb
mov
or
mov
arpl
inc
ja
jnp
fdivs
leave
mov
push
ja
pop
movb
cmp
and
push
adc
mov
sti
in
push
pop
bound
xor
inc
sti
dec
or
fnsave
jne
jae
jmp
xchg
fcmovnb
fsubrs
pop
mov
xor
fs
pop
or
sub
xchg
dec
xchg
popa
cld
push
sahf
sub
pushw
aam
or
int3
imul
mov
push
push
sets
fisttpll
shl
cmpsl
mov
push
out
daa
mov
jle
xchg
jns
xchg
mov
lods
adc
push
fmulp
pop
jmp
or
dec
mov
pop
mov
push
xchg
insb
mov
mov
cwtl
mov
sbb
cs
inc
inc
icebp
xchg
or
movsb
je
mov
cld
sbb
pop
sub
jge
cmp
out
nop
pop
out
add
out
xchg
fbld
sub
icebp
push
jg
jbe
ret
mov
adc
push
nop
imul
dec
push
in
mov
jae
adc
sbb
stos
inc
mov
cmpl
aam
jne
mov
sbbl
jne
cwtl
sbb
rcll
jno,pt
lret
xchg
ss
and
sti
push
shrl
adc
stc
inc
mov
fs
fisttpll
mov
or
aad
repz
outsl
push
push
xchg
xchg
add
and
mov
out
lcall
cmpsl
mov
sub
repz
das
push
pop
lret
mov
retw
sahf
cmpsl
sub
icebp
sub
mov
xchg
in
or
aas
retw
push
jae
jo
aam
lods
add
negl
xchg
pusha
addl
xchg
movb
sbb
cld
icebp
adc
test
cmc
fstp
fbstp
xor
dec
adc
fiadds
bound
push
push
test
inc
mov
xchg
sub
push
dec
pop
cmp
and
pop
sbb
or
add
out
daa
mov
mov
sbb
lods
xchg
hlt
push
dec
lahf
jmp
les
push
je
adc
cmp
dec
cmp
cmp
sbb
or
aad
mov
fs
ds
int
sub
cmpl
jecxz
cmp
xchg
cmpb
xor
push
pop
sbb
inc
push
xor
inc
mov
mov
xor
xor
scas
or
test
mov
mov
xchg
xlat
fistpll
orl
shll
movsl
inc
dec
andb
pop
xor
inc
nop
sbb
xor
pop
in
stos
pop
std
pop
in
push
push
inc
shlb
jge
aam
pusha
andb
fnstenv
xchg
xor
negl
test
inc
jg
ss
xor
sbb
xchg
adc
mov
mov
push
jle
bound
inc
pop
cmp
fs
punpckldq
adcl
ljmp
sbb
call
sub
cwtl
int3
add
mov
addr16
add
jg
adc
xor
and
mov
jmp
xor
ficomps
outsl
inc
xchg
orb
scas
cli
hlt
in
lret
jo
repz
popa
mov
push
add
push
mov
lret
cmc
dec
iret
and
push
aas
addr16
mov
gs
out
flds
and
movsb
std
xchg
mov
test
ja
int
mov
push
movsb
sbb
xchg
push
loope
call
ss
push
repz
jnp
call
cmc
mov
ljmp
aad
arpl
fistpll
test
push
mov
push
jne
shlb
sbb
mov
pop
cmpsl
add
ljmp
push
sub
testl
loop
cmp
mov
xor
decl
mov
and
jb
ss
das
shll
test
xchg
and
inc
xchg
cmp
cs
pop
dec
sbb
jae
loopne,pt
ss
mov
mov
push
andb
inc
push
movsl
xchg
pop
push
cmpsb
xlat
push
mov
push
jp
pop
add
shr
mov
insb
or
out
cmp
dec
pcmpgtd
imull
jl
xchg
mov
jnp
movsb
nop
loopne
mov
sbb
fisubl
dec
out
ret
pop
jns
pop
ljmp
pop
test
xor
sti
test
mov
ss
jmp
ret
shlb
cmp
cld
leave
push
push
sub
cwtl
or
push
popf
mov
or
loop
xchg
push
lea
xchg
mov
repz
push
jbe
lcall
rcr
mov
mov
xor
xor
rcl
pop
lea
loope
xchg
sbbb
mov
je
lea
das
dec
add
gs
adc
sub
test
mov
jge
mov
inc
sbb
cmp
sbb
int3
int3
adc
test
cmp
push
cltd
sbb
mov
cs
mov
mov
insl
jge
pop
sbb
inc
call
nop
mov
aas
mov
dec
jecxz
mov
js
outsl
jmp
push
loop
and
push
adc
dec
mov
into
aaa
pop
mov
sti
jb
dec
push
pushf
mov
shrb
push
leave
adc
sub
shll
ja
not
mov
stos
add
rcrb
jo
out
lods
mov
test
ficomps
imul
in
es
push
enter
in
or
testl
jp
int
inc
xchg
dec
test
rcrl
jno
xor
sarl
push
mov
push
or
call
jno
sbbb
xor
push
push
add
xor
les
sub
test
jbe
sub
mov
rolb
mov
inc
test
fwait
jg
pop
ret
testl
cli
mov
xor
hlt
insb
mov
pop
scas
inc
daa
xchg
adc
aad
mov
dec
fwait
decl
adc
cs
mov
mov
mov
cltd
jb
ds
dec
push
daa
aas
add
push
cmpsb
cmp
jecxz
cwtl
ret
out
xor
ja
js
pop
cwtl
xchg
adc
jmp
lcall
hlt
aad
call
xor
in
or
jns
adc
pop
scas
inc
jp
jae
testb
mov
icebp
mov
push
rcrb
fwait
ds
jmp
add
push
out
jmp
scas
mov
inc
add
adc
mov
push
outsb
inc
cmp
out
or
int
mov
xchg
stos
test
mov
cmpl
sbb
pusha
das
int
cmpsl
jl
scas
add
sbbb
aas
cld
dec
xchg
dec
in
mov
lahf
insl
jnp
popf
aas
jo
add
sar
jae
stos
push
in
fidivs
cmp
pop
rcrl
int
dec
push
std
xor
shrl
in
cmp
cmpsl
cmp
fisubrs
adc
or
push
xchg
cld
dec
cmp
lcall
imul
mov
sar
sti
leave
scas
mov
push
or
aaa
push
cwtl
mov
mov
or
call
mov
cmp
stos
push
stc
mov
cmpsl
mov
int
and
ret
sub
pop
inc
mov
sub
loop
jbe
out
fmulp
test
mov
add
inc
push
add
popf
rcrb
jno
stos
stos
add
loop
stc
dec
aaa
adc
cmp
push
push
jg
push
inc
pop
mov
sub
and
add
filds
lcall
test
in
add
leave
xchg
sbb
mov
shl
pusha
mov
bound
push
jmp
sahf
pop
sahf
jno
sub
fs
xchg
cmp
sbb
sarb
insl
xor
jno
imul
mov
pop
and
sbb
mov
dec
mov
repnz
pop
add
mov
test
out
sbb
and
lods
cld
gs
inc
adc
ljmp
jge
test
popa
push
cmp
sbb
repnz
xchg
jg
int
lret
add
pop
adc
fmuls
adc
iret
pushf
pop
in
cmp
clc
mov
jge
outsl
jge
sti
xchg
mov
aaa
dec
sahf
inc
mov
test
fwait
pop
adcl
sbb
iret
call
mov
mov
mull
adc
pslld
sub
inc
out
xor
jo
addb
clc
add
data16
cmp
into
inc
mov
pop
push
mov
in
lret
or
enter
adc
mov
int3
movsb
xchg
xchg
jp
dec
and
lret
fdivrs
lods
pop
scas
push
roll
jecxz
or
mov
insl
add
sbb
sbb
lds
mov
adc
and
mov
and
jecxz
das
add
adc
sbbb
dec
mov
push
outsb
rcr
cmc
mov
movb
jo
cmp
push
ss
xchg
xchg
test
jae
aam
imul
add
fidivrs
jb
iret
popa
mov
jns
sbb
adc
inc
mov
and
jmp
jns
push
cmpsb
sbb
xor
cmpb
es
pushf
add
jmp
test
dec
test
adc
add
sbb
aad
scas
jbe
dec
shr
sbb
out
rcrb
mov
inc
xchg
sbb
xchg
push
sub
pop
push
cmp
fisubrl
pop
push
push
pop
popf
mov
mov
adc
rorb
dec
out
xor
js
xchg
jmp
sub
adc
xchg
call
bound
push
jle
pop
imul
sub
mov
ret
lock
adc
mov
xlat
jle
jnp
jp
sbb
jg
iret
inc
xchg
pop
xlat
add
inc
add
cmp
xor
vunpcklps
lret
out
dec
xchg
test
out
fldl
dec
mov
adc
xor
cmc
lea
rcl
and
sarb
adc
or
in
das
sbb
push
in
inc
fisttps
mov
push
cwtl
into
in
lfs
xchg
lods
sbbl
sahf
lock
mov
jp
jge
aam
jno
test
and
xchg
jge
js
xchg
test
imulw
fildll
xor
mov
sbb
idiv
sub
mov
xor
or
lcall
lea
jmp
pop
and
mov
add
stc
add
pop
xchg
cmp
mov
dec
push
sub
sbb
popf
popa
bound
test
mov
mov
add
add
or
push
jb
subb
mov
add
cwtl
outsl
rcrb
pop
ficoms
shrb
movsl
inc
mov
push
bound
jmp
mull
in
notl
inc
xor
aam
mov
into
jno
xor
mov
and
flds
in
dec
nop
les
out
add
sub
hlt
mov
movsb
div
mov
fldl
mov
inc
push
jns
mov
fisubs
xchg
cmc
sub
sub
stc
mov
xchg
mov
adc
cmp
inc
ret
or
pusha
cwtl
in
xlat
fmuls
sub
fists
addr16
dec
xchg
pop
pop
sbb
dec
stc
push
jl
cli
repnz
and
mov
pop
and
lret
loope
inc
popl
clc
mov
mov
inc
sub
or
inc
add
loope
add
sbb
push
dec
loop
test
pushfw
dec
int
or
mov
mov
rclb
scas
jnp
adc
outsl
push
rorb
push
or
inc
sbb
xor
xchg
das
int3
mov
es
outsl
push
fdivrl
jle
and
out
mov
sbb
adc
scas
pop
or
js
jno
add
mov
inc
cmp
aad
ljmp
lds
cltd
out
mov
testb
jae
jno
cmp
mov
mov
sahf
sbb
repnz
daa
sbb
mov
xor
out
in
movsl
or
sbb
lahf
sub
pop
addr16
insl
pusha
repz
adc
repnz
push
push
popf
push
fsubrl
inc
loopne
push
das
pop
and
xchg
outsl
xor
sbb
lret
mov
ja
repnz
mov
out
push
xchg
repz
sub
push
sti
stos
mov
lds
fbld
jp
adc
pop
jb
arpl
clc
mov
pop
xchg
aaa
cwtl
xor
in
call
out
xchg
mov
and
icebp
faddp
addl
mov
pop
add
pusha
mov
mov
xor
outsl
inc
adc
imul
add
or
rolb
sbb
mov
mov
cld
xchg
xchg
and
cmp
ja
dec
lods
dec
iret
mov
and
sbb
adc
mov
or
xor
sbb
inc
int3
loop
movsl
andb
push
in
mov
sbb
inc
out
xor
inc
imul
mov
lret
fmulp
mov
jo
scas
lds
xor
sub
xchg
adc
and
sub
jno
sahf
stos
inc
adc
dec
jnp
add
shlb
dec
or
or
ja
lea
dec
xchg
and
or
fsubs
lods
fcoms
movsl
pusha
adc
mov
nop
mov
nop
mov
das
int3
fwait
or
std
jb
xor
cmp
or
call
out
sbb
push
jb
negl
lods
cmp
scas
push
cmp
rorl
lods
sbbl
cmpsl
add
cmp
jge
xor
dec
jno
dec
test
and
push
pop
mov
xchg
mull
dec
jl
xchg
pop
or
test
adc
sbb
mov
das
add
mov
imulb
sbb
sub
jne
push
outsl
jmp
je
rcr
xor
add
or
in
xlat
ret
push
pop
dec
insl
mov
push
mov
movsb
cmp
lea
jl
stos
hlt
sbb
jne
add
shlb
dec
xchg
cmpsb
sub
inc
outsl
jmp
xor
xchg
jl
push
ficompl
movsb
sbb
ljmp
std
push
popa
cs
push
out
add
inc
lahf
fcmovbe
sub
in
fnsave
fwait
push
xchg
xor
push
add
adc
or
and
or
dec
xchg
dec
mov
mov
pop
jae
mov
notl
loopne
out
gs
jns
push
or
xchg
mov
fsubs
push
loope
mov
jbe
add
addr16
movb
addl
pushf
jns
sbb
adc
aad
xchg
inc
aaa
sub
loope
mov
lea
sub
jbe
sub
push
jge
lods
jl
repnz
pop
cmp
pop
out
jb
cwtl
push
sub
sub
stos
ret
sub
mov
sti
test
push
pop
xchg
testl
mov
sub
cmpsl
adc
icebp
jns
fiadds
lret
push
out
movsl
jae
fimull
mov
sahf
and
xor
in
lock
xor
mov
in
push
leave
pop
xchg
subb
sub
mov
dec
jb
outsb
loop
xor
ljmp
fcomps
push
jmp
inc
jl
jg
add
and
pop
pop
nop
and
insl
fnstsw
insl
adc
bound
daa
mov
enter
pop
icebp
adc
lcall
mul
loope
pop
fs
xchg
aas
dec
or
jecxz
inc
lret
mov
jns
idivl
dec
jae
mov
push
push
mov
aad
fyl2xp1
stos
push
sub
sbb
pop
cmp
sarb
adc
lods
dec
mov
std
into
clc
xchg
xchg
add
cmp
and
outsb
sub
adc
pop
xchg
sar
add
lods
lds
loope
mov
adc
mov
xlat
sub
in
fistl
testl
clc
mov
xchg
dec
das
add
js
mov
jl
shrb
xor
pop
jnp
lds
call
cwtl
inc
pop
ja
push
inc
dec
inc
pop
test
mov
pop
xchg
lock
lret
push
dec
data16
sbb
xlat
adcb
mov
nop
sub
cltd
dec
mov
inc
add
jns
cmp
jo
jne
cmpb
or
sti
popf
popa
mov
fistl
outsb
add
cmp
mov
divb
xchg
and
leave
dec
lret
mov
cwtl
or
mov
aad
scas
push
mov
and
jp
inc
dec
insl
mov
mov
cmp
mov
insl
push
push
popa
test
jnp
inc
aam
lahf
cs
mov
aad
sub
rclb
lcall
sbb
movsl
dec
cmc
add
sub
inc
push
or
pop
jmp
and
or
insb
sti
pop
mov
xchg
test
fcompl
jle
in
xor
rol
movsl
out
das
jbe
cld
lock
dec
pop
inc
sub
stos
jmp
and
cmpsb
mov
add
decb
cmpsb
xor
aas
push
cmp
ds
mov
sub
cmpsl
mov
sbb
and
add
loop
push
sub
xchg
enter
aam
out
out
jl
push
fcompl
mov
jb
out
mul
lcall
jge
xchg
in
call
leave
and
mov
sbb
xor
cmp
pop
lods
scas
lahf
cmpsb
mov
lcall
adc
jo
pop
or
and
or
xor
popa
je
cmp
mov
jmp
insb
std
dec
or
fldl
stc
mov
mov
out
ret
loop
ret
mov
nop
movsb
inc
jl
sbbb
insl
xor
pop
outsb
enter
aad
test
add
inc
inc
out
inc
int3
inc
fidivs
movsb
rcrl
mov
lahf
mov
lcall
bound
insl
lea
pop
dec
push
das
test
mov
into
mov
outsl
add
and
add
mov
loopne
lods
inc
sbb
pushf
enter
mov
cmpsb
pusha
xchg
sbb
sbb
flds
lret
xchg
jnp
dec
rcr
push
jmp
xchg
lret
lock
aas
mov
xor
rolb
fsts
sub
iret
adc
rcrl
cmp
sbb
sub
cmp
adc
pop
push
lret
imul
loopne
aaa
push
xor
cltd
mov
push
xchg
cmp
xor
lcall
sbb
jmp
iret
shll
scas
vpsllq
shrb
xor
fnstsw
pop
mov
mov
js
into
js
add
popf
popa
push
cltd
in
pop
daa
outsb
lahf
adc
popf
in
lea
jl
repz
xor
fs
repz
orl
fwait
mov
int
xchg
add
popa
js,pn
adc
sbb
xlat
inc
xor
mov
clc
lahf
int
std
adc
loope
push
jmp
rcrl
scas
push
cmc
mov
arpl
in
cli
sbb
test
aad
xor
mov
test
xor
add
cltd
cmp
cmpsl
xchg
adc
movsl
shlb
test
loope
je
in
adc
push
fistl
addb
imul
lret
lock
bound
sbb
fisttpll
scas
repz
xchg
aad
out
cmp
setns
outsl
cmp
inc
sbb
jae
testb
aas
out
pop
outsl
gs
cmc
outsb
inc
push
test
cmp
sub
jnp
jle
aas
aaa
xchg
cmc
roll
pop
sbb
pavgb
push
repz
mov
adc
push
into
orl
rcll
mov
cmc
addr16
stc
cmpsb
xchg
mov
and
lret
scas
cmp
mov
adc
adc
xchg
dec
or
pop
ss
movsb
mov
pusha
jg
add
adcl
stc
jmp
sbbl
xor
pushf
dec
js
and
test
pop
dec
scas
pop
shr
outsb
psadbw
push
in
test
cmp
mov
push
jne
xchg
lock
das
loope
or
fisttps
int3
and
cld
sub
mov
stc
add
ljmp
mov
out
call
fnstsw
jp
aaa
and
lods
inc
aam
das
jae
outsb
jmp
out
push
cmp
jl
sbb
mov
dec
int3
fwait
or
jge
movsb
movsl
mov
push
iret
popa
mov
mov
mov
ret
cmpsb
jg
lahf
pop
mov
loope
out
mov
in
rcll
and
enter
fwait
movsb
sbbl
pop
aam
dec
adc
pop
mov
xor
aad
adc
insb
cmpsl
ret
mov
jns
jl
in
pop
push
aaa
daa
add
scas
jo
ret
cwtl
dec
daa
jg
pop
lods
lret
add
jnp
cmc
addr16
mov
inc
mov
mov
in
mov
repnz
sbb
xchg
ret
push
arpl
cmp
arpl
es
add
sub
cs
inc
inc
in
or
repnz
jo
scas
push
push
cld
sti
test
mov
mov
outsb
xchg
and
loope
in
into
ret
in
adc
dec
mov
and
mov
aas
in
lcall
arpl
fadds
rcrb
imul
lahf
ds
add
mov
iret
fldenv
jp
insl
subl
or
add
xchg
adc
sub
es
adc
and
imul
arpl
fcmovnbe
ret
sub
hlt
push
add
dec
ret
fnstsw
shlb
lea
pushf
or
cmc
adc
sbb
xchg
cwtl
inc
mov
xchg
dec
repz
xorl
test
push
test
push
cmp
iret
jge
push
push
rclb
mov
outsl
fdivrs
and
ds
out
push
scas
sub
clc
mov
jmp
dec
daa
stc
aam
pop
outsl
mov
xchg
mov
add
fiaddl
pop
pusha
stos
pop
ss
in
orb
filds
repz
aad
cmpsl
cli
loopne
mov
lcall
jge
fstl
xchg
xor
cmpsl
pop
dec
xor
dec
je
push
arpl
rcrb
gs
dec
jle
jno
lds
pop
stos
add
lret
faddl
pop
jne
or
xabort
pushf
fmull
xchg
nop
push
jns
nop
xchg
jmp
faddl
jecxz
mov
sub
fwait
rclb
and
mov
sbb
pop
xor
mov
leave
xchg
cmpsb
adc
je
inc
xchg
xchg
lea
mov
add
push
dec
add
stos
xchg
loopne
jp
jmp
fstpt
adc
movsb
mov
and
movsb
lea
lret
pop
mov
push
pusha
jb
or
mov
and
das
xlat
mov
sbb
add
sbbb
add
inc
xor
adc
mov
jmp
cli
jmp
mov
aam
mov
adc
cmp
jge
push
nop
sub
adc
inc
jl
add
test
fcoml
loope
or
pop
adc
loop
jo
mov
mov
push
mov
xchg
pop
enter
mov
nop
std
fs
push
in
outsb
dec
dec
pop
xchg
outsb
mov
push
lahf
push
mov
push
xchg
fistpll
cwtl
lcall
std
sbb
lcall
mov
pushf
mov
rcrb
shrl
cmp
jge
xor
imul
dec
adc
dec
aam
movsl
pop
jno
adcl
out
callw
iret
inc
icebp
imul
mov
scas
std
mov
fsubr
mov
andl
push
jbe
loope
adc
js
jnp,pt
push
dec
out
iret
xor
neg
mov
ret
push
stos
inc
mov
inc
shl
aas
idiv
xor
pop
dec
push
bound
aaa
xchg
cmpsb
push
aaa
fwait
pop
stc
enter
ja
mov
push
jns
mov
push
sbb
sbb
xchg
push
jns
and
out
popa
fldcw
mov
rcr
fldcw
adc
mov
xor
es
sub
sub
dec
das
mov
sar
data16
push
dec
mov
dec
ss
mov
mov
and
loop
scas
jl
shll
test
out
negb
ret
inc
inc
addr16
jmp
mov
ds
ja
cmp
xor
je
fmul
shlb
je
test
shll
mov
or
adcl
mov
add
and
dec
inc
mov
push
mov
pushf
or
mov
out
popl
das
jo
out
inc
addb
cltd
pop
imul
dec
stc
adc
add
cmp
cmpsl
or
subb
fcomps
aad
popf
rolb
iret
xlat
xchg
lcall
std
add
inc
les
movsb
xor
dec
sub
mov
cmc
imul
test
pop
ljmp
in
nop
inc
pop
dec
or
xlat
pop
add
inc
adc
jp
das
push
addr16
shlb
das
sahf
sbb
lods
or
inc
je
adc
add
ljmp
push
adc
nop
leave
add
sub
ds
das
push
cmc
shlb
lret
movsb
mov
sbb
dec
psraw
jecxz
pop
lods
adc
pop
rcrb
rcrb
jne
fdivp
mov
cltd
jmp
leave
xor
mov
jecxz
ficoml
negb
jmp
in
xchg
pop
mov
push
loop
inc
ja
xchg
test
into
mov
nop
adc
xor
out
lret
add
mov
fcom
pop
add
divb
xchg
mov
dec
rcll
inc
push
xchg
or
pop
pop
xor
in
into
xlat
in
loope
lods
cmpsl
loopne
cltd
cmpsb
sub
stos
cmp
add
xor
mov
push
mov
rcr
hlt
arpl
mov
sarl
inc
sahf
cli
jbe
add
iret
aam
ljmp
js
dec
sbb
jge
scas
in
dec
inc
inc
xor
mov
pop
adc
cwtl
or
lahf
into
push
mov
dec
movl
push
popa
inc
call
loopne
cmc
loop
jbe
cmpsl
pop
adc
lods
fisttps
mov
sti
xchg
int
mov
notl
xor
jp
arpl
ds
pop
sub
dec
fmuls
sub
push
xchg
cmp
jbe
dec
dec
and
xlat
outsb
push
pop
jae
xchg
mov
add
loopne
daa
push
xor
ljmp
xor
jmp
stc
and
dec
jl
mov
sub
das
cmc
and
lds
mov
out
inc
int
cld
xchg
add
leave
sarl
test
lcall
test
mov
mov
fistl
xchg
adc
shrb
mov
jae
mov
sahf
frstor
and
adc
arpl
int
or
xchg
aas
mov
dec
sbb
lds
and
inc
sub
shrl
sbb
pusha
mov
in
mov
jbe
aaa
sarl
bswap
mov
out
movsl
lds
mov
mov
loop
cmp
mov
mov
xor
sbb
mov
dec
shlb
jmp
push
inc
pop
popa
sbb
shrl
test
add
mov
xor
les
pop
jle
lcall
negb
add
jp
push
scas
gs
daa
js
stos
mov
lods
fcom
add
arpl
push
dec
bound
push
jb
jb
or
mov
bound
movsl
iret
ss
stos
sbb
das
lcall
jns
mov
je
jp
repz
std
shll
cmpsb
mull
cmp
sub
imul
mov
int
stos
mov
add
insb
cli
cmp
jns
adc
fmuls
incl
in
movsl
js
sub
call
pop
pop
scas
sub
daa
mov
xor
cmpsb
add
je
jbe
dec
movsl
fcompl
xchg
or
imul
pusha
xor
push
roll
cmp
dec
fwait
popa
dec
push
int3
das
scas
dec
dec
test
sbb
dec
loope
stos
xchg
loopne
fcmovb
xchg
dec
out
outsb
xor
cwtl
mov
movsl
pop
mov
xchg
dec
rcl
in
xchg
mov
stos
or
xchg
js
pop
pop
inc
xor
pop
sub
and
pop
pop
daa
out
lahf
nop
loop
lods
insb
xor
ret
pop
jne
sbb
pop
fstl
psrlq
dec
flds
lret
lods
xchg
xchg
insl
shrb
jmp
sbb
jmp
fnstsw
xor
icebp
add
bnd
loope
cmp
shll
mov
out
push
cld
popa
push
loopne
jb
mov
insl
cmpsb
int
pushf
dec
cli
out
lods
in
repnz
aaa
sahf
aaa
cwtl
hlt
pop
push
cmc
lods
leave
mov
mov
outsl
fdivs
fnsave
mov
es
jnp
mov
jecxz
or
loop
les
jl
mov
cmpb
cmp
push
dec
inc
push
daa
bound
aad
scas
adc
ja
in
ret
cmp
movsb
sar
xor
popa
pop
sahf
push
dec
mov
sti
adc
mov
aam
icebp
cwtl
mov
es
out
scas
push
sarb
or
dec
push
mov
sbb
jecxz
xchg
test
xchg
jl
fnstenv
jl
mov
mov
pop
scas
mov
fcompl
pop
xchg
stc
xchg
std
xchg
xlat
xchg
sarl
sti
repz
mov
cmc
sub
mov
xchg
sub
pop
fsubrs
mov
popf
outsb
jnp
ffreep
add
pop
scas
jno
mov
lods
je
xor
or
mov
xor
lret
aam
cltd
push
and
repnz
jle
jno
sub
adc
pusha
push
mov
xor
add
push
inc
cmp
jmp
bound
or
sbb
shrb
aam
sbb
fs
rorb
pop
push
and
sub
jb
in
mov
aam
bound
inc
imul
mov
outsl
stc
mov
rclb
pop
and
mov
pop
cmpsl
std
xor
fdivs
sbbl
pop
cltd
pop
adc
mov
std
mov
inc
fstl
js
push
dec
outsl
mov
arpl
mov
pop
push
inc
int3
cmp
cmp
xor
push
ret
iret
fwait
and
loopne
dec
or
mov
loop
sbb
push
push
adc
and
sub
xor
jns
mov
imul
pop
push
sarl
movsl
sti
mov
mov
insb
adc
jb
sbb
divb
mov
js
xor
cld
push
dec
call
pop
inc
jns
push
loop
fildll
jae
out
xor
mov
jp
xchg
jp
lret
sbbb
in
add
sahf
lea
lods
mov
mov
inc
adc
xlat
mov
sahf
sub
add
aad
adc
addr16
lods
push
daa
frstor
jb
pop
jne
mov
dec
pop
hlt
in
cld
and
mov
xchg
inc
push
bnd
mov
mov
mov
mov
bnd
ljmp
js
hlt
mov
cmp
push
jecxz
sbb
xchg
sbbl
xor
cmpsl
and
arpl
pop
insl
push
cld
cmp
rcrl
jmp
jae
push
stos
adc
mov
adc
mov
aad
insb
xor
xchg
xchg
xor
inc
out
fstpt
rcl
jno
inc
hlt
adcb
addl
xor
cmpsb
lock
xchg
aas
insl
stos
fiaddl
shll
movsbl
xchg
or
mov
mov
leave
push
or
pop
jae
lret
cld
sahf
lret
pop
das
jp
or
push
push
nop
mov
out
test
inc
sub
je
cmpl
xor
movsb
lcall
sub
sub
testb
movsl
outsb
inc
adc
aaa
pop
inc
dec
aad
xor
mov
clc
repz
push
cltd
jne
mov
stc
jmp
xor
add
popa
movsb
mov
inc
mov
loopne
stos
sub
push
jp
pop
mov
out
js
xchg
leave
shlb
push
adc
addr16
ficomps
sahf
into
fisubrl
push
clc
mov
les
jo
int
mov
das
mov
lods
fildll
clc
in
test
inc
in
and
cmp
push
push
xor
sbbb
lock
push
pop
in
fdivs
mov
loope
mov
rclb
loope
addr16
andb
out
mov
mov
jns
mov
or
pop
xchg
mov
cld
pop
pop
push
in
popf
pusha
sub
sbb
test
shl
and
xor
cmp
or
gs
xchg
sub
clc
mov
xor
add
clc
jno
in
inc
sub
fcoml
popf
push
outsb
mov
js
push
xor
jno
rorb
int
push
add
lahf
call
mov
test
rcll
xlat
fcoms
xchg
sub
cmp
mov
and
ret
imul
jae
xchg
cmp
call
gs
sub
in
or
xor
add
inc
pop
lcall
push
data16
daa
out
dec
sbb
icebp
add
dec
sbb
test
fimull
out
pushf
test
cmpb
and
mov
out
cld
leave
jo
test
xchg
sbbl
ret
loope
xor
rolb
push
fisubrs
cmc
nop
lock
sbb
xchg
inc
cmp
ljmp
sub
push
add
in
mov
jns
adc
aaa
mov
mov
jge
or
sbb
repz
cmpsl
divb
daa
dec
lret
call
sub
cmp
fnstcw
mov
push
xor
dec
dec
mul
jo
testb
imul
adc
clc
loopne
test
pop
aad
inc
mov
mov
jp
cs
mov
clc
mov
mov
pop
mov
sub
mov
or
inc
inc
pop
insl
js
ret
add
sahf
jmp
movsb
jg
pop
and
mov
movsl
pop
inc
pop
jg
dec
mov
cmpsl
cmp
in
addb
rorb
dec
lret
inc
loop
mov
rcll
xor
jg
mov
sti
jmp
xor
stc
jb
xchg
dec
push
sbb
mov
sub
loop
repz
and
xor
inc
pop
mov
enter
xchg
push
inc
push
movsl
lcall
push
movsb
jae
lods
cmovbe
mov
jg
sbb
into
push
lahf
clc
loopne
pop
mov
mov
in
daa
cmp
fstps
arpl
add
inc
fcmovnb
pop
and
loope
or
ficoml
popa
out
and
aas
xchg
xor
or
cmpl
dec
lcall
pop
mov
add
enter
aad
lods
pop
lahf
test
rcr
push
inc
mov
add
in
sbb
cmp
fisubrl
inc
pop
loope
dec
pop
sbb
xchg
xor
mov
push
pusha
aas
mov
add
ds
pop
mov
pop
into
sub
jp
gs
xchg
xor
cmp
push
bound
adc
es
cli
sub
inc
and
jnp
negb
ficomps
addl
ljmp
test
ror
add
push
sbb
test
cld
aas
jmp
jb
outsb
daa
scas
jne
jle
or
and
adc
inc
xchg
xchg
or
popf
loop
push
fsubrs
rcll
mov
mov
jl
pusha
scas
jne
mov
fwait
repnz
popa
jo
push
pop
xchg
mov
cltd
add
cwtl
test
decl
and
pop
mov
scas
nop
sub
push
push
mov
push
mov
xchg
push
sbb
dec
mov
adc
pop
cmp
hlt
ljmp
sub
stos
sbb
inc
push
cli
sbb
xchg
clc
jo
xor
pop
mov
pushf
mov
xchg
adc
jb
mov
jno
cli
cmpsl
xchg
adc
loope
scas
xchg
mov
xchg
jecxz
out
inc
test
jmp
mov
adc
fdivrl
cltd
test
loop
cld
ret
mov
xor
out
insb
arpl
mov
ljmp
fisubrs
cmpb
std
aas
divb
fcoms
test
shlb
roll
fwait
std
clc
scas
adc
inc
or
or
scas
in
icebp
stc
jle
into
xor
jmp
arpl
and
jle
mov
ljmp
ds
push
dec
ja
fnstenv
aaa
sub
stc
pop
inc
repz
in
pop
xor
xlat
popa
cld
inc
movsl
fisttps
push
test
push
les
pop
mov
or
mov
mov
ficompl
and
adc
sbb
cmp
pop
add
lods
add
adcb
push
into
xchg
xchg
dec
loopne
test
sub
das
jae
mov
xchg
mov
negl
inc
jnp
add
loopne
orb
or
adc
jbe
cmp
pop
scas
adc
mov
pushf
pop
ljmp
or
mov
scas
mov
lret
mov
in
fs
pop
jbe
imul
inc
and
adc
pop
jmp
mov
xchg
sub
inc
cmp
sbb
leave
insl
sbb
jae
flds
push
adc
adc
orl
pop
or
aaa
and
jecxz
mov
in
out
fidivrl
lock
cwtl
outsb
je
repnz
ss
ret
xchg
movl
daa
pop
mov
mov
popa
aam
pop
int3
sub
incl
dec
sbb
stos
inc
rorl
iret
ret
pop
jne
cmp
movsl
or
rorb
add
push
shll
fimull
jns
loope
mov
mov
leave
or
rcrb
pusha
bnd
paddw
push
loopne
int
lds
mov
pop
int
adc
lret
fidivs
xchg
pop
inc
sbb
push
std
and
in
stc
sub
xchg
cwtl
in
pop
popa
leave
mov
jb
or
idiv
mov
loope
lods
xor
lret
jo
pusha
mov
lret
fwait
je
data16
nop
je
cld
or
jmp
inc
fwait
pop
es
pushw
test
add
in
int3
add
movsl
rclb
subb
fldl2e
testb
mov
std
fisubrl
inc
insb
inc
rcll
jno
mov
inc
dec
dec
mov
sub
jp
pop
aad
lods
iret
xchg
enter
bound
jmp
adc
sub
mov
adc
sub
test
lods
scas
mov
sub
adc
lock
lcall
jmp
adcb
rcrl
sbb
jae
and
xor
in
daa
xor
aad
xchg
std
or
fstpl
jg
jae
fsubrp
stos
imull
jns
mov
sbb
scas
das
xchg
jno
push
push
inc
dec
lret
rclb
mov
movsb
xchg
stc
loop
jmp
or
push
mov
xchg
shlb
dec
outsl
out
mov
mov
imul
fsubs
push
stos
pop
cmp
ss
test
lcall
push
dec
fstpl
and
lock
dec
rolb
or
cmp
insl
push
lret
rcrb
jno
lldt
and
mov
repnz
addb
fisubs
and
and
xchg
pcmpeqb
pop
mov
arpl
hlt
inc
outsb
mov
pop
loopne
pop
xor
and
cmc
lods
hlt
out
sti
mov
cli
stc
xchg
fadd
xor
jb
pop
mov
xor
pop
lret
push
int3
sbb
addb
out
xor
fs
mov
mov
lret
into
mov
insb
mov
xchg
lods
fcomp
mov
and
jg
or
pop
iret
add
mulb
sbb
out
push
cwtl
es
xchg
addl
loop
xor
movsl
stos
jne
adc
lds
push
mov
sub
cmp
push
into
pop
outsl
or
inc
mov
or
mov
xchg
xchg
xchg
pop
lock
and
repnz
popf
ds
fsubrl
mov
out
and
push
std
out
cmp
into
dec
outsb
push
mov
and
lret
insb
icebp
mov
daa
pop
dec
add
loopne
pop
sub
push
pop
pop
mov
cmp
lret
sbb
jecxz
out
stos
pop
or
jae
mov
adc
es
in
rclb
cwtl
in
pusha
push
inc
test
cmpsl
aas
data16
mov
data16
je
mov
dec
xor
out
addl
push
dec
xor
aaa
loop
mov
cmp
jno
or
imul
xchg
je
push
insl
scas
inc
add
inc
int3
mov
and
mov
push
cli
add
pop
mov
jmp
fsubl
and
jno
mov
inc
pushf
push
rorb
adc
movsl
push
push
imul
push
mov
fimuls
fcoml
ret
and
jbe
stos
xor
loopne
cmpsb
inc
push
fsubrl
aaa
sbb
rcll
push
pop
fs
cmp
loope
xor
pop
mov
jae
xchg
sahf
sub
inc
das
dec
data16
mov
cmp
mov
ret
sub
mov
push
or
test
dec
inc
add
cmp
or
push
or
mov
not
cmc
mov
andl
cmp
xchg
inc
and
mov
sbb
loope
movsb
or
ret
cmpl
pop
lret
repnz
add
sbb
cmp
cmp
or
jne
mov
outsl
add
jg,pn
clc
loop
ja
inc
jle
xor
adc
mov
mov
lea
mov
mov
lods
sub
mov
lahf
xchg
fwait
enter
popa
or
push
inc
push
xchg
jns
lahf
loope
mov
mov
mov
stos
inc
add
mov
fidivrl
movl
out
mov
xchg
push
cltd
lods
cmp
ss
fsub
cltd
je
imul
or
dec
shrl
pop
outsb
pop
es
aad
bound
shl
sahf
sbb
xor
mov
mov
cmpsl
push
enter
ljmp
pop
test
jecxz
imul
mov
or
mov
pop
das
cmp
scas
xor
xchg
jge
int3
mov
mov
ret
js
mov
test
nop
sub
jecxz
lock
nop
imul
pop
lahf
inc
scas
xchg
rcrb
mov
dec
adc
jg
inc
out
sti
dec
mov
out
jno
mov
out
mov
dec
fsubrs
xor
aad
out
sbb
inc
jmp
enter
pop
fimull
pop
xchg
add
sub
jae
adc
in
sbb
sub
sbb
adc
out
mov
add
movsl
int
test
in
in
shr
gs
sti
sub
ds
sbb
pop
mov
push
ds
ljmp
stos
pop
jb
inc
mov
xchg
and
xchg
push
xchg
xchg
jb
notl
cwtl
pop
inc
data16
xchg
mov
es
stos
ret
sbb
orb
sbb
ds
mov
jg
mov
mov
hlt
sarl
or
jbe
and
dec
cli
jmp
in
std
fsubl
sbbl
add
mov
pusha
pusha
sar
ss
dec
lea
fwait
shlb
jno
xchg
sbb
and
gs
sbb
add
fwait
dec
pushf
jnp
or
sar
ss
cmp
mov
out
push
pop
popa
push
bound
jge
sbb
inc
hlt
adc
jp
push
nop
iret
pop
push
push
movsb
je
inc
lea
outsb
iret
push
xchg
or
cs
sbb
pop
sbb
je
xlat
mov
fidivrl
adc
sbb
mov
adc
jp
popa
ja
ljmp
fnstsw
loop
mov
mov
imul
sub
sbb
test
orl
or
pop
bound
movsb
fwait
je
into
ljmp
sbb
ret
and
repnz
loop
cltd
loopne
jecxz
xor
mov
movsl
sub
xchg
test
pop
jg
outsb
adc
mov
cmp
repnz
adc
cmp
popf
sub
push
sub
sbb
stos
test
jg
push
or
repnz
out
dec
das
lret
push
mov
jge
gs
add
stc
or
sahf
div
sti
sub
mov
dec
rcrl
xchg
jae
adc
jmp
push
sub
and
sub
hlt
fldl
sahf
shrl
mov
dec
xorb
add
insb
xchg
fidivrl
jle
xchg
sbb
stc
scas
xchg
xor
inc
mov
jne
out
je
and
add
jge
les
adc
stos
lock
xchg
dec
out
cmc
jnp
out
iret
adc
popa
xchg
out
dec
stos
adc
or
add
cwtl
and
mov
mov
fbstp
popa
push
sahf
mov
xchg
cmpb
xchg
sub
js
push
xchg
shll
icebp
testl
rorb
inc
fmul
fisttps
mov
inc
ret
adc
rcrb
ret
stos
cli
cmpb
nop
jmp
test
stos
insl
dec
push
sub
add
lcall
add
jns
mov
sarl
add
sbb
lcall
adc
cli
cld
test
jnp
sub
fnstsw
out
in
lahf
negl
xor
dec
mov
rcr
lcall
mov
cs
push
rcrb
mov
outsb
and
hlt
inc
inc
fisubrl
pop
dec
inc
mov
das
add
adc
xchg
sarb
pop
mov
stos
rol
andb
add
aad
inc
hlt
and
sub
shlb
mov
lock
movsb
cmp
mov
dec
inc
in
hlt
sub
xor
pop
std
inc
das
shl
xor
mov
ret
loope
lcall
pop
shl
fmull
dec
cld
mov
push
repnz
jae
icebp
jg
xchg
jb
mov
or
pop
jmp
mov
adc
xchg
pop
mov
adc
andb
in
xchg
pop
sbb
fisubrl
mov
mov
imul
data16
aam
and
rcrl
cmp
ljmp
sub
adc
sbb
fcoml
ljmp
mov
mov
addr16
insb
lods
ja
add
sarl
clc
mov
sahf
lahf
sub
mov
push
imul
push
cmpsb
rol
pop
or
nop
mov
sbb
inc
bound
jb
mov
es
and
mov
pusha
lret
ljmp
push
mov
adc
inc
xchg
scas
lods
test
add
xchg
mov
insb
or
pop
stos
data16
lcall
jns
mov
bound
es
test
adc
iret
lods
pop
push
ficomps
inc
sar
xchg
fndisi(8087
pop
stos
and
test
mov
fisubs
lret
arpl
and
sbb
adc
pusha
xchg
push
insl
scas
cmp
out
mov
lea
imul
xor
into
ret
test
xchg
scas
addr16
jle
xor
sahf
add
pop
add
inc
popa
jnp
and
pop
pop
jecxz
pop
jle
cmp
sub
jle
add
mov
loop
outsb
jne
out
mov
and
insb
add
mov
pop
lret
sbb
xchg
in
push
jnp
outsl
jns
lret
imul
test
jbe
ret
aad
mov
inc
testb
mov
lret
lock
and
sbb
jb
test
out
clc
push
mov
movsl
ja
cmpsb
inc
addr16
lds
ret
sub
cmp
aam
fbstp
jo
pop
ja
jb
sbb
xchg
aaa
jmp
mov
imul
out
ljmp
incb
daa
iret
icebp
in
cltd
je
xor
pop
dec
sarl
pop
adc
or
shlb
divb
inc
fsubrl
push
inc
enter
jne
repnz
insl
xchg
jp
sbb
inc
out
lcall
inc
inc
jle
jg
ljmp
dec
outsb
jb
cli
push
xlat
pop
pop
jle
adc
push
rcll
ljmp
int
repnz
filds
aad
clc
push
aaa
jns
shlb
icebp
mov
push
fstpl
adc
jl
daa
pop
inc
mov
cmpsb
scas
ja
dec
mov
scas
scas
sub
pop
lds
ficoms
out
mov
sti
adc
ds
lods
cmp
or
jmp
and
sbb
or
sub
test
fsubrl
mov
inc
sbb
or
cwtl
sahf
inc
std
xchg
pop
push
xchg
pop
loopne
cmpsl
in
add
addr16
jno
outsb
and
cmp
mov
inc
sbb
in
push
ss
sahf
sbb
lods
sub
add
cli
mov
and
adc
mov
aam
add
cli
dec
fstpl
fwait
ja
incl
jl
js
push
adc
ret
mov
push
xlat
mov
pop
outsl
mov
xchg
inc
dec
sbb
mov
sbb
into
xchg
mov
jns
cmpl
and
mov
int3
mov
dec
and
shlb
sti
stos
repnz
or
test
cmp
add
outsl
movq
scas
add
nop
shll
movsl
add
or
inc
push
lods
shlb
mov
gs
das
aas
incl
mov
outsl
shr
add
mov
add
xchg
ss
jp
call
sbb
push
jb
cmp
lret
xchg
es
mov
mov
fxam
and
cmpsb
ret
inc
popf
adc
ds
dec
fstpt
cltd
pop
and
xchg
mov
mov
js
and
imul
sarl
sbb
imul
notl
mov
mov
xchg
mov
mov
cmpsb
jb
xor
mov
lahf
push
xor
lret
movsl
add
mov
push
mov
add
mov
popf
test
movsb
adc
sbb
pop
cld
jb
inc
cmc
adc
pop
mov
std
or
mov
sub
inc
cmp
sbbb
pop
sti
insl
divb
roll
ja
std
sub
mov
mov
xor
or
cld
pop
pop
repnz
pop
lahf
ret
push
jnp
fdivs
js
das
inc
pop
orb
js
mov
ret
fildll
roll
push
hlt
xchg
adc
ljmp
push
xor
cltd
imul
jg
push
xor
sub
mov
add
stos
lods
div
inc
lcall
mov
scas
push
and
lahf
sub
mov
sahf
sbb
enter
sbb
mov
std
mov
xchg
popf
divb
shll
scas
roll
je
negb
inc
popf
sub
js
icebp
hlt
inc
mov
cmp
cli
push
mov
pop
icebp
loop
mov
or
add
movsl
repnz
push
pushf
aad
orl
popf
fstps
dec
movsb
pop
pop
cs
sti
cld
scas
xor
cmp
and
mov
jg
movsl
cmp
pop
mov
cmp
in
jbe
push
lds
fisubrs
scas
outsb
daa
shrb
hlt
movsl
movsl
ja
mov
hlt
lock
or
adc
push
jne
jmp
lcall
xor
jecxz
sarb
adc
mov
mov
stos
xchg
cmp
int3
enter
test
je
fnstsw
inc
stc
push
test
lock
mov
xchg
addr16
loop
sub
in
or
pop
and
bnd
imul
icebp
arpl
sahf
das
dec
in
mov
iret
lock
add
icebp
inc
lock
xchg
iret
rorl
mov
lods
scas
aas
insl
pop
sbb
adc
pop
out
repnz
loope
imulb
push
jg
filds
mov
dec
push
dec
mov
repnz
dec
pop
sub
or
cmp
divl
stos
ja
mov
xor
mov
pop
clc
push
pop
popf
push
std
xchg
push
and
push
ja
xchg
aam
mov
addr16
orl
adc
lods
aam
sub
testl
add
out
adc
ret
xchg
jle
and
fldenv
loope
mov
mov
aas
sbb
arpl
jo
jmp
add
and
aas
mov
dec
xor
in
sub
add
shll
sub
loope
arpl
pop
int3
in
gs
push
jge
xchg
cmpsb
xor
pop
repnz
xor
nop
mov
int3
xchg
and
xor
mov
popa
nop
je
sbb
inc
mov
std
enter
ja
xor
lcall
lds
sbb
mov
stos
mov
insb
mov
mov
lret
cld
jge
add
mov
outsb
push
icebp
xchg
imul
jno
jmp
test
loop
cld
mov
cwtl
xor
out
adc
lret
imul
cmp
mov
lahf
ret
sub
out
loopne
cmp
fnstsw
call
lcall
nop
aas
cmp
xor
cld
or
leave
ret
or
fucom
inc
into
or
adc
lret
push
jne
mov
pop
divb
sub
popf
sbb
cmp
inc
push
push
push
xchg
and
imul
sbb
fsts
dec
add
jl
ret
jne
in
mov
sub
jo
into
cwtl
adc
mov
jnp
xchg
inc
bound
mov
jns
mov
dec
daa
mov
iret
sahf
pop
sbb
ljmp
mov
pusha
mov
add
sbb
sbb
mov
xchg
sub
adc
leave
adc
and
stos
out
mov
inc
dec
test
sub
lock
xor
sub
insb
movsb
cmpl
aam
mov
sub
add
mov
cmc
enter
or
sbb
and
xchg
pusha
leave
or
sub
bound
mov
vzeroupper
sub
and
sub
arpl
fcmove
aam
xchg
mov
negl
jle
dec
inc
movsl
mov
cli
push
inc
roll
sbb
testb
or
popf
pop
xor
dec
adc
pushl
pop
sbb
pushf
sahf
dec
adc
xor
daa
rcrb
xchg
xchg
sub
mov
aad
mov
mov
fwait
adc
lret
sahf
jge
sub
mov
pop
int
cmpsb
shll
jae
or
mov
add
or
insb
cmpsb
mov
jbe
stos
mov
out
xor
jl
outsl
pop
xor
mov
fdivp
pusha
dec
stc
in
imul
pop
bound
dec
dec
add
xlat
adc
adc
mov
scas
jb
or
les
ljmp
jno
int3
add
fstpt
fbstp
adc
mov
and
and
inc
int3
jno
pop
xchg
cmc
filds
loope
mov
stos
xchg
xchg
xchg
sti
test
mov
jns
xchg
cli
and
icebp
pop
js
in
pop
faddp
aad
sbb
and
decl
add
fisttpl
inc
scas
push
inc
into
mov
lea
rorb
hlt
push
cmc
cltd
mov
adc
jl
jne
pop
ret
jns
mov
adc
outsb
push
sbb
push
xor
and
outsl
cmp
std
xchg
stos
ljmp
mov
pop
testb
jno
sbbl
fwait
repnz
ret
mov
imul
pop
sbb
icebp
stos
mov
cmp
cld
cmp
fnstcw
insb
dec
pop
push
adc
cltd
add
fists
cltd
or
in
mov
cmp
push
nop
fwait
scas
das
sbb
mov
insl
or
xor
std
or
les
cwtl
xchg
and
sbb
sar
imul
push
cmp
lods
and
and
clc
and
ffree
pusha
sbb
filds
call
xorb
mov
out
mov
or
out
lds
js
int3
mov
and
cmpsb
push
insb
xor
or
std
aad
sbb
mov
fs
xchg
sbbl
notl
scas
push
push
rcl
push
inc
sahf
xchg
push
mov
pop
pop
es
test
sbb
mov
loop
movsl
addr16
xor
xor
fucom
sub
shlb
jb
lock
in
mov
out
or
fstpt
fs
xchg
jo
xchg
pushf
mov
mov
cvtpi2ps
movsb
and
sub
test
jo
adc
mov
mov
push
popa
adc
lret
cmp
rolb
cmp
xor
pop
lock
lock
rolb
push
cmp
sub
xor
inc
inc
inc
iret
sbb
mov
hlt
in
xchg
das
xorb
sub
and
pop
push
or
repnz
fmull
je
add
int3
sahf
pop
jmp
in
xchg
filds
dec
mov
clc
and
sbb
ret
jb
jnp
and
or
imul
pop
lods
and
mov
cmpsl
lahf
xchg
insb
cmp
das
jl
out
inc
inc
sti
cmpsl
cli
inc
pusha
lahf
push
cmp
bound
add
repnz
int
sbb
lods
or
mov
xchg
sbb
xchg
pusha
inc
aas
add
adc
mov
pop
push
std
out
sub
sti
cmc
inc
scas
repnz
aad
sub
mov
mov
dec
jae
dec
cli
scas
push
lea
xchg
test
mov
push
gs
mul
stos
xor
push
jg
fdivrl
xchg
pop
iret
sub
xchg
int3
dec
mov
rcr
xchg
jb
mov
sbb
adcl
ljmp
dec
push
jnp
xchg
fcomps
dec
enter
das
inc
dec
xorl
adc
iret
gs
adc
mov
jmp
sbb
mov
adc
dec
fiaddl
push
push
inc
cld
aad
sbb
out
jmp
jle
and
add
les
rcrb
repz
or
addr16
jp
mov
mov
xchg
cmp
es
mov
push
lock
shrl
and
adcb
mov
fisubs
push
mov
xlat
push
lret
cmp
cwtl
jle
push
jb
mov
and
inc
jo
cmc
aam
aad
sbb
inc
mov
hlt
dec
sti
aam
scas
or
add
test
mov
scas
andnps
dec
test
das
imul
mov
jno
jno
cmp
jg
push
bound
sub
fldl
jbe
dec
mov
and
imul
mov
sbb
push
jmp
sub
sub
push
jge
out
scas
or
xor
lea
das
imul
push
es
sti
cmpsb
cmpsl
roll
cmpsb
jle
mov
mov
fstpl
daa
mov
aad
popa
cmpsl
jo
gs
mov
out
in
mov
cli
cmp
in
mov
cmpsb
pop
mov
lcall
inc
push
mov
mov
sbb
mov
fisttpll
mov
pop
xchg
xor
hlt
cltd
adc
jo
daa
ljmp
mov
loopne
adc
dec
mov
ja
mov
cmc
ret
sbb
or
stc
xchg
sbb
mov
and
push
push
add
lahf
cmp
enter
push
mov
imull
or
pop
in
dec
xchg
fistpl
push
sub
or
cmovle
adc
into
cmp
mov
add
and
or
mov
mov
mov
ret
mov
jmp
pusha
cmp
hlt
movsl
ds
int3
push
xor
mov
mov
push
mov
sub
mov
pop
fdiv
repz
sub
cmp
imul
push
push
fdivrp
xor
jnp
insl
adc
cmp
cwtl
insb
cmp
call
das
cli
lock
xchg
mov
insb
sahf
mov
sbb
sbb
test
mov
pop
incl
test
add
dec
cmpl
inc
xchg
push
dec
mov
add
dec
jbe
les
fs
mov
cld
push
ljmp
insl
pop
push
les
pop
mov
iret
dec
scas
adc
rol
mov
into
fcmovnu
in
dec
or
test
or
in
test
stc
cli
cwtl
sub
cmp
into
sbb
ja
lods
or
jmp
lret
insl
adc
outsl
mov
lds
add
xor
loopne
test
mov
stc
fwait
sub
and
sub
frstor
mov
ret
cwtl
sbb
cmpsl
xchg
cmc
fdivl
std
jmp
cmpsl
out
dec
push
mov
enter
shl
inc
syscall
push
into
mov
sarb
jae
mov
mov
mov
int3
xor
cltd
test
cwtl
or
sub
push
push
std
jmp
in
mov
add
push
inc
pop
insl
std
jl
xchg
add
xchg
stc
cmp
mov
sti
cmp
sti
pop
add
inc
test
push
add
mov
lret
inc
movsb
mov
mov
adc
jo
sub
push
dec
fs
faddl
test
jns
outsb
push
cmp
jl
shll
ret
insl
je
lods
std
sti
lods
sub
fdivl
push
in
push
mov
mov
loope
rol
test
repz
xchg
pop
dec
xor
mov
outsb
inc
mov
mov
sahf
xchg
and
call
lock
imul
lahf
pop
push
cmp
jno
aam
xchg
jns
out
fsts
push
out
adc
push
fs
arpl
jmp
push
les
roll
cmp
and
xchg
rclb
cs
and
jp
mov
loope,pn
out
shll
cs
mov
xchg
test
sbb
popa
les
push
dec
pop
or
sub
add
sub
cmpsl
pop
mov
push
cli
test
sbb
mov
out
sbb
mov
dec
icebp
mov
ret
jecxz
rorl
dec
stos
xchg
jl
lcall
mov
sahf
scas
mov
rolb
push
icebp
and
push
cmpsl
repz
ret
xor
xlat
xchg
sub
add
test
cmp
imulb
jo
fwait
fcmovb
fstl
mov
jl
cmpsl
dec
mov
pop
repz
aam
mov
jecxz
fld
mov
cmpsb
push
shr
jbe
mov
scas
push
sub
sub
push
push
xchg
sbb
adc
pop
dec
mov
pop
pop
xchg
mov
cmc
xchg
data16
mov
mov
ret
fidivl
repnz
push
cwtl
push
xchg
fs
outsl
mov
mov
movsb
shlb
xchg
mov
iret
lea
push
xchg
leave
cmpsb
roll
in
ljmp
test
mov
out
addb
ficompl
sbb
js
insb
dec
das
xchg
in
xchg
pop
jno
push
mov
stos
js
testb
adc
out
xchg
jae
adc
out
aam
cmpsl
dec
mov
lea
jg
jae
dec
add
aad
stc
cwtl
mov
cmp
or
fcmovu
jle
sbb
inc
test
pop
fstps
in
mov
jnp
adc
movl
mov
jno
push
pop
and
outsb
hlt
add
repz
imul
dec
cltd
and
jle
lret
in
and
jbe
sub
and
or
xchg
xchg
clc
adc
popf
sbb
xor
push
into
cmp
in
inc
stc
pushf
movsb
jle
xchg
mov
mov
and
das
cmp
sti
rcrb
out
pop
jmp
jp
and
mulb
ljmp
cmc
shl
negb
fwait
xchg
lahf
fisttps
fwait
orl
inc
or
pop
add
push
mov
adc
jbe
enter
inc
fmull
stc
xor
insb
sbb
subl
pop
sbb
gs
lcall
mov
nop
loope
pop
dec
xor
loop
lcall
movsl
ja
xor
push
mov
xorl
push
and
lret
inc
cmpsb
aaa
cmp
shr
add
or
lret
pop
mov
dec
leave
or
rclb
inc
lret
sbb
movsb
mov
fildl
pop
xchg
jecxz
mov
not
mov
pop
pop
mov
or
ret
cmp
daa
cmc
dec
push
ret
sarb
cltd
sarl
jp
cmp
pop
cmp
cmp
sbb
hlt
add
fsubr
addr16
jle
rcll
xchg
xchg
add
or
mov
sub
daa
orb
cmp
fadd
aam
gs
inc
mov
mov
add
int
sub
push
inc
lret
adc
icebp
insl
in
and
jle
push
mov
ret
adc
mov
sub
ja
mov
aas
pop
mov
ja
push
add
lods
outsb
inc
cmp
iret
test
jb
add
cmp
repz
js
bound
lods
or
lahf
lds
ret
push
jmp
pop
outsl
cli
jbe
push
xchg
scas
lret
cld
jmp
pop
je
into
pop
lret
outsb
in
out
sbb
mov
aaa
or
pop
mov
mov
sbb
xor
inc
mov
push
outsb
xor
mov
sub
or
movsb
pop
das
or
mov
jg
imul
add
mov
xlat
cld
cltd
mov
subb
mov
outsl
arpl
rcll
iret
int3
lods
repnz
lahf
fldcw
sbb
jge
std
or
ficomps
cmp
adc
mov
mov
notl
and
xchg
sbb
push
scas
ljmp
ja
dec
gs
jle
imul
jl
add
and
mov
adc
cmp
js
int
mov
xor
roll
sub
jnp
clc
dec
jg
shlb
in
pop
test
enter
testb
jbe
leave
into
xor
orl
inc
out
fsubrs
cmc
test
shll
lock
jnp
shl
dec
pop
jg
pop
psraw
inc
jae
mov
arpl
mov
or
add
divb
jecxz
xchg
add
inc
cmp
push
movsl
call
sbb
inc
fimull
and
push
decl
jbe
jmp
popa
aaa
inc
mov
enter
ljmp
add
xchg
sub
movsb
adcb
xchg
iret
out
sbb
and
aam
dec
cltd
and
push
bound
stc
inc
jne
pop
push
mov
xchg
fisttpl
mov
fildll
js
sbb
add
or
mov
add
mov
cld
xor
inc
fisubl
add
mov
scas
in
xchg
adc
dec
pop
cwtl
rcrl
std
push
ss
xchg
and
xchg
and
leave
fs
stc
outsl
or
push
mov
loopne
dec
push
jae
imul
frstor
int3
jns
jl
pusha
clc
jge
das
nop
fcoms
sbb
leave
imul
jae
lahf
sub
or
leave
adc
in
cmpsl
pop
data16
xor
push
jns
cs
jae
mov
daa
jecxz
push
dec
jl
mov
dec
mov
ja
fldcw
stos
aaa
sbb
cmp
scas
xor
push
loopne
int
add
xor
inc
mov
push
test
sbb
dec
pop
add
push
cmp
imul
jae
pop
add
clc
pop
jge
dec
add
xorb
aad
pop
repz
mov
cmp
mov
sub
subl
shlb
test
aad
mov
ficoml
mov
icebp
pop
icebp
cmp
dec
or
lock
in
cmp
push
gs
in
mov
mov
jg
and
push
sbb
call
sub
adc
out
movb
pop
rorb
sub
sbb
in
mov
ret
mov
fmul
cmc
fidivs
fs
add
cmp
or
dec
mov
and
mull
xor
or
xor
add
dec
sbb
lods
mov
push
icebp
push
loop
les
pop
dec
gs
pop
xchg
xor
inc
add
sbb
push
pop
jl
adc
mov
mov
xchg
sbb
dec
pop
jbe
jmp
xchg
push
out
es
or
pop
cmc
mov
mov
stc
loope
pop
cltd
in
addr16
or
stos
lret
cmp
sub
popa
or
push
bound
repz
ja
mov
xor
or
inc
mov
shrl
in
out
mov
je
scas
or
push
lahf
rorl
aaa
ret
inc
xchg
call
xchg
in
das
sub
push
das
fwait
cmpsl
push
cltd
xor
inc
inc
out
xchg
ds
out
rol
mov
pop
xchg
fdivrp
dec
xchg
mov
decl
je
inc
jb
decb
enter
push
push
cwtl
mov
fildll
in
and
repz
xor
adc
test
lret
mov
out
in
push
ficomps
orl
cmpb
ret
aaa
in
adc
push
xchg
push
iret
sarb
call
popf
lds
insl
hlt
in
lods
cli
into
je
leave
or
int
cld
or
lret
loopne
cmpl
pop
inc
data16
xor
sbb
testb
push
xor
movsl
mov
adc
pop
subb
mov
lea
mov
and
jge
pop
lret
mov
mov
lret
je
icebp
add
clc
inc
imul
mov
mov
push
in
sub
inc
out
jb
int3
jp
insb
jnp
ja
jecxz
sbb
dec
imul
xor
cmp
push
sbb
cmp
sbb
mov
push
xorb
sahf
dec
addr16
cli
pmaxub
mov
cmp
sti
arpl
mov
out
fisubs
dec
mov
inc
aam
popa
jo
inc
mov
mov
push
inc
nop
das
mov
mov
xchg
data16
fs
or
loop
pushf
addb
mov
out
js
mov
in
and
into
push
jmp
shlb
mov
inc
xchg
xlat
pop
ja
shr
jmp
mov
inc
xchg
cwtl
mov
lds
dec
push
out
mov
or
mov
lret
and
or
bnd
xchg
xor
les
movsb
inc
push
movsl
mov
lret
inc
je
iret
mov
shrl
and
movsl
jno
jns
xor
in
ja
or
sbb
mov
cmpsl
stos
push
scas
lock
out
es
jne
and
lods
or
mov
mov
jbe
and
cmp
aad
mov
cmovs
addr16
mov
xchg
cmp
jno,pn
call
aaa
lret
testb
cltd
pavgw
std
test
sbb
out
icebp
jb
pop
jge
jbe
xor
cmp
adc
and
pop
sarb
add
rclb
pop
mov
dec
cmc
mov
rorb
fsubs
dec
jg
or
negb
test
lods
insb
ja
fdivrs
xor
stc
cmp
popa
pop
gs
fldl
sub
mov
fcoml
dec
lods
add
outsb
pop
fstpt
mov
pop
push
jl
and
cld
push
fdivrl
or
inc
push
ror
mov
aas
jg
test
inc
inc
jecxz
sub
imul
pop
popf
test
xchg
ret
ljmp
sbb
sub
test
clc
sub
and
sub
jbe
push
aaa
push
pushf
pop
cmp
das
ljmp
cmpsl
sub
lock
sbb
inc
pop
mov
pop
loope
out
loopne
sub
and
push
pop
dec
add
or
lods
xchg
ja
stos
aaa
imul
icebp
push
jle
push
adc
jmp
add
aas
sahf
adcl
add
sbb
adc
arpl
adc
shl
jo
lret
fbstp
xor
xlat
xchg
or
enter
jecxz
xor
in
dec
mov
sarb
xlat
aam
ret
not
cltd
repnz
aaa
movsl
push
xchg
cmp
fnsave
dec
pusha
cmp
xchg
sub
xchg
sbb
scas
les
ficoms
iret
cmp
movsl
out
insl
adc
ja
or
inc
mov
push
outsl
popa
mov
loop
xor
adc
test
or
mov
icebp
inc
repnz
int
stc
pop
add
push
pop
or
mov
push
dec
push
add
or
in
dec
xor
cmp
addb
fbstp
push
jge
gs
push
cmp
in
mov
add
ret
push
pop
leave
out
scas
jne
mov
hlt
aam
dec
gs
imul
cmp
js
pop
in
push
xor
out
repnz
adc
xor
mov
push
movsl
mov
les
sbb
out
pop
imul
lea
mov
xchg
xchg
int
mov
in
cmp
loopne
into
jnp
push
and
fwait
mov
sbb
adc
rol
or
cmp
cmp
mov
addr16
and
jle
ds
lea
lcall
jnp
rolb
pop
cld
or
sub
movb
add
fisttps
enter
es
insb
ss
pusha
in
push
ret
movsb
sub
pop
aam
pushl
lock
jnp
and
jb
jno
jecxz
dec
fsub
aaa
lret
xorb
scas
xor
cmc
out
cmp
xor
iret
jo
add
adc
cmp
inc
mov
clc
data16
mov
rol
sub
sbb
dec
pusha
push
cltd
shrb
gs
jle
out
xchg
adc
pushf
mov
fs
out
movsl
lods
inc
dec
add
leave
mov
add
xor
or
jns
fstpt
push
sbb
fldt
xchg
dec
call
loopne
lret
xlat
mov
mov
loopne
and
loop
bswap
test
ss
pop
int3
and
in
sahf
add
mov
in
sahf
pop
scas
adc
xor
pushf
pop
rcl
mov
jno
add
hlt
jg
pop
mov
mov
cld
mov
or
jle
scas
push
pop
enter
lock
cmp
mull
pop
dec
lcall
subb
sbb
dec
push
jp
dec
mov
test
hlt
cld
pop
pop
jmp
and
or
inc
lea
sarb
cltd
add
stc
pop
pop
leave
fs
adc
cmpsl
lock
imul
hlt
push
rcrl
imul
nop
inc
loopne
sub
push
push
shrl
ret
adc
mov
loop
emms
jmp
ret
test
fs
test
jnp
aam
outsl
adc
xchg
jmp
testb
jne
jmp
and
sbb
jae
jne
xor
pop
mov
jb
and
scas
adc
xchg
imulb
mov
sub
lock
push
add
xchg
es
pop
mov
pop
push
xchg
sbb
mov
in
cmp
mulb
out
lock
jle
inc
jb
out
and
mov
jg
fwait
clc
fwait
and
adc
aam
jns
xlat
stos
inc
xor
addl
cmp
or
into
cmp
sub
repnz
sub
dec
pop
jecxz
loope
rclb
sub
mov
xor
pop
push
inc
lcall
daa
jge
jmp
mov
fldcw
mov
or
bound
or
xchg
sbb
jns
sub
mov
loope
or
imul
inc
mov
ljmp
out
sbb
hlt
arpl
fisubs
sub
enter
adc
cwtl
aad
push
fwait
iret
fists
les
jmp
in
jecxz
iret
lods
dec
mov
repz
adc
imul
in
mov
xchg
jp
cmp
popf
cld
es
dec
pushf
jo
lods
pop
cmpsb
push
push
rol
or
mov
xchg
push
mov
sub
mov
push
dec
sbb
cmp
test
aas
pop
fsubrs
mov
xlat
lods
push
lea
mov
adc
jae
push
leave
pop
fs
mov
outsl
ds
movsb
pop
jae
jb
nop
dec
outsl
repz
mov
jno
out
cmp
pop
xor
xchg
xor
mov
imull
int3
push
aad
mov
mov
lods
mov
xor
out
scas
push
push
out
icebp
idivb
pop
sub
nop
adc
pop
mov
cmp
les
pcmpgtd
in
out
popa
inc
add
cmc
ds
sub
pop
or
daa
or
pop
cwtl
xchg
rorb
cmp
iret
data16
in
sub
mov
inc
pop
gs
test
lods
arpl
nop
outsl
into
jp
push
rcrl
mov
dec
adcl
or
and
mov
gs
push
lcall
into
lock
jae
lret
pop
and
mov
and
inc
cmp
fimull
cmp
cmp
push
adc
daa
xlat
inc
dec
shrl
or
fs
loopne
push
jne
es
mulb
in
xchg
movb
mov
addl
pop
jnp
push
xchg
mov
dec
stc
sub
mov
addr16
addr16
adc
add
lock
add
push
sarb
fistpll
subb
pop
xor
or
dec
or
mov
std
lcall
imul
inc
dec
mov
movsb
in
add
mov
add
mov
sti
jo
popf
cmpsb
xchg
lea
repnz
stos
cld
pop
adc
adc
mov
lret
and
call
fidivs
and
pop
push
fstl
and
and
outsb
dec
punpcklbw
and
and
mov
jg
dec
push
std
xchg
pushf
dec
cmp
mov
filds
ss
flds
ja
sub
or
je
imul
mov
addr16
cmpsl
or
xchg
inc
ret
and
testl
pop
dec
fs
pop
xchg
inc
push
jg
adc
mov
or
repz
imulb
and
or
pop
xor
ja
inc
xor
sub
xchg
out
add
mov
add
xor
pop
lret
xchg
sbb
add
add
pusha
pop
dec
daa
xor
pause
or
cs
adc
imul
lret
repz
cmp
pushf
pushf
sub
add
cmp
jecxz
fisttps
les
dec
mov
lods
ss
movsl
push
movsl
in
les
adc
mov
scas
inc
cli
orl
mov
sbb
mov
pop
pushf
add
outsl
gs
call
push
insl
push
icebp
cmp
ljmp
out
fildl
jmp
orl
cmp
cwtl
out
add
xor
int3
dec
inc
push
adc
adc
mov
mov
fbld
push
adc
fbstp
ret
push
out
xchg
lret
cmp
push
sub
popa
dec
fadds
xor
in
shl
cmpsl
test
mov
sub
pop
adc
inc
divb
xchg
mov
aaa
push
push
mov
in
pop
add
push
mov
into
fwait
mov
into
jmp
or
pop
ljmp
jmp
sub
aas
cmpsl
fwait
cmp
fstps
clc
cwtl
mov
int
dec
imulb
daa
push
or
adc
cs
adc
sub
or
shrb
arpl
arpl
inc
and
sarb
hlt
out
mov
mov
in
insl
hlt
sbb
jp
stos
insb
lds
xchg
cmc
add
mov
lock
sub
arpl
scas
shrb
outsb
xchg
int3
push
push
cmpsb
mov
dec
aas
add
popf
ficoms
pop
jl
push
imul
fdivrs
frstor
addr16
cmp
sbb
cltd
xlat
dec
xchg
arpl
jb
pusha
xor
addr16
repnz
dec
pop
or
dec
pop
cmpsb
mov
leave
mov
out
lea
xor
and
mov
inc
xchg
fucomp
dec
movsl
cld
push
xchg
loope
mov
test
xchg
shll
fcmovbe
dec
loope
hlt
add
call
add
nop
jle
cmp
cmp
test
sarb
push
xchg
pop
leave
syscall
fisubrs
add
inc
dec
int3
inc
jno
call
cmpsb
cltd
adc
push
xor
sub
dec
cmp
dec
sbb
ret
cmp
mov
shrl
dec
jns
mov
add
nop
out
cmpsb
ffree
mov
jae
jg
jg
lea
aad
leave
ret
cmp
shrl
xlat
pushf
xchg
jmp
cltd
clc
cltd
mov
jmp
dec
adc
push
subl
sub
test
gs
aas
pop
in
addb
pop
sub
jge
push
push
cmp
subb
or
dec
push
xor
jmp
call
faddp
cmpsl
mov
inc
movsb
cld
jne
mov
lret
testb
fwait
movsb
jmp
mov
ficoms
repz
daa
xorl
mov
cld
loope
push
mov
cmpsl
xor
sti
pop
orl
aam
shll
cmpb
xor
loope
mov
add
pushf
cmp
pop
pushf
add
arpl
scas
pushf
test
mov
jne
orl
cli
dec
mov
cmp
add
stos
add
fbld
mov
cmpsb
mov
out
cmp
ja
or
addr16
add
xchg
arpl
inc
movsl
mov
iret
fcoml
sbb
sbb
and
fsub
sub
jo
cmpsl
movsb
popf
mov
sbb
inc
inc
sahf
sbb
xchg
stos
jb
mov
mov
rorb
sub
dec
cmp
mov
mov
or
jmp
outsl
scas
shrw
cmpsl
sub
sub
sbb
or
lock
push
gs
or
cmp
push
aad
dec
lret
dec
in
cmpsl
cltd
nop
pop
ss
jbe
inc
repnz
or
sahf
mov
repz
cmp
push
insb
call
jp
addl
cs
mov
js
or
jae
inc
jne
xchg
in
jmp
xor
subb
in
aam
roll
cwtl
dec
cmpsl
shll
mov
xchg
ret
mov
jge
and
or
js
ss
add
das
xlat
and
adc
pop
pusha
inc
sub
sub
xorb
pop
insl
lods
les
loope
roll
lcall
or
sbb
jo
add
scas
mov
lea
mov
xchg
pushf
fcom
in
outsl
mov
mov
imul
cs
sahf
in
repnz
imull
enter
push
cltd
pop
imul
push
je
and
sub
lahf
lcall
adc
in
or
jns
popa
bound
cmp
icebp
hlt
inc
sub
fs
movsb
or
sti
xchg
xor
cmc
cmp
loop
jo
xor
xor
aas
movsb
mov
or
dec
or
add
inc
xchg
xchg
mov
sti
inc
mov
popf
or
fucomip
pushf
scas
jmp
imul
in
pop
rorb
ret
adc
call
je
std
loopne
scas
xor
xchg
and
sbb
mov
adc
pop
and
ja
imul
fstps
out
jge
mov
aaa
pop
pop
fdivrs
dec
add
leave
out
or
repz
sbb
fwait
adc
xor
imul
pop
jae
mov
lods
mov
jmp
mov
decb
xchg
lods
mov
jl
je
in
or
stos
jecxz
mov
inc
inc
imul
divb
lret
lods
sub
dec
out
sbb
stc
data16
dec
into
loop
loope
jno
xchg
loope
insb
push
dec
or
cltd
or
test
jne
mov
push
xlat
gs
sbb
jmp
fwait
mov
mov
bound
jnp
cmp
test
cmc
pop
or
rcll
subb
jge
stos
fistps
lods
sahf
adc
adc
lcall
jecxz
outsl
inc
cmpb
cmc
imul
andl
shlb
cmp
rcr
aas
sbb
add
rorb
mov
repnz
lea
mov
dec
aad
inc
mov
or
divl
inc
repz
mov
ss
push
orb
and
fsubrs
fucomi
or
push
and
xchg
sub
or
sub
push
repnz
popl
sub
push
pop
push
xchg
xchg
cmp
test
jbe
std
pushf
push
or
out
out
insl
mov
fisttpll
out
sub
out
test
fcomi
push
test
popf
sti
push
cmp
sub
push
scas
scas
dec
xor
js
aas
jmp
or
lret
aaa
into
into
jbe
ljmp
std
pop
mov
sub
pusha
mov
shrl
je
push
lcall
dec
adcb
add
pop
mov
jl
xlat
push
dec
sbb
test
test
or
int
scas
icebp
pop
jp
sub
mov
scas
filds
jnp
pop
jae
inc
out
lret
outsl
mov
jno
lods
insb
xchg
pop
mov
or
cmpl
mov
adc
popf
dec
mov
jp
lret
cltd
fsubrl
xor
fildl
mov
sbb
arpl
fs
xor
dec
inc
mov
call
in
push
inc
sub
pusha
push
and
out
pop
sbb
enter
jno
pop
sbb
pop
inc
jle
arpl
or
mov
sbb
cmp
mov
iret
bound
repnz
mov
insb
sbb
xchg
push
xor
or
sub
jp
arpl
jl
adc
dec
cld
and
rorb
aaa
cltd
stc
cltd
xchg
movsl
xchg
mov
and
mov
negb
ficoml
test
clc
sub
mov
cld
pop
xchg
dec
sbb
dec
ret
sub
loopne
rcrb
sub
movsl
ret
std
jae
inc
cli
sbb
jle
fsubrl
sbb
popf
out
pop
add
nopl
bound
jl
mov
mov
push
inc
xor
movl
fwait
xorb
insb
or
add
jp
test
dec
sbb
pop
push
test
mov
mov
data16
idiv
jne
cmpsb
cmp
into
xchg
mov
mov
bound
das
mov
out
sbb
push
incb
stc
movsl
cwtl
dec
js
mov
pop
sbbl
jg
jb
outsl
movsl
incl
pop
mov
test
daa
aam
xchg
sub
popf
sub
sahf
js
std
xlat
xor
and
jge
ljmp
pop
mov
test
push
lret
jb
std
jmp
js
xchg
or
pop
out
mov
sub
cmc
add
insl
add
lret
sar
fisubs
rcrl
mov
dec
mov
dec
dec
cmp
call
mov
fsubrp
or
mov
out
pop
mov
add
jnp,pt
jge
outsb
hlt
dec
sahf
mov
in
xlat
dec
or
test
notb
stos
insl
fmuls
and
mov
addl
jge
ja
xor
cmpsl
jo
dec
xchg
and
lret
pop
lahf
mov
sarb
push
mov
shrb
mov
in
mov
fwait
and
mov
js
mov
push
mov
js
and
jnp
or
sub
jae
pop
cld
xchg
jae
insl
stos
lret
mov
pusha
and
aaa
aas
insb
out
mov
jb
ljmp
popa
xor
cmp
lea
mov
test
jmp
test
ret
or
mov
in
pushf
outsb
jle
out
in
aad
movsb
push
cmp
pop
out
mov
sub
jg
das
and
popf
pop
xor
imul
ret
mov
inc
jmp
push
and
xchg
test
mov
popf
lock
dec
in
dec
mov
or
or
mov
inc
adc
mov
add
mov
lahf
pop
sub
pop
xor
lock
popf
cmp
aas
stos
mov
fisubl
addr16
sub
push
mov
jo
sbb
inc
shlb
jmp
sti
xor
jb
addb
or
sub
and
popf
xchg
adc
lods
movsb
dec
push
jb
jo
cmp
push
inc
xchg
punpcklbw
xor
nop
inc
sbb
xor
cmpsl
mov
mov
fwait
int3
mov
das
int3
xor
test
mov
sbb
rcrb
cltd
push
adc
iret
cli
inc
mov
pop
inc
add
mov
jo
dec
out
inc
jnp
leave
mov
mov
push
icebp
jbe
fstpt
mov
fistps
imul
inc
call
jbe
push
hlt
mov
dec
or
mov
xchg
lock
inc
and
pop
jge
nop
icebp
xor
xchg
leave
fidivl
xor
cmpsl
out
out
imul
leave
jl
push
test
mov
jne
adc
sub
push
cmp
xlat
sbb
xchg
je
mov
lcall
mov
testb
pop
pop
jecxz
cmp
lea
je
leave
adcl
in
jno
inc
jnp
ret
add
addr16
or
cmp
push
rcll
sub
clc
nop
adc
enter
fildll
sbb
dec
stos
jl
cmp
cmp
adc
imul
test
and
push
jg
in
sbb
mov
in
pusha
or
lods
mov
mov
mov
fisubrl
dec
inc
xchg
cli
lahf
lcall
mov
mov
ss
stos
nop
pop
dec
xchg
imul
sbbb
cld
jg
jmp
cmp
push
push
mov
sbb
dec
sti
mov
daa
or
pushf
jmp
add
jl
ja
outsb
mov
xchg
add
mov
sbb
pushf
and
aad
adc
push
adc
ficompl
fs
jl
cli
xchg
sbb
dec
adc
frstor
movsl
and
mov
movsb
lret
loop
pop
mov
mov
fsubrs
xchg
insb
xor
pop
mov
adc
inc
insl
into
je
mov
jmp
cli
push
add
cmp
out
mov
das
imul
cmp
or
dec
fbstp
call
jg
pop
xchg
jle
sbb
pusha
loopne
mov
dec
push
adc
cmpsw
nop
xchg
int3
call
inc
out
mov
sub
push
loopne
inc
xchg
pop
sahf
add
adc
sahf
xorb
je
neg
push
xor
add
pop
sub
or
mov
rcr
mov
mov
mov
jl
and
cmp
xor
lea
rolb
inc
ljmp
adc
mov
fcomps
pop
jnp
sbb
push
sbb
jnp
mov
lret
js
cwtl
jg
mov
rorb
addb
ss
and
sub
leave
enter
sub
push
imul
pusha
or
call
sub
arpl
in
adcb
fidivl
pop
jne
mov
sub
sbb
push
cmp
pop
xlat
dec
bnd
fimuls
popa
test
lea
insl
imul
adcl
nop
leave
mov
test
jmp
lea
fcmovu
push
cmp
sbb
jo
add
lods
stos
jl
and
xorl
sti
pop
pusha
popf
sub
jle
mov
inc
push
out
in
ss
into
cmp
int3
loop
popf
call
nop
push
call
xchg
pop
xor
clc
ffree
mov
ror
ret
fdivrs
jbe
test
sahf
nop
jl
jecxz
xor
arpl
jns
enter
fistpl
xor
cwtl
pop
cltd
into
and
in
out
inc
neg
addr16
gs
inc
int3
mov
js
or
inc
or
sbbb
ljmp
lock
adc
cmpsl
or
jae
mov
xor
adc
xor
shl
add
pop
adc
stos
push
jae
lret
loopne
lahf
push
fisttpll
loop
xor
inc
dec
sub
dec
mov
fsubrl
lcall
sbb
stc
mov
and
fidivs
dec
popf
adc
mov
cmp
scas
test
jae
fsub
or
clc
xor
scas
push
dec
lods
shlb
pop
sbb
lods
shr
push
pushf
int3
mov
add
cmp
pop
pop
dec
loope
pop
xchg
lds
std
xchg
pop
insl
lahf
xchg
stos
outsl
pop
stc
test
pop
and
decl
mov
jl
cmpsl
movsb
push
mov
add
xchg
scas
jmp
inc
je
mov
rcl
push
mov
outsb
add
mov
mul
jle
das
stos
xor
pop
or
jp
jbe
pusha
int
sarb
sub
jb
fsubrl
push
out
mov
xor
jb
dec
daa
mov
adc
in
pop
dec
jmp
popf
push
aaa
in
and
enter
dec
adc
sub
ds
jle
and
mov
pop
sahf
shll
mov
inc
shrb
sub
xor
jl
test
test
cs
mov
jno
add
movsb
roll
jge
add
add
mov
sahf
add
lcall
fstpl
lea
mov
fsubrl
movsb
pop
add
shll
cmpsl
jle
or
leave
bound
add
enter
jbe
inc
lods
xor
mov
mov
cmp
clc
stc
sbb
sub
push
mov
fs
sbb
iret
ja
inc
mov
ds
inc
sbb
popa
fimull
es
imul
pop
mov
mov
adcl
lret
mov
out
shll
sbb
mov
or
mov
sahf
mov
aaa
rorb
push
mov
sub
imul
je
cmpl
cli
push
popa
lcall
data16
add
out
adc
add
outsb
sbb
fadds
xchg
dec
add
fld
cs
sub
jge
cltd
jbe
mov
push
cmpsb
cmpb
cmp
cltd
mov
sarl
pop
cld
cltd
mov
repz
sarb
in
ljmp
mov
lods
lret
jg
int3
push
adc
aaa
mov
mov
adc
pop
call
popa
mov
jge
stos
mov
ret
stc
ss
push
xor
mov
dec
jl
dec
jb
push
outsb
pop
repz
push
pcmpeqb
andl
and
sub
mov
jge
jb
into
out
cmc
lcall
sahf
lret
fdivrs
rorb
cltd
mov
push
inc
mov
outsl
adc
xchg
ja
xchg
sub
inc
xlat
or
ds
lods
push
adc
dec
imul
std
sahf
sub
cmp
mov
mov
or
add
xlat
repz
xor
inc
hlt
adc
loope
mov
outsb
mov
cltd
bound
pushf
xchg
xor
mov
scas
add
iret
sub
movsb
dec
cmp
sbbb
test
jg
nop
mov
jl
inc
push
pop
pop
inc
loop
cmpsb
lea
adc
mov
jge
adc
fmuls
movsl
mov
push
in
out
bound
jb
sbb
outsb
mov
mov
xchg
mov
lret
jmp
xlat
pop
test
shll
jle
movsl
jns
jb
loope
jp
jbe
mov
mov
arpl
aad
xor
dec
jne
mov
in
mov
sbb
out
mov
out
in
gs
xchg
mov
int3
fidivl
jo
stos
test
jo
fwait
sub
pop
and
lds
xchg
xor
sahf
sub
stc
testl
test
cmp
jno
ret
dec
inc
push
in
mov
inc
mov
outsl
out
jg
push
mov
leave
jne
and
xor
xchg
inc
push
popf
mov
inc
jo
rcr
mov
ss
sbb
stc
jno
lahf
mov
addr16
and
test
mov
adc
cmovbe
test
lock
dec
int3
jge
and
lods
hlt
cwtl
fisubs
stos
repnz
stos
jo
jecxz
inc
das
jecxz
jae
pop
or
xor
pop
loope
dec
adc
cmpsl
pushf
test
sbb
sbb
mov
leave
mov
cmp
test
mov
cmp
add
xchg
ret
mov
das
leave
dec
and
sbb
xchg
jno
nop
xchg
pop
push
mov
frstpm(287
std
sbb
movsb
and
push
in
jnp
jecxz
jne
or
mov
in
push
icebp
jge
adc
mov
jno
cmp
jl
out
nop
mov
dec
sub
mov
lock
lea
and
jae
cmp
push
push
xchg
out
mov
and
out
mov
add
out
fs
jae
clc
test
movsb
popa
popa
jb
aaa
notb
sbb
push
push
inc
in
mov
pop
adc
xchg
cld
jno
fwait
jle
xchg
push
int
addl
popa
mov
out
fistpl
das
dec
jb
pop
push
loopne
leave
iret
jmp
or
cmc
jb
sti
loope
adc
lods
cltd
or
jl
xchg
pusha
mov
xchg
mov
std
mov
pop
cmp
mov
and
and
nop
jge
xor
shll
pop
adc
add
repnz
dec
ja
jl
std
pextrw
lahf
or
add
in
or
pusha
fisubl
and
xchg
or
std
mov
movb
xor
popf
aas
or
or
stos
dec
inc
into
xor
fcmovu
mov
lea
push
loopne
lock
push
cmpl
dec
cmc
fisubrs
dec
data16
add
mov
fs
push
cmpsl
out
inc
fs
push
sub
pop
lret
leave
rolb
negb
xchg
std
push
push
push
inc
in
shrb
mov
ror
shlb
fisttpll
cmp
push
mov
dec
enter
sbb
cmp
and
jmp
pop
sbb
daa
in
out
inc
dec
test
push
jb
fmull
je
mov
add
fstps
add
cmpsl
ror
fcompl
cmp
fnstenv
imul
ds
cmova
jae
push
movsl
cmp
cwtl
loope
xor
xor
cld
and
add
aam
dec
imul
mov
dec
dec
xor
xchg
fisubl
gs
inc
mov
jae
jnp
data16
jno
jg
xor
out
lods
stos
pop
push
push
xor
or
mov
ljmp
dec
push
out
xchg
sti
rolb
sbb
fs
popa
dec
repnz
test
out
or
test
js
pop
pop
sub
mov
mov
push
out
arpl
mov
adc
dec
sub
out
hlt
mov
movl
frstor
xchg
icebp
push
lret
inc
push
faddl
lods
iret
and
sub
jmp
ljmp
mov
fdivrp
addr16
and
test
pop
nop
add
jg
jp
add
scas
mov
cmpsb
xchg
fwait
int3
cmp
add
xchg
xor
in
cs
inc
in
pushl
sbb
jo
push
cmp
fsub
sbb
scas
int
push
outsb
or
xchg
das
xlat
in
jnp
popa
ffreep
sar
pop
in
daa
popa
xor
pop
rcr
inc
outsl
outsb
add
loopne
fnstenv
popa
int3
rclb
or
stc
popf
out
or
insb
mov
mov
sbb
aaa
cmpsl
std
adc
pop
std
and
shl
stc
inc
add
dec
js
addr16
inc
loope
lret
mov
inc
xchg
inc
sbb
mov
out
sub
xchg
cmp
lods
mov
sbb
mov
adcl
cld
js
lret
xchg
push
jne
fcoms
adc
test
or
pop
shr
cs
idivb
sbb
xchg
shlb
inc
mov
sub
pop
xchg
pop
cwtl
xor
lods
fs
mov
repz
mov
inc
repnz
inc
pop
cmpsl
pop
out
dec
int
int
ljmp
in
mov
dec
les
rolb
adc
ret
popf
xchg
shrb
cli
aas
lock
ss
and
adc
in
jg
mov
dec
mov
xchg
test
jmp
daa
add
sbb
xor
clc
mov
pop
fidivrl
inc
pop
adc
pop
data16
cld
mov
sub
enter
mov
push
int
xchg
mov
stos
in
jp
mov
sbb
mov
push
mov
xchg
std
pop
ret
inc
lcall
fdivp
mov
and
test
mov
pop
in
arpl
mov
dec
ds
loopne,pn
add
loopne
cmovno
dec
adc
ret
or
enter
jo
outsl
pop
sub
sub
dec
mov
sub
sbbl
inc
lret
mov
dec
adc
int3
add
test
xor
inc
test
sub
xor
sub
lock
into
ljmp
sbb
mov
xorl
pusha
and
ljmp
push
add
inc
adc
push
cmp
mov
dec
in
jp
cli
sub
imul
xchg
frstor
mov
push
outsl
mov
xor
or
shll
cltd
push
xchg
mov
stos
jg
adc
sub
pusha
push
out
adc
ljmp
into
stc
xchg
icebp
out
mov
inc
lret
jno
lds
subb
ret
adc
xlat
outsl
add
sbb
xchg
repnz
mov
fcmove
inc
cld
pop
sti
mov
into
sub
adc
nop
pop
out
out
test
call
int3
into
dec
push
and
loopw
add
xor
mov
fwait
addb
push
lea
push
dec
push
mov
adcb
sbbl
jmp
icebp
test
ds
cmc
dec
pusha
push
mov
arpl
aaa
loop
cld
fdiv
xlat
into
cmp
popa
es
pop
out
notrack
xchg
lret
inc
cmp
shrl
sbb
mov
inc
sbb
mov
in
ds
cmc
js
daa
jecxz
stos
dec
lahf
in
push
nop
pop
mov
and
cld
insb
adc
and
jbe
mov
mov
push
cmp
fcoml
ret
mov
and
rcrl
xchg
mov
mov
lods
push
push
out
mov
adc
xchg
mov
jo
lods
push
imul
nop
int3
and
cltd
and
xor
cmp
pop
sbb
scas
outsl
add
mov
sbb
mov
cmc
adc
lret
xlat
call
mov
shrb
mov
push
xor
sub
mov
jge
cmpsl
pop
bound
mov
mov
xor
sbb
pop
dec
repnz
fnsave
cs
mov
push
pop
cmp
pop
data16
hlt
sub
and
aam
enter
pop
cmp
mov
xor
push
adc
lahf
add
pushf
jbe
xor
xchg
dec
jb
pusha
cmpsb
mov
jge
dec
fsubrs
in
mov
faddp
push
push
repnz
loopne
mov
add
lods
test
push
inc
add
pusha
mov
cltd
imul
add
xchg
jp
sbb
popf
xor
in
ret
xor
scas
mov
lea
repz
stos
mov
lods
mov
mov
test
dec
dec
mov
repnz
sbb
test
imul
jecxz
and
cltd
fstl
lods
insl
dec
xorb
imulb
mov
sub
mull
paddd
sub
sub
in
mov
scas
fwait
aas
cmp
add
vunpcklps
js
sbb
mov
dec
mov
sbb
or
loopne
mov
add
jl
loopne
pop
bnd
popa
or
sub
mov
mov
cmp
push
fbld
outsl
xor
adc
daa
xor
push
fcompl
xor
test
pop
sbb
scas
stos
inc
ljmp
adc
push
mov
shrb
repnz
adc
push
add
and
adc
mov
and
leave
imul
mov
pop
pop
pcmpeqd
idiv
sub
cmp
mov
sub
idiv
scas
stos
dec
sub
in
push
aas
dec
scas
out
or
fcompl
mov
rorl
fisttps
test
xchg
inc
mov
xchg
dec
popa
jle
fisubrs
inc
adc
gs
xchg
adc
add
push
cmp
fistps
fsubs
jge
aam
mov
cmp
cli
bound
loop
push
outsb
add
movsb
cmp
cwtl
sahf
cs
push
xchg
xchg
lcall
arpl
addr16
push
in
ret
sub
dec
adc
movsb
dec
dec
pop
sbb
xor
popf
fwait
sbb
add
in
xor
xchg
add
xchg
mov
xchg
in
popa
jno
jb
test
add
in
bnd
gs
push
loope
shll
or
xor
add
imul
sub
dec
add
dec
sbbl
cltd
lahf
mov
mov
mov
push
push
test
rol
adc
fnstsw
inc
call
divl
fucom
mov
mov
out
jns
ljmp
stc
int3
or
lods
es
stc
je
pop
lock
rcll
ja
aam
push
decb
fmul
cmpsl
push
jle
lds
sub
out
outsb
sub
pop
add
sub
stos
push
inc
add
ja
jo
and
dec
sub
fiadds
push
mov
je
in
mov
in
pop
loope
lcall
mov
sbb
add
sub
push
xchg
pushw
cmp
pop
push
idivl
lret
mov
out
or
shll
imul
push
push
xor
xor
and
jecxz
push
fiadds
xchg
sbb
mov
ss
mov
xchg
ret
or
out
xchg
aaa
mov
hlt
mov
pop
out
jp
cld
sarl
fbld
push
popf
add
cli
push
fcomip
lea
imulb
xor
cmp
data16
sti
fwait
int3
popf
xorb
in
stos
repz
xchg
and
mov
and
ss
pop
shr
or
sbb
jnp
cmp
das
in
pop
leave
jne
dec
push
mov
arpl
je
mull
stos
nop
mov
inc
mov
add
hlt
sub
loope
xchg
fimuls
or
andl
aaa
or
mov
insb
adc
icebp
xchg
mov
into
adc
sbb
aam
pop
mov
xlat
test
iret
cmp
xchg
and
fs
pop
notb
imul
push
neg
mov
and
xor
std
nop
mov
adc
jecxz
arpl
out
sub
mov
cltd
mov
pop
fs
cmpsb
lds
mov
mov
cmp
add
fwait
popa
sbb
xor
int3
mov
rorl
mov
push
and
rcll
in
jo
xor
jle
sub
mov
mov
stc
xchg
mov
jmp
addb
adc
pop
mov
mov
xor
scas
mov
and
mov
inc
sub
xchg
lea
or
scas
hlt
mov
test
pushf
add
jmp
icebp
mov
test
rcr
inc
int3
ljmp
sahf
into
je
mov
xchg
mov
jb
lret
rorb
push
cmp
push
inc
insb
lods
pop
adc
into
jb
fbstp
out
adc
hlt
rorb
pop
push
push
sub
adc
cwtl
mov
stc
xchg
mov
out
and
or
fistpll
ror
fs
aas
pop
int3
xor
xor
out
dec
push
adc
movsb
pushf
imul
out
dec
hlt
xchg
xorl
inc
jecxz
add
inc
nop
aam
std
orb
fwait
pop
call
and
or
sub
mov
xor
pop
xor
mov
and
lods
sbb
addl
cmpsl
jo
mov
push
in
fcomi
jno
fistpl
and
lret
inc
adc
imul
insl
mov
cmpsb
inc
mov
int3
in
loopne
enter
les
cwtl
xchg
push
adcl
bound
pusha
ss
out
push
fistl
mov
popl
and
test
ficomps
sarl
movsb
clc
cmp
loop
mov
out
and
popa
dec
adc
pop
repnz
data16
xchg
jmp
cmpsb
jne
popf
sub
xchg
test
stos
and
mov
jbe
xchg
sub
outsb
cmp
bound
repnz
je
sub
psubd
push
ja
scas
arpl
sbb
scas
inc
inc
mov
mov
in
xor
fwait
inc
scas
ja
daa
xlat
hlt
fwait
jae
cmp
int
inc
imul
pop
ljmp
and
fisubrs
and
mov
pop
or
icebp
fdivrs
fwait
test
leave
xor
push
or
jae
add
dec
adc
xor
hlt
pop
mov
dec
nop
test
sbb
test
and
add
push
cmp
jo
inc
push
lods
imul
mov
ficoms
pop
mov
sub
sbb
mov
repz
out
vpaddd
mov
push
stos
sub
hlt
inc
jnp
loopne
lahf
aad
or
jmp
cli
sbbb
sub
cmpsl
loopne
mov
mov
iret
nop
mov
mov
sti
insb
pop
in
adc
das
xor
imul
fcmovnb
inc
mov
push
mov
imul
lret
push
adcb
jl
mov
fsubl
testb
xchg
push
sbb
xchg
ficoms
pop
lock
test
fidivl
subb
mov
mov
dec
outsl
jne
shrl
add
test
xchg
cwtl
pushf
cmp
mov
add
sbb
popf
or
cld
adcb
sub
pop
xchg
or
xor
stos
jns
mov
out
cmp
pop
add
cmpsb
jnp
faddl
scas
fnstenv
or
xchg
lea
and
xor
das
icebp
jae
clc
das
test
lods
dec
sub
mov
and
and
dec
test
sbb
mov
cmpl
xlat
fcmovnbe
js
aaa
mov
or
mov
push
pusha
lcall
insl
das
sub
and
loope
xchg
dec
or
push
enter
pop
jb
pop
sub
inc
ja
push
pushf
aaa
mul
jecxz
cmp
int3
cmp
pop
sub
push
push
outsl
jp
insl
add
rcrl
cmp
adc
xchg
mov
add
out
call
adc
loopne
in
ljmp
outsb
pop
inc
inc
lods
mov
jae
hlt
push
ds
adc
adc
stos
stos
adc
ficoml
pop
jae
xchg
cmc
or
sbb
movsl
cmc
pushf
dec
jl
xorb
int
sub
pop
xchg
sahf
xchg
inc
jge,pt
mov
test
idivl
push
andb
sub
out
sti
and
sub
or
hlt
mov
xor
lods
les
out
orb
pop
and
pop
lahf
div
clc
js
fs
sti
pop
lret
fsubrp
cmpsb
pop
mov
or
dec
dec
cmp
sub
out
add
rol
dec
push
add
cmp
in
das
loop
sub
cmp
dec
iret
faddl
mov
jno
inc
or
adc
ss
jmp
loopne
lea
cli
fcomps
push
test
insl
jae
hlt
addr16
decl
ds
inc
inc
pop
push
shlb
outsb
pop
mov
sub
jnp
in
jo
fistps
push
cmp
popa
adc
and
icebp
push
or
xchg
cltd
xchg
lret
push
mov
jge
adc
outsb
call
mov
pushf
incl
add
push
aad
xchg
mov
inc
adc
insb
add
xchg
pop
add
and
cs
push
or
pop
leave
repnz
pop
stc
ret
hlt
jl
lcall
mov
outsl
cli
mov
xor
or
in
les
mov
push
push
fdiv
rol
inc
jnp
push
mov
push
lahf
repnz
mov
mov
inc
pop
xlat
fcmovnu
or
inc
or
xchg
addr16
pop
rclb
rol
pop
xchg
sbb
jmp
dec
push
rcrl
es
je
leave
adc
insl
sub
sub
nop
ljmp
cld
cmp
dec
push
inc
mov
or
adc
lret
int3
xchg
pop
mov
dec
xor
clc
mov
mov
mov
mov
mov
pop
ss
sub
add
fbstp
cmp
mov
adc
xor
add
ss
sbb
and
inc
xchg
ret
jge
mov
out
arpl
out
lds
pop
pushf
xchg
jmp
rcrl
inc
and
shll
fdivr
pop
out
leave
clc
lcall
cmp
addr16
test
mov
mov
fxch
mov
push
out
mov
ret
ljmp
sbb
aad
add
push
cmp
ljmp
cmp
sbb
std
inc
and
add
adc
xor
aaa
and
pusha
push
jmp
les
jnp
xor
adc
and
daa
dec
pop
pop
pusha
imul
es
int
fwait
cmp
cs
push
loopne
subl
cwtl
daa
jmp
xlat
stos
push
adc
dec
jb
lods
and
outsl
xchg
jmp
enter
push
dec
pusha
adc
les
add
imull
jns
ljmp
adc
shlb
fwait
or
mov
push
lahf
fildl
fdivs
scas
mov
popf
cmp
add
out
xchg
lods
out
mov
enter
negb
lcall
fbld
adc
lret
jge
data16
int
adc
xor
fs
xor
pusha
xorl
repz
pop
pop
movsb
iret
movsl
pusha
sub
push
cli
sbb
ds
mov
pushf
or
leave
andl
pushf
popa
push
mov
sbbb
sbb
in
sti
out
pop
adc
rcr
cmp
jg
dec
bound
lret
insb
lret
pop
fwait
sti
lret
xor
add
jmp
dec
jnp
and
or
repz
adc
enter
in
jns
incb
sub
pop
addb
or
lret
loope
lret
out
rcrb
loopne
xchg
cmp
in
cmp
or
test
int
adcl
aaa
dec
push
push
sbb
add
cmp
pop
sahf
aam
repnz
add
out
ret
divb
je
loopne
lea
mov
stos
push
mov
pop
dec
je
and
xchg
stc
fldenv
pop
out
inc
cmp
push
cmp
in
std
mov
fs
mov
pop
mov
sbb
add
fstps
xchg
test
bound
hlt
std
dec
scas
in
ss
test
in
push
jae
scas
and
inc
mov
add
in
sbbb
ss
shl
sbb
aas
in
sub
iret
in
mov
jmp
dec
cmp
or
sarl
push
push
mov
fucomip
fstpl
push
jmp
pushf
iret
clc
jp
xor
inc
int
dec
mov
les
dec
fs
dec
inc
stos
inc
ret
test
movsb
mov
out
inc
or
dec
ss
cmp
lods
xchg
loop
add
xor
mov
test
repnz
cmp
mov
cmp
pop
js
push
daa
pop
jge
cmp
and
dec
mov
inc
in
jmp
in
in
movsb
xor
sbb
sub
in
in
lret
es
and
lea
pop
nop
mov
dec
hlt
pop
mov
adcb
sbb
or
lret
test
dec
loope
lods
xchg
ret
push
bound
clc
ss
std
sbb
jmp
rcll
call
sti
cs
std
iret
xor
jle
addr16
jno
adc
popaw
xor
xor
add
in
negl
in
sub
ljmp
cmpsb
out
sub
mov
or
roll
adc
mov
mov
pcmpeqw
mov
dec
xor
jmp
lcall
add
cmpsb
movsb
add
in
sbb
data16
orl
xchg
lcall
mov
call
xor
shll
ret
ljmp
dec
lods
into
pop
icebp
mov
nop
loop
adc
les
cmpsb
stos
adc
jno
mov
fists
cwtl
out
xchg
lcall
or
cmp
lcall
xor
imul
mov
fdivr
adc
lea
fsubl
aad
fcoms
xchg
jmp
inc
fcomip
mov
int
mov
scas
mov
cmp
jo
add
push
aad
popf
inc
push
lret
inc
inc
mov
add
add
pop
mov
adc
mov
or
lahf
sub
cmp
and
jge
cli
insb
inc
lret
imul
sbb
hlt
or
or
dec
insb
insb
not
push
daa
xor
adc
pop
pusha
scas
fmull
mov
xor
je
loope
adc
mov
xor
loop
xchg
mov
cmpsl
and
xchg
push
nop
out
loop
add
xor
and
repz
jnp
mov
movsb
repnz
loop
leave
out
out
mov
lret
mov
adc
popa
inc
arpl
lds
cmc
stc
sbb
adc
sub
dec
into
movsl
sbb
cmpsl
repz
add
add
sbb
in
cmpb
mov
adc
aam
fisubrs
shl
mov
pop
adc
das
fsubrs
loop
mov
mov
fsubr
mov
mov
arpl
fs
mov
addl
and
mov
dec
inc
mov
dec
mov
jmp
pop
sub
sahf
ljmp
nop
jbe
call
add
into
push
mov
push
loope
cs
in
lock
aaa
arpl
loope
gs
decl
movq
adc
add
test
cli
in
cmc
adc
outsb
ret
aad
jle
push
sub
pushf
pop
jbe
shlb
loop
cmp
decb
push
jnp
insb
push
mov
and
inc
sbb
lods
ficomps
shrl
push
jae
pop
and
stos
clc
add
jle
lods
out
pop
movsl
test
fst
dec
push
or
mov
ja
insl
aas
bound
movsl
adc
fldenv
add
enter
push
or
cmpb
xchg
test
into
pop
in
in
adcl
stos
inc
pop
pop
add
pop
push
xchg
aam
loop
dec
jl
cmpsb
mov
aaa
iret
imul
push
push
cmp
stos
sub
mov
scas
mov
dec
cltd
push
mov
loope
push
xchg
je
cmp
cmc
pushf
out
repz
pop
mov
inc
sahf
jae
push
ja
dec
push
xor
jmp
push
in
dec
loop
add
int3
fdivr
loopne
and
adc
dec
adc
repz
and
cmp
sub
aaa
sub
inc
xor
xchg
rcl
inc
add
mov
or
fmull
popf
je
xchg
add
sbb
xor
test
cmc
cmp
mov
lahf
out
mov
fmuls
add
ret
loope
pushf
jp
mov
stos
mov
lea
int3
clc
dec
push
add
push
pop
sbb
aaa
pop
add
sti
pushf
sub
push
mov
and
cmp
and
add
or
push
dec
mov
mov
inc
pop
icebp
or
cmp
leave
dec
mov
and
in
ds
sub
fistpl
lret
int3
add
das
in
sti
shlb
adc
push
xchg
packuswb
lds
or
mov
arpl
popa
mov
xor
pop
js
add
shl
jbe
out
push
mov
xchg
mov
and
enter
lock
sbb
fdivp
mov
mov
xchg
shll
sub
or
jo
adc
cvtdq2ps
jg
cmp
scas
ds
add
xchg
sub
lcall
outsb
scas
fstl
insb
and
sbb
daa
gs
dec
popa
xchg
sbb
dec
loope
push
add
gs
adc
dec
mul
pop
xor
fcomps
push
subb
stos
inc
mov
in
pop
ja
cltd
push
xor
fisttpll
ds
or
and
push
addl
pop
mov
sbb
hlt
fnsave
jecxz
push
fwait
and
xchg
inc
fbld
test
popa
into
ja
xchg
mov
aas
std
xchg
jl
push
scas
pop
ffree
iret
jb
dec
icebp
aad
aad
outsl
dec
out
mov
push
inc
test
pop
lock
mov
pop
mov
xlat
std
outsb
mov
sub
dec
xor
jne
pop
mov
idiv
jbe
mov
mov
movsb
adc
inc
adc
sbb
pop
mov
and
ds
dec
xchg
cltd
cmc
stos
jo
cmp
xor
inc
enter
scas
lock
out
addl
jns
push
sub
cmpl
test
loop
inc
fisubrl
dec
sub
and
lock
ror
aad
les
nop
cmp
dec
rcl
xorl
xchg
pop
mov
pop
scas
ljmp
xchg
or
lods
push
ss
jo
cli
rolb
push
mov
lods
in
cs
jo
cmpb
cltd
sti
arpl
cmp
mov
sarb
xchg
incb
add
and
dec
fnstenv
dec
jns
mov
scas
int3
dec
hlt
fnstenv
mov
nop
mulb
push
mov
push
mov
and
insb
adc
leave
push
adc
ljmp
xchg
lahf
add
arpl
xchg
and
adc
adc
or
mov
lret
cld
test
adc
fdiv
fcomps
pop
sbb
mov
sbb
add
pop
push
jg
adc
loop
gs
imul
icebp
adc
lea
xlat
inc
lock
inc
mov
nop
dec
insb
push
jbe
ljmp
pop
jnp
pop
sarb
aad
or
xchg
mov
xlat
pop
js
loop
lock
add
jg
pop
aas
mov
push
nop
nop
xor
and
or
or
xor
test
sub
mov
adc
mov
sub
add
es
mov
daa
aad
bndldx
notb
xor
push
dec
adc
and
stos
pop
jg
pop
movsl
push
and
loope
and
repz
shld
inc
cmp
or
push
ss
xchg
or
xchg
pop
mov
pop
movsb
rclb
xchg
mov
dec
es
xor
mov
add
or
fists
in
and
andl
lret
xor
repnz
mov
and
sbb
dec
in
add
bound
pusha
push
sbb
jg
gs
ret
pop
scas
sub
fmul
pop
std
fildl
inc
scas
stos
stos
cmp
rclb
in
call
adc
mov
rcr
xchg
sbb
lea
jecxz
add
cli
test
mov
data16
xchg
out
xchg
mov
and
add
mov
cmp
xchg
mov
xor
sbb
mov
repz
push
mov
maxps
out
mov
aas
les
fucomp
aam
add
addl
ja
inc
adc
pop
cwtl
out
pop
aam
mov
test
jg
mov
jl
sbb
adc
mov
stos
fists
arpl
jmp
xchg
cmpsl
push
cmpl
push
sub
or
push
jp
xchg
inc
js
or
mov
aam
mov
pop
xchg
popf
outsb
push
movsl
mov
les
adc
lcall
xor
xchg
data16
in
sub
out
add
lods
rolb
cli
loopne
lea
push
insb
lods
mov
cmp
pop
cs
jge
mull
jl
lock
jb
sahf
dec
mov
cmp
xor
outsl
outsl
aas
adc
mull
icebp
cmp
rcll
das
sahf
jecxz
sbb
lds
shr
negb
xlat
das
lea
mov
and
adc
lret
push
dec
push
add
jae
subb
or
cltd
enter
fcoml
stos
push
not
mov
xor
rol
lea
pop
mov
jecxz
ljmp
push
pop
and
addr16
fcom
or
sbb
int3
cmpsl
pop
repnz
popf
xlat
inc
sbb
sbb
mov
adc
cmpsl
out
cld
jmp
lea
mov
sbb
repnz
inc
sub
and
mov
movsl
das
lcall
pop
fs
fsubs
xor
int
or
decl
sub
sub
adc
shl
mov
decb
dec
pusha
outsb
test
arpl
push
jo
xor
sub
sbb
push
lea
jb
iret
movsb
xchg
xlat
cmp
xchg
call
pop
es
fwait
insl
arpl
inc
imul
or
mov
adc
dec
shll
fdivrl
mov
push
ret
daa
push
sub
das
nop
push
imul
cmp
clc
test
jns
popf
add
cli
jg
rcll
divl
out
test
dec
push
testb
cmp
mov
jp
lahf
sub
shr
pop
push
das
std
loopne
loopne
jle
daa
or
inc
pop
xchg
fs
fbld
mov
sbb
mov
aad
adc
arpl
cli
in
lret
xchg
xchg
adc
mov
popf
xor
ret
xchg
jns
add
in
add
mov
and
or
repnz
es
sub
mov
out
jns
add
xchg
mov
inc
mov
mov
hlt
inc
ror
sbb
sti
je
std
mov
popa
fisubrs
into
mov
push
jo
and
inc
jle
imul
sub
je
cmp
pusha
lds
ret
ja
int
xor
and
mov
and
push
jge
shll
jbe
add
out
in
mov
scas
add
addr16
cltd
cmpsb
lcall
test
dec
fstpt
adc
popf
jns
mov
mov
mov
push
ja
and
inc
arpl
lret
or
jae
or
xor
add
jno
aad
ret
icebp
pop
lods
mov
andb
in
mov
lods
std
lcall
mov
ljmp
out
dec
push
mov
cmp
xchg
pop
mov
push
out
fnstcw
inc
push
mov
sbb
push
repnz
mov
arpl
fcompl
arpl
outsl
or
in
clc
or
pop
add
adc
xchg
dec
or
rorl
jne
scas
in
cld
sbb
aad
push
and
mov
scas
xchg
add
daa
scas
test
je
cmp
rorb
adc
outsl
push
dec
inc
mov
ret
out
add
out
adc
push
inc
xchg
mov
fsts
mov
insb
jmp
push
out
inc
sbb
imul
or
sbb
fidivrl
sub
sub
sti
jne
lahf
push
sbb
das
or
mov
ret
and
cwtl
jae
lods
xlat
repnz
or
sar
je
addl
daa
mov
jne
jo
adc
or
jecxz
push
lods
push
aam
mov
shlb
add
mov
cli
sbb
cli
push
pop
fadds
mov
loop
xor
leave
sub
aaa
add
bound
mov
arpl
sahf
inc
pusha
and
or
mov
pop
lret
add
stos
lock
js
cmp
je
inc
imul
cld
out
and
cmp
loop
sbb
xchg
loopne
fwait
push
jbe
sahf
mov
loop
push
pop
inc
push
lock
lds
loop
cmp
out
sbb
mov
shlb
pusha
xchg
inc
sbb
add
cmp
mov
mov
push
cmp
out
mov
sbb
stos
jnp
test
test
je
daa
dec
mov
mov
dec
pop
jl
popa
rcrl
mov
lock
mov
daa
fildll
add
divl
scas
ret
sub
push
loop
je
test
cmpsl
mul
test
or
fsubl
ljmp
xchg
test
inc
or
add
sbb
xor
jns
fimuls
dec
mov
mov
sub
js
mov
lea
lock
int
mov
jg
test
ret
jmp
lcall
ret
int
cmp
mov
dec
dec
inc
xchg
outsl
shrb
mov
push
xchg
lret
pushl
rcr
aad
inc
pusha
and
lret
push
mov
shlb
dec
in
aam
cwtl
mov
mov
mov
sbb
pop
push
or
sbb
cs
pop
and
push
add
call
xchg
iret
mov
stos
mov
xchg
pop
mov
cmp
mov
mov
jmp
push
cmp
add
jbe
mov
adc
jp
cmpl
pop
inc
or
lock
int
enter
push
and
hlt
and
ljmp
pop
ret
inc
test
vaddss
addr16
push
adc
lock
or
xorl
pop
mov
mov
test
xchg
outsb
push
sub
ss
dec
jle
jne
pop
push
fsts
lret
xor
pusha
push
xchg
push
xchg
inc
xacquire
add
cmpsb
popa
xchg
sub
test
xor
daa
leave
jo
push
jl
aad
loopne
mov
inc
xchg
inc
push
pop
cmp
test
rorl
cmc
jo
pop
insb
and
xchg
icebp
hlt
fnsave
xchg
inc
adcl
mov
cmp
sbb
imul
stc
mov
das
push
out
and
inc
shrl
jae
add
pop
push
jno
mov
aad
cs
pop
outsl
mov
lret
push
push
pop
xchg
sub
xor
and
cmp
add
test
sub
ds
push
cmp
addr16
push
xor
adc
into
mov
call
xor
and
inc
mov
lahf
fcoms
movsb
mov
mov
out
mov
in
cld
xor
lods
jbe
outsl
jae
rorb
cmp
mov
int3
mov
xlat
in
add
int
mov
mov
stos
andl
andl
mov
push
cmp
pushf
mov
stos
insb
cmp
add
imul
fcmovnu
dec
adc
test
sarb
xchg
mov
and
and
leave
xchg
mov
insl
mov
fidivs
jl
push
or
or
aam
add
sbb
or
mov
leave
sub
iret
dec
pushf
pop
sbb
mov
xchg
scas
jmp
add
popa
js
mull
jge
fistl
jle
lcall
fdivrp
shrl
pop
xor
sar
test
jno
fsubr
adc
dec
cmp
add
mov
std
mov
adc
out
mov
sub
xchg
pop
push
addr16
gs
xchg
xlat
sbb
insb
js
pop
adc
fsubs
and
jo
push
shrl
jp
inc
cmp
cmpsb
adc
push
ja
clc
into
cmpsl
xchg
mov
fistps
pop
adcl
mov
sbb
jge
cmp
inc
or
in
scas
call
xor
push
mov
mov
xchg
and
cltd
int
sub
push
pop
jnp
hlt
xor
ficoms
mov
dec
cli
orl
mov
test
subl
mov
filds
xor
mov
lods
jb
ficoml
dec
adc
and
pop
sbb
test
iret
sub
jl
repz
out
mov
mov
icebp
es
cmp
in
jo
jge
daa
xchg
adc
sub
notl
push
push
bound
rclb
cmp
mov
lock
loope
sbb
into
leave
cmp
or
arpl
sub
sub
int3
pop
add
sbb
inc
and
in
jp
xor
aaa
xchg
stc
cwtl
jecxz
cmp
dec
and
outsl
rclb
and
sub
mov
pop
fldl
out
push
pop
mov
repz
nop
out
sub
push
fstpt
inc
dec
pop
inc
or
push
je
push
mov
mov
push
xchg
mov
pop
mov
pop
fcom
mov
cmpxchg
inc
cmpsb
test
push
mov
std
ret
add
mov
pop
sub
mov
mov
in
mov
adc
inc
loop
sub
xchg
add
bound
cmpsb
xlat
mov
inc
xchg
das
movsl
cmp
imul
dec
xor
clc
lret
add
jno
out
sub
jg
call
cmp
adc
or
test
and
cmp
dec
clc
push
call
iret
sub
pusha
mov
jmp
xor
sub
or
xchg
lea
inc
in
mov
sbbl
jle
jbe
in
lods
and
ficoml
inc
mov
adc
fmulp
push
test
push
and
sub
addr16
push
in
lcall
inc
and
xchg
hlt
mov
xchg
sub
jmp
popa
sbb
mov
mov
out
leave
xchg
aaa
lock
ret
sbb
mov
stos
scas
clc
push
jno
pop
in
dec
mov
cltd
add
data16
mov
ss
inc
lret
push
jo
stos
movsb
daa
pop
out
setb
adc
hlt
mov
aam
cs
aad
or
xchg
xchg
lret
shrb
adc
mov
bound
cmp
lcall
sub
xchg
add
je
icebp
cmp
es
scas
mov
jecxz
das
mov
daa
iret
push
mov
and
ds
wrmsr
inc
pop
mov
pushf
sbb
ds
shlb
scas
mov
and
mov
pop
push
fdivrs
sub
or
mov
cld
and
xchg
jmp
inc
daa
out
inc
lock
ljmp
inc
or
mov
xchg
inc
sub
push
or
in
shll
jp
in
enter
push
mov
loop
aam
in
loop
add
cmp
cs
pushf
scas
loopne
in
int3
xchg
or
and
xchg
gs
fs
xlat
jp
pop
mov
inc
dec
aad
ja
pop
rclb
sub
mov
inc
mov
mov
shlb
xor
push
cmpb
dec
enter
fcmovbe
cmp
popf
mov
cwtl
js
add
fidivrs
adc
mov
push
fildl
sti
xchg
insb
pop
int3
add
dec
jg
sahf
das
vmovmskps
mov
pop
inc
out
pop
gs
push
data16
in
call
cmp
lds
mov
and
xchg
loope
push
test
cmp
int
xor
jge
lret
mov
or
in
repz
xor
out
push
mov
jmp
xor
dec
pop
dec
pop
int3
inc
dec
into
inc
int
ret
sub
mov
xchg
sbb
out
jno
mov
xor
xchg
outsl
addl
out
movsl
mov
cld
out
mov
or
aad
insl
cmpsl
fcompl
and
scas
test
sbb
pop
ja
cmp
lret
mov
mov
fnsave
dec
jae
cmp
out
dec
outsb
mov
mov
mov
xor
testl
out
fsubp
jb
js
cmp
scas
or
out
lret
out
test
or
or
cmp
push
jno
test
mov
dec
xchg
add
rcrl
sahf
add
jae
popf
push
or
dec
mov
pop
fdivs
pop
test
jl
dec
ljmp
pop
sbb
sarb
inc
pop
sbb
dec
jp
sub
adc
cmpsl
bound
stos
add
mov
popf
insb
addl
and
adc
dec
into
test
in
and
jg
cmp
xchg
icebp
pop
movsl
jns
test
fsubrs
xlat
mov
adcb
lock
cmp
das
push
xchg
inc
sub
push
xchg
nop
xchg
pop
in
push
mov
ja
mov
cltd
addr16
mov
in
sub
aam
adc
adc
xor
sbb
add
xchg
and
aam
sbb
fisubrs
leave
loope
jne
dec
hlt
int3
subb
mov
leave
xor
mov
dec
or
xor
xlat
add
jmp
cltd
push
and
mov
jmp
sahf
cmovbe
push
jmp
imul
sbb
lods
jle
insl
or
sub
push
loopne
and
xchg
add
mov
dec
cmp
and
mov
pop
xchg
lods
aad
push
in
mov
jnp
addr16
pop
jecxz
int
pop
fimull
outsb
dec
sub
aaa
enter
adc
cmp
decb
xlat
mov
add
jge
mov
dec
cmpb
aam
jp
lea
in
or
lods
sti
adc
push
xchg
fidivrs
insl
aam
inc
sub
pop
leave
pop
out
push
dec
pop
mov
testb
js
pop
int3
ret
sarl
and
dec
pop
lods
fs
pop
and
outsb
xchg
and
lods
dec
add
orb
adc
sub
and
pusha
stos
imul
testb
mov
les
sub
std
aaa
cmpsb
cwtl
mov
jp
ljmp
movsb
divl
insb
adc
insb
push
ret
dec
inc
movsb
or
sub
and
rcrl
rorl
push
jg
mov
push
pop
es
lods
mov
dec
aad
in
sbb
ss
mov
aam
xchg
ret
jl
bound
push
sub
fiadds
bound
xchg
fisubrl
sub
icebp
xor
or
rcl
jno
test
lods
and
jp
fcmovnbe
pop
popa
ror
jecxz
add
xchg
xor
xor
sub
push
push
inc
xor
mov
loop
adc
std
movsl
pop
fdiv
jb
hlt
xchg
shrl
and
xchg
test
shl
insl
push
inc
inc
ffreep
xlat
rol
inc
call
push
xchg
mov
add
test
ja
outsb
sbb
sbb
mov
dec
add
or
and
daa
hlt
mov
dec
shrl
fwait
xchg
insl
cwtl
fldl
icebp
dec
out
jae
mov
movsl
pop
or
pushf
out
pop
mov
pop
imul
jb
daa
jo
cwtl
stc
mov
jp
in
dec
int
into
jns
vpaddusb
mov
mov
iret
jns
aad
jnp
cmp
mov
ja
dec
test
dec
shll
xor
sbb
cld
push
std
bound
add
mov
mov
cmpb
adc
addr16
mov
leave
stc
add
sbb
mov
xorl
sbb
xchg
jne
sar
add
loopne
arpl
leave
outsl
push
idivb
scas
je
clc
jmp
and
dec
push
adc
sbb
mov
pop
sub
inc
sti
addb
xor
mov
inc
mov
pop
ja
std
sub
jo
idivl
sbb
rcrl
mov
enter
addr16
pop
dec
xor
jae
imul
push
sbb
in
sbb
movsl
test
push
lret
sub
mov
push
lock
cmpsb
sbb
jne
xor
push
mov
sbb
dec
sub
cmpsl
mov
test
inc
xlat
xchg
sbb
lahf
iret
pop
lahf
jge
mov
outsl
mov
or
push
scas
fdivs
jb
pop
movsb
repz
rdtsc
push
outsl
out
push
clc
mov
loopne
mov
dec
and
int
and
push
in
or
into
lds
fs
jmp
ja
jecxz
cmpl
jg
xorl
sub
stos
subb
cltd
aam
ret
mov
jbe
in
imul
addr16
push
out
lcall
sbb
dec
jecxz
stos
std
mov
adc
mov
shlw
js
nopl
inc
faddl
mov
aaa
sub
or
bound
push
cmpsb
ret
negb
push
rolb
mov
or
cvtps2pi
inc
popa
adc
add
shll
repz
stos
gs
lret
pop
js
fimuls
data16
loop
add
xchg
mov
enter
out
mov
jl
test
dec
fists
jae
cmp
inc
xchg
daa
xchg
add
dec
iret
inc
pop
aas
paddsw
push
dec
mov
out
bound
orl
popf
mov
or
sub
mov
stos
push
mov
fsts
pop
es
repz
aas
into
inc
xchg
fsts
or
incb
out
and
add
mov
rorl
scas
xchg
sahf
movsb
cmc
inc
sub
outsl
cld
test
notb
das
in
cmpsb
popa
aad
jb
sbb
inc
ret
and
inc
iret
test
pop
push
mov
cld
adc
jo
mov
jg
or
les
xor
frstor
out
pushf
test
ret
das
inc
pop
push
mov
shlb
sub
and
test
iret
jo
popa
insl
iret
cmp
pop
fwait
push
pop
dec
jno
dec
or
stos
or
sti
mov
lds
xor
dec
push
hlt
mov
mov
jl
pop
shr
pop
add
aas
dec
jecxz
lahf
pop
or
pop
out
lock
test
pushw
jae
pop
jge
sbb
and
movsb
fsubs
add
nop
lods
or
les
in
adc
jae
xchg
mov
sbb
dec
inc
jmp
or
dec
rclb
push
js
ja
loop
lock
fwait
das
inc
jae
add
dec
in
fdivrs
sub
inc
dec
cmp
push
pop
rcrb
negb
ficoms
pop
mov
daa
xchg
out
into
shll
mov
aaa
cmp
fdivrp
fldenvs
cmp
movsl
or
sub
cmp
inc
out
out
call
sar
pop
jnp,pt
dec
ds
fisttpl
or
add
fxch
sub
and
jge
jae
bound
test
imul
xor
mov
xchg
mov
cmc
inc
mov
push
push
lea
xchg
xchg
popa
imul
repz
lock
xor
in
mov
lea
das
or
or
es
sub
sub
mov
pop
aam
test
dec
loop
fs
jbe
pushf
dec
jnp
push
sbbl
mov
xor
rorb
jl
repnz
and
ja
sub
xchg
sub
mov
xchg
aad
fmul
jp
ja
or
dec
pusha
jge
shlb
out
outsb
fs
sbb
ret
sub
lds
mov
ffreep
inc
jp
faddp
ds
and
jecxz
mov
push
jb
loop
sub
pop
enter
mov
push
adc
xchg
adc
add
clc
dec
leave
add
pusha
pop
mov
stc
jbe
stos
adc
pop
mov
jo
xor
lret
in
add
or
push
xor
jnp
dec
lods
bound
add
jb
jmp
sub
xchg
cltd
bound
inc
movsl
dec
dec
and
or
imul
ss
xor
cld
cli
shrl
jmp
ret
ret
aam
add
inc
test
xchg
jnp
repz
xor
cld
int3
mov
addr16
int3
adc
ljmp
cmc
imul
add
imulb
ret
out
in
lahf
in
mov
push
add
add
pop
rcrl
mov
in
mov
insl
ljmp
and
outsb
inc
mov
repz
or
pop
dec
ret
or
jae
jg
icebp
in
inc
and
jmp
cmp
jp
fsubrl
rcrb
je
and
mov
outsb
mov
add
outsl
pop
notb
lahf
stc
scas
cmpsb
pop
adc
adc
imul
and
xchg
xchg
push
scas
fsubrl
popf
or
clc
sbb
insb
add
rclb
inc
in
xchg
inc
dec
mov
xchg
mov
jecxz
mov
xchg
and
shr
rorb
fs
dec
out
icebp
lret
cmpsb
push
push
lods
imul
ret
push
mov
pop
addr16
sarl
flds
xor
inc
push
gs
out
repz
xchg
or
mov
addl
inc
sub
xchg
push
sbb
lahf
push
adc
pop
and
fldt
ljmp
stos
loop
lods
daa
fwait
popa
sub
icebp
cmp
fistl
mov
mov
and
lock
add
int
sti
lahf
push
inc
leave
fwait
xor
xchg
das
inc
sub
and
dec
insb
jp
xor
mov
xor
sbb
ret
xlat
loopne
push
sti
in
mov
in
in
pop
or
lahf
adc
xor
mov
negl
push
add
push
lods
mov
insb
pop
pushf
fisubl
lcall
pop
dec
ss
xchg
test
cwtl
ss
jge
test
shlb
sub
add
push
scas
mov
ret
ljmp
or
xor
es
fisttps
push
push
fdivl
push
iret
lret
add
es
mov
jno
lea
mov
jecxz
push
mov
aaa
mov
pop
das
shr
leave
test
mov
mov
dec
xchg
lahf
sub
ja
push
pop
lret
xor
cltd
call
aam
mov
mov
orl
mov
jns
mov
dec
cs
xor
jo
dec
inc
pop
cmp
outsl
pop
andb
inc
cmp
repnz
push
arpl
aam
test
dec
xor
fisubrs
pop
push
or
mov
andl
xor
mov
pop
xor
push
fwait
insl
call
push
fs
insb
bound
cmp
cmp
sbb
fucomi
xchg
pop
arpl
jbe
insb
sbb
pop
add
fldt
sbb
loop
push
repz
xchg
movsl
push
dec
jno
mov
stc
addb
mov
aas
fidivrs
pop
scas
loop
outsb
iret
mov
sbb
into
pop
cmp
fsubs
clc
jp
and
cs
pop
ss
movsl
pop
lret
adc
aam
arpl
xor
addr16
pushf
lock
jnp
sub
push
mov
addr16
push
sub
es
mov
mov
and
xor
push
sbb
mov
pop
imul
outsl
cmp
mov
cmc
imull
out
repz
push
push
fisttps
xor
gs
mov
mov
pop
mov
ljmp
popf
xchg
sub
mov
scas
scas
and
mov
pop
mov
pop
fisubs
enter
repz
and
pop
fisttps
lea
popf
je
adc
dec
or
xor
shll
add
inc
pop
nop
dec
or
mov
sub
push
inc
mov
cmpsl
fildl
loopne
daa
dec
xor
or
loopne
fistpl
in
adc
orl
daa
xchg
adc
or
and
push
loope
lcall
adc
ret
xchg
dec
addr16
push
push
pop
push
mov
mov
stc
xchg
xchg
les
fstpt
dec
add
pusha
sub
xchg
sbb
sbb
xor
fs
inc
loop
lahf
popf
mov
pop
sbb
call
and
daa
mov
xor
xor
cmpsl
mov
jne
add
leave
loop
mov
add
loopne
push
push
xchg
cs
mov
stc
and
sbb
insb
icebp
xchg
mov
sbb
jnp
xchg
dec
rcr
xor
icebp
iret
orl
adc
ljmp
out
ljmp
and
hlt
push
xor
or
add
les
dec
or
push
jg
lods
das
imul
lret
and
or
popa
out
scas
imul
mov
std
jns
test
gs
mov
movsl
in
popf
call
outsl
dec
add
jne
cmpsb
aad
inc
pop
push
pushf
daa
sbb
dec
pop
inc
fmuls
mov
enter
lcall
cmpsl
push
mov
decb
adc
push
or
xchg
hlt
add
ret
mov
or
and
dec
addr16
mov
in
fs
xor
mov
outsb
loop
hlt
adc
adc
loopne
testl
in
aad
xor
sti
sub
and
je
orb
cs
leave
or
popa
sbb
lret
sbb
std
pusha
jo
cld
adc
mov
leave
mov
lods
lcall
add
dec
jb
xor
mov
rorl
in
push
xchg
mov
xor
popa
mov
pushf
insl
out
repnz
xor
push
gs
mov
cmp
in
pop
cwtl
cmp
push
lods
adc
jns
xchg
sbb
addb
jecxz
jne
mov
cmpsb
js
gs
scas
jle
aaa
push
shrl
inc
sti
in
in
leave
sbb
jmp
arpl
lock
mov
mov
or
cmp
fnstsw
sub
loop
push
rcrl
popl
imul
inc
xchg
ret
ss
fmul
stos
mov
andl
gs
mov
push
das
add
imul
repz
es
add
mov
pop
pop
inc
xchg
fildll
pop
jge
mov
test
xchg
fiadds
bound
mov
push
mov
js
cmpsl
aas
loopne
mov
test
pop
cmp
stc
repnz
mov
and
idivl
push
or
sbb
mov
imul
pusha
test
xchg
js
sub
shrb
jg
add
pop
das
repz
inc
or
dec
add
les
addr16
shrb
jle
cmp
cs
sbb
mov
dec
jecxz
jecxz
sar
dec
notb
out
aad
dec
sub
jbe
mov
mov
pop
pop
dec
dec
cmp
pop
sar
call
inc
movsl
movsl
push
push
repnz
lret
bnd
shlb
xor
push
cmp
cwtl
fdivrs
jo
and
fs
cwtl
sbb
cli
sbb
jp
cmp
dec
cmp
loope
icebp
mov
cmp
jns
or
jns
mov
imul
push
or
lret
cmp
neg
add
int
daa
and
je
mov
movsl
stc
pusha
fists
adcb
dec
mov
pop
ss
int3
inc
pop
jle
and
in
cmpsl
mov
inc
dec
mov
int
lea
sub
push
ficoml
push
mov
stc
imul
xchg
xchg
ret
repnz
test
jle
xchg
inc
lcall
out
sbb
repnz
cmpb
insl
mov
push
jecxz
sbb
ljmp
int
std
add
sub
jbe
loope
stc
fimuls
fsubl
outsb
lahf
sbb
cwtl
push
cmp
jecxz
mov
aad
xor
mov
mov
lret
sbb
pushf
xchg
xor
pop
cmp
hlt
lea
shrb
popf
movsl
cmp
add
cld
lds
gs
aaa
ret
jle
shrl
hlt
subb
mov
adc
jb
out
clc
adc
std
icebp
and
scas
mov
inc
dec
ja
imull
ss
add
rorb
ljmp
popa
pop
push
cs
in
cmp
fistps
popa
mov
cmp
jnp
pop
imul
xor
scas
mov
cmc
out
in
sbb
sub
pop
jmp
fidivrl
repz
mov
lret
pop
rolb
fstpt
ljmp
sahf
lret
xchg
dec
dec
sahf
dec
addl
rolb
fisttps
movb
xor
fdivs
push
xor
fcoml
ja,pt
mov
dec
in
adc
rorb
dec
push
mov
or
ret
mov
imul
inc
or
xor
mov
pop
and
sbb
aaa
sbb
pop
dec
push
xchg
imul
push
dec
popa
mov
sti
imul
lods
scas
pusha
mov
add
cwtl
hlt
es
adc
lds
push
xchg
adc
popa
test
inc
add
xor
sub
push
mov
mov
stc
loope
mov
ss
or
movsb
adc
and
cwtl
icebp
fucomip
out
dec
pop
loopne
xor
xor
mov
sbb
insb
xchg
insb
inc
and
cmc
jmp
pop
loop
sub
pop
mov
lcall
in
addr16
add
xor
adc
scas
mov
mov
or
idivb
imul
inc
mov
jle
js
sbb
outsb
fnstenv
sub
addl
sub
sbb
pop
push
in
test
aaa
inc
mov
test
movsl
dec
cmp
mov
push
xchg
in
js
cmp
fsts
push
dec
bound
loopne
test
xchg
fiaddl
fbstp
cwtl
jle
sbb
in
fsubr
lret
or
pop
and
into
test
aaa
and
int3
pop
out
and
arpl
cmp
cld
pop
adc
cmp
xchg
bound
mov
jae
and
arpl
push
out
mov
add
add
xchg
out
pop
jbe
cmpsb
sbb
jp
ret
lods
xor
je
or
popf
shlb
int3
sysenter
xchg
call
hlt
mov
pop
je
inc
push
mov
pushf
pushf
bound
stc
out
daa
mov
frstor
dec
push
sub
mov
scas
dec
cmp
pushf
mov
sub
loope
fsub
les
xchg
gs
xchg
ret
out
push
dec
lock
imul
push
mov
insb
adc
pop
ds
shlb
movsl
mov
cmp
movsl
ds
sahf
lret
adc
rcrb
mov
insl
addr16
sub
adc
in
mov
cmpb
jae
out
aam
rorb
cltd
adcb
int3
push
jle
test
jbe
sbb
jns
ficomps
inc
pop
int3
push
insb
fdivrp
adc
fwait
push
dec
mov
dec
cltd
sbb
into
das
add
fstp
addr16
outsb
cmc
jge
adc
mov
inc
cwtl
rclb
xor
or
iret
inc
js
pop
mov
mov
cmpsl
cwtl
dec
jmp
sub
pop
ret
cmc
jne
sub
dec
mov
mov
push
push
loope
cwtl
sbb
cmp
mov
cld
add
jle
test
addr16
adc
cs
cmp
insb
cwtl
dec
xchg
pop
jb
and
adc
jb
out
into
ss
icebp
sub
cmpl
hlt
push
movsb
and
cmp
ret
jg
mov
decl
cmc
mov
sbb
call
negl
sbb
push
int
or
xchg
aas
clc
int3
test
sbb
dec
push
cld
xchg
push
push
adc
daa
cmp
cmp
add
or
push
les
pop
loope
add
lcall
pop
test
or
icebp
xchg
mov
sbb
dec
aam
jg
cmpsl
pop
addr16
xchg
mov
pop
mov
push
xor
sbb
push
cld
arpl
jp
test
enter
sbb
sbb
jbe
inc
loope
js
outsb
pop
loope
int3
push
aam
xchg
fnsave
adc
aaa
mov
pop
jno
aaa
mov
inc
movsl
ljmp
jge
and
xchg
lds
mov
stos
in
dec
adc
shlb
mov
fadds
pop
sti
xor
cli
test
inc
bndstx
andl
push
sahf
daa
push
jns
adc
scas
dec
push
xchg
mov
add
mov
and
cltd
incl
pop
pop
fwait
lds
mov
out
pop
push
arpl
popf
cmpsl
dec
enter
sbb
out
popl
leave
and
sbb
sub
pop
pop
loop
xchg
mov
in
pop
aas
pop
in
outsl
cmp
fnsave
xchg
add
and
mov
or
pop
xor
inc
nop
aas
adc
popf
and
outsl
pop
push
imul
je
imul
dec
pop
jnp
ljmp
adc
cmpsb
or
repz
lret
test
int
mov
sahf
flds
pop
jecxz
ljmp
xor
inc
push
lds
nop
xor
scas
in
and
loopne
lret
inc
xchg
jecxz
jns
icebp
mov
sbb
mov
mov
and
sbb
xchg
inc
js
xchg
and
or
mov
pop
lcall
lock
pop
adc
cltd
repz
mov
cmp
imul
dec
xorb
mov
inc
jge
data16
testl
stos
ret
sbb
push
idiv
pop
imul
in
mov
or
out
pop
jbe
in
scas
insl
or
pop
imul
cs
divb
mov
int
lea
jo
ret
and
std
neg
sbb
dec
js
nop
inc
adc
std
cwtl
pushf
repnz
jns
imul
jnp
xor
sub
xchg
jne
subb
ficoml
mov
addb
adc
out
testb
adc
sbb
inc
cmp
sahf
mov
pop
dec
push
xor
push
jae
adc
shll
daa
sbb
dec
pop
mov
popf
outsl
cmp
fldt
div
fldenv
repnz
and
divb
ljmp
push
or
sub
jl
adc
inc
ret
js
insb
cmp
les
xor
push
sbb
adcb
inc
or
aam
dec
lcall
inc
pop
xchg
mov
jbe
push
imul
add
lret
pop
sbb
iret
mov
mov
pop
jns
testl
xlat
movsb
out
ret
stos
pop
leave
inc
xor
popf
je
inc
and
sub
jl
aad
data16
dec
mov
ljmp
fldt
pop
notb
cmove
fcoml
xor
loope
sub
cltd
lahf
lcall
sbbb
test
mov
sarb
dec
cli
ss
xor
pusha
les
cld
test
cmp
xor
sti
pop
or
loop
rcrb
xchg
pop
movsb
add
mov
and
xchg
mov
lds
sbb
shll
xchg
hlt
out
lods
js
jb
jbe
or
fldt
sbb
add
push
test
inc
ja
sahf
fmuls
out
popa
pushw
jns
loope
dec
push
dec
mov
das
in
cmp
xchg
ds
lcall
mov
ljmp
mov
jmp
dec
loop
jno
out
dec
rsqrtps
adc
inc
aaa
sub
in
xlat
push
icebp
jbe
aas
clc
dec
sbb
test
push
inc
push
in
add
daa
add
sbb
out
mov
jl
and
add
adc
hlt
enter
add
lcall
mov
or
xor
sbb
dec
cmp
movsl
mov
loopne
mov
daa
fcoml
mov
add
lock
xor
jne
jns
gs
cli
movsb
hlt
fisubrs
lret
ret
sbb
lods
fs
xchg
dec
xorb
sbb
pop
dec
cmp
xchg
mov
pusha
dec
movsb
xor
or
jns
mov
cmp
in
out
sbb
cmp
mov
aad
rcrl
outsl
lock
pop
pop
cwtl
mov
cmc
sub
or
mov
das
mov
ror
aam
cmpsb
insl
es
dec
hlt
addr16
add
push
jne,pn
ret
mov
ljmp
cltd
shr
ljmp
add
jge
sbb
int
mov
hlt
cmp
fldt
jno
icebp
movsb
fwait
xchg
cmpsl
sbb
aad
and
sub
sbb
cmp
cmpsb
pop
adc
jae
and
std
and
pop
and
adc
lret
and
cmp
pop
jno
push
icebp
pop
es
mov
xor
into
inc
testb
aad
out
sub
pop
adc
dec
mov
adc
lahf
adc
fnstcw
add
dec
int
insl
adc
dec
sub
imul
repz
outsb
ds
xor
mov
push
add
cli
loope
test
ffree
and
movsl
dec
jmp
out
loop
cmc
cli
unpcklps
push
call
orb
aad
incl
add
enter
das
pusha
inc
cmp
lods
fsts
icebp
test
inc
int3
jle
jmp
hlt
scas
es
xchg
movsl
ficoml
mov
cwtl
jb
sbb
inc
shlb
jl,pn
data16
sub
xor
daa
lods
jge
fidivs
ficoms
lods
stc
imul
add
dec
cli
repz
daa
and
and
lcall
cmpsl
xor
jae
adc
repnz
fcmovu
push
mov
outsb
dec
push
inc
test
mov
inc
lret
push
scas
mov
mov
xorl
mov
cmc
and
ret
fadd
mov
add
lcall
movsl
adc
adc
push
dec
int3
dec
push
inc
xchg
cld
rolb
dec
fstpl
jbe
imul
scas
push
and
fsts
data16
pop
inc
std
cmc
sbb
or
mov
out
pop
ja
push
mov
sub
int3
dec
push
and
ret
dec
test
daa
mov
push
in
mov
lcall
push
dec
push
sar
push
pop
das
in
jl
or
xor
roll
test
xorl
std
sbb
nop
mov
test
dec
or
sbb
cmpsb
or
jbe
or
mov
inc
inc
mov
sub
jge
push
lahf
ss
inc
jge
jl
mov
outsl
pop
push
pop
xchg
adc
test
out
xchg
shlb
xchg
push
pop
xchg
xor
pop
push
mov
sub
dec
xchg
jae
xchg
fstpl
mov
dec
ja
jb
mov
sub
or
and
out
dec
pop
fmull
pop
out
cltd
scas
push
mov
dec
inc
xchg
ja
add
push
cmp
cwtl
and
inc
pop
mov
push
or
daa
sub
add
leave
cmpsl
rcll
cmpsl
sbb
push
xor
stos
pop
xor
dec
fimuls
mov
sub
xchg
and
or
cmpl
pop
push
aam
popf
adc
sbb
shrb
jg
hlt
lods
scas
ja
and
mov
jmp
jg
mov
mov
dec
sbb
mov
mov
inc
cli
cltd
in
imul
xchg
xor
imull
and
mov
push
hlt
scas
lret
mov
pushf
dec
mov
inc
xor
mov
fwait
nop
aad
and
add
andb
cmpsl
pop
inc
dec
inc
stc
outsb
cld
repnz
fdivrp
fiadds
insl
arpl
xchg
push
pop
jbe
into
mov
dec
cmp
xchg
ljmp
xchg
jle
push
xchg
and
inc
sub
pushf
jne
and
push
mov
es
popf
rcrb
mov
mov
stos
pop
xchg
addr16
xor
or
movsl
fdivrs
fistpl
mov
sti
xor
pop
xorb
add
arpl
sbb
insb
je
xchg
outsb
push
mov
push
add
push
les
xchg
fmuls
js
frstor
icebp
pop
mov
sbb
adc
xor
stc
pusha
sbb
scas
fnclex
sbb
cld
repnz
out
insl
inc
aaa
and
adc
cwtl
sbb
fucom
add
adc
or
mov
mov
push
mov
or
sub
push
loope
xor
pop
aad
in
jp
xor
add
add
adc
pop
mov
adc
lahf
xchg
add
mov
andb
aas
sbb
sarl
xchg
sub
into
ret
mov
add
and
inc
cmp
push
push
mov
les
jle
cwtl
fdivs
cmc
aaa
scas
sub
mov
inc
cmc
xchg
add
into
add
out
popf
lea
js
cli
mov
stos
xchg
or
and
jg
pop
mov
lds
mov
jb
pop
repz
jge
fimull
shl
fdivrs
in
or
inc
dec
in
faddl
ss
cmp
sub
aas
sahf
aam
shr
nop
cmp
xchg
lahf
cmp
jl
jbe
out
add
ljmp
sub
mov
push
rcr
loopne
or
ss
sub
int
dec
mov
lods
fwait
xor
lret
ret
ret
inc
ret
pop
lret
mov
fisubrl
icebp
addr16
aad
mov
and
fldenv
mov
xchg
sub
xor
fcmovbe
les
in
fsubrl
dec
out
cmp
jp
mov
pop
and
xor
aad
mov
jp
stos
push
lock
out
pop
test
aam
and
shrb
stos
fisubrs
mov
and
pop
movsb
mov
pop
data16
lcall
xchg
idivl
addl
das
lret
dec
push
push
push
hlt
fadd
dec
jo
push
xor
mov
jp
add
repz
aaa
sti
pop
mov
pop
call
cwtl
jae
cld
sub
push
sbb
test
sub
dec
in
sub
adc
mov
fcmovbe
iret
push
mov
pop
sub
sbb
inc
inc
aas
xor
hlt
icebp
mov
fdivrs
push
out
in
lods
in
sub
and
roll
sub
jo
mov
push
das
adc
fidivs
imul
or
inc
lds
and
cmp
ljmp
jnp
jne
xor
stos
and
test
cltd
or
rcrl
repz
js
add
dec
mov
or
add
push
in
mov
jbe
xchg
test
or
mov
dec
repnz
mov
push
xchg
xor
popl
pop
addr16
lret
mov
xchg
pop
outsl
inc
push
jno
mov
mov
push
inc
imull
jnp
push
push
and
out
push
add
bound
sahf
sub
das
or
test
dec
cltd
stos
loop
mov
push
sbb
nop
sbb
pop
jmp
int
cmp
pop
mov
insb
sar
cmp
pushl
add
mov
ret
adc
sbb
sub
hlt
and
mov
outsl
cli
sbb
ret
xorb
sbb
xor
or
inc
pop
mov
add
test
mov
inc
into
adcl
rcl
mov
add
jge
push
ret
cmp
movsb
vmovdqu
xchg
repz
ss
push
loop
jne
montmul
cmpsb
xchg
addr16
mov
popa
mov
ljmp
lods
jnp
or
into
negl
leave
rcll
ret
or
fiaddl
pop
div
mov
pop
mov
nop
std
xchg
stc
in
jo
xchg
mov
xor
mov
mov
jo
js
movb
inc
or
mov
push
mov
pusha
aas
in
sub
mov
ljmp
jecxz
cmp
je
cmpb
mov
enter
fdivs
test
fstps
stos
pop
jge,pn
dec
sarb
js
in
inc
out
jmp
js
dec
xor
sti
mov
mov
add
iret
add
outsl
xor
dec
inc
add
pop
jae
ret
or
and
mull
test
and
pop
fs
movsl
pop
and
arpl
jnp
cmpsl
push
insb
mov
test
adc
addr16
adc
pop
pop
repz
jg
sbb
jae
push
arpl
insl
mov
mov
jg
mov
movsb
mov
jno
inc
inc
fists
cmp
push
pop
rcll
rorb
mov
mov
or
imul
inc
push
test
stc
fistpll
sbb
mov
test
sub
movsb
push
sbb
lds
mov
dec
mov
into
mov
xlat
mov
adc
pusha
xchg
popa
leave
mov
stc
xchg
lret
fisttps
cltd
adc
bnd
xchg
fldenv
sbb
jg
push
sarl
add
push
push
jge
jns
sub
or
mov
adc
fwait
out
push
mov
sbb
cli
movsl
xchg
xchg
adc
sbb
or
js
cs
movsl
fistpll
stos
dec
xchg
addr16
mov
jae
jle
adc
inc
lods
pop
shrb
rcl
bound
sub
shrl
jmp
and
sub
rol
pop
or
xchg
inc
jle
push
aam
push
stos
decl
out
pop
push
jb
data16
stos
cs
pop
sbbl
push
scas
jne
xchg
outsl
aad
pop
sub
mov
xchg
lods
sahf
orb
rcrb
repz
dec
cmc
int3
pop
sti
insb
pop
and
mov
jl
sahf
lret
mov
jnp
rcrl
test
xchg
mov
test
adc
sub
adc
and
daa
pop
mov
fdivp
aaa
les
fwait
and
sub
cmp
repz
or
xlat
js
inc
pop
sub
or
mov
cmp
les
add
dec
lcall
sub
dec
dec
xchg
pop
cwtl
shlb
icebp
adc
or
popf
fwait
cwtl
aad
ficoml
jo
mov
mov
shll
shl
in
call
daa
sarb
gs
ror
or
movsl
mov
pop
inc
inc
xchg
jmp
outsb
adcb
ret
outsl
dec
add
movsb
mov
fsubrl
xlat
shr
sub
mov
and
lret
jb
cmp
sahf
pop
jnp
imul
fcmove
scas
lods
or
les
adc
push
int
and
mov
mov
fnsave
mov
jnp
sub
and
mov
sub
loope
movsl
jno
clc
pop
sbb
xchg
stos
mov
out
pop
push
adc
cmp
ret
rcll
dec
int3
movsb
fiadds
xchg
stc
pop
shlb
les
out
mov
lahf
sbb
repnz
ret
mov
ficoms
ret
and
jns
mov
decl
ds
mov
outsb
out
lods
rcrl
out
and
cli
shlb
or
mov
and
inc
cs
dec
jp
inc
and
add
push
das
jno
ss
lea
cli
pushf
fs
inc
getsec
test
je
shlb
pop
ljmp
frstor
dec
inc
repnz
xor
test
mov
jo
push
jmp
int3
mov
inc
insb
xchg
mov
xchg
gs
outsb
lock
xchg
add
mov
adc
incl
mov
std
out
sub
sub
pop
add
out
add
mov
ficompl
xchg
lods
mov
xor
and
sarb
test
lds
mov
sbb
dec
mov
jmp
loope
jge
fldcw
out
scas
add
sbb
jg
sbb
repz
push
cmp
mov
call
test
aaa
jg
add
or
mov
xchg
pop
mov
jmp
orb
outsl
pushf
sti
mov
mov
inc
or
jmp
pop
lret
pop
insb
lahf
mov
jg
arpl
xchg
addr16
icebp
dec
data16
rol
adc
mov
adc
xor
lcall
test
pop
inc
testb
mov
ret
and
pop
mov
sub
mov
lahf
daa
iret
add
jae
fwait
and
adc
push
cmpsl
xchg
xor
dec
mov
cmp
pusha
nop
lock
cmp
add
fcomps
test
stc
lret
in
in
fstps
rolb
and
inc
mov
lds
out
adc
loope
shlb
jo
addr16
shl
outsl
push
lret
loop
jg
sbb
call
mov
push
push
jle
add
sbb
into
and
sub
jnp
shlb
sar
popa
push
loop
sub
daa
push
mov
sub
andb
test
addr16
sub
adc
pop
lcall
pop
xor
push
cmp
arpl
pop
push
js
cmp
add
mov
cmp
or
sub
leave
in
stos
insl
pop
insb
sbb
mov
push
test
roll
fcomps
test
push
cmp
xchg
mov
push
ljmp
sahf
pop
and
and
loop
xor
mov
inc
loop
int3
cli
lods
arpl
call
fldcw
sbb
add
mov
ret
test
imulb
xchg
fildl
lods
rcrl
mov
ja
nop
out
xchg
dec
jmp
sub
xorb
xchg
pop
push
scas
mov
divl
add
ficoml
movsb
xor
cmp
mov
divl
pop
add
bound
lss
cwtl
pushf
sahf
in
add
shr
pop
xor
pop
push
push
stos
mov
in
adc
pop
movsb
mov
sahf
jne
lock
sahf
es
mov
pop
insb
jbe
inc
and
repnz
out
xchg
scas
test
mov
and
ljmp
fsubl
mov
test
sahf
inc
lcall
mov
inc
repz
jecxz
fcomps
pushf
arpl
pop
jns
push
inc
mov
sub
mov
cmp
cmpb
movsb
xor
lret
jle
pop
dec
mov
and
fsubrs
popf
cmp
cmpb
push
je
pop
jnp
lods
ret
adc
or
push
mov
fcoms
mov
mov
addr16
sahf
dec
push
lea
imul
ljmp
test
mov
loope
or
mov
push
out
sahf
stos
sub
add
push
dec
cli
lea
in
popa
sub
add
in
push
negl
ss
mov
or
repz
or
mov
loope
add
mov
pop
mov
xlat
fs
add
mov
js
or
push
test
inc
mov
jbe
push
xor
and
sub
movsb
sbb
dec
pop
fdiv
je
repnz
push
jge
out
pop
add
hlt
leave
in
cmp
insb
stos
test
loopne
xor
sbb
sbb
inc
dec
ss
or
adc
les
cwtl
inc
mov
cmp
push
lahf
push
jp
sbb
lea
lea
insb
jno
mov
and
jb
rcrl
cltd
lds
popa
xchg
out
adc
adc
ret
jb
inc
scas
push
ret
call
lret
ret
jle
pop
hlt
pop
cmpsl
in
outsb
roll
or
xacquire
out
jl
xor
add
lahf
push
rcr
xor
xchg
shlb
pop
add
adc
push
mov
pop
ret
push
lods
mov
fildl
or
dec
mov
push
ss
aas
pop
divl
push
sbb
push
mov
push
fldt
mov
cwtl
jno
inc
jne
cli
jle
dec
and
inc
lcall
popf
xor
cmp
mov
fs
insb
out
mov
xor
jne
std
mov
ret
pop
lods
inc
in
sahf
and
mov
cltd
std
call
mov
xlat
dec
fldenv
mov
inc
inc
inc
data16
dec
push
and
int
imul
repz
pop
out
sahf
dec
clc
cmp
xor
jnp
dec
cmp
in
popf
lahf
mov
test
add
push
sub
xor
ja
bound
mov
in
lcall
lahf
dec
inc
outsl
lea
inc
je
les
or
add
fistps
sbb
addb
dec
jne
push
dec
ret
push
pop
or
mov
dec
xchg
sub
jmp
pusha
jb
fsts
dec
jg
and
jge
nop
jmp
push
mov
pop
inc
ficoml
stc
rcrl
test
stos
xchg
stos
idivl
rclb
jns
adc
inc
bnd
mov
adcb
mov
shlb
pop
sar
adc
rclb
mov
fistl
pop
cmc
test
pop
xchg
mov
lret
xchg
jo
imul
in
nop
scas
inc
cld
push
jl
aam
mov
pop
pop
cmp
test
inc
loopne
inc
pand
xor
pop
imul
mov
mov
lcall
test
or
pushf
xor
push
mov
mov
jle
stos
pop
addb
nop
push
jo
cmpsl
popf
jno
add
rcrb
cmpsl
aas
test
lds
mov
sbb
clc
add
shr
xor
add
cmpsb
push
sbb
or
sbb
push
sub
xor
add
movsl
pop
jb
sub
cwtl
mov
rcll
dec
popf
mov
pusha
jne
movsb
xchg
fsub
dec
jge
dec
cmp
mov
mov
icebp
adc
sub
dec
push
xor
fmuls
das
shrl
cmp
mov
lahf
movsl
cwtl
fimull
lea
stc
mov
mov
pop
sbb
imul
or
iret
fistl
jb
push
or
arpl
fisttpll
mov
lcall
mov
xchg
xor
jmp
cmp
sbb
cmp
aam
mov
sub
adc
and
dec
xor
ret
inc
jae
mov
xor
icebp
mov
sub
push
jl
out
adc
or
mov
xchg
or
mov
pushf
xor
mov
xlat
sub
xor
cmp
sahf
xchg
xchg
adc
jo
jl
bound
shr
pop
add
xchg
ss
stos
ds
push
repnz
mov
sbb
xchg
mov
sub
lea
popf
and
sbb
and
and
fidivl
ss
xor
mov
pop
jle
fisubrs
bound
jl
push
ret
lds
cmc
in
scas
gs
iret
inc
rorb
aas
or
mov
shrb
data16
out
test
jmp
adc
outsl
or
ret
daa
mov
daa
shll
std
pop
xchg
out
sub
es
sub
int
insl
ret
jp
cmp
sbb
ror
push
or
in
test
lcall
fadds
jns
hlt
xchg
jecxz
mov
inc
cmp
mov
ficompl
inc
pop
jge
mov
ret
lock
dec
stos
push
or
mov
inc
cmpsl
sub
xlat
stos
pop
mov
mov
jl
fdivl
cmc
sbb
data16
adc
push
or
movsb
cmp
mov
outsl
pop
or
and
or
or
mov
pop
cs
clc
pop
jo
leave
mov
mov
cmp
cld
iret
data16
pop
xchg
inc
out
mull
int
ja
and
and
adc
out
mov
add
mov
fisubs
in
pop
nop
test
lcall
sub
arpl
mov
sub
mov
jbe
fdivs
xorl
pushf
pop
sub
cld
fnstcw
popf
ss
fstpl
cmp
xchg
mov
ja
lods
jno
lods
mov
sbb
sbb
rcrb
xchg
loopne
or
out
and
loop
push
es
push
gs
fwait
dec
mov
rcrl
into
test
push
sub
push
sub
loop,pn
jmp
mov
movsl
pop
mov
xor
sub
lret
add
jno
or
clc
cmpb
ljmp
es
jmp
test
test
dec
les
arpl
pushf
and
pop
cmpps
out
fstpl
outsb
lcall
xor
push
xchg
cmp
fmull
push
fs
jno
imul
and
inc
das
push
lods
or
mov
dec
and
rol
jmp
ljmp
idivl
jle
xor
movsl
pop
shlb
mov
xchg
xor
mov
mov
jbe
pop
das
inc
int
in
arpl
xor
adc
mov
mov
fmulp
ficoml
iret
int3
lds
mov
lods
je
xor
popa
shrl
loopne
push
xor
loopne
xchg
jns
xchg
jnp
inc
test
push
mov
jb
sub
js
scas
lea
mov
cmp
cmp
mov
dec
and
sahf
lcall
insb
pusha
cwtl
aaa
push
in
jno
ss
loope
dec
dec
adc
cmpl
mov
outsl
adcb
ss
repnz
scas
out
mov
and
adc
mov
pushf
mov
push
leave
adc
pop
mov
sbb
aad
sbb
push
lret
loope
arpl
outsl
movsl
pushf
mov
pop
mov
sbb
fdivs
pop
lcall
dec
cwtl
pop
psubusb
jae
ret
test
loop
sbb
insl
adc
loopne
add
outsl
cmp
fcmovnbe
sub
jb
xchg
push
hlt
pop
cmp
mov
stos
adc
jno
sub
mov
daa
cmp
adc
dec
add
push
sub
rcl
je
pop
in
ja
cmp
mov
ret
push
mov
enter
and
cmp
call
jb
pop
shlb
daa
int3
pusha
leave
les
pop
push
shll
push
adcl
mov
pop
mov
or
sbb
cli
cmp
adc
pop
data16
jle
insb
push
cmc
push
mov
sub
out
add
push
sbb
and
and
stc
adc
test
stc
jne
mov
gs
xor
pop
mov
xchg
dec
push
outsb
mov
mov
mov
xchg
push
int
into
mov
dec
xor
pop
xlat
ss
jl
loop
imul
pop
push
or
int
out
scas
mov
add
popf
pushf
add
xchg
jl
push
dec
xchg
stos
ss
icebp
cli
and
subl
inc
loopne
imul
fidivrs
jb
jb
xchg
xchg
mov
xor
xchg
cmp
loopne
aas
inc
jmp
jg
mov
nop
push
sahf
inc
loopne
ret
stc
mov
mov
mov
ss
cmp
fisttpl
mov
nop
stos
movsl
sahf
ja
leave
imul
cmpsl
jne
and
cmp
scas
cmp
pop
cmp
rorl
add
jle
out
andb
scas
mov
repz
test
or
int3
arpl
gs
mov
imul
xchg
xor
mov
sub
std
loope
mov
out
popa
fcmovu
pop
jp
sbb
ljmp
push
int3
popa
xor
lcall
ret
pop
push
jge
sbb
xor
mov
pop
mov
hlt
cli
das
in
in
arpl
insb
and
movsb
pop
aas
pop
mov
mov
dec
int
vmovss
jnp
xor
xchg
dec
stos
pop
and
or
add
ss
stos
andl
push
mov
imul
insb
lds
xor
fisubrs
cs
xor
jns
rolb
out
jo
pop
pop
imul
mov
dec
frstor
stos
pushf
nop
jle
mov
xlat
mov
jnp
mov
and
xor
dec
fdivs
pushf
psubsb
imul
scas
mov
std
jecxz
sub
fdivl
xchg
and
cli
cwtd
decb
inc
rcl
mov
push
push
out
jno
mov
adc
mov
cmp
int
ficompl
jo
mov
ret
pop
cs
ljmp
push
ficomps
and
cwtl
test
xchg
inc
jbe
mov
inc
push
cmp
out
pop
jae
push
ja
std
xchg
aad
and
or
cld
jmp
fistpl
mov
ljmp
out
add
add
push
pop
in
mov
xchg
jmp
lds
fs
mov
call
divl
fwait
inc
pop
fnstsw
adc
lods
mov
pop
stos
push
pop
mov
out
scas
xchg
mov
dec
mov
cmp
stos
mul
xchg
pop
push
xchg
out
fsubrs
pop
cli
scas
jle
cmp
rcll
jmp
pop
repnz
add
pop
in
fildl
cmpsl
scas
add
loope
fdivrl
mov
insb
lds
pushf
add
pop
enter
out
xor
push
add
mov
jns,pn
leave
mov
mov
mov
xchg
push
das
and
mov
cmc
pop
cmp
push
ret
mov
mov
add
push
mov
inc
andb
dec
int3
xchg
mov
imul
pop
xchg
js
iret
fsts
rcrl
xchg
dec
mov
outsb
cmp
and
push
cltd
xor
mov
mov
mov
out
jnp
cmc
sub
lret
xchg
adc
mov
adc
in
adc
push
movsb
xchg
aad
out
mov
std
sbb
fistpll
call
xor
inc
mov
add
or
jecxz
and
out
testl
cmpsb
int
adc
jp
add
add
pop
stos
int
xchg
negl
rorb
popa
pop
int3
or
pop
sbb
cs
fsts
fidivl
dec
push
addl
enter
mov
test
adc
push
fabs
and
jbe
pop
fsubrs
push
es
dec
fldenv
stc
and
in
cmpsb
add
push
xor
sub
mov
sahf
jne
push
jg
loop
movsl
jg
add
xchg
jl
lods
pushf
repnz
xchg
mov
xchg
pop
pop
mov
adc
mov
adc
and
test
mov
popa
sub
rorb
rorb
ljmp
aad
inc
popa
sbb
mov
lea
pop
pusha
mov
sbbl
scas
cwtl
or
cmp
push
and
in
stos
ss
imul
nop
dec
fisttpll
xor
fs
ss
add
inc
cmpsb
stc
sbb
sbb
pop
push
arpl
fdivr
and
mov
sub
pop
out
shl
adc
and
mov
pop
mov
pop
inc
adc
lods
lahf
and
lods
das
rorl
icebp
popa
stc
pop
and
adc
leave
out
jb
in
mov
inc
lock
sbb
ja
jns
movsb
lods
jl
in
push
fidivs
xchg
ret
das
sbb
jo
push
daa
mov
mov
mov
cmc
cli
cmpsb
sub
iret
out
stos
cmpsl
shlb
push
mov
mov
nop
ficomps
jl
movb
popa
push
je
hlt
or
adc
inc
arpl
jl
enter
xor
inc
mov
jae
out
idiv
jle
stos
jns
cs
sbb
fildl
push
jg
mov
mov
repz
jnp
jle
cwtl
mov
lret
ja
push
mov
subl
into
lret
int3
arpl
cltd
xchg
std
stos
fldpi
dec
adc
mov
mov
cmp
jmp
or
int
sub
push
leave
mov
repnz
sbb
out
jge
and
xor
or
pop
xchg
into
mov
pop
mov
xchg
inc
or
adc
sahf
jecxz
fcompl
inc
notb
mull
pop
jp
xchg
cmpsb
imul
sub
pop
mov
roll
cwtl
out
mov
in
loop
insb
dec
orb
jo
loop
and
stos
repz
add
test
shlb
push
and
xor
adc
in
outsl
mov
mov
sahf
add
cld
add
cmpsb
pop
or
jecxz
jno
fwait
add
add
cwtl
testb
jge
dec
pop
push
scas
cmp
addr16
arpl
roll
mov
movsb
lahf
stos
dec
mov
add
cmp
cs
iret
out
popf
adc
jmp
fmull
xchg
inc
aam
mov
out
mov
mov
pop
aas
mov
out
movsl
sbb
cmpsl
mov
ja
stc
in
xor
jnp
mov
sub
negb
repz
or
pop
push
ja
push
out
divb
in
add
divb
js
fwait
dec
or
sub
test
test
cmp
mov
cltd
jp
push
mov
jne
scas
fidivrs
lods
cltd
fadd
adc
cmovno
ficomps
dec
jl
jnp
mov
add
jp
xchg
mov
dec
std
push
or
out
jne
jecxz
adc
mov
in
gs
jae
and
loop
mov
out
jge
xchg
int
push
lret
or
shrb
sti
push
sub
pop
push
aad
pop
add
or
sub
hlt
sbb
push
sarb
dec
mov
das
fwait
or
stos
into
addl
dec
mov
xor
stos
aaa
add
mov
je
ficoms
pop
jp
mov
sti
inc
inc
sbb
in
mov
std
dec
cmp
jo
sbb
jns
out
movsb
inc
lret
loopne
mov
sbb
push
jg
mov
popa
in
cmp
xchg
push
add
js
jle
inc
mov
and
push
scas
mov
xor
mov
inc
into
push
inc
mov
pop
cmc
inc
scas
dec
xor
lcall
popf
icebp
lds
lcall
mov
nop
add
inc
cmc
sbb
fsubrs
call
jns
popa
test
cmp
mov
push
mov
lods
int
js
jmp
mov
fnstcw
mov
pop
lcall
int3
cmpsb
sbbl
mov
inc
xchg
shr
dec
jmp
mov
inc
pop
es
xor
jmp
popa
outsb
and
cmp
push
and
aas
add
stos
ds
dec
mov
clc
cwtl
xchg
pop
popa
dec
mov
push
xchg
rcr
sub
sti
cmpsb
push
push
mov
mov
stos
adcb
cli
and
sbb
movsb
icebp
adc
push
add
jl
loope,pn
sub
imul
push
cmpsb
pop
xchg
pop
cmc
lods
daa
repnz
mov
into
inc
mov
sbb
lahf
and
xor
jp
sub
sti
roll
inc
dec
mov
mov
push
insl
dec
xor
jl
ss
xchg
rcll
je
pop
and
inc
sub
popa
lahf
shrl
or
xchg
test
pop
push
and
addr16
cltd
and
adc
out
lds
pop
roll
or
arpl
in
mov
test
pop
mov
inc
dec
mov
cmc
loope
aad
es
push
push
jg
lcall
out
ds
dec
std
cmp
jg
ds
cwtl
insb
and
pop
insb
and
sub
outsb
stc
js
or
in
hlt
cld
mov
xor
outsl
outsl
ficoms
inc
push
call
mov
adc
test
les
jne
xor
sbb
inc
xor
jb
push
mov
scas
repz
inc
dec
push
mov
out
lods
push
or
pop
pop
fwait
jmp
xchg
xchg
movsb
xor
sub
out
bound
nop
mov
dec
pop
shl
xor
nop
shrl
icebp
fwait
in
push
test
scas
je
jno
arpl
push
push
fwait
icebp
push
lds
sbb
and
jo
pop
jnp
mov
outsl
sbb
sbb
les
loopne
addr16
test
jb
adc
jle
jle
mov
mov
test
aaa
fdiv
and
shll
dec
mov
and
xor
add
add
int3
add
stos
mov
sub
imul
and
gs
shlb
stos
mov
add
mov
lcall
mul
jb
xchg
cmp
xchg
mov
enter
stc
fwait
xlat
inc
addr16
lcall
es
in
out
insb
sbb
lret
add
ret
jl
or
pop
jl
enter
jmp
jp
add
test
cmpsb
add
loop
add
aas
inc
mov
pushf
pop
pushf
adc
pushf
push
xor
cmp
loop
fsubl
sub
mov
andl
push
push
pop
mov
lret
pop
jp
iret
subb
aad
adc
jl
add
cmpsb
xchg
divb
push
subl
push
xchg
fadd
mov
xor
sbb
pusha
test
xchg
insl
scas
cmp
in
cmp
stos
out
fimull
mov
aad
fidivl
mov
and
stos
divb
ret
dec
dec
lds
pusha
cmp
into
or
xor
int3
popa
mov
das
les
mov
or
cmp
outsb
mov
jp
pusha
es
flds
and
pop
inc
mov
xchg
inc
push
and
and
ret
cmp
and
out
aad
test
test
xor
mov
mov
es
mov
push
stc
or
xlat
cmpsl
jl
daa
push
cmpsl
mov
dec
or
mov
xchg
loopne
mov
mov
push
shl
xchg
dec
int3
push
std
cwtl
test
in
sbb
sarl
loop
jae
call
jp
add
mov
fidivl
sub
mov
sub
jbe
in
mov
mov
pushf
xchg
out
sbb
push
icebp
cmp
mov
lods
aad
dec
sub
xlat
cmc
and
pop
ficoml
ja
rclb
push
xor
push
ds
in
cmp
add
cli
sub
adc
adc
frstor
sbb
sub
cmp
out
sbb
ss
dec
test
rcrb
loopne
jge
push
into
push
xchg
sub
pop
adc
mov
xchg
pop
push
push
jmp
adc
xor
cwtl
pushf
stc
gs
sub
movsb
adc
scas
cld
xor
push
push
pop
xor
mov
bswap
mov
jge
jne
aam
popf
add
ds
jbe
and
dec
adc
pop
fidivrs
test
dec
aam
gs
cmpsl
outsl
hlt
shrl
pop
leave
imul
inc
jo
outsb
sbb
jne
xor
fstps
movsb
lahf
inc
and
cmpsb
or
cwtl
in
lods
lock
add
xchg
stos
adc
xor
cmp
ret
lret
adc
lea
dec
jb
push
test
mov
dec
adc
sub
pop
into
sbb
int3
xchg
leave
push
inc
pop
arpl
xor
jnp
pop
pusha
mov
mov
inc
imul
in
movsb
subl
mov
lods
mov
adc
das
inc
add
and
iret
outsb
ds
out
subl
mov
xchg
push
push
and
lock
push
les
in
jp
fs
stos
xchg
aaa
int
insb
add
mov
sub
push
aad
mov
lahf
lock
in
inc
in
mov
insl
inc
push
popf
fwait
adc
loopne
pop
push
push
aaa
rclb
mov
addl
ds
xor
stos
push
dec
addr16
mov
pop
cmpsb
ss
jns
add
push
inc
jb
loopne
mov
fidivrs
in
push
add
mov
gs
cmpsl
xchg
or
sbb
sbb
call
fcmovnbe
mov
mov
cmpb
pop
decb
stc
jno
mov
cwtl
and
clc
aas
dec
std
inc
mov
mov
jo
rcll
scas
adc
cli
xor
xor
adc
mov
lods
out
dec
jg
xor
lods
rorb
jp
push
push
scas
outsb
les
scas
and
push
test
adc
test
stc
mov
call
aas
mov
clc
fsubr
push
cmp
dec
lock
mov
icebp
push
mov
inc
cwtl
pop
loope
shlb
out
lcall
shr
or
mov
sub
inc
roll
popf
push
loop
jo
jmp
in
and
clc
pop
loope
add
sarl
lahf
call
cmp
fidivrl
xchg
cmpsb
loope
mov
cmc
pop
les
pop
dec
out
arpl
fmull
add
pop
fstpl
dec
subb
les
pop
pop
fidivl
xchg
jnp
jmp
xchg
xor
imul
inc
sbb
scas
mov
ret
xchg
andl
out
jecxz
loopne
sub
fldl
xor
and
fcmovu
shrb
shl
sub
xorb
push
or
xor
pushf
adc
negb
dec
mov
sar
pop
addr16
jno
in
int3
fnstcw
push
iret
int3
fisubrl
cmp
sbb
push
jl
and
popf
addr16
mov
gs
or
sbb
pop
fisttpll
jge
stc
in
test
lods
and
ja
loope
cmp
ror
dec
sbb
shll
cwtl
jp
mov
in
scas
adc
cmp
outsl
lds
adc
les
scas
xchg
into
xor
push
pop
ja
pop
imul
mov
and
add
in
pop
pop
jmp
repnz
ljmp
sub
sub
mov
or
jnp
in
dec
cmp
fmuls
pop
jg
pop
mov
mov
sub
in
sub
cmpsb
inc
fidivrs
inc
and
subb
stc
and
xor
xchg
xor
dec
outsb
pop
imul
das
xchg
das
jbe
xor
jns
pusha
in
stos
push
push
jle
jl
pushf
cmpb
jle
scas
andl
xchg
stc
cwtl
push
mov
outsb
imul
repz
call
lea
push
or
addl
fists
cwtl
jae
add
bound
inc
shrl
sbb
lock
mov
mov
sbb
outsb
orb
stos
pop
aam
imul
call
inc
dec
mov
mov
push
in
dec
gs
mov
jp
adc
mov
bound
out
inc
mov
pushf
ss
push
dec
jl
aam
mov
xor
mov
mov
pop
mov
cmp
dec
jp
rcl
cs
les
aaa
cmpsl
into
sub
push
cld
jno
ret
out
aas
sub
mov
xor
or
cmc
lcall
loopne
cmp
mov
aam
jo
test
xor
lods
mov
outsb
test
jp
push
add
je
orl
repz
sbb
xchg
jmp
loopne
cld
fidivs
xchg
mov
or
scas
xor
in
frstor
fwait
je
test
insb
xor
jg
sti
push
mov
es
lret
stos
jbe
cmc
jge
pop
pop
pop
xchg
inc
jle
sarb
daa
popf
push
xor
fstpt
jnp
jecxz
cmp
pop
pop
cmp
aam
dec
cmp
lock
aaa
or
scas
imul
pop
xor
sarl
fstps
insb
lret
rol
hlt
xor
cmp
pop
jnp
and
arpl
inc
mov
movsl
cmp
xor
push
inc
cmp
lea
jbe
cmp
inc
dec
in
sub
pop
out
popa
sbbl
jmp
jo
xor
dec
negl
repz
ss
sub
jae
mov
xor
dec
cmc
sarb
sbb
pop
and
push
push
in
ss
notl
je
cmp
jle
mov
adc
nop
sbbl
out
iret
loop
das
jp
hlt
imul
rcr
repz
lret
mov
cmpsl
sub
adc
ret
filds
sub
fcmovnbe
xlat
adcb
mov
outsb
lds
inc
sbb
sbb
leave
adcl
mov
les
and
data16
sbb
jnp
inc
pop
sbb
inc
cs
daa
aam
lods
adc
movsb
shrl
das
unpckhps
mov
add
js
es
cmp
mov
mov
pop
ja
mov
mov
sub
mov
scas
lods
mov
xchg
sbb
and
popa
and
inc
sbb
or
out
clc
adc
into
es
ret
insb
adc
test
out
adc
movups
sti
mov
bound
mov
decl
mov
stos
repnz
mov
lds
sbb
dec
pop
verr
dec
push
cmp
push
rcll
adc
and
repz
out
fld
add
jl
repnz
and
jns
out
fisttpl
mov
or
jb
cmc
imul
fnsave
cli
dec
ja
mov
test
into
repnz
inc
and
dec
dec
mov
or
mov
clc
or
and
ss
sub
jo
sbb
in
add
mov
or
std
mov
xor
js
icebp
xchg
stos
ret
jge
cmp
mov
addb
imul
push
sub
jne
adc
pop
add
sub
sarb
loop
push
or
sbb
lret
pushf
jp
int
inc
mov
ret
mov
pop
test
ja
push
rcll
mov
imul
iret
lods
test
jne
mov
hlt
movsb
inc
cmp
mov
fcmovnb
imul
push
and
fisubrl
push
ds
cmp
add
xor
fsubrl
cmp
xchg
cmc
addr16
push
mov
scas
out
cmp
filds
mov
mov
aad
ja
orl
inc
and
mov
add
xchg
pop
sahf
dec
sub
push
adc
mov
inc
sbb
hlt
cmp
fucomip
gs
push
fldt
pop
push
test
fisubl
stos
xchg
jae
jge
ret
adc
ret
xor
inc
ret
dec
sub
and
loope
jg
adc
dec
pop
ret
jle
shll
std
and
pop
fists
mov
xchg
enter
pop
ljmp
jbe
frstor
add
jmp
sub
mov
lods
shlb
xchg
mov
sub
mov
pop
fs
int
cmp
pop
loopne
pop
mov
sti
dec
jecxz
lret
popf
std
in
cmp
fsub
jo
test
adc
decb
mov
pop
or
movsl
in
cvttps2pi
mov
push
or
pop
push
aas
lods
jl
stc
ja
jno
adc
inc
in
pop
sub
xchg
sbb
cmp
xchg
js
test
stc
sbb
xor
pop
lea
rol
lods
sub
push
test
or
orb
mov
imul
ds
mov
ss
cmp
xor
int3
push
mov
mov
push
xor
aam
jmp
shrl
cmp
jb
push
out
mov
add
lcall
out
scas
cmp
rcrl
stos
jbe
mov
fadds
sbb
sub
mov
pop
dec
xor
fidivrl
xchg
loop
clc
push
pop
sbb
sbb
out
inc
dec
mov
xchg
xor
nop
pop
jae
push
icebp
sarl
mov
mov
cmp
aaa
sti
adc
in
adcl
inc
or
cs
sbb
iret
fisttpll
dec
xor
cmp
jle
pop
mov
dec
ja
mov
ss
es
pushf
std
xchg
sbb
push
outsb
or
fcmovnbe
xchg
xchg
pop
xor
iret
nop
xor
mov
pop
and
test
mov
ja
lock
xchg
inc
xor
xchg
jns
mov
addr16
pushf
sahf
mov
loop
in
and
stc
inc
cmp
adc
adc
fdivr
lret
pop
test
loopne
mov
sbb
flds
fsubr
xchg
sar
adc
push
int
mov
or
dec
cs
sbb
add
dec
sub
and
cmp
push
push
inc
push
adc
scas
push
jecxz
adc
jnp
aam
pop
popa
ret
mov
filds
xor
xchg
sub
popf
sti
repnz
cwtl
mov
lods
mov
push
cltd
push
add
subl
sub
fwait
add
push
rcr
les
sbb
lahf
xchg
cmp
mov
sbb
inc
ret
cmpsl
bound
lds
movsb
xchg
sbb
push
repnz
aas
mov
outsl
cltd
stos
jle
mov
fadds
add
pop
stc
and
sbb
movsl
cmpsl
js
cs
mov
nop
mov
imul
dec
xchg
cli
sub
add
xchg
sbb
shll
int3
push
testb
jmp
sti
or
insb
test
fdivs
test
adc
shll
out
lods
movl
mov
mov
rcrl
hlt
mov
mov
pop
inc
ss
lea
imulb
push
lods
ret
xorb
vmwrite
fneni(8087
insl
jbe
mov
cli
repz
xchg
sbb
inc
sbb
fsubl
sub
addl
mov
push
loope
leave
data16
lret
mov
repnz
pop
or
into
lret
loopne
lahf
jae
ret
js
imull
incb
mov
nop
mov
add
adc
or
and
je
inc
pop
pop
hlt
mov
cmp
fistpl
cld
and
repnz
or
or
mov
push
test
mov
xchg
in
jmp
hlt
sub
punpcklbw
loop
push
or
dec
in
and
inc
sub
pop
sub
dec
ja
in
inc
mov
mov
lods
test
dec
sub
xor
pop
fdivp
push
cltd
pop
and
fidivs
loopne
fwait
aaa
mov
xor
or
xchg
scas
popf
loop
inc
pop
cmp
mov
dec
push
aas
xor
lea
movsl
xchg
adc
jae
and
adc
movsl
inc
and
pushf
sbb
adc
sbb
mov
jl
lret
jge
rcrb
push
push
push
lcall
ja
outsl
fistpll
sub
shrb
sub
sub
jecxz
sbb
jo
mov
sbb
std
js
cmp
cli
inc
and
sub
into
xor
ror
daa
dec
int
sbb
jno
jle
xchg
repz
cmpb
lcall
fs
mov
adc
in
mov
dec
jne
int3
sbb
imul
aam
aam
sti
ficomps
xor
lods
dec
adc
inc
stc
inc
mov
inc
jmp
out
adc
cmp
jae
jl
arpl
aad
mov
mov
enter
mov
in
in
arpl
std
jb
xchg
not
cmp
or
mov
test
mov
adc
pushf
mov
mov
add
push
sbb
notb
mov
nop
pop
push
push
sar
fstpt
and
cmc
fwait
xchg
mov
les
in
dec
adc
aaa
dec
std
stc
add
jno
push
pop
outsb
mov
mov
sub
add
and
push
mov
sahf
jns
lcall
stos
js
lods
adc
add
pop
in
xchg
sahf
outsl
inc
push
pop
push
ja
push
sbb
xchg
add
into
mov
int3
inc
sti
lahf
or
popa
cld
mov
repnz
xor
mov
sub
pop
add
push
push
pushf
xchg
out
lods
out
jmp
dec
aaa
or
or
xor
lcall
cwtl
dec
aas
es
js
cmpsb
xchg
call
add
mov
fdivrp
mov
adc
push
or
hlt
push
vmovupd
pop
xlat
popl
sbb
sbb
fwait
lret
ret
test
adc
xchg
insb
push
xor
shll
add
xor
push
sbb
daa
xor
ror
into
movsb
ret
xor
inc
xchg
inc
out
xor
add
leave
jp
mov
jo
sbb
adc
lea
jp
cwtl
addl
sarb
push
xchg
xchg
mov
xchg
sub
fsts
test
xchg
outsl
out
int
scas
inc
fnstsw
add
adc
inc
out
sub
int3
rol
add
add
scas
jmp
push
out
int3
repz
notl
or
in
call
jbe,pn
inc
movsb
or
andb
xor
inc
xchg
push
inc
sbbl
rolb
std
js
push
rolb
sub
jne
jbe
fimull
xchg
stc
stos
rcrb
push
sbb
cli
inc
shll
add
or
dec
push
push
dec
aas
xchg
rcrb
xor
xlat
jnp
xchg
push
mov
out
inc
sub
adc
or
and
mov
pushw
pop
add
or
sbb
out
stc
mov
sbb
add
sub
divb
inc
test
pushf
jo
shll
push
mov
ret
add
lods
gs
out
hlt
pop
sbb
in
xchg
in
and
push
xchg
or
jbe
sub
push
popa
sbb
sbb
xchg
test
dec
imul
movb
stc
cmpsb
orl
filds
subl
fs
push
add
push
jb
icebp
rolb
in
inc
arpl
std
jb
arpl
jg
xchg
jp
push
jl
adc
mov
jge
push
cmp
or
pusha
in
dec
pop
out
out
shrl
pop
cmp
and
push
xchg
cmp
ret
adc
push
push
mov
in
mov
dec
fldcw
sub
repz
xor
out
mov
bound
int
test
jle
lcall
aas
incl
fcmovb
outsb
mov
inc
pop
es
mov
mov
or
cmp
cmpsb
inc
loopne
inc
imul
mov
sub
andb
scas
xor
frstor
mov
orb
mov
mov
jmp
fisttpll
outsl
or
xchg
jbe
xchg
sbb
cwtl
ret
stos
or
push
ja
dec
adc
mov
xchg
test
lcall
jp
mov
cmpsb
cmp
mov
mov
sbb
inc
xlat
add
fnstenv
loopne
mov
sti
push
jae
push
jp
clc
popa
loopne
mov
das
or
or
inc
popf
lcall
jno
lea
jg
insl
clc
popa
aaa
int3
jl
scas
mov
or
cmp
insb
xchg
pop
scas
aas
push
outsl
testl
aas
ds
adc
jle
xchg
inc
addl
dec
lcall
add
mov
mov
jge
xor
sbb
hlt
es
sub
mov
out
mov
xchg
adc
imull
push
cmp
xchg
jmp
xchg
outsl
xor
xor
shlb
and
mov
and
mov
in
lret
test
std
cmp
sbb
dec
or
dec
xchg
fwait
inc
sbb
out
fwait
pop
push
mov
dec
dec
xchg
int
cmc
cmp
ds
and
xor
std
xchg
fbstp
mov
unpckhps
and
mov
dec
cmp
leave
mov
dec
xchg
push
sbb
and
std
or
loopne
jecxz
cmp
lea
xchg
sbb
xor
pop
dec
mov
test
ret
push
lret
rol
scas
aad
movsb
cmp
lret
fsubp
xor
pop
pop
push
inc
jnp
idivb
xchg
cmp
scas
test
add
sub
cmp
cmp
in
out
js
mov
push
repz
cmp
pop
loopne
or
pop
mov
mov
add
fldl2e
push
fstl
jnp
sbb
movsl
sbb
bound
sub
push
push
xchg
call
ja
xor
mov
sbb
adc
ja
jle
mov
imul
xor
lods
mov
mov
ds
fs
push
inc
mov
je
or
popf
mov
and
in
add
push
out
push
loopne
ficomps
adcl
mov
pop
mov
jle
jg
jle
pop
pop
in
dec
rcr
insb
push
ret
push
cmp
leave
insl
jo
jb
jb
push
cmp
sti
int
sbb
cmp
xchg
xchg
inc
pushf
adc
and
pop
test
xchg
dec
sub
jecxz
xor
test
xchg
mov
dec
movsl
xor
or
outsl
sbb
ss
push
out
out
add
fcoms
add
enter
lods
mov
xor
push
incb
add
sbb
in
jecxz
sti
frstor
or
imul
inc
in
mov
shrl
xor
jnp
sub
incb
adc
dec
mov
sbb
push
sbb
faddl
inc
inc
mov
dec
cli
mov
cwtl
pop
mov
mov
add
out
xchg
lock
enter
jl
jg
push
push
adc
mov
fldt
xrelease
or
push
cmp
cmp
aam
xor
dec
xor
js
cld
sub
sub
sahf
popf
pcmpeqw
movsb
cltd
cmp
mov
add
ficompl
add
aam
mov
adc
mov
addr16
aam
scas
mov
pop
mov
jne
std
aam
out
pushf
ror
xor
bound
shll
hlt
rorb
ss
insb
sahf
in
fdiv
xchg
mov
jnp
iret
into
subb
xlat
sarl
movsb
push
jp
movsb
mov
cmp
ja
adc
aam
push
push
xlat
mov
pop
pusha
mov
js
pushf
addl
in
pushf
lock
pop
xchg
fldcw
xchg
push
inc
pusha
jp
xchg
jp
xchg
loopne
inc
pop
jno
int
sub
and
jns
mov
cmpsl
xchg
daa
sub
mov
cld
cli
fstpl
and
mov
jmp
jb
push
push
pusha
dec
and
jmp
xor
mov
pop
ds
in
lahf
xchg
mov
jmp
cltd
and
dec
insl
jp
sarl
aad
mov
push
mov
push
lock
pop
loop
sub
push
cmp
ljmp
sti
lret
outsl
jns
pop
mov
les
arpl
pusha
mov
jo
into
cmp
inc
cmc
popa
in
sbb
insl
inc
daa
test
pusha
sub
fsubrp
jnp
imul
push
inc
dec
mov
cltd
sbb
pop
or
rcll
sbb
pop
adc
cmpsb
cmp
fisubrl
test
subb
mov
mov
out
mov
les
add
shll
xchg
fsts
mov
jo
roll
push
xchg
enter
adc
push
and
mov
cmp
push
sbb
push
jnp
outsb
stos
shl
push
loopne
in
or
test
jnp
in
inc
sti
int
sarb
mov
sub
mov
pushf
aad
test
cld
pop
dec
lea
sbb
jns
aas
mov
lahf
add
outsl
sub
loop
mov
call
call
pop
sbb
rcrl
or
inc
arpl
add
outsb
js
loop
jne
and
mov
arpl
rclb
insb
or
imul
dec
or
cmp
sbb
push
rol
pop
fldt
out
movl
rcr
scas
incl
and
test
outsl
adc
mov
aam
loopne
cli
les
fwait
mov
sub
loopne
icebp
or
pop
jbe
cmp
insl
xor
push
jbe
pop
and
mov
cmp
je
in
cmp
xor
push
subb
enter
test
push
inc
cmpsl
in
xor
sbb
adc
pop
sahf
mov
and
cmc
cmp
jb
cmpb
sti
daa
imull
fwait
jbe
mov
cmp
lcall
cs
bound
or
es
sub
orb
sti
pushf
inc
mov
mov
into
ljmp
add
out
outsl
mov
rclb
repz
adc
loopne
clc
sbb
push
daa
push
pop
rol
push
mov
add
jo
ja
nop
push
xor
andl
shl
sbb
stos
add
dec
and
inc
mov
pop
cwtl
outsl
push
pusha
sbb
mov
mov
enter
arpl
roll
mov
adc
cmp
ret
mov
or
sub
dec
out
jb
fs
scas
or
push
mov
xor
inc
rcrb
cld
stos
sbbl
add
loope
shll
fstl
out
call
popa
loopne
push
enter
sarl
pop
pop
pop
add
orl
xor
ficompl
gs
inc
add
mov
sahf
add
xchg
push
dec
jnp
dec
and
ja
fists
aam
jbe
mov
pop
sbb
xchg
mov
mov
xor
aad
xlat
lahf
push
mov
lock
lcall
jg
mov
inc
pop
scas
bswap
das
popf
jnp
sbb
shll
cwtl
or
sub
imul
and
mov
adc
jle
and
dec
mov
nop
jo
insl
jge
or
dec
and
int3
xchg
sub
insb
mov
pusha
jae
lds
jecxz
xchg
int
leave
push
xor
push
or
mov
addr16
sub
jnp
shl
and
mov
jo
xchg
mov
cmp
push
cmp
jne
fildl
jno
ja
movsb
rclb
jp
inc
cs
sub
into
loop
std
rorl
pushf
or
add
lods
jae
jno
xchg
mov
icebp
jecxz
lret
sbb
push
mov
rolb
sbb
iret
mov
mov
lods
mov
shr
sbb
ss
xchg
nop
add
jge
shl
icebp
mov
xor
aas
out
xchg
push
test
push
xchg
inc
shr
stos
jmp
and
mov
add
mov
cmp
enterw
jmp
cs
cmp
shrl
push
stc
sbb
test
cmp
jmp
in
gs
xor
sbb
add
jbe
mov
sbb
dec
fbld
jp
mov
mov
frstor
into
in
dec
loopne
out
pop
jae
adc
inc
gs
push
in
in
hlt
lcall
or
cmc
sti
lods
sub
jmp
filds
pop
lahf
jmp
push
test
jo
pop
repz
fwait
jbe
mov
mov
add
jae
sbb
xchg
repz
arpl
dec
std
jns
sub
lret
add
sub
enter
outsb
fistl
fldt
ret
shlb
lret
loopne
cmp
or
cs
ja
jo
sbbb
out
outsb
sub
cmp
stc
cli
mov
xchg
rcll
mov
xchg
adc
cmp
mov
aaa
out
rcl
movsl
mov
shrb
or
pushf
aas
pop
dec
cmpsb
cmpsb
mov
mov
loop
or
scas
shll
repz
arpl
loope
add
leave
fwait
jge
mov
cmp
add
jmp
mov
pop
push
sti
sahf
call
fdivr
lret
jne
das
cmp
aad
lcall
sbb
push
sbb
xchg
mov
mov
xor
les
out
or
mov
cmpsb
pop
out
add
call
inc
sti
ljmp
pop
pop
or
ret
mov
iret
jl
scas
mov
or
insb
mov
dec
mov
dec
das
daa
in
sub
popa
faddp
and
xlat
in
rcrl
mov
pop
xor
mull
adc
addl
nop
push
pop
inc
push
jns
pop
mov
frstor
sbb
pop
outsl
repnz
lods
or
xorl
xchg
daa
movsl
sub
adc
inc
mov
sub
mov
add
arpl
jmp
pusha
mov
dec
scas
lock
push
cmpsb
xor
aaa
mov
xchg
stc
addr16
cwtl
mov
sarb
stc
in
mov
xchg
popf
insb
sub
aas
popf
movsb
mov
lds
bound
js
xor
sub
xchg
pop
sub
pusha
aas
xor
push
pop
inc
lea
mov
pop
adc
mull
xor
sbb
mov
clc
push
mov
xor
fsubl
repnz
jnp
adcl
popa
test
scas
icebp
jo
xchg
ret
inc
fbstp
fsubs
icebp
leave
dec
jno
mov
ret
nop
push
sub
stos
inc
push
jge
cmpsl
rcll
je
fiaddl
adc
mov
test
jp
out
sbb
fwait
push
aam
dec
push
loope
add
cmp
adc
sub
or
mov
jg
repnz
loopne
bound
sub
push
jle
pop
mov
pop
and
jae
dec
stos
xchg
in
rclb
lds
mov
fdivrs
lcall
inc
mov
dec
cli
mov
fcomi
neg
lods
rol
mov
in
mov
lea
mov
push
in
xchg
arpl
mov
fmuls
test
sbb
leave
lds
inc
xor
jo
fbld
mov
jg
push
stos
mov
sti
aam
data16
inc
push
and
clc
shlb
mov
pop
xor
fnstenv
lahf
stc
daa
mov
inc
or
les
mov
jmp
fldl
dec
cmc
outsl
or
mov
fbld
test
stc
mov
sub
inc
xchg
jmp
out
cltd
pop
lret
out
bnd
adc
cltd
sbb
es
add
add
sbb
test
mov
xor
and
cmp
loope
cmc
xchg
push
lret
fdecstp
add
and
sub
ret
sub
jle
xchg
int3
pushf
sbb
add
out
adc
scas
sahf
mov
fbstp
xlat
xchg
pop
cmpsb
std
lret
sub
mov
xor
int
subb
aad
jae
mov
fcomp
sbb
jl
enterw
icebp
dec
arpl
xchg
ds
inc
pop
movsb
bound
and
test
or
mov
pop
sub
ret
gs
inc
cmpsl
mov
xorb
or
dec
fadds
ss
clc
inc
roll
lahf
inc
imul
ds
or
push
cmp
push
mulb
outsl
imul
adc
pop
nop
xchg
push
nop
imul
inc
lods
jns
and
jne
mov
xor
or
xchg
sbb
or
jl
mov
pop
stos
or
push
ljmp
pop
stos
xchg
loopne
mov
popa
sbb
ja
jo
jbe
cwtl
add
ret
mov
dec
leave
rcll
mov
mov
dec
scas
pop
fidivs
das
mov
jne
cmp
out
inc
pop
stc
push
xchg
cmp
push
pop
cmpsl
xor
pushf
mov
in
mov
lahf
adc
cmovle
xor
mov
sbb
pop
divb
xlat
inc
or
inc
jne
mov
pop
cltd
jae
stc
push
or
xor
jl
lahf
movl
call
mov
pop
push
fs
into
push
in
jns
nop
lods
cli
ds
pop
sbb
sarl
aas
fsubr
mov
push
mov
mov
lods
jbe
cmpsb
push
cli
adc
in
jno
pop
in
push
cmp
loope
imul
leave
stos
bound
lods
xchg
orl
out
das
mov
xchg
in
push
sti
xchg
ror
sbb
fisubs
arpl
lock
lahf
or
jl
inc
inc
mov
mov
push
pusha
adc
sub
cmp
daa
xchg
stos
jl
push
dec
fisubl
mov
mov
imul
iret
je
xor
and
pop
stc
sbb
adc
sti
push
and
jmp
dec
mov
mov
dec
loop
xor
push
sbb
scas
stos
daa
je
aas
data16
sbbl
int3
lcall
sbb
andb
push
dec
iret
pop
add
pop
idivb
or
test
mov
enter
inc
popa
sahf
in
mov
divb
adc
jg
test
pop
xchg
lahf
cs
popa
mov
std
loop
jns
loop
lds
into
shl
sub
je
mov
stos
mov
pop
mov
xor
xchg
mov
data16
mov
jnp
scas
ss
jnp
lret
aad
addl
rclb
fildl
inc
clc
push
test
addr16
mov
roll
sbb
mov
dec
pushf
and
fwait
xchg
es
pop
jbe
movsb
mov
sahf
cli
sub
push
and
dec
or
aad
or
dec
cmpl
jle
movsb
out
iretw
push
std
subl
push
lods
mov
test
xchg
sub
repnz
cmp
dec
ret
pop
mov
jae
dec
inc
jbe
cmc
movsb
pusha
aam
jne
icebp
test
dec
or
sub
outsb
push
xor
test
jge
jbe
push
into
inc
mov
sbbl
int
xchg
mov
mov
pop
sub
pop
movsb
loope
int3
fs
pop
jecxz
fildl
push
push
inc
mov
stos
jne
fwait
jecxz
mov
inc
mov
or
fnstenv
push
mov
adc
in
xchg
call
repnz
repnz
and
sbb
mov
xor
push
sbb
mov
xchg
test
pop
jne
iret
inc
cmp
movsl
pop
or
rorl
dec
rcrb
lret
cli
es
jns
lret
xor
jg
stc
mov
sub
jge
aas
push
push
cmpsb
enter
jmp
mov
std
jecxz
mov
sbb
xor
mov
mov
cmp
int
mov
mov
negl
in
add
adc
out
or
xchg
push
dec
lds
bound
movsl
push
and
mov
xchg
dec
lea
jnp
dec
es
call
cld
sub
movsb
jne
ja
sbb
leave
inc
out
sub
cmp
sub
repz
jne
gs
movsl
mov
stc
shl
hlt
loope
and
out
cmp
shrl
dec
jl
hlt
popf
and
push
clc
push
push
outsb
pop
testb
int3
jg
cmpsb
mov
call
clc
sbb
sub
push
xor
mov
sub
out
fbld
xor
mov
scas
addr16
jg
popf
add
ret
fimuls
gs
aam
mov
jmp
add
je
cmp
jno
adc
dec
adc
dec
jge
jle
xchg
rorl
inc
or
mov
cmpb
xor
ljmp
mov
cmpsb
sub
into
jb
sahf
je
xorb
sbbl
lret
mov
jbe
test
xchg
jns
aas
cltd
div
mov
in
lahf
jo
mov
cld
jne
outsl
je
adc
jnp
sbb
out
test
jne
mov
mov
into
test
scas
aad
add
mov
inc
fdivl
jmp
js
ret
inc
testb
jo
nop
xor
fcom
and
arpl
movsl
nop
mov
lahf
cli
aad
rcll
inc
push
adc
fdivrs
cmc
xorb
call
xchg
xchg
inc
sbb
push
aaa
outsb
cld
add
and
cmp
inc
icebp
inc
les
fnsave
add
inc
cmc
fnstcw
cltd
les
shrb
add
pop
je
test
sbb
push
or
inc
jo
jle
inc
test
lret
into
ljmp
xchg
and
stc
lret
ret
ds
cmpsl
jl
mov
fcomi
jo
mov
cmpsb
scas
pop
mov
dec
xchg
pop
enter
dec
dec
shll
imul
sub
sub
add
adc
mov
and
subl
pop
dec
arpl
subl
jns
movsb
xor
push
mov
das
sahf
mov
sbb
cmp
dec
push
adc
dec
ss
adc
sti
push
js
inc
lret
test
mov
xchg
adc
shrb
es
sbb
insl
sahf
aad
dec
mov
int3
bound
cmp
sub
mov
sbb
jg
loopne
test
leave
mov
jge
mov
insl
jl
mov
cs
lds
mov
mov
add
sub
sti
jmp
sub
mov
mov
jecxz
inc
sti
mov
add
inc
mov
mov
xor
and
xor
mov
cmp
out
test
movsb
pop
iret
jb
stc
dec
arpl
lahf
pushf
push
and
inc
popa
jmp
or
or
pop
xor
mov
punpckhdq
fldl
xor
loopne
sub
cli
lea
cld
shlb
mov
dec
das
push
pusha
in
or
fistps
repz
aam
hlt
movsl
out
fwait
adc
sbb
testl
xor
mov
fsubl
inc
test
movsb
mov
imul
pop
pushl
mov
out
add
push
test
mov
pop
repnz
mov
lea
or
ja
xchg
out
clc
lahf
imul
jmp
arpl
icebp
cwtl
mov
cmp
sbb
iret
cmp
xchg
out
addr16
or
pop
cmp
mov
mov
rcrb
xchg
or
push
push
iret
rcr
jae
cmp
adc
shr
test
cwtl
nop
aas
push
xchg
aad
mov
xchg
push
out
push
pop
adc
jne
xchg
xchg
sbb
push
jnp
xor
out
mov
or
les
pop
and
fwait
mov
es
test
push
subl
add
aad
outsl
mov
icebp
jb
ret
iret
sar
push
sbbl
jecxz
mov
ljmp
int3
mov
call
scas
ds
mov
jmp
xor
imul
in
jl
push
mov
sbb
xor
ljmp
cmpsb
pop
add
pop
sbb
push
lods
inc
stos
mov
ja
jno
mov
jmp
push
repz
ja
push
dec
mov
fiaddl
inc
je
push
enter
xchg
lret
or
mov
lods
addr16
enter
addr16
outsl
pop
pop
push
dec
movsb
mov
xor
data16
sar
mov
push
xor
adc
sub
int
xchg
mov
and
sub
add
test
push
mov
adc
jb
mov
insl
lds
ret
xor
fstpt
mov
paddsw
iret
sbb
adc
lds
xchg
stos
cld
jno
mov
sub
sub
loope
pop
pavgb
dec
jb
cmp
test
cmovns
flds
sbb
sub
in
sbb
out
cli
repz
fwait
push
push
mov
stos
inc
ds
cmp
inc
pop
jnp
pop
out
jmp
push
or
das
lret
daa
push
gs
stc
xor
push
test
push
rcll
pop
movsb
sbb
push
sarl
mov
inc
xchg
inc
cmpsl
jp
sahf
pop
cwtl
jl
ret
cmp
xor
ror
jle
jns
add
push
out
adc
pop
push
xchg
jecxz
ljmp
lret
mov
stos
cltd
sarl
add
stos
cmp
out
xchg
add
in
loope
and
mov
mov
scas
xchg
lret
popf
in
jle
adc
and
clc
or
sbb
cmc
inc
lock
rcrl
outsb
xlat
and
lret
jno
cli
mov
es
ss
push
in
push
xchg
push
mov
inc
dec
inc
mov
arpl
js
xlat
sub
rorb
xchg
xlat
xchg
test
out
mov
int3
cmpsb
cmpb
out
or
repz
mov
sarb
cwtl
rcll
loopne
xor
or
out
xlat
outsl
int3
jecxz
in
fwait
sub
cmp
mov
add
push
push
pop
sub
pop
shll
push
mov
movsb
add
subb
dec
mov
hlt
sub
add
pop
fstpl
lods
jecxz
pop
adc
push
pop
cmpsl
loope
xchg
xor
jb
cwtl
inc
push
mov
cmp
and
dec
xchg
filds
or
jecxz
or
lret
cmpsb
mov
lods
test
call
sbb
lock
mov
lea
adc
shrl
jl
mov
fistps
xchg
add
addr16
scas
mov
and
cmp
hlt
pop
sbb
add
jmp
adc
xor
push
jns
cltd
fisubs
push
in
sub
nop
lahf
test
hlt
nop
loope
cmpsl
and
sbb
cmp
loopne
in
stc
shll
jmp
xor
and
sbb
cld
and
and
daa
xchg
pop
push
std
mov
sbb
stos
jge
dec
or
pop
mov
cltd
push
stos
fwait
xor
jnp
jmp
xor
loope
or
sub
into
mov
mov
popf
fistpl
jno
sub
jno
jge
cmp
push
sti
add
fs
negl
add
xor
js
mov
repz
inc
outsb
dec
sbb
pusha
cmpb
bound
popf
scas
jmp
gs
dec
test
adc
lods
roll
test
or
xor
movsb
cmpsl
mov
shr
data16
dec
jle
pop
enter
push
lods
lods
mov
xchg
stos
xchg
xor
fstps
or
scas
cltd
inc
pop
mov
push
lock
xor
ds
subl
ds
fwait
leave
mov
sahf
dec
inc
inc
ret
in
test
loope
mov
mov
int3
sbb
pop
icebp
mov
aam
inc
xor
dec
loop
adc
xchg
inc
dec
test
es
lahf
push
in
push
xor
xchg
xchg
ficomps
aad
and
pop
icebp
xchg
and
push
mov
jb
xchg
outsl
xchg
lahf
push
scas
aaa
or
std
dec
push
jle
loope
movsb
sbb
rcll
fdivrl
xchg
sub
xor
push
jnp
lods
sub
xor
pop
outsl
aam
rcrl
cmpsl
das
popf
lods
ja
in
and
add
fcomps
inc
jnp
sub
int3
cmp
pop
loop
mov
sahf
pop
push
movsb
ret
test
lahf
push
and
and
loop
pusha
adc
adc
and
xlat
or
push
out
outsb
inc
daa
idivl
sbb
stos
cmp
fcmovnu
push
and
mov
inc
cmpsl
pop
enter
xchg
sbb
stos
popa
aaa
lea
mov
stos
and
loop
arpl
dec
jns
cmp
aam
loop
xchg
add
mov
fiaddl
pop
popa
test
push
dec
nop
cwtl
fldt
clc
js
mov
icebp
sbb
cwtl
sbb
leave
push
lcall
insb
mov
sub
iret
imul
mov
xor
add
sub
popa
ds
pop
or
imul
mov
stos
jnp
mov
sahf
rcll
addb
dec
cmp
ss
ret
stos
jecxz
outsl
popf
sbb
mov
push
nop
mov
imul
add
lahf
sbb
sub
aaa
sarb
mov
sbb
pop
int3
add
cmp
stos
pop
loope
pop
cmc
and
mov
or
or
test
push
add
inc
fidivs
outsl
lret
lock
dec
adc
or
push
mov
repnz
push
dec
into
inc
aas
xchg
fiaddl
mov
jbe
dec
or
rcrb
in
push
sti
and
push
pusha
mov
popf
lods
mov
xor
les
outsb
ret
jmp
pop
stc
dec
fwait
ror
xchg
sbb
mov
fwait
out
jo
movsb
jecxz
add
sbb
lods
add
push
aam
sub
outsl
cli
mov
iret
mov
es
scas
sbb
and
mov
mov
icebp
mov
xchg
xchg
sub
test
rcll
xchg
inc
insl
fadds
outsb
inc
punpckhwd
xchg
les
in
xor
xor
sub
jb
inc
mov
cmc
sub
aad
fidivl
inc
xor
pop
push
and
loop
pop
jle
push
aad
inc
mov
sbb
mov
xchg
sbb
xlat
or
push
mov
dec
jo
pop
jle
pop
push
test
sahf
mov
jle
pop
add
cmpl
mov
xlat
scas
lahf
push
lahf
fisttpll
mov
add
js
rclb
inc
lcall
pop
xor
movups
pop
sahf
push
sub
or
cli
mov
cmpsl
jbe
jo
or
fcoml
loope
jne
adc
push
sarl
stos
jl
xchg
mov
push
add
push
cmp
stos
std
std
sarl
loop
sbb
adc
daa
cmp
inc
cmpl
ret
lds
sti
fsubr
mov
int3
sbb
aaa
mov
loopne
scas
pop
test
lods
les
pop
pop
out
addr16
and
and
lods
imul
nop
leave
sbb
pop
out
ss
push
mov
mov
cmp
test
cltd
es
shll
mov
sub
cwtl
mov
dec
mov
lret
pop
sub
pop
mov
cld
adc
loop
dec
adc
and
xchg
jns
add
int
loopne
adc
sub
int3
add
inc
iret
sti
pop
cmpsl
pop
xchg
pop
jl
xor
adc
jg
addl
dec
mov
mov
mov
sub
xor
fcmovbe
addr16
loop
xorl
sar
roll
sbbb
xchg
xchg
sbb
inc
mov
inc
fwait
xor
insl
test
ljmp
pop
push
sbb
jne
movsb
push
fsubp
pop
xor
mov
pop
push
jl
mov
and
movsb
int
sbb
icebp
dec
stos
mov
test
inc
jo
icebp
cmp
repnz
ret
xchg
in
mov
push
and
sub
mov
mov
out
add
push
rol
aad
adc
gs
jae
push
cmp
mov
rolb
inc
sub
and
cmp
ljmp
sbb
out
movsb
jbe
add
jp
pop
cmpsl
push
jnp
mov
rorl
pushf
rcll
sub
xchg
pop
lds
mov
dec
cmp
mov
cmp
call
scas
cmp
adc
sub
jg
cmpsb
and
ret
test
lcall
movsl
mov
add
lcall
sbb
cmp
movsb
xchg
and
jno
sbb
pusha
push
ds
xchg
push
fdivrs
incl
sbb
add
pop
fmuls
or
mov
ja
sbb
cli
cld
adc
xor
mov
xlat
jmp
movsb
icebp
shll
and
xchg
cld
push
adcl
int3
pop
adc
lcall
add
mov
sbb
test
xchg
fiaddl
pop
push
dec
call
lret
gs
xchg
fs
fldt
fldl
gs
sbb
bound
push
dec
je
divb
adc
adc
add
repz
cmpsb
loope
cmp
adcb
pop
nop
cmpb
mov
jmp
fwait
repnz
popf
inc
or
fptan
pop
sbb
cs
inc
dec
dec
jnp
mov
int3
test
or
xlat
sahf
mov
jecxz
mov
jp
sub
inc
and
mov
insb
adc
sub
cli
inc
aaa
mov
sbb
aaa
int
jns
mov
mov
clc
decl
pushf
rcrb
into
fldl
mov
adcb
dec
ficoms
int
or
lds
xor
loope
enter
jnp
cmp
out
mov
cwtl
mov
push
mov
mov
sbb
lods
das
mov
and
xchg
cmp
lcall
mov
mov
mov
stc
arpl
push
nop
cmp
push
mov
cmp
xor
add
inc
or
jns
test
aas
sbb
fsubrl
xor
loope
jmp
adc
hlt
repz
mov
mov
mov
add
add
cmp
fldenv
mov
inc
push
or
roll
test
xlat
mov
jne
sub
xor
clc
fistl
cmp
cmpsl
lods
dec
dec
pushf
jle
cmp
leave
mov
stos
sub
data16
xlat
fisubl
inc
cmc
pop
cmp
pop
push
jae
ret
lret
leave
rcr
icebp
mov
xchg
imul
inc
icebp
ret
js
add
or
out
push
int
rcrl
and
and
mov
sbb
lds
mov
or
lret
ds
xchg
jle
fdivs
dec
xchg
scas
sbb
je
jne
mov
pop
and
xor
pop
inc
push
and
cmp
inc
adc
inc
je
push
loop
mov
lret
cmp
adc
lret
sub
decb
shr
mov
pushf
pop
ds
cmp
dec
jmp
inc
dec
adc
movl
int3
nop
cmc
dec
cs
mov
pop
adc
inc
push
les
adc
xor
xchg
filds
repz
adc
lea
mov
in
cmp
ja
rcll
jp
push
xchg
cpuid
outsl
sbb
insl
jle
insl
sub
jae
ja
shll
aad
and
mov
in
in
bound
inc
into
jne
loope
adc
pop
dec
push
jnp
fcmovb
notb
mov
mov
jns
dec
and
sbb
jg
daa
sti
lret
and
into
loopne
ss
xchg
inc
dec
cld
sub
nop
movsl
lcall
jp
inc
lret
hlt
test
dec
lods
xor
enter
mov
mov
mov
cmpsb
mov
jno
mov
mov
dec
cmp
sbb
icebp
std
add
inc
adc
and
fstps
inc
fmul
mov
cld
test
fs
ljmp
fdivr
sbbb
dec
and
jl
dec
inc
mov
push
je
sub
xor
clc
popf
dec
sbb
sarb
mov
push
push
subb
add
push
xchg
das
rclb
xchg
and
addl
insb
jl
lds
dec
cmpsl
mov
shl
hlt
sub
out
mov
lea
data16
ja
sbbl
or
mov
in
lret
nop
or
dec
in
push
push
jnp
sub
push
pushf
jae
push
lods
add
movsl
xor
test
imul
int
shlb
and
jp
mov
in
mov
sarl
les
js
stos
and
push
mov
lods
cmpsb
std
repnz
repz
push
ss
aam
mov
xchg
xor
mov
sub
rclb
add
sbb
mov
sbb
lahf
jo
mov
mov
mov
push
dec
data16
mov
orl
ljmp
pop
in
sbb
sub
ret
out
push
mov
das
nop
pusha
vpminub
adc
popf
mov
xchg
inc
cmp
pushf
ret
mov
nop
push
fwait
adc
cli
fdivrs
adcl
mov
shll
enter
imulb
xrelease
jo
pop
add
pop
xchg
loope
pop
das
addr16
jne
jne
loop
jns
push
ret
enter
lcall
ja
mov
aam
push
imul
imul
lret
adc
jb
adcl
pop
dec
push
ror
jae
nop
es
out
push
dec
xchg
ret
sbb
cld
mov
pop
xchg
dec
or
outsb
lcall
lcall
lea
insl
rcr
dec
or
insl
lea
dec
ficoms
aad
pop
ja
mov
mov
cmpsl
stos
xchg
jnp
andl
add
cmp
arpl
outsb
or
xchg
pushf
inc
jp
jmp
and
out
jl
cltd
mov
or
jmp
aaa
fdivr
mov
dec
dec
clc
pop
sub
sbb
xorl
aaa
xchg
jmp
icebp
mov
adc
psrlq
fucomi
dec
and
cmp
shrl
dec
push
fcmovu
add
inc
sub
sbb
or
push
cs
cmp
inc
call
mov
pop
mov
fidivs
adc
rcr
das
or
int
sub
inc
lret
dec
and
out
cli
adc
sub
cmp
sub
flds
xchg
cltd
or
xchg
and
cli
lret
mov
fistl
or
xor
sub
pushf
out
decb
cmpsb
sbb
orb
or
lahf
js
pop
push
movsl
push
sub
imul
sub
add
sub
mov
pop
int
mov
sarb
or
sbb
stos
or
xor
mov
cmp
mov
fndisi(8087
ss
xor
loopne
mov
push
icebp
stos
dec
xchg
sti
cwtl
decb
pop
sbb
pop
into
or
sbb
xchg
push
sub
push
jnp
sti
mov
xor
mov
stos
cmp
lret
lahf
xchg
enter
push
aam
loopne
push
xor
in
call
in
lods
stos
xorl
call
inc
fwait
test
xor
mov
hlt
aam
ss
inc
scas
cmpsb
outsb
jnp
ds
push
leave
add
ja
lret
cmp
mov
pop
mov
mov
mov
fisubrl
jb
loop
fidivrl
cs
fcompl
enter
fwait
push
sahf
repz
xlat
dec
test
mov
scas
out
jg
xor
fs
dec
scas
hlt
mov
sbb
decb
out
mov
ljmp
mov
sbb
jns
loop
iret
mov
daa
sub
dec
inc
aad
sub
scas
sub
outsb
mov
jo
fs
outsb
pushf
sub
fwait
pusha
dec
inc
mov
pop
lret
mov
mov
push
imul
xor
inc
xchg
add
xchg
lock
add
aas
xchg
rclb
mov
add
xchg
add
pop
rol
in
inc
mov
mov
xchg
rcrb
fs
push
in
and
push
je
aas
repz
xchg
cld
pop
dec
aad
xchg
push
sub
sub
lret
cli
iret
adc
fbstp
mov
clc
xchg
xor
add
sub
cltd
cmp
mov
ss
loope
outsl
pop
cmp
pop
pop
and
mov
adcb
pushaw
cli
scas
inc
test
mov
xor
pushf
scas
dec
mov
lea
insl
cmc
sbb
movd
adc
add
into
je
push
cmpsl
cmp
xchg
or
and
fstp
es
adc
xlat
inc
cmp
pop
add
call
dec
insb
mov
ret
pop
stos
inc
push
ja
xor
pop
sub
nop
leave
stc
or
sub
stos
adc
mov
jo
sub
mov
cmc
addl
test
lds
pop
pop
cmp
dec
mov
cmc
cwtl
out
inc
push
fldt
stos
lds
andb
aas
ret
outsl
jne
sbb
cmpsl
test
jne
sahf
movsb
xchg
pop
cli
and
xchg
fs
aaa
scas
mov
out
adc
adc
lods
sub
and
jp
push
dec
mov
loope
mov
lret
push
cmp
shll
sbb
inc
pusha
add
or
test
sbb
cmpsb
and
cli
in
std
inc
mov
cmpsb
ja
mov
mov
orb
xchg
aaa
stc
lcall
push
pop
mov
inc
lds
mov
dec
jnp
arpl
push
subb
pop
movb
test
dec
mov
push
xor
out
and
jmp
or
mov
cmp
add
insl
push
repz
test
or
inc
pop
mov
and
jl
iret
fildl
out
test
popf
jae
ret
add
xchg
cmpsb
fnstsw
jge
jg
hlt
cmp
int
mov
test
mov
test
adc
arpl
testb
push
jns
movl
je
stc
lcall
mov
add
in
push
pop
out
xchg
xor
xor
adc
jns
jo
xchg
loopne
push
sahf
pop
xchg
pop
insl
je
lods
lock
aaa
cmp
mov
sub
popf
xor
stos
imul
in
ret
sub
fnstenv
push
xlat
mov
loopne
xchg
out
jb
les
int
mov
jo
cmp
nop
dec
lret
jmp
test
inc
mov
mov
and
jnp
mov
mov
xchg
arpl
jno
jge
icebp
lret
jecxz
fbstp
in
test
adc
sarb
mov
mov
mov
xor
jne
ret
das
mov
addr16
insl
mov
into
mov
pop
dec
add
or
ret
add
sbb
dec
negb
fs
jns
stos
adc
fwait
sbb
push
sbb
std
jae
mov
addr16
pusha
pop
addb
jb
cmpsb
jl
sub
pop
gs
imul
iret
dec
cmp
xchg
push
dec
inc
push
daa
stc
add
lretw
pop
aad
xor
fs
fisttps
xor
adc
pop
lock
icebp
or
xor
mov
lcall
cmp
mov
pop
ficoml
add
mov
xchg
shlb
mov
outsb
dec
xchg
xchg
std
push
and
jb
sbb
icebp
and
lds
xchg
into
out
xchg
aad
lcall
inc
mov
mov
jp
cmp
fdiv
inc
cs
lea
mov
dec
orb
and
ret
sub
mov
das
sti
call
push
cli
inc
push
xchg
jnp
stos
jnp
aas
xchg
in
rorl
movsb
push
or
pop
add
movsl
movsb
ret
mov
popfw
leave
and
inc
test
stc
jo
insl
sbb
push
add
mov
xchg
test
cmp
xor
inc
mov
or
jl
inc
mov
imul
inc
add
lret
mulb
insb
and
sub
cmp
iret
push
icebp
aam
mov
mov
je
jecxz
imull
mov
rolb
push
in
fcmovbe
cmp
or
les
cmp
push
ds
sbb
test
dec
in
mov
adc
mov
sbb
sti
mov
mov
lock
push
or
mov
mov
mov
test
fs
loopne
je
enter
xor
or
test
sub
test
shll
sbb
xor
jo
fldcw
or
fs
cmp
inc
or
adc
iret
in
mov
ljmp
push
movsb
xchg
xor
sub
rcrb
test
outsb
lahf
mov
loopne
cmpsl
mov
out
xchg
dec
mov
or
inc
mov
and
mov
cwtl
cwtl
mov
push
mov
pop
mov
mov
idivb
nop
jns
lods
push
aam
out
fcom
xlat
dec
in
shrl
test
and
mov
sub
lds
mov
dec
add
loope
sahf
andb
push
sbb
jae
lods
arpl
jg
insb
dec
push
cmp
int
inc
jge
xlat
enter
mov
or
mov
adcb
or
xor
daa
out
adc
mov
push
pop
insl
dec
inc
xorb
push
repz
adcl
jp
imul
scas
icebp
mov
ret
jmp
loope
sbb
jecxz
lcall
mov
adc
or
adc
lea
push
inc
imul
in
add
or
add
xchg
loop
ljmp
xor
sbb
xor
xlat
mov
clc
mov
push
loop
out
lcall
and
sbb
ret
inc
lods
and
inc
xor
rol
push
iret
mov
cmpsl
js
int3
inc
xor
mov
mov
xchg
xchg
mov
f2xm1
pop
xchg
jle
jb
xchg
aam
mov
movsl
sbbl
in
addr16
mov
push
outsl
xor
mov
stc
hlt
cwtl
cmp
sti
cmpl
movsl
cmp
lock
aad
adc
sbb
push
mov
cmp
in
jl
jg
and
loop
test
imul
pop
pop
frstpm(287
ljmp
inc
mov
or
mov
or
xchg
dec
sbb
popf
scas
xor
out
cld
lret
sub
aaa
inc
test
jns
jge
or
cmovbe
mov
dec
mov
insl
dec
sbb
inc
add
mov
scas
lret
mov
push
pop
xor
das
cmpsl
aam
xchg
cmc
pop
icebp
das
imul
stc
sbb
dec
insb
shlb
ja,pn
jl
sbb
iret
jnp
daa
nop
subl
cmp
mov
fs
cltd
andl
es
push
ret
popf
jns
es
scas
inc
clc
mov
test
mov
imul
call
loope
inc
outsb
xchg
mov
fld
lret
xlat
sbb
test
gs
xor
mov
pop
sbb
lock
inc
push
add
mov
popa
xchg
inc
sbb
into
cmp
fs
imul
dec
or
sub
dec
pop
push
add
sbb
mov
jecxz
jecxz
mov
aas
lods
xchg
dec
fisubrl
pop
push
adc
ret
adc
test
cmp
leave
cmp
les
lret
pop
insb
push
dec
jmp
lret
loope,pn
outsl
shll
xor
and
enter
rcrb
sub
adc
stos
jl
iret
or
jns
jecxz
push
lahf
lcall
popf
jp
repnz
enter
pushf
mov
loopne
jmp
ljmp
daa
and
data16
xor
nop
xor
xlat
cmpsb
mov
push
lahf
jb
add
sarl
inc
loop
popf
in
inc
test
jns
daa
or
mov
ss
stos
mov
xchg
inc
xchg
inc
loope
iret
loopne
bound
add
mov
clc
int
sbb
push
cmp
sub
inc
mov
into
incl
jno
adc
xchg
pop
inc
mov
inc
push
and
hlt
orb
call
push
xchg
stos
gs
mov
mov
push
lods
inc
jns
cmp
mov
jo
imul
pop
cmpb
loop
adc
cld
adc
inc
cmpsl
push
test
mov
xor
mov
jns
movsb
adc
ret
imul
decl
push
xor
lock
push
jecxz
push
push
sbb
in
xorb
mov
leave
loop
scas
xor
std
fwait
cmpsb
inc
xchg
std
fcoms
mov
dec
add
jle
mov
jbe
rolb
test
pop
cs
jne
jb
xchg
mov
inc
incb
sbb
repz
jo
jo
inc
jmp
fmuls
sub
sub
inc
pop
pushf
push
iret
cmpsl
dec
and
lods
xchg
daa
jno
adc
mov
dec
xchg
push
inc
xchg
xor
rcrb
and
shrl
repnz
pop
outsl
jecxz
sbb
xchg
mov
cmpsl
ja,pn
push
or
adc
pop
xchg
push
inc
insl
inc
les
inc
mov
scas
pop
pop
arpl
add
xor
out
roll
in
pushf
jne
jnp
mov
icebp
cli
and
imul
pop
inc
sbb
push
stc
add
dec
xor
loop
mov
or
dec
mov
testl
mov
pop
fsubrs
mov
mov
jmp
int
andl
fidivrl
in
jge
pushf
outsl
push
inc
inc
jne
test
loop
leave
out
mov
ds
jne
push
mov
dec
cmpsl
sub
jg
dec
loope
ret
dec
or
pop
mov
fnstsw
pusha
jns
xchg
outsl
mov
push
ja
adc
leave
imul
int3
in
clc
jns
mov
cmp
inc
cmp
dec
sbb
fldt
inc
rcrl
dec
sub
insl
dec
pop
jmp
inc
add
pop
xlat
adc
jno
jne
and
mov
push
popa
or
shr
jecxz
fnstenv
push
inc
lods
and
push
mov
aaa
cld
push
or
scas
xchg
push
sub
int3
jmp
jge,pn
fmuls
ret
mov
mov
lahf
push
mov
in
arpl
jl
lea
cwtl
arpl
add
fcmovbe
inc
push
dec
fldenv
sbb
cltd
loopne
sbb
mov
mov
in
push
in
dec
pop
push
enter
mov
lea
xor
push
push
add
mov
rolb
sti
cld
jbe
rcr
sbb
and
mov
push
sti
and
lock
mov
dec
mov
lock
pop
int
dec
cmp
pusha
push
mov
push
out
test
ret
mov
dec
or
mov
out
inc
loope
enter
ret
out
jb
mov
sub
pop
lret
iret
mov
pop
xchg
outsb
adc
pop
icebp
xor
jle
sub
fadds
cmp
outsb
mov
dec
add
or
ds
in
inc
adc
jg
and
std
mov
push
clc
insb
mov
sub
in
sbb
xor
sbb
ffreep
movsb
jl
movsl
jno
imul
inc
cld
push
inc
cmc
repz
mov
enter
jmp
stc
push
jo
or
std
rcrl
daa
bound
scas
xchg
fistl
push
dec
adc
dec
mov
or
out
scas
xchg
out
sbb
in
mov
cmp
aas
push
and
loopne
cmp
cmc
iret
xchg
bound
int
xorb
daa
jno
mov
cmp
inc
call
arpl
fiadds
stos
loop
rcr
mov
or
enter
xchg
push
add
xor
mov
dec
cmc
pop
shll
jae
outsb
icebp
add
jg
push
dec
jge
fcoms
orl
mov
fldl
popf
dec
and
pop
int3
aaa
mov
adcb
jne
xorb
or
in
stc
js
xchg
mov
mov
mov
into
addr16
push
jge
pushf
sbb
dec
inc
fcoms
test
push
stos
sbb
mov
inc
lds
jl
adc
add
pop
shll
test
sub
add
add
inc
mulps
xchg
cli
movsb
or
pop
pop
mov
insb
roll
push
call
lea
incb
pop
jns
insl
bound
jne
sub
pop
cmpsb
sbb
ret
jl
lcall
jle
dec
bound
shr
mov
test
push
push
dec
inc
call
and
xor
dec
dec
lret
dec
push
sarl
xorb
xor
nop
fwait
mov
scas
popa
out
je
or
rorl
in
add
loopne
sbb
push
testl
arpl
shr
loop
jne
aad
addr16
mov
mov
push
dec
xchg
repz
add
mov
inc
xchg
orb
jle
mov
jp
and
dec
test
fstpl
push
mov
push
in
xor
jecxz
jb
daa
in
outsl
mov
aaa
in
ljmp
sub
dec
mov
jb
push
lret
iret
jb
xchg
cmovbe
js
in
bnd
sbb
jno
cmpsb
je
push
xchg
subb
mov
jp
popf
mov
or
ss
sub
and
cmp
pushf
xor
fstpt
lahf
aad
cmpsb
xor
cmpb
lahf
arpl
lahf
jno
adc
inc
iret
push
nop
mov
pop
xchg
out
and
sub
sbbl
push
mov
pop
push
and
sbb
or
in
stos
inc
mov
nop
insb
push
test
repnz
dec
dec
cmp
loop
pushf
pop
or
cmp
cwtl
loop
fcom
imul
mov
lahf
lods
pop
jne
inc
mov
adc
aaa
xchg
iret
pushf
sbb
and
call
and
lret
das
dec
adc
and
dec
or
loopne
lds
ror
cs
in
push
xchg
pop
mov
inc
lcall
test
sub
push
xchg
dec
mov
fldcw
dec
mov
lret
fsts
out
adc
add
inc
xor
mov
scas
cwtl
mov
or
cmp
out
imul
js
in
imul
mov
or
pusha
push
les
ficoml
and
mov
imul
jno
mov
lret
mov
fmull
adc
insb
inc
cmp
mov
dec
dec
cmp
jb
mov
xchg
cmp
out
mov
ret
push
sti
imull
sbb
mov
rol
ret
or
stos
mov
subb
imul
ss
xchg
jbe
mov
call
sbb
lock
adc
jg
rcrb
loope
ss
push
cmpsl
fwait
or
mov
mov
daa
and
les
fldcw
and
lods
or
xchg
cmp
xchg
int
out
in
inc
mov
adc
dec
pop
adc
sub
lods
pop
incb
test
int
fisubl
ss
jecxz
enter
lret
jge
add
and
xchg
insl
dec
sub
or
pop
push
aad
je
mov
mov
js
or
ss
push
nop
out
es
cmpsb
mov
cmp
notl
push
or
jle
cmp
nop
pop
es
jbe
or
cs
inc
fucom
add
in
pop
cmp
je
testl
jb
cmp
pop
xor
fdivr
sbb
ds
scas
movb
jo
sub
xchg
inc
cwtl
mov
lcall
pop
aam
sub
mov
xchg
shll
jmp
notl
jmp
jmp
scas
mov
inc
xor
out
dec
outsb
sub
xor
fdivl
lock
inc
sbbb
adc
outsl
fsubrp
push
and
inc
jo
mov
adc
out
cmpsb
jbe
add
dec
and
scas
pop
insl
mov
or
xchg
and
cmp
repnz
push
xor
inc
mov
jmp
xchg
in
pop
sub
scas
sbb
rcrb
repz
mov
mov
cmp
sbb
rolb
add
and
dec
repz
clc
adc
push
pop
je
cmpsl
mov
inc
shlb
xchg
jns
ljmp
push
adc
cwtl
outsb
shl
fnstenv
sub
jle
cmp
mov
pop
xchg
dec
addb
pop
repz
xor
mov
repnz
jp
std
jecxz
enter
inc
outsb
cmp
xor
mov
pop
push
and
or
jno
pop
fwait
addr16
dec
xor
jne
and
lahf
inc
addr16
sbb
dec
jb
inc
cwtl
ret
sbb
sub
sbb
sub
scas
fistl
subb
jns
bnd
movsb
lods
push
test
dec
xor
das
cli
fsubs
pop
and
outsb
mov
pop
pop
add
push
or
out
into
addr16
and
ds
lods
lods
and
sub
add
pop
les
add
cmp
jle
cmp
inc
jmp
notl
loope
lock
mov
inc
xchg
mov
inc
ret
mov
fsubr
out
cmp
add
stos
popf
push
push
pusha
push
emms
cld
xchg
mov
stos
fists
lret
lahf
push
pop
mov
cmpsb
ja
in
sbb
xor
inc
push
pop
pop
pop
mov
pop
shlb
adc
stc
aad
pop
sub
daa
ds
out
fisttpll
std
jbe
cli
outsl
jo
ret
imul
aaa
lret
sarl
pop
mov
jecxz
xor
push
mov
mov
stos
ficoms
mov
adc
test
xchg
daa
into
popa
xchg
fsubr
nop
mov
xchg
test
loop
aad
and
xor
cmp
push
mov
pop
imul
mov
push
imul
cwtl
ljmp
push
sbb
aaa
push
fidivs
fisttpll
xlat
into
xchg
bound
mov
addr16
mov
push
push
xchg
or
sub
pusha
iret
xchg
cltd
push
jle
xchg
ss
xor
into
jecxz
pushf
jmp
xor
xchg
mov
insl
sbb
pusha
mov
xor
fmull
jb
sbb
in
and
push
dec
jmp
mov
inc
cmp
push
pop
adc
fildl
push
xor
mov
jbe
test
icebp
dec
sbb
mov
xor
fidivs
inc
outsb
mov
int
dec
jne
sti
xchg
fisubrl
and
jmp
adc
loop
push
andl
dec
add
or
dec
test
stos
stos
and
bound
popa
or
pushf
lods
sahf
in
mov
mov
mov
cmp
and
loop
loopne
cmp
ljmp
scas
mov
jno
out
jo
mov
push
test
shlb
mov
pop
jg
jno
stos
mov
jle
in
mov
sar
sub
scas
adcl
xchg
je
pusha
xchg
or
scas
xor
add
dec
mov
jl
sbb
repz
imul
imul
push
cli
pop
xchg
cli
xchg
adc
mov
push
mov
cltd
xchg
pop
in
loope
mov
je
xorl
jecxz
and
sarl
mov
shll
data16
hlt
xor
mov
out
mov
nop
push
xchg
or
cs
cmp
mov
movsl
test
pop
mov
dec
xchg
lock
std
xchg
negl
out
scas
hlt
mov
not
and
mov
out
ss
movsb
pop
dec
pusha
jb
pop
cmp
or
fldcw
loop
or
scas
jnp
mov
dec
fnstcw
sar
fisubs
push
jnp
adc
sub
lret
jmp
je
push
call
inc
shlb
aad
fsubrs
xor
or
cli
lods
lcall
mov
subl
cld
cmp
ljmp
mov
mov
adc
mov
bound
jp
inc
imul
adc
fsubrs
dec
dec
xchg
inc
clc
mov
mov
lret
je
inc
loop
jbe
xor
iret
repnz
push
pop
jo
mov
daa
push
sbbb
movsl
popa
jo
mov
jg
mov
outsl
cmc
aaa
scas
stc
cwtl
xorb
ss
test
add
and
shlb
lds
cmpsb
lods
mov
outsb
std
adc
call
mov
add
cmp
gs
roll
inc
leave
lret
hlt
push
std
or
andl
push
jns
xchg
sbb
sbb
jnp
in
and
bound
in
sbb
mov
test
iret
sbb
dec
push
or
inc
es
mov
push
pop
and
inc
movsb
cmp
aaa
pusha
xchg
leave
jle
push
ds
cwtl
jp
pop
or
dec
jne
ja
jae
test
and
xchg
movsb
repz
mov
jmp
sti
push
mov
int
stc
rolb
mov
inc
and
in
insl
push
and
or
out
das
lahf
andb
rolb
mov
inc
iret
cmpsb
out
add
bswap
mov
and
xchg
jnp
and
mov
add
mov
les
cmp
xor
xor
inc
cmp
adc
out
sub
and
mov
sbb
cmp
cmp
xchg
mov
loopne
and
fadds
dec
mov
xchg
mov
lods
insl
pushf
pop
push
mov
add
sbb
mov
fdivs
mov
push
shll
scas
pop
pop
test
adc
shl
xchg
xchg
jmp
or
sbb
and
pop
leave
dec
mov
stos
push
and
add
xchg
adcb
ds
clc
or
or
mov
dec
shl
inc
mov
cmp
lret
movsb
mov
xchg
jl,pt
sbb
lahf
push
lcall
mov
insl
adc
push
loop
mov
jns
mov
call
outsl
or
in
inc
jnp
mov
jmp
xor
fidivrs
dec
scas
aaa
ja
xchg
mov
imul
push
iret
mov
shr
xor
sbb
add
lret
push
push
inc
dec
insl
pop
push
pop
pop
ret
je
cmp
dec
sub
xchg
stc
idivl
test
push
xchg
test
add
enter
inc
fldcw
ss
push
xor
stc
jmp
cmp
pusha
fidivrl
pop
pushf
test
mov
push
gs
xchg
in
subb
mov
clc
loop
or
ret
xchg
jmp
mov
inc
cmp
loop
fcoms
mov
cmpl
dec
aaa
ficoms
jecxz
rcrl
cmp
fcoms
add
mov
push
dec
xchg
int3
or
arpl
daa
push
int3
jo
push
dec
test
or
and
lock
test
cli
jmp
ja
cmp
cmp
dec
mov
imul
pop
dec
jecxz
sti
xor
inc
rcrb
iret
mov
jne
clc
ljmp
jne
or
outsb
in
mov
pushl
and
push
daa
test
rol
cmp
xchg
mov
cwtl
mov
inc
xchg
leave
rclb
lods
push
shlb
gs
loop
neg
bound
jo
addr16
jns
decb
jmp
lcall
out
xor
or
add
jnp
jae
mov
arpl
inc
jno
nop
scas
cwtl
int3
dec
rolb
lahf
fbstp
test
jmp
sub
xchg
inc
rcl
pop
pop
xor
and
call
in
in
lahf
push
cld
push
lds
pop
xor
inc
stos
push
push
inc
adc
les
and
inc
insl
ja
test
pop
inc
sub
push
ds
jns
jb
push
pop
pusha
loop
xchg
lret
sub
cmpsl
frstor
jp
mov
and
out
adc
sbb
add
test
xchg
ror
cli
lret
mov
popa
mov
push
lret
inc
and
fsub
ljmp
lea
jl
sub
mov
mov
shrb
ror
mov
fdivs
mov
xor
push
or
in
sbb
adc
dec
adc
int
testb
cwtl
lods
xchg
mov
mov
mov
shll
testl
orb
or
ss
jmp
adc
divl
add
ljmp
jge
mov
nop
loopne
pop
roll
cmp
jmp
mov
repnz
sbb
les
push
xchg
push
pop
aaa
jl
int3
push
out
testl
sub
repnz
arpl
jb
push
jge
fcos
je
rcl
je
add
hlt
sbb
pop
outsl
push
cmp
jl
xor
ret
xchg
repz
or
icebp
mov
adc
rcl
mov
ds
mov
push
sbb
rorl
nop
or
lock
ret
sbb
mov
fistpl
lahf
test
nop
nop
fldl
jo
lahf
mov
or
in
les
cmc
pop
mov
xchg
iret
sub
lea
je
ljmp
inc
out
and
fisttps
sbb
push
loop
sbb
push
sarl
stc
test
push
les
es
mov
or
and
pop
and
lock
and
popa
push
into
pop
mov
mov
cltd
mov
adc
push
sub
lea
dec
iret
xor
mov
aas
repnz
mov
inc
les
jae
dec
mov
fadd
sub
cli
pop
cmp
add
sbb
push
pusha
out
mov
in
ds
pop
aam
lock
clc
sbb
or
add
push
xchg
cs
clc
mov
push
cs
inc
inc
das
xchg
jge
ljmp
pop
sbb
mov
jbe
dec
das
lcall
int
sub
es
mov
jmp
in
jno
or
loop
lahf
xor
aad
enter
jecxz
push
call
push
jecxz
mov
aam
adc
xorl
rorl
clc
in
je
sbb
jge
aad
mov
addr16
adc
push
jno
repnz
loopne
mov
push
movsl
mov
dec
lock
inc
inc
lret
movsbl
lea
rcr
dec
pushl
jnp
int3
pusha
cpuid
sbb
inc
dec
sbb
mov
cmp
je
sbb
rorl
xchg
push
lcall
inc
in
mov
sub
fdiv
pop
xchg
ret
xchg
shlb
xor
out
or
push
xor
and
mov
enter
mov
cmp
in
xchg
dec
js
mov
jmp
jne
mov
movsl
scas
ds
mov
loopne
mov
cwtl
in
xchg
push
out
fsubrs
aas
mov
inc
loope
inc
out
sub
push
jns
imul
cmpsl
fstl
push
mov
mul
int
push
xchg
lods
arpl
xchg
cmc
sahf
sbb
xchg
out
cmp
scas
cmc
xor
dec
and
lods
dec
inc
cld
jbe
ljmp
cld
jl
fldenv
xor
addr16
xor
push
das
and
out
jno
inc
repz
mov
rcrb
sahf
stos
scas
cmp
push
cmp
jne
mov
arpl
adc
pushf
sbb
sub
adc
nop
cmp
bound
jns
adc
mulb
xchg
jo
mov
inc
jns
xor
test
mov
insl
mov
jne
sets
imul
mov
frstor
mov
addr16
push
pop
stos
outsl
mov
sbb
test
nop
test
jl
xor
test
cmp
inc
fmull
rcl
adcl
sub
icebp
es
daa
out
sub
inc
repnz
mov
out
idivb
sbb
pusha
dec
dec
mov
mov
hlt
mov
leave
mov
inc
out
jmp
in
cmp
push
push
jl
inc
and
inc
or
das
dec
adc
xchg
sahf
or
mov
or
mov
nop
repz
mov
nop
addb
dec
jp
mov
xor
push
pop
sub
and
mov
pop
sub
push
push
cld
add
jmp
shll
sti
jg
mov
mov
popf
mov
dec
fwait
mov
fldt
fldcw
mov
pushf
je
xchg
outsl
ljmp
les
adc
mov
dec
movsl
jnp
xchg
mov
pop
repz
int
hlt
dec
int3
jmp
mov
shll
cmp
push
aaa
adc
leave
shll
mov
inc
jnp
xchg
rcrl
lds
push
jno
xor
fnsave
sti
in
ficoml
imul
ret
scas
das
imul
jae
out
mov
lods
jp
cmpsl
clc
mov
inc
adc
cmp
std
adc
jge
jno
xchg
sub
aad
sub
push
push
jae
fsubl
cwtl
in
xor
pop
dec
aas
dec
sbb
repnz
push
cmpb
scas
fnstcw
push
pop
mov
sub
pop
lea
dec
divb
inc
imul
in
hlt
and
sub
andb
bound
xchg
shlb
repz
int
in
sub
scas
imul
or
mov
pusha
insb
ja
xor
test
and
je
cmp
mov
insb
xor
xchg
stos
xchg
das
cmp
push
out
pop
cmp
popf
movntps
pop
aas
adc
loopne
in
mov
adc
lret
sbb
aaa
sbb
mov
jae
sbb
int
rorl
aam
mov
pop
mov
das
mov
or
push
sbb
jecxz
das
mov
int
sti
or
das
sub
pop
sub
pop
mov
aaa
xchg
adc
push
aaa
xchg
mov
add
xor
mov
stos
icebp
nop
push
je
jb
mov
mov
test
mov
jg
pushf
sti
cmpsb
gs
leave
outsl
mov
dec
leave
xchg
pop
ficomps
and
push
daa
xchg
xchg
mov
frstor
add
jl
add
sbb
and
in
stos
sbb
scas
sub
aas
fcoms
lods
les
sub
sbb
push
dec
pop
sti
cltd
fnsave
fsts
scas
adc
inc
xchg
mov
cmp
cmpsb
test
mov
pop
add
addb
addl
fstpl
lods
in
fs
add
jne
push
dec
das
outsb
icebp
cmc
push
mov
dec
push
fs
cmp
mov
jae
pop
jg
pop
push
dec
jp
push
jecxz
push
and
or
stos
sub
mov
std
and
xchg
jae
fistl
fistps
fs
cld
repz
mov
in
xor
lods
fucomi
outsl
mov
sbb
lods
jno
dec
fwait
xor
mov
pushf
aas
aaa
inc
dec
cmp
mov
scas
pusha
mov
stc
cmc
push
xlat
inc
mov
test
data16
pop
shlb
jl
shll
xor
popa
sar
ds
cmp
xchg
adc
in
mov
adc
adc
inc
cli
frstor
ljmp
daa
mov
adc
fistps
fistps
cmp
jb
inc
or
jbe
dec
jae
jae
movl
sbb
dec
les
or
cltd
iret
inc
inc
mov
cmpsl
add
xchg
jmp
mov
pop
xor
adc
pop
notb
stos
cs
pop
mov
popa
jne
scas
in
sub
xchg
dec
dec
ss
mov
mov
lret
sub
leave
inc
mov
jg
jmp
pop
mov
lea
nop
int
sub
stc
subb
mov
mov
shl
add
fdivr
fsts
icebp
sub
ret
sbb
cmp
pop
fstpt
andl
add
pop
jp
bound
int3
xorl
scas
mov
pusha
and
adc
push
incl
imul
mov
lea
int
dec
std
mov
cltd
dec
test
sbb
add
add
addr16
sub
sbb
inc
pop
pusha
inc
imul
out
pop
and
inc
push
pop
inc
mov
dec
insb
les
pop
clc
lahf
mov
cld
mov
mov
in
jne
loop
add
and
mov
cld
mov
jmp
pop
bound
inc
negl
or
adc
cmpsb
out
rclb
lret
test
mov
test
and
xor
cli
xchg
lcall
xchg
sub
std
out
or
mov
sub
push
xchg
xor
inc
jp
adcl
cmp
and
xor
push
push
lcall
mov
push
sbb
lock
and
mov
dec
mov
mov
jnp
adc
xchg
xor
cmp
xchg
add
push
cmp
or
jb
cli
xlat
push
loopne
call
cld
mov
pop
loope
fistpl
cmpsb
enter
dec
enter
jl
sub
loope
ficoml
push
pop
cwtl
lea
cmpl
loope
pop
sbb
sbb
cmpsb
sbb
jecxz
jmp
inc
pop
nop
and
push
arpl
inc
adc
loop
imul
mov
mov
xchg
mov
shrl
pusha
xchg
mov
or
test
sub
pop
outsl
mov
cmp
pop
xor
hlt
stc
sbb
mov
les
ss
xchg
or
lret
mov
std
shl
xor
mov
aad
movsb
addr16
test
lahf
push
out
xor
clc
enter
adc
sbb
lds
int3
aam
mov
hlt
clc
mov
in
ds
jl
lcall
std
out
icebp
fidivrl
fcoms
push
pop
bound
mov
imul
mov
and
cli
or
xchg
xchg
xlat
lahf
xor
nop
and
dec
arpl
adc
iret
and
push
mov
scas
xchg
and
inc
rol
adc
daa
mov
and
jg
bound
jnp
fs
out
fcoms
loop
jne
daa
mov
insl
add
invd
add
pop
leave
adc
lahf
push
icebp
push
out
push
inc
mov
les
mov
sub
pop
idivb
test
mov
in
dec
mov
mov
lods
dec
cmp
jno
add
and
jmp
adc
mov
lea
orl
xor
pop
adc
mov
mov
ds
add
sub
adcb
sahf
test
sbb
testb
xchg
fiaddl
push
cli
addr16
lock
repnz
icebp
mov
frstor
mov
or
mov
imul
fwait
cmp
mov
subl
pop
cli
popf
idivl
pop
xchg
or
or
repnz
jmp
pop
mov
sbb
mov
in
or
cmpsb
cld
inc
pop
jge
mov
xchg
adc
test
sbb
sub
sub
dec
push
jge
push
pop
stos
mov
mov
or
adc
or
xor
xor
add
dec
pop
shlb
pop
lret
stos
jle
in
lods
call
pushl
dec
les
adc
ljmp
jnp
mov
lock
jae
scas
fld
sub
in
jae
addl
dec
lcall
mov
outsb
outsb
push
out
enter
inc
add
popf
cwtl
xor
mov
push
out
push
ret
inc
fisttpl
hlt
cltd
test
and
sahf
or
cltd
dec
rorb
test
insl
jmp
or
sbb
pushf
mov
mov
repz
xchg
or
lods
daa
xor
add
fwait
push
jno
mov
add
jno
fdivr
out
add
jp
or
orl
stos
pop
xor
fistpll
daa
xchg
and
inc
cmpsb
imul
call
push
lods
mov
cmp
mov
lret
gs
mov
mov
in
insl
jecxz
dec
adcb
mov
adc
jne
mov
out
xchg
enter
sti
adc
sti
mov
mov
mov
orl
push
push
nop
sub
dec
or
out
test
pop
mov
aad
add
inc
je
jno
lahf
xchg
mov
cmp
ljmp
jle
es
pusha
ret
imul
loop
inc
mov
mov
stos
mov
outsl
push
mov
ja
les
add
movl
aad
mov
add
adc
int3
xchg
cld
mov
cltd
cmp
jge
scas
push
xchg
outsl
adc
mov
scas
aam
frstor
xor
jl
fwait
pop
in
cmp
inc
lcall
mov
xor
outsb
push
loope
cli
sbb
loope
fs
pop
push
mov
mov
and
ret
cmp
cld
pushf
ds
xchg
icebp
adcl
ror
flds
jbe
xchg
cli
ljmp
testb
repz
adc
mov
lods
daa
stos
and
call
adc
test
pop
inc
mov
sbb
cli
lcall
insl
xor
adc
push
fidivl
jl
shl
mov
jo
fnstsw
and
pop
cmp
jp
nop
add
adc
mov
mov
mov
daa
or
lahf
xchg
sbb
inc
es
cmp
js
jmp
push
inc
push
mov
daa
jle
stos
dec
shlb
popf
js
lahf
mov
cld
jge
or
adc
test
lret
jmp
adc
insl
mov
fiaddl
or
push
in
loop
inc
lret
in
xchg
insl
jmp
adc
inc
xchg
xchg
dec
mov
loop
ds
mov
lret
outsb
fwait
mov
inc
cs
jns
ds
mov
pop
jno
xchg
add
inc
rcl
add
xorl
mov
lret
push
mov
lahf
lret
out
xchg
inc
adc
es
jg
inc
pop
in
test
ljmp
in
mov
push
push
jle
add
mov
xor
xlat
lods
push
aas
push
mov
push
pusha
test
call
and
ret
subb
cmp
pop
cmp
push
idivb
test
rcll
adc
insb
iret
pop
add
or
aad
mov
pop
ss
pop
cmp
push
pusha
xchg
or
push
cwtl
call
or
mov
push
mov
mov
cmc
enter
mov
cmp
xor
outsl
lock
cmpsb
push
mov
fisttps
sub
mov
aam
outsl
iret
lcall
mov
adc
xchg
adcl
mov
je
icebp
outsb
mov
inc
cli
jno
lods
push
cmp
cmc
scas
dec
mov
sarb
inc
shlb
movsb
jecxz
repnz
mov
imul
xchg
outsb
cltd
xchg
out
dec
dec
mov
gs
aad
mov
leave
push
push
cli
data16
xchg
jl
out
jns
sub
and
and
les
inc
adc
xor
mov
pop
frstor
cld
lock
movsl
sbb
lea
mov
pop
push
in
ds
dec
add
lock
xchg
ljmp
xor
fldt
push
xor
jno
jle
das
xor
data16
or
push
dec
test
imul
xchg
popf
mov
mov
pushf
xlat
stc
lcall
push
push
addb
dec
xlat
stc
daa
sub
dec
adc
or
push
mov
xchg
ss
mov
cltd
sti
mov
and
mov
scas
mov
insl
push
add
mov
mov
shrl
movsl
rcrl
sbb
test
xor
dec
mov
cwtl
pop
sbb
mov
popf
mov
int
iret
adc
sub
jnp
test
xchg
cwtl
xchg
sar
mov
push
out
or
dec
out
movq
and
andl
xor
int3
fnstcw
jbe
ficoml
cltd
and
jmp
popa
xlat
lret
cs
xor
fiaddl
xor
xlat
xor
mov
mov
mov
hlt
repnz
xchg
sbb
jno
jns
test
adc
cli
mov
jno
ss
mov
sbb
in
jl
ss
xchg
out
cmp
in
xor
dec
outsb
adc
mov
adc
fisttpll
in
pop
stos
jle
sub
clc
leave
push
andb
push
pop
mov
push
dec
push
jne
mov
jo
jne
pop
push
stc
cld
sub
xchg
ret
jl
inc
mov
inc
loope
js
inc
or
add
sti
popa
adc
mov
inc
cmp
xor
cltd
xchg
and
cmp
mov
fmull
adc
xor
outsb
xor
mov
test
dec
or
push
fidivrl
cli
lds
data16
cmpsb
insb
aas
sbb
imul
mov
and
test
lds
es
cld
xlat
jl
dec
and
and
shl
jbe
cmp
cmp
cld
mov
sbb
inc
xchg
in
push
ja
pop
jge
in
into
mov
clc
pop
jle
lea
mov
pop
fidivl
addr16
push
mov
pop
mov
pop
push
fisttps
addr16
cmpsl
mov
fisubl
lahf
rorl
or
pop
xchg
std
mov
add
and
add
mov
aas
outsb
dec
bswap
popf
inc
sti
icebp
cmp
adc
pop
repz
hlt
sub
xchg
sub
repz
loop
insl
xchg
sub
dec
pusha
sub
push
or
mov
cwtl
adc
in
inc
dec
mov
in
imul
push
inc
push
insl
mov
sbb
iret
ret
or
fs
pop
aaa
sub
xor
aam
movsl
jne
stc
adc
arpl
into
int
and
mov
or
cmpl
testl
lret
or
sbb
pop
push
sti
es
out
sbb
pop
mov
jg
sti
and
data16
stos
loop
xchg
fstps
dec
mov
inc
pop
adc
in
test
xor
in
das
ret
sbb
lcall
test
icebp
in
jl
cs
repnz
mov
pop
sbb
or
inc
jecxz
stc
cmpsl
daa
cmpb
insb
imul
incl
xorl
mov
shll
sahf
mov
mov
mov
push
hlt
inc
mov
and
stos
sub
cmp
push
mov
fwait
xchg
test
sbb
inc
scas
rorl
sub
inc
or
mov
dec
aas
lahf
cmp
sbb
or
hlt
mov
scas
jge
jnp
lock
adc
aas
and
ret
mov
mov
pop
push
fistl
outsb
sbb
into
add
inc
pop
lods
cld
icebp
fimull
into
out
add
dec
sbb
mov
daa
push
incb
inc
cmp
push
aam
sub
push
dec
imul
xchg
jge
sbb
xor
push
insb
ret
repnz
add
and
bound
dec
jle
mov
rcrb
mov
in
jne
cmp
inc
insl
rcrl
mov
sub
insl
sbb
and
int3
adc
fsincos
int
outsl
fidivs
xchg
mov
adc
lret
or
inc
in
idivb
jp
aad
into
jne
mov
cmp
clc
push
sbb
xchg
int
loopne
push
sub
sbb
and
dec
mov
ja
icebp
sbb
sahf
rcrb
into
mov
ja
xchg
ret
fs
push
inc
imul
mov
fwait
jb
jl
xchg
pop
repnz
mov
dec
lds
or
xchg
testb
addr16
inc
pop
insl
sti
addb
cmpsl
out
and
adc
fldl
mov
loopne
enter
cltd
add
out
test
push
cs
and
adc
adc
shr
movsb
jmp
pop
dec
inc
add
mov
mov
mov
popa
xorl
adc
ss
insb
mov
mov
sub
add
and
mov
faddl
in
stc
mov
iret
and
ret
pop
lock
in
adc
out
and
out
incb
cmc
adcl
gs
sub
jne
pop
clc
rcll
push
ds
pushf
lock
fwait
mov
pop
adc
gs
lds
pop
je
iret
lds
mov
xor
mov
sahf
test
inc
lock
stc
inc
push
sub
out
dec
mov
enter
int
cmp
sti
and
notb
sub
and
mov
pop
or
in
adc
and
lahf
push
orl
jne
xchg
fisubs
mov
out
jp
pop
inc
sbb
sbb
inc
movsl
jnp
ficoms
lock
jl
insb
push
and
int
ljmp
adc
cmc
sbb
test
pushw
cld
mov
pop
dec
addr16
inc
xlat
jecxz
rcr
sub
dec
inc
mov
lea
sub
fsubp
jb
aad
pop
bound
sbb
xchg
loop
add
jbe
rcll
scas
mov
sbb
cmpsb
mov
test
sahf
mov
loope
mov
fsubp
leave
mov
sti
out
lods
je
add
stos
jecxz
repnz
add
adc
push
das
out
mov
mov
xchg
shll
mov
ret
pop
dec
popw
cmc
or
mov
ret
imul
pop
sti
xchg
fildl
addl
pusha
arpl
push
xchg
sti
xlat
mov
sbb
pop
add
insl
mov
roll
adc
cwtl
jp
repz
addr16
adc
cmc
jl
mov
push
sub
lret
push
and
prefetch
lock
sahf
bound
test
inc
les
xchg
sub
cwtl
and
inc
cmp
add
push
fdivs
and
push
enter
push
add
sahf
dec
adc
test
xor
rclb
ret
jns
sub
mov
ficomps
mov
mov
add
out
sub
push
leave
jo
pop
xor
cli
lret
inc
stos
aad
mov
jle
cli
jge
call
sub
pop
push
loop
pop
mov
fnsave
lock
mov
and
pop
mov
rorl
mov
add
shrb
shrb
fadd
stos
sub
repz
sbb
loopne
mov
rol
loop
or
cmp
and
aas
and
push
mulb
inc
mov
cmc
pop
filds
popa
push
pop
movsl
sbb
jns
outsl
in
arpl
mov
stos
pop
ficomps
lret
test
mov
jle
xchg
rorl
ret
fdivrl
in
pop
push
mov
popa
ret
outsb
pop
sti
pop
es
movsb
inc
addl
mov
ss
mov
sbb
je
jp
pushf
adc
mov
lcall
pavgb
push
iret
sub
cmp
repz
cmp
cmc
inc
dec
jb
sahf
idivl
dec
cli
cmpsb
imul
cmp
adc
out
sub
stos
iret
shl
js
pop
jl
fisubrs
sahf
out
push
push
pop
push
fstl
jg
sarb
fsts
jne
hlt
jbe
imul
jmp
mov
jp
daa
mov
jnp
cmp
outsl
mov
lock
mov
fwait
pop
pop
jno
xchg
lret
fimull
inc
clc
ljmp
dec
movb
imul
mov
mov
dec
es
adc
stc
mov
fwait
lock
sbb
xchg
add
roll
xchg
lcall
addr16
addr16
mov
xchg
cmp
xor
xchg
in
sub
decl
stos
ret
test
add
cmpsb
dec
or
jmp
sub
dec
jns
les
int3
push
test
jne
xor
add
lret
imul
push
jbe
xchg
cmpsl
mov
in
adc
cmp
mov
outsl
xchg
and
mov
jmp
sahf
pop
mov
mov
test
rol
iret
jl
aaa
pop
pop
clc
std
cwtl
out
sbb
sub
or
iret
mov
adc
xor
xchg
sbb
mov
loope
mov
adc
outsl
xchg
jno
in
sub
pop
sahf
cmp
ret
stos
iret
loopne
pop
pop
or
leave
mov
add
andl
sbb
cmp
inc
cmpb
dec
sbb
stos
jge
mov
mov
push
mov
xchg
or
mov
dec
or
jo
mov
addr16
dec
stc
fs
daa
jbe
cmc
push
mov
imul
aaa
stos
mov
jb
nop
rclb
push
shlb
test
mov
pop
fldenv
mov
je
sbb
mov
subb
test
xchg
iret
sub
cmp
lds
sbbl
sbb
lahf
fldl
sub
cmp
imull
mov
mov
sbb
cmp
jae
xchg
xor
cmp
mov
or
xor
in
loop
sbb
enter
notb
mov
ja
mov
int
xchg
lods
mov
ror
xor
pop
xor
dec
pop
pusha
mov
mov
cmp
mull
sysenter
cmp
inc
call
xchg
inc
add
pop
jb
xchg
out
inc
mov
mov
loope,pt
cmc
daa
ret
loop
xor
testb
mov
pop
xchg
fs
lods
xor
lcall
mov
into
pop
ds
fdivrs
pop
dec
and
cmpsl
inc
inc
push
mov
imul
push
xchg
pop
jecxz
push
fimull
loope
adc
add
xor
movsl
cs
mov
sbbb
mov
icebp
les
mov
or
sti
cmp
pop
sub
int
jnp
out
cmpsb
jnp
leave
and
cmp
push
cmp
xchg
pushf
sbb
xor
mov
lds
shll
xlat
fsubrp
imul
cmp
inc
ret
mov
scas
pop
sar
jne
and
push
jnp
xchg
mov
imul
pop
mov
rep
nop
xchg
sarl
lock
push
mov
loope
sbb
push
loope
jmp
dec
jg
or
mulb
dec
push
ss
ljmp
mov
mov
add
pushf
lock
add
roll
aam
leave
je
ret
xor
sbb
je
jmp
cltd
shll
ror
int
lods
movsb
out
adc
inc
lock
rcl
decb
lret
pop
icebp
into
pop
out
adc
mov
pop
out
mov
add
xor
mov
sub
sahf
sub
dec
inc
aas
cmpl
cmp
test
dec
aaa
add
push
xor
jecxz
iret
fs
movsl
into
pop
cli
jmp
mov
clc
push
and
push
pop
inc
call
popf
jmp
into
xchg
clc
dec
ss
subl
jo
stos
cmp
insb
mov
ja
inc
les
jge
daa
mov
call
dec
bound
xchg
outsb
js
push
out
lahf
push
leave
add
inc
out
mov
jno
fisttpll
cmc
jecxz
pop
jp
cmp
push
sbb
ljmp
sub
aas
cmp
push
loope
or
dec
mov
repnz
out
cld
sbbl
mov
mov
jmp
add
adc
test
inc
xorl
dec
pusha
aas
fildll
cli
pop
add
dec
mov
ret
mov
enter
negb
sub
mov
clc
sub
mov
sub
sbb
inc
add
and
lret
mov
push
cmp
xlat
mov
insl
je
add
sub
sarl
mov
insb
mov
or
fcmovnb
filds
jns
movsl
in
in
andl
xchg
pop
push
mov
push
push
cmp
jecxz
and
mov
bound
mov
and
jo
xor
pop
push
add
out
stc
je
ja
sbb
icebp
cld
popa
xorl
sub
out
sahf
lahf
inc
xchg
adc
add
gs
lcall
clc
jle
test
scas
out
ret
lahf
jmp
add
push
xchg
insb
jmp
xchg
ret
mov
in
loope
imul
mov
push
scas
sbb
mov
cmp
sbb
jle
jp
imul
xlat
jns
push
lods
jecxz
xor
xchg
sbb
gs
outsl
jo
sub
jo
fstp
mov
rcrb
pop
or
cli
push
cld
cmp
inc
outsl
add
in
dec
fsubrl
pop
mov
cmp
enter
sbb
pop
aam
in
sbb
xchg
sbb
je
rol
xchg
dec
pop
std
lret
jno
pusha
out
or
lods
push
lret
sbb
out
cmp
add
pop
mov
loope
adc
scas
popf
int3
pushf
aad
push
xchg
adc
mov
mov
sar
ss
ljmp
inc
loop
mov
loope
fstl
xlat
aas
dec
scas
jp
mov
lret
repnz
orb
dec
repnz
popf
das
pusha
fwait
ret
daa
jae
jo
xchg
enter
or
cmc
dec
or
mov
adcl
outsl
sarl
mov
mov
push
lahf
nop
lds
dec
sub
inc
push
mov
js
add
and
jg
aas
mov
sub
fistl
xchg
test
les
xlat
ficoml
xor
cmp
sbb
xor
aaa
jnp
adc
mov
pop
push
and
sahf
roll
leave
test
arpl
test
movsl
sbb
cli
jo
cltd
push
jmp
cmp
aas
cmc
pop
test
xor
mov
add
mull
cmpsl
xor
add
or
xor
push
adc
stos
pop
inc
xchg
cwtl
js
xchg
add
lods
dec
push
cmp
fstps
sbb
call
push
pop
sub
pop
sbb
cmp
jmp
jo
mov
dec
mov
add
cmp
iret
add
mov
mov
shrl
add
bound
in
and
mov
test
inc
mov
and
bound
loop
fildll
cmp
mul
ficompl
mov
lret
cmp
arpl
rorl
fldcw
inc
inc
adc
jmp
nop
xchg
mov
mov
cmp
adc
out
cmp
pop
mov
iret
sbb
mov
add
addb
out
fdivrl
push
mov
sbb
pshufw
aaa
xchg
scas
popf
cmp
fldcw
ja
jbe
test
and
dec
sub
jg
push
sub
jno
outsb
xchg
ret
mulb
adc
xorl
ss
xor
mov
fistpll
sub
js
aaa
fdivr
jb
insb
mov
pop
test
and
adcl
mov
jp
xchg
lock
insl
shll
aad
hlt
imul
sbb
and
push
push
iret
fisttpl
rcl
dec
jg
lret
data16
rcrb
mov
lret
push
mov
xor
or
and
mov
xor
daa
fisttps
inc
xchg
jmp
xor
sti
jbe
je
decl
rorb
jl
adc
xor
cltd
adc
mov
push
repnz
loop
dec
push
mov
sub
pop
lods
loop
int3
xchg
pop
pop
dec
xchg
cmp
bound
les
mov
lcall
mov
mov
frstor
jae
rclb
jns
std
xor
xchg
pop
add
in
inc
xchg
jp
dec
lcall
and
xlat
sti
sbbl
add
js
mov
cmp
aad
dec
ja
mov
andb
loopne
int
push
xchg
push
lcall
scas
std
add
push
fnstsw
movsb
adc
push
loop
mov
pushf
xchg
or
inc
lods
push
clc
mov
mov
daa
lods
pop
xlat
hlt
enter
adc
push
adc
cs
ja
jle
jno
out
pusha
cmpsl
stos
rcrb
sbb
and
sahf
push
lret
rol
ret
rol
enter
lods
inc
add
in
lretw
jecxz
cmpsl
adc
jbe
test
xchg
es
leave
mov
sbb
fsts
aas
sub
in
mov
sarl
mov
push
mov
outsb
push
movl
test
and
jp
cs
xor
lock
icebp
cs
dec
or
rcr
popf
lret
lods
ds
push
ret
pop
fcoms
mov
test
test
mov
fwait
jl
fstp
cs
sahf
cmp
sub
pop
mov
lea
in
in
in
jo
inc
xlat
sbb
shrb
push
out
in
pop
jmp
pop
cmp
scas
fdivrl
mov
dec
pop
cmp
cld
sbb
cld
sahf
lret
cmc
addr16
mov
mov
jne
pop
mov
mov
jne
icebp
jae
cmc
mov
icebp
andl
push
sub
cs
pop
test
outsb
jmp
push
sti
call
xchg
xor
adc
xchg
and
rolb
xor
pop
dec
cmpsb
mov
pop
iret
adc
jp
xchg
ret
fcomps
repnz
fs
sub
mov
adc
insl
cmp
mov
or
aaa
inc
fwait
sarb
in
pop
add
loope
rorb
test
fs
fdivs
jnp
jge
sbb
shrb
dec
add
add
or
and
push
xchg
inc
ret
sbb
loop
lcall
jecxz
mov
sub
adcb
xchg
inc
int3
push
hlt
cmc
test
dec
cli
mov
push
aad
push
imul
pop
xchg
repz
fdivs
pushf
popa
movb
hlt
pop
sar
pop
pop
add
and
dec
dec
mov
les
ret
insb
js
or
add
adc
pop
pushf
loop
xor
outsb
push
test
xor
sub
int
xor
dec
pop
rorb
xor
cli
mov
push
ret
stc
js
jg
dec
mov
fdivrs
sub
flds
jae
ret
nop
fldl
mov
jecxz
xchg
jp
lds
hlt
dec
adc
push
aam
sbb
test
lcall
int3
outsl
and
aaa
jmp
jge
xlat
mov
dec
cld
inc
stc
out
or
aas
adcl
xor
js
arpl
dec
and
int3
out
dec
sub
or
xchg
hlt
stos
test
repnz
adc
push
lock
mov
dec
mov
push
sub
xor
adc
add
push
fimuls
or
push
fidivs
mov
test
xchg
xchg
mov
int3
adc
insb
sub
jns
shrl
sbb
bound
jmp
mov
mov
pop
mov
fnsave
jne
or
fwait
cmpsl
arpl
cltd
ret
filds
xchg
mov
jp
mov
dec
and
xor
xchg
idivb
jmp
pusha
xchg
pop
es
xchg
jecxz
sbb
popa
push
in
ret
sarl
cltd
mov
jae
pop
cmp
or
or
pop
je
and
mov
enter
push
out
sbb
stc
aam
xlat
movsl
fptan
pop
imul
xor
popf
mov
and
inc
push
sub
jbe
lret
sbb
fnstcw
fucomi
jbe
jns
mov
movsb
out
dec
loop
mov
pop
and
cmp
mov
dec
pop
adc
hlt
daa
imul
incb
sbb
and
jnp
inc
in
repz
dec
mov
inc
push
js
dec
test
push
repnz
adc
push
jne
cmp
in
pop
outsb
jb
neg
push
stos
cmpsl
sbb
cmp
dec
mov
mov
insl
in
or
sbb
sub
cmp
out
inc
test
ret
notb
call
sbb
adc
dec
cli
ret
ljmp
int
cmp
aaa
clc
add
leave
mov
mov
jmp
pop
fcmovne
aam
fwait
aaa
jg
pop
jnp
add
lret
scas
xor
jnp
ficompl
outsl
sti
and
push
pop
sarb
incl
arpl
test
jle
sbb
and
call
mov
out
sbbb
mov
xchg
jp
jle
ds
jb
jecxz
sbb
fistpll
mov
call
out
int
fwait
in
and
add
dec
out
push
mov
leave
cmc
test
test
dec
outsb
inc
imul
and
test
mov
mov
adc
xchg
cmp
sub
xchg
add
test
hlt
mov
xlat
test
pop
imul
jbe
imul
shrd
sub
in
pop
lods
mov
insl
call
mov
push
loope
in
loop
in
push
pop
pop
sub
ficomps
sti
test
xchg
insl
add
cli
push
sbb
int3
add
outsl
negb
inc
jno
adcl
inc
sub
jbe
jnp
mov
sti
pmulhw
xchg
mov
cmpsb
adc
mov
nop
and
imul
pusha
cltd
rcpps
and
hlt
cwtl
scas
lret
sub
jno
sub
and
pop
sbb
stos
test
push
dec
add
fbstp
lret
mov
hlt
andb
xor
and
add
or
in
cli
jmp
push
inc
sbb
in
xchg
push
push
inc
or
and
std
in
sahf
or
shrl
int
mov
popf
fstpl
aaa
sbb
jle
out
pushf
cmp
ljmp
and
add
or
enter
sar
xchg
dec
cmp
push
mov
xchg
test
dec
cld
inc
sub
and
ja
mov
sarb
xor
fidivrs
test
shlb
pop
cmpb
je
loope
xor
push
sub
push
xchg
out
jge
mov
fiaddl
stos
shll
mov
xchg
cwtl
xchg
or
sub
dec
push
sub
in
mov
inc
clc
xor
mov
dec
jp
gs
lret
das
int
fwait
in
repz
xchg
adc
mov
pop
jbe
jge
mov
adc
add
rcrl
fbld
dec
cmc
push
mov
jp
sbb
fbstp
loope
out
es
push
mov
pop
cmpsb
into
sbb
scas
pop
dec
add
out
lds
fs
mov
jne
sub
add
cwtl
jno
pop
into
mov
pop
mov
imulb
lds
add
lret
mov
fs
movsb
leave
or
movl
mov
add
and
add
sbb
xor
mov
rcl
push
sbb
pusha
mov
cld
or
xchg
insl
mov
sub
mov
mov
adc
or
sub
imul
and
dec
out
in
dec
test
cmpsb
mov
pop
xor
rcl
and
push
mov
or
notb
or
fistpll
mov
rcrl
pop
rcrl
imul
sbb
pop
mov
push
loop
ljmp
xchg
shlb
push
sub
xchg
repz
mov
adc
jmp
inc
xor
sub
dec
test
dec
lahf
jp
ja
pusha
icebp
stos
pop
or
or
mov
mov
cld
out
cs
lock
mov
xchg
push
ja
pusha
cltd
loopw
ss
aam
dec
fsubrl
loopne
mov
mov
mov
cmp
dec
mov
and
aam
rcr
push
arpl
stos
imul
into
mov
pusha
lea
divps
movsl
hlt
inc
dec
push
add
jns
xchg
inc
add
roll
subl
xchg
mov
push
cmp
sub
fisubrs
ja
rorl
sbb
and
jne
ret
push
lcall
lods
add
add
and
lahf
rcll
rcrb
mov
and
xchg
out
jle
out
test
les
or
inc
mov
pop
vshufps
inc
lret
cs
subl
pop
sub
data16
jp
mov
pop
loop
mov
imul
int3
push
cmp
adc
pushf
js
fs
icebp
daa
stos
or
pusha
mov
add
dec
testb
fiadds
aad
xchg
ljmp
push
iret
dec
mov
cwtl
hlt
dec
sbb
inc
addr16
or
cmp
repnz
insl
rorl
out
dec
out
test
mov
mov
enter
or
jns
jno
pop
int
cwtl
sbb
mov
rcl
push
nop
addr16
fdivrl
movsb
push
mov
hlt
lea
in
sub
push
and
xchg
add
push
mov
sbb
cwtl
aas
xchg
stc
xchg
sbb
cmp
adc
pushf
rcr
and
std
fwait
fdiv
mov
xchg
sbb
inc
mov
call
xchg
pusha
sbb
out
mov
xchg
inc
fnsave
pop
call
stos
pop
pop
imul
cmp
inc
sbb
or
dec
xchg
into
sbb
or
addb
shll
imul
outsb
andb
mov
pusha
push
rolb
jb
cmpl
scas
bound
es
fisttps
cli
add
testb
iret
shlb
jne
mov
dec
ret
fucomip
orl
sub
adc
lahf
cmpsl
mov
cmp
mov
jl
test
in
pop
aaa
cmpsl
hlt
cltd
insl
mov
push
dec
int3
mov
daa
fwait
mov
inc
mov
mov
pop
dec
in
fidivl
pop
stos
lcall
add
pop
mov
inc
fwait
mov
in
inc
aam
dec
pushf
sub
test
cmp
mov
xchg
dec
mov
in
outsl
insb
js
cmp
clc
fsubl
xchg
das
mov
cmp
mov
aam
sub
adc
jno
pop
fisttpll
in
jbe
dec
jp
lea
daa
stos
mov
gs
cwtl
adc
xor
push
jno
adc
cmp
xchg
sub
xor
mov
cli
mov
push
mov
sarl
and
push
cmp
inc
sbb
pop
lock
fs
mov
cmpsb
insl
out
inc
insl
iret
popa
loop
lea
cmp
inc
in
xchg
mov
adc
push
cmc
orl
inc
adc
es
pusha
hlt
dec
mov
fwait
dec
or
mov
cltd
stos
subl
clc
cwtl
adc
fcomps
jnp
dec
nop
stos
add
sub
ja
xor
call
test
push
cmp
cmp
cld
pop
cmp
test
test
inc
mov
push
in
mov
xchg
imul
andl
out
sbb
mov
mov
cltd
push
adc
ds
xchg
movsl
sub
cmpsl
and
add
mov
aad
dec
sbb
sbb
insl
push
out
mov
arpl
outsb
sub
aaa
fwait
mov
jl
cli
ljmp
or
cmpsl
and
cmp
xchg
xchg
cmp
idiv
xor
add
stc
cmpsb
in
das
out
jmp
xor
mov
test
sarl
pop
mov
out
push
mov
ret
mov
test
call
jae
lret
test
ss
ror
mov
xor
or
cmc
jle
dec
fistpl
adc
push
xchg
leave
mov
clc
lret
add
popf
sahf
mov
adc
cmpsl
jns
add
pop
inc
icebp
pop
fdivs
int
mov
inc
test
and
loop
enter
imul
cmp
sub
lahf
and
cmpl
xchg
cmp
pop
les
lds
xor
and
jmp
pusha
adc
xlat
adc
aaa
cs
subl
xor
and
pop
mov
test
adc
jbe
sub
jnp
push
inc
cltd
sbb
adc
add
and
pushf
add
add
aam
mov
mov
aas
pop
jl
pop
lret
cmc
roll
jecxz
ret
add
mov
fcmovnbe
aam
icebp
dec
cli
cmp
push
shrb
mov
test
aaa
fmuls
test
in
aaa
movsb
dec
cmp
mov
pop
subb
pop
addr16
add
mov
int
mov
jmp
mov
cld
outsl
lea
cwtl
fnsave
xchg
jno
lea
stos
dec
es
clc
mov
mov
addr16
and
mov
sub
outsb
lods
cltd
mov
inc
lcall
out
and
popf
js
add
push
mov
into
mov
leave
xchg
movsl
add
dec
repnz
adc
out
jg
stos
cmp
loop
mov
jle
pop
dec
movsb
imul
jecxz
test
xor
js
imul
inc
and
xor
pop
pop
fwait
int3
jg
jmp
mov
pcmpgtw
xchg
sahf
pop
cli
jmp
fs
push
dec
cmp
adc
es
inc
jle
add
cmp
xchg
sbbb
enter
cmp
out
push
inc
mov
pusha
roll
mov
add
fsubl
ret
mov
jl
xchg
fcoml
xchg
out
push
xchg
xchg
imul
stos
push
push
and
shll
pop
xchg
and
in
mov
lock
je
dec
inc
jbe
dec
jmp
sbb
or
insl
sahf
test
jo,pn
adcb
orb
or
out
jns
into
inc
lock
adc
xor
or
or
loope
mov
pop
cmp
repnz
inc
arpl
lods
xchg
sub
ret
out
xor
mov
call
mov
lock
and
xor
mov
bound
push
movsb
imul
sub
out
push
jne
sbb
inc
dec
jo
je
jno
add
pop
popa
xlat
fwait
cwtl
sbb
idiv
adc
in
adc
aas
lahf
push
jo
nop
daa
lahf
sub
fwait
push
mov
jecxz
imul
or
in
and
mov
inc
shlb
outsb
movsb
mov
fldcw
jmp
cmpl
mov
dec
rol
or
stos
shll
jne
and
cmp
jmp
mov
jmp
stos
mov
add
ja
aad
sbb
jecxz
loop
push
inc
test
add
insl
pop
adc
lods
cmp
cmp
scas
adc
mov
or
add
test
enter
fistps
rolb
lock
adc
bound
iret
cmp
cmp
arpl
andb
adc
ljmp
wrmsr
pop
repz
sub
sbb
jg
jecxz
jns
mov
cli
inc
ret
xchg
mov
and
pop
sbb
mov
ret
jg
jae
imul
push
and
out
xchg
jmp
cmp
lods
data16
leave
mov
mov
sti
or
sbb
or
fwait
lods
fidivs
mov
pop
sbb
dec
mov
add
ror
dec
mov
scas
nop
push
or
scas
icebp
ss
bound
adc
in
outsb
mov
push
sbb
xchg
inc
gs
pop
add
xlat
inc
mov
inc
in
pop
andl
aam
mov
jmp
xor
enter
xchg
mov
pop
or
lret
add
xchg
mov
sub
jge
iret
ficoml
pop
fwait
shrl
xor
lds
in
or
dec
cli
in
or
and
pop
ret
ffree
add
mov
sub
pop
jne
xor
sbb
or
repz
ljmp
lcall
cmp
jle
shll
cmp
jns
into
arpl
ljmp
dec
inc
mov
rol
push
push
lock
in
dec
add
mov
inc
sub
pushf
inc
fisubrs
jb
stc
je
cmc
mov
add
cmpsb
push
cli
mov
or
push
pusha
sbb
push
je
lock
testb
in
fdivl
mov
test
adc
dec
sbb
jl
gs
inc
das
scas
mov
pop
push
push
ret
loop
adc
sti
xor
sub
xor
pop
and
cmp
mov
les
sub
stos
loope
inc
aas
lcall
pop
sarl
daa
les
hlt
mov
out
sub
xchg
mov
xchg
or
jbe
aas
and
test
in
imul
fsubp
aaa
adc
mov
cld
cmp
loop
sbbl
cld
and
inc
frstor
or
cwtl
pop
enter
stc
mov
push
test
rclb
mov
inc
cmc
inc
add
xchg
xchg
ret
into
add
dec
fwait
enter
inc
test
shrl
pop
xor
mov
ret
lea
ljmp
loopne
or
jmp
jle
jns
sub
mov
insb
push
xor
in
xorl
or
fisubl
push
jmp
lcall
nop
inc
mov
lcall
leave
mov
push
push
xor
inc
xchg
mov
cmp
dec
inc
or
outsl
mov
and
test
mov
and
mov
inc
inc
push
pop
fnstenv
imul
and
movsl
es
sbb
fwait
xchg
aas
sbb
fdivp
mov
sub
stos
xacquire
jae
mulb
sub
mov
jae
push
inc
dec
stc
xchg
sti
dec
imul
fwait
ret
pop
push
cmp
aam
je
movsb
push
add
out
and
cmp
mov
xlat
cmp
int3
repnz
stos
jns
ret
push
out
xor
cltd
sub
dec
and
jg
cmpb
cltd
fdivrp
sti
push
adc
fisubrl
dec
outsb
inc
cltd
mov
ja
sbb
js
sbb
cmp
inc
gs
inc
lahf
into
cld
insl
mov
push
mov
xchg
mov
mov
mov
or
nop
pusha
and
insb
popf
mov
xor
in
inc
sbb
insl
stc
mov
clc
das
sbb
ljmp
sub
mov
sub
sub
hlt
pop
xor
pop
sbb
adc
icebp
lock
adc
adc
xor
outsl
outsb
jmp
nop
arpl
mov
xchg
xor
sub
mov
add
pop
jge
hlt
rol
pop
jg
stos
push
sbb
jge
fcoml
xorl
enter
push
push
leave
push
or
sbb
test
insl
and
add
xor
sbb
lods
mov
xlat
or
xor
jp
fnstsw
addr16
cltd
mov
aas
insb
and
inc
mov
cltd
fxtract
rorl
into
cmp
inc
or
jns
adc
jbe
pop
leave
mov
fidivrs
ficompl
add
mov
inc
sbb
leave
adc
int3
mov
pusha
push
adcb
jo
pop
test
fists
repnz
call
xlat
daa
jle
mov
dec
sahf
scas
xor
pop
sarl
aam
imul
mov
aam
or
push
into
stos
mov
dec
enter
in
adc
incl
enter
out
inc
scas
test
movsb
orl
sbb
cmp
mov
mov
jb
xor
or
xchg
inc
xor
mov
addr16
jnp
in
cli
push
outsb
xchg
adc
sti
xchg
shlb
stos
cmc
push
xchg
lret
bound
lahf
pop
jb
inc
imul
xchg
jg
idivl
stc
movsl
sbb
popf
inc
xor
push
jg
sub
jle
mov
dec
lock
xchg
xchg
cmp
xchg
test
scas
aad
dec
adc
mov
xchg
push
xchg
cmpsb
mov
adc
lea
fwait
xchg
jp
out
in
repz
cmpb
sub
faddp
enter
repnz
mov
mov
jnp
iret
dec
mov
aaa
fsubrs
shll
xchg
rol
sub
pop
fs
mov
xchg
insb
pop
jl
ja
xchg
mov
jl
fidivrs
push
or
sub
jmp
push
jl
mov
pop
push
lahf
aas
mov
and
jp
roll
xor
aad
lcall
mov
addr16
jmp
fnstsw
jno
icebp
mov
insl
jmp
cmpb
pop
ficoml
mov
out
scas
insl
rolb
adc
xorb
or
adc
mov
test
rcrb
push
sbb
xchg
cmp
pusha
inc
mov
stos
cmpl
mov
notb
and
xchg
imul
loop
lds
push
and
and
sti
dec
adc
dec
add
shll
fcmovne
sub
shll
sahf
sbb
inc
scas
pop
jle
xor
negb
clc
xchg
mov
xor
inc
insl
xchg
xor
cwtl
push
fwait
xor
ss
call
or
ds
rcrb
out
mov
jns
mov
hlt
mov
pop
ret
push
pop
fdivp
popa
gs
test
push
imul
push
fcoml
inc
or
dec
or
clc
sbb
test
add
dec
clc
inc
stos
cmpsl
pop
addb
sti
test
popf
mov
sbb
xor
rcrb
cld
mov
lret
add
mov
out
mov
aam
pop
pop
sti
cmpsl
jg
ljmp
inc
inc
mov
rcrl
cli
jge
or
stos
sub
mov
scas
xchg
dec
in
loop
dec
push
mov
xchg
sbb
mov
lahf
jno
or
sub
cltd
scas
inc
mov
notb
das
xor
cld
jle
enter
movsb
push
popf
test
jle
jp
out
jae
pop
cmp
jmp
inc
mov
xor
mov
mov
or
cmpsl
cmp
and
mov
scas
in
sub
xchg
ja
icebp
js
cmpsl
add
pop
clc
inc
cld
xor
adc
sub
call
loopne
leave
or
int3
mov
or
jg
daa
add
or
xchg
mov
lret
sub
add
mov
sbbb
adc
orl
fiadds
and
add
sbb
sbb
fiaddl
scas
ficompl
es
insl
or
pushl
es
dec
xchg
enter
adc
in
pop
test
pop
fisubrl
rorb
rol
stos
jb,pt
mov
insb
or
fbstp
xchg
aam
out
mov
sahf
es
outsb
in
insb
enter
pop
test
cmp
mov
leave
call
not
xlat
add
rorb
jl
mov
dec
xchg
pop
shl
testl
in
test
cmp
push
sarl
mov
sub
es
fildl
inc
push
xchg
adc
sbb
dec
pop
repnz
pusha
add
mov
je
sub
mov
lret
add
push
push
add
out
fs
jmp
incl
and
push
in
push
lods
stos
jg
mov
sti
ret
pop
fnsave
dec
mov
jno
lods
into
fwait
inc
stc
js
data16
les
lcall
pop
lcall
ljmp
inc
pop
cwtl
roll
filds
xchg
aad
push
cli
les
xchg
loop
pushf
cmp
adc
std
orl
jns
cld
rolb
nop
mov
dec
icebp
cmp
adc
dec
js
cmp
cmpsl
movsb
out
push
mov
dec
scas
mov
mov
cmp
mov
jnp
mov
movsl
fwait
aas
cli
mov
mov
sbb
int3
mov
subl
jl
dec
cmpsb
sbb
adc
xchg
push
push
jg
sub
jnp
pop
lds
cld
call
out
insb
adcl
rorb
syscall
xor
xor
mov
mov
sub
enter
push
push
adc
or
mov
pusha
out
scas
jb
mov
repz
inc
test
dec
or
dec
pop
sbbl
xor
outsb
add
movl
mov
or
mov
sub
iret
out
push
mov
xor
or
addr16
fisubrs
out
mov
inc
imul
int
cmpsl
aaa
imul
setno
mov
or
fcoms
mov
fisubs
mov
imul
movsb
jmp
out
mov
cmc
fcompl
pop
imul
mov
clc
jo
cmp
push
pop
andl
pop
aam
sahf
xchg
pusha
sti
and
adc
cltd
and
push
cmp
out
ret
xchg
scas
imull
inc
cmp
mov
jmp
psllw
push
add
hlt
lret
mulb
and
pop
or
stos
add
bound
xchg
push
mov
imul
jecxz
cmp
out
jae
pusha
dec
sbb
mov
pop
dec
je
test
dec
lret
mov
mov
xor
mov
pop
lahf
and
xor
icebp
mov
push
add
jle,pt
push
xlat
xor
in
inc
cmpsb
repnz
in
push
sbb
jge
xchg
push
nop
mov
sbb
xor
push
rcl
push
dec
roll
push
jp
lret
je
or
jo
adc
sub
inc
popa
and
mov
js
lea
push
and
or
imul
packssdw
lds
mov
stos
cmp
aam
enter
ficoms
jg
mov
in
xor
mov
loop
pusha
cmp
xor
fisttpll
xchg
out
push
repz
inc
mov
xchg
sbb
push
fistl
ret
push
inc
mov
adc
xorb
aaa
jmp
test
sub
gs
nop
sbb
scas
xor
hlt
mov
fwait
notb
mov
fildll
sbb
js
jne
jl
je
jo
stos
mov
or
clc
mov
cmp
mov
pusha
sub
cmp
movsl
and
mov
pop
push
in
cld
xchg
cmp
inc
cltd
idiv
pop
mov
movsb
loope
icebp
mov
adc
xor
push
divl
lahf
notl
xor
add
jecxz
pop
mov
mov
pop
cmp
ret
xchg
sbb
aad
ficoms
push
test
mov
leave
cmp
inc
jb
fisubrs
xchg
pop
scas
sub
test
pop
ss
or
out
clc
je
stc
in
dec
rcrb
scas
rcl
jle
xchg
xchg
dec
pop
mov
data16
adc
dec
jg
push
enter
stc
mov
push
sub
jns
push
jb
mov
or
adc
arpl
xor
cmc
pusha
inc
jns
jno
rorb
insb
fisubrs
push
scas
xor
mov
xor
mov
add
in
pop
fsubrl
repz
or
ljmp
movsb
repnz
mov
ds
jp
lahf
dec
mov
lds
xchg
je
jnp
lock
cmp
add
push
dec
loop
push
sub
pop
std
inc
xchg
movsl
add
and
jns
xchg
and
nop
leave
addw
sar
and
inc
add
jne
cmc
fcmovne
cmp
loope
jp
mov
insb
bsf
daa
jne
sahf
bound
dec
xchg
pop
pop
push
pop
shll
mov
loopne
mov
je
cli
ljmp
pop
movsl
xchg
std
jnp
and
xor
jno
clc
aas
xchg
aas
scas
call
mov
dec
xchg
lret
mov
repz
fldt
dec
std
push
ja
sbb
and
dec
jl
xchg
pop
cmp
fwait
mov
aas
xchg
sysexit
or
ja
imul
jbe
clc
jo
jle
jg
lret
pop
xor
rorb
xor
inc
rclb
dec
jnp
xchg
decb
fidivl
out
mov
sbb
fistpll
test
fwait
mov
clc
cmc
inc
inc
and
mov
imul
cltd
add
pushf
xchg
shlb
add
and
jge
testb
cltd
lock
xchg
xchg
popf
mov
lcall
adc
push
sbb
in
aam
push
mov
or
insb
test
inc
mov
mov
mov
mov
scas
and
lea
and
push
mov
add
fdivrl
scas
aam
cmp
mov
into
xchg
adc
mov
pop
and
xchg
push
mov
cmp
aaa
imul
xchg
scas
sbb
loope
loope
insl
dec
lods
insl
clc
pop
subb
adc
fdivs
adc
pop
sti
adc
jo
mov
xchg
mov
jge
mov
lret
or
rclb
lret
daa
add
add
ds
pop
sbb
cmp
scas
je
sub
fcoml
push
in
hlt
fs
rorb
mov
xchg
cmpsl
sbb
xor
fists
adc
pushl
ficompl
adc
adc
test
mov
lret
dec
out
jne
add
mov
xor
dec
imul
es
jae
jbe
jne
push
dec
jl
pusha
cmp
or
push
jns
cmp
fsubrs
imul
sahf
or
add
sub
mov
movsb
inc
add
div
cmp
mov
ret
sarb
movsb
adc
std
jl
outsb
cld
mov
aaa
cmp
mov
mov
test
mov
loope
xor
jmp
es
inc
leave
repnz
test
fists
push
jg
xchg
push
aas
sub
pop
push
cmpsb
sbb
out
sbb
sub
test
mov
mov
xchg
test
jbe
cwtl
nop
xorb
jle
mov
push
add
and
mov
lods
mov
popl
fwait
pop
xchg
or
xchg
and
adcl
jmp
shll
adc
sbb
das
add
pushf
cli
and
hlt
jle
sbb
in
call
pushf
jns
jge
cwtl
mov
xchg
cmp
add
loope
andl
xor
loope
xchg
sbb
jmp
cmp
mov
ja
leave
data16
or
pop
sbb
fistpll
cmp
ljmp
mov
pop
roll
lret
out
mov
out
pop
lea
lret
clc
repz
jbe
arpl
mov
sbb
xchg
xor
rcl
nop
jecxz
mov
cwtl
aam
ret
test
fmuls
and
out
mov
cmp
aam
xchg
ror
jne
xor
xchg
mov
cld
and
rol
dec
outsl
scas
or
out
movsl
mov
mov
push
mov
mov
xor
or
jmp
insl
xchg
es
lods
xchg
lea
in
push
and
and
test
aas
xchg
and
lods
xor
das
cmpsl
xor
jne
fst
jne
dec
in
xchg
and
stc
mov
imul
push
js
lcall
shll
ret
sub
mov
jmp
pusha
in
neg
xchg
dec
xor
mov
outsl
inc
mov
fwait
pusha
pop
test
jl
mov
cs
or
jbe
shl
jl
int3
lds
push
aad
test
ljmp
add
mov
xor
lock
pop
int3
sub
mov
jo
int
loope
mov
xchg
outsb
or
or
jno
or
mov
push
les
sub
mov
sbb
stos
lods
hlt
ret
mov
ljmp
mov
imul
dec
outsb
mov
mov
add
jno
sub
rolb
xlat
roll
adc
test
add
pop
pop
out
out
dec
and
fwait
push
xchg
aad
call
jne
loop
push
test
das
dec
popf
not
mov
movsl
aas
repnz
inc
jae
jle
mov
scas
mov
sub
xor
aas
nop
pop
xor
sbb
cmpsb
dec
inc
pop
fstp
cmp
jo
push
sbb
adc
add
cmp
fstp
pop
push
or
mov
popa
dec
iret
and
stos
sbb
scas
xor
adc
xchg
cmp
mov
int
fsubl
pushw
push
fidivs
xchg
test
lods
aaa
mov
cmp
in
push
xchg
repnz
decb
mov
xorl
or
push
loop
add
inc
mulb
mov
mov
adc
addb
rcll
push
pop
xchg
and
rcll
rclb
mov
je
dec
push
xor
das
outsl
mov
in
pushf
xor
aad
pop
mov
insl
xor
aad
test
xor
fs
sbb
mov
dec
push
add
movsl
xchg
fists
imul
mov
push
out
mov
or
shrl
adc
and
jne
scas
cmp
out
dec
nop
ret
incl
aaa
std
mov
fwait
xor
bswap
jo
insl
pushf
hlt
pop
nop
cmp
mov
dec
ljmp
icebp
ss
rclb
outsl
jg
pop
stos
in
lods
lods
push
xor
adc
test
out
mov
push
push
dec
xlat
or
lock
fxam
cmpsl
stos
pop
lcall
cs
mov
adc
addr16
dec
add
cmp
loop
stos
scas
sub
push
out
out
mov
rcrb
jno
addr16
sub
inc
call
jmp
ret
push
pop
lahf
mov
sbb
mov
fcoms
movsl
pop
repnz
stos
pop
dec
popa
cmc
mov
test
roll
add
lea
jmp
lods
das
movups
dec
xor
or
loope
push
in
sbb
jo
pop
mov
fistps
sbb
cmpsb
adc
pop
loopne
fucomp
in
and
mov
jns
cs
in
mov
int
push
pusha
xchg
icebp
add
or
hlt
mov
cmpsl
ja
push
or
dec
fstp
xor
cmpsl
or
mov
je
dec
sbb
pusha
iret
repz
popf
insl
dec
push
jne
imul
cmc
in
in
mov
pop
push
pop
in
popf
clc
or
testb
pop
and
or
test
aas
rcrb
push
and
loope
inc
fwait
mov
xor
mov
dec
jo
cmp
push
enter
call
call
arpl
xor
cmp
sbb
or
mov
into
sbb
cmp
ret
push
in
imulb
mov
and
addr16
lret
jno
fs
xor
pop
and
mov
stos
sbb
xchg
push
cmpsl
es
inc
inc
sub
pop
std
dec
mov
mov
sbb
shlb
cwtl
je
inc
push
or
xchg
xchg
push
xor
fistpll
lret
and
imul
mov
test
xor
push
out
xchg
cmp
adc
movsl
or
dec
in
dec
lds
aam
inc
adcb
int3
and
and
sub
cmpsb
fwait
sbb
jb
sti
add
inc
imul
in
sbb
dec
pop
push
std
scas
pop
iret
xor
fwait
ret
dec
jmp
sahf
pop
inc
mov
pop
lret
push
std
outsb
sbb
xchg
inc
add
ret
aad
pop
adc
jle
and
jmp
in
loope,pt
ss
fcoms
dec
fcoml
sbb
push
gs
mov
adc
jbe
jl
or
adc
imul
ss
inc
movsl
aaa
sarl
mov
sub
pop
jns
mov
sbb
xchg
insb
mov
rol
sbb
dec
pop
data16
pop
js,pt
icebp
icebp
inc
mov
xor
and
ffree
push
test
mov
aaa
scas
xchg
add
pop
popa
jle
into
xor
inc
push
das
mov
mov
or
outsb
clc
mov
xor
push
movsl
jp
mov
pop
test
sti
stos
pop
movsl
pusha
into
inc
dec
fsubl
inc
lahf
fst
les
fucom
imul
mov
out
popf
adc
fnstenv
push
mov
mov
mov
imull
pop
xor
in
sbb
fsubs
mov
lods
xlat
xchg
imul
mov
push
lret
or
scas
or
dec
ret
ror
mov
jl
clc
xchg
lds
adc
adc
aaa
and
sar
in
add
test
xor
cmp
mov
lods
mov
pushf
cmp
or
mov
and
xor
mov
lea
pop
push
inc
push
add
xchg
pop
js
inc
pusha
lcall
fldl
les
inc
fucomp
mov
inc
enter
fwait
mov
scas
pop
pop
dec
xor
pop
xor
inc
mov
and
mov
arpl
gs
je
xor
lahf
add
mov
arpl
push
jmp
add
mull
xchg
jns
dec
lea
mov
gs
push
std
adcl
inc
test
mov
sbb
fcmove
lcall
imul
push
push
mov
pop
cmp
gs
mov
sub
pop
in
xchg
dec
mov
dec
es
and
loope
daa
fmulp
sub
add
ficomps
adc
xchg
push
mov
pop
jbe
sbb
jno
out
test
mov
push
adc
addl
cmp
add
fnstenv
and
mov
lret
push
dec
dec
xor
jb
sub
pop
or
hlt
in
fucom
mov
lcall
xchg
jae
dec
lahf
shlb
outsl
in
and
cmp
out
fisubl
mov
scas
xchg
mov
imul
mov
jle
xchg
fs
inc
jb
mov
push
outsb
lea
lods
sub
mov
aam
add
pop
test
int3
sub
cmc
xchg
aad
idivb
or
cmc
push
cmp
leave
sub
loope
jl
adc
and
aam
call
fsts
pushf
pop
jne
dec
cmp
aad
push
pop
mov
and
mov
aaa
enter
lret
clc
dec
inc
xor
mov
cli
aaa
push
mov
out
repnz
jo
mov
out
out
lods
jge
adc
sub
lea
and
mov
ss
adc
push
aaa
sbb
jae
das
cld
and
call
repz
fstps
loope
add
mov
insb
xchg
or
shlb
cmc
hlt
mov
stos
cmp
lret
xor
stc
push
rclb
lds
bound
das
xorl
pop
push
cwtl
pop
or
cli
pushf
add
dec
jne
pop
xor
std
fcomps
out
mov
fs
xor
roll
mov
push
mov
add
adc
mov
jge
rclb
lret
cmpsb
mov
rcll
xchg
pop
pop
sub
addl
xlat
test
mov
xor
icebp
dec
mov
xor
and
cmp
scas
shll
or
jnp
sbb
xchg
shl
add
dec
std
sub
mov
enter
mov
xor
jl
cmpsb
pop
cwtl
iret
xor
shrb
push
das
mov
test
sub
ljmp
adc
mov
pop
mov
gs
mov
fistl
movsb
xlat
adc
and
cmp
mov
fsub
pusha
and
daa
in
les
fisttpll
and
inc
loop
dec
aam
mov
popa
js
subb
or
xlat
mov
add
jae
pusha
daa
stos
decl
mov
cmp
test
stos
ret
shr
push
sarb
inc
test
inc
mov
jge
sbb
xor
push
fistps
jg
data16
inc
or
or
sbb
lock
sbb
pop
enter
repnz
jecxz
jbe
xor
leave
inc
jmp
nop
cmc
call
pop
push
sub
fisubs
mov
jo
inc
ficompl
adc
pop
je
push
ret
in
aad
xchg
fnsave
stos
mov
xchg
fistl
shl
fs
and
push
lcall
outsb
mov
loopne
xchg
jno
mov
xor
sub
and
lods
xlat
sbb
into
loope
mov
cmpsb
clc
push
cld
inc
sbb
mov
inc
pop
lret
sti
dec
dec
mov
jae
test
ret
pop
and
aad
mov
pusha
adc
mov
sbb
andl
mov
je
rcrl
stos
shl
mov
loop
jp
dec
jnp
jle
jle
cltd
das
scas
mov
push
lcall
icebp
test
push
xchg
add
data16
test
das
add
leave
and
mov
cmpsb
std
push
ror
mov
inc
jnp
xchg
or
sub
cmpb
es
fistl
ds
add
outsb
lcall
cli
xor
inc
pop
ret
dec
cmc
jge
jle
dec
sub
sbb
inc
push
pop
clc
push
pushf
jmp
dec
add
lcall
pop
mov
ljmp
scas
inc
insl
dec
mov
mov
in
data16
rep
jecxz
adc
push
or
rcrb
lcall
jns
sub
stc
xchg
in
movsb
rolb
bound
subb
pop
rclb
movmskps
mov
and
and
enter
xor
mov
aam
aam
jnp
hlt
ss
pop
ret
jmp
lds
fidivrl
cltd
fiadds
lds
leave
in
mov
jg
repnz
push
mov
adc
ljmp
or
dec
int
inc
lods
lods
xchg
and
imul
ss
subl
adcb
push
add
mov
sub
xor
shlb
outsb
pop
mov
bound
inc
int
cld
ror
cmp
mov
push
enter
jmp
fnstcw
pushf
or
pop
push
rolb
jae
or
and
push
call
adc
sbb
stc
pop
push
cmp
rorb
xchg
mov
pop
jle
leave
mov
fwait
icebp
dec
and
sub
cmp
xor
lods
jg
in
out
inc
jb
shlb
das
pop
dec
or
mov
loop
js
clc
jg
data16
aam
ds
jmp
ja
mov
aas
fldenv
in
movsl
xor
test
shrl
int
cmc
sbb
inc
ja
jle
xchg
mov
movsl
lea
cmp
mov
inc
xchg
ds
push
sub
lock
pop
cmp
and
xor
cli
xor
and
jl
cld
sub
js
push
and
cmc
xor
ds
or
dec
xchg
jl
dec
mov
mov
push
jbe
int
push
adc
jl
mov
xchg
jbe
sub
pop
out
pop
and
xchg
pop
or
jne
loop
mov
fdivs
fs
mov
out
dec
add
aaa
mov
inc
jmp
sbb
mov
jae
add
clc
movd
int3
adc
or
outsb
ds
dec
adc
test
mov
or
mov
mov
xor
int
jp
lahf
sbb
cmpsl
adc
addl
pop
arpl
inc
scas
dec
push
js
xor
xchg
mov
aaa
add
jp
rolb
lods
add
nop
imul
xor
outsb
and
popa
pushf
imull
xchg
je
cmp
loop
mov
enter
inc
jbe
cmp
loope
or
subl
stos
aas
pop
xor
mov
or
jb
add
pop
aam
sub
or
fsubrs
pop
cmpsb
sbb
xor
incb
mov
ds
loopne
xchg
jmp
adc
mov
int3
fidivrs
push
adc
mov
cmp
int3
ffreep
inc
rclb
sahf
mov
scas
jecxz
lret
cs
xchg
cmp
add
stc
das
in
xchg
movsl
xor
js
pop
out
stc
inc
jb
xchg
mov
push
lret
fldcw
out
xchg
mov
lahf
fldcw
dec
push
adc
or
cmpsl
out
dec
orl
pop
pop
cli
inc
sbb
and
and
in
jne
xchg
pop
loop
inc
xor
insl
ret
lods
mov
daa
adc
repz
mov
pushf
sub
sub
std
rcrb
xchg
pop
add
push
sar
fdivl
lea
repz
and
sub
pop
outsl
cmp
je
sub
push
mov
sub
mov
xchg
jb
add
repnz
icebp
or
jge
jae
data16
loope
iret
je
andb
xchg
loop
in
mov
and
xchg
sub
lret
testl
adc
repz
adc
das
adc
pop
cwtl
sbb
enter
in
scas
repz
lods
testl
mov
jge
xchg
shll
jbe
psubusb
js
jmp
sub
push
sub
mov
adc
cmp
loope
rcrb
mov
pop
or
push
int3
push
sbb
add
cmp
inc
inc
fsubs
push
and
pushf
fadd
fmulp
sub
push
in
sub
outsb
xorb
sub
and
scas
jle
flds
jno
div
push
push
xor
jmp
loopne
cmc
and
mov
movsb
inc
pop
addb
xchg
lcall
xchg
arpl
ljmp
adc
add
xor
mov
and
test
out
add
mov
and
js
outsb
fcmovnbe
inc
mov
pop
push
and
xchg
and
shrb
mov
popf
data16
les
inc
jno
das
ljmp
push
loope
push
dec
pop
jne
repz
pop
movsb
jg
and
pop
out
shlb
sbb
sbb
test
gs
or
js
push
push
or
dec
push
cmp
inc
int
pop
aaa
xor
xorl
inc
sahf
popf
neg
inc
pop
outsb
inc
in
sbb
and
js
fists
rclb
movsb
stc
xchg
test
sti
decb
dec
pushf
insl
int3
mov
ds
ffree
sub
jne
in
pop
cmp
pusha
dec
xchg
sbbl
shll
mov
pusha
dec
sbb
addb
cmp
sbb
aad
dec
ss
sbb
push
mov
cs
sbb
stc
jb
dec
cltd
lds
fnstenv
cltd
add
fnstenv
or
lcall
pushf
mov
jae
sub
sbb
xchg
out
sub
add
pop
mov
pop
mov
or
dec
dec
push
add
push
outsb
or
pop
call
daa
orl
repz
jno
aaa
out
push
or
dec
addr16
movsb
dec
cmpsb
xchg
sarl
cwtl
push
mov
add
and
mov
pop
push
push
cltd
mov
shlb
add
cmc
orl
jg
adc
dec
sub
lret
sub
fucomip
lret
cmp
bound
xchg
pop
hlt
mov
inc
jne
leave
cltd
mov
add
mov
inc
test
movsb
mov
or
cmc
add
push
xor
mov
scas
mov
divb
jg
xor
pop
push
rorb
enter
pop
mov
scas
mov
sub
sbb
loop
pop
sbb
mov
fidivrs
push
ficompl
inc
out
pusha
movsb
data16
pop
jns
pop
pop
imul
movsl
or
cld
sbb
lcall
adc
fs
shlb
shlb
push
lds
mov
orl
stos
clc
shll
cmpsl
les
xor
adc
mov
dec
aad
sub
sti
out
cmc
or
cld
sub
and
cmp
popf
repnz
js
loop
mov
into
pop
lds
sub
test
loop
addr16
mov
mov
ja
inc
fimull
outsb
pop
cmp
cmp
insl
dec
lock
dec
and
mov
ror
in
fisubs
adc
xor
enter
jp
enter
imulb
mov
cmp
pop
pop
pop
or
mov
xchg
mov
dec
mov
ss
mov
sti
sub
push
push
rclb
add
lret
repz
xor
ja
fmull
lret
jae
idivb
arpl
push
out
jl
sbb
loope
es
push
aam
bound
push
iret
add
das
fst
mov
pop
lahf
push
pop
sbb
xchg
or
lods
push
enter
and
push
sbb
aad
fcoml
jecxz
mov
mov
or
mov
adc
addr16
outsl
cmp
test
in
jnp
fsub
fildl
das
inc
sbb
pop
mov
pop
and
xor
xlat
js
sbb
lahf
xchg
adc
lods
sahf
cmp
pop
add
iret
mov
enter
bound
mov
jae
ret
jge
fsubl
cmp
imul
incb
mov
xchg
mov
add
xchg
dec
xor
mov
push
and
and
add
inc
adc
dec
jae
rcr
xor
lret
jmp
in
popa
or
mov
xchg
std
lcall
cmp
xor
pop
pop
push
or
ja
mov
std
or
cs
xlat
jno
loop
or
outsb
and
movsb
mov
je
push
fs
test
xchg
movsl
xor
sti
loop
inc
fildll
js
fwait
mov
pop
inc
cmpsb
xchg
jmp
dec
mov
push
jns
imulb
pop
lods
mov
js
dec
cmp
popf
adc
movsl
inc
aam
out
adc
mov
xlat
das
fistpl
xlat
idiv
sub
jb
mov
mov
sub
xor
add
arpl
mov
mov
je
mov
sub
adc
orl
add
lock
xchg
sub
or
sbb
mov
and
add
jecxz
scas
pop
aas
mov
jp
inc
popa
enter
lea
mov
mov
repz
jb
aas
adc
lcall
xchg
jo
lahf
ljmp
mov
leave
fldenv
fs
std
dec
dec
mov
xor
dec
sbbb
mov
lahf
pop
call
cmp
pusha
test
ja
cmpsb
dec
call
sub
pusha
data16
cmp
or
fcom
xor
shr
sbbl
and
out
vmovdqu
out
xor
sahf
xchg
es
push
jae
mov
pop
dec
push
or
loopne
jle
inc
and
mov
fisttpl
das
mov
in
sbb
in
mov
insl
fcoms
lock
imul
data16
fisubrs
jb
sub
xchg
xchg
fbstp
stos
shrb
imul
dec
iret
cwtl
inc
enter
xor
dec
pop
jge
mov
mov
shrb
popf
mov
and
jecxz
mov
and
aam
push
push
add
inc
js
loop
lcall
inc
xchg
insb
adc
dec
inc
inc
dec
scas
out
dec
jo
push
icebp
jp
outsl
int3
add
nop
inc
arpl
or
and
mov
loopne
push
or
mov
out
arpl
jne
or
gs
test
or
adc
mov
enter
push
push
frstor
mov
out
adc
bswap
dec
into
mov
xchg
jnp
push
push
xchg
cli
jp
aam
mov
xlat
pop
push
dec
in
sbb
cmp
repz
cmp
or
fcoml
jnp
insb
ljmp
pop
daa
push
std
pushf
movsl
testl
repz
outsl
in
sahf
ret
out
add
xor
mov
stos
jae
pop
sahf
lods
push
mov
add
push
int
lds
pusha
aas
cmpsb
test
out
jbe
xchg
clc
std
mov
dec
ja
lock
fildl
int
xchg
pop
popf
push
xchg
sbb
and
rorb
nop
lcall
cli
mov
xor
ret
sbb
push
popf
loopne
sbb
cmp
xchg
mov
leave
cmc
mov
push
jnp
jbe
adc
iret
adc
add
lods
es
or
pop
xor
sub
sahf
lods
jne
cmp
scas
ret
inc
jp
scas
fisttps
jno
lods
xchg
push
int3
jne
mov
popa
sahf
lods
push
xchg
fwait
push
rorb
out
or
mov
add
jge
out
pop
int
stos
adc
or
dec
je
shlb
fistpll
nop
test
lea
fcmove
fwait
and
repnz
rcr
inc
push
repz
mov
xchg
and
pop
adc
cmp
dec
in
inc
je
iret
cli
iret
inc
rcl
out
lret
mov
pop
std
lret
shr
dec
add
jnp
mov
inc
es
pop
push
lock
sub
bound
daa
jo
push
bound
jle
mov
pop
xlat
push
push
enter
xchg
fstl
cwtl
jecxz
and
jae
lret
xchg
imul
fists
mov
stc
sbb
pop
add
cmpsl
lret
movsl
iret
int
repnz
dec
adc
call
daa
in
cmpsl
mov
push
outsl
das
test
or
fwait
xorb
inc
js
dec
mov
pusha
inc
pop
adc
mov
sti
jle
add
mov
hlt
fadds
inc
lret
mov
test
inc
xchg
dec
into
cmc
mov
push
std
xchg
sbb
push
rcrl
add
cli
add
repnz
sbb
or
orl
cs
xchg
insb
push
xchg
jnp
mov
fisubrl
push
cli
inc
and
push
out
cmp
icebp
int
out
mov
mov
inc
dec
push
add
or
cmpsl
mov
jb
mov
mov
pop
mov
shlb
into
fsubr
fdivs
ljmp
sub
fs
jp
inc
jae
lahf
idivl
dec
mov
aam
ljmp
pop
test
mov
bound
cmpsl
pop
sahf
sub
dec
sti
lods
outsl
jp
and
jle
xor
xchg
mov
xor
pop
xchg
daa
jnp
mov
cmp
mov
cmpsb
xor
jp
outsb
cmp
jb
and
jb
loope
stos
sti
subl
sti
sti
push
shlb
es
movsb
lcall
dec
mov
js
mov
js
inc
lock
pop
xchg
push
outsl
lods
clc
push
mov
daa
mov
cmpsb
or
hlt
mov
gs
push
inc
add
pop
lret
xchg
dec
filds
js
loopne,pt
fldl
dec
xchg
pop
sub
rep
pop
push
icebp
push
jo
mov
enter
clc
adc
hlt
lock
jecxz
test
jmp
test
sarl
fdivr
mov
out
sarl
cltd
dec
cmpb
es
rcrb
outsl
sti
in
sbb
or
mov
inc
dec
pop
push
insl
mov
cltd
lea
mov
movsb
jl
mov
gs
mov
jb
jl
xor
mov
out
xchg
xor
mov
inc
push
gs
sub
mov
inc
into
or
fldcw
mov
jg
jge
hlt
mov
ljmp
xchg
ret
int3
add
xlat
pop
inc
nop
push
sbb
pusha
rorb
adc
notb
arpl
iret
out
xchg
jecxz
fcmovbe
sbb
sbb
cltd
cmp
fcmovb
icebp
dec
push
js
fiaddl
fwait
sub
sbb
rcr
inc
mov
ljmp
mov
or
sub
xor
jp
or
mov
adc
ds
jp
mov
sub
lcall
dec
xchg
xor
mov
xchg
gs
adc
inc
in
pop
inc
push
dec
cmp
sbbl
mov
std
adc
inc
repnz
testb
pop
jl
cwtl
movntps
xorb
cwtl
mov
and
inc
sbb
arpl
or
mov
and
daa
mov
push
lret
sub
mov
in
push
test
shl
shl
adc
sti
movsl
packsswb
xchg
mov
inc
nop
adc
and
scas
push
shrb
and
lret
jne
dec
fwait
pop
in
test
in
icebp
fisubs
push
mov
cltd
inc
and
les
inc
inc
dec
or
inc
dec
popf
ret
gs
sbb
adc
aaa
pusha
je
inc
inc
ss
repz
rcll
repnz
mov
insl
mov
imul
push
xlat
in
add
cmp
cmpsl
outsl
inc
leave
xchg
jno
inc
in
sbb
inc
xchg
push
xor
incl
sbb
sar
sub
add
xor
and
leave
testl
jle
add
les
je
xchg
sub
ljmp
adc
mov
push
xorl
ja
and
adcl
pushl
or
add
out
divb
cmp
xor
pop
mov
stc
xlat
push
inc
cmp
push
xchg
addr16
repz
jg
cmp
in
insb
push
and
stos
and
cmp
inc
pushf
mov
icebp
daa
add
push
repnz
dec
xor
adc
adc
inc
inc
cmp
mov
int
ja
test
out
or
jnp
or
imul
roll
add
stos
mov
xchg
repnz
jb
mov
movl
testb
orl
dec
ds
ret
jle
cmpsl
shlb
dec
add
and
pop
jns
jp
push
cmpsl
scas
jbe
push
xchg
sub
mov
inc
dec
cmp
fdivl
cmp
enter
xchg
pop
mov
out
push
cmp
lock
sbb
jo
pop
iret
cmp
xchg
or
sahf
div
scas
push
imul
mov
dec
mov
imul
lea
std
jno
sub
das
popf
fcmove
dec
xchg
mov
xchg
in
test
test
push
scas
bound
jb
int
push
mov
add
fsts
sahf
call
add
sti
or
pop
scas
sahf
cmp
lahf
xor
cmc
xor
and
xchg
sbb
mov
shlb
arpl
call
int
inc
insl
jb
add
rep
pusha
dec
negl
les
jg
fistps
jmp
enter
inc
add
add
movsb
shl
mov
push
jae
xor
or
stc
inc
orl
push
sub
jl
addr16
mov
mov
outsl
mov
sub
pushf
pop
int3
int
inc
and
sub
or
xor
inc
inc
cli
jno
mov
jb
in
in
cmp
sub
jp
add
stc
pop
push
dec
out
mov
out
iret
mov
jecxz
rclb
mov
js
fcompl
jl
out
ja
sub
ret
mov
xchg
mov
in
test
or
movsb
add
mov
es
or
mov
push
xor
adc
scas
dec
push
push
dec
and
clc
sbb
sbb
or
mov
or
sbbl
xor
stos
stc
aaa
jg
xorb
dec
in
stc
test
pop
adc
sbb
push
push
in
inc
jmp
js
fisubl
and
xchg
push
xlat
jle
jp
push
lods
push
ljmp
push
jecxz
int3
aaa
fcoml
add
icebp
movsl
sarl
daa
lods
sbb
pop
test
sbb
call
mov
decb
sbb
sbbb
jns
mov
sbb
push
iret
push
cmp
add
xchg
sub
jno
and
mov
icebp
leave
test
hlt
lcall
push
mov
call
pop
scas
sbb
gs
mov
jmp
lcall
jns
pop
test
scas
sub
mov
ljmp
out
mov
dec
mov
or
loopne
jae
sub
popa
pushf
shrb
xchg
pop
mov
test
fnsave
movsb
inc
out
fmuls
or
mov
jae
adc
sbb
in
push
jne
idivl
sbb
dec
pop
sbb
sahf
xchg
push
les
add
inc
mov
lret
pushf
mov
cmpsl
and
mov
jmp
xchg
cmpsb
mov
stc
push
aaa
pop
out
jle
rcll
mov
or
dec
movb
fistpl
cmp
mov
push
sahf
imulb
sarl
std
mov
bound
mov
aam
mov
lret
das
jecxz
sub
sti
call
sbbl
inc
and
xchg
das
lods
sub
push
jnp
sbb
enter
hlt
xor
mov
loop
std
mov
out
scas
loopne
fwait
testb
bound
std
outsb
add
in
xchg
inc
gs
shll
push
inc
ss
and
lods
mov
andnps
push
shll
test
sub
pop
mov
nop
push
into
aam
mov
mov
fisubl
cmp
pop
imul
lock
dec
divb
js
mov
xor
add
or
loopew
xor
call
sub
js
movsb
in
adc
hlt
loop
mov
lods
jl
jne
push
int3
xchg
sub
lock
outsb
mov
jbe
mov
pop
sub
je
in
cmp
outsl
jb
in
cmc
dec
hlt
ds
addr16
lret
out
mov
mov
scas
jmp
or
test
cmovle
sub
mov
sbb
xchg
fldenv
in
sbb
mov
mov
or
xchg
dec
test
stos
mov
mov
negl
xchg
dec
mov
push
in
cld
sbb
enter
das
xor
mov
or
jo
mov
xlat
psrlq
xor
in
mov
add
jg
adc
and
cltd
mov
lret
push
push
stos
pop
dec
test
fimull
lock
cmp
mov
bound
and
fdivp
fists
cmp
mov
in
and
std
dec
rcll
ss
push
add
popa
adc
cs
repz
xchg
jno
mov
cmp
sbb
movsl
loope
out
lret
or
pusha
mov
leave
sbb
xor
hlt
loop
pop
imul
xchg
mov
out
insb
mov
cmp
fdivrs
mov
ret
fcompl
js
popf
lret
arpl
xcrypt-ctr
cmpsl
pop
jg
pushf
jg
gs
sbb
sbb
arpl
rorb
pop
sti
sbbl
popa
in
lock
stos
mov
sahf
xor
imul
cmp
jmp
inc
repz
rcrb
stos
inc
test
pusha
mov
sti
punpckhdq
mov
jo
subb
push
add
xor
xor
inc
fisttpll
xor
lods
push
cmpsl
insl
in
int3
insl
push
jecxz
out
test
dec
xchg
aaa
xchg
push
adc
or
mov
mov
and
ret
imul
mov
repz
or
xchg
add
and
in
subb
rclb
and
push
and
adc
push
sbb
sub
mov
in
nop
ret
sub
sub
pop
mov
sti
lea
xchg
dec
lretw
xor
cli
adc
sub
jmp
cmp
dec
movsb
fldl
shll
jp
outsb
mov
mov
aas
fnstenv
out
negb
out
rol
xor
sub
std
aam
mov
pop
adc
sbb
pop
mov
xor
enter
out
cmp
ds
decb
pop
jb
ret
icebp
imul
and
shlb
lret
jg
into
iret
ret
or
xor
jae
pop
popf
push
shl
mov
arpl
mov
mov
fiaddl
outsb
mov
fs
ret
addr16
movsl
sbb
imul
mov
lret
adc
ja
push
pop
inc
dec
jp
ja
in
mov
mov
frstor
mov
pop
mov
jno
rcrl
xchg
inc
mov
ret
inc
sub
mov
mov
xor
inc
stc
push
je
inc
push
jo
xchg
jl
bound
add
mov
pushl
add
xchg
inc
fmul
lret
mov
xchg
fstp
fcmovb
ljmp
sub
push
sub
xchg
jl
stos
fdivrp
jae
xchg
int
cwtl
xchg
xor
mov
adc
mov
jae
dec
push
push
arpl
sti
ds
lods
and
jae
or
cwtl
hlt
lods
loope
out
and
cmc
and
sbb
prefetch
sub
incl
icebp
aam
enter
mov
imul
xchg
mov
lahf
fs
mov
aaa
mov
std
test
push
sti
insb
dec
movsl
jmp
into
pushf
add
and
adc
les
movsb
jmp
imul
pop
and
aaa
cmpl
mov
sbb
ss
adc
and
addl
fadds
pop
std
popa
popf
and
fidivrs
dec
movsb
cmp
leave
pop
pop
xor
and
adc
adc
stos
xlat
dec
jne
rorb
inc
xchg
imul
adc
cmpsl
movsl
and
shll
rolb
add
out
mov
push
mov
fisubrl
sub
dec
jg
mov
stc
jle
jbe
mov
lret
xor
enter
push
jmp
gs
je
sub
xor
mov
int3
or
out
bound
nop
xchg
xor
popa
and
in
mov
inc
aad
mov
inc
loop
adc
lea
cltd
inc
xor
inc
sbb
insl
add
inc
push
cld
and
pop
xchg
insb
test
fs
ficompl
push
push
push
mov
pop
lds
fsts
sbb
test
mov
push
lea
sub
loope
std
ret
adc
shlb
les
icebp
mov
mov
sarl
mov
xor
push
and
pop
xchg
imul
cmp
jo
fs
or
jg
inc
fdivr
orb
aaa
mov
daa
mov
rorl
dec
jb
add
and
cmp
and
aam
ljmp
jne
adc
test
movl
or
sbb
push
pop
sarl
out
mov
mov
xor
cmpsl
or
sbb
mov
out
fisubrs
jb
outsb
xchg
divl
icebp
fnstenv
mov
pop
loopne
pop
repnz
cmp
xchg
and
sbb
addr16
cmp
sub
and
inc
loope
xchg
jmp
dec
stos
les
mov
in
lcall
xor
sbb
pop
push
adc
or
cmc
sbb
lret
pop
int3
pop
push
mov
xchg
clc
inc
rclb
lea
xchg
in
cmp
cmp
lods
cmp
cmp
mov
insl
data16
fildl
push
stc
fmuls
pop
mov
pop
jne
testb
sbb
das
dec
sbb
lcall
or
fs
mov
xchg
mov
pop
stos
adc
in
js
jl
lea
xchg
push
loop
xchg
fmuls
pop
outsl
orb
push
or
aas
push
inc
fwait
in
lds
int
mov
pop
mov
push
push
sbb
adc
jmp
negb
fwait
jge
stos
popf
push
in
push
movsb
push
mov
sbb
and
mov
adc
dec
xchg
sub
pop
add
jno
test
sub
sub
push
dec
test
and
pop
sbb
mov
mov
jae
xchg
daa
enter
insb
mull
dec
test
mov
outsb
xchg
mov
pop
mov
jae
les
sbb
jne
dec
mov
xor
xchg
je
inc
popa
arpl
cmp
xchg
lret
pop
lcall
in
adc
cmp
mov
lods
sbb
fisttps
insb
xchg
inc
cmp
movsb
cltd
and
in
jg
sahf
cmp
jmp
add
and
js
lahf
dec
xor
in
repnz
push
and
xchg
stc
adc
scas
ds
jo
shlb
inc
or
imul
aaa
lds
imul
imul
xchg
inc
cmc
mulb
fcoml
insb
ret
sbb
daa
fcoml
mov
push
cmp
inc
ret
cld
arpl
push
repnz
lcall
nop
ficoms
cmp
jmp
jns
sbb
inc
xchg
movsl
and
loope
mov
mov
out
test
pop
and
mov
int
enter
add
or
push
fwait
dec
xchg
dec
jecxz
push
xchg
jne
lahf
xchg
mov
mov
cmp
cmp
mov
clc
cmp
shll
lods
mov
xor
popa
fs
or
popf
and
jae
inc
pop
sbbl
test
mov
out
divb
fstl
test
push
aam
test
lds
into
jns
push
popa
xor
adc
mov
data16
icebp
dec
sahf
mov
jne
jmp
jne
sbb
adc
push
pop
xchg
sub
popa
outsb
pushf
pusha
sahf
shrl
push
aas
test
xchg
mov
adc
pop
cmpsl
lods
cmc
lea
cmp
lcall
daa
out
fisubs
jg
pop
mov
test
rclb
inc
fiadds
fdivl
cmp
inc
lods
pop
jae
push
add
and
test
sbb
cwtl
inc
es
cmp
imul
rcrb
xchg
fstp
mov
mov
adc
mov
pop
fcomps
add
cld
aad
mov
xchg
mov
and
bound
popf
lar
mov
mov
filds
mov
mov
and
adc
pop
inc
out
test
inc
xchg
movsb
sub
in
ds
stos
push
in
fidivrs
or
dec
outsb
fimuls
push
adc
xchg
sarb
xchg
mov
in
sub
jmp
sub
movsl
pop
lret
inc
xchg
xor
and
inc
and
scas
fisttpll
nop
xor
pop
add
cmpb
les
insl
mov
xor
bound
adc
push
push
sbb
lods
out
mov
push
imul
sbb
xor
push
or
scas
lods
dec
mov
push
or
mov
push
mov
fldt
push
stos
mov
mov
cmp
xlat
cli
out
xchg
xchg
xchg
and
insl
jecxz
xchg
mov
push
push
sti
fwait
pop
popa
cs
sub
jne
sbb
sub
add
fmul
addr16
xlat
sub
out
fisubrl
decb
push
xor
pop
sub
fdivs
push
xlat
push
xchg
mov
popf
loope
insb
pop
adc
arpl
outsl
push
pop
lds
outsl
dec
jns
mov
insb
jo
out
out
ret
das
fimuls
or
mov
or
dec
in
andb
jg
dec
ds
or
sub
lds
les
mov
jne
stc
out
jne
dec
dec
xchg
out
jl
push
in
arpl
mov
cli
sbb
insl
jne
daa
out
mov
inc
je
mov
sbbb
pop
pop
or
out
sbb
mov
rol
sub
fnstcw
lahf
stc
arpl
xchg
outsl
or
inc
xlat
lret
and
xor
push
fdivrs
lock
xlat
mov
add
ja
mov
cmpsb
stos
mov
fisttpl
xor
inc
and
push
push
test
ret
imulb
sbb
or
dec
and
rclb
rol
inc
mov
enter
add
xchg
xchg
mov
cltd
lahf
xchg
ljmp
dec
jp
mov
mov
or
and
xchg
cld
out
mov
mov
inc
mov
fs
add
lret
ret
cmc
xchg
lahf
cmpsb
ds
jae
xlat
jecxz
mov
jl
add
in
enter
scas
incb
test
loopne
jge
or
dec
mov
xchg
mov
stos
cmp
test
es
dec
in
mov
add
sbb
arpl
mov
test
in
in
sbb
data16
in
xchg
cmp
sub
push
es
jo
jbe
rcrl
jle
cmp
in
mov
imul
add
pop
rcll
cli
rcl
mov
popa
xchg
call
add
sub
ds
clc
pop
and
xor
inc
xor
pop
pop
hlt
xlat
push
cmp
sub
pop
xchg
shll
jae
pop
cmpsl
sub
in
incb
and
shl
repz
inc
push
sub
pop
out
cmpsl
sub
mov
lds
rcrb
add
add
jmp
das
in
test
jae
mov
mov
cmpsl
jne
pusha
xchg
cs
push
and
mov
out
xchg
cltd
jnp
jecxz
xchg
lea
xchg
lahf
and
testb
outsl
bound
sbb
insb
mov
clc
loopne
fwait
inc
xor
dec
mov
cmpsl
jno
sbb
jge
inc
xchg
neg
xor
dec
sub
adc
push
add
and
pop
dec
inc
rcll
jmp
or
subl
sti
and
jns
xchg
push
cmp
dec
out
cwtl
pusha
ds
mov
enter
in
sub
into
mov
pop
push
ljmp
push
sub
jecxz
push
test
xchg
out
xchg
test
fdivr
in
stos
test
jnp
in
xchg
ds
ds
std
outsb
clc
jmp
fwait
mov
ss
mov
clc
mov
mov
pushf
fimull
jmp
jecxz
insb
sbb
adcl
sub
push
in
sub
push
mov
or
lea
loope
jl
push
jne
fs
in
xchg
out
arpl
and
bswap
mov
mov
rorb
ljmp
call
repz
pop
add
int3
mov
clc
fldt
icebp
orb
hlt
and
sub
imul
lahf
add
xchg
sbb
mov
das
jno,pt
lea
aas
std
cld
adc
icebp
push
sbb
test
sub
out
mov
add
popa
cmpsb
stos
imul
and
mov
fimull
jo
sub
jo
jge
mov
pusha
iret
test
mov
aam
mov
mov
and
inc
xlat
mov
push
push
cmpsl
je
xchg
shrl
out
xchg
pop
dec
sbb
dec
outsb
stos
adc
ret
stc
mov
and
call
in
xchg
mov
sbb
cmp
pop
fldcw
in
ljmp
fucomi
iret
push
lock
rol
data16
mov
xorb
pop
or
xchg
fistpll
neg
lea
movsl
pop
jge
jno
dec
sub
ja
dec
mov
ds
jbe
clc
std
jge
mov
lea
pop
mov
jno
add
or
lods
cmc
sub
shrb
test
and
scas
xor
loop
int
int3
shll
jmp
sub
and
outsl
std
sub
cwtl
push
outsl
pop
pop
mov
cmp
sbb
mov
pop
mov
cmp
adc
test
outsl
dec
jae
jnp
pop
mov
in
jp
adc
mov
out
insb
clc
xor
test
mov
int3
mul
sub
inc
add
inc
mov
data16
dec
xchg
push
push
lahf
fcompl
lcall
pop
jo
sub
cli
add
scas
and
xchg
add
mov
sbb
int3
jb
jb
or
in
xchg
addl
mov
dec
jg
mov
test
add
jp
call
inc
insb
hlt
mov
push
xor
shrb
cmpsb
icebp
push
fdivs
inc
xchg
jo
dec
fsubrs
jmp
mov
pop
mov
scas
sarl
or
cmp
xor
clc
cmpsl
adc
lods
mov
cmp
mov
loop
icebp
inc
pop
nop
sbb
add
bound
dec
ja
outsl
adc
lods
test
or
insl
lahf
inc
repz
rcll
mov
inc
insb
lret
add
pop
add
xchg
nop
adcl
outsb
and
sbb
xor
dec
adc
pop
sub
insb
std
dec
inc
push
sbb
cwtl
iret
inc
testb
and
aad
xchg
pop
hlt
jbe
push
cmp
lods
and
inc
fiaddl
fstenv
fdivrl
mov
add
mov
xor
fwait
jg
popa
xchg
cmp
stos
mov
push
cltd
jnp
ss
jl
or
inc
test
cmp
and
xchg
xchg
int
cmp
and
iret
pop
nop
push
sub
jge
xchg
aad
jmp
mov
mov
push
imulb
push
xchg
fdivs
push
adc
inc
lret
sub
pop
cld
mov
out
sbb
aaa
dec
pop
cmpsb
inc
xchg
aaa
adc
jno
jno
aaa
cwtl
addr16
ds
cmp
xor
das
xor
out
insl
out
call
jg
mov
movsb
popf
mov
and
pop
jl
shrb
dec
call
ficompl
mov
add
ds
sarl
cmp
lcall
lds
sub
pop
cmp
or
cmp
sbb
cmpsl
dec
add
cmpsl
sub
xor
sarl
daa
sbb
pusha
fucomp
pop
sbb
add
push
addr16
gs
mov
in
jo
jne
repnz
adc
push
hlt
inc
lods
and
mov
insb
push
fwait
xor
scas
cltd
adc
sub
sub
mov
popa
cmp
shll
xchg
dec
std
push
sbb
icebp
push
loope
xchg
cmpb
pop
es
push
pushf
fdivl
inc
push
fdivs
or
pop
mov
movsl
fs
cmpsl
lea
xchg
push
ja
push
xchg
call
imul
test
lcall
rcrl
adc
popf
xor
cld
mov
mov
mov
inc
cmp
cmc
ja
aaa
or
dec
jmp
push
mov
loopne
jmp
cltd
mov
cmp
or
push
mov
in
mov
push
xor
ja
jbe
dec
inc
inc
dec
and
lods
pushf
gs
stos
pop
xchg
sti
jmp
lahf
mov
ja
mov
loopne
iret
push
sub
enter
gs
nop
pop
mov
das
idiv
fmul
mov
mov
pusha
push
lods
dec
shll
sub
cmpsb
push
leave
imul
adcb
dec
dec
sub
mov
roll
or
pop
inc
fistpll
cs
inc
imul
mov
mov
std
decl
dec
push
add
pop
jmp
mov
mov
jb
push
mov
rolb
push
ficompl
mov
mov
xor
push
pop
fsts
jge
inc
mov
inc
shrb
pop
cmc
sbb
ds
cmp
lahf
stos
add
test
nop
mov
jle
inc
das
mov
adc
cmpb
xor
xchg
jge
sti
test
lds
cli
push
shl
lds
jbe
cmp
pop
and
mov
pop
ret
in
sub
pop
lea
push
xor
jle
out
adc
insb
mov
sahf
mov
js
push
leave
xor
movsl
cmp
cmp
mov
adc
fcoms
inc
mov
xchg
push
decl
inc
fdivrp
cmc
ret
add
sar
faddl
cmp
outsl
inc
mov
inc
rcrl
lret
push
daa
inc
fnstsw
jae
adc
push
sub
jae
clc
lret
aad
lds
or
xor
ja
test
pop
push
cmp
fcomps
add
fmul
add
pusha
xor
aad
testb
jne
ja
xchg
jb
dec
inc
sahf
dec
sahf
cmp
or
lret
pop
push
pop
pop
test
jmp
outsl
xchg
arpl
insb
into
jge
dec
jns
insl
jmp
rcll
xor
mov
sbb
lcall
cmpsb
orl
fcoms
cmp
lret
push
ret
inc
imul
mov
add
in
xor
xchg
xchg
ss
push
pop
inc
test
test
mov
in
fs
pop
xchg
jge
dec
xchg
xor
in
mov
jle
out
xor
lock
rcrb
test
mov
iret
popa
push
mov
adc
outsb
filds
iret
lods
xor
sbb
sbb
mov
pop
mov
cs
push
ljmp
xchg
or
mov
lahf
pop
leave
sti
cmpsl
ja
adc
fwait
pop
in
inc
sti
imul
aaa
cmpsl
incl
pusha
stos
ret
lcall
lds
test
adc
push
lods
mov
std
in
enter
lcall
jmp
and
mov
dec
vxorps
or
jecxz
and
push
adc
mov
pop
int3
scas
jp
mov
add
and
fldcw
xchg
add
pop
mov
cmpsb
out
cmp
push
xor
add
and
in
rcr
push
fcompl
sbb
js
mov
and
adc
pop
stc
inc
hlt
mov
in
or
push
mov
push
push
xchg
loope
mov
and
fwait
mov
das
mov
push
stos
xlat
into
pop
sgdtl
lods
ds
inc
mov
insl
push
test
pop
test
movsl
filds
push
dec
int3
push
mov
movsb
sahf
sub
imul
add
mov
push
outsb
push
data16
sbb
push
jle
int
ja
jne
dec
and
dec
lcall
pushf
loop
sub
rcl
movsb
cmp
or
rclb
cwtl
add
sbbl
inc
mov
jmp
dec
enter
out
or
xchg
lahf
pop
call
push
pop
imul
xchg
mov
pop
aas
sbb
dec
pop
xchg
inc
ficompl
out
lods
aas
xchg
mov
ret
inc
inc
test
outsb
leave
jg
addr16
inc
and
or
or
pop
xor
mov
lock
xchg
sbb
cmpsl
mov
flds
lahf
imul
sub
loopne
or
je
scas
test
out
dec
clc
pop
sbb
and
addr16
in
push
fwait
add
mov
aam
or
ljmp
push
jp
mov
and
idiv
cltd
add
rcrb
ja
fwait
loop
stc
roll
cmp
fcomps
sub
iret
test
and
sbb
into
imul
movsl
jl
cltd
daa
jne
or
jno
in
test
sti
inc
out
loop
mov
out
jne
mov
push
std
scas
or
aam
cmpsl
sub
vmread
ljmp
clc
mov
lods
pop
fdivl
pop
and
mov
lods
pop
jmp
sub
fucom
orl
cmpsb
fcmovnbe
out
mov
xlat
test
dec
xchg
adc
sti
mov
push
pop
popa
push
outsb
popf
cmp
jle
add
es
push
mov
cld
sub
lea
mov
mov
add
mov
nop
adc
xor
xchg
iret
push
js
les
call
mov
inc
jg
xor
in
imull
push
sbb
inc
push
insl
and
cwtl
mov
stos
pusha
call
out
ds
fnstsw
rcr
mov
js
out
pop
mov
flds
outsb
rol
inc
punpckhdq
cmp
mov
into
push
jecxz
adc
mov
arpl
jg
sahf
push
dec
inc
jp
inc
add
xor
imul
loop
adc
xchg
fadd
or
jae
in
mov
xchg
aas
arpl
pusha
jmp
cmp
jp
mov
lret
xchg
ljmp
mull
mov
jb
sbb
divl
fistpll
outsb
aam
movb
jmp
sbb
push
xchg
lods
mov
gs
ret
fidivrs
stos
sub
push
xor
iret
pop
aaa
pushf
or
xor
std
addb
cmp
jp
cltd
push
adc
rcr
pop
jmp
mov
ja
mov
inc
sub
lahf
ret
movsb
ss
movsb
sbb
inc
sub
in
jl
pop
inc
int
rcrb
in
int3
mov
and
mov
sub
out
xor
loope
mov
scas
mov
mov
mov
pusha
repnz
fdivr
repnz
into
xchg
repz
shlb
test
cmp
sub
arpl
ss
aad
enter
dec
jg
ds
cmp
gs
xchg
or
jno
push
cmpsb
mov
add
stos
aaa
clc
sub
and
test
pop
sbb
repnz
lods
xchg
pop
sub
adc
pop
dec
jno
nop
cmp
and
mov
insl
sub
mov
inc
lea
mov
mov
ret
push
repnz
pop
hlt
inc
insb
add
mov
mov
pop
xchg
adcb
pushf
pop
repz
xor
sub
dec
imul
cmp
imul
cltd
or
sti
pop
aaa
pop
inc
sub
popa
jns
rorb
fiaddl
test
inc
rcrb
xchg
sub
pusha
incl
ror
sbb
bound
popa
pop
jl
insb
std
push
sbb
jnp
loop
pop
or
jno
pushf
push
cmp
mov
loope
pop
mov
mov
push
xlat
xchg
es
mov
adc
adc
and
shr
stos
jae
in
icebp
and
js
pop
xlat
lds
pop
dec
dec
pop
mov
push
mov
mov
push
cmp
iret
adc
icebp
notl
leave
es
mov
cmp
test
sub
cmp
bnd
mov
cmp
xor
iret
call
pop
popf
scas
nop
addb
sbb
push
fistpl
insl
aas
dec
jb
xchg
sarl
adc
mov
jl
mov
loop
and
push
mov
adc
movsl
leave
out
scas
pop
fdivp
inc
add
jbe
in
addr16
cmc
push
dec
cmp
xor
loop
xchg
and
lahf
fdivp
test
pop
mov
nop
adc
mov
adc
mov
adc
cli
lea
in
call
inc
push
sbb
and
dec
dec
xorb
dec
jge
mov
lahf
leave
stos
mov
stos
pop
test
stc
js
adc
insb
lcall
adc
add
mov
stos
mov
inc
aam
lret
adc
test
sub
push
dec
ret
jmp
and
pop
pop
in
pop
bound
or
fisubrl
aad
add
inc
sbb
movsb
push
pop
lods
mov
xchg
xlat
mov
loop
xor
dec
or
sbb
mov
std
inc
addl
out
jle
push
push
imul
out
sub
and
fnsave
add
jg
mov
rorb
cltd
or
in
mov
mov
clc
adc
aam
and
ret
scas
pop
jecxz
test
addr16
jne
or
ljmp
repz
js
mov
dec
pushf
call
cmp
in
push
inc
sarb
xor
mov
hlt
aaa
stos
xor
cmpsb
pop
jne
ja
pushf
jle
xor
lds
lea
mov
push
imul
xchg
mov
adc
scas
pop
ret
inc
and
mov
sub
inc
sbb
pop
fsubp
sub
xchg
ret
hlt
lahf
cmp
orb
add
insl
sbb
pop
xchg
mov
pop
stos
sahf
xchg
jge
xor
in
and
into
mov
pop
cmp
add
push
sti
popf
lahf
test
aad
imul
mov
aas
cmp
data16
pop
push
add
inc
std
cmpsb
adc
inc
inc
rorl
mov
ljmp
imul
repnz
pop
jne
in
mov
add
jl
cltd
sbb
cwtl
dec
mov
sbb
adc
xor
je
mov
mov
pop
mov
cld
ret
iret
popa
stos
sbb
rcr
fistpl
mov
jg
std
cmp
gs
add
pusha
lock
dec
je
push
pop
in
loopne
mov
js
cmp
cmp
add
lret
xor
fbld
jb
jns
cmp
add
mov
daa
and
jns
addb
adc
subl
mov
and
repnz
jl
xchg
adc
sub
cmp
data16
jg
lods
cld
add
cmpl
sahf
lret
jecxz
xor
subl
push
lea
dec
cld
nop
cmpsb
mov
jne
cwtl
mov
add
ror
mov
shrl
out
xor
movsl
inc
lods
lahf
out
dec
cmp
cltd
inc
gs
in
adc
pop
bound
push
pop
std
jge
fcmovb
or
inc
fisttpl
cmc
std
mov
shlb
sub
jl
xchg
adc
rol
jnp
adcb
in
test
xor
pop
xchg
outsb
pusha
lret
or
push
xlat
adc
mov
mov
mov
jo
sbb
dec
out
sarb
or
mov
gs
inc
insl
mov
movsl
add
and
stc
mov
loope
fdivrs
repz
and
or
filds
iret
jns
mov
loope
or
in
or
pop
mov
cmp
mov
add
jnp
mov
adc
sbb
sub
js
fxch
sbb
mov
mov
mov
mov
int3
sbb
pop
negb
mov
mov
xchg
inc
dec
and
cmp
popa
mov
in
adc
pop
scas
imul
scas
xchg
out
jne
push
ret
push
xchg
xchg
out
adc
and
cmpsl
xchg
jo
popa
test
xlat
rcrb
outsb
pop
imull
mov
data16
lahf
xchg
jnp
fstps
gs
ret
add
movsl
xor
push
fldt
adc
and
adc
loope
ds
das
or
push
adc
pop
test
mov
push
mov
and
test
and
mov
seto
adc
movsb
aaa
xor
sub
aam
pop
sbb
imul
sahf
jmp
ljmp
mov
dec
jbe
das
xor
hlt
rolb
gs
ja
rcrl
pop
in
jp
dec
cltd
jno
ljmp
add
loopne
push
push
jns
sarl
mov
shlb
pop
xchg
mov
icebp
je
je
in
nop
loope
stc
rcrb
imul
push
mov
dec
mov
into
sub
out
fs
stos
stos
mov
mov
xchg
jge
push
testl
clc
pop
cmp
inc
fisttpl
adc
insb
fildll
test
xchg
enter
gs
cmp
xchg
pop
inc
scas
push
mov
cmp
outsl
sbb
cmp
pop
xor
inc
ror
inc
xorl
ret
incb
jae
cmp
gs
lahf
dec
mov
cmc
fisubs
or
icebp
xor
scas
pop
xor
xchg
xchg
mov
fistpll
inc
lret
clc
sbb
add
and
sub
adc
cli
scas
data16
aad
pop
jnp
lds
mov
push
data16
dec
movsl
pop
and
aas
shl
inc
je
cmpsl
dec
dec
xor
fsts
test
shrb
test
pop
push
dec
and
imul
dec
sbb
hlt
sbb
xchg
dec
outsl
rorb
lods
jge
or
adc
fdivs
sbb
call
pop
inc
and
push
cmc
xchg
lds
and
sti
outsl
jno
call
gs
imul
lods
xchg
xchg
dec
push
imul
pusha
dec
and
repz
sbb
fistpl
stc
sub
xor
movsb
clc
jp
push
pop
lret
mov
ds
xchg
push
fldt
outsl
mov
mov
out
xor
push
xchg
xchg
scas
pop
or
add
mov
sub
stc
or
jmp
cwtl
in
adc
mov
sbb
dec
sti
jbe
and
inc
cmp
stc
pop
gs
cmpsl
pop
fwait
jnp
aaa
sub
adc
jo
xchg
clc
cmpl
out
adc
ds
in
rolb
cltd
ds
mov
pop
jnp
sub
mov
stos
sbb
push
jecxz
mov
ljmp
mov
and
scas
arpl
inc
adc
ret
aas
aas
insb
dec
push
mov
mov
aam
rolb
data16
lods
lods
addr16
and
stc
lcall
lds
fstpt
or
add
mov
lods
repz
call
jnp
icebp
ror
mov
or
pop
mov
mov
sub
pop
arpl
push
shll
loope
xchg
lcall
push
pop
rcr
ds
push
push
add
mov
and
lret
jl
sbb
cmpsb
jp
xor
mov
hlt
sub
push
mov
test
ss
jo
mov
add
push
and
xlat
or
cmp
add
aas
cmp
cltd
cwtl
sub
test
bound
pop
mov
popa
mov
nop
mov
dec
orb
out
push
enter
outsl
mov
movb
jno
mov
inc
rol
and
pop
jo
ljmp
sub
mov
and
lods
loop
cs
and
or
pop
or
cld
dec
xchg
fcoml
push
mov
mov
push
lods
repz
dec
aaa
bound
lods
mov
adc
pop
icebp
mov
jae
mov
rorb
jp
je
xor
xchg
dec
adc
rorb
push
adc
adc
xor
rcrl
xor
out
out
sub
mov
push
pop
mov
inc
xchg
sbb
and
mov
jns
daa
inc
push
adc
aad
xchg
repz
mov
aad
addr16
pop
and
movl
and
je
pop
mov
pop
and
out
or
jno
push
adc
lods
and
jo
ljmp
sub
std
push
jno
xor
sub
cli
daa
xlat
xchg
fidivrl
push
xchg
pop
in
lds
push
cmp
mov
aam
or
and
mov
jbe
sub
fcmovnu
movsb
mov
subl
mov
mov
mov
in
pushf
and
mov
sti
adc
xor
outsl
stos
or
jp
push
mov
cmp
jb
push
dec
ror
jbe
xor
clc
fst
push
bound
fcoml
rclb
mov
clc
icebp
sbb
mov
jg
das
xor
xchg
in
andl
mov
pop
iret
jne
lret
fldenv
sbb
mov
mov
pop
sub
aam
cwtl
xchg
and
sbb
pushf
std
fxch
inc
pushf
jmp
gs
inc
pop
popf
lret
xlat
push
pop
sti
push
jl
ljmp
test
shlb
ja
ss
push
add
dec
adc
cmp
xor
jae
cltd
sahf
push
stos
in
jb
push
ds
jge
push
or
bound
jae
pcmpgtd
aad
scas
sub
sub
mov
cmc
ja
gs
pop
pop
add
lock
lret
push
sar
cmc
xchg
popa
stos
les
inc
aam
mov
sbb
int3
mov
test
inc
xor
test
add
push
aaa
push
out
or
and
or
pusha
loope
push
out
push
in
pusha
mov
add
ja
data16
and
movl
movsl
add
negb
pop
xchg
insb
rol
call
ljmp
inc
jle
insb
xor
xchg
and
or
test
jnp
cmp
aam
lcall
mov
xor
inc
sbb
bswap
or
rcll
sbb
sbb
notl
mov
xchg
xor
cmc
sub
shrb
call
in
das
xor
jge
outsl
insb
jno
cmp
sub
aam
dec
lods
out
fisttpl
repz
add
mov
inc
andl
xor
sbb
mov
push
push
adc
inc
sbb
xchg
ficomps
inc
xchg
dec
sbb
pop
inc
mov
daa
test
popf
push
popf
and
je
xor
inc
testl
mov
sar
lods
pusha
repz
mov
push
and
hlt
or
mov
into
sahf
push
push
mov
mov
inc
inc
fsts
sub
jg
push
lock
or
sub
test
pop
sbb
outsb
stos
mov
cmpl
nop
inc
std
mov
lds
push
arpl
sahf
jbe
sub
jmp
lea
xchg
fisubs
and
popl
mov
jmp
pusha
adc
jecxz
lahf
leave
pushf
adc
cli
jecxz
push
repnz
mov
xchg
adc
push
or
add
adc
test
sbb
orb
xchg
pop
or
je
push
jg
inc
lret
add
or
mov
arpl
cmpsb
mov
fwait
sbb
push
in
pop
fisttpll
xchg
sub
xchg
add
mov
rcr
xor
and
pop
dec
cwtl
fdivrl
dec
pmulhuw
dec
movsb
sbb
or
mov
cmp
cwtl
jmp
pop
mov
orl
in
dec
push
gs
or
sbb
pusha
dec
pop
mov
sbb
sbb
popa
adc
stos
daa
ss
mov
popa
jae
xor
subb
aad
fsubrl
loop
jb
or
cmp
cmpsl
jb
js
pop
jno
xor
inc
mov
cld
imul
adcb
add
cmp
std
push
pop
into
sbb
cmpsl
push
jg
push
lret
hlt
jecxz
stos
in
pop
push
arpl
sbb
faddl
dec
inc
jae
stos
test
shll
icebp
icebp
call
loopne
in
add
lahf
fwait
mov
dec
fildl
sbb
ret
pop
std
dec
rcr
arpl
movsb
ret
xchg
cmp
xchg
jnp
test
cltd
aas
sub
pop
lods
mov
add
jmp
fstpl
aas
dec
mov
outsl
sbb
xlat
rclb
adc
mov
or
fwait
aaa
xchg
into
adc
or
sub
push
imul
repnz
lcall
cmp
movsl
call
pusha
or
xchg
sbb
les
pop
sahf
inc
mov
ljmp
inc
mov
hlt
cmpsb
and
mov
fdivrl
movsb
xor
push
std
push
ljmp
pop
pop
jb
xor
cld
sbb
mov
sub
xchg
push
rorb
jne
or
scas
mov
cld
push
jnp
jae
out
lods
aaa
push
lds
daa
loop
inc
mov
mov
sub
jp
pop
xchg
jle
push
pop
xor
pop
cmp
icebp
cmp
aam
movsl
add
dec
orb
int3
lods
scas
mov
lods
and
notl
ja
pop
mov
xlat
xor
je
imul
fiadds
sub
lock
data16
xchg
movsb
mov
inc
xchg
inc
lret
pop
inc
pushf
add
jg
movsl
add
int3
loopne
add
jno
pop
movsl
jmp
lahf
adc
mov
popa
es
mov
jnp
inc
mov
rcl
pop
and
or
mulb
xchg
push
imul
jo
add
in
push
or
xchg
xor
in
mov
mov
sbb
or
out
and
adcb
into
adc
adc
xor
mov
and
cmp
ret
rcr
adcl
ja
pop
popf
jae
js
pop
xchg
jg
dec
aad
faddp
push
enter
xchg
xchg
xchg
sbb
in
pop
mov
add
leave
ret
pop
in
sbb
ljmp
mov
out
aad
adc
pop
mov
je
lahf
addr16
xor
aad
xlat
clc
or
mov
es
fistpl
adc
dec
push
mov
mov
fdivrl
jo
data16
sbb
cmpsl
clc
fsubr
insl
and
and
sub
add
shrb
cmpsb
sbb
push
jo
cmp
cmpsl
add
add
cmpsl
insb
pop
cli
adc
sbbl
jg
inc
aaa
aaa
nop
jmp
jp
or
cmp
scas
mov
subl
jbe
hlt
pop
orl
and
adc
xchg
sbb
xlat
in
cmp
movsl
movsl
movb
xchg
jne
in
cmp
ss
inc
push
ret
movsb
into
adc
lea
icebp
lcall
subb
fisubs
je
insl
lret
out
test
leave
or
data16
jmp
mov
sub
lret
cmp
iret
les
pushf
cli
inc
mov
dec
ljmp
sbb
nop
addr16
mov
int
ds
adc
and
inc
fdivrs
jnp
test
lcall
xchg
fists
sbb
int3
test
out
imulb
sbb
mov
adc
stos
loop
sbb
jnp
ljmp
ja
xchg
cmp
mov
lret
cmp
pop
mov
mov
add
jns
or
dec
xor
mov
add
inc
mov
stc
xchg
das
push
mov
xchg
dec
push
cwtl
or
mov
sbbl
inc
and
inc
mov
jbe
ds
inc
int
movsb
ss
pop
xor
out
in
and
add
mov
mov
mov
loope
nop
dec
xor
pop
fildll
xchg
inc
out
mov
sub
sbb
add
pushf
out
jecxz
ret
pop
shl
inc
and
mov
mov
es
pop
dec
testl
or
test
clc
pop
not
or
insl
and
shll
imul
cmpl
pop
in
cmp
xor
jmp
pop
cmpsb
pushf
aaa
mov
sub
xchg
sbb
xchg
loopne
icebp
addr16
movsl
out
fldl
push
jecxz
inc
cmc
aas
pop
in
mov
adc
divl
fwait
mov
sahf
sbb
fcompl
gs
mov
lods
clc
jbe
ret
xlat
imul
xchg
push
fdivl
stos
add
mov
js
xchg
fildl
pop
jmp
or
push
lods
ja
mov
dec
imul
pop
incl
ss
insb
repz
adc
push
jg
mov
fists
mov
cmp
or
or
jno
inc
dec
add
add
lods
mov
pop
add
stos
jp
rorb
sbbb
sub
fwait
push
call
ss
lds
jp
pop
mov
nop
or
imul
sbb
cli
xchg
or
jbe
pop
xchg
les
mov
push
arpl
je
stos
rclb
mov
popa
jle
xor
push
and
xchg
fidivrs
icebp
ljmp
push
sbb
jno
mov
or
xchg
nop
jecxz
add
push
fs
cli
test
hlt
outsl
nop
add
mov
imul
ds
mov
sub
les
mov
daa
cmpsb
xchg
rol
push
cmp
mov
cmpsl
and
fcomps
hlt
pop
mov
js
sti
lods
sbb
aam
dec
jecxz
pushf
dec
es
fwait
and
mov
vcvttps2dq
imul
lods
adc
sbbl
adc
das
popf
sub
mov
dec
and
clc
push
add
out
sub
pop
jnp
je
pushf
fsub
xchg
loop
ror
popl
sti
mov
stos
cli
int3
pop
testl
bound
sahf
test
iret
xor
push
sub
out
bnd
outsb
and
sub
adc
jno
mov
sbb
cmp
sub
mov
adc
pop
inc
pop
adc
dec
and
jl
jecxz
out
push
in
xchg
push
dec
and
mov
sbb
lods
inc
int
std
push
lahf
mov
or
mov
pushf
add
movsl
cs
test
ss
adc
aas
insl
stos
cmp
popf
sub
fnstcw
dec
out
stc
sbb
scas
loope
lods
test
jl
fcomps
sub
pop
lcall
push
mov
mov
mov
cmp
cmp
pushf
and
and
imul
enter
cs
cmp
push
push
cmp
inc
sub
mov
cltd
push
add
sbb
es
jno
out
dec
fstpl
pop
loop
push
inc
pop
adc
sub
bound
lock
mov
test
dec
mov
mov
repz
lea
push
test
hlt
lcall
outsl
adcl
pusha
stos
int3
dec
ja
inc
pop
push
ss
pop
and
cwtl
add
sbb
push
dec
js
sub
lods
pushf
insb
mov
dec
repnz
es
inc
sahf
xchg
movsl
bound
std
dec
lods
fldl
add
cmc
push
loop
loopne
cli
sub
mov
fwait
push
loopne
xchg
setne
leave
imul
loope
fwait
lea
and
add
lret
imul
lcall
outsb
cmp
jecxz
test
cmpsl
negl
push
out
ret
push
loope
fildl
sbb
into
fsts
mov
sbb
and
cs
pop
in
jecxz
cmp
ror
andb
fbld
mov
je
add
sub
out
xor
pop
pop
and
mov
xor
add
iret
and
push
lds
in
pop
stc
bnd
pushf
sbb
ds
cwtl
leave
aam
mov
sbb
adc
inc
pminub
dec
out
push
add
xor
aas
mov
and
add
sub
dec
imul
movsb
subb
adc
add
out
jge
imul
jae
pop
enter
loope
daa
insl
addr16
das
inc
mov
push
cmp
and
clc
push
loopne
xor
add
adc
fcomip
jl
pop
dec
pop
ja
leave
mov
nop
pop
insb
pop
je
cmp
cmp
mov
call
push
jae
stos
cmp
mov
movl
add
rcrb
rcl
push
rorb
push
in
and
push
aaa
pushf
pusha
mov
jae
test
xor
in
mov
aaa
mov
sub
xor
gs
cld
jns
fdivrl
stos
repz
movsb
add
mov
bound
sub
lea
adc
sbb
arpl
mov
jmp
rorb
push
add
les
adc
into
jns
pusha
pusha
inc
cwtl
gs
rcr
dec
mov
xor
cmp
cmp
int3
popa
sub
gs
mov
sbb
or
js
lret
cmp
mov
sub
arpl
adc
mov
pop
aad
rolb
or
in
inc
je
push
xchg
xor
call
push
xor
mov
pop
xlat
dec
mov
mov
out
xor
enter
cld
mov
pop
push
imul
jae
fmuls
andl
subl
cmp
push
test
or
ret
mov
xor
cmp
movsl
repz
dec
inc
repz
loope
out
mov
sbb
pop
loop
cld
xor
inc
inc
and
mov
inc
pop
lcall
pop
jb
mov
mov
pop
fistps
add
ficoml
imul
jg
test
arpl
sub
push
icebp
adc
aad
push
out
sbb
mov
xor
dec
jge
or
lds
aad
les
jbe,pt
mov
lods
daa
andb
push
xor
pop
jo
mov
pop
adc
or
add
cmp
pop
sbb
mov
jne
jp
into
aas
jmp
xchg
push
add
sub
cld
push
es
dec
push
cli
js
call
cmp
lahf
cli
xchg
lock
fbstp
rorl
mov
xor
dec
inc
dec
adc
jbe
inc
loop
jae
test
aam
lea
adc
mov
call
std
xchg
outsb
add
fwait
pmaxsw
pop
pop
and
push
inc
iret
jge
inc
imul
shl
das
int3
inc
int
scas
out
add
mov
loopne
outsb
pop
jecxz
xor
cmc
js
fnstenv
pop
mov
cmp
insl
lret
cwtl
add
lods
das
ss
test
xchg
mov
fs
add
fisubs
sub
gs
sub
les
imul
push
out
or
ljmp
inc
xchg
pushf
test
fisttpll
orl
wrmsr
shrb
adc
mov
mov
mov
mov
sbb
lods
pop
pop
mov
call
fstpl
and
neg
imul
fdivrp
sarl
es
add
mov
mov
add
push
pop
fs
pop
mov
sbb
pushl
cmp
aad
xor
jb
add
mov
bound
mov
sub
stos
lahf
pop
sbb
int3
pushl
fcompl
aam
jp
pop
and
sahf
ret
mov
ljmp
mov
jg
scas
rorl
sbb
hlt
mov
enter
push
ja
movsl
adc
loop
pop
je
flds
lret
add
xchg
call
sub
inc
lret
jno
add
push
in
int3
arpl
jmp
jge
fwait
ja
imul
lcall
sub
lahf
jne
jbe
test
push
cltd
xchg
lea
sbb
repz
xchg
and
arpl
cmp
inc
cs
xor
jecxz
mov
inc
push
mov
sbb
aad
sbb
rep
pop
jne
push
rcrl
mov
or
or
jle
mov
outsb
mov
movsb
sub
xchg
push
hlt
push
cmp
test
adc
or
inc
push
sub
test
into
outsb
dec
arpl
push
cmp
lret
jnp
add
adc
shlb
shrb
lahf
movsl
lret
jne
aaa
add
and
xor
mov
push
xchg
inc
cld
stos
jb
mov
xchg
jbe
das
and
adcl
add
into
sub
mov
inc
into
mov
cli
out
jmp
add
in
lahf
cmp
mov
in
or
mov
dec
mov
inc
sbb
inc
mov
mov
jnp
fisubl
ficoms
or
pop
adc
jmp
jns
add
mov
mov
loopne
aaa
pop
out
dec
or
out
xor
or
pop
jmp
mov
mov
xor
int3
inc
xchg
fnstsw
xor
adcl
jnp
add
div
add
jae
lahf
push
rolb
out
imul
std
dec
pop
stc
add
mov
mov
imul
xchg
insl
cmp
inc
lods
mov
jbe
rclb
insb
jl
cs
enter
jne
daa
out
icebp
xlat
dec
and
and
cmp
das
int
or
cmp
cmp
adc
xor
xchg
pop
sub
ds
and
gs
cs
jns
leave
int3
jmp
mov
clc
adc
cmc
push
test
mov
jecxz
adc
stc
enter
fxch
lods
shrb
shr
in
adc
cmc
push
push
pop
ja
inc
movsb
xor
popf
hlt
pop
clc
push
cmp
add
add
add
xchg
xchg
jg
iret
in
stos
in
enter
mov
idivl
lea
mov
in
mov
imul
push
call
xchg
stc
cmpsl
je
daa
sarb
into
push
mov
push
and
mov
add
cwtl
int3
sub
lds
mov
jnp
mov
jmp
inc
cld
or
test
lds
and
push
or
mov
cmpsb
daa
pop
inc
leave
lods
addr16
sub
adc
mov
dec
fwait
call
sub
add
xor
or
lods
test
int3
push
adc
mov
pop
add
cmpl
out
fistpll
sub
xchg
lea
out
es
scas
sub
push
jmp
pop
push
sbbl
mov
mov
xchg
pop
stos
fcoms
das
jno
aaa
add
or
stos
insl
stc
mov
sub
sub
add
aam
and
test
push
mov
ss
jmp
aam
add
leave
xor
cmp
pop
add
shll
dec
pop
xor
mov
dec
call
lds
out
push
add
jmp
or
sub
xor
cmc
roll
repnz
outsl
lock
mov
subl
aad
jle
in
sub
imul
xor
rol
adc
xchg
cmp
xchg
loop
xor
lock
jmp
sbb
aam
xchg
mov
dec
fidivrl
mov
jne
mov
push
mov
movntq
out
xchg
xchg
mov
sub
mov
mov
insl
xor
imul
push
mov
and
mov
inc
sbb
outsl
push
shlb
dec
movsl
push
dec
or
push
jnp
cmp
test
outsb
out
adc
mov
stos
test
inc
cmpsb
movsb
jecxz
icebp
pop
xchg
into
repz
insb
aas
cmc
fadds
sub
adc
xor
push
orb
xchg
cmp
inc
test
mov
adc
push
test
insl
add
add
push
fnsave
lea
push
out
test
outsl
jbe
dec
or
lds
mov
inc
lahf
mov
jp
push
cmp
jo
mov
stos
jmp
dec
lock
push
loope
adc
add
stc
out
pop
ss
lahf
inc
xlat
ja
xchg
faddl
and
in
pop
iret
pop
push
std
sub
into
arpl
cld
adc
dec
jne
xchg
or
icebp
inc
adc
js
mov
cwtl
cs
mov
mov
cmpsb
pop
inc
push
adc
gs
pusha
cmp
sub
gs
cmpsb
xchg
ja
jne
jle
sbb
sbb
shl
push
jmp
mov
jno
adc
pop
out
sbb
pop
adc
or
xor
push
sub
inc
cmpsb
jno
aas
push
rcll
into
and
add
push
enter
cmp
mov
lea
stc
push
popa
sub
hlt
and
clc
div
cmp
mov
or
cmp
mov
lret
fcomip
and
in
or
out
inc
and
test
pop
jbe
add
mov
push
cmp
dec
jb
arpl
repnz
jecxz
jne
mov
outsl
fidivs
cmpsb
pop
jg
sub
cmp
mov
js
lods
das
mov
inc
test
sahf
pop
call
int3
inc
pushf
std
lcall
add
mov
mov
shl
jle
in
les
mov
fimull
call
xchg
xchg
nop
lret
fdivrp
pop
lcall
gs
sub
das
jb
dec
push
out
inc
fnstcw
bound
mov
fidivrs
aas
and
sbbl
lds
ss
mov
loopne
in
and
xor
faddl
das
pop
xlat
add
inc
fildll
pop
shlb
arpl
test
push
or
lret
mov
mov
mov
mov
add
insb
sub
aad
aad
lods
addb
mov
lret
lods
inc
inc
orl
add
rolb
test
hlt
stc
jg
xor
sbb
movsl
rolb
sbb
ret
and
sub
pop
sbb
mov
jae
mov
loopne
xor
pop
jecxz
shrb
add
adcl
xor
lcall
ja
mov
pushf
negl
fdiv
adc
in
mov
rcrb
iret
daa
int
or
pop
pop
add
sbb
dec
pop
sbb
add
adc
cmp
sub
mov
push
and
sub
mov
lcall
cmp
fldl
lcall
and
popf
ljmp
loope
dec
daa
add
cmpsb
inc
cmpsl
xchg
leave
push
stc
sbbl
mov
dec
pop
out
xor
cmpsb
scas
adc
dec
cmp
loope
inc
sbb
inc
out
jbe
fimuls
xchg
pusha
push
cmpl
mov
mov
aaa
daa
daa
lcall
addr16
cmp
jmp
sbb
mov
xor
jo
in
in
ud1
push
mov
lea
loopne
push
lahf
int3
shrb
ljmp
pop
push
ret
and
rcl
out
xchg
mov
repz
movsb
xor
ret
push
xor
push
cmc
pop
mov
and
cmp
and
cmpsl
xchg
jae
add
lret
jecxz
or
mov
jo
xchg
jp
ja
jecxz
and
scas
xchg
iret
xchg
xor
sub
cmp
mov
push
cmpsl
adc
cmp
shlb
std
jl
fs
test
cmpsb
popf
js
bound
push
popf
pop
nop
jmp
sub
and
dec
stc
je
lcall
mov
jae
jmp
loop
dec
imul
addb
aad
mov
mov
cmp
add
mov
sbb
enter
xor
xor
scas
mov
enter
jl
popf
mov
int3
sti
ss
pop
fwait
into
loope
rcr
gs
xchg
imul
fimull
and
das
mov
lret
push
sub
add
cmp
aam
das
mov
filds
inc
dec
push
std
aas
mov
out
inc
aad
ret
sub
subl
adc
lret
adc
in
es
jo
add
adc
or
out
lds
sub
jb
adc
cmp
arpl
mov
loope
and
faddl
sbb
ret
loopne
in
ljmp
mov
ds
inc
cmp
mov
push
popf
icebp
sub
pop
xor
movsl
int3
or
xor
mov
test
icebp
shll
mov
lret
lock
in
adc
jbe
ja
clc
dec
jb
cli
lahf
insb
mov
inc
movsb
dec
mov
stc
fwait
cltd
cmp
mov
mov
loope
rcrb
cmp
arpl
pop
or
xlat
push
hlt
test
inc
notb
mov
mov
repz
cmp
add
popf
jg
imulb
outsl
addr16
cmp
repnz
sub
std
push
loopne
xor
clc
push
aad
dec
or
dec
inc
lock
andb
clc
ljmp
mov
jmp
jg
lods
mov
mov
xchg
dec
mov
jnp
or
les
js
and
xor
lahf
xchg
ss
cmp
mov
out
in
mov
ljmp
sbb
data16
or
push
add
loope
xor
push
dec
xchg
lea
lock
inc
insb
dec
out
mov
or
mov
mov
cmpsl
dec
or
mov
sub
push
mov
shlb
stos
es
pop
sub
pop
add
clc
arpl
pop
ret
in
cmp
add
fcoml
lret
aas
adc
push
pop
divb
test
clc
lret
xchg
xor
jo
inc
out
jmp
stc
aad
pushf
sub
out
mov
ss
push
call
sub
outsb
sti
sbb
in
rorl
cmpsb
push
popf
sbb
inc
adc
sbb
iret
push
sti
bound
xor
push
nop
das
add
test
clc
ds
jne
inc
cmp
lret
xchg
or
mov
sub
subl
push
cmpsl
cmp
mov
pop
lret
imul
inc
push
adc
mov
scas
popa
bound
hlt
fdivrl
es
jb
add
ret
add
adc
lods
adc
out
loope
lret
inc
inc
push
arpl
lods
or
lea
in
mov
call
lea
repz
mov
xchg
jnp
or
mov
add
test
sarl
aaa
cmp
ja
popa
dec
fnstcw
sahf
fwait
jne
loopne
scas
hlt
cmpb
out
cmc
cmpsl
out
fnstenv
xchg
daa
dec
mov
push
add
or
fnstsw
and
mov
pop
loop
ss
nop
cwtl
lods
or
dec
ds
das
idivl
cwtl
loopne
mov
mov
xchg
pushf
mov
scas
ljmp
test
xchg
loopne
loop
mov
inc
loop
or
adc
inc
push
cwtl
jge
leave
shlb
lret
enter
movsl
leave
sbb
add
enter
mov
xor
stos
jbe
jbe
push
mov
or
adc
inc
out
mov
cmc
imul
scas
xor
pop
mov
test
or
lock
ret
mov
mov
mov
or
push
call
test
add
je
aas
mov
adc
aam
sbb
neg
mov
call
sbb
xchg
das
pop
push
pop
add
je
das
sti
jns
inc
xor
inc
leave
jo
ret
jno
sub
mov
enter
test
popf
cwtl
push
cmp
shll
outsl
daa
xchg
push
lds
xchg
es
xchg
into
mov
cmp
jge
adc
add
mov
data16
cwtl
gs
imul
mov
sarl
ret
aam
aas
xchg
aam
and
sub
dec
aas
outsl
aaa
stos
ja
popf
jge
and
push
adcl
in
pop
shr
jge
lahf
mov
aad
jmp
insb
aad
fwait
in
imul
fmull
xchg
pop
mov
stos
sbb
stc
stos
mov
add
push
push
sub
rcll
fsubr
push
das
pop
fstps
xor
dec
pusha
inc
repz
or
inc
jg
push
cs
lcall
incb
popa
mov
notl
loopne
das
out
fisttpl
inc
je
repz
out
in
inc
adc
js
dec
adc
sub
nop
sbb
out
pop
into
cld
cmp
lret
ss
ljmp
nop
pop
pop
arpl
fmull
inc
shrl
out
cmp
out
mov
adc
xor
loop
insl
bound
into
pop
pop
adc
push
das
jp
push
xor
cwtl
js
xor
das
jns
cld
mov
jo
and
and
xchg
inc
mov
stos
test
mov
mov
andl
cmp
mov
mov
in
xchg
in
jns
lods
cmc
lods
jg
icebp
test
jns
pop
add
inc
jle
lcall
mov
push
aas
mov
and
ljmp
and
int3
push
adc
sub
jle
push
sbb
inc
or
push
jge
mov
dec
or
rorl
ds
imulb
incl
enter
clc
and
jmp
xor
fstpl
cmpsl
or
jae
xchg
xor
add
outsb
pushf
lock
insl
adc
dec
cmpsb
pop
cli
scas
int3
jae
cmpb
xchg
bound
aaa
pop
push
fcos
in
test
cli
popa
out
xlat
fisubrs
mov
inc
iret
jo
inc
or
push
repnz
lret
push
pop
fcoml
mov
insb
cmc
and
inc
xchg
cmp
data16
dec
cmp
or
ret
lods
and
in
fcomps
jmp
mov
lret
scas
data16
outsl
jp
mov
in
jmp
mov
test
jecxz
pop
xchg
xor
add
mov
mov
add
sbb
or
imul
bound
shrl
pop
jae
andb
or
mov
mov
cld
test
in
xchg
mov
xchg
inc
lret
jno
xchg
sti
pop
mov
enter
jp
paddq
dec
inc
pop
mov
or
ret
lock
or
fldenv
cmpb
mov
or
call
rclb
mov
inc
jae
or
adc
frstor
movsb
loope
mov
adc
int3
gs
and
xchg
xchg
divb
or
lods
mov
sahf
iret
jecxz
aad
cs
push
jnp
add
fcomp
clc
shll
ljmp
or
dec
inc
cmp
xor
ret
sub
scas
and
subb
pop
and
dec
push
jne
or
enter
dec
rcrl
pop
mov
lds
nop
subl
xor
mov
daa
or
mov
xor
mov
inc
pop
icebp
cmpsb
imul
fcoml
mov
cmc
jmp
cmpsl
mov
inc
add
xchg
repnz
and
notl
xor
jmp
jns
scas
ficompl
test
test
sub
sub
push
mov
xchg
cmp
xchg
sub
inc
popf
dec
shl
call
movsb
jne
loop
dec
fxch
test
dec
scas
cli
lock
dec
adc
sti
adc
xor
adc
xorb
enter
jp
ds
inc
pop
or
adc
jg
mov
dec
mov
xor
cmp
int
out
lods
imul
pop
push
hlt
pop
sbb
clc
sti
mov
aaa
lods
mov
fstps
insb
rolb
test
adc
add
inc
cltd
mov
dec
cmc
cmp
jge
popf
jp
cs
iret
inc
jne
into
dec
lret
into
xor
mov
xchg
pop
lret
mov
mov
cwtl
and
lcall
mov
call
ficomps
xor
in
pop
iret
in
jl,pt
fwait
test
xor
scas
jecxz
mull
fisttps
fisttps
mov
cmp
add
or
cmp
loope
or
inc
nop
and
fnstcw
mov
jo
sub
aaa
mov
lds
les
xchg
mov
xor
enter
jno
jge
add
lret
xchg
xchg
dec
xchg
bnd
scas
cwtl
int3
adc
hlt
jne
add
mov
xchg
lds
scas
add
pop
adc
sub
les
xchg
mov
xor
aaa
lcall
loope
push
jg
lods
mov
cmpl
push
aam
xor
imul
inc
enter
add
lds
pop
das
pop
lds
into
pop
ficomps
push
push
and
lock
scas
scas
sbb
xchg
sbb
shlb
in
mov
dec
adc
push
addr16
scas
xor
ficoms
mov
lds
aaa
fnstenv
mov
add
sbb
loop
xor
js
jmp
imul
ljmp
addr16
out
jle
fmul
fildl
fistps
cmpsb
xchg
fmuls
fsub
repz
lret
cmc
out
cwtl
shlb
inc
xchg
scas
data16
push
imull
mov
xchg
insl
aad
stos
aam
adc
clc
subb
ljmp
sbb
das
dec
mov
pop
mov
jmp
add
mov
jbe
dec
mov
fidivrs
cmpsb
mov
sbb
ja
cltd
dec
scas
fisttps
fstpt
loop
dec
cli
stos
xchg
scas
mov
xchg
or
or
popa
in
into
subl
mov
shrb
mov
in
outsl
jae
mov
lret
iret
dec
mov
pushf
add
xchg
or
add
push
hlt
or
pop
xchg
sub
jge
jg
cltd
clc
cmp
cmp
mov
sbb
jne
scas
sub
shl
xchg
and
mov
les
in
movsl
or
aad
pop
xchg
cwtl
clc
mov
jnp
sbb
das
jne
test
xchg
sbb
cmpsb
push
inc
mov
or
ficoml
ficompl
inc
shrl
add
xor
add
push
jecxz
ret
dec
add
iret
mov
dec
cmc
pop
outsb
and
inc
dec
pop
xor
fs
inc
or
ds
movsl
rcr
scas
jmp
push
mov
dec
sbb
cmp
rcll
clc
adc
and
mov
ret
or
and
cli
int3
pop
sbb
loopne
dec
xchg
fs
je
sbb
add
add
lret
inc
les
xchg
movl
add
shr
shlb
loope
mov
imul
mov
push
lock
jno
sub
insb
outsl
add
inc
call
daa
mov
cmp
rolb
mov
xchg
sbb
mov
imul
push
shlb
push
leave
mov
lds
aad
mov
jle
js
or
jmp
hlt
cmp
mov
jno
imul
cld
xchg
mov
loopne
mov
movsb
pop
fldl
out
xchg
inc
repz
sub
outsl
or
cmp
mov
cld
lret
cmpsl
xchg
pop
and
lret
mov
mov
add
scas
mov
sbb
mov
inc
iret
or
fsubp
rcrb
bound
and
push
subb
sti
fcoms
mov
insl
pop
push
or
stos
sub
loope
inc
jo
imul
pop
arpl
repz
popf
cmc
int
inc
lods
jb
mov
xchg
popa
aas
sar
sbb
jmp
sbb
xor
push
inc
int
lcall
es
dec
outsl
jae
or
mov
jo
push
sbb
sbb
das
ficomps
mov
jecxz
sub
loopne
xchg
and
pop
mov
fstpt
sub
dec
add
test
addl
mov
addr16
aaa
cmc
mov
jae
xlat
xchg
xor
adc
iret
pop
hlt
and
movsb
push
mov
inc
icebp
orl
es
mov
sbb
out
xor
cwtl
inc
and
mov
sbb
dec
loop
mov
rep
jo
mov
adc
imul
fiadds
jmp
arpl
aam
jo
sar
mov
mov
ss
aas
repnz
push
mov
lds
movsl
imul
sub
imul
cmp
jbe
xchg
pop
mov
xchg
ffree
dec
repz
mov
lods
clc
inc
inc
outsl
xorb
cmp
push
aam
dec
fwait
pop
push
sub
js
loopne
xor
inc
or
subb
cmc
stos
sbb
push
int3
pushf
sbb
lret
subl
jae
rorl
ds
lods
mov
cs
sbb
mov
mov
dec
mov
ret
dec
aam
in
mov
fucomp
ds
imul
daa
lret
and
cmpxchg
xchg
mov
mov
or
jns
jecxz
int3
mov
pop
fisubl
aaa
adc
jbe
lea
hlt
mov
jnp
cmp
popf
repz
lretw
data16
fisttpl
loope
orb
ret
cmpl
mov
or
mov
mov
insl
pop
push
pop
and
sub
sub
fstpl
pop
lret
sub
push
add
dec
mov
popf
inc
fisubrs
repz
mov
mov
push
sbbb
cli
into
daa
cmp
shlb
cmp
mov
ret
cmp
mov
repnz
or
shll
icebp
lea
dec
scas
fdivs
cmp
sub
int
sbb
bound
pop
add
cltd
xchg
inc
test
jb
mov
in
sbb
mov
push
sub
fcoml
test
inc
xlat
mov
pop
pop
push
push
mov
sub
das
dec
inc
pop
fs
mov
test
mov
mov
mov
adc
in
dec
push
jae
inc
xchg
ds
dec
aam
or
sub
ret
pop
addr16
or
mov
inc
xchg
sbb
in
xor
mull
enter
imul
js
into
cli
iret
jmp
mov
sub
add
jge
in
flds
call
jg
sti
jmp
arpl
jle
mov
fadd
cltd
mov
test
sub
mov
jb
outsb
rolb
pop
aaa
fisttpll
ficomps
popf
and
lret
add
adc
testb
pop
loop
push
push
pop
push
xchg
hlt
das
sbb
in
std
pop
pop
dec
test
sahf
outsl
jne
icebp
mov
fidivl
es
lret
out
stc
mov
push
pop
bound
xchg
dec
psrlq
mov
mov
pushl
mov
fsub
pushf
cmp
cmp
jmp
addr16
push
jnp
insb
pop
setno
dec
and
mov
lds
xor
or
pusha
jns
push
push
arpl
dec
or
add
lock
jmp
ss
iret
arpl
rcrl
mov
lahf
cmp
outsb
mov
int
pop
insl
jmp
lret
fs
jne
fldcw
and
shlb
push
push
loop
sar
inc
cmp
int3
jae
or
push
xchg
push
pandn
rcl
aas
hlt
inc
lods
mov
popa
int
cmpsb
inc
push
jmp
sbb
mov
mov
sub
lock
addr16
add
or
sbb
pop
pop
and
cmc
dec
cmp
repz
pop
xchg
and
and
adc
orb
lcall
call
aas
pop
pushf
push
push
sbb
mov
sbb
jge
or
cwtl
mov
ja
cmc
in
shlb
je
out
dec
cld
setl
adc
mov
fwait
nop
pop
rclb
xor
rcll
mov
out
ret
cmp
out
pop
inc
mov
pop
pusha
arpl
es
call
cmp
xchg
pushf
push
cld
rcrb
rorl
mov
xchg
and
push
xchg
pop
add
ja
pop
push
xchg
fcmovnu
mov
mov
mov
stos
mov
icebp
pop
xor
mov
ljmp
leave
stc
mov
repnz
xchg
mov
out
and
add
sbb
roll
aam
leave
jne
test
inc
or
rcr
arpl
fldcw
sub
lahf
lret
and
insl
add
fistps
imul
lahf
sarl
in
daa
lods
inc
arpl
call
outsb
or
and
movsl
inc
xchg
xor
jnp
sbb
lock
inc
adc
in
xchg
stos
xchg
sub
bound
xlat
inc
fsts
jbe
adc
addr16
mov
ja
fwait
push
inc
add
or
mov
cmp
pop
jno
testl
pop
int
sarb
ret
out
roll
lahf
fs
mov
scas
aad
pop
in
iret
fs
sub
pusha
rcll
rcr
xor
enter
popa
aam
pushf
daa
inc
fiadds
test
bound
aas
mov
pop
add
cli
in
add
push
xor
xchg
cmp
jo
movsl
dec
add
or
sarb
fstpt
push
inc
cmpsb
add
mov
aad
or
inc
arpl
repnz
xchg
mov
mov
lea
jb
fisttpll
sahf
jmp
jne
sbb
jecxz
push
ret
idivb
mov
xchg
lahf
rolb
or
inc
repnz
cmc
scas
pop
sub
mov
es
mov
pop
pop
imul
jge
daa
imul
push
daa
mov
shlb
inc
in
lret
ret
inc
imul
xchg
pop
cmp
data16
daa
cli
mov
add
sbb
movsb
mov
cmp
imul
dec
sbb
into
test
repnz
daa
mov
lods
scas
out
mov
clc
xlat
xchg
sub
push
rclb
out
dec
lock
addr16
push
mov
mov
mov
lods
daa
fistpl
cli
outsl
cmp
xchg
jle,pn
or
or
lret
gs
lret
mov
cmpsl
xlat
js
xchg
std
leave
xlat
imulb
sbb
xchg
pop
pop
or
fisubrl
imul
fisubrs
ds
scas
stc
cmp
or
aam
pop
lods
pop
sbb
push
or
add
pop
cmp
push
inc
mov
and
cmpsl
inc
xchg
jne
das
xchg
add
mov
ljmp
ficoms
lea
gs
pop
inc
loopne
mov
xlat
pop
mov
fwait
stc
fldcw
pop
pop
enter
push
mov
pop
cmpl
xchg
in
jecxz
pop
not
cli
rcll
pop
je,pt
push
jo
push
push
divb
scas
jnp
push
xor
jne
jnp
mov
inc
test
imul
icebp
cmp
out
mov
jns
xchg
pusha
iret
js
mov
dec
adc
int3
push
inc
iret
sub
fldt
dec
ljmp
add
add
lret
movb
push
outsl
mov
std
push
jo
inc
xchg
out
xchg
mov
pushf
mov
gs
fnstenv
cmp
daa
pop
mul
es
jns
sahf
cmc
mov
loop
aam
jbe
dec
add
push
jl
or
jge
sbb
xorb
fildl
iret
fidivs
xchg
sbb
push
gs
add
jo
adc
shrb
jmp
aad
adc
pop
add
add
movsl
ljmp
mov
or
movsb
movsl
rolb
lock
scas
adc
icebp
fmull
imul
dec
cmpsb
lods
test
aaa
mov
jae
das
test
dec
leave
push
ret
push
adc
xor
les
cmpsl
or
jne
outsb
flds
cld
push
rcrl
adc
jb
mov
mov
ret
lret
test
in
mov
cmpsl
push
mov
push
adc
stos
repnz
ljmp
ret
jle
or
ds
cmpsl
mov
out
roll
or
xor
ss
xlat
cmc
ja
dec
cmpsb
cmp
mov
in
shll
mov
shlb
mov
js
outsl
popa
aas
test
mov
pop
pop
or
dec
push
xchg
fs
lret
aad
adc
pop
dec
inc
mov
mov
cmp
mov
inc
or
xor
ds
les
iret
jb
mov
adc
sbb
push
jge
adc
clc
scas
pop
out
clc
test
stc
xchg
leave
aaa
jg
mov
add
cmp
adc
lret
push
adc
andb
mov
out
dec
mov
dec
jle
arpl
pop
mov
insb
scas
scas
pop
lret
cmpsl
and
test
inc
mov
adc
mov
xchg
or
sub
aaa
add
pop
cmpsb
mov
daa
outsb
shll
shll
xor
lods
push
sub
mov
jmp
lret
in
out
jl
sahf
push
jecxz
xor
rorl
sarb
push
and
imulb
orl
jb
push
pop
leave
pop
sub
cmp
sub
pop
pop
add
pop
xchg
xorb
jp
jne
sti
mov
popf
je
clc
test
rolb
xor
cltd
sbb
mov
push
test
xor
jmp
dec
in
or
cmpsb
sub
cmp
adc
dec
je
pop
or
push
xor
dec
mov
push
mov
xchg
loope
mov
mov
lods
fbld
inc
jb
and
cmpsl
fmull
fst
mov
mov
cli
dec
mov
mov
xorl
cmp
ds
mov
lods
push
lea
jo
cli
xor
std
orl
into
cmp
divl
bound
adc
xor
cmpb
or
mov
lds
xor
ret
icebp
sub
mov
das
xor
mov
push
push
aaa
enter
xchg
add
cmp
aad
js
shll
mov
jmp
dec
neg
lret
xlat
push
enter
cmp
mov
loope
pop
pop
ds
addl
test
out
mov
testb
adc
xchg
mov
or
aad
push
jnp
ret
es
jp
mov
lds
lock
jmp
mov
and
pop
out
outsb
add
hlt
push
mov
xchg
mul
pusha
jmp
shr
in
push
fadds
pop
out
andl
xchg
adc
or
scas
sbb
pop
and
ja,pt
push
pop
sub
xchg
in
nop
scas
mov
sub
xchg
sbb
stos
inc
call
lods
push
xchg
sti
lcall
pop
or
das
movsl
lods
xor
lcall
out
push
flds
std
lcall
jg
movsl
mov
ds
xor
or
sbb
push
cltd
and
pusha
cmp
or
mov
sub
stos
sahf
std
cmpsl
pop
ds
xor
jle
jno
inc
outsb
fistpl
outsl
into
or
dec
in
mov
mov
out
adcl
xchg
adc
js
pop
mov
aad
repz
insb
cmpsb
sbb
icebp
imul
pop
fwait
mov
ucomiss
out
leave
mov
fsubp
pop
cmp
push
stos
xchg
and
mov
mov
add
leave
cmp
xor
fs
scas
jp
mov
push
lods
jno
sbb
nop
mov
nop
in
pop
mov
movsb
pop
xchg
cmpb
leave
ffreep
adc
push
imul
mov
add
adc
addl
dec
jecxz
pop
mov
xchg
fildl
test
xchg
adc
pop
pop
or
int3
in
adc
ret
faddl
lcall
jge
pusha
fldcw
fs
sub
decl
jmp
push
sete
inc
and
dec
lcall
lahf
je
repz
adc
adc
fildl
das
add
jp
in
test
sub
and
enter
adc
jne,pt
inc
movb
and
mov
das
inc
out
js
cld
cld
mov
sbb
mov
mov
cmpl
jbe
sub
ret
mov
arpl
pop
or
cmp
lcall
scas
inc
xchg
pop
aad
dec
jl
notb
sbb
mov
loopne
das
lahf
or
repnz
cmp
enter
cmp
jae
and
ret
cmp
movsb
cli
xchg
mov
mov
ffree
push
add
fidivs
jle
adc
add
shr
sar
fwait
movsb
lods
dec
mov
cwtl
adc
add
jns
cmp
mov
xchg
sbb
xor
adc
insb
inc
in
pop
push
mov
mov
and
stc
push
rclb
std
orb
test
mov
mov
pop
fimuls
int
jbe
testl
push
add
xchg
fcomip
cmp
cs
das
aam
or
push
subl
add
lock
lock
jle
jb
cmpsb
jae
xor
add
mov
out
push
shr
jae
pop
imul
rclb
adc
outsw
shrl
and
pop
mov
dec
cmp
sbb
in
jg
pop
iret
or
lock
imul
add
mov
mov
jae
add
mov
mov
ljmp
stos
jno
push
cmc
setne
mov
mov
xchg
fsubrs
leave
es
mov
and
clc
fimull
push
and
out
or
mov
push
out
pop
cli
jmp
in
inc
and
inc
inc
sar
lea
push
enter
push
loope
xor
inc
mov
insb
mov
imulb
packssdw
mov
aas
dec
cmp
mov
jnp
dec
xor
js
sub
sub
fisttpll
faddl
popf
inc
jae
enter
or
and
xor
inc
mov
dec
sbb
mov
dec
lods
js
gs
test
adc
mov
inc
sbb
aaa
adc
mov
jnp
xor
cmc
shlb
inc
or
repnz
jmp
scas
pop
out
push
gs
adc
test
and
inc
cmp
xchg
sub
and
dec
xlat
insl
xchg
mov
cli
rcrl
je
mov
xchg
insl
mov
and
and
mov
out
jnp
outsl
mov
push
push
iret
dec
aas
ss
loop
adc
push
mov
cmc
inc
out
inc
mov
frstor
pop
repz
movsb
js
sahf
outsw
and
and
dec
or
sti
xor
out
ss
enter
push
mov
les
cwtl
dec
jae
into
popa
sti
test
loope
out
movb
idivb
adc
pop
or
hlt
mov
inc
insb
sbb
pop
ja
sarb
daa
imulb
cmpsl
orl
sbb
sub
jb
lahf
dec
or
ficompl
icebp
fidivrs
das
mov
cmp
scas
std
outsb
jecxz
nop
mov
iret
cmp
push
fdivr
pop
je
jnp
push
pop
leave
sbb
fildll
sbb
rolb
dec
call
pop
xchg
cmp
out
xor
stos
test
lcall
mov
test
mov
loope
mov
lods
and
add
dec
pop
dec
adc
sub
push
inc
jbe
cmp
movsb
xchg
add
sbb
loop
leave
pushl
mov
aaa
push
fwait
int3
push
sub
daa
inc
call
xchg
push
scas
scas
ret
ljmp
scas
jl
xor
mov
and
scas
sbb
lock
xlat
mov
stos
xchg
call
pop
test
pop
int3
insb
or
mov
xchg
mov
enter
adc
pop
inc
aad
lcall
push
daa
shlb
xchg
or
sahf
xor
mov
mov
inc
mov
int3
mov
std
pop
inc
fs
scas
in
mov
in
push
push
xor
jle
addr16
sbb
in
dec
bound
jecxz
cwtl
fsubr
xchg
icebp
sub
pushf
dec
nop
rorb
jp
push
jecxz
insl
xchg
scas
int3
test
push
mov
test
jnp
adc
push
push
loope
popa
and
dec
subl
xchg
pop
ss
pop
pop
lcall
mov
cltd
fs
sbb
mov
and
mov
inc
es
aam
notb
fiaddl
mov
xor
lcall
xchg
sub
xor
testl
imul
adc
aaa
cmp
fildll
insl
or
push
cmp
dec
rcl
cltd
insl
cli
xorb
mov
gs
scas
ss
es
inc
inc
lret
jg
push
shll
cmc
stc
sahf
dec
pop
adc
das
mov
addl
sbb
jl
ret
xor
fcom
adc
outsl
inc
dec
xor
je
nop
xchg
into
cmp
cmp
mov
lods
ret
jno
in
xor
popa
xor
test
cmc
xor
sbb
in
movsl
dec
ret
sti
sbb
jp
inc
inc
jne
testb
sbb
loope
sbb
mov
sbb
mov
ret
add
push
mov
mov
inc
cmp
pop
int3
sub
add
xor
mov
loope
bound
pop
ss
sub
push
jp
in
xlat
push
xor
fstl
fwait
adc
sar
dec
push
sbb
imul
imul
inc
call
jl
pop
cmp
jne
mov
jbe
insl
jo
loop
mov
pop
js
mov
xlat
vpmaskmovq
rcrl
push
sbb
js
cmp
cmpsl
dec
xchg
leave
sbb
mov
xlat
jne
call
iret
subb
out
outsl
lahf
out
and
in
mov
xchg
hlt
popf
pop
hlt
dec
es
js
mov
ljmp
inc
lret
sub
inc
ret
in
dec
sub
cmc
push
movsb
jle
add
mov
adc
mov
xchg
in
sarl
lret
ss
cwtl
lret
sub
mov
ja
adc
mov
cmp
jmp
stos
subl
dec
and
pop
lret
jp
fldcw
jne
inc
add
mov
loopne
or
or
pop
les
cmp
cmpsl
mov
lds
sbb
mov
insb
fnstenv
loop
idivb
rclb
mov
movsb
mov
adc
stos
xchg
ds
or
sub
lea
scas
arpl
push
in
imul
clc
adc
pop
and
add
dec
xchg
in
inc
int
and
xchg
addr16
mov
imul
add
jbe
adc
daa
outsb
adc
jbe
sbb
sbb
mov
dec
es
gs
adc
and
aaa
adc
xchg
ja
pop
pop
sbb
xorb
aas
pop
jp
push
inc
addr16
cltd
out
sub
lcall
pop
mov
sbb
movsb
push
out
xor
aaa
aas
test
cmp
jb
out
imul
fiaddl
out
jno
pop
xor
mov
fcmovnu
sub
sar
pop
mov
sub
jb
int3
mov
mov
shr
jb
out
rorb
mov
push
loopne
xor
xchg
jne
jae
imul
sarl
jo
mov
sbb
lock
test
repz
scas
stos
outsl
iret
and
std
aas
test
jno
ds
adc
add
jne
out
mov
push
jbe
call
mov
or
dec
cltd
int3
sub
sub
jge,pn
scas
pushf
mov
scas
mov
pop
push
scas
or
jbe
xchg
adc
or
sub
push
add
push
cmpsl
sbb
xor
lea
stos
add
mov
call
ret
add
push
inc
cmp
or
out
mov
dec
push
fwait
or
movsl
mov
sub
and
pop
in
and
xchg
push
hlt
cli
in
lods
push
jb
mov
repz
leave
arpl
mov
pusha
repnz
xor
add
ret
or
outsl
lret
clc
sub
pusha
filds
dec
enter
enter
addb
outsl
pop
xchg
xor
add
shlb
ficoms
cmc
mov
icebp
pop
jle
sbb
or
cli
push
dec
mov
in
adc
cmpsl
jmp
movsb
xlat
xor
mov
adc
shrl
and
and
xchg
pop
dec
sbb
addr16
shll
js
mov
jo
cs
mov
sti
mov
inc
sbb
and
mov
xchg
xchg
and
mov
repnz
mov
add
adc
popa
xor
sbb
fsubrp
xor
out
jl
pop
mov
test
call
inc
cli
add
out
xorl
or
jecxz
ret
rorl
jge
adc
inc
icebp
or
sarb
cs
fldt
int3
cmp
push
or
pop
mov
inc
mov
xor
inc
xor
mov
adc
out
jae
repnz
outsl
imul
loope
cmc
pop
push
lea
add
out
add
fstpl
or
incl
xchg
push
xchg
adc
gs
sahf
mov
testl
jg
sub
sbb
dec
xchg
or
std
cmp
push
fnstenv
int
sbb
jae
mov
dec
jb
ss
cmp
lock
sti
mov
decl
push
pop
nop
mov
inc
mov
inc
dec
das
cmpsl
inc
fs
cwtl
rol
jmp
cld
dec
inc
lock
push
sub
sbb
jmp
lds
xor
sub
mov
shrb
or
jae
fstpt
push
sub
inc
stc
repz
or
dec
cld
das
and
pop
roll
dec
cld
ss
sahf
ljmp
fcoms
xchg
push
cmp
push
jle
cwtl
mov
lods
pop
int
test
cmpsb
mov
push
push
popf
iret
data16
scas
ret
lock
add
fndisi(8087
mov
addb
cs
mov
loope
sub
out
push
scas
in
jmp
outsl
lods
scas
adc
xchg
mov
adc
mov
adc
insl
movsl
jl
cmp
bound
and
add
sbb
pop
mov
fwait
mov
pop
cmpsl
mov
std
jmp
arpl
shrl
cld
jnp
and
scas
fwait
out
aas
bound
cmpsl
fwait
xor
js
xor
push
xlat
adc
pop
xchg
xchg
jmp
and
out
subl
mov
insb
mov
cmp
jbe
lret
jmp
add
cmp
daa
fadds
out
ja
cmpl
testl
mov
jae
jp
inc
jno
loopne
nop
or
imulb
inc
push
add
or
orl
pushf
lea
loopne
lahf
scas
and
lods
rorl
sbb
loope
mov
add
js
mov
fwait
adc
outsl
les
add
or
mov
mov
sub
jae
sub
mov
aas
dec
cmc
lcall
sub
lods
mov
or
cmp
js
push
cwtl
test
repnz
mov
xor
jmp
aad
inc
inc
mov
lods
movsl
dec
sbb
jnp
jmp
sti
mov
mov
movsl
fisttpll
and
ljmp
cmp
inc
push
cmc
ror
add
dec
dec
add
inc
icebp
test
aad
rclb
mov
cmp
cmp
pop
fildll
cltd
jp
lock
mov
aaa
dec
jge
inc
xchg
orl
cmp
lret
xor
cmp
fisubrl
jne
and
mov
push
icebp
inc
pusha
sbb
loopne
fistpll
addl
jg
cmp
xchg
push
sub
and
or
je
pushf
sbb
cmova
sarb
add
subb
mov
scas
stos
jle
jne
mov
push
pop
add
push
call
cmpsl
in
sbb
push
cld
sub
sbb
scas
imul
adc
cmp
in
leave
sar
and
jmp
push
sbb
inc
dec
sbbb
xlat
pop
sub
or
rcrl
xchg
push
and
std
sub
sahf
icebp
cmp
mov
xor
mov
adc
add
enter
xlat
pop
xchg
mov
pop
fisttpll
call
push
sti
mov
imul
inc
lret
stos
xchg
mov
xchg
pushf
pop
lock
imul
sbb
cmpsb
rcrl
test
std
pop
jg
jecxz
sub
lods
into
inc
pop
mov
and
adc
push
cmpsl
mov
lods
movsl
xchg
movsl
daa
test
dec
sub
push
repnz
out
and
sbb
dec
sbb
dec
in
outsb
sub
add
sbb
push
cmpsl
cmp
fwait
arpl
xchg
push
or
and
cvtdq2ps
mov
test
pop
push
pop
lret
outsl
sbb
push
mov
stos
sub
sbb
cwtl
dec
mov
movq
jl
fidivl
imul
jl
pop
xchg
xchg
dec
stc
push
mov
loopne
fucom
subb
pusha
pop
rcll
pop
push
out
pop
sarl
push
xorl
fisubl
push
dec
sti
aad
or
adc
lret
scas
xchg
inc
testl
jb
loope
mov
mov
inc
pop
aas
ja
mov
xor
pop
shll
add
pop
dec
jbe
jnp
test
rorl
cmc
ds
dec
add
cmpsl
mov
add
jno
cmp
push
pusha
dec
sbb
dec
adc
fstl
dec
stos
xchg
fistps
mov
xchg
in
aam
jb
repnz
pop
inc
mov
xor
push
lods
and
push
inc
test
ret
cmp
das
sub
jle
inc
je
lds
jbe
cli
and
out
xor
stos
mov
and
dec
out
push
mov
dec
and
scas
loop
cli
xlat
xchg
sti
sbb
rorl
adc
mov
dec
std
inc
push
repz
cmpb
andnps
fs
test
iret
xchg
mov
xchg
jmp
mov
ds
xor
nop
loope
lea
jp
aam
in
and
loope
iret
adc
xor
mov
repz
dec
jns
or
and
test
inc
jns
jns
je
hlt
mov
outsl
xor
clc
outsb
inc
lahf
dec
xchg
pusha
in
rcrl
jle
cmpsl
lret
in
mov
mov
out
mov
pop
push
shlb
xor
pop
insb
pop
test
ds
pop
lods
push
cmp
push
mov
addr16
sbb
add
xchg
lret
sbb
pop
mov
mov
adc
out
das
stc
mov
ss
cmpsb
fwait
lods
nop
addr16
xor
mov
shll
wrpkru
pop
mov
pop
js
sub
iret
shll
scas
mov
and
es
pop
jg
mov
inc
outsb
aaa
and
jp
cmpb
pop
mov
daa
cmp
add
mov
lahf
rorb
dec
loope
lret
xlat
in
inc
clc
loop
mov
ret
je
movups
or
imul
bound
and
xor
dec
sub
daa
cmpsl
and
mov
sti
mov
or
push
ljmp
pop
pop
fstpl
movsb
icebp
cmc
sub
hlt
xchg
stos
mov
sbbb
inc
mov
or
adc
pop
add
or
xchg
int3
xchg
adc
or
mov
data16
lds
ljmp
adc
cmp
repz
cs
stos
mov
es
xlat
mov
cmc
or
adc
sahf
inc
test
aam
inc
mov
push
jne
xchg
cmpb
pop
xor
jmp
sub
jbe
addr16
xadd
sub
sub
and
jmp
aad
sbb
cmp
lds
dec
pushf
inc
lods
mov
mov
repz
xchg
adc
add
push
mov
testb
sti
pop
cmp
hlt
in
sbb
xor
adc
sub
lahf
jae
mov
and
push
rcrl
popa
pop
fwait
xchg
nop
mov
pop
notl
gs
or
xor
adc
enter
fwait
push
dec
and
jnp
and
jb
fisubl
add
pushf
mov
in
iret
mov
gs
iret
lock
call
jecxz
out
sbb
mov
push
xchg
sub
shlb
fisubrl
push
dec
sahf
pop
mov
rclb
xor
mov
popf
testb
mov
popa
push
mov
cmp
add
dec
nop
ret
sti
or
das
xchg
cmp
mov
cli
loopne
int
mov
add
xlat
mov
add
push
fsubs
or
jns
gs
dec
sub
stc
repnz
fistpll
add
mov
cmpsl
xchg
push
daa
inc
cmpsb
adc
popf
mov
jg
add
xor
icebp
push
movsl
into
cmp
sbb
jno
xchg
xchg
out
in
xor
push
or
or
insb
xchg
dec
jp
aas
out
adc
lods
add
fwait
inc
lods
push
xchg
xor
mov
sahf
xor
test
push
cltd
pop
ret
sub
repz
sbb
push
xor
push
test
xchg
pushf
sub
sbb
loop
and
int
dec
movsl
cli
mull
ffreep
xchg
fisubs
jp
pop
mov
hlt
mov
fistpll
test
iret
imul
nop
addr16
sbb
cltd
mov
int3
jne
je
pushf
mov
mov
push
sub
fisubrl
pop
push
dec
shlb
sub
into
daa
out
leave
imul
adc
xchg
or
xlat
daa
lods
push
bound
enter
dec
inc
xor
add
aaa
mov
pushf
gs
jb
sub
add
aad
mov
clc
push
insl
pop
dec
in
enter
in
pop
sbb
add
lds
ficoml
das
jb
jns
aaa
data16
push
push
shl
pop
xor
sbb
push
fs
sub
dec
lock
dec
sbb
cs
stc
mov
xorl
pop
arpl
xchg
mov
xor
jnp
sahf
cmp
xchg
dec
xchg
jne
adc
add
and
xor
or
xlat
add
dec
cmpsb
pop
test
les
push
in
jmp
lcall
test
and
mov
daa
fnstsw
sbb
inc
xchg
and
jecxz
cld
push
sbb
mov
push
div
out
sub
dec
arpl
std
push
mov
mov
insl
mov
and
pop
test
push
xor
mov
andb
xor
jne
or
pop
fsts
ljmp
mov
and
push
adcb
bswap
cmp
and
lret
mov
roll
sbbl
loop
loopne
inc
mov
shll
push
push
or
stc
push
xchg
push
lcall
out
inc
xchg
add
mov
dec
inc
std
mov
cmc
arpl
xor
or
xchg
xchg
loopne
push
jne
adc
inc
fldcw
adc
in
enter
cmp
addr16
add
mov
addr16
or
inc
stos
icebp
fwait
repnz
neg
aad
cmp
xor
into
dec
js
lahf
jl
and
aad
fiadds
mov
inc
push
lea
push
pop
cmp
sbb
inc
fisubrl
repnz
jge
mov
dec
xor
std
push
out
ja
adcl
int3
pushf
add
jle
shlb
cmpsb
lahf
jne
lods
cmpsl
stos
xor
jbe
cwtl
pop
inc
loop
movsb
mov
cmp
fimull
dec
and
jge
push
xlat
xor
pusha
jne
addb
push
pop
pop
mov
shll
sbb
mov
pusha
mov
xchg
push
mov
sbb
jmp
adc
popa
popf
sub
mov
in
js
xchg
les
sarl
ret
int
insl
mov
adc
lahf
fwait
lds
push
cmovl
andl
xchg
xor
mov
fisubl
inc
in
sbb
jmp
push
push
fsub
xchg
jmp
and
cwtl
lods
push
daa
jns
in
mov
call
stc
pop
mov
lret
andb
fsts
test
mov
outsb
arpl
mov
test
sub
pusha
jp
fiadds
lahf
sub
xor
out
jne
adc
cmpsl
and
mov
and
rorb
sti
push
rcll
add
xchg
clc
add
jbe
mov
jo
mov
jns
popa
and
loop
xchg
mov
mov
xlat
xor
push
xchg
ficoml
sbb
push
adcl
loopne
lahf
movsl
movsb
mov
push
inc
shlb
cmc
xor
insb
and
daa
movsl
and
inc
js
pushw
pop
pop
dec
mov
push
xor
adc
jno
push
xchg
fld
xor
and
and
mov
nop
pop
jmp
mov
nop
jl
and
test
cmp
rorl
adc
sub
ds
pop
dec
jbe
jns
jg
jno
in
scas
mov
pop
andl
insl
sbb
mov
add
cltd
stos
pop
insb
insb
mov
stos
cmp
repz
pop
or
stos
pop
lds
fcoms
in
cmp
sub
clc
in
movsb
lods
cmp
mov
test
ss
cmp
ds
pop
push
dec
test
cmc
xchg
or
mov
and
and
dec
pop
mov
jbe
xchg
daa
bound
and
repnz
dec
cmc
pop
xchg
in
mov
xchg
lock
xchg
imul
pusha
sbb
inc
inc
gs
and
int
pop
mov
hlt
imul
pop
pop
sbb
jnp
loop
loopne
push
jnp
mov
push
mov
test
pop
mov
and
dec
jbe
lcall
mov
pop
jbe,pn
popf
add
clc
jnp
iret
shl
mov
iret
xchg
pminub
adc
out
into
call
dec
push
xor
test
stos
mov
sahf
cmp
sub
pop
test
push
push
jecxz
sub
cmpsl
in
lcall
xchg
aad
mov
sbb
loopne
mov
xchg
xor
lods
lcall
ja
cmp
jnp
popf
xor
rorb
jmp
fidivl
mov
call
pop
inc
and
mov
mov
sub
std
fwait
in
push
aam
movsb
mov
popw
push
xchg
imul
loop
lock
shll
or
sbb
stc
out
and
inc
das
out
push
mov
int
cmp
sub
or
testb
add
push
pushf
adc
in
sub
dec
aam
adc
push
adc
sbb
push
mov
push
and
out
add
ss
outsl
jg
repnz
fcomp
mov
flds
sbb
orl
int3
pop
inc
mov
or
mov
adc
negb
scas
in
and
andl
push
lea
int3
jne
sub
sti
jns
pushf
fdivrl
nop
loope
adc
dec
iret
cmp
cli
mov
mov
jno
test
jge
jo
add
lret
aad
aaa
test
pop
mov
push
scas
and
insb
hlt
lods
incl
mov
cld
mov
sub
scas
mov
in
cli
cmpsl
and
and
dec
subl
dec
jnp
push
mov
ja
jns
popf
movsb
movsl
cmp
or
addr16
push
out
stos
push
shrl
adc
xchg
cwtl
sbb
jmp
cmp
push
clc
daa
outsl
jne
shll
push
sbb
cmp
sub
out
insb
andl
pop
sub
ljmp
and
or
repz
scas
loope
je
scas
adc
lea
enterw
sbb
repz
pop
pusha
inc
cmp
repnz
int
cltd
mov
inc
dec
js
mov
or
insl
and
cmp
xchg
or
imul
adc
icebp
xor
and
cmc
aas
sti
mov
mov
out
pop
shlb
and
imul
shlb
leave
fdivl
popa
repnz
jp
in
or
mov
dec
mull
xor
mov
fs
or
ret
pop
addb
push
loopne
icebp
and
cli
add
cwtl
cmp
dec
rclb
icebp
mov
push
jbe
cwtl
das
gs
js
imul
push
or
negl
lods
cltd
dec
and
xchg
mov
ljmp
sub
sub
insb
mov
stc
mov
es
mov
lea
in
loopne
popa
add
sbb
fwait
and
shrl
lret
ret
ds
mov
jnp
add
inc
and
gs
imul
sub
iret
repz
aam
lcall
mov
cmp
test
cmpsl
push
add
sub
xchg
test
repz
jmp
push
scas
sub
insl
mov
push
ffree
jno
test
scas
outsb
push
ret
push
cmpl
insl
mov
ja
pusha
test
and
daa
cmc
push
aas
pop
insl
jo
test
add
in
dec
cmp
pop
stos
pop
and
cld
mov
pop
push
pop
movsb
mov
mov
xor
sub
jns
jecxz
mov
cmp
push
sub
lret
test
mov
push
fsubrs
icebp
cmp
jnp
sub
fsubrs
movsl
shll
push
cli
sbbl
sub
test
mov
dec
repz
jmp
xchg
lahf
push
jbe
icebp
pop
push
inc
mov
cmc
mov
ret
fistps
cmpsl
adc
test
loop
xchg
add
mov
mov
adc
push
lahf
inc
int3
jmp
fld
iret
aad
jns
cmp
push
pop
push
lahf
scas
push
pop
clc
push
gs
cmpl
ret
dec
dec
or
mov
mov
sub
sbb
adc
outsl
inc
and
nop
imul
pop
std
inc
cld
xchg
push
push
lret
insl
sub
call
inc
sub
out
xor
les
fs
push
fdivl
aas
imul
sub
je
mov
aam
xchg
mov
leave
fstpl
dec
js
scas
adc
xchg
insl
lea
repnz
ss
and
add
jnp
or
lea
xor
lea
lret
into
push
test
mov
in
scas
jmp
bound
xor
sub
dec
int
push
leave
push
xor
inc
fsts
cmpsb
jne
addr16
adc
or
add
inc
pop
ljmp
data16
dec
mov
add
sub
jle
lret
les
xchg
dec
mov
sub
or
push
insl
jg
sahf
mov
or
int3
cmp
stc
add
mov
out
rolb
sbb
dec
scas
push
jnp
scas
jp
scas
xchg
fcmovbe
icebp
or
mov
pop
aam
mov
add
mov
popa
pop
icebp
sbb
cmp
sub
lods
push
nop
fs
adc
pop
xchg
mov
cmp
fildl
sahf
stos
iret
push
add
mov
dec
adc
sub
arpl
mov
inc
pop
aas
or
pop
jne
jbe
push
icebp
sub
mov
mov
negl
aas
test
adcl
mov
sub
jmp
xchg
out
enter
xor
bound
mov
lahf
es
dec
lea
xor
sbb
cmp
lock
lahf
jnp
mov
scas
mov
jbe,pn
test
cmp
or
loop
mov
or
ror
adc
mov
pop
cs
pop
add
inc
cmp
sbb
push
repz
xchg
jl
iret
aaa
in
cmp
rcrl
aas
jb
add
rorb
push
dec
jecxz
sbb
inc
sub
or
stos
aam
add
sahf
loop
inc
mov
mov
mov
iret
pop
and
mov
jg
test
jl
dec
inc
scas
add
jne
cmp
negb
xor
mov
inc
aad
adc
cld
mov
insl
jl
aam
mov
fucomp
or
mov
ret
push
outsl
shlb
push
outsb
jmp
dec
test
push
cmpsl
icebp
test
and
mov
cmc
cmp
imul
aaa
fs
je
jge
sbb
shlb
adc
es
mov
mov
cmp
cli
dec
push
sti
xchg
pusha
pushf
in
or
cs
rcr
dec
push
repz
sti
push
mov
mov
or
ror
cmp
fidivrs
push
scas
pushf
sub
sbbb
roll
xor
rolb
and
pop
test
aad
fbld
mov
das
insl
jl
and
dec
rcrb
scas
pop
daa
jns
and
sbbl
js
xchg
mov
jmp
jb
icebp
xchg
sub
fists
pusha
lahf
shll
jne
pop
jp
out
movsl
sbb
xor
jnp
cmp
push
out
pusha
push
and
lock
lcall
mov
insl
mov
mov
nop
xor
mov
jecxz
aam
repnz
movsb
xlat
xchg
sub
fmul
cmp
ss
cmp
leave
sbb
shlb
mov
dec
pusha
jae
mov
ja
mov
jo
sbb
je
movsl
xchg
call
rdpmc
mov
scas
push
fisubs
and
rclb
pop
xchg
inc
cli
lds
xor
movsb
adc
push
add
inc
andb
inc
add
dec
test
mov
lds
mov
es
sarl
addr16
push
mov
cmp
xchg
mov
aad
xchg
aam
dec
cmp
sub
aas
or
xchg
pop
testb
xrelease
in
daa
ds
incl
cmp
sbb
xchg
and
lods
sbb
mov
or
mov
out
es
and
fldl
pop
sbb
inc
adc
in
pusha
jle
rorb
in
fimull
dec
push
jno
add
sub
mov
jge
jge
push
cmp
int
adc
cld
fstpt
jo
inc
jne
lods
dec
ret
sti
in
pop
or
fwait
mov
push
mov
lods
fs
stos
movsl
mov
cmp
hlt
insl
push
mov
push
add
xchg
cs
int
cltd
mov
or
sbb
xor
pop
cli
sub
js
push
inc
sbb
mulb
lock
dec
cmp
ds
cmp
jl
adc
cmp
mov
push
inc
loope
mov
cmp
testb
stc
push
add
push
mov
out
mov
cli
clc
movsb
shlb
jecxz
inc
in
sahf
aaa
test
or
pushf
lods
sbb
lods
add
test
popf
das
repz
pusha
xchg
jmp
pusha
lock
into
movsb
pop
test
in
mov
call
imul
fsubrp
fwait
sahf
lret
add
dec
cmpsb
imul
push
test
jmp
sub
push
sbb
pop
adc
das
jo
jp
mov
ljmp
fwait
cwtl
adc
mov
xor
lods
shll
dec
outsl
into
daa
or
xor
js
jg
pop
and
aad
pusha
lcall
and
jl
push
add
loop
fadds
mov
fs
sbb
jle
add
test
cmpsb
adcb
mov
ljmp
cmc
sahf
push
add
push
sub
inc
ret
sti
decl
xlat
lret
mov
in
lcall
and
mov
imul
pop
mov
adc
mov
pop
cltd
or
iret
inc
in
ret
loopne
decb
mov
xchg
outsl
pop
pop
rcrl
push
mov
ljmp
pop
jecxz
out
xor
notb
lds
rcrl
xor
fisttpl
fimull
insl
xchg
mov
jns
fists
sahf
push
sub
mov
inc
jge
xlat
dec
enter
sahf
jge
pop
rclb
xor
test
inc
aam
rolb
pop
cmp
cmp
sub
jl
hlt
adc
lock
daa
sub
cld
scas
imul
adc
lods
outsb
mov
pop
cmp
mov
stc
dec
insl
stos
push
cmp
push
jno
adc
pop
push
lods
nop
or
cmp
add
aaa
cs
pop
sub
movsl
lds
into
mov
push
repnz
test
sub
mov
decb
fmul
jge
sbb
inc
insb
roll
in
pop
iretw
lahf
pusha
mov
push
into
popf
ret
push
push
sarb
icebp
test
sub
sbb
mov
rclb
ja
mov
xchg
lea
pop
jp
cmpsl
test
jbe
jo
movsl
sbb
fisubrl
or
cs
jmp
mov
jae
pop
fsubrs
lods
daa
sub
jle
push
das
fwait
loope
sarl
outsl
pop
mov
adc
jae
adc
cwtl
les
test
pop
xchg
jo
enter
inc
leave
out
push
andl
roll
push
xchg
mov
pusha
xor
and
or
in
pop
arpl
jbe
cmp
pusha
xchg
out
testb
testb
xchg
mov
movsl
fsubl
sti
push
lea
lahf
mov
fisubl
cmp
imul
xor
icebp
xor
mov
mov
scas
push
mov
je
shll
xchg
ss
push
dec
mov
inc
pop
pop
daa
jae
enter
fs
mov
loope
pushf
push
pop
xchg
sahf
push
mov
cmp
pop
jb
mov
lea
sbb
jmp
push
jp
push
xchg
jb
cmp
popf
xchg
cmc
insl
jbe
sbb
movsb
sub
or
mov
lods
fmuls
jb
or
sub
pop
xor
fs
lret
jnp
jecxz
test
repnz
fldcw
lods
xchg
and
xor
lret
mov
or
ja
lcall
jne
inc
stos
sub
or
ss
jecxz
push
imul
sbb
and
fadds
mov
cs
loope
mov
ds
sub
popf
lcall
pop
inc
jmp
fnstcw
fdivl
xchg
and
inc
sbb
iret
addr16
add
call
sahf
inc
adc
jns
or
pop
popf
int
dec
push
or
test
pop
in
shll
xor
pop
dec
jae
jl
imul
mov
xchg
inc
cmp
dec
daa
call
ja
les
xchg
cmp
cli
cwtl
sub
jmp
mov
add
dec
or
aas
fistpll
sbb
and
pop
cli
mov
and
enter
cli
push
sbb
aas
mov
jo
dec
aas
xor
outsb
mov
pusha
int3
rclb
out
shlb
insl
scas
mov
jo
lods
inc
xor
inc
iret
dec
scas
fcomps
mov
inc
fimull
xor
ja
fsub
mov
inc
aad
jo
mov
shr
fs
jge
popa
mov
fistpl
lea
and
push
loope
add
data16
pop
inc
jae
push
inc
jae
daa
repz
ss
mov
xchg
jecxz
dec
push
dec
xchg
in
mov
shrd
ds
cmp
dec
cltd
pop
loop
cmpb
rolb
out
xchg
cmp
loopne
push
cwtl
mov
fxch
cltd
cmpsl
jo
pop
sahf
aam
jecxz
lcall
aas
mov
lods
data16
pop
clc
enter
dec
xchg
popf
out
insb
rclb
jecxz
and
fldt
out
dec
daa
push
stos
mov
jl
int
lret
xor
xor
scas
shlb
pop
dec
xlat
xor
test
lods
xor
ds
jb
lahf
scas
subl
lock
xchg
jle
popf
aam
mov
insb
popa
or
inc
fisubrl
ljmp
cmp
cmpsl
fcoms
xchg
sub
lods
shrl
bound
mov
ljmp
and
push
mov
xor
clc
stos
test
popa
add
mov
pop
cld
mov
hlt
aas
dec
lahf
jmp
pop
add
subl
lahf
pop
and
repz
push
in
add
mov
rclb
dec
xchg
push
fwait
cltd
add
roll
dec
xchg
mov
inc
cmp
and
xchg
lret
inc
lds
addl
gs
out
ret
inc
lea
mov
aam
sub
jl
pop
lods
and
cmp
sbb
jle
out
ss
enter
mov
addr16
dec
mov
scas
loope
adc
sub
filds
inc
lock
lds
in
adc
test
out
inc
outsl
fistl
inc
add
shll
mov
dec
loop
mov
hlt
mov
mov
sub
cmp
ja
or
and
mov
subb
sarl
shll
arpl
imul
mov
cwtl
shll
push
addr16
sti
popf
bound
mov
pop
mov
sub
enter
sti
pop
xor
jl
inc
adc
dec
divb
das
leave
das
jo
jle
or
or
pusha
lds
push
xor
int
sbb
arpl
xchg
push
jo
test
lds
iret
int3
push
arpl
and
sub
inc
and
jmp
inc
sub
add
iret
ja
xor
int
mov
cmpsl
adc
mov
rorl
je
mov
jle
scas
push
cwtl
lcall
cmp
push
inc
mov
lahf
in
notl
in
insl
xchg
push
and
js
pop
sarl
scas
test
sub
or
imul
mov
mov
lds
movsb
in
mul
jge
dec
popa
push
in
and
dec
jge
push
adc
dec
xorb
scas
sarl
fisttpll
outsl
loopne
xor
add
push
sub
and
cli
daa
and
mov
stc
push
es
subl
pop
nop
sbb
xor
ficompl
rcrl
in
mov
loopne
dec
out
xchg
cs
loopne
je
add
lahf
adc
xor
hlt
xchg
jge
cmp
push
pop
in
outsb
pop
dec
loopne
iret
arpl
outsb
fwait
adc
mov
cli
popf
lcall
add
sub
fistl
mov
stc
into
nop
adc
insl
xchg
mov
mov
mov
daa
call
jge
or
imul
lods
cmpsl
and
xchg
out
cwtl
outsb
cltd
xchg
out
xor
inc
ljmp
push
xchg
sbb
sub
or
sti
jmp
push
leave
ret
repnz
lcall
cmp
mov
or
mov
pop
lret
add
pop
adc
mov
sti
push
js
loopne
jno
jbe
dec
mov
sahf
xchg
jnp
jle
in
sub
loope
inc
ljmp
out
aam
ror
sbb
cld
rcrb
adc
lock
test
add
pop
out
or
leave
int
jmp
notl
dec
xchg
xor
jae
inc
push
push
mov
sbb
inc
jl
or
mov
push
aad
std
sbb
xchg
dec
leave
lcall
pop
hlt
in
enter
pop
aam
push
sti
push
cltd
ds
leave
loope
enter
cwtl
cmp
hlt
or
dec
daa
inc
or
test
jle
cwtl
jge
jbe
shll
mov
pop
adc
mov
repz
or
xchg
lsl
rcrb
inc
lods
push
iret
inc
sbbb
pop
cmp
and
and
push
aam
pop
popl
xchg
inc
jg
cmp
ffree
jne
adc
addl
fmuls
popf
fcos
inc
inc
ret
movsb
jnp
jbe
into
scas
jnp
xor
pop
sarl
cmp
divb
mov
test
lret
jo
out
daa
dec
in
rclb
sub
mov
jle
stc
pop
cwtl
and
mov
cmp
scas
mov
dec
jmp
push
mov
mov
jb
sarl
mov
jno
adc
mov
push
clc
inc
adc
jb
cmp
lods
insb
dec
sahf
mov
loop
sbb
push
std
leave
mov
in
xor
push
dec
or
cmp
adc
in
cmp
sub
cmp
outsb
mov
loop
and
bound
mov
xor
unpckhps
or
enter
sahf
adc
add
adcl
inc
adc
ja
sbb
int
and
sti
jne
sub
mov
mov
mov
mov
inc
jle
movsb
leave
inc
dec
mov
outsb
jmp
dec
aas
sub
dec
sbb
addr16
test
cmpsb
add
or
sarb
pop
mov
cmp
nop
jle
in
in
add
mov
dec
adc
pushl
pop
and
test
jbe
pop
dec
sbb
jp
je
mov
xor
jmp
popf
xor
dec
sub
mov
lock
popa
cmp
push
in
cmp
push
or
xchg
cmp
jb
jne
and
jecxz
mov
test
test
and
lret
inc
fsubr
in
xchg
clc
pusha
faddp
add
aaa
ss
mov
and
pop
in
int
pop
mov
mov
inc
dec
stc
mov
add
movb
fldz
cli
cli
shrb
cwtl
in
and
roll
pusha
xchg
pop
outsl
adc
inc
nop
push
fnstenv
inc
pop
lret
cld
mov
sbb
cmpxchg
aas
aas
add
add
jl
fdiv
jg
adc
inc
fwait
testb
push
jge
push
inc
jns
out
jmp
fxtract
jae
pop
sahf
stos
mov
dec
cmp
cltd
orb
mov
repnz
xchg
xchg
pop
ret
add
jg
adc
addb
mov
ret
jns
and
add
scas
xchg
xor
imul
scas
loop
or
jne
and
addr16
add
mov
or
sub
inc
popa
iret
inc
inc
push
jl
add
ret
rclb
jl
cltd
inc
insb
lds
mov
stos
jg
negl
insb
cmp
pop
xchg
xor
faddl
sub
fistpll
and
xchg
sahf
sbb
dec
roll
pop
aas
mov
dec
mov
jb
and
rcrb
es
push
imul
data16
lcall
push
pop
jbe
dec
mov
sti
mov
sub
leave
inc
sbb
sbb
lods
cmp
add
inc
mov
push
es
xlat
inc
jae
or
inc
mov
mov
mov
dec
stos
hlt
ltr
aad
andb
inc
fmull
pusha
xchg
or
lods
sub
faddp
dec
jg
fadd
rep
ret
or
stos
push
adc
imul
and
mov
cmpsl
loopne
and
sbb
xchg
bound
mov
sbb
mov
jo
push
pop
mov
xor
pop
or
stc
outsb
inc
dec
sahf
les
roll
xchg
pop
icebp
jmp
mov
add
cld
pop
or
pop
mov
inc
data16
adc
mov
dec
add
push
ds
xlat
nop
xor
loopne
ret
lea
scas
lods
hlt
ja
popf
insb
sbb
and
push
xchg
pop
test
adcb
test
orb
xlat
sub
xor
imul
aad
sbb
add
rclb
int3
into
pushf
aad
adc
cmp
out
mov
jecxz
cltd
pusha
sahf
fs
rorl
mov
stc
daa
dec
xchg
lahf
push
test
sbb
jg
outsb
mov
leave
lea
sub
jmp
pop
fnstsw
fwait
sbb
jne
sub
arpl
ret
mov
aas
ds
push
addr16
sub
shrl
push
lret
orb
push
cmp
lds
push
sub
push
jbe
jle
lahf
pop
jg
dec
adc
or
ds
sbb
rcrl
out
shlb
addr16
cmc
push
cmp
fisttpll
sub
insb
mov
add
jge
mov
out
and
add
xchg
aad
stc
add
push
push
mov
inc
dec
arpl
inc
test
push
mov
in
imul
xor
orb
cmp
jge
dec
insl
mov
movsl
push
lret
dec
adc
insb
and
mov
push
dec
adc
add
rcr
dec
jne
sbb
adcl
adc
sub
mov
push
mov
mov
mov
xchg
pop
lea
sti
cmp
insb
int3
cmp
xor
mov
jnp
mov
mov
mov
orl
or
jecxz
cmp
fimuls
iretw
dec
cmpsb
xlat
jae
hlt
push
push
xchg
dec
or
fldl
dec
loopne
or
lods
and
mov
cmp
pop
adc
mov
pop
insb
pop
add
or
mov
stc
mov
jp
das
xchg
hlt
cmp
pop
pop
add
and
push
inc
dec
mov
scas
testl
pop
leave
lock
int3
and
js
js
lea
add
xchg
out
sti
sbb
es
fnsave
scas
mov
pop
push
aam
adc
inc
jle
lock
lods
push
ja
pop
aam
dec
icebp
cs
lret
mov
jno
inc
out
xchg
mov
pop
inc
jae
xchg
pop
sahf
cmp
popf
mov
cmp
mov
jo,pt
mov
push
popf
mov
mov
sub
pop
adc
and
aam
xchg
dec
es
mov
shl
push
stos
jbe
ljmp
cwtl
dec
pop
lock
mov
mov
mov
orb
lods
dec
sbb
pop
jae
dec
fistpll
jge
aad
popf
lods
insb
out
push
adc
push
fnclex
mov
jns
pop
or
add
xchg
push
divb
rcrl
sub
pop
mov
into
jnp
jae
popa
pop
push
dec
fisubrs
sbb
sahf
shlb
mov
mov
popa
jbe
ret
cwtl
leave
aam
les
lods
jne
push
rolb
mov
mov
xor
mov
iret
fisubl
and
add
loop
jg
add
mov
lods
pop
xchg
push
sub
and
xchg
aad
subb
flds
gs
mov
orb
stc
sbb
xor
push
push
fucom
pop
xchg
jae
xor
movsl
push
jo
lods
adc
imul
jge
shlb
push
lds
js
cmpsb
rcll
std
mov
movl
fildll
test
loop
repz
jmp
pop
mov
aad
and
sbb
pop
jge
das
or
adc
adc
sbb
dec
out
test
adc
dec
adc
outsl
subb
sti
imul
pop
or
push
movsb
sbb
enter
xchg
pop
daa
mov
stos
lcall
mov
loop
xlat
imulb
push
jb
jbe
push
xchg
popa
stos
iret
sub
or
mov
stos
ds
dec
fstpl
shlb
movsl
and
mov
adc
repz
roll
add
popa
sub
jecxz
lods
mov
sub
inc
pop
lds
ret
clc
push
sub
mov
scas
movsl
sbb
cmc
or
pop
and
sub
pushf
sub
jae
mov
cmp
mov
mov
repz
mov
xchg
aad
mov
lods
inc
scas
pushf
adc
pop
push
out
push
cmp
je
pop
sbb
push
and
subl
pop
shlb
je
cmc
jno
mov
lea
cmp
and
dec
lret
aam
pop
out
jmp
test
and
add
pop
xchg
sbb
std
movsl
daa
sub
popa
or
rol
scas
push
jecxz
pushf
dec
jo
sbb
stc
sbb
mov
test
aad
sub
ret
sub
push
xor
or
stc
cmp
add
inc
mov
jl
sub
ja
jno
popf
sub
push
cmp
pop
or
shrl
add
or
jp
push
cmp
inc
pushf
sahf
mov
xlat
movsb
ja
jecxz
movsl
ss
cmpsl
sti
mov
push
popl
jbe
movsb
std
loop
fcmovnbe
add
add
mov
mov
pop
lock
mov
mov
gs
sbb
pop
xchg
in
jp
and
sbb
sub
enter
dec
add
pop
sub
js
inc
add
dec
sub
stc
sub
movsb
pop
lea
xlat
sub
dec
pop
imul
push
test
fldcw
add
test
mov
sbb
push
jg
mov
mov
pop
jp
aaa
mov
xchg
pop
dec
mov
push
jae
sub
push
cmp
cmpsb
or
push
push
aam
xor
fidivl
adc
insl
popf
data16
cmpsl
mov
mov
fadd
jno
adc
cld
cmp
packssdw
cmpsl
push
sbb
les
imul
loope
mov
xchg
scas
cmpsl
or
std
and
pop
or
stos
shlb
mov
xchg
dec
test
or
jmp
repnz
jmp
add
dec
sub
push
push
imul
xchg
add
cmp
call
aad
and
lds
andl
cmpsb
xchg
xlat
cmp
push
adc
mov
cmpsl
inc
add
pop
mov
lea
or
dec
pop
mov
lahf
mov
and
enter
sbb
out
ds
sub
repz
fwait
popf
adc
ja
fwait
inc
pushl
sub
mov
mov
mov
rcll
jp
mov
xchg
mov
test
mov
jne
loopne
mov
int3
adc
test
out
pop
in
test
popf
adc
stc
movsl
mov
push
and
in
push
dec
sub
mov
int
enter
lcall
xchg
test
out
arpl
xor
mov
inc
repnz
ret
sub
push
test
jmp
int
xorb
mov
imul
jge
repz
iret
stos
lret
dec
xchg
adc
and
mov
test
sub
in
sub
pop
adc
mov
int
mov
adc
les
lock
add
daa
dec
in
scas
into
xchg
push
into
mov
insl
push
fisubs
loope
rorb
xor
mov
dec
test
xchg
add
ja
dec
dec
jecxz
jg
rol
jbe
outsl
fwait
aad
mov
cs
mov
ret
hlt
out
std
adc
jmp
inc
adc
cmp
scas
jne
nop
mov
inc
dec
sbb
jnp
in
mov
sub
testb
out
imulb
mov
jne
mov
daa
arpl
jne
sbb
sbb
push
pop
int
les
mov
or
icebp
lods
incb
arpl
jns
movsl
and
sub
inc
jo
in
testb
pop
loopne,pt
pop
pop
mov
out
sbb
mov
lahf
push
inc
stos
loope
jo
inc
inc
xor
and
lcall
imul
xchg
inc
cli
stos
push
and
stos
lahf
xor
insl
xchg
jae
jbe
add
and
push
lods
fbld
popa
pop
jp
xor
aaa
nop
ja
pop
xchg
mov
int3
cs
cwtl
sub
xor
aas
xchg
xor
test
aas
data16
gs
push
adc
movsl
dec
mov
ds
ret
cmc
dec
arpl
sub
jle
shll
rcrb
xor
imul
ret
data16
hlt
push
rcll
mov
nop
popa
in
leave
sbb
out
adc
pop
in
mov
shll
cli
sbb
inc
pop
xchg
cli
cmpsl
dec
jg
cs
mov
stos
jnp
mov
mov
lea
out
and
pop
xchg
arpl
cld
ljmp
and
mov
inc
subl
divl
ret
mov
aad
jg
fldl
inc
mov
ficomps
dec
pop
push
pusha
mov
sti
mov
xor
mov
fildll
dec
add
movsb
iret
cs
ficomps
ss
mov
lret
mov
filds
lods
aaa
movsb
pushf
lods
sbb
lock
lret
mov
jne
pop
xchg
mov
push
or
xchg
in
mov
adc
in
jg
xchg
push
adc
cmpsl
inc
std
mov
jnp
dec
inc
fisttpl
push
push
test
xor
scas
jns
int3
rcr
in
push
enter
int
xor
fcmove
test
lods
subb
push
inc
push
cmp
xor
insl
lahf
push
ret
xor
cmp
xor
adc
pop
out
stos
xor
pop
aaa
sub
sahf
shlb
rcl
xchg
orl
jno
inc
and
pop
pushf
pop
xchg
and
mov
fwait
lds
inc
sub
in
stos
mov
jb
stos
jns
outsb
jmp
or
jno
pop
out
sbb
push
xor
dec
xchg
cwtl
aas
enter
mov
call
adc
cs
dec
loope
lea
xchg
push
loop
imul
rcll
sahf
cs
in
neg
sub
dec
dec
aaa
add
ds
adc
add
fwait
pop
fldenv
cltd
clc
movsb
imul
adc
filds
loopne
hlt
mov
xchg
ja
xor
jnp
lds
imul
cmp
dec
lcall
in
or
pop
jge
fstpt
adc
dec
addr16
push
cmpsb
insb
lret
int
dec
rclb
mov
stc
mov
fisubl
add
push
sbb
jmp
or
sub
sub
sub
inc
jns
cmp
inc
arpl
mov
xor
bound
xor
sbb
cld
repnz
push
push
pushf
sbb
pop
mov
jg
cmp
cld
add
iret
ret
sbb
mov
lds
jbe
push
jecxz
test
popa
aam
subb
lret
xor
xlat
fnsave
jae
sbb
addb
jns
aaa
es
stos
test
mov
pushf
or
mov
sbb
jo
jge
cs
ror
sbb
daa
cmp
sub
popa
push
mov
ss
mov
inc
mov
pop
and
adc
push
cmp
inc
dec
mov
sahf
add
jge
jge
in
pop
imul
push
mov
xor
ljmp
xor
lock
rcl
push
pop
sti
sti
sub
xor
jo
lds
lock
outsb
and
push
leave
sub
adc
lcall
movb
sub
in
sbbl
push
ret
std
sub
cmc
lods
or
or
vmread
push
stos
lahf
jmp
mov
cmc
cs
repnz
xor
xor
xor
mov
pusha
test
jnp
in
lea
insb
xchg
cmp
pop
xchg
jle
push
movsl
sbb
pop
pop
mov
rolb
push
call
addb
mov
xlat
adc
scas
inc
dec
lock
add
adc
mov
adc
push
pop
push
loop
xchg
bound
inc
mov
arpl
jns
out
scas
xchg
fdiv
push
and
add
push
push
mov
movsl
xlat
push
inc
hlt
loop
lcall
jbe
rol
repnz
mov
test
out
jmp
mov
xchg
pushf
pop
jle
mov
pop
lret
pop
test
pop
pop
dec
mov
sbb
xchg
pop
subb
shl
pop
cmp
cltd
jnp
sbb
aas
daa
add
push
mov
xlat
pop
adc
and
inc
or
aaa
xchg
mov
lea
mov
call
or
icebp
sub
mov
sarb
adc
aaa
sbb
sti
adc
fbstp
xor
mov
xor
sub
dec
dec
push
mov
movsl
inc
xchg
mov
mov
sbb
cmpsl
pop
dec
and
mov
cmp
leave
mov
mov
mov
inc
lock
xor
test
push
in
mov
cmpsl
ret
push
icebp
cmp
inc
ret
daa
ja
cmp
or
les
popa
clc
inc
lcall
imul
leave
stos
shlb
adc
pusha
nop
aam
and
pop
or
xchg
bound
mov
push
aaa
fstl
push
stos
and
and
scas
jl
add
addr16
mov
or
ljmp
aam
pop
loopne
xor
lret
mov
sti
or
sub
fmulp
loopne
popa
xor
xchg
inc
xor
arpl
cli
inc
mov
outsb
push
popf
adc
ret
pop
mov
subl
mov
scas
loopne
dec
add
popf
adc
jns
lods
add
inc
daa
xor
xor
ret
mov
jne
lahf
adc
mov
scas
insl
sub
inc
roll
add
in
sub
pop
push
nop
mov
ficoms
adc
mov
push
das
xchg
roll
cli
cmpsb
mov
add
arpl
test
aad
das
loope
pop
loopne
adc
xchg
cmp
mov
lea
dec
cmp
xor
add
and
es
popf
dec
adc
xchg
cmp
or
mov
inc
sub
ljmp
das
push
and
xchg
lds
nop
scas
bound
and
mov
out
mov
jmp
rol
loope
ret
jge
inc
cli
sub
stos
push
mov
cwtl
or
jne
outsb
jbe
or
rcrl
cmp
sub
mov
ficomps
and
mov
addr16
fs
xlat
sbb
cmp
stos
xchg
js
mov
jp
imul
or
lods
pop
add
jno
inc
adc
stc
xchg
pop
test
cltd
inc
push
dec
xchg
jno
sub
and
pop
loop
fstps
pop
inc
pop
icebp
sub
popf
in
aad
aam
popa
mov
dec
aaa
std
mov
cmpsl
negl
sbb
pop
out
push
testb
scas
ret
loopne
sbb
add
lods
xor
xorb
es
and
addr16
pushf
sub
and
adc
xor
jb
sub
and
loopne
test
jmp
les
fs
mov
xchg
adc
jbe
out
in
aam
xor
fcmovnbe
xchg
leave
int
cltd
sub
xor
mov
dec
xor
fdivrs
into
jns
cmp
xchg
fisubrs
mov
inc
mov
loopne
adc
sarb
das
adc
jmp
mov
imul
mov
add
shrb
out
pop
inc
aaa
jp
pop
dec
cltd
aam
cs
xchg
ds
popf
testl
aam
adc
outsl
mov
imul
adc
inc
push
sub
mov
or
push
push
or
xchg
scas
push
push
inc
dec
adc
jnp
jbe,pn
mov
sbb
push
inc
mov
pop
pop
sbb
imul
std
enter
sbb
aaa
mov
and
dec
jb
mov
fdivs
lea
loopne
jecxz
add
mov
in
dec
loop
subb
sub
stos
jmp
add
and
ret
cs
ja
lea
push
aad
loopne
and
sar
xor
mov
push
cmp
sbb
jo
sub
xor
pop
cs
push
adc
nop
jnp
lret
mov
stos
inc
sub
aaa
sub
mov
mov
cmp
sub
out
push
enter
push
mov
mov
in
lods
or
inc
dec
or
nop
rorl
and
sbbl
sti
loopne
xchg
aam
lahf
jnp
orb
imul
pop
lcall
mov
lock
icebp
popf
xor
and
hlt
adc
aas
mov
mov
das
mov
sub
popf
mov
inc
xlat
sbb
sub
jnp
les
fidivrl
ret
dec
inc
lcall
push
pushl
leave
and
loop
movsb
jge
adc
aad
cltd
cmp
mov
pop
fadd
in
jmp
js
gs
rclb
xchg
rorb
imul
cli
mov
call
jecxz
push
cmp
adc
lret
fcompl
ja
dec
jmp
cltd
jnp
fdivrs
pop
push
fs
pushf
pop
leave
mov
mov
push
mov
jae
sub
push
scas
movsl
fidivrl
into
in
in
sub
inc
xor
ret
cmp
mov
push
xchg
dec
mov
inc
andb
push
jg
pop
dec
movsl
dec
jmp
popa
jle
fisubrl
dec
ret
mov
jmp
and
push
aaa
mov
dec
daa
cwtl
mov
lahf
mov
jg
repnz
push
jle
orb
cli
xor
fmulp
out
and
scas
adc
xor
iret
sbb
mov
insb
xor
sub
insb
arpl
push
pop
xor
lahf
dec
and
cs
bound
fwait
inc
or
sub
mov
sbb
fisttps
scas
pop
xchg
loop
pusha
mov
clc
loope
xor
lret
arpl
and
test
insb
sub
cltd
jl
lds
leave
inc
add
imul
dec
sahf
sbb
xlat
imul
cmp
sbb
push
hlt
mov
ja
mov
and
and
out
adc
out
stos
js
jle
xacquire
jns
outsl
popa
pop
inc
fwait
mov
loopne
mov
scas
xor
cmc
into
insl
pop
inc
xchg
pop
inc
imul
adc
adc
lods
sti
add
mov
in
xchg
inc
jl
cmpl
or
mov
inc
cmc
inc
js
dec
out
pop
xchg
jl
dec
pop
mov
jo
ljmp
scas
dec
pop
lahf
cmp
xchg
popf
sbb
xchg
lret
xor
gs
cmp
scas
test
dec
cmp
pop
ret
ds
xchg
bound
adc
rcrb
mov
andb
pop
gs
and
flds
hlt
in
sub
or
and
iret
push
xchg
sub
dec
scas
nop
imul
test
push
pop
cmp
loopne
fcomp
dec
in
lret
cmpsl
scas
je
or
pop
inc
jbe
test
and
loopne
fnstenv
adc
enter
mov
fnstenv
inc
in
sub
std
or
lahf
dec
pushf
frstor
cmc
int
jmp
jb,pn
cmp
push
dec
sbb
cs
inc
loopne
mov
lods
scas
xor
mov
out
fdivs
lods
test
ds
aam
in
mov
mov
arpl
add
adc
hlt
inc
push
jno
cmp
aad
xchg
fsubs
std
xchg
jmp
push
cmpsl
xor
mov
push
repz
cli
outsb
addr16
jnp
cmp
add
push
jl
sub
test
xor
add
dec
addb
repnz
rcll
cmp
mov
cmpsl
adc
bound
inc
sti
mov
sbb
and
sub
ret
xabort
stc
inc
rcrb
and
and
ss
sub
rol
js
add
cmp
mov
push
add
dec
mov
jle
mov
cmp
test
adc
pop
movb
dec
and
jno
or
add
mov
mov
and
bound
or
int3
sti
gs
and
inc
fmuls
shrb
mov
bound
cld
hlt
push
dec
pop
xorl
pop
pop
mov
gs
dec
rcll
adc
cmpsb
pop
shrb
jnp
inc
xorb
mov
aas
inc
fwait
xchg
loop
pop
sub
out
ja
out
out
cmp
std
pop
inc
idivl
xchg
rolb
cwtl
cmp
mov
arpl
inc
mov
mov
mov
adc
mov
or
cmp
and
add
fisubl
dec
pop
mov
cld
xor
ret
mov
imul
in
negl
push
mov
popa
jmp
shll
rclb
lea
xchg
jne
xchg
jg
cmc
jg
stos
test
daa
xor
jo
mov
push
cmp
rolb
add
dec
mov
js
test
sub
test
clc
js
orl
inc
leave
jno
or
push
mov
shll
shr
mov
cmc
rcll
xchg
cmp
inc
push
mov
inc
dec
adc
add
pop
mov
stc
jecxz
dec
mov
dec
dec
xchg
push
xor
imul
ret
jns
dec
add
into
cmc
cltd
std
dec
out
xor
cmp
sbb
pop
test
or
cld
push
mov
out
add
xor
ret
lds
mov
push
data16
cwtl
idivb
or
inc
push
push
adc
mov
cmp
dec
addl
xor
insb
fs
push
int
sbb
inc
mov
nop
negb
in
push
dec
out
cmovp
pop
adc
or
and
pop
es
int
pop
xor
fildl
sub
outsl
jns
insb
jns
mov
sarl
mov
jae
rorl
xchg
add
inc
je
mov
push
repz
adc
ljmp
adc
pop
mov
rcll
addr16
sub
insb
sahf
dec
jle
sub
mov
scas
inc
inc
dec
shrl
xor
push
mov
adc
mov
stos
int3
movsb
or
sub
maxps
sar
sub
add
cmp
adc
mov
pop
push
dec
outsl
stos
mov
pop
pop
leave
adc
imul
je
js
jbe
add
ja
inc
mov
add
xor
sub
xorl
dec
cltd
in
lcall
push
dec
cmp
in
insl
or
scas
push
inc
outsl
lret
ret
mov
or
mov
fiadds
xlat
cltd
add
and
test
andb
pop
cmpl
cli
jns
imul
adc
cwtl
out
sub
das
repnz
xor
std
add
insb
test
cmp
loope
jg
lock
sub
outsl
dec
daa
lret
aam
testb
push
mov
jmp
addl
sub
xor
sub
imul
int
sub
andps
sbbb
aaa
mov
push
sbbl
jno
movsl
cmp
sbb
push
cmp
lock
xchg
je
xchg
addr16
mov
insb
mov
loop
xchg
sub
rcll
sub
enter
dec
rcll
testb
popf
push
ljmp
sbb
sub
push
jnp
loope
mov
dec
push
xchg
cmp
xlat
sub
dec
mov
sub
push
fisttps
cmp
idiv
inc
sbb
and
movsl
not
popf
iret
lret
mov
mov
add
xchg
imul
popa
imul
popf
cmp
fisubs
inc
adc
in
xor
lret
or
dec
or
push
pop
movsb
jnp
cs
iret
mov
call
out
fadd
mov
sbb
aas
mov
or
xchg
inc
fucomi
pop
pop
in
jp
fisubrs
mov
and
cltd
adc
mov
mov
adc
dec
mov
shlb
sub
outsl
je
movsb
and
mov
push
and
fmulp
out
mov
js
sub
jo
pop
jle
mov
push
jbe
out
sbb
ret
push
sub
adc
xor
inc
int3
jmp
clc
mov
push
mov
push
mov
mov
insl
add
es
ja
xor
cmpsl
and
pop
in
sbb
fcomps
shll
inc
cmpb
xchg
xor
mov
rolb
lods
addr16
mov
xchg
lods
pop
mov
jl
adc
sub
jle
or
ja
and
or
xchg
inc
mov
stos
mov
cmp
inc
imul
sqrtps
or
out
int3
xchg
inc
mov
and
dec
dec
inc
cltd
push
mov
mov
test
loopne
or
dec
aad
mov
leave
je
inc
es
and
mov
xchg
loop
iret
xchg
xchg
push
jp
mov
in
mov
int
cmp
movsl
int
cmp
mov
and
sti
or
fnsave
jecxz
mov
lock
and
jo
subps
cld
icebp
hlt
cmp
adc
xchg
jecxz
inc
add
xchg
pop
lds
jnp
and
inc
shrb
lods
mov
mov
sbb
sbb
lcall
aad
outsb
mov
fwait
negl
push
xchg
jnp
inc
mov
or
xor
sub
lret
adc
xchg
jns
call
pop
mov
adc
aaa
aam
mov
pop
mov
stc
fdivp
dec
out
lcall
jge
mov
lret
imul
shl
sti
enter
cmp
btr
push
popa
push
jo
sbb
adc
and
loope
mov
pop
jge
and
orb
lods
or
jo
pusha
xchg
and
cli
fidivs
imul
pop
adc
cmove
inc
dec
push
aam
lock
inc
jno
mov
rol
sub
shl
mov
push
leave
repz
jae
movsb
popf
mov
and
mov
xchg
xchg
dec
cmpsl
xchg
cmp
cmp
push
shlb
pop
mov
jne
cmpsl
fildll
dec
jnp
xor
fmul
sub
push
pop
jbe
out
xchg
or
out
mov
movsb
leave
lods
scas
ret
pop
gs
and
xor
xchg
mov
mov
mov
xor
dec
cwtl
mov
fmull
js
enter
fsubs
inc
push
push
cltd
aam
xchg
cwtl
sub
push
mov
adc
add
cmc
in
jmp
jmp
xchg
xchg
dec
mov
sbb
nop
pushf
aaa
inc
jne
pop
or
push
and
outsl
loop
popa
fwait
cmp
push
pushfw
mov
movsl
les
jb
pop
movsl
xchg
and
fs
push
xor
adc
pushf
adc
rcll
shlb
int3
sahf
lock
insl
push
add
sub
pop
xor
xchg
mov
rol
fistl
adc
mov
xor
inc
jnp
sbb
sbb
daa
push
sbb
outsb
ljmp
or
jbe
xor
into
jnp
andl
je
bts
jge
mov
jecxz
xchg
repz
and
loopne
and
lret
ds
ret
ja
movsl
pop
inc
call
fnstenv
leave
out
or
mov
cmpsl
push
fcmovu
mov
out
pushf
cltd
lcall
lea
sbb
pop
mov
xor
test
mov
shll
ret
sbb
loopne
outsb
lods
and
inc
jb
loope
cs
xchg
sub
push
subb
mov
in
loope
add
dec
cli
push
or
sub
jge
lods
jge
xchg
adc
mov
dec
imul
mov
lods
xor
cwtl
sub
mov
xchg
sbbl
adc
imul
test
xchg
mov
jl
pop
cltd
js
jne
push
mov
fimull
sarl
mov
test
sbb
xchg
call
add
sub
or
hlt
pop
fists
mov
outsl
xor
pop
lret
dec
fiadds
xchg
adc
mov
and
cmpsl
sub
iret
aam
dec
fdivrl
pop
mov
in
add
dec
cltd
push
cmp
sbb
xchg
fcmovb
mov
cwtl
pop
pop
leave
in
mov
dec
std
dec
xor
repz
push
fnstcw
or
std
in
mov
push
xor
jns
pop
imull
mov
and
xchg
cmp
sbb
leave
fmuls
and
sbb
and
test
push
xorb
aad
push
lods
pop
imul
rclb
cli
cltd
repnz
or
loope
stc
add
verr
sbb
stos
xabort
and
out
mov
sub
mov
icebp
sar
aaa
dec
adc
dec
ret
jl
mov
or
mov
jns
jle
sahf
cmpsb
neg
cmp
test
stc
idivb
sbb
shr
adc
xchg
pop
adc
fyl2x
cmp
mov
inc
mov
sub
mov
jl
add
xchg
jne
out
outsb
xor
fisttps
aaa
adc
pop
pusha
sti
rcll
in
pop
jecxz
subb
sbb
cmp
jecxz
jnp
cmp
and
adc
mov
pop
ret
aas
out
push
hlt
inc
pop
pop
mov
negl
sahf
jecxz
inc
nopl
cli
outsb
and
les
xchg
lea
bound
addr16
and
xchg
outsb
enter
mov
xor
sbb
mov
mov
fdivr
in
add
loope
dec
sbb
mov
and
push
add
aam
xchg
in
cmp
mov
xor
loopne
lods
add
in
loop
and
decl
xor
lea
and
or
lock
cmpl
mov
test
pop
jne
mov
pop
and
sub
jle
mov
imul
out
fistpl
mov
adc
pop
push
addl
jmp
cmp
push
and
aad
call
insb
push
sub
inc
int
nop
cwtl
add
xchg
enter
pop
mov
mov
test
popf
cltd
shl
push
sbb
rcl
enter
shl
sarb
es
fcompl
mov
ret
cld
xchg
xchg
xor
mov
xchg
jp
pop
fdivp
lcall
test
xchg
inc
push
mov
mov
nop
shlb
outsb
lock
sti
xor
les
loopne
imul
sub
add
mov
stos
outsl
and
pop
sub
and
inc
add
jno
xchg
or
mov
mov
adc
pop
xorb
pop
jge
leave
in
popa
mov
pop
jns
push
std
mov
setne
inc
ljmp
shlb
push
dec
cmpsl
aad
daa
mov
mov
in
jl
popa
mov
mov
addb
ret
mov
rep
fs
js
dec
popa
and
hlt
sahf
call
add
sahf
rolb
cltd
popa
jp
mov
mov
loope
inc
xor
push
mov
and
in
inc
lods
cmp
leave
mov
fcmovbe
mov
push
movsb
push
sub
pop
in
ja
clc
pusha
rcll
mov
not
ljmp
mov
adc
shll
movsl
jnp
mov
aam
pop
pop
out
and
cmp
mov
loopne
inc
pop
push
fdivrp
test
xchg
xor
jle
or
ret
inc
mov
or
mov
fs
test
jns
decl
add
movsl
sbb
xchg
call
push
in
cld
in
mov
fldenv
in
dec
stos
into
push
pop
push
mov
lcall
cmpl
pop
rcll
push
xchg
inc
cmp
add
pop
fsubl
fwait
aaa
dec
and
call
aad
jb
dec
pop
xor
jmp
fdivr
shlb
jecxz
mov
ss
sub
pushf
insb
xor
xchg
jecxz
loopne
xchg
cli
adc
popa
push
xchg
sbb
in
or
das
inc
mov
inc
add
sbb
scas
inc
mov
pusha
mov
ret
iret
sub
and
add
repz
aad
fadds
inc
enter
stc
fdivs
fs
mov
imul
lret
and
std
fidivl
imul
and
inc
cltd
in
jns
inc
out
fnsave
jge
mov
pop
inc
sbb
sahf
mov
and
xor
ficompl
out
inc
pusha
sbb
pop
popf
mov
les
push
roll
cmpsb
fsub
jb
cmp
or
pop
addr16
mov
in
mov
mov
xor
test
add
enter
add
xor
xorl
aaa
xlat
call
sti
xchg
insb
faddp
stos
call
arpl
int3
mov
fsub
inc
mov
loopne
cmc
imul
fstps
push
mov
mov
scas
or
hlt
and
repz
fwait
mov
push
out
pop
xchg
mov
ss
test
jle
fs
or
dec
pop
into
mov
mov
dec
lret
sar
sbb
dec
aaa
dec
nop
roll
pop
out
and
or
pop
and
mov
and
roll
pop
sti
scas
rolb
xchg
ss
cld
sbb
cli
gs
xchg
and
inc
popf
cli
and
cmpsb
cmc
mov
scas
mov
xchg
lea
push
mov
insl
and
pop
not
dec
fistpll
jno
and
imul
lods
xchg
cmp
movsb
out
xor
adc
push
cmp
xchg
cltd
out
mov
push
dec
inc
enter
push
out
std
test
pop
cwtl
push
int3
add
adc
lcall
mov
xchg
fcomps
call
mov
leave
and
pop
mov
or
sbb
adcb
cmp
xor
loop
inc
stos
mov
int3
in
mulb
push
gs
sahf
mov
inc
push
inc
sbb
mov
mov
xlat
in
jae
pop
and
lods
mov
pushf
jae
mov
stos
divl
push
lcall
loope
push
jbe
cli
jle
loop
add
sub
xchg
sub
inc
add
adc
xor
add
ja
repz
in
std
roll
xchg
pop
mov
jns
add
adc
cmp
addb
movb
fmul
add
adc
push
cmp
cwtl
test
add
adc
and
ja
mov
adcl
jno
mov
jae
push
or
insl
and
cmpsb
shlb
ret
fsubr
dec
mov
cmc
adc
adc
loopne
or
sub
xor
stc
jmp
rorb
dec
pop
add
jecxz
icebp
lcall
and
icebp
cmc
fidivrl
mov
cld
pop
aaa
sbbb
je
push
jmp
xchg
loopne
sahf
jb
push
mov
pop
pop
stos
cmp
call
pop
stc
mov
sahf
xchg
jle
das
loope
sti
lahf
loop
loop
mov
mov
cmp
fwait
push
or
xchg
arpl
xor
hlt
cwtl
ds
push
xchg
mov
aam
push
jne
test
aad
lret
add
pandn
xor
lock
jg
fdivl
imul
xchg
jno
push
std
enter
and
lret
out
insb
add
daa
push
mov
cmp
icebp
jb
out
stc
xor
stc
dec
lcall
mov
dec
mov
push
mov
xor
jge
jle
stc
outsl
lock
out
pusha
in
cld
rcrb
mov
clc
shll
cli
sahf
outsl
xchg
jbe
mov
and
mov
xchg
xor
callw
shlb
mov
or
push
adc
aas
lods
or
xor
pop
or
and
inc
mov
out
pop
test
cld
test
out
jne
jnp
xor
push
and
sbb
mov
jmp
or
fxch
ss
dec
sti
jmp
sub
xor
stos
sub
xor
lcall
and
jns
push
mov
mov
ja
mov
lock
dec
add
and
cs
sub
aaa
push
mov
cmp
and
jb
call
push
mov
lods
aam
cmp
lock
pop
mov
addl
adc
data16
and
sub
outsb
and
pushf
test
mov
inc
fdivrl
decb
mov
inc
pop
xlat
push
dec
jno
fists
lea
jne
cli
fldenv
loope
shrb
inc
xchg
jnp
xchg
mov
scas
in
jbe
popf
sub
aas
add
xor
mov
jb
inc
cmp
mov
mov
and
dec
sub
push
data16
inc
and
mov
mov
sub
dec
out
add
jne
les
xchg
outsb
repz
loop
psubq
inc
pop
jg
das
xor
dec
clc
pop
and
mov
scas
popf
mov
xor
das
jo
cs
adc
sbb
mov
cld
sti
mov
jle
pop
int3
sbb
pop
imul
push
mov
pop
add
xchg
xchg
adc
pop
xor
cmp
stos
cld
sti
mov
div
movsb
jo
adc
lahf
jg
mov
popf
jle
loop
xor
mov
loopne
les
mov
jae
outsl
out
fdivl
loopne
sub
jle
aas
cmp
aad
lret
popa
in
in
cmp
xchg
xchg
frstor
dec
ja
mov
mov
call
mov
cmp
ja
add
mov
push
test
lods
pusha
push
xchg
loop
pavgw
imul
mov
ja
jne
mov
mov
mov
test
lods
and
cmp
jo
scas
push
dec
inc
out
into
add
hlt
call
mov
in
filds
aas
dec
push
sbb
out
add
mov
dec
xor
or
push
stos
fstl
pop
imul
or
pop
add
vpunpckhdq
lock
push
pop
sbb
mov
xor
inc
notl
mov
mov
pop
sub
inc
sub
mov
mov
dec
jae
int
les
pop
lret
loop
repnz
in
inc
in
fisubl
mov
lds
ficoml
mov
repz
add
ja
jle
xchg
dec
sbb
lods
jle
rcr
mov
aad
jns
lds
or
lahf
ds
ljmp
dec
leave
jns
cmpsl
arpl
push
jl
push
and
mov
enter
push
lret
lods
inc
fcomps
fisubrl
xlat
adc
and
iret
inc
loope
mov
xchg
lods
lret
out
int
fs
mov
xor
xchg
pop
ss
mov
inc
das
adc
stos
sbb
out
sbb
outsb
pusha
gs
cmpb
lock
xor
xchg
leave
pushf
fiaddl
fdivr
and
cmp
out
sub
xchg
push
adc
fs
adcl
xor
fldt
inc
cmpsb
lods
js
shll
stc
mov
aad
xor
mov
jp
ljmp
jbe
jecxz
es
dec
fdiv
inc
lret
and
gs
inc
jb
lock
ss
aad
aaa
rcr
cmp
arpl
lret
fstp
add
mov
aad
pop
xor
adc
mov
xchg
and
push
dec
xor
pushf
test
iret
mov
jnp
fiadds
pop
push
mov
in
or
lods
mov
outsb
fidivrs
scas
jmp
adc
xchg
or
xor
out
bnd
dec
fs
cs
insl
lods
mov
scas
mov
adc
scas
outsl
mov
xchg
cmpl
movb
dec
mov
jmp
sbb
xchg
gs
sub
out
xor
test
xchg
mov
mov
or
cmp
shll
or
sbb
push
aaa
lods
pop
pop
xchg
xor
int
js
add
std
out
popf
fs
and
out
jae
out
add
mov
ficompl
es
inc
sbb
mov
cmp
xchg
xchg
sti
enter
add
push
xor
mov
adc
out
push
lcall
and
fdivrp
repz
stc
addr16
int
push
cmc
les
sub
mov
mov
adc
pop
lea
dec
roll
add
lcall
lds
add
sbb
cmp
inc
cmp
icebp
mov
fbstp
jl
dec
push
dec
mov
pop
in
imul
pop
push
insb
test
cmp
mov
fdivrs
iret
cmp
xchg
popa
jo
repz
mov
or
or
jecxz
shlb
pushf
push
popf
add
or
aam
repnz
mov
fldenv
sbb
xchg
insb
or
cmp
or
xchg
rcr
scas
imul
rcll
or
outsl
es
aad
cmp
movsb
mov
pusha
out
or
es
xchg
mov
cmc
xchg
ljmp
cmc
daa
stos
scas
dec
mov
int
inc
xor
push
cmp
mov
in
fdivs
ds
sti
mov
lods
or
or
lret
fdivs
sahf
sbb
push
mov
adc
sbb
shr
lods
push
xchg
loope
cmpsl
test
fbstp
dec
pop
ret
dec
in
mov
loop
xor
fsubl
and
in
push
mov
sub
mov
sbb
sub
jl
mov
sbb
xor
sub
daa
fiaddl
push
jmp
lea
push
push
jle
into
sub
ds
cmp
enter
lock
sub
in
add
loop
inc
cwtl
clc
mov
pusha
popf
aas
cmpsb
imul
and
inc
push
jns
cmp
jae
jecxz
jbe
sbb
pushf
ret
dec
js
lret
out
mov
cmc
inc
mov
aad
push
insb
outsb
adc
sub
inc
cmpsb
and
adc
adc
aaa
push
imul
ret
loope
xchg
or
fstp
movsl
repz
dec
sbb
icebp
jp
sub
dec
ja
cmc
mov
mov
mov
pop
pop
repz
sub
jnp
jb
sub
push
mov
lahf
xchg
adc
pop
rcrb
add
pushf
xchg
pop
xchg
xor
rcl
jne
sub
pop
fs
mov
mov
xchg
rcl
pop
ljmp
div
and
clc
inc
inc
mov
dec
xchg
cli
mov
lcall
in
mov
sub
xchg
out
into
xlat
xchg
lahf
in
jo
cs
ss
xchg
cmp
jle
xchg
ja
out
sub
mov
ljmp
mov
or
test
cmc
stc
or
xchg
or
push
ret
das
pop
nop
jo
push
xor
cmp
sbb
cltd
pop
push
repz
push
pushf
push
sub
mov
push
das
cld
add
mov
outsl
jg
jns
sub
xchg
or
pop
loopnew
aad
mov
pop
or
adc
inc
test
xchg
fsubrs
mov
and
mov
jne
rcrl
or
xor
inc
aam
jle
mov
push
mov
cltd
push
or
dec
cltd
out
xor
push
mov
xor
or
push
iret
int
je
repz
ja
xlat
add
es
jp
shll
pop
push
movsb
push
and
lret
inc
clc
in
inc
movsl
inc
outsl
pop
imul
mov
xchg
int3
icebp
aad
mov
cmpsl
jo
fcomip
dec
bound
jne
jne
aam
in
pop
cmp
fstps
add
inc
fistps
xor
jae
xor
je
mov
push
js
or
adc
fidivrl
mov
cltd
jecxz
xchg
add
loop
mov
cmp
fwait
call
or
fisubl
ja
lcall
insl
adc
mov
pusha
mov
add
pop
in
loope
xchg
xlat
out
popf
sarl
popf
popa
loope
mov
shll
push
mov
popa
jo
addr16
xchg
lret
mov
dec
jo
into
mov
mov
repnz
push
pop
hlt
mov
pop
dec
sbb
aas
adc
cmpsb
mov
jg
out
pushf
cmpsl
adc
loopne
psllw
in
adc
sub
inc
inc
push
lds
or
icebp
mov
push
and
ss
push
xchg
mov
iret
pop
mov
or
minps
or
repz
pop
dec
push
fldt
xchg
loope
jae
pop
mov
pop
mov
sti
fdivl
mov
or
jns
ds
mov
mov
and
clc
cmc
mov
mov
mov
and
and
mov
cmp
outsb
pop
pop
jbe
ss
push
push
fisttpll
es
dec
insb
popf
into
fcmove
pop
or
cmp
xchg
imul
mov
inc
cwtl
push
repz
cmc
insb
aam
jns
mov
in
pop
out
adc
push
das
daa
xor
push
xorl
and
jnp
sti
jne
loop
repz
ss
scas
js
outsl
lahf
pop
xor
xor
xchg
mov
leave
pushf
sbb
xchg
inc
movsl
cmp
add
repnz
mov
push
out
repz
nop
add
cmp
incb
push
mov
sti
out
sbb
imul
push
pop
sub
incb
jle
arpl
mov
imul
andb
mov
pop
pop
ds
inc
mov
jnp
je
mov
ljmp
ret
jecxz
movsl
sub
xchg
scas
cmp
clc
push
sbb
sub
push
outsl
test
rcl
jecxz
pusha
pop
pop
mov
pop
inc
fisttps
lods
call
ret
popf
mov
or
and
lock
orb
scas
cmp
es
mov
adc
xchg
data16
aam
mov
cmp
and
sahf
repnz
clc
jmp
fldl
push
dec
inc
jns
mov
mov
imul
sbb
addr16
ja
and
sbb
mov
mov
lea
call
inc
jnp
js
push
in
sub
sub
pop
ds
arpl
mov
cld
adc
add
rcrb
adc
sbb
sbb
jmp
aas
xor
aas
push
mov
or
jo
dec
cmpsb
das
cld
sarb
xlat
inc
cmpl
jns
cmc
mov
or
mov
movb
mov
adc
pop
dec
pop
int
pusha
push
xchg
loopne
lret
xlat
pushf
imul
xchg
jne
jo
in
lcall
pushf
mov
js
mov
dec
xchg
xchg
scas
or
mov
mov
pusha
sbb
push
mov
testb
rolb
nop
sahf
pmovmskb
or
push
jg
or
xor
fmuls
lret
lock
test
out
ficomps
xor
push
fbstp
clc
cmp
mov
je
hlt
fldcw
std
xlat
add
pop
call
lods
test
or
arpl
fisubrs
lods
xchg
outsl
daa
xchg
sub
fs
jmp
imul
ljmp
outsb
out
pop
or
push
and
pop
stos
mov
push
and
sahf
stos
xchg
repnz
xor
cs
rcrb
mov
or
cmp
lret
mov
fs
stos
icebp
cltd
dec
les
lds
lods
push
mov
imul
in
adc
bound
aas
adc
jg
les
xchg
or
mov
mov
jecxz
and
out
ljmp
out
outsb
flds
jle
lret
push
movb
adc
or
or
push
lds
imul
sub
push
mov
fwait
jne
jg
or
push
out
sar
lret
lcall
sub
mov
lretw
inc
pop
mov
cmpl
movsb
mov
je
cmc
repz
lcall
cs
repz
movsb
inc
xorl
jb
sbb
xor
loopne
jb
xchg
icebp
and
jnp
mov
or
arpl
jne
filds
test
insl
out
xor
mov
mov
test
cmp
repz
jecxz
stc
push
jno
scas
int3
popa
dec
pushf
push
sub
inc
loope
mov
xchg
sub
and
and
xchg
jne
cmp
add
sbb
mov
mov
test
test
scas
xorb
divb
inc
adcb
nop
outsb
inc
loop
jle
xchg
loope
jl
sbb
rolb
or
mov
insl
mov
fdivrs
aas
push
mov
loopne
fwait
xchg
cmp
xor
push
mov
xchg
adc
mov
and
cmp
scas
xchg
mov
ss
jl
nop
pushf
push
or
iret
aad
fmulp
sbb
mov
movsb
mov
test
inc
test
popa
mov
pusha
das
shl
or
mov
in
lcall
in
lds
inc
cmp
jmp
xchg
test
les
adc
or
je
dec
fistpll
pop
ss
xchg
mov
iret
mov
sti
and
cmp
addb
dec
add
cmp
popf
mov
popf
aad
mov
sub
pop
int
cmpsl
pop
dec
jae
xchg
into
jl
adc
aad
sbb
movsl
in
xor
popw
add
repz
gs
ljmp
inc
inc
cmp
test
sbb
mov
jg
ds
xchg
loope
xor
pop
in
in
xlat
dec
pop
and
and
and
arpl
ja
xor
sub
shr
sarb
pop
out
xorb
loopne
xor
in
pop
and
xor
jl
arpl
or
inc
xchg
test
bound
inc
adc
sbb
jbe
lock
imulb
pop
inc
stc
rcrl
call
cmp
orl
pop
xchg
fs
outsl
xor
std
das
sbb
lods
jbe
or
xchg
stc
mov
sub
ret
imul
subb
jb
sbb
push
sarb
push
inc
aad
or
push
add
movsb
fdivrl
dec
add
mov
cmp
pop
inc
and
mov
rclb
fimull
jge
clc
jge
fwait
sbb
push
push
es
dec
adc
or
sub
in
int
leave
jmp
jle
pop
repnz
in
arpl
add
xchg
fidivrl
xor
xor
sbb
mov
mov
out
or
inc
ljmp
stc
scas
loope
add
pop
mov
lds
mov
fsubrl
sub
jle
pop
jge
loope
xor
outsb
xchg
std
test
push
imul
jmp
loopne
xor
lock
inc
cli
movb
popf
sar
into
cltd
out
outsb
cmpsb
pop
cltd
ja
adc
mov
jae
pushf
lds
pusha
xor
hlt
add
test
popf
rolb
in
dec
mov
or
push
movl
icebp
into
icebp
movsb
lret
aas
pop
fiadds
sbb
call
push
or
into
or
mov
push
jae
lret
ret
rcll
cld
imul
mov
gs
scas
xor
js
ds
xchg
inc
or
sahf
pop
leave
dec
xor
xadd
in
faddl
jnp
incb
and
sbb
and
mov
dec
sub
call
test
cld
sbb
add
and
sbb
mov
push
in
dec
insl
mov
fisttpll
popf
out
dec
cmpsl
mov
test
bound
jnp
add
ret
sbb
or
mov
mov
pop
add
mov
push
mov
dec
pop
cmc
sub
jb
push
incb
fstps
push
xor
lods
push
mov
dec
fcomps
std
dec
inc
sbb
mov
dec
std
in
mov
mov
inc
pop
lods
lcall
mov
xlat
jle
mov
cmc
loope
xchg
mov
mov
addr16
scas
xor
fs
out
xchg
push
xchg
adc
aas
sarl
or
jnp
outsl
xchg
dec
sbb
jl
js
cmovne
cmp
push
test
add
pop
cmc
outsb
adc
lahf
mov
sub
xor
lret
and
pop
cwtl
pop
fildl
je
ljmp
mov
fs
mov
lret
xrelease
mov
inc
pop
or
cs
mov
pop
and
or
fwait
cmc
arpl
sub
roll
push
fnstsw
dec
inc
add
les
jne
xor
dec
xor
and
imul
cmpsb
sub
mov
inc
jecxz
shl
mov
pop
mov
add
dec
or
add
xor
js
add
aas
and
es
sub
and
xchg
insl
xlat
repnz
cmp
and
xchg
es
rorl
stos
pop
xor
xlat
icebp
inc
adc
sti
lods
cwtl
movsb
add
icebp
in
arpl
cld
sti
outsb
sahf
mov
xchg
insl
mov
mov
mov
das
stos
insb
or
xchg
xor
sbbl
aad
xor
mov
lods
sub
mov
adc
rclb
push
andb
rcl
enter
mov
fstpt
pop
outsl
push
xchg
cmpsb
mov
imul
sbbl
pusha
add
mov
loop
divl
test
movsb
pop
stos
dec
rcr
xor
jnp
sbb
push
aam
stos
jg
sbb
mov
hlt
xor
out
push
inc
jns
push
in
mov
test
invd
inc
push
mov
test
jmp
dec
mov
outsb
addr16
loop
add
inc
ljmp
or
dec
frstor
das
pop
pop
aas
mov
pop
aas
pop
jno
adc
push
pushf
mov
push
mov
add
adc
jge
add
pop
les
pop
cmpsb
lcall
dec
sarl
ss
cmpsl
sbb
pop
into
push
and
adc
add
push
pop
push
sti
cmp
ret
dec
push
std
les
out
loopne
lahf
dec
pop
pop
adc
fistpl
dec
rclb
xchg
loop
arpl
mov
addr16
dec
xchg
popa
jge
inc
push
xchg
adc
jp
testl
xchg
jl
imul
popa
fnstsw
inc
cmpsl
imul
stc
je
outsl
inc
lcall
in
enter
clc
and
push
pop
mov
dec
mov
push
ror
push
scas
aaa
add
xor
sbb
jl
and
xchg
loope
xchg
add
pop
movsb
jl
xchg
push
sub
lods
mov
sbb
sbb
daa
shl
add
jp
fisubrl
xor
out
mov
push
popf
je
cwtl
or
dec
hlt
push
data16
aad
pop
lret
sarb
mov
mov
pop
inc
repnz
fistl
dec
push
je
fstpt
int
pop
sbb
dec
add
repnz
sbb
cmp
xchg
sbb
inc
dec
xor
lods
ficompl
adc
out
loope
and
jmp
mov
out
xchg
mov
orl
int3
cmp
add
test
add
or
shll
inc
adc
xor
lea
mov
add
xor
test
dec
lcall
mov
and
sarl
push
addr16
sti
je
pop
fldl
sar
pop
movb
sbb
mov
jmp
xor
jb
addr16
jns
std
sub
data16
jno
cld
pop
fcmovnb
and
cmc
add
iret
or
out
test
sarb
jnp
mov
lcall
pop
sub
nop
sbb
adc
loop
jne
stc
mov
test
stc
add
adc
push
icebp
adc
push
lods
ja
shll
sub
dec
add
out
lret
xchg
aas
sbb
cwtl
cmpsb
lret
push
and
inc
divb
out
mov
add
and
jmp
or
jmp
jo
dec
ret
pop
pop
nop
sahf
lock
xchg
dec
divb
mov
fwait
and
push
lea
inc
icebp
idivl
popa
out
and
andl
inc
jbe
jge
popf
decl
push
into
andb
fisttps
hlt
fisubs
iret
jae
jne
push
roll
mov
mov
inc
push
lret
aad
jnp
jbe
push
or
sub
add
sarl
mov
mov
sbb
xchg
jle
cltd
push
bound
inc
adc
fistpl
sbb
xor
mov
xchg
nop
leave
or
mov
mov
push
jp
arpl
dec
mov
lcall
in
cmp
jecxz
lds
adc
fs
push
clc
jp
scas
push
pop
fsubr
movb
in
cwtl
stos
clc
xor
sbbb
cltd
add
or
add
cmp
add
sbb
pop
mov
jecxz
hlt
mov
sbb
lock
or
jmp
jl
xchg
repnz
sbb
ljmp
std
imul
addr16
jge
std
ds
gs
int3
mov
aad
js
test
push
sar
push
jae
mov
nop
adc
stos
test
mov
xor
inc
inc
repz
sub
pushf
add
cld
sti
cmp
dec
cmpl
fs
shll
xchg
fsub
sti
inc
in
push
mov
ljmp
mov
fisubl
lods
outsl
fisubl
clc
mov
jp
aam
mov
lock
sbb
pushf
jle
int3
xor
lcall
dec
xchg
lods
push
cmpb
cmp
jg
cld
in
sub
and
cmpb
cmpb
xchg
movsb
test
roll
fsubs
mov
push
push
and
shl
mov
inc
fidivs
cmp
pushf
push
aad
lods
and
cli
lds
cmpsl
jbe
mov
repz
push
scas
in
and
repnz
adc
pop
and
dec
xchg
fnstcw
pop
cwtl
popf
das
jns
divl
push
leave
repnz
cmp
mov
sbb
push
or
iret
mov
hlt
or
ljmp
in
jns
xlat
sbbb
clc
mov
mov
sub
push
cmpsb
int
movd
leave
insb
clc
sbb
pop
cmpsb
cmp
pushf
cmpsb
scas
into
movsl
adc
inc
dec
xor
sbb
add
dec
fimull
dec
mov
pop
scas
popf
lcall
or
data16
incb
jle
jmp
lds
cmp
aam
pop
pop
sbb
aad
push
fldt
aas
push
pop
xchg
or
mov
in
add
dec
sbbb
add
cltd
popf
add
jo
xchg
jns
ret
mov
ljmp
mov
jo
jmp
in
add
pop
jbe
xor
fcoml
push
lea
and
sbb
prefetchw
or
mov
push
movsb
sub
imulb
cmp
bound
mov
mov
jns
ret
mov
mov
jb
or
clc
pop
mov
insb
call
push
fildl
push
sbb
js
xor
cmp
cmpsb
adc
xor
arpl
popa
insb
orb
int
fwait
pop
xchg
sub
jmp
insb
push
mov
push
xchg
js
mov
cli
sahf
or
aas
jg
push
mov
jbe
and
sbb
jg
aas
xchg
jmp
mov
xor
rol
ficoml
or
pop
mov
fidivrs
outsl
sbb
or
hlt
jnp
cmc
lea
std
mov
into
stc
sbb
loope
sbb
xchg
push
fwait
xlat
and
and
enter
dec
leave
mov
dec
mov
cwtl
pushf
add
sub
fcoms
pushl
int
mov
cmp
das
out
pop
test
xlat
leavew
sbb
lahf
push
push
stos
mov
movsl
sub
cmp
jle
adc
mov
cs
lret
lock
cmp
mov
outsb
dec
and
subb
dec
add
xor
add
hlt
stos
into
and
repz
in
std
push
xor
test
cmpsb
je
cmp
in
outsl
icebp
popf
push
and
inc
lret
je
jbe
cmp
jns
or
dec
cltd
mov
aam
mov
shlb
jno
stc
aam
inc
in
mov
js
xchg
sub
pop
adc
sub
int3
movsb
lock
add
mov
push
les
mov
push
push
cs
pop
sub
mov
adc
movsb
mov
xor
mov
out
lret
mov
adc
xor
mov
fstps
xor
jne
jae
mov
insb
sbb
nop
out
cmp
inc
cmp
jmp
sub
dec
push
fs
pop
sub
ss
push
out
hlt
jae
sbb
inc
cmpsl
outsl
andb
ds
mov
jno
dec
leave
mov
outsb
fidivrl
leave
jmp
or
scas
jl
cltd
rcrb
les
lods
cmpsl
ljmp
add
das
sub
jmp
mov
cmc
dec
in
xor
inc
push
cmpsl
jge
fwait
out
aad
xor
push
shrl
or
pushf
mov
and
jns
cmp
pop
cmp
aas
and
pop
mov
cmpsl
test
pop
cmpsl
shrb
pop
lods
mov
mov
cmc
ss
lahf
dec
mov
jno
sbb
aam
sub
movsl
insl
pop
sbb
xor
adc
cwtl
xor
icebp
pop
adc
xor
sub
clc
cmpsb
cmp
flds
xchg
and
sbb
shlb
outsb
inc
repnz
test
loopne
movsl
cmp
sbb
movsl
add
dec
cld
mov
out
int3
jmp
pop
into
mov
mov
pop
add
cmpsb
adc
scas
cmp
shll
inc
daa
sbb
mov
jb
cmp
movsl
adcl
jmp
dec
mov
into
mov
dec
andl
sahf
pop
inc
rclb
add
daa
adc
lods
jb
shlb
es
rcrb
push
push
dec
dec
cmc
int
sahf
cmc
pop
movsb
sbb
push
imul
mov
inc
daa
fdivrp
sub
jl
loop
pop
dec
repnz
addl
ror
push
js
push
imul
mov
push
push
push
or
arpl
ja
iret
icebp
mov
pop
xchg
inc
clc
jle
sub
arpl
sbb
mov
dec
mov
mov
mov
scas
xchg
mov
insb
insb
mov
dec
lcall
xor
daa
mov
repz
mov
pop
js
or
add
mov
xchg
shrl
aaa
sbb
mov
mov
xchg
inc
decb
push
test
mov
pusha
das
pusha
mov
cmp
lahf
bound
add
je
insb
pop
push
pop
jb
arpl
in
pop
dec
fdivrl
shl
cltd
repz
dec
aad
les
xor
les
cld
jae
clc
mov
aam
ss
inc
push
rcrl
pushf
shr
roll
xor
cmp
shll
daa
mov
jno
or
mov
inc
shl
daa
pop
popf
cli
scas
stc
and
fiadds
ja
jnp
mov
jecxz
stc
loop
pop
out
movsl
fildll
mov
push
sbb
aam
cmpl
leave
and
loope
dec
cli
aad
sub
neg
dec
fwait
cmc
mov
pusha
add
lods
insb
shlb
jmp
mov
xchg
icebp
inc
sti
fnsave
mov
cmp
dec
dec
adc
xor
int3
outsb
cltd
repnz
jmp
fcmove
xchg
and
add
jecxz
je
outsl
fs
je
jp
cmp
inc
mov
xorb
lcall
push
xchg
jmp
stc
jno
bound
out
pop
lcall
popf
adc
dec
xchg
and
rorl
inc
int
sti
subl
adc
sbb
stos
push
push
inc
xchg
lcall
movb
out
and
jne
mov
popa
ss
mov
out
fiaddl
jno
pop
xchg
mov
dec
vunpckhps
add
negl
cmpsb
jo
fists
adc
inc
mov
leave
push
mov
mov
xchg
xor
loop
loope
ret
std
adc
inc
jo
aad
or
gs
in
push
push
lret
addr16
jo
je
stos
cs
pop
test
imul
popa
lds
shrl
ret
std
dec
inc
mov
dec
cmp
ja
gs
mov
sub
stos
mov
shlb
mov
sub
fnsave
cmp
lea
mov
jmp
mov
mov
mov
notb
sbb
out
sbb
imul
call
jl
add
xchg
xor
sti
sahf
pop
faddl
or
cmpsl
cmp
mov
icebp
cmp
lds
add
cltd
jmp
loope
stos
pop
push
push
sub
shll
add
pop
add
or
jb
repnz
popf
fisubrl
lret
out
dec
and
jne
xchg
loopne
inc
cmp
sub
mov
or
dec
mov
xchg
xchg
cmp
push
dec
movb
dec
push
cld
lea
cmp
test
mov
xchg
mov
arpl
adc
ja
sub
sti
pop
rcrl
xchg
push
scas
cmc
lds
es
xor
jno
mov
dec
xchg
test
dec
jmp
test
movsb
stc
fstp
lds
gs
fs
popf
stos
mov
pop
add
aaa
fimuls
and
ds
sbb
pop
xchg
mov
movsl
sarb
mov
inc
jbe
add
jae
cmp
add
fsubr
pop
mov
mov
jp
jb
sbb
aaa
mov
shrl
sahf
ja
icebp
ljmp
sub
fcmovb
pushf
add
into
les
lcall
out
xchg
and
loopne
add
sbb
fs
test
cmp
ds
into
jns
xchg
adc
pop
mov
push
sahf
mov
push
stos
aad
push
mov
int
sub
in
enter
fnsave
call
mov
rcrl
sbb
push
out
jae
movsb
and
push
push
lret
cltd
adc
mov
ja
jnp
icebp
mov
fstl
lahf
mov
std
test
jmp
dec
adc
xchg
jo
lret
and
jle
push
js
inc
add
dec
data16
inc
sbb
mov
js
ja
jmp
pop
sbb
enter
and
adc
daa
push
sub
pop
fdivl
pop
fwait
jecxz
fisttpll
mov
jmp
pop
in
push
adc
std
dec
lea
and
je
aas
sbb
jbe
dec
aam
rclb
push
sub
sub
push
jne
and
dec
xchg
push
pop
mov
mov
mov
cmpsb
jle
push
pop
out
jnp
out
mov
je
push
pop
pop
pop
shrb
movsl
jle
mov
xchg
adc
inc
lock
mov
mov
jecxz
push
je
add
jmp
dec
les
mov
cmp
pop
icebp
inc
sbb
insb
aaa
cmp
mov
mov
sbb
and
sub
jle
cld
lods
mov
adc
in
inc
jg
std
fnsave
mov
insb
jns
inc
jnp
ret
out
rolb
cmc
ds
gs
jle
jl
xor
idiv
or
fwait
inc
jae
fsts
cli
loopne
pop
ljmp
xchg
fstpl
test
add
fwait
test
inc
xor
pop
nop
jne
add
mov
aas
iret
sbb
dec
or
mov
mov
aaa
dec
mov
fcmovb
dec
aad
ljmp
dec
jle
lcall
dec
sbb
xchg
jecxz
adc
push
push
mov
adc
xchg
adcl
hlt
ss
std
sbb
jg
fdivrs
subb
aad
add
adc
fidivrs
or
pushf
xchg
add
add
decb
out
test
and
and
sar
fwait
or
jns
or
jecxz
sub
adc
fwait
cli
in
sahf
in
sbb
jns
jle
jo
xor
dec
stc
je
mov
xchg
fs
or
daa
lahf
je
imulb
mov
stc
push
push
pushf
cld
lahf
popf
mov
pop
popa
fcompl
xor
popf
pop
jle
xchg
xchg
mov
sub
mov
mov
pop
sub
push
fsubrl
xchg
aad
divps
cmp
mov
mov
push
lods
lods
mov
xor
sti
mov
lahf
xor
sub
or
inc
cwtl
js
inc
adc
jb
pop
or
cwtl
jae
jbe
mov
fadds
cmpsl
and
imul
ja
pop
sub
test
scas
xchg
stc
sbb
ss
xor
lcall
arpl
flds
incb
nop
adcl
shrb
jl
or
cld
lock
jno
pop
shlb
outsb
mov
sub
ljmp
dec
inc
cmpsl
sbb
adc
cmp
sub
fimull
scas
cmp
mov
sub
sahf
fildl
pop
stc
stos
push
into
push
pushf
jp
sbb
data16
xchg
ret
popf
jbe
fs
pop
xor
iret
cmp
xchg
jle
cmp
ds
sub
sbb
dec
jge
dec
xor
mov
shrl
aas
addr16
outsl
shll
lods
or
adc
xlat
test
inc
adc
cmp
xchg
push
nop
dec
call
xchg
lahf
ja
jg
add
je
mov
daa
push
in
add
mov
dec
adc
adc
push
adc
lods
std
dec
sbb
sarl
sbb
or
cmp
ja
mov
sub
test
and
cmpsb
into
cmpsl
aas
ljmp
lret
inc
add
stc
les
daa
jmp
out
push
fs
and
bound
add
out
inc
pop
incb
sbb
sub
data16
cmp
inc
cmp
adc
cmp
sbb
insl
outsl
mov
loope
xor
inc
cltd
sub
push
in
push
push
pop
adc
jmp
sbb
lods
jl
loop
cmpsl
lods
push
inc
mov
testl
pop
mov
sahf
mov
insl
or
push
ret
loopne
ja
pop
in
test
daa
sbb
test
lock
insl
pop
and
push
mov
scas
mov
enter
jb
sub
gs
mov
pop
fistpl
shr
xchg
popa
cmc
sbb
aam
mov
aad
aas
in
ja
mov
or
fwait
test
xor
ficoml
push
cwtl
icebp
or
jno
scas
lock
sub
enter
or
lret
pushf
and
stos
jo
and
cmp
fists
pop
hlt
ds
jno
and
ja
jbe
test
loop
rorb
pop
jp
and
adc
or
add
and
xor
ret
cmp
cwtl
xchg
outsl
arpl
mov
xchg
stos
scas
inc
imul
push
int3
sub
mov
jmp
insl
or
mov
incl
imul
adc
inc
lahf
nop
xchg
ljmp
je
mov
aam
push
popf
add
xchg
popf
loopne
in
dec
sbb
aam
xchg
mov
jmp
dec
add
idivb
adc
mov
fwait
sub
mov
rcll
push
ffreep
scas
ficompl
sub
ret
daa
jp
jecxz
fistl
mov
cmpl
fisubrl
lods
scas
mov
pushl
ja
fidivrl
ljmp
int3
ja
inc
je
das
push
mov
or
clc
imul
stos
dec
add
sahf
push
dec
jns
hlt
inc
mov
push
mov
inc
mov
insb
dec
loop
gs
cmp
lret
mov
jae
leave
stc
and
loop
sbbl
inc
and
mov
rorl
inc
inc
xchg
data16
adc
cmp
jae
inc
dec
out
jns
lods
push
push
lcall
les
out
adc
arpl
or
in
in
xlat
xor
xor
adc
add
sbb
cmc
lret
sbb
repnz
push
aas
sbb
cs
mov
adc
sbb
sub
cmc
or
pop
std
cmp
int
sub
push
outsl
aad
dec
test
out
push
inc
push
push
inc
pop
pop
stc
popf
push
lar
jle
jecxz
adc
jae
adc
dec
jb
and
and
pushw
mov
sbbl
jge
pop
sub
test
rcl
sbb
add
subb
icebp
outsl
jle
dec
jo
pushf
and
nop
mov
pop
xor
decl
lret
add
enter
subl
push
pop
mov
ffree
sbb
pop
jmp
ds
jo
push
jge
aam
jne
mov
push
pushf
cs
out
mov
mov
push
rorl
je
xchg
xchg
and
adc
out
and
xor
jp
stos
push
mov
xor
xchg
incb
shl
nop
sbb
or
and
adc
or
mov
push
mov
jg
addl
inc
xor
inc
repz
sbb
rcrl
and
mov
inc
stos
pop
imul
xchg
add
into
insb
inc
xchg
loopne
ret
sbb
es
pop
std
fisttps
test
jns
and
mov
pop
and
lret
das
and
mov
fldcw
mov
xchg
repz
push
sbb
mov
js
adc
sub
push
add
push
add
mov
jge
dec
insb
lods
lret
add
js
lahf
mov
jp
or
fisubrl
jns
ljmp
dec
mov
std
sbb
inc
jo
push
into
lahf
in
mov
subl
out
cmpb
and
sub
pop
jb
xor
insb
je
fnsave
ds
stos
pop
mov
lret
adc
cwtl
push
mov
fs
decl
jmp
insb
loop
adc
adc
fnstenv
insl
and
mov
push
sbb
push
arpl
push
movsb
cltd
lahf
pop
sbb
jecxz
test
mov
pushf
or
pop
cwtl
cmpl
cmp
adc
and
sub
dec
sbbl
stos
and
mov
inc
mov
mov
in
xorl
mov
dec
xchg
rorb
mov
ljmp
fmul
and
movsl
xchg
out
xchg
lods
pop
dec
dec
or
jne
jmp
and
xor
movsb
jmp
push
xor
scas
hlt
push
cwtl
xchg
sbb
add
cmpb
mov
pop
mov
repz
test
hlt
sub
into
out
lret
xchg
mov
and
cmc
aam
fmuls
in
adc
jmp
cmc
jbe
xor
popa
fs
rorl
push
jo
xor
and
xchg
popf
cmp
sbb
jo
inc
adcl
ja
jge
sub
shl
sbb
imul
cs
insb
addr16
xchg
stos
popa
in
push
bound
in
movl
imul
push
or
fwait
jecxz
cs
popa
xchg
stos
repnz
jae
aaa
cld
clc
ljmp
sub
push
aaa
lds
inc
pop
stos
push
or
outsl
ror
repnz
or
cmp
loope
out
and
and
xor
inc
and
lret
mov
lret
aas
xchg
fcmovu
add
push
enter
sahf
sub
mov
bound
leave
or
les
in
mov
adc
lret
repnz
out
test
idivb
pop
adc
mov
mov
jle
stos
notl
into
adc
pop
pop
mov
pop
mov
adc
lea
sbb
adc
les
icebp
mov
loopne
mov
mov
add
push
cli
je
sbb
pop
popa
psrlq
nop
and
sbb
sbb
add
dec
xchg
ja
jbe
xchg
inc
adc
cmp
ss
fidivl
scas
push
stos
xchg
jns
dec
sub
xchg
or
inc
dec
outsb
xor
add
mov
lock
pop
adc
push
clc
mov
adc
fisttps
jl
inc
int
test
jne
outsl
sub
inc
popf
mov
push
incl
or
je
ret
loope
inc
jg
outsb
rclb
fldl
movsl
orl
jb
jo
inc
inc
outsb
fildl
lret
jmp
add
pop
mov
pop
std
shll
jl
loopne
and
xor
xor
or
cmc
leave
gs
ficompl
pop
fimull
jmp
dec
leave
cs
lds
pop
fs
push
inc
xchg
jg
mov
jne
jbe
shr
fs
imul
and
in
hlt
test
iret
and
xchg
cmp
jno
fisubl
push
xor
idivb
sarl
dec
sub
lock
adc
push
js
mov
fsubs
mov
ret
xor
jns
or
pop
xor
cmp
mov
mov
lods
es
adcb
jbe
xor
loope
fnstcw
data16
pop
cmp
gs
fisttpll
jp
mov
mov
mov
lods
mov
in
jbe
aam
sub
and
dec
aas
xor
imull
das
push
mov
bound
imul
lret
inc
inc
inc
and
xor
dec
fisubrl
cmp
shlb
hlt
sub
ficoml
popa
lcall
sbb
jne
bound
jmp
lods
jnp
cmpsl
xchg
push
jo
in
pop
les
cmpsl
jno
cmp
cld
js
xor
decb
int
pop
xchg
test
pop
dec
dec
loope
lock
out
push
push
jecxz
sahf
and
xorps
lock
into
xchg
dec
lods
das
adc
pop
mov
add
push
arpl
insl
add
xchg
decl
pop
ljmp
imulb
dec
arpl
push
xor
pushf
xchg
inc
dec
cmpsb
mov
fwait
out
insl
int
loop
jno
fcomps
outsb
xor
mov
add
dec
inc
ss
cmp
jo
sub
pop
xchg
nop
inc
adc
inc
fcmovnu
dec
leave
icebp
mov
std
nop
push
nop
lods
ds
nop
jp
mov
inc
imul
pop
negb
dec
sbb
cmp
lret
jle
pop
sub
and
mov
xor
jg
or
imul
pop
imul
cmpsl
out
test
shll
imul
popl
lods
inc
dec
pop
lret
pop
push
cwtl
fcmovnu
int3
mov
outsl
or
lods
inc
ljmp
xchg
and
pusha
std
out
jns
fiaddl
pusha
mov
jae
push
mov
cli
xlat
jecxz
push
movsb
insb
push
cmp
lcall
cmp
imul
sbbb
les
repnz
sarb
cmpsl
sti
add
aam
and
je
cmp
jge
xchg
repz
mov
push
imul
xchg
addr16
push
dec
push
test
popa
aam
testl
lea
mov
jbe
xlat
incl
fcomi
sbb
out
push
add
imull
outsb
test
cmp
pop
rcrl
lcall
insl
stos
jns
push
mov
int3
addb
aaa
cmp
push
xor
xor
adcl
adc
mov
or
pusha
push
gs
nop
cmp
les
lods
inc
cmc
ficomps
shr
adc
subl
mov
incl
test
mov
sarb
imul
cmp
lds
or
in
clc
xchg
or
adc
stc
popf
fs
pop
rcll
loopne
cmp
sub
inc
iret
jns
cmp
xlat
test
lret
rcrl
movsl
mov
sub
shl
loopne
jbe
scas
lea
imul
xor
lcall
movsb
mov
inc
das
pop
mov
mov
jbe
inc
push
in
push
inc
pop
rclb
ret
xchg
int
and
dec
ds
inc
pop
sub
pop
push
dec
xchg
jnp
inc
jg
xchg
adc
mov
jmp
sub
mov
xor
popf
cli
jns
jo
sbbb
or
mov
cmp
push
cmp
call
dec
and
mov
pop
cmp
repnz
xchg
outsl
xchg
call
lods
mov
sub
test
cmp
orl
jb
inc
mov
cmpsb
scas
xchg
out
sarl
adc
jg
and
push
adc
mov
sub
int3
out
cmpsl
daa
cmc
incl
stos
mov
pop
lds
negl
aam
out
out
stos
jo
cmp
dec
aam
xor
mov
adc
repnz
adc
pop
sub
stos
lea
pop
scas
xor
cwtl
push
cmp
jl
movsbl
xchg
xchg
and
arpl
and
dec
lret
mov
test
inc
pop
aad
or
aaa
add
jp
add
int
int
sub
fnstenv
mov
push
mov
mov
mov
pop
pop
cmp
jnp
es
or
mov
sbb
jle
dec
fdivs
adc
mov
jae
ljmp
sahf
jbe
fwait
mov
mov
std
int3
or
mov
sub
scas
test
add
lahf
js
cmp
outsl
loope
or
jb
lret
xchg
push
mov
fnstcw
inc
lret
in
loop
notl
push
sbb
add
push
ljmp
cli
xchg
xlat
jp
jmp
movsb
sti
movb
pop
add
lods
cmp
mov
test
ffree
pop
es
jmp
and
frstor
adc
mov
movsl
shr
dec
mov
das
pop
pop
inc
out
sub
xchg
loope
mov
icebp
imul
adc
test
mov
or
pop
cld
sub
push
add
push
xlat
mov
xor
dec
inc
jp
aad
sub
mov
adc
cmp
pop
mov
xchg
mov
cmp
sbb
shlb
sbb
xchg
pop
gs
or
in
lret
mov
and
sub
inc
out
mov
add
lds
in
xorl
xor
int3
into
sbbl
fs
sti
add
daa
cltd
nop
xchg
mov
sub
ret
clc
cmp
push
iret
shll
leave
ret
lods
lret
cmp
stos
mov
push
sbb
push
fs
xor
gs
inc
add
shrl
fldcw
sahf
loop
push
xor
cmp
xchg
sbbl
cltd
add
xchg
cmp
push
cmp
fidivl
outsl
sbb
cmp
leave
adc
push
sbb
in
mov
lcall
hlt
lock
dec
mov
lea
aad
mov
ds
cli
andb
testl
pop
in
mov
std
es
cmp
pusha
sub
std
in
pop
loop
sbb
jg
cltd
jecxz
sub
pusha
popa
dec
enter
ss
hlt
push
out
aas
push
scas
in
adc
cmpsb
and
xchg
ret
ljmp
mov
pop
sub
mov
adc
cmp
jmp
mov
pushf
push
js
cmpsb
push
and
mov
inc
divb
cmp
outsb
pop
loopne
andb
add
mov
decl
je
lock
mov
in
hlt
stc
or
sbbl
lea
rorl
mov
sti
add
rcll
mov
andb
loopne
jle
decb
push
pop
or
lea
xor
cs
sbbl
or
push
shll
stos
lret
inc
rclb
mov
mov
aam
cmp
idivb
xor
sbb
cmp
add
xor
loope
jbe
addr16
and
mov
xchg
pop
push
push
fsubr
cwtl
push
cltd
jno
or
xchg
subw
or
pop
mov
int
mov
add
or
pop
dec
adc
bound
jge
mov
push
orb
test
insb
and
dec
lds
stos
mov
jbe
lahf
xor
push
inc
iret
cmpb
cld
adc
out
or
mov
into
adc
int
mov
push
xchg
dec
sarl
sti
fs
xchg
iret
ficompl
mov
cwtl
cmp
cmp
xor
push
jnp
cmp
mov
nop
xchg
xchg
add
push
push
add
dec
sub
push
pusha
arpl
dec
xlat
sub
jo
dec
cs
mov
inc
fadds
push
frstor
jne
cmc
adc
cmp
pushaw
push
call
repz
or
imulb
push
push
fisttpll
shl
push
test
enter
jge
dec
js
jns
sub
inc
lahf
mov
cmp
sbb
pop
lcall
iret
pop
in
push
lret
xchg
pop
jnp
and
push
into
fisubl
push
or
pop
les
xchg
dec
jp
popf
pop
pop
xor
lret
mov
pusha
das
push
nop
xchg
arpl
out
cmpsl
push
mov
push
push
xor
fsubl
adc
fwait
ret
fstl
and
dec
ljmp
add
ret
inc
or
clc
stc
mov
out
cmp
and
sub
fwait
in
jmpw
push
lods
inc
xor
cwtl
adc
adc
nop
jnp
mov
loop
fildl
sbb
rcll
pushf
adc
sub
jl
dec
adc
sbb
mov
ss
sub
popf
inc
xor
in
lock
sub
rcrl
enter
int
out
aam
sub
cs
lcall
bound
push
ret
sbb
add
xor
dec
cmp
ret
es
stos
jge
scas
sbb
into
arpl
dec
lea
mov
jecxz
add
fcomp
add
lea
clc
xlat
and
jl
cltd
fsubl
add
dec
stc
mov
test
add
outsb
mov
adc
movsb
in
adc
repz
loope
aam
mov
mov
adc
adc
sbb
lret
aas
lret
bound
gs
cmp
loop
xor
jbe
in
lcall
push
int
rcll
pop
das
cltd
inc
shlb
rclb
pop
in
out
cmpsb
sub
mov
inc
and
add
jne
xchg
xchg
pop
mov
adc
and
mov
scas
inc
and
mov
pop
or
and
adc
mov
lock
and
arpl
jo
pushf
sub
in
cmp
outsb
mov
push
cmp
dec
je
pop
stc
dec
cmp
push
jns
push
pop
inc
and
dec
insb
notb
sbb
push
repnz
cld
push
leave
mov
jp
mov
jnp
mov
mov
add
jg
in
xchg
cmc
imul
mov
push
das
fs
test
pop
nop
xor
lds
out
outsl
sbb
push
adc
and
jb
das
cli
sub
cli
div
and
jp
lock
sahf
test
outsb
lds
lahf
inc
out
mov
iret
lret
xchg
and
xchg
out
repz
je
and
icebp
jne
enter
leave
xchg
popa
xchg
mov
pop
mov
push
stc
gs
std
xor
and
mov
and
mov
test
in
xor
sbb
cmp
dec
and
stos
mov
pop
divl
mov
push
lahf
sub
xorl
jns
stc
inc
mov
and
and
bound
mov
add
fwait
or
inc
or
sbb
jns
sub
test
sbb
cld
jno
ss
pop
jl
sub
add
and
xchg
add
adc
sbb
ss
fstpl
insb
push
and
add
sbb
mov
add
xlat
imul
frstor
mov
pop
or
push
shl
imul
sbb
xchg
mov
test
fisubrl
add
pop
mov
fwait
sbb
pop
push
and
in
mov
push
fisubrs
mov
in
push
pop
call
jno
cmp
xor
std
repnz
pop
rcrb
mov
sbb
mov
xor
inc
xor
sbb
jne
arpl
out
push
inc
dec
and
sbb
ds
sti
and
xchg
cmp
xchg
sahf
stc
mov
adc
cmp
push
mov
notb
mov
ficomps
push
sti
imul
add
jmp
mov
push
pop
leave
shrl
push
mov
ret
scas
out
and
fstl
cltd
sbb
aaa
imul
lahf
fistpl
cld
jns
pusha
xlat
and
rorl
dec
fucom
in
inc
into
fsubr
arpl
dec
mov
outsl
push
mov
lret
out
sbb
mov
sahf
repz
cmpsl
test
in
xchg
dec
vunpckhps
mov
js
gs
in
sub
adc
das
jp
cld
ror
ret
mov
mov
xor
sub
outsb
subl
push
sub
jne
insb
sarl
push
sub
out
inc
ja
addl
pop
in
icebp
mov
repnz
cmpsb
je
fstl
pushaw
rcll
lock
add
sub
daa
imul
faddp
mov
add
cmp
xlat
or
mov
test
xor
insb
or
jp
mov
xor
mov
sub
pop
test
or
ds
cmpsl
sahf
cltd
arpl
imul
jnp
adc
or
cmp
shlb
push
es
sahf
mov
mov
push
loopne
int
test
clc
test
daa
in
jb
adc
shll
dec
inc
pop
cmp
addl
xchg
ss
jae
in
and
push
and
dec
lea
jo
pop
mov
fneni(8087
test
popa
mov
sbb
sbb
cmp
or
gs
int
or
movsl
insl
mov
add
ds
push
aad
cmp
push
pop
adc
add
lods
and
shrd
sarl
repz
stos
cmp
dec
sub
sarl
out
sti
scas
jge
lock
xchg
mov
fwait
dec
push
mov
jmp
aas
insl
jo
cmp
cmc
adc
cmp
pop
cmp
outsb
cmp
jmp
mov
pusha
jns
push
cmp
in
mov
hlt
push
mov
adc
adc
mov
dec
sbb
jnp
mov
and
outsb
xor
ret
adc
loopne
jmp
jmp
js
add
add
adc
fists
mov
sbb
mov
icebp
xchg
mov
js
out
and
arpl
dec
loope
and
fs
ret
data16
jb
test
mov
fcmove
xor
mov
push
push
fcomip
scas
fstpt
xchg
cmpsb
and
pop
jno
xor
inc
xor
xor
and
adc
repnz
pop
out
shl
jno
pop
movsl
sbb
in
fdivrs
jnp
in
pop
test
aas
xlat
out
add
xchg
aaa
repnz
out
and
sub
cmpsl
aas
or
dec
push
out
jmp
fisttps
mov
cmp
stc
and
xchg
adc
idivb
mov
cli
cmp
hlt
sti
mov
jle
pusha
xor
add
mov
into
shll
test
dec
cmp
out
dec
filds
xchg
scas
mov
movsb
imull
mov
adc
std
dec
aad
enter
or
in
idivb
daa
jl
inc
sbb
push
cwtl
repnz
fwait
dec
jbe
xor
inc
test
cmp
cmc
cmp
jmp
push
inc
cld
adc
fstpl
mov
cld
jns
movsl
xor
adc
cmp
adc
push
and
inc
cmp
pop
pop
pop
arpl
fistpll
xor
xorl
jmp
imul
inc
aam
out
xchg
mov
cmpsl
ds
lock
sub
pop
add
nop
and
fiaddl
lahf
imul
xchg
pop
pop
cmp
shll
mov
xor
jno
mov
xor
ret
loope
adc
dec
pop
sbb
push
test
or
daa
ret
jnp
xor
das
scas
lods
loop
jg
jmp
mov
lea
xchg
les
xchg
mov
or
movsl
xchg
and
dec
popa
arpl
or
mov
outsb
pop
mov
inc
lret
rcrb
mov
sbb
outsb
xchg
orl
pop
push
ret
push
dec
pop
pop
inc
out
test
dec
test
or
xor
jl
sti
lret
lahf
mov
push
fisttps
into
addr16
ret
inc
loopne
mov
sahf
cmp
mov
dec
mov
jns
ss
das
xchg
jge
push
ficoml
push
fstps
aam
scas
jge
adc
mov
mov
cs
adc
lock
out
jno
or
movsl
cmp
sbb
aad
mov
pop
pop
xchg
outsb
mov
ja
das
mov
cmp
and
lods
imul
xchg
pop
jmp
or
sbb
lods
jae
popa
pop
push
nop
adc
cmp
lea
jbe
lods
mov
or
les
xchg
sub
cmp
std
adc
adc
pop
or
add
add
pop
mov
inc
dec
fs
push
arpl
mov
daa
mov
mov
in
mov
or
nop
mov
add
xchg
mov
stos
xorl
cmpxchg
and
jae
jnp
jl
int3
scas
cmpsb
mov
stos
fidivrs
insl
cmpsl
lock
iret
cmp
cmpl
cltd
arpl
pop
test
bound
fistpl
or
sbb
adc
sub
sub
mov
push
sbb
data16
mov
jno
or
jg
jb
shll
xor
subb
mov
lret
mov
push
fidivl
out
scas
fs
sub
dec
pop
lock
adcb
or
xlat
test
adc
mov
xor
int
jns
adc
or
test
pop
lods
das
scas
scas
ljmp
xchg
adc
mov
or
push
fsubrp
and
add
sub
ds
ja
inc
lds
xor
mov
cld
xor
shl
push
mov
lret
lahf
adc
mov
xchg
leave
jb
xchg
andl
cltd
xchg
ds
add
xor
popa
adc
das
shll
jmp
ficoms
dec
sub
mov
lods
ret
ljmp
pop
and
pop
popl
push
xor
sbb
xchg
pushf
icebp
out
sahf
fs
push
xchg
data16
dec
imul
lret
repnz
decb
push
pop
push
mov
sbb
enter
hlt
mov
std
imull
inc
mov
mov
xor
adc
pop
daa
adc
and
xor
add
cmpsb
dec
mov
stos
popf
jb
test
fcmovbe
pop
lock
inc
lea
cmp
sbb
int3
inc
mov
mov
xor
enter
inc
dec
jnp
sub
subb
jb
cmp
lds
bound
pop
sub
mov
add
repnz
outsl
sub
arpl
stos
int3
fisubl
scas
int3
loope
notb
or
mov
add
mov
xchg
ja
stc
test
lea
pop
js
and
outsl
dec
jb
sbb
sub
sbb
dec
jnp
test
addr16
mov
inc
scas
shll
adc
dec
in
sbb
out
cmp
cmp
add
mov
pop
jno
dec
xchg
and
inc
scas
loopne
add
xor
sarb
rorl
sub
pop
outsl
pop
jbe
and
cld
and
mov
push
roll
not
cld
leave
aas
inc
jno
xchg
mov
lahf
cs
inc
fnstenv
jmp
mov
xchg
mov
enter
pop
aam
cmp
repnz
sub
push
jecxz
pop
push
pop
shlb
inc
popa
mov
shll
std
hlt
inc
jmp
jo
and
xchg
outsl
or
and
mov
popa
push
adc
and
shrb
jge
insl
sahf
dec
leave
pop
mov
outsb
dec
sub
mov
daa
lahf
or
sub
or
xorb
jnp
popf
sbb
lahf
pop
lret
test
inc
push
sbb
adc
lods
inc
fwait
push
xchg
jge
dec
or
adc
or
adc
cmp
xchg
es
and
mov
and
hlt
pop
fwait
nop
lret
pushf
mov
mov
dec
mov
mov
es
xor
loopne
repnz
test
loope
sbbb
jne
hlt
mov
dec
mov
insb
mov
icebp
dec
jp
sub
int
nop
jmp
pop
aad
pop
mov
pop
dec
cmp
inc
insb
in
or
lea
add
pop
mov
add
test
dec
and
jns
inc
aaa
lods
fmuls
cltd
leave
les
sbb
jecxz
push
imul
fmull
fistpl
xchg
fwait
ret
mov
mov
and
xor
dec
ds
cmp
sbb
sbb
jns
sub
push
fsubrl
into
ret
or
push
jp
idiv
dec
fadds
push
fdivrs
je
fdivl
jae
clc
divl
jns
int3
cmpl
test
rorb
repnz
ret
out
push
push
jg
dec
fisubs
enter
fdivs
ja
xchg
das
stmxcsr
ret
repz
xchg
sbb
jo
mov
sub
ja
lock
enter
bound
arpl
cmp
jo
jno
aaa
inc
inc
scas
push
scas
pop
jae
jmp
jge
int
sti
test
jbe
or
imul
leave
jle
aas
inc
lcall
jnp
cwtl
push
mov
and
imul
scas
dec
mul
loopne
sti
xchg
popa
testb
push
sarb
pop
pop
stos
lcall
dec
je
jecxz
call
mov
lods
lahf
repnz
pop
dec
pop
sub
or
pushf
popf
jle
js
ss
mov
in
or
sarb
xchg
xchg
fnstsw
loop
adc
inc
daa
mov
push
push
xchg
negl
popf
jl
adc
loope
mov
cmp
pop
pop
adc
icebp
dec
add
inc
daa
sbb
and
push
xlat
insl
adc
pop
jmp
fsubs
movb
lods
and
ds
sbb
out
pop
fldenv
pop
inc
adc
sbb
ljmp
sbb
in
mull
pop
gs
mov
sub
ljmp
jg
adc
test
mov
dec
icebp
out
stc
rcl
cld
jmp
mov
adc
mov
pusha
adc
add
sbb
outsl
int3
aam
insl
inc
mov
mov
fmull
mov
xchg
mov
inc
add
xlat
mov
mov
and
mov
push
sub
xlat
test
sbb
xchg
popw
repnz
popa
cmpsl
cmpl
cli
mov
das
ljmp
pop
mov
scas
loopne
inc
js
xor
jg
push
out
xlat
dec
cmpl
inc
das
push
outsb
test
pop
negl
inc
inc
std
stos
fwait
andb
or
call
xor
xor
imul
test
movsl
fsubs
lret
lods
mov
popa
jo
mov
orb
xchg
pop
and
mov
dec
subl
daa
dec
lods
xchg
and
or
jbe
rcl
xor
jne
fisubrs
stc
leave
add
cmpsb
and
jge
push
sbb
cmp
push
mov
pop
xchg
push
cmpsl
mov
jno
test
sub
fdivrs
and
and
lods
xor
xor
lcall
and
mov
popf
aam
inc
ljmp
dec
sbb
cmc
cs
xchg
pop
clc
add
mov
push
aam
mov
inc
add
psrad
pop
mov
pop
jmp
cltd
mov
subl
mov
negb
sbb
add
gs
jecxz
dec
sbb
or
mov
imulb
or
sahf
inc
jo
dec
movsb
in
dec
loop
push
lds
dec
jl
jg
push
cld
inc
lods
mov
xor
jno
push
dec
lahf
mov
and
cmpsb
es
push
push
out
rcrb
push
inc
out
cs
aaa
fnstenv
sub
dec
push
jbe
xacquire
mov
hlt
add
add
jae
or
push
xor
inc
cld
mov
rol
jno
mov
stc
ja
leave
jns
cmpsb
cmp
add
vrcpps
pop
and
mov
jecxz
loop
mov
pop
cmp
ret
mov
sub
and
add
leave
pop
std
adc
push
mov
or
inc
mov
and
jl
jl
dec
xchg
and
cltd
fidivl
cmp
lcall
add
mov
fs
add
or
mov
rcrl
shll
fsubp
mov
andb
imul
int
loope
cmc
imul
mov
aas
pop
xchg
jge
lret
inc
lds
mov
imul
sub
mov
int3
fidivrl
pop
mov
aas
sub
sbb
gs
jecxz
aam
jg
stos
out
push
rclb
loope
sub
int
test
bound
fnstcw
or
adc
adc
xor
xchg
insb
aad
sub
dec
xor
or
or
sub
push
cmp
mov
imul
xchg
xchg
mov
jecxz
pop
repnz
cld
loope
pop
jge
pusha
imul
push
cltd
mov
jae
iret
rol
popl
dec
mov
outsb
mov
pop
add
fdiv
fmul
sub
xchg
mov
in
lods
dec
xor
mov
outsl
push
vpmulhuw
shrl
ss
inc
lcall
outsl
mov
or
adc
push
cmp
mov
xchg
dec
mov
std
flds
jl
adcl
and
mov
mov
mov
iret
in
ffree
cmpsb
andb
and
inc
inc
mov
add
aam
rcrl
and
and
adc
in
into
sub
jno
jb
mov
lods
xchg
and
in
adc
mov
push
out
inc
and
cmp
pop
pop
and
ss
pop
xchg
out
and
cmp
push
cs
movsl
mov
pop
test
adc
shlb
rcrl
pop
outsl
int3
cmpb
mov
adc
lcall
mov
sarl
loopne
push
xchg
loop
decl
pop
add
xchg
pusha
fidivs
xor
or
cmpsl
push
in
sub
andl
in
adc
data16
adc
xchg
mov
dec
mov
xchg
or
je
cli
adc
xchg
lret
popa
mov
cmpsl
xchg
push
push
fisttpl
mov
subb
pop
arpl
push
je
into
outsb
pop
leave
adc
inc
pop
pop
or
sbb
xor
addr16
xor
push
enter
push
xor
btc
cmp
imul
cld
push
mov
mov
xchg
push
pusha
daa
pop
add
pop
sub
fldcw
out
and
inc
cmp
push
int3
iret
mov
int3
cmc
and
mov
test
ret
fstpt
xchg
movsb
mov
cmpsb
mov
outsl
das
daa
push
push
sarb
and
inc
mov
sbb
outsb
dec
sub
dec
sahf
or
inc
jl
cmova
scas
outsl
sbb
call
cs
repz
mov
xchg
test
mov
test
dec
inc
lahf
imul
cwtl
nop
push
pop
jp
mov
mov
sbb
jne
lock
pop
scas
outsl
cltd
popf
ljmp
jecxz
sub
test
lea
aam
into
call
pop
fidivs
out
push
jns
jg
dec
lea
xchg
xchg
in
jl
inc
insl
loopne
je
pop
xlat
xchg
sti
insb
loop
sbb
and
mov
inc
out
lret
lcall
adc
sub
push
scas
sub
xchg
out
jp
nop
xchg
mov
or
mov
mov
shrb
cmp
sbb
mov
andl
test
jbe
push
add
dec
mov
pop
sbb
xchg
fwait
into
popf
sbb
enter
mov
push
and
or
cmpsl
xchg
cs
fildll
scas
push
xor
scas
jne
insl
xchg
mov
push
add
jno
popf
loopne
lods
sbbl
fnstsw
mov
test
icebp
sub
popl
cltd
ficoms
xor
pushl
jmp
in
jl
pop
jnp
inc
in
or
mov
gs
leave
bound
arpl
inc
cmpsl
sbb
js
test
sarb
shll
fnsetpm(287
mov
hlt
mov
xchg
stos
or
sahf
or
cmp
dec
pop
push
dec
fcomps
mov
jno
dec
mov
js
movsl
mov
cmpsl
dec
loopne
test
add
in
repnz
addb
and
sub
pop
int3
mov
mov
and
push
or
popf
sub
fstpt
add
insb
or
push
sbb
or
pusha
sub
add
jnp
or
inc
cltd
xchg
out
lret
arpl
ja
repnz
arpl
lcall
push
test
cmp
push
pop
ds
stos
pusha
jge
fidivl
movsb
mov
lcall
jo
ret
rcl
enter
pop
jno
push
icebp
lcall
xor
iret
jnp
ret
lock
cmp
dec
out
shl
loope
jecxz
lea
mov
mov
les
dec
sub
gs
push
cmp
xlat
xlat
adc
dec
imul
xchg
mov
sbb
sub
xor
sahf
inc
cmpb
mov
aaa
shlb
lret
ret
aaa
add
out
cmp
mov
push
adc
push
sbb
out
rclb
cmpsl
sti
imul
scas
pop
inc
insl
je
xor
mov
jbe
ss
jp
cmp
stc
or
sbb
xor
sub
sub
lahf
and
shll
and
fs
popa
aaa
hlt
daa
xchg
js
push
xchg
in
outsb
inc
sub
mov
xacquire
cmpl
int
cmp
rol
adc
mov
jg
or
incl
cli
xchg
lcall
inc
cmp
test
jnp
sbb
cwtl
aad
xchg
xlat
push
pushf
hlt
xlat
jno
fldenv
in
jne
mov
fwait
cmp
sti
mov
les
and
jnp
jno
outsb
pop
ret
push
or
lea
into
xchg
stos
or
mov
fidivrl
bound
outsb
iret
andb
enter
and
adc
push
ret
cmp
adc
push
out
sti
mov
sub
inc
das
xor
mov
aad
lods
adc
pop
xchg
xchg
ffreep
pop
sub
and
jne
stos
arpl
adc
dec
and
push
cmpsb
cwtl
pop
fwait
cmp
fdivl
das
lret
xchg
into
sub
jle
shlb
mov
mov
sub
xor
insb
push
iret
test
adc
sub
or
dec
icebp
sbb
jle
mov
and
sahf
mov
dec
add
lret
out
mov
pop
std
xor
into
push
mov
and
jle
ljmp
bound
arpl
mov
inc
bound
mov
jno
xchg
xchg
mov
roll
adc
sub
jbe
mov
lahf
sbb
xchg
fstpt
and
shll
push
bound
fsubs
loop
pop
sbb
xchg
jp
pop
pop
test
and
loop
dec
sahf
cmc
sti
mov
in
sub
push
ja
xor
pop
fadds
and
mov
and
test
test
push
pop
push
dec
sub
testb
out
icebp
xor
xor
clc
xor
pushf
xchg
leave
xor
mov
mov
imul
std
out
cmp
shll
movsb
adc
ja
jmp
mov
sbb
pushf
orb
icebp
scas
cmp
cmpsl
outsl
or
ret
sub
cmp
push
inc
jns
push
notb
orb
repz
xchg
xlat
outsb
pop
adc
pop
mov
aam
imul
push
xchg
jnp
push
lahf
push
hlt
pop
push
fbstp
arpl
gs
leave
dec
xor
into
lcall
repnz
loop
lds
mov
dec
ret
out
mov
mov
cmpsb
stos
inc
lea
sub
stos
mov
mov
cmp
or
or
sub
movsb
jne
jecxz
xchg
xor
incl
lods
xchg
mov
ljmp
sub
shr
loopne
fistpll
cmpsb
rclb
cwtd
cs
jno
jns
xchg
dec
jle
leave
cmp
imul
int
out
and
mov
add
cli
mov
aam
sub
enter
test
mov
xchg
dec
aad
cmc
sbb
adc
scas
sbb
movsb
inc
fidivl
push
mov
fsubrs
jle
lret
fsubr
in
rcrl
stos
jne
loop
jl
cmp
cwtl
adc
leave
xor
lea
mov
adc
sbb
outsl
movsb
dec
sub
sbb
dec
xor
out
lret
popa
pop
lcall
push
add
mov
or
or
xor
dec
mov
mov
pop
xor
aam
imul
jnp
test
hlt
xchg
jmp
cwtl
fnstsw
idivb
sbbb
push
xchg
sub
decb
ret
sub
xchg
cmp
cltd
call
and
xchg
int
xor
mov
icebp
pop
aas
sub
pop
ja
into
ss
xchg
aaa
rcl
fst
jno
pop
outsb
mov
fwait
in
push
inc
cmp
xlat
daa
icebp
roll
out
nop
adc
and
xchg
pop
adc
sbb
push
inc
dec
aaa
leave
xor
push
inc
xchg
xchg
insl
xor
sbb
sbb
mov
jecxz
addr16
out
or
insb
sbb
or
inc
iret
xchg
cmp
mov
jge
mov
loop
fwait
stos
js
flds
pusha
dec
inc
repz
pusha
sti
adc
push
xlat
jae
cmp
inc
adc
mov
shrl
mov
adc
push
sti
scas
or
ficoms
fdiv
push
lcall
jo
call
vorps
insl
rcll
adc
mov
movsb
or
mov
mov
add
std
dec
imull
push
sub
lea
cmp
xchg
xorl
mov
ret
lods
test
stos
add
aas
jne
inc
jmp
or
loope
int
mov
inc
lock
fldenv
out
cmp
cmpsb
mov
sbb
mov
jge
xchg
adc
jo
cmp
mov
ja
lds
ljmp
inc
pop
sti
cld
shrb
and
and
jne
pop
pop
fiaddl
rcl
sahf
mov
jnp
adc
addl
pop
inc
sub
pop
xchg
js
xor
and
int
outsb
fs
aam
inc
push
mov
scas
sbb
push
jnp
xor
xchg
pop
rcll
iret
subl
add
addr16
pop
insb
mov
jcxz
mov
mov
nop
int
addr16
cmp
xor
insl
testb
add
xchg
push
xor
lret
add
sbb
ja
loope
stos
pop
xor
xor
adc
out
jmp
xlat
aas
and
rcrb
sub
mov
movsl
mov
sub
outsb
es
adc
mov
out
popa
lret
mov
mov
pop
nop
add
data16
scas
dec
xchg
stc
scas
outsl
sarb
or
pop
insl
dec
iret
xchg
lahf
add
std
pop
aaa
dec
cmp
jp
add
mov
rorb
or
cmp
sti
arpl
es
cmpsb
das
xor
inc
pop
gs
mov
jg
loope
ret
es
ja
or
pop
mov
and
inc
mov
je
jns
mov
jnp
cli
lods
aaa
inc
dec
jae
icebp
sub
scas
mov
and
pop
outsb
lods
adc
or
addr16
in
nop
pop
shl
mov
aad
fdivrl
push
push
or
cmpsb
or
mov
bound
lret
add
jmp
les
sbb
es
das
jle
loope
in
sbb
push
mov
mov
sub
les
or
or
das
dec
ljmp
push
je
ds
jb
inc
sbb
call
pcmpeqb
sbb
repz
idivl
or
mov
sbb
adc
adc
imul
mov
int
sub
pop
ss
lods
and
sbb
add
xchg
sub
adc
int3
push
adcb
ds
aam
test
add
push
dec
inc
fwait
dec
lret
cmp
ja
add
es
sub
int
inc
movsb
xor
or
mov
lods
enter
add
push
insb
mov
or
idivb
cltd
or
out
ret
jg
stc
fst
cld
cli
leave
mov
fwait
jno
jbe
sbb
cli
movsb
inc
fs
mov
push
add
sti
xor
or
sbb
xor
icebp
and
imull
fucomp
pop
divb
mov
cltd
aad
ja
mov
jne
sahf
inc
pop
ret
mov
dec
sbb
sbb
in
and
nop
gs
dec
test
jne
iret
out
jns
push
loop
xor
push
psrad
shrl
mov
gs
sub
outsb
jle
inc
add
data16
xor
jb
or
cmp
pusha
pop
call
ret
popa
iret
dec
pop
out
sub
ficomps
ret
xchg
into
and
inc
sub
scas
loopne
dec
xor
mov
enter
mov
mov
nop
aas
addb
into
std
negb
lret
jp
lods
jp
mov
xlat
das
cmpsb
pop
shr
dec
scas
cli
imul
in
loop
push
push
fs
jnp
pop
scas
lahf
push
inc
mov
jae
push
flds
cld
test
cltd
outsl
sub
inc
fbstp
jae
fmull
cmp
inc
push
push
xchg
adc
bound
fcom
cli
jecxz
add
fstpt
jmp
dec
inc
je
adc
or
dec
xor
inc
dec
and
cmpsb
pop
mov
add
imul
add
lret
aas
loopne
lods
mov
push
fsubrs
xchg
xchg
fists
loop
divb
hlt
push
notb
mov
divb
sub
aam
jnp
and
mov
je
mov
sbb
dec
in
mov
xorb
adc
fs
repnz
loop
dec
lahf
cmpl
rolb
jns
pushf
fnsave
cmp
rcr
adc
mov
pop
pop
into
sbb
and
aaa
push
lea
jne
push
inc
xchg
in
mov
rorl
dec
pop
adc
or
out
push
fsubs
ljmp
xchg
mov
push
adc
jbe
jg
sub
xchg
cmp
stos
fucom
les
cmpsb
pop
lea
loop
out
pop
pop
push
and
daa
xchg
inc
int
push
movsl
push
lds
lret
adc
out
mov
and
mov
dec
repz
xchg
mov
mov
sar
sub
xchg
iret
movb
sbb
mov
jnp
pop
cwtl
push
mov
ss
xchg
std
rcl
dec
jo
call
scas
cmc
ret
mov
xchg
fcomp
je
and
dec
setns
dec
out
arpl
imul
cmp
or
rorl
sub
push
cmp
movsl
insl
pop
fsubl
push
add
jne
gs
adc
add
pop
test
add
in
jo
test
xchg
mov
pop
mov
out
mov
roll
xor
popa
xchg
fwait
jae
imul
lret
js
cmpsl
in
leave
mov
cld
inc
add
mov
jmp
xor
add
push
aaa
mov
pop
mov
jecxz
sar
sahf
stos
push
add
ficomps
xor
sbb
sti
int
sub
cmpsl
push
pushf
test
push
mov
pop
or
mov
dec
nop
sbb
push
jo
testb
rclb
je
hlt
orb
jecxz
dec
jb
lcall
sti
popa
pushf
inc
fwait
lods
loop
test
sub
sub
sub
ja
dec
inc
jg
xchg
inc
nop
cmc
push
mulb
shlb
add
sbb
lret
popa
cmpsb
xor
push
sbb
cld
inc
or
xlat
dec
push
push
cmp
jl
repnz
or
mov
push
fstps
add
mov
ljmp
hlt
loopne
out
nop
and
in
out
mov
loopne
sub
jecxz
cmp
divl
cmp
push
add
pop
sub
sbb
dec
pop
add
and
lahf
movsl
mov
xchg
mov
je
sbb
mov
jmp
in
xchg
push
imul
mov
shl
or
ljmp
outsl
lret
pusha
repz
popa
sti
xchg
xchg
cmc
repz
mov
adc
push
mov
pushf
xchg
fistps
cmp
inc
inc
lods
jnp
ret
jno
loop
cmp
fisttpll
or
xchg
aas
insb
xchg
inc
ss
lcall
xchg
xchg
jmp
lods
aad
mov
adc
and
adc
leave
hlt
cli
jae
add
cmp
sahf
lcall
or
xchg
pop
dec
cmp
test
adc
pushl
jb
mov
lret
sub
or
jmp
popa
and
xor
daa
es
clc
fnsave
mov
inc
xor
lret
add
cmp
fneni(8087
dec
xchg
fs
rcll
lods
push
dec
xor
iret
out
mov
and
loop
dec
les
icebp
mov
mov
lcall
aas
fsubrl
sbb
mov
adc
scas
xchg
add
iret
cmpsl
test
add
rolb
xchg
movsl
fisttpll
cmpsb
and
xchg
inc
xchg
mov
add
test
push
sbb
ja
les
push
adc
xor
xchg
lea
neg
mov
xor
inc
xchg
int3
addr16
shll
pop
add
adc
lret
and
push
xchg
push
lcall
fwait
mov
pop
and
int3
loopne
nop
xor
ret
imul
cmp
fists
jecxz
xor
mov
jae
push
mov
pusha
adc
and
pop
mov
sbb
aas
out
add
pop
sahf
inc
punpcklwd
iret
sub
mov
dec
ret
test
push
jle
add
insb
aam
int3
mov
inc
xor
push
ds
add
xchg
iret
xor
jb
dec
inc
cmc
push
lret
sar
jge
pop
xlat
inc
test
icebp
push
adc
or
xlat
jp
add
mov
loopne
jbe
push
mov
or
add
mov
out
mov
out
push
iret
repz
xchg
icebp
mov
dec
aam
int3
inc
cld
dec
push
jbe
scas
in
dec
pop
arpl
call
or
or
clc
cs
gs
jnp
sub
arpl
sarl
sub
inc
out
pop
mov
mov
mov
sarb
fcompl
iret
lret
add
jg
insl
icebp
jo
add
insb
fwait
ret
call
mov
loop
mov
xchg
icebp
cmp
pop
dec
enter
rcrl
cmp
pusha
mov
adc
inc
ficompl
in
add
les
ja
add
or
xchg
out
test
add
imul
fs
jno
lods
fstpt
adc
mov
sbb
push
push
das
leave
adc
cli
jp
cmpsl
out
pop
xor
pop
jns
lods
inc
icebp
jb
ror
cmp
cltd
mov
je
sub
sbb
pop
ret
aaa
jne
sbb
adc
mov
adc
xor
jecxz
adc
movsb
lods
enter
mov
addr16
sub
sbb
mov
mov
mov
sbbl
sbb
cmpsb
or
in
js
push
leave
sub
add
and
pop
inc
popl
ja
xor
scas
and
sbb
int
imul
xchg
rorl
outsb
push
dec
loope
clc
aad
cmp
insb
push
dec
adcl
pop
out
jnp
rclb
scas
cmp
mov
mov
rcl
stc
mov
push
mov
es
or
out
in
clc
aaa
adc
leave
sbb
inc
add
ficomps
sbb
adc
or
divb
sub
repz
stos
dec
sub
cmp
adc
and
push
xor
into
or
loopne
dec
scas
xchg
pop
into
sub
leave
mov
sbb
mov
push
sbb
add
gs
or
rorb
fadd
call
sbbb
jg
mov
push
outsb
jo
dec
mov
mov
sub
aam
cmp
mov
push
fists
xchg
lds
jmp
cmp
pop
or
add
clc
cmp
rol
test
arpl
fsubrl
adc
jae
add
sbb
mov
fisubrl
imul
pop
ljmp
push
nop
adc
scas
or
mov
mov
pusha
subl
mov
setge
mov
dec
mov
add
je
cwtl
mov
mov
iret
jg
mov
fstl
insb
arpl
jae
xchg
inc
fidivs
mov
test
xchg
cmp
sub
sbb
repnz
mov
imul
sbb
out
das
orb
mov
fsub
outsl
mov
add
in
icebp
jnp
xchg
aas
add
fldl
cmp
add
mov
mov
out
je
cld
lret
cmpsl
mov
pop
fs
scas
jp
sti
cmp
pop
es
dec
dec
pop
add
push
jno
sub
popf
mov
repnz
mov
cmpsl
xchg
rcrl
outsb
pop
dec
mov
add
xor
inc
rclb
pop
sbb
lcall
pop
js
in
mov
decl
test
mov
push
inc
cmpsb
lds
mov
arpl
mov
pop
jmp
cmp
inc
inc
dec
jle
and
jnp
push
rcr
pop
push
push
cmpsb
or
inc
jb
and
push
xchg
pop
cmc
mov
das
push
fldl
xchg
mov
mov
das
cmp
insl
xchg
enter
mov
adc
das
jg
push
push
adc
jl
hlt
jl,pt
push
mov
mov
dec
inc
add
add
cmpsb
out
pushf
sub
and
mov
lret
push
xchg
push
nop
arpl
add
cmc
in
aad
xor
xor
loopne
sbb
sbb
cmpb
dec
sbb
push
enter
xchg
bound
cwtd
into
mull
das
pop
mov
movsl
clc
imul
jae
aam
test
aad
fnstsw
and
rolb
int
inc
sti
adc
and
cmpsb
mov
pop
inc
dec
cmp
repz
jo
shrb
ret
in
outsl
popa
std
xlat
fistpll
pop
xor
ljmp
ljmp
push
pop
fiadds
ret
mov
lods
aad
or
adc
adc
mov
fmul
sbb
push
in
mulb
sub
insb
xchg
cltd
mov
sbb
dec
jne
leave
pop
lret
cmpsl
inc
xchg
sar
push
mov
mov
push
adc
aad
jo
imul
pop
add
adc
clc
and
outsl
ret
mov
add
sar
popf
and
pop
into
mov
adc
jl
xchg
cwtl
inc
decl
xor
mov
xchg
cs
dec
mov
cltd
jnp
pop
add
test
subb
sbb
out
cmp
sbb
das
scas
mov
push
shlb
inc
ret
clc
sub
sbb
pusha
xchg
push
jle
pop
mov
jb
pop
es
mov
mov
jle
repnz
int
add
push
push
subb
push
and
sbb
insl
cmp
subb
mov
mov
pop
mov
mull
cmp
loop
popa
ds
mov
sbb
aam
sbb
push
mov
dec
and
or
inc
icebp
push
mov
inc
mov
push
and
sub
push
or
xchg
push
inc
cmp
dec
inc
cmp
mov
mov
les
sub
xor
pop
shr
daa
scas
addr16
jae
into
mov
pop
out
dec
outsb
cmp
and
cmpsl
adc
and
out
push
cli
repz
std
pusha
mov
daa
notl
push
scas
into
pop
mov
lods
bound
les
jge
and
push
dec
push
push
add
mov
mov
sbb
jno
rep
repz
sbb
mov
inc
outsb
sbb
lret
adc
sub
jae
mov
sub
sub
or
shrb
add
mov
arpl
lds
aaa
adc
pop
gs
mov
iret
add
popa
mov
rorb
in
pop
int3
popf
push
mul
fwait
aas
stc
or
out
pop
or
adc
fisubrl
gs
sahf
fcomps
sub
dec
std
loopne
nop
dec
adc
dec
fistpl
add
ljmp
adc
sub
cmp
out
dec
std
cld
gs
test
pusha
movsb
or
xor
loopne
je
aas
lret
stos
cs
xchg
fstpl
push
or
xchg
loope
or
xor
sbb
cmovp
xchg
mov
push
cld
jmp
test
mov
push
lock
xor
adc
mov
iret
cmp
sbb
fidivrl
inc
fmull
pop
cmpsl
fisubrl
fs
jl
or
cmp
pop
mov
test
cmp
lods
sbb
dec
mov
xlat
cmp
jbe
std
and
sub
aad
daa
fwait
push
enter
fcoml
adc
mov
add
out
and
dec
jb
inc
mov
push
test
call
push
lret
es
mov
test
jnp
pop
mov
pushf
mov
mov
aad
jl
push
jle
loope
xor
cmpsl
cmp
leave
mov
add
dec
jne
sbb
xchg
fcmovnu
test
dec
sbb
pop
add
dec
in
mov
dec
lret
or
fidivrs
pop
fimull
fwait
addb
cmp
mov
push
jg
imul
jmp
int
and
jmp
mov
dec
fnsave
in
and
imul
std
sbb
fs
into
fwait
lds
or
imul
filds
outsl
cmp
arpl
rorl
imul
adcb
jne
pop
cmp
inc
rcrb
xchg
add
adc
mov
and
lods
push
adc
std
pop
xchg
into
sbb
std
into
scas
fs
fwait
push
lds
mov
pop
pop
sub
outsb
repnz
iret
or
mov
jecxz
aad
xor
pushf
int3
scas
add
xor
adc
jae
test
js
adc
sbb
stos
mov
lret
adc
mov
insl
sbb
movsb
aam
fdivrl
mov
push
fcmovb
sbb
push
adc
mov
lret
es
adc
ja
cmp
cld
js
inc
push
xor
sub
ja
cmpsl
sub
inc
gs
dec
nop
jo
dec
imul
and
mov
cmp
pushf
mov
int
mov
push
jae
adc
dec
mov
ja
or
aad
int
daa
loop
add
pop
rcl
gs
push
scas
push
dec
xchg
pop
mov
ljmp
push
dec
call
mov
sti
jp
and
mov
push
loope
or
or
jo
out
mov
lret
and
mov
arpl
mov
mov
push
add
jno
ljmp
push
mov
stc
pusha
leave
ficompl
or
sahf
adc
and
ficoms
aam
jecxz
loopne
stc
sbb
in
bound
fisubrs
out
jb
push
inc
push
xor
ljmp
xchg
call
mov
jae
inc
mov
pop
call
inc
jae
cltd
adc
sub
icebp
stos
out
mov
inc
pop
fstl
outsl
jne
loope
sub
pushf
cmc
cmp
stc
out
ret
aam
xchg
xor
outsl
repnz
xor
into
jmp
mov
or
shll
xchg
and
mov
mov
call
sub
mov
pop
int
mov
movsb
xchg
push
mov
popa
in
push
add
aad
fisubrs
push
nop
push
mov
mov
xor
dec
pop
fnstcw
xchg
jmp
pop
adc
movsb
outsb
insb
push
out
sbb
pusha
leave
add
mov
call
es
pushf
push
pop
cli
arpl
mov
inc
jae
loope
sub
mov
mov
outsb
std
push
pop
cmp
push
dec
test
fisubl
jmp
and
inc
fildll
sbb
jno
cwtl
repnz
cmc
push
pusha
add
xchg
std
or
or
rcr
or
fldenv
jmp
cmp
dec
and
xor
loopne
jb
add
out
fimull
faddl
data16
sbb
pusha
push
add
inc
ret
scas
mov
add
pop
xchg
mov
mov
repnz
in
loopne
in
lret
push
dec
pfpnacc
cmp
test
sub
aaa
xchg
or
lods
mov
pop
arpl
push
clc
mov
jmp
dec
lcall
cmc
loop
add
jle
roll
push
xchg
fcmovnu
and
dec
pop
out
je
inc
outsl
lock
jle
rorb
sub
fs
and
push
or
or
bound
mov
int3
jp
movl
pushl
sub
iret
dec
lcall
dec
inc
sbb
pushf
ds
mov
icebp
push
xor
mov
or
std
leave
out
jb
mov
pop
fstpt
stos
add
jnp
fidivrs
dec
popa
push
data16
inc
cmp
je
add
lahf
and
sarb
mov
cmpsl
mov
insb
xor
dec
out
push
xor
and
add
inc
jecxz
mov
cmc
into
xor
mov
mov
test
adc
les
movsb
add
int
sbb
paddsb
jecxz
lahf
stc
movsl
dec
adcl
sbb
add
lds
call
pop
xor
jnp
cmp
iret
jl
mov
je
fstps
je
mov
aad
mov
jecxz
and
cmp
sarl
outsb
fcmovu
xor
pop
push
les
popa
ds
xor
rorb
into
sbb
sbb
cmp
test
arpl
imul
inc
mov
aaa
mov
xchg
or
fcomip
mov
pushf
or
jmp
into
ret
xor
fists
xor
mov
mov
push
arpl
ret
cli
testl
mov
jb
or
or
add
das
pop
sbb
sbb
dec
negl
mov
test
sbb
xchg
cwtl
sbb
add
add
mov
cmp
cmp
jnp
cltd
mov
rorl
mov
cwtl
test
xor
stos
ja
dec
sub
fdivr
or
jo
int3
insl
daa
jnp
jo
or
pop
adc
add
pop
orl
fnsave
mov
mov
lahf
test
add
leave
icebp
inc
hlt
cmpsl
loope
subl
inc
jae
aam
xchg
and
jge
stos
xchg
lods
cmp
lds
fsubl
orl
pushf
mov
inc
sbb
adc
push
add
es
call
fsubrs
decl
add
add
cmc
bound
lret
mov
xor
out
lods
fnstcw
mov
mov
push
je
out
faddl
stc
and
xchg
ss
or
inc
ja
jb
ja
mov
nop
xchg
push
in
clc
ja
mov
dec
pushf
xchg
repz
ja
sub
fstl
pop
mov
xchg
int3
into
inc
pop
mov
addr16
lea
sub
outsl
into
mov
sbb
loop
loop
inc
popf
inc
sarb
push
test
loope
bound
out
inc
outsl
repnz
js
xor
xor
andl
or
mov
ret
cmpsl
mov
mov
repnz
dec
sbb
sub
rorb
jo
jg
mov
js
xchg
dec
xor
adc
jnp
push
aaa
cli
out
lds
cltd
inc
imul
div
add
add
lahf
js
mov
mov
enter
movsl
jmp
xchg
setno
push
cld
or
rolb
ss
jno
pop
and
and
pop
pop
repz
sbb
movsb
mov
cmp
mov
in
lcall
clc
pop
jae
es
test
das
cltd
adc
in
mov
into
push
imull
xchg
mov
push
mov
xchg
pop
hlt
test
notl
xor
mov
inc
dec
mov
mov
inc
sahf
mov
rcrb
loope
or
out
cmpsb
mov
cmc
ret
xchg
icebp
push
inc
cltd
mov
mov
adc
pop
lahf
sbb
ret
mov
and
jae
inc
xor
sub
scas
pusha
inc
out
push
xchg
push
insw
sahf
test
cmp
ret
mov
int3
jge
dec
cmp
repnz
lods
stc
push
dec
clc
push
aaa
fucomp
arpl
iret
ret
push
mov
jle
or
hlt
pushf
es
sbb
sub
sub
sub
jp
es
sbb
dec
sbb
fcomps
ret
xchg
cld
xchg
inc
cwtl
std
fwait
std
adcl
popf
cli
mov
cmp
cmp
in
push
push
ficompl
cmp
pop
cmp
daa
lahf
mov
push
xchg
les
lea
sbb
lahf
xor
mov
push
insl
pop
int3
push
xchg
mov
pop
out
pop
ja
inc
inc
mov
mov
pop
lret
or
cmp
xchg
std
sbb
insl
xchg
test
mov
mov
popa
jecxz
add
and
test
inc
incl
sar
sub
add
in
xor
lds
push
out
mov
or
xchg
pushf
sahf
push
jo
hlt
nop
pop
pop
dec
and
aam
bound
aam
sbb
pop
dec
stc
test
aaa
shl
clc
pushf
loope
add
cmpsl
cmc
lcall
out
push
jg
sahf
ret
fcmove
inc
mov
insb
sbb
dec
push
mov
aaa
jnp
jno
inc
jp
lret
fmuls
xchg
outsl
out
xor
int3
lret
dec
lods
inc
neg
or
mov
sahf
sahf
mov
out
push
add
inc
xchg
sti
xor
je
adc
arpl
subl
pop
pop
dec
and
sbb
fwait
sbb
jbe
adc
jle
ret
bnd
add
mov
lcall
nop
push
or
ljmp
pop
mov
xor
add
or
sub
xor
inc
jno
pop
add
dec
push
addr16
jae
in
sbb
xchg
rcr
sbb
bound
mov
and
mov
adc
inc
bound
fldenv
pop
jmp
ficomps
mov
jns
subl
xor
dec
or
iret
mov
and
mov
push
mov
fadds
xor
push
lods
xchg
and
jne
fucomi
sub
lods
lods
popa
mov
leave
hlt
xor
int
bound
nop
ficoms
fbld
mov
outsb
cmpsb
cld
pop
or
std
mov
cmp
dec
outsb
pop
in
enter
inc
into
and
xor
xor
lea
pusha
mov
jno
cmpsl
push
sbb
or
dec
insl
or
cmpsb
daa
mov
les
das
mov
add
daa
push
jecxz
mov
mov
push
test
and
rclb
jnp
cmp
cmp
inc
sahf
sti
sarb
pop
inc
imul
iret
jp
pop
lock
enter
jmp
push
cs
mov
dec
mov
pusha
xor
test
push
cmpb
ds
dec
cli
dec
xor
fnstcw
out
scas
push
sti
mov
stc
bound
jle
ret
sub
cmp
sbb
arpl
mov
jnp
mov
dec
cmp
in
mov
mov
popf
cmp
icebp
xchg
and
int
adc
lcall
jns
push
xor
or
adc
sbb
cmpsb
or
mov
sti
les
add
jae
js
out
sbb
inc
mov
das
pop
fiadds
decl
outsl
loop
xchg
stos
lea
je
test
jp
imul
xor
sub
jl
xor
loope
adc
xchg
adc
loopne
out
in
mov
mov
dec
cltd
ljmp
ss
cmp
jb
mov
mov
jmp
or
mov
adc
sub
mov
xchg
push
mov
xor
lahf
xchg
ds
push
and
mov
xor
jle
mov
push
dec
push
mov
bound
popa
push
adc
mov
dec
imul
sub
dec
mov
add
and
imul
pop
mov
sub
imul
cmp
jecxz
popa
mov
sti
outsb
or
stos
addr16
add
adcl
je
jmp
sub
jmp
cwtl
push
js
inc
test
pop
outsb
or
mov
mov
xchg
pop
push
popl
ja
fdivr
fbld
xchg
lods
ljmp
and
mov
mov
gs
ljmp
mov
jg
ret
fstp
and
xchg
push
mov
sbb
jne
addr16
inc
movsb
jnp
add
inc
sbb
push
pop
or
sti
adc
cwtl
inc
mov
mov
add
sub
inc
lahf
sbb
dec
xchg
js
jae
ljmp
xchg
or
mov
imul
cmc
push
sbb
lods
les
ret
lcall
insl
pushf
lds
or
fsts
in
jnp
aaa
fmul
mov
das
pop
adc
adc
cwtl
sub
shlb
rcl
xchg
std
jg
push
lret
pusha
lret
arpl
push
lods
decb
jl
mov
dec
pop
inc
sub
leave
shr
cli
daa
test
cmovl
int3
dec
cmpb
xlat
fs
data16
lret
adc
call
stos
loop
sub
mov
cmpsl
hlt
adc
test
pop
test
inc
push
arpl
sub
setns
inc
xchg
push
inc
sub
rcrl
jge
hlt
int
pop
aas
adc
xchg
or
dec
outsb
insl
mov
cmp
scas
mov
into
scas
mov
stos
mov
pusha
bound
dec
pop
lcall
adc
cmpsl
push
adc
mov
xchg
push
fstpt
pop
loopne
outsb
lcall
cmp
repz
adc
xchg
mov
mov
insl
aam
movsb
call
cmp
sub
push
loop
icebp
pop
test
call
pcmpeqw
jg
mov
push
lds
out
lods
sub
push
adc
cli
in
out
lret
movsb
dec
dec
fdivr
xor
leave
insl
push
push
lds
add
or
roll
lahf
pop
aas
xor
jb
mov
xor
dec
test
push
dec
lahf
nop
mov
fdivrs
gs
std
cmp
aad
stc
bound
ss
jge
sbb
insl
xchg
aam
iret
add
push
std
inc
cld
imul
les
dec
in
das
xorb
mov
push
out
cli
js
scas
pop
fldenv
neg
or
fimull
inc
int
pop
jmp
cmc
jnp
dec
out
jbe
test
xor
fsubrp
dec
pop
jb
dec
adc
ret
repnz
xchg
mov
mov
mov
int
sub
les
in
xchg
rclb
mov
rol
imul
bswap
xlat
mov
sub
fidivs
bound
pop
cmp
imul
pushf
in
repnz
jge
and
cwtl
imul
mov
lods
mov
mov
aas
cmp
daa
mov
lcall
les
test
js
lods
xchg
ror
mov
call
jp
fmul
movsl
or
xchg
lahf
sbb
in
fdivs
push
and
mov
inc
pushl
inc
cmp
mov
js
mov
iret
cmpsb
xchg
imul
dec
sarl
out
scas
jge
cmp
popf
push
push
sub
sbb
popa
mov
inc
pop
sbb
mov
mov
mov
test
notb
dec
mov
jg
pop
loope
mov
aad
lods
in
pushf
mov
mov
jnp
pop
int3
shrl
into
mov
pop
ja
jmp
imul
inc
sbb
push
adc
pop
call
lds
jmp
ret
ljmp
push
adc
jb
mov
pop
pop
mov
jg
jl
inc
jns
adc
jmp
mov
mov
jl
sbb
xchg
pop
xchg
in
imul
movsb
icebp
mov
rorl
pop
xchg
jne
imul
stos
cmpsb
adc
loop
les
adc
jmp
fcomi
dec
sbb
dec
and
test
jmp
out
in
int
mov
sbb
cmpsb
mov
cld
fcoms
pop
dec
mov
push
jle
xchg
mov
rol
ret
stc
aaa
outsl
mov
enter
es
sub
or
mov
lret
lret
mov
xor
mov
dec
lock
xlat
lock
mov
hlt
lea
dec
dec
xchg
cmp
pop
adcl
addr16
pusha
xor
inc
out
in
inc
push
loopew
mov
sbb
push
mov
xorb
pop
xchg
enter
add
pusha
sbb
jmp
inc
pop
mov
adc
cwtl
je
pop
mulb
dec
add
xchg
ss
das
pop
push
mov
inc
in
cmpsb
lret
es
and
cmp
sub
mov
repz
in
into
mov
inc
sub
test
add
imul
pop
sysret
lret
cmp
js
jnp
fcoms
stos
cmp
sbb
out
fwait
loopne
pop
or
adc
loop
cs
js
sbb
pop
jne
daa
int3
inc
inc
mov
adc
mov
pop
adc
pop
pop
enter
in
inc
cli
rorl
divl
sub
add
shll
sbb
sub
jecxz
scas
flds
or
add
movsb
cs
mov
les
rcll
inc
bound
test
and
insb
adc
outsl
scas
pop
decb
cs
xchg
xorb
outsb
aad
or
sub
inc
fsubr
push
in
add
jne
fldt
mov
sbb
lret
enter
inc
adc
add
scas
das
xor
clc
mov
xorl
jmp
push
std
daa
icebp
in
out
mov
xchg
cltd
out
and
jge
test
jge
loopne
inc
xor
insl
push
int
dec
or
cmpl
lret
mov
sub
mov
xor
fmull
sahf
rcrb
mov
ds
inc
popa
repnz
jns
fidivs
inc
mov
rclb
imul
ljmp
pop
out
mov
push
xor
xchg
mov
out
pop
rcrb
mov
addl
hlt
lcall
mov
sub
jle
or
cmpsl
mov
add
inc
outsl
mov
insl
jae
cld
pop
mov
mov
mov
jbe
mov
or
rclb
mov
mov
mov
cmc
cmp
mov
ss
js
push
or
insb
sarb
ljmp
push
call
cmc
adc
pop
inc
lret
sbb
and
outsl
xchg
dec
cmp
mov
xchg
enter
mov
aas
sub
movsl
inc
jge
clc
push
aad
sahf
icebp
int
jae
mov
test
and
fs
sub
gs
sub
test
mov
out
cs
std
lahf
or
sbb
mov
aad
dec
arpl
cmpsb
sub
das
icebp
pop
push
fstl
test
adc
pop
out
xor
mov
add
and
jle
pop
push
cmp
mov
mov
and
in
mov
out
roll
mov
arpl
fildll
mov
push
mov
aad
cmc
lret
ljmp
or
add
push
scas
add
outsl
inc
stos
movsb
sub
jle
inc
enter
sub
mov
xlat
inc
notb
scas
push
sub
xor
aas
ljmp
stc
icebp
jmp
nop
jp
sti
jno
imul
andl
xchg
shrb
repnz
mov
bound
mov
mov
jnp
pop
jg
ror
cli
repz
repz
je
adcb
mov
add
jl
push
mov
cmp
xor
jbe
mov
inc
nop
loopne
fwait
push
xor
aas
mov
add
pop
mov
cld
and
aas
sti
jo
outsl
dec
inc
sbb
sbb
sub
js
add
dec
mov
push
lret
mov
push
mov
fnstsw
aad
sub
arpl
cmpl
out
orb
pop
mov
mov
adc
cmp
lahf
popa
push
sahf
lahf
jp
ljmp
and
dec
dec
or
cmpsb
lock
int3
imul
pop
or
push
iret
sub
mov
xchg
nop
roll
jae
xchg
and
sub
mov
mov
cs
add
mov
xchg
movsb
aad
or
lea
leave
sub
outsl
outsl
sbb
leave
rcr
adc
pop
hlt
adc
jo
or
out
add
cmpsb
mov
sbb
add
push
lods
inc
push
sub
adc
mov
cmc
mov
dec
lock
stos
incl
sbb
xor
lods
xchg
aaa
sti
ljmp
ds
std
mov
aaa
inc
inc
shlb
push
push
stos
jno
les
cmp
xchg
jmp
jle
or
mov
arpl
dec
data16
negl
insb
outsl
in
popf
mov
adc
pop
jne
mov
loope
incb
mov
movsb
lret
jg
test
cmp
test
mov
imul
addr16
add
stc
add
jg
psrad
xorb
cwtl
xchg
jg
into
into
mov
bound
dec
loopne
cmp
test
nop
lea
data16
xor
mov
fs
xchg
dec
out
int
or
sub
jl
lods
jae
aad
rcrb
mov
call
push
xor
or
jb
cmpsb
bound
outsl
jmp
outsb
mov
mov
adc
jg
cmp
popf
xor
sbb
loop
enter
mov
aam
adc
jne
push
sub
outsb
push
jo
pop
sub
mov
mov
xor
xchg
cmp
cmpsl
and
lahf
xchg
push
lret
xchg
ljmp
cmp
dec
out
xor
cmp
rcrl
loop
stos
sbb
js
nop
inc
mov
sbb
push
test
out
inc
sahf
mov
mov
or
dec
or
icebp
jl
sub
jns
aaa
add
push
stos
pusha
mov
rclb
cmp
push
or
in
ss
int3
pop
jg
mov
mov
mov
jg
popa
and
sub
nop
sti
pushf
xor
aam
into
jg
pop
pop
call
in
jb
pop
add
std
cmovno
ljmp
mov
jle
popa
mov
xor
pop
scas
mov
mov
or
lret
push
xchg
fnstsw
fsubrs
xchg
push
shll
ljmp
jns
fiaddl
pop
jb
daa
imul
bound
cmp
xor
je
sbb
iret
fs
cmc
test
mov
and
insb
ss
xchg
inc
xchg
push
fcmovbe
in
cmp
imul
aas
xchg
sarb
xor
in
lret
and
mov
aam
leave
icebp
or
xlat
jns
int
imul
xchg
stos
fbstp
and
mov
or
ds
xchg
lcall
shll
dec
filds
push
popa
in
mov
and
jne
out
stos
cld
cli
cli
adc
dec
xchg
ret
mov
and
jne
cmp
inc
jg
outsb
inc
fwait
adc
and
mov
cmc
loope
pop
pop
add
push
test
je
andb
push
hlt
pop
pop
cmp
mov
js
push
lcall
sbb
scas
ret
ljmp
jns
orb
mov
test
iret
cwtl
fbstp
mov
push
ficomps
repnz
jne
mov
sub
push
cmp
clc
mov
pop
mov
stos
and
ss
ret
fimuls
fucom
jmp
jo
add
dec
das
mov
fwait
cld
and
jl
idivl
jmp
faddl
mov
out
mov
in
xor
sahf
lds
jns
xor
mov
add
mov
jmp
aas
movsb
mov
je
jnp
dec
adcb
inc
test
fwait
imul
sub
jp
xor
rcrl
push
mov
mov
lret
jae
push
pop
mov
les
mov
addb
jge
mov
push
pop
or
and
and
jno
lret
and
xchg
lods
mov
lahf
dec
mov
fiadds
lahf
inc
in
cld
jne
adc
flds
cltd
jle
add
inc
cli
cmp
fwait
jbe
outsl
inc
xor
jge
stc
aam
mov
ja
sbb
loopne
jmp
hlt
fistps
xor
and
jl
jns
add
pop
iret
fisttps
cmp
icebp
pop
push
das
and
mov
sbb
pop
sub
xchg
pop
nop
dec
sbb
shlb
xor
jl
hlt
arpl
add
and
imul
cmp
mov
xchg
xor
out
fldenv
lods
cmp
ss
or
cmp
bound
push
inc
fcomip
lds
mov
pop
nop
push
ret
pop
andl
enter
or
icebp
fwait
lcall
pop
pushf
jb
jb
dec
cmp
dec
cmpsb
imul
imul
icebp
add
add
jmp
dec
xchg
jno
lock
mov
pop
or
in
sub
dec
pop
addr16
jnp
xor
adc
dec
rclb
test
mov
sub
dec
rcr
loope
and
mov
adc
and
pop
add
or
mov
and
or
out
leave
mov
cmpsl
inc
repz
dec
and
sbb
test
iret
sbb
dec
and
test
pop
push
add
fs
nop
inc
sub
mov
je
in
push
ja
sub
mov
cmp
xchg
pop
lahf
dec
sub
inc
cmpsl
xchg
xchg
insb
mov
movsb
adc
mov
ss
jge
sub
inc
inc
push
repz
call
aas
std
icebp
mov
sub
dec
adc
data16
mov
and
or
sbb
xor
inc
xor
mov
xor
stc
fstpl
adc
nop
scas
dec
xor
icebp
xlat
fs
pusha
xchg
fs
aaa
sbb
shrl
lar
fmuls
sbb
ss
sub
les
cltd
aas
test
cld
mov
mov
xor
mov
sbb
out
imul
addb
movsb
push
xchg
adc
sub
sub
sbb
outsb
adc
xor
adc
inc
or
inc
popa
mov
std
lea
in
inc
iret
add
ficoms
loopne
shlb
mov
test
inc
mov
aad
imulb
ret
sti
xchg
ss
pop
les
jecxz
jb
mov
out
in
into
mov
sbb
xchg
push
das
dec
repnz
loopne
nop
lock
lcall
loopne
fs
mov
dec
or
mov
outsl
sbb
mov
je
scas
mov
xchg
or
fcomip
jmp
cmp
xor
add
xchg
xchg
sti
test
or
sbb
out
mov
hlt
das
test
inc
fcoms
scas
stos
adc
js
pushf
std
into
dec
jp
and
mov
mov
cmp
nop
in
push
nop
pop
pop
cmp
mov
and
push
mov
aam
repnz
mov
jo
and
jle
pusha
repnz
insb
lret
mov
in
xor
add
dec
stos
fsubrl
lds
popf
loopne
out
add
cwtl
std
mov
mov
pop
mov
leave
push
jae
cmp
leave
int
stc
and
repnz
ss
outsl
ljmp
movsl
sti
leave
pop
push
out
pop
js
hlt
aaa
jnp
mov
sbb
add
xchg
pop
in
push
lret
mov
in
and
shlb
xlat
fsub
pushf
dec
jecxz
push
popa
inc
push
or
les
lock
shrb
pop
xor
aam
adc
jmp
push
and
js
dec
inc
divl
aaa
adc
sbb
sbb
aam
adc
iret
push
mov
nop
pop
jno
ja
cwtl
cwtl
mov
movsl
and
push
xchg
cmp
in
cmp
fdivrs
push
pop
imul
je
and
sbb
cli
push
shrl
add
aam
cld
out
sbb
adc
or
outsb
aam
jmp
cmp
das
add
in
mov
mov
imul
jmp
jmp
dec
cmp
cmc
add
xlat
dec
leave
inc
push
shl
ret
xor
das
movsl
sbb
nop
and
in
mov
imul
scas
std
jecxz
mov
lcall
sub
aas
cmpsb
push
mov
push
add
xchg
push
jmp
adc
cmc
adcl
inc
pushf
iret
hlt
cltd
lock
imul
sbb
add
mov
adc
and
cmc
or
sbb
dec
in
imul
jle
pop
or
mov
sbb
jb
les
ficomps
cmpsl
sbb
out
push
fmuls
push
pushf
stos
pop
and
sbb
stc
xchg
jl
je
pop
stc
push
ja
pop
aam
adc
in
ja
lcall
cmpl
add
rclb
mov
dec
pop
sub
daa
lods
lret
sbb
sbb
lret
movsb
mov
sub
mov
sbb
add
push
add
popf
xchg
js
sbb
jne
cwtl
lret
mov
negb
push
sbb
cmp
lcall
jne
nop
jno
insl
jo
cmp
bnd
inc
andb
sub
mov
jp
push
aad
xchg
xlat
mov
cmp
jg
insb
nop
mov
sbb
cld
in
and
cmp
insb
push
popf
sbbl
in
int
xchg
add
mov
push
in
mov
sbb
fidivl
outsl
fimuls
push
mov
ret
mov
pop
mov
out
xor
es
mov
inc
cli
lods
pop
rorb
sub
sbb
repz
lret
bound
call
dec
and
and
and
mov
or
add
inc
insl
dec
iret
dec
add
repnz
dec
xchg
mov
nop
lods
dec
insb
adcb
mov
out
cs
cmpsb
adc
add
and
xchg
mov
hlt
loopne
mov
call
pop
mov
leave
insl
cmp
jae
fildl
mov
arpl
adc
movsl
or
or
inc
pop
jne
dec
push
jnp
enter
fwait
outsl
jl
inc
pop
fcompl
mov
in
cld
xor
pop
mov
insb
adc
testl
int3
inc
cmp
or
pop
cs
gs
into
mov
cmp
jle
jae
cmp
int3
add
jb
mov
sub
cmpsl
adc
and
in
mov
addr16
cwtl
jecxz
cwtl
inc
adc
pop
stc
mov
sbb
mov
push
stos
add
ror
icebp
mov
jnp
jle
jmp
add
stc
push
add
les
xchg
xor
lea
inc
outsb
xchg
mov
sub
sub
push
sub
fwait
stc
imul
or
or
adc
xor
xchg
addr16
fisubs
in
xor
int
in
or
movsb
adc
stos
fldt
ljmp
adc
sub
sbbl
pop
cmp
cmp
pop
dec
sbb
xchg
ror
xchg
push
in
mov
and
sbb
aam
je
sbb
or
pop
mov
cmpsb
cmp
and
lcall
leave
stos
sbb
montmul
cmpsb
test
insb
fs
popa
dec
int3
cmc
xchg
into
sar
xchg
xlat
fists
mov
das
cmp
inc
in
mov
lcall
lahf
or
shl
jecxz
xchg
push
push
int
xchg
stos
sbb
mov
dec
add
dec
sub
in
adc
cwtl
pop
fstps
jmp
js
add
outsl
clc
lock
add
push
sub
std
mov
xlat
sbb
cmp
iret
push
lods
push
cmc
sbb
test
das
cmp
jo
int
xchg
sbb
push
inc
pop
xchg
sub
jmp
stos
or
je
sbb
add
mov
fmuls
sbb
add
dec
mov
lods
sub
jle
mov
imul
pop
jecxz
dec
int
xor
mov
lods
sar
sbb
outsl
std
daa
aas
xchg
aad
mov
cltd
lods
cmp
jnp
cmp
jmp
pop
in
das
mov
sti
iret
mov
lret
add
arpl
pop
xor
in
repnz
inc
je
pop
loop
aas
and
and
ja
inc
fcompl
mov
and
clc
jle
sub
negl
xchg
pop
daa
movsl
jge
fs
outsb
adc
mov
lods
movb
stc
scas
mov
stos
addr16
jo
jns
xor
fldlg2
hlt
mov
rorl
sarl
jb
repnz
in
jmp
in
aad
xchg
call
imull
or
xor
jbe
insb
loope
cs
incb
outsl
iret
loopne
push
mov
pop
fistpll
xor
xchg
mov
inc
lods
lock
in
jno
adc
fs
fildl
cs
bound
push
mov
into
cmp
dec
out
cmp
xor
mov
push
or
ja
add
rolb
mov
loope
popf
jecxz
sbb
nop
in
dec
inc
out
roll
jbe
sub
out
lahf
int3
mov
sub
add
mov
pop
lods
icebp
mov
jbe
mov
into
leave
push
sahf
into
dec
out
add
cmp
adcb
or
lret
adc
fsubrl
add
dec
js
mov
add
fcomps
sbb
xchg
mov
mov
sub
ljmp
ljmp
call
push
xor
mov
push
jg
fwait
mov
pop
sub
loopne
sti
popf
xor
mov
sbb
movsl
pop
call
test
mov
test
stc
mov
mov
into
mov
inc
xchg
xchg
dec
add
adc
push
mov
pop
arpl
mov
mov
and
inc
addr16
or
adc
sbb
mov
in
loope
xlat
cmp
lret
add
mov
sbb
test
pop
rcr
adc
shll
adc
fnstenv
add
inc
fists
insb
ds
scas
pop
dec
lea
jb
adc
cmp
inc
int
sbb
dec
cmp
xor
push
inc
daa
push
es
rol
into
xchg
add
fnstcw
ret
mov
es
sub
out
in
sub
sub
cmp
or
or
int
xlat
arpl
sbb
scas
xlat
and
xchg
fdivr
mov
mov
outsb
mov
fcompl
enter
sub
add
in
out
cltd
inc
bndstx
mov
inc
or
fstps
jo
in
push
hlt
mov
inc
jno
sub
xchg
dec
pop
and
int3
cs
xchg
mov
dec
ficomps
ror
inc
mov
mov
mov
cltd
add
jnp
hlt
ret
or
stos
je
test
addr16
jne
inc
xor
lcall
adc
js
nop
pop
and
jb
movsb
scas
mov
lods
divb
inc
notb
dec
daa
test
jle
push
inc
push
jge
in
push
aam
or
aaa
aaa
add
in
loopne
cltd
pop
cltd
lea
adc
jbe
sbbb
lock
sbb
jmp
div
gs
ss
inc
rcr
jle
mov
mov
lods
orl
negb
fcoml
subb
call
inc
bound
repz
inc
fistpl
jb
pop
lret
dec
fdivr
mov
dec
cmp
mov
dec
fsubs
mov
fdivrl
lahf
add
add
movsl
popa
pop
or
mov
mov
shrl
inc
pushf
xchg
es
dec
sbbb
inc
ss
cld
sbb
mov
fnsave
sbb
aam
iret
js
push
pop
mov
mov
jno
fldl
dec
dec
fiadds
or
loopne
mov
loopne
jg
sbb
jp
dec
mov
mov
adc
add
jle
inc
ja
out
icebp
sub
adc
dec
jl
push
xor
cld
dec
les
jl
iret
push
xor
aaa
fwait
enter
inc
call
or
push
out
sub
inc
fmuls
lahf
sub
inc
jb
std
cltd
mov
xlat
shld
inc
xchg
out
fs
std
and
fisubs
pop
mov
pop
cmp
jecxz
mov
outsb
addr16
xchg
xchg
lret
sbb
mov
inc
push
jecxz
cmp
addr16
fisubs
dec
outsl
add
xchg
push
jp
es
xchg
rorl
dec
jb
push
mov
pop
push
mov
adc
add
div
sbb
rorb
jne
pushl
and
xlat
enter
lock
sub
sbb
mov
sbb
cmp
mov
sub
mov
mov
jp
mov
fsubp
pop
fcoml
jno
inc
mov
pusha
cvtps2pd
pop
jge
mov
cmp
in
sbb
inc
mov
cmpsl
jb
in
cld
mov
outsl
lods
andb
mov
mov
leave
or
pushf
xor
pushf
and
add
sub
fsubl
pop
or
fs
je
jecxz
mov
call
aaa
or
inc
xchg
and
sub
jnp
dec
aam
dec
rcll
lods
mull
repnz
mov
or
inc
out
test
push
xlat
pop
ror
jmp
push
mov
inc
imul
push
mov
leave
pop
scas
sbb
mov
dec
out
jle
xchg
cmp
std
dec
sub
jle
and
pop
lcall
and
xchg
xor
pop
mov
ror
push
mov
loope
lret
in
mov
repz
mull
stos
in
in
add
jp
imul
add
loope
test
rol
push
fnstcw
test
cwtl
call
jne
xor
sub
or
mov
imul
mov
out
push
pop
filds
test
aas
sub
imul
push
stos
decb
sub
and
xchg
xchg
push
inc
mov
cmp
sahf
aad
std
push
push
inc
lea
jp
jg
gs
or
dec
icebp
loope
adc
adc
mov
movsb
adc
insl
insb
push
out
jo
mov
das
or
adcb
aas
outsb
push
aas
adc
sti
jp
inc
popf
stos
and
addr16
push
out
pop
xchg
sahf
jl
or
mov
or
lahf
and
sub
dec
inc
xlat
push
adc
js
ret
test
haddpd
arpl
outsb
outsb
out
mov
cmp
loopne
stos
cwtl
inc
bound
loope
fistl
cli
xchg
sub
aad
mov
mov
push
or
shll
jns
cmpsb
and
push
pop
subb
hlt
xchg
pop
push
mov
adc
call
push
mov
pop
in
data16
mov
stos
mov
jle
pop
push
daa
leave
push
sub
mov
and
jl
and
sub
dec
out
push
pop
or
out
out
mov
mov
adc
iret
xor
insb
add
cmp
fstpl
ds
lds
ret
subl
mov
les
push
fs
push
cmp
adc
test
bound
xor
cmpsl
sub
adc
dec
cwtl
into
loope
add
inc
sub
cmp
lods
out
add
sub
sub
ficomps
testb
sbb
test
pop
push
cmp
dec
mov
test
jg
sbb
inc
mov
inc
mov
aad
je
mov
sbbb
insb
push
aam
test
and
push
mov
pusha
sub
lods
pop
mov
stc
sub
inc
inc
fsubrp
dec
pusha
pop
cvtpi2ps
mov
add
and
or
xchg
hlt
iret
dec
pop
ss
or
into
xorl
push
or
dec
push
push
mov
lods
test
cmp
cmp
in
and
jno
cmpsl
mov
adc
pop
push
inc
fadds
imul
cld
pop
xor
adc
and
aas
cmp
mov
jb
sub
add
cmpsl
jg
jl
and
adc
jo
test
stos
js
hlt
nop
cmpsb
inc
push
pop
insb
in
pop
sub
cmc
cmc
mov
dec
sub
jbe
xchg
out
lds
jo
jg
fwait
cmp
sub
cmp
xchg
cmpsb
inc
mov
mov
scas
fidivs
shr
push
pop
pop
jnp
or
aam
jle
sub
pop
bound
and
push
push
dec
pop
inc
imul
loope
out
gs
ja
or
sub
sbb
mulb
mov
jnp
xor
cmpsl
imul
and
test
lahf
xor
mov
das
sarb
mov
shl
icebp
mov
cltd
add
xor
sub
imul
inc
inc
sti
sbb
sub
or
or
jle
in
sub
dec
pop
icebp
sahf
push
mov
fidivrl
mov
pusha
mov
outsl
icebp
jbe
push
scas
push
aam
negb
les
add
add
clc
xor
inc
push
imul
inc
ja
dec
xorl
int3
pop
fwait
cld
popf
pop
and
cmp
adc
mov
sbb
push
pushf
ljmp
nop
jl
insb
insl
xchg
lahf
adcl
mov
push
mov
lahf
cwtl
or
xor
insb
rclb
in
arpl
mov
add
cmp
aad
leave
sbb
fstp
xchg
push
iret
sbb
add
das
cld
push
push
aaa
add
ljmp
bound
mov
mov
jae
sbb
mov
dec
pop
mov
cli
xchg
imul
mov
fbstp
dec
dec
adc
hlt
sub
cld
fimuls
dec
sbb
fnstcw
inc
jecxz
cmc
pop
cmp
sbb
mov
sub
popaw
sub
dec
nop
push
mov
in
mov
ret
je
add
push
jns
repz
out
fidivs
fildll
cltd
mov
push
mov
pop
js
call
adc
daa
loope
int3
push
negb
jl
int
inc
push
imull
ljmp
push
pop
mov
inc
dec
lcall
push
xchg
fiaddl
sbb
pusha
and
inc
outsb
or
mov
xor
int3
and
xor
jp
cmovl
in
jle
dec
pop
pop
je
inc
gs
ss
cmpsl
je
pusha
loope
std
addr16
rclb
js
test
cmpsb
mov
sub
sbb
or
fnstsw
cmp
pop
leave
xchg
jge
stos
rcll
or
ja
mov
push
pop
pop
subb
popa
es
xchg
gs
cmc
xchg
sahf
pop
ds
xchg
mov
adc
mov
or
push
push
dec
cld
xor
mov
cltd
dec
fstpt
or
sbb
scas
or
aaa
not
or
sar
dec
push
ljmp
jge
insb
lock
out
mov
xchg
std
jge
jle
sub
jne
pop
repz
or
in
jae
ja
repz
hlt
mov
add
lods
bound
jmp
add
cmp
sarb
in
push
inc
dec
inc
in
ja
pop
shll
shrd
dec
std
push
xlat
lds
or
jmp
jno
mov
pop
add
cmpsb
in
inc
inc
mov
notl
insb
mov
xor
mov
cmp
rcrl
and
jmp
add
loop
cltd
sbb
addr16
push
cmpsl
je
ret
push
adc
and
jnp
lods
sub
aas
adc
out
movsl
mov
leave
clc
idiv
push
mov
ja
xor
leave
je
mov
in
outsl
xchg
int
out
stos
sbbl
in
hlt
sbb
scas
mov
movl
scas
pop
adc
jmp
cwtl
cmp
dec
adc
inc
and
insl
jp
inc
repz
mov
dec
lods
or
mov
push
fidivrl
into
faddp
dec
pop
inc
gs
xorl
idivb
push
or
ss
stos
jl
in
xchg
stos
roll
jns
loopne
mov
push
cmp
xor
dec
imul
fidivl
ret
std
shl
enter
sbb
add
pushf
xchg
and
mov
jbe
pop
add
mov
cld
dec
xchg
and
out
jbe
inc
iret
jp
stos
or
and
dec
mov
dec
faddl
loop
and
push
cmc
sbb
in
pushf
outsb
ja
rol
mov
test
clc
mov
ljmp
xchg
mov
lock
mov
bound
jb
mov
mov
in
and
out
inc
sti
adc
stc
fs
ret
cmpsl
xchg
in
dec
jbe
sbbb
inc
jp
inc
addr16
shlb
jo
adc
fsubrl
adc
jmp
mov
outsl
add
ja
cmp
xchg
mov
add
adc
subb
xchg
mov
pop
inc
jg
nop
ret
outsl
pop
mov
popf
adc
pop
mov
pop
inc
insl
rorb
add
js
scas
xor
fidivrl
in
in
mov
aad
sub
jno
enter
mov
mov
pusha
push
and
sbb
jbe
lods
dec
dec
psubusb
cmp
movsw
sbb
xchg
and
stos
fs
out
inc
dec
les
fcomp
clc
pop
and
mov
pusha
cmp
push
sub
xchg
push
out
and
mov
aaa
scas
fs
aaa
push
ljmp
inc
dec
cmp
loope
mov
mov
or
pop
xchg
jbe
je
add
pop
data16
ds
mov
fdivl
cmc
comiss
out
std
ficoml
jno
mov
nop
jb
jp
cwtl
push
test
fdivl
shrl
mov
inc
int
xor
fmull
icebp
out
cmc
cmc
pop
outsb
dec
je
push
jmp
in
or
loope
shrl
adc
mov
jmp
jns
mov
pop
rol
jmpw
pop
arpl
xor
jp
sbb
iret
cwtl
sub
fsts
scas
pop
or
sbb
mov
push
mov
aad
cmp
adc
inc
inc
je
out
mov
loopne
fbld
pop
fs
push
or
and
xlat
aaa
jmp
pusha
xor
mov
in
sti
shll
test
in
mov
jno
pop
or
imul
scas
insl
sbb
or
ljmp
ja
xchg
stos
push
sti
roll
push
xor
jg
cltd
xchg
mov
mov
lods
fidivrl
xor
or
das
jge
daa
test
or
pop
into
mov
iret
inc
mov
jp
cmp
adc
mulb
stc
and
xlat
jb
push
mov
mov
push
rorl
imul
adc
inc
push
add
jns
sbb
or
cmpsb
jne
jns
add
test
or
scas
dec
enter
adc
repnz
adc
jmp
mov
xor
fmul
pop
mov
sbb
in
bound
add
mov
sub
pop
insl
adcl
lock
imull
mov
mov
jl
lahf
mov
in
pop
xchg
xchg
les
mov
insl
nop/reserved
lcall
insb
or
fsubs
pop
adc
mov
ljmp
jne
neg
cmpsl
cmp
dec
jle
lods
icebp
rcpps
in
push
sub
test
jg
out
inc
mov
outsl
or
and
fadds
mov
in
std
dec
out
cli
aaa
mov
cmc
loop
mov
cs
pusha
xor
test
fyl2xp1
shlb
jecxz
dec
repnz
rorb
cmc
push
push
xchg
cmpl
mov
xchg
sbb
jbe
loope
out
call
ja
addr16
ret
add
leave
push
add
cmp
xor
cmp
mov
popf
std
sbb
jns
jecxz
jge
pop
push
loopne
add
negl
test
repz
in
sub
xchg
dec
sbb
mov
push
mov
add
jl
add
or
movsl
cmpsb
mov
and
roll
lahf
insb
mov
sub
outsl
pop
jle
or
or
pop
jae
mov
out
mov
sbb
daa
mov
mov
icebp
subb
mov
xor
sbb
outsb
xchg
ja
mov
mov
push
data16
insl
xchg
and
in
repz
and
mov
lds
mov
xor
loop
adc
add
mov
mov
bound
pop
icebp
arpl
add
jle
sub
add
mov
add
lods
cs
mov
mov
out
push
xlat
push
outsb
xor
dec
cmp
cmp
inc
push
inc
insb
in
mov
jae
loope
add
hlt
mov
sub
rcrl
add
xchg
sbb
xchg
and
or
push
icebp
js
or
dec
mov
jl
pop
and
mov
cmpsl
jge
outsb
lea
push
cmp
les
mov
jge
jb
xchg
cli
inc
jo
ljmp
outsl
aam
imul
lods
popa
lcall
adc
lods
mov
lret
lret
cmp
push
and
ljmp
imul
dec
insb
sbb
pop
sbb
insl
jae,pn
outsb
ret
data16
inc
out
popf
cmpsl
stos
loop
scas
inc
lea
dec
push
rcll
adc
mov
movsl
lea
and
pop
inc
pop
out
std
jne
fs
loope
outsb
inc
xchg
ljmp
scas
mov
cld
inc
sub
repz
sarb
cmp
movsl
insb
call
aad
fwait
notl
scas
fmull
sahf
add
mov
inc
icebp
mov
xchg
mov
and
scas
xchg
out
push
fidivl
pop
or
cmp
jge
mov
sbb
lret
outsl
sub
sbb
jp
mov
push
jnp
loope
aad
cmp
jo
sub
add
ds
and
rclb
push
xchg
xor
ret
or
adc
jns
pop
sbb
outsb
push
and
pop
pusha
les
popa
or
xchg
into
xor
rorb
jl
ljmp
ljmp
fsubrs
add
push
cwtl
mov
sahf
fisttpll
push
mov
mov
or
adc
xchg
add
push
inc
pop
mov
mov
sbb
xchg
scas
fldenv
xorb
cmc
iret
in
lods
pop
add
mov
pop
push
xor
and
mov
shrb
mov
pop
mov
pop
xor
outsb
xor
pushf
fcoms
add
jnp
test
sbb
not
xchg
mov
sti
xchg
add
mov
nop
pushf
bound
insl
lods
inc
addr16
addl
jge
rclb
add
jg
test
fmul
ja
mov
pop
test
fcomps
adc
aas
movsb
fmuls
jle
outsl
sub
jle
popa
bnd
pop
xchg
jmp
popf
test
adc
lods
bound
mov
jae
jb
iret
mov
cmp
push
cmpsb
jle
hlt
dec
cmpb
mov
lock
push
dec
test
mov
or
lcall
adc
dec
cmp
add
jnp
xchg
mov
inc
xor
mov
mov
mov
dec
mov
jne,pt
dec
es
inc
xchg
fimuls
out
inc
aaa
icebp
shrb
imul
xor
xor
fs
mov
rorl
movsb
movsl
jne
repz
and
ret
dec
mov
test
jp
mov
mov
std
ss
orl
inc
call
adc
ljmp
leave
push
adc
add
icebp
ljmp
call
stc
out
push
or
push
aaa
loop
push
inc
popf
inc
or
bound
scas
icebp
sbb
push
addl
mov
jle
inc
and
addr16
cmp
jl
sub
cmp
pusha
cmpl
xlat
lds
stos
daa
cmp
and
lcall
iret
sbb
dec
jae
inc
fisttps
movsl
inc
or
fadds
mov
push
or
xchg
ret
mov
adc
mov
subl
jne
dec
test
dec
ja
or
xchg
pushf
mov
fistpl
cmpsb
push
scas
lahf
xorb
lahf
jne
xchg
jb
aas
push
lret
pushf
mov
lds
push
mov
inc
idivl
lahf
adc
jns
addr16
mov
cld
and
call
iret
bound
js
or
mov
dec
out
cmpsb
cli
in
xorb
test
pop
sbb
scas
pop
call
daa
das
sub
jae
xchg
in
sub
jno
in
or
pop
fwait
ja
jg
sbb
in
lods
dec
and
mov
cmp
cmp
or
cli
mov
cld
xchg
xor
shlb
test
fimuls
gs
inc
in
push
or
jg
loopne
sbb
push
fwait
adc
subb
pop
addl
xchg
mov
lds
clc
pop
out
nop
rcrl
xchg
fadds
je
push
sbb
gs
mov
std
test
fisttpll
sub
jb
fistps
outsl
inc
and
mov
aas
inc
test
fucomi
cli
bound
push
pushf
add
das
adc
inc
lods
mov
popf
out
fsubl
jg
pop
or
dec
xor
cmpsl
jl
test
mov
and
pop
sbb
mov
mov
mov
ds
adc
xor
lods
dec
or
jnp
gs
out
adc
adcb
xchg
pop
pop
cmp
cmp
cmp
out
inc
push
inc
imul
imul
pop
mov
mov
mov
outsb
and
fildl
cmp
ja
sbb
mov
imul
test
sbb
ffreep
out
lret
pushf
scas
sbb
and
and
shr
lods
pop
pop
call
adc
mov
mov
test
add
add
loopne
in
and
inc
hlt
popa
arpl
outsl
lods
add
jecxz
push
and
pop
jl
xor
mov
inc
popa
fwait
xor
icebp
dec
xchg
pop
push
mov
mov
ja
sub
mov
scas
imul
fsubs
bound
sbb
or
xor
lods
jmp
call
inc
adc
xchg
push
pop
push
mov
xchg
xor
adc
sbb
scas
test
jg
imul
cmpsb
fcompl
fwait
xorb
out
fisubrl
sbb
mov
ret
sbb
ljmp
sbb
iret
mov
imul
mov
shll
pushf
test
testl
lods
daa
cmpsb
push
lds
outsl
fldcw
xor
sbbl
push
shrb
repz
test
jl
mov
idivb
sbb
inc
cmpb
mov
loope
dec
loopne
int3
push
push
adc
pop
pop
mov
mov
lods
or
jb
mov
int
adc
mov
in
arpl
adc
adc
imul
clc
mov
jmp
and
in
pop
add
xchg
outsl
cmp
cmp
add
test
icebp
popf
pop
pop
pop
das
xor
imul
push
test
nop
sbb
mov
pop
mov
loop
pop
ljmp
pushf
pop
test
fldt
loope
rclb
jecxz
jo
inc
repz
insb
add
in
push
push
insl
xchg
xor
cli
test
pop
dec
lcall
lahf
jnp
pop
fwait
add
push
insb
fists
mov
inc
popf
xor
pop
imul
add
pop
cli
push
je
dec
in
imul
mov
pop
sub
adc
mov
sti
jecxz
call
rorb
lds
jecxz
cli
add
sbb
xchg
les
mov
and
fadds
dec
imul
fisubrl
or
jbe,pn
add
scas
sub
out
cmp
movsb
hlt
add
mov
call
xorl
hlt
jl
cs
mov
pop
cmp
aad
sbb
icebp
scas
mov
push
add
pop
repz
cmp
es
mov
push
outsl
dec
sub
cmpsb
jl
ficomps
repz
fsubrl
or
movsl
sarl
pop
xchg
in
mov
pop
inc
cmp
jp
loope
lsl
fldenv
xor
mov
mov
test
jge
inc
and
test
inc
cs
sbb
xlat
inc
xor
fcmovbe
dec
scas
scas
xchg
xchg
jno
fwait
outsb
dec
and
xchg
dec
xor
xchg
pop
iret
call
pop
imul
jecxz
mov
clc
test
movsb
mov
fwait
int
jb
dec
pusha
in
push
jge
sbb
sbb
popa
jae
sub
loope
decl
or
idivl
mov
in
out
out
sbb
in
movsb
xor
out
pop
mov
or
adc
jg
int3
and
test
adc
xchg
std
leave
mov
cwtl
mov
inc
jmp
inc
scas
mov
sub
lret
mov
faddl
sub
shlb
daa
in
std
mov
xchg
data16
roll
stos
lods
loop
ss
pop
nop
or
in
inc
iret
adc
pushf
pusha
and
inc
mov
std
or
pop
out
loope
push
mov
jg
dec
cmp
cld
lea
adc
and
dec
mov
fnstsw
mov
push
cmp
in
add
mov
movsb
ja
out
mov
cs
dec
test
ret
xchg
in
and
cli
cmp
cmc
adc
cmp
mov
movq
arpl
fnop
enter
sub
ja
bound
mov
lret
sbb
lea
add
or
das
arpl
push
cmp
mov
cmc
cmp
add
jns
fdivrl
aas
pusha
stos
jg
mov
hlt
adc
push
fwait
insb
adc
stos
nopl
or
andl
push
push
cld
je
and
loop
mov
mov
xchg
jmp
into
lock
pusha
add
leave
popf
fildll
nop
dec
inc
mov
lds
insl
dec
fwait
nop
jp
push
clc
jno
cmp
lods
je
lods
fmuls
push
pop
mov
inc
jg
popa
inc
das
cmp
mov
enter
jmp
in
mov
jl,pn
lods
cmovo
into
and
push
xchg
ljmp
mov
mov
adc
jno
sub
lahf
xchg
in
sub
jle
xorb
enter
sbb
push
rcrl
xorl
hlt
xor
test
push
cmpsl
adc
hlt
loope
and
call
mov
mov
or
mov
aam
enter
mov
push
fwait
add
sbb
insl
cwtl
movsl
add
loop
jns
inc
cmpsb
jne
iret
inc
jb
push
loope
sbb
lods
jno
jbe
xor
sbb
in
int3
fs
iret
dec
cmp
jge
mov
push
jge
lds
add
mov
inc
mov
adc
mov
iret
inc
mov
jp
lcall
xchg
cmp
jo
add
mov
add
add
addr16
jb
xchg
loop
jg
ret
std
xor
nop
jno
jb
xchg
scas
shrb
xor
sub
aaa
enter
mov
pop
push
mov
and
leave
mov
push
dec
nop
imul
dec
fwait
dec
in
jp
sbb
xlat
xchg
mov
arpl
hlt
clc
int3
stos
or
imul
mov
sbb
cld
pop
aam
push
mov
int3
dec
pop
jmp
in
push
daa
and
dec
sar
jmp
test
pusha
or
bnd
and
add
pop
ret
pusha
cmp
dec
imul
nop
shll
add
int3
enter
adc
dec
daa
outsb
mov
loope
inc
mov
insb
out
mov
addr16
sti
sbb
lcall
add
add
pop
into
mov
iret
dec
insb
call
aad
jmp
fstps
fsts
add
or
and
pop
popl
adc
xchg
mov
mov
adc
fcomip
xor
cmp
mov
xchg
mov
jecxz
xor
or
call
mov
cs
scas
nop
cmp
pop
rorl
pop
repz
mov
bound
sub
add
cli
pop
sub
scas
inc
ret
andb
insl
aam
imul
push
xor
or
ret
mov
push
call
sarb
movsb
adc
jg
inc
cmp
cmp
mov
push
jae
xor
fstpt
inc
ret
mov
mov
test
sbb
mov
loope
push
mov
or
leave
lcall
frstor
jbe
pop
scas
out
inc
jg
ds
in
pop
sub
push
loope
mov
popf
and
stc
mulb
negl
adc
addr16
mov
mov
movl
or
mov
xor
dec
lea
and
and
cmpsb
and
xchg
sbb
repz
push
dec
push
sub
out
dec
cltd
rcrl
xor
fldcw
mov
fimuls
jns
leave
repnz
fbld
nop
and
pop
loope
inc
or
dec
std
sahf
cs
sub
ja
jno
enter
data16
bound
xor
jecxz
push
jp
and
icebp
dec
mov
adc
add
jmp
push
xor
jecxz
ja
out
sub
push
inc
int
mull
out
sbb
stc
cmpsl
mov
sbb
mov
xorl
pop
lds
jp
jbe
add
sarb
mov
cmp
stos
in
add
outsb
cmp
xor
sbb
repz
outsb
outsl
out
cs
out
test
pop
fs
repz
mov
popf
xchg
in
cmp
cltd
popf
and
callw
pop
cmp
jno
cmpsl
lret
sbb
es
ja
pop
cmp
and
push
push
popl
mov
loopne
movlhps
jmp
or
in
push
dec
out
rorb
lret
lret
fisubrl
adc
sahf
dec
xor
jmp
mov
add
shll
or
add
into
add
mov
inc
sub
scas
ljmp
adc
and
cwtl
mov
in
inc
xor
xchg
add
stos
fmul
int
jns
xchg
lahf
mov
addr16
sub
subl
sbb
pop
adc
xchg
cmp
imul
ret
sti
xchg
jle
mov
adc
or
test
xchg
ja
lcall
ret
pusha
into
xor
cmp
push
sbb
ror
sbb
rorb
cmp
ljmp
jne
stos
rcll
push
push
jae
out
div
outsl
out
xorl
call
push
pop
loope
sub
mov
mov
xchg
pop
in
xchg
addr16
out
ret
mov
adc
pop
push
jno
aas
cs
lods
jnp
add
popf
mov
pop
shl
leave
xor
lock
subl
aam
cld
repz
push
cmp
loop
pop
pop
mov
packssdw
sti
push
test
jns
xor
shl
adc
adcb
mov
inc
outsl
cmp
into
fmuls
je
add
sbb
mov
iret
dec
push
inc
push
or
mov
push
mov
test
adc
popf
pushf
mov
push
mov
gs
loopne,pn
pop
test
popf
push
mov
stos
mov
push
lret
aaa
sbbb
pop
sub
insb
icebp
mov
xchg
in
rorb
or
daa
mov
shr
inc
and
outsb
sar
fmul
mov
push
ret
arpl
lods
xor
xor
jecxz
repnz
fadds
mov
pop
push
jmp
push
add
stos
les
cmp
add
ficompl
dec
out
aas
mov
sbb
xchg
stos
sbb
mov
adc
orb
loop
sarb
fsubs
cmpsb
xor
popf
jle
xchg
adc
sbb
jb
dec
loop
mov
lds
fmull
and
cmp
sub
sub
cmp
push
dec
inc
lock
xor
gs
or
add
mov
pop
add
pop
testb
adc
mov
jle
pop
scas
or
sbb
rep
cmp
jg
rclb
push
cltd
mov
mov
scas
lcall
pop
ja
int3
or
andl
aad
mov
sbb
mov
sub
dec
nop
in
sub
xchg
push
mov
inc
or
pop
es
into
push
mov
mov
ljmp
inc
or
mov
pop
adc
paddsw
adc
mov
nop
out
dec
push
lds
xchg
incb
push
push
lret
ljmp
mov
mov
addr16
xor
insb
sub
jge
mov
push
sbb
or
adc
mov
cmpsl
movsb
mov
push
adc
mov
inc
cmp
sub
in
or
pop
add
adc
loope
xchg
pop
and
or
inc
out
jb
jnp
xchg
sbb
leave
mov
loope
push
ficoml
js
ror
js
out
inc
cmc
imul
mov
sub
add
pop
pop
mov
cld
cmp
cmpsl
push
or
movsl
fmuls
push
push
not
fstps
test
add
adc
stos
sub
jb
loop
dec
aam
jno
pop
sub
or
push
outsl
xor
mov
add
add
pushf
call
dec
fmull
lahf
test
repnz
fwait
jle
xchg
rol
imul
dec
mov
pop
into
cs
sbb
pusha
jne
cld
inc
mov
xchg
sarb
add
xchg
inc
insl
packuswb
adc
jge
adc
test
adc
imul
mov
insb
lret
adc
add
sar
sub
call
cmp
arpl
or
cld
mov
shll
mov
ret
cmp
repz
adc
xor
mov
in
stos
pop
cmp
cld
pop
leave
out
enter
jle
sub
inc
adc
jb
xor
cs
inc
xor
push
imul
dec
hlt
addr16
pusha
fs
cs
mov
mov
js
outsl
std
bound
inc
fcmovb
dec
sub
mov
leave
xor
loop
shrb
lret
xchg
stos
xor
cmp
sti
mov
push
adc
sub
loopne
movsl
ja
add
aas
icebp
mov
scas
xor
add
push
mov
or
sti
mov
pop
enter
aad
repnz
loop
pop
sub
xchg
xchg
push
ret
enter
mov
fimull
xor
adc
gs
fstl
or
clc
cmp
aad
fistpl
add
fmuls
clc
in
outsl
ud2
movsb
ret
movsb
inc
ss
daa
push
loop
or
sub
cmpsl
xor
pop
xchg
push
out
and
mov
push
lret
and
xchg
nop
mul
stos
mov
clc
lahf
orb
fsts
inc
lock
repz
ror
ja
fimull
subb
xor
icebp
mov
dec
arpl
jne
jbe
shrb
rolb
mov
fistps
jnp
sbb
push
fwait
mov
loope
jo
pop
cmp
lahf
add
in
scas
jno
clc
sbb
cltd
in
scas
cmp
sbb
pop
mov
mov
adc
sti
cs
push
aad
cmpsb
add
cmpsb
jno
xchg
cmp
ss
or
jo
mov
sub
mov
dec
jp
mov
mov
pushf
mov
inc
add
add
push
and
mov
arpl
sahf
cmpsb
je
dec
inc
bound
dec
ljmp
inc
push
popa
add
mov
call
fs
or
dec
adc
inc
pushf
push
es
rolb
fstpt
aaa
test
adc
sbb
pop
sbb
dec
mov
dec
sbb
adcl
es
aas
mov
jg
mov
push
mov
ss
mov
ficoml
and
clc
jo
fbstp
push
dec
aaa
mov
fldcw
fcomip
out
icebp
dec
test
dec
pop
xchg
in
adc
lods
mov
mov
xchg
push
jp
sub
neg
cmp
xor
pusha
loopne
push
out
arpl
fwait
das
cltd
cmpsl
fs
pop
adc
hlt
enter
sbbl
xchg
popf
out
or
outsb
mov
lods
mov
dec
shll
and
movsl
lods
or
rcrb
mov
fwait
sbb
sbb
xchg
fcompl
add
pop
pop
out
or
lock
outsb
ds
xlat
pop
xchg
sbb
popa
ret
or
cmpb
shrb
mov
add
inc
sbb
push
sahf
sub
xlat
fwait
pop
jl
out
inc
push
cmpsb
ret
mov
movsb
stos
mov
or
xchg
sub
xchg
xchg
in
mov
ret
jp
aaa
inc
ss
add
stc
fdivrs
dec
outsb
xor
outsl
xor
jmp
dec
js
pop
xchg
cmpl
bound
add
cli
sub
dec
aaa
mov
xchg
push
mov
stos
mov
int
enter
dec
mov
jp
xchg
sarl
add
outsl
mov
rcrl
cmpsl
mov
enter
push
ss
inc
out
lcall
test
dec
jmp
dec
icebp
jb
push
cmpsl
sarb
test
cld
mov
scas
cmp
repz
xchg
inc
movsb
iret
lods
es
push
fsubrs
jg
fstl
lcall
inc
cmp
ret
mov
push
call
adc
cmp
mov
loop
nop
scas
cmp
mov
xor
mov
mov
and
push
mov
push
inc
mov
cs
test
add
xor
jg
int
cmc
sub
dec
jle
stc
fs
sbb
xchg
or
call
pop
loope
dec
dec
or
enter
mov
jg
jecxz
movsl
fstp
push
inc
scas
sbb
fdivp
xor
sbb
lret
lcall
ret
popa
xor
mov
fs
data16
jmp
std
jne
sarl
jns
inc
xchg
js
jns
add
push
dec
xor
aad
cmp
mov
dec
fldenv
push
sbb
fisttpl
stos
inc
idivb
or
cmp
out
sub
mov
mov
xchg
add
negb
jne
into
mov
lods
fld
andl
mov
mov
ljmp
mov
daa
insl
rol
fdivl
add
lahf
loop
pop
cmpsl
pminub
pop
pop
jle
test
jnp
lahf
jecxz
jle
mov
lods
jg
push
push
outsb
movsb
rcr
test
xchg
mov
out
pop
mov
nop
pop
fimull
adc
in
lcall
fsubrp
and
cmc
test
xchg
jmp
inc
in
cli
mulb
jp
dec
push
in
jb
add
mov
lahf
hlt
add
lods
add
pop
sti
add
pop
inc
lret
push
jb
lret
mov
movsb
mov
cs
pop
sub
pop
inc
push
mov
mov
lcall
lcall
fiaddl
ret
jnp
mov
shr
push
xorl
das
js
test
mov
mov
call
adc
sub
popf
sub
xchg
push
test
repnz
loope
popf
or
pop
jnp
scas
addb
sbb
popa
xchg
sub
imul
loop
mov
sbb
sub
sbb
clc
pop
data16
push
ljmp
xor
stos
in
pop
push
xor
adc
pusha
jo
orl
xor
aad
jae
xchg
mov
and
ds
in
mov
xor
insl
dec
mov
jl
frstor
adc
cmpsb
xorl
cli
cmpl
loop
push
leave
imul
push
jecxz
or
out
pop
jl
mov
cltd
xor
xchg
call
frstor
jge
xlat
ds
imul
sub
imul
lcall
stc
fidivl
add
push
test
loope
cli
mov
xchg
stos
insl
arpl
addr16
in
push
or
jno
lock
sbb
sub
mov
or
mov
add
out
stos
roll
in
subb
outsl
aas
sbb
jecxz
jne
pop
insl
mov
mov
pop
stc
lret
scas
not
inc
mov
insb
mov
aad
xchg
jo
push
sarl
jae
cltd
dec
mov
aam
lds
ss
and
mov
pop
call
xlat
sbb
fiaddl
mov
mov
adc
pusha
dec
and
dec
cmp
fwait
push
cltd
imul
and
mov
imulb
pushf
sub
jge
lock
push
adc
xor
or
pop
mov
int
fldt
or
mov
adc
dec
sar
and
ljmp
pop
insl
mov
dec
pop
mov
stos
mov
insb
sbb
push
mov
ret
ja
pop
ljmp
loopne
sbb
inc
push
xor
fdiv
push
push
getsec
sub
cmp
mov
mov
jg,pn
into
ret
mov
decl
cmp
out
adc
out
adc
push
sub
loop
adc
cmpsb
cmp
cs
mov
push
add
clc
pop
push
xchg
push
inc
adcb
scas
xchg
cltd
icebp
xor
cmp
loopne
sahf
imul
fisubs
mov
test
mov
xorl
mov
lahf
push
pop
sbb
mov
stos
inc
orl
movsl
cli
mov
pushf
and
fdivs
repz
sbb
sbb
stos
cld
inc
jo
cmp
cmc
rcr
lret
mov
das
mov
test
sbb
mov
push
mov
mov
into
test
test
aas
nop
pop
pop
add
out
push
or
insb
mov
faddl
jne
mov
mov
shlb
lods
and
stc
out
cmp
test
sbb
daa
test
in
mov
les
or
test
mov
push
pop
xor
jne
xor
or
and
sub
lock
cwtl
push
stos
pop
mov
cwtl
shll
inc
mov
push
loopne
sbb
sbb
cmpsb
loopne
push
fidivrs
pop
scas
sbb
sbb
je
cmpsl
sub
add
pop
dec
dec
loopne
clc
xchg
stos
test
or
mov
popf
lea
lret
orl
mov
imul
loope
pop
aas
aad
cmp
inc
aam
adc
int
push
filds
mov
sub
fs
std
adc
arpl
adc
push
sbb
adc
jp
jmp
sbb
push
pop
jp
sbb
xchg
pop
mov
test
dec
popa
jnp
xchg
int3
loope
cmp
mov
pop
and
aaa
xor
fisttpll
or
push
push
cmp
lret
pop
xchg
pop
enter
jns
cwtl
cmp
lret
ja
repz
lret
call
in
pop
lods
rolb
icebp
enter
hlt
dec
scas
cmpsb
je
lock
mov
xchg
popfw
rcrl
neg
xor
imul
sahf
popa
dec
push
lods
mov
fs
cmp
jmp
xor
sbb
xchg
stc
enter
push
popa
outsb
push
fildll
pop
dec
scas
rcl
pop
push
addr16
popf
xchg
jmp
cmpsl
add
pop
and
xlat
cmp
lahf
out
out
aad
leave
mov
sbbb
or
js
sbb
packuswb
into
add
test
push
add
scas
xchg
test
jmp
xchg
dec
outsl
mov
int3
lock
jmp
out
push
outsl
push
xor
insb
add
icebp
mov
sarl
mov
repnz
mov
out
jecxz
mov
jb
sarl
aas
mov
sbb
andb
cmp
jg
ds
mov
fsts
pop
int
mov
mov
js
fstl
loopne
fwait
lds
lcall
sbb
or
iret
in
je
mov
jg
out
mov
int
popf
push
jge
pop
stos
jmp
dec
fidivs
fsubr
nopl
push
push
pop
adc
xchg
pop
or
xor
arpl
mov
mov
cmp
inc
and
mul
or
jmp
lods
insl
gs
mov
into
fnstsw
pop
repnz
mul
in
or
xor
mov
leave
enter
cmp
push
movsl
mov
and
mov
stc
cmpsb
in
mov
mov
in
or
test
movb
push
or
mov
add
mov
lods
jge
lcall
jecxz
out
inc
xor
and
pop
nop
mov
push
cmp
roll
je
and
xchg
sub
mov
push
std
jb
sub
cmp
popa
outsb
subl
fildl
bndldx
xor
aam
xor
fisttpl
add
jecxz
mov
aad
dec
push
xchg
jecxz
adc
cmpl
inc
dec
pop
and
push
aas
sahf
dec
jge
fcmovu
xchg
cmp
lahf
repnz
aam
sbb
dec
std
cs
xor
xchg
scas
pop
mov
push
out
push
sub
scas
arpl
lock
bts
outsb
loopne
xchg
rcrl
xlat
push
mov
xor
add
mov
movsl
js
or
je
mov
inc
arpl
sti
mov
and
dec
mov
adc
je
out
out
jle
sub
gs
add
into
inc
xchg
mov
sarl
add
xchg
out
aam
test
xchg
scas
enter
int
testb
mov
scas
mov
outsl
xchg
cli
test
lret
mov
cmc
or
or
fs
cmp
dec
imul
xchg
lock
test
sar
dec
cmp
dec
mov
dec
js
scas
push
mov
fsts
insl
jmp
and
sahf
stos
mov
jecxz
lret
add
int
jne
dec
mov
mov
mov
leave
pop
xor
scas
outsb
sub
lods
movsl
cmp
jge
mov
out
ja
cmp
int3
mov
cltd
pop
test
mov
insl
add
pop
mov
sbb
xchg
xor
adc
cmp
pop
les
mov
repz
stc
add
mov
stos
loopne
jmp
sbbb
in
aas
mov
sbb
jmp
sar
push
mov
mov
out
pushf
packsswb
xor
cmp
mov
push
lret
sti
push
add
stos
fisubrl
popf
jns
and
or
fistps
sbb
dec
fbld
lock
out
hlt
in
fistps
push
jo
into
insl
cmp
adc
xor
inc
stos
dec
jle
inc
scas
sub
add
sbbl
shl
pop
push
mov
jno
jmp
mov
in
push
adc
or
and
test
iret
outsb
push
les
dec
and
push
test
stc
mov
mov
or
notl
inc
cmc
lahf
adc
popf
orl
push
push
xor
stc
dec
movsl
mov
add
shl
inc
mov
xor
cmp
fnsave
adc
mov
inc
cmp
int
fwait
lods
jb
add
push
outsb
in
ljmp
lcall
scas
fcmovbe
jb
sub
inc
push
mov
pusha
scas
aaa
outsb
sbb
sub
movq
std
jg
enter
sti
mov
fldl
pushf
notl
jecxz
jmp
das
lods
xchg
mov
sub
mov
das
mov
xchg
jg
pop
lret
lahf
pop
jnp
mov
movsl
push
sub
jg
xchg
jmp
cmc
imul
adc
sbb
gs
adc
fnsave
mov
mov
popa
loope
pop
cli
cmp
loopne
inc
shll
mov
loope
pushf
aas
aad
sub
hlt
fsubs
inc
lock
dec
ljmp
pop
aas
leave
jo
lret
mov
pop
sbb
fisubl
icebp
aas
arpl
and
addr16
fisttps
mov
push
pop
idivb
mov
test
je
test
xchg
push
fists
sbb
imul
or
adc
ds
xchg
cmpsl
cltd
iret
push
stos
je
lea
clc
jmp
mov
pop
lock
les
rcl
popa
in
inc
loope
or
pop
cmp
movb
sbb
imul
push
dec
stos
ja
gs
scas
push
fsubrl
clc
mov
faddl
movsb
sub
mov
in
mov
xchg
sbb
fs
push
sbb
frstor
pop
imul
push
xor
adc
lods
shlb
shrb
lods
mov
pushf
cmp
xchg
jp
ljmp
scas
jae
lock
xor
int
add
push
mov
fnstcw
testl
lahf
popl
push
dec
xchg
sbb
adc
out
dec
icebp
mov
sub
dec
stos
sbb
cmpsl
jae
jo
jne
cmp
mov
mov
mov
call
sbb
push
jae
fs
clc
jbe
xor
mov
jg
sbb
push
mov
popf
push
pushf
js
mov
or
or
push
jo
clc
stc
or
ja
jns
lea
push
adc
dec
imul
add
sub
mov
add
sub
push
sbb
xchg
xor
shl
sbb
outsl
or
mov
in
add
dec
pop
rcrb
popa
xchg
jecxz
pop
jno
pusha
outsl
movsb
imul
inc
test
fisubrl
leave
sub
dec
movsb
addl
jmp
js
push
cmpsb
sub
sbb
xor
adc
scas
pop
sbb
cwtd
jns
mov
sub
cmc
sub
and
jnp
mov
sub
xchg
lods
dec
and
sub
dec
testb
and
mov
jp
sti
xor
sub
pushf
cmp
in
sub
push
pop
ds
jnp
pop
and
jne
push
mov
repnz
sub
bound
adc
mov
inc
cwtl
push
sub
xor
jmp
lods
aad
jle,pt
mov
xchg
mov
scas
inc
loopne
cwtl
and
dec
jne,pt
sbb
push
inc
sarb
and
popa
jg
inc
out
clc
dec
subb
push
enter
jmp
lea
fcom
and
imul
bound
test
addl
dec
adc
add
add
ds
sti
push
push
cmpsl
adc
jl
pop
imul
xchg
mov
cs
gs
adc
cmp
insl
mov
adc
loopne
sti
shrb
fucompp
nop
mov
dec
dec
gs
sbb
popa
dec
mov
mov
and
push
mov
mov
scas
jl
sub
inc
cmp
lahf
in
jmp
xchg
fwait
mov
js
push
fbstp
call
cmp
stos
or
or
mov
jbe
insl
jbe
out
mov
jne
mov
adc
jae
xor
insl
add
cmp
aam
xor
jp
mov
jle
testl
mov
sbb
lods
movq
pushf
cmp
cltd
xchg
cmp
jo
lea
adc
push
test
inc
cli
jne
aad
push
sub
lods
out
lret
das
cmp
enter
sub
scas
pop
out
test
xor
jmp
adc
add
fs
in
sarb
jae
shl
shlb
mov
lds
and
shr
xchg
cmp
jbe
sarl
fnsave
fwait
xchg
xchg
mov
arpl
and
pop
fists
xor
or
decl
jmp
jbe
mov
push
pop
js
nop
xchg
sbb
stos
dec
fmulp
add
iret
stos
inc
mov
shrl
mov
icebp
sbb
sub
xor
cmp
push
out
jnp
jne
hlt
cwtl
pop
movsl
xchg
cmp
jne
out
jmp
pop
cmpsb
cmp
stc
and
mov
pop
jl
ja
lcall
pop
repnz
popf
insl
arpl
inc
shll
mov
lds
xchg
cld
add
iret
ljmp
ret
cmc
outsb
test
stos
mov
pop
pop
in
inc
inc
aaa
mov
stc
sbb
sbb
aaa
xchg
inc
fcmovnbe
mov
add
loop
sub
jbe
mov
push
dec
dec
out
sbb
lahf
sahf
js
jno
xchg
out
es
frstor
insl
adc
push
loope
mov
dec
popf
cmc
mov
and
pop
fcomps
xchg
adc
call
in
rolb
stc
xchg
push
icebp
push
pushf
outsb
loop
adc
mov
jne
dec
movsl
int
sarb
bswap
pushf
add
fcompl
stos
or
fistps
and
lods
jp
cmp
push
jns
pop
mov
mov
pushf
lods
cmc
clc
mov
cmc
sub
or
popa
lods
mov
jae
jge
push
sub
fcmovnu
lods
fwait
cli
cmp
sub
movl
in
ret
jo
test
adc
inc
pop
xchg
adc
mov
or
push
ftst
popa
in
push
ljmp
subl
jmp
and
dec
and
sbb
jns
xchg
sbb
xchg
dec
push
insb
add
pop
cli
out
dec
out
pop
mov
outsl
and
cmp
insl
lret
or
add
inc
xchg
rorl
mov
icebp
mov
pop
inc
in
adc
out
pushf
rorb
idivb
mov
add
jno
adc
subb
push
icebp
pop
cmp
aaa
cmpsb
js
push
daa
add
adc
out
dec
lahf
loopne
imul
inc
divl
bound
mov
xchg
cmp
sbb
and
aaa
in
add
adc
shrl
ret
gs
dec
dec
pop
dec
rol
mov
xor
out
pop
lds
lock
add
pcmpeqw
aas
and
inc
outsb
xchg
jnp
aad
and
mov
add
xor
mov
add
pop
loope
add
sbb
mov
imul
ljmp
jae
lods
add
fs
lret
imulb
mov
pushf
add
sub
cli
dec
jne
leave
ja
out
and
xlat
ret
sub
fcompl
bound
dec
lds
sbb
andb
and
fs
mov
shlb
push
lods
xchg
or
repnz
mov
jnp
mov
fcompl
cmp
mov
sbb
jb
mov
mov
cli
jg
sub
dec
mov
adc
fistps
out
lahf
divb
out
dec
push
jns
pop
int
pushf
call
popa
std
jno
out
ss
daa
jae
shl
dec
pushf
mov
sub
xchg
xor
mov
sbb
scas
inc
jmp
jl
dec
jns
xchg
push
push
mov
cli
jle
je
scas
rorb
test
aas
movsl
bound
testb
jbe
shr
pusha
mov
jl
dec
xchg
mov
xor
add
jge
push
push
push
clc
cwtl
and
jg
cwtl
test
xor
gs
addb
add
adc
je
jmp
mov
sbb
ja
push
ds
out
add
aas
xchg
lods
inc
cltd
int
pop
test
lret
xchg
xor
mov
inc
ds
cwtl
push
cwtl
nop
mov
push
jbe
je
mov
icebp
cwtl
mov
push
jo
mov
test
push
mov
cli
shrl
pop
std
fistl
rcrl
push
inc
or
dec
adc
hlt
pop
lahf
aad
cmp
mov
sarb
xchg
add
incl
push
movsl
sbb
test
adc
outsl
dec
inc
push
shrb
xchg
cltd
sbb
test
jge
fidivrs
fmull
pusha
ret
xor
clc
jbe
xchg
je
xchg
test
xor
fisttpll
push
mov
call
push
and
call
sbb
insl
lods
xchg
iret
inc
icebp
out
xor
div
mov
mov
int
and
scas
push
xchg
lcall
rolb
mov
push
jb
xlat
dec
cmp
dec
mulb
lods
cs
mov
xchg
incb
rolb
addr16
xor
rcll
jbe
stos
mov
rorb
stc
roll
jbe
inc
ret
inc
iret
cmpl
gs
les
stc
jno
sbbb
pop
sbb
loopne
mov
and
fmull
jmp
xor
adc
movsl
imul
and
aad
xchg
pop
push
push
scas
or
cmp
sbb
sub
cli
push
movsb
pop
out
xorl
mov
roll
push
mov
pop
cmp
and
aas
shlb
rcrb
cmp
fisubs
loop
and
mov
pop
adc
mov
loope
fs
aad
mov
add
dec
xchg
push
sbb
xchg
sbb
xchg
adc
mov
fwait
jg
mov
loope
cmp
mov
dec
nop
dec
cmp
icebp
pop
push
add
filds
mov
ljmp
cwtl
repz
jns
or
addr16
hlt
push
and
fsubrp
popa
lret
push
and
adc
adc
stos
or
adc
mov
pop
icebp
pop
xor
test
sub
call
push
cmc
push
cmp
rolb
add
push
lret
or
fmul
ret
shll
lea
ss
fildll
pop
gs
inc
push
jge
push
xchg
pop
cmp
and
icebp
push
push
cmpsb
mov
outsb
ljmp
push
sbb
lods
lea
test
mov
in
test
or
sti
cltd
and
ljmp
daa
mov
jecxz
mov
fwait
and
add
or
cltd
imul
mov
mov
inc
and
add
adc
sbb
addl
das
pop
popf
jno
sahf
negb
sub
inc
pop
rorb
dec
daa
and
jae
jecxz
mov
sub
ficomps
mov
mov
xor
and
dec
lods
dec
cs
push
pushf
pop
xlat
fsubl
mov
push
popf
data16
mov
pop
stos
aaa
adcb
jg,pn
jge
shr
clc
mov
in
test
ds
dec
xchg
mov
mov
rolb
xchg
dec
adc
jg
popf
and
out
iret
cmp
repz
xchg
adcb
cld
lea
sti
add
xchg
jb
aas
mov
mov
mov
repnz
cmp
in
mov
mov
mov
add
lea
jecxz
call
jmp
pop
add
inc
aam
push
inc
repnz
pop
clc
repz
fisttps
sub
inc
js
gs
in
cmp
push
xor
mov
in
ja
dec
mov
js
inc
int3
pop
insb
xor
or
fbld
test
std
outsb
jae
dec
scas
cmpsl
icebp
xor
mov
xor
lret
sub
xor
pop
inc
cmpsb
stos
xchg
and
leave
xlat
jns
pop
jae
add
sub
add
jp
cmp
sbb
dec
in
or
pop
inc
fildll
jecxz
lods
adc
xor
inc
jae
adc
loope
xlat
mov
cmp
xchg
push
push
mov
cmp
shrl
test
loopne
rclb
or
xchg
loopne
or
in
mov
orb
mov
fwait
ss
jge
jg
mov
test
xor
xor
fsubrl
adc
jbe
test
cmp
and
and
fbld
cmc
sbb
pop
mov
pop
jb
jns
xchg
stc
lcall
sub
jb
inc
xorl
mov
dec
rclb
mov
mov
jne
icebp
movsb
pop
cmp
jmp
lods
fmul
pusha
mov
ret
or
push
xchg
jbe
vmovntps
lds
adc
mov
lcall
pop
nop
dec
sbbb
adc
adc
xchg
inc
vpsraw
inc
ret
push
push
and
sbb
mov
dec
clc
pop
fidivrs
jl
das
or
sub
fisttpl
and
jno
loop
mov
cmpsl
iret
or
cmp
xor
imul
frstor
or
hlt
cmpsb
ja
jmp
dec
pop
popa
je
xchg
mov
mov
out
push
adc
push
xchg
cmp
ja
pusha
jle
clc
bound
cld
inc
outsl
cmpsl
std
add
mov
cmp
mov
sbb
fsubl
jae
imul
adc
jae
popa
adc
popa
ret
xor
ficomps
sbb
js
in
out
imul
std
lea
aas
sahf
insl
and
inc
in
mov
jmp
pushf
push
rep
loope
fadds
dec
outsb
shll
lret
jge
add
mov
loopne
add
mov
aas
loopne
lahf
mov
fsubrs
rcrb
cmpsl
jl
sub
dec
dec
xchg
mov
es
rorl
xchg
jecxz
dec
mulb
stos
and
cli
sbb
inc
dec
push
iret
inc
push
push
fdivrs
push
lock
lods
or
mov
or
les
jno
gs
mov
mov
imul
leave
cmp
rol
cld
cwtl
iret
jge
imulb
js
imul
push
scas
movsb
xchg
xlat
mov
mov
mov
and
cmpsb
inc
push
xchg
divl
jecxz
jno
cmp
dec
sahf
clc
jl
mov
rclb
and
popf
lret
or
aam
mov
cli
cmpsl
cmp
ja
mov
mov
xchg
jbe
add
ja
cli
ljmp
jne
fcmovb
add
xor
adc
ret
jecxz
test
mov
andnps
mov
outsb
push
mov
jge
lcall
lret
ja
fwait
idivb
push
push
xchg
repnz
or
jge
stos
sbb
ja
rcr
test
daa
rcr
push
push
mov
and
lods
aaa
lea
ficomps
cmp
or
mov
fstl
sbb
lahf
xchg
andb
incb
jne
test
in
adc
mov
sub
gs
je
mov
imull
mov
xchg
rcll
add
inc
cmc
push
pop
icebp
inc
dec
popa
repz
dec
xchg
mov
inc
jne
dec
mov
xchg
inc
ret
xchg
jae
add
ljmp
add
ret
mov
cmpsb
pop
addl
push
add
push
or
rep
xchg
loop
xchg
mov
std
add
push
gs
sbb
cs
mov
addr16
movsl
push
stc
inc
push
hlt
push
lcall
lcall
repz
xor
push
add
pop
int3
xor
js
daa
outsb
sbb
cmp
inc
add
mov
movsb
add
aam
lods
sub
repnz
ds
out
outsb
push
call
push
push
imul
enter
es
shlb
enter
rorb
out
inc
loopne
xchg
pop
shl
sub
testl
test
xchg
or
push
imul
ljmp
jp
and
mov
sub
dec
jg
dec
lock
sti
mov
mov
popa
xor
sarb
mov
dec
jp
dec
cmp
mov
mov
add
aam
dec
jae
sub
rcl
loop
sahf
mov
adc
inc
push
and
mov
ror
ds
dec
mov
jb
push
sbb
xor
in
fmul
pcmpgtw
and
notb
push
jmp
cmpsb
push
xor
arpl
sbb
cli
inc
pusha
js
mov
lods
mov
in
push
lahf
mov
daa
adc
dec
push
mov
leave
divb
adc
xor
mov
cmp
adc
jge
lods
cmp
std
pextrw
mov
sub
int
adc
and
call
shll
enter
ljmp
pop
aad
or
sbb
or
push
rorl
xor
sbb
cmp
mov
mov
and
mov
lods
jno
or
jne
mov
jno
popf
lret
mov
stc
mov
push
test
fs
pop
outsb
aad
in
mov
iret
pop
bound
test
test
jge
jno
sti
adc
loope
cli
repnz
sahf
adc
arpl
and
add
push
cwtl
stos
dec
out
outsl
pop
rcl
nop
aam
or
mov
dec
lahf
push
cmp
or
add
push
packssdw
shll
dec
mov
or
and
and
mov
and
push
stc
movsl
test
and
sti
into
sub
int
mov
push
cs
loop
repnz
add
loop
outsb
cmp
call
and
sbb
lahf
or
int
into
pop
outsb
push
addr16
push
push
rorb
push
inc
mov
daa
popf
outsl
fs
adc
or
je
icebp
aam
adc
or
stos
adc
ret
in
ret
clc
mov
es
cmp
mov
xor
add
adc
out
inc
mov
lret
loop
mov
cmp
test
in
xchg
ja
add
stos
scas
icebp
or
call
sbb
sbb
sti
js
xchg
sbb
sub
xor
mov
push
test
adc
aam
and
push
popf
popf
jle
movsl
xchg
add
mov
mov
stc
xchg
lods
and
mov
ja
lret
sbb
test
jae
imul
into
push
sarb
xchg
fdivl
out
in
out
arpl
clc
cmpsl
and
pop
enter
and
scas
mov
mov
test
fcmovnb
fisttpl
flds
add
aas
push
test
sbb
scas
dec
jl,pn
cli
dec
pop
dec
jbe
sahf
adc
xchg
adc
clc
push
lock
pop
jmp
fidivrl
cmc
push
add
aaa
pop
mov
mov
test
mov
xchg
aam
pushf
adc
cmpl
hlt
std
sbb
test
jp
push
cmp
mov
rolb
xchg
sbb
pop
in
mov
add
or
icebp
mov
adc
jl
aaa
les
inc
dec
inc
rcl
sahf
sti
mov
adc
and
mov
fstpt
jmp
icebp
xchg
ds
add
mov
std
and
lahf
inc
movsb
cmp
jne
test
rcrl
jmp
das
cld
test
cmp
push
loopne
mov
rol
pop
push
jp
je,pt
jge
outsl
xchg
xchg
pop
or
jns
jl
mov
rol
cltd
mov
lea
mov
shlb
jge
jbe
mov
inc
cmp
and
insb
shlb
lea
test
mov
imul
mov
mov
mov
loope
xlat
shrl
xchg
fdiv
pop
test
enter
jb
iret
xchg
repz
stos
xor
xchg
orb
mov
jae
std
les
pop
cmp
and
stos
daa
loop
and
lods
int
rcll
mov
mov
insb
repz
inc
push
xor
and
adc
mov
addr16
in
add
add
lods
push
lea
stos
cmp
cmpsb
push
test
shll
pop
mov
aaa
jno
push
mov
and
jl
pop
dec
or
iret
shll
andl
jle
jb
jmp
mov
rolb
repz
mov
test
mov
stos
pop
cmp
pop
call
add
in
jb
pop
enter
imul
add
push
cmp
adc
shrl
decb
mov
xchg
add
movsl
fsubrl
add
jmp
or
push
lock
push
lret
js
or
es
sbb
push
sub
andl
in
dec
negb
dec
inc
jp
mov
adc
dec
lahf
adc
pop
ret
vmptrst
jp
iret
pushf
jecxz
xor
repz
aaa
dec
pop
ss
ja
mov
adc
pop
xor
xchg
ret
mov
inc
sbb
aam
dec
and
imulb
mov
fisttpll
imul
jnp
cmc
ljmp
adc
mov
aas
adc
inc
jp
jo
mov
mov
xor
iret
fcompl
xchg
rorb
cmp
fwait
xchg
in
inc
gs
xchg
push
in
cmp
fs
rol
jle
sub
mov
dec
pop
jbe
inc
insl
and
pop
stos
push
xor
in
ss
push
push
loopne
add
mov
sub
sti
movsb
dec
shl
mulw
push
jns
repnz
xorb
ret
test
mov
and
outsb
mov
enter
fiaddl
inc
stos
push
aad
shll
ret
push
dec
fadds
iret
imul
or
cmc
mov
add
insl
mov
add
imul
out
xor
aas
add
leave
in
mov
inc
inc
mov
lret
cmp
ret
insb
stos
xchg
mov
push
ljmp
push
mov
pop
lea
inc
mov
popa
xchg
xchg
sub
sub
fucomip
push
hlt
pop
add
adc
mov
addb
adcl
push
loopne
push
mov
or
imul
cmp
push
xor
ljmp
inc
movsl
dec
jmp
into
jb
xchg
mov
andl
adc
adc
call
adc
dec
loopne
repz
or
sub
inc
fmuls
jmp
pop
and
and
out
push
mov
vmaxsd
sub
aam
dec
loope
cmp
popf
xchg
ja
cmp
jecxz
cmp
in
rorb
mov
pop
mov
fidivs
sbb
add
dec
lcall
fcomi
sahf
stos
or
xchg
imul
outsb
xchg
test
movsl
xor
into
into
jp
pop
mov
jge
test
leave
and
mov
jge
iret
cmp
adc
pop
dec
push
jmp
mov
jge
mov
and
cmp
mov
jg
lcall
cmp
scas
hlt
push
dec
aad
dec
sbb
lds
stos
aaa
jbe
xchg
jmp
cmp
in
sti
xchg
cs
jae
enter
pop
out
adc
sbb
push
dec
xlat
dec
in
rorl
inc
test
inc
pusha
mov
xor
sub
sbb
dec
sbb
jmp
mov
mov
mov
adc
push
ret
sbb
and
scas
mov
pop
and
dec
sub
add
add
adc
out
xor
stc
sub
dec
xchg
mov
mov
push
repz
mov
pop
mov
jg
ret
and
inc
scas
test
mov
add
stos
or
or
sarb
and
mov
mov
push
dec
cmp
inc
sbb
xlat
out
inc
mov
call
loopne
in
push
and
pop
std
pop
or
hlt
pop
pop
xor
ret
push
pop
into
add
mov
adc
mov
faddl
scas
std
cmpb
or
cmp
add
mov
in
std
imulb
pop
rclb
rorl
push
cwtl
call
out
adc
mov
inc
repz
jecxz
or
dec
imul
ret
and
xor
lcall
or
scas
lods
jnp
xor
clc
rcrl
lret
adc
inc
pop
int3
mov
and
sub
bound
jl
call
gs
xchg
in
mov
sub
sti
or
mov
lahf
mov
in
cld
lahf
rcrl
leave
xchg
dec
fistpl
lock
mov
movb
jecxz
ss
jle
sbb
and
loope
loope
jp
aam
or
jae
sbb
fs
stc
mov
loop
call
adc
rol
or
mov
nop
leave
sbb
std
push
sub
mov
adc
mov
hlt
dec
cli
jb
js
mov
cmp
push
cmpsb
mov
jae
cmp
icebp
fimull
push
jo
fcmovnu
jl
sub
xor
mov
cmp
aam
xor
xchg
adc
push
jle
sahf
nop
xchg
or
pop
lret
add
dec
stos
fdivr
jno
add
adc
roll
shrl
les
adc
aaa
sub
int3
pusha
loopne
pop
mov
lea
fsubr
iret
sahf
int3
jg
mov
nop
pop
cld
mov
dec
push
lcall
test
jb
xor
in
and
cmp
adc
inc
sub
ficomps
loopne,pt
add
je
push
cmp
or
dec
xor
xor
inc
fisubl
aas
test
mov
lock
sbb
mov
sbb
ret
push
mov
push
xchg
pushf
inc
and
test
inc
mov
outsb
mov
xchg
pusha
cmp
mov
lds
add
in
lcall
ftst
mov
ja
or
sbb
add
adc
data16
icebp
out
cmp
dec
stos
out
adc
mov
in
fsubrp
lds
mov
add
mov
mov
call
mov
addl
lret
lds
push
push
jno
push
movsl
icebp
add
pop
cmp
pop
rcr
psraw
pop
xchg
stc
add
jne
sti
sbb
stos
fists
xchg
lahf
push
pop
xor
je
pop
clc
jmp
int
les
mov
repnz
pusha
mov
xchg
jg
seto
cli
aad
sar
and
shr
inc
push
cmp
scas
cmpsl
jne
loop
add
jno
mov
push
mov
into
push
dec
sarl
scas
repnz
pop
adc
and
push
push
sub
xchg
mov
adc
jns
pop
jo
into
push
jle
dec
jbe
ret
lea
xor
xchg
pop
test
inc
cmp
rorl
negb
pop
xchg
movsl
sub
adc
in
adc
inc
push
push
sub
insl
leave
mov
dec
in
sbb
hlt
mov
sub
xchg
rcll
movsb
cmc
repz
xlat
jae
and
pop
orb
jmp
push
inc
hlt
sub
cmp
fisubrs
loope
daa
mov
out
or
sbb
imul
cmpsb
jnp
cmpsb
dec
inc
adc
and
fldt
or
stos
dec
daa
scas
mov
sbb
add
inc
or
lock
mov
call
mov
push
shll
or
jns,pt
mov
jo
es
jne
pop
sbb
scas
or
inc
and
mov
cmp
popa
add
xchg
rorl
dec
mov
cmp
jmp
vmovntps
test
jae
hlt
mov
dec
and
add
jle
dec
adc
mov
and
lock
jo
xchg
insb
add
pop
int3
daa
sub
add
lock
lods
clc
shl
clc
mov
in
sbb
outsb
jae
dec
cmp
jmp
or
leave
pushf
xlat
cmp
jl
cmp
pop
cmp
jle
jne
repz
cwtl
pop
sub
pop
xchg
dec
shr
fstps
scas
mov
pop
dec
into
lea
inc
sbb
adc
cmp
repz
xor
jns
lahf
sti
testl
and
and
mov
and
jecxz
push
jb
cltd
ljmp
and
arpl
and
arpl
pop
mov
add
hlt
pop
roll
jo
fwait
push
inc
cs
sub
xchg
add
fildl
pop
jns
leave
loop
lock
adc
mov
xor
mov
data16
jns
scas
jmp
mov
fiaddl
and
push
push
je
lea
out
jns
out
xchg
hlt
push
jge
movsl
cmc
pop
inc
mov
push
test
data16
push
pop
cmp
inc
std
movl
bound
ljmp
movb
lods
lock
loope
inc
push
inc
and
addr16
mov
xor
pusha
daa
std
ljmp
push
mov
sub
ror
fistps
int
repz
rorl
and
mov
sahf
mov
add
pop
movsl
daa
enter
stos
jno
outsb
push
in
dec
fbld
xor
xor
in
add
sbb
push
cmp
push
test
mov
lret
js
leave
repz
lock
lret
stc
jecxz
cld
stc
push
hlt
push
mov
cmpsb
add
dec
cmpsl
and
cmp
or
out
mov
test
cli
cmpsb
mov
push
adc
sub
nop
adc
sarl
mov
mov
add
xor
movsb
cmp
mov
rcr
lea
sub
or
shr
in
stos
shl
les
mov
xchg
roll
inc
mov
adc
pusha
lea
jae
xor
add
cmp
test
mov
sbb
outsl
fistpl
adc
shll
xor
xchg
push
fisubrl
inc
cmp
cmp
cs
lods
mov
gs
aad
shr
push
push
sti
dec
mov
sbb
and
stc
cltd
dec
xchg
dec
repnz
fisttps
movsb
xchg
in
mov
idivl
insb
loopne
add
mov
in
cmpsl
rorb
mov
icebp
mov
sub
mov
mov
adc
push
push
loop
or
pop
inc
lods
dec
stos
icebp
xchg
pop
lret
cli
lret
lret
mov
push
push
sub
invlpg
clc
xor
jle
mov
fildl
or
imull
pop
jecxz
rclb
das
push
mov
mov
push
lret
loop
sbb
jne
imul
clc
jno
or
fwait
mov
xor
push
je
dec
inc
imul
pop
decb
push
and
cmp
jg
adc
push
loop
pop
xlat
je
mov
xchg
jmp
sbb
insb
outsl
les
aad
mov
jae
ds
sbb
mov
mov
cmp
decb
lods
jo
push
lods
cwtl
js
inc
fildll
bound
shlb
sbb
andl
xchg
cwtl
jns
sub
pop
out
inc
icebp
imul
je
jbe
mov
jo
mov
adc
pusha
aaa
fistl
clc
mov
mov
lods
cmp
imul
daa
sahf
adc
mov
push
in
or
push
pop
mov
jge
xchg
into
cmpb
mov
test
xor
push
jae
je
stc
dec
mov
ss
adc
mov
test
jae
or
in
pop
adc
aaa
mov
push
and
adc
js
imul
pop
sbb
repnz
dec
xor
ss
cli
cli
cmpsb
or
mov
loope
xor
loope
lods
jmp
pop
jne
cmp
or
mov
fs
push
pop
fld
pop
push
jle
dec
xor
ret
scas
imul
add
outsb
out
lahf
mov
jbe
add
test
pop
push
push
lods
rorb
aaa
cmp
arpl
sub
sbb
xor
fwait
pop
scas
in
and
lds
sub
push
jg
mov
stos
or
pop
ljmp
xchg
or
mov
fisubrs
xor
mov
loop
jns
xor
push
lock
aad
sti
jge
test
jnp
pop
icebp
and
xchg
add
dec
fcmovnb
adc
mov
lahf
mov
loope
iret
cs
scas
pop
fwait
loopne
stos
ja
mov
imul
add
movsb
inc
sahf
imul
xlat
xor
mov
xor
sub
pop
and
add
sub
adcb
xchg
aaa
sbb
scas
pop
out
inc
dec
jecxz
sbb
inc
scas
aaa
jmp
jns
cltd
or
dec
mov
xor
cmp
scas
dec
jl
stos
scas
dec
mov
cmc
mov
inc
adc
push
mov
xlat
aas
sub
test
pop
xchg
sbb
pop
adc
pushf
sub
ret
imul
les
jbe
negl
mov
dec
test
lock
mov
clc
rorl
ret
pushf
js
push
stos
mov
xchg
std
cmc
cmp
cmp
or
fwait
xor
cs
inc
fstps
jb
lahf
fcomps
in
xor
xchg
pusha
inc
jg
mov
out
icebp
pop
adc
in
cmp
push
int3
negl
out
dec
loop
inc
fistl
mov
iret
xchg
iret
push
fstl
sti
insb
pop
outsb
adc
fsubs
sbbl
jl
movd
add
jo
cld
jmp
dec
test
mov
lock
notb
in
cmp
test
and
cmp
xchg
push
xchg
rolb
in
pop
sub
sub
sarb
fstpl
cmpsl
in
pop
sbb
aas
and
dec
rcrb
inc
popf
and
stos
add
nop
push
shll
add
mov
lahf
xchg
push
in
sti
outsl
das
pop
dec
aam
addl
and
mov
clc
push
adc
adc
sub
loop
lods
les
es
flds
mull
xor
sbb
dec
inc
inc
push
div
push
push
test
mov
ljmp
dec
push
cmp
or
jbe
mov
jmp
dec
aam
lods
xor
sbb
dec
gs
in
adc
pop
mov
scas
aaa
mov
sbb
mov
sbb
and
sub
adcl
adc
push
mov
mov
leave
adcl
push
pop
ror
inc
loope
scas
mov
imul
xchg
push
movsl
loopne
leave
jmp
repnz
int3
push
push
fdivrs
mov
cwtl
or
neg
pop
out
mov
sbb
shr
push
mov
pop
rcrl
push
sahf
push
jns
cli
mov
mov
sub
cmpb
xor
aam
mov
lock
push
or
push
daa
mov
and
sbb
stc
xor
jb
pop
pop
push
mov
out
arpl
jle
mov
js
outsb
in
jno
stos
into
xchg
mov
movsl
mov
ret
add
mov
pop
push
inc
jnp
lea
and
into
popf
dec
fbld
int
jae
push
jo
xor
xchg
fwait
in
inc
cmpl
adc
or
in
cmc
inc
and
rcrl
jne
jp
mov
ret
cmp
fidivrs
fistpl
mov
xor
jle
push
pop
test
addr16
cs
lahf
mov
iret
sub
sti
jns
xchg
push
mov
add
stos
push
cmp
push
xor
ret
cmp
sahf
iret
mov
add
fcomps
add
ds
add
lods
push
lock
sbb
lret
aam
es
adc
or
cmp
inc
xchg
call
call
mov
push
push
inc
pop
stc
loop
dec
lods
cmp
outsb
dec
jmp
mov
pop
lret
fwait
iret
cmpsl
and
add
mov
les
dec
pop
jb
pop
ficompl
lcall
fidivrs
mov
xor
xchg
pop
rcr
loop
cmp
in
sti
lock
in
test
inc
push
jmp
movsl
or
icebp
mov
mov
xlat
pop
xor
bound
mov
ss
jo
mov
test
icebp
pop
dec
aaa
sbb
lods
push
loope
xor
add
add
and
dec
adc
movsl
and
testb
cmp
aas
xchg
sub
jns
dec
addr16
cmc
push
pop
in
fstpt
lcall
mov
addr16
fwait
fwait
rcll
cmp
xor
xchg
mov
out
push
mov
enter
fiadds
mov
mov
fistpll
dec
jl
in
or
cltd
cmp
lahf
out
jge
lcall
mov
inc
mov
push
sbb
out
in
mov
mov
and
xchg
int3
or
ret
fs
mov
inc
jl
dec
pop
sahf
and
cmp
mov
leave
and
or
push
out
mov
sub
xor
adc
lahf
xchg
jmp
push
jmp
adc
inc
mov
loopne
cmp
es
sbb
add
fdivs
inc
popf
das
ds
mov
and
das
mov
xor
fistps
xor
das
mov
mov
sub
inc
test
or
fwait
mov
inc
xchg
in
jo
and
loopne
add
push
xchg
lods
dec
jl
insl
scas
sub
push
dec
cmpsl
adc
mov
test
lock
cmp
mov
xor
shrl
mov
jbe
leave
je
adc
shl
fdivl
int
sbb
mov
dec
push
testl
dec
mov
divl
xchg
cmp
icebp
adc
xchg
jmp
popa
dec
ss
or
call
xchg
pop
pop
dec
xor
cwtl
fstps
sti
std
jl
into
inc
enter
in
andl
mov
insl
adc
aas
movzwl
jmp
orl
sbb
fs
adc
and
testl
imul
test
hlt
data16
int
sti
cmpsb
sbb
xor
enter
clc
lods
adc
aaa
pop
aam
adc
push
stc
pop
jl
loop
and
jns
pop
stc
fs
push
mov
dec
lea
xchg
jmp
adc
cli
push
pop
push
jg
addl
out
mov
xchg
out
les
jmp
inc
mov
nop
mov
out
js
adc
stc
fucomp
mov
xor
setnp
inc
lcall
les
bound
rcl
in
je
add
cmpsb
inc
repz
decb
or
iret
pop
jmp
xchg
cmp
add
std
sti
pusha
bound
scas
fwait
mov
lea
push
enter
xlat
and
sbb
or
and
add
push
lock
dec
clc
xchg
mov
sbb
lea
les
sbb
mov
lret
pop
adc
push
sarb
sbb
les
insl
xor
mov
jae
jno
cli
mov
pop
xor
xlat
jne
insl
add
sub
lcall
movsb
pusha
adc
sti
arpl
pop
daa
in
rcrl
lea
div
stos
adc
dec
repnz
ljmp
dec
arpl
es
shl
mov
stos
dec
daa
in
or
scas
mov
movsl
lock
cmc
mov
jl
jl
xor
jmp
dec
adc
sub
add
outsl
ret
mov
lahf
pop
xor
sbb
xchg
mov
jno
arpl
subl
and
adc
insl
in
cmp
sarl
xchg
aam
adc
subb
lahf
shrl
jle
cwtl
cmp
es
sbb
jecxz
sbb
mov
xchg
int3
popf
or
pusha
repnz
sub
and
xor
lret
imul
sub
and
add
push
fldl
shlb
out
sahf
or
mov
dec
xor
pop
push
pop
jmp
push
test
in
aam
push
lret
nop
outsl
arpl
scas
testl
outsl
rcl
lcall
mov
aam
negb
push
pop
dec
xchg
or
and
add
rorl
push
fimuls
mov
lock
and
jno
push
stos
call
lahf
mov
push
push
out
das
mov
stos
aas
cwtl
mov
das
cmp
xchg
add
pusha
mov
stc
xchg
jne
xchg
pop
pop
jnp
stos
imul
cltd
mov
cltd
xor
daa
dec
mov
inc
sahf
addb
mov
or
rcll
call
sub
dec
pop
test
and
das
ds
outsl
mov
sti
or
push
aaa
dec
jle,pt
sahf
hlt
icebp
and
pop
cs
dec
imul
mov
jge
xchg
jae
and
pop
pop
xchg
push
xor
xlat
aad
ljmp
or
inc
push
notb
mov
daa
inc
inc
sbb
and
aad
mov
orb
push
sub
mov
les
add
loopne
dec
lock
mov
xorl
adc
dec
scas
sub
stos
mov
adc
jne
pushl
lret
add
mov
repnz
sarl
mov
popa
fs
into
out
dec
scas
jo
stos
adc
push
sarl
mov
push
dec
fs
pop
dec
faddl
inc
daa
movl
fidivl
mov
lea
cli
jo
in
push
arpl
jmp
or
jmp
mov
fisubrs
cmp
xchg
and
xor
mov
out
lret
jb
xor
sarl
repnz
in
pop
fwait
xor
pop
adc
inc
mov
or
cmp
sbb
push
pop
dec
es
mov
pop
mov
cmc
add
test
mov
ja
jecxz
data16
leave
call
outsl
xchg
jno
pop
fnstcw
movsl
icebp
lcall
cld
cmc
test
or
imul
lods
in
or
iret
mov
int
outsl
testl
lds
std
inc
or
push
in
lret
adc
mov
push
movb
orl
cmp
scas
dec
push
int
xor
mov
push
and
out
xchg
arpl
sub
es
test
mov
lods
jno
pop
pop
rcll
sbb
pop
push
negl
popa
mov
mov
and
add
mov
es
inc
imul
sub
loopne
mov
and
cmp
xchg
jp
int3
test
xchg
push
sub
arpl
inc
popf
daa
sbb
pop
fnstenv
ss
or
sahf
pushf
xor
mov
pop
sub
and
mov
loopne
jge
xor
pop
imul
out
mov
jno
mov
js
cmp
cmpsl
and
movsl
cmpsl
out
sbbb
sbb
mov
add
lret
pop
xor
lods
xchg
cmp
cmpb
bound
push
xchg
mov
cmp
inc
and
es
add
aam
insl
lret
out
xchg
ja
and
dec
fwait
subb
out
pushf
jb
push
stos
add
lret
add
rclb
push
lock
inc
lods
test
adc
mov
jle
aaa
or
lahf
les
pop
sub
scas
sbbl
inc
cmp
sbb
sbb
sub
adc
cs
jmp
add
jle
cmpsl
adc
adc
outsb
push
jno
test
jno
dec
popf
arpl
pop
mov
or
bnd
pop
adc
sub
mov
sbb
sti
mov
aam
outsl
sbbb
mov
jp
jg
lret
xlat
scas
fisubrs
dec
push
dec
mov
daa
xor
xchg
jge
ds
sub
adc
pop
xor
imull
xor
jmp
shll
test
scas
iret
fwait
sbbb
les
leave
sub
mov
cmp
add
pop
gs
dec
jne
sbb
pop
test
cmp
cli
test
pop
push
mov
pop
mov
insb
pop
ret
gs
test
xchg
ret
inc
into
iret
xchg
adc
ljmp
xchg
subl
pushf
fsub
ja
cmp
sti
out
cltd
rcrb
jns
aaa
div
mov
scas
stos
es
test
nop
mov
negl
outsl
push
fcomip
jns
lret
dec
sbb
popa
aad
or
add
cmp
cli
in
gs
shl
ds
leave
or
inc
popa
mov
cmp
mov
movsl
nop
jmp
fnsave
loop
pop
jbe
adc
aas
into
sub
out
inc
sahf
cmp
enter
cmc
cmpsl
push
mov
inc
insl
mov
leave
pop
jmp
sbb
cmpsb
pop
jg
clc
ret
jb
popf
bound
scas
loope
aam
sahf
sub
and
rcl
mov
in
push
out
in
popf
gs
cmp
push
xor
into
xchg
fisttpl
fs
pop
lea
mov
lods
or
cmp
icebp
or
ror
pop
int
sub
test
push
cli
enter
mov
cmp
stc
popf
outsl
mov
cwtl
sbb
push
pop
push
shll
pop
out
lret
fadd
jno
push
inc
cli
dec
or
cmc
rolb
lock
sbb
fnstsw
pop
xchg
loop
scas
inc
pushf
in
insb
sbb
sbb
insl
xchg
sahf
dec
lods
mov
sub
das
mov
mov
ss
adc
fs
pop
sbb
fstpl
add
repnz
push
and
push
and
cmp
aaa
inc
jge
lea
push
filds
pop
inc
in
adc
mov
mov
sbb
jp
push
cli
das
unpckhps
xchg
sub
xchg
push
add
mov
lcall
shll
outsl
mov
mov
rcrl
sub
mov
jecxz
enter
outsb
inc
pop
enter
lods
ljmp
mov
dec
test
pushf
xchg
push
or
lea
stos
mov
dec
cmp
idivl
mov
and
mov
push
cwtl
xor
flds
and
insb
insb
fs
xchg
popa
cmp
pushl
flds
xchg
dec
or
cmpb
mov
mov
gs
ret
fidivrl
ss
outsb
test
sbb
pop
xchg
mov
icebp
test
pop
mov
xchg
mov
sub
idiv
popf
push
add
pop
mov
mov
bound
ret
fdivl
adc
pop
mov
imul
cmpsb
lods
xorb
push
xchg
fldt
sbb
addl
adc
and
lods
inc
lods
lea
cmp
mov
ja
sub
adc
or
sub
inc
sub
loopne
fisubrs
sarb
stc
ja
jo
cmpb
sti
int
imul
push
mov
out
aaa
sahf
js
stos
imul
loopne
add
sub
testl
inc
lods
lds
scas
test
into
mov
cmc
add
test
inc
or
inc
jo
pop
jbe
sub
and
inc
xor
scas
rcl
and
in
jmp
adc
add
iret
dec
aam
adc
lret
cs
roll
mov
dec
mov
adc
cs
sbb
and
pop
dec
cwtl
movsb
or
cmp
popa
out
mulb
sub
pop
ja
cmpsb
jnp
mov
orb
bound
loop
push
dec
scas
mov
ljmp
test
push
icebp
or
jmp
or
inc
sbb
or
int
sti
bswap
in
cmpsb
pop
add
ret
inc
aam
arpl
cmpsw
gs
mov
imul
mov
xchg
pop
push
pop
fdiv
mov
sbb
clc
jns
pop
cmp
fldt
in
cmp
sbb
jmp
cltd
out
das
std
pop
inc
inc
fldt
add
js
frstor
and
imul
pop
std
cli
int3
lcall
enter
jbe
js
sbb
or
inc
popa
test
add
out
sub
mov
sbb
fidivl
push
insl
in
cmp
fmuls
push
mov
xor
out
add
lret
sub
inc
mov
fistl
adc
mov
push
out
xor
sub
ljmp
mov
lock
enter
jnp
and
stc
push
sbb
cmp
movsl
xlat
cwtl
mov
je
gs
clc
mov
add
mov
jl
lods
test
jmp
adcb
imul
pop
mov
loopne
movsb
jecxz
jmp
js
jge
sub
inc
inc
mov
jo
mov
inc
loop
pusha
add
ss
sub
pushf
sbb
test
outsl
mov
call
clc
dec
inc
std
shll
call
jmp
push
movb
sub
js
test
pushf
cmp
jns
or
clc
sbb
inc
mov
fmul
push
push
lret
jmp
cmp
mov
and
dec
xor
xor
subl
sub
fidivs
mov
shlb
testb
pusha
or
pop
xchg
jnp
mov
shr
push
push
fdivr
mov
in
sbb
jmp
dec
leave
fimuls
ret
mov
xchg
in
mov
mov
mov
xchg
jne
jbe
mov
popa
lret
sbb
mov
inc
and
mov
xchg
jns
test
clc
cli
hlt
aaa
or
push
cmp
scas
or
cld
lahf
hlt
and
dec
push
mov
xlat
das
cmp
adc
xchg
not
dec
fs
push
push
ficomps
jmp
xor
mov
xchg
out
jnp
jmp
cmp
push
outsb
xlat
pop
insl
das
sar
and
jo
mov
lret
mov
dec
add
lret
push
cwtd
popf
sbb
add
xchg
scas
xor
mov
popf
jno
inc
dec
testb
outsl
fcompl
pop
movsb
and
mov
cltd
lret
or
imull
or
sbb
push
and
int3
sbb
iret
bound
das
mov
and
int3
xchg
cli
lods
adc
stos
je
dec
call
negb
xor
divb
test
xchg
mov
mov
xor
loopne
bound
fs
outsl
in
es
mov
adc
lock
mov
cli
nop
cmp
dec
lahf
add
sbb
mov
jmp
inc
xchg
jge
cltd
add
inc
xchg
lcall
sbb
icebp
test
sbb
ret
pop
rcl
mov
sub
xchg
push
lea
stc
call
cmpb
add
out
or
popa
pusha
pop
jp
xchg
pop
pop
xor
mov
sub
sub
sub
pusha
movsb
call
std
aas
xor
sbb
ret
ficomps
es
push
jp
or
cmpsl
testb
and
xchg
or
sbb
andb
xchg
mov
sahf
xchg
jmp
add
fld
lcall
dec
add
and
lcall
jae
jecxz
repz
xorb
adc
ja
or
inc
call
inc
stc
xchg
push
fs
mulb
mov
add
js
call
inc
mov
mov
incb
pop
cwtl
call
push
insl
push
xchg
fmulp
arpl
mov
daa
push
je
das
andl
aam
push
lret
add
jg
decb
clc
xlat
or
scas
shlb
add
lret
shr
push
jo
pop
mov
cmp
imul
leave
pop
fwait
gs
add
fisttpl
ss
dec
mov
in
fidivs
jp
idivl
aam
xchg
adc
test
inc
or
pop
shr
ss
adc
sub
mov
iret
jg
xlat
inc
lds
rcr
inc
mov
and
cli
nop
in
add
inc
imul
mov
arpl
add
mov
or
sub
jne
pop
push
lods
jno
ds
inc
sbb
mov
dec
lock
rcrl
es
div
mov
ret
mov
xchg
jmp
pop
sbbl
or
sub
inc
nop
cmp
outsb
adc
adc
mov
addl
jno
pop
loopne
dec
inc
mov
test
ds
out
sbbl
pop
clc
test
push
mov
scas
bound
test
jmp
fcomps
leave
jmp
cmpsb
out
mov
aad
jecxz
sti
add
mov
or
push
fistpll
mov
cmp
mov
aam
int
sbb
repz
inc
ljmp
lahf
setae
imulb
loop
scas
arpl
mov
cwtl
inc
test
cmp
mov
mov
sub
mov
in
lcall
jg
imul
addr16
into
xchg
nop
push
xor
lret
andb
xor
scas
pusha
push
cmpsb
add
xchg
movsl
testl
pusha
stc
icebp
mov
bound
adc
das
mov
pusha
fwait
jmp
shlb
sub
iret
sub
cltd
outsb
inc
mov
push
sub
pop
push
push
insb
xchg
popf
pop
outsb
fstl
push
mov
daa
xor
loop
jle
data16
lea
ret
cmpsl
dec
and
int
fs
push
daa
cmp
sub
jp
dec
std
push
jae
or
cwtl
sbb
imul
shl
xor
ss
xchg
sbb
fiadds
xchg
inc
mov
and
movaps
js
fmulp
ja
cmp
lea
call
xor
sti
je
cmp
xor
pop
add
and
push
aaa
ljmp
mov
jecxz
sbb
aaa
adc
inc
xchg
ljmp
jmp
mov
mov
jnp
dec
in
and
cmp
movsl
idivb
inc
test
fnsave
pop
mov
mov
inc
pop
pop
xor
adc
data16
std
repnz
mov
adc
sarl
mov
push
mov
adc
cwtl
int
and
sahf
hlt
pop
popf
sbb
mov
jns
push
enter
loop
sub
data16
into
mov
dec
or
mov
xchg
pop
loope
divl
xchg
pop
push
mov
push
popa
rorl
xor
sbbb
push
jns
lods
jecxz
sub
into
andb
jp
fistpl
jle
pop
sub
arpl
xchg
out
movsl
sarb
xchg
inc
sub
or
clc
fwait
in
mov
into
pop
dec
into
inc
xorl
adc
mov
mov
push
inc
dec
data16
fwait
sti
xchg
dec
pop
std
decb
movsl
ret
outsb
std
cmp
sub
test
inc
sub
popa
and
cltd
jl
out
jns
push
xor
xor
push
outsl
cltd
add
xchg
mov
pushl
lea
repz
add
mov
inc
sub
inc
and
xorb
cli
out
and
jg
out
faddp
add
dec
ds
jge
xchg
push
mov
jbe
test
popf
jl
and
jmp
lods
jl
push
jnp
pop
imull
fsubl
std
ljmp
pushf
pop
test
pop
loope
jecxz
xchg
das
nop
or
xor
sub
xchg
mov
jmp
ret
test
lods
xor
loope
ljmp
sub
in
popf
outsl
or
inc
mov
and
jae
cld
inc
push
repnz
mov
adc
lret
sahf
mov
out
mov
dec
sub
mov
mov
sarb
or
mov
fisubl
sbb
inc
or
clc
mov
mov
cmpl
aas
int
cmp
xor
shr
mov
inc
icebp
push
pop
add
movsl
inc
jle
in
rcll
dec
sub
cli
cmp
imul
mov
cli
xor
mov
xchg
popf
mov
cwtl
mov
sbb
mov
outsl
sbb
add
jae
lock
pop
aam
mov
adc
mov
ret
subl
jp
or
lock
stc
mov
out
test
getsec
dec
fistl
mov
lock
mov
pop
mov
or
cmp
and
sub
pop
pop
scas
push
and
decb
cld
test
add
pop
roll
pop
inc
lcall
sbb
daa
pusha
popa
sub
lret
lcall
mov
mov
clc
nop
loop
test
inc
push
mov
xor
pop
lahf
and
and
jl
rolb
jmp
sbb
out
mov
jnp
pop
ficoml
push
adc
cmpsb
aaa
mov
push
aad
push
fiadds
ret
lods
arpl
mov
movsb
push
fdivl
cs
mov
dec
xor
push
lock
fxch
nop
cld
xor
push
mov
outsb
inc
xchg
xor
xchg
enter
cmp
int3
orb
or
jg
mov
fdivrs
arpl
mov
stos
mov
xor
lret
test
mov
insb
andl
clc
outsl
xchg
sti
push
shlb
jp
jge
int3
les
rcll
nop
or
nop
or
out
jecxz
inc
push
cmp
lret
inc
notl
xor
sbb
fcmovu
stos
adc
mov
push
gs
int3
jnp
inc
sbb
fwait
lock
mov
shr
mov
daa
icebp
sub
adc
jnp
fmulp
cmp
mov
mov
lret
ljmp
les
jp
inc
adc
push
or
cld
movsb
and
inc
subb
mov
mov
enter
rcrb
inc
ret
xor
fwait
stc
loope
xor
dec
aad
mov
mov
and
nop
pop
cli
xorb
movsl
pusha
and
jp
pop
xor
mov
xchg
sub
dec
push
dec
push
pusha
adcl
clc
popf
outsb
adc
das
xchg
aam
jbe
out
cs
push
aas
cld
sub
in
call
mov
push
dec
das
jne
xor
push
stc
cmp
fidivs
dec
dec
sbb
loop
cmp
cltd
mov
adc
xor
int
push
or
out
cld
in
xor
cltd
orl
cmpl
cbtw
scas
adc
pop
pop
push
pushf
cmp
jnp
and
and
adc
stc
push
mov
loope
out
jp
xor
in
fwait
mov
roll
cmc
xchg
and
mov
ret
jle
pushl
fistpl
in
shlb
or
cli
pop
fsts
mov
lahf
mov
popl
into
xchg
int3
lods
adc
cmpsb
sub
adc
insb
loopne
sbb
mov
ret
popa
rcl
lret
adc
push
movzwl
aas
push
out
daa
data16
dec
dec
popa
push
out
int
mov
mov
aas
xchg
mov
mov
icebp
cmp
shll
push
mov
xchg
and
mov
mov
sbb
pop
xchg
aaa
out
inc
insb
push
imul
push
out
les
push
add
scas
cltd
xchg
mov
push
xchg
push
xor
or
push
cmp
pop
dec
ds
testl
je
pop
in
gs
push
add
in
inc
inc
shlb
adc
or
mov
cmp
xchg
pop
gs
mov
cs
int3
in
test
xor
cmp
inc
js
mov
inc
cmpsl
enter
dec
data16
xor
bound
xor
cli
jae
cmpsb
inc
int3
fldl
inc
and
aad
xchg
mov
outsl
mov
in
sbb
loopne
add
cmp
sbb
enter
pusha
clc
imul
inc
ljmp
es
loopne
add
pop
mov
popf
out
or
push
jle
xchg
mov
mov
or
adc
inc
add
jg
aad
clc
pop
push
xor
dec
pop
adc
loop
and
imul
pop
dec
cmp
rcll
sbb
js
xchg
int3
lods
jne
lods
or
push
cmp
xchg
sbb
lea
mov
mov
pop
sbbl
test
ret
add
rorl
sub
xor
jge
adc
mov
loop
xor
movsb
in
fists
fdivrl
imul
mov
loop
and
mov
sarl
lock
add
popa
mov
lods
or
test
add
inc
pop
adc
xchg
mov
inc
fdivr
dec
sbb
mov
js
lcall
imul
and
sti
sahf
inc
mov
cmp
pushf
in
jbe
dec
pop
arpl
inc
into
jb
shll
je
and
xchg
sub
dec
test
mov
cmc
adcb
test
stos
fadds
xlat
aam
jmp
call
loope
mov
sbb
lret
shlb
push
jge
jg
xchg
dec
insl
out
out
into
mov
adcb
xchg
pushf
xchg
dec
inc
insl
stc
dec
xchg
jbe
les
in
inc
push
mov
push
clc
in
mov
mov
loope
jbe
mov
addr16
dec
xor
lods
push
push
mov
dec
pop
aas
xchg
pop
add
jl
adc
or
pusha
cs
or
dec
dec
das
jne
scas
xchg
mov
gs
dec
call
test
jg
mov
jne
mov
adc
jb
add
out
add
call
inc
sti
jmp
push
cmp
and
jle
mov
in
test
in
mov
fwait
shr
popf
les
xchg
inc
jno
dec
pop
or
jno
mov
sbb
sub
cmp
gs
mov
shr
push
xor
lea
push
ss
adc
or
mov
dec
testl
xor
xor
les
rcr
add
xchg
jb
subl
testl
scas
add
outsl
nop
data16
inc
pusha
pop
push
xor
and
out
std
out
inc
mov
ljmp
mov
pop
jle
fcompl
out
jbe
mov
insl
imul
sub
orl
mov
or
mov
cwtl
xor
hlt
loope
pop
mov
out
outsb
adc
push
in
jg
mov
pusha
rorl
dec
jp
and
gs
xor
xchg
inc
jo
arpl
xchg
adc
push
pop
cmpb
enter
mov
mov
aad
or
imul
mov
and
add
lcall
inc
mov
xor
dec
pop
add
fwait
push
rol
popa
emms
ror
clc
pop
ja
xchg
cmp
push
adc
pop
pop
inc
shll
cmp
add
dec
mov
add
xchg
scas
xchg
cmpb
sbb
outsl
or
faddl
push
mov
dec
js
mov
mov
aad
mov
mov
loope
jge
push
pop
xor
into
arpl
mov
xor
pop
addl
insb
pop
daa
push
xchg
ficoml
xchg
and
mov
pop
sti
jo
data16
addr16
mov
cmp
repnz
repnz
adc
and
add
shr
jp
jae
xchg
sub
adc
xchg
xchg
xchg
daa
sbb
ds
or
adc
test
mov
dec
in
mov
shlb
jno
mov
jp
mov
adc
mov
push
cmpsl
mov
dec
pop
push
retw
mov
fisubrl
mov
adc
add
pop
aam
es
mov
jl
addr16
push
mov
sbb
movsb
incl
loopne
inc
int3
out
jns
or
and
stos
and
aaa
sub
xchg
loope
jns
imul
rcll
lea
or
xchg
jo
jo
lods
cmp
or
xchg
sbb
shll
add
pop
out
or
pop
dec
xor
push
add
pop
fs
ds
ja
iret
push
loopne
rorl
loopne
cli
xchg
xchg
lret
scas
ljmp
mov
xor
and
fdivr
sbb
pushf
inc
inc
mov
mov
mov
add
fcmovb
js
push
push
int3
xchg
ja
hlt
pop
sbb
dec
cmp
mov
js
int
pop
movsb
pop
xchg
sub
rol
xor
sbb
sub
xchg
dec
inc
xor
fwait
mov
sbb
hlt
popf
dec
clc
out
push
cs
push
and
fldlg2
insb
mov
loope
imulb
cli
jbe
mov
cmp
sub
push
movsl
cmp
sub
push
shrl
jb
jno
jbe
lcall
shll
cs
inc
pop
pop
mov
mov
cmp
nop
push
push
cmp
testl
xor
repnz
mov
andb
mov
pop
iret
push
in
cmp
dec
mov
xchg
xchg
inc
add
adc
mov
and
and
cmp
push
das
lret
into
inc
ss
popf
add
outsb
dec
idivl
jne
jns
out
fistpl
in
fdivrp
test
in
iret
xor
out
xor
cmp
mov
fdivrs
les
pusha
jp
adc
movb
cmp
adc
sbb
or
adc
scas
cmpb
arpl
ja
leave
enter
mov
xchg
loope
mull
rorb
movsb
mov
pop
cmpsb
insl
adc
cmp
out
lods
push
pop
push
sbb
fidivrl
lret
pop
pop
aaa
faddp
addr16
jl
lahf
push
arpl
cmp
dec
mov
mov
or
int
xchg
pop
mov
insb
jo
fsubs
add
jecxz
pop
fsubrs
sub
and
dec
push
cmp
and
jp
aam
repz
dec
ljmp
ja
outsl
and
nop
bound
add
ffreep
popa
mov
jno
vaddpd
mov
lods
fbld
stos
popa
stos
cmp
in
xchg
push
add
cmp
jo
fwait
or
mov
jecxz
or
iret
cmp
test
bound
mulb
dec
ja
adcb
push
lcall
int3
push
iret
sub
or
adc
xchg
mov
stc
ds
enter
xchg
mov
gs
adc
add
ljmp
loope
sub
sbb
cmp
insb
rol
ss
jne
adcb
mov
pop
cmp
subb
cmpsl
sub
mov
jno
in
cmpsb
in
jge
or
fiaddl
cli
andb
and
jns
inc
mov
inc
imul
xor
adc
pop
lods
test
jnp
lea
ret
in
testl
pop
and
adc
or
jae
aaa
out
insl
jnp
cmp
daa
in
sub
push
pop
mov
movsl
jmp
and
xchg
fimull
movsb
cmp
adc
inc
xchg
mov
shl
add
xor
xor
and
nop
jbe
bound
nop
js
mov
movsb
mov
dec
sub
dec
shll
cmp
ja
fadd
or
push
adc
sub
xchg
leave
sbb
xchg
into
test
sbb
pop
mov
stc
push
sub
pop
mov
pop
int3
and
sbb
int
add
cmpsl
pushl
push
jb
in
xchg
cmp
inc
lcall
popa
js
xchg
ret
xchg
clc
ret
mov
cmp
fdivl
cmp
inc
out
xchg
xchg
mov
xchg
test
std
mov
push
mov
hlt
repz
mov
lods
fidivl
push
cmpl
mov
jmp
mov
es
fwait
test
pop
pop
push
enter
push
aas
mov
cld
sbb
hlt
movl
testl
ret
lods
das
addr16
push
and
pop
cwtl
das
add
loopne
loopne
mov
pand
fsubrs
mull
mov
sub
push
sbb
inc
outsb
or
xchg
cmp
maskmovq
divl
dec
jle
gs
push
out
repnz
inc
and
cmpb
insb
inc
dec
mov
xchg
and
and
sarl
loop
sub
popa
pop
adc
cld
sbb
divps
pop
pop
xor
cmp
lret
push
mov
and
das
or
xor
add
pop
xchg
sti
ficoms
mov
adc
sbb
shlb
mov
and
and
push
and
fidivrl
out
fsubrp
and
push
stos
dec
cmp
jmp
dec
cmc
and
push
rorb
out
sti
mov
lods
sahf
aaa
cmp
push
ss
js
in
shrb
mov
xlat
insb
cmpsb
xchg
hlt
xchg
outsl
xchg
sar
aas
pop
push
push
mov
xchg
aad
add
in
mov
push
pop
cmp
inc
hlt
pop
jp
mov
mov
cmp
popf
das
in
fisubs
dec
cmp
ljmp
movsl
mov
test
adc
ds
xchg
imul
ljmp
mov
adc
adc
cmp
jo
or
ja
popa
sub
cmpsl
mov
incl
scas
jmp
pop
enter
push
xlat
sti
inc
dec
shr
aaa
nop
xor
loop
mov
scas
in
in
mov
mov
into
ds
cmp
adc
jb
pushf
popf
jb
je
arpl
jno
xchg
jecxz
mov
lret
ja
push
mov
lods
add
js
ds
lock
pop
cmp
or
insl
in
fsubrp
add
pop
jno
inc
sbb
push
dec
xor
xchg
jo
xor
lahf
outsb
cmpl
adc
adc
lahf
js
sbb
dec
dec
xlat
loopne
mov
in
fisubrs
mov
push
aaa
pop
imul
out
mov
jb
xor
popa
pop
pop
ljmp
dec
test
fisttps
mov
jno
sub
cmp
aas
mov
xchg
inc
lock
outsb
out
js
cmp
sub
data16
jns
ljmp
ret
xchg
pop
inc
into
sbb
jmp
mov
jbe
mov
in
xchg
mov
inc
icebp
xor
call
fidivrs
cmpsb
or
insl
sub
insb
push
test
xchg
pop
in
sub
mov
lds
sahf
es
mov
addr16
dec
jb
lahf
add
pop
mov
scas
insl
jg
inc
xor
test
lods
adc
movsb
sahf
add
mov
popa
push
rep
push
insb
pop
mov
shll
or
sbb
push
gs
bound
push
xchg
mov
xor
inc
aaa
out
test
dec
cmc
fistl
lock
add
mov
insl
rorl
dec
pop
jge
ret
mov
fadd
xchg
jnp
ss
jae
sahf
push
xchg
rcrb
int
cld
cwtl
test
repnz
es
popa
das
es
push
sub
sub
enter
clc
lahf
rcr
bound
out
jnp
sub
cli
dec
mov
fwait
ja
xor
inc
jg
out
fisttps
sbb
bound
jnp
jnp
push
mov
insl
mov
repz
dec
int
add
mov
in
cmpsb
xor
in
outsb
pop
movsb
mov
enter
mov
xchg
adc
mov
jge
mov
push
cmp
gs
add
sub
add
adc
xor
div
fldl
and
scas
loope
cmp
adc
push
lcall
jmp
sub
mov
mov
mov
insb
dec
test
fnstsw
xor
sbb
and
mov
xlat
jb
stc
imul
repnz
clc
sub
shl
fstl
fisubrs
and
cmovne
ffreep
jecxz
pushf
mov
sbb
pop
lret
pushl
add
mov
rclb
jl
fsub
mov
and
dec
fimuls
push
push
xor
insl
lcall
scas
aas
lods
icebp
add
pop
out
lods
cmc
outsb
dec
jbe
scas
cmp
int
push
pop
and
mov
jb
cmp
mov
mov
lahf
xchg
or
pop
push
mov
cmp
iret
data16
cmpsl
xor
dec
jnp
jno
adc
sbb
aam
jnp
inc
iret
jp
test
or
test
fucomi
enter
xchg
mov
fcomi
lret
rolb
mov
jno
adc
mov
adc
bound
mov
dec
out
cmp
in
mov
call
lret
xchg
fidivrs
jnp
dec
push
int
bound
out
out
ret
scas
mov
or
xor
adc
mov
push
push
loop
cmp
xor
cli
xchg
popf
push
enter
loope
sbb
outsb
mov
lcall
adc
or
cmpsl
jnp
outsl
xor
shll
dec
enter
lods
in
mov
int
or
pop
jge
add
or
movb
sbb
adc
add
mov
mov
push
and
clc
mov
int3
inc
lods
das
dec
xor
imul
sbb
loopne
dec
dec
mov
in
jmp
and
mov
and
jmp
cli
sub
scas
idivl
dec
dec
das
adc
push
mov
jle
imul
jbe
lods
imul
repz
sbb
and
dec
jno
xlat
lds
cmpsw
adc
mov
cmc
fs
ds
popa
or
sbb
faddl
mov
mov
in
aam
lods
mov
scas
mov
push
inc
stc
add
iret
inc
loop
jl
loopne
xchg
test
push
int
adc
xor
rorl
xor
mov
or
in
mov
dec
mov
dec
pop
cmpxchg
dec
xor
mov
test
xchg
imul
repnz
dec
repnz
repz
sbb
mov
push
jp
xorl
pop
loop
or
push
add
rcl
adc
notb
loope
inc
and
adc
dec
sub
in
clc
cmpsb
add
leave
lods
lods
xchg
or
adc
adc
jae
cmpsl
sarl
or
testl
xor
mov
add
decb
inc
data16
or
push
cmp
cmp
stc
push
adc
pop
fs
into
push
inc
add
ja
xor
xor
ds
mov
mov
dec
rorb
fistpl
push
flds
test
fidivl
and
jne
lahf
xor
test
pop
mov
cld
push
call
push
add
xorl
mov
xor
adc
jae
mov
sub
stc
or
sbb
cmp
push
popf
jg
or
or
out
push
sahf
mov
negb
pop
pop
jmp
jb
mov
sub
push
mov
or
cmpsb
push
mov
push
sbb
cmpsl
or
jb
lock
pop
adcl
movsb
cwtl
mov
jns
xor
ficoml
popf
xorb
hlt
xchg
testl
adcb
pminub
popw
cli
jb
add
lret
mov
iret
pop
jnp
xlat
cli
loope
adc
push
cmpsb
cmovne
jmp
mov
inc
cmp
push
jae
pusha
add
mov
mov
test
aam
in
rol
mov
enter
push
or
add
enter
int
sahf
gs
repz
pop
jb
int
fdivs
xor
je
enter
pop
inc
pop
lods
push
push
or
push
adc
pop
push
dec
jo
pushl
stos
pop
out
sbb
stos
out
add
imul
jne
mov
push
sti
mov
push
aaa
aad
ret
movsb
pop
jo
int
jno
pop
imull
mov
movsb
or
rclb
xchg
or
and
add
repnz
adc
cmp
xchg
insb
stc
test
xor
lods
mov
stc
repnz
dec
and
pusha
cli
orl
sbb
mov
jmp
xor
out
lret
pop
insb
inc
fimuls
outsl
andl
in
test
lret
or
pushf
mov
std
push
xor
mov
repz
rcrl
iret
or
cmp
jmp
fwait
xchg
inc
xchg
loop
insl
punpckhdq
dec
mov
pusha
adc
push
cmc
xor
loope
test
daa
rorb
ficomps
pop
adc
sub
mov
mov
mov
add
leave
cmp
or
dec
in
dec
xchg
cmpsb
ljmp
cmpsl
jb
pop
fwait
or
xor
sub
ret
orl
iret
mov
sub
insl
xlat
sbb
pushf
insl
lods
movsl
notl
push
cld
test
adc
xor
and
inc
popf
sub
jp
xor
out
jns
push
insb
sbb
aam
dec
mov
out
pop
fsubl
add
sarb
push
sbb
test
shl
andl
xor
leave
notb
lcall
xor
scas
fmull
jne
mov
negb
lods
rolb
data16
jp
add
sbb
dec
jmp
jg
push
push
jbe
dec
dec
cmp
inc
xor
dec
mov
cmp
sbb
insl
mov
lret
push
cmp
cwtl
movsl
or
dec
mov
or
xorb
pop
clc
sbb
jnp
or
fiadds
mov
cwtl
xchg
xor
or
and
arpl
cmp
xchg
xor
or
std
insb
push
sub
and
push
sub
jmp
mov
dec
jl
in
or
cltd
mov
icebp
data16
push
enter
push
pop
xchg
xor
movsl
popf
cltd
or
mov
or
dec
lods
jmp
push
inc
test
cmp
lcall
popf
inc
pop
or
mov
xorl
ret
test
add
loope
sbb
cmc
test
popa
jle
xchg
sbb
push
cmp
dec
sbb
and
in
jae
jmp
pop
and
cld
add
emms
gs
test
scas
cmp
dec
xor
cli
mov
mov
pop
shll
xchg
adc
mov
out
test
mov
out
das
mov
cwtl
cmp
gs
cmpsl
dec
and
movsl
nop
cltd
dec
rcrb
add
xor
rcll
and
lret
xchg
mov
mov
pop
push
xor
les
push
fs
mov
cli
jne
movsl
fs
stos
inc
arpl
int3
jne
daa
dec
pop
out
sbb
ret
or
out
rcrb
shr
mov
mov
fimuls
push
jns
cmpsb
push
scas
sbb
loopne
or
pop
lods
decl
clc
aam
imul
jb
xor
fs
sub
lret
lea
stos
jge
push
daa
adc
mov
jno
adc
pop
loope
xchg
or
scas
mov
popa
je
xchg
std
mov
int
sbb
mov
mov
ret
pop
in
mov
leave
add
lea
mov
das
lods
mov
fiaddl
mov
mov
out
inc
or
cmp
pusha
shl
push
and
cli
popa
push
pop
dec
pop
insb
mov
mov
pop
fisttpll
in
inc
pushf
add
lcall
fwait
dec
cmpsl
enter
dec
mov
xor
or
push
fsubrs
inc
add
ja
fs
sahf
scas
std
dec
pop
add
mov
xor
pop
cmpsl
mov
jg
pop
sub
sarb
lcall
push
or
jns
jnp
sbbb
jns
rolb
adc
xchg
jle
repz
cmp
fsubl
dec
daa
fmuls
test
in
mov
outsb
fidivrl
in
mov
cltd
xor
push
and
fcmovu
test
lods
test
pushf
dec
test
sub
dec
jmp
mov
jnp
jbe
and
sub
lcall
stos
inc
out
jp
pop
dec
imul
inc
mov
outsl
add
in
jle
adc
lea
sub
ljmp
mov
mov
leave
mov
push
push
jle
dec
push
in
and
popf
mov
cmp
jae
mov
add
sub
push
push
and
xor
dec
lock
popf
and
lret
sub
imul
jge
mov
adc
std
aam
add
and
add
ja
popf
xchg
popa
pop
stos
sub
inc
and
lahf
mov
mov
pop
or
ret
mov
add
xchg
sbb
popf
jae
cld
xchg
scas
push
xorl
pushl
pop
jo
dec
dec
pushf
sbb
add
mov
push
add
mov
pop
push
mov
mov
jns
push
imul
je
add
sahf
in
imul
test
call
fistps
cmp
sahf
in
dec
dec
sub
mov
movsl
jbe
add
cmp
jp
sub
bnd
pop
pop
lock
in
xor
xchg
rorl
push
pop
mov
mov
aas
mov
dec
ret
gs
addr16
dec
mov
fnsave
dec
cmp
dec
fs
adc
and
mov
cltd
ja
or
fmuls
gs
mov
fstpt
fildll
fbstp
shr
shl
lret
pop
pop
cmpsb
xlat
stc
mov
push
adc
rcrb
frstor
jne
jmp
or
lock
jg
add
mov
mov
xchg
push
jg
lcall
aaa
ds
outsb
icebp
addl
lds
or
inc
out
inc
jne
xlat
mov
into
mov
je
movsl
repz
or
cmp
ja
fidivrs
xor
sbb
lret
mov
xor
lret
xlat
push
ljmp
push
mov
frstor
aas
add
adc
ret
cmp
push
shlb
lret
les
or
push
xor
xchg
or
stos
jnp
dec
sbb
jae
push
cmp
int3
cmc
pop
nop
imul
push
sub
jno
or
dec
mov
inc
push
outsb
xor
sub
xchg
xor
add
sti
inc
pushf
test
mov
adc
mov
insb
cwtl
push
mov
push
lret
sbb
cmp
mov
pushf
rorl
out
dec
fisubrs
push
loop
paddusw
sub
cmp
leave
mov
lcall
push
ljmp
sbb
dec
and
jmp
push
addb
stc
das
pop
mov
outsl
and
dec
sarl
jge
rolb
repz
sbb
mov
adc
test
test
rcrl
dec
imul
mov
mov
or
out
push
mov
gs
inc
ljmp
js
or
cmpsl
cli
ja
addl
lods
cmp
lret
test
cmp
add
test
cli
jge
xchg
shlb
out
lds
out
sahf
or
pop
call
sbb
jp
push
rcrl
cmp
xor
push
adc
into
lahf
adc
les
cs
in
lcall
xor
fsubrs
pusha
pop
add
jle
xchg
sbb
jle
stc
loopne
xchg
and
fsubrs
outsb
xchg
adc
mov
pop
imul
xchg
pop
lods
out
das
ja
fwait
push
xor
sbb
and
mov
push
stos
sbb
xchg
icebp
pushf
sub
shl
lea
in
test
enter
in
lock
and
push
lea
and
xor
imul
enter
rclb
les
push
cltd
inc
cwtl
movsb
push
ficompl
dec
cs
or
leave
lcall
insl
and
inc
mov
pop
idivl
stos
lea
jnp
inc
xlat
loope
mov
or
or
add
xor
fisubrs
xorl
fiadds
movsb
xchg
scas
mov
pop
xchg
xchg
stos
push
ds
cli
mov
in
in
sbb
cmpb
inc
inc
loop
out
outsl
adc
add
and
mov
xor
mov
mov
xchg
and
bound
sub
lods
aam
cmp
repnz
xchg
cmpsl
mov
popf
or
lret
dec
dec
aas
mov
pop
divl
repnz
dec
stc
pop
shr
mov
pop
stos
or
inc
inc
cmp
mov
loope
xchg
push
aad
andb
std
jns
xchg
and
push
add
fs
pop
ret
mov
stos
std
push
test
loope
add
mov
addr16
jp
mov
int3
mov
rol
pop
testb
inc
and
leave
inc
lret
xchg
mov
sbb
inc
cmp
stos
or
mov
lock
add
or
cmp
mull
cltd
cwtl
stos
mov
fiadds
mov
inc
lea
push
and
add
gs
jb
aaa
xchg
fisubrl
push
xchg
leave
mov
stc
dec
fldt
inc
or
xchg
sbb
cmp
mov
leave
ss
xchg
fs
mov
sahf
std
mov
adc
mov
inc
ds
enter
and
jmp
rorb
out
lods
bound
or
jle
pop
lcall
dec
mov
dec
sbb
loopne
cwtl
xchg
ljmp
sbb
or
stos
sahf
xor
jns
jb
sti
clc
out
fstpt
push
xlat
subl
shlb
icebp
jae
cltd
and
mov
cld
mov
push
pop
mov
adc
and
xor
cmp
sbb
jg
sbb
xchg
inc
push
out
inc
stos
dec
hlt
cmp
cld
repz
and
adc
addr16
mov
xor
pop
mov
nop
adc
and
aad
rcrb
mov
jns
mov
dec
sbb
and
or
pusha
add
mov
pushf
mov
mov
jg
push
shrl
lock
or
js
add
lret
stos
pop
sbb
lods
mov
lods
mov
fisttps
sub
insb
cltd
insb
ds
mov
cmpsl
outsl
sbb
in
push
in
xor
ficomps
mov
sbb
fnstsw
stos
in
or
push
ficomps
nop
dec
dec
jg
ljmp
push
cs
cmpsl
pop
push
add
imull
aas
sbbl
add
or
sbb
mov
rcrb
inc
xor
dec
jb
cmp
cltd
sbb
addr16
pop
xor
test
ds
loopne
dec
fildll
mov
push
ret
xchg
sbb
mov
or
sarb
xlat
sbb
mov
pusha
pop
push
lods
mov
out
imul
insb
loope
push
inc
or
in
and
in
jmp
pop
js
add
add
popl
jns
cli
sbb
and
push
das
psubusw
pop
daa
jo
andb
loopne
int3
lret
jge
jmp
push
push
inc
jno
fimuls
sub
and
fisttpl
cmp
push
jle
test
or
jge
std
jb
lods
dec
insb
mov
xchg
outsl
mov
cmc
xchg
and
lahf
jne
lods
or
stos
fstpt
cmp
pop
repz
sub
aam
jbe
addr16
jae
les
sahf
pushf
daa
imul
daa
dec
sub
arpl
lea
fwait
es
cld
pop
mov
jnp
les
ljmp
pop
fucomip
pop
push
sub
cs
sbb
jb
jno
bound
mov
int3
jb
xlat
cmp
jecxz
inc
fwait
mov
mov
je
sbb
push
addr16
jecxz
stc
mov
outsl
out
mov
fdivr
outsl
add
jo
xor
jg
jecxz
dec
movsl
push
ret
daa
mov
lcall
stc
sbb
decl
xchg
call
fidivs
cmpsb
mov
loop
push
leave
movups
jnp
test
adc
pop
xchg
fisttpll
and
fs
add
scas
or
int
mov
and
mov
imul
mov
leave
lods
enter
xchg
mov
sarl
loope
test
sub
loope
jo
pop
scas
shrl
xchg
mov
addr16
sbb
push
push
cld
pop
mov
ficoml
jb
mov
mov
pushf
push
mov
push
push
clc
test
mov
mov
push
jg
ds
div
movsl
in
nop
xor
jbe
popa
cmp
stos
enter
rdtsc
inc
xor
and
in
or
shll
fwait
xor
jno
adc
pop
nop
mov
dec
popf
aam
icebp
out
mov
loope
arpl
xchg
jecxz
call
mov
fstpl
pop
rcl
ret
mov
ret
pop
test
pusha
sub
mov
sub
xchg
pop
adc
out
mov
in
jbe
lcall
and
adc
sbb
in
or
jmp
movdqu
rcrl
sbb
rorb
in
lds
repz
pop
mov
sub
mov
mov
in
mov
mov
sub
loop
add
sub
jmp
inc
pop
or
shll
inc
mov
popl
add
add
inc
xlat
pop
xor
jle
xor
lahf
popa
cmpsb
cmp
lods
div
or
daa
sub
lcall
add
add
sahf
or
sbb
fsubr
pusha
sbb
stc
xchg
fimuls
push
inc
mov
dec
push
or
or
sbb
mov
test
in
aas
insl
das
sub
std
dec
test
pop
inc
shll
pop
fdivrl
sbb
sub
or
xor
push
lock
and
cld
enter
je
xor
enter
ljmp
popf
stos
insb
mov
cld
pop
test
test
mov
mov
mov
cld
fs
jns
xchg
push
pop
sub
andl
add
push
mov
push
jnp,pn
and
xor
sbb
leave
mov
subl
jle
dec
inc
xor
dec
out
mov
gs
or
sub
or
jmp
das
inc
testb
cmp
add
mov
xor
not
movsl
arpl
push
push
ds
mov
push
insl
dec
test
dec
pop
pop
cmp
leave
aad
mov
xor
dec
lock
ds
or
mov
sub
testl
xchg
mov
sub
data16
xchg
push
test
add
xlat
mov
outsb
fistps
mov
push
int
jb
test
sbb
into
add
popl
sbb
pop
pushf
fnstenv
xor
in
adc
movsl
adc
outsl
inc
push
lods
jp
jo
dec
gs
imul
mov
punpckldq
adc
jne
stc
das
xchg
or
mov
sub
lcall
jge
push
lock
daa
outsb
in
sarl
inc
dec
sub
dec
test
out
cmpsl
pop
dec
sub
adc
cltd
les
ret
stos
jns
cmp
out
sub
movsl
xchg
mov
cmc
mul
dec
lds
loopne
push
xchg
out
sbb
jae
pusha
sub
cmpl
and
cld
enter
data16
push
inc
test
orl
sbb
cmp
aad
cmp
inc
sbb
cs
pusha
dec
jo
mov
scas
movsb
roll
or
test
adcl
dec
orb
cmc
stos
int
mov
clc
add
pop
pop
jno
mov
add
notl
loopne
mov
cli
jmp
clc
nop
nop
out
imul
mov
sbb
and
movsl
mov
and
stos
imul
or
std
hlt
cmp
mov
xchg
pop
int
sahf
fadds
or
daa
fidivl
fs
jmp
xchg
or
cmp
int
pusha
mov
or
sbb
loope
ss
pushf
ja
call
xchg
sti
push
outsb
adc
rol
jb
lea
pop
leave
pop
and
inc
sub
push
clc
mov
sub
ficoml
mov
aam
fistps
in
fistpl
sbb
in
loop
fchs
outsl
pop
out
sub
sbb
aad
mov
movsl
push
sahf
cwtl
add
in
movsb
or
imul
iret
pop
or
sahf
insl
xor
push
cmc
inc
lods
test
lods
or
add
xor
and
and
imul
lret
jl
int3
adc
mov
push
mov
das
add
mov
fcoms
xor
push
and
sub
adc
insb
push
or
mov
jmp
mov
pop
mov
shl
jne
pop
fstpl
xor
inc
gs
in
add
fiaddl
and
cmp
test
lea
push
test
inc
mov
outsb
ret
inc
rolb
mov
dec
mov
icebp
inc
into
xchg
stos
sub
pop
clc
outsb
jnp
sub
faddl
jns
js
enter
inc
dec
dec
push
adc
push
in
popa
negb
ljmp
add
cli
fs
sbb
sbb
adc
addr16
cwtl
xor
nop
lahf
sub
lods
push
cmc
xor
pop
gs
jecxz
pop
pop
insb
and
fdivrs
dec
pop
jecxz
dec
add
lods
nop
dec
push
jecxz
testl
push
addr16
mov
lret
rcll
dec
mov
js
movsl
xor
ret
xor
cltd
dec
movsl
cmp
test
and
sub
hlt
cld
loop
stos
jno
xchg
mov
cs
mov
dec
push
loop
adc
fists
cmc
jno
sub
xchg
jno
ds
jne
jle
repnz
dec
cmpsb
pop
cmpsb
push
std
shl
add
mov
sbb
mov
jae
xchg
sub
cmp
loopne
pusha
mov
mov
mov
adc
jno
mov
test
movsb
out
iret
push
mov
xchg
cmp
xchg
nop
pusha
outsb
inc
aaa
or
push
cs
pop
push
xchg
pusha
lods
push
push
mov
fsubr
push
lcall
mov
sahf
jns
call
sbb
mov
xchg
bt
in
dec
add
dec
imul
xor
scas
faddp
dec
mov
packssdw
cld
jnp
mov
aaa
pop
jg
int
cld
loop
jbe
mov
add
or
and
jg
xor
push
stos
repz
fisttps
inc
mov
fimuls
movsl
push
clc
adc
push
xchg
lock
cltd
loope
call
ds
sub
jb
or
in
or
ds
adc
pushf
mov
int
cld
adc
or
aad
imul
add
push
movsl
inc
xchg
jmp
xlat
and
loope
xor
xchg
fwait
dec
xchg
out
add
adcb
pop
sub
call
and
in
pop
sub
or
push
lock
jae
mov
ljmp
lods
inc
ja
and
and
lea
dec
xchg
rcrb
push
pop
mov
sahf
mov
push
test
pop
jle
sub
test
call
sahf
or
ds
or
call
daa
push
sbb
repnz
inc
cs
push
pusha
lret
xlat
mov
divps
add
and
push
fwait
imull
sahf
lret
jnp
stc
stos
push
test
or
pop
arpl
aas
mov
mov
fnsetpm(287
fsts
ret
mov
out
test
arpl
add
jmp
or
test
movnti
mov
adc
or
and
andb
into
jae
xchg
cmp
test
sub
fdivl
fs
lret
and
sub
sbb
loop
ret
gs
mov
outsl
repz
cwtl
cltd
sbb
inc
sbb
xchg
fs
or
sbb
movsb
stos
out
jbe
fidivl
shll
rolb
mov
das
sub
sbb
roll
inc
mov
lods
jmp
cmp
rcrl
sub
scas
pop
in
aas
add
pop
rolb
lret
int3
data16
jne
lcall
sub
mov
jmp
ss
int
mov
and
ret
jmp
enter
and
pusha
and
xchg
aad
inc
pop
pop
pop
mov
in
adc
pop
xor
mov
mov
inc
jmp
mov
adc
push
frstor
push
addl
out
dec
gs
in
mov
inc
scas
sub
xchg
pop
dec
movb
cmp
xchg
cmpl
sahf
lcall
mov
std
or
xor
jns,pn
lahf
int3
sbb
cwtl
mov
lret
jbe
sti
movsb
je
fst
leave
lret
add
shl
mov
test
dec
jl
inc
into
mov
lea
cli
jno
aaa
out
mov
pop
loope
jecxz
adc
andb
nop
aad
mov
out
mov
adc
mov
push
inc
dec
in
cmp
nop
mov
jno
inc
cmp
scas
jecxz
mov
sub
jp
jl
push
adc
ficoml
imul
pop
in
sub
dec
cmp
or
push
xchg
xlat
insb
xchg
push
movsl
iret
push
in
lods
pop
xor
cmpsb
scas
inc
imul
out
sbb
mov
lret
sbb
jo
sbbb
or
daa
jne
and
leave
loope
pop
daa
jg
pop
push
into
sub
mov
imul
jg
push
push
jle
cmc
xlat
shlb
pop
push
popa
sbb
inc
js
arpl
mov
movsb
or
test
fmull
ja
inc
ror
mov
movsb
jnp
push
test
mov
sbb
push
pop
adc
inc
sbb
stos
in
fisttps
adc
or
mov
mov
mov
fildl
pop
xchg
xor
test
or
imul
pop
jge
and
xchg
push
push
xchg
fs
int
std
pop
jnp
mov
test
rolb
stc
shrl
enter
std
and
and
movswl
adc
shlb
fwait
mov
mov
xor
insl
ss
andl
xor
mov
push
cmp
mov
subl
mov
addr16
add
jle
ss
xchg
popa
sub
pop
jge
outsb
mov
out
mov
sbb
ja
popa
cmp
outsl
sub
pop
int3
in
pop
pusha
call
aas
pop
jmp
idivb
cltd
xchg
test
xchg
adc
pop
jbe
into
inc
cld
je
cmpb
fildll
mov
das
xchg
inc
mov
sub
fimull
xchg
jecxz
fucomi
or
xchg
mov
jb
xor
xor
push
sbb
lods
and
shl
xor
ret
push
jns
sub
or
or
xchg
std
push
add
jecxz
mov
ss
mov
enter
ljmp
mov
dec
dec
ljmp
xor
lods
out
repnz
ljmp
push
cmp
mov
dec
xor
sub
cmp
in
call
js
adc
fimull
inc
sti
bound
mov
xor
pop
inc
js
sub
ror
dec
stos
and
shl
jle
decl
jae
add
push
push
int3
es
and
push
sub
jne
cmp
xchg
dec
add
jo
add
inc
xchg
lcall
jmp
mov
mov
fdivl
mov
lods
jo
dec
mov
jp
hlt
call
mov
test
dec
push
bound
stos
lret
cmp
mov
pop
enter
mov
inc
fimuls
xchg
pop
or
cltd
dec
push
jmp
ret
adc
out
pop
out
test
loope
lods
cwtl
in
jle
or
cli
mov
aad
mov
adc
push
jle
push
mov
rcr
push
movsl
stos
pop
pop
inc
addl
in
in
push
out
fs
leave
adc
data16
das
in
add
xchg
testl
jmp
ss
jo
adc
or
int
mov
sub
mov
cmc
test
out
imulb
mov
jbe
test
sbb
repz
push
shll
hlt
popf
add
jbe
gs
cmpsb
pop
and
sbb
stos
sbb
lcall
push
mov
jg
dec
mov
sbb
pop
push
mov
fmul
andb
pop
repz
data16
enter
es
or
clc
mov
in
fs
jl
sub
fwait
sti
fistpll
les
jne
or
les
lods
jp
rcl
pop
pop
push
mov
cmp
jg
dec
notl
pop
sbb
lcall
pop
rolb
push
outsb
fwait
popf
mov
rcr
push
jmp
xchg
pop
into
mov
or
aaa
pop
inc
pop
jbe
dec
je
outsb
lahf
xchg
dec
and
sbb
pusha
sub
setle
fisttpll
out
lret
push
fwait
mov
push
sbb
std
loopne
mov
jmp
sbb
jg
cmp
lds
mov
aad
sub
jne
jmp
rcpps
push
stc
popa
enter
cmp
mov
xchg
in
sbb
xchg
sbb
sub
adc
inc
dec
mov
inc
jp
movsl
push
shl
pop
je
stos
inc
out
inc
stos
mov
das
fisubrs
xchg
mov
into
mov
cwtl
sbb
es
mov
pop
mov
or
mov
ret
cmp
movsl
repz
repz
push
fcmovnb
jmp
imul
sbb
btc
mov
les
jno
and
mov
inc
aad
es
movsl
out
push
outsl
jp
push
das
mov
loope
sti
rcrb
pushl
inc
stos
adc
mov
lds
jge
js
mov
push
sub
sbbl
add
loopne
arpl
push
imul
xchg
push
call
loope
xor
je
sbb
imul
sbbb
pushf
sub
insb
xor
cmc
pop
or
adc
clc
push
aad
xor
enter
sbb
arpl
push
hlt
mov
rcrb
iret
add
dec
mov
push
pop
mov
icebp
jmp
sbb
scas
lcall
add
adc
pop
adc
test
outsl
lods
or
mov
mov
cmp
adc
out
jns
cmp
test
sahf
imul
mov
push
dec
rolb
ljmp
imul
jecxz
imul
xor
dec
andb
push
pop
orb
inc
xchg
jmp
je
loopne
subl
in
jne,pt
cmp
subb
jb
mov
gs
sub
pop
jge
call
es
jne
scas
jae
push
add
dec
fmull
cmp
and
pop
call
mov
fbld
push
flds
xor
jge
mov
or
cwtl
imul
jle
and
pop
sahf
ljmp
test
loopne
mov
pop
jecxz
xor
inc
push
test
aaa
imul
ret
rolb
push
or
loop
icebp
imul
add
sub
mov
lret
shrl
xchg
sbb
leave
push
inc
stos
call
pop
cmpsb
movsl
pusha
dec
nop
mov
jg
push
inc
push
mov
sarb
mov
ret
xor
jmp
sub
or
push
xchg
loopne
and
jmp
cmp
repz
mov
push
sti
lret
add
add
mov
mov
inc
in
adc
mov
bound
push
sbb
mov
std
and
cmp
add
je
adc
iret
pop
push
pushf
addr16
add
push
xor
push
push
hlt
test
scas
in
lock
sub
or
xor
jl
loopne
xor
xchg
mov
xor
sti
adcl
cmp
ror
xchg
stos
sub
fstpl
xchg
or
inc
pop
popa
shll
les
xor
cmp
mov
fwait
jns
sub
xor
inc
sub
jmp
dec
push
testl
push
xor
inc
push
or
xchg
lock
lds
mov
sub
dec
movsb
out
add
sub
lods
mov
aaa
addr16
dec
xor
add
fucomp
cli
mov
dec
push
scas
cmc
sbb
repnz
mov
enter
jns
mov
jo
pusha
enter
fisubrl
ljmp
add
mov
push
push
fldenv
stos
jno
mov
pinsrw
adc
xor
cs
cs
out
imul
jmp
inc
test
cmp
jno
xchg
mov
adc
xchg
add
dec
xor
cwtl
mov
xor
mov
inc
lods
in
mov
out
enter
jns
add
in
sbb
std
dec
out
push
mov
ljmp
add
push
int
imul
fisubl
jl
xchg
stos
dec
push
xchg
and
push
lcall
les
add
dec
and
mov
insb
repz
and
sub
pop
dec
mov
jmp
leave
sub
into
jecxz
cltd
popl
and
ret
xchg
add
cmp
call
push
scas
mov
call
and
in
xor
xlat
lret
in
pop
and
cld
mov
dec
sub
mov
imul
sbb
cs
test
and
sbb
scas
pop
out
imul
push
push
lcall
pop
loopne
fsubrs
mov
adcl
jl
jb
adc
adc
pop
sbb
orl
repnz
arpl
sbbb
lahf
cltd
push
jecxz
xchg
xchg
add
cmpsl
outsl
or
mov
mov
int3
mov
or
out
inc
add
inc
fwait
or
lods
sub
mov
hlt
jo
js
adc
je
jmp
sahf
outsl
xor
ds
imul
fdivrs
lret
ret
cwtl
movsl
xchg
pop
cmp
jge
test
mov
icebp
arpl
jns
ret
cmp
in
lods
pop
xchg
cli
mov
xchg
xchg
pop
xlat
xor
dec
xlat
ljmp
sbb
and
ficomps
imul
inc
pop
scas
int3
xchg
fstp
cwtl
hlt
test
or
jp
clc
mov
ds
push
leave
cli
xchg
push
movzbl
cmp
mov
out
xchg
sub
test
adc
mov
mov
lret
push
movsb
in
inc
xor
outsb
out
jb
ja
shrb
ret
xor
cmpsl
sub
pop
jge
in
adc
cmp
push
test
jl
rcrb
rorb
mov
ljmp
fwait
xchg
pop
ret
cmp
mov
adc
paddb
cmp
dec
loopne
out
sbb
filds
mov
popa
or
fs
je
rcrl
lock
add
push
test
adc
pop
out
scas
xor
mov
adc
loop
test
xor
pop
std
enter
lods
push
inc
outsb
inc
xchg
push
rcll
mov
jae
mov
and
push
adc
addb
add
xor
sbb
inc
adc
insb
inc
or
sbb
lcall
fs
sub
stos
jb
insb
push
or
int
pop
shlb
fnstenv
mov
dec
pop
and
and
lcall
jno
jg
sub
and
push
or
fisubs
pop
addr16
rcll
lret
je
or
jge
xor
ljmp
and
ror
jnp
push
mov
push
lods
adc
mov
inc
les
sbb
push
mov
movsb
js
or
inc
aad
test
add
mov
shl
jo
cs
test
inc
fwait
inc
mov
push
push
mov
cli
aas
adc
cld
mov
jge
mov
add
sub
mov
stos
nop
ljmp
jns
inc
cwtl
sti
outsl
add
jmp
test
mov
sub
out
xor
idivb
ljmp
daa
mov
not
xchg
dec
test
push
fimull
aaa
ja
call
scas
jge
je
pusha
mov
mov
xchg
jbe
data16
dec
xor
cli
pushl
loopne
mov
sbb
push
es
jbe
gs
inc
lods
mov
sub
dec
cmc
adcl
sub
and
jne
cmp
fcomi
mov
mov
push
enter
sbb
iret
inc
fstp
adc
add
into
mov
mov
es
movsb
leave
xor
cltd
xor
jo
pop
xor
inc
shl
mov
dec
xorb
ljmp
sub
dec
mov
aam
and
or
jb
outsb
rcll
dec
jno
pop
add
ret
mov
cld
mov
cmc
inc
push
or
fwait
cmp
mov
mov
cmp
aam
push
popa
sar
js
leave
icebp
popa
mov
inc
dec
ja
mov
lahf
jo
pop
cmpl
sti
les
pop
repnz
xor
mov
jne
mov
jp
js
fadds
adc
int
ja
jbe
loopne
cmp
cld
arpl
jae
jmp
adcb
mov
xchg
icebp
mov
in
faddp
pop
sbb
push
stos
push
cmp
mov
std
or
mov
mov
sti
std
jmp
cmp
fmul
int
insb
adc
pop
std
mov
lahf
mov
cmp
add
ror
xchg
fnstsw
jl
mov
sbb
bound
inc
dec
add
sarb
mov
shll
dec
sbb
or
bound
fidivl
je
and
lods
and
stos
xchg
mov
jno
leave
les
xor
mov
lret
js
rcrb
scas
gs
adc
xchg
mov
ret
lods
lret
adc
jmp
notl
push
pop
movsl
dec
push
mov
into
xchg
jae
std
push
pop
cmp
les
or
sub
mov
adc
fildll
pop
or
xor
rclb
mov
cmp
sub
pop
adcb
sbb
lcall
mov
lea
mov
test
je
xor
xchg
pop
loopne
sub
imul
mov
pusha
out
push
xor
xorl
rcll
stc
push
lahf
jno
and
xor
or
mov
out
and
sar
sub
sub
ds
std
mov
out
mov
push
call
js
stc
cli
aad
dec
adc
push
mov
mov
pop
adc
cwtl
aaa
mov
jbe
cmpsl
add
jecxz
lea
in
cmp
ljmp
int3
test
mov
mov
mov
cmp
sbb
cmp
jb
addr16
xchg
test
in
frstor
or
stos
lahf
adc
ss
cmp
ret
dec
out
dec
push
lea
mov
dec
fldt
lea
imul
cmp
cmp
pop
fmull
fldt
xor
xor
repnz
cmp
push
adc
ficomps
xchg
mov
jg
jge
sbb
iret
jmp
jne
jae
enter
mov
mov
mov
repnz
les
aad
sub
adc
or
jae
rolb
nop
add
adc
ss
lock
mov
int3
xchg
js
adc
sbb
and
sbbb
jne
dec
mov
mov
xor
mov
cmpsl
js
sbb
scas
stos
jb
dec
or
mov
insl
out
scas
cmp
xchg
popf
ss
mov
jbe
pop
cmp
ja
ds
insb
lods
dec
and
push
cmp
mov
pop
sub
hlt
push
pop
and
push
arpl
push
jp
cmp
fistl
cld
out
int3
pop
add
lahf
inc
add
and
sub
dec
sbb
or
dec
mov
cmp
test
jle
aam
mov
xchg
dec
lods
add
cld
xor
jae
cmpl
add
inc
pop
pop
pcmpeqd
xor
and
mov
ja
divb
shrb
adc
sbb
or
es
test
int
push
rolb
or
mov
mov
adc
inc
rcr
rorb
inc
pop
stc
shll
inc
loop
adc
xchg
pop
pop
sbb
shlb
stc
dec
sarb
fldenv
aad
repz
pop
mov
inc
ret
int3
jmp
inc
xchg
gs
loopne
push
test
hlt
mov
mov
or
aad
push
and
roll
jbe
and
push
in
pop
je
mov
sbb
out
inc
dec
mov
push
cwtl
mov
xchg
pushf
in
jns
cmp
sub
call
cwtl
jge
push
pop
cmp
stos
ss
out
hlt
dec
rcrl
out
mov
imul
xchg
adc
sbb
lock
inc
jl
call
sbb
push
mov
push
imul
popa
adc
call
jae
jle
fimull
mov
aas
cmpsl
in
lea
inc
add
mov
mov
and
mov
fwait
jl
insb
sbb
cwtl
test
jg
sbb
fldt
imul
push
in
lcall
imul
jg
mov
and
and
les
xor
adc
arpl
jbe
inc
shl
dec
in
mov
jns
jle
movsl
push
push
idivl
mov
out
nopl
sbb
xchg
or
add
sub
loopne
pop
mov
daa
aad
jne
imul
xchg
xor
cmp
mov
mov
and
imul
sub
mov
popa
and
and
xchg
xorb
scas
fmull
cmc
jns
mov
add
in
add
and
inc
mov
lret
mov
pop
subb
aad
test
je
clc
fcmovb
mov
and
and
loop
push
xchg
pop
sti
repz
sub
mov
inc
cmp
or
xor
mov
neg
aam
push
push
jecxz
iret
mulb
addr16
inc
mov
lcall
cmp
mov
outsl
out
pusha
cmpsb
cmpsb
xchg
xchg
scas
add
das
ljmp
pop
xchg
cmp
pop
xchg
lahf
cmp
cmpsb
xchg
iret
jecxz
xchg
add
lods
cmp
jno
push
or
mov
pop
xchg
cmc
inc
arpl
lahf
loope
stos
mov
add
mov
lock
pop
dec
fdivrl
inc
push
dec
bound
xchg
mov
ficoml
cmp
je
jp
adc
andl
jle
push
arpl
jb
dec
inc
enter
cmpsb
push
xchg
sbb
jecxz
cmp
push
ret
scas
pop
rorb
pop
push
push
lret
repz
in
mov
xlat
filds
aad
fldenv
xchg
es
je
push
xchg
pop
xlat
gs
das
add
popa
mov
fwait
add
cmpsb
int3
lahf
jg
jp
sub
std
jns
lea
fldcw
daa
inc
in
sbb
add
jp
bound
emms
shlb
aad
mov
lret
clc
push
pop
fwait
add
xor
dec
into
pop
sub
clc
mov
adc
mov
repnz
sahf
adcb
or
add
aas
sti
clc
icebp
pop
dec
scas
sub
out
fcoml
out
repnz
and
jns
mov
lret
cmc
fadd
cmp
rolb
outsb
int
inc
popa
lock
fldt
lods
fstl
std
xchg
lret
out
movsl
fwait
push
pop
cmp
adc
mov
sub
gs
inc
mov
jmp
xchg
lcall
pop
mov
arpl
mov
cmpsl
mov
repnz
in
push
or
int
adc
dec
adc
sub
push
xchg
mov
clc
cmp
js
in
enter
lret
stos
fs
sbb
mov
dec
push
stc
fldl
aam
addr16
sbb
and
fcmovbe
bound
out
xchg
cmove
cmpsb
push
int
stc
push
aas
movsl
js
sbb
shl
jl
mov
outsl
or
xchg
ret
adcl
lcall
lret
cwtl
in
sub
push
push
pop
sub
arpl
imul
fldcw
and
xchg
faddl
inc
mov
xchg
movsb
add
mov
mov
xchg
xor
inc
sub
adc
push
add
jo
pusha
mov
movsb
sub
xrelease
mov
push
jbe
jecxz
lods
xor
pop
js
jmp
add
in
and
je
lea
jmp
cmpsb
cmpsl
out
xchg
push
inc
cltd
mov
lds
loopne
fwait
xor
pop
mov
mov
mov
notl
arpl
daa
xor
mov
add
lock
xlat
mov
cmp
pop
in
shl
xchg
or
pop
and
mov
aas
sub
cld
cwtl
cwtl
xchg
inc
push
scas
stc
es
xchg
cmpsl
cltd
push
jp
mov
mov
lock
adc
rcll
lahf
push
pop
fsubrs
aaa
daa
mov
es
mov
pop
mov
mov
adc
add
lods
xor
iret
loopne
lcall
inc
loope
inc
aaa
add
jo
mov
mov
mov
mov
decb
adc
mov
mov
dec
sub
push
push
ficoml
test
jne
adc
out
or
xchg
js
pop
repnz
fnstcw
sub
lock
jle
outsl
rol
push
mov
push
or
mov
enter
mov
xor
cs
lea
mov
add
or
cld
or
pop
dec
mov
cmpsl
out
xor
pop
bound
ljmp
and
inc
dec
iret
fmuls
xchg
xchg
mov
movsl
cmpsl
popf
call
ficoml
in
sbb
xor
dec
repz
fwait
pop
mov
push
mov
test
imul
dec
ja
mov
jns
test
inc
cmp
decb
in
cmc
nop
mov
stos
push
sbb
scas
mov
push
int3
fidivrs
push
pop
and
std
mov
lret
dec
xchg
sub
lock
in
push
jbe
and
mov
insb
out
mov
lods
sbb
dec
ljmp
mov
push
cld
rclb
pusha
or
fstpt
es
ficoms
stos
lcall
nop
and
jae
cmc
mov
or
repnz
dec
repz
data16
insl
popw
adc
mov
stos
jl
sbb
in
ror
repz
mov
lock
sahf
mov
inc
ret
dec
inc
jno
or
xor
imul
or
frstor
push
popf
insb
int3
stc
cmc
lods
inc
hlt
mov
dec
pop
cld
ljmp
add
jns
fwait
sub
in
push
popf
mov
fadd
jb
adc
pop
dec
ret
testl
popf
add
bound
ret
popf
or
clc
mov
addr16
test
in
inc
xchg
data16
mov
movsl
xor
int
sbb
push
sub
push
and
adc
cmp
inc
cmpsb
xchg
lock
cwtl
in
xor
xor
adc
cmpsb
xchg
mov
pop
imul
cld
adc
mov
mov
mov
mov
xchg
dec
mov
push
sbb
adc
xor
add
mov
into
and
push
lcall
into
fwait
leave
stos
mov
push
add
enter
dec
outsb
ja
stos
inc
cmp
xor
jae
inc
pop
add
push
test
inc
push
stc
mov
stos
ret
or
push
mov
lock
xlat
mov
out
push
cwtl
and
mov
cmp
cmp
mov
orb
int
mov
out
lea
jne
adc
xchg
sbb
int
add
xchg
push
jge
adcl
pusha
into
sbb
xchg
adc
hlt
cld
movsl
or
sbb
push
adc
shl
xor
push
mov
pop
cli
fs
movsb
lods
test
addr16
and
jbe
movsb
xchg
dec
xor
mov
scas
das
cmp
jl
andb
mov
or
nop
xchg
pop
enter
repnz
sub
es
pusha
xor
lods
arpl
or
sbb
push
repz
cmc
pop
cmpb
in
inc
mov
push
sbb
sbb
shrl
or
and
shrb
mov
lret
mov
push
out
fisttpll
push
push
mov
pop
iret
ret
xlat
pop
mov
rcll
mov
cmp
mov
mov
fstpt
mov
push
lret
int3
cmp
add
cmp
out
xchg
pop
adc
cmp
fdivrl
mov
sbb
stos
roll
in
movsl
sarb
inc
bound
fcomps
mov
lahf
cmp
loop
jp
ja
sub
mov
mov
mov
int
out
movsb
insl
dec
mov
ficoml
xor
imul
pop
cmp
pop
adc
mov
cmp
arpl
dec
mov
xchg
nop
lods
arpl
sti
add
ds
mov
jl
xacquire
fidivrs
outsb
sbbb
in
adc
xor
mov
lret
mov
pushf
add
pusha
ljmp
xorb
rcrb
js
pop
in
or
jle
push
or
repz
mov
mov
add
es
and
test
aas
sarl
xchg
add
cmpsb
sbb
cld
adc
xchg
jnp
test
fimull
mov
push
adc
inc
popa
pushf
sub
inc
or
or
and
shrl
xchg
movsl
push
push
cmpsb
test
and
mov
enter
mov
sbb
mov
pop
addr16
push
push
jecxz
jb
jp
lret
insl
fistl
outsl
mov
cmp
sub
xchg
repz
out
daa
sub
dec
mov
push
imul
ficoml
sbb
test
and
xchg
mov
and
jnp
push
divb
pop
mov
loope
push
xor
push
jecxz
mov
enter
pop
jmp
pop
mov
sub
out
popaw
aad
mov
adc
mov
pushf
sub
insb
ffreep
mov
xor
nop
pop
and
movsl
mov
repz
dec
add
std
lret
mov
in
bound
mov
lds
inc
push
mov
lret
stos
int
pop
xor
mov
pop
jge
cmp
outsb
and
jecxz
jg
test
cmc
xchg
out
fcmovnbe
lods
pop
fcmovne
arpl
stos
lock
loopne
add
aas
stc
dec
into
sbb
lds
add
loop
adc
push
mov
aas
out
std
adc
cltd
inc
adc
pop
jnp
pop
clc
stos
test
mov
xadd
mov
pop
scas
iret
pop
xchg
xor
scas
das
idivb
lock
jmp
pop
jge
jnp
xchg
stos
add
incl
leave
mov
push
cmc
out
jp
push
mov
repnz
sbb
imul
cmpsb
ja
cmp
xchg
inc
es
xor
lods
enter
push
dec
fcoml
std
add
arpl
dec
je
fcmovbe
je
fimull
or
add
stos
xchg
xchg
mov
mov
dec
and
xor
ss
jnp
inc
jp
int
pop
rol
sbb
xorl
lea
dec
clc
inc
ret
notb
aas
xor
lahf
sbb
or
inc
jg
in
movsb
jne
comiss
das
out
lret
or
cmp
scas
push
add
stos
sbb
hlt
mov
dec
dec
imul
popf
punpcklbw
subl
mov
nop
lret
lock
add
addr16
mov
cmp
jl
xchg
in
sub
inc
mov
mov
cld
jg
add
out
inc
adc
dec
jg
or
pop
loopne
push
daa
push
pop
mov
and
imul
lret
mov
iret
mov
cli
sbb
lds
out
dec
iret
dec
xchg
mov
mov
insl
push
and
push
shll
adc
les
stos
cmpsl
dec
sub
je
and
shlb
cs
mov
fmuls
dec
pop
bound
js
dec
aam
cmpsl
and
adc
movsl
xchg
xchg
adc
xchg
dec
mov
jb
lods
test
fists
rcll
add
std
out
dec
adc
adcl
cmpsl
scas
jb
jmp
imul
xchg
scas
cmp
mov
mov
cwtl
shl
add
push
or
out
idiv
cmp
pop
mov
dec
xchg
push
int3
nopl
test
push
push
fdivrl
xchg
lret
bound
outsb
shrb
pusha
mov
dec
pop
add
push
pop
pop
dec
jp
xor
inc
loopne
fisttpll
in
cld
mov
iret
lea
xor
hlt
clc
js
int3
add
cmpl
jecxz
sahf
mov
cld
cmp
push
enter
sub
daa
es
lea
and
xchg
cmp
mov
sbb
or
adc
jl
out
inc
imul
push
push
cmpsb
arpl
mov
sbb
xchg
js
out
loopne
mov
cmp
mov
subb
scas
jp
std
mov
rclb
ret
mov
icebp
sbb
es
push
xor
popf
out
test
out
cmc
popa
or
jb
inc
jmp
out
dec
notb
aam
adc
jp
lock
addr16
cli
insl
cmp
loop
icebp
cmpsb
xchg
pushf
fwait
xor
or
xor
push
sub
shlb
push
fidivrl
push
stos
dec
xchg
pop
lods
jle
gs
fcoml
pop
leave
or
fsubrs
xor
int
push
mov
jbe
loop
pop
xchg
pop
add
imull
add
gs
dec
in
mov
sti
aad
test
jae
scas
xchg
jne
insb
fcoml
push
jae
pop
xchg
xchg
sahf
dec
xorb
or
pop
jmp
xchg
adc
aam
roll
and
push
das
mov
mov
shll
jge
pop
std
fsts
jmp
out
push
ret
push
outsb
pop
mov
ds
loopne
pop
or
ja
push
jp,pn
and
adc
push
xor
loopne
lret
xor
pushf
cmpl
rolb
and
loop
dec
jno
inc
lock
shll
add
mov
push
mov
hlt
sar
ss
rorb
pop
arpl
pop
push
or
loop
xor
fistl
jl
and
jb
mov
xchg
or
fmul
and
lahf
es
lods
stos
cs
sbb
and
jle
jmp
out
add
adc
scas
cmp
lock
clc
int3
jle
fimull
int
dec
ljmp
jmp
mov
xchg
add
test
and
mov
stc
stc
push
xor
jg
inc
xchg
xor
lods
cs
adcb
push
data16
and
iret
jne
ds
icebp
dec
cmp
dec
and
jb
pop
ja
sbb
adc
std
adc
push
push
imul
lods
loopne
sbb
push
fiadds
inc
testl
mov
xor
xor
or
sbb
fcmovb
dec
jne
mov
pop
mov
subb
mov
inc
inc
in
dec
les
mov
andb
jo
fimuls
mov
inc
aaa
pop
push
cmp
add
pop
arpl
inc
sbb
je
scas
popf
test
ja
xor
dec
gs
fstps
and
sbb
adcl
sbb
mov
pop
cmpsb
gs
call
fiadds
sbb
push
mov
arpl
sarb
icebp
sbb
jle
xlat
sub
fstps
ret
loope
ja
testl
inc
mov
fs
and
test
nop
dec
jns
xchg
push
jmp
pop
add
xchg
xor
ret
or
pop
pop
arpl
in
jle
repnz
lds
push
pop
lods
xor
cli
cmp
std
sbb
push
push
imul
xor
aad
outsb
subb
push
outsb
ljmp
das
cmp
pop
inc
sbb
mov
push
lahf
inc
test
xor
push
and
add
in
or
aas
mov
mov
fldt
cmp
add
sbbb
xor
clc
pop
adc
out
jns
pusha
pop
add
adc
lock
sub
aas
ja
ljmp
sub
or
or
or
insb
xchg
dec
pop
sbb
aad
inc
sbb
mov
lahf
sub
add
stc
pop
imul
push
insl
aaa
lods
idivl
xchg
inc
sbb
sub
or
xor
and
test
mov
daa
outsl
or
insl
dec
dec
and
scas
not
mov
lret
shlb
test
scas
mov
das
sbb
push
lret
cmp
lahf
inc
fiadds
adc
fcmovbe
lock
fs
adc
or
test
mov
xor
lcall
stos
movups
sbb
into
mov
sub
jae
mov
adc
mov
add
loope
movsb
imul
pop
push
pop
add
xchg
jl
cwtl
rcll
fcomps
push
cmpsb
mov
ficomps
imul
xchg
scas
decl
lds
testb
fisttpl
les
insb
pop
out
cld
popf
and
add
cwtl
xchg
leave
xor
push
mov
movsb
or
out
lcall
jge
jno
add
lods
xchg
popa
cmc
fwait
mov
jno
push
sub
and
mov
jge
lods
lock
js
jmp
jb
add
dec
cmp
mov
scas
mov
loopne
lods
repnz
fists
fcoml
sub
xor
sbb
fwait
iret
sub
jle
scas
mov
add
dec
jmp
sub
xchg
xchg
jl
jmp
cltd
clc
or
leave
ljmp
rcll
xchg
decb
in
xor
mov
or
lds
sbb
and
lods
xchg
aas
addl
jb
xchg
ret
pop
mov
inc
fisttpll
pop
pop
stc
sbb
push
outsb
jl
or
insl
pop
cmp
outsl
orb
push
mov
in
xchg
and
repnz
cmp
push
out
sarl
mov
iret
cmpsb
inc
fisubs
das
int
fwait
stos
rol
mov
into
cs
mov
adc
ja
sbb
fisubs
adc
add
cld
cmpsb
lahf
add
shl
jg
iret
int
ss
sti
fsubr
mov
rcrb
mov
sub
popa
fdivrs
cld
rcl
outsb
orb
jle
out
outsl
sbb
xor
pop
shll
and
shlb
sti
into
add
xor
or
xor
jnp
and
jge
leave
call
scas
pop
push
adc
adc
lret
xor
pop
scas
jmp
in
mov
popf
fcmovnb
jnp
dec
lock
repz
cld
push
rcr
sbb
add
lods
arpl
leave
lods
scas
ljmp
call
stos
mov
inc
ja
stos
and
test
ja
andb
pop
push
pop
adc
dec
rorb
xor
add
xchg
pop
and
test
pop
pop
adc
es
dec
sbb
movsb
sub
jl
stos
pop
sub
jne
roll
call
loope
jno
movsl
sahf
jl
jmp
cwtl
cmp
mov
shll
std
fisttpll
sbbb
push
sbb
gs
mov
adc
mov
scas
lods
xchg
pop
mov
lret
test
push
add
adc
cli
in
mov
fistps
cld
mov
addl
icebp
mov
aam
or
sbb
inc
movsl
push
negl
idivl
idiv
push
ret
add
ss
jo
fbld
dec
movsl
adc
xchg
fdivl
dec
rclb
jl
lock
cmp
jae
ds
add
jae
xchg
ss
dec
xchg
push
out
mov
jb
shrl
movsl
sub
push
data16
push
andnps
dec
or
test
in
fdivrl
adc
pop
cli
sar
mov
or
out
mov
aam
nop
mov
fs
push
adc
push
xchg
loop
stc
jb
adc
jne
cld
hlt
ljmp
jno
dec
repnz
fstp
enter
xor
cmpsb
or
adc
adc
sub
incl
mov
orb
sub
mov
xorb
fistl
inc
mov
or
fwait
push
pushw
mov
xchg
pop
sbb
pop
cltd
leave
dec
sub
add
xchg
sbb
add
pop
mov
insl
in
fsubs
loopne
and
outsb
popf
insl
pusha
std
cmp
stc
mov
jmp
aam
sbb
or
sub
jge
clc
sbb
rorb
sub
lods
or
add
mov
mov
stos
push
or
sub
mov
push
mov
in
xchg
popf
inc
cmp
sti
repnz
push
mov
out
lret
xchg
mov
xor
push
inc
dec
mov
mov
in
jne
pop
outsb
sbb
xor
inc
mov
test
icebp
iret
or
jo
mov
insb
jg
fcompl
out
outsl
sub
xchg
xchg
mov
cmpsb
push
mov
aad
and
mov
pushf
imul
jb
push
pop
pop
and
jnp
adc
or
or
loop
dec
pop
rorb
sub
pop
dec
push
adc
lahf
add
sahf
xchg
lret
das
add
std
std
and
push
mov
stc
sub
xchg
dec
lret
or
movsb
adc
clc
test
fidivs
fisttpl
or
mov
fcmovnbe
sub
cmp
cld
pop
pop
sbb
pop
adc
fwait
jnp
js
dec
fwait
insb
mov
jge
adc
or
or
dec
push
inc
add
clc
sti
test
push
movsl
push
add
xchg
inc
in
push
sub
xor
mov
out
or
lret
daa
pop
adc
test
idivb
mov
int3
pop
xchg
push
mov
test
push
jp
es
les
mov
fisubrl
inc
inc
loope
mov
sub
stc
mov
in
pop
scas
subl
mov
xor
sti
mov
stos
sub
push
push
add
rcr
stos
sub
ljmp
shrl
pop
pop
fwait
dec
enter
rcl
bound
scas
mov
ficomps
in
and
xchg
insl
je
test
negl
in
lods
out
xlat
out
mov
cs
cmp
sahf
pop
in
inc
rclb
lcall
stos
pop
inc
pop
cmp
lea
rcl
sahf
in
jnp
mov
jb
or
add
xchg
shll
adcb
flds
pop
sbb
sub
fistpl
or
gs
xchg
cmp
lcall
jo
cmp
aam
insl
xor
dec
and
push
sub
jae
addr16
mov
pop
add
int
repnz
shlb
lods
xor
dec
dec
xchg
sbb
stos
dec
cli
mov
sbb
jns
movsl
aas
test
mov
enter
jbe
sbbb
pop
adc
hlt
xor
repz
aad
xchg
jp
int3
or
pop
add
xor
mov
cli
push
sbb
dec
aas
sahf
pop
mov
call
or
jae
jmp
mov
sti
push
push
add
push
push
pusha
cmp
nop
add
test
cmp
fisubs
and
into
cwtl
inc
movsl
xchg
iret
imul
push
adc
pusha
push
and
inc
cli
mov
mov
lods
hlt
xor
loopne
ss
sbb
cmp
cwtl
mov
cwtl
xor
xchg
daa
addr16
std
push
ret
jecxz
rcrl
mov
or
call
xchg
cmpb
hlt
mov
orb
insb
mov
mov
shrb
mov
sbb
lret
orl
cmp
mov
bound
pop
shlb
shrl
add
out
add
int
fs
dec
fwait
cli
xor
jae
les
pop
lock
popa
repnz
mov
test
das
push
mov
loope
movsb
jp
sbb
push
scas
and
mov
loopne
pop
test
addr16
lds
fldt
xchg
stos
push
ljmp
hlt
imul
xchg
mov
jno
rolb
lret
jb
and
push
pop
push
jno
mov
push
call
dec
mov
mov
jp
mov
lea
xchg
scas
jge
out
in
dec
iret
fs
jnp
outsl
das
pop
push
imul
push
out
xor
popa
jge
ljmp
mov
popa
aad
sbb
xor
sub
subl
cmc
sbb
nop
in
movsl
xchg
jp
out
jne
inc
mov
cmp
leave
and
push
jecxz
cwtl
lahf
jae
out
adc
int
xchg
rorl
pop
rcll
testl
addb
cmp
stc
add
xchg
adc
jmp
loopne
popf
addr16
pop
add
ja
mov
imull
insb
xchg
push
jmp
sub
xor
jle
in
pusha
stos
fmuls
push
imul
repz
dec
jne
mov
loope
cmpsl
or
pop
loopne
jbe
or
xrelease
adc
out
iret
xchg
dec
addr16
mov
dec
sub
adc
xchg
rolb
jge
adc
call
fidivrs
jbe
cmp
jg
inc
and
add
in
pop
push
xor
outsb
mov
xor
popf
xchg
sub
adc
rep
addr16
fstpt
push
roll
js
test
mov
rclb
pushf
jb
mov
xor
add
je
or
cwtl
push
xor
mov
repnz
divl
scas
inc
scas
xchg
mov
inc
subb
arpl
xor
std
push
jmp
adc
push
pop
push
out
popa
pop
or
clc
xchg
imul
pop
scas
xor
jg
add
jnp
jp
add
xchg
fstl
in
pop
outsb
xorl
mov
mov
xor
popf
mov
xlat
sbb
mov
loop
sti
jnp
pop
push
xor
inc
mov
int3
xor
adc
es
mov
cmc
adc
frstor
pop
pop
ljmp
outsl
and
dec
int
js
in
dec
les
pop
fldenv
mov
loop
stc
mov
and
pop
fcmovnu
pop
or
adc
js
neg
sub
cld
mov
sbb
sbb
call
fsub
mov
mov
idiv
addr16
dec
jl
xor
mov
cmp
sahf
mov
xorb
sbb
shll
add
sub
in
pop
mov
sub
xor
adc
sbb
push
popl
in
jge
sti
xor
pop
jnp
cmp
fsubl
mov
orb
sti
mov
pop
sub
xchg
ret
das
sbb
xor
filds
cmp
fnstenv
jo
stc
insl
in
sub
jmp
pop
add
sub
mov
sub
int3
lock
daa
adc
jecxz
jmp
sahf
int
mov
push
dec
push
xchg
or
add
jne
xor
in
mov
icebp
mov
pop
xor
inc
xor
inc
or
mov
dec
movsb
inc
push
lret
cmp
mov
sub
mov
bound
jbe
or
test
inc
push
jne
test
gs
rcll
lods
sbb
bound
sti
pop
adc
dec
and
cltd
cs
push
stos
cs
out
lret
std
xor
mov
hlt
es
xchg
pushf
test
or
scas
dec
fisubl
sahf
and
cltd
aas
mov
mov
mov
fildll
xor
push
daa
mov
xchg
jecxz
xchg
mov
enter
adc
loop
xlat
ljmp
shrb
lahf
mov
out
fmul
andb
stos
shl
loop
xor
add
ja
dec
sub
cs
sub
aas
movsb
mov
pop
mov
push
adc
enter
adc
ret
out
popf
or
add
mov
xchg
dec
cmp
lcall
sub
ja
lea
xor
mov
cmp
call
loope
mov
ja
or
sti
inc
loopne
adcl
es
pop
sbb
sub
stos
dec
adc
iret
jecxz
push
jmp
in
imul
mov
dec
movsb
add
pusha
in
cmp
dec
mov
iret
in
mov
dec
cli
xor
or
mov
pop
add
int
jae
add
mov
push
test
js
xchg
aad
nop
push
sti
jecxz
ja
je
rcl
scas
cmp
or
jl
mov
inc
dec
pop
sarl
mov
adc
jnp
mov
dec
mov
cmpsl
cld
das
pop
dec
bound
mov
cltd
subb
xchg
pushf
bound
inc
call
and
lea
and
movsl
popa
mov
mov
sbb
adc
jle
mov
pop
jp
or
aas
xor
shl
xor
mov
inc
adc
ljmp
push
add
iret
lods
sub
shlb
decl
and
lret
mov
stos
rcl
jnp
pop
fmull
xor
sub
repnz
iret
or
lahf
rcrb
inc
dec
mov
loopne
ljmp
add
sub
push
int3
stc
cwtl
cmp
lcall
mov
adc
cmp
mov
and
imul
pop
in
push
into
ret
js
mov
imul
add
lods
pop
pop
sti
mov
into
subb
out
cmp
test
pop
adcl
dec
cmp
pop
jne
idiv
inc
jg
cmpsb
mov
outsl
inc
in
imul
pushf
jmp
imul
addb
xor
out
cmp
jmp
and
mov
aas
hlt
jo
push
dec
adc
xlat
dec
adc
icebp
in
cld
adc
cwtl
dec
sysexit
add
pop
inc
adc
addr16
adc
ror
cmp
dec
les
popa
sub
rclb
into
cmp
rorb
add
or
mov
arpl
andb
adc
mov
in
ds
push
divl
jmp
daa
add
and
xchg
scas
out
mov
add
dec
popf
mov
push
mov
mov
dec
ss
aad
es
mov
push
shrl
dec
add
loope
pop
stc
mov
xchg
gs
jg
repz
lds
mov
pop
adc
jg
sahf
sbb
mov
ror
lret
aam
fstl
jbe
mov
jnp
mov
push
mov
out
lods
jmp
mov
xor
std
das
and
fwait
cmp
subl
stc
addb
or
enter
cmp
push
push
stc
push
in
push
dec
dec
pop
xor
and
rcl
add
lea
add
adc
int3
in
test
subb
arpl
ficomps
xchg
push
xchg
and
fs
mov
divb
push
jge
and
mov
mov
lds
scas
xchg
jmp
push
aad
nop
push
xchg
stos
jbe
rcrb
popl
mov
sub
ds
or
or
mov
jo
shl
push
mov
in
jmp
incl
call
adc
lcall
ret
ds
add
subb
mov
pushf
cmc
ljmp
lahf
and
push
rclb
push
jle
xlat
pop
dec
out
sbb
push
lret
pop
mov
or
xlat
dec
sbb
mov
sbb
xchg
push
inc
out
push
jmp
xorb
jp
dec
adc
mov
outsl
jne
int
dec
lock
outsb
mov
push
sahf
mov
inc
dec
pop
and
mov
cli
add
cli
scas
or
mov
pop
jno
sarl
sbb
insw
repz
mov
aad
xor
fsubs
and
pop
jp
es
shrb
movb
es
fisttpl
cmpsb
mov
lds
lods
jbe
adc
mov
push
cwtl
or
adc
xor
sbb
mov
add
mov
inc
clc
int
sub
add
jno
lea
xor
cld
sub
lret
jne
outsl
xchg
xchg
nop
sbb
cli
dec
dec
pop
nop
rolb
divb
mov
mov
dec
lcall
stos
cmp
aam
add
mov
repnz
push
fimuls
std
xchg
cli
or
jne
out
outsb
aam
push
dec
add
sbb
in
stc
scas
jnp
fisttpll
sub
cs
aas
adc
jne
les
arpl
push
sub
pop
mov
dec
into
cli
ds
inc
leave
fsts
xor
call
cmp
and
lds
jl
adc
pusha
inc
sbb
ss
sbb
scas
sbb
int
popf
scas
outsb
outsb
jmp
push
outsl
rcll
or
mov
mov
add
add
out
jnp
jne
mov
xchg
dec
mov
sub
jne
dec
gs
orl
mov
shrb
dec
imul
jg
mov
out
xor
mov
jno
adc
in
or
sub
clc
pop
aad
jl
push
jno
imul
flds
std
pop
jl
lretw
push
add
stc
or
or
movsb
pushf
pop
imul
outsl
rclb
and
jecxz
cmp
add
dec
mov
sbb
cmp
mov
pop
sbb
bnd
cmp
sbb
or
xor
mov
pushf
and
fidivl
cs
data16
push
mov
mov
or
ds
rcll
xchg
inc
push
mov
inc
sbb
ficomps
inc
aam
xor
fdivrs
gs
scas
mov
loop
jb
scas
icebp
fnstsw
inc
aaa
imul
inc
cmp
jecxz
inc
movsl
xchg
adc
xlat
jnp
sub
push
dec
dec
jne
xorb
aaa
dec
mov
cmp
sbb
pop
fmuls
insl
and
leave
std
leave
xor
sbb
je
in
xchg
nop
pop
sahf
mov
mov
lods
mov
pop
pop
mov
or
pop
cmp
gs
push
icebp
jmp
dec
fldcw
mov
or
imul
leave
pop
push
movsl
pop
mov
mov
adc
xchg
les
ljmp
xor
lret
dec
fdivrs
cwtl
and
and
push
daa
and
stos
or
outsb
sbb
pusha
xor
out
or
roll
push
aas
faddl
sub
inc
pop
push
xchg
loope
popa
cmpsl
nop
xchg
lret
aaa
repnz
push
mov
sahf
inc
jmp
out
lcall
lds
es
out
call
and
stos
xchg
sub
je
ret
and
push
mov
cmpsb
sub
and
and
repnz
jl
repnz
scas
stos
arpl
jle
jbe
paddb
incl
xchg
outsb
pop
pop
in
mov
mov
push
jbe
scas
notb
mov
pop
sub
outsl
test
push
adc
or
lods
add
inc
insb
sub
cmp
inc
xor
insl
int3
icebp
leave
push
mov
sub
and
out
mov
xchg
daa
cmp
loope
mov
and
or
lea
icebp
xor
push
inc
repnz
int
inc
mov
adc
xor
adc
mov
add
jae
ds
mov
xchg
jno
lds
pop
mov
outsl
daa
sbb
push
jle
scas
lds
push
pop
adc
jmp
mov
push
pop
and
dec
mov
lahf
subb
faddp
jle
aaa
jae
dec
dec
jno
test
shll
std
pop
push
insl
mov
ficoml
lds
clc
cmp
in
addr16
stos
aaa
mov
add
sub
outsl
mov
push
dec
daa
ret
jle
xchg
outsb
mov
mov
ljmp
push
pop
leave
xor
insl
test
sbb
shll
sti
and
sbb
inc
fwait
and
sbb
cs
dec
add
sbb
cmp
xchg
aas
xchg
mov
cmpb
sti
push
pop
adc
cmp
aaa
mov
sbb
out
jmp
sub
lea
add
lahf
dec
pop
rorb
call
shrl
lea
scas
push
push
rorl
dec
mov
mov
or
inc
inc
sbb
dec
adcl
and
jg
stos
push
inc
mov
sub
inc
sub
sahf
fs
jnp
pop
jbe
xor
dec
cld
mov
jns
cmpl
and
xor
ds
add
xchg
inc
xor
sbb
daa
xor
repnz
sbb
xchg
in
or
imul
popa
inc
movsl
std
mov
xchg
inc
xor
insl
les
aad
mov
push
loop
icebp
jle
jbe
test
stc
lahf
pop
inc
and
cmp
adc
adc
push
mov
push
push
inc
mov
scas
pop
fstp
sarl
add
shrb
push
dec
and
jp
loope
out
js
fnstsw
int
adc
ds
js
adcl
dec
fsts
mov
sbb
inc
mov
jo
add
jge
pusha
xor
mov
sbb
fsubrl
enter
int
jge
movsb
lret
fsubr
push
mov
fwait
jae
dec
push
arpl
mov
adc
ja
insl
sbb
mov
mov
inc
and
mov
movsb
xchg
pushf
or
jo
add
jp
out
jbe
insl
inc
shlb
movsl
in
cmp
xchg
sub
outsb
insb
jae
repz
add
imul
out
popa
push
in
xchg
or
jecxz
cltd
push
loop
mov
dec
mov
loope
pop
add
xchg
xchg
add
adc
cmp
or
gs
jnp
filds
mov
xor
sbb
sbb
ret
jmp
and
mov
movsb
xchg
mov
xor
movsb
cltd
cwtl
pop
mov
jmp
pop
scas
xchg
cmovbe
dec
cmc
sahf
out
dec
imul
dec
das
push
mov
jne
cmp
inc
or
mov
aad
mov
cltd
lcall
mov
add
es
jge
adc
pop
test
push
mov
scas
dec
and
cld
mov
mov
sbb
xor
test
xchg
sbb
mov
fsubrl
mov
loopne
fwait
jp
pop
cmp
jge
fs
nop
mov
fwait
xchg
jne
xchg
aas
cwtl
mov
jp
dec
scas
sbbl
data16
xchg
jp
out
and
stos
test
lcall
in
jb
jp
cmp
xchg
and
sbbl
js
xor
sbb
sub
push
and
push
hlt
dec
push
adc
inc
out
sub
cmpsb
jmp
fldl
fnstcw
and
lcall
int3
mov
cmp
ret
subl
pop
imull
pop
mov
mov
dec
push
mov
fldenv
and
iret
cwtl
push
icebp
outsb
dec
repnz
or
scas
les
jmp
mov
mov
adc
test
jnp
iret
imul
fisttps
jmp
stos
dec
cmpsb
test
push
stos
sub
int3
add
add
test
cmp
pextrw
inc
loope
cltd
cld
dec
into
jne
int
sbb
xchg
shlb
mov
push
pop
fisubrl
mov
mov
jae
push
jmp
stos
xlat
jo
daa
pause
mov
sbb
clc
iret
insb
dec
cmpsb
call
mov
out
xorb
int3
cli
or
sub
in
movsb
decb
or
ja
adc
push
jle
sbb
cmp
aam
pop
cmp
in
mov
gs
dec
mov
lock
in
shrb
clc
push
cmp
sbb
outsl
adc
cmp
adc
jp
lret
mov
rcrl
negb
mov
xlat
push
int
adc
jnp
negb
pop
pop
mov
inc
movsl
push
repz
push
xchg
mov
push
push
sub
shrl
jo
dec
and
cmp
scas
sub
fisubl
lea
in
pop
jae
sbb
xchg
mov
cmp
xchg
ret
loope
adc
mov
push
cmp
fistpll
and
mov
jbe
ljmp
adc
test
jg
gs
fisubrs
or
dec
imul
adc
iret
rcr
pop
xor
mov
shrl
jp
idivl
cmp
sarb
pop
fiadds
test
and
int3
mov
adc
inc
jecxz
xchg
or
pop
cmp
dec
pop
insl
sub
mov
cmp
insl
push
mov
pop
inc
fnstenv
test
rol
addr16
gs
add
iret
mov
sub
lds
mov
test
repz
cmp
enter
mov
bswap
lret
fsubs
lock
mov
ja
fcmovb
ss
and
push
pop
pop
in
xor
mov
popa
cmp
sahf
lea
and
dec
pcmpgtw
or
insb
push
dec
inc
inc
dec
pop
pop
jmp
push
rcrb
mov
jns
pop
add
adc
and
scas
insl
push
cmc
test
pop
enter
fcmovnbe
mov
sahf
jo
sub
scas
dec
xlat
gs
xlat
in
xor
shlb
icebp
push
push
and
xchg
cmpsl
repnz
pop
and
inc
iret
or
flds
mov
les
add
pop
clc
repz
mov
inc
iret
fiaddl
mov
repnz
subb
dec
pop
sbb
test
fcoms
push
pusha
addr16
mov
mov
adc
test
stos
dec
mov
lret
movb
inc
lods
stc
inc
adc
inc
lcall
pop
mov
inc
xchg
mov
addr16
jnp
push
lea
mov
xor
cli
add
push
sbb
mov
and
xor
cs
jge
or
push
push
repz
adc
jl
sbbb
pushf
rolb
mov
jae
or
cmpb
adc
jnp
in
bound
lahf
cmp
and
sbb
addr16
push
sti
pushf
add
in
sub
dec
orl
ret
popf
out
addl
ficompl
xchg
jb
je
xor
aaa
mov
inc
icebp
mov
mov
sarb
sub
push
push
inc
xchg
add
bswap
mov
mov
pop
pop
or
das
xchg
mov
xchg
repnz
xchg
cwtl
insl
and
inc
cltd
sbb
mov
add
or
mov
sbb
js
add
test
outsb
add
jge
aaa
or
push
sub
cmp
negl
push
hlt
icebp
popa
outsb
pop
add
loopne
jb
bound
ljmp
add
inc
outsl
cmp
aad
imul
inc
cli
aas
adc
js
imul
cmpsb
int3
aaa
mov
movsb
ret
lea
fstpl
popf
fldenv
daa
sbb
adc
mov
fcmovnbe
sub
adc
jb
adc
dec
and
lds
pop
xor
lcall
mov
jl
pop
pop
loop
xchg
mov
mov
int3
jle
test
ror
call
lret
hlt
push
repnz
daa
mov
out
sub
add
aad
subl
mov
sub
decl
movsb
and
in
outsb
sarl
fucom
les
inc
fs
dec
pushf
fwait
jne
fmuls
or
inc
loop
mov
mov
and
add
xchg
popa
fld
loop
outsl
adc
xor
mov
mov
aam
inc
sub
adc
lods
xchg
sub
mov
inc
and
push
mov
fisttps
test
inc
pusha
xchg
mov
or
lock
add
push
btl
dec
int
pushf
test
or
lret
stos
outsl
mov
mov
mov
out
bound
sbb
enter
test
sub
push
cmpsb
aad
sahf
push
roll
sub
pop
fildl
push
in
jle
pop
mov
outsb
push
inc
pushf
add
addr16
loopne
pop
sub
mov
mov
xlat
xor
aam
leave
test
lock
sahf
adc
add
mov
cli
cmp
inc
ret
popa
fidivrl
dec
xorb
jmp
xchg
cmpsl
movsl
xchg
jmp
xchg
xor
outsl
sbb
pop
mov
or
push
xchg
lds
cmovb
idivl
jge
in
pop
and
mov
xor
stos
aad
loop
stos
and
sti
xchg
popa
jb
push
sti
popa
dec
sbb
push
add
jle
sub
pop
push
sub
ret
push
sub
movl
mov
leave
xchg
fnstenv
mov
mov
inc
cltd
pop
fldenv
lods
loope
out
or
push
cmp
mov
push
stos
insl
inc
lret
scas
pop
push
sub
add
cmp
adc
orl
hlt
faddl
cltd
pop
push
cmpsb
mov
xlat
mov
mov
enter
mov
lods
scas
pop
add
and
out
lods
into
pusha
dec
jo
push
es
push
push
xchg
jno
mov
sub
push
adc
xor
sti
in
jle
mov
push
movsl
mov
push
pushf
aaa
divl
cmp
in
mov
dec
xchg
cmc
fdiv
jmp
and
mov
lods
or
jg
mov
nop
inc
xor
dec
test
shll
mov
add
lret
inc
xor
pop
arpl
sbb
cli
orl
sbb
fwait
js
cmp
xor
insb
pushf
add
cld
test
enter
inc
lret
adc
push
das
push
and
jae
jo
ja
mov
shll
out
jnp
inc
pop
sbb
aaa
mov
mov
ret
lcall
cltd
mov
loopne
mov
mov
adc
pop
aaa
and
jmp
or
or
add
stc
jl
test
movsb
divl
and
mov
cs
sbb
rcll
xchg
fisubl
mov
and
mov
je
icebp
adc
mov
cltd
pop
fistps
popa
cmp
es
cmp
ljmp
daa
dec
pop
dec
fildll
pop
clc
pop
jnp
push
out
lcall
cmp
xchg
or
fnstcw
sbb
mov
lret
jge
sub
add
push
out
adc
mov
add
in
xor
jge
insl
and
int3
and
adc
push
arpl
in
sbb
leave
clc
jno
mov
jns
icebp
jle
jb
mov
fldt
cmp
gs
sbb
push
push
mov
outsb
add
mov
push
xchg
fwait
mov
ret
fdivp
adc
sub
mov
jae
or
lds
or
sbb
jg
mov
mov
popa
leave
mov
leave
sbb
xchg
pop
jp
pop
stos
mov
rcl
pop
xchg
ljmp
xchg
out
sub
scas
testb
dec
mov
cmpsl
icebp
and
aaa
cmpsl
daa
jecxz
add
xor
sbb
test
push
inc
repz
stc
inc
out
cmp
in
aad
mov
movsb
jne
call
mov
pusha
scas
pusha
clc
or
or
xchg
and
cmp
cli
enter
out
jecxz
fcmovnb
fldcw
adc
mov
add
pop
mov
cs
push
dec
fwait
pop
loope
cli
and
mov
inc
inc
sbb
adc
fs
mov
jmp
xor
xchg
std
mov
cmp
mov
cmp
dec
mov
add
or
mov
sbb
notl
jae
sbb
mov
arpl
scas
mov
cmp
cmpsl
inc
das
and
add
inc
adc
enter
lock
adc
aad
sub
mov
mov
sub
ja
pop
rol
mov
cltd
xchg
xorb
pop
pop
out
mov
mov
or
fisttpl
inc
fisttpll
mov
bound
in
mov
xchg
loopne
subl
out
pop
arpl
mov
sub
out
inc
inc
stc
int3
mov
fildll
bnd
sbb
mov
loop
negb
fnstsw
fs
xor
insb
jl
jb
shll
jnp
or
add
not
sbb
fists
test
pop
out
rcrb
ds
lods
xor
sbb
mov
cmpsb
jp
popf
mov
jecxz
jmp
outsl
mov
cmp
jnp
dec
xlat
xchg
out
xchg
inc
subl
push
repnz
ret
pop
pop
pop
loope
pop
cli
cmp
jge
push
cmpsb
out
data16
xchg
mov
lea
push
add
mov
adc
enter
inc
mov
jb
dec
xchg
divl
lcall
and
cmpsb
sbb
jns
ret
sub
test
popa
shrb
jns
cmp
jg
clc
lret
add
mov
sub
push
pushf
into
push
rcrl
sbbl
add
sub
xor
push
fs
mov
push
jg
call
imul
les
xor
cmp
fnstsw
xor
add
lock
or
push
cmove
sbb
jb
push
and
pop
xchg
inc
dec
add
push
adc
je
jae
push
or
scas
ja,pt
adc
addr16
ret
xlat
add
loopne
repz
cmpsb
out
data16
arpl
ds
mov
fisubrs
push
faddl
adc
call
cmp
out
push
icebp
and
jo
subb
jno
aas
test
and
add
adc
jno
and
sbb
dec
mov
lea
mov
data16
iret
fwait
cld
clc
clc
shl
aam
cmpsb
les
cmpsb
test
pusha
push
xchg
movsb
sub
stos
dec
fisttps
sbb
cmp
daa
outsb
aas
lods
mov
das
insb
mov
ja
pop
sti
adc
push
shlb
andl
dec
loopne
nop
cmp
sub
lahf
shll
icebp
inc
xchg
xor
cltd
fadd
arpl
add
inc
mov
adc
and
sahf
loope
sub
lret
in
push
nop
fmul
fnstenv
pop
cltd
nop
stc
add
addr16
jae
std
push
sub
fidivl
sbbb
pop
divb
sbb
or
push
or
lods
pop
cmpsl
mov
outsl
add
negl
movsl
cmc
mov
and
daa
insl
xchg
add
js
pop
js
xor
jge
add
and
lcall
repz
lock
and
bound
fisubs
rcll
adc
mov
test
add
and
xchg
mov
test
cltd
stc
xchg
mov
je
push
daa
imulb
aam
mov
ds
ds
xchg
pop
mov
and
inc
pop
cmp
lret
jle
lcall
adcb
sbb
pop
mov
inc
adc
loop
andb
inc
xchg
sarb
aam
int
mov
push
aam
repz
imul
xchg
mov
add
fwait
aas
fs
enter
push
cld
test
movswl
xor
or
xor
mov
pop
inc
pop
mov
sbb
aad
lods
lcall
inc
cmp
push
mov
push
mov
or
shrl
adc
int3
dec
cmp
mov
test
outsb
jmp
mov
fldenv
rcrb
sti
sbb
add
inc
ljmp
cmp
in
ja
jge
mov
push
dec
dec
ss
mov
sub
dec
jae
xchg
add
fwait
lods
xchg
nop
or
sub
fidivl
test
or
pop
sbb
sub
stos
std
push
in
xlat
les
jne
inc
inc
int3
aad
mov
std
sti
mov
gs
in
mov
jns
xor
jne
pop
xor
dec
sbb
jp
xlat
push
dec
adc
lahf
mov
scas
mov
mov
adc
mov
pop
insl
sbb
lcall
insb
mov
ret
decl
jmp
sbb
std
in
repnz
call
dec
xor
mov
adc
inc
pop
insb
es
cmp
sbb
xor
mov
fsubs
pushf
scas
fcompp
mov
test
test
mov
mov
mov
and
cmpb
shlb
les
cli
xchg
xor
xchg
xchg
outsl
shld
or
mov
dec
sub
cmp
jge
fldt
mov
lahf
sbb
mov
xchg
out
imul
jbe
scas
movsl
subb
or
jg
movsl
push
loop
adc
sbb
test
or
sbb
lahf
push
mov
fldcw
and
mov
jne
push
or
cmc
push
lret
cmp
pop
pusha
lock
xchg
ret
adcl
in
jbe
cmp
push
repz
scas
notb
lahf
push
out
sub
xor
test
inc
xlat
xchg
insb
xor
mov
cmp
adc
cmp
and
sub
int
jge
popf
lea
imul
in
fimull
lods
jns
pop
push
loopne
jno
popa
mov
ss
pop
andl
js
lret
stos
gs
popf
in
xor
insl
movsb
popa
jge
cmp
dec
mov
xor
data16
outsb
xchg
imul
in
fwait
ljmp
out
jb
and
cmp
push
aas
int
mov
or
cld
adc
xor
fisttps
in
xor
test
mov
jno
loop
fwait
movb
jecxz
or
push
adc
mov
adc
xchg
dec
push
add
iret
pop
imul
pop
lds
mov
fsub
cmpsl
push
mov
pop
mov
in
repnz
movsl
shr
nop
ret
imul
stos
sub
lods
pop
icebp
jo
cwtl
xor
imul
out
dec
push
sub
iret
enter
andl
icebp
out
cmp
add
mov
dec
loope
add
mov
lahf
scas
fcompl
lret
pusha
loope
shlb
mov
mov
add
cld
push
dec
mull
adc
icebp
insb
push
xchg
repz
cltd
das
in
add
sbb
cmpsl
dec
pop
divb
push
xchg
push
imulb
adc
jno
ret
mov
js
int3
push
or
lea
test
loop
lret
push
pop
sub
mov
sti
or
ret
cmp
dec
push
cmp
testb
mov
cli
dec
cmp
sub
shrb
mov
mov
subb
mov
and
mov
mov
jge
pop
mov
inc
mov
decl
sub
in
movb
fstl
cmp
fcoms
jo
inc
ret
inc
push
imul
cmp
or
sub
mov
xor
sti
loopne
mov
pusha
fdivp
fcomip
cld
repz
ficoml
repnz
mov
out
jge
gs
movsb
adc
pushf
mov
aam
lahf
out
pop
xor
pusha
and
inc
dec
push
dec
push
fistpll
stos
clc
dec
or
jge
cmpb
icebp
mov
or
inc
imul
pop
fistpll
mov
outsl
add
stc
or
cwtl
xor
cmp
push
fwait
dec
mov
out
sarl
icebp
xchg
sbb
mov
dec
lock
mov
je
add
loope
mov
add
jge
mov
mov
repnz
cld
xchg
cmp
js
mov
lock
out
imul
lret
repz
xorb
jae
add
jge
add
xchg
sub
push
inc
out
inc
cmc
scas
xchg
sub
jmp
jne
mov
or
or
inc
into
in
xor
or
out
stos
fistpll
sahf
ret
icebp
mov
jo
js
jo
adc
jnp
out
inc
mov
xchg
jp
push
sbb
clc
push
mov
and
push
dec
pop
hlt
out
mov
repnz
rcll
sub
ret
push
cmp
out
adc
mov
xchg
mov
andl
mov
xchg
into
lret
xchg
pop
mov
and
cmpsl
daa
aas
outsb
lret
cmp
lahf
ljmp
sub
sbb
scas
lds
hlt
test
xor
jecxz
dec
andl
fisubl
jg
xor
push
xchg
dec
dec
fldl
or
comiss
or
or
pand
or
sub
mov
gs
mov
call
pushf
or
or
out
cmpsl
push
mov
es
loopne
jne
loope
icebp
fildll
daa
ljmp
arpl
aaa
add
cmc
push
jb
out
mov
xchg
push
adc
pop
mov
adcl
jg
iret
sbbl
dec
push
cmp
repz
xchg
or
jmp
xor
inc
xchg
jle
and
or
out
cmpsl
xor
pop
fwait
add
mov
into
imull
imul
andl
pop
xor
lahf
inc
add
pop
pop
push
push
in
or
arpl
mov
pop
aam
sti
popa
int3
sub
lea
xchg
cwtl
jns
pusha
and
jne
xor
xor
ds
mov
pop
out
inc
adc
idiv
jo
mov
clc
dec
xchg
mov
cli
adc
xchg
dec
cs
inc
inc
inc
sti
pop
out
lret
fisubl
cmp
lret
icebp
mov
in
mov
inc
cltd
sbb
push
cmp
jl
popa
cmp
xchg
xor
lea
push
inc
or
imulb
dec
pop
adc
jle
mov
mov
cmp
xor
lret
iret
fmull
test
jp
xchg
fwait
std
push
mov
jmp
imul
xchg
pop
and
imul
fwait
or
aad
and
ss
stos
mov
ret
in
add
adc
enter
adc
outsb
jb
mov
inc
or
cmpsl
add
push
out
sub
out
cli
cmpsl
rcl
lahf
xchg
or
fimuls
es
icebp
or
dec
leave
fdivs
push
push
idiv
cmpsb
in
pop
ret
jo
test
inc
imul
sti
enter
mov
inc
mov
popa
sbb
push
fwait
add
scas
inc
xor
jno
sub
cs
fsubrs
and
mov
push
cmp
xor
xchg
test
adc
mov
xchg
pusha
lcall
mov
fisttps
pop
stc
rcrb
mov
mov
out
mov
fldl
mov
loope
sbbl
addl
rorb
push
sbb
test
cs
sbb
inc
test
outsl
pop
mov
mov
fbld
sbb
stos
dec
aaa
popf
lods
inc
and
scas
mov
cmp
mov
flds
vpsraw
fldt
test
shll
mov
jge
cmp
adc
rclb
dec
adcl
sub
xor
or
std
xor
mov
dec
clc
mov
inc
lods
pushf
and
pop
jl
jge
frstor
sarb
push
and
push
dec
pusha
push
mov
push
loopne
mov
mov
push
sbb
push
dec
inc
mov
cmpsl
and
lret
ret
lcall
into
das
push
pusha
pop
jp
mov
in
int
out
mov
ficoms
into
out
pop
inc
adc
mov
pushf
jecxz
xchg
push
ss
outsl
xor
mov
mov
mov
ret
out
iret
xchg
push
mov
out
inc
mov
js
cmc
add
arpl
out
fsts
add
ja
mov
adc
or
into
xchg
sbb
sar
ja
das
cli
fcomps
lds
inc
pop
iret
push
popf
int3
jo
stos
popa
jmp
mov
jp
cmc
sahf
repnz
cmc
subb
push
ficompl
cmp
jmp
mov
mov
mov
xchg
lret
xor
imul
dec
dec
pmullw
gs
cmp
enter
jns
jmp
ret
mov
stos
inc
pop
lret
jl
pop
mov
imul
data16
dec
loope
xchg
call
aaa
mov
movsl
inc
mov
sub
outsb
mov
fists
sbb
fsubr
cli
out
popl
xchg
jnp
ljmp
out
xchg
negl
outsb
shrb
outsl
mov
imul
cmp
push
dec
mov
int3
push
pop
inc
mov
jecxz
rorl
jns
sub
xchg
sub
int
lock
inc
test
cmp
outsl
cltd
jnp
movl
out
xor
mov
mov
mov
lods
mov
mov
push
cmp
mov
icebp
ja
sub
mov
aam
fldcw
inc
adc
and
mov
push
pusha
out
leave
pop
addr16
cmpsl
sbb
dec
or
mov
add
and
inc
cli
lahf
das
lcall
aaa
dec
mov
arpl
mov
pop
vpshaw
stos
xor
or
popa
push
out
movsl
add
popa
adc
push
into
ss
jbe
int
in
jb
xchg
jb
sub
xor
adc
jecxz
sbb
mov
xchg
nop
inc
inc
call
pop
add
js
sahf
mov
pusha
dec
xchg
mov
repz
test
aad
dec
in
jle
into
lds
outsb
scas
mov
fistps
and
pop
mov
sbb
lahf
hlt
roll
pop
scas
mov
movl
push
push
sbb
out
adc
jae
stos
iret
pop
outsl
push
mov
aas
adc
outsl
into
xor
jbe
fs
test
roll
test
mov
faddp
imul
adc
add
sbb
mov
in
cli
dec
sbb
aaa
loopne
pop
inc
out
dec
xor
sbb
sub
insb
xchg
push
jb
xchg
push
out
std
or
sub
and
and
mov
movsb
push
inc
scas
mov
int
bound
in
and
cmp
cld
mov
and
adc
sub
lds
iret
adc
ds
mov
iret
addb
inc
adc
stos
jp
add
mov
jl
lock
push
xchg
mulb
add
pushf
xchg
dec
add
inc
jne
mov
push
cmpsl
rclb
das
sbb
insb
jns
cltd
mov
movsl
fstp
pop
jb
mov
or
and
fisttpll
lret
jg
pop
stos
sarl
xor
leave
in
repnz
rcrl
cmp
insl
adc
bndldx
pop
inc
sub
push
mov
jae
rclb
enter
jle
ret
adc
pop
jle
cmpl
pop
shrl
inc
mov
enter
inc
xchg
lcall
popf
add
xor
jmp
cmp
roll
push
jecxz
addr16
stos
imul
or
mov
mov
stc
repnz
push
in
pop
mov
push
lret
add
cmp
inc
pop
out
dec
div
inc
ds
mov
decb
sub
inc
ret
sti
jecxz
xor
mov
xor
adc
sbb
pop
inc
popf
pop
mov
inc
push
or
ficomps
mov
std
popa
cmc
and
mov
ljmp
fldt
stc
adc
lret
cmpsb
mov
aas
xor
add
enter
je
jbe
mov
int3
cli
or
mov
rcrl
pop
idivb
shrb
adc
insb
hlt
jg
sub
dec
mov
pop
divb
mov
pop
insb
stos
pop
enter
mov
jmp
in
jmp
pushf
pop
dec
sahf
push
mov
mov
pop
add
push
fistpl
jle
fisubrl
jecxz
test
dec
mov
mov
sbb
lahf
mov
loopne
pop
add
pusha
jnp
inc
lea
pop
add
cmp
pop
aaa
fcoms
in
lock
pop
and
jle
out
insb
fdiv
lods
mov
jnp,pt
adcb
push
test
cld
punpckhdq
repz
rolb
lret
lcall
cs
and
arpl
dec
int
add
lock
imul
movsb
push
call
inc
or
sbb
fidivl
jmp
div
je
and
mov
stos
cmc
cmp
or
insb
pop
xor
inc
je
xorb
push
fistpl
adc
push
loopne
mov
or
fistpl
insl
sbb
jmp
insl
in
add
fwait
adc
dec
and
cmp
scas
mov
xchg
xor
das
into
sbb
loopne
fmul
jecxz
rep
sahf
pop
jge
dec
lahf
popa
xor
fsubrs
out
jp
xchg
add
mov
mov
cld
pop
add
popf
andb
jle
or
mov
sbbb
mov
mov
fdivl
jge
cmp
mov
cmp
and
jnp
inc
in
xor
stc
enter
mov
stc
in
sbb
loopne
aaa
xchg
jo
cmp
cs
loope
lock
mov
adc
xchg
pop
sti
in
movsl
fwait
pop
xorl
test
addb
js
inc
popf
sbb
in
enter
pop
or
pop
inc
inc
aaa
adc
xchg
sahf
push
imul
fdiv
cmp
cmp
mov
adc
in
lcall
sbb
xchg
out
ret
inc
mov
dec
xchg
jmp
movsl
inc
jecxz
nop
cmp
and
cmp
dec
push
dec
dec
icebp
repz
add
xor
xchg
lret
jle
xchg
fwait
stc
icebp
rcrl
lods
loop
popa
shll
cld
es
daa
mov
in
js
xchg
pslld
dec
add
push
fisubrs
data16
pop
or
testb
push
inc
inc
dec
pusha
insl
into
cmp
dec
ret
imul
adc
and
inc
stc
shlb
mov
jge
jecxz
loopne
js
jo
xchg
xor
mov
mov
cmpsl
add
test
mov
int
in
push
mov
scas
stc
jle
inc
or
outsl
shlb
lcall
rorl
shrb
jecxz
push
negl
add
cs
test
xchg
sahf
hlt
pusha
inc
and
cltd
test
sbb
imul
add
fsubrl
mov
mov
ret
dec
push
mov
addl
test
jbe
mov
fnstcw
lods
cs
cmp
leave
and
aam
scas
ret
push
lock
push
outsl
inc
aas
or
in
jl
stos
lcall
repnz
inc
dec
mov
out
mov
fnsave
jne
stos
pop
jo
fnsave
push
inc
test
fiadds
and
sahf
xchg
insl
lret
adc
sub
mov
aam
mov
leave
inc
fnsave
or
cld
or
stos
or
mov
inc
fsubs
aaa
movl
push
stc
inc
out
shrl
fidivs
test
lcall
out
mov
xchg
cmc
and
push
xor
xor
xchg
test
lret
jb
inc
mov
and
cmpsb
pop
push
push
aaa
jp
xor
push
icebp
xchg
dec
in
mov
iret
je
inc
dec
add
aam
shll
push
mov
sbb
jg
xchg
or
or
pop
orb
fstl
push
fsubr
and
or
cmp
rcrl
xchg
mov
and
mov
stos
imul
jns
icebp
add
jno
int3
cmp
jle
jecxz
adc
cltd
mov
add
shlb
cmpsb
jg
scas
inc
add
mov
adc
fs
cmp
enter
jp
shl
shrl
daa
jle
std
dec
iret
call
rcl
cmp
cmp
or
push
ret
nop
and
fidivrl
cmpsb
es
pop
jnp
xor
pop
sbb
and
into
ljmp
sahf
adc
push
into
loop
loopne
xchg
sbb
movsb
repz
je
cwtl
push
mov
mov
les
in
test
xlat
sbb
cli
cmp
jne
mov
fidivs
aam
jne
dec
jne
jl
and
iret
inc
mov
iret
into
adcl
sarl
push
das
jp
and
in
mov
or
jbe
cwtl
and
adc
inc
push
dec
push
shr
or
frstor
fistps
adc
dec
in
in
mov
cmp
push
push
push
and
adc
sub
lods
mov
mov
cmp
adc
xor
rep
nop
decl
scas
mov
sub
mov
out
add
out
push
div
jmp
mov
xlat
add
add
pop
cmpsb
dec
in
loope
vhsubpd
pusha
mov
jne
xchg
add
jmp
and
ss
pushf
or
mov
add
and
lods
jne
mov
roll
add
fiadds
add
bswap
mov
into
or
jmp
xor
inc
sub
inc
add
mov
cmpsb
mov
mov
fwait
dec
test
mov
call
loope
inc
in
jg
pop
inc
push
shl
hlt
fimuls
pusha
jo
mov
push
jmp
lock
je
insl
insb
adc
adc
insb
mov
and
cmp
and
lock
mov
add
push
rcl
pusha
xchg
push
andl
mov
dec
and
cld
imul
int3
fadd
or
inc
out
xor
movsl
add
and
in
push
jo
icebp
cmc
push
xchg
pusha
cmc
mov
add
cmp
outsl
mov
pop
mov
and
jo
roll
pop
leave
pop
and
mov
sbb
cwtl
aaa
xor
xor
xchg
and
scas
jmp
and
rcl
add
jecxz
sbb
mov
sbb
rcrl
and
mov
cmpsb
jg
jl
xchg
out
xchg
mov
mov
cmp
or
testl
adc
insb
xor
stc
push
leave
sti
mov
ss
jno
mov
out
jbe
filds
out
mov
mov
jge
adc
int3
shrl
pusha
jns
xchg
sbb
int3
mov
incl
adc
adc
adc
sbb
test
inc
jge
stos
mov
inc
cs
jb
mov
push
outsb
push
push
sbb
jno
jmp
lock
mov
xor
push
mov
sahf
je
push
loope
push
push
notl
pop
in
enter
jmp
aas
into
shrl
scas
iret
mov
mov
stc
mov
add
and
loop
mov
loope
addr16
cmp
push
sbb
adc
test
add
nop
dec
notl
sbb
mov
dec
inc
les
sbb
loope
adc
arpl
push
loop
jp
mov
out
shlb
mov
mov
hlt
cmp
sbb
dec
test
adc
ret
pop
lods
mov
jno
sbb
cmp
data16
scas
pusha
fbstp
shrb
lahf
fstps
stos
in
pop
pop
and
int3
mov
push
enter
stc
xchg
cmp
stos
mov
shlb
shrl
mov
int3
jb
dec
fbstp
inc
nop
xchg
loopne
test
push
shll
fnstcw
out
imul
jns
dec
mov
shrb
sbb
cld
dec
lret
pop
xchg
movsb
out
std
xor
ds
icebp
loope
xor
sbb
cld
ljmp
mov
shr
mov
jb
lds
repz
je
rorb
push
shll
les
pop
roll
inc
dec
fdivl
sub
push
cld
mov
jg
mov
sbb
shl
shll
pop
cmc
sub
ret
pusha
ljmp
jne
dec
idivl
std
xchg
enter
out
mov
ja
popa
ds
ds
xchg
adc
call
cli
sbb
dec
and
mov
int
xor
and
ret
andb
xchg
inc
fcoms
sub
mov
and
dec
xlat
leave
fldenv
sbb
aad
jmp
test
fstpt
mov
xor
cmp
dec
popa
sbb
out
loop
aad
mov
inc
shrb
pushf
repnz
out
fs
aas
sbb
mov
aaa
js
pop
in
push
jae
in
sub
jo
pop
jmp
mov
cmp
dec
addl
add
mov
push
xor
int3
faddl
inc
xchg
xchg
dec
adcb
bound
iret
pop
outsl
xor
ret
mov
adc
notb
jnp
push
cwtl
jmp
les
cmp
sbb
sti
pop
or
fadds
pop
xor
ja
mov
fstpl
add
add
adc
dec
js
aas
inc
mov
push
sahf
dec
jae
cld
mov
cmp
push
pop
xchg
psllw
xor
inc
adc
xchg
push
leave
adc
test
cwtl
orb
sbbl
stc
xor
lds
sub
sbb
cltd
call
cmp
push
lcall
ret
jge
mov
and
ret
xchg
bound
shll
pavgb
mov
enter
repz
xor
dec
in
or
mov
and
mov
sub
rolb
lods
out
nop
mov
mov
push
jne
and
lret
dec
and
lcall
xor
int3
enter
cs
push
push
pavgb
mov
pop
je
leave
lret
pushf
inc
push
mov
add
fs
cltd
jbe
or
xchg
sbb
aas
cmpsb
add
insb
mov
shll
or
daa
fidivrs
xor
cmp
and
in
mov
sarl
test
and
mov
fstl
lret
outsb
push
mov
push
imul
mov
rcl
inc
ret
sub
or
gs
lea
insl
scas
scas
jge
pop
mov
adc
mov
ret
sub
jg
stc
imul
sub
xchg
or
int3
mov
dec
jae,pt
mov
repz
jnp
lods
ss
mov
mov
hlt
call
cmp
punpcklbw
push
dec
into
sbb
mov
insl
dec
push
sbb
push
pop
cwtl
xchg
mov
ret
mov
sub
inc
jbe
je
call
into
lods
mov
jge
pop
xor
adc
std
loopne
jmp
scas
add
in
mov
subb
ss
vcvtsd2si
cld
aas
jge
divb
xor
push
cmp
jge,pt
pop
test
pop
shlb
sub
cmp
clc
hlt
lock
jg
cmp
pusha
loope
sbb
inc
hlt
mov
scas
idivb
sub
sbb
adcb
fisttpll
lahf
leave
idivb
and
push
les
fwait
mov
pop
sub
aaa
in
stos
mov
in
stc
cli
cmpl
lahf
mov
cmpsb
ss
bound
data16
sbb
add
shll
jmp
ds
push
shr
into
dec
add
in
or
add
lret
addr16
fisubl
inc
in
xchg
iret
mov
fadds
movsl
mov
mov
mov
jb
icebp
or
inc
push
adc
cmp
pop
lret
and
dec
shl
mov
nop
loopne
jp
inc
gs
mov
or
repz
sub
test
jb
leave
fists
cmpsl
mov
out
push
xor
sub
cmp
repnz
ds
decl
es
mov
add
lret
cmp
jmp
adc
faddl
sarl
dec
sub
sub
cli
or
fidivs
fimull
shll
push
cltd
sub
outsl
or
push
pop
outsl
mov
testl
dec
loopne
ret
lret
hlt
xlat
and
fldenv
out
test
cmc
sub
out
fwait
xor
mov
ljmp
fneni(8087
ljmp
hlt
adc
pop
lahf
push
xor
inc
sarb
push
hlt
icebp
dec
stos
sbb
mov
xor
mov
jno
fprem1
ficomps
daa
and
cwtl
and
mov
aas
xor
test
gs
xor
fldcw
jns
xchg
mov
ret
fistpl
test
mov
psubb
negl
and
out
sbb
adc
or
and
adc
lods
aas
fcoml
cmpsb
sti
pop
push
mov
cwtl
mov
imul
adc
pop
xchg
cltd
mov
mov
jb
bnd
pop
sbb
data16
dec
mov
test
lea
pop
div
daa
sub
bound
loop
pop
xor
out
pop
mov
xchg
ja
popf
lret
adc
sbb
add
movsb
dec
and
lret
test
xchg
test
and
repnz
negb
decb
aas
sub
jae
lea
imul
xor
xor
xor
push
mov
jg
cmp
ds
in
xor
or
clc
in
cwtl
hlt
pop
adc
inc
mov
sahf
lods
aad
imul
into
pop
mov
jle
jns,pn
xor
loopne
cmc
pop
add
dec
xor
fsubrl
out
jge
std
clc
fucomp
jo
fidivs
or
sub
pop
or
lret
stos
in
pop
es
push
mov
inc
cmc
jle
add
scas
test
in
add
pop
xchg
jg
ret
nop
adc
pushf
dec
adcl
nop
mov
lahf
xchg
loopne
dec
sub
ficomps
jmp
das
out
gs
out
mov
ljmp
mov
subb
push
int3
cmp
js
icebp
rorl
xchg
jmp
out
jbe
je
jae
jl
nop
enter
jae
sbb
and
cs
sub
adc
push
hlt
and
fs
out
sti
dec
and
mov
jg
in
decl
popf
dec
je
pop
xchg
jle
repnz
in
fsubp
lods
sub
movsl
arpl
and
cmp
mov
clc
pusha
lods
adc
sbb
shl
sbb
dec
jne
lahf
xchg
sbb
sbb
pushfw
sub
sti
jno
imul
imul
mov
fwait
xor
lods
je
xchg
push
xor
sub
cltd
push
xchg
mov
cmpsb
sub
xorps
stos
loop
inc
xor
aaa
push
or
mov
ljmp
jo
int3
mov
aas
fmuls
ret
jl
in
jmp
and
sti
movsb
xchg
pop
push
mov
cld
jmp
push
repz
xor
jb
push
in
imul
mov
inc
outsl
in
pop
bnd
movsl
bound
cmp
clc
pusha
jne
imul
int3
cltd
fdivr
int3
aad
cmpsb
pop
out
cltd
xchg
xor
test
mov
leave
js
je
push
popl
daa
or
push
movsw
repnz
mov
mov
xchg
loopne
pop
and
and
or
jmp
push
mov
shl
outsl
jnp
xchg
test
adc
xchg
dec
xchg
or
inc
mov
jne
jae
test
inc
mull
clc
das
jnp
mov
fildl
and
xchg
xor
pushf
imul
and
sar
inc
xchg
cmpsb
or
jne
xchg
cld
scas
cli
fsubrl
or
aad
mov
fidivl
push
jge
push
rolb
adc
push
sahf
cltd
test
sbb
or
stos
and
cs
in
orl
popf
loop
dec
fstl
stos
in
pop
pop
out
imul
mov
cmpsb
mov
xchg
addl
pusha
lock
push
inc
pop
sbb
cmp
xchg
inc
andb
or
out
jge
push
xchg
pop
mov
and
mov
push
icebp
sbb
add
cmc
inc
dec
adc
in
loope
or
mov
jmp
mov
loope
daa
pop
mov
lods
dec
test
sbb
and
or
jmp
icebp
in
pop
mov
jg
mov
pop
dec
cld
add
loopne
add
pop
sub
into
lea
mov
mov
stos
mov
adc
push
inc
xchg
test
js
and
shll
ficoms
cli
jbe
sub
pop
lods
push
inc
cld
mov
push
inc
mov
dec
loope
jg
sbb
xchg
inc
cmp
mov
fnstsw
adc
push
jns
lds
in
insl
movsl
pop
repz
int3
test
into
in
and
mov
cld
or
sbb
or
push
fldcw
inc
inc
filds
sub
loope
push
ss
testl
loop
nop
cmp
inc
mov
xchg
pop
inc
dec
mov
push
pop
fisubrl
jle
jecxz
cli
fsubs
jno
aas
fadds
fistpl
adc
outsb
out
int3
push
das
jmp
jae
sub
rcr
mov
ljmp
jmp
fwait
sbb
pushl
inc
dec
adc
icebp
into
mov
std
adc
cmpsl
cmpsl
xor
movl
xchg
adcb
sbb
ror
mov
lods
sub
shrb
and
jmp
fdivs
pop
cli
loopne
arpl
inc
jmp
scas
bnd
mov
fs
mov
repz
sub
mov
test
cmpsl
and
les
xchg
call
mov
sbb
mov
sbb
dec
mov
std
sub
leave
cmp
dec
popf
shll
sbb
sbb
out
adc
lret
jbe
adc
daa
xchg
aad
repnz
rcl
jp
cld
push
popw
xor
dec
sub
push
sbb
aad
push
mov
arpl
insb
std
pushf
xchg
ficompl
inc
movsb
or
mov
icebp
and
jecxz
push
lods
pop
xor
rclb
cmpsl
sar
popf
out
dec
push
or
and
mov
or
sbb
mov
cld
cmpsl
adc
movsl
out
aas
fisttps
cmp
pop
jmp
jne
inc
in
xor
mov
xchg
cwtl
into
push
test
mov
inc
insl
mov
in
sub
dec
inc
std
clc
shl
arpl
mov
imul
push
mov
pop
adc
dec
lods
rclb
call
push
adc
or
das
lret
adc
or
shrl
les
push
ret
jmp
leave
pop
add
push
mov
iret
aas
ret
imul
jl
std
push
icebp
fsubl
xor
dec
inc
loope
imul
inc
lods
pop
imul
jns
outsb
jae
cmp
and
aas
dec
fcompp
in
dec
fmull
ror
fstl
mov
jle
icebp
out
aaa
xchg
dec
push
cld
mov
inc
pop
sub
addb
add
push
dec
dec
pop
xlat
cltd
push
jecxz
mov
or
adc
xchg
aas
popf
inc
xchg
outsb
jmp
adc
push
out
sbb
jg
push
xchg
lock
adc
jmp
dec
xor
daa
out
int3
pop
inc
add
adc
mov
mov
add
sbb
loopne
pop
xchg
into
push
aam
jmp
test
add
idiv
inc
xchg
sub
jno
sti
adc
test
leave
cmp
cmpsb
imul
cmp
push
push
repnz
or
movsl
pop
push
iret
insl
pop
push
inc
fmuls
jl
inc
out
xor
ljmp
and
xchg
cltd
std
cld
sub
in
adc
xchg
aaa
adc
dec
push
daa
daa
jmp
sub
push
leave
jns
icebp
adc
sbbl
mov
mov
adc
imull
jle
in
jecxz
mov
pop
mov
roll
or
lods
test
or
xchg
je
sbb
fnstsw
adc
lods
pop
inc
inc
fdivrl
shl
jle
fmuls
dec
les
pusha
int3
cmp
andl
push
test
mov
icebp
fdivs
mov
mov
fxch
div
leave
aad
pushf
xchg
cwtl
enter
scas
sub
push
fwait
dec
cmp
xchg
hlt
pop
inc
enter
cmc
icebp
xchg
adc
out
inc
arpl
jge
dec
pop
shlb
addr16
adc
sub
cmc
ja
add
ds
test
idivl
imul
cwtl
rorb
fsub
repnz
insb
call
lods
add
out
adc
xchg
or
pop
cmp
leave
add
orl
outsb
xchg
stos
and
xor
shlb
in
lds
fs
ljmp
jae
pop
push
out
outsl
lods
mov
in
xchg
stc
pop
sub
clc
jae
ja
adc
mov
add
jb
lret
dec
sub
or
mov
sbb
push
es
cwtl
pop
pop
or
jl
xchg
fists
outsl
fldl
lret
in
sar
fwait
les
rcrl
push
mov
fstpl
mov
or
xlat
sbb
outsb
mov
lds
orb
daa
shrl
aad
sub
scas
adc
fsubrl
mov
inc
mull
loopne
loope
cmp
or
jbe
ret
pop
neg
push
adc
fistps
and
ljmp
jns
push
out
sub
imul
sub
jb
adc
jge
mov
test
stc
jge
mov
adc
leave
loopne
cwtl
mov
xchg
xor
jne
dec
cmp
fwait
sub
out
pop
sbb
repz
sahf
cwtl
lds
mov
jns
stos
outsb
jg
or
sub
sub
adc
movsl
aad
cmp
ret
lock
fdivs
xchg
mov
aam
les
xchg
pop
test
imul
shll
sub
mov
fsts
insl
jg
cmp
test
inc
mov
stos
mov
push
mov
mov
sbb
test
pop
xor
mov
pop
sahf
cmp
pop
idivl
stos
dec
stos
pop
sub
cmpsb
pop
fisubl
sahf
lret
or
mov
xor
jo
mov
ret
pushl
das
xchg
mov
sub
jl
outsl
pop
pusha
pop
push
lds
hlt
in
inc
cmp
insb
mov
es
xor
push
outsb
popf
jp
loopne
xchg
jns
aas
sub
and
cmp
cmp
inc
ljmp
test
add
js
cmp
mov
hlt
fwait
aaa
pop
test
push
hlt
push
hlt
daa
test
cwtl
xor
sub
jg
xchg
add
sti
les
and
ret
xchg
sahf
or
ljmp
addr16
inc
dec
jbe
or
cltd
fistpl
repz
push
sbb
loop
adc
fstp
and
pop
stc
out
jo
inc
jnp
ljmpw
loop
mov
inc
fsub
push
aad
pushf
xor
mov
ficomps
ret
leave
and
adc
cmp
fadds
jns
jl
cld
mov
pusha
seto
lahf
pop
fidivrl
dec
xchg
mov
mov
sbb
xchg
fsubrl
mov
sbb
cmp
in
rol
jecxz
jno
lds
icebp
sti
in
jns
inc
test
inc
xchg
ret
mov
lds
leave
and
mov
ds
lea
dec
adc
and
sbb
xchg
into
sbb
clc
lret
adc
cmp
mov
dec
and
jecxz
dec
xchg
sbb
xchg
jg
push
sub
sbb
outsb
imul
clc
and
scas
and
jns
sahf
icebp
push
fildl
dec
mov
subb
adc
outsb
add
into
sbbb
in
cmc
adc
jns
cmp
dec
out
dec
out
stos
adc
out
add
cmpsl
dec
out
test
shll
imul
and
and
or
xor
mov
mov
inc
jno
aas
mov
jae
pop
je
rclb
imul
mov
xchg
inc
icebp
cs
adc
scas
mov
stc
pop
lret
lret
inc
inc
sbb
loopne
xchg
leave
push
mov
fdiv
cmp
push
rcrl
pop
and
sarl
je
or
mov
psraw
pop
rep
mov
bound
icebp
rcrb
sub
mov
push
popa
out
add
cmp
push
int
xor
or
jns
arpl
arpl
add
test
lods
popa
arpl
sti
lahf
adc
add
xor
imull
sub
sbb
push
jbe
sbb
cmp
mov
xchg
fsub
sar
sub
imul
stos
pop
iret
sub
sbb
fcomip
lods
xor
inc
xchg
mov
in
in
rclb
cwtl
push
and
mov
stc
adc
adc
imul
mov
push
xchg
push
rcrl
test
push
fistps
pop
mov
xchg
insl
push
cmpsl
adc
lret
push
jae
mov
or
cltd
mov
add
and
push
mov
sbb
cs
test
sub
add
jbe
es
or
ret
and
inc
mov
xchg
adc
adc
push
enter
sbb
cmp
inc
or
fwait
lcall
iret
push
in
ds
adcb
shlb
mov
into
stc
and
mov
xchg
mov
imul
les
pusha
iret
sbb
mov
call
pop
enter
mov
in
cwtl
lods
lret
int3
inc
outsl
jp
mov
mov
in
out
push
js
sub
scas
aad
test
lods
xorb
out
imul
push
mov
mov
iret
jp
leave
mov
rolb
out
imul
push
enter
das
and
loope
lret
shl
jle
lahf
jne
test
xlat
add
mov
add
mov
pop
push
add
imul
jmp
cld
or
shll
jbe
xor
sbb
add
xchg
mov
fwait
or
cmpsb
fildl
mov
dec
adc
test
push
lea
mov
jg
adc
xor
cmovb
fiadds
mov
orb
push
inc
stos
jmp
or
lcall
int
or
xorb
mov
fiaddl
into
gs
xchg
mov
cltd
xlat
xchg
and
notb
jmp
or
int3
loopne
andb
daa
xchg
test
xor
mov
dec
fcoms
pop
in
dec
xor
pop
inc
lea
mov
fs
outsl
pop
pop
mov
sbb
scas
test
dec
pop
cwtl
sti
xchg
xor
pop
pop
sbb
fnstsw
mov
adc
push
pop
dec
scas
dec
aad
sahf
test
push
adc
mov
xor
test
dec
or
das
mov
mov
inc
aam
popf
aaa
lret
jne
out
ror
and
fisubs
cmp
mov
out
popf
jb
xor
xchg
mov
and
and
out
xchg
jl
bound
sbb
imul
cwtl
xchg
xchg
repz
sub
adc
lock
mov
push
inc
mov
sbb
je
cmpl
mull
jbe
lods
sub
popa
push
mov
inc
movsb
xchg
test
aad
ret
leave
pop
cltd
xchg
fstl
mov
cmp
add
fisubrs
push
adc
mov
sub
inc
pop
out
loopne
push
cltd
mov
sbb
xchg
js
mov
adc
sub
rcll
adc
push
ret
ljmp
or
test
sbb
pop
cmc
mov
adc
sbb
into
push
out
push
jno
arpl
mov
and
jbe
jl
pop
mov
popa
sub
add
sub
icebp
mov
sub
cmc
movsl
stos
popfw
pop
dec
xchg
cmpsb
mov
xchg
mov
mov
sti
in
jnp
push
lods
xchg
outsb
xor
sub
jbe
adc
and
cmpsb
imul
lret
mov
outsb
jo
jmp
xor
aaa
xchg
test
sub
das
loopne
push
decl
repnz
mov
int
pop
pop
ss
dec
mov
sbb
pop
pop
cmp
ja
cmp
das
js
dec
adc
icebp
aas
dec
nop
scas
sub
into
pop
std
dec
inc
icebp
and
mov
and
arpl
mov
addb
xchg
pop
pop
push
pop
orl
arpl
dec
loop
loop
addr16
mov
pop
or
mov
rcll
cmp
aaa
or
in
inc
scas
cmp
fisubrl
pop
jb
mov
push
jmp
adc
das
and
sub
outsb
cmpsb
xor
xor
dec
repnz
rorb
xabort
mov
jo
xor
outsb
dec
arpl
mov
imul
add
jo
popf
xchg
and
or
jmp
aam
fwait
call
dec
cltd
in
xlat
ffree
ret
xchg
fadds
ds
push
xchg
movsb
sub
or
sbb
outsl
outsl
xlat
push
psadbw
fs
cmp
push
mov
jae
push
jge
adc
outsb
std
jnp
pusha
outsl
sub
xor
push
inc
mov
xor
scas
in
movsb
pop
daa
mov
dec
popa
stos
rorb
or
pop
fisttpl
ret
mov
int
bound
adc
pop
imul
inc
fsubr
stos
cs
jne
ss
push
test
mov
cmp
pop
and
fnsave
popf
add
add
cmpsl
test
jo
int3
sbb
je
adc
insb
je
cwtl
add
and
jb
in
pushf
push
popa
sahf
mov
shrl
jo
add
fisubrl
pusha
dec
dec
test
gs
cmc
add
ret
mov
dec
ja
mov
leave
pop
leave
das
lahf
jmp
mov
mov
mov
sub
std
inc
imul
int3
gs
jnp
daa
mov
xchg
adc
push
sub
inc
push
ss
movsb
xchg
cmp
fmuls
loop
out
xchg
call
fsts
xchg
inc
lock
bound
pop
inc
add
mov
fcmovnb
lods
pusha
xorl
xchg
xor
stc
jo
xor
leave
sbb
and
movsb
dec
pushf
fwait
lock
je
dec
add
ret
dec
push
lret
add
xchg
fdivl
jg
push
dec
or
push
aad
out
les
aam
inc
xor
or
add
fwait
push
xchg
inc
or
mov
test
mov
in
mov
in
lds
int3
pop
xor
and
mov
mov
cmp
ja
push
rol
mov
stc
sar
mov
xchg
out
lret
sub
ret
pop
and
adc
mov
addl
and
ror
std
xchg
add
pop
mov
xchg
push
cmp
loope
fmul
repz
clc
fsubp
jle
and
push
cld
int
cs
loope
xor
and
sub
inc
xor
daa
jb
mov
sub
cwtl
push
stos
mov
imulb
movsb
lahf
push
subb
nop
lds
xchg
mov
add
dec
add
lret
mov
push
sbb
adc
pop
jmp
and
sti
sub
lods
mov
mov
out
lods
jmp
lret
call
and
mov
jno
inc
mov
das
inc
mov
dec
lds
inc
sbb
dec
or
rcll
sub
ret
scas
cmp
into
test
in
movsl
mov
outsb
cld
rol
add
sbb
dec
mov
xorl
jp
cld
movsb
xchg
mov
inc
test
xchg
pushf
mov
pop
dec
jbe
int
pop
das
pop
loopne
negb
scas
push
iret
add
sbb
scas
adc
movsb
adc
sti
out
cmp
inc
pop
mov
cli
jbe
jnp
xorb
mov
mov
sbb
pop
add
mov
loopne
cmc
sub
mov
pop
cmpb
and
adc
add
mov
mov
or
fwait
leave
aam
push
imul
insb
xchg
mov
arpl
push
mov
loopne
daa
orb
test
in
mov
mov
repz
or
test
inc
pop
mov
nop
sub
mov
rclb
mov
and
mov
popa
aad
push
aam
mov
add
add
cs
sbb
dec
adc
clc
movb
pop
loop
cmc
xchg
mov
or
imul
mov
xchg
daa
xchg
or
jp
sbb
std
out
shlb
shrl
mov
ljmp
outsl
stos
imulb
xchg
out
push
adc
sub
test
div
addr16
add
rcrl
xlat
dec
pop
fstps
mov
cmp
neg
loope
mov
mov
roll
inc
inc
sub
xchg
pop
scas
int
mov
out
setb
jne
sbb
push
orb
xor
cmpsl
add
cltd
cmp
int3
jnp
out
jl
pop
insb
push
mov
int3
call
clc
cld
dec
daa
adc
hlt
aaa
mov
popf
pop
mov
push
leave
test
adc
icebp
faddp
jns
test
xchg
and
push
sub
push
xor
orl
xor
insl
outsb
inc
stos
sbb
cmp
inc
mov
push
ftst
fmull
jge
push
repz
or
iret
lea
test
arpl
jo
xor
fldpi
iret
ljmp
pop
xlat
inc
jp
cmpsl
pusha
pop
call
xor
sarb
inc
aam
cwtl
mov
gs
or
mov
mov
sti
sahf
incl
cmpsl
sti
stos
inc
fldcw
fxch
iret
in
mov
push
cwtl
inc
adc
nop
stos
mov
fucom
out
mov
sub
xor
enter
mov
adc
add
jb
scas
cltd
jp
dec
push
mov
shll
pop
sbb
sbb
out
add
inc
cmp
mov
fists
pop
pop
repz
fcmovu
in
outsb
nop
adc
insl
sbb
das
outsb
dec
mov
bsf
mov
mov
mov
adc
mov
mov
jbe
sub
and
xor
popf
add
rcrb
out
cltd
add
je
xchg
push
into
lock
lock
cwtl
sub
scas
jecxz
xchg
hlt
push
xor
rorl
inc
jmp
pop
std
repz
lds
mov
mov
jg
in
xor
fs
dec
loop
movsl
pop
orb
bound
rcrb
test
outsb
mov
sub
int3
testl
lahf
sarb
das
dec
or
mov
fsubrs
or
hlt
or
or
mov
stc
leave
ljmp
inc
inc
xor
and
fcoms
dec
sbb
lods
mov
xor
adc
add
sub
jp
xor
pusha
js
pop
insl
gs
or
es
push
cli
je
mov
sbb
out
pushf
add
sub
fnstenv
lock
cmp
repz
mov
xchg
inc
sti
cmc
inc
test
insl
jg
mov
mov
scas
in
lock
orl
sbb
addr16
add
mov
push
out
cltd
mov
pop
inc
adc
test
out
dec
in
cmpsl
mov
xlat
cmp
sbb
lcall
out
push
xor
push
cli
ss
mov
dec
sbb
jl
cli
mov
inc
cmp
mov
xlat
outsl
mov
icebp
mov
into
push
adc
pusha
movsl
inc
stc
movsb
jns
sub
or
jne
pop
ret
bound
jge
adc
sbb
mov
aad
mov
call
lcall
adc
dec
add
add
lahf
inc
mov
xchg
mov
mov
or
lcall
mov
pop
pop
arpl
nop
push
lds
pop
fisubl
cmp
sbb
loope
sub
test
and
idivl
xor
pop
iret
rcl
dec
dec
add
xor
push
cmpsb
or
sbb
arpl
jg
test
xchg
out
fnsetpm(287
mov
pop
pop
pop
icebp
lcall
mov
pop
cmp
cmp
pushf
add
mov
lret
imul
popf
adc
pop
aam
adc
and
and
lret
jmp
xchg
mov
std
imul
xor
repz
jns
sub
cmp
sbb
pop
sub
sbb
mov
or
cltd
ja
iret
sub
mov
lret
test
sbb
push
cltd
fimull
mov
push
das
repnz
mov
lds
jmp
out
pop
mov
and
dec
sub
jmp
push
xor
pop
cli
orb
push
push
mov
push
sub
out
push
std
fucomp
movl
xchg
outsb
movsb
adc
in
mov
pop
xchg
gs
out
out
mov
movsb
adc
push
test
stos
push
fstl
clc
test
adc
mov
push
add
push
daa
cltd
mov
aas
fldt
pusha
mov
pop
lods
nop
push
rcll
xor
cmp
addl
adc
int3
xor
mov
lahf
outsb
push
dec
nop
xor
sbb
into
mov
cld
into
aad
sbb
xor
ret
jae
pop
sub
mov
movswl
gs
enter
dec
xchg
push
dec
sub
or
inc
pop
sbb
push
scas
inc
dec
incl
mov
add
mov
push
xchg
test
xor
add
jecxz
push
add
pop
std
fisubs
mov
cmpsl
push
or
aad
and
fcomp
mov
std
mov
notl
mov
outsb
aas
nop
adc
add
scas
xchg
sub
xchg
xlat
mov
loop
roll
dec
stos
mov
out
sub
sbb
bound
inc
pop
bound
push
jne
in
es
xchg
ss
les
jne
rolb
mov
lods
xchg
es
add
mov
adc
inc
mov
adc
fdivl
sbb
aad
out
xchg
jmp
js
out
ja
adc
push
mov
aam
inc
subl
fdivr
or
push
dec
jmp
sbb
pop
gs
js
jns
fcomip
popf
push
les
test
inc
or
cmp
aad
ss
dec
jne
mov
push
sub
data16
cwtl
sbb
dec
sbb
aam
adc
inc
hlt
mov
inc
pop
stos
shr
sbb
dec
movsl
lea
shlb
push
int3
bnd
dec
stc
and
push
jg
scas
idivl
add
mov
jl
popa
pause
pop
test
repnz
push
sub
mov
sbb
or
jb
shl
loope
cmp
jno
lea
stc
jb
jbe
push
cmp
rcrl
add
cmpl
test
dec
inc
int
sbb
add
mov
pop
cmp
or
packuswb
lahf
xchg
loope
jmp
mov
push
js
fsubl
jmp
sub
testl
orb
add
lcall
pop
sti
xorl
sbb
mov
out
test
mov
outsb
or
cltd
cmp
repnz
mov
imul
leave
or
push
movsl
sub
cmp
jnp
push
ret
pop
sahf
loope
stos
sti
xchg
test
pop
xor
pop
out
fstpl
jae
add
dec
dec
jmp
nop
jb
mov
fs
dec
cs
in
xchg
out
inc
jg
cltd
movsl
repz
scas
mov
iret
mov
push
push
test
daa
and
jl
jmp
test
add
popa
test
pop
enter
xor
testb
xlat
insb
mov
rcl
inc
repnz
xor
dec
in
jmp
cmp
addr16
data16
roll
test
sbb
mov
icebp
in
sahf
outsb
icebp
in
popa
jae
imul
lahf
jne
push
loopne
pop
icebp
inc
stc
inc
jb
ja
jae
xchg
clc
fbstp
addr16
jl
xor
pop
push
hlt
scas
mov
pop
lods
mov
xchg
int
jne
test
std
sub
and
inc
inc
dec
push
rolb
mov
test
mov
push
cmp
cmp
inc
leave
sub
cwtl
daa
mov
or
xchg
jnp
jb
shll
mov
jle
push
sbb
into
ja
jno
insl
push
sahf
jecxz
push
push
sub
and
add
pop
cmc
das
inc
mov
pop
dec
adc
repnz
sbb
xor
movsb
xchg
sub
inc
xchg
sbb
jne
lcall
xor
push
xchg
sub
fdiv
std
popf
loope
inc
enter
vorps
sbb
pusha
aaa
stc
add
and
stos
out
int3
pop
and
hlt
int
add
lret
mov
aaa
push
das
mov
fildl
cmpb
icebp
gs
xchg
sub
dec
das
cmp
out
mov
and
push
and
mov
mov
xchg
dec
push
or
mov
lahf
adc
mov
loope
fisttpl
and
shrl
adcl
mov
mov
roll
xchg
dec
sub
mov
popw
pop
add
inc
mov
sub
cmp
adc
sahf
jge
pop
lcall
fs
ret
sbb
mov
sahf
pop
icebp
sbb
xor
push
popa
daa
or
xchg
sbb
mov
pop
stos
fdivs
fsubl
je
add
mov
and
stc
jge
mov
xchg
dec
add
mov
std
and
jl
jbe
imul
mov
cmpsl
mov
and
xor
test
sub
cltd
loope
mov
adc
push
loopne
push
sub
mov
adc
jbe
dec
xchg
iret
imul
inc
or
mov
pop
adc
enter
mov
or
mov
das
test
test
lds
imul
sti
lcall
bswap
stc
or
les
into
imul
in
push
imul
repnz
xor
shll
sub
mov
ja
cmc
repnz
lock
ret
rcll
adcb
inc
scas
iret
stos
mov
ret
in
shlb
in
repz
xlat
adc
xchg
sahf
lods
ja
pusha
inc
and
sbb
aas
loope
pop
ljmp
xchg
xor
shl
fs
pushf
jbe
mov
ret
jae
idiv
data16
fildl
enter
pushf
sahf
mov
leave
mov
push
jb
repz
push
pusha
add
jl
mov
push
scas
mov
push
mov
shl
out
cmp
ss
insl
dec
push
shl
imul
xchg
aad
mov
add
adc
cmpsl
sub
xchg
ljmp
push
xchg
sbb
mov
fs
fistps
push
or
int3
iret
ficoms
sbb
hlt
xchg
sub
xor
inc
js
movsl
jg
pushf
pop
sub
data16
cmp
push
insl
and
adc
mov
sti
mov
xchg
and
mov
out
add
sbb
out
push
and
movsl
mov
lcall
mov
jecxz
pop
fisubrl
jns
mov
arpl
filds
mov
scas
jmp
iret
mov
loope
pusha
jnp
lea
pop
lea
scas
or
mov
xor
mov
lea
inc
push
add
fwait
std
test
out
movsl
sub
into
fstl
rorl
loopne
nop
mov
jo
lret
pop
enter
pop
sub
std
das
pop
push
mull
lds
jb
ds
sub
cs
cmp
dec
jno
fldl
add
rolb
out
xchg
fsubrl
stc
mov
mov
mov
es
stos
xchg
in
push
xchg
push
stc
mov
icebp
lock
ds
out
cmp
loopne
scas
subl
ljmp
mov
ja
adc
gs
adc
in
loopne
aad
and
mov
pop
mov
dec
jo
fimull
push
mov
add
push
xchg
jmp
and
pop
and
mov
cmp
iret
sbb
push
ret
mov
cmp
fdivs
fstp
in
xlat
mov
gs
aad
xor
je
std
shll
mov
mov
push
sti
adc
imull
push
adc
popf
mov
jge
cmp
cld
jecxz
cmp
jg
int3
sbb
mov
call
sbb
outsw
mov
adc
xchg
mov
jl
lea
push
mov
enter
inc
shr
out
psadbw
loop
pop
cmp
mov
pand
mov
jge
dec
or
adc
fucomi
rorl
cmc
push
icebp
cmp
test
cmpsl
jbe
rclb
ss
leave
out
loop
and
test
cmp
add
stos
and
xlat
jae,pt
das
cld
sub
sub
xchg
cmpsl
nop
sub
hlt
cmp
jecxz
sti
add
mov
and
or
adc
daa
and
shrl
cmp
in
leave
dec
xchg
jbe
movaps
jecxz
mov
mov
cltd
sub
jno
xor
pop
inc
dec
and
sub
mov
out
mov
cltd
out
lods
lret
cmc
inc
mov
push
sub
loope
mov
push
pusha
inc
outsb
mov
outsb
loopne
or
mov
xchg
orb
push
xor
sub
repnz
outsb
call
dec
aaa
jno
xchg
or
push
xor
js
fstl
pop
gs
enter
mov
adc
icebp
fmuls
dec
adc
push
xchg
loopne
add
xchg
mov
mov
sbb
sub
mov
xchg
add
loop
mov
xchg
cld
or
addr16
sub
xor
loope
cwtl
xor
movsb
jge
inc
mov
push
outsl
jnp
dec
js
jge
add
jle
pop
sbb
gs
push
into
xor
stc
rorl
pop
push
in
jl
sbb
and
lret
fstps
test
leave
sahf
out
subb
push
cmp
popa
mov
mov
jbe
and
rep
mov
stos
mov
dec
cmp
outsl
mov
popf
adc
push
push
sub
stos
push
mov
lods
dec
jo
cs
and
imul
mov
lods
fcoml
xchg
mov
mov
mov
sub
popf
mov
adcb
ljmp
cmp
mov
push
daa
arpl
adc
or
mov
ja
push
call
xor
fidivs
mov
cmpsl
jo
arpl
fidivs
shll
add
lock
pusha
mov
pop
lea
jg
jp
push
test
mov
scas
mov
mov
jno
push
xor
in
insl
fucomp
xchg
jmp
or
sbb
or
sbb
cs
mov
movsb
cwtl
mov
stos
xchg
in
dec
and
add
imul
std
cmc
add
and
xchg
fstpt
out
cs
mov
add
cmp
test
jmp
jne
in
xchg
lret
sub
inc
test
sub
or
cwtl
jo
inc
insl
pusha
xor
dec
cltd
icebp
pop
es
adc
cmp
lods
je
ds
xchg
fwait
icebp
dec
xor
nop
into
sub
dec
jge
ret
stos
stc
sbb
push
in
jl
es
not
lcall
and
push
sbb
adc
mov
in
outsl
jecxz
cmp
hlt
cmp
push
or
inc
ds
xor
insl
loope
adc
dec
xchg
scas
in
and
cs
fidivrs
dec
dec
mov
insl
inc
dec
je
pop
ficoml
int3
shll
adc
dec
fdivrs
incb
test
jbe
and
enter
out
mov
jmp
xchg
push
ds
dec
sub
loopne
cmp
inc
xchg
test
mov
add
add
andl
test
sbb
outsl
mov
test
mov
dec
lret
shrl
out
rolb
xchg
sub
test
insb
mov
or
and
aad
push
add
push
sub
lret
pop
cs
les
push
in
jmp
daa
cmp
cmp
push
cmp
sbb
adc
mov
jle
shl
insl
aaa
add
ds
mov
mov
push
lea
fnstsw
or
out
jmp
movsb
adc
dec
dec
mov
loopne
pop
popa
ret
push
jb
fstl
mov
add
adc
loope
bound
movb
icebp
in
mov
mov
xor
jp
mov
scas
loop
sarl
cmpsb
push
fldenv
enter
adcb
xchg
out
xor
aas
cmpsl
aaa
loopne
out
hlt
mov
inc
or
jl
xchg
pusha
pop
sub
mov
pop
call
mov
pop
das
loopne
in
jae
inc
pop
pusha
mov
int
test
cmp
and
push
cmpsl
popf
mov
out
aaa
cmp
test
jecxz
sarb
testl
adc
dec
in
jle
flds
in
xor
sarb
fs
int3
imul
xchg
jmp
lcall
int3
push
adc
aad
ljmp
pop
mov
in
add
fwait
mov
dec
rcr
mov
mov
cltd
rorl
mov
out
pop
xchg
cmc
pop
sbb
arpl
push
xor
loopne
mov
lea
ret
mov
mov
and
inc
lret
arpl
sahf
xor
lods
test
adc
jmp
mov
loopne
xchg
jno
lret
mov
or
cmpsb
das
hlt
jae
cmp
enter
jl
aam
mov
push
es
mov
push
inc
add
ret
xchg
das
test
cmp
sub
sbbl
imulb
testb
in
add
and
scas
push
lret
roll
pop
cmc
xor
fldt
jg
cmp
cmpsl
add
imul
xor
int3
cmpsl
orb
mov
repz
insl
or
in
sub
xor
push
cltd
cwtl
pop
jmp
rcll
push
dec
rcrl
frstor
push
push
pop
xchg
lods
xchg
pusha
push
xor
ficoml
push
xchg
pop
mov
push
outsl
jno
in
out
out
inc
jno
mov
xor
imul
jnp
add
sahf
mov
popf
xor
mov
frstor
je
push
sub
add
out
mov
cmp
dec
enter
jno
ja
test
mov
out
iret
cmpsl
cmp
jno,pt
jnp
lcall
xor
roll
push
and
mov
cli
cwtl
xchg
roll
or
pop
fwait
addr16
sub
les
mov
mov
enter
mov
cmp
cs
popf
jo
nop
jbe
fnsave
loope
mov
sbb
add
xor
push
mov
dec
dec
mov
dec
dec
popl
cmp
mov
rol
sbb
or
sub
inc
bound
or
sub
aad
and
nop
fistpl
fwait
mov
fldcw
jp
mov
inc
orb
addb
mov
adc
push
mov
out
dec
lods
test
test
out
push
outsb
lcall
into
pop
jp
pop
jo
xor
dec
out
ss
stos
sbb
pop
bound
addr16
icebp
out
cmp
xor
js
add
int
pop
aaa
hlt
loop
mov
mov
jl
out
dec
sub
rorl
rol
cs
jbe
loopne
mov
cmp
lret
fwait
push
movl
push
and
jg
push
jbe
pop
inc
sub
push
std
pop
test
adc
inc
lock
gs
mov
adc
mov
out
and
inc
test
out
push
cmp
or
enter
pop
cltd
int3
cwtl
arpl
test
jo
mov
mov
jecxz
mov
clc
out
push
ja
adc
mov
arpl
xchg
leave
popf
sub
xchg
cmp
hlt
inc
xchg
pusha
sti
fadd
mov
adc
and
mov
adc
mov
loop
mov
shll
push
cld
mov
mov
ds
pop
push
andl
out
jne
mov
stos
movsl
dec
xchg
mov
jge
hlt
xchg
insb
stos
lds
jns
gs
adc
les
add
push
std
insl
std
xchg
fstps
jmp
inc
jge
cmp
mov
pop
fs
or
test
iret
xor
cmp
mov
pop
mov
in
inc
mov
mov
popf
lods
mov
adc
dec
repnz
sbb
pop
inc
mov
inc
out
inc
mov
push
sub
adc
jecxz
sbb
test
adc
insl
mov
mov
cmc
jp
add
xor
negl
xchg
add
and
js
data16
test
loop
lea
mov
sub
mov
in
jge
rcrb
pop
cmp
stos
sbb
shll
js
jno
xor
adc
pop
push
add
outsl
xor
dec
sbb
addr16
mov
xchg
stos
clc
cltd
cs
imul
adc
push
addr16
jnp
mov
mov
mov
mov
stos
popa
sub
mov
imul
bound
cwtl
mov
das
shlb
xchg
mov
sub
xchg
fs
xchg
repnz
mov
insb
scas
data16
and
arpl
movsb
lods
arpl
mov
iret
xchg
sbb
ret
mov
fs
cltd
ss
or
int3
mov
inc
fldl
enter
pop
push
mov
out
xchg
test
mov
mov
cmp
mov
fisubl
mov
dec
pusha
cmpsb
sbb
adc
mov
push
and
int
sbb
push
stos
or
add
shrb
mov
adc
xor
ds
insl
push
jle
push
testl
dec
insb
inc
clc
in
mov
lahf
shl
xchg
pop
cmpsb
aad
out
outsl
imul
inc
inc
fwait
lcall
lahf
push
data16
mov
mov
loope
lcall
xchg
mov
orb
sub
push
out
sbb
movsl
xchg
push
add
or
sbb
xchg
dec
fnstsw
dec
loopne
xchg
jmp
push
scas
movsb
movsl
ja
xlat
or
sbb
lods
cmc
psubsw
xlat
inc
fdivrl
jecxz
daa
sahf
repz
jl
gs
insl
dec
inc
jae
dec
mov
mov
addr16
add
pop
jae
es
push
cmp
dec
hlt
jle
popa
push
xor
andb
cmc
sbb
add
scas
xchg
sub
dec
push
adc
xchg
dec
imul
testb
movsl
adc
cmp
xor
addr16
mov
int3
cltd
test
mov
inc
xchg
mull
mov
push
stos
jb
add
sti
dec
pop
mov
mov
cmp
test
hlt
popl
popa
lretw
enter
loopne
lock
iret
mov
les
jo
bound
xchg
dec
stc
cltd
cltd
mov
inc
xchg
pop
ret
jno
pop
dec
fmul
pusha
fs
push
gs
jl
in
jns
jo
and
push
inc
cmp
clc
sbb
les
out
mov
rcr
mov
mov
push
lret
pop
popa
fwait
lcall
or
icebp
fucomi
xchg
inc
pop
jb
call
sar
out
fisubl
dec
bnd
adc
cmp
ja
pusha
imul
push
mov
int3
jecxz
sub
icebp
rcll
jge
pop
ret
inc
push
sub
divb
popf
push
add
out
cmc
stos
push
inc
push
add
cmc
in
insl
decb
or
fadds
sbb
imul
inc
mov
push
lock
pop
cmp
jecxz
cmp
lcall
and
clc
or
push
add
fcoml
lahf
inc
or
dec
out
and
inc
aaa
mov
jle
pop
test
sbb
or
jge
pop
cmp
loope
inc
pop
addr16
jmp
xchg
inc
je
xchg
pop
lret
test
inc
fdivr
sbb
dec
icebp
and
pop
inc
nop
lret
xchg
jae
pop
js
subb
in
ret
dec
push
inc
mov
pushf
mov
testb
aam
pop
mov
push
lods
and
js
dec
jne
adc
push
test
cmp
pop
adc
mov
or
out
fmuls
push
lea
negb
xlat
fadds
jecxz
add
and
push
pop
inc
xchg
xchg
cmp
stc
aaa
cmp
push
and
cwtl
test
sub
cltd
xchg
sti
adc
jae
pop
pop
adc
or
or
int3
inc
xchg
cmpsl
adc
jmp
loopne
and
icebp
scas
or
jp
icebp
fstpt
ffree
dec
fs
mov
adc
aas
stos
leave
shll
inc
popa
push
dec
lds
sub
out
lods
push
inc
push
pop
aam
jl
fcompl
push
jle
and
int
cmp
mov
xchg
mov
mov
dec
cmp
push
xchg
mov
mov
jp
in
mov
sub
xor
or
sub
and
pop
loop
mov
jecxz
dec
loope
rcll
test
jecxz
jl
fs
pop
in
or
rol
int
arpl
mov
fldl
add
mov
and
inc
pop
adc
cwtl
stc
sub
push
lea
fs
mov
sub
loop
adc
fcompl
fldcw
dec
sbb
and
mov
mov
lret
stc
dec
das
call
sub
cmp
add
xchg
cs
mov
inc
sbb
jge
or
adc
mov
mov
leave
xor
dec
aad
in
and
push
push
mov
mov
pop
jne
inc
adc
xchg
add
mov
bound
jle
sti
cwtl
gs
in
push
dec
js
push
movlps
xchg
push
js
aas
or
fucomip
rclb
dec
cmp
shlb
cwtl
cmp
dec
inc
rolb
cltd
jne
sar
roll
xchg
push
ds
ss
and
jo
in
pop
push
mov
and
ja
testb
ljmp
mov
and
inc
out
cmp
insl
mulb
lret
inc
cmc
push
loope
sbb
loop
test
out
sbb
pop
adc
xchg
fistl
fstps
and
repz
mov
frstor
into
iret
and
inc
mov
fidivl
stc
cli
dec
fnsave
fidivrs
sub
add
xchg
mov
mov
mov
jp
mov
out
mov
shll
es
pusha
leave
jecxz
jp
mov
pusha
ljmp
mov
ljmp
pop
pop
or
push
leave
testb
pop
movsl
pusha
loopne
scas
adc
out
push
ds
cmpsb
pop
push
sbb
and
fmull
lods
push
cmp
or
shll
xor
push
cmp
adc
paddd
cmc
cltd
js
daa
and
pop
xchg
out
scas
inc
in
lea
jns
and
loopne
pop
shll
jge
mov
lcall
mov
loope
in
mov
insb
cmp
pushf
cmp
icebp
iret
test
sub
imul
mov
cmpsb
sub
sub
je
mov
sub
call
pusha
cmp
cmp
gs
sub
push
adc
in
fidivl
xor
sub
mov
sub
test
icebp
movsb
ss
adc
movsb
roll
xor
test
lods
and
setg
xchg
je
lahf
dec
jo
push
addb
jle
mov
dec
adc
add
pop
sbb
push
pusha
sbbl
shrl
es
jne
xchg
ret
cwtl
sbb
mov
add
cmpsb
outsb
push
add
push
cmpsb
and
mov
dec
mov
cltd
mov
clc
mov
in
mov
gs
add
lcall
ljmp
pusha
or
xor
ret
adc
inc
hlt
insb
pop
dec
arpl
lods
or
xchg
sub
loopne
and
mov
ds
adc
in
xor
test
xchg
icebp
adc
stos
arpl
xchg
xchg
dec
subl
leave
mov
xchg
push
sbb
mov
fdivs
je
mov
and
fwait
imull
and
push
lds
lods
or
aas
xchg
std
insb
arpl
fistps
loopne
push
jg
test
xchg
and
xchg
loopne
fists
sub
dec
stc
ljmp
mov
pop
es
sbb
lcall
add
jp
movsb
xor
in
add
fnsave
cmp
rorb
add
inc
and
out
and
scas
pop
cld
loopne
inc
test
sahf
pop
sub
mov
add
fidivs
pop
mov
xchg
pusha
sbb
loope
adc
sub
shl
mov
mov
cs
int
jno
call
popa
and
dec
pop
sbb
add
pop
dec
fsub
fisubrs
sbb
adc
cld
mov
lods
mov
and
pop
testl
sti
add
movsl
xor
fsubl
pop
dec
mov
lret
popa
mov
test
pushf
in
fbstp
pop
fisttps
mov
sbb
arpl
pop
pop
adc
jp
adc
pusha
adc
inc
push
ret
iret
mov
mov
jbe
add
or
int3
mov
xchg
cmp
xchg
clc
cmp
rorl
js
xor
mov
or
lock
std
lods
repz
xchg
and
insl
push
idivb
stos
loope
into
jb
lock
xchg
repnz
jo
loopne
or
jmp
dec
sbb
or
mov
jge
mov
xchg
fimuls
icebp
ja
lock
rcr
pop
lret
xor
push
jg
push
inc
jge
je
xor
je
loopne
and
pop
loop
push
mov
and
into
and
inc
push
mov
rcrl
fmull
add
sub
or
insb
js
adc
cli
sbb
and
sbb
jp
mov
ss
cmp
xchg
in
lea
mov
fnstsw
push
sbb
pop
test
cmc
jo
jno
mov
fwait
mov
fildll
hlt
rcrl
scas
xor
jge
cmp
movsl
xchg
fistps
iret
pushf
jmp
mov
adc
inc
sub
mov
pop
in
ljmp
dec
lret
scas
lcall
or
sub
sub
jnp
cmp
into
outsb
scas
imul
pop
and
push
out
xor
daa
push
dec
inc
push
push
jb
orb
idivl
imul
adcb
xchg
dec
ja
popa
mov
pop
stos
pusha
cltd
sti
insb
lahf
mov
mov
dec
inc
mov
jp
adc
stos
xchg
inc
jnp
ljmp
jecxz
adc
pop
xor
push
popf
shlb
out
pop
add
mov
test
xlat
cmp
outsl
arpl
jns
ret
data16
lret
adc
add
jle
xor
dec
arpl
sarl
das
mov
test
icebp
out
add
add
inc
jecxz
aas
movsl
std
std
das
daa
add
add
pop
pop
test
sbb
pop
xor
es
ffreep
or
xor
ret
hlt
mov
fs
jb
int
push
outsb
into
je
pop
adc
push
or
jne
mov
sbb
pop
push
inc
dec
push
cmp
lea
lahf
sbb
sub
enter
movsl
mov
cmp
mov
push
xor
mov
sub
jle
imul
jo
push
out
jne
mov
jo
xchg
fcoml
push
pop
in
fs
jp
in
aam
sbb
inc
ljmp
jne
jnp
rolb
push
shll
xor
push
test
push
cmp
out
mov
daa
push
adc
loop
ret
push
mov
daa
lock
dec
jmp
repz
mov
cmc
fdivrl
xchg
nop
pop
shlb
aaa
cmp
inc
enter
mov
mov
addb
mov
jo
sub
loop
or
mov
popa
mov
fiaddl
mov
sbb
cmp
or
cs
and
inc
xchg
mov
pop
and
flds
fwait
les
push
add
push
clc
lds
insl
xchg
bound
in
fcmovb
data16
xor
mov
mov
inc
and
or
je
jnp
push
dec
push
es
jnp
or
xchg
mov
dec
insb
lcall
lea
mov
ror
or
fcoms
std
cmp
lcall
cwtl
lret
loop
cmp
aad
sbb
int3
movsb
push
inc
aas
lea
repz
imul
lock
and
xor
out
cltd
es
sub
xchg
mov
adc
mov
mov
int
xchg
xlat
mov
cltd
and
ret
shll
sbb
add
lcall
xchg
test
xor
push
addr16
mov
xor
popf
mov
or
jbe
mov
lds
gs
xor
cwtl
decl
xchg
negl
or
jbe
and
cmc
cmpsl
pop
jb
xchg
fidivl
fwait
cmp
rcl
pop
es
xchg
adc
mov
jnp
xchg
sbb
out
popf
mov
mov
xchg
popa
and
lret
shlb
add
and
adc
mov
or
std
je
mov
and
push
andl
sbb
pushf
sub
into
add
add
xchg
arpl
jle
xchg
cmp
inc
stos
scas
cltd
pminsw
es
fstps
test
jg
ljmp
or
loopne
loopne
int
jl
mov
lret
push
lods
add
jp
lahf
int
dec
add
mov
arpl
jmp
dec
sub
push
xor
addb
adc
rcl
pop
and
pop
or
xchg
inc
out
pop
movsb
scas
shll
dec
dec
aad
jle
test
outsl
loop
shl
inc
repnz
test
je
mov
mov
cmp
nop
ljmp
roll
push
mov
mov
dec
mov
and
popa
insb
fptan
xchg
and
inc
stc
xchg
mov
mov
arpl
xor
mov
or
mov
test
enter
push
jl
insl
repz
and
sub
das
mov
ljmp
mov
fdivrl
sbb
or
shlb
push
adc
inc
xchg
mov
cmp
jle
or
inc
mov
cwtl
fs
test
out
jl
loope
jle
lcall
xchg
imul
cmpb
add
mov
pop
jg
mov
pusha
xchg
xchg
arpl
or
mov
stos
cmp
dec
and
ljmp
sbb
pop
cmp
scas
or
icebp
mov
push
or
add
popa
inc
and
xor
icebp
xlat
ljmp
jae
jg
pop
jge
push
xor
adc
fidivl
stc
add
test
add
push
clc
mul
mov
daa
pushf
ret
xchg
mov
mov
inc
inc
aam
push
jge
ror
js
xor
push
in
ret
in
cmp
sub
sti
mov
jle
mov
je
cld
stos
ja
ljmp
mov
sub
dec
clc
das
push
lock
sub
dec
dec
bound
fisttps
xchg
sbb
pop
and
loope
xlat
pop
test
into
dec
repz
testl
call
arpl
hlt
aad
jb
lret
dec
lds
push
xchg
pop
loopne
imul
mov
mov
stc
stc
sbb
popf
sub
test
sub
movsb
xchg
and
push
adc
jp
push
sub
loope
sub
mov
mov
arpl
int3
fmul
in
cltd
out
aas
fidivrs
mov
adc
arpl
mov
push
and
add
inc
lock
and
mov
call
xor
stc
push
inc
loop
out
shlb
in
shll
lods
stc
mov
hlt
xlat
in
sbb
jecxz
sub
fdivrp
pop
bound
and
push
sbb
cli
mov
adc
mov
dec
arpl
aam
cltd
lods
sahf
test
cli
movsl
test
arpl
adc
jecxz
test
ret
dec
lea
pop
xor
repz
leave
or
and
xlat
sub
orb
mov
imul
lods
stos
pop
sbb
popa
jnp
sti
sarb
mov
or
cld
jbe
shl
pop
push
pop
inc
test
adcl
pop
in
divl
mov
push
push
aaa
sbb
mov
sub
lods
sbb
stc
and
cmpsb
arpl
dec
mov
adc
fsts
sub
cltd
jbe
popa
pop
int3
lcall
xor
cmp
push
mov
sbb
cs
cli
adc
jge
into
std
add
loop
adcb
ds
sub
into
stos
push
xchg
iret
push
hlt
movsb
mov
in
aam
adc
stc
add
pop
inc
leave
jnp
cwtl
sbb
pop
jecxz
cmp
es
hlt
sbb
pop
pop
jg
fidivrl
daa
int
adc
pop
add
push
mov
sti
jbe
xchg
mov
sub
test
fildll
cmpsb
pop
mov
jg
mov
data16
mov
rcrb
jae,pn
ja
jns
in
cwtl
in
out
dec
jae
pop
cmpb
mov
add
aas
enter
mov
xor
outsl
rcrb
enter
mov
sbb
sub
roll
test
scas
jmp
jmp
mov
repnz
leave
mov
test
in
popa
scas
rolb
dec
in
cltd
aaa
lcall
or
cld
aam
dec
cltd
add
dec
lret
adc
adc
or
sub
roll
rcr
add
pop
das
faddp
xor
push
xchg
jo
xor
sbb
enter
xchg
dec
mov
cld
sub
add
or
push
pop
mov
insb
dec
testb
fbld
cmp
sbb
cmpsl
adcb
testl
sub
mov
jg
aad
in
jle
lahf
sub
mov
lahf
jnp
or
push
cmc
mov
jo
push
lret
fwait
imull
sub
mov
mov
and
dec
aam
pop
fists
addr16
push
jne
add
ljmp
push
pop
pusha
icebp
je
movsb
jne
push
add
mov
cmpsl
cmp
aaa
ja
adc
ja
or
fwait
push
push
jp
dec
sbb
in
xchg
out
test
fldenv
insb
ja
xchg
pop
cltd
push
and
xchg
and
and
or
jg
sbb
pop
dec
adc
jbe
cwtl
clc
inc
into
rclb
sub
into
mov
movsb
sahf
outsl
dec
jecxz
cmpsl
iret
sbb
fbld
lods
ds
rcl
pop
daa
popf
fld
in
leave
ja
enter
xchg
or
mov
sahf
stos
popa
sub
push
int
xchg
push
dec
adc
xor
clc
push
scas
or
lret
repnz
loope
add
call
out
xor
mull
cwtl
or
fadd
mov
test
hlt
sub
xchg
pusha
stc
mov
rclb
sti
iret
test
dec
fucomi
js
mov
and
out
mov
ljmp
mov
sbb
pop
andl
das
or
js
push
arpl
or
lahf
fmul
dec
xor
pop
ffreep
in
test
lods
mov
or
jl
sbb
cmc
adc
jae
sahf
cmp
jbe
mov
adc
sbb
lock
and
test
pop
pop
inc
imulb
xchg
inc
mov
add
arpl
inc
leave
sbb
xor
add
test
and
insb
filds
into
arpl
stos
inc
or
mov
rclb
pop
testb
cmp
ret
inc
loop
loope
pop
adc
dec
lcall
inc
mov
xor
in
outsb
popf
sbb
popf
dec
lock
aad
sub
into
mov
lock
pop
or
mov
jp
add
mov
fwait
and
addr16
mov
add
lds
jecxz
iret
push
ret
cld
lcall
fdivr
stc
sub
bound
fmuls
fiaddl
cwtl
and
xor
lcall
hlt
icebp
push
enter
sbb
int3
daa
sahf
push
pop
mov
cmc
and
sar
shll
fwait
sub
inc
aad
mov
lods
daa
shrl
fistps
out
mov
lret
sbb
mov
push
mov
popa
fsub
out
push
mov
adc
das
cmpb
and
push
push
dec
and
aad
cwtl
loop
int
icebp
mov
inc
insb
push
lret
movsl
adc
imul
movsl
mov
out
ret
cwtl
inc
iret
or
lret
dec
rorl
testl
cld
jp
pop
popf
or
mov
cmp
push
cmp
fs
add
xchg
sbb
fnsave
in
push
xchg
addl
stc
cmp
adc
cs
xor
or
inc
push
and
sti
jg
mov
fcomps
test
lret
pop
cwtl
in
and
dec
call
adcb
push
or
insl
push
add
imul
dec
sub
inc
stos
fdivrl
mov
imul
mov
xor
ret
jl
out
jne
bound
jmp
jmp
aaa
es
cwtl
pop
cmp
jp
pop
popf
mov
sti
dec
dec
dec
push
jne
adc
lock
sub
jne
iret
adc
lahf
fdivp
sbbl
push
divb
jne
arpl
add
sbb
inc
movsb
sbb
addr16
push
in
xchg
push
fwait
and
fcmovne
inc
imul
hlt
mov
lds
adc
cmp
push
rcll
mov
div
and
nop
inc
push
gs
mov
fdiv
insb
adc
push
mov
aas
cs
xor
dec
pop
fnstcw
ss
add
cmpsl
les
mov
push
xor
arpl
push
leave
jge
sti
data16
sbb
mov
outsl
mov
sbb
xor
lock
inc
in
xor
rolb
ret
data16
push
xor
jg
inc
xchg
mov
sub
xchg
cmp
rorb
sahf
jns
mov
lahf
cmp
aad
jge
cli
nop
pop
les
jmp
lret
add
cmc
inc
rorl
shlb
icebp
cld
jecxz
push
loop
inc
fisttpll
or
cmc
lea
lret
iret
pop
inc
out
push
mov
in
mov
fiadds
pop
push
mov
push
jmp
pop
rorb
outsl
push
mov
adc
sar
insb
call
jecxz
repnz
shll
pop
dec
cmp
dec
cs
test
ss
xchg
add
pop
dec
pop
test
push
jnp
pop
gs
or
mov
fldenv
push
pop
jns
pop
push
fadds
push
mov
addb
xchg
dec
ficoms
cltd
xchg
mov
out
rcrl
dec
lahf
repnz
mov
adc
aad
fnstcw
and
cmp
add
arpl
fcmovne
jno
test
jo
push
int3
dec
sbb
popf
mov
int3
cltd
jl
mov
leave
cmp
jb
push
mov
es
pop
xor
push
mov
xor
ss
imul
jp
push
mov
adc
mov
cmp
int
loopne
xor
arpl
adc
inc
lock
lods
xchg
fstl
aaa
lret
pop
iret
hlt
cmp
cli
dec
test
mov
call
pop
sbb
das
add
jl
mul
inc
ficoms
in
stc
dec
and
push
and
stos
int
cmc
lcall
sbb
inc
dec
or
mov
sub
aad
sbb
icebp
and
stc
lret
out
sub
pusha
je
push
mov
fwait
ljmp
and
ss
push
pop
sub
cmpsb
dec
out
stos
divb
push
cmp
pusha
popf
out
push
addr16
je
mov
pop
add
repz
stc
jns
pushf
jge
out
lds
dec
pop
mov
cmp
icebp
and
lods
movsb
sbb
fstl
loop
jg
jbe
rcrl
mov
push
std
xchg
pop
loop
out
mov
and
pop
outsl
aad
outsb
pushf
jmp
or
mov
and
adc
xor
push
nop
push
cld
jmp
aam
jno
jns
in
clc
inc
and
lret
sub
fidivs
and
push
ja
movsb
aaa
jmp
xorl
mov
xchg
popa
mov
xorl
add
sti
push
mov
add
pop
dec
dec
inc
push
mov
loope
push
dec
in
dec
lcall
aam
lret
outsb
cmp
sub
pop
xor
cmc
inc
or
and
sahf
push
push
push
lret
xchg
cmp
fisubl
mov
outsl
dec
and
outsb
pop
fdivrs
enter
sub
sahf
push
popf
mov
pminsw
fadd
mov
jle
test
scas
xchg
aas
movsl
pushf
pop
test
mov
push
cwtl
xchg
adc
jbe
mov
adc
mov
cmp
adc
in
lods
xor
sbbb
dec
and
jmp
push
movsl
in
or
xchg
pop
bound
xchg
out
inc
lods
push
mov
inc
add
arpl
fidivs
lods
shll
sub
jne
push
xor
push
call
shlb
rorb
inc
bound
mov
dec
pop
sub
xchg
fists
repnz
jns
xchg
es
mov
mov
or
shrl
sbb
push
xchg
jae
pop
or
rorb
push
out
dec
nop
mov
xor
or
xor
pushf
daa
adc
popf
sbb
ret
mov
shl
imul
jle
test
in
mov
lret
mov
stos
je
add
jbe
sub
cmp
pop
jl
pusha
lods
ret
call
lret
push
nop
sub
mov
add
repz
sarb
shl
les
out
test
jl
xor
orl
aaa
sbb
and
and
push
enter
add
xor
enter
mov
shl
adcl
dec
mov
fs
int3
jcxz
ror
xor
decb
lods
jg
add
loope
xor
pop
ret
dec
cwtl
nop
mov
pop
mov
xchg
jnp
xchg
xchg
test
sbb
push
aaa
rcrl
std
push
xchg
aas
xchg
insb
push
or
lea
popf
addr16
mov
rcll
pop
into
shlb
push
inc
cmpsl
cwtl
cmp
jae
pushf
ss
es
or
push
divb
dec
addr16
cmc
push
iret
test
cli
cltd
sub
xchg
dec
popf
lret
in
pop
andl
mov
test
bound
pushf
inc
adcb
vpshuflw
sbb
jg
push
jge
ds
icebp
lcall
fldcw
mov
jg
sar
dec
fisubrl
pop
ret
or
out
adc
pop
int
lret
or
cmpsl
enter
nop
xchg
pop
std
mov
push
mov
cmp
mov
mov
pop
mov
xchg
adc
rclb
fidivrs
mov
iret
lea
inc
aad
or
negl
or
fsubrl
fisttpll
xlat
pop
lret
xchg
mov
stos
jns
mov
stos
mov
fiadds
inc
test
movsl
test
mov
mov
lock
xchg
mov
sti
lcall
add
jp
insb
inc
mov
jno
lods
lock
pop
mulb
lret
pop
dec
ret
insb
mov
frstor
pusha
enter
push
mov
dec
iret
push
pop
out
pop
fstpt
mov
idivl
ds
cwtl
mov
dec
in
adc
pop
xor
lods
xchg
add
stc
jae
push
and
mov
and
es
cmp
jmp
xchg
pop
cmpb
rolb
ss
push
or
fwait
aam
lret
mov
sub
and
in
mov
xchg
dec
or
scas
ss
mov
pop
js
repnz
sahf
cmc
cmp
xor
stos
sub
rclb
psubsb
sub
xlat
cwtl
push
push
sbbb
movsl
or
test
mov
mov
repz
fldcw
jb
out
or
mov
fidivrs
mov
call
clc
inc
xchg
mov
idivl
mov
xchg
or
dec
lods
jge
dec
xor
loopne
sub
push
mov
addr16
packuswb
lea
cmpsb
and
pop
push
jecxz
notl
add
jno
mov
in
addr16
bound
xchg
sbb
and
mov
dec
push
lock
enter
scas
and
xchg
adc
add
inc
and
loop
pop
mov
cli
sub
fwait
sub
loopne
stos
lods
xchg
mov
xchg
in
jno
push
dec
push
mov
shl
and
push
and
insb
outsl
nop
fdecstp
data16
dec
decb
mov
lahf
dec
mov
sbb
push
inc
pop
ret
mov
jge
jle
js
popf
inc
mov
icebp
push
fdivl
das
jmp
std
mov
mov
xchg
jmp
std
push
fbstp
jns
jbe
or
vpshld
aaa
pop
aas
push
xor
das
clc
lds
sarb
push
add
add
pop
and
clc
jb
arpl
inc
sub
jno
mov
int3
icebp
add
mov
add
sub
cmp
mov
xchg
mov
in
mov
mov
jne
push
mov
cmp
pop
add
movsl
xchg
in
push
inc
mov
hlt
xor
push
jecxz
pop
mov
adcb
mov
iret
sbb
jnp
cmp
fistpll
fdiv
push
rcrl
push
jmp
arpl
and
pusha
sbb
roll
xchg
icebp
and
adc
jecxz
rolb
into
or
dec
inc
movsb
sti
lea
mov
cmpsl
jbe
mov
in
test
inc
scas
ret
sbbl
adc
push
sbbl
sub
daa
or
fstps
push
jbe
mov
arpl
clc
pop
xor
stos
adc
cmp
adc
pushf
sbb
mov
ficompl
cmp
mov
inc
dec
insl
jb
lcall
mov
sub
outsb
dec
arpl
std
lahf
pop
arpl
or
popa
stos
in
mov
pop
sahf
inc
mov
add
mov
add
xchg
icebp
jecxz
sub
int
pop
and
icebp
mov
xorl
mov
test
mov
dec
adc
push
inc
movsb
mov
lods
dec
cmp
and
pop
not
fstpt
mov
fistps
xor
add
daa
pop
int3
push
inc
mov
inc
and
shl
jo
sti
mov
jb
jl
dec
ffreep
and
scas
push
pop
or
rclb
int3
pusha
test
scas
mov
or
test
mov
imul
data16
or
xor
movb
fimuls
out
push
loop
and
inc
mov
nop
fidivrs
mov
cmp
cmp
or
iret
in
or
fxam
insl
mov
pop
cmp
clc
popf
cmp
push
dec
insl
xor
in
fistl
pusha
jne
mov
pop
or
inc
repz
pop
stos
jo
out
out
in
outsl
push
xor
push
bound
inc
jecxz
mov
mov
adc
jno
push
dec
lcall
ds
mov
ret
insb
ret
cmp
cmpsl
out
shl
adc
or
dec
lcall
dec
fscale
lock
xchg
ds
lcall
mov
jb
nop
lods
jo
nop
int
mov
and
pop
int
jp
mov
jp
test
mov
insl
jg
gs
pop
push
addr16
in
pop
xchg
push
xor
insb
add
roll
ss
in
fdivrl
mov
or
xlat
outsl
stc
mov
xlat
lret
in
add
or
out
in
shl
mov
arpl
add
mov
sbb
and
imul
mov
sbb
iret
push
fdivrs
lret
adcb
jl
dec
arpl
ja
test
lock
push
les
or
pushf
sub
clc
jge
jnp
xlat
sbb
les
decb
out
mov
cmp
cmpsl
add
xor
aas
cmp
iret
xchg
jg
ret
mov
mov
movsb
xor
jbe
and
popa
scas
shrl
movsb
xbegin
lret
lret
outsl
popa
shrl
sahf
xchg
out
pop
mov
rolb
clc
jbe
cli
mov
sbb
orl
imul
repz
xor
sbb
adc
pop
or
add
add
cmp
xchg
cmc
in
lods
fstps
lods
pop
lcall
push
in
or
cmp
xchg
icebp
push
ret
add
sarb
mov
inc
lods
bound
mov
and
xchg
sub
ss
mov
jne
jae
and
mov
imul
fs
ja
cmpsb
insb
mov
and
ljmp
inc
push
sbb
pushf
fcmovne
aas
add
imul
lea
dec
sbb
mov
inc
mov
cltd
fists
lock
out
push
mov
xchg
outsb
js
sbb
cmc
dec
or
jns
pop
jecxz
push
inc
and
cli
in
mov
jmp
in
addb
es
sbb
fisubs
nop
cmpb
lcall
mov
addb
inc
and
dec
scas
mov
hlt
mov
push
mov
in
and
sbb
sbb
jmp
jecxz
pop
in
dec
ret
jecxz
jp
adcl
mov
icebp
jno
mov
push
inc
inc
pop
je
mov
das
or
das
add
sbb
push
rolb
lods
push
loop
mov
jnp
lret
pushf
movsb
inc
and
fsubr
test
popa
stos
jmp
setne
push
out
push
test
jg
jae
out
adc
icebp
jb
popa
add
sub
js
mov
jbe
and
enter
or
mov
out
xlat
sarb
sbb
mov
xor
cli
fs
pop
xor
mov
add
ret
mov
dec
xchg
dec
xor
mov
lea
out
mov
push
pop
sbbl
mov
stc
in
aas
daa
subl
push
clc
jmp
subl
iret
rcrb
movsl
jno
or
shrl
jmp
sub
hlt
ffreep
xor
sub
push
adc
sub
je
mov
xchg
jg
xchg
leave
push
enter
sbb
shlb
sbbl
push
jb
nop
cli
je
mov
push
sahf
mov
pop
ds
lods
cmp
in
xor
xchg
or
cltd
fdivrl
pop
xchg
fwait
mov
xor
ds
pop
loopne
dec
pop
xor
imul
aad
cmpsl
ds
arpl
test
sbb
mov
aaa
xor
loopne
jp
enter
mov
lret
xchg
sub
xchg
out
cmpb
rclb
lret
dec
inc
pop
xor
test
cmp
push
mov
pop
ds
repz
aam
adc
lea
adc
jb
mov
mov
sbb
or
out
sub
adc
sub
push
adc
sbbl
test
push
or
std
mov
fists
mov
mov
pop
and
pop
add
xchg
xor
or
outsl
mov
dec
pop
push
sarb
or
fldcw
or
arpl
rolb
inc
cmp
push
ret
and
ja
push
dec
daa
daa
lds
inc
push
ss
pusha
sbb
pop
icebp
push
dec
in
inc
mov
push
imul
mov
add
mov
data16
cmp
inc
cli
sbb
xchg
fldcw
and
mov
dec
push
and
cwtl
add
fcoms
add
push
and
mov
into
mov
adc
mov
push
or
mov
repz
xchg
and
sub
and
test
mov
adc
sub
xlat
xlat
mov
dec
out
sbb
mov
xor
test
xor
jl
push
mov
mov
outsl
xor
nop
std
sbb
mov
lahf
mov
mov
mov
adc
mov
das
inc
pop
lea
jle
push
cmp
jecxz
repnz
loope
loop
xorl
sbb
outsb
test
outsb
and
adc
sbb
adc
mov
lods
dec
mov
into
andl
push
mov
xor
repnz
lret
xchg
outsb
dec
cmp
in
sbb
loop
cwtl
or
lret
xchg
dec
xor
adc
les
mov
xor
adc
insb
mov
sub
outsl
sahf
repnz
iret
int
xchg
mov
aaa
cmp
sub
adc
test
scas
push
mov
pop
data16
adc
mov
outsl
outsl
divl
jg
mov
popa
test
cmpsb
out
in
mov
jmp
mov
sub
pop
add
mov
jecxz
xchg
cmpsb
add
mov
cld
ss
es
pop
fstps
mov
mov
je
test
adc
out
pop
xchg
flds
mov
out
imul
xchg
mov
or
cmp
loop
shl
push
sbb
dec
mov
mov
cmpl
out
add
ljmp
pop
mov
sbb
mov
mov
pop
mov
imul
mov
dec
lods
adc
fimull
fnstsw
outsl
xor
bnd
cmc
add
sbbl
pop
pop
aas
cmp
cld
frstor
cmpsl
mov
mov
mov
jns
repnz
cmp
repnz
mov
adc
add
pop
lods
mov
xchg
idivb
fsubl
daa
jns
scas
loop
fcompl
adc
push
mov
out
repnz
nop
push
test
push
stos
cmpl
pop
lret
push
push
rorb
dec
mov
xor
pop
ror
sub
icebp
bound
sbb
daa
movsb
mov
mov
add
outsb
fnstenv
mov
fisubrl
or
test
jo
test
add
pop
decb
and
or
imul
dec
insb
add
repz
pop
pushf
inc
movsb
scas
pop
inc
add
mov
lds
pusha
or
shll
mov
push
fxch
mov
inc
scas
xor
ret
fisttps
fwait
outsb
ror
jae
pop
fiadds
fcmove
pop
lret
enter
cs
repnz
in
mov
clc
scas
ret
mov
cmpsb
pop
aaa
mov
test
push
pop
stos
dec
call
add
or
leave
xor
sbb
inc
jb
fnstsw
or
xor
jnp
popf
pop
outsb
lock
mov
icebp
xorl
movsb
add
fidivl
add
and
ret
mov
sbb
xor
enter
lcall
xchg
and
push
aas
shrl
scas
mov
xor
mov
sbb
mov
sahf
and
stc
cmp
stc
jmp
xchg
outsb
jb
adc
jae
loope
bswap
and
add
out
leave
cltd
xlat
cmc
stos
stos
sbb
out
stos
sub
movq
scas
lret
pop
dec
dec
out
pop
insb
push
out
mov
dec
or
xchg
jnp
inc
xor
daa
jno
sub
mov
jl
mov
out
leave
fists
mov
inc
aaa
sbb
adc
sti
mov
fldln2
int3
aad
push
add
xchg
pop
shrl
and
jle
pusha
add
or
lods
mov
in
push
push
push
cmp
lods
xor
xchg
scas
movsl
cmp
inc
jnp
aad
pop
push
call
out
pop
cs
pop
inc
jmp
cmc
and
mov
xchg
pop
aaa
cltd
mov
pop
mov
and
xchg
out
stc
push
xchg
push
int
sub
mov
enter
movsl
stos
ret
repz
xor
push
aam
pop
mov
jle
mov
in
notl
aam
popf
xchg
bound
mov
ljmp
xchg
outsl
dec
lcall
mov
jbe
pop
lods
push
adc
stc
das
mov
sbb
lret
jp
inc
es
inc
outsb
ds
out
out
sub
xchg
mov
fisubl
or
dec
cld
std
xor
adc
or
int3
in
inc
jp
jecxz
adc
push
jae
pop
mov
jnp
jbe
gs
es
and
push
stos
dec
jle
scas
es
add
test
jb
xchg
xor
xor
loope
pop
movsl
mov
std
daa
orb
stc
xchg
add
mov
in
std
cmp
call
mov
aam
scas
bound
cs
cmp
fmulp
ljmp
sub
xchg
fcompl
jge
and
xchg
mov
test
pop
loopne
pusha
mov
xor
outsb
ljmp
fimuls
mov
xor
fwait
call
scas
cmp
adc
add
mov
push
jl
in
enter
clc
nop
insl
dec
and
das
mov
adc
fsubrs
sub
push
loop
imul
and
scas
mov
ljmp
aas
mov
dec
pop
mov
pop
sub
daa
mov
and
mov
into
nop
addr16
cmp
jmp
stc
pop
add
sbb
jmp
add
xchg
sbb
and
les
sub
sub
fldl
ds
roll
or
mov
xchg
shrb
inc
add
clc
pop
sub
or
inc
hlt
sub
adc
ja
and
mov
mov
sbb
sub
sub
mov
mov
loope
push
adc
ss
mov
push
movl
xchg
call
add
scas
push
sub
rcrl
imul
adc
shr
iret
sbb
sub
mov
fmulp
push
stc
pop
jbe
sub
jg
mov
sbb
cmp
inc
jns
adc
mov
jo
mov
scas
rol
inc
jmp
adc
fidivrl
adc
test
push
and
popa
mov
push
pushf
aas
xchg
cmp
xchg
and
pop
sub
pop
jle
xchg
mov
dec
fmull
in
jno
imul
es
test
push
pop
dec
xor
mov
adc
push
pop
outsb
jg
cs
and
mov
scas
fisttpl
in
orb
or
inc
shl
int3
in
xchg
jg
inc
fwait
orl
fcmovnb
mov
xchg
pop
subb
into
sbb
imul
jne
jo
sub
repnz
sbb
loope
lds
dec
hlt
sahf
fstl
xchg
inc
cltd
inc
popa
or
sub
jmp
push
insb
sarl
or
dec
scas
push
xor
mov
jmp
rclb
jno
popa
cmpsl
pushw
stos
inc
pop
inc
adc
xchg
inc
in
daa
lcall
xchg
fdivrl
out
mov
sbb
jbe
adc
repnz
xor
rorb
out
dec
in
sub
inc
dec
add
test
xor
mov
jae
pop
cs
and
mov
dec
jne
adcb
repnz
cmp
sub
cmp
mov
pop
leave
xor
pushw
data16
jne
sbb
adc
dec
lock
sbb
jb
xor
add
dec
xchg
push
aas
push
or
lret
cmp
cmp
sbb
test
scas
cmp
repnz
and
xchg
nop
dec
xchg
popa
sbb
out
cmp
sbb
out
cmpsb
negb
inc
jp
mov
mov
gs
xchg
jge
fdivr
pand
call
lods
ss
lock
int
sub
sahf
mov
inc
sbb
enter
clc
lock
dec
adc
dec
daa
pop
or
cmc
mov
sbb
lahf
sub
sbb
push
test
pop
lock
jp
or
lock
movsb
ljmp
arpl
mov
jg
adc
lea
dec
pop
mov
xchg
dec
daa
mov
shlb
aad
inc
push
rol
bnd
lods
pop
outsl
sub
adc
into
sbb
lea
stos
ret
dec
sbb
add
or
mov
xchg
stos
push
imul
in
sarl
add
addl
pop
mov
and
pushf
push
cmp
daa
xchg
mov
mov
dec
les
ret
stos
pop
out
fisttps
push
rorb
fcoml
sbb
pop
inc
xchg
enter
pop
mov
cmp
dec
pop
rcll
icebp
scas
lret
les
fmuls
jne
lea
enter
stos
push
mov
scas
mov
jp
gs
adc
stc
repz
mov
ret
imul
mov
jne
lret
push
testl
inc
cld
or
adc
inc
test
xor
aad
sbb
pop
pushf
aad
clc
mov
cmp
add
mov
xchg
lret
or
aam
cmpsb
into
xchg
clc
inc
jae
mov
cmpsl
or
movsb
nop/reserved
jbe
int
imul
cmp
inc
push
fimull
insb
insb
and
jg
int
ljmp
adcb
jbe
fisttpl
popf
and
shl
xchg
in
iret
jb
int
add
and
mov
inc
jge
cmp
sub
mov
fwait
mov
jmp
or
and
add
std
cwtl
jne
or
test
cld
push
adcl
add
push
lods
out
or
ss
mov
aam
or
pop
cmp
ja
or
push
cmpsl
loope
fistl
or
xchg
mov
enter
dec
ret
sub
imul
mov
jl
adc
xchg
sbb
sbb
ror
icebp
jbe
xchg
lock
jl
sbb
test
mov
jo
sbb
and
dec
ret
dec
addl
ljmp
add
mov
cmpsb
xor
sbb
push
pusha
push
add
cwtl
sbbb
adc
ljmp
mov
pop
sub
pop
or
mov
adc
adc
mov
jno
sub
xor
sbb
into
movsb
mov
enter
icebp
ja
das
je
daa
mov
sbb
mov
mov
mov
cmp
aaa
xchg
mov
adcb
or
push
daa
fs
cmpsl
addl
add
dec
jecxz
sbb
imul
mov
insl
repnz
fsubrs
and
out
xor
mov
xchg
pop
stos
fidivrl
adc
jbe
stos
test
jecxz
scas
test
aas
jge
jmp
bound
mov
outsb
jp
aaa
xchg
in
shll
mov
scas
imul
rorl
lea
add
xchg
fimull
jnp
xchg
xchg
mov
scas
test
cmpsb
mov
cmp
dec
nop
push
jo
jecxz
jmp
in
fmul
sbb
or
in
inc
das
movlps
adc
xorb
jnp
and
dec
xchg
xlat
push
call
or
xorb
dec
pop
and
add
sbb
cli
pop
scas
call
bnd
cmp
std
ja
sub
movsb
mov
jno
cmp
pop
and
xlat
ret
mov
cmpsl
scas
fisttpll
adc
push
and
jg
cmpsl
scas
pop
fistl
ret
mov
jmp
iret
inc
repnz
outsl
push
adc
mov
xchg
mov
hlt
mov
xlat
jp
out
lods
ss
stc
test
jnp
ja
rcl
fsubs
add
cmp
adc
dec
add
mov
shr
sahf
pop
lcall
xchg
xor
loope
les
or
inc
xchg
pusha
ds
ret
xor
cmp
inc
imul
jmp
imul
sub
clc
sti
add
xor
loope
sub
popf
adc
cwtl
icebp
ret
adc
jecxz
push
fildll
xchg
xchg
push
dec
pop
ja,pt
xor
mov
mov
pop
stos
jg
dec
xlat
mov
es
jb
xor
mov
mov
push
aam
mulb
and
fwait
loope
push
sbb
cmp
inc
adc
shlb
mov
cmp
fwait
sub
cli
add
xor
add
sub
out
inc
nop
mov
lods
ja
push
push
or
pop
frstor
std
dec
iret
loopne
xor
ja
nop
jae
push
fwait
xchg
cmpsl
adc
loope
adc
or
loop
iret
fmul
dec
imul
jg
es
in
sbb
mov
push
call
sub
xchg
out
xchg
and
out
cmp
int
mov
addr16
dec
or
stos
mov
xor
xor
sti
sysenter
jno
adc
mov
adc
mov
xor
bound
mov
mov
das
mov
adc
or
andnps
ja
aas
test
outsb
mov
movsl
lea
adc
insb
xchg
mov
in
xchg
test
push
add
sbb
pop
mov
pop
ss
xor
xchg
xor
mov
pushf
adc
adc
les
jbe
ss
xchg
sub
ja
jecxz
and
out
cmp
cmp
mov
fldt
cwtl
testb
sarb
sub
push
pop
jo
das
sub
cltd
mov
sub
stos
aas
cwtl
jno
fstpt
lds
jno
adc
cmpl
shll
pmaxub
mov
xor
fstps
test
jo
dec
movsl
push
fisttps
sub
mov
sub
iret
ficompl
out
sbb
fadds
enter
sar
jl
outsb
adc
mov
push
ljmp
push
sbb
mov
push
outsb
and
fwait
in
or
repnz
out
xlat
out
push
movsb
outsl
addr16
mov
cmp
scas
add
inc
repnz
ss
clc
stos
dec
add
inc
push
cmp
and
cmp
cmp
ficompl
pop
sbb
push
out
pusha
dec
inc
cltd
fcoml
add
mov
dec
mov
mov
orb
sbb
mov
cmp
lock
daa
shrl
mov
xchg
jmp
adc
jbe
and
lret
shll
jno
xchg
test
push
cmp
lods
xor
mov
and
sbb
jnp
pop
sbb
cmpl
xor
xor
cmp
daa
mov
clc
repnz
icebp
mov
push
imul
scas
loope
mov
or
mov
je
push
mov
jno
mov
sub
popf
pop
fists
lods
xchg
not
fnsave
sub
inc
adc
jg
sub
mov
and
lret
add
aas
inc
inc
ret
lret
dec
mov
cs
and
fcoml
and
repnz
sbbl
adc
shll
xor
inc
adc
into
or
inc
aas
jg
jmp
add
rclb
pop
outsl
repz
mov
pop
jp
jne
jmp
popa
enter
cmp
dec
jl
ds
pop
adc
test
and
cltd
popf
sbb
add
push
xchg
scas
pop
xlat
xchg
sahf
adc
leave
dec
push
fisttps
jno
cs
call
mov
xor
mov
iret
in
inc
cmp
push
add
mulb
dec
adc
ret
and
push
in
or
gs
in
cmp
sub
pop
or
dec
sub
hlt
fisubs
lea
popf
call
adc
add
in
mov
mov
test
out
lods
mov
or
or
out
jmp
cmpsb
fs
pop
xchg
mov
sub
jnp
sbb
jg
and
pusha
push
sti
out
push
add
jbe
jo
addr16
mov
sbb
xor
mov
push
hlt
into
stos
jnp
outsl
push
sub
pop
ds
mov
cmp
shll
in
xchg
push
push
push
jnp
arpl
sub
inc
xor
pushf
sbb
scas
inc
fs
iret
cld
fdivl
mov
scas
into
push
or
xor
push
leave
cmp
pop
std
sbb
notb
or
mov
ljmp
das
mov
ret
hlt
clc
loopne
and
adc
lock
xor
sbb
incb
adc
sbb
mov
je
pop
jb
mov
loopne
out
and
shll
leave
mov
out
xchg
clc
shll
dec
mov
std
mov
cmp
inc
ds
add
cmp
pusha
fists
add
fs
push
pop
push
dec
jbe
mov
dec
fucomi
dec
fbld
cltd
sub
repnz
addr16
popf
movsl
imul
fcmove
and
jae
push
loope
and
jbe
push
scas
shrb
sbb
ljmp
jle
lds
in
xor
pop
dec
lods
lods
cmp
loope
mov
or
mov
push
imul
test
scas
push
jbe
push
add
ffreep
mov
or
inc
dec
inc
les
xchg
cmpsb
iret
dec
mov
and
jl
imul
out
cwtl
popa
push
imull
rcrb
mov
jp
pop
jge
jg
xor
dec
fwait
jmp
or
or
or
mov
icebp
rcrb
rcrl
xchg
shl
lcall
push
testb
sub
xchg
scas
pushf
lret
mov
ret
mul
fcoml
inc
sbb
and
sub
cwtl
in
ret
pusha
loope
data16
stos
cmp
and
iret
inc
fptan
adc
inc
mov
je
dec
int3
and
stos
les
mov
lcall
addr16
mov
js
loopne
les
icebp
out
and
xchg
jp
jg
iret
dec
ret
mov
xchg
cmpsl
jl
out
inc
inc
ret
loope
sub
rcrl
fwait
int
hlt
xstore-rng
cmpsl
ret
sahf
push
jl
and
push
and
cmp
lock
jmp
outsl
xchg
push
mov
rorb
jp
inc
dec
or
push
outsb
lret
mov
xchg
iret
mov
clc
mov
inc
repz
push
sbb
mov
push
addb
stc
dec
and
lods
loope
mov
addr16
sub
pop
aaa
sarl
add
jecxz
lahf
dec
in
xchg
dec
insb
shlb
xor
pop
int3
std
mov
fistpl
jp
loop
cli
cmc
in
pop
stc
cmp
in
fldl
mov
cmp
dec
call
jne
out
jl
or
int
in
fnstenv
sahf
insl
cli
repnz
cmpsb
pop
push
mov
push
hlt
cmpsb
add
movsb
and
adc
mov
sub
aas
cmp
mov
or
jmp
adc
into
push
pop
xor
push
shll
je
cwtl
mov
mov
dec
or
sbb
mov
xor
mov
or
mov
mov
jnp
jo
mov
push
cld
cmp
aas
outsb
loopne
mov
nop
stos
mov
or
jecxz
and
lcall
subb
leave
hlt
mov
int3
mov
mov
add
stos
sbb
loop
outsl
and
push
sbb
repnz
push
dec
jg
jns
scas
cltd
fwait
lret
lock
cmp
out
addr16
cld
adc
sbb
jnp
adc
mov
xchg
fcmovnu
inc
sbb
repnz
push
add
fidivl
scas
xchg
stc
add
cmpsl
push
xchg
push
jg
dec
push
push
jle
cmovle
dec
xor
mov
sbb
rorb
es
and
xor
popa
jge
sub
std
es
es
sub
rcll
loop
dec
leave
or
in
adc
xchg
shl
dec
add
pop
xchg
dec
loop
ljmp
add
nop
jo
sbb
dec
test
cmpsb
repz
inc
aaa
clc
jp
in
lea
dec
jnp
cmc
push
cwtl
sub
jl
js
fimuls
std
cld
xor
gs
adc
clc
cmp
insl
push
or
and
xchg
out
push
add
loopne
notl
loop
ds
add
add
gs
add
mov
loope
icebp
nop
and
lods
mov
mov
scas
test
addb
fstps
subb
sub
mov
ret
add
sub
jae
imul
js
adc
mov
xor
into
lret
adc
lret
test
test
jp
add
push
sub
hlt
push
inc
cmp
les
jecxz
fsubs
mov
mov
test
push
pusha
push
inc
aas
nop
push
adc
jb
rorl
icebp
cmp
push
and
into
mov
dec
jge
xchg
sub
repz
jns
fucom
dec
sub
xor
subl
fsts
cmp
push
and
push
pop
adc
outsl
testb
jae
or
gs
xchg
adc
les
jecxz
je
cltd
or
es
data16
cmp
sbb
and
test
jo
das
or
or
adc
sar
pop
jae
pop
sbb
dec
add
sub
sbb
ja
cs
xor
cmovns
push
lea
add
xchg
inc
test
rcl
inc
adc
loope
gs
xor
into
push
mov
adc
dec
rorb
fwait
mov
xchg
pop
popa
push
adc
pushf
push
jge
xchg
or
int3
js
xchg
and
popf
pop
test
xor
shll
add
adcl
std
dec
ficomps
movsb
int
push
nop
xor
les
push
stos
xchg
and
shll
cmp
cmp
rcll
imul
cmp
movsb
xor
insb
and
push
stc
sub
pop
and
hlt
dec
or
sbb
xor
das
je
xchg
jnp
adcb
hlt
movsb
pop
dec
js
pop
lahf
loope
cld
in
or
push
cli
xchg
sub
cmp
dec
aad
fbstp
hlt
and
jae
sbb
or
out
mov
sub
mov
in
outsl
and
pop
movsb
lret
mov
add
out
mov
loope
mov
stos
jle
push
int
dec
pop
out
addb
cmp
scas
xchg
or
or
or
mov
sbb
inc
mov
add
jne
lock
sbb
mov
sub
jg
je
jmp
push
jge
cmc
dec
fnstenv
ret
mov
mov
call
insl
adc
stc
cmpsb
push
outsb
rolb
inc
out
add
test
cmp
push
sub
and
xchg
test
test
add
loopne
cmc
xchg
lahf
and
mov
and
pop
loop
cmpsb
arpl
mov
pop
cmp
filds
xor
sahf
pushl
movsb
mov
das
sub
xchg
mov
stos
mov
sbb
cmpl
sub
push
testb
js
jbe
jbe
shrl
in
sbb
cmp
add
sbb
mov
in
ret
fmulp
xchg
dec
sub
add
aam
ret
mov
out
pushf
cmp
cmpsb
clc
adc
ss
insb
jmp
or
std
ret
jmp
sub
popf
or
xor
aam
jl
ja
scas
das
std
data16
inc
ljmp
test
sub
in
mov
mov
mov
sub
cmp
pop
and
pusha
sbb
ljmp
inc
in
pop
repz
js
or
and
mov
mov
clc
cmp
pop
ror
iret
and
xor
shl
in
mov
repz
in
mov
lcall
ljmp
pop
push
lods
icebp
testb
test
push
xchg
xor
mov
mov
movsl
fisubl
or
aas
push
add
mov
iret
es
add
mov
inc
pop
push
je
cmpb
sbb
aas
lcall
movsb
push
daa
and
in
jl
jae
cmc
outsb
mov
ret
scas
or
lret
je
ds
sbb
jns
jb
xchg
jb
aaa
add
cmp
xor
adc
mov
push
insb
add
dec
subb
mov
ret
or
mov
lahf
fstpt
mov
inc
pop
lret
repz
orl
jmp
ficomps
dec
je
adc
xchg
ljmp
cbtw
jg
mov
mov
mov
add
movsl
mov
add
jns
mov
mov
incl
mov
mov
push
lret
xchg
sbb
stc
lahf
ja
jmp
wrmsr
mov
in
shl
adc
jne
and
push
mov
sti
aam
dec
sub
sbb
xchg
adc
jp
leave
and
inc
imulb
in
ret
add
jbe
or
jns
int3
and
push
fldenv
mov
jmp
jb
scas
les
ljmp
dec
sbb
pushf
and
cmp
or
out
mov
or
push
mov
cmp
pop
sbb
ret
in
shl
stos
xor
jle
mov
jnp
inc
pop
in
rcll
popa
mov
adc
out
pop
insl
pop
pop
xchg
adc
imul
and
fs
mov
dec
inc
rorl
iret
sub
lock
mov
loopne
or
xchg
es
or
orl
mov
call
mov
stc
sahf
frstor
test
addr16
mov
mov
popa
jecxz
dec
or
mov
lea
mov
mov
pop
outsl
pop
test
jmp
ljmp
repz
shll
test
and
pusha
or
ret
clc
adc
pusha
test
cmp
push
or
mov
rcrl
scas
fdivp
les
jno
cmp
clc
mov
stos
sbb
mov
fcmovbe
insl
pop
insb
dec
cmp
subb
adc
inc
mov
leave
sub
lds
repnz
jno
mov
lds
jg
cmpsl
popf
std
and
in
je
dec
fildl
mov
hlt
je
fldcw
inc
fstpt
or
aas
pop
inc
adc
rcrb
test
pop
sarb
cmpsb
push
adc
xor
sarl
sbb
int3
xlat
les
movsl
push
in
jp
repnz
movsl
jnp
push
and
add
jmp
shlb
cli
mov
test
filds
or
repz
xchg
out
pop
sub
mov
xor
ja
ret
push
jns
pop
mov
mov
mov
sbb
inc
mov
and
outsl
lret
cmp
sti
sbb
imul
adc
testb
inc
lea
ja
pusha
dec
or
mov
inc
adc
hlt
xor
roll
push
inc
decl
add
xchg
xchg
mov
cltd
adc
mov
push
loop
out
add
mov
sub
scas
aad
imul
mov
outsb
sub
out
push
pop
xor
lods
fcomps
aam
bound
mov
sub
pop
rolb
adc
xor
lahf
repnz
test
inc
jb
js
cli
cld
mov
cld
leave
dec
push
push
jns
mov
push
sti
xor
sub
orl
cmp
inc
shr
dec
aaa
movsb
sub
popf
and
in
arpl
jecxz
push
int3
xchg
push
lods
sahf
aaa
mov
sbb
cltd
daa
adc
cs
add
fildll
shlb
aaa
ljmp
adc
outsl
dec
movsl
repz
add
mov
fiadds
imul
add
or
outsb
lahf
cmp
mov
lahf
jp
iret
add
je
loop
jae
push
iret
fwait
cmp
nop
lods
arpl
daa
sub
cltd
xlat
xchg
pop
imul
pop
ja
and
stos
mov
dec
aas
jne
aaa
adc
cmp
sbb
mov
push
dec
inc
lods
sbb
gs
divb
mov
stos
xchg
repnz
add
adc
je
imul
pop
push
insl
in
dec
cmc
negb
jbe
lahf
movsl
cmp
mov
push
fcoml
push
inc
popf
lret
xchg
lcall
xor
scas
mov
js
mov
iret
dec
xchg
adc
dec
out
repz
xor
stc
pop
cmpsl
adc
mov
jle
decl
repnz
add
mov
fdivp
push
rcrb
mull
out
popf
fwait
mov
mov
lods
addr16
popf
inc
push
mov
inc
or
mov
mov
push
mov
xchg
xchg
jg
scas
pushf
sub
and
int3
arpl
cmp
mov
jecxz
cmp
js
add
or
pop
cmpsb
push
mov
xchg
sbb
push
xchg
ja
insb
jb
stos
jmp
fadds
xor
outsl
jle
mov
dec
cmpsl
jb
mov
cmp
sub
mov
and
pop
pop
call
jns
sbb
gs
jb
out
cmp
jo
push
push
out
idiv
fisubrs
dec
sub
lea
test
pop
cmpsb
out
xchg
mov
dec
add
popf
fadd
pop
mov
cmp
nop
lahf
leave
xchg
shlb
hlt
and
scas
rcl
cmp
sbb
shlb
jg
inc
adc
jle
push
push
stos
sbb
pop
dec
dec
push
xchg
pop
push
jns
fwait
adc
fcoms
out
xchg
or
push
je
jbe
in
cmp
mov
les
mov
movsl
imul
xchg
ds
jp
fidivl
xor
je
rorb
lods
lret
in
add
push
ljmp
cld
inc
sub
xor
hlt
cmp
xchg
add
push
xor
icebp
sub
dec
sub
loopne
lods
mov
ljmp
inc
cmp
jbe
call
addr16
xchg
xchg
and
dec
lods
pop
push
cmpb
out
frstpm(287
pop
scas
cld
push
lods
cmp
lret
std
fisttpll
shlb
push
out
xor
ja
out
das
inc
movsb
pop
mov
xor
aaa
add
and
jne
add
add
pandn
sti
sbb
jmp
mov
cld
aam
push
inc
jge
adc
test
jle
fs
repnz
cld
push
hlt
cmp
sbb
jns
les
ds
bound
dec
or
stos
and
out
enter
inc
and
pop
hlt
call
out
push
mov
test
mov
sub
dec
or
and
lcall
push
pusha
and
inc
lret
out
fwait
sub
jge
add
dec
fucomip
icebp
lds
jp
xchg
inc
inc
push
nop
jno
outsl
xor
ret
aas
add
das
stc
addb
fiadds
adc
in
aam
aam
xchg
cmp
nop
and
lret
pop
mov
and
clc
push
mov
in
adc
jae
cmp
jg
nop
lods
dec
push
dec
aam
adc
aam
dec
ja
push
and
sahf
das
push
jo
xlat
mov
rorl
pusha
jo
popa
aam
lret
lea
inc
jbe
ja
lds
outsb
xchg
push
mov
dec
es
add
sub
sub
mov
push
push
les
xor
insb
xchg
mov
xchg
shrl
inc
dec
mov
mov
push
jl
pusha
nop
js
sub
adc
movsb
jg
scas
mov
imul
xchg
mov
pop
aad
pop
sbb
mov
je
clc
mov
shrl
ret
add
jb
push
inc
popa
lcall
mov
pop
in
shll
xor
mov
jne
jae
dec
inc
in
cmp
cmp
movsb
in
or
inc
or
mov
xchg
shrl
test
sub
sahf
adc
jge
push
mov
xor
add
nop
xor
and
mov
std
loope
jne
push
es
jb
int
test
into
mov
jecxz
cmp
mov
scas
jmp
inc
mov
dec
fdivrs
xor
xchg
mov
jb
push
aas
mov
push
cmp
stc
jno
pop
push
jne
arpl
bndstx
xor
les
das
push
lahf
xchg
and
push
fisttpl
pop
pop
push
add
mov
cmp
sbb
and
sarb
movsb
jns
insl
daa
dec
mov
sbb
push
je
les
sub
add
jmp
fwait
jp
mov
loopne
orb
loope
mov
pop
jno
jno
int3
movsb
jecxz
add
mov
popf
sub
outsl
js
imul
dec
ret
dec
mov
insl
mov
jnp
dec
aas
ds
mov
in
movsb
mov
ret
push
faddp
enter
jns
nop
add
pushf
aad
pop
lahf
xor
ss
data16
les
add
fst
sub
mov
and
sub
jecxz
sub
mov
inc
into
fmull
lret
xchg
daa
push
push
mov
mov
test
in
sub
out
cltd
adcb
icebp
aaa
push
dec
cmp
insb
jecxz
push
xor
out
lods
mov
pusha
aad
dec
sub
cmpsb
dec
idivb
mov
add
xlat
call
jb
dec
inc
arpl
out
push
xchg
cmp
mov
push
and
dec
dec
ja
mov
push
cs
mov
test
adc
or
cmpsb
pop
mov
push
cmp
push
inc
stos
js
xor
ret
add
int
cwtd
movsb
xchg
add
lods
inc
add
sbb
lock
fidivrl
dec
mov
push
fs
adc
fildl
or
inc
popa
inc
int
cld
xor
add
repnz
subl
ds
std
mov
mov
push
test
nop
jecxz
sub
bound
inc
repz
mov
shrb
sub
sub
push
repnz
pop
loopne
mov
pop
or
jns
inc
loopne
xchg
clc
and
or
and
dec
mov
mov
or
pusha
ret
push
cli
sbb
push
fcoms
pop
into
push
xlat
fcom
loop
cmpsb
push
adc
and
and
gs
loopne
or
mov
xlat
dec
mov
sub
xor
xor
mov
pop
lds
cmc
fistps
fcompl
adc
inc
int3
out
xchg
cmpsb
mov
or
mov
shlb
dec
sbb
push
iret
repz
pop
dec
push
fcmovnu
fwait
push
sahf
insl
sub
push
loopne
icebp
imulb
or
mov
xchg
cltd
mov
mov
cli
fldcw
xchg
adc
or
dec
pop
loope
mov
mov
jne
jmp
jmp
cwtl
adc
call
enter
push
fimuls
mov
jl
jp
xchg
mov
int3
mov
sub
mov
aad
subl
outsl
sub
xor
shll
mov
pop
ret
add
cmp
enter
mov
ss
enter
loope
sbb
dec
mov
ljmp
push
push
or
cld
cmp
jb
and
and
call
adc
xor
pop
aad
push
mov
dec
mov
hlt
and
daa
or
inc
nop
cmpsb
jns
es
push
je
add
cmp
jnp
mov
je
xor
out
mov
filds
xchg
nop
inc
push
mov
sbb
cmp
scas
inc
cmc
add
ret
repnz
xchg
je
xor
adc
pop
mov
mov
dec
enter
out
pop
adcl
into
jo
cmpsb
mull
cli
push
xchg
stc
mov
sbb
jmp
mov
or
jg
sbb
adc
and
jo
mov
mov
pop
fwait
bound
mov
mov
adc
pop
in
imul
push
mov
outsl
mov
jbe
mov
sub
lock
call
hlt
dec
movsl
fsub
sarl
pop
in
or
repnz
add
daa
cmp
jnp
dec
mov
call
cmp
jecxz
xlat
xchg
pushl
es
lock
add
pop
mov
push
shlb
cmp
fwait
jle
popf
mov
sbb
lock
test
mov
hlt
int
imul
jecxz
insl
std
push
subb
imul
fcomi
jmp
and
mov
push
push
jae
icebp
xor
insb
add
mov
jbe
arpl
mov
xchg
faddp
lock
or
or
xor
jg
clc
mov
add
std
xor
inc
inc
cmp
addl
loope
push
in
mov
push
pop
jecxz
sbb
inc
cltd
pop
in
lret
or
push
data16
stos
sbb
mov
icebp
out
in
xchg
stc
push
arpl
adc
test
cmp
aam
lods
add
sbb
mov
pop
adc
daa
xchg
dec
adc
pop
push
rclb
cmpsl
aad
mov
out
aam
sub
push
jecxz
and
scas
aam
repz
loope
fildl
xor
adc
mov
sahf
addr16
xchg
pop
int
daa
pop
cmc
popf
fnsave
arpl
cmp
andl
cmpsb
push
cmc
fwait
shll
in
xor
lods
pop
add
jne
mov
xor
xchg
out
in
pop
and
jne
fmul
clc
mov
cltd
imulb
lock
rcrl
daa
fistl
push
sarl
rclb
mov
out
pop
inc
out
ss
pop
fcomip
sar
mov
negb
dec
lahf
xchg
imul
push
jecxz
jmp
jp
test
ss
mov
mov
les
iret
out
out
shrb
jne
cwtd
mov
xchg
jp
and
pop
push
xchg
aad
in
mov
pop
lock
push
imul
mov
fldl
fcoml
cmpsb
movb
jo
std
jnp
inc
push
mov
addb
or
jne
loop
xchg
xchg
cmc
push
mov
cltd
lret
nop
pop
push
jo
add
and
fldl
inc
testl
adc
cmp
jecxz
xor
lods
add
sub
add
dec
sti
loop
push
popa
mov
sub
loope
inc
subl
add
mov
pop
sahf
data16
fsubl
fldcw
pop
out
mulb
test
idivb
into
daa
mov
imul
std
xchg
in
mov
stc
inc
or
adc
push
andb
inc
sub
das
pop
jbe
test
fildll
pushl
aad
decb
movsl
inc
xchg
xchg
mov
sbb
and
rcrl
push
and
inc
push
pushf
das
clc
sbb
daa
xor
push
jb
outsb
sbb
sbb
ds
mov
insb
sbb
jge
es
fdiv
std
sqrtps
lock
shlb
lds
mov
cmp
loop
sub
popf
stos
mov
dec
dec
xchg
mov
cmovge
and
push
or
jecxz
testb
cs
add
cmp
push
dec
call
js
cwtl
loope
add
js
and
xlat
je
iret
inc
cwtl
pop
lea
jnp
loope
push
pop
cltd
cmp
test
movsl
xchg
aad
push
leave
and
or
mov
int3
or
jp
scas
pop
cmp
mov
movsl
sub
xchg
xchg
cli
sub
mov
stc
inc
outsl
add
hlt
push
ljmp
out
xor
sub
mov
push
lahf
test
outsl
pusha
jmp
jno
push
mov
call
and
mov
and
pop
xor
lcall
repnz
pop
xchg
call
enter
xchg
fwait
cmp
in
dec
jnp
idivl
test
xor
push
mov
hlt
hlt
int3
mov
lods
scas
loop
and
pop
dec
mov
inc
mov
cmpsl
stc
jle
cltd
nop
fmull
mov
push
push
push
hlt
adc
aas
js
test
or
scas
sbb
add
repz
cmp
cmp
sbb
test
inc
imul
xchg
mulb
fdivrl
push
pop
mov
adc
test
aad
mov
popf
add
mov
mov
fists
movsl
mov
sub
mov
fistps
adc
push
or
dec
test
pop
adc
pop
stos
mov
shrb
jo
insb
mov
jp
repz
push
std
fiaddl
imul
jge
pop
fwait
jnp
push
or
rcrl
fwait
mov
outsl
mov
jo
add
push
sti
mov
mov
pop
push
pop
inc
inc
adc
dec
loop
movsl
xchg
fistpll
xor
aad
pusha
jmp
dec
mov
cld
jne
shll
mov
dec
outsl
jecxz
sbb
mov
jmp
push
repz
dec
xor
cli
cmp
loopne
shlb
dec
cltd
js
mov
pop
outsb
lret
int
mov
dec
push
scas
sbb
pop
mov
fstpl
pop
pop
jno
cmp
rorb
iret
rolb
push
les
sbb
adc
pop
sbb
mov
push
stos
test
sub
loopne
fwait
repz
test
or
out
scas
out
fwait
sbb
xchg
out
enter
pop
out
std
pop
je
inc
sub
push
jl
imul
inc
out
lds
lahf
or
lahf
pop
cmp
mov
addr16
push
test
lods
lcall
jle
jmp
jle
lea
out
cmp
jo
xor
leave
daa
test
lock
ljmp
pop
dec
pop
popf
daa
dec
call
mov
adc
xor
rcrl
loopne
insl
inc
loopne
or
push
lret
adc
mov
push
hlt
mov
lods
rcrb
cmpl
stos
fimuls
in
add
and
xchg
out
or
sahf
outsl
xchg
mov
inc
add
mov
scas
xchg
dec
cmp
or
mov
das
pop
lcall
loopne
or
fst
push
mov
gs
lods
les
xchg
in
mov
push
arpl
sbb
or
out
or
out
sub
ja
pop
jo
dec
sbb
inc
cld
sub
or
scas
push
dec
sub
push
mov
push
xor
lret
pop
jnp
lods
loopne
jmp
scas
jg
jp
addb
aam
jae
int
inc
ds
nop
sub
jb
cli
inc
mov
pop
xchg
lods
movsb
ret
sub
lea
repz
popf
movsl
push
test
leave
and
cmp
mov
inc
lea
sar
inc
push
cwtl
insl
mov
push
sub
lock
pop
jmp
xchg
je
popa
dec
pop
add
mov
das
mov
sbb
push
and
js
jg
in
cmc
sub
adcb
adc
mov
mov
dec
cmp
pop
mov
pop
add
and
dec
cmp
and
pop
mov
sbb
imul
js
or
sbb
xor
je
das
inc
aaa
or
loop
imul
add
cltd
mov
or
adcl
jl
cltd
les
add
jp
test
scas
sub
repnz
ljmp
sti
in
mov
ficomps
xor
in
xor
popf
push
xchg
sub
aaa
inc
cltd
mov
fimuls
xchg
cmp
movsl
push
bnd
push
bound
pusha
popf
hlt
loope
fidivl
xchg
mov
leave
imul
cs
xchg
xchg
mov
in
dec
pusha
add
push
add
mov
mov
pop
jg
inc
scas
push
lds
imul
jbe
cmp
pusha
outsl
xor
dec
and
mov
jo
test
cmp
arpl
dec
mov
xchg
push
pop
xor
push
in
cmp
cmpsb
aas
sbb
xchg
popf
inc
gs
mov
jbe
clc
adc
jg
jnp
pop
push
cmp
push
push
xchg
filds
ret
ret
xchg
add
push
push
sub
lds
roll
dec
fsubrp
pop
jmp
push
ljmp
add
inc
add
mov
into
xchg
ljmp
xor
aas
and
leave
xchg
mov
and
xchg
sbbb
test
cltd
adc
lods
jp
lret
setbe
int3
cltd
mov
data16
rcl
js
mov
xchg
dec
daa
inc
jl
sbb
in
out
cmp
cmp
movsl
mov
decb
stos
pop
push
adc
sub
or
outsb
adc
call
push
push
sbb
lock
cld
xchg
mov
scas
pop
jmp
mov
sahf
test
sbb
andb
sub
fsubrl
pop
int
sub
addl
push
inc
jb
or
test
pop
out
scas
add
lcall
push
repz
or
cld
pop
xor
aas
adc
leave
cmp
jg
and
jg
xor
repnz
mov
in
cmpl
imul
call
and
out
lret
ljmp
cmp
jge,pn
aaa
cmp
into
and
xchg
cltd
mov
or
xor
pushw
ss
movsb
cmpl
sbb
and
cmp
lcall
hlt
lods
pop
mov
xor
xlat
cmp
std
pop
rorb
icebp
daa
movsl
cmpsb
popa
and
jg
ljmp
jge
test
sbb
fwait
les
jno
mov
fadd
sub
shrb
add
inc
lea
aas
jbe
mov
push
pop
push
imul
iret
dec
stos
push
aam
jge
push
mov
inc
mov
loop
fldenv
out
push
add
push
cmp
rorl
cltd
fnstenv
push
sub
stos
sbb
pop
imul
scas
lods
sarl
sbb
test
push
add
jno
dec
adcb
lock
fcompl
test
xchg
das
push
inc
and
hlt
test
mov
xchg
popa
ja
add
and
mov
ficoml
cltd
test
dec
mov
cmp
test
xor
fwait
ret
sbb
movsl
push
mov
pop
sti
lods
ss
ljmp
jno
mov
push
inc
test
int3
rcll
jo
jno
inc
cmpsl
es
shrb
adc
jle
aas
mov
add
ljmp
es
fcoml
xchg
adc
dec
stos
jbe
scas
lds
xor
jns
sbb
xchg
subl
int
sahf
mov
or
dec
mov
adc
insb
jl
sahf
mov
xchg
testb
jecxz
push
or
adc
sbb
popa
repnz
leave
ret
mov
stos
mov
movsl
jp
lock
jl
rcrl
push
pushf
mov
jmp
flds
stos
or
cmpsl
inc
jecxz
push
sub
jmp
cmp
mov
pushf
test
cmp
or
lcall
pop
jmp
and
mov
sarl
imul
sarb
xchg
sahf
mov
pop
daa
pop
out
les
ficomps
xor
cmp
ret
lcall
jg
jne
push
jns
jle
xor
ljmp
inc
xchg
mov
fwait
fwait
test
pop
xchg
dec
mov
push
or
adc
fiaddl
test
out
cwtl
dec
mov
jns
aaa
fstp
dec
aaa
jge
cmp
add
es
xchg
rcrb
sub
cwtl
mov
ret
and
in
jno
lahf
cmc
xchg
sbb
pushf
and
mov
cltd
flds
sub
cmp
out
and
mov
outsb
cltd
xchg
jecxz
es
in
cmp
shll
sub
lcall
sahf
shlb
arpl
cmp
jo
and
mov
jnp
pop
ja
dec
dec
xchg
adc
sbb
out
push
out
lret
add
andl
and
inc
inc
xchg
mov
mov
cmpsl
sub
cltd
push
mov
sbb
leave
aam
jle
cli
cltd
pop
or
xchg
push
jmp
ret
jg
xlat
int3
cld
into
mov
cmpsb
pop
bound
out
fisubs
xchg
and
loopw
fstpt
pushf
pop
sub
aad
add
inc
movsl
std
ret
xchg
pop
fisubrl
data16
or
inc
cmp
xchg
popa
sub
push
test
stc
and
mov
add
cmp
mov
lret
sarl
in
and
mov
push
mov
mov
lods
pop
push
xchg
rcll
dec
cmp
hlt
jle
stc
add
adc
aam
xchg
sbb
movsb
gs
adc
xchg
mov
pusha
imul
fwait
bound
dec
jecxz
fbld
imul
or
rcrb
pushf
dec
mov
jno
sbb
cld
loope
cmp
pop
fcmovnu
shrl
cmp
mov
pop
push
mov
int3
imul
mov
sti
mov
adc
jl
call
push
les
popf
imul
in
dec
leave
popa
lahf
sbbb
inc
push
pop
ds
or
push
adc
jmp
stos
jmp
pusha
fisubs
ret
cmp
mov
xor
pop
or
repz
adc
movntps
sub
push
xchg
mov
dec
mov
repz
sbb
fists
adc
push
in
add
pushf
jmp
aam
push
cli
sub
cltd
push
jne
mov
adc
sub
sub
push
add
sahf
xchg
notl
dec
sahf
popf
jo
cmpl
lret
jecxz
pusha
test
xchg
cmpsl
insb
jp
lahf
add
xlat
dec
cmp
insb
sbb
lods
in
xchg
popa
rclw
mov
push
int3
lods
mov
mov
dec
aaa
xchg
mov
fnstcw
rcrb
mov
mov
inc
mov
mov
jecxz
jnp
xchg
aad
iret
mov
out
push
lahf
cs
lret
push
icebp
clc
mov
sub
bound
ss
in
jp
shrb
sub
std
aaa
ret
pop
pop
lds
mov
mov
call
mov
in
cmp
das
xchg
sahf
daa
mov
pop
mov
pop
shll
outsb
js
outsl
fwait
mov
jmp
adc
mov
popf
mov
hlt
or
mov
inc
mov
push
test
into
jle
push
bswap
in
sub
stos
addb
add
movsb
xor
shll
dec
inc
lret
mov
push
dec
push
lcall
mov
fisubrs
ret
popf
sub
adc
ljmp
dec
insb
ret
inc
test
mov
push
jb
mov
jno
push
dec
jle
stos
cmp
mov
pop
into
push
push
lcall
cmpsb
mov
dec
fucomi
mov
jecxz
rcll
arpl
sub
cltd
xor
sub
push
mov
into
cmp
mov
stos
sub
jmp
add
in
int3
enterw
nop
and
mov
fstl
jns
nop
mov
insl
xor
push
xor
pop
test
cmc
xchg
int3
clc
imul
xlat
jnp
xorl
add
adc
daa
aad
xchg
mov
mov
sub
jp
xchg
gs
and
lds
xchg
in
roll
shlb
mov
jne
adc
mov
and
mov
jmp
daa
test
lret
mov
movsb
pop
pop
movsl
xchg
cmp
or
push
xlat
and
lret
and
rolb
cmpl
xchg
mov
and
mov
aas
leave
push
xlat
bound
mov
dec
les
rorl
test
mov
negb
sub
and
push
lahf
aaa
test
add
rorl
jmp
popa
popa
and
dec
inc
adc
xchg
or
stc
mov
test
push
jae
cwtl
ret
xchg
xor
lods
test
pop
fwait
pop
dec
movsb
stos
adc
sub
mov
jo
call
je
lods
lea
sahf
mov
xchg
scas
loop
bnd
or
in
out
lds
pop
xlat
sbb
sahf
sbb
int
jnp
jno
xchg
in
xor
in
mov
inc
adc
adc
imul
sub
sub
jmp
jp
mov
js
rorb
fwait
sbb
push
lret
call
add
sub
call
dec
push
scas
das
push
jo
imul
adc
in
push
xchg
push
or
cltd
and
fldcw
pusha
inc
hlt
lock
mov
inc
ficompl
aam
jl
aad
cmp
enter
aad
mov
mov
and
pop
push
sub
test
push
xlat
mov
mov
ret
pop
mov
cmp
test
mov
ror
xchg
mov
stos
mov
dec
inc
mov
lahf
inc
orb
mov
shrb
enter
arpl
mov
jge
data16
adc
jl
xlat
icebp
dec
aad
xchg
out
sub
pop
jmp
xchg
xor
repnz
jecxz
mov
mov
xchg
push
pminub
pop
and
fs
mov
js
mov
fs
rcr
pop
sbb
adc
xor
fs
dec
out
les
and
xlat
mov
lret
adc
dec
les
mov
mov
xorb
add
mov
outsl
mov
dec
int3
lcall
sub
mov
jmp
pop
sbb
inc
movsb
adc
inc
out
cmc
and
std
test
sti
lods
pop
inc
sbb
add
sub
or
lret
adc
pop
push
jno
xor
pop
icebp
movsb
inc
std
test
rcrl
push
aas
or
jmp
test
arpl
push
lahf
add
add
in
bound
lods
cmp
adc
xchg
cmp
ds
bound
xor
push
movsb
pop
adc
jl
inc
dec
iret
xor
xor
push
pop
daa
aad
adc
jp
sub
sub
enter
pop
xchg
dec
ja
and
adc
jg
enter
jb
mov
in
mov
loope
iret
xchg
or
push
jno
sub
sahf
adc
adc
push
xorb
xchg
shlb
push
out
test
cltd
mov
sub
mov
jmp
sbb
pusha
cmp
aas
add
lods
cltd
jae
pop
fisubrl
jmp
ljmp
pop
mov
pusha
insb
or
movsb
cmpsb
push
inc
and
int3
sbb
add
leave
ds
test
dec
das
xchg
jg
lcall
push
test
jno
jb
and
jmp
jg
xchg
pop
lahf
push
xchg
addr16
stos
in
add
adc
and
fwait
push
flds
pop
test
frndint
sbb
rorb
idivl
loope
cmpsl
dec
je
iret
imul
insb
xor
push
mov
aas
dec
or
in
jo
mull
ret
jle
xchg
or
test
mov
lcall
lds
scas
bswap
xchg
dec
loop
outsb
jp
add
mov
push
pop
aam
push
pop
xlat
push
inc
push
mov
ss
sti
cmc
and
jp
jae
mov
imul
xor
das
and
xlat
clc
int
or
out
adc
mov
dec
fstl
push
xchg
sahf
xor
mov
jnp
icebp
mov
insb
dec
test
aad
cmp
pop
jne
mov
stos
cmp
pop
pop
ret
in
loop
push
pop
mov
rorl
bound
pop
cmp
mov
mov
lret
insb
in
xor
cli
jnp
jno
push
lret
out
add
sub
mov
adc
inc
aad
imul
dec
mov
fcmovnb
clc
push
add
jo
movsb
pop
xchg
xor
ror
lahf
fisubrl
inc
pop
and
and
mov
ds
adc
sub
in
enter
mov
pop
daa
or
test
std
sti
insl
jns
std
cwtl
fisubs
jle
inc
int3
xor
ja
mov
loope
sub
push
sbb
pop
xor
cwtl
scas
mov
mov
mov
xor
idivl
jbe
xchg
std
xchg
ficompl
mov
push
mov
in
xor
fs
mov
in
pop
lods
add
sbb
pop
jns
mov
imul
dec
jp
and
push
push
mov
add
std
js
js
movsb
leave
add
dec
cs
into
pusha
xor
test
inc
imul
jno
cld
sub
bound
es
lcall
and
xor
clc
sbb
addr16
mov
jnp
es
push
cmp
jnp
mov
mov
adc
pop
pop
lds
mov
add
xor
sbb
pop
cmp
jbe
scas
xchg
mov
test
movsl
push
jns
inc
cmp
ffree
pop
out
sub
pop
pop
call
popa
push
leave
cmp
scas
jmp
xor
inc
xchg
xchg
sahf
shll
rorb
push
mov
dec
arpl
out
lahf
jb
jo
sbb
adc
xchg
and
daa
pop
mov
xor
loopne
insl
stos
test
mov
xchg
or
sub
ret
jl
dec
cmp
xorl
mov
jns
jae
and
jecxz
rclb
in
dec
or
mov
or
xchg
jl
test
fldenv
stos
add
dec
sub
lods
pop
mov
jg
fistps
pop
notl
inc
ja
icebp
push
push
jnp
out
shll
shrb
fstl
push
arpl
cli
lcall
inc
jmp
mov
fcomi
arpl
aad
jo
xorl
into
xor
inc
mov
cmp
fsubp
jl
dec
dec
or
and
pushf
jbe
and
xchg
in
dec
push
test
ja
push
int
mov
leave
imul
cmc
xchg
pusha
test
jecxz
js
mov
testb
mov
mov
inc
imul
push
popf
mov
scas
loopne
add
fwait
inc
and
loope
fidivrs
pop
xchg
push
test
imul
or
mov
out
adc
shrl
cmp
fnstcw
pop
arpl
jl
test
adc
push
or
pop
and
xchg
ret
lcall
xor
icebp
mov
cmp
test
ss
js
out
xlat
jg
xchg
jp
sbb
mov
iret
movsb
insb
cltd
outsb
addr16
cmpsb
pop
imul
fists
lret
xchg
icebp
inc
sub
in
aam
mov
cmp
loop
inc
inc
mov
sub
cmp
mov
jo
inc
addl
mov
dec
lds
mov
cli
fs
loopne
mov
in
repz
jb
fistps
xchg
sahf
push
fsubl
std
fsubrs
int
or
mov
movl
repz
cs
andb
and
or
sbb
and
push
stos
das
ss
lea
into
xchg
out
lcall
jmp
mov
inc
jb
mov
xor
mov
rolb
or
mov
mov
aas
dec
pop
lock
cmp
sbb
jg
popf
jmp
sti
bound
and
stc
jmp
jle
xorl
push
sbb
cmp
les
push
gs
jbe
ljmp
fiaddl
xchg
jg
mov
and
inc
cwtl
jns
lahf
inc
std
dec
leave
je
rorb
mov
movl
adc
xchg
popa
std
repnz
insl
inc
push
in
test
mov
loopne
and
clc
mov
adc
nop
fwait
loop
sub
in
pushf
rcrl
loop
mov
das
arpl
push
iret
lock
mov
sbb
aad
test
xor
ret
adc
scas
fcmovne
in
xchg
jne
lds
pop
bound
or
ss
aas
das
inc
jg
cmp
mov
mov
jnp
push
cltd
jnp
push
sbb
std
mov
jle
and
fwait
inc
aam
pop
or
or
mov
pop
xchg
mov
push
jnp
imull
jb
jmp
lcall
sahf
xor
int
pop
flds
cmpsl
rclb
mov
fld
add
sub
aam
jb
std
clc
adc
push
shr
jmp
mov
repz
mov
mov
jmp
dec
xchg
inc
and
jl
mov
fstpl
das
or
jns
ret
aad
add
js
roll
mov
pop
push
and
dec
js
pop
pop
lret
loop
add
push
mov
js
xor
mov
sahf
jo
ljmp
into
js
cmpsl
add
subb
jmp
imul
decl
les
cmpsb
mov
hlt
lcall
adc
dec
mov
into
popa
inc
pop
nop
sub
push
xchg
ret
xor
mov
add
nop
pop
fisubs
in
cmpsb
push
jp
frstor
pop
xchg
popa
mov
push
pop
rcrb
sarb
pop
add
fildll
pop
inc
jns
adc
jmp
and
loopne
or
xor
aad
into
lds
xchg
add
ss
push
jae
mov
and
sbb
ficoml
inc
leave
inc
push
jmp
scas
pusha
mov
or
stos
jnp
roll
insb
jle
aaa
loopne
rcl
jmp
in
mov
imul
aaa
and
incl
sbb
add
int3
lods
insb
lds
inc
aad
sti
dec
enter
iret
push
cmc
pop
repnz
cmpsb
push
sub
rorb
pop
mov
sub
lahf
sbb
xor
dec
mov
inc
scas
push
rcll
shl
aaa
lcall
int3
jno
in
or
jp
add
mov
mov
jmp
into
jl
dec
mov
and
mov
push
daa
mov
xor
sti
adc
jl
js
mov
sbb
aaa
mov
test
test
inc
jne
fiadds
mov
pusha
jb
cs
sub
fiadds
icebp
fistl
ret
iret
add
ljmp
xchg
or
ja
mov
in
dec
mov
test
pop
ss
lcall
enter
call
jecxz
xchg
jge
jge
ds
insb
mov
out
mov
inc
jl
mov
jno
mov
out
inc
sub
sbb
es
insb
jo
out
cltd
fldt
pushf
scas
sbb
daa
out
mov
dec
sbb
in
or
subl
pop
mov
lock
inc
sub
or
jge
or
cli
sub
test
sahf
push
cwtl
stos
lcall
or
jg
adc
mov
in
sub
lods
test
xchg
divl
cltd
lock
cmpxchg
test
cmp
addb
sub
sbb
in
jmp
jge
stc
pop
cld
cmp
cli
and
add
adc
jbe
jmp
mov
sbb
mov
pop
bound
jbe
lret
arpl
sub
scas
cltd
outsl
push
ret
test
inc
notb
adc
pop
dec
out
sbb
xor
lds
adcl
xlat
out
shrb
adc
xchg
adc
mulb
into
sub
mov
hlt
lret
inc
psubsb
mov
bound
add
jl
arpl
lahf
cs
push
add
out
pop
dec
mov
mov
leave
push
xchg
mov
mov
mov
jno
mov
in
mov
and
aad
test
sub
mov
insb
mov
int3
add
xlat
push
std
cwtl
xor
xchg
loope
stos
into
sahf
jl
ret
pop
cli
std
cmpsb
sub
arpl
cmpb
loope
and
push
fcoms
xor
inc
or
into
in
xchg
mov
mov
cmpsl
and
mov
pop
lods
dec
orb
cmp
xlat
cmp
xor
jmp
jbe
jns
loope
add
out
rcrl
aaa
gs
mov
sahf
dec
test
mov
mov
jns
or
cmp
jle
std
push
or
mov
in
mov
stos
fistpll
icebp
xchg
or
pop
shl
popf
stc
out
jge
push
lods
rcll
sub
clc
subb
adc
mulb
imul
lods
jbe
es
mov
cltd
xor
scas
sub
inc
imul
test
iret
fs
mov
mov
loopne
sbb
mov
sarb
movsb
pop
ljmp
outsb
clc
mov
pushf
mov
dec
mov
stos
pop
into
jne
mov
jnp
jg
ss
stos
jmp
xor
and
in
lahf
mov
mov
addl
push
mov
addr16
add
rcl
popf
aaa
or
outsl
pop
xchg
daa
fcomip
mov
cmp
popa
test
pop
lods
ret
fbld
fisubrs
and
in
cmp
mov
cmc
fnclex
mov
inc
ds
scas
test
xlat
in
mov
pop
sbb
lea
xorl
push
mov
push
adc
scas
mov
adc
cwtl
je
jno
xchg
fcom
mov
mov
dec
movsl
mov
cld
cmp
sub
sub
xlat
inc
xchg
mov
outsb
xorb
add
loopne
out
mov
xchg
mov
out
push
imul
dec
sbb
imul
mov
pusha
and
jecxz
jge
cld
cwtl
test
movsb
in
cmpsb
test
testl
je
push
mov
or
je
jp
pop
daa
adc
out
clc
mov
lea
enter
popa
or
xchg
and
cmp
mov
out
iret
or
adc
cmp
scas
mov
xchg
jl
cmp
hlt
mov
mov
add
ljmp
lock
xchg
cmp
clc
int3
dec
lods
add
es
inc
ficoml
mov
xor
or
inc
and
stc
push
adc
cmpsl
cmc
mov
out
std
sahf
arpl
iret
test
aaa
loope
dec
test
in
bound
adcb
sahf
cmp
ss
jg
sahf
cmc
arpl
pop
pop
xor
je
push
sub
push
test
cld
test
adc
jmp
outsl
inc
aad
jg
adc
aad
idiv
insb
sbb
ret
xor
outsb
sbb
test
xor
lahf
sub
cld
lahf
mov
pop
stos
and
pop
sub
addr16
jl
add
or
lret
cmp
xlat
aad
and
in
clc
mov
aad
cmp
sti
shll
in
mov
mov
ja
mov
out
xchg
cli
jl
and
xor
cmp
std
popf
adc
cmc
sub
loop
loop
sub
adc
pushf
push
mov
mov
adc
inc
mov
mov
sbb
roll
dec
fidivl
je
and
clc
jg
xor
or
sbb
stc
leave
pop
pop
add
outsl
mov
pop
rcrb
xor
mov
or
mov
lock
sub
push
mov
insb
or
mov
cltd
cli
jns
sub
es
mov
cmc
test
dec
movsl
mov
jae
dec
push
pop
into
inc
popf
in
dec
mov
shrl
pop
popw
push
adc
clc
mov
popa
imulb
leave
inc
imul
rdpmc
cli
push
mov
xchg
and
inc
test
loopne
add
jp
dec
lods
mov
imul
sbb
sahf
bsf
jnp
aas
mov
pop
jge
out
xchg
arpl
jl
inc
repz
jg
push
out
sbb
and
sbb
jmp
test
imul
punpcklbw
push
jle
pop
mov
dec
mov
sbb
cmpsl
and
cld
push
cltd
scas
adc
fstps
adc
push
ss
xchg
xchg
jne
xchg
fwait
int3
pop
jmp
lcall
inc
mov
pop
push
lods
divl
jecxz
test
add
bound
mov
mov
xchg
rol
cld
cmpsb
imul
sub
gs
insb
push
push
cmpsb
pusha
sub
mov
lret
and
push
cmpl
cmp
pop
xchg
or
cmc
ficoml
jge
xchg
xchg
subl
inc
dec
xor
into
loopne
test
stc
pushf
sub
xor
out
mov
sub
aam
or
cmp
jp
mov
paddw
jbe
popa
or
cmp
or
sbb
aaa
xchg
xchg
or
jmp
cltd
and
dec
icebp
sub
popf
cli
dec
add
out
jo
jp
xor
mov
cli
call
cmp
cmp
aaa
inc
cli
adc
push
mov
inc
xchg
pop
clc
stc
push
inc
in
gs
movsl
cmc
ret
cwtl
sti
inc
addr16
sbb
jae
cmc
int
and
mov
lret
loopne
test
into
jp
insl
loop
pop
subl
push
jmp
sub
in
xor
pop
or
push
jmp
pop
nop
dec
adc
bound
push
adc
sarl
out
in
pop
adc
sti
cmpsl
mov
jmp
lea
movsl
sbbb
inc
in
nop
adc
push
pop
pop
shrl
movsl
xor
loope
enter
dec
inc
push
inc
pop
jnp
in
dec
leave
mov
jle
and
push
xor
cmpsb
cmpsb
dec
lods
adc
fdivrs
ret
jae
test
xor
outsl
outsl
inc
push
and
out
push
faddl
mov
divl
popf
adc
or
mov
and
fcomi
stc
push
lock
xor
mov
jno
adc
pop
and
std
ret
outsb
leave
mov
jne
sbb
out
loope
pop
xor
push
cmp
fcompl
in
ret
rol
jge
xchg
add
imul
dec
jnp
outsb
mov
fwait
xchg
mov
inc
mov
sbb
cmc
sahf
inc
sbb
cmpsl
test
lahf
cmp
pop
fisttpl
jp
mov
lahf
sti
cli
and
cmp
inc
cld
pushl
lcall
int3
dec
cltd
lock
xor
xor
ret
in
push
pop
pop
outsb
stos
stos
insw
cli
ds
insb
cmp
andb
push
ficompl
insl
shl
sbb
sbb
and
xor
repnz
fwait
dec
add
mov
addb
lret
inc
push
and
addr16
shrl
notb
andb
ret
cmpsl
xchg
in
mov
cmpsb
repnz
push
out
adc
out
loopne
inc
mov
loop,pt
insl
and
rcrl
add
jnp
ficoms
fldenv
daa
pop
and
xchg
dec
inc
ljmp
sub
cmp
jecxz
subb
mov
jnp
aam
xchg
mull
imul
mov
mov
mov
fisubrl
adc
popa
dec
add
xor
std
shrb
mov
icebp
cld
daa
push
adc
mov
inc
les
stos
xor
cwtl
std
and
and
mov
dec
xorb
test
pop
sarb
je
cmc
jmp
inc
push
add
and
pop
in
sub
jle
ficompl
test
add
pusha
cltd
push
xlat
loope
fs
pushf
lods
fistps
outsb
loope
imul
es
icebp
negl
loope
outsb
sbb
lods
adc
gs
shrb
je
es
xchg
movsl
ja
push
lock
sub
dec
ficompl
mov
inc
rcrl
loopne
inc
cld
lds
cmp
or
mov
adc
cmovl
call
jne
das
cwtl
push
ja
std
sub
fs
xchg
fisubrs
adc
add
cs
dec
jns
lods
cmp
mov
mov
shl
xor
aas
mov
sbb
ja
mov
out
cmpsl
fdivs
aas
mov
sub
add
xchg
cmpsb
push
mov
mov
mov
dec
add
mov
add
ret
scas
jo
lret
pop
push
dec
and
dec
push
out
xchg
mov
mov
mov
nop
dec
insb
test
test
insb
cmpb
sti
les
adc
cmp
dec
jge
push
cmp
pop
pop
inc
jbe
addr16
sbb
jmp
sub
flds
and
dec
cmp
test
inc
lods
dec
gs
dec
xor
cs
mov
xor
add
dec
ja
adc
or
and
push
cmp
pop
inc
nop
adc
and
push
add
mov
jmp
inc
jecxz
mov
mov
lods
cmpsl
adc
out
jl
mov
movsb
repnz
pop
xchg
add
les
push
inc
pop
sbb
jecxz
int
adc
xchg
out
add
cli
mov
adc
add
not
pop
jae
movsl
ror
cmc
sbb
out
ja
movsb
ja
jns
add
lock
mov
gs
fldl
inc
mov
gs
jbe
push
sarl
nop
jno
data16
icebp
cs
mov
inc
jge
ljmp
pusha
pop
pop
inc
jg
mov
sbb
cmp
ds
sbb
flds
dec
icebp
aas
inc
adc
mov
arpl
push
mov
ds
cmpl
xchg
lahf
jo
xchg
push
popf
pushl
push
or
repz
movsb
xchg
or
inc
lock
imul
inc
xchg
loop
inc
adc
cmovns
es
fcom
cmpsl
out
test
xor
or
adc
dec
mov
mov
repz
movsb
loopne
push
adc
mov
stc
pop
xor
repz
push
or
movsb
movsb
lock
idivl
test
xor
mov
push
xor
dec
sbb
dec
cmpsb
loop
lahf
sub
jbe
in
pop
pop
jns
add
scas
xor
mov
and
out
jecxz
xchg
sbb
loop
jbe
aad
jno
cwtl
xchg
int3
xchg
mov
mov
aad
test
cmc
or
insl
pop
pusha
addr16
mov
rcl
xor
out
cwtl
jb
fidivrl
aam
es
rcrb
dec
pop
cwtl
pop
sub
push
inc
outsb
push
fistps
outsl
inc
xorb
pop
xor
inc
in
mov
out
jge
nop
arpl
sub
je
add
setle
sar
inc
popf
cmp
fs
mov
mov
js
inc
pop
xchg
imul
cli
repnz
pop
inc
in
push
jp
and
sbb
jge
jl
cmp
xchg
inc
pop
xchg
dec
inc
data16
jns
mov
mov
pushf
ss
inc
out
cmp
int3
fcmovnb
pop
jp
inc
dec
xchg
ror
pop
loopne
hlt
js
dec
lcall
cli
pop
xchg
test
mov
lock
dec
sbb
dec
add
rcrb
mov
loope
dec
shlb
push
xor
fwait
inc
mov
popa
mov
sahf
sbb
loope
icebp
xor
stc
stos
cwtl
jo
fimull
loopne
cmc
jp
inc
mov
arpl
xor
jge
call
xchg
xor
pop
sub
inc
stos
mov
test
xlat
inc
sti
dec
adc
test
cmpsb
and
es
mov
jae
loope
jle
adc
cmc
or
mov
mov
testl
jns
dec
aaa
mov
xchg
xor
cmp
sti
imul
jp
push
lret
or
je
mov
daa
in
jns
aas
iret
add
ss
lret
cmpsl
cmpb
cmp
mov
int3
daa
push
loope
xchg
push
sbb
nop
mov
lods
push
sbb
cwtl
sub
xor
faddp
push
repnz
push
div
xchg
pop
sub
loope
cmp
std
pop
push
or
mov
xor
jl
mov
add
xor
xlat
shlb
dec
pop
repnz
negl
repnz
push
jo
dec
repnz
push
mov
fs
inc
cmc
lret
adc
fcom
jne
jne
adc
lret
ja
and
not
sub
pop
shrb
lcall
push
or
fldl
add
ja
adc
xor
je
cmpb
push
int
andb
gs
cmp
lds
sub
or
push
push
test
fsubrs
outsb
add
or
and
pop
enter
inc
pushf
jg
das
cmp
jge
sti
pusha
lcall
cmp
and
mov
les
mov
mov
mov
inc
pop
push
pop
mov
ss
fwait
push
mov
das
and
cld
inc
cli
sub
fldt
cwtl
cmp
and
xchg
sti
sahf
xchg
inc
xorl
sub
scas
inc
add
and
test
pushf
inc
and
inc
jg
jno
icebp
insb
adc
inc
shrb
or
shl
sbb
pusha
loopne
aam
fisttpll
out
aas
ljmp
rcr
pop
mov
dec
xchg
mov
and
pop
cmpsb
lods
sub
in
and
cmp
mov
inc
mov
cs
mov
inc
sub
add
out
fldl
sbb
out
adc
js
js
lods
lcall
inc
adc
push
lret
mov
adc
pushf
pop
popa
or
mov
or
xor
movsl
test
fxtract
sub
cs
push
mov
mov
cmp
repnz
imull
testl
rol
inc
aaa
sub
ljmp
repz
dec
imul
scas
sub
jge
adcl
mov
sbb
mov
sub
das
cmp
push
and
daa
cmc
mov
jp
mov
popf
cld
fldt
sbb
pop
hlt
push
iret
leave
push
into
inc
xadd
and
sbb
dec
cmp
sub
mov
push
pop
or
fisttpll
and
aam
mov
test
ret
outsl
in
mov
insb
jae
or
dec
loop
cwtl
push
leave
sub
lret
int3
jl
loope
dec
lods
fistpll
clc
std
sbbl
fiaddl
mov
cmp
loop
adc
push
ds
idivl
mov
mov
cmp
sahf
xchg
sbb
pop
mov
arpl
sbb
lea
xlat
mov
fwait
push
ss
cmp
dec
pop
pop
and
fisttpll
or
cmp
inc
movsb
scas
scas
sbb
daa
ficomps
dec
fcmovnbe
push
mov
cwtl
inc
sbb
mov
stc
xchg
push
int
fisttpll
mov
jno
ficoms
mov
pop
jns
mov
or
cmpsl
popa
fsubrl
inc
dec
sub
push
xchg
mov
xor
or
shlb
loop
int3
inc
scas
add
cwtl
in
mov
int
lods
mov
ljmp
sahf
mov
daa
shll
or
sahf
xchg
sub
xchg
sbb
pop
lods
stos
push
adc
inc
or
and
shl
dec
test
arpl
sub
test
jp
lcall
pop
pop
aam
leave
loop
call
push
clc
mov
sbb
xchg
xor
lcall
aaa
out
add
xchg
cmp
in
sarl
add
into
dec
pop
ss
aad
jnp
repz
out
adc
xchg
ficoms
loop
test
js
push
add
rorb
inc
or
cmp
pop
cld
data16
ljmp
add
sub
test
not
inc
push
mov
dec
in
rolb
mov
jl
or
push
fstpl
call
fwait
repnz
test
ljmp
or
adc
push
int3
jb
push
inc
nop
sbb
fimull
push
mov
fidivrl
ljmp
ror
and
mov
inc
in
insb
lods
imul
mov
jecxz
cmp
popa
mov
pop
or
pop
or
jns
push
daa
adc
insl
push
inc
out
jno
mov
sahf
je
fst
mov
xor
sub
jecxz
scas
orb
icebp
cwtl
int3
popf
aad
cmp
lahf
sub
xchg
icebp
lds
negb
scas
std
js
xchg
xchg
inc
adc
pop
pop
xchg
mov
data16
xchg
xchg
or
xor
dec
dec
inc
fwait
pop
xchg
pop
test
mov
cmp
fldl
adc
cmp
daa
mov
call
pop
adc
sbb
notl
out
sub
gs
pop
sbb
idivl
pop
mov
mov
shl
test
xchg
and
jb
scas
push
rorb
clc
scas
enter
add
pop
incb
jo
fcmovnu
cmp
fisttps
popf
jecxz
repnz
cmp
gs
shlb
dec
addr16
outsb
mov
loop
outsl
lock
je
sbb
mov
pop
xor
fdivrl
sbb
lcall
andb
dec
mov
mov
adc
mov
lret
imul
xor
mov
icebp
push
pusha
fnstcw
add
mov
hlt
jno
ffree
leave
mov
insl
les
jbe
xor
sub
lea
lods
xor
adc
cmp
popf
add
xchg
mov
cld
dec
psrlq
mov
cmp
insl
xor
jb
popf
cmp
aam
pop
sbb
loop
stos
cmpl
xchg
add
add
xchg
popf
std
sarl
push
test
jns
cmpl
or
mov
mov
cmp
inc
aas
int3
add
fstps
daa
add
inc
mov
mov
jl
movl
dec
lock
adc
sahf
or
adc
repnz
into
call
adc
shrb
inc
in
out
xchg
test
mov
fmuls
test
xchg
hlt
popf
arpl
adc
push
enter
incl
or
xor
pop
pop
pop
clc
xchg
jecxz
add
int
inc
clc
in
jns
movsb
fs
jno
adc
xor
int
push
shll
or
cmpsl
shll
push
xor
xor
sub
or
inc
js
shlb
je
push
addr16
xorb
in
popa
xor
push
rolb
clc
scas
dec
jne
add
lret
xor
mov
jl
sbb
aas
cmp
popa
adc
ds
ss
outsl
and
mov
mov
shrb
imul
xchg
push
cmp
xor
rcr
rcl
inc
add
cmpsl
jmp
imulb
jmp
sub
je
lds
and
scas
je
lock
or
data16
cli
sub
in
push
inc
pop
and
cmpsl
jp
cmp
shlb
mov
adc
pop
mov
test
jnp
mov
jnp
xorb
mov
jmp
pusha
xchg
cmp
pop
pop
es
mov
aaa
popf
jo
xor
and
repz
pop
cli
mov
repnz
push
sbb
data16
sbb
out
nop
arpl
loop
cmp
cmp
ret
adc
pop
lcall
push
adc
negl
mov
xchg
outsb
int
lcall
sbb
jecxz
pushf
pop
add
mov
and
and
out
inc
inc
bound
add
adc
imul
dec
pop
xchg
mov
pop
outsb
mov
cmp
adc
movsb
push
xchg
mov
inc
mov
movl
dec
push
repnz
movsl
xor
mov
jmp
int
loopne
imul
stc
jp
vcvttss2si
jno
or
xchg
fwait
repnz
inc
insb
jno
fadds
and
mov
movsb
mov
jns
add
jb
push
xchg
arpl
push
and
sub
and
stos
dec
imul
push
leave
sbb
imul
push
pop
inc
cmp
adc
hlt
lret
mov
divl
and
cmp
cs
jne
imul
sar
in
out
adc
push
out
in
xor
fstpt
scas
mov
xor
aam
mov
std
movsl
outsb
aas
mulb
cmp
hlt
sti
push
movl
sbb
push
loop
test
gs
cmc
mov
mov
mov
push
inc
xchg
adc
insl
jp
incl
cmpsb
cmpsb
or
and
daa
jbe
and
loope
nop
es
push
pop
idivl
push
mov
jae
rcrl
sahf
cmp
jg
in
sub
push
push
and
mov
and
fst
jge
insl
or
jo
xchg
call
aad
aad
pop
jge
jnp
dec
push
fiaddl
fdivrs
dec
jne
mov
das
sub
fs
push
lds
jmp
jp
iret
jno
cmpsb
fidivs
dec
jns
and
cwtl
stos
inc
mov
mov
adc
imul
scas
sbb
pop
shll
cmpsb
adc
pop
fstl
lret
sub
test
mov
das
repz
dec
aad
rol
imul
sti
mov
in
imul
xorb
xor
hlt
xlat
mov
daa
call
gs
dec
jmp
lcall
push
sti
repnz
dec
jl
push
into
jno
push
mov
xor
lret
jae
push
xchg
fs
lds
sub
inc
pop
mov
mov
fidivrs
pop
dec
lret
cmp
imul
aad
aas
lret
and
cmp
lods
add
shlb
jmp
inc
mov
lock
sub
daa
cltd
adc
mov
decb
daa
outsb
cld
pushf
lret
mov
mov
or
jnp
xchg
sub
testb
mov
std
popf
out
out
clc
rcrl
stc
loope
xchg
mov
addl
lcall
out
iret
inc
nop
shlb
push
jns
jns
cld
inc
inc
pop
push
ret
mov
cmc
jb
add
sub
in
adc
xchg
adc
fdivs
insb
cld
xchg
adc
mov
adc
xor
outsl
lcall
lcall
aad
repnz
xor
sub
xor
mov
sub
call
xor
nop
or
jge
adc
data16
inc
mov
loope
pop
repz
inc
push
add
mov
rorb
outsl
cli
push
jno
pop
adc
add
lret
xorb
sti
push
mov
mov
dec
into
mov
xor
fidivs
jae
cmp
into
jne
int
xor
push
push
ja
arpl
jecxz
cld
sbb
and
mov
push
sbb
cmp
adcl
lds
pop
xlat
dec
aas
and
mov
add
pushf
ds
and
cmp
mov
or
mov
cmp
popa
jmp
xchg
pop
into
mov
popa
dec
cmp
test
imulb
cmp
pushf
lret
and
loop
lds
lods
xor
add
jae
mov
std
subb
mov
lahf
push
icebp
cmpsl
out
mov
adc
pop
fdivrs
and
sbb
push
jns
xchg
or
push
xor
or
rcl
or
std
push
push
test
jnp
imul
loopne
mov
dec
adc
aas
xchg
dec
inc
adc
fistpl
push
sbb
and
xor
fstl
jge
mov
in
jle
daa
sbb
adc
int3
pop
lea
ret
push
sbb
push
mov
xchg
sbb
dec
inc
dec
enter
sub
mov
sub
jo
daa
cmp
test
imul
popf
pop
jae
or
cld
outsb
fcompl
js
insb
pop
cmpsl
stos
pusha
or
xchg
adc
cmp
fimull
arpl
inc
leave
out
repz
into
lcall
fiadds
mov
scas
insl
inc
and
jp
addr16
out
outsb
sbb
push
add
lret
cltd
mov
ja
and
cwtl
xor
xchg
push
xchg
outsb
push
sbb
sbb
push
imul
movsl
mov
cmp
and
shrb
aaa
pop
push
stc
nop
cltd
xor
in
mov
roll
pusha
mov
lods
sbb
push
push
jnp
mov
cmpsl
mov
add
ss
dec
aad
das
add
jnp
hlt
ror
mov
fildll
jnp
lods
rcll
fnstsw
mov
les
dec
push
hlt
addr16
je
sub
push
rclb
xchg
inc
int3
xorb
pusha
pop
mov
adc
xlat
shrb
incb
insl
pop
sahf
repnz
xor
jecxz
shl
push
add
insl
mov
xchg
cmp
add
leave
mov
int3
mov
push
xor
jno
enter
flds
push
xlat
repz
xchg
xchg
fildl
jmp
arpl
int
js
xchg
pop
inc
add
frstor
mov
mov
sbb
sbb
pop
and
outsl
rorb
int
decb
jmp
sub
out
mov
lcall
jno
push
shlb
jge
cmp
xchg
scas
adc
das
test
mov
mov
or
in
adc
clc
adc
ja
test
push
cmp
jae
repnz
out
subb
push
int
test
shl
dec
sub
test
jne
mov
push
push
loope
mov
sub
mov
push
inc
ja
das
push
jg
mov
add
lret
int3
lds
repz
aas
bound
into
dec
xor
add
mov
lea
sub
lcall
call
cmpsl
fistps
shlb
clc
dec
jg
sub
push
cmc
sbb
in
insb
push
je
adc
notb
jecxz
shrb
inc
adcb
sbbb
jl
jo
and
or
lds
fimull
xor
pop
mov
xchg
test
gs
add
pop
scas
inc
mov
mov
scas
pop
cwtl
jnp
repnz
lahf
mov
imul
test
mov
leave
jl
xor
jb
mov
jmp
out
int
mov
xor
in
add
sbbb
stos
out
dec
pop
and
inc
adcl
push
xchg
lock
cmc
mov
mov
push
jo
cmpsl
or
insl
lret
data16
jne
addb
push
inc
cmp
int3
lods
push
mov
popa
int
outsb
add
js
movsb
add
in
fisttpll
dec
faddp
inc
jp
fnstcw
bnd
inc
mov
mov
cmp
pop
lds
xlat
ja
jmp
push
xchg
imulb
inc
cld
into
xlat
stos
aam
lods
bound
outsl
insl
sub
icebp
rcrb
jnp
jae
pop
push
ds
loope
or
inc
into
adcb
rclb
clc
hlt
xor
loop
rcll
mov
pop
aas
sbb
adc
jp
inc
cld
adc
nop
and
fldenv
js
imul
arpl
clc
pop
ret
aam
inc
mov
adc
cwtl
xor
mov
pop
sti
cmc
imul
stos
movsl
inc
jne
lods
sahf
gs
shl
cmp
test
outsl
mov
push
add
andl
jbe
test
bnd
js
lods
mov
adc
mov
push
dec
adc
sbb
out
repnz
clc
stos
push
hlt
aad
add
cs
lods
xor
iret
and
or
cld
inc
out
or
fwait
jne
push
cmp
addr16
and
sbb
cli
sub
jns
popf
sub
add
loopne
or
push
daa
push
and
xchg
stc
and
jge
or
and
xchg
fs
scas
ret
mov
jge
daa
xor
daa
adc
mov
imul
std
and
mov
mov
mov
xchg
sbb
pop
dec
mov
sub
jnp
mov
dec
icebp
pop
subl
rclb
movsl
or
fstl
pop
pop
jns
inc
std
cmp
test
jge
cmpsb
cltd
loope
inc
inc
mov
add
sub
mov
mov
mov
mov
xor
cs
fstps
mov
and
imull
jp
call
repnz
sub
cmpsl
mov
xchg
jae
jno
pop
cs
popf
cmpb
cltd
mov
inc
repnz
fnstcw
mov
loopne
aam
pop
jno
fcom
movsb
std
mov
rolb
out
xchg
cmp
aad
clc
cmp
xorb
and
inc
xchg
loop
mov
xlat
pusha
xor
adc
jecxz
jo
pop
rol
test
loope
push
or
test
xchg
xor
adc
insb
jge
jecxz
cli
ret
arpl
jns
push
stos
adc
mov
push
out
repnz
pop
mov
adc
shll
aas
stc
rorb
push
out
rcl
pop
fs
sbbl
mov
mov
sbb
pop
push
dec
xchg
loope
aas
adc
jns
push
push
nop
gs
fadd
mov
neg
sbb
and
adcb
outsb
xor
lret
repz
dec
ret
adc
add
mov
sub
push
icebp
cmpsl
test
js
lret
or
add
mov
sbb
cld
fstps
sub
test
pop
adc
jg
lds
mov
fidivrl
aam
test
adc
loope
xchg
mov
mov
sbb
xchg
jle
pop
fmuls
jno
jo
negb
jle
mov
imull
dec
out
imul
in
insb
movsb
inc
xchg
or
jae
popa
jns
xchg
or
in
adc
cmp
pop
inc
sub
stc
outsl
rclb
inc
cld
outsl
out
jmp
jo
mov
xlat
mov
xchg
cli
loop
stos
pop
dec
or
sbb
fwait
fwait
in
lret
jae
iret
xor
or
stc
jno
mov
aas
test
or
call
cmp
sti
and
adc
pop
cmp
inc
cwtl
ret
pop
pop
cmp
push
jg
clc
xor
push
xchg
repz
sbb
aam
insb
jo
fsts
std
enter
sub
sub
push
push
test
push
test
pop
ljmp
inc
int3
ror
arpl
mov
loop
pop
pop
movsb
fwait
test
lret
psllw
clc
mov
js
mov
popf
sub
cwtl
mov
cmp
rcrb
add
ret
movsl
stos
sub
jo
jge
insb
xchg
push
mov
mov
lahf
jmp
fsubl
xchg
cmp
fadds
inc
jo
stos
mov
in
call
fists
fisubrs
pop
dec
sbb
inc
xchg
or
outsl
sbb
add
pushf
push
mov
lods
push
lret
xor
outsl
mov
xlat
std
fisubrl
bound
push
mov
cli
mov
cmpl
push
jg
test
test
sub
cltd
lds
sti
mov
mov
or
add
and
aam
jmp
shll
inc
jns,pt
popa
or
and
mov
and
leave
add
cs
repnz
cmp
scas
roll
push
mov
ja
outsb
add
aaa
jbe
mov
addb
sahf
xchg
ret
loopne
movsl
push
jbe
adc
ror
mov
stc
in
push
jns
stos
mov
adcl
cmp
xor
lret
add
daa
jns
pop
cmp
mov
out
xlat
cmp
in
data16
xchg
push
xchg
adc
cmpsl
arpl
cli
adc
jmp
xor
movsl
sarl
out
popa
pop
push
cmp
inc
pop
nop
inc
inc
pop
xor
loop
mov
jne
scas
mov
fsubs
adc
movl
mov
in
sbbl
jb
adc
jg
mov
jp
enter
adc
es
mov
lds
cmp
push
xchg
pop
orl
lret
fs
xchg
cmp
xchg
lods
stos
pop
push
adc
jno
pop
mov
ficompl
dec
xor
add
popa
pusha
loop
jns
scas
ret
pop
sub
sbb
je
push
and
loopne
sbb
fdivrs
push
out
mov
mov
loop
ficomps
fidivrs
add
lds
sbb
adc
or
pop
jp
scas
shl
jl
lahf
cmp
jp
mov
sti
les
mov
loop
aaa
outsb
pop
movsl
cli
jl
icebp
push
xor
pop
repnz
sarb
test
cwtl
enter
and
outsb
inc
xchg
call
daa
popa
gs
shl
mov
in
dec
aaa
out
push
mov
lds
jge
pop
sti
dec
insl
inc
mov
lea
inc
mov
ret
mov
xchg
mov
andb
sbb
inc
mov
gs
adc
mov
mov
inc
mov
shl
push
jl
lret
or
nop
cltd
stos
dec
insb
fs
push
xor
mov
jb
and
sub
or
cmpsb
pop
test
dec
inc
sbb
xor
fsubr
mov
inc
jmp
xchg
lods
mov
aad
fwait
pop
dec
sbb
jecxz
xor
imul
mov
adc
cmp
fadd
int
xchg
add
dec
call
inc
jp
sahf
pop
jbe
pusha
push
jne
les
jl
and
push
xchg
xor
jle
mov
inc
call
in
add
mov
push
push
test
sub
push
or
sbb
pop
jbe
in
mov
rol
in
pop
inc
lock
jae
mov
push
mov
pushf
adc
inc
push
mov
cmp
or
add
sub
lahf
xchg
xchg
xchg
inc
lock
adc
in
jne
pop
dec
cs
or
aas
enter
js
push
loop
cld
bound
mov
mov
cltd
xchg
xor
inc
aam
das
adc
std
pop
xlat
adc
inc
mov
loop
adc
xor
popa
pushf
xchg
or
xchg
sub
adc
xlat
into
sarb
js
pop
pop
out
imul
movsl
mov
jne
loopne
aam
and
adc
sbbb
mov
push
inc
out
mov
xchg
imul
shrb
sub
mov
mov
pop
lcall
daa
mov
or
jmp
addl
lcall
dec
adc
push
sub
popf
add
call
pop
neg
push
cmpsl
jns
daa
pop
mov
and
pop
xchg
jnp
jecxz
scas
test
push
cwtl
inc
repz
and
xchg
daa
ret
into
lcall
push
sub
mov
pusha
jmp
mov
fldenv
ret
mov
cld
xor
push
dec
pop
cwtl
in
pop
mov
pusha
inc
dec
inc
xor
cwtl
in
data16
addl
mov
nop
stos
stos
or
mov
push
jge
pop
scas
cmpsb
je
or
int
xor
out
insl
lods
dec
lcall
and
and
cmp
or
cmp
mov
sub
mov
data16
pop
in
shl
mov
mov
jl
mov
sub
mov
xchg
inc
test
pusha
test
in
int
jns
negl
push
adc
push
mov
mov
sbb
sbb
cmp
rcrb
pop
mov
repnz
xchg
ret
add
rcrl
mov
test
mov
mov
mov
loopne
push
loop
or
aam
pop
cwtl
lods
outsb
adc
ljmp
adc
inc
leave
cmpl
adc
fbstp
xchg
pop
mov
inc
add
jnp
mov
adc
xchg
inc
push
xor
pop
jnp
pop
adc
sbb
ljmp
insb
in
adc
test
cmc
out
cld
ficoml
negb
popa
and
pushf
in
push
insb
das
mov
sub
fldenv
aaa
jo
out
jmp
out
aas
push
cmp
jg
cmp
mov
pushf
xchg
inc
pop
rol
jecxz
mov
imul
adc
pop
dec
dec
ficoms
loopne
das
or
push
repnz
in
movsb
pop
shll
repz
mov
xor
imul
and
cmp
nop
subl
popa
xchg
pusha
add
sbb
imull
shlb
lahf
in
mov
mov
jp
and
fstl
js
mov
dec
sbb
xchg
mov
cmp
imul
stos
jno
mov
mov
cmp
in
or
js
inc
lret
pop
xlat
sub
imul
lret
push
ja
mov
aad
sbb
and
cmp
aaa
fs
pop
cmp
shr
jne
add
repnz
dec
mov
xchg
mov
in
push
jb
sub
fimull
int3
sbb
push
or
das
aas
imul
jns
rolb
mov
arpl
sbb
pop
pop
push
int
outsb
push
icebp
inc
imul
xchg
fiaddl
mov
inc
ja
cmp
add
xchg
out
jns
mov
dec
sbb
mov
aaa
jae
repz
xchg
loopne
out
dec
xchg
fsub
outsb
pushl
mov
inc
mulb
jecxz
xchg
dec
stc
movsb
movsl
sub
cld
mov
lods
icebp
ret
push
jae
sub
sbb
sbb
cli
or
pop
ljmp
repnz
shll
sub
xor
aam
dec
and
xchg
test
dec
shrl
test
insb
pop
sti
sub
enter
mov
mov
mov
jl
adc
fs
imul
xchg
and
outsl
push
xor
dec
mov
jns
scas
mov
data16
push
xchg
lret
jbe
jbe
pop
fucomi
imul
jns
inc
cmpsl
add
stos
icebp
mov
rclb
sti
pop
cmp
mov
jb
push
push
sti
ds
pop
and
icebp
mov
ja
outsb
ret
jle
nop
test
dec
lea
push
data16
mov
aam
cmpsb
mov
rcl
xchg
out
push
xor
mov
mov
sahf
pop
cmp
in
dec
jmp
scas
call
mov
je
outsl
hlt
cmp
pop
sub
loopne
inc
cmpsl
cwtl
repz
pop
mov
int
movsb
dec
push
jo
sbb
lds
imul
sbb
lahf
lea
lods
sbb
lock
fistpll
lds
dec
push
int
lret
clc
and
adc
jmp
iret
movb
lods
fwait
push
xor
sub
iret
jle
sbb
dec
dec
lods
dec
sub
cwtl
dec
ss
adc
loope
mov
mov
mov
adc
in
jns
inc
cmpsl
jmp
xchg
mov
mov
mov
repnz
lahf
cmp
lods
inc
repz
add
dec
ljmp
inc
adc
cmp
ret
cwtl
mov
inc
add
or
mov
sub
jns
das
mov
xor
and
fstpt
mov
cwtl
jbe
adc
adc
fidivrs
cli
imul
les
fcmovnb
or
jae
mov
test
inc
sub
mov
movsb
mov
sub
ret
adc
jnp
push
movswl
leave
pop
leave
pop
or
rorb
push
pop
ficoml
dec
lock
pop
mov
mov
test
mov
mov
and
xlat
sbb
inc
rcrl
outsl
dec
sbb
into
lock
jl
in
xchg
and
add
in
sub
add
dec
xchg
mov
pop
xchg
sahf
outsb
lret
adc
data16
out
push
jecxz
pop
adc
ljmp
test
outsb
jg
dec
or
bound
cmp
hlt
or
ret
or
bound
fsubr
arpl
repnz
pop
cmpsl
pop
jo
cltd
mov
sub
inc
ja
movsl
cmp
dec
imul
dec
repz
subl
lret
addr16
xchg
or
xchg
lcall
cmpsb
inc
stos
aam
cmp
jne
lret
cmp
shll
rolb
cltd
push
pushf
test
and
ror
lea
fucomp
xchg
cli
mov
inc
aam
js
clc
in
or
sahf
xchg
cmp
mov
jno
lret
xlat
inc
mov
jg
test
cmc
das
or
gs
insl
loop
pop
fwait
mov
add
mov
push
out
xor
xor
pusha
sub
int3
or
pushf
mov
movsl
sbbl
test
push
jne
inc
jecxz
and
cmp
dec
sub
les
inc
sbb
mov
xchg
jecxz
adcb
sbb
out
adc
mov
mov
ja
push
xchg
xor
addl
lret
fldl
jbe
addr16
sbb
clc
push
arpl
add
adc
mov
cs
mov
sub
leave
add
cmpsb
push
in
aad
scas
fmulp
icebp
fdivrs
and
mov
ret
scas
fs
add
sub
xor
jbe
xchg
jl
and
lea
add
or
mov
aad
out
js
pop
in
cwtl
jbe
mov
cmp
xor
push
jge
push
xor
test
fnstenv
fcom
push
out
in
icebp
xchg
sub
sub
imulb
jmp
pop
push
xor
and
add
xor
mov
push
iret
leave
mov
mov
mov
pop
lods
and
vpcmpeqb
gs
mov
jmp
inc
out
data16
out
add
and
daa
js
fcomi
or
enter
and
mov
gs
xor
pop
inc
scas
out
imul
jno
je
jb
xor
xorl
pusha
shrb
pop
movb
popa
fs
adc
jg
jne
mov
aam
in
lods
test
mov
xor
cli
jmp
xor
xchg
inc
mov
loop
dec
and
lock
arpl
jno
fucom
popf
adc
sbb
out
and
aad
hlt
jns
and
int3
xchg
inc
and
mov
fstpl
aam
sub
xchg
and
pop
mov
loope
mov
push
cs
arpl
push
lret
mov
add
ja
pop
lret
push
in
sub
popa
loope
inc
scas
out
pop
adc
lcall
fildl
sahf
cmpsb
iret
push
daa
add
sahf
gs
fstpl
incl
cmc
dec
aad
and
inc
addb
and
jae
mov
loope
clc
xor
push
and
pop
pop
ja
mov
pop
inc
mov
push
fwait
mov
jmp
test
sbb
aaa
and
nop
mov
ds
ljmp
cltd
adc
shll
mov
adc
and
or
jl
jle
jmp
xor
out
dec
aas
scas
andl
stos
and
mov
push
jecxz
ja
rcrl
js
les
lock
pop
lret
and
insl
into
and
fdivrl
lds
xorl
iret
sbb
sub
out
shlb
xor
shll
jecxz
out
jnp
push
xor
pop
and
mov
mov
cmp
loope
or
push
fiaddl
jge
cltd
xlat
test
cmp
pushf
adc
loope
ret
xcrypt-cfb
and
add
loope
push
outsl
pop
add
sbb
fwait
or
imul
inc
lret
fadds
inc
into
lods
xchg
in
jl
aad
xlat
dec
popf
pop
add
jae
lcall
pusha
pop
pusha
pop
rol
mov
add
sub
cmp
mov
xchg
or
add
insl
fidivrl
lods
cmp
add
test
pop
or
fidivrs
mov
addr16
lds
adc
mov
push
or
inc
mov
xchg
imul
mov
scas
push
or
xor
mov
or
mov
adc
xchg
int3
jno
or
lret
dec
dec
sub
ljmp
loop
jbe
or
repnz
outsl
add
mov
fwait
loope
adc
pop
rorl
aam
inc
inc
pop
shlb
arpl
inc
repnz
imul
adcb
xchg
loope
das
pop
aam
outsb
outsl
sbb
aam
aas
sbb
mov
mov
lods
sarl
scas
mov
fisubrs
inc
push
adc
mov
jo
shll
xor
repnz
fdivrs
cmpsb
test
gs
lret
shll
lods
add
leave
mov
sub
push
fs
add
pop
and
xchg
sub
mov
inc
inc
sahf
js
mov
shlb
xchg
pop
ja
ja
add
adc
xchg
mov
outsb
cmp
pop
lahf
or
pop
leave
mov
mov
lods
fists
xchg
mov
push
fsubp
hlt
sbb
jp
sub
mov
bound
adc
add
ds
jns
lea
cmpsl
cli
pusha
mov
test
push
mov
insb
shll
jp
push
cmpsb
fisubl
shr
or
or
cwtl
mov
pop
popa
lock
add
popa
jb
outsb
test
jp
sbb
jbe
aam
orl
sbb
pop
push
mov
iret
je
fs
ret
lret
sbb
lcall
pop
aam
out
adc
adc
push
fucom
and
lods
dec
movsb
fisttpl
ret
inc
adc
jno
dec
rcl
insl
rcll
adc
pop
sub
scas
xchg
sbb
call
std
adc
cltd
loope
pushf
pop
add
inc
mov
mov
sub
data16
in
insb
mov
add
mov
and
outsl
dec
lahf
mov
bnd
insl
lock
push
cmp
in
bndldx
cmp
mov
cmp
insb
shlb
sub
fwait
test
das
mov
mov
adc
push
cmpl
cmp
mov
jle
cld
and
sbb
mov
xor
fldl
push
gs
leave
in
inc
sbb
pop
data16
out
sub
lret
dec
ljmp
stc
add
jg
jae
push
ffreep
xchg
lahf
int
in
rcr
lea
xor
jmp
lock
rclb
push
or
adc
popf
ja
test
js
nop
pushf
popa
repnz
push
push
ja
and
adc
push
pop
and
stos
lret
call
daa
clc
jmp
loop
jae
in
daa
out
iret
jne
pop
icebp
xchg
lea
adc
cmp
mov
pusha
dec
xchg
shrb
fidivl
jl
into
and
xchg
inc
jns
je
xchg
subb
adc
inc
repnz
sub
cmc
add
int
fstpl
cwtl
mov
dec
mov
adc
sub
lret
cmp
ja
mov
adc
into
and
pop
inc
mov
das
cli
mov
roll
adc
add
fst
cs
stc
rolb
jb
sbbl
sahf
lea
xlat
jo
fidivl
lock
mov
popa
in
fwait
dec
ss
pop
push
gs
inc
js
cs
mov
jne
mov
lods
sbb
hlt
shlb
mov
xor
mov
or
jne
mov
gs
dec
mov
adc
and
add
mov
fstpl
sbb
inc
xor
inc
mov
jg
rcll
and
int3
xor
xchg
call
mov
lret
adc
sub
mov
pop
je
cli
jae
dec
icebp
xchg
xchg
test
aaa
mov
inc
jnp
fstpt
ror
scas
rcrb
addl
push
jno
sbb
adc
sbb
lock
sbb
adc
out
cmp
div
shl
mov
aaa
lea
xor
mov
loope
xor
popf
lock
sahf
xlat
stos
aam
jne
outsl
pop
jmp
mov
adc
in
mov
filds
aam
cmp
sub
cmp
test
mov
xor
xor
cs
shlb
sbb
std
lods
adc
rcll
jge
xor
mov
mov
repz
jp
jg
mov
je
daa
jno
sbbb
popl
arpl
adc
les
or
lahf
out
js
pop
dec
xchg
jne
xor
push
sub
sub
push
push
sub
andb
popf
and
jecxz
pop
pop
fstpl
or
imul
mov
mov
loope
add
cmp
jg
mov
xchg
dec
loop
mov
hlt
and
cmpsb
cmp
es
nop
loopne
pop
add
add
insl
ret
mov
pop
lea
lcall
jle
movsl
xor
nop
cmpsl
mov
cltd
shlb
nop
inc
int3
push
mov
popf
sbb
mov
into
sub
std
mov
pushf
mov
lcall
call
cmc
pop
adc
cmp
pop
sub
dec
adc
jg
add
int3
ljmp
hlt
lods
imul
inc
insl
sbb
mov
jl
pop
push
inc
push
aas
adc
sub
mov
sub
sbb
mov
xchg
lahf
pop
ret
ror
mov
sub
push
xchg
mov
stc
out
adc
mov
shrl
pusha
jns
dec
pushl
xchg
stc
push
sahf
stc
or
and
arpl
mov
andb
arpl
dec
mov
push
sbb
es
jns
dec
call
inc
jmp
sarl
imulb
pushf
int
aam
mov
mov
push
std
test
fimuls
stc
add
cmp
pusha
pop
lock
cmp
add
sbb
and
xor
rclb
or
or
mov
das
das
mov
das
xor
xchg
dec
adc
minps
insl
mov
inc
and
scas
mov
push
shlb
and
pop
les
jo
pop
leave
add
lahf
stos
out
lods
mov
jbe
sub
mov
neg
insb
fnstsw
or
add
cwtl
xor
mov
in
mov
data16
push
mov
mov
xlat
fucomp
imul
js
jle
adc
cmp
sahf
add
loop
cld
inc
fwait
cmc
cmpsb
out
cmpsb
jb
fs
xor
sub
test
push
xchg
dec
mov
testb
rolb
cmpsl
mov
lea
sbb
cmp
pop
jecxz
xchg
mov
movsb
fisubrl
xor
je
add
lret
pop
add
jg
or
cli
imul
pusha
push
ret
into
pop
sbb
sub
mov
addl
pop
test
sbb
xchg
mov
fwait
mull
ret
movsb
mov
cmp
mov
repnz
mov
pusha
mov
fdivrs
and
jmp
test
sbb
jge
neg
pop
dec
and
and
sbb
sub
adc
in
sbb
bound
or
jmp
js
push
loop
jns
jae
xchg
ja
mov
push
and
js
sub
xor
into
sbb
mov
movsb
push
test
pop
xorb
push
daa
xor
fsubrl
popf
adc
sub
stos
fisubs
or
sti
ljmp
jge
pop
add
imull
inc
mov
pop
repz
lcall
lea
and
sahf
in
and
xor
push
jl
aam
push
add
orl
aam
int
mull
out
push
dec
push
popf
lea
or
or
push
cs
mov
pop
movsb
sub
push
jns
fstp
aaa
out
loope
push
clc
cmp
icebp
mov
ljmp
xor
icebp
ds
ljmp
hlt
mov
push
mov
cmpsl
mov
mov
sbb
cmp
ret
loopne
mov
mov
mov
loopne
xchg
call
push
inc
movsl
insl
dec
outsb
pop
std
and
fwait
js
sbb
mov
out
dec
xchg
mov
idiv
pop
mov
mov
adc
ret
ljmp
in
mov
repz
pusha
loop
cli
fs
lea
push
ja
daa
icebp
pop
sbb
mov
adc
arpl
loopne
xor
pop
adc
imul
push
sbb
push
in
adc
in
pop
sub
aad
dec
lahf
sub
inc
push
dec
jmp
cld
pop
ficomps
mov
cmpsb
shlb
cmpsl
sbb
jg
or
into
pop
fcomi
popf
xchg
test
cmp
mov
adc
xchg
popa
pop
cmp
mov
dec
repz
adc
lock
cmp
cltd
fwait
mov
adc
lret
jge
cld
sub
jns
les
xchg
int
cli
mov
and
lock
push
jle
popf
dec
leave
jno
pop
mov
aad
push
dec
lock
je
cmpsb
inc
gs
enter
xchg
xchg
push
push
cmp
mov
cmp
sub
xor
mov
and
cld
pop
pop
adc
xlat
or
or
popf
idivl
cmpsl
push
xor
dec
add
and
mov
pop
or
lds
or
mov
push
call
out
sub
mov
mov
ret
xchg
adc
sub
in
sub
push
sub
loop
addr16
icebp
xlat
xchg
movsl
cmpsl
repnz
rorb
add
out
cltd
jns
out
inc
adc
fsubrs
fisttpll
cmc
mov
shll
sub
jle
data16
nop
ljmp
mov
or
add
inc
adc
shll
fs
mov
pusha
mov
mov
lcall
mov
in
outsb
ja
lcall
dec
repnz
xchg
data16
xchg
cmpsb
push
push
cmp
outsb
scas
cmp
pop
les
loope
sbb
pop
dec
sub
in
sti
pop
cmp
sahf
jg
cmp
adcl
mov
pop
dec
add
push
add
add
out
daa
loopne
nop
add
mov
xor
pop
clc
push
loop
cmpb
add
cwtl
pause
add
in
mov
pop
inc
mov
mov
push
xchg
les
popa
xchg
sbb
pop
xor
mov
jb
jno
repz
inc
movsl
sub
decb
and
les
movsl
add
test
je
push
mov
loopne
jp
adc
or
into
or
data16
adc
les
xchg
adc
movsb
cmp
lods
fimull
rorl
adcb
mov
xor
outsl
xor
xor
lcall
sub
aam
mov
dec
imul
mov
dec
inc
inc
add
sahf
mov
sbb
xor
push
push
lret
xchg
cmc
mov
sub
fwait
dec
lea
and
xchg
inc
push
aaa
adc
lock
add
mov
inc
ret
and
and
inc
and
pop
mov
jbe
mov
jo
xchg
mov
in
sub
mov
pop
cmp
orb
arpl
cmc
sbb
mov
pop
push
ja
cmp
es
jecxz
cltd
mov
sbb
mov
les
mov
jns
or
sub
xor
adc
scas
shl
pop
push
rol
subl
adc
repnz
jg
lods
sbb
push
cltd
call
jle
mov
cwtl
ss
mov
cmp
and
aas
push
pop
push
out
cmc
rcll
jo
jnp
adcb
int
mov
nop
in
popa
int
cld
mov
sbb
test
shrl
pushf
gs
or
ret
jg
fnstsw
and
data16
or
xchg
into
mov
add
bound
jae
aad
sbb
and
dec
xor
inc
leave
std
test
pop
sbbl
out
jle
push
popa
das
xor
aad
add
pop
shll
loopne
pusha
scas
and
ds
lahf
and
mov
mov
addr16
repz
gs
xor
sbb
jl
adc
lea
out
mov
fisubrl
cmp
lret
lods
mov
mov
mov
cmp
sar
lods
sub
push
jns
mov
add
nop
js
push
fstpt
pop
inc
xchg
or
push
movb
mov
data16
and
popf
mov
push
outsl
lret
fnsave
pop
mov
enter
xrelease
or
sub
sub
data16
ret
dec
mov
xchg
push
fstpt
les
inc
ficompl
sti
adc
out
or
cwtl
scas
sbb
pop
and
scas
push
push
adc
out
xor
add
das
sub
lret
adc
ja
orb
mov
loope
addr16
inc
fwait
pop
mov
pushf
cmc
scas
sbb
les
repz
sub
and
pop
mov
mov
mov
add
push
in
xchg
xor
cmp
adc
repnz
mov
jmp
xor
out
out
pop
arpl
sub
pop
into
jmp
aad
adc
scas
aad
jno
je
mov
sbb
dec
mov
sarl
cmp
ret
enter
mov
daa
dec
sub
xchg
popa
gs
pop
loop
cmp
test
test
addb
pop
push
gs
mov
ret
iret
aaa
xchg
daa
stc
mov
xor
aam
cmpsl
adc
lds
cmp
and
aas
sub
push
data16
sbb
mov
add
mov
pop
lods
cmpsb
mov
repz
popf
mov
cmpsl
jecxz
jmp
lods
add
push
loop
cli
mov
je
adc
iret
adc
into
jno
xchg
push
mov
jbe
mov
dec
sub
and
ja
out
sbb
pop
outsl
and
movsb
cmp
or
pop
mov
rol
loope
lods
gs
std
aaa
and
sub
push
bound
cmp
adc
in
mov
inc
jg
dec
mov
mov
fcoml
outsl
xchg
push
xorl
fisubs
popa
or
sub
rcll
jmp
call
ja
aas
repnz
repz
fcomi
jle
or
mov
pop
sti
sbb
les
in
loop
lahf
pop
push
mov
fistpll
mov
cwtl
sub
mov
xchg
insl
jmp
cmc
ret
mov
lret
or
daa
xchg
mov
mov
jb
shl
icebp
pop
mov
cmpsb
fiadds
push
loop
out
jmp
sub
xchg
mov
xor
inc
fimull
mov
out
repnz
xchg
inc
or
cmp
arpl
jbe
int
jb
loop
add
icebp
insb
sbb
lods
jmp
cmp
xor
in
pop
out
insl
test
sbb
sub
pop
cmp
scas
fwait
cmp
movsb
push
jl
es
js
mov
dec
mov
push
js
ret
sbb
pop
push
ljmp
jp
cs
fimuls
xor
pop
and
jp
xchg
jge
sub
ret
inc
push
mov
sub
nop
lds
cmc
std
mov
popl
xchg
pop
jnp
sub
ljmp
stos
repnz
fsubrl
nop
ljmp
adc
popa
push
ret
js
sub
lods
pop
jg
jecxz
jo
movb
mov
mov
lcall
pop
mov
mov
or
stos
scas
pop
mov
xchg
sbb
ss
adc
sub
jne
into
int3
push
lret
mov
sbb
daa
lds
cld
cmp
in
add
ret
fistps
xchg
sti
adc
scas
out
sub
push
orl
adc
fwait
sti
rcll
sbb
pop
scas
jg
xor
xor
das
adc
insb
call
mov
fadds
rcr
and
out
in
or
dec
pushf
mov
pop
inc
aas
add
out
cmp
aad
notl
mov
jnp
xchg
mov
xchg
in
dec
js
jp
xlat
data16
sub
push
std
inc
jmp
xorl
jne
jno
lahf
jl
hlt
lret
and
and
sti
pushf
mov
enter
xor
xchg
dec
jae
inc
cmpsb
cmpl
insb
mov
sbb
int
xchg
dec
out
sbb
pop
imul
leave
mov
mov
or
imul
push
out
add
jge
cli
ret
sbb
clc
sti
mov
sub
add
pusha
pusha
subb
inc
dec
adc
fucom
jp
xor
outsl
imul
mov
insl
and
dec
sahf
mov
test
dec
inc
fwait
sub
jnp
pop
addr16
aas
notl
enter
xchg
cmc
mov
or
in
repnz
or
lret
rcrl
andb
into
xor
repnz
call
or
xchg
call
fsubrs
mov
orb
idiv
aaa
and
out
fld
stos
push
aas
mov
or
pushl
xchg
loop
les
arpl
stc
mov
xorl
dec
mov
int3
push
push
and
mov
je
mov
fcoml
jmp
sub
in
repnz
mov
xchg
nop
sub
idivl
xor
sub
xlat
sahf
sahf
movsl
mov
inc
push
xchg
jne
mov
int
subl
or
daa
loop
cld
jecxz
ljmp
xor
pop
rcrb
call
icebp
rorl
lods
adc
mov
ds
mov
mov
xor
xorb
pop
cmc
pop
xchg
or
mov
push
sub
je
jmp
arpl
clc
int3
sti
xchg
cs
dec
sbb
jns
fwait
stos
jnp
bound
pop
add
pop
mov
inc
jno
aad
jl
and
pop
cltd
inc
rorb
cmp
enter
sub
out
push
mov
xor
xchg
shl
jbe
pop
adc
outsl
jb
adc
lock
xchg
dec
mov
sbb
and
dec
mov
dec
ret
shl
mov
sbb
and
xchg
pop
andb
js
ja
sub
jae
xchg
lea
sbb
push
jnp
in
sub
push
add
push
mov
add
jnp
push
movsb
imul
es
stos
pop
push
sub
push
movsl
xchg
xchg
pop
and
mov
lcall
call
les
das
cltd
cmp
inc
aas
cli
and
cmp
lret
ret
xor
cmpsb
adc
enter
aam
mov
sub
lret
jl
cmp
fidivrs
xchg
pop
jge
xor
mov
xor
call
iret
ss
pop
lahf
rcr
and
js
int3
cmp
pop
inc
lret
xor
mov
imul
into
popa
cmp
scas
push
lea
bound
xchg
and
dec
test
iret
xchg
mov
std
mov
push
lret
xchg
loopne
xchg
pop
mov
orb
popa
sbbb
ret
inc
push
sbb
dec
xor
pop
jmp
frstor
push
outsb
shll
xchg
insl
push
mov
in
dec
add
jbe
std
jg
pop
pop
lahf
mov
outsl
xchg
sarl
jno
adc
adc
int3
jo
sbb
adc
in
je
mov
ret
popa
and
lods
push
clc
xchg
pop
mov
lahf
jnp
push
push
mov
xchg
mov
mov
out
fs
and
rcrb
inc
rolb
faddl
out
inc
pop
pop
movl
adc
ss
outsb
sub
aam
sbb
mov
sub
xchg
push
sub
vmovupd
jno
addr16
or
lods
stc
push
push
mov
xchg
push
subb
jae
cmp
stos
adc
sub
out
test
jno
sbb
mov
add
mov
rorl
pop
adc
dec
fs
sub
mov
mov
pop
sbb
ljmp
addr16
scas
push
mov
or
andl
jne
pop
ffree
loop
or
loopne
sub
fnstcw
lea
and
stos
mov
scas
dec
ss
jno
insb
mov
addl
inc
imul
and
cli
mov
xchg
subl
jb
or
mov
jb
outsl
shl
lcall
mov
push
nop
mov
sbbb
mov
pop
adc
insl
inc
ljmp
gs
sbb
lock
jb
test
pop
stos
jnp
popf
cmp
xor
dec
jbe
and
add
out
int3
adc
stc
out
jmp
bound
fwait
dec
scas
pop
lahf
lds
std
mov
outsl
add
lods
xchg
mov
rep
fcoml
notl
sti
out
ds
in
imul
in
je
cmp
out
lods
repnz
loope
sbb
mov
and
rcll
add
iret
adc
test
mov
mov
mov
leave
xor
popf
cltd
dec
js
mov
ret
repz
mull
mov
imul
jnp
out
shrl
popa
pop
scas
pop
inc
testl
cmp
ds
pusha
pop
aam
pop
leave
es
jp
or
or
pushf
mov
xchg
mov
add
dec
inc
xchg
sarb
cmp
push
cmpsl
das
ljmp
sbb
sbb
mov
push
sahf
sbb
jnp
xorl
iret
mov
xchg
fadds
or
mov
sbb
cwtl
je
mov
rcll
int3
push
mov
xchg
loopne
push
mov
add
leave
aam
test
jp
push
aaa
ret
jecxz
pop
ljmp
dec
add
repnz
inc
sbb
clc
pop
lock
dec
mov
pop
fsubl
imul
stc
jne
jp
mov
pop
dec
add
add
das
xchg
xor
insl
ljmp
jle
popf
jmp
rcll
xchg
mov
ret
aas
sbb
mov
je
fsubrl
adc
jl
lahf
in
mov
rcrl
jbe
dec
sub
enter
shl
in
mov
lds
sarl
jmp
mov
adc
push
ret
cs
xchg
outsb
dec
sub
pushl
xchg
xlat
xor
fildll
in
jg
add
in
add
add
mov
lock
shll
in
push
repz
ret
mov
jne
leave
jg
jmp
jp
enter
lock
aaa
dec
ret
das
pop
out
jnp
addl
mov
pop
cmpb
push
cltd
mov
push
sbb
or
mov
fnstcw
stc
jnp
fs
cmp
mov
mov
xchg
jo
mov
add
and
push
or
jnp
push
das
cmp
inc
std
mov
pop
jae
je
dec
data16
fsubrs
mov
fucomp
xor
mov
dec
and
mov
push
jae
xchg
mov
int
mov
dec
xchg
jle
sbb
or
testb
popf
out
lret
popf
repz
je
mov
out
mov
or
sbb
mulb
sbb
xor
mov
and
cmpsl
loop
add
sbb
jmp
inc
insl
bound
adc
test
sub
inc
mov
sbb
push
in
aaa
divb
and
popa
pop
ret
clc
xchg
mov
add
dec
push
xchg
loopne
outsb
xchg
cmp
jmp
sub
enter
and
push
dec
pop
icebp
lods
mov
xchg
jmp
xchg
pop
cmc
int3
fistpl
inc
repnz
xor
cmp
mov
cmp
inc
loopne
push
pop
sub
jle
mov
dec
fbstp
sub
push
xor
fdiv
call
adc
mov
in
pop
inc
xlat
lret
mov
push
int
cmp
sar
imulb
fisubrl
add
xchg
lock
loop
dec
sub
out
jb
xor
ficompl
cmc
cmc
dec
rol
ret
add
outsb
mov
rcrb
mov
adc
nop
out
andl
and
mov
jl
je
cmp
jge
mov
test
xor
mov
test
and
adc
inc
xchg
sbb
jbe
lds
gs
sbb
cmp
std
add
int
cmp
rcl
rcll
sbb
les
cld
and
out
mov
lods
flds
mov
mov
aad
xchg
inc
cmp
cs
fndisi(8087
jae
loopne
and
sbb
xlat
fucomi
dec
and
ret
jle
xchg
and
pop
icebp
cwtl
and
cmp
in
scas
pop
and
bound
dec
fstp
push
lods
rcrl
cmpl
adc
dec
push
cli
aas
xchg
xchg
mov
subb
movsb
bound
ja
push
dec
loope
add
sub
push
cmp
ret
into
ret
jecxz
sbb
outsl
inc
in
divl
mov
fwait
ret
mov
sbb
mov
icebp
push
xor
cmp
xor
and
pop
test
pop
jle
ffree
test
cs
jnp
loopne
sbb
push
lea
add
movups
daa
ret
mov
dec
dec
and
xor
cltd
add
sarl
data16
add
aas
dec
adc
xchg
out
dec
dec
mov
sub
mov
aam
roll
jae
inc
sarl
pop
dec
pop
sbb
in
cmp
pop
xchg
xchg
arpl
jge
xor
pop
pop
push
test
popf
push
in
out
subb
jmp
mov
pop
and
jne
jbe
repnz
pop
loope
or
mov
faddl
ss
cli
or
xor
dec
push
sbb
je
sbb
cmpsl
xchg
dec
xchg
jmp
mov
cltd
stos
enter
scas
pop
jl
xlat
aad
xor
dec
add
mov
push
inc
dec
adcl
clc
jno
mov
mov
stc
dec
aaa
int3
and
push
push
inc
xchg
jg
ds
or
bound
adc
cmpsl
fstps
sub
loopne
stc
arpl
int3
data16
jl
lods
inc
or
jno
lahf
test
mov
add
xchg
ret
or
adc
mov
adc
cmp
fstpl
ss
xchg
inc
ret
or
or
xor
sbb
push
loopne
jns
mov
adc
dec
pop
push
aad
jae
sbb
scas
push
xor
mov
mov
mov
cli
adc
mov
ret
lret
out
inc
out
nop
pusha
in
xor
sbb
inc
loop
jo
adc
aaa
std
mov
push
push
dec
insl
dec
mov
bound
dec
push
pop
push
jmp
in
dec
movsb
imul
roll
out
cmpsb
rolb
lods
ljmp
push
mov
hlt
cli
pop
add
movsl
jbe
shrb
inc
jmp
jg
ja
js
hlt
xor
lea
or
and
fwait
orl
cmp
lods
lods
mov
ret
repz
mov
add
call
and
push
add
aas
xchg
mov
scas
cmpsb
adc
cmp
lcall
mov
or
sub
sti
sbb
ljmp
jmp
in
sub
adc
or
push
loop
xor
es
pop
lahf
jo
push
mov
and
dec
push
mov
jle
shl
mov
dec
xchg
js
dec
and
xchg
sbb
cmpsb
push
fiaddl
sbb
and
outsl
or
fwait
stos
and
dec
scas
push
shlb
jne
mov
mov
xor
pop
daa
mov
inc
aad
sub
ficoms
loopne
pop
nop
and
mov
inc
lock
xor
pop
push
adc
jb
push
adc
loope
cmpsl
sarl
jnp
inc
hlt
xchg
in
fwait
push
xchg
dec
fstps
in
jecxz
in
pop
outsb
popf
fsubrl
dec
out
jmp
jns
pop
stc
sbb
stos
inc
pop
outsl
mov
fbstp
fstpt
push
xchg
push
xchg
cmp
loope
mov
dec
outsb
lods
out
lret
daa
cmp
mov
pop
push
jl
movsl
inc
mov
jg
cmpsb
cmp
repz
jnp
adc
pop
mov
lods
xor
dec
les
fildl
lods
mov
out
xor
xchg
push
lods
mov
jmp
lods
jmp
push
out
push
jecxz
jnp
repnz
sbb
inc
add
xchg
andb
or
jecxz
pop
or
fstpl
dec
sbb
int
jmp
adc
adc
mov
xor
rcrb
and
pop
enter
cmp
test
negb
cmp
or
xchg
inc
adc
cmpsb
frndint
shrl
insl
es
sarb
shlb
mov
rcrl
xchg
leave
add
lods
popa
mov
lods
dec
xchg
in
mov
std
mov
pushf
movsl
sub
das
dec
scas
arpl
jo
int3
push
xor
ds
popa
negb
lret
xchg
inc
and
mov
push
or
ljmp
scas
test
fstpt
out
test
push
mov
int
das
imull
pop
pop
jp
adc
xor
xor
dec
push
dec
adc
stos
cmp
lcall
pushf
js
clc
sub
int3
shl
and
js
test
sub
lahf
cmpsl
pop
jbe
ret
jae
std
les
mov
into
pop
mov
call
xchg
leave
decb
sbb
repz
push
mov
mov
sub
je
out
int3
pop
test
cmp
or
lret
rolb
xchg
xor
dec
lret
sbb
dec
push
cmp
add
push
dec
dec
adc
mov
adc
rcrb
jmp
mov
cwtl
mov
sub
and
push
sub
icebp
mov
out
lods
sahf
rorb
cmc
adc
cmp
and
jmp
fistpll
jmp
test
xor
cmp
add
add
jb
mov
mov
jg
clc
mov
xor
scas
mov
pop
jmp
lds
out
mov
pop
jo
push
std
jge
jno
sbb
out
pop
fsubs
inc
add
adc
add
mov
xchg
jg
add
mov
push
notl
cli
sub
nop
test
mov
inc
xchg
and
and
jle
mul
lds
movl
rcrl
nop
adc
testb
test
mov
test
mov
xlat
cli
adc
or
insl
out
and
sub
imul
inc
xor
fisubrl
gs
jbe
inc
out
pop
jae
jns
fwait
data16
das
sub
lds
sub
cli
test
inc
vshufps
sti
imul
pushf
dec
mov
cmpb
mov
rcr
sub
mov
sahf
fildll
dec
movsb
xchg
in
jbe
stos
cmc
in
push
pusha
sbb
sub
lea
jno
cmpsl
jp
cli
or
lods
dec
jl
and
push
in
arpl
dec
mov
push
xor
loope
icebp
xor
sahf
and
jnp
fadd
out
sahf
ja
fbld
shl
push
mov
lds
loopne,pn
hlt
leave
mov
xchg
aad
idiv
jno
xchg
adc
pusha
xor
lods
iret
cmpsb
arpl
dec
lcall
mov
xchg
loopne
lret
movsl
and
adc
ret
xchg
ret
shrl
xlat
inc
mov
shrl
ljmp
imull
movsl
lods
push
shll
idivb
mov
mov
popa
dec
lcall
fistps
arpl
das
in
dec
or
test
mov
popa
aam
add
imul
ja
inc
push
mov
pop
dec
stos
insb
or
shlb
ret
xor
sbb
popa
xchg
sahf
icebp
mull
test
test
lahf
sbb
shrl
mov
rorb
test
ljmp
xchg
aaa
push
jl
fwait
or
pop
repz
add
idiv
leave
jmp
add
lds
test
mov
out
aas
inc
loop
arpl
add
enter
iret
jl
cwtl
push
test
in
mov
stc
cld
and
div
adc
addr16
aad
movsl
jp
jnp
ja
mov
in
inc
std
inc
ja
dec
sub
cltd
jo
test
imul
xlat
push
dec
data16
jb
dec
cltd
mov
xchg
mov
test
mov
in
insb
test
lods
push
pop
daa
ret
add
stos
cmpsb
or
xchg
shll
push
add
push
pusha
add
or
mov
inc
sub
in
mov
dec
lret
push
add
mov
filds
jo
mov
adc
dec
movsb
adc
fcomps
mov
mov
repnz
lret
push
outsl
jg
cmp
mov
jmp
cltd
jo
inc
mov
adc
dec
insl
mov
lret
test
roll
imul
fimull
roll
jbe
clc
mov
add
jl
rorb
or
in
and
add
mov
push
sub
push
sbb
jne
js
movsb
aad
jmp
rol
xor
and
sub
ss
mov
loopne
enter
or
dec
fstps
fldcw
or
ret
jne
lcall
mov
or
shrl
fnsave
lret
xlat
fs
stos
pop
divl
movsb
das
sbb
imul
mov
into
xchg
nop
mov
or
sub
rclb
cmpsl
andb
sub
sub
std
mov
outsl
rcl
adc
lods
push
mov
gs
out
or
mov
pop
dec
add
cmp
in
mov
popa
and
scas
popa
shll
stc
mov
mov
jg
popa
push
aas
imul
push
sub
es
cmc
and
mov
mov
jae
imul
sub
call
idivb
push
xchg
les
rcl
cmpsl
int
ficomps
xchg
shll
mov
or
imul
sub
xchg
mov
lret
ljmp
aam
inc
pusha
xchg
lods
pop
lods
mov
mov
dec
repz
repnz
nop
outsb
cmp
jge
xchg
mov
lret
jne
xorb
push
gs
leave
or
pop
and
dec
cmp
imul
push
or
mov
mov
inc
add
ja
push
rcr
jne
dec
outsb
je
pusha
cli
cmp
adc
xor
jg
int3
pop
repz
mov
lcall
popa
sub
sar
icebp
mov
add
ret
ret
aaa
cmp
ds
lret
negb
sub
cmp
add
aam
test
int3
mov
stos
test
sub
xor
inc
jg
inc
push
dec
xchg
cwtl
outsb
rcrl
aam
fwait
jp
sahf
dec
and
jne
out
or
icebp
out
outsl
mov
lea
mov
xchg
or
and
repz
pushl
int
cwtl
push
movsl
mov
pop
in
push
mov
sbb
jmp
dec
lds
stos
sub
dec
fistpll
inc
inc
pop
jl
shl
mov
mov
repz
or
xor
iret
inc
xlat
popf
enter
nop
ficoms
pop
pop
sub
loopne
sub
pop
loope
in
and
sbb
bound
std
and
and
aam
and
jne
pop
and
or
dec
jne
fs
lret
mov
jmp
pop
adc
cmp
push
dec
test
cmp
xchg
or
xchg
add
add
jp
push
sbb
jne
repz
sub
bound
xchg
push
sub
dec
adc
xchg
cmp
sub
or
pusha
lcall
jae
in
iret
and
pop
inc
bound
push
xor
or
aam
sarb
push
or
adc
loop
addl
mov
data16
pop
movsl
mov
das
sbb
shlb
stos
test
xor
and
mov
adcb
les
and
jae
pusha
lcall
push
pop
js
stos
add
imul
or
pop
xchg
cmp
push
lahf
addl
test
test
cwtl
int3
mov
imul
loopne
pop
mov
pop
mov
dec
mov
dec
add
rorb
push
and
loopne
xor
cmpsl
leave
xor
mov
mov
pusha
mov
xchg
xor
push
adc
stos
or
pop
jne
jns
mov
inc
dec
popl
mov
int3
movsb
jns
sub
jo
mov
adc
mov
sbb
dec
loopne
mov
sbb
test
jl
sub
sahf
mov
push
sub
data16
pop
pop
inc
xchg
fsubs
aam
mov
pop
push
add
pusha
clc
arpl
lret
scas
int
xchg
mov
sub
push
pop
dec
shlb
inc
std
call
xor
jmp
cld
xchg
cld
ret
pop
xor
mov
pusha
daa
out
test
inc
mov
xor
cmpsb
mov
pop
test
xchg
insl
xchg
je
xchg
xor
test
shll
inc
aas
test
mov
xor
daa
dec
adc
add
and
sbb
or
stos
addr16
sbb
nop
ja
pop
negb
icebp
shrl
jb
clc
mov
adc
adc
sbb
pushf
mov
into
pop
push
stos
ficompl
mov
fisubrl
fdivrp
xor
mov
in
icebp
mov
hlt
test
xchg
imulb
iret
add
cmp
cmp
aaa
mov
lea
mov
push
loop
in
xor
xor
adcl
xlat
sbb
pop
or
fwait
into
mov
jecxz
sub
out
rorl
lds
icebp
mov
and
xchg
cli
xchg
movb
cmpsb
in
hlt
idivl
fs
mov
cmpsl
push
dec
sbb
decl
stos
icebp
ss
mov
or
dec
xor
dec
pop
cmp
addr16
lret
inc
mov
sahf
and
mov
cmp
mov
inc
jne
aaa
imull
add
ljmp
ds
jb
in
and
in
jmp
in
xchg
and
inc
xchg
jmp
mov
cli
repnz
add
pop
sbb
arpl
ss
jge
ljmp
sbb
jae
data16
fs
neg
add
in
lods
or
out
popa
in
fabs
insl
mov
fs
aas
unpcklps
cmp
mov
arpl
pop
aas
jecxz
fld
fisttpl
mov
mov
gs
cmpsb
jp
sahf
xor
mov
mov
and
adc
enter
dec
fsubrl
sbb
lret
and
inc
inc
dec
lods
imul
fsubr
cli
jle
es
pop
je
jbe
aaa
mov
fisttpl
cs
jb
fadd
mov
je
push
sub
test
testb
sbb
mov
aad
and
sbb
test
sub
inc
ret
lds
lds
addl
and
dec
xchg
aas
rcrb
push
push
call
decb
push
cwtl
sub
dec
xchg
loope
xchg
test
sahf
lods
adc
mov
dec
and
push
mov
mov
sbb
insl
repz
roll
or
call
lret
adc
pop
lcall
mov
sub
sbb
xor
in
mov
pop
mov
mov
cmpsl
xchg
dec
es
in
loop
les
fsubl
cmp
mov
push
ret
movsl
pop
xchg
cmpsb
pop
inc
lock
inc
test
popl
mov
nop
stc
mov
test
jg
cs
loop
fbld
pop
sbb
cmc
add
das
js
xchg
mov
add
xor
rol
sub
xor
push
jno
shrb
fisttpll
adc
jl
loopne
repz
stos
xchg
aad
das
stos
pop
xchg
cld
xorl
rcll
push
sub
lret
adc
or
ljmp
mov
add
mov
dec
stc
divl
adc
mov
or
jl
xchg
loop
and
stos
int3
or
and
incl
sbb
out
cmpsl
sbb
mull
mov
pop
cmp
mov
js
xchg
pop
xlat
ljmp
pop
mov
ja
imul
pusha
push
dec
or
and
outsb
leave
dec
lret
push
xor
push
gs
sbb
addr16
fdivs
andb
shll
pushf
arpl
inc
shl
das
test
cmpsb
imull
dec
xchg
jnp
out
adc
gs
in
int3
adc
dec
mov
jne
out
jbe
jle
fdivr
imul
in
out
sub
push
mov
mov
cmpsb
cmp
daa
daa
idivl
dec
push
fdivrs
bswap
jl
lock
enter
sub
ja
lods
movsb
vpaddd
pop
jo
pop
loopne
xlat
nop
enter
popa
mov
mov
sbb
or
pop
enter
mov
insb
in
cld
push
lea
scas
pop
mov
pop
shrb
cmp
hlt
mov
jbe
inc
sarb
adcb
in
pop
fidivs
aaa
aaa
fs
pop
es
pop
fs
xor
mov
stos
data16
mov
insb
mov
pop
mov
or
icebp
and
mov
mov
inc
adc
jo
rcrl
xchg
jno
nop
mov
xchg
push
push
adc
pop
int3
ljmp
ds
cltd
int3
pop
dec
fmulp
scas
dec
mov
dec
cmp
push
jmp
nop
or
in
icebp
adc
inc
repnz
mov
sbb
push
pop
pop
inc
and
stc
push
pop
pop
add
shl
lea
es
xchg
jns
popa
test
xchg
sbb
ljmp
ss
aam
sbb
nop
xlat
cs
mov
ss
dec
outsb
lahf
pop
scas
rol
mov
lret
lods
int3
outsl
push
lock
outsl
sbb
ret
cmp
xor
pop
xor
xchg
adc
pop
or
lods
fsts
lret
rcr
outsb
jb
sub
pop
hlt
mov
xor
in
xor
scas
xchg
ds
cwtl
mov
adc
xor
cmpsb
jns
xchg
mov
xchg
inc
aas
mov
sbbl
lahf
outsb
stos
jns
fld
imul
jg
dec
pop
aas
loopne
pop
fldcw
pop
jg
jle
mov
push
outsl
mov
shrb
xchg
mov
dec
mov
pusha
shlb
insl
mov
ss
daa
mov
mov
dec
sbb
lahf
scas
popa
pop
sbb
and
xor
or
pop
cmp
cmp
jns
mov
scas
or
fdivrl
leave
addr16
rcrb
cmc
clc
push
lret
cmc
add
std
inc
inc
mov
mov
mov
js
repnz
cwtl
loop
rcr
inc
jg
repnz
stos
push
int
jne
push
push
imul
jns
jne
int
xchg
xchg
fisubrl
in
lret
xor
lods
arpl
inc
dec
mov
std
adc
dec
xor
or
dec
popa
push
dec
push
cmp
push
int3
popa
scas
mov
inc
dec
xor
in
imul
cmp
shl
into
mov
cmpsb
ss
sbb
inc
xchg
aam
push
adc
jge
movsb
loopne
adc
stos
ss
int
aam
ds
bound
lea
sub
cmp
jp
enter
gs
cmp
movb
add
gs
jo
imul
fwait
pop
jg
aas
lret
pop
roll
es
jmp
lods
add
cld
in
lds
sub
cwtl
adc
mov
or
cmpsl
ljmp
or
or
mov
mov
or
inc
cld
or
push
push
jle
in
pop
jmp
lea
paddb
pop
cwtl
popa
ss
scas
pop
addr16
mov
lcall
sbb
sub
icebp
mov
shll
ret
notb
test
or
incb
cld
push
fists
aam
or
subl
out
pop
mov
inc
shll
daa
es
jg
ljmp
ret
and
pusha
pop
push
int3
shl
sub
fisubrl
imul
out
jbe
outsb
dec
mov
cmp
lock
ret
adcb
aas
inc
or
es
dec
mov
mov
stos
stos
jno
cmpsb
outsl
call
xor
js
jecxz
or
push
ljmp
cltd
pushf
ss
xor
mov
jl
repz
and
cmpsl
test
aad
loope
add
sbb
loope
in
add
in
shrb
in
sbb
mov
insb
or
add
fdivl
ficoms
and
dec
out
mov
adcl
outsl
jnp
push
out
inc
lea
mov
dec
cs
sbb
shrl
rcrl
sbb
push
or
xor
test
rcrl
push
mov
jge
jne
into
pop
dec
jmp
ret
or
mov
int3
mov
paddsw
call
rcr
into
aas
or
imul
out
mov
mov
sti
mov
mov
test
jae
popf
mov
aas
sbb
or
sbb
sahf
jle
out
jne
mov
xchg
push
nop
ds
test
ffree
push
scas
or
jb
fisttps
test
sbb
and
jno
xchg
push
ret
xchg
aam
movsl
cltd
mov
lods
fnstsw
mov
sub
push
fldcw
dec
sub
fimull
insl
notb
mov
ret
mov
push
push
pop
sbb
mov
jle
mov
cmpsl
xchg
aaa
imul
sub
shlb
test
fdivs
or
xchg
cmp
xlat
dec
movsb
mov
rol
lock
pop
mov
and
cmp
mov
out
lcall
push
sbb
rcrl
cwtl
xor
stc
pop
mov
ljmp
sbb
push
mov
cli
outsb
in
test
mov
push
sahf
lcall
push
pop
pushf
loop
sahf
das
sub
repz
out
jne
jle
inc
outsb
leave
xor
push
and
cmp
adc
xor
adc
roll
addr16
cmpl
std
mov
jne
in
jno
out
loopne
pop
mov
push
sub
dec
add
mov
ljmp
test
cli
jb
mov
scas
imul
mov
cltd
lock
add
jg
sub
adc
cmpb
dec
rcll
arpl
jns
lock
lods
jle
push
adc
cmp
add
push
cmpsb
rcrb
in
pmulhw
insl
arpl
jecxz
cld
stc
mov
out
aas
mov
in
mov
fidivl
stc
adc
ljmp
iret
pop
sub
sbb
push
nop
testl
mov
dec
mov
mov
aad
add
jecxz
jns
cmc
sub
fwait
jp
arpl
xchg
leavew
push
hlt
sbb
adc
sub
dec
fildll
sarl
loope
xor
nop
cwtl
lods
mov
xchg
sbb
xchg
sti
jp
in
daa
fcompl
sub
mov
lods
jmp
cltd
push
popf
jecxz
mov
mov
push
test
sub
lret
loope
jp
cmpsl
into
cmp
pop
pop
int3
inc
dec
adc
and
fs
push
loop
lret
fwait
push
jp
ss
mov
arpl
cwtl
jns
inc
and
int
js
dec
out
and
sub
int3
add
ret
xchg
movsb
xchg
shlb
sbb
popf
nop
std
mov
dec
mov
push
cli
cwtl
imul
in
xlat
ret
push
fldt
add
xor
jle
xchg
add
lcall
jbe
sub
mov
adcb
mov
cmpsl
in
cltd
xor
popa
dec
fdivr
or
inc
lcall
repnz
push
mov
adc
xor
mov
lods
mov
jmp
adc
mov
pop
dec
daa
fnstsw
dec
pop
in
iret
add
aam
add
push
aad
push
cmp
ret
push
cltd
arpl
shlb
add
inc
mov
repz
in
push
inc
into
cmp
mov
xor
cli
repnz
imul
sbb
inc
sub
pop
dec
xchg
mov
cmp
mov
sub
inc
dec
cmc
jo
jo
mov
xchg
std
xchg
adc
xchg
sub
repz
call
movl
adc
inc
addr16
nop
fdivrp
shll
jg
out
dec
lret
add
jns
cli
mov
jmp
fisubl
imull
aad
addb
aaa
jmp
mov
mov
jl
lods
cmp
add
imul
cmp
mov
out
mov
or
push
cmp
pop
loope
fcmovne
jg
mov
xchg
test
sbb
pusha
mov
xchg
inc
xor
pop
mov
negl
xlat
js
in
and
fisttpll
dec
lret
jnp
dec
test
repz
andb
cmp
dec
cmp
mov
pop
int
call
lret
ret
xor
xchg
shl
out
aas
cli
inc
push
pop
or
adc
jb
iret
mov
repnz
xchg
mov
adc
push
movsb
pop
fstpl
ljmp
mov
mov
fisttps
es
pop
mulb
fidivl
inc
inc
sub
pop
adc
out
je
jb
das
fidivs
scas
mov
and
ret
mov
mov
addl
pop
test
mov
rolb
lds
pusha
jle
mov
lods
xchg
fidivrs
mov
mov
pop
push
sbb
ljmp
xchg
cmp
dec
daa
or
ljmp
arpl
cs
test
shlb
push
lret
mov
fwait
xor
sub
or
and
dec
insl
pop
and
or
mov
mov
hlt
mov
lahf
sub
mov
aam
cld
sub
pop
loope
neg
mov
cmc
notb
cmp
in
dec
shll
add
adc
cmp
inc
hlt
into
add
fistpll
push
fmull
js
bound
mov
mov
in
and
insb
popa
sbb
stc
cmc
cmp
mov
in
add
mov
rclb
jp
idiv
adc
aas
add
mov
or
push
xchg
mov
inc
inc
and
aaa
je
imul
push
test
and
sbb
out
stos
xchg
int
int
out
sub
bound
mov
lea
pop
shr
xchg
adc
sub
testl
popf
test
cmc
leave
cli
dec
lods
sbbb
adc
pop
jb
jns
jae
inc
in
icebp
inc
sub
inc
push
into
and
sbb
push
push
mov
repnz
call
pop
nop
in
enter
aam
adc
fsubrp
pop
js
ss
stos
mov
mov
sbb
int
jmp
mov
xorl
arpl
data16
mov
mov
push
lds
mov
into
pmaxsw
mov
ds
push
pop
sub
enter
inc
jecxz
clc
inc
into
add
inc
pop
mov
not
stc
xor
mov
inc
jbe
sub
lret
jmp
std
push
lea
mov
dec
shll
xlat
lds
in
xor
adc
cltd
add
je
orl
popa
aam
push
mov
pop
jno
xchg
insl
push
dec
prefetcht2
mov
hlt
fnstsw
xor
cmp
jl
add
add
adc
movsb
loop
rcrl
mov
push
aas
sahf
cli
sarb
imul
mov
mov
pop
insl
int3
or
orb
push
dec
push
mov
mov
std
pop
pop
mov
xchg
fisttpll
lods
xchg
xor
add
out
sbb
xor
jmp
or
dec
fmul
mov
js
mov
inc
movsl
test
mov
dec
sbb
shrb
inc
iret
push
inc
xorb
inc
pop
testb
or
out
cmpsl
sub
cmp
jne
jae
cmp
push
xor
neg
fcom
pop
mov
sbb
adc
int3
add
mov
add
lods
fistl
adcb
cld
popa
xchg
stc
lret
ss
cs
push
dec
push
leave
das
shll
mov
add
adc
movsl
dec
xor
cmp
xchg
jl
add
ljmp
sbb
lock
lret
into
lahf
push
dec
mov
aam
jge
fistps
repz
scas
or
adc
cmpsb
mov
inc
xchg
xchg
jo
and
xor
clc
and
test
inc
aaa
jo
sub
in
mov
inc
cltd
les
mov
pop
xchg
push
sub
lods
lahf
cmp
push
and
add
sub
or
and
cli
cmp
inc
gs
gs
inc
das
movb
or
shll
xor
lods
ljmp
fldenv
xor
xchg
jge
pop
and
pushf
pop
xchg
icebp
aaa
mulb
into
movsl
sbb
cld
mov
inc
ficompl
mov
jmp
add
aas
push
les
adc
adc
pop
mov
sub
shl
ret
xchg
ret
mov
leave
dec
in
popl
popa
pop
cmp
push
in
sub
mov
gs
loop
cmp
cmp
ja
mov
test
ss
mov
jmp
cmp
andl
sbb
cmp
cltd
fldt
call
cltd
cmp
ss
adc
imul
pop
imul
push
xor
xor
insl
xor
mov
addr16
test
adc
aaa
aad
pop
jae
pushf
jg
inc
mov
fs
sbb
mov
mov
mov
dec
cmp
ret
push
fdivrl
push
std
push
lcall
sub
sub
jl
xor
dec
push
push
fwait
cmpsl
cmp
popa
sarw
sub
or
cmp
xchg
adc
lods
cmp
xor
sbb
rcrb
jb
and
adc
sub
push
mulb
xchg
pop
dec
fiadds
enter
cltd
sbb
incl
xchg
dec
mull
adc
call
mov
aad
jb
mov
adc
bound
add
inc
movsb
ja
cli
jns
push
sub
push
std
clc
popf
jno
lock
add
xchg
pop
jmp
pop
sub
roll
xor
lahf
jle
test
mov
xchg
test
std
inc
je
jmp
mov
lods
mov
outsl
enter
mov
push
cld
mov
add
push
mov
dec
jg
lret
push
add
js
push
repz
mov
pop
fwait
repnz
push
jecxz
adc
pop
aaa
adc
mov
jecxz
cltd
push
push
adc
cmp
getsec
xchg
mulb
lods
lret
cmpsl
hlt
adc
clc
sub
push
fldenv
jp
dec
and
fldcw
ret
mov
enter
mov
in
lahf
cmp
stc
out
leave
fwait
adc
jl
xchg
insl
loope
inc
sbb
mov
int
xlat
sbb
xchg
ret
cltd
mov
sbb
fbld
idivb
mov
cmp
lret
in
xchg
imul
not
push
cmpsl
sub
fildl
xchg
lret
fnsave
dec
xor
add
mov
add
insl
mov
jnp
mov
mov
pop
and
loope
or
and
jb
xchg
push
stos
push
lcall
dec
jb
and
sahf
outsb
mov
addr16
mov
sbbl
jnp
jo
push
clc
loopne
push
mov
xchg
cmp
sti
pop
jmp
repz
or
dec
mov
pushf
rcrb
sti
push
lretw
mov
dec
push
mov
out
daa
cld
popa
cmpsb
push
or
stos
pop
lcall
fsave
addr16
add
mov
cld
lock
mov
aam
inc
xor
push
cwtl
mov
stos
stos
jle
sub
popf
lock
adc
push
sahf
add
dec
hlt
lret
fwait
in
dec
imul
in
fs
scas
jnp
cld
xor
dec
test
inc
push
push
push
sahf
out
cmp
icebp
inc
jecxz
pusha
jno
or
fidivl
mov
xchg
lret
addl
jb
inc
loop
mov
hlt
mov
pop
ss
loope
xchg
cmp
jbe
xchg
out
mov
xlat
mov
bound
dec
mov
xlat
push
xchg
inc
lret
filds
movsl
add
add
jne
sub
lret
cmp
push
cmpsb
xchg
enter
jno
mov
imul
outsb
loopne
jbe
cwtl
add
loopne
xor
lods
mov
xchg
cld
into
popf
out
jecxz
mov
push
mov
mov
or
movb
insb
push
jnp
popa
jmp
outsl
fucomip
int
push
sbb
inc
scas
cmp
rol
loopne
xor
xor
adc
repz
jbe
in
shr
lret
xor
hlt
imull
pop
pmuludq
sysret
mul
movsl
inc
testl
fs
or
fnsave
xor
sub
ud0
dec
mov
sbb
push
adc
add
hlt
sahf
cltd
push
mov
jg
out
push
popf
and
fists
mov
xchg
out
jle
mov
pop
int
xor
pop
and
ds
divl
inc
ja
popa
mov
sbb
int3
pop
jae
inc
xorl
mov
orb
ret
xlat
enter
inc
aas
adc
xchg
dec
nop
cmp
out
and
sar
cwtl
mov
ficomps
dec
mov
gs
jl
popf
inc
cmpsb
in
das
adc
js
push
daa
pop
inc
subl
enter
push
clts
dec
xor
adc
movb
sub
adcl
mov
push
and
sub
xchg
loope
and
sub
fdivp
jge
add
iret
outsl
push
test
ljmp
sub
call
in
jg
outsb
sub
test
ret
inc
adc
movsl
add
push
mov
push
lahf
jb
dec
jmp
aam
xchg
std
notb
push
icebp
outsb
add
pop
data16
lods
inc
scas
add
xchg
adc
stos
xchg
leave
stos
sub
popf
mov
push
or
loop
sbb
aaa
xor
push
repnz
arpl
or
iret
mov
jp
lods
mov
popl
push
jns
sub
rolb
scas
cmpsl
loop
shrb
pop
cltd
sub
push
mov
xor
adc
and
pop
push
jecxz
repz
test
xor
and
add
and
repnz
into
xlat
dec
push
pushf
fcmovnb
std
sbb
and
mov
in
lret
xchg
push
aaa
inc
mov
adc
mov
lret
sti
imul
hlt
xchg
mov
jg
adc
pop
js
jmp
iret
xlat
in
add
imul
sbb
inc
and
mov
xor
es
ret
jl
dec
iret
xor
not
jmp
sub
push
xchg
mov
cmp
test
leave
xor
fnstcw
pop
inc
push
fwait
sub
stc
jns
daa
test
jb
sbb
cmc
sbb
adc
add
scas
movsl
inc
xor
adc
fidivrs
mov
sbb
jae
arpl
fwait
xor
fnsave
jo
js
fldcw
xchg
or
enter
pop
js
xor
push
lcall
icebp
fnstcw
pop
push
mov
pop
sub
int3
arpl
xor
jo
and
enter
mov
cmc
sbb
jmp
inc
mov
cmovae
out
daa
sub
xor
mov
adc
sub
and
xchg
shll
adc
pop
roll
jno
out
mov
pop
shll
pop
movsl
das
xor
jbe
or
cmc
ljmp
jns
add
xor
sub
insb
daa
xchg
add
ret
xchg
std
mov
sbb
aam
call
icebp
dec
paddq
mov
adc
jg
out
mov
inc
pushf
ret
aas
cmpsl
insl
into
add
jns
lea
std
sbb
pop
xchg
or
cmp
and
sbb
out
adc
xchg
inc
adc
shlb
cmpsl
push
mov
lds
int
or
push
js
pop
hlt
or
jg
inc
lret
fldcw
decb
cltd
outsb
pop
mov
jmp
fsts
add
sub
cmp
cs
inc
roll
sbb
mov
cmpxchg
add
xchg
mov
pop
jecxz
mov
sarl
testb
adc
pop
jo
xchg
mov
push
pop
or
push
outsl
jecxz
sub
and
pop
sbb
scas
fmulp
mov
add
mov
jns
adc
jp
incb
test
mov
int
push
rep
stos
pop
sbb
int3
jnp
sbb
adc
cmpsb
adc
mov
std
xchg
or
cmp
leave
arpl
mov
xor
sbb
push
dec
mov
sbb
dec
dec
or
fcoms
stos
xchg
xor
jns
dec
mov
test
mov
aad
mov
push
fimuls
in
inc
leave
jne
das
iret
stos
pop
add
testb
inc
clc
xor
add
ret
inc
adc
cmp
dec
push
mov
mov
pusha
mov
stos
popa
shll
sbb
sub
mov
fisubs
or
shl
call
mov
cmpsl
push
mov
iret
rclb
out
sarl
pop
cs
aas
stos
push
lods
pop
sti
gs
sub
xchg
in
and
pop
mov
push
and
adc
ljmp
cmp
push
mov
sub
add
xlat
cmc
int
adc
hlt
shlb
fwait
push
or
cmc
cmp
dec
or
enter
repz
out
mov
arpl
enter
pop
xor
xor
sbb
scas
test
mov
mov
push
in
xchg
mov
aam
repz
jmp
mov
sti
repz
pop
xchg
push
sub
daa
pushf
inc
sub
adc
xchg
ret
mov
daa
ss
icebp
rcll
hlt
cs
mov
mov
out
push
sbb
iret
out
push
movsb
jns
add
or
or
mov
ftst
es
push
cmpsb
or
test
xchg
std
jno
sbb
mov
mov
jns
xchg
into
movsb
scas
lds
pusha
sbb
mov
push
in
nop
dec
push
mov
ljmp
shlb
cmc
pop
sbb
jmp
jle
stos
adc
mov
ja
and
push
pop
into
dec
cmc
sbb
dec
aas
loop
mov
pop
bound
push
leave
xchg
push
test
xorb
pop
lea
scas
in
ficoml
insb
les
sarb
jo
mov
pop
or
movsl
divb
fdivs
adc
stc
cmp
adc
mov
popf
loope
xlat
jnp
les
jb
adc
push
lcall
jg
adc
push
add
jge
clc
ret
into
out
cmp
je
into
lods
or
idiv
fiadds
cmp
fwait
jno
xor
cltd
lret
cmp
sbb
and
jne
push
out
and
sub
and
cmp
pop
jb
aad
cld
in
jns
iret
push
aad
dec
push
inc
or
xchg
ficompl
sbb
cwtl
sub
ljmp
arpl
enter
mov
mov
push
fmulp
push
pop
sub
notl
lcall
mov
rorl
popa
aam
jge
loope
addr16
xchg
add
mov
cmp
stos
es
xchg
jbe
lcall
addr16
push
and
push
fwait
jns
outsb
mov
imul
stos
cld
into
test
ja
ljmp
call
mov
mov
xchg
jl
das
xor
sbb
mov
sbb
push
adc
mov
sbb
sub
cmp
and
push
int
adc
fdivs
inc
pop
cmp
pop
xchg
iret
sarb
lds
xorps
mov
bound
lds
fmull
cwtl
sub
xor
aad
loop
shrl
stc
cmpb
addr16
inc
icebp
inc
filds
jmp
xchg
push
mov
xor
and
js
outsb
adc
repnz
stc
movsb
sar
imul
cltd
sti
adc
mov
xor
cmp
shl
sbbb
jno
insb
in
out
inc
add
mov
sbb
test
ds
aam
in
ret
inc
sub
scas
add
idivb
push
fnstcw
jnp
pusha
roll
out
adc
leave
mov
es
mov
add
sbb
mov
inc
mov
push
pop
mov
js
sbb
int3
push
mov
popa
mov
cltd
icebp
xchg
mov
pop
pop
ja
jecxz
popf
out
outsb
pop
popa
sub
inc
jno
xchg
xchg
ja
push
mov
rcl
xor
and
movsb
andb
mov
loopne
jp
call
inc
mov
imul
insl
sbb
xor
and
insl
les
add
pop
insb
lcall
cmc
popa
lock
imul
mov
fidivrs
lds
sahf
sub
daa
setb
mov
mov
xchg
fst
mov
xchg
sbb
pop
rcrl
cld
mov
cmp
push
jmp
insl
or
sbb
aad
aam
push
inc
dec
addb
mov
cwtl
push
test
es
pop
push
lcall
xchg
lea
iret
outsb
mov
jecxz
ds
shl
mov
and
or
clc
cld
pop
movsl
fmul
insb
mov
xor
add
push
jg
fdiv
mov
shrb
test
and
in
adc
sub
mov
jmp
fdivrl
out
adc
ss
shll
ljmp
mov
add
sub
lea
fmull
jae
xchg
ffreep
mov
ss
jg
mov
pop
cwtl
mov
jg
fwait
jae
mov
jo
lahf
imul
imul
or
je
loope
and
cld
xchg
sti
outsb
and
scas
lcall
fldcw
imul
push
inc
jbe
xor
adc
lea
mov
fimull
push
mov
cmp
pop
jl
sti
adc
mov
cmp
xchg
clc
fcoml
pusha
je
out
sti
clc
sub
aas
pop
out
dec
ss
repnz
sbb
and
pop
jecxz
pop
push
test
pop
divb
mov
jle
rcl
push
mov
add
das
or
pop
gs
add
imul
or
or
imul
xchg
xchg
mov
and
fs
es
into
jecxz
jg
push
jns
xor
or
ljmp
push
fadd
mov
arpl
mov
push
sub
leave
push
ja
jg
dec
rcl
add
cs
hlt
mov
ja
push
and
push
cmp
enter
cmpsl
mov
cmp
xorl
mov
push
adc
repz
inc
xorb
sub
pusha
pop
pusha
xor
mov
mov
mov
or
jne
jl
int3
mov
les
fistl
out
dec
ret
in
movsb
addl
mov
rcr
sub
mov
sbb
mov
mov
sarl
pushf
rorb
sub
fbld
fsubp
jg
inc
aam
out
shrl
test
mov
mov
push
shrb
dec
lods
ret
and
lea
jnp
sub
rolb
inc
xchg
cli
cwtl
push
subb
ja
dec
fisubrl
scas
mov
loop
pop
adc
lods
mov
inc
nop
xchg
rorl
cli
or
fcmovu
push
cld
test
icebp
jne
cmp
out
xor
mov
movsl
adc
fists
pop
ficompl
push
fs
mov
rclb
daa
out
out
jnp
add
pop
movsb
shll
test
sbb
push
clc
jmp
out
xchg
xor
xchg
insl
nop
or
call
pop
out
cwtl
add
test
fists
push
mov
mov
xchg
cmc
sti
dec
inc
loope
push
loop
pop
mov
cmp
add
mov
rcrl
test
daa
insl
aam
mov
cwtl
and
mov
jp
or
push
mov
stos
in
inc
mov
ljmp
adc
adcl
js
aam
popa
mov
and
cmp
xor
sub
xor
pop
inc
shl
inc
pop
jmp
lea
inc
test
sbb
xor
pop
out
inc
sar
and
scas
add
inc
adc
pop
loop
stos
insb
pop
lret
sbb
ret
leave
lods
mov
sti
sub
push
xor
inc
lods
mov
pushf
fsubrl
xor
or
pop
mov
xchg
les
shl
push
sbb
mov
aam
push
lahf
inc
inc
test
or
mov
stos
add
arpl
mov
aaa
dec
scas
fsubp
jg
rorl
scas
xor
pop
aaa
pop
test
daa
lret
sbbb
jnp
or
sub
scas
jb
dec
mov
pop
pop
std
cmp
les
xchg
bswap
in
mov
scas
je
sbb
pop
cs
int
adc
adcl
xchg
dec
leave
fwait
je
xor
pop
arpl
inc
or
test
sub
sbb
push
cli
mov
cmp
adc
jge
adc
xor
push
sub
push
xor
ds
outsb
popf
outsb
sbb
xchg
xor
iret
sbb
dec
mov
out
movlps
ficomps
call
and
clc
push
clc
cmp
enter
and
loop
and
jl
xchg
xlat
scas
cmpsl
xor
sbb
jne
sub
and
jne
or
popa
dec
lods
aas
cmpsl
jae
mov
or
mov
inc
rorl
push
mov
jae
fsubrs
dec
xorb
ljmp
or
push
jmp
jmp
notl
add
lods
das
hlt
xchg
andl
jns
popa
xor
out
repz
stos
nop
or
push
and
xchg
dec
pop
jbe
aam
cmpsl
jb
add
lcall
outsb
test
cmp
cli
add
or
repnz
lret
les
aaa
rorb
sub
jecxz
jbe
gs
pop
mov
pop
mov
xor
js
add
pop
in
mov
or
int3
add
cs
stos
mov
inc
leave
in
cmp
lea
adc
lea
push
add
xor
iret
mov
cwtl
and
push
sbb
data16
sti
es
fwait
sti
jno
sub
push
fcompl
inc
and
xchg
mov
das
adc
rcrl
enter
mov
xor
inc
daa
mov
jno
adc
adc
and
fs
sub
test
sbb
imul
mov
shlb
cmpsb
pop
stos
test
xor
mov
sub
jae
rclb
aaa
in
dec
ret
inc
shlb
mov
repz
jle
jno
lods
mov
push
push
adcb
mov
dec
mov
insb
inc
subl
inc
rclb
dec
xchg
cwtl
mov
push
push
dec
sbb
fwait
jne
pop
stc
push
cs
or
jg
cli
inc
lcall
jecxz
and
xor
pop
push
lods
movsb
divb
jno
ljmp
stos
fists
popa
jmp
mov
pushf
out
call
sub
or
aad
mov
xchg
jmp
out
stos
add
popa
ds
std
out
int3
in
jb
push
rcl
int
ljmp
mov
and
js
movsb
hlt
ret
jns
leave
dec
mov
repnz
inc
gs
cmp
es
stos
in
sub
jbe
sub
aad
iret
jo
sbb
sub
xchg
xchg
mov
popl
push
cmc
add
jecxz,pn
daa
add
mov
std
mov
xchg
cmp
pushf
test
jg
int
test
mov
nop
das
cwtl
pop
xchg
mov
lods
push
xor
int3
int
vpshufd
mov
psrlw
and
sbb
loop
loop
mov
int
xchg
arpl
sub
insb
push
inc
lds
add
jecxz
bound
adcl
adc
xor
xor
inc
or
xchg
xchg
cmpsl
data16
sub
mov
lds
dec
pop
std
iret
stos
es
stc
daa
fnstcw
lock
inc
mov
out
jne
mov
add
test
sub
mov
out
push
negl
andl
inc
dec
sub
and
push
popa
add
lds
add
fistps
js
cmp
mov
and
push
inc
push
sub
cwtl
dec
xor
and
sub
push
sbb
dec
mov
or
repz
and
sbb
dec
jp
mov
adc
dec
jecxz
sbb
in
sti
sbb
adc
mov
test
add
sbb
cld
cmc
lods
aas
scas
mov
xor
adc
sub
push
das
fldenv
mov
add
fdivrs
dec
imul
or
aad
insb
jmp
clc
mov
push
dec
add
pop
mov
xor
daa
jle
in
xlat
lahf
sbb
lods
adc
mov
jo
push
push
mov
xchg
mov
lods
mov
in
loopne
fisubl
inc
jle
out
cmp
mov
sbb
xchg
cmp
lcall
jo
add
xor
inc
movsb
out
mov
loope
fmull
lods
scas
lret
mov
dec
mov
push
cltd
mov
push
fsubrl
push
and
sbb
jns
test
cwtl
in
pop
jecxz
add
adc
and
popa
hlt
aas
add
dec
sbb
jmp
test
jmp
cli
mov
repnz
jno
aas
bound
movsb
push
xor
inc
pop
aaa
sti
aas
jns
fstps
xchg
test
inc
mov
and
insb
inc
xchg
lods
jl
test
in
adc
inc
mov
lcall
pop
add
aas
push
xor
test
mov
out
negb
inc
es
push
stos
mov
mov
and
cmpsl
jae
sbb
shrb
addr16
and
sbb
bound
sti
and
fisubs
xor
fnstcw
iret
fucomip
cmpsl
aas
and
notl
inc
sub
jg
push
xor
add
dec
fisubrl
or
jl
pop
aad
fs
add
mov
inc
into
inc
pusha
push
fimull
into
push
mov
mov
push
repnz
mov
and
xor
mov
push
shl
and
jno
aad
rclb
mov
pop
sarb
add
jnp
pop
dec
mov
cmp
or
inc
adc
stos
adc
push
pop
sub
bound
inc
jno
int3
sub
iret
loop
or
xor
or
pop
mov
cltd
xchg
scas
scas
sub
gs
out
xor
push
notl
and
xchg
pusha
jecxz
or
in
adc
lea
jbe
lods
rclb
cmc
xchg
pop
bound
jne
fcoms
push
xchg
and
movsb
repz
xchg
sbb
clc
cmp
and
mov
adc
cmp
in
pop
mov
js
and
xchg
cmp
xchg
bound
shll
stos
xchg
cmp
outsb
popa
stc
mov
dec
sti
push
or
dec
xchg
es
mov
adc
icebp
addb
rorb
ss
rcr
jmp
rcrb
and
pop
mov
dec
stos
andb
sbb
cltd
rcrb
jo
in
mov
mov
mov
and
mov
cltd
sub
addr16
cmp
ja
jl
mov
jne
push
mov
push
cmp
js
xchg
addb
mov
cmp
loop
mov
mov
mov
or
mov
jo
sub
mov
add
push
call
loope
sbb
add
insl
inc
add
cmp
and
loopne
mov
jo
movsl
fs
ss
dec
jbe
dec
add
pop
cmpb
jno
lahf
jg
dec
movsb
push
xchg
paddusb
movsl
das
and
es
and
and
push
mov
dec
outsl
xchg
data16
mov
and
adc
jae
mov
sbb
rcll
mov
push
and
testl
pop
ja
in
jg
push
rcrb
push
scas
inc
jne
aaa
and
and
dec
sbb
stos
scas
ds
add
cli
lret
jnp
cltd
fidivrl
imul
xor
idiv
sahf
sub
jb
mov
pop
xor
int3
clc
and
in
fcomps
fucomp
enter
shrl
fsubr
adc
xchg
in
sbb
movsl
mov
cmc
mov
pop
push
leave
cmp
xor
pop
pcmpgtb
test
in
adc
daa
cmp
outsl
xchg
fwait
mov
pushf
popa
cmpsb
cli
daa
dec
fs
pop
adc
aad
data16
cmp
les
push
mov
fmull
or
test
mov
jg
dec
rcrb
scas
xchg
jb
outsl
nop
dec
sbb
out
lods
xchg
push
add
inc
dec
in
fildl
mov
xor
cli
or
push
sbb
pusha
je
cltd
sbb
scas
std
jno
hlt
insb
das
mulb
inc
pop
loop
icebp
lock
inc
push
fwait
out
sbb
jns
xchg
and
pop
and
push
loop
stos
pop
xor
and
push
xchg
cmp
adc
mov
dec
call
icebp
and
mov
fs
lahf
into
adc
mov
xor
jb
loopne
cltd
adc
int3
xor
out
test
ret
xchg
jne
cmp
push
cmpsb
imul
pop
add
xchg
mov
fmuls
xchg
mov
ja
jl
mov
dec
adc
or
or
or
in
in
mov
sbb
gs
xchg
cmc
xchg
inc
divl
out
aaa
jle
call
or
inc
data16
arpl
popa
add
in
jnp
js
popa
inc
pop
aad
add
cmp
pop
dec
sbb
iret
jne
mov
mov
inc
sbb
stc
data16
dec
or
out
fs
jo
xor
stc
mov
or
sub
ret
insb
jmp
notb
inc
jp
adc
cwtl
call
jae
mov
rorl
les
and
and
fwait
aaa
insb
es
cmpsb
pop
ja
lods
shll
std
jno
scas
mov
fsubs
xchg
jge
add
in
sbb
lea
or
xor
mov
cltd
mov
nop
cmpl
clc
mov
inc
add
in
enter
scas
repz
jnp
cmpsb
sarb
lods
inc
xchg
pop
mov
push
out
pop
mov
imul
pop
ljmp
sahf
dec
cmp
in
lret
dec
and
icebp
mov
mov
shlb
movsl
adc
and
jp
in
lret
push
inc
movsb
pop
add
mov
sbb
call
jmp
and
push
mov
ljmp
mov
das
mov
add
adc
insb
or
push
pop
xchg
clc
xchg
test
pop
dec
sbbl
dec
fstpl
fidivrs
aam
in
addr16
movsb
test
leave
sub
dec
out
test
stos
movhps
cltd
pop
fs
pop
mov
es
and
testl
sub
mov
outsl
jmp
add
cmp
dec
dec
mov
sarb
pop
jb
fwait
out
and
ror
inc
iret
ds
not
dec
mov
mov
xor
fwait
das
sub
aaa
xchg
imul
inc
sbb
js
in
pop
out
mov
push
xlat
cmp
movsb
cmp
sbb
aaa
cli
out
data16
ljmp
xchg
out
jae,pn
ret
dec
pusha
xor
cmp
xor
sub
cmp
pop
into
adc
xor
mull
fnstcw
mov
sub
adc
add
loopne
stos
fisttpll
fists
xor
adc
mov
cmp
scas
push
pop
push
pop
jnp
hlt
mov
jb
pop
lods
aam
ss
bound
shlb
leave
push
fwait
pop
adc
mov
and
mov
les
call
aaa
mov
mov
jnp
sbb
jl
fldt
add
dec
mov
leave
pop
fwait
outsb
in
aam
cmp
pop
adc
cld
fnsave
dec
fimuls
lock
ja
loop
mov
push
notb
mov
mov
lods
int3
push
mov
les
xchg
scas
ficompl
jo
push
sub
scas
or
fisubl
in
icebp
mov
lds
adc
mov
rcrb
mov
sahf
or
fstp
jecxz
ja
out
xor
jns
add
pop
mov
push
movsb
mov
xor
push
fimuls
mov
add
adc
dec
inc
dec
out
pop
call
sub
mov
jg
jno
and
ficoml
repnz
int
and
popa
mov
jne
lock
pop
arpl
pop
and
test
xor
cmp
dec
dec
pop
inc
dec
cmpsl
clc
jb
lret
sti
sarb
pop
dec
push
inc
jnp,pt
fldl
outsb
enter
mov
pop
call
bnd
shrl
int3
cs
pop
adc
das
in
or
cmp
sbb
add
pop
ret
test
dec
and
mov
adc
push
inc
mov
xor
jg
aad
mov
int
aaa
jbe
push
dec
movsl
jp
mov
xchg
xchg
bound
sbb
sub
xchg
lea
imul
scas
sbb
ja
add
pusha
inc
pop
mov
outsl
loope
mov
dec
pop
cwtl
lods
pop
aas
lock
in
ror
jle
out
inc
bound
cmp
outsl
cmp
enter
cmp
out
push
je
lds
sbb
inc
sub
jl
mov
insb
in
jbe
mov
push
ficoml
pop
aas
cmpsb
add
aad
mov
fstps
pop
push
push
cli
xor
and
cmp
push
pop
lea
lods
or
add
jns
cmp
pop
daa
jle
fs
lret
jp
push
rcrl
and
js
mov
pop
repnz
lret
push
je
jmp
es
rcrl
je
sub
adc
in
dec
mov
loop
stos
add
add
into
or
fwait
mov
xor
jge
add
cmpsl
lahf
ss
test
sbb
ss
popf
shrl
push
mov
mov
std
jno
mov
push
outsb
inc
cvtps2pd
inc
pop
mov
pop
popa
jns
mov
sub
jne
push
test
inc
sti
scas
and
push
popa
ss
add
jb
cld
xor
out
adc
fcoml
jae
mov
addl
mov
mov
inc
mov
xchg
ja
inc
adc
mov
in
or
data16
rolb
sbbb
push
add
mov
jb
int3
dec
sbb
insl
lds
dec
push
push
insb
in
aaa
or
pop
imul
pop
cmp
inc
outsl
cmp
rcl
std
das
aaa
adc
in
in
addr16
es
scas
mov
cmpsb
or
cmpsl
loopne
notb
loopne
shrb
xchg
test
mov
sbb
jo
xchg
inc
mov
popf
in
push
mov
push
jns
dec
mov
sarl
shrb
cwtl
mov
lock
and
addr16
ljmp
scas
pop
jmp
out
jne
mov
sub
push
mov
ret
pop
cli
stos
jp
mov
popa
std
mov
xor
sahf
mov
mov
cs
cld
pop
mov
xchg
add
outsl
insb
cwtl
stos
ret
jp
fstpt
popa
inc
ja
ljmp
ror
sub
sar
cmp
popa
aaa
jno
les
dec
mov
xchg
jb
cs
mov
shll
fiaddl
pop
call
cmc
mov
add
les
cmp
inc
mov
cli
in
xor
jno,pt
jle
icebp
adc
jae
leave
xchg
mov
mov
and
dec
lods
jmp
pushf
or
icebp
pop
mov
gs
and
insb
imul
add
nop
je
data16
dec
lret
std
lods
ja
cmp
arpl
aam
push
dec
rcrl
push
fildll
and
mov
inc
or
mov
sbbl
fcomps
loopne
xchg
rcll
ret
imul
mov
sti
insb
sbb
adc
jp
std
shll
mov
sub
xor
dec
bound
push
ds
paddq
xorl
in
lahf
push
adc
sub
cmp
bound
sbb
aad
mov
hlt
sarl
or
sahf
rolb
mov
leave
mov
stc
pop
sbb
mov
mov
stc
lcall
fdivrs
xchg
sub
push
dec
sbb
aaa
das
cld
xchg
int
cs
cmp
adc
and
inc
sbb
sub
lahf
inc
enter
mov
nop
pop
movsb
mov
xor
mov
in
adc
push
sub
aas
mov
xchg
mov
das
xor
pop
xor
jge
mov
or
sub
in
ret
aas
jno
ljmp
jg
jecxz
adc
inc
insb
imul
js
stos
lods
ds
mov
movsb
ds
jne
pop
push
push
add
mov
js
xchg
mov
cltd
inc
aaa
enter
push
fimuls
sub
ret
xor
mov
cmpsb
jge
inc
inc
mov
mov
xor
dec
or
sbb
popa
push
xor
cmp
push
add
adc
decl
add
or
in
pop
xor
add
add
in
js
dec
mov
mov
pop
sbb
scas
jb
aaa
into
leave
sbbl
xchg
popl
add
in
in
aas
pusha
imul
sub
mov
sarb
jo
push
add
aad
rcrl
xlat
ss
ds
push
push
js
ret
jb
jno
xor
mov
xchg
sub
xor
leave
out
popa
inc
sahf
cmp
pop
or
sahf
in
inc
js
push
add
add
repz
adc
int3
xchg
cld
push
roll
shl
out
mov
add
mov
lahf
test
mov
push
jl
leave
in
jbe
pop
dec
mov
push
hlt
stc
add
and
mov
push
jmp
push
and
hlt
mov
pop
imul
arpl
or
dec
jp
pop
int3
push
xor
inc
inc
mov
insb
mov
xchg
sbb
insl
pop
rorb
and
call
icebp
js
popa
adc
pop
mov
mov
xor
xor
push
pop
cmp
repz
cmc
fsubr
xchg
xlat
pop
iret
and
or
popf
xor
push
ljmp
cs
xchg
xchg
add
push
fs
mov
ds
or
sbb
jno
jns
mov
mov
loopne
cmp
les
dec
sub
xor
mov
aam
cmp
and
fs
pop
daa
mov
outsl
sbbb
inc
adc
pop
pushf
xchg
and
inc
std
sub
sbb
pop
inc
ja
mov
pop
out
imull
xor
jne
sub
jg
sub
enter
adc
mov
dec
inc
or
add
inc
aaa
xchg
lods
stos
repz
sub
jns
ds
cs
outsb
jecxz
fdivs
jns
in
ret
imul
mov
push
popa
std
je
pop
and
aaa
je
cmpsb
mov
cli
dec
xchg
pop
pop
es
enter
dec
sahf
cld
jbe
mov
insl
dec
and
sti
shr
in
pusha
pop
insl
inc
sub
pop
dec
lret
or
daa
add
stos
ss
sbb
mov
push
sub
shrl
jecxz
mov
cmp
jmp
cld
jg
imul
fcoms
test
movsb
xor
aaa
cmc
test
sahf
xor
mov
aaa
repz
and
cmc
scas
lcall
sbb
scas
mov
xor
outsl
dec
mov
loopne
out
mov
imul
cmp
fisubs
push
js
pop
inc
push
dec
jo
inc
mov
dec
popa
les
mov
inc
jmp
cli
sbb
in
leave
xor
loope
pop
clc
cmc
shlb
aas
mov
mov
std
add
dec
movsl
in
lret
inc
cmp
shl
bound
xchg
xchg
mov
fdivrl
movsb
ja
sarb
movsb
adc
xor
lcall
in
roll
sbb
test
fldcw
in
or
push
movsb
xor
sbb
xchg
fcomp
xchg
xor
jnp
hlt
push
pop
lea
jmp
dec
cli
daa
jb
cmpb
mov
dec
push
sbb
push
lds
inc
scas
and
rdtsc
sti
sbb
cli
push
mov
insb
or
loope
cmp
in
mov
imul
pop
jo
int3
sub
mov
icebp
pop
out
jbe
sbb
call
fwait
push
mov
test
mov
fdiv
movsl
cli
adc
rclb
clc
cmp
dec
cltd
xor
lds
xchg
leave
es
xchg
into
fcoms
movsb
add
and
aaa
loopne
cmp
fsubrp
mov
sbb
push
scas
in
insl
pop
fisubrs
das
jae
dec
shr
add
xor
xchg
std
jo
insl
jl
and
jb
push
lods
fnstenv
int
and
mov
dec
stc
sub
jne
pop
bound
fstpt
pusha
nop
jp
xchg
pop
pop
call
aad
sbb
ja
xchg
scas
adc
std
out
and
sbb
in
mov
cmpsb
dec
push
push
inc
test
out
push
jg
mov
out
cwtl
cmp
mov
cld
addl
mov
ljmp
push
daa
mov
xor
cmc
add
out
add
push
test
std
aas
xor
leave
pop
mov
mov
pusha
scas
shlb
lods
inc
repnz
mov
push
bound
xor
repnz
dec
aas
mov
mov
popf
xor
decb
aam
hlt
mov
push
dec
bswap
jae
jns
aad
pop
sbb
ret
cmp
jmp
test
shlb
inc
sub
mov
dec
mov
inc
push
push
movsl
hlt
cwtl
push
hlt
into
icebp
jle
test
mov
or
shr
int
rcl
daa
daa
jge
push
adc
and
lret
xchg
xlat
mov
xchg
dec
xchg
xor
cli
sahf
sahf
arpl
int3
pop
xchg
xor
loopne
cmp
xchg
mov
lahf
pop
mov
inc
ljmp
jbe
ja
stos
jb
mov
clc
pushf
pop
sub
movsb
mov
stos
sahf
mov
mov
cmp
lods
arpl
mov
dec
inc
gs
dec
jns
popa
xchg
xchg
in
loopne
cmp
sti
cld
scas
and
ds
scas
xchg
loopne
jmp
mov
or
jecxz
push
in
mov
push
mov
dec
lods
rclb
jns
xor
lods
push
jb
and
repnz
mov
xchg
cmp
mov
iret
fdivl
cmp
sbb
cs
pop
mov
test
jmp
fisttps
mov
jnp
lds
cmp
hlt
sub
dec
lret
je
jne
frstor
pop
adc
cld
dec
fcmovnbe
mov
imul
rorl
push
mov
mov
sub
popa
push
mov
subl
lahf
orb
lds
sub
loope
mov
xor
cmpb
adc
mov
push
cmp
fcom
fmull
clc
mov
adc
dec
xchg
mov
mov
cmp
imul
mov
push
loop
lcall
mov
pop
pop
in
or
cltd
rcl
cli
aad
test
fcomps
push
sbb
stos
pushf
pop
clc
xor
inc
adc
cmc
mov
xor
and
xchg
push
lods
les
xor
scas
pop
or
mov
movsbl
inc
movsb
lcall
mov
add
in
jo
mov
add
jbe
arpl
aas
lcall
out
xor
sub
adc
loope
add
push
cltd
mov
dec
fwait
push
cmpsb
mov
into
mov
mov
adc
test
adc
repnz
adc
inc
pushf
jmp
aad
inc
int
jnp
sti
push
insl
cmp
adc
sub
push
and
xor
xor
jbe
test
xchg
add
push
sub
push
mov
mov
or
mov
testb
popf
rolb
cmp
push
push
push
push
test
push
adc
and
insb
cs
movsl
mov
cmp
rol
push
mov
lret
push
adc
sub
testb
ds
push
mov
sub
jecxz
jne
inc
mov
add
and
mov
jb
mov
jne
xor
inc
pop
jecxz
adc
sbb
mov
fs
adc
push
rol
dec
movsl
jecxz
outsb
aas
xor
sbb
mov
push
pop
jge
push
rcrb
jge
cmp
pop
xor
lret
int3
lcall
jge
sbb
neg
pop
adc
mov
push
scas
fsts
pusha
xor
movsb
mov
mov
in
xor
jmp
lock
test
test
das
mov
add
fistl
mov
ja
mov
push
mov
cmp
or
push
add
ret
inc
xor
sub
int
or
cld
int3
xchg
loope
dec
add
ja
les
outsl
xchg
inc
ret
imul
lock
rcr
bound
xchg
dec
arpl
adc
sahf
xor
test
dec
lahf
dec
sub
stos
and
add
std
xor
mov
aad
lock
daa
fisttps
daa
sbb
cmp
stos
test
scas
inc
ds
lret
aas
aas
sub
adc
jbe
pushf
push
dec
pop
xchg
lock
jecxz
loop
jo
out
xor
in
into
scas
jns
bound
roll
or
scas
or
pop
or
push
cmpl
repz
in
pop
add
dec
loope
outsl
pop
and
push
add
dec
jmp
lods
push
xor
push
jno
mov
sub
mov
cmp
lret
mov
mov
stos
dec
popa
cmp
jmp
inc
jge
mov
sub
fcom
cli
push
aad
cmp
mov
fs
mov
and
pop
loop
rorb
rol
adc
pop
cmp
daa
or
lea
out
and
add
push
inc
lcall
pusha
insl
xchg
push
pop
arpl
pop
and
jle
or
fimuls
push
ret
popf
shll
pop
pop
pusha
cli
push
pop
cltd
sub
jmp
mov
sbb
popa
xor
xchg
fists
sbb
lret
rclb
cwtl
pop
adcl
cmp
adc
dec
test
push
cmp
add
inc
inc
ss
mov
adc
dec
popf
cltd
out
out
dec
js
dec
popf
mov
aad
ret
sub
clc
sub
or
pusha
mov
in
dec
lea
loopne
lds
cmc
add
pop
cmp
and
dec
fsub
push
sti
xchg
test
popl
mov
nop
movsb
fldl
cmp
ss
add
push
dec
das
rcrl
pushf
cmc
sbb
sub
fcomip
inc
mov
mov
push
js
out
sbb
cli
fistpl
enter
adc
int3
mov
mov
lock
sbb
je
jmp
add
mov
mov
out
rcrl
dec
jp
movsl
ret
mov
insl
and
adc
jns
jp
aaa
movsl
leave
inc
mov
mov
or
sub
std
insl
sub
ds
mov
cmpsb
cmp
push
leave
adc
or
int3
addb
adc
mov
adc
fdivs
sbb
lds
pusha
notl
add
dec
sub
sbb
and
test
scas
out
jnp
and
mov
iret
add
jae
int
out
xor
loop
pop
push
add
sbb
gs
aam
sbb
jbe
jecxz
inc
bnd
cmpsb
xor
icebp
mov
mov
or
push
mov
clc
es
mov
test
ljmp
shrl
cs
push
push
sub
fdivrl
repz
cmpsl
pop
xor
rorl
jle
test
or
neg
data16
pushf
cmpsb
js
sub
jl
push
lods
fwait
jbe
adc
pop
jle
dec
pop
cli
add
dec
add
sbb
test
int3
or
or
cmpsl
filds
mov
lock
xchg
enter
lock
fcmovnu
mov
cmc
popf
lahf
sub
les
test
sub
inc
xchg
inc
sbb
loop
push
mov
xor
cwtl
jge
or
push
jns
lcall
xchg
cmp
pop
push
les
mov
sub
jp
test
in
stc
rol
pop
sbb
gs
loopne
stos
bound
xchg
bound
cmp
dec
adc
movsb
test
dec
jbe
pop
fistpll
mov
jno
jbe
push
dec
sub
mov
adc
pop
push
jb
addb
call
jae
dec
aas
sub
push
pop
push
fsubrp
sub
mov
push
xor
mov
add
ljmp
movsl
jle
mov
hlt
cmp
adc
jl
outsb
sub
rcrb
enter
movsl
pop
sub
sub
sahf
add
out
or
mov
scas
addr16
xchg
pop
int3
jge
aam
sahf
xor
or
test
jno
inc
push
int3
jb
loopne
add
fnstsw
and
lea
jp
mov
popa
and
sbb
cs
add
add
into
stos
jge
stc
sub
ret
movsl
cmp
ja
lock
fisttpl
or
lods
inc
jecxz
pop
popa
test
insb
adc
mov
inc
mov
add
sub
jmp
and
faddl
xchg
push
out
sti
repz
pop
pop
test
stc
and
push
and
push
push
ja
movsb
ret
or
rcll
pusha
shll
into
and
mov
xchg
div
in
push
add
dec
out
inc
sti
push
inc
push
sbb
stos
jns
adc
adc
mov
sub
xor
outsl
push
inc
in
push
sub
loopne
lods
roll
mulb
fbld
enter
add
sub
and
movsb
leave
ret
pop
sub
mov
ret
or
sub
mov
mov
inc
push
stos
mov
jbe
jo
lock
inc
and
sbb
dec
mov
jae
cmc
jae
out
nop
gs
sub
shrl
andl
out
icebp
test
cmp
xchg
push
push
clc
push
sbb
enter
rorl
pop
sub
xor
stc
clc
mov
jae
mov
dec
cs
mov
outsb
bound
cmpsb
push
das
cmp
push
hlt
xchg
mov
add
fdivr
inc
add
cmpsb
std
mov
ret
mov
ds
popa
ja
add
mov
mov
pop
sub
lahf
clc
aas
sbb
lods
xor
mov
scas
xchg
add
out
xchg
aas
or
push
mov
jg
cmpsl
dec
les
inc
jle
imul
adc
cmp
scas
pop
ja
in
cltd
xor
shrb
lea
mov
sub
cld
jae
loopne
xchg
pusha
dec
and
jnp
pop
xchg
adc
popf
adc
cmc
aam
push
cmpsl
idivb
pop
aam
adc
inc
xchg
cld
xchg
or
repnz
mov
xchg
in
pop
dec
outsl
insb
sub
les
cmp
cmp
mov
es
dec
pop
repz
cs
sub
mov
jne
sbb
out
addr16
orl
pop
dec
jecxz
sbb
int3
xchg
cmp
pusha
jbe
xor
lods
mov
in
outsl
pop
fnstenv
aaa
lret
iret
pop
aam
xchg
xlat
lahf
out
js
pop
popa
pop
adc
outsl
inc
jl
dec
fwait
jmp
fcomps
leave
mov
jl
int3
outsb
scas
loopne
std
pop
mov
jge
push
mull
out
mov
icebp
ret
sbb
cmpsl
aaa
mov
cmp
adc
push
popf
push
stos
or
or
or
pushf
dec
xor
push
sub
jbe
cmp
ret
sub
dec
cmp
sub
mov
mov
stos
cmp
dec
arpl
imul
dec
andl
mov
ja
movsb
mov
andl
mov
mov
scas
sub
adc
popa
dec
mov
stc
sub
cmp
push
jne
mov
insl
aas
loopne
mov
aam
in
jge
mov
xchg
sbb
leave
jg
loope
xchg
jmp
inc
xor
and
adc
pop
int
dec
int
adc
mov
xchg
add
xor
pop
mov
jmp
fxch
aas
cmp
pop
mov
adc
and
pop
pop
ds
xchg
sub
adc
aam
lock
fstp
inc
xchg
dec
add
xchg
popf
inc
cwtl
fidivl
push
sarb
or
roll
xchg
push
mov
inc
mov
jg
adc
icebp
dec
dec
mov
adc
sub
mov
sbb
mov
or
mov
fbstp
cmp
gs
mov
call
add
aaa
out
repz
jge
mov
ss
jo
addl
bound
dec
in
enter
jle
inc
mov
lock
lret
mov
mov
mov
and
mov
jecxz
shrb
lods
sbb
xchg
enter
mov
roll
add
and
mov
cvtdq2ps
cmp
mov
or
sbb
cmp
sbb
lret
leave
or
push
inc
adcb
in
add
js
sbb
pop
adc
push
adc
cmp
add
cs
outsb
aaa
or
mov
divl
clc
insb
inc
pop
xchg
lods
push
jne
push
adc
lea
dec
out
cmpsl
fldenv
shll
mov
mov
ret
aam
mov
jns
sbb
pop
adc
cmc
sbbl
mov
inc
jp
iret
dec
pop
dec
fnstsw
or
jle
mov
lds
and
sbb
pop
les
inc
xchg
jmp
aaa
jbe
ds
cmp
test
jo
mov
cmpsl
pop
test
jbe
aas
or
xchg
aaa
jb
push
fbstp
mov
cli
xchg
inc
mov
sbb
leave
adc
aam
xor
xchg
mov
cmp
pop
daa
xor
pop
icebp
dec
or
insb
fsubl
xchg
mov
fs
fldl
aas
jo
dec
in
mov
push
dec
pop
pop
or
insl
aad
or
repnz
push
out
mov
scas
pop
and
call
add
stos
xchg
arpl
fs
fnsave
out
mov
xor
pop
lret
int
lret
jmp
cmc
push
and
or
ret
ljmp
sub
mov
sti
sub
sbb
push
cmc
jecxz
pushf
call
dec
push
adc
and
dec
pop
out
pmaxsw
mov
inc
ss
pop
cmp
stos
fsub
int3
xchg
js
xlat
loope
loop
jl
push
xor
cmc
jecxz
or
pop
push
fs
mov
push
mov
or
rol
inc
pop
fsts
sarb
adc
xchg
pop
xchg
jbe
push
dec
pop
ficoml
test
lahf
pminub
ret
mov
push
and
sbb
xor
ret
cmpsb
stos
sub
arpl
call
pop
out
and
lods
sbb
pop
inc
pop
sbb
sarb
dec
cltd
iret
sbb
nop
fsts
test
jg
arpl
loope
test
push
push
inc
jmp
mov
popf
test
in
ljmp
sub
addb
cmp
pusha
add
mov
adc
xchg
lods
sti
js
shrl
fisubrs
cmc
pushf
add
in
rorb
sbb
push
jae
scas
in
movaps
rcrl
jb
push
xor
pop
cmp
movsb
dec
xor
inc
clc
mov
pop
pop
ss
movsl
testb
ret
into
xchg
fstpt
lret
cwtl
cmpsb
xor
or
mov
outsb
sbb
fidivl
fadd
mov
add
mov
repnz
mov
jnp
dec
or
aas
or
jae
pop
mov
sub
cld
and
lods
push
push
cld
jnp
xchg
sub
mov
mov
filds
stc
mov
dec
stos
cs
repz
in
scas
ret
inc
adc
ja
and
dec
jns
negl
mov
xchg
push
mov
fldenv
loop
inc
xchg
and
jl
repnz
out
fldenv
pusha
mov
fistpll
mov
sub
add
push
addr16
divl
pop
dec
dec
push
mov
pusha
jne
push
lods
push
fisubrl
arpl
mov
stos
add
pop
aas
xchg
or
daa
jns
mov
es
pop
lcall
iret
out
add
dec
movsb
leave
bound
stos
fwait
imul
and
cs
scas
sbbb
cltd
sbb
jl
dec
xchg
dec
scas
push
pop
and
or
mov
sub
or
pop
add
jne
inc
sti
xor
adc
push
add
xchg
mov
dec
ficomps
push
fisubrs
std
cmp
and
jg,pn
mov
stc
stc
jnp
scas
push
clc
jle
jge
adc
mov
es
movsb
addr16
dec
pop
xchg
xor
jbe
rcrb
ds
xor
jb
mov
out
cltd
andl
movb
ret
xor
call
add
jle
pop
mov
and
loope
sub
jne
adc
push
iret
test
cmp
cmpb
frstor
movsl
cmp
adc
test
push
out
loopne
pop
jo
xchg
or
cmpsb
and
push
lock
lahf
aaa
inc
repnz
or
dec
push
mov
mov
xor
fcmovnu
fld
mov
push
into
dec
cmp
add
cmc
clc
imul
and
push
les
cmp
inc
les
rorb
lock
data16
mov
inc
ljmp
jnp
fucomi
jbe
cmp
or
jmp
iret
jg
ret
insl
add
mov
jl
add
xchg
leave
xor
das
rcr
loope
or
sbbb
fcmovnu
jp
mov
sbb
jge
cmpsb
inc
sub
pop
gs
and
push
jmp
mov
xchg
outsb
pop
bound
dec
mov
loopne
cmp
in
pop
jmp
dec
shl
stos
mov
sbb
les
call
push
adc
loop
leave
js
mov
popf
mov
icebp
in
rclb
pop
test
test
cwtl
xchg
dec
jnp
cmpsb
dec
into
inc
jge
adc
inc
pusha
cmp
aam
xor
out
pop
icebp
dec
dec
mov
xor
repz
icebp
add
fnsave
sahf
fcmovnbe
in
aad
sbb
rclb
lea
pushf
mov
mov
mov
sub
mov
xchg
xor
xchg
add
data16
mov
cltd
push
sbb
xchg
jp
popa
jecxz
push
pop
inc
pop
ljmp
cs
push
mov
cld
mov
or
jecxz
sti
push
push
out
bound
shl
movsb
jbe
scas
push
and
lahf
lret
scas
xchg
out
sbb
mov
int3
in
icebp
aaa
adc
imul
loopne
mov
xchg
push
cmpsl
mov
pop
mov
test
jg
fs
xor
cmp
mov
inc
jp
fistpl
or
clc
dec
pop
imull
sahf
dec
movsl
add
mov
decl
stos
or
push
aas
xchg
fsubs
fcomi
rcrb
and
push
fbstp
or
adc
sbb
into
cmp
and
cmc
pushf
std
mov
adc
movl
and
mov
inc
hlt
iret
sahf
shll
dec
cmpsb
cltd
add
repz
cmpsl
add
aad
fs
std
push
mov
inc
sbb
lock
into
call
mov
jbe
or
adc
inc
ret
cmc
jo
inc
mov
inc
mov
inc
cmp
stc
leavew
push
cmp
sbb
dec
sti
stc
insl
push
inc
or
xlat
mov
sub
inc
push
pop
sub
sbb
add
nop
push
mov
adc
ss
cltd
push
mov
mov
mov
das
pushl
fucomp
and
mov
mov
mov
push
rcl
mov
dec
adc
mov
pushf
cmp
pusha
imul
pop
cltd
mov
mov
dec
dec
mov
loope,pt
test
les
clc
lret
dec
sub
insb
repz
arpl
fnstsw
xchg
dec
ja
mov
jecxz
repz
mov
lret
push
push
sub
xor
shlb
outsb
loopne
ljmp
arpl
mov
lods
ret
cltd
out
pop
fistpll
push
pop
xor
sbbb
sbbl
pop
jbe
cltd
jno
mov
inc
push
dec
mov
icebp
dec
add
mov
outsl
or
sub
sub
mov
adc
into
clc
bound
pop
pop
jo
dec
popf
lock
xorl
cmp
inc
pop
js
pop
jbe
andl
xlat
push
fdivl
pop
push
cmp
and
pop
ljmp
and
mov
ljmp
sub
or
std
jnp
loopne
cmpsb
adc
sti
sbb
iret
sub
call
fstps
mov
inc
decb
adc
andl
out
push
mul
loopne
or
adc
pop
xchg
inc
jbe
out
push
lds
cmpsb
jmp
sbb
jecxz
push
inc
xlat
cmp
dec
add
xchg
fdivrl
xchg
sub
and
cs
push
jb
into
sbb
push
push
pop
pop
arpl
test
gs
inc
addr16
mov
fdiv
lcall
shrl
fistps
sahf
push
and
xorl
ljmp
sbb
xchg
mov
or
popf
push
jnp
imul
ljmp
into
inc
aas
sbb
push
outsb
inc
addr16
int3
sbb
add
lods
test
scas
sarl
data16
ss
mov
call
ret
popa
nop
inc
in
sarb
xchg
loopne
and
addr16
xor
mov
push
cmc
mov
adc
xor
popf
in
sub
lea
loope
adc
jb
xchg
repz
sbb
mov
cmpsl
xor
enter
add
adc
add
aad
pop
push
mov
jmp
cmp
clc
ror
adc
jae
and
stc
mov
sub
in
mov
test
in
in
or
jnp
and
or
sub
mov
sbb
sbb
movsl
xchg
dec
cwtl
push
pushl
scas
mov
clc
jb
mov
dec
or
popa
adc
idivl
in
cltd
adc
jbe
scas
jg
movsb
iret
push
je
or
je
dec
js
mov
dec
pop
fsubrs
mov
jb
stos
mov
popf
pop
or
cmp
jp
xchg
push
sbb
orb
sbb
inc
jge
fistl
movsl
and
decb
lock
sub
rolb
in
enter
sbb
mov
mov
popa
jle
inc
mov
push
add
movsb
repnz
inc
push
or
aam
popa
inc
addr16
jmp
mov
insl
call
push
xchg
xchg
inc
cmp
mov
pop
cltd
stos
cltd
fistl
mov
sbb
gs
or
cmpsl
pop
cmpsl
out
or
and
cmc
loopne
rorl
sbb
pop
gs
push
movl
push
daa
push
bnd
iret
adcb
fidivl
insb
mov
pop
add
das
inc
inc
pop
jnp
push
lock
adc
xchg
das
loope
inc
and
jno
and
and
pop
cli
enter
dec
in
daa
and
xchg
fiaddl
fdivrl
aam
adc
lods
dec
add
dec
dec
roll
mov
leave
test
adcl
xor
xor
mov
daa
leave
cmc
iret
mov
gs
pop
or
add
dec
cmp
outsl
xchg
stos
clc
push
adc
subl
stc
repnz
out
jp
mov
add
mov
dec
cmp
mov
sub
lret
imul
ljmp
repnz
mov
test
roll
xchg
jae
icebp
xchg
inc
inc
ja
adc
ret
nop
push
pop
testb
push
mov
mov
call
ret
pop
aas
mov
mov
and
icebp
out
xchg
cmc
sbb
xchg
das
int
push
push
iret
push
mov
mov
icebp
repnz
inc
add
enter
push
stos
push
inc
sub
imul
push
shrb
dec
add
es
xor
inc
fcomp
lcall
push
fsts
in
lahf
repz
shll
mov
add
mov
repnz
add
xor
sub
stos
cwtl
cmp
cwtl
cmp
adc
repz
pop
xchg
jmp
aam
pusha
lods
push
and
enter
cmp
add
sbb
cmp
mov
sub
repnz
mov
inc
xchg
adc
xorb
mov
fcmovne
or
mov
or
aad
xchg
pop
jnp
out
clc
dec
mov
pcmpgtb
mov
leave
xchg
mov
xchg
fsubl
aad
insb
outsl
pop
xchg
in
nop
test
push
imul
push
pop
adc
mov
test
lea
xchg
addl
mov
js
jp
in
mov
rolb
dec
in
xor
xchg
add
mov
xchg
adc
lock
jp
cmpsb
stc
push
fidivrs
push
mov
sub
push
push
and
lcall
scas
js
mov
xor
cmp
sub
or
ret
dec
lock
cltd
outsl
push
imul
mov
mov
mov
in
sbb
inc
jg
sahf
pop
mov
aad
insl
lods
xchg
push
push
inc
xchg
jno
fcomps
pop
mov
mov
cwtl
jge
ror
dec
in
push
and
dec
mov
fistpl
lea
fnsave
popf
mov
nop
je
dec
in
push
inc
adc
add
jg
pop
scas
rorb
mov
jecxz
and
sub
adc
in
adc
sbb
xchg
leave
outsb
ss
js
mov
movsl
add
sub
sbb
ds
pop
inc
pop
inc
ljmp
ss
add
outsb
les
lret
sub
into
or
add
imul
mov
and
adc
sbb
push
adcl
fdivr
mov
push
in
je
inc
inc
dec
and
mov
and
xchg
outsl
lock
mov
cmp
xor
and
dec
mov
jb
pop
icebp
arpl
jmp
aas
xor
jecxz
sub
clc
je
stc
stc
xchg
add
fs
push
or
dec
pop
jl
xor
dec
rcr
scas
inc
xchg
lods
inc
push
mov
jae
sbb
or
dec
jmp
mov
arpl
inc
sub
subl
test
stos
mov
jb
fdivs
cmp
mov
ss
call
and
int3
shll
xchg
mov
dec
jp
imul
mov
popa
or
hlt
dec
adc
addr16
mov
sbb
inc
sub
adc
xchg
je
adc
add
mov
out
adc
pop
gs
xlat
jb
sub
adcl
js
jno
xchg
jmp
dec
outsl
fisttpll
sub
iret
xor
test
decb
sub
cli
movb
enter
scas
aas
xor
cmpsb
or
out
xchg
cmp
pop
orb
inc
xor
push
dec
into
pushf
push
xor
lods
xorb
mov
in
mov
mov
inc
daa
mov
arpl
lahf
imul
bound
aad
sub
or
mov
je
loop
and
ret
inc
insb
fs
in
sub
inc
inc
push
adc
push
pop
insb
movsl
movsb
jns
push
pushf
jae
push
mov
mul
bsf
clc
sbb
testb
or
add
pop
mov
pop
push
mov
jecxz
sub
test
fcoml
mov
or
mov
push
push
mov
mov
push
daa
push
in
adc
cmpsl
data16
loope
jl
sbb
mov
mov
push
mov
test
rorb
mov
pop
hlt
adc
push
mov
popf
test
adc
adc
out
int
xchg
xchg
or
cs
pusha
xor
and
rcrb
gs
push
test
rcrl
je
lcall
cmc
add
cmc
cmp
scas
mov
jb
and
ljmp
nop
mov
sbb
xchg
xor
fidivl
nop
aas
inc
ljmp
pop
mov
stos
or
adc
cmp
mov
insb
xor
popf
inc
ss
in
sbb
xlat
dec
orl
xchg
mov
push
dec
cmp
push
mov
loop
sarl
xchg
cmc
push
scas
xchg
and
jp
lock
aam
and
push
data16
mul
mov
fdivrl
sub
lods
mov
xchg
iret
aaa
stos
fcmovnb
imul
lods
jge
jns
mov
scas
add
jle
lods
gs
insb
lods
xchg
into
rcrb
jge
and
insb
adc
stos
fs
add
jl
jbe
orb
jmp
sbb
lods
and
test
sbb
jo
pop
cwtl
pop
arpl
and
jl
lds
popa
cmc
and
xchg
jae
ficompl
push
add
jnp
out
scas
mov
sub
jo
orl
aam
jbe
notl
sbb
loope
cmpsb
push
mov
les
daa
movsb
mov
pop
mov
rcrl
pop
mov
adc
stos
lret
add
push
shl
nop
pop
add
pop
pop
sbb
test
jns
aad
cli
inc
jae
scas
inc
push
clc
fisttpl
call
dec
xchg
push
shrb
add
sahf
jle
or
mov
and
insb
xor
test
adc
inc
call
inc
sub
and
mov
mov
xchg
sub
repz
jge
loopne
inc
fidivl
mov
je
pop
mov
jg
add
pop
ljmp
ljmp
mov
insl
push
test
leave
ds
mov
dec
icebp
insl
jmp
outsb
mov
cli
add
inc
jno
sbb
sbb
je
addb
stos
dec
xchg
mov
adc
jle
mov
cmp
inc
fstpl
mov
subl
cmc
pop
dec
inc
cli
xchg
pop
aad
cmpsb
aaa
mov
cmc
mov
ja
inc
jmp
push
frstor
xlat
movsl
ret
xor
sub
mov
imulb
jne
dec
sub
test
pop
pop
jno
outsl
cmp
test
adc
cld
js
mov
je
dec
insb
mov
jge
fmull
pop
xor
repz
jmp
ja
ja
or
inc
test
jne
xor
dec
fwait
push
out
lcall
daa
push
icebp
movsb
mov
loope
add
push
push
push
jbe
and
icebp
adc
mov
imull
xchg
add
in
notl
mov
cs
sbb
filds
lock
stos
xchg
loopne
sbb
or
or
aas
mov
out
push
movsl
imul
inc
add
push
sub
pop
xlat
sub
xchg
adc
xchg
cmp
je
sub
in
out
sbb
jle
cmp
cmp
subb
add
test
fisubl
mov
pop
test
xchg
lock
jg
dec
mov
shl
mov
jns
jb
dec
dec
sub
pusha
xchg
and
fcoms
sbb
or
icebp
mov
movsb
xchg
bound
pop
js
mov
bound
mov
ljmp
pop
xor
cld
and
fs
fwait
pop
add
rcll
jmp
loopne
push
inc
mov
mov
xchg
lods
mov
cmp
jnp
pop
pop
fwait
sbb
mov
inc
adc
dec
adc
mov
shrb
jg
or
mov
push
mov
push
adc
movlps
ss
or
lods
pop
adc
aaa
je
pop
sbbb
test
pushf
mov
movsb
jl
sahf
ja
lock
and
and
jl
mov
lds
push
and
inc
int
repz
pop
dec
and
mov
aad
arpl
int
mov
loopne
mov
pop
int3
popf
mov
xchg
push
fs
mov
fdivrl
mov
adc
lock
pop
inc
shrb
fwait
push
out
jl
lock
mov
or
notb
imul
test
xchg
inc
sbb
call
inc
insb
divb
sub
or
insl
mov
loope
mov
je
addr16
push
loopne
jge
xlat
arpl
fistl
mov
mov
jle
clc
ja
jo
xlat
jo
jno
lahf
xor
aam
mov
icebp
rcr
lcall
mov
xchg
testb
xchg
subb
mov
outsb
hlt
psrlw
or
popa
das
in
ret
mov
pop
adc
xor
sub
test
clc
jle
push
mov
cmpsb
repnz
leave
popa
out
inc
das
fs
arpl
mov
scas
pop
int3
in
xor
dec
stc
lds
orl
or
loope
inc
adc
les
outsl
mov
and
aaa
orl
cmp
jmp
aam
cmpsb
and
jae
outsl
jne
cmc
dec
out
jp
cmp
cmpsl
mov
mov
arpl
cmpb
sbb
insl
out
out
push
xlat
sub
inc
jmp
out
aaa
leave
icebp
sub
or
call
jno
jo
inc
sub
dec
loop
sub
je
adc
cltd
fldl
bound
outsl
mov
sti
leave
clc
add
cmpsb
aam
xchg
lcall
fwait
leave
mov
inc
pop
scas
and
shrb
loop
ficoms
push
pop
ja
mov
pusha
imul
loope
out
mov
xchg
data16
outsb
adc
fsts
sbb
cli
xor
adc
lret
push
adc
in
inc
cmp
and
mov
lds
ja
insl
xchg
fcomip
jl
loope
cmp
into
xchg
push
jo
adc
pop
cmc
adc
push
addr16
jns
sbb
sti
fsubs
xchg
jnp
add
jecxz
lcall
test
push
or
mov
inc
fsubrl
hlt
cmp
ss
or
inc
repnz
add
jo
push
insl
mov
sahf
cmp
jg
xchg
lcall
mov
pop
push
divl
xchg
les
repz
inc
jl
dec
test
mov
sbbb
and
add
je
scas
mov
xchg
jmp
push
cli
pop
sub
add
fistpll
aas
out
dec
cmpsl
or
adc
mov
daa
fisubl
mov
mov
mov
or
xchg
in
xor
and
push
lcall
lea
mov
mov
mov
ja
mov
sar
jbe
cmp
jg
push
dec
mov
pop
loop
mov
pop
or
push
xor
aaa
push
js
pop
inc
lea
jnp
xchg
out
scas
push
pop
int
push
pop
repz
iret
inc
push
xchg
mov
lds
xor
push
fisubrs
sub
negb
jg
cmp
pop
fistl
mov
sbb
test
adcb
cltd
mov
in
cltd
sahf
adc
mov
cli
shrb
push
addb
mov
mov
mov
dec
loope
ja
lods
add
xchg
arpl
ret
fwait
mov
mov
sti
xor
lahf
mov
add
cmpsb
fstps
xchg
pop
or
lods
xlat
push
aas
inc
ja
cmpsl
xchg
xchg
movsl
adcb
cmp
adc
mov
call
lock
clc
xchg
push
lret
in
gs
add
mov
mov
jl
sti
imul
mov
cmp
mov
add
pop
mov
popf
sar
sbb
cmp
scas
pop
pop
fdiv
inc
and
sub
xchg
pop
repnz
data16
call
mov
outsb
mov
pop
push
inc
jg
and
hlt
inc
mov
shrb
add
xchg
sbb
pop
cld
pop
or
add
ja
inc
repnz
adc
xor
jl
subl
daa
push
sbb
jg
adc
mul
fstl
xor
mov
fwait
icebp
or
je
mov
inc
add
inc
cltd
dec
fld
jae
clc
inc
mov
xchg
lret
xchg
mov
xlat
loope
push
cwtl
out
mov
jbe
xlat
mov
xor
imul
je
sbb
fmuls
add
lret
clc
jo
adc
fwait
rcrb
lret
mov
mov
mov
xor
or
xchg
jb
xor
pop
jns
repnz
xchg
xor
xchg
insl
inc
shll
enter
dec
xchg
add
lods
clc
sarb
scas
jb
lret
mov
dec
mov
out
push
cmp
and
addl
imul
lcall
outsl
jbe
jns
xchg
fs
inc
and
xor
loope
jo
jae
clc
jg
mov
inc
cmpsl
movsl
or
mov
cltd
hlt
xchg
pop
mov
lds
es
in
stc
fisttpll
jl
sarl
imul
mov
cmpl
jno
test
mov
xchg
ja
inc
jne
pop
cmpsb
sbb
xchg
fld
popa
jne
aam
mov
lods
adc
and
roll
pop
push
adc
cmp
mov
inc
add
jmp
adc
pop
movsb
stos
push
sbb
mov
cmp
mov
jmp
xchg
mov
inc
mov
mov
rorl
jnp
push
or
inc
aam
fidivs
stos
xlat
jp
aad
jg
sarl
mov
enter
mov
or
rclb
sub
andb
or
shrb
movsl
hlt
popa
inc
jo
push
pop
mov
inc
xchg
ljmp
shr
push
or
xchg
and
sbb
ret
fistl
aam
outsb
cmp
out
popa
lahf
test
addr16
add
cmp
cmpsl
scas
adc
jl
mov
scas
ficoml
lock
adc
pop
dec
sub
cmpsb
ret
into
mov
fsubrs
aaa
mov
aas
ja
scas
std
gs
pop
fldl
mov
mov
fstl
ljmp
sbbl
lea
sbb
andl
cmp
mov
mov
sbb
jg
mov
jno
std
int3
adc
in
jbe
test
adcl
cmp
jo
das
adc
push
lret
movsb
nop
jae
and
jp
out
push
mov
lahf
xchg
sbb
stos
jb
mov
pop
mov
mov
subb
insb
mov
lods
pop
cmp
sub
out
jnp
push
sti
jge
or
clc
cmpsl
pop
ss
mov
mov
pop
in
adc
movsl
cmpb
add
repz
jge
push
or
mov
mov
rorl
mov
cli
add
test
mov
inc
pushf
push
fdivp
jge
jnp
out
push
dec
gs
sub
int
mov
lcall
ljmp
xchg
je
shll
jl
adc
adc
lods
lahf
pusha
mov
mov
push
xor
push
cmpsb
push
subb
das
stc
lret
out
push
pop
sbb
je
or
lods
lods
andl
xor
movsl
sbb
sub
adcb
scas
insb
jp
push
mov
orb
xchg
out
out
and
pop
lcall
xchg
and
jg
mov
insb
loopne
es
addr16
clc
cmp
mov
fwait
out
pop
inc
mov
and
cmp
sarl
xlat
icebp
arpl
add
xchg
ss
rorb
inc
int
testl
inc
stc
xchg
jge
dec
aad
inc
sub
out
cs
nop
cwtl
mov
dec
mov
mov
add
mov
fmull
fwait
mov
imul
or
lcall
sub
stc
add
jne
aas
mov
enter
mov
push
cltd
sbb
mov
xor
pop
ljmp
push
addr16
jge
fiaddl
stos
int3
jp
ret
dec
mov
test
xchg
das
imul
dec
lret
xor
in
ss
dec
pop
int
ret
scas
pop
faddl
cmp
sub
xor
mov
js
aam
in
pop
sarl
sbb
xchg
pop
mov
repz
data16
inc
mov
test
mov
adcl
jb
lock
les
cli
add
xchg
xchg
cmp
sub
jbe
adcb
les
mov
insb
xchg
add
fwait
cli
mov
inc
enter
add
fs
icebp
in
jle
cli
mov
push
sbb
sar
mov
icebp
sti
pop
mov
xchg
push
sbb
mov
rcrl
jmp
clc
sbb
cwtl
aam
and
or
add
mov
fcomp
dec
ds
fcoms
sub
or
adc
pop
mov
sub
daa
jl
movsl
cmc
mov
push
rcll
pop
xorb
dec
scas
pusha
jmp
fnsave
xor
jb
jl
add
inc
push
and
arpl
not
aad
xchg
lea
imul
mov
es
mov
jg
jecxz
cwtl
lock
adc
mov
cld
jne
int3
test
pop
repnz
sbb
push
call
aas
es
loope
jl
cmp
lea
ret
sbb
mov
xor
ret
jg
adc
divl
in
pop
outsb
scas
sahf
pop
adc
push
out
pusha
enterw
push
das
je
popa
sub
loopne
movb
sbb
push
push
mov
inc
or
mov
adc
sti
pop
adc
inc
xchg
gs
jb
fstpl
mov
xchg
jns
fisttps
nop
ficomps
mov
imul
push
add
out
mov
fdivs
push
add
adc
test
addr16
adc
stc
mov
enter
ss
shlb
popf
aas
xchg
lahf
adc
jb
pop
addr16
test
and
test
out
ljmp
out
and
jmp
cs
jo
and
lret
ficomps
cmp
dec
inc
mov
push
xor
inc
inc
mov
sub
add
orl
adc
repz
popa
mov
out
shlb
mov
inc
mov
shrl
pop
popa
aad
add
xchg
mov
jb
and
and
mov
imul
out
or
mov
pop
jnp
fs
push
cmp
fildll
mov
repnz
iret
mov
sub
andb
lea
mov
xchg
sar
in
jnp
inc
mov
adc
xor
pusha
adc
shll
je
inc
sub
leave
jle
push
hlt
loope
mov
or
or
add
mov
push
scas
bound
lods
outsl
sarl
mov
xor
imul
pusha
out
in
pop
and
rcrb
xor
jae
add
loopne
pop
or
stos
mulb
aam
divl
mov
dec
cmc
jno
imul
sbb
mov
popf
mov
xchg
fisubl
jne
dec
add
mov
leave
fdivrs
or
push
and
cmpsl
lea
fildll
lahf
or
sbb
gs
fcomi
in
bound
movb
pop
sub
std
sbb
repnz
xchg
push
add
out
inc
pop
mov
rdmsr
leave
xor
mov
stos
lds
jp
repnz
inc
lods
or
imul
sahf
and
push
add
scas
adc
and
mov
imul
jmp
mov
and
push
rclb
dec
cmp
aaa
push
gs
fiadds
mov
xchg
punpckldq
sti
mov
or
mov
and
xor
mov
int
ficomps
push
lods
pop
mov
loop
inc
out
loope
fisubrs
adcb
imul
les
pop
jb
mov
cmp
mov
cltd
and
sub
sub
and
mov
push
mov
pop
push
mov
lahf
aas
pushf
push
cmpsl
jecxz
sbb
push
jp
push
insb
mov
jo
out
icebp
mov
fisubrl
jnp
mull
and
cmp
pop
in
pushf
imul
sahf
ja
add
xchg
sub
dec
add
loope
lret
cltd
mov
nop
frstor
push
lcall
mov
or
inc
push
lea
cmp
mov
dec
dec
or
adc
fs
add
sarb
fisttpl
mov
adc
or
popa
fdivrl
and
dec
push
cs
imul
lock
ds
mov
hlt
clc
and
aaa
pop
aaa
mov
xchg
addr16
mov
push
mov
lret
testl
and
out
push
scas
scas
ja
xchg
and
lods
movsb
shl
popa
sub
ret
and
addr16
popa
imul
add
mov
test
lock
or
fiadds
in
push
xchg
sbb
arpl
insb
mov
push
daa
mov
mov
int3
add
push
mov
mov
push
stos
jmp
fimuls
sti
push
jns
pop
mov
xor
xchg
mov
mov
or
jecxz
ja
mov
xorb
sbb
mov
xchg
or
ljmp
mov
inc
dec
lods
or
cmpsl
stos
std
ret
sbb
mov
push
mov
adc
inc
into
rorb
hlt
add
repnz
push
iret
pop
or
add
or
shlb
mov
dec
bound
ja
mov
or
sti
push
push
jb
sub
sbbb
insl
aaa
mov
sbb
jne
dec
cmpsb
pop
jp
and
push
ss
xchg
shl
loope
push
push
cs
pop
clc
cmc
xchg
cmpsb
mov
repnz
cmp
cmpl
xor
jecxz
call
fimull
cmp
and
int3
stos
nop
popl
in
mov
mov
lods
mov
and
xor
ds
mov
daa
dec
cmc
repnz
addl
pushf
adc
mov
arpl
cmp
loop
loop
das
xchg
loope
stos
push
test
pop
xlat
mov
push
or
cmp
mov
and
xor
xor
popf
aaa
lret
sbb
fdivrl
lock
clc
gs
lods
out
incb
fbld
sub
mov
cmp
aam
outsb
arpl
imul
inc
jl,pt
int
inc
call
rorb
leave
ss
sahf
xor
jl
pop
nop
out
or
mov
int3
fwait
imul
sbb
or
cli
push
addr16
inc
movsb
xor
cld
jo
or
ficoms
and
jo
cmp
imul
push
inc
push
mov
ficompl
pop
adc
dec
into
les
and
mov
xor
dec
movsb
insb
aas
je
pop
add
fidivl
cmp
stos
ds
mov
push
cmp
dec
sbb
jb
in
fwait
test
loopne
fs
ss
lds
inc
out
in
push
sub
jecxz
add
jp
std
lods
add
cmp
xor
into
and
jnp
in
dec
add
xor
xchg
fidivrs
cld
mov
es
jmp
add
lcall
movl
jo
inc
aad
nop
fmull
jns
add
les
pop
adc
shrb
lods
jg
loopne
and
jle
stos
pop
test
pop
in
loopne
push
cld
stc
xchg
loope
sub
xchg
fs
mov
dec
cmpsl
jb
fdivrp
push
xchg
in
mov
ud1
add
test
jb
inc
stos
pusha
jge
mov
fmuls
enter
repnz
mov
bound
js
push
stc
inc
mov
int3
mov
loopne
lcall
ljmp
call
dec
sub
jb
out
sti
xor
sub
ret
sti
out
ja
mov
pop
test
popf
push
out
mov
mov
sub
hlt
scas
push
stos
mov
sbb
pop
mov
int
sbb
shlb
and
sbb
push
fwait
mov
jecxz
jns
sub
loopne
cmp
pop
notl
pop
jnp
cmc
hlt
inc
fdivp
stos
pop
or
jge
scas
lds
es
js
lahf
nop
pop
out
sbb
mov
mov
push
cmp
cmp
mov
ficoml
cli
xlat
cmpl
enter
sbb
loope
movsl
push
test
loop
push
dec
add
adc
aaa
sti
fsubrs
or
mov
push
sub
xor
ret
and
mov
out
xchg
add
sub
pop
lds
mov
out
push
pop
adc
mov
leave
jecxz
xor
std
test
mov
mov
cmc
int
jbe
cmp
mov
lea
movsl
popf
mov
test
nop
fcoml
out
js
outsl
movsb
mov
or
mov
mov
jp
inc
in
xor
push
mov
mov
or
inc
cs
insb
test
stos
push
lcall
jb
mov
fisubs
fcoms
sti
jne
sub
js
fs
loop
jmp
mov
lcall
call
gs
push
movzbl
repnz
ret
mov
adc
fwait
roll
stc
addb
shll
fnop
in
cli
dec
sub
or
sbb
mov
push
sub
cmc
add
sub
shll
inc
pop
pop
push
adcb
sbb
xor
add
cwtl
push
aad
call
mov
ss
sbb
das
xchg
pop
jecxz
scas
sti
stos
sub
imul
and
pop
loopne
fnsave
cli
cltd
aad
inc
enter
add
repnz
dec
sar
lods
xor
sbb
sub
sbb
jge
push
adc
xor
cmc
sbb
xorb
jnp
das
lea
fistps
addr16
ret
add
out
add
leave
dec
push
fwait
pop
lods
dec
movb
cmpsl
jns
and
adc
mov
cmp
rcl
jno
ss
or
and
cltd
xor
js
sti
mov
dec
add
cmp
sbb
cwtl
outsl
inc
test
sets
mov
je
cmp
mov
add
push
pop
stc
mov
jb
jmp
and
pop
lret
into
push
idivb
pushf
cld
xchg
sbb
cmp
adc
mov
ficoms
scas
add
test
pop
imul
or
sti
fwait
inc
stos
pop
dec
or
cmp
adc
jne
loope
mov
jecxz
lods
repz
mov
cld
shll
xor
cmp
aam
repz
cwtl
out
scas
mov
inc
mov
cmpsb
test
dec
sar
in
mov
cmpsl
fs
sbb
inc
jbe
sbb
mov
mov
in
adc
jle
fnstcw
mov
push
lock
sub
repz
cmpl
out
outsb
sahf
xlat
jns
adcl
call
shlb
loope
movsb
or
loopne
adc
or
mov
imul
sbb
mov
jno
add
mov
lods
pop
xchg
inc
fiadds
xor
lds
stc
in
mov
loopne
cli
jp
sbbl
cmp
and
sbb
jb
jae
pushf
mov
sbb
std
and
sbb
xorl
loopne
hlt
iret
mov
aam
or
insl
or
das
mov
nopl
mov
sbb
scas
xchg
mov
loope
cli
lock
jmp
adc
mov
rcl
leave
sbbb
inc
lahf
fisubrs
xchg
mov
iret
fisttpll
rclb
sub
xor
repz
ja
mov
inc
xor
pop
and
or
in
xchg
sbb
in
cld
and
mov
ret
push
gs
shll
mov
xor
lcall
dec
pop
mov
sti
push
xor
or
clc
arpl
arpl
mov
or
sarl
icebp
ja
jge
sbbb
pop
inc
inc
inc
jns
pop
leave
add
jns
adc
mov
sub
sahf
inc
sarl
cmp
sbb
mov
mov
les
out
fdivl
mov
push
adc
cmp
movsb
mov
pusha
clc
test
jge
les
aad
shll
hlt
fstpl
pop
test
jbe
fcmovne
push
lock
pop
ds
hlt
daa
movb
pushf
jp
test
out
inc
pop
sub
sub
add
roll
mov
mov
aaa
add
inc
imul
stc
inc
in
pop
jecxz
fwait
in
test
mov
xchg
rcll
pop
jnp
out
mov
jecxz
sti
std
jecxz
outsl
push
les
adc
fnstcw
sahf
jmp
jge
mov
shll
in
sbb
pop
add
dec
out
call
flds
imul
and
ss
sub
inc
push
adc
mov
dec
adc
cld
inc
cmc
add
lret
adc
std
in
sub
sar
fwait
mov
push
mov
mov
jo
mov
test
sbb
stos
repnz
rcrb
jbe
push
jl
xchg
jns
push
andb
dec
mov
adc
mov
adc
js
push
rorb
ret
mov
push
dec
xchg
or
pop
or
ret
aad
push
test
mov
into
in
pushf
jl
push
adc
hlt
outsl
out
or
inc
push
push
shll
fsts
lret
lahf
pop
adc
mov
mov
cmp
aad
in
and
jbe
divb
sbb
lahf
mov
sbb
mov
mov
push
xchg
mov
enter
push
mov
add
push
xlat
cmp
aam
jmp
lods
dec
jmp
mov
push
inc
push
add
adc
ja
and
leave
mov
mov
mov
ret
scas
sub
pop
scas
push
pushf
push
add
and
jae
xchg
fnstsw
mov
jecxz
bound
cwtl
movsl
cld
lea
orb
push
fimuls
pop
and
ljmp
orl
aad
lcall
mov
pop
ret
idiv
xor
xchg
outsb
dec
hlt
cmp
adc
les
in
xor
mul
xchg
out
and
dec
jns
push
fmull
mov
bswap
mov
push
xor
lock
xchg
dec
dec
popa
jle
shll
cli
push
sbb
or
pop
xchg
cmp
push
mov
sbb
dec
jle
mov
mov
mov
mov
addr16
jge
jno
rorl
dec
ja
mov
leave
pusha
mov
adc
js
out
in
mov
call
mov
arpl
sub
inc
mov
push
lods
jg
cwtl
and
mov
test
push
or
lret
mov
xchg
push
jl
stos
lgs
inc
imul
aad
ret
out
sbb
mov
testb
popf
out
lret
inc
stc
icebp
ret
cli
fdecstp
fnsave
xchg
xor
jns
in
sbb
and
mov
jbe
sub
inc
push
xor
pushf
cltd
sub
fwait
lret
call
stos
or
lret
pop
jmp
jle
movsb
ds
xor
ljmp
mov
push
push
cmc
lds
in
outsb
pop
sbb
push
sub
cmp
test
repz
and
pop
mov
mov
roll
das
test
mov
and
sub
rorb
dec
add
cld
adc
inc
aaa
jbe
and
pop
test
mov
xlat
pushf
mov
ljmp
mov
mov
push
pop
cmp
and
fbstp
mov
and
lahf
rcrb
inc
mov
lds
imul
mov
push
cmp
movsw
orl
pop
icebp
cltd
dec
cmp
xchg
sub
mov
and
arpl
inc
ja
loop
jbe
ss
pop
orl
dec
pop
orl
das
mov
inc
rorb
pusha
pushl
loopne
mov
dec
movsl
xchg
mov
imul
sbb
cmpsl
sbb
sub
dec
pop
jp
xor
push
and
inc
sbb
cmpsl
adc
jp
cmp
sub
cli
or
xor
xchg
mov
jnp
aaa
xchg
std
rcrb
fcmovne
and
lea
lcall
xchg
hlt
adc
pop
adc
mov
cmc
cli
sti
mov
pop
fcmove
jmp
stc
inc
ja
mov
pop
mov
mov
mov
sub
jl
shll
aas
pop
adc
inc
pop
call
and
xor
push
pop
pop
fsubrs
xor
ljmp
cmp
xlat
and
xchg
sti
xchg
jmp
and
push
pop
leave
cwtl
sti
fcoml
mov
adc
xlat
mov
sub
imul
sbb
test
outsl
in
dec
jbe
pop
fs
stc
std
jo
std
pop
xor
and
clc
mov
sarb
out
sahf
stos
xorb
dec
push
mov
jg
cmpsb
lods
cltd
mov
jge
pop
adc
jp
mov
adc
mulb
scas
mov
mov
cmp
adc
or
cwtl
aad
inc
adc
stos
adc
sub
sbb
and
add
inc
sub
mov
push
adc
and
in
xchg
cmc
cltd
jne
mov
or
or
mul
and
push
lcall
cmp
inc
sub
repnz
mov
mov
add
imul
lods
xchg
jns
sub
daa
imul
mov
xor
pusha
cli
movsl
sti
add
ror
cmp
push
scas
cmp
jl
mov
rorl
fs
aam
and
cmp
js
das
leave
mov
and
mov
xor
sbb
repz
mov
xchg
sub
cmp
shlb
js
cmpsl
and
xchg
fiaddl
not
fidivrs
push
cmpsl
loop
ja
mov
dec
je
cmp
xor
imul
mov
mov
out
mov
sbb
push
imull
pop
sahf
pop
or
fucom
sti
push
rorl
js
loopne
sub
mov
mov
js
repnz
sub
mov
push
stos
aaa
mov
push
lret
mov
adc
xor
jl
outsb
dec
fmull
push
das
push
fs
dec
push
fnsave
fs
mov
sbb
inc
fists
or
shrl
mov
xchg
outsl
into
sub
inc
cwtl
and
idivl
cmpsb
sbb
stos
dec
inc
aas
pushf
add
jns
loop
or
pop
xor
mov
sbb
adc
sahf
and
ret
mov
push
pop
cmpsb
aas
mov
jnp
mov
dec
iret
push
mov
or
sbb
dec
es
lret
adc
mov
xchg
or
xchg
inc
push
pushf
pop
pop
fnstsw
jmp
stos
test
lock
addr16
adc
xchg
push
fildl
jo
pop
dec
rolb
mov
xchg
cmpsb
iret
sub
dec
icebp
je
notb
add
imul
jbe
test
adc
inc
xor
xor
repz
fcoms
mov
cld
or
push
adc
or
fimuls
movsl
add
scas
popf
and
js
push
mov
sbb
xchg
inc
out
mov
loope
and
mov
fadd
shrb
or
shrl
aad
add
std
jbe
hlt
mov
in
mov
cmc
lock
inc
sahf
dec
dec
cltd
lds
xor
int
push
fwait
mov
js
inc
aad
push
test
xchg
dec
dec
mov
cmc
inc
out
push
sbb
je
shlb
dec
loope
leave
nop
addb
stos
pop
sti
mov
loop
adc
dec
popa
cwtl
lods
enter
orb
movsb
and
insl
pop
push
jne
loop
movsb
dec
ficoms
mov
pop
pusha
add
dec
repnz
enter
out
push
stos
call
fdivrl
lcall
cmp
cwtl
ljmp
ss
addl
inc
leave
sub
push
mov
jmp
sub
add
sbb
sbb
dec
mov
jae
lock
inc
ds
shlb
jns
or
fsubl
lods
lea
mov
and
jns
rol
repnz
cmp
jle
std
xor
jmp
bound
mov
repz
xchg
addr16
out
cmpsl
sbb
outsb
rcl
pop
icebp
sub
mov
or
push
out
push
test
add
loopne
repnz
pusha
sbb
sbb
fdivrl
push
mov
test
or
jo
aas
inc
cmp
jo
adc
mov
jg
fnsave
mov
fstpt
out
ret
mov
rclb
rol
xor
and
jp
icebp
pushf
clc
sti
jle
cmp
out
and
mov
sarb
push
stos
in
loope
fldl
fsubrp
pop
fmuls
mov
add
xlat
xor
cwtl
cmp
and
fdivp
test
faddl
jno
sbb
jnp
ds
push
sbb
sbb
sbb
dec
sbb
mov
lods
ret
in
or
aam
or
add
fwait
roll
pop
scas
dec
sbb
xor
shlb
insb
dec
repnz
pushf
and
fbstp
cli
push
incl
notl
mov
mov
f2xm1
or
fdiv
add
xchg
repnz
mov
jecxz
xchg
fcmovnbe
mov
mov
cmp
or
movsb
sub
sbb
adc
sub
adc
cs
loopne
arpl
loope
and
lods
loopne
loop
je
fs
das
mov
xor
shlb
sbb
sbb
daa
adcl
dec
xchg
pop
mov
jl
push
xchg
sub
pop
xor
outsl
jne
sub
jae
sbb
imul
sub
arpl
add
pop
popf
sbb
and
cmp
dec
mov
add
test
push
test
ficomps
adc
cmp
rcrl
mov
mov
fucom
aas
jmp
push
call
adc
daa
add
jecxz
pop
push
in
fcmovnu
lods
mov
sub
dec
dec
jecxz
sub
call
pop
or
ffree
push
add
pop
fwait
xlat
or
rcr
mov
lods
clc
mov
rol
test
add
js
jnp
jecxz
or
pusha
data16
rorb
lods
shlb
jbe
jl
imul
cmp
aas
lret
sbb
jp
xor
fisubl
fdiv
mov
push
sbb
inc
scas
lret
lods
fsubs
stos
jp
loop
xchg
push
jae
and
adc
and
lcall
fs
jl
sbb
shll
lock
mov
bound
inc
hlt
mov
jg
inc
icebp
inc
orb
leave
stos
fcoms
rclb
lcall
ja
shl
cmc
lahf
pop
loope
decb
or
mov
bound
movb
int3
aaa
and
fstps
test
pop
jl
imul
or
cmpsl
mov
pop
inc
mov
mov
loop
hlt
mov
mov
xchg
into
push
sub
mov
mov
js
test
cwtl
addr16
scas
mov
fsubrs
or
aas
xlat
mov
arpl
and
cmpl
pop
mov
test
test
cmp
popf
and
insb
xor
aaa
aad
sar
loopne
push
mov
idivb
adc
or
movsb
mov
push
fisubl
and
sub
jge
insb
or
sub
and
dec
je
pop
sbb
cmp
shlb
fistps
push
popa
sbb
or
inc
inc
out
sarl
adc
adc
pop
clc
adc
in
insb
mov
sbb
adc
dec
add
test
outsl
or
push
movsl
cltd
add
xor
aaa
jp
lcall
mov
incl
dec
test
cmpsb
fnstsw
cmpsl
mov
and
push
ljmp
lods
cmp
dec
dec
sub
adc
mov
insl
lock
dec
out
ljmp
mov
xchg
sarb
arpl
or
mov
xchg
pop
dec
pop
arpl
mov
dec
jns
add
xchg
cwtl
fisubs
push
mov
je
adc
add
rcrb
das
sub
dec
mov
add
push
scas
add
test
push
popf
cmp
in
ret
or
jg
stos
mov
cmpsl
xor
lret
push
decb
data16
pushf
inc
or
loope
sbb
loop
das
aaa
lahf
sbb
inc
adcl
pusha
fisttps
push
push
cmp
loopne
mov
icebp
shrl
sbb
mov
sti
xlat
push
xor
cmp
xor
std
mov
outsb
jmp
mov
dec
data16
frstor
pop
test
dec
fwait
ret
push
xchg
out
pop
notl
inc
mov
mov
xor
pop
jbe
in
jo
or
cltd
add
sbb
xchg
clc
jge
jmp
push
scas
sar
xor
jne
adc
inc
popa
sbb
push
pop
rcrb
cmp
inc
lock
mov
adc
push
pop
daa
cwtl
lds
xchg
xchg
xchg
mov
in
cwtl
inc
rclb
data16
movsl
ret
or
mov
jle
xor
fcomp
ret
hlt
mov
test
pusha
pop
push
cmp
loop
jns
sbb
in
sbb
jne
test
jnp
icebp
push
ljmp
negl
cmp
and
jb,pt
mov
clc
in
lret
sub
jle
adc
mov
pop
jns
cltd
and
stos
fcomps
andb
ja
aad
pusha
dec
jb
pop
sbb
and
inc
and
ret
ja
xchg
dec
or
mov
and
movsb
push
js
dec
jae
adc
push
lahf
fsubl
mov
repnz
mov
sti
add
push
cs
push
fdivrl
add
sub
mov
leave
adc
xlat
sub
cmp
adc
cmc
inc
add
bound
dec
fidivrs
and
mov
adc
leave
lret
push
push
mov
lock
xchg
add
sub
cld
dec
adc
aad
fdiv
popf
xchg
fistl
jns
loope
and
jnp
pusha
jnp
mov
nop
cmpsb
das
out
add
pop
inc
pusha
xor
lods
mov
and
ds
pop
pop
adc
sbb
push
lds
cmp
loopne
jle
xor
cmp
xchg
adc
pop
repz
test
out
loopne
repnz
sub
sub
sbb
or
xor
call
mov
dec
scas
int
cltd
xor
outsl
xor
xchg
out
cmp
jo
adc
adc
scas
bnd
xor
or
fmull
scas
inc
mov
adc
pop
inc
lahf
nop
add
add
pop
out
lret
aam
pop
and
test
ja
in
xor
xchg
ljmp
addb
cmp
jp
push
fstpl
ljmp
sbb
pop
jns
push
push
xchg
pop
push
lahf
pop
hlt
push
mov
xor
popf
stos
fstpt
les
or
addr16
and
inc
imul
or
ret
out
sbb
fidivrs
push
pop
push
push
inc
popf
inc
ret
enter
inc
pop
lret
push
sbbl
iret
mov
adc
adc
mov
push
inc
cld
mov
xchg
sub
push
cwtl
xorb
js
xor
out
sub
sbb
rcrb
cld
push
lret
sub
xor
mov
rcl
cwtl
lahf
cmpsl
jns
pusha
add
in
dec
ss
mov
into
dec
mul
sub
inc
mov
aas
inc
mov
mov
and
ja
mov
or
xchg
scas
and
mov
aas
and
pop
fs
lock
dec
lods
ds
push
ret
jmp
xor
icebp
xchg
mov
fwait
dec
insl
mov
imul
mov
xor
jle
or
imul
cmp
in
lea
sahf
insb
dec
aam
mov
jp
out
ficomps
adcb
movl
push
ja
pop
dec
push
xor
cmpsl
leave
repz
jbe
inc
pop
mov
outsb
sub
sub
sub
idivb
and
ja
sbb
js
lea
into
mov
rolb
xchg
or
pop
push
push
into
mov
lea
sarb
xor
dec
mov
ss
leave
scas
jp
imull
sbb
mov
ror
std
test
jnp
cli
lock
push
jns
inc
cmc
ljmp
cwtl
outsl
sahf
nop
fcoms
push
pop
cwtl
enter
or
jae
mov
add
jne
push
push
shlb
pop
push
es
xor
sbb
ljmp
pop
xor
sub
insb
popa
jo
inc
lds
fwait
lret
mov
ret
dec
cltd
inc
sti
lods
outsb
cmp
movsb
jb
push
or
inc
fwait
cs
inc
sub
sti
dec
push
add
mov
inc
push
xchg
xchg
adc
insl
imul
enter
shll
mov
or
pop
pop
pop
shld
jo
outsl
in
iret
inc
ja
popf
or
stos
mov
pop
cmp
fstpt
cmp
inc
jge
push
mov
xchg
imul
mov
inc
pusha
out
in
ficoms
stos
imul
lret
imul
inc
mov
lds
sbb
adc
sbb
ljmp
mov
shll
or
lds
mov
lahf
pop
outsb
xchg
iret
mov
or
sub
xchg
inc
dec
push
adc
cld
push
jnp
cmp
and
push
pop
push
adc
adc
das
aas
mov
rolb
call
popa
push
push
sub
sbb
or
psrlq
inc
pushf
lods
adc
call
cli
insl
movsb
inc
xor
test
mov
mov
push
adc
test
sarl
push
fldenv
iret
rclb
dec
jns
out
je
fsubr
ljmp
icebp
xchg
and
insb
outsl
das
push
xchg
popa
imul
mov
mov
fwait
mov
mov
popw
arpl
or
sub
loopne
dec
sub
push
push
addr16
inc
sti
cli
das
xlat
or
loopne
mov
pushf
jne
imull
repz
and
push
fnsave
loop
out
add
or
fimull
sbb
xchg
xchg
pop
pop
add
sbbb
mov
xor
fstpl
ljmp
scas
data16
sub
dec
stos
jl
aad
mov
cmp
call
inc
xorl
sarl
pusha
push
addr16
jno
pop
and
test
je
rolb
and
je
push
ret
jp
int3
ds
je
imul
out
fucomip
or
pop
push
xor
out
push
xorb
test
jmp
push
out
addr16
outsb
lahf
cld
loop
lret
stc
adc
adc
xchg
dec
jmp
push
cmp
shlb
mov
lret
insb
cmp
sbb
scas
push
xchg
lcall
test
push
xchg
dec
dec
mov
xchg
jae
mov
lock
int3
sub
mov
cmpl
cmp
popf
je
jo
loop
xchg
push
sub
inc
inc
xchg
sahf
cmp
xchg
push
or
cmp
icebp
push
xchg
test
dec
inc
mov
mov
add
dec
dec
sub
dec
inc
jmp
cmp
and
jo
jg
iret
int3
in
repnz
sub
fbld
xor
fstpl
jl
in
jg
ja
jno
mov
cs
iret
fmull
sub
mov
mov
jbe
push
mov
ret
lds
inc
dec
xor
cwtl
out
cmp
mov
xchg
rcl
push
aad
and
movsl
mov
dec
mov
inc
dec
aaa
mov
cmp
mov
push
testw
add
mov
add
and
pop
mov
mov
jno
in
call
int
xor
aad
sbb
inc
pop
mov
repz
dec
push
aad
jb
lcall
call
stos
and
in
iret
fcoms
xor
fnsave
jp
popa
pop
jp
dec
push
cmpsl
lock
test
int
lcall
loopne
jmp
mov
or
dec
pop
and
jg
mov
lods
push
addr16
mov
jle
decb
inc
xchg
orl
sbb
into
sbb
test
lcall
jae
daa
sbb
mov
scas
leave
push
jg
stos
push
mov
fcmovnbe
jg
dec
lds
stos
jmp
pushf
pop
cmpsb
add
jnp
xor
mov
sbb
jnp
mov
xchg
popf
mov
cmp
ret
lods
insl
pop
ret
pop
jno
dec
and
cmp
sub
push
or
loope
xor
test
fmulp
test
shrb
mov
ret
loope
add
add
loopne
in
sarl
push
mov
pop
insb
mov
dec
lods
xor
ficoms
shlb
das
cmp
sti
lea
mov
or
jae
mov
inc
int
lods
out
jge
rep
jno
jb
add
jo
inc
sub
insb
or
mov
andl
jns
sub
pop
mov
push
les
fcmovnb
cmp
fstpl
ret
icebp
and
test
push
mov
les
or
fisttpll
pop
fists
clc
addr16
in
nop
add
inc
pop
in
out
lret
rorl
sbb
rol
xor
and
les
sbb
ja
testb
in
xor
mov
xor
jl
adc
jl
cmp
stc
adc
mov
addr16
dec
lods
inc
stos
sub
xor
out
add
stc
pop
bound
dec
les
insl
mov
in
jo
jno
push
dec
stos
inc
push
int3
lds
lcall
shlb
in
mov
and
and
jp
dec
sbbl
cltd
or
call
sbb
in
in
jmp
out
mov
popa
push
add
mov
adc
filds
xlat
or
xorl
stc
jbe
stos
dec
mov
sub
lret
pop
lret
clc
mov
lcall
lret
incl
xchg
das
cmp
inc
add
enter
fs
mov
adc
sbb
aam
and
push
push
mov
jnp
test
call
lahf
in
jmp
bound
jno
dec
add
pop
push
lret
push
pop
repnz
sub
jns
and
in
lods
xchg
pop
inc
sub
into
ljmp
jecxz
dec
sub
loope
fcmovnbe
int3
cmc
pop
inc
xor
outsb
inc
dec
sbb
pop
loope
ss
pop
aad
lret
sub
div
es
push
iret
neg
in
cmp
lea
fs
adc
mov
out
or
inc
in
out
ds
lods
shll
sbb
push
outsb
inc
divb
ror
pop
test
stos
mov
out
fmul
xorb
and
repz
adc
fmull
js
xor
jns
cmpsl
sub
in
lods
sbb
xchg
lods
test
mov
or
add
call
pushf
cmp
inc
mov
adcb
push
mov
cmp
repz
pop
test
dec
nop
xor
pop
cmp
clc
cmpsl
adc
movsb
and
call
pop
and
push
pusha
daa
jo
push
cmc
jge
rol
push
mov
sub
jge
hlt
lret
nopl
icebp
add
mov
in
outsb
xchg
out
pop
push
into
xchg
pushf
jae
mov
pushf
fwait
enter
jo
xchg
mov
das
mov
lcall
xchg
clc
mov
loope
incb
sub
adc
filds
scas
test
cmc
icebp
xchg
mov
dec
mov
xchg
sub
xchg
loope
mov
mov
imul
fdivp
add
and
adc
mov
xlat
sub
in
pop
les
cmp
dec
fs
xchg
dec
std
into
xchg
inc
cmc
pop
mov
stos
fisttpl
mov
pop
enter
stos
frstor
loope
push
repnz
ficompl
aad
hlt
jl
xchg
jge
lock
mov
push
pop
sbb
and
jmp
mov
out
in
mov
cmp
sub
push
cld
xchg
loopne
fisttpll
sub
xor
data16
add
inc
push
pop
sti
das
test
ss
mov
stos
xor
dec
fbld
xchg
test
xor
int3
in
push
lock
adc
add
popa
dec
les
add
mov
mov
imul
xchg
mov
or
or
je
lock
shll
mov
mov
push
call
xor
push
cmpsb
movsb
data16
adc
lods
lds
mov
out
dec
test
mov
test
pop
and
xlat
aas
jmp
adc
leave
jge
rcll
mov
adc
push
iret
lret
cmp
aam
sar
cmp
cmp
outsl
cmp
mov
sbb
xchg
adc
sub
mov
cmc
sahf
stc
jae
xchg
test
test
push
add
jmp
pop
fistpll
push
sti
repz
ds
dec
repz
push
cmpsb
xchg
pop
inc
jge
mov
and
shll
mov
adc
xchg
cltd
out
inc
in
cmp
cmp
aas
ret
ret
push
sub
cmp
sbb
cltd
es
daa
ret
stos
test
outsl
inc
push
mov
jno
jnp
or
cmp
pop
jg
cmc
lods
mov
ds
fadds
pusha
movsl
cmp
bound
or
out
cs
icebp
ja
push
iret
or
sbb
mov
xor
pop
fdiv
imul
das
inc
lcall
jg
in
fwait
mov
daa
movsl
je
rcl
mov
inc
iret
iret
icebp
addl
std
je
test
divb
cmp
dec
xchg
add
add
das
int
mov
jl
in
mov
in
sti
imul
test
jae
clc
incb
or
cmp
rcrb
xchg
inc
xchg
sub
xchg
cs
mov
jmp
xorl
and
or
jmp
xor
dec
mov
dec
mov
imul
fadds
scas
jns
mov
jo
mov
sbb
fs
rclb
sbb
inc
mov
stos
cmpsb
notl
cld
loope
lret
test
mov
addr16
stc
dec
adc
mov
ret
mov
xor
loop
outsb
dec
ret
call
fwait
pop
bound
push
sub
daa
adc
ja
ljmp
add
fcmovu
icebp
pop
pop
xor
mov
lret
add
mov
and
scas
cmp
pop
sbb
xchg
inc
dec
sub
jae
ja
fsubrs
int
dec
int3
jns
pop
shll
jl
xchg
ss
das
xchg
xchg
ljmp
pusha
aaa
xor
arpl
adc
pop
and
mov
push
jecxz
in
jl
daa
addr16
dec
mov
and
sub
mov
cmp
lret
pop
mov
mov
mov
sub
aam
rorb
lods
mov
or
cmpb
insb
dec
mov
mov
and
test
clc
addr16
sub
leave
cwtl
shll
roll
sbb
mov
push
arpl
dec
and
inc
xchg
xchg
jecxz
sbb
jl
or
sub
out
adc
mulb
mov
or
xchg
pop
daa
jns
cmc
push
es
loope
into
fsubr
enter
idivl
add
cmp
jne
adc
in
sarl
sbb
push
nop
push
xchg
mov
adc
stc
call
pop
xchg
push
stc
pushf
nop
xlat
jnp
lds
dec
lret
aam
fwait
int
inc
mov
bound
mov
out
test
add
push
lea
inc
jno
in
test
test
adc
sti
jg
mov
and
push
repnz
int3
xchg
xor
cld
mov
jp
addr16
cmp
loop
std
push
scas
loop
xor
arpl
int
shlb
or
xor
add
imul
mov
xor
loop
popf
dec
adc
stos
push
xchg
in
push
paddw
mov
mov
sbb
push
or
stos
xchg
movb
das
aaa
daa
cld
or
inc
out
nop
inc
dec
dec
cmpsl
or
in
aam
mov
sbb
out
fbstp
out
fs
adc
xchg
test
or
pop
cwtd
dec
xlat
jp
sub
jle
fimull
inc
or
ljmp
jno
push
int
repz
movsl
inc
pop
mov
mov
das
movsb
jno
jb
fbstp
jae
cld
ficomps
dec
push
ljmp
shlb
aam
mov
xchg
outsl
jl
fisttpll
ljmp
aas
or
xchg
pop
mov
cmp
sub
es
bound
push
cmc
mov
xchg
push
sbb
test
inc
or
outsb
fsub
pusha
mov
sub
popa
pop
cli
and
or
fistps
subb
and
adc
push
sub
mov
std
xchg
ja
sub
or
outsb
push
out
mov
xor
les
cmp
test
jge
jnp
mov
xchg
int3
loopne
and
daa
repnz
dec
xor
mov
adc
mov
fistl
std
add
fcoms
push
stc
mov
and
jno
movsl
push
add
ret
mov
rolb
lret
sbb
jne
popf
pop
mov
sar
xor
mov
inc
nop
shrb
scas
dec
add
lcall
bound
lock
mov
adc
ret
mov
and
dec
movsl
repnz
fs
cld
inc
and
les
jg
movsb
stc
jg
and
aam
sub
les
int
mov
push
push
scas
ss
cwtl
nop
xorb
and
mov
xchg
dec
add
imul
dec
mov
leave
out
mov
add
push
xchg
dec
lcall
mov
jb
cmp
dec
jne
cltd
test
mov
hlt
bsf
rcrb
and
outsb
nop
cmp
pop
test
pop
hlt
test
dec
xor
jne
dec
lock
lret
test
mov
sbb
mov
popa
mov
sub
int3
iret
fcompl
cwtl
dec
sub
sbb
sub
imul
es
out
notl
mov
mov
es
js
sti
sbb
push
cli
adc
push
repz
xchg
in
xchg
loop
ja
dec
hlt
into
hlt
sub
mov
mov
cmc
mov
fsincos
jbe
adcl
or
in
insl
ja
pop
enter
push
fcoms
std
and
push
test
addr16
loop
divb
mov
aaa
and
mov
shlb
rcrb
dec
loopne
jg
mov
stos
xor
movl
in
bound
pop
xorl
test
fnstsw
fdivr
cmpl
int
pop
push
enter
inc
test
mov
inc
roll
ja
fistpll
push
push
sbb
inc
inc
mov
jg
ja
mov
lock
hlt
outsl
push
push
ffreep
and
cmp
cmp
pop
or
push
adc
inc
arpl
arpl
sub
adc
xor
popa
mov
movsl
in
push
xchg
test
sbb
in
or
xchg
pop
fisttps
adc
lahf
gs
xchg
ds
test
or
cmp
mov
fldenv
int3
jns
jno
rol
imul
mov
lcall
mov
test
mov
rol
stos
mov
jmp
push
adc
jmp
cs
leave
out
lret
inc
ret
int
sti
xchg
mov
xor
adc
in
loopne
cld
and
jmp
push
push
jl
js
pushf
into
push
call
outsb
call
sub
xor
mov
popf
xor
cli
push
cli
icebp
inc
jp
inc
call
jecxz
cmp
mov
mov
out
je
mov
cmc
mov
imul
add
dec
push
sbb
ja
xchg
inc
lock
popf
jmp
xchg
mov
or
push
in
xchg
jae
sub
jne
or
add
add
idiv
movsb
push
inc
cmp
cmpsl
add
mov
dec
inc
xchg
ljmp
mov
in
or
outsb
cmp
dec
pusha
frstor
jle
lock
inc
push
or
rep
cs
out
xor
int3
sbb
aam
mov
xchg
xchg
loop
push
ja
mov
pop
imul
nop
shll
push
shll
push
fsubrl
inc
es
jae
jle
in
add
repnz
loopne
mov
mov
loopne
push
jl
clc
dec
cmc
das
cli
adc
out
sub
nop
in
inc
dec
je
in
add
cmp
inc
or
sti
nop
test
mov
sbb
frstor
test
lret
xchg
sbb
xchg
pushf
in
out
or
dec
xchg
stos
mov
scas
cmp
repnz
das
mov
jae
cmp
hlt
or
adc
mov
xor
movsb
mov
call
inc
adc
add
sub
push
inc
jno
test
sbb
adc
out
clc
or
mov
mov
movsb
sub
out
sahf
nop
test
adc
clc
stos
jb
or
mov
xor
sbb
mov
cmpsb
pop
and
mov
mov
or
xchg
inc
dec
mov
fdiv
int3
push
int
push
or
mov
pushl
jge
into
lods
cs
test
or
cmpsb
add
inc
imul
rcll
es
mov
fnstenv
imulb
cwtl
dec
xchg
pop
cli
jno
and
arpl
imul
imul
push
fxch
divl
rclb
xchg
xchg
xchg
sbb
xlat
mov
sbb
inc
cmp
or
js
and
fdivl
mov
adc
lods
mov
xor
dec
xor
orb
jae
rcrb
addr16
and
sbb
mull
xchg
cltd
lahf
inc
xor
pop
repnz
shrl
aad
dec
js
add
out
and
add
jge
jmp
nop
pop
jno
pop
xor
cmp
mov
movsb
je
sti
cmp
dec
sub
sbb
loop
mov
movsb
imul
std
xor
push
imul
jmp
ljmp
mov
ret
sbb
aas
cli
sub
jb
fsubr
mull
out
pop
mov
int
popa
mov
lods
cli
mov
cmp
push
sub
lods
cmpl
jl
dec
sub
cmc
shlb
lds
fs
inc
add
nop
aaa
outsl
aaa
inc
jl
fs
cmpsb
das
xor
adcb
das
and
jnp
fildl
adc
into
cmp
push
loope
das
iret
inc
add
test
inc
ds
sbb
inc
mov
push
inc
xor
fcoml
ds
or
jae
popf
dec
mov
fwait
das
mov
dec
sbb
adc
pop
sub
mov
push
pop
inc
nop
fwait
lea
and
xor
or
loop
jno
lds
loope
inc
dec
ja
stc
mov
test
pop
and
jo
sbb
int
ljmp
adc
lret
pop
fistl
aad
sub
jg
ret
xlat
cmp
cmp
test
data16
popf
inc
cmp
cmpsl
pop
mov
adc
adcb
pushf
xchg
add
mov
ret
adc
xor
push
jmp
cmp
or
imul
xor
jl
gs
outsl
mov
mov
or
sub
mov
push
call
lea
leave
push
adc
mov
push
loopne
ret
and
fstp
push
cmc
call
aas
inc
inc
shlb
cli
sarb
push
daa
mov
incb
adc
jno
jnp
fnstsw
pop
fimuls
sarl
xor
sub
stos
xor
into
notb
mov
dec
push
mov
insl
mov
inc
inc
in
push
inc
fstp
xchg
insl
in
test
push
outsb
scas
push
lds
repnz
or
mov
popf
loope
aam
mov
or
adc
adc
out
cmp
loop
out
sub
xchg
push
fs
leave
repnz
inc
fcoml
jle
xor
or
mov
sub
mov
imul
pop
mov
add
adc
mov
nop
into
fsub
dec
lods
call
fadds
push
test
or
dec
js
inc
xchg
xchg
pop
xchg
repnz
adc
inc
push
mov
jb
movsb
fwait
lcall
mov
rorb
pop
jl
push
inc
pop
les
call
cmpsb
sbb
test
push
cmp
xor
and
clc
and
or
jno
or
adc
adc
cwtl
or
xor
push
dec
push
cmp
push
jl
insl
sub
jg
loop
jb
rolb
cmp
fisubs
mov
or
icebp
mov
aaa
mov
cmp
sub
shll
lds
mov
cmp
jae
repz
aaa
push
jmp
mov
jb
into
mov
rcrl
mov
push
inc
jle
imul
mov
mov
adc
mov
mov
add
pop
adc
loopne
int
jb
js
movsb
imul
es
lods
push
xchg
dec
dec
xchg
mov
repz
testl
push
sti
out
stos
ds
ja
add
ret
and
push
arpl
cltd
rolb
dec
fistpll
mov
mov
sbb
cmpsl
cmp
sub
loope
out
mov
push
jnp
sbb
pop
lahf
inc
mov
loop
call
arpl
dec
xchg
jge
popa
ds
insb
fistpl
jbe
test
jecxz
sub
pushf
cmp
in
ss
cmp
lea
inc
clc
loop,pt
or
stos
das
std
sbb
popa
adcl
sub
dec
push
xlat
pop
pop
das
adc
xor
rol
ret
cmp
outsl
add
aam
lock
push
inc
cwtl
add
shll
and
popa
fwait
mov
dec
daa
in
or
mov
push
test
add
dec
jge
inc
mov
xor
sbb
pusha
push
dec
loope
mov
add
insl
or
in
stos
sub
pop
in
jo
pop
push
jmp
daa
inc
push
shll
or
insb
incb
mov
rorb
xlat
insl
lcall
notl
stc
fwait
cmc
adc
arpl
push
sbb
rcrb
and
loop
pop
sahf
adc
fnstcw
lret
mov
pop
ds
pusha
sub
or
andb
push
in
inc
mov
pusha
movsl
xchg
pop
fs
xor
iret
xchg
add
dec
mov
pop
shll
subl
sti
dec
in
mov
cwtl
aam
jg
pop
dec
pop
sub
or
xorl
fsubl
jb
popa
jae
bound
mov
popa
xor
sub
adc
sti
xchg
jl
outsb
cli
addr16
pushf
or
sub
es
sub
mov
fnstcw
mov
mov
xor
xchg
sahf
mov
out
dec
loope
xor
shlb
mov
xchg
ds
dec
jne
ret
out
adc
sub
pusha
cmp
lea
pop
pusha
add
lds
loop
ljmp
mov
daa
adc
mov
or
jmp
cmp
push
ja
dec
icebp
dec
xchg
loopne
mov
inc
leave
fwait
mov
adc
lods
push
jno
nop
push
call
pop
or
jg
out
sub
sub
lea
sbbb
add
fwait
jl
xor
popl
push
adc
lods
adc
pop
mov
add
jecxz
daa
insb
int3
or
in
cmpsb
test
mov
xchg
daa
std
movsb
mov
jmp
faddl
ljmp
jns
xchg
es
and
add
add
sbb
test
or
inc
in
adc
inc
add
jge
jns
xor
sub
and
push
les
sub
push
aad
and
fidivrs
enter
test
xchg
stc
sahf
or
sub
ret
scas
push
mov
mov
push
bound
sub
ljmp
in
push
jnp
pop
imul
js
mov
push
sbb
jo
icebp
jno
jno
cmp
ja
lcall
repnz
rorb
pop
pushf
shrb
pop
icebp
stc
lcall
loopne
iret
mov
je
popf
psubsw
popf
pop
std
mov
add
lds
and
mov
rolb
mov
lcall
sbb
pop
xchg
mov
mov
add
sbbb
aam
sub
jnp
mov
pushf
mov
insb
aaa
mov
sub
push
push
push
popa
inc
je
mov
lret
je
mov
jb
mov
add
daa
xchg
int
add
test
pop
jae
fmull
lods
inc
dec
lods
xor
insl
hlt
addr16
sbb
lret
cltd
xchg
loop
add
push
loopne
popf
or
mov
adc
push
adc
jne
mov
jne
push
sbb
int
mov
jp
cli
push
add
jecxz
into
out
and
stc
xchg
pushf
inc
add
cmp
or
dec
imul
dec
aam
mov
jno
or
push
mov
sti
imul
popl
xchg
rorl
and
pusha
and
inc
gs
xor
outsl
sbb
jo
icebp
pusha
mov
shll
icebp
sub
sub
es
push
inc
daa
cmp
xor
cmpb
push
lods
in
mov
lahf
testb
dec
in
mov
add
cld
jb
push
push
pop
ret
mov
xchg
mov
sbb
xchg
and
in
rdpmc
pop
sub
jbe
scas
push
xchg
push
cmp
mov
sub
xchg
cltd
ja
loop
push
gs
and
cmp
xchg
xlat
aad
push
cmc
mov
stos
adc
arpl
jb
ret
test
jbe
fdivp
adc
adcb
inc
xor
push
cmp
mov
insb
cmp
xchg
rclb
jno
pop
cs
jne
inc
fisttpl
push
in
outsl
push
jbe
or
or
flds
push
std
inc
inc
xchg
xchg
inc
rcrl
stos
lods
xor
xor
push
push
test
sbb
lods
sbb
ret
ljmp
xchg
call
fsubl
fldenv
pop
pop
cmp
sahf
out
leave
xlat
inc
inc
push
divb
in
pop
and
xorb
adc
sti
mov
cmpsl
jo
pusha
mov
sbb
xchg
sub
mov
call
cmp
fsubrp
pop
into
in
inc
and
push
jns
push
daa
faddl
ds
daa
pop
cmpsl
and
pop
and
and
push
nop
adc
out
push
out
adc
cs
ss
push
addr16
inc
xchg
sar
push
and
imul
addl
xchg
bound
aaa
fadds
jbe
bound
jo
ret
rcr
xor
and
add
fldl
dec
mov
cmp
dec
cmp
mov
lods
hlt
ret
lods
push
jno
mov
cmp
icebp
inc
xlat
jae
jo
mov
stos
inc
mov
mov
int
mov
mov
mov
outsb
pusha
repnz
leave
std
pusha
add
sub
push
lds
fdivl
adc
pop
shrl
cmpsb
addr16
xor
cld
sti
or
mov
xorb
mov
or
adc
and
xchg
mov
sbb
ja
leave
mov
mov
sbb
sub
sti
pusha
addr16
mov
imul
mov
xor
or
adc
jne
inc
dec
xor
movsb
mov
add
cmp
cmpsl
jg
sti
xchg
sub
jecxz
pop
fisubs
jge
in
movsb
notb
mov
andb
in
cmp
and
fidivrl
aaa
decb
inc
xchg
dec
push
subl
in
mov
scas
mov
sub
cwtl
and
leave
xchg
sub
lds
push
jecxz
dec
jae
pushl
and
fisttpll
gs
sbb
arpl
test
fadd
jmp
loop
das
call
jp
mov
cmp
xor
push
int
xchg
lcall
das
lret
adc
xchg
push
mov
cmpsb
mov
sbb
aad
imul
or
jae
mov
ficoml
jg
xchg
jle
cli
test
dec
cld
push
mov
sbb
sub
in
int3
xchg
fdivp
xlat
test
mov
xchg
pusha
in
mov
push
push
jno
mov
loop
mov
repz
loopne
out
dec
sub
leave
cmp
dec
push
rol
mov
ret
add
xchg
fadd
sbb
sbb
hlt
xor
push
mov
add
add
lock
and
fistpl
sbbl
xchg
push
pusha
mov
inc
pop
jns
jo
loopne
or
sbb
xor
add
push
sbb
jne
scas
dec
cmp
add
sbb
mov
std
dec
or
div
mov
inc
lods
sub
daa
les
adc
test
xlat
lock
call
push
mov
cmp
jge
inc
sub
push
daa
stos
mov
sbb
test
lods
pop
sbb
jge
push
adc
push
ds
cmp
mov
pop
mov
addb
dec
out
adc
add
jg
inc
imul
sti
push
icebp
lahf
testb
fsub
dec
outsl
adc
dec
rorb
sti
mov
adc
mov
cwtl
push
adc
and
xor
xchg
jno
xor
adc
cmp
ret
andb
imul
in
push
sub
xchg
insl
lods
and
mov
inc
in
out
pusha
push
push
cmp
fst
push
mov
aas
jl
pop
or
pop
cltd
pop
int
into
jae
dec
cmp
mov
lods
leave
jb
aam
call
push
loop
pushf
shlb
xorl
sub
jp
inc
dec
outsb
scas
out
js
inc
in
inc
out
fistpl
int
or
dec
mov
push
lret
ret
inc
std
and
or
xchg
xor
jg
divl
lcall
sub
jne
sub
popa
mov
aad
cmp
mov
imul
adc
mov
inc
xchg
xchg
out
int
pop
std
hlt
shlb
mov
sti
outsl
xor
inc
push
adc
pcmpgtw
adc
pusha
xor
leave
pushf
push
test
pop
inc
outsw
out
push
inc
xor
sbb
pop
addr16
scas
pop
sub
inc
fisubl
leave
or
bound
rclb
lea
rorb
cli
mov
pusha
testl
push
shll
xchg
fadds
arpl
sbb
inc
or
sub
int3
dec
clc
cmp
ja
pop
fistl
and
adc
xchg
popl
inc
mov
xchg
ret
adc
mov
mov
popf
cltd
hlt
cmp
cmp
xchg
pop
in
mov
adc
ret
outsb
sbb
pop
jle
mov
mov
hlt
js
mov
mov
xor
xor
push
sbb
sbb
notl
ret
aaa
pop
mov
inc
lock
rorb
lahf
scas
aas
subb
mov
cmp
cltd
into
or
sbb
jle
rcll
lret
sub
push
pop
lret
movsb
jg
mov
hlt
cli
sub
xchg
sub
mov
aas
pop
inc
mov
inc
or
jecxz
int
inc
gs
xchg
add
mov
mov
divl
fucomi
xchg
scas
and
mov
inc
lahf
popf
or
dec
add
cltd
sbb
lret
inc
pop
pop
dec
mov
sub
lods
test
fidivl
cmp
adc
mov
cmp
pop
out
cwtl
pusha
jns
add
xor
fs
xor
push
add
adcb
sbb
push
outsb
repz
or
xchg
into
mov
or
inc
cmpsl
pushf
mov
mov
adc
es
inc
cmp
xchg
xchg
sar
jbe
xor
lcall
push
cmp
sarb
mov
inc
cmpl
js
mov
push
clc
in
xor
sbb
sbb
pop
pop
mov
and
in
test
pop
mov
dec
gs
or
popf
out
inc
add
fisubl
jne
add
or
bswap
add
insl
dec
popa
and
lcall
xor
dec
jne
aas
xor
dec
std
ss
inc
loopne
les
movsl
and
stos
cmp
cmp
pop
icebp
pusha
and
sahf
jbe
mov
add
mov
jmp
lods
push
sub
inc
popf
adc
add
lock
jne
mov
add
push
mulb
add
inc
jp
dec
or
push
sub
data16
ss
mov
push
mov
dec
pop
jns
jnp
add
push
jge
cli
or
sbb
push
decb
mov
loope
jo
cmp
add
push
les
push
fcmove
data16
mov
add
pop
call
loop
inc
and
push
add
cmpsl
cld
lcall
jns
cmp
pop
scas
pop
ljmp
cmpsb
cmc
ss
sahf
lcall
repz
and
mov
add
out
push
and
gs
xchg
adc
fcmovnu
jmp
out
jle
and
arpl
sti
sbb
sub
pop
inc
rorl
hlt
movsl
pop
mov
dec
in
rcrl
inc
mov
in
hlt
imul
add
aas
push
jb
dec
aaa
xor
mov
pop
jo
cltd
add
dec
dec
pop
popa
xlat
pop
push
push
ja
dec
xor
pop
xchg
adc
inc
das
stc
pop
aaa
loopne
fwait
adc
add
outsl
fcoml
adc
inc
cmpl
nop
lret
push
push
adc
pop
lcall
jns
cmp
pop
cmp
jb
clc
add
adcb
jle
subb
hlt
movsb
out
mov
jge
pop
xchg
mov
xchg
mov
mov
dec
jne
les
movsb
lock
fnsave
fwait
cmc
dec
xor
scas
or
fwait
pop
out
sbb
cmp
jle,pt
lods
cmc
and
sbb
cs
ret
cmp
jle
sbb
ja
hlt
ljmp
sub
testl
lret
jb
in
mov
mov
dec
mov
aad
adc
mov
mov
clc
cmp
pop
sub
push
orb
add
xchg
or
in
mov
dec
or
push
inc
push
cmpsb
stos
jle
and
out
fldcw
mov
pop
xchg
push
cltd
sbb
imul
adc
jbe
adc
jecxz
adcl
push
ret
cmp
loope
pop
popf
mov
or
pop
xor
sub
mov
pop
cwtl
imull
mov
scas
mov
mov
lods
or
inc
pop
shlb
and
mov
ret
andb
dec
daa
xchg
movl
mov
cs
sbb
std
and
pop
pop
jmp
rolb
cmp
stos
sahf
int
ljmp
sub
xchg
mov
jecxz
cld
gs
jmp
out
jge
adc
scas
sti
jl
movsl
imul
push
inc
imul
and
ljmp
les
jg
cmp
xor
sbb
mov
pop
adc
adc
push
xor
repz
imul
lods
mov
jle
and
shrb
cmpb
ficomps
add
jb
fucom
fwait
inc
popa
cmp
push
stos
bound
pop
push
andl
and
and
mov
gs
test
arpl
pop
ficoml
aad
xchg
adc
push
inc
arpl
xlat
int
aaa
inc
fxch
int3
xor
jb
les
mov
mov
into
pop
out
in
fucom
xlat
sub
add
mov
sub
daa
arpl
imul
and
adc
xor
mov
mov
push
jbe
pop
scas
ss
pop
dec
daa
cmpsl
push
pop
adc
subb
ljmp
mulb
sub
or
cs
inc
pop
and
push
lods
or
pop
sub
rcll
adc
test
jle
mov
adc
insl
jg
xchg
pop
fbstp
xlat
sbbb
or
sahf
scas
push
icebp
push
jl
sub
ja
bnd
arpl
mov
jecxz
popa
jae
lea
push
xorb
cmpsl
pop
xor
mov
cmpsb
dec
jbe
mov
inc
jo
rclb
mov
or
stos
push
inc
gs
jns
out
sbb
pusha
mov
rorl
std
rorl
xchg
mov
inc
sbb
insl
or
out
mov
iret
cmpsl
in
in
aad
lret
test
mov
aaa
pop
or
mov
cmpsb
enter
cmpsb
sub
fwait
xorb
cmp
data16
in
je
bound
mov
enter
imul
popa
xor
mov
cmpsb
rol
loop
ss
mov
inc
mov
in
dec
inc
cmp
adcl
mov
ret
mov
xor
imul
sub
push
or
push
mov
xchg
stos
movsl
sub
arpl
ds
out
lcall
cmp
jge
xor
loopne
rclb
stc
push
mov
outsb
cltd
fcmovnbe
sbb
loopne
push
jecxz
call
bound
sbb
cli
push
ficomps
xchg
aad
xcrypt-cbc
cmpsl
xchg
negl
mov
xchg
sbb
sbb
out
daa
fstpl
shlb
lds
xor
in
shr
je
jnp
push
out
cmc
dec
into
jl
mov
movsl
rorl
add
jmp
lock
xchg
aad
xor
jno
ret
jnp
sbb
adc
mov
mov
aas
imul
jmp
mov
aas
mov
xchg
lods
pop
pop
neg
std
mov
mov
shl
or
cmp
sbb
out
push
xor
mov
add
adc
add
xlat
repnz
int
in
add
aaa
mov
lods
add
aad
cmp
pop
jno
dec
shlb
popa
mov
std
ficompl
mov
inc
mov
sub
mov
or
mov
int3
stos
push
add
loop
jns
xchg
dec
leave
dec
adc
xchg
fiaddl
imul
ljmp
cmpsl
mov
jmp
aad
in
jae
subb
xchg
imul
inc
push
jb
mov
movsb
push
adc
rorb
mov
mov
push
cmp
sub
mov
popl
jl
sbb
ficomps
lods
int
adc
dec
dec
xchg
stos
das
pop
fbld
jmp
lcall
ret
dec
cmpl
add
popf
fidivrs
lea
mov
out
shrl
out
stc
stos
and
clc
ja
xchg
test
imul
cld
popa
jb
push
sbb
xchg
lods
loope
int
leave
xchg
pop
ret
mov
imul
pushf
fwait
test
insl
clc
mov
pop
push
rorl
add
mov
shrl
sti
push
rol
jae
mov
jae
mov
and
lods
mov
jmp
or
push
cmpsb
jnp
shlb
jb
push
or
jno
jne
pop
mov
ret
cmp
lret
fisttpll
andb
in
cwtl
pop
adc
push
loope
arpl
mov
mov
xchg
mov
fwait
xchg
sarl
pop
inc
xor
dec
xchg
xor
xorb
pop
popf
mov
in
in
cmpxchg
push
push
out
sub
mov
adc
mov
jg
push
pandn
ja
mov
rorl
shll
ret
dec
sub
push
mov
push
push
out
push
cli
out
inc
xchg
xor
xchg
ljmp
mov
xor
jno
or
pop
fstpl
push
popa
fs
and
add
sbb
jnp
xchg
sbbl
or
jno
std
rcrb
lock
leave
lods
cmpsb
sub
push
mov
insb
dec
int3
sub
and
xchg
add
push
add
insl
ret
sbb
mov
popa
lock
mov
mov
daa
rolb
daa
dec
mov
xor
push
in
cmp
cmp
mov
dec
lds
mov
insb
mov
subl
idiv
mov
push
adc
mov
repnz
cmp
cmp
or
das
inc
cmpsb
lods
aaa
pop
lcall
pop
aas
pop
push
xor
lret
pop
mov
xchg
stos
cmp
aas
lahf
lock
mov
sbb
inc
pop
pop
cmp
je
adc
std
out
inc
push
fs
sub
and
dec
sbb
aam
inc
sub
lret
leave
cmp
insb
add
push
movsl
sub
pop
jp
xchg
idivl
aas
ret
out
dec
dec
in
sub
or
add
dec
arpl
shrb
pop
cmpsl
xor
addr16
leave
in
dec
cltd
inc
in
adc
test
dec
xor
insl
mov
stos
pop
clc
mov
out
sub
repnz
imul
aas
lock
xchg
dec
notl
shl
lea
mov
pop
add
push
pop
repnz
mov
xor
xchg
jle
sub
jnp
scas
push
add
hlt
lret
outsl
cltd
and
xor
jecxz
push
scas
es
pop
sbb
cmc
push
dec
shll
mov
adc
or
test
cmp
arpl
or
imul
repz
ljmp
mov
jecxz
sahf
pop
ucomiss
negb
mov
sbb
cmp
sbb
and
lea
sub
inc
and
mov
pop
dec
inc
jno
sub
ret
sub
scas
jge
mov
arpl
sub
imul
xor
or
push
std
stos
jae
jp
and
iret
outsb
push
push
jle
push
pop
inc
or
inc
lock
arpl
mov
xchg
mov
ljmp
sub
adc
sbb
mov
push
and
inc
std
pop
push
xchg
loop
pop
pop
push
add
sti
or
int3
roll
imul
gs
stos
inc
mov
sub
arpl
mov
sti
fsubs
add
shlb
clc
out
jecxz
ds
iret
neg
push
push
or
mov
outsb
push
push
or
pop
xchg
cwtl
loopne
insb
inc
sti
je
enter
push
adc
sbb
cs
jl
inc
sub
call
mov
cmc
ds
fistpll
xchg
push
xor
add
push
pop
mov
mov
sub
ja
mov
aam
mov
pop
and
call
in
into
jbe
inc
and
xor
xchg
mov
lret
mov
aam
stos
out
add
mov
add
adcl
iret
imul
jg
repnz
sti
mov
dec
mov
xorl
pop
pop
imul
sbb
mov
out
push
repnz
ret
jecxz
loopne
pusha
inc
mov
cmp
or
jnp
lea
sbb
cmp
ret
out
push
fistps
cmpsb
mov
in
and
loope
jo
jno
dec
sbb
jp
or
out
leave
les
inc
cmpsl
dec
xlat
test
jns
jo
dec
lock
inc
popa
pushf
out
inc
imul
mov
lret
sahf
jmp
lds
mov
enter
push
test
jns
xchg
loopne
pop
jae
sahf
outsb
and
lea
loopne
cmp
ffree
movb
ss
adc
sub
jae
sahf
idivl
jne
out
xchg
pop
sub
xchg
jo
stc
scas
or
mov
test
das
arpl
pop
sahf
xor
ret
sbb
enter
xchg
sbb
in
mov
in
in
rorb
xor
mulb
mov
dec
into
jo
imul
fstpt
call
test
mov
shll
ret
lea
mov
fs
insw
in
mov
adc
jl
mov
ds
fs
pushf
das
cmp
aas
fs
imul
mov
mov
add
movsb
out
push
or
mov
cmpsl
out
fwait
cs
outsb
mov
pop
dec
iret
in
inc
out
cld
pop
hlt
mov
mov
test
xlat
lods
movsb
lahf
bound
int3
add
popa
inc
mov
mov
andl
mov
pusha
test
pop
shrl
and
scas
sub
in
insl
addr16
mov
push
push
add
lock
xor
xchg
int
es
ret
fwait
into
mov
mov
cmpsl
and
int3
leave
pusha
mov
push
rcrb
rclb
pop
ljmp
xchg
lret
lods
sti
xor
out
cmp
movb
loope
or
gs
dec
cmp
int3
dec
mov
shll
mov
addr16
mov
xchg
out
cmpsb
ret
pop
pop
ret
test
ja
fcmove
mov
or
fimuls
mov
sub
push
xchg
shrl
bound
mov
negb
stc
dec
adc
out
sbb
jae
negl
mulb
jp
jo
into
mov
pop
jo
xor
scas
sti
cmpsl
inc
loope
and
cli
mov
xor
and
pushf
cmpsb
mov
stos
sub
js
fnstcw
adc
lret
fs
loopne
inc
insl
jne
dec
pop
icebp
ljmp
pop
xorl
sbbl
add
lods
clc
cmp
lret
push
pop
mov
outsb
push
loopne
and
ja
hlt
inc
out
sub
mov
fidivrs
mov
jmp
or
push
or
and
jge
in
lods
pusha
pop
stos
xchg
leave
mov
jb
test
push
test
aaa
xor
mov
setne
mov
inc
test
iret
imul
ret
repnz
jns
cmp
dec
out
xor
jge
insl
push
jg
push
aaa
out
or
jbe
jecxz
adc
pop
dec
cmp
push
shl
or
sbb
fcoml
movsb
lds
stc
repnz
dec
mov
add
sub
adc
jnp
aad
xchg
nop
mov
popa
sub
mov
sub
adc
into
ret
push
cmp
pop
test
adc
mov
pop
call
scas
mov
popa
insl
inc
stc
lahf
test
pop
arpl
lret
fiadds
ja
jmp
cltd
loopne
inc
imul
rol
aad
std
adc
mov
ror
mov
add
sarl
mov
cli
jg
cli
sti
xchg
cld
xor
or
imul
jbe
inc
int
fadds
mov
mov
pop
add
mov
jl
mov
push
xchg
adc
sahf
in
gs
and
scas
add
mov
ret
rorb
mov
xor
outsb
out
adc
sbb
testb
fnsave
fcoms
add
mov
jb
bound
cmpb
jp
cmp
leave
xchg
imul
fwait
jb
int
cmp
dec
or
mov
pop
add
push
cmp
mov
cwtl
xor
cmp
pop
xchg
xor
loopne
mov
jmp
inc
adc
ja
xchg
mov
out
pop
push
loope
ror
jo
or
push
adc
aad
inc
push
inc
ja
mov
andps
addl
sub
rol
mov
arpl
mov
cmp
cmpsl
aas
xor
pop
addr16
fimuls
xlat
stos
mov
sbb
pop
cmpsb
add
push
into
sbb
mov
push
and
cwtl
dec
inc
mov
rcrl
arpl
push
sbb
or
rorb
pop
xchg
fiaddl
or
aam
lret
imul
aaa
push
ret
stos
in
addl
push
addr16
loope
jbe
stos
or
icebp
fnstenv
push
mov
mov
xlat
aad
adc
pop
repz
imul
leave
aad
stos
aaa
lcall
add
pop
xor
pushl
sbb
and
fst
xchg
out
xchg
adcb
sahf
inc
xchg
mov
gs
inc
xchg
imul
push
cld
adc
sahf
jmp
mov
std
iret
andl
jb
fs
push
lds
inc
shl
xchg
fimuls
inc
inc
mov
int
out
lock
lcall
push
movl
adc
sti
sub
aad
test
or
push
adc
push
mov
movsb
bound
aas
insl
leave
adc
fisttpll
push
dec
call
sub
push
enter
push
add
dec
aaa
sub
push
push
ds
mov
ret
decl
dec
cli
lods
push
pop
out
mov
dec
adc
pop
call
mov
cli
incl
test
lcall
push
dec
sar
fdivrl
add
popa
std
sbbl
hlt
sbbl
cltd
fdivrl
push
inc
sbbb
jb
je
and
mov
lea
jno
push
rolb
arpl
fmull
and
pop
stos
pop
mov
idivl
push
and
popf
mov
into
xor
mov
movsl
arpl
loopne
and
cld
xor
cmpsl
sbb
sub
loop
inc
loopne
and
fsubs
xchg
lcall
xlat
pop
jb
push
cmp
xchg
sub
jns
cli
cmc
sbb
pop
call
lds
enter
or
out
arpl
xlat
pop
mov
and
xor
xor
mov
xchg
fs
clc
fsts
shll
lea
es
mov
push
shlb
mov
cmpsl
ret
jp
shlb
cltd
aad
sub
outsb
fwait
jg
dec
dec
dec
sub
jb
out
sbb
xchg
hlt
sbb
pushl
sub
inc
sub
out
aad
insl
mov
adc
fstpl
cltd
sbbb
cmp
xchg
and
scas
sub
mov
test
ss
mov
dec
bsf
and
and
cmc
xchg
jmp
aad
jno
xlat
fwait
xchg
mov
pop
cmpsb
push
cmp
mov
jae
add
shl
fcmovne
mov
or
adcl
mov
test
pop
mov
hlt
mov
bound
scas
sub
add
or
gs
pop
iret
dec
lock
imul
cmp
in
je
pop
ret
mov
mov
ja
dec
lret
out
xchg
mov
pop
outsb
sbb
nop
sbb
cltd
sub
aas
xor
cli
add
enter
jmp
dec
stos
jnp
or
test
aam
stc
rcr
js
xor
lds
pop
lcall
out
xor
shlb
mov
data16
jae
pop
jns
icebp
push
adc
add
cli
lahf
push
shll
push
push
xchg
mov
leave
nop
inc
inc
out
push
cmp
ret
mov
push
fcoml
mov
leave
and
dec
fidivrl
sarb
xor
cmp
mov
adc
sysret
je
adc
call
loop
scas
or
adc
jmp
inc
mov
ret
emms
pop
pop
in
push
adc
arpl
mov
shlb
leave
aaa
and
add
add
inc
sbb
mov
jnp
scas
lods
cld
jbe
jg
pop
xlat
and
adcb
adc
lea
movsl
mov
cmp
in
pop
mov
jne
in
cmp
cmpb
push
sbb
adcl
popf
fdivrp
xchg
push
mov
push
or
std
or
push
and
mov
idivb
lea
sbb
imul
les
jl
pushf
fstps
mov
sti
pop
sub
loop
subb
xchg
ds
mov
mov
jl
ret
insb
hlt
or
jge
push
jbe
shrb
mov
mov
push
inc
in
pop
dec
and
inc
shrl
pushf
adc
not
ret
ja
push
adc
sub
xchg
pop
movl
xchg
aas
xchg
popf
or
aad
mov
sbb
lock
mov
pop
cli
arpl
mov
out
xor
lods
leave
jl
add
mov
mov
mov
mov
stos
int
xlat
jle
ja
sub
adc
sub
mov
dec
aaa
sub
pop
in
ds
add
bound
xchg
mov
mov
dec
jno
enter
fisubrl
xor
rorb
pop
mov
inc
es
and
sub
mov
mov
and
adc
cmp
es
stos
shlb
push
fidivl
add
jge
lret
xchg
icebp
jmp
addr16
sbb
int3
leave
cmpl
mov
ret
outsl
rcl
or
xor
shrb
mov
in
scas
pusha
cmp
xor
mov
inc
pop
mov
sbb
jb
movsl
mov
cmc
int
lcall
inc
push
sub
jmp
sub
xchg
or
jmp
adc
aas
sti
cli
scas
sarb
adc
fwait
dec
ljmp
outsb
pop
xor
dec
out
mov
stos
jmp
add
pop
movsb
lods
loop
rcll
stc
pop
or
add
cwtl
iret
and
mov
sahf
aas
ret
jne
enter
mov
mov
ds
lret
and
int3
jmp
lods
stc
jno
aaa
mov
imul
cwtl
xchg
movsl
pop
xor
lods
outsb
pop
add
adc
and
in
push
stc
mov
sbb
sub
test
jb
scas
xchg
lock
jmp
aas
shll
and
sbb
xchg
lahf
mov
add
pop
subl
ret
adc
push
cmpsl
cld
jbe
imul
in
jb
mov
xor
int3
mov
hlt
iret
fwait
jns
dec
sub
andb
cmp
sub
jg
pusha
push
adc
push
or
dec
jg
fwait
mov
sarb
jmp
js
jge
or
sbb
mov
mull
jb
adc
out
push
lds
jnp
mov
lea
push
adc
repz
lods
scas
pop
add
inc
push
xor
ja
cltd
fidivrl
or
cmp
and
jne
pop
xchg
dec
lret
cmp
roll
jl
xor
mov
mov
mov
push
mov
push
out
sarb
aas
cli
aad
jecxz
pop
jno
xor
sub
loop
pop
push
dec
ret
pop
pop
or
negl
mov
jo
cmc
sub
sbb
out
scas
pop
jne
inc
push
bound
push
mov
clc
or
mov
ret
lahf
jl
cmc
mov
decl
ret
in
mov
cld
repz
rcll
daa
dec
repnz
xchg
mov
aam
mov
fdivrl
inc
call
stos
pop
bound
dec
aad
mov
fnstcw
mov
jp
je
adc
addl
mov
xchg
cmp
or
and
jecxz
arpl
test
jg
insl
xor
pushf
adc
ja
adc
lods
pop
pop
adc
add
pop
inc
lds
enter
sub
lcall
cli
mov
adc
adc
jae
and
in
and
sub
cmc
addl
ja
dec
jl
mov
mov
cld
and
dec
stc
mov
xchg
fldl
and
mov
push
jo
repnz
sub
insl
repz
cwtl
xchg
dec
ja
adc
mov
out
add
sub
sub
mov
push
fdivs
stos
sub
mov
cmp
sub
xor
enter
mov
xorl
xor
or
jns
stc
adc
and
hlt
call
fistps
sbb
hlt
clc
outsb
shr
jl
lgs
mov
adc
test
xlat
xor
lret
test
xchg
inc
add
std
fists
stos
bound
cli
sahf
xlat
loop
sbb
pop
js
test
jb
mov
lods
pop
fnstcw
les
fiaddl
dec
pop
popf
pop
pop
xor
push
in
pop
and
insb
popf
enter
call
xchg
sub
or
js
cmp
into
aas
pusha
xor
mov
cld
out
mov
dec
in
popf
push
dec
xor
push
cmp
push
xor
in
sbb
popa
dec
push
insb
mov
push
mov
push
mov
dec
hlt
cmp
cmpl
or
cmpl
jo
mov
inc
xchg
dec
es
test
push
dec
imul
sbb
or
movsl
or
clc
cmp
and
jg
aad
sbb
dec
gs
adc
xor
mov
push
or
jns
pop
push
push
sub
les
movsl
jecxz
fldt
mov
scas
add
jns
or
lcall
shrl
sbb
xor
sbb
outsb
xchg
sbb
pop
scas
inc
adc
popf
dec
leave
nop
out
xchg
loop
push
shrb
dec
loopne
push
xchg
test
rcrb
adcl
pop
loop
ret
ss
je
pop
mov
out
fidivrs
mulb
out
out
testb
das
inc
mov
sub
out
cmp
inc
mov
ljmp
adc
mov
fdivl
dec
aas
pop
lahf
dec
jne
fsubr
fwait
pop
mov
gs
fisubs
sbb
repz
and
lea
lcall
lret
imul
les
dec
add
fisttps
dec
or
pop
xor
aas
push
xchg
mov
cmp
ficoml
bound
pop
mov
ficoms
fisttpl
jge
push
cli
loopne
hlt
push
fsubs
js
adc
pop
scas
cmp
inc
scas
das
nop
into
or
insb
out
cmpsb
stc
in
fiaddl
rcrl
inc
inc
sbb
cmp
xorb
push
pop
and
jo
bound
ret
pop
jmp
sub
xor
jno
roll
lahf
pop
pusha
out
xor
xchg
mov
adc
cld
imul
shrl
or
mov
push
scas
add
aas
pop
loop
enter
popf
jg
jnp
int
test
sub
push
mov
xlat
and
mov
hlt
enter
inc
sub
mov
punpckhbw
mov
inc
cmc
popa
push
test
push
mov
cmp
lcall
mov
sbb
mov
and
xor
icebp
ja
lods
add
mov
int
jl
jecxz
fsubs
int3
xchg
lods
xor
pop
mov
insb
ljmp
sub
mov
xchg
xor
sub
push
subl
bound
hlt
cmpsb
dec
dec
sarl
pop
rorb
popf
xchg
pop
scas
into
cltd
pusha
adc
mov
iret
xchg
push
cmp
sbb
ljmp
push
subb
add
daa
fdivs
hlt
jmp
push
sub
shr
dec
add
dec
mov
icebp
mov
mov
xor
inc
pop
cltd
movsl
js
pop
fwait
mov
cld
sbb
mov
push
jne
pop
popf
inc
xchg
fsubrl
sbb
movsb
push
and
test
mulb
je
adc
lock
cmp
pushf
pop
daa
dec
mov
aas
dec
stos
in
lret
or
mov
sub
imul
pop
xor
sahf
cwtl
stc
leave
sub
pop
or
mov
inc
mov
mov
pop
mov
jmp
outsl
xor
fimuls
jno
stos
ljmp
rolb
cmp
std
sbb
pop
enter
fisubs
sbb
daa
shlb
fsubl
pusha
aad
out
sbb
adc
rclb
and
ja
test
test
mov
es
mov
outsb
outsl
xchg
pop
lds
push
xlat
test
inc
call
xchg
out
push
in
mov
adc
dec
lcall
ljmp
xor
aas
cmp
fs
arpl
lea
js
mov
js
emms
lret
stos
adc
out
in
jno
and
jle
mov
mov
lcall
hlt
cltd
call
dec
mov
stos
hlt
mov
push
cmpsl
mov
jl
dec
out
jb
mov
daa
idiv
hlt
cmp
xchg
push
popf
test
scas
stos
jno
ret
movsb
mov
out
xor
jmp
push
enter
xor
outsl
and
mov
lods
xchg
out
mov
mov
lret
sbb
xchg
popf
lcall
mov
add
hlt
cmp
xor
popf
cwtl
iret
sbb
sub
inc
sbb
xor
or
loop
cmp
push
push
sub
inc
idivl
out
sub
push
mov
push
dec
pop
popa
aad
adc
subl
out
stc
mov
inc
xor
or
lods
jne
adc
jp
fists
mov
insl
pusha
jmp
sub
mov
mov
fidivl
pop
pop
in
test
dec
neg
popf
inc
stos
stc
js
mov
icebp
data16
inc
test
push
jno
mov
insb
push
sub
lcall
lahf
mov
push
aaa
cmp
jno
rcll
add
push
dec
ss
cmpsl
test
push
ror
movsb
inc
imul
mov
push
sub
sbb
push
cld
ret
add
cld
out
or
add
subb
negb
stos
adc
sbb
iret
dec
sub
mov
and
imul
popf
clc
lahf
clc
xor
enter
push
fiadds
icebp
imul
lret
movsl
cmp
pop
ss
add
push
inc
shrb
push
stos
jb
notl
adc
sub
stos
push
sahf
push
scas
outsl
add
sbb
and
loope
arpl
cmp
lods
repz
pop
mov
sub
xchg
pop
gs
out
movsb
sbb
loope
inc
repz
mov
xchg
jmp
rorl
add
xor
add
gs
in
mov
lods
sahf
out
shrb
out
mov
arpl
cmp
pop
jo
sub
in
mov
cmp
xchg
cld
or
ss
ss
xor
cmp
push
xchg
sbb
push
mov
loopne
inc
add
es
scas
xchg
mov
int3
stos
idivl
mov
jl
xor
add
xor
arpl
into
xchg
mov
xor
enter
push
movsl
aaa
mov
mov
push
pushf
xchg
repz
js
std
sti
sbb
push
pop
mov
in
iret
dec
mov
jno
push
outsl
iret
pop
cmc
outsl
jge
pop
inc
mov
test
lods
sti
inc
ret
adc
jo
aam
insb
ljmp
mov
addr16
xchg
mov
es
mov
nopl
push
jne
xor
jmp
inc
inc
mov
je
pop
xor
jne
sub
rcr
mov
fwait
js
mov
or
or
xchg
in
sbb
sahf
mov
imul
and
and
xchg
jle
xor
into
data16
les
ja
or
cmp
aam
cli
add
mov
fldenv
mov
in
testl
scas
cmpsb
xor
jl
out
mov
popa
add
sub
out
sub
sub
lds
pop
cmp
test
mov
ss
mov
mov
fstpl
pop
push
mov
xchg
movsl
out
xor
testl
push
fucomip
mov
int3
and
cmp
popl
xchg
fisubl
push
push
rorl
in
mov
lcall
fcmovnu
aas
cmp
ja
mov
jecxz
xor
pop
testb
ljmp
dec
in
lret
and
or
outsb
repz
shrl
neg
dec
movsl
mov
scas
mov
test
lea
add
pusha
and
inc
mov
in
xchg
cmp
and
test
pop
enter
loopne
and
dec
jmp
dec
and
nop
aas
das
clc
add
pop
xchg
lods
sbb
inc
jmp
clc
push
cli
rcll
mov
jb
aaa
pop
lea
jne
rcr
sub
rcl
inc
cmc
fsubr
lock
out
pop
xchg
mov
pop
sub
js
pop
jo
xchg
movaps
jp
and
lds
testl
xchg
xor
aaa
cmp
sub
dec
sub
cmp
shll
cs
add
les
and
xchg
sbb
jmp
push
jg
mov
jg
xor
frstor
fmuls
arpl
cmp
xlat
xor
aam
mov
ljmp
aad
das
jns
test
das
dec
mov
aas
cld
mov
in
inc
data16
xchg
mov
pop
fwait
ret
push
daa
cld
out
inc
xchg
jp
mov
xchg
cmp
dec
jmp
in
sti
and
cwtl
lods
call
sbb
adc
xchg
aaa
icebp
test
das
addr16
cmp
clc
in
sbb
sbb
repz
je
daa
pop
mov
stc
jecxz
xchg
dec
mov
repz
mov
out
jl
popf
or
fadds
inc
push
jo
mov
xchg
mov
xchg
pop
gs
into
fistpll
adc
jp
sbb
pop
int
pop
dec
dec
outsb
lret
pop
aas
jns
mov
iret
and
mov
rorl
seta
les
xchg
cmpsl
dec
loopne
or
sbb
cwtl
arpl
rorl
push
mov
jmp
inc
jo
mov
xor
mov
vmovmskps
jg
dec
inc
adc
add
loopne
out
fsubrs
test
lcall
shrl
les
mov
push
test
adc
cli
mov
test
punpckldq
das
xchg
fsubs
and
in
mov
sub
xchg
js
adc
mov
sbb
call
xchg
or
sbb
cli
add
push
jns
cmpsl
push
mov
jo
call
mov
and
sbb
pop
push
jo
or
pop
les
inc
cs
fisubrl
inc
ja
je
lods
mov
test
xchg
outsb
pop
pop
xlat
cmp
or
fwait
and
sbbl
int3
jle
loopne
mov
movsl
cmpsl
mov
jp
fstl
stos
push
stc
and
dec
xor
cld
push
cmc
adc
repz
mov
xchg
adc
xor
jge
add
dec
push
mov
inc
int3
push
adc
jbe
adc
push
fisttps
cs
pop
idivl
cmp
nop
push
add
stc
cmc
icebp
and
cli
getsec
mov
nop
cmpsl
push
xchg
fisttps
repnz
xor
inc
add
cwtl
adc
jb
outsl
add
nop
pop
xchg
dec
stos
lahf
stos
cmp
cmp
sbb
ret
lret
or
cmp
xchg
mov
dec
mov
adc
test
rclb
push
insw
ret
adc
cwtl
dec
push
inc
int
mov
sbb
pop
adc
clc
xor
negl
dec
sub
push
sbb
cmpsb
push
sahf
push
cld
mov
aam
inc
test
sbb
push
adc
repz
lods
pop
shl
mulb
out
ds
sbb
cmpsl
jne
mov
lcall
fists
das
frstor
test
mov
jb
add
popf
out
aad
loope
xchg
inc
fmull
clc
test
je
loope
adc
sbb
inc
fs
xor
fdivr
mov
fs
adc
push
sub
jo
ljmp
sbb
arpl
std
mov
push
inc
outsb
pop
mov
aad
sti
rorl
clc
loopne
stc
dec
sub
loop
xchg
mov
jge
or
sbb
scas
leave
pop
imul
popa
push
andl
in
insl
mov
loop
loopne
pop
fildll
popf
loop
xor
push
pop
leave
mov
mov
cs
push
cld
adcl
mov
mov
jno
mov
push
stos
cmp
pop
dec
dec
adc
daa
sub
adc
pop
xor
js
hlt
cmc
xor
dec
mov
cmpb
add
pop
cmp
push
lods
mov
push
jg
ljmp
and
sub
ljmp
test
or
mov
outsb
imul
cmpsl
test
lret
and
push
inc
int
xchg
inc
push
and
test
stos
addr16
mov
jecxz
xor
mov
rorb
jno
mov
mov
int
sbb
into
lret
loop
enter
pop
cmp
pop
xchg
in
loope
stos
mov
dec
push
fsubrl
in
xchg
repz
sub
aas
aas
push
leave
mov
sahf
cmc
dec
sub
test
mulb
jmp
jl
mov
loop
repnz
sbb
repnz
pop
push
sub
lods
inc
add
jge
xor
and
outsb
ljmp
iret
lock
mov
add
push
aam
stos
mov
nop
ret
jecxz
pop
jns
outsl
rolb
movsb
mov
mov
sarb
fdivrl
test
loope
fcoml
push
inc
shlb
sub
mov
mov
rclb
aaa
into
cmc
xchg
dec
rolb
push
inc
in
test
xchg
bound
mov
mov
repz
mov
sti
popa
sub
and
jae
xchg
clc
gs
adc
jmp
addl
xlat
mov
aas
push
xor
adc
adc
in
xor
adc
jae
insl
inc
push
in
push
outsb
lds
loop
xchg
jo
jno
push
enter
sub
addr16
push
into
pop
mov
adc
test
push
cmc
sbbl
in
mov
ja
sub
pop
jae
and
incl
xchg
jo
jl
jecxz
bnd
jle
xorl
scas
add
mov
fnsave
shlb
pushf
xor
mov
inc
add
mov
mov
or
adc
mov
and
aaa
sub
add
sti
cmp
jmp
sahf
lahf
dec
cli
jp
cmp
jmp
incb
fs
imul
hlt
xchg
cli
sarb
sbb
push
pop
jge,pn
in
int3
sbb
jne
ret
cmc
sub
mov
mov
inc
lcall
in
sub
in
addr16
jl
pop
movsl
in
call
cli
dec
mov
push
push
popf
into
enter
sub
cld
bound
cmp
inc
stc
movb
shrb
cwtl
and
cmc
lock
lods
je
cmp
rcrl
jl
cmp
push
mov
out
pop
jb
inc
leave
lods
xchg
sahf
lcall
add
mov
sbb
stos
sbb
cmpsb
cwtl
dec
adc
inc
mov
lods
adc
xchg
loope
jl
insl
xor
mov
dec
push
xor
fcoms
cli
cs
sbb
push
popf
inc
add
mov
inc
mov
inc
into
cmp
rclb
inc
in
mov
add
mov
push
inc
adc
xchg
mov
or
aas
pop
inc
loop
ret
sahf
jg
xchg
xchg
inc
fists
jno
inc
mov
sub
addr16
ret
stos
push
nop
test
ljmp
xor
jne
pop
push
loope
mov
xor
fistps
jnp
into
xor
scas
add
jae
mov
cmpsl
lds
push
jb
xlat
mov
push
cwtl
sbb
jnp
cli
mull
mov
inc
cmp
or
or
and
in
scas
dec
inc
les
dec
loope
mov
and
push
pop
add
mov
es
push
bound
stc
xor
cmp
and
push
test
movl
xchg
cmp
fstl
inc
pop
jb
mov
mov
mov
adc
imul
xor
mov
xchg
aaa
pop
or
stos
mov
shll
bound
adc
test
ret
enter
push
adc
xor
inc
or
sub
sbb
ficoms
clc
lcall
xchg
jge
or
xor
aas
mov
subb
data16
andb
or
mov
mov
push
and
es
add
xlat
fadds
mov
in
call
or
dec
push
sarb
das
mov
cmp
jb
daa
dec
add
sahf
fcompl
sbb
or
add
pop
push
out
or
test
sbb
push
push
notl
mov
orl
fs
lds
cmp
mov
push
aaa
ja
xchg
repnz
dec
jle
jle,pt
sar
cltd
lds
js
jle
inc
push
mov
mov
fisttpll
push
cld
outsb
mov
lock
cmp
ja
xchg
out
pushf
cmp
cmpsb
mov
into
mov
jo
cmp
scas
lods
scas
push
shrl
cld
test
out
mov
cmc
jge
jge
clc
mov
or
stc
or
xchg
lods
cwtl
push
mov
mov
ds
pop
mov
loope
push
mov
lret
ficoms
test
shlb
jg
les
cmp
into
orb
mov
push
aaa
mov
mov
xchg
dec
ret
pop
fsubrl
addr16
pop
lds
jo
cmpl
int3
cmp
inc
outsl
in
lcall
je
adc
js
ja
loope
inc
xchg
bound
data16
mov
xor
pop
xchg
lods
cmpsl
icebp
cmpsb
scas
sbbb
jne
push
cmpsb
mov
and
push
pop
iret
incb
and
cmp
out
push
je
jg
test
xchg
sbb
jle
ret
dec
pop
xchg
push
push
pop
fs
js,pt
out
fwait
xor
in
insl
inc
popa
lcall
and
mov
imul
cmp
inc
sub
mov
leave
inc
gs
dec
jnp
insl
popf
pop
cmpsb
add
fnstsw
xchg
or
mov
daa
or
fwait
xor
test
cmp
insb
cmp
push
inc
sbb
fcmovbe
xlat
repnz
dec
and
sub
add
repnz
pusha
lret
lahf
leave
push
jmp
ja
out
push
mov
push
into
stos
cmpsb
test
mov
out
cmpsw
dec
inc
sub
mov
cli
movsl
cs
nop
stos
cs
bound
jo
incb
subb
sub
lss
mov
ret
daa
loope
les
xor
mov
mov
mov
push
mov
sbb
call
inc
xchg
pop
popf
inc
mov
shl
int
movsb
rclb
mov
movsl
and
push
arpl
dec
ja
fwait
sti
jno
and
js
cmp
mov
enter
leave
faddl
xor
add
aad
adc
jmp
push
cwtl
lret
jecxz
or
pusha
xchg
and
xor
lcall
in
or
sbb
cmpb
inc
insl
stos
pop
and
add
insb
sbb
sbb
js
and
dec
xchg
sub
dec
lahf
addr16
pop
or
iret
fldt
adc
add
sub
imul
std
orb
mov
int3
dec
push
in
shll
mov
lcall
xchg
outsb
shll
inc
inc
sub
test
loopne
xchg
test
cmc
push
enter
inc
sbb
aaa
xchg
xchg
inc
fcoms
fnsave
push
pop
or
mov
es
xchg
lods
shll
inc
in
cmpsb
xor
mov
lcall
mov
xchg
xchg
pop
stos
mov
lcall
inc
fwait
push
fsubr
mov
jns
vdivss
push
notl
in
xor
xchg
xchg
or
dec
leave
cmp
xchg
mov
push
dec
ret
cwtl
mov
lods
mov
lods
mov
ds
fcomps
jecxz
mov
lahf
inc
fldenv
imul
xchg
jg
add
jl
or
xchg
sbb
mov
add
std
cmp
imull
xor
xchg
or
fs
and
mov
xchg
dec
lock
sarb
push
add
mov
jno
arpl
imul
xchg
cmp
into
mov
fstpt
inc
fdivp
aad
nopl
cmp
sbb
pop
orl
test
adc
loope
xchg
daa
or
lcall
lret
mov
lock
lock
movsb
dec
iret
aad
test
mov
clc
loopne
into
cmc
mov
aad
lds
mov
and
sub
mov
push
cmc
or
scas
nop
dec
stos
mov
scas
sbb
push
imul
and
fildl
mov
add
adc
pushf
pop
xor
adc
push
push
call
int3
test
xchg
out
cs
into
sbb
das
lcall
xchg
jnp
fwait
or
repnz
xor
sbbb
sbb
icebp
jbe
aaa
dec
pop
dec
lcall
clc
push
mull
daa
mov
roll
into
push
or
dec
pop
gs
outsl
sub
inc
out
xchg
pop
and
push
loopne
call
inc
negb
jb
cmpsb
jns
push
ds
xor
mov
cmp
out
fsts
cmp
mov
stc
out
xor
aas
mov
sbb
jg
arpl
pop
adc
push
sbb
push
xor
sub
in
adcl
wbinvd
mov
mov
mov
scas
cs
and
lret
push
dec
mov
cmp
cld
add
ja
fidivrs
inc
adc
in
fmul
imul
aas
movsl
lods
jp
loop
jle
sub
fists
mov
sub
dec
fwait
sahf
lret
dec
loopne
aad
xor
es
adc
pop
xchg
dec
divb
ja
add
mov
loopne
andb
xor
or
push
pop
cmp
lea
push
pop
iret
mov
sub
dec
lcall
push
ds
ret
jno
imul
jnp
int3
nop
xchg
das
jp
fwait
jp
cltd
das
ja
outsb
jecxz
add
mov
xor
xchg
sub
stos
je
leave
fsubp
jnp
lret
push
push
sub
xor
add
push
mov
pop
xlat
cmc
dec
aad
push
out
fsubrp
mov
call
cmp
dec
idivl
int
es
into
movsb
ja
movaps
notb
cli
push
add
sub
or
sbb
aaa
cmp
inc
push
mov
ret
sbb
mov
shlb
cmpb
je
gs
cwtl
mov
aaa
mov
sub
jbe
gs
leave
mov
js
test
call
mov
scas
gs
dec
pop
pop
and
movsl
addl
data16
mov
mov
in
ljmp
sbb
mov
push
dec
xchg
aad
add
cltd
pop
pop
fs
mov
cmp
movsb
jne
mov
icebp
dec
std
jne
pop
add
movsb
sbb
add
in
xor
cmp
mov
inc
scas
push
lods
cld
ret
pop
mov
test
scas
jp
adc
lcall
das
inc
mov
dec
sbb
and
adc
pop
popf
or
outsl
stos
or
mov
xchg
jg
push
mov
cwtl
call
addl
std
sbb
ja
or
repz
xchg
orl
scas
in
mov
or
decb
test
cmp
mov
push
incl
rclb
call
test
cwtl
adc
rorl
movsb
pushl
cmpsb
pusha
in
xor
sahf
out
mov
out
push
sub
fadds
adc
or
cmp
cmpb
sti
mov
insb
out
pop
in
loop
repnz
imul
subl
decl
icebp
pop
pop
cmc
and
aaa
push
cmp
das
xor
jae
jmp
aas
jp
outsb
in
and
sbb
lret
push
sub
mov
add
mov
cmp
push
loopne
xor
scas
hlt
repnz
data16
in
xchg
call
dec
fidivs
cmpsl
pop
test
ret
stos
data16
or
sub
rcl
inc
xchg
adc
cwtl
lahf
sahf
fwait
sbb
inc
ja
pop
xchg
sub
or
out
or
jne
push
ss
push
pushf
imul
test
xor
enter
xor
les
xor
sub
dec
icebp
jmp
movb
mov
jb
mov
in
dec
js
out
dec
jmp
lcall
pop
mov
jo
inc
iret
xchg
xchg
cmpsb
and
lods
filds
hlt
test
pop
pop
lds
sub
sbb
fwait
gs
mov
pop
inc
dec
mov
mov
inc
dec
add
dec
mov
scas
cmp
inc
or
pop
sub
sub
add
cmp
shll
rorl
cmpsb
mov
xchg
cmpsl
dec
adc
stos
cwtl
ror
iret
mov
sbb
gs
jb
sub
xlat
xchg
lret
out
scas
adc
mov
xor
sarl
dec
xchg
dec
adc
inc
mov
dec
push
orb
mov
cltd
in
sbb
mov
outsl
dec
inc
inc
add
sub
jmp
and
in
xor
inc
inc
cmpb
inc
sbb
mov
imul
insb
idivl
mov
add
sub
and
cmp
jg
sbb
sbb
gs
mov
mov
xchg
cmp
xlat
mov
hlt
neg
lcall
xchg
or
out
jno
and
push
jmp
dec
out
jp
enter
lods
inc
jnp
mov
sete
loop
ja
mov
jns
push
xchg
out
dec
mov
cmp
hlt
outsl
jae
ljmp
shll
fldz
push
or
push
fwait
adc
cltd
dec
addr16
pop
add
and
lcall
dec
mov
xchg
xor
cmpsl
cmp
shll
sub
pop
lea
loopne
icebp
jae
mov
scas
test
mov
das
mov
adcl
imul
cmpb
push
jge
cltd
pop
jno
push
fbld
cs
add
mov
xchg
daa
dec
mov
stos
ja
mov
mov
xor
movsb
pop
push
lret
or
inc
add
jo
push
pop
pusha
rcrb
xor
sbb
push
mov
mov
add
insl
in
fcos
push
xor
repnz
xor
out
add
lods
sub
dec
cmc
pop
sub
dec
push
or
ret
in
mov
out
pop
and
xchg
mulb
cmpsb
xchg
cmpsb
lods
incl
sub
fdivr
jno
addr16
pop
into
pop
push
nop
mov
in
insb
iret
ficomps
std
xor
add
cmp
dec
outsl
out
repnz
xchg
in
mov
cmpsb
lahf
jb
cmpsb
adc
call
inc
jmp
fs
add
fiaddl
mov
in
or
addr16
xor
cmc
jnp
xlat
or
enter
xor
mov
pushf
popa
scas
mov
or
add
mov
xor
hlt
sarb
adcl
movsb
fsubs
aas
cs
stc
inc
rcrl
jmp
movsl
or
inc
fiadds
xor
cmp
push
shr
mov
enter
push
xchg
pushf
xchg
mov
hlt
imul
out
loope
jp
pop
packsswb
cmp
push
cld
pop
test
sub
mov
push
or
pop
addr16
mov
add
dec
cmp
cwtl
dec
push
inc
sbb
into
push
rcrb
cmp
mov
das
mov
inc
dec
pop
out
aas
jae
sti
adc
pop
jb
xchg
jbe
sbb
lcall
ss
mov
popa
mov
jl
sbbb
popa
rcrb
mov
mov
xchg
adc
mov
sub
out
cmp
stos
adc
xor
sub
mov
mov
push
cmp
scas
push
or
and
andl
xchg
cmp
popl
mov
pop
cmp
inc
test
test
inc
loopne
fnstsw
and
int3
das
cmp
adc
sub
aam
hlt
inc
out
add
and
jg
push
xor
sbb
xchg
push
lock
fiadds
or
imul
adc
mov
mov
ja
sub
addb
jb
data16
movsl
jbe
es
sub
jnp
jns
push
les
lret
jp
and
xor
xchg
sbb
pop
sub
lea
jecxz
dec
xchg
outsb
and
mov
les
adc
mov
fadd
mov
or
pop
ds
dec
test
int3
push
or
or
aam
pop
and
movsb
jbe
sahf
lock
mov
andl
shlb
js
xor
inc
cld
fs
sti
mov
jg
int3
stc
popa
jne
cmp
ja
jbe
rcl
stos
sub
gs
les
call
xchg
outsb
stos
ja
ljmp
imul
in
sbb
and
inc
es
lahf
mov
mov
pop
daa
xchg
pop
popa
and
lahf
push
mov
or
push
outsb
mov
shll
fidivrs
sti
pop
les
pusha
test
mov
and
enter
push
iret
mov
dec
jbe
iret
sub
aad
cmp
push
cmp
in
sbb
test
lret
or
lcall
pop
test
and
jbe
sbb
xchg
inc
mov
mov
aam
cli
xor
jnp
jns
and
dec
jne
aam
cmp
add
dec
xor
mov
push
adc
ja
xchg
push
clc
or
fistpll
xchg
test
xorb
pop
das
icebp
xchg
xchg
nop
push
push
push
adc
and
scas
pop
inc
jp
in
fwait
mov
aad
jg
cmc
test
andl
jnp
dec
add
fldt
sub
push
pop
jl
ljmp
cmc
ret
dec
ret
out
adc
sti
fadd
jmp
bound
push
and
jns
out
cmp
push
and
push
out
xchg
cmpl
imul
adc
push
fstps
mov
mov
adc
sub
fs
fcoml
mov
ret
push
in
adc
mov
fisttps
nop
loopne
or
adc
stos
cmp
push
rcr
or
xor
or
xor
jae
fstps
and
les
lock
pop
mov
dec
jbe
adc
sbb
adc
mov
imull
jno
sbb
mov
dec
mov
jge
jno
push
jb
cld
rclb
dec
les
pop
dec
sbb
aam
test
push
cmp
lcall
mov
adc
fsubr
and
icebp
cmp
aam
ret
in
cmp
sbb
dec
out
jp
xor
cmc
dec
lcall
cwtl
ficompl
dec
add
jl
hlt
ljmp
cltd
push
or
inc
sub
lahf
std
xchg
inc
testb
les
push
les
addb
push
int3
dec
or
mov
adc
lcall
sub
mov
mov
sbb
mov
ret
xlat
mov
dec
add
mov
sub
or
ret
add
test
imul
mov
cmp
in
in
out
mov
shlb
rcrl
xchg
pop
dec
inc
add
mov
push
adc
lret
and
inc
cltd
fs
jne
std
pop
fbstp
cwtl
xor
adc
jle
xor
push
and
pop
int
sbb
mov
push
mov
lcall
shrb
icebp
jne
push
mov
jae
jmp
mov
mov
test
cs
les
test
fwait
cmp
xlat
push
fld
insb
mov
insb
pop
xchg
jo
test
mov
ss
outsb
test
ret
mov
testl
pop
mov
mov
add
lods
out
sub
orl
les
add
mov
mov
cmp
pop
and
clc
or
in
mov
push
pop
lods
int3
dec
or
sahf
pushf
push
inc
mov
inc
sti
dec
test
push
adc
pushf
sbb
sub
or
enter
mov
das
out
push
aad
xchg
cmpsl
nop
pop
jmp
fimull
lret
push
sbb
pop
xlat
scas
xorb
sub
mov
ss
add
pop
inc
lahf
push
mov
dec
addr16
and
push
js
in
or
mov
mov
test
dec
jns
pop
imul
test
dec
pop
lcall
das
shlb
pop
dec
adc
mov
xor
or
jle
cli
push
adc
sti
jne
mov
sub
push
dec
pushf
bound
dec
adc
outsl
add
fwait
scas
jecxz
xchg
mov
int
cmp
mov
test
jbe
sbb
jp
mov
cmp
adc
or
outsb
add
dec
aad
add
xlat
in
in
push
jae
or
mov
fwait
pop
in
or
and
jle
push
bound
js
adc
xchg
xchg
mov
stos
bound
jmp
mov
out
push
cli
lods
cmc
popa
xchg
xchg
cltd
jecxz
mov
push
rclb
mov
inc
mov
leave
pushf
cmc
in
mov
aaa
and
push
fidivs
cld
lret
and
or
xchg
add
ficoms
sub
dec
adc
or
jb
pop
out
inc
imul
dec
aad
mov
scas
lods
sub
pusha
fidivs
int
outsl
sti
arpl
jmp
cmpsl
fcompl
pusha
and
sbb
mov
sbb
int
idiv
xchg
shll
dec
int
jno
or
jmp
mov
addr16
inc
cs
ret
jmp
add
xchg
fsubs
in
cli
lcall
dec
js
sub
les
add
and
jnp
add
divb
cs
cwtl
inc
not
adc
dec
imul
addl
mov
fldenv
mov
jecxz
cld
vpcomd
repz
xchg
jge
insl
add
or
xor
loopne
dec
xchg
mov
inc
cmpsb
sti
fnop
cmpsl
sbb
out
and
loopne
cwtl
dec
cld
test
inc
push
call
jle
mov
idivl
fimuls
push
les
adc
fstpl
sub
es
je
or
jecxz
dec
insl
mov
pushf
mov
or
imul
jmp
fildll
out
mov
insl
sbb
pop
jns
mov
repz
add
test
cmpsb
cmpb
mov
jge
imul
cmp
mov
pop
xchg
jns
shll
pop
mov
out
xlat
ret
jae
jle
jl
mov
push
aam
adc
sub
or
mov
movsl
xlat
movsb
add
pop
repz
xchg
ror
inc
test
scas
out
fsubrs
fidivrs
mov
out
xor
push
mov
xchg
adc
test
xchg
sbb
fnstsw
mov
lahf
push
divb
add
sub
mov
scas
loopne
push
daa
scas
add
pop
addr16
outsb
les
xchg
cmpsl
cmp
iret
fisubrl
dec
dec
ret
hlt
jle
dec
shlb
shlb
lcall
pop
pop
and
idivl
lds
pop
int
xchg
pop
roll
mov
out
aam
pop
cmp
cmpsb
jnp
aas
jge
cs
xor
jb
add
xor
inc
sti
insb
sbbl
xchg
ret
fldt
out
sbb
cmp
mov
scas
insb
push
mov
mov
in
test
sbb
pop
xor
dec
lds
and
inc
dec
inc
out
jl
stos
cmp
add
cmpsl
pop
jl
in
xor
loopne
imul
xor
js
popa
xchg
and
pop
pop
rcrl
fwait
out
and
push
int3
adc
test
divl
fnstcw
push
mov
jo
sbb
cwtl
xchg
sarb
jne
sub
icebp
cmp
lret
ret
xchg
daa
repnz
add
mov
jnp
jl
add
frstor
sbb
mov
addl
push
mov
lcall
mov
push
jnp
arpl
cmp
shl
out
dec
adc
into
lcall
jl
mov
sbb
cld
cli
inc
fisttpll
jmp
imul
lds
xor
mov
in
mov
inc
xor
stc
xchg
cli
inc
orl
mov
or
cmpsl
and
lods
push
repnz
xor
adc
lods
pusha
mov
les
fstpl
pop
inc
push
iret
and
addr16
mov
hlt
xchg
jno
xor
dec
mov
cld
adc
xlat
test
jnp
mov
mov
es
pop
push
shlb
enter
xchg
notb
fadds
mov
sub
push
movsl
adc
inc
in
inc
dec
sbb
gs
push
in
pop
repnz
cmp
aam
sbb
and
jae
fnop
and
xor
imul
xchg
nop
pop
pop
in
or
jle
in
test
gs
pusha
aad
cmp
dec
push
gs
pop
push
test
pop
inc
sahf
mov
push
jns
jno
in
xor
or
fldt
test
jmp
out
clc
and
lahf
in
mov
pop
jl
out
mov
dec
or
add
or
jg
faddp
mov
mov
and
mov
add
out
daa
insl
push
out
adc
lods
popf
imul
fcoms
movsb
push
xchg
sar
xchg
mov
cmpsl
jmp
popf
fnstsw
inc
out
and
cli
push
inc
pop
pop
testb
loope
mov
pop
jo
je
xchg
pop
mov
add
cmp
push
in
mov
inc
or
inc
xchg
mov
add
ret
loope
jbe
bound
push
ret
loope
mov
loopne
out
mov
adc
mov
push
jns
sar
jnp
dec
sahf
jnp
call
enter
sti
mov
jbe
das
test
push
jne
daa
adc
xor
clc
call
cmpsl
push
addl
xchg
cmp
jne
mull
adc
sub
rol
insb
loopne
mov
jbe
das
cmp
cs
in
push
popf
sub
jp
call
aam
xor
loop
or
mov
movsb
call
cmpsb
pop
mov
mov
aad
or
dec
movsl
xor
mov
push
lea
test
pusha
mov
sub
sbb
inc
cmpsb
dec
stc
dec
mov
mov
shll
stc
cmp
adc
cmp
stc
push
scas
pop
outsb
shll
mov
iret
cltd
aaa
mov
aad
mov
jo
xchg
add
test
add
push
scas
pop
rcl
movsl
xchg
cmpsl
jecxz
jno
jl
xchg
pop
cmp
dec
pop
xorl
out
jg
pop
enter
inc
sub
bound
adc
xchg
shr
popa
test
xchg
push
sahf
and
test
mov
inc
subb
jbe
loop
scas
dec
add
fnstsw
pusha
jo
cmp
or
cmc
push
add
sub
insl
and
cwtl
lods
xchg
jbe
mov
in
dec
in
popa
jl
inc
loopne
xor
cmp
popa
xchg
out
popf
out
hlt
ret
out
inc
cmp
jge
cli
sti
inc
xor
popf
mov
mov
cmp
adc
cwtl
sbb
xorb
cmp
xchg
mov
loop
test
mov
mov
jbe
les
cmp
adc
shl
in
cmp
xchg
push
fstpl
inc
sub
mov
mov
cli
add
ja
arpl
stos
and
out
scas
in
push
push
aaa
push
xor
inc
cmp
leave
divl
jns
insl
jnp
sbb
push
xlat
inc
pop
adc
bound
jge
cmp
sbb
add
outsl
ret
loop
jae
jge
mov
data16
sbb
mov
fwait
popf
jne
push
inc
outsb
and
dec
jg
aad
scas
in
sbb
inc
pushf
and
or
int3
in
or
arpl
rolb
and
loop
popf
push
cmpb
into
jl
aaa
push
leave
mov
push
leave
out
mov
cmp
xor
cmc
movsl
lahf
jl
push
mov
cmp
cmpsb
insb
cmpsl
jmp
jl
mov
divl
cmp
add
sbb
cli
mov
test
and
xor
xchg
add
das
es
inc
mov
mov
mov
loopne
xchg
stos
jge
dec
ret
sub
add
pusha
fcmovbe
mov
adc
mov
and
mov
sti
pop
dec
pop
popa
adc
mov
into
jno
push
lret
pop
adc
fs
cmp
add
dec
jp
cmp
mov
adc
stc
ljmp
push
ret
dec
rcll
mov
jo
inc
push
outsb
les
insb
cmp
nop
jbe
mov
cmp
mov
jmp
push
loopne
rcrb
sub
sub
inc
adc
test
mov
inc
in
xchg
xchg
js
cld
fwait
and
mov
fldpi
loop
fsubl
jp
jecxz
in
push
sub
cmp
shll
hlt
stos
cmc
clc
test
loop
outsl
sub
or
sahf
mov
sub
and
sbb
hlt
flds
int3
test
xchg
jnp
cmp
fdivrl
cwtl
das
mov
mov
dec
imul
test
imul
mov
pusha
ja
fwait
int3
add
jbe
int3
pop
je
mov
sub
pop
xlat
std
loopne
stos
jno
les
call
jg
sbb
push
mov
shll
push
add
xchg
movsl
pop
add
inc
mov
push
ret
aad
mov
pop
adc
adc
jae
push
jmp
pop
jp
mov
lahf
xchg
in
lods
ss
mov
cmpsb
out
data16
lock
xchg
test
cmp
xchg
cmp
push
mov
mov
daa
push
fs
and
sbb
pop
shll
out
lea
push
shl
cmp
sub
test
aam
push
js
pop
shlb
testb
addr16
mov
jnp
shl
sub
imul
adc
call
push
xor
lea
ficoms
outsl
ret
mov
rol
push
sub
and
das
adc
sbb
pop
gs
test
popa
add
aam
jmp
xor
out
cmpb
or
ljmp
mov
push
lds
dec
inc
push
xor
inc
jg
or
js
xor
ficoml
bound
push
mov
rcrl
mov
mov
push
jmp
into
lret
add
jle
dec
enter
jne
push
outsb
dec
push
je
fdivr
cli
sub
test
adc
dec
fwait
subb
xchg
loopne
or
iret
repnz
adc
cld
lret
mov
inc
or
add
and
mov
or
fmuls
test
and
sbb
pop
pop
xchg
add
lds
insb
sbb
orb
or
or
mov
sbb
pop
movlps
lea
cmpsb
mov
and
or
out
cltd
lcall
in
inc
jae
jmp
xchg
iret
cmp
scas
sub
and
mov
in
xchg
adc
pop
sti
mov
mov
or
fdivrl
sub
xchg
jmp
nop
mov
xlat
mov
imull
call
out
cmp
and
mov
shlb
popa
sbb
in
aaa
sub
aaa
xchg
mov
lea
arpl
cmp
fisubrl
push
cltd
std
call
adc
dec
in
mov
sti
cmc
divl
sbb
add
jmp
cli
mov
pop
out
xor
ss
xor
cltd
mov
ss
mov
scas
test
push
xor
push
inc
pusha
mov
mov
sub
ds
ja
mov
popa
mov
aaa
ljmp
ds
lcall
sub
pop
mov
jmp
fucomi
xchg
test
les
xchg
pop
pop
ljmp
aad
and
insl
pop
lret
mov
ret
sub
popf
mov
packuswb
fwait
lock
ljmp
fwait
nop
loope
xchg
pop
gs
lds
inc
jb
xchg
stos
das
xorb
into
rorl
mov
decl
rorl
jl
bnd
fdivs
stos
fsubrl
test
jle
pop
cmp
pushf
mov
rorb
pop
jl
adc
daa
incl
ret
push
mov
scas
test
cmpsb
add
dec
inc
repz
xchg
shlb
ja
lret
cmp
out
jmp
inc
jns
dec
div
mov
add
stos
stos
stos
test
pop
xchg
xchg
in
xorb
push
xchg
xor
lods
mov
into
cmp
pop
inc
jge
lahf
sbb
xchg
orl
xor
aas
fs
or
inc
add
xchg
fimull
inc
pop
jp
icebp
dec
scas
repz
xchg
nop
outsl
jo
lret
mov
mov
mov
pop
cmp
incb
pop
into
adc
addr16
js
repz
mov
rcrb
sbb
out
popa
mulb
xchg
loope
pop
sahf
sub
sub
adc
inc
test
mov
test
fisttpl
add
jge
jg
scas
or
in
xchg
push
lahf
lretw
or
adc
push
push
sub
sbb
call
xchg
or
xchg
cs
hlt
push
bound
into
mov
pop
mov
jne
imul
aam
fmulp
add
push
sbbb
pop
loop
mov
cmp
je
add
sub
std
out
xchg
ds
xor
pop
test
movsb
mov
xchg
mov
jb
das
jmp
cmpsb
fxch
mov
iret
add
jl
ss
mov
xor
rep
outsl
movsl
xchg
cmp
mov
adc
mov
fistl
add
or
pop
xchg
push
out
inc
push
cwtl
xchg
shrb
pop
popf
aad
lret
aas
insb
shrl
inc
pop
mov
mov
imul
mov
hlt
enter
push
insb
mov
adc
lret
in
rcr
xor
lret
ret
dec
sti
aas
jo
cmp
dec
and
push
aaa
enter
cmp
sbbl
addb
jb
push
push
scas
rcrl
adc
fmull
inc
data16
sbb
pop
insl
cmp
in
add
into
out
add
cmp
sub
push
mov
movsb
testb
pop
pushl
gs
xchg
push
ret
mov
add
push
sbb
fildl
fdivrp
call
addb
push
out
push
in
in
mov
jnp
adc
xor
cli
xchg
gs
rcrb
sti
dec
push
xchg
fs
enter
popf
frstor
or
incb
add
inc
addr16
call
adc
sbb
cmp
sti
mov
mov
pop
jl
xorb
in
lods
pop
jp
sub
fs
cmpsl
cmpl
sbb
enter
inc
addr16
ret
push
or
jmp
inc
fcomps
xchg
xor
into
inc
out
mov
rep
aas
jg
pusha
mov
sub
push
incb
jo
pusha
pop
and
fistpll
inc
scas
xor
repz
or
mulb
lret
insb
xchg
clc
jg
popf
or
mov
out
clc
shlb
frstor
loop
jns
iret
stc
scas
into
imul
das
inc
adc
hlt
in
and
shl
adc
or
jl
mov
mov
call
pop
scas
mov
pop
jns
rcrl
cmp
adc
scas
xchg
push
sub
dec
pushf
imul
mov
sub
push
out
clc
call
sbb
aas
divl
mov
push
mov
out
pop
ret
pushf
and
adc
pop
cld
dec
xor
mov
mov
xor
dec
pop
push
pop
dec
ret
les
pop
out
lret
push
cmc
and
fs
outsl
adc
dec
sub
adc
xor
jecxz
movsb
inc
xchg
aam
enter
stos
pop
mov
outsl
stos
and
iret
xchg
and
pop
rol
test
xor
outsl
cmp
subb
hlt
std
mul
je
pop
sub
mov
push
mov
mov
fldenv
test
sub
test
loopne
repnz
jp
std
jae
and
outsb
insl
bound
outsl
out
fwait
mov
sub
mov
fucomi
mov
movsl
and
lea
ret
cmp
mov
sub
ss
lds
cmp
std
sti
fld
popf
dec
test
fnstenv
cmp
loope
pop
data16
mov
fbld
lods
call
rorl
and
or
loop
addr16
push
add
jecxz
pop
push
pop
jns
sub
jle
aas
or
ficompl
shll
in
shrl
cli
bnd
dec
cmp
xor
jge
push
jmp
push
cli
adc
ficoml
pop
pop
loope
push
test
push
cmc
in
es
cmc
add
cmp
and
mov
xchg
out
push
jnp
mov
xor
cmp
ljmp
shrb
shlb
daa
rclb
sbb
add
aam
nop
mov
dec
jg
repnz
stc
ret
clc
inc
insl
insl
rorl
cmpl
out
flds
scas
xchg
daa
test
jp
out
icebp
fsts
inc
cmp
push
stc
cmpsl
lea
mov
lods
fwait
inc
mov
shll
cmp
dec
jecxz
jle
lret
jb
mov
sbb
xchg
jmp
sbb
dec
xorb
push
repnz
pop
and
ds
jp
out
lret
insl
call
cmp
sub
dec
out
mov
stc
xor
jge
mov
fmull
fs
lods
mov
or
mov
or
lods
cmp
dec
mov
xor
sub
ret
std
cmp
push
and
jmp
jbe
scas
cmp
xchg
out
xchg
dec
call
cmp
or
xchg
leave
jbe
push
mov
sub
pop
out
pop
in
lds
popf
cmovg
xchg
fsubrp
sub
es
imul
jnp
add
jge
outsl
dec
add
jae
push
xchg
cld
cmp
cmpsl
jecxz
jne
movsb
xchg
sbb
aaa
or
jecxz
inc
xlat
scas
test
jmp
mov
int
mov
fldl
mov
adc
inc
fisttpl
mov
gs
cmpsb
xchg
adc
mov
add
cli
stos
xchg
inc
mov
fwait
int3
sti
fstpt
xor
ja
pusha
je
icebp
lods
or
jns
stos
into
mov
stos
ljmp
dec
pop
dec
push
mov
cmpb
movsb
insb
push
cmp
push
xchg
mov
ds
leave
call
ja
lock
or
mov
or
xchg
inc
xor
call
adc
pop
push
add
fwait
jecxz
and
mov
ljmp
sbb
stos
test
lods
cltd
int
test
mov
cli
add
mov
gs
inc
ret
pop
adc
je
pop
inc
and
das
in
movsl
test
or
popa
push
js
addr16
pushf
mov
icebp
or
wbinvd
call
lods
aam
aad
cmc
push
sub
mov
or
push
mov
fnstcw
cmp
mov
inc
sahf
xchg
xchg
and
call
loopne
jmp
in
cmpsl
pop
push
mov
scas
sbb
jne
jo
push
aas
pop
xor
or
dec
dec
gs
push
fists
pushf
or
sub
mov
daa
push
pop
push
and
cmp
mov
xor
outsl
adc
and
repz
dec
call
lods
cmpsl
icebp
arpl
addr16
push
test
sub
jmp
jmp
int3
pop
adc
jecxz
jle
in
lahf
lcall
pusha
lret
test
fnstcw
in
out
xor
test
jno
and
pop
dec
sbb
int
lcall
mov
xorl
mov
movsl
outsl
inc
mov
aas
inc
rcll
xlat
pop
jle
adc
jg
je
loopne
test
xchg
mov
out
push
insl
xor
fwait
pop
icebp
cmp
cmp
loop
inc
mov
push
jge
mov
fldenv
les
fmul
add
cmpsb
mov
inc
add
inc
icebp
sarl
mov
lods
sub
fcmovne
bound
in
std
push
insl
cvtps2pi
loop
push
stc
in
sbb
lods
push
push
adcb
adc
mov
rclb
jmp
jne
pop
mov
sarl
mov
call
sub
outsl
std
rol
and
clc
fimuls
out
cmpsb
xor
or
packssdw
jmp
pop
fs
popf
mov
push
outsb
jp
insl
iret
pop
outsl
push
jecxz
mov
xchg
rcll
stos
jle
gs
mov
out
mov
mov
dec
int3
jne
add
ja
cmp
jmp
mov
cltd
or
test
adc
dec
and
add
rclb
fdivrl
add
mov
dec
fdivr
xchg
ret
mov
xchg
push
out
xchg
mov
ss
cwtl
add
mov
out
sub
popf
mov
xchg
mov
and
stc
adc
inc
mov
pop
sub
cmpsl
and
pop
cli
ds
cmp
mov
add
xor
jge
inc
or
ja
out
icebp
add
imul
popa
xor
rol
ds
aam
es
mov
pop
dec
mov
push
sbb
dec
loope
aam
clc
xor
lods
pop
ret
les
icebp
jle
orb
dec
outsl
pop
inc
insb
sbb
mov
dec
es
fcoml
xchg
jl
inc
mov
pop
jg
push
sub
xchg
and
gs
or
dec
mov
in
mov
sti
add
xchg
jne
xchg
adc
mov
and
push
pop
sbb
sbb
xor
cld
shlb
into
call
cwtl
aas
sahf
test
mov
cmp
push
pop
daa
cmpsb
sahf
xchg
mov
in
push
daa
or
push
insb
jno
ds
scas
mov
jmp
repnz
xor
sbbl
push
dec
xor
fidivrs
pop
push
daa
xchg
cmp
xchg
lcall
jp
and
fwait
inc
mov
es
scas
std
cltd
mov
sub
mov
bound
rcrl
and
in
adc
rorl
pop
lods
mov
sbb
adc
mov
jno
out
fwait
bound
aam
repnz
mov
pop
mov
pushl
xchg
pop
sbb
adc
jns
ja
mov
pop
hlt
data16
in
push
outsb
cmpsl
add
outsl
mov
dec
iret
add
and
mov
dec
lcall
aam
jnp
lds
mov
mov
or
repnz
and
cmc
movsb
lret
sub
xor
aam
scas
push
add
or
flds
in
adc
iret
mov
bnd
fisttpll
dec
adc
outsl
js
cmp
mov
outsb
inc
out
cmp
cwtl
adc
fcmovnbe
mov
xor
and
pop
popf
push
or
stos
mov
xchg
mov
fistpl
mov
or
xchg
xchg
pop
pop
push
pop
inc
mov
and
lcall
stos
in
adc
js
inc
xor
mov
movsl
cmpl
sbb
mov
inc
xchg
repnz
shrl
or
jno
cmp
adc
je
stc
and
sub
inc
mov
add
sbbl
xor
xor
cmp
or
fidivrl
jle
cmovs
jnp
shlb
pop
mov
icebp
adc
int3
subb
in
add
adc
mov
aam
pushf
xor
adc
fstpt
enter
and
mov
sahf
mov
call
loop
cmp
mov
push
or
cmc
int
mov
cmp
sub
jmp
int3
mov
mov
cmp
cli
mov
xor
imul
mov
ss
mov
xor
mov
iret
push
loope
mov
mov
mov
inc
jmp
adc
cmp
push
jmp
in
xor
data16
ret
or
push
iret
adc
pop
insl
repnz
mov
lahf
testb
xlat
and
inc
mov
sahf
dec
cmpl
sub
dec
in
aad
out
stos
dec
ret
jnp
fst
jnp
cli
jl
loope
cld
inc
and
inc
std
cld
in
test
lods
testb
stos
adc
addr16
mov
pop
xchg
adcb
cli
sbb
mov
rcll
popa
stc
testb
xchg
add
lods
lret
hlt
cmp
cmp
clc
mov
mov
mov
faddl
hlt
ljmp
jp
and
loopne
orb
xor
push
sbb
inc
lock
fldt
mov
sti
mov
cld
jge
pop
dec
push
aam
ret
fisubl
sub
sbb
test
int
dec
pushl
lods
or
xchg
lahf
sbb
pop
add
test
test
mov
mov
clc
leave
jle
pop
aas
into
dec
cmp
add
in
jne
and
movsl
in
xchg
xchg
shrl
out
add
sub
mov
fnstcw
mov
cmp
push
inc
ret
dec
popa
sub
mov
pop
in
mov
pop
push
pop
or
ret
xchg
mov
lret
and
jo
fsubr
divl
and
lret
imul
negl
sub
dec
cmp
aam
dec
shll
rolb
xor
enter
xchg
xchg
or
cmp
fmulp
pop
loop
xorl
jbe
loop
fisttpll
stc
and
jb
jp
addr16
sbb
xlat
je
xor
xchg
xor
aad
mov
popa
jbe
pop
mov
jbe
mov
dec
pushf
les
jne
mov
cmovns
mov
pop
sahf
mov
mov
in
int3
adc
jnp
int
sbb
int3
mov
pop
movsl
int
repnz
adc
lods
push
enter
jno
out
lret
nop
jg
adc
dec
xchg
xchg
fisubs
fucomi
das
int3
adc
or
sbb
scas
lcall
insb
sti
outsb
insb
push
test
pop
pop
repz
rcll
sbb
xchg
push
int
or
mov
push
loope
mov
repnz
cmp
mov
pop
movsl
nop
dec
pop
adc
loop
xchg
andb
mov
and
stos
out
jp
js
add
fs
adc
mov
add
les
xor
xor
call
mov
ljmp
loope
push
gs
jmp
sarb
ja
sbb
pop
inc
push
scas
pop
ss
mov
mov
fdivrs
dec
inc
call
push
cmp
fdivl
bound
cmp
dec
cmc
rcll
adc
cli
ss
dec
das
inc
call
inc
mov
les
pop
lret
lret
fsubrs
and
sbb
cmpsb
add
and
clc
or
ljmp
dec
mov
insl
xchg
and
scas
xchg
dec
mov
bound
sub
shll
test
rcrb
dec
dec
lret
sub
jnp
sub
xor
out
inc
testb
push
jl
mov
cmp
pop
mov
out
fs
out
mov
outsb
inc
aad
dec
lods
dec
dec
fnstsw
dec
sub
and
mov
or
cmc
push
lahf
lahf
aas
cmp
js
lahf
and
pop
xchg
aas
jno
xchg
mov
ja
or
inc
je
rcrb
sub
cmc
mov
stos
shlb
cli
nop
mov
pushf
mov
lock
enter
ss
in
or
xor
aaa
pushf
mov
or
sahf
mov
push
cmp
lock
sub
xchg
lea
xchg
jle
outsl
xor
jo
int3
inc
mov
jae
mov
jmp
icebp
cmp
aam
jns
inc
aaa
dec
push
xchg
pop
ret
push
xor
jle
mov
inc
push
ret
dec
pop
mov
sub
mov
les
pop
rcll
sbb
insl
fstpl
test
out
xor
dec
sub
xchg
dec
pop
sysexit
outsl
push
pop
inc
push
shrb
mov
xor
addr16
fwait
mov
or
ret
push
fistpll
sbb
div
sub
lahf
adc
ss
push
mull
push
repnz
jne
fisubrs
dec
jl
push
inc
lea
dec
cli
jp
sub
and
faddp
in
stos
and
js
scas
xor
push
sub
scas
sub
mov
mov
imul
inc
cli
ss
pop
xchg
insb
imul
lods
test
xchg
repnz
push
int3
out
ja
pop
ja
pop
data16
clc
mov
pusha
mov
ds
mov
sbb
push
cli
pop
jge
push
outsl
in
int
lahf
adc
dec
mov
sub
lea
jnp
jns
dec
out
in
jb
pushf
dec
rclb
inc
in
cmp
inc
movl
pusha
stos
popf
mov
out
adc
jg
pop
mov
dec
das
fnstsw
jnp
dec
cmp
mov
cli
mov
jnp
mov
fs
cld
jo
lahf
outsl
mov
out
pop
test
push
add
sti
pushf
in
pop
cmp
jp
xor
add
jecxz
jno
in
mov
adc
jg
pop
pop
jecxz
stc
cld
fmuls
pop
outsl
dec
addb
leave
cs
cltd
adc
mov
xor
and
lds
loop
adc
xor
mov
loopne
inc
mov
inc
jnp
mov
xchg
or
jge
insl
sbb
movsb
hlt
into
pop
adc
rorb
mov
pusha
jnp
mov
pop
lods
xor
js
out
es
mov
push
bound
stos
xchg
adc
push
dec
jne
fnstsw
ljmp
loopne
adc
sub
cmp
mov
sbb
outsb
xor
mov
mov
xor
inc
mov
pop
mov
cmp
and
mov
ljmp
loope
int
imul
jae
inc
pop
pop
pushf
xor
mov
pop
fldenv
or
lcall
or
jo
mov
and
pusha
xchg
add
push
fcompl
roll
in
cmp
mov
outsl
repnz
pop
and
outsl
cmpsb
ror
jecxz
xchg
adc
and
cld
xor
outsl
fsubrl
int
sub
mov
stos
jo
jp
jb
jbe
movsl
pop
pop
pop
xor
xchg
add
lods
mov
or
mov
xchg
jb
or
fisttps
add
outsb
and
push
out
out
or
fwait
or
jae
xchg
imulb
sti
pop
mov
xchg
enter
lret
call
or
cmpb
imul
jge
cmp
sub
xchg
ret
push
xor
add
aam
xchg
pop
xchg
adc
mov
inc
stos
in
xor
in
sbb
mov
jl
out
and
sub
adc
sub
jle
cltd
fidivrs
daa
aad
ret
movsb
and
adc
or
inc
leave
fbstp
call
sbb
outsb
psubusw
dec
dec
lret
enter
pop
pop
xchg
loope
xchg
mov
outsl
mov
in
cmp
push
insb
lock
adc
mov
jl,pt
rcl
je
push
fmulp
pop
xchg
adc
leave
jl
push
and
add
push
xor
jnp
repnz
sti
or
aas
inc
icebp
in
mov
int
sub
mov
cmp
jecxz
xchg
inc
mov
ret
pop
push
dec
shrb
jbe
outsb
mov
mov
xor
xor
mov
repz
lea
sub
mov
or
xchg
repz
imul
shll
cwtl
out
aad
aaa
mov
imul
nop
mov
insl
mov
push
add
mov
clc
stos
jb
iret
ljmp
xor
test
scas
hlt
mov
leave
mov
dec
orl
fnsave
in
scas
xor
lcall
mov
std
sti
add
call
sub
bound
adc
xor
sub
and
pop
movsb
dec
xlat
sbb
lret
ret
fistpll
rol
or
filds
sbb
jne
mov
inc
cmp
push
dec
idivl
xchg
je
mov
mov
xchg
push
push
out
scas
shlb
adc
ss
cmp
cmpsl
ss
mov
sub
xchg
addr16
fisubl
xor
sub
push
add
stos
fistps
subl
fidivs
fwait
repnz
push
es
sbb
jge
addr16
xlat
inc
adc
jae
push
insb
adc
pop
popa
in
dec
es
iret
cmp
ja
sub
outsl
mov
dec
sub
pop
call
lret
and
xchg
es
dec
pushf
and
hlt
pop
rorb
cmp
int3
push
out
jl
and
jge
fidivrs
out
sbb
dec
push
add
mov
inc
mov
adc
cltd
mov
test
insb
loope
jb
ficoms
adc
push
aas
cwtl
inc
adc
shl
inc
sub
inc
jns
stos
mov
sahf
and
call
je
popa
jno
push
and
repz
enter
fldt
ljmp
outsl
sub
pop
or
mov
lock
adc
dec
mov
mov
jne
mov
xor
and
pop
fbld
adc
and
loope
iret
repz
dec
pop
cmp
xchg
movsb
sbb
fcmovne
inc
mov
add
pop
ljmp
lods
xor
or
es
pop
dec
sbbl
sbb
or
cwtl
lret
jp
scas
adc
mov
imul
rorl
cmp
sub
dec
arpl
jno
mov
add
xchg
sub
std
lock
add
push
leave
push
mov
and
cmp
jno
pop
sbb
mov
fisubrl
jg
jge
adc
cmc
jecxz
movsb
jo
pop
cmp
hlt
lds
loopne
and
shrl
into
xchg
inc
jne
outsl
insl
scas
stos
fldcw
rorl
adc
jbe
sbbb
xor
bswap
jb
and
aas
push
in
push
sbb
pop
std
lods
xchg
test
pop
insb
push
pop
add
out
dec
ss
sbb
add
mov
xchg
inc
sub
sbbb
data16
dec
adc
xchg
sub
and
test
or
and
loope
icebp
or
sub
data16
sbbb
mov
pusha
cld
or
dec
jle
mov
jno
push
mov
pop
sbb
sti
aam
add
test
jp
dec
lcall
pushf
int
ret
jle
imull
cmp
outsl
xor
sub
xchg
aas
out
push
fstps
jge
xchg
mov
mov
loop
jmp
lock
pop
dec
add
int
not
out
fwait
jge
xchg
cmp
test
add
or
add
rorb
and
cltd
in
adc
push
dec
pop
add
lret
add
call
or
fabs
cmp
aas
lahf
pop
dec
mov
movsl
adc
cmp
adc
mov
mov
fdivrl
dec
aad
push
or
mov
or
iret
mov
mov
sbb
push
out
mov
push
int
xor
repnz
mov
adc
jmp
add
push
inc
push
cmc
xor
inc
subl
mov
loope
dec
js
lret
xchg
or
mov
pop
outsb
jle
cmp
add
bound
lahf
jno
mov
dec
loop
mov
push
sub
mov
lcall
xor
mov
inc
in
mov
mov
cli
or
mov
pop
popl
fcompl
ret
aad
outsb
mov
inc
or
not
nop
xlat
push
inc
or
cwtl
mov
shlb
adc
subl
push
lock
jmp
xchg
stos
pusha
lds
imul
in
idivb
mov
leave
dec
dec
inc
mov
mov
or
psrlq
xchg
fisubl
sbb
out
adcl
mov
inc
or
sbb
lods
cmp
je
jns
nop
mov
gs
js
cmp
mov
mov
xchg
fwait
mov
adc
and
sti
xlat
push
add
stc
or
sti
pop
mov
pop
ds
es
repz
cmp
push
cmp
jmp
fsubrs
je
jae
lods
and
add
sub
push
in
mov
andb
xchg
hlt
xor
mov
sub
mov
ja
cmpsb
cmpl
rorb
mov
mov
aas
ss
cmpsb
add
adcb
sbb
jmp
jne
test
call
fidivrs
lcall
daa
sarb
das
aaa
stc
int
sub
cltd
aad
add
in
in
cld
enter
insb
mov
ret
xchg
int
movsb
push
and
test
mov
fldl
xor
fildl
popa
adc
in
enter
sub
cmp
std
loope
jmp
jg
mov
push
cmpl
push
gs
aas
sub
sub
xor
adc
cld
sbb
mov
rolb
repz
cmp
inc
fnstenv
lods
test
divl
leave
cmpsb
and
jp
js
test
or
fsubrs
aam
cmp
sub
dec
jae
shll
xchg
in
dec
xlat
mov
sub
out
out
add
cli
cs
imul
add
mov
inc
xor
int3
push
sub
push
sub
dec
ja
fildll
scas
fsubrp
iret
daa
xor
push
and
mov
inc
icebp
es
or
icebp
lock
hlt
sub
addr16
push
pop
jle
movsl
cs
pop
popf
pop
inc
add
push
jb
sarl
push
dec
test
push
mov
shrb
sbb
mov
dec
loope
call
call
shl
lcall
nop
xchg
mov
cmp
mov
push
loopne
jmp
xor
sub
add
sti
rcrl
testl
mov
xor
lock
mov
mov
add
and
mov
cmp
pop
pop
pop
js
popa
or
shll
sbb
or
negb
cmpsl
mov
loope
je
mov
mov
leave
out
aad
out
add
add
lret
xor
jne
xchg
xorl
out
outsb
xor
inc
sbb
xchg
mov
dec
sub
cmc
mov
mov
mov
es
in
outsl
insb
stos
scas
ret
inc
pushf
and
pop
pushf
cmp
aad
fsubrl
mov
mov
loop
mov
shll
inc
push
adc
cmp
xor
fstl
addr16
stos
ret
ja
nop
fs
mulb
or
orl
adc
jl
data16
and
mov
jmp
mov
xor
mov
repnz
ret
imul
sbb
cmp
jae
sbb
jbe
inc
fistpl
jae
lret
mov
data16
dec
xor
jg
imul
daa
dec
outsl
pop
cwtl
or
jecxz
xchg
aam
jae
lods
lock
jns
icebp
in
dec
adc
add
and
std
push
mov
scas
fsubr
sub
ja
mov
repnz
out
adc
stc
cltd
cmp
cmp
lods
pop
cmpl
sbb
ljmp
clc
fldt
push
mov
add
cmp
dec
mov
mov
in
daa
dec
mov
pop
xor
jecxz
jne
push
sub
add
jo
xchg
pop
lds
mov
cld
sub
xchg
and
add
lahf
mov
push
fwait
inc
dec
fcompl
dec
ret
rorb
or
xor
add
lds
int
pop
jmp
mov
repnz
sbb
jnp
adc
inc
stos
fdivrl
lods
mov
pop
jb
incl
push
lret
cmp
aas
xchg
adc
xchg
cmp
inc
nop
test
int3
and
mov
or
enter
push
mov
jns
dec
cwtl
movsb
cmp
jp
inc
es
mov
dec
mov
xor
xor
imul
push
xchg
lret
mov
cmp
adc
jb
mov
nop
mov
push
fbstp
sub
dec
push
aaa
mov
mov
add
adc
add
jecxz
pop
loop
ret
shrl
rcrl
hlt
xorl
pop
insl
testb
sbb
imul
xlat
lret
cmp
fucomi
pop
aam
daa
pop
cli
mov
jp
mov
cli
mov
xchg
jns
sbb
mov
in
xor
push
inc
int
jae
scas
sbb
cmp
fsubs
dec
and
cmp
jg
jp
push
jg
cltd
data16
mov
scas
shll
icebp
pop
sbb
dec
jl
or
cld
sub
mov
and
mov
mov
pop
inc
pop
loope
daa
jle
jecxz
test
sbb
xchg
hlt
arpl
sbb
cld
xchg
js
addr16
push
lcall
daa
hlt
les
inc
inc
pop
popf
lcall
outsl
or
pop
push
adc
dec
hlt
push
sbbb
loopne
mov
or
repz
push
popa
ljmp
mov
xchg
inc
adc
outsb
aaa
in
jle
nop
sub
movsl
rcll
ret
mov
stos
mov
lahf
and
into
cltd
sbb
testl
push
mov
mov
ljmp
out
in
ficoml
mov
sbb
jne
pop
cld
aam
ret
btc
xor
lahf
in
xor
sub
inc
mov
arpl
dec
ds
adc
add
std
loopne
rol
xor
fcoms
and
ljmp
std
push
sbb
sub
inc
bound
cs
data16
in
lret
test
mov
dec
pop
dec
int3
ret
jne
mov
adc
adc
loop
mov
inc
in
jg
icebp
outsb
mov
stos
jge
imul
aaa
and
xchg
fiadds
mov
ror
in
push
stc
pusha
adc
bound
or
jl
frstor
dec
sbbl
push
add
adc
rclb
push
pop
ror
das
push
iret
cltd
out
daa
xor
jb
in
filds
cmp
fildl
dec
jmp
inc
push
xchg
out
icebp
jl
jo
popf
adc
aas
mov
push
jns
mov
scas
xor
repz
lret
jo
xchg
add
jle
mov
stc
iret
push
mov
push
nop
push
or
jecxz
je
pop
mov
daa
xor
test
push
dec
insb
mov
shll
into
adc
xor
mov
mov
pop
pop
adc
rcr
dec
cmpsl
dec
sarb
fbstp
adc
stos
cld
lcall
arpl
loop
inc
ret
lods
jno
mov
cltd
push
in
jbe
pop
mov
jge
stos
cmc
mov
and
clc
pop
loop
or
pop
idivl
mov
insl
ja
xor
cmpsb
or
sbb
inc
mov
adcl
push
out
or
jl
mov
addl
rcrb
pop
hlt
mov
mov
movsb
push
fldcw
mov
gs
dec
lds
enter
movsl
push
leave
lock
and
push
sahf
xor
inc
cwtl
xor
andb
fimuls
fdivrl
out
ss
ljmp
pop
push
imul
jbe
sub
add
mov
push
lods
cmp
pushf
enter
and
jmp
pop
push
cmp
mov
lret
in
aas
mov
out
pushf
rclb
inc
mov
fnsave
or
add
test
pop
lods
push
mov
dec
aas
and
out
inc
cltd
cli
mov
mov
fstpl
add
lahf
mov
int
rol
xor
rcll
dec
mov
sub
push
push
inc
xchg
inc
dec
repnz
sub
mov
movsb
or
xchg
mov
lea
xchg
pop
xchg
rolb
jl
adc
jnp
shll
pop
sub
mov
ljmp
dec
aam
mov
mov
imul
sub
fldt
subb
scas
imul
scas
dec
pop
movsb
push
pop
insb
icebp
scas
js
sub
hlt
dec
rcl
loope
mov
adc
fsubs
std
or
iret
push
jne
movsb
jl
inc
clc
out
in
stc
mov
sahf
mov
and
sub
lret
jno
cmc
jg
cmpb
rorb
xor
fsubrs
mov
jle
inc
in
shl
xor
inc
jno,pn
stc
xor
rcrl
sbb
rolb
pushf
aad
jecxz
sbb
lea
pop
adc
inc
lds
cld
in
xchg
pop
push
jge
jle
adc
push
pop
xchg
testl
or
mov
add
mov
fndisi(8087
insl
mov
adc
or
pushf
mov
and
pop
or
test
dec
mov
mov
sub
iret
in
xchg
jae
loope
add
xchg
mov
push
mov
roll
cmp
push
into
inc
jae
add
jge
add
sub
jnp
lea
fstl
xchg
cmp
add
adc
dec
pop
push
cmp
adc
repnz
mov
daa
jle
jo
mov
pusha
adc
mov
out
adc
jb
cmp
dec
cmp
into
ror
add
loopne
inc
aad
out
and
sbb
or
mov
jno
cmp
dec
pop
lret
mov
out
pop
out
inc
cmp
push
fsubs
call
enter
jno
inc
rorb
insl
mov
jmp
ss
cmp
in
imull
subl
sbb
sahf
dec
push
and
iret
lcall
pusha
lds
repz
scas
ret
push
mov
mov
cmp
pop
push
mov
mov
xor
call
icebp
mov
push
jmp
aam
jae
mov
jge
dec
pusha
call
adc
pop
inc
push
inc
inc
stos
cmp
ret
aas
jge
lds
fadds
mov
push
sub
xor
dec
xchg
orl
cmpsb
mov
push
shl
pop
mov
cmp
popf
jne
mov
or
movsl
pop
outsb
mov
dec
imul
mov
or
fwait
daa
sub
pop
dec
shrb
dec
es
jo
mov
mov
jg
add
mov
lahf
or
fstps
data16
cld
push
dec
roll
xchg
xor
mov
cmpsl
push
jno
out
shll
xchg
cli
push
and
or
and
repnz
out
aam
sbb
stos
jbe
fnstcw
adc
mov
fwait
aam
int3
shll
mov
mov
cmc
xchg
dec
pop
mov
loop
cmp
sbb
test
lds
inc
mov
aaa
scas
outsl
cs
ja
push
sub
push
adc
dec
jg
add
outsl
lahf
rorb
jbe
iret
sub
pop
ret
mov
cmpsb
es
mov
lods
xchg
dec
dec
adc
cltd
notb
inc
fdivrs
xchg
xchg
js
xchg
mov
sub
sbb
lcall
es
es
data16
sbb
jns
jbe
pop
orb
add
push
push
xor
lock
cmp
repnz
je
lea
sahf
mov
add
jae
inc
adc
lds
push
daa
iret
pop
cmpsb
push
hlt
cmpsb
testl
cmpsb
ret
fisubrl
orb
jp
ljmp
jecxz
mov
repnz
negl
outsl
frstor
dec
pushf
mov
push
dec
cmpsb
cmp
dec
int3
ja
daa
sub
les
int3
ficompl
lods
fmull
mov
testl
test
in
adc
pop
outsl
dec
imul
pop
shrb
jb
and
adc
out
js
or
cmpsl
pop
xchg
clc
or
pop
xor
ror
sub
lret
test
cmp
test
out
je
mov
movsb
dec
movsl
out
mov
lds
sbbl
and
push
test
cmc
add
repz
add
add
div
pop
xchg
les
testb
jp
cmc
icebp
fldl
popf
aad
mov
int3
mov
add
test
add
aam
push
test
aaa
ja
push
adc
ficomps
repz
xchg
rolb
xor
jg
mov
fldcw
scas
in
sbb
cli
mov
cmpsl
inc
mov
mov
xor
mov
out
sbb
sub
add
sbb
adc
pop
mov
loop
cmp
jl
mov
jl
add
lahf
mov
pop
mov
or
repz
mov
mov
dec
stos
ret
xor
cmp
fsubl
lcall
test
js
enter
nop
cmp
adc
mov
sub
stos
sub
es
ret
jnp
xorb
cmc
xchg
lret
add
mov
jo
scas
pop
mov
iret
xor
pop
lcall
sub
js
je
mov
push
xlat
repz
aam
push
adc
jl
test
mov
cld
stc
adc
cli
rcr
hlt
mov
out
jp
or
arpl
fidivs
enter
jl
jns
mulb
sarb
adc
out
scas
push
add
push
inc
test
test
ja
or
outsl
in
mov
pop
loop
movsb
divb
repnz
fcomps
gs
and
nop
rclb
add
mov
xchg
into
add
stos
lret
ljmp
mov
adc
mov
cmp
int3
lret
cli
pop
rorl
lea
push
mov
movsl
stos
mov
call
or
fstps
fcomps
cmpsl
jnp
loope
cld
aaa
call
xchg
xor
inc
movsb
sbb
mov
loopne
adc
std
push
into
or
xorb
es
jp
sub
int3
nop
fadds
lods
js
inc
scas
xchg
fcompl
notb
cmovl
adc
movl
xor
lock
insb
add
and
dec
mov
ja
sub
or
stc
mov
sbb
aas
rol
mov
sub
pusha
pop
pop
jl
mov
inc
xor
dec
ds
sub
mov
mov
int3
push
adc
mov
pop
fstpl
push
cmp
rolb
jp
xchg
cltd
mov
mov
jnp
mov
sbb
xchg
repnz
inc
pop
jp
rcrb
adc
push
xor
in
sbb
fistpll
rorl
sbb
or
pop
in
test
inc
add
lret
clc
outsl
fbld
inc
jae
mov
aas
xor
mov
xor
inc
or
xor
aam
mov
mov
dec
or
into
iret
movsb
xchg
jl
sub
and
add
adc
scas
hlt
or
push
enter
push
loope
gs
cmp
jb
adc
jns
fildl
outsb
popa
jecxz
jg
iret
mov
jmp
jae
shrl
dec
jmp
and
adc
outsl
add
pop
imul
sub
xor
mov
lahf
arpl
mov
jp
mov
aaa
sbb
es
shll
ljmp
lret
hlt
lea
adc
fbld
repnz
cwtl
mov
fstpt
mov
nop
mov
dec
popl
cld
or
sbb
cs
mov
mov
push
and
and
or
mov
cmp
scas
pop
iret
mov
dec
aaa
pop
xchg
test
movsl
lods
mov
dec
jecxz
fisubrl
dec
adc
xchg
add
cmpsb
movsl
test
mov
jle
test
mov
push
push
gs
xor
sub
xchg
inc
push
cltd
add
cmp
pop
decl
sub
dec
adc
push
jge
rclb
push
fidivrs
mov
cld
xchg
xor
mov
std
fld
sub
cmp
lock
imul
and
lea
inc
out
dec
leave
outsb
test
in
std
inc
enter
jecxz
adc
xchg
adc
int3
rcll
pop
lret
scas
lret
in
test
push
shrb
push
or
aaa
and
out
and
sbb
cltd
int
cmp
push
out
popa
inc
repnz
cmp
dec
cmp
cmp
test
arpl
add
clc
push
lea
push
pop
mov
pop
js
jnp
imul
jnp
ljmp
pop
leave
inc
mov
or
cli
pop
mov
nopl
jl
lea
loopne
jb
push
sub
fld
stc
mov
movl
pop
adc
aaa
sbb
cltd
and
push
fimuls
sbb
cltd
ljmp
sbb
aad
jnp
jnp
and
repnz
std
pop
dec
jge
cmp
outsb
jle
xor
bound
popa
adc
hlt
shrb
xor
push
inc
adc
jae
pop
push
mov
xchg
sub
jb
nop
insb
or
jns
add
jno
mov
mov
fs
mov
movsl
pop
push
mov
cltd
in
test
jl
movsb
push
imul
mov
test
out
inc
outsb
mov
call
repnz
rcrl
sbb
loop
cmpsb
aad
or
adc
sub
int
mov
std
shr
xchg
sub
call
jo
ja
dec
cmpsb
repz
add
sub
mov
adc
test
inc
jno
lahf
outsl
xor
mov
ds
jb
xchg
lock
ljmp
push
and
xchg
push
inc
in
hlt
mov
fucomi
mov
and
insb
lds
es
shll
jno
sbb
mov
pusha
jo
pop
pop
lss
mov
pop
idivb
or
lret
subb
sbb
das
or
push
repnz
je
xor
xorl
sbb
xor
mov
jge
sbb
push
sahf
lahf
icebp
loopne
inc
inc
jno
add
xchg
int3
les
or
adc
push
je
xchg
lahf
inc
lret
rol
sti
and
out
sar
aad
sti
testl
cs
sub
jne
lods
popa
fsts
lods
dec
pusha
dec
or
outsb
mov
rorb
and
lods
iret
or
push
mov
sbb
xor
arpl
test
jno
leave
sub
xor
jo
ret
inc
sub
dec
push
cwtl
data16
xor
inc
sbb
in
add
int3
mov
jo
faddp
and
in
leave
cmp
leave
inc
mov
loope
clc
pop
jnp
add
lcall
inc
dec
or
ret
mov
mov
movsl
mov
sub
inc
mov
mov
add
inc
mov
stc
popf
mov
mov
repnz
pop
inc
and
lods
bswap
sub
sti
inc
pop
in
lret
dec
cld
popf
adc
inc
add
and
shll
ja
mov
in
inc
icebp
aaa
icebp
xor
fwait
xchg
add
xchg
insl
push
call
inc
nop
pushf
fdivs
xor
inc
dec
push
fisttpll
pusha
mov
jno
pop
cmp
fs
mov
jo
jmp
inc
xor
sarb
push
pop
xor
stos
mov
mov
sbb
xor
pop
sti
daa
leave
sbb
and
test
mov
iret
das
push
sbb
or
loope
pop
or
jp
addr16
adc
movsb
into
repnz
and
loope
jge
inc
mov
test
sbb
xchg
push
bnd
movsl
adc
xlat
repnz
dec
repz
mov
adc
fdivs
or
mov
mov
pusha
cmovg
test
loopne
rorb
ds
adc
scas
stos
insb
test
jle
filds
push
enter
sbb
loop
or
sbb
cmpsl
je
pop
inc
ret
mov
rolb
fstpl
cs
add
test
ljmp
fbld
jo
jle
xchg
or
rcrl
inc
pop
cmp
testl
adc
and
shlb
xlat
jge
adc
jb
stc
pop
andl
and
cmp
mov
xor
add
arpl
fs
pop
stos
ja
scas
mov
paddusw
push
test
loop
insl
pop
pop
loop
xlat
mulb
mov
xor
or
es
xchg
movsb
daa
jle
jmp
mov
hlt
repnz
mov
and
pop
int
aad
mov
or
aas
mov
cmc
mov
pusha
je
movsl
or
dec
and
dec
rclb
jnp
sub
rolb
pop
push
and
push
leave
fdivs
jno
cs
jns
mov
xor
cmpsb
mov
mov
pop
cmp
cld
xor
pushl
push
leave
jmp
in
fidivs
adc
imul
jp
xchg
lds
stos
sahf
je
call
xchg
lods
jo
and
frstor
repz
lcall
cld
mov
ffreep
aam
pop
mov
sbb
scas
cmc
jecxz
call
out
les
xor
hlt
jge
pusha
and
push
push
push
test
popf
pusha
outsb
inc
xor
cmp
adcb
out
sbb
rolb
dec
xor
xchg
fsqrt
fldt
or
int
add
frstor
dec
cmpl
push
and
iret
jb
lock
sub
push
scas
dec
xchg
dec
ret
xchg
rcrl
leave
fwait
mov
in
into
pop
popa
xchg
daa
test
and
push
imul
or
add
push
loop
clc
xor
push
push
xchg
dec
enter
xor
cmp
mov
rol
and
or
mov
mov
inc
nop
lods
cmc
enter
adc
popa
push
hlt
mov
pop
in
hlt
xor
fdivrs
popa
gs
andl
je
sub
fidivrl
xchg
push
xor
call
push
in
test
adc
mov
adc
and
cmc
setl
sbbl
aaa
adc
std
nop
imul
push
cmp
sbb
xor
shrl
imul
lods
adcl
lahf
cmp
pop
out
dec
adc
add
mov
xchg
dec
fcompl
jl
jns
fldt
pop
jne
insl
orb
add
pop
jnp
es
sbb
dec
mov
jmp
mov
in
jp
test
mov
cwtl
into
mov
aad
fnstsw
dec
imul
inc
popa
xor
and
adc
and
cmp
mov
divl
adc
sbb
push
aam
or
lfs
inc
fistps
sbb
xchg
fidivs
pop
mov
push
inc
push
pusha
sti
frstor
lret
adc
fs
mov
fldl
cmp
out
sub
mov
jecxz
int
sub
cs
jp
scas
pop
xchg
ss
out
mov
add
call
pop
out
jecxz
cli
mov
in
or
push
mov
iret
stos
ret
stos
imul
lret
xchg
in
gs
loopne
fildll
lret
sub
hlt
xor
lahf
push
stc
and
jecxz
cwtl
cmp
sahf
stc
int
dec
cmp
mov
jbe
ret
test
mov
mov
stos
dec
adc
insl
xor
dec
xchg
adc
popf
mov
pusha
dec
dec
adc
jne
sub
lock
cli
xchg
lods
sbb
xchg
xchg
pop
sbb
adc
mov
cmpsl
popf
pop
dec
std
lahf
insb
loope
xor
lret
inc
mov
jno
pop
scas
lret
in
movsl
lret
outsb
std
int3
call
in
push
cwtl
and
ljmp
pop
pop
xor
js
out
mov
push
fildll
dec
jbe
sbb
pop
or
mov
cmpsl
dec
dec
add
into
pop
out
adc
sub
stc
cmpl
test
int
decl
sub
xchg
cmpb
rcrb
ljmp
push
in
xor
aaa
test
inc
mov
out
pop
fcmovnu
arpl
test
jb
jo
roll
call
insl
insb
fs
mov
jecxz
xor
out
xor
shl
jae
inc
loope
shll
mov
ja
cltd
xor
das
xor
mov
mov
pop
out
or
xor
inc
adc
xor
lds
lret
andb
sub
jbe
sub
mov
inc
push
inc
push
imul
enter
cwtl
xlat
xor
mov
push
xor
mov
pop
cwtl
inc
mov
xchg
inc
xchg
iret
jbe
adc
add
clc
adc
push
cwtl
jne
ss
daa
lahf
push
jl
pop
push
pop
sbb
sub
and
pop
pushf
loop
pop
xchg
cmp
adc
inc
fcmovnbe
sbb
addl
sbb
stc
dec
int
xchg
mov
aad
inc
cmp
ret
mov
sub
pop
push
adc
inc
sahf
shr
subb
sub
sbbb
pushf
pop
sub
in
push
loope
pop
mov
pop
or
mov
mov
cmp
daa
jp
movsl
dec
push
jl
push
jnp
int
mov
inc
mov
xor
imul
xlat
loop
adc
mov
dec
add
adc
jge
in
pusha
lods
adc
decb
stos
and
adc
mov
insl
or
test
std
add
and
test
lock
popa
das
sub
inc
cmp
inc
xorl
enter
std
test
pop
pop
pushf
orl
adc
fucomip
push
mov
pushf
outsb
icebp
mov
mov
out
sub
enter
adc
jp
in
pop
fnstenv
lret
faddl
xchg
mov
inc
xchg
add
mov
mov
dec
push
inc
xor
je
mov
and
or
lods
inc
push
and
mov
add
lret
mov
push
mov
sub
pop
mov
xchg
into
out
out
rorb
pop
xchg
sahf
repz
push
packsswb
gs
int3
out
jmp
gs
jmp
jp
inc
add
mov
lock
enter
inc
lods
pop
cmc
mov
les
hlt
popa
or
imulb
js
enter
daa
push
lea
jge
data16
test
xchg
ret
aaa
xor
xor
scas
shr
call
scas
mov
xchg
sbb
and
stos
scas
mov
repnz
inc
pop
in
xchg
adc
cmovnp
lret
scas
lcall
dec
adc
push
push
xor
adc
mov
rcll
pop
xlat
push
xchg
repnz
sbb
pop
ss
dec
push
mov
inc
and
and
mov
mov
fwait
test
jg
lret
xlat
or
mov
mov
lahf
xor
push
fists
scas
mov
add
jle
or
jo
add
arpl
xchg
dec
jb
lret
movsb
jl
pushf
imul
rclb
jecxz
xchg
aas
fcmovbe
shll
mov
in
in
sbb
or
jne
pusha
into
cmp
call
xchg
repz
adc
jge
push
int
sub
pop
dec
dec
xor
cmpsl
jo
stos
add
push
xlat
addr16
data16
test
sarl
mov
xor
sbb
popa
repnz
jb
jp
inc
mov
popa
add
sub
push
rorl
or
shr
mov
dec
andl
cmp
jbe
mov
stos
mov
inc
pop
sbb
out
and
lret
aad
mov
les
xor
ss
mov
int
fnstenv
add
dec
fsubrl
insb
add
shll
mov
fmulp
cmp
call
and
dec
es
movsb
fidivrl
ficompl
xchg
ja
mov
pop
jnp
inc
adc
xchg
jo
sub
mov
xchg
xorb
test
ss
sub
out
je
loope
outsb
or
stc
xlat
into
push
and
sbb
mov
sbb
mov
movsb
scas
jno
mov
daa
dec
mov
je
mov
stc
cmpsb
imul
sbb
pop
xor
or
loop
jns
jbe
push
cmp
inc
ror
xlat
aam
aam
leave
mov
mov
adc
insb
jnp
jp
push
mov
aad
in
aas
sahf
lds
jecxz
pop
and
xchg
insb
mov
mov
imul
test
cmp
mov
adc
mov
xorb
cmpsb
mov
stos
dec
mov
dec
or
push
pop
mov
jbe
notl
dec
lock
push
add
mov
fdivrl
sbb
jge
inc
mov
dec
mov
sub
push
xchg
add
pop
imul
inc
dec
insb
push
jg
lahf
leave
and
push
out
test
pop
pop
jg
aas
stc
push
pop
push
sub
xor
lret
repz
jle
jo
das
insl
xchg
inc
ret
sbb
lahf
setns
sbb
dec
test
shlb
dec
jae
mov
push
pop
divl
fistpll
imul
sbb
rcrl
imul
and
loope
hlt
sahf
pop
sub
cltd
jl
lea
sub
mov
sub
dec
cld
clc
pusha
in
sti
inc
jnp
mov
mov
lahf
add
jbe
ja
push
jge
pushf
inc
mov
or
ljmp
ret
xchg
push
mov
shrb
enter
rclb
lds
push
sbb
mov
out
test
mov
add
pop
adc
cmpsb
daa
fdivs
adc
inc
in
cmp
adcl
mov
fidivrs
shlb
nop
mov
jecxz
sub
call
in
mov
adc
add
cmpsl
incl
int
push
fs
frstor
cmp
jmp
pop
test
cmpsb
iret
jmp
push
xchg
sub
lods
dec
lods
popa
mov
mov
mov
xor
jge
jmp
xchg
pusha
shll
xchg
and
sbb
mov
popa
arpl
ja
lods
dec
clc
mov
push
movsl
xchg
or
push
aaa
dec
adc
ret
test
andb
jb
les
bswap
bound
and
pop
shrb
xchg
pop
jmp
push
adc
mov
jbe
imul
andb
aaa
jl
popf
daa
icebp
ljmp
adc
out
rcll
adc
push
repnz
sarl
popl
faddp
arpl
scas
xchg
movsb
add
pop
out
cmpsl
dec
xchg
clc
mov
lcall
pop
cld
and
popa
mov
jp
mov
out
mull
data16
jbe
pop
ljmp
sbb
outsb
hlt
pusha
adc
mov
xor
fildl
cmp
out
ja
je
and
call
dec
ret
scas
lret
mov
or
push
push
test
sbb
inc
addr16
insb
jecxz
push
mov
gs
iret
lcall
les
or
insb
mov
lods
test
mov
jns
push
sbb
shrl
hlt
lods
stc
lds
int
xchg
adc
or
xchg
inc
mov
pop
addps
xor
test
push
mov
pop
jmp
clc
loop
jg
fs
daa
pop
call
add
xor
call
shlb
leave
mov
incb
bound
lea
cwtl
adc
adc
add
test
xor
fdivp
ja
adc
xchg
jecxz
mov
enter
pop
sub
pop
test
and
ds
daa
adc
mov
mov
sahf
addr16
mov
mov
addl
mov
or
flds
fnstenv
out
dec
fsubrl
or
inc
movsb
in
mov
repnz
pop
ret
xor
push
gs
and
ss
lret
aas
cmp
xchg
jecxz
and
mov
inc
stos
sub
cld
and
pop
mov
cmp
push
into
sbb
lds
hlt
sub
jb
cld
divb
jno
in
test
cs
fwait
popf
pop
call
jbe
add
sar
push
mov
mov
cmpsl
lea
jmp
stc
ret
mov
test
add
lods
push
popa
mov
mov
dec
xor
mov
stos
mov
push
jne
cmp
rolb
mov
pop
or
mov
mov
mov
shll
stc
ffree
inc
mov
inc
or
push
sub
sub
rcrb
or
iret
rcrl
mov
les
jle
stos
adc
pop
rcr
in
add
inc
xor
xor
or
test
aas
jno
cmp
ljmp
and
dec
aaa
outsl
out
push
mov
pop
push
fdivrl
test
lock
inc
repnz
ljmp
ljmp
pop
test
pop
lods
and
fstpt
add
insb
and
scas
sbb
lock
and
mov
lahf
outsb
into
repnz
fists
xchg
jbe
shlb
sub
dec
gs
adc
mov
popf
test
stos
xchg
pop
push
ret
pusha
ds
jge
pop
mov
pop
enter
xlat
les
rcrb
jno
mov
call
lods
mov
imul
shll
mov
scas
push
andl
incb
push
sbb
push
mov
cs
xor
insl
fcompl
jmp
call
std
lods
and
pusha
int3
lahf
and
add
int3
sub
js
loopne
fstpl
jmp
shrb
push
sahf
adc
mov
adc
ja
cmp
movsl
xchg
xor
adc
add
sbb
xor
je
lcall
int3
scas
aad
mov
jle
adc
xlat
adc
pop
mov
push
push
mov
gs
jge
jp
sbb
ja
xchg
adc
fst
mov
mov
fiaddl
mov
lcall
cmp
xchg
mov
lcall
out
loop
nop
hlt
jecxz
xor
lret
jge
loop
xor
sub
jl
sbb
xchg
adc
icebp
fwait
dec
loopne
jge
aam
fisubl
lds
ljmp
pop
loope
popa
out
cs
push
popf
das
lods
aaa
mov
and
cmp
cld
nop
push
mov
ret
xchg
out
jbe
mov
pop
xchg
push
fmull
mov
mov
adc
ret
inc
jb
aad
test
pop
sbbl
int3
and
and
mov
add
pushf
subl
pop
arpl
jo
test
stos
imul
lds
movsb
out
mov
das
xchg
lods
mov
xor
mov
sbb
sbb
mov
arpl
push
add
xlat
cmp
pop
mov
xchg
daa
lret
out
addr16
jl
xchg
jo
pop
adc
mulb
aas
xchg
mov
xchg
push
xlat
in
push
aaa
xchg
shll
push
and
and
ret
xor
stos
int
roll
mov
jno
or
or
std
loop
in
stos
jo
testl
or
loop
xor
idivb
xchg
lds
scas
dec
je
mov
ret
pop
repz
dec
mov
out
ret
aam
jge
jo
stos
push
fwait
je
sbb
or
es
ja
in
adc
or
stos
mov
out
xorb
xor
jg
loopne
adc
cmp
cmp
push
mov
ljmp
jg
push
and
icebp
ret
xchg
aad
lcall
and
daa
xchg
movsb
pusha
jle
fsubp
and
out
xchg
sbb
pop
imul
sbb
enter
and
xchg
out
pop
jno
cmc
push
xor
mov
mov
lds
test
fnstsw
clc
hlt
arpl
fcomps
or
xor
out
cltd
mov
scas
ljmp
pop
xchg
ljmp
icebp
cmp
adc
pop
mov
or
and
fisubrs
push
addr16
mov
mov
xchg
xor
fmulp
adc
dec
inc
shll
jns
cmpb
fcoms
mov
pushf
enter
inc
lods
into
pop
outsb
cli
pop
imul
enter
je
dec
inc
xor
popf
and
cli
dec
mov
negl
sub
and
xor
mov
imul
repz
xchg
lahf
cmp
xor
incl
mov
pop
pop
out
dec
xchg
ljmp
enter
mov
mov
dec
aam
cmp
sbb
adc
arpl
cld
inc
jp
pop
and
sub
jbe
outsl
fldenv
aam
push
je
fxtract
xchg
lahf
xchg
sbb
dec
movl
adc
shrb
out
mov
or
mov
jg
mov
xchg
xchg
push
cmp
mov
sbb
loope
push
roll
fisttpll
daa
mov
adc
js
lahf
jl
imul
int3
push
mov
mov
jno
shrb
bound
hlt
cmp
mov
xor
sahf
sub
cmp
out
mov
test
sub
lods
dec
cmc
clc
xor
xchg
inc
xlat
cltd
pop
sbb
in
pop
mov
dec
out
push
stc
bound
mov
nop
mov
mov
xor
insl
xor
imul
and
sbb
shll
nop
sbb
rcl
test
mov
inc
shlb
ja
lods
pop
pop
and
repz
add
ja
cli
jne
inc
pushf
dec
cltd
mov
jge
mov
push
aas
fs
into
js
dec
add
sbb
push
daa
daa
pushf
insb
hlt
ficompl
jb
cwtl
push
ret
mov
pop
mov
mov
rclb
sbb
vmread
ret
in
cmp
cmp
out
movsl
jl
test
movsb
mov
js
fcom
mov
sbb
mov
jl
mov
into
jge
ljmp
xor
cmp
lods
xlat
mov
nop
gs
mov
sbb
out
inc
pop
push
mov
pop
xchg
ljmp
pop
daa
rcll
in
enter
aas
pop
sub
mov
repz
loope
rcr
or
mov
inc
insb
xchg
mov
fs
mov
mov
ret
jnp
push
sub
mov
push
in
mov
push
cld
leave
mov
jg
lock
call
sar
roll
mov
testb
dec
andb
xlat
jno
sbb
dec
imul
xchg
pop
jl
rcrl
popf
test
push
and
cli
bound
adc
mov
in
mov
js
es
fidivrl
incb
and
or
cwtl
es
dec
pop
notl
push
aam
movsl
push
jno
loop
aas
or
jecxz
cmpsb
in
inc
add
xor
cmp
inc
mov
dec
mov
fstps
jle
xor
sub
push
pop
lea
aaa
mov
sbb
lret
mov
jle
mov
test
push
mov
or
ror
aam
sbb
jae
add
sub
or
inc
add
add
push
push
imul
sti
mov
dec
pop
adc
addl
aad
or
push
data16
pop
clc
adc
pop
mov
xchg
pop
pop
das
imul
arpl
clc
repz
cwtl
test
jl
ss
sbb
or
jmp
mov
dec
xor
test
in
fwait
mov
xchg
ja
mov
loop
ret
call
xchg
adc
ret
subl
sub
fs
lods
and
adc
jns
ljmp
movsl
popf
pop
pop
in
adc
fsubp
mov
shrl
sub
push
and
insl
jecxz
cwtl
outsb
cmpsl
xchg
sub
repnz
sbb
jno
lret
lret
aaa
pop
movsb
push
and
add
cmpsl
sbb
mov
ds
inc
sub
jge
mov
mov
cmp
out
inc
orb
std
leave
jl
sub
push
jmp
jp
mov
cwtl
ss
cmpsl
lahf
and
mov
push
cmpsl
lret
rcrl
lds
jg
mov
bound
roll
ss
ret
lods
test
inc
push
cmpsl
sti
jmp
mov
cmc
push
aad
xlat
jg
and
or
ret
sub
jae
inc
scas
or
mov
or
ret
xchg
out
jecxz
movsb
and
add
cmp
xor
shlb
rcr
lds
dec
repz
rcll
sti
pop
mov
mov
and
das
push
xor
or
push
jmp
mov
mov
mov
inc
sahf
xchg
add
jo
xchg
mov
movsb
into
jb
mov
pop
cmp
fcmovnb
out
sub
cmc
stos
xor
sub
sbb
cmp
push
loopne
inc
sbbb
add
mov
xor
jo
popf
adc
pop
pop
dec
lods
push
pop
mov
and
lds
out
add
and
loop
lret
cmc
jg
incl
clc
std
les
xchg
inc
xchg
and
add
pushf
jbe
jmp
xor
xchg
add
sbb
sarb
and
xor
sbb
or
pop
cltd
roll
push
and
add
mov
bound
sbb
adc
add
in
hlt
add
int
mov
pop
adc
jae
inc
mov
iret
dec
or
das
cs
mov
push
mov
call
pop
jnp
add
bound
xchg
or
cmp
jns
mov
idiv
pop
xchg
dec
iret
lds
adc
and
or
adc
or
or
xlat
mov
inc
in
fidivrl
and
or
pop
pandn
adc
imul
fdivl
push
push
jnp
jb
mov
shlb
inc
mov
addr16
xor
pusha
sbb
ljmp
add
dec
scas
sbb
outsb
sub
jae
sub
sub
ja
sub
cmp
mov
push
repz
das
addl
lahf
insl
pop
xchg
loopne
xor
mov
mov
mov
ljmp
leave
or
stc
xor
popf
xor
fstl
mov
andl
push
in
fisubl
and
pop
lock
jp
cmp
add
or
sbb
or
add
das
test
jle
pop
pop
xlat
fmull
xchg
dec
cli
adcb
dec
lret
add
cltd
movsb
jb
jnp
stos
sbb
shr
push
aad
cmp
cs
in
fldcw
or
lret
pushf
adc
stos
into
dec
xor
and
push
pop
lahf
mov
in
sbb
push
outsb
xchg
arpl
test
leave
cmp
sub
adc
cmp
sbb
adc
jae
inc
push
push
xchg
pop
fmull
imul
aam
stos
sbb
ss
push
js
cmc
out
adc
pop
push
lahf
cmp
stos
push
pop
incb
push
sbbl
cltd
xchg
xor
adcl
xorb
shl
adc
inc
mov
mov
sub
pop
push
sti
mov
and
arpl
jae
cmp
mov
cmp
jnp
push
sbb
stos
mov
popa
push
adc
mov
int3
lods
ret
jge
mov
adc
push
int3
xorb
shr
sbb
mov
or
mov
sub
jnp
and
cmp
mov
dec
and
mov
rcpps
sbb
test
test
pop
jno
push
lret
cs
insl
sbb
loop
cmp
pop
inc
push
mov
or
pop
xchg
mov
mov
mov
lret
mov
das
jmp
inc
jbe
lcall
xchg
bnd
jns
divl
jno
ret
ret
sub
jo
imul
and
push
aam
mov
push
push
dec
fwait
movsb
popf
add
cmp
ja
adc
in
push
push
mov
sub
push
iret
jl
xchg
loop
dec
sbb
ljmp
mov
push
js
jb
add
out
and
ficompl
push
xchg
xchg
cmp
dec
push
pop
add
adc
sbbl
mov
daa
or
jae
pop
rcrb
addl
mov
add
into
ljmp
in
jmp
mov
dec
lret
pusha
ja
lret
sti
add
mov
pop
sbb
xchg
cltd
iret
fs
or
test
jmp
jns
mov
sahf
mov
outsb
rolb
dec
test
inc
add
pop
sub
xor
add
and
add
adc
lcall
cwtl
inc
js
stc
popa
or
les
xchg
enter
frstor
movsb
stc
fadd
pop
repnz
outsb
scas
js
das
test
iret
repz
jns
pop
into
mov
movl
out
cmp
sub
enter
jg
into
ss
hlt
sbb
cmpb
cmpsb
jge
jns
cmp
jae
lods
movsl
mov
mov
pop
cmpsb
pop
push
fildl
pop
bound
lds
pop
sarb
inc
adc
testb
sbb
or
push
fistl
mov
testl
sbb
pusha
push
sub
sahf
aaa
xor
xchg
insl
dec
inc
dec
push
cwtl
lret
cmp
stos
dec
adc
out
xchg
or
pushf
loop
imul
xor
imul
hlt
test
jae
inc
push
jmp
in
jl
cmp
lock
sub
jmp
les
pop
inc
adc
loope
jg
push
in
lahf
js
pop
arpl
push
loope
nop
mov
xchg
cmpsl
jne
in
jne
mov
icebp
int
arpl
mov
push
fbld
cli
sub
xor
and
cltd
xchg
cmp
int
push
pop
xchg
lret
adc
repz
ja
pop
mov
int
cltd
notl
arpl
negl
add
cld
loope
sbb
and
mov
dec
in
adc
push
sub
adc
cmp
fstp
rolb
and
out
sbb
xchg
stos
sbb
lret
inc
push
push
addb
or
imul
test
xchg
mov
or
cmp
mov
cs
jns
add
lahf
inc
sbb
int
int
lds
xor
outsl
iret
pop
test
clc
jno,pt
inc
inc
cld
in
cmp
imul
aas
test
imul
xor
dec
adcl
cmc
ret
mov
add
aad
dec
incb
sub
orb
xor
mov
cltd
mov
lret
movsl
and
xchg
ficoms
out
mov
dec
dec
jbe
jge
push
jmp
ss
movsb
imul
fcmovnbe
adc
lcall
xor
xchg
push
fdivrs
test
out
mov
add
js
mov
or
rcll
loop
or
pop
test
ljmp
and
dec
ret
fmul
repnz
mov
jb
adc
xchg
movsb
sub
xchg
add
add
mov
pop
mov
add
loopne
mov
adc
sub
inc
sbb
stos
jg
int3
rcll
cmpsl
jno
js
sub
xor
cs
fcmovne
or
out
pop
hlt
sub
dec
je
fs
pop
jmp
mov
lds
or
aaa
mov
sti
mov
mov
adc
and
inc
jmp
add
movsl
sub
mov
das
mov
cmp
in
les
test
cmc
cmp
xchg
cmp
add
cmp
push
mov
inc
push
pop
dec
push
out
sbb
cmp
dec
outsl
repz
popf
jns
adc
xor
mov
rclb
iret
ds
adc
or
and
je
fidivs
fists
rcrb
andl
ss
sub
stos
cld
jmp
cld
call
mov
mov
mov
mov
push
push
das
nop
imul
adc
test
nop
enter
lods
dec
in
push
dec
mov
mov
rcrl
pop
or
add
adc
dec
xor
jge
and
testl
arpl
pop
or
outsb
and
dec
jg
into
sub
fs
lods
jo
ficoml
sub
xor
sub
or
jae
or
iret
xor
mov
xchg
lcall
std
push
testb
fadd
pop
and
out
lods
lret
mov
jecxz
sub
sti
xchg
cmpsl
fs
push
int
inc
in
cmp
scas
mov
xor
mov
setbe
cmpsb
incb
lret
mov
lret
xchg
dec
lds
nop
cld
sub
push
mov
xchg
mov
xchg
ds
cli
mov
rcrl
shrb
xor
mov
sbb
sbb
and
cmp
lret
xor
adc
dec
sub
sbb
push
fldcw
je
jl
xchg
rorl
inc
or
sbb
pop
imul
test
push
adc
mov
xchg
sbb
lods
or
loop
dec
pop
mov
inc
jne
and
or
jne
pop
or
popf
stos
adc
push
rcl
lock
out
or
in
daa
fcoml
adc
aad
shlb
ret
xor
imul
sbb
mov
xchg
rcrb
sar
xchg
mov
arpl
jb
rolb
sub
aaa
dec
test
popf
out
jae
lock
fisubrs
out
loopne
daa
enter
scas
repnz
inc
push
jno
adc
jmp
cmp
sti
movsb
pop
sbb
outsb
out
out
std
mov
aas
cmp
adc
xor
add
xor
and
bound
scas
in
add
fildl
test
and
movsl
xor
dec
das
iret
xor
add
in
cltd
outsb
mov
cltd
add
enter
cwtl
sbb
cmpb
stos
movsb
repnz
add
push
pop
popa
fidivrl
jge
loopne
inc
stos
aaa
mov
mov
popa
inc
sub
fcmovb
pop
insb
adc
sub
inc
mov
movsb
and
and
push
in
out
sub
xlat
pop
mov
call
cli
movsl
lret
xchg
test
test
popa
movl
mov
add
mov
test
xchg
jno
and
add
mov
mov
sarb
mov
fisttpl
scas
cmpb
sti
pop
dec
mov
in
xchg
jno
sarb
stc
push
andl
push
xor
xchg
in
aas
mov
cmp
fwait
outsb
sahf
sbb
xchg
xor
and
icebp
pushf
sarl
sub
push
pop
ret
mov
fstpt
jle
std
add
lea
inc
or
xor
daa
jg
daa
adc
push
stos
subl
mov
fistpll
andl
push
push
jmp
adc
sbb
mov
pop
xchg
xor
and
fistpll
movd
subb
je
pop
nop
movsl
adc
movsb
pop
out
xlat
andb
lock
popf
xchg
ss
movsl
test
mov
cltd
sahf
cmp
cmp
and
jl
xor
add
repnz
lock
inc
xchg
stos
outsl
popf
mov
hlt
fdecstp
adc
fdivrs
cmp
lods
out
sahf
imul
mov
sub
in
in
ljmp
fcomps
pop
mov
sbb
iret
push
loope
or
push
mov
push
sbb
xchg
in
roll
mov
sub
in
and
vpand
cmp
ss
sub
mov
and
mov
scas
jb
insl
or
add
inc
adc
xchg
jle
sbb
xchg
xor
lret
sti
xchg
dec
cltd
mov
mov
sub
stos
ret
shlw
sbb
pop
lea
lods
pop
push
mov
mov
loope
xor
es
in
outsb
cmp
cld
mov
jbe
leave
test
imul
insb
stos
pop
mov
push
sub
pop
and
adc
jno
aaa
lock
cmc
dec
mov
add
push
leave
cs
add
scas
and
mov
inc
inc
add
pop
dec
push
ror
dec
out
dec
pop
stos
cwtl
addr16
or
frstor
cltd
icebp
or
cmp
sbb
jmp
adc
mov
bound
mov
add
ficoml
lock
repz
cld
cli
jge
into
stc
pop
stos
jns
inc
imul
xchg
pusha
rclb
dec
pop
shll
aam
mov
adc
lock
int
repz
call
ret
and
lcall
add
int
sub
inc
jbe
gs
xchg
dec
push
into
xchg
lock
lds
jno
sub
mov
mov
pusha
aad
pop
pop
dec
sub
leave
xor
lods
adc
icebp
rclb
jl
mov
sbb
cmpsb
fimuls
push
test
push
mov
enter
inc
aas
push
xlat
stos
adc
mov
xor
add
clc
or
sbb
fdivrl
adc
sub
popf
outsl
out
mov
pop
xor
sub
inc
popf
or
add
cmp
or
push
xchg
pop
mov
cmp
sbb
les
inc
test
mov
daa
cmp
jmp
jle
add
dec
jns
jp
xchg
lret
test
aas
push
sbb
mov
loope
mov
ds
xchg
mov
mov
and
mov
addl
fcmovnb
mov
cmp
loop
push
or
pop
jno
sbb
or
mov
into
xchg
dec
dec
rcrl
jno
pop
dec
sub
rep
inc
cmp
cs
fistpl
xchg
pop
bound
nop
dec
push
jb
push
add
data16
aas
mov
xor
aas
aas
into
push
pop
sub
xchg
aam
push
xchg
or
ss
xchg
enter
setns
mov
add
rcrl
call
jl
add
enter
bound
imul
push
mov
and
mov
jecxz
jge
mov
fstp
adc
mov
pop
xchg
inc
insl
mov
sbb
cmp
dec
or
and
lcall
jne
movsb
addr16
ss
jns
jbe
test
fbstp
mov
pop
push
mov
int3
lea
shrb
movsl
dec
cli
mov
inc
pop
inc
into
push
int
xchg
jle
out
mov
mov
xor
repnz
cmp
nop
arpl
cmp
push
jg
mov
and
pop
or
dec
pop
js
inc
mov
mov
adc
jne
cmp
or
fmulp
loopne
aas
cmp
add
xchg
inc
xchg
sub
and
aam
jne
jmp
pushf
xchg
les
pop
jo
shlb
add
enter
or
xor
sahf
sti
call
stc
lret
mov
movsb
push
mov
inc
inc
in
mov
mov
mov
jl
jbe
lcall
out
testb
andb
xor
xchg
imul
out
pop
mov
insl
test
cmpsb
push
lret
lds
test
aas
fcompl
push
adc
sar
cmc
mov
shlb
mov
pop
pop
sub
jbe
out
gs
cld
in
jge
repz
subb
inc
test
pop
test
and
bound
popa
in
push
shll
int3
test
mov
sbb
cs
mov
sbb
or
jnp
movsb
sti
and
mov
fdivr
push
jp
loop
bound
push
adc
inc
aas
push
dec
pop
adc
test
mov
sahf
or
or
sub
loope
sbb
fs
filds
jp
imul
scas
in
mov
shll
loop
sub
lods
cmp
pop
jg
mov
repz
xor
or
or
jmp
lahf
push
repnz
adc
adc
jae
inc
add
sbb
dec
shr
insb
in
movsb
outsb
sbb
ret
pop
push
gs
dec
sti
in
loop
enter
iret
dec
bound
xlat
aad
fldt
xchg
mov
inc
mov
cmp
add
cld
adc
call
into
scas
cld
cmp
lret
mov
fnstcw
sahf
mov
pop
jno
inc
xchg
enter
xor
adc
in
and
je
in
pushf
pop
sub
push
outsb
sbbl
in
xchg
sbb
andb
mov
out
xchg
jmp
movsl
daa
dec
pop
mov
mov
mov
bound
aam
cs
xlat
push
movsb
pop
dec
aas
or
push
jle
insb
insb
icebp
mov
mov
cmc
stc
dec
inc
in
or
jecxz
xchg
std
lcall
and
add
push
outsl
sbb
aam
xchg
lods
ficompl
scas
sbb
lods
data16
jnp
jae
jp
fwait
lock
and
xor
sub
inc
pop
or
mov
dec
sub
je
bound
push
mov
dec
loop
xchg
add
subb
dec
imul
pop
lret
ret
popf
push
inc
cmp
xchg
lods
fadds
mov
aam
adc
xchg
or
pop
sub
cmpsb
pop
sar
xor
scas
cld
dec
test
sbb
sbb
out
imul
xor
pop
mov
jne
mov
mov
fistl
push
fstpt
adc
fildll
call
sbbl
mov
mov
int
jno
pop
mov
sub
mov
orl
xlat
adc
lret
push
sub
add
mov
iret
dec
push
mov
jle
clc
xor
scas
movsb
mov
mov
arpl
sbb
loop
mov
or
out
lret
sbb
xchg
dec
sti
test
mov
xlat
adc
data16
loopne
mov
mov
push
pop
movsl
mov
ret
adc
cmp
lock
lret
push
dec
push
hlt
sti
adc
adc
sub
std
lods
in
cmp
xor
push
sbb
pop
lret
xchg
leave
mov
xchg
scas
lock
add
lret
mov
test
rorb
jge
test
mov
mov
and
fistpll
cmp
pop
pop
push
jp
xor
out
xchg
iret
push
xchg
cmp
or
sub
ljmp
lock
enter
leave
loop
bound
testb
movsl
addr16
jmp
mov
outsb
xchg
pop
lcall
sbb
stc
push
mov
dec
in
sbb
ret
mov
mov
nop
xor
out
jmp
nop
push
inc
js
int
inc
dec
mulb
and
sub
lods
pop
cli
push
leave
xchg
stos
lock
addb
pushf
rcl
loopne
mov
ja
rcll
jecxz
jmp
hlt
std
adc
ljmp
in
push
lock
cmp
mov
mov
bound
call
and
gs
cmp
mov
roll
fcmovnb
cmc
into
mov
mov
int3
push
and
mov
cmp
inc
cmp
pusha
mov
in
and
xchg
xor
mov
inc
dec
addr16
inc
pop
ficoms
push
bnd
xor
enter
sub
lock
fsts
fnsave
and
in
dec
insl
dec
repnz
push
cmp
or
xchg
dec
xor
sbb
jns
add
mov
cld
pop
imul
lods
fimuls
enter
xcrypt-ofb
cmpsl
imul
add
jp
dec
fcompl
cs
mov
fnstenv
icebp
in
jl
fstpl
mov
and
nop
lret
lods
movsl
lods
fldl
lcall
div
testb
inc
inc
inc
add
mov
push
stos
jmp
pusha
cmp
js
inc
clc
sub
jne
fldt
nop
faddl
movsl
jb
stc
aad
orl
pop
mov
sbb
lea
ljmp
adc
mov
and
xlat
dec
cli
dec
xor
in
jnp
jp
in
fistpl
mov
insb
cmp
sbb
mov
push
pop
sub
sub
pop
inc
insb
test
xchg
inc
int3
rol
outsl
push
jecxz
std
or
add
std
push
aas
jl
test
dec
pop
jmp
int
in
jl
lds
inc
adc
mov
imul
lods
fisubl
mov
mov
xor
popf
jb
or
pop
dec
push
repz
adc
mov
aam
jne
inc
xchg
mulb
fwait
movsb
push
cs
lcall
outsl
add
call
repnz
pop
aaa
mov
and
lods
sbb
push
repnz
add
gs
push
jle
test
inc
ljmp
jb
jnp
pop
mov
movsb
push
mov
repnz
xor
jge
loopne
test
les
aaa
pop
cmpsl
rcrb
xor
sti
mov
out
and
or
add
in
cs
add
aad
orl
and
scas
and
sahf
decb
xor
cmp
aad
and
jo
pop
stos
popf
xor
xchg
les
pop
in
cwtl
jmp
push
mov
add
mov
sub
jp
pop
rcrb
repnz
cwtl
push
icebp
out
int3
lock
insl
outsl
aas
test
sub
movsb
lods
inc
xor
dec
push
push
lahf
add
in
cmc
pop
sub
xchg
rolb
adc
mov
add
pop
or
push
stos
inc
inc
pop
inc
ljmp
enter
mov
imul
sub
push
cmp
loop
fdivrl
mov
dec
cmc
dec
in
or
push
xor
push
idivb
mov
call
or
test
or
jecxz
icebp
sub
sub
mov
mov
cmp
sub
pop
and
sbb
push
loopne
add
mov
movsl
adc
insb
nopl
sbb
movsb
mov
jp
sbb
outsb
test
shrl
dec
aam
das
scas
daa
stos
push
adc
mov
jp
pop
pop
loopne
inc
out
in
mov
pop
ljmp
in
loop
lcall
ds
insl
jge
call
loopne
sbb
push
sti
out
dec
mov
fistpl
nop
inc
repnz
jge
iret
js
outsl
testl
jae
and
out
icebp
xchg
push
loope
mov
jge
mov
ljmp
jb
lock
test
into
lret
loope
push
fistl
mov
loopne
pop
js
jp
sbbl
jp
mov
dec
hlt
aas
dec
test
lea
insb
clc
dec
inc
imul
xor
jnp
push
mov
ret
inc
sbb
pop
sbb
nop
pop
sub
loop
outsb
mov
pop
test
repnz
xchg
cwtl
ret
lret
fsts
push
jne
rorl
sbbl
prefetch
or
or
mov
je
or
fldt
daa
in
mov
dec
fdivr
js
lods
mov
or
push
jp
mov
mov
mov
loop
inc
out
movsb
insb
outsl
sbb
push
pop
inc
and
add
push
xor
out
notl
jns
outsb
mov
push
cmp
clc
push
cltd
outsl
mov
push
dec
into
push
adc
lret
xor
gs
out
pop
dec
xorb
nop
call
je
roll
mov
jae
pushf
into
dec
stc
pop
sahf
push
pop
cmp
adc
ret
data16
sbb
inc
fcoms
les
stc
nop
insl
sub
mov
push
mov
mov
mov
arpl
push
push
pop
mov
jae
mov
roll
sbb
les
adc
add
ret
test
int3
jne
adc
das
fldl
insl
imul
inc
je
nop
out
sbb
inc
in
push
inc
jne
xchg
jp
mov
cmp
repnz
mov
xor
mov
cmc
dec
mov
cmp
jp
das
push
push
mov
and
pop
adc
sbb
inc
mov
sbb
push
fs
cmpl
inc
mov
sbbl
push
cli
sahf
inc
cmpsl
lret
jmp
sub
sub
into
add
nop
in
loope
jns
dec
es
sub
lcall
insb
repz
add
mov
cmp
ret
xchg
and
cwtl
push
add
scas
data16
add
sub
leave
dec
sub
mov
mulb
fcoml
xchg
repnz
pop
dec
cmp
rclb
stos
lcall
lds
sbb
mov
inc
or
test
cltd
cmp
mov
or
inc
xlat
mov
jle
push
sub
pop
outsb
push
icebp
jge
int
mov
cmpsl
mov
repz
pop
popf
push
xor
xchg
xlat
test
ss
mov
ds
stos
into
mov
adc
fisubs
decb
inc
out
mov
mov
adc
stos
lock
lods
mov
xchg
jmp
push
mov
xor
xor
in
test
je
out
xlat
mov
fistps
adc
out
push
in
daa
int3
xor
and
jmp
arpl
icebp
mov
insl
mov
xor
push
frstor
int
imul
adc
sub
orl
pop
xlat
arpl
xchg
jne
sbb
movups
outsl
xchg
hlt
test
push
dec
sub
push
add
pop
cmp
stos
fnstcw
and
fmuls
sbb
bswap
loop
jnp
lds
xchg
addr16
and
cmp
testl
xor
es
cltd
xchg
mov
mov
dec
in
fnstenv
jb
sbb
testb
jbe
push
lock
icebp
aaa
sbb
iret
xor
jno
jg
mov
in
add
cld
int
xor
mov
push
push
mov
cmpsb
fcmovne
bt
push
mov
mov
mov
stc
mov
test
in
pop
testl
out
mov
call
lock
mov
pop
push
andb
push
imul
repz
inc
xor
popf
sub
dec
loope
fsubrs
movsb
stc
loopne
jo
enter
stos
fldenv
mov
loop
or
jmp
cli
fwait
pop
mov
lea
cmpsb
mov
cmc
int
insb
mov
lahf
js
loope
xchg
scas
mov
popa
lcall
lret
adc
int
or
jne
xchg
cwtl
arpl
inc
mov
dec
inc
xchg
xchg
out
nop
gs
dec
das
jbe
xor
clc
push
in
sbb
jle
rep
fsubl
xor
sub
repnz
test
add
es
xchg
lret
outsl
add
sbb
ftst
std
rcrl
jbe
mov
sahf
xchg
cwtl
push
les
loopne
scas
in
inc
loopne
cmp
in
pop
xchg
xchg
push
cmp
inc
cmp
mov
and
and
std
movsl
xor
or
dec
and
mov
imul
popa
sbbb
testl
lret
stos
lret
jge
xlat
movsl
mov
cmp
jb
lds
and
mov
sub
cmc
insl
cmc
adc
outsb
test
mov
push
dec
or
je
scas
lea
mov
data16
mov
dec
lods
lahf
fs
and
enter
ss
cmp
popf
sahf
add
lea
mov
lret
call
and
shlb
ror
dec
cltd
imul
xchg
or
jbe
out
test
adc
cmp
stos
add
xorl
ret
mov
pop
jg
std
faddl
mov
das
and
fldcw
cmp
iret
fdivl
mov
outsl
mov
fs
cmp
aad
mov
sarl
enter
cs
adc
jae
or
inc
lret
mov
push
add
sti
adc
cld
pop
jb
xor
scas
dec
mov
test
shl
loopne
add
out
xor
dec
push
pop
psrld
push
lods
xchg
test
mov
inc
and
outsb
testl
montmul
cmpsb
add
and
dec
pop
jle
or
xchg
shrb
fiadds
mov
adc
xor
insl
out
fildll
xchg
sti
mov
js
xchg
pop
leave
cmp
orb
mov
testl
sahf
add
in
xor
sbb
mov
and
mov
or
lret
cld
pop
sbb
mov
dec
cmp
mulb
dec
cs
xor
lret
mov
pop
outsb
mov
push
rcrl
std
jge
je
popf
mov
lahf
pop
test
mov
mov
cmp
addr16
push
mov
mov
hlt
xchg
out
aad
popa
psubq
cmpsl
and
mov
jle
dec
jg
adc
lea
fldenv
in
into
fmuls
jbe
push
leave
jg
inc
lock
rolb
xchg
aas
mov
xor
xchg
cmp
scas
cltd
mov
xchg
mov
push
notb
rcl
xchg
jl
insl
sub
jns
add
lods
cwtl
cwtl
popf
inc
andb
and
fcomp
mov
shll
cld
add
or
ret
xchg
mov
xlat
and
sub
subb
das
pop
mov
pop
cld
dec
mov
jbe
dec
shr
mov
popa
out
bound
mov
pop
or
popf
and
pushf
scas
dec
test
cmc
lods
loope
arpl
in
jne
jno
or
pop
xchg
shrl
push
sarb
fldl
ret
in
loop
push
ss
js
cmp
fprem1
mov
jo
jo
fstps
lods
adc
jl
dec
mov
add
fninit
and
std
scas
xchg
xchg
arpl
clc
mov
js
mov
xchg
or
aam
sahf
stos
out
andb
mov
cmc
inc
ret
je
xor
xchg
iret
xor
inc
and
cltd
jecxz
inc
pusha
pop
test
cwtl
sub
mov
in
mov
arpl
fisttps
xor
iret
hlt
pop
mov
scas
loop
fcoml
or
ret
add
add
cmp
adc
pusha
add
movsb
mov
or
fdivs
adc
jge
inc
ljmp
and
xor
xchg
cli
outsb
mov
loope
mov
mov
in
loopne
int
jns
xor
sub
or
loope
pop
int3
xor
mov
xor
pop
dec
jne
jmp
cmpl
mov
inc
out
cwtl
inc
push
mov
lahf
mov
cltd
js
call
lds
pop
call
scas
ret
adcl
jp
gs
pop
aam
xchg
ret
addl
das
mov
dec
push
pop
mov
jnp
sar
out
dec
jecxz
pop
scas
test
xchg
sar
fwait
add
arpl
stc
loopne
rcll
mov
mov
xlat
or
lds
cli
fldenv
pop
xchg
push
jecxz
sahf
loopne
adc
ja
repnz
adc
mov
and
mov
pop
push
test
repz
pushf
or
inc
jne
sub
lock
outsl
sub
inc
aad
xchg
les
icebp
mov
jbe,pt
pop
mov
cmpl
jbe
xor
push
stc
lds
insl
lcall
pop
xchg
inc
gs
mov
enter
and
dec
push
xchg
add
movsb
pop
loopne
dec
adc
das
jg
imul
add
mov
cmpsb
push
notb
cmp
or
scas
adc
insb
push
sbb
loop
mov
arpl
lret
fldl2e
mov
push
xchg
sbb
jp
inc
lds
push
inc
fsubrl
out
adc
clc
jno
xor
dec
xchg
ja
cmp
fsubrl
sbb
pop
add
xchg
loop
inc
jnp
or
xor
ret
imul
je
cltd
pop
jge
push
and
or
push
jo
add
mov
in
xchg
nop
cld
scas
movsb
push
fistl
add
ficoml
iret
cmc
cmp
dec
jmp
and
fistpl
fs
adc
cmc
les
mov
xor
flds
xor
scas
or
sub
lret
dec
mov
aam
lock
sbb
push
leave
icebp
ss
push
mov
neg
hlt
add
jge
fs
push
jne
fcoms
push
adc
scas
fsubl
ja
outsl
push
in
fists
fdivs
or
xchg
orb
shl
xchg
cmp
cs
jmp
jge
pusha
mov
stos
mov
push
call
inc
ja
inc
mov
idivl
mov
inc
push
and
mov
test
mov
pop
fs
jne
outsl
es
shrl
stos
mov
fadds
xchg
daa
lods
adc
pop
stos
std
xchg
mov
add
mov
lods
arpl
lock
fidivl
mov
stos
mov
adc
sti
int3
add
bswap
add
push
cmc
int
pop
mov
cmp
xchg
call
lahf
insl
xor
mov
push
cmpsl
lock
mov
es
push
pop
rolb
lret
fwait
dec
pop
dec
flds
cmpsl
mov
and
out
cmp
mov
pop
test
test
xchg
mov
sub
mov
addr16
jecxz
loop
faddp
stc
ds
aas
inc
fwait
inc
mov
jne
jmp
add
movsl
shll
loopne
in
sbb
dec
cmpsb
dec
aas
fs
fdiv
add
arpl
xor
pop
or
fistpl
sub
xor
out
xchg
cmpsl
or
sahf
rclb
xlat
mov
push
es
dec
add
daa
xchg
imul
sub
pop
adc
add
test
sub
daa
cmp
mov
loopne
sti
sub
mov
mov
and
imulb
sbb
out
dec
adc
js
xor
insl
sub
add
loop
ja
enter
jmp
cs
fstps
xchg
mov
ljmp
jle
push
add
and
setp
inc
lods
je
and
ljmp
sub
mov
inc
rclb
sub
cld
push
push
mov
xor
lods
ret
inc
lahf
cli
add
addr16
cmp
jp
pop
sbb
orl
sub
inc
cmpsb
mov
ljmp
sub
cmc
sbbl
jle
aas
mov
cmp
mov
mov
sarb
cs
cmpl
inc
fadd
out
aad
stos
aaa
aad
sbb
or
sub
fadd
xor
movb
lahf
jbe
push
dec
push
mov
mov
inc
add
or
or
sub
xchg
sti
and
xor
popa
addr16
xchg
jbe
nop
mov
dec
xchg
xor
push
jp
push
and
add
arpl
imul
mov
ljmp
jns
cmpsl
jnp
ss
sub
adc
mov
sub
lods
sbb
jb
push
cwtl
jecxz
cmp
into
enter
js
sub
jge
fistpl
sbb
test
repz
xlat
unpckhps
xchg
leave
cltd
adc
loopne
inc
sti
cmc
cmp
push
mov
add
es
jmp
xor
push
add
xchg
js
fwait
lea
xchg
inc
cmp
stos
jae
inc
xor
sub
mov
cmp
mov
pop
enter
call
sbb
ret
xchg
notb
mov
movsb
jno
les
int3
jbe
push
shl
pushf
push
dec
or
or
sub
leave
mov
enter
pop
pop
cmpl
jae
add
es
xchg
in
fs
sbb
xlat
loopne
or
push
jae
and
pop
mov
or
fistps
inc
imull
jle
insl
mov
test
subl
enter
std
rol
sub
adc
cmp
sub
inc
jb
adc
sub
push
divb
test
push
xor
push
mov
stos
mov
mov
loop
scas
lret
add
mov
cmp
mov
or
inc
jle
arpl
dec
andb
repnz
xor
sbb
add
and
arpl
jp
lods
or
xchg
cmp
decl
xchg
mov
push
cmpsl
sub
xor
insb
dec
addl
sub
hlt
stos
std
xorb
test
dec
and
sarb
movsl
push
lods
cld
inc
inc
lea
shll
cmc
gs
dec
pop
push
pop
sbbb
bound
or
std
dec
or
jmp
out
add
call
in
jnp
shl
movsb
jno
mov
mov
daa
dec
lods
call
adc
xchg
out
add
push
xchg
or
pop
jns
out
xchg
out
push
xchg
xor
loope
fiadds
stos
leave
lods
cmp
push
adc
push
aas
mov
clc
push
xor
mov
arpl
ljmp
rorl
jbe
mov
loope
fdivl
leave
mov
and
mov
push
pop
sub
aam
mov
gs
xchg
ror
outsb
sub
movsl
mov
adc
ret
data16
mov
int3
bound
mov
xorb
movsb
push
inc
sbb
xor
cs
je
and
lods
orl
repz
pop
xor
xchg
mov
mov
faddl
std
sahf
cmpsl
lods
stos
outsb
mov
fisttpll
sahf
movsb
in
ja
jg
cmp
fsubrl
in
out
cmc
mov
jg
iret
xor
sub
sahf
adc
and
fcoms
ljmp
vcomiss
outsl
fwait
cmc
and
fwait
lahf
aaa
sbb
aas
cld
pushf
cwtl
inc
arpl
aas
bound
push
mov
aas
testl
mov
pushf
mov
roll
iret
add
jnp
mov
scas
jae
adcl
adc
ds
cmp
sti
mov
fbstp
cmp
ljmp
jecxz
jl
rcr
xchg
in
adc
cmpsl
gs
filds
test
loopne
cmp
mov
bnd
sbb
mov
cmp
fsubl
xor
or
xchg
rcll
pop
and
fcompl
pop
xchg
add
adc
push
jne
mov
xor
inc
jo
inc
cmpsb
jg
push
cld
cmpl
mull
push
movsb
iret
pop
xlat
xchg
je
jl
or
push
pusha
pusha
or
sbb
icebp
into
ret
ss
call
sub
xlat
push
pop
mov
mov
mov
inc
sbbl
lcall
and
mov
inc
into
push
sub
into
sahf
pop
jle
mov
cmp
jg
cmpsl
frstor
cmp
cli
lea
mov
or
ffreep
adc
jmp
sub
cmc
cmpsl
mov
xchg
mov
inc
mov
xchg
sub
mov
scas
call
adc
incb
cs
ror
cmp
mov
mov
jno
mov
xchg
insl
stos
fnstcw
push
and
inc
outsb
adc
push
jne
lret
jmp
loope
jg
jno
cltd
cwtl
push
hlt
adc
loop
jno
inc
inc
stos
inc
add
imul
or
mov
mov
inc
and
sbb
dec
or
cmp
xchg
pop
jge
inc
test
into
stc
out
inc
lret
add
mov
orb
xor
pop
cltd
fists
cmp
jbe
jno
repnz
out
les
aad
lods
lods
inc
xchg
mov
cmp
dec
scas
mov
inc
sbb
inc
popa
push
dec
mov
mov
or
and
movsl
lock
sub
movl
jns
xchg
push
dec
fisubrl
loop
fisttps
popf
lds
roll
in
call
add
inc
cmp
dec
sbb
test
cmpsb
out
cld
or
lods
jp
mov
mov
std
inc
es
push
div
out
cmpsb
call
sarb
push
mov
test
test
loope
add
adc
push
push
pop
call
mov
iret
mov
sbb
mov
dec
out
or
jg
inc
and
inc
out
out
mov
out
mov
shll
jno
sub
enter
adc
outsl
mov
les
dec
cld
sahf
or
jns
outsl
idivl
movsl
pop
or
jae
cmp
or
push
dec
xchg
mov
leave
bound
jmp
mov
stos
add
out
add
fbld
test
mov
in
jle
into
mov
lahf
xorb
xchg
push
in
push
popf
dec
push
jno
add
push
dec
sub
cmp
sub
aad
outsl
jp
fsub
sub
xor
cmc
test
xchg
orl
jge
cmp
mov
jle
adc
xor
in
cmp
jg
add
and
loope
xchg
push
and
pop
cmp
xchg
fmuls
aaa
push
or
aaa
add
add
xlat
lock
jbe
mov
loop
lahf
or
test
int
adc
sub
pop
adc
mov
loop
mov
dec
sti
mov
test
sub
dec
add
cmp
nop
iret
out
pusha
arpl
fisubl
lahf
xor
es
arpl
sbb
pop
popf
and
pusha
les
cwtl
add
pop
fsubs
mov
adc
pusha
cmpsb
sbb
push
cwtl
add
xchg
pop
pop
mov
pushf
leave
dec
call
js
or
test
roll
gs
iret
mov
inc
xchg
jb
mov
cmp
inc
das
mov
lcall
or
inc
add
or
mov
push
xor
popf
cmp
inc
cs
xor
sbb
mov
jg
ja
pop
jno
lahf
shlb
fwait
bound
jne
mov
mov
cmc
jecxz
movsl
add
push
add
and
rcrb
out
inc
or
outsb
xor
je
or
pop
loopne
mov
jge
xchg
jb
or
out
push
imul
mov
icebp
xchg
mov
cwtl
icebp
fstps
repz
dec
int3
stc
mull
loope
shlb
mov
in
movsl
pop
mov
repz
sbb
cmp
popa
and
pushf
into
call
jne
mov
lahf
clc
sub
outsb
mov
mov
jl
lods
pushf
mov
jbe
xchg
iret
mov
aaa
mov
jge
outsb
pushf
movsl
and
rcl
decl
jl
or
jae
lods
adc
and
sbb
lods
dec
sar
dec
fsubs
ljmp
mov
jo
xor
pop
enter
xchg
rcll
lcall
fldenv
in
jae
jmp
cli
mov
es
mov
jnp
ja
sub
push
sub
adc
stc
jl
sub
and
jae
lods
add
fstp
xchg
push
xchg
out
sub
add
sub
cmp
jo
dec
cmp
cmp
xor
sub
lds
xor
or
jne
mov
mov
inc
xchg
sbb
xchg
clc
int
cmp
vcvtss2sd
mov
imul
mov
data16
scas
pusha
add
xchg
aaa
or
or
mov
cmpsl
or
out
cmp
pop
jecxz
daa
mov
push
xor
test
xor
xchg
idivl
mov
add
insb
jno
adc
jmp
push
and
cli
mov
insl
out
loop
add
lock
ss
mov
mov
movsl
jmp
mov
shl
test
dec
cmp
in
xor
xchg
xchg
arpl
cmp
mov
sub
clc
jbe
stos
shl
inc
stc
imul
cmp
je
movsb
mov
decl
mov
pop
xchg
xor
test
clc
inc
stc
xchg
dec
pop
jo
cmp
mov
pop
adc
mov
jge
lret
xchg
inc
pushf
js
fimull
xlat
sahf
inc
push
push
jno
jbe
pop
insb
adc
xchg
imul
and
mov
mov
out
xchg
mov
jno
push
movb
xor
aam
jl
fwait
ficoms
jbe
stos
dec
mov
adc
scas
iret
out
mov
pop
push
mov
xor
xor
mov
shll
adc
sub
push
sbb
ja
jle
sahf
inc
or
inc
sti
push
mov
jecxz
mov
sbb
cwtl
jge
add
mov
mov
js
push
popa
xlat
ds
aad
es
dec
jno
mov
arpl
push
sbb
rolb
mov
in
push
mov
add
or
mov
mov
mov
inc
jne
jno
dec
ret
int
sti
call
pop
push
leave
push
mov
and
and
and
call
and
pop
out
fisubrl
leave
andl
mov
ss
imul
pop
inc
aad
rcrl
mov
push
test
aam
out
mov
stc
lods
insb
mov
mov
mov
mov
jp
push
fwait
outsb
in
rsm
in
cmovp
ficomps
jne
shld
xchg
jbe
dec
lds
aad
dec
pop
mov
sub
dec
push
popf
test
mov
lahf
push
pushf
jae
sub
fbld
dec
ds
bound
xchg
push
insl
inc
std
pop
push
or
pop
es
ffreep
jno
dec
pop
inc
mov
xchg
push
test
xor
xor
out
jmp
clc
cli
lods
rcr
sbb
mov
fiaddl
push
xchg
jg
jae
dec
lret
and
jae
lods
xchg
mov
fcoms
jbe
or
lea
or
mov
jb
mov
jne
add
les
filds
clc
ret
lods
adc
pop
sarl
jecxz
clc
cmp
push
or
add
jle
push
mov
test
adc
negl
xor
sbb
mov
pop
push
movsl
pop
xchg
cmp
call
push
mov
or
or
loopne
pusha
adc
nop
sbb
cli
mov
dec
js
sbb
pusha
mov
sahf
mov
test
cmp
add
sahf
fnsave
mov
cmp
divps
pop
aam
mov
and
push
int3
mov
lea
cwtl
sub
popf
sub
pop
mov
push
jae
rcll
xchg
sahf
add
cmp
aaa
in
add
or
add
test
pop
push
aad
lea
xlat
fdivrs
ds
xchg
cld
push
subb
dec
je
lret
sub
push
addb
jno
mov
xor
xchg
ds
ror
sbb
mov
or
xchg
push
lahf
pop
adc
adc
jb
add
aaa
inc
mov
pop
shr
pop
in
mov
sub
aam
in
pop
rol
mov
hlt
idivl
dec
jno
xor
and
cld
lea
push
mov
xchg
repz
add
and
jmp
add
lcall
aaa
push
mov
sbb
fcomps
cmp
xchg
push
cwtl
fidivrs
xchg
xor
gs
push
push
jo
mov
std
inc
pop
add
push
xchg
xchg
xchg
mov
mov
jecxz
ret
imul
pop
push
fadd
push
cmpsl
sarb
inc
rcrb
enter
mov
push
pop
lahf
mov
and
inc
ret
mov
or
js
movsl
inc
push
xor
push
negl
out
lret
dec
out
sub
in
jle
mov
enter
shlb
sbb
popa
mov
dec
push
cltd
mov
adc
push
sbb
inc
sub
cld
pushf
cwtl
adc
push
movsb
mov
mov
push
mov
repnz
jns
lds
fs
stos
mov
repz
lock
cmp
mov
inc
pop
cld
xchg
lea
movsl
test
mov
jae
pop
inc
inc
xchg
mov
jns
fs
loop
xchg
je
pop
or
shrl
xor
pop
mov
cmp
jnp
icebp
mov
movsb
inc
enter
movsl
call
dec
inc
nop
scas
mov
inc
jo
cli
xchg
push
adc
adc
jnp
xchg
jb
jnp
fisubl
sub
test
xor
push
test
arpl
dec
pop
test
dec
ljmp
jmp
test
pop
test
push
aad
push
add
dec
and
xchg
lds
outsl
pop
pop
xchg
fs
es
negl
push
mov
dec
lret
sti
stos
fmul
loopne
inc
daa
ss
jl
sbb
cmp
mov
imul
ror
push
cmp
add
fwait
mov
dec
repnz
xchg
push
xchg
pop
clc
push
test
fidivrs
scas
xchg
hlt
lahf
lret
jg
fimuls
data16
push
mov
push
dec
clc
popf
popa
in
int
icebp
dec
sub
add
xor
daa
sarb
push
jo
sub
jbe
shr
push
out
popf
jbe
insb
add
popa
popl
pop
inc
adc
popa
ror
dec
shll
jg
pop
push
mov
dec
pop
cwtl
mov
or
mov
cmpsl
es
ret
int3
shlb
jne
ret
cwtl
adc
call
dec
int3
aaa
mov
inc
in
dec
bound
arpl
shll
pop
push
add
pop
cmp
mov
mov
mov
push
mov
stos
sub
add
inc
roll
and
sub
jmp
push
jge
int
inc
xchg
add
sbbb
in
cmp
shll
pop
ss
cmp
test
sub
cmp
or
cmp
inc
movsb
repz
sets
int3
iret
js
mov
rcll
mov
and
movsb
xchg
movsl
lret
or
pop
adc
rol
fiadds
int
jg
xor
rclb
or
repz
jnp
mov
dec
clc
testl
ds
fimull
jbe
xorb
push
in
aad
and
push
push
xchg
lea
movsl
outsl
sub
bound
shr
push
jae
shrl
dec
mov
popa
sti
jne
addb
xchg
je
add
pop
or
or
jmp
cmp
mov
ljmp
mov
sbb
in
xchg
aaa
push
rcrl
push
or
xchg
mov
mov
push
xchg
add
pop
jns
insb
or
push
mov
data16
pop
mov
sub
ss
pop
decl
sbb
ror
sub
punpcklbw
jae
jnp
jle
movsb
pop
jns
in
lods
push
inc
test
pop
xor
pop
mov
stos
or
rol
xor
push
data16
pop
loopne
test
xlat
shll
jnp
test
or
jne
jbe
cmp
add
roll
mov
repz
mov
sbb
jmp
push
cmp
cs
sbb
xchg
icebp
clc
ja
dec
push
cmp
push
sub
xor
push
scas
xlat
shll
test
in
mov
mov
loopne
sbb
mov
lds
rclb
adc
jg
xchg
movsl
xlat
cld
dec
test
jnp
cmp
or
sahf
rcrb
addb
or
or
sbb
dec
mov
and
add
test
repnz
xchg
adc
leave
ret
out
leave
out
cli
adc
outsb
out
ds
sbb
ret
imul
push
add
push
dec
pop
or
or
leave
jle
add
daa
int
hlt
int
pop
pop
cmpb
es
decl
adc
mov
mov
lahf
xor
popf
cmp
imull
nop
loopne
mov
jae
lahf
jecxz
cmp
adc
dec
or
cmp
xchg
and
xchg
imulb
cmpb
add
mov
fsubs
dec
sub
imul
mov
mov
dec
decb
sahf
jno
out
pop
dec
add
jle
fwait
xor
inc
and
mov
jle
out
xchg
mov
loop
xchg
push
out
shll
fs
shrb
in
stc
rcpps
test
push
imul
push
rcl
xchg
jae
int3
pop
pop
push
dec
mov
jne
mov
in
or
and
xor
arpl
cmc
ljmp
jb
fdivs
inc
testl
decb
push
adc
jl
movsb
inc
cli
outsb
outsl
or
ss
cmpb
fldcw
or
xor
inc
jnp
push
sbb
shr
xchg
je
std
mov
enter
mov
lods
imul
std
je
ffreep
push
or
xchg
sub
push
in
scas
cld
dec
inc
dec
sub
push
jmp
or
sbb
jae
aaa
mov
sbb
jo
mov
pop
and
add
cmp
xlat
and
cmp
adc
in
iret
shlb
scas
or
pop
cmp
mov
mov
arpl
pop
xlat
xchg
push
mov
insb
pusha
xor
icebp
mov
xchg
out
pop
movsb
test
dec
das
jle
lret
ljmp
mov
or
loope
mov
adc
aad
les
jne
cmp
ror
fwait
push
int
lods
xor
push
ret
or
inc
es
xchg
insl
push
movsl
add
out
adc
xor
js
jp
cmp
xchg
hlt
push
mov
or
cld
jmp
clc
mov
or
scas
popf
icebp
aad
scas
mov
movsb
xor
and
mov
dec
xchg
sub
out
movsl
xchg
or
mov
mov
add
pop
mov
lods
rcll
mov
pop
lret
sbb
add
jne
inc
mov
sbb
cld
ja
jae
cmp
imul
inc
ds
inc
clc
cmp
cs
lea
xor
adc
int3
sbb
or
push
pop
adc
dec
jmp
or
hlt
sbb
ret
xchg
adc
xor
sti
scas
ret
push
arpl
push
or
rorb
je
daa
daa
mov
fstl
xchg
dec
aaa
in
mov
mov
ret
inc
test
jge
lret
in
jp
cmpsl
push
jb
insl
mov
jle
addb
orb
stos
jne
fs
add
fstl
jmp
jp
fisubrl
pop
mov
jmp
test
xchg
mov
mov
jle
pop
push
sub
in
jl
ja
add
xchg
call
scas
add
icebp
fstps
clc
sub
mov
mov
enter
mov
arpl
xchg
jno
xchg
lea
es
pop
jne
mov
pop
in
add
mov
adc
push
in
aas
imulb
sbb
sub
xor
das
cltd
mov
mov
mov
jns
addr16
cltd
mov
andb
push
cltd
into
jns
xor
mov
icebp
gs
incl
push
nop
scas
popf
lret
or
ja
add
mov
enter
fdivrs
leave
add
sub
jl
outsl
mov
and
xchg
mov
mov
xor
test
push
or
cmpb
ds
cmp
xchg
xchg
pop
push
ficompl
pusha
ljmp
pop
dec
inc
icebp
fstpt
lods
gs
enter
jo
imul
add
sbb
mov
xor
shlb
jmp
mov
cli
fldenv
xlat
dec
pop
in
ja
mov
add
add
ja
mov
aam
fimuls
faddp
loope
mov
adcl
pusha
jmp
mov
dec
or
mov
out
mov
mov
pusha
sti
pop
mov
mov
fdivl
push
mov
jecxz
push
int
bound
out
mov
xchg
loope
pop
mov
jp
inc
iret
imul
daa
sbb
pusha
xor
add
into
sub
xor
jns
addl
je
sub
inc
sub
xchg
insl
inc
dec
cltd
repz
mov
hlt
js
test
cmp
repz
movsl
dec
loopne
cmp
dec
adc
dec
xchg
jnp
roll
mov
jmp
int3
jnp
shl
dec
jle
dec
aad
cwtl
push
dec
iret
push
inc
ljmp
pop
lahf
jmp
outsl
sbb
shr
pop
mov
das
inc
ja
push
add
roll
lods
insl
es
outsl
popa
out
cwtl
mov
out
xchg
xchg
pop
fs
lahf
mov
in
je
xlat
xchg
push
and
add
fldt
mov
mov
mov
loope
lods
cmp
push
insb
xchg
and
xchg
nop
pop
imul
sub
ret
xchg
outsb
mov
lods
adc
jecxz
repnz
stos
in
je
push
push
sahf
sub
cwtl
lahf
pop
and
xchg
xor
mov
rclb
out
mov
xor
or
push
sub
dec
cmpb
push
popf
nop
pop
dec
dec
fnstcw
xor
cmp
inc
inc
xorl
jle
add
push
and
push
jp
nop
xchg
xor
jg
repz
das
xchg
mov
cs
test
or
cmpsl
push
addr16
mov
push
ficompl
dec
stc
sbb
andl
lds
pop
lahf
movsl
xor
lods
pop
dec
popf
lds
or
jmp
aaa
fdivrl
push
into
mov
ja
inc
or
int3
js
fs
pop
xlat
shll
xchg
imul
out
sti
loope
leave
cli
xor
pop
int3
addr16
mov
daa
fisttps
mov
test
enter
pop
int
inc
ljmp
stc
sbb
or
insb
inc
cmp
lds
in
add
or
or
icebp
int3
mov
pusha
cmpsl
fldcw
enterw
inc
mov
ret
pop
imul
cmp
dec
or
xchg
add
aam
pop
mov
fstp
cmp
mov
lods
xor
das
ja
push
loopne
test
pop
arpl
mov
mov
dec
pop
and
cmp
dec
call
adc
hlt
inc
xor
sub
push
lods
or
ret
mov
push
mov
test
mov
loopne
mov
ss
les
jae
lds
aad
ret
dec
cmp
add
stc
nop
jbe
xchg
test
je
sbb
inc
out
xchg
aaa
into
nop
ja
insb
aas
sub
or
and
sbb
inc
mov
mov
lret
lcall
fisttps
mov
xor
and
lods
call
es
mov
or
mov
std
addr16
ljmp
orl
pop
cmp
das
sbb
leave
mov
in
mov
test
jle
scas
add
adc
sahf
loope
push
xchg
cmp
mov
adc
xor
push
mov
imul
imul
and
test
xchg
notl
je
lods
mov
push
cwtl
xchg
or
push
out
out
xchg
data16
lods
xchg
in
mov
mov
cmp
das
fbstp
pop
or
pushf
sub
or
cmp
int
sbb
cmp
or
cmp
popf
pushf
dec
jg
push
hlt
pop
push
test
and
and
push
adc
cmp
fldt
insl
in
pusha
jp
push
mov
lods
sahf
not
pop
mov
mov
push
addr16
jno
dec
jl
imul
ja
rclb
mov
jp
push
dec
or
imul
sbb
mov
or
testl
dec
pop
popf
pop
adc
push
mov
and
adc
pop
adc
jne
sbb
or
push
jae
xchg
mov
cmp
mov
pushf
movsb
testl
lds
lock
lock
int3
insl
jae
mov
xchg
nop
pushf
mov
sbb
sub
add
sub
std
cmpsl
cmpsl
pop
stos
ss
fwait
movsb
adc
ret
push
push
fcomps
sub
sbb
gs
inc
push
lret
pop
jl
lcall
cwtl
data16
lret
shlb
adc
lahf
faddp
xor
sbb
les
loopne
popa
fcoml
mul
push
das
adc
cwtl
pop
mov
scas
dec
mov
fldl
sahf
pop
xlat
adc
or
dec
fwait
add
push
mov
add
and
mov
push
loope
fcompl
popf
cld
mov
xor
mov
jb
mov
push
fisubl
and
push
add
dec
xor
imull
or
pusha
push
xchg
jne
push
mov
mov
sub
adc
adc
pop
aas
and
outsl
negl
push
sbb
push
js
mov
dec
jmp
jae
add
ficoml
rorl
push
jecxz
sbb
cwtl
adc
jbe
xor
test
in
dec
inc
fcompl
fs
ret
mov
movb
mov
jns
mov
repnz
loopne
lods
ret
xchg
cmovge
ret
ret
inc
rorl
inc
fcomp
mov
dec
xchg
loop
push
je
or
shl
mov
lcall
mov
out
inc
xor
adc
jp
xchg
outsl
fnstsw
inc
add
dec
xor
xor
mov
and
jns
test
shll
addr16
xchg
and
nop
shrb
inc
js
lahf
movsb
int3
jo
stos
mov
rolb
xlat
dec
push
dec
in
pushf
push
mov
sbb
in
inc
sub
sahf
cmc
add
add
popa
cs
iret
or
or
jb
mov
clc
sqrtps
mov
dec
adcl
xchg
sbb
cmpsl
ret
xchg
rclb
mov
jne
pop
dec
out
and
scas
pop
fsubl
push
movsl
roll
cli
imul
pop
insb
adc
pushf
pusha
inc
jg
push
ret
mov
arpl
stos
and
mov
adc
repnz
jno
push
stos
push
out
mov
pop
test
mov
mov
xchg
and
inc
insb
sub
pop
jge
adc
int
inc
stos
sar
cmc
rorl
inc
pop
mov
cmp
push
out
fsubp
and
gs
push
test
inc
adc
loopne
pop
cli
add
xchg
dec
insl
jle
mov
cmp
adc
jnp
int3
mov
outsb
fnstenv
jo
or
push
cmp
cli
adc
mov
sar
in
nop
cwtl
push
test
cmp
scas
dec
adc
stos
adc
insb
stc
shl
xor
dec
cmp
add
rolb
xchg
sbb
shrb
out
dec
pushf
fmull
clc
or
scas
xor
inc
sbb
insb
imul
bound
pop
ljmp
scas
loop
add
fmuls
lret
sbb
enter
fbld
lcall
ljmp
in
fcompl
fldl
push
add
dec
cmc
push
int3
jns
mov
je
pop
mul
push
xchg
dec
mov
and
add
arpl
lea
mov
mov
fistpl
push
pop
xchg
xchg
pop
mov
stc
or
pop
xor
jle
cld
jle
or
mov
mov
pop
xor
insb
cmpsl
mov
aad
mov
xor
mov
mov
fstps
pop
adc
jl
and
addr16
ret
xchg
lds
les
cwtl
inc
mov
dec
shll
jl
jp
dec
push
mov
dec
push
popa
and
and
mov
push
dec
sbb
movsb
stos
ret
inc
cmp
inc
fs
mov
std
pop
imul
nop
testl
je
inc
loop
sbb
xchg
push
mov
leave
test
cwtl
sbb
popa
mov
cltd
mov
jae
sbb
mov
shlb
or
test
ret
sbb
sub
pusha
lods
movsb
sub
cs
sub
out
pop
mov
pop
adc
cmp
aam
mov
data16
jg
lds
arpl
adc
mov
pop
or
test
xchg
iret
mov
mov
cli
idivl
xor
xor
sbb
ficoml
divl
inc
cmc
jg
hlt
lea
sbb
rorl
ja
test
add
sahf
cmp
sub
mov
in
cmp
inc
fdivrp
mov
pop
xchg
loopne
dec
xchg
mov
loop
adc
cmc
divl
arpl
std
cltd
push
xchg
repz
push
lea
int3
ds
iret
jae
or
inc
into
test
stc
inc
sub
enter
loop
add
push
and
push
adc
push
push
jge
jp
inc
shll
mov
movb
ret
and
fildl
orl
pop
data16
jo
sub
push
mov
pop
fs
push
rcll
mov
pusha
mov
xchg
dec
add
xor
and
pop
pop
std
cmc
in
xchg
jmp
adcb
cmpsl
xor
sub
das
pushf
adc
add
in
push
jnp
popa
sti
cld
fisttpl
pop
cmpsl
sub
jbe
lahf
ss
out
fadd
pop
jno
cmp
xchg
pop
adc
pop
and
adc
fnstsw
push
test
lock
data16
push
scas
push
into
inc
addr16
aas
and
int
out
jnp
xchg
xchg
mov
or
cmc
xchg
std
rcr
mov
rorl
jne
mov
ljmp
cmpsl
pop
fadd
movsbl
dec
fldcw
sti
lea
jmp
lds
lods
cmp
pop
in
pop
test
das
insb
xchg
movsl
movsb
repnz
pushf
mov
inc
jne
outsb
cmc
mov
jno
test
sub
mov
mov
out
mov
dec
shlb
xchg
cmp
outsb
pop
push
les
push
stos
mov
arpl
adc
or
rclb
ret
mov
ds
add
lcall
cmp
pop
in
loopne
push
loop,pn
cmp
push
cld
push
xor
mov
inc
push
mov
in
sub
clc
fwait
pop
inc
mov
pop
sbb
or
adc
inc
inc
mov
fcoml
testl
xor
inc
fstpl
cmp
out
dec
int
xchg
out
in
outsb
out
aas
sub
call
jp
mov
int3
iret
push
mov
mov
int3
div
out
stos
xchg
jg
nop
pop
enter
test
cltd
dec
or
repnz
fwait
lds
dec
shlb
xchg
pushf
fs
inc
imul
cld
cmc
sub
fisubrl
std
or
xchg
stc
mov
mov
pop
pop
and
lods
call
cltd
fsubs
scas
mov
push
push
test
subl
fdiv
adc
xor
mov
outsb
cmp
repnz
sub
dec
outsl
pop
pop
fsubrs
shrl
mov
mov
enter
scas
fsubrs
cmc
add
and
js
cltd
sub
mov
fstpl
call
cli
dec
lods
xor
js
jnp
pop
pop
cmp
or
mov
into
cltd
push
out
or
and
jno
add
js
push
and
mov
test
andl
mov
out
outsb
and
aas
cmp
sub
jle
adc
and
scas
inc
mov
and
jp
xchg
mov
aam
jle
sahf
inc
xchg
lcall
inc
filds
mov
icebp
jno
xor
xchg
outsl
das
jae
cmp
ss
jnp
in
mov
sbb
xchg
dec
xchg
push
jne
outsb
jle
ret
outsb
adc
test
and
xor
mov
rcll
and
dec
ljmp
cmp
scas
lret
addr16
or
shrb
fnstcw
pop
or
icebp
xchg
jmp
loope
xor
inc
js
mov
sbb
ret
mov
ror
test
dec
adc
add
rcrl
imul
movsl
add
dec
xor
popf
loop
fs
pop
into
inc
jne
roll
xor
movl
inc
imul
push
out
cmp
movsl
popf
adc
dec
popf
xchg
and
push
xorl
sbb
mov
lret
push
ds
data16
das
imul
sbb
xor
sbb
arpl
push
xchg
jnp
subl
xchg
out
add
xchg
jnp
sahf
lea
stos
dec
movsb
sbb
xchg
inc
adc
dec
and
ficoms
cmp
xchg
sub
sub
outsl
mov
loop
lods
je
das
sbb
push
pushf
adc
xor
shl
sbbb
jg
jg
outsb
cmp
push
inc
push
stos
repz
bound
push
punpckldq
jp
movsb
and
push
or
leave
mov
and
std
push
fucomp
mull
rcl
and
aam
dec
add
sbb
outsl
inc
xchg
scas
cs
lds
mov
sub
jmp
lret
imul
mov
push
cmc
je
push
shl
xor
pop
xchg
stc
inc
mov
pop
jnp
mov
mov
mov
add
sbb
movl
xchg
or
push
xchg
mov
pop
jb
or
aam
mov
pushf
push
aam
mov
int3
mov
mov
lret
movsl
in
jae
fists
cltd
sub
in
inc
push
addr16
xchg
insl
pusha
xchg
xor
pop
xchg
xchg
push
aaa
pop
arpl
jp
pop
sbb
fucom
test
pop
push
cmp
mov
scas
sbb
gs
insb
notl
dec
mov
xchg
sub
xchg
scas
inc
jmp
xchg
into
sbb
inc
and
push
inc
les
repz
fbld
hlt
sbb
stc
or
std
pop
jmp
mov
or
add
mov
fcomps
lods
add
nop
repz
pop
lods
jecxz
sbb
enter
add
cmpsl
mov
adc
sub
add
popf
pop
jmp
push
lahf
out
mov
stos
lds
data16
cmp
push
andb
push
jl
stos
in
lret
xchg
inc
mov
and
iret
into
adc
push
xchg
dec
jae
loopne
adc
inc
xchg
push
jmp
fdivrl
jmp
xchg
mov
fsts
adc
ds
inc
dec
push
enter
add
fcompl
nop
cmpsb
and
icebp
sub
lods
icebp
dec
sub
insl
mov
stos
and
cmp
mov
add
scas
gs
inc
cmp
xchg
inc
fsubrl
scas
cmp
movsl
jl
and
cwtl
adc
lret
mov
mov
add
fisttpl
dec
insl
imul
or
fcmovnu
bound
mov
and
jbe
cltd
iret
arpl
inc
mov
jp
sbb
iret
out
scas
pusha
shr
mov
dec
ret
aad
sub
mov
inc
push
ffree
adc
ljmp
push
mov
cmp
push
andb
mov
cmp
outsl
sbb
push
mov
ret
add
fdivs
or
or
loope
cmp
test
inc
inc
pop
cmpsb
dec
adc
or
in
mov
adc
mov
in
mov
add
into
mov
cmpsl
das
cmpsl
mov
scas
adc
test
lea
rclb
fcomp
inc
fidivl
add
push
js
dec
enter
mov
test
add
push
bound
jb
cmp
cmp
xlat
sti
pop
jmp
add
insl
jne
mov
sbb
pop
push
or
lcall
in
lcall
rcll
mov
jl
fs
loope
and
in
movb
xor
iret
jmp
adc
cmpsb
andb
cmp
dec
push
leave
xor
pop
sbb
mov
icebp
jp
pop
xor
outsl
icebp
xchg
push
xchg
dec
xchg
and
mov
ljmp
push
test
test
jne
cmpsb
sbb
lock
inc
and
mov
call
out
jnp
in
call
std
xorl
xchg
andl
or
leave
int
repnz
cmc
ja
les
bound
cmp
and
imul
sub
pop
push
shr
mov
xor
xor
push
int3
lock
cld
fcomi
imul
insl
cmp
mov
mov
and
repz
loope
adc
push
std
mov
je
pop
inc
mov
adcb
adc
xor
sbb
insl
and
jbe
rorl
cmpsb
fxch
add
xchg
inc
imul
enter
push
xor
and
add
outsb
jp
cmc
adc
push
nop
data16
xor
rcr
popf
lods
inc
roll
push
jecxz
add
pop
pop
adc
mov
jmp
jg
inc
inc
mov
mov
sub
sar
pop
push
inc
push
dec
sub
sbbl
add
hlt
add
clc
jne
bnd
cvttps2pi
repnz
mov
adc
pop
jbe,pt
or
jg
out
dec
mov
shrb
in
adc
mov
cmpsl
adc
adc
jecxz
sub
fistl
push
push
dec
aaa
cld
mov
fnstsw
in
aas
fnstenv
movsl
cmpsl
sti
test
mov
xchg
cmpsl
push
inc
mov
rolb
out
sub
daa
cld
addr16
call
lods
xchg
inc
nop
cwtl
inc
sub
adc
lds
mov
mov
leave
adc
pop
std
out
test
out
cld
insl
push
mov
pop
cmp
fwait
xor
ss
nop
push
out
mov
xor
xchg
cli
das
or
pop
sbb
sub
push
sub
bound
push
xchg
loopne
mov
repnz
mov
cmp
xor
jg
mov
fldt
and
int3
pop
inc
dec
call
mov
dec
dec
cmovno
pop
add
jl
pop
pusha
idivb
or
ss
leave
sub
fisubrl
repnz
and
popa
and
cltd
or
jno
or
loope
push
push
lret
xchg
out
pushf
negl
add
loope
or
jmp
and
aas
mov
mov
es
stos
dec
loopne
fisubl
mov
inc
popf
sub
push
sub
sub
jno
lods
mov
adc
pop
in
repz
pop
adc
lock
jge
ss
push
mov
test
xor
out
subb
push
or
outsb
pop
sub
test
mov
dec
inc
stos
mov
negb
add
add
push
cmpsb
mov
enter
dec
jle
push
sarl
dec
inc
ja
ret
test
pop
popf
dec
lds
rcr
lret
mov
add
mov
mov
ja
pop
sub
data16
push
ss
std
lret
xchg
xchg
mov
test
int
out
xchg
movsw
mov
or
jcxz
sbb
ss
push
xor
sysenter
popa
mov
jp
inc
pop
xchg
fnsave
nop
lcall
mov
cmp
rclb
or
push
lea
mov
sub
ret
inc
sub
mov
rcll
test
int
shrl
pop
fwait
lods
data16
negb
add
mov
mov
mov
sub
test
clc
add
and
insb
cmpsl
pop
hlt
loopne
movsl
out
and
test
aad
imul
jmp
jns
push
xchg
jns
mov
das
test
mov
pop
mov
movsb
imul
inc
mov
int
lods
test
mov
sub
repz
jp
aas
aas
add
fs
cwtl
cmp
repz
push
sbb
sbb
push
xchg
mov
adc
dec
add
mov
daa
push
cwtl
dec
inc
and
mov
testl
inc
mov
cld
hlt
push
in
popf
jecxz
sub
andb
pop
mov
xchg
lea
sub
xchg
mov
hlt
dec
ficoml
add
imul
dec
adc
test
jmp
pop
pusha
mov
xor
pop
imul
dec
outsl
and
mov
mov
add
mov
adc
dec
push
lods
sub
cmp
out
dec
xchg
push
pop
adc
mov
inc
push
xchg
xor
leave
call
sub
subb
mov
jg
std
jge
or
std
loopne
jmp
cs
ljmp
daa
scas
sbb
stos
loop
mov
mov
lea
mov
push
into
jle
jmp
aas
ljmp
imul
stc
sub
mov
shll
jo
pop
aas
in
lret
stc
mov
ficomps
cmp
or
jbe
sbb
fiaddl
imul
scas
aam
ret
mov
jle
mov
mov
data16
lret
mov
test
push
xchg
pop
or
popa
push
repz
hlt
mov
popf
sub
sub
sub
addl
test
daa
inc
jmp
ss
adc
or
inc
aaa
xorl
clc
test
sbb
mov
mov
nop
int
pop
data16
inc
cmp
dec
and
or
adc
aam
jb
mov
mov
into
movsl
out
xchg
addr16
add
sbb
lret
loope
std
or
clc
outsb
jcxz
pop
std
mov
mov
scas
mov
sub
pop
mov
sub
pop
xchg
rorl
push
cmpsl
loope
push
pop
cmpsl
jns
mov
sbb
mov
jo
insb
andl
jb
dec
push
and
lret
dec
stos
pop
mov
stos
xchg
and
shll
mov
sub
inc
cmpsl
cmp
mov
enter
insl
sub
mov
stos
in
push
mov
roll
cmp
pop
push
inc
adc
mov
roll
and
cli
fidivl
les
sbb
ds
notl
push
adc
and
imul
sbb
cs
fucom
test
sub
stos
mov
jl
sahf
std
movsb
sub
inc
fistps
xchg
pop
daa
shl
pusha
subl
cmpsb
pop
sti
xchg
rcrl
cwtl
pop
lea
push
or
in
ja
stc
mov
daa
xchg
int3
mov
mov
jb
mov
clc
mov
or
mov
shlb
fldt
adc
jno
sbb
xchg
lea
push
fsubrs
test
insl
sbb
dec
push
cmp
pop
in
jl
inc
shll
inc
movsl
jle
add
adc
lret
lret
stos
and
pop
lahf
pop
xor
sbb
mov
or
dec
adc
push
repnz
sub
pop
shrb
popa
fldt
and
mov
dec
in
mov
jo
popa
clc
mov
xor
mov
popf
push
mov
ljmp
cltd
shlb
fldt
mov
inc
sub
bound
lods
pop
data16
ljmp
jge
add
lret
push
pop
push
inc
mov
lds
inc
pusha
inc
mov
mov
nop
and
jne
mov
jbe
bound
jp
shrl
popa
scas
adc
pop
sub
mov
inc
push
pop
and
test
mov
sub
addl
inc
ret
xchg
arpl
repz
cld
popa
add
roll
lret
cli
sbb
repnz
lahf
cwtl
dec
leave
sbb
fistl
jo
in
cli
arpl
dec
xor
inc
add
inc
and
mov
push
push
add
and
mov
cmpsb
mov
test
sbb
xor
pushf
mov
hlt
out
jl
mov
push
lods
scas
pushf
fcomps
loop
cld
mov
fnstcw
icebp
and
jle
and
xchg
add
inc
jb
or
iret
cmp
mov
scas
nop
ljmp
mov
lcall
lds
mov
stc
xchg
negl
sahf
cmp
dec
mov
sti
test
in
sub
jmp
insb
xchg
xchg
or
adc
push
gs
pop
inc
movsb
aam
sbb
lcall
cld
subl
push
or
fsubrs
cmpsl
sbb
mov
enter
xchg
push
leave
or
int3
insl
inc
in
or
lock
imul
push
inc
push
scas
adc
push
call
xor
ljmp
or
int3
mov
js
ds
add
mov
mov
shlb
test
xchg
test
mov
push
adc
cmp
pop
rcll
jp
or
xchg
cmpl
xor
add
test
and
popa
xor
xchg
int3
jge
jl
scas
cmp
or
inc
bound
stos
ja
mov
xor
add
cmp
xor
cmp
daa
cwtl
mov
or
mov
dec
xchg
movsl
or
imul
leave
mov
das
cltd
add
lods
inc
dec
pop
xor
push
cli
loop
pop
fbstp
mov
sub
jbe
scas
ss
das
adc
ret
ljmp
add
pop
jne
popa
cld
mov
cmp
mov
shl
add
aam
out
jbe
pop
addr16
lods
sbb
scas
sub
jg
out
mov
xchg
mov
xchg
fwait
insb
mov
mov
mov
sbbb
clc
mov
loope
jmp
sahf
dec
add
cmp
pusha
ret
js
ret
or
xchg
sbb
enter
cmp
out
imul
dec
push
aam
mov
xor
test
xchg
lret
cmp
aam
pop
or
popf
sbb
pop
and
pop
fsubrl
testb
cwtl
dec
lret
mov
sub
das
dec
sub
movl
or
xor
jbe
mov
sub
push
shll
or
sub
cltd
push
jo
and
push
inc
mov
sbbb
ljmp
dec
push
jl
adc
pop
sbb
aam
and
pop
or
test
setne
xchg
xor
jecxz
adc
mov
imul
enter
pop
mov
sbbb
xor
xchg
adc
sub
outsb
enter
out
mov
add
je
xchg
xchg
dec
add
es
sub
sub
and
cwtl
fisubrl
push
and
lret
cmp
adc
jp
fdivp
fcmovu
cmc
sbbl
jb
sbb
int3
mov
inc
sub
ret
jp
xor
mov
out
aam
mov
jp
add
inc
movsl
inc
xor
lods
rolb
out
xchg
push
mov
sbb
or
stos
dec
dec
inc
sub
sahf
fbstp
testb
pop
adc
outsl
mov
or
dec
dec
pop
push
fimuls
mov
clc
push
xchg
outsb
pop
fwait
jno
cmp
pop
mov
cs
ret
bnd
mov
pop
stos
or
push
popf
or
sbb
adc
pop
mov
test
dec
cmp
xor
cmpsl
insl
xor
scas
repnz
out
sbb
leave
cmpsl
das
mov
imul
xor
mov
imul
cwtl
adc
gs
push
lahf
pop
repnz
lock
cmpsb
mov
inc
cmpsb
xchg
loope
and
pop
mov
outsb
dec
or
inc
arpl
hlt
sahf
xchg
pop
cwtl
ss
sbb
jbe
int3
mov
mov
sub
popf
fsubl
cmp
addr16
inc
push
subb
testl
iret
push
or
call
mov
xchg
sub
std
cmpsb
inc
sub
push
sbb
enter
mov
sub
mov
and
rorl
pop
and
xchg
cmc
nop
mov
push
jno
jl
pop
jp
shrl
sahf
imul
shlb
cmp
rcll
mov
lds
xchg
and
cltd
stos
mov
cli
add
repnz
jmpw
push
cmpl
pop
mov
cmpsl
fwait
test
inc
push
leave
std
inc
add
cmp
int
jecxz
pop
pop
das
jg
cld
sahf
pusha
add
nop
test
loopne
adc
cmpl
lea
inc
pusha
pop
int3
in
cs
xchg
pop
mov
inc
test
in
pop
iret
and
fstpl
jge
test
or
enter
and
lock
popa
imul
call
mov
or
adc
out
js
loopne
mov
popa
out
inc
and
jl
cs
adc
or
ja
stos
ret
fldenv
cmp
pop
mov
push
pop
outsl
sbb
jns
hlt
cwtl
add
mov
xor
dec
push
lret
adcb
ljmp
xlat
fwait
lret
ss
inc
jno
mov
inc
ja
rclb
sbb
scas
fmull
push
cmp
es
pop
cmp
into
xchg
int3
andb
loopne
mov
scas
adc
mov
daa
fidivrs
jne
lods
dec
mov
dec
and
jnp
test
pusha
cmpsl
addr16
pop
movsl
repz
je
pop
leave
je
lret
sub
leave
std
punpckhdq
imul
jge
movsb
outsb
test
xchg
push
push
lods
lock
bound
cld
hlt
loope
jne
cmp
dec
sbb
xchg
outsl
jb
rcr
jne
fistpl
mov
js
and
pop
movsl
xchg
cmc
lea
adc
cmp
push
xor
insb
add
cmc
xor
popa
cmp
lds
repnz
pop
or
movb
ret
push
dec
cmp
jmp
dec
dec
xchg
adc
in
xor
nop
mov
rorl
mov
mov
cld
stc
sbb
push
dec
mov
lret
add
in
dec
mov
cmpsl
inc
sub
or
mov
dec
leave
negl
loope
ja
add
cld
mov
push
mov
jno
xor
lret
inc
cwtl
push
mov
push
push
mov
fucomp
push
adc
mov
mov
sub
pusha
daa
aas
dec
ljmp
int
outsb
int3
or
ret
sub
mov
mov
sub
repnz
pop
dec
movsl
jo
aaa
add
and
push
out
enter
stc
sbb
sarl
push
ret
cmp
xor
sbb
jnp
aaa
mov
cltd
sub
or
rorl
mov
xchg
daa
mov
xor
and
lea
inc
sbb
lods
insb
adc
rcll
fnstenv
mov
add
jno
adc
push
daa
xor
adc
pop
add
in
mov
out
mov
adc
adc
jle
fidivl
or
int
xchg
dec
xchg
mov
ror
ljmp
imulb
jmp
jmp
insb
out
sarb
and
or
ret
clc
negl
push
mov
rcrl
pusha
push
mov
pop
ror
push
add
fucomp
push
mov
mov
hlt
stc
sub
out
wbinvd
ljmp
sub
mov
scas
out
or
xchg
clc
stos
and
iret
or
mov
sbb
imul
ds
add
fwait
rclb
fwait
lods
cltd
fidivrs
incb
ljmp
mov
push
push
sub
mov
adc
iret
or
movsb
add
fcoml
hlt
xchg
mov
jp
xlat
sbb
daa
aas
arpl
push
shll
xchg
mov
push
cmpsb
mov
mov
jg
xor
pcmpeqd
mov
aaa
sbb
jmp
push
jae
cmp
arpl
sar
and
outsl
pop
cmpsl
inc
jp
fnsetpm(287
jle
pop
or
jnp
cmc
cwtl
inc
push
or
sbbb
inc
mov
imul
add
dec
dec
ds
ds
movsl
sbb
dec
adc
sbb
aad
stc
scas
fisttpl
pop
cli
jmp
jp
mov
adc
xchg
cmp
mov
cmc
cmp
add
cmovae
jmp
lcall
cwtl
and
rcrb
dec
mov
xor
mov
jle
mov
xchg
xchg
xchg
cmp
mov
lods
dec
rcrb
push
xor
mov
lods
push
adc
pop
add
gs
pop
add
or
dec
inc
adc
ljmp
call
sti
pop
mov
mov
lret
mov
imul
jno
jg
dec
loopne
int3
insb
fwait
lcall
cli
push
adc
sub
aaa
in
xchg
jl
loopne
jbe
addr16
imul
in
mov
jns
cmpsl
dec
jbe
cmp
sbb
outsb
mov
and
ds
push
xchg
cld
sub
mov
dec
hlt
xchg
ds
add
or
imul
cmp
sti
cwtl
mov
roll
mov
imul
sbb
xor
mov
insb
call
cmc
adc
lods
test
into
fbld
xchg
popa
imul
cltd
int3
mov
pushf
rclb
gs
pop
jg
mov
pop
icebp
fwait
mov
xor
icebp
icebp
jbe
rol
cli
adc
pop
adc
mov
pop
sbb
bound
dec
js
adc
movsl
sbb
xchg
imul
xchg
push
sub
jecxz
xorb
xchg
arpl
and
sub
movsb
jbe
fistps
test
scas
push
jge
jo
dec
jno
push
jnp
int3
ret
into
and
or
mov
ret
cli
loop
insb
movsl
popf
mov
mov
jae
dec
test
ljmp
and
sbb
inc
cmp
add
into
movsl
mov
fcoml
push
ret
mov
outsl
sti
lods
bound
pop
mov
fistpll
adc
inc
mov
jmp
nop
inc
out
push
xchg
add
cmc
jle
mov
out
repnz
movsl
shrb
adc
inc
cmpsb
pop
jg
sbb
aas
les
xor
idiv
test
ret
lret
iret
pop
repz
cmp
icebp
lret
arpl
dec
mov
outsb
shrb
in
pop
add
lahf
mov
mov
insl
or
xlat
sub
inc
or
inc
xor
jmp
test
flds
sub
mov
negb
bound
daa
jl
add
pop
shll
bound
ja
movsbl
add
fstp
scas
jne
pop
popa
daa
pop
cmp
dec
popa
push
xchg
pop
sub
outsl
loop
sub
jb
jb
xchg
lret
movsl
in
iret
adc
jge
pop
icebp
iret
das
cmpsl
ss
dec
or
mov
sbb
test
shl
shlb
jl
push
outsl
push
adc
xchg
stos
rclb
movsl
out
mov
aad
pop
cmp
hlt
jbe
xlat
or
cmp
repz
je
mov
and
in
pop
outsb
jno
stc
repz
cltd
mov
or
push
lret
fwait
mov
jge
jae
pop
movsb
pop
add
mov
fdivr
sub
int
jns
frstor
cwtl
mov
pop
push
das
rclb
cmp
sbb
lods
ret
out
pop
sbb
pop
xor
loop
call
mov
pop
leave
xchg
sbb
cmpsl
andb
xchg
fs
inc
jno
out
mov
sbb
sbb
add
dec
mov
inc
push
sub
sbb
mull
gs
addb
sbb
dec
out
fs
ss
fs
add
mov
decb
mov
aas
mov
sbb
das
mov
mov
les
jne
sarb
mov
subb
fdivl
nop
pusha
lods
movsb
sti
out
lock
mov
pop
filds
incb
movsl
addr16
call
jnp
add
test
mov
pop
lcall
mov
aad
pop
dec
adc
or
push
ret
iret
hlt
xor
sahf
xchg
cld
xchg
mov
jp
dec
sub
daa
lds
mov
aam
loope
cmp
adc
mov
rorb
sbb
cs
mov
lods
loop
push
out
ret
or
mov
shll
cld
adc
cld
sbb
ljmp
jge
mov
imul
insb
adc
pop
and
daa
and
mov
xlat
push
and
push
pop
out
jbe
stos
outsl
in
pop
jmp
insl
or
shrb
or
aam
mov
push
es
testl
out
adc
ret
or
jg
xchg
push
pop
mov
rcrl
jnp
sub
outsl
push
mov
adc
sub
lret
mov
push
inc
in
int
pushf
jae
pop
rclb
xorb
pusha
mov
xor
sub
add
mov
sti
mov
xor
mov
jne
sub
cmp
lcall
call
sub
cmpsl
or
nop
cwtl
dec
outsl
insl
add
sbb
int
in
ss
sbb
or
dec
movsb
les
mov
into
ljmp
js
pop
xchg
dec
ret
es
jbe
xchg
sub
popa
inc
or
stos
cmc
cld
push
insl
scas
fcmove
inc
add
test
mov
push
sub
das
test
jb
lret
jg
mov
imul
sti
cwtl
bound
sbb
push
adc
add
pop
sbb
and
faddl
es
popa
ja
lcall
call
popf
mov
ds
test
movsb
fmull
lret
into
imul
divl
nop
mov
std
xor
in
mov
enter
pop
outsl
sub
cmp
testb
mov
aad
nop
pop
dec
jb
ret
sbb
mov
xchg
pop
scas
mulb
jle
sarl
in
or
inc
pop
pop
mov
mov
mov
ss
iret
xor
jb
outsb
mov
mov
mov
cwtl
xchg
add
inc
adc
mov
iret
ret
push
jmp
adc
hlt
lret
movsb
fisubrl
xlat
inc
dec
xor
or
repnz
jno
popa
or
idivb
jbe,pt
sarb
sbb
int
jge
mov
mov
mov
mov
cwtl
nop
fistpll
add
jo
gs
loopne
clc
mov
jae
stos
adc
inc
mov
jno
notl
jecxz
imul
fisubrl
fs
sti
aad
shrb
fidivrl
push
out
sub
out
rclb
movlps
push
and
cmp
test
sbb
pop
inc
xchg
aad
adc
inc
test
adcl
sbb
cmp
xchg
xchg
stc
stc
adc
jbe
xchg
inc
ss
into
clc
loop
bound
je
aad
inc
and
addb
fsubrl
jle
sbb
out
outsl
lret
mov
xchg
outsl
jne
addb
pushf
xor
mov
leave
inc
dec
mov
popf
xlat
insl
scas
cltd
dec
call
lret
repz
push
daa
sub
daa
and
inc
adc
inc
inc
jno
js
shrb
movsl
ficomps
test
pop
cli
mov
push
push
pusha
sub
mov
sti
and
out
mov
cli
adc
cmp
inc
stos
leave
iret
iret
ret
cltd
xchg
xchg
sbb
mov
inc
jmp
add
lret
cmpsl
pop
ss
loope
add
mov
adc
xchg
fptan
stc
adc
adc
loopne
lret
int
inc
xlat
ret
add
test
mov
arpl
cmp
mov
std
mov
mov
loop
pop
inc
fcomps
je
jb
cmp
lret
and
push
cmp
jg
stc
popa
cmp
push
fs
jecxz
sbb
inc
cltd
jbe
inc
mov
jecxz
mov
push
fcmovne
mov
jno
sti
test
cld
jne
dec
jb
sub
push
jnp
hlt
sub
or
jns
mov
jle
lret
ret
loopne
xor
push
pop
sub
mov
cmp
test
push
andw
call
cmc
mov
adc
xor
and
leave
nop
lea
jp
and
jl
repz
aaa
xchg
dec
dec
cmp
or
les
aas
pop
dec
mov
sbb
out
cmp
inc
cmc
push
ret
adc
cs
or
outsb
cmp
mov
dec
prefetch
imul
add
jbe
jnp
ja
xor
push
aas
mov
or
mov
push
mov
aad
cmp
out
and
mov
fimull
jp
in
sbb
push
push
xor
icebp
fwait
xor
push
stos
pop
adc
int
mov
mov
icebp
test
out
movb
ja
mov
test
mov
sbb
adc
xchg
fnstenv
fwait
test
pop
call
scas
nop
sbb
jmp
mov
jo
and
fadd
jp
fs
stc
in
lea
push
aas
xchg
mov
mov
frstpm(287
add
popa
push
xor
mov
fidivrs
push
loop
ret
jg
je
mov
lock
je
out
push
sbb
cmpsb
add
xchg
dec
mov
push
lret
fcoml
aad
xchg
int3
xchg
mov
jns
cltd
sub
jg
xor
xor
xchg
push
mov
stos
pop
lods
addr16
cltd
adc
sbb
push
lret
call
lahf
lahf
xchg
lock
outsl
lods
out
fwait
test
cmp
adc
mov
aam
push
sbb
bnd
cmp
mov
repnz
adc
mov
fidivrl
in
hlt
or
iret
dec
mov
add
pop
inc
dec
pushf
xlat
push
les
cld
insb
xchg
adc
rcll
push
xchg
pushl
sub
mov
lret
add
add
jle
or
xor
and
testl
int
mov
mov
in
mov
mov
pop
out
mov
popa
add
dec
cld
filds
inc
or
dec
push
test
fdivrs
clc
call
filds
adc
lods
movsl
or
xchg
adc
adc
jno
daa
fsubl
xchg
jne
pop
jecxz
add
or
push
imul
aad
lock
xorb
or
push
or
and
cli
and
stc
insl
pop
inc
mov
dec
xor
push
inc
or
xchg
mov
jbe
pop
and
push
jmp
je
loop
data16
lds
inc
andl
out
pop
xor
push
ss
push
lcall
xchg
in
subb
push
in
xor
dec
push
pop
sbb
push
mov
repnz
decb
xor
rcll
push
retw
push
jno
lods
lcall
inc
sarb
test
cmpb
in
jb
jmp
icebp
lea
pusha
shrb
xor
aam
xor
mov
push
push
cmp
dec
insb
and
filds
mov
mov
pop
stos
add
inc
idivl
xchg
lahf
scas
mov
int
cmp
loop
pop
imul
pop
out
leave
push
sahf
out
sbb
mov
xchg
dec
mov
stos
jb
jne
mov
push
faddl
or
out
mov
sbb
mov
bound
jo
cmp
xlat
jno
mov
fcompl
cmp
mov
jle
jnp
out
inc
pop
sbbl
and
sub
inc
mov
jne
inc
mov
outsb
push
mov
aaa
arpl
push
cmc
sbb
cmpsb
mov
ficomps
jbe
add
or
sarb
aam
mov
out
cmp
sub
cmc
pusha
dec
in
daa
arpl
xchg
pop
stos
icebp
out
daa
loop
and
outsb
xor
xchg
or
mov
bound
and
icebp
mov
lock
shr
fdivrs
movsl
mov
jle
dec
and
mov
xlat
es
repnz
sbb
mov
rorb
scas
inc
cltd
mov
std
fimuls
mov
jnp
cmpb
push
shrb
sbb
popf
mov
inc
dec
jno
das
int3
or
test
adc
pushf
bound
sbb
gs
jbe
stc
pop
mov
push
enter
jl
sbb
or
out
xor
mov
cmp
jns
cli
or
mov
push
xchg
push
jae
fidivrs
rcll
fsubrl
add
dec
add
ds
call
call
lcall
fstl
sub
adc
pop
add
cmp
mov
push
sbbb
mov
inc
inc
clc
es
mov
sar
popa
sti
cmp
fsubrs
cmpsb
pop
jl
mov
out
adc
arpl
adc
fs
inc
aaa
test
jae
xlat
jl
testl
jo
dec
push
insl
or
repnz
movsb
int
pop
into
xor
push
adc
lds
mov
fcmovnu
icebp
xor
aaa
popa
in
push
xchg
sar
cmc
dec
push
xchg
mov
sub
inc
lcall
rcll
ficompl
int3
sar
stc
mov
push
dec
scas
imull
pop
imulb
cmp
pop
dec
inc
adc
popf
sub
cmp
jns
std
imul
xor
cmpb
cmp
dec
in
fnstsw
sub
cmpsl
mov
rcrb
mov
push
pop
xchg
xor
lahf
lods
lods
pop
or
lcall
pop
mov
push
stos
cmp
lret
lret
xor
inc
stos
popf
test
mov
loope
xor
fwait
ret
cmp
or
in
pop
push
add
sbb
inc
out
sub
stc
ja
push
mov
lods
out
sbb
push
sub
inc
xor
scas
mov
jge
decb
sbb
push
push
push
push
test
je
data16
push
mov
add
sub
mov
shr
push
fucomip
cmpl
out
lods
in
adc
or
pop
add
fimuls
mov
xor
jo
xchg
test
add
lahf
mov
sub
mov
push
lods
pop
mov
sub
hlt
outsl
pop
xchg
cmp
or
pop
arpl
aaa
daa
inc
mov
push
iret
xchg
push
ficompl
mov
jo
lcall
dec
outsl
dec
and
inc
xchg
mov
fdivr
jno
fcmovnb
es
xor
mov
mov
jmp
jg
adc
popf
out
cmp
ds
or
aaa
pop
aad
or
mov
dec
nop
push
lds
popf
sti
movsl
test
xor
stc
pop
push
inc
xor
or
adc
stos
jnp
lret
or
sub
jge
mov
and
outsl
test
mov
xchg
fwait
sub
cli
adc
mov
shl
push
push
sub
or
xor
out
cmp
insl
inc
mov
or
xor
cmp
shlb
xchg
pop
lahf
mov
and
sahf
sti
cmpsl
add
mov
jl
popa
pop
testb
out
add
mov
sbbb
and
add
push
mov
in
cmp
out
out
pop
insb
jnp
sub
popa
stos
test
jno
aas
in
push
inc
ss
lods
cmpb
les
push
test
dec
xor
pop
push
shrb
shll
adc
imul
test
jg
jne
inc
sub
jg
test
bound
std
and
jb
jb
and
dec
fbld
push
data16
pop
das
fs
lea
stos
mov
dec
mov
scas
pop
out
mov
addl
xor
xor
push
pushf
jecxz
push
test
or
cld
xchg
insb
push
mov
jnp
lret
sbb
jge
jnp
adc
sbb
pusha
rcr
int3
dec
lret
fldl
xchg
andb
addb
pop
lret
push
and
push
pop
xchg
cmc
addr16
fldt
fwait
ror
les
jo
test
and
loope
mov
jb
pusha
in
rcrb
call
mov
mov
pop
xlat
stos
mov
ja
cltd
jns
cltd
sbb
lret
inc
loopne
add
stos
in
adc
lcall
xchg
out
mov
rcrl
jno
leave
sub
push
test
pop
call
cmp
test
mov
lock
xor
and
push
mov
int
mov
push
mov
xor
daa
cmp
sbb
test
test
mov
or
fdivr
int
sub
cs
sbb
mov
loope
lods
push
andl
rclb
in
mov
mov
stos
mov
insl
pusha
repz
or
xchg
lret
stc
idiv
sti
push
xchg
cmpsl
out
in
jbe
daa
mull
jns
fldl
rol
pushf
loope
pop
fidivrs
adc
rclb
add
or
mov
dec
inc
mov
movsl
pop
cltd
fs
push
jnp
lock
cld
scas
bound
test
in
js
jmp
mov
cltd
add
push
push
inc
inc
fisttpl
push
gs
mov
imul
sbb
jne
int
xor
icebp
jg
gs
les
mov
jns
pusha
push
insb
mov
pop
sub
pop
rorb
pop
les
gs
repz
pop
adc
nop
push
bound
mov
mov
pushf
pop
push
dec
push
lods
cmpsl
fcomi
adc
xchg
sub
push
cld
push
outsb
test
out
test
mov
mov
in
add
fldt
aaa
inc
aas
fcoml
push
dec
into
mov
pushf
fwait
cmp
jge
pushf
movsb
jmp
xor
and
push
xchg
xor
nop
out
das
idivb
pop
pop
jmp
xor
pop
jae
stc
call
insb
pushf
mov
xchg
jmp
inc
add
jle
cmpsb
out
insb
iret
into
inc
add
stos
stos
les
mov
mov
in
xchg
iret
jl
les
into
lds
popa
dec
imull
insl
push
add
sub
mov
mov
insb
into
int3
bound
shr
jmp
fildl
sti
push
sbb
mov
mov
xor
stos
lcall
add
sbb
push
movsl
adc
add
bound
and
adc
push
sub
popf
fsubrs
sub
adc
add
in
mov
fsin
sub
push
inc
cli
imul
adc
push
lds
ret
or
pop
inc
jmp
and
movsl
add
fwait
dec
call
push
inc
mov
mov
sbb
orb
out
scas
inc
mov
fs
mov
inc
sbb
push
fsubrs
imul
xor
jecxz
xchg
insl
aam
or
mov
pusha
jge
push
xor
jo
repz
jae
cmpsb
inc
test
decb
push
insl
adc
push
int
adc
push
pop
mov
xchg
sbb
push
in
and
jne
mov
aam
mov
clc
inc
and
pop
lahf
dec
pusha
push
sbb
pushf
popa
or
cmp
add
test
sub
shrl
and
push
dec
push
aaa
lcall
daa
jmp
push
jne
cli
add
mov
movsl
sub
xchg
mov
imul
sub
lret
out
xchg
jle
or
sbbb
insb
mov
ret
into
push
shl
int
jmp
jle
fcomps
xlat
fadds
add
jne
cld
cmpsb
and
jb
add
test
xchg
mov
lret
jb
pop
fsub
and
lods
push
and
ret
das
lock
inc
ret
test
jo
cs
fwait
cmp
adc
or
je
inc
rorb
jo
andl
imul
pop
mov
sub
adc
xchg
movsl
mov
push
mov
call
or
mov
adc
push
inc
dec
mov
dec
mov
push
arpl
roll
adc
xor
fs
lahf
nop
sbbl
mov
xor
imul
push
mov
jge
lcall
dec
cmp
js
lock
xchg
lret
nop
inc
mov
leave
faddp
jno
and
cmp
je
shrl
mov
gs
mov
pop
push
jns
or
lahf
jp
push
adc
popf
imul
cmp
jnp
sbb
sub
sbb
cmp
inc
or
sub
aas
cmc
jl
or
xchg
jle
dec
cld
jmp
and
xchg
add
and
jmp
stc
leave
sub
jecxz
aad
in
add
test
rclb
mov
cld
xor
cld
lahf
data16
jle
pop
popf
aam
mov
mov
pop
data16
xor
and
int
sub
add
add
scas
adc
enter
add
loopne
lret
dec
rclb
push
aaa
mov
push
pop
cltd
mov
and
dec
fildll
sub
sub
xchg
pop
pop
xchg
pop
jne
nop
dec
mov
adc
sub
push
xchg
lret
test
ret
pop
lret
jns
lret
push
or
sbb
jne
aad
movsl
push
in
sbb
jbe
sbb
jb
cli
lret
popa
lahf
fsqrt
pushf
or
inc
xchg
and
adc
std
mov
xchg
ja
les
mov
je
sub
mov
add
insb
aad
xchg
jo
adc
xchg
pusha
dec
retw
ret
jb
adc
fcoml
fildll
iret
mull
cld
ss
pop
out
int3
les
in
mov
push
aas
fs
adc
shld
stos
mov
adc
out
in
iret
or
fldl
mov
dec
mov
fsubrl
mov
push
imul
sub
out
cmpsb
mov
lcall
cmp
test
imul
mov
imul
xchg
lahf
xor
mov
and
ss
xchg
mov
and
jns
and
dec
push
mov
loop
mov
adc
fcmovnu
dec
push
js
xchg
lea
cmp
mov
rcll
push
movsb
ficompl
push
sub
cs
push
enter
push
stc
fdivp
jnp
imul
mov
movsl
xor
add
std
inc
pop
cs
push
or
nop
add
inc
repz
pop
xor
lods
enter
orb
insb
pop
add
insb
lds
push
sub
adc
mov
loopne
fcomip
dec
xor
adc
cmp
mov
xor
cld
push
sbb
jmp
andl
clc
stos
lahf
xlat
dec
daa
ds
pop
jg
jmp
dec
test
lret
jmp
xor
int
clc
sbb
xchg
loopne
lock
fwait
cmpsl
push
dec
popf
cmp
mov
fs
loopne
sahf
lea
inc
dec
sbb
xor
das
xlat
jno
call
cld
loope
outsb
insl
inc
pop
or
jno
scas
xchg
rolb
inc
jg
xchg
inc
sbb
aas
aas
add
mov
out
call
es
test
or
mov
xchg
es
outsl
xchg
repnz
out
ficoml
mov
add
add
push
push
jae
mov
dec
adc
loopne
and
jmp
adcl
test
rclb
addr16
sbb
xor
push
std
sub
cltd
lret
jl
jp
cmp
jecxz
jns
dec
and
negb
out
push
inc
adc
sarb
inc
jmp
inc
rolb
xor
sti
jmp
inc
and
push
cmp
lcall
lock
pop
push
std
jl
loop
sbbb
mov
lock
lea
int3
pushf
aas
or
popa
fstpt
adc
jg
xlat
or
notb
iret
mov
mov
clc
sbb
andb
jl
or
or
orb
or
aad
mov
and
mov
sub
es
cwtl
adc
faddp
or
call
pushf
add
jl
and
and
adcl
rcrb
xchg
addr16
in
push
xchg
cli
out
fcompl
lock
lret
aam
cld
clc
xchg
lock
loop
pusha
ret
and
mov
xchg
fildl
cmpsl
pop
fiaddl
mov
out
mov
call
enter
sub
faddl
fcoms
leave
jl
sbb
lahf
sbb
arpl
or
cmp
es
inc
enter
mov
dec
jmp
mov
xchg
ret
loop
mov
cltd
pusha
pushw
cmp
aas
mov
lods
cmpsb
jnp
cmc
push
jb
int
cmp
add
jo
push
cmp
lock
or
popa
insl
inc
pop
xor
inc
cmp
in
mov
insb
xor
lods
xlat
xchg
pushf
mov
jns
adc
arpl
test
fdivs
inc
daa
add
mov
iret
fistl
mov
rorb
push
loopne
scas
inc
lahf
adc
dec
xchg
insl
inc
pop
inc
rorl
int
adc
cltd
pushf
movsl
cmpsb
jb
in
push
lods
gs
or
icebp
cmc
mov
into
shr
add
jb
and
xor
jne
int3
inc
shl
inc
scas
add
sbb
scas
popf
mov
inc
mov
jle
fists
in
xlat
jbe
std
adc
sub
fistpl
jge
clc
push
sti
inc
push
jle
test
nop
cld
pusha
int3
inc
mov
inc
icebp
fists
jne
push
mov
or
pop
xchg
jns
xchg
sbb
dec
and
movl
dec
repz
xorl
movb
jbe
lahf
inc
xor
das
or
in
retw
stos
mov
jne
sub
popf
jecxz
frstor
notl
adc
movsl
aam
inc
rcll
sub
adc
mov
sbb
orl
movsb
or
mov
nop
mov
imul
and
dec
push
cli
xchg
push
adcl
sbb
add
enter
shl
push
mov
sbb
aas
pop
lock
xchg
pop
xor
notb
cli
mov
addr16
xor
jmp
dec
lret
inc
stos
cmpsb
pusha
scas
cld
sub
out
int
mov
pop
pop
icebp
mov
adc
test
push
insl
mov
pop
jge
or
cld
movsl
loopne,pt
inc
pop
cmp
push
aaa
mov
mov
incb
pop
in
push
ja
stos
add
dec
cmp
cli
cmp
mov
lods
sbb
push
cld
dec
insb
and
adcl
push
scas
add
xchg
dec
and
gs
xor
pusha
jmp
mov
adc
cmovae
stc
push
bnd
insb
loopne
xor
fwait
mov
incb
mov
mov
repnz
mov
stc
cmpsl
sahf
push
mov
push
lods
add
test
or
sbb
push
inc
xchg
cmc
adc
aas
push
fdivs
and
or
cmc
push
jns
jbe
sbbl
sti
scas
loope
sub
int
aad
rcrl
das
shlb
push
add
push
std
push
aad
sub
paddw
add
ljmp
cmc
mov
pop
pushf
pop
pop
jae
dec
in
pop
sbb
xor
mov
or
daa
dec
xchg
iret
cs
ret
push
xor
out
mov
shll
rclb
dec
lret
cmp
aad
sbb
xor
cltd
hlt
stos
xchg
jo
out
das
xor
mov
clc
pop
xor
push
dec
fnstsw
xchg
push
dec
mov
imulb
adc
jne
xor
insl
xor
add
inc
cmp
shrl
xchg
popa
lret
nop
push
ss
ret
clc
cmp
sbb
fimull
or
jae
or
aad
rol
mov
scas
cmpsl
inc
arpl
pop
arpl
mov
insb
movsb
mov
aad
xchg
pop
sbb
xchg
mov
test
xchg
xchg
push
adc
mov
jo
jne
inc
lea
rcrl
xchg
movsl
lahf
cmpsl
leave
jne
dec
out
mov
stos
dec
lcall
into
xor
test
xchg
dec
rorl
aas
or
cld
jns
mov
stc
adc
xchg
push
call
jmp
out
sub
sub
mov
out
sbb
enter
jb
lock
adcb
sub
xor
jo
push
xor
dec
pusha
jl
mov
fmul
mov
lahf
daa
or
or
push
push
sub
pop
push
test
inc
test
mov
in
mov
ja
adc
pop
sub
and
insb
push
xchg
xchg
out
xchg
fs
jl
clc
adc
mov
push
dec
popa
ljmp
loope
xchg
xor
sub
rclw
mov
outsl
mov
sub
mov
or
push
pop
out
cmpsb
push
aas
data16
lret
dec
insl
or
aam
xor
pop
or
sub
and
inc
iret
mov
push
fiadds
mov
mov
es
pop
xor
rclb
jl
inc
fcmovnbe
nop
sbbb
aam
sub
jns
jmp
fisttpl
inc
mov
cs
adc
popf
adc
push
cmp
dec
bound
sub
push
cmp
ret
ljmp
mov
aam
cmp
mov
test
mov
add
lret
mov
sbb
fsubs
sub
shll
icebp
pop
xor
xor
jp
out
dec
push
shll
xchg
sahf
lret
jge
aam
mov
dec
outsb
push
aad
fwait
and
fisttps
jno
aam
and
rcrb
mov
rcl
sub
jle
sub
shlb
dec
mov
shr
mov
ja
stos
sub
push
test
fdiv
mov
cmp
jno
shll
mov
mov
jno
enter
or
scas
jns
or
inc
shrl
sbb
add
or
jg
or
xlat
and
push
fistps
pop
or
out
leavew
or
movsb
je
mov
int3
les
daa
jo
cwtl
or
aaa
pop
mov
and
pop
jmp
sbb
cmp
dec
xchg
or
inc
mov
outsl
orl
mov
jno
ja
lea
mov
scas
movsb
loopne
loopne
cmp
mov
jo
and
lcall
or
fidivrs
addl
add
add
lret
jae
jne
pop
mov
lahf
out
push
lea
loope
fxch
stc
daa
xchg
loop
or
test
in
jg
sbb
scas
dec
mov
and
sti
aad
dec
push
jo
cmc
aam
pop
add
xor
ror
sbb
movsl
cwtl
lods
mov
stc
fisttpl
adc
push
test
repz
sbb
push
pop
outsb
mov
les
or
jne
stc
lret
jbe
out
mov
je
cmp
and
outsb
adc
scas
inc
jo
dec
test
and
or
scas
imul
mov
xchg
xor
lahf
jge
adc
aad
dec
cmp
pop
or
test
push
stc
ss
fdivl
push
es
lods
jp
push
sahf
or
and
in
and
pop
lock
dec
shlb
adc
add
mov
int3
addr16
scas
mov
les
repnz
mov
icebp
mov
jge
sub
sbb
push
push
popw
repz
push
sbb
mov
pop
pop
cli
clc
fnstenv
es
jbe
jle
or
decb
add
jmp
mov
cs
dec
test
xor
jge
cmc
enter
iret
shrb
push
stos
inc
xor
mov
je,pn
pop
xchg
push
pop
mov
stos
in
push
dec
in
xchg
iret
repz
push
push
mov
mov
shrb
mov
pop
sti
dec
cmp
xchg
in
sbb
rcr
in
push
xor
push
adc
popa
popl
nop
add
dec
pusha
inc
xlat
pop
fstpt
sbb
fs
into
outsb
and
dec
xchg
xor
xchg
push
xchg
xor
mov
fisubrl
dec
mov
pop
dec
mov
mov
sbb
sub
sti
adc
jno
sub
jmp
adc
daa
ds
or
shll
lock
fadd
out
dec
outsb
movl
loopne
loopne
rcr
loopne
jl
scas
xor
aad
movsb
sbb
cmpl
jno
mov
pop
mov
les
add
enter
cmpsl
stc
clc
mov
and
stos
push
leave
add
xor
loopne
xchg
loopne
xchg
sub
xchg
rorl
xorl
ret
mov
xor
add
mov
add
mov
jmp
dec
jge
outsb
or
fcoml
rcrb
rcll
lods
jns
cmp
fdivp
mov
std
pop
pop
dec
mov
and
out
jle
mov
adc
outsl
and
out
fbld
bound
shlb
xchg
imul
mov
and
fnsave
gs
push
in
mov
call
mov
loop
mov
xor
and
sub
test
sbb
fimuls
dec
fnstsw
jg
ds
mov
mov
cwtl
aam
push
outsl
outsl
mov
sbb
mov
fstps
daa
jns
nop
dec
in
out
cmc
mov
push
pop
or
out
inc
sub
scas
subb
or
jle
mov
push
shrl
xor
push
pop
sbb
rorb
inc
aaa
test
adc
adc
dec
push
stos
insb
pop
sti
jge
adc
sub
icebp
xchg
pextrw
ficompl
sub
cli
leave
stc
add
sarb
inc
test
pop
mov
push
stos
mov
xchg
push
jl
mov
leave
or
cmpsb
cmp
or
pop
push
mov
push
ja
adc
cmp
inc
sarb
and
scas
push
stos
into
aas
les
sbb
loopne
sub
cmp
stos
out
sub
dec
sbb
jp
vrsqrtps
hlt
sti
xor
pusha
insl
mov
fwait
mov
pusha
bound
daa
mov
cs
mov
dec
ret
xor
mov
adc
inc
jbe
mov
fdivs
in
mov
fwait
js
cmp
pop
jbe
ss
aas
pop
movsl
shr
cli
cmp
xchg
push
fadds
stos
mov
mov
cwtl
je
leave
push
xchg
xchg
xor
push
mov
call
inc
push
sbb
xor
add
and
pop
push
nop
in
cs
cmp
ret
mov
dec
mov
div
or
sub
icebp
sub
xchg
cli
mov
mov
aas
in
xor
inc
fiadds
jg
aam
mov
mov
outsl
and
sti
jne
adc
nop
xor
das
mov
dec
mov
std
push
dec
in
xchg
xchg
sarl
xor
mov
dec
popa
icebp
mull
stos
add
xor
sti
pop
into
mov
jle
out
cmp
push
outsl
inc
inc
rorl
jle
les
lock
or
and
push
iret
loopne
mov
mov
repz
mov
fbld
ficoml
inc
cmpl
cmc
push
in
out
shlb
xchg
sahf
jmp
repnz
pusha
mov
divb
lds
lds
sub
xor
and
imul
jp
and
jmp
enter
mov
loop
sbb
scas
xchg
pop
inc
notb
mov
jecxz
lock
test
xchg
jo
mov
outsb
mov
scas
xlat
dec
sahf
flds
hlt
mov
ret
jecxz
pusha
pop
sub
xor
test
imul
sub
negl
bound
sub
nop
loope
lcall
dec
jbe
call
cmp
add
add
arpl
or
outsl
xor
mov
sub
inc
xchg
dec
mov
dec
jne
out
inc
movsb
or
pop
iret
sub
sub
lods
loope
imul
xchg
dec
test
cmpsb
sub
add
inc
and
xchg
xlat
mov
loopne
into
rclb
push
repnz
cmc
les
jp
lds
and
and
mov
adc
sbb
call
dec
mov
je
or
pusha
mov
scas
mov
xor
or
dec
pop
mov
or
rorl
push
and
push
xchg
js
push
icebp
je
aas
add
push
pop
lret
in
push
push
lret
lahf
fisttpll
orb
pushf
bound
pop
or
xor
dec
insl
cmp
jnp
push
lahf
jecxz
shl
mov
test
shl
dec
fnstcw
sbb
pop
push
mov
xchg
sbb
sub
inc
subb
leave
push
in
pop
outsb
imul
pop
push
fbld
inc
xor
popf
cltd
outsb
stos
outsb
mov
pop
push
movsb
cmove
dec
add
aaa
mov
pop
mov
repnz
addb
push
out
rorb
push
outsb
sbb
or
fdivs
mov
jbe
mov
mov
jbe
fcmovnu
movsb
cwtl
repnz
xor
popf
mov
mov
test
dec
push
lahf
ret
fcompl
cmp
pop
xchg
cs
and
mov
mov
hlt
inc
jnp
adc
xor
pusha
in
push
xor
jp
xor
ljmp
cld
xor
mov
push
push
lds
mov
enter
sbb
out
or
jecxz
jns
or
add
lret
mov
andb
push
loopne
addr16
or
std
push
sub
mov
stos
std
pop
or
ret
adc
mov
cmp
push
daa
lods
pop
sti
inc
ret
int
xchg
ret
stos
lret
pop
out
dec
push
inc
cmp
cmpsl
add
mov
xchg
pushf
data16
sbb
add
in
sahf
je
into
mulb
inc
inc
test
pshufw
cmp
fistpll
cli
inc
add
add
xchg
xchg
inc
mov
or
sahf
rcl
sbb
jbe
sub
inc
int
add
cmp
rcrb
testb
icebp
pop
adc
int
dec
call
out
jge
xor
push
add
out
pusha
inc
mov
mov
mov
or
adc
mov
jae
rcrl
xchg
out
adc
jno
aaa
cmpsl
icebp
aaa
add
jg
sarb
mov
sub
dec
xor
loope
lods
sub
xchg
int
in
gs
sbb
xchg
mov
jo
in
mov
bound
and
dec
pop
in
mov
mov
cmp
int
pop
push
xchg
leavew
int
push
call
hlt
lock
in
sahf
test
and
jg
stos
outsb
dec
scas
rclb
or
lock
cwtl
mov
sti
arpl
les
push
adcb
mov
or
aas
ds
imul
and
test
es
jle
cmp
scas
dec
push
lret
cmp
pop
add
repnz
jmp
jbe
push
ret
jno
cmp
pop
cmpsl
mov
jp
int3
es
or
dec
mov
mov
test
xchg
int
ss
dec
aaa
or
fs
adc
jge
and
dec
mov
jg
addr16
mov
add
cmc
mov
test
sbb
addr16
mul
lock
mov
sbb
jmp
out
iret
jo
jge
cmp
sub
pop
dec
movsb
int3
test
addb
call
pop
xor
pop
push
loopne
jo
cmpsb
cmpsl
mov
jg
inc
and
xchg
cmpsb
dec
dec
cmp
dec
or
or
inc
mov
mov
repz
or
je
lret
mov
pop
fmul
inc
rolb
xchg
xor
xchg
add
sbb
add
adc
ret
in
lods
scas
ficoms
pop
jg
sub
push
mov
mov
dec
int
cmp
hlt
push
pop
movsl
in
adc
xorb
fisttps
sarl
arpl
loope
jbe
mov
sub
sbb
outsl
push
int3
popf
push
mov
gs
pushf
sbb
orb
aad
clc
inc
daa
lret
jl
jge
clc
adc
cmp
xor
dec
inc
fidivrs
repz
ja
xor
mov
repz
mov
jge
mov
add
add
femms
adc
push
mov
jnp
adc
pusha
mov
or
sbb
addr16
imul
or
aas
rorl
mov
scas
push
pop
fdivrl
jle
inc
mov
or
sbb
push
add
sub
cmpsl
in
dec
mov
jge
sub
sub
lea
cmp
adc
sub
pop
dec
rcrb
test
cmp
xrelease
push
stos
jge
push
lahf
lret
dec
lcall
mov
shrb
leave
cmp
sbb
mov
inc
fstps
dec
test
addr16
mov
xchg
jae
ja
inc
or
int3
mov
pop
inc
ljmp
leave
push
icebp
out
popf
shll
push
fistpll
sbbb
aaa
sbbb
cld
cmp
fs
call
not
iret
js
push
push
lret
insl
push
and
sub
call
gs
cmp
dec
shlb
pop
jmp
das
je
fistps
jae
cmp
das
cmp
cmc
and
fwait
mov
push
test
lret
movsb
mov
in
sub
and
dec
rorl
enter
jns
xor
arpl
inc
sub
or
xor
addr16
pop
test
xor
adc
popl
sbb
lds
mov
mov
push
sub
mov
pop
push
xlat
jno
cld
fcompl
pop
dec
mov
mov
ljmp
iret
test
and
jb
aas
cmpsb
notl
and
xchg
lea
jo
shl
inc
mov
add
cld
adc
jnp
sbb
lods
sbb
lret
cmc
mov
bound
mov
dec
je
aam
mov
inc
shrb
dec
sub
inc
mov
das
pop
sub
ljmp
push
in
pop
pop
jns
sbb
lahf
shr
mov
xor
mov
fiaddl
jp
push
jmp
das
and
out
cltd
pop
ficompl
xor
rcll
cmp
enter
outsb
xor
jns
dec
push
hlt
add
adc
sbb
push
jmp
leave
dec
jg
cmp
inc
push
inc
pop
es
fiaddl
insb
xor
int3
sub
xlat
mov
and
clc
dec
push
cmp
add
dec
sub
sbb
push
notb
repz
ljmp
stos
lret
mov
out
add
sbb
xchg
xchg
popf
movsl
push
shr
and
or
repnz
call
faddp
lods
int3
mov
fimull
add
scas
into
cmp
cmovle
adc
add
fdivrl
and
push
cltd
adc
sbb
xor
mov
jne
push
aam
loop
arpl
cmp
push
and
xchg
jo
jmp
lock
mov
movsb
push
shll
ljmp
jg
inc
xchg
pop
mov
xor
nop
rclb
push
les
mov
popf
enter
pop
pop
in
adc
cwtl
inc
sbb
xor
mov
mov
push
rorl
out
adc
inc
arpl
loop
cmp
insb
mov
dec
test
popf
rcr
gs
out
leave
cmp
cmc
outsl
jb
inc
movsl
popa
jecxz
jbe
dec
adc
jg
mov
pop
pop
pop
sbb
jmp
fwait
and
fwait
aad
adc
pop
inc
ljmp
push
pusha
ljmp
cmpsl
jbe
pop
repz
dec
test
adc
repz
add
jmp
lock
lret
mov
jecxz
sub
jge
adc
fcoms
mov
insl
repnz
add
fstpl
lretw
mov
icebp
dec
fldenv
fiadds
adc
lret
std
pop
push
fistps
cmp
fdiv
xchg
movsb
cmp
fadd
jmp
data16
aam
test
add
popa
xor
addr16
mov
shll
aaa
popa
ret
cs
add
xchg
dec
fisubrs
mov
aad
inc
cmp
lcall
pop
sub
cmp
je
ficoms
adc
test
sub
lret
lret
pop
inc
insl
popa
mov
sahf
and
add
jo
aas
cmpsl
mov
adc
mov
inc
movsb
inc
mov
cmc
popa
insb
or
jno
repnz
adc
loope
push
push
push
sahf
pop
mov
dec
clc
xor
pop
out
sahf
mov
stos
andl
inc
dec
pop
jns
loop
dec
mov
insb
inc
push
or
adc
test
sbb
ret
aas
scas
adc
mov
or
in
fwait
xor
or
mov
push
jno
xchg
and
or
je
ficompl
cmp
add
and
js
cmpsb
and
mov
roll
sbb
sub
icebp
ja
dec
js
movsb
xchg
pop
sub
jno
add
iret
fsubrs
cmp
out
cld
mov
add
cmp
mov
pop
insl
les
add
cmp
add
mov
pop
cmp
pushf
pop
mov
and
addr16
aam
mov
loop
rcr
cs
fstpt
fwait
out
push
out
fisttpll
pop
imul
addr16
lds
mov
test
cmp
cmp
ja
add
xchg
mov
mov
js
out
imulb
aaa
jp
in
int3
mov
mov
cmp
out
je
loope
gs
test
loop
inc
jmp
jbe
shll
inc
cmp
lods
push
imul
stc
push
stc
js,pt
add
mov
pop
cmpb
fstl
mov
jae,pn
mov
cwtl
jg
lcall
jg
mov
mov
mov
inc
push
enter
pop
pop
sbb
mov
cltd
iret
insl
mov
test
rcrb
fcomp
pop
out
cmpsb
push
fdivp
fnstsw
mov
mov
in
cmp
imul
jmp
hlt
dec
and
lock
dec
cmpsl
sbb
imul
mov
cmp
mov
sbbb
inc
aaa
xchg
xor
xchg
stc
loop
stos
scas
gs
mov
les
mov
or
xchg
fadds
mov
mov
popa
xchg
jno
push
enter
lods
pop
cmpb
outsl
sub
idiv
xor
movsb
pop
and
push
aad
scas
pop
xchg
out
test
stos
das
movntps
iret
sbb
cld
lret
xchg
xor
je
aaa
sbb
outsb
les
push
or
out
and
inc
sbb
inc
addl
aad
cmp
adc
jnp
imull
pop
cmp
xchg
stos
adc
call
sub
fwait
add
in
shll
pop
ret
sbb
sbbl
xchg
imul
xchg
leave
push
or
repnz
or
sub
mov
clc
jbe
xlat
pusha
cltd
popa
xchg
push
or
jmp
daa
inc
push
cmc
faddp
adc
mov
sbb
shrb
and
lret
jle
aas
outsl
in
daa
mov
push
lods
inc
loope
enter
mov
cmp
sahf
cwtl
aaa
int3
pop
negb
push
fldenv
fidivl
inc
imul
adc
mov
pop
test
push
imull
mov
mov
testb
in
fcoml
aam
sub
bound
add
mov
jmp
fwait
push
sub
lods
imul
inc
mov
insb
sbbl
scas
sbb
dec
mov
ljmp
mov
imul
or
out
mov
fisttps
cmp
and
cmp
or
and
in
es
push
mov
adc
aam
push
jbe
in
out
les
subl
cmp
mulb
mov
orb
lgs
mov
test
jmp
mov
inc
push
loopne
push
lods
shl
jbe
adc
mov
ja
mov
pop
jecxz
enter
sbb
xchg
pop
xlat
fnstcw
out
int3
mov
add
adc
inc
fisubl
cmpsl
lock
sub
mov
pop
jecxz
popf
dec
lret
shl
and
mov
test
stc
inc
dec
and
cwtl
mov
test
jp
pop
sub
nop
test
xlat
and
int
mov
cmp
push
mov
negl
lds
jno
pushf
aaa
adc
movsl
mov
data16
adc
loop
push
jp
ret
sbb
mov
leave
nop
inc
xor
xor
inc
call
test
lahf
std
add
data16
sbb
cmp
adc
test
jecxz
mov
mov
je
inc
pop
cmpsb
fiadds
in
aam
pop
inc
cmc
testl
jl
xchg
outsb
sbb
aaa
data16
jmp
stc
ss
gs
push
xor
xchg
jno
insl
cmpsb
inc
nop
push
hlt
bound
dec
or
cltd
xchg
arpl
and
sbb
adc
mov
pusha
jbe
gs
int
out
insl
cmp
jg
divl
pushf
pop
ds
adc
rcrb
cmp
push
mov
adc
aam
xchg
mov
roll
jg
dec
mov
rcl
push
lock
cmp
push
ds
push
pop
std
jns
push
sub
fadds
mov
add
insb
cmc
js
fnstcw
jno
push
test
sbb
mov
mov
out
leave
fidivl
das
lret
out
sahf
mov
movsl
jp
sub
fisubl
fnstsw
xchg
dec
xor
sbb
push
sbb
lds
push
loope
and
popf
add
mov
ds
or
xchg
fildl
pop
sub
repnz
or
and
xorl
test
dec
ss
js
push
mov
sahf
imul
data16
ret
inc
cs
test
inc
mov
inc
xchg
pop
divl
fwait
rcrl
out
stc
or
jno
das
jge
shll
pop
testl
leave
pop
aaa
mov
lds
mov
out
dec
cld
js
cltd
xchg
dec
popf
inc
xchg
popf
dec
lock
xchg
cmpsl
dec
cli
push
and
stc
sarb
mov
nop
xchg
xchg
repnz
mov
in
rcl
and
popf
add
adc
adc
mov
test
and
popa
in
aaa
jne
int
outsb
ret
xchg
or
add
pop
sub
dec
std
pop
xchg
bound
or
pop
stc
nop
ud0
push
or
inc
mov
negb
jp
fidivrs
inc
inc
test
leave
lds
mov
cmp
dec
push
bound
in
cmp
scas
lds
outsl
clc
out
mov
mov
inc
cmp
xlat
mov
and
fadds
jno
ret
jb
mov
adc
je
pop
mov
pop
cmpsl
mov
jae
mov
sub
mov
in
cmp
enter
inc
pop
ss
sbb
into
jl
roll
rclb
mov
subb
aaa
outsl
mov
jg
cmp
bound
leave
frstor
or
push
popa
adc
sbb
mov
sti
fisttpll
push
inc
repnz
jg
sub
mov
arpl
jge
out
scas
clc
sbb
push
sbb
jl
insb
shl
dec
dec
adc
fsubs
fiadds
fcomps
add
sub
inc
fst
jae
push
push
cmp
pop
inc
xor
outsb
or
push
in
push
scas
ds
lcall
stos
jo
dec
outsb
adc
mov
into
cmp
sub
or
fwait
sahf
and
aad
pop
cmp
or
pop
cltd
xchg
aad
cli
ljmp
xor
pushf
jmp
js
jmp
adc
and
mov
cmc
mov
in
mov
imul
and
mov
sbb
int3
out
sub
mov
dec
xchg
ja
or
repnz
xchg
inc
and
cs
aad
mov
fisubrs
mov
and
or
sub
pushl
dec
xchg
into
adc
mov
push
nop
ret
or
leave
jecxz
cmp
aad
inc
in
lds
adc
das
and
scas
dec
and
call
mov
xchg
and
stc
xchg
into
mov
pop
xchg
push
pusha
sub
dec
push
mov
scas
cmc
jno
dec
mov
xchg
test
test
jae
mov
mov
scas
dec
cmpsl
sbbl
sub
aam
sub
je
jecxz
data16
pop
add
jne
fidivrs
lds
cmpsl
cmp
mov
int
mov
push
dec
xchg
imul
mov
mov
pop
mov
xor
cmp
xchg
sar
adc
lds
sarl
mov
mov
stos
mov
lret
adc
push
mov
xor
sbbl
pop
adc
ffreep
mov
mov
fdivrp
aam
sub
stc
mov
les
inc
hlt
mov
pusha
jp
cli
data16
xor
cmp
mov
repz
hlt
push
daa
dec
stos
sbb
sub
dec
push
sbb
les
pop
mov
andl
dec
int3
xchg
loop
in
sbb
mov
pop
in
lods
add
orl
inc
in
sub
jnp
jmp
push
inc
or
pop
sbb
xor
push
mov
decb
jecxz
sub
and
mov
mov
pop
mov
jbe
xor
jnp
loopne
fucomp
addr16
inc
add
cmpsl
or
inc
movsb
jno
outsl
mov
imul
fildl
xchg
cmp
or
pop
add
jl
jp
pop
fcomps
out
test
out
pop
or
cmpb
lahf
lcall
pop
xor
push
outsb
fcmovnb
loopne
xchg
sbb
inc
scas
test
xchg
gs
fsincos
dec
les
flds
push
dec
jbe
jp
add
fimuls
adcb
addb
shr
xor
xor
xchg
sbb
scas
lods
aaa
cmp
ror
fbstp
lea
js
xor
mov
cmpsb
or
int3
jne,pn
lock
nop
pop
imulb
mov
sub
ret
jg
in
mov
xor
scas
pop
jnp
mov
shrb
adc
frstor
in
shl
xorl
lea
int
ss
adc
out
dec
sbb
dec
mov
jp
jmp
mov
popf
mov
jb
enter
xor
inc
dec
shll
movsb
cmp
add
pusha
into
loop
rolb
pushf
push
adc
lea
in
or
clc
movsl
xor
xor
mov
fs
mov
push
sbb
sub
hlt
lods
dec
lock
xchg
inc
inc
sti
push
sti
icebp
inc
push
sar
inc
test
mov
negb
mov
lret
adc
mov
icebp
ja
js
xchg
xlat
mov
add
pop
je
rorl
rclb
jbe
add
lods
pop
add
leave
rcl
push
push
cmpsb
pop
jecxz
xorl
in
je
jo
lods
and
pop
dec
mov
pop
add
sub
jns
stos
mov
jnp
repnz
pop
cwtl
incl
push
xor
jnp
enter
cmc
scas
xor
and
dec
sbb
mov
push
push
movsb
dec
into
jns
lret
sub
dec
lret
loopne
add
fstpt
icebp
outsb
aam
loop
jp
imul
pop
ret
ret
repz
pop
jmp
lods
gs
lahf
lcall
jo
or
call
ds
mov
test
das
mov
inc
pop
pop
cmp
push
xor
xchg
xor
and
out
in
inc
loopne
mov
sub
lods
lret
xor
mov
fstpl
mov
lock
sbb
arpl
add
ss
xchg
mov
push
adc
sbb
xchg
rcl
mov
loopne
out
mov
dec
and
les
icebp
addl
sbb
pop
inc
gs
xchg
aaa
sbb
adc
iret
dec
insl
inc
mov
mov
int
ds
mov
mov
shll
and
mov
scas
adc
dec
test
popf
cwtl
lods
jae
lock
out
mov
adc
testl
scas
mov
pop
or
ja
push
or
or
and
fldcw
dec
not
fnsave
inc
cmpsb
adc
mov
js
insb
imull
mov
test
ds
or
dec
mov
xlat
sti
ds
ja
mov
push
mov
rorb
mov
cmp
cmp
imul
adc
jnp
inc
xor
js
popa
and
jmp
xchg
dec
ljmp
fstl
lds
clc
aas
dec
outsb
lock
imul
dec
mov
nop
jecxz
add
cmp
in
lret
cmp
fsubrl
fcomp
outsl
imul
mov
in
cli
sbb
sub
movsl
mulb
in
xor
xchg
iret
lret
sub
cmp
jp
push
push
or
movsl
pop
or
mov
jecxz
cmp
inc
pop
push
lret
cld
mov
cmp
jae
push
mov
xchg
lea
rcl
enter
inc
fcmovne
fucomp
mov
jno
mov
ret
or
mov
jae
insl
dec
orb
mov
test
push
jno
and
lcall
fstl
lock
mov
push
sub
loopne
lret
jb
sub
aad
lods
add
push
and
in
mov
cli
cmp
fldcw
jnp
sbb
pop
cltd
daa
pop
imulb
in
dec
rcll
mov
xor
adc
lock
test
les
daa
inc
in
out
pop
fisttps
push
divb
test
and
mov
repz
xor
popf
out
pop
dec
aam
cld
sti
dec
pop
cmpsl
test
mov
sbbl
and
push
xchg
xlat
in
mov
xchg
mov
mov
loope
test
sub
cwtl
stc
push
das
rcll
cld
add
fnsave
push
cmp
jl
inc
sbb
mov
adc
mov
inc
cli
arpl
push
sub
add
stos
std
inc
scas
cld
icebp
jo
adc
adc
cmpsb
and
ds
jge
outsb
or
movsb
leave
sbb
and
pusha
hlt
xor
hlt
sbb
push
ret
ret
dec
xor
jl
jl
stc
push
push
sub
fisttpll
push
mov
mov
lcall
mov
rcl
negl
sub
flds
jne
dec
test
test
movl
gs
je
jnp
fldt
sbb
jmp
pop
xor
test
xchg
pop
sbb
sarl
std
in
cmp
xchg
adc
mov
idivb
and
adcl
ljmp
and
loope
ficoml
or
fmull
push
clc
adc
mov
inc
pop
and
pop
pop
and
pop
sub
test
stc
stc
std
faddl
sbb
xor
lods
ja
sbb
mov
inc
negb
jmp
cmpsb
iret
mov
jge
dec
loop
in
lcall
fwait
stc
cltd
in
add
repnz
out
sbb
pop
push
xchg
or
push
stos
test
jg
jg
fisubl
sar
leave
xchg
jle
mov
ds
or
sub
lea
and
mov
movsb
xchg
cmp
loope
jnp
data16
jge
in
int3
lock
pop
add
and
mov
adc
nop
fiadds
mov
mov
es
rorb
pop
or
inc
dec
jge
in
jmp
xor
mov
sub
fimull
and
in
dec
bound
icebp
jge
jl
cltd
pop
fnsave
mov
jno
int3
add
outsl
sbb
pop
fidivs
cmp
and
add
es
cmp
fcomps
inc
sbb
jb
stc
sbbl
jge
inc
hlt
mov
add
sti
movsl
cltd
adc
rcl
mov
push
jns
movsb
in
xchg
pop
add
lret
push
shrl
lret
dec
dec
fsubs
scas
xchg
adc
stos
in
and
dec
cmp
std
cli
arpl
sbb
adc
inc
pop
fstp
or
insb
or
orb
ds
cli
lret
or
mov
adc
shlb
or
mov
inc
or
push
and
insb
mov
jp
jge
fdivrl
fistl
mov
test
loopne
sahf
js
adc
ret
adc
mov
inc
stos
cmp
mov
lock
inc
adc
out
push
inc
scas
mov
or
xor
push
ds
out
cwtl
sbb
idivb
pusha
mov
int3
daa
rcl
fidivrl
push
pop
mov
cmp
pop
outsl
in
and
jnp
das
add
pop
fisttpl
cmp
mov
or
mov
xchg
imul
push
mov
or
test
lock
lods
dec
or
les
aas
scas
pop
cmp
rcr
aas
ficompl
pop
fdivs
xor
xchg
mov
sub
nop
cmp
sbb
mov
stos
ficompl
mov
mov
xor
push
jo
subb
jne
mov
jo
es
test
stos
fwait
ja
mov
subb
mov
clc
xor
push
xor
cwtl
repz
sbb
sbb
mov
lds
je
cmp
push
cmp
adc
push
mov
xchg
inc
gs
loopne
cmp
jmp
stos
js
enter
xorl
mov
jae
cltd
dec
ds
sbbb
sub
pextrw
inc
jb
fadd
cmp
test
cmp
aaa
lret
int
or
mov
push
sarl
testb
loop
jo
sub
rol
adc
pusha
xor
out
cs
les
shll
inc
test
mov
push
add
repz
jne
mov
lds
in
pop
mov
cmp
lahf
push
hlt
xor
mov
jge
lahf
in
bnd
and
pop
popf
pusha
add
mov
jle
xchg
mov
sub
xor
jg
pushf
pop
or
pop
lock
xchg
sti
jg
nop
movsb
mov
xchg
xchg
push
jecxz
pop
xor
add
or
add
add
rorl
inc
rcll
cwtl
add
jo
lds
les
cmpsl
test
mov
fsubs
pop
ja
fisttps
js
cmp
jge
jmp
fdivl
iret
loope
jae
stc
lds
mov
je
adc
jnp
ja,pn
imul
cmp
daa
mov
es
enter
iret
dec
cltd
mov
sub
js
shll
cld
outsl
ret
sub
leave
stc
adc
adc
mov
les
xchg
sahf
insb
ljmp
roll
mov
xor
in
loop
push
cmpsb
jl
rorb
jo
dec
cmp
stos
mov
mov
mov
mov
sbb
inc
xor
push
xor
outsb
mov
addr16
xchg
leave
or
sbb
clc
cmp
cs
in
mov
fiadds
push
xchg
sbb
sar
shrb
insl
sub
pop
inc
or
flds
mov
ss
pop
ds
mov
mov
enter
movhps
shr
mov
push
lret
push
push
jmp
jecxz
repz
add
pop
mov
std
mov
fs
dec
pop
and
in
pop
or
push
sub
mov
mov
cmp
mov
shll
mov
add
mov
repnz
cmp
add
push
dec
ljmp
mul
sbb
rol
sbb
fists
hlt
add
xlat
leave
cmp
daa
pop
cwtl
push
mov
js
ret
mov
mov
cmp
push
cltd
int3
aaa
lcall
bound
in
dec
popf
xchg
outsl
popl
test
jl
stos
sbb
xchg
cmp
cs
outsb
stc
jnp
or
push
shrb
xchg
ljmp
shlb
fstpl
arpl
sub
pusha
insl
aam
dec
lret
cs
mov
push
mov
or
shl
cld
push
inc
pop
test
pop
cltd
rorl
cmp
xchg
sub
rcr
test
jle
leave
sub
mov
cmp
cmpsl
push
push
lds
lods
je
cmp
rcl
mov
jbe
bound
push
push
add
sbbb
mov
sub
sbb
push
jl
add
aas
sbb
jae
mov
sub
dec
ficoml
adc
mov
xchg
das
mov
fsubs
pop
out
sahf
and
push
leave
mov
xchg
loopne
cmp
aas
inc
test
das
mov
seto
arpl
in
push
add
cmp
in
iret
xlat
cs
stc
in
mov
movb
mov
dec
add
lea
mov
cmc
mov
lret
cmp
mov
sbbl
fs
js
fstl
jecxz
js
outsb
pop
fcmovnb
inc
gs
lret
pop
mov
lods
adc
cli
add
addl
xchg
pop
or
dec
bound
add
push
in
cmpsl
int
jne
movsb
loop
or
jg
test
mov
sbb
fstps
adc
push
mov
push
mov
fwait
pop
scas
fsts
jb
outsb
cld
stos
roll
dec
push
jae
andb
outsb
mul
or
aas
int
ds
iret
inc
repz
pop
pop
mov
or
and
sbb
mov
aas
sub
out
push
std
sub
call
xorl
es
sub
addr16
mov
stos
movsb
fsubl
push
lret
fcmovnu
mov
add
xchg
or
add
or
dec
mov
fsts
pop
push
jg
ret
ja
cmp
xchg
out
cs
or
stc
call
push
ljmp
cmpsl
sbb
outsl
mov
dec
sbb
add
xlat
inc
mulb
lret
ret
jnp
in
shrb
test
mov
cltd
out
call
scas
enter
dec
addr16
scas
fcmovnbe
hlt
jns
dec
add
sub
insl
scas
mov
sub
iret
sub
and
out
aaa
es
sub
aad
cmp
imul
rcr
test
call
pop
lods
movsl
orb
enter
jecxz
and
ficompl
mov
jge
adc
sub
addb
push
mov
xor
lods
les
dec
jb
insb
andl
jns
dec
inc
insl
pop
xor
cmp
add
mov
jb
in
xor
mov
cli
jle
and
or
lds
dec
sbb
inc
js
dec
sub
adc
lock
repnz
mov
ds
lahf
inc
mov
pop
xchg
mov
stos
insb
inc
icebp
push
jp
inc
insb
xlat
popa
dec
movsl
movsl
fistpl
mov
dec
ret
mov
leave
push
push
sbb
pop
pop
jb
cmpl
add
adc
or
adc
shrl
cmp
pushf
push
cmc
dec
xlat
das
and
das
adc
cltd
dec
push
test
pop
int3
sub
dec
inc
add
mov
cwtl
decb
gs
divl
jg
mov
push
daa
iret
push
or
lea
push
sbbl
dec
popa
and
dec
push
and
add
push
fcomp
ja
sbb
repz
daa
call
jl
or
in
cmp
push
cli
and
in
dec
or
xchg
shr
xchg
clc
cpuid
push
shrl
xlat
scas
fisubrs
out
push
lret
mov
and
cmpsb
cltd
outsb
and
push
jmp
push
pop
std
pop
add
mov
rorb
mov
jge
test
sub
jb
jnp
push
aam
insb
sbbb
inc
mov
dec
cltd
push
je
jg
add
xchg
mov
mov
mov
dec
out
push
xlat
lret
loope
pop
leave
add
xchg
pop
stos
xchg
aas
icebp
or
outsl
mov
sti
hlt
fucomi
jmp
pop
jnp
out
fistps
xorl
addl
dec
std
andl
cmp
sub
arpl
inc
jecxz
repnz
addl
cmp
mov
xchg
test
popf
fistl
ret
gs
cmp
clc
pusha
arpl
mov
jmp
movsl
ds
inc
cmp
test
xchg
xchg
ds
ljmp
mov
jno
adcl
xchg
es
int3
scas
rclb
mov
sub
fwait
push
sub
jl
arpl
icebp
or
or
movsb
fcomip
movsl
das
xlat
pop
mov
lods
aam
or
mov
and
nop
fistl
bound
sarl
subl
lret
in
add
xchg
test
fnsave
xchg
popa
stos
in
int3
cmp
je
out
add
dec
jl
xchg
nop
sbb
mov
jne
cli
in
mov
cmpsb
stc
pop
pusha
mov
xchg
loope
andl
in
mov
daa
sbb
push
test
sbb
push
aam
or
push
fidivl
mov
pop
add
inc
xor
xor
in
add
pop
dec
cmp
jns
inc
dec
and
lret
dec
icebp
sahf
rolb
dec
push
add
lods
pop
lret
mov
jbe
aad
mov
sub
mov
and
jae
add
jb
fdiv
cmp
and
popf
rorb
rcrl
push
push
push
out
lds
sub
ret
stos
sbb
pop
add
sbb
pop
mov
mov
xor
test
mov
adc
aam
xor
popa
push
mov
and
lods
test
stos
xchg
dec
inc
sbbb
stos
sbb
or
lea
pop
push
icebp
mov
leave
cmp
dec
in
in
test
mov
dec
ret
xchg
adc
loope
mov
mov
mov
adc
add
imul
fs
inc
lret
inc
test
ss
outsl
mov
jg
push
sub
mov
imul
stos
out
pop
out
cwtl
mov
dec
hlt
pop
push
pop
into
dec
and
int
cmpsb
mov
pop
sub
mov
daa
xor
lcall
dec
out
loop
inc
gs
adc
and
inc
mov
div
adc
xor
inc
sub
in
sub
jne
or
fsubrl
push
jecxz
aaa
ret
stc
popf
jno
repz
cmp
jmp
sub
push
fidivrs
sub
fxtract
inc
pop
dec
cld
negb
cmp
mov
dec
push
test
out
fadds
inc
lret
mov
mov
repnz
or
push
inc
bound
xor
stos
mov
stc
jmp
popl
push
rol
dec
out
and
xchg
adc
enter
shrl
pop
mov
and
rorb
gs
adc
xchg
inc
sbb
sti
js
hlt
dec
jae
pop
ljmp
jne
fcomps
sahf
add
jmp
std
dec
test
test
adc
sti
adcb
and
mov
cmp
stos
es
xor
mov
das
or
sbb
das
test
pop
sub
in
insb
and
xchg
dec
negb
lock
xlat
or
cmp
and
push
fs
int3
loopne
sbb
xchg
push
push
and
dec
jbe
mov
xchg
mov
cwtl
test
mov
xchg
inc
out
xchg
stos
sbb
cmp
std
sbb
jne
jmp
stos
cmp
and
test
mov
inc
push
sti
mull
iret
xlat
ss
imul
cltd
push
mov
fcoml
test
dec
dec
sub
loop
stc
fisubrl
xchg
daa
repz
dec
les
or
lret
imul
jo
adcl
sub
rorl
bound
pop
scas
popa
inc
xlat
sbb
lcall
jge
and
icebp
push
test
cmp
sbb
sahf
xchg
loop
cmp
dec
jecxz
xchg
rclb
dec
cwtl
cmp
lret
jnp
rcl
pushf
negb
shll
dec
xchg
mov
sub
movsb
xchg
push
sbb
or
ret
inc
popa
fwait
add
dec
adc
pop
lahf
in
arpl
out
push
adc
adc
mov
cmpsb
popa
xor
dec
sub
and
dec
dec
and
xlat
dec
jae
mov
sarl
mov
pop
movsl
jl
insb
sub
movsb
xchg
or
sub
stos
rcl
das
add
in
cmpsl
xchg
push
fs
movsl
cmpsb
aam
lea
lcall
mov
hlt
add
xchg
daa
fiaddl
dec
dec
mov
fwait
adc
add
cmpsl
int3
and
pop
addr16
and
dec
fwait
sbb
xchg
inc
adc
out
push
pop
scas
mov
or
shll
lds
bound
loop
push
pusha
orl
adc
and
insl
or
add
sub
and
lcall
les
sub
scas
out
mov
sub
scas
roll
out
xor
and
in
jge
pop
jp
fisubrl
repnz
lock
push
ss
insb
xlat
mov
lcall
hlt
lret
roll
mov
mov
xor
mov
push
and
repnz
xchg
xchg
ret
cmpsb
mov
test
es
mov
jns
push
rcl
xchg
push
and
dec
and
test
pminub
mov
mov
dec
sub
xor
push
ja
cwtl
stos
jle
jbe
cmp
cmpl
dec
insb
mov
loop
in
sahf
in
sti
icebp
or
mov
jge
dec
fwait
push
icebp
int
movsb
jge
xchg
sub
jbe
pop
jg
jp
dec
sub
jmp
mov
sbb
sbbb
add
xchg
je
xor
pop
imul
adc
cmpsb
cltd
jbe
test
gs
cmp
or
sar
cld
jmp
mov
int
xorb
ss
push
js
mov
icebp
mov
test
shl
mov
pop
enter
adc
lods
mov
outsl
daa
push
shll
xor
test
push
lods
jae
push
fistpl
cwtl
jmp
xchg
lret
les
or
movsb
outsb
jge
adc
imul
mov
enter
bound
daa
sarb
jge
mov
cmpsl
mov
addl
xchg
cmp
sub
out
pop
js
push
lock
test
std
jbe
cmp
jmp
mov
es
dec
sti
inc
xor
push
sahf
lea
aam
test
inc
dec
out
xor
adc
add
test
sub
dec
sbb
sahf
jo
enter
or
inc
jg
mov
test
xchg
aaa
mov
xor
or
mov
notb
scas
inc
cmp
pop
ret
sbb
fidivl
lock
or
sbb
lds
inc
cmp
sbb
push
sbb
into
in
and
sbb
scas
stos
jge
mov
outsl
cld
nop
mov
lcall
xor
jo
test
mov
cmp
lcall
popw
in
insl
add
adc
aas
sbb
sub
sarl
fisubl
popa
ja
cmc
out
das
jp
sti
sbb
jg
in
movsl
mul
out
xchg
mov
cmpsb
mov
xor
sub
lret
jb
test
stos
outsl
int3
movsl
pushf
sti
popa
push
js
push
mulb
push
jb
lods
add
sahf
cmp
dec
and
cmc
and
pop
int3
fsubrs
popa
mov
shll
repz
into
mov
add
sub
push
and
push
cmpsb
push
or
sub
adc
jbe
xchg
push
into
jmp
test
sub
jp
jbe
into
jmp
sbb
inc
pop
mov
mov
fimull
lods
xchg
xchg
dec
cltd
cmp
xchg
outsb
mov
mov
mov
xchg
xchg
clc
cmp
fsts
aas
shll
push
pop
sub
ljmp
mov
js
shl
dec
mov
sub
push
mov
outsl
add
xor
repnz
sbb
jl
roll
push
call
xor
iret
pop
mov
jg
dec
push
lock
data16
inc
cmpsb
out
adc
in
xlat
arpl
and
xchg
mov
cmpsl
push
cmpsb
jnp
dec
jbe
push
xor
fs
aam
shl
in
xchg
inc
pop
dec
mov
inc
sbb
loopne
pushl
mov
dec
test
pop
test
mov
ljmp
jb
and
inc
loope
int3
stc
adc
loopne
dec
xlat
xchg
je
pop
sbb
in
cmp
stos
es
jnp
jno
adc
rcrb
mov
outsb
rorl
mov
lds
pop
adc
xchg
add
rcrl
or
sbb
sub
addr16
loop
lret
shlb
dec
mov
push
xor
mov
mov
rolb
sbb
sub
cld
jmp
lret
sub
leave
das
dec
outsb
mov
xor
cmp
mov
ds
lods
jl
or
popa
cwtl
in
test
push
aad
arpl
repz
xor
push
dec
mov
push
sub
mov
shrl
jnp
lret
and
jbe
add
in
fimuls
dec
bound
stc
mov
push
mov
clc
mov
jbe
inc
pop
por
mov
mov
push
fists
cmp
mov
add
sahf
cmp
test
cmpsl
nop
pusha
mov
dec
adc
mov
add
ret
sbb
loope
sbb
and
mov
into
clc
push
mov
testb
push
cmc
pop
cltd
xchg
add
movsb
inc
and
fs
inc
fildll
fbld
lock
and
mov
cld
cltd
mov
out
aam
cmovl
ljmp
aam
ror
faddl
push
mov
cmp
xchg
mov
test
sub
mov
push
ret
sbb
lods
jno
sbb
xchg
loope
mov
pusha
lret
push
pushf
cmp
nop
int
mov
push
outsb
or
ljmp
shrb
sbb
inc
arpl
imul
sub
cmpsl
xchg
mov
fisubrl
jg
xchg
sarb
fstl
inc
xchg
fisubrl
push
loopne
jmp
jns
jns
sbb
push
or
add
test
shlb
scas
mov
jne
mov
cmpsl
inc
or
xchg
arpl
pusha
pop
loope
xchg
sub
or
in
mov
call
nop
jecxz
sub
cmp
sub
out
and
rolb
and
mov
inc
aaa
ja
jnp
ss
sbb
jl
sbb
shrl
xchg
sub
or
jle
sbb
dec
movsl
xor
jnp
les
xrelease
push
adc
cli
icebp
push
push
xchg
cmp
addr16
pop
mov
int
popf
xor
int
outsb
push
insb
and
dec
xchg
add
cmp
scas
mov
icebp
dec
mov
xchg
mov
stos
lock
adc
cmp
pop
and
mov
ds
lea
sbb
adc
cmpsb
sti
loop
pop
adc
sub
into
les
add
mov
mov
out
outsb
nop
cli
leave
jae
sarl
in
push
add
add
pop
add
push
call
adc
jmp
ret
mov
or
add
into
imul
xchg
xchg
in
or
sub
iret
inc
push
or
inc
cmp
rcl
jo
dec
push
cwtl
jg
mov
adc
jne
ljmp
fwait
adc
sbb
xor
cmp
and
in
push
mov
out
xlat
movsl
jmp
cwtl
jnp
jmp
xlat
lret
and
or
jb
addr16
outsb
push
in
int
lcall
scas
pop
xlat
xchg
out
adc
xchg
outsl
roll
mov
mov
pop
ljmp
sbb
cwtl
into
add
pop
adc
pop
fs
scas
iret
rcll
adc
jb
cs
cmp
xor
loopne
mov
fimull
lret
sub
in
cld
lds
inc
jno
push
fstps
mov
push
push
xorl
adc
sti
xor
dec
sub
iret
in
or
xchg
add
fidivs
xchg
pusha
and
stc
add
aaa
rcrl
add
outsl
into
loop
pop
mov
sahf
out
pop
scas
popf
ret
cmp
call
fstpt
mov
mov
jg
cld
inc
dec
mov
std
push
pmaxsw
sarl
inc
stos
cmp
adc
sbb
inc
shrb
xchg
dec
jne
push
pop
icebp
xor
insl
out
cs
and
out
mov
push
movsb
scas
stos
add
sbb
push
xacquire
mov
xor
testl
test
xchg
or
jl
or
mov
shrl
jp
sbb
sub
sub
testl
decb
jnp
les
mov
das
sbb
pop
sahf
shll
xchg
rdtsc
mov
xor
mov
pop
enter
rol
lea
mov
loopne
jge
xorl
sbb
jnp
mov
fdiv
jnp
sub
cmp
mov
xor
pop
push
aam
mov
not
pop
add
ficoml
loopne
xlat
jbe
adc
pop
out
fistps
loopne
ret
xchg
mov
push
ss
xor
jge
pop
in
cmp
jne
add
sbb
movsl
xor
sub
in
pop
cmp
mov
sub
jne
scas
dec
add
jge
sbb
inc
cmpsl
es
dec
add
push
add
mov
es
or
ljmp
je
daa
push
add
clc
std
sub
cltd
mov
jmp
mov
hlt
lret
dec
pop
mov
dec
outsb
sahf
jno
jmp
cmp
stc
enter
mov
adc
popf
mov
or
xor
sti
dec
dec
adcb
js
call
or
mov
or
gs
or
call
dec
fs
out
sbb
mov
pop
mov
sti
subl
mov
mov
sahf
lahf
cmpsl
daa
cmpsl
andb
mov
popa
push
int3
sub
fidivrl
loopne
push
cli
xchg
test
xchg
add
in
push
xchg
arpl
stc
push
pop
push
push
dec
sub
mov
pop
in
sbb
push
imul
sbb
xor
xchg
lds
adcb
mov
out
subb
mov
int3
lock
lds
pop
mov
aaa
out
repnz
int3
in
cmp
int3
mov
jo
push
mov
fwait
inc
in
test
test
stos
les
xor
xchg
icebp
adc
adc
in
adc
or
pusha
cmpsl
xchg
sbb
cltd
ret
mov
mov
gs
sub
dec
push
shll
fdivp
mov
ss
test
sbb
adcb
mov
pushf
pop
dec
pusha
cs
pop
rolb
cltd
gs
mov
cmp
cwtl
lahf
mov
rcll
scas
daa
addl
sbb
in
push
cmp
dec
push
clc
lock
in
and
adc
cwtl
and
shrb
pop
stos
inc
jmp
cmpsl
or
xchg
aaa
add
loope
mov
in
mov
jle
jle
scas
std
xor
and
leave
xor
hlt
dec
pop
imul
mov
test
call
cmp
mov
mov
imulb
test
sbb
ja
add
xchg
pop
sub
sbb
sbb
dec
mov
or
jmp
testl
iret
sbb
mov
dec
fs
std
mov
mov
loopne
pop
aad
sbb
aam
stos
adc
fstpt
mov
jmp
mov
push
mov
xchg
mov
imul
stos
and
xor
pushf
clc
mov
hlt
fdivrp
and
jae
dec
aam
ret
or
cli
mov
push
aam
idivl
fmull
popf
xchg
in
mov
pop
jno
push
jne
inc
pop
ja
std
inc
and
into
and
jle
jo
pop
xchg
mov
inc
pop
mov
nop
jb
or
inc
fisubrl
std
inc
mov
xchg
fisttpl
mov
dec
cmp
cmp
sub
iret
sarl
pop
dec
pop
iret
mov
ret
out
mov
js
mov
sbb
mov
movb
stos
and
or
and
test
lods
or
push
jnp
dec
jl
mov
insb
stc
mov
sub
cmp
mov
lret
imul
or
or
pop
outsl
movsl
cmp
mov
mov
dec
pushf
es
adc
hlt
sarb
pop
cltd
in
ret
ss
push
ret
lods
fcoms
ljmp
jl
jno
bound
sbb
xlat
push
mov
xlat
outsl
xchg
rolb
sbb
test
inc
out
ljmp
andl
jg
add
pop
and
subl
add
int3
outsb
ja
mov
add
adc
int
jb
lock
clc
shl
lea
or
and
lret
gs
imul
sub
or
loope
mov
lds
hlt
int3
sub
xlat
mov
in
cmpsl
int
and
jne
into
and
mov
cmovae
movsb
loopne
ja
sbb
push
rclb
mov
je
stos
pop
stos
jns
cmp
inc
xchg
in
into
dec
icebp
and
adcl
in
cmp
sbb
cmp
fsubl
lret
mov
adc
dec
jne
or
pushf
fildl
hlt
into
cltd
lcall
xor
mov
xchg
inc
xor
lock
inc
in
mov
jmp
popf
xlat
cmpsb
ds
cwtl
insl
aad
inc
mov
lcall
or
or
clc
mov
xchg
andl
sahf
cli
ss
negl
inc
mov
pop
jecxz
mov
jne
push
xlat
call
cmp
push
add
fs
xchg
inc
push
mov
cld
jl
xor
mov
and
dec
sbb
xchg
scas
mov
pop
rorb
pop
int3
push
push
imul
xor
sub
hlt
mov
inc
cmp
xchg
fwait
sbb
xor
mov
and
sbb
sarl
lds
mov
scas
daa
jnp
mov
movsb
sbb
cmp
push
push
js
or
aad
adc
or
mov
adc
mov
lods
lock
iret
call
xorb
add
jne
dec
test
mov
pop
dec
xchg
push
mov
push
dec
or
out
cmc
popf
loopne
mov
mov
loopne
orb
lahf
sub
rorb
or
lods
push
hlt
es
mov
and
fs
xchg
lret
ret
and
cmp
pop
in
sub
rcrl
aam
xor
fldt
icebp
shl
sub
push
cmp
xor
imul
and
sub
pop
mov
and
ss
pop
adc
out
lea
insb
ljmp
int
jle
int3
or
push
mov
fadds
pushf
sub
cmpsb
adc
or
add
jns
lea
inc
popa
movsl
out
movsb
enter
iret
jle
mov
test
jmp
leave
shl
fwait
imul
inc
repz
adc
mov
add
inc
mov
add
xchg
ret
aad
push
std
repnz
inc
fnstsw
bound
jnp
ja
je
push
adc
sti
fstps
xchg
cwtl
adc
jle
insb
data16
out
xchg
je
cmp
test
mov
inc
in
jns
enter
mov
adc
inc
mov
cmpsl
mov
pop
in
jnp
add
fcmovb
pop
fwait
pop
in
jle
or
fadd
jns
sub
fstpl
in
xor
sub
pop
mov
mov
out
cmpsb
cwtl
xor
pop
jns
icebp
mov
add
das
or
repnz
pop
and
mov
xor
shll
cmpl
xchg
pop
cmp
xchg
and
xor
xor
ret
push
adc
nop
dec
add
or
scas
je
movsb
hlt
pushf
mov
jae
add
jo
pop
push
test
push
adc
pop
xchg
outsb
lds
mov
aas
dec
mov
enter
and
push
cmp
roll
adc
fimuls
pop
je
popa
into
xor
or
inc
push
or
mov
fildll
inc
icebp
or
add
pop
fs
push
mov
xchg
or
mov
fmul
pop
in
add
popf
xchg
rcrl
mov
mov
imul
xchg
jle
cltd
jb
pop
and
lcall
add
inc
push
jmp
xchg
pop
scas
in
sub
ljmp
pop
or
jmp
negb
hlt
lahf
cltd
out
push
mov
lds
cmp
fidivl
mov
sar
shll
iret
fnstsw
jno
arpl
pop
mov
push
push
in
and
out
lcall
cs
sub
aad
sub
xchg
jecxz
outsb
test
sub
mov
and
lret
jbe
addb
imul
mov
add
fsubrs
xchg
xchg
or
ss
push
stos
scas
push
xor
inc
nop
pop
lret
loope
inc
jns
xor
fisttpl
push
lds
and
fpatan
pop
ret
aad
mov
xchg
fwait
inc
stos
jae
int
and
sub
dec
test
jbe
jno
jecxz
lret
and
les
jno
xor
stc
stos
fimuls
fucomip
cli
dec
mov
xor
mov
adc
adc
les
sbb
pop
aas
fs
jb
dec
cmpsb
or
ss
lret
je
push
clc
fists
lret
lods
push
cmp
mov
cmp
or
lret
sub
shlb
add
lahf
and
mov
insb
shll
pop
adc
mov
mov
fs
arpl
pusha
bound
mov
cmp
and
jb
lods
mov
adc
adc
mov
test
and
addl
pop
imul
aam
imul
sub
xor
mov
ja
pop
mov
cmpsl
sub
dec
ror
fwait
jl
movsl
cltd
loop
add
mov
adc
ja
mov
inc
and
mov
xchg
add
adc
icebp
sarl
or
or
js
mov
out
std
push
pop
mov
push
inc
push
push
mov
je
jl
xor
popf
ret
cmc
cli
mov
fdivp
or
xchg
or
fdivs
push
jns
mov
popa
jno
popf
xor
into
add
and
pushf
push
sarb
std
orb
xchg
push
cld
test
mov
sti
ror
add
inc
dec
cld
cs
in
test
jns
push
les
cmp
jge
push
mov
lea
push
lahf
sub
mov
jg
sti
mov
insb
imul
sub
addr16
xlat
or
inc
push
scas
pop
add
push
outsl
push
dec
mov
clc
mov
stc
sub
sbb
sub
les
loope
fstpt
ja
xchg
push
sarl
leave
lods
fbstp
lcall
xor
dec
sbb
xchg
test
xor
fstpt
mov
gs
test
cmp
jmp
rorb
xchg
lods
adc
ss
jg
mov
ffree
add
inc
into
dec
pop
cmp
imul
es
or
inc
adc
push
and
fisttpl
inc
add
or
mov
cmc
xor
pop
out
out
leave
dec
popa
pop
lret
xor
mov
addr16
inc
loopne
pop
das
test
iret
sbb
or
add
les
pop
push
ror
jl
enter
imul
pushf
lds
jno
arpl
mov
test
movsb
xchg
test
lods
push
and
mov
jne
xor
ja
mov
fsubrs
lret
xchg
add
addb
cmp
cltd
lock
jno
lods
mov
add
jns
dec
lea
pop
push
push
sub
cmp
jo
mull
pop
mov
adc
arpl
lcall
adc
sbb
xor
dec
inc
jbe
test
ds
test
cmp
push
mov
enter
adc
jo
jb
mov
push
xor
lcall
js
insl
sbb
lods
dec
sub
insb
xchg
add
add
cmp
fisttpl
inc
call
mov
pop
push
or
mov
push
mov
filds
and
lds
repnz
ja
mov
arpl
jns
insb
mov
mov
mov
sbb
cmp
test
cld
sub
mov
movsl
mov
aaa
repz
repz
adc
setbe
inc
push
fimuls
pop
pop
jl
push
dec
mov
dec
pop
push
call
inc
cmp
pusha
clc
loope
std
inc
sub
iret
dec
push
test
lret
lock
pusha
out
call
jbe
jp
pop
orb
outsb
insb
cwtd
jns
or
aad
shrl
pop
shl
xchg
mov
outsb
sub
fmuls
loope
cmp
test
xchg
out
negl
add
pop
aad
andl
inc
sbb
dec
cmp
bnd
shl
inc
lss
mov
push
xchg
inc
and
pop
pop
or
repz
cmpsb
sub
shrb
inc
or
and
mov
test
aam
sbb
insb
xchg
imul
js
movzbl
les
mov
fisttps
aam
add
aas
sbb
ret
or
mov
cmp
xor
push
xor
xor
xor
jecxz
sbb
xor
mov
dec
das
sbb
loop
enter
pushf
popa
aad
aas
push
xchg
mull
lret
test
fs
pop
aaa
xchg
jp
push
arpl
dec
outsl
add
cmp
out
bnd
mov
xor
or
sub
loope
sti
ss
ljmp
jae
mov
xchg
xchg
mov
mov
inc
push
das
jle
sbb
mov
sbb
adcb
lcall
lahf
aaa
jb
test
cwtl
jbe
push
jmp
jne
js
mov
jae
in
push
xlat
call
cmp
int3
jo
mov
xchg
jns
add
cmp
xchg
jmp
add
dec
inc
stos
ret
inc
dec
xchg
fcmovnu
xlat
out
stos
repz
mov
out
ret
cmp
mov
loopne
xchg
adc
je
pop
mov
mov
dec
aaa
scas
push
xor
jge
cmc
pop
adc
loope
aam
jns
popf
pop
shr
cmp
lret
rcll
mov
mov
movsb
add
or
outsl
shr
cmp
dec
add
fmull
loopne
pop
gs
outsl
aaa
cmp
mov
shlb
das
rcrl
lock
in
pusha
arpl
mov
xchg
pop
mov
icebp
sub
ret
std
movsb
xor
sub
rorb
pop
jp
mov
jne
in
cmc
fsubrl
sub
sub
je
xor
es
xor
test
mov
dec
and
repz
andb
xchg
jns
inc
add
or
inc
adc
scas
roll
std
cli
aaa
mov
inc
inc
stc
push
xor
jg
jl
sub
push
xor
hlt
into
out
inc
push
and
mov
sub
imul
insl
inc
mov
cmp
pop
or
add
lret
pop
mov
ja
and
int
pop
data16
and
mov
pop
jbe
push
cmovns
mov
adc
inc
xor
inc
mov
pop
mov
pop
aam
ja
jl
mov
in
enter
scas
mov
cmc
adc
pop
cmpsb
xlat
cltd
rcrl
dec
adc
sub
and
and
stos
int3
jmp
mov
int3
rorb
push
pushf
push
les
testb
loop
sub
inc
push
test
pop
cmpsl
call
mov
mov
les
scas
test
jae
and
dec
cmp
stos
push
push
shl
pop
bswap
gs
cmp
inc
or
popa
stos
or
ret
inc
and
in
sub
jne
add
push
xchg
jle
out
insb
dec
cmp
pop
bound
shrl
cwtl
mov
or
icebp
pop
nop
out
aam
sub
xor
jbe
sub
stc
jbe
stc
lods
adc
jle
adc
shrb
pop
and
jne
mov
adc
xchg
sub
adc
popa
xor
dec
add
icebp
mov
sub
push
call
xchg
pop
scas
icebp
push
jb
xchg
shll
sub
repz
mov
add
jno
mov
add
pop
lret
mov
ret
shrl
arpl
xor
stos
xchg
pop
aaa
insl
cs
fidivrl
popa
rcrl
dec
in
pop
dec
pop
add
mov
iret
mov
push
aad
ss
mov
rorl
cmpsb
xchg
lds
jmp
je
in
cmpsl
mov
inc
pop
imul
add
push
or
or
inc
xor
stc
or
mov
sbb
mov
mov
pop
icebp
push
shrb
aad
mov
iret
leave
xchg
cli
aam
push
jp
pop
mov
sbb
out
push
fisttpll
imul
add
xchg
xchg
movb
push
adc
test
popa
mov
dec
jne
mov
sahf
repnz
fwait
stc
adcb
and
and
dec
mov
pop
sbb
inc
inc
jmp
int
pusha
mov
mov
int3
add
push
mov
fsubl
xor
sub
sbb
inc
jae
pop
xchg
pusha
pop
sub
push
leave
push
jle
cmpsl
subl
xor
das
inc
adc
arpl
mov
push
sub
dec
cmc
push
xor
inc
inc
mov
cmp
stos
sbb
sub
clc
xchg
repnz
lahf
call
inc
es
xchg
movsl
jp
mov
xchg
lods
outsl
sti
jg
rol
mov
ds
jg
cmpsl
sti
pop
es
cmpsl
out
sub
mov
sub
mov
imul
pop
jge
fs
insl
sar
sbb
scas
add
test
pop
sub
xchg
stos
sub
mov
pop
push
jg
jb
test
xlat
inc
xlat
pop
and
pop
aad
bound
inc
sahf
ljmp
xchg
cmpsb
push
in
loope
test
jno
fisttpl
ss
inc
adc
push
rcl
sar
clc
jmp
fdivrl
aas
in
icebp
rcl
in
mov
adc
cmc
ja
ret
sub
scas
cmp
andb
out
push
xchg
scas
mov
lds
ss
scas
push
xor
rorb
mov
movb
out
jmp
test
int
inc
insl
jecxz
add
test
out
icebp
adcl
inc
sbb
test
mov
push
jo
popf
dec
jmp
mov
lods
int
int3
inc
jbe
bound
sbb
and
cmc
mov
adc
pop
call
negl
sub
xor
jae
popa
subb
in
push
aaa
loope
jo
cmp
cmpsl
fmull
ret
xchg
out
or
js
cwtl
mov
out
push
mov
outsl
jmp
xor
ja
dec
push
sbb
fcoms
cmp
push
sbb
jl
mov
xchg
mov
xor
inc
int3
icebp
xchg
test
nop
lret
hlt
xchg
lods
add
js
jne
clc
jp
aaa
cmpsl
mov
adc
jle
mov
sub
jge
jmp
out
shrb
in
pop
mov
jno
shlb
xchg
cmpsl
inc
pop
test
inc
mov
repz
and
into
daa
xchg
cwtl
divl
push
mov
movsl
jg
adc
adc
dec
daa
push
jbe
push
loope
adc
cmp
mov
repz
ss
jge
or
xchg
sub
int3
test
nop
and
cs
inc
mull
cld
test
dec
jb
test
sub
push
jno
hlt
cli
jg
scas
mov
outsb
test
cmpsb
mov
pop
sbb
hlt
or
push
adcb
fldl
call
inc
in
or
dec
mov
popf
mov
cmpl
scas
sbb
push
ja
jns
jo
mov
cli
add
dec
iret
js
dec
out
pop
dec
inc
pop
fwait
cmc
ljmp
rcrb
mov
cmp
notl
jmp
scas
mov
pop
bound
loopne
lods
test
icebp
cwtl
jbe
cwtl
mov
pop
cmp
sub
sub
adc
aam
pop
js
and
add
pusha
xchg
push
int3
mov
lods
subb
mov
daa
imul
dec
pop
add
mov
data16
shll
fldl
sub
int3
stos
cmp
push
lods
sbb
inc
out
xchg
aaa
mov
sub
sbb
lret
jg
jo
push
ficoml
mov
int
cmp
adc
bound
into
sub
fldenv
ljmp
popa
ret
jo
icebp
shll
retw
cmpsl
sub
pop
in
testl
pop
and
iret
fwait
loopw
mov
test
pop
adc
pushf
lods
xchg
enter
and
daa
sub
xor
cmp
ds
fwait
shll
push
xchg
or
lret
adc
imul
cmpsb
push
mov
stc
xchg
enter
psadbw
daa
and
es
icebp
cs
out
pop
adc
movsl
jb
cmp
sbb
je
jb
mov
or
out
leave
arpl
push
dec
addb
cmp
mov
jp
mov
aad
push
in
outsb
mov
test
push
jge
or
test
cmp
cmc
cmpl
mov
mov
aam
mov
fs
gs
xchg
xchg
jnp
xchg
out
jnp
dec
lea
out
mov
dec
outsb
mov
cmp
jno
xchg
ja
imul
mov
jne
mov
pop
test
aaa
xchg
outsl
xlat
sbb
push
daa
jg
push
pop
enter
negb
fsubs
shlb
pop
pop
popa
add
sbb
mov
nop
lret
xlat
arpl
push
inc
dec
in
enter
pop
dec
clc
inc
cwtl
movsb
pop
inc
pop
mov
neg
push
mov
push
addr16
push
add
cli
mov
cwtl
sbb
lret
xchg
xchg
popf
pop
add
gs
push
lods
fbstp
ret
cmp
push
xchg
add
xor
ja
jg
pop
pop
push
hlt
fsin
sub
mov
ja
push
push
add
mov
shlb
sar
loopne
loope
clc
cmpl
mov
push
jae
push
xchg
dec
jmp
pop
push
call
mov
mov
out
mov
or
idivl
bound
jmp
pop
jecxz
inc
add
sar
cmp
and
js
das
and
sub
stos
test
xchg
mov
adc
out
faddl
and
push
out
mov
xchg
mov
popf
in
mov
mov
xchg
xlat
imul
pop
adc
mov
test
pop
mov
jge
in
popf
jno
imul
test
or
cmp
shrb
outsl
or
xchg
xchg
imull
inc
xchg
sub
xchg
lea
cmp
jb
test
sbb
push
mov
sub
inc
stc
pop
outsl
call
mov
fsubrs
jns
nop
aad
mov
add
push
or
ljmp
and
cmp
xor
bound
sub
mov
xchg
repz
sbb
ret
jbe
mov
sarb
fsubrs
outsl
js
bound
xor
outsb
inc
dec
addr16
sbb
inc
lret
aas
stos
push
adc
cs
test
bound
dec
in
es
in
aam
mov
loope
ja
add
ret
or
testl
notl
add
popf
inc
adc
pop
push
dec
cmp
pop
sbb
pop
xchg
inc
push
out
push
or
lock
pop
mov
sbb
insb
sar
push
and
std
outsb
cmpsb
outsb
stos
jno
inc
es
out
insb
sti
pop
pop
movsb
push
or
or
sbb
mov
mov
clc
aas
mov
das
sbb
cs
xor
lret
mov
inc
rol
lret
xchg
popa
or
and
stos
ffree
aam
movsb
repz
nop
jo
sub
xlat
pop
xchg
ljmp
xchg
fcomps
xor
nop
lock
out
cwtl
add
cmovnp
sahf
leave
ds
cmp
mov
dec
rol
cmpl
pop
movsb
bound
pop
xchg
lods
pop
mov
out
mov
vmovq
and
pop
dec
dec
or
cltd
dec
lahf
push
notl
test
enter
pop
sar
mov
pop
jle
sbb
addr16
aas
or
xor
lcall
notl
dec
pop
push
and
loop
jnp
in
repz
mov
xchg
mov
loope
in
mov
and
lods
push
adc
push
lods
or
add
jmp
cmpsl
sbb
and
test
cmp
or
and
dec
jmp
sbb
popf
stos
jo
and
jmp
movsl
xchg
xchg
test
jnp
and
dec
insb
pop
dec
pop
jl
pusha
movsl
aad
scas
out
mov
mov
pop
mov
mull
sbb
fisttpll
test
dec
adcb
cmpsl
xor
mov
aad
popa
jge
in
cli
clc
outsb
or
push
out
push
sub
push
pop
scas
cld
mov
push
mov
movsl
in
add
add
push
or
cmp
out
add
cld
jecxz
push
fnstenv
lret
loope
shll
cmp
pop
pop
mov
mull
mov
and
jno
pop
int
sbbl
mov
xlat
sahf
mov
dec
pop
jbe
scas
sbbl
xor
ret
xchg
cwtl
xor
mov
xor
push
jb
icebp
lea
push
push
repnz
mov
sub
in
and
js
stc
jo
in
sysexit
and
adc
pop
dec
adc
jecxz
shlb
and
or
xlat
xor
jo
push
push
fcmovne
outsl
ret
flds
pop
add
lods
and
rclb
pop
mov
ret
jo
add
jnp
repz
add
inc
shrb
pop
inc
mov
push
mov
call
push
pop
mov
dec
sbb
lret
add
cmp
mov
in
push
sub
sbbl
jle
xchg
adc
aaa
call
mov
aas
push
mov
pop
jecxz
pop
imul
ss
dec
cli
nop
push
in
out
scas
mov
lods
sub
add
pop
sbb
testl
mov
idivl
scas
xchg
std
push
mov
loope
push
jo
dec
std
xchg
jmp
pop
sub
jp
lret
push
push
js
cmpsl
dec
call
inc
jb
xchg
jl
ljmp
fs
ret
fdivs
pop
popf
pushf
pop
out
add
addb
jg
loop
lods
insb
lcall
dec
and
iret
and
mov
ret
fcmovnbe
cmp
in
pop
fcom
pop
ljmp
out
jns
sub
xor
out
mov
test
pushf
faddl
cmc
dec
std
out
ja
fsubs
inc
jbe
ss
insb
push
mov
negl
mov
mov
sub
addl
jmp
stos
lds
out
pop
cmp
in
xchg
push
inc
mov
sbbb
pop
cmpsl
enter
dec
sub
imul
jbe
xor
mov
test
mov
aam
push
and
divb
dec
ret
ucomiss
mov
test
nop
mov
fisubrl
pop
dec
out
or
cmp
cmp
cmpsb
ficomps
nop
pusha
cs
repnz
push
xor
push
fnstenv
shl
add
xchg
repz
js
test
mov
dec
inc
clc
int
gs
lret
andl
cmpsl
in
and
sti
iret
fwait
cmc
cwtl
imul
jmp
pop
fdivrs
jge
mov
push
inc
in
lret
or
adc
mov
adc
pop
test
mov
ja
xchg
xorb
sub
fidivrl
push
js
mov
into
jge
xlat
jmp
les
mov
xor
xchg
sub
sahf
jb
cmpsb
lea
and
and
mov
leave
adc
sbb
dec
push
ljmp
movl
test
cltd
imul
fsubrs
shlb
jg
push
sub
pop
ja
repnz
fldl
shrb
jle
cmp
push
add
cmp
das
cli
sbb
xchg
lods
pop
push
nop
imul
icebp
xor
lds
dec
adc
mov
add
inc
repz
xor
imul
pop
pop
aas
pop
hlt
scas
mov
sub
jge
push
and
mov
into
jb
cmp
jnp
and
inc
add
sbb
pop
cld
sti
aad
lret
mov
shll
mov
xchg
xchg
frstor
in
sub
xor
mov
jns
push
fwait
adc
negl
icebp
dec
mov
and
jecxz
or
aad
sbb
pop
push
clc
and
push
inc
test
add
testl
jne
dec
out
and
and
repnz
loope
xchg
mov
bound
fiaddl
xchg
outsb
xor
andl
loop
xchg
jns
mov
xchg
test
sarl
sub
sub
sbb
or
push
sti
sbb
lods
sbb
mov
addr16
and
jo
sbb
pop
mov
inc
xchg
add
pop
xlat
mov
mov
in
jle
loope
popw
in
fistl
adc
add
jnp
xchg
cmp
xchg
inc
ss
adc
lcall
inc
sub
inc
and
repnz
sti
daa
loope
mov
dec
add
movsl
insb
cmp
adc
mov
in
test
fisubrl
and
clc
sbb
arpl
mov
add
jmp
jl
push
lahf
add
lcall
mov
addb
pushf
adc
aaa
mov
mov
lret
in
lahf
mov
dec
dec
cmp
leave
pusha
test
fdivl
movsl
inc
iret
inc
mov
shl
push
int
dec
int
and
push
or
pop
cmp
jo
sub
push
cmp
int3
imul
jmp
or
mov
mov
dec
out
flds
jge
mov
sarl
out
in
push
jmp
cmp
es
and
and
inc
dec
xlat
imul
fimuls
adc
inc
pop
loop
movsl
inc
jmp
cs
and
adc
mov
xor
pusha
pop
loop
popa
rclb
dec
test
pop
jl
fcmove
push
das
fiadds
push
lret
mov
push
fwait
xlat
push
mov
movsl
test
jmp
fdivl
or
lret
jb
aam
aas
int
lret
stos
push
push
sub
nop
les
loop
flds
popf
adc
inc
add
ljmp
shl
es
neg
mov
jnp
add
push
inc
cli
push
cmp
sbb
xchg
in
sti
jno
scas
repnz
xchg
inc
nop
mov
jmp
jo
mov
test
fnsave
jns
call
das
or
add
sbb
pop
mov
mov
dec
sbb
sub
cld
testb
mov
in
outsl
fstl
sub
mov
loope
mov
out
pop
mov
ficomps
stc
mov
insb
xor
mov
hlt
inc
arpl
pop
pop
and
popf
test
aad
sbb
mov
or
cld
dec
fdivrl
je
orb
or
test
xchg
push
mov
cmp
hlt
repz
sub
mov
movsl
insb
jb
gs
out
jno
dec
sub
sbb
ss
shr
xchg
mov
xchg
push
mov
add
or
out
and
cltd
push
outsl
rcrl
subb
cmp
wbinvd
jb
adc
out
adc
shrl
hlt
cmp
mov
daa
push
sub
add
jbe
mov
js
sub
movsb
jne
mov
test
shlb
test
sbb
mov
mov
sub
mov
jb
xor
jbe
adc
adc
lock
lahf
jg
lcall
shrb
mov
inc
pop
or
jns
xlat
adc
aam
daa
nop
or
movsl
cmc
pop
jns
sbb
sahf
xor
fisttpll
ret
test
inc
mov
or
mov
xchg
int
dec
push
sbb
pop
lock
pushf
add
enter
lret
xchg
das
pop
push
gs
mov
push
iret
insb
test
jmp
ror
roll
inc
cs
and
das
mov
leave
movsl
cld
jns
push
mov
sti
gs
incb
mov
int3
pusha
dec
aas
pop
adc
dec
inc
insl
aaa
mov
sbb
mov
lods
mov
and
sahf
jg
adc
adc
mov
sbb
mov
inc
aad
xor
js
mov
xchg
cmpsb
fldcw
dec
mov
sbb
out
sbb
xchg
ja
ljmp
jmp
adc
test
xor
sbb
push
rorl
nop
push
and
aas
test
shrl
mov
mov
outsb
cmp
push
mov
lock
pop
sbb
xchg
sbb
xchg
pop
mov
add
jge
xchg
dec
sbb
sbb
mov
lret
xchg
cmpsl
or
pop
mov
ret
sti
jl
ds
insb
addl
sub
int3
call
mov
mov
push
pop
xchg
call
loop
jecxz
adc
pop
jp
and
mov
je
ficomps
ja
cmp
call
fwait
xlat
or
addb
enter
sbb
push
push
popfw
cmp
lods
pop
hlt
pop
es
lds
outsl
pop
push
stos
dec
jae
cmp
mov
aas
xchg
fwait
ja
sbb
ds
push
lods
nop
mov
icebp
lcall
arpl
cmp
sub
clc
xchg
repz
mov
filds
scas
pop
push
mov
pop
xor
inc
ds
xor
add
sbb
daa
js
inc
arpl
sbb
test
inc
sub
xchg
adc
popa
push
mov
and
ficoms
cltd
aas
push
mov
push
jns
mov
sbb
popa
mov
pop
or
imul
inc
jge
pushf
lock
leave
mov
sarl
adc
push
mov
push
sahf
mov
iret
add
mov
and
out
cmc
data16
xor
adc
jmp
inc
stos
inc
and
leave
lock
addb
or
mov
iret
decb
jp
dec
inc
fisttpl
out
mov
jae
xlat
add
or
test
push
pusha
movsl
das
mov
ret
nop
sub
in
inc
mov
mov
out
rorb
xchg
in
sub
mov
and
sbb
outsb
sub
and
mov
mov
pop
add
dec
or
add
lods
add
test
rolb
loopne
add
and
mov
hlt
mov
mov
mov
fisubrl
clc
xchg
xlat
rorl
daa
lods
sahf
inc
and
or
dec
addr16
fucomip
and
leave
jno
xorl
pop
ja
das
ss
cmp
testb
fldenv
in
mov
das
lds
pop
or
enter
sahf
imul
in
es
movsb
inc
test
inc
mov
cmp
sub
xchg
stos
push
std
jb
dec
xchg
test
mov
add
xor
shl
ljmp
adc
xor
roll
cld
mov
int3
and
enter
les
sub
pop
xchg
popf
sbb
imul
jecxz
popf
adc
inc
sbb
ds
adc
das
sub
mov
inc
fsubr
push
adc
ret
add
dec
xchg
imulb
push
push
lock
and
xchg
cmp
daa
jg
mov
jno
adc
je
pop
inc
add
adc
sahf
xor
inc
pop
jecxz
dec
call
xchg
or
lcall
mov
xlat
jp
mov
dec
hlt
in
push
add
arpl
or
dec
fwait
das
xor
sbb
shrl
push
fwait
xor
repnz
movsl
or
and
mov
mov
add
out
into
es
mov
push
inc
push
out
insb
dec
add
dec
dec
leave
psraw
add
add
addr16
jmp
mov
mov
push
addr16
xchg
orl
and
in
jmp
add
jns
jl
out
sub
cmp
ss
test
sbb
cmpsl
push
mov
iret
test
cwtl
push
popa
into
and
mov
int
cli
rclb
aad
mov
into
andb
mov
xchg
ret
cld
mov
das
sub
or
dec
sahf
jp
fidivs
xchg
stos
add
pop
xchg
in
and
aam
and
adc
adc
jp
sbb
mov
lcall
cwtl
shr
dec
push
mov
xor
mov
data16
adc
gs
inc
mov
mov
jge
jmp
psubd
divb
fs
sahf
mov
ret
sub
xor
fdivp
insl
insl
jo
into
ret
stos
and
pmaddwd
loopne
aad
xchg
fs
inc
cmpsl
stos
jge
ficoms
push
mov
or
sbb
lahf
pop
or
xor
push
mov
and
movsb
or
addr16
jl
ss
push
fs
jg
jnp
mov
adc
lret
mov
add
cs
mov
jnp
push
stc
xchg
in
mov
pop
mov
fs
or
xor
hlt
fstp
leave
icebp
sahf
mov
out
pop
ficomps
rorl
mov
movsl
movsb
std
sub
xor
mov
dec
fcmovnb
je
inc
fistpl
je
into
pop
imul
push
int3
ja
jp
pop
cltd
stos
cmc
rcr
leave
inc
sbb
jle
pop
enter
mov
mov
or
andl
cmpsl
xchg
adc
fnstsw
out
jne
data16
mov
push
sub
repz
xlat
jno
jne
cli
inc
dec
dec
dec
ror
shll
xorb
jbe
nop
push
cmp
mov
dec
ds
vpmacssww
pusha
add
sbb
stc
ljmp
or
jns
mov
imul
sub
out
mov
xchg
fstpt
sbb
mov
ja
std
inc
adc
je
fsubrs
or
cmp
inc
lea
sarl
pop
test
pop
or
ljmp
sbb
stc
push
into
loopne
mov
lds
mov
pop
mov
jecxz
cmp
setle
lea
enter
and
push
popf
add
lcall
sub
mov
in
mov
iret
and
lret
shll
mov
adc
fwait
ss
and
dec
dec
xor
jp
adc
sbb
ret
dec
jae
pop
outsb
cmc
mov
scas
mov
or
push
loope
add
push
mov
aaa
loope
int
shrl
pop
jne
mov
dec
repnz
aaa
out
push
inc
aam
jns
scas
xor
outsb
aaa
jne
cmp
aaa
daa
repz
incl
movsb
aad
hlt
push
fwait
pop
or
test
cld
fbstp
insb
aam
xchg
mov
dec
pusha
adc
add
or
push
movsb
jecxz
pusha
or
mov
add
mov
ret
mov
nop
arpl
cmp
bound
mov
add
jno
pop
push
adc
fiaddl
or
mov
ss
int3
pop
shll
sub
sahf
pop
mov
jmp
mov
add
stos
in
int3
jno
inc
sub
mov
xor
repz
mov
push
cmp
icebp
adc
rcr
int3
mov
mov
dec
mov
mov
loope
fidivs
xchg
enter
repnz
lods
and
fcompl
mov
or
jmp
lea
les
fwait
push
mov
je
push
cmp
fcom
loopne
dec
mov
xchg
fisttpl
mov
mov
jbe
scas
mov
aaa
cmc
mov
les
ljmp
sub
sahf
cld
dec
xor
cwtl
stos
test
inc
lods
cwtl
repz
fstl
inc
psrad
lret
decl
cwtl
sub
movsl
adc
xchg
mov
jae
ret
cmp
subl
data16
sbb
adc
inc
in
popf
sti
lds
test
mov
dec
rclb
add
xor
push
fnsave
popf
sub
out
lods
inc
out
cmp
or
mov
jo
out
push
loope
les
xor
and
inc
popa
lods
jae
cmp
jecxz
pusha
les
mov
popf
and
bsr
ret
cwtl
push
int
cmp
inc
push
push
mov
jne
push
pop
inc
mov
push
test
jno
movsl
call
jae
push
mov
aad
xor
sahf
ds
adc
mov
ror
jns
lahf
and
adc
dec
out
decb
addb
icebp
in
or
stc
nop
int3
cmc
test
gs
leave
mov
add
scas
movsl
fadd
int3
dec
push
mov
dec
xor
test
lds
and
shrl
push
rorl
lahf
adc
lea
cmc
xchg
dec
ret
mov
ret
dec
fcom
ficomps
push
push
lret
imul
push
mov
add
and
test
adc
nop
or
in
cmpsl
dec
lods
sbb
lret
sbb
cmpsl
std
ficoms
scas
lret
mov
mov
inc
sub
into
mov
movsl
ret
jmp
and
mov
pop
mov
xchg
mov
and
cmp
daa
test
add
lcall
mov
outsl
rcr
jnp
lcall
shlb
cmp
sbb
aaa
dec
aas
xchg
dec
subl
arpl
and
push
xlat
jl
and
dec
add
repnz
in
jecxz
jnp
xchg
mov
push
inc
cld
mov
repz
scas
loope
push
adc
out
mov
test
scas
mov
jo
test
fs
clc
loope
fdivrl
cmc
jecxz
xchg
and
int3
push
xchg
or
mov
pop
movsl
cld
adc
pop
mov
push
fbld
imul
jecxz
mov
xlat
fs
daa
mov
inc
mov
cmp
mov
dec
push
pop
dec
dec
pop
inc
sbb
outsl
xor
and
in
popa
sub
pop
fistl
mov
jne
int3
sar
jge
push
scas
jnp
shl
stos
movsb
or
stc
xchg
pop
dec
push
rolb
adc
xor
add
cli
pop
cltd
jecxz
aad
scas
js
mov
loope
loope
sub
add
shlb
leave
popf
mov
jo
inc
adc
scas
push
or
lea
xor
mov
cmc
cltd
sbb
xor
mov
cmp
xor
into
cmp
dec
sub
xor
push
icebp
inc
je
push
cmpsl
jmp
bswap
shlb
dec
stos
hlt
dec
xchg
cli
pop
mov
daa
cmp
lcall
stc
pop
and
cmc
movl
pop
sub
movsb
add
pop
pop
cs
cld
scas
mov
push
dec
or
loope
loope
and
add
das
test
push
mov
lods
xor
mov
jmp
addl
dec
icebp
add
jne
pushf
int
fwait
pop
and
shll
pop
xchg
repz
xchg
daa
repz
xor
cmp
fmuls
int
hlt
push
sbb
pusha
adc
in
xor
jae
in
ret
push
ret
out
push
bound
inc
and
add
test
push
push
bound
inc
mov
repnz
rol
inc
or
hlt
jmp
mov
jmp
mov
jo
jmp
mov
stos
push
pop
test
icebp
inc
jmp
sti
lds
movsl
scas
push
mov
scas
jb
sbb
aam
xor
cmp
and
cs
jbe
cmpl
cmp
cmp
mov
call
es
pop
sub
lcall
test
or
sbb
jmp
in
jne
pop
dec
in
add
sbb
mov
in
in
mov
pop
jmp
fsubl
cld
rcrw
mov
shlb
mov
adc
lds
dec
mov
jnp
lds
out
ret
inc
or
addb
add
neg
jb
push
add
mov
xchg
loope
xchg
mov
or
or
movsb
rclb
lcall
sahf
push
xchg
lods
inc
lds
inc
dec
mov
insb
and
and
std
jb
mov
sub
les
fisubs
ja
xor
dec
shl
pushf
or
sub
ss
pushl
imul
imul
or
adc
mov
xlat
fs
mov
clc
push
pop
movsb
cwtl
out
jmp
cmp
lcall
or
sahf
les
pop
lahf
cs
std
in
cmp
ja
cmp
jae
fwait
icebp
lahf
fmul
cli
push
jmp
mov
add
mov
rcr
jg
mov
sti
shl
dec
cmp
sahf
jno
ret
test
jl
in
add
push
sub
rorl
aam
cmp
gs
inc
and
xchg
imul
jecxz
push
pop
lahf
mov
test
cmp
jecxz
xchg
xlat
jecxz
js
sub
out
pop
bnd
ja
leave
push
aas
daa
dec
int3
xchg
push
js
mov
in
lahf
outsb
cmpsl
pop
mov
neg
sahf
addl
int
mov
inc
addb
outsl
push
or
fcompl
sahf
vpunpckhdq
insl
mov
lahf
pop
int
add
adc
es
sbb
orb
movsb
or
repz
xchg
je
pop
add
add
mov
pop
fucomp
popa
push
imul
mov
je
movsl
lock
mov
decl
out
jns
popf
push
stc
sbb
pop
ja
loop
inc
jno
arpl
in
sbb
push
fwait
sti
cmpsl
xchg
das
and
jle
jmp
das
sbb
or
push
sahf
es
mov
push
insl
cmp
dec
imul
enter
and
push
popf
outsl
sub
jns
pop
push
xlat
je
in
add
cld
scas
or
pop
in
cmp
xlat
adc
add
push
rcll
mov
lea
adc
fcomip
or
add
out
jns
ss
ljmp
xor
lcall
iret
faddp
push
imul
push
sub
jb
push
xor
aam
js
std
mov
sbb
addr16
stc
test
subb
fsubrl
mov
fidivs
in
or
shl
jb
negb
or
cmpl
push
daa
call
cmpsb
mov
loope
test
lods
and
pop
inc
push
rol
xlat
pop
aad
fcmovbe
pop
dec
sbb
pop
jge
inc
xchg
cs
data16
jecxz
and
cmc
test
add
movsb
test
repnz
and
das
xor
test
clc
aaa
jnp
shll
or
stos
in
dec
cltd
lret
call
pusha
jb
test
movb
lret
cmp
inc
inc
aam
outsl
arpl
push
fisubl
rclb
jp
ficoms
mov
and
inc
inc
pop
sbb
fs
lret
or
fistps
roll
and
jecxz
inc
push
push
jnp
xchg
mov
aam
pop
lds
mov
sbb
and
dec
jno
loop
bound
jae
mov
fcoml
pop
loopne
cmpsb
push
sub
sub
addb
dec
inc
mov
ja
insl
mov
cmp
pop
and
cmc
dec
pop
out
dec
dec
shlb
ret
mov
sti
shlb
inc
sahf
shll
pop
dec
mov
ficoms
push
xor
mov
dec
imul
pop
pop
pop
loop
push
or
shrl
push
pop
cld
stos
scas
mov
xchg
ja
lods
rep
repnz
std
arpl
xor
into
or
es
sbb
and
inc
push
mov
fwait
in
testb
cmc
and
jle
in
fst
xchg
jp
add
test
cmc
in
repz
ss
sub
mull
int
mov
jo
mov
mov
ret
mov
lret
jne
movsl
dec
jne
xchg
push
repz
adc
in
and
dec
orb
push
lret
leave
mov
add
mov
shlb
or
sti
dec
insl
inc
dec
popa
mov
and
sub
cmp
ja
mov
mov
repnz
loope
pushw
sti
mov
dec
stos
push
push
mov
out
lea
add
sub
neg
enter
shl
push
xchg
popl
int3
cmc
jp
scas
mov
movsb
jp
and
xlat
mov
mov
adc
cs
cli
inc
aam
cmovnp
gs
pop
dec
push
lret
repnz
mov
mov
cs
xchg
push
popa
xor
sbb
jmp
rclb
fcoms
pop
pop
push
mov
mov
cmc
or
push
in
neg
fldt
sub
fnsave
inc
mov
and
pushf
fsubrs
clc
lods
pminsw
add
aaa
xchg
and
insb
addr16
subb
push
adc
cwtl
mov
aaa
push
imul
mov
push
out
xchg
mov
pop
mov
or
fwait
repz
pushf
pop
pop
outsb
lcall
cmp
xchg
fstpt
mov
mov
lods
frstor
cmc
xor
xlat
ss
push
jbe
dec
mov
les
cs
xchg
push
xor
mov
and
das
loopne
pop
cmp
jge
out
cmpsb
lock
les
sbb
mov
jg
movups
sub
ds
fimull
lods
out
sub
mov
aaa
and
fwait
cmp
pop
rcrl
pop
aas
sbb
in
add
stos
aas
lds
repz
mov
mov
mov
and
mov
mov
mov
out
mov
mov
cmpl
outsl
push
cmp
stc
push
iret
mov
aas
xchg
cwtl
imul
pop
push
xlat
roll
xorb
mov
orps
hlt
aaa
imul
xchg
ret
mov
shrl
out
lcall
ja
cmpsb
addr16
add
rclb
shr
les
scas
call
cli
push
fdiv
rorl
sbb
in
lea
push
jnp
sbb
add
inc
pop
adc
pop
out
xor
mov
lods
pop
cltd
insl
mov
je
loopne
les
mov
fistpl
pop
mov
and
sbb
sbb
dec
in
push
pop
repnz
lret
xchg
cmp
pop
loope,pn
mov
inc
mov
cld
lahf
xchg
inc
and
and
out
push
into
mov
mov
mov
neg
mov
mov
xchg
je
and
lods
mov
insl
pop
xchg
sbb
cmp
mov
or
dec
push
fidivl
ds
xor
sbbb
fcoml
push
fadd
mov
mov
subl
repz
dec
rolb
pop
vphaddwd
stos
push
xchg
outsb
xchg
adc
jecxz
les
lret
adc
cmpsl
loope
enter
ja
mov
loop
jo
push
adc
ficompl
lea
mov
sti
jbe
cmc
inc
adc
scas
or
mov
xor
sbb
cmp
repnz
mov
dec
adc
mov
loop
fs
lods
out
push
cmpsb
fstl
in
xchg
jmp
jne
mov
scas
std
fmull
jnp
xchg
repnz
cli
sub
or
sub
jbe
inc
xor
mov
mov
or
push
push
subl
cwtl
inc
inc
outsl
mov
ss
add
shrb
xor
jp
inc
mov
mul
pop
fdivrl
cltd
dec
flds
lods
jne
test
jo
mov
and
scas
cmp
lret
mov
mov
aad
mov
cmp
jecxz
shlb
test
in
xrstors
js
std
icebp
repz
fwait
jns
stc
andl
pop
js
inc
push
inc
sbb
scas
outsl
aam
in
loop
dec
or
sbb
jl
pop
adc
mov
shl
dec
add
fldenv
out
pop
loope
mov
mov
lret
push
dec
mov
sbb
rcll
les
repnz
xchg
mov
adc
popf
inc
mov
fwait
clc
pop
aam
sub
test
daa
xchg
cmp
lods
aas
test
inc
sub
aad
aas
or
sub
scas
push
test
pusha
push
les
xor
sub
sbb
and
iret
xchg
loope
xchg
mov
xchg
es
ficoml
shll
xchg
cmp
aad
xor
push
das
xor
je
fstps
mov
hlt
lods
mov
dec
and
pusha
jp
pop
adc
sbb
jns
add
dec
dec
out
sub
jle
or
js
fcoms
xor
and
mov
daa
dec
add
jge
mov
xchg
mov
cmp
data16
nop
jecxz
push
mov
mov
movsl
sub
lret
push
fsts
jmp
sbb
push
popa
fsubs
mov
pop
lods
cli
testl
xor
lock
mov
sub
push
popf
sarl
xchg
push
jo
and
mov
repz
idivb
jge
jbe
je
leave
dec
pushf
add
sbb
or
xchg
es
cmp
jmp
jge
fs
int
push
mov
or
jne
xchg
enter
mov
faddp
imul
fbstp
jp
in
nop
mov
stos
push
mov
popf
addl
test
mov
push
imul
adc
mov
cli
rorl
xchg
xchg
sbb
xor
test
test
xor
test
lret
pop
mov
dec
iret
push
mov
push
test
and
in
ja
std
mov
fiaddl
in
test
pop
jecxz
sti
cmp
repz
out
dec
andb
cmpsl
xchg
mov
cld
and
adc
dec
mov
jno
xlat
in
adc
es
add
xlat
jb
mov
mov
test
sbb
or
mov
jp
xchg
dec
inc
fcmovne
cltd
bound
push
emms
xlat
xor
fcmovnbe
or
mov
and
mov
sub
jnp
xor
adc
or
popa
inc
mov
stos
inc
jno
mov
je
mov
mov
inc
mov
ljmp
push
jge
mov
mov
push
call
add
jecxz
jo
mull
xchg
inc
adc
cli
mov
vcvtps2pd
pop
mov
dec
fdivs
lahf
out
mov
pop
cmpsl
lahf
das
call
push
imul
mov
mov
and
and
mov
aam
lods
ja
and
stc
push
stc
loope
xchg
xchg
loop
sub
les
mov
sub
fdivrp
ffreep
fs
xchg
inc
rcl
xchg
xchg
fs
cmp
aaa
jne
mov
jo
fs
mov
push
popf
sbb
jo
fldl
sub
jnp
mov
jl
ja
jbe
test
stos
jmp
movsb
ja
cmpb
ficoms
pop
fnstsw
adc
and
add
xchg
jbe
das
cmp
jmp
cld
movsl
push
scas
sub
stc
jmp
and
cmp
sti
in
sbb
sbb
mov
daa
add
prefetch
iret
cld
sbb
cmp
mul
mov
mov
push
mov
pop
aam
and
mov
add
xor
stos
lds
mov
adc
aad
sub
xchg
mov
jnp
pop
out
aaa
outsb
sarl
pop
outsl
lods
enter
sub
pop
mov
dec
mov
in
dec
inc
fimull
pop
in
pusha
imul
xchg
nop
jne
push
push
aaa
test
lea
mov
fisubs
mov
sub
in
insb
cmc
inc
in
inc
idivl
xchg
sbb
out
stc
sbb
enter
aas
adc
pop
sub
push
mov
js
and
add
sbb
add
movsb
subb
mov
pop
pop
aad
adc
xor
lret
dec
push
cltd
cltd
pop
jge
push
sbb
cmp
push
cmp
mov
push
or
insb
push
push
pop
filds
lods
stc
cmp
jl
push
jnp
aad
cmp
fsubrp
pushf
adc
add
jmp
mov
pop
xor
out
in
in
adc
cmpsb
dec
mov
fstp
icebp
faddl
pushl
push
mov
pop
sbb
js
sub
cmpsl
sub
lcall
jns
into
sbb
pop
cmp
mov
jnp
xchg
pop
mov
inc
cmp
aam
xchg
xchg
aad
popf
int
sub
movsb
add
push
clc
popa
push
arpl
xchg
mov
rcrb
inc
cli
inc
sbb
fildl
loopne
push
arpl
xchg
fnsave
push
popa
pop
and
xor
pusha
insb
gs
mov
popa
xor
sahf
sbb
stos
mov
jb
shrl
test
aam
sub
test
cmp
daa
mov
ljmp
loope,pn
cltd
test
jno
xchg
je
subl
and
inc
jne
mov
dec
adc
adc
sbb
and
xchg
faddp
xlat
and
leave
mov
sbb
call
mov
ret
mov
ficoms
xorl
mov
incl
cmc
es
ret
xchg
jle
cmp
jae
mov
push
lods
out
lea
gs
jno
dec
cmpsl
pop
out
std
mov
insl
sbb
pop
fldl2e
stc
test
fnstsw
adcl
adc
stc
or
cmp
add
adc
ret
pop
sbb
cmpsb
sbb
jmp
divl
sbb
mov
cmp
jb
mov
jmp
add
inc
mov
ja
sti
call
mov
cmp
adc
cwtl
and
mov
mov
jg
ds
out
test
das
rorb
mov
dec
mov
adc
xchg
lods
repz
orb
insl
push
sar
push
int3
xor
je
mov
xor
push
movsb
mov
xor
fsubrl
fwait
mov
xchg
mov
mov
add
xchg
fsubs
mov
imul
ret
mov
pop
fldenv
mov
mov
xchg
and
jno
in
shr
lods
into
add
movsb
lds
dec
into
in
aad
aad
sar
aaa
push
lock
jmp
mov
movl
test
mov
adc
fwait
sub
or
ret
cmpsb
mul
movsb
mov
fbld
inc
and
dec
xor
std
or
pop
cld
loop
cmp
cs
add
stos
mov
out
mov
cwtl
leave
pushf
cmc
push
cmp
jb
xchg
cwtl
inc
shrb
jno
loopne
pop
sahf
insl
pop
mov
les
insb
fistpl
push
outsb
les
push
fcoms
mov
lahf
add
or
xor
fnclex
out
push
inc
cli
cli
inc
adc
test
jge
mov
flds
jno
data16
xchg
xchg
jp
repz
inc
mov
cmp
add
icebp
clc
or
mov
insl
pop
adc
aad
cmp
test
ja
fsts
adc
int3
out
jns
cmc
aam
mov
rcrb
dec
add
push
flds
xchg
mov
in
mov
cmp
cmpsb
pop
arpl
jb
xor
aam
xchg
out
push
mov
imul
cmpsl
loopne
jae
stc
movsl
test
mov
movsl
push
ss
mov
inc
push
sbb
aas
mov
cltd
adc
je
dec
xor
loope
movsl
xchg
sti
jle
jae
mov
mov
insb
ja
dec
fstpl
mov
push
jp
mov
call
fcmove
adc
pop
pop
xor
dec
out
or
mov
cmpsb
fstps
jo
test
mov
sti
dec
mov
mov
gs
cs
jp
sub
lret
jg
or
arpl
cwtl
add
lret
test
pop
push
lcall
cmp
jno
sahf
mov
imul
mov
imul
mov
ja
mov
pop
lret
mov
test
clc
pop
enter
and
xor
dec
popa
loope
push
cmp
insl
adc
add
aam
xor
mov
cmovns
out
push
push
xlat
pop
adc
push
xlat
push
aam
dec
sub
fdivl
fwait
xor
add
cmp
ret
test
out
mov
negl
loopne
push
xchg
sbb
cwtl
outsb
cld
mov
incl
shlb
in
or
lock
imul
add
dec
fdivr
jae
rcrb
jbe
insl
dec
cmpb
leave
and
jb
movb
pop
imulb
les
xor
mov
mov
and
imul
sarb
fmull
test
repnz
lcall
jmp
outsb
popa
add
xlat
inc
addr16
adc
lret
in
inc
aas
jno
sub
add
imul
inc
jmp
insl
dec
scas
call
into
inc
push
insl
in
ficoml
mov
lea
xchg
xor
inc
sub
sahf
jb
mov
xchg
in
jbe
sbb
and
test
xor
sbb
xchg
or
xor
andl
push
xor
repnz
cmp
or
pop
sub
dec
push
xor
imul
mov
push
divl
in
sub
pop
and
mov
ss
iret
xor
xchg
mov
push
rcr
jle
imul
jnp
shl
sbbb
js
inc
jle
dec
int3
jecxz
roll
mov
sub
shll
ljmp
bound
mov
mov
aad
sbb
cmpsl
xchg
clc
insb
xorb
sahf
test
xlat
mov
lcall
xchg
jmp
sbb
dec
xlat
int3
fimuls
fmuls
aas
mov
mov
mov
ljmp
enter
subb
xchg
adc
or
lret
mov
dec
call
pop
sarw
loop
or
xlat
packuswb
mov
mov
imul
test
or
and
jg
adc
in
adc
dec
mov
mov
push
xchg
ljmp
rcrb
xchg
lcall
jb
xor
cmp
lds
sbb
mov
arpl
and
movsb
jmp
sbb
jge
cwtl
sub
jo
mov
into
xchg
adc
xor
pop
jp
pop
nop
jle
out
mov
data16
dec
lods
xchg
test
xchg
xor
or
pop
dec
enter
sub
lods
pop
out
fbstp
push
jnp
andb
sbbb
xchg
clc
mov
scas
aam
cmp
add
int
pop
and
repnz
mov
mov
jbe
in
jae
stos
jne
mov
fwait
pop
arpl
push
pusha
in
mov
jp
loopne
cmc
pslld
jg
inc
adc
insl
jl,pt
mov
dec
fadds
addr16
shl
mov
sbb
and
xor
pop
or
test
jecxz
sbb
dec
int
lret
ss
js
inc
adc
or
ffree
mov
push
pop
sbb
push
iret
ja
cmpsb
shlb
xchg
dec
jle
and
mov
push
add
pushf
fstl
dec
aaa
in
jecxz
sub
stos
push
je
aam
pop
mov
mov
mov
shlb
cmp
es
ss
fbld
outsb
arpl
jbe
push
ljmp
xor
arpl
push
xchg
loopne
push
and
lods
sub
sub
mov
test
pop
lahf
inc
fistps
mov
mov
out
xchg
pop
add
aas
xchg
inc
aas
or
fmulp
push
ja
dec
test
add
leave
add
dec
out
ss
cmp
daa
jp
mov
jecxz
out
cld
sbb
mov
mov
dec
into
pop
inc
push
arpl
sbb
ds
lahf
adc
add
hlt
loop
lea
jno
outsl
jo
rolb
and
inc
push
sbb
jns
stos
in
fistpll
popa
mov
jo
mov
out
lds
ffreep
test
fidivrl
bound
inc
sub
pop
mov
or
popf
xchg
fwait
ljmp
lock
mov
outsl
push
mov
outsb
or
mov
or
inc
call
sbb
pushf
sub
sub
pop
cmp
outsb
cmp
xsha1
cmpsb
push
adc
sub
or
sub
leave
repz
hlt
insl
sub
insb
jmp
cmp
or
testb
imul
jae
lahf
int3
mov
stos
mov
test
push
and
out
imul
jp
or
pop
sub
xchg
pop
mov
xor
shlb
xchg
sahf
sbb
jmp
inc
popf
add
js
cmp
les
adc
cmc
scas
and
inc
mov
mov
sub
inc
sbbl
arpl
rorb
sbb
dec
and
lret
out
lods
in
rclb
push
jg
push
dec
fmull
popa
pop
jp
dec
sbb
mov
mov
and
and
sbb
fsts
movsl
out
int3
ss
mov
dec
inc
int
aaa
ljmp
in
mov
xchg
leave
jle
mov
jno
or
jg
inc
and
fdivrs
orb
xorl
insl
rcrl
out
xchg
scas
mov
jno
aaa
call
push
das
sbb
fdivr
dec
decb
jbe
dec
std
inc
cwtl
aas
roll
decl
jno
scas
dec
test
clc
in
lods
adc
push
icebp
dec
mov
pop
roll
inc
push
mov
dec
push
add
lock
lock
jb
or
fcmovne
cmp
cmp
jp
mov
jne
popa
inc
mov
cmp
mov
jbe
xchg
mov
jne
push
push
push
or
adc
out
xchg
ret
mov
aad
out
inc
in
iret
pusha
sub
clc
xor
adcb
fwait
sub
stos
insl
add
jle
and
mov
jge
mov
mov
mov
lds
nop
xlat
lods
aaa
sub
fisubrl
or
jl
jmp
leave
cltd
ljmp
adcb
lds
iret
mov
lret
sbb
push
je
lods
aas
repz
sbb
xchg
or
ror
stos
mov
xchg
cld
mov
popa
dec
sub
ja
cmp
in
loop
xor
push
idivb
inc
push
jns
push
ja
mov
imul
sbb
popf
comiss
stos
adc
dec
xlat
into
jbe
jmp
cmp
pop
jle
fwait
pop
cmp
movb
aaa
enter
pop
insb
out
sbb
cld
in
mov
outsb
lahf
adc
ficomps
stos
shrb
push
imul
test
stos
and
lret
adc
mov
in
cld
fs
into
sbb
xor
push
lahf
mov
shll
jmp
xor
jns
lea
push
in
loopne
cmp
xor
mov
push
mov
push
dec
sarl
out
jne
mov
inc
push
rcrl
pop
lods
and
xchg
and
lcall
xor
xor
nop
std
out
addr16
and
hlt
iret
lods
cmpsl
inc
push
cmp
pop
test
movb
nop
imul
aad
lahf
dec
stos
or
sbb
ror
inc
pop
adc
bound
or
jno
mov
xchg
fmulp
pop
cmp
jle
cltd
push
mov
lods
in
clc
lds
xchg
mov
pop
jmp
cmp
mov
push
das
push
hlt
inc
stos
stos
jle
add
push
popa
xor
add
js
and
into
push
icebp
xor
jmp
sti
xor
iret
or
js
lods
mov
fldt
mov
in
adc
andb
mov
movsl
hlt
rorl
shll
xor
jecxz
shrl
icebp
push
pop
mov
je
dec
mov
negl
sahf
in
popf
movsb
adc
aad
mov
adc
stos
lret
sbb
inc
ja
packsswb
sahf
outsb
push
mov
pop
dec
insl
dec
test
mov
or
mov
scas
sbb
jae
enter
adc
mov
or
mov
test
jno
jg
adc
or
imul
or
lahf
pop
dec
dec
dec
jmp
push
insl
rolb
sarl
arpl
test
enter
mov
sbb
xchg
xor
je
jg
or
ficoml
jns
int
aaa
mov
xor
and
cltd
push
xor
inc
scas
pop
hlt
fisubl
add
add
sub
into
xor
jbe
inc
rorl
sbb
push
or
fimull
push
xchg
push
or
push
std
insl
jle
test
mov
inc
jecxz
movsl
fnstcw
orl
stos
mov
mov
sbbl
shl
dec
stos
dec
leave
xor
stc
out
in
ljmp
into
into
nop
data16
add
xchg
pop
xor
xchg
push
movsl
dec
sub
scas
lret
adc
outsl
ja
mov
imul
and
cmp
repnz
add
pop
mov
cwtl
dec
jne
out
cmc
xor
jno
lahf
add
std
out
jb
dec
icebp
xchg
insb
mov
nop
push
stc
cmp
xchg
mov
cmp
into
ja
xlat
pop
mov
sbb
mov
add
adc
gs
sbb
mov
mov
mov
sbb
repnz
arpl
dec
cs
pop
mov
xchg
inc
or
mov
add
sub
es
jns
std
jb
test
fstl
icebp
imul
lahf
pusha
pop
loope
mov
cwtl
addr16
push
sbb
je
jne
dec
inc
pop
and
iret
rcrl
lods
les
testb
pop
push
jle
mov
hlt
pop
in
bound
sub
mov
cmp
pusha
jns
jecxz
insl
mov
push
stos
dec
movsb
shll
mov
jae
jns
inc
arpl
mov
mov
call
cmp
ret
jnp
jns
or
pop
push
pop
xchg
in
push
mov
or
ss
lahf
mov
sbb
jecxz
dec
std
mov
fldt
xor
xchg
out
aas
fcmovne
mov
sub
push
inc
test
mov
ret
fistps
dec
lods
mov
aad
ret
and
adc
pusha
jno
inc
pop
xor
int
neg
jno
mov
daa
mov
ret
jns
outsl
ja
jp
dec
test
pop
stos
stc
mov
push
sahf
hlt
mov
mov
ja
jmp
dec
mov
nop
fisttps
adc
call
xor
out
aas
push
mov
scas
pop
loopne
gs
mov
push
je
ficompl
stc
jge
add
jno
lahf
iret
ret
divb
xor
cmc
out
add
das
outsb
push
cli
mov
addb
ljmp
rolb
loopne
aas
aas
ficoms
clc
aaa
sub
xchg
mov
addl
inc
sub
mov
shl
xor
xor
clc
repnz
sbb
push
xchg
sbb
mov
pop
cmp
mov
mov
lods
xor
and
jnp
cmpsb
ret
xchg
ret
add
pop
add
cli
lahf
mov
jecxz
cmp
and
xor
dec
sbb
cmp
cmp
push
mov
jb
mov
mov
push
dec
int3
mov
push
pop
pop
adcl
movsl
push
pushw
repnz
xchg
call
xchg
repnz
sub
mov
pop
push
xor
adc
in
and
push
xlat
fsubr
js
je
inc
das
sbb
lcall
out
lods
shr
adc
sub
add
sbb
sub
adc
test
adc
hlt
push
out
std
mov
stc
mov
pop
lods
adc
sub
xor
add
mov
cmp
movsb
pop
inc
dec
mov
arpl
jmp
push
push
mov
mov
daa
push
pop
outsb
pop
stc
pusha
cmpl
jg
jg
into
sbb
std
mov
pop
mov
fs
subl
out
xchg
popf
pop
stos
repnz
jmp
aas
shrl
sbb
fdivrl
test
mov
mov
ret
ljmp
cld
mov
jnp
add
or
pushf
test
out
sti
mov
add
xor
in
mov
andl
sbb
jnp
pop
cmp
mov
movsb
push
lods
or
mov
sti
loopne
outsb
out
lds
ret
push
pop
test
stos
arpl
dec
gs
jae
aad
push
loop
lcall
jle
pop
imul
scas
popa
add
and
jbe
cmp
call
pop
notl
jns
nop
inc
add
adc
lods
mov
xchg
or
pop
adc
mov
bound
or
pop
and
inc
iret
mov
xchg
mov
add
mov
test
test
mov
jp
imulb
out
xor
xchg
imul
call
hlt
aad
ds
shrb
sub
mov
gs
jp
adc
stos
mov
jp
movsb
fmull
xchg
aas
inc
cmp
std
or
mov
int
mov
popa
cmp
es
mov
daa
stos
cli
gs
jecxz
cwtl
ds
xchg
inc
arpl
shl
xorl
sbb
sub
nop
test
dec
mov
jns
adc
das
out
cmc
test
test
dec
aam
pushf
sbb
out
push
add
mov
mov
stc
ret
add
arpl
mov
outsb
movsl
mov
and
pop
pushf
sub
xchg
stos
adc
jl
xor
cmp
xchg
inc
mov
inc
pop
sahf
js
sbb
in
sub
test
fwait
dec
sahf
push
jl
das
popf
aam
mov
mov
in
mov
arpl
and
popf
lods
pop
jne
or
xchg
ficompl
xor
daa
scas
mov
fimuls
in
xlat
rclb
test
mov
cmp
daa
es
rolb
mov
stos
into
push
lods
add
jae
sbb
scas
xchg
inc
or
cmp
jbe
xchg
scas
add
pop
fistpll
or
pop
inc
movsb
cmc
add
mov
jne
and
jmp
insl
repz
sbb
xchg
bound
ret
dec
int
push
cli
je
push
es
repnz
jb
xchg
out
sub
js
imul
jbe
mov
out
out
scas
ss
cltd
call
sbb
pop
rorl
dec
sti
xchg
push
mov
mov
popa
clc
xor
fldt
mov
adc
popa
movsb
stos
or
sub
lret
repz
jp
js
lods
pushf
icebp
repnz
mov
and
jbe
lods
push
xor
mov
mov
pop
aaa
mov
or
lcall
vpmaddwd
int3
imul
adc
inc
cmpsb
fcmovnu
or
or
and
loop
and
lret
insl
or
inc
aam
mov
jno
out
inc
jns
lods
inc
fldcw
daa
lret
nop
insb
xor
dec
inc
sbb
pop
jbe
and
dec
lods
out
out
pop
sub
leave
sbbl
repz
insb
cmpb
popa
mov
mov
mov
inc
enter
aam
out
push
add
cmc
push
sub
pop
sahf
popa
jle
inc
push
rcll
cld
dec
ja
cmc
aaa
into
push
cli
xchg
in
int3
leave
repz
mov
adc
mov
lcall
popa
mov
leave
sub
into
pop
xchg
mov
pushf
into
cltd
ja
fwait
xchg
divb
sub
std
and
fcoml
fcmovb
mov
loope
add
std
xorl
je
xchg
aas
adc
cmp
xor
mov
nop
sahf
xchg
cmp
pop
cwtl
pop
fiadds
inc
hlt
dec
shll
outsl
inc
inc
cli
xchg
sbb
adc
cmp
stos
cwtl
popf
dec
and
jmp
and
or
iret
sub
jp
adc
cmp
push
cmpsl
cmp
enter
cmp
or
subb
aam
jl
ret
fldenv
dec
xor
mov
ljmp
mov
out
mov
jns
inc
mov
addr16
aad
pop
leave
dec
loopne
inc
dec
inc
mov
xchg
jae
pop
mov
mov
enter
sarb
cwtl
cmc
arpl
pop
xor
jo
das
andb
ljmp
mov
jecxz
movsb
xor
mov
shlb
test
lock
std
mov
mov
add
sub
inc
rclb
mov
cs
cs
lods
divb
mov
mov
sti
fadd
push
or
lods
push
subl
dec
inc
push
dec
mov
xchg
repnz
fbstp
rclb
push
int3
daa
or
movsl
and
jns
sar
repz
mov
adc
lock
sti
and
or
dec
adc
shl
aas
repnz
movsb
loope
xchg
push
inc
mov
xor
xor
popf
loope
pop
stos
ds
in
cmc
sahf
sbb
jle
sbb
jg
lea
sbb
mov
enter
or
mov
outsb
out
stos
add
mov
inc
mov
inc
ret
test
jae
mov
xchg
inc
stos
repz
add
and
and
jg
repz
ret
xchg
in
dec
ss
pop
pop
lea
push
sbb
add
ds
mov
pop
imul
flds
rcl
int3
rcl
mov
ds
jns
add
mov
xchg
push
roll
xchg
insl
setne
push
jmp
scas
mov
mov
mov
inc
adc
cmpsl
mov
notl
mov
faddp
scas
lods
cmp
fcmovb
das
pop
or
or
mov
xchg
xchg
stos
xchg
incl
fists
push
imul
mov
mov
dec
sbb
mov
lock
int
or
jb
xchg
fildll
rep
push
mov
aaa
aad
mov
stc
aaa
bound
push
aam
mov
xchg
mov
lds
lahf
subb
test
out
ljmp
lret
imul
xchg
test
movl
and
mov
and
adc
push
xchg
pop
add
pusha
loope
incb
fnstenv
mov
sub
loope
adc
imulb
out
dec
lods
sub
add
mov
jmp
mov
xchg
inc
sub
add
decb
cmpsl
or
bnd
adc
cltd
in
sub
jle
jp
mov
testl
sbb
fnsave
mov
add
push
mov
in
mov
es
in
jge
test
cs
pop
cmc
gs
rorb
lret
lahf
lret
adc
add
fbstp
push
int
inc
aaa
push
ds
addl
leave
mov
mov
movsb
aad
mov
push
xor
pop
and
xchg
mov
stos
flds
cmp
inc
mov
cli
dec
cmpb
call
sub
pusha
mov
jge
pop
mov
rol
mov
sbb
loope
fmul
fldl
pop
sbb
jne
pop
inc
ss
loop
dec
sub
shlb
insl
inc
jne
mov
sub
dec
pop
cmc
jns
cmc
pop
sub
xor
cli
rcll
adc
add
movsb
dec
test
int3
ret
mov
dec
fcoms
lds
sub
loop
cs
into
loop
pop
roll
fwait
xchg
mov
test
cs
es
mov
xchg
std
sahf
test
cmp
xchg
mov
sub
jns
pusha
or
mov
outsb
nop
fisubl
sub
dec
or
and
call
fdivrp
mov
bound
stos
fadd
pop
data16
lret
dec
ja
push
push
test
repnz
rcll
fisubs
xlat
adc
jge
test
jl
outsl
cmc
cmpsb
shl
lock
pop
mov
sbb
sbb
test
inc
sub
jo
pop
fmuls
scas
pop
ret
push
cld
and
sub
out
or
mov
je
sub
mov
inc
movl
es
les
rcrb
insb
cmp
and
stos
sbb
xchg
ja
cmp
adc
out
push
jl
sub
and
jbe
push
and
out
push
repnz
bsr
out
repnz
repz
out
xchg
ds
cmpsl
jge
cmpb
ret
in
or
xor
jb
mov
aad
and
std
adc
cmp
in
stc
or
and
popa
xor
xchg
pop
dec
push
inc
test
stos
mov
in
jle
aaa
fs
fiadds
pushf
pop
mov
inc
lahf
jmp
addr16
mov
adc
mov
pop
loop
neg
pop
movsl
inc
push
loop
fsubl
inc
outsl
lahf
movsl
js
lcall
xchg
sub
cmp
lcall
mov
lret
bound
pop
mov
inc
test
in
xchg
mov
push
and
sub
xchg
xchg
jo
push
inc
gs
inc
pop
mov
stos
cmp
fs
dec
add
movsb
push
jg
mov
cmpsb
mov
enter
cmp
int3
ss
fnsave
mov
rcr
push
shrb
mov
inc
ret
addl
daa
push
in
lahf
sub
pusha
enter
sbb
push
imul
adc
adc
push
jbe
pop
adc
push
dec
divb
push
das
call
shlb
rcr
and
or
cmp
sbb
in
sub
xchg
ljmp
pop
ss
push
add
imul
mov
inc
xor
cwtl
dec
in
jb
test
cmp
lret
aad
push
test
and
mov
xchg
test
fiadds
jp
rcll
aam
insb
outsl
push
pop
lcall
adc
negl
jae
pop
xchg
out
mov
faddp
push
jge
inc
dec
out
push
and
into
into
outsb
call
cmp
adc
inc
cmp
and
push
add
jae
adc
mov
xchg
daa
xchg
add
or
inc
inc
rep
push
jnp
push
rcrl
daa
mov
addb
mov
dec
addr16
dec
addr16
out
std
dec
std
mov
pop
xor
sbb
sub
fnstsw
fmull
or
sub
popf
mov
adc
iret
fists
pop
movhps
in
mov
sbb
aad
bound
popa
loop
popf
cmp
negl
or
dec
add
mov
push
std
pop
xchg
or
iret
pop
das
jecxz
int3
push
ja
bnd
xchg
cmp
mov
sbb
dec
sub
jnp
jl
jne
lahf
clc
adc
adc
mov
push
daa
inc
ret
mov
pop
fstpt
lret
pop
push
das
cmp
cltd
gs
mov
pop
filds
ljmp
repnz
das
loop
mov
mov
cmpsl
testl
xchg
sub
gs
or
inc
sarb
iret
xchg
mov
mov
pop
pop
jae
stc
fisttpl
loopne
lds
jo
scas
jecxz
shrl
test
inc
icebp
or
pop
mov
or
jno
lods
in
xchg
aaa
ret
sti
and
push
xor
xchg
cmp
dec
xchg
arpl
jb
inc
dec
mov
mov
movb
fdivrs
or
push
mov
cmpsl
int
mov
stos
push
aam
fldcw
mov
cmp
jae
scas
mov
das
je
aaa
and
push
pop
inc
call
mov
dec
insl
dec
inc
or
rcr
lods
mov
dec
cld
lods
sarb
sbb
mov
insb
lret
xchg
hlt
inc
mov
in
pop
movsb
aas
sahf
jmp
and
push
mov
rorb
add
movsl
mov
mov
movsl
sbb
fnsave
xchg
stc
pop
lret
adc
test
lock
and
pop
arpl
mov
hlt
adc
xchg
push
mov
add
clc
cmp
test
jg
insl
repnz
in
inc
pop
add
pusha
xchg
mov
loope
lret
rcl
and
inc
or
lret
test
in
fstl
mov
or
pop
clc
mov
stc
xor
in
and
lahf
push
pop
pop
daa
imul
and
fs
cmpsb
lods
and
int3
stos
jb
and
in
jne
xlat
jecxz
or
adc
aad
repnz
inc
push
cltd
add
dec
fs
aam
mov
and
lods
addr16
imul
movsl
repz
int
stc
adc
aam
mov
pop
sarl
push
xor
data16
xchg
stc
aaa
sti
sbb
mov
in
cmp
insl
xchg
aaa
adc
xchg
push
fadds
sbb
sbb
hlt
push
aad
sbb
sbb
stos
mov
sbb
sbb
shrb
cmpsl
and
out
loope
cmp
fs
adc
sbb
mov
int3
cmp
stos
dec
and
mov
rorb
push
divb
jbe
or
dec
stos
cltd
inc
popa
inc
dec
push
inc
mov
into
jl
push
daa
out
stc
mov
in
mov
imul
lods
int
add
push
in
pushf
inc
jb
dec
pop
repnz
aaa
cld
push
pop
and
rcr
scas
out
xor
testb
andl
and
fwait
outsb
jp
jl
xor
aaa
lcall
cli
inc
adc
rcll
mov
out
or
movsb
push
xor
loop
pop
mov
lahf
je
pop
test
nop
inc
add
lods
fwait
push
cs
imul
push
ljmp
sbb
loop
aaa
adc
jno
loopne
inc
mov
mov
fisttpll
xlat
mov
xor
cmp
loop
xchg
nop
es
mov
mov
pop
pop
addr16
push
stos
push
push
jnp
jnp
rcll
mov
in
ret
clc
or
sbb
lods
mov
arpl
sahf
push
mov
lret
dec
and
loope
loopne
inc
ret
mov
lods
out
xchg
xchg
pop
lea
adc
rorb
hlt
pop
insl
in
dec
fwait
add
fcoml
cld
ljmp
pushf
push
jecxz
imul
mov
sbb
mov
pop
mov
or
sub
popf
shll
ljmp
xchg
jmp
dec
pop
pop
ds
add
notl
add
dec
mov
testb
cmp
pop
mov
stos
dec
sahf
scas
jp
stc
sub
int3
sbbb
flds
pop
ret
fnsave
pop
and
sbb
cmpsb
mov
lods
jp
inc
pop
pop
in
push
mov
inc
enter
or
call
lcall
shl
movb
mov
not
enter
out
subl
mov
mov
pop
insl
rol
inc
fdivs
xchg
mov
sub
fstl
pop
sub
popa
push
inc
push
clc
pop
int
ret
das
dec
push
loopne
fstl
stos
in
mov
ss
mov
das
cmp
xor
cmp
push
push
and
mov
loopne
fcmovnb
ficoml
mov
sbb
inc
sub
stos
push
mov
jno
mulb
xchg
roll
xchg
mov
mov
jge
nop
inc
outsl
xor
dec
ret
mov
add
push
xchg
push
or
mov
pusha
sbb
ds
jg
ret
adc
jno
adc
aam
ja
push
pop
in
movsl
adc
push
hlt
in
mov
add
arpl
mov
outsb
sub
inc
sbb
xchg
mov
or
pop
ja
sbb
jge
test
stos
ljmp
lcall
mulb
jbe
sbb
out
push
push
pop
and
and
inc
scas
out
cmp
jnp
aas
cmp
xor
inc
movsl
mov
fstpt
cmc
add
mov
dec
mov
in
ret
sbbb
int
std
jae
mov
push
mov
cmp
lds
je
jbe
addb
push
in
or
pop
idiv
ret
jns
mov
and
sbb
inc
insb
jne
lret
inc
mov
loop
test
pop
lods
repz
push
dec
jo
mov
scas
sub
add
lret
arpl
cmp
imul
add
pop
pop
mov
loope
test
cmp
pop
addl
and
stos
and
mov
mov
push
sahf
sarb
add
adc
xor
aam
stos
jp
or
push
daa
push
dec
dec
mov
imul
push
xchg
jecxz
inc
idivb
and
sarl
push
cs
and
cs
cli
int
pop
or
clc
push
mov
inc
sbb
in
or
ret
adc
fcoms
add
les
dec
fwait
stc
mov
xor
and
int3
stos
dec
push
sub
sti
jecxz
nop
ljmp
shll
jl
sar
jg
pop
test
cmp
rcrl
js
test
pop
scas
cmpsb
add
sub
xor
lods
push
jnp
ja
movsl
out
orb
push
in
dec
cwtl
jno
pop
stc
adc
push
mov
das
aaa
and
sub
rcrl
sti
bound
push
in
fstl
jno
fnstenv
jmp
inc
lea
jo
scas
bound
aas
xor
leave
xchg
fwait
xor
pop
roll
jge
mov
xor
dec
test
or
xchg
aad
push
dec
cld
iret
std
pushf
fisttpll
in
mov
gs
inc
aad
jae
das
sub
add
sbb
sbb
cmpsl
lods
ffree
inc
add
stos
cmpsl
mov
xor
mov
jno
test
cmp
dec
pushf
xchg
or
pop
add
and
popf
push
dec
ficomps
dec
xor
jno
mov
dec
js
or
add
daa
data16
psubd
je
cmp
jns
mov
ret
jmp
mov
mov
out
loopne
lret
es
lock
shr
lods
mov
in
int
or
ljmp
mov
test
out
jne
lods
sbb
fcomp
or
cmp
cli
xor
mov
rcrl
icebp
mov
and
mov
add
ljmp
outsb
fs
inc
sub
pop
sub
outsl
adc
ss
rep
jg
stos
ret
ss
pusha
rorb
push
jle
loopne
roll
and
jge
std
test
mov
in
cwtl
das
ds
es
mov
ja
popf
mov
mov
fs
es
push
ja
add
add
into
pusha
popf
add
ret
out
mov
mov
dec
or
mov
or
sti
sub
aaa
fldcw
pop
cli
mov
xchg
outsb
mov
dec
add
xor
and
sbb
sbb
and
lods
mov
sahf
jl
xor
sub
int
into
rcrl
inc
push
in
jnp
inc
fcmovb
add
cld
std
mov
sbb
push
out
xchg
mov
adc
ret
aad
jecxz
dec
aad
dec
outsl
or
xor
add
pop
cmpsb
inc
dec
push
xor
jo
pop
xor
jmp
nop
mov
loope
stos
mov
out
push
mov
sbb
xchg
push
pop
push
push
xchg
mov
idivl
stc
je
push
fwait
dec
xor
sbb
push
push
sti
shlb
pop
add
adc
pop
push
xlat
mov
rolb
push
mov
int3
or
xchg
mov
call
add
addr16
push
lods
out
in
jecxz
add
adc
into
push
sahf
jge
sub
or
sti
iret
add
mov
add
pop
push
cmp
mov
mov
dec
xchg
xor
mul
gs
sub
mov
jle
mov
jmp
clc
incl
popa
mov
xor
out
mov
inc
add
dec
adc
addr16
int
push
adc
ret
push
push
xchg
or
cs
loop
ja
lods
aam
pop
dec
and
loop
aad
mov
ja
adc
std
cmp
xchg
mov
ret
xchg
cwtl
in
pop
loope
fimuls
xchg
xor
sub
mov
stc
rcrb
xchg
stc
shll
xchg
loopne
jl
xchg
jmp
je
jo
mov
jae
xchg
aad
sbb
sub
jl
lods
dec
mov
test
into
and
inc
loope
mov
loope
xchg
std
hlt
stc
fwait
shlb
sub
xchg
jp
dec
sbb
insl
es
dec
adc
pop
fdivl
dec
and
fiadds
add
jg
jecxz
xchg
mov
xchg
pop
xchg
outsl
and
push
fsubrl
pop
out
aaa
mov
mov
xchg
jmp
cmp
xor
push
dec
xor
mov
lods
aam
cwtl
cmp
bound
xchg
pop
jns
lds
nop
push
adc
out
shl
pop
push
sbb
mov
mov
mov
je,pn
les
push
sahf
xor
jmp
pop
sbb
xor
ud1
mov
data16
repnz
popa
gs
stc
in
es
fcomps
mov
sub
mov
mov
leave
pop
mov
jle
and
into
aas
iret
cmp
cmp
mov
sub
mov
cltd
sbb
rclb
adc
jmp
movsl
mov
test
cld
scas
sub
and
aad
mov
mov
mov
sub
xchg
adc
aas
je
into
out
rclb
sub
sbb
dec
or
repnz
sahf
je
hlt
aam
pop
sub
cli
mov
sub
push
push
out
arpl
gs
mov
mov
outsb
inc
xchg
mov
pop
xor
dec
incb
stos
imul
idivl
pop
and
jae
xor
push
push
out
lds
jp
iret
lea
bound
pop
pop
xor
lods
xlat
cmc
or
mov
dec
hlt
adc
mov
notl
stos
out
add
add
xlat
lcall
js
data16
icebp
and
mov
sbb
add
and
adc
clc
lret
mov
nop
push
jno
dec
adc
mov
cltd
lods
and
sbb
cltd
dec
arpl
adc
or
push
mov
loopne
scas
and
jl
xchg
jecxz
cltd
dec
push
loope
xlat
nop
jle
and
dec
xchg
fsubl
pop
sub
pop
xor
xor
sub
clc
call
add
jnp
or
xchg
js
add
scas
and
adc
inc
outsb
scas
stos
xchg
test
jbe
iret
sbb
into
jns
jecxz
test
mov
inc
cmp
cmp
mov
adc
cmp
inc
sub
inc
xchg
adc
mov
enter
bnd
inc
mov
ret
sahf
mov
popl
jo
call
and
cmpsb
and
shlb
jnp
mov
out
lret
xor
sub
sbb
pop
adc
stos
es
stos
mov
mov
movsb
iret
cltd
imul
and
xor
outsl
xlat
mov
sub
insl
mov
dec
jne
push
call
adc
aam
jns
push
push
xor
pop
ficoms
aas
insb
movsl
aad
cli
int
add
xchg
andl
pop
cmovp
mov
and
or
fdivrp
push
call
insb
lahf
je
testl
pop
pushf
mull
jmp
add
aam
ret
mov
movl
jbe
pushf
or
fdivrs
xchg
cs
scas
jg
sbb
ss
xor
inc
pop
cmc
addr16
add
ret
lcall
insb
aas
aam
pop
mov
lock
push
dec
insb
mov
arpl
inc
jl
lea
inc
shlb
std
add
mov
fldpi
inc
inc
cld
cmc
rcll
ss
lds
movsb
lock
cltd
push
dec
out
inc
dec
xor
xchg
dec
push
xorb
call
stos
rcll
mov
addl
mov
pop
pop
mov
in
les
sub
ja
andw
cmp
lret
and
cmpb
push
lahf
mov
jle
sbb
mov
push
adc
push
mov
divl
jae
xchg
jecxz
popa
popa
sbb
and
xor
or
call
arpl
lock
in
push
mov
dec
xchg
mul
rclb
jne
mov
add
cmpsl
or
sbb
lods
or
leave
add
add
sbbl
loopne
inc
pop
fstl
inc
cmp
int3
xchg
sub
xchg
mov
push
push
mov
mov
repnz
push
lock
adc
inc
std
sarb
js
inc
test
fsub
sbb
mov
roll
fs
pop
cmpsl
fadd
pop
sub
push
cli
mov
sbb
sahf
test
xchg
push
rcrb
movsb
push
mov
clc
psrad
jge
insl
and
or
adc
mov
mov
sarb
adc
std
cmp
sahf
push
aaa
sbb
hlt
fisttpl
push
bound
push
jecxz
jmp
pop
and
aas
push
jecxz
xor
daa
push
lahf
cmpsb
hlt
pop
out
dec
int3
ja
mov
cmpsb
stc
lret
add
addr16
pushf
aas
jb
or
or
insb
rcrb
mov
in
jnp
jae
outsb
pop
in
push
out
subl
adc
jmp
mov
dec
jno
sahf
jge
push
add
out
mov
insb
xchg
cmc
add
add
jg
push
adc
lods
jne
pop
nop
xor
sub
push
std
cltd
pop
dec
sub
shll
mov
pop
add
push
jmp
pop
sub
xor
mov
mov
and
in
cmp
sub
dec
icebp
sub
xor
insb
scas
sub
add
adc
pusha
call
mov
sub
push
pop
mov
pop
fdivrl
adc
insl
mov
movsl
fisubs
cmp
mov
test
dec
jge
insb
mov
es
out
stos
fmul
cmpsb
jmp
inc
pushf
jnp
and
sub
cli
add
in
push
fwait
subb
shrb
fsubr
jl
das
test
inc
xchg
pop
leave
and
hlt
adc
push
fcoml
cwtl
fwait
clc
add
mov
loop
mov
aam
push
and
stc
pop
repnz
inc
ss
adc
subl
sub
cmp
dec
rcrb
popf
rcl
das
xchg
add
pop
and
xchg
push
xchg
push
or
in
dec
push
out
xchg
out
gs
mov
outsb
sahf
mov
jg
inc
xchg
stc
push
jbe
xchg
movsl
divl
mov
cld
inc
in
imul
mov
shrb
andb
mov
insl
movzbl
mov
pusha
jb
jno
insl
pop
xor
pop
sub
loop
pusha
shr
xchg
arpl
fwait
pop
and
jns
add
lock
and
popl
jmp
inc
ja
jl
pop
scas
dec
loop
movsl
loop
out
ret
icebp
fidivs
sbb
add
xchg
lock
cmp
sbb
sti
popa
dec
int3
sti
xchg
mov
testl
dec
adc
sub
stos
mov
outsl
filds
dec
mov
sahf
mov
gs
stc
sahf
fiaddl
int
xchg
jecxz
mov
cmp
inc
daa
test
setp
cmp
mov
das
or
push
movsb
fmull
stos
dec
iret
das
lahf
aad
lea
jbe
scas
sbb
mov
pop
icebp
dec
mov
mov
jns
scas
mov
outsb
in
cmp
xor
pop
sbb
push
loop
xchg
jecxz
jp
sahf
cmpsb
rcrb
jo
cwtl
mov
pop
sub
push
stc
add
inc
ss
cli
mov
ret
cmp
fnstsw
movsb
jnp
and
adc
push
mov
mov
rcrb
stos
imul
mov
stos
ret
cmpsb
adc
nop
pop
and
sub
push
outsl
add
xchg
xor
fs
in
or
and
xchg
cmpsl
mov
lcall
inc
add
fsubr
pop
sahf
push
mov
xchg
hlt
shll
cmpsb
sub
mov
sti
mov
test
cmc
clc
cli
jecxz
push
lret
sub
insb
and
mov
std
mov
hlt
cmp
mov
push
rolb
shrb
and
je
cli
repnz
out
daa
jns
fists
sub
mov
dec
cmpsl
jno
fdivrl
in
les
jle
xchg
mov
repnz
rcll
in
dec
out
jge
sub
sti
xchg
pop
lret
inc
in
push
gs
aas
xchg
cmpsw
mov
in
pop
scas
cld
test
pop
daa
in
dec
mov
loope
jbe
in
xor
push
mov
mov
or
dec
pushf
add
out
lcall
fistl
fadd
addr16
add
mov
cmp
mov
rclb
arpl
into
adc
and
lcall
adc
xchg
dec
mov
aas
add
xor
and
mov
ret
and
add
fiaddl
add
repnz
fildll
push
out
and
dec
xchg
sbb
scas
dec
and
pop
xchg
es
sti
or
mov
xchg
fwait
sbb
lret
shrl
sbb
fsubl
pop
ss
bound
jo
xchg
xchg
lret
mov
jb
subl
cmp
dec
ret
xorb
js
addb
mov
sti
jg
sahf
stos
jb
or
inc
fs
clc
fwait
pop
push
insb
subb
sti
in
out
jbe
lods
not
mov
fcmovnbe
stc
shlb
xor
popa
filds
push
or
xchg
sub
bound
enter
outsb
push
shlb
arpl
pop
mov
cmp
and
cld
xor
mov
ror
pop
and
imul
dec
out
in
push
xor
xchg
aas
loopne
sbb
jmp
ss
pop
push
idivb
fnstsw
dec
clc
test
aas
xor
test
sbb
fiadds
roll
jg
into
adc
loop
test
int3
pop
sarb
lock
pop
add
xor
jns
jae
lds
pop
cs
sbb
aaa
mov
cli
lret
sub
rol
inc
cwtl
push
repz
sahf
jb
loop
pop
fisubl
xor
dec
xor
daa
test
mov
inc
cmpsl
xor
cmp
mov
pop
xor
and
adc
fistpll
adc
sub
mov
nop
cs
sub
xchg
mov
mov
cmp
ffree
incl
ja
ljmp
mov
fwait
stc
adc
lahf
push
xlat
pop
push
insl
add
sub
in
leave
dec
lods
push
fsub
mov
stos
mov
pop
mov
pop
in
inc
adc
xchg
stos
xor
sbb
daa
xchg
adc
icebp
inc
push
pop
jnp
jmp
mov
sarb
xor
push
xchg
sbb
outsl
jle
insb
idivb
outsl
ret
arpl
and
cld
fnstcw
orb
sbb
jl
push
pusha
sbb
mov
inc
addr16
pop
inc
jle
mov
dec
and
stos
dec
dec
inc
jo
sub
cld
push
cmpsl
repnz
test
sub
in
push
and
mov
pop
cmp
out
mov
add
cmp
mov
sbb
sbb
decl
es
or
dec
xor
call
jbe
xor
in
cli
es
lea
bound
inc
mov
adc
je
ja
mov
out
jl
popf
hlt
xchg
mulb
push
xchg
cmpsb
je
imul
xchg
xor
out
lds
pop
imul
jne
xor
and
xor
test
fsubrs
and
sbb
ror
lret
pushl
jmp
out
call
sarl
ds
mov
push
test
fimuls
mov
jbe
cmc
les
ja
pop
jae
out
mov
movsb
sub
mul
out
cmp
pop
out
das
or
push
divb
lods
imul
xchg
add
lock
xorl
aam
xchg
lods
pop
sub
and
cmp
inc
xchg
insl
mov
rcll
mov
lock
scas
mov
inc
into
adc
ss
push
mov
in
mov
into
ror
dec
adc
int
sub
clc
gs
shll
movsl
cltd
mov
pop
xchg
push
adc
sub
outsl
mov
fwait
je
test
pop
xor
call
adc
mov
loop
adc
pop
sarb
adc
adc
adc
push
lahf
dec
scas
shll
add
sbb
repnz
xchg
mov
mov
pop
xchg
cmpsl
imul
jle
jle
mov
and
test
call
repnz
or
jo
cmc
pop
mov
ljmp
push
sti
mov
cwtl
jae
rclb
and
jge
loop
add
pop
jno
mov
push
xorl
mov
add
fst
jne
fstl
xlat
push
sbb
iret
sarl
jle
enter
loopne
fsubs
inc
es
mov
es
imul
fidivrl
pop
xor
loope
cmp
shll
imul
icebp
adc
add
hlt
stc
scas
imul
mov
cwtl
lods
mov
sar
push
jno
mov
jo
add
jl
bnd
std
shlb
sbbb
ficomps
xchg
sub
cmp
adc
or
mov
sbb
or
sbb
pusha
or
lret
call
dec
rol
add
add
test
scas
mov
fwait
ss
jmp
ss
mov
nop
lcall
mov
mov
test
jl
xchg
fcmovnbe
je
pop
mov
movsb
add
mov
jno
aas
push
test
inc
js
cltd
push
dec
faddl
std
lahf
cmpl
iret
inc
js
mov
ficomps
adc
jmp
loopne
movsl
xor
jmp
mov
imul
fwait
ljmp
or
addb
cli
xchg
sbb
sub
mov
mov
das
mov
and
fidivl
out
pop
testl
das
sbb
lcall
inc
xchg
aaa
dec
out
add
loopne
ljmp
xor
mov
pop
in
xor
sbb
ja
test
movsb
mov
hlt
fnstcw
jae
jl
adc
sub
lods
push
movl
inc
mov
or
cmpsl
xor
arpl
ficoml
das
jo
hlt
xchg
int3
int3
sub
inc
loop
cmp
rolb
cli
push
and
rol
cltd
jne
jnp
mov
out
pop
jmp
loop
adc
mov
push
jmp
sub
in
stos
js
jp
insl
test
cs
jmp
iret
mov
out
push
js
mov
in
cmp
loope
push
mov
cmp
mov
or
xchg
repnz
or
inc
jecxz
mov
icebp
lock
test
mov
push
test
in
xchg
cmp
xchg
mov
bound
jecxz
pop
loopw
adc
sarb
inc
das
addr16
pop
cmpsl
orb
loope
pop
sbb
lea
rolb
push
cmp
je
jno
call
scas
ficompl
orb
mov
jecxz
add
mov
jb
aad
lds
add
test
nop
push
test
andl
inc
jo
cmpsb
ret
lea
add
sti
das
mov
and
scas
lret
xor
push
lods
cli
shrb
push
push
pop
mov
int3
leave
sbb
xor
mov
and
inc
cltd
mov
add
cmp
add
inc
into
xorl
mov
mov
jae
movsb
vmovaps
push
add
rcll
inc
loop
ss
fwait
lds
je
xor
mov
dec
es
out
push
push
inc
cltd
mov
in
les
and
add
add
les
xchg
xchg
mov
icebp
in
out
les
push
aam
sub
insb
in
fstps
lock
jl
lahf
inc
lahf
out
icebp
lods
das
or
add
mov
and
scas
into
mov
jecxz
test
cmpsl
es
loop
les
xchg
xchg
bound
jge
xchg
movsl
imul
mov
lret
dec
and
and
pushf
fwait
mov
lahf
aas
jns
cmp
push
hlt
std
addr16
mov
popf
nop
sub
push
arpl
lret
cli
call
pop
push
lret
es
push
jns
lcall
xchg
insb
mov
add
dec
or
dec
sub
adc
lock
andl
sbb
dec
pusha
cld
incl
xchg
xor
ret
shl
ret
pop
mov
movb
in
cmp
xchg
jae
or
in
out
fdivs
dec
lods
push
mov
jp
bound
sarl
mov
inc
jecxz
and
lds
mov
ret
or
sbbl
or
inc
subl
sbb
fst
movsl
aam
mov
or
test
jge
pop
xchg
notl
fdivl
aaa
sub
setb
lcall
jae
dec
das
shlb
mov
pop
nop
inc
add
out
popa
fisttps
je
xor
fisttpl
enter
out
cmc
addr16
and
aam
sahf
movsb
xchg
xor
push
cmp
stos
mov
in
jl
push
xor
dec
jp
ret
pop
dec
scas
and
loope
call
cli
mov
in
clc
call
pop
stos
enter
cld
push
mov
daa
ss
jl
loope
aaa
add
std
mov
pop
sub
sub
push
mov
addr16
lds
int
dec
cmp
push
sahf
leave
std
stos
pushf
repnz
mov
frstor
xchg
test
popa
jg
xchg
mov
in
mov
push
jae
fimull
cmp
and
imul
in
xor
lahf
inc
or
inc
jnp
ja
rcll
loop
mov
pop
mov
sub
nop
push
adc
dec
push
mov
scas
into
stos
or
xor
adc
pop
push
fcoml
jmp
testl
inc
adc
mov
cs
shlb
sarl
aad
enter
mov
into
shrb
mov
and
add
test
pop
xchg
ret
push
insl
pushf
cwtd
bound
jnp
push
inc
cmc
add
adc
aam
ss
lcall
cld
mov
fadds
jmp
and
sub
jo
pop
int3
fists
or
push
out
lret
jp
in
pop
cmp
aaa
gs
fwait
mov
sub
cmp
iret
xchg
nop
js
inc
std
iret
aad
jo
arpl
into
test
mov
out
mov
scas
lea
mov
mov
push
lret
dec
cs
push
mov
sbb
sbb
in
shr
or
stc
aas
int
daa
ja
lahf
pop
pop
mov
sarl
ret
jb
cmp
mov
js
or
stc
je
pop
pop
popf
dec
mull
add
stc
lahf
push
mov
loop
mov
fisubrl
pop
pop
adc
scas
add
xchg
push
push
and
or
in
cmp
mov
movsb
add
or
rol
cs
jnp
bound
adc
adc
stos
and
imul
imul
shrl
mov
das
insb
movsb
insl
jae
mov
jae
adc
adc
sbb
sahf
cmp
dec
cs
xchg
out
int
imul
dec
and
repz
push
push
sub
add
data16
ret
inc
or
sub
cld
lock
js
lods
pop
push
mov
inc
and
xlat
lret
or
pop
pusha
cmp
jg
xchg
rcrl
loop
movsb
jecxz
ret
inc
loopne
mov
arpl
push
ss
mov
cmp
adc
sbb
sub
scas
pop
popa
out
je
cltd
xor
ret
cmp
popa
dec
data16
cmpsb
add
rorb
into
sbb
inc
pop
int3
pop
push
sbb
inc
sbb
data16
mov
or
sub
push
or
ss
xchg
pop
mov
pop
mov
lds
dec
fsubr
xlat
mov
lds
adc
movsb
sbb
iret
int
and
fimuls
push
in
sahf
mov
imul
insl
jmp
mov
into
lcall
jmp
lock
cmp
test
cltd
roll
fucomi
pop
flds
adc
out
test
pusha
mov
shlb
add
mov
clc
push
cltd
jae
sarb
test
adc
lea
sti
cmpsl
xchg
xchg
pop
sub
outsb
fdiv
xchg
ja
lahf
xor
icebp
rcll
nop
or
xchg
test
out
sub
dec
sbb
scas
xor
push
mov
mov
popf
call
or
testl
mov
movsb
add
into
mov
sbb
pop
cmp
add
xlat
push
adc
clc
pop
sti
xchg
je
jmp
fnstcw
mov
or
xor
jp
sbb
je
and
js
mulb
sahf
push
jns
dec
mov
xor
xchg
mov
in
pop
inc
lret
pop
mov
pop
int3
movsl
add
mov
and
pusha
dec
dec
mov
push
in
cmpsb
mov
frstor
rclb
and
ret
xchg
aaa
pop
dec
mov
inc
and
xchg
dec
xchg
jo
push
insb
loopne
les
fcmovnu
dec
movsl
mov
or
jmp
sbb
iret
jecxz
sti
and
add
push
insl
and
in
dec
xchg
and
xchg
lret
jno
jnp
sbb
repnz
jbe
xchg
int
mov
jmp
or
add
std
nop
lcall
test
mov
daa
bound
sub
dec
mov
push
push
daa
stc
cli
repz
mov
xor
hlt
je
arpl
inc
mov
adc
test
mov
jnp
sub
dec
lret
in
out
icebp
and
lahf
mov
sar
mov
jl
clc
or
pop
outsl
mov
mov
mov
dec
push
jmp
pop
shrb
xchg
hlt
jecxz
pop
loopne
dec
cmp
xchg
sahf
mov
insb
xchg
aas
fcoms
fmulp
inc
cld
pusha
push
loopne
jno
xor
lahf
sbb
add
xor
or
mov
push
sar
mov
adc
cmp
mov
xor
jmp
insl
push
repz
lods
cmc
pop
ljmp
xor
shr
test
pop
leave
adc
mov
xlat
lcall
inc
xchg
pop
movsb
call
xchg
scas
push
shl
dec
fstpl
out
mov
loop
pop
xlat
xor
adc
movsl
sbb
push
flds
mov
clc
or
out
fsubl
or
pop
push
and
or
fisubrl
addr16
pop
sbb
xchg
pop
cmp
pop
mov
addr16
sub
push
cld
push
inc
mov
sarl
repnz
popa
stos
cld
popf
mov
loope
loopne
add
push
out
pop
pop
or
stc
cli
mov
dec
mov
jb
xchg
pop
inc
or
std
cld
repz
mov
int
mov
into
xor
sub
jge
inc
daa
outsl
adc
mov
loopne
mov
jmp
jb
push
adc
iret
test
jae
sbb
adc
shr
jecxz
fnsave
into
clc
mov
or
fiaddl
jb,pt
sbb
inc
cmp
cld
push
sbb
push
icebp
mov
neg
or
pushf
stos
fcmove
loope
lock
lret
jp,pn
pop
and
pop
xor
or
mov
movsl
jb
or
fcmovb
sahf
fcomps
popl
inc
jae
inc
ja
xor
sbb
pop
xchg
sbb
lds
sub
je
jne
inc
jge
and
jg
jno
popa
out
sub
pop
pop
sub
sti
push
sbb
loop
dec
cmc
into
mov
in
sti
inc
sahf
push
pop
xor
sbb
jecxz
cli
mov
jbe
ret
fiaddl
lahf
movsl
stos
pop
xor
sub
sub
xchg
sti
stc
mov
mov
push
subl
push
push
scas
pop
lods
mov
js
sbb
xchg
adc
cwtl
in
out
mov
push
jp
xor
pop
mov
cltd
sub
mov
jp
and
or
dec
mov
cwtl
cmp
xchg
sbb
insl
pmulhuw
es
jno
add
dec
pop
je
pop
mov
pop
arpl
push
les
xor
and
pop
movsb
roll
hlt
pop
in
dec
sub
or
inc
fildll
nop
int
jnp
ret
ret
cmpsl
loopne
jbe
pop
test
sbb
and
scas
xchg
add
adc
mulb
push
and
and
mov
sbb
sbb
jecxz
loop
lea
add
sub
leave
rcrl
mov
pusha
jp
jge
fsts
nop
jmp
fists
lahf
add
push
daa
lods
je
jmp
pop
scas
icebp
sub
cli
pextrw
dec
fwait
inc
andl
loop
cmp
add
popf
pop
xchg
movsl
push
sub
int3
imul
shll
test
xchg
jne
mov
aaa
movsb
js
out
mov
jo
fdivs
inc
mov
cmpsl
fwait
sub
jb
shlb
and
pop
mov
and
notl
sbb
fst
mov
in
pusha
andl
mov
decb
adc
insl
xchg
dec
mov
fisubs
cmp
pop
pop
pop
jne
push
pop
insl
inc
add
mov
mov
je
or
jecxz
sarb
ret
int
xor
inc
shrd
les
cmpsb
in
ljmp
add
push
icebp
fstl
movb
mov
jne
mov
scas
addl
les
jnp
outsl
sti
icebp
mov
jle
sbb
daa
cmp
inc
out
jne
and
add
and
cmp
pop
jg
lahf
cmp
jnp
push
shl
cmp
aam
jp
add
and
jp
or
mov
xchg
or
inc
xchg
mov
rcrb
and
ret
in
adc
iret
insb
daa
or
xchg
xor
clc
mov
mov
movsb
and
pop
dec
xchg
xchg
mov
dec
push
idivb
pop
inc
inc
sub
leave
lods
cld
dec
iret
pop
pop
jge
jbe
lret
push
fucom
test
mov
pop
or
popf
fnsave
mov
sbb
push
xchg
jno
add
or
cmpsl
shrl
mov
test
in
xchg
shl
jle
mov
aad
inc
repnz
cli
dec
lods
pop
scas
mov
rcl
pop
jns
xchg
jae
pop
jg
insl
dec
inc
psubd
push
inc
jecxz
adc
hlt
xor
fwait
dec
push
flds
and
shl
clc
stos
pop
and
jns
mov
in
or
mov
mov
aaa
fwait
enter
scas
lea
imul
jl
repz
into
cmc
fs
mov
adc
and
hlt
mov
sbb
dec
adc
push
test
mov
loope
pusha
dec
add
out
repz
ja
cmp
in
mov
sahf
out
addr16
add
out
out
fiadds
and
push
imul
add
xlat
decb
test
add
clc
imul
adc
push
mov
out
lahf
cmp
pop
cmp
cmp
insl
nop
push
iret
cmpsl
cwtl
in
punpckhwd
popf
ret
push
jmp
fcompl
stos
ljmp
sub
mov
pop
mov
mov
fldl
xor
js
dec
out
test
test
faddl
andl
inc
movsl
pop
pop
xchg
dec
and
push
notl
adc
clc
ljmp
sub
fnstcw
sbb
in
xor
sbb
dec
in
jg
adc
xchg
sub
test
add
dec
fimuls
mov
test
push
arpl
cmp
pop
dec
xor
jnp
jp
and
call
adc
mov
in
sahf
cmp
push
xchg
mov
push
sbb
roll
pop
sbb
jns
icebp
lock
fwait
pushf
pop
sub
sub
push
jbe
lods
mov
mov
cwtl
mov
popa
fiadds
sbb
ret
out
pop
scas
lods
inc
rolb
xchg
mov
mov
cmpsl
test
dec
cmp
add
mov
cmp
daa
cmp
and
pop
fdivr
gs
add
into
mov
sbb
loopne
xor
push
mov
int
or
xchg
repz
sbb
insb
or
stos
push
mov
lret
insl
pop
sbb
sbb
mov
and
rorl
div
mov
push
and
lea
pusha
fstps
iret
ja
adc
out
je
mov
popa
adc
loop
mov
mov
cmp
in
mov
lock
cld
or
cmp
mov
dec
aas
and
inc
insb
jg,pn
nop
add
xor
test
int
jle
adc
jbe
mov
lock
fs
cld
and
jne
pusha
mov
popf
and
adc
sbb
in
outsb
cmpsb
jmp
adc
fnstcw
inc
add
xor
repz
test
js
aas
mov
inc
lret
jl
mov
dec
jae
ds
test
bound
cmp
lret
mov
mov
push
pushf
sub
mov
stos
inc
rcrb
iret
dec
sub
mov
inc
insb
cli
push
lea
inc
ret
mov
je
popa
repz
in
jb
cmpsl
mov
es
mov
cmc
or
loope
fdivr
lret
sbb
aaa
in
subps
jae
mov
pop
mov
sub
lcall
cltd
imul
xchg
cs
iret
xchg
stos
mov
or
test
das
pop
and
ret
xor
sti
or
testb
xor
cwtl
push
jge
shl
std
je
add
sti
jp
mov
push
nop
loope
test
fstpl
lds
fldenv
inc
ljmp
inc
add
inc
sub
mov
pop
out
dec
call
les
dec
jle
jo
xchg
leave
ret
mov
lahf
cmp
popa
shlb
pop
adc
lods
imul
mov
cltd
sub
jns
divb
enter
lcall
sub
jl
in
repz
ss
mov
jbe
flds
sbb
adc
xor
lahf
adc
sub
addr16
xor
mov
or
sbb
cmp
push
mov
ret
inc
jae
mov
sbb
xchg
cli
mov
cmp
mov
mov
shll
pop
jne
pop
push
or
fmulp
pushf
out
cmpsl
or
mov
adc
movsl
pop
jbe
cmp
stos
iret
shrb
xchg
adc
xlat
ret
xor
push
out
and
out
and
lea
dec
ret
dec
adc
test
cld
in
js
sbb
add
lea
out
repz
add
lret
adc
or
mov
xor
sbbl
or
mov
pop
shlb
daa
mov
inc
pop
test
xor
lea
xor
loope
fstpl
cli
pusha
fcoml
dec
add
cmc
jl
aas
cmp
sarl
addl
pop
and
lret
xor
and
jnp
xchg
pop
shrl
ja
fwait
pop
out
lret
mov
cmc
shrl
xor
push
sub
je
std
or
fmull
cmp
xor
mov
mov
stc
faddl
mov
add
jb
fwait
lds
pushf
or
stos
inc
cmp
popf
push
dec
xchg
lahf
xchg
mov
cld
in
sub
pop
add
adc
inc
jbe
adc
fs
sbb
adc
inc
sti
and
xor
lahf
adc
mulb
push
cmpsb
les
mov
fisttpll
dec
inc
sahf
pop
and
sti
xor
ja
cmp
movsl
hlt
pop
jle
fucomi
mov
jmp
imul
add
push
shll
adc
rclb
cmp
fmull
stos
sub
sarb
loope
movsb
dec
dec
push
jno
daa
nop
outsb
and
ds
push
jb
mov
and
pop
scas
or
push
push
inc
into
jmp
popa
pop
cmpsb
imul
mov
cli
insb
je
and
push
xchg
into
cmpsb
adc
jo
fldt
int
mov
cs
pusha
mov
jl
mov
push
mov
call
mov
adc
or
idivl
in
aaa
cwtl
inc
popa
add
mov
cmc
dec
inc
sbb
dec
fnsave
inc
stc
mov
add
jno
adc
repz
jmp
push
mov
push
add
or
adc
icebp
xchg
xchg
dec
mov
inc
mov
imul
lret
and
mulb
aad
dec
gs
sahf
leave
fs
and
mov
sub
lds
sbb
out
xor
xchg
lea
lcall
hlt
dec
mov
shll
push
push
bound
or
dec
mov
add
shlb
xchg
or
lds
aam
jns
scas
sub
mov
mov
in
testb
or
shld
orl
loop
adc
push
stos
pop
add
jbe
adc
repnz
jg
int3
push
pop
inc
pusha
in
addb
leave
inc
fs
pop
mov
push
jmp
mov
adc
sbb
jns
into
fwait
or
outsl
cmp
cmp
mov
lods
xorb
ret
adc
inc
in
inc
les
adcb
sub
xchg
mov
rclb
cmp
adc
or
stc
inc
shll
or
add
out
mov
loop
mov
popa
cltd
or
daa
lret
or
sub
jbe
fistps
jbe
mov
test
mov
dec
test
ficompl
xchg
iret
jb
or
out
mov
jb
and
cwtl
mov
add
test
enter
jp
and
mov
fsubrl
jne
arpl
shrl
push
mov
or
adc
mov
repz
sbb
ret
sbb
lea
pop
subb
cwtl
shll
dec
mov
fisubs
jecxz
jb
gs
fnstcw
jg
sbb
push
ret
xchg
jno
lods
cmp
xchg
mov
mov
insl
cltd
mov
pop
cmp
pop
pop
movsl
cmp
in
cmp
adc
bound
pop
es
or
rep
adc
inc
add
fs
push
iret
cmp
adc
repnz
xchg
mov
icebp
cli
out
or
nop
outsb
mov
ffree
or
pop
fxch
jb
bound
mov
out
pop
xchg
scas
mov
out
adc
stos
imul
and
repnz
cmp
int
stos
adc
insb
jb
xchg
mov
xchg
pop
imul
fucomi
xchg
rcrl
xor
ret
mov
add
pop
adc
xchg
xchg
jmp
popf
dec
ss
push
cmp
popl
mov
or
nop
ret
xor
mov
bound
jne
popa
ss
dec
stos
sbb
adc
sahf
and
and
pop
and
jl
fmuls
mov
leave
inc
mov
dec
aam
cld
lods
pushf
fs
lcall
cld
enter
leave
inc
jg
lea
mov
xchg
xor
sub
lock
dec
mov
rcll
test
jge
lret
fcomip
test
cmp
lret
aas
pop
pop
test
cmpl
insl
lods
test
xchg
fs
stos
in
cmpsl
xor
mov
stc
push
lahf
std
adc
pop
push
popf
inc
adc
dec
adc
rcrl
sub
mov
pop
into
int3
push
outsb
cmp
lock
mov
or
xchg
adcb
test
and
cmp
inc
push
xchg
dec
adc
xlat
sub
push
ret
mov
fbld
outsb
fwait
xor
iret
ret
adc
xor
iret
mov
inc
xchg
sbb
loope
pusha
pop
dec
jae
ljmp
bound
push
sub
cmpsl
js
mov
sbb
lods
or
movsl
popa
hlt
sub
mov
pushf
adc
dec
jg
jg
pop
test
xchg
dec
pop
jo
insl
stos
mov
mov
test
jle
lahf
push
push
test
rclb
jge
and
mov
dec
aas
divl
stc
and
jbe
fdivr
fildll
scas
aaa
leave
les
xlat
push
jns
scas
insl
je
mov
movsb
jge
sub
cmpb
fwait
stos
loope
fnstcw
aaa
xchg
push
mov
add
out
mov
hlt
adc
fisubrl
in
xor
inc
test
push
cmp
lods
stos
mov
loop
jae
sti
cmp
ficoml
mov
fcoml
bswap
hlt
push
fldl
cltd
fsubl
mov
mov
cli
xchg
ja
push
mov
inc
and
ja
mov
pop
xchg
sbb
adcb
stos
shl
mov
bound
xor
mov
pop
xor
test
scas
pusha
stos
into
sub
xchg
js
movsb
jg
repz
push
xchg
popa
xchg
ret
shlb
repnz
and
mov
fdivr
inc
nop
idiv
mov
mov
mov
faddl
sub
jae
mov
push
ljmp
ljmp
mov
inc
bnd
xchg
adc
sti
cld
mov
dec
sbb
shrl
push
ja
adc
xchg
fwait
pop
fstpt
fdivrp
cltd
nop
xchg
sub
pusha
rorl
xchg
and
lds
push
loopne
inc
outsb
xchg
lods
sub
or
jae
jno
adc
xor
jae
outsb
push
lea
fisttpl
inc
in
pop
out
std
mov
test
dec
or
inc
out
movsl
sarl
push
sbb
jns
mov
jno
push
shlb
cli
loop
dec
xor
outsb
push
push
jecxz
shlb
sub
sbb
fisttpll
fildl
lahf
es
sbbl
mov
clc
adc
dec
inc
cmp
adc
fwait
in
hlt
xor
mov
push
arpl
and
or
mov
je
mov
and
hlt
das
aam
mov
mov
in
stos
andb
adc
push
ss
testl
cld
aaa
sub
rep
test
je
ja
in
inc
sti
out
loop
xor
sbb
arpl
ret
bound
push
or
gs
inc
jo
in
add
sbb
jl
xor
stc
lahf
mov
add
xor
and
outsb
mov
sbb
mov
mov
iret
sahf
cmpsl
sbb
cmc
outsl
add
lods
call
lahf
mov
lret
mov
imul
sti
xor
rcrl
pusha
movsl
out
js
sahf
add
aam
hlt
add
int3
sub
in
lret
sub
cmp
pop
mov
outsl
cmp
add
out
stos
fadds
and
dec
pop
pop
pushf
scas
jge
push
jnp
jnp,pn
xchg
push
das
popf
addb
pop
xor
call
mov
pop
jno
mov
pop
cs
aaa
jg
adc
add
js
pop
dec
add
push
movsb
out
mov
lea
mov
sti
stc
add
scas
xchg
lahf
pop
adc
push
in
dec
or
pushl
mov
sub
dec
dec
pop
inc
cmp
push
mov
lret
or
add
shrl
add
stos
mov
push
adc
push
data16
leave
aaa
ds
inc
sbb
push
lcall
mov
sbb
add
cwtl
push
pop
or
out
fildll
icebp
shlb
add
in
mov
movsb
xorb
xchg
push
ds
lods
mov
out
in
mov
xlat
sbb
and
out
push
sbb
mov
mov
adc
in
fdiv
negb
adc
pusha
jns
jg
xchg
fmuls
pop
or
mov
xchg
and
jne
cwtl
std
adc
xlat
repz
int
cmp
test
xor
mov
clc
or
cld
outsl
pop
lock
mov
jbe
outsl
shll
je
inc
loope
addb
inc
push
adc
push
pop
or
in
push
rorl
lds
mov
int
fwait
roll
push
mov
sbb
push
stos
add
dec
outsl
lcall
xor
mov
sbb
or
xchg
and
lret
call
arpl
xlat
stc
cmc
lock
mov
push
pop
dec
cmp
mov
sub
lret
fstpl
lcall
jp
jno
mulb
mov
mov
loope
fld
inc
and
es
fstps
stos
hlt
sub
or
insb
mov
jecxz
jns
shrl
sbb
jne
inc
aad
adc
jmp
arpl
movsl
push
ljmp
fsubr
iret
or
mov
adc
mov
adc
pop
in
jo
lahf
pop
xchg
xchg
xor
push
pop
out
aas
lahf
in
pop
jno
das
scas
adc
dec
pop
push
dec
jmp
mov
jbe
ss
pop
mov
out
jnp
sub
arpl
repnz
es
jecxz
pop
add
push
int
mov
aas
pop
test
mov
mov
mov
iret
das
insb
add
test
or
int
mov
aam
aam
adc
dec
or
int3
dec
call
fbstp
mov
pop
test
or
add
sub
jmp
mov
in
test
jae
mov
test
mov
sbb
sar
dec
out
jle
int
ret
fs
lret
out
pop
cmp
andb
cld
jecxz
dec
inc
xor
insb
sbb
daa
xchg
call
cmp
sub
jb
fcoms
inc
out
ss
dec
std
push
loop
orl
adc
jmp
push
pop
out
pop
insb
inc
inc
push
roll
and
and
das
xchg
ja
sbb
aas
ret
mov
arpl
idiv
into
mov
sti
int
pop
mov
xchg
in
or
jne
shlb
mov
inc
testl
mov
pop
jg
cmp
fisttpl
stc
hlt
jle
xchg
cmc
dec
lods
mov
and
and
cmp
sbb
aam
fidivrs
mov
push
ja
mov
xchg
loopne
or
stos
cmc
add
jns
lods
jmp
jb
fsts
rolb
lahf
orb
out
adc
jle
or
jae
les
daa
jb
out
pop
mov
in
push
cmp
lret
or
xor
in
mov
lods
ds
shrl
clc
jge
fisubrs
cli
rcll
aas
mov
incl
mov
lock
ss
cwtl
clc
cmpsl
pop
bound
xlat
js
xor
outsl
xchg
aam
bound
adc
inc
cli
loop
push
sbb
add
daa
inc
xchg
push
ret
cmp
call
ljmp
arpl
and
cmp
call
dec
stc
and
adc
cmp
leave
sub
cltd
mov
mov
xchg
mov
sti
mov
sub
xlat
icebp
int3
or
push
and
fmul
and
dec
bound
adc
sub
addr16
pushf
nop
push
dec
add
push
pop
jecxz
xlat
add
stos
push
dec
movsl
mov
xchg
imul
mov
push
cmc
pop
push
push
stos
and
fcoml
jle
sub
sub
lcall
xor
and
mov
inc
shl
mov
out
xchg
sub
jo
loopne
cwtl
mov
es
or
mov
ja
popf
xlat
push
mov
cmp
stc
imul
fistpll
sub
lret
lock
or
ret
push
dec
mov
es
ficomps
and
jg
movsl
popa
out
push
jae
outsl
fwait
xor
adc
lea
lods
stos
mov
mov
mov
inc
out
repz
sbb
adc
movsb
and
xlat
mov
jno
sbb
add
pop
jbe
int
int3
mov
jns
sbbl
aaa
in
scas
sbb
ljmp
cs
push
pop
int
pop
data16
xor
sahf
out
mov
ja
inc
cmp
inc
les
mov
mov
push
xchg
inc
xor
clc
mov
and
push
pushf
adc
cmp
sti
pop
pop
cli
mov
mov
out
push
xchg
jle
scas
sbb
jnp
aas
jge
push
pop
xlat
loope
mov
adc
push
fwait
mov
and
pop
jg
jb
inc
jmp
jg
pop
les
mov
push
test
jmp
fbstp
dec
loope
jnp
adc
imul
cli
loopne
and
dec
inc
dec
add
or
cmpsb
xlat
orl
data16
gs
dec
dec
test
sbb
js
fcomps
lcall
push
mov
movsl
xor
sahf
jg
idivb
xor
push
test
stc
push
inc
pop
push
jp
jp
out
xchg
adc
cmp
jne
ret
inc
dec
xor
pop
pop
jo
insl
bound
push
shll
push
scas
jle
rolb
add
push
insl
sbb
mov
sub
hlt
mov
cmp
fisttpl
in
sub
mov
js
xor
mov
cld
cmc
and
cmpsb
mov
lods
std
push
adc
or
in
aas
add
int3
icebp
out
xchg
stos
addr16
jle
leave
xor
pop
sub
xlat
jge
jnp
mov
lods
sbb
stc
lock
mov
mov
fistl
ret
mov
sub
push
push
mov
mov
inc
push
sub
mov
xchg
sbb
sbb
hlt
xchg
cs
pop
jne
ds
add
shlb
shl
xchg
mov
cmpsl
idiv
pop
or
mov
mov
and
add
call
dec
sbb
sub
cmp
mov
xor
repz
cli
lcall
movsl
lcall
adc
xor
inc
mov
movsl
sbb
sbb
ds
jns
add
fcmovu
sbb
jne
lock
aad
mov
push
insl
push
cmpl
inc
sub
cmc
mov
adc
test
mov
cmp
sbb
cmp
sarl
dec
sarb
mov
loope
ljmp
fnstcw
jns
and
scas
push
push
cmpsb
in
mov
test
cmp
test
xchg
lods
cmpsl
pop
and
xchg
daa
cltd
sub
mov
icebp
js
sbb
add
inc
inc
cmpsl
testb
clc
std
mov
leave
mov
out
add
out
movsl
dec
popf
sub
arpl
mov
das
or
lods
mov
adc
lods
xchg
shrl
imul
push
xor
lret
into
cmp
push
filds
std
into
fdivl
outsb
hlt
ljmp
insl
inc
jecxz
sub
mov
arpl
sbb
popf
mov
xor
decl
lcall
lahf
add
pop
out
dec
mov
ret
repnz
push
std
xor
nop
ljmp
mov
xchg
jne
rcl
inc
mov
ljmp
je
mov
in
cli
mov
sti
ret
insb
sbb
mov
dec
icebp
inc
sarl
xchg
jns
cltd
imul
clc
and
out
pop
jmp
outsb
imul
lret
sbb
lods
loopne
insb
subb
and
aaa
popf
push
and
or
call
mov
mov
fsubrp
and
dec
das
and
mov
xor
out
imul
lds
inc
lret
xchg
es
or
and
inc
mov
sub
insl
and
out
arpl
lcall
daa
out
aas
cmp
fs
push
lret
or
data16
mov
mov
jo
lods
icebp
xchg
push
and
test
in
adc
jmp
push
test
stos
fcmovne
adc
pop
insl
mov
sbb
inc
aad
mov
adc
outsb
pop
jo
pop
repnz
call
mov
lret
push
add
imul
ror
int3
push
aas
popa
pop
sub
xchg
je
imul
imul
add
sbb
cli
jnp
movsb
out
adc
mov
inc
mov
xor
cmp
jbe
dec
sub
filds
push
inc
lock
aam
lods
mov
pop
mov
pop
add
adc
jmp
shrb
iret
hlt
sbb
xchg
lret
cmp
aas
rcll
dec
test
enter
dec
cmpsl
in
sub
and
push
add
scas
dec
mov
mov
lcall
pop
popa
pop
jecxz
call
and
mov
aad
push
bound
fidivrl
aaa
pop
negb
bound
sbb
test
mov
pop
push
out
mov
adc
pop
push
movb
add
sub
dec
addb
sbb
inc
fidivs
out
mov
test
lea
xorl
test
and
sbb
test
add
shrl
xlat
ds
fdiv
dec
adc
mov
and
sti
xlat
xor
cmpsb
push
push
xchg
mov
or
add
jo
rcl
mov
imul
ss
insb
sub
jmp
fs
or
push
aaa
out
sbb
ficompl
pop
ljmp
pop
pop
pop
and
test
lahf
add
in
pop
lret
cli
mov
out
in
je
mov
fs
push
push
icebp
insl
mull
movsb
out
std
push
loop
gs
jb
popa
push
sbb
pop
add
cmp
mov
mov
jle
xchg
dec
and
mov
xor
inc
test
out
ds
jmp
negl
ret
nop
adc
and
inc
cmp
inc
jp
dec
jne
sub
fistpl
jmp
mov
xchg
out
jns
fadd
xchg
or
lret
adc
cli
enter
pop
pop
add
mov
sbb
push
xor
pop
inc
mov
pop
inc
nop
stc
movsl
fs
mov
das
fsubrl
inc
movsl
imul
popf
movsb
cmp
mov
out
sbb
enter
mov
imul
and
add
leave
cmp
xor
xor
mov
mov
adc
ds
xchg
out
dec
and
int
xchg
int3
shlb
add
loop
stos
data16
hlt
loop
xchg
dec
or
jo
lahf
out
out
loop
mov
sub
adc
jae
negb
adc
lds
imul
push
push
push
ss
sbb
stc
jl
es
mov
and
xor
jge
daa
jae
test
jle
sbb
add
fsubrl
cwtl
jl
xchg
cmp
movsb
xor
movsb
xchg
jmp
add
fisubl
lods
int3
mov
adcl
mov
mov
add
add
fistps
dec
pop
imulb
addr16
out
fsubrl
clc
out
adc
dec
ljmp
add
mov
cmp
cmp
gs
push
cwtl
clc
xchg
mov
lahf
push
les
aaa
jne
fiadds
icebp
push
jbe
push
push
rclb
stc
loopne
push
mov
pop
aam
fsubrl
mov
movsl
jmp
lea
jge
push
mov
loope
fwait
dec
bound
in
lret
mov
mov
in
or
nop
aad
adc
dec
inc
das
cmp
pop
mov
xorb
lret
push
adc
mov
dec
sub
xchg
lret
push
loopne
dec
and
push
test
out
les
xor
cwtl
outsb
lods
xchg
aad
rol
add
mov
cmp
sbb
inc
pusha
movsl
sbb
stos
inc
sbb
sub
pop
sub
nop
test
shrl
mov
or
push
fistpl
rorb
lcall
xor
cmp
mov
lods
sbb
mov
xor
jl
xchg
imul
push
inc
xchg
nop
inc
pop
and
add
xchg
in
movsl
test
jle
jle
cmp
mov
rcl
sbb
scas
adc
or
bnd
pop
out
mov
gs
pop
in
or
push
cmc
iret
popf
jns
es
dec
test
iret
fistpll
sbb
lock
push
mov
dec
std
pop
mov
add
das
scas
push
mov
stc
imul
adcl
or
stc
imul
mov
test
fldenv
jle
jg
fimuls
cmp
ret
pop
add
lret
out
cli
movsl
sbb
mov
scas
loope
shlb
push
cmp
fisttps
sub
loop
arpl
cmp
in
jnp
loop
dec
sti
and
decl
cwtl
jmp
lea
shlb
mov
push
push
test
or
push
pop
inc
mov
in
mov
sub
push
fidivl
inc
out
push
lea
je,pn
push
mov
fistpll
cs
jle
xchg
inc
dec
mov
adc
jl
push
lret
push
out
sbb
cmp
push
mov
scas
lea
sbb
in
xchg
stc
out
mov
outsb
mov
mov
fsubr
in
mov
mov
loop
ss
iret
int3
sbb
and
lret
jle
jb
sub
dec
aaa
movl
dec
inc
xchg
sti
add
sbb
aaa
sarb
push
adc
cmp
xor
sbb
sbb
xor
dec
test
inc
push
je
pop
loopne
and
xor
test
jne
push
rorb
xchg
mov
push
aad
pop
movsl
push
mov
pop
dec
pop
xor
pusha
shl
and
fadd
outsl
lcall
xchg
sbb
idivb
pushf
pusha
out
or
xor
and
sbb
daa
sub
es
sub
xchg
outsb
cld
out
hlt
mov
popf
cmp
cmp
mov
dec
pop
mov
lods
sub
pop
dec
mov
loop
clc
adc
loop
fsubr
int3
and
push
repz
dec
out
out
mov
mov
and
push
lcall
add
dec
and
insl
mov
lea
ljmp
xchg
sub
mov
dec
sub
data16
repz
loopne
sbb
mov
fists
outsb
aam
mov
jne
push
stos
mov
xor
roll
insb
push
cwtl
jnp
loope
orl
in
adc
jg
cltd
scas
mov
enter
cmc
lret
loope
das
dec
or
mov
in
cmp
hlt
push
out
mov
xchg
out
stos
jp
push
cmc
jp
shlb
jno
cmp
inc
jmp
bound
jno
sbb
jns
xchg
sbb
jns
sti
js
roll
xor
out
mov
daa
mov
stc
aas
int3
xchg
lds
adc
mov
mov
cli
daa
loop
in
scas
mov
aad
mov
mov
dec
pop
in
test
stos
scas
andl
fmul
roll
push
aad
xor
sbb
jle
adc
lds
scas
les
icebp
mov
inc
jmp
lret
cmp
movsb
jb
cli
fiadds
fidivrs
adc
inc
out
sub
stc
lods
mov
sbb
xlat
fnstcw
xor
pop
push
xchg
add
fs
aad
pop
movsl
push
ret
inc
je
sarb
loop
mov
pop
cmp
add
xor
add
xchg
mov
js
aad
fstp
cmc
ret
cli
mov
mov
dec
nop
and
xlat
jns
xchg
into
xchg
sub
xorb
int3
nop
loop
xchg
push
and
insb
dec
and
lods
lds
pop
dec
xchg
mov
nop
imul
nop
idivl
repnz
gs
cltd
sub
jle
cmp
and
push
lea
gs
add
adc
out
aad
adc
cmpsb
inc
test
cmpsl
inc
push
les
fbstp
lock
repz
or
mulb
inc
leave
aam
cmpsl
lcall
sbb
cmc
movl
adc
push
push
or
xchg
cld
sarl
inc
mov
clc
ficomps
xor
cmpl
nop
jae
push
das
sti
cmpl
and
sub
cmpsl
popf
icebp
sbb
xchg
scas
pop
ljmp
jmp
or
add
out
mov
push
xor
js
cltd
add
fstps
and
stc
jno
adc
jns
lds
fnstcw
rclb
sub
test
jl
rcr
movsl
psubd
mov
mov
xor
dec
xchg
add
jno
je
push
xchg
push
lock
push
cmp
neg
xor
fs
cli
ljmp
add
push
lods
decl
push
pop
lcall
push
int3
push
cmpsb
lret
and
pop
mov
lret
jns
or
out
ja
add
call
stc
test
outsl
bound
dec
or
or
mov
push
lahf
mov
inc
test
mov
or
pop
lret
stos
xchg
setae
xor
jbe
fsubs
mov
lods
repz
in
ret
fidivrs
dec
jge
pusha
cmp
cmp
adc
xor
push
stos
sub
xor
lock
enter
movsl
push
fidivrl
scas
push
leave
cwtl
jmp
sbb
jle
mov
mov
mov
pop
iret
repnz
fmuls
or
adc
roll
push
lock
jl
push
sbbb
push
and
push
inc
outsb
add
jmp
inc
add
daa
into
outsl
dec
cmp
sbb
frstor
in
andl
mov
inc
addl
pop
pop
lods
mov
cmc
push
in
inc
jne
pushf
adc
ret
jne
cwtl
hlt
push
pop
test
lret
cli
sbb
xchg
les
int3
xchg
xor
inc
dec
mov
inc
adc
outsl
addl
pop
aas
sbb
push
fisubrl
mov
cmp
imul
cmp
pop
jge
test
clc
mov
pop
sub
sub
out
je
pushf
adc
dec
mov
call
dec
shrb
lods
lods
pop
enter
add
sub
mov
jmp
int
adc
mov
insl
mov
shrb
add
fchs
push
jl
pop
hlt
test
sahf
dec
lret
cmp
pop
in
cmp
mov
fisttpl
inc
std
jb
jge
push
dec
clc
mov
cmpsl
arpl
scas
or
xor
jne
inc
call
pusha
fldt
mov
fcos
fmulp
dec
lret
dec
jo
and
xor
pop
movsl
jmp
inc
sub
sub
jne
imul
push
fidivl
ja
jp
popa
pop
std
fbld
inc
and
cltd
cmpsb
jge
push
adc
ljmp
mov
push
pop
mov
add
mov
ds
mov
mov
outsl
dec
mov
sbb
out
mov
fwait
jb
cmc
sub
dec
mov
add
bound
popl
xchg
adc
sub
daa
add
sub
sahf
push
iret
into
dec
lcall
jmp
cmpl
out
mov
push
and
inc
inc
movsb
jne
dec
cmovp
dec
or
popf
adc
jle
xchg
mov
leave
scas
add
push
rorb
outsl
sbb
add
insl
cmp
jecxz
mov
push
out
arpl
mov
pop
xlat
scas
outsl
pop
les
lret
dec
xchg
pusha
jl
loopne
out
xchg
enter
adc
fwait
sbb
faddl
lock
sub
ss
fdivl
inc
push
repnz
push
leave
loope
add
mov
insl
test
bound
xor
push
insb
xlat
inc
bound
and
aad
xchg
xor
shll
mov
sti
outsl
repnz
add
fwait
cmp
jmp
or
insl
cmp
push
sahf
int
mov
out
sub
xchg
or
dec
pop
xchg
cmp
jo
jle
jle
jbe
sub
subl
jp
es
push
dec
orb
mov
pop
xchg
cli
in
ljmp
lret
adc
sub
lahf
xorl
xor
cmp
scas
sub
rclb
seto
mov
push
jmp
mov
and
sub
push
jmp
int3
test
cmp
aaa
lret
cmpb
add
mov
out
sub
xchg
xor
mov
dec
in
mov
add
lret
lahf
pop
dec
clc
push
cwtl
xchg
sarb
fisttps
mov
push
or
dec
out
out
movl
adcl
jne
pop
ret
loop
fisttps
lret
sbb
or
data16
ret
push
jle
popa
inc
adc
dec
xchg
arpl
inc
outsb
mov
imul
repnz
add
adc
xchg
push
imul
push
push
adc
in
icebp
cmp
scas
push
cmp
inc
cmpsb
inc
shl
sub
cmpsb
sbb
shl
out
adc
dec
stos
xchg
popa
mov
and
repnz
into
stos
incb
dec
jle
ret
xchg
cld
hlt
insl
out
fdivrl
adc
fcoml
inc
test
jp
ljmp
imul
loopne
sbb
orl
scas
dec
or
mov
addr16
add
sub
sub
xchg
xchg
jb
push
sahf
stc
add
cmpsb
fyl2x
push
cmp
mov
dec
pop
mov
jecxz
pop
iret
dec
jle
mov
into
jmp
xchg
mov
pop
sarb
cltd
sbb
fucomi
jmp
addr16
repnz
pushf
std
pop
fidivrs
cmc
cli
mov
test
mov
dec
fmuls
das
mov
xlat
shll
jmp
mov
iret
push
shll
loopne
sbb
sbb
push
inc
insl
mov
subl
fldcw
mov
sti
pop
or
and
mov
adc
or
test
lea
sbb
cs
fdivr
lods
mov
jnp
mov
mov
cmp
popl
fdiv
fbstp
jmp
add
mov
inc
outsb
leave
fcmovbe
sbb
sub
sub
js
nop
stc
stc
jle
push
adc
mov
xor
xor
ror
pop
xchg
loop
adc
fisubl
adc
bswap
addb
sahf
repnz
fwait
mov
sub
and
push
ja
jo
aam
js
adc
dec
mov
xor
test
loop
popf
jnp
jl
pavgb
xor
pop
call
inc
and
aaa
pop
loopne
cmp
sbb
ror
shr
test
pop
and
inc
sbb
ja
or
enter
jo
lahf
mov
cmp
push
jle
sbb
xchg
lcall
sbb
push
dec
nop
xchg
cmp
dec
or
repz
scas
mov
into
ror
mov
fwait
xorb
test
fiaddl
mov
mov
test
xchg
adc
test
mov
push
scas
jecxz
push
mov
movsb
cld
pop
rcrl
cmp
push
add
fnstsw
adc
pop
in
testb
daa
xchg
std
icebp
rcr
dec
idivb
popa
adc
mov
fsubs
inc
lret
jns
lret
loopne
jno
aaa
push
popf
adc
call
stos
push
inc
pop
inc
loopne
xchg
repz
test
inc
cmpsl
add
sub
repnz
mov
lret
fcomps
dec
adc
inc
arpl
mov
hlt
ret
xchg
cmp
in
sbb
fdivl
adc
dec
jmp
fs
ret
frstor
in
xor
xchg
xchg
jno
pushf
cmp
movsl
xchg
dec
sahf
xchg
int
push
je
jle
adcb
pop
cmpsl
repnz
pop
push
cwtl
inc
gs
pop
mov
push
jns
bound
xor
sarl
stc
mov
fiadds
sarl
ss
lock
xchg
clc
or
mov
arpl
int
jle
sub
inc
xchg
push
add
ret
imul
adc
cmpsl
add
add
test
xchg
or
push
clc
pop
iret
push
sbb
push
nop
sub
cmpsl
aad
daa
fcomps
xor
in
dec
xor
sub
popa
dec
mov
push
dec
mov
in
outsb
test
stos
cmp
dec
xchg
insb
pop
mov
das
mull
scas
fbld
pop
hlt
inc
mov
bound
call
push
inc
mov
lock
sbbb
push
repz
push
mov
push
push
lret
pop
scas
jmp
dec
imul
ja
fnstenv
push
adc
push
add
mov
sbb
lahf
aaa
push
into
jne
cmp
jecxz
xchg
fists
lahf
add
fsts
dec
adc
xadd
dec
bound
fwait
cwtl
shll
sahf
cmp
and
mov
fstpl
xor
sbb
adc
pop
or
cwtl
rcl
add
inc
xor
insl
movsl
test
insl
das
adcl
dec
leave
pop
into
out
aas
push
or
arpl
push
or
int3
add
out
adc
hlt
sub
out
test
xor
decl
mov
xchg
fwait
shlb
das
mov
cmp
filds
lahf
pushf
in
fildll
sbb
mov
xor
ljmp
fucom
imul
sbb
jge
fists
jno
fdivrs
sbb
mov
pusha
andb
stos
xor
rorb
stc
and
aam
imul
push
dec
push
cli
jecxz
cs
mov
mov
ljmp
ss
into
test
jmp
sbb
push
push
push
adc
test
add
push
sub
pop
mov
cld
pop
js
sub
and
cmpsl
out
jg
popa
cmp
fbstp
cwtl
fildll
shl
adc
or
dec
repnz
pop
sbb
or
arpl
call
loop
jmp
mov
mov
sahf
inc
sub
lea
push
rorb
test
fcoms
and
shlb
in
out
repnz
add
mov
test
rcrb
cmp
lea
lret
in
daa
jle
xor
jb
lds
fimuls
dec
mov
pop
shll
insl
outsl
and
dec
add
jge
out
ret
and
push
jp
test
fistps
test
inc
mov
test
test
adc
inc
push
test
mov
mov
mov
inc
adc
dec
aad
fistpll
push
stc
xor
dec
pop
ja
sbb
mov
scas
shll
cmp
nop
adc
fidivl
bound
mov
movsb
inc
xchg
imul
dec
and
shrb
in
movsb
out
stos
shll
shl
arpl
push
cmp
outsl
data16
mov
rcrb
xchg
xchg
sti
mov
gs
jb
aas
mov
jp
xchg
fcmovnb
adc
popf
jne
aam
insb
push
into
cltd
movsl
pop
out
shrl
dec
mov
xchg
cmp
lods
adc
dec
xor
pop
inc
mov
and
decb
jmp
mov
mov
pusha
repz
movsb
insl
add
mov
or
jmp
add
das
imul
lcall
fbstp
decb
pop
pop
add
mov
test
mov
mov
fcomip
mov
mov
xor
out
test
add
lods
sub
cmp
ss
jae
jmp
stc
lea
xlat
in
sub
roll
in
aaa
mov
jle
outsl
ret
or
xor
js
pop
incl
shll
ret
mov
push
sub
mov
push
iret
nop
adc
xchg
into
jbe
sarl
xor
or
mov
push
int
dec
add
dec
in
mov
lods
inc
rorl
mov
sbb
outsl
ficomps
adc
jg
stc
jmp
fisttps
sbb
jge
xor
sub
leave
mov
mov
sarl
dec
mov
inc
or
cmp
out
cmp
imul
xor
bound
pop
xor
call
sbb
mov
inc
lret
and
mov
outsb
mov
inc
popf
or
sub
js
loopne
lret
negb
cmp
stos
add
aam
fs
push
lret
clc
and
jae
dec
insl
mov
dec
inc
inc
or
repz
jns
rclb
mov
jl
cwtl
jb
adc
xor
sub
pop
arpl
push
ja
dec
push
xchg
sub
adc
dec
pop
dec
sbb
and
push
xchg
daa
or
mov
or
in
outsb
jns
push
test
jle
mov
mov
lret
sti
xor
or
push
sbb
dec
stc
sub
and
xor
js
inc
cmp
inc
test
jecxz
mov
jl
push
sbbl
xchg
ja
fistpll
stc
push
cmpsl
jmp
test
cmp
rcrb
inc
push
out
lahf
fs
jp
mov
in
je
adc
pop
xor
jb
out
adc
sbbb
mov
mull
out
sahf
mov
bound
xlat
push
mov
lret
mov
mov
mov
mov
push
das
mov
fldl
int
mov
enter
lds
les
cmpsl
ja
test
leave
mov
add
js
addr16
jg
jo
xlat
sbb
fbld
stos
imul
mov
mov
sbb
ljmp
ja
lds
mov
mov
pop
das
test
mov
ja
scas
iret
out
jmp
adc
mov
jne
in
cmp
dec
and
into
aam
fisttpll
push
out
sahf
out
icebp
sbb
pop
and
dec
ss
mov
cld
data16
sbb
push
dec
out
into
stos
lods
push
dec
sbb
daa
push
fdivrs
and
scas
inc
xor
xlat
mov
and
sahf
stos
sub
xchg
sbbb
daa
sbb
sbb
xor
mov
jmp
icebp
cmp
xor
push
pop
jae
xor
and
sbb
in
push
imul
in
test
push
popa
mov
imul
ss
or
fwait
popl
lock
jl
pop
jns
gs
mov
fisubrs
pushf
fnstenv
js
vmulpd
cmp
aaa
sub
xchg
outsl
enter
and
cmp
sahf
popa
xor
cmpsb
xchg
add
inc
xchg
jmp
repnz
and
das
sbb
push
aaa
mov
addl
push
icebp
push
adc
or
lcall
pop
stos
mov
repnz
inc
sahf
mov
shll
insl
mov
lcall
xchg
data16
or
push
invd
adc
loope
and
jle
lea
fneni(8087
lcall
and
pusha
adc
rolb
sbb
outsl
roll
iret
es
xchg
loope
mov
repnz
or
insb
lods
cwtl
out
dec
mov
and
cmpl
sarb
sbb
pushl
inc
iret
jge
addr16
cmp
add
dec
daa
push
cltd
aaa
imul
testl
mov
fldcw
out
shl
rolb
xchg
pusha
sbb
xor
mov
cmpsl
mov
bound
pop
aas
sbb
add
ret
nop
cs
mov
mov
int3
sbb
mov
ljmp
sbb
fidivl
out
xchg
xor
or
sbb
jno
inc
xchg
fistpll
push
shrl
push
or
inc
repnz
mov
nop
lock
mov
leave
sub
stos
mov
mov
cwtl
std
adc
mov
cmp
ljmp
push
mov
dec
insl
fistps
fidivs
or
cli
loop
sub
push
in
xchg
mov
ffreep
je
push
subl
pop
dec
dec
mov
jo
mov
fwait
ja
stos
testl
and
es
orl
repz
ficoms
cmc
jno
jne
int3
ds
iret
pop
leave
pop
lods
movsb
adcl
pop
jno
dec
lret
push
test
xchg
or
lods
adc
pushf
or
xchg
cli
pop
xchg
mov
out
sbb
or
dec
pop
sub
out
adc
mov
pop
cwtl
popf
jno
sbb
dec
mov
or
mov
pop
movsb
fdiv
xor
andb
adc
scas
pop
or
hlt
and
pop
add
jl
fnsave
add
mov
leave
cli
jb
adc
nop
lahf
cmp
add
or
inc
imul
xlat
push
lcall
mov
stos
in
or
sub
mov
pop
lock
xchg
and
nop
lcall
movsb
cmc
cmp
push
adc
add
xor
aaa
call
cld
adc
cmpsl
pushf
jecxz
cmp
dec
push
popf
push
inc
pop
fs
imul
xor
xlat
and
dec
fcoms
cmp
sub
mov
cli
xchg
lret
out
loop
icebp
cmp
cmpsl
adc
lret
cmp
lret
adc
cmp
xlat
int
xor
jp
shll
jbe
shlb
pop
lea
popa
pop
aas
sub
call
dec
hlt
mov
pop
fstl
jo
in
pop
aaa
mov
xor
sub
ret
xchg
xchg
movsl
xor
jae
mov
loope
test
push
push
fdivr
ljmp
movsl
jle
lret
arpl
push
xchg
das
xchg
mov
xchg
push
bound
mov
ja
jnp
push
out
jo
adc
push
jl
push
inc
sub
fmull
push
or
and
int3
fwait
push
xorl
mov
cmp
orl
out
loope
sbb
push
je
push
add
push
stc
loopne
fcmovnb
adcb
pusha
inc
push
jmp
add
fcompl
sub
ret
sbbb
inc
in
test
jmp
cmc
jbe
xchg
cs
es
stos
je
adc
sbb
sub
xor
test
stos
addr16
bound
jno
cmc
jle
xchg
jp
push
insb
or
inc
xor
cmp
sbb
cmp
orl
scas
pop
jl
adc
insl
and
adc
mov
imul
sar
and
dec
shr
iret
push
test
sub
pushf
shll
repnz
sahf
jbe
leave
cmpl
mov
rorl
inc
mov
mov
dec
xlat
push
repz
ljmp
loop
movsl
mov
adcb
imulb
xor
loopne
repnz
andb
jle
pop
scas
adc
and
sti
xchg
xchg
dec
dec
inc
adc
xor
inc
lea
loope
je
mov
cli
fisubrs
xchg
icebp
test
mov
mov
lret
insb
inc
pop
pop
cli
stos
push
mov
out
in
cmpsb
sub
add
cmpsl
fdiv
lock
lods
sub
pop
cwtl
hlt
imul
bound
imul
call
cmp
push
or
int3
bound
mov
call
jmp
jmp
mov
cwtl
sub
sbb
sti
xchg
mov
mov
mov
jl
out
or
inc
das
adc
cs
cmp
in
cmp
sub
cli
fcmovnb
sub
xchg
mov
mov
int
mov
hlt
push
sub
int
sbb
push
stos
dec
mov
or
or
popf
sbb
jno
xchg
cltd
out
adc
pop
aad
shll
incl
xor
mov
jo
into
sub
fstp
sbb
add
xor
sub
push
inc
jo
xabort
push
out
idivb
xor
in
inc
scas
pop
jns
pop
jle
sub
xchg
movl
xor
mov
and
add
shrb
hlt
xlat
and
pushf
sti
shlb
dec
push
outsl
outsl
into
cltd
and
cld
ds
pop
adc
out
cmp
dec
cmc
testl
mov
std
mov
inc
pop
mov
shlb
dec
or
jecxz
mov
dec
adc
mov
push
ss
dec
add
imul
mov
or
xchg
in
andl
sub
mov
in
pop
jno
aas
out
mov
bnd
jl
fistl
jo
mov
jnp
ljmp
mov
xchg
std
pop
in
rolb
inc
mov
repnz
outsl
iret
aam
iret
jno
pop
imul
into
movsl
xchg
into
pop
sub
mov
pusha
xchg
mov
sahf
repz
pop
lret
aam
jmp
shrl
push
mov
pop
xor
lret
cmp
das
js
movsb
insb
fs
out
cmp
xor
add
loop
inc
cmpsl
fs
in
lret
icebp
xchg
lock
negl
loopne
lock
dec
lea
iret
push
out
add
jne
mov
adc
pop
shrb
and
cmp
fistpl
rsm
in
mov
xor
mov
fwait
push
cmc
call
adc
and
lahf
fmul
pusha
fstpt
mov
into
xor
iret
aas
push
bts
mov
sub
mov
mov
fwait
sbb
mov
sub
xchg
or
fimull
mov
sub
lret
jb
xor
adc
xchg
clc
jb
lret
pop
or
sbb
pop
xchg
test
lret
fdivs
xor
mov
repnz
xor
xchg
cmc
sbb
push
icebp
add
add
aad
test
pop
lcall
fsubl
mov
ds
add
dec
add
add
cmc
in
test
dec
inc
cmp
int
xchg
jle
cli
push
jne
sti
ja
stc
bound
inc
xchg
pop
mov
cs
aad
cmp
stc
mov
cmp
cli
fwait
test
push
repz
loop
adc
cmp
mov
pop
pop
xor
inc
es
outsb
jg
test
mov
mov
stos
mov
xchg
out
adc
cmpsb
adc
mov
lret
mov
shrb
f2xm1
sub
addl
mov
add
inc
pop
lcall
or
adc
or
inc
dec
add
int
std
inc
sbb
ds
mov
mov
xor
pop
cmpsb
pop
inc
and
dec
jnp
pop
rcrl
mov
lods
cmp
fwait
push
hlt
testb
cmp
out
cmp
lret
imul
test
movb
jae
dec
mov
lods
jl
add
mov
mov
rclb
out
and
sbb
mov
dec
sbb
sub
xchg
sahf
das
or
cmp
lcall
test
or
or
cmp
pop
test
stos
stc
mov
test
stc
leave
adc
lcall
inc
adcb
dec
jle
and
leave
and
dec
xchg
ds
in
mov
sar
loop
xor
fsubl
repz
xchg
add
scas
jge
mov
lods
mov
loope
stos
inc
mov
pop
mov
jns
test
fists
loopne
mov
adc
pop
ret
jns
or
or
dec
bound
adc
adc
pop
and
sbb
sbb
and
cmp
mov
aad
xchg
cmp
sahf
adc
sub
push
adc
addr16
jb
cmp
mov
mov
sti
sarl
cli
shlb
xchg
fldl
and
sbb
push
and
leave
mov
add
inc
movsb
jnp
jno
int
push
test
mov
and
sbb
or
push
mov
aaa
jne
xchg
aaa
cld
mov
push
pop
jns
je
in
sbb
mov
adc
scas
fimull
cmp
add
adc
or
mov
fwait
mov
or
or
dec
lock
dec
mov
ljmp
cmpsb
sahf
xor
jae
xchg
jae
into
jmp
and
cmp
sub
fstpt
shll
mov
jno
aaa
adc
test
scas
lret
fidivrl
dec
xchg
xor
insb
xor
pop
out
sbb
xchg
and
das
xor
shll
add
cwtl
push
mov
in
sub
mov
xchg
test
stc
ret
std
icebp
add
add
sbb
outsl
push
fsubl
adc
lahf
xor
inc
das
sti
add
movsb
mov
xor
pusha
pop
mov
sbb
lea
fwait
lahf
idivl
xchg
sub
push
adc
jbe
dec
mov
inc
push
inc
sub
ds
imul
int
cli
xchg
loope
add
pop
pop
dec
jecxz
lret
sbb
sbb
or
sti
bound
testb
idivl
out
scas
pop
aad
lret
pop
enter
dec
sub
decl
adc
or
daa
xchg
ds
ja
xchg
jbe
lahf
pop
js
push
sub
call
inc
ja
sub
orb
mov
or
push
cmp
inc
repnz
call
add
imul
dec
xlat
xchg
jp
or
sbbl
xchg
popa
push
lods
stos
xor
lock
inc
cmp
rolb
pushf
add
cltd
add
inc
xchg
pusha
mov
sub
mov
jbe
sbb
cs
cmp
and
or
and
shrl
adc
rolb
adc
daa
es
ss
mov
sahf
movsl
ja
stos
mov
in
lock
mov
sbb
pop
insb
stc
xor
mov
push
out
pop
sub
mov
push
mov
das
arpl
incb
dec
ljmp
in
rolb
jmp
xor
sbb
sbb
inc
in
mov
adc
cmp
xor
mov
xor
std
sbb
test
loop
and
fwait
and
call
mov
jo
pushf
dec
idivb
stos
ficoms
sahf
inc
jmp
inc
lcall
mov
lods
jo
adc
imul
push
sarb
mov
push
stos
lret
pop
std
mov
or
fwait
cmpsb
mov
cmp
xchg
sub
inc
and
push
inc
sub
add
movsb
int
out
fisubl
push
inc
adc
or
hlt
mov
imul
cs
sub
mov
mov
sbb
inc
jmp
or
mov
shll
add
lods
lahf
sub
lret
mov
lock
iret
es
add
mov
imul
sub
out
or
dec
xorb
test
jne
in
daa
int
and
push
xchg
xor
fwait
inc
pop
cmp
testb
sahf
sbb
pop
lods
faddl
jno
push
or
out
pop
es
inc
in
adc
test
lahf
xor
lahf
and
push
dec
je
lret
movsb
out
mov
inc
lock
dec
sbb
xchg
scas
dec
xchg
cltd
jle
dec
aam
xor
arpl
ja
dec
push
jmp
lds
adc
das
xor
pop
inc
jae
pop
sti
jno
adc
sub
inc
rorl
sbb
insl
mov
dec
inc
sbb
outsl
cwtl
movsl
ljmp
cmpsl
xchg
mov
inc
repnz
adc
es
fsubl
arpl
ja
cmp
iret
test
lea
call
add
sub
fwait
jp
cmp
pop
jae
dec
jle
in
or
inc
push
daa
inc
lcall
pop
bound
jo
push
lahf
test
jns
or
out
pop
mov
ds
mov
test
leave
mov
mov
pop
inc
dec
pop
inc
or
pusha
je
push
mov
jns
mov
xchg
sub
loop
addl
xchg
sub
div
pop
pop
push
mov
into
xchg
add
sarb
fs
mov
pop
cwtl
inc
and
shlb
testb
stc
stos
cmp
jl
jb
gs
addl
ja
push
and
mov
sbb
xor
jnp
in
inc
out
adc
cmp
sub
cld
xchg
adcl
icebp
or
pop
sbb
lds
push
mov
mov
jnp
lea
xlat
fstpl
push
jno
sbb
fwait
loopne
outsb
fldt
std
pop
mov
or
into
cmpsb
push
sub
je
mov
cld
adc
int3
mov
or
cli
leave
mov
inc
push
cmp
subl
repz
pop
push
jmp
xchg
xchg
xchg
test
dec
push
pop
cmpsb
lcall
cmpb
sbb
stc
inc
dec
inc
incb
push
ljmp
insl
out
mov
inc
fsubs
mov
out
inc
dec
mov
xchg
jmp
aad
out
loopne
test
mov
imul
lock
sbb
mov
mov
addr16
mov
push
aad
inc
data16
sub
dec
push
jg
sub
or
cmpsl
inc
js
sub
mov
popa
cs
in
jmp
jbe
mov
outsb
or
pop
jl
dec
xchg
mov
xor
pop
sub
push
mov
aam
add
cwtl
mov
sbb
out
sbb
xchg
es
xor
cmc
stos
fwait
push
enter
popa
mov
cbtw
pop
lret
fwait
mov
add
outsl
add
xlat
add
and
mov
jno
ret
into
inc
push
fucom
dec
dec
mov
mov
fidivrs
xor
rcrl
fcomp
or
mov
add
into
xor
push
int
jo
cs
inc
add
shrb
cld
mov
stos
jne
mov
push
shrl
mov
sub
cmc
leave
addb
les
int3
or
lds
ss
add
and
jge
mov
test
adc
jbe
mov
pop
inc
xchg
mov
movsl
addb
xor
jno
lds
sbb
mov
pop
je
lock
xchg
shrb
or
xor
fisubs
dec
rcr
ret
repz
js
cmp
xchg
in
inc
cli
je
ret
lcall
xor
adc
jg
inc
cmpsl
add
mov
icebp
into
mov
loop
insb
fnstsw
pop
loop
jmp
enter
mov
je
fcoms
inc
and
lods
pop
insl
push
fstp
push
mul
out
jne
dec
push
dec
test
mov
dec
adc
inc
rol
cmp
lea
push
and
or
loop
mov
push
jle
enter
sbb
inc
ret
sbb
test
and
cwtl
sbb
aam
nop
pusha
push
mov
cs
push
test
mov
std
js
or
lods
jns
pop
addr16
inc
xor
push
mov
xor
and
mov
popf
add
xchg
jb
mov
push
and
loopne
stc
movsb
mov
es
subb
loopne
push
ds
pop
xor
sbb
idiv
es
jp
inc
scas
mov
adc
dec
pop
mov
stc
stos
mov
loop
push
inc
inc
movsl
pop
fimull
repnz
stos
xabort
inc
cmpsb
pop
and
adc
xor
cs
add
mov
les
jl
mov
loopne
bound
or
mov
pop
int3
aas
std
dec
xchg
inc
xchg
clc
fnstcw
xlat
ret
push
adc
dec
jge
xor
subb
int3
sti
xor
and
cmp
lret
shll
push
jbe
cmp
repnz
jnp
sub
or
mov
fldz
aad
sahf
mov
cmpsb
pop
lea
xorb
jns
adc
das
fisttpl
mov
and
or
xor
jge
mov
pop
cs
mov
jne
lds
pushf
dec
inc
das
shll
dec
mov
adc
adc
int
sbb
sub
dec
xchg
pushf
test
enter
jae
jnp
aam
add
test
pop
and
and
div
imull
das
bswap
in
mov
shll
fs
mov
or
mov
ret
lods
icebp
jne
lods
push
inc
add
movsl
popa
adc
xorl
sti
call
mov
xchg
pusha
jnp
and
paddusb
mov
out
jg
and
jmp
adc
daa
jge
ror
push
or
jo
lret
lea
mov
pop
imul
clc
fnstenv
mov
lds
adc
pop
mov
incl
mov
and
shll
std
into
add
dec
popf
mov
sbbl
int3
dec
xchg
fidivs
imul
cmp
or
sbb
sbb
orl
xchg
push
out
inc
repz
pusha
mov
insl
es
movq
mov
jbe
mov
sub
stos
add
adc
shlb
arpl
insb
test
jl
and
fst
sti
pop
lcall
cld
jecxz
clc
push
jae
stc
pop
add
gs
ds
mov
stos
jg
arpl
sub
cmp
dec
mov
push
into
xchg
ds
jmp
shrl
add
jle
rclb
adc
add
neg
shll
mov
inc
stos
mov
shrb
sbb
cs
ds
jbe
push
sahf
subps
xchg
jno
push
pop
pop
lock
add
imul
into
inc
mov
ss
les
cs
lea
fdivr
cmp
inc
push
das
jns
pop
push
xchg
inc
ret
cmp
sub
ja
and
inc
lret
jge
sub
es
mov
mov
popa
out
jecxz
cmp
sbb
shll
add
xlat
xchg
lds
pop
sub
test
sub
sti
jmp
shll
in
jb
pop
jle
add
sub
jecxz
cmpl
dec
insl
cmp
pop
jno
push
arpl
mov
xchg
flds
lea
orl
fsts
push
jb
push
lea
pop
lahf
xor
sbb
sbbl
or
out
push
dec
repz
sbbb
lahf
xor
in
enter
sar
out
push
mov
shlb
inc
xchg
out
out
pop
popf
cli
add
and
push
outsb
inc
leave
xor
mov
mov
fisttpll
jae
jne
push
pop
aaa
jae
xchg
aas
jb
inc
push
add
lcall
dec
roll
out
call
lods
hlt
std
mov
add
sti
enter
sarb
outsl
loopne
jge
imul
sarl
xor
sbb
pop
ja
inc
movb
sbb
or
shl
xor
cmp
inc
xchg
fstpl
sub
movsl
cmp
mov
jb
mov
xchg
xor
add
popa
cwtl
xor
test
mov
dec
mov
add
sbb
mov
dec
scas
leave
imull
bound
jbe
mov
xor
stos
mulb
jmp
loope
dec
add
sarb
mov
lods
and
push
mov
inc
add
mov
ljmp
lret
mov
push
imul
test
mov
imul
mov
xchg
jge
and
jecxz
cmp
jl
jnp
dec
sbb
xchg
insb
mov
data16
inc
mov
push
xchg
pop
testl
sub
or
sarl
and
inc
pop
push
inc
movsl
pop
inc
nop
sahf
add
outsb
jbe
in
dec
imul
xchg
or
mov
pop
cmp
or
mov
mov
mov
xchg
jmp
frstor
loope
jle
mov
cli
in
call
dec
subb
xor
out
into
adc
cltd
adc
testl
clc
dec
add
mov
add
pop
das
outsl
negl
shrl
fwait
nop
stos
repz
loop
cmp
or
lcall
fnsave
pop
push
mov
push
cmp
add
fimull
imul
sub
push
push
inc
enter
scas
xchg
adc
repz
fs
mov
aaa
xchg
outsl
mov
inc
push
mov
add
lods
int
cmp
mov
xchg
cmp
mov
iret
xor
scas
pop
adc
jb
xchg
daa
stos
idivb
dec
cmc
inc
push
pop
sub
pop
add
addl
cmp
cltd
mov
cli
and
pop
in
push
sub
or
sbb
jbe,pn
xor
push
test
scas
cmp
sbb
jl
inc
popf
aad
mov
adc
mov
cmp
push
jns
xor
inc
js
mov
call
fucompp
nop
xchg
int3
inc
pop
xchg
mov
sub
xlat
adc
int3
jl
mov
xor
push
in
ja
xlat
xor
std
add
nop
add
inc
jp
repz
or
cmp
xor
pop
call
cs
rcrb
rorl
in
sbb
xor
rclb
js
jle
jb
daa
sub
ja
sti
out
sub
push
or
mov
inc
cmpsb
rcr
push
aas
jp
mov
dec
pop
sbb
mov
jmp
xchg
ss
in
andl
jle
pusha
push
lock
push
xchg
cld
out
pop
inc
adc
scas
inc
or
mov
decb
aad
adc
clc
xor
pusha
pusha
sbb
into
push
sahf
pop
je
mov
stc
iret
adc
imul
pop
aam
push
movsl
ds
sub
push
fninit
add
repz
jo
es
cmp
add
shr
mov
xor
or
lods
fistl
sbb
mov
sti
fcmovne
jae
mov
loope
push
sbb
in
pop
popa
push
push
stos
and
pop
or
mov
aam
sti
call
nop
les
rclb
mov
mov
pusha
leave
adc
jne
pop
dec
push
loop
pop
mov
pop
daa
sbb
xchg
and
ret
ja
xchg
ljmp
inc
push
mov
clc
xchg
pop
push
incl
add
push
pop
sarb
mov
jno
mov
add
rcrl
fs
dec
mov
jne
divl
jmp
in
sub
push
hlt
rcr
sti
scas
dec
cli
insb
fbld
pop
decl
lret
dec
push
mov
test
insl
sub
fsts
dec
int3
stc
shrb
jbe
inc
cld
movsl
movsb
cmpsb
jge
push
sbb
ja
out
inc
adc
lods
cmp
fimuls
jb
test
dec
mov
sbb
leave
pop
shl
daa
ds
jnp
xor
flds
loop
dec
aas
lret
in
insb
out
out
fidivrl
inc
adc
dec
dec
testb
mov
push
push
in
xrstors
call
mov
fsub
gs
in
lret
mov
and
xchg
inc
sbb
pusha
jle
ds
out
xchg
xchg
ljmp
icebp
push
fdiv
adc
icebp
repnz
fbld
into
mov
mov
pushf
or
std
mov
or
das
xor
shll
jp
mov
mov
inc
imull
test
in
imul
clc
sbbl
sub
outsb
add
call
aas
cmp
aad
jb
imulb
mov
mov
add
jmp
mov
outsl
clc
mov
sub
sub
push
int3
ljmp
imul
lcall
ret
fwait
shlb
mov
add
sti
test
add
xchg
loope
mov
inc
or
mov
test
ds
jl
or
pop
int
adc
mov
push
push
sub
cmp
dec
aam
mov
mov
cltd
add
dec
dec
mov
adc
add
iret
jne
fprem1
or
cmc
rcr
sbb
jae
fdivs
lods
dec
sbb
mov
xchg
inc
xchg
mov
mov
fisubrs
andl
or
sub
loope
cmpsb
push
test
into
jp
xchg
sub
mov
stc
lahf
dec
pop
kortestb
and
dec
xchg
fsubrs
or
push
adc
movsl
xor
data16
jb
jp
push
dec
movsl
push
jb
jno
hlt
mov
idiv
out
shlb
cmp
in
xchg
mov
jns
mov
mov
sub
cltd
push
xor
cmp
bound
jb
add
inc
or
xchg
dec
cwtl
popw
mov
out
push
sbb
sbb
mov
adc
sbb
cmc
data16
adc
add
aas
pop
mov
sbb
xor
outsb
pop
inc
test
cmp
mov
je
in
shlb
mov
call
adc
pusha
push
inc
dec
insl
fisubrs
mov
sub
and
outsl
and
cmpsl
adc
js
xchg
rol
mov
out
mov
int3
sub
sti
cmc
arpl
bound
jmp
lods
xchg
mov
pop
or
xor
fcoml
ja
adc
adc
pop
shrl
fcoms
cltd
popf
in
in
addr16
mov
mov
mov
popf
in
mov
pop
sti
add
cmc
jecxz
pop
add
cmp
in
lods
imul
shlb
cltd
cwtl
shlb
pop
dec
jmp
xor
push
sbb
mov
repz
loope
push
or
sub
cmpsl
sbb
jbe
sub
ss
jge
subl
adc
addb
mov
cld
push
xor
fimuls
pop
ljmp
cmpsb
jnp
rcl
jb
mov
push
push
int
ficompl
push
shrb
push
xchg
clc
incl
mov
int
clc
lods
mov
mov
mov
arpl
std
outsl
or
pop
xor
sub
sbb
mov
fsubrs
mov
pop
inc
dec
aam
incl
gs
lret
mov
insl
daa
sbb
jmp
test
inc
negl
mov
mul
sbb
xor
mov
xor
push
push
imul
mov
xchg
cwtl
mov
jo
inc
test
jmp
repz
jl
jns
frstor
gs
jecxz
cmp
mov
cld
sub
in
push
cmpsb
pop
cmp
ficoms
cmc
icebp
push
imul
imul
aaa
cmp
in
clc
enter
dec
stc
fsubl
repnz
incl
shlb
mov
sub
jp
jmp
xchg
hlt
jo
subl
mov
mov
or
aaa
je
test
cld
mov
pop
pop
sti
pop
push
sbb
test
repnz
in
data16
aas
addr16
ficoml
js
ds
push
in
repnz
test
movsl
or
sbb
psllq
je
out
mov
movsl
jle
mov
or
mov
and
push
rcl
inc
outsl
xchg
cli
xchg
xor
movsb
iret
loopne
rclb
insb
push
stos
aad
out
adc
sub
in
addr16
repz
add
lods
fisttpll
into
daa
scas
cmp
xor
gs
push
clc
dec
push
aad
dec
bound
push
mov
inc
pop
sub
cmp
mov
hlt
lret
es
adc
dec
js
lret
xor
push
and
cli
int3
js
and
mov
fdivrs
outsb
pop
jp
cmpsl
jbe
fidivs
test
mov
mov
rclb
mov
inc
arpl
out
cmp
stc
jmp
int3
in
sbb
mov
sahf
pop
xchg
adcl
sbb
cmp
mov
sub
pop
pop
adc
test
cltd
outsl
or
push
rcl
jl
adc
ja
xor
push
movsb
xlat
mov
jmp
inc
dec
cmp
pop
xchg
loop
iret
cwtl
imul
sub
ss
cs
xor
adc
in
repz
lret
inc
dec
dec
imul
pop
xchg
xchg
in
shll
xor
mov
ret
scas
dec
lret
dec
inc
push
imul
mov
jmp
cmp
pop
repz
sbb
inc
leave
mov
into
jge
sub
imul
shl
les
arpl
mov
data16
and
scas
push
nop
cld
mov
sahf
add
imul
cmp
sti
movsb
inc
jb
cmp
fbld
sbb
sub
jno
loopw
ja
mov
dec
mov
sbb
repz
dec
xlat
lods
xchg
popa
jnp
out
dec
sub
pushf
sub
imul
sub
push
pop
or
cld
fdivrp
ljmp
lock
les
mov
jbe
fistl
movsb
xor
pop
or
dec
xchg
mov
lret
push
lcall
sub
jp
dec
adc
fistl
dec
outsl
xchg
aad
stos
hlt
inc
in
sub
outsl
and
mov
loope
fcmovnb
popf
inc
cld
cmp
xor
popa
stc
pop
loop
adc
loop
insl
pushf
xchg
call
es
repnz
leave
mov
xchg
add
andb
mov
cmp
je
adcb
jp
insl
insb
pop
inc
dec
loop
xor
loopne
jne
xchg
mov
data16
mul
rorl
std
sbb
shll
test
adc
lods
daa
pushf
js
scas
adc
les
push
stc
lea
mov
cwtl
rcl
jecxz
lods
ret
in
jo
test
mov
rorl
and
ljmp
les
mov
inc
dec
es
and
mov
faddl
mov
add
movsb
xchg
not
mov
lea
pop
scas
test
mov
nop
es
fsubl
push
data16
add
push
in
xchg
mov
sub
mov
fnstcw
mov
fdivr
in
cmp
xor
or
pop
fadds
repnz
add
inc
xchg
push
xchg
popf
in
test
pop
leave
adc
sahf
pop
push
mov
mov
pop
lock
dec
pusha
int3
jmp
adc
jo
js
in
adc
add
cmp
aaa
push
and
mov
aad
jle
mov
out
pop
je
dec
scas
pusha
jae
sbb
test
imul
pop
ret
sub
mov
jl
fs
cmp
pop
lahf
add
clc
fsubp
mov
jmp
mov
sub
clc
xlat
sbb
jmp
mov
stos
out
xor
shlb
push
mov
int3
sti
push
xchg
daa
rcr
xchg
push
cwtl
arpl
mov
shll
fcoms
loope
loop
ss
repz
std
and
mov
addr16
and
mov
iret
cmpsl
pop
jnp
popa
pusha
xor
loopne
push
mov
pop
mov
and
icebp
sub
shrb
stos
mov
repnz
rcrl
add
movsb
xchg
rorb
mov
test
push
lds
pop
mov
mov
jg
push
cmp
aam
mov
xor
lds
add
pandn
sarl
je
shl
mov
sub
pop
nop
add
sub
jb
push
pop
sub
jb
jp
adc
loopne
cs
data16
jne
std
mov
fnstcw
inc
js
ret
cmpsl
leave
mov
leave
jg
mov
pop
push
stc
lods
movsl
lock
je
push
mulb
push
jne
ret
sbb
inc
enter
sub
leave
cmp
dec
push
cs
jmp
out
mov
or
test
push
pusha
adc
nop
faddp
inc
xchg
arpl
push
jo
mov
aad
aaa
jnp
maskmovq
push
push
pop
push
das
cmp
gs
je
jne
cmp
repz
mov
dec
push
pop
adc
cld
sub
xor
add
xchg
add
mov
test
jmp
push
enter
mov
lock
fimull
fmuls
pop
mov
or
loope
xlat
adc
fsubr
ret
or
xchg
repnz
call
les
call
cmp
out
cli
pop
test
jo
pop
pop
fsubl
mov
cli
and
jg
fucom
mov
cmpsb
jno
repnz
inc
fdivs
lcall
mov
cmp
test
jae
mov
dec
stos
imul
iret
cmp
out
movl
cmp
out
stos
jp
or
mov
xor
fadds
dec
mov
add
mov
mov
test
pop
adc
and
cmp
popa
fldl
pop
jp
cmp
jecxz
test
clc
aam
aad
out
adc
and
mov
sub
pop
int3
pop
cld
in
stc
pop
push
pop
add
pop
pop
adc
mov
pop
rcll
pop
mov
test
push
push
fsts
inc
cmc
addr16
or
and
loop
inc
mov
push
dec
mov
lock
jbe
mov
jp
jns
nop
dec
mov
jecxz
mov
push
jp
out
xchg
das
popa
loope
mov
pop
xchg
mov
test
dec
shrb
cwtl
aad
loopne
jo
jnp
adc
sbb
mov
scas
push
movsl
push
push
or
rorb
pop
jmp
inc
mov
jmp
sbbb
aad
punpcklbw
cwtl
outsl
jmp
in
loope
mov
jmp
jmp
push
js
inc
inc
lcall
fmull
sti
mov
jecxz
insb
mov
mov
hlt
rolb
adc
sub
mov
jnp
fwait
sub
cmp
jl
jns
inc
sub
xchg
push
cmp
into
pop
adc
and
hlt
lods
in
bound
outsb
lahf
mov
adc
xor
dec
adc
sub
mov
out
mov
bound
xor
cmpsb
pop
mov
aam
and
cmp
imul
push
mov
mov
repnz
stos
xorl
les
mov
mov
dec
outsb
xor
jne
nop
pop
movsl
in
inc
enter
dec
add
jmp
fdivs
cmpsb
push
movsl
aad
test
mov
mov
mov
hlt
dec
fcomi
out
xchg
loopne
lds
jnp
aam
jge
mov
mov
nop
jp
dec
pop
sub
push
push
jbe
mov
push
jbe
dec
add
dec
cmc
addb
loop
cmp
aam
sub
pop
pusha
or
mov
xchg
mov
cmp
lahf
pop
mov
sbb
cmp
pop
shlb
shrl
jecxz
addb
mov
test
xchg
cld
cmp
mov
jno
adc
scas
or
mov
divl
sub
mov
ret
iret
js
jmp
jnp
push
jo
cmpb
pop
clc
sub
dec
or
inc
std
hlt
sub
xchg
loopne
xchg
cld
fisubrl
push
push
xchg
enter
mov
jnp
adc
outsb
push
imul
lods
cmpsb
sub
or
scas
sub
xlat
into
in
jno
std
ss
pop
push
push
stos
rclb
daa
shrb
push
pop
js
dec
pop
xor
inc
adc
ja
nop
inc
shr
repz
das
mov
jl
inc
cmpsl
and
arpl
addb
cld
imul
mov
cltd
pop
sbb
les
or
xor
add
mov
lahf
cmp
mov
lret
pop
in
pop
sub
lds
shlb
jbe
xor
pop
enter
in
int3
xchg
repnz
add
out
in
add
push
fstpt
dec
subb
xor
mov
aam
xchg
inc
icebp
addr16
hlt
mov
cmc
mov
fmul
add
dec
adc
cmp
test
push
stos
test
loopne
rclb
rorb
jg
dec
into
int3
lcall
push
xchg
scas
push
mov
cmp
mov
int3
push
fildll
mov
mov
aas
lods
cmpsl
lock
movsl
xor
xchg
mov
and
jp
mov
add
repz
mov
into
xchg
call
pushf
pop
pop
dec
loopne
mov
push
cwtl
scas
ret
shlb
adc
push
mov
test
mov
mov
in
pusha
dec
loope
push
int
adc
sbb
jmp
cmp
repz
pop
push
and
push
dec
inc
gs
or
cmp
daa
loopne
push
mov
pop
and
xchg
stos
jnp
das
push
sub
adc
movsl
movsb
out
push
mov
cld
aad
popa
inc
push
pop
push
and
pop
sarb
mov
xchg
sub
adc
jae
mov
lahf
stos
leave
push
add
mov
push
imulb
nop
cmc
xchg
lea
xor
sbb
nop
mov
inc
sbbl
gs
into
jbe
inc
push
scas
loop
in
call
sbb
outsb
pop
int3
adc
std
sahf
pop
insl
pushf
xchg
or
xchg
and
outsl
xchg
aas
xchg
pop
daa
push
cltd
adc
jmp
or
data16
rol
fld
xchg
gs
iret
xchg
scas
and
xchg
out
adc
rclb
adc
pop
fbld
gs
push
mov
dec
dec
mov
call
gs
addr16
lret
add
js
sbb
jnp
mov
pop
push
jbe
xchg
lret
dec
loop
sub
jmp
lods
clc
nop
sbbl
mov
fwait
mov
jnp
outsl
into
adc
in
inc
add
sub
pop
imul
add
or
pop
rcll
push
les
popf
cmp
inc
adc
pop
loope
std
dec
stc
lods
fbstp
sbb
insl
cltd
xchg
int3
bound
cmc
mov
mov
mov
mov
sub
jmp
add
lcall
push
fucom
in
add
sbb
inc
mov
sbb
and
hlt
mov
mov
mov
cmp
fnstsw
pop
and
adc
push
sub
dec
int
flds
xor
popl
rorb
sbb
and
mov
shlb
pop
out
dec
lahf
es
aas
frstor
cmc
aad
and
or
xchg
lahf
cmpsb
in
scas
clc
push
dec
jo
add
add
mov
cs
jge
jmp
jmp
xchg
in
jne
jmp
stc
mov
inc
xlat
stc
pop
cwtl
adcl
jecxz
pusha
mov
fisttps
aad
fmull
dec
dec
addl
sub
adc
testb
mov
test
xlat
jge
sub
mov
decb
add
xor
gs
push
pusha
aad
cmp
fwait
lea
call
mov
lret
sbb
arpl
sub
loopew
cmpsl
pop
sbb
in
mov
xchg
xchg
xor
add
repz
sub
xchg
mov
sbb
out
into
jg
cmp
sbb
fwait
xor
sbb
bound
pop
jp
into
pop
cld
pop
sub
popa
std
mov
fs
jo
jo
push
xchg
sub
test
lea
fwait
aam
sbb
popf
int3
ds
nop
stos
and
jg
adc
xchg
sbb
jle
ret
pushf
fisubs
std
sti
inc
popa
or
out
movsl
push
push
mov
dec
mov
aad
pop
leave
mov
insb
shll
mov
sti
add
mov
cvtpi2ps
mov
inc
xchg
inc
dec
enter
lock
fildl
stos
adc
push
mov
outsl
clc
rcll
push
mov
xchg
cmp
out
cmp
push
or
les
dec
je
jno
aad
cld
mov
rorl
gs
dec
repz
int3
xlat
push
mov
fwait
mov
mov
mov
adc
call
mov
mov
adc
ss
xor
jmp
mov
cwtl
in
xchg
sbb
lcall
ss
imul
bound
int
pushf
pop
xlat
loope
push
dec
leave
push
sbb
sub
fisttps
out
icebp
loopne
ret
pop
mov
xchg
cmc
sub
inc
popa
dec
sbb
pop
cwtl
jle
xchg
xor
movups
fmul
cmp
jp
fnstcw
sbb
outsb
loop
iret
and
shll
xchg
mov
into
jns
adc
loop
jb
push
cmpsl
mov
mov
addb
mov
jmp
sahf
les
xchg
fwait
in
add
and
sub
jle
push
jnp
and
les
push
loop
fwait
jae
sbb
push
push
je
inc
push
flds
adcl
mov
pop
mov
gs
cmpsb
jbe
adc
stc
push
xchg
and
imul
jl
inc
inc
xchg
xchg
xchg
aam
cld
inc
fidivrl
push
cmp
pop
call
mov
push
mov
movsl
push
and
pop
inc
sub
dec
push
xchg
out
or
adc
xlat
push
pop
add
cmpsl
push
aam
fnsave
stos
xor
hlt
fwait
sbb
jmp
jns
inc
push
divb
push
fisubrl
flds
ret
popf
sti
mov
cmpsb
insl
aaa
adc
scas
test
xchg
cltd
cwtl
shl
and
mov
jl
adc
mov
es
push
icebp
out
jb
mov
fisttps
mov
mov
lea
mov
lds
iret
or
xor
mov
das
in
inc
jae
xchg
inc
or
es
fnsave
decl
lods
pop
cmp
push
fmul
dec
enter
dec
xor
sbb
jl
fs
scas
div
xchg
fs
je
xchg
popf
loope
mov
fwait
incb
add
sar
stc
add
sar
xor
dec
dec
pop
mov
and
in
mov
inc
cmc
dec
adc
inc
push
jbe
adc
sub
aas
ds
cmp
mov
hlt
mov
cwtl
ret
and
or
jge
sub
xchg
sti
push
bound
sub
pop
cmp
cmpsb
enter
dec
nop
hlt
and
ja
mov
jmp
jne
mov
clc
aas
scas
inc
aas
test
sbb
sub
jns
pop
mov
mov
sti
movsl
fsubrs
mov
dec
or
into
mov
enter
pop
stos
push
dec
mov
sbb
mov
cmp
cmovs
dec
call
rol
dec
cltd
fs
loope
shl
shrb
push
es
pmaxsw
pop
lret
icebp
sub
or
mov
cli
and
movsl
jecxz
or
addr16
in
xor
push
lods
lret
sbb
cmpsl
mov
aas
nop
add
push
test
lock
pushf
fnstsw
and
cmp
in
outsl
inc
mov
aaa
addl
cmp
dec
sahf
subl
int
fwait
loope
dec
adc
add
insb
cmpsb
mov
pop
or
mov
jmp
test
jmp
mov
inc
xchg
loope
jnp
xchg
jg
xchg
add
leave
jecxz
popf
push
sub
push
test
or
fs
add
shrl
adc
xlat
mov
sub
test
mov
mov
xor
imul
push
pop
mov
sarb
fdivrs
mov
jmp
jb
jle
mov
arpl
and
jg
stos
jge
fisubrs
icebp
sub
push
pusha
inc
out
inc
inc
push
cld
incb
and
xchg
fnstenv
dec
repnz
repz
xorb
ss
orl
mov
ljmp
jge
lret
xlat
nop
xor
cmpsb
popa
and
and
mov
sbb
int3
push
mov
in
inc
sbb
stos
and
sbb
fsubrl
shlb
mov
lahf
pop
aad
mov
push
lahf
cmp
and
popa
xchg
xor
iret
fwait
sub
arpl
sub
in
lock
in
xor
iret
ret
das
js
insb
clc
inc
pop
dec
shlb
cltd
jmp
movsb
lds
scas
pusha
movsb
mov
cld
or
jb
cmp
push
or
inc
mov
inc
arpl
stos
add
mov
mov
out
mov
mov
lods
into
add
add
cld
xchg
xchg
sbb
sbb
cmp
shlb
ljmp
xchg
mov
inc
test
or
jnp
or
jae
dec
fs
and
xchg
int3
imul
insb
dec
pop
sub
mov
sbb
fdivrs
ret
or
imul
or
mov
cmp
xchg
and
sbb
and
aaa
mov
in
mov
push
stos
inc
sbb
and
in
and
out
sub
mov
pop
mov
std
push
fisttpl
rorl
xchg
xchg
cs
dec
jg
repz
mov
jl
push
sub
das
jno
sbb
js
aam
jl
mov
push
subl
enter
pusha
pop
lcall
inc
call
aaa
add
mov
mov
push
cmp
and
mov
add
addr16
jbe
mov
jbe
mov
push
test
sub
jbe
test
mov
cmp
adc
xor
pop
inc
popl
add
sbb
ds
pop
fdivs
jnp
leave
mov
cltd
pop
jle
sbb
ret
das
rcl
addl
mov
bound
xor
out
or
lds
mov
mov
shlb
fucomip
dec
jle
inc
arpl
ss
popa
pop
pop
or
movsb
cmpsl
std
mov
orb
movsl
imul
test
cmpsb
out
and
scas
in
mov
dec
inc
adc
jmp
jo
into
pop
bnd
sbb
stos
inc
daa
mulb
cld
sub
rclb
in
insl
xchg
mov
cmp
mov
dec
mov
mov
jnp
jo
inc
dec
nop
dec
jns
cmp
and
jl
cmc
sub
mov
sahf
pop
out
subb
mov
movsb
cmpsl
ja
jmp
pop
sarb
mov
arpl
in
imul
push
mov
sbb
pop
dec
push
cltd
xchg
mov
sbb
sti
pop
mov
in
xor
mov
movb
lea
mov
xchg
xlat
pop
ret
xchg
pop
xlat
cli
cmpl
dec
mov
inc
test
fcomps
dec
xor
sti
sahf
jp
call
ficomps
and
and
and
insb
add
xchg
dec
gs
test
lds
cmp
mov
mov
das
outsb
psubsw
dec
rclb
and
jmp
push
sbb
add
sub
and
aaa
lcall
leave
push
add
mov
jne
add
mov
adc
shl
mov
mov
test
adcb
int3
aam
pop
popa
mov
push
adc
mov
js
nop
ds
dec
daa
cli
bound
inc
rolb
out
dec
loop
mov
add
jae
or
pop
out
or
psrlq
push
cmp
lea
lret
icebp
push
loope
iret
test
daa
cmp
dec
cmp
cmp
sub
mov
fiadds
and
mov
call
movsl
and
bound
adc
jmp
mov
mov
int3
and
shll
or
pop
aad
ljmp
fst
fdivr
sub
lcall
push
jge
or
jnp
lcall
pop
stc
xchg
dec
inc
stos
arpl
dec
icebp
or
sbb
dec
imul
mov
ficomps
fistl
mov
ret
inc
out
pop
aad
out
lahf
test
sbb
mov
mov
mov
test
movsl
hlt
jnp
push
arpl
adc
sbb
add
or
cwtl
xor
xor
cmp
adc
mov
stos
push
ror
cld
insb
lret
mov
jmp
jl
test
pop
sbb
std
pop
lcall
imul
jmp
aas
mov
jns
mov
icebp
call
lea
sub
mov
adc
add
addl
cmp
call
mov
pop
jnp
repnz
mov
cmc
pop
add
dec
out
aad
aad
pop
xchg
pop
inc
fdiv
sub
lahf
push
movsl
lods
xchg
sub
sbb
lret
fnstenv
mov
mov
nop
ficompl
mov
mov
das
daa
cwtl
je
popl
push
xchg
dec
push
dec
int
cmp
testl
testb
xor
imul
insl
and
fsubp
jge
sub
divl
test
mov
pusha
mov
negb
leave
ret
sbb
test
pop
adcb
xchg
inc
mov
dec
in
pusha
push
nop
mov
fptan
testb
iret
pushf
cld
int
cmp
ss
fcompl
push
adc
sbb
ffreep
mov
js
jp
sbb
mov
frstor
xchg
cwtl
add
stc
or
add
js
pop
mov
mov
cmp
adc
sbbb
arpl
loopne
rorb
xchg
lods
stos
push
add
clc
xor
or
add
mov
sti
icebp
icebp
pop
push
ljmp
pop
pop
xchg
jbe
cltd
dec
jge
dec
pop
jbe
ret
jno
shlb
mov
loopne
mov
pushf
sub
mov
push
icebp
push
fwait
mov
imul
out
push
jg
nop
mov
xchg
sub
sbb
lret
xchg
sbbl
fildl
lds
jb
xchg
cmp
pop
xor
ret
lods
fbld
add
lods
adc
cs
mov
js
and
pushf
mov
shl
cmp
imul
lea
pop
jmp
push
dec
inc
movsb
push
mov
int
add
std
and
dec
sbb
add
mov
dec
das
push
ret
clc
jns
rolb
jns
mov
out
fwait
sbb
ss
lret
in
jb
outsl
xchg
mov
and
out
popf
fmul
into
adc
adc
into
int3
lret
rorb
or
xor
aas
and
xor
cmp
dec
cmp
xor
test
subl
mov
mov
mov
fiaddl
aas
js
iret
sti
add
loopne
mov
sub
lea
addr16
rolb
xchg
xor
or
jmp
stos
insb
sbb
mov
cmp
sbb
scas
roll
cmp
add
cmp
inc
and
pop
cmp
cmp
test
xor
arpl
mov
lods
addr16
lods
fwait
lods
insb
mov
insl
ds
neg
mov
ja
cmp
or
rcll
inc
aaa
leave
pop
xchg
dec
adc
adcb
jmp
mov
cmpsb
ficomps
test
movsl
lret
popa
sarl
xchg
mov
js
rclb
inc
xlat
rcrl
mov
out
xlat
xor
pop
adc
fcmovne
mov
stc
dec
or
push
cltd
int3
xor
cmp
mov
xchg
pop
test
repz
lcall
inc
dec
jo
add
mov
dec
add
and
sahf
les
mov
jno
push
in
inc
and
stos
rcrb
leave
lods
push
sub
adc
xor
fimull
cmp
outsl
faddl
stos
pop
jbe
or
add
and
xchg
mov
inc
repz
inc
jns
out
imul
add
lds
aas
dec
sahf
adc
out
add
fs
outsb
int
push
mov
int3
jle
js
gs
xor
ljmp
mov
xchg
rcr
inc
jae
and
jp
ffree
jle
cmp
mov
xlat
mov
test
sbb
lods
xchg
out
and
adc
jmp
outsb
xchg
jl
and
add
fldenv
mov
mov
xchg
push
cmp
mov
add
cmc
jmp
push
cmp
clc
std
sahf
dec
or
and
push
rcr
dec
sbb
xor
shlb
mov
mov
int
push
push
lret
insb
dec
push
iret
jecxz
testb
xorb
mov
xor
stos
sub
sbb
sub
popf
sti
std
aaa
daa
sbb
mov
sar
xor
jae
fcompl
inc
test
lahf
cld
dec
bound
pop
mov
mov
and
sbb
arpl
xchg
push
adc
jne
sub
adc
mov
cmpsl
fisubl
sbb
out
push
adc
es
fs
movsl
xor
mov
mov
mov
adc
subl
lret
out
push
jmp
cmp
jg
or
out
inc
mov
xor
rcrb
pusha
or
data16
add
or
cmpsl
je
sub
int
adc
in
outsb
imul
xchg
orl
lcall
js
dec
push
dec
mov
das
xor
pop
cltd
push
cs
push
jnp
adcb
movsl
jg
or
xor
js
add
cwtl
jns
push
je
mov
pusha
mov
cld
xor
push
fcomps
pusha
mov
push
xor
in
adc
ljmp
mov
push
outsb
pop
icebp
mov
dec
divl
jp
in
cld
sbb
mov
adc
aam
push
std
or
test
fldcw
lods
sub
loopne
dec
inc
jb
dec
cmc
jb
aaa
test
in
dec
notb
imul
aam
mov
push
sub
gs
xor
inc
mov
push
lods
jo
add
or
jnp
jg
bound
insb
mov
rcrb
imulb
enter
lods
data16
mov
pop
stos
push
pop
aam
iret
in
inc
test
sub
cmp
xchg
sbb
loop
or
setno
add
mov
sbb
aad
fadd
imul
fdivp
fdiv
push
outsl
ja
cmp
dec
sbb
stos
sbb
arpl
test
mov
and
fwait
cmc
push
push
pop
xchg
jp
xchg
or
movsl
xor
pop
fbld
mov
push
or
shlb
lret
add
mov
sahf
std
jno
jb
cwtl
aad
and
popl
out
xor
xor
and
fs
out
scas
xor
sub
data16
les
pop
das
lods
test
in
sbb
sub
arpl
outsl
dec
xor
xchg
or
shlb
leave
aaa
pop
xchg
or
sbbb
out
call
sub
ss
pop
ds
jno
fmuls
sub
les
std
inc
adc
or
mov
pop
sub
loopne
outsl
pop
rclw
stc
xchg
out
sbb
push
push
fisttpl
jg
sti
es
push
in
divb
aad
ds
sti
push
stos
xor
pop
hlt
leave
pop
sahf
popa
mov
sbb
xor
cltd
and
cld
orb
mov
mov
push
sub
test
adc
mov
repnz
mov
xchg
and
sti
jge
cmp
xlat
jge
hlt
xchg
adc
fimull
outsl
pop
jg
gs
jns
adc
adc
dec
test
into
je
inc
sarb
add
rorl
stc
out
mov
notl
pop
sub
iret
sub
ja
ret
aaa
xchg
test
xlat
addr16
mov
arpl
fldcw
xor
lea
movsb
shlb
xchg
shr
test
test
cmp
das
js
mov
sbb
adcl
sbbl
insb
mov
lret
add
mov
outsb
or
int
enter
sub
and
dec
ds
iret
cmc
sbb
jl
adc
add
inc
mov
inc
call
pop
rcrl
mov
or
std
dec
ret
mov
cmpsl
cmp
mov
cmpsb
rolb
mov
xchg
add
xchg
imul
add
cmp
jle
sar
sub
std
call
add
dec
inc
lods
xchg
imul
or
dec
adc
jo
out
rorb
movsb
xor
jb
jl
dec
cmpsb
pop
clc
or
cmc
sahf
jl
testl
cmc
push
sbb
fwait
inc
inc
push
push
mov
hlt
xchg
inc
xchg
mov
and
movsl
xlat
int
pop
repnz
and
cmc
mov
push
loop
xchg
push
mov
les
rcrb
jp
jmp
dec
mov
push
out
ds
dec
push
xchg
jno
add
cli
bnd
push
or
iret
xor
adc
sbb
inc
arpl
aaa
ja
jnp
push
jle
adc
sub
js
cld
or
jnp
aad
mov
rcrb
mov
or
inc
sbb
je
nop
rolb
jl
popf
cmc
fmuls
cwtl
outsl
cmp
jb
push
pop
cmp
stos
and
enter
sbb
and
add
andl
push
sbb
fsubrl
div
add
nop
cmpsb
sbb
mov
loop,pt
and
sub
adc
mov
movsb
sahf
das
inc
adc
jge
pusha
push
test
sub
outsb
adc
daa
jecxz
enter
loope
cmp
cld
cli
lods
dec
jmp
push
mov
jo
add
vpshufhw
orb
dec
sti
aas
dec
xchg
push
cltd
push
lret
daa
fbstp
test
xor
jp
or
and
mov
dec
sbb
inc
jge
mov
pop
pop
cmpsl
loop
cmpsb
push
rcll
mov
pop
dec
inc
sahf
jno,pn
fistl
add
rorb
fiadds
mov
hlt
inc
or
fnstsw
mov
xchg
jno
xchg
std
mov
dec
push
test
sti
imul
lcall
sti
fst
dec
mov
out
ret
jl
or
repnz
lods
in
testl
mov
sbb
outsb
push
jp
ja
mov
scas
popf
inc
mov
mov
test
cwtl
loopne
stos
inc
push
adc
mov
cmp
or
jne
pop
mov
adc
mov
rclb
xchg
adc
push
fsubrs
mov
aam
inc
lret
and
loop
xor
jbe
js
and
sub
pop
les
clc
pop
aam
out
nop
mov
cmp
mov
adc
push
push
mov
insb
inc
test
fbstp
pop
stos
and
cld
jp
mov
jae
dec
mov
shrl
pop
jbe
adcl
and
xchg
sub
outsl
scas
add
or
xor
dec
and
lods
std
sub
out
sub
push
cltd
inc
icebp
jl
loopne
and
mov
push
mov
clc
cmp
pop
xlat
push
jne
mov
pop
dec
int
xchg
inc
adc
mov
adc
sti
repz
cmp
jmp
push
pop
loope
jge
jecxz
adc
jmp
adc
mov
add
sbb
leave
aas
std
lret
add
dec
xchg
sbb
data16
jo
test
pop
inc
test
jae
xor
lret
es
adc
sub
bound
mov
adc
xchg
mov
sbb
popa
sub
and
pushf
mov
dec
test
mov
dec
push
ja
fs
mov
mov
mov
add
inc
scas
in
nop
icebp
cltd
orb
lret
pop
popl
push
add
dec
out
and
lret
cltd
or
xchg
add
repnz
pop
xor
lea
add
and
sub
repz
ret
filds
pop
sbb
in
push
int
push
xchg
mov
cmpsl
dec
js
dec
bound
jb
adc
mov
adc
xchg
xchg
iret
jmp
dec
iret
pop
je
mov
xchg
ss
call
loop
mov
xor
lds
lcall
imul
loope
mov
dec
bound
jnp
insl
repnz
imul
mov
dec
loope
xchg
addps
dec
mov
adc
xchg
pop
xor
mov
cs
mov
inc
fucomp
xchg
aas
enter
roll
sbb
lret
xor
mov
dec
inc
ds
dec
int3
lock
lret
fwait
fwait
aad
inc
jle
iret
outsb
cld
mov
ljmp
sub
fldenv
out
dec
mov
pop
push
or
mov
dec
ficoml
inc
xor
adc
mov
cmp
mov
outsl
mov
xchg
sbb
outsb
into
inc
icebp
leave
mov
or
fcomp
inc
lret
repnz
movsb
xchg
push
jl
fstl
in
and
pusha
clc
xor
leave
fisubrs
push
adc
hlt
pop
and
leave
jb
add
dec
out
mov
addr16
pop
cmp
push
sbb
popf
push
jp
movl
gs
aam
adc
push
clc
adc
adc
mov
leave
in
popf
arpl
or
mov
inc
jns
das
mov
push
aam
xor
shlb
xchg
out
pmulhuw
push
call
jb
nop
sbb
mov
jns
or
pop
mov
in
mov
ret
test
pop
pop
fistps
in
mov
mov
subl
add
ljmp
mov
jp
xchg
pop
outsb
mov
jnp
add
testb
pushf
pop
arpl
inc
orl
lds
subb
mov
jnp
pop
cmp
sbb
mov
jl
leave
into
add
das
xchg
mov
mov
xchg
or
flds
loop
dec
in
verr
pop
fs
dec
mov
push
mov
mov
inc
mov
sub
dec
mov
pop
pop
mov
shl
mov
aaa
nop
lcall
shl
or
imul
or
xchg
sahf
mov
rcr
subl
mov
jbe
cmpl
subb
push
mov
cmpsb
inc
dec
lock
inc
jne
and
js
hlt
mov
fstpl
test
ljmp
or
test
add
int3
aas
push
scas
pop
sub
stos
loop
and
iret
jae
out
and
cmp
jns
cltd
inc
enter
jmp
and
mov
add
add
pop
sbb
jb
push
xlat
push
inc
shl
pop
xor
pop
aad
xchg
shlb
jge
sub
or
sub
mov
or
pusha
pop
inc
fsub
sub
xchg
adc
or
sbb
mov
jae
jp
dec
sub
dec
insl
add
js
adc
jg
test
and
dec
mov
rclb
pop
push
mov
inc
xchg
and
mov
adcb
cmpsb
adc
cmpsl
aad
incb
es
cltd
loopne
xor
mov
and
pop
out
pop
cwtl
bound
jae
stos
mov
fidivrl
aam
bound
faddl
lods
xchg
sub
das
xchg
jo
cmp
call
outsl
test
pop
sbb
aad
or
adc
fs
or
loop
cmp
cmc
fildll
push
or
xchg
pop
sub
cli
movsb
fsubl
sti
jmp
cmc
int3
loope
jecxz
xor
js
aaa
dec
fmull
aaa
fldl
sbb
xor
adc
push
mov
aaa
ja
pop
jo
sub
out
push
in
gs
push
jns
push
jae
jnp
xchg
or
dec
dec
mov
mov
gs
jns
add
in
sub
lahf
jmp
and
aam
push
adc
mov
mov
into
fists
sbb
shrb
bound
inc
mov
dec
xor
sub
iret
in
fistps
in
mov
push
cmp
std
mov
xor
in
inc
cmp
adc
adc
sahf
imul
and
xchg
ds
pop
fs
in
daa
jle
mov
or
adc
jmp
push
mov
and
xor
clc
cltd
in
xlat
cmc
dec
jbe
gs
icebp
inc
jge
sbbb
gs
in
lret
jb
inc
cmp
shl
jl
cmp
js
push
aas
les
sar
xchg
mov
rorb
aam
imul
sbb
mov
fidivl
gs
fbstp
xor
ret
pop
xchg
mov
mov
pop
es
push
xor
cmp
mov
sbb
sub
daa
adc
cwtl
sub
xchg
in
daa
sub
cmpsb
sbb
dec
adc
mulb
adc
repz
xchg
xor
xchg
orb
jno
dec
scas
push
xchg
mov
push
pop
jecxz
imul
data16
xchg
xchg
inc
bound
lret
pop
ficompl
iret
scas
pop
movsl
inc
adc
adc
mov
lahf
mov
mov
adc
mov
rcr
mov
fwait
jno
outsl
and
pusha
cmpsl
imul
jns
inc
loop
mov
xchg
pop
in
push
add
fwait
mov
in
mov
jmp
push
xchg
test
xor
and
test
jne
jo
inc
sub
lods
in
jnp
scas
bound
push
js
std
out
dec
pop
shll
mov
je
mov
ljmp
rorl
push
clc
fs
movsl
fildl
or
cmp
inc
pop
fists
cltd
in
xchg
jne
xor
xchg
dec
addl
pop
loopne
pusha
js
ds
pop
nop
fstpt
xor
in
mov
and
jle
sbb
test
movsb
int
adcl
loop
or
inc
adc
in
stos
dec
xchg
sbb
sbb
cli
jb
pop
icebp
mov
mov
push
mov
and
mov
mov
dec
scas
push
adc
push
xlat
push
mov
pusha
inc
mov
lret
push
jl
fisttps
in
add
mov
cmpsb
lcall
push
mov
inc
idivl
std
cmp
push
xor
test
cmpsb
cmp
cltd
push
and
lret
mov
add
dec
push
shll
cld
mov
push
xor
push
pop
mov
adc
fstps
push
cmp
or
pusha
dec
ss
or
in
push
xchg
push
leave
ret
mov
pop
mov
jecxz
push
add
leave
add
mov
push
enter
arpl
ror
mov
cs
mov
cmp
inc
xor
push
sbbl
fdivrs
insb
jo
cmpsl
add
pop
cld
sbb
ss
xor
in
jl
inc
push
push
arpl
das
into
clc
xor
xlat
pop
inc
push
sarb
sti
test
pop
jp
adc
out
andb
pop
test
push
push
mov
pop
je
mov
or
std
dec
lods
xor
dec
sub
cmpb
arpl
bound
adc
cmp
xor
push
xchg
push
shl
fcomip
aad
xlat
jne
ret
mov
jge
es
packssdw
repnz
adc
notl
test
sti
inc
in
test
push
adc
shll
addr16
or
jb
cmp
divb
sub
or
push
push
push
jecxz
outsl
ficoms
aam
lret
mov
and
repz
jno
shlb
rclb
aaa
fnstcw
jae
mov
test
das
push
ds
pop
aad
sub
loope
mov
fisubrl
cs
addb
in
mov
xchg
popf
stos
in
pop
xchg
or
cmp
sbb
xchg
sbb
mov
in
outsl
jb
testb
and
adc
jle
push
ja
sahf
jnp
loopne
cmp
xchg
jmp
add
xor
into
push
rolb
aad
lcall
dec
jl
xor
push
dec
pop
js
jb
mov
jge
push
xchg
shll
sub
movsb
jp
mov
mov
test
stos
sahf
sub
push
sub
add
fwait
stc
fildll
jg
sbb
pop
sbb
stos
xor
pop
ret
jo
mov
fs
adc
ds
test
pop
pop
and
lret
cmp
or
dec
bound
and
test
es
add
mov
mov
adc
inc
dec
mov
int3
adcl
into
push
outsw
inc
jecxz
or
subb
adc
cli
test
xor
push
fcoml
enter
lcall
popa
push
sbb
cmc
bswap
or
xor
xor
pusha
fiadds
pop
sbb
inc
lret
inc
adc
sbb
push
or
dec
inc
adc
sub
mov
sbb
jp
mov
mov
int3
push
aas
pop
jnp
dec
push
rcll
xor
xor
fidivrs
adc
notb
mov
and
cmc
adc
or
mov
pop
lret
test
int3
cmp
jp
shr
push
sub
and
xor
jb
cmpsb
cwtl
pop
sti
push
outsb
mov
jge
sbb
mov
push
leave
inc
mov
inc
daa
xchg
and
dec
ret
add
test
enter
add
dec
sbb
lods
mov
adc
jne
xchg
mov
rcr
aas
inc
fidivrl
push
mov
nop
and
loop
jne
aas
adc
test
add
push
mov
fs
sbb
add
jl
fxch
xlat
sbb
imul
pop
iret
popf
push
mov
add
and
xchg
sub
mov
ljmp
divb
sub
xor
push
lds
imul
lahf
jge
and
xchg
mov
or
push
mov
push
aad
jae
cld
popf
out
jge
je
and
outsb
or
inc
ljmp
sbb
xchg
sar
mov
mov
movsb
repnz
fsubs
mov
lock
inc
add
mov
push
add
clc
fisubl
orps
adc
pop
xchg
cmpsb
add
lods
dec
pushf
outsb
jp
psraw
jge
fs
push
sbb
ret
loope
xor
addr16
push
mov
int3
or
pop
pushf
in
xor
or
fsts
pop
fcoml
into
add
pusha
jecxz
out
pop
lock
in
add
cwtl
sbb
sub
fiadds
imul
jnp
js
pop
push
xorl
xlat
sti
and
outsl
or
push
mov
inc
lods
mov
push
cmpsl
data16
mov
xor
insb
mov
jp
xor
movsl
outsl
push
stos
push
and
stc
std
movsb
and
add
push
push
iret
adc
imul
pop
enter
mov
mov
pop
xchg
aam
imul
mov
or
call
xchg
js
loope
jb
inc
adc
sarl
int3
cld
lcall
mov
movsb
push
lcall
inc
popa
mov
ss
and
cmp
in
adc
cwtl
rcrb
test
xchg
adc
adc
cmpb
lods
pop
pop
cmp
ja
int3
push
fadds
xlat
push
add
adc
cld
sbb
push
cmpsl
add
loop
pusha
jo
ret
or
das
daa
sbb
jp
hlt
popf
sbb
cmc
pop
sub
xadd
test
int
je
lret
push
xor
xchg
insb
data16
leave
pop
mov
mov
dec
stos
mov
xor
and
push
enter
std
int
outsb
ss
into
xor
sbb
ss
and
add
loope
push
push
into
stos
arpl
push
icebp
dec
inc
subl
js
sub
enter
jne
pop
cmp
int
lods
bound
jg
lock
adc
popa
addr16
scas
mov
mov
das
je
xchg
mov
inc
xor
dec
pop
aas
insb
dec
xor
mov
outsl
sbb
testb
ljmp
fcoms
dec
inc
jg
xchg
outsb
mov
test
lahf
pop
inc
sub
movsl
popf
inc
enter
dec
xchg
sbb
sub
mov
cmp
xchg
mov
insl
sbb
jns
scas
push
shlb
mov
shlb
dec
and
mov
out
bt
pusha
sbb
inc
inc
add
std
popl
or
cmpl
rorb
mov
jp
add
shll
dec
pop
or
jbe
fisttpl
lahf
sbb
sbb
sbb
pop
fcomps
inc
imul
in
pop
mov
and
int
xor
into
dec
mov
jno
xchg
outsb
sub
cmc
imul
cmp
xor
mov
cmp
ja
call
in
push
lret
sti
jno
jl
mov
push
cmp
mov
and
push
pop
mulb
xchg
mov
inc
lds
sahf
dec
pop
add
js
jecxz
cwtl
jp
pop
fwait
lahf
xor
mov
xor
repz
mov
dec
dec
outsl
add
pop
dec
flds
loope
loop
out
cmpxchg
cmp
mov
mov
ljmp
lea
daa
sbb
sarl
fsubs
inc
fsubrp
xor
lret
test
adcl
adc
jno
mov
pop
inc
cmp
imul
pop
mov
and
aam
fidivs
fwait
fs
out
fld
inc
pop
pop
pop
mov
jno
cmp
into
add
sbbb
mov
push
movsb
xchg
pop
sub
pop
inc
fcoms
rorb
ficoml
mov
add
outsl
pop
fldcw
add
sub
sub
roll
out
mov
push
mov
push
mull
jns
pop
push
jp
sub
jns
add
and
adc
jo
dec
mov
sbb
in
movsb
pop
loopne
scas
cmp
or
lock
push
cmp
ret
jmp
es
pop
jecxz
push
jl
sub
and
xor
out
sbb
mov
or
hlt
sbb
call
xchg
mov
xchg
cli
fdivrs
jl
mov
cmp
fldt
cmc
mov
push
mov
and
lock
inc
push
fnstcw
xor
dec
inc
shl
or
ret
mov
mov
repnz
test
mov
adc
icebp
inc
xchg
mov
fmuls
neg
inc
mov
xchg
ret
mov
pop
popf
pop
es
lcall
roll
cmp
iret
fimull
push
in
popf
cwtl
pop
or
mov
jg
mov
es
cmp
mov
cmc
fcomps
icebp
imul
out
aaa
addr16
repnz
test
inc
out
xor
scas
mov
pop
mov
es
push
es
xchg
jno
mov
negl
and
adc
cli
jg
adc
js
jae
xchg
ret
adc
mov
sub
jns
pop
add
fsts
inc
addl
or
mov
pusha
popa
inc
push
or
add
dec
pop
push
push
push
sub
mov
jge
outsl
add
pop
dec
push
mov
push
mov
or
push
je
dec
in
adc
popf
call
dec
mov
jge
jbe
push
or
loopne
mov
out
push
push
xchg
cmp
pop
push
lods
cmovg
and
mov
popa
sbb
std
out
ret
mov
adc
dec
mov
fcomip
mov
adc
lcall
xor
in
fnstenv
cltd
stos
scas
or
cltd
in
jl
rcrb
and
push
out
fiaddl
or
jmp
or
repz
and
pop
jmp
and
sahf
insb
add
flds
pop
pop
jo
adc
daa
xchg
or
or
neg
sub
mull
pop
ret
mov
push
and
or
dec
pop
push
fists
test
test
xchg
mov
mov
pusha
loopne
cmp
imul
stos
lcall
orb
cmp
test
shr
sbb
mov
xchg
cmp
pop
aad
jmp
mov
fdivrl
outsb
loope
or
call
cmpsl
lret
fwait
sub
jl
push
incb
orb
lods
stc
and
sub
push
mulb
enter
rcr
fldl
xchg
xor
dec
ret
pop
jbe
push
xchg
xchg
inc
adc
imul
jge
xor
out
pushf
shrl
insl
rep
mov
aad
mov
inc
scas
jo
or
outsl
xor
and
adc
cmp
pop
gs
fsubrl
add
out
mov
fnstcw
out
testb
out
mov
mov
jne
adc
cmc
mov
jecxz
jge
jb
sbb
fs
push
aad
fadds
rcrb
imul
inc
clc
jb
iret
xchg
inc
stos
enter
pop
fcmovne
in
movsb
dec
daa
pop
sbb
rclb
nop
inc
xor
sbb
dec
dec
paddw
fisttps
aas
mov
je
xchg
popa
mov
push
mov
adc
insl
dec
add
or
pop
sbb
jmp
lret
std
jecxz
rcll
aad
aam
pop
fcomp
mov
insl
jecxz
sbb
jmp
scas
bound
lcall
movsl
pop
cmp
mov
dec
rcrl
mov
inc
jl
sbb
sub
out
adc
in
out
cmp
fcompl
imull
bound
mov
jmp
xor
rcrb
adc
push
cmp
enter
jo
push
outsb
into
pop
inc
xor
push
cmc
into
jge
xchg
inc
cltd
int3
pop
lds
push
xor
xor
lods
jae
jb
push
or
sub
jge
jp
sub
mov
pop
xor
mov
push
dec
xchg
xor
test
stos
out
sbb
sub
iret
aad
adcl
insl
jp
mov
cli
mov
inc
and
cld
push
rcrb
or
mov
out
ljmp
ficoml
sti
mov
or
mov
movsl
cmp
movsl
xor
push
dec
out
lret
xor
sub
btc
dec
and
sub
rorl
leave
gs
xchg
sti
mov
pop
repnz
pop
cmpsb
push
mov
loop
insb
xor
outsl
and
fdivs
imul
gs
and
arpl
push
je
add
mov
fwait
in
xchg
rolb
mov
or
fcom
inc
mov
inc
shlb
push
xor
popa
ja
cmp
or
sub
popl
call
and
xor
lock
xchg
sub
cmp
movsl
adc
xchg
jb
outsl
pop
mov
out
aaa
pop
cli
mov
mov
fisubs
fld
sub
cmp
mov
es
jae
iretw
fistps
adc
in
xchg
sbbl
icebp
aam
sti
dec
jp
add
mov
cld
push
jns
or
push
nop
sbb
xchg
and
xor
push
aam
es
add
mov
test
imul
and
cmpsl
mov
pop
sbb
jne
xor
mov
inc
mov
cli
push
xchg
je
inc
mov
pop
mov
dec
or
cmp
or
fildll
xor
push
mov
cmpsl
and
jnp
fisubrl
pop
mov
loope
rclb
fcoms
into
sahf
jae
aam
and
and
addr16
out
movsb
inc
pop
in
js
pop
mov
cmp
movsb
and
aas
or
test
test
dec
sbb
adc
pop
mov
push
test
xor
xchg
leave
in
lret
inc
lods
popa
push
nop
test
repnz
mov
adc
inc
jne
cmc
popf
or
push
push
xchg
pop
jae
outsb
dec
leave
mov
dec
xchg
aaa
push
mov
adc
dec
and
cmc
sbb
adc
in
lods
mov
push
sub
in
inc
jbe
lea
mov
push
xchg
mov
pop
stos
mov
xchg
xor
out
int3
dec
outsb
rclb
cli
repnz
gs
loop
and
cmpsl
push
neg
popf
push
xchg
or
cmp
jl
fld
mov
insb
mov
pop
push
jl
inc
inc
mov
push
cmp
inc
aas
add
adc
or
les
xchg
add
movsb
outsl
add
push
cmpsb
jae
push
movsb
fdivrl
repnz
sbb
loop
and
dec
lcall
in
lds
iret
roll
das
fimull
ret
mov
scas
jb
les
mov
pop
sahf
adc
pop
cmp
dec
icebp
dec
scas
popa
xchg
cmp
subb
test
rcrb
popa
popa
cmp
add
es
test
jp
sbb
cmc
push
push
cmp
xchg
push
inc
rorl
xchg
test
lods
lahf
subl
inc
addr16
add
adc
and
push
cs
pop
push
mov
cwtl
aad
lods
dec
pusha
mov
ret
xor
lret
jp
dec
movsb
dec
fdivs
mov
mov
adc
adcl
in
mov
xor
inc
aaa
js
dec
push
adc
xor
fs
ds
sbb
out
mov
inc
out
mov
dec
pusha
test
pop
xchg
in
xchg
clc
clc
sti
mov
or
fwait
fwait
pop
jns
lahf
sar
ljmp
sahf
jmp
fwait
cwtl
shlb
jb
jp
lods
cmp
arpl
aas
and
push
sbb
les
icebp
enter
push
and
mov
pop
pop
xchg
mov
adc
and
movb
push
push
in
mov
or
or
and
mov
out
in
pop
lods
fsubr
sarb
cmpsb
adc
daa
pop
sbb
dec
mov
push
dec
cs
lcall
lret
inc
adc
and
filds
dec
or
xor
xor
pop
scas
stc
mov
xchg
loop
fcoml
sbb
inc
dec
dec
mov
mov
jmp
and
aad
adc
dec
arpl
mov
or
sbb
dec
repz
jno
push
in
mov
dec
xor
lods
wbinvd
mov
fcomps
and
mov
inc
xchg
pushf
fdivs
movsb
inc
stos
dec
outsb
pop
cmpsl
jns
xor
sbb
mov
lods
mov
jb
dec
sbb
xor
sbb
rcr
repnz
push
sub
pop
sbb
sbb
nop
fistpll
inc
sub
rep
xchg
outsl
ds
pop
or
mov
pop
out
rcl
dec
mov
jno
arpl
xor
lcall
ljmp
bswap
loope
inc
pushf
test
xchg
cmp
ss
mov
pop
lahf
frstor
mov
mov
pop
xor
inc
stos
enter
ja
xor
add
or
std
xchg
sbb
rorb
add
stc
xlat
jg
stc
xchg
add
fmuls
lds
xchg
mov
xchg
or
dec
ja
sbb
sub
jb
int
push
scas
call
fimull
lea
mov
in
popf
icebp
dec
insb
sbb
or
aam
jno
jmp
outsl
pop
push
movsl
leave
pop
fldt
rcl
and
jae
aas
cld
dec
push
int
adc
xor
dec
jp
add
scas
mov
in
das
pop
mov
es
sub
les
inc
je
idiv
sub
push
sub
in
xor
pop
sbb
adc
sti
add
addl
scas
ljmp
pop
jb
shlb
mov
mov
cli
sahf
pushf
cwtl
add
inc
mov
jg
pop
cld
cmp
add
or
sbb
stos
stc
iret
ljmpw
add
dec
push
cmp
jb
insb
mov
bound
inc
in
xor
mov
dec
pop
mov
notb
pop
adc
xchg
call
outsb
lret
push
into
dec
movsb
lods
jl
add
jmp
dec
inc
insl
mov
mov
outsl
cmpsb
roll
add
cmp
mov
inc
xchg
jp
xchg
cmp
adc
dec
mov
xchg
into
test
mov
adc
xchg
and
outsl
cmp
fmul
cltd
in
mov
sbb
jbe
push
popa
sahf
lea
adc
fists
jne
inc
orl
cmp
add
push
vshufps
push
jge
aaa
mov
pop
pop
xor
popa
sub
int3
add
add
shll
mov
lret
push
pushf
mov
jecxz
dec
sbb
adc
mov
fidivl
repz
xchg
lods
sub
push
test
pop
es
sti
push
cmp
jp
ljmp
mov
or
push
call
stos
lods
lods
mov
cmp
loopne
mov
add
mov
mov
cli
push
dec
notl
repnz
aas
pop
or
daa
orb
mov
push
mov
xchg
fs
int3
push
push
lcall
lret
das
xchg
and
add
ficoms
test
sbb
int3
mov
stos
dec
fwait
xor
sbb
lods
mov
push
mov
ja
cmp
sbb
bound
sub
lea
sti
jp
cwtl
pop
mulb
arpl
enter
popa
push
test
orl
scas
mov
sbb
ss
pop
lcall
sbb
mov
jl
repz
or
mov
ret
shlb
clc
lret
icebp
xor
xchg
into
movsb
das
mull
add
push
aad
cmpsl
mov
mov
mov
sub
lcall
les
lret
fdiv
rcl
outsb
or
std
addr16
leave
or
lods
mov
xchg
xchg
pop
test
dec
lret
int
pop
aaa
adc
jmp
sbb
filds
cmp
ret
xchg
pop
lods
lods
inc
mov
rsqrtps
pop
mov
push
jg
cmp
outsl
sti
mov
shlb
loop
mov
sbb
xchg
add
popa
mov
mov
pop
push
push
sbb
pop
cltd
or
sub
sbb
xchg
lahf
adc
stos
dec
push
in
push
je
cltd
jge
sahf
xchg
movsl
cmc
pop
cmp
ret
xor
jge
push
xor
jns
jecxz
popf
sub
cmpsb
or
lock
inc
enter
aas
push
outsl
adc
aad
sbb
add
push
hlt
dec
cmpsl
outsl
cmpsb
pop
adc
add
stos
cltd
jle
test
nop
xchg
xchg
test
xor
gs
dec
filds
out
aas
jnp
dec
mov
xchg
cmp
aaa
or
mov
fldt
adc
adc
cmc
repz
inc
xchg
mov
gs
lods
arpl
imul
insl
xchg
sub
jg
das
lods
out
mov
dec
cs
lret
call
jecxz
and
adc
and
xchg
daa
jb
stc
lret
es
mov
mov
sub
xor
xor
mov
mov
rclb
cmp
xchg
das
cwtl
cmp
inc
mov
sub
jg,pt
adc
jo
outsb
mov
les
inc
sbb
and
xchg
pop
fsubl
mov
mov
adc
push
dec
mov
mov
add
xor
mov
ret
mov
push
mov
and
xchg
jg
push
push
inc
arpl
pop
rorb
xor
arpl
cmp
cmp
and
adc
cmp
mov
xor
jecxz
popa
jno
mov
sub
out
popf
imul
mov
jle
xor
jnp
dec
lret
lret
jnp
push
lods
pop
xor
sub
inc
out
push
fsubs
sub
outsb
rolb
lods
das
hlt
mov
negb
mov
xor
dec
cli
push
outsl
addb
cs
sub
rcll
scas
xorl
iret
aam
int3
jecxz
add
mov
in
pop
nop
sub
fldenv
add
je
push
mov
and
test
int
cli
and
push
xor
cmc
fildl
cs
dec
outsl
pop
ljmp
xor
dec
adcb
add
inc
mov
repz
adc
sbb
mov
fidivrl
mov
into
pop
xchg
lods
jmp
mov
jmp
movsb
push
or
xor
jo
outsl
pop
fmuls
pop
jnp
and
arpl
aas
negl
repz
inc
movsl
adc
loope
xor
add
imul
mov
push
dec
jmp
jmp
xor
pop
adc
imul
inc
sahf
out
lea
pop
mov
fistpll
enter
movsl
out
lret
jmp
outsb
xchg
movsl
dec
dec
insl
bound
inc
add
pop
loopne
cmc
rclb
adc
jmp
popa
pop
pusha
xor
xor
jns
stc
repnz
in
adc
dec
scas
outsb
or
sub
jbe
out
dec
lret
daa
cmp
push
test
xor
mov
or
loope
add
sub
cmpsb
movsl
mov
xchg
mov
ret
pop
xchg
jecxz
icebp
decb
lock
in
subl
sbb
or
mov
scas
dec
aad
adc
in
lods
fldt
stos
xchg
sahf
rcll
imul
outsb
mov
cs
jmp
jnp
cmp
add
cltd
sbb
aas
orl
cwtl
idiv
push
in
mov
mov
or
mov
push
lcall
test
xchg
ds
cmp
ror
xor
cmp
mov
cltd
stc
insl
daa
xchg
mov
fisubl
aam
sub
inc
fcmovnb
aam
mov
jmp
jb
test
out
insb
outsb
lock
sub
push
pop
test
adc
sub
push
popa
fstpl
pop
jg
mov
add
push
fldenv
shlb
mov
stc
pop
adc
lahf
sub
or
sbb
xchg
out
push
pop
push
mov
repnz
lock
dec
das
cmpsb
js
xchg
push
roll
mov
test
sub
icebp
aam
addr16
das
test
out
push
les
inc
fs
out
repnz
jmp
shl
mov
out
loopne
lahf
cmp
fmull
insl
scas
mov
out
std
or
cmp
push
inc
fs
jae
push
pop
cmpsb
repz
jnp
xor
out
push
fstl
and
hlt
inc
adc
nop
push
inc
aam
push
push
je
sar
pop
or
inc
sub
mov
cmpsl
fucomp
out
push
cld
outsl
popa
or
xchg
add
cmp
movsl
insl
mov
mov
test
jmp
push
jo
rcrl
jae
pop
xor
sub
jb
xchg
cld
mov
sbb
sub
arpl
ret
jae
sbb
imul
dec
addb
mov
int3
in
lock
cli
enter
mov
bound
dec
push
jp
loopne
cld
sub
sahf
xor
repnz
mov
rolb
dec
loopw
xchg
dec
jae
sbb
imul
mov
or
jl
pop
xchg
mov
inc
imul
fnsave
jno
and
aas
dec
fst
cld
mov
push
jle
ret
cld
jp
jns
lret
pop
push
insl
mov
mov
jnp
jl
dec
mov
int3
filds
pushf
xchg
adc
push
mov
call
mov
mov
pushf
add
shrl
cmp
mov
jmp
jb
push
lcall
stos
rcr
sbb
push
xchg
push
pop
inc
ja
repnz
adc
repz
adc
popa
movsbl
fsubrl
cwtl
xchg
fwait
mov
adc
fnsave
dec
jl
mov
mov
mov
pusha
sbb
xor
mov
push
sbb
push
jp
adc
adc
xchg
sarl
sub
jg
insb
je
fs
scas
call
cmp
enter
xchg
roll
xchg
xchg
mov
jge
fwait
mov
into
subb
push
int3
std
cld
jne
daa
cmp
sub
cmpsb
stc
aam
mov
mov
dec
sahf
dec
js
ret
mov
fs
repnz
inc
popf
lds
dec
data16
sbb
sub
mov
lds
inc
or
movsb
mov
sub
jl
xchg
aas
cmp
mov
mov
cld
data16
inc
inc
arpl
add
fstps
clc
iret
xorl
push
imul
inc
mov
pop
mov
popa
adc
pop
and
test
cli
add
mov
fs
test
ror
push
rorb
sub
lcall
adc
popa
hlt
inc
cltd
aaa
pop
pop
jb
ss
lcall
pop
mov
xor
fidivl
pushf
add
pop
mov
lcall
out
js
push
ds
je
dec
sub
inc
jnp
and
movsl
ja
imul
or
jne
lret
insl
mov
data16
pusha
cmp
mov
mov
and
test
mov
clc
xchg
sbbb
mov
jl
jb
jbe
les
imul
inc
and
push
lock
loopne
push
call
mov
pushf
gs
push
xchg
test
dec
pop
movsb
push
jge
jbe
mov
mov
ret
push
pop
aaa
mov
inc
xchg
arpl
leave
cld
or
and
sbb
sbb
jae
mov
sub
push
adc
mov
aaa
cmp
cmc
imul
std
enter
inc
fbld
imul
stc
or
xchg
push
dec
push
or
test
jno
movsb
ret
fiadds
and
inc
mov
and
in
add
out
adc
in
inc
adc
cmc
mov
paddusw
das
xchg
push
xor
ds
jmp
push
fadds
mov
test
insb
insl
stc
jg
mov
inc
push
rolb
daa
movsl
mov
aad
mov
scas
sub
je
add
insl
inc
in
lock
mov
js
mov
push
fldcw
and
and
sti
mov
mov
sarl
arpl
scas
aas
xchg
mov
sbb
lods
mov
inc
push
cs
jns
xchg
out
enter
or
push
cmp
mov
ss
mov
cmp
sub
dec
stc
test
adc
test
fsubs
cs
lods
adc
dec
mov
les
gs
jbe
sbb
push
stc
or
orl
jp
into
cltd
fs
jmp
aam
dec
sub
popf
mov
or
je
dec
stc
rorl
repz
inc
mov
test
into
fwait
mov
ja
inc
cld
jno
and
lcall
rclb
mov
add
cmpsb
ds
dec
aad
loope
inc
or
mov
pop
int3
je
pushl
je
rcr
pop
xchg
fldt
mov
dec
sub
mov
mov
adc
cmp
sbb
xor
ret
adc
cmp
and
xchg
mov
inc
in
popf
and
lahf
ss
popf
and
push
es
popa
mov
test
xchg
jg
xor
push
push
sub
mov
and
xlat
push
sub
cmp
sbb
mov
xchg
rcl
or
cmp
sarb
jle
loopne
dec
stos
jle
and
xlat
mov
mov
mov
mov
incb
cwtl
mov
sbb
int
jecxz
dec
js
xor
mov
shll
or
loopne
mov
clc
mov
adc
shr
mov
std
lock
out
xchg
sbb
jo
jle
shl
mov
mov
mov
push
mov
out
pop
lret
adc
xor
fs
push
cmp
cmc
jg
fmulp
xchg
push
mov
lcall
and
push
into
aam
push
xchg
leave
jne
jp
adc
jbe
lods
mov
adc
lods
adc
sub
ret
pushf
add
xchg
insl
jae
xlat
imul
inc
mov
call
sbb
imul
mov
sbb
sub
enter
xchg
pop
shlb
std
mov
jae,pt
dec
inc
stc
push
jns
cmp
or
mov
test
idivb
jl,pn
push
das
mov
negb
test
adc
ret
mov
lcall
and
xchg
inc
cld
cmp
mov
int
dec
test
data16
lahf
insb
mov
and
insl
xchg
clc
dec
bound
dec
cmp
mov
movsb
mov
pop
mov
pop
xchg
dec
sbb
fcomps
testb
movsb
mov
pop
jp
test
ficoms
xor
mov
arpl
repnz
sub
adc
popl
popf
pop
fsubl
rcl
pop
in
adc
pop
pop
leave
mov
adc
inc
mov
pop
mov
shrb
sbb
mov
aas
nop
int
dec
mov
mov
lds
add
int
roll
lods
pop
push
aad
in
or
jmp
pop
into
sub
sub
test
cs
hlt
aam
inc
mov
push
mov
cmpsl
out
push
mov
outsl
mov
dec
jnp
rcl
xor
pop
sbbl
fistpl
lret
into
in
lret
cmp
add
sub
movsb
mulb
rorl
sbb
jnp
nop
pop
sub
orl
stos
mov
jg
push
lds
fistpll
mov
lds
dec
pop
test
lods
loopne
icebp
cmp
aam
push
xor
int3
and
mov
stc
sub
int3
jno
pusha
or
test
lods
iret
push
je
push
add
pop
je
push
shlb
pop
add
adc
int
outsl
xchg
fbld
xchg
xchg
add
dec
imul
sbb
addr16
add
mov
and
sti
mov
jg
cmp
pop
test
sbb
das
into
leave
das
loopne
punpckhbw
jo
ror
pusha
in
cwtl
shll
add
clc
sbb
pop
cmp
inc
mov
sub
mov
popf
lods
mov
cmp
cmpsb
popa
fisubrs
cmp
mov
ret
inc
sub
bnd
xchg
je
mov
les
cld
sti
out
push
sub
or
les
add
out
push
ds
adc
jp
add
mov
imul
inc
stc
xor
mov
sbb
cmp
sub
jno
push
mov
sbbb
mov
and
mov
jl
inc
mov
cmp
pop
cmp
pop
push
fidivrs
mov
jge
mov
outsl
stc
lods
outsb
rcrl
testb
bound
sahf
jge
ljmp
popa
adc
lock
loop
sbb
mov
repz
test
sbb
fdivr
lock
pop
dec
rol
outsl
xchg
mov
push
adc
lods
ss
cmc
or
jns
sarb
or
xchg
fmuls
movsl
out
mov
cli
xchg
inc
mov
addb
push
test
js
enter
sub
out
out
pop
and
xor
icebp
xor
inc
stc
cmpb
or
in
push
idivb
dec
pop
repnz
addr16
mov
adcb
mov
lods
jb
adc
out
mov
ja
cmp
xchg
xchg
loope
pop
pushf
pop
adc
mov
stos
int
cmpsl
inc
jp
das
fmul
sub
mov
jns
pop
fmul
fnsave
jge
sub
pop
xor
mov
cmp
pop
test
xlat
insl
out
adc
stos
sbb
movsb
xchg
pop
popl
push
pusha
jne
dec
dec
lcall
and
pop
cmp
cli
fwait
mov
out
dec
mov
aad
shrb
in
add
das
aad
gs
lods
pushf
ljmp
addr16
sbb
mov
inc
lcall
sahf
adc
or
push
sbb
add
lock
mov
jmp
and
hlt
lods
and
leave
cmp
repz
xchg
jae
fadd
scas
int3
mov
imull
mov
ret
mov
xchg
dec
jno
rol
fisttps
and
ror
inc
scas
jp
jb
add
sub
cmc
mov
jne
idivb
xlat
push
aaa
adc
hlt
ret
insb
leave
pop
inc
daa
clc
lea
cmpsb
movsl
sub
movsl
mov
lcall
mov
mov
lahf
fcompl
push
jg
or
sub
ja
fldcw
out
lret
les
in
or
lcall
in
idiv
sub
arpl
lock
push
es
shlb
xchg
cmpl
stc
inc
outsb
xchg
jno
je
and
scas
sbb
jno
add
xchg
xchg
sub
idivb
cltd
jl
or
sub
repz
add
push
pusha
xor
pop
sbbb
push
push
lds
push
insb
push
int3
les
insb
loop
mov
into
cmpsl
je
mov
shrl
xor
test
int3
scas
mov
sbb
cmpsb
das
lds
and
adc
adc
rorb
jbe
int3
mov
hlt
je
pop
push
mov
cmp
jae
stos
push
pop
daa
scas
xchg
xchg
push
jg
mov
add
sbb
mov
into
and
popa
xchg
pop
out
lcall
inc
dec
sub
push
aad
int3
jg
jmp
jae
enter
mov
daa
andb
inc
fdivl
cmp
loopne
es
mov
inc
imul
jbe
mov
or
pop
push
ror
pop
xor
sbb
lock
js
out
add
xor
mov
rcrl
push
add
out
stos
xchg
aam
mov
xchg
out
sar
out
xchg
sbb
inc
adcb
push
lods
int
std
ret
fists
inc
popa
repz
pop
inc
pop
mov
idivb
jmp
push
and
int
movl
dec
cmc
mov
imul
jl
mov
das
jae
pop
and
mov
add
dec
mov
imul
add
mov
add
mov
movsb
inc
sub
pop
hlt
sar
mov
jnp
lcall
mov
ret
test
cmp
cmc
sbb
pushf
leave
in
imul
hlt
or
xchg
push
mov
movhps
clc
sbb
movsl
pand
dec
inc
jno
popf
aad
mov
das
xchg
aam
and
mov
aas
cmpsb
sub
jo
or
adc
inc
aad
inc
insb
clc
xor
mov
jns
jle
roll
lahf
inc
test
xchg
int
adcl
pop
ds
jmp
and
add
movsl
push
sbb
data16
lcall
jno
jae
addb
rcl
pop
lret
jbe
in
ficompl
shlb
dec
push
push
push
sbbl
fisttpll
out
lret
es
out
mov
repnz
cmpsl
fs
les
jmp
jmp
push
stos
jmp
in
cld
in
out
icebp
pop
mov
cmp
xchg
jge
xchg
xchg
cmp
inc
mov
lret
sbbb
push
mov
mov
cli
dec
repnz
sub
sti
or
pop
in
mov
ljmp
je
xor
cltd
adc
add
imul
sarl
xlat
notb
test
loopne
call
divl
sbb
ljmp
nop
fstpt
mov
mov
and
xor
adc
aaa
mov
cmp
mov
mov
out
fstpl
idiv
xor
ret
cwtl
inc
sbb
negb
clc
sbb
ljmp
mov
shlb
push
ja
dec
mov
dec
pusha
stos
sbb
adc
or
jb
or
mov
jnp
add
popa
call
xchg
ret
lahf
mov
adc
sub
daa
mov
jl
lock
jmp
add
mov
sbb
sbb
xchg
je
out
outsb
mov
sub
and
inc
lcall
lock
in
xchg
cmp
adc
cmp
movsb
lcall
pop
nop
mov
dec
sbb
inc
or
les
dec
jl
mov
lds
inc
outsl
mov
pop
xor
jnp
lods
mov
fwait
je
dec
imul
jnp
js
xlat
movsb
aas
pop
xor
ds
xlat
shr
dec
adc
in
stos
and
cmp
cli
outsl
js
inc
sub
push
bound
inc
pop
cmp
xlat
and
int3
cmc
jne
into
jo
dec
mov
and
or
xchg
cld
cs
add
popa
xchg
adc
mov
leave
popf
pop
rorl
insl
hlt
jno
add
dec
icebp
pop
fisttps
fnsave
hlt
jns
lea
imul
sbb
outsb
out
cmp
mul
xchg
mov
sbb
jae
dec
add
repz
adc
fcoml
add
inc
mov
sahf
sub
push
mov
arpl
xor
out
push
mov
xchg
mov
sub
shrl
jg
aas
cmp
jl
mov
lret
lret
stos
mov
repnz
sbb
dec
aad
dec
cmp
sbb
insb
jae
push
mov
adc
mov
andl
repz
mov
bound
xor
dec
inc
mov
mov
aad
iret
xor
jne
in
jb
sbb
sbb
loop
sbb
xchg
dec
mov
ds
jns
fistps
stos
cmp
fwait
out
lea
stc
sub
in
inc
cld
fildll
push
sub
inc
call
and
ret
mov
cwtl
inc
xchg
addr16
dec
inc
clc
xlat
adc
mov
inc
lock
js
and
sbbb
into
nop
in
sahf
pop
add
adc
jnp
lods
mov
mov
xchg
pop
mov
sbb
inc
mov
mov
xor
jl
jo
icebp
push
jmp
and
cli
sub
mov
pusha
dec
daa
mov
adc
sahf
and
inc
mov
cwtl
fisubs
mov
outsl
pop
aaa
sbb
imul
jmp
data16
cmpsl
pushf
lods
cld
sub
inc
cmpb
jmp
daa
inc
mov
mov
or
mov
pop
sub
xchg
add
jno
cmp
or
fwait
mov
fimull
and
mov
push
stos
xchg
xor
xchg
or
test
add
or
loope
jmp
pushl
lods
sub
xchg
jmp
adc
add
sbb
xor
and
mov
sbb
dec
negl
hlt
or
gs
inc
int3
xorps
icebp
push
call
sub
xchg
not
scas
shrl
jne
push
insl
adc
mov
push
sub
insl
sbb
and
push
mov
jge
mov
mov
cli
sahf
lea
test
cld
mov
cmpsb
jne
mov
lods
xchg
pop
std
sbb
pop
inc
repnz
test
in
adc
pop
testb
ret
leave
mov
test
jo
cld
rolb
adc
cmp
pop
lods
divl
loopne
dec
outsl
popa
out
or
jg
jae
movsb
movb
sahf
arpl
mov
pop
lcall
lcall
cs
sub
out
leave
and
cwtl
scas
iret
pop
scas
lods
pop
mov
jecxz
ja
mov
in
das
xchg
insb
cmp
mov
mov
pop
lcall
jns
outsb
cld
pop
enter
cmp
mov
inc
aam
sub
sbb
les
fsubs
or
or
sbb
mov
jp
pushf
fs
mov
xor
or
add
push
pop
aas
inc
dec
ret
aad
pusha
or
je
and
stos
jge
sbb
dec
jns
jmp
test
mov
mov
sub
stos
sti
add
adc
mov
push
repz
pop
inc
push
retw
ficoml
aaa
sti
adc
push
push
mov
dec
call
cmpl
pushf
repz
pop
ret
lahf
xchg
cmp
movsl
cmp
cwtl
loope
or
jne
and
int
incl
int3
add
lea
gs
inc
cmp
inc
daa
fbld
movsb
jns
and
mov
out
daa
les
jp
in
lret
inc
cld
jmp
pop
aam
xchg
dec
push
mov
insl
rolb
xchg
cmp
out
jno
lahf
shrl
add
push
mov
clc
in
mov
pop
mov
in
sti
nop
adc
jb,pn
dec
movsb
xor
loop
call
xchg
imul
pop
out
add
lods
mov
and
sub
or
stos
xor
mov
xor
in
cmp
inc
lods
lret
pop
sti
jecxz
mov
push
dec
int3
and
das
add
js
dec
push
mov
xor
aaa
pop
push
popa
scas
sbb
scas
jnp
scas
inc
movsb
daa
mov
adc
dec
xchg
xchg
or
inc
jp
mov
imul
les
pop
cld
movsb
fiaddl
xor
sbb
cmpl
xchg
sbb
cwtl
cmpl
mov
sar
or
pop
mov
sahf
push
sub
movsl
inc
push
mov
movsl
cmp
jmp
xchg
inc
mov
adc
pop
jno
inc
sbb
inc
dec
mov
les
sbb
mov
jge
jns
jo
xchg
cltd
out
mov
pop
in
sub
scas
rclb
inc
cld
dec
out
jle
xor
mov
pop
mov
cld
addr16
shl
in
adc
cs
fxch
pop
mov
xchg
mov
dec
mov
insb
mov
or
fnstsw
jge
xor
loopne
lcall
sub
test
ret
mov
les
inc
pop
test
int
mov
nop
xchg
inc
cmp
les
dec
pop
xor
fnstenv
xor
psrlw
push
mov
stos
imul
test
sar
aaa
xchg
test
rol
mov
mov
adc
enter
out
faddp
cmp
bound
mov
adc
xor
push
lret
dec
loope
dec
inc
jl
jbe
jl
cmp
pop
sub
mov
jo
push
repz
popa
in
fcmovne
arpl
xor
call
xchg
test
xor
pop
and
mov
das
shrl
jge
mov
xlat
push
jmp
add
popa
mov
mov
xchg
addr16
lcall
fdivr
subb
imul
mov
loope
mov
sarb
repz
leave
pop
stos
or
xor
aad
jne
add
cmp
cmp
scas
and
push
xor
mov
lds
fstpt
jmp
loop
call
mov
sarb
pop
adc
push
pop
scas
cmp
int3
sbb
xchg
movsb
lods
mov
jae
adc
inc
stos
scas
in
push
mov
jp
mov
rorl
mov
jns
cwtl
aaa
out
lods
ja
out
dec
adc
pop
out
cmp
dec
adc
jmp
sbb
jge
mov
repnz
lods
loopne
push
daa
clc
pusha
inc
xchg
adc
icebp
sbb
adc
push
pop
inc
orl
bound
sahf
pop
aas
ret
in
lcall
sub
adc
ds
dec
pop
jl
lods
nop
adc
xchg
loop
mov
push
les
inc
mov
addb
push
stc
jg
in
sbb
out
inc
popf
mov
pop
push
lea
mov
mov
out
sbb
sbbl
and
mov
mov
fmul
inc
insb
or
cmpb
leave
xor
xchg
fwait
dec
xchg
gs
mov
aas
push
loopne
lods
test
or
xor
xchg
lea
jmp
mov
sbb
jns
les
xchg
cmp
push
addr16
sti
mov
cmp
bound
pop
ljmp
inc
inc
adc
scas
enter
inc
lods
mov
movsl
pminsw
or
hlt
bound
or
gs
xchg
es
psubw
jb
lock
insb
sbb
cmpb
adc
adc
test
jg
add
aaa
fsubs
cmp
push
test
pop
add
mov
sub
adc
jle
rep
pop
nop
fidivrs
ret
divb
mov
jle
std
dec
ljmp
jp
jnp
negl
test
ret
xchg
aad
fwait
jb
cmp
mov
out
mov
mov
cmc
int
sub
call
std
incl
nop
jmp
dec
add
out
shrb
jp
inc
and
out
ss
or
push
jecxz
icebp
loope
xchg
call
pop
ja
pop
jne
jbe
nop
fcmovbe
lret
dec
sub
and
icebp
mov
mov
sub
cmp
decb
gs
add
push
inc
fwait
push
movsb
aas
jl
add
xor
mov
xor
mov
imul
enter
fistpl
fcmovb
pusha
std
xchg
adc
data16
pusha
mov
pop
icebp
fistpll
cmp
jg
dec
test
push
xlat
push
push
jae
and
sbb
loopne
ficoml
push
lods
gs
mov
push
or
xchg
mov
dec
mov
cmp
outsl
push
icebp
push
out
iret
out
fsubs
pop
sub
xor
pop
mov
inc
decb
inc
das
jmp
jbe
insl
and
popf
fs
std
sbb
sub
xor
xor
bound
cmpsb
cmp
fstl
cmp
loop
mov
dec
adc
mov
mov
fiadds
sbb
or
mov
xor
sbb
push
test
mov
es
add
xor
mov
push
adc
das
fiaddl
jge
lahf
fcmovnb
mov
add
fs
in
mov
jmp
jg
pop
scas
dec
mov
fidivrs
jecxz
cmp
xchg
xor
aas
fldpi
daa
mov
adc
mov
mov
cmpsb
fmull
lcall
pop
subl
mov
xor
push
ss
idivb
mov
pop
fcoml
out
mov
mov
pushf
sbb
and
sbb
clc
xor
adc
pop
test
xchg
dec
adc
sbb
sar
ror
sti
arpl
jp
jno
adc
push
pop
pop
lahf
cmpsb
pop
dec
outsb
mov
dec
sub
and
lea
mov
sub
cmp
sti
push
mov
call
mov
pop
test
push
je
test
lahf
pop
lcall
push
cmp
adc
int
in
xchg
cmp
adc
mov
shlb
sbbl
pop
lret
fxch
lret
sub
cmpsb
cvtpi2ps
sarl
xor
std
inc
movsb
sahf
in
sbb
out
push
dec
fsubrp
sarl
movsb
push
pop
nop
xchg
mov
jle
out
pop
arpl
push
push
pop
push
rorl
aaa
push
int3
pop
cmpsb
xchg
jp
cmp
mov
sub
pop
cmp
jae
pop
clc
scas
iret
aaa
sbb
sub
popa
das
call
pop
sbb
call
dec
push
xor
xchg
scas
pop
lds
adc
out
sub
jge
xchg
orl
mov
sub
int
je
daa
iret
test
mov
jp
lret
xchg
into
cltd
cwtl
cli
inc
jbe
push
pop
pop
je
adc
ss
dec
jge,pt
inc
sarb
ljmp
mov
add
pop
add
sub
testl
push
jmp
push
pop
insb
mov
imul
popa
mov
inc
data16
call
aas
dec
pop
push
addb
jge
jbe
cmpsb
sub
jbe
jne
popf
pop
les
cmpsb
pop
dec
push
popf
pop
cmp
add
or
jge
inc
mov
cli
xor
add
loope
pop
xchg
cmpsb
inc
pop
cmp
mov
in
insl
push
out
pushf
pop
data16
mulb
fadds
lahf
jns
in
add
std
mov
loop
sub
int3
inc
std
orb
mov
in
pop
scas
dec
xchg
sbb
js
push
xor
lahf
rolb
scas
jae
loope
je
jo
clc
pop
sub
ds
jno
sub
loop
pop
jns
fstl
mov
std
push
adc
cld
sub
inc
lds
jbe
adc
adc
or
xchg
bound
sub
ret
lods
into
ja
jnp
leave
or
xchg
or
je
test
mov
lds
pop
sbb
aad
mov
push
add
mov
mov
push
xor
sub
push
loope
jne
scas
ljmp
andb
arpl
pop
adc
add
cmp
xchg
inc
sti
jno
frstor
out
shll
pop
arpl
pop
xchg
pop
shrl
in
mov
jb
cmpb
jnp
jmp
out
jmp
test
or
fsubs
daa
roll
mov
mov
and
push
fsubrp
push
push
xor
sbb
ljmp
mov
inc
cld
or
and
mov
fwait
xor
fcompl
jno
xor
sub
cmp
pusha
push
push
rolb
je
in
push
cmp
shll
movsl
push
in
cmp
imull
sahf
mov
lret
xor
pop
stc
inc
and
into
mov
pusha
in
popa
xchg
arpl
cmc
arpl
push
arpl
scas
adcl
mov
sub
iret
pusha
mov
add
lret
in
xorl
bound
dec
push
and
jns
inc
sub
lcall
iret
ret
testb
scas
mov
add
jmp
mov
xlat
mov
xorl
dec
call
mov
pop
sub
push
cmp
jecxz
ss
mov
jns
es
push
test
pop
pop
inc
sahf
pusha
testl
inc
aas
les
bound
cmp
ljmp
and
cld
add
cmp
scas
sbb
lcall
dec
push
xchg
lcall
in
mov
push
scas
ljmp
iret
jmp
push
push
lret
in
sahf
dec
data16
ret
lock
outsb
cld
sub
in
mov
xchg
shrb
pop
jmp
insb
repz
push
lret
jae
clc
test
pop
cmp
call
xor
test
xchg
aaa
mov
push
or
cwtl
cs
lret
mov
mov
mov
pusha
push
icebp
and
fisttpll
fsubrs
lret
pop
sarb
test
jmp
cmpsb
rcrl
push
adc
add
cmp
in
jmp
cmp
out
test
sub
lcall
xchg
popa
int
cmp
lcall
and
xor
mov
imul
fwait
mov
xor
dec
mov
push
dec
jg
jnp
add
xor
test
jg
aam
inc
cmpsb
xor
lea
imul
pop
bound
add
mov
sbb
or
inc
push
ds
int3
aad
inc
icebp
and
in
ds
loopne
pop
sbb
out
int3
aad
mov
sbb
iret
cmpl
jnp
push
xchg
call
ljmp
and
lock
jns
push
std
test
mov
inc
add
mov
xchg
push
fstl
jb
pop
ljmp
out
and
fidivrl
repz
in
pushf
sub
sub
cmp
pushf
adc
outsb
jne
stc
sub
iret
lret
in
inc
sub
aas
iret
mov
and
dec
pop
sub
xor
mov
mov
mov
pop
fldcw
bound
mov
in
cmp
cmc
das
pop
push
not
and
inc
cmpsl
or
jge
sub
mov
cwtl
in
mov
emms
outsl
add
call
mov
in
insb
dec
sti
add
std
cmp
outsb
enter
push
jmp
dec
pop
sub
cwtl
loope
inc
mov
push
enter
imul
cmpsb
nop
sbbl
rorl
mov
adc
push
in
xlat
sub
movsb
lfs
mov
imul
into
jl
jb
lods
cmc
or
xor
and
xchg
jmp
and
addr16
lea
mov
sub
add
mov
cmpsb
push
or
or
in
sbb
adc
cmp
pop
mov
andnps
dec
adc
iret
add
std
jg
mov
mov
lock
in
mov
fiaddl
sub
iret
faddl
aaa
insb
clc
inc
gs
push
daa
ret
sub
ljmp
dec
adcl
sbb
in
test
insb
and
xor
shll
mov
ja
push
push
arpl
fiaddl
cmp
clc
int
lcall
jno
xchg
or
mov
int3
pop
xorb
cmp
imul
add
popf
popf
cld
cs
imul
mov
and
loopne
adc
js
lods
cmc
and
add
xor
or
inc
mov
addr16
or
cmp
ljmp
jl
movsl
pavgb
sub
stc
xchg
ljmp
pop
subb
push
jae
cmp
jp
jne
dec
xchg
and
in
popf
pusha
fs
mov
mov
shl
xchg
adc
pop
icebp
movsl
cmpsb
sub
aam
loopne
outsb
adc
std
xlat
fucom
pop
push
out
fisttpll
not
movb
mov
insb
cld
sti
lds
loopne
andb
dec
cmp
sti
dec
push
test
fnstenv
mov
mov
xchg
push
pop
addl
cmp
pop
jmp
push
mov
cwtl
xchg
dec
push
movsb
add
push
movsl
lret
dec
jl
fsubrp
and
mov
test
xor
test
push
cmp
cmc
pop
mov
jl
push
repz
popf
xchg
aaa
div
push
add
mulb
mov
dec
insl
mov
idivl
mov
test
jecxz
shll
enter
sbb
sbb
lea
dec
xor
push
test
pop
pop
mov
test
inc
shl
pusha
pusha
sti
pop
dec
orl
jp
sub
adc
sub
cmpsb
cmp
outsb
loopne
pop
or
xchg
call
jno
adc
or
xor
mov
push
test
test
out
bound
dec
ljmp
jmp
xchg
push
loop
push
pop
ja
pop
cld
cltd
adc
jmp
dec
fldlg2
mov
mov
mov
jne
movsl
or
jge
imul
cmp
xchg
jmp
xchg
sub
fimull
bound
sbb
mov
pop
ljmp
fs
imul
push
jge
mov
xlat
xor
sub
inc
pop
sbb
dec
pushl
sti
loop
mov
fcoml
mov
push
push
inc
push
ja
cmc
lea
test
adc
jns
and
fnstsw
sarl
jbe
fldenv
fs
shl
sarb
shll
fistpl
or
je
js
jo
fmuls
pop
loop
dec
jne
adcb
or
jns
std
mov
xor
lock
cmp
xchg
loop
fcoms
push
xor
adc
fsubl
inc
dec
lock
mov
or
inc
aas
pop
sahf
and
outsl
cmpsb
or
fists
jnp
rcr
add
popa
push
aam
push
sub
and
je
xor
xchg
stos
rcrl
add
pushw
push
adc
xor
jno
inc
and
ror
sub
mov
or
in
out
mov
or
push
movsl
xchg
pop
pop
icebp
ret
xor
jae
fcoml
xchg
iret
imul
lock
sub
pop
scas
pop
jp
mov
jno
sub
movsl
adc
cmp
jl
int3
movsl
or
nop
sbb
ljmp
add
loope
in
mov
add
repz
mov
lock
mov
sub
pushf
adc
cld
sbb
mov
jb
jne
adc
xchg
pop
fdiv
inc
sbb
out
arpl
xor
cmc
push
or
xchg
cmp
mov
jne
push
pop
je
gs
push
arpl
sarl
lds
fwait
mov
in
cltd
mov
mov
xor
pop
add
mov
pop
out
mulb
dec
pop
arpl
aaa
out
sub
xchg
nop
mov
outsb
mov
stc
shr
into
inc
mov
and
add
mov
data16
aad
mov
jae
in
aaa
mov
cmp
stos
test
xchg
push
cltd
jb
and
sbb
stos
sbb
jmp
dec
mov
imul
and
addl
mov
divb
test
jnp
cmp
ficoms
xchg
adc
jno
xchg
leave
jne
stos
push
and
pop
pusha
pop
loope
xor
ret
out
pop
jp
ret
imul
popa
addr16
cwtl
pop
mov
dec
clc
lods
jg
ret
or
popf
jnp
xchg
sti
mov
lock
cmp
xor
mov
jp
fs
addb
call
mov
aaa
mov
lret
xchg
xlat
aam
add
gs
cli
dec
test
xor
insl
or
and
lcall
mov
jns
or
mov
adc
jle
fwait
mov
sub
imul
xchg
add
sub
fsubrs
lahf
add
shr
xor
dec
or
xchg
sbb
decl
sbb
jmp
outsl
stos
jecxz
std
push
pushf
cld
imul
insb
popa
push
test
ds
lds
cmc
or
push
fimull
pop
in
enter
cmp
idivb
test
out
push
push
mov
gs
repz
dec
sbb
sub
xlat
cmp
sub
xchg
rcrb
cmp
push
rcrb
out
or
sbb
push
jl
int3
xor
pop
icebp
addr16
sbb
mov
cltd
sbb
cld
test
cmpb
in
and
pop
enter
leave
jmp
shlb
mov
sub
cmpsl
out
imul
test
cmpsb
mov
inc
inc
rcrb
test
cmpsl
mov
pop
repz
cmpsl
aam
shll
movsl
mov
pop
mov
fisttps
ret
pop
popf
popa
mov
je
stos
push
sti
dec
or
sbb
mov
out
jne
jle
repz
add
xor
cmc
and
sbb
cmp
dec
cltd
push
mov
fistpl
mov
push
ss
dec
loop
movl
sarb
popa
jo
mov
movsl
push
inc
sahf
add
jbe
xchg
cwtl
icebp
jae
push
xor
imul
jae
xchg
xchg
bound
pop
fs
dec
sub
dec
fcoms
push
xchg
sbb
pop
xchg
data16
push
mov
dec
sub
mov
jmp
sbbb
mov
mov
into
cmc
push
shl
pop
xor
pop
jae
aam
push
sub
vmulps
push
aam
rcrl
repnz
ret
test
mov
dec
sub
mov
sbb
in
pushf
ret
cmpsb
or
popa
enter
cmp
dec
add
sub
xor
mov
push
pop
mov
aad
in
push
push
ret
outsl
sub
pop
mov
jnp
in
aam
sbb
shlb
lock
mov
and
daa
pop
push
push
std
sbb
mov
inc
or
xchg
mov
pop
test
ljmp
std
mov
sbb
add
mov
mov
and
das
cld
cwtl
sbb
rcrb
stos
lcall
pop
movsb
aad
ljmp
inc
adc
cmpsb
icebp
cli
inc
pop
imul
pop
fidivrl
sahf
das
mov
jo
ficomps
repnz
mov
cltd
jecxz
adc
sbb
add
cmc
outsb
fmull
test
mov
push
jmp
inc
inc
jo
cmpsb
or
notb
mov
xor
out
mov
push
sti
rolb
push
adc
pop
insl
into
or
lock
test
outsl
pop
sbb
xchg
loopne
adc
pop
jl
mov
test
pusha
mov
insl
pushf
jg
xor
adc
and
fwait
jb
lcall
pop
mull
pop
int
sub
cmc
mov
cmp
stos
cmp
imul
sahf
mov
imul
jo
pop
push
mov
aas
shrb
jb
movl
mov
cmp
xor
das
fisubl
imul
or
mov
xchg
push
add
adc
inc
mov
aas
fistpl
pop
lods
mov
add
movsb
pop
in
je
lret
ficoml
mov
pop
in
cmp
loopne
push
pop
pop
movsb
arpl
push
cltd
rcll
sbb
inc
dec
cltd
add
xchg
or
es
dec
lret
inc
xchg
inc
imul
push
cwtl
push
push
mov
repz
shrl
pusha
xor
cmp
jmp
ret
lcall
sbb
push
ss
adc
insl
mov
out
and
inc
jmp
mov
or
and
dec
je
js
and
mov
or
loopew
mov
cli
add
movntps
jl
xchg
in
loop
adc
xchg
xchg
and
xchg
push
sub
lods
push
sbb
pop
inc
fldt
cmpsb
loop
iret
jns
or
mov
add
xor
into
and
mov
jae
nopl
ljmp
stos
sbb
stos
call
and
jo,pn
xchg
mov
fsubrs
and
push
pusha
add
pusha
adcb
mov
mov
or
mov
or
adc
sub
shr
and
outsb
add
pusha
call
jno
movsl
push
sub
lock
mov
loopne
push
jge
or
lahf
outsl
xlat
dec
sbbb
xchg
daa
pop
fldt
aaa
xor
notl
or
lret
mov
inc
andb
mov
pushf
icebp
mov
or
loop
cwtl
inc
mov
std
mov
lods
lods
push
dec
cmpb
nop
shlb
adcb
and
in
adc
adc
inc
addb
sahf
cmpsb
cld
int3
fisttpll
cmp
xor
cmpsb
rclb
push
sub
insl
jp
pop
call
inc
arpl
pushf
decb
mov
in
shrb
dec
add
fisubs
inc
xor
pop
push
fwait
hlt
mov
clc
mov
jmp
sub
xlat
sbb
and
push
push
leave
mov
xor
aam
adc
sub
and
or
and
fstl
pop
mov
inc
mov
ret
sbb
push
mov
pop
ret
hlt
movb
stos
movsl
add
jne
mov
pop
xchg
jle
icebp
loope
sti
adc
arpl
mov
xor
and
ds
cmp
into
inc
dec
push
repz
imul
pop
popa
es
sbb
dec
push
add
jae
stos
and
lret
cli
and
lods
mov
mov
push
aad
xchg
xor
and
mov
rorl
xchg
sub
mov
test
add
sbb
icebp
pop
call
cmp
rcrl
div
leave
test
out
push
imul
jg
jbe
jl
ret
jbe
add
imul
mov
popa
icebp
mov
fadd
mov
loope
adc
fiadds
pop
mov
test
adc
dec
pop
ds
push
push
daa
loopne
jmp
xor
dec
add
iret
xchg
clc
cwtl
subb
cli
aad
push
push
jl
pop
scas
adc
jbe
jno
arpl
push
bound
add
xchg
mov
ret
adc
dec
jecxz
leave
xchg
fsts
pop
sub
xchg
js
cmp
inc
lea
inc
pmaxub
jmp
js
jbe
and
inc
adc
repnz
pop
pop
or
jecxz
mov
or
sbb
mov
cmp
pop
pop
push
jmp
scas
xor
cmp
das
jl
imul
jmp
test
lahf
leave
cli
inc
cmpsb
and
mov
mov
dec
mov
cmpsb
sbb
xchg
push
xchg
loop
lock
stos
rol
xchg
and
lret
add
stos
cmp
imul
std
mov
sbb
pop
jp
fisubl
add
fidivs
lahf
add
roll
outsb
repz
dec
pop
mov
inc
cltd
pop
inc
loop
lock
cmp
pop
xor
cmpsb
push
cmp
or
push
cld
add
xor
sbb
dec
ds
jmp
out
ss
loop
xchg
dec
adc
addw
popa
and
imul
loop
push
leave
sarl
cmp
pop
jo
pop
movsb
push
adc
inc
mov
andl
pop
mov
dec
adc
shrl
dec
repnz
stc
mov
push
xchg
test
pop
or
loope,pn
pop
cli
dec
xchg
dec
call
outsb
test
pop
or
divl
insl
dec
adcb
dec
push
enter
insb
cmp
sarb
sub
cmp
jno
enter
stos
mov
xchg
xchg
ret
jbe
jecxz
leave
push
call
mov
loop
pop
and
mov
inc
sub
sbb
mov
cwtl
sub
movb
sub
repnz
aas
fiadds
adc
dec
scas
push
pop
outsl
shll
jae
loop
call
lds
cli
sub
mov
aaa
push
add
into
dec
fisttps
insl
push
jae
ds
sbb
call
adc
out
arpl
stc
push
mov
mov
pop
lea
xor
mov
fnstcw
test
jae
xor
push
sbb
mov
in
pop
cmc
mov
mov
popa
or
mov
sub
jne
sbb
incb
mov
dec
mov
hlt
lret
inc
lods
sbb
mov
pop
mov
pusha
sbbl
adc
fbld
fs
int
inc
test
pop
jb
rorl
jecxz,pn
push
ret
movd
js
xchg
add
sahf
pusha
js
sbb
cltd
mov
push
loope
and
push
fildll
shlb
cmp
adc
rcrb
jbe
pop
xchg
inc
fwait
xor
mov
sub
aad
cmpsb
leave
jo
or
hlt
fistl
pop
fwait
push
mov
pop
or
xor
cli
mov
mov
jmp
inc
pop
cmp
push
hlt
inc
adc
mov
and
mov
and
fnstsw
fldcw
adc
orl
loope
adc
jle
xor
and
addr16
inc
cmp
add
xor
pop
out
test
leave
mov
lcall
repnz
sbbb
cmc
je
sub
fldl
popa
fs
int3
xchg
sub
mov
into
jl
insl
pop
das
bound
sbb
mov
xor
xor
fdivl
mov
jbe
aaa
xchg
and
xor
push
pop
aam
fistl
mov
sbb
cmp
cli
or
sub
into
repz
and
stc
xchg
leave
sub
xchg
enter
xchg
jmp
push
mov
aam
adc
push
add
inc
cwtl
jae
sub
cmp
aam
icebp
test
pop
in
icebp
push
add
imul
popa
adc
sub
stos
push
repz
cld
add
inc
lahf
cmpsb
xchg
fs
push
mov
ret
mov
imul
ljmp
fwait
or
sbbb
jmp
inc
mov
pop
pop
dec
test
test
inc
jno
andb
pop
enter
jno
pop
adc
lahf
out
mov
and
jl
daa
rorl
pop
or
sbb
push
push
push
jns
push
mov
mov
push
sbb
sub
mov
test
fcmovnu
imul
inc
sbb
xchg
xchg
mov
push
inc
jecxz
lods
pop
add
or
mov
jle
add
lret
lock
mov
jnp
push
call
lea
testb
test
rcrl
inc
xchg
das
ljmp
dec
test
int3
inc
enter
pop
and
sub
pop
push
jecxz
fwait
lret
mov
in
push
jb
mov
lds
sub
jns
in
leave
mov
icebp
imul
mov
dec
test
xchg
stos
or
rcrl
fcompl
dec
aas
xlat
inc
sti
faddl
mov
ja
add
ret
mov
push
repz
out
sub
stc
mov
mov
xchg
in
mov
stc
xor
xchg
mov
sub
jmp
sahf
fs
rcl
fcom
add
xor
adcb
dec
into
int3
jo
xchg
shrl
add
ret
mov
sbb
cmp
cld
push
dec
loop
sti
cmp
lret
out
outsl
lock
inc
mov
xor
fstps
inc
sti
jno
fs
loope
or
aaa
lret
inc
pop
in
xchg
pop
stc
adc
xchg
fdivrl
fs
movsl
into
les
mov
cmp
inc
or
adc
add
outsb
mov
lcall
jge
fidivs
cwtl
or
fisubrl
loopne
lahf
repnz
bound
pop
test
nop
out
xor
cli
xchg
js
rcrb
adc
les
mov
outsl
push
fdivrl
mov
inc
xor
push
mov
mov
nop
imul
adc
pop
aad
lret
movsb
icebp
ss
mov
and
mov
rclb
xor
mov
daa
inc
or
xchg
rcr
movsb
pusha
or
popf
xchg
and
mov
cmpsl
cmp
rclb
stos
mov
xor
shlb
jecxz
xlat
pusha
add
pop
ss
inc
rcrl
inc
mov
sti
push
fwait
aaa
or
cmpsb
sub
test
lcall
dec
sahf
jnp
mov
outsl
icebp
idiv
mov
add
mov
or
xor
cmp
jb
cmp
xor
cli
xchg
mov
adcb
stos
cmp
mov
cmp
jp
sbb
lret
push
jns
jno
rol
xor
jo
outsl
loopne
adc
cmp
pop
faddl
clc
sub
mov
or
jle
push
pop
shll
stos
push
in
inc
fbstp
jmp
adc
stc
inc
enter
cmpsb
shl
jne
sub
int3
repnz
dec
ds
test
mov
pusha
jbe
dec
jl
ret
int
icebp
pop
in
pop
lret
shrb
jns
iret
lcall
xchg
sbb
add
out
pop
ja
int3
loope
into
popa
mov
xchg
add
testb
das
cmp
push
sbb
mov
adc
mov
stos
mov
inc
jo
jo
jg
icebp
es
sar
sbbb
xorb
fsubrl
rcr
out
push
cmpsb
loop
fldcw
add
test
mov
or
lahf
cmp
inc
xchg
mov
ss
repnz
cltd
mov
mov
fidivrs
arpl
das
lods
sbb
rcl
inc
pusha
ss
xor
mov
mov
loopne
lahf
stc
imulb
sbb
cmpsb
xchg
rclb
es
iret
jle
popf
mov
sub
inc
jecxz
jle
movsb
sub
sarl
sub
insl
and
in
in
insb
stos
out
daa
dec
insb
sbb
sbb
inc
out
pop
arpl
add
in
mov
rcll
or
test
add
imul
xor
js
xchg
cli
mov
movsb
or
sub
fwait
orl
xor
mov
pop
mov
fisttpll
shll
and
pop
dec
les
cmpsb
adcb
inc
test
or
insl
cs
pusha
mov
inc
shrb
outsl
loopne
jge
arpl
push
mov
stos
scas
push
aam
mov
imul
fst
pop
popa
push
into
sbb
pop
mov
movsl
xchg
jge
xor
std
xchg
cld
pop
data16
addr16
in
add
dec
cmc
je
out
lret
lret
push
sub
mov
movsl
push
inc
outsl
mov
adc
push
hlt
and
cmpsb
pop
add
shrl
mov
cmp
sub
jno
xchg
aaa
das
fsubrl
test
out
inc
sub
lea
mov
and
mov
int
pop
pop
inc
scas
dec
pop
enter
dec
add
scas
repz
rcrb
sti
ljmp
mov
xlat
pop
lods
push
inc
mov
xchg
mov
ljmp
sbb
js
loop
dec
mov
mov
inc
push
pusha
mov
scas
jmp
and
pusha
imul
in
cmp
fs
mov
js
push
jb
or
push
notb
add
cli
loopne
int
push
adcl
and
mov
leave
inc
fsubrs
inc
lcall
inc
add
mov
or
cmc
adc
mov
pop
or
mov
fdecstp
das
adc
pop
xor
cltd
call
push
and
inc
push
cmc
xor
dec
jecxz
arpl
idivl
ss
in
sar
push
imul
adc
jns,pn
cmp
add
mov
push
insb
pop
scas
icebp
jne
mov
xor
pop
mov
fstps
lds
sub
jp
insb
mov
nop
jnp
inc
aas
adc
mov
dec
mov
sub
decb
mov
int3
outsl
pop
fldenv
sti
gs
sbb
jb
add
dec
xchg
cmp
or
call
scas
jne
add
mov
mov
call
popf
or
scas
mov
loop
inc
sar
and
pop
dec
xchg
mov
cmp
enter
pop
mov
lds
lods
xchg
or
push
pop
mov
jno
fbstp
dec
sbb
or
mov
rcrb
fnstsw
into
arpl
scas
pop
add
push
mov
push
shrb
and
fisttpl
push
inc
scas
sub
push
int
push
dec
and
jae
in
adc
and
jmp
adc
inc
aas
cmc
mov
cli
and
adc
insl
std
mov
cs
repnz
jae
pop
mov
adc
test
loopne
push
xchg
jnp
movsl
mov
movsb
and
fcoml
iret
ds
pop
sti
rorb
stc
mov
push
shll
in
sbb
sbb
add
stc
mov
frstpm(287
add
dec
push
mov
push
dec
adc
lods
gs
push
mul
push
imul
in
push
out
xchg
dec
dec
add
pop
or
add
pop
in
cli
xchg
fdivrl
aaa
add
lea
pop
rcrb
repz
mov
or
sar
pop
cmpsl
inc
setno
shll
sbbb
mov
ljmp
mov
shr
lods
out
cwtl
aaa
inc
test
pop
lock
in
pop
leave
mov
js
pop
cmp
mov
mov
test
stc
cmp
mov
mov
adc
lods
loope
imul
repz
js
movsb
jno
xchg
mov
jb
repnz
xor
jb
push
or
insb
xchg
xchg
ss
jo
cmpl
daa
jae
push
lret
mov
lret
enter
cmc
xchg
stos
fldt
dec
cld
movsb
sbb
loop
nop
stc
mov
das
xchg
sub
ret
mov
lods
test
lahf
loopne
xchg
inc
fidivrl
enter
addr16
pop
aaa
test
aam
pop
xor
shrb
ret
mov
aaa
adc
scas
inc
mov
js
mov
aam
cmp
fdivs
inc
cs
xchg
fmulp
scas
push
int
xchg
idivb
int
sbb
or
int3
or
mov
int
inc
pop
jne
out
fwait
aad
pop
cli
xchg
add
push
sarb
fcomi
mov
stos
adc
mov
loope
stc
sbb
sbb
repnz
ret
cmc
mov
sub
aad
lock
arpl
das
test
rolb
dec
notb
sub
inc
fsubs
xchg
mov
sbb
clc
xchg
pop
or
pop
dec
lea
cpuid
ret
test
insl
xorb
cli
enter
and
push
sbb
mov
test
rorl
dec
push
jle
push
lods
cmp
rcll
mov
pop
or
and
je
cmp
xchg
lret
fs
ja
aad
mov
xor
iret
gs
mov
insl
pusha
xchg
cltd
cmpsb
xor
gs
aas
dec
cltd
mov
and
and
das
xchg
mov
insl
pop
mov
sbb
push
cld
mov
push
inc
mov
fnstsw
adc
cmp
push
inc
gs
jl
sub
popf
daa
and
hlt
test
mov
sub
mov
je
sub
les
sub
pop
jae
push
add
push
out
xchg
adc
rcrb
push
repz
fsubrl
pusha
aam
jmp
cmp
jp
out
sbb
xor
sbb
lret
cmpsl
dec
cmp
dec
das
jmp
sub
int
jmp
insl
outsb
jnp
dec
xchg
lods
aad
outsb
fs
aam
cld
lcall
cmp
in
dec
out
mov
insb
add
add
inc
jl
mov
add
test
and
lock
sbb
out
lret
push
les
cmp
or
dec
dec
sbb
pop
aas
pushf
lods
sti
push
and
adcl
sub
into
test
cmpsl
xchg
orb
out
sahf
or
xchg
std
jns
add
dec
scas
out
lahf
xchg
daa
ja
xchg
cmp
insb
shll
mov
xchg
mov
aas
xchg
mov
hlt
shl
adc
xchg
cmpl
sub
push
leave
faddl
inc
outsl
mov
sub
test
cmp
repnz
mov
out
pop
out
mov
jb
sbb
in
dec
xor
bound
scas
clc
fcmove
bnd
fldl
cmpsl
jmp
aad
pusha
add
in
pop
mov
inc
ljmp
mov
inc
push
jno
cmp
and
xchg
out
loop
adc
outsb
inc
test
jne
pusha
or
shll
mov
and
insl
and
cld
insl
pop
xchg
or
adc
push
and
xchg
insb
mov
addr16
push
cli
shrl
sub
hlt
lds
mov
adc
das
out
adc
inc
lods
mov
and
adc
rcrb
lds
push
in
xchg
adc
in
push
es
pop
xchg
jge
push
repnz
pop
lods
push
sub
push
div
stos
stos
ljmp
pop
iret
jecxz
mov
inc
stc
scas
fsubl
je
sub
lds
cmp
hlt
scas
notb
xchg
add
pusha
data16
sbb
or
vpsubd
lcall
push
mov
ficoms
in
and
dec
adc
enter
xor
insb
xlat
test
sbb
sub
xlat
jo
xchg
lds
jne
and
adc
dec
jp
dec
outsl
jle
lcall
call
lods
fwait
mov
ja
jae
std
xchg
cmp
jl
sub
xchg
test
mov
inc
bound
jecxz
xchg
mov
sbbl
mov
lods
mov
mov
shll
inc
pusha
inc
insb
adc
das
fbld
dec
mov
pop
xchg
sub
push
fdivs
dec
push
ja
out
cmc
jae
push
test
mov
xchg
cli
icebp
loop
jnp
add
shll
subl
push
repnz
add
jnp
mov
add
dec
repz
and
imul
adcb
adc
mov
jae
push
push
inc
jmp
mov
sbb
aam
pop
or
fldt
push
sub
es
mov
repnz
fadds
les
sarl
xor
mov
dec
add
lret
adc
out
addl
sbb
dec
pusha
cmp
sub
mov
ss
push
jbe
subl
jmp
jg
loope
pop
insl
das
inc
or
xchg
sub
push
aad
push
test
or
adc
mov
add
push
mov
sbbl
and
scas
adc
lret
jecxz
mov
cmc
mov
mov
sbb
or
push
mov
cli
je
inc
test
inc
push
jbe
mov
shlb
das
fbstp
pop
xchg
push
in
xor
add
imul
shrb
jo
cmp
pop
lcall
mov
sarb
pop
mov
cli
fisttpl
mov
sbb
insb
or
xlat
sbb
sub
call
je
mov
fs
cmp
push
pushf
sub
into
push
nop
popf
sbb
sub
jmp
jge
push
sub
push
in
mov
cmp
dec
cld
and
mov
push
push
cmp
popa
pop
and
mov
pop
push
int
icebp
adc
mov
cmc
push
enter
jle
and
pusha
inc
cmp
stos
fisubl
fimuls
jno
pusha
xchg
leave
adc
mov
imul
sub
mov
imul
dec
xchg
out
xchg
push
fwait
lret
inc
cmpsl
push
out
push
mov
xchg
loop
xor
mov
loop
ss
xorl
adc
pop
xor
stos
testl
xchg
test
ljmp
dec
std
mov
mov
gs
and
in
jecxz
pop
lahf
pop
and
repnz
and
adc
stos
mov
push
fildll
xchg
and
enter
sahf
sbb
and
xor
flds
cwtl
jae
or
daa
mov
sub
insl
sahf
fnstsw
fldenv
jno
mov
je
and
lods
ret
neg
mov
mov
mov
inc
cltd
jp
out
adc
mov
orl
mov
mov
pushf
cmp
jecxz
jge
fsubrl
aaa
or
xor
lds
mov
or
or
dec
push
cld
std
popa
pusha
add
jns
inc
aam
xchg
gs
xor
jle
mov
xchg
mov
out
pusha
js
js
ds
iret
xchg
adc
jl
cmc
iret
mov
dec
or
mov
mov
ljmp
or
sti
in
sub
sub
dec
testb
js
sub
sbb
fbld
mov
push
mov
in
sub
or
jl
mulb
outsb
call
adc
testb
in
adc
lahf
push
inc
sbb
or
inc
jae
dec
scas
cli
dec
jns
jg
add
pop
dec
aam
jo
popf
lret
es
sub
mov
je
cmp
cmp
rolb
movsb
jno
movb
aam
cmp
in
insl
or
add
mov
lock
and
cs
icebp
in
in
sbb
sbb
lods
inc
fwait
pop
das
dec
jne
inc
mov
stos
pop
icebp
xor
lret
xor
sbb
mov
in
adc
out
out
jns
out
fildl
dec
push
sahf
mov
sub
or
outsl
xor
push
xchg
mov
cmpsl
cmc
das
loope
mov
aad
cmpl
dec
mov
outsb
stc
aad
test
out
andb
pushf
mov
jl
mov
mov
mov
mov
sub
popf
xor
pop
iret
rcr
adc
dec
lods
mov
adcb
lds
dec
fcoml
inc
incl
push
push
sub
mov
adc
push
dec
xor
mov
fwait
cmp
int3
lods
lcall
xor
out
cmpb
sbb
aaa
jno
pop
fildll
in
rcrb
stc
mov
ds
loop
jbe
xchg
cmp
mov
std
pushf
xor
sbb
jg
mov
pop
push
inc
jmp
xor
jmp
test
std
mov
mov
jno
pop
hlt
push
jecxz
insl
test
jg
loopne
adc
inc
testl
pop
xor
repz
mov
sahf
pop
ljmp
fsts
mov
outsb
inc
dec
in
lahf
test
mov
enter
mov
popf
lahf
outsb
mov
in
adc
dec
shr
ss
push
rcrb
in
enter
adc
jecxz
mov
push
mov
jns
popa
cmp
or
jg
aam
js
adc
mov
loope
pop
rorl
stos
fnstenv
and
inc
jmp
mov
cmpsb
lcall
outsl
xor
je
push
push
repnz
adc
xchg
stc
mov
add
movb
cmp
arpl
adc
xchg
and
push
xor
push
mov
jl
cmp
js
xchg
or
push
xchg
ror
fs
out
add
sti
movsl
sahf
mov
test
stos
addl
xchg
aas
outsl
cmp
push
popf
ror
fisubrl
mov
enter
outsb
fisttps
cmp
push
outsl
add
iret
pop
mov
fwait
scas
js
xchg
cwtl
pop
jge
sbb
sbb
jl
inc
pop
test
andl
fmull
int
dec
cltd
sub
mov
sbb
js
xor
lahf
addr16
fwait
mov
aaa
mov
pop
cmp
mov
xrelease
rcrb
or
pushf
push
push
adc
mov
rol
aam
out
sbb
cli
mov
and
pop
pop
mov
or
push
mov
ret
dec
xor
pop
add
lea
push
and
mov
in
nop
push
sub
fwait
stos
jge
ss
int3
mov
lret
dec
dec
cmc
insb
pop
daa
xchg
push
cli
aam
adc
pop
imul
mov
push
jb
orb
mov
cmp
xchg
iret
stos
xor
and
insl
push
dec
xor
add
fnstcw
nop
push
insb
mov
mov
and
sub
fisubl
js
outsl
sti
mov
ja
mov
xchg
sub
mov
testb
das
adc
xchg
pop
lret
int
out
mov
add
sub
cli
clc
xorb
jbe
push
scas
test
cmp
and
inc
leave
test
mov
xchg
sbb
xor
daa
leave
sub
aad
mov
sbb
pop
mov
push
lret
jb
push
pop
arpl
inc
fiaddl
adc
in
daa
mov
and
push
mov
sbb
xor
pushf
jae
aad
cmp
pushf
cmpsb
and
mov
fwait
xor
xchg
adc
mov
pop
sahf
lret
inc
outsl
pusha
outsb
jo
into
fidivs
jp
mov
in
xor
xor
leave
sbb
data16
sahf
mov
xchg
cltd
outsl
mov
fs
push
fcoml
sub
lret
push
jnp
in
pop
mov
sub
sbb
sub
es
stos
dec
cmp
cmpsl
in
and
cld
testl
mov
mov
inc
jnp
xchg
leave
je
xor
and
roll
shrl
mov
dec
inc
push
add
jne
loope
jge
es
xchg
lods
jmp
ds
push
jb
out
jb
sub
pushf
mov
mov
inc
jmp
xor
jl
dec
je
mov
jge
imul
aaa
or
std
mov
inc
scas
add
fmuls
xchg
xchg
lods
pusha
mov
pop
sbb
mov
leave
addr16
mov
sbb
ret
in
addl
jge
out
xchg
push
dec
scas
mov
test
xor
fwait
jge
scas
push
dec
rorl
jl
testl
sbb
or
pop
jns
push
inc
pusha
std
int3
rdmsr
pushf
or
jb
enter
inc
imul
es
movl
pop
push
call
mov
orb
jno
mov
jmp
nop
ja
out
dec
lods
fistpl
ds
or
sub
push
inc
inc
mov
adc
cmpsl
sub
das
xor
push
movsl
pop
xchg
std
inc
sub
mov
jmp
ljmp
insl
mov
outsb
std
pop
mov
nop
cmp
dec
negl
dec
and
pop
lods
sub
test
dec
jbe
adc
mov
mov
ror
sbb
sub
mov
fistps
sbb
or
sbb
cmp
shll
adc
mov
enter
add
sub
out
xchg
cmp
in
pop
mov
and
xchg
sub
mov
mov
pop
pushf
cmpsl
mov
add
or
pop
mov
std
loope
push
or
stos
imul
fmull
lea
in
movsb
in
in
inc
fisubs
je
mov
mov
push
rcll
cmp
xor
adc
ret
repz
xor
jbe
sahf
mov
into
mov
cld
loop
inc
add
fwait
push
inc
jo
cmp
ja
inc
pushf
popf
sub
out
jl
mov
mov
lods
cmp
ret
fldenv
pop
imul
pop
adc
xchg
push
mov
mov
jbe
pop
inc
sub
cmpsl
add
xchg
addb
sub
inc
pop
cmc
push
add
dec
addr16
fisttpll
jecxz
popa
dec
and
inc
scas
pop
and
test
mov
push
mov
mov
and
adc
mov
sbb
andb
popf
fimuls
popf
pop
ja
clc
out
loope
adc
mov
into
cs
in
mov
or
pop
das
cmp
test
lret
cmpb
push
jl
dec
pop
inc
clc
int
add
insl
lea
lret
andb
into
addl
rcrb
inc
and
cli
mov
fnstcw
mov
incb
jbe
gs
jecxz
dec
and
in
dec
out
scas
push
out
jge
pop
stos
lock
test
repnz
cmp
ljmp
pop
pop
inc
inc
and
jp
jmp
xchg
add
add
lock
repnz
incl
ljmp
xor
xor
roll
inc
jne
int3
adc
pop
loopnew
add
mov
mov
aaa
test
push
das
mov
xor
lcall
inc
je
or
neg
jmp
lret
and
imul
mov
cmp
hlt
loope
sub
push
faddl
lahf
testb
cwtl
push
pop
xchg
sbb
mov
adc
out
loop
sti
mov
clc
mov
ds
fldl
mov
inc
push
stos
cmp
lock
inc
adc
adc
pop
jp
mov
scas
push
mov
roll
mov
scas
negl
jecxz
pop
xor
jle
ss
jnp
pmulhuw
jp,pn
mov
mov
mov
inc
pop
cmp
push
mov
ficomps
adc
and
into
pop
fs
iret
xor
adc
adc
leave
sti
les
mov
inc
jge
add
insl
jecxz
jae,pt
inc
dec
aad
aam
out
stos
sbb
cwtl
sub
ficomps
dec
inc
push
push
cmp
inc
pusha
mov
lock
inc
scas
js
ja
sbb
push
ret
mov
es
sarb
jbe
adc
mov
and
repz
push
push
mov
scas
mov
pushf
mov
push
and
rcll
dec
mov
jnp
mov
xchg
loop
sub
mov
int
push
arpl
pop
outsb
xchg
mov
fmuls
stos
jle
movsb
bound
jge
dec
inc
sbb
sbb
arpl
pop
rcrb
push
mov
lods
mov
in
adc
das
fnstcw
jno
cmp
shl
aad
jge
cmp
mov
sbb
test
bound
pop
mov
pop
outsb
insb
mov
push
stos
and
mov
sub
addr16
inc
cmpsl
lret
mov
icebp
iret
sahf
pop
add
push
les
fst
jnp
push
leave
ret
jl
push
cmpsb
decl
push
dec
faddl
rorb
daa
mov
js
or
stos
mov
or
jnp
cli
or
push
jge
mov
fld1
xchg
mov
cmp
pop
xorb
ret
dec
push
push
out
pop
shl
mov
or
icebp
imul
sbb
push
pop
adc
mov
fxch
lret
out
jne
cwtl
imul
movsl
mov
sub
mov
les
pop
jmp
pusha
je
mov
xor
shr
mov
leave
mov
push
xor
mov
cld
mov
jno
jp
aas
and
rcrb
cmpsb
push
push
stos
jb
clc
std
out
xchg
int
xchg
push
lcall
shll
jl
cmp
push
ljmp
cmp
adcl
movsb
sbb
push
cld
mov
add
mov
xchg
inc
clc
shll
nop
add
inc
mov
or
insl
xlat
jecxz
mov
xorl
add
lock
movd
addr16
pop
add
xor
cli
adc
aas
aaa
addb
std
cmp
aam
mov
fisttpll
pop
imul
cmp
les
adc
pop
frndint
outsl
and
out
or
sbbl
or
ss
cmp
mov
push
movsb
addr16
adc
jg
cld
cltd
mov
push
out
in
notl
or
out
fsubs
mov
call
decb
fcoms
jecxz
loope
xchg
jne
iret
stos
test
sarb
xchg
mov
mov
mov
jmp
cltd
mov
inc
insb
xor
cmpsb
adc
xor
mov
loopne
dec
mov
in
adc
mov
add
xchg
push
sbb
int
xchg
jecxz
scas
out
stos
pop
cld
pop
mov
testb
stos
mul
add
sbb
and
stos
cli
or
or
jae
lret
mov
cmpb
push
push
xchg
outsb
subl
repz
cmp
andl
lea
xchg
sbb
mov
dec
dec
pop
jge
into
mov
mov
stos
int
addr16
jmp
pop
mov
call
lret
pushf
dec
mov
and
fidivs
loope
mov
sbb
out
adcl
dec
fs
movsb
mov
inc
jne
ja
mov
dec
fldcw
inc
inc
inc
push
cmp
xchg
pop
out
mov
xchg
mov
pop
icebp
out
sbb
jle
fucom
push
dec
dec
pop
lods
dec
cmpsl
and
cmp
jnp
shrl
sub
icebp
sbb
leave
cld
xor
aaa
add
outsb
fwait
mov
out
jo
add
inc
mov
pushf
nop
into
loope
aad
mov
cmp
cli
cli
dec
insb
mov
sub
iret
js
leave
mov
sti
cmp
mov
out
shrl
inc
pop
mov
popa
gs
sbb
hlt
pop
push
imul
pop
mov
push
xchg
scas
in
fs
sbb
jae
mov
and
xorb
jb
out
leave
mov
pop
or
out
outsl
cmpsb
and
movb
popa
mov
or
mov
fsub
pop
lods
and
mov
jmp
xchg
xchg
nop
aam
nop
dec
mov
cmpsl
xchg
popl
mov
cmpsl
lahf
and
dec
pop
mov
pop
jns
test
cwtl
add
push
push
pop
rclb
and
jecxz
jle
xor
pop
dec
cmc
sbb
xchg
push
adc
adc
outsb
es
dec
dec
xor
xor
or
dec
mov
loopne
pop
das
mov
xchg
mov
pop
mov
xor
add
test
pop
jno
sbb
and
pop
je
ljmp
movsb
fisttpll
cmp
jne
scas
mov
pushf
xchg
lret
imul
xlat
xorl
dec
adc
mov
lea
mov
pop
add
test
sar
test
sub
cli
add
xor
mov
ficoms
insl
outsl
mov
cmp
xlat
and
mov
dec
mov
lock
enter
cmp
pop
cs
adc
xor
jmp
outsb
mov
and
test
add
mov
lret
in
ljmp
cmp
das
rclb
cmpl
scas
push
mov
loope
push
or
jmp
jmp
jmp
and
jno
icebp
fimull
loopne
imul
int3
fs
int
add
dec
jae
dec
fwait
adc
mov
sub
ret
xchg
dec
pusha
mov
xchg
addr16
xchg
and
add
push
test
mov
mov
pop
stos
push
shll
jo
cwtl
test
and
jle
dec
sub
xchg
xchg
dec
iret
xchg
xorl
mov
sti
icebp
sbb
ss
or
and
or
in
mov
or
dec
pop
popf
mov
xchg
cld
shll
ss
adc
pop
fisubrs
adc
mov
inc
cld
mov
cwtl
sub
mov
lret
jne
inc
push
cmc
and
xor
into
sbb
int3
and
test
jp
neg
negb
push
mov
arpl
fisttpll
jnp
testb
sbb
js
or
lods
cltd
enter
loop
ror
fisubs
cmc
pop
dec
les
lea
adc
adc
or
and
nop
sbb
xor
das
mov
enter
cmp
and
jecxz
ljmp
jecxz
or
inc
gs
not
inc
push
mov
adc
adc
mov
dec
gs
adc
in
mov
in
and
pop
mov
xor
xlat
pop
mov
and
bound
jnp
or
push
jle
sub
hlt
xchg
sti
add
add
pop
loopne
and
insb
push
loopne
mov
aas
sbb
jns
cmp
sub
mov
jbe
inc
imull
sbb
and
jb
mov
fdiv
jb
or
adc
fwait
or
xchg
stc
push
shl
sbb
jl
movb
or
pushf
push
mov
mov
sbb
mov
or
mov
inc
adc
pop
insl
xchg
scas
jp
mov
clc
in
xchg
lcall
lods
adc
lea
jne
lret
fdivs
xchg
insl
decl
roll
insl
push
jle
mov
imul
testb
xor
loop
mov
loope
xor
sti
repnz
mov
and
xchg
push
adc
jp
xchg
xor
popf
icebp
lds
cmp
popf
cmp
imul
rcll
cmp
lds
ja
lods
or
inc
cmp
dec
cmp
movsl
rorb
roll
mov
pop
and
fidivrs
pop
js
mov
cmp
loop
mov
mov
push
sub
dec
out
add
pop
fists
pop
stos
test
push
pop
cmp
mov
mov
pop
cmpsl
shrb
daa
les
xor
xor
dec
mov
dec
pop
or
popa
mov
pop
stos
call
aaa
inc
repz
xor
ret
addr16
mov
das
out
xor
add
arpl
lds
lock
mov
push
adc
repnz
pop
dec
sahf
ss
fcmovu
inc
imul
inc
and
cwtl
cmp
mov
cmpsb
lcall
sbb
sbb
inc
enter
mov
decl
xchg
dec
lahf
nop
test
movsb
addl
push
outsl
add
pop
mov
popf
jne
or
xor
inc
inc
pop
lret
loope
int
enter
pop
aas
cmpsl
add
mov
mov
jle
adc
sub
xor
inc
mov
pop
cmp
leave
bound
adc
sbb
xchg
or
or
cmpsl
insl
test
pop
aam
xchg
dec
dec
pop
adc
jo
push
or
and
push
aam
push
fldcw
mov
add
inc
dec
pop
insl
pop
fisubs
xchg
dec
push
add
inc
jecxz
enter
movsb
test
pop
stos
subl
std
dec
xor
push
xchg
cld
cmp
push
and
das
mov
xorb
mov
xchg
mov
jmp
das
aam
andb
jg
rcll
jg
call
jo
in
lret
add
lret
jo
sub
mov
push
ret
mov
jo
cmp
rolb
ljmp
dec
lea
inc
jno
clc
cmp
cmp
xchg
dec
add
mov
push
aas
lahf
push
stos
cmp
sbb
adc
shrl
test
mov
lock
ret
sbb
cmc
lahf
xor
sub
mov
xor
and
repz
dec
mov
fwait
or
xchg
dec
lahf
pop
inc
leave
lret
in
aaa
jg
inc
or
mov
adc
imul
dec
jae
mov
xor
repz
mov
nop
jb
mov
cmp
sahf
sub
push
push
aaa
dec
inc
scas
mov
xor
out
imul
lcall
pop
jle
std
inc
mov
or
clc
sbb
shl
mov
inc
xor
push
arpl
sub
or
pop
rolb
aam
je
dec
rorl
sbb
and
pop
cli
icebp
fs
aas
inc
mov
insl
push
shll
pop
inc
les
fcom
pop
push
mov
je
movl
mov
addb
mov
xchg
sub
xchg
xlat
mov
movl
and
stos
fldl
cmp
xor
aad
lods
mov
out
mov
sbb
movsl
lock
cltd
jmp
xchg
add
or
cmp
mov
dec
roll
push
lcall
sbb
flds
mov
xchg
out
icebp
cli
sbb
call
fstpt
fdivs
ret
xchg
bound
sub
mov
push
pop
loope
dec
push
stos
aas
hlt
sub
movl
divl
call
jnp
sub
inc
pop
adc
xor
or
inc
xor
cld
and
pushf
insl
and
int
test
loop
adc
rol
je
sbb
add
adc
sbb
pusha
ja
enter
pop
mov
dec
insb
dec
pop
shlb
sti
jno
lods
mov
in
mov
js
jb
out
jae
int3
mov
inc
cltd
aaa
fisubl
push
cmp
add
mov
lea
clc
subb
mov
or
in
inc
sub
cmp
jns
in
loopne
cmc
js
aaa
jns
cld
push
out
movswl
fnsave
out
ret
pop
sub
shl
adc
mov
cmc
rclb
cs
aad
sbb
sub
dec
mov
inc
push
ficoms
call
add
mov
inc
subl
cmc
mov
fimull
mov
das
inc
in
and
cmp
aas
push
adc
andb
sbb
xor
add
rorb
sbbl
and
nop
adc
dec
movsl
inc
pop
jbe
pushf
push
xor
fistps
lock
shlb
popa
mov
mov
adc
shrb
in
adc
out
in
push
test
dec
mov
jg
jb
mov
aaa
shl
call
adc
sub
push
cmpsb
xlat
sbb
mov
push
test
movsl
fwait
call
push
push
lods
cmpsl
mov
popf
add
add
stos
cmp
sbb
mov
mov
pop
push
scas
popa
push
mov
clc
pop
mov
popf
add
cmc
cmpsl
jb
jmp
lds
int
dec
push
arpl
push
jle
jbe
cmp
pop
stos
pop
sub
lcall
xchg
rorl
push
fdivrl
adc
outsb
xchg
mov
mov
cmp
or
je
and
sbb
movsl
out
sbb
insb
xchg
fucomip
jp
inc
imul
loop
add
push
aas
addl
push
aam
jae
mov
in
fadd
sarl
xchg
sarb
and
dec
es
ds
cltd
dec
js
sbb
int3
add
div
jle
jle
fmuls
jne
dec
xor
xchg
jne
sti
in
jnp
xchg
dec
push
mov
or
mov
test
cmpsl
negl
cmpsl
icebp
push
cld
insl
stc
cmp
mov
lret
icebp
adc
add
push
add
pusha
test
mov
aam
loop
push
xlat
push
sub
push
lods
inc
push
dec
adc
mov
pop
scas
mov
lock
push
or
or
mov
test
cmpsb
cmpsl
adc
in
and
sarb
test
mov
mov
les
push
imull
rclb
add
pusha
in
push
lcall
loopne
jae
loope
mov
push
call
mov
js
adc
fistl
rol
cmpl
jbe
or
cld
sahf
cmp
int
adc
add
in
and
pop
mov
faddp
mov
xchg
xchg
out
jae
adc
paddd
ss
mov
pop
mov
repz
push
xchg
sahf
adc
fadds
loop
pop
pop
icebp
repz
in
and
adc
test
inc
inc
int
mov
sarl
xchg
and
and
fldenv
lods
mov
das
ljmp
sarb
dec
fisttpl
rcl
mov
in
out
mov
cmp
mov
rorl
pop
and
or
stos
jae
mov
and
jo
negb
jp
ret
js
iret
or
sub
pushf
mov
mov
xchg
push
dec
jl
xchg
mov
out
or
push
mov
pop
out
mov
popf
pop
mov
xlat
int3
mov
je
in
jge
cli
sarl
cmpsl
sub
push
ss
push
add
not
add
jp
or
mov
pusha
add
int
adc
adc
js
sub
mov
mov
fsubrl
dec
cmc
bnd
xor
sbb
xlat
jle
aas
shrb
xor
in
lcall
or
jae
loop
lods
xchg
popa
ja
jecxz
aam
dec
mov
rolb
das
cmp
sbb
enter
mov
mov
cld
rorl
dec
and
jge
sub
jge
das
mov
pusha
mov
mov
jo
push
rcrb
bound
push
or
out
in
push
lcall
sbb
sub
loope
jg
xchg
movsb
sahf
xor
mov
jae
xchg
mov
shll
sub
xchg
loopne
leave
or
or
adc
inc
add
pop
out
clc
cs
dec
arpl
xchg
out
mov
repz
test
clc
popf
aam
xor
pop
push
cltd
adc
or
jnp
sahf
enter
xchg
into
inc
mov
pop
sahf
mov
movsb
and
cs
shrl
fldln2
inc
inc
insl
fisubrl
sbb
cmpl
mov
ss
xchg
stc
fildl
aas
xchg
loop
mull
xchg
in
mov
mov
mov
mov
icebp
js
lock
lock
mov
mov
mov
ds
jmp
mov
push
mov
pop
mov
fildll
mov
cltd
enter
mov
push
scas
add
popa
mov
sub
mov
xchg
push
stc
out
loope
fidivrl
movsb
out
lods
pushf
push
mov
ss
imul
lret
sub
loop
stc
addr16
sub
mov
je
clc
sub
pop
mov
inc
mov
push
movsb
dec
loop
sbb
lock
andw
inc
jle
loope
lcall
subl
fdivl
push
sbb
sbb
mov
cs
dec
push
xchg
sub
mov
ja
jmp
cmpsl
sub
push
mov
or
jmp
and
sbb
lods
sbb
repz
clc
scas
inc
mov
lds
mov
mov
add
xchg
ja
out
sub
lds
and
in
mov
sub
add
repnz
jmp
popa
nop
mov
aad
cltd
mov
loopne
scas
subl
out
mov
mov
sub
mov
mov
jnp
and
jp
scas
pop
pop
cmc
xor
pusha
push
stc
fs
jge
xchg
xchg
inc
sbb
adc
xor
repz
pop
xchg
test
xchg
push
outsl
xor
mov
pop
jle
rol
cs
jp
xchg
sbb
ljmp
jne
mov
lea
gs
mov
inc
into
cmp
xchg
mov
mov
mov
xor
pusha
ds
xchg
je
mov
stos
jecxz
sbb
and
faddl
adc
cld
adc
inc
stos
xchg
lcall
fistps
add
mov
insb
daa
push
popf
dec
outsl
cld
stc
mov
adc
jno
push
cmp
movsl
cltd
jae
and
mov
addr16
out
xchg
fs
outsl
mov
jle
je
mov
shr
push
inc
add
cmpl
into
push
xchg
loopne
jge
inc
out
in
or
aas
xchg
or
mov
fstpl
and
sub
mov
inc
insl
insl
cmc
jne
jmp
adc
dec
dec
mov
jo
xchg
sbb
sbb
repz
testb
inc
adc
dec
xchg
cmpsl
aam
repnz
fistpll
ret
ss
ret
sbb
aam
stos
and
les
in
mull
and
stos
lret
xchg
mov
cmp
scas
lea
xlat
dec
inc
js
out
ja
xor
in
sbb
mov
nop
mov
pop
int3
mov
mov
pop
hlt
pusha
fisubs
xor
icebp
leave
rcll
jle
inc
push
xor
or
data16
mov
std
shll
inc
int
js
fmull
mov
mov
out
loop
clc
xor
push
or
xor
sub
icebp
loop
call
into
add
lock
pop
lret
jne
mov
das
cwtl
nop
insb
jle
cmp
cld
les
dec
ret
add
loop
cs
sbb
dec
xor
jae
jge
mov
mov
cmp
lds
fistps
mov
mov
xchg
out
subl
mov
leave
test
jbe
push
lret
mov
xchg
inc
enter
es
cmpsl
mov
std
xor
mov
dec
pop
jnp
push
mov
icebp
cltd
into
test
ja
sbb
mov
push
ret
push
popf
sub
or
push
inc
mov
nop
pop
xchg
cmp
xchg
in
and
sub
jo
inc
jp
dec
pop
ja
iret
pop
rcrb
push
sbb
pop
imul
fildl
cmp
add
fcoml
mov
repnz
push
cmp
inc
xor
movsb
cmp
xchg
fmull
xchg
xchg
mov
mov
sbb
pop
cld
lea
push
sub
lea
pop
add
push
lret
push
ds
fidivrs
cmpsl
xchg
xor
inc
push
daa
and
dec
cmpsl
push
adc
imul
add
out
nop
cli
imul
cmpsb
push
jns
or
sub
lahf
jp
ror
arpl
inc
enter
insb
outsl
ss
enter
fcoms
add
jo
outsl
ljmp
add
and
jmp
mov
data16
call
loopne
mov
test
aaa
sahf
dec
dec
mov
ret
cli
cmpsb
dec
out
andl
push
inc
lods
mov
aas
movsb
xor
jge
lcall
cld
add
loopne
loop
sub
adc
push
xor
loopne
aas
lods
popa
lods
dec
add
cli
outsl
fcoms
cs
sbb
lods
sahf
je
fisttpl
sahf
nop
ss
test
lods
push
mov
dec
rcrl
and
pop
shlb
ja
xor
or
es
xchg
xchg
cmp
cmpb
std
inc
cmpsb
iret
jbe
aas
add
loopne
add
jbe
scas
pop
inc
pop
and
scas
enter
daa
daa
cmpsl
xor
lods
scas
sub
adc
pop
test
adc
xor
sub
push
jge
insb
inc
cmpsb
or
fbld
push
scas
test
outsl
in
std
and
inc
adc
mov
aas
rol
inc
cld
cmp
pop
jo
jne
test
inc
mov
jne
push
mov
std
hlt
push
jle
and
mov
inc
lock
and
jmp
mov
add
push
testl
mov
scas
inc
xchg
aas
cmp
xor
inc
pop
pop
xchg
imul
outsb
outsl
out
fwait
loopne
and
imul
mov
lret
fisubs
mov
push
pop
xchg
outsb
sub
aaa
adc
sti
pushl
jl
push
adc
aaa
orb
mov
pop
pusha
mov
leave
loope
lods
sarl
test
lret
xor
or
mov
leave
scas
sub
js
inc
sbb
fldl2e
pusha
es
sti
jmp
add
and
push
cltd
jge
movsl
mov
data16
out
test
loop
outsl
leave
scas
stc
fnstcw
or
xchg
xchg
roll
push
mov
test
sub
inc
out
and
adc
fxsave
mov
mov
popa
ss
add
imul
dec
cbtw
jmp
inc
push
jbe
adc
enter
jno
jmp
gs
out
push
dec
or
cli
inc
xor
movsb
push
cmp
add
out
and
cmp
mov
mov
in
lds
pop
repnz
xor
push
mov
dec
or
int
repnz
jg
add
orl
mov
mov
popa
movsl
mov
lahf
shrb
pop
call
push
add
xrelease
repnz
sbb
cld
or
add
cmpsb
fisttpll
jmp
jmp
lret
inc
jae
aad
insb
pop
jl
pop
xchg
dec
jge
gs
inc
fnstsw
adc
cmpsb
cmpb
fdivrs
ss
mov
stos
bnd
or
cmp
pop
xchg
sbb
addb
cmp
add
inc
xchg
aas
mov
inc
dec
adc
jge
adc
mov
dec
mov
mov
ja
addr16
pop
movsl
sbb
lcall
push
call
pop
sbb
sub
pusha
dec
pop
std
xor
pop
addb
mov
mov
cmp
jb
cli
fwait
push
shll
lea
mov
xchg
sarl
fistps
std
icebp
fs
loopne
adc
insl
push
mov
sahf
xor
cmp
decb
popf
es
mov
pop
sbb
dec
push
lea
sub
in
xchg
jns
popf
xchg
enter
dec
cmp
add
lret
ret
xchg
cwtl
push
cmp
xor
sbb
pop
and
ss
xor
clc
pushf
cmpsl
sbb
out
push
lock
xor
cmc
fs
mov
inc
sbb
pop
movsb
inc
sub
jb
inc
or
out
inc
js
inc
es
xchg
jno
mov
mov
xchg
jp
cs
in
aaa
jno
into
and
pop
add
add
lock
daa
lret
jp
sub
mov
sub
out
mov
icebp
sbb
and
pop
cli
mov
jns
adc
out
scas
push
call
mov
cwtl
lds
jae
jmp
xchg
stos
inc
arpl
mov
xlat
daa
mov
mov
js
dec
outsl
aas
ficoms
repnz
push
shr
xchg
jns
mov
rolb
ss
fldt
decb
aas
jle
flds
test
mov
xchg
add
dec
cmc
lock
insb
fdiv
sub
nop
add
and
popf
rorl
push
mov
mov
push
push
movsl
jae
mov
ret
out
sar
dec
pop
add
leave
loop
adc
test
cltd
jno
andl
sbb
sahf
pop
cmpsb
jmp
sub
mov
dec
std
inc
js
sahf
xor
sbb
add
leave
data16
loop
out
vmovss
push
out
jge
and
es
sub
dec
popf
pop
xor
push
push
nop
cmpsb
pop
adc
repz
add
aad
add
movsl
mov
cld
je
fucomi
xor
popa
mov
xchg
aam
in
cmc
packssdw
xchg
sbb
sahf
aad
sarb
out
jo
mov
std
or
sahf
movsb
popl
mul
pop
sbb
stos
pop
in
push
push
repz
std
adc
lds
stc
sarl
ds
xchg
mov
mov
int
cli
xor
ja
lret
inc
xor
push
add
jbe
push
lods
call
fwait
into
mov
mov
bound
push
cmp
or
icebp
dec
push
jne
pushf
mov
jmp
add
or
outsb
lcall
leave
fwait
imul
hlt
test
dec
cmp
int3
mov
les
dec
or
sbb
pop
add
dec
pop
loope
and
call
insb
idivb
ret
lock
rol
mov
insl
cmp
sbb
test
xlat
push
jge
fistpll
cltd
cmp
mov
fisttpl
mov
and
mov
dec
testl
popa
enter
push
shl
fsub
and
push
jb
cmp
mov
loope
das
pop
dec
jne
aam
sahf
je
call
add
dec
dec
adc
pop
dec
pop
sar
js
inc
clc
adc
jno
push
movsl
je
push
mov
xchg
stc
and
fadds
loop
imul
test
adc
rcll
popf
add
sbb
adcb
sub
ljmp
cmpsl
shll
push
out
outsl
outsl
std
sub
in
mov
xchg
mov
mov
cmpsl
dec
cmpsl
push
clc
int
repnz
pusha
xor
pushf
sbb
int
ljmp
lds
pop
sub
js
iret
jo
repz
jo
xchg
aas
iretw
mov
xchg
sbb
fs
stc
addr16
cmp
push
push
fsubrs
push
push
cmp
jne
sbb
cmp
cld
xchg
stc
pop
add
mov
scas
pop
fsubrs
cwtl
sahf
aaa
xchg
jno
jmp
or
fsubrl
in
mov
xor
xor
mov
xor
pop
leave
mov
icebp
or
test
dec
xchg
jecxz
lock
aad
dec
imul
pop
clc
mov
fmull
mov
into
xchg
xor
arpl
scas
adc
pop
leave
lock
push
jnp
jne
or
sahf
sbbb
pop
add
adc
pop
aaa
or
hlt
inc
mov
loop
je
pop
push
inc
mov
gs
rorl
dec
in
mov
mov
ds
iret
mov
add
into
mov
sub
jae
inc
dec
fbstp
dec
cwtl
ss
inc
inc
test
push
ffreep
xchg
mov
out
mov
dec
dec
xor
repz
shlb
leave
arpl
es
push
sub
in
mov
cmp
inc
adc
push
rcll
in
fiadds
gs
sarb
and
xlat
and
dec
stos
ret
add
test
adc
and
cwtl
sbb
out
imul
sub
mov
adc
aam
mov
xchg
outsl
leave
lds
mov
test
jne
sti
cmpl
xor
xor
repz
cltd
pop
bound
or
sub
loop
nop
pop
mov
dec
sbb
xchg
xor
or
frstor
sbb
pop
mov
inc
mov
sahf
decb
cld
jecxz
cmp
xchg
dec
cltd
lcall
loop
call
sub
mov
sbb
xor
test
out
dec
jecxz
sbb
add
js
jno
addr16
aam
and
shl
jecxz
jge
xor
push
cmp
adc
popa
adc
jbe
inc
ds
rcll
dec
dec
xor
add
adc
call
xchg
jl
fucomi
cmpsl
xchg
xor
cmp
adc
jp
jmp
cltd
fsubrp
sub
jge
push
xchg
jne
push
inc
cltd
ffree
push
cmpsb
imul
in
sub
es
fistpll
mov
push
mov
cmp
test
and
sbb
movsb
push
aam
mov
xor
addr16
push
mov
hlt
mov
sarl
sbb
sub
pop
mov
dec
pop
mov
dec
arpl
or
test
nop
add
adc
lea
adc
mov
int
inc
dec
fldl
je
cs
adc
pop
jle
inc
ret
cmp
movsl
push
out
or
outsb
lahf
jnp
add
mov
int3
enter
call
adc
outsl
das
inc
cmpsb
test
dec
dec
fisttpll
bnd
push
es
jp
xor
rorb
das
sbb
and
push
sbbl
cwtl
clc
pop
mov
es
dec
mov
pop
in
mov
inc
push
int
adc
stos
mov
xchg
cmp
push
push
repz
sbb
cmp
xchg
mov
cmp
sbb
imul
in
pop
incb
push
or
mov
sub
sbb
mov
jns
popf
adc
inc
loopne
shr
pop
mov
sbb
mov
lods
inc
jmp
repz
fisubs
in
mov
dec
js
testb
adc
push
dec
lahf
push
loop
aaa
mov
sti
rorb
pop
or
cs
add
cmp
inc
dec
jp
mov
pop
push
in
ds
push
lea
roll
push
and
addr16
mov
or
loope
mov
sbb
sbb
loop
or
out
mov
mov
xor
icebp
shlb
push
pop
in
xlat
jecxz
cmp
shlb
dec
and
aaa
push
lds
push
pop
jg
inc
mov
cmp
out
lcall
inc
cltd
cmp
jb
xchg
inc
push
xchg
ja
jo
scas
or
xor
xchg
cmc
aas
cmc
jb
icebp
test
rorb
aam
sub
dec
daa
pop
mov
shll
xchg
pop
lods
aas
or
or
daa
xor
cmpsb
xchg
pop
pop
xor
mov
inc
fisubs
nop
sbbl
inc
ret
sbb
insl
xorl
sti
js
sub
cmc
mov
jecxz
sahf
stos
subl
add
ss
imul
or
imul
cwtl
dec
fsubrs
in
lods
sub
jbe
xor
mov
f2xm1
lahf
jnp
mov
xchg
push
leave
hlt
mov
pop
xor
pushl
test
jae
inc
fistl
daa
mov
lea
dec
fldlg2
mov
adc
adc
fwait
jl
fcoms
mov
orb
test
xchg
mov
jnp
ja
loop
inc
in
stc
push
fisttpl
scas
cmpsl
into
xor
push
cmp
mov
in
push
shr
pop
cmpsb
pop
andl
mov
pop
push
data16
dec
in
ret
jl
jne
cmp
cltd
push
pushf
jge
sub
aad
fildll
sbb
mov
outsl
dec
jle
push
lods
or
jbe
cmpsl
push
xor
lcall
adcb
fildl
jg
pop
fsubrl
push
lods
imul
cwtl
push
daa
or
xor
adc
cmp
xchg
mov
xorl
test
mov
cmpsb
bound
out
enter
fcmovnb
arpl
insl
jns
pushf
push
in
dec
adc
adc
int
jb
mov
iret
repnz
dec
sbb
fistl
cli
jne
std
push
xchg
ret
lods
ror
xlat
mov
inc
daa
popa
xlat
cld
jmp
jnp
push
icebp
cmp
cmpsb
cmp
loopne
inc
jecxz
xor
dec
test
out
out
or
push
inc
cmpsl
or
test
scas
imul
sti
add
aad
in
mov
sbb
jno
xor
out
and
lcall
mov
mov
aad
lods
push
sbb
andb
cmp
cmp
fsubs
mov
sbb
cmpl
add
orl
out
in
push
rcr
pop
out
sub
jns
js
pop
or
jecxz
sahf
adc
and
xchg
pop
push
lret
lods
mov
lds
fnstcw
xchg
pushf
push
sub
loope
adc
push
push
cltd
lahf
clc
push
jl
fwait
or
cwtl
std
leave
dec
loopne
pop
lods
fnstenv
ja
out
mov
sbbl
push
and
jp
xor
jne
cmp
paddw
push
pusha
fildl
dec
pop
mov
push
aas
les
movsl
add
pop
cmpl
dec
fistl
xchg
cmc
or
cwtl
ret
cwtl
hlt
cmp
mov
push
xor
sahf
push
sub
pop
xchg
mov
dec
and
sbb
lods
push
or
or
sub
repnz
out
fdivs
or
idivl
and
les
jae
mov
call
movsl
push
mov
lret
daa
pop
pushf
push
incb
jnp
adc
int3
orl
push
mov
pop
push
cld
cli
test
mov
ljmp
fwait
mov
leave
js
into
push
ret
sub
cltd
pop
mov
mov
leave
loope
push
xor
inc
xor
mov
and
adc
inc
mov
mov
test
push
test
mov
ds
ljmp
cmp
cmc
xchg
in
mov
out
fs
stos
jns
in
int
rcrl
mov
data16
adc
jge
or
lcall
mov
push
movsl
pcmpgtb
inc
mov
xchg
int3
insl
sbb
push
lds
ss
xor
mov
sub
filds
sub
hlt
xchg
in
test
pop
orl
inc
test
data16
mov
lret
xchg
clc
std
ficoms
adc
inc
lahf
shrl
jns
mov
fnstenv
std
jbe
cwtl
out
fisubrl
jae
xchg
mov
notl
sub
jns
mov
ljmp
jle
cmp
ret
xor
mov
pop
ficoml
cmp
test
push
or
into
leave
jne
test
xchg
mov
cmpsl
xchg
push
lds
mov
jne
mov
xor
jmp
and
mov
lods
cmc
sub
or
xchg
sub
cs
test
sub
mov
stos
cmp
sbb
xor
cltd
fimull
stc
movsl
mov
pushf
mov
mov
jae
and
cltd
or
push
sub
stos
sahf
mov
cmpsl
scas
mov
push
fimuls
mov
iret
rclb
and
jns
mov
rclb
fisttpl
jmp
hlt
movl
fadd
inc
or
not
fldl
into
stos
cli
faddl
jns
dec
inc
pop
rol
fdivr
aad
cwtl
cmp
lea
fdivrl
cmp
outsl
mov
xchg
movsl
inc
outsl
pop
out
lret
mov
scas
jecxz
xchg
lds
dec
shlb
test
dec
popa
xchg
jnp
mov
mov
out
push
xchg
ljmp
add
mov
or
fsubl
mov
cmp
jle
mov
loopne
xchg
fisubrl
ret
lods
jp
xchg
xor
xor
shll
pop
pusha
mov
pop
adc
mov
addr16
sub
cmp
es
data16
gs
leave
rolb
adc
sbb
pop
in
and
dec
cmp
mov
mov
jecxz
fidivrs
xlat
add
and
push
mov
fldl
bound
stos
bound
inc
inc
mov
test
jecxz
test
out
push
mov
pop
cmp
sub
in
dec
or
sbb
aam
xor
push
xorb
call
aaa
mov
mov
mov
push
mov
ds
enter
aam
mov
add
and
pop
rcll
jnp
imul
orl
mov
sub
dec
push
outsb
push
cld
movsb
cmpsl
mov
mov
pusha
or
movsl
push
outsb
mov
ret
lcall
cmp
jecxz
or
cli
mov
sarl
lret
outsb
mov
ret
jb
dec
mov
movsl
dec
cli
push
xchg
push
insb
fdivs
cmp
xchg
jg
xchg
daa
cmp
into
fcompl
in
adc
xor
mov
xchg
sbb
popa
insb
sahf
les
cmp
push
inc
push
push
repz
out
push
push
lods
clc
mov
dec
add
mov
out
std
add
ss
adc
mov
jg
xchg
leave
dec
subl
or
inc
sbb
stos
inc
loope
mov
dec
arpl
mov
test
jns
mov
popf
lds
ret
pop
sub
mov
into
sub
sub
xchg
scas
rcll
sbb
out
jae
jle
outsl
stos
test
inc
mov
leave
mov
xchg
pop
sti
nopl
les
push
in
adc
xor
leave
sub
in
pop
test
inc
test
sub
lahf
aam
sahf
aas
fsubrl
fcmovbe
test
push
xchg
dec
jnp
mov
fstpt
sbbl
lods
ljmp
pop
lcall
dec
xchg
xor
jle
or
aas
push
mov
addr16
stc
out
mov
cmp
outsl
push
inc
pop
xchg
insb
sbb
and
cmp
or
adc
push
fisttpll
jmp
xchg
arpl
rorl
addr16
nop
mov
pop
sub
fists
mov
inc
insb
cli
int
movsb
jg
cltd
pop
idiv
jecxz
out
sahf
loop
pop
xor
mov
sub
fwait
and
cld
fsubrs
cs
imul
jmp
movsl
push
repz
pop
mov
into
into
sbb
push
inc
out
aam
stos
pop
pop
jl
fisubrs
mov
adc
pop
pop
cmp
out
sti
sbb
dec
pop
inc
fistpl
popa
pop
sti
rclb
sbb
add
shlb
sahf
scas
sti
mov
dec
and
or
insl
lcall
dec
lds
test
mov
xchg
or
sti
fwait
in
push
jbe
gs
push
cli
adc
sub
mov
out
dec
mov
sbb
jno
inc
or
jp
ss
subl
shrb
aas
fisttpl
mov
xchg
ja
mov
insl
pop
sub
gs
cmp
cwtl
jb
jg
sbb
dec
pushf
or
adc
popa
ja
rolb
pop
mov
dec
mov
les
pop
jne
mov
mov
iret
aaa
xor
dec
push
in
push
in
add
xchg
dec
dec
xchg
lret
test
test
das
cmp
loope
stos
jmp
aaa
mov
sub
or
call
add
jo
jp
cltd
add
push
or
shll
jnp
xorb
repz
dec
andl
shlb
xchg
adc
xchg
mov
inc
fsubs
pop
les
dec
jno
jae
push
xchg
jle
dec
idivl
fmull
pop
mov
inc
xchg
mov
jb
int3
out
push
testl
test
enter
mov
xlat
xchg
mov
adc
or
or
adc
sbb
arpl
mov
xor
pusha
aad
mov
inc
jbe
inc
and
lret
xor
push
jp
xchg
lds
jle
sub
inc
mov
cmp
test
jns
lods
fiaddl
fstpt
jle
js
xchg
sti
daa
mov
mov
out
pop
lret
jns
push
ja
pusha
adc
push
mov
xchg
sbb
mov
jnp
sti
stc
jg
out
insl
insb
pushf
dec
adc
mov
loope,pn
xchg
andb
push
rorl
clc
pop
mov
and
mov
adcl
movntq
arpl
scas
test
and
xchg
ret
xchg
outsl
cmpl
testl
and
lret
xor
test
xchg
je
mov
add
rolb
inc
push
push
stc
je
outsb
test
xchg
sbb
out
mov
inc
std
mov
movsl
movb
shrb
mov
cld
mov
pop
push
inc
popa
stos
ja
sub
mov
or
sub
jmp
xor
push
lock
test
imul
xchg
dec
mov
ret
mov
gs
mov
push
and
dec
xchg
inc
add
add
push
aaa
mov
push
pop
fists
adc
in
movsl
ret
xor
jae
xchg
test
loop
add
scas
dec
movsb
aaa
push
shr
testb
xchg
dec
pushf
dec
xchg
rolb
xor
out
xor
cli
mov
out
je
repnz
mov
test
lods
sbb
push
mov
in
lcall
or
push
fdivs
ficompl
cmp
xchg
jae
xor
outsl
mov
mov
pop
pop
nop
int3
call
outsb
lea
int
and
leave
fs
movsb
fwait
cmpsl
movb
add
adc
fsubrs
pop
mov
sub
xor
data16
adc
mov
iret
decb
cltd
mov
bound
or
in
shlb
mov
dec
xchg
nop
in
mov
and
and
mov
inc
jno
sub
imul
pop
sub
inc
movsb
xor
mov
mov
mov
pop
into
dec
dec
call
jp
dec
adc
mov
add
pop
pop
inc
push
xchg
mov
aas
shlb
cltd
push
lds
adc
add
mov
roll
jg
jg
mov
jp
and
into
das
gs
dec
pusha
and
ficompl
and
ljmp
cmpsl
out
andb
test
sbb
stos
sbb
mov
mov
test
movsb
inc
test
xor
xor
cs
inc
mov
andb
mov
jnp
pushf
mov
adc
xor
filds
and
pusha
mov
mov
in
orl
ja
xor
cs
push
push
out
nop
sbb
lock
mov
pop
aam
mov
fs
out
or
fnstenv
cmpb
mov
cmpsb
loope
add
sti
rcrl
sbb
dec
push
xorb
addr16
mov
cmpsb
lds
test
les
jp
cmp
ds
push
dec
dec
arpl
jne
cld
adc
sbb
sbb
xchg
pop
adc
xor
pusha
pop
movsl
push
inc
rorb
sub
adc
fs
cmp
pop
sub
call
cmc
dec
sub
out
add
and
lret
inc
mov
add
push
jp
sub
push
xor
jno
jg
adc
jg
push
and
mov
push
divl
mov
in
pop
lods
dec
stc
inc
jns
jl
repz
lds
push
rclb
and
out
inc
leave
and
jnp
aaa
icebp
xor
cmp
cmp
movb
fbstp
mov
xchg
sbbb
mov
mov
jae
pop
nop
adc
cmpsb
mov
push
stc
fadds
aas
les
add
pop
aad
or
lret
cltd
push
add
lcall
stos
add
inc
mov
nop
aad
ficoml
push
and
jge
adc
or
or
mov
xchg
repz
fwait
mov
cmpsb
pop
pop
push
test
movsb
push
sahf
cltd
mov
mov
fcmove
aam
aas
cltd
sbbb
dec
insl
std
clc
adc
push
mov
sar
bnd
inc
mov
adc
and
mov
fstpt
sti
lret
enter
loopne
fcom
push
test
sbb
xchg
rcll
xchg
xchg
and
pop
mov
jbe
cmp
dec
cmc
or
push
in
insb
mov
pop
fnstcw
popf
test
fadds
aam
dec
mov
out
lret
imul
pusha
mov
jle
aad
shll
xor
dec
sub
dec
out
sbb
out
sbb
iret
ret
mov
mov
dec
jmp
inc
pop
or
filds
jmp
mov
orb
jb
mov
sub
xor
or
push
mov
mov
push
insl
clc
outsl
ret
gs
dec
sarl
fwait
aad
shrb
add
jl
inc
sub
xlat
iret
jae
lods
inc
dec
cld
mov
cmpsl
mov
sbb
in
leave
pop
stc
out
mov
push
loope
jno
imul
sbb
ret
push
outsl
pop
insl
mov
arpl
mov
sub
test
push
ret
cwtl
push
test
xorl
int3
ds
mov
lahf
sub
dec
xchg
sbb
cmp
jae
add
jmp
sbb
push
adc
sbbl
loopne
adc
movsb
jge
dec
push
jg
test
loopne
fsubr
sub
jmp
mov
xchg
dec
inc
ds
int3
scas
out
cmp
xchg
jno
imul
sarl
jle
adcb
add
jae
fsubr
dec
in
and
ljmp
lds
sbb
mov
mov
jg
orl
push
int
sbb
in
sbb
pop
pushf
cmp
cmpsl
sub
lea
rcrl
mov
loope
stos
cmp
std
cmpsb
fstps
call
jge
and
and
mov
mov
les
pushf
jb
lcall
and
and
pop
sbb
sub
lods
mul
notb
mov
adc
daa
test
add
loop
pop
aas
and
jge
outsb
and
ret
sbb
je
sbb
fucom
pop
subl
je
xchg
inc
add
or
scas
and
jns
pop
fisttpl
icebp
movsl
xchg
mov
pop
in
inc
movsb
jbe
loopne
dec
test
push
cmpsb
mov
mov
dec
sub
cmp
out
out
mov
adc
dec
daa
into
or
cltd
fistps
pop
jg
xchg
mov
mov
jp
out
xchg
fimuls
xor
jmp
pop
je
add
dec
cs
lds
rorb
andb
lock
icebp
push
popa
jns
xor
add
bnd
jp
cld
jbe
int3
or
or
mov
shlb
add
fildl
or
mov
cmp
ret
imul
mov
imul
std
push
notb
lods
or
mov
pushf
adc
jp
mov
lcall
clc
cwtl
xchg
aad
movsl
mov
mov
dec
sub
mov
xor
imul
add
xchg
mov
iret
mov
adc
fs
adc
pop
and
aam
fisubs
dec
outsl
pop
fdivrs
inc
mov
or
pusha
jle
pushf
add
and
xor
pop
into
adc
xchg
loope
inc
insl
jns
jge
mov
inc
fmul
mov
pop
mov
movsb
mov
mov
inc
push
and
ss
cmc
cli
jb
and
mov
fildll
jbe
inc
jg
or
mov
adc
cmc
or
xchg
mov
int3
ljmp
jbe
jg
les
cmp
rolb
nop
add
xchg
ljmp
lret
imul
push
rcrb
or
sti
mov
clc
mov
pushf
movsl
rcrb
sbb
pop
dec
nop
cs
pop
sub
pop
pop
aas
stos
dec
push
mov
leave
or
cltd
and
mov
add
rorb
inc
xchg
in
lods
adc
ds
vmovaps
cmp
out
idivb
lods
cli
inc
push
mov
ja
ds
mov
test
leave
in
push
pop
inc
pop
mov
cmp
outsl
shll
shlb
jge
cmp
test
cs
fsubrs
in
insl
mov
mov
mov
xlat
test
test
adcl
fisttpll
frstor
cwtl
addl
out
mov
cmp
mov
and
mov
into
mov
cld
stos
sti
insb
xor
xchg
cwtl
mov
inc
pop
xchg
ljmp
js
lcall
lods
in
pushf
in
stc
push
xor
insl
pop
jns
inc
pop
imulb
subl
fdiv
insb
xor
int3
cmp
scas
flds
lods
ret
cmp
mull
scas
cmp
add
xor
sub
xor
jp
das
fildll
imul
pop
pushf
dec
ja
cltd
hlt
and
adc
enter
mov
testb
cmp
stos
loopne
jg
pusha
pop
pop
add
dec
stc
adc
test
sbb
adc
int3
lret
and
xchg
sbb
mov
hlt
repnz
pop
dec
aam
jo
pop
cld
into
mov
rcl
or
pop
sbb
sarb
insb
sbb
lcall
popl
scas
lds
lret
jnp
dec
add
and
aaa
es
aas
adc
push
idiv
sar
push
pop
insb
pusha
and
jg
loop
iret
and
and
out
hlt
out
xor
stc
loope
adc
add
push
sbb
cwtl
xor
jb
fcom
test
fsubl
lret
cmp
lods
xchg
dec
add
push
sarw
outsl
pop
jp
shll
loop
in
push
leave
sbb
and
mov
mov
jmp
and
sbb
pushf
in
ja
cmpsb
mov
fsts
mov
xor
sub
cmpsl
bound
pusha
mov
jbe
aam
push
add
outsl
jge
add
or
jl
mov
inc
dec
xor
inc
addr16
repz
push
leave
inc
cmp
shlb
je
rcll
mov
test
stos
cli
inc
mov
cld
lock
rcl
jb
push
leave
cwtl
mov
mov
adc
jp
outsb
push
mov
je
test
outsb
stos
dec
rorb
sbb
xor
and
pushf
add
in
imul
mov
mov
adc
shll
enter
xor
icebp
dec
flds
sub
mov
push
and
movsb
and
push
fnstcw
fwait
icebp
pop
js
cs
sub
mov
ss
pop
vmovntps
xchg
fimull
inc
xchg
popf
pop
cmp
dec
mov
sbb
cmp
cli
sbb
dec
sub
movb
push
inc
cmp
mov
vandps
iret
mov
xchg
shll
daa
xlat
mov
or
xor
out
out
sub
pop
push
hlt
push
movsl
xor
dec
mov
xchg
pop
mov
bound
xor
push
xor
pusha
das
mov
mov
mov
stos
mov
data16
pushf
pop
mov
mov
rorl
mov
idivl
mov
jnp
jnp
jecxz
pop
adc
xor
rcrl
jl
or
stc
shld
cmpl
out
adc
jns
lret
stos
mov
movsl
stc
add
rorb
xchg
mov
push
mov
add
jno
add
dec
jne
push
jb
and
push
clc
mov
out
mov
shl
mov
arpl
subb
xchg
int3
iretw
arpl
dec
add
or
aam
add
js
sbb
jg
lahf
or
inc
frstor
ss
ds
mov
and
lcall
add
cmp
aaa
hlt
jae
mov
mov
es
and
pop
push
insl
xchg
test
mov
movsb
mov
mov
ja
mov
test
mov
sarl
xlat
sbb
xchg
and
scas
ljmp
dec
out
aaa
out
inc
lods
outsb
cld
cmpb
sub
std
xchg
cmp
jle
hlt
lds
outsl
ror
dec
sarl
data16
adc
dec
movsl
gs
sub
dec
and
xchg
lahf
and
mov
adc
bound
push
sbb
cli
jecxz
xchg
dec
or
jle
je
dec
repnz
mov
push
add
cmp
or
arpl
mov
inc
and
mov
shrb
mov
shl
jle
cltd
add
inc
or
cmp
out
xor
clc
fsubl
push
mov
cmp
dec
les
icebp
cmp
lcall
cltd
xchg
mov
pop
dec
shrl
pop
fnstsw
daa
mov
ss
fsub
jle
or
or
xor
fidivs
and
mov
stc
daa
pop
insl
push
ljmp
add
dec
or
fildll
subl
push
adc
sub
sahf
inc
mov
cmp
fnstsw
scas
std
mov
sbb
stc
pusha
mov
sub
sti
push
clc
enter
mov
jne
sub
xor
sbb
rolb
mov
cmp
clc
cli
repnz
dec
rolb
dec
and
pusha
add
roll
insb
movsb
jmp
mov
addl
xchg
imul
inc
shlb
scas
mov
cmp
decb
mov
fidivs
dec
out
mov
xchg
das
andl
mov
or
in
push
outsl
jle
ret
xchg
jle
inc
or
or
lods
call
cmpsl
cs
jge
mov
mov
in
sbb
push
mov
mov
pop
adc
insb
leave
je
mov
sub
cli
dec
mov
xor
dec
jns
push
sub
mov
pop
push
and
lahf
xor
out
add
lsl
sbb
xor
vunpckhps
push
addr16
jmp
inc
iret
sub
fistpl
in
rolb
mov
rsm
inc
xor
inc
outsb
das
mov
add
adc
aad
sti
and
pop
in
gs
ret
pop
mov
push
rorl
and
xor
add
and
dec
addr16
mov
jg
or
call
mov
popa
aad
or
cs
dec
das
jns
push
nop
mov
add
pop
cmpsl
cltd
xorl
xlat
push
fstl
insb
aas
pop
or
andl
jg
jne
outsl
mov
mov
jo
iret
ret
fwait
dec
repnz
cmp
inc
mov
xor
nop
mov
loop
call
dec
pop
mov
and
xchg
sbb
notl
movb
stc
rcrl
cmpsl
fbld
imul
cwtl
pop
push
xchg
jne
push
mov
mov
dec
dec
xor
clc
sti
sbb
ss
sub
fmull
pop
dec
mov
out
jne
pop
inc
cs
pop
rcl
xor
push
add
sub
pop
dec
xor
aad
aam
punpcklbw
sbb
xchg
shrl
add
cmp
push
mov
iret
add
roll
or
mov
pushf
sbb
andb
fcmovne
loop
imul
lea
lds
dec
insb
xlat
out
xchg
loop
dec
cs
mov
in
mov
mov
sbb
mov
xor
outsb
adc
cwtl
xlat
mov
das
sbb
inc
aas
jno
inc
sti
pop
xchg
and
sub
jmp
cmpsl
xlat
lea
ljmp
mov
loop
popa
orl
rcll
jecxz
adc
hlt
or
dec
sub
sub
enter
leave
mov
dec
data16
aam
or
subl
dec
aad
imul
jle
push
scas
pop
lods
add
fnstsw
mov
mov
sahf
fstl
jmp
push
jns
jg
scas
repz
mov
cli
and
scas
sbb
frstor
pusha
push
mov
ja
fidivrl
push
mov
mov
mov
nop
mov
mov
test
leave
xchg
pop
pop
daa
lods
aas
shl
xor
and
inc
lret
mov
fwait
cmp
dec
imul
and
push
mov
mov
mov
stos
mov
iret
push
xchg
lea
jae
arpl
push
mov
push
aaa
sarb
jle
inc
xor
out
push
dec
mov
hlt
cli
lds
adc
movsl
inc
pop
movsl
cmp
or
fwait
ds
push
fwait
cmpsb
stos
sbbl
mov
xor
sbb
test
cmp
and
in
fldcw
pushfw
sbb
shrb
pop
std
test
xchg
pop
repnz
ret
fisubrl
call
ds
fldt
clc
sbb
test
or
mov
repnz
test
std
stos
loope
sbb
aaa
lock
les
leave
mov
insl
mov
xor
nop
cmp
sbb
out
aas
xchg
jae
insl
movsl
push
and
jmp
jle
cmpsb
xchg
lods
mov
cmp
scas
jl
lea
cltd
pop
das
and
pop
jp
lea
stos
pop
sbbl
cs
insl
jmp
inc
adc
call
int3
out
dec
pop
rolb
out
inc
pop
inc
fxsave
clc
imul
xchg
sbb
pop
push
lods
shrb
imul
jge
orl
pop
test
jge
mov
movsb
test
gs
jb
scas
add
mov
xor
sub
pop
fistl
dec
insl
pop
cmp
js
or
mov
jl
out
sbbl
packsswb
mov
ficoml
pusha
or
adc
loope
insb
cmp
inc
sbbl
mov
lahf
cli
repnz
or
imul
cli
push
mov
inc
mov
and
in
out
hlt
icebp
pop
add
les
inc
leave
or
lret
iret
sbb
sar
data16
jg
jge
add
jns
mov
jl
cwtl
test
sub
sbb
fdivrs
sti
out
pop
push
dec
xchg
cmp
aad
lods
ret
mov
ss
popf
test
sbb
aam
xchg
jecxz
iret
cmp
es
aas
fdivp
cmp
mov
mov
cmpsb
jns
orb
cmpsl
sub
inc
cld
repz
loopne
popf
sbbl
iret
cli
dec
dec
inc
or
push
sbb
testb
jmp
mov
mov
jae
lds
nop
ret
addr16
xlat
xor
jle
test
inc
push
fwait
push
jbe
add
inc
pop
push
sub
mov
and
and
and
pop
jg
or
fildl
cmp
popa
scas
fldt
push
es
out
ja
sub
data16
mov
cmp
mov
dec
mov
mov
ret
xor
cmp
push
stos
push
stos
jmp
ret
cltd
jl
sub
out
adc
adc
mov
nop
or
loop
dec
mov
xlat
cmp
sbb
mov
pop
movsl
add
bnd
and
lcall
mov
test
fists
into
enter
fisubs
pop
dec
stos
cs
jmp
mov
pop
rcll
adc
fs
jnp
xchg
mov
adc
jl
and
pop
cltd
out
sbb
cmc
mov
cmp
cmovnp
fistl
cmovbe
mov
pop
fucomi
pop
rcr
mov
lds
and
dec
mov
xor
add
out
stos
adc
subl
aas
inc
jo
fimuls
rcll
jne
mov
clc
arpl
sti
pop
popa
lock
in
push
test
sbb
mov
mov
pusha
mov
sbb
shr
mov
int
sub
ror
mov
js
sbb
lahf
aas
xchg
adc
gs
addr16
lods
subb
inc
test
leave
xor
shll
not
loope
popf
mov
cmpsb
in
aam
mov
subb
add
push
in
jno
sub
mov
cmp
mov
cwtl
sbb
dec
pop
sub
inc
xlat
aas
sbb
stos
mov
cmp
in
cmpsb
xor
or
jg
arpl
ds
in
jae
lret
sbb
pushf
mov
push
enterw
mov
cmp
xchg
xchg
test
mov
mov
loopne
out
pushf
pop
sbb
pop
cmp
lahf
lds
sub
test
mov
fwait
push
aas
dec
dec
hlt
pop
mov
roll
inc
jge
aam
xor
fwait
test
mov
pop
xor
out
adc
cmp
sahf
in
cwtl
scas
jmp
sub
mov
movsl
rcl
repz
mov
pop
push
jns
insl
arpl
sbb
jge
nop
jle
cmp
jnp
aad
test
in
dec
mov
push
mov
pop
xchg
popa
sbb
rclb
mov
ljmp
sti
hlt
xor
incl
xor
hlt
or
test
or
test
pop
jecxz
cli
cld
sbb
mov
adc
pop
lods
outsb
ljmp
xor
adcl
xor
lret
test
test
lods
xor
pushf
cmp
clc
mov
aad
jmp
stos
ret
xor
cmp
negb
pop
sub
sbb
gs
popl
repnz
std
mov
les
int3
repnz
inc
fadds
negl
xchg
jg
fwait
or
cwtl
or
mov
inc
rorb
imul
or
lret
push
call
xchg
jl
mov
loope
mul
dec
aaa
ljmp
inc
cltd
aas
jle
fisubs
mov
xor
push
es
aad
rorl
int
cmp
pop
jbe
jl
std
dec
add
xchg
test
mov
call
sbb
aaa
sahf
pop
int3
push
pop
mov
fsts
jae
mov
loop
xor
push
shlb
scas
cltd
mov
add
jns
inc
jo
cld
bound
imul
mov
cltd
inc
cs
pop
into
rol
mov
into
jno
fists
and
rcl
mov
xchg
imul
iret
clc
aaa
int
xchg
adc
lea
lea
sub
shr
loop
push
or
sbb
xchg
jmp
or
add
dec
jo
jp
mov
or
xchg
pop
push
sti
dec
mov
pop
mov
stc
add
and
aam
dec
jl
dec
xor
testl
shlb
ja
or
or
popa
xor
xorl
bound
test
jae
je
ret
pop
fmull
test
fcomps
and
cmp
sbb
pop
add
sahf
outsl
sub
arpl
or
mov
into
and
notl
shlb
rolb
mov
test
xor
fdivrs
call
jne
cwtl
push
iret
xchg
cmp
fildl
outsb
std
pop
cmp
mov
enter
xchg
jbe
cmp
lds
push
mov
dec
jo
dec
out
mov
pop
xor
out
std
jnp
pop
test
push
mov
push
adcl
mov
ret
bnd
enter
mov
loop
jl
nopl
outsb
mov
push
mov
inc
sub
adc
sbb
in
xchg
imul
popf
fdivr
dec
fdivr
lret
xchg
rcrl
add
xor
mov
mov
in
xchg
mov
mov
std
ret
ja
fildll
cli
or
jnp
cmp
jbe
push
out
and
lahf
cltd
iret
jno
ss
out
push
inc
adc
xchg
movsl
sbb
test
jp
jbe
test
outsb
and
sahf
aas
arpl
pop
xor
add
pusha
dec
out
dec
pop
lret
add
inc
ja
fdiv
sub
mov
popa
xor
out
es
dec
mov
dec
inc
mov
sbb
fimuls
rorb
outsl
sub
and
jbe
fs
stos
addl
push
je
cwtl
test
xor
les
test
dec
stos
push
dec
jae
xor
sub
lret
inc
bound
shlb
insl
mov
lock
push
rclb
stc
xor
push
mov
rolb
mov
push
xor
test
xchg
mov
arpl
xchg
sub
stos
fsubr
or
push
xchg
push
enter
and
xchg
pop
jnp
fiadds
dec
imul
push
orl
jmp
jnp
cld
xchg
jg
aas
call
sahf
inc
mov
leave
movsl
shlb
sbb
cs
dec
test
jge
test
jmp
jne
mov
movsb
das
sbb
ror
cli
mov
arpl
pusha
fnstenv
inc
in
sub
add
push
or
mov
push
or
stos
cmp
xchg
hlt
negw
inc
jae
dec
ljmp
mov
shl
adc
sbb
add
push
mov
pop
fst
lret
stos
icebp
xor
dec
xchg
bound
mov
ds
cs
int
jo
repz
sbb
push
jb
pop
jp
hlt
insb
int3
iret
pxor
or
pop
in
mov
test
addl
sub
inc
call
dec
mov
sar
add
xor
shl
jo
stos
dec
insb
out
mov
pop
and
add
popa
adc
xor
stos
out
or
test
test
pop
jo
inc
jnp
aad
cmp
wbinvd
hlt
inc
call
cmc
in
iret
pusha
or
rorb
add
jne
dec
xchg
push
or
insl
pop
dec
and
sbb
cmpsb
xor
inc
loope
sti
dec
cli
mov
cmp
jb
fs
mov
mov
dec
in
jnp
pusha
add
test
andb
push
aaa
bound
lods
imul
push
xchg
mov
cmp
addb
fcoms
loop
jno
cs
adc
mov
leave
bound
push
insb
test
shr
push
xchg
mov
cld
jb
sub
into
test
subb
push
sahf
test
mov
add
test
mov
aad
mov
pop
lcall
xchg
jg
xchg
out
lea
cmc
and
add
daa
mov
cmp
bound
sbb
add
adc
add
push
jecxz
rcrb
xchg
test
sbb
add
xor
jnp
push
inc
dec
icebp
call
lret
scas
mov
lods
or
andb
dec
push
icebp
sbb
popa
loopne
stc
jge
in
nop
lock
pop
add
out
cmp
dec
mov
iret
or
cmc
mov
push
nop
add
xor
pop
loopne
fsubrl
jecxz
mov
adc
jecxz
and
imul
sub
loop
insl
sahf
pop
sbb
adc
pushf
inc
test
loope
push
nop
movsb
test
enter
mov
mov
das
aaa
mov
sub
push
mov
dec
adc
fs
and
jp
mov
jno
adc
ljmp
ja
in
in
cmc
lret
cmpsl
iret
jle
scas
rolb
jecxz
les
jno
mov
aad
ja
pop
rclb
xchg
rorb
ja
xor
pop
xor
dec
mov
stc
fimull
lods
hlt
test
inc
mov
das
cli
mov
sbb
int3
mov
pop
daa
inc
js
xor
mov
push
pop
inc
inc
faddl
pop
push
pop
jmp
ret
fsubs
jge
push
or
cmpsb
add
sbb
int
mov
in
das
enter
jo
jle
out
sbb
sbb
ljmp
mov
push
loop
aam
sbb
jge
pop
xchg
push
popa
leave
fs
mov
cmp
fiaddl
into
mov
sub
mov
mov
add
inc
rcrb
xchg
aam
fucomi
ljmp
aad
or
leave
data16
adc
sbb
insl
xchg
push
jecxz
sti
xchg
bound
push
movsb
loope
adc
call
push
mov
inc
mov
mov
mov
insb
aas
inc
in
ret
insl
in
jns
jge
jnp
test
xor
or
jnp
orb
mov
jne
mov
mov
mov
ss
inc
pusha
sub
and
iret
sahf
push
add
add
mov
sbb
loop
xchg
fidivrs
xor
and
pushf
inc
pop
mov
or
ljmp
movsl
lods
xchg
fisttps
aas
xchg
pop
out
cs
pop
jge
xorb
or
mov
rorb
jecxz
sub
stc
nop
pop
xchg
cmp
push
lods
ljmp
cmp
aas
xchg
out
jo
mov
mov
push
movb
movsl
call
xor
push
sub
cmp
dec
adcb
enter
mov
test
adcl
imul
mov
cmp
cmpsl
outsb
test
jne
xor
push
pop
in
or
or
pop
xchg
nop
loopne
inc
pop
add
xchg
testl
cmp
cmp
lock
gs
jns
lock
push
adc
jae
sub
and
cmc
mov
mov
xchg
or
fcompl
js
imul
add
shlb
jg
cmp
mov
lea
sahf
test
mov
rclb
fcoms
lods
clc
repz
test
sub
cs
pop
push
add
mov
adc
sub
hlt
sub
mov
fs
adc
lcall
cltd
xchg
imul
dec
loopne
in
cld
sub
fdivl
xchg
clc
test
jle
jecxz
int3
push
mov
or
or
out
xchg
pop
jns
dec
iret
inc
jne
bound
cmp
push
lods
jg
pushf
and
sbb
stc
mov
lods
adc
pop
leave
push
inc
mov
sbb
scas
pop
scas
jmp
dec
fstl
adc
push
mov
and
pop
jns
iret
jb
jne
mov
add
out
out
lock
lods
jns
jecxz
fucomp
mov
jno
es
jb
imul
cmc
mov
jne
pop
jb
es
dec
imul
test
jbe
lret
push
push
ret
gs
std
sahf
leave
pop
add
cmp
addl
sub
sub
test
jno
dec
xor
fistl
fwait
outsb
loop
jae
lock
cmp
xchg
das
add
sbb
dec
xchg
insb
and
int
adc
cmp
sub
lock
or
xchg
cwtl
add
xor
push
inc
popl
cmc
xchg
pop
sbb
pop
stos
mov
cs
les
icebp
adc
dec
test
mov
xchg
mov
jae
push
sbb
mov
jg
mov
mov
fisubrs
sub
in
cmp
jno,pt
mov
or
ret
mov
out
in
mov
adc
testl
mov
lods
pop
pop
dec
inc
push
mov
rolb
cld
push
cmp
add
mov
aam
aad
mov
jmp
int
inc
xchg
adc
jns
les
dec
lods
popa
push
ljmp
sub
mov
lahf
mov
add
xor
cwtl
jle
cwtl
lea
fs
dec
adc
mov
mov
repnz
stc
lock
fldl
imul
loop
aas
jmp
or
xor
enter
ds
mov
xor
add
xchg
mov
mov
sub
inc
mov
adc
movsl
dec
imul
jmp
cmp
jmp
sub
and
test
xor
sarl
negb
stos
stos
mov
push
pop
jbe
mov
and
sti
or
cmpsb
xchg
iret
adc
push
mov
add
mov
int
dec
lock
jmp
pop
inc
sarb
sarl
adc
mov
pop
inc
or
ss
bnd
cmp
dec
jge
sub
cmc
fldl
sbb
fistl
ss
or
cmp
ret
cwtl
ds
mov
loop
fisttps
ror
daa
mov
lret
repnz
out
inc
push
jmp
xchg
int3
ret
jbe
movsb
loop
dec
call
insb
pop
or
cltd
pop
outsl
xchg
loope
sbbb
xchg
adc
sub
fnclex
test
or
scas
imul
in
out
sub
ds
std
xor
push
jecxz
mov
sbb
mov
aad
xchg
fs
xor
hlt
or
popf
loope
mov
dec
mov
pop
mov
ret
add
or
data16
test
movl
mov
push
adc
push
mov
mov
hlt
pop
aas
mov
nop
jae
lds
jge
xor
sub
jae
lea
push
fmul
dec
mov
stc
pop
mov
int3
fdivr
pusha
std
imul
icebp
scas
sbb
das
cmp
sbb
sub
imulb
pop
cmpsb
sbb
aaa
cmp
sbb
fdiv
fildll
adc
xchg
adc
in
jne
or
les
gs
or
jne
sbb
call
push
xchg
mov
iret
add
fsubr
sub
lcall
loope
jne
or
bound
repz
mov
loope
int
push
pop
aad
sub
loopne
mov
and
loopne
lea
dec
sub
lds
call
xchg
dec
ja
cmc
orb
xor
inc
popf
mov
pop
lods
sub
cmpsb
in
adc
addb
or
dec
out
in
jb
add
inc
push
push
into
push
jge
sbb
mov
push
mov
das
test
adc
push
push
repz
nop
adcb
pop
js
cmpl
sahf
cmp
mov
inc
lret
inc
mov
in
pushf
or
jg
nop
xchg
sbb
scas
push
dec
iret
dec
sbb
in
jle
fcomip
xchg
sahf
fildll
dec
sub
and
mov
pop
xor
mov
data16
xor
ds
xor
xchg
daa
jg
cmp
mov
pop
jmp
aad
pop
test
pusha
dec
stos
movsb
jo
cld
cmp
in
lcall
data16
jmp
inc
lret
es
inc
cmpsl
test
adc
pop
xor
pop
js
fwait
test
bnd
push
lret
leave
sbb
ds
enter
mov
sbb
fdivl
mov
loop
pusha
das
addr16
or
aaa
aaa
add
adc
mov
adc
repz
sbb
test
mov
inc
sti
fisubrs
fadd
pop
jbe
xchg
jge
sub
mov
lret
or
mov
jge
jmp
inc
push
mov
mov
and
cmp
cmpb
and
loope
jge
fstpt
adc
jl
rorl
and
aaa
xlat
dec
cmp
jne
js
andl
xor
loop
mov
jmp
adc
mov
fnstsw
sti
lea
mov
mov
mov
pop
xor
jbe
push
clc
cmp
cmpsl
and
aas
jae
add
cli
rol
adc
lcall
in
pop
fdivr
push
adc
inc
test
mov
mov
ja
mov
std
xlat
or
mov
mov
push
xor
and
mov
mov
fiaddl
fxam
call
xchg
xorl
pop
in
jnp
mov
and
mov
mov
mov
leave
clc
push
inc
cwtl
lds
cmp
xchg
xchg
inc
add
insl
test
sbbl
cmp
std
sti
sub
sub
sbb
adc
lods
and
repnz
fldl
jno
cmp
enter
mov
arpl
decl
movsl
mov
jo
imul
test
mov
mov
mov
fisubrs
xor
pop
cmp
pop
adc
jb
leave
cmc
loope
cmp
std
daa
mov
in
lods
xchg
mov
sbb
in
repnz
lcall
fistps
add
ja
push
stos
orl
mov
bound
inc
arpl
cmp
test
push
cmp
adc
mov
ss
mov
sarb
loop
inc
mov
fistps
xchg
insb
jae
lea
jns
add
push
out
xor
push
mov
adc
in
cmp
imul
lret
fwait
cmp
out
inc
mov
aas
outsl
adc
scas
inc
adcb
fmuls
xor
stc
inc
xchg
int
add
dec
adc
mov
fs
mov
lods
scas
out
movsl
xor
cmc
xor
es
dec
pop
or
fmul
cmp
jge
out
fbld
imul
pop
repnz
sbb
stos
jnp
pop
or
cmp
mov
pop
outsb
cli
addb
and
aam
xor
or
push
dec
aas
push
iret
dec
adc
mov
mov
shrb
push
push
jl
jg
mov
loope
cltd
mov
fidivrs
insb
jno
push
push
or
adc
sub
xchg
adc
adc
xchg
mov
stos
rcr
push
out
lock
enter
adc
mov
fisttpl
inc
or
imulb
mov
imul
std
sub
adc
fsubrl
and
out
jo
dec
mov
imul
lock
xlat
mov
push
outsl
pop
inc
lock
arpl
pushf
popf
repz
dec
test
jns
mov
add
cmpsl
clc
cmp
fwait
in
in
les
inc
ss
mov
mov
lds
pop
jno
and
cwtl
int3
ss
sbb
push
aam
ljmp
inc
xor
int
aas
cmpsb
pop
repnz
loope
imul
ret
std
fwait
xchg
ret
mov
mov
mov
outsl
testl
mov
pop
xchg
inc
adc
push
cmp
lret
mov
xor
jb
and
jo
ja
inc
adc
into
aad
in
ds
sbb
or
jle
adc
jg
pop
cmp
cmp
mov
ret
into
cmp
or
stc
into
cmc
rclb
jb
fstl
mov
loope
imul
test
jae
jns
loopne
les
push
and
add
rolb
pop
adc
cmp
js
cwtl
out
js
dec
lods
fidivl
popf
add
je
pop
jmp
fstpl
in
xor
arpl
add
add
pop
lock
xor
fs
aad
mov
adc
nop
inc
cmp
adcb
jge
subb
lahf
ret
outsl
mov
movsl
inc
push
ret
repz
rcrl
scas
out
xor
mov
xlat
out
mov
dec
pusha
cmpsb
pop
cmc
iret
or
cmp
push
and
popl
iret
cmp
hlt
sub
lods
sub
icebp
frstor
mov
into
add
addl
popa
les
xlat
mov
mov
test
xchg
int
nop
or
dec
cmp
ret
push
aas
fisubs
xchg
test
hlt
jne
add
dec
mov
xorl
mov
jb
mov
cs
popf
pop
and
ret
sub
push
std
dec
sub
bound
popf
imul
push
or
sub
shll
mov
push
sbb
sbbl
pushf
mov
xor
inc
imul
cltd
pop
sti
popa
xlat
fidivrs
insb
xchg
std
push
fists
cs
xor
lds
lret
or
dec
mov
das
add
addr16
stos
inc
xchg
push
lss
and
loope
adc
dec
rcrb
loopne
jge
mov
add
xchg
mulb
push
pop
add
inc
pusha
in
mov
or
mov
lods
dec
cmc
mov
jl
dec
mov
or
fidivrl
or
lods
cmp
mov
dec
mov
pop
mov
cmc
lcall
fisubrs
popa
add
push
push
jl
or
pop
ret
sub
adc
cs
mov
push
mov
loopne
adc
mov
cmpsl
mov
test
ljmp
ds
xchg
imul
or
push
popa
fmull
inc
pop
jmp
scas
sti
push
and
push
push
cs
xchg
xor
lea
in
pop
xchg
sbb
push
xchg
sahf
adc
jmp
test
adc
lock
decb
bound
jge
xchg
lods
xor
dec
fs
cmpl
jb
dec
push
mov
push
pop
lods
add
test
into
in
fucom
dec
xchg
fcoml
movsb
sub
sbb
mov
mov
jmp
sub
adc
add
xlat
inc
ja
shrb
xor
pushf
jge
jb
out
jnp
mov
ja
mov
jns
mov
cmp
icebp
addr16
sahf
test
fiadds
ja
pop
jno
movsl
out
xor
icebp
arpl
or
jmp
scas
aas
inc
je
cmp
in
or
test
push
xchg
andb
ret
out
out
or
ds
xchg
pop
cmp
ljmp
loop
gs
mov
aad
test
outsl
mov
mov
sbb
les
sub
mov
ds
cmp
adc
or
and
mov
mov
in
add
jmp
mov
adc
adc
aas
sbb
and
and
or
lret
ds
jl
xchg
or
pop
lock
jae
sbb
inc
mov
mov
stos
and
mov
std
cld
test
cmp
aas
ret
mov
fstl
mov
jp
aaa
jge
sbb
cmpsl
mov
xchg
hlt
in
iret
pusha
sub
in
and
das
dec
int3
sti
test
jno
adc
xor
mov
lods
clc
xor
pusha
hlt
nop
xchg
rolb
jns
cmp
addr16
or
fwait
cli
cs
xor
hlt
pop
in
mov
sbb
ss
dec
cmpsl
pop
insl
jno
test
lret
and
je
mov
imul
adc
adc
call
shll
inc
jg
inc
push
das
xchg
cli
call
out
mov
inc
lahf
sahf
call
stos
push
xchg
sbb
insb
out
push
mov
pop
out
ffreep
sbb
ret
jae
shrl
ss
addr16
ds
add
xchg
push
xorps
movsb
insl
imul
mov
repz
subb
cmpl
imulb
sub
addr16
gs
dec
rolb
mov
sub
and
inc
movsl
lret
test
or
test
inc
mov
adc
inc
push
outsb
iret
mov
ret
shlb
repnz
pushf
jb
loopne
dec
add
gs
push
sbb
push
fdivr
pop
ss
inc
movsb
addr16
adcb
test
xorl
into
xchg
cld
push
dec
shrb
imulb
jne
jno
jmp
or
mov
jle
scas
aad
push
jge
jo
ja
and
in
sbb
fwait
pop
inc
fistpll
test
push
lea
test
cs
sub
fdivrs
lcall
repnz
fisttpll
mov
xor
out
cltd
imul
xor
popa
add
cmpsb
sub
jo,pt
into
sbb
out
and
or
mov
lcall
fstpl
push
inc
cld
imul
sbb
sbb
int
ja
mov
out
adc
cli
jo
sbb
fistpll
push
orl
imul
aaa
aam
test
dec
inc
and
push
mov
fs
adc
roll
in
orl
flds
and
add
pop
add
mov
adc
inc
jp
sahf
push
inc
fs
sub
in
cmp
xchg
iret
mov
sbb
xor
jne
push
mov
cs
push
dec
in
push
sbb
push
shll
xor
scas
add
fs
jmp
fadds
js
shr
sbb
out
add
bound
inc
and
test
loopne
mov
lds
rolb
mov
imul
or
sbbb
leave
or
movsb
ljmp
pop
push
push
xor
outsb
inc
push
or
xchg
call
fdivrs
dec
dec
jl
ja
sbb
addb
pusha
inc
cmc
mov
add
notl
ljmp
inc
mov
push
fs
or
xchg
mov
fnstsw
mov
jae
mov
mov
pusha
out
insl
xchg
rcr
inc
loop
rdtsc
outsl
inc
movsl
mov
fs
es
jmp
add
sarl
mov
subl
mov
mov
mov
adc
dec
dec
dec
push
sub
sahf
dec
xchg
out
mov
jge
pop
loopne
adc
out
aaa
add
sbb
ret
cmp
cs
pop
pop
push
adc
push
cli
je
std
sub
stos
cltd
mov
adc
adc
push
and
aam
cli
rclb
test
loopne
ljmp
mov
cwtl
fstps
pushf
clc
push
les
mov
sub
sti
fdivrs
enter
push
insb
add
sbb
out
xchg
andb
adc
in
add
aad
sbb
xor
aam
mov
or
imul
ja
lods
ds
adc
leave
rolb
xchg
sti
orl
repnz
adc
inc
mov
mov
in
insb
aas
xchg
add
and
jle
arpl
and
movsb
and
add
ljmp
xor
sbb
push
roll
sub
mov
jo
xchg
testl
out
jecxz
pop
adc
ja
sub
insl
cli
dec
inc
cmp
and
mov
lret
or
lret
imul
hlt
test
adc
lahf
daa
push
movsl
inc
mov
and
xor
sub
mov
out
inc
testb
stos
lds
inc
cltd
jo
sbb
cmp
dec
lret
outsl
call
loopne
cmpsb
xor
fistpll
jle
mov
mov
out
xor
xor
xchg
call
push
push
xchg
ss
shrb
data16
rcl
adc
mov
and
push
sahf
ds
mov
mov
cmp
and
push
mov
aad
in
jo
in
pop
jnp
sbb
pusha
popf
ja
js
and
add
cltd
call
xchg
in
stc
dec
pop
jg
dec
mov
xor
xchg
outsb
not
in
xchg
pop
jl
rcrb
pop
xchg
repnz
push
jns
lods
lock
adc
aam
sub
sub
mov
sub
lods
inc
mov
and
or
dec
cmp
jmp
scas
cmp
vscalefss
repnz
mov
mov
sbb
fcmove
sub
cmc
sahf
inc
in
mov
orl
hlt
mov
repnz
repnz
enter
dec
add
popl
lods
push
inc
movsl
xchg
std
dec
inc
daa
imul
loope
ds
nop
xor
xor
push
push
xlat
loope
cmp
mov
pop
push
and
sbb
arpl
mov
dec
inc
test
dec
cld
pop
rorb
push
xor
jbe
adc
mov
faddp
cmc
outsl
daa
jl
mov
addr16
stc
addr16
sub
mov
cs
arpl
push
mov
xchg
adc
xchg
loop
fadd
loopne
lock
arpl
in
xchg
pop
inc
pop
lods
and
mov
mov
inc
jg
push
loope
cwtl
dec
add
and
jns
pop
fdivl
popa
sub
hlt
popa
pusha
and
shll
xor
xor
and
pop
mov
add
mov
lcall
outsl
mov
ljmp
leave
sub
loopne
jmp
or
lcall
jns
sbb
shlw
imul
sbb
jne
fs
pushf
pop
js
ret
nop
inc
icebp
cmpsl
aaa
push
stos
test
xchg
int3
movzwl
mov
adc
xor
jbe
sbb
push
mov
inc
loop
and
xor
cs
ds
fisubs
mov
sbb
adc
mov
idiv
sub
mov
push
inc
rcrb
mov
int3
cli
mov
add
out
pop
lahf
jb
lcall
cmp
inc
jg
ja
cmp
mov
add
and
imul
adc
into
enter
in
test
out
adc
mov
sub
sbb
sub
add
ret
adc
inc
sub
subl
dec
sub
movsb
insb
negl
sub
or
sub
shl
cmpsb
lcall
sub
ja
outsl
out
jae
xchg
jno
cmp
sbb
lods
xchg
lcall
popf
add
negl
inc
sub
out
pop
outsl
ret
inc
mov
pop
jmp
lcall
mov
aas
shll
mov
out
mov
shlb
rorb
cli
xchg
dec
xchg
and
rorl
and
jecxz
xor
mov
sub
pop
enter
jnp
adc
inc
lret
mov
loope
inc
push
mov
mov
xor
popa
data16
mov
jb
pushf
jo
cmp
shl
push
push
repz
mov
dec
fs
enter
adc
sbb
cs
xor
imul
lret
out
mov
aad
xchg
fdiv
mov
push
adc
cmp
pop
inc
dec
cmpsl
or
dec
dec
jmp
jmp
cli
pop
add
rcrb
cmp
add
mov
loop
sub
or
inc
add
out
stos
imul
mov
mov
outsb
shll
lods
enter
aad
lock
fmulp
lret
jecxz
test
loope
aaa
xchg
ds
ret
push
repz
aad
dec
xchg
mov
cmp
movsb
mov
cli
jnp
aam
dec
cmp
les
push
mov
mov
sub
sahf
arpl
push
inc
add
cmp
push
cmp
xchg
loop
or
imul
adcl
fwait
mov
cld
int3
jne
mov
and
outsb
push
dec
cmp
mov
cmp
es
lahf
je
fsubl
cmpsl
loop
int3
lret
cmp
cmpsl
fwait
sub
ja
aam
or
lret
in
mov
lcall
aam
sub
stc
xor
inc
cltd
mov
mov
pop
lds
fs
xchg
mov
fisubrs
shl
jmp
loop
scas
ja
xchg
mov
in
inc
sbb
push
push
stos
sarl
lds
lcall
shr
sti
push
dec
xchg
lds
roll
lods
sbb
xor
mov
test
lea
pusha
cmc
int
add
mov
popa
xchg
push
sub
std
sbb
xchg
sub
add
fnstsw
jp
inc
pop
and
pusha
mov
nop
mov
sbb
cmp
xchg
aas
mov
popf
mov
bound
adc
xor
enter
psraw
push
add
into
es
fnstenv
cs
repz
stc
xchg
pop
cmp
orb
ds
dec
inc
test
insb
fadds
or
add
sbb
jb
inc
idivb
pop
dec
test
push
cld
xchg
xchg
add
jno
xchg
int
lods
js
loopne
push
in
adc
jb
icebp
stos
js
inc
lds
xchg
mov
pop
push
fsubs
cs
mov
adc
bound
outsb
add
dec
outsb
xor
jbe
test
mov
sub
shl
lahf
arpl
jbe
dec
sti
aam
in
es
fsubrl
test
inc
and
aas
and
inc
dec
mov
jle
sub
cmp
ja
xchg
shrb
adc
sub
push
stc
or
js
aaa
push
mov
pop
add
mov
or
in
fidivrs
cmp
les
mov
jmp
and
xchg
jmp
push
ret
movl
xchg
cmc
outsb
mov
cli
jae
in
loop
mov
jno
push
sub
fnstenv
out
and
sti
int3
test
jae
mov
in
leave
add
rorl
push
mov
fcomp
or
jae
adc
imul
or
leave
lret
es
notb
fnstcw
movl
inc
fwait
nop
xchg
mov
outsl
aam
adcb
push
mov
loopne
jl
inc
mov
add
xlat
mov
scas
push
inc
sbb
add
subb
outsl
xchg
dec
popa
cmc
loopne
subb
mov
frstor
inc
in
out
loopne
mov
sbb
adc
cmp
pop
lret
xor
mov
pop
jbe
and
aad
outsb
push
cmpsl
pop
xchg
scas
fcomps
xchg
jnp
lods
outsl
scas
cmp
call
inc
insl
aad
mov
ror
in
sbbb
push
mov
mov
jae
call
dec
dec
pop
push
lcall
pushf
mov
push
lods
scas
int3
mov
mov
stos
xchg
xchg
add
and
int
loop
mov
das
jo
or
or
xor
xor
sarb
pop
sahf
cmp
pop
dec
es
mov
int3
mov
mov
jecxz
sub
mov
mov
iret
mov
mov
rorl
dec
hlt
mov
out
fildll
andl
dec
sbb
cmpsl
movsl
popf
xor
xchg
mov
lret
mull
in
add
inc
je
cmp
and
push
jo
mov
adc
cmp
testb
sbb
jnp,pn
sbb
xchg
add
test
aad
inc
or
push
inc
ja
pop
and
out
lea
xchg
cwtl
sahf
fistpl
fisubl
cmp
sub
aad
je
lret
push
cmp
dec
jg,pn
mov
cli
mov
xor
cmpsb
jnp
and
rcrb
pop
imul
jmp
popf
or
sub
mov
gs
adc
pop
data16
popa
movsb
mov
sbb
dec
vpmulhuw
shl
add
sbb
mov
jnp
rcrl
test
pop
lret
mov
pop
aam
inc
xlat
or
or
in
dec
sbb
cmpsb
cmpsb
xor
ljmp
rcrl
dec
and
xchg
mov
movsl
lods
jnp
sub
lods
ja
mov
add
add
test
pop
icebp
sub
or
inc
in
xor
jno
pop
and
inc
push
sahf
jmp
or
sbb
or
dec
cmp
pop
mov
jp
ss
mov
mov
dec
mov
out
in
push
pop
or
dec
lea
pusha
inc
cmpsl
repnz
cmp
xchg
inc
std
inc
movsl
mov
sbb
out
inc
mov
jmp
add
and
inc
mov
in
rcrb
or
pop
stos
test
xor
outsb
aad
pusha
dec
mov
mov
xchg
adc
cmp
inc
lods
cmp
popf
mov
mov
jae
dec
cli
add
cli
add
push
movnti
mov
push
mov
xchg
cmp
in
lock
orb
ja
xchg
loope
shll
cmc
add
mov
mov
fxch
js
das
inc
in
pop
lods
adc
mov
xchg
mov
cmp
lea
adc
xor
pop
inc
leave
nop
sub
and
or
add
sbb
fs
or
and
dec
jne
cwtl
xchg
mov
and
mov
test
xor
jae
sbb
push
pop
add
ret
std
call
insb
clc
add
arpl
or
push
fldt
bound
xchg
cmpsl
dec
cli
shll
aam
sub
and
jp
inc
les
outsl
add
fcoms
or
jnp
xor
mov
xor
sbbb
adc
jnp
xchg
lret
clc
das
cmpsb
inc
test
jo
pop
sub
test
sbb
and
push
sub
repz
aam
inc
pushf
test
outsl
mov
push
mov
cwtl
bound
mov
dec
pop
lods
dec
xor
lret
mov
out
stos
xchg
inc
push
push
and
mov
sbb
mov
inc
cltd
dec
dec
pop
pusha
and
in
jo
out
das
outsb
mov
movsb
adc
jnp
cmp
lods
adc
fnstenv
add
out
out
jg
mov
movsl
lret
rolb
mov
sub
imul
jne
mov
sbb
inc
fnstcw
out
cmp
js
rcl
outsl
mov
or
mov
frstpm(287
lods
mov
sub
fistpll
cmc
lahf
mov
cmp
loopne
notl
pop
and
out
insb
aad
or
inc
aaa
mov
mov
movsl
or
inc
aas
xlat
sbb
lahf
insb
shl
adc
lret
mov
or
les
cmp
test
lcall
jecxz
repz
into
or
xchg
rcll
mov
bound
punpcklbw
loope
repz
pop
jb
mov
cwtl
les
sti
cld
jb
jecxz
fs
outsb
fmulp
stos
in
xor
insb
in
fcoms
shlb
inc
sub
xchg
dec
in
push
sub
fnsave
lret
int
cmp
test
or
mov
or
add
push
in
popl
pushl
ds
sub
push
adc
hlt
iret
popf
push
insl
out
push
out
xchg
sbb
insb
xor
xchg
movsb
xor
jge
mov
ja
push
notb
mov
aad
loopne
lods
dec
cwtl
ret
dec
insl
xchg
fstpl
sbb
jbe
push
sub
sbb
imull
jbe
je
sbb
in
sub
push
insl
jp
pop
cs
in
mov
loope
xchg
cmpsb
or
mov
and
add
rcrl
sbb
out
push
dec
dec
cmp
inc
test
add
adc
cltd
into
fs
jmp
xchg
jge
out
jo
xchg
push
rorl
mov
stos
inc
ljmp
addl
loop
push
into
xchg
adc
dec
jns
mov
xchg
dec
mov
mov
shrl
fmulp
cld
or
adc
mov
or
mov
in
stos
and
xchg
in
and
gs
mov
mov
pop
add
cmpsb
js
pop
adcl
cmp
mov
cld
stos
sub
pop
xchg
mov
in
hlt
add
out
popa
scas
mov
loopne
pop
or
jno
pop
sbb
mov
mov
jne
ljmp
mov
push
frstor
cmp
mov
or
jo
pop
test
pop
bound
fisttpl
inc
xchg
pop
das
nop
and
mov
mov
enter
stos
push
pop
adc
jo
adc
test
testb
dec
imul
sub
ljmp
adc
push
inc
fiadds
stos
mov
xor
pop
push
and
scas
shll
add
or
hlt
dec
outsb
inc
lea
aad
pop
aam
jns
xor
xor
decb
lea
cld
shrl
imul
push
ret
cmp
cmp
cwtl
lock
cltd
jg
and
cwtl
add
loop
jl
stc
inc
push
cld
sbb
imul
or
cmp
push
arpl
rorl
mov
xlat
cmp
push
jns
inc
push
mov
jno
cltd
mov
dec
jge
rcll
adc
xchg
ficoml
xor
sub
mov
out
push
dec
xor
and
mov
and
pop
push
fdivs
and
scas
fimull
and
xor
das
push
repz
out
frstor
add
mov
jp
leave
fwait
es
pop
mov
dec
adc
inc
cli
movsb
mov
dec
dec
adc
xchg
adc
push
out
pop
in
push
out
mov
and
inc
rolb
add
sbb
sbb
sbb
dec
inc
xchg
xchg
mov
and
nopl
lcall
inc
add
and
push
dec
loop
cmp
cmpsl
je
add
movsb
ret
cmpsb
test
and
mov
movsl
sub
jae
push
je
add
sbb
leave
stos
lods
sti
sbbl
push
mov
shr
sub
push
sub
mov
movsl
jbe
fs
pop
adc
inc
fs
and
test
xor
insl
loope
aad
xor
adc
mov
sub
in
cwtl
fwait
loopne
xor
lea
aam
cld
jmp
inc
fildl
cmp
stc
mov
jae
jmp
pop
dec
add
ja
es
jmp
bswap
xchg
js
mov
push
mov
lret
jl
sti
jg
sub
push
sbb
loope
sbb
pusha
frstor
add
pusha
daa
lea
in
rorl
mov
imull
sti
jp
sbbl
mov
fmulp
and
cmp
in
xchg
repnz
push
xor
and
and
mov
mov
addr16
hlt
je
adc
scas
or
stos
push
out
mov
add
inc
xor
movsl
popl
fs
pop
hlt
ss
sub
js
lret
iret
popa
pop
cmp
mov
push
mov
pushf
cmp
lods
nop
mov
lcall
xchg
fldl2t
cmp
adc
cld
dec
fisttps
mov
clc
xchg
pop
inc
jae
pop
popf
fstp
je
lahf
jle
mov
jp
ficomps
cmpsl
xor
adc
pop
xor
scas
cmp
jecxz
test
mov
out
push
dec
popf
adc
jecxz
or
cmp
repz
and
adc
jmp
mov
cwtl
mov
loopne
enter
mov
mov
imul
jp
adc
adcl
jno
out
scas
in
lcall
out
mov
xchg
mov
es
push
loopne
aad
dec
fcomps
adc
fldl
sbb
lret
inc
cmp
xchg
int3
or
mov
gs
jb
push
or
adcb
pop
shlb
fbld
int
jle
push
sbb
add
xor
mov
les
dec
xor
xchg
inc
sbb
loop
inc
xor
mov
mov
iret
ficomps
xchg
adc
inc
jo
jmp
cwtl
movsl
sbb
adc
dec
lcall
jns
mov
mov
add
outsb
enter
mov
inc
test
dec
lea
push
aaa
and
xor
ret
pop
push
sbb
mov
sub
mov
push
sbb
daa
repnz
insb
cmpsb
cmpsl
adc
sbb
xchg
scas
xor
lods
out
jnp
inc
aad
push
mov
mov
scas
call
push
loopne
cli
enter
mov
inc
mov
ja
push
flds
or
mov
ljmp
out
outsl
and
jecxz
fwait
jnp
repz
and
xchg
neg
enter
popa
aas
jl
cmc
add
xchg
out
imul
mov
xor
push
out
idiv
sub
ljmp
cmp
enter
cmp
mov
push
lea
lods
popf
dec
cwtl
imull
adc
dec
mov
enter
jge
inc
mov
xor
sbb
mov
movsb
lods
xor
cld
mov
cmp
lahf
pop
sub
sub
push
xchg
cmpsl
add
push
pop
mov
xor
inc
lods
ficomps
add
and
pop
scas
jmp
push
test
movsl
ss
adc
cmpb
std
lahf
cmp
in
int
xchg
sbb
fs
push
mov
sbb
insl
mov
dec
int3
stos
fcomip
sbb
xchg
jns
dec
fnstsw
jmp
add
dec
sbb
gs
test
mov
fucomp
cmpl
movb
ret
push
cmp
sbb
fld
dec
in
or
pop
xor
in
mov
jbe
stc
imul
push
mov
dec
push
mov
adc
xchg
fsts
inc
lret
gs
outsb
mov
stos
addb
pop
mov
mov
xchg
jecxz
inc
scas
sub
data16
and
lahf
rcr
jl
orb
adc
mov
fiaddl
mov
inc
test
push
sbb
cld
dec
arpl
in
arpl
xchg
sbb
jnp
out
sbb
sahf
pop
or
dec
and
and
sub
clc
pop
push
mov
pop
xchg
jmp
leave
imul
test
sar
cmp
fsub
mov
into
je
sub
pop
scas
loope
push
pop
std
call
mov
lahf
addl
iret
out
cmp
test
dec
ljmp
mov
push
popf
push
xchg
mov
fsts
rcll
inc
sarb
xchg
cmp
pop
xchg
icebp
xchg
mov
pop
aas
loop
test
dec
xlat
icebp
add
shll
inc
pop
push
adc
outsb
je
inc
push
push
fmuls
popa
cwtl
mov
ss
imul
imull
sub
xor
filds
por
cmp
imul
in
mov
cmp
gs
les
sbb
call
push
sub
adc
adc
inc
mov
mov
popf
fisttpll
add
jns
pop
adc
fnsetpm(287
mov
stos
sub
push
mov
js
sub
dec
loop
and
sar
pusha
jge
rcll
mov
dec
loop
mov
icebp
fldl
lahf
iret
xor
scas
fwait
aad
test
popf
sub
inc
cld
mov
div
test
mov
xor
cwtl
or
je
fists
popa
stos
fwait
cmp
outsl
mov
lret
sub
sbb
xchg
scas
ljmp
adc
aas
sbb
enter
into
push
std
andb
push
mov
push
repnz
lods
push
pop
add
xchg
loop
xchg
movzbl
push
pop
push
out
addr16
or
push
int3
movsl
dec
lret
in
test
pop
mov
inc
shr
jns
add
cmp
sbb
cmp
outsl
mov
add
pop
icebp
notl
cmp
gs
popf
jl
mov
je
add
dec
sub
in
jb
xchg
pop
push
sbb
loopne
mov
adc
mov
call
dec
popw
rcrb
pop
cmp
lds
int3
std
or
xlat
sarl
mov
dec
fstp
xor
orl
stc
xor
das
jno
inc
aas
jns
lahf
cmc
shrl
pop
jne
mov
xchg
out
lret
lret
mov
iret
xchg
iret
clc
mov
shrl
sub
sbb
inc
loopne
jns
push
mov
adc
pop
repnz
std
push
mov
es
fcoml
int
mov
push
movswl
pop
jmp
scas
sub
in
in
or
mov
sub
pop
lods
sub
mov
iret
jns
jl
mov
mov
or
es
insl
and
clc
outsl
shrb
mov
push
in
mov
test
xchg
jo
fucomp
mov
xchg
iret
add
jmp
mov
or
push
clc
or
idiv
lahf
aam
fiadds
inc
mov
lret
mov
jmp
cmp
fdiv
xchg
cmp
jo
cmp
cli
in
enter
xchg
xor
flds
movsb
lds
ja
mov
adc
test
insb
push
mov
movsb
xchg
test
lahf
inc
add
ss
xor
subb
xor
mov
test
outsl
mov
jns
sti
clc
jno
sub
mov
fsubp
push
jg
ret
push
decl
movsl
xchg
lods
dec
jbe
jo
mov
adc
stc
stc
add
sub
adc
sub
lahf
xlat
into
pop
dec
sbb
scas
cmp
hlt
push
ret
out
cwtl
jb
adc
add
xchg
stc
push
jge
arpl
jmp
push
sarl
test
aad
sti
cmpb
push
sub
sbb
mov
stos
dec
mov
shlb
in
sti
gs
jns
cmp
sbb
out
mov
mov
fcmovbe
pop
into
jns
stc
aad
in
les
rclb
adc
sub
push
pop
sbb
mov
mov
inc
ss
movsl
lcall
lods
jle
popf
lret
mov
cmpsb
push
dec
dec
cmp
iret
sahf
cmp
mov
ljmp
mov
mov
insb
push
test
mov
mov
negl
cmp
or
cmpsb
shr
cld
lret
aaa
fwait
inc
outsl
addb
sub
xchg
push
mov
xorb
mov
lcall
cli
fisttpl
jne
sub
fisttpll
int
pop
dec
push
xchg
loope
cld
cwtl
mov
out
dec
mov
roll
icebp
int3
xlat
sbb
xlat
addr16
adc
cmp
xor
pusha
push
lcall
mov
mov
pusha
icebp
mov
fcoms
outsb
or
sbb
into
test
pop
sub
and
cmpb
push
xchg
data16
cmp
leave
jo
scas
icebp
push
stos
rcll
gs
pop
vmwrite
and
insl
in
gs
enter
add
xor
shrl
mov
add
mov
push
sahf
bound
pop
mov
xor
push
dec
imul
mov
jge
xlat
jle
stos
cmpsl
in
inc
mov
out
inc
add
lds
push
insb
cltd
jne
bound
dec
jge
test
or
xor
jb,pt
pop
sbb
inc
inc
xchg
cmp
adc
repnz
sbb
pop
insl
sti
mov
push
mov
pop
insl
in
das
je
ret
adc
push
loope
repnz
lds
aaa
mov
jmp
xchg
cs
notb
sub
adc
cmp
invd
rcr
int
and
std
xchg
mov
sbb
icebp
repnz
lods
repnz
mov
repz
xchg
add
xor
push
sub
add
lcall
fs
push
push
mov
mov
pop
into
cwtl
mov
arpl
call
test
fcomp
outsl
sbb
leave
out
shrl
jns
cli
adc
sub
add
mov
mov
push
jecxz
jns
lods
and
xchg
xor
repz
iret
sub
inc
mov
std
xlat
xor
jnp
jbe
ja
into
adc
push
mov
aaa
rorb
mov
cmp
dec
mov
adc
push
xor
add
out
cmc
xor
inc
add
jns
shlb
lret
dec
add
inc
int
mov
or
mov
and
xchg
sahf
push
nop
and
mov
sub
xor
test
lods
outsl
xchg
ljmp
mov
cmp
mov
jle
lods
mov
cwtl
adc
dec
add
jne
add
enter
push
shll
repz
cltd
loop
fidivs
add
cmp
cltd
test
jno
xorb
sbb
sbb
push
xorl
xchg
jb
jp
cs
xchg
mov
xchg
dec
das
push
lcall
push
insb
push
lcall
sti
scas
xor
mov
push
fsubrs
pop
add
cltd
stos
adc
mov
adc
jmp
mov
jb
pop
cmp
iret
repnz
lds
mov
sbb
dec
js
sbb
xchg
fidivrs
iret
mov
mov
xchg
mov
push
es
lcall
cli
inc
vpaddsb
mov
cmc
out
iret
jmp
notl
sti
adc
xchg
sub
mov
add
leave
xorl
push
test
or
cmpsl
ret
enter
xor
cmp
pop
loopne
push
push
lret
pop
cmp
stos
sub
mov
cli
push
loope
jl
repz
movsl
fcomi
les
cmp
sbb
lds
jns
mov
adc
lock
jge
pop
lahf
mov
xchg
repz
repz
cmp
and
fcompl
push
jp
fisubrl
cwtl
fistpl
jg
add
mov
inc
int3
inc
movsb
ficomps
pop
aas
cmpsb
add
mov
mov
or
std
or
mov
cmp
test
pushf
lea
icebp
rcl
dec
pop
daa
mov
ljmp
pusha
inc
loope
jbe
dec
jecxz
and
adc
or
lret
xchg
aaa
pop
jnp
pop
mov
test
add
push
xor
push
out
sub
sbb
jmp
fiadds
cmp
inc
adc
inc
sub
mov
jno
movsl
push
pop
fcmovne
or
push
add
sbb
cmpsl
in
inc
xchg
fs
xor
mov
sbb
and
sbb
inc
icebp
mov
xor
je
mov
add
lcall
test
lock
xchg
repz
fwait
stc
and
sub
pop
jo
pop
rcrb
xor
push
rcrb
test
cmp
sub
mov
or
stos
sbb
jl
insb
pushf
loope
sub
imul
sub
jecxz
jl
xor
inc
mov
push
movsb
adc
add
xor
cltd
mov
adc
loop
fnstsw
shlb
push
dec
fsubrl
arpl
out
jge
repz
jo
add
or
shrb
sub
pushf
or
ja
cmc
fidivl
movsl
in
data16
aam
jmp
push
ror
sti
inc
jl,pt
mov
stos
xchg
ljmp
mov
jl
shrl
lds
xor
addr16
pop
or
or
call
add
mov
xor
movsb
int3
mov
fisubrl
push
movsb
dec
add
insl
or
ret
loop
add
jl
jno
mov
repnz
test
or
cmpb
mov
sbb
xchg
ds
mov
cld
inc
mov
popa
push
cmpsb
push
sbb
ljmp
jg
add
and
lds
cmpsb
movsl
dec
outsb
xor
or
pop
push
in
cmp
test
cmpsl
xor
xchg
pop
clc
jg
jae
or
pop
mov
cmp
insl
nop
cmpb
cmpl
in
xlat
inc
pop
popf
cwtl
shrb
pop
sbb
loopne
sub
mov
cmpsl
cmpsb
loopne
xor
and
les
mov
sub
das
test
test
repnz
cli
test
loopne
js
addr16
iret
das
dec
sub
mov
dec
adc
aas
scas
mov
add
pop
jae
imul
inc
and
andl
incb
loop
mov
in
push
es
cmpsb
jne
push
dec
jle
jo
xchg
sahf
push
outsl
shll
mov
dec
cltd
jmp
push
push
mov
mov
fistpll
push
adc
cli
push
shlb
fnstsw
xlat
mov
pop
push
ja
repnz
fisubrs
icebp
add
pushl
xchg
mov
fstpt
aaa
push
mov
stc
int3
push
enter
inc
xchg
inc
test
pop
clc
fmull
pop
adc
xor
cs
xor
ss
aad
and
aaa
jns
sub
xchg
adc
lret
leave
push
iret
mov
outsb
mov
cmp
mov
mov
and
mov
sahf
icebp
lret
pop
or
pop
cs
lea
sbb
pop
enter
mov
mov
sub
stos
jbe
mov
mov
cmp
mov
dec
loope
mov
cmpsb
das
push
mov
int
int3
lcall
xchg
sahf
xor
mov
dec
jmp
sbbl
mov
subl
and
cli
or
mov
popf
push
adc
cld
sub
dec
add
lret
push
sbb
enter
mov
mov
sti
jne
add
jbe
gs
add
push
push
xchg
push
sub
sahf
movsl
adc
fists
pop
sub
cmpl
scas
push
pop
rol
jb
mov
jno
hlt
mov
push
js
enter
mov
inc
inc
imul
aas
lcall
jl
add
sbb
roll
mov
mov
ja
xor
aaa
dec
xchg
inc
in
push
xchg
cli
hlt
jbe
mov
repnz
push
test
mulb
jae
lcall
mov
and
add
inc
push
pop
out
push
pop
dec
mov
sub
cmc
cmpsb
cmp
lea
jg
aam
pop
mov
inc
add
push
mov
sbb
bnd
std
push
scas
lret
icebp
hlt
jae
jae
ret
add
xchg
fisubrl
pop
stos
psadbw
jbe
int
xchg
dec
fs
lret
or
dec
and
xor
dec
ljmp
pop
or
xchg
aad
add
mov
sub
sar
insb
rdpmc
inc
dec
cs
add
ds
fwait
or
mov
cmp
xchg
xorl
ficompl
ret
mov
mov
cld
jg
call
and
ret
xor
jno
mov
jne
ficompl
pop
aad
stc
push
pop
or
push
add
and
jns
out
sub
mov
push
or
dec
es
or
test
jl
jo
mov
or
adc
ret
cld
mov
rcrb
jnp
mov
cmp
mov
shrb
fsub
sbb
loop
icebp
lsl
clc
jo
sahf
jmp
stos
xor
ljmp
xor
lea
daa
inc
mov
sarl
mov
add
nop
out
pop
subl
fwait
ret
movb
jl
add
lock
add
adc
ss
mull
arpl
cmp
add
cs
jle
and
mov
cld
add
out
mov
cmp
adc
xchg
dec
fcoms
add
jb
mov
mov
sub
or
andnps
lods
jb
mov
add
mov
inc
mov
dec
sub
push
jo
jnp
dec
stos
adc
in
sbb
sub
jnp
cmp
pop
cmp
mov
sub
lret
dec
lcall
popa
bnd
mov
inc
sbb
sbb
iret
adcb
inc
sub
pop
cwtl
xor
pop
dec
outsb
inc
fistpll
aam
adc
fucomip
loopne
pop
clc
ret
xlat
cs
cmp
push
adc
sub
dec
pop
mov
test
mov
inc
add
movsl
xchg
xchg
adc
add
or
dec
call
push
push
inc
adc
ficoms
and
and
inc
mov
push
xchg
or
popf
cmc
mov
add
push
stc
push
jo
jns
cmp
or
push
fmull
aas
out
or
sbb
jnp
movl
aam
dec
lock
out
push
dec
push
mov
mov
inc
xchg
xchg
sti
leave
fsubs
cmp
jp
fbstp
std
std
push
pusha
inc
movsl
loopne
dec
int
inc
xchg
push
movsl
sbb
inc
mov
dec
xchg
or
push
jnp
mov
and
decb
loop
inc
adc
xchg
stos
push
incb
jne
popf
jle
jne
imul
fisubrl
cmp
dec
adc
js
cmp
andnps
xchg
mov
jno
adc
xchg
mov
cmp
pop
mov
push
jle
scas
int3
mov
or
xchg
jb
xor
jne
dec
push
pop
aad
xor
mov
mov
lock
outsl
xchg
dec
out
adc
push
fidivrl
jno
outsb
nop
popa
fcomps
jg
stc
outsb
cmp
mov
mov
inc
xor
shl
insl
pop
xor
mov
sbb
add
rcll
in
pop
stos
mov
test
xchg
inc
imul
lea
push
dec
rclb
fldlg2
sarb
shr
mov
cmp
loopne
and
in
test
mov
je
mov
ret
insb
push
jl
ds
std
mov
test
cli
dec
jns
jne
cmp
and
xor
into
pop
stos
jg
pop
icebp
bound
insb
mov
rcrb
jbe
outsl
icebp
xor
cmpsl
pushf
sahf
cwtl
mov
lret
loopne
add
repz
mov
mov
in
mov
cs
cmp
sbb
mov
in
adc
dec
mov
js
add
adc
or
or
sbb
jp
clc
dec
push
out
xchg
fistpl
int3
in
xor
pop
pop
clc
and
sti
mov
stos
sub
imul
jle
xor
push
scas
in
sbb
push
mov
mov
mov
ljmp
stos
lods
mov
leave
and
xor
test
adc
loop
mov
xor
mov
push
or
and
lock
dec
test
xor
fmuls
jecxz
test
jp
cmpsl
and
aaa
in
adc
fstl
mov
sbb
xor
sub
push
pop
les
out
mov
js
scas
push
leave
adc
stos
cmc
sahf
cmp
adc
mov
cmp
jbe
out
loope
gs
mov
fwait
dec
jmp
pushf
repnz
mov
test
pop
jecxz
call
dec
mov
dec
movsl
push
or
ss
loop
cmp
mov
add
jge
mov
pop
retw
inc
cltd
mov
dec
dec
mov
sbb
test
mov
push
nop
mov
lds
dec
mov
dec
jbe
jns
mov
add
and
mov
and
imul
loope
pop
jns
jno
out
lds
shlb
mov
insb
xchg
fcmovu
jae
scas
jbe
push
in
js
sbb
ja
mulb
ret
jg
das
sub
je
mov
testl
push
inc
pop
mov
aas
xor
mov
xor
pushf
jbe
into
xlat
pop
addb
jae
xlat
imul
js
ja
je
or
shrl
stc
out
repnz
pop
and
mov
sbb
into
ds
push
mov
push
movsl
jecxz
jno
xlat
sahf
cmp
aam
testb
pop
sti
jae
leave
cmpsb
push
push
sub
pop
push
sub
xor
or
fnsave
aam
ret
insl
xor
pop
jns
insb
cmp
sub
and
jbe
inc
xchg
pop
or
ja
sub
cmpsl
arpl
into
repz
mov
scas
cmp
and
xchg
outsl
jp
cmp
out
clc
push
mov
mov
and
stos
sub
into
je,pn
mov
inc
lods
sub
sub
daa
inc
call
outsb
add
xor
hlt
sbb
inc
in
popf
sbb
xor
sub
sbb
stos
pop
add
outsb
inc
lds
test
jmp
mov
pop
cld
mov
cld
xor
popf
mov
pop
aas
jnp
adc
mov
out
inc
sti
gs
loop
aam
xor
and
sub
xchg
push
push
or
aas
outsb
pop
pop
push
nop
dec
mov
gs
gs
jb
mov
out
rcl
add
ficoms
in
cwtl
out
mov
cmc
xchg
lcall
rclb
movsl
dec
push
insl
popa
scas
dec
sbb
inc
and
jmp
pop
mov
in
cld
aas
xor
mov
cltd
push
push
lahf
pop
fisubrs
fdivrl
or
push
lock
in
inc
ljmp
mov
xchg
fdivrl
std
dec
repnz
and
or
pop
xchg
and
pop
mov
je
sbb
and
sub
ret
push
lods
rcrb
cltd
out
add
mov
movsb
int
popf
lea
inc
or
xor
pop
xchg
fstps
pop
sbb
dec
data16
out
rcll
shrb
mov
std
imul
je
pop
cmpsl
mov
popf
shll
test
jb
daa
les
ds
fsubr
scas
push
cmp
rol
in
xchg
ds
shl
jne
addr16
jns
sub
mov
cmp
jl
mov
mov
cltd
lret
jo
jns
leave
and
dec
and
je
dec
gs
cmp
hlt
fcmove
pslld
mov
adc
inc
jge
adc
test
xchg
mov
les
and
sub
hlt
lock
add
out
loope
sbb
push
test
xor
iret
add
ds
lods
xor
push
sbb
push
or
jbe
cltd
shll
mov
adc
ja
out
out
andl
cli
nopl
pop
xor
xchg
outsl
sub
aam
cmc
sahf
bound
mov
je
jae
xchg
shll
or
imul
cld
mov
or
add
sub
dec
push
imul
in
lock
jb
fst
cmp
pop
gs
dec
or
and
test
repnz
push
ss
fwait
mov
aad
iret
pop
mov
sbb
hlt
cmp
cmc
out
idivb
pop
ljmp
orl
out
stc
aaa
cmpl
mov
sub
add
cwtl
mov
rorl
add
test
shlb
mov
mov
push
jmp
aas
int3
hlt
or
testb
popa
jbe
push
adc
cwtl
into
das
lret
cs
mov
out
mov
xlat
dec
xor
dec
pop
in
jg
jmp
cmp
xchg
inc
aad
add
dec
clc
adc
cli
mov
sbb
rclb
jnp
cwtl
nop
gs
testl
mulb
dec
dec
repnz
adc
xchg
lock
imul
daa
nopl
int3
jns
cmp
push
scas
cmp
nop
cwtl
mov
pushf
push
dec
sub
je
lds
xor
fs
out
dec
xor
xor
or
push
mov
jg
rcr
and
mov
sahf
imul
shll
and
aas
lret
and
loop
inc
xchg
push
lods
rcr
in
jl
arpl
in
scas
ffree
jbe
iret
shll
aas
inc
ret
mov
xchg
bound
repnz
inc
outsb
fcomip
cld
test
int
jmp
rcrb
rcr
sar
iret
ret
out
mov
ret
lods
xchg
lahf
inc
stos
out
adc
loopne
and
cmp
icebp
cmpsl
shll
sub
inc
mov
or
fldcw
jb
xchg
sub
or
cmp
push
or
pop
dec
add
sti
push
xchg
cwtl
xchg
es
xor
andb
jno
add
sahf
mov
push
loopne
xchg
dec
add
inc
fs
and
sbb
mov
xchg
xor
mov
daa
imul
nop
adc
call
outsb
mov
sti
nop
sti
jp
sbb
outsl
ret
subb
cmp
jnp
inc
pop
mov
jl
test
aad
add
xor
or
pop
lock
adc
imul
adc
ficoms
sbb
mov
inc
fwait
ljmpw
loope
insl
mov
mov
sub
and
popf
inc
enter
pop
push
ja
imul
dec
pop
dec
pop
pop
adc
dec
add
xor
pushl
jl
push
sbb
jg
add
mov
push
jl
dec
lahf
cmp
mov
cmp
or
jns
jae
jne
inc
cmc
test
push
mov
fsubrs
aaa
aaa
fmull
jmp
ret
xchg
and
cmp
faddl
inc
push
in
loopne
xor
pop
test
ret
cmp
mov
daa
xchg
fs
sbb
scas
fwait
xor
mov
mov
movsl
in
push
xchg
jmp
jp
inc
cwtl
fisubl
jle
int3
mov
jnp
cmc
xor
xchg
repnz
xor
mov
jbe
nop/reserved
mov
lcall
cmp
orb
inc
push
xor
xlat
pop
cmc
stos
addb
cwtl
outsb
inc
push
cmp
xor
or
or
push
shlb
out
imul
jne
cmp
aam
add
jnp
aaa
fpatan
stos
add
les
cmp
mov
mov
and
push
adc
aam
cmp
push
dec
mov
stos
pop
daa
repnz
rcrb
mov
pop
xchg
test
icebp
les
cltd
adc
mov
sub
or
imul
int
cmp
cwtl
daa
push
arpl
arpl
rcr
lea
clc
subb
outsb
lahf
xchg
out
andl
adc
push
pop
or
nop
xchg
or
inc
dec
push
rcr
inc
mov
lods
jne
cmp
dec
fldt
pop
and
sub
cmpsb
lods
push
dec
xor
adc
jmp
out
push
aas
xchg
arpl
or
insb
test
ljmp
cmpsb
and
xor
pop
pop
push
data16
scas
ja
dec
jmp
insl
cltd
cmpsl
in
inc
fstps
cwtl
xchg
ja
sub
mov
pop
in
jno
add
cmp
xchg
jno
test
rorb
cld
push
hlt
aad
jnp
lahf
jg
lret
adcb
pop
push
xchg
push
or
repz
xchg
cmp
push
test
sub
sbb
xchg
shl
fbstp
cmp
adc
sub
inc
xchg
orl
xchg
xchg
mov
popf
fistpll
jge
jle
addr16
sbb
dec
insb
inc
mov
add
mov
cmp
icebp
arpl
jmp
fxch
or
mov
aam
push
inc
mov
cmp
jmp
add
push
ret
pop
add
push
jl
mov
sar
mov
push
mov
push
in
pop
mov
add
popf
adc
cmpsl
sahf
xchg
pop
fwait
xchg
into
dec
xor
cs
loope
dec
sbb
out
out
mov
adc
pop
cltd
rcrb
loop
test
sahf
mov
pushf
sub
dec
out
xor
and
adc
lahf
sub
mov
mov
addr16
aas
mov
loope
stos
js
mov
xchg
add
int3
add
jg
subl
inc
adc
jae
xor
pushf
fldt
adc
sub
int
and
and
and
repz
mov
movsl
fsubs
iret
cli
stos
dec
pop
add
fdivrs
or
pop
aaa
cmpsb
push
mov
push
cmp
adc
addr16
js
fs
fmuls
aas
mov
stos
subl
or
ds
mov
hlt
pop
mov
inc
clc
cmc
sub
jle
out
mov
vpsrlq
push
fdivl
sbb
shlb
lret
pop
mov
fcmovnb
pop
ja
arpl
mov
pop
jmp
jo
push
mov
dec
out
push
in
nop
add
adc
jo
cmpb
mov
mov
imul
jmp
mov
xchg
push
pop
mov
cmp
pop
sbb
imul
sbb
sbb
jp
dec
fwait
jne
stc
incb
jno
int
rcll
ds
fcoms
xlat
aas
push
or
fisubrs
cmpsl
daa
sarb
test
icebp
loopne
mov
push
xchg
mov
adc
and
xor
pop
jae
sbb
fsubrs
mov
mov
mov
div
test
mov
mov
push
mov
notb
test
loop
pusha
sahf
xchg
subb
jl
int3
mov
sbb
jnp
lods
xchg
fsubs
sti
jae
add
mov
push
cli
lret
stos
pop
or
sbb
int
ror
imul
subl
stos
or
mov
fbld
pop
mov
mov
pop
outsl
or
out
or
add
jae
lcall
loope,pt
xor
jmp
xor
mov
stos
cli
shl
mov
cmp
mul
xlat
ret
mov
out
outsl
mov
sbb
pop
push
shrl
enter
loop
aaa
mov
mov
leave
aaa
sub
inc
sub
adc
mov
mov
ror
inc
loop
or
test
inc
sbb
sar
pushf
jmp
aaa
aaa
std
push
cmc
aad
sbb
in
cltd
fwait
loope
outsl
rcrb
call
xchg
mov
lods
hlt
mov
push
scas
aas
xor
gs
shlb
pop
push
add
push
adc
insl
push
test
cmovo
add
int
push
pop
mov
divb
lock
out
or
ljmp
xlat
cmpsl
push
cwtl
mov
daa
push
add
adc
cltd
in
adc
mov
adc
sub
repz
xchg
fs
fidivl
loop
ret
jns
fsts
jnp
inc
data16
jb
mov
aaa
loop
pop
and
jl
inc
sarb
popl
sti
xlat
push
pop
int3
jne
cld
daa
insb
lret
xchg
mull
ret
cld
and
xlat
scas
cmp
and
scas
rcrb
aas
aaa
sti
inc
mov
push
hlt
lods
or
sbbl
mov
rorl
inc
test
jns
ss
lret
sbb
stos
movsl
dec
sti
repz
repz
inc
jnp,pn
ret
rcr
jecxz
imul
and
mov
jle
sbb
les
mov
pop
xchg
es
rcl
dec
adc
pop
incl
ljmp
push
ja
inc
mov
push
and
clc
cmp
frstor
mov
in
int
popl
xlat
outsb
xchg
xlat
movb
pop
and
movsl
adc
push
out
int
out
mov
sahf
mov
dec
mov
cmc
call
push
push
data16
ret
int
shlb
adc
push
add
loop
cwtl
roll
pop
imul
push
xor
subl
or
cld
flds
sub
repnz
cmp
inc
xor
sub
loopne
pop
jmp
fisubl
jge
ficoml
aaa
mov
iret
lods
and
pop
add
jnp
jnp
mov
test
mull
push
inc
dec
or
mov
push
iret
jl
mov
jecxz
jb
gs
and
cmpsb
xchg
inc
movsb
add
int
adc
fildl
mov
jnp
xchg
sbb
mov
jg
mov
scas
pop
sahf
push
push
push
sbb
push
or
jmp
movsb
fiaddl
ret
cmp
jb
xchg
popf
out
inc
inc
adc
adc
push
mov
adc
pop
in
imul
mov
loope
jo
mov
pop
jle
outsl
leave
int3
pushf
pop
popa
mov
sbb
insb
shl
dec
dec
cmp
mov
imul
and
add
push
cs
adc
push
aad
cmpsl
in
sub
dec
dec
aam
sbb
xor
test
aam
loop
stc
pop
jno
pop
dec
arpl
and
in
scas
ja
add
dec
fdivl
out
repnz
ljmp
cld
adc
jecxz
push
aaa
pusha
movsl
hlt
push
dec
out
mull
jne
ds
shrl
out
xor
shll
xchg
pop
jne
aam
lret
data16
cli
jle
or
cmp
mov
push
push
mov
shlb
pop
std
mov
je
ret
fsub
lea
repnz
mov
outsl
push
in
mov
adc
jns
aas
sbb
adc
sti
mov
pop
add
cli
cmpsl
jmp
xchg
inc
cmp
adc
pop
xor
xor
sbb
jbe
jle
sbb
sbb
in
daa
cld
clc
movsl
push
in
out
dec
or
dec
and
jno
arpl
nop
mov
imul
pop
mov
mov
fistl
add
in
and
or
xchg
cmpb
push
faddl
shrl
add
dec
clc
push
pop
ss
and
inc
enter
jg
cmpsb
lcall
mov
std
inc
cmp
lahf
push
mov
and
adc
std
pop
in
sarl
mov
dec
pop
xchg
jge
addb
or
loop
mov
in
imul
mov
cmpsl
pcmpeqb
xchg
imul
cltd
or
bound
sbb
pop
data16
mull
cmp
pop
inc
add
pop
sbb
dec
push
jbe
adc
into
cli
stos
fdivs
pop
push
filds
clc
sbb
push
dec
xchg
adc
mov
sbb
xchg
out
jne
push
test
sub
into
adc
lret
sub
and
cwtl
sahf
je
mov
xor
or
lcall
jp
lds
lods
call
dec
orl
xor
sahf
flds
pop
cmc
iret
adc
jle
cmp
xchg
push
std
inc
mov
js
lods
mov
inc
inc
cmp
cmp
add
xchg
loopne
addb
ds
jae
lcall
xchg
mov
push
lret
repz
dec
or
repnz
cmpsb
pop
imul
sbb
add
pop
pop
dec
ja
and
or
mov
mov
sbb
mov
sbb
fsubrl
cmp
mov
fs
mov
test
int3
sub
xor
jecxz
in
jb
inc
fstp
inc
mov
test
out
popf
adc
out
mov
adc
into
mov
in
inc
nop
out
jo
push
mov
jge
sub
bound
mov
aaa
dec
jle
mov
or
jmp
stc
jge
adc
mov
test
add
dec
add
movsb
xchg
scas
xchg
scas
jne
les
out
fistps
test
jmp
fstps
cld
jmp
cltd
jl
int3
lahf
jl
xchg
inc
pop
das
cmp
add
and
fdivrs
clc
movsb
cwtl
xchg
add
push
jmp
jmp
sub
aaa
jge
dec
test
pop
xlat
mov
push
mov
xlat
pushf
inc
jne
pop
sub
pushl
scas
push
movsl
hlt
sbb
nop
cwtl
sbb
mov
clc
add
pop
loopne
add
std
mov
and
arpl
jbe
or
pop
mov
addl
outsl
push
out
bound
ja
mov
clc
add
in
scas
inc
js
xorl
xor
insl
mov
xchg
lock
cld
inc
mov
mov
jecxz
test
cmp
xchg
rolb
xor
daa
scas
push
mov
xorb
push
fsubl
mov
inc
jb
lahf
inc
xchg
pop
and
xchg
lret
jns
push
dec
add
arpl
pop
push
stos
add
and
adc
sbb
test
cmpsb
sbb
jo
push
or
xchg
or
adc
pop
ljmp
xchg
mov
jmp
sbb
js
and
push
loopne
imul
or
fadds
cmp
mov
cmp
nop
mov
dec
js
test
mov
jae
insb
mov
mov
adc
mov
outsb
pop
push
pop
stc
out
pop
sbb
mov
pop
or
in
enter
sub
insb
int
inc
adc
cmpsl
or
daa
inc
inc
jnp
dec
shl
lock
jmp
push
lret
or
xchg
pop
lret
stos
shll
jge
cmc
movsl
push
stc
xor
lods
push
arpl
adc
or
pop
stos
sbb
gs
clc
mov
xor
jmp
sahf
adc
popa
mov
imul
fsub
sbb
sbb
ficompl
push
mov
mov
sti
dec
inc
push
outsb
aam
daa
rorb
lods
xchg
andb
stc
cmp
fs
sbb
add
dec
inc
popf
add
add
and
mov
scas
dec
repnz
aaa
sub
lods
scas
mov
sbb
pop
xor
gs
stos
push
inc
stc
sub
xchg
sub
mov
jecxz
pushf
dec
insl
stos
sbbb
pop
pop
addr16
orl
aas
adc
lea
jecxz
clc
insb
or
das
loope
jno
jae
lahf
mov
fmull
cmpsb
xor
sbb
mov
cld
mov
out
mov
aad
cmpb
ja
loopne
mov
out
add
sub
and
mov
xchg
sbb
loope
mov
int
mulb
fs
adc
out
adc
insl
sub
pop
mov
call
or
scas
push
jnp
stos
stc
mov
and
cwtl
mov
pop
test
outsl
es
jp
and
fistpll
cmp
xlat
push
dec
fbld
jmp
in
fldt
jg
or
sub
cmpsl
sarl
cmpsl
scas
jnp
xor
sbbl
mov
push
adc
test
test
mov
xchg
jae
sbb
add
je
mov
inc
add
hlt
jo
pusha
sub
aam
mov
mov
or
jbe
jle
filds
sub
imul
and
out
out
mov
aas
xlat
jmp
and
test
fs
clc
cli
and
or
and
sub
out
hlt
leave
cwtl
movsb
pusha
rorl
push
imul
or
cmp
fsts
stos
jae
xor
push
jo
mov
call
sbb
das
loopne
inc
xchg
loop
pop
fcomps
stc
stos
xchg
push
jl
sar
add
cmp
push
pop
xor
nop
xchg
iret
add
fwait
mov
push
and
cs
push
mov
addr16
pusha
fisttpll
fwait
jecxz
fisttps
mov
or
ljmp
jmp
lods
or
in
adc
mov
xchg
inc
or
add
repz
test
mov
dec
push
mov
aam
sub
and
mov
xor
push
stos
add
ljmp
call
lcall
jbe
mov
sub
sbb
mov
scas
push
gs
add
out
cmp
lret
leave
idivl
pop
ja
xchg
add
inc
mov
push
testl
or
fildl
jbe
pop
filds
dec
mov
cmp
sbb
xchg
pop
cwtl
shlb
inc
loope
jno
in
scas
clc
pusha
mov
push
jmp
jmp
inc
cmpsb
test
adc
jb
inc
dec
push
sub
ljmp
and
andl
lods
push
push
sbb
and
ja
pop
nop
mov
daa
jno
add
mov
fsubp
inc
rolb
adc
aas
mov
jb
ret
xchg
fldt
cltd
int
pop
sub
mov
mov
mov
push
lea
inc
cltd
xchg
jns
pop
sub
das
loop
pop
outsb
pop
out
lahf
lret
inc
enter
incl
out
or
incb
int
bound
mov
data16
mov
inc
stos
insl
icebp
jge
cld
sahf
jg
and
cmpb
or
mov
pushf
cmpsb
outsb
push
hlt
jb
inc
add
lods
mov
jo
sub
test
add
fnstcw
in
repnz
aaa
gs
daa
std
testl
xchg
sub
xchg
dec
inc
push
dec
xor
xor
cltd
inc
jecxz
xchg
mov
mov
movsb
leave
or
cltd
ss
mov
jno
mov
pop
leave
sub
fs
xor
push
jbe
xchg
push
and
aaa
pop
shlb
cmp
and
mov
scas
mov
mov
dec
dec
adc
pop
pop
xor
imul
push
cmpsl
aaa
aam
xor
inc
pushf
and
call
push
pusha
pushf
pop
pop
add
jno
daa
outsl
and
or
jl
jne
data16
jl
mov
add
testb
psubb
sti
inc
sbb
into
ret
sarb
enter
cmp
pop
rcll
add
jle
jae
out
icebp
fwait
shl
std
jge
scas
push
cmp
cmp
sub
jo
lahf
sbb
lahf
outsl
jl
cmp
and
insl
addb
frstor
cltd
mov
stos
jg
add
dec
movsl
sub
xor
or
aas
mov
movsb
or
ss
enter
pop
shrl
icebp
fnstenv
mov
mov
fstl
xchg
les
fucomip
sub
pop
les
addl
test
cmp
inc
pop
mov
dec
aaa
dec
adc
push
push
mov
pop
scas
add
stos
xchg
ja
mov
mov
push
loop
insl
fidivl
fwait
pop
rorl
fbld
sub
lods
dec
pop
call
mov
lret
lret
add
xor
sbb
pop
dec
mov
or
jbe
sub
dec
lret
mov
sarb
cmp
in
stc
std
xchg
push
test
or
iret
pmaxsw
neg
mov
ret
nop
leave
push
lret
ljmp
push
mov
fdivl
loopne
sub
scas
cld
popa
jno
daa
sbb
add
jmp
int
fs
test
ds
sub
imul
int3
sub
cld
sub
addr16
je
subl
jg
das
jne
inc
fimuls
mull
xor
xor
inc
mov
loop
ds
xchg
in
in
lcall
ror
jbe
inc
lods
mov
pop
mov
inc
cmp
out
mov
xor
jae
aam
shlb
aas
test
mov
mov
mov
and
jnp
loopne
outsb
mov
shll
add
lcall
les
mov
xchg
adc
stos
cs
mov
sbb
pop
aad
out
dec
xchg
mov
imul
xchg
or
push
xor
mov
nop
push
bound
cmpl
mov
push
iret
repnz
jno
dec
into
mov
inc
movsl
test
sbb
into
mov
jbe,pt
repnz
push
insl
pop
inc
mov
cwtl
out
sbb
ljmp
inc
push
jb
stc
imul
int3
aas
call
in
ljmp
scas
inc
or
inc
neg
outsl
sub
mov
push
in
sbb
and
mov
xchg
hlt
cmpsl
cld
out
lret
push
lds
pop
push
out
or
mov
lds
xchg
jecxz
in
out
mov
push
xchg
int3
dec
lods
iret
or
loop
mov
mov
les
dec
xlat
shl
mov
jecxz
jg
pop
aas
int3
shll
sbb
xchg
je
je
mov
sbb
pop
xor
xor
aaa
cwtl
push
mov
cs
mov
lahf
test
mov
in
fidivrs
push
jl
push
jb
imulb
jne
loopne
fcmovnbe
push
test
and
and
mov
jge
jge
pop
pop
sbb
pop
sub
push
inc
faddl
adc
push
jns
and
push
mov
xchg
pop
mov
aam
repnz
or
daa
adc
add
out
lods
iret
fidivl
mov
inc
sbb
xlat
sbb
std
add
pop
stc
jle
fisubrs
adc
loop
inc
sbb
in
and
jno
decb
imulb
pop
nop
fcomps
dec
insb
sub
adc
ss
jg
and
xchg
ds
sar
sti
pop
push
pop
outsl
in
mov
test
lret
xor
imul
and
xchg
adc
into
pop
push
test
loop
into
xor
or
ret
or
xor
pop
and
orl
js
scas
mov
mov
push
add
addl
stos
lea
fldenv
pop
mov
andl
push
subb
mov
mov
xchg
jecxz
push
mov
insb
rcrb
cmc
mov
mov
daa
in
pcmpgtb
mov
scas
xor
jp
mov
or
and
lahf
ret
cltd
jge
add
add
sahf
mov
and
cmpsb
xor
mov
stos
push
ret
jmp
insl
scas
mov
enter
sbb
jmp
push
imul
cmp
cmpsl
lds
xor
pop
mov
loopne
mov
xchg
jecxz
stc
sbb
arpl
cmp
pop
pop
filds
imull
mul
out
hlt
mov
out
xor
imul
ja
into
sbb
dec
and
or
xor
cmpsb
sarl
call
inc
add
push
test
in
xchg
es
dec
in
xlat
ficoml
mov
int
fsubp
jno
mov
xchg
outsb
das
stos
mov
inc
or
cmp
sub
mov
loop
dec
outsb
mov
cld
imull
inc
dec
movsl
mov
xchg
xchg
cmp
fdivrl
mov
lea
shlb
lock
arpl
out
lods
dec
dec
cmpsb
xchg
adc
mov
push
xchg
out
inc
add
insl
loope
lahf
inc
rcl
xor
mov
fistpl
xchg
fstpt
xor
fcoms
pop
fstp
and
insl
and
add
enter
cltd
fcoms
and
sbb
mov
in
pop
ficomps
lea
cmp
mov
cmp
sub
ss
imul
cmp
sbb
mov
enter
in
and
or
jg
out
dec
js
mov
or
daa
pusha
push
dec
xchg
add
and
fildll
dec
enter
xlat
in
and
cmpsl
dec
fnstsw
mov
ret
cwtl
ss
out
or
testb
arpl
stc
mov
push
popf
out
popf
sti
ret
jp
jnp
cmc
fucomp
xchg
and
xchg
mov
sub
dec
jnp
push
loopne
xchg
andb
add
lds
adc
xor
adc
dec
xchg
es
repnz
or
aam
clc
lcall
xchg
lods
mov
xchg
jo
iret
and
lret
sub
lcall
jle
push
push
dec
sub
dec
xor
cli
jge
fs
loop
rcll
cmp
cmp
imul
jge
std
add
roll
adc
push
test
lret
cs
xchg
mov
and
movsb
nop
roll
jns
es
push
std
dec
scas
and
adc
mov
mov
jge
les
out
fadds
iret
nop
shl
call
aam
cli
aad
data16
sahf
test
icebp
fbld
mov
and
clc
aad
and
ret
sub
sbb
test
inc
push
sbb
push
shrl
imul
bound
nop
mov
or
lds
mov
cld
sbb
pop
sub
sti
repnz
cwtl
cmp
sbb
pop
movaps
mov
sub
jl
out
rcll
inc
mov
scas
adc
sbb
and
in
mov
clc
shlb
mov
scas
loope
lret
cmp
cmp
mov
jecxz
inc
test
xor
cmpsl
fcoml
std
cltd
imul
sbb
inc
sub
mov
xchg
mul
imul
sub
insl
popa
inc
in
pop
cmp
mov
cld
sub
negb
push
js
jg
or
roll
adc
enter
pop
scas
jae
sahf
mov
add
sub
into
lcall
ret
and
push
dec
jno
mov
in
add
or
mov
mov
iret
out
jae
arpl
imul
pop
or
mov
mov
sbb
ret
sub
xor
cwtl
cltd
jmp
push
cs
leave
in
outsb
int3
xchg
cmp
mov
dec
mov
ficompl
inc
xor
mov
and
ret
mov
bound
in
xchg
repnz
js
xor
push
std
or
pop
sub
outsl
je
std
imul
scas
adc
jo
js
gs
mull
fisubrs
shr
mov
test
push
pop
test
int3
or
xor
jnp
pop
push
popf
popa
incl
cmp
aam
jecxz
cmp
xlat
je
jecxz
sbb
mov
in
mov
fisubrl
mov
fs
mov
cmp
pop
ds
sbb
movsl
sub
mov
clc
pop
jmp
xchg
imul
fcmovb
loop
es
call
mov
jo
sub
dec
add
inc
dec
fcmovu
enter
test
push
clc
cwtl
test
jne
sub
mov
pop
mov
push
adc
sbb
ljmp
pop
adc
lods
or
xorl
jbe
jmp
sbb
pop
ds
fucom
aas
mov
pop
insl
jg
add
and
jle
inc
inc
insb
jns
imul
sahf
gs
mov
es
movsl
xchg
std
jmp
push
jge
xor
ja
out
adc
mov
dec
sarb
fwait
inc
add
pop
mov
push
cld
scas
lds
adc
cmpsl
les
fisttpl
add
scas
sahf
pop
movsl
cmp
push
add
lahf
xchg
clc
and
ffree
dec
mov
xor
pop
fcmovbe
pop
mull
add
scas
pop
rcll
lock
and
mov
add
stos
cmp
sbb
cld
xchg
ss
pop
hlt
hlt
jp
mov
testl
cmp
xchg
aad
add
inc
shrb
dec
jne
movsl
sbb
jnp
ret
popa
dec
cmp
or
mov
cmpsl
mov
mulb
mov
enter
in
cmc
icebp
pop
decb
fistpll
inc
mov
xchg
in
and
daa
mov
jo
movsl
mov
mov
push
mov
mov
std
dec
mov
push
lret
sub
adc
adc
pop
push
adc
out
or
push
shl
xchg
jb
shlb
adc
ljmp
sub
sub
fadds
and
push
iret
xor
mov
mov
or
mov
sub
out
or
inc
jb
cmp
mov
jmp
push
cmpsb
xor
adc
mov
cmp
stos
push
push
jo
in
lret
mov
cmp
xor
sti
xor
add
jge
sub
insb
pop
pop
adc
cmp
pop
mov
xchg
jbe
cmp
clc
sbb
cmp
in
ljmp
jecxz
rcrl
leave
cli
pop
pop
pop
lods
int3
mov
test
cmp
in
push
ljmp
stos
or
pop
and
or
cmpsl
aam
movsl
and
in
add
loope
or
xchg
xchg
rol
pusha
in
mov
mov
int3
dec
cwtl
lods
mov
rorl
mov
push
cmp
mov
push
mov
or
push
mov
jo
mov
pushf
mov
jns
dec
cltd
or
or
inc
pop
cmpsl
lods
mov
push
xor
dec
dec
xchg
inc
and
scas
dec
sbb
jg
dec
inc
leave
jnp
mov
popf
sub
sub
in
jp
or
pop
xchg
push
push
jno
sbb
pop
insl
cs
lret
pop
jl
movb
in
enter
xchg
shrl
or
dec
cmp
and
and
jle
addr16
lds
pop
orb
xor
divb
stc
push
or
rcl
imul
inc
cmpsb
cwtl
mov
inc
movsl
iret
xor
ret
xchg
dec
pop
fnstsw
dec
lret
cmp
clc
push
jge
dec
mov
lds
sub
inc
mov
repnz
xchg
std
es
jbe
int
dec
mov
inc
inc
mov
push
loop
xor
pop
add
cmp
ret
cli
jns
lret
jmp
loopne
xor
jle
mov
call
movsl
xlat
iret
xchg
scas
hlt
mov
outsl
xor
cmp
xchg
adc
or
xor
cmp
cs
adc
ret
ret
addb
inc
in
test
or
xor
int3
push
popa
cmpb
pop
push
fcmovnu
movsb
ja
pushf
xchg
repnz
stc
cld
sbbb
mov
int
loopne
cmp
aam
iret
sub
fstps
lcall
mov
jge
lds
push
ja
popa
push
sti
sub
cwtl
loopne
pop
int
subl
push
sbb
sub
int3
imul
ja
fmuls
ret
adc
sbb
cmpsb
or
inc
loope
mov
dec
fstl
push
rolb
imul
loope
stos
add
cwtl
inc
jle
mov
push
jne
test
cli
pop
jno
jle
push
in
cmpl
push
test
xchg
push
ror
xor
sub
sub
out
stos
repnz
inc
jo
lock
test
sarl
sbb
gs
sahf
test
cmp
fstpl
xor
ret
loope
inc
mov
mov
cmpsb
mov
daa
xlat
in
add
into
arpl
cmp
test
pop
mov
xchg
jecxz
push
lret
test
xor
lahf
pop
mov
cld
pop
loope
dec
dec
jne
xchg
punpckldq
scas
fdivp
fwait
add
jo
lods
xchg
sub
rcr
mov
and
enter
xchg
cmp
jne
hlt
sub
loop
xchg
fisttpl
pop
fisubrl
sarb
dec
add
cmpxchg
ret
pop
testl
js
fsts
das
clc
mov
outsb
movlps
fdivs
and
into
push
js
leave
cmp
fdiv
sub
push
adc
push
enter
cmp
ja
pop
adc
dec
mov
dec
pop
pop
jg
dec
adc
les
xorb
icebp
push
dec
add
cli
mov
call
mov
int3
enter
out
jge
fidivs
repz
inc
lret
or
cmp
sti
push
sahf
aam
add
js
popa
pop
sub
and
push
mov
insb
jnp
ljmp
jnp
scas
aaa
data16
insl
daa
inc
and
fimuls
pop
add
cmp
scas
xchg
pop
adc
jne
ds
out
adc
filds
or
aaa
sbb
cmpsl
scas
xchg
aaa
in
xor
pop
jle
pop
jle
xor
testl
jl
fisubs
mov
lahf
jne
push
es
aad
sub
sub
jnp
jns
xchg
pop
and
mov
or
mov
xor
ja
mov
outsb
jne
shlb
in
dec
jo
aam
incl
test
jge
pop
dec
dec
insb
push
iret
jae
movsl
jmp
lahf
in
and
out
sub
insb
mov
dec
fwait
sbb
push
les
outsb
jecxz
cld
lret
mov
fs
add
clc
decl
or
hlt
xchg
mov
cld
pop
push
xchg
sahf
daa
idivl
sub
in
fildl
popl
inc
call
cmp
push
pop
lock
pop
jmp
xchg
mov
addr16
int3
xchg
lcall
add
test
inc
in
rorb
jae
mov
enter
mov
test
iret
les
call
pop
mov
xchg
dec
ss
or
fstpt
inc
push
lcall
push
jns
mov
cltd
mov
and
bound
xchg
xchg
repz
hlt
dec
and
repnz
xlat
xchg
pushf
mov
mov
and
cmpsb
mov
adc
aas
cs
in
es
adc
out
les
les
enter
enter
xor
ljmp
jg
inc
push
mov
faddl
fbld
std
mov
xlat
push
inc
add
imul
mov
push
gs
lods
stos
test
adc
gs
out
mov
rolb
mov
and
sub
out
mov
cmp
dec
jmp
jmp
insb
jb
loope
andl
adc
lret
lret
rcl
pop
inc
jns,pt
mov
fnstcw
repz
insl
and
mov
or
mov
ret
sbb
jnp
inc
pushf
pop
xchg
pop
aas
push
aaa
imul
rcrl
push
mov
into
push
pop
add
pop
cmp
cs
mov
dec
jmp
out
out
call
hlt
push
add
out
cltd
add
aam
push
sbb
jne
test
xor
add
mov
je
jbe
and
movsb
mov
push
dec
jno
jecxz
mov
loopne
pop
enter
fwait
xchg
pusha
mov
mov
push
add
lock
addr16
inc
hlt
repz
mov
popa
xchg
loope
xor
push
mov
bound
mov
scas
adc
stos
mov
mov
xor
xchg
and
shrl
stos
mov
out
xor
mov
pop
pop
clc
orb
pop
pop
daa
mov
loop
cmp
aam
sub
sub
stos
sub
outsb
and
fbld
out
sbb
scas
sahf
lcall
push
push
loope
mov
mov
lea
hlt
mov
mov
fldcw
mov
sbb
or
dec
outsl
pushf
sub
and
leave
popf
xchg
mov
jl,pt
and
dec
add
push
cmp
in
clc
sub
push
cmpl
fs
push
xor
ja
push
xlat
or
and
jne
in
enter
fstps
xlat
divl
pop
xchg
cwtl
mov
xchg
cwtl
fists
mull
or
inc
add
aas
cli
xchg
sub
test
xor
fdivrp
sub
adc
arpl
mov
mov
push
fidivrs
aad
cmpsl
xor
push
jge
ja
push
jns
inc
inc
jae
ret
pop
lock
push
dec
loopne
in
pusha
je
into
test
lea
addb
adc
es
cmp
scas
fs
out
popa
lret
push
icebp
add
push
inc
pop
mov
stos
andb
lods
sahf
cmpsb
pop
inc
aaa
mov
bnd
jp
push
scas
bound
call
or
push
push
cwtl
rcrb
cmp
nop
add
cltd
aaa
fwait
cwtl
or
and
pop
inc
push
cmpsl
mov
sub
cwtl
ror
dec
xorb
scas
js
je
loope
or
repz
inc
stc
inc
ljmp
sbb
inc
xorl
adc
xchg
mov
adc
out
mov
jecxz
loopne
lods
mov
push
cli
cmp
dec
sbb
pop
sti
pop
stc
push
outsb
out
int3
test
in
inc
xchg
roll
push
jae
loope
push
or
call
aad
sub
jnp
dec
rolb
gs
jg
xor
xor
push
lret
sbb
gs
ja
or
xor
pop
mov
sti
out
shll
mov
add
push
popa
push
or
scas
je
aas
jmp
jecxz
lea
inc
cmpsb
rol
mov
addb
pop
stos
xor
sbb
aaa
xor
fisttpll
cmpsl
vpshab
cmp
jnp
cmp
lahf
mov
fld
xor
je
fistps
mov
gs
adc
sbb
cmpl
pop
jmp
aam
ret
and
mov
iret
enter
sub
sahf
rcl
cld
aam
sub
jmp
loope
fbstp
pop
jo
cmp
add
inc
test
jmp
shrb
js
adc
and
pop
sbb
jne
push
mov
inc
arpl
test
push
jae
cltd
iret
cltd
bound
mov
ficoml
pop
mov
sub
push
xchg
and
sbb
fdiv
shll
mov
xchg
or
lahf
inc
fistpll
xchg
add
repz
ss
dec
shrl
xor
in
test
jns
sbb
sbb
incl
fisttps
repz
aaa
iret
jmp
les
iret
ss
dec
hlt
inc
mov
xchg
mov
or
outsb
and
dec
jmp
push
xchg
pop
mov
cmpsl
inc
int3
movsb
sbb
bound
sarl
and
cld
sub
aas
pusha
push
cmp
push
add
jo
ja
mov
add
pop
lret
push
mov
jae
jnp
xchg
push
rcll
popf
cmpsb
icebp
imul
jecxz
inc
test
mov
lea
push
jle
push
push
in
sbb
pop
cwtl
mov
sub
mov
mov
ja
loop
subl
scas
ljmp
pop
loop
test
in
sbb
fistpl
or
or
test
test
fs
fists
xchg
lds
cmp
icebp
int
push
repz
shlb
xor
xor
xchg
sahf
add
xor
in
push
ret
push
ljmp
or
add
xchg
fstpt
lret
add
in
or
mov
xor
add
call
test
mov
adc
jp
mov
mov
insb
push
cmp
dec
imul
add
sub
loope
and
sbbl
imul
inc
add
iret
mov
addr16
adc
cmc
fs
cmpsl
mov
repz
push
jmp
mov
push
out
or
aad
call
mov
icebp
xor
pop
adc
ret
push
dec
ss
mov
pop
repnz
push
testl
inc
test
gs
sbb
aad
cwtl
pop
push
jb
lahf
scas
sub
dec
or
mov
addr16
pop
lcall
jp
or
imul
lcall
inc
cmp
shlb
outsb
std
out
mov
jl
inc
in
xor
fcompl
aam
inc
fs
sub
mov
outsl
aam
push
negb
or
aas
test
push
or
sbb
lret
or
inc
inc
and
stos
pop
fs
or
test
add
js
cs
aam
dec
movsb
arpl
adc
xchg
es
rorb
xchg
xor
jb
or
pop
scas
call
negb
out
imulb
push
outsb
sahf
loop
inc
push
mov
or
pop
movsl
pop
mov
lods
push
mov
jmp
stc
xchg
fiaddl
bound
add
mov
or
sbb
push
sub
outsl
or
cld
jle
pop
fsub
notb
mov
and
fstpt
loopne
loop
mov
insb
call
es
decb
sub
mov
jnp
xor
jno
and
mov
cmpl
test
fstl
clc
daa
sti
mov
mov
flds
mov
xchg
sahf
arpl
inc
jle
subb
mov
jo
dec
inc
add
jge
jne
fisubrs
mov
nop
into
leave
fwait
mov
jb
pop
lret
mov
push
lahf
lock
lods
inc
xchg
xlat
andb
ds
nop
mov
nop
pop
lret
jecxz
popf
sbb
push
cmp
cmpsl
jno
aas
les
pushf
stos
mov
aad
jns
inc
lods
nop
push
mov
mov
call
dec
mov
adc
shlb
pop
int
loop
pop
ljmp
jmp
xchg
popw
js
nop
les
fimuls
sub
jns
outsb
sbb
push
into
mov
mov
pusha
jmp
pop
push
jnp
xchg
pop
push
xor
adc
jne
adc
in
insl
test
add
or
scas
outsl
pop
pop
imulb
jp
lahf
jbe
mov
xchg
data16
push
and
mov
sbb
cwtl
xor
xor
fdivs
push
dec
addb
stos
mov
fcmovnbe
bswap
mov
shll
dec
adc
add
jne
push
test
xor
sub
and
inc
enter
xchg
insl
jl
mov
out
xor
in
maskmovq
divl
cmp
xor
btc
rcll
dec
sub
int
mov
fnstenv
rcll
pop
xchg
imul
sbb
daa
das
add
cld
sbb
pop
sbb
xor
or
ss
sbb
fidivs
repz
or
add
and
nop
repnz
dec
mov
or
dec
sbbb
cmp
call
pop
mov
fwait
inc
sbb
test
pop
repnz
push
out
push
movsb
in
les
mov
dec
enter
xor
inc
ss
lea
shl
cmp
gs
je
cli
xchg
sbb
mov
scas
jle
cwtl
lds
sbb
jo
icebp
mov
pop
incb
stc
sbb
pushf
fs
imul
or
fisubrl
lcall
xor
addl
call
cwtl
jle
in
inc
lea
repz
inc
xor
cmpsl
out
imul
pop
arpl
ja
iret
dec
cltd
inc
mov
dec
out
sbbb
negb
inc
sub
daa
cmp
pop
fwait
push
lahf
mov
dec
das
pushl
jg
pushw
in
adc
mov
fs
jbe
mov
jb
pop
xor
popf
sbb
sub
test
pop
cmp
jo
iret
jb
adc
stos
and
insl
pop
adc
movsb
into
jle
leave
enter
cmp
enter
sbb
pop
sbb
cmp
xchg
pusha
lea
scas
adc
sbb
mov
mov
ret
mov
lret
sbb
xchg
sbb
pavgb
aas
mov
dec
divb
dec
rcrb
or
insb
lea
dec
push
loopne
mov
in
cs
insb
xlat
in
ds
push
push
insl
fcoms
fmuls
add
push
jns
ds
outsl
xchg
loope
pop
add
inc
int
and
addr16
cwtl
jmp
rcrb
push
mov
cmp
push
enter
dec
cld
addr16
xchg
sub
add
in
and
xchg
insb
sbb
push
sub
shrl
sub
sub
jp
leave
jge
out
loop
pop
push
push
jae
sbb
popa
rorb
subb
and
or
inc
push
xrstors
jo
push
int
popa
bound
mov
xor
sbb
int
lds
sbb
push
mov
addr16
or
cwtl
push
outsl
push
mov
xor
mov
fwait
sbb
out
adc
gs
mov
and
loopne
mov
mov
push
fists
adc
pop
test
int
sti
bound
aam
xor
mov
dec
lea
ja
inc
lcall
dec
or
repnz
mov
mov
out
notl
push
cmp
push
pop
mov
popa
dec
xchg
fdivr
cmpsl
rcll
cmpsl
jg
and
into
xor
xchg
cld
fnsave
adc
std
ret
fisttpl
bound
adc
push
pop
imul
push
mov
sub
sbb
adc
mov
test
fwait
mov
add
inc
lahf
sbb
mov
and
pop
jp
xchg
xchg
stc
imul
pop
clc
stc
insl
xlat
push
inc
lcall
decb
push
push
mov
fmull
std
sub
das
adc
sbb
lock
popf
pop
jle
adc
fisubl
call
enter
lret
stos
xchg
ret
mov
mov
scas
jle
dec
mov
adc
add
imul
push
cmpsl
or
sbb
mov
bound
insl
push
jne
loopne
and
movsb
out
loope
in
xchg
lcall
test
dec
stc
shl
cmp
mov
mov
and
leave
je
imul
cs
pop
shlb
andl
mov
mov
cmp
or
pop
mov
bound
add
shrb
mov
cmp
inc
inc
jle
arpl
testl
lock
inc
cltd
dec
xchg
xor
xchg
daa
inc
rolb
pop
xlat
inc
sub
loop
sbb
dec
sbbl
int
mov
leave
mov
pop
add
sub
loop
pop
push
push
mov
xchg
iret
jecxz
ficompl
mov
xor
bsf
jb
or
mov
popl
frstor
mov
sub
incl
mov
cmp
jl
shr
and
mov
pop
inc
ljmp
popf
out
sbb
add
add
sub
add
lret
add
xor
es
or
rcrl
push
in
out
xchg
sbb
dec
ds
clc
or
inc
cmp
jae
cmp
dec
mov
or
sub
testl
daa
and
insb
call
xchg
push
stos
popa
fwait
loop
xor
sub
mov
and
filds
cld
fsubs
lret
gs
imul
movsl
xor
dec
sar
nop
out
jp
inc
dec
add
or
js
xchg
and
mov
test
mov
bnd
vcvtps2dq
shl
push
cmp
lock
out
lods
sbb
mov
mov
stos
nop
dec
or
mov
xor
xor
add
loope
scas
lods
mov
bound
pushf
ret
aaa
pop
stc
sbb
push
das
jmp
mov
xor
xor
outsl
or
cmpb
clc
pop
xchg
mov
jl
add
frstor
fwait
and
gs
lret
out
mov
push
cltd
push
loope
jbe
repz
mov
pop
fs
jg
and
jge
push
pop
leave
sbb
push
inc
lahf
mov
or
pop
scas
mov
out
daa
insb
sub
dec
cmp
pop
add
out
jae
cmp
daa
inc
pop
sbb
fs
je
mov
jle
pop
sbb
mov
jg
aam
fcmovnu
pushf
mov
jns
cmp
nop
push
pop
sub
lea
inc
sub
mov
dec
and
ss
xor
mov
test
pop
jg
mov
add
jno
faddl
jle
lea
jo
icebp
pop
dec
or
in
filds
mov
jnp
adc
lock
sub
lret
ret
and
push
xor
idivb
cs
rcll
xchg
cs
sbb
and
ja
sbb
fsubs
mov
pop
xor
insl
loop
popa
arpl
bound
push
int3
cmp
out
or
scas
jne
xlat
fsub
pop
stos
pop
xor
pop
pop
call
lods
xor
cmp
add
and
scas
pop
stos
cmpsl
hlt
movsb
jnp
lods
popa
sbb
mov
out
xchg
adc
jbe
add
les
aam
aam
xor
and
in
mov
in
mov
addr16
cltd
cmpsb
pop
push
sbb
mov
clc
stos
xor
out
jo
pop
xor
movsb
xchg
or
mov
mov
test
pusha
aam
je
push
dec
pop
pop
popf
sbb
pop
mov
mov
out
xorb
add
jp
cmp
mov
ss
jns
mov
cmp
jnp
xchg
push
xor
mov
pop
sahf
test
loop
mov
out
adc
shl
add
sub
sub
jae
popa
dec
jo
mov
push
jae
pop
outsl
fiaddl
xchg
dec
scas
push
jmp
push
mov
mov
not
mov
inc
movsb
leave
mov
je
fsubrs
adc
dec
sbb
mov
jbe
ja
sbb
inc
cs
rcrb
daa
pop
lods
fs
icebp
add
std
or
mov
cmp
rcr
push
add
xchg
imul
fcomps
jb
into
call
popf
test
push
in
and
aam
leave
jae
aad
cld
inc
not
rcr
test
pop
aad
testl
jecxz
aam
adc
mov
dec
xor
adc
mov
jno
aaa
pusha
cwtl
mov
dec
jmp
mov
push
shr
mov
ret
add
sbb
xorl
jp
out
push
push
lods
lods
mov
adc
sbb
sub
mov
dec
pop
sahf
inc
and
ss
in
adc
cmp
jp
ss
push
stos
out
adc
test
xchg
enter
out
sbb
test
fadds
cs
pop
jbe
in
add
jg
loop
pop
add
nop
inc
jnp
cmp
rorb
lret
mov
jp
and
repz
es
in
inc
test
shlb
fcmovbe
and
imull
andl
jl
scas
out
or
mov
pop
insb
fmuls
pop
add
pop
rol
jl
fs
loope
shrl
cld
mov
and
xor
inc
add
jle
xor
movsb
adc
mov
iret
int
mov
xor
andl
stos
frstor
cmp
dec
daa
push
jg
mov
cmp
or
pop
scas
xor
movsb
scas
cmp
add
lret
xchg
hlt
hlt
mov
movsl
fwait
cli
int3
roll
insl
fwait
xchg
adc
les
xor
push
xchg
leave
insl
lea
aam
fcomp
arpl
in
testl
sti
arpl
out
stos
movsl
mov
and
mov
lea
or
aas
cwtl
icebp
or
rcr
xchg
cmp
in
mov
loope
lret
dec
ja
mov
xor
into
and
mov
leave
and
xchg
rcl
scas
lods
push
xchg
lret
mov
add
push
loopne
cmpsb
xchg
jmp
xlat
xorl
dec
xchg
rorl
jp
or
loopne
xor
ljmp
pop
jge
push
loop
out
mov
add
push
inc
mov
aaa
repnz
xor
lcall
scas
push
in
pop
out
std
fistl
mov
push
btr
mov
in
mov
and
dec
push
divb
jno
push
cmc
das
cli
adc
nop
jns
inc
out
imul
xlat
mov
mov
push
or
test
push
mov
clc
in
jbe
xor
ret
aas
enter
popf
fcmovb
inc
mov
sub
xor
xchg
mov
ljmp
outsl
jo
add
mov
xchg
pop
cmp
dec
imul
mov
push
sbb
sub
mov
xchg
test
mov
pop
es
int
and
pop
or
jle
pop
movsl
push
stos
xlat
inc
frstors
mov
jnp
fisubl
out
lahf
sbb
xor
mov
nop
and
leave
jo
lahf
aaa
or
mov
test
imul
adc
and
mov
jp
je
pop
mov
push
mov
cmp
inc
or
add
pop
pop
inc
lret
xor
aaa
in
mov
int3
add
mov
push
or
mov
loop
pop
je
aas
inc
mul
cwtl
notl
pop
xor
mov
ret
aad
adc
push
mov
dec
pop
enter
loopne
sbb
push
mov
mov
or
or
and
dec
pop
sbb
push
bnd
fwait
jb
cli
enter
jno
push
push
sub
push
in
ja
test
push
rclb
sub
scas
cld
xchg
and
je
cmc
adc
sub
cmpsl
mov
and
arpl
sub
aaa
push
pop
xor
hlt
stos
xor
out
mov
pop
mov
pop
pop
fwait
mov
xor
in
mov
insb
jle
jg
push
nop
int
mov
add
mov
mov
inc
inc
dec
cmc
jbe
pushf
leave
mov
rorl
call
scas
mov
mov
push
push
xchg
pushf
push
jmp
cmpsb
mov
and
mov
and
or
add
int3
js
push
pop
shl
push
dec
out
mov
push
test
icebp
adc
rol
and
pop
in
pop
ret
les
push
and
and
test
mov
ljmp
popa
jecxz
cmpsl
mov
pop
jnp
dec
popa
add
and
sbbb
outsl
scas
add
imul
push
movsb
call
rcll
into
cld
shlb
sbb
push
stc
xchg
cmp
xor
xor
ja
pushf
cmp
jl
mov
movb
or
dec
mov
orl
fcompl
sub
mov
pusha
rcrb
push
das
out
stc
sub
push
dec
stc
pop
fwait
addr16
add
repz
popa
fs
cmp
jne
das
test
add
and
mov
insl
clc
cmpsl
test
in
xchg
sub
push
mov
xor
shrb
sbb
mov
dec
fmuls
les
fsubrs
dec
pop
mov
fwait
push
and
dec
pop
mov
push
subl
mov
dec
sub
push
out
leave
jle
sahf
fcmovu
mov
mov
jl
mov
mov
cltd
add
push
repnz
cwtl
cwtl
add
sub
cmp
mov
jno
and
inc
in
pop
addb
ret
insl
scas
push
test
subb
aaa
inc
int3
add
js
cmp
mov
fidivrs
int
cmpsl
stos
sbb
cmp
mov
ljmp
cmpsb
orl
outsl
cmp
insl
jle
adcl
dec
ds
pushf
xchg
mov
jmp
pop
test
lret
jmp
pop
xor
mov
and
mov
xchg
mov
and
cmp
pop
lret
adc
jecxz
push
pop
out
mov
pushw
in
xchg
and
ja
sbb
test
cmp
scas
test
cmp
adc
dec
or
jg
adc
jae
je
daa
jmp
or
push
cwtl
xor
mov
rcr
mov
arpl
imul
insb
jle
dec
cmp
ss
push
ja
jmp
inc
push
pop
mov
arpl
mov
test
jno
mov
shrl
mov
mov
push
jo
mulb
cltd
sub
daa
cmp
pop
pop
cmp
cs
ret
sub
stos
mov
lahf
repz
jecxz
movl
pushf
mov
rcrb
pop
sub
cld
adc
xchg
dec
inc
pop
and
sub
jp
mov
inc
add
mov
in
loope
fsubr
outsl
push
jns
sub
in
loopne
mulb
xor
dec
inc
rclb
lcall
movsl
gs
mov
jge
negl
xchg
aaa
mov
lock
pop
pop
xchg
xlat
mov
sbb
call
shlb
or
stos
stc
lea
data16
cmp
or
in
xchg
jge
inc
xchg
pop
xchg
ljmp
mov
adc
push
in
add
in
or
sbb
cmp
and
xchg
push
inc
or
dec
xchg
push
fmull
cwtl
int
loope
xlat
cmp
shr
dec
dec
outsl
cmpsl
stos
jl,pn
fdivrp
pop
mov
popf
mov
or
cmp
pop
loopne
push
jbe
jae
inc
dec
jmp
sub
xor
xor
adc
or
sbb
jle
outsl
push
rcrl
addl
mov
xchg
xchg
negl
mov
xchg
imul
test
cmp
jns
sbb
jo
dec
jge
dec
and
cli
lds
and
push
cmp
in
pop
jae
ja
adc
int3
aad
out
mov
push
leave
movsb
rcrb
add
es
sahf
add
jnp
mov
xor
sub
push
aad
lock
xchg
test
mov
mov
mov
inc
xorb
aad
shll
or
test
int3
inc
int3
dec
or
fidivrl
mov
inc
lcall
pop
or
pop
mov
inc
sub
dec
pop
clc
arpl
mov
out
mov
cmp
imul
leave
push
xchg
outsb
addr16
loope
inc
lock
sub
sbb
inc
das
ret
cmp
mov
clc
mov
sub
cmc
sub
xor
pop
in
addl
fisubrs
iret
aam
ds
aas
dec
or
pop
push
cmp
sbb
stos
aad
pop
iret
aad
fdivrp
push
cmp
mov
das
dec
out
fimuls
int
es
jp
repnz
pop
xor
mov
jno
xchg
loopne
nop
or
popf
jge
add
lcall
fadd
mov
xor
decl
lds
dec
daa
xchg
pop
lock
xchg
xor
aas
adc
popa
fcmovnu
icebp
jle
gs
dec
and
push
dec
dec
fidivs
jno
cmc
fistl
nop
int3
jp
fwait
arpl
fwait
leave
jnp
cli
cmc
sbb
pop
xlat
stos
lock
push
or
popa
mov
repz
js
sub
lock
mov
push
cwtl
call
jl
xchg
inc
dec
notb
lret
cmc
enter
fstps
fldt
or
insl
push
adcb
jge
xchg
leave
inc
movsl
les
cmp
lcall
mov
pop
add
lcall
pop
add
mov
adc
outsb
sti
and
fistpl
mov
popf
jecxz
adc
aas
subl
pop
lret
jne
xchg
cs
aas
pop
dec
pop
arpl
mov
push
sbb
in
push
pusha
mov
stos
mov
sbb
add
jo
mov
cmp
dec
mov
jnp
or
xchg
fstl
lock
push
dec
xor
inc
cwtl
mov
fistpl
mov
stc
add
arpl
adc
xchg
sbb
and
xor
add
or
sbb
hlt
fnstenv
stos
repnz
xchg
xor
sbb
mov
push
xchg
pop
fisubrl
lock
push
xor
mov
rcll
mov
and
iret
test
pop
cmp
jmp
push
fdivrs
imul
leave
fsubrs
arpl
push
decb
aas
fnsave
mov
sub
xchg
lods
fnsave
or
fmul
in
rorb
mov
test
int
pop
add
xchg
mov
mov
push
jb
sti
pop
jg
inc
add
loopne
sub
cmp
clc
sbb
movsb
mov
daa
jnp
and
cmp
shrb
fidivl
imulb
push
jge
or
jo
push
cs
movsb
into
es
jae
popf
mov
dec
mov
mov
mov
es
jp
ret
sub
jg
jecxz
out
push
sub
cmp
int3
ljmp
dec
std
mov
fwait
jecxz
cmpl
pop
xchg
sbb
ret
add
xor
xchg
fldt
xorl
jp
loop
aas
push
enter
pop
fwait
mov
lods
mov
sahf
or
or
stos
stos
dec
push
and
pop
lods
mov
ljmp
cmpsl
xor
ret
adc
sbb
sbb
pop
push
dec
push
fistpll
push
popf
int
cmp
cmp
push
mov
ja
xchg
dec
sahf
add
jp
cmp
push
mov
mov
lcall
cmpsb
xor
xchg
fisttps
int
pop
push
or
cmp
jle
or
mov
or
into
push
xchg
scas
mov
mov
push
aaa
scas
mov
out
dec
popa
xchg
push
xchg
shrb
adcl
daa
dec
inc
cmp
xor
pop
negl
hlt
mov
and
cli
test
push
orl
lahf
jno
cmp
call
fcomi
sub
mov
in
add
sar
xchg
movsb
ljmp
jne
jb
outsb
cmpsb
insb
cltd
mov
mov
lcall
inc
cmp
inc
std
cmp
ja
or
xor
clc
lea
jecxz
mov
mov
jp
shlb
jl
sbb
in
mov
andl
xor
movsb
jns
lock
mov
xchg
or
icebp
mov
lds
fsubrs
dec
repnz
scas
ds
das
movsl
push
add
jo
es
push
ss
mov
jns
sbb
lods
enter
cmp
movl
lcall
inc
cmp
xchg
in
jge
dec
pop
int
subb
out
cmpsl
lods
test
aas
pop
and
ds
or
movsb
pop
test
lahf
dec
xchg
int3
test
xlat
pop
popa
push
or
pop
dec
or
mov
dec
imul
pushf
addr16
add
orb
outsl
or
or
dec
lcall
aaa
xlat
outsl
mov
fwait
or
sbb
push
pop
xor
addr16
jge
xchg
roll
push
or
repnz
repz
arpl
xor
test
in
mov
inc
xchg
dec
test
lds
test
test
sbb
push
ret
idiv
cli
inc
lahf
shrb
mov
in
sbb
lods
jne
and
dec
arpl
add
aad
inc
adc
xchg
call
dec
jno
stc
mov
rclb
pop
test
mov
push
jb
out
ret
rcrl
xchg
outsl
leave
hlt
aam
int3
mul
xchg
and
inc
sbb
imul
cwtl
pop
add
repnz
in
xor
push
or
mov
mov
adc
and
jge
inc
add
lods
sbb
mov
jle
fwait
addr16
imul
cmp
out
loop
je
ret
popa
insb
imul
ret
test
and
push
push
adcb
cmp
pop
xchg
scas
int
imul
inc
rcrl
mov
sar
hlt
stos
dec
adcl
mov
xchg
aam
jecxz
shll
sbb
inc
dec
ds
push
xchg
pop
lahf
shll
mov
cmp
cmp
clc
pushf
push
pop
pop
adc
inc
incl
lret
fstpt
and
cli
insb
in
dec
sub
or
addr16
shll
cmpsl
push
stc
sbb
pop
popf
shll
out
xor
dec
jg
mov
stos
scas
stos
xchg
push
mov
pop
scas
shll
jb
or
aaa
rcll
pusha
std
pop
jge
sub
mov
mov
push
xchg
ds
inc
or
add
fisttpl
in
data16
loop
push
addr16
push
mov
inc
xchg
xlat
push
pop
popa
xor
fsubrl
or
subb
xor
cmp
pop
add
aaa
cwtl
jbe
sub
arpl
push
icebp
adc
pop
fdivr
lods
pop
outsb
pop
lods
add
push
push
jae
and
adc
js
mov
out
fildl
ffreep
sub
pop
stos
imul
mov
cmpsb
push
rorb
mov
pop
jnp
xor
fistpl
icebp
mov
mov
in
ficomps
push
roll
lods
jns
jmp
mov
and
pop
cmp
pop
push
push
das
sub
fucomip
push
push
xor
jbe
sub
daa
sub
mov
mov
into
add
or
leave
or
inc
inc
dec
push
test
pushf
das
out
das
lret
icebp
sub
jmp
out
cltd
sub
adc
enter
dec
xor
dec
push
addr16
mov
sbb
mov
add
inc
pop
jle
mov
subl
xchg
and
adc
outsb
inc
dec
out
jns
jns
fisttps
sbb
test
sub
test
idivb
dec
adc
xchg
lea
mov
and
mov
or
push
cmpl
cmpsl
aam
and
cmp
dec
fsubrl
pop
inc
push
lahf
jl
int3
outsb
adc
pop
outsl
mov
shl
push
cmc
les
fbstp
push
or
mov
outsl
repnz
adc
clc
movsl
jbe
inc
das
popa
adc
popf
mov
mov
jo
stc
dec
cmpsl
or
ja
mov
or
or
ja
ljmp
pop
jge
mov
das
xchg
xchg
aaa
sbb
push
adc
add
mov
cmp
push
sarl
movsl
or
testw
jl
imull
inc
hlt
push
and
into
fldenv
mov
cli
aam
repz
sbbl
fimull
or
lret
mov
mov
cmpsl
sub
lock
bound
jmp
imulb
mov
pop
push
xor
ss
jno
xchg
push
and
popa
pop
dec
jecxz
or
test
imul
mov
stos
pop
in
leave
jne
dec
jo
jne
filds
jp
roll
jecxz
dec
inc
jno
int3
jno
cmp
inc
addr16
xlat
fldt
cltd
daa
pop
push
dec
imul
or
cmp
ja
and
mov
aam
outsl
das
inc
pop
arpl
jle
test
mov
sub
push
push
or
nop
dec
inc
shll
aas
and
or
sti
or
push
lods
fs
repz
lcall
sub
xchg
das
mov
aad
popf
clc
ret
gs
mov
in
sub
push
out
hlt
mov
push
hlt
fildll
in
cmp
sub
test
mov
sub
inc
push
jmp
sbb
into
fwait
mov
mov
sub
nop
push
test
sbb
mov
xchg
mov
inc
movl
fistpl
daa
test
mov
xor
hlt
adc
bound
pop
loop
sarl
inc
insl
inc
ds
cmp
cmp
xlat
sbb
imul
xchg
xor
xor
xor
pop
xor
push
dec
jmp
sub
cmp
fcomps
in
pop
add
cmp
and
mov
rcrl
push
xlat
arpl
adc
aas
mov
push
fidivrl
or
nop
setne
cmp
adcl
repnz
xchg
ret
and
push
sbb
addr16
stos
adc
cld
xor
cmp
pop
mov
insb
nop
jno
and
lea
xchg
sbb
sarb
popf
cs
aas
xchg
das
in
dec
cmpl
mov
xchg
lret
lods
lea
adc
aas
addl
inc
mov
ds
movsb
mov
inc
and
inc
and
xchg
adc
out
mov
sbb
sahf
xor
imul
add
xchg
std
pop
or
fld
jnp
mov
int
xor
mov
sub
stc
or
test
sbb
jecxz
cmpsb
movsb
cwtl
push
insb
xchg
sbb
mov
push
cmpsl
cmp
xchg
call
push
dec
leave
sub
in
jg
fldl
pop
add
inc
adc
pop
ret
shrl
or
sbb
mov
stos
das
nop
mov
jecxz
arpl
subb
pushf
ror
rol
icebp
lret
aad
repnz
or
call
scas
aad
jp
push
jae
test
and
pop
lods
jae
mov
outsb
push
mov
or
push
ret
mov
xor
xlat
iret
mov
push
xchg
lods
jecxz
xor
rclb
xorl
call
mov
jg
scas
bsr
xlat
aam
pop
lea
aaa
xor
push
mov
mov
inc
fs
leave
sbb
sbb
mov
cli
mov
xchg
jns
in
loop
push
lods
test
jle
sbb
xchg
jg
mov
inc
rcll
aad
or
mov
insb
or
outsl
add
in
pop
xchg
sub
ljmp
lea
sbb
cmp
or
stos
push
imul
dec
ss
lret
movsl
bound
sbb
ljmp
xchg
or
mov
xchg
iret
add
push
jge
lahf
jmp
push
iret
xchg
shrb
fwait
xchg
rcl
push
mov
stc
sbb
jge
adc
push
dec
bound
aas
in
ss
or
add
inc
xor
or
sub
cld
arpl
mov
jne
icebp
mov
lods
adc
push
xor
sbbb
negb
popa
and
out
loope
and
int
or
scas
outsb
call
mov
test
leave
and
pop
pushf
dec
mov
cltd
sahf
mov
rcrl
rclb
lret
sub
sub
repz
into
adcl
test
sbb
mov
push
jmp
push
gs
dec
std
mov
pop
mov
mov
stc
rcll
pop
in
and
imul
xorb
mov
push
cmpsl
sti
or
sti
jmp
loopne
std
and
imul
movsb
mov
inc
bnd
mov
add
cltd
pop
aam
aad
imul
xchg
sub
shlb
pop
loopne
hlt
push
mov
in
add
mov
pop
xor
xchg
repz
mov
int
cmp
mov
stos
mov
xchg
sbb
into
xorl
addl
inc
loope
leave
push
ja
mov
jg
jp
pop
leave
jle
imul
or
add
inc
inc
lods
cmp
iret
mov
rclb
cmp
insb
jb
jecxz
scas
gs
aad
lcall
bound
jp
lcall
jo
scas
and
icebp
es
iret
mov
or
addr16
mov
clc
sbb
jnp
or
sub
std
aas
stos
inc
xor
aad
js
int3
int
dec
lea
into
push
lock
mov
jp
gs
adc
test
test
mov
xchg
adc
cli
sub
mov
jecxz
ja
mov
push
and
fs
push
mov
sub
movb
inc
mov
fdivrs
aad
jg
sub
mov
int3
xor
jae
cwtl
mov
aad
inc
lods
std
pop
movsl
add
jge
push
and
pop
inc
cs
hlt
adc
push
in
xchg
adcl
xor
insb
aam
data16
cmpsl
xchg
lahf
ja
lea
dec
xor
ffreep
mov
dec
shll
mov
popf
sbb
pop
pop
stos
xor
lcall
sbb
inc
and
push
mov
inc
mov
out
xchg
sahf
xchg
aam
cwtl
mov
ret
push
gs
cwtl
fbstp
push
xchg
xchg
sbb
popf
sbbl
fwait
sbb
pop
pop
mov
cmpsb
add
insl
xchg
xchg
xor
cmp
push
cmp
clc
fs
mov
cmc
adc
add
mov
fistpl
adc
mov
aas
push
lea
cmpsb
fdiv
xor
pop
jne
jae
daa
aam
mov
cld
or
mov
adc
nop
cmpsb
lret
dec
popf
icebp
out
add
or
sub
xor
mov
cltd
cmpsb
push
push
stc
lahf
mov
ret
out
pop
xchg
dec
push
stos
dec
mov
inc
dec
mov
fst
xor
cmpsb
inc
mov
clc
xchg
xchg
add
mov
push
fnstsw
inc
ja
xor
lods
aas
sar
pop
and
test
pop
pop
mov
daa
xor
pop
dec
insl
pop
xchg
test
mov
xchg
mov
ljmp
adcb
dec
adc
adc
adc
or
lds
or
jbe
inc
outsl
mov
mov
add
jb
stc
and
add
dec
mov
mov
repz
test
sbb
or
fiadds
enter
testl
inc
xchg
dec
push
jne
movsl
mov
and
mov
fnstcw
xor
or
lock
aad
ljmp
insl
or
ret
jle
testl
jbe
jge
popf
notb
mov
add
or
stos
fs
les
mov
ror
and
arpl
adc
jno
faddp
mov
pop
out
adc
stc
add
in
rcrl
scas
lahf
jne
imul
or
adc
jmp
sbbl
das
dec
shll
adc
jae
inc
lods
fmull
das
add
testl
add
lret
in
add
jnp
adc
fcoms
shrb
jo
int
xchg
dec
push
cmp
jo
push
hlt
ja
xchg
and
rorl
aaa
inc
cmp
dec
jae
cmc
stos
fisttpl
adc
pop
icebp
leave
ret
xorb
push
pop
movsb
and
mov
testl
cld
sub
jae
cmpsl
sub
pmulhw
nop
and
push
loop
inc
lods
adc
notb
mov
mov
ja
add
mov
test
lods
sbb
pop
mov
pop
orl
xchg
int
pop
adc
cmp
cmpsl
fwait
ret
sahf
adc
pop
cwtl
jnp
add
jnp
addr16
int3
mov
std
lds
mov
mov
insl
out
mov
mov
add
test
push
and
imul
jo
out
xor
adc
cld
cmpsl
push
fidivs
sahf
arpl
cld
loope
fcomps
dec
imul
pop
push
xchg
addr16
mov
imul
rorl
das
dec
jb
mov
xchg
sbb
push
push
jl
xchg
push
imul
pop
addr16
sbb
mov
in
outsb
sti
cmpl
ss
mov
mov
jo
mov
test
jb
iret
clc
jbe
imul
hlt
out
pop
nop
or
movsl
movsl
movsl
pop
and
dec
pop
faddl
mov
in
xor
loope
inc
push
xchg
xchg
mov
pop
outsl
or
push
into
or
ud0
and
andl
adc
xchg
ficoms
jae
test
dec
jno
xchg
jge
imul
sub
shlb
cmc
lods
or
mov
mov
pop
jno
cmp
mov
jne
sbb
mov
jb
push
aas
jmp
je
adc
nop
cmpsb
jmp
fwait
and
lahf
fldl
in
into
push
lock
add
bound
jecxz
ror
ja
sub
cmp
mov
adc
ljmp
jmp
jp
dec
dec
push
mov
shlb
jnp
xchg
into
repz
lods
pop
jno
mov
shrl
push
fldl
mov
jns
in
or
outsl
movsb
dec
pop
or
inc
or
xchg
lea
jns
icebp
popf
sub
cmc
clc
leave
fisubl
jnp
lods
filds
dec
mov
xchg
xchg
jle
in
inc
inc
cmp
aaa
mov
xchg
fiadds
sahf
sbb
sbb
jge
mov
loopne
xchg
dec
lahf
sti
dec
inc
jne
mov
adc
pop
mov
jae
fwait
add
arpl
stos
mov
mov
xchg
mov
jmp
fisttpll
mov
in
mov
cmp
mov
sbb
les
mov
pop
arpl
mov
mov
adc
and
mov
xchg
aam
js
in
movsb
sbb
xchg
dec
jb
outsb
imul
jmp
push
pop
mov
inc
inc
cmp
add
sbb
int3
stc
cmovnp
lcall
adc
stc
mov
loopne
fs
cmp
xor
xor
lret
js
xchg
test
js
jno
cmp
jecxz
shl
push
mov
sarb
negl
js
cwtl
mov
pop
mov
xchg
mov
out
dec
jecxz
xor
outsl
jg
ficoml
xchg
xchg
cmpsl
lock
fscale
out
fistpl
lcall
lret
iret
lds
sbb
ret
mov
jnp
int3
xlat
xor
jmp
cmp
push
int
inc
push
mov
lea
call
fsin
inc
adc
mov
test
ret
into
out
push
xchg
rcr
stc
or
int
test
lods
xor
push
clc
and
pop
push
dec
call
test
fdivr
cmp
out
pop
stos
mov
xchg
int3
cmp
lds
fisubs
xchg
outsl
mov
inc
pop
sub
sti
sub
popl
pop
cmpsb
add
cmp
call
divb
add
push
frstor
clc
ds
xchg
xchg
mov
xchg
push
js
stc
mov
test
rcl
pop
mov
in
xchg
push
add
clc
mov
and
mov
ja
dec
out
push
push
notb
jg
in
or
rcrb
push
or
mov
mov
xor
pop
imul
cmp
jecxz
rclb
ret
jno
mov
mov
sti
sub
inc
lret
push
jno
jp
adc
je
xor
sub
sbb
gs
xchg
or
jo
dec
not
shlb
rclb
xor
in
aad
xchg
loop
dec
push
lock
mov
push
mov
dec
out
sub
add
xorb
or
sahf
mov
pop
jbe
mov
jmp
push
loopne
int
mov
repz
cs
xlat
nop
jp
mov
pusha
jo
test
stos
or
push
das
popa
push
test
ret
nop
mov
xchg
sub
pop
or
out
mov
scas
xchg
out
inc
test
mov
pop
fdivrp
aas
add
xchg
jecxz,pt
jle
gs
add
notl
cmpb
lods
cli
sahf
fists
sub
scas
and
outsb
rorl
cmpsl
loope
inc
xor
adc
pushf
or
cmp
or
call
or
cmp
inc
inc
cltd
add
inc
mulb
push
scas
das
mov
cmp
adc
push
divl
inc
test
push
xchg
xchg
je
cmpsl
inc
mov
outsl
rcll
movsl
aaa
clc
mov
pusha
pop
xlat
xchg
jg
arpl
aaa
inc
stc
pop
dec
jge
insl
mov
jo
outsb
mov
stos
aad
adcb
jbe
xchg
add
sbb
mov
in
dec
into
mov
pop
and
loopne
repz
mov
pushf
inc
lcall
xchg
push
sbb
lods
cmp
or
rcr
add
jns
imul
repnz
dec
mov
jge
inc
pop
mov
ret
fs
pop
mov
sbb
mov
adc
add
dec
mov
mov
mov
jp
pop
jp
fistpl
movsb
daa
fadds
dec
and
add
ja
clc
jle
rorb
ss
daa
enter
stos
loop
pop
fsts
add
das
lea
call
test
loop
gs
rorb
gs
out
xlat
mov
rcrb
lock
dec
sbb
rcrb
mov
outsl
int
mov
int
fisubl
imul
dec
out
call
jae
insl
repz
int3
push
mov
pop
gs
adc
and
sbb
cmp
scas
xchg
fsubs
int
jecxz
into
cmp
cmp
shrl
mov
jae
ss
jmp
lret
aaa
cmpsb
push
repnz
mov
dec
loopne
mov
popf
les
and
mov
lcall
aaa
ljmp
push
ficompl
or
lock
add
push
out
mov
mov
add
pop
into
fsubl
mov
lret
xchg
cmp
in
mov
pop
cli
jle
mov
push
push
ss
pop
add
popa
mov
add
mov
iret
adc
aam
lcall
xor
aad
stos
out
fisubl
add
cmp
push
int3
xchg
dec
lds
pop
or
les
pop
insl
outsl
mov
dec
xchg
xchg
sub
dec
xchg
push
sub
adc
cmp
popf
es
rcr
mull
xorb
add
jbe
sub
sub
mov
mov
je
jns
pop
pop
popf
push
jne
jb
test
adc
hlt
xchg
and
mov
mov
inc
and
sbb
cmp
or
hlt
jo
inc
inc
cmp
pop
mov
inc
or
mov
gs
mov
popa
add
or
push
popa
int3
xchg
test
inc
mov
stc
out
or
cmc
add
insb
mov
xchg
add
ljmp
mov
lods
lods
outsl
int
loopne
push
insb
cltd
mov
push
xlat
mov
or
fwait
adc
or
aas
int3
pop
lret
dec
clc
sub
cmp
adc
addr16
jb
push
cmpsl
push
out
mov
fs
je
stc
roll
fiaddl
imul
daa
sbb
cmp
mov
shrb
inc
sbbb
sub
aad
sahf
imul
jb
adc
cmp
mov
push
icebp
mov
dec
addr16
sbb
ret
mov
fwait
test
mov
push
dec
aas
pusha
xchg
mov
mov
jge
sti
sub
adc
add
xor
enter
ljmp
nop
rolb
int3
gs
fbld
insl
int3
pushf
popf
mov
push
and
push
pushl
imul
push
gs
push
movb
fwait
push
sti
mov
out
je
jns
clc
sbb
mov
ss
stos
sbb
and
inc
pop
fnstenv
fwait
jbe
push
rolb
loope
dec
ret
out
and
icebp
sub
cmp
ret
fwait
push
rcrl
repnz
push
mov
aam
insb
inc
test
push
jae
arpl
and
ja
ss
cltd
test
rolb
enter
dec
iret
xor
daa
sbb
adc
inc
into
xchg
lret
add
mov
popf
adc
xchg
pop
ja
jae
in
xchg
fistps
dec
mov
or
imul
andb
sub
push
sbb
addr16
out
jno
test
xlat
lods
jp
mov
add
aaa
adc
data16
ficoms
xchg
push
xor
xchg
aas
jnp
and
lret
jno
xor
leave
rcl
mov
dec
cli
test
imul
sub
sbb
mov
bound
ss
cli
add
and
and
add
mov
cmp
and
xchg
xor
jb
dec
sbb
out
jne
aas
adc
mov
dec
sub
mov
cwtl
xor
mov
adc
push
popa
popf
mov
xchg
jp
cmpl
aaa
push
dec
lods
in
ja
sub
mov
mov
stos
mov
enter
std
mov
ret
lret
daa
jne
inc
aam
add
test
or
mov
dec
lea
xchg
test
jbe
pop
gs
cmp
lock
es
and
xor
cmpsw
jae
lret
and
aaa
ds
in
inc
adc
imul
pop
jle
sbb
cmp
in
mov
xchg
fisttpll
dec
jp
mov
mov
dec
xchg
mov
mov
push
loope
push
add
aas
stc
leave
std
xlat
sbb
sti
iret
stos
xor
cmc
xor
imul
clc
inc
cmp
push
push
mov
cmp
fcompl
xor
cmp
mov
sahf
mov
fsubs
in
ret
clc
xor
push
insb
xor
in
lret
je
jne
push
mov
pop
xlat
imul
in
and
popa
into
insb
outsl
jl
andb
outsl
sub
xor
out
sub
push
mov
adc
sbb
jle
jns
cmc
xor
aas
adc
ret
mov
push
mov
dec
out
push
xchg
outsl
cwtl
jecxz
xchg
push
cmp
stc
or
std
dec
add
cmpsb
orl
xchg
push
mov
repnz
sub
leave
pop
movsl
add
rcrb
xchg
out
mov
sbb
shrl
cmp
repz
divb
mov
xor
dec
or
aad
pop
lds
mov
pusha
sbb
mov
or
repz
jp
repz
xchg
in
fwait
iret
mov
out
xlat
sbb
repz
daa
gs
imulb
sti
mov
ret
push
dec
inc
insl
les
fdiv
push
rcl
fscale
dec
addr16
add
xor
sbb
lods
aas
or
insb
inc
jae
mov
push
fdivs
push
adc
xchg
cmp
test
movsl
sub
inc
jb
cld
enter
cmpsb
jg
add
mov
ljmp
ja
sbb
mov
test
jp
sar
cld
stc
test
imul
fidivl
jae
mov
inc
xchg
rcrb
adc
xchg
add
mov
jbe
mov
cmp
adc
arpl
fisubs
mov
push
xchg
sbb
pop
je
push
xchg
or
pop
pushl
mov
cwtl
je
xorb
add
lea
xchg
repnz
mull
push
mov
in
pop
mov
xor
push
scas
shlb
into
xlat
xor
inc
sarb
and
loope
add
push
push
jb
push
adc
inc
or
add
inc
dec
mov
shrb
mov
mov
shlb
jle
adc
je
xchg
dec
jmp
dec
icebp
aas
clc
xchg
mov
rclb
jns
sbb
insb
loopne
faddl
mov
xchg
mov
dec
adc
fbld
imul
popf
xor
sub
cmpsb
push
sub
push
data16
mov
push
push
call
mov
aas
jmp
push
fsubrs
push
sbb
leave
push
mov
xor
ljmp
dec
aaa
call
dec
add
mov
xor
or
lret
jl
mov
push
leave
inc
jnp
jmp
cmp
inc
jl
sbb
lret
add
pushf
cltd
lcall
xchg
dec
lret
pop
ja
add
arpl
jae
test
mov
lods
jo
mov
loop
and
add
or
push
pop
mov
inc
repz
pop
sbb
sub
nop
or
sub
pop
jnp
mov
add
loopne
addb
mov
lods
popf
pop
aam
jae
mov
int3
mov
sbb
adc
sbb
cwtl
jo
notl
mov
push
popf
mov
mov
fnstcw
or
xchg
in
adc
mov
cmp
popf
sub
and
mov
fnstcw
mov
jl
push
sbb
dec
xchg
jnp
xor
mov
arpl
jge
aaa
push
test
shrb
cs
inc
pop
xorl
mov
xor
mov
sub
in
push
jle
in
pop
inc
mov
mov
popf
sbbb
cmp
scas
cmpsl
mov
repz
inc
loop
cs
xchg
cmp
xor
int3
mov
cmp
lret
add
dec
hlt
lret
or
jmp
aad
iret
nop
test
repz
mov
int3
cmp
inc
es
or
inc
mov
popf
mov
and
scas
xor
and
mov
arpl
cwtl
out
xor
pusha
mov
in
mov
add
popf
or
testl
into
xor
sbb
movsb
int3
shl
fisttpl
mov
popf
lods
repnz
stc
mov
shlb
or
out
mov
imul
jmp
xor
in
jnp
das
ja
inc
stos
and
xchg
jg
dec
dec
mov
and
andb
inc
jne
mov
mov
and
test
xchg
push
lahf
cmpb
gs
outsl
rorl
in
push
sub
into
mov
push
sbb
popf
stos
adc
popa
mov
mov
adc
fwait
inc
out
push
xchg
js
jns
int3
xchg
and
xor
repnz
jo
out
inc
mov
pop
je
dec
mov
inc
loop
xchg
xor
psrld
fistps
sub
dec
mov
mov
cmp
or
xchg
das
test
mov
shr
inc
addl
inc
mov
loope
sarl
mov
cmp
xchg
out
or
cmp
ja
ret
or
push
aam
inc
xor
cmp
divb
punpcklbw
sub
mov
out
idivl
and
mov
and
xor
adc
rcll
loop
add
inc
pusha
popa
dec
mov
sbb
or
aaa
test
stos
outsl
outsb
jecxz
stos
in
inc
sub
out
sub
rclb
or
outsl
or
shl
cmp
mov
lea
fists
jbe
mov
or
call
dec
and
xchg
and
sysexit
cmpsl
lret
sbb
sbb
dec
push
add
insb
sbb
xchg
xchg
lahf
fisubrs
out
sub
mov
call
ss
outsl
fildll
xchg
pop
aam
adcb
call
adc
sbb
or
inc
push
sbb
pusha
dec
xor
cmp
in
adc
mov
adc
imul
movsl
sbb
adc
sub
pop
push
into
jg
pop
sbb
mov
sub
mov
repz
aaa
and
cmc
pop
and
lret
imul
out
sbb
lret
stc
sbb
jg
lock
test
mov
xchg
ss
cmp
mov
repnz
imul
insl
lods
dec
inc
dec
pop
mov
cmp
sbb
adc
mov
xchg
addr16
mov
jae
inc
mov
adc
inc
xchg
jg
or
xor
mov
lret
xchg
xchg
hlt
adc
fbld
mov
sarb
push
pop
mov
pushf
xor
rcrl
sbb
jge
leave
pop
cmp
mov
in
jae
pop
push
out
in
inc
loopne
xchg
xchg
shll
cmp
mov
shlb
xchg
aad
inc
popa
idivl
pop
xchg
adc
jmp
sub
jecxz
lahf
test
sbb
shll
inc
sub
or
lcall
jg
mull
xorl
rcrl
add
adc
xor
repnz
scas
inc
fldt
sub
xchg
dec
sbb
arpl
xor
sub
fistl
test
xchg
lcall
fstp
mov
popa
jno
jo
ret
inc
cmp
xchg
inc
out
clc
adc
into
sbbb
mov
dec
xlat
das
pop
ljmp
pextrw
arpl
sbb
mov
pop
mov
sub
or
sahf
imulb
fnsetpm(287
imulb
imul
sub
sti
int
insb
mov
dec
inc
or
filds
in
push
sbb
xchg
mov
inc
ret
push
cmpsl
adc
inc
shlb
icebp
push
fsubrs
sub
pop
das
in
push
pop
adc
fs
test
repz
inc
cmp
loope
fidivs
es
pop
pusha
mov
or
stc
dec
shll
xor
sahf
sub
test
int
mov
addl
fmuls
add
sub
fldenv
mov
push
mov
mov
aas
enter
mov
jp
int3
xor
pop
push
testl
and
es
mov
test
and
mov
or
loopne
cmp
lahf
xor
add
iret
mov
roll
xor
sub
push
dec
cld
add
sbb
hlt
inc
fiadds
leave
inc
mov
popf
movl
add
xchg
call
aas
cmp
fisubs
and
stos
jecxz
pop
popf
cmc
imul
and
or
out
mov
push
cmp
push
push
jmp
loope
mov
adc
push
jnp
xor
rorb
pop
jae
test
dec
cmp
push
mov
jb
mov
cmpl
push
fwait
sbb
into
add
divb
lods
fisttpll
lret
icebp
shll
jle
mov
sbb
inc
js
sub
mov
pop
mov
movsl
lret
inc
add
cmpsb
aad
fwait
mov
sub
push
sti
push
fdivl
mov
pop
dec
mov
xchg
test
or
bound
popa
sub
xchg
hlt
jo
mov
push
test
jae
ss
fucomp
jns
outsl
cmp
add
push
mov
jmp
repz
add
sub
movaps
and
mov
fidivrl
cmp
jecxz
or
js
nop
or
push
lea
dec
jmp
dec
cmpsb
inc
lods
xchg
and
adc
xchg
xor
xor
inc
sbb
xchg
xchg
imul
jp
imul
call
or
mov
xlat
mov
mov
and
xchg
fstl
adc
xchg
xor
dec
stos
repnz
dec
mov
cmc
pop
sub
cmp
pusha
sbb
pop
mov
cmp
jg
repnz
dec
jae
lret
addl
xor
adc
sub
or
inc
cmp
jo
fucomp
xchg
fldcw
sub
inc
mov
pop
enter
xchg
test
pop
mov
jns
fildl
sub
shlb
cli
mov
in
shlb
jp
fcoml
dec
mov
lcall
fs
lods
push
push
add
lods
bound
test
outsb
dec
testl
add
or
outsl
xchg
mov
or
pop
fisubs
fsubs
mov
mov
or
iret
movsb
lods
dec
adc
sti
jg
pop
inc
and
in
fistpl
mov
sarl
jg
and
jne
push
repz
or
xor
sub
and
mov
or
xor
dec
xor
aad
jbe
xlat
push
lahf
and
popa
and
cltd
mov
mov
jae
mov
jne
xchg
scas
lea
lcall
mov
pusha
cld
lcall
pop
sub
fists
xor
stc
or
or
cmp
in
mov
mov
cmp
and
mov
jo
mov
cmp
xor
test
mov
dec
or
dec
lea
testb
sub
sbb
xor
roll
mov
ret
add
ljmp
scas
mov
fstpt
insl
xor
fwait
mov
popf
imulb
mov
sub
repnz
xchg
leave
incl
dec
inc
xchg
scas
jmp
loope
je
ss
xchg
outsl
sub
add
sub
in
lcall
mov
das
jmp
push
and
loop
int
fsubrl
out
push
xchg
and
shrl
cmpl
or
pop
pop
add
fwait
std
fld1
dec
aas
add
mov
and
imul
xchg
rcr
insb
mov
ss
int3
js
sbb
and
jmp
xchg
xor
fcmovu
cs
inc
sbb
int
mov
in
nop
jl
push
dec
pop
insb
mov
pop
mov
cmpsb
push
leave
dec
ret
in
sbb
mov
aam
aam
adc
mov
push
sbb
clc
aad
mov
je
and
xor
inc
adc
mov
test
xchg
cltd
leave
push
cmpsb
sbb
in
shl
and
or
leave
dec
or
lock
adc
test
dec
sub
adc
mov
dec
xor
sub
xchg
push
push
xor
xor
andps
adc
outsl
loope
push
push
pop
xchg
rcl
imul
push
jl
insl
out
fdivl
popl
stc
lcall
in
lss
push
cs
xchg
mov
cmpsb
xchg
sub
dec
scas
mov
adc
mov
mov
in
test
push
out
xchg
cmp
mov
dec
aad
loopne
sub
movsl
femms
loopne
and
in
mov
jns
das
test
mov
lds
lods
dec
mov
lock
loopne
lret
or
mov
mov
iret
or
call
adcb
dec
lret
inc
cmc
pop
nop
ds
ljmp
subl
and
jp
xchg
frstor
pop
cmp
jns
dec
xor
adc
add
js
add
sub
and
pusha
and
int
lock
inc
stc
xchg
mov
into
les
or
xchg
xchg
xchg
jl
stos
jns
test
jecxz
fmull
sbb
cli
and
mov
mov
jno
rcl
inc
xor
mov
call
dec
fs
xor
stos
mov
xchg
jp
and
mov
repz
in
enter
outsb
gs
sbb
gs
mov
fcompl
mov
mov
por
jge
insl
aad
dec
jbe
dec
cli
inc
sub
mov
pop
mov
and
xchg
fstpl
adc
push
gs
inc
inc
fwait
lods
ja
cs
sti
jmp
inc
mov
test
push
push
sbb
sahf
jae
inc
enter
out
jecxz
cmp
shr
divl
int3
int3
cmpsb
jb
jp
xor
mov
ss
jmp
xchg
or
jle
mov
in
pop
cs
mov
cltd
mov
adc
xchg
idivb
in
es
mov
ja
adc
iret
jbe
push
mov
fstps
ss
das
in
inc
mov
xchg
adc
xchg
and
fs
rcr
out
xchg
data16
add
imul
popf
enter
pop
mov
jnp
sti
cmc
pop
add
loope
adc
xchg
mov
ret
add
dec
outsl
push
add
or
push
lcall
cli
fidivrl
cmp
mov
dec
or
sub
std
mov
adc
hlt
fisttpll
push
aaa
mov
dec
push
js
add
stc
scas
and
and
roll
xor
fwait
adc
add
xor
ljmp
out
mov
mov
jg
add
testb
movsb
lret
in
ljmp
add
rcl
dec
clc
dec
pop
shl
and
js
insl
test
sub
mov
jmp
lods
mull
icebp
lea
andb
cmc
jle
lret
mov
popf
sub
xchg
mov
mov
push
fmul
in
out
cltd
stc
mov
in
cmpsb
test
add
pop
sbb
mov
pop
xchg
rorb
inc
sbb
je
out
add
andl
xchg
stc
aam
and
and
sti
es
or
daa
popa
sub
dec
jae
loopne
sub
jbe
sbb
push
popa
fcomps
push
aad
dec
lods
addr16
rol
mov
push
jecxz
sahf
jns
outsl
jmp
add
xchg
mov
fwait
into
out
push
jmp
enter
xor
or
aam
adc
push
push
mov
jg
pushf
sahf
loopne
ficompl
sbb
jns
jle
lock
pop
insl
cmp
outsl
into
push
mov
push
or
sbb
push
mov
inc
jne
outsb
sbb
push
jae
aam
push
sbb
adc
push
sub
ja
push
rcrb
stos
xor
mov
jo
inc
dec
pusha
jp
cmp
jmp
test
mov
jge
dec
jns
popa
les
ja
enter
xchg
test
push
fwait
imul
scas
pop
adc
div
dec
cmp
xchg
daa
idiv
inc
js
mov
cltd
mov
xchg
jmp
or
or
dec
addr16
jl
and
ja
inc
lods
lock
inc
test
xor
or
dec
pop
push
sub
push
rcl
nop
rolb
xchg
gs
mov
and
fcmovbe
dec
jo
xchg
cmp
fs
cmp
push
pop
jmp
rorb
adc
out
outsl
in
sub
outsl
sub
and
cmpsl
inc
lods
pop
movsb
pop
lea
or
js
mov
push
xor
cmc
adc
push
int3
call
aaa
gs
shll
push
into
int3
or
mov
jge
ror
insb
mov
cltd
dec
lret
inc
or
outsb
call
out
popa
inc
dec
cld
scas
push
cmp
mov
es
mov
mov
rcll
insb
cmp
dec
sub
cld
cmp
test
mov
sub
mov
cmp
cmp
pop
push
push
test
movsl
imul
add
and
inc
mov
cmp
fisubs
inc
pop
insl
test
imul
or
or
jb
lds
enterw
imul
in
ret
push
push
push
and
into
mov
adc
xor
and
mov
adc
mov
es
pop
dec
call
sub
shrb
nop
lahf
push
mov
mov
xor
addr16
aaa
inc
add
add
fldl
movsl
mov
stos
int3
xchg
fnclex
xor
adc
sarl
adc
sub
sub
xchg
mov
mov
ret
or
add
adc
push
mov
sbb
fsubs
scas
mov
cld
dec
add
sarb
je
mov
mov
pop
sbb
cmp
outsl
and
or
jno
cmpsb
and
cltd
mov
pop
mov
inc
dec
or
mov
inc
cld
out
rcrb
ret
cmp
test
incl
jp
jmp
neg
or
test
mov
rcll
xchg
jo
mov
add
sub
into
mov
mov
add
sahf
dec
jns
call
scas
jle
lea
fucomi
outsb
imul
aaa
cs
out
push
pop
mov
adc
lea
into
and
icebp
inc
pop
fsubrs
gs
mov
and
ja
mov
ss
mov
push
jbe
js
xor
test
jns
js
xor
xchg
dec
adc
dec
jmp
mov
mov
dec
push
outsb
pop
sarb
in
scas
push
shl
sbb
push
xchg
mov
cli
jno
jecxz
cmp
lods
jl
sarb
popa
and
sbb
pop
jl
pop
jo
mov
in
pusha
jb
jnp
lds
cmp
xchg
lea
aam
jnp
adc
movsb
push
cmpsb
pop
test
jge
mov
push
adc
and
push
add
and
and
push
push
lods
lret
sbb
int3
jns
sbb
sub
dec
out
add
mov
out
inc
dec
xchg
addr16
cwtl
pop
xchg
rcll
dec
sbb
push
jecxz
pushf
ret
andl
and
jecxz
jl
jg
test
inc
xor
out
fmuls
jno
out
xor
or
cmp
jae
enter
mov
pushf
jns
push
dec
aad
cmp
cs
xlat
inc
test
aas
cs
mov
aad
nop
nop
pop
pop
push
jge
pop
pop
int
enter
cltd
sbb
mov
shlb
add
push
adc
lret
movsl
jg
pop
ret
and
push
sar
rclb
or
add
in
imul
pop
mov
cmp
outsl
xchg
notb
mov
ds
mov
lahf
inc
mov
xchg
lret
fldcw
push
punpckhwd
cmp
rorb
negb
popa
mov
and
lret
orb
and
mov
pushf
or
xchg
ss
in
stc
stos
inc
jle
les
xor
mov
push
push
xchg
fdivs
xor
mov
push
mov
or
mov
mov
pop
add
stos
push
lods
jmp
jae
mov
fidivs
out
dec
stc
test
repz
scas
dec
repnz
mov
pop
scas
inc
cmpsb
pushf
imul
iret
sub
push
insb
pop
fisttpl
mov
fsub
mov
or
pop
scas
xor
gs
mov
cld
lock
or
in
pop
mov
pop
arpl
jo
iret
cld
add
in
push
jae
cs
ljmp
sbb
mov
sbb
sbb
int3
add
popa
aaa
stc
add
lods
out
sbb
jp
jne
xchg
fidivrl
sarl
jnp
inc
idivb
subl
inc
push
jb
mov
push
inc
inc
dec
mov
xchg
imul
fsub
sub
mov
lods
mov
dec
sbb
or
xchg
dec
mov
dec
jp
lods
das
pop
aaa
in
fstps
xchg
call
add
mov
pop
stos
je
daa
ss
mov
mov
fs
dec
loope
xor
and
pop
sub
cld
jb
pop
fsts
adc
sbb
jle
mov
cmpsb
dec
mov
enter
faddl
mov
sbb
movsl
mov
mov
sub
sbb
in
pushf
jae
xor
push
mov
mov
cltd
adc
lods
add
ljmp
lret
ljmp
fistps
insl
sbb
or
pushf
sbb
les
insl
adc
mov
xlat
xchg
loopne
pop
xlat
or
stc
fildl
and
adc
test
dec
xchg
mov
test
jo
popf
scas
mov
cmp
ja
pop
push
add
outsb
cltd
test
sub
jg
dec
lds
inc
cmc
and
sub
lret
enter
add
cmp
pop
xchg
mov
add
pop
sbb
adc
jbe
pop
aad
pop
xchg
imul
lods
fsubrl
add
sti
inc
mov
sub
dec
shlb
cs
add
push
fisttpl
cmp
aaa
ljmp
mov
pop
roll
scas
lret
fstp
sbb
aaa
loop
sarl
add
add
jg
inc
cmp
in
and
cmpsl
in
hlt
andl
mov
adcl
out
cmp
bound
inc
lods
mov
pmaxub
inc
call
fildl
nop
dec
es
or
jecxz
daa
or
fcoms
in
popf
mov
jp
pop
daa
push
daa
pusha
repnz
insb
and
jl
add
pop
mov
std
jne
adc
jo
add
or
loopne
sbb
loope
xchg
push
and
aam
pop
data16
nop
cmp
pop
out
and
mov
std
xor
push
ss
test
pop
fisubrs
xchg
xlat
sbbl
into
mov
mov
sub
mov
or
addr16
sub
lods
lock
jmp
push
jg
mov
jge
lahf
in
xchg
dec
aam
xchg
jge
adc
paddw
adc
ss
mov
add
cli
in
das
xor
jecxz,pn
arpl
mov
and
fwait
cmp
and
frstor
add
in
stos
pop
mov
or
sub
rclb
stos
sbb
pop
xlat
lds
inc
push
fidivl
or
inc
mov
pop
repz
jo
lret
push
dec
dec
lret
add
jp
pop
pop
mov
testl
sub
out
mov
outsb
shll
xchg
int
fs
jl
jp
pop
add
inc
in
addl
inc
gs
dec
mov
or
push
fisttps
ffree
dec
icebp
jo
or
sbb
adc
jns
in
popf
or
cmpl
push
scas
mov
lock
stos
and
mov
daa
in
mov
lods
insb
fcmovne
mov
cmp
mov
add
mov
xor
xchg
xchg
pop
jle
or
cmp
sub
jno
or
xchg
lods
add
cmpsb
in
dec
mov
fmul
imul
pop
fstp
xchg
leave
xlat
mov
mov
dec
in
pop
dec
sbb
and
inc
push
inc
int
or
and
lock
sub
xchg
mov
test
mov
mov
and
dec
stos
sbb
insb
dec
and
hlt
inc
jge
push
jb
and
push
cld
clc
gs
xlat
addr16
inc
inc
mov
push
fdivr
test
int3
into
scas
out
cmp
and
mov
loopne
imul
sbb
ret
mov
or
repz
cmc
cmp
nop
notb
mov
fs
in
nop
or
add
rcrl
push
push
hlt
cmpsl
and
dec
xchg
xor
xlat
dec
jb
pop
adc
cwtl
sbb
pop
stc
sahf
fisubs
out
addr16
into
push
rcl
mov
gs
xor
cs
jbe
inc
lret
push
push
mov
andb
nop
xchg
aas
adc
call
ret
mov
xchg
mov
dec
or
push
lret
movsb
add
pop
mov
sub
fwait
dec
popf
mov
das
aam
jle
rolb
pop
ret
dec
rcll
sub
inc
xchg
dec
fwait
pop
sub
lds
call
or
push
and
sbb
cmp
cmp
cld
lcall
mov
cmp
push
and
mov
lock
stos
mov
lcall
shl
neg
lahf
outsl
xchg
daa
inc
and
xor
sti
cltd
aas
cli
jmp
cli
cmc
mov
frstor
aas
pop
or
imul
lds
aaa
out
sub
inc
and
inc
pop
pop
cwtl
xchg
jb
pop
xlat
adc
lds
jo
push
pop
sbbb
jmp
mov
mov
jbe
addl
lahf
out
mov
sub
cs
dec
jae
xchg
ss
pop
xchg
popf
jp
mov
cld
in
xchg
cmpsb
and
mov
dec
xchg
popl
rcr
imul
das
sub
rcl
int3
sbb
movsl
add
pop
fadds
pusha
push
sbb
rcr
in
mov
loope
aad
call
rclb
add
insl
pop
imul
ficoms
fcomps
inc
rcrl
imul
mov
shlb
or
jae
sbb
dec
cmc
fnstsw
push
cmp
shl
sbb
cmp
leave
xchg
pushf
cmpsl
sbb
mov
cmpsl
push
jle
test
outsb
test
in
xchg
xor
in
xor
cmp
into
mov
cmpsl
out
pop
call
cmp
pusha
int3
and
ja
xor
adc
int
mov
dec
out
rcll
jne
loope
cmp
cmc
dec
lods
mov
rcrb
add
sbb
int
movsl
scas
inc
insb
add
mov
mov
add
fdivrp
jno
inc
ret
je
clc
repz
scas
fists
roll
fdivs
sarl
inc
ret
add
lea
and
push
or
test
test
das
push
ljmp
fidivs
add
std
pop
lds
push
sahf
mov
loopne
pop
or
iret
mov
shll
repz
rcll
pushf
std
fnstsw
leave
and
mov
les
les
bound
in
out
push
insb
mov
out
mov
aaa
into
flds
mov
arpl
mov
dec
lcall
jle
sbb
inc
dec
jne
rcrl
push
pushf
repnz
jbe
lods
test
xlat
push
adc
mov
xchg
adc
xchg
pushf
mov
push
adc
aaa
aam
aas
les
ds
out
or
adc
fisttpl
jb
jne
enter
push
je
mov
fmull
les
call
cmpsl
dec
jecxz
sub
movsb
jbe
cs
in
xlat
movsb
out
xchg
inc
scas
adc
dec
jo
shrb
xchg
push
mov
inc
sahf
jnp
mov
cmp
mov
cmpsl
or
inc
jno
push
pop
xor
lahf
stos
xor
inc
iret
and
pushl
push
or
std
rcr
and
and
test
pop
jno
je
push
sahf
jb
xchg
rcr
mov
push
add
add
pushf
jae
xchg
xlat
xchg
adc
jo
movsl
lods
fistps
or
dec
sub
orb
ds
in
sub
rolb
sbb
mov
int3
and
loopne
push
movsb
pop
adc
popf
cli
pop
adc
cmpsl
and
test
jo
adc
dec
outsl
daa
sub
inc
outsl
pop
push
loope
mov
outsl
mov
out
inc
fcmovb
mov
bound
add
mov
int
xor
cld
adc
call
xchg
ja
in
dec
adc
leave
ss
cwtl
add
jge
and
outsl
xchg
pop
adc
add
mov
cltd
imul
cmp
out
or
hlt
in
adc
ret
pushf
aas
popl
xor
or
xchg
mov
push
int
sub
iret
xchg
xor
mov
out
inc
out
or
jp
fdivs
ja
xchg
xlat
sub
sub
pop
scas
outsb
pushf
mov
push
mov
or
mov
loop
nop
mov
dec
mov
test
mov
jns
mov
pusha
adc
sbb
mov
lcall
cmp
mov
fidivrl
xorb
jno
pop
out
ss
add
and
stc
inc
pop
and
xchg
insl
sub
test
addr16
daa
xchg
cmp
dec
dec
sbb
push
lret
pop
loop
int3
jmp
gs
ss
sbb
mov
enter
push
jo
sbb
adcb
loope
pop
adc
jg
ljmp
push
pop
pop
imul
fisubs
mov
push
mov
cmp
fdivs
repz
mov
xchg
cs
sbb
push
adc
or
pushf
lds
add
jbe
jge
fnstcw
xchg
loope
movsl
sub
inc
pop
fcmovne
mov
xor
jecxz
imul
push
out
sbb
nop
mov
push
add
cmp
popa
sbb
dec
data16
mov
xor
test
sti
jo
es
daa
xchg
leave
insb
and
icebp
lock
negl
mov
outsb
jge
aaa
jle
out
fstp
jae
jne
ljmp
nop
fbstp
and
or
pushf
lret
cli
add
lahf
jle
mov
fwait
pop
push
rsqrtps
mov
jmp
cs
and
test
les
xchg
rolb
push
clc
lods
cwtl
jb
dec
xor
aaa
js
lods
sbb
adc
jge
dec
mov
cmpsb
aam
out
test
jmp
movsb
sub
pop
or
data16
aaa
and
inc
xchg
xchg
add
out
in
ficomps
loop
out
push
aas
aaa
fadds
scas
jbe
push
add
int3
je
mov
sub
mov
inc
xchg
rol
push
inc
int
fdivrp
outsb
sbb
mov
test
jmp
in
inc
mov
mov
dec
jle
or
mov
repnz
push
jl
push
jns
sub
xchg
or
add
push
imul
lret
xor
in
cwtl
mov
mov
cmp
push
jno
sar
aad
lea
pop
push
xchg
or
lcall
rcrb
cwtl
inc
inc
outsl
add
and
pop
push
in
pop
ficompl
call
icebp
test
int
xlat
and
stc
pop
subl
lock
lahf
xchg
jns
mov
mov
cs
add
inc
jno
inc
popa
ret
and
mov
adc
repnz
inc
or
ret
aad
xchg
add
movsl
sti
es
jno
in
pop
push
mov
adc
stos
jmp
fidivs
lods
js
cmp
push
ja
out
lods
pushf
add
and
movsb
and
test
cmpsl
and
rcrl
out
jae
sub
pop
push
pop
cmp
jg
sbb
sub
pop
out
out
hlt
mov
pop
or
cli
xor
jae,pt
add
or
movsbl
fs
icebp
push
pusha
arpl
std
jp
sti
mov
lods
jnp
fcoms
jmp
mov
push
and
dec
aam
adc
dec
add
add
movsl
movsl
fcoms
push
xlat
andb
xchg
movsl
cmp
call
push
fs
sbb
fnstenv
lds
jns
jae
pop
push
add
push
add
jb
faddl
arpl
sub
and
inc
push
and
fdivs
dec
mov
stos
xchg
loop
xchg
or
xor
add
fisubl
out
push
bound
aaa
dec
sub
ljmp
adc
xor
into
mov
leave
stos
inc
adc
add
daa
sub
mov
jo
sub
sbb
nop
inc
mov
xor
mov
loope
pop
pushf
sahf
and
scas
inc
dec
add
mov
mov
and
lahf
out
jle
and
dec
xchg
jmp
jg
mov
adc
xchg
adc
add
ja
addr16
dec
sub
adc
or
mov
sub
into
xchg
js
push
xor
pushf
push
cltd
sub
mov
fisubrl
add
jo
push
pop
cwtl
hlt
stos
mov
stos
mov
das
sahf
cmp
dec
lret
out
popf
outsb
andl
inc
mov
movsb
stc
mov
jnp
mov
les
mov
cmc
jg
fistpl
sub
mov
inc
xchg
fdivl
popf
inc
add
or
cmpl
pop
mov
in
fcomip
shll
jne
cwtl
pop
mov
jno
iret
xchg
xchg
fdiv
jne
jno
lea
stos
xchg
xchg
sbb
repnz
xchg
lds
mov
outsl
leave
ljmp
push
imul
cmpsb
sbb
stos
rolb
sbb
pop
xor
lahf
inc
loope
sub
jo
out
addl
push
cmpsb
test
addr16
xor
daa
es
out
test
lcall
test
pushf
mov
scas
rorl
in
js
mov
mov
push
mov
loope
pop
sub
sbb
mov
dec
imul
inc
movsl
xlat
dec
rorl
add
mov
fadds
pop
jae
add
fmull
jge
leave
divb
mov
mov
popf
pop
bound
sbb
add
xchg
imul
pcmpgtw
xchg
push
fs
repnz
and
cld
aas
ljmp
jae
jo
push
imul
ret
stos
mov
xor
or
push
lret
inc
mov
repz
cs
leave
dec
pop
out
xchg
mov
int3
inc
outsb
clc
pop
xchg
jb
sti
aaa
pop
push
jmp
and
adc
lock
inc
lods
push
jmp
add
mov
sbb
ret
push
call
lock
neg
aaa
pop
and
push
shlb
dec
in
xor
push
cli
jmp
shrl
cltd
out
sti
arpl
mov
inc
cmpb
ret
cmp
insb
cmc
or
pop
outsl
push
testb
xchg
js
pop
jns
jmp
push
mov
sbb
in
shl
push
lcall
adc
sbb
dec
rcl
xor
add
dec
xor
xlat
push
fcoml
xor
push
add
jb
jnp
lods
mov
insb
adc
nop
jge
or
jg
fisubl
call
push
shlb
outsb
mov
xchg
mov
stc
xchg
sbb
push
dec
push
mov
das
test
jns
cmpsb
cmpsb
mov
pop
je
and
ret
mov
pop
jae
xchg
sahf
sbb
sbb
fnstcw
std
jns
sti
xchg
call
lcall
jg
aad
pop
inc
mov
into
or
insb
cmp
add
dec
mov
das
sbb
push
mov
test
insb
sbb
pop
xchg
sub
xchg
dec
psubsb
cmc
icebp
fucomi
xor
adc
stos
rclb
xchg
xor
ljmp
fwait
add
mov
jle
das
test
rorl
cld
gs
call
fidivs
call
outsl
arpl
adc
nop
pop
cli
notl
jnp
cmp
add
mov
popa
mov
test
loope
int
sbb
cmp
cmp
gs
lds
push
rcrl
jecxz
xchg
and
andl
adc
adc
pop
fiaddl
in
out
dec
divb
popa
pop
cli
pop
adc
test
sbb
jecxz
fucomp
dec
push
arpl
das
pop
popa
mov
bound
mov
push
or
inc
mov
mov
dec
jge
enter
and
mov
pop
insl
and
es
ficomps
lea
jb
adc
inc
push
fists
aaa
sbb
lock
jns
cmpsl
outsl
or
lret
push
in
and
ret
test
xchg
data16
and
jo
jbe
lea
ja
cmp
in
in
inc
insl
daa
fldcw
psubw
das
push
pop
cmp
push
xchg
ret
out
mov
movb
cmpsb
inc
pop
cs
lret
mov
push
sbb
rol
mov
mov
xlat
mov
or
and
cwtl
nopl
daa
jle
and
jns
pop
jnp
stos
push
nop
gs
sbb
and
sub
jne
jmp
mov
jo
push
dec
pushl
add
pop
jp
mov
dec
jae
call
lret
into
cmp
or
loopne
sub
push
shrb
inc
jmp
xlat
and
push
xor
sbb
mov
test
in
int
lods
mov
lret
lret
imul
arpl
stc
pop
mov
sub
mov
xor
cltd
jl
inc
ds
mov
jnp
lret
out
test
jecxz
lret
divb
fistpl
mov
xrelease
test
mov
cld
daa
dec
mov
out
cmp
leave
enter
push
mov
insb
cmpsl
cmp
inc
cli
jmp
adc
or
jns
pushf
mov
pop
imul
enter
adc
out
sub
xchg
jbe
pop
xchg
lahf
adc
jno
lea
inc
pushf
roll
pop
or
xor
sbb
sbb
int3
inc
je
pop
inc
push
sbb
inc
cmp
in
xor
mov
enter
pop
jne
pop
jge
and
mov
out
insb
stos
push
xchg
rcr
jg
mov
inc
cld
add
dec
stc
addr16
add
mov
test
subb
shrb
lret
lds
shll
mov
fcmovne
sub
adc
xchg
dec
mov
sbb
out
ss
mov
push
mov
push
mov
jge
ljmp
sbb
loope
adc
xchg
outsl
and
mov
inc
xlat
das
stos
dec
xchg
shlb
popf
in
pusha
les
push
frstor
cmpsb
cwtl
xor
arpl
imul
mov
pop
cmpsl
cmpb
xchg
xor
add
shl
addr16
inc
cmp
lret
jns
mov
add
pop
jp
dec
repz
cmp
mov
mov
mov
cmp
sbb
addr16
and
outsb
xlat
xchg
ficomps
leave
icebp
jno
ds
ret
nop
cmpsb
mov
data16
sub
adcl
push
scas
and
xchg
inc
in
push
adc
jbe
in
out
mov
sarl
xor
cmp
shrb
jle
sbb
imulb
loope
adc
sbbb
and
and
lahf
add
cmp
jbe
mov
cmp
cmc
lret
pop
jne
test
and
jge
sahf
divl
add
or
inc
cld
inc
dec
sub
addb
xchg
cmp
rorb
sub
mov
sbbl
stc
mov
cltd
jne
cmpsb
shrb
scas
icebp
mov
shrl
jne
cltd
test
pop
inc
loopne
mov
push
ss
insb
jg
mov
int3
add
dec
in
stos
fdivs
cmp
jne
out
fadds
outsb
neg
repz
and
jmp
aad
ja
mov
adc
mov
mov
lcall
bts
adc
and
and
dec
popa
notl
movsb
jecxz
in
push
sbb
xchg
mov
movsb
xchg
insl
add
push
lds
jl
data16
xchg
cs
insb
rolb
mov
es
or
aam
daa
xchg
xor
cli
cmp
into
cmp
mov
lea
repz
xchg
out
mov
insb
cmpsb
fcoml
inc
sahf
xchg
movsl
push
mov
and
mov
addl
pop
add
int3
ljmp
out
add
push
mov
push
pushl
les
sbb
push
dec
mov
imul
inc
leave
ds
call
cld
push
dec
add
lahf
mov
sbb
scas
icebp
or
mov
xchg
xchg
cmpsb
popf
movsl
inc
stos
ss
out
bnd
sarb
push
mov
and
cli
dec
push
jmp
sahf
das
outsl
sbb
push
cli
cmp
sub
shrb
push
mov
pop
loopne
sbb
pop
std
xchg
les
mov
imul
pop
int3
or
cmp
scas
loope
repnz
or
jo
mov
es
push
stos
cmpsl
repnz
test
fcmovnbe
xchg
mov
and
clc
das
cmp
sbb
icebp
sbb
test
repz
sbb
or
stos
mov
xor
xor
inc
pop
pop
mov
ret
hlt
xchg
daa
sub
out
test
loopne
sub
xchg
adc
push
sub
outsb
jmp
and
mov
bnd
xchg
out
push
icebp
test
xchg
mov
mov
pushf
pushf
mov
cmp
nop
inc
pop
mov
stos
push
bound
lahf
ror
aaa
lahf
sbb
popf
popf
loopne
dec
bound
mov
in
rcl
pop
shlb
cmp
mov
ss
sti
loope
outsl
mov
js
fnstcw
rolb
ror
and
jae
mov
sub
aam
pop
adc
test
or
iret
and
mov
adc
and
sti
mov
pop
mov
mov
jnp
mov
adc
mov
sub
cmpsb
ret
and
out
or
cmpsb
je
in
pusha
jge
in
call
add
jmp
leave
push
fiadds
xchg
and
pop
decb
jl
and
rclb
xchg
sbb
cmp
lds
pop
lods
adc
and
sbb
outsb
je
out
scas
ja
jb
mov
xchg
push
and
mov
xor
fs
push
add
aam
incb
into
push
and
pop
dec
cmp
cs
jb
xchg
and
xor
pop
cmp
cmc
mov
shlb
js
popf
ja
and
addr16
xor
movb
jg
fsubr
mov
outsl
in
dec
test
pop
inc
lods
fsubrp
ffreep
arpl
ds
and
out
aaa
addl
loop
test
in
jecxz
jmp
sbb
push
push
ret
mov
adc
js
jecxz
xor
jle
pusha
jb
inc
sub
adc
xchg
lds
or
or
adc
push
movsb
push
fdivr
mov
fildll
ror
jmp
mov
cmp
inc
adc
sub
sbb
out
fs
jle
cmpsb
cmpsl
mov
or
insb
add
sti
jns
mov
cmp
xchg
lock
pop
sub
push
lock
mov
add
imul
add
add
hlt
xchg
or
fisttpll
cmp
cld
rep
sub
add
sahf
xor
and
sbb
aas
pop
xchg
mov
cmp
mov
imul
add
pop
dec
mov
cwtl
and
xor
das
mov
or
test
add
sarb
sti
ret
sub
add
dec
pushf
pop
repnz
mov
mov
adc
or
cs
es
cs
notl
and
push
fnstsw
add
sbb
sbb
mov
push
leave
cld
add
scas
sbb
test
scas
negb
popa
and
je
adc
mov
adc
and
sub
or
out
jo
adc
daa
rorw
mov
mov
lcall
pop
ja
nop
ret
sub
outsl
xorl
adcb
mov
adcb
js
vcvtsi2sdl
cld
cmc
mov
aas
sbb
imul
xor
in
sub
jne
subb
es
xchg
ljmp
out
push
add
cmp
jl
inc
pop
clc
mov
stc
cltd
jmp
adc
push
xor
lods
jg
adc
insl
add
pop
lods
and
cmp
xor
outsl
xor
mov
fimull
popf
out
inc
imul
cmp
cmp
ja
sub
insb
or
cltd
pusha
cs
push
inc
in
in
or
mov
hlt
ret
sub
xor
daa
out
sti
insb
shll
outsl
or
add
movsb
pop
add
xor
adc
fs
in
popf
xchg
ds
dec
add
insl
xor
cmpb
mov
jmp
daa
sub
pop
jmp
es
push
dec
lods
mov
neg
jb
adc
into
into
data16
ss
cmc
mov
cmp
arpl
sbb
out
xchg
aam
les
dec
mov
and
xchg
in
les
xor
hlt
xchg
mov
add
leave
cmc
add
addr16
sti
pop
aam
stos
nopl
xor
push
xchg
mov
fcomps
jecxz
out
nop
adc
nop
inc
js
add
lret
pop
cs
pusha
and
sub
test
jnp
rcrl
flds
out
push
inc
xor
rorb
clc
pop
jmp
jne
inc
dec
cld
xchg
dec
ss
xchg
and
add
and
sbb
pop
cmp
and
cwtl
cmp
xchg
inc
jbe
cmp
inc
jns
lds
mov
lret
ror
je
aaa
adc
sub
out
xchg
shlb
xlat
xor
movsl
subb
insl
pop
sub
ret
aad
add
adc
rcrl
push
add
sub
mov
lcall
pop
sbb
mov
call
stos
cmpl
xchg
or
lret
mov
adc
sahf
punpckldq
fsub
xchg
xchg
adc
dec
mov
jo
sbb
out
push
jl
clc
pop
inc
fiaddl
mov
pop
push
jmp
add
rcl
sub
jno
push
lret
jne
mov
scas
xchg
ror
faddp
sbb
lcall
bound
mov
dec
fdecstp
fdivrl
cmp
jle
mov
movl
push
js
aas
mov
testb
push
pop
lods
pop
dec
or
sahf
outsl
cs
cld
std
sti
cmp
cmpb
dec
fdivl
dec
jbe
jo
jae
pushf
call
cltd
clc
lahf
mov
repnz
icebp
cmpsb
inc
out
and
pop
aaa
push
or
fnstsw
loopne
mov
aad
xor
int
cmp
xchg
and
pusha
dec
jo
xor
sbb
inc
fimull
add
jge
pop
add
outsb
mov
mov
mov
incb
inc
addr16
xchg
pushf
jmp
jecxz
or
cs
xchg
xchg
push
push
jns
sarl
pop
jns
rcrl
das
out
hlt
out
sub
clc
ja
jb
xlat
sbb
loope
ret
or
mov
xlat
xchg
bound
lds
mov
push
lret
aad
js
shrl
aam
push
adc
lcall
popa
or
push
mov
aad
jl
ss
adc
jg
fwait
push
cmp
loopne
mov
lret
jge
in
adcl
adc
jne
ds
lock
dec
shlb
pop
add
inc
pop
mov
dec
pop
add
mov
subb
pushw
movsl
pop
movsb
push
bound
and
add
data16
movsl
or
in
lcall
adc
mov
sbb
mov
ja
imul
sub
stc
lea
in
sub
aaa
ret
repnz
inc
xchg
mov
inc
sub
aas
pop
pop
and
push
or
loope
sbb
cld
inc
inc
dec
or
and
outsl
cli
mov
pop
dec
pop
sbb
xchg
ds
movsb
mov
sbb
jnp
shlb
vpsubusb
xor
xchg
nop
sbbb
xchg
in
fwait
jne
lret
and
flds
bound
mov
push
jge
cmpsb
ret
or
fs
push
mov
hlt
mov
insl
loopne
insb
jg
addr16
mov
xchg
rcll
outsb
ljmp
cmp
push
imul
fiaddl
xchg
xchg
sarb
or
in
addr16
cli
jno
cltd
faddp
fxch
mov
adc
aad
int
cs
mov
outsb
decl
out
mov
mov
fnsave
push
fldl
lods
or
outsb
in
lret
data16
aas
adc
cwtl
pushf
xor
sbb
nop
sub
dec
fs
outsb
add
lods
and
rorb
push
cwtl
loope
push
sub
sar
fs
push
lahf
jmp
xor
cltd
aad
shll
and
repz
sub
dec
ljmp
inc
int
cmp
pop
adc
mov
fs
sbb
jae
and
sub
or
sub
clc
repz
je
mov
xor
hlt
adc
repnz
fdiv
xchg
loopne
sbb
mov
in
mov
jnp
push
mov
xor
mov
jae
inc
pop
mov
pop
sbb
mov
mov
sub
push
fwait
aam
aam
inc
cmp
enter
testb
jns
mov
mov
mov
scas
sbb
lret
or
sub
scas
push
xchg
push
or
or
adc
arpl
add
xchg
cmp
mov
in
mov
push
fiadds
adc
sub
sub
daa
daa
cmp
lock
movsl
push
mov
xchg
jo
pop
imul
and
sub
lret
cwtl
pop
add
ja
insb
lahf
add
pushf
sub
outsb
or
pop
data16
lcall
xlat
stc
mov
lds
call
adc
mov
add
adc
xchg
shll
push
fidivrl
mov
mov
cmc
scas
sbb
and
and
add
lock
rcl
xor
test
imul
testl
or
mov
inc
pop
dec
cmp
outsb
mov
cmp
inc
hlt
or
movsb
lret
in
enter
push
add
mov
movsb
mov
fisttpl
mov
loop
insl
sarl
leave
rorb
repnz
lock
jne
xchg
and
xchg
mov
popf
popa
xor
or
aam
pop
pop
adc
gs
or
cmp
ds
sbb
and
ss
clc
negl
ja
add
jg
or
sbb
into
mov
fcoms
push
mov
movsl
dec
loop
sub
js
lea
ljmp
sub
and
cli
enter
pop
and
sti
add
xchg
xor
jae
mov
lds
and
cmpsb
stc
push
outsb
mov
lock
ror
fs
jecxz
lret
and
aas
cs
call
xchg
lock
or
and
jnp
je
adc
test
dec
and
jne
fiadds
shlb
dec
cmpsl
bnd
xor
mov
in
xchg
std
push
push
cmp
test
sub
sahf
in
push
popf
xor
cmpsl
jmp
mov
push
mov
mov
xor
cld
fwait
nop
nop
push
lods
jmp
sub
ret
xor
cmc
test
test
int
fsubl
dec
rcr
sub
add
push
mov
call
test
mov
adc
outsb
enter
mov
jmp
adc
int3
scas
pop
sub
scas
mov
jne
cmp
lods
aam
dec
xchg
aam
mov
pushf
mov
ror
xor
sbb
adc
pop
imul
out
outsl
xor
dec
popa
clc
icebp
mov
sub
dec
xor
imul
sahf
test
popa
xchg
adc
vpunpckhdq
jo
xchg
mov
int
es
sub
sbb
add
cmpsb
mov
pop
imul
shlb
push
into
adc
loopne
dec
das
fsubrs
jmp
loope
popa
lods
adc
mov
in
push
mov
pusha
pop
cmp
xor
xchg
out
in
jb
rolb
cmp
push
addr16
or
jae
lds
pop
stc
ret
mov
inc
shlb
ds
cli
test
add
divb
in
pop
xor
xor
inc
popa
out
xchg
ret
xlat
xor
incb
lods
ljmp
xchg
filds
cmpsl
sbb
les
adc
test
imul
out
jns
lds
icebp
mov
xchg
lods
xor
pop
scas
cmp
in
test
jb
sub
and
repnz
push
push
sti
adc
gs
call
scas
aad
adcl
les
loopne
xchg
mov
cmc
pop
fildll
xchg
jge
mov
jbe
xchg
jo
xorb
sub
outsb
push
cmp
es
shrl
lods
in
adc
mov
mov
aas
test
push
dec
shr
in
sub
outsl
push
add
pop
xor
mov
pusha
jp
cli
das
cmpsl
fsubl
out
inc
mov
jnp
xor
icebp
mov
fisttpl
aad
pop
nop
in
scas
push
push
fisubrl
out
testb
jmp
lahf
jg
testl
sti
push
sbb
movsl
js
inc
adc
mov
jp
js
cmp
mov
neg
lcall
mov
adcb
div
gs
call
js
mov
add
rcll
dec
leave
xor
dec
push
push
mulb
movsb
fsts
call
lret
cmp
dec
test
push
mov
pop
lret
mov
inc
lret
pop
test
add
popf
jb
cmc
sbb
xlat
inc
imul
filds
inc
in
lea
adc
mov
cmpsl
mov
iret
inc
xor
lods
sub
and
outsb
mov
cltd
dec
test
frstor
sub
inc
rcrb
or
shll
jl
pop
out
push
fisubl
jne
inc
adc
fldenv
fs
sub
js
sub
cmp
mov
mov
cmpsl
idivb
scas
imul
arpl
repz
inc
and
pop
jecxz
xchg
dec
jle
or
popa
push
lock
fildl
pop
out
mov
fyl2x
mov
xor
loope
jmp
psllq
pop
pop
mov
test
loop
and
sbb
push
das
mov
js
lods
nop
lods
add
je
inc
push
adc
xchg
pop
xor
js
ljmp
mov
mov
icebp
sbb
pushf
dec
inc
inc
adcb
add
daa
daa
fsqrt
jp
push
xchg
mov
push
add
das
lods
mov
xor
divb
add
nop
fdivl
push
ret
daa
popf
dec
out
add
or
cmp
jae
js
mov
repz
data16
icebp
sub
mov
fwait
or
xchg
pusha
adc
lahf
sbb
loop
cld
inc
fnsave
jne
in
negl
or
xor
data16
icebp
mov
orl
repz
mov
outsb
fs
test
mov
stc
loopne
xchg
mov
or
rolb
jecxz
xchg
ret
push
mov
nop
push
test
xchg
pop
std
cmpsl
fnstenv
dec
push
data16
cmp
scas
mov
xor
sbb
inc
loopne
jns
les
out
lret
adc
outsl
sub
insl
fcoml
fimull
mov
arpl
pushf
imul
bound
addb
aaa
push
test
int
in
ss
rcrb
repz
xor
cmp
iret
iret
into
popf
add
push
adc
add
das
push
sub
decl
je
xchg
pop
and
pop
dec
xchg
popa
fsts
inc
mov
addb
cmpsb
dec
pushl
sub
mov
and
leave
pop
xlat
add
stos
ss
inc
mulb
xorb
mov
inc
js
sbb
cmp
jle
xchg
out
jns
lock
and
imull
test
cmp
fwait
incl
cs
adc
pop
js
jg
sub
ret
mov
mov
fs
imul
pop
push
lcall
mov
jb
ret
nop
sub
mov
jne
cwtl
cli
pop
jp
or
addb
dec
clc
cs
push
fsubs
int
inc
cmpsl
mov
mov
lcall
xor
lock
shr
das
push
push
and
cmpsb
jns
stos
fisubs
int3
add
push
mov
ds
mov
add
sbb
mov
fsts
movsl
xorl
ret
rcll
mov
add
int3
cltd
pushf
mov
dec
jmp
fldl
pop
xor
adc
cmp
lcall
inc
cmc
insb
stc
rorb
fdivs
xchg
icebp
cld
outsl
xor
mov
jbe
push
lods
fldcw
rorl
sti
ss
xchg
mov
pop
mov
cmpsl
das
inc
dec
cmp
cmc
jb
push
xor
cmp
pop
and
stc
je
xor
inc
loopne
leave
and
or
xchg
pop
push
addr16
jge
icebp
xor
sub
xchg
aad
sbb
xor
stc
pop
sub
sbb
int3
jno
in
pop
sti
imul
xlat
icebp
adc
sbbb
mov
adcb
movsb
sub
lcall
inc
pop
popa
sbb
mov
cmp
or
fdivrl
test
xor
push
pop
iret
xor
push
or
add
push
sahf
jbe
or
mov
movsb
sbb
je
xchg
notb
lret
pop
xchg
stos
xchg
fisttps
cmpsb
rol
pop
das
sbb
stc
imul
mov
adc
gs
pusha
cwtl
or
adc
lret
nop
in
or
in
or
hlt
jg
adc
add
dec
cld
sbb
sbbb
inc
dec
loopw
xchg
out
call
sar
or
dec
mov
mov
and
scas
pop
addr16
cmp
jmp
push
mov
stos
jo
cld
inc
mov
into
gs
sbb
je
bnd
js
arpl
mov
out
sbb
mov
pop
cmpsl
enter
enter
int
ja
repnz
sbb
push
inc
lcall
xor
jle
imul
pop
jecxz
push
lods
jbe
in
xor
add
and
mov
pop
mov
add
test
cvttps2pi
jle
push
mov
lds
mov
stos
or
rcrb
and
loopne
and
int3
clc
lahf
imul
fbstp
pop
dec
fcoml
stos
call
sbb
loop
dec
cmp
inc
fistpll
popf
inc
push
xor
sub
jle
jnp
fdivrs
jecxz,pn
add
xchg
popa
fnstenv
pop
xlat
cmp
mov
lret
jnp
je
push
inc
fldenv
pop
mov
dec
xor
outsl
adc
imul
xchg
mov
cmp
adc
insl
loop
dec
subb
sbb
testb
dec
sbb
xor
mov
inc
ja
and
or
out
es
mov
mov
negb
push
xor
or
and
inc
in
push
fldenv
push
pop
add
pushf
mov
int
lret
dec
dec
and
cld
ret
imul
inc
push
xor
mov
cmc
jbe
loop
or
int
fstps
add
mov
xchg
outsb
ffreep
mov
push
ror
sbb
mov
mov
inc
loop
lret
popf
xchg
push
adc
or
and
dec
lea
faddp
shll
adc
mov
call
cltd
dec
sar
shll
lds
add
jl
mov
cmp
loop
test
mov
dec
int
mov
fnsave
cmp
aad
mov
dec
jp
mov
aam
movsl
mov
dec
into
jle
push
push
daa
adc
jb
inc
mov
sbb
daa
pusha
jne
inc
loop
out
or
mov
ja
push
out
adc
dec
xchg
addr16
mov
ja
imul
call
push
std
and
or
subb
jbe
stc
repnz
sti
inc
or
adc
jae
rcrb
mov
pop
ret
jg
lahf
hlt
in
fdivrs
or
ret
fsts
rcll
scas
jge
movsl
fdivs
or
mov
sub
out
fiaddl
outsb
fsts
in
xchg
outsb
lcall
xor
scas
fisubl
ljmp
fiaddl
mov
outsl
push
jecxz
adc
dec
into
idivl
arpl
cmp
lock
xor
xchg
outsl
mov
cmp
es
push
push
insl
jmp
lds
cmc
cmpsb
sarl
push
lahf
inc
js
imul
je
arpl
and
or
push
scas
and
jmp
das
fstpl
fwait
popa
cli
mov
mov
imul
scas
cmp
mov
adc
dec
adcb
mov
mov
sbb
jns
ret
std
pop
hlt
jae
sub
dec
inc
ss
movsb
test
mov
cmpsl
frstor
xor
mov
push
xor
xor
lahf
push
xor
repnz
sbb
subb
stc
bound
xlat
pop
shlb
mov
fs
sub
jge
sbb
pop
xchg
cmp
push
or
mov
fsubr
les
in
sub
aas
adc
insb
jg
sbb
ss
shrb
int
stos
pop
mov
pop
mov
stos
xchg
xlat
pop
cmpsb
pushf
jnp
cmp
loop
test
jae
or
arpl
xchg
adc
sbb
mov
test
and
mov
mov
cld
mov
mov
dec
jge
mov
jg
popf
dec
jns
insb
xor
xor
push
push
jl
test
loope
jbe
test
and
mov
mov
and
fiaddl
push
movsl
and
loop
or
jle
popf
push
sub
mov
xchg
fidivl
sub
adc
jmp
mov
adc
dec
in
jmp
dec
jo
fld
pop
mov
mov
inc
pop
loopne
insl
jne
mov
inc
xchg
fs
jno
dec
pop
mov
xor
shl
dec
and
pushf
rcll
mov
xchg
jmp
into
sbb
pop
dec
scas
pop
pop
js
cmc
hlt
add
adc
pop
testl
pop
mov
insl
cmp
cmpsb
movsb
xchg
mov
sub
enter
inc
lock
xchg
ret
adc
xchg
int3
jne
insb
or
leave
adc
push
ja
mov
ja
ret
pop
jnp,pn
stos
std
and
mov
idivb
sub
icebp
adc
dec
inc
jae
mov
dec
dec
jge
xor
call
das
mov
data16
sbb
insl
imul
cltd
mov
int
jnp
aaa
repz
add
pop
cmp
lcall
enter
cli
fistps
shll
rolb
and
add
jp
fldenv
push
sub
icebp
cltd
or
xchg
divb
cmc
inc
stos
imul
leave
pushf
or
mov
pop
shll
movsb
cmp
mov
xor
xchg
mov
stos
jle
xchg
jg
and
cmp
inc
and
push
fdivp
add
stos
icebp
lcall
in
or
movsl
push
mov
fcomps
lds
and
fs
lea
pushf
aad
mov
jae
ret
dec
and
call
stc
xor
jmp
sbb
popf
mov
mov
pop
pop
scas
addb
push
shll
outsb
push
jo
add
sarb
dec
xor
cmpsl
inc
cmpsb
aam
subb
arpl
cwtl
inc
jno
pop
rclb
inc
xor
inc
sahf
cmp
mov
in
arpl
insb
pop
inc
push
pop
jge
xchg
push
lds
inc
adc
or
jmp
push
fistpll
adc
sbb
jp
out
fwait
rcrl
test
or
data16
cld
xchg
pop
shrl
pop
mov
sub
adc
stos
sarb
test
dec
xor
push
and
repz
sub
andl
pop
repz
leave
loope
mov
pop
fstpl
mov
add
sbb
fdivrp
cmpsl
jae
inc
cmpsl
nop
inc
adc
sub
pop
pop
addr16
lahf
push
mov
fmull
popf
inc
mov
fstl
pop
lds
popa
sub
data16
bound
xlat
cld
push
outsb
fmull
shr
sahf
clc
ss
inc
ret
inc
mov
pop
fcomps
ret
inc
dec
leave
mov
dec
pop
scas
pushl
gs
testl
fildll
fildl
jmp
mov
ret
pop
out
jae
and
aas
imul
inc
lods
mov
repnz
cmp
enter
pop
lea
push
pop
and
pop
icebp
cmp
gs
jmp
xchg
test
sub
inc
shrl
in
and
js
and
scas
xlat
sub
ljmp
jg
or
sub
xlat
sbb
dec
insb
or
movsb
insb
rcrl
xchg
sbb
mov
pusha
push
fwait
adc
fs
pop
pop
fsubs
jne
ja
ja
pop
push
outsb
mov
sbbb
fcmovne
xor
push
testb
xchg
inc
lea
fistpl
sti
cmp
jo
jp
jae
into
dec
jl
repz
ret
and
mov
out
mov
push
cltd
out
xor
popa
mov
mov
mov
jmp
lods
lret
mov
mov
jns
dec
lret
xor
push
dec
psubusb
cmp
sbb
and
cmp
loope
xor
jns
push
xchg
or
movl
fwait
nop
pop
jne
enter
xchg
aaa
out
dec
nop
cmp
fmull
mov
and
dec
stc
push
ret
push
mov
fnstcw
sbb
sbb
push
inc
mov
mov
pop
rcl
mov
mov
int
mov
or
ljmp
js
movsl
and
push
movsb
xchg
inc
xor
inc
push
into
roll
rcr
mov
xchg
cmpsb
mov
fs
or
decl
and
mov
cmp
inc
xchg
cmp
pop
movsl
and
ja
or
ret
lds
out
pop
fstl
jg
mov
lahf
test
fwait
mov
sbb
scas
outsl
xchg
fcoms
dec
testl
jb
mov
mov
xor
push
pusha
xlat
jnp
ja
test
or
add
aam
imull
pop
and
negl
les
pop
sarl
mov
mov
lahf
fs
lahf
dec
sahf
call
sbb
into
popa
fcomp
push
leave
ftst
es
lods
jmp
lds
js
aaa
repnz
push
sub
mov
xlat
adc
test
scas
out
imul
pop
lea
mov
cmp
orl
jnp
std
shrl
mulb
into
jmp
adc
sub
fsubrl
xor
jbe
pop
and
add
mov
mov
pop
jns
add
aam
push
into
jbe
fsubr
jle
aas
xor
aas
mov
add
sbb
push
mov
jno
ljmp
xlat
jl
mov
pop
idivl
movsb
out
out
stos
mov
out
jae
ss
lods
xchg
jg
pushf
fsubl
cmc
sub
push
push
dec
stos
mov
jbe
xchg
add
es
push
popf
std
push
jle
fwait
cmpsb
pusha
movsb
sbb
pop
push
aam
sbb
push
sbb
ret
inc
outsb
mov
jl
lret
add
inc
insb
xchg
xchg
xchg
push
mov
mov
fs
cmpsl
pop
lds
push
xchg
jl
mov
add
repz
adc
data16
rolb
inc
inc
into
test
cmp
outsb
and
jo
sbb
sub
or
mov
jns
pop
movsb
xor
orl
dec
xchg
and
mov
pop
jne
cmp
lods
jbe
mov
pusha
rcll
cmc
ljmp
repnz
pop
mov
ret
fwait
mov
out
cmp
pop
mov
inc
cmpsb
insb
adc
and
insl
dec
sbb
add
sub
xor
xor
adc
inc
add
dec
xor
repnz
out
sub
adc
sub
lret
ficompl
push
pop
cmp
mov
xor
mov
push
fsubrs
je
sub
mov
mov
mov
xchg
ljmp
mov
cmp
mov
sti
clc
daa
stos
sub
push
lret
add
mov
outsb
icebp
jl
ljmp
jmp
inc
std
sbbl
lahf
addr16
idivl
jle
repz
les
sarl
rcrl
into
adc
rcrl
and
pop
xlat
push
nop
jg
dec
out
pop
sub
mov
push
lods
jne
ljmp
sbb
mov
add
fnstsw
repz
out
jmp
inc
xor
mov
les
loope
mov
mov
mull
daa
mov
pop
into
fimuls
xchg
addb
mov
cltd
xchg
fidivrl
inc
mov
cld
aam
ret
push
pop
and
mov
xchg
imul
movsb
cmc
icebp
mov
fs
mov
xor
mov
repnz
jge
movsl
mov
cld
icebp
in
pop
scas
jbe
lret
dec
push
shll
int3
das
push
outsb
pusha
insl
lods
mov
add
jbe
movsb
in
pop
adc
push
jge
mov
and
add
int3
sub
in
jg
stos
push
icebp
in
cmp
loop
xlat
cmpsl
xchg
addr16
fs
pop
in
adc
dec
add
pop
popf
or
cmpb
icebp
pop
push
adc
inc
in
or
xchg
pop
jg
and
mov
sbb
addr16
lret
or
leave
push
je
arpl
xchg
jp
pop
loop
inc
shrb
in
popf
arpl
mov
iret
mov
xor
lock
cli
pusha
je
movsl
dec
xor
dec
mov
mov
mov
cmp
les
sub
or
sbb
mov
imul
nop
repnz
jle
mov
cmp
nop
ljmp
fucom
es
aad
ljmp
xor
fimull
jnp
fsubp
jl
cs
inc
stos
pop
cmp
aaa
pop
push
jecxz
clc
mov
sbbl
ja
cld
out
pop
cmp
dec
fstpl
test
hlt
jae
test
dec
pop
imul
lds
pop
fdivs
lods
sti
xchg
pop
bound
imul
arpl
mov
pop
sub
add
rcll
fsubr
push
mov
cwtl
xlat
mov
cltd
lock
sub
hlt
mov
lea
mov
lahf
pop
pop
mov
cmpb
pop
push
mov
push
and
arpl
scas
scas
and
shlb
xor
xchg
pop
pop
adc
lea
pushf
mov
inc
repnz
fadd
push
je
push
cmc
sti
fsubs
add
into
xchg
outsb
lcall
out
ss
sbb
inc
mov
pushl
divl
dec
mov
inc
cld
int
lds
loopne
insl
add
dec
ret
xchg
pop
push
scas
enter
pushl
ss
stos
add
dec
sub
in
notb
in
jae
repnz
push
leave
mov
adc
jl
dec
in
xchg
and
xchg
lcall
push
xchg
pop
or
cld
cwtl
jno,pt
lcall
nop
notl
scas
cmp
push
clc
cs
in
sub
rclb
gs
iret
push
popf
mov
dec
aaa
mov
pop
and
cltd
ja
in
iret
mov
scas
sbb
fwait
push
mov
jnp
aas
sub
sahf
add
inc
repnz
inc
aaa
inc
adc
aad
push
mov
in
add
pusha
fld
sbb
ja
in
hlt
stc
dec
mov
mov
ret
imul
dec
push
mov
lds
enter
dec
cmp
xchg
push
mov
leave
adc
and
mov
fsubrs
out
cmp
jl
jle
les
sbb
fldcw
mov
push
dec
sbb
js
shll
xchg
push
test
test
shrl
aas
sbb
xor
mov
sahf
movsb
mov
nop
sub
shl
sar
test
and
stc
jmp
jmp
mov
lds
lea
xor
bound
add
adc
imul
sbb
je
out
or
sarb
stos
in
mov
sbb
loop
test
push
insb
dec
repz
mov
rcr
jno
mulb
repnz
push
scas
fidivrs
sub
push
mov
or
and
fdivs
inc
lods
lahf
mov
cmp
mov
xchg
mov
movsb
popf
sub
scas
xchg
mov
psubd
jmp
out
sbbl
jnp
or
sub
sbb
frstpm(287
and
jns
add
lock
xor
inc
lock
inc
adc
and
jno
pop
jb
test
xor
mov
push
mov
inc
imul
or
sarb
dec
push
out
inc
in
lds
je
dec
paddusb
adc
out
xchg
mov
hlt
pop
jmp
bound
test
nop
incl
cwtl
push
js
xor
add
ror
push
cmpsb
scas
push
xor
popa
adc
fidivl
sbb
shlb
loopne
push
add
mov
ror
mov
cmpl
addb
xchg
jns
sti
cmpsb
loopne
pop
in
jo
jne
dec
mov
cmp
scas
rcr
mov
mov
pushf
jmp
insl
or
cld
rcr
pop
clc
cwtl
test
popa
in
or
add
push
xchg
sub
scas
jb
mov
adc
xlat
pop
pop
not
mov
xchg
cld
push
jp
cmp
fildll
xchg
add
call
outsl
cld
mov
push
scas
out
aaa
nop
jne
mov
mov
imulb
outsb
lcallw
subb
xor
mov
dec
ja
push
xor
or
int
cli
mov
mov
ret
sub
bound
ljmp
add
cli
jne
popa
xor
push
jns
adc
mov
inc
cmpb
imul
xor
mov
lods
mov
enter
lds
cmc
in
or
push
imul
cmp
mov
dec
mov
movsl
fs
mov
pop
mov
aaa
aas
and
scas
push
fs
lahf
mov
inc
adc
rcl
inc
pop
cmpsb
adc
testl
cs
outsb
xchg
imul
imul
push
call
shl
mov
std
dec
pop
mov
std
faddl
push
dec
rclb
fists
test
jle
mov
sub
jg
loopne
dec
stc
add
mov
mov
bound
mov
lods
and
and
lret
inc
cmpsb
xchg
mov
negb
mov
test
cld
dec
xchg
fbstp
lcall
sub
mov
mov
popa
jecxz
hlt
cmpsl
insl
jno
sbb
inc
repz
addr16
sbb
lock
jg
sti
add
or
cmpsb
cmp
pop
mov
sahf
add
jg
mov
fincstp
sar
mov
xchg
into
sub
push
sahf
jns
gs
fisttps
xor
sub
mov
and
cmpl
adc
or
mov
and
adc
mov
sti
cmp
push
xchg
push
lods
mov
dec
lret
jne
lods
rclb
mov
sub
fstpt
dec
and
pop
lea
jns
or
push
lcall
mov
sbb
jle
adc
mov
xchg
mov
mov
inc
and
into
insb
fnstcw
jg
jbe
filds
out
jmp
lahf
and
scas
movsb
sub
in
or
cld
incl
flds
and
out
fwait
aaa
xchg
add
dec
xor
cmp
xor
pop
xrelease
dec
add
cwtl
outsl
add
test
push
and
inc
notb
sbb
push
add
add
and
lret
ret
mov
pop
sti
pop
push
rorl
lods
pop
cwtl
adc
and
in
popf
sbb
jmp
cmpsb
dec
inc
aas
je
add
mov
xchg
shr
rcl
decl
push
roll
mov
inc
jae
ficomps
cld
mov
inc
iret
repz
pop
push
test
adc
or
mov
aaa
insb
and
gs
jns
push
fstpt
mov
adc
lods
dec
inc
pop
jp
mov
pop
in
les
cwtl
in
xchg
decb
sbb
dec
icebp
or
push
sbb
aad
test
fld
popf
sub
sarb
adc
inc
jb
loope
mov
test
aaa
lret
and
pushf
jmp
jns
ja
out
mov
push
jbe
enter
inc
dec
std
or
dec
andb
inc
and
adc
mov
mov
cmovg
out
or
insb
xlat
mov
popf
xlat
out
jno
in
or
in
adc
cld
stos
xchg
adc
mov
inc
icebp
add
mov
dec
ds
mov
jne
mov
je
test
mov
and
sub
out
inc
push
inc
repz
ss
out
fcompl
push
xor
lods
pop
dec
test
notl
cmp
sub
lea
cld
sahf
sti
clc
movsb
pop
or
mov
insb
in
notl
pop
les
and
mov
iret
xchg
cmp
lcall
xor
call
pop
or
loop
aaa
pop
ficomps
in
fmull
inc
sbb
mov
outsb
loopne
std
stos
xor
xchg
push
clc
int
add
xchg
repz
int
lods
notl
ss
sub
pop
dec
outsl
rorb
pop
in
sub
repnz
leave
xchg
lock
inc
mov
in
stos
mov
dec
popa
fnstsw
repz
loopne
out
xchg
fiadds
sbb
or
cmc
lahf
and
ljmp
cmp
cmp
adc
lea
xorl
rcrb
pop
cmpl
sti
cmpb
mov
rorb
pop
das
arpl
adc
inc
xor
xor
jne
in
xor
add
mov
int
lds
xchg
mov
and
das
cwtl
sub
rorl
fdivr
pop
jmp
push
cmp
push
into
fnsave
dec
aas
int3
imul
das
jg
mov
mov
je
scas
mov
mov
cmp
addr16
pop
in
out
loopne
aam
pop
sub
notb
mul
mov
je
jnp
cmp
adc
push
xor
mov
rorl
and
mov
sub
lods
shll
adc
bound
int
push
mov
push
and
mov
loope
pop
pop
outsl
xchg
inc
out
mov
clc
push
pop
push
fs
pop
xchg
dec
add
xor
bound
outsl
pop
adc
mov
pop
sub
es
das
cli
mov
push
sub
popa
jnp
mov
sbb
aaa
mov
jae
dec
test
jne
push
pop
or
popa
into
mov
sbb
push
in
add
adc
test
dec
aad
test
sbb
lahf
std
sbb
mov
bound
addr16
inc
sub
arpl
outsb
test
push
xchg
dec
jnp
cmpsb
jle
and
cmp
jg
dec
xchg
in
pop
add
aaa
dec
inc
or
sub
jb
or
ret
das
mov
mov
jns
cld
add
fucom
jmp
orb
scas
insl
xor
push
aam
inc
out
mov
hlt
mov
push
sti
insb
fistpl
outsl
dec
test
scas
mov
push
mov
or
fsub
mov
cwtl
ret
mov
xchg
pop
add
xor
and
gs
loope
movl
pop
xor
mov
inc
push
sarb
sti
je
sub
cltd
sub
lret
xchg
jns
adc
mov
bound
leave
fcoml
mov
mov
lret
aad
mov
xchg
into
or
cld
fsub
and
or
sahf
lcall
sbb
mov
fwait
mov
push
mov
out
nop
pusha
mov
mov
and
add
rcrl
mov
aas
cmp
push
lahf
add
popa
mov
ret
das
incb
push
xchg
loopne
adc
mov
push
or
aam
push
stos
outsl
loop
xchg
cmpsl
adc
mov
cmpsb
pop
das
sub
push
out
mov
cmp
idivw
sub
repz
push
adc
cmp
ret
data16
inc
rclb
shlb
add
fldl
jecxz
popf
loop
lcall
mov
test
push
or
cli
and
xchg
xor
adc
loop
clc
out
push
int3
cmc
cmp
cmp
fiadds
push
ret
sahf
outsl
iret
mov
xchg
imul
sub
hlt
ret
cmp
sub
sub
sub
xor
mov
sbb
fadds
jb
inc
movsb
jp
mov
mov
scas
add
imul
adc
jns
and
loopne
fldl
pop
imul
fimull
xchg
xchg
ret
clc
cwtl
adc
sbb
fcompl
adcb
or
mull
mov
sub
push
clc
jp
sbb
and
pop
sub
sub
in
dec
mov
and
insl
cmpsb
jo
test
cs
push
add
cmp
jo
mov
push
clc
push
pop
mov
sar
and
jns
mov
clc
cmpsl
inc
xchg
and
dec
push
sbb
call
inc
xor
sahf
imul
loop
scas
mov
cmp
pop
leave
push
cmp
adc
jmp
pop
jg
cld
xchg
shlb
shrl
cld
scas
shl
dec
and
lcall
sub
push
sbb
clc
jo
lret
adc
jae
pop
push
not
fmull
pop
movsl
fisttps
shlb
cmp
testb
pop
or
pop
std
jae
mov
outsl
mov
inc
xchg
in
je
scas
xor
bound
pop
fcompl
jo
xor
cltd
cmp
xchg
inc
cmp
jne
repz
dec
inc
cwtl
cld
push
out
inc
or
outsl
or
shll
adc
fs
sbb
add
push
jns
jp
xchg
sti
cs
iret
cld
sbb
imul
test
mov
dec
imul
sbb
test
mov
cmpsl
lods
movsl
gs
or
pushf
pop
mov
outsb
insb
add
out
jg
xor
jbe
pop
add
adc
cs
cmp
scas
stc
mov
fisttps
xor
clc
mov
lret
jbe
adc
test
add
cmp
clc
mov
or
les
mov
lret
sub
and
jecxz
inc
in
daa
xor
cmpsb
fcmovnu
jp
dec
out
jle
stc
cmpsb
xor
aas
mov
push
cmp
fiaddl
popf
in
pusha
jmp
mov
push
push
push
mov
outsl
leave
test
out
enter
lea
cltd
imul
jl
dec
rcrb
in
pop
mov
cmpsb
repz
xlat
xchg
loop
sub
scas
es
jno
sub
inc
mov
aas
and
aaa
pop
jo
fsubr
leave
lea
pop
fsts
mov
ret
mov
xlat
push
inc
repz
xrelease
fwait
mov
sysexit
subl
addr16
mov
fbld
or
mov
divl
nop
fistps
testb
inc
inc
aad
je
xor
addr16
loope
jbe
stc
pop
push
lock
dec
les
pop
xchg
dec
mov
mov
sub
dec
or
ja
lock
lahf
pop
lcall
adcb
dec
push
fildl
fildl
or
data16
les
cmp
xor
test
cmp
ja
push
fwait
mov
cmc
insb
mov
cmp
enter
or
sub
jmp
stc
xor
push
adc
mov
mov
and
daa
xchg
mov
pop
jl
xor
fwait
jb
shrl
mov
inc
push
clc
mov
adc
nop
out
insl
imull
pop
fsubl
data16
mov
outsl
sub
mov
ret
push
pop
repnz
je
in
adc
addr16
out
and
pop
movsl
pop
jns
mov
sub
cli
add
mulb
fcom
push
jp
or
jp
aad
jmp
in
cwtl
mov
popa
jcxz
jno
call
mov
pushf
int
mov
push
add
push
dec
out
or
bound
cld
lods
cltd
dec
nop
js
fwait
ds
sahf
mov
in
jae
lret
aaa
cmpsl
push
add
adc
addr16
add
gs
insb
jne
sub
test
cmp
lods
cli
cwtl
push
inc
jg
adc
sub
adc
call
stos
sbb
je
in
call
insl
rorl
push
push
mov
outsb
dec
fildll
sbbb
popa
daa
mov
xchg
push
cli
add
xchg
add
xchg
adc
mov
fldenv
jb
adc
jb
das
pushf
xor
pop
inc
and
xlat
xchg
aad
jge
add
mov
lcall
xchg
stos
stc
in
in
pop
or
push
add
fimuls
ja
jecxz
leave
mov
mov
movsb
js
fimuls
sbb
push
push
dec
mov
xorl
shrb
adc
stos
aaa
and
in
xor
imul
or
and
pop
xor
fucomi
xchg
jge
inc
mov
inc
shl
pop
cmp
bound
mov
sbb
aas
std
leave
ja
cmp
hlt
scas
fsub
imulb
mov
and
mov
xor
ja
ss
je
pop
test
cs
sbbb
inc
stos
add
es
pop
adc
outsl
hlt
jge
xchg
sub
jle
cmp
and
adc
in
fdivr
cmpsl
stos
pop
mov
xchg
jmp
jle
clc
or
orb
push
dec
xchg
sarb
push
pop
or
aaa
adc
push
inc
test
dec
insb
jg
or
fsts
in
es
addl
sarl
jmp
inc
ret
shlb
mov
and
cld
sbb
mov
ret
jg
stc
leave
sbb
jae
and
ftst
sub
andb
push
or
fdivp
xchg
pop
shrl
xchg
push
jnp
inc
inc
insb
std
nop
stos
mov
or
das
mov
jbe
les
pop
and
aaa
cmp
add
and
xchg
fstps
add
ret
into
neg
ja
mov
sahf
call
cmp
popa
dec
lods
cmc
mov
fcmovnb
insl
imul
lods
xor
out
pop
aas
bound
and
dec
js
clc
insl
mov
aas
lods
push
add
jae
mov
test
sub
dec
int3
jo
orl
outsl
xorb
or
js
jo
imul
fiadds
pop
adc
rolb
insb
jle
mov
testb
inc
sbb
push
push
insl
pushf
scas
mov
outsb
out
cmovl
outsl
das
sub
inc
cmpsl
leave
add
movsl
or
bnd
cmp
inc
mov
mov
out
cmpl
pop
and
pushw
in
and
shrl
pop
and
push
inc
push
lds
or
xchg
cmc
movsb
sarl
nop
cmpsl
xchg
out
imul
sub
or
adc
insl
push
adc
out
ja
mov
add
fisubs
or
sub
adc
xlat
int
shlb
shrb
mov
sub
dec
pop
in
and
pop
cwtl
jnp
cs
or
sub
popl
push
sub
in
call
xchg
adcb
sarb
and
movsb
enter
ss
or
add
dec
sbb
push
add
pop
jo
rol
push
xor
and
cltd
fwait
mov
add
inc
or
dec
xchg
xchg
sbb
ret
into
push
inc
scas
fisubs
js
mov
add
es
mov
or
jl
mov
inc
xorl
push
lea
dec
inc
xor
outsl
sub
xchg
arpl
jnp
mov
sub
jb
mov
movsl
xchg
ljmp
mov
inc
sbb
xchg
stos
nop
or
daa
xor
es
jle
imull
add
shrl
lahf
imul
dec
sub
jae
or
repz
in
pop
mov
or
jno
sub
repz
or
xor
mov
inc
inc
fbld
aaa
cmp
jne
je
out
push
mov
dec
aas
sub
inc
frstor
or
sahf
rorl
add
mov
and
test
mov
xor
jae
add
test
or
call
leave
xchg
mov
jnp
pop
hlt
clc
dec
inc
popf
in
mov
cmp
test
jb
push
sub
call
aaa
and
roll
adc
dec
out
xchg
jmp
mov
lods
cld
call
pop
xor
sbb
shll
bound
and
sti
jo
push
and
rolb
lahf
or
sahf
xchg
or
push
repnz
or
jno
jns
lods
xorl
ss
cmpsl
movsl
into
xchg
fwait
push
addr16
jns
and
mov
in
loope
and
jae
inc
jg
aam
inc
mov
add
mov
divb
sbb
sbb
rclb
pop
lret
aas
lahf
adc
arpl
ljmp
inc
mov
sub
into
add
jle
stos
cmpb
cmpsb
mov
out
cld
popf
adc
pop
mov
xchg
pop
sbb
cmp
xchg
gs
lea
test
adc
gs
insb
xor
enter
loopne
add
pop
xchg
inc
dec
jl
inc
dec
or
stc
xchg
ror
push
xchg
jb
dec
rcrb
rcrb
mov
xchg
add
and
rep
sub
cmc
rcrl
pop
popa
cmp
inc
xchg
mov
push
xorl
xor
pop
outsl
sub
pop
aaa
mov
mov
jb
mov
mov
adc
fwait
jae
loope
pop
push
push
xor
shll
xor
fsubrl
dec
push
lret
push
fsubrs
std
push
in
mov
jae
sub
cmp
mov
cmp
and
adc
mov
inc
sbb
adcl
fs
push
into
push
cmp
pop
movsl
cmp
aas
cmovp
mov
mov
fisttpl
ret
push
aad
bound
repz
add
and
pop
and
xor
ds
call
sbbl
ret
add
jmp
add
cmp
dec
inc
pop
mov
into
rolb
arpl
repz
sbb
out
shl
xor
inc
dec
pushf
es
loope
cmp
nop
adc
aam
xchg
inc
aas
xchg
add
lcall
hlt
js
jne
loop
stos
sub
push
shlb
int
outsl
dec
jmp
xor
xchg
and
movl
loop
lods
pop
pop
or
call
shlb
cmp
adc
push
adc
sbb
push
loop
inc
sbb
lret
cwtl
push
pop
cmp
imul
add
or
mov
imul
or
into
mov
pop
push
mov
xchg
inc
cmp
movsl
test
in
loop
movsl
ret
and
popf
or
hlt
fstpt
js
cmp
jg
pop
imull
add
sar
je
inc
outsl
out
icebp
inc
cmc
outsl
in
sbb
call
mov
les
fwait
xchg
mov
popf
add
jp
sub
adc
ret
pop
add
push
xchg
out
xchg
cmp
loopne
fistl
repz
fs
jnp
pop
test
arpl
mov
push
leave
test
dec
sarb
sbb
gs
xchg
dec
adc
cmp
and
std
push
mov
inc
or
mov
cmc
in
cwtl
lret
in
clc
imul
pop
sub
pop
fsub
sub
sub
je
pop
inc
pushf
pop
sub
repnz
lock
mov
dec
mov
and
jae
dec
rorl
mov
fsubs
addl
cmp
loopne
pop
inc
mov
sub
dec
in
ds
insb
fs
cs
xchg
jne
adc
sbb
and
fwait
clc
mov
lret
mov
mov
mov
outsl
cmp
loop
adc
mov
dec
stos
lret
jge
sbb
ljmp
inc
cmpsb
movsb
or
push
xchg
fwait
imul
mov
adc
fldcw
loope
and
je
popf
mov
sub
loopne
xchg
jge
pop
mov
ljmp
shrb
and
adc
mov
pop
inc
jp
lock
popf
sub
push
cmpl
movsb
orb
mov
mov
cmc
cmpsl
lret
mov
nop
pop
rcrb
cmpsl
rcll
jle
sub
jb
int3
lods
dec
mov
stc
sarb
xor
cs
fchs
inc
jae
mov
push
pop
movsb
mov
sub
ret
addr16
out
sbb
dec
cmp
les
push
repz
add
push
cwtl
repnz
fwait
icebp
mov
xchg
push
lds
pop
test
dec
je
push
shrl
lock
mov
mov
mov
mov
inc
sub
jnp
xor
inc
push
xor
clc
jbe
es
mov
xor
cmc
inc
xchg
in
clc
pop
outsl
inc
lret
adc
sarb
cmp
es
lcall
inc
fs
or
dec
cmc
or
xchg
jg
mov
cmpl
sub
pop
mov
rcll
loop
sbb
xlat
xchg
add
sub
mov
jmp
lret
les
dec
xor
ljmp
ss
scas
jne
stc
and
imul
pushf
cs
lods
pop
mov
xor
dec
daa
sbb
aaa
repz
sti
in
mov
clc
jl
mov
sub
push
mov
jp
fnstenv
xor
and
stos
dec
insb
sub
inc
neg
mov
inc
std
adc
in
ret
sub
out
jae
mov
cwtl
adcl
push
jo
andb
sub
mov
data16
sub
cmpsl
jecxz
xlat
out
sbb
popf
cs
sbb
push
sbb
mov
push
and
cmp
subb
mov
faddp
les
in
push
repnz
in
popa
mov
sbb
sbb
adc
int
mov
iret
loop
sbb
adc
sbb
pop
arpl
xchg
inc
fcomps
lods
cld
mov
xor
es
xchg
or
mov
push
and
jg
push
out
fldl
sbb
or
leave
icebp
push
cltd
pop
mov
fsub
daa
out
int3
aaa
jg
inc
in
mov
and
inc
mov
adc
add
lcall
mov
xchg
inc
xor
jb
xchg
outsl
int
out
inc
es
mulb
xchg
outsl
popf
bswap
sbbl
push
sbb
shll
pcmpgtw
pop
std
test
jnp
das
lahf
and
and
push
xchg
jmp
ret
sub
int3
xchg
mov
decl
mov
or
inc
mov
cld
sti
ret
jle
stos
cmp
xchg
std
mov
sbb
repz
pusha
mov
pop
dec
mov
xor
jo
jecxz
adc
aad
xlat
stos
jae
jns
ficomps
outsb
ds
int3
sub
mov
pusha
in
xchg
fcoms
cltd
add
stos
ret
cli
bound
push
jecxz
dec
inc
decb
dec
push
mov
inc
jb
aam
das
xlat
push
pop
mov
clc
js
in
xchg
inc
mov
add
xchg
hlt
leave
jae
lods
clc
inc
pop
in
data16
push
mov
jg
jns
popf
rolb
add
jne
or
cmp
iret
clc
dec
cld
mov
ret
push
sub
push
lret
jae
lcall
mov
xchg
sub
push
cmpsl
adc
and
in
xlat
and
mov
or
js
test
pop
xor
xor
icebp
pushf
mov
rcrl
jle
outsb
cmpsl
lods
sub
test
mov
lahf
icebp
sbb
divps
cmpsb
inc
out
mov
push
sub
popf
cli
aam
lods
stc
dec
push
cs
ja
hlt
icebp
pop
mov
lea
xor
sbb
in
sbb
sahf
mov
dec
add
and
xchg
xchg
test
test
jge
sub
ror
pop
pop
add
inc
xchg
xchg
lea
cmp
cmp
xchg
sbb
lds
mov
nop
xor
adcb
stc
jp
adc
or
test
cmpl
mov
lahf
bound
les
and
lret
imul
mov
cmpsl
jl
inc
test
fnstenv
aad
push
scas
sbb
dec
mov
xchg
jo
cli
pusha
and
ret
loope
mov
sti
xchg
jp
mov
jno
shll
cli
es
sub
dec
and
xchg
ja
mov
inc
or
imul
push
sbbb
clc
test
jno
pop
lds
xchg
dec
push
insl
leave
pop
lahf
cmp
xor
fwait
jae
jae
decl
fdivrl
fisubrl
pop
lods
push
je
aam
inc
jo
jg
jbe
negl
sbb
jnp
fwait
dec
ljmp
cmp
hlt
sbb
jns
sub
cmp
repz
mov
add
xor
icebp
or
cmp
leave
push
push
sub
out
adc
sbb
push
sarl
inc
pop
mov
out
jbe
sub
or
xchg
cwtl
je
jbe
xor
insb
xor
and
call
mov
sti
stos
xchg
movsl
jl
popa
inc
aaa
in
xor
incl
xor
adc
sub
add
std
ret
andl
pop
xchg
push
adc
jno
jae
xor
jbe
ror
jmp
cwtl
stos
jae
mov
ror
and
cmp
mov
out
enter
mov
add
mov
dec
xchg
lds
div
jp
daa
push
nop
jge
mov
mov
mov
inc
clc
shrl
and
fsubs
cwtl
addr16
lods
dec
aam
scas
pop
fildll
adc
jmp
ds
adc
xchg
bound
int
pop
jl
mov
xor
ficompl
test
adc
int
pusha
pop
pop
stos
mov
clc
popl
scas
or
jge
inc
fwait
repz
mov
add
pop
push
jl
ficoms
cmpsl
ss
popf
enter
out
icebp
push
and
lea
add
lea
daa
aad
mov
cld
push
push
xor
ret
add
in
fldl
icebp
lcall
xor
ja
clc
repnz
xor
push
rolb
or
jecxz
add
mov
cld
jo
bound
test
scas
test
dec
sub
cli
sti
sarb
scas
pop
push
lods
and
fwait
dec
int
mov
loop
insl
int
push
cwtl
inc
ret
fidivrs
inc
sub
mov
subl
cmp
cmpsb
mov
cmpsb
movsb
rorl
imul
adc
in
sbb
dec
push
xor
cmp
push
in
dec
bound
adcl
adcb
and
jge
mov
cmc
fldt
lret
je
ucomiss
ss
jo
jle
inc
push
or
das
push
jecxz
add
repnz
repnz
xchg
mov
add
jbe
cmpl
das
xor
adc
and
sub
in
ss
test
call
insl
repz
aaa
aam
mov
push
sub
cmpsl
cli
icebp
jb
data16
add
xchg
jmp
cltd
mov
cmc
add
jge
and
jne
pop
dec
sub
jmp
rcrb
or
push
ret
jp
mov
rcrb
out
xchg
or
shl
sbb
fcoms
outsl
adc
ljmp
leave
jmp
outsl
dec
subb
jmp
jle
adc
xlat
movsl
sub
fsubrp
sarb
nop
leave
or
icebp
and
cmp
je
notl
movhps
scas
inc
sub
dec
pop
sbb
and
xor
cwtl
cmp
rcrl
push
idiv
xor
or
mov
jmp
out
sbb
leave
mov
pushf
add
jecxz
arpl
pop
in
jle
fwait
sub
scas
aam
adc
dec
add
mulb
outsl
ret
push
pop
stos
stos
mov
jge
xchg
lcall
out
jmp
mov
data16
pop
cs
cmp
push
and
mov
adc
or
int3
jecxz
mov
inc
pop
pusha
adc
jecxz
into
in
sahf
adc
ja
cmp
cmp
inc
mov
lret
loope
inc
repnz
or
fistpll
cmp
jb
dec
xlat
xchg
mov
pop
cmp
movsl
jne
in
adc
loop
cli
cmp
fs
push
or
pop
pusha
and
inc
add
inc
mov
add
in
sub
mov
xchg
sbb
push
cmp
mov
test
rorb
rcrb
loopne
mov
mov
adc
popa
sbb
mov
inc
mov
roll
jmp
push
call
fsubrs
das
sti
xchg
lret
add
mov
in
jae
rol
and
pop
sub
push
rcrb
push
mov
pop
je
enter
fwait
aam
add
mov
push
pusha
jo
popf
movsb
test
cmpsb
xchg
adc
cwtl
mov
sbb
nop
cmp
mov
cmp
icebp
loope
call
push
add
xor
out
clc
insl
jb
push
mov
pop
std
mov
add
inc
fldl
jns
add
test
cli
or
inc
loope
pop
fsubrs
out
adc
mov
icebp
lods
pop
dec
movsl
sbb
cmp
add
sahf
mov
sub
cltd
insl
lea
icebp
mov
push
adc
adc
lods
jb
push
lahf
fildll
xchg
sbb
mov
imul
pop
ret
leave
les
addr16
inc
insb
je
push
sub
push
jle
fisubs
cmpsb
rcrl
ret
imul
xchg
add
fistpll
mov
sbb
add
ja
pop
int3
push
jmp
fildll
xchg
daa
std
xchg
mov
cli
shll
mov
mov
mov
bound
cmp
jle
dec
xorb
ljmp
cli
rcrl
sub
sub
call
outsb
push
into
imul
jge
mov
dec
clc
sub
bound
jns
lds
adc
movsb
inc
fcmovnbe
cmp
push
mov
mov
fisubrs
ds
adc
and
mov
push
mov
push
push
mov
add
iret
sub
pushf
sbb
pop
andl
lcall
sbb
push
mov
adc
mov
pop
fmull
stos
or
mov
inc
stos
ja
addr16
sti
pusha
hlt
popf
aaa
push
add
inc
jmp
les
or
lea
xor
and
das
and
repz
arpl
test
out
lods
fiadds
mov
cmc
in
mov
in
xchg
sbb
xor
inc
mov
mov
cmp
adc
sub
dec
mov
add
mov
dec
movsl
pop
push
pop
ret
and
mov
negb
adc
shll
push
mov
and
inc
in
test
sbb
mov
test
fidivrs
xchg
adc
mov
out
xor
cmp
cltd
jg
sahf
cmp
lds
sbb
cmp
insl
mov
dec
aaa
push
popw
dec
fidivrl
cmp
jo
outsl
jmp
cs
mov
mov
jbe
xor
lea
fistps
or
test
les
into
xchg
mull
das
cmp
daa
fidivrl
or
mov
jo
scas
push
lods
lods
sahf
cli
jo
jge
lock
jecxz
scas
add
lahf
inc
or
mov
dec
and
mov
in
decl
xor
cwtl
sahf
lods
cmp
bswap
push
sti
int
repz
pop
mov
pop
mov
dec
mov
fucomi
inc
out
xchg
orb
xchg
mov
mov
cld
into
xor
scas
dec
mov
cmp
in
fsubr
push
test
sub
sahf
addr16
stc
lahf
call
outsb
cld
mov
add
mov
push
and
cld
push
dec
int3
dec
mov
stos
mov
sbb
in
adc
mov
jl
popf
or
inc
shlb
and
pop
and
aaa
shll
daa
sbb
fmull
add
jne
mov
xor
and
lcall
adc
push
push
xor
push
shl
loopne
std
roll
ss
mov
je
cltd
add
mov
push
iret
lcall
jle
or
mov
pop
xchg
xchg
pop
mov
push
mov
loope
add
mov
idiv
add
in
mov
ljmp
test
shll
push
inc
cmpb
pop
out
test
lret
inc
or
or
nop
add
sbb
sbb
pop
adc
xor
cmp
aaa
xchg
inc
jmp
fdivrl
push
cmp
cli
test
add
imul
mov
inc
out
scas
xor
or
xlat
pop
inc
xor
ss
push
mov
imul
cli
test
or
testb
imul
aam
loopne
incl
xor
shlb
imul
inc
incl
and
inc
pop
loope
mov
add
jne
mov
mov
andl
and
mov
sub
sub
sbb
mov
inc
mov
loopne
mov
sub
push
aas
and
pop
stc
ljmp
or
cli
cmc
fcmovbe
iret
xchg
or
xchg
scas
mov
ss
mov
or
xchg
lods
dec
mov
daa
lock
fucom
in
lcall
call
pop
adc
xchg
out
scas
repz
out
sti
xchg
stc
mov
jb
ja
pop
inc
lods
sub
iret
mov
mov
mov
xchg
aas
loop
ja
xchg
jg
add
dec
orl
mov
push
adc
stos
or
mov
div
inc
xor
xor
test
cld
pop
movsb
fwait
bound
mov
jbe
sub
and
std
test
js
clc
stos
movsb
sbb
mov
cmp
pop
addr16
inc
push
or
outsb
mov
imul
inc
insb
pop
int
leave
dec
outsl
cmp
mov
shrl
sub
and
mov
gs
pushf
dec
dec
sub
ss
push
sahf
test
in
inc
pop
xchg
fdivl
mov
mov
movsb
loope
nop
fbld
dec
xor
fcomps
daa
or
push
loope
pushf
jno
ds
add
adcl
and
roll
mov
pop
ret
std
adcb
inc
mov
addr16
lret
loopne
subl
leave
sahf
rclb
stos
fadd
mov
push
xchg
cltd
sbb
das
push
shr
in
test
adc
popf
adc
xchg
dec
add
adc
imull
cld
push
and
xor
aaa
lret
pop
pop
lds
mov
aam
roll
or
sbb
cmpsl
gs
pop
push
pop
xor
inc
rorl
xlat
dec
movsl
fsubrl
enter
lahf
lods
loop
or
movsb
pusha
mov
xor
popa
push
call
xor
inc
cmc
cmp
jne
or
cwtl
shlb
pushf
jg
xchg
cmpsl
and
movsl
nop
lea
mov
daa
pop
lea
aas
pop
movsb
inc
shlb
adc
sub
mov
into
rcrb
mov
mov
and
cwtl
lods
mov
mov
dec
push
test
mov
iret
mov
xlat
xchg
sbbb
xchg
popa
stc
dec
jecxz
cmp
or
dec
mov
jmp
jb
addr16
rol
or
add
pop
int
inc
rclb
add
push
lock
sbb
ds
sub
enter
sbb
clc
stos
das
aas
xor
imul
aas
add
xchg
test
sbb
cltd
popl
add
sub
mov
mov
loop
pusha
fcmovnu
jle
fildl
add
mov
add
pop
or
and
cld
mov
fisubrl
jmp
aas
push
mov
lods
mov
pop
jg
je
enter
sub
js
adc
test
and
dec
iret
addr16
push
xor
insl
add
mov
dec
sub
push
clc
dec
out
cmp
or
inc
fnstenv
push
xor
jle
xchg
adc
jb
dec
ror
sbb
and
rolb
mov
aaa
fnsave
aam
xlat
add
divl
add
aam
mov
je
inc
lods
ret
or
movb
pusha
out
lahf
mov
data16
jg
add
sbb
pop
pushw
mov
clc
roll
imul
push
mov
jbe
add
std
andl
push
xor
in
xchg
pop
dec
sub
ret
test
mov
jae
jnp
inc
fimull
sub
fsubs
in
xor
xchg
and
pop
les
sbb
repnz
cmp
xchg
fsubrp
dec
add
out
adc
pop
xchg
sbb
dec
inc
mull
push
sub
inc
aaa
xchg
loop
cmp
dec
adc
and
pop
jl
xchg
push
cmpsb
adc
jbe
aad
push
dec
pop
add
sbb
adc
xor
imul
pop
and
add
push
addr16
mov
loopne
inc
jg
mov
mov
jne
shrl
adcb
hlt
and
mov
dec
sbb
jb
imul
mov
jp
in
fbstp
leave
sub
push
mov
sub
xchg
xor
jp
jg
sahf
push
push
in
ljmp
pusha
sbb
ja
cli
jge
pop
fs
js
xchg
xlat
mov
aas
dec
std
xor
jmp
imul
aam
or
imul
pop
imul
ret
sbb
daa
test
mov
fsubl
arpl
or
movsl
inc
xor
mov
sub
into
hlt
xor
out
lods
addr16
jb
repnz
xor
dec
sbb
push
shl
add
inc
daa
dec
inc
mov
sbb
in
add
push
add
sbb
aam
das
mov
fwait
ljmp
ret
xchg
push
enter
dec
cmpb
iret
nop
jp
mov
xchg
mov
aad
lods
bound
jae
lahf
xor
jl
sub
ljmp
and
cli
hlt
repz
fdivrs
cmc
cmp
inc
fldenv
scas
jbe
mov
pop
push
popf
andl
daa
jle
xchg
rsm
add
or
loope
imul
out
rcrl
jg
inc
push
pushf
movsb
bound
or
xchg
sub
or
or
fbld
xchg
movsb
mov
push
ret
xchg
inc
test
push
mov
into
mov
daa
push
daa
push
scas
add
push
les
cmp
loop
cmp
dec
fadd
pusha
or
popf
test
movsl
or
push
scas
jmp
pop
mov
stos
test
xor
inc
test
mov
cld
or
mov
jno
scas
fimuls
dec
int3
jno
mov
pop
shlb
rorb
push
icebp
arpl
pop
jae
and
jl
scas
pop
stos
pushf
push
mov
inc
fsubrs
fistps
les
ljmp
xchg
cmp
subb
popl
pandn
pop
rcll
repz
inc
std
dec
imul
jecxz
jae
inc
mov
jle
loope
dec
mov
lcall
and
inc
inc
pop
lock
adc
divps
push
fcmovu
lret
ja
mov
pop
mov
jbe
inc
test
daa
dec
push
into
adc
out
add
shl
push
popa
sbb
addl
sub
cmp
adc
ss
push
aad
mov
insl
push
out
lods
inc
pop
pop
and
outsl
cwtl
popl
sbb
cmpsl
add
sbb
add
bound
adc
loopne
mov
mov
xchg
mov
sub
pop
xor
cmpsb
xchg
scas
fsub
adcl
or
mov
cmp
xor
inc
inc
mov
add
jo
outsl
jne
sbb
fsts
push
xorps
lea
ficoms
repz
sbb
push
sbb
mov
outsb
cmp
push
mov
bound
sub
sub
lahf
ja
insl
pusha
push
jno
into
pop
mov
pop
mov
push
aas
xlat
cmp
lret
add
mov
nop
push
out
lcall
lock
add
xchg
lcall
mov
flds
out
cmpsl
xchg
arpl
jg
loop
scas
inc
or
les
mov
and
pushf
cwtl
or
outsb
je
cli
in
fsubs
lcall
aad
sub
xor
mov
popa
int
jl
test
jnp
xchg
xor
gs
cmp
jns
jns
in
les
add
and
xchg
mov
fbld
push
in
jge
leave
lds
lcall
sub
hlt
fsts
je
or
roll
xchg
xchg
repz
fs
push
add
or
stc
mov
sub
test
mov
and
dec
sub
lock
sbb
icebp
cmp
add
stos
lds
std
mov
xor
rcr
xchg
clc
xor
or
pusha
pushf
mov
sub
in
stc
pop
or
aad
xchg
jge
fmulp
xchg
or
js,pt
idivl
pop
outsb
loop
and
jg
push
xor
testl
loopne
mov
mov
push
xchg
jb
out
rcrb
int
dec
std
dec
jge
repz
shll
in
add
dec
push
les
sub
out
mov
cmp
push
pusha
sbb
out
or
lock
in
and
cs
cmp
ret
jecxz
dec
cs
xor
jecxz
in
jmp
push
in
push
shll
jp
pop
mov
mov
inc
sub
jne
jbe
push
hlt
ljmp
push
cmp
repnz
jl
cwtl
mov
or
punpckhwd
lock
dec
mov
inc
icebp
add
or
movlps
addr16
clc
orb
stos
cmp
jg
ds
int
xor
mov
mov
cmp
mov
push
cli
mov
adc
cld
scas
lret
jg
mov
adc
sbb
fisubl
int
insb
push
xchg
test
shl
sbb
clc
jge
bound
sub
imul
mov
or
cmp
loope
js
pop
popa
imul
fistpl
pop
xchg
addr16
push
call
mov
mov
std
jb
test
or
mov
and
push
push
inc
fidivs
inc
push
jnp
ffree
mov
fidivrl
cmp
imulb
mov
fcompl
push
xchg
and
inc
rorb
lea
out
cmc
and
loop
add
fwait
sarb
outsl
mov
addr16
mov
pop
fwait
mov
lods
mov
scas
cli
lret
arpl
cmp
sbb
lret
mov
sub
cmp
mov
icebp
xchg
xchg
mov
sub
or
mov
movsl
jno
xchg
loop
xorl
mov
inc
mov
xor
or
je
inc
jo
call
mov
dec
and
inc
cli
inc
leave
push
jo
pop
push
and
jbe
adc
pop
pop
gs
push
dec
sbb
xchg
aaa
add
jbe
xchg
test
xchg
lods
mov
adc
scas
push
jnp
les
daa
mov
mov
and
in
call
ret
jle
dec
testl
in
jb
jle
aam
ss
ljmp
cmp
mov
sbb
xchg
fisttpll
push
js
icebp
ljmp
out
dec
push
lds
cld
jl
mov
or
or
pop
and
lods
daa
mov
arpl
shll
inc
aaa
bound
push
jne
testl
cmp
data16
cmpsl
jns
xlat
jp
lods
adc
mov
out
cmp
lcall
cs
outsl
rolb
or
xchg
pop
add
cs
push
cmc
mov
push
jl
mov
out
or
push
xor
xchg
cs
mov
out
dec
mov
daa
sbb
cwtl
dec
jno
or
pop
jns
nop
jne
rcll
jl,pt
xlat
cltd
sbb
cwtl
sub
shll
imul
and
inc
dec
push
pop
sub
pop
mov
in
cltd
dec
or
mov
jnp
sbb
andl
pushf
mov
in
adc
repnz
xchg
xchg
test
mov
lock
lahf
cltd
fwait
inc
mov
xor
sub
mov
insb
outsl
or
fsts
hlt
inc
data16
fldcw
jne
insb
or
xor
test
inc
movsl
dec
mov
outsb
into
cmc
mull
push
out
je
ljmp
imul
in
popf
and
jge
dec
lret
cmp
movsb
cmp
push
mov
sub
sbb
out
sbb
imul
test
sub
notl
sbb
push
jo
xchg
js
std
dec
call
and
mov
inc
xchg
cmp
jp
jge
lahf
popf
pop
adc
or
in
mov
test
out
cmpsb
leave
sbb
push
jo
ljmp
int
cmp
cld
jmp
pop
and
pusha
xchg
test
jecxz
jns
jecxz
fstps
mov
mov
inc
out
or
das
mov
xchg
inc
stos
adc
xchg
movb
or
mov
mov
hlt
mov
sarl
push
push
inc
mov
ss
xchg
push
add
push
and
pop
fs
or
adc
addr16
mov
in
aam
push
movsl
push
arpl
ret
loope
push
push
mov
aas
jnp
and
cmp
add
or
adc
xor
scas
mov
inc
mov
mov
out
jnp
ja
flds
leave
call
movsb
jle
xor
ret
inc
adc
outsl
mov
dec
or
jo
ret
inc
push
push
or
ljmp
lods
mov
xchg
iret
jmp
pop
inc
jbe
rorb
les
add
enter
mov
and
mov
add
fcoml
inc
sub
ss
sbbb
loopne
jo
iret
clc
cmpsl
insb
in
cltd
arpl
pop
jg
fs
mov
test
int
aad
mov
movsb
inc
inc
aas
inc
mov
xchg
aaa
ret
cmpsl
mov
outsl
leave
bound
jmp
testb
ja
jne
add
rol
xchg
jnp
lea
test
xor
lret
mov
push
scas
bound
fisubrs
add
jns
outsl
hlt
mov
out
les
mov
je
xchg
bound
cmp
cmp
outsl
sub
popa
dec
inc
dec
cmp
and
push
jnp
andl
pop
ret
jno
repnz
fwait
xor
dec
xchg
shlb
lods
aad
out
repz
sbb
out
inc
lahf
lods
ja
bt
imul
mov
push
xor
pop
out
or
test
testl
xchg
popa
mov
jae
sub
push
cmc
dec
mov
repnz
scas
push
rcrl
arpl
cmpsl
je
dec
iret
xchg
mov
push
int
fsubrl
mov
mov
test
and
sahf
int
sbb
stos
sahf
int3
imull
jl
es
flds
lods
xchg
pushfw
ja
retw
jge
or
int3
mov
dec
xchg
pusha
mov
adc
test
les
xor
xchg
inc
ret
sahf
and
and
mov
mov
fstps
inc
sbb
and
sarb
pop
repz
lock
sarb
mov
int3
xchg
test
adc
add
outsl
mov
or
enter
dec
dec
jecxz
fldenv
in
cmp
out
mov
jecxz
pop
cmp
lahf
insl
stos
inc
and
int3
outsb
jp
mov
pop
lret
lock
adc
dec
sar
push
push
cmp
pop
xchg
or
sbb
lock
imul
jns
fdivl
push
stos
lret
push
stc
xor
mov
lret
jae
and
notb
pop
xlat
add
mov
pop
push
pop
orb
scas
or
fisttpl
cmp
cmp
int3
fmuls
jle
xor
push
imul
add
daa
mov
sti
jp
cmpxchg
mov
dec
push
or
fcoms
aam
stos
mov
adc
jge
dec
cmp
popa
pushf
push
js
int3
fnstsw
cmp
int
jns
xchg
mov
mov
adcl
pop
inc
in
cmp
push
ja
pop
mov
gs
jns
lds
ss
mov
adc
or
ret
out
mov
clc
nop
subl
dec
out
outsb
dec
icebp
mov
cwtl
mov
call
lahf
aam
mov
jl
in
movsb
shrb
sti
lret
daa
xor
dec
jbe
dec
daa
jg
outsl
stc
lea
pop
sbb
fs
xor
movb
arpl
inc
jle
cmp
pop
aad
cmp
subl
and
jb
movsb
xlat
xchg
pop
adc
or
mov
mov
dec
popf
shll
nop
mov
rcrb
cmp
add
roll
jmp
push
test
push
les
loopne
add
outsb
adc
int
lret
mov
sub
cmp
cltd
shl
rcrl
pop
or
mov
enter
aam
in
xchg
mov
xor
mov
add
rclb
push
jg
jle
xor
test
int
inc
add
shr
sub
roll
sarl
lahf
sbb
jmp
ret
pushf
nop
ret
in
push
sbb
mov
inc
sbb
ret
and
cmp
add
jb
jge
fsubs
push
sub
sub
lock
in
les
and
into
and
fwait
jb
mov
fiadds
pushf
cmp
in
mov
xor
inc
adc
shl
enter
push
cltd
subb
mov
jae
mov
lds
push
inc
sbb
outsb
shll
push
sub
dec
adc
nop
lret
outsb
fld
sti
mov
dec
mov
je
rclb
imul
dec
mov
jne
inc
dec
inc
pop
xchg
xchg
cmp
inc
aaa
arpl
push
popa
pop
out
mov
xor
push
cmovg
loop
mov
insb
scas
test
cmp
nop
sub
adc
je
inc
cmp
mov
jecxz
mov
lret
xor
push
add
add
push
xchg
loopne
hlt
loope
adc
shll
fcmovnb
adcb
jne
dec
dec
jmp
in
movsb
jno
dec
or
and
adc
lea
adc
scas
or
pop
sbb
outsl
pushf
push
mov
dec
mov
sbb
lods
imul
ds
cli
mov
mov
adc
sub
sbb
mov
jle
xchg
adc
adcb
shll
rcrb
lahf
pushf
arpl
add
loope
mov
je
test
sahf
cmp
xor
xor
adc
add
lahf
arpl
test
faddp
jp
ljmp
repnz
or
imul
or
push
sbb
and
sbbl
lret
adc
mov
pop
cmp
ret
or
loope
mov
in
daa
pop
dec
jg
loop
ja
cs
push
cwtl
cs
repz
dec
fcompl
cmpsb
out
add
mov
aad
mov
xor
cmp
adc
add
sbb
cmp
pusha
out
outsb
mov
test
pop
xor
dec
rorb
js
cs
jmp
or
xchg
cltd
daa
dec
imul
jnp
mov
or
mov
mov
pop
xchg
ret
lea
xchg
fwait
cmc
insb
fistpl
inc
push
and
and
mull
pop
sub
push
or
xchg
mov
scas
aad
inc
imul
icebp
loope
mov
sbb
add
mov
jmp
xor
jg
call
movsl
sub
jae
es
xchg
cli
fwait
xchg
mov
jp
pop
dec
xchg
dec
xlat
xor
seto
mov
int
rclb
or
icebp
jp
lock
repnz
sahf
iret
popf
rolb
lret
jecxz
outsb
cltd
aaa
in
mov
imul
leave
xchg
xchg
mov
sub
sarl
cmp
inc
xchg
out
jle
fbld
xchg
dec
sub
jns
push
test
lds
ds
xor
and
cmpsb
mov
dec
pop
add
push
sti
mov
in
xchg
sahf
jae
les
rorl
or
je
adcl
xchg
aas
mov
sub
and
je
call
jge
inc
scas
mov
arpl
arpl
repz
mov
rcl
jle
shlb
insl
push
xchg
cs
lcall
add
xlat
aad
mov
rorl
sbb
pop
scas
stos
les
cmp
test
cs
sar
rclb
mov
shl
add
jmp
mov
mov
outsb
mov
aam
pop
int
or
mov
lods
or
imul
push
jg
test
xor
push
sahf
cmp
push
test
loope
rorl
xchg
addb
fcoml
popf
dec
add
insb
pop
or
ret
test
movsl
bound
sbb
xchg
loop,pt
bound
mov
pop
pop
lcall
lahf
addr16
daa
jo
or
sbb
pop
dec
mov
push
test
xchg
adc
inc
ret
mov
lcall
in
lods
lds
inc
sub
and
cmpsb
daa
add
repz
xor
cmp
jnp
xchg
repnz
rclb
mov
lea
pushf
sub
stos
data16
cli
std
xchg
repnz
mov
and
jae
and
cli
cmp
subb
lea
les
inc
jns
mov
xchg
and
pop
inc
inc
popa
hlt
stos
in
into
call
jne
outsb
fidivl
movsb
push
pop
pop
ret
in
cs
jae
mov
repnz
jae
scas
fisubl
bt
sub
setno
lock
pushf
lahf
outsb
cmp
adc
ret
ljmp
or
inc
cmpsl
js
lods
and
adc
mov
adc
push
adc
popa
imul
jo
and
addb
pop
imul
sub
ds
mov
adc
jmp
mov
push
out
fldenv
push
push
sub
xchg
xchg
mov
addr16
out
push
add
sub
dec
jge
jmp
mov
ror
mov
xor
cmp
push
cmp
lock
rclb
mov
xor
inc
mov
ss
decb
xchg
mov
push
pop
lcall
adc
bound
mov
imul
lea
aas
sub
pop
fwait
lahf
pop
push
out
mov
mov
in
sub
adc
stos
mov
imul
pop
cmpl
inc
loopne
fsubrs
sbb
mov
out
sbbl
inc
push
orl
add
and
div
outsl
test
mov
cmp
pop
rcl
ret
and
and
daa
ret
popa
fwait
add
shlb
xchg
loop
adcl
pop
jmp
jmp
xor
or
out
xor
test
data16
xchg
jle
es
sub
je
adc
dec
push
inc
icebp
jle
shrb
adc
call
shlb
popf
xchg
and
mov
fldcw
push
xchg
inc
xchg
stos
or
mov
jnp
xor
mov
xchg
sbb
and
jns
inc
pop
mov
xchg
mov
sti
subl
int
aam
push
pop
scas
fidivl
outsl
fisubrs
fdivrp
cmpsb
and
pushf
test
mov
mov
fxam
xchg
rol
fs
pop
push
push
out
sbb
push
xchg
decb
push
xorb
mov
lock
push
frndint
xchg
sbb
loop
xor
inc
and
ljmp
or
or
cmp
push
test
xchg
mov
add
push
jno
xor
inc
mov
jecxz
popa
mov
jb
scas
jmp
test
lods
notb
xor
push
fisubs
sbb
mov
adc
pop
cld
mov
and
arpl
add
ds
pop
mov
sub
test
xchg
call
add
insb
arpl
cmc
add
adc
hlt
lds
leave
fisubrs
lock
sub
push
dec
leave
dec
arpl
addr16
int
cmp
pop
or
jg
adc
jo
jno
fdivrs
dec
push
dec
sarb
outsl
sti
or
jne
jmp
fstpt
dec
pop
xchg
es
add
dec
out
addr16
cmp
out
testb
scas
imul
and
lcall
mov
pop
sti
in
scas
call
and
out
jo
sub
add
pop
inc
lods
inc
lds
sbb
pop
jns
mov
imul
aaa
cmpsl
cmpsl
cmpb
mov
clc
call
dec
or
jae
outsl
jne
ret
mov
icebp
mov
fucom
adc
cmp
adc
push
mov
add
lahf
loopne
inc
mov
jo
out
add
mov
sub
test
mov
cmp
sub
dec
jae
jecxz
stos
outsb
imul
pop
or
icebp
es
xchg
adc
adc
pop
nop
fisttps
mov
ret
cmp
xchg
sub
cmp
lea
jbe
sbb
loope
shlb
inc
test
sbb
repnz
xchg
roll
jns
and
adcl
and
popf
lahf
pop
pop
and
fldl
clc
cmp
mov
xor
outsb
mov
mov
pop
adc
sub
fninit
imul
jmp
push
xchg
pop
mov
pusha
ljmp
and
iret
inc
xchg
pop
mov
int3
dec
jnp
test
push
xor
cmpsb
rolb
nop
and
fldt
sub
lock
imul
dec
xchg
dec
lahf
scas
jnp
xor
xchg
gs
or
dec
push
jnp
push
jle
adc
out
pop
mov
dec
dec
std
push
adcl
mov
fldenv
js
stc
xchg
loopne
sbb
mov
jge
outsl
jp
dec
jmp
sbb
jg
mulb
arpl
sub
ss
test
sub
mov
adc
mov
mov
addr16
gs
cmc
je
arpl
icebp
adc
or
in
add
outsb
mov
sbb
mov
cmp
test
and
imul
shll
dec
push
test
or
push
jmp
cmpb
mov
cmpl
mov
test
cmp
jbe
fdivl
fwait
mov
fsubr
jle
pusha
dec
push
stc
jmp
out
imul
sbb
mov
cmpsb
scas
out
jmp
pop
div
mov
std
leave
mov
inc
cmpsb
dec
adcl
sti
mov
bound
je
fcompl
xchg
shl
nop
test
lock
in
imul
neg
xchg
bound
es
ss
jns
pusha
or
mov
pcmpgtw
sbb
lods
imul
cmpsl
aas
insb
jmp
or
test
fisttps
int3
in
cmpsb
movsb
pop
stos
mov
outsl
shrl
gs
out
movsl
push
cli
aaa
pop
in
push
mov
sub
inc
sub
mov
push
mov
in
mov
inc
or
sub
mov
xor
jmp
cmpsb
mov
int
test
stos
xchg
jecxz
pop
imul
jge
sub
lahf
or
and
jae
dec
or
and
mov
pop
pop
jb
aad
sbbb
mov
cmp
inc
jno
cmp
out
rorb
xchg
ljmp
fisubs
push
adc
adc
movsb
rol
into
xlat
cwtl
xor
pop
pop
notl
jb
into
call
mov
popa
pop
push
subl
mov
push
fidivrl
jne
hlt
pop
fsubrl
movsl
cmpsl
sarb
jge
push
mov
jle
loopne
fistpl
mov
lods
scas
push
mov
iret
cmpsb
inc
vminsd
notb
out
lret
fimuls
cmc
pop
in
popa
inc
sbb
mov
add
or
fs
imul
pop
pop
lods
add
bound
or
mov
pop
sbbl
out
pop
dec
add
outsl
scas
sbb
jmp
fisubs
adc
push
or
cmpsl
or
repnz
cmpsl
sti
mov
stc
mov
cli
fldcw
lock
push
fwait
lret
mov
push
xor
ds
jb
pop
fisttpll
in
xor
cltd
mov
stc
mov
dec
or
cmp
in
dec
mov
dec
push
popa
les
cmc
cmpsl
jp
jae
addl
pop
lock
mov
imul
movsb
cmpsl
scas
mov
ret
scas
jmp
loop
rclb
and
and
jg
fcoms
mov
fnstcw
mov
pop
scas
sbb
mov
push
jno
in
mov
insl
pop
insl
outsl
jecxz
pop
inc
mov
jmp
cmp
ljmp
into
pop
pop
stc
into
and
int3
lcall
jle
and
pop
jle
in
cmp
mov
sbb
inc
fdivrs
push
xchg
cld
dec
aas
cli
testl
jle
icebp
cld
inc
dec
adc
jecxz
xor
mov
ret
outsb
clc
mov
jnp
aam
aam
mov
ret
iret
cmp
insl
out
pop
leave
iret
movsl
aad
inc
popf
sbb
aas
jp
adc
or
xchg
and
outsb
sbb
jmp
sbb
mov
inc
je
xor
jne
push
mov
ljmp
sub
cmc
inc
mov
popa
push
das
xlat
and
stc
adc
fcomps
sar
fstps
dec
sub
icebp
jmp
mov
lret
hlt
mov
cmc
xchg
sub
rcl
hlt
test
stos
mov
mov
test
test
psllw
jb
es
out
xchg
int
out
xchg
hlt
fwait
or
out
xor
xchg
mov
and
mov
out
hlt
sahf
push
xchg
push
ror
mov
jmp
inc
leave
mov
sahf
hlt
lahf
lcall
xor
rorl
dec
pop
dec
sahf
mov
imul
or
push
mov
jo
push
lods
jb
gs
loop
cli
dec
jno
pop
loop
aas
repnz
sub
xchg
loopne
push
fwait
sbb
pop
jns
cmpsb
ror
mov
lods
fimull
lods
ret
cmpsb
add
ret
mov
sbb
xchg
aad
xor
pop
shl
loopne
mov
push
in
dec
jb
mov
adc
jge
or
add
scas
sub
out
repnz
xchg
popf
inc
or
lret
js
jno
xchg
jg
xorl
or
lock
stos
sbb
jp
xor
xchg
arpl
addr16
xchg
mov
sbb
ss
push
enter
mov
popa
sub
scas
inc
aas
ljmp
adc
pop
icebp
xlat
inc
pop
mov
out
pop
stos
scas
test
dec
cmp
mov
jge
xchg
cmpsl
lds
and
jecxz
fs
outsl
inc
push
imul
loope
push
in
adc
dec
ljmp
fnstsw
mov
sbb
dec
sub
cld
out
or
push
mov
sahf
sbb
push
xor
hlt
enter
xchg
cmp
and
out
jecxz
or
cmp
movsb
pop
leave
cs
aad
ljmp
adcb
or
fnstenv
std
in
push
and
pop
in
mov
dec
mov
shrb
popf
fwait
sub
loop
daa
subl
xchg
gs
push
das
lds
push
mov
and
dec
mov
push
cmp
loopne
movsb
loope
das
fs
mov
jmp
mov
cs
add
add
cmp
gs
jle
fsubrl
iret
xchg
into
mov
pop
aas
or
xor
xor
clc
cmc
rcl
dec
bound
ds
sub
outsl
sti
push
mov
inc
or
adc
mov
testl
inc
add
mov
adcl
adc
repnz
pop
push
fmul
cmp
jl
mov
pop
mulb
movsl
testb
iret
mov
and
pushf
in
out
or
inc
sti
mov
cmpsl
sti
pop
repz
mov
xchg
or
dec
jle
fs
xchg
dec
roll
test
imul
jb
decl
xor
add
test
cmc
jb
sti
arpl
xchg
sbb
or
addr16
mov
aad
sub
pop
xchg
push
mov
mov
jg
aam
scas
pop
test
mov
inc
pop
adc
jmp
inc
cli
sar
dec
add
mov
push
lcall
mov
stos
ja
pcmpgtw
jns
push
mov
xchg
pop
movsb
pop
mov
mov
sub
daa
pop
hlt
adc
push
test
scas
xchg
insb
jb
shll
cltd
jp
adc
xorb
dec
in
fistpl
movsb
mul
xor
xchg
mov
mov
mov
push
mov
sarb
test
popa
dec
cvtps2pi
adcb
lahf
mov
enter
pop
push
mov
sbb
sub
mov
movsb
dec
push
push
in
ss
mov
cmpsb
or
mov
and
xchg
inc
cmpsb
adc
push
inc
sbb
std
insl
mov
mov
pop
pop
push
sbb
addr16
pushf
pop
dec
outsl
arpl
pop
ret
inc
add
push
pop
jbe
mov
sbbb
stos
fs
lahf
bnd
adc
push
jo
roll
shrl
mov
fs
shll
push
adc
jo
cmp
push
sbbb
lret
and
popl
imul
mov
and
les
dec
inc
lods
ljmp
jae
fsubr
fistps
cltd
add
dec
stc
sub
xlat
jp
test
cltd
js
jmp
loope
aaa
insl
mov
push
pop
test
and
xor
add
cmp
int
xor
shll
mov
ss
cli
lret
push
dec
dec
scas
je
inc
lret
jnp
pop
test
jp
hlt
fwait
push
cmp
xchg
pop
jl
dec
adcl
pop
mov
pop
aas
fisttpl
mov
push
mov
sbb
push
and
out
dec
mov
push
xchg
aam
jmp
dec
subb
inc
sbb
jle
enter
add
cmp
pusha
sbb
les
xchg
add
inc
dec
cmp
insb
dec
ds
xchg
mov
push
adc
stc
int3
mov
insl
fneni(8087
dec
push
mov
inc
outsb
sarb
and
mov
push
loopne
mov
out
push
or
mov
xor
in
fcompl
and
dec
in
xchg
lods
fidivl
mov
out
xchg
jne
xchg
xlat
sbb
outsl
jae
cmp
jle
ficomps
mov
out
outsl
jp
pop
cmp
in
mov
xor
jb
mov
test
cmpsb
cmc
int3
insl
adc
int
sti
mov
push
leave
loopne
loope
dec
inc
sbb
xor
leave
dec
push
lret
cltd
sbb
negb
xor
aam
mov
mov
inc
inc
mov
jnp
cmc
std
cmp
jmp
xchg
push
mov
movsb
pop
sub
movsb
out
sbb
jne
pusha
inc
adc
push
cmp
mov
add
int
mov
inc
sahf
divb
dec
or
pop
fsts
pop
shrl
mov
adc
push
sbb
sub
sub
dec
xchg
pusha
aas
inc
incl
sbb
cmpb
stc
test
jno
lock
jl
popa
jle
pop
sub
add
test
sbb
add
scas
push
out
sbb
cmp
and
xchg
js
loope
testl
pop
mov
cmp
lret
mov
jb
jmp
and
les
mov
in
dec
pop
push
cmpsl
pop
cmp
lret
shll
cmp
in
lahf
inc
mul
cmpl
jno
pop
xchg
icebp
mov
dec
push
andl
dec
mov
nop
jo
push
jp
repz
push
fcomip
mov
ret
pop
xor
and
cld
das
call
lahf
sub
lods
jecxz
push
cmpsl
test
push
cltd
aaa
and
pop
push
cmp
inc
sbb
insl
sub
pop
arpl
or
xchg
test
int3
out
imul
fildl
mov
jp
ja
pusha
loopne
and
fwait
adc
fnstsw
push
jecxz
cltd
cli
mov
xor
cmpsl
rorl
sub
and
mov
jle
cmpsl
or
lods
mov
dec
nopl
popa
or
jae
js
sub
cmp
std
jno
cmp
add
loop
ja
mov
sbb
xor
mov
pop
adc
and
rcrl
mov
arpl
xor
insl
jb
mov
pop
verr
scas
addr16
mov
andb
popf
into
dec
pop
call
addr16
jp
sbb
add
mov
repz
jp
inc
aas
push
or
xchg
cmp
popf
stc
fsubr
dec
sbb
and
mov
mov
fwait
jns
xchg
adc
or
divl
add
sub
cmc
iret
enter
pop
mov
jne
xor
lret
enter
add
repz
xor
cmp
xchg
adc
int3
fsubrs
xchg
push
pop
sbb
push
push
pop
lcall
loopne
push
xor
test
test
and
test
lock
push
or
mov
orb
loopne
xchg
fcmovne
jbe
cltd
jo
push
out
xchg
mul
rcll
fdiv
push
add
clc
lret
mov
icebp
inc
subb
insl
in
lret
jne
sub
les
loop
jg
outsb
sub
out
cwtl
mov
jp
mov
fistl
hlt
jns
outsb
xchg
mov
push
mov
std
into
push
jbe
sahf
cmc
sub
incb
xor
fucomp
sub
add
xor
aaa
sub
pop
leave
sahf
adc
sarl
push
xor
fmull
movsb
adc
enter
sub
push
mov
out
addb
push
jo
icebp
mov
enter
mov
push
js
loopne
in
jns
mov
call
mov
mov
rcr
push
int3
sbbb
xor
or
jns
pop
movsl
sbb
xchg
lock
fcoml
mov
sarb
pushf
cs
daa
cmpsb
stos
out
cmp
dec
lods
xor
out
dec
and
lock
xchg
bound
das
dec
xlat
pusha
pop
xor
int3
pop
stc
mov
cli
xchg
addr16
dec
int3
sub
lret
sub
mov
sub
dec
sub
lret
call
cmp
push
lods
xchg
and
xor
leave
add
and
cmp
dec
daa
jmp
mov
xlat
lcall
mov
or
data16
fs
mov
adc
adc
filds
fwait
push
inc
push
loope
push
push
cmp
test
mov
mov
xchg
or
popf
xchg
outsb
hlt
jbe
popa
sbb
sub
daa
sar
imul
roll
into
inc
jns
fbstp
insb
aaa
fisubs
inc
pushf
add
rorl
mov
xlat
cmp
jle
pop
jle
sar
jns
movsb
cs
cmpsl
jmp
aam
leave
mov
jecxz
push
mov
jno
add
pop
and
rorb
sub
adc
pop
and
adc
mov
xor
adc
add
and
or
sbb
adc
lods
popf
jecxz
pop
pop
popf
stc
out
or
lret
sbbl
in
jb
test
sbb
addr16
iret
pop
pop
jp
or
aas
jmp
pop
inc
add
popf
sbb
sub
cmpsl
and
filds
and
daa
das
mov
cbtw
push
sub
pop
push
mov
add
arpl
aad
mov
xor
mov
lret
aam
loope
lcall
stc
push
call
cmc
jne
into
fsub
sti
stos
or
in
mov
push
pop
jecxz
arpl
jo
stos
or
jle
aaa
jbe
mov
call
cmp
push
orl
test
aaa
popa
push
cs
out
cli
loopne
mov
pusha
cmpsl
mov
aam
out
sahf
ret
mov
clc
call
add
xchg
cmpl
ds
push
out
mov
repz
js
imul
in
sbbl
inc
icebp
jns
movsb
inc
xlat
and
xchg
sub
mov
shrb
pusha
mov
aam
filds
dec
in
loopne
mov
mov
ljmp
jmp
push
mov
loopne
mov
xor
sub
fnstsw
popl
test
jnp
fiaddl
lea
jne,pn
ret
fidivs
mov
pop
or
mov
jg
mov
add
sbb
dec
les
jle
mov
pop
jl
sahf
mov
jge
ret
push
sar
cmpsb
sub
inc
jno
pop
insb
mov
fcmovnbe
stos
lea
loop
jae,pn
inc
xchg
push
mov
cli
shl
divl
mov
es
in
icebp
fsubs
inc
jp
lds
cmc
sub
xchg
fwait
pop
loope
or
in
int3
mov
insb
or
sub
ljmp
jmp
lcall
fldl
or
fs
ficoml
and
jge
pop
inc
pop
push
jnp
mov
cmpsb
push
pop
mov
enter
xchg
dec
test
mov
cmp
jns
loope
test
sub
jo
inc
stos
out
jno
inc
adc
mov
imul
jo
xlat
sbb
xor
inc
in
jg
pop
fidivs
gs
inc
out
dec
pop
jo
popf
cs
xchg
repnz
in
flds
and
gs
push
cmc
test
pop
roll
xchg
jg
pop
mov
aas
mov
xchg
pop
stos
push
out
stos
pusha
icebp
cwtl
sbb
dec
rcll
fwait
ss
ds
adc
jb
pop
xlat
ljmp
or
hlt
test
jne
pop
cwtl
mov
jle
mov
sbb
outsb
cwtl
inc
scas
out
imul
dec
mov
xchg
fidivrs
dec
jl
movsl
jae
and
call
dec
pop
popa
into
push
mov
test
addb
push
in
lods
fidivrs
fcmovne
mov
sbbb
adc
lahf
test
adc
adc
or
pop
shr
fmuls
popf
aas
jp
pop
mov
loopne
pop
dec
mov
ljmp
scas
cmp
sub
repz
pop
test
lret
pop
je
mov
ret
xchg
loope
lcall
sbb
in
jno
into
xchg
ret
inc
add
clc
or
stos
rorb
repnz
push
imul
xchg
scas
fildll
fs
dec
mov
mov
xor
mov
xor
jle
cwtl
dec
sub
xchg
sub
pop
das
dec
mov
dec
sarb
xor
jl
adc
jbe
fcoml
hlt
and
pop
cli
imul
pop
sub
dec
repz
mov
pop
lods
fisubrs
and
add
mov
loope
lret
fistpll
outsl
aaa
mov
aad
sbb
xchg
ja
sbb
ss
pop
inc
push
cmp
sbb
or
ja
out
mov
jp
adc
rorb
notl
test
popf
test
dec
lcall
push
stc
pop
cmpsb
xor
lea
insb
test
sbb
fildl
and
popa
sarl
cmp
pusha
in
int
pop
shrb
outsb
cmp
stos
in
cmp
inc
mov
cld
and
in
sbb
cmp
aam
mov
lock
push
inc
push
push
test
in
imul
cmp
mov
jnp
dec
fbld
cmc
sbb
stc
jnp
xchg
lock
fdivs
and
cmp
cmp
imul
push
adc
faddl
or
push
mov
jns
sbb
iret
sub
std
sbb
outsb
fistl
fsubs
fdiv
rorb
fimull
sbb
mov
cmpl
nop
cmp
inc
jl
cmc
sti
lods
or
and
inc
adc
cmp
mov
xchg
jp
mov
mov
sti
faddl
aam
sbb
scas
cmpl
pop
subb
pop
lahf
dec
in
mov
ret
ljmp
ja
pop
and
imulb
add
adc
ficompl
sub
das
lds
push
mov
inc
adcl
jp
add
nop
repnz
stos
shlb
insb
ljmp
divb
pop
aam
mov
imul
and
fs
and
push
xor
out
icebp
mov
push
out
mov
mov
jno,pt
movsl
pop
pop
int3
ret
push
iret
add
int
lcall
mov
aam
adc
aam
es
mov
push
insb
ds
in
loope
cltd
cmp
repz
inc
mov
shll
mov
repz
sub
xchg
pop
mov
les
and
cmp
cmp
call
push
pop
xchg
mov
push
call
jae
iret
sbb
add
scas
in
cmp
xor
arpl
aad
dec
stc
call
filds
cmp
mov
adc
ret
mov
dec
in
int
pop
sub
insl
cmp
xchg
xor
addb
insb
daa
inc
dec
les
mov
cmp
fucom
mov
push
dec
bound
or
leave
das
cwtl
cmpl
inc
inc
insb
stos
test
jnp
dec
pusha
inc
xchg
addr16
mov
in
adc
call
xchg
xor
outsb
fmuls
or
loope
je
or
insb
mov
pop
ljmp
aas
loopne
add
xchg
jle
pop
out
pushf
mov
mov
xchg
adc
lret
stos
aas
xchg
and
sar
lret
ret
cmp
add
insl
sub
dec
jle
xchg
fcompl
test
cld
ljmp
insl
xor
shrb
lock
adc
insl
or
dec
test
xchg
sub
loope
repz
dec
rorb
popf
lds
cs
stos
int3
inc
and
adc
add
hlt
add
adc
xchg
shll
push
adc
mov
sub
enter
xchg
cmp
gs
int3
or
in
cmc
and
or
bnd
popf
add
pop
or
pop
in
pop
dec
sbb
std
aad
mov
or
or
sub
test
or
mov
test
jns
push
hlt
fldcw
lods
mov
xor
fmuls
cltd
and
aaa
or
dec
leave
xor
test
lahf
cmp
fsubs
adc
daa
xchg
imul
inc
int3
ljmp
add
lcall
dec
lds
and
pop
push
push
xchg
pop
je
mov
lods
or
popf
enter
iret
push
leave
lret
push
test
popf
or
stc
outsb
je
mov
mov
cltd
xchg
add
cmp
in
clc
cld
mov
push
jl,pt
or
jnp
je
add
sti
sub
ljmp
repnz
jno
add
xchg
adc
dec
xor
jne
push
cmp
or
test
repz
push
outsl
stos
inc
mov
ds
sbb
stos
mov
mov
cmp
or
and
jle,pt
insb
adc
cld
xor
fwait
xor
enter
dec
stos
sub
lea
in
ror
addr16
xor
push
orb
inc
xor
sbb
cli
jns
rcr
sbb
lea
or
rcrb
jg
cmpsb
fucom
stc
sub
stos
mov
inc
add
xchg
mov
inc
adc
mov
and
dec
fdivl
aaa
out
shrb
xchg
clc
pushf
or
lcall
sbb
xor
lods
sti
adc
mov
cwtl
movsl
shl
xchg
cwtl
ret
bound
je
adc
shlb
fwait
sbb
add
test
adc
ret
pop
cmp
xor
ja
sbb
jecxz
negl
mov
mov
push
aad
pop
ljmp
mov
dec
fs
fnstenv
idivl
mov
aam
mov
pop
pop
dec
dec
mov
fldenv
popf
aas
and
and
into
push
jg
sbb
outsb
repnz
mov
loopne
xlat
mov
cmp
cmp
lcall
and
push
movsb
repz
xchg
lret
outsb
cld
sbbb
jg
xor
fisubrl
or
push
cmp
or
fcomps
dec
mov
xor
inc
shlb
leave
mov
xchg
or
clc
sub
je
push
test
inc
mov
lea
fsubr
lock
push
mov
daa
jb
les
add
sbb
cmp
xchg
outsb
iret
mov
mov
pusha
div
sbb
ds
out
ss
or
lock
imul
mov
fists
add
xchg
fimuls
cwtl
daa
mov
jno
lods
jmp
or
mov
mull
sbb
shll
mov
and
ret
lahf
mov
pop
je
inc
gs
jl
aad
and
arpl
adc
and
test
push
flds
add
mov
es
loop
cwtl
sti
mov
push
fisubrs
stos
jb
cmp
enter
mov
cld
testl
xor
and
and
xchg
das
xchg
jp
hlt
inc
push
inc
xchg
in
leave
aam
sub
in
shrb
subb
pop
or
data16
enter
popf
mov
cmp
shrb
outsb
cmp
add
jmp
and
inc
lea
lock
lods
mov
add
mov
mov
dec
out
dec
stos
and
jno
cmp
pop
dec
call
test
xor
test
mov
les
adc
imul
xor
aad
out
hlt
sub
jnp
notl
mov
addr16
pop
out
mov
loope
ljmp
mov
idivl
adc
test
in
shll
lds
scas
lds
fbld
xor
dec
xor
mov
or
adc
mov
iret
test
ljmp
sub
mov
add
sub
push
cmp
push
mov
jecxz
push
push
jbe
dec
and
cmp
test
xchg
sub
jno
mov
xor
add
pop
and
and
push
outsb
add
out
push
add
lock
je
inc
mov
lcall
fsincos
imul
jb
pop
rcl
negl
add
addr16
je
into
xor
jl
jge
sbb
add
mov
outsl
ja
lea
fs
add
adc
jns
jbe
pusha
int3
fisttpl
sbb
shlb
and
mov
inc
xchg
pop
fcoml
fcom
jns
in
negl
lods
ss
rolb
mov
fbld
jno
ljmp
jge
and
or
insb
ds
xor
mov
mov
loope
mov
mov
jnp
sub
andl
lret
inc
xchg
jg
lcall
pop
xchg
xchg
lods
mov
dec
inc
aas
jmp
lods
repz
jo
ljmp
xor
addr16
mov
popa
xchg
shlb
dec
cltd
in
outsl
mov
fdivrp
out
movsl
xor
pop
xor
enter
test
insl
jmp
das
jnp
sub
dec
outsl
add
adc
cmp
outsb
jp
outsb
call
out
ja
jmp
pushf
popa
push
test
sub
popa
push
sbb
stc
call
pop
std
jne
mov
push
loope
pop
lea
mov
push
scas
lret
into
jmp
testl
add
add
out
sbb
fnstenv
sti
lahf
loop
es
sub
cmp
xlat
inc
js
cmpl
aad
cld
or
les
pop
scas
xchg
fdivs
pop
push
mov
out
or
stc
jl
xchg
js
jecxz
push
dec
call
gs
dec
sarb
adc
cmp
cmp
ljmp
jl
xor
lret
mov
out
push
enter
push
push
xchg
xchg
jl
inc
les
sub
jle
push
xchg
int
rorb
fstl
jmp
subl
xchg
mov
mov
xchg
sbb
jle
loopne,pn
nop
scas
xor
add
lds
inc
dec
push
lcall
fcmove
cmp
ss
adc
jp
mov
ss
sarb
mov
mov
je
xlat
mov
icebp
mov
notb
das
movswl
es
cmp
xchg
repnz
scas
aas
or
sbbb
lds
cmp
pop
es
xchg
lods
cs
aad
mov
jge
scas
stos
adc
mov
adc
inc
xchg
scas
xor
mov
mov
std
push
mov
jl
fsubs
dec
idivb
ja
push
insb
push
ljmp
fisttpll
lret
cmpsb
dec
sub
movl
shrb
pop
dec
inc
pop
scas
push
push
adc
mov
shlb
push
pop
push
lods
cs
sub
push
out
ljmp
int
cmp
inc
ss
push
pop
pop
inc
stos
repnz
lock
jns
mov
inc
cmp
dec
test
and
mov
xor
sbb
inc
push
pushf
aad
shl
icebp
inc
or
or
lret
pushf
push
add
mov
adc
inc
mov
xchg
mov
aad
test
dec
hlt
and
js
xchg
cmc
add
ja
push
les
mov
imul
imul
je
pushf
popa
pop
xchg
mov
fidivs
dec
lock
inc
mov
pop
insb
sbb
clc
fcmovbe
out
pop
push
xchg
sahf
pop
jb
dec
add
jno
pusha
cwtl
faddl
loopne
cld
lea
jae
popa
mov
outsl
or
pop
mul
loope
jno
lock
xchg
inc
adc
xor
cmp
xor
xchg
lds
xor
inc
pop
sbb
js
test
std
in
imul
ret
add
jns
in
outsl
loop
aaa
movsb
enter
cltd
jne
mov
lcall
jns
mov
xor
les
mov
bound
inc
bound
jge
xchg
fisubrl
xchg
push
sbb
dec
jmp
add
or
add
sbb
cmp
lret
lods
jno
xchg
aam
fdivs
cld
pop
pop
test
mov
stos
in
sahf
sub
adc
lea
mov
jae
arpl
inc
mov
fwait
and
sub
jbe
enter
andb
mov
mov
push
or
add
xor
das
sub
jne
cmp
inc
es
js
xlat
push
cld
arpl
adc
mov
mov
add
mov
insb
sti
mov
mov
mov
push
cmp
sub
aaa
sahf
cld
and
in
fcmovnb
add
xchg
pop
in
repnz
das
pop
sbb
lahf
jge
lcall
pop
shlb
mov
and
or
stos
push
dec
das
addl
jb
mov
and
jmp
xor
outsl
out
pop
fwait
add
adc
xchg
cmp
cmp
mov
leave
test
lcall
mov
mov
imul
outsl
inc
jae
int
or
repz
fisubs
popf
add
push
lretw
andb
fidivrl
mov
lahf
test
inc
mov
mov
xchg
mov
xchg
std
cmpsb
xchg
add
push
sub
aad
into
mov
cmp
push
lret
pop
push
pop
fwait
call
pop
adc
xor
mov
gs
js
ja
dec
mov
add
pop
mov
scas
test
jns
shlb
es
or
add
into
leave
inc
jle
out
std
ja
push
sub
xchg
jecxz
and
je
inc
sbb
pcmpeqw
shl
and
lods
pop
add
xor
xchg
shl
into
push
or
in
mov
int
jns
jecxz
scas
aas
push
shll
into
jmp
mov
adc
mov
stc
in
lods
adc
repnz
sbb
mov
xchg
or
push
cwtl
jmp
shl
out
sarb
fiaddl
cld
ds
push
scas
sgdtl
ret
bswap
std
push
mov
sub
mov
scas
in
je
add
adc
in
imul
stc
xchg
rclb
sti
jo
inc
lds
adc
mov
test
shll
sub
or
and
cmc
test
sub
dec
mov
es
dec
inc
inc
cmpsl
sarb
xchg
leave
jp
pushf
add
mov
pop
xchg
xchg
xchg
fstps
cmp
icebp
mov
cld
mov
test
mov
addb
out
pop
dec
adc
add
arpl
jo
jl
xchg
mov
enter
xchg
or
cmp
testl
hlt
arpl
jl
add
test
fsubr
push
xchg
cmp
fldl
mov
cld
out
in
cli
mov
mov
insl
pop
dec
sbb
pop
jmp
mov
mulb
shr
sub
jmp
std
dec
andb
cli
sarl
clc
outsb
outsb
xor
iret
loope
mov
rorl
call
mov
jmp
jecxz
hlt
and
mov
jge
pop
xchg
aam
in
jle
mov
mov
outsb
mov
mov
push
and
rcrl
fsubrl
push
popf
test
inc
sub
call
lea
push
out
faddl
inc
ljmp
sub
fnsave
pushf
mov
stos
stc
daa
dec
out
shrl
ret
rclb
or
scas
imul
lea
pop
rclb
jmp
filds
outsb
in
mov
mov
in
push
cmp
je
push
push
lods
sbb
or
es
push
stos
fwait
scas
jno
inc
inc
fcmove
xchg
lock
sbb
hlt
cli
icebp
push
mov
mov
insb
pop
sub
mov
mov
add
cmpsl
popf
pop
jmp
adc
ret
xor
outsb
adc
pop
xor
mov
les
fsubrp
mov
xchg
insb
sti
sahf
jns
xchg
divb
add
clc
addl
sbb
scas
imul
or
push
daa
pop
out
sbb
loopne
out
divl
jp
dec
mov
pop
adcb
adc
sahf
jecxz
jge
pop
cmp
jecxz
lcall
mov
inc
frstor
out
sti
ja
lcall
fwait
repnz
call
clc
cmpsl
ja
int3
icebp
ret
inc
dec
mov
subl
sub
arpl
push
out
mov
inc
jg
lods
push
inc
shll
cs
ror
adc
and
test
and
fs
aad
inc
push
push
test
jae
cltd
pop
lods
popa
inc
xchg
dec
and
out
or
lret
mov
js
push
cmp
mov
scas
les
enter
xlat
cwtl
lods
mov
xchg
cld
sub
outsl
cmc
scas
pop
adcl
jg
andb
inc
xchg
rorl
pushl
fisttpll
jns
repz
jp,pt
ror
jp
mov
mov
pop
mov
mov
jp
add
ss
push
cli
js
ss
inc
insb
pop
rol
mov
test
jbe
les
mov
inc
shll
js
les
fistpl
mov
mov
out
out
rcrb
aaa
loopne
add
push
push
leave
mov
repnz
imul
pop
out
adc
mov
psllq
pop
test
xor
adc
fs
xor
xor
sbbb
gs
fdivrp
dec
sarb
cs
insl
enter
xor
mov
pmullw
movnti
in
pop
shlb
insb
cmp
popf
mov
pop
xor
sub
test
adcb
cli
out
push
mov
xchg
ss
mov
jae
or
into
out
dec
mov
addl
fbld
lea
bound
cmp
push
dec
fbstp
pop
lret
push
mov
sbb
jo
notb
mov
add
dec
xor
scas
mov
jo
jo
pusha
icebp
popa
and
fiadds
or
mov
orb
out
mov
jg
or
or
push
arpl
cmp
sub
adc
sti
add
adc
icebp
pop
fsts
cmpsl
push
and
jecxz
inc
mov
nop
movsb
and
sbb
xorb
shlb
dec
jno
rol
mov
inc
jge
lods
pusha
pop
pop
push
je
lock
or
fs
mov
push
movsb
fcmovu
aas
sahf
jno
pop
imul
xchg
or
scas
clc
test
fnstcw
movsl
outsb
mov
movb
push
repz
subb
addr16
mov
pop
fdivrs
call
fld
shl
pusha
jns
sub
sbb
push
or
shll
andb
xcrypt-ctr
cmpsl
cltd
push
jg
cmp
jne
inc
ret
xor
mov
xor
lods
cmp
inc
mov
push
pop
or
mov
cmp
push
shrl
push
pop
fldl
lock
jmp
roll
mov
pop
and
les
lods
pop
insl
leave
fcomps
jle
xchg
insl
shrb
or
cmpsl
or
or
out
ds
aaa
out
jl
pushf
jo
shl
and
sbb
ljmp
add
push
inc
sub
iret
in
les
xchg
push
repz
cmp
insl
jg
xchg
outsl
bnd
and
xor
pop
pushf
es
pushf
notl
clc
pop
shll
xlat
cmpsb
inc
push
jge
jl
push
cli
sub
fs
and
shrl
jl
js
rcll
fxch
sub
dec
and
dec
leave
jbe
cltd
sbb
sub
pusha
lock
daa
adc
enter
add
stos
xchg
stos
rclb
or
cli
fwait
lret
lret
mov
jmp
test
dec
lahf
scas
dec
push
insl
stc
flds
popa
subl
jecxz
mov
out
mov
or
test
add
pop
fdivr
lds
out
int3
jb
cltd
mov
inc
and
adc
outsl
inc
lahf
cmp
call
divb
and
stos
mov
lods
jae
mov
aam
shll
popf
xchg
mov
xchg
jns
and
push
loopne
ss
cmp
arpl
insb
lea
or
loop
xchg
das
movsb
cmp
sub
clc
flds
jp
sbb
test
mov
int
or
ja
xor
fstpt
push
mov
or
jbe
arpl
xlat
push
mov
test
dec
mov
sub
jno
pop
and
mov
mov
aad
xor
cmpsb
enter
es
out
xchg
cmpsl
pop
enter
into
xchg
lea
jmp
mov
jmp
call
ret
adc
iret
inc
arpl
xchg
mov
adc
dec
out
clc
pop
or
sahf
ljmp
pusha
fisubrs
data16
out
pop
mov
mov
aaa
test
mov
dec
adc
xor
jbe
sub
ror
dec
loopne
jecxz
lret
jecxz
pushf
fmul
adc
mov
insb
jge
dec
aam
or
aam
cmp
push
mov
shll
shl
aas
mov
sub
in
sbb
sub
cmpl
leave
fs
cmp
or
xchg
or
dec
subb
and
or
lods
pop
insl
and
int
imul
lret
int3
cmp
adc
loope
mov
pop
add
push
loopne
lods
daa
fdivrs
test
mov
mov
imul
inc
rclb
clc
cmpsl
pusha
mov
subl
mov
lock
sbb
call
add
in
push
dec
fcomps
xchg
movsl
out
scas
sbb
movsb
scas
int
add
iret
pushf
je
movsl
es
rolb
clc
mov
jae
mov
inc
sahf
scas
jno
shrb
in
movsb
outsb
xor
adc
out
cltd
xchg
jg
adc
adc
push
mov
cmp
adc
push
pusha
in
lret
sub
lret
cmp
cmp
int
cmc
adc
or
loopne
push
call
inc
jns
push
and
lods
aad
in
ret
xchg
pop
sbb
scas
mov
cmpl
test
out
xchg
or
repnz
rcrl
mov
les
push
cs
mov
repz
out
jae
popa
clc
cmp
and
icebp
aas
pop
ljmp
inc
or
xchg
out
push
cmpb
faddl
and
dec
in
mov
stc
sbb
mov
and
test
cmp
add
iret
cmp
lds
rcrl
and
jmp
js
out
clc
pusha
ja
jecxz
roll
sbb
mov
push
adc
add
fildl
div
fildl
scas
xor
and
lcall
mov
xchg
sub
rcrb
loope
push
cmp
pop
or
xor
mov
cli
ss
push
lcall
gs
jle
test
and
dec
mov
xlat
xor
and
and
hlt
cs
in
aad
out
pop
jg
or
xor
jge
sti
cmp
dec
sti
inc
dec
pop
mov
add
out
mov
pop
inc
inc
data16
cld
jb
mov
xchg
jle
xlat
mov
sub
push
inc
decl
test
xor
adc
mov
stos
int3
add
sbb
in
and
stos
insl
xchg
ret
ret
fwait
sub
inc
test
cmp
cmpsb
sbb
fcomps
mov
pushf
ljmp
pop
inc
out
xchg
outsl
aam
sti
cmp
movb
je
cmp
xchg
mov
andl
fbstp
es
les
out
push
pop
mov
pop
xchg
sub
xchg
jbe
pop
and
lds
add
jo
pop
inc
ja
mov
cltd
add
sbb
lea
pop
aam
mov
in
xor
repz
jg
ja
movsl
mov
mov
adc
iret
sti
cmp
dec
lea
lods
dec
and
fcmovb
jb
and
popa
fadds
mov
lahf
add
mov
stos
dec
jle
xorb
test
cmp
dec
xchg
push
lahf
fucom
xchg
out
and
push
in
out
cwtl
mov
out
pusha
push
dec
repnz
int
jae
dec
dec
dec
push
ret
mov
push
mov
or
cmpb
add
and
repz
cltd
xchg
lret
xchg
cmp
cwtl
fcompl
stos
je
lea
jge
stos
push
adc
and
cmpsb
sub
cmpsl
imul
ror
shlb
push
mov
push
sub
push
mov
push
and
fsubl
negb
jbe
notb
ucomiss
ficoml
push
mov
push
push
push
popa
sahf
lahf
sub
std
inc
call
push
shlb
repnz
gs
popf
mov
les
push
test
ds
sbb
iret
adc
and
addr16
pop
mov
and
movsb
jno
lods
jno
out
jmp
or
sub
xchg
mov
lods
call
mov
sti
mov
and
push
movsl
sbb
in
mov
mov
cli
and
add
jmp
sarl
lahf
and
jbe
arpl
sub
xor
xchg
mov
stos
add
dec
ret
lret
push
outsl
shlb
dec
inc
add
loop
cmp
cmp
scas
fbstp
and
push
push
mov
pushf
cmc
push
sub
roll
mov
cli
in
sub
movsl
data16
dec
or
mov
imull
push
push
pop
in
jge
mov
filds
xor
or
jl
fwait
lods
jne
inc
mov
out
pop
leave
rolb
mov
fdivrs
adc
aad
dec
out
xor
orb
enter
cmp
mov
scas
in
lock
mov
outsb
aas
decl
scas
jle
pop
push
stc
mov
add
xor
es
cmp
inc
insb
push
xor
push
incl
cld
cmp
lcall
inc
fnsetpm(287
mov
sbb
cltd
push
aam
mov
push
cmp
add
jo
daa
pop
cs
xchg
jmp
test
inc
dec
daa
xlat
int
cmp
andl
fmul
pop
jmp
pop
mov
sar
je
scas
stc
xor
scas
fwait
dec
mov
imul
jl
mov
xor
mov
push
loopne
popa
aad
insl
sub
inc
icebp
fs
mov
mov
cli
jecxz
fst
xor
jmp
lahf
xchg
mov
pop
test
sbb
add
mov
mov
mov
repnz
sub
xor
lods
ljmp
mov
insb
cmp
and
sbb
and
xchg
ja
aad
call
jge
mov
fldl
jb
mov
arpl
jge
sub
xchg
icebp
add
cmp
nop
dec
notb
mov
push
inc
sub
aad
push
lahf
xor
popfw
cmpsl
das
push
push
movsl
add
add
movsl
jns
and
fimull
dec
add
and
sbb
push
mov
into
push
mov
fs
int3
movsb
push
and
cs
imulb
into
outsb
ja
cmpsb
subb
cltd
bswap
xchg
repnz
lods
rclb
fldl
dec
jg
mov
xor
out
data16
cli
xor
ds
pop
dec
andb
mov
cwtl
fnsave
dec
adc
out
mov
sbb
sti
pop
les
inc
dec
test
imul
push
push
mov
in
pop
xchg
mov
filds
pop
jne
jnp
adcb
mov
pop
fadds
pop
das
or
pop
sbb
loop
sub
pop
in
add
scas
push
add
mov
push
mov
mov
mov
add
xchg
jle
push
leave
sbb
cmp
mov
jle
movsb
dec
lods
insb
sub
test
ss
cld
std
mov
push
pop
shlb
std
push
adcb
add
insl
out
or
mov
mov
rcll
mov
xchg
push
clc
and
rcl
imul
push
cmpsl
cwtl
je
push
iret
dec
dec
push
mov
cmc
popa
xor
test
push
adc
push
fisttps
or
fidivrl
xchg
in
adc
adc
imul
cmp
xor
aaa
repz
pop
loopne
imul
sahf
push
sar
cld
out
shlb
ss
mov
pushf
sub
jno
xor
jp
fisubrs
cmp
and
mov
test
cmp
jmp
pop
pop
in
jmp
notl
push
dec
sbb
ds
sub
xchg
dec
mov
cmp
dec
cmp
push
test
incl
sti
xchg
out
lods
cltd
call
orl
dec
mov
or
xchg
lods
fcomi
mov
mov
jl
jbe
aas
int3
insl
lret
in
push
xor
pop
leave
data16
cli
sarl
jl
stos
add
jg
movsl
andl
jns
mov
or
jmp
dec
loopne
int3
insl
jle
lret
loop
aam
sahf
into
xor
stos
outsl
stos
lret
iret
xchg
insb
xchg
cltd
stc
mov
cmp
xchg
notl
xchg
in
dec
jo
fstl
lret
xor
imul
mov
lock
std
repnz
das
dec
pushf
jmp
stc
cmp
pop
outsl
sbbb
xchg
lret
rorb
xchg
jle
repz
add
or
xchg
shl
xchg
aas
loope
iret
daa
jne
out
sarb
fdivrl
xor
pusha
fmulp
mov
out
push
popf
in
push
push
xor
jmp
mov
sahf
rolb
orb
test
or
jno
es
stc
xchg
filds
push
mov
sub
xor
add
jnp
sub
sti
dec
mov
mov
add
shrl
ja
js
or
mov
frstor
popa
xchg
cwtl
jo
daa
adc
jecxz
jo
in
sbb
pop
or
and
sub
es
enter
stc
pop
repz
inc
and
mov
cwtl
mov
test
lret
or
mov
mov
enter
arpl
mov
frstor
push
cmp
jge
adc
add
mov
xchg
mov
nop
pop
sbb
jb
je
sbb
mov
call
lea
pop
lea
loopne
pop
fcmovnbe
cmpb
mov
dec
jnp
insb
shlb
push
add
xor
pop
mov
xor
mov
mov
jo
mov
inc
faddl
cmpsl
fisttpll
in
popa
and
frstor
xor
test
int
mov
loop
call
movsl
mov
xor
sub
pop
aaa
mov
mov
push
aaa
enter
mov
int
nop
cwtl
push
lds
enter
mov
pop
arpl
shll
pushf
cmp
cmp
dec
cmp
mov
push
dec
jo
pop
shlb
test
and
push
add
cs
add
out
fsts
sbb
push
cmc
fisubrl
adc
lods
and
push
push
div
lret
pusha
or
add
push
jno
sub
loop
mov
je
imul
les
inc
cs
dec
in
xor
fcoms
nop
ljmp
lret
fstps
cli
lds
xor
push
push
dec
fldcw
cltd
pavgb
inc
adc
fimull
pop
fsubs
inc
fwait
mov
mov
adc
pop
cltd
pop
sub
test
sbb
aam
mov
fsubs
lret
mov
add
out
rcr
bound
aam
dec
jno
pop
stos
sub
lahf
adc
mov
es
pushf
jecxz
push
sbb
ret
xchg
inc
jns
push
lea
dec
cli
mov
and
into
add
push
loope
pop
jp
ds
inc
cmc
out
stos
and
test
test
fisttpl
cmpsl
mov
pop
int3
or
or
std
mov
shrl
lods
into
shrl
pop
dec
or
filds
mov
mov
adc
push
pop
inc
dec
sahf
push
adc
jo
je
sub
xor
push
mov
mov
leave
mov
fwait
lcall
push
dec
arpl
and
add
push
mov
data16
xor
in
hlt
pop
adc
int
sub
push
mov
mov
test
cwtl
pop
push
xchg
push
leave
mov
out
jmp
lods
add
test
push
sub
repnz
inc
hlt
xor
enter
call
xchg
mov
sbbl
jl
js
pslld
sbb
mov
pop
xchg
test
jge
push
jle
dec
jmp
sbb
mov
jg
fidivrs
lods
scas
subl
xchg
xchg
and
jae
hlt
sub
and
into
dec
mov
push
repz
push
rcll
jb
ficompl
cs
cmc
mov
cmp
xchg
jb
push
inc
les
out
pop
cmc
fwait
scas
mov
inc
mov
adcb
iret
xor
bound
xor
push
or
lret
je
and
pusha
jmp
shlb
stos
xor
daa
adc
sbb
add
fistpll
jb
xchg
lret
dec
and
and
adc
sub
icebp
xlat
loope
dec
rol
mov
and
popf
gs
pop
mov
in
lods
xor
push
push
mov
adc
sbb
cmp
pop
jb
lds
jb
xor
outsb
pop
jbe
in
cmpsl
mov
scas
jo
arpl
cmp
inc
cmpsb
popa
push
imul
xchg
dec
add
cli
inc
mov
lcall
push
fdivrl
mov
in
stos
pop
bound
pop
icebp
push
mov
xchg
rorb
out
push
mov
cmp
adcb
mov
in
loop
xor
icebp
test
mov
xor
lahf
cs
out
pop
cmpsb
inc
sbb
lret
pop
mov
daa
and
pop
cmp
bound
pop
mov
fisubrs
sbbl
aas
mov
out
sbb
pop
movsb
mov
lock
in
lret
xchg
add
aas
cmc
xchg
daa
rcrl
mov
call
xchg
pop
stc
xchg
das
adc
jecxz
push
push
xlat
call
in
inc
mov
in
jp
enter
xor
adc
rorb
in
jle
movsl
adc
lea
in
int
ret
adc
mov
stc
push
scas
push
outsl
sbb
adc
pop
sti
out
in
push
sbbb
jbe
gs
sbb
fs
movsb
fdivrs
or
jns
testb
jecxz
clc
sahf
sbb
shrb
push
mov
mov
mov
stos
push
pop
or
in
in
nop
shrl
lds
xor
and
or
rep
sbb
lods
push
cmc
inc
ret
add
sbb
clc
mov
pushf
mov
daa
loop
sti
or
aad
add
or
dec
or
push
xor
cltd
push
push
inc
and
mov
cmp
adcb
leave
js
insl
xlat
pop
adc
xchg
pop
or
into
xorb
pop
fimuls
popa
scas
xchg
sub
rcr
add
pop
mov
cmp
xchg
lret
cwtl
push
jecxz
xchg
sub
aaa
and
push
xor
mov
lret
sbb
push
xor
cwtl
add
and
data16
out
sub
sub
loopne
add
scas
sub
lds
sbb
xchg
dec
jle
sti
repnz
loope
out
fidivs
negb
push
push
mov
adc
test
rolb
adc
mov
sub
or
xcrypt-ofb
cmpsl
sub
imul
xor
mov
popf
mov
jl
dec
imul
pop
inc
out
btl
inc
mov
hlt
mov
push
add
xor
cltd
repz
insl
mov
dec
push
mov
js
lock
jmp
sbb
lea
ljmp
fldenv
pop
dec
test
pop
jge
pushf
dec
movsl
je
pop
ucomiss
repnz
fs
movsb
sub
jns
jp
sti
adc
cmpsb
push
mov
and
or
xlat
clc
push
jns
inc
mov
cltd
fsubr
sub
mov
in
hlt
loope
cltd
ja
insl
movsl
pushf
xchg
pop
mov
cltd
mov
rcl
icebp
bound
mov
mov
inc
inc
sbb
mov
mov
icebp
and
xchg
mov
stos
cmp
mov
push
and
push
mov
adc
cwtl
movsl
sub
repz
enter
jmp
ljmp
pop
xchg
jae
mov
pop
repnz
jge
popa
iret
fiaddl
sbb
pop
inc
dec
and
and
lret
jle
pop
sbb
add
fs
fstpt
out
mov
push
fdivrs
xchg
clc
adc
mov
mov
sub
fwait
cmp
mov
pop
pop
data16
jecxz
lret
adc
es
or
jge
cli
and
mov
jmp
popl
cmpsb
xchg
je
jp
adc
add
inc
xor
test
lock
jmp
xchg
cmpsl
and
iret
add
fcmovu
rcrl
lret
mov
pop
jp
aad
xor
stc
or
pop
mov
addl
test
sarl
lahf
xchg
push
loope
mov
movsl
pop
push
insb
sub
int
add
out
dec
xchg
push
mov
arpl
push
shrl
dec
cmpsb
std
aaa
bound
inc
les
xchg
fs
push
jmp
dec
xchg
sub
int3
sbbb
or
pop
pop
pushf
mov
jbe
sbb
les
ja
mov
mov
addr16
nop
scas
nop/reserved
mov
cltd
loop
push
jns
jl
sub
xorb
mov
and
lcall
cmp
popa
lds
push
icebp
dec
mov
cmp
jnp
scas
push
clc
mov
mov
push
rol
pop
pushf
or
dec
xchg
adc
push
or
lret
add
mov
loopne
clc
sti
outsb
dec
mov
daa
or
push
mov
push
mov
mov
sahf
stos
push
int
insb
in
daa
push
ss
nop
or
scas
sti
pop
out
add
aam
mov
mov
jge
shll
xchg
lds
popf
leave
jbe
pop
mov
add
pop
fs
call
xchg
xchg
adc
push
adc
xchg
xchg
pop
imul
mov
mov
push
or
lret
sub
dec
movl
les
add
fiadds
data16
pushl
jmp
jg
cmp
fstps
ret
mov
and
add
outsb
es
ja
fldcw
pop
push
arpl
mov
jp
leave
dec
cmp
mov
push
aam
xor
mov
push
pop
cmpl
or
fnstsw
icebp
mov
jp
mov
pop
xor
lds
jg
stos
test
sti
dec
inc
add
dec
adc
xlat
or
inc
aaa
lret
mov
add
repz
mov
ret
xchg
in
mov
jmp
nop
lret
sub
push
add
or
and
cmovge
jl
add
mov
mov
jmp
daa
aas
pop
inc
ret
daa
cmp
pop
add
test
and
leave
clc
stos
sub
xchg
scas
inc
movsb
out
jnp
mov
cld
and
xchg
hlt
cmpb
pop
dec
loop
adc
daa
jno
jno
mov
loop
xor
dec
icebp
xchg
xor
jae
mov
lods
mov
mov
and
cs
push
sub
push
repz
repz
xor
aaa
ret
fdivs
div
dec
cwtl
sbb
fdivrs
pop
push
jmp
inc
inc
jp
call
push
add
or
cld
repz
lea
xchg
pop
xor
out
rol
scas
jecxz
in
push
roll
fs
dec
pop
mov
mov
mov
mov
mov
leave
es
adc
and
loope
push
into
inc
in
ret
jns
jb
test
fisubrl
cmp
lcall
in
in
clc
pusha
adc
cmpsl
jb
lods
or
in
in
into
mov
lock
fsubs
and
sub
rorl
fwait
xchg
cmp
scas
std
ljmp
outsl
imul
loope
enter
inc
fnstcw
mov
add
add
mov
nop
pop
int3
mov
inc
sub
rcll
xchg
movaps
adc
cwtl
lcall
jecxz
inc
int3
push
es
bound
jge
mov
sahf
sbb
shrb
pop
cmpsl
and
into
push
push
js
sub
mov
cmp
lds
jp
fistl
xchg
jg
sahf
mov
dec
fistps
add
mov
lods
dec
mov
pop
ret
lock
xor
clc
or
mov
xor
icebp
out
jmp
jmp
dec
aam
push
jns
push
ret
xchg
popf
idivb
mov
ss
add
sub
or
fwait
jne
adc
mov
mov
popf
sti
pop
push
mov
adc
push
mov
bound
leave
fcomp
es
lea
xchg
fs
fstpl
ud2
and
mov
test
pop
sti
sbb
mov
sahf
lods
fadd
in
add
pop
and
cs
mov
enter
test
xchg
nop
daa
aam
repz
call
or
sub
adc
xor
js
inc
jecxz
in
jg
sbb
repnz
push
xor
das
out
push
sub
xor
dec
inc
les
or
adc
dec
dec
mov
sub
out
or
push
out
arpl
mov
arpl
pushf
push
rcll
push
mov
cmp
xchg
mov
pop
dec
mov
cmpsl
mov
fwait
mov
jle
xchg
daa
decb
bound
sub
lods
sub
cmp
aad
jns
rclb
cmp
add
jne
addr16
jno
add
pop
sbb
ljmp
test
and
jo
xchg
xchg
aam
cld
sub
mov
adc
inc
pop
sbb
fstpl
mov
insb
push
sbb
adc
jnp
mov
sahf
inc
jle
sbb
lret
cmpsl
mov
test
dec
popa
data16
scas
std
mov
xchg
xchg
cltd
jmp
cmp
add
mov
push
mov
sub
lods
xor
xor
jns
call
js
cmp
jmp
mov
aaa
pop
cwtl
ret
mov
sahf
aad
test
xchg
push
not
in
and
clc
dec
popf
mov
jmp
mov
jmp
inc
jae
mov
fwait
pushf
cmpb
pop
scas
inc
cli
push
mov
icebp
movsl
andb
cs
into
pop
stc
lret
mov
xor
ss
push
pop
ret
in
xor
shlb
or
imull
rorl
popa
test
pop
pop
inc
dec
pop
repnz
dec
add
pop
xchg
cltd
or
stos
xchg
pop
xor
std
icebp
xchg
aad
mov
jg
loop
mov
xlat
xor
in
movsl
lds
inc
ds
std
les
pusha
inc
sbb
push
ljmp
xchg
xor
fidivs
add
mov
push
enter
adc
int3
cmpsb
inc
ss
std
jbe
pop
mov
imul
ljmp
xchg
dec
lea
or
dec
aaa
xor
mov
and
stos
xor
sub
icebp
inc
mov
cmc
sbb
in
cmpl
lret
push
int
decb
or
out
add
cld
dec
xor
in
push
ficomps
les
imul
inc
jbe
orl
xchg
outsl
jbe
sbb
pop
dec
jnp
jg
mov
xlat
mov
lret
sub
or
xor
jno
aaa
pushf
add
out
adc
mov
out
add
jmp
dec
mov
cld
test
inc
mov
dec
decl
daa
clc
push
sti
or
cld
inc
mov
sub
out
test
loop
and
mov
movsl
incb
andl
add
ret
scas
test
popa
or
adc
cs
insb
jl
xchg
mov
mov
and
push
mov
adc
jp
push
lret
movsl
mov
and
jne
push
inc
mov
pop
fs
loopne
ret
adc
xor
cmp
mov
mov
push
sbb
cmpsb
cmpsb
pop
popa
mov
dec
mov
sbb
jp
cmpsb
sub
mov
mov
fdivr
sub
sub
xchg
lahf
sahf
inc
loope
in
xchg
cmpb
push
and
push
outsb
mov
out
and
xchg
int3
std
leave
std
mov
es
push
jg
fldcw
push
add
dec
push
jmp
push
lret
mov
idivb
push
mov
bnd
adc
mov
imul
dec
ret
loopne
sbb
adc
or
orl
jle
sti
rol
dec
fcmovne
dec
inc
or
sub
rcr
shlb
push
fcompl
push
icebp
xchg
push
mov
fnstsw
mov
fst
inc
xchg
mov
in
and
jnp
cmp
jmp
cmp
jns
imul
adc
xor
mov
mov
lock
inc
jb
mov
sub
push
or
cmp
mov
mov
sti
and
leave
sub
xchg
add
xlat
sub
mov
fs
sbb
xlat
or
push
cmp
stc
cli
jbe,pt
xor
fdiv
mov
pop
or
push
or
and
cmc
dec
fwait
xor
pop
add
in
jo
pushl
dec
pop
dec
dec
jno
fcmovnb
dec
push
ja
sub
pop
cmc
insb
jne
mov
push
divl
mov
lods
scas
adc
rcrl
imul
scas
sub
jbe
sub
fwait
popf
inc
sbb
sahf
and
sub
in
loope
xor
lods
mov
int3
fdiv
push
mov
fwait
add
arpl
inc
loop
imul
cmpsl
inc
add
js
shrb
lea
and
lret
je
cmc
push
xchg
jo
out
pop
sbb
je
jb
rcr
or
loop
sbb
int3
ljmp
jae
add
ja
clc
je
shl
mov
lods
add
js
dec
cmpb
rcll
jb
rorb
jl
inc
out
mov
out
out
sbb
pop
or
xor
in
mov
xchg
mov
fisubs
insb
in
dec
sub
fwait
add
loopne
push
aad
jge
mov
in
dec
arpl
sub
mov
cmp
andb
call
push
pop
pop
mov
or
cmpsb
xchg
cmp
aad
mov
or
sbb
push
sbb
or
jnp
sbb
mov
mov
adc
pop
adc
jl
xchg
mov
leave
fnstcw
out
jle
add
test
rolb
jl
in
pop
xor
ret
imul
or
cmpb
mov
clc
adc
fwait
inc
into
jo
std
leave
cmp
or
fs
pop
cmp
testl
idivb
mov
ljmp
adc
repz
stos
push
js
push
jae
pop
sub
sahf
sub
inc
push
sbb
sbb
add
add
ja
xchg
fsubrl
imul
imul
cwtl
push
int
inc
push
xchg
xchg
cli
cli
xchg
sahf
sub
ret
push
stos
mov
and
jo
mov
xchg
lods
out
das
repnz
test
loope
call
push
leave
lock
mov
jp
push
adc
adc
fcomi
pop
sbb
push
ds
out
or
sbb
in
cmp
pop
adc
inc
mov
dec
ret
xor
xchg
nop
bound
inc
xchg
subb
data16
pop
adc
sub
mov
shl
movsb
adc
sbb
sbbl
dec
shrb
movsl
sbb
lods
inc
mov
xor
mov
icebp
mov
js
add
test
ret
pop
jge
daa
das
and
jl
jecxz
dec
jo
inc
dec
sub
lret
jecxz
pop
in
mov
xorb
imul
ljmp
incb
inc
mov
xor
inc
pop
mov
sbb
adc
addr16
sahf
dec
addr16
mov
xor
jne
cmp
sub
sub
insb
push
outsl
stc
ds
pusha
xchg
dec
js
pop
pop
jae
lods
test
mov
loope
cmp
xchg
je
jno
nop
pop
adc
and
outsl
outsb
dec
inc
ds
lods
xor
ds
pop
sbb
outsl
add
jne
aam
fwait
xchg
push
push
jb
xor
pop
aad
xchg
pop
push
sbb
adc
dec
jbe
std
pop
sbb
xchg
bound
jg
push
pop
sahf
fwait
rcrb
aaa
loop
mov
cmp
fmul
mov
jp
lock
fwait
cmp
xorb
push
push
fs
addb
sbb
push
push
jns
iret
lahf
push
mov
adc
pop
in
ret
sbb
movsb
or
enter
cltd
popa
loop
hlt
lods
jmp
xor
ja
icebp
dec
ja
push
test
imul
js
sahf
xchg
or
stc
test
jns
dec
pusha
popf
sub
sbb
imul
mov
sbb
sbbb
add
les
test
rcr
xchg
mov
jle
jle
dec
mov
pushf
pop
jo
gs
or
hlt
xchg
popa
add
ret
sub
repz
jae
xchg
mov
rcrb
xor
cmp
ror
loopne
lods
popf
sahf
sub
sbb
into
adc
imul
ficoml
pop
aas
lock
push
iret
or
xchg
adc
insb
test
imul
push
test
fistps
sub
xor
repz
rclb
inc
push
add
jb
jo
sbb
xor
int
aam
lahf
hlt
fcomps
adc
jmp
pop
jo
mov
pop
sarb
stos
push
mov
push
int3
jmp
loopne
cmp
movsb
das
mov
sub
pop
pusha
in
or
mov
repnz
mov
arpl
mov
pop
std
popf
lds
dec
mov
mov
daa
push
push
jne
xor
dec
leave
das
and
mov
mov
loopne
je
adc
sti
gs
and
in
fimuls
mov
mov
fs
rolb
cmc
das
mov
xor
pop
pop
adc
psubusw
adc
pop
or
sbb
jbe
dec
push
pop
testl
or
xor
dec
sbb
outsl
push
push
lret
inc
sbb
jg
loop
xchg
push
aaa
mov
inc
ljmp
dec
or
add
xorb
xchg
movsl
movsl
faddl
xchg
sbb
add
dec
mov
scas
dec
fidivs
xor
inc
xor
iret
mov
fcoml
ds
or
jmp
hlt
aam
dec
jge
mov
data16
cmp
mov
pop
bound
in
popf
int3
gs
xchg
sub
movsl
scas
ljmp
xor
push
mov
xor
mov
sbbb
jg
jp
test
xchg
push
lods
dec
clc
push
mov
fldenv
cmp
sti
xchg
test
xchg
lcall
ret
adc
sbb
sti
mov
sub
push
pop
pop
xor
adc
and
jge
jae
sbb
jae
bound
fsts
loope
aas
or
inc
pop
ret
or
add
fcomp
dec
stc
out
imul
roll
out
popf
lea
lea
jl
push
sub
sub
aad
mov
push
lds
jg
lods
gs
mov
pop
and
or
jmp
mov
jbe
add
shrl
fstpt
jae
addb
rorl
cmp
jge
add
push
rcrl
enter
inc
mov
mov
or
aad
loope
mov
pusha
pop
fsubs
movl
inc
decb
cmp
dec
cmp
mov
aas
out
stos
mov
jmp
test
cmp
aas
inc
mov
lods
mov
idivb
pop
in
mov
out
repnz
sbb
cli
mov
add
rcrb
xorl
test
push
push
loope
cmp
nop
sar
pop
jl
or
sub
mov
dec
jle
xor
push
arpl
ss
dec
jg
push
adc
mov
mull
cmp
es
sbb
lcall
jmp
orl
bound
test
jecxz
ja
mov
imul
pusha
lret
mov
mov
movsl
imul
mov
pop
test
add
aaa
push
aaa
xor
pop
fldl
push
adc
mov
sti
adc
pop
push
cmp
or
and
adc
bound
cwtl
out
inc
cmp
loope
ffree
mov
mov
int
repnz
push
daa
add
arpl
sbb
dec
xchg
xchg
and
add
pop
outsb
jg
iret
adc
dec
jl
mov
adc
lods
stos
push
fs
push
testl
cmpsb
xlat
and
pusha
mov
jl
test
nop
lods
rorb
insb
jmp
mov
xor
sbb
out
adc
ljmp
mov
into
mov
inc
mov
jns
xchg
jnp
jno
push
sahf
out
sbb
push
sar
adcb
xchg
ret
cmp
push
jno
outsl
in
rorb
dec
mov
cmp
sti
fsubp
int3
and
fnstenv
ss
insl
push
pop
and
inc
rorb
sub
jg
negl
cltd
and
jno
stos
fldcw
fwait
adc
nop
jne
dec
mov
daa
cmp
lods
lods
mov
cwtl
test
les
movsb
jmp
shll
sub
clc
push
add
or
cmp
pop
add
inc
movsl
pop
jecxz
jge
push
xchg
mov
xchg
aad
and
inc
pop
mov
aad
loopne
out
aas
out
ljmp
mov
adc
cwtl
fcmovnb
sti
push
popl
int3
xchg
rolb
mov
in
sub
fxch
push
repz
loopne
rcll
std
pop
pop
ss
out
movsb
jno
jns
xor
dec
rolb
sub
or
ds
dec
cmpb
mov
cmc
cmc
mov
xlat
sbb
mov
sbb
out
jo
out
xchg
stc
or
mov
repnz
lahf
mov
fidivrl
mov
dec
ffreep
xchg
jns
mov
mov
or
leave
test
jbe
rorb
pop
pop
leave
jbe
icebp
ret
shlb
adc
mov
inc
cs
xacquire
nop
sub
scas
xor
push
testb
sbb
cs
sbb
sbb
mov
sar
int3
shll
cmc
ja
pushf
push
mov
std
ror
mov
cmp
sub
and
sbb
xchg
xchg
cmp
pushl
adc
lods
in
cmp
aas
bound
add
pop
xorl
push
mov
xchg
cmp
pushf
nop
jbe
ficomps
stos
sub
addr16
sbb
or
iret
jl
scas
cld
sub
jns
xchg
daa
lea
or
xor
pop
arpl
lcall
mov
ficompl
cs
xchg
arpl
sbb
sub
std
sub
fsubrl
mov
aaa
sbb
xchg
dec
inc
mov
stos
or
jae
push
pop
xchg
lret
lahf
push
xchg
and
jp
inc
mov
xor
xchg
outsb
xor
imul
fs
int
xchg
sbb
in
mov
out
jae
dec
adc
add
push
push
mov
dec
mov
pop
cs
cmp
lea
jne
xchg
les
pop
fwait
cmp
pop
push
mov
cmpsl
xlat
push
ja
es
push
add
jl
sub
mov
shlb
rorb
aad
lcall
gs
insb
ja
mov
push
je
ret
adc
popf
sbb
xor
sub
lods
cmp
sahf
cmp
fisubrs
int
xchg
hlt
out
test
xor
push
sub
xor
movsl
jns
xlat
jge
cwtl
add
ffreep
sub
cmp
inc
gs
les
cmp
scas
cmp
xor
push
cmp
sti
fnstenv
rcr
jne
mov
add
out
loope
and
add
rcll
out
es
push
inc
xor
and
push
adc
sbbl
inc
xchg
sbb
out
int3
divl
xor
push
jle
sub
idivb
fiaddl
mov
addb
hlt
insl
enter
jbe
out
fdivl
and
and
int
and
jae
jecxz
xchg
loopne
sub
inc
add
jle
adc
data16
pop
lods
jl
sbbb
jle
inc
aaa
mov
into
mov
fists
roll
jle,pn
into
jg
jnp
dec
stos
and
mov
add
jp
mov
add
fistpll
cmp
imul
mov
sbb
addr16
jo
movsl
imull
jb,pt
mov
je
in
call
out
jnp
fadds
push
mov
lret
fstpl
adc
xor
jmp
daa
inc
mov
clc
lahf
lret
test
mov
std
in
mov
xchg
pushf
xchg
sub
stos
sbb
mov
or
inc
imul
mov
jae
lods
in
popa
ret
lcall
adc
pop
inc
push
push
les
mov
inc
sub
fiaddl
ljmp
xor
mov
imul
cmp
cmpsb
stos
orl
add
jecxz
xor
or
mov
out
xchg
sbb
ret
push
mov
dec
jnp
inc
pop
pushf
add
xchg
pop
cltd
imul
aaa
lock
test
sub
stos
dec
or
jne
xor
clc
shll
mov
and
cmp
mov
and
inc
aad
out
sbb
je
xor
leave
ds
xor
xchg
push
repz
outsl
leave
scas
ja
sbb
je
test
sti
out
loope
lahf
sbb
jecxz
push
dec
fdivs
lods
cmp
push
or
sub
mov
scas
inc
je
popf
adc
outsb
in
fwait
jb
out
xor
jb
inc
add
xor
and
imul
adc
inc
outsb
fdivrp
rcr
testl
jnp
adc
shr
lea
push
push
inc
cmpsb
ret
cmp
stos
jge
adcb
pop
outsb
dec
pusha
es
pop
xor
cs
dec
in
mov
sbb
shrb
add
adc
faddl
mov
into
in
pop
sbb
mov
test
sub
mov
mov
sarl
jns
fidivrs
mov
sbb
dec
or
jecxz
xchg
arpl
mov
fstpl
fdivl
push
xchg
lods
xor
sub
mov
push
mov
out
push
call
dec
fmuls
aam
adc
push
dec
test
cmp
adcb
or
add
mov
ja
xchg
adc
cmp
rolb
in
rorl
incb
ja
test
sub
leave
in
or
sbb
scas
rclb
xlat
lret
xor
subl
repz
sti
fidivl
bound
test
clc
jb
pushf
pop
cmp
xor
rcrb
out
pusha
imul
push
push
mov
pop
pop
fistps
mov
into
sub
sbb
mov
stc
sbb
push
mov
gs
andl
in
les
ja
lret
push
push
data16
insb
rorb
cmc
mov
mov
sbb
dec
jl
ret
sbbb
mov
mov
fstpl
push
loope
pop
stos
and
hlt
inc
fldl
test
fnstenv
das
cs
cmp
sbb
andb
push
stos
ja
test
push
arpl
rclb
mov
jl
in
jno
mov
in
mov
shr
mov
lret
mov
mov
jmp
fcompl
add
int3
add
sbb
jle
inc
adc
fbld
es
imul
icebp
iret
mov
call
cmpsb
cmp
mov
fwait
loope
push
sbb
stos
cmpsl
adc
push
mov
mov
cmpb
inc
ret
mov
push
mov
sbb
mov
xchg
in
xchg
mov
sub
mov
mov
mov
mov
insl
aam
push
dec
pop
add
lea
push
repnz
ficomps
sti
adc
and
xor
or
sub
pop
shr
loopne
mov
incl
mov
xor
es
mov
push
hlt
imul
arpl
imul
aad
sbb
mov
iret
test
or
scas
ss
dec
out
jecxz
adcl
xor
hlt
lcall
add
xor
mov
fsts
in
mov
sub
lahf
dec
testb
xchg
leave
out
cwtl
gs
sub
push
bound
nop
repz
lahf
out
adcb
adc
mov
loope
or
sub
stos
mov
ja,pt
mov
and
int
sbb
inc
sub
dec
add
sbb
test
adc
imul
jno
push
dec
scas
push
mov
and
popa
and
inc
icebp
xchg
mov
pop
or
pop
test
add
jmp
enter
dec
hlt
inc
jmp
push
scas
push
dec
pop
mov
pop
mov
or
cmpsl
xor
pop
into
loope
jns
mov
adc
scas
jle
jmp
mov
mov
and
jno
or
pop
adc
outsl
dec
inc
jle
mov
popf
jo
arpl
stos
mov
xor
mov
mov
pop
sub
xor
out
pop
xchg
xorl
add
mov
ss
jl
enter
fwait
adc
dec
jg
lahf
add
mov
cld
test
push
in
std
mov
subb
into
dec
mov
mov
mov
rclb
leave
inc
adc
sub
ss
mov
rcrb
push
lcall
mov
rcrl
icebp
push
pop
xlat
push
aam
pop
lock
cmp
imul
jmp
add
jbe
sbb
les
rclb
push
xchg
xchg
lods
test
push
shrl
cmp
sarl
insl
mov
lods
shrb
pop
or
mov
cld
mov
lock
scas
in
icebp
mull
inc
out
ja
mov
inc
iret
outsl
push
dec
hlt
rol
dec
add
add
roll
adc
movsb
cmpsb
data16
and
shlb
adc
dec
mov
outsl
lret
jmp
fimuls
pushf
orl
pop
ret
xor
loope
mov
jmp
nop
jp
in
pop
cmpsl
gs
adc
jmp
mov
mov
mov
insb
sbb
push
into
xchg
jno
sub
sbb
lret
add
lcall
stc
push
movsl
adc
pusha
lea
and
shr
negl
mov
shll
mov
xor
sub
pop
sbb
loopne
xchg
cld
fmull
add
out
fs
cmp
lret
jne
xchg
popf
les
xchg
mov
mov
add
imul
adc
mov
pop
mov
out
or
std
jns
push
clc
test
cli
inc
push
add
mov
int
ss
ficompl
in
xor
jnp
aaa
popf
rcrb
ds
and
outsl
les
dec
sarl
imul
adc
ffree
sbb
mov
mov
cmpsl
dec
inc
scas
mov
xor
mov
add
cmp
push
rclb
inc
shr
or
and
jo
in
sahf
mov
push
stc
sti
mov
outsb
push
mov
in
or
xor
push
mov
call
bnd
int3
push
lret
enter
sub
loop
in
mov
mov
add
sbb
cwtl
jns
inc
dec
push
inc
mov
sub
test
inc
sahf
repz
push
int3
dec
adc
fs
fucom
mov
pop
test
jnp
lret
or
lahf
testl
dec
mov
mov
pusha
and
pop
dec
lock
cmp
test
int
scas
mov
jp
movsb
jae
dec
repz
ja
call
clc
jmp
mov
add
xor
in
pop
xchg
xlat
pop
push
aam
enter
dec
xchg
fimull
mov
add
inc
pop
mov
cld
xor
xchg
pop
xchg
xchg
jbe
in
xchg
arpl
jle
cld
adc
pop
jo
xchg
jne
xor
mov
or
mov
xchg
dec
or
fnstcw
insb
adc
popa
popf
test
and
into
lock
testl
jle
fucom
adc
pop
and
insb
sbb
orl
push
xor
popa
nop
es
xor
sbb
fidivl
sub
mov
sahf
pushf
push
push
pop
lret
cmp
loopne
or
mov
aas
jno
ficomps
pop
pop
out
cld
xor
push
mov
push
mov
popa
mov
cmp
das
and
jp
or
icebp
adc
mov
dec
aaa
sarl
rolb
cli
cmp
je
imull
fmull
xor
adc
sbb
outsb
xchg
mov
mov
xchg
sub
and
cmc
js
mov
add
xor
add
sbbl
aaa
ficomps
stos
repnz
fs
mov
cmp
lgs
ficompl
mov
lret
in
pop
arpl
or
mov
adc
jmp
jecxz
inc
test
int3
sub
sti
dec
int3
mov
pop
xchg
and
subb
out
sarl
mov
rol
pop
xchg
fidivrs
jge
inc
sti
fisttpl
push
pop
push
pushf
adc
pushl
mov
cmp
jbe
int
stos
mov
call
movsb
bnd
pusha
cmp
stos
imul
sub
fwait
inc
mov
push
mov
push
test
push
cmp
mov
mov
leave
xchg
ljmp
jge
lret
or
iret
inc
sti
loop
negb
mov
inc
cmp
pop
lret
jbe
movsl
int
sbb
mov
inc
dec
push
cmc
pcmpeqw
imul
shld
stc
cmpb
or
and
inc
mov
dec
sub
inc
es
cli
cs
arpl
push
clc
cli
fwait
insb
mov
lods
jo
jns
sbb
dec
or
icebp
jmp
cwtl
mov
cltd
dec
push
aas
out
ror
shll
jle
icebp
pop
push
mov
lret
cmp
cmp
sub
add
mov
xchg
and
and
adc
mov
and
movsl
adc
push
pop
insl
mov
push
cmpsl
inc
adc
dec
outsb
out
mul
aad
add
pop
out
xor
sahf
call
mov
push
push
lods
mov
rorl
sub
push
xor
xor
xchg
shll
in
jb
mov
std
dec
outsb
xchg
sarb
push
pushf
js
mov
jp
dec
lcall
sbb
adc
ds
jo
pop
aam
mov
xchg
jmp
inc
inc
subb
loopne
test
js
sbb
repnz
popa
stos
popa
test
add
push
sbb
idivl
or
aam
push
xchg
mov
mov
pop
jbe
jl
clc
cmpsl
inc
and
mov
arpl
xchg
je
insb
std
shl
or
adc
xchg
xchg
outsl
testb
int
ljmp
add
daa
pop
jo
ret
cwtl
and
ss
pushf
sbb
aaa
xorb
sbbb
jnp,pt
repnz
popa
das
ss
call
inc
or
mov
gs
dec
popf
xchg
sarl
sarl
cmp
and
scas
xchg
inc
imull
fwait
jl
cmpb
jmp
pcmpeqb
bound
xchg
pusha
cs
enter
or
cltd
pop
fcomps
int
pop
dec
xor
and
pusha
cs
sarb
jo
pusha
lret
inc
pop
mov
outsb
mov
fldl
jp
dec
icebp
aaa
inc
adc
and
push
push
pop
cmpb
cmp
mov
push
jb
cmpsl
jbe
or
xchg
mov
xor
out
lahf
xor
fdiv
outsl
push
out
and
iret
data16
aas
out
adc
fcoms
xchg
mov
lea
xchg
and
dec
data16
into
loope
xor
call
lds
inc
aad
js
mov
push
lods
nop
sbb
inc
std
or
addb
loopne
add
push
xor
mov
push
mov
xchg
mov
or
pop
mov
ja
xlat
push
ljmp
sbb
adc
shll
jnp
fmull
cmp
inc
sahf
cld
push
sub
jecxz
div
jmp
das
testb
jno
rep
aam
pop
dec
outsb
ds
and
daa
pop
mov
dec
pop
in
arpl
dec
fldl
scas
adc
push
std
ja
and
lret
lcall
and
repz
fwait
cli
add
cltd
in
or
outsl
jns
add
lods
out
ljmp
leave
or
jle
fwait
cs
jecxz
cmpsb
rorl
gs
or
jmp
jno
fildll
xor
loop
cs
sub
inc
repnz
mov
sbb
xchg
fiaddl
or
arpl
jg
cmpb
mov
lds
and
cmpsl
push
or
push
test
gs
cmpl
bound
popa
ret
dec
jecxz
cwtl
cmp
sbb
pop
pop
enter
arpl
imul
or
lds
cmpl
or
stc
imulb
xchg
push
mov
or
mov
mov
imul
xchg
push
std
or
cli
sub
pusha
adc
mov
inc
mov
and
jbe
add
mov
sub
pushf
ljmp
mov
dec
push
sub
add
popa
jne
mov
hlt
sub
insb
out
bound
cli
inc
cltd
jo
insl
sub
lods
leave
scas
mov
mov
andb
mov
pop
scas
fisttpl
pop
adc
lret
cs
dec
lahf
test
or
mov
xor
orb
testb
fmulp
jno
adc
rcrb
dec
lcall
in
in
mov
push
fstp
stos
pop
jmp
mov
jl
mov
ds
rcrl
sbb
popa
subb
lock
lcall
mov
mov
cmp
lds
inc
pop
js
dec
inc
pop
sarl
dec
mov
std
scas
sbb
and
xlat
dec
mov
cli
xchg
sub
cmpsl
and
add
xchg
dec
clc
push
aad
pop
mov
pop
pop
es
or
jno
adc
pmulhuw
dec
outsl
pop
push
adc
mov
pop
sbb
imul
inc
sti
ret
fisttpl
or
shlb
or
add
xor
cmpsb
scas
add
icebp
pop
sarb
sbb
test
fiadds
mov
scas
and
cmpsb
iret
sub
bound
pop
jb
xorl
mov
ds
fdivl
pop
pop
sub
iret
xchg
jne
and
mov
lret
mov
sbb
lods
enter
bound
lods
mov
loope
ds
ret
pop
fmulp
push
shll
push
mov
je
out
push
inc
mov
push
cli
jp
test
mov
mov
lret
or
incl
popa
loop
dec
inc
sbb
xchg
in
adc
sar
cmpsb
std
inc
arpl
push
div
clc
xor
mov
daa
es
repnz
outsl
mov
dec
mov
pusha
fwait
sub
cld
das
adcb
daa
mov
lea
mov
cmpsl
and
cmpb
dec
xor
es
xlat
movsb
push
mov
push
scas
and
flds
lea
int3
sub
cmpsl
dec
sti
xor
outsl
lcall
push
xchg
shrb
xchg
or
scas
fisubrl
mov
pop
shrb
repz
add
out
inc
cld
inc
cmpsb
ds
mov
inc
int
add
lods
xchg
sbbb
mov
clc
or
xchg
jge
dec
popf
push
dec
push
in
push
shll
icebp
mov
fwait
icebp
cmp
mov
ja
xchg
repnz
les
in
mov
lret
stc
mov
adc
lds
mov
test
or
stos
in
jmp
fidivl
lret
cld
add
xor
call
push
mov
or
nop
fmulp
imul
sbb
inc
inc
adc
aaa
lret
xchg
cs
xor
lock
mov
mov
xor
jnp
xchg
insl
ljmp
xchg
sub
pop
into
add
jecxz
lds
imul
int3
shl
push
xchg
lcall
pop
push
insl
mov
fisubs
ret
xor
sub
mov
jecxz
jg
jns
cmp
or
mov
in
loopne
fiaddl
jmp
pop
pusha
adc
xchg
clc
test
cmpsb
aad
int
cld
inc
aad
adc
xor
lret
push
loopne
addr16
xor
pushf
sub
push
lods
add
cmpb
xchg
mov
cmpsl
dec
cmc
cmp
insl
push
push
idivb
or
in
mov
adc
add
insl
push
in
jnp
test
nop
xchg
mov
sub
mov
outsb
or
repz
dec
cmp
jp
test
pop
dec
pop
loope
les
add
lods
loopne
jmp
out
push
addr16
xor
inc
push
sbb
sbb
jl
push
adc
leave
repz
push
in
in
push
mov
imul
incb
adc
dec
jne
or
xor
scas
addb
aas
out
test
aad
js
cwtl
xor
movsb
pop
call
stos
xchg
popf
dec
or
std
outsl
ss
push
lret
aas
jecxz
jne
ljmp
dec
mov
jmp
xchg
xchg
or
adc
dec
and
ffreep
cmp
mov
or
jne
cmp
ljmp
int3
imulb
ds
mov
cmp
jmp
test
cmp
lcall
pop
out
adc
dec
icebp
aas
in
ficoms
fstl
js
jae
push
pop
in
faddl
mov
jl
xchg
sbb
imul
xchg
dec
sub
jp
mov
mov
or
pop
and
cmp
cltd
adc
cmpsl
xchg
add
aam
enter
or
fldl
mov
jns
ja
out
out
or
stos
dec
or
out
fistpll
jnp
or
add
mov
cli
enter
mov
nop
push
sbb
fwait
jae
test
fcoms
fisttpll
in
xchg
add
cltd
cmp
loope
mov
push
cmp
stos
pop
in
inc
inc
inc
jmp
mov
shl
movsl
repz
mov
and
lds
sub
adc
sub
push
test
pop
and
int3
insl
iret
loop
or
mov
std
in
shll
es
cmp
int3
lcall
sbb
xchg
sub
cmp
sbb
das
push
jae
repz
pop
aas
imul
fcomp
inc
mov
inc
out
mov
dec
push
std
and
push
cmc
pusha
mov
mov
sbb
dec
cmp
cltd
pop
in
pop
cmc
cs
outsb
sub
cmp
testb
sub
ja
xchg
adc
frstor
sbb
lods
mov
sub
xor
out
xor
mov
xor
cld
adc
lods
and
mov
imul
mov
xchg
arpl
out
or
shl
and
xor
aad
data16
enter
pop
cmp
push
pop
outsl
arpl
lret
sub
pop
subb
test
cmp
lods
lock
mov
xchg
jns
fs
push
shlb
fnstsw
fcoms
pop
rclb
mov
xor
les
and
pop
adc
mov
mov
ljmp
call
lret
push
fiadds
jne
dec
dec
sbb
lret
ljmp
sar
cs
es
adc
cmp
ljmp
imul
insl
enter
adcb
pop
push
sub
orb
push
lea
ret
daa
cli
sarl
dec
xor
pop
jbe
rorb
xchg
mov
aad
xor
xlat
or
xchg
das
pop
movsl
pop
sub
sub
cwtl
xor
sub
test
mov
jno
or
xchg
pop
pop
cwtl
into
icebp
cmp
and
loopne
sti
or
sbb
push
je
add
cld
jns
mov
aam
sarl
lcall
mov
xchg
or
stos
pop
repz
dec
sahf
sub
out
add
dec
push
mov
sub
ljmp
dec
addr16
inc
cmp
sub
mov
fmuls
sbb
ds
or
pop
insl
jle
cs
dec
fcmovu
push
dec
hlt
and
push
xchg
roll
jns
mov
lahf
rolb
rcrl
insb
dec
bound
popf
inc
in
jb
scas
mov
mov
mov
pop
cmpsb
stos
sub
shlb
sbb
fcomps
orl
pop
mov
call
or
out
loope
cmp
add
pop
and
jmp
icebp
and
cmp
adc
mov
leave
mov
sub
ds
mov
daa
jp
and
filds
add
cmpsb
adc
std
cmp
inc
adc
mov
mov
mov
je
loop
outsl
push
xchg
fwait
or
int3
mov
insb
ret
mov
xchg
cmpsl
xchg
and
es
lods
in
shll
and
cmpsl
into
loop
or
ja
pushl
jmp
push
outsl
sub
pop
nop
cmp
aad
lock
inc
xchg
int
cmp
xchg
mov
imul
cmpsb
xchg
inc
rcll
test
mov
sbb
call
test
sti
popf
sub
out
in
add
mov
out
pop
mov
icebp
test
lds
ljmp
or
or
inc
fmull
dec
push
scas
add
xchg
inc
xchg
pop
fdivr
adc
loopne
cmpsb
xchg
jge
jnp
xchg
jmp
adc
mov
stc
ja
adc
pop
fstpt
gs
lea
xchg
sub
sti
enter
xchg
dec
adc
sbb
adc
divl
popa
push
test
and
jmp
imul
fmuls
xor
addr16
scas
jno
or
inc
mov
inc
dec
addr16
push
xchg
sbb
jg
movsb
adc
cmp
pop
jb
shrl
inc
lcall
pop
mov
mov
add
sarl
mov
fnstsw
mov
lcall
jno
jg
faddl
push
aaa
xchg
jbe
push
fsave
sbb
add
fcomps
test
ljmp
inc
mov
and
mov
mov
sub
xchg
das
inc
sbb
fs
fsubrl
mov
das
jnp
inc
les
outsl
sub
mov
xor
lds
repz
push
movzbl
sbbl
sti
jp
inc
cltd
pop
push
pushl
xor
lahf
sub
and
dec
lret
out
sbb
xchg
out
jle
jbe
or
add
mov
aas
cmp
jg
pop
mov
cmp
out
ss
rclb
push
mov
test
pop
push
mov
rcrb
inc
das
int3
lret
sbb
inc
ret
and
add
push
ja
mov
out
sub
repnz
mov
stos
push
lea
test
jb
iret
cmp
pusha
mov
jl
sub
mov
fcmovb
rcll
out
es
xchg
nop
inc
sub
int3
movsl
aad
mov
fsubrl
fsin
into
sahf
aas
mov
data16
adc
pop
rorb
in
cld
sbb
jns
fisttpl
mov
adc
xor
pop
pop
testb
in
sti
push
leave
or
adc
rcrb
or
jnp
loopne
pop
pushl
jb
push
sub
in
dec
mov
fcmovu
add
or
outsb
ss
lods
mov
adc
cld
inc
daa
dec
call
loope
inc
push
jo
loopne
push
and
jge
jae
or
mov
pop
xor
out
sbbb
rolb
cmp
scas
jmp
ljmp
jmp
mov
inc
push
or
movsb
lret
clc
rorl
mov
repnz
xor
jae
jle
jl
jg
imul
dec
aad
loope
fmuls
jno
idivl
push
sub
xor
mov
fidivrl
mov
jmp
in
inc
jne
xor
out
repnz
je
outsb
std
fwait
adcl
mov
xor
pop
xchg
lahf
scas
mov
jge
data16
add
shlb
sub
push
jg
mov
cmp
sub
jns
and
mov
subb
mov
xchg
icebp
insl
push
add
notb
jl
mov
fsubs
pop
cli
mov
test
in
std
aas
int
repnz
mov
enter
les
sub
repnz
shlb
pop
or
in
xor
lcall
xchg
mov
adc
ds
ja
pop
push
loop
pop
stc
sub
pop
and
neg
cltd
pop
aad
js
arpl
pop
mov
dec
clc
arpl
cmp
int3
push
inc
pop
xchg
jns
adc
adc
mov
jb
xchg
inc
cltd
repnz
push
gs
in
shlb
push
mov
xchg
loop
or
in
inc
cmc
icebp
pushf
mov
jecxz
sti
push
loope
jle
mov
cltd
push
dec
adc
mov
add
xchg
enter
sbb
call
push
das
js
xchg
popa
roll
scas
sub
xchg
sub
pop
push
cmpsb
ljmp
cltd
add
mov
pop
jmp
xor
mov
mov
mov
ja
dec
pushf
iret
push
lret
add
cltd
mov
stos
push
mov
aas
aad
icebp
nop
in
mov
stos
std
xor
xchg
dec
mov
in
inc
add
ret
outsl
inc
dec
mov
push
and
and
adcl
dec
call
adc
lods
xchg
ss
addr16
inc
popa
stc
sti
cmp
outsb
sbb
movl
push
or
test
inc
loope
dec
and
sub
in
or
pop
pop
rcrb
mov
xor
adc
mov
push
adc
fidivs
or
scas
and
pop
fistpll
neg
mov
outsb
rcrl
f2xm1
insb
push
jnp
faddp
ljmp
bound
adc
bnd
movsb
inc
iret
js
pushl
mov
cmp
pop
movsb
fnstenv
insl
xchg
aad
rcll
xchg
shlb
jg
xchg
inc
adc
inc
iret
cmp
sbb
lret
jno
jmp
sti
repnz
loopne
ficoml
lea
sarb
incb
lods
addr16
stos
inc
daa
adc
inc
clc
fisttpl
xchg
push
and
xor
rcll
mov
aam
xchg
test
cmp
je
loope
xchg
cli
add
adc
jns
fstpt
aaa
ret
scas
xchg
adc
inc
sbb
pop
cmc
aaa
negl
push
fs
push
inc
into
aas
sub
pop
sub
mov
testb
nop
jmp
loope
out
sti
xchg
push
in
xor
mov
xlat
imul
add
mov
mov
push
push
fnsave
inc
adc
pusha
mov
scas
rolb
and
sbb
push
mov
mov
fdivrp
pop
mov
sbb
sbb
adc
xchg
add
dec
dec
shrl
leave
fwait
push
and
insb
sub
popa
xchg
inc
iret
and
mov
dec
test
pop
and
inc
push
sub
ljmp
stc
mov
pushf
cld
or
mov
sbb
ljmp
and
nop
fcmovnbe
jo
imul
sub
enter
dec
stos
xchg
push
add
je
sbb
add
orl
int3
sub
inc
cld
outsl
sbb
bound
jne
xor
ljmp
mov
sahf
popa
notl
cmp
push
out
mov
or
rol
pushw
out
pop
or
je
push
ss
sbb
cmpsl
adc
xchg
lret
mov
mov
in
pop
add
inc
dec
addb
adc
mov
pop
cld
cmp
mov
mov
fsubs
or
push
test
vpacksswb
mov
jg
xchg
inc
mov
ljmp
loope
in
bound
lock
sub
sub
idiv
pop
lea
lods
push
mov
lds
xor
sbb
and
sub
or
lcall
fmuls
xchg
pusha
mov
adc
pushf
jns
clc
dec
mov
sahf
lock
cli
or
in
out
das
inc
rep
in
mov
push
cmp
sub
mov
imul
data16
add
das
clc
xchg
and
lods
push
jle
fwait
dec
mov
in
jbe
shll
adc
mov
xchg
jns
into
dec
into
in
cmc
fidivrl
inc
hlt
jb
scas
lahf
xor
les
js
mov
mov
and
sbb
mov
sub
or
mov
or
lea
ja
fwait
jae
mov
and
xchg
inc
push
or
push
es
fsubrl
mov
fldl
mov
icebp
dec
imul
popa
imul
mov
pop
mov
lods
sbb
in
es
es
popf
pop
sub
lcall
jnp
orb
mov
std
dec
mov
mov
cs
cmp
jp,pt
cli
xor
mov
dec
push
dec
push
insl
cld
cmp
dec
das
xor
push
jae
mov
enter
mov
lods
clc
cli
push
data16
jg
aaa
in
pop
test
sbb
test
loop
push
cmp
push
pop
add
inc
xor
out
xchg
dec
push
pop
add
push
test
add
lods
push
sbb
ljmp
iret
imul
mov
gs
lea
clc
or
push
cltd
test
sub
hlt
xchg
xlat
repnz
dec
add
jno
aaa
clc
js
jp
xor
cmpsl
push
pop
ds
mov
lds
and
mov
add
gs
push
repz
or
xor
jle
sbb
ljmp
lret
out
xor
clc
orb
jne
xchg
or
mov
retw
out
inc
push
push
xlat
sbb
jge
jnp
mov
cs
clc
dec
dec
test
sub
fcmove
sub
cmp
ja
fcomps
add
cli
sti
imull
or
mov
stos
mov
mov
outsb
mov
mov
inc
iret
mov
ja
imul
in
imul
dec
insb
pop
int
repnz
mov
pop
aaa
pop
mov
fincstp
fmuls
outsl
add
jmp
push
in
mov
pusha
push
popf
out
cmp
iret
popf
cmp
pop
inc
iret
push
jmp
or
mov
xlat
stos
dec
mov
jmp
ja
xchg
sub
xchg
pop
inc
lea
jnp
stos
mov
push
jbe
push
sahf
lret
xchg
sti
xor
xlat
data16
lret
cmp
xor
push
call
ljmp
ds
xchg
mov
insl
cmc
scas
jp
in
jo
mov
fistps
iret
pop
sti
std
imul
push
jne
cmc
mov
push
pop
push
inc
insl
rcll
pop
mov
call
arpl
dec
or
test
cltd
or
push
repz
lods
push
movsb
fists
cmp
andl
or
mov
xchg
push
subl
jae
xor
and
test
jb
and
inc
inc
andl
shr
xchg
fcomps
iret
xchg
lahf
adc
ret
pop
or
dec
mov
call
subb
pop
pop
mov
lods
inc
bound
mov
lock
je
jbe
jns
mov
cmp
push
daa
add
inc
daa
stos
jle
fnstcw
adc
dec
movsl
lods
mov
push
push
xchg
sub
sti
jmp
xorl
xchg
push
je
cmp
mov
cmp
and
cltd
adc
pop
pop
cwtl
aad
lods
rcr
in
dec
test
aas
in
and
dec
pop
pop
mov
aaa
sbb
xchg
push
jno
dec
fdivs
ret
add
ret
cmpsb
lods
mov
adc
adc
in
xlat
sbb
ret
in
pop
sub
xchg
pop
xor
popa
mov
and
scas
sub
push
shrb
popa
rcrl
add
shlb
jbe
adc
add
sub
mov
cmpl
add
icebp
mov
pop
jne
dec
jne
jns
jnp
sbb
pop
jne
mov
xchg
push
jge
paddw
mov
std
fcmove
aad
mov
push
push
sbb
jne
loopne
dec
aas
or
and
stc
jmp
and
lcall
inc
les
fisubl
lods
pop
jae
imul
jge
mov
js
scas
repz
dec
jbe
fs
add
xor
xor
fldcw
or
pop
xor
jmp
mov
out
movsl
dec
mov
jge
or
scas
lods
loope
dec
fs
dec
jp
jmp
out
stos
ret
fs
push
jae
ja
pop
cmp
loopne
mov
jne
inc
dec
push
daa
or
cmp
sub
jbe
out
push
das
inc
ror
inc
aaa
adc
gs
jne
jb
lss
lds
in
scas
mov
ja
mov
or
bound
loopne
jbe
dec
inc
add
incl
cmpsl
add
jl
inc
xchg
or
shl
sub
jecxz
popf
js
and
repnz
scas
push
lods
in
xchg
mov
aas
outsb
subb
mov
mov
out
ret
mov
pmuludq
xchg
pusha
sbb
adc
fwait
cmpsb
mov
mov
popa
shrl
rolb
xchg
inc
and
or
imul
mov
popf
push
and
mov
dec
pusha
add
fidivl
test
push
fimuls
sub
int3
or
push
adc
lret
pop
rorl
les
mov
lods
daa
dec
pop
sbb
ljmp
jmp
sbb
fidivs
fmuls
add
sbbl
mov
adc
cmp
xlat
fidivl
fldt
mov
inc
in
imul
popa
fidivs
addr16
js
fidivrs
aam
jbe
cmc
adc
fsubrl
sbb
dec
inc
mov
cmpsb
cltd
mov
mov
gs
in
dec
rcrb
clc
mov
jmp
ljmp
ret
ret
cmp
enter
xchg
outsl
fs
inc
das
push
or
adc
push
inc
das
xchg
fucomi
cmpl
mov
rol
cmp
sbb
clc
pop
insl
inc
inc
int3
mov
mov
and
or
xchg
mov
add
je
or
psubusb
sbb
pop
fisubrl
shl
mov
and
mov
nop
loop
mov
aaa
sub
in
into
mov
adc
pop
mov
sbb
push
mov
mov
mov
sti
push
push
and
inc
fbld
icebp
popf
ljmp
xor
shll
jb
out
clc
sub
dec
xchg
inc
xchg
jnp
push
or
mov
pop
jne
popf
es
add
cwtl
push
xor
cmp
ja
test
in
jecxz
jge
mov
dec
inc
cmp
shll
xchg
fldenv
and
inc
add
jae
loopew
lea
sub
mov
aam
inc
push
insb
hlt
mov
xchg
inc
stos
xchg
inc
adc
ja
mov
pop
insl
cmc
jp
xor
inc
sti
add
and
mov
jecxz
mov
enter
xchg
push
cmpsb
push
adc
mov
out
inc
mov
cmpsb
out
jns
out
out
popa
arpl
jns
xchg
inc
xor
fnstenv
test
aas
dec
in
sub
cmpb
fimull
sbb
adcb
xchg
test
or
push
rcl
loop
xchg
aaa
in
daa
xor
mov
popa
sub
and
shrl
add
adc
stos
dec
aaa
fs
pop
and
sub
push
jns
out
or
fistl
scas
stc
fistl
adc
mov
hlt
test
xchg
js
rcrb
mov
shlb
mov
stc
xor
loopne
nop
jmp
jmp
inc
insb
mov
lods
dec
cmpsb
fsubrl
sbb
add
xor
inc
fidivl
loope
divl
rol
add
enter
cmp
mov
mov
arpl
inc
add
stos
movl
cs
inc
out
mov
les
les
mov
cmpsl
lods
cmp
cmc
js
inc
leave
in
outsl
mov
aad
pushf
sbb
mov
pop
jb
adc
into
fwait
sarl
xor
mov
cld
cli
push
mov
push
sbb
rcl
std
lods
pop
xor
loopne
aaa
or
lock
sub
and
or
mov
mov
and
sub
and
jb
dec
sub
mov
nop
fchs
stos
mov
out
sub
push
xchg
mov
adc
push
xchg
xor
hlt
sub
out
xor
add
cmc
sarl
push
cli
fisttpll
xor
sbb
jnp
js
sub
imulb
inc
add
popa
pop
test
xchg
fisttps
or
outsl
push
int
mov
loopne
lock
sbb
sub
pop
sbb
jae
inc
ds
mov
inc
aam
aam
jl
inc
inc
pop
std
jp
std
sbb
adcb
insb
es
sbb
shrd
and
insb
inc
adc
out
and
loope
cwtl
jmp
loope
fidivrl
test
orl
or
je
aaa
leave
mov
movsl
push
out
shll
adc
scas
or
mov
cmp
cmp
jb
in
inc
jbe
mov
fcmovnb
shll
imul
dec
mov
aam
xor
xchg
push
and
add
test
out
cmp
sub
cld
adc
mov
pop
sub
in
push
cld
xchg
aam
mov
cltd
faddp
mov
cmp
cltd
sti
fucomi
pop
add
cmp
pushf
bound
xor
pop
cmp
lock
push
adc
aad
nop
movsb
sub
adc
mov
rclb
and
jg
ss
fadds
push
xor
je
ja
into
sbb
aas
mov
sarb
cmpsb
push
cmpsb
jne
sbb
cmp
dec
xchg
push
out
mov
into
sub
and
cs
popf
cwtl
shrl
add
cmpsb
cltd
rolb
jnp
cmp
and
pop
sbb
adc
loopnew
dec
popf
fists
jl
popa
add
xor
lahf
fdivs
xor
lret
outsl
cmpsb
jmp
cmp
xchg
lret
sbb
add
insl
cmpsw
cs
imul
mov
mov
hlt
push
mov
jne
addr16
imul
xor
mov
pop
xchg
lds
push
lock
insw
cmpsl
adc
mov
sub
test
pop
lahf
jae
cmc
pop
cs
pop
mov
mov
inc
vmwrite
sarl
mov
lahf
sub
icebp
push
xor
mov
cmpsl
loop
sub
jae
jno
inc
adc
repz
inc
sbb
sbb
in
jmp
sti
repnz
out
sbb
inc
cli
jmp
stc
mov
jns
jnp
ds
xor
jl
and
adc
add
pop
pop
cmp
cmp
jns
mov
into
ret
xchg
xchg
push
pop
xor
xor
mov
test
lret
out
mov
icebp
fisttpl
mov
xchg
sub
push
xlat
daa
cmp
pop
push
aaa
popl
sbb
push
cwtl
mov
lret
movsl
scas
ja
add
pop
out
sub
mov
cwtl
xchg
push
repnz
aaa
cwtl
mov
cmp
cmp
xor
pop
popa
out
loopne
mov
jle
je
rcr
fisttpl
sti
pop
leave
sub
sub
pushf
rcr
dec
adc
inc
push
add
jge
sub
andl
aaa
mov
in
fnsave
dec
push
jbe
jo
jne,pn
mov
loopne
nop
lret
fadds
js
stos
call
stos
push
dec
pop
and
ljmp
pop
sub
inc
cs
repnz
xchg
dec
and
push
mov
popa
jge
shll
xor
shll
sbb
fsubl
out
add
or
and
test
cmp
add
ds
cltd
and
mov
pop
mov
in
movsl
in
sub
in
ficoml
insb
fdivs
das
jmp
pop
aas
sub
pop
into
and
jp
fsubl
or
jp
mov
aaa
push
mov
shl
test
jecxz
scas
leave
sub
movsb
mov
fists
inc
jo
shlb
and
mov
push
in
lcall
lods
and
movsb
dec
adc
sbb
test
sbb
dec
add
pop
sbb
outsb
test
xor
mov
aam
and
dec
std
loope
ds
mov
dec
in
jnp
lods
loop
pop
xchg
call
or
pop
stos
shrl
jae
imul
stos
jns
mov
fsubs
adc
xchg
ret
dec
mov
dec
jb
mov
int3
fadds
xchg
jp
repnz
or
je
aam
or
sti
repnz
out
stos
popf
aam
sbb
mov
add
pop
sbb
pusha
push
mov
int
mov
mov
lahf
sub
jne
outsb
mov
push
xchg
dec
cmpsb
in
xor
xor
push
fldenv
out
out
pop
sahf
andb
add
or
popf
adc
ljmp
add
push
iret
push
ja
mov
fwait
sbb
and
mov
loopne
sub
jno
cmpsl
cmpsb
sbb
mov
icebp
push
je
inc
shl
push
std
int3
sub
jle
and
mov
pop
cvtps2pi
stc
ffreep
pop
aas
xor
idivb
outsb
sub
sahf
pop
cmc
sub
daa
xlat
dec
adc
aam
stc
inc
shll
into
int3
out
ja
push
adc
inc
imul
insl
add
popf
xor
std
in
popa
mov
adc
or
push
xlat
mov
stos
imul
loope
cs
mov
sub
sbb
mov
xchg
mov
push
imul
aaa
divl
es
pusha
shlb
jmp
pop
inc
fldl
repz
pop
aad
repz
cmp
mov
mov
es
mov
cmpsb
mov
int3
jge
mov
stos
xchg
or
subl
in
test
push
and
add
std
divb
fdivl
fbld
call
sub
adc
jb
outsb
stos
les
jns
ficomps
dec
push
jle
out
push
pop
ljmp
movsl
push
inc
loope
lock
jb
push
lret
pop
outsl
or
jo
pushf
jecxz
aam
ret
test
nop
std
xchg
sbb
cmp
push
arpl
mov
les
xor
jbe
in
push
sbb
or
jle
inc
scas
adc
cmp
adc
aas
scas
fdivrp
cmp
sahf
pusha
dec
mov
js
jecxz
sub
sub
cmc
xchg
jp
das
lret
fwait
lret
dec
into
and
push
ret
mov
mov
xchg
into
xor
add
add
xor
or
addr16
daa
sub
dec
cmp
jne
out
mov
mov
lret
push
push
cmc
xchg
mov
lret
mov
pop
pop
pushf
js
movl
fwait
and
call
test
sbb
jnp
inc
flds
ljmp
and
test
push
stos
jns
mov
push
jle
mov
out
and
rcrl
inc
sbb
in
sbb
sub
mov
jl
cli
shrl
lcall
jnp
mov
aaa
and
mov
adc
into
call
xchg
lods
add
not
pop
incl
cwtl
dec
add
mov
xlat
mov
in
jns
xor
lds
mov
and
lock
jae
ds
ret
aaa
lret
xchg
jl
dec
rorl
and
scas
cmp
dec
into
push
stc
adc
pop
loope
mov
xchg
repnz
enter
xor
ds
fnstenv
push
mov
les
rcl
xchg
repz
jb
fldl
push
add
jns
loop
loop
mov
add
push
jp
xor
push
fisubl
dec
loopne
rcrl
leave
ja
inc
pop
push
and
pop
mov
sbb
sub
jmp
cmp
push
out
lods
cs
out
es
mov
out
sbb
push
mov
jns
aad
jecxz
or
xor
dec
arpl
mov
push
cmp
fwait
insl
xchg
pop
mov
rcrl
scas
xor
xchg
test
pop
stos
cmp
in
and
popf
test
push
or
test
mov
lahf
jae
nop
or
or
cmpsl
call
mov
mov
push
sbb
out
dec
add
fbstp
jmp
pusha
mov
imul
or
lret
adc
and
jl
mov
cmp
xor
inc
push
das
xchg
xor
adc
hlt
sbb
xchg
and
cmovb
jb
sub
jmp
movsl
adc
mov
dec
insl
adc
xor
outsb
pop
pop
mov
cmp
in
test
movsb
in
mov
ret
inc
adcl
popa
sub
cld
std
movsl
sbb
and
shlb
mov
sbb
mov
test
nop
pusha
into
outsl
jge
bswap
add
inc
push
cmp
out
out
mov
mov
add
mov
mov
push
insb
add
push
sbb
clc
dec
adc
bsr
lahf
pop
gs
fimuls
jge
aas
test
xchg
mov
inc
push
adc
fsub
js
nop
or
movsl
pop
adc
add
sarb
aaa
enter
fucomp
add
fisttpl
insb
sub
xchg
mov
lea
ret
xchg
pop
jbe,pt
inc
movsl
es
xor
gs
sub
push
daa
pop
daa
pop
out
jle
xor
mov
insb
dec
inc
enter
sbb
jae
pop
dec
movsb
test
or
les
mov
sub
inc
hlt
jo
inc
test
jge
sti
into
aas
or
inc
lret
add
repnz
clc
fmuls
mov
jns
push
and
mov
popf
lahf
xorl
into
inc
or
loopne
mov
idivl
out
sbb
cmp
jo
xor
js
adc
subl
push
inc
pop
sub
lds
ret
mov
les
addr16
inc
cs
je
aam
cmpsl
xchg
or
sub
mov
xor
push
xor
push
mov
rcl
adc
jae
xor
imul
or
jecxz
pop
push
dec
or
mov
dec
push
pushf
mov
sahf
scas
jmp
pushf
xor
push
out
in
test
push
stos
aaa
cmpsl
leave
mov
repnz
inc
imul
push
insl
aad
fisttpll
push
add
xor
sti
je
pop
fucomp
fmull
aad
clc
inc
lods
bound
gs
loope
push
fdivrp
xor
es
jb
cmp
pop
iret
cwtl
cld
sbb
in
xchg
adc
mov
xchg
sbb
stc
xchg
or
or
clc
jge
aas
cld
jo
add
fiaddl
xchg
jno
push
or
cli
xor
push
ljmp
das
xchg
xor
data16
cmpsl
or
into
mov
xchg
cmpl
cmpsb
cmp
aad
je
mov
sub
push
arpl
jmp
dec
js
clc
adc
lea
inc
pop
cmp
mov
lret
ret
fldenv
and
push
maskmovq
xlat
rcrb
or
push
lret
insb
test
inc
jecxz
icebp
nop
mov
xor
dec
push
cwtl
lret
movsb
pop
out
push
push
add
cwtl
nop
push
ljmp
cmp
mov
cs
cltd
add
notl
iret
mov
bound
mov
pop
lds
pop
mov
test
cltd
sbb
mov
push
pop
int3
sbb
add
mov
and
sub
in
xor
jnp
int
sub
jb
mov
ljmp
lods
adc
jb
cmp
call
inc
sbb
inc
ds
pop
push
sub
adc
mov
ret
cld
leave
xor
push
sbb
jno
or
mov
cli
inc
cld
lock
pop
and
mov
add
pop
lods
sbb
fidivs
mov
bound
mov
stos
in
push
fimuls
insl
push
ja
dec
stc
out
xor
ret
xchg
nop
mov
push
shrb
xchg
fisttps
aas
adc
dec
mov
pop
or
sub
xor
cmp
jge
pushf
inc
movsl
and
mov
repz
add
aam
movsl
adc
sbb
adc
jg
inc
test
mov
and
push
cmp
or
scas
adc
pusha
je
jo
dec
adc
xor
popf
jo
lret
add
pop
dec
addr16
test
jne
sti
add
repnz
fnsave
dec
cmp
in
push
int3
jne
mov
mov
add
mov
cmp
aaa
aam
pusha
mov
inc
mov
scas
inc
std
jl
call
and
mov
xchg
movsl
dec
mov
sbb
nop
sub
fnstcw
movsb
inc
jp
clc
xor
push
cmpsb
pop
adc
das
mov
daa
add
jl
xor
dec
xchg
imul
mov
insb
ret
hlt
or
jns
aam
inc
imul
fs
arpl
or
repz
push
jnp
ds
jle
push
fdivrl
lds
cwtl
jge
fildl
pop
stc
shlb
outsb
xor
push
arpl
pop
mov
mov
mov
mov
fiaddl
int3
xor
sbb
ficoms
cmpsb
test
xlat
mov
sub
mov
aas
dec
adc
hlt
pop
cmpsb
push
lret
add
cmp
push
adc
outsl
in
dec
xor
movsl
push
add
lods
and
js
aam
jmp
mov
push
clc
cwtl
xlat
js
sahf
push
addr16
addb
jns
sahf
mov
mov
ljmp
push
lcall
inc
je
inc
bound
jbe
xchg
movl
push
jl
pop
dec
mov
cli
negb
and
mov
inc
xchg
xchg
sbb
add
xchg
sub
ss
inc
xchg
pop
jo
lret
call
lods
push
ret
hlt
xchg
cwtl
jge
nop
stos
aad
adc
mov
pop
leave
push
cmp
cli
cs
ljmp
push
dec
enter
and
cmp
idivl
jae
cld
mov
add
ror
js
or
or
nop
sub
jge
xchg
push
jecxz
inc
ror
mov
sub
mov
inc
daa
cs
dec
xchg
dec
incb
dec
jle
and
lods
xchg
pop
addl
sbb
cmp
fisubrl
cld
ret
mov
add
and
in
jp
adc
push
inc
leave
dec
inc
mov
scas
xchg
enter
pusha
or
test
pop
sbb
xor
mov
scas
push
inc
jg
cltd
xchg
sub
les
add
call
jl
lret
or
fadds
pop
jne
call
xchg
cmp
dec
in
xor
add
out
loop
imul
pop
es
add
pxor
xor
sbb
lret
pop
jb
jae
sahf
int3
and
fwait
mov
repnz
mov
mov
cwtl
scas
adc
dec
push
pop
pushf
test
mov
or
fcompl
inc
pop
dec
xor
xchg
dec
push
jns
adc
cmpsb
stc
lds
pop
ljmp
addr16
pop
shlb
aas
cld
js
and
insl
mov
adc
mov
in
jp
xor
ljmp
fdivs
inc
stos
inc
dec
pushf
ja
ftst
xor
jo
andb
push
mov
push
adc
ret
out
sahf
sbb
ja
mov
arpl
aad
dec
sub
xor
dec
adc
jge
pop
xor
or
scas
cmpl
or
daa
iret
or
and
aas
outsb
ss
xchg
sarb
aam
push
xchg
addr16
out
clc
add
cmp
xor
pop
ja
or
adc
je
push
nop
inc
les
rcl
cmp
icebp
or
xchg
dec
mov
dec
pop
sub
arpl
loope
test
dec
pusha
stc
adc
in
xchg
push
loope
cwtl
adc
out
int3
jb
xchg
sti
inc
mov
cmp
jns
frstor
jge
aam
imul
jbe
xchg
inc
ja
sti
jae
add
sub
push
dec
cmpsb
and
inc
push
and
pop
fiadds
xchg
cmp
adc
sub
sysret
adc
mov
pop
and
xchg
xlat
and
inc
push
xor
add
fldl
repnz
and
cli
sahf
test
lahf
mov
fwait
hlt
pushf
in
inc
dec
add
adc
push
orb
or
cli
shrl
push
cmp
int
jmp
adc
mov
sbb
xchg
sub
adc
rorl
cmpsl
mov
stos
or
cmp
arpl
push
mov
pop
mov
cmc
cmpsl
dec
pop
sub
dec
and
daa
addl
sub
sub
lret
andb
push
push
mov
or
dec
pusha
inc
add
mov
sbb
xlat
out
mov
fildll
lea
xchg
or
jmp
ret
xor
mov
sub
adc
clc
addr16
mov
sub
dec
sbb
or
jne
ficoms
xchg
loopne
push
out
pop
enter
cld
or
push
pop
cwtl
push
enter
leave
push
or
sbb
dec
pushf
ret
lret
sub
ror
fs
out
sbb
pop
repnz
aad
imul
lcall
mov
inc
lret
dec
clc
out
repnz
adc
adc
jecxz
mov
xchg
sbb
adcl
jp
or
rcll
imul
cmpsb
test
inc
add
cmc
dec
jae
inc
mov
or
lcall
nop
mov
out
fildl
pushw
or
shll
icebp
jecxz
inc
jp
ret
lods
fdivrl
jp
cmp
outsb
push
ret
mov
shll
sub
push
lret
pop
pop
scas
mov
add
xor
adc
es
in
stos
jnp
cwtl
lods
into
sub
cld
mov
stc
rorb
inc
and
popa
pop
shrb
jns
test
pusha
add
push
push
es
fsubr
mov
aaa
mov
pop
fmul
push
mov
inc
data16
lret
lock
popl
cmpsl
mov
les
sti
insb
test
mov
test
pushf
mov
gs
mov
test
inc
mov
cmp
outsb
inc
pop
aam
pop
pop
in
mov
adc
into
aaa
inc
cmp
call
stc
push
or
pop
mov
xor
adc
mov
fstpl
lods
ja
lds
pop
std
mov
jne
sarl
jae
les
mov
pop
ss
xchg
push
push
lea
mov
dec
daa
add
mov
mov
lcall
test
mov
mov
psllw
nop
daa
mov
xchg
cli
inc
in
pop
test
hlt
subb
fildl
pavgb
dec
jne
lea
orb
inc
insl
arpl
ljmp
jge
test
adc
pop
fsub
jne
testl
dec
jbe
imull
js
xlat
jmp
fwait
test
adcb
jge
cmp
lods
es
shll
sbb
movsl
int
fcomps
sub
pop
out
ds
lods
push
pop
mov
xchg
cmpsb
in
pop
xchg
or
jle
jo
incl
pop
insl
mov
mov
lock
xchg
enter
push
and
pop
fstp
in
and
stos
int
add
add
sub
ja
jmp
push
mov
lock
fnstcw
pop
and
icebp
push
es
iret
imul
mov
pop
inc
inc
sub
pushf
xchg
enter
aas
xchg
push
sbb
fidivrs
xchg
outsl
fadds
jb
pushf
dec
pop
mov
mov
sar
sbb
jl
push
lahf
mov
pop
adc
and
cwtl
psubsw
shlb
nop
jne
inc
add
negb
pop
sbb
sub
pushf
mov
movsl
out
lods
ret
push
jl
mov
xchg
repz
and
lods
cld
mov
xchg
jl
adc
mov
dec
je
xchg
out
sbb
ficomps
inc
push
jb
dec
rolb
addr16
mov
mov
dec
push
add
fcoms
pop
fwait
inc
cmp
jecxz
ficoms
jg
xlat
not
jns
add
out
cmp
inc
cld
sub
mov
decl
shlb
or
sub
xchg
xchg
ret
mov
fstpl
jmp
push
stc
xor
mov
in
push
mov
mov
mov
push
cmp
cli
es
out
add
aam
std
xchg
dec
xor
shll
mov
jl
mov
xchg
cwtl
jp
cwtl
ficoml
gs
mov
mov
loop
sub
xor
pop
inc
jle
aad
pop
or
mov
aad
sahf
sbb
pop
push
jo
int
in
jmp
cmc
mov
and
mov
or
mov
in
mov
mov
pop
ja
out
loope
pushl
outsb
lcall
aam
pushf
mov
or
lods
popa
dec
cmp
popf
jg
imul
fs
xor
fldcw
dec
test
fwait
rcrl
cld
pusha
jo
mov
pushf
add
mov
xchg
rcrl
sarb
jo
adc
mov
sub
xchg
lods
fimuls
dec
rcrl
mov
mov
iret
mov
pop
sub
mov
xorb
mov
rcrl
jmp
jae
ret
and
xchg
ret
shl
mov
idivb
pop
scas
sahf
sub
test
xchg
push
push
aad
scas
das
out
mov
cmp
push
add
sub
scas
push
loopne
adc
sti
out
call
shrb
pop
mov
inc
in
andb
sub
dec
adc
jg
push
pop
or
pop
dec
imul
xchg
clc
data16
adc
sbb
fidivrs
int
les
mov
push
jge
xchg
iret
push
inc
loopne
push
lcall
or
jp
jne
mov
pop
push
push
fmuls
lds
cld
xor
int
adc
ret
push
fs
fsubr
push
or
imul
ficompl
loop
data16
mov
pushf
jno
dec
outsl
dec
push
pop
jmp
mov
sub
in
cmc
repnz
or
movsl
inc
mov
fisubrl
xor
loop
decl
scas
leave
fidivl
push
mov
addr16
xor
adc
jmp
xor
inc
xor
push
add
outsl
mov
test
ja
mov
les
ja
sbb
pop
or
xchg
fdivrp
mov
stos
mov
sete
fwait
stos
inc
imul
sahf
jns
push
addr16
xor
orl
aaa
ret
fldenv
popf
repnz
lahf
jae
imul
mov
lds
decl
xchg
push
cmp
aam
xchg
in
xlat
mov
lods
and
aam
pop
cltd
je
push
addb
mov
mov
sub
dec
mov
xchg
push
mov
bnd
and
mov
loop
dec
push
jg
sti
lea
xor
std
nop
gs
in
fsubrs
or
cmpsl
movsb
rcrb
std
js
rcr
movsb
outsl
mov
push
pop
adc
or
jne
pop
xor
mov
jne
gs
mov
xor
aam
jb
ret
in
andb
xchg
inc
mov
pop
es
divl
xor
or
sub
cmpsb
mov
aam
push
mov
sbb
xchg
movl
sarl
fsub
push
mov
aas
in
jnp
inc
jecxz
lret
pop
aam
push
push
call
aas
or
add
push
popf
and
out
ds
dec
mov
pop
ljmp
or
mov
adc
dec
cli
fwait
or
mov
inc
sub
stc
lret
sbb
movsl
ret
mov
sbb
and
out
inc
add
sbb
in
cmpsb
xor
imull
jle
arpl
xchg
adc
ss
mov
sti
pop
dec
mov
push
mov
test
cmp
fisubrs
jl
je
pop
pop
cmp
out
sbb
inc
rcr
bound
dec
and
cmp
lahf
movsb
ficoms
inc
mov
sbb
stos
lret
sub
pop
and
decl
push
adc
mov
and
xchg
std
mov
inc
add
shrl
lret
mov
pop
lahf
roll
sub
inc
cmp
pop
or
mov
mov
mov
mov
call
test
fstenv
adc
dec
jecxz
pop
mov
mov
push
mov
fsubrl
ret
mov
mov
sub
mov
sahf
add
xchg
cltd
in
pop
xlat
add
xor
call
push
arpl
aad
repz
aaa
push
js
xor
dec
add
ror
scas
repnz
or
mov
pusha
mov
sub
mov
stos
pop
jnp
push
icebp
ret
imul
imul
jns
pop
ret
test
sub
mov
inc
mov
or
xor
add
push
fistpl
cli
xor
js
mov
mov
fwait
inc
jge
int
jb
orl
clc
aad
clc
xchg
inc
ds
lods
mov
inc
cmc
bound
jle
add
cmp
shl
ljmp
xlat
dec
mov
popa
dec
jmp
sbb
push
pop
inc
cmpsb
ljmp
dec
adc
arpl
hlt
loope
inc
divb
adc
or
iret
sarl
mov
nop
jge
pusha
add
xchg
sub
inc
cmp
loope
test
ljmp
xor
lret
sarl
rcrl
daa
inc
lret
dec
cs
adc
pushf
xchg
lods
popa
ficomps
and
clc
jns
xor
mov
lods
lods
push
dec
iret
mov
gs
push
lock
push
cmp
and
imul
push
in
mov
jl
outsb
fdivs
xor
pop
or
mov
sbb
lret
sub
sub
ljmp
dec
mov
rclw
adc
sub
addr16
scas
movsb
xchg
mov
sbbl
mov
jnp
or
mov
add
rorl
shll
mov
fnsave
push
pop
and
test
dec
data16
imul
in
or
or
popf
or
dec
jno
iret
imul
cmc
cs
pop
pop
inc
jne
xchg
int3
sbb
int
jbe
mov
dec
aaa
test
mov
fs
cmp
adc
dec
mov
fmuls
push
mov
jg
xchg
adc
repz
adc
jno
or
pop
mov
sub
jg
push
in
cmp
sub
je
xchg
rorl
jl
xor
cmp
lret
ret
ss
fcompl
cmp
lcall
sarb
xchg
and
add
in
cld
push
stos
mov
outsl
cli
push
add
adc
stc
scas
mov
and
mov
lds
scas
scas
pop
mov
fucom
cmc
or
xor
std
push
adc
push
mov
es
lcall
andl
push
sarl
pop
xchg
and
mov
cmpsb
enter
lods
mov
sbb
rcrb
pop
pop
push
sub
sbb
adc
out
sbb
mov
xor
adc
test
and
daa
daa
sbb
insb
jge
inc
iret
dec
dec
push
or
mov
bswap
xchg
push
mov
mov
adc
packssdw
add
test
sub
xor
ret
mov
pop
movsl
xchg
and
clc
sbb
lods
lret
cmp
notb
leave
and
outsl
xchg
cmp
cmp
xchg
jmp
cmp
cmpsb
call
gs
inc
mov
cli
mov
nop
and
in
add
daa
add
cltd
or
inc
repz
jle
xor
mov
add
pop
mov
pop
mov
pop
jbe
es
add
aam
aad
nop
mov
cmp
fistpll
xor
data16
adc
lahf
xchg
inc
in
inc
push
sbb
and
xchg
imul
int3
iret
movsl
mov
sub
sub
outsb
xchg
adc
loop
jo
or
iretw
leave
loopne
out
test
lcall
cwtl
xchg
hlt
sub
rol
nop
lods
daa
les
and
mov
cmp
fwait
push
dec
push
insl
sub
insl
add
xor
push
xchg
mov
test
jp
leave
inc
nop
lods
sbb
cmp
hlt
movsl
dec
jae
jg
cli
aad
jnp
jmp
sub
inc
jp
mov
sub
ljmp
inc
leave
sub
pusha
sub
fwait
jb
stos
or
iret
xchg
cmp
lret
xor
xlat
fsubp
mov
jo
mov
xlat
mov
pushl
xor
push
nop
pop
jecxz
pop
pop
mov
je
lods
cmpsb
pop
dec
mov
push
lods
cmpsl
shrb
daa
mov
dec
std
aam
adc
jbe
lahf
dec
or
leave
call
mov
jo
aas
cs
pop
fucomp
iret
jecxz
push
je
ss
jo
push
xchg
rol
dec
push
mov
push
adc
cmp
lret
arpl
pushf
or
mov
cwtl
sahf
push
fsub
scas
push
sbb
jnp
insb
adc
loope
xchg
mov
subb
push
sbb
or
sbb
push
and
ljmp
arpl
popa
mov
mov
lea
xchg
add
add
or
inc
repz
and
sbb
add
push
aas
add
dec
pop
es
mov
mov
lret
test
sbb
clc
test
mov
ds
sbb
inc
adc
mov
push
shll
sub
cs
outsl
inc
mov
je
nop
daa
imul
into
jmp
mov
pop
dec
push
jge
aas
xor
push
dec
iret
cmp
adc
sahf
ficomps
repz
loope
and
imul
test
xchg
jne
icebp
movntq
out
jg
repnz
addr16
jmp
xlat
jne
es
jno
cvttps2pi
jnp
sbb
dec
or
xor
imul
popf
mov
fs
sub
xor
add
lods
clc
nop
push
into
mov
adc
xor
cmp
pusha
pop
call
xchg
mov
cwtl
add
ficompl
ficoms
pcmpgtd
daa
xor
dec
lds
mov
adc
push
push
inc
sub
pop
out
sub
popa
inc
sub
cs
mov
mov
sbb
push
sub
test
pop
popa
lret
jmp
enter
dec
lods
roll
add
xchg
cmp
sbb
aas
addr16
sbb
or
dec
mov
out
push
in
xor
cmp
xor
out
cmc
add
inc
imul
add
inc
aad
jbe
in
cmp
mov
pop
lods
std
mov
leave
imul
jae
shr
pop
jns
push
adc
nop
xchg
push
jns
adc
xor
jne
or
fucom
dec
xor
gs
jns
fwait
ss
mov
lea
mov
fsubp
cltd
push
dec
mov
inc
add
cmp
daa
mov
sbb
movsl
xor
or
loopne
mov
inc
mov
cmp
ss
sub
sahf
mov
add
add
lods
repnz
roll
addl
mov
or
leave
cli
xchg
xchg
pop
lock
jno
shlb
cli
lods
aad
push
or
mov
dec
ljmp
ficomps
imul
jbe
push
hlt
jmp
xchg
sarb
movsb
out
inc
sbb
pop
js
enter
and
imul
rcrl
sub
jp
subb
jbe
fistl
rorl
dec
addr16
jbe
sub
jl
fiadds
adc
leave
mov
das
or
data16
push
dec
push
mov
sub
test
or
or
and
jle
adc
stc
fcomip
jge
js
movsb
mov
jecxz
or
pop
push
dec
xlat
mov
mov
in
imul
xchg
in
mov
std
push
lods
cli
xchg
push
jnp
pop
jb
or
push
pusha
xchg
and
idivb
fidivl
xlat
lret
pusha
push
pop
movsl
icebp
enter
mov
lds
cmpxchg
fldt
inc
leave
mov
mov
jg
in
pop
lcall
cmp
cwtl
lods
jo
xchg
jl
imul
repz
daa
idivl
and
inc
inc
mov
lea
pop
pop
in
inc
or
inc
lods
rclb
idivl
jae
adc
xchg
jno
sbb
rol
adc
fwait
pop
push
aad
sbbl
in
sahf
ret
fldcw
mov
mov
ja
pop
cmpsl
cmpsl
loopne
imulb
mov
adc
cmovbe
cwtl
pushf
lret
xchg
jl
out
aaa
sub
imul
mov
and
mov
lcall
xchg
jle
std
fcmovne
jae
out
jno
aaa
sbb
lret
dec
xor
fistpll
pop
add
pop
mov
adc
or
fnsave
fwait
enter
adc
imul
xor
ss
pop
mov
adc
mov
cmp
aam
fimull
jecxz,pt
cmp
adc
pop
mov
aaa
xchg
filds
repnz
call
out
fimull
push
sbb
xchg
shlb
negb
pop
lcall
ljmp
xchg
scas
test
sbb
sbb
ljmp
fs
and
mov
push
pop
xchg
inc
inc
div
jp
pushw
out
stos
mov
popf
fcompl
ds
mul
jge
mov
sbb
jg
jl
adc
je
rolb
cmp
dec
or
xor
lods
xor
cmpl
mov
fimuls
repz
rolb
pop
jecxz
pop
cwtl
in
cmp
mov
sarl
hlt
lods
adc
jnp
jno
loope
jnp
xchg
rdmsr
ss
push
inc
pop
mov
fildl
and
test
and
les
xchg
pop
xor
push
int3
jl
dec
inc
mov
jl
test
xchg
jl
pop
pop
adc
sbbl
stos
cmp
sbb
jp
sbb
test
imulb
je
cmp
notb
sub
outsl
pop
fists
and
daa
jne
mov
fcomp
rol
inc
loop
push
dec
push
cmc
fs
xor
push
shl
inc
sbb
fcmovnbe
test
loopne
inc
shr
lahf
mov
lea
jecxz
ret
pop
std
pop
add
pop
aaa
popa
cmc
aas
pop
lret
adc
sti
sbb
mov
push
lret
fcomps
int3
mov
mov
cld
and
lret
outsb
sahf
xlat
xchg
inc
xor
rcrl
cmp
sti
inc
sub
pushf
rcrb
mov
cmp
cld
cmc
lds
dec
cmp
in
inc
jns
std
lcallw
or
test
jno
or
orb
sub
cwtl
fs
push
adc
jmp
data16
adc
mov
lahf
push
push
sbb
sbb
adc
and
jnp
mov
xchg
pop
dec
jbe
cmpsb
or
mov
pop
mov
cmp
mov
mov
cmp
leave
sub
imull
pop
das
mov
es
inc
pushf
js
shl
pop
out
outsl
sbb
cwtl
xor
jmp
jne
daa
and
pop
cmp
jg
lret
mov
fsts
les
pop
ja
test
or
mov
cmp
fistl
out
cmp
push
cmp
xchg
xchg
xchg
sar
xlat
test
ds
in
jg
jp
cli
std
pop
push
mov
adc
ds
shlb
mov
jle
pop
mov
jne
cmp
cmpsl
push
xor
mov
cmpsb
cmp
loope
sub
mov
js
shl
cmpsb
xchg
jno
and
jo
sbb
int
int
leave
mov
push
imul
push
std
pop
loopne
lcall
mov
pop
jge
fst
in
negl
clc
aam
outsl
mov
pushf
subb
mov
inc
int3
mov
mov
js
aaa
add
enter
ficoms
sub
cmpsb
xchg
outsb
ret
mov
flds
loop
inc
rcrl
pop
push
mov
out
lock
sbb
cmp
jle
dec
lods
daa
lret
sbb
subl
cmp
stos
mov
outsl
push
lret
pusha
sub
ss
inc
mov
mov
push
jle
mov
rorb
out
mov
cmp
insb
mov
mov
dec
jle
mov
ss
ret
in
mov
into
mov
adc
pop
xlat
lret
xor
xchg
aam
jbe
pop
lret
scas
inc
andl
mov
sub
or
push
inc
in
out
sbb
pop
sbbl
and
cmp
add
pop
mov
inc
fiaddl
cmp
loope
sarb
mov
into
pushl
mov
fwait
lahf
pop
int
xor
or
mov
leave
cmp
ret
js
jg
sub
xor
jne
pop
out
push
bswap
leave
cs
lds
dec
jmp
inc
mov
mov
push
xchg
test
ja
xlat
call
add
cs
push
push
dec
jmp
sbb
and
daa
xchg
ret
cmpsl
cmp
pop
pop
adc
movsb
push
hlt
into
dec
xor
cltd
xchg
fcom
cs
addr16
fmuls
inc
dec
sub
je
lea
push
xlat
ja
ret
jp
dec
and
mov
dec
jb
fistpl
gs
pop
jg
fisubs
xlat
ds
dec
push
jmp
and
leave
cmp
cmp
scas
add
out
cmp
in
pop
mov
dec
mov
or
aad
pop
test
das
repz
cld
or
dec
leave
adc
mov
iret
xchg
jp
inc
outsb
dec
jmp
or
sub
jge
lods
inc
lret
jge
inc
cmpsb
enter
cmpb
cmpsl
xor
outsl
adc
or
loope
arpl
mov
mov
test
sub
pushf
jne
mov
insl
frstor
pop
movsb
repz
dec
push
stos
sti
test
out
pop
int
cmpsb
idivl
adc
rol
lods
fwait
ljmp
fldt
inc
aam
jge
loopw
jo
ljmp
loope
pop
xchg
mov
cmc
sub
insb
orl
cld
mov
iret
push
xchg
dec
cmp
stc
repz
jnp
loopne
mov
psubusb
mov
xor
push
test
sarb
outsl
sub
jg
jge
es
push
add
pushf
aas
sar
sbb
pop
das
cli
stos
cltd
or
les
sub
call
mov
sub
sub
or
push
fwait
pop
xlat
adcl
aaa
cmp
mov
in
pushl
sbb
cld
insb
cltd
xchg
xchg
out
xchg
lods
js
mov
dec
sub
sub
adc
xor
lahf
sub
inc
jmp
sub
cmp
xchg
ret
push
mov
xchg
cmp
cmpsb
or
aam
or
pop
mov
arpl
loopne
ss
aam
fwait
stc
and
bound
sti
int
add
mov
push
test
add
fimuls
or
mov
sub
es
xchg
mov
xchg
dec
repnz
popa
fwait
js
add
pop
adc
jbe
mov
out
sbb
js
push
shrb
and
sahf
not
push
xor
int3
ret
les
stos
or
test
inc
or
data16
imul
cmp
xor
gs
bound
outsb
jecxz
addr16
dec
in
push
repz
xor
inc
adc
out
loop
ja
cmp
and
cltd
pop
mov
outsl
dec
and
insb
dec
dec
lods
xchg
in
lods
push
cli
inc
pop
loopnew
xchg
or
les
cld
dec
mov
or
icebp
or
out
add
jno
aas
mov
push
jno
xchg
push
movsl
lcall
push
add
sarl
imul
and
ja
filds
data16
leave
shrl
js
iret
out
mov
inc
fwait
jns
aas
pop
aas
and
sbb
mov
arpl
arpl
imull
pop
mov
push
scas
sbb
xchg
pop
mov
mov
dec
int
insb
loope
addr16
negb
repnz
insb
adc
dec
popa
push
je
es
mov
add
mov
dec
sub
js
pop
sub
or
ss
sbb
fucom
aas
jnp
mov
lea
lcall
pop
add
test
xor
ja
dec
cmp
mov
mov
imul
out
out
add
fdiv
mov
cmp
xor
ds
dec
cmp
adc
out
mov
hlt
icebp
add
xchg
sbb
icebp
adc
ds
push
roll
insl
shrl
xchg
xor
jnp
inc
sbb
adc
and
test
lea
sahf
xor
push
cmpb
jbe
out
jmp
and
cmp
pop
in
sbb
mov
push
fs
sti
jbe
mov
clc
jbe
stos
sub
inc
xchg
imul
shl
in
les
iret
std
inc
aam
xor
flds
test
inc
push
dec
out
add
lods
inc
aas
inc
loop
adc
mov
pop
mulb
movsb
adc
or
dec
mov
fadd
push
dec
in
cltd
out
iret
xor
mov
dec
push
pushf
mov
neg
sbb
insl
mov
adc
or
lods
jl,pt
jbe
and
loope
jns
mulb
xchg
imul
arpl
adc
adc
out
pop
sbb
mov
lods
in
orl
pop
fs
gs
test
xor
and
inc
cmp
adc
sub
sub
xchg
add
and
mulb
jmp
dec
sub
lahf
lret
add
ja
pop
sub
mov
mov
xchg
out
hlt
jge
out
mov
push
fstpl
lret
out
or
add
jbe
xchg
js
decl
inc
shl
mov
shlb
or
outsl
mov
jmp
jg
bound
mov
ss
mov
push
xor
xchg
aaa
fsts
cmpsl
rol
pop
jnp
or
sub
push
and
adc
sub
cli
push
stos
adc
or
sahf
inc
add
rcpps
cmp
pushl
jnp
call
into
daa
rcrb
lahf
inc
xchg
clc
dec
push
jle
sbb
cli
jns
mov
sbb
sbb
in
repnz
cwtl
mov
cwtl
imul
loope
sub
xlat
lahf
divb
cmc
sbb
mov
or
ret
mov
imul
push
sbb
pop
mov
ss
inc
in
xor
xlat
sub
and
sti
mov
mov
mov
in
cld
and
inc
xor
jl
in
mov
dec
adc
xchg
ret
sbb
hlt
or
nop
out
xchg
mov
xor
lods
and
pop
pop
movsb
out
or
out
lcall
imull
stos
inc
or
push
pop
xchg
aam
outsl
and
movsb
sbb
push
dec
out
mov
push
and
lods
movsb
xor
nop
sub
xor
mov
filds
vorps
arpl
push
add
sbb
les
cmp
in
fsubr
mov
xchg
aad
adc
pushf
outsl
fisttps
push
jbe
mov
outsl
ret
inc
fwait
mov
shll
rcr
sarb
es
inc
and
nop
leave
test
xchg
movsl
sahf
mov
cmp
insb
dec
xchg
dec
mov
lods
negl
and
mov
in
andl
imul
jns
mov
push
mov
ret
cmp
dec
out
pop
or
ss
cmp
push
stos
or
and
sti
scas
cmpsb
out
shll
aaa
xchg
inc
repnz
test
mov
cmpsb
dec
lea
sub
cltd
popf
jg
int3
in
sbb
and
stos
fbld
mov
cmp
shlb
movsl
xor
pop
iret
xchg
test
inc
mov
movsb
pop
dec
add
or
mov
ds
inc
dec
push
jbe
push
xor
sbb
push
cmp
mull
pop
bound
mov
mov
pop
clc
push
mov
push
mov
push
mov
inc
xor
gs
nop
popl
push
in
adc
lahf
popf
push
cmpsb
in
pop
cld
cli
out
inc
adc
xlat
enter
xor
mov
push
call
or
mov
lods
add
push
push
mulb
push
les
rcl
jge
cmpsl
fst
jge
jno
jmp
ret
xor
inc
cmc
jnp
dec
sbb
mov
xchg
adc
rclb
scas
push
sbb
xor
xor
mov
pop
ja
inc
pop
in
or
adc
cmp
out
mov
addr16
addb
push
out
insl
outsb
jmp
pop
dec
rep
stos
in
cmc
add
fwait
cli
mov
xor
aaa
icebp
adc
cmc
pop
inc
scas
pop
inc
ss
sbb
or
dec
add
and
mov
in
lret
jp
enter
test
dec
mov
clc
xorb
das
enter
out
pusha
xchg
jnp
enter
pop
mov
bound
mov
cs
cmpsl
mov
jns
jp
lock
xchg
enter
sub
xor
rcl
ljmp
cmpsb
aad
addr16
push
lcall
jmp
out
incb
rcll
mov
mov
jbe
push
xchg
movsb
inc
add
aas
dec
sahf
xchg
pushf
mov
popf
sbb
mov
or
adc
mov
dec
pop
shrb
push
pop
shrb
xchg
repnz
sbb
adc
aad
loopne
push
cmpsb
push
imull
and
sti
scas
adc
inc
xchg
cli
fdivrl
inc
mov
pusha
jge
fcom
and
push
mov
cmp
shl
or
pop
std
idivb
xchg
add
aaa
mov
lods
xchg
mov
mov
jne
in
ljmp
adcl
dec
adc
xor
pop
jns
ficomps
int3
xor
push
xor
test
dec
cmp
xchg
mov
lock
add
mov
mov
or
jmp
push
mov
jmp
mov
fistpll
fdivrl
xor
lahf
cwtl
or
xor
pusha
jp
push
ret
and
mov
inc
dec
xchg
int
xor
ret
je
cld
or
mov
pop
mov
or
and
loopne,pn
fcmovnbe
jp
shrb
out
push
adc
or
adc
inc
fldcw
add
cmp
fildl
cmp
pop
cmp
aam
push
int
pop
mov
or
fldt
mov
dec
pusha
mov
int
jb
lcall
movsbl
mov
dec
and
pop
pushf
fistpll
lcall
or
pop
sahf
mov
jb
cmp
pusha
lret
cwtl
sarb
and
adc
jb
out
insl
in
push
fdiv
push
fildl
mov
mov
je
movsb
lret
pop
ljmp
push
mov
xchg
xchg
mov
loop
xchg
xchg
sub
xchg
dec
sub
cwtl
push
loopne
jo
adc
cmp
or
xchg
xor
inc
push
out
mov
xchg
fdivl
es
push
ljmp
or
jle,pn
loope
lds
and
and
out
je
xchg
jne
ljmp
mov
cmp
or
xchg
dec
outsl
pop
jne
mov
cs
out
xchg
and
cmp
lods
jle
sub
inc
clc
cmc
fidivs
pop
and
dec
mov
out
insl
xchg
xor
into
jnp
loop
lcall
insb
lahf
daa
js
rcrb
add
adc
hlt
shll
push
jno
lds
mov
dec
bound
fisubl
testl
sti
xchg
sbb
cmp
jge
std
cmp
xchg
jbe
movsb
imul
pop
mov
nop
je
or
mov
push
lahf
sub
aaa
out
mov
push
neg
lcall
xchg
ja
leave
ret
mov
dec
gs
jnp
ja
icebp
jge
idivl
aas
inc
dec
inc
pop
cmp
push
sub
and
or
xor
bound
in
lret
sub
out
xchg
sti
lds
imul
call
aaa
cli
mov
repz
outsl
push
sahf
sarb
inc
and
push
xchg
icebp
insb
and
clc
mov
sbb
mov
fstps
mov
xchg
pop
rolb
mov
xchg
aaa
into
arpl
pop
inc
cmp
add
sbbb
dec
mov
stos
pop
je
aas
cmovnp
jne
clc
or
bound
xor
and
dec
std
and
add
xor
pop
jbe
push
pop
lret
cmp
cmp
loopne
rorb
push
pusha
xchg
jo
pushf
cli
dec
fistps
dec
cltd
hlt
aaa
lock
subl
cmp
inc
sbb
jno
stos
rcll
call
test
jnp
add
inc
scas
xchg
push
jp
shll
pop
mov
cs
cmc
pop
in
imul
shl
dec
push
leave
inc
in
in
int3
inc
add
or
jne
lock
push
inc
adc
pop
mov
lods
mov
adc
push
les
nop
inc
add
js
add
push
or
test
mov
dec
mov
mov
xchg
stos
mov
test
mov
cmpl
mov
sahf
jmp
cmp
dec
test
add
out
loope
mov
in
aas
mov
stc
xor
jb
imul
push
test
into
mov
mul
andl
pushf
xorl
clc
xor
sub
or
jae
sahf
pop
jnp
ljmp
inc
test
fdivl
subb
dec
pop
je
fcmovne
je
icebp
std
shll
fcomip
test
inc
icebp
mulb
adc
xchg
rclb
lods
mov
push
inc
adc
outsl
jmp
xlat
or
mov
inc
popa
inc
pop
adc
leave
test
sahf
ret
mov
mov
mov
pop
mov
push
push
ss
cmp
jb
and
ficomps
test
scas
shrb
add
jp
xchg
int3
jo
popf
jne
push
or
enter
lock
orl
repnz
jecxz
cmpsl
inc
dec
outsl
inc
xlat
test
pop
push
lods
aas
dec
push
daa
mov
mov
jnp
inc
in
cld
pop
and
stc
pop
xor
xor
pusha
pop
xchg
jbe
and
xchg
dec
and
adc
adc
insl
stos
ss
pushl
jge
pop
and
outsl
pop
sbb
mov
jnp
dec
jbe
shll
daa
adc
scas
mov
jne
sahf
and
push
mov
jmp
mov
xchg
pop
insb
mov
rol
xor
in
xchg
lahf
mov
mov
scas
loop
push
dec
negl
ss
and
cmp
imul
data16
mov
lds
mov
lds
adc
out
stos
mov
push
je
push
xchg
push
aas
pop
js
push
sub
mov
pop
cmp
in
cmc
lods
dec
inc
popf
imul
sub
es
sbb
or
cmpxchg
inc
mov
lahf
mov
mov
pop
or
mov
pop
hlt
leave
add
inc
dec
mov
fildll
sub
sub
dec
add
aam
js
ss
xorl
cld
sbb
jl
dec
jge
xorb
and
add
or
jge
dec
adc
call
ljmp
inc
popa
or
mov
pop
ror
jge
rcrl
push
mov
lret
jne
fmuls
push
std
pop
ljmp
adc
sub
enter
idivl
xor
adc
in
mov
and
mul
fdivr
int
std
xor
sbb
mov
stc
mov
sahf
mov
or
cmpsl
adc
and
adc
fadds
fsubrl
mov
dec
inc
scas
adc
test
jo
xor
pop
gs
icebp
sub
xorl
cwtl
test
dec
xchg
stos
out
pop
cmp
pushf
call
out
popf
adc
into
jnp
xor
push
push
test
sub
or
and
icebp
push
fsubrl
jecxz
popf
inc
inc
and
cltd
and
sub
jae
test
mov
cmp
fcoml
inc
pop
push
xchg
xchg
imul
in
test
ja
call
inc
mov
jae
mov
fisubrl
xor
rol
fldl
xchg
sub
lods
loop
cli
testl
adc
and
addr16
ja
mov
push
xchg
data16
pop
or
aas
lods
mov
stos
inc
fs
ret
inc
test
add
push
push
rolb
in
push
dec
fsubl
jns
mov
sar
mov
std
or
xchg
out
mov
imul
in
ljmp
mov
ss
jae
fadds
mov
out
lcall
test
lods
ja
mov
sbb
subb
daa
xchg
aas
stc
xor
jmp
ret
jae
call
push
mov
and
push
sbb
xor
sbb
sub
mov
push
add
jne
xchg
mov
sbb
outsl
xor
ret
xchg
mov
mov
inc
mov
pushf
and
sbb
stos
adc
pop
repnz
aaa
push
sbb
xor
out
or
insl
popl
aad
popf
push
mov
loope
add
sbb
jg
pop
pop
push
enter
stos
fadds
xchg
or
jb
xchg
dec
mov
and
mov
mov
sub
xchg
loop
out
mov
jle
pop
dec
push
cmc
in
loop
adcb
jnp
jnp
imul
xchg
xchg
loopne
lret
sub
ret
mov
pop
xchg
arpl
jb
movsb
adcb
or
push
clc
leave
mov
into
cs
es
push
jl
mov
sti
pop
pop
iret
pop
sbb
xchg
arpl
test
dec
js
xchg
mov
aad
in
inc
int3
ret
roll
fcoml
test
dec
jecxz
icebp
in
ret
dec
mov
jno
in
and
xor
inc
sbb
push
pop
xchg
inc
push
iret
xchg
gs
push
sub
lahf
xchg
inc
out
sbb
clc
mov
sub
adc
popl
icebp
jge
scas
push
es
sbb
mov
stos
in
jecxz
xor
je
movsb
lret
pop
jb
ja
sbb
or
pop
sti
sub
inc
int
nop
icebp
je
mov
inc
mov
fsincos
aas
sahf
adc
stc
push
mov
fcoml
and
sbb
js
adc
or
cmp
pop
mov
neg
pop
pop
rcl
fstps
rorb
jae
sub
jg
cmc
hlt
lcall
add
cltd
aam
xchg
sub
mov
out
mov
inc
push
aad
xor
xchg
lcall
xor
testb
ljmp
xor
jns
xor
xchg
ds
jne
add
test
inc
mov
mov
inc
std
adc
mov
addr16
es
pop
inc
pop
xchg
fdivrs
orb
in
push
fstps
in
sub
mov
movsl
addr16
hlt
push
pop
mov
jns
outsl
xchg
pop
lods
stos
popf
lods
outsl
dec
dec
shl
add
sub
or
adc
insl
fisttpll
repz
sub
test
insb
bound
mov
pushf
jo
cltd
sub
mov
nop
sbb
mov
push
sub
andl
pop
gs
mov
addr16
das
mov
sub
or
aam
sub
sub
lods
push
sbbl
and
mov
mov
pushf
cmpsl
mov
mov
add
xchg
inc
in
stc
xor
push
add
xchg
cmp
sub
icebp
cmp
xor
push
mov
pop
pop
fs
cli
insb
jp
dec
lcall
bound
and
xor
test
stc
xchg
imul
pop
push
hlt
pop
cmp
sub
adc
andb
mov
fsts
or
rcrl
xor
pop
das
aam
imul
sub
pushf
or
pop
jo
pop
sbb
nop
mov
lock
jae
in
pusha
lds
jns
xlat
repnz
test
pop
push
add
inc
jo
das
adc
lahf
ljmp
inc
lcall
add
pusha
clc
mov
push
dec
xchg
ss
frstor
push
cmp
mov
int
insl
mov
cltd
xor
inc
inc
daa
adc
stos
push
add
cmp
in
mov
add
jl
cmp
jecxz
adc
mov
fld
sahf
pop
or
xchg
inc
out
rcll
jnp
mov
push
test
fimuls
cmc
sub
jbe
sbbl
int3
mov
clc
inc
jbe
xor
mov
hlt
inc
loopne
int3
mov
lret
sbb
arpl
push
cwtl
lds
in
mov
nop
out
add
rclb
cmp
jb
cltd
shlb
push
pop
test
jns
scas
and
ds
mov
lods
int3
outsl
stos
mov
jp
cmp
popa
pop
int3
mov
mov
fidivrl
fdivr
adc
ret
sbb
fwait
fwait
out
add
sar
pop
outsb
cmp
jne
push
push
jge
das
add
mov
sub
cmp
jle
dec
dec
add
push
pop
das
inc
fdivr
jbe
call
dec
cmp
pop
xchg
scas
daa
subl
jecxz
insl
mov
mov
adc
adc
mov
cmp
adc
int
xchg
outsl
sbb
adc
fidivs
adc
lret
mov
sub
arpl
fwait
xchg
je
push
sbb
mov
outsl
sub
mov
aam
push
mov
xchg
jbe
sub
push
rcll
cmp
inc
mov
xor
int
repz
and
or
mov
ljmp
lea
dec
inc
scas
jae
ret
scas
jae
fwait
cs
sbb
insl
sbb
jae
push
pop
mov
push
sbb
cmp
add
inc
cmp
fildll
and
xor
repz
dec
movsl
pop
pop
rcrl
xchg
stc
mov
loop
mov
mov
mov
cltd
loop
fcompl
stos
xchg
xor
inc
mov
aas
or
xchg
mov
cltd
cwtl
out
imul
mov
cli
repz
push
loop
leave
dec
mul
xor
sbb
inc
xor
add
js
in
clc
inc
mov
aad
jns
sub
push
cmp
pop
in
and
das
inc
or
mov
inc
cmpsb
pop
mov
cmp
shlb
mov
pop
les
cmc
push
xchg
pop
adc
xchg
in
cmpsl
xor
test
xchg
push
std
fmull
rcll
roll
sub
cmp
aaa
fstpt
push
push
repz
fnsave
jbe
jb
fistpl
dec
mov
mov
in
inc
js
xor
daa
lcall
bound
shlb
addr16
mov
mov
gs
clc
xor
xchg
in
sub
loop
cmp
xchg
fnstsw
les
push
lret
cli
push
and
xor
xlat
mov
inc
push
lods
pushf
arpl
inc
movsl
mov
xor
inc
les
aad
cmp
lret
sti
and
lret
xchg
mov
add
incb
std
jmp
es
ds
push
lods
xchg
sarb
fldl
mov
lds
xchg
pop
sbb
adc
stos
repz
jl
and
sti
add
push
push
ds
fsqrt
adc
mov
mov
add
scas
mov
ja
inc
rorb
mov
sbb
std
xor
pop
insb
mov
mov
out
dec
add
and
ret
outsb
flds
jmp
xchg
je
addb
dec
sub
rcl
xlat
xchg
mov
aas
cmp
push
nop
and
mov
ja
cltd
in
enter
mov
mov
xorb
pop
icebp
enter
jne
xor
ret
mov
decb
mov
pop
addr16
sub
mov
mov
pop
cmpl
pop
fs
push
loope
cmp
js
andb
lds
inc
ljmp
jnp
mov
xchg
mov
shl
cwtl
push
cmpsb
xor
int3
cli
ret
and
xchg
push
popa
push
mov
lods
xchg
add
adc
mov
sbb
mov
sbb
push
aad
push
cmp
roll
sub
push
or
roll
add
mov
rorl
aad
imul
add
jo
push
mov
xlat
mov
push
lods
and
sbb
int
sub
pop
movsb
cmp
orl
lcall
push
lret
enter
les
idivb
decb
pop
push
xor
xchg
push
jp
pop
adc
xor
jbe
mov
ret
jmp
sbb
arpl
fs
or
mov
in
mov
mov
pop
out
or
jge
call
fimuls
data16
repnz
in
and
gs
in
cmp
mov
pop
cli
shll
push
xchg
fists
or
xlat
sub
lret
sub
pop
mov
mov
push
les
cmpsb
test
test
loopne
inc
mov
out
and
insb
mov
ret
std
cmp
pop
dec
xor
jbe
and
test
inc
jmp
add
daa
inc
daa
mov
pop
fstpl
or
lcall
nop
xchg
in
loop
adcb
adc
test
inc
data16
xchg
insb
jbe
pop
push
movsl
pusha
mov
cmp
popf
in
orb
fstl
out
xor
pushf
mov
push
repz
sbb
mov
and
push
sub
cli
je
mov
pusha
xor
stos
sti
notl
and
or
xchg
int3
icebp
filds
das
mov
scas
mov
mov
or
rol
jmp
enter
iret
mov
gs
mov
inc
fcomps
mov
adc
rclb
lahf
push
jno
ret
aaa
out
xchg
sbb
pop
push
arpl
movsb
fs
and
cli
mov
dec
cwtl
xor
xchg
ljmp
cwtl
std
fstps
sahf
sub
iret
xor
mov
mov
mov
lods
mov
leave
imull
pop
enter
in
push
jb
imul
hlt
rorb
mov
std
aam
aam
fsubs
and
jb
leave
mov
sahf
imul
sub
pusha
jns
loopne
out
or
push
nop
inc
jb
adc
lods
xor
popf
mov
imul
mov
pop
test
jl
push
test
mov
cmpsl
in
and
mov
sub
lcall
push
mov
xor
sti
icebp
cs
jmp
aad
xchg
nop
int
shll
nopl
jp
push
xchg
aam
cwtl
stos
test
addr16
lret
sub
int
mov
jmp
and
mov
pop
mov
mov
push
or
dec
push
and
cmp
jg
cwtl
imulb
mov
mov
lods
jl
sbb
movsb
out
stos
adc
iret
pop
jmp
jns
int3
xor
sbb
and
fwait
inc
inc
je
loop
add
fcmovu
fs
pop
les
popa
push
fwait
push
in
frndint
jg
jnp
lret
out
nop
dec
add
push
mov
lock
xor
dec
insl
cmc
and
mov
sub
xchg
xchg
outsb
xor
xor
cmpsl
fabs
shrb
push
in
push
fwait
mov
mov
mov
cli
orl
icebp
addl
mov
negl
loop
leave
std
mov
or
popa
or
pop
fcmovbe
fwait
xor
xor
pop
mov
xchg
test
and
adcl
ljmp
icebp
in
or
xor
fnstsw
mull
popf
outsb
cmp
add
adc
jb
sub
icebp
xor
push
mov
xchg
inc
int
gs
xor
addl
out
sti
fbstp
in
jle
pop
incb
push
jnp
movsb
cmp
push
fxch
movsl
mov
inc
scas
cmp
and
mov
je
and
aas
or
insl
ds
ficoms
jne
jp
shlb
lret
add
out
mov
pop
xchg
cwtl
jmp
std
movsl
iret
sub
jbe
in
inc
dec
jno
stos
andb
inc
sarb
pop
push
jp
adc
mov
jo
rcrl
mov
test
sbb
cmc
jo
pop
adc
shl
pop
filds
outsb
push
mov
jmp
push
adc
pop
add
lahf
dec
in
push
cmp
test
pop
pop
ljmp
dec
mov
sub
insb
push
add
adc
cwtl
insl
ja
cmp
aam
xor
and
negb
mov
dec
sbb
aas
fwait
outsb
pop
lock
ds
mov
cmovle
xor
or
js
gs
and
or
xor
sbb
pop
test
int3
adc
cli
in
mov
fcmovnu
icebp
es
in
mov
mov
loope
in
push
shr
push
push
aaa
xchg
jno
neg
aaa
loop
int
lds
xchg
push
xor
cmp
fdivrl
shll
fists
sbb
add
mov
dec
ja
cmp
jle
sbb
dec
inc
sub
pop
repnz
jl
cmpsl
scas
add
stc
sar
gs
cmp
pop
adc
mov
lcall
in
sub
out
in
popa
cmp
add
push
je
pusha
sub
cmp
push
pusha
popa
scas
add
daa
lret
imul
mov
sub
xchg
pop
and
jbe
xlat
sbb
fwait
repz
out
movb
mov
sub
insl
lods
imul
sbb
iret
xchg
jns
mov
sbb
adc
stc
and
jp
dec
andl
fwait
jo
add
pop
sbb
mov
arpl
clc
xchg
jne
or
adc
mov
xchg
out
jno
test
xchg
filds
and
mov
push
lahf
pop
sti
ret
insb
mov
aas
push
cs
pop
cli
bound
jns
xchg
cmp
fnsave
shll
cmp
test
cmp
and
dec
int
cmp
aad
mov
cmp
cmpsl
xchg
mov
outsb
test
jb
jmp
add
or
mov
sbb
test
sub
adc
add
mov
adc
push
insl
push
dec
fisttpl
push
xor
jmp
sbb
mov
xchg
add
mov
in
and
bound
imul
enter
adc
sbb
jae
stos
lods
adc
xchg
inc
and
lods
fldenv
mov
pop
jg
push
xor
adc
push
data16
sbb
cs
movsb
sbb
popf
sub
insl
sub
dec
mov
mov
dec
jne
jge
mov
xor
xchg
into
add
mov
movsb
jo
jb
mov
nop
ja
dec
inc
mov
fs
and
push
lret
sarl
dec
and
ret
movsl
jb
shll
mov
sub
pop
xor
pop
repz
push
negl
negb
call
jle
sub
mov
xchg
mov
sbb
or
shl
aad
lea
out
test
outsb
inc
push
addr16
ljmp
jnp
lret
mov
xlat
pop
dec
jg
pop
popa
jo
push
sbb
xchg
outsb
cmpsl
int
pusha
testb
jp
movsl
fisubl
adc
push
mov
push
sbb
ljmp
cmp
ret
xor
dec
fists
gs
push
mov
or
dec
sub
leave
and
cwtl
and
and
jae
mov
cmc
dec
dec
mov
test
cmp
nop
icebp
call
adc
jge
mov
mov
pushf
mov
sti
xchg
insb
fnsave
cld
aas
dec
shl
push
push
out
xlat
push
add
cmp
xchg
clc
push
lcall
dec
scas
sub
push
jg
push
imul
push
xorb
mov
test
lods
add
lret
and
test
rolb
scas
mov
or
pop
push
sub
and
push
xchg
pop
mov
in
pusha
push
aaa
push
pop
xlat
push
adc
popf
icebp
dec
lret
lods
adc
sti
data16
cltd
lock
idivl
or
xchg
inc
jae
lock
sub
call
push
aad
xchg
mov
ss
mov
aaa
mov
dec
or
addb
mov
fbld
pop
push
sub
lods
sub
inc
decb
adc
xor
nop
je
jne
scas
or
mov
bound
popf
dec
sub
inc
pop
repz
bound
sbb
loop
inc
add
sub
and
pop
inc
cld
cmp
mov
jbe
movsb
mov
cmp
jge
loope
iret
xchg
cs
cmp
mov
mov
hlt
and
dec
mov
lods
enter
daa
out
lret
js
imul
add
insb
mov
and
or
test
xor
push
fbstp
or
or
mov
jns
sbb
pop
jb
js
ljmp
es
scas
mov
mov
stos
xor
aaa
sbb
fdivrl
dec
jmp
push
mov
push
jo
loope
lret
out
movsl
notl
mov
clc
add
add
jae
adc
push
adc
arpl
pop
sbb
inc
jo
popf
or
cmp
inc
add
cmp
dec
dec
pop
aas
xor
add
mov
mov
xchg
xchg
jle
ja
xchg
adc
xchg
xor
dec
xchg
jl
mov
ljmp
in
cli
popa
inc
roll
pop
mov
and
adc
mov
cltd
das
and
xor
clc
fidivrs
dec
sub
xchg
push
adc
pop
pop
in
scas
bound
push
cmp
cltd
jo
and
mov
fisubrs
out
not
insl
pushf
mov
pop
pushf
push
aas
sub
cltd
inc
ja
pop
sub
into
repz
push
jle
and
jb
inc
repnz
dec
addr16
into
aam
es
inc
mov
lods
hlt
sahf
jno
je
scas
sbb
inc
cld
push
test
fldcw
cmp
cmp
dec
xchg
pop
jb
jp
mov
xchg
sub
mov
rcr
sub
scas
mov
pop
xor
leave
dec
fsubrl
icebp
mov
jb
aaa
bound
int3
adc
push
cmp
repz
or
jmp
imul
js
lock
sbb
xor
push
inc
and
and
movsl
in
mov
push
stos
outsb
icebp
testl
sub
xchg
pusha
lahf
repz
push
sbb
testb
int
push
rcr
jmp
std
dec
call
cmp
icebp
mov
jb
mov
inc
xchg
jo
fidivrs
push
cmp
and
icebp
push
mov
push
mov
fistpll
push
xchg
je
dec
pop
mov
jbe
mov
push
and
push
cmp
testb
mov
int3
mov
jmp
sbb
or
jle
push
push
lds
push
pusha
push
dec
jle
mov
inc
mov
xchg
add
inc
addr16
stc
push
enter
ss
sbb
out
cmp
mov
mov
scas
push
jl
std
mov
dec
ror
loop
rorb
or
fiadds
ret
jecxz
shlb
and
add
les
mov
addr16
mov
xor
and
cmpsl
mov
xchg
jae
xor
and
ss
or
mov
out
sti
mov
mov
out
mov
xor
mov
bndldx
inc
shll
and
test
ss
mov
pop
lret
xchg
xchg
fstps
stc
flds
pop
push
push
test
xchg
sbb
sub
push
sarb
mov
aad
cltd
pop
dec
add
push
lret
idiv
and
scas
mov
fidivs
xor
mov
add
jno
cmpsb
ret
out
xchg
or
call
inc
cld
jmp
pushf
cmp
mov
repz
pop
fcompl
ja
sarl
fs
adc
dec
shlb
ds
jno
xlat
xchg
sub
repnz
pop
imul
jbe
ja
and
es
add
repz
rcr
jecxz
push
sbb
leave
jle
faddl
inc
aad
cld
pop
rorb
loopne
or
das
stc
sbb
test
faddl
sbb
mov
jbe
cmp
pop
lods
pop
ja
popa
and
inc
ja
xchg
ffree
fisubs
jb
pop
out
dec
xchg
adc
cmc
push
sub
jl
fmull
mov
int3
scas
pop
cwtl
pop
sbb
ljmp
add
xchg
jle
sbb
push
sbb
iret
stos
pop
xchg
push
sub
jp
mov
les
push
loopne
cmp
ret
push
cmp
imul
pop
sub
cli
fstp
add
jmp
loopne
lea
cltd
pop
mov
pop
daa
add
push
jnp
cmpsl
adc
scas
adc
cmpsl
mov
je
add
ss
mov
xchg
shlb
cmp
js
cmp
adc
loop
sbb
insl
adc
sbb
sub
call
cmp
ret
leave
into
imul
icebp
insl
xchg
cmpsl
mov
enter
in
xlat
xor
lds
cmc
fadds
jns
in
lret
pop
mov
inc
mov
movsb
jg
repnz
loope
arpl
es
jmp
push
jge
mov
das
push
inc
mov
mov
mov
or
arpl
gs
enter
mov
pop
mov
add
out
dec
ret
ds
arpl
pushf
inc
fmuls
ret
dec
xchg
ja
or
outsl
and
testl
sahf
sbb
mov
inc
cltd
lods
insb
xchg
enter
paddw
sbb
loopne
cwtl
or
sbb
mov
imul
dec
pop
insb
loop
repnz
dec
jmp
sub
cmc
sbb
lahf
lcall
test
call
xchg
and
sub
or
jmp
shll
mov
jg
add
push
andb
ds
loopne
and
adc
ds
mov
jmp
fwait
in
test
es
fcoms
mov
pop
fwait
pop
fsubs
sbb
push
lods
faddl
iret
cld
in
fisubrl
xchg
aaa
mov
scas
out
icebp
fs
hlt
shrb
leave
popa
decb
sbb
loopne
inc
mov
rcl
outsl
lea
dec
fiadds
test
pusha
shll
mov
mov
repnz
addr16
movsb
repnz
insl
mov
pop
xchg
inc
push
fdivrs
out
inc
cli
push
mov
loop
fsubrs
outsb
and
daa
andl
pushf
dec
out
insl
mov
cmp
cmp
mov
mov
inc
out
inc
jmp
sub
dec
icebp
test
mov
std
pop
insl
jecxz
mov
xchg
sbb
sub
stos
xor
dec
fisubrl
das
pop
adcl
insl
cmp
fwait
inc
sub
ds
test
out
das
or
push
daa
or
bound
xchg
repz
adc
lcall
loope
shll
sub
inc
popa
scas
fists
fidivl
dec
scas
mov
dec
xlat
neg
sarl
and
sti
inc
addr16
pop
mov
mov
ret
das
and
roll
dec
movsl
pop
cli
outsb
pop
xor
xchg
cmp
shlb
cmp
ffree
mov
sub
rorb
sbb
push
lods
movsl
pushf
mov
and
adc
ss
outsl
arpl
fisubrs
pushf
mull
pop
test
sahf
fdivs
cmp
rorb
popa
pop
pushf
xchg
add
aad
fistps
adc
and
loope
add
out
aas
call
push
mov
movsl
jg
pop
popa
out
adc
and
fiadds
and
adc
lods
xorb
adc
mov
mov
lahf
addr16
leave
aam
out
fwait
call
mov
int
cmp
aad
mov
jle
mov
andb
push
iret
movsb
jae
add
mov
mov
add
loopne
dec
mov
adcl
loopne
xlat
adc
pushf
fdiv
push
dec
pop
leave
hlt
aas
stc
fwait
inc
in
popl
testl
jle
xor
outsl
sub
add
ret
push
sub
cmp
jnp
enter
or
cmp
push
lea
push
or
xchg
mov
fs
add
cmp
push
pop
clc
lret
xor
jbe
mov
into
mov
outsl
pushfw
out
mov
pop
jge
movsb
mov
icebp
and
mov
ret
cld
or
sbb
lods
fmul
hlt
in
xor
imul
loopne
mov
rcrb
test
mov
fldcw
ds
jns
lcall
adc
jg
mov
das
into
push
std
push
mov
fisubrl
xchg
ret
test
fidivrs
ljmp
arpl
addr16
int
aam
imul
loop
mov
js
paddd
sbb
test
sbb
mov
fistpl
push
test
ror
mov
jg
jo
jp
xchg
cmpsl
cs
fistpl
pop
or
enter
pop
clc
mov
std
mov
push
out
inc
mov
push
fwait
jmp
or
in
sub
dec
or
icebp
xchg
mov
addl
inc
xchg
popa
popf
xorb
jge
and
call
adc
nop
dec
nop
mov
outsl
jmp
push
mov
add
popa
fimull
mov
je
sbb
aad
shlb
out
out
push
ret
xor
xchg
in
outsb
pop
jns
jl
movsb
jmp
or
mov
mov
fstps
adc
ljmp
addl
add
inc
je
cltd
lock
loopne
stc
in
mov
lret
sub
or
dec
dec
popf
cmp
adc
aas
popa
lods
mov
jo
iret
push
or
push
xchg
cmc
dec
cmp
inc
sbb
shrb
iret
enter
mov
inc
rorb
add
mov
jp
mov
push
mov
fnstsw
aad
add
add
mov
adc
cltd
cmp
xor
mov
mov
lahf
inc
or
xchg
dec
mov
and
int
add
fists
or
xor
divb
mov
rclb
cwtl
xor
and
ljmp
dec
shlb
or
lret
ss
out
xchg
inc
mov
inc
stc
jecxz
sbb
pusha
sbb
and
inc
push
jo
or
adc
lcall
addr16
stos
shl
mov
mov
pop
and
xor
in
int3
jl
mov
push
adc
test
cmc
dec
call
in
cmp
outsl
lods
sub
cmpsl
adc
sub
je
inc
jne
rclb
pop
xlat
fs
push
sub
and
and
xchg
lods
mov
push
scas
sbb
sbb
push
mov
js
mov
cmpb
cmp
mov
mov
orl
cmpl
inc
outsl
dec
pop
push
stos
out
adc
cmpsb
rcrb
jae
lcall
insl
jecxz
mov
cli
je
repnz
xor
hlt
push
andl
iret
test
pushw
xor
add
cli
xchg
cld
cmpsl
add
mov
jp
cmp
icebp
pushf
mov
lret
or
mov
push
data16
test
mov
dec
xchg
data16
jl
or
insb
cmpsl
xor
cld
xchg
mov
and
sbb
push
repnz
lret
inc
mov
mov
jae
mov
roll
sub
inc
inc
test
adc
inc
xchg
cmpsl
and
arpl
iret
lret
popf
ffree
inc
andb
mov
lods
sbb
and
lock
lahf
lea
ja
sub
push
ja
mov
or
jbe
xorb
shrb
mov
mov
adc
sub
jecxz
adcl
or
xor
imul
sub
je
movsl
ss
xchg
loopne
nop
xchg
jo
test
loopne
jb
fistpll
inc
dec
movsl
scas
xchg
nop
push
mov
dec
sar
in
pop
or
inc
lock
xchg
or
mov
sub
mov
jae
xchg
xchg
cmp
xchg
rcll
sti
subl
inc
push
popf
in
js
das
mov
in
push
popa
mov
xchg
dec
es
fdivs
xor
or
mov
sub
jp
into
push
sub
push
test
insb
repnz
test
xor
pushf
std
loope
jp
push
insb
dec
and
or
icebp
pop
daa
pop
les
cmpsb
mov
xor
call
pop
and
mov
pushl
cmpl
testl
push
add
pop
xor
std
mov
push
jnp
cltd
or
mov
push
pop
clc
mov
stos
cmp
loopne
mov
out
sub
or
pusha
sti
fadd
ds
pop
dec
cmp
sub
jb
sub
add
and
jecxz
loope
pop
sub
test
add
inc
add
sub
into
inc
sarb
lcall
cmp
bound
sub
jecxz
pop
int3
push
and
adc
insb
lret
sahf
jno
or
fnstenv
inc
sbb
hlt
ret
fiaddl
int3
xlat
and
push
daa
lock
xchg
adc
mov
inc
test
xor
mov
lds
push
push
xor
adc
lcall
xchg
rorl
iret
mov
pop
cs
outsb
add
pop
or
stc
mov
cmc
cmpsb
mov
mov
xchg
daa
scas
cld
cli
fcmove
adcb
cwtl
xlat
inc
inc
daa
or
sbb
jnp
arpl
lret
jb
pushf
enter
push
incl
mov
mov
aam
mov
jp
int
imul
push
ret
rolb
aad
adc
inc
xchg
mov
flds
jo
in
sub
int3
cs
jle
inc
sub
inc
cltd
decb
xor
imul
in
jp
pop
add
jne
pushf
mov
xchg
or
dec
fstps
subl
sbb
je
popf
or
fbstp
int
mov
js
pop
mov
push
bswap
sub
enter
add
test
mov
cwtl
sbb
pop
dec
or
inc
scas
mov
mov
sbb
xor
jb
pop
sub
xchg
insl
pop
insb
fcmovne
fdivs
xor
mov
mov
test
pop
mov
xor
gs
pusha
mov
and
ret
mov
es
push
lret
cmp
push
jecxz
push
les
sbb
sbb
ds
jne
mov
loopne
and
je
mov
test
sub
pop
popf
ss
sahf
lods
insl
jns
mov
shll
sub
xorb
mul
pop
pop
or
insl
fnstsw
negb
xchg
push
mov
cmp
mov
sbb
call
pop
lahf
xor
jg
push
std
insb
insl
imul
cmp
or
or
pop
sarl
mov
push
movb
lods
sbb
mov
push
xor
pop
adc
add
dec
mov
lock
inc
mov
jno
or
xchg
sbb
pop
adc
adc
outsl
aad
mov
stc
outsb
xor
mov
dec
and
sbb
sub
mov
repnz
imul
and
inc
cmpsl
mov
xchg
sub
xchg
int3
add
and
aad
jge
xchg
add
lock
aas
mov
cmp
sub
lret
adc
mov
push
jnp
cs
push
int
cs
and
dec
push
js
int
sbb
xor
jp
push
mov
lret
sub
cmc
and
jo
out
adc
fldl
mov
pusha
inc
lret
adc
sbb
fildl
dec
xor
mov
outsb
jb
mov
adcl
es
cmp
sbb
mov
dec
push
in
leave
mov
push
add
lahf
dec
in
popa
dec
addr16
insb
push
dec
arpl
filds
bnd
xchg
gs
mov
pushw
mov
sbb
test
xor
aad
sbb
jnp
mov
gs
dec
xchg
cltd
arpl
cmp
sub
je
je
int
fiadds
mov
getsec
adc
mov
loope
inc
push
scas
jbe
imul
mov
xor
mov
mov
int3
inc
iret
cmpsb
sbb
inc
iret
mov
jg
mul
loope
sar
test
or
push
inc
pop
push
sub
mov
mov
sub
movsl
subb
lcall
xor
mov
lock
hlt
movsl
inc
push
leave
repnz
shlb
stos
cs
jecxz
popf
cmp
xchg
in
ljmp
xchg
jmp
push
shll
mov
jb
ljmp
pop
bound
adc
mov
push
repnz
inc
sub
sub
xor
or
outsl
dec
jno
cmp
adc
sbb
addr16
push
call
adc
xchg
in
and
or
loope
repz
in
lea
fldenv
adc
gs
or
daa
jmp
and
aad
lds
lods
cmc
outsb
pusha
and
jae
pushf
cltd
lcall
loop
movsl
fistl
call
pop
negb
push
add
cmp
shrl
je
lahf
dec
addl
pop
test
pop
fistl
add
test
lcall
xchg
dec
lds
and
pop
xchg
and
pop
fildl
idivl
ret
stos
sti
mov
test
pusha
daa
mov
add
sub
lret
add
test
shlb
mov
push
lds
or
cli
sahf
dec
mov
xchg
and
movsb
pop
mov
jbe
push
hlt
jmp
fcomps
push
push
mov
lahf
jg
outsb
fildl
pop
je
pop
xor
sbb
movb
mov
jge
lods
xchg
rolb
inc
daa
out
imul
dec
jno
inc
ret
idivl
ret
mov
dec
adc
hlt
loop
or
stos
and
into
pop
xchg
xchg
pop
xor
lret
sub
adc
loopne
gs
lcall
cmp
inc
icebp
data16
dec
xor
pop
or
push
mov
mov
movsl
ud2
adc
jo
cmp
jns
aaa
fistl
dec
add
sub
inc
inc
cmp
inc
sub
sbb
pop
mov
sbb
add
or
add
push
icebp
ss
jge
adc
mov
sti
push
mov
rep
fs
pop
jecxz
and
add
mov
pop
mov
mov
pop
movsl
lods
insb
fbld
xor
add
fidivrl
dec
in
push
sub
xor
xchg
and
mov
data16
and
jp
sbb
and
xor
cmp
je
movsw
movsb
xor
inc
into
ud0
pusha
jl
data16
cmp
xor
pop
int3
or
in
jo
mov
pop
les
stc
andl
cmpb
jno
sbb
pop
mov
dec
aaa
cli
mov
mov
lods
lods
sti
dec
mov
dec
mov
adc
adc
xchg
idivl
cltd
jmp
jns
ret
push
fisttps
test
cmp
repz
or
xor
inc
dec
fidivl
push
cmpsl
jg
adcl
ss
out
jecxz
js
add
xchg
ds
dec
rcr
cmp
and
mov
inc
and
and
shlb
mov
jge
addr16
aas
pusha
in
imul
lods
jns
sub
add
jne
loope
dec
push
mov
fwait
ss
sub
inc
ss
into
mov
je
ret
or
hlt
pop
jecxz
cwtl
mov
loope
aaa
xchg
cmp
fistpll
and
out
rorl
addr16
and
cmp
pop
jecxz
dec
lds
xchg
sbb
pop
lds
dec
push
lods
mov
cmp
test
push
cmpsb
xchg
cltd
pop
rolb
movsl
movsb
adcb
loopne
movsb
mov
cmp
jo
dec
sbb
bound
rcrb
sarb
rolb
outsl
scas
inc
adc
xor
enter
ucomiss
imul
inc
inc
mov
dec
jno
nop
mov
imul
dec
sbb
movsb
gs
jns
pop
cmpsl
pop
lcall
test
ret
inc
jbe
push
pushf
mov
xor
jmp
leave
jbe
movsb
loop
scas
int3
data16
lcall
mov
jle
xor
mov
jmp
xchg
mov
pop
fcomi
sahf
fldenv
shl
cmp
add
jmp
repnz
cmc
shlb
inc
sbb
ds
dec
push
or
mov
push
test
dec
xchg
xlat
pop
lock
repz
jbe
sub
lea
jo
add
add
or
adc
mov
pop
xor
int3
out
ret
sbb
test
bound
lea
subl
push
outsl
xchg
pusha
insl
aad
xchg
adc
jmp
cmp
xor
or
lods
bound
and
pop
mov
mov
add
sub
cmp
popf
mov
mov
and
add
fldcw
out
inc
insb
jp
pusha
fcmovu
out
xor
xor
inc
bound
ss
xchg
mov
out
gs
mov
lds
mov
and
shll
adc
push
mov
inc
xlat
lock
test
cmp
popa
ss
mov
sub
das
repnz
mov
jns
movsb
or
xchg
cwtl
mov
push
mov
push
nop
in
mov
add
popf
ljmp
shr
shl
test
daa
inc
js
les
or
jle
pop
add
adc
inc
sarl
call
std
clc
dec
adcb
dec
inc
mov
jnp
popa
je
jno
fisubl
mov
push
mov
cmpsl
jge
mov
ffree
pop
cmp
sub
cmc
cli
xor
test
cmp
jno
pop
sbb
mov
mov
sub
enter
sbb
add
lods
ss
push
adc
sub
push
lock
movsb
mov
jle
loopne
test
fstpt
lods
stc
sub
pop
pop
xchg
mov
cmp
jle
rorl
inc
inc
jle
insl
out
rclb
mov
pop
icebp
ss
cmp
mov
in
push
in
movsl
in
loope
aas
xchg
jmp
and
out
add
cmp
outsl
shll
xchg
fcmovbe
dec
nop
out
or
scas
jns
test
ja
scas
add
mov
jae
dec
out
orl
loope
in
and
push
mov
or
test
fisttpll
lcall
jmp
loopne
pop
cwtl
inc
stc
cmp
push
insl
cmpsb
ret
and
jp
out
and
outsb
cmc
in
adc
imul
mov
movsb
xor
dec
mov
push
mov
incb
pslld
imul
out
enter
cmp
mov
or
pop
and
pushf
mov
aaa
add
push
rcrl
cmp
sbb
hlt
sbb
mov
sub
jns
lea
cmpsl
call
notb
jl
or
loope
xchg
rol
xor
mov
mov
lret
add
cmpsl
orl
stos
shll
or
pmaddwd
jae
dec
lcall
sub
mov
insl
mov
sub
imul
push
xchg
mov
push
arpl
or
rcl
xor
lahf
out
rolb
jmp
or
and
popl
nop
sbb
cli
add
add
add
outsb
mov
xchg
push
shl
les
add
mov
mov
push
loope
leave
jmp
add
mov
mov
inc
out
sbb
push
mov
pop
lds
push
pop
lds
cmp
inc
je
gs
ds
push
pop
mov
das
push
sar
or
xor
jmp
movsl
sbb
mov
sub
lret
push
adc
pop
add
pop
rcrl
or
push
adc
incb
daa
rcl
icebp
adc
movsb
adc
or
mov
cmp
fucompp
mov
and
fnstsw
es
and
xchg
sub
push
jb
popa
sarl
jae
rorb
fcompl
or
rcrl
xchg
push
sahf
mov
leave
lods
movsb
xchg
jno
outsb
lds
nop
loopne
mov
xlat
jnp
mov
mov
sub
insl
pop
sub
fdivr
mov
pop
mov
pop
adc
mov
adc
das
jg
out
xor
lret
dec
dec
sub
or
jb
rcrl
jns
rolb
sub
adc
inc
cmp
push
mov
test
mov
mov
outsb
jo
or
insl
or
push
xchg
jne
scas
addb
andl
pop
test
pop
xor
jo
xchg
out
cwtl
test
hlt
cwtl
jg
adc
jno
jno
pop
cmp
cmpsb
jns
jg
and
hlt
pop
lcall
aam
cmpb
mov
jmp
arpl
mov
imul
cmpsl
or
lret
pop
ss
popa
xor
lcall
lods
stos
jb
inc
pop
in
pop
cmp
cmovo
cmp
lahf
jno
loope
push
inc
mov
xor
add
mov
jbe
adc
cmpsl
ljmp
xchg
fnstenv
jg
sbb
stos
mov
outsl
movsb
ss
or
int
xchg
out
imul
add
jl
sub
jae
movsl
mov
inc
ja
dec
ret
xor
mov
sub
ret
out
cltd
push
xchg
adc
lret
mov
cmc
iret
mov
dec
lock
imul
xchg
mov
ret
xlat
out
loopne
mov
mov
jno
jbe
and
ss
add
imulb
inc
mov
inc
mul
mov
or
out
in
mov
mov
ja
add
mov
fidivrs
sbb
inc
aas
fistpl
or
popf
pop
push
enter
out
jge
outsb
and
sub
add
std
into
mov
movsb
testl
xor
imul
cmp
dec
xor
xor
shrl
xor
loop
jnp
pop
pop
xor
xchg
imul
stc
in
push
xchg
outsb
dec
and
shr
xor
lcall
repz
mul
aaa
loopne
lea
loop
stos
cmp
mov
fcompl
adc
enter
mov
stos
imul
scas
pop
cmc
test
arpl
push
icebp
or
jnp
scas
xor
push
and
mov
fldt
fldlg2
pushf
inc
icebp
jl
and
call
out
fs
add
mov
test
mov
bound
test
arpl
leave
cmp
pop
inc
jne
cmp
push
cwtl
jecxz
repz
cmpl
pop
std
aam
in
mov
xchg
adc
arpl
aaa
or
mov
scas
push
jle
hlt
add
in
push
sti
test
popf
xor
xlat
inc
sub
inc
je
movsl
mov
sahf
xchg
push
outsl
cmp
inc
imul
ud2
jnp
gs
clc
mov
imul
int3
outsl
mov
adc
mov
or
lods
fnstsw
arpl
vorps
flds
mov
cmpsb
push
aad
cld
cmpb
dec
mov
lcall
out
add
sti
dec
cs
stos
pop
mov
sub
cmp
cs
leave
daa
enter
lcall
sbb
popa
pop
pop
stos
or
fcoml
and
aam
lahf
lahf
sarl
and
mov
or
sub
ss
sub
xor
cmpsb
push
popa
shll
xor
adc
lcall
mov
mov
pop
enter
inc
mov
in
inc
xchg
repz
mov
jbe
iret
mov
cmpl
mov
pop
lds
imul
dec
lret
add
mov
movsl
or
lods
aam
adc
int
dec
xor
dec
add
insl
mov
ret
fidivs
pop
cltd
mov
loop
cmp
scas
push
xor
add
insl
movb
int
xor
pusha
push
lods
pop
lea
arpl
dec
mov
jl
out
jg
popf
adc
lds
cmpsl
mov
in
enter
shrl
andb
dec
xchg
add
add
psubusw
or
frstor
test
push
push
add
pop
push
shr
mov
push
cmpsl
fsub
fdivrs
inc
in
sub
and
xor
enter
out
fstpl
mov
sub
add
das
ds
mov
cli
mov
cmp
rol
inc
fs
push
push
aaa
xor
incl
cmc
sbb
insl
popf
loop
test
pushf
push
hlt
stos
test
pop
ss
inc
mov
jecxz
lret
test
pop
adcl
dec
mov
into
dec
int3
push
out
shl
mov
mov
jne
mov
sub
add
pop
push
cmc
repz
outsb
hlt
xor
popa
or
mov
inc
pushf
nop
cli
or
es
push
sub
sbb
jmp
xor
fidivl
lock
shll
sub
dec
subps
and
lods
loop
jb
test
add
popf
js
inc
ljmp
je
mov
mov
cld
sbb
scas
push
mov
or
lcall
popf
sub
hlt
les
ja
testl
iret
add
jno
ja
stos
xor
lods
add
fbld
and
daa
and
loop
or
sub
sbb
mov
pop
mov
sbb
int
adc
xchg
jnp
add
adc
add
and
xchg
fs
push
mov
insl
cmpb
insl
scas
into
cmp
sahf
jg
sar
pop
lahf
cmp
pop
xor
enter
mov
mov
or
hlt
jns
fs
sbb
loopne
dec
mov
enter
leave
mov
inc
jle
xchg
insl
loop
ss
dec
adc
sub
ret
jg
js
nop
call
lds
mov
idivl
jp
mov
paddsb
sbb
mov
sub
dec
sub
insl
addl
xor
mov
or
sahf
das
insb
mov
mov
bound
ja
xor
fildl
sub
jbe
jb
sub
adc
dec
fsub
sub
outsl
daa
insb
dec
fimull
inc
inc
jo
jmp
jns
fldenv
out
dec
ss
lea
push
cltd
mov
jl
xor
icebp
sbb
jnp
mov
mov
test
stos
orl
repnz
test
push
enter
popa
pop
jge
sub
add
mov
sarb
inc
xchg
sub
mov
shr
ficomps
in
fcmovne
shlb
daa
cmc
call
cmpsl
inc
jmp
into
fwait
test
mov
inc
cmp
mov
ret
std
int3
jo
pop
pop
sbb
gs
ja
insb
xchg
adc
stos
sbb
into
push
fcmovnbe
faddl
push
xor
imul
test
enter
insb
icebp
pop
scas
or
jmp
lods
stc
int
and
and
movb
xchg
adc
mull
popf
loopne
jmp
mov
cmp
mov
lret
in
sub
xor
jp
fcomps
hlt
addr16
das
pop
arpl
push
mov
lds
push
aaa
xchg
dec
iret
mov
imul
test
cmp
cmp
aaa
pop
shll
fidivl
add
aad
lahf
sub
sbb
adc
jmp
sti
xor
pusha
mov
hlt
out
jle
mov
fsubrs
pushf
xor
sbb
dec
push
sahf
clc
cmpsb
sbb
mov
je
sub
mov
lcall
jns
push
or
jge
mulb
add
inc
scas
lret
in
or
dec
lds
jne
mov
xchg
sub
sbb
jecxz
outsb
fcomps
mov
jl
sbb
push
ret
push
sub
mov
stos
xchg
into
or
movl
enter
or
stos
leave
dec
cld
scas
roll
or
pop
xchg
mov
mov
repz
xorb
imul
adc
sub
scas
pop
mov
out
cs
pop
add
jmp
mov
jp
andb
fisubl
jo,pn
or
mov
add
push
sbbl
pop
iret
movsl
fdivrs
mov
lods
xor
push
cwtl
and
loop
mov
lahf
inc
dec
test
jne
xchg
push
lret
repz
pusha
scas
push
push
xchg
mov
sti
and
rcrl
les
popl
adc
popf
lock
test
xchg
adc
fs
sub
xor
pop
shll
das
push
repz
inc
and
sbb
enter
insb
jo
rclb
jb
mov
xor
pushf
movsb
loopne
jbe
inc
adc
inc
xlat
pop
in
push
int
in
test
test
mov
movsb
iret
into
aaa
pop
inc
data16
test
xor
adc
inc
xchg
sbb
das
cmc
loop
dec
xlat
bound
mov
dec
mov
cmp
lahf
push
aam
ret
fildll
xor
or
lahf
clc
adc
fdivs
mov
adcb
sar
mov
adc
sbb
addr16
pop
cmc
shrl
movb
add
mov
outsb
xchg
cmp
mov
xchg
xchg
dec
mov
outsl
push
in
shrl
xlat
inc
cmpsl
loop
jns
lods
dec
js
pop
test
rol
lret
push
notb
add
xlat
fnsave
cmp
xchg
fcomps
add
leave
or
pop
xchg
dec
jns
adc
jge
fmul
fnsave
loop
pop
imul
fld
mov
fdivl
movsl
mov
and
push
inc
fidivrl
ret
xchg
jge
ret
stos
iret
testb
sbb
or
mov
fistl
sbbb
inc
scas
mov
lods
sub
sarl
add
xlat
mov
xor
js
dec
jmp
pop
mov
push
ljmp
in
out
outsl
lea
call
imul
das
stos
mov
mov
je
test
or
call
xchg
lret
adc
pop
jno
pusha
pop
push
pop
int
jb
lods
add
cmp
sarb
int
mov
popf
push
xor
inc
xor
sbb
test
xchg
pop
fldcw
int
inc
xor
lea
sti
scas
rcr
jmp
int3
sti
mov
sbb
mov
fwait
int
xchg
popa
je
jnp
inc
imul
data16
test
mov
popf
int
repnz
pop
lret
push
lahf
js
test
pop
loopne
aad
add
adc
outsb
xor
in
stos
cltd
stos
cmc
jg
test
das
adc
les
test
mov
push
push
mov
fucomp
add
adcl
imul
into
fiadds
cmp
mov
out
shld
xchg
jb
xchg
and
out
mov
push
negb
pushf
mov
ficomps
cmp
iret
rorb
push
pusha
outsl
daa
inc
or
inc
cwtl
fs
lock
and
inc
mov
or
mov
iret
dec
jmp
enter
and
adc
sbb
lea
mov
jg
loopne
test
test
push
mov
mov
insl
mov
dec
and
sbb
mov
int
int3
or
int3
push
inc
pop
sahf
imul
push
inc
fs
sub
pusha
jno
outsl
ss
jle
orb
jmp
xchg
scas
pop
cmp
jge
popf
xor
testb
pushf
les
sub
dec
mov
pop
scas
call
test
dec
xchg
xchg
stos
jge
jae
xchg
or
add
cs
dec
je
push
cs
cmpl
sbb
arpl
dec
jb
pop
test
in
lock
aaa
test
jno
fmuls
mov
sub
int
addr16
int3
mov
jae
pop
test
mov
fwait
movsl
mov
hlt
dec
push
mov
push
jns
sbb
inc
insb
fwait
adc
iret
push
cmp
ficomps
jmp
popf
shl
xor
jne
test
mov
inc
push
add
out
mov
jo
and
pop
add
jne
mov
and
inc
outsl
fistl
lods
lods
mov
push
test
fmuls
add
fnstenv
and
fistps
jle
pop
cltd
push
jge
sub
push
test
pushf
enter
sub
popa
aas
or
pop
jo
shl
data16
adc
and
sbb
push
insl
ljmp
xor
or
aas
dec
loope
ja
xor
stos
pop
hlt
movsl
xchg
pop
popf
gs
xchg
jp
out
sub
insb
aaa
jb
int
mov
and
les
mov
or
pop
out
dec
mov
ljmp
shlb
sub
cmpsb
sbb
imul
mov
adc
mov
nop
repz
push
cmp
insl
addr16
shrb
je
roll
sbb
pop
lods
lcall
shl
mov
jg
hlt
dec
adc
or
scas
xchg
es
push
outsl
aam
scas
xor
test
fcomps
enter
aad
or
inc
lcall
into
vextractf64x2
std
push
sbb
pop
jns
and
addr16
jge
adc
mov
and
cmp
xchg
inc
cmp
pmaddwd
fwait
mov
insl
fistpl
ror
pop
loope
pop
push
xor
jno
and
paddb
mov
pusha
sub
add
inc
iret
rcr
insl
dec
sbb
fwait
mov
dec
mov
mov
lods
cmp
nop
mov
pop
mov
mov
push
addr16
repnz
push
cmp
inc
sub
imul
and
dec
fnstenv
repnz
jmp
fsubl
sarb
push
xchg
rcl
sub
mov
sub
mov
popf
inc
xchg
andb
push
sub
ret
push
jmp
test
cmp
je
faddp
jno
out
icebp
shlb
dec
in
inc
pop
rsm
test
into
scas
scas
imulb
lahf
or
inc
scas
sahf
bound
cli
scas
push
and
sarb
ss
xchg
jp
jne
test
add
sbb
mov
leave
push
mov
mov
xorl
dec
sbb
out
lcall
inc
je
ficoms
pushf
subb
insb
push
dec
inc
aam
jne
push
add
xchg
dec
sbb
shll
popa
adc
loop
xlat
mov
sti
push
icebp
int3
ljmp
cmp
jbe
mov
add
mov
insb
addb
pusha
adc
xchg
inc
pop
fs
sub
pop
or
mov
mov
cmc
mov
push
xchg
xor
adc
jno
cwtl
daa
jp
cltd
bound
lret
out
inc
and
and
sbb
das
sub
scas
cmp
push
cmpsb
fbld
fldt
sbb
iret
mov
inc
or
mov
cmpsl
inc
popa
jne
fwait
mov
cmp
imul
lds
xlat
jge
andb
dec
dec
jne
shrb
sbb
cs
mov
sahf
mov
fucom
xchg
outsb
mov
lods
adc
xlat
jnp
arpl
arpl
add
xor
adc
sbb
sub
mov
pop
stos
mov
cmp
rorb
sbb
adc
inc
shl
add
pop
mov
out
testl
movsl
rorb
scas
int3
stc
addr16
movsb
inc
shl
lret
pushf
inc
pop
xlat
pop
out
and
sbb
aas
popf
fmull
decl
inc
out
or
or
push
mov
jp
enter
inc
add
mov
push
xlat
xchg
sbb
fisubrs
sub
add
fwait
adc
and
dec
sub
jge
xor
orl
inc
mov
aam
test
inc
rol
sbb
add
or
ret
shll
cwtl
in
push
mov
dec
cli
jge
dec
sarb
cli
adc
movsl
cmp
clc
cs
out
mov
mov
leave
popf
shlb
push
cmp
aaa
aad
push
mov
inc
aaa
ljmp
push
call
test
aad
push
add
mov
loopne
pop
ja
pop
pop
or
add
pusha
rcrb
hlt
pop
adc
mov
xor
out
push
mov
cmpsl
pop
jns
and
jns
push
xorl
lea
adc
pop
lea
cmp
or
fxch
jnp
outsl
and
dec
data16
xchg
xor
mov
cmp
out
scas
pop
or
pop
frstor
in
mov
mov
and
and
inc
xchg
add
push
idivl
push
mov
inc
and
or
mov
cli
xor
pop
lcall
ss
mov
cltd
sub
sbb
mov
pop
adc
sti
outsl
ffreep
idivl
leave
shll
xchg
ljmp
std
mov
or
popa
fidivrs
in
or
mov
lods
mov
es
movsl
sub
or
push
lahf
imulb
inc
out
mov
fmuls
aas
shlb
pop
popa
test
ljmp
add
push
dec
mov
mov
sti
mov
pandn
aas
cli
jmp
sub
jae
dec
pop
call
jne
add
lea
das
dec
pop
sbb
dec
mov
lods
pop
cmc
ficoms
dec
lret
xchg
push
xor
clc
jg
dec
adc
je
lahf
call
or
ret
andl
outsl
lea
sbb
mov
push
outsl
pop
jnp
push
adc
mov
xor
and
fisubs
lods
sub
lahf
orb
push
dec
leave
notl
push
lahf
cmp
sbb
dec
call
cmp
inc
rorb
sub
inc
fwait
sub
ret
mov
movsb
fcoms
cmpsl
pusha
out
aam
jmp
rcll
or
xchg
jbe
dec
or
hlt
add
ret
or
mov
jmp
pop
arpl
loop
mov
loopne
ret
fwait
lret
movsb
pop
cmp
lahf
fdivl
cmc
out
cmp
daa
xor
or
push
and
ror
inc
into
cmp
lds
call
fisubrs
inc
inc
jbe
popa
ds
sbbl
fcmove
rcrb
push
add
ljmp
andl
clc
testl
or
pcmpgtb
fstl
movsb
mov
lock
pop
ss
cwtl
pop
jl
dec
sbb
loopne
mov
jmp
das
xlat
mov
pop
mov
jge
imul
adc
dec
xchg
into
hlt
dec
repz
mov
dec
xor
nop
sub
jnp
stos
fcmove
jne
pop
fdivrs
xor
mov
lahf
xor
in
xchg
sbb
ljmp
in
ljmp
jnp
in
cmp
sarb
xchg
in
pop
lcall
test
pop
xchg
cld
pop
add
mov
xor
mov
cli
mov
test
mov
fwait
adc
pop
pop
pop
mov
les
xchg
movsl
fistl
out
push
dec
add
je
inc
sbb
push
mov
cmc
jmp
xchg
filds
jb
sti
loopne
shlb
mov
in
sub
sub
into
cwtl
out
mov
mov
idiv
pop
mov
or
dec
lea
pusha
jle
xchg
dec
dec
pop
daa
mov
ret
push
mov
xchg
outsl
cmpsb
xor
pop
popa
scas
pop
xor
push
fildl
or
sbb
dec
adc
and
out
ret
adc
outsb
inc
inc
adc
push
dec
cmc
outsl
pop
push
or
mov
jne
es
and
inc
xchg
pop
and
xor
jg
push
into
xchg
addr16
mov
cmp
mov
mov
xor
fcoml
push
fwait
inc
jge
lret
xchg
xor
clc
sub
adc
dec
outsl
movmskps
and
out
into
xor
div
push
sub
adc
mov
cmp
xor
test
pop
jns
in
fidivrs
push
and
inc
add
jge
or
push
pop
xchg
in
call
and
pusha
push
jne
push
nop
das
popa
adc
les
imul
test
imul
sbb
sbb
in
shlb
push
rcrl
insb
mov
negl
leave
add
pop
inc
aad
xor
arpl
push
xor
push
movsl
xchg
mov
and
jnp
mov
and
push
outsl
sub
push
sbb
test
mov
test
jecxz
in
dec
imul
cmp
popf
mov
push
in
cmp
in
adc
and
fiadds
mov
adc
xchg
cltd
adc
insb
popa
mov
loope
out
sbb
fs
xchg
in
ja
add
mov
xor
sub
push
mov
mov
mov
out
fdivrs
aad
adc
mov
test
xchg
les
jmp
mov
mov
lret
fsubr
repz
adcb
mov
insb
pop
mov
lcall
sbb
push
push
dec
fldl
add
icebp
jmp
mov
cmp
push
jb
int3
sub
mov
loop
dec
and
and
ret
sub
mov
mov
fimuls
sbb
sbb
das
popa
sbb
addb
stos
inc
inc
outsb
xchg
mov
jmp
testb
inc
aaa
inc
sub
test
mov
ss
adc
inc
test
or
repz
loopne
in
xchg
fcmovnb
sbb
push
orb
insl
xor
jb
mov
cli
sub
popf
bound
out
aam
and
fsubrs
mov
idivb
cmp
mul
jl
add
pop
sub
nop
adc
insb
mov
pusha
push
shl
cs
leave
ret
jbe
repnz
xchg
out
repz
pop
subl
fwait
in
lahf
xchg
addr16
out
int3
xchg
mov
or
ret
testb
shlb
out
sbb
inc
ja
dec
xorl
cmpsb
xlat
mov
cmp
or
push
or
and
sub
inc
mov
or
mov
or
sti
aad
dec
sbb
es
mov
and
mov
stos
cmp
stos
cmp
jecxz
sti
add
shr
xchg
dec
and
jle
cmpsl
outsl
and
jle
das
je,pn
js
scas
repz
lret
insl
mov
xor
mov
lcall
push
and
into
cmpsl
push
jmp
imul
jo
pop
pop
scas
dec
pop
xchg
shl
sbb
cmp
pop
loop
cmp
mov
aad
enter
and
dec
mov
and
sbb
popa
popa
rclb
cmp
xchg
cmp
xchg
enter
addl
xchg
add
lret
push
mov
jno
jbe
mov
pop
xchg
das
jl
bound
aas
leave
push
cmc
and
repnz
xor
xor
pop
inc
dec
lods
mov
mov
insl
rolb
mov
dec
mov
dec
ja
imul
cmp
and
sub
daa
push
int
sub
movsl
push
insl
adc
fmuls
loope
ja
cwtl
pushf
jo,pn
mov
jge
sub
adc
mov
push
jns
mov
sub
cwtl
imul
icebp
add
pop
sub
xchg
adc
mov
fmull
sub
in
dec
xchg
xor
jg
cld
ficoml
mov
data16
ret
mov
pop
pop
jmp
xor
inc
daa
lea
adc
sub
xorl
into
mov
xchg
mov
test
fs
xchg
arpl
sub
jo
pop
mov
cltd
push
mov
sub
push
mov
ret
xchg
out
bound
subl
in
shrb
xchg
pusha
mov
rol
int3
jl
mov
jo
rcrb
imul
aad
repz
data16
jmp
pop
xchg
mov
cwtl
test
arpl
mov
pushf
jbe
rclb
cltd
add
push
rolb
insl
cmpsl
mov
je
mov
into
dec
mov
xor
adc
je
add
mov
mov
ja
int3
xchg
xor
test
test
insl
dec
xorl
add
or
or
sbb
loope
sub
or
cmp
add
in
cmp
mov
mov
or
mov
add
jge
mov
aaa
jns
inc
jmp
add
nop
fs
enter
jp
out
stos
std
and
lods
push
inc
jmp
mov
cmp
inc
dec
test
sarb
adc
inc
bound
lea
test
pop
test
mov
cmp
mov
fdivl
scas
and
aam
jl
aad
inc
sbb
mov
jb
add
in
mov
dec
shrl
mov
out
add
mov
cmp
cld
inc
int
mov
mov
mov
mov
jmp
and
andl
add
popa
sub
cmp
jge,pt
dec
pop
cs
cmp
shll
hlt
sbb
inc
je
add
clc
sbb
int3
jb
cld
cli
sub
pop
testb
pop
imul
pop
cmp
push
jmp
pushl
popf
loope
call
repnz
mov
and
pushl
sbb
imul
rcll
test
jno
lds
xchg
and
leave
lods
inc
addb
sarl
xchg
mov
add
mov
ret
iret
sub
fwait
mov
mov
std
lds
in
inc
sub
aam
addr16
pop
call
lahf
cld
movsb
jl
pop
push
out
and
sbb
das
js
add
jb
mov
or
dec
or
dec
push
adc
pusha
scas
pop
and
fwait
iret
fnstsw
sub
sbb
ss
loope
pusha
add
cmp
and
sbb
pop
xor
add
dec
inc
push
mov
push
addr16
repz
push
jne
fwait
int
sub
ret
jno
mov
adc
push
jmp
adc
inc
lret
movsb
in
in
ret
mov
jbe
pop
dec
outsb
bound
mov
test
and
ror
aas
in
push
stos
xchg
je
loop
repnz
jl
sbb
jg
jecxz
and
jno
jmp
test
push
vandnpd
lahf
sahf
jg
clc
cmc
aam
aam
add
or
dec
fs
cmp
repz
sahf
cs
insb
and
ja
mov
mov
mov
and
fwait
or
inc
popa
inc
fwait
cmp
in
push
aas
inc
cmp
cmp
and
cmp
inc
mov
cmc
aad
lods
mov
cwtl
pop
sbb
aad
and
cs
out
or
cmc
mov
in
mov
mov
std
push
sahf
dec
scas
loop
jl
mov
inc
stc
ss
inc
cltd
cs
aam
enter
shr
adc
xor
xor
sub
pop
test
repnz
das
aam
mov
out
insb
pop
inc
sub
loopne
outsl
test
and
xor
test
cld
adc
mov
jmp
rcrl
xor
jne
or
testb
insl
movsl
push
inc
jmp
fadds
sub
push
addr16
mov
fdiv
mov
and
mov
or
xchg
xchg
cmp
out
orb
dec
mov
push
into
fistl
fcomps
pop
sub
adc
push
mov
pop
aaa
sahf
popa
test
push
mov
fiadds
test
cmp
or
cli
cmp
adc
xchg
and
dec
test
mul
ss
stos
jge
jp
pop
gs
hlt
pop
rol
outsl
pop
xor
add
scas
cmp
rcll
loopne
jl
lods
mov
inc
clc
mov
dec
enter
and
and
pop
push
xchg
mov
dec
xchg
adc
dec
or
lods
lea
pop
cmpsl
pop
in
and
vmulpd
movsb
mov
and
in
mov
test
mov
xchg
mov
aas
outsw
sbb
fisttps
pusha
mov
cmp
orb
pop
inc
enter
cmpsb
hlt
arpl
cmp
mov
test
push
sahf
arpl
js
or
jp
movsl
mov
ljmp
jmp
in
inc
daa
mov
in
sub
mov
std
data16
jbe
in
int3
dec
and
into
rcl
addb
stos
mov
movsb
ss
insb
shlb
scas
push
or
ljmp
xchg
xorb
inc
mov
out
push
mov
insl
inc
stos
mov
xchg
jne
leave
jno
xchg
lret
jnp
shrl
das
jge
out
xchg
test
sbb
add
cmpsl
mov
add
or
pop
fs
add
lret
and
jmp
push
clc
jmp
lods
dec
outsl
adc
stc
addr16
and
sbb
pop
lret
fistps
and
cmc
sbb
adc
mov
test
adc
xor
pop
out
aad
in
sbb
mov
test
mov
sbb
and
aad
pop
mov
cmpsl
or
mov
jb
jbe
dec
mov
adc
cmp
add
lret
push
movsb
cmpsb
cld
call
icebp
andb
cmp
fldenv
xor
sub
xchg
xchg
push
xchg
mov
pusha
lea
out
xchg
inc
js
loop
cltd
cmpsl
repnz
push
inc
push
or
test
ret
andb
dec
mov
test
jae
mov
mov
or
pushf
lds
jmp
pop
fwait
sbb
test
movsl
jno
push
jne
adc
sub
pusha
push
imul
jo
push
adc
cltd
scas
aas
adc
add
dec
lods
cmp
cmp
sbb
stos
gs
inc
fnstcw
inc
je
enter
push
outsb
dec
xor
and
das
adc
jecxz
stc
test
cmp
insb
sbb
daa
cmp
push
adc
inc
mov
leave
rcrb
arpl
jle
hlt
fxch
sti
notb
aas
arpl
mov
xchg
stos
mov
jne
lcall
dec
lret
fs
filds
cs
inc
outsl
add
mov
xlat
sahf
push
xchg
push
sub
mov
adc
mov
imul
sub
cmp
aas
sub
stc
loopne
jecxz
nop
cmp
push
or
lods
mov
dec
mov
sti
ret
and
aaa
cmp
sbb
mov
popf
xchg
and
jmp
and
jae
ljmp
pusha
ret
ss
sub
mov
imul
outsb
inc
jg
out
test
imul
sub
mov
lock
gs
out
inc
ret
xchg
mov
adc
outsl
shrb
jmp
pushf
mov
push
cmp
jl
je,pn
and
adcl
cmp
or
push
xchg
inc
jmp
push
inc
les
lods
or
inc
mov
scas
push
push
push
xor
pop
mov
jnp
into
mov
hlt
mov
out
add
dec
sbb
lds
xchg
inc
rcrb
fbstp
scas
xchg
dec
repz
xor
push
out
sub
js
dec
repz
fildll
xor
pop
jecxz
xorb
pop
out
pop
push
cmpsl
sbb
and
imul
imul
loopne
outsb
adc
fnstenv
pop
loop
mov
sub
sub
orb
mov
inc
pop
mov
xor
pop
sbb
and
repz
insl
jecxz
outsl
mov
in
jae
mov
je
sub
gs
lods
add
fisubrs
dec
jle
mov
lock
adc
dec
add
mov
mov
aaa
add
jg
dec
pusha
int3
ds
insb
test
mov
jecxz
or
pop
sarb
pop
mov
jmp
inc
idiv
testb
ret
mov
or
sub
and
popf
adc
sarb
mov
mov
xchg
outsl
cmp
cmpl
mov
popf
stos
jb
shll
arpl
mov
in
jmp
push
aas
lods
xchg
insb
aam
movsl
popa
pusha
jmp
pop
mov
das
or
jae
mov
push
mov
pop
cmp
sbb
xor
push
mov
mov
add
loop
or
inc
ficoms
push
add
idiv
lret
aas
sub
shll
dec
or
stos
or
and
ds
in
ret
mov
mov
lods
push
inc
scas
shll
mov
aad
mov
int3
sub
pop
push
sbb
int
inc
loop
fldt
negl
mov
mov
mov
lds
aam
push
jle
mov
push
adc
xlat
lret
cld
pop
adc
adc
dec
ljmp
arpl
fs
ds
sbb
orb
sti
sub
and
dec
aaa
or
outsl
dec
mov
sub
in
push
sti
hlt
adc
out
pop
pop
adc
pop
int
cmp
adc
lcall
cmp
mov
dec
cmp
cwtl
arpl
jo
std
xorl
pop
lahf
lods
out
dec
ja
or
movsl
cmpl
xor
xor
mov
xlat
jns
popf
loopne
cld
mov
cmp
xchg
icebp
movsb
dec
or
bnd
inc
sahf
mov
sub
scas
sbb
dec
and
jge
fldt
iret
test
xor
pusha
loope
lds
mov
imul
imul
or
inc
ud2
mov
inc
cmpsb
or
iret
cli
xchg
call
and
in
hlt
push
jns
cmpsb
add
pop
push
jns
mov
lods
inc
or
shll
scas
mov
dec
push
fs
adc
inc
mulb
in
mov
dec
dec
xchg
mov
fcmovb
inc
lods
xchg
push
in
fs
xor
sahf
mov
notb
mov
jb
xchg
mov
inc
leave
bound
xor
enter
and
mov
push
mov
inc
addl
inc
pop
aaa
test
push
pop
xor
mov
fs
fidivrl
popf
mov
or
ljmp
test
pop
push
jp
lea
xchg
insb
xor
mov
mov
cmpsb
std
fsub
sub
or
pop
xor
push
ret
mov
push
pop
mov
addr16
xlat
sub
jae
shrl
push
lret
and
cld
out
xchg
jne
js
pusha
dec
xor
mov
mov
jne
popa
and
or
addb
dec
push
js
test
fdivp
lea
dec
int3
or
fisttpll
pusha
jg
inc
dec
loopne
sbb
cmp
jo
ja
adc
xor
inc
adc
clc
insl
in
jle
xchg
int
clc
dec
lods
and
or
dec
xchg
fcompl
insb
jne
mov
mov
mov
xchg
dec
call
or
scas
lock
ljmp
add
add
fmull
loope
das
mov
jmp
adc
clc
xchg
das
and
ljmp
push
nop
test
out
add
cli
aam
shl
pushf
mov
and
xchg
push
scas
test
and
sahf
ret
inc
sbbb
outsb
adc
popa
cmp
pop
outsb
mov
adc
shl
mov
mov
loope
sub
mov
loopne
push
mov
cmp
imul
jbe
fiadds
adcb
sub
popa
xchg
aam
sti
mov
mov
je
xor
adc
xchg
cmp
sti
sahf
lahf
sub
or
inc
lods
sbb
xor
jb
in
jb
inc
xorl
in
sub
mov
or
les
sub
scas
loopne
bound
cld
lcall
pop
xchg
les
jbe,pt
cmp
enter
cmc
and
ret
inc
int3
cltd
movsb
add
int3
jo
jg
and
mov
sub
imul
add
xchg
lret
mov
ljmp
cmp
clc
mov
cmp
ljmp
cld
or
fnstsw
subl
mov
rorb
aaa
das
testl
xor
ret
xchg
mov
dec
dec
adc
ljmp
mov
fidivrl
aam
iret
bound
xor
in
das
xchg
addb
ja
sbb
dec
bound
daa
or
mov
addr16
call
cmpsl
push
out
mov
pop
mov
mov
scas
daa
stos
dec
xor
or
arpl
test
dec
mov
mov
cld
test
aas
xor
jecxz
icebp
push
cmp
fmull
aad
cmp
mov
lock
insb
mov
sar
cmp
pop
cmp
inc
xchg
dec
jecxz
xor
xchg
notb
popf
mov
xchg
xchg
and
fistpll
inc
test
or
jle
pop
push
mov
push
scas
or
and
ss
mull
in
shl
lds
mov
adc
insl
data16
inc
cld
insl
pop
cs
xchg
pop
sarb
addr16
pop
xor
outsb
out
xlat
into
rcrb
mov
xor
subb
add
sbb
lcall
mov
xor
add
mov
add
dec
push
movsl
lret
adc
loope
movsl
push
mov
imul
mov
mov
dec
stos
inc
jg
adc
outsl
inc
lods
jmp
js
or
int3
rcll
pop
jmp
js
xor
cmc
je
jmp
fs
xor
data16
xchg
add
gs
or
mov
add
jb
into
imul
and
and
shlb
dec
lret
cmovg
fldenv
enter
xchg
jae
mov
jmp
jb
outsb
inc
ret
stos
fsubrs
fsubs
jecxz
and
cmp
test
jae
fidivs
push
xchg
mov
cltd
loope
fs
and
mul
pop
mov
stos
cli
add
dec
fmuls
jg
inc
adc
push
jb
push
imull
mov
sti
sarl
jbe
mov
xchg
inc
pop
mov
rep
aas
mov
inc
push
mov
scas
cmp
rclb
lcall
test
xchg
jae
pop
mov
jno
sub
sub
sub
adc
outsb
pop
mov
jo
rcrl
or
xchg
sahf
out
call
pop
bound
cmp
rcl
mov
into
loopne
mov
shrl
push
dec
int
aad
mov
xchg
or
push
adcl
sar
rcrl
insl
dec
fisttpll
xor
out
pop
and
fisubrs
sbb
and
adc
mov
movaps
shl
push
frstor
cmp
inc
leave
pop
add
out
sub
shlb
or
pop
test
lods
and
js
lret
lock
jle
sahf
sti
mov
pushl
bound
push
in
outsl
ds
xchg
outsb
add
sarl
push
and
mov
out
sub
cmpsb
incb
fs
rcrb
jb
pop
aaa
sbb
lock
and
mov
nop
ficompl
in
push
repnz
in
xor
shrl
cmp
ret
in
test
addr16
cwtl
out
pop
bound
lea
hlt
cmpsl
mov
scas
xchg
outsb
fsts
jae
mov
sbb
js
xchg
mov
xor
fcoml
jo
subl
ja
jnp
sub
cmp
es
sbb
stos
clc
daa
shlb
aam
repz
or
xor
cmp
sar
dec
and
xor
lret
call
sub
or
cmp
push
adc
in
orb
or
pop
mov
pushf
push
outsb
dec
jl
test
sbb
pop
jecxz
cmp
lods
mov
adc
cwtl
cmp
cmc
test
ds
imul
pop
jns
or
add
clc
mul
push
or
sub
mov
fwait
xor
jne
mov
adc
mov
add
mov
inc
fldl
pop
sbb
xor
adc
cmp
mov
int
cmpb
mov
add
pop
sub
sub
jno
incl
push
or
das
ret
aad
mov
popf
cld
sarl
int3
xorl
push
push
enter
loope
xchg
push
adc
push
mov
repz
inc
scas
push
xor
push
cmp
xchg
popa
xorb
inc
addr16
imul
jae
lahf
rorb
xchg
and
or
ja
adc
and
outsl
popf
int3
call
into
xor
pop
pop
adc
iret
ljmp
push
leave
add
lods
or
xor
jbe
cmp
inc
xchg
jns
mov
in
pop
push
inc
mov
les
icebp
fcomp
in
jl
jl
inc
xchg
sub
jl
into
adc
and
jge
add
aam
loop
sub
mov
adc
and
popa
sbb
xchg
ljmp
pop
fs
movsb
xor
ret
les
dec
cmp
mov
pop
adc
cwtl
or
inc
sbb
add
pop
xchg
pop
and
add
and
test
shlb
push
movsl
in
std
in
inc
mov
loopne
xchg
mov
mov
push
ret
call
testb
lds
mov
loop
int3
loope
sbb
cmp
cli
or
sub
xchg
sbb
je
cmpsl
lcall
push
mov
aam
add
jno
inc
sub
aad
pop
pusha
sahf
fcomp
inc
hlt
aaa
out
xlat
or
cmp
xlat
or
sbb
and
xchg
cmp
out
mov
pusha
daa
shll
lock
into
mov
jg
jle
xchg
scas
jp
adc
sub
and
xor
roll
pop
stos
rcrl
mov
inc
mov
test
adc
rcrb
les
test
fisubrl
add
xor
int
imul
stos
lahf
and
test
xor
push
add
mov
test
add
dec
pop
aaa
jle
push
xchg
je
xchg
adc
jns
push
push
pop
pop
dec
mov
adc
sub
cmp
bound
fisubl
pushf
push
inc
cmpsb
adc
test
jmp
mov
jne
repz
xchg
sbb
enter
mov
cmp
jp
fs
jmp
add
mov
jecxz
out
shll
sbb
adc
pop
addl
popa
cs
add
or
jle
sbb
hlt
dec
in
inc
mov
das
cli
pop
xchg
pushf
add
testl
movq
mov
sbb
stos
ja
add
and
xlat
cmp
mov
add
ja
pop
ss
fbstp
push
nop
imul
mov
loopne
andl
mov
cli
cwtl
mov
mov
mov
or
les
or
das
pop
ja
mulb
sbb
ljmp
jle
outsl
mov
lahf
add
leave
or
stos
pop
sbb
adc
lds
cmp
sub
xlat
daa
outsl
ret
js
mov
sbb
sahf
adc
dec
adc
mov
sarb
lahf
mov
sahf
lods
xchg
call
mov
jns
xchg
or
popf
jmp
dec
inc
or
popf
push
int
ds
iret
rcrl
icebp
mov
dec
lahf
nop
add
arpl
mov
cmp
mov
and
jo
jp
pop
mov
mov
push
out
mov
test
cmc
lahf
jecxz
lods
gs
mov
cs
test
leave
push
sub
cmp
xchg
inc
rcl
xor
push
xchg
cmc
fldl2e
inc
mov
or
in
outsl
mov
xchg
pop
out
adc
aas
mov
or
pop
andl
scas
jp
mov
ljmp
add
lods
inc
mov
stc
mull
stos
repnz
xchg
mov
daa
rolb
xchg
pop
arpl
xor
pop
jnp
loopne
xlat
jmp
add
lock
push
jl
decb
pusha
mov
bound
xchg
mov
cmp
out
sub
test
dec
and
sbb
and
insl
xchg
scas
scas
inc
hlt
daa
and
cmpsb
jae
xor
and
add
or
test
xchg
hlt
in
pushf
mov
test
cmp
mov
xor
cmpsb
mov
sub
sbb
pop
mov
nop
fisttps
ret
and
adc
or
sbb
addr16
cwtl
popl
cmp
mov
pushf
xor
dec
mov
inc
les
ret
jp
lcall
ret
and
cltd
jne
inc
arpl
in
adc
lods
lcall
cmp
dec
lock
aam
jb
sbb
jecxz
xchg
in
mov
ljmp
sahf
xchg
imul
mov
push
mov
insb
mov
mov
xchg
sub
mov
add
adc
aad
nop
mov
sub
pusha
loop
push
or
xor
push
sub
ret
stos
outsl
ficomps
ja
xor
xchg
xor
fbld
jne
xchg
call
mov
pop
sbb
pusha
xchg
adc
ficomps
insl
fildl
jecxz
push
das
repnz
jae
in
out
cli
dec
push
jg
cmp
std
xchg
icebp
jmp
sbb
cmp
and
pop
sti
inc
incl
push
scas
in
adc
pop
stos
add
jmp
lcall
loopne
int
or
pushf
nop
sub
xor
ds
mov
out
sub
sbb
lret
sub
repz
or
test
sub
add
mov
pop
xor
fwait
mov
sub
fcmovnbe
dec
aad
jae
jg
je
adc
mov
aad
mov
hlt
int
lock
pop
scas
shrd
and
repz
jmp
pop
fwait
sbb
mov
and
sbb
jne
inc
xor
shlb
inc
repz
aaa
loopne
je
inc
loop
fstpl
orl
imul
fiadds
dec
jge
inc
pop
sub
and
jb
pop
insb
jl
leave
in
mov
scas
mov
lods
mov
stc
xor
sti
jno
cli
jl
and
sbb
shll
sbb
xchg
iret
bound
xchg
push
scas
shr
in
push
and
mov
jmp
mov
test
repnz
mov
pop
jnp
cltd
fnstenv
stc
ljmp
push
pusha
mov
xchg
and
sbb
rorl
xor
call
orb
dec
jmp
flds
stos
mov
add
adc
int
pusha
jecxz
adc
inc
sbb
fildl
and
loope
adcb
ja
popa
fistpll
dec
adc
pop
popf
dec
imul
ja
add
mov
pop
popf
push
cmp
add
jae
mov
scas
iret
pop
push
jl
xchg
xor
dec
sahf
insb
mov
nop
mov
adc
mov
mov
icebp
cmp
mov
push
sbb
ss
psraw
mull
int
shll
aas
dec
mov
fdivr
fucomip
add
pop
sbb
sar
or
in
rol
xorl
xor
push
jmp
jg
lcall
mov
sbb
and
lods
mov
ret
decb
cmp
mov
ficompl
sti
inc
mov
lods
aaa
daa
cmc
push
sbb
cmpsb
mov
jle
xchg
test
xor
subb
jmp
xchg
cli
std
jecxz
xor
pop
cwtl
test
adc
mov
mov
es
sub
mov
mov
sbb
pop
in
bound
add
mov
loop
or
sahf
jnp
popa
push
lea
stos
pop
mov
outsl
jns
xchg
aam
dec
push
sti
push
js
xchg
xor
push
test
xchg
lcall
mov
push
jg
push
daa
in
add
arpl
push
std
and
sub
mov
push
mov
lret
pop
push
sbb
jbe
fsubrl
jg
inc
adc
cmp
jae
xchg
mov
xor
movsl
dec
dec
push
aad
jbe
inc
xor
scas
icebp
mov
cmp
push
pop
lods
cmpsb
and
popa
or
scas
movsb
jle
adc
out
imul
into
xlat
loop
cmpsb
add
adc
adc
sarb
out
sub
add
adc
imul
pop
fdiv
call
cmp
in
test
mov
dec
repnz
push
pop
sbb
dec
daa
leavew
mov
mov
jge
inc
mov
dec
lret
or
ljmp
dec
inc
and
in
lods
fadds
xor
cmp
sbbl
lret
popf
sahf
xor
test
push
popa
stc
xchg
les
jmp
loopne
xchg
lea
pop
mov
movsb
add
js
test
out
push
in
xor
adc
xor
leave
in
inc
cwtl
mov
js
sarb
aaa
ja
adc
sub
fcmovb
loope
adc
pop
mov
out
mov
mov
sbb
nop
daa
pop
inc
ret
dec
arpl
aad
cmp
fwait
lcall
test
mov
jns
xor
shl
cwtl
or
das
mov
or
jo
addr16
inc
jns
push
add
or
push
cmp
les
data16
std
rcrb
pop
rcl
in
fcoms
out
or
lret
int3
shlb
pop
mov
push
lock
pop
hlt
mov
repz
mov
xchg
stos
adc
jo
es
ds
fnsave
cmp
ja
test
aad
adc
cmpsb
jbe
dec
xor
iret
pop
out
shrb
inc
imul
movsl
push
xor
push
in
mov
out
movsl
daa
dec
fmul
cltd
xor
sub
xor
mov
push
xchg
push
notl
sbb
mov
cmp
rcl
aam
aas
dec
sahf
outsb
and
shll
xchg
cmp
popa
jne
adc
push
sbb
lgs
mov
add
xor
fnstcw
xchg
inc
dec
cmp
push
stos
pop
lahf
cltd
pop
xlat
xchg
inc
mov
push
fimuls
pop
enter
sub
jo
mov
stos
in
rol
int
imul
loopne
fbld
inc
fbstp
xchg
pop
adc
test
mov
mov
jb
jmp
aaa
js
std
leave
lods
cmpsl
lret
push
and
into
movb
xor
inc
push
jge
addb
pop
inc
jecxz
mov
jbe
in
xchg
stos
sahf
sarb
cmp
insb
mov
repz
out
ss
and
lock
data16
popf
sbb
mov
scas
lock
int
cli
xor
test
mov
mov
cmpsl
aad
adc
or
cmp
sbb
lock
lods
aad
test
rcll
int3
mov
add
sub
adc
mov
adc
mov
pop
ds
out
push
cs
jge
mov
pusha
jae
cmove
aam
pop
loop
mov
std
fcoml
test
stos
xor
push
arpl
scas
mov
adc
push
sti
push
push
test
gs
mov
xorb
loope
repnz
push
movsb
popf
cltd
cmpb
cmp
movsl
call
sbb
sub
je
popa
je
mov
push
push
pop
adc
cltd
je
loopne
scas
les
pop
fstl
dec
adc
sbb
rcrl
ss
and
sub
scas
inc
inc
pop
pushf
leave
xor
stos
add
or
lret
pop
out
push
aad
cmp
or
int3
lods
mov
jno
lahf
xchg
fs
jg
scas
adc
ljmp
jp
xlat
mov
push
cld
popf
add
or
cmp
sub
fstps
in
in
sbb
popf
stc
mov
je
xchg
shrb
pop
or
sbb
pusha
inc
lret
adc
add
aas
jo
dec
mov
cwtl
xchg
inc
rcrb
jb
repz
nop
scas
inc
mov
jb
shlb
int
adc
or
jmp
jg
lods
ret
es
mov
fimull
in
nop
movsb
add
xchg
xlat
icebp
dec
rorl
or
cmp
daa
mov
jns
sub
xor
cltd
cmc
sar
mov
pushf
pushf
rcrb
adc
insb
sbb
data16
shl
xchg
jmp
int3
notl
aas
icebp
xchg
repz
mov
lds
ljmp
lret
in
mov
nop
out
jg
adcl
call
jecxz
sbb
or
fcomip
add
pop
jns
jge
or
repnz
sbb
or
rcrb
fcomps
loop
add
pop
movsb
pop
and
push
pop
es
sub
push
fcmovne
sbb
sarl
call
in
mov
pusha
push
std
ja
loope
add
outsl
push
cwtl
xchg
mov
jbe
shlb
lock
pop
das
mov
inc
mov
xorl
aas
cli
sbb
adc
inc
push
cmp
call
test
nop
jmp
mov
std
lea
in
and
sub
int
mov
std
stos
insl
or
adc
out
dec
mov
ljmp
stc
or
movsl
hlt
sub
popf
mov
push
outsl
dec
outsb
ja
push
out
dec
mov
aaa
outsl
cmp
xor
punpckldq
inc
mov
sub
mov
push
sbb
imul
mov
stc
fcoml
stc
sub
hlt
mov
adc
dec
and
mov
add
aad
ja
testb
xchg
xchg
and
dec
ret
filds
test
pop
xor
mov
pusha
jmp
push
shrb
pop
sbb
sub
dec
daa
jecxz
mov
daa
stos
repz
scas
nop
jmp
sti
cwtl
mov
push
les
cmp
mov
sub
test
ret
aaa
out
sbb
test
repz
inc
push
inc
cmp
repnz
outsl
or
cwtl
push
fcmovnbe
sub
xor
adc
inc
push
shll
popf
leave
cmpsb
inc
xchg
es
push
dec
sub
jg
mov
test
jns
pop
out
push
mov
pusha
mov
push
mov
push
insb
xor
incl
inc
fisubl
js
testl
into
adc
or
into
xor
and
data16
jb
add
push
shr
enter
mov
xchg
out
pop
cmp
xchg
sbb
inc
xor
movsl
out
mov
push
mov
add
xor
sub
and
outsb
dec
rorb
pushf
loope
or
push
ja
xor
push
shl
pop
inc
cmpsl
mov
pop
push
inc
ret
int
and
stos
adc
imul
loop
outsl
jl
adc
mov
dec
fwait
pop
pop
jp
or
pop
lea
cmc
sub
mov
mov
mov
push
clc
xlat
fstpt
dec
pop
popa
mov
jg
and
add
inc
dec
popf
push
sub
mov
std
or
in
mov
xchg
in
inc
stos
jne
je
imul
mov
ja
call
and
sub
idivb
movsb
sub
test
lock
call
mov
mov
fildll
rcll
dec
outsl
cmp
mov
jl
mov
ss
pushf
xor
mov
add
sbb
mov
gs
rorl
mov
pop
xchg
pop
outsb
clc
imul
mov
cld
sub
ja
push
adcl
dec
roll
jo
scas
fwait
sub
push
push
dec
add
sbb
add
mov
std
mov
fistpll
ficompl
xchg
mov
sub
test
xchg
xor
ds
sahf
xchg
lret
les
dec
or
movsl
sbb
sbb
or
add
inc
scas
mov
cltd
mov
pop
call
jbe
ret
add
test
mov
and
mov
cwtl
sub
add
shrl
dec
fwait
jno
out
and
sbb
jp
out
aad
mov
idiv
rcrb
mov
lods
nop
inc
cmp
add
negl
push
and
mov
int
in
imul
movsb
push
add
and
lahf
sbb
and
xlat
mov
test
cmp
dec
adc
pop
in
jg
sbb
iret
sbbb
sub
int
mulb
out
dec
stos
or
xor
ret
lods
inc
test
je
mov
ljmp
popf
pop
adc
out
arpl
dec
dec
cmpsb
nop
cmpsb
or
ljmp
inc
push
test
pusha
fdivs
lret
add
lea
push
jbe
sub
adc
shlb
lahf
xchg
aaa
shrb
cmp
jo
mov
repnz
ds
mov
inc
cmp
insb
es
into
jg
dec
aaa
scas
std
movsb
lahf
adc
sub
inc
ljmp
jbe
mov
xchg
fsubs
inc
lock
arpl
xor
dec
loop
push
pop
inc
aaa
or
sub
lods
mov
or
mov
loope
xchg
sub
dec
xor
sarb
pop
mov
mov
push
mov
inc
stos
scas
rclb
jg
xchg
xor
or
xchg
push
sbb
mov
in
sub
mov
xchg
mov
jmp
jle
lock
shll
xor
mov
out
movsb
cli
add
aad
rcrb
mov
xchg
lea
nop
testb
mov
popa
int
loopne
mov
iret
aaa
pop
je
mov
lcall
cmp
cmpl
mov
dec
push
add
cmc
push
push
sbb
fcoml
lods
or
vpmaxub
cmp
mov
out
out
push
lcall
addr16
push
loopne
pop
push
inc
fcoms
push
mov
push
cld
sbb
ds
push
and
cmp
or
ja
scas
add
xchg
mov
std
cmp
inc
add
cmp
pop
jmp
push
sbb
jg
out
in
jb
jecxz
out
push
sbb
jecxz
jl
movsl
pop
movsl
jo
push
sti
push
or
pop
lods
lret
aaa
inc
ficomps
push
lret
xor
out
out
dec
sbb
cmpl
pop
out
pop
addr16
outsl
add
dec
mov
pop
pop
ret
icebp
aad
xchg
adc
mov
cmp
ret
inc
xor
inc
xchg
pop
hlt
call
dec
gs
loope
cmp
add
int
xchg
mov
pop
das
lcall
xor
shl
dec
sti
add
adc
ja
xor
arpl
mov
adc
stos
iret
aad
sbb
xchg
xchg
or
adc
mov
mov
dec
dec
ja
ja
mov
jno
xlat
jle
add
inc
jne
rcll
je
xchg
fildl
mov
mov
pusha
pop
les
test
mov
sub
dec
pop
in
mov
xchg
pop
adc
pop
popa
iret
dec
mov
add
stos
xchg
xchg
sarl
mov
sub
cld
popf
mov
cmc
sub
mov
ds
popa
movsb
or
mov
sar
sub
inc
nop
int
std
mov
js
lock
xor
ljmp
fadds
dec
dec
sbb
shlb
fs
insl
mov
mov
mov
nop
mov
xlat
dec
mov
or
jae
adc
out
push
mov
enter
addb
mov
push
jl
ds
out
sarl
mov
jb
mov
cld
gs
fstl
lock
push
arpl
and
repnz
rcrl
rcll
loopne
inc
into
pop
and
pushf
pop
pop
add
insl
push
mov
inc
xchg
mov
push
adcl
push
pop
ja
lcall
mov
push
icebp
push
or
testb
add
imul
adc
arpl
xorb
push
sbb
mov
iret
xchg
jmp
sub
bound
xchg
daa
cmp
sbb
xchg
or
push
xor
in
pop
shll
imull
jno
movups
mov
mov
push
push
insb
loopne
push
dec
push
daa
adc
sbb
mov
dec
stos
jg
cmpsb
imul
inc
mov
lods
nop
scas
fdivl
gs
sub
xor
or
std
fwait
jmp
xchg
fs
fldl
mov
ja
add
adc
imulb
lahf
push
xchg
push
xchg
pop
sub
mov
std
stos
mov
pusha
je
hlt
adc
pop
mov
push
test
push
in
mov
push
std
repz
lds
cmp
call
mov
xor
aas
fldl
lahf
mov
and
cmp
cs
mov
sub
shll
add
mov
sbb
cmp
xor
test
mov
fwait
push
test
outsl
decl
loopne
div
in
sub
and
out
jo
sbb
popa
rolb
dec
add
xor
pusha
lods
das
and
mov
cmp
pop
int
lea
subb
popf
cmp
sbb
pop
insb
push
roll
sbb
negb
adc
inc
or
push
add
inc
mov
fmull
shrl
mov
cmp
sub
test
call
xchg
adc
xchg
add
clc
xchg
aam
inc
sub
std
sbb
data16
inc
jge
int3
jmp
mov
stos
push
dec
push
dec
adc
scas
push
mov
lret
fs
xchg
cmp
push
pop
mov
xlat
sbb
inc
leave
push
dec
inc
je
data16
fcom
rolb
hlt
inc
fidivrs
repnz
xor
adc
cwtl
dec
jmp
lock
test
or
ljmp
mov
lods
or
pop
imulb
ja
aad
sbb
jnp
adc
addb
imul
fldl
fucomip
leave
add
out
xchg
push
pop
fwait
mov
decl
sahf
cs
sbb
stos
outsb
mov
jmp
cmc
push
test
jo
enter
mov
jle
push
sbb
loopne
pop
pop
or
rcrl
sub
push
jns
xchg
pusha
cmp
or
fs
xor
push
outsl
cmpsb
scas
mov
outsl
xchg
dec
int3
les
inc
sti
fldenv
sti
clc
mov
xorb
les
pop
sub
aas
adc
xor
int
repnz
mov
mov
into
pop
out
xor
test
and
xchg
cld
dec
test
or
add
fldt
rol
cmp
nop
icebp
jmp
xchg
lea
imul
data16
dec
bnd
notb
loope
shrb
adc
mov
imul
cld
mov
cmp
sbb
cmp
arpl
ss
imul
shrb
shrl
mov
push
xor
sub
and
dec
jb
adc
aad
jae
inc
cmc
sub
sub
pop
fnstsw
loop
cwtl
ret
sub
cmc
loop
call
pushf
aam
pop
or
cmp
cmp
xchg
xor
mov
or
sub
fisttps
sub
jns
aaa
ret
sbb
cmp
imul
dec
test
xchg
cs
ljmp
inc
fadds
daa
push
inc
ret
pop
sbb
jmp
pop
popa
outsb
arpl
loopne
push
or
xchg
mov
pop
cmpsb
rcr
xchg
mov
jle
int3
addr16
popf
outsl
cmp
sbb
inc
add
push
inc
nop
xorb
sahf
inc
add
outsl
lret
lret
clc
pop
js
in
push
sbb
lcall
call
lret
imul
mov
movlps
xchg
adc
push
xor
aaa
mov
pop
rolb
fcmovu
icebp
cmc
sub
mov
dec
shrb
jo
xchg
cltd
imul
jecxz
pop
xchg
push
mov
data16
add
shrb
mov
pop
jg
jge
or
mov
jne
dec
stos
xor
lcall
dec
jp
cmp
addr16
or
scas
sbb
ret
xchg
mov
arpl
push
sub
mov
adc
aam
dec
lcall
sbb
push
cmp
cmp
xchg
int3
mov
adc
lds
push
adc
pop
aaa
xlat
mov
fstpl
insl
dec
int3
xor
aaa
repnz
js
cmpsl
dec
and
idivl
arpl
push
shlb
shll
dec
pop
jns
inc
pop
sahf
inc
mov
bound
and
jle
or
cmp
icebp
mov
mov
and
push
dec
or
xor
imul
add
pop
or
pop
xorl
pusha
scas
in
xlat
add
mov
mov
xchg
pop
shlb
xor
loop
iret
pop
inc
and
and
cmp
pop
adc
jge
sbbl
add
sbb
ja
shlb
lret
add
adc
fistl
mov
dec
in
add
adc
icebp
xor
outsb
ds
mov
sub
or
loope
popf
mov
jns
push
cmp
das
mov
pop
repnz
push
iret
dec
mov
jp
in
mov
cmp
jge
jnp,pt
add
fisubl
pop
shll
clc
imulb
jmp
xor
aam
push
ss
stos
push
mov
cmp
lea
popa
shrb
enter
sbb
dec
pop
int3
es
push
dec
xchg
fcompl
mov
or
out
push
jnp
fsqrt
dec
cwtl
fiaddl
popf
rorl
fnsave
push
fidivrs
scas
das
negl
sbb
mov
cmp
jmp
push
jmp
jae
mov
arpl
mov
or
dec
mov
jle
rclb
popf
dec
xchg
loop
add
cmp
pop
cmp
mov
sub
jae
insl
inc
mov
dec
mov
cmp
dec
or
adc
lret
jnp
in
rcll
in
loopne
and
fwait
bound
insl
cltd
nop
push
lahf
shlb
ret
scas
dec
mov
cmp
popf
sbb
dec
or
sbb
push
pusha
xchg
push
enter
mov
lea
jae
movsb
ss
cmp
je
sbb
daa
mov
mov
cwtl
mov
pop
sub
lcall
dec
sarb
movsb
cmc
add
aas
cmc
jl
aam
lcall
cmc
mov
add
aad
jmp
mov
aad
mov
push
movsb
inc
in
lods
inc
pop
sub
pop
inc
xchg
inc
gs
aas
push
int
mov
adc
push
mov
mov
cmp
mov
in
mov
testl
or
stos
push
sbbb
mov
push
test
xor
cmp
sbb
jecxz
pop
push
cmp
add
or
xchg
adc
rolb
jns
jecxz
js
lock
inc
mov
cmp
repnz
ja
mov
es
shll
jge
xor
push
mov
pop
lea
mov
inc
sub
icebp
add
out
adc
mov
add
int
xchg
fbstp
imul
add
mov
test
jle
dec
push
add
jg
lods
add
aaa
add
jo
pop
dec
and
and
imul
inc
push
notl
sub
or
or
pushf
push
mov
js
cwtl
push
cmpsb
andl
cwtl
shlb
mov
stc
cli
cs
mov
mov
mov
decb
and
into
sbbl
xor
pop
fidivl
loop
insl
mov
fdivl
sub
or
shlb
jecxz
outsb
loope
push
incb
adc
adc
push
inc
arpl
and
nop
inc
inc
repnz
dec
scas
mov
jge
jb
cltd
mov
ret
sub
add
popa
cmpsb
mov
ds
sbb
xorl
add
push
mov
xor
inc
push
add
adc
and
xchg
jae
int3
mov
jecxz
sbb
push
push
inc
mov
stc
ljmp
xchg
stos
lret
popf
jge
mov
lahf
lcall
xchg
inc
ror
sub
xchg
mov
bound
dec
loop
test
out
mov
jecxz
lcall
out
call
adc
push
out
xorb
and
add
cltd
mov
xchg
push
scas
sti
repz
xchg
sub
shlb
ljmp
push
push
jecxz
jae
push
cmp
jns
cmp
jg
rolb
gs
repnz
out
and
cs
mov
jo
cmp
fidivrs
out
inc
add
xchg
inc
push
jae
mov
jbe
mov
stos
mov
in
xchg
mov
mov
aam
or
adc
dec
test
add
jb
incl
ret
sub
dec
xchg
mov
jl
aaa
in
daa
adc
arpl
ss
out
stos
dec
test
jmp
inc
or
psubusw
out
pop
ret
imul
in
sub
repz
xchg
sub
mov
in
adc
scas
repz
push
dec
sub
lds
jge
imul
inc
mov
mov
sahf
adc
pop
add
jo
mov
sarb
arpl
outsb
cmp
test
lods
cmp
arpl
ja
xchg
loop
push
mov
push
dec
xlat
dec
lea
fadd
arpl
arpl
mov
push
out
add
and
fisttpll
lret
jmp
mov
cmp
scas
js
out
movsl
decb
sti
jns
or
loop
mov
repz
repz
lret
popa
jae
icebp
test
jle
and
aad
push
popf
loope
dec
cwtl
bound
out
add
imul
jno
push
stc
imul
xlat
jb
pop
std
rolb
mov
cmp
mov
or
add
imul
push
outsl
jecxz
xor
movsl
pop
sar
inc
bound
sbb
jle
aad
stc
mov
mov
repz
xlat
daa
int3
ret
mov
pusha
popf
push
xor
pminub
outsb
jb
pusha
mov
dec
inc
dec
enter
xlat
push
or
mov
pop
nop
aas
loopne
dec
jg
ljmp
leave
shll
gs
ret
pop
test
lcall
test
and
mov
in
cwtl
jge
mov
rorl
add
sub
dec
adcb
mov
pop
lods
fsubs
pop
jg
sub
movsl
jnp
imul
xchg
jb
dec
xchg
xor
mov
imul
xlat
insb
aam
in
sahf
pop
sbb
adc
les
scas
idivb
sbb
jmp
jle
lods
add
push
shlb
outsl
shrl
adc
cltd
mov
std
add
adc
aad
cltd
jg
jno
mov
out
test
inc
sahf
mov
push
and
sbb
mov
into
mov
push
scas
inc
int3
out
sub
mov
cmc
mov
inc
mov
mov
push
cmp
test
ds
push
push
stos
iret
jecxz
adc
sbbl
jp
xor
add
inc
mov
or
fwait
xchg
jnp
and
popa
jno
lods
dec
push
scas
addr16
cwtl
cmp
mov
push
push
ljmp
lret
mov
lret
stos
xchg
push
rol
sub
hlt
imul
fidivrs
sub
clc
jae
dec
aas
cmp
inc
sbb
cmc
adc
adc
pop
add
mov
bound
add
cltd
cld
add
iret
xchg
test
jae
pusha
sbb
sbb
mov
sbb
repz
sbb
rcrl
push
sbb
mov
subb
popa
xchg
push
mov
adc
ja
xchg
cmpsb
push
pop
hlt
hlt
sbb
dec
jne
add
push
push
and
jge
mov
and
fwait
xchg
dec
mov
mov
add
push
je
mov
mov
out
cmpsb
fwait
and
loop
mov
cmp
out
mov
push
mov
mov
pop
rorl
dec
inc
adc
sub
mov
out
popa
mov
mov
inc
clc
inc
mov
lret
add
ljmp
imul
ficoms
out
arpl
movsl
xor
notl
jns
mov
add
daa
push
rorb
loopne
sub
mov
and
or
popa
jo
and
push
je
cmp
jbe
jp
and
aad
mov
repz
testl
push
xor
filds
adc
insl
jnp
test
or
sub
push
int3
mov
mov
jge
in
jb
jo
inc
dec
mov
imul
and
add
mov
pop
lea
push
and
cmp
cmp
xor
pop
or
data16
add
repz
mov
ljmp
adc
push
je
mov
jle
dec
or
lods
loop
jbe
out
stc
ja,pt
sub
xor
mov
sbbl
jmp
fcomi
stc
xchg
leave
push
pop
mov
in
hlt
adc
jo
shll
xchg
mov
adcl
push
or
or
repnz
mov
add
call
adc
addr16
inc
std
xchg
jl
popa
mov
daa
add
out
and
add
insl
call
popf
sar
push
pop
aad
push
jb
outsl
mov
sarb
pop
mov
daa
cmovl
insb
adc
test
mov
aam
xor
and
inc
fwait
xor
mov
rclb
pop
ja
cli
repnz
test
pop
xor
mov
jecxz
push
sbb
pushf
lahf
rclb
jle
std
xor
jmp
adc
cmp
mov
mov
pop
ljmp
lahf
and
out
leave
popf
enter
dec
mov
jno
in
outsb
mov
jmp
xor
out
repz
je
repz
popa
dec
dec
in
shll
std
ret
fwait
dec
repnz
loopne
xor
push
movsb
sahf
subb
ss
mov
mov
pop
sub
pop
xlat
xor
sbb
cli
pop
popa
std
or
and
jl
mov
scas
sbb
jmp
jne
dec
mov
xchg
xor
cmp
xchg
add
lret
push
add
iret
mov
xchg
stc
aad
jecxz
scas
ret
and
movsl
es
sub
lods
mov
add
int3
cmp
clc
nop
adc
fimuls
je
jne
repz
insl
out
inc
lret
jmp
inc
ret
clc
scas
out
lods
out
push
stos
fldt
adc
pop
mov
push
push
mov
add
sub
notl
push
cmp
imull
mov
popf
dec
xchg
xchg
insl
inc
or
jb
mov
int
cmp
xchg
xchg
sub
xor
int
dec
in
cmp
and
mov
jns
mov
movsb
jmp
mov
adc
push
cmpsl
in
ror
mov
cwtl
int
add
push
popf
cwtl
addr16
cmp
fnstcw
mov
xchg
loope
pop
pop
mov
dec
mov
sbb
and
rolb
xor
mov
pushf
xor
push
cmpsb
loopne
sbb
mov
xor
sub
dec
mov
rorl
sub
add
xchg
or
es
ja
not
ror
out
pushf
inc
lret
xchg
lret
and
sbb
shll
les
ret
adc
arpl
pop
shll
or
loopne,pt
mov
movsb
cmp
adc
jg
or
call
jns
sub
jl
xor
ficoms
inc
test
mov
mov
mov
aaa
les
or
flds
loop
cmc
dec
adc
push
call
test
roll
iret
jae
mov
jle
dec
sub
mov
inc
cmc
fdivrl
aad
or
inc
xchg
dec
dec
ja
repz
movsb
push
xor
push
push
pop
sbb
adc
cmp
test
fs
jne
pop
push
stos
inc
jns
mov
adc
repz
cmp
sti
dec
add
inc
sahf
inc
ss
inc
add
rorl
adc
psubq
ret
shrb
cmp
clc
inc
jnp
testl
push
or
int
aas
inc
call
jmp
or
aam
dec
in
jecxz
sbb
bound
in
adc
int
pushf
jl
or
rcrl
out
cmp
mov
fwait
lret
xchg
inc
sbb
iret
or
pop
ljmp
mov
mov
push
pop
mov
cmp
in
iret
fmul
jb
mov
mov
sub
jmp
cmp
dec
aas
push
mov
push
add
test
push
test
mov
sbb
out
in
sbb
dec
pop
cmp
inc
loope
jb
fcmovnbe
inc
and
pop
pop
sub
inc
xchg
push
xchg
stc
in
jnp
rclb
fs
pop
sub
stos
test
mov
aas
imul
sbb
cmp
mov
ss
mov
cmp
pop
mov
loope
mov
cmp
gs
je
add
mov
push
lahf
and
pop
xchg
pop
mov
xchg
repnz
daa
cmp
xchg
adc
adc
and
inc
sub
push
xchg
jle
pusha
sbb
lret
shr
imul
movb
repz
mov
jae
push
faddp
icebp
pop
shrb
push
mov
adc
pop
push
movsb
sbb
mov
ficoml
fistpl
xchg
xchg
mov
orb
mov
inc
or
dec
mov
sbb
and
push
adc
adc
sbb
inc
lret
sub
xor
jmp
scas
cli
ja
insb
mov
adc
dec
rolb
nop
iret
push
push
mov
jmp
lret
inc
inc
push
push
jno
lret
imul
fstl
jg
dec
and
addl
repnz
int3
mov
imul
push
lret
add
or
data16
repz
xchg
mov
iret
jg
xor
mov
fs
push
icebp
jno
jbe
sbbl
mov
xchg
scas
adc
jmp
testl
out
add
cmp
adc
push
or
enter
test
enter
dec
aaa
jg
int3
adc
ror
fimuls
movsb
addb
out
push
and
nop
mov
push
pop
gs
dec
out
inc
jmp
jl
iret
ljmp
fmull
stc
loop
pop
xor
repz
sub
adc
les
gs
jg
js
pop
out
clc
dec
adc
cmpsl
adc
adc
add
stos
popa
inc
jo
sbbl
leave
adc
mov
mov
jnp
iret
inc
fisubs
mov
shl
add
into
and
ficoml
adc
mov
jg
mov
dec
jmp
or
incb
or
mov
jl
test
push
mov
ljmp
pop
inc
inc
xchg
mov
dec
push
imul
pop
sbb
fsubrs
or
pop
test
pop
xor
xor
enter
pusha
in
inc
dec
iret
andl
mov
mov
mov
movsl
jae
cltd
test
push
mov
mov
cmp
shr
push
call
xchg
iret
jg
or
cmp
insb
push
fmulp
data16
sar
lcall
mov
insl
jae
arpl
insl
dec
pop
mov
test
leave
xor
jnp
lock
fnsave
and
mov
movsb
add
xchg
in
mov
jecxz
lods
sub
daa
jbe
into
or
lods
popf
cmpsl
decb
dec
fcom
push
mov
and
and
dec
sub
aas
cmpsb
addb
int
lds
jbe
insb
jp
xor
enter
imul
dec
mov
lds
sub
je
iret
sbb
mov
cmp
sbb
test
pop
dec
xchg
repnz
dec
rorb
cmp
inc
nop
fsts
inc
cwtl
xchg
push
adc
ret
lcall
mov
dec
inc
xchg
movsb
pop
int
cltd
dec
mov
mov
loop
cld
inc
notb
pop
test
shl
pop
sti
inc
das
fdivp
mov
mov
sbb
sub
fstl
nop
cltd
dec
push
fsubrs
aas
sub
jge
cltd
dec
mov
mov
adc
cmp
or
lock
or
decl
stc
mov
nop
adc
add
pop
mov
push
push
aas
stos
push
adc
notl
out
out
daa
xchg
sarb
loope
mov
inc
in
mov
ud2
jecxz
adc
cs
lahf
daa
adc
or
push
enter
pop
mov
das
cmp
addb
or
ljmp
je
ret
popl
push
rcrl
inc
loop
or
or
jmp
lahf
mov
lods
xchg
outsb
push
movsl
insl
xchg
loope
sbb
fcomps
dec
jmp
adc
mov
mov
jp
das
inc
shr
pop
sub
mov
jns
jne
sub
push
and
xchg
adc
stos
jnp
pop
mov
fstps
cmp
add
xchg
imul
in
mov
xchg
insb
jecxz
xor
jecxz
sbb
adc
popf
mov
push
dec
mov
and
jne
arpl
repz
or
mov
sahf
fst
add
test
mov
sbb
cmc
xor
lret
mov
dec
pop
push
aad
cmp
clc
add
insl
sarb
inc
adc
inc
sbb
xor
sub
jmp
rorb
dec
in
cmpsb
jae
and
xchg
push
mov
nop
sbb
or
in
hlt
aaa
push
stos
pop
xchg
imul
fxch
and
and
push
int
inc
or
inc
fisttps
jnp
cmp
fsubs
shlb
data16
mov
add
sti
jmp
lcall
movl
push
mov
shrd
je
xchg
jne
arpl
push
out
sbb
xor
imul
cld
sbb
jo
add
lcall
sub
mov
sbbb
in
mov
mov
mov
mov
sub
divl
sub
jne
fs
mov
dec
add
fmuls
dec
adc
inc
pusha
xor
out
mov
pop
sub
out
jecxz
test
dec
mov
cmp
pop
jae
fiadds
fbstp
fsubrl
adc
subb
cmpsb
or
test
ss
mov
loopne
repz
in
mov
adc
dec
in
imul
xor
cmp
dec
loopne
xchg
ret
push
xor
les
xlat
jno
xchg
rcl
mov
xor
lods
orb
and
inc
clc
imul
push
mov
adc
push
je
pop
xor
mov
in
adc
loop
leave
mov
pop
mov
jecxz
mov
fstl
test
jo
aam
lock
fdivrl
outsb
mov
mov
shlb
xchg
std
inc
lods
jge
pop
add
inc
pop
roll
or
test
xchg
into
mov
clc
ljmp
hlt
loope
sub
das
shll
fdivs
cmpsl
jecxz
subb
jbe
das
add
jae
jl
add
int
inc
jp
add
push
and
jo
adc
or
xor
loopne
fcomps
adc
cmp
mov
mov
idivl
data16
lret
dec
arpl
mov
adc
aad
cmp
cli
push
inc
sub
fld
pop
adc
adcl
mov
add
out
iret
stos
clc
sub
cmp
jb
mov
mov
pushf
loop
dec
push
cmp
inc
cmpsb
test
imul
shrl
stos
jle
ss
gs
sbb
test
nop
loopne
pusha
ja
xor
xor
mov
xchg
mov
sahf
adc
adc
js
jbe
jecxz
insb
xlat
add
addr16
addr16
nop
sub
push
sub
and
ss
ror
clc
testl
xchg
fcoml
xlat
sbb
callw
aaa
insl
fs
xlat
pop
ret
or
push
test
mov
sub
cmp
lea
or
add
push
xchg
jle
or
scas
mov
mov
xchg
jb
pop
jle
adc
xchg
outsb
mov
hlt
jno
jne
das
lods
pushf
lahf
xor
sbb
fwait
jmp
pushf
in
andl
les
jbe
dec
mov
mov
mov
test
and
sbb
out
jg
or
dec
mov
xchg
fcoml
sub
mov
push
icebp
aas
jo
stc
jl
pop
lods
into
sar
movsb
lahf
rorb
fldt
cmp
imul
pop
cmp
and
add
and
pusha
dec
adc
rclb
mov
push
xor
out
lods
negb
jb
inc
loop
jge
dec
dec
mov
in
mov
dec
or
sarb
arpl
and
cmp
push
gs
insl
jle
sbb
imul
cmp
stos
jae
pusha
sarb
sar
sub
ljmp
or
add
adc
and
xor
fcmove
adc
mov
std
stos
pusha
lcall
sub
in
test
iret
lods
mov
popf
push
stos
stc
and
fidivrl
clc
loopne
fsts
xchg
xor
mov
popf
aaa
rep
xorl
fs
and
mov
cmpsl
pop
outsl
xor
fdivs
out
shll
sahf
ja
mov
mov
ljmp
mov
add
mov
xchg
aas
jns
je
mov
loope
jg
sub
xchg
lret
add
lods
test
pop
sbb
xchg
pop
cmp
pop
mov
insl
sahf
xchg
sysret
inc
jp
pop
sub
nop
sbb
xlat
cmpb
mov
xchg
aam
mov
lea
and
cltd
mov
cmp
mov
pop
mov
dec
test
out
shlb
mov
cmp
add
in
es
bound
aaa
lret
testb
sub
jno
hlt
and
jb
cs
pop
pusha
adc
sub
add
sbb
out
jle
inc
add
mov
jne
lret
ds
imul
pop
dec
or
in
out
push
dec
loopne
shll
pop
outsb
jl
aad
mov
jp
jmp
or
insb
out
dec
pop
mov
mov
xchg
jb
mov
popf
or
inc
pop
mov
test
repnz
outsl
les
push
movsl
jns
and
dec
je
cmp
mov
inc
int
adc
mov
js
push
aad
push
mov
push
neg
popa
stos
and
out
movsl
mov
push
shll
push
mov
mov
daa
adc
jns
adc
pop
in
mov
lods
leave
fcmovnb
push
xor
mov
add
mov
jp
insl
popf
ffreep
fsubrl
or
sarb
rcl
in
push
adc
add
xchg
mov
notl
xor
add
inc
mov
mov
popa
ljmp
xchg
leave
pop
aam
subl
ret
cld
test
xchg
ljmp
push
inc
mov
in
nop
pop
cmc
hlt
sahf
roll
rcll
decb
repz
xchg
or
negb
loope
mov
mov
test
pop
inc
mov
push
out
mov
scas
xchg
dec
inc
mov
pop
ljmp
cs
and
or
out
mov
imul
int3
jo
jmp
pusha
push
stos
popa
jns
add
ja
mov
outsb
cld
mov
int
mov
xchg
imul
lahf
cld
adc
sbb
cmp
and
inc
and
loop
and
push
out
subl
sub
adc
or
pcmpeqw
scas
xor
mov
dec
adc
andb
lcall
or
sbb
sub
jns
pop
push
lds
icebp
adc
inc
fnstsw
xor
mov
or
cmp
movsb
in
enter
inc
jmp
stos
adc
pusha
ljmp
inc
rolb
xor
out
push
or
sub
outsl
sub
sub
aam
nop
mov
insb
xchg
pop
cmp
or
mov
fimuls
sub
in
add
xor
subb
add
mov
fildll
out
lret
mov
das
sub
in
sar
lods
jns
xchg
pop
add
rcrb
add
pushf
mov
inc
out
out
jmp
lods
jbe
mov
mov
pop
mov
outsl
aam
jge
or
push
out
mov
fdivl
mov
jbe
push
sbb
xor
test
dec
fcompp
or
sub
fidivs
cmp
mov
dec
lret
insb
mov
cmp
xchg
adc
push
push
sbb
fs
sahf
mov
test
push
orb
mov
insl
movb
scas
pop
sbb
les
mov
int3
pop
in
das
inc
leave
scas
int
xchg
xchg
push
add
cmpb
xor
imul
and
clc
jl
xlat
imul
nop
push
cmp
ss
push
aas
xchg
jecxz
stc
xchg
popa
add
jp
addr16
dec
bnd
into
insl
scas
enter
xchg
lret
mov
jb
outsb
inc
bound
or
add
enter
mov
je
and
ficomps
inc
ja
cmovb
ja
fs
add
jecxz
out
in
popl
add
xchg
cmpsl
scas
jg
mov
shrl
rorl
mov
data16
icebp
mov
iret
adc
ficompl
push
imul
adc
jnp
and
or
mov
xchg
int
cmpsb
and
mov
xchg
in
mov
mov
jp
mov
addb
repz
pop
stc
xlat
mov
add
push
xchg
push
or
or
negb
das
lea
mov
pusha
push
mov
cld
cmp
sbb
inc
rorb
ret
pop
lock
repnz
lret
xchg
out
pop
cmp
ds
outsb
adc
dec
push
and
mov
mov
aam
mov
pop
es
xchg
fwait
in
dec
push
pop
jb
pslld
inc
int
loopne
lock
adc
mov
lods
cmp
jb
cmp
pop
inc
or
icebp
fdivl
inc
cmp
pop
das
adc
push
int3
shll
cmp
lods
pop
push
das
lea
cmp
cmp
or
or
ja
into
and
pushf
out
stc
adc
mov
pop
jecxz
out
fwait
hlt
fsubl
and
shrb
ja
or
sbb
enter
insl
addr16
add
cmp
mov
roll
xor
inc
mov
sar
fsubl
jge
rclb
inc
xlat
push
sbb
cs
pop
in
pmullw
fcoml
jmp
in
mov
sbb
xchg
cmovo
mov
mov
or
mov
bound
cmp
shl
insl
sti
sub
ret
test
and
and
xchg
push
adc
push
movsb
imul
pop
lds
ret
mov
and
push
jle
adc
dec
sbb
sbb
xchg
inc
dec
ja
push
mov
or
and
dec
push
pop
cld
cs
shll
jb
enter
aas
aad
xchg
icebp
loop
push
mov
sarl
mov
pop
sbb
xor
addr16
aas
inc
mov
jne
dec
cmp
jnp
sub
pop
xchg
sbb
int
cmpsl
jp
cmp
dec
movsl
pop
arpl
jae,pt
test
xchg
into
jl
push
xchg
out
add
cwtl
roll
test
push
daa
stos
addr16
xor
push
rorb
lret
inc
fs
imul
cmc
negl
into
sbb
andb
ss
aas
adc
testb
std
mov
sub
xchg
sbb
and
mov
dec
xchg
gs
add
jno
shrb
push
scas
mov
cmp
loope
add
mov
inc
mov
lret
xor
and
lds
insb
mov
int3
stc
hlt
xchg
shll
fsubr
pop
jae
testl
mov
iret
lods
sbb
aam
mov
cmp
pop
mov
cli
out
xor
clc
sbb
mov
add
scas
aas
test
cltd
bound
push
adc
pushf
lods
test
sub
sbb
push
ljmp
loopne
sbb
pop
adc
add
mov
scas
mov
or
mov
or
xchg
fwait
insl
sbb
stc
pop
cs
dec
push
xor
push
mov
mov
cmpsl
data16
js
or
cltd
stos
int3
loope
mov
sbb
mov
insl
enter
es
cmp
inc
ret
mov
and
xchg
lea
mov
rcl
fidivl
cmp
pop
fdivs
xor
int3
loop
or
mov
sahf
inc
test
add
movsb
inc
xor
das
push
inc
cli
enter
filds
imul
inc
sbb
adc
sub
jae
mov
push
and
pop
divl
xchg
andl
aas
pop
mov
or
insb
push
imul
mov
jecxz
mov
les
fstpt
cli
jno
jp
insb
movsl
and
lret
addr16
lahf
push
inc
das
xchg
pusha
scas
in
lret
test
ja
stc
sbb
or
jl
sub
jne
test
int
lds
mov
je
pmulhw
mov
addr16
lret
inc
inc
adc
psubsw
cmp
fstps
pop
or
outsb
add
cmpsb
xchg
xchg
or
imul
mov
hlt
sbb
add
adc
xor
jg
jae
push
xchg
mov
sub
cmpsb
jge
jg
call
popa
push
inc
bswap
aaa
mov
enter
outsl
cmp
iret
mov
call
adc
pop
nop
jbe
jno
add
outsb
xor
jne
aad
mov
xor
call
sub
xor
mov
hlt
shlb
dec
inc
xor
xor
test
je
mov
xchg
and
test
loope
or
ficompl
jae
mov
shlb
xacquire
movsb
xchg
jle
fimuls
pop
test
ss
hlt
adc
push
mov
pop
adc
cs
dec
jbe
mov
dec
clts
in
mov
pushf
sbb
jns
ljmp
mov
sbb
mov
data16
inc
pop
mov
and
or
out
sub
cmpb
add
jmp
xchg
rolb
gs
and
iret
xchg
sub
repnz
xor
sub
in
jbe
sbb
leave
fnsave
cmp
jbe
mov
xchg
cld
and
rclb
jg
jns
or
mov
pop
dec
add
sub
daa
or
enter
sub
je
pop
das
fcmovnb
adc
call
enter
and
inc
or
sti
dec
je
cmp
loop
repnz
add
stc
adc
mov
jno
mov
jnp
imul
movsl
mov
rcr
push
adc
aas
pop
repnz
lock
js
jge
idiv
movsb
mov
push
pop
add
jne
pop
jno
idivl
clc
out
xchg
or
push
xor
mov
popf
xchg
pop
fisubrl
adc
mov
and
mov
mov
test
clc
sub
push
cmp
ljmp
mov
sti
int3
loopne
insb
out
mov
mov
out
addr16
stos
pop
xor
xchg
mov
jne
ja
push
hlt
sti
sub
cld
scas
sahf
push
xor
xchg
sub
ret
mov
scas
jecxz
dec
xchg
pop
out
stos
inc
mov
xchg
cmp
adc
cmp
mov
scas
xor
pushfw
into
mov
sahf
add
xchg
mov
adc
mov
lahf
scas
aam
mov
inc
add
lock
dec
out
inc
out
push
fnsave
mov
jne
dec
test
out
ror
adc
dec
mov
lahf
push
cld
pop
and
pusha
adc
fistl
lcall
orl
cmp
aaa
repnz
lcall
mov
iret
mov
pop
sub
add
xor
xor
sub
fsubrl
std
aad
mov
mov
xchg
gs
rol
add
test
pop
pushf
loope
lret
rorl
and
xor
cmp
jnp
out
int
pushf
gs
ret
dec
hlt
inc
or
movsb
dec
mov
xchg
pop
fidivrs
cmp
test
into
pop
fsts
enter
addr16
imul
cmp
push
nop
stos
add
mov
es
xor
xor
ja
insb
mov
rol
mov
cmp
mov
jl
data16
ja
push
pushf
inc
lcall
push
bound
outsb
mov
stos
and
mov
fildl
push
dec
adc
xor
jecxz
orb
es
std
stos
dec
lock
out
js
negb
fildl
cmpsb
jbe
in
push
stos
test
inc
adc
push
lods
stos
pusha
inc
cld
mov
cwtl
incl
inc
mov
adc
mov
push
cmp
dec
imul
outsl
arpl
icebp
cwtl
pop
test
jb
lcall
ljmp
jno
lea
adc
in
xchg
pop
in
addr16
xchg
ds
inc
mov
push
enter
divl
iret
sbb
mov
or
pusha
inc
and
in
push
mov
cmp
test
adc
pop
mov
in
loop
insb
adc
into
mov
test
jb
sarl
stos
mov
sbb
lods
dec
mov
lret
sub
repnz
cld
lret
jae
or
cltd
push
jnp
scas
add
jae
in
pusha
enter
icebp
push
sbb
fnstcw
lods
imull
pop
pop
and
js
enter
sbb
push
andl
in
dec
push
enter
fcoml
mov
mov
or
mov
shrb
sbb
or
lret
dec
sub
out
and
lahf
inc
push
mov
jmp
pop
jbe
xchg
scas
sub
push
jnp,pt
pop
dec
cmp
mov
push
add
les
jo
or
pusha
jge
xchg
js
sub
xchg
jb
outsl
jmp
mov
out
pop
test
rcll
jg
scas
ret
cs
shr
dec
subl
jmp
imulb
sbb
sub
add
add
inc
mov
and
add
mov
mov
lds
xor
add
cltd
enter
jle
pop
imull
jge
jb
push
daa
xchg
sbb
push
out
add
je
jmp
mov
sarb
in
adc
mov
mov
mov
mov
adc
adc
leave
cmp
aaa
jb
mov
test
cwtl
xor
imulb
mov
cwtl
pop
test
out
jge
mov
jecxz
push
inc
shlb
xchg
inc
ja
xcrypt-cfb
cmpsl
and
out
push
jae
fdivrs
cmp
lds
pop
or
orb
sub
stc
xchg
lock
push
cmp
and
push
push
jg
pinsrw
add
iret
lcall
sbb
push
sub
rcrb
ja
cwtl
movsb
mov
je
pop
int
mov
jle
pop
sar
jg
ja
clc
and
jo
flds
inc
movsl
or
pop
and
and
ja
inc
push
mov
push
ret
fs
jbe
sub
dec
or
shll
inc
into
es
hlt
xchg
xor
inc
es
test
rcll
add
sti
js
cmp
rcl
notl
xor
cmpsb
add
jge
sbb
into
mov
aaa
adc
call
dec
jo
or
xchg
pop
arpl
sub
nop
pop
jle
daa
mov
and
in
and
insb
iret
popa
push
and
sub
xorb
stos
insb
mov
pushf
sub
mov
lods
andb
ret
bound
jp
clc
hlt
int3
sbb
push
js
mov
mov
pop
or
hlt
add
lds
pop
xchg
std
rcr
xor
enter
pop
push
push
mov
fdivrs
ret
fsqrt
std
xor
pop
insl
push
add
das
movsl
dec
push
lods
ficoms
mull
out
pxor
or
ss
repnz
scas
mov
dec
test
inc
mov
xchg
sub
loope
push
add
data16
int3
iret
and
xorl
pop
lahf
outsl
in
mov
xchg
hlt
stos
test
lods
shlb
scas
pop
jge
hlt
loop
mov
pop
and
call
hlt
or
in
dec
cmc
dec
movsb
xchg
fwait
xchg
sub
jne
pop
adc
gs
fstp
fdivl
push
push
add
je
fidivrl
insb
gs
dec
pop
push
jle
mov
rcll
sti
je
mov
cmc
inc
mov
arpl
inc
jmp
sti
sub
cmp
shll
aaa
mov
jle
push
inc
divl
jbe
and
pushf
imul
mov
ljmp
daa
cmp
mov
addr16
and
out
inc
sbb
repz
sub
ss
dec
cwtl
imul
ljmp
mov
xlat
xor
pop
lahf
and
jbe
hlt
cmp
or
or
dec
jg
loopne
imul
ja
inc
pop
inc
sub
test
dec
nop
lret
aas
outsl
mov
icebp
gs
out
jo
shll
xor
xor
imul
push
add
sahf
lahf
pinsrw
push
pop
sub
push
push
cmp
and
jno
push
cmpb
mov
or
cmpsb
movsb
out
jo
push
mov
pushf
adc
ret
testl
dec
pusha
mov
push
push
dec
outsb
test
cwtl
cwtl
lods
xchg
lret
bound
int3
stos
icebp
dec
in
test
mov
mov
rclb
inc
lea
dec
cwtl
jl
push
lahf
or
sub
push
add
in
scas
js
loop
lods
mov
xor
sub
lahf
ret
and
pop
push
fxch
les
adc
add
mov
push
aaa
pushf
in
jg
xchg
orl
sbb
shlb
cld
movsl
sbb
or
mov
sbb
mov
movl
mov
mov
push
int
lods
add
xchg
or
sub
loope
ss
mov
lods
xchg
jne
retw
int3
bound
dec
enter
jne
out
lods
jns
call
dec
fsubrs
fnstenv
loop
test
inc
rcrb
mov
jg
adc
pop
fwait
call
ret
into
pop
insl
call
dec
xchg
les
push
fst
lcallw
ss
push
repnz
subl
jno
inc
inc
rclb
cmp
gs
cmpsl
sbb
in
in
cli
sahf
lock
icebp
pop
pop
arpl
in
cmpsb
gs
bound
add
adc
pop
rclb
lock
ret
test
stos
loope
sbb
ss
testl
xlat
or
adc
sub
roll
into
xchg
lret
fsubr
fcomip
cmp
mov
mov
inc
jecxz
lds
pushf
shll
andb
mov
and
imul
mov
or
mov
fisttpll
adc
les
aas
push
sbb
jmp
xchg
xchg
and
outsl
repnz
pusha
stos
js
pop
sbb
imul
stc
cli
loopne
mov
dec
mov
inc
daa
les
and
add
loop
je
mov
sbb
mov
xor
test
fbstp
sbb
int3
cmp
imul
les
sub
pop
sahf
jne
or
std
lcall
pop
dec
lret
cmp
shl
popa
inc
adc
xor
mov
push
fldl
xor
mov
mov
add
mov
and
int
inc
dec
and
fstpt
and
ds
sub
pop
sub
mov
in
add
or
in
push
push
push
jmp
imul
jno
adc
mov
insb
iret
jg
cmp
mov
cmpsb
inc
in
adc
ds
cld
or
jns
jo
push
mov
jp
push
test
mov
outsb
xchg
adc
and
in
or
push
jnp
call
xor
push
or
jle
sub
pop
adc
push
adc
cli
add
jg
sbb
pop
mov
popf
add
jbe
cwtl
or
sahf
xchg
pop
mov
adc
and
pop
enter
lock
aas
xor
push
or
sbb
pop
enter
sub
out
sar
xchg
sbbb
and
pop
xacquire
xor
push
pop
repnz
sub
sbb
add
lcall
test
inc
sbb
clc
xlat
int
sub
lods
mov
cmp
pushf
add
dec
push
and
pop
lea
cmp
je
ret
jae
stos
jo
out
shrb
aad
jns
pop
mov
mov
orb
push
sub
or
xchg
mov
call
call
loopne
sub
in
pop
cld
mov
and
imul
hlt
xlat
pop
scas
cld
popf
sub
lods
or
cli
loope
imul
mov
js
pop
fadd
filds
fwait
js
mov
mov
pop
jge
inc
idivb
mov
pop
mov
xlat
ljmp
push
ljmp
mov
loopne
int
out
or
dec
pop
mov
sbb
lret
insl
aaa
mov
dec
movsb
pop
inc
stos
and
roll
ja
lahf
std
mov
fmuls
mov
push
fiadds
sub
and
mov
les
addr16
sbb
xchg
sbb
pop
fwait
clc
enter
in
sub
xchg
mov
mov
lds
rorb
ds
cmc
dec
push
push
dec
cmp
ds
xchg
std
xchg
je
mov
inc
sahf
out
inc
int3
hlt
inc
and
jmp
lret
lahf
out
xor
outsl
sub
or
daa
pop
mov
sbb
fdivrl
into
test
mov
arpl
jnp
sub
andl
leave
dec
in
lods
mov
pop
sti
inc
aad
jne
es
arpl
and
or
gs
add
lock
popf
cmpsb
sub
lcall
mov
in
lret
sub
dec
pop
or
mov
or
stos
fcoml
dec
mov
das
out
fistps
pop
adc
xor
push
and
jno
test
xor
dec
push
sbb
enter
mov
push
stos
enter
mov
pop
leave
cwtl
popa
mov
xor
sub
push
lret
into
xchg
int3
sub
scas
fs
shll
cmp
mov
jle
xchg
jp
jle
pop
xchg
fxch
mov
in
xchg
jnp
mov
push
in
sub
shll
cmp
mov
mov
and
fs
jg
pop
mov
adc
lcall
cmpsb
aam
sbb
and
mov
mov
add
call
adc
adc
add
xchg
dec
lds
dec
movsb
ja
aas
popa
pop
jl
test
ja
gs
imul
jne
arpl
insb
mov
sub
pushf
test
lea
mov
je
sbb
ficomps
jge
inc
adc
cmp
in
test
shl
or
dec
add
loopne
shll
test
push
idiv
divb
daa
ret
nop
sub
jl
jmp
stos
inc
shlb
mov
pop
out
mov
jae
ficoml
adc
or
cwtl
jp
nop
in
push
dec
push
fstpl
sub
ss
pop
mov
sub
imul
push
add
jae
pop
loop
push
pop
xlat
xor
xor
clc
sub
xor
psubb
sub
fs
fnsave
pop
jmp
cwtl
add
mov
daa
aaa
mul
fstpt
push
push
xchg
mov
inc
test
sub
dec
movsl
ficoml
dec
jae
sub
xchg
mov
push
clc
shlb
pop
cmpsl
mov
arpl
xor
or
popa
popf
xchg
in
loope
insb
sti
push
jae
gs
add
adc
jns
scas
and
shrb
in
and
filds
sbb
push
aas
leave
inc
in
mov
mov
and
or
and
cmc
lods
pop
mov
imul
xlat
push
mov
dec
call
adc
clc
loope
push
xor
pusha
out
pushf
adc
jle
lds
fs
movsl
and
push
mull
cmpsl
push
int
xor
xchg
in
rclb
mov
insl
sbb
sub
mov
bnd
shrb
jne
add
loop
outsb
ljmp
push
adc
mov
or
lcall
push
rcl
add
dec
xor
add
inc
sbb
or
pop
inc
lock
add
andl
mov
ficomps
test
push
push
mulb
je
add
jmp
lds
call
icebp
fwait
das
dec
in
pushf
outsb
xor
jnp
adc
in
add
jg
or
out
inc
je
jecxz
orl
mov
fcmovb
xchg
ret
test
xchg
cltd
sbb
out
xor
mov
cld
rorb
inc
fwait
adc
lcall
es
mov
fstp
fcomp
mov
jmp
and
pop
mov
push
out
adc
into
mov
sub
xor
push
mov
popf
inc
adc
aam
xchg
mov
mov
aad
lcall
add
iret
in
mov
inc
and
lret
ficompl
in
cs
leave
inc
cmc
pop
xor
addr16
int3
add
scas
push
stc
inc
out
adc
arpl
add
dec
xor
push
sub
jp
int
push
enter
mov
xor
dec
cmc
insl
loopne
xchg
test
push
andb
movsl
movsb
mov
orb
push
pop
jmp
cs
insb
push
mov
loope
lods
int3
dec
int3
mov
cmp
or
xor
xor
negb
inc
cmc
mov
mov
dec
xlat
rcr
outsb
test
mov
xchg
js
adc
or
loop
push
sbb
xchg
inc
into
fstl
sub
jnp
push
inc
push
xor
xchg
ret
push
cmp
es
sub
dec
jecxz
cli
push
into
inc
mov
rclb
cmp
int3
cwtl
push
pusha
rorb
pop
ja
sbb
sbb
test
jae
sarl
mov
jno
or
call
arpl
pop
xchg
les
mov
push
rcrb
sub
pusha
test
push
cmp
adc
mov
jbe
add
add
or
mov
sbb
push
fstpt
add
xchg
push
mov
mov
sub
in
call
and
cs
sar
push
jmp
cld
fs
or
out
aad
and
jae
and
inc
inc
adc
in
add
mov
push
sahf
push
mov
les
lods
jle
push
dec
xor
sub
adc
pop
xchg
in
imul
shrl
dec
insl
out
mov
int3
outsl
fsubrl
inc
adc
xor
xchg
aam
adc
inc
fimull
in
hlt
lods
sbb
jmp
ljmp
lds
push
inc
shrl
add
mov
mov
andb
xor
insl
mov
pop
in
jno
jae
xchg
into
lea
test
mov
popa
hlt
sbb
adc
out
pop
or
xchg
or
sbb
dec
lahf
dec
mov
adc
nop
loop
popf
mov
xor
sub
filds
sarb
dec
iret
scas
sub
rolb
push
cmpsb
inc
or
call
shlb
cmp
mov
std
xchg
or
inc
xchg
sub
loope
in
fiadds
xchg
insb
sub
push
mov
aas
and
daa
or
cmpsl
push
mov
dec
stc
cmp
lods
in
cmp
dec
pop
repnz
test
aas
push
adc
xor
jnp
enter
test
cmp
pop
movsl
lret
dec
and
mov
adc
lret
sbb
push
fwait
ss
cmpsl
sarl
xchg
jmp
xor
mov
scas
pop
xchg
xchg
lcall
xchg
mov
dec
pop
jo
dec
xor
sub
cmp
outsl
cwtl
fnop
lds
and
je
adc
inc
pop
pop
testl
clc
mov
xor
pop
sbb
data16
push
mov
mov
push
clc
push
xlat
jle
dec
popf
and
nop
push
inc
scas
push
popa
push
adc
jg
ret
in
mov
std
push
sbb
jne
scas
inc
pop
ds
pop
fldt
cwtl
inc
jae
mov
std
stc
mov
mov
jmp
mov
adc
push
push
andb
dec
xchg
mov
ljmp
add
sub
sbb
das
mov
mov
loop
lret
inc
shlb
push
pop
iret
fwait
std
repz
mov
adc
std
mov
pop
mov
mov
xchg
inc
mov
mov
push
push
jns
push
dec
and
xchg
clc
out
sub
aam
mov
cmpsl
pop
jge
movl
shl
punpckldq
or
pop
lods
mov
inc
dec
jl
in
filds
push
pop
fmull
lret
sbb
in
cmp
scas
aaa
jmp
pop
jbe
adc
mov
repnz
ss
jg
mov
and
sub
fidivrl
dec
add
mov
cmp
ficoms
sbb
in
in
xor
fsubl
add
mov
call
jecxz
lock
jmp
or
in
sbbb
test
pop
rcll
aaa
fwait
ret
push
movsl
pop
lods
inc
lahf
sbb
jb
and
jns
es
pushf
cmp
sub
lahf
stc
lods
cld
or
sbb
and
out
lcall
sbb
push
lods
mov
dec
push
rcrl
stc
mov
mov
out
sbb
fdivs
out
ds
notl
xchg
es
cli
dec
outsl
mov
leave
push
push
cli
xchg
mov
arpl
xchg
adc
cmp
push
jne
mov
xchg
scas
cmp
adcb
cwtl
std
je
subb
xchg
sti
stc
addr16
dec
mov
and
jno
mov
std
or
mov
imul
aaa
add
xor
clc
sub
dec
fdivrp
or
cld
push
shlb
outsb
loop
rol
or
mov
mov
nop
jl
addb
xor
sbb
jmp
ljmp
pop
clc
clc
sahf
push
sarl
incl
pusha
mov
fidivl
push
pop
add
xchg
pop
prefetcht1
mov
xchg
and
adc
clc
popa
add
xor
test
enter
fdiv
fstps
enter
pop
push
cmp
sub
mov
out
xchg
rclb
into
pop
mov
jno
pop
and
and
ret
push
mov
les
push
dec
leave
negl
movsl
imul
je
inc
xchg
xchg
or
addr16
jne
jns
mov
test
mov
std
fnstsw
pusha
pop
adc
mov
hlt
ja
adcl
cmpsl
mov
adc
and
push
in
push
mov
jg
mov
arpl
inc
aaa
cmpsl
jl
push
adc
rol
pop
or
xchg
sub
and
adcb
push
push
push
roll
inc
xchg
mov
sbb
ficoml
mov
call
mov
pop
jne
call
dec
sub
jle
lock
jae
and
jle
mov
xor
or
adcb
cmp
int
negb
inc
imul
xor
push
int3
xchg
xchg
hlt
jecxz
sbb
lcall
and
mov
fsts
out
arpl
scas
add
cld
jo
or
sbb
sbb
arpl
inc
mov
and
mov
sbbb
icebp
mov
cs
add
sub
inc
icebp
cmc
into
jne
jbe
push
inc
outsl
and
mov
int3
push
test
sub
cmpsb
or
icebp
and
add
cli
and
or
pusha
das
ja
pop
inc
sub
mov
cmp
and
sbbl
and
in
loopne
adc
or
mov
rcl
imul
clc
adc
mov
call
leave
mov
out
je
insl
mov
cmp
fisttpll
xor
jmp
repz
mov
enter
iret
cmp
xor
cmpsb
fimuls
jns
popa
call
fwait
movl
subb
jle
insb
subb
sahf
ret
mov
or
std
pop
or
xchg
mov
jb
push
dec
dec
shll
push
jmp
scas
or
add
pop
fbstp
push
fiaddl
adc
add
fists
mov
lock
sub
daa
mov
stos
cwtl
adc
iret
jne
enter
mov
bound
cwtl
add
mul
sub
dec
aaa
xchg
lret
mov
bound
adc
rclb
outsl
push
lods
movsb
mulb
push
cmp
lahf
rcll
leave
or
aad
and
aad
xchg
xchg
push
dec
sbb
sub
lods
sub
test
mov
shlb
mov
loopne
clc
mov
push
outsb
iret
dec
jo
push
lods
fistl
iret
fld
loopne
sbb
icebp
frstor
push
sahf
cli
or
out
add
push
xlat
pop
rcrl
cmp
push
push
addw
popa
push
jne
ficoml
xlat
push
fcoms
pop
push
fwait
pop
gs
add
adc
insb
jl
inc
shrl
mov
cmp
pop
inc
mov
sbb
arpl
sbb
xor
in
pop
mov
pop
push
inc
xchg
aad
sbb
or
adc
ret
add
adc
std
jle
clc
cmpsb
and
push
cmp
jecxz,pt
sub
arpl
imul
lock
mov
cmp
xor
xchg
lret
fidivs
pusha
int3
xchg
sub
shl
outsl
push
dec
mov
shlb
ljmp
and
pop
movsl
jne
aas
mov
xor
push
fcoms
mov
lods
mov
dec
and
negb
jmp
fnstcw
je
enter
inc
mov
cltd
inc
xchg
xor
outsb
or
sub
movsb
and
mov
mov
inc
xchg
fldl
lock
sub
out
sub
jle
aaa
sub
loopne
addr16
cmp
push
sbb
cli
jmp
xor
ret
mov
imul
mov
add
das
bound
push
jno
dec
jecxz
mov
push
push
shl
lock
mov
inc
outsb
repz
pop
sub
repnz
mov
xor
outsb
sub
push
repz
shll
adc
push
js
push
daa
imul
dec
mov
or
test
mov
pop
push
push
hlt
stos
ret
add
mov
or
mov
add
push
test
mov
xchg
cmp
add
ds
and
in
xchg
lcall
cmp
pushf
push
jle
pop
sarb
push
test
xchg
sub
lea
inc
mov
sub
push
lcall
das
pavgb
cmp
inc
int3
mov
xor
stos
sub
xchg
insl
jae
dec
mov
sub
mov
xchg
mov
fsts
push
jno
jl
clc
stc
or
xchg
std
loope
jle,pn
sbb
fldcw
iret
popf
ja
nop
mov
jg
mov
mov
mov
mov
cwtl
cmpsl
inc
jl
mov
push
xor
or
adc
imul
gs
repz
cmpsb
fisttps
jb
lahf
or
and
xor
mov
mov
in
in
and
nop
xchg
jmp
cmc
push
pop
push
mov
fldt
cmp
push
mov
sahf
adc
sub
lea
mov
lret
add
out
fwait
aam
add
arpl
mulb
loope
jl,pn
cmpsb
je
sarl
scas
inc
push
jnp
xchg
outsb
enter
repz
xchg
iret
cwtl
lock
outsb
mov
mov
cmp
sub
dec
out
add
adc
stc
add
data16
adc
xor
jns
jl
insl
or
in
pop
mov
outsb
loopne
sub
negl
pushl
add
cmp
and
jae
movsb
les
lods
imul
sub
xor
aas
je
addr16
add
pop
sbb
xor
xor
pushf
dec
sbb
dec
stos
sub
les
mov
xchg
jmp
pop
cmp
cld
mov
dec
jo
jb
int3
pop
jmp
mov
idivl
jp
jb
add
fcmovnbe
imul
pop
xchg
add
in
lds
jae
push
and
dec
mov
mov
jecxz
jae
fwait
jo
fwait
push
and
es
jl
mov
adc
jo
ja,pt
push
xorl
pop
nop
addr16
mov
cs
mov
dec
ret
or
data16
inc
cmp
iret
adcl
sub
mov
push
cmc
ficompl
fwait
mov
sub
iret
andl
cs
data16
out
ret
push
stc
lods
mov
adc
stos
icebp
push
mov
mov
sbb
int
pusha
add
adc
adc
ret
pop
pop
lds
or
sub
lods
mov
add
sbb
ret
push
je,pn
in
mov
in
ficoms
adc
out
pop
sub
stos
movsb
ds
pop
jb
orb
out
ret
mov
mov
add
in
mov
or
adc
adc
data16
mov
inc
sub
insb
subb
mov
cmp
add
int3
add
jp
fnstcw
mov
mov
inc
or
leave
pusha
cmp
xor
and
je
pop
jmp
pop
add
push
sahf
xor
and
or
decl
xchg
cltd
mov
and
enter
adc
or
jno
xchg
ljmp
jb
enter
icebp
punpckhbw
jae
pop
cmpsb
lret
adc
sbbl
jne
xchg
imul
clc
mov
or
jmp
ret
or
fdivl
add
mov
fldz
xchg
cmp
inc
or
js
xchg
fdivl
adc
adc
sub
aad
sbb
and
pusha
and
xor
and
insb
stc
cmp
aam
jmp
out
fistpll
sub
pop
adc
orl
fisubs
dec
lret
ret
xchg
mov
bound
and
mov
cli
pop
adc
jg
mov
pusha
repz
mov
lods
mov
dec
loop
lea
sbb
sahf
push
jp
or
ss
outsl
mov
clc
jmp
jmp
mov
and
stos
fdivrl
pop
inc
dec
jecxz
mov
fcmovnb
sbb
lods
cli
movsb
pop
inc
pop
mov
aad
addr16
mov
lods
aad
movsl
push
loope
jle
cli
mov
out
cmp
test
push
xor
insl
jbe
cld
mov
enter
inc
push
jae
jb
fldenv
cmp
fadds
inc
adc
ffreep
incb
adc
or
xor
js
cmpsb
dec
out
mov
jae
sbb
or
xchg
arpl
sbb
cli
sub
xor
adc
ds
out
mov
xchg
mov
dec
cmp
push
cld
cmp
scas
xchg
shll
jno
xor
inc
push
ret
xor
sub
fiadds
int
inc
aas
jb
cltd
cmp
mov
push
pusha
ds
das
cmp
in
dec
loop
cs
in
push
jo
into
or
push
and
faddl
sub
add
repz
jmp
xchg
inc
sub
sub
and
adc
lahf
repnz
lret
cs
loop
mov
ret
xchg
cmp
sbb
imul
xchg
dec
jo
mov
test
push
test
and
jae
hlt
repnz
in
push
mov
test
fimull
cmp
pushf
dec
mov
mov
addl
negb
dec
adc
faddl
cmp
jl
aam
xchg
pop
test
cmp
pop
or
inc
int
mov
stc
addr16
jbe
xchg
mov
push
sub
faddp
pop
rorl
repz
mov
in
inc
jb
xchg
dec
dec
cmp
sub
add
test
stc
pop
cs
jbe
mov
mov
sahf
icebp
ret
loop
add
hlt
sbb
sbb
sbb
das
xchg
inc
mov
jae
stos
ljmp
repz
call
lds
mov
fwait
cwtl
cltd
scas
xor
cmp
aaa
jmp
out
flds
mov
movsb
pop
pusha
adc
das
dec
sub
scas
sbb
movsb
dec
scas
mov
int3
push
jl
arpl
lods
out
sub
daa
push
or
xchg
pushf
adc
cmp
mov
jno
mov
ja
int3
jns
call
sbb
test
lret
add
push
mov
scas
pusha
in
xchg
je
pop
int3
jnp
push
push
test
push
jg
dec
push
pusha
fstpt
fisttpll
aad
cmp
aas
add
or
fdivrl
cltd
jge
adc
in
add
imul
lret
ret
in
lods
mov
jnp
aas
pop
mov
mov
inc
jp
fcoml
xlat
gs
inc
cmp
xor
pop
lahf
fcoms
pop
adc
mov
pop
jnp
mov
dec
and
mov
lea
sbb
addr16
icebp
sbb
int3
sbb
and
cmp
lods
out
sub
adc
aad
jl
jb
mov
pop
inc
and
insb
insb
xchg
shrb
push
repz
cli
sub
or
mov
repnz
mov
lock
lret
adc
sub
jl
pop
pop
pop
push
or
scas
xchg
pop
fwait
adc
int3
stos
ss
sub
in
sbb
push
mov
fwait
nop
sbb
lods
insl
dec
cmp
lds
mov
or
inc
inc
pop
xor
mov
push
in
loopne
aad
lock
add
mov
fildll
ss
sbb
cmpsl
sbb
icebp
inc
addr16
dec
cmp
mov
dec
pop
cltd
add
dec
sar
jno
fs
fwait
js
leave
cmp
aaa
filds
dec
std
adc
hlt
mov
icebp
jmp
inc
fwait
sbb
call
push
jle
jne
and
sbb
fyl2x
xor
jns
dec
dec
in
jle
insl
jle
pushf
sbb
nop
sahf
pop
aad
hlt
jge
inc
insb
out
lods
loop
jecxz
xchg
cwtl
orl
scas
mov
mov
mov
or
add
ss
and
and
mov
ds
repnz
xor
aas
cmp
jge
dec
and
arpl
or
aad
mov
les
adc
movsb
notb
xchg
mov
and
mov
pop
jno
pop
imull
lret
mov
inc
push
push
jne
inc
in
pop
push
popf
test
cmpb
dec
fs
loop
adc
scas
xlat
xor
rol
out
jne
daa
xor
push
aad
rorb
aam
popf
in
dec
mov
movsl
pop
scas
stc
or
pop
nop
inc
adc
adc
roll
jg
and
lret
inc
add
dec
adc
sbb
daa
sbb
repnz
xchg
lret
fdivl
inc
ja
lcall
test
cmpsb
dec
mov
rclb
inc
add
push
lock
pushw
test
xor
shr
jno
inc
fisubl
out
cs
aam
push
int
fcoml
pcmpgtw
lods
sub
push
push
push
xchg
mov
mov
cmpsb
pop
pop
gs
scas
in
pop
call
or
jge
lods
xor
xor
cld
jb
xor
fcomps
mov
jle
jle
sub
push
xchg
sub
push
mov
stc
testb
cmpl
shrb
xorl
loop
dec
loopne
sub
jb
sub
sbb
mov
xchg
test
outsb
das
and
decb
sbb
int
test
sbb
inc
fsubr
push
ja
xchg
push
cwtl
pop
clc
movswl
sti
gs
jl
outsl
mov
mov
mov
in
cmp
push
and
pop
mov
repnz
cmpsb
movsb
shrb
cs
xor
xchg
push
dec
in
pop
jg
jle
cli
sub
icebp
shlb
jns
scas
lret
les
sub
jg
orl
imul
push
cmp
js
and
cwtl
cmpsl
mov
ret
repz
xor
dec
mov
aad
outsl
cmp
jg
or
sbb
mov
cli
cwtl
pop
adcl
mov
inc
or
sbb
cmpsl
add
adc
xor
and
imul
sbb
cli
jge
and
sub
and
ds
mov
mov
push
rorl
mov
xor
stos
mov
repz
jecxz
cltd
push
push
mov
fisubl
pop
adc
scas
xor
in
and
inc
mov
mov
les
sbb
mov
lods
xchg
fstl
fwait
enter
out
adc
adc
mov
pusha
cli
xor
js
pusha
mov
daa
xchg
xchg
mov
sub
mov
cli
or
imul
push
xor
int
ljmp
popf
and
or
rorb
push
sub
push
fcomi
cmp
cmp
les
lcall
stc
mov
mov
mov
pusha
das
cli
mov
dec
dec
aam
cmpsb
mov
loope
stos
sti
aas
cmp
dec
or
in
add
lds
push
sub
jo
mov
rcll
cwtl
fidivs
nop
sbb
lea
inc
sub
mov
dec
iret
fimull
out
sti
adc
fcoml
popf
push
popf
mov
push
inc
movsl
lahf
xlat
bound
insb
cmp
jnp
dec
and
xchg
inc
mov
dec
xchg
sbb
loopne
loop
nop
xchg
bound
aaa
mov
xor
dec
sti
mov
push
push
xor
stos
jno
jne
xchg
idiv
ficoms
pop
in
sbb
adc
repnz
popa
push
adc
inc
pushf
mov
loop
xchg
dec
lods
inc
mov
cltd
inc
sbb
and
push
xchg
sub
aaa
push
dec
clc
jge
out
inc
bound
ljmp
test
mov
test
adc
xchg
icebp
xchg
add
jnp
lds
jecxz
in
jb
pop
adc
cmpsb
jb
test
mov
mov
mov
daa
cmp
push
sub
cld
push
sbb
call
inc
fcom
cmp
and
out
xchg
ret
arpl
mov
or
aaa
out
push
sahf
popf
sub
inc
das
pop
out
mov
mov
in
add
test
xchg
outsb
mov
lods
mov
js
stc
aad
pushf
xchg
xor
lahf
add
mov
out
test
daa
sbb
inc
dec
fidivl
pop
cltd
or
mov
insl
pop
dec
inc
aaa
sbb
pop
xlat
lea
lahf
je
fcomi
jb
push
outsl
out
repz
add
mov
mov
push
je
icebp
jge
out
ret
call
push
lret
popa
cmpsb
jne
fildl
loope
push
imul
sub
jge
xchg
jnp
int
and
inc
adc
lahf
dec
das
movb
decl
sbb
adc
jp
push
sub
adc
into
fwait
leave
inc
lods
mov
mov
pop
dec
mov
aam
aaa
mov
sbb
push
dec
or
insl
jno
sbb
clc
inc
xchg
jmp
jbe
imulb
push
cmp
int
push
loope
xor
fdivrl
fldcw
insl
lock
les
add
or
xlat
inc
push
dec
fistpll
testl
pop
sub
pop
mov
les
loop
inc
sub
or
pop
add
shll
fs
cmp
pushf
out
push
sbb
pop
cmp
jbe
bound
mov
xacquire
sahf
mov
push
lds
rorb
test
and
inc
inc
adc
mov
arpl
int3
insl
xor
imul
cli
sahf
xchg
icebp
stos
inc
mov
fwait
daa
dec
add
dec
xorb
gs
and
cmp
mov
jp
popa
adc
mov
inc
ljmp
adc
test
push
dec
out
push
fildll
and
imulb
xchg
pop
mov
adc
in
test
ss
inc
xor
stc
adc
push
les
mov
lds
push
dec
and
cmp
scas
xchg
in
out
adc
xor
and
rcll
sub
pop
rcrb
fs
and
mov
js
sbb
idiv
jnp
fdivl
out
and
out
adc
xor
lea
inc
je
inc
adc
or
sahf
lcall
dec
mov
mov
jb
xchg
inc
shll
add
push
repz
inc
sbb
mov
rcrl
das
fdivrs
and
fnsetpm(287
add
pushf
sub
out
ffreep
mov
mov
imul
test
cmpsb
int
dec
mov
mov
and
lahf
out
push
mov
int3
ja
and
rclb
or
pop
dec
call
add
loop
adc
jns
xchg
popf
mov
dec
pop
cmc
jmp
add
daa
daa
add
mov
push
mov
mov
call
sub
mov
dec
xchg
in
fisubs
fstps
and
or
pop
mov
dec
lods
scas
icebp
ljmp
sahf
jmp
xchg
push
jmp
push
mov
dec
insb
sub
outsb
repnz
adc
sub
cmpsl
insl
out
and
pusha
pop
hlt
shlb
pop
fildl
dec
icebp
fbstp
cmp
sub
sbb
jae
pop
sub
and
jo
add
fcomi
lea
add
enter
mov
xlat
xchg
pusha
mov
dec
stos
sbb
shr
add
inc
fucomip
cmp
les
sub
adc
rcll
mov
push
adc
test
add
stos
addb
add
clc
mov
xor
sbb
adc
js
pop
or
add
pushf
out
test
sbb
xchg
into
into
jp
fdivl
rcll
cmp
sub
sahf
pop
jbe
lods
and
in
xor
pop
push
hlt
cwtl
xchg
inc
jnp
cs
jmp
dec
test
inc
mov
pop
ficomps
push
subb
and
or
xchg
incb
jbe
into
das
jbe
push
hlt
cmp
js
cli
mov
int3
call
ss
sub
addr16
adc
into
fs
hlt
pop
js
into
xor
xchg
add
test
jg
shlb
inc
or
sbb
or
push
out
div
cmp
aaa
add
sti
sub
or
popf
movsl
xor
sbb
lods
orl
cmp
test
jbe
cmp
mov
dec
fisttps
in
lea
lods
aam
mov
lods
pushf
lds
and
insl
jae
push
mov
cmpsl
jbe
sbb
mov
push
aas
call
cmc
pushf
xor
jns
xchg
sbbl
andl
in
mov
loop
and
out
repnz
jae
xchg
xchg
or
pusha
nop
test
sub
mov
sbb
jecxz
cmpsl
xlat
push
jmp
add
adc
movsl
es
not
lret
mov
addr16
dec
xor
push
decl
insl
call
repz
and
jl
test
loop
mov
lods
pop
or
pop
int3
notl
dec
enter
xchg
add
mov
sbb
movsl
xor
jo
push
scas
pusha
xchg
mov
js
hlt
lds
cs
push
call
out
jno
and
test
lret
je
arpl
pop
insb
sub
inc
cmp
mov
movsb
adc
mov
pop
pop
mov
clc
popf
adc
icebp
xor
je
in
xlat
ds
outsl
orb
or
in
call
mov
stos
mov
or
push
scas
and
sbb
mov
fucompp
sub
sahf
pop
sahf
xchg
cmp
or
mov
xchg
mov
push
sbb
hlt
repz
xchg
xor
mov
cwtl
cs
and
pop
pop
mov
inc
push
ljmp
ljmp
mov
cmp
rolb
and
sub
in
mov
in
push
repz
inc
leave
icebp
orl
mov
aas
loop
ja
adc
insb
imul
stos
pop
arpl
push
test
repz
xor
mov
lahf
mov
decl
ss
adc
jno
lds
add
xor
fldl
and
mov
cli
bound
mov
pop
loopne
inc
inc
push
cld
js
mov
leave
pop
jp
jae
inc
mov
repnz
jle
mov
or
lock
add
icebp
lret
lock
mov
test
xchg
fisttpll
jecxz
pop
int
pop
subb
dec
mov
pop
sub
pop
push
imul
push
push
xchg
aad
add
das
and
pop
cmp
add
btr
inc
xor
add
push
mov
shr
mov
xor
dec
jnp
lods
scas
mov
in
movsl
mov
dec
rol
push
pop
add
mov
dec
add
into
jne
xchg
push
xor
dec
out
add
sub
aas
int3
or
lock
outsb
fs
fs
cmp
xchg
sub
lea
in
call
or
aas
mov
sub
mov
pop
in
inc
lahf
lods
lret
and
and
aas
ss
les
movsb
sub
lahf
mov
lds
xchg
inc
outsl
add
pop
dec
push
lods
nop
iret
cmpsl
mov
or
jle
test
xchg
sbb
out
add
lahf
adc
cwtl
mov
rcrb
in
js
xchg
pop
xor
subl
ret
jg
adc
sbb
jb
cwtl
jecxz
xor
xor
push
lods
repnz
sbb
nop/reserved
sbb
movsl
xchg
adc
aaa
rclb
inc
pop
pop
ja
xchg
sti
adc
jb
adc
in
out
push
and
xchg
xchg
in
insb
popf
lea
lea
pop
xchg
xor
test
xchg
mov
mov
jne
pop
xchg
js
outsl
lds
adcl
mov
adc
fcomp
fwait
mov
dec
mov
loop
or
xchg
imul
shr
xor
pop
inc
sub
mov
xchg
popf
stc
fwait
outsb
jle
and
pop
inc
ret
xchg
fmul
imul
cmp
arpl
ds
mov
mov
cltd
push
lds
arpl
pop
rorl
std
xchg
xchg
sbb
fwait
mov
movsl
sub
mov
dec
fs
xchg
mov
movb
jne
xchg
inc
xchg
mull
gs
arpl
movsb
cmp
imul
aas
pop
popa
loopne
mov
sbb
or
data16
out
flds
or
popf
sub
imul
jmp
dec
rcll
mov
mov
push
pop
shlb
jle
enter
xchg
xchg
mov
repnz
mov
daa
push
loop
ljmp
mov
lret
inc
das
lcall
insl
sahf
dec
cwtl
mov
cmpsb
mov
xor
mov
jg
ret
inc
shll
xor
lahf
dec
in
jo
lods
fisttps
jns
pop
rclb
aaa
add
adc
push
cld
jns
cmp
into
mov
popf
jno
mov
icebp
mov
pop
imul
sub
push
clc
jge
mov
fldenv
in
pop
jns
sub
xor
and
cmpsb
loopne
lahf
enter
imul
sahf
fdivrl
movsl
fiaddl
xchg
adc
insb
outsl
jne
cmc
xor
leave
bound
cmp
lcall
mov
jp
push
xchg
in
sbb
mov
dec
sahf
cmc
icebp
fldcw
cmpsl
movsl
lret
aaa
dec
jmp
aaa
rol
jecxz
push
push
cwtl
inc
jl
adc
insb
iret
lret
pop
cld
xlat
adc
ja
sti
sbb
movl
loope
aam
pop
inc
in
jp
sahf
shll
cmp
push
lea
inc
leave
pushf
xchg
les
sti
es
fldt
test
add
pop
pop
outsl
inc
push
insb
adc
sub
mov
sti
imul
xor
jmp
push
movsb
ret
daa
mov
jmp
push
popa
test
mov
loopne
adc
jl
xchg
sbb
bnd
or
pop
push
xor
jo
shll
shll
sub
insl
in
ss
dec
xor
scas
pushl
adc
push
sbb
gs
lret
aad
cwtl
inc
mov
pop
mov
pop
dec
cmp
lock
sbb
mov
sbb
cmp
sub
loopne
pop
femms
lret
mull
inc
cmpsl
imul
mov
add
and
pop
push
mov
dec
jno
popa
int3
pop
test
cmp
pop
xchg
and
mov
pusha
cltd
test
jp
xchg
popf
inc
sti
xlat
lahf
stos
cmp
sbb
test
scas
pop
mov
mov
cmp
gs
fwait
insl
add
pop
xchg
in
repnz
jbe
push
scas
xchg
or
dec
xchg
inc
lock
cmp
and
jbe
cwtl
push
mov
popf
jb
sbb
fdivrp
call
jns
shrb
mov
push
or
sbb
jbe
xor
push
add
push
inc
inc
test
and
pusha
adc
jae
adc
lds
push
testl
add
lret
xchg
push
inc
xchg
xor
jno
sbb
hlt
insb
push
scas
repnz
adc
and
scas
jnp
sti
sbb
add
cmp
sub
push
ja
pop
mov
nop
lret
sub
cmp
sbb
pop
icebp
bnd
outsl
inc
dec
fwait
dec
jmp
ror
xorb
mov
mov
test
sahf
sti
mov
idivb
fbld
and
out
movsl
adc
ljmp
add
addb
sub
fdivr
mov
jmp
mov
pop
iret
jecxz
pushf
nop
fbld
fwait
xor
sti
jge
shr
data16
mov
mov
clc
cmp
ljmp
xor
cltd
dec
xchg
cs
xchg
lcall
xchg
and
aam
mov
cs
xor
sbb
data16
jge
dec
mov
rorl
out
loopne
lahf
add
gs
out
test
and
dec
jb
aas
mov
insb
ss
adc
adc
push
loopne
push
pop
sbb
xchg
mov
aad
sbb
add
mov
jbe
stos
shrl
or
outsl
cwtl
scas
push
rcrb
dec
mov
je
lahf
test
lret
mov
fidivrl
out
aad
and
push
cld
xchg
jg
cmp
ds
nop
mov
ret
iret
movsl
shr
cmpsb
mov
and
fsubl
test
push
in
test
aad
push
mov
or
imul
lret
frstor
stos
mov
lods
pop
jae
cwtl
jae
sub
das
shl
cmc
xchg
and
mov
xchg
lret
in
ljmp
jle
out
xchg
nop
int3
das
cmp
add
xor
mov
outsb
mov
xchg
in
cmp
mov
cmpsl
fbstp
jge
je
popf
or
sub
out
sbb
inc
mov
push
pushaw
lret
mov
inc
cmp
fisttps
xchg
sbb
fistps
jecxz
sysenter
and
adc
mov
mov
add
int3
pop
adc
dec
jecxz
inc
jns
xchg
pushl
and
fstpl
cmpsb
cmp
mov
ja
arpl
fwait
mov
lds
inc
mov
push
xor
imul
pushf
lahf
push
mov
pop
inc
sbb
sub
mov
mov
inc
xor
sub
aad
or
adc
repnz
mov
fbld
stc
mov
push
cmpsb
mov
fsubr
xchg
cmp
jg
outsb
mov
lahf
icebp
sbb
push
call
xor
loope
das
jae
int
and
outsb
adc
dec
movsl
mov
ficoml
ds
add
sbb
out
adc
cmp
out
sub
push
lods
dec
mov
fs
push
or
mov
imul
mov
mov
loopne
jmp
sbb
int
mov
test
es
mov
xchg
mov
dec
or
addr16
outsl
jge
xor
out
mov
das
inc
cli
and
and
push
inc
ss
push
or
sahf
pop
outsb
push
lret
nop
dec
inc
or
and
in
cmp
in
push
jns
les
push
xorl
or
inc
add
xchg
and
add
add
mov
mov
push
push
cvttps2pi
push
dec
add
pop
mov
fistpl
and
inc
dec
addr16
jns
dec
bound
daa
test
add
xlat
insb
cmp
sbb
fldlg2
xchg
loope
xor
ja
sub
clc
repz
pop
dec
popf
pop
sub
lret
jb
mov
xor
lods
imul
sbb
push
cmp
push
jno
aad
mov
xor
xor
scas
imul
lds
jecxz
and
pop
insb
mov
and
aas
push
dec
fmuls
mov
jb
push
shrl
jp
sub
ds
ret
xor
dec
pop
les
into
stos
push
into
outsb
xor
inc
fwait
inc
imull
test
insl
cli
add
int3
inc
push
fisubl
insl
add
sub
popa
sub
add
test
dec
xchg
movsb
ss
mov
dec
jbe
in
mov
and
add
movsb
inc
add
gs
pushf
mov
dec
mov
cmp
filds
push
outsb
repz
cmp
mov
test
sbb
icebp
test
jp
inc
jmp
lods
stos
inc
xchg
jae
sub
xor
mov
pop
cld
lds
outsb
test
mov
push
bound
dec
popa
pop
pop
shl
and
ficomps
stc
fsubrl
shlb
fistps
cmp
scas
mov
mov
repz
mov
lret
hlt
test
mov
mov
movsb
addr16
or
lods
ror
push
lock
repnz
xlat
xchg
sub
dec
movsl
aam
and
lret
iret
inc
adc
adc
sbb
ja
add
inc
out
add
jae
or
out
stc
nop
lock
and
or
or
loop
int3
xchg
mov
cmc
mov
adc
shlb
mov
xchg
fbstp
shll
mov
nop
inc
sub
mov
sahf
or
popf
test
insl
loope
xchg
jecxz
mov
pop
pushf
lods
icebp
add
add
int
lcall
and
pop
cs
dec
in
repz
xchg
leave
test
es
push
mov
ljmp
pusha
stos
out
sbb
and
or
inc
cmpsl
push
in
shlb
loope
movsb
cmp
sbb
fdivl
and
lock
sbb
mov
insl
mov
jae
jns
mov
test
shrl
mov
fisubl
add
std
lret
loop
aas
dec
jnp
and
push
push
jno
xlat
enter
icebp
aaa
stos
xor
mov
outsl
push
or
movswl
lds
jb
pop
and
xchg
mov
out
jns
mov
push
dec
test
push
mov
push
shl
les
xchg
mov
and
sbb
scas
lcall
push
ljmp
cmp
lret
push
dec
pop
pop
dec
or
test
mov
jo
jp
and
sbb
inc
and
inc
and
mov
xchg
imul
mov
and
mov
cmpsl
adc
xchg
or
mov
lcall
mov
aad
ret
cmp
out
and
mov
dec
enter
jge
and
stos
aad
aam
loop
loopne
iret
pop
pop
cmpb
jmp
out
mov
inc
mov
adc
mov
push
aad
jl
frstor
inc
cmp
pop
jne
adc
test
cld
xor
or
jle
scas
into
gs
mov
loop
dec
ffree
jae
dec
je
sahf
inc
adc
pushf
dec
frstor
ret
mov
outsb
pop
cmp
test
mov
add
lods
mov
sub
in
inc
cmp
loope
pop
sbb
jno
and
push
ss
outsl
jmp
fnsave
dec
adc
pop
mov
sahf
mov
lret
imul
int3
int3
adc
mov
out
xor
sbb
testb
out
mov
mulb
adc
fdivrp
mov
mov
imul
loope
push
popa
in
leave
jmp
enter
push
out
cmpl
cmp
dec
daa
hlt
imul
and
pop
push
xchg
imul
sarb
ds
adc
mov
sbb
int
mov
sub
inc
je
adc
cltd
add
pushf
push
sub
pushf
cmpxchg
add
sbb
mov
mov
stos
lea
cmp
fcomps
or
pop
add
mov
or
sbb
dec
xor
fiadds
mov
mov
cmp
js
call
test
aam
lea
sbb
into
jle
mov
js
or
xor
pop
inc
iret
cmp
in
mov
sub
adc
shrl
cmp
lds
into
dec
pop
and
jg
fs
adc
shl
push
shl
dec
mov
mov
out
out
out
leave
data16
dec
mov
in
fisttpll
pop
sub
push
cmp
imul
push
gs
add
test
movsl
xchg
loop
movsb
and
inc
stos
add
out
jbe
push
in
lret
push
fmul
cmp
inc
sbb
je
push
in
inc
mov
jns
loope
cltd
jle
lds
clc
cli
or
dec
dec
jmp
mov
jae
pop
sbbl
mov
clc
mov
cmp
mov
cmp
mov
cwtl
mov
mov
shll
mov
cli
sub
enter
jns
mov
mov
and
inc
sub
and
jae
sub
xchg
insl
mov
aam
jge
push
push
dec
mov
ljmp
pushf
shll
fucomi
mov
and
push
mov
les
jge
pop
add
jne
pop
jae
push
mov
pop
xchg
xor
scas
jb
jecxz
sbb
dec
cmp
push
js
pop
movb
pop
cltd
insl
xchg
in
and
fstps
rcll
adc
movsb
sbb
mov
pushf
andb
and
sub
nop
mov
pop
mov
sbb
inc
jns
xor
into
sub
xchg
inc
sub
cmp
pushf
imul
jge
push
pop
inc
test
std
lods
pop
add
mov
sub
insl
imul
pop
ja
sbb
inc
xor
loopne
sbb
daa
inc
and
or
jl
jae
mov
jmp
mov
int3
aaa
dec
xchg
out
jns
jbe
mov
mov
daa
rcrb
ss
js
jl
shll
xchg
pusha
add
cmp
scas
movl
mov
rcrl
stos
jne
and
repnz
jns
mov
sub
ds
ret
mov
mov
or
pushf
push
mov
sbb
fisubrl
inc
adc
xchg
shrb
xchg
enter
dec
leave
cli
or
test
mov
rcl
mov
xchg
repz
test
insb
rorl
lsl
mov
pop
notb
adc
das
sti
pusha
xor
mov
dec
into
fisubrs
and
sbb
mov
fists
ja
je
xchg
and
mov
jecxz
icebp
pushl
nop
daa
test
or
stc
mov
dec
ret
sbb
jp
pop
xor
sub
icebp
mov
out
clc
cmp
je
ds
aas
mov
sahf
xchg
jo
loope
into
mov
das
pop
add
pushf
inc
inc
in
adc
int
jnp
xor
bound
hlt
push
daa
popf
ficompl
hlt
push
das
popa
xchg
lds
jo
inc
mov
arpl
cli
or
fwait
mov
mov
mov
jne
sbb
mov
jecxz
sarl
enter
sub
lods
int
cmpsl
inc
les
out
mov
or
or
fnsave
popa
xchg
leave
mov
mov
inc
pop
pop
out
push
mov
xchg
scas
sbb
pop
cmp
push
add
push
xor
rcr
jnp
lret
mov
sbb
fs
mov
sbb
inc
cli
mov
shl
add
outsb
and
fs
add
lahf
lcall
pop
inc
cltd
lahf
out
xor
fidivl
in
adc
push
pop
pop
out
imul
inc
xchg
cmpsb
out
aad
add
sbb
inc
jl
jp
xchg
jg
arpl
pop
xchg
clc
out
fs
xchg
popw
jne
push
ret
mov
xor
pop
mov
jns
ret
pop
cmp
pop
dec
and
inc
mov
ja
xor
into
jl
imul
sar
or
addr16
xchg
push
dec
shlb
pop
shlb
inc
fmul
sbbb
mov
out
dec
sub
jecxz
mov
mov
and
adc
iret
xchg
sub
push
xchg
pushl
push
loop
scas
jmp
sbb
cwtl
push
cwtl
mov
or
mov
adc
andb
lods
test
pop
cmp
outsl
dec
or
xchg
dec
cmp
or
nop
cli
jle
jae
sub
xchg
jp
mov
sub
adc
scas
add
sub
pop
aad
add
test
int
xchg
xor
iret
cmp
sub
adc
mov
mov
push
xor
sub
push
adc
js
sbb
shlb
mov
sbb
sbb
xchg
xchg
cs
dec
ret
inc
rcrl
lods
add
adc
xor
loope
adc
andl
push
enter
ret
inc
movsl
orl
js
add
dec
fmuls
clc
ret
jno
push
addr16
dec
or
call
addr16
mov
int3
sbb
cwtl
data16
dec
cmp
fcmovnb
add
out
lods
pop
xchg
add
push
xchg
pop
mov
pop
test
imul
sub
mov
push
jp
mov
xchg
into
ja
push
add
mov
and
xchg
shll
push
imul
or
stos
std
adc
jnp
das
imul
cli
lcall
add
fcoms
mov
lods
addr16
inc
outsb
or
aad
sbb
or
fnsave
jno
pop
addb
loope
pop
push
cmpsl
xor
lods
cmp
ret
xor
add
add
jecxz
mov
xlat
cwtl
stos
lret
sti
sbb
fs
adc
daa
dec
loop
add
test
dec
mov
push
aas
sub
and
sub
adc
mov
sbb
xlat
fbstp
add
popl
inc
push
jae
bound
cmovbe
lea
xchg
dec
mov
aad
mov
sub
or
inc
and
jl
imul
or
push
aaa
ror
bound
mov
add
cmp
xor
inc
mov
or
push
clc
movsb
mov
ljmp
mov
lods
cmpl
dec
xchg
cmc
fstpt
inc
mov
xchg
js
xchg
ret
sub
fmuls
jmp
and
and
xor
cmpsb
test
xchg
or
cmp
push
adc
or
call
insl
mov
cld
mov
lds
rcr
lret
lea
outsb
in
out
sar
ja
jle
mov
arpl
aas
outsl
das
cmpsb
cwtl
je
push
add
inc
mov
scas
decb
push
or
inc
rorb
inc
cmp
cmp
dec
xchg
lea
lock
mov
clc
daa
sub
inc
and
imul
les
lea
push
add
cmp
or
push
dec
popa
mov
xchg
sahf
fs
sahf
lds
in
popf
cmp
js
or
stos
out
lcall
gs
pop
out
mov
or
and
pop
dec
push
mov
mov
inc
test
lea
iret
jb
adc
ljmp
jp
lods
jg
int
jne
and
jmp
jecxz
adc
cmpsb
loopne
insb
pop
inc
add
loope
dec
adc
cmp
lret
or
andl
rolb
lahf
inc
loop
shlb
pushf
ficompl
cmp
gs
jle
push
push
icebp
lock
js
lods
mov
enter
ret
jle
push
jecxz
xor
pushf
sub
roll
mov
xchg
jg
push
aas
out
pusha
dec
movsl
pop
push
jecxz
cmp
insb
mov
inc
mov
and
cmp
or
cmp
xor
sbb
nop
inc
and
xlat
xchg
add
les
mov
jo
pusha
imul
xorb
cmp
insb
push
xchg
push
inc
scas
dec
inc
xor
inc
jne
inc
mov
or
sti
ljmp
scas
jmp
lods
test
dec
mov
arpl
ljmp
cli
imul
mov
add
xor
pop
mov
in
stc
out
ret
push
testb
iret
imul
loop
lds
adc
cmpsb
pop
lret
inc
mov
mov
or
mov
pop
into
push
or
leave
push
cmpsb
sub
aam
imul
ficoml
mov
mov
cmp
pop
leave
xchg
dec
push
cwtl
adc
sub
push
xor
pop
aas
lock
test
pop
imulb
ficompl
jb
inc
xchg
jns
push
fistpl
aaa
cltd
cmp
in
andl
ret
xor
add
lret
cmp
xchg
aam
rorb
mov
lret
mov
sbb
jl
hlt
arpl
addr16
in
xlat
mov
nop
fistps
inc
push
lcall
push
lea
pop
inc
stos
icebp
pop
stos
rorl
lea
adc
push
push
sti
call
or
rorb
cmpsb
imul
in
pop
add
scas
mov
push
or
mov
imul
mov
inc
pop
and
mov
or
pop
and
popa
sbb
sbb
add
jle
cmp
inc
movb
mov
cmp
add
outsb
in
push
adc
into
xchg
sbb
sub
pop
and
rorl
bnd
pop
lock
arpl
xchg
sbb
inc
pop
xchg
mov
jno
ja
bound
push
stos
in
mul
pop
dec
jnp
outsl
insl
xchg
inc
in
cli
dec
pusha
pop
fisubl
mov
pop
lcall
das
inc
mov
imul
aas
loope
push
push
dec
ret
xor
pop
adc
outsl
movsl
mov
shlb
into
ret
push
in
movsl
pop
xchg
pushf
and
jmp
je
int3
sti
loope
and
out
cmp
int3
fists
xchg
mov
jp
test
push
mov
xor
xchg
mov
xchg
xlat
loopne
push
loop
mov
scas
test
jecxz
pop
shrb
mov
push
fbld
aad
ljmp
dec
cmpsb
daa
and
jle
inc
mov
pop
inc
loope
daa
fisubrs
xchg
cmp
cmp
loop
outsl
fimuls
movl
lea
and
xchg
lahf
adc
mov
jb
dec
jl
or
xor
xor
jl
pusha
std
xlat
mov
jmp
scas
std
mov
aaa
mov
ljmp
xchg
repz
movsb
aam
cmp
xchg
mov
sti
loope,pt
rclb
push
outsb
fcompl
adc
fcoms
lret
dec
outsb
push
scas
sub
xlat
push
or
sub
xor
lret
icebp
sti
cmp
sti
push
lods
push
dec
and
flds
pop
pop
mov
cmp
jmp
mov
xchg
or
inc
aam
pushf
stos
xchg
inc
xor
fsub
pop
mov
add
inc
imul
stos
fildl
aam
mov
cmp
jo
outsb
es
jns
push
arpl
cmc
cmp
fmuls
addr16
cmp
pop
out
ret
pop
int
jg
hlt
jge
test
add
lret
or
in
loop
mov
mov
push
sbb
outsb
lock
pop
and
sub
mov
insb
movsl
bound
aad
dec
sbb
adc
shlb
cmp
mov
aaa
fucomp
roll
sbb
dec
dec
jmp
call
stos
stc
sti
leave
out
add
lcall
nop
mov
sub
out
dec
fisubl
aam
cmp
or
shl
inc
push
mov
mov
testb
xor
mov
and
cltd
call
lret
adc
mov
mov
push
pop
jecxz
jecxz
dec
mov
in
bound
cmp
popa
stos
dec
das
jno
mov
adc
sub
orl
les
ret
jg
stc
repnz
sbb
popa
add
dec
daa
mov
mov
or
fsubl
adc
call
ljmp
xchg
sbb
jmp
mov
push
mov
subb
xor
fidivrl
popl
scas
dec
ret
or
mov
adc
je
lods
enter
testb
mov
mov
push
popa
ljmp
push
adc
rcl
and
inc
xchg
stos
mov
pop
lcall
sub
adc
lcall
and
lahf
in
cmp
lahf
addl
push
je
cmp
sbb
xor
mov
inc
out
push
js
push
shlb
rorl
aad
or
push
xchg
shrl
repnz
push
pop
push
add
cmp
adc
imul
je
lds
stc
pop
ret
dec
fcmovu
xchg
lock
stc
xchg
xor
lahf
mov
cmp
lahf
and
cs
mov
insl
pop
cmp
rolb
adc
xchg
mov
xchg
push
test
inc
sbb
xchg
push
xchg
out
mov
scas
sub
adc
lea
test
lea
push
push
movsl
push
xlat
xchg
cmc
mov
xchg
sbb
adc
mov
add
movsl
mov
mov
ret
jge
mov
mul
push
shll
aaa
add
test
inc
into
cmp
aaa
icebp
push
fisubrs
adc
or
mov
cli
inc
int
mov
mov
aaa
lcall
test
xchg
mov
imull
mov
arpl
ret
cmp
pop
mov
mov
mov
and
mov
test
mov
test
pop
mov
xchg
or
movsl
scas
hlt
or
push
pushf
lds
out
mov
out
icebp
iret
retw
xor
pusha
lea
add
cmp
test
xchg
movq
dec
adc
roll
aad
or
mov
fs
in
lahf
pop
decb
or
jnp
ljmp
add
inc
xor
sub
and
loop
iret
imul
fistps
ljmp
and
mov
dec
enter
jae
dec
int3
enter
xor
mov
xlat
rcrl
pop
lock
shrl
shl
add
ljmp
xor
mov
cmc
pop
push
pop
sbb
xor
mov
push
or
movsb
imul
shl
inc
or
add
rorl
test
test
into
shrb
and
xor
xchg
mov
shlb
push
mov
mov
pop
loopne
movsl
dec
dec
and
xchg
cmpsb
test
ljmp
xor
in
mov
rorl
sti
jne
xchg
mov
loope
fistps
lcall
rcrb
loope
adc
aad
ds
jg
test
pushf
xchg
clc
sbb
into
pop
jno
pusha
dec
pop
stos
sbb
enter
idivb
xchg
dec
push
cmpsl
in
dec
icebp
add
mov
scas
lcall
jbe
in
sub
sarb
xchg
ret
mov
push
inc
das
iret
mov
push
xor
sbb
cmpsl
jno
cmp
push
aas
inc
jo
pop
stc
mov
es
mov
xor
mov
mov
or
sub
in
mov
jno
xchg
lods
int
aas
jl
out
adc
xchg
mov
cmp
pushf
push
inc
pop
cmp
xchg
in
and
test
sbb
dec
mov
test
push
push
sub
lods
out
pushf
cmpsl
test
push
pop
pop
leave
lock
lock
and
nop
ret
fcmovnbe
push
mov
repnz
or
mov
or
repz
pop
pop
xor
cmp
inc
out
xchg
or
cmp
clc
ss
divl
lea
cwtl
cwtl
push
stos
lret
aas
push
push
jbe
sub
dec
in
js
mov
mov
cmp
or
sbb
fsubrs
xchg
mov
xchg
push
lret
stos
imul
jle
hlt
sub
out
cmp
ret
cmp
inc
leave
xor
mov
jnp
or
cmpb
xchg
adc
or
ret
dec
fldenv
xor
lock
and
mov
adcl
imul
test
fcmovnb
mov
xchg
lods
cmp
lods
imul
xchg
adc
shll
sbb
repz
dec
in
in
addr16
or
out
std
out
in
mov
jns
jae
xchg
xchg
into
aas
aas
lods
pusha
add
sbb
out
mov
pop
push
jg
cmp
daa
adc
inc
stc
push
lcall
in
std
mov
adc
js
dec
xorl
push
movsb
pop
or
les
inc
mov
add
aad
loopne
mov
stc
adc
xchg
pop
movsl
mov
xlat
mov
rcrl
pop
xchg
sahf
xchg
into
lds
in
pop
imul
jae
xor
sbb
dec
mov
shlb
mov
jnp
xor
ljmp
and
jg
jp
cwtl
push
in
sti
std
inc
aaa
cs
lods
inc
lret
xor
sbb
int3
out
sub
cmp
and
out
adc
stos
je
in
adc
rclb
ret
sub
push
pop
stos
or
out
adc
jl
mov
xchg
ret
inc
jl
test
rorl
mov
int3
cli
cmpsl
and
cmovg
js
paddw
shrl
inc
xor
pop
inc
ljmp
push
cmpl
int
push
xor
xchg
mov
xor
int3
mov
aas
stos
inc
sahf
push
pop
mov
jns
cmpsl
div
jl
pop
jnp
dec
enter
aad
stos
movsl
xchg
cli
roll
jns
insb
lcall
pop
cs
mov
add
insl
dec
bound
cmc
and
jl
enter
inc
jb
shrl
das
sub
mov
stos
xor
sbb
cmp
inc
cltd
adc
aad
out
adc
sbb
test
in
adc
hlt
outsb
push
push
rcll
enter
sub
mov
jecxz
add
adc
les
dec
dec
mov
adcl
sub
mov
mov
ja
xor
test
pop
pop
loope
sbb
jbe
or
mov
jo
pop
fdivr
mov
popa
addr16
out
sub
mov
out
ss
aas
jnp
xchg
call
xchg
pop
jbe
ret
mov
inc
push
and
mov
ret
xchg
pop
stc
xchg
push
jae
ret
mov
dec
stos
stos
aam
fstpl
adc
xor
mov
push
or
les
mov
adcw
punpckhwd
aaa
mov
aad
clc
aad
fisttpl
adc
test
bound
sbb
xchg
frstor
hlt
xchg
sbb
push
lcall
stos
or
lds
mov
imul
jne
cmc
xchg
pop
std
std
pop
push
and
lret
push
pop
jae
sarb
jmp
pop
ret
dec
fdivr
inc
adc
push
adc
and
test
mov
mov
or
jmp
mov
xchg
test
jbe
sbb
in
mov
xchg
rcll
outsb
push
add
das
pop
mov
adc
cmp
repz
and
cld
sub
ficomps
je
mov
sahf
pop
inc
fistl
jg
jmp
adc
aas
scas
jl
fimuls
and
jge
out
arpl
notb
cmpsb
add
mov
lret
jo
loop
push
xor
jbe
inc
mov
dec
and
fcmovnb
sbb
nop
jl
xor
int3
test
test
cs
xor
push
jg
mov
into
mov
cmpsb
mov
aad
sub
push
mov
mov
push
push
mov
jnp
iret
jl
add
mov
jg,pt
adc
mov
mov
out
lcall
pop
jae
xchg
cmc
jns
cmp
inc
mov
testb
mov
jge
and
pop
imul
mov
mov
imul
add
int3
cmp
mov
es
test
lds
pop
add
inc
addr16
jmp
inc
cltd
pop
jae
shlb
or
push
jo
clc
push
cmp
or
inc
idivb
fwait
adc
sbb
and
loope
sbb
es
mov
xor
es
test
inc
aam
rol
test
cltd
or
rcrl
pop
out
add
add
arpl
sbb
std
loope
enter
sbb
lea
and
andl
loopne
repnz
filds
popf
mov
arpl
jle
push
pop
push
enter
mov
mov
jge
out
movsb
lods
in
scas
bound
mov
call
cmp
inc
es
lds
pop
mov
inc
jb
outsb
out
pop
adc
or
fdiv
xchg
or
xchg
imul
test
mov
xlat
es
xchg
data16
inc
daa
jno
sahf
add
dec
leave
push
sub
sub
insb
sti
jno
int3
fisubrl
rcrb
cli
or
adc
lods
sub
sbb
sub
sbb
roll
ss
adc
imul
add
negb
jns
sbb
mov
push
cmp
in
cmc
mov
sti
stc
mov
xor
incb
popf
dec
and
ficomps
lods
imul
mov
inc
sti
adc
lds
scas
jmp
jle
mov
imul
jae
int3
xchg
pop
mov
mov
imul
mov
ud1
add
jl
iret
inc
gs
jecxz
insl
sbb
out
fmul
jns
and
fisttpl
aam
xchg
cmpsb
cmp
pop
outsl
xchg
sti
or
xlat
lods
fldl2e
enter
sub
mov
pop
add
and
xor
mov
mov
or
inc
mov
mov
xor
or
mov
outsb
orl
imul
lods
lock
push
sub
call
mov
mov
add
mov
mov
fadds
pmuludq
dec
aaa
sbb
ja
push
cmp
jl
addr16
push
test
mov
mul
xlat
in
cmp
mov
mov
movsb
mov
int
mov
mov
push
xor
sbb
lods
aam
sub
fsts
sbb
lahf
pop
jp
in
fimuls
cmpsb
ljmp
fcoms
into
jg
aaa
std
mov
push
xlat
out
std
in
inc
outsl
xchg
xor
inc
xor
cmp
daa
nop
jmp
repz
rolb
ret
gs
sub
mov
push
mov
aaa
adcl
mov
xchg
cli
sub
pop
pminub
test
pop
dec
dec
out
adc
gs
inc
sub
call
xor
adc
and
std
mov
incb
jmp
enter
test
mov
dec
testl
lods
cs
lcall
lock
xchg
fdivs
push
xchg
insb
test
fldcw
repnz
or
and
fisttps
jb
cmp
ror
fldpi
mov
loop
mov
xor
push
in
push
xchg
int
lods
jecxz
ja
add
mov
jne
rcll
sub
inc
add
pop
cmp
iret
pop
mov
adc
lahf
push
mov
xchg
dec
mov
add
fdivrs
mov
fdivrs
or
enter
fs
in
push
pop
push
outsb
mov
outsl
sbb
rcll
jbe
push
xor
sub
push
inc
xor
xchg
xchg
pop
mov
xchg
push
rol
or
adc
lret
ljmp
jle
ljmp
jb
rolb
or
cmc
fisubs
push
mov
loopne
adc
adc
out
inc
dec
xor
daa
add
and
pop
and
clc
outsl
mov
xor
jae
fs
adc
mov
or
mov
dec
jnp
inc
testb
xchg
fdivl
popa
adc
push
and
stos
cld
fst
and
cmpsb
mov
lock
pushw
rorl
pop
push
pop
insl
xchg
fisttpl
xchg
and
push
mov
cmpsb
imul
cltd
int3
addb
les
fsubr
or
mov
mov
adc
xchg
pop
dec
in
mov
xor
pop
or
ss
pop
fcmovnb
jns
push
ficoms
mov
pop
sbb
cs
pop
mov
add
mov
lret
stc
adc
stc
dec
sahf
mov
int3
sbb
mov
ljmp
lcall
push
xchg
xchg
push
lds
daa
inc
cmp
lods
inc
pop
xor
fsubrl
fbld
sahf
gs
mov
cmp
je
lods
pop
sti
jmp
jb
mov
or
imul
repnz
stc
and
xchg
rorw
test
imul
and
jmp
orl
push
repz
mov
fdivrs
jecxz
dec
out
fisubl
nop
cmpsl
dec
lods
in
inc
aas
adc
push
pusha
and
jp
and
inc
or
test
inc
rorl
cmp
mov
adc
addr16
inc
mov
sub
fisttpll
testb
xor
js
jae
fldt
inc
push
add
out
sbb
sarl
incl
lods
bnd
aad
mov
insl
pop
bound
sbb
pop
loope
add
int
bound
in
roll
or
ljmp
rcr
push
loope
das
fimuls
enter
arpl
lods
arpl
cmp
les
jg
sub
push
fcmovnbe
and
pop
fwait
and
ds
repnz
jae
adc
push
repnz
jo
insb
out
pop
adc
stos
movsb
clc
and
shlb
cltd
xchg
decl
addb
es
ja
stc
outsb
cli
in
xor
in
xlat
movsb
popa
add
cmpsl
pop
dec
add
add
and
push
and
jecxz
and
popf
loop
ds
fdivrs
mov
js
pop
mov
mov
push
sub
sarb
pop
jle
shr
adc
jae
add
push
sbb
popf
pop
int3
test
mov
lods
inc
inc
icebp
shlb
pusha
repz
mov
jl
xchg
das
add
outsl
dec
push
repz
add
xchg
sub
aam
scas
cmp
mov
lcall
jl
inc
dec
sub
ret
mov
sub
sbb
in
mov
mov
mov
push
cs
pop
cld
sbb
pop
fwait
add
icebp
enter
sub
out
imul
fadds
mov
aaa
std
test
jnp
stos
xchg
in
or
arpl
mov
notb
inc
stos
pop
xchg
adc
jmp
xor
andb
fnsave
pop
xlat
jge
inc
in
insb
inc
xor
ficoml
dec
jae
fldl
dec
js
mov
dec
jecxz
mov
mov
hlt
bound
xchg
pushf
mov
shll
adc
mov
pop
jno
xor
mov
push
or
xor
cmp
sbb
es
in
adc
sbb
sub
ficoms
xor
mov
lods
dec
or
fucom
out
insl
cmpsb
mov
stos
insl
push
notb
adc
mov
shrl
pop
cli
sbb
mov
mov
frstor
popf
and
cwtl
stc
dec
push
mov
int
push
out
shlb
stc
add
and
xor
aaa
fwait
or
sbb
pushf
iret
mov
jecxz
dec
loope
adc
call
or
push
pop
cld
xchg
pop
es
cmp
cmpsb
push
into
sub
pop
xchg
mov
sub
lret
cmp
mov
in
sub
mov
jmp
pop
cmp
pop
mov
dec
mov
stc
or
js
insl
cli
cmc
outsb
xchg
movsb
jmp
mov
shll
stos
mov
pop
cmp
add
sbb
movsbw
mov
std
push
jge
jl
mov
pop
pop
pop
sbb
inc
mov
pop
jg
inc
xor
lds
popf
push
outsb
mov
jne
imul
inc
dec
fwait
mov
int
hlt
xchg
in
mulb
xchg
mov
stos
insl
cmpsl
dec
adc
lahf
jmp
ret
ret
aad
sbbl
jns
sbb
std
cmp
mov
mov
cltd
adc
stos
mov
or
lret
movsb
pop
push
mov
addr16
xor
push
in
pop
add
sbb
stc
xchg
out
nop
in
ljmp
xor
arpl
movsl
aad
jl
jl
and
dec
and
enter
jo
imul
push
bswap
movl
add
notl
add
scas
in
xchg
subl
sarl
cmp
jnp
mov
jns
movsb
adc
enter
push
inc
out
push
pop
dec
sub
jo
adc
sbb
pusha
fisubs
dec
or
adc
mov
dec
jp
xchg
lret
push
dec
cmp
dec
xor
xchg
add
or
xor
xor
aam
icebp
mov
fcmovbe
lahf
out
cltd
test
cmp
lcall
insl
in
mov
inc
mov
add
daa
xor
push
fdivp
xor
addr16
cmpsb
dec
loope
lret
pop
inc
les
mov
jne
movsb
dec
cltd
xchg
scas
and
adc
into
jb
aad
stos
jl
xor
mov
lods
add
sub
mov
in
push
mov
xchg
int
aaa
jmp
repnz
and
fs
test
shr
jmp
imul
rol
xorl
pusha
fcoml
cmp
iret
xor
or
aam
sub
fs
inc
push
mov
add
pop
pop
movsl
jg
fst
jns
push
cmpsb
fcoml
stc
ret
test
mov
sub
fsts
out
hlt
push
dec
xchg
inc
lock
arpl
ret
aam
dec
push
xchg
xchg
pop
pop
ret
nop
not
dec
mov
sub
pop
inc
stc
pop
add
bound
test
mov
and
xlat
stc
dec
add
mov
dec
int
cli
jb
lods
mul
pop
repz
adc
cld
mov
cmpsl
je
inc
rcrb
aam
ret
in
xor
xchg
mov
jecxz
mov
loope
jp
int3
push
cs
icebp
bound
mov
imul
cmpl
pop
push
adc
fmull
adc
aam
repz
mov
cmc
jae
in
mov
pushf
xor
push
fs
int
cli
repnz
mov
cmc
sub
cmp
sbb
push
fnstenv
lea
ljmp
imul
add
popf
adc
cmp
incl
inc
addr16
mov
fwait
push
pop
pop
mov
and
popa
xchg
pop
into
cmc
dec
test
ja
mov
xor
pop
or
js
or
out
or
cmp
sti
imul
mov
push
sbb
jbe
or
sahf
ja
or
movsl
dec
and
lock
dec
cmp
push
fmull
lea
fisubrs
xchg
xchg
or
push
in
in
jae
mov
mov
xor
int3
jno
lea
imul
adc
leave
xchg
xor
mov
mov
out
jne
dec
sbb
ja
aaa
loopne
js
mov
sbb
in
ds
xchg
into
xor
leave
negb
push
dec
mov
cmp
mov
hlt
dec
push
test
nop
testl
lods
fists
jns
mov
imul
mov
into
jp
xor
repz
inc
and
outsb
fsubrl
gs
call
xor
cmc
push
push
cmp
xchg
jno
mov
and
pop
push
pusha
xchg
adc
daa
mov
push
mov
adc
or
scas
lock
ss
fwait
sbb
xlat
fdivs
aas
test
ljmp
test
imul
testb
mov
in
mov
stos
cmpsb
xchg
lret
jl
and
dec
movsb
jmp
mov
fisubrs
xchg
xchg
call
sub
or
cltd
sub
jmp
xor
mov
test
sbb
jne
push
push
mov
test
adcl
xchg
sti
fildl
shl
jo
jnp
pop
and
dec
arpl
xchg
push
pop
pop
stc
popf
aas
dec
jmp
lds
add
fistl
ret
push
adc
sti
xor
lcall
sub
mov
push
push
fistpl
arpl
mov
pop
inc
or
push
jno
test
loope
cmpsb
sbb
dec
test
clc
adc
jbe
inc
ret
add
inc
inc
xor
push
sub
movsl
jns
sbb
icebp
stc
movsb
je
cltd
jmp
lods
rcrb
popa
adc
inc
mov
xchg
xchg
xchg
xchg
fidivl
push
sbb
imul
movsl
in
in
aas
push
es
jge
std
ret
daa
sarl
movsl
jns
scas
ret
mov
cmp
rol
setbe
cltd
imul
dec
xchg
pusha
mov
add
jbe
sbb
inc
mov
mov
mov
pop
test
repz
in
adc
lea
popf
lods
sub
fdivrs
ja
push
movsb
in
mov
or
cwtl
test
loopne
dec
xor
xor
lahf
cmp
mov
pushw
adc
ret
mov
cld
lret
cmp
or
sub
insb
int
mov
nop
adc
mov
pop
cmp
ljmp
out
add
bound
cmp
int3
out
leave
loop
xor
out
fsubs
xchg
or
pop
lea
jne
push
push
push
popf
aaa
mov
stos
push
and
das
sbb
fmulp
add
pop
cmpsl
iret
icebp
repz
into
mov
orb
movsb
test
cmpb
imul
scas
je
mov
mov
cmp
sub
cmp
in
add
inc
add
cwtl
int3
push
stos
sti
inc
js
movsb
dec
arpl
xor
sbb
fs
scas
adc
jne
arpl
mov
mov
lcall
and
pop
mov
lret
mov
imul
lahf
mov
outsb
mov
mov
fwait
pop
xchg
out
outsb
pop
mov
in
fildll
aaa
aad
stc
pop
and
adc
shl
cs
and
xchg
inc
jmp
cltd
jg
clts
add
mov
or
and
jle
sbb
pop
sbb
push
out
out
inc
sbb
sbb
jns
mov
mov
sub
sbb
or
inc
mov
dec
xchg
repnz
adc
push
cmpb
xor
les
lods
pop
adc
fdivrs
add
gs
and
mov
inc
jmp
xchg
repz
sub
or
sbb
fnstsw
in
out
or
rorl
je
insl
orl
shlb
fsubs
sti
xchg
pop
loop
outsb
pop
aad
inc
int3
and
outsb
lods
pop
stos
cli
ja
sbb
xchg
sub
repnz
push
dec
js
imul
xchg
cmp
pop
lret
dec
sarl
xchg
and
mov
cmp
cmpsl
iret
movsl
xor
mov
popf
xchg
daa
mov
outsl
lret
sbb
adc
in
stos
arpl
cltd
fcoms
xor
mov
popa
and
xlat
pop
and
leave
push
push
xchg
pusha
test
xchg
jg
push
pop
sub
fstpl
dec
sbb
stc
push
cmpsl
test
pop
popa
fists
pop
mov
cltd
ret
xor
mov
pushf
ret
push
xchg
push
sub
sub
push
adc
sarl
and
mov
int
mov
sti
jl
jecxz
test
xor
sahf
insb
and
push
pop
adc
cli
into
movsl
aas
dec
adc
out
or
or
loope
push
xor
mov
jbe
mov
sub
jl
sbb
in
push
sbb
mov
cmp
xchg
sub
test
scas
pop
lods
andb
xchg
mov
mov
xorl
cmpsb
xchg
stos
jo
mov
rorb
mov
stc
nop
out
xor
sub
or
mov
es
int3
cs
pop
loopne
in
xor
pop
push
fldln2
cmp
lods
dec
sub
jae
add
cld
xlat
loope
mov
xlat
push
pop
mov
mov
sub
xchg
pop
pop
in
das
jg
aam
cmp
sarl
loop
loope
pop
aam
cli
test
test
mov
sub
and
mov
loope
cmp
cmp
or
push
mov
clc
adc
mov
push
adc
add
fs
out
jne
jb
sub
daa
or
jle
shlb
subb
push
bound
mov
or
sbb
and
pop
push
adc
repz
mull
jecxz
lods
jne
sub
adc
cmp
movsb
dec
data16
test
mov
add
aam
inc
insl
arpl
mov
pop
sub
push
and
mov
and
jno
cmp
fimuls
ljmp
mov
lret
stc
cs
scas
outsl
mov
push
or
das
cs
or
mov
out
imul
sub
aas
dec
insb
lods
sub
pop
mov
test
loope
bound
jnp
sub
pop
ror
xlat
mov
or
sub
in
pop
sahf
jb
in
mov
rcrl
cmp
sti
add
sub
je
and
add
les
cmp
and
hlt
xchg
add
jle
hlt
or
cmpsl
fs
xchg
int
cmpsl
dec
aas
pop
push
cld
subl
scas
push
cli
popf
in
aam
sbb
into
jmp
insb
shlb
aam
out
fldz
in
adc
sub
sbb
xor
and
out
lret
std
cld
out
test
xor
cmpsb
sub
inc
andl
sub
jnp
cltd
and
insl
outsb
mov
sub
jg
or
xor
xchg
rcll
xchg
in
fidivs
mov
sub
popa
outsb
xchg
push
inc
mov
stos
inc
lods
push
cli
xchg
sbb
xchg
sbb
cs
sbb
ret
in
leave
out
cmc
dec
inc
xlat
inc
jmp
leave
call
cli
lcall
insb
sub
cmp
pop
mov
fiadds
mov
enter
dec
adc
and
mov
inc
in
clc
adc
mov
or
and
adc
lahf
enter
mov
sub
out
outsb
ljmp
rcrl
sti
outsl
add
stos
int
stc
adc
lret
jo
scas
pushf
mov
pushf
loopne
and
leave
std
jne
pushf
daa
xchg
sbb
mov
sbb
adc
mov
lea
xchg
insb
add
jae
xchg
pop
push
sub
shll
or
adc
push
mov
jp
shrl
mov
push
scas
push
mov
xchg
scas
stos
out
lock
out
loop
fidivrs
mov
mov
mov
repz
scas
push
lods
push
lahf
inc
mov
add
pop
pop
push
fcoml
jge
push
mov
mov
jmp
jmp
mov
pop
insl
je
hlt
imull
xchg
ljmp
in
add
push
das
dec
mov
mov
jle
lahf
jns
sbb
arpl
sahf
data16
cmc
mov
mov
mov
ret
loop
jbe
dec
in
mov
int3
fisubl
mulb
into
aaa
stos
cmp
inc
push
lods
xor
in
push
jne
xor
mov
dec
and
or
mov
xchg
icebp
push
push
xchg
and
movsb
aad
dec
adc
xor
adc
inc
xchg
adc
lea
mov
cltd
dec
rorb
ja
lods
pop
mov
adc
cli
cli
call
je
sbb
mov
sbb
out
rolb
stos
cmpsl
ss
jl
sbb
movl
pop
dec
aaa
jmp
in
push
xlat
sbbl
sahf
out
fimuls
xor
sbb
adc
cmp
push
in
inc
lret
dec
mov
aad
pop
and
mov
push
cmp
jbe
xor
dec
and
addl
adc
sub
jnp
flds
mov
jl
xlat
mov
add
adc
stos
add
shlb
std
mov
jo
mov
mov
mov
jb
add
test
enter
test
adc
dec
lds
push
leave
and
dec
sub
adc
mov
out
imul
out
add
stos
mov
or
ficompl
imul
mov
sarl
inc
sub
dec
ja
aaa
mov
pusha
dec
add
jns
dec
fxch
stos
xchg
or
shlb
sahf
push
inc
adc
outsb
push
jbe
inc
push
mov
fiadds
mov
test
dec
test
int
int3
imul
insb
cmp
push
out
pop
mov
outsb
lcall
push
fisubl
push
fst
cmp
push
clc
movsl
enter
sub
int
and
and
in
cltd
test
aas
mov
pop
adc
add
add
sti
mov
stos
push
add
mov
jno
dec
fwait
sub
ds
pop
mov
je
xchg
dec
adc
xor
in
sbb
and
cltd
loopne
sti
testl
loopne
cmp
and
inc
fdivs
mov
dec
xchg
lods
jae
inc
cmp
dec
pop
inc
adc
sub
xor
mov
sbb
fs
push
or
fdivrl
add
adc
out
cld
push
mov
pxor
dec
fs
push
aas
mov
popf
xchg
notb
jl
pushf
jns
jae
dec
pop
pop
cwtl
icebp
push
mov
jno
iret
ss
mov
push
ret
lock
icebp
mov
dec
push
cmp
xlat
xchg
jmp
xchg
cmp
xchg
mov
cmp
xchg
repz
jle
insl
rorb
out
out
imull
inc
fwait
jnp,pn
pushf
and
sbb
into
scas
pop
xchg
rcl
mov
shlb
pop
stos
xchg
sahf
xchg
cmc
std
jns
stos
inc
cmp
or
ret
cmp
sub
int
cltd
dec
sbb
bswap
aam
roll
mov
sbb
push
adc
cmpsb
aaa
lret
outsb
pop
ja
movsb
dec
xchg
divl
test
test
loopne
fs
or
push
jnp
push
pusha
cli
add
insl
cmp
aam
push
mov
cwtl
testl
mov
mov
out
shr
adc
rcr
sbbl
xchg
nop
sub
and
sub
lods
cmpsb
mov
inc
pusha
pop
mov
xor
insl
fsts
push
ds
adc
jmp
loopne
fcom
in
cld
cmp
test
test
mov
stos
aam
jo
and
xchg
jnp
xchg
mov
and
jno
popf
dec
shll
fs
push
stc
je
dec
sbb
repnz
fidivs
pop
xchg
or
rclb
pusha
jbe
lret
test
adc
ja
xchg
out
add
push
jg
push
or
pop
mov
mov
cmp
mov
hlt
mov
pusha
dec
out
scas
stc
xchg
shrb
mov
pop
lahf
shll
pop
sbb
fistl
dec
test
jp
and
lods
cmpsb
std
mov
and
int
mov
out
and
stos
cltd
cmp
mov
jmp
xorl
push
sarb
or
xchg
sub
cmp
and
cltd
push
lret
pop
imul
insl
shlb
dec
sbb
cmp
xor
mov
xor
cmp
inc
inc
stc
ret
mov
dec
scas
push
cmp
pop
inc
push
lret
push
mov
ja
cmp
jl
xchg
mulb
test
adc
inc
pop
cs
cli
or
add
dec
push
xor
mov
test
int
mov
test
push
xchg
mov
mov
into
cmp
lret
mov
dec
iret
int
nop
ficomps
adc
cmp
mov
jle
cmp
mov
popf
push
in
movsl
xor
sub
das
dec
adc
rcrl
stos
leave
repnz
mov
dec
orb
push
xchg
sbbl
sahf
sub
les
sub
inc
lcall
loope
cmp
fucomi
add
and
push
enter
js
jae
xchg
mov
push
dec
in
pop
jmp
loope
lods
popa
hlt
shlb
pop
cmpsl
iret
xor
or
pushf
or
and
int3
outsb
fisubl
sub
movsl
mov
mov
in
shlb
ljmp
mov
shrl
pushf
xchg
cmpsb
push
bound
lret
call
mov
sti
mov
movsb
inc
pop
gs
push
xchg
call
rcrb
je
in
sub
jge
ss
add
clc
pusha
mov
decl
add
and
xchg
or
dec
jae
mov
cmp
xchg
cmp
push
jg
lods
mov
popa
add
adc
adc
cmp
mov
sbb
arpl
scas
push
out
dec
repnz
data16
in
pop
iret
hlt
pop
pop
shrb
bound
and
cltd
xchg
push
aas
or
addr16
cltd
addb
in
cli
mov
not
ljmp
rcrb
push
dec
pop
lock
jae
adc
dec
insb
add
sbb
aaa
dec
or
sub
es
mov
mov
dec
lds
lods
push
test
ja
cli
pop
test
add
dec
and
out
cmp
out
movsl
inc
push
enter
aas
mov
add
jo
call
loope
stos
jle
pop
xchg
cwtl
push
mov
ret
fcmovnu
inc
push
lea
jmp
outsb
mov
inc
xchg
mov
jbe
add
pop
xor
cmp
cltd
xchg
jb
dec
lock
mov
inc
pushf
int3
aas
cltd
and
shlb
inc
lock
mov
pop
mov
movsb
or
mov
xchg
mov
inc
sbb
test
into
pop
ja
jmp
incl
xchg
jb
stos
jg
jl
mov
add
dec
jne
cmp
jg
subb
adc
push
test
lret
nop
rcl
sbb
mov
test
nop
jmp
lret
in
xor
fisttpll
dec
sbb
and
dec
jp
cmc
pop
mov
pop
cwtl
jl
or
mov
jne
mov
sarb
xchg
and
mul
sbbb
add
jmp
cmp
fsubrs
sub
repz
mov
notb
mov
and
in
xlat
xor
add
mov
mov
lcall
ret
jmp
orl
push
sarl
sub
jo
test
xchg
arpl
jae
push
mov
dec
mov
sub
icebp
mov
xor
lods
iret
adc
xlat
push
shr
stos
and
pop
lcall
dec
int
adc
mov
cs
movsb
mov
insl
mov
add
xor
and
inc
xor
mov
push
mov
not
fiaddl
decb
jb
pop
xchg
xchg
pop
enter
adc
push
rol
dec
xchg
out
push
mov
imul
lea
xor
cmpsb
into
insl
lock
cmpsb
inc
in
dec
push
popa
mov
ljmp
mov
adc
mov
icebp
icebp
cwtl
and
sti
or
pop
push
popa
lahf
mov
in
push
or
mov
sub
mov
lods
push
inc
repz
inc
sarb
dec
dec
decb
je
das
imulb
aas
fnstenv
adc
add
scas
jae
stos
stos
sbb
pop
lcall
mov
jge
inc
in
mov
pop
add
fbld
push
andl
lock
iret
push
mov
in
mov
roll
jno
xor
stos
aas
movsb
jae
xorb
sub
test
push
pop
jmp
mov
adc
and
xor
lods
rolb
lds
insb
shlb
faddl
fistps
mov
jmp
imul
notb
aas
stos
loop
sahf
mov
inc
lahf
shrb
fldenv
jo
imul
xchg
test
ret
nop
lcall
repnz
into
adcl
lods
repz
pop
sti
sub
je
fnstcw
push
cmp
out
adc
out
mov
mov
dec
ja
stc
cld
sahf
das
push
xor
adc
or
xorl
mov
fs
test
and
mov
push
jle
scas
lcall
lret
jne
jle
mov
xchg
pop
cmp
dec
into
xchg
push
jae
ret
push
shrb
pop
pop
mov
nop
push
adc
cli
dec
mov
divl
js
jp
xor
adc
jecxz
leave
lret
insw
out
scas
ja
das
out
bound
xchg
sub
repnz
mov
push
inc
adc
test
mov
test
testl
je
and
les
ja
xor
repz
fstpl
and
jecxz
icebp
xor
adc
mov
cmpsl
push
sbbb
stc
or
into
jmp
jno
mov
lret
stc
test
adc
lods
lahf
dec
jecxz
add
or
push
jns
pop
inc
sbb
out
jl
jecxz
fcmovnb
xchg
or
scas
dec
mov
insb
cltd
jb
shl
pminsw
mov
fcoml
cld
gs
xor
out
cmp
sbb
in
jecxz
and
test
dec
loope
pop
out
inc
sbb
in
repz
mov
in
rcrl
fmul
aad
fbstp
inc
divl
and
add
mov
jbe
scas
ss
out
mov
fildll
push
ficompl
mov
or
and
or
repnz
mov
icebp
imul
sub
in
shll
jne
jno
pop
lahf
fbstp
fstpt
jmp
rcll
cmpsb
fidivrl
jnp
dec
pushf
jb
fstpl
mov
pop
pop
rcrl
test
mov
jl
clc
rolb
add
cmp
mov
and
xchg
pop
lret
inc
pop
bound
xchg
mov
ss
sbb
inc
xor
sbb
test
jne
jne
std
add
fadds
stc
push
lcall
xchg
push
stos
pop
outsb
inc
sar
hlt
sbb
pop
push
movsl
nop
je
dec
mov
aam
lods
stos
xchg
nop
nop
dec
and
mov
push
xor
sbb
or
dec
add
lds
mov
arpl
nop
add
mov
js
mov
sbb
cmp
sub
adc
and
dec
in
fsub
mov
cmp
mov
outsb
stos
or
xor
dec
cmp
push
xor
pop
rcll
jmp
aaa
mov
out
stos
push
ds
or
cmp
insb
or
enter
inc
adc
xlat
push
jle
cmpsb
repz
ja
push
sub
ret
pop
cld
mov
push
or
or
sub
inc
insb
fcoms
icebp
adc
sbb
pop
sbb
mov
push
or
ficoms
add
inc
jmp
imul
mov
data16
movsl
int3
ret
js
cmp
xor
outsb
jecxz
or
imul
add
and
mov
inc
fs
add
imul
outsb
int3
repz
rol
jo
insb
or
lcall
out
shll
ja
imul
dec
andb
mov
mov
fidivl
subl
les
sbb
into
sahf
int3
or
gs
cli
sti
nop
outsl
test
test
int
fwait
dec
pop
xchg
jno
push
pop
fstpt
pop
push
or
mov
mov
dec
xor
push
loop
sub
dec
pusha
add
add
cs
mov
jae
and
into
aas
push
das
pop
pusha
mov
ss
sub
and
lahf
movsb
pushf
loop
mov
pop
cwtl
dec
inc
xor
xchg
mov
xorb
mov
xchg
sbb
add
cmp
nop
imul
mov
inc
mov
data16
xchg
inc
xor
and
dec
lods
icebp
xchg
imul
loope
out
cmpsl
and
rolb
push
mov
notb
mov
adc
lahf
mov
mov
lcall
mov
inc
iret
mov
or
and
pop
cmp
ret
mov
pushf
mov
pushf
scas
cmpsb
mov
inc
loop
mov
jecxz
cmp
inc
pop
cmp
fwait
xor
push
nop
ljmp
jmp
cmp
fsubs
push
fcomps
xchg
orb
int3
push
dec
arpl
les
push
scas
push
loope
mov
das
ss
adc
adc
push
sub
iret
icebp
sub
cli
fsubs
push
inc
sub
imulb
mov
stc
dec
push
mov
push
push
inc
clc
xor
sarb
pop
sub
ficoml
or
sub
hlt
leave
and
sbb
out
pop
fdivs
or
rcll
lock
mov
adc
rol
hlt
adc
fwait
pop
popf
jne
mov
cwtl
sbb
nop
jp
test
mov
mov
pop
cmpsb
test
lea
ss
fcomps
lahf
bound
insb
enter
icebp
enter
leave
dec
decb
cs
lods
rclb
imul
pop
fisubl
mov
fldl
pusha
xchg
cmp
xor
icebp
int
imul
push
mov
test
jge
mov
lahf
mov
jbe
int3
pushf
xor
inc
sti
movsb
mov
jge
lret
jae
inc
inc
jp
sub
xchg
idivl
adc
or
jmp
dec
icebp
and
dec
ret
in
cmp
adc
sbb
data16
xor
mov
or
sahf
ret
xor
mov
sbb
inc
and
xor
inc
popf
imul
xor
pop
addr16
adc
dec
pusha
mov
mov
cmp
mov
in
adc
mov
outsl
cmpsl
cmp
dec
outsl
outsb
ljmp
xchg
ljmp
lock
push
ss
cmpsb
dec
fnstsw
xor
mov
inc
xor
add
addr16
mov
or
mov
repnz
rolb
cwtl
mov
pop
pop
cmp
jg
sbbb
or
sub
js
inc
sbb
dec
and
inc
jmp
mov
lods
mov
movsb
pushf
add
ffree
xchg
into
sbb
lret
jnp
mov
jno
jo
jge
jp
lea
dec
sub
push
inc
fdivrl
bswap
into
pushf
pop
fisttps
pop
mov
daa
loop
xor
xchg
cmp
mov
or
cmp
mov
xor
mov
pop
add
add
in
sbb
fnstsw
and
cmpsl
aam
sub
rolb
push
aam
jmp
popa
sbb
addl
mov
pop
js
push
and
mov
inc
mov
inc
sbb
sub
rcrb
lcall
push
push
ficomps
in
sub
loop
adc
push
out
lods
scas
or
push
sub
and
sub
fcoml
mov
push
dec
pushf
test
lods
push
in
mov
mov
dec
xchg
jo
pusha
sub
mov
cld
or
cmp
jp
mov
filds
jg
push
adc
mov
jle
movsb
ss
gs
add
lds
data16
cmp
dec
cmp
mov
testl
loope
mov
fidivl
adc
outsl
lods
adc
dec
rcr
mov
fistpl
sbb
lea
mov
fstl
popa
pop
sahf
rcl
fimull
popf
push
or
dec
decl
imul
fwait
mull
das
adc
es
popf
fcomip
test
cs
ljmp
fs
mov
sub
fisttps
stos
inc
sub
fs
mov
push
add
in
rorb
scas
mov
cmc
add
rorl
push
out
ja
push
push
xchg
inc
hlt
fistps
lret
push
lret
xchg
adc
ja
lock
inc
outsb
das
loope
pop
repnz
inc
mov
add
int
lea
mov
jmp
stc
ds
int
lea
fistps
jge
push
adc
sbb
fisubs
and
add
xor
inc
push
mov
xchg
xchg
cltd
pusha
cld
mov
jle
rorb
adc
in
movb
scas
xchg
push
das
pop
fadds
fstp
loopne
bound
and
jns
aaa
popa
sub
pop
jne
iret
insb
inc
push
cmpsb
mov
xchg
fnstcw
psrlw
or
jg
imul
xor
push
sub
push
outsb
jl
stc
xchg
movsl
sbb
mov
lea
lods
inc
out
mov
popa
ljmp
xor
cmp
adc
ljmp
rcrl
test
cltd
pop
and
mov
xlat
and
outsl
xchg
rcl
imul
xchg
repz
int
cmp
dec
mov
pop
and
ja
pop
jl
jp
jmp
outsl
mov
mov
test
std
jg
xchg
mov
mov
mov
sub
add
shrb
out
inc
sbb
lds
dec
arpl
mov
mov
add
adcb
or
dec
movsl
push
or
pop
sbb
xchg
push
adc
test
push
cmpsl
sbb
clc
mov
sub
mov
adc
sub
call
out
jle
sbb
dec
lret
push
pop
inc
sahf
sti
insl
into
test
js
adc
lods
imul
out
add
pop
push
in
shll
rorl
scas
lea
je
cltd
shrl
xchg
xchg
cmpsb
adc
lcall
mov
repnz
jmp
inc
je
outsb
pop
xchg
out
shrb
pop
leave
dec
add
inc
loope
lret
shrb
xchg
jmp
jnp
sub
mov
out
bndstx
mov
arpl
mov
xchg
xor
fcmovnbe
sub
pop
fisubrs
pusha
int3
insl
loop
push
push
in
daa
jns
mov
jmp
shrl
mov
push
sub
jae
jns
sbb
adc
cs
adc
pop
xor
push
in
push
ret
xchg
lods
jno
dec
or
push
ljmp
pop
pop
addr16
cs
pop
dec
out
push
or
fwait
out
lds
pop
xor
dec
subl
fstl
idiv
push
cwtl
xor
or
and
int
imul
add
push
out
sub
clc
add
js
ffreep
push
fidivl
inc
add
arpl
test
aaa
or
out
int
test
imul
into
pop
push
cmp
cwtl
mov
mov
jge
leave
aam
hlt
out
pmullw
movsb
js
or
std
pop
ret
lods
out
aas
cmp
nop
jecxz
addr16
cmp
cld
mov
mov
cmp
shlb
xchg
push
mov
ja
incb
ljmp
fisubrl
call
cmc
xor
jae
add
pop
pop
sbb
sbb
pop
adc
jne
jb
cltd
jmp
andb
pop
arpl
out
cmp
iret
push
clc
mov
push
sub
ret
scas
in
shll
orl
pop
aam
mov
xchg
popf
adc
xchg
lahf
lret
mov
sub
inc
fucomip
jns
call
ja
sbb
cmc
ljmp
mov
adc
outsb
mov
cmp
xchg
xchg
popa
adc
out
pushf
push
call
sub
dec
xor
ss
hlt
stos
cli
addl
pop
lock
jg
test
inc
daa
addr16
in
test
cltd
push
insl
push
add
enter
push
inc
lret
pop
mov
cmpb
push
pop
cmp
adc
adc
std
rclb
pop
mov
adc
call
jns
mov
incl
flds
xlat
inc
cmp
jae
aaa
pop
sahf
lcall
add
int3
xchg
inc
out
pop
pop
std
stos
inc
inc
negl
out
or
and
pop
add
mov
mov
scas
punpckhdq
jbe
mov
jns
sbb
xchg
adc
pusha
mov
jl
ljmp
lock
sub
jle
aas
addr16
cmp
mov
inc
lret
push
sbb
icebp
sub
cmc
push
mov
popa
ret
add
push
push
jns
fstps
adc
outsb
jle
sub
rcrb
and
sbb
and
mov
pushf
jg
mov
sahf
test
pop
aaa
xorl
testb
xchg
xchg
call
popl
dec
jp
fisubs
pop
into
inc
jl
or
xchg
mov
pop
mov
out
push
dec
xbegin
and
mov
add
pop
inc
jecxz
add
xchg
xchg
push
xchg
cmpsl
daa
mov
cmp
add
push
decb
out
mov
test
movl
mov
mov
mov
mov
sub
cli
imul
int3
rol
bound
adc
arpl
adc
mov
cmp
arpl
jbe
lahf
adc
insl
pop
in
or
rcll
xor
sbb
push
cmpsl
mov
fldl
sbb
sarl
pop
xor
scas
sti
hlt
in
movl
test
sbb
mov
and
add
popf
push
sbbb
popa
jns
sti
out
repnz
xlat
mov
fs
mov
xor
and
lods
and
mov
arpl
enter
and
lock
fdivrs
cmpsb
pushf
clc
in
loopne
adc
cmpb
cmp
outsb
xchg
sbb
shll
add
mov
pop
jae
fs
in
loope
lea
add
mov
shlb
lock
push
aas
sub
int
add
fucom
inc
xchg
pop
mov
aaa
xchg
adc
mov
inc
cltd
inc
mov
cmp
sbb
lea
les
push
pop
jae
lret
add
pop
sub
sub
mov
pop
arpl
lcall
xor
jb
xor
arpl
xchg
cmp
scas
movsb
sbbb
mov
jle
mov
xor
jmp
inc
js
addr16
pop
cld
add
icebp
lea
ljmp
out
sbb
jne
mov
popa
mov
je
out
sti
lcall
xchg
xchg
mov
ficoml
fs
push
mov
test
jnp
or
sbb
es
imul
adc
dec
cmp
inc
xchg
subl
insl
icebp
inc
push
or
pushf
inc
fcmovnbe
fidivl
xor
mov
jecxz
xchg
sbb
pop
push
mov
insb
mov
es
fiaddl
mov
cmp
mov
fisubl
repnz
jg
cmp
inc
mov
repz
mov
fisubrs
mov
or
psadbw
push
int
xchg
or
jl
sub
in
jecxz
cmp
jbe
ret
push
xor
lods
fcom
movsb
out
mov
loop
pushf
and
pop
inc
and
or
pop
cmp
notl
add
adc
add
aaa
stos
aam
loop
inc
fildll
ds
xchg
mov
sahf
push
push
mov
mov
mov
imul
jecxz
js
xchg
fstl
mov
mov
mov
or
or
lock
pop
add
or
cmp
and
sahf
dec
iret
pop
push
cmp
in
lret
push
lret
pop
mov
push
sub
mov
test
push
movsl
xor
les
add
push
sahf
sahf
push
mov
popa
mov
lods
mov
test
sub
inc
sbb
mov
push
pop
fnstsw
stc
jno
xchg
sub
mov
xor
push
cmp
sub
test
or
fwait
popa
test
push
push
subl
fiadds
idivl
leave
push
out
add
sbb
xchg
xor
dec
fbld
push
xchg
cmc
test
stc
or
sbb
pushf
cmpl
xchg
inc
xchg
test
test
aaa
inc
push
cmpsb
or
and
adc
movsb
jns
outsb
mov
dec
xchg
mov
cmpsb
push
test
cmpsl
and
orl
and
mov
mulps
inc
repnz
lret
je
mov
xchg
mov
add
mov
data16
push
mov
movsb
jmp
xlat
cmp
sub
mov
aas
cmpsb
gs
xor
inc
xchg
cmp
enter
add
mov
mov
lds
and
inc
push
sub
inc
cmp
mov
xchg
mov
stc
mov
nop
jno
jl
pop
loop
sar
inc
in
adc
xor
sbb
shr
xor
pusha
nop
rcll
mov
sbb
incl
sbb
pop
stos
or
or
mov
sub
in
insb
loopne
mov
pop
mov
or
mov
dec
fsubrs
cmc
mov
mov
shl
loopne
stos
jg
add
addb
lea
je
fsubl
stc
mov
mov
insl
adc
js
js
lcall
lahf
shll
sbb
push
xchg
daa
xor
out
movsl
cmp
push
jnp
loope
out
fcoms
xlat
mov
cmp
xchg
and
dec
gs
scas
popa
ljmp
or
mov
out
sbb
into
rcrb
push
mov
push
add
jbe
push
mov
or
idivl
or
mov
mov
mov
push
jp
xor
mov
jno
bound
mov
aas
out
xchg
insb
add
pop
cs
lahf
fidivrs
in
sbb
fidivs
xor
xchg
xchg
in
mov
pop
jecxz
setae
shr
stos
adc
aad
push
mov
xchg
shr
and
mov
fstps
lods
movsl
jae
jecxz
xchg
call
pop
orl
stos
and
movsl
xchg
inc
mov
out
xor
scas
cmc
fsubrs
arpl
into
sbb
sub
sbb
mov
and
jo
addr16
xchg
xchg
sbb
adc
mov
cli
ja
xor
mul
mov
call
pop
jle
and
cmpsb
add
sub
rcl
sub
stos
cmpsl
mov
lret
jae
lock
pop
ss
ljmp
movsb
sub
pusha
mov
cmp
mov
push
inc
pop
lret
xor
mov
xlat
and
xor
adc
xorb
cmpsl
insb
leave
mov
out
stc
frstor
lcall
add
icebp
mov
js
add
push
dec
xchg
bound
dec
je
xchg
jmp
mov
jle
adc
into
cmp
mov
and
inc
cmc
lret
in
fnstcw
fldt
pop
mov
and
mov
iret
and
shll
dec
test
mov
inc
insb
cmc
lods
xchg
das
ret
es
sbb
cmp
ret
scas
into
stc
hlt
scas
mov
jge
or
sahf
add
push
push
lods
aaa
es
popf
fxch
pop
fwait
mov
pop
test
adc
sbb
sbb
and
xor
jae
pop
imul
not
not
sahf
popf
xorl
mov
and
pusha
jns
out
pop
add
mov
es
sub
and
sub
movl
jns
jg
sub
xchg
sti
ljmp
test
jge
pushf
in
fnstenv
icebp
xchg
insl
aas
and
inc
cld
addl
mov
addr16
pop
push
mov
mov
test
push
je
test
orb
push
push
mov
xor
dec
test
sub
lds
imul
pop
mov
or
dec
inc
das
or
cld
out
push
add
or
add
aam
cmp
sbb
push
mov
mov
mov
addb
dec
push
pop
xor
inc
jp
lods
jnp
orl
in
fs
fstps
clc
bound
test
cmp
and
cmpsb
ret
sbb
lret
dec
mov
adc
or
pop
push
mov
imul
push
push
ficoms
adc
sub
pop
adcl
cmp
fdivrs
push
push
jecxz,pn
std
pop
add
pop
fmuls
dec
sub
push
lods
loope
mov
push
jb
test
movsb
clc
loop
inc
mov
aaa
mov
jle
sarl
imul
cmpsl
subb
jecxz
gs
push
mov
ret
leave
xor
mov
in
shrb
outsb
cs
push
inc
push
aaa
xchg
test
bound
out
aam
add
jo
daa
mov
int3
cmp
jle
enter
cmp
insl
lea
jne
mov
stos
xbegin
ret
mov
push
aas
adc
lods
cmc
std
add
pusha
xor
testl
fs
sbb
mov
mov
dec
xor
sub
mov
mov
xchg
mov
sub
or
add
mov
arpl
jne
in
push
ja
stos
cmp
add
popa
pop
cli
imul
xor
dec
mov
xor
pop
je
pop
or
sarl
dec
das
sbb
ss
push
mov
stos
lea
add
jle
jbe
xor
xchg
out
idivb
imul
addb
negb
push
ds
sub
adc
mov
sbb
scas
cld
sub
pop
mov
dec
cmp
push
out
testb
xor
lcall
call
and
jecxz
imul
adc
mov
rorl
push
xchg
rorl
fcomi
lret
xchg
pusha
shufps
push
push
xor
cld
xor
sub
mov
lret
outsl
add
lock
mov
and
xchg
add
push
icebp
and
adc
pushf
sbb
mov
mov
lahf
or
jmp
outsl
adc
leave
movsb
mov
add
and
adcl
mov
xor
inc
test
lcall
jl
pop
jno
add
fstpl
mov
jecxz
imul
cltd
cmp
in
sbb
imul
push
fiadds
mov
fs
jb
popf
rcll
mov
cmp
inc
es
pop
cmpsb
fwait
les
mov
ret
fucomi
rcrl
lock
adc
movsl
xchg
movsl
shll
cmp
push
xchg
icebp
cmp
addr16
add
mov
adc
stc
inc
fcompl
sub
push
inc
pusha
js
xchg
in
or
rcll
pusha
in
mov
repnz
scas
dec
aas
icebp
test
repnz
andb
ret
inc
push
cmpsb
aaa
bound
sub
xor
push
adc
es
xchg
ror
mov
adc
into
out
outsl
pop
sub
or
push
aam
adc
sbb
fisubrl
je
mov
loope
mov
notl
jns
into
dec
mov
xor
push
mov
and
adc
xchg
mov
mov
insl
or
xorb
xchg
add
nop
outsl
push
enter
js
cs
xchg
jl
inc
dec
or
movsl
es
lds
jno
rcll
or
cmp
pop
push
inc
xchg
icebp
mov
xchg
rcll
jmp
sbb
in
jl
fimull
jo
sbb
loope
fcoms
mov
sub
adc
push
xchg
sarb
popa
mov
leave
sbb
out
icebp
lods
ja
push
mov
out
pop
mov
roll
in
pop
cltd
jge
test
xor
js
sbb
mov
inc
test
ret
and
test
jmp
call
jne
sub
pushf
pop
dec
lcall
std
das
jl
pushf
stos
cwtl
in
xchg
sbb
dec
xchg
in
sbb
sbb
sub
sbb
xor
jmp
fwait
icebp
xchg
xchg
pop
mov
imul
gs
int
std
shrl
push
sbb
or
ja
pop
hlt
sahf
push
dec
stos
jle
dec
pop
fcmove
xchg
out
mov
nop
jp
mov
ss
sbb
int
sbbb
sub
repnz
imull
cmp
mov
mov
lock
outsb
ds
mov
mov
bound
push
mov
cmpsl
pop
adc
and
hlt
aas
sub
stos
nop
in
ss
dec
fs
pop
test
xor
mov
movsb
or
xlat
rcll
sbb
test
cltd
pop
scas
nop
mov
popa
aas
call
dec
push
xchg
cmp
lahf
and
js
push
inc
dec
idivb
push
imul
cmc
adc
pop
push
adc
and
lcall
jo
es
jns
adc
adc
testb
mov
add
mov
push
pop
sahf
rcll
movsl
jne
test
add
jge
repnz
movzwl
mov
xor
imul
scas
push
ret
cmc
add
loope
jbe
aad
jp
push
and
les
sti
lods
inc
mov
mov
mov
cli
movsl
and
into
mov
cmp
les
aam
je
ja
rcrl
mov
loopne
js
fcom
leave
mov
sbb
lds
std
je
mov
push
and
pop
popf
mov
xor
mov
dec
cld
cmpsb
dec
data16
or
dec
rcr
or
push
fldenv
loope
dec
cmpsl
int3
and
in
lds
ficoms
push
adc
test
out
imul
pop
lods
psraw
push
aam
dec
mov
iret
pop
js
insb
jl
lea
mov
pop
push
enter
loopne
push
jnp
das
xlat
lods
mov
ja
sbb
cmp
icebp
pop
lock
das
mov
repz
mov
pop
enter
xchg
ds
push
jle
popa
jae
xorb
outsb
jo
cmpsb
int
and
mov
nop
or
push
pusha
adc
ds
test
rolb
lea
or
iret
aad
sbbl
and
rclb
ja
push
adc
pushf
add
pop
mov
cmp
test
cmp
jl
lods
sbb
lods
cmovno
jecxz
gs
sbbl
push
stos
cmp
sbb
xchg
ja
adc
mov
out
cwtl
xchg
xchg
inc
cmp
jno
jae
or
out
sbb
or
cltd
orb
outsb
aaa
std
scas
xor
stos
and
inc
sub
xor
pop
add
scas
ret
movsl
daa
jp
push
out
popa
mov
popf
push
test
out
adc
stc
inc
pop
shll
insb
mov
stos
xchg
mov
test
ret
testb
rcrl
dec
es
inc
cmpb
outsl
lahf
ja
or
cmc
aad
enter
xor
sbb
jae
xchg
push
xor
stc
arpl
inc
fwait
out
rcll
mov
fidivl
ficoml
cmp
fistps
push
jne
sahf
in
mov
ret
pusha
hlt
stos
push
pushf
jno
and
cmc
fcmovbe
xchg
lahf
mov
leave
pusha
push
mov
pushf
hlt
jg
data16
adc
push
shl
xchg
pusha
push
lods
mov
lret
jmp
adc
iret
cmp
dec
rclb
mov
sub
jmp
aad
mov
xchg
dec
mov
xor
sbb
and
rcll
test
mov
push
outsb
sub
xor
xchg
mov
std
pop
and
and
cmp
movsb
adc
repz
lcall
rorl
jmp
flds
imul
cmp
movsb
mov
and
lods
testl
push
inc
mul
loopne
or
inc
sbb
xchg
rcll
pop
stos
mov
loope
cmp
hlt
lods
stc
jmp
add
and
mov
and
inc
sbb
mov
out
repz
cmpb
in
and
aad
and
imul
mov
pop
dec
adc
sbb
push
mov
mov
push
test
inc
mov
push
in
jbe
fisubl
rorb
and
rcrl
jb
and
aad
cmpsl
lods
and
mov
in
call
std
rcrl
inc
imul
sbb
stos
cwtl
mov
adc
lds
pop
sbb
jg
mov
mov
push
into
rorb
cmpsl
jo
adc
lods
jge
add
adc
pop
ficompl
aas
push
mov
in
rolb
fnstsw
cmc
mov
ds
push
mov
sub
into
cld
into
jge
popa
sub
out
imull
jne
das
dec
add
int3
mov
lock
outsl
punpcklwd
and
cmp
sub
out
mov
lds
insb
xor
in
je
fmul
pop
mov
ficompl
mov
mov
fcoml
mov
inc
sbb
dec
xchg
scas
mov
int
insb
push
cmp
test
lods
push
inc
inc
pop
das
sbb
xor
inc
mov
mov
xor
sbb
sub
inc
sbb
jno
jo
inc
mov
sub
fadds
rorb
xorl
outsb
pop
mov
adc
adc
jns
pop
sub
sahf
sbbl
fldenv
xchg
jmp
ret
dec
mov
ret
pop
xchg
xlat
adc
jge
and
mov
add
cs
out
dec
fsub
test
xchg
xchg
push
adc
insl
xchg
and
mov
ja
in
xchg
add
out
into
inc
mov
cmp
xchg
sbb
lods
mov
sbb
fsub
xchg
mov
mov
pop
lds
mov
popl
addr16
mov
dec
push
jne
xchg
stos
mov
jnp
movsl
std
insb
cmpsb
mov
sbb
cs
push
push
xchg
psadbw
and
mov
clc
or
repz
push
nop
cmpsb
into
sub
sahf
pop
adc
inc
mov
and
and
gs
sub
orb
test
cwtl
movsb
dec
dec
icebp
mov
call
jmp
mov
xacquire
mov
jecxz
jmp
mov
inc
xchg
sbb
push
fcomps
cltd
pop
lods
das
mov
es
sbb
dec
push
insb
push
jge
adc
jnp
sbb
jbe
js
addb
jo
inc
fdivp
insl
push
mov
movl
dec
mov
cld
jnp
add
and
sarl
mov
imul
icebp
clc
scas
sbb
pusha
in
and
aaa
int
push
xchg
pop
loope
pop
jb
mov
jae
xchg
in
mov
in
xchg
leave
dec
dec
push
jbe
dec
xchg
push
jbe
cs
pushf
inc
shlb
mov
leave
and
pop
push
jo
arpl
add
leave
lock
or
cli
dec
scas
or
adc
arpl
or
roll
loopne
ficoml
mov
pop
sahf
sub
xchg
push
in
int
sti
add
fadd
jge
jne
out
xor
fwait
lods
call
sahf
xor
je
mov
popf
jbe
xor
scas
xchg
cmc
push
dec
jecxz
jnp
clc
ss
call
mov
mov
jae
xchg
push
lods
dec
push
outsb
inc
outsl
bound
jge
mov
icebp
or
push
mov
pop
cli
outsb
jle
xchg
add
call
push
int
inc
sbb
or
fistpl
adc
rol
and
add
in
or
cmpsl
sarb
lock
sub
lret
xchg
fwait
push
arpl
push
sbb
push
dec
lcall
cmp
pop
fldenv
sbb
mov
cld
loope
lds
je
cli
andb
adc
rorl
sub
xchg
dec
mov
movsb
push
jecxz
xlat
shl
std
mov
pop
cmp
rcrb
sub
mov
mov
xchg
ss
mov
mov
xchg
mov
sbb
lcall
lret
idivl
sahf
cmp
sub
and
push
xorb
mov
sbb
push
mov
iret
cmp
test
or
shl
cmp
mov
sbb
or
push
push
xor
jle
pop
fldt
test
ficomps
lret
add
pop
inc
add
mov
dec
mov
pop
aad
fwait
mov
push
mov
outsl
je
and
ficoml
mov
insb
and
in
scas
jg
inc
cmp
insb
jecxz
push
insb
inc
out
add
dec
aaa
insb
enter
add
mov
jbe
loopne
jno
pop
cwtl
sti
cs
bound
jge
cmp
out
or
adc
add
mov
jl
jmp
xor
int
subb
inc
fisubs
test
dec
in
fstl
and
and
fwait
push
dec
stc
mov
push
fucomp
outsl
lods
or
jle
faddl
rolb
pop
cwtl
ficomps
dec
jae
jle
js
shll
cmp
mov
dec
ljmp
push
sbb
mov
adc
mov
mov
cmp
ja
loop
dec
nop
leave
sub
adc
pusha
jmp
es
dec
scas
cwtl
rolb
jmp
int3
xlat
mov
enter
movsb
xchg
lret
out
dec
jbe
movsl
es
lock
and
std
out
cmc
mov
clc
test
int
repnz
pop
mov
pop
cmpsb
pop
or
cmp
push
sub
push
rcrl
pop
stos
dec
lods
iret
leave
inc
rorb
cmc
rclb
sbb
pop
incl
decl
hlt
add
lods
push
jp
sub
sar
sarl
leave
mov
jae
xchg
pop
fs
stc
add
mov
inc
ret
pop
cltd
or
and
lret
or
jg
addl
sbb
orb
adc
leave
fwait
or
jge
inc
cmpsl
pushf
lods
in
stos
cwtl
in
dec
iret
inc
aas
push
jns
fsubl
mov
repz
stos
mov
xchg
mov
mov
es
subb
aad
int
les
ficomps
sbb
push
sbb
and
ds
mov
cld
xor
out
test
xor
js
inc
mov
repnz
add
mov
subl
shr
and
and
or
sub
mov
and
lgs
int
inc
repz
out
pushf
or
sbb
add
stos
cld
daa
leave
test
lods
sbb
and
mov
adc
push
outsb
or
das
dec
pusha
out
nop
rcr
arpl
xor
cmp
gs
test
push
ss
and
daa
cmp
paddusw
mov
mov
adcb
outsl
cli
enter
inc
cli
popf
mov
pop
cmpsb
jl
aaa
aad
inc
adc
lock
push
scas
adc
dec
mov
xor
push
stos
popf
jb
jo
mov
test
pop
inc
cmp
xchg
xchg
inc
lods
pop
sbb
test
ret
jne
mov
popa
repnz
pop
mov
subb
les
jb
push
or
lock
jecxz
jp
adc
testl
in
cmp
mov
add
fcmovu
adc
push
sbb
xchg
lods
xchg
in
pop
push
rcrb
cmp
mov
fcompp
pop
shrb
cmpsb
lods
dec
and
iret
ret
xchg
fidivrl
mov
xlat
mov
xchg
push
add
movsl
fnstenv
ficoms
divb
inc
sbb
nop
push
mov
cmpsb
in
mov
jnp
das
hlt
mov
sbb
js
inc
or
xchg
stos
arpl
xchg
mov
jno
push
rolb
dec
jo
iret
icebp
add
sub
pusha
mov
jecxz
aam
mov
scas
xchg
mov
mov
movsb
fnstenv
stc
lea
sbbl
fistps
mov
xchg
push
dec
dec
loopne
or
cld
shlb
ret
add
test
dec
in
shll
js
sbb
xchg
data16
scas
hlt
lea
mov
jecxz
xchg
cs
mov
in
fmull
loop
push
jns
inc
pop
adc
test
xor
fisttps
inc
ret
mov
sub
ret
lret
push
hlt
or
and
outsl
jbe
push
xchg
lahf
pushf
mov
nop
push
sbb
int
push
push
mov
pop
pop
inc
jns
data16
pop
pop
decb
push
cltd
int
int
sub
pusha
stc
out
insb
cld
call
xchg
jge
mov
out
addr16
dec
xor
icebp
ss
inc
jns
insl
pusha
push
stos
adc
mov
popl
divb
loope
mov
pop
push
xchg
inc
xor
pop
mov
mov
mov
arpl
ficompl
pop
xchg
scas
add
xlat
add
mov
inc
lods
out
xchg
xchg
xchg
aam
dec
cld
add
cmp
jnp
roll
add
fsubp
stos
sbb
dec
scas
roll
dec
call
add
push
popa
push
js
xchg
mov
dec
les
xchg
sub
ja
jmp
lods
jae
out
jle
push
add
int3
jmp
xrelease
xchg
jae
rcrb
push
popf
push
repnz
imulb
dec
or
xor
xor
daa
mov
mov
mov
lods
sub
lods
xor
mov
adc
ret
sarb
pusha
movsb
mov
popf
call
test
jge
push
rclb
mov
and
mov
mov
sub
scas
sahf
es
fists
dec
jo
daa
hlt
incl
xor
sub
daa
lods
into
dec
test
inc
and
int
jb
jp
xlat
pop
int
test
sub
cmpsl
cltd
aas
mov
adc
je
mov
out
push
jnp
sbb
xchg
cmp
sub
push
sti
mov
pop
jne
inc
sahf
shrl
rclb
das
jle
inc
and
addl
and
push
jp
jge
jmp
stos
rcrb
jns
adc
scas
mov
jbe
lret
mov
test
sub
popf
loopne
sub
cltd
jae
mov
stos
pushf
test
mov
inc
sbb
cmpsl
mov
pop
dec
imul
popa
ljmp
pop
rolb
add
das
nop
int3
or
mov
ja
les
lret
mov
out
mov
stos
stos
mov
or
fsub
pusha
jg
or
pop
dec
sub
xchg
and
sbb
pop
call
pop
ud0
sbb
mov
pop
jae
loope
inc
mov
mov
pop
stos
cmp
fs
xor
add
lds
lds
sti
lcall
dec
dec
ss
aad
fsub
inc
pop
pop
inc
jae
lods
xchg
aaa
sub
pop
sub
inc
jle
xchg
stos
fists
sub
xor
repz
push
mov
cltd
lahf
scas
sbb
outsb
push
aad
lcall
lcall
or
jae
jmp
pop
and
in
pop
cs
and
push
shll
mov
jne
aaa
add
and
aaa
xchg
fildl
ja
xchg
jmp
loop
arpl
movsb
inc
mov
fistpll
mov
lret
sub
or
sub
insl
sub
pop
and
sub
pop
and
out
mov
aas
jle
mov
insl
xchg
gs
arpl
jne
mov
je
xchg
and
mov
and
cli
mov
xchg
xor
jecxz
lds
shll
gs
enter
repz
add
insb
cld
scas
sbb
dec
es
lret
cmp
out
xor
push
xor
or
in
xchg
test
roll
fwait
sub
jo
cmp
leave
pop
sub
stc
mov
mov
push
add
imull
cmp
add
pop
cld
std
loopne
popf
rol
dec
incb
gs
mov
addl
xor
adc
pop
gs
fdivrs
scas
or
imul
pop
sahf
es
out
int3
mov
sbb
scas
cwtl
dec
insl
xlat
cs
xor
fadd
fwait
in
pop
jbe
in
movsl
pop
test
ror
test
cmp
cld
jmp
out
cld
into
lret
lret
or
lahf
jg
addr16
cmc
xor
aas
ja
jbe
and
xchg
in
shll
insl
fsub
lahf
data16
sub
cmp
jnp
mov
pop
ret
jle
cmp
pop
inc
movzwl
outsl
sbb
andb
push
jns
lcall
dec
clc
in
in
adc
mov
dec
mov
inc
and
and
call
pop
xor
orb
mov
xchg
dec
test
cmp
int3
push
mov
bound
stos
repnz
rcll
hlt
call
pop
int
pop
sbb
push
xlat
adc
pop
sbb
in
icebp
xchg
test
push
xor
sbb
xor
cmc
adc
repnz
cmc
jae
sub
sub
add
ret
push
dec
out
aaa
mov
mov
and
in
push
pop
out
pop
aam
adc
mov
cmp
or
roll
ss
sub
sbb
ja
mov
jge
cmc
iret
dec
rcrl
movsl
jmp
or
mov
mov
push
test
aas
sbb
dec
mov
rorb
outsl
iret
iret
and
mov
mov
and
inc
daa
jle
xor
xchg
lret
lock
xor
pusha
jg
arpl
push
clc
jno
mov
mov
pop
mov
or
mov
adc
fwait
sbb
loop
push
push
inc
mov
enter
push
pop
pop
imul
jle
ret
stos
sub
shrb
adc
call
lret
loope
inc
mov
rclb
jnp
lea
add
xor
int
rorb
cmp
sub
jmp
or
ret
cld
lret
fs
jp
fistpll
or
pop
pop
push
aas
xor
imul
pop
jns
into
arpl
cld
cmp
movsl
mov
out
pop
outsb
pop
test
xchg
sub
or
jecxz
stos
out
pop
arpl
rolb
pop
out
movl
testl
test
add
jnp
repz
mov
lods
xchg
fists
addl
cmp
stos
in
ret
fs
jecxz
dec
stos
mov
pushf
into
inc
adc
jle
adc
sub
mov
inc
outsb
sub
or
pop
mov
cmpsl
mov
mov
dec
aas
pop
xchg
pop
pusha
inc
decl
addl
push
mov
out
sti
mov
push
or
call
cmpsl
lock
mov
jecxz
jno
fs
mov
xor
push
adc
sbb
xchg
add
adc
push
jmp
movsl
mov
mov
dec
or
add
cmp
data16
xchg
mov
pusha
nop
sbb
mov
out
jmp
cmp
repz
lods
xchg
sahf
jno
mov
leave
jecxz
dec
jl
jns
xlat
sub
jne
ljmp
loopne
sbb
cli
pusha
int3
xor
lahf
and
mov
jecxz
mov
mov
fimull
xchg
push
notb
outsb
xchg
jnp
jmp
imul
or
mov
lods
icebp
xor
das
cmp
loope
adc
jae
ret
inc
in
dec
imul
push
outsb
mov
icebp
inc
and
aad
add
mov
mov
ss
cmp
jnp
mov
inc
inc
std
mov
es
mov
jb
xchg
mov
lock
jae
ss
jle
pop
outsl
popa
imull
imul
mov
cmc
loopne
ret
pop
scas
mov
cmc
pop
add
mov
jne
aam
lock
or
mov
xchg
icebp
and
into
roll
xor
outsl
int3
scas
cmc
dec
addr16
pop
add
and
gs
push
or
adc
cli
test
xchg
or
mov
sbb
pop
cwtl
andb
or
mov
jns
ret
fdivrl
pop
cmp
push
cmp
cmc
push
movsb
xchg
pop
mov
std
int3
icebp
push
sub
aas
and
hlt
push
jle
dec
mov
sbb
xorl
popf
pop
cmp
mov
pop
mov
rorl
insl
cwtl
in
test
lods
mov
mov
scas
xor
push
and
and
or
js
js
mov
push
cmp
mov
xor
inc
int3
push
outsl
rorl
mov
cld
rcll
in
scas
and
nop
push
fstpt
popa
outsb
outsl
ljmp
mov
mov
daa
fsts
in
sub
push
repz
testl
ret
repz
scas
add
and
ljmp
call
cwtl
negl
lods
fists
push
adc
ds
movsl
cs
insb
sbb
idivb
xor
stos
sub
sub
das
push
inc
testl
push
sub
add
js
xchg
jb
jns
test
sbbb
sti
jo
cmpsb
xchg
sub
add
ret
sbbb
or
out
mov
ret
sahf
adc
repnz
add
popf
xchg
add
mov
shll
inc
push
inc
aas
or
out
hlt
scas
insb
jae
lea
fucomi
cmp
xchg
inc
xchg
clc
popa
xorb
ss
in
mov
adcb
sbb
repnz
pop
xchg
sbb
fidivrl
fists
jb
addl
fisttps
sbb
int3
jo
stc
lea
jmp
je
aad
cmpsb
scas
mov
or
psllq
and
sbb
or
ja
adc
loopne
adc
test
popa
push
cmc
jl
outsb
int
cwtl
add
cmp
aam
mov
push
std
inc
shl
mov
adc
jb
inc
mov
mov
lods
or
inc
xor
inc
out
gs
testb
mov
dec
xchg
enter
lock
outsl
jae
pop
leave
add
inc
cmpsl
iret
jno
ret
cmpsb
mov
stos
mov
loope
ds
js
ljmp
push
add
xchg
fwait
xchg
loopne
mov
jle
in
notb
pop
sti
cmp
gs
jl
aad
inc
cmc
adc
repnz
mov
mov
cmp
lret
repnz
sti
jle
sub
dec
test
cmp
inc
notb
fldenv
in
idiv
jae
dec
or
push
sbb
aaa
adc
mov
int
daa
push
adc
add
aaa
dec
mov
pop
test
call
xchg
aad
inc
xchg
insl
jns
insb
sub
int3
pusha
daa
lcall
xchg
imul
xchg
push
mov
xor
cli
mov
idiv
int
loope
in
lret
inc
pop
test
shrb
jecxz
insl
imul
test
mov
sub
xchg
lds
mov
outsb
sarl
cmpsb
mov
bound
add
pop
inc
dec
mov
call
or
jmp
inc
pop
push
or
mov
ficompl
mov
sbb
sbb
lret
repz
push
lahf
fwait
icebp
ss
cmpsb
jo
or
push
cmpsl
sbbl
mov
pop
and
inc
movsb
pop
movsb
mov
add
dec
arpl
cmpb
fldenv
add
xchg
adc
lahf
push
loopne
sub
push
xchg
mov
sbb
in
lahf
lods
repz
loopne
into
cmp
jmp
mov
jge
sub
aam
iret
or
outsb
mov
pop
pop
repz
in
cmc
mov
jo
and
test
fs
je
jns
ret
pop
stos
test
jp
jb
push
repnz
es
in
imul
dec
adc
out
cmc
fimull
and
adc
stos
pushf
es
int
pushf
mov
xor
fwait
pop
out
nop
jae
sbb
sub
adc
or
mov
sbb
mov
pop
xchg
stos
rorl
dec
test
or
test
aas
or
add
xor
push
lds
outsl
cs
xchg
ffree
aas
lret
cmp
gs
rcll
jecxz
mov
movsb
add
jb
pop
pushf
add
dec
stc
pop
mov
mov
cwtl
sbb
mov
cli
bound
sar
outsl
sahf
mov
lock
gs
jp
arpl
adc
dec
mov
shrb
in
pop
pop
xor
mov
mov
scas
aaa
fsubr
stos
mov
jl
subb
sbb
adc
mov
push
sbb
sbb
inc
mov
push
jge
loopne
std
fcoml
and
adc
xor
inc
cmp
jge
push
je
add
push
sub
mov
mov
xor
popa
and
mov
popa
enter
mov
bound
mov
push
test
cmpsb
push
cli
push
jle
mov
cmp
test
arpl
inc
sti
cwtl
jge
and
insb
lcall
cmp
push
test
mov
pop
lea
popl
shl
sub
mov
nop
mov
cli
call
rorl
adc
jae
xor
push
adc
inc
push
pop
jmp
imul
pop
gs
or
adc
dec
movsb
wrmsr
xor
push
insl
mov
hlt
outsb
xchg
rcrb
jo
imul
jno
in
adc
push
inc
je
pop
jge
sub
loop
dec
dec
shl
test
lock
sub
and
movsl
popf
adcb
or
pop
xor
xchg
push
mov
lcall
fisubs
or
fcoml
inc
sarb
xchg
insl
bound
jns
das
aaa
fimull
jmp
test
test
and
out
cmpsl
xchg
loope
je
repnz
sub
jne
sbb
cmc
lcall
or
add
pop
stos
xor
mov
data16
cmc
pop
movsb
add
cld
push
dec
xchg
fistpll
fbld
shrl
lretw
and
adc
fcmovnbe
mov
sub
pushf
adc
sub
fimuls
loope
cmp
sub
cli
mov
int3
sbbb
loope
mul
dec
hlt
jne
ds
adc
pop
int3
cld
xchg
mov
cltd
xchg
movsl
cmpsl
imul
push
push
xchg
xchg
xor
mov
push
popf
cs
push
aam
scas
pop
mov
sbb
sub
inc
ja
pushf
xor
cmp
repz
push
movsl
xlat
pop
mov
iret
shrb
insl
pop
jo
js
sbbl
rclb
jecxz
sub
xor
jmp
cmp
stos
cmp
bound
insl
ja
pop
cmp
addr16
lods
push
or
add
call
sahf
loop
in
in
dec
cwtl
imul
push
lds
mov
push
mov
pop
mov
shrb
push
int
add
xchg
cmp
roll
sbbb
scas
test
test
movsw
out
fildll
mov
call
mov
fucomp
ja
outsb
int3
pop
jns
sub
xor
push
jge
jmp
mov
inc
jp
cmp
mul
mov
and
ret
pop
sti
jp
xchg
mov
mov
jae
mov
ror
pop
lods
sub
sbb
jb
notb
push
push
movsb
adc
test
int
xor
icebp
leave
negl
icebp
ja
xor
push
push
in
push
and
je
pusha
in
hlt
push
adc
dec
popf
repz
push
push
dec
jge
xor
mov
inc
sbb
jmp
xchg
popf
push
shl
adc
dec
push
test
bnd
xchg
adc
scas
xchg
cmpsl
lds
push
aam
xchg
shl
adc
loop
or
push
test
or
xchg
test
adc
filds
mov
stos
lods
fwait
mov
cmpsb
mov
outsb
shr
push
add
xor
jo
cmc
mov
movsl
xor
in
push
dec
fists
jg
dec
stos
bound
inc
mov
ja
insb
sub
jne
popf
jnp
clc
mov
lock
decl
push
cmp
ds
insl
in
gs
push
outsl
stos
cmp
mov
jp
inc
mov
pop
repz
xchg
loop
and
or
mov
addr16
push
xor
repnz
lds
hlt
and
push
sar
fisubs
int
lods
das
sub
add
and
sbb
clc
dec
sbb
push
enter
dec
mov
or
pop
mov
mov
stc
js
mov
aad
popa
test
ss
out
or
lods
cli
dec
mov
pusha
mov
imul
xchg
jb
es
push
fsubl
rclb
xlat
ljmp
int3
dec
popa
xlat
aad
xchg
jge
stos
add
std
mov
rcll
andb
mov
mov
or
or
addr16
mov
test
sbb
lods
and
dec
and
outsl
cmp
jmp
or
enter
push
mov
push
aas
subb
dec
imul
mov
or
clc
daa
mov
pop
or
iret
lret
xor
loopne
pop
mov
jae
mov
xor
stos
popf
mov
imul
xchg
inc
and
ret
inc
lret
or
and
mov
pusha
pop
ficomps
sbb
lahf
mov
data16
insb
dec
inc
sbb
xchg
cmpsb
stos
mov
sbb
out
lea
or
addb
add
adc
xlat
xor
aas
add
std
cmpb
push
pop
mov
add
outsl
push
mov
js
add
aad
fisubrs
mov
test
jmp
pop
sahf
pop
inc
xchg
repnz
mov
out
fwait
xchg
gs
cmp
movb
xor
lods
adc
mov
mov
mov
repz
and
push
or
call
xor
mov
lea
lods
xchg
fadd
mov
fwait
dec
mov
mov
cmpsb
sub
mov
out
cmp
xchg
cmp
sub
into
sub
push
inc
lcall
jb
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
aam
int
cmc
mov
sbb
dec
test
testb
pop
add
fidivl
mov
test
sahf
push
pop
call
mov
sbbb
add
and
rclb
fwait
fwait
into
sub
cmp
in
or
lahf
loopne
idivb
ret
out
popa
out
pop
rolb
mov
xchg
repnz
fisubrs
mov
mov
or
fs
mov
cmpsl
xchg
mov
jmp
push
pop
xor
or
jo
jnp
add
xor
xchg
xor
roll
push
xchg
add
cmp
subb
fcomps
fistl
and
or
insl
fidivs
nop
in
jb
movsb
or
mov
push
aas
add
cmp
lods
pop
arpl
int3
leave
mov
stos
pop
inc
add
sub
popa
into
add
mov
mulb
cmp
mov
in
and
pop
aas
in
mov
mov
mov
fildl
mov
jne
cli
in
dec
sbb
sub
idivb
shlb
mov
clc
sub
dec
dec
xor
ret
into
sbb
dec
mov
sbb
push
movsl
xchg
jge
sub
sbb
das
xor
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
dec
insl
