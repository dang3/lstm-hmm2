push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
xor
push
pop
div
mov
mov
shl
mov
cmpl
je
mov
mov
jmp
movl
push
pop
xor
divl
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
repz
jae
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
add
fnstsw
orb
cwtl
mov
pop
or
dec
mov
mov
pop
pop
iret
shll
shlb
jecxz
add
and
lahf
out
outsl
xchg
push
sub
mov
push
mov
ljmp
mov
xor
push
pushf
inc
inc
and
inc
adc
jg
add
xchg
xchg
movsb
popa
pop
push
je
fldl
std
ljmp
push
push
in
pop
sbb
addl
cmpsb
or
cwtl
hlt
into
rcr
mov
cmp
es
cwtl
ret
ljmp
lods
dec
cmpsl
cmpsl
push
outsb
add
cwtl
and
mov
push
jle
aad
or
or
pop
lea
pop
scas
fmuls
jge
mov
iret
stos
imul
add
mov
iret
jge
jge
jmp
adc
dec
jmp
pop
subb
sbb
push
mov
sbb
mov
popa
mov
sahf
push
push
sub
mov
sbb
push
fbstp
test
iret
lods
es
insb
push
cmp
fiaddl
mov
xchg
scas
cmpsl
call
cwtl
push
push
push
or
popa
js
repz
out
aaa
mov
mov
push
dec
mov
hlt
jle
es
xchg
inc
mov
popa
adc
add
xchg
sub
push
sbb
inc
push
cmpsb
loope
aam
ret
inc
mov
jl
xchg
push
insb
xchg
bsr
mov
jl
fcoms
jle
pusha
faddl
imulb
mov
cli
sti
cltd
cli
and
mov
sbb
lock
dec
in
icebp
pop
in
xchg
pop
mov
sbb
movsl
pop
pop
pop
mov
cmp
add
cmpsb
jo
clc
pop
fsub
loope
mov
rorl
or
stc
int3
push
cmp
and
movsl
add
sub
daa
inc
mov
mov
cld
jno
int
cmp
push
adc
insl
dec
idivl
mul
pop
pop
push
cmp
jge
nop
sbb
nop
andl
inc
sahf
pop
pop
aas
cmp
std
xor
xchg
adc
ss
lds
outsl
mov
int
mov
xchg
call
pop
loop
and
loopne
xchg
mov
mov
dec
rcr
or
mov
fldl
test
lock
mov
mov
mov
inc
add
jns
dec
and
sbb
cld
sbb
lldt
jp
sub
adc
add
in
dec
add
inc
shr
jp
rcrb
sbb
fst
push
mov
pusha
pop
ja
adcb
lods
test
sub
repz
addl
lret
lahf
dec
and
mov
and
pop
jecxz
or
in
push
out
sub
add
mov
popa
inc
or
in
test
adc
cmp
cmp
scas
cld
rcrl
dec
dec
dec
jns
mov
idivl
lret
dec
xchg
add
add
inc
clc
fiaddl
pop
daa
inc
mov
sub
adc
cmp
cli
add
cmp
inc
imul
push
insl
sub
or
or
stos
jo
or
aad
mov
mov
jl
mov
bound
push
mov
mov
xchg
cmpsb
ss
xchg
sbb
lods
sub
push
out
outsl
xchg
and
add
push
mov
and
jb
inc
cmpsb
inc
adc
push
mov
cmp
push
rcr
outsl
push
sbb
add
pop
jb
outsb
push
int3
frstor
inc
push
in
iret
je
push
jge
push
fmull
lret
mov
dec
and
sbb
xor
cmp
adc
adcl
cli
mov
cmp
addb
dec
jl
dec
add
jecxz
into
in
fs
std
mov
mov
in
rcrb
dec
push
push
jmp
out
and
xor
inc
fdivrs
add
mov
repz
adc
test
int3
pop
out
fists
aas
add
cs
mov
mov
and
aam
dec
in
clc
les
sub
pop
adc
cmpsb
inc
sub
pop
pop
icebp
test
pop
jl
cmp
scas
popa
repz
js
cwtl
out
adc
mov
jne
int3
xchg
aad
and
push
stos
sub
daa
jns
das
mov
push
cmpsb
cmp
pop
mov
xchg
negb
jle
push
cmp
sub
push
pop
loope
rcrl
jb
call
mov
movsl
test
gs
xchg
stc
sub
lahf
mov
cmpsl
mov
leave
enter
enter
xor
add
xor
or
mov
dec
xor
scas
jp
sbb
leave
add
mov
cmc
ja
shrb
lds
fsubrl
out
push
fcoml
mov
dec
dec
enter
pop
push
lods
xor
test
in
dec
imul
aas
add
nop
lods
push
sbb
push
sub
aam
arpl
ja
xor
mov
aad
mov
mov
int3
sbb
jbe
cmp
pop
inc
sub
stos
outsb
adc
imul
mov
stos
gs
dec
push
add
xchg
hlt
cmp
add
mov
mov
imul
icebp
movsl
or
jge
rcrb
xor
push
in
mov
xor
aam
nop
fisubrs
mov
js
push
dec
cmpsb
adc
ja
lahf
push
mov
inc
ljmp
xor
lret
mov
and
mov
daa
rcll
cmpsb
lds
cltd
addr16
adc
pop
dec
inc
scas
or
or
das
pop
mov
nop
test
pop
pop
add
nop
sbb
lock
or
mov
bound
pop
xor
bt
mov
lret
push
push
aam
lahf
in
inc
aam
or
pop
lcall
je
lods
in
in
push
ds
cmp
add
test
mov
test
mov
orb
pop
imul
mov
test
push
jne
push
imul
push
mov
je
xor
xor
in
idiv
jb
add
cmp
out
inc
mov
negb
mov
and
jmp
dec
roll
fs
in
movsl
fsubrs
je
adc
add
push
fcmovu
leave
xorb
jmp
xchg
xor
fdivrl
jo
clc
sbb
mov
outsb
push
jb
mov
test
cmp
and
xor
jne
cli
mov
xchg
fistpl
mov
sbb
push
push
jecxz
stos
mov
adc
xchg
mov
int3
jae
or
mov
or
aaa
cmp
dec
sti
cmc
cmp
mov
dec
mov
sbb
mov
lret
jg
ljmp
shrb
pusha
mov
mov
cmp
cld
lods
add
push
and
push
xor
mov
xchg
xor
dec
sti
nop
mov
pop
dec
cmp
insl
test
insl
push
ljmp
inc
fmuls
stos
sub
and
cmp
mov
sbb
mov
stc
push
imulb
mov
fcomps
push
fs
push
xchg
cs
test
mov
movsb
mov
jns
push
push
cmpsb
mov
dec
jno
jbe
xchg
xor
jp
sbb
sbb
clc
sub
push
hlt
mov
aam
int3
pop
or
outsl
push
adc
imul
mov
pop
cmp
sub
fmulp
push
leave
ss
mov
rcll
cwtl
fisubs
push
test
shll
scas
aad
inc
lods
pop
jb
sub
out
fsubrl
stc
ret
pushf
loope
nop
loope
outsl
sbb
mov
ds
mov
bound
out
lcall
dec
dec
pop
cwtl
inc
ficomps
or
add
gs
movsb
out
cmpb
gs
xor
popa
rep
aas
fwait
or
sub
popa
pop
mov
cmp
jmp
jmp
scas
or
push
das
jecxz
adc
arpl
ret
pop
in
mov
jg
rolb
sbb
lret
test
push
shr
scas
out
lock
ss
push
stos
fidivrl
dec
sti
jl
push
adc
movsb
sbb
jns
leave
cmp
insb
mov
jl
push
ficoms
data16
xchg
xor
jl
xor
push
cmpl
push
pop
pop
aas
arpl
mov
xchg
push
data16
sbb
gs
lds
pop
out
mov
fiadds
mov
sar
into
dec
mov
data16
mov
push
mov
sbb
sar
icebp
dec
add
test
jo
icebp
cmc
mov
fstps
pusha
movsl
mov
jo
mov
jno
data16
xchg
dec
subl
xlat
rcrb
sti
lea
pushf
mov
mov
imul
subb
add
lahf
sbb
mov
push
fnstcw
scas
mov
push
jno
testb
push
mov
or
push
inc
pop
pop
stc
xlat
and
pop
cmp
dec
lret
ja
iret
xchg
push
fs
roll
pusha
nop
mov
hlt
inc
les
sbb
push
lea
jae
and
xchg
jno
out
cmpsb
std
mov
inc
ds
pop
test
mov
pop
ds
in
cmp
out
fidivrs
jnp
pop
cmp
cltd
fildl
subl
repz
aaa
cmp
jae
sahf
mov
jg
outsl
xchg
or
dec
insb
shl
mov
cli
out
sbb
xor
movsb
mov
mov
insb
fmull
sbb
movsl
jno
sqrtps
lock
adc
jl
daa
inc
movsb
adc
popf
out
mov
mov
jmp
ja
mov
add
loopne
ds
jno
movsl
lret
lds
pop
je
pop
adc
out
mov
dec
out
andl
mov
mov
pop
push
mov
add
or
dec
mov
push
dec
sbb
out
xchg
xorb
repz
jns
mov
xchg
jae
push
mov
mov
add
test
cmpsb
and
dec
dec
inc
lea
mov
mov
push
xor
mov
and
testb
sbb
cltd
pop
test
imul
movsl
jecxz
ja
inc
inc
push
enter
ljmp
adc
jbe
rclb
cmpsb
cli
push
cli
sbb
pop
xor
aas
aam
int
in
jbe
mov
mov
push
es
scas
add
and
jle
imul
xlat
fwait
sbb
iret
cmovs
mov
sub
push
fdivl
mov
jne
xor
mov
xchg
mov
out
jbe
add
pop
lahf
sti
pop
adc
fxch
cmpb
or
xor
sbb
cmp
jg
mov
mov
inc
xchg
nop
sub
sub
or
mov
daa
test
cmp
pop
adc
test
out
popf
fistl
jno
aad
mov
jl
add
add
cs
mov
or
add
loop
daa
cmc
sub
test
test
mov
sbb
je
cmpsl
adc
fisubl
mov
lcall
pop
fistpl
dec
shrb
mov
icebp
js
mov
dec
mov
cmpb
negl
jae
pop
clc
jg
pop
adc
addl
pop
pop
out
xchg
enter
leave
and
lods
xor
jb
adc
xchg
test
cmp
inc
ja
inc
test
jmp
sti
test
je
inc
les
je
test
clc
xor
pop
adc
scas
test
and
inc
add
jae
sarl
inc
gs
push
jle
sar
out
lods
jecxz
out
mov
imul
out
inc
pop
aam
adc
pop
mov
dec
mov
imul
addr16
xlat
inc
push
sets
gs
and
sub
add
cmpsb
inc
movsl
lods
dec
add
in
icebp
cs
es
jns
fsubr
ret
lock
aaa
push
dec
inc
jae
fstl
mov
aaa
aad
adc
cmp
stos
cmpl
popf
mov
fs
jb
shll
leave
arpl
adcl
aam
mov
test
bound
xor
es
push
jmp
out
popa
mov
sarl
gs
addb
sbb
sbb
lahf
add
jb
or
mov
sub
and
xor
mov
outsb
jo
out
mov
mov
in
add
rcrb
jae
pusha
test
cmp
dec
in
aaa
rcl
cmp
jp
aad
mov
data16
in
inc
fldz
lcall
add
das
adc
inc
call
push
bound
cltd
fsub
xor
int3
mov
mov
inc
stos
in
pop
cmp
jae
fldcw
jns
imul
cmp
insb
xchg
xchg
mov
or
jecxz
adc
adc
mov
into
cmp
mov
xor
cli
aaa
fistpll
xchg
leave
mov
adc
imul
imull
mov
sarb
enter
sub
add
xor
cmp
cmp
out
and
outsl
sbb
push
iret
cmp
mov
lahf
pop
cmc
or
fisttpl
cmpsl
or
cli
xchg
or
push
sub
add
mov
test
stc
fwait
inc
pop
pop
cmpsb
test
and
jmp
mov
jb
adc
cld
fldl
mov
add
or
push
cmc
mov
mov
dec
or
xchg
aad
mov
movl
xchg
idiv
cmp
fcoms
adc
jge
cmp
add
jb
inc
fnsave
shrb
add
xchg
outsb
cmp
repnz
fsub
mov
pusha
dec
cmp
and
push
lret
sbb
xor
inc
aas
sub
jmp
test
lcall
and
xchg
mov
pop
sub
lcall
push
loop
testl
repz
stc
xor
rorl
inc
dec
pusha
xor
jbe
xor
cmova
outsl
jp
bound
mov
iret
in
icebp
ljmp
cmpsb
add
inc
adc
sbb
mov
dec
gs
cmp
and
mov
mov
jne
loopne
jmp
ds
in
mov
xlat
adc
dec
mov
and
in
cmp
or
adcb
mov
das
rolb
daa
sbb
pop
sub
dec
insl
mov
sbb
daa
rorb
sbb
pop
sub
pop
mov
call
inc
xchg
cmpsb
or
rcrb
lret
outsb
add
fildll
jns
fdivrl
test
adc
int
or
andb
ret
jecxz
roll
and
sub
or
cmpsb
jecxz
cmp
push
subb
pop
movsb
pushf
mov
push
into
leave
aaa
icebp
push
mov
daa
stos
push
outsb
test
mov
insl
fidivl
enter
popf
add
movsl
loope
mov
add
fs
dec
sbb
xor
jbe
rolb
les
jp
cld
stos
fldt
and
lret
out
mov
adc
mov
ror
mov
pop
je
or
jno
jnp
outsl
or
xor
dec
xchg
push
es
add
movsl
push
mov
sbb
adc
pop
or
mov
loop
movsb
or
pop
les
pop
add
cmc
daa
inc
inc
sti
mov
mov
push
push
mov
test
xchg
movsl
sub
pop
cli
mov
and
jle
add
ret
fwait
sbb
mov
sahf
and
cmp
mov
cmp
mov
adc
cmp
out
add
orb
cwtl
les
sub
nop
add
push
fisubrl
int
in
dec
xlat
xor
mov
sti
mov
imul
fs
ss
add
sbb
jge
dec
inc
mov
push
movb
mov
lock
movsl
xor
xchg
add
jl
pop
and
nop
mov
mov
pop
xchg
xchg
std
stos
push
dec
fs
xchg
jmp
fsts
std
jbe
cmpl
scas
mov
inc
clc
sbb
cmpsb
aam
mov
out
fisubrl
mov
imul
pop
push
jno
call
sbb
fneni(8087
add
xchg
jb
cmp
pop
aad
movsb
comiss
and
lock
scas
mov
aad
jno
xchg
dec
aaa
cwtl
xchg
bound
nop
nop
movsl
shlb
orb
inc
mov
sbb
adc
out
movq
and
ja
sbb
aam
sub
or
ret
dec
pop
fwait
lcall
pop
or
ds
fneni(8087
push
je
imul
cli
fnstenv
mov
push
and
dec
ja
or
push
mov
daa
out
lea
test
in
mov
mov
ja
jb
mov
shll
pop
mov
push
out
mov
into
fisubs
lret
lock
int3
jo
daa
aas
lds
aad
lods
sbb
pop
push
adc
lods
lret
cmpl
xchg
fnstenv
jo
jmp
adc
mov
fiaddl
cld
inc
in
xor
fistpl
in
rclb
in
shlb
iret
pop
fsubrl
fisubrs
mov
mov
lods
xor
inc
or
inc
adc
xor
test
es
lock
xor
arpl
adc
js
sbb
or
mov
jne
jnp
jge
fsubr
aas
jecxz
dec
cmp
fists
data16
jmp
inc
sub
and
lods
mov
xchg
fs
fcmovnbe
jne
lahf
rcrb
push
and
je
jp
or
push
and
enter
cmp
test
fcoms
pusha
mov
jo
les
dec
lret
mov
jns
cmpsl
sbb
mov
sub
stos
aad
pop
scas
xor
arpl
or
iret
add
jbe
loope
mov
jb
push
lea
shlb
test
push
jae
fs
loope,pn
aad
insb
lods
clc
sub
inc
sbb
test
out
ss
sbb
push
leave
insb
add
test
push
sub
outsl
adc
test
sti
fnsave
ljmp
xor
pushf
movsl
ret
pusha
imul
orl
lds
repnz
outsl
sti
sub
clc
scas
pop
or
popa
in
outsl
cld
insb
loop
inc
lock
in
dec
jne
cltd
pop
je
insl
jecxz
mov
push
mov
cwtl
dec
sarb
repz
sub
inc
xchg
nop
sub
loopne
das
cltd
jmp
arpl
xor
gs
xchg
mov
out
sub
inc
mov
add
hlt
inc
or
add
dec
outsl
in
insl
pop
add
mov
inc
mov
or
or
stos
cmp
pusha
push
push
adc
inc
addr16
leave
push
call
stos
ljmp
xchg
mov
xchg
outsb
sub
xor
je
mov
mov
pop
mov
or
shrl
push
cmp
or
mov
add
imul
xor
aas
push
lea
je
popa
push
or
test
repnz
repz
jbe
rorb
stos
and
outsl
pop
jge
outsb
jbe
sub
jmp
repz
cli
mov
sbb
xchg
mov
sub
pop
stc
cmc
push
push
ficoms
dec
push
outsb
sbb
je
movsb
xchg
push
out
jp
adc
popa
in
mov
outsl
sub
lds
sbb
jecxz
dec
fnstsw
popf
sbb
es
and
xlat
cs
aas
pop
pop
add
shll
sbb
xor
gs
shlb
mov
loope
xchg
test
cmpsb
stos
std
in
jl
jns
loopne
stos
jmp
lock
sbb
jo
mov
xor
cs
lea
inc
jb
push
cmpsl
shrl
das
or
fiadds
enter
ret
lock
gs
xchg
jg
mov
cmc
in
and
and
cmp
insb
rcr
push
jbe
push
jl
cmp
jnp
dec
dec
add
into
imul
int
xor
sarb
iret
or
dec
xchg
pop
cmp
adcb
mov
pop
lods
xor
into
movsb
mov
mov
inc
out
mov
in
shlb
aad
ss
mov
xchg
mov
add
loopne
aas
cmpsl
enter
orb
dec
test
xchg
cmp
xlat
int3
jge
pop
push
pop
test
push
test
nop
xchg
and
xchg
in
push
jp
dec
shll
mov
icebp
ret
xlat
pop
sbb
and
sub
mov
fwait
popa
push
jno
or
pop
sar
or
xlat
push
or
sbb
roll
addr16
lcall
cmpsl
lds
push
je
std
sbb
in
sub
or
ja
and
mov
mov
pushf
pop
jne
xchg
aam
adc
or
add
mov
xorl
adc
mov
pop
rorl
mov
popf
mov
fimull
push
aam
pop
add
dec
sub
in
dec
and
cmpsb
test
mov
ja
int
or
rolb
dec
insl
adc
lods
into
cmpb
jno
cltd
push
add
arpl
pop
out
xlat
push
je
shld
dec
inc
or
daa
dec
les
jo
mov
mov
dec
inc
mov
bound
andl
loope
pop
out
cmc
out
fcoml
push
test
clc
into
das
xor
and
push
pop
or
inc
movsb
arpl
lods
cmp
es
sbb
cmp
xchg
cmp
cmp
lock
xor
das
cmp
dec
insl
jb
lahf
mov
sub
shr
insb
fnstcw
lret
pushw
shll
in
and
add
in
movsb
int
jnp
cmp
push
fiaddl
lcall
mov
gs
mov
or
sub
xchg
xor
pop
jg
andb
cwtl
aad
or
sub
jno
mov
loopne
scas
aad
mov
jg
pop
pop
popf
lods
jb
cmpsb
es
fimuls
sub
cmp
pop
fs
sub
loopne
jle
fldt
loop
xlat
enter
addb
jmp
add
inc
pop
fsubl
dec
or
mov
int3
mov
enter
pop
test
cmp
mov
xor
dec
imul
lahf
push
hlt
mov
pop
clc
mov
mov
insb
inc
jo
inc
faddp
xchg
mov
push
ret
xlat
imul
hlt
fidivrs
loope
lds
lds
lret
push
pop
mov
call
sub
push
xchg
add
pop
pop
sarl
cmp
mov
mov
js
dec
ja
xlat
lcall
fcmovbe
bound
mov
push
jge
jnp
push
loop
lock
push
dec
mov
mov
aas
lods
arpl
lods
insb
pop
mov
xor
sbb
and
mov
lea
iret
icebp
push
lret
xchg
inc
inc
or
dec
xchg
rorb
arpl
xchg
into
dec
ret
imul
push
jg
in
inc
insl
notl
push
aaa
sbb
jns
stos
xlat
jbe
add
xlat
xor
add
clc
pop
addr16
jecxz
mov
dec
inc
mov
arpl
rol
push
pusha
and
pop
xor
lcall
out
mov
pop
pop
pop
push
dec
imul
movsb
clts
inc
push
bound
jmp
push
mov
aad
jne
push
repz
cmp
cli
stos
stos
stc
add
adc
std
mov
cmp
les
popa
out
xor
in
popa
sub
call
das
icebp
imul
cli
int3
xchg
xchg
pop
test
push
push
cltd
rcrb
xchg
imul
aaa
pop
das
add
push
ja
adc
loopne
sti
adc
movsl
jle
lcall
inc
sub
or
stc
rcll
scas
data16
int3
and
xchg
xchg
dec
push
inc
sub
std
mov
movsl
mov
stc
int
adc
imul
push
and
adc
sahf
scas
mov
adc
gs
outsl
jne
hlt
fisttpll
sbb
fbstp
mov
aas
sbb
test
and
adc
cmp
jle
and
dec
and
mov
xchg
cli
repnz
pop
push
xlat
icebp
lods
in
andl
jns
pop
inc
shlb
subb
jle
data16
cmp
lods
push
cltd
ret
nop
js
mov
jmp
mov
sbb
lea
push
outsl
mov
cmp
push
xor
xor
mov
add
push
in
pop
xor
js
les
xor
inc
scas
orl
inc
xor
or
hlt
mov
mov
dec
bound
in
test
xor
fstp
cmp
or
sub
jecxz
icebp
mull
in
dec
scas
lods
cltd
lcall
mov
test
lds
mov
push
test
push
xorb
mov
inc
or
push
es
sbb
mov
or
or
mov
fmul
inc
add
cmovg
xor
in
outsl
out
nop
cmp
xchg
xor
mov
cmpsb
add
jg
fldenv
out
popa
lock
mov
popa
push
mov
mov
inc
cmp
lods
cmp
icebp
ljmp
in
push
lret
pop
dec
lret
cmpsl
push
inc
jno
les
cltd
and
push
or
or
mov
gs
sub
in
daa
add
cwtl
bound
lods
lds
mov
pop
in
adc
scas
xor
jg
loopne
lret
in
test
xchg
adc
xchg
shlb
mov
stos
push
sbb
dec
jnp
imul
cmp
pop
cmp
sub
icebp
cmpsl
pusha
push
cli
loope
fnstcw
pusha
and
movb
int3
adc
add
subb
lods
inc
xchg
push
sbb
test
pop
pop
push
cmpsl
and
jne
dec
lods
adc
push
adc
cwtl
das
push
std
fimull
and
add
clc
sbb
xchg
inc
inc
dec
repz
cmpsb
movsl
push
hlt
jne
mov
iret
int
pop
mov
js
cmp
xorb
iret
or
add
int
in
mov
mov
cmp
repz
aas
sbb
push
sahf
pop
test
inc
push
stos
cs
out
mov
inc
pop
test
sbb
mov
xlat
add
push
sub
sub
popaw
ret
push
imulb
movsb
pop
test
or
movsl
pop
xor
add
shl
insb
xchg
cli
fxtract
ja
and
mov
icebp
mov
testl
sbb
dec
pushf
lds
xchg
mov
loopne
cmp
mov
inc
pop
fwait
push
retw
dec
and
sub
in
adc
mov
xor
or
inc
sbbl
fwait
and
sub
fadds
sbb
mov
sbb
andb
insb
out
and
dec
push
sbb
xchg
adc
push
adc
sub
pop
xchg
andb
out
pop
test
pop
fcmovne
lods
aas
xor
ret
jg
insl
inc
mov
add
mov
adcl
jnp
js
inc
sbb
and
scas
push
call
popf
cmp
aas
mov
mov
and
cmp
arpl
mov
aas
loopne
push
rcrb
into
cmpsb
pop
fcomps
adc
or
push
cmpsb
inc
xchg
mov
sbb
xor
jmp
orb
movsb
jl
inc
movsl
xor
repnz
insl
inc
out
ret
and
dec
hlt
inc
add
adc
jae
xchg
stos
sub
jg
loope
dec
in
fldl2e
lea
ret
aaa
pushf
imul
ficoms
sub
push
in
mov
push
sahf
test
mov
jp
mov
jbe
outsl
fs
js
push
sbb
enter
bound
icebp
adc
and
lds
aam
cmc
pop
ret
mov
loope
pop
sub
sub
xchg
dec
and
fadds
mov
dec
push
les
inc
js
jo
arpl
out
sbb
out
test
mov
cli
scas
xor
or
sbbl
ret
sub
je
xchg
int3
inc
xor
fs
ds
push
les
out
les
inc
sti
inc
fs
mov
mov
mov
mov
scas
sbb
cli
or
and
hlt
pop
xchg
cmpsb
jle
push
inc
mov
xchg
mov
xor
aaa
pop
ficomps
cwtl
call
insl
mov
lds
iret
subl
aaa
xchg
loope
adc
cmpb
mov
jb
cmp
fdivl
or
cmpsb
adc
lret
sarl
cwtl
and
sbb
xchg
dec
insl
shl
xor
pusha
dec
xorl
icebp
fs
lahf
pop
mov
mov
outsb
jmp
movsb
sti
lcall
mov
ret
insb
fistl
push
cmc
mov
in
xor
loopne
bound
xchg
push
pop
icebp
notb
add
push
jmp
dec
scas
out
pop
mov
ret
dec
jl
imul
in
dec
pop
jmp
sbb
lret
add
sti
pop
sarl
std
sbb
and
mov
and
int3
add
mov
xor
push
popa
push
nop
dec
cmpl
test
stos
and
pop
out
mov
sahf
and
loop
stos
push
dec
and
mov
test
in
sbb
jae
cmpb
push
sbb
insb
fadds
push
mov
or
xor
hlt
or
pop
icebp
rorb
or
iret
cs
jbe
sbb
pushf
jge
push
addr16
in
dec
jo
arpl
rorb
jge
push
mov
jne
inc
and
repnz
lret
out
mov
jle
aas
adc
fsubs
sahf
aam
mov
pusha
push
and
xchg
mov
negb
iret
xchg
cwtl
aad
lods
sti
mov
popa
stos
pop
mov
cmp
mov
add
jp
dec
lods
pop
ret
jb
add
js
fwait
sbb
jo
pop
shl
cs
lods
ss
or
pop
andl
jle
ret
in
xor
mov
mov
sub
ret
adc
jecxz
adcl
add
rcll
mov
push
rcrl
fucomp
or
stc
mov
jl
lds
lock
mov
in
xor
shlb
dec
inc
cmp
pop
push
mov
mov
cwtl
cwtl
je
or
stos
fs
mov
repnz
in
sub
jne
jl
cwtl
sub
das
nop
jno
fstps
scas
enter
sbb
or
sub
stc
leave
inc
aad
adc
mov
push
mov
test
sarl
fs
dec
mov
jg
daa
clc
std
imul
lret
inc
and
cmp
out
pop
roll
adc
push
sahf
dec
jae
test
pop
lock
sub
imulb
nop
xchg
and
xor
inc
stc
insl
mov
pop
xor
cld
jl
push
pushf
cmp
call
jp
jo
mov
fimuls
mov
fiaddl
dec
dec
cmc
xchg
push
sti
ja
aas
outsl
lods
xchg
popa
lret
sahf
pop
xor
popf
scas
and
mov
shlb
cmp
cltd
pop
cmp
cmp
mov
sbb
aas
cld
add
and
mov
sbb
cltd
fiadds
rcrl
mov
xchg
sbb
in
addl
sub
dec
lds
fadd
rclb
adc
movsl
sub
mov
push
mov
sbb
jmp
xor
add
call
aaa
mov
imul
mov
or
out
std
outsb
inc
dec
pusha
mov
lret
jnp
sti
cmpsb
lock
dec
mov
and
lahf
cmp
xor
push
mov
loop
leave
insb
out
mov
add
jp
pusha
gs
stos
in
mov
orl
out
std
mov
fsts
les
je
push
inc
mov
shll
and
sbb
cmpsb
test
inc
shll
test
sbb
mov
xchg
sub
add
insb
or
inc
dec
xor
das
and
xchg
and
cmp
xor
inc
cli
add
mov
sti
dec
enter
lcall
mov
mov
mov
xchg
into
fcomp
scas
or
sub
sbb
jnp
movl
popf
fsubrs
add
test
push
mov
into
add
mov
imul
mov
test
sahf
inc
dec
repnz
add
mov
mov
mov
cs
or
movsl
pop
and
rclb
add
sub
sbb
jb
lea
mov
insl
sbb
jmp
lcall
fsubs
push
pop
cmpsb
flds
pop
mov
stos
sbb
repz
mov
pop
mov
popf
push
aaa
mov
pop
inc
inc
leave
adc
add
je
pop
adc
outsl
and
push
mov
and
mov
mov
mov
mov
paddd
scas
getsec
rolb
push
out
cs
mov
push
mov
and
sahf
vpcmpgtb
lea
push
roll
push
fildll
lcall
xor
or
and
sbb
loopne
test
repz
cs
les
jp
pop
rcrb
popa
or
fxam
fcmovne
cmpsb
push
mov
inc
mov
jp
loopne
sbb
push
xchg
fs
add
data16
imul
push
rclb
add
mov
adc
lcall
out
test
mov
ss
jbe
jecxz
or
mov
add
pop
inc
push
push
rorl
push
mov
cmp
jb
test
push
int3
push
mov
lret
adc
pop
ljmp
pop
and
cli
mov
pop
scas
mov
and
fsubrs
pop
data16
lcall
adc
call
std
jmp
dec
iret
inc
ds
sbbb
inc
xor
adc
ficoms
dec
mov
jne
cmpb
mov
push
scas
cmc
iret
ret
imul
or
pop
xor
xor
dec
cltd
cmp
jp
negl
int3
cmp
sub
pop
sub
push
cmp
or
or
mov
add
add
rolb
fyl2x
push
mov
leave
enter
out
in
sub
roll
xchg
lcall
leave
outsl
cwtl
mov
xor
loopne
mov
push
adc
dec
lret
test
mov
stc
and
cld
or
popf
mov
in
into
mov
pushf
cmp
xchg
stc
pop
rcrb
or
mov
add
lea
mull
test
fdivrl
adc
stc
std
sahf
add
add
lods
or
in
jl
popa
iret
test
inc
clc
or
je
cmp
mov
jae
push
cmpsl
adc
daa
mov
out
lods
and
int3
or
stc
or
mov
lret
adc
les
ret
cmp
in
sub
mov
imul
repz
or
mov
inc
je
outsb
add
inc
in
push
lods
cmc
mov
xchg
jnp
cli
cmp
out
enter
sbb
mov
pop
sub
push
or
jp
mov
popa
jg
je
xor
cmp
jmp
arpl
fldl
or
mov
ds
mov
lahf
shl
and
scas
mov
rcr
aaa
cmp
sbb
xor
push
dec
movsb
insb
push
push
sub
and
pop
roll
imulb
push
push
cmpsl
mov
mov
xchg
scas
mov
xor
cli
rep
add
xchg
pop
push
outsb
cmc
ljmp
call
mov
sub
mov
out
fs
testb
cltd
mov
imul
leave
cmp
cmp
xchg
xor
stc
fs
jbe
cmpsl
in
ficoms
dec
mov
mov
mov
jno
mov
mov
loope
arpl
mov
cmp
negb
shrb
mov
or
sub
in
add
dec
enter
mov
and
add
sti
push
fdivrl
push
cld
es
add
mov
push
sbb
mov
jp
bound
sub
mov
or
je
scas
out
dec
shr
in
mov
fisttpll
nop
lret
pusha
push
mov
and
into
xor
push
dec
inc
dec
and
xchg
shr
sbb
cmpsb
and
pop
pop
pop
add
jb
mov
sub
cmp
loope
imul
add
repnz
mov
sbbb
add
jae
cmp
xchg
pushf
xor
mov
jmp
loope
aaa
jge
push
mov
cmp
fs
mov
dec
adc
cmc
fadd
daa
fsub
fnstsw
ljmp
pop
sub
test
sub
fidivrl
xchg
lret
adcb
aad
lods
test
push
rorl
pop
push
stos
js
inc
sub
and
dec
aad
stos
dec
addr16
mov
insb
hlt
pop
cltd
icebp
push
sbb
mov
pop
sub
mov
cmp
jecxz
mov
push
pop
push
jmp
in
decl
dec
cwtl
inc
rcrl
imul
hlt
mull
mov
or
mov
ss
iret
mov
call
dec
movsl
jmp
push
sub
leave
pop
aam
jo
mov
sbb
push
je
adc
ja
fcmovnu
loop
sub
test
enter
lcall
pop
lret
xor
ret
pop
ret
adc
xor
imul
pop
shrl
pop
fwait
cmp
jbe
and
mov
cld
jg
negl
jmp
cmp
fidivl
mov
sub
jns
cmp
sbb
cmp
bound
mov
add
cmovge
inc
add
shl
shlb
fsts
jae
repz
add
sbb
add
cmp
les
jle
dec
inc
add
xchg
cmpsb
pop
jp
xchg
push
fists
jbe
fbstp
ret
sub
add
insb
movsl
sbb
int3
mov
cmc
or
xchg
sbb
dec
jb
test
or
in
stos
stos
rcr
inc
hlt
test
and
dec
mulb
loop
jbe
push
arpl
inc
sub
mov
jp
cmc
dec
push
sub
mov
and
sbb
xor
sbb
lret
xchg
mov
push
dec
sbb
add
mov
mov
sub
or
out
rcrl
lret
cmpl
sbb
mov
adc
mov
jmp
adc
cmpb
arpl
or
push
dec
jae
bound
aam
mov
or
fucomi
cltd
adc
movsl
fbstp
mov
mov
dec
rorb
or
cmp
xor
or
xchg
mov
xchg
sahf
add
mov
pop
lods
add
xor
pop
addr16
ret
int
jb
mov
adc
mov
sub
push
lock
cli
push
sbb
imul
cs
xchg
and
not
dec
xchg
movsb
sub
xor
test
aas
dec
sarb
fldl
mov
mov
mov
jne
outsb
je
lret
adc
fxch
pop
stos
mov
iret
mov
bound
faddl
adc
shrb
inc
repnz
test
sub
fs
pop
mov
fiaddl
inc
mov
dec
inc
aad
cld
popa
cmp
jmp
loop
and
lods
idivl
aam
test
es
iret
inc
aam
mov
lock
jp
cwtl
xchg
loope
sub
pop
arpl
mov
imul
or
jae
das
mov
dec
add
mov
aam
push
out
xor
movsb
dec
mov
test
mov
inc
sub
xchg
repnz
pop
jno
cmp
push
js
cltd
cmp
sub
daa
lods
xchg
xlat
inc
lods
bound
lea
xchg
pop
inc
rcl
pop
xor
repnz
cli
jnp
rolb
push
daa
or
icebp
shll
out
push
icebp
ss
push
pop
xor
adc
pop
adc
or
and
roll
adc
push
aad
dec
in
mov
scas
adc
pop
or
pop
js
push
ljmp
or
lods
xor
pop
sub
out
pop
ret
push
lds
stos
sbb
adc
xor
pop
and
xchg
outsl
sbb
popa
mov
mov
test
test
sbb
xor
cwtl
push
ja
mov
jae
call
divb
fnstenv
in
xchg
mov
pop
push
inc
jnp
aaa
in
cmp
cmpsb
sbb
test
sub
dec
je
das
into
jno
je
mov
arpl
pop
jp
mov
pushf
mov
test
dec
inc
outsb
scas
mov
aam
jnp
jae
loopne
add
sbb
fdivl
xor
ds
jge
push
inc
mov
mov
cmp
test
fldcw
lds
inc
and
cmp
and
inc
out
inc
adcb
je
mov
jg
cmpsl
icebp
insb
dec
xor
jge
or
loope
pop
sbb
sub
shll
sbb
dec
imul
cmp
or
xchg
out
jno
mov
popa
mov
aam
imul
aas
icebp
or
sub
mov
fs
cmpsb
fcompl
fnstsw
pop
ja
inc
mov
pop
or
dec
fildl
push
adc
stos
jle
fimull
add
mov
push
data16
outsb
loope
jbe
dec
xchg
call
popf
shrl
cwtl
in
pop
xchg
popf
sub
sbb
divb
ret
sub
insb
repnz
push
pop
jb
jo
popa
add
popa
fstl
movsl
fstpt
psrad
jmp
scas
aaa
imul
inc
and
mov
imul
cmp
mov
cmp
test
ljmp
xchg
or
pushf
aam
or
xchg
add
sub
inc
test
sti
mov
cmp
test
ret
and
mov
pusha
xor
das
stos
xchg
push
outsb
stos
sbb
inc
sub
sbb
stc
mov
dec
jmp
add
pop
in
dec
sub
aas
cli
jo
lea
sbb
lahf
das
pop
aad
push
xchg
dec
in
add
popa
adc
jo
scas
ss
lret
outsl
cltd
push
dec
int
pusha
shl
inc
sub
aas
pop
orb
pop
daa
pop
jmp
das
xor
push
adc
in
sbb
pusha
xor
xor
sub
sbb
mov
pushf
dec
xor
jl
sbbb
idivl
mov
sbbl
fmuls
mov
aaa
jmp
push
lock
mov
cltd
jnp
lret
jg
insl
fmuls
xor
push
ret
lea
sarl
mov
int
lock
jg
add
sub
mov
mov
add
dec
test
nop
jno
stos
stos
mov
lds
cmp
bound
je
rcll
mov
in
dec
icebp
lahf
hlt
xor
xchg
or
sti
xor
jae
int
dec
pop
mov
xchg
bound
loopne
out
out
fstpl
scas
aas
mov
xlat
dec
insb
xor
sti
lods
loope
push
and
add
push
cwtl
xchg
xchg
insb
lods
mov
test
ss
xor
and
pop
icebp
push
jno
je
pop
fwait
lds
mov
or
fnstenv
shll
sbb
outsb
jmp
xchg
ja,pt
xor
call
mov
sbb
dec
lods
sarb
mov
sbb
lock
dec
leave
and
ror
dec
dec
mov
jns
dec
test
dec
push
jae
jle
inc
jbe
mov
jo
xor
loope
mov
push
jmp
pop
inc
push
repz
inc
popa
inc
movsl
adc
out
sbb
shr
mov
inc
ja
and
outsl
inc
or
xchg
cmp
in
push
mov
repnz
xchg
cmp
pop
and
xchg
pop
push
inc
jae
fsubp
filds
aad
mov
test
fldt
pushf
dec
xchg
loopne
scas
cmpsl
xor
stc
push
out
ljmp
xlat
mov
sbb
push
xchg
sub
insl
xor
inc
jns
adc
out
jl
push
mov
roll
sahf
xchg
add
push
fists
stos
das
and
mov
lcall
adc
cmp
pop
mov
js
sub
mov
sbb
inc
pop
cs
xchg
subl
pop
inc
fs
sbb
jle,pt
shll
inc
scas
xor
and
lcall
testl
scas
ss
mov
clc
mov
lret
xchg
cmp
movsb
sbb
xchg
je
cmp
xorl
mov
mov
add
sbb
daa
pop
je
addl
or
sahf
adc
enter
cmp
push
jp
jb
push
lret
jmp
clc
repz
sbb
and
and
movsb
inc
jae
stos
daa
mov
xor
imul
mov
outsb
dec
xlat
inc
add
jmp
ljmp
pop
cmc
mov
insl
mov
scas
inc
and
dec
mov
xor
sarl
cmpsl
addr16
mov
test
xchg
mov
dec
pop
loope
dec
jns
sub
lock
push
mov
in
aas
scas
jae
xchg
das
adc
pop
out
into
outsl
out
push
lods
cmp
test
mov
dec
arpl
enter
adc
lds
jp
and
leave
loopne
dec
aas
add
xchg
nop
cmp
sbb
adc
or
push
cld
mov
les
sub
sar
popa
mov
adc
jae
shrb
loop
push
ljmp
mov
ljmp
pop
je
push
cli
clc
in
fcompl
jge
inc
jno
cmp
add
mov
xorl
sub
jmp
int
mov
enter
dec
sbb
jo
cmp
mov
mov
xlat
loopne
push
dec
clc
and
repnz
movsb
pop
rorb
addl
in
jmp
mov
ss
loop
shrl
lods
xchg
lock
outsb
xor
dec
xchg
vmovapd
mov
fcomp
mov
add
add
jbe
out
int3
sbb
and
inc
xchg
dec
daa
sub
pop
std
inc
inc
jge
rclb
into
dec
mov
push
pop
xor
mov
fldt
mov
out
inc
pop
dec
gs
test
jmp
inc
mov
sub
data16
dec
pop
or
cmp
dec
in
jg
sub
mov
out
pop
je
push
lret
push
lcall
fidivs
push
mov
and
enter
adc
jne
inc
or
stos
xor
add
popa
fisttps
test
dec
cmp
idivb
addr16
loopne
xchg
lods
jae
adc
cmp
mov
popf
sub
inc
sbb
movsb
mov
hlt
negb
cwtl
mov
das
sbb
sub
xchg
andl
pop
out
decb
or
cltd
jne
add
clc
adc
pop
test
dec
int
into
imul
cmc
subl
in
fcmovnbe
clc
pop
lahf
hlt
gs
sbbl
dec
cmpsb
inc
sub
push
push
xlat
or
test
outsl
jl
push
int3
movsl
in
movsl
push
dec
mov
lds
or
aaa
and
dec
or
and
int
fcmovne
fbld
cmp
dec
loop
dec
xor
in
push
push
test
jne
adc
xor
add
or
xchg
aaa
test
inc
jae
aas
call
lahf
sbb
pop
insl
sub
scas
cld
aaa
jp
dec
repz
addr16
sahf
pop
fidivl
and
xchg
sbb
or
cltd
data16
dec
cmp
pop
daa
push
fstpl
notl
or
jp
dec
inc
fsubl
pop
cmp
fcoml
cmp
add
push
sarl
out
mov
jae
in
scas
jne
cld
push
iret
mov
cmp
mov
xchg
xor
xor
dec
inc
jl
rorl
xor
dec
mov
adc
or
xor
les
pop
mov
push
cmp
sbb
fists
sbb
and
mov
inc
mov
cmpsb
xor
fsubrp
add
aas
cmpsb
pushl
inc
mov
mov
cltd
add
stos
adc
lret
sbb
dec
jecxz
stos
and
and
mov
inc
ficompl
test
push
and
jp
xor
js
in
pushf
mov
insl
push
fsts
cmc
sub
xor
dec
sub
xlat
jns
pop
cwtl
push
fwait
imull
push
scas
xchg
movsl
jns
ss
jo
or
inc
sub
mov
sti
jns
scas
stos
or
jle
adc
cmpsb
jbe
icebp
enter
mov
inc
sbb
ss
mov
xor
pop
cmp
lock
aam
pop
xor
mov
and
xchg
adc
or
enter
push
dec
bound
enter
dec
or
xor
dec
popf
xchg
ds
jmp
popl
mov
or
inc
fistps
mov
mov
in
leave
in
or
jns
jne
shlb
jp
dec
cld
mov
lea
push
cs
inc
popf
xor
lds
lods
ret
mov
jae
dec
mov
mov
jecxz
cmc
shlb
mov
outsl
test
lahf
cmp
mov
mov
xchg
fs
push
test
push
and
ficomps
ljmp
imul
test
outsl
mov
cmp
jo
ja
mov
insl
lret
shrb
mov
cltd
xor
lods
je
shl
jbe
repz
in
push
hlt
aam
inc
and
outsl
push
xchg
jp
cmc
in
in
or
mov
in
or
inc
pop
leave
sub
les
push
movsl
shlb
dec
sbbl
xchg
sbb
ss
loop
jns
mov
xchg
arpl
inc
add
sbb
mov
inc
xchg
pop
mov
adc
cwtl
loopne
push
dec
push
pop
or
add
jo
popf
jo
fisttpll
xchg
pop
jae
ds
ds
xchg
xor
sti
push
cmc
out
movsb
cli
or
sbb
jo
jne
or
sub
sbb
les
les
test
lock
data16
mov
adc
dec
push
mov
or
xor
add
pop
in
ja
sarl
mov
mov
add
mov
fsubs
out
adc
scas
addr16
in
add
jmp
mov
pop
lock
test
mov
out
lcall
test
sub
pop
hlt
fnstsw
andl
rcll
sbbb
jg
mov
xlat
pop
inc
pop
stc
mov
popf
or
jne
rcrb
sub
clc
int3
pop
add
xchg
out
sar
lds
cltd
mov
mov
xor
std
loopne
mov
mov
ljmp
shll
scas
jne
mov
enter
int3
mov
sbb
sub
push
sub
int3
fistl
mov
repnz
inc
aad
inc
xchg
adc
xor
dec
mov
test
incl
in
mov
lcall
push
lods
enter
pop
insb
adc
int
dec
jae
rolb
mov
dec
mov
pop
stos
ret
dec
scas
mov
lods
loope
mov
mov
lret
pop
out
data16
jp
mov
adc
fcoms
out
push
add
mov
cmp
ret
fsubs
xchg
mov
dec
jmp
lods
cltd
adc
jns
cmp
jge
stos
sti
arpl
cltd
mov
xor
dec
add
adc
testl
mov
in
mov
pop
fwait
stos
or
sbbb
loopne
clc
out
adc
mov
xchg
lods
mov
loope
xchg
out
inc
jae
sub
in
cmpsl
inc
addr16
pop
jb
inc
push
push
sub
rorl
cli
out
ds
stos
adc
sub
aad
inc
cwtl
mov
pop
cmc
fiadds
jecxz
test
jns
inc
insl
adc
mov
add
xor
out
sub
leave
fwait
incb
in
loopne
imul
xor
inc
lahf
or
je
xchg
adc
inc
shrb
sbb
enter
push
scas
jmp
push
int3
jo
sbb
es
xor
lret
fidivrl
cwtl
push
outsl
cmp
pop
xor
out
jno
sub
iret
dec
mov
mov
aas
xchg
mov
mov
lret
pop
adc
ret
sub
rol
mov
nop
mov
subb
shlb
cmc
mov
outsl
push
push
cmc
roll
test
xor
fldcw
pop
push
in
jle
push
cld
enter
xchg
decb
sbb
inc
adc
stos
add
outsb
push
fcoms
or
or
mov
push
push
jbe
cmpl
jmp
push
mov
test
into
ret
ja
cmp
fwait
sub
int
xchg
sbb
loopne
push
or
pop
sbb
fisubl
push
pop
insl
gs
inc
pusha
inc
mov
lea
or
sub
sub
fdiv
cmp
sbbb
xchg
jg
adc
jns,pt
push
and
jnp
cmp
add
cmpsb
sub
add
out
arpl
inc
mov
cmpsb
jmp
fsubrl
jns
sbb
arpl
test
jbe
jo
or
cmc
call
sub
fcom
sub
adc
mov
int3
je
lahf
stc
cmp
filds
inc
mov
pop
mov
stos
inc
jb
jne
dec
sbb
mov
fwait
xchg
data16
shr
xchg
and
jmp
xlat
xchg
mov
imul
clc
inc
jmp
shl
loopne
and
nop
xor
int
pop
in
and
and
cmpsb
inc
or
call
daa
sahf
mov
popf
fwait
inc
popf
test
sub
adc
iret
jg
test
lret
sub
xchg
mov
loop
data16
clc
int3
rorb
sub
imul
enter
mov
sti
xchg
dec
adc
mov
das
aas
daa
repz
lods
cmp
test
jae
sub
mov
sahf
mov
sub
nop
xchg
cs
mov
jb
test
stos
popf
imul
mov
add
imul
jmp
je
xor
xor
sub
fnstcw
insb
mov
mov
mov
push
xor
mov
mov
pop
xchg
dec
inc
scas
mov
lret
push
push
gs
mov
scas
not
movl
aam
pop
subb
jno
les
jne
inc
rorl
bound
iret
mov
repz
pop
dec
push
loopne
sbb
dec
or
fnclex
fs
inc
div
xchg
mov
mov
add
insl
xchg
movsb
subl
mov
mov
aaa
lret
aaa
inc
dec
shl
lock
cmp
mov
xchg
jge
and
jl
or
jmp
stos
jbe
push
out
mov
out
add
rorl
je
ds
xor
dec
pop
aas
pop
mov
je
pop
jbe
shr
inc
idivl
jmp
inc
pusha
pop
fbld
sub
jbe
gs
cmpl
mov
and
push
lods
sub
cmpb
js
shrb
and
aaa
add
cmpsl
aaa
dec
loopne
xlat
jno
icebp
cmp
pushw
pop
push
mov
xor
mov
js
sub
push
inc
pop
pop
dec
ds
fs
and
mov
stc
ja
scas
repnz
sub
in
imul
stc
mov
sub
cmp
cltd
clc
inc
jne
pop
out
rcr
movsb
arpl
push
dec
push
jp
es
es
fildll
sbb
or
mov
into
fistl
aam
sub
nop
xchg
jne
in
ljmp
adc
mov
xchg
enter
cld
andb
lret
sub
fsub
sbb
dec
int
push
pop
aaa
aaa
sbb
dec
mov
push
sbb
test
cmp
mov
push
dec
mov
pop
cmp
sbb
lea
mov
lods
adc
js
test
push
inc
and
pop
daa
pop
stos
dec
push
ljmp
gs
scas
popa
mov
xchg
cli
mov
aas
arpl
or
push
sub
and
adc
lods
in
pop
or
xchg
pop
ss
insb
pop
adcl
out
std
loop
rcrb
dec
xor
repnz
jle
test
popa
or
dec
loop
jns
inc
call
hlt
add
dec
and
jae
orb
pop
wrmsr
push
push
push
call
xor
or
loope
nop
push
cmp
in
mov
pushf
inc
pop
mov
repnz
fsubl
lods
test
gs
test
cmp
ja
xor
out
mov
test
and
orl
test
fsubl
ret
mov
fcmove
clc
aas
xchg
cs
pop
xor
dec
mov
lret
adc
cmp
fnstcw
cmpb
test
adc
loop
out
not
ret
sub
cmpsl
out
hlt
in
jmp
jmp
push
push
push
jb
call
jo
jecxz
je
add
or
fnsave
sub
ret
mov
rcrb
aad
fistpll
test
ret
pop
cltd
stos
fidivs
xor
mov
jbe
out
mov
in
movsl
dec
sahf
lods
sti
xchg
mov
sub
jnp
gs
ja
lahf
cmp
xchg
cmp
add
fisubl
inc
je
pop
sub
test
data16
pop
mov
adc
jge
pop
mov
data16
sti
cmp
out
adc
or
aad
lahf
pop
xchg
sbb
je
cmp
adc
leave
outsl
push
cmp
dec
mov
fdivrs
shrl
ja
ds
stc
xchg
mov
icebp
pop
cmc
push
int3
hlt
sub
scas
out
sahf
jmp
fsts
xor
push
fwait
in
push
xchg
pop
jae
test
sahf
and
stc
test
jb
fldcw
test
and
loope
bound
xchg
push
xorb
fcoms
scas
pushf
clc
add
outsl
dec
push
jne
ficomps
inc
mov
roll
dec
stos
mov
adc
mov
adc
add
push
pop
add
cmpb
arpl
lods
filds
mov
xor
insb
xchg
dec
ret
push
xlat
push
fucomip
add
nop
cmp
jmp
ss
jge
mov
loope
or
out
xor
inc
out
cmpsb
push
add
iret
pop
cmp
ja
ss
xchg
jge
adc
sbb
xchg
inc
movl
jnp
inc
pop
xor
inc
mov
add
adc
cltd
jno
pusha
leave
loopne
mov
xor
and
cmp
movsl
pop
lret
jnp
testb
fbld
push
insb
lret
and
mov
push
inc
or
ja
push
inc
aas
push
lods
sub
leave
iret
xchg
cmpsb
inc
fldl
lods
pop
jecxz
adc
jbe
jno
mov
ds
shlb
sahf
lods
ljmp
cmp
xchg
fldt
pop
imul
hlt
add
es
testb
and
lock
push
jns
cmp
add
dec
ljmp
mov
cmp
mov
pop
cmp
pop
addb
jo
es
pop
popa
je
mov
shll
cmpb
fwait
sahf
jp
lods
sti
rcrb
scas
sub
or
cli
decb
mov
out
lods
inc
cmp
fistpll
outsb
mov
adc
push
call
sbb
ficomps
xchg
adc
je
xchg
xchg
lods
push
into
sbb
cmp
sahf
xchg
call
push
out
daa
or
into
popf
push
dec
test
shrb
ja
mov
push
daa
call
sti
les
int
add
jge
cmp
imul
ljmp
jge
pushf
add
jnp
scas
pop
inc
adc
inc
call
and
or
sbb
push
lds
rol
in
dec
outsl
les
into
push
xor
stc
xchg
into
xchg
aad
push
push
ss
pop
xchg
pop
cmp
lea
adc
jae
mov
pushl
pop
shl
adc
gs
mov
inc
mov
xor
dec
in
sbb
out
aam
out
mov
inc
cli
pop
popa
out
xor
or
xchg
xchg
jbe
add
popf
andl
mov
mov
fistl
int
rcll
lds
push
pusha
xor
jno
adc
jmp
mov
mov
mov
lcall
xchg
add
shrl
xor
leave
cld
add
pop
popa
jle,pn
mov
mov
dec
xor
mov
mov
add
call
or
popa
jnp
xor
mov
and
mov
add
mov
xchg
xor
into
stos
dec
dec
imul
xorb
andl
dec
inc
inc
inc
mov
fdivrs
inc
pop
fisubs
mov
push
ret
mov
sahf
cmpsl
xor
or
in
sbb
xlat
cmc
ret
arpl
scas
or
popa
xor
lret
pop
inc
ficoms
les
mov
pusha
ds
clc
xor
mov
into
or
leave
inc
stc
sbb
pop
das
ss
dec
xor
out
dec
das
das
rolb
daa
mov
xor
sub
ljmp
lods
shl
orb
int
test
repz
pusha
adc
in
es
enter
daa
fwait
mov
leave
jmp
mov
pop
xor
enter
sub
sub
in
jbe
mov
enter
xchg
sbb
xor
daa
mov
dec
lock
jmp
xor
push
imul
loopne
or
jne,pn
hlt
imul
mov
ljmp
xor
pushf
xchg
jl
repz
or
mov
mov
pop
inc
sahf
rcrb
push
cli
mov
cmp
sbb
adc
rorb
fsubrl
in
sti
out
inc
xchg
dec
iret
sbb
inc
lods
dec
jp
and
mov
mov
add
adcl
fsubrl
pop
test
xchg
cmp
inc
lea
jg
mov
into
mov
in
outsl
mov
dec
in
outsl
and
pop
ret
mov
out
xchg
imul
mov
faddl
xor
adc
jp
mov
xchg
rcrl
push
nop
int3
fmuls
mov
addr16
push
dec
mov
insb
jnp
xchg
addb
cmp
sti
fwait
add
add
shrb
jnp
xchg
mov
dec
xchg
aaa
adc
dec
pop
cmp
filds
sbb
add
mov
push
shll
push
mov
xchg
dec
sub
cmp
push
call
sub
cs
mov
inc
add
out
enter
imul
imul
je
orb
sub
and
add
sbb
push
pushf
or
fucom
push
inc
jno
ficoml
push
push
inc
inc
push
inc
hlt
push
xor
idiv
or
test
addr16
cmp
mov
or
push
into
cli
cmpsb
and
outsl
in
mov
inc
shll
insb
sub
adc
push
xchg
lock
lods
call
adc
mov
pop
stos
int
in
inc
sbb
adc
clc
pusha
gs
xor
loopne
xor
jecxz
test
dec
loope
jne
lret
sub
push
sarl
stos
push
fdiv
xchg
push
pop
mov
jo
sub
mov
in
in
test
xor
sub
lods
lods
addr16
xchg
inc
sbb
lock
lret
jo
inc
shrb
dec
ds
mov
test
inc
imul
dec
inc
mov
pop
lds
push
mov
test
call
lret
out
cmp
lret
jmp
or
dec
mov
cmp
ja
add
dec
sub
or
mov
int
lods
inc
pusha
cs
popf
pop
rorl
push
jnp
dec
mov
lret
fadd
out
or
nop
jo
cli
push
mov
in
aas
and
sbb
cltd
jbe
lods
jb
cltd
mov
xchg
jne
ds
adc
mov
aas
sub
push
rolb
outsl
pop
fsubr
pop
and
lods
mov
xchg
add
cmp
xor
cmp
pop
sbb
ja
stos
and
pxor
jg
mov
mov
mov
ret
stos
jns
mov
mov
inc
xchg
es
cwtl
cld
pop
push
mov
push
sbb
das
mov
pop
mov
scas
mov
insl
repz
sbb
filds
inc
hlt
cmp
pop
iretw
pusha
cltd
add
lods
mov
jle
clc
fistpl
fidivl
rolb
ffree
sub
push
jge
xor
inc
adc
dec
mov
xor
cmp
sbb
sub
icebp
cwtl
jle
xor
aad
jno
jo
and
push
jmp
aaa
xor
sets
scas
test
jae
mov
lret
adc
sbb
mov
fnstcw
xchg
std
aas
imul
test
jne
in
cli
adc
inc
outsl
pop
push
sub
into
push
je
std
push
jno
jo
jnp
call
or
arpl
aas
rol
add
pusha
inc
popf
ret
lods
cli
fmull
push
xchg
sahf
sbbl
ds
int
push
jmp
jno
jnp
mov
dec
lret
aaa
outsb
or
cmc
mov
jle
jns
xor
pop
sbb
fmull
xchg
gs
call
sti
xchg
jb
in
mov
xchg
cmc
inc
adc
fistl
fcmovu
push
mov
push
mov
sub
jge
add
and
sub
or
lret
dec
repnz
cwtl
jno
fisubs
push
or
sub
or
js
std
gs
inc
sub
fcoms
int3
insb
push
xchg
xor
test
pop
test
xchg
adc
jmp
pop
xchg
xor
lods
scas
push
js
idivl
xchg
sub
mov
jl
sub
mov
clc
push
mov
ret
orb
test
sub
arpl
xchg
faddl
push
cmp
les
add
fdiv
or
inc
stos
and
test
cmp
ret
adc
mov
fisttps
in
xchg
stos
lcall
cli
ja
add
cmp
pop
idivl
sub
xor
xchg
cli
inc
cmp
dec
test
stos
xchg
mov
jmp
cmc
mov
mov
bound
sbbl
add
jge
fimull
mov
stos
stc
nop
push
insl
stos
mov
mov
movsb
inc
and
daa
push
pusha
and
daa
mov
pop
push
mov
stos
sbbl
mov
in
inc
shlb
fisttpll
clc
out
push
into
and
or
arpl
shlb
ret
enter
js
addr16
pusha
out
pushf
or
push
jno
dec
and
in
push
daa
imul
clc
movsl
dec
push
mov
shlb
mov
dec
fnstenv
out
popf
push
jne
stc
mov
push
mov
stos
shlb
lahf
adc
adcl
pop
xor
es
or
mov
push
pop
enter
pushf
adc
xor
mov
std
aas
sbb
in
test
aas
fsts
dec
fwait
adc
fs
shll
testb
mov
and
iret
outsb
or
sbb
adc
inc
xchg
or
movsb
mov
push
rorb
sbb
fwait
lcall
mov
inc
in
loope
iret
pop
jb
adc
lret
push
ret
fadds
mov
gs
scas
out
out
shlb
lret
inc
pop
mov
mov
rcrb
scas
add
dec
jl
imul
nop
mov
out
adc
mov
fwait
int
aas
jno
jle
ret
cmp
sub
mov
test
inc
xchg
sub
mov
pusha
mov
faddp
cmp
xchg
jmp
sbb
loopne
cmp
pop
aas
shrl
ret
dec
xor
inc
lock
clc
jae
mov
push
rol
std
jle
inc
lahf
into
testb
cmpsl
jmp
xor
vsubsd
out
fmull
dec
mov
sbb
stos
mov
pop
pop
mov
lock
aam
aas
push
mov
inc
sub
int3
add
add
repz
mov
mov
in
cltd
pop
jmp
xchg
jecxz
mov
scas
inc
push
andb
pop
mov
test
imul
ret
popf
repnz
push
ljmp
mov
pusha
je
orl
std
pop
or
fdivrl
sarb
jnp
pop
adc
inc
cmpsl
push
popf
in
dec
jno
cmpsb
jecxz
mov
ret
pusha
popa
dec
fdivr
mov
push
lock
and
je
dec
dec
orb
and
xchg
nop
aaa
dec
out
dec
cmp
pusha
popa
lcall
stc
add
cmpsb
fdivrs
and
sub
stos
ljmp
fwait
cld
cmpsb
cmc
mov
imul
xchg
mov
lcall
imul
insb
push
stos
pop
dec
stc
loopne
lahf
lahf
pop
mov
loopne
adc
cmpsl
adc
xor
xchg
cmp
and
jae
push
inc
xor
cltd
sahf
inc
adcl
pop
cli
pop
loop
or
mov
pop
fdivrs
out
jns
and
mov
adc
mov
repz
xchg
lea
sbb
cs
adc
aaa
push
or
mov
add
or
mov
jg
push
sbb
iret
sub
rcrl
ficoml
bound
push
aaa
jp
xchg
mov
and
xchg
ljmp
cltd
pop
sahf
fdivp
ljmp
fdivrs
cld
lea
inc
mov
cmp
mov
mov
or
into
popf
push
jge
enter
sbb
testb
mov
std
movl
add
pop
arpl
call
rcll
inc
cmp
mov
movsb
push
dec
shrl
adcl
je
mov
lret
in
push
aad
xor
cli
jnp
cmp
jne
les
frstor
or
jmp
shrb
jo
mov
cwtl
xchg
int
cltd
adc
jae
pop
pop
lcall
add
loopne
pop
pop
data16
cmc
sub
loope
fwait
dec
lcall
and
mov
test
mov
pop
push
push
int3
sbb
pop
stc
lods
xor
or
imulb
mov
arpl
jno
xlat
push
outsb
test
int
add
jb
xchg
or
sub
bswap
pop
rcrl
dec
sub
ljmp
mov
xchg
pop
dec
loope
lock
push
repnz
lcall
xor
and
inc
scas
push
rorb
fldt
enter
hlt
jno
add
fcompl
cmp
xchg
xor
in
sbb
aas
dec
aaa
gs
daa
loopne
mov
add
mov
pop
inc
and
push
std
mov
ficomps
mov
or
test
add
std
sbb
cmp
sub
lret
test
or
cli
and
lcall
jmp
mov
pop
mov
adc
xchg
adc
mov
add
xchg
dec
and
rolb
aaa
cwtl
jne
push
ljmp
sub
jne
xorb
push
mov
push
mov
movsl
rolb
inc
mov
bound
mov
xchg
xchg
mov
xchg
push
lods
jae
movsb
push
pop
push
adc
cld
cmp
push
and
mov
cmp
mov
push
iret
outsb
push
ss
sahf
shlb
mulb
out
xlat
add
movhps
pop
xchg
push
in
lods
xor
pop
jnp
sbb
jb
push
xor
fbstp
adc
pop
int3
sti
and
cmc
mov
movsb
ret
adc
push
jmp
mov
fnstcw
or
nop
rorl
and
movsb
xlat
or
and
sbb
pop
inc
and
pop
push
out
cmp
xlat
pop
inc
loop
adc
mov
repnz
push
fnsave
outsb
cltd
lds
mov
push
pop
inc
movl
clc
cmpsb
push
push
mov
push
roll
adcb
or
fsubp
rcrb
fisttps
adc
cmp
pusha
xchg
lahf
xchg
adc
je
je
xchg
aas
mov
mov
daa
cmp
pop
fmul
out
subl
ficomps
gs
push
popf
test
sbb
push
push
test
call
fpatan
inc
mov
int3
sub
sarb
int3
jbe
ja
jno
aad
cltd
mov
jno
xor
push
inc
adc
popa
pop
cmp
push
pop
dec
sbb
divl
mov
orb
mov
ja
jmp
xchg
push
aas
mov
test
jle
xchg
rorl
addb
adc
aam
jb
pushf
in
hlt
adc
lcall
loope
pop
in
add
xor
int
add
jns,pn
stc
jbe
cmp
sub
andl
mov
aam
int3
mov
imul
adc
sub
cli
in
sub
repnz
addl
or
iret
je
lea
mov
inc
stos
mov
call
mov
js
shll
mov
push
ljmp
jo
ja
mov
sub
repz
rcr
fwait
push
mov
stos
call
xor
fsubs
dec
mov
int
mov
mov
dec
dec
xchg
sub
rcll
lea
int3
sti
mov
repz
pop
cmp
cmp
ja
and
ss
cmp
add
mov
xchg
mov
lahf
iret
cmpsl
addr16
push
sahf
xor
pop
sub
sub
mov
idiv
fwait
lcall
mov
mov
jp
and
inc
mov
xor
dec
hlt
xchg
pop
in
xchg
cmpsl
mov
aas
push
mov
rcll
push
xchg
xor
inc
add
mov
xlat
adc
data16
sub
mulb
pop
lret
adc
dec
dec
cmpsb
xchg
push
subl
and
and
adc
inc
cmp
js
std
ss
fstl
fsub
pop
pop
inc
out
ret
outsb
and
push
rolb
dec
jmp
sti
in
sbb
mov
jne
adc
cltd
scas
fistps
cwtl
pop
push
adc
push
push
jle
popf
in
cmp
push
and
fstl
shlb
test
leave
xchg
leave
pop
push
dec
inc
test
add
out
xchg
adc
adc
push
sub
push
pop
add
aas
mov
sbb
cmc
sub
sub
icebp
arpl
pop
pop
pop
hlt
ja
and
scas
and
xor
gs
shl
sahf
adc
mov
add
jp
mov
dec
negb
jno
addr16
mov
sub
sub
lret
pushf
mov
repz
push
or
mov
idivb
pusha
push
inc
out
hlt
push
xor
repz
je
mov
lods
add
jg
dec
mov
fcoms
inc
inc
cmp
lahf
push
push
and
or
test
das
addr16
adc
out
out
rolb
stos
movsb
lods
mov
mov
mov
call
cmp
test
das
sahf
add
pop
lret
and
imul
aad
les
pop
gs
dec
jns
adc
ficoms
pushf
sub
bound
es
sbb
mov
mov
mov
or
ret
mov
cmp
add
popf
jbe
sub
push
js
lods
jae
shl
nop
pop
jmp
into
mov
push
adc
leave
cli
div
movsb
hlt
pop
sbb
in
jno
adc
push
sub
or
int3
int3
mov
dec
cwtl
cltd
dec
cmp
mov
sbb
cmp
out
xchg
mov
lds
sbb
jnp,pt
mov
push
mov
cmpb
daa
call
xchg
fsubr
mov
pop
jl
cmp
xchg
mov
pop
sbb
dec
test
comiss
jns
xor
aas
loop
cmp
out
mov
pop
js
andl
clc
cltd
sub
adc
pushf
adcl
mov
dec
ret
mov
mov
pop
icebp
addr16
mov
rol
pop
adc
repnz
and
sub
jb
fcmove
std
ss
sub
jns
or
les
ljmp
pop
add
push
pop
pusha
decb
aad
pop
out
mov
scas
mov
pop
call
into
or
mov
cmp
test
out
dec
fiaddl
outsl
pop
rorb
lea
nop
sbb
dec
hlt
add
in
sbb
jbe
lock
cmp
mov
dec
shrl
outsl
cmpsl
xchg
push
leave
jecxz
jle
xor
sbb
test
cmp
xor
pop
inc
and
ss
sarb
xchg
in
jae
loope
or
addl
xor
jb
stos
stc
imul
lcall
lock
test
gs
loope
add
xchg
jno
es
fisttpl
imul
jo
pop
subl
arpl
outsb
xor
aad
ljmp
loope
mov
inc
pop
insl
pop
cmpl
jb
repz
iret
sbb
scas
push
addb
sub
mov
mov
jp
mov
movsl
adc
and
imul
adc
mov
stos
mov
add
sbb
adcb
test
std
jnp
mov
das
jo
sbb
dec
cld
loopne
jl
jp
xlat
bound
jp
and
push
enter
daa
popa
xlat
xchg
mov
sub
fnsave
cmc
jns
loope
pusha
int3
stc
push
mov
dec
pop
aas
subb
add
dec
add
sub
push
mov
fisubs
cmp
add
aas
push
lret
insl
pop
es
xlat
xchg
pop
mov
xchg
and
sub
lahf
mov
stos
push
cmpl
sbb
cmp
call
movsb
adc
rolb
gs
adc
int
adc
ret
xor
add
mov
mov
adc
or
jae
inc
push
int
and
fsubs
filds
add
mov
repz
mov
ss
test
fists
in
push
cmp
xchg
cmpsl
or
dec
aad
clc
or
adc
lods
fistps
xor
mov
lods
enter
lret
mov
divb
and
out
cltd
ret
ror
xor
sub
mov
mov
ret
cmp
sti
sarl
push
addr16
xor
ret
xchg
pop
mov
adc
lahf
icebp
jae
or
jl
lds
dec
call
push
xlat
fadd
mov
push
faddl
lret
push
pop
lret
jns
popf
sub
dec
lret
std
xor
push
cmc
stos
in
mov
andb
mov
xchg
xchg
cwtl
bound
rcrl
xchg
jbe
pop
inc
sbb
push
push
out
sbb
sbb
leave
mov
cld
jp
pushf
insl
adc
push
add
sub
xlat
pusha
aad
les
xchg
pop
repnz
in
dec
pushf
ljmp
cmpsb
adc
push
jno
in
mov
aas
pop
inc
ljmp
lcall
call
mov
imul
clc
clc
mov
xor
xchg
and
inc
cmpsl
mov
shll
mov
lret
dec
push
lds
xchg
xor
adc
inc
dec
sbb
ljmp
xchg
mov
in
pop
out
xchg
mov
insb
test
test
pop
mov
inc
imul
pop
mov
inc
es
das
out
mov
imul
movsl
or
adc
push
push
adc
mov
mov
xlat
stos
sahf
std
dec
xchg
insl
mov
inc
pop
and
xchg
pop
add
ljmp
test
dec
ljmp
xor
out
dec
shrl
xchg
enter
sub
insl
sub
mov
pusha
inc
hlt
ss
or
ror
adc
inc
sub
testl
xchg
aad
mov
push
dec
mov
mov
cmp
dec
imul
shr
xchg
movsb
aam
aas
out
xor
mov
sti
pop
jne
out
push
das
pop
push
lcall
movsb
stos
movsl
je
jae
mov
pop
clc
repz
push
jmp
pop
and
test
push
sahf
pop
in
fimull
jmp
xchg
out
mov
je
lret
sbb
fcmovb
ret
xchg
into
and
fiadds
sar
test
fsubr
ds
ret
xor
lea
rcrb
cmp
jecxz
aam
xor
inc
ficoms
ret
loop
mov
test
leave
push
xor
gs
sub
dec
rcrb
xchg
sbb
push
mov
sub
mov
shll
lds
xchg
push
add
xchg
push
mov
push
push
repnz
dec
push
repz
jecxz
mov
rorl
mov
rorl
sahf
ret
and
dec
gs
out
icebp
jnp
inc
push
popf
stos
or
sti
cmp
pop
sub
cmp
aad
jmp
mov
add
enter
or
mov
loop
mov
aaa
and
sub
adc
xchg
push
leave
data16
pop
fnstcw
mov
jge
and
clc
loopne
inc
xchg
lea
imul
sti
movl
adc
into
adc
imul
leave
sbb
out
xchg
mov
ds
movsl
aad
pop
ss
push
roll
sub
dec
dec
or
mov
or
fldln2
fsubl
insb
push
add
js
ds
out
adc
pmulhuw
ds
jnp
pop
add
test
mov
flds
cmp
shll
push
mov
mov
add
data16
rcll
mov
xor
es
sti
sub
out
inc
mov
test
sub
jb
fst
pop
jl
and
fadd
sub
jp
adc
mov
rorb
inc
push
jns
add
pop
xlat
jg
das
mov
jae
popa
in
leave
inc
inc
loope
and
mov
out
decl
outsl
sti
and
repnz
fidivrs
push
jg
sbb
cmpsl
sub
fsubr
cli
out
mov
hlt
stos
es
dec
cwtl
js
jp
mov
dec
add
xchg
frstor
sbb
std
inc
add
xor
lahf
xlat
repnz
adc
ret
mov
rorb
pop
repnz
loope
out
out
out
inc
and
ror
std
push
xlat
mov
fwait
test
in
push
es
dec
adc
lret
mov
imul
mov
push
jbe
adc
adc
movsb
push
or
pop
sub
fs
into
das
and
cmp
movsl
out
sbb
inc
jae
xor
mov
and
mov
in
push
clc
push
insb
pop
inc
jb
test
jge
inc
leave
mov
lret
pop
adc
popa
jnp
adc
sub
outsl
adc
data16
test
jecxz
into
xor
xchg
mov
sbb
adc
inc
arpl
ret
mov
adc
aam
aas
sub
leave
sbb
leave
xor
mull
dec
push
pop
or
nop
push
push
pop
add
mov
cmp
in
cltd
clc
out
lret
insl
cli
lret
popf
into
dec
les
movb
pop
outsb
in
sbb
es
mov
in
leave
xchg
mov
mov
ret
pop
rcrb
lods
pop
lock
and
push
cmc
outsb
cmpsl
std
aad
addr16
cmp
mov
adc
jg
xor
mov
test
stc
xchg
test
push
inc
jmp
cmp
out
xchg
lcall
cld
pop
adc
mov
cmp
lea
add
orl
outsl
popl
cmp
inc
pop
loop
andb
push
xchg
imul
rcrl
sti
mov
xlat
or
xchg
or
jbe
pop
lret
out
push
ret
test
sbb
mov
inc
push
sub
mov
shll
cmc
jae
mov
fisubrl
jnp
jb
into
sub
pop
shl
mov
loop
adc
pushf
mov
in
pop
and
cld
or
mov
jl
inc
sarb
bound
dec
dec
into
js
enter
out
pop
mov
rol
jg
inc
cmp
mov
leave
lea
cmpsl
mov
xchg
in
jno
test
fbld
xor
jae
xor
add
ret
data16
fcoms
cltd
negw
aad
gs
cmpsb
je
shlb
ljmp
or
cli
ja
or
es
in
and
push
leave
and
dec
push
push
dec
lds
push
out
enter
aad
xor
mov
dec
dec
inc
adc
popa
mov
dec
cmp
out
dec
lods
xchg
pop
das
mov
into
push
mov
js
sub
mov
cld
iret
ss
jg
xorl
inc
orb
scas
pop
repz
mov
push
adc
es
inc
jecxz
add
xor
xchg
sub
jmp
sub
je
loope
cmp
shlb
mov
int
and
popa
xchg
fwait
jbe
mov
bnd
sub
lods
js
fstps
sub
xchg
out
xchg
jg
sahf
pop
subw
icebp
lods
add
pop
or
mov
movsl
or
mov
es
sub
pop
es
or
jmp
sbb
xor
sti
or
adc
pop
jnp
das
mov
push
jmp
sbb
imul
sbb
mov
jmp
stos
mov
inc
dec
gs
cmp
add
mov
cld
jp
stc
mov
jge
xor
fdivs
add
jp
dec
decb
dec
add
fisubrs
push
bound
test
ja
or
mov
loop
test
xchg
pop
pop
jmp
mov
sub
sbb
ljmp
xor
test
fdivl
lcall
xchg
rcrl
out
jmp
adc
stc
stos
fisubs
lea
pop
mov
out
mov
push
jg
inc
ja
mov
aas
cmp
xchg
xor
xorb
nop
repnz
mov
lds
into
mov
add
int
hlt
cmp
fdivrs
mov
fcom
inc
jo
cmp
lret
mov
jp
jl
sahf
dec
loopne
rolb
fsubl
leave
push
xlat
xchg
mov
aas
cmp
shrb
sub
cwtl
in
outsl
dec
std
das
shl
dec
bound
std
arpl
pop
iret
iret
jbe
xchg
lock
sarl
fs
ss
sbb
xor
shlb
dec
insb
ret
lret
adc
pop
in
outsl
addl
int3
sbbl
and
movsl
and
dec
xor
sbb
scas
xchg
inc
fnstenv
dec
jp
icebp
adcl
mov
add
and
inc
and
sbb
or
loopne
push
scas
popf
iret
mov
inc
mov
test
dec
fisttps
sbb
mov
cmpb
add
cld
roll
push
ljmp
dec
and
push
test
es
cwtl
imul
jbe
pop
retw
sub
push
jmp
popl
test
dec
inc
push
ret
cmp
decl
push
test
and
sti
je
dec
fnstenv
lds
push
push
and
xchg
stos
cmp
or
loop
push
inc
ret
std
mov
in
jns
lds
andb
sbb
mov
mov
repnz
mov
mov
addr16
pop
inc
js
mov
repz
in
ds
hlt
xchg
and
pop
sbb
sub
xchg
sub
in
mov
aad
imul
xor
out
fwait
dec
add
and
je
dec
sti
push
add
into
imul
addb
test
mov
add
xorb
mov
movsb
arpl
stos
dec
scas
sub
mov
dec
dec
imul
in
mov
loope
xor
dec
pusha
and
in
inc
mov
loope
in
sub
jp
pushf
cmpsl
rol
jno
mov
or
int3
fisttpll
out
in
negb
cltd
push
ret
lock
mov
fldenv
outsb
mov
dec
icebp
hlt
fs
add
inc
cwtl
mov
jbe
cmp
or
and
inc
mov
push
sti
into
pop
loope
mov
pusha
push
out
adc
cmc
lods
pop
ror
and
fcomip
mov
sub
cmp
sub
add
xor
fdivrl
cmp
out
ljmp
lahf
pop
add
shlb
add
inc
test
jl
addr16
ficompl
aas
call
dec
stos
notl
push
or
pop
cmp
cmp
stos
push
jmp
adc
repz
movsb
sbb
std
inc
xchg
push
xchg
not
lods
mov
rorb
cli
sub
mov
adc
ds
and
push
push
jno
mov
lahf
in
xchg
lahf
fs
adc
int
enter
mov
mov
and
adc
xchg
push
mov
repnz
es
inc
adc
sti
clc
fmul
sub
and
mov
ret
push
push
test
push
pop
in
push
lods
lock
jo
jb
sub
sbb
push
jle
std
xlat
xchg
stc
cmp
bound
cmp
mov
scas
out
sub
leave
pushf
jge
dec
fisubrl
jge
add
popf
adcl
jnp
inc
in
sbb
popf
lahf
sahf
les
movsb
gs
dec
rolb
fcomi
xor
add
push
jae
inc
and
push
fs
fwait
cmp
add
mov
scas
pop
add
mov
or
adc
jg
std
scas
push
xlat
push
cld
stos
sbb
idiv
xchg
ret
decl
movsl
inc
xor
clc
xchg
pop
rclb
lcall
inc
fs
and
mov
push
inc
daa
dec
cmpsl
inc
stc
jl
sub
pop
call
adcb
hlt
les
dec
jb
xorb
aaa
or
sbb
sub
imul
jbe
pop
inc
cmp
lahf
jae
mov
and
mov
or
roll
ja
xor
mov
push
out
cwtl
ljmp
shl
xchg
sub
sbb
lds
pop
sahf
aad
cmp
jle
jge
or
ljmp
xor
push
in
cmp
xchg
scas
cmp
mov
nop
inc
loope
les
ret
ret
test
adc
and
fstps
and
jno
call
lret
or
pop
lods
incl
pop
in
add
xorb
dec
in
inc
sbb
pop
xchg
out
cs
stos
or
pop
daa
push
sbb
xor
push
out
xchg
vpaddw
xchg
popl
sub
cltd
push
push
dec
sbbb
fistpl
je
dec
or
jns
scas
shr
jp
push
jmp
out
cvtps2pd
test
leave
mov
add
sub
mov
add
sbb
das
push
ja
and
jne
push
mov
jae
stc
push
inc
lods
int3
sti
fiadds
adc
jbe
mov
pop
popw
pop
xchg
sbb
cmpsb
stos
clc
add
mov
dec
cltd
push
cmp
out
xchg
sahf
adc
jne
push
mov
out
and
insl
in
pop
inc
aam
jo
mov
xchg
pop
je
mov
bound
subl
pop
dec
sahf
cwtl
cmc
mov
or
int
das
incl
ljmp
pop
inc
sbb
int
sub
aad
cmp
lock
icebp
ficoms
inc
movb
push
jecxz
mov
or
inc
out
mov
subl
sub
das
std
or
sbb
shr
pop
push
dec
mov
push
insb
lahf
push
imul
xor
int
mov
add
test
pushf
xchg
jne
xchg
inc
add
ret
xchg
or
icebp
mov
adc
out
sub
data16
mov
loopne
and
sbb
in
fs
xor
jl
ss
adc
or
dec
aam
adc
cmc
ret
mov
gs
mov
cmpsb
adc
outsb
xchg
pop
sbb
leave
xor
add
mov
push
xchg
jg
hlt
adc
out
jp
adc
mov
fwait
dec
mov
pop
into
aad
pushf
xor
add
test
stc
stos
mov
scas
fucomp
xchg
xor
jg
mov
mov
ljmp
ret
ds
pushf
ret
mov
sub
popf
mov
inc
cwtl
cwtl
cmpsl
add
gs
push
ret
fmuls
push
arpl
leave
fildll
test
and
bound
jb
inc
jbe
xor
test
push
aad
repz
subl
push
cmp
dec
addl
in
leave
push
add
dec
dec
daa
jp
add
add
fsubrs
add
sarb
mov
shlb
js
jecxz
insb
lds
dec
aaa
push
mov
mov
inc
bound
jmp
dec
call
jg
xchg
dec
or
cmp
fwait
loop
icebp
pop
jecxz
mov
mov
xchg
xchg
loopne
jae
sbb
adc
adc
cld
adc
xchg
dec
iret
fmull
xchg
lea
sarb
fidivrl
sti
flds
or
push
mov
pop
jmp
cmp
jb
stc
fstpl
cmp
push
fcomps
xor
or
shl
add
cmp
pop
out
call
push
mov
je
push
gs
adc
iret
jns
xchg
stos
mov
inc
stos
insl
lcall
loop
aam
enter
xorl
and
or
ljmp
ss
mov
xor
loopne
daa
cmp
int3
xchg
lret
xchg
mov
xor
cli
inc
push
loope
mov
dec
xchg
pop
shrl
adc
or
call
jae
cmpsb
inc
mov
mov
outsb
mov
mull
fimull
enter
pusha
jp
jge
int3
cmp
mov
aas
mov
push
iret
or
dec
loope
les
mov
in
jmp
xchg
adc
add
lods
popl
push
sbb
int3
ss
sub
push
jge
jnp
xor
dec
jecxz
add
aaa
test
cmpsb
pusha
xchg
dec
in
fnclex
into
xchg
add
in
sub
fdivl
xorb
notb
cmp
cmp
sub
shl
imul
ss
je
aad
popf
loope
dec
movsl
mov
shl
add
pop
xchg
mul
push
push
cmpsb
lds
or
jmp
iret
push
in
popa
cld
aad
lcall
jne
xlat
insb
mov
mov
adc
push
aad
pop
js
cmpsb
cwtl
and
push
neg
sub
jbe
mov
sbb
insl
and
imul
and
dec
cwtl
notl
mov
xor
notb
cwtl
add
in
jo
test
pop
sub
outsb
gs
mov
call
sub
gs
notl
rorl
addl
mov
stos
adc
pushf
enter
mov
adc
mov
popf
les
aam
bound
mov
cltd
shlb
adc
sub
int
fcoms
ja
ljmp
sbb
aad
popa
sbb
xchg
add
leave
hlt
push
cltd
imul
add
pop
daa
in
lcall
test
push
arpl
decl
jo
sub
scas
out
or
or
lea
jns
cld
aas
lods
sub
xchg
mov
aaa
mull
loopne
and
mov
clc
adc
xchg
fsts
test
sbbl
ret
mov
int3
mov
xor
cld
les
or
jge
or
dec
in
pop
inc
xchg
out
or
ljmp
dec
popa
mov
mov
scas
lcall
outsl
or
hlt
dec
mov
push
push
pop
cmp
int
push
pop
push
pop
cmp
jb
je
and
inc
or
sbb
jbe
mov
imul
aam
divl
mov
inc
sbb
jnp
scas
std
add
pushf
cwtl
cli
stos
cmp
sub
push
and
inc
sbb
ss
jno
les
inc
test
mov
fldl
inc
dec
or
inc
sub
pop
ds
mov
inc
test
fidivrl
pushf
mov
std
jae
pop
xchg
xchg
sbb
sbb
cltd
or
int3
push
mov
aam
or
dec
or
push
xchg
leave
out
pop
movsb
sarl
pusha
aad
sub
xor
or
mov
xlat
data16
and
inc
sti
lock
mov
sbb
lea
arpl
andb
fsts
fists
fcmove
push
cmp
aas
mov
xor
loopne
iret
daa
mov
cmpsl
lods
xor
fwait
js
inc
std
cld
rclb
ja
dec
pushf
hlt
frndint
and
or
lahf
dec
mov
sbb
mov
aaa
cmpsb
add
add
mov
pushf
or
sub
sti
push
call
je
push
cmpb
pop
sbb
cmp
aas
ja
inc
pop
and
stc
xorl
sub
aaa
cmp
inc
pusha
fcmovnbe
repz
jle
ror
xchg
xor
add
pop
scas
outsl
push
adc
loopne
mov
fists
in
push
daa
lods
add
ja
and
daa
sbb
xchg
repz
push
dec
das
jbe
cs
xchg
push
mov
sbb
and
int3
outsl
dec
push
dec
inc
sbb
push
pop
pop
in
mov
mov
clc
sub
std
cwtl
push
add
ljmp
ret
aaa
or
push
aad
cmp
pusha
mov
lret
jae
push
clc
adc
movsl
push
dec
ja
aaa
jne
popa
popa
ret
cmpsl
pop
flds
sbb
clc
insb
push
inc
gs
imul
xor
inc
sub
cmp
lock
sbb
or
sti
stos
pop
lods
loope
imul
in
and
mov
mov
pop
movsl
sbb
fs
jmp
inc
rol
cli
fcomps
test
cmpsb
xor
adc
ret
mov
push
loope
int
movsl
cmpsl
push
push
loop
xor
lcall
cmp
iret
ja
lret
jge
lret
int3
jmp
stos
xchg
xor
jbe
sbbl
xor
sbb
popa
ret
mov
mov
sub
pop
push
fbstp
bnd
shll
stc
sub
pop
push
xor
add
sub
adc
int
adc
add
and
and
call
jo
popa
cmp
pop
or
sub
mov
mov
scas
into
mov
fsubl
mov
fistpll
lahf
out
mov
jmp
adc
cmp
roll
in
mov
stos
testb
dec
cmp
push
jb,pn
push
fcmovbe
fstcw
inc
sbb
xor
andb
in
scas
sbb
jns
pop
rolb
loop
mov
and
cld
pusha
inc
or
jnp
movsl
rclb
pop
cli
sbb
test
cmp
add
adc
lret
push
xlat
stc
orl
icebp
xor
pop
cmp
rorb
adc
sbb
fcoms
push
cmp
add
mov
jno
clc
mov
ret
and
sub
pop
jb
sbb
loopne
lods
in
add
lret
out
incb
jae
scas
or
sbb
sbb
pop
cmp
cmp
stos
pop
movsb
insl
lahf
and
jp
inc
aad
out
cmp
inc
int
mov
popl
or
sbb
push
xchg
mov
out
mov
in
das
test
enter
cld
dec
aas
ja
xor
xor
fistl
das
adc
cmp
mov
test
mov
mov
pop
mov
shr
dec
jae
mov
incb
arpl
test
mov
ret
test
or
lods
pop
mov
cmp
xorl
mov
cmpsl
loop
xchg
cltd
mov
clc
shl
stc
repnz
xchg
jge
pop
dec
mov
shl
or
sbb
jae
jno
jmp
inc
lret
jae
sbb
xor
movzbl
inc
outsb
mov
subps
popf
sbb
jbe
push
leave
xchg
cmp
lret
or
in
add
mov
das
leave
sub
rcl
adc
jl
loop
enter
test
leave
movsl
mov
push
or
out
repz
mov
jbe
call
sub
imul
push
ficoml
jo
pushl
stc
loope
rcrl
push
push
scas
mov
outsb
inc
cli
push
sub
inc
ljmp
add
dec
arpl
outsb
cwtl
pop
es
movsb
mov
xor
mov
pop
fildll
loop
mov
fdivrl
test
arpl
xchg
mov
out
sub
push
aaa
and
rclb
cmp
jbe
or
je
ret
sub
dec
call
xchg
cmp
roll
and
push
lock
mov
xor
or
test
outsl
dec
mov
outsb
out
inc
filds
stc
shlb
sbb
out
mov
gs
pop
clc
loopne
shr
and
jno
pop
mov
add
out
push
mov
pop
inc
lods
fldz
andl
mov
xor
mov
fildll
fsubp
incb
int
fistpll
jnp
jg
pop
ljmp
subb
aad
adc
sub
mov
lret
mov
jbe
sub
in
add
xor
dec
frstor
pop
inc
and
or
adc
xchg
mov
rolb
jecxz
out
and
mov
out
sbb
sahf
cmp
fimuls
xchg
int
cmp
mov
mov
lods
aam
sbb
int3
sub
rcr
and
and
sub
rcll
lahf
je
push
cmpsl
push
cmp
mov
adc
js
imul
push
repz
or
adc
fidivl
adc
sbb
addl
push
jl
push
dec
insb
pop
adc
test
jno
test
xchg
js
mov
test
cmp
jnp
jno
jge
negb
mov
adc
adc
outsb
jge
jge
and
les
cli
cmp
push
adc
pushf
mov
outsb
sub
outsl
or
or
fnstenv
or
and
inc
cmpsl
ret
mov
jmp
shlb
or
adc
mov
or
inc
pop
roll
daa
mov
in
cmc
adc
xchg
das
mov
loope
into
sarl
push
and
inc
out
dec
xchg
popf
in
sbb
mov
add
xor
fsubp
dec
cli
sti
sbb
cltd
cmpsl
iret
or
cmpsl
cli
das
das
push
call
mov
push
mov
add
or
cmovns
push
cmp
adc
test
xor
sbb
rcll
das
enter
call
or
sbb
hlt
ror
pop
sarb
adc
or
mov
aas
sbb
mov
ss
jne
out
cmp
out
in
mov
sbb
adc
icebp
pop
inc
mov
jl
xor
shrd
sub
scas
ss
pusha
int
call
sar
mov
fistpl
lea
shlb
mov
cmc
cmpsl
sub
inc
cmp
ss
pop
xor
push
pop
push
and
fistps
in
jle
nop
mov
xchg
and
xor
xor
dec
mov
push
or
mov
out
push
push
pop
xor
mov
pushl
lods
leave
and
imul
cmpsl
sbb
adc
dec
sub
lods
outsl
and
mov
iret
mov
dec
mov
mov
lcall
cld
test
mov
inc
shll
cltd
cmp
out
xor
clc
and
movsl
cmc
sbb
xlat
cwtl
clc
pop
sbb
cltd
jg
sub
jbe
repz
inc
insb
outsl
cmp
xor
cli
push
xchg
insb
dec
cmp
test
out
es
mov
in
xor
sahf
jbe
sahf
and
testb
inc
cmc
fs
addb
fdiv
fnsetpm(287
ret
outsb
mov
cld
push
mov
movb
sub
shlb
mov
or
and
jle
repz
cwtl
pop
fldcw
popa
xchg
xchg
add
mov
and
jge
push
movups
aam
sbb
leave
das
push
int3
je
cmp
push
xchg
dec
test
mov
test
hlt
xor
pop
stos
mov
mov
addr16
and
cmp
rclb
and
jae
mov
jo
adc
xchg
shl
jg
cmp
adc
cmp
cmp
in
aas
sti
lds
add
dec
inc
jmp
out
imul
inc
pop
pusha
sarb
arpl
jns
aad
or
sub
push
lret
jmp
add
xor
jmp
insl
adc
mov
test
mov
pop
mov
pop
jne
mov
mov
inc
cmp
mov
cmp
xor
aad
leave
push
aaa
das
pop
lds
pop
sub
xor
inc
sub
imul
gs
jg
imul
xadd
sub
ret
stos
or
es
xchg
cli
nop
aaa
in
pop
jl
adc
mov
lret
mov
idivl
ret
lock
scas
or
sahf
aad
mov
shlb
ja
fmull
push
das
xchg
inc
inc
in
mov
lahf
adc
stc
or
arpl
xchg
fs
icebp
out
xchg
pushf
fucomp
cmp
gs
sbb
idivb
cmpsb
ss
or
daa
jbe
into
pop
inc
inc
mov
push
mov
inc
sbb
xchg
jg
dec
xchg
out
sarl
xchg
inc
dec
in
adc
mov
or
lods
push
cmp
pop
std
addr16
mov
clc
xor
pop
in
push
aad
add
adc
jmp
lea
dec
mov
loopne
fwait
and
outsl
pop
mov
lcall
adc
test
fs
mov
out
add
sbb
nop
mov
sbb
push
jae
sbb
add
push
jnp
mov
push
xchg
or
add
xchg
fstpl
das
push
jae
pop
or
cmp
mov
mov
cmp
popa
and
mov
ljmp
cltd
stos
mov
pop
mull
test
popf
insl
jb
push
cld
dec
cmp
aas
or
aam
popa
test
inc
pusha
call
add
fs
and
mov
jb
jecxz
rorb
mov
sub
cli
jl
inc
shr
lret
cli
push
les
fucomip
mov
repnz
loope
rcll
shl
mov
adc
mov
repz
sbb
in
sub
sti
pop
shl
enter
aam
in
cld
xor
movsl
push
xor
push
stc
out
cmp
aas
jo
jbe
adc
xlat
clc
jg
out
push
int3
and
jbe
orb
push
out
icebp
jecxz
lea
sahf
aas
pop
dec
cmp
xchg
les
xchg
inc
push
pop
fiaddl
pop
pop
fwait
aas
stc
or
xchg
mov
in
aad
pop
push
ljmp
lret
mull
ds
xor
xchg
fdivrp
mov
or
jbe
jg
loop
shlb
mov
jg
cmp
jp
sub
adc
fs
pop
push
je
pop
lcall
int3
shll
and
pop
gs
and
jnp
enter
push
push
scas
insl
fisubrl
jb
lds
pop
daa
cmc
cmpsl
sbb
push
inc
pop
das
les
mov
mov
add
inc
test
cli
in
and
cmpsb
popa
cs
cltd
fucom
addr16
in
cs
mov
jno
xor
fcoms
pop
jb
iret
push
cltd
jnp
push
fnstcw
cmp
cli
andl
jp
adc
loopne
les
das
mov
push
sub
mov
add
ss
loop
shrb
mov
sbb
pop
jbe
pushf
scas
loop
jg
movsl
shrb
xor
adc
pusha
pop
pop
lret
test
dec
lods
mov
movsb
mov
daa
das
rcl
pop
lods
insb
mov
dec
ret
pop
lret
push
cmp
cmp
loopne
cltd
fs
imul
sub
cli
jg
mov
xchg
or
xlat
add
bound
pop
pop
push
dec
inc
adc
ljmp
or
ror
adc
inc
mov
sub
xchg
mov
mov
pop
jns
in
stos
push
das
dec
repz
sub
das
pushf
movsl
test
into
movsb
add
adc
mov
mov
mov
adc
pusha
mov
ret
jg
mov
jmp
add
and
test
and
js
movnti
mov
fxtract
out
hlt
mov
push
mov
mov
test
inc
push
push
mov
sub
data16
mov
push
iret
push
cli
mov
lea
pop
rcr
aaa
cli
sbb
xchg
fisubl
jb
scas
dec
ss
insl
cmp
flds
push
inc
and
test
ljmp
mov
xor
loope
xchg
insl
push
adc
and
mov
aad
and
xor
adc
in
call
xchg
add
in
inc
push
adc
jmp
insl
push
psrlq
mov
pop
into
mov
jno
mov
xchg
mov
and
andl
inc
jecxz
adc
push
gs
mov
addr16
clc
push
mov
sub
insb
shl
sbb
jno
mov
movsb
loopne
xchg
daa
shll
dec
es
sbb
xorl
xchg
cmpsb
fcmovbe
loopne
xor
cmpl
stos
lcall
out
push
dec
lcall
xchg
pop
and
sub
rorl
and
andb
in
rcr
mov
ret
popa
jb
lcall
cwtl
mov
adc
mov
cmp
fnstenv
dec
addb
pop
sub
lcall
je
xor
shlb
dec
test
cmp
cmp
and
pop
imul
cmpsb
scas
mov
add
adc
ljmp
sbb
pusha
mov
decl
add
jns
lods
popf
inc
jecxz
in
insl
mov
dec
pop
jae
jp
outsl
std
push
mov
pop
in
jno
mov
jae
jle
test
int3
int3
sbb
stos
inc
icebp
sti
pop
cli
call
test
push
jbe
ja
imul
stos
fisubrl
popf
rclb
sbb
push
sub
imul
insl
inc
sub
mov
sub
and
push
mov
sub
and
in
jle
xchg
mov
cmp
and
mov
dec
lods
mov
xor
sahf
mov
lret
pop
mov
jge
out
das
cld
js
ljmp
clc
mov
sub
adc
xor
pop
test
andb
scas
cltd
push
sub
lods
lea
addb
andl
push
or
jecxz
cmp
sti
movsl
ret
mov
jg
fwait
xor
add
data16
in
adc
or
xor
lods
jl
add
cli
or
jo
imul
mov
popf
xchg
xor
movsl
stos
mov
movsb
pop
outsl
dec
adc
test
cmp
mov
cs
in
pop
sub
fcoml
es
mov
mov
push
popa
loopne
lock
bound
and
icebp
test
fwait
clc
pop
dec
fisubrl
xchg
imul
call
mov
insl
jo
sbb
into
iret
hlt
test
cmp
jnp
repnz
shrb
add
sbb
jns
inc
mov
mov
add
mov
daa
xchg
adc
lock
mov
add
mov
xor
adc
fwait
das
movsl
dec
scas
mov
sti
roll
inc
dec
imul
pushf
xor
dec
int3
popa
xor
arpl
std
xchg
xor
cmp
add
test
jae
mov
or
and
repz
clc
ret
push
fldt
insl
sahf
jp
pop
les
cwtl
pop
or
sub
das
inc
mov
dec
inc
and
mov
pop
stos
jmp
push
roll
wrmsr
icebp
mov
jmp
jmp
adc
dec
mov
xchg
mov
pop
sub
out
cld
and
lret
aas
sub
jbe
mov
jecxz
inc
mov
xchg
pusha
sub
sarl
aas
loope
gs
sete
or
pop
mov
push
sub
mov
inc
xchg
push
adc
mov
or
sub
jno
je
adc
shlb
push
push
xchg
sti
cld
pop
movl
clc
repnz
or
int3
inc
mov
push
jne
in
cmp
int
add
stc
cmp
dec
ja
ret
fsubrs
movsb
stos
cmp
shlb
lret
pop
jge
sti
loope
push
xchg
fnsave
mov
jecxz
in
gs
stos
push
push
jle
xchg
mov
arpl
xchg
jp
jg
xchg
or
cmpsl
dec
pop
dec
pop
inc
out
sti
imul
push
fidivrl
repnz
rorb
jl
stc
fcoml
cmp
add
rolb
movsb
mov
fwait
js
imul
int3
or
loope
jns
stc
add
or
adc
fs
std
xorb
sub
mov
pop
mov
add
in
clc
sbb
add
test
push
xchg
jle
nop
lock
movsl
rcl
imul
jg
inc
scas
jmp
mov
pop
test
pop
xor
xchg
push
adc
jmp
mov
push
int3
idivb
adc
loopne
pop
xchg
mov
loopne
push
mov
mov
stc
jo
push
pushf
js
not
mov
clc
lcall
add
or
inc
mov
lret
sub
fisubs
pop
jg
xor
xor
lcall
jne
aad
iret
mov
add
push
cltd
ja
jge
ljmp
cwtl
aad
fiaddl
mov
shrb
dec
into
push
xor
in
cli
fildl
xlat
jb
cltd
jns
pusha
push
add
xchg
adc
pop
scas
mov
push
fdivl
aad
popa
dec
fistpl
mov
mov
mov
or
inc
mov
loop
out
xor
ret
jns
jae
adc
or
sbb
pop
mov
push
sbb
jnp
rcrl
or
outsl
cwtl
push
jo
pop
sbb
test
inc
xor
xor
ret
xchg
scas
adc
cwtl
mov
push
lea
push
lock
aaa
in
sub
push
sarb
aas
out
jae
je
outsb
inc
xor
mov
pop
popf
mov
loope
ja
ss
pcmpeqb
fs
add
and
fs
fsts
mov
dec
inc
mov
adc
pop
xchg
lock
cmc
add
mov
mov
loope
lea
movsb
cmp
dec
cmp
cltd
add
jl
mov
cli
push
mov
adcb
rcl
je
out
das
cmpsl
negb
ljmp
mov
xchg
mov
inc
sub
cmp
fsubr
mov
ret
in
sub
adcb
or
xchg
xor
mov
and
mov
xor
js
imul
cmp
mov
jne
jb
insb
jmp
push
leave
addr16
mov
outsb
xchg
adc
mov
mul
shl
movsl
pusha
pop
xor
hlt
cs
test
movsb
or
icebp
loop
add
cmpsl
dec
fldenv
mov
pushf
xchg
inc
mov
stos
cmp
dec
imul
cmp
cwtl
xor
mov
js
aas
xor
sub
xchg
mov
int
in
add
les
add
iret
aam
adc
push
iret
xchg
xor
xchg
bound
cmp
add
jns
and
sbb
jnp
cmp
xor
addr16
dec
into
push
fistpl
popf
stos
arpl
sbb
mov
pop
lahf
lds
jbe
dec
idivl
mov
test
loopne
cli
mov
xchg
mov
aaa
mov
subl
inc
lret
mov
fadds
dec
cmp
imul
dec
pop
or
or
xchg
push
xchg
iret
scas
cmp
pop
xor
pop
out
mov
call
sub
xor
jmp
and
xchg
push
adc
mov
scas
pop
aad
into
in
repnz
sbb
jae
push
push
sbb
and
xchg
es
std
lret
xor
enter
hlt
dec
scas
aad
push
jl
push
int
mov
dec
mov
add
mov
adc
sbb
cltd
fists
cld
jl
jo
das
jl
push
arpl
jmp
xlat
repz
cmpsl
xchg
mov
jnp
sbb
jl
xor
mov
xor
xor
mov
adc
shrb
shr
rorb
sbb
inc
in
pop
dec
out
imul
mov
or
jp
rorb
andb
subps
dec
xor
pop
mov
dec
andb
scas
sbb
loop
inc
cmp
cwtl
loope
sbb
pop
lcall
test
pop
int
adc
pop
sub
cmp
shrb
add
pop
inc
jge
pusha
jnp
mov
push
mov
sbb
jp
aaa
xchg
hlt
mov
cmpsl
or
iret
lods
js
daa
jb
fcoms
orb
inc
pop
push
outsl
push
mov
lods
mov
leave
testb
push
dec
in
arpl
addr16
outsb
mov
fadd
inc
jl
movsb
fists
mov
jno
movsl
mov
mov
jle
xchg
mov
inc
xchg
mov
sub
mov
stos
pop
pop
loopne
outsb
jae
mov
insb
push
dec
fisubrs
jmp
pop
outsl
mov
and
test
jge
addr16
push
add
out
mov
dec
xchg
mov
ja
mov
dec
add
or
cwtl
sbb
pop
mov
outsl
xor
dec
xchg
out
push
shlb
lret
adc
cmp
fistl
inc
mov
xor
pop
mov
pop
mov
mov
dec
and
pusha
mov
mov
orl
xchg
xlat
add
dec
aas
shlb
xor
jmp
pop
inc
iret
sub
dec
jg
ret
mov
loop,pt
push
in
inc
mov
in
add
sub
ja
mov
movsb
mov
movsl
cmp
jo
mov
push
cmpsb
mov
dec
gs
jmp
sbb
or
fsubs
mov
cli
push
call
or
lods
sub
dec
mov
and
sub
xchg
dec
cld
inc
dec
cmp
mov
inc
add
or
aas
movsl
adc
sbb
push
dec
sub
pop
sbb
popa
ja
inc
pop
add
lea
jo
stos
ret
into
fcomp
in
jg
cmpsb
fadds
mov
mov
shll
hlt
bnd
pop
cmc
push
push
lret
pushf
pop
sbbb
rorl
add
xor
jae
in
dec
fmul
or
movsb
in
out
jbe
push
xchg
mov
shrb
cmp
sub
mov
xor
xor
adc
gs
xor
xchg
and
das
fildll
loop
sbb
cmp
fsubl
mov
jb
cltd
js
mov
lds
mov
ficompl
push
cmp
add
mov
aam
outsl
cmp
ficompl
xchg
aaa
pop
aaa
inc
pop
clc
xchg
in
mov
orb
mov
xor
sbb
stc
push
pop
dec
iret
je
daa
mov
sti
fiadds
sub
cltd
push
pop
jno
aam
sub
sub
fcoms
adc
into
lahf
pop
dec
popa
fmuls
dec
test
lods
jge
icebp
pop
xchg
xchg
ds
shll
pop
pop
push
ficomps
xor
cmp
mov
inc
pop
mov
loop
ds
jmp
es
repz
out
jae
push
inc
cmpsb
mov
mov
mov
icebp
call
test
sbb
jle
in
sub
js
pop
adc
xchg
jp
repz
jne
sbb
mov
je
int
insb
sbb
imul
mov
outsb
sar
dec
iret
pop
push
test
xor
dec
and
data16
scas
inc
cmpb
adc
cmc
pushf
adc
lods
push
divl
int3
mov
popf
or
roll
add
adc
jb
add
pop
sti
xchg
test
cmp
cmp
cs
stos
pop
mov
push
sub
std
jno
push
out
push
repz
jmp
insl
ja
cmp
pop
loop
pushf
adc
sub
push
inc
pop
mov
ja
clc
mov
outsl
pop
mov
cs
loope
mov
adc
push
movsl
es
mov
xchg
cmp
cli
imul
stos
pop
sti
rcll
adc
lea
scas
popa
aad
inc
dec
clc
jmp
sti
in
ds
mov
imul
mov
push
scas
mov
nop
inc
dec
sahf
mov
and
rolb
mov
push
adc
cwtl
jnp
pop
cmc
cs
daa
and
sbb
mov
addr16
sbb
lods
or
pop
cld
add
fisubs
fnstenv
push
pop
loope
outsw
cmp
repnz
mov
lcall
xchg
add
sbb
scas
xchg
xor
lcall
sbb
or
adc
mov
clc
loope
ljmp
mov
test
mov
add
mov
fmuls
fldl2e
daa
movsl
divb
orb
mov
sub
shll
mov
sbb
into
jle
or
push
jns
movsl
movsb
jo
mov
push
inc
push
insb
in
clc
mov
mov
sbb
pop
push
jo
ffreep
inc
int3
push
in
push
mov
lods
loopne
outsl
shl
outsb
jge
or
ret
sar
nop
rolb
out
mov
sbb
sub
pop
shrl
sbb
add
scas
insb
lcall
dec
sub
roll
loope
add
xor
shl
jle
jmp
pop
aam
push
jno
mov
sahf
shlb
xor
or
sub
insl
ret
ffree
fistps
xor
add
cld
test
pop
mov
fs
xor
loopne
aad
out
push
test
mov
outsl
xchg
imul
sub
in
aam
mov
and
cmp
or
pop
lcall
adcb
sub
mov
jmp
mov
pushf
sti
cltd
add
fiadds
xchg
inc
push
xorl
cmpsl
dec
test
xchg
jo
sbb
ret
mov
cmpsb
enter
cltd
push
outsl
xor
sbb
sbb
xchg
jae
pop
push
lret
pop
mov
cmpsb
dec
jle
lcall
aas
mov
jecxz
lret
add
lock
jp
addr16
cmp
jne
xor
add
decb
call
and
daa
outsl
mov
enter
insb
cmp
cmp
cltd
in
add
mov
shrb
jb
cwtl
adc
pop
into
cltd
xchg
xlat
mov
xor
pop
pop
add
mov
gs
rcrl
movsl
icebp
shl
add
adc
aas
aam
xchg
xchg
paddusb
andb
fimuls
mov
js
sub
or
and
lahf
mov
mov
push
gs
aas
and
pop
lea
ja
dec
add
data16
adcb
dec
pop
leave
cld
loope
push
jmp
jmp
repnz
inc
lods
xchg
push
icebp
out
jae
loopne
mov
xorb
jmp
adc
lret
pop
mov
xor
cmp
or
not
pop
dec
dec
leave
fisubs
std
mov
stos
push
dec
shll
pop
add
lret
adc
sub
or
lret
xchg
int3
sbb
sbb
loopne
jmp
call
jmp
out
mov
mov
dec
pop
repnz
inc
pop
xchg
inc
enter
jno
test
sub
dec
cmc
sbb
sbb
lea
mov
pop
imul
xchg
ficompl
xor
xor
push
out
cmc
or
cmp
inc
cmc
or
das
pop
ss
insb
sarb
adc
daa
mov
call
inc
aam
dec
dec
jg,pn
mov
jb
movsb
or
jmp
pop
std
cmp
lret
lret
sbb
cmpsb
sbb
inc
test
fdivrl
std
jnp
inc
repnz
cmpsl
and
dec
loop
push
rorl
subl
movsb
mov
in
mov
xor
sub
sub
push
scas
inc
mov
mov
and
into
ret
pop
lock
dec
and
mov
add
out
mov
and
mov
adc
movzwl
cli
jnp
and
add
jbe
je
dec
enter
icebp
bsf
rcrl
push
cmp
jl
cltd
dec
sub
cmp
mov
push
shrb
divl
push
leave
jno
pusha
xor
andb
btr
stc
loopne
in
clc
stc
pop
push
mov
inc
mov
push
sub
sbb
scas
je
or
repnz
test
xchg
insb
mov
test
xor
add
lret
adc
pop
aas
or
lret
xchg
stos
cltd
stos
in
mov
mov
push
cmpsl
xorb
mov
inc
gs
loopne
inc
loop
addb
and
push
pop
jae
aaa
and
enter
adc
fnstcw
test
xchg
stc
lea
xor
push
pushf
repnz
xchg
int
inc
hlt
jns
outsb
mov
adc
lods
enter
or
adc
out
push
xor
cmc
push
lods
push
jl
fisubrl
je
loop
jl
xor
mov
iret
push
sub
aam
sub
push
mov
daa
popf
jle
cmp
inc
int
xchg
out
or
jne
push
movsb
mov
and
or
pop
fadds
rol
and
adc
lret
lahf
mov
sbb
mov
fisttpll
xlat
insb
or
pop
mov
mov
inc
rep
push
pop
inc
insl
and
dec
in
or
repnz
popf
sub
dec
jne
adc
leave
push
outsb
push
faddl
sub
loopne
jbe
subl
fwait
and
rcrl
sub
pop
fstpt
jmp
jg
mov
mov
mov
xchg
jnp
out
and
xor
jecxz
pop
cmp
xchg
push
fidivl
adc
int
xchg
xchg
mov
cwtl
push
iret
push
in
fwait
adc
and
insl
out
fnstenv
sbb
sbb
repz
out
shll
and
aaa
sahf
cmpl
dec
or
mov
addr16
sahf
cld
insl
daa
cmp
aam
mov
jecxz
pop
xchg
xchg
loop
mov
push
cld
in
mov
sub
fldenv
lock
je
mov
movsb
add
or
test
bound
mov
xchg
subb
js
sbb
mov
pop
push
les
xor
aas
add
cwtl
dec
ljmp
cmpsl
mov
test
xchg
xchg
and
imul
sub
jl
lods
xorl
inc
adc
xlat
cmc
mov
jmp
mov
fstl
lea
mov
movsl
xor
push
enter
dec
jmp
mov
popl
nop
adc
cmp
push
sub
push
sbb
inc
in
out
mov
sbb
or
shll
pop
or
outsb
out
dec
scas
dec
mov
scas
add
arpl
xchg
sub
xchg
leave
dec
mov
mov
je
negl
and
dec
xchg
clc
hlt
fistpll
jne
enter
sbb
into
mov
xchg
loopne
lea
jp
dec
or
pop
stc
sub
out
sbb
lret
push
mov
les
repnz
mov
stc
add
inc
test
into
inc
dec
inc
mov
ret
test
dec
imulb
int
mov
popf
das
mov
out
inc
mov
aaa
adc
out
shlb
inc
inc
outsb
pop
in
sahf
xor
les
pop
pop
mov
adc
fs
xor
mov
jo
cmp
int3
xchg
adc
mov
ficomps
lret
icebp
nop
fs
scas
adc
mov
loop
add
mov
inc
mov
xor
int3
jecxz
imul
leave
push
mov
orl
or
xchg
xchg
xlat
inc
and
mov
aam
jo
dec
xor
xor
shlb
mov
fstpt
and
push
int3
jbe
testb
jl
insl
dec
in
pop
xchg
or
mov
icebp
cltd
or
add
imul
add
lahf
fdivp
sbb
mov
clc
add
test
test
scas
addb
lahf
xor
xor
or
in
add
mov
adc
ljmp
xchg
cmp
cmp
stos
cmp
add
nop
xchg
adc
add
inc
xor
dec
lret
mov
lret
out
rcrb
inc
xchg
xchg
lcall
xor
mov
xchg
test
ja
mov
inc
mov
test
pop
cmp
cmp
cmp
add
mov
jp
adc
sti
push
sub
imul
pop
lahf
in
hlt
into
sub
pop
fadds
cmp
pop
push
inc
or
fwait
dec
scas
cltd
rcrl
mov
data16
loop
out
jo
mov
sti
mov
push
test
mov
mov
push
cmovp
jae
xchg
pop
fisttps
inc
jl
mov
and
gs
dec
scas
push
sbb
dec
fwait
dec
icebp
scas
aas
in
movsb
lock
packuswb
mov
push
aad
ret
lret
jns
in
jge
pushf
inc
push
das
sub
push
cmpsl
vpmaxub
stos
insb
mov
sbb
mov
test
movsb
and
xor
test
lcall
xchg
stc
sbb
and
mov
test
or
repz
pop
lret
inc
movsl
out
and
push
cmp
mov
lea
into
jmp
sub
or
mov
inc
lcall
call
pop
lea
call
ja
mov
rcll
lds
faddl
pop
int
hlt
imul
icebp
cmc
dec
ss
sub
movsl
mov
xchg
sub
push
sbb
jecxz
es
lcall
nop
add
mov
xor
or
enter
and
mov
std
add
sti
out
movsb
xchg
cwtl
or
pop
inc
dec
inc
pop
or
mov
push
call
jb
add
pop
testb
push
pop
adc
push
enter
jmp
out
sub
jecxz
filds
xchg
cltd
add
aaa
add
arpl
lcall
cli
fsubrl
mov
imul
xchg
push
aad
push
xchg
rol
sbb
out
lret
pusha
xor
gs
add
jns
sbb
negb
outsl
mov
in
jp
mov
ljmp
stos
jp
popf
sti
mov
loopne
dec
lret
int3
mul
pop
aaa
jnp
cmpsl
inc
pop
das
xchg
sbb
es
int3
jno
loopne
cli
lods
lea
dec
lods
xor
mov
mov
sub
aaa
and
mov
jecxz
mov
cwtl
daa
cmpsl
lret
pop
and
add
mov
mov
push
ret
push
cs
data16
lods
lods
es
icebp
and
jl
mov
xchg
pusha
mov
outsl
xorb
inc
and
sbb
dec
or
xchg
sub
cmp
or
int
sub
dec
jns
mov
arpl
rcl
imul
xchg
shr
or
push
repz
jmp
aam
or
in
push
xor
cmc
jbe
cwtl
push
loop
jmp
andl
jle
xchg
jae
push
mov
push
or
xor
cltd
sti
out
imul
mov
sub
dec
icebp
xor
std
pusha
fisubl
imul
aam
xor
repz
push
scas
repnz
cs
test
jl
mov
ja
sbb
loopne
iret
mov
mov
mov
xor
jle
mov
inc
shl
add
cli
cmp
sub
jbe
test
sub
jmp
pop
mov
out
adc
popf
push
lea
in
mov
test
mov
cwtl
jnp
lods
xchg
mov
repz
ret
inc
sub
mov
mov
into
mov
xchg
xor
xchg
or
in
addr16
sbb
nop
fildll
jge
or
push
or
mov
psllq
cmpsl
pop
mov
in
repz
mov
mov
mov
inc
pop
sbb
xor
std
xor
adc
ja
xchg
pop
popa
fistpll
cli
adc
jns
aam
pop
les
and
scas
mov
push
subl
test
fstpl
outsl
xchg
cmc
lret
ss
jnp,pt
xor
dec
addr16
out
fwait
mov
bound
mov
ja
daa
mov
fsubs
loopne
clc
adcb
mov
pop
pop
stc
in
cs
mov
insl
xchg
or
dec
cld
inc
into
loop
mov
inc
cmpb
mov
popf
notl
stos
push
mov
xchg
ljmp
push
jb
out
fstpt
ret
ljmp
xchg
pop
push
sbb
mov
ljmp
test
inc
inc
add
or
nop
cltd
cs
mov
mov
clc
fcmove
xor
mov
jge
add
xchg
or
std
scas
aam
mov
add
add
aas
mov
xor
push
adc
jo
insb
outsl
and
push
and
int3
stos
xor
push
mov
mov
jmp
mov
add
adc
adc
out
aam
push
pop
mov
sahf
jno
das
and
rolb
cli
mov
push
test
inc
and
iret
es
shl
data16
push
jmp
lods
mov
dec
std
das
jbe
xor
in
mov
add
jae
or
mov
cmp
add
movd
inc
stc
cmp
pop
cmp
lock
je
or
dec
test
mov
shll
add
test
es
negb
gs
stc
xchg
inc
cmc
jo
cli
hlt
lret
inc
lock
mov
andb
push
pop
push
push
sub
jne
fs
dec
adc
mov
inc
fwait
jecxz
lods
dec
cmpsl
xchg
jae
divb
cmp
fcmovnb
lahf
mov
testb
mov
mov
mov
repnz
xchg
mov
inc
mov
dec
sub
cmp
adc
mov
test
cmp
movsb
push
movsl
jl
add
test
or
push
dec
mov
push
fistpll
adc
fldl
mov
call
lcall
fadds
fdivp
push
repz
imul
or
jno
movsb
or
xor
pushl
movsl
mov
push
push
mov
addb
push
ficoml
mov
jo
jmp
andl
arpl
clc
xor
cltd
aad
mov
add
pop
xchg
push
test
mov
daa
jmp
mov
insl
lds
movsb
mov
and
push
dec
out
mov
sub
js
jg
mov
clc
pop
shrl
mov
negb
inc
push
and
movsb
mov
sbb
lcall
push
mov
pop
push
inc
mov
xlat
repnz
pop
cli
js
insl
adc
test
xchg
pop
mov
test
push
push
jmp
aam
cwtl
adc
push
jmp
xor
cmp
cli
fldcw
imul
fsubs
and
fnstsw
sbb
lods
inc
stos
add
push
das
outsb
inc
ja
dec
pop
xchg
xor
lods
idivl
rolb
enter
mov
fidivl
fdivrs
jne
pop
cltd
adc
pop
lret
lret
jne
cmp
in
lods
pop
inc
or
adc
sub
cmp
jnp
aas
sbb
xchg
mov
adc
mov
add
les
daa
jp
sbb
mov
jne
cmp
xor
add
xor
adc
xor
test
or
dec
cmp
out
mov
mov
sub
in
or
push
jle
fisttpl
aad
xor
lcall
vmwrite
lcall
adc
outsl
and
mov
adc
pop
int
int
mov
pop
stos
adc
jmp
add
leave
adc
into
movsb
dec
adc
cmp
adc
and
ret
adc
aam
mov
push
xor
mov
mov
push
out
xor
mov
mov
cmp
pusha
jmp
or
sub
pop
rorl
rcll
rcrb
xchg
adc
mov
hlt
pop
mov
sahf
mov
jnp
in
mov
jbe
mov
into
dec
inc
icebp
rcrb
or
rcr
mov
data16
pop
outsl
into
pop
mov
mov
jl
fmulp
hlt
push
mov
stc
mov
shrb
lock
lcall
sbb
dec
and
pop
mov
jge
add
shrl
scas
push
ficompl
in
sahf
push
xchg
cmpsb
pop
mov
lret
test
or
in
inc
icebp
xchg
jb
dec
lods
push
cmpsl
ret
stos
imul
xchg
jmp
sbb
lahf
popf
imul
in
push
push
mov
stos
xchg
cmpsb
mov
das
jne
iret
scas
xor
dec
xchg
inc
xor
dec
or
imul
adc
inc
pop
sub
test
movsb
fwait
or
arpl
test
push
inc
pop
cmpsb
cmp
cmpsl
mov
adc
push
pop
xchg
les
ss
xchg
pop
mov
lea
xchg
mov
xlat
xchg
and
add
push
inc
jne
sub
mov
sbb
les
fmull
and
cld
xchg
test
jmp
iret
aad
xor
int3
dec
jo
lahf
jmp
sbbl
or
loope
mov
push
sbb
mov
sub
cli
dec
lahf
stos
dec
leave
sbb
mov
xlat
dec
cmp
sbb
pop
mov
fcmovnbe
lock
pop
or
pop
clc
fldenv
xchg
cmp
outsb
add
mov
mov
inc
into
fbstp
fs
dec
insl
mov
lods
scas
arpl
inc
jle
aad
nop
in
enter
xlat
sub
mov
xchg
sub
loopne
in
mov
or
ss
mov
lahf
xlat
pushf
loopne
inc
xlat
out
lahf
outsb
lea
inc
mov
inc
rorw
loop
or
daa
lahf
cmp
inc
arpl
sbb
shll
enter
clc
pop
pop
cmp
imul
mov
add
mov
pop
movsl
mov
cmp
sub
lret
mov
pop
xchg
loope
push
mov
add
out
and
xor
jno
ficompl
fsubl
xchg
mov
or
xlat
clc
dec
mov
lcall
or
cmp
js
add
push
addl
sbb
dec
adc
rorl
xchg
iret
xchg
add
loope
mov
mov
or
mov
adc
dec
pusha
ret
push
vmread
pop
ror
xor
or
pop
pop
xor
fmulp
lret
ficoms
pushf
mov
sbb
dec
push
ret
dec
arpl
sbb
dec
enter
popa
in
lret
subb
mov
and
and
insb
insl
movsl
cmc
cmp
and
cmpsl
mov
repz
mov
inc
mov
pop
inc
outsb
or
cmp
popa
inc
dec
push
and
test
jae
sub
inc
std
push
aam
popa
mov
imul
dec
es
add
les
cmp
inc
ret
cld
mov
sbb
movsl
mov
dec
dec
or
insb
ja
mov
fimuls
and
xchg
in
out
and
sarb
mov
sub
addb
out
stos
cwtl
in
jg
stos
mov
insb
test
sub
shr
scas
aaa
gs
mov
movsl
outsl
xchg
aam
sahf
daa
aad
mov
jge,pn
sub
jmp
jb
and
test
sbb
push
xchg
rcll
mov
popf
test
ficompl
dec
push
insb
sarb
jbe
push
xchg
sbb
or
in
scas
das
push
push
out
lds
enter
inc
add
jmp
pop
xchg
mov
movsb
xchg
xorl
nop
push
jne
subl
or
mov
adc
stos
lahf
sub
imul
ret
shlb
nop
push
jne
mov
mov
pop
and
xchg
gs
jbe
insl
cmp
pushf
adcl
or
into
lret
pop
cmpsl
int3
adc
sbb
adc
out
movsb
shl
inc
fildll
cmp
insl
jge
dec
mov
add
lcall
scas
or
rol
arpl
lret
mov
push
repnz
stos
lret
out
aam
push
hlt
jl
into
jp
aam
jb
xchg
decb
imul
jg
imul
leave
xchg
adc
cmp
es
mov
jb
jmp
loopne
and
or
ret
das
adc
push
push
mov
sub
sti
push
jno
adc
jb
mov
mov
xchg
scas
movsb
mov
aam
ret
jmp
scas
sub
mov
pop
mov
push
cmp
jl
iret
sbb
jg
cmp
push
mov
pop
outsl
int
fdivrl
pop
sbb
push
ja
adc
stos
cld
clc
sbb
dec
mov
ffreep
adc
and
sub
pop
cmpsb
jno
pop
push
repnz
cmc
cwtl
and
jmp
std
mov
add
ds
jl
pop
pop
pop
and
insl
mov
dec
push
jns
sahf
jmp
popa
jl
or
ds
stc
clc
adcb
in
arpl
sub
leave
sub
and
shlb
arpl
fwait
add
pop
int
and
jb
dec
nop
lds
cmp
pop
cmp
add
inc
and
push
push
cmp
mov
mov
xorb
mov
sbb
mov
and
imul
fwait
aaa
test
sub
inc
popf
adc
xor
or
int
idivl
fidivs
jl
xor
sbb
sbb
jecxz
aad
dec
sub
xchg
popa
stos
xchg
insl
pusha
sub
xchg
cwtl
xor
dec
fdivp
sub
jge
cmpsb
xchg
or
mov
xchg
test
in
mov
aad
cltd
outsl
dec
mov
mov
inc
jb
xor
leave
ja
dec
leave
rol
std
shlb
insb
pop
adc
xchg
dec
push
insl
pop
cmp
aas
or
cmpl
jle
jl
push
and
gs
scas
lahf
lods
test
mov
mov
cmp
or
mov
and
add
outsl
push
mov
or
data16
or
pop
sub
mov
dec
out
negl
cmp
loopne
or
out
pop
mov
shll
add
popf
arpl
cmp
inc
fistl
scas
xchg
test
pop
push
jle
aaa
pop
loope
lea
scas
xor
sbb
dec
sub
clc
gs
movsb
mov
jnp
push
mov
and
lods
xorl
es
outsb
and
mov
movsb
mov
js
xchg
mov
pusha
sub
or
or
sub
mov
insb
adc
icebp
cld
add
jb
inc
xchg
jb
sbb
repz
sbb
ds
lret
jne
mov
fisubl
fldz
repnz
arpl
outsl
mov
test
cltd
sub
xor
in
pop
mov
inc
out
push
divl
dec
fistpl
jnp
xorb
pop
int
dec
cmp
add
gs
pop
mov
je
int
jg
nop
pushf
fwait
gs
ss
inc
rcrb
jbe
cmp
mov
pop
mov
xor
dec
out
std
sbb
repz
roll
mov
popl
lret
adc
mov
push
gs
rorl
fwait
mov
pop
int
add
ds
push
add
inc
mov
jnp
rorb
xchg
pop
aam
cmp
cmp
jg
inc
mov
std
and
adc
mov
int
shll
jle
outsl
add
movsl
or
cwtl
fdivrl
das
push
jbe
xor
arpl
dec
push
add
andl
ret
addr16
int3
das
sbb
add
mov
inc
inc
stos
hlt
mov
pushf
sub
popf
or
push
rol
cmp
aam
mull
fnstcw
notl
fnstenv
and
add
sub
xchg
fcmovu
out
dec
or
xor
shl
shlb
pop
inc
jmp
xor
in
shrb
mov
jbe
push
jbe
jns
cld
scas
mov
pop
push
lcall
xlat
fdivrp
sbb
cmp
mov
or
inc
push
cltd
mov
and
inc
push
sub
jns
adc
mov
and
inc
lea
xor
out
sbb
mov
add
aad
mov
sbbb
in
jg
mov
mov
in
push
ret
push
mov
mov
and
out
dec
test
arpl
cwtl
mov
xchg
lcall
outsb
push
insl
popf
sub
push
mov
repz
add
xor
and
inc
mov
jmp
call
int
lock
and
sbb
push
jl
mov
aas
jmp
adc
xor
mov
adcb
push
push
sar
iret
andl
out
outsl
cmp
pop
stos
icebp
shrl
aad
fmulp
inc
and
pop
or
xor
xor
fnstenv
xchg
in
movsl
sbb
stos
and
sub
inc
sub
mov
movsl
inc
enter
outsl
mov
mov
shl
mov
bound
enter
mov
cmp
cmp
xchg
and
adc
fldt
adc
iret
dec
pop
into
jns
sti
adc
popa
sub
xchg
and
sbb
cmpsl
fwait
fwait
xor
mov
mov
outsl
icebp
mov
adc
out
jns
leave
and
in
pop
cmp
push
add
dec
stos
mov
inc
cmp
out
int
rcr
insb
jge
adc
inc
mov
andl
out
add
jns
movsb
les
testb
adc
mov
test
addr16
push
outsb
test
adc
inc
or
pushf
mov
testb
test
enter
fwait
xor
imul
or
repnz
nop
mov
push
pop
btr
cltd
mov
adc
js
shl
push
inc
mov
mov
pop
sub
xchg
idivb
sahf
push
dec
push
cmp
mulb
dec
cmp
and
fstpt
ja
jmp
pop
adc
inc
in
mov
sahf
fucomi
stos
cmp
mov
adc
mov
push
pop
cmp
aaa
hlt
xchg
insb
jle
or
inc
inc
icebp
xchg
sbb
mov
mov
dec
hlt
jp
jb
leave
push
je
xchg
mov
mov
adcl
mov
mov
jg
push
xchg
mov
adc
in
loope
popf
sbb
cmp
sub
mov
mov
pop
xor
test
push
mov
and
pop
dec
push
jecxz
mov
cs
les
cmc
sbb
loopne
mov
inc
test
loop
test
and
or
xor
stos
ss
dec
sub
pop
adc
test
ss
ja
jno
repnz
insl
data16
sub
xchg
fadd
and
lret
insl
gs
xor
enter
mov
aad
xlat
into
les
lods
or
ds
xor
mov
fldt
pop
xchg
sahf
lds
xor
jnp
ret
jp
sub
mov
out
in
sahf
inc
cmpsb
divb
daa
scas
jmp
addb
test
std
and
mov
push
lret
imul
adc
mov
cmp
push
imul
test
inc
movsb
fcmovnbe
xchg
add
jle
rcrw
and
xchg
aam
outsb
imul
dec
notl
gs
stos
jbe
adcb
xchg
cmp
or
fldl
jne
test
idivb
aaa
cmc
sub
mov
jmp
je
sbbb
jo
add
hlt
mov
sub
mov
push
push
into
xor
clc
or
ds
push
cmp
inc
aam
cs
arpl
jb
popf
sti
add
dec
cld
or
jns
inc
push
call
dec
or
idivb
dec
or
in
mov
mov
jo
dec
or
mov
out
cmp
insb
pop
or
push
call
or
push
mov
roll
push
xchg
stc
pop
pop
fwait
jae
push
or
mov
pop
xchg
xor
mov
inc
push
int3
in
sbb
insl
ljmp
shrl
sub
clc
repz
fsubrl
js
cli
shll
ud0
xchg
cli
stc
into
mov
cmp
push
xlat
in
sub
lods
scas
xchg
jbe
adc
ficoml
sbb
jge
cmc
mov
inc
jnp
cli
out
jp
cmp
cmp
enter
sbb
out
xchg
out
cld
out
inc
fwait
icebp
inc
fildll
and
push
mov
adc
push
push
inc
testb
sbb
loopne
pop
jne
cltd
mov
test
shlb
xor
mov
test
call
stos
pop
push
push
into
add
sub
cmp
sahf
jnp
aaa
mov
ret
add
cld
sub
push
pop
repz
enter
imul
ret
xchg
push
pop
lods
decb
and
imul
xchg
fimuls
sbb
sub
leave
jmp
sbb
add
pop
insb
and
jmp
sbb
pop
mov
jb
pop
mov
mov
imul
hlt
and
cli
leave
pop
and
loop
mov
mov
pop
mov
lds
repnz
cmp
lcall
push
mov
ja
mov
fwait
or
pop
in
into
add
xchg
mov
pop
filds
ret
test
jecxz
push
dec
shll
sbb
test
das
cwtl
divps
pop
pop
aam
lea
and
and
pop
imul
inc
shl
test
cmpsl
negl
mov
and
bound
xchg
imul
in
scas
shl
ds
mov
stc
icebp
ss
leave
pop
push
xchg
or
test
scas
lods
call
xchg
push
cmp
fdivp
idivb
ficoml
ret
xchg
mov
pop
fs
lret
mov
jmp
ds
pop
adcl
sbb
dec
dec
sub
jle
and
push
das
repnz
add
sbb
cmp
idiv
fsubr
fnstcw
das
mov
cmc
and
xor
jge
outsl
movsl
push
test
pusha
mov
jecxz
sub
loope
sub
data16
bound
test
roll
add
fmul
dec
adc
out
hlt
xchg
mov
sbb
push
loopne
rcr
sub
add
scas
adc
jns
mov
mov
shr
dec
push
add
fidivrl
cmpsl
jmp
pop
inc
xchg
cmp
push
dec
or
sbb
jb
les
pop
mulb
arpl
sbb
ret
lock
idiv
jns
lcall
lods
es
es
fs
dec
cmpsl
xor
jp
out
or
sahf
sbb
adc
and
fdiv
call
cs
jmp
mov
test
mov
mov
lret
jg
out
mov
pop
stos
test
adc
enter
cmpl
lret
lods
notb
jmp
or
add
jns
xchg
inc
mov
push
adc
xor
ljmp
clc
mov
enter
sbb
push
inc
cvtdq2ps
inc
xchg
fistpll
sub
sub
or
mov
cmp
int3
mov
sub
leave
sub
fcomps
add
pop
pop
sub
call
push
mov
adc
aad
cld
mov
mov
lcall
add
push
mov
outsb
mov
shrl
mov
dec
iret
js
add
pop
nop
roll
inc
dec
stc
and
loop
adc
cwtl
into
addb
cmp
lret
adc
lods
outsb
jo
mov
arpl
rcl
inc
sub
cmp
jl
mov
jmp
pop
or
or
mov
adc
push
and
sti
inc
cld
int
cmp
mov
das
mov
push
mov
bound
inc
dec
cwtl
stos
in
mov
jnp
cld
sbb
ret
loopne
lret
in
lock
loopne
adc
sbb
out
xchg
and
pop
shlb
jno
mov
mov
aaa
pop
popa
mov
insb
xchg
int3
shl
les
mov
sbb
cmp
sbb
mov
test
loop
dec
adc
adc
xchg
push
pop
ss
gs
fwait
lds
add
pushl
add
pop
dec
jo
sarl
pop
fsubl
inc
rclb
cmp
cmp
or
stos
pop
sbb
lret
push
cwtl
inc
iret
cs
ljmp
inc
sub
movsl
cmp
lock
movsb
ljmp
jno
call
lods
sahf
xor
mov
movsb
sbb
pop
aaa
out
xlat
or
sbb
mov
sub
test
xor
aas
xor
inc
aad
or
mov
add
xchg
and
lahf
mov
jo
in
leave
cmp
sbb
btc
or
arpl
jge
test
jbe
push
xor
mov
mov
jp
insb
jle
out
aad
jb
mov
fwait
cmp
les
or
mov
fstpl
mov
dec
out
lea
sbb
das
test
mov
mov
ljmp
sub
mov
add
fisttpll
les
mov
pop
jb
ja
in
mov
insl
add
push
push
push
and
push
mov
lahf
add
int
xchg
xchg
ret
pop
js
test
jmp
mov
dec
or
xor
push
leave
pop
mov
mov
pop
test
insl
sbb
inc
dec
pusha
mov
mov
ja
add
push
sbb
cmp
cli
jg
mov
mov
test
movsl
push
xchg
jne
inc
lock
mov
out
xchg
and
lret
out
pusha
dec
pop
je
push
mov
arpl
push
xchg
loop
add
push
push
jae
mov
xchg
lahf
movsl
imul
xchg
jle
sub
mov
aad
pop
sbb
repz
nop
or
push
ret
add
ss
js
mov
mov
out
mov
imul
pop
aaa
pusha
and
mov
jne
daa
cmpsb
xlat
imul
jno
outsl
scas
aaa
lock
scas
popf
movsb
jo
inc
or
push
lret
cld
add
lock
pop
fldt
push
jg
pop
sub
add
jle
cltd
sbb
mov
les
lahf
insl
popa
or
mov
rcrl
sbbl
int
xchg
rcl
rclb
mov
test
in
jmp
loopne
xchg
les
xor
into
stos
pusha
lahf
test
cmp
cmp
es
dec
xchg
add
cmp
int3
jb
cs
shl
pop
inc
cmc
cmp
xor
jl
or
or
fmulp
sub
mov
lcall
mov
cmp
add
pushf
fimuls
pop
lahf
lea
test
addr16
sahf
repnz
sub
adc
xchg
lea
ror
bound
ficomps
pop
add
mov
lahf
cmpsl
jns
sub
xor
inc
popa
imul
sbb
das
cs
jecxz
fistpll
lods
daa
mov
add
in
add
aas
gs
lret
test
rorl
sub
ljmp
pop
daa
adc
jno
mov
dec
xor
xlat
and
ficoml
pop
sbb
push
in
shlb
push
ljmp
jmp
or
mov
dec
ljmp
adc
push
mov
inc
jmp
push
mov
js
or
and
jmp
xchg
push
xor
jbe
jns
inc
xchg
cmp
mov
push
arpl
into
hlt
mov
ljmp
xchg
sub
int3
pusha
cwtl
stos
shll
push
sub
jae
test
sti
push
push
jl
pop
jg
pop
into
ret
and
ret
call
xor
lods
adc
xchg
enter
mov
or
fdivrl
push
mov
xchg
push
adc
les
arpl
or
cmpsb
push
shl
push
pop
in
std
int
or
pop
clc
repnz
sub
jp
sub
mov
pop
mov
sarl
jns
mov
out
xor
xor
dec
mov
pushf
xchg
xorl
sub
add
jno
call
cmp
mov
add
sti
fnstenv
rolb
jg
pop
in
int3
popa
test
and
push
sbb
leave
imul
push
out
cmpsb
push
js
fldt
mov
adc
cmp
test
or
js
or
sub
mov
jae
in
es
inc
outsb
or
iret
and
sbb
notl
out
mov
jge
sti
in
shrl
rcll
cmp
js
rcl
cmp
bound
jmp
sub
inc
aad
lock
push
jmp
push
scas
push
xchg
jnp,pn
sbb
sbb
aam
arpl
adc
push
jnp
aas
in
dec
add
push
xchg
push
adc
xchg
xchg
push
push
jmp
iret
jnp
loop
sub
xchg
inc
daa
test
imul
ret
mov
icebp
cmp
pop
aad
rclb
jno
pop
in
pushf
out
mov
mov
ds
arpl
push
cmpsl
popa
repz
lret
dec
rcrl
inc
inc
loope
adc
push
cmp
add
sub
shlb
fs
push
push
lret
out
fs
int3
movsl
notb
cmc
add
movsl
movsb
pop
arpl
int
fstps
dec
shl
ss
subl
adc
mov
mov
movsl
das
jl
pop
jmp
enter
dec
and
fisttpll
hlt
mov
cwtl
push
lahf
xor
rolb
sbb
jl
or
jp
scas
or
fadds
js
push
test
push
out
rcll
pop
mov
das
xchg
les
sbbl
sub
cmp
mov
jne
jnp
loope
sub
fidivrs
mov
cmpsl
sub
and
push
cltd
push
outsl
sub
or
inc
sub
int
sbb
into
xchg
repz
add
sbb
xchg
and
stc
or
pop
dec
add
stc
inc
lds
mov
addr16
xor
push
fmull
xor
mov
xor
xor
insb
repnz
dec
push
sbb
mov
xchg
push
xchg
pop
js
outsl
roll
insl
int
js
shll
or
push
mov
mov
and
lods
push
sbb
popf
mov
xchg
push
scas
shr
add
xchg
pop
testl
cld
mov
int
lret
add
xchg
jge
mov
icebp
inc
sbb
lea
inc
xor
inc
clc
push
add
mov
sbb
nop
pop
pop
mov
mov
pop
not
ds
and
out
mov
xor
fs
and
scas
test
xchg
mov
jb
or
sub
out
pop
outsb
jae
lods
sbb
shrl
lods
push
pop
shrb
rorb
repnz
arpl
mov
into
xlat
sub
addb
sbb
cwtl
stc
es
jb
push
xorb
or
call
pop
roll
into
ljmp
les
pop
mov
sarb
daa
es
inc
xchg
pushw
xor
fidivrs
je
adc
and
aad
ret
push
push
or
cmp
pop
int
mov
fnstsw
mov
sub
lret
repz
test
adc
add
shrb
cmp
test
stc
mov
inc
jb
pushf
iret
jb
outsl
or
mov
inc
jae
imull
add
lods
sbb
push
push
adc
dec
call
xor
icebp
ficompl
sahf
pop
rorl
sahf
fsubs
leave
mov
insb
loopne
enter
subl
out
fiadds
jnp
push
das
push
jmp
popa
bt
in
pop
ret
clc
fwait
pop
mov
pop
mov
jmp
jbe
xchg
mov
imulb
popf
fdivrl
fwait
xor
inc
inc
shl
aaa
mov
roll
sbb
jp
iret
inc
add
movsb
pop
clc
jae
fcomi
in
sbb
fstpl
imul
test
push
inc
xchg
mov
aad
fxch
addr16
into
xor
in
mov
popa
sbb
xchg
pop
push
sbb
mov
pusha
ret
pop
cwtl
xor
fnstsw
mov
repz
xchg
jae
orb
xor
movsb
pop
xor
or
mov
and
fidivrs
shll
mov
cmc
repnz
pop
fwait
imul
dec
movsb
and
jnp
test
adcb
xor
or
xor
loope
mov
int
mov
mov
mov
push
jnp
xor
push
and
mov
add
insb
ljmp
add
xchg
mov
xor
lea
mov
adc
and
pusha
ljmp
std
mov
sbb
sub
mov
repnz
cmpsb
and
fstps
dec
dec
push
aam
sbb
xchg
pop
jg
push
mov
dec
movsb
scas
cmp
or
lock
fwait
out
jmp
ja
pusha
or
lret
and
stc
xor
bound
outsb
sbb
xor
cmpsb
and
shl
scas
inc
lcall
dec
mov
jo
and
leave
out
in
jae
inc
jne
repnz
push
mov
add
in
jbe
sahf
or
mov
lcall
lock
or
outsb
pop
lret
insl
subb
mov
sbb
mov
lret
mov
in
mov
pop
mov
pop
addr16
jge
sbbb
xchg
shll
inc
inc
cs
outsb
push
out
mov
push
repnz
icebp
and
jae
fcmovnb
jge
inc
jns
movsb
mov
stos
stos
test
cmpsl
cltd
jno
movsl
push
mov
sbb
push
arpl
pusha
int
add
or
ret
mov
or
inc
ljmp
out
loopne
mov
addr16
test
sbb
hlt
repz
xchg
orb
mov
dec
push
add
pushf
subl
test
mov
les
lods
data16
inc
or
and
adc
jb
movsl
insb
jg
xchg
sbb
inc
mov
ret
lea
shrl
mov
push
shl
mov
or
fstp
dec
out
sub
mov
movb
jmp
cmp
nop
aas
out
push
pop
addr16
mov
dec
mov
aaa
lret
cli
inc
aaa
and
inc
push
push
leave
xor
leave
stc
ds
loope
test
cmpsb
bound
fdivrl
js
fmuls
push
cmp
lcall
mov
and
mov
push
mov
adc
xchg
jnp
addb
xchg
ret
pop
cli
dec
scas
repz
cwtl
cltd
loopne
pop
push
nop
leave
dec
repnz
adc
fdivrl
rorb
sbb
pop
in
rcll
mov
cs
aam
call
and
push
rclb
and
sarb
movsb
push
cmp
mov
sarb
popf
popf
inc
or
sub
mov
jl
outsl
sub
add
dec
sub
pushf
xor
push
sub
sub
jbe
inc
jmp
scas
push
adc
popa
and
mov
cmpsb
ds
inc
rcl
pop
mov
dec
dec
fisttpl
ret
mov
push
jge
mov
xlat
cmp
insl
mov
inc
outsb
push
je
xchg
xchg
cmpsl
loop
or
fldt
imul
mov
xchg
jo
test
in
cs
or
cmp
or
and
add
mov
les
movsb
and
sbb
dec
into
mov
lahf
xchg
lods
jns
xor
push
jo
fs
shll
aaa
jl
push
scas
mov
push
iret
inc
orl
cmpsb
push
adc
mov
jl
popf
cwtl
aaa
lods
in
je
js
inc
ja
jo
mov
dec
mov
cmp
fimull
lods
loop
jecxz
mov
movsb
mov
dec
loope
pusha
dec
inc
std
or
popf
dec
lret
or
pop
dec
dec
out
out
cmp
pop
mov
pop
loope
xor
cs
gs
clc
push
pop
xchg
mov
loope
out
test
mov
jbe
xchg
mov
fbstp
xchg
mov
in
mov
roll
sbb
sbb
jge
loop
jne
pop
add
mov
add
add
push
xchg
xchg
fildll
pop
ljmp
cmp
adc
mov
mov
orb
xchg
xor
insb
ljmp
sahf
fistpl
fcomi
jl
stc
add
lcall
cld
sbb
mov
das
xorb
cmc
push
xchg
inc
pusha
movsl
pop
dec
andl
fwait
dec
or
orb
push
mov
pop
lret
xchg
fistl
aad
cmp
leave
dec
cmpl
inc
add
xchg
add
xor
dec
sub
gs
cmpsb
mov
fnstcw
rcrl
adc
sbbl
ja
push
mov
bnd
xlat
in
lcall
sub
jno
insl
iret
xchg
in
pushf
dec
lods
adc
out
cmp
push
lret
and
jbe
mov
aam
inc
add
test
cltd
inc
inc
mov
hlt
jo
dec
xchg
bound
push
clc
jns
xchg
sub
out
mov
xor
sub
mov
cld
imul
lods
insb
repnz
sbb
push
clc
mov
adcl
xor
ret
ficompl
in
xchg
fldlg2
lcall
cmovae
adc
inc
bound
test
lret
imul
dec
mov
popa
arpl
mov
sub
inc
xor
jo
pop
cmp
mov
dec
stc
jno
sub
sbb
lea
push
push
add
je
xchg
xchg
or
stc
sub
call
iret
hlt
dec
aaa
pop
xchg
and
pop
movsb
pop
stc
test
or
xchg
or
in
out
sbb
aaa
push
or
ret
pop
mov
xor
jg
add
xchg
nop
pusha
sub
sar
add
rcll
pop
and
adc
inc
or
shl
or
cmpb
push
xorl
xchg
inc
lock
stos
mov
cmp
adc
stos
movsl
mov
pop
jbe
jl
fmull
dec
fs
lds
std
jb
mov
mov
in
mov
aad
inc
and
mov
lds
inc
lahf
mov
mov
mov
mov
dec
sbb
iret
xor
fcompl
pop
cltd
neg
inc
mov
dec
or
insb
dec
or
std
aaa
sahf
pop
inc
xchg
inc
dec
cs
mov
sti
repz
push
push
in
arpl
int
lds
mov
repnz
xor
cmpsl
mov
adc
pop
insb
pop
outsl
mov
dec
jecxz
cmp
js
mov
mov
notb
mov
shlb
pop
or
mov
mov
sbb
xlat
mov
dec
mov
in
call
pusha
stos
or
pushf
arpl
ret
gs
scas
dec
les
fnclex
inc
xchg
cmp
cld
add
and
cmp
jne
dec
fidivrs
push
lea
cmc
test
fstp
nopl
gs
mov
xchg
dec
push
cltd
enter
aas
ss
jbe
dec
jno
sbb
lods
insb
xor
je
leave
or
aam
inc
and
fwait
andb
inc
xor
push
pop
mov
mov
adcb
xchg
xchg
ja
daa
and
mov
in
push
ds
or
jmp
sub
jle
xlat
pushf
jmp
xchg
xor
cwtl
and
push
out
sti
shll
push
adc
data16
cmpsl
mov
jl
or
dec
xchg
ds
into
push
clc
mov
mov
xchg
add
jno
add
lahf
lahf
push
scas
cltd
dec
mov
fimuls
cmp
pop
int
jp
adc
jmp
aaa
xchg
repnz
jbe
outsl
inc
in
xor
fnsave
dec
jg
push
sbb
xchg
inc
jnp
inc
jo
mov
push
outsb
dec
mov
sbb
push
adc
aaa
sub
hlt
jne
cmpsb
stc
add
xor
insl
mov
lret
popf
lods
push
icebp
dec
jne
stc
arpl
pop
jbe
cmp
scas
jne
in
mov
testb
pop
out
add
inc
es
mov
adc
stc
lret
loopne
movsl
out
addr16
data16
cmpsb
inc
pusha
mov
scas
sub
add
mov
push
inc
push
sbb
mov
sar
xor
sbb
cmp
aaa
xor
mov
out
mov
pop
stos
stos
loopne
fcomps
jbe
movsl
out
xor
jl
inc
inc
je
fnstcw
add
cmpsb
push
and
insl
scas
pop
nop
push
data16
mov
mov
mov
dec
mov
mov
mov
out
xchg
mov
sub
ljmp
push
or
mov
stos
adc
push
inc
cld
daa
cs
mov
add
add
inc
or
fimull
pushl
adc
test
sub
add
call
add
jle
mov
pop
mov
ljmp
xchg
enter
outsl
leave
mov
stc
and
aam
in
and
dec
mov
jno
xlat
loopne
push
jo
out
cld
push
decl
or
mov
and
stc
inc
xor
push
lea
fidivl
lcall
sbb
jno
sti
out
cld
in
js
push
mov
hlt
movsb
push
div
xchg
popa
or
mov
xchg
test
rclb
icebp
push
ret
call
cli
mov
sub
mov
jne
mov
stos
push
dec
cli
push
xchg
add
rcrl
mov
push
sub
daa
in
fcmovnu
pop
sub
mov
lahf
and
aaa
and
cltd
fnstsw
and
clc
push
mov
xor
cs
fcomip
in
pushf
lods
push
kmovb
adc
xchg
inc
or
cld
dec
iret
divl
mov
cmp
xor
call
rcrl
xchg
xchg
xor
loop
dec
add
popf
aas
dec
add
pushf
mov
mov
push
fdivrp
lock
xor
mov
fwait
adc
mov
mov
jnp
insb
hlt
jl
dec
scas
std
gs
imul
js
adc
dec
xchg
pop
outsl
aaa
leave
stos
dec
push
pop
mov
fdivl
pop
mov
jbe
push
popa
pop
inc
pop
shl
shlb
push
loop
loopne
mov
out
lret
sbb
xchg
sub
or
rorl
pop
outsl
sti
sbb
dec
lahf
pushf
sar
cwtl
icebp
lea
nop
jg
outsl
jo
mov
sbbb
subb
nop
add
or
pop
sub
enter
fisubrs
push
mulb
xchg
pop
mov
xchg
xor
pop
mov
mov
pop
mov
and
outsl
pop
xchg
or
int3
mov
mov
arpl
fstpt
sbb
dec
aas
aad
sbb
push
shlb
sub
imul
in
shr
jg
fstps
cmp
mov
scas
add
mov
cld
push
lret
dec
dec
cli
jp
loope
push
push
dec
mov
mov
out
mov
cmp
je
push
ret
pushf
inc
add
outsb
hlt
repnz
pop
pop
movsb
jnp
js
movsl
dec
inc
roll
lock
aam
xchg
in
inc
xchg
mov
jle
icebp
sbb
push
jge
cmp
lcall
iret
out
jg
cld
js
in
inc
es
into
stc
mov
pop
rorb
push
mov
add
or
insl
mov
xchg
cmp
cmp
fneni(8087
std
push
inc
lods
add
cld
push
rcr
mov
sub
fidivrs
push
fstpt
mov
cltd
sub
sbb
mov
pusha
pop
fsubs
repnz
notb
cmp
jg
pusha
xchg
ds
jge
rorl
lock
jp
call
aaa
clc
dec
mov
or
pop
pop
mov
jl
mov
aad
sarl
scas
pop
push
jns
out
jb
das
and
xor
lods
xchg
loop
add
daa
aad
fsubrs
xor
mov
out
add
mov
into
icebp
push
test
lods
mov
adc
gs
sub
out
inc
xchg
loop
lea
ret
daa
mov
mov
push
jns
cmp
push
loop
jl
xor
imul
jge
mov
or
ret
loop
sub
clc
out
rcl
and
pop
or
bound
dec
pop
test
daa
mov
inc
stos
xchg
out
or
lods
shrb
imul
in
lods
cmpsb
mov
xor
fstpt
les
and
xorb
cli
adc
in
in
roll
cmp
or
push
push
pop
add
fidivl
sarb
in
mov
frstor
cmp
cmp
inc
jge
lea
lds
repz
dec
out
lret
and
fcoml
cs
stc
repz
fnstsw
stos
fnstcw
xchg
mov
sub
inc
dec
adc
push
and
sbb
adc
cmp
mov
in
or
cmp
cmp
dec
jp
mov
loope
pusha
mov
loope
cmpb
inc
sbb
or
add
std
cmp
cmp
xchg
imul
push
sub
ds
lahf
pusha
sbb
dec
adc
and
icebp
test
daa
mov
pop
cld
das
xlat
pushf
ss
mov
jmp
fwait
mov
fcmovb
dec
inc
outsl
mov
addr16
int
jge
push
jno
les
pop
sbb
mov
test
and
and
stos
pop
adc
adc
leave
sti
fsin
pop
cld
fwait
xchg
out
push
test
rorl
xor
mov
mov
in
je
fwait
out
outsl
loop
shlb
xor
jnp
adc
incb
pop
movsl
xlat
test
cmp
movsb
push
ljmp
pop
mov
ficoml
or
jmp
pop
loop
dec
mov
insl
push
inc
mov
adc
repz
pusha
shrl
lret
sbb
je
dec
mov
cmc
push
scas
jno
fwait
aam
aas
push
sti
push
test
out
scas
ds
out
subb
scas
aam
repnz
insb
sub
jae
mov
jge
sbb
sarb
fimuls
push
int
jo
icebp
xor
aas
aas
out
aaa
jae
cmpsl
inc
shlb
mov
fimuls
mov
mov
dec
lea
sbb
push
int3
cli
xor
enter
jmp
mov
inc
scas
mov
in
add
daa
mov
adc
seto
push
cmp
in
sub
aas
pusha
xchg
or
jg
mov
mov
shlb
mov
mov
add
sub
adc
jecxz
bound
sbb
xchg
fimull
sub
or
rorb
enter
insl
cmp
je
adc
repnz
lock
lret
sbb
sbb
bound
dec
cld
fcmovb
push
and
jne
notl
jnp
push
xchg
xchg
jnp
jmp
out
cmp
and
enter
adc
push
mov
dec
aas
leave
and
pop
ja
mov
outsb
mov
jmp
out
adc
or
mov
sbb
mov
or
jp
xor
pop
lcall
sub
fmulp
scas
add
es
imul
mov
cmpsb
push
adc
icebp
mov
sub
rorl
xor
cmp
fnclex
andb
hlt
lret
gs
xorl
aas
in
sub
mov
mov
dec
call
je
xchg
xor
mov
outsb
push
mov
fsubrl
daa
sti
popa
popf
dec
scas
out
push
das
sahf
ljmp
stos
adcl
test
pushf
mov
cltd
insl
repz
push
xchg
repnz
lods
sub
dec
sbb
add
jnp
fadd
push
je
xlat
sub
jbe
cmc
jbe
lods
mov
aaa
xor
andb
gs
jle
sub
cwtl
shlb
das
stos
stc
jns
fwait
lret
cmp
cltd
ja
movsb
mov
or
add
or
jmp
sbb
dec
or
dec
popa
pop
js
pop
mov
mov
test
or
push
mov
pop
cmpsb
sub
pop
stos
mov
cmp
or
xchg
mov
cmp
repnz
pop
sbb
sub
insb
js
insl
mov
push
cmpsb
push
xorb
push
iret
push
cmp
sub
and
stos
sarl
cli
inc
clc
iret
sbb
or
jbe
fcmovne
mov
sahf
adc
int
xor
in
push
pop
pop
jbe
fcmovb
stc
adc
sbb
filds
int3
sbbb
xchg
xchg
aas
adc
or
insl
out
adc
sarb
imul
popf
stos
mov
leave
mov
xchg
popf
shll
in
cmpsb
dec
inc
and
mov
enter
hlt
scas
test
cmc
fcom
sbb
dec
cmp
pop
lahf
clc
jge
inc
test
cmp
daa
fwait
pop
out
add
lds
fidivs
and
repnz
fsubs
lods
ja
jne
cltd
adc
insb
rcrb
cmp
dec
push
pop
jnp
dec
or
cltd
push
mov
inc
push
jmp
mov
arpl
es
xchg
fldt
add
scas
mov
inc
ret
jne
pop
outsb
int
ds
xor
inc
sahf
enter
pop
xor
adc
add
orb
or
inc
mov
call
add
jb
decb
adc
mov
push
and
dec
call
test
popf
test
repz
fwait
jmp
cli
mov
dec
pushf
aaa
nop
push
sbb
aaa
cmpsl
add
je
lea
dec
adc
pop
loopne
cld
sub
add
adc
pop
pushf
mov
push
add
test
mov
add
imul
pushfw
mov
sti
loopne
rcrb
sbb
gs
lds
push
xor
std
cld
leave
and
scas
jbe
mov
xchg
mov
and
jo
sub
dec
xchg
shrb
imulb
sub
imul
mov
outsl
jne
int3
push
cli
sub
into
popa
push
mov
pop
jno
mov
imul
xchg
pop
out
inc
push
pop
lods
cld
mov
jbe
pushf
dec
or
sarb
inc
inc
fwait
sbb
lods
or
xchg
loop
loope
jge
data16
pop
push
mov
xchg
lcall
pop
cmp
mov
cmp
and
into
sbb
aaa
lea
inc
xorb
mov
fsubl
lea
loopne
xlat
jo
call
sbbb
test
scas
and
mov
pop
clc
fiaddl
insl
bnd
lds
sbb
outsl
cmc
je
lods
scas
mov
mov
lods
push
adc
ljmp
add
sahf
add
in
and
aam
test
jl
sub
fcoml
jp
xor
cwtl
lea
xchg
data16
push
insl
mov
cltd
mov
jns
adc
out
add
in
lock
int3
push
in
xlat
icebp
lods
clc
push
pop
adc
mov
or
add
fiaddl
or
lods
add
sti
out
adc
mov
pop
insb
and
add
inc
pusha
add
mov
insl
mov
fs
mov
xor
aam
ret
add
sti
lret
pop
or
enter
mov
adc
xchg
pop
fcomps
call
fwait
dec
inc
clc
xchg
imul
gs
cmp
out
adc
mov
sub
xchg
push
adc
mov
pushf
shl
sbb
inc
vmulps
pop
lods
lahf
repnz
pop
aam
lods
fbld
stc
hlt
mov
js
add
or
std
jmp
mov
fwait
out
outsb
and
sbb
mov
jns
fidivl
sarl
addr16
nop
cmp
outsb
loop
js
fsubl
xor
movsl
dec
push
lcall
mov
pop
fs
mov
add
pop
xchg
pusha
or
xchg
mov
sub
clc
xchg
and
in
push
xor
push
or
int3
xor
cmp
fwait
pop
inc
push
sahf
cltd
push
ja
or
sub
pop
push
push
scas
js
shll
cmc
loop
jge
or
sahf
in
dec
and
mov
jnp
mov
dec
push
cltd
dec
lock
mov
jp
or
enter
insb
add
fwait
push
dec
dec
std
sub
xchg
in
imulb
push
cld
mov
lcall
inc
mov
adc
icebp
lea
stos
and
ds
iret
ret
mov
imul
add
adc
test
das
scas
add
setbe
cltd
xor
cltd
jne
or
outsl
lret
mov
or
test
fisttpl
or
pop
sbb
jp
inc
jae
add
loop
test
in
mov
incl
divl
fwait
xor
sub
inc
sub
icebp
sbb
cmp
add
mov
push
pop
jb
iret
or
mov
sbb
fists
jno
or
push
movsb
decb
shll
push
imul
out
aam
adc
xchg
mov
mov
or
and
or
sub
lods
sbb
mov
and
fildl
scas
aas
xor
pop
jno
popf
popa
loope
sub
jp
stc
ffreep
mov
shll
pop
cmp
push
mov
add
gs
dec
xchg
push
movsl
lahf
add
push
mov
sub
and
mov
adc
mov
out
stos
test
nop
pop
jbe
ret
aaa
gs
jns
test
jo
aas
ja
lret
es
sub
or
test
mov
mov
sbb
jmp
push
stc
mov
cmp
push
cli
fs
bound
adc
fidivs
filds
lods
in
inc
cmp
xor
jmp
rolb
mov
xchg
cmp
sbb
pushf
xor
cmp
mov
push
out
inc
jl
loope
mov
xlat
xor
cmp
and
out
jp
push
fsubs
fisttpl
pop
out
xorl
inc
rorb
or
in
mov
out
lahf
imul
bound
out
or
ret
iret
dec
add
mov
push
mov
mov
mov
add
xor
out
popf
sbb
push
fnstsw
adc
adc
pop
test
push
add
fiadds
sub
pusha
cmp
xchg
loop
popa
xchg
sbb
int
push
iret
push
sbb
pop
imul
mov
jp
addr16
or
jbe
jnp
or
xchg
sbb
das
lret
fstl
fwait
jg
mov
add
jns
pop
mov
idivb
fs
mov
movb
jg
adc
into
cmc
ljmp
sbb
mov
movsb
sbb
mov
pusha
out
adc
add
repz
cmpsl
sahf
sti
pushf
shrb
push
sub
or
jbe
cli
inc
cmp
push
xchg
dec
xchg
xchg
jg
inc
lods
lret
call
or
lds
or
ljmp
push
mov
call
into
push
sub
pop
les
add
xchg
inc
mov
lret
mov
addr16
cmp
push
mov
mov
in
adc
cltd
iret
out
cltd
pop
and
imul
xchg
test
jbe
in
cmp
push
lret
call
sar
and
push
mov
inc
xlat
push
lods
cmp
mov
mov
xor
inc
pop
stos
add
sbb
pop
aas
dec
dec
fucom
testb
add
xchg
sbb
stos
aaa
adc
mov
xor
sub
fcoms
mov
push
daa
mov
inc
mov
pop
cmp
rcr
push
int
push
or
pop
addl
cmp
pop
add
push
cmp
mov
aam
lods
or
lods
push
cmovg
dec
push
xchg
add
jg
mov
dec
mov
jns
pop
loope
jno
addl
outsl
iret
pop
insl
add
adc
insl
rcll
jns
pushf
sub
mov
and
sub
out
outsb
adc
mov
or
jno
fs
fisttps
xchg
int
or
xchg
sub
scas
and
sbb
add
adc
sub
mulb
inc
add
jae
mov
pop
insl
cmovno
fcmovnbe
push
shrl
mov
mov
scas
mov
mov
mov
or
xor
in
mov
scas
cmp
fcmovne
mov
lods
bound
pop
and
sub
bound
push
cld
mov
std
aad
push
ficoml
out
out
je
daa
imul
into
cmp
inc
adc
dec
lods
scas
jae
xchg
es
mov
inc
cmp
or
pusha
adc
repnz
pusha
iret
lds
mov
adc
push
or
push
inc
inc
add
jnp
sub
clc
jl
mov
lea
push
pop
and
in
clc
into
sbb
repnz
push
int3
xchg
lods
mov
imul
lahf
scas
lret
cli
das
js
and
push
sbb
push
incb
mov
jns
mov
mov
enter
push
imul
nop
or
pop
test
outsb
pop
xlat
sub
std
aas
rorb
mov
in
mov
clc
lock
add
jl
sbb
add
sub
fnstsw
roll
fisubrs
dec
sub
and
sub
jne
jnp
sub
add
and
fbld
inc
repnz
mov
scas
add
sub
cmpb
sub
and
arpl
push
dec
imul
xchg
adcb
decb
pop
jle
aaa
into
lret
xchg
push
inc
adc
out
fisubl
push
cli
push
not
aas
mov
mov
mov
push
pop
jmp
ret
push
into
aaa
inc
icebp
leave
mov
repz
cltd
sbb
jl
imul
out
fildl
cld
xchg
mov
pop
pop
mov
adc
ljmp
xor
repnz
jne
sarb
jp
inc
adc
loop
jns
adc
lahf
ffreep
enter
mov
pop
fisubrs
shlb
xor
jns
mov
test
inc
loopne
cmp
push
pop
lds
mov
push
push
int3
stos
mov
xchg
nop
mov
sahf
imul
sahf
icebp
cwtl
insb
sub
sub
int
ss
mov
popa
inc
dec
push
aad
jbe
jl
out
mov
in
iret
sub
jecxz
fcompl
popa
test
lock
cld
mov
or
xor
inc
push
shll
add
xchg
movsb
cmp
popf
add
mov
jns
repnz
enter
and
push
or
mov
dec
leave
repnz
ljmp
add
mov
subb
je
push
or
dec
fwait
stos
mov
lods
jl
push
push
mov
ret
ficoms
lock
pop
std
out
add
xchg
push
mov
dec
inc
or
or
cmp
loop
test
jae
test
imul
lock
mov
and
add
in
shrb
mov
ja
arpl
in
sbb
fxch
xchg
jbe
jbe
imul
sub
cmp
cmc
cmp
or
in
sub
int3
or
push
xor
in
mov
imul
push
icebp
rorl
mov
jb
push
and
icebp
jno
in
fs
jne
movsb
lods
sahf
pop
mov
fwait
shll
fcmovne
daa
push
mov
sbb
mov
inc
ffreep
xchg
insb
out
mov
pop
push
aam
mov
add
sahf
and
out
mov
mov
cmp
cs
test
ja
cmp
test
addl
mov
inc
mov
jb
push
decb
pop
mov
or
pusha
sub
aad
pop
or
cmp
mov
lcall
and
jno
cmp
sub
jne
pop
andb
inc
mov
dec
sbb
pop
pop
jnp
or
inc
xor
xchg
sbbb
or
push
inc
xor
xlat
xor
icebp
mov
fsts
xchg
repnz
addr16
adc
out
jae
push
clc
dec
repnz
jns
popa
mov
out
in
mov
sbb
jne
mov
enter
test
jne
lds
aaa
xor
push
repnz
push
popf
jge
hlt
and
dec
pop
xor
sbb
rcr
les
mov
push
and
mov
mov
mov
sbb
arpl
or
xchg
enter
jns
mov
jg
push
inc
loope
xchg
adc
or
in
hlt
mov
ds
js
mov
mov
stc
add
test
lock
mov
sub
sub
pop
mov
insb
inc
adc
mov
adc
test
push
push
mov
sarb
mov
or
pushf
dec
aas
imul
dec
push
and
ljmp
std
jecxz
cld
sub
js
cltd
xor
clc
push
adc
cmc
imul
aad
fistpl
push
jge
test
mov
es
sub
aam
loop
pop
mov
sub
test
stc
je
push
insb
lret
inc
xor
test
xor
icebp
hlt
xchg
fs
into
test
and
xor
mov
dec
lret
icebp
mov
xchg
cs
push
sbb
faddl
cli
pop
dec
sub
lods
inc
mov
inc
cwtl
inc
adc
inc
jge
popf
xchg
popa
and
inc
aas
outsb
mov
jae
les
xchg
jne
das
stc
cmc
mov
movsb
mov
jp
mov
fisttpl
sbb
aad
pusha
bswap
loope
jmp
test
andb
jmp
mov
mov
jnp
pop
mov
push
or
xchg
jecxz
addl
xor
fbstp
cmp
dec
std
mov
pop
pusha
mov
in
out
add
dec
test
test
jmp
rorb
and
lret
add
xlat
jns
push
jg
scas
mov
fimuls
mov
inc
sbb
lret
mov
adc
lods
jecxz
push
mov
xor
mov
cmc
pop
aam
xor
mov
pop
aas
es
cwtl
loopne
mov
subl
shrb
mov
imul
cmp
mov
xor
lahf
mov
sbb
jbe
pop
sbbl
loopne
cmpsb
lods
cld
fildll
mov
insb
and
pop
sub
inc
andl
dec
test
mov
push
sub
bound
lahf
mov
adc
and
dec
xchg
aad
cwtl
int3
fdivl
or
sub
mov
clc
std
adc
dec
outsb
mov
mov
jne
add
push
push
gs
int
js
arpl
test
test
fbstp
ja
lret
bnd
dec
mov
push
aad
cmpsb
mov
ret
adc
int
jb
lods
or
lock
xchg
gs
arpl
leave
std
cmp
scas
jp
pusha
aam
imul
push
cld
aas
int
add
push
daa
leave
movsw
mov
pop
sbb
cmp
rol
cmp
xchg
dec
lea
rcrb
insl
inc
sub
repnz
pop
ja
jnp
cmp
inc
inc
push
shll
sub
mov
out
adc
mov
test
cmp
or
add
xor
ja
aaa
js
cmp
scas
repz
lock
inc
adc
leave
jp
mov
and
mov
xchg
addr16
xor
inc
sbb
mov
xor
jbe
call
test
fiadds
mov
sbb
xor
inc
inc
fcoml
in
sub
mov
sbb
cmp
xor
cmp
xor
xchg
scas
movsb
lods
and
fimuls
sub
lea
int
es
jg
mov
dec
mov
mov
pop
daa
mov
pop
pop
push
cmp
lea
adc
adc
sbb
add
add
fbstp
enter
mov
sarb
xor
in
adc
shl
bound
roll
daa
sub
aaa
fprem
pop
movsb
lds
dec
out
loope
xchg
das
xor
pop
fiaddl
jge
add
xor
cmp
int3
lods
in
fsts
movsb
and
stc
push
push
push
setge
adc
and
lea
clc
push
ja
fidivrl
in
inc
std
add
pushf
jl
mov
insb
add
int3
add
inc
call
fdivrl
inc
in
idivb
adc
ret
mov
jbe
xor
cmp
test
shll
mov
cld
inc
or
jbe
push
popf
fsub
fwait
mov
mov
and
xchg
jl
in
scas
xchg
mov
outsb
lea
mov
cwtl
bound
adc
adc
mov
pop
inc
lret
mov
xor
in
faddl
outsl
adc
sti
pushl
push
sti
sbb
or
push
fnsave
or
clc
push
mov
in
ret
cmp
cmp
lcall
push
cmp
xchg
leave
add
aad
into
icebp
xchg
sbb
les
inc
add
aaa
push
cmp
gs
sti
inc
pop
push
fwait
shrl
iret
test
cmpsl
sbb
jb
push
push
or
sub
push
inc
outsb
stc
mov
mov
and
sub
xor
js
outsl
sbb
das
test
adc
idivl
mov
adc
cltd
adc
in
xor
lods
lock
sub
sub
addr16
xlat
out
lods
cmp
or
xchg
add
ret
mov
inc
xchg
cwtl
sbb
call
mov
testb
mov
jl
dec
xlat
stos
xorb
cmp
xor
adc
dec
xor
pop
mov
lods
in
cld
mov
fdivr
repz
push
pusha
xchg
shlb
push
mov
push
ret
adc
inc
aad
das
adc
inc
inc
push
cmc
sub
add
daa
loop
xlat
loop
inc
clc
cmpsl
ljmp
xlat
dec
ss
lods
aaa
or
push
mov
rcrl
inc
or
das
mov
loope
out
insl
lahf
push
mov
and
push
pop
out
fwait
pop
xchg
jg
jns
ja
inc
adc
pop
jg
cmp
adc
bound
rcl
push
xor
cli
test
icebp
push
icebp
lcall
nop
jb
dec
push
incl
push
aas
xchg
loope
sub
pop
inc
adc
clc
packsswb
add
fs
xor
ljmp
rcl
push
mov
testl
jae
icebp
mov
xor
inc
dec
xorl
pusha
call
mov
and
fldenv
jae
push
ds
adc
daa
inc
stos
or
lock
adc
frstor
inc
push
sbb
inc
ljmp
jne
inc
movsb
fdivrs
div
push
inc
lcall
outsb
mov
lods
mov
pop
push
add
and
mov
pushf
add
cld
or
outsl
cmpsl
mov
cmp
iret
cmc
test
pop
fs
push
scas
aam
das
in
cli
rcl
jo
sbb
clc
ljmp
sbb
jnp
add
jb
lea
pop
lods
aaa
loope
insl
lcall
sbb
add
push
mov
add
in
sbb
xchg
mov
ss
into
xchg
cmc
or
leave
mov
sbb
pop
or
xor
sub
call
mov
mov
inc
ja
push
and
andl
es
jbe
push
cltd
adc
loope
jnp
pop
cmpb
fcomps
sarb
push
cmp
clc
lea
inc
push
sarl
fcomp
aas
cli
std
shl
xor
xor
ret
push
ret
fiadds
jge
in
mov
xor
adc
xchg
mov
pop
jmp
jo
xchg
mov
mov
or
xor
mov
xor
cmc
in
cltd
jmp
loop
or
sbb
mov
push
stos
cmp
and
pushf
inc
ss
insl
push
fisttps
add
mov
stos
loopne
push
jecxz
out
sub
gs
fldl2e
in
jb
jns
mov
pushf
jo
fwait
in
cmpsb
das
ret
inc
imul
sbb
xchg
mov
push
cli
lcall
daa
sub
nop
loop
nop
call
xchg
lea
and
lea
cwtl
mov
je
arpl
ds
cmp
imulb
daa
mov
clc
repz
adc
inc
push
or
cmpsl
mov
adc
push
sub
or
dec
and
jge
add
jno
cwtl
mov
ljmp
mov
test
into
arpl
pop
inc
and
mov
pop
shll
cmp
out
pop
mov
mov
push
add
pop
mov
test
pop
mov
lock
cmpsb
aas
xchg
add
push
in
in
add
jno
or
ljmp
imul
sti
outsl
jo
dec
stos
sbbb
imul
adc
testl
mov
call
lret
xor
femms
stc
sub
mov
mov
clc
push
push
push
lea
and
inc
cmp
mov
add
inc
push
pop
mov
xchg
xor
xchg
dec
pop
mov
mov
mov
xor
test
jmp
adc
leave
mov
xor
pop
test
test
cltd
test
adc
es
pop
and
pusha
cmpsl
ss
mov
pushf
cmp
inc
xor
push
dec
gs
add
enter
jb
jae
cmc
push
or
daa
xor
xchg
pop
inc
bound
mov
mov
addr16
inc
jg
jo
mov
test
addr16
cmp
mov
and
and
or
xchg
xchg
bound
mov
pushf
adc
fs
mov
mov
imul
push
movsb
aam
pop
test
in
mov
push
jecxz
bswap
push
es
ror
inc
add
add
pop
in
icebp
lret
jo
xor
negb
insb
rolb
mov
fimull
mov
mov
ljmp
cmpsb
cmp
cmp
pop
pop
mov
adc
lcall
mov
mov
add
mov
xor
push
push
bound
aas
lahf
adcl
div
or
bound
and
jle
bound
test
xor
insb
mov
and
int
sbb
push
cmp
xor
test
jmp
xchg
and
jecxz
xchg
enter
dec
push
das
mov
push
shlb
divps
and
mov
jne
ljmp
mov
push
jno
pop
push
push
or
jmpw
add
pop
inc
iret
aam
pop
or
add
cmovbe
sbb
mov
jae
xlat
pop
xor
sub
ss
mov
stos
bound
lahf
cmp
sahf
pop
shl
mov
push
jge
sub
mov
dec
jp
sub
and
in
sarl
xchg
lea
sub
inc
pop
fmull
into
es
sub
jle
push
and
cmp
add
sbb
xor
mov
shlb
imul
loop
pop
sub
aaa
data16
out
xchg
or
test
add
jno
sub
xor
mov
out
cmpsb
dec
dec
das
sub
cmpsb
cmp
sahf
test
lods
idivb
jae
cmpsl
mov
lahf
sub
inc
cli
into
cmpsl
jne
cmovnp
movsl
xchg
cli
pop
loope
add
cmp
jbe
stc
mov
jecxz
mov
dec
jp
adc
pop
mov
cs
call
insl
hlt
push
shrb
addb
inc
pop
out
xor
push
scas
es
sub
add
mov
and
sbb
or
fdivl
cmp
adc
jo
or
mov
cmp
sub
jae
xor
inc
bound
mov
stos
or
xchg
cltd
mov
sbb
mov
aas
cmp
insl
dec
fldenv
xchg
roll
xor
data16
stos
jo
aam
test
mov
push
movsl
clc
subb
cmc
cmpsl
lret
push
inc
jae
lret
mov
mov
adc
sub
in
insb
pop
in
xchg
int3
or
jbe
mov
int
mov
pop
aam
xor
daa
xchg
mov
orb
pop
push
fsubrs
jl
xor
unpcklps
or
mov
inc
mov
dec
leave
add
scas
mov
roll
sahf
xor
mov
jp
jb
xor
jmp
pop
mov
push
mov
cmpsb
adc
pop
xor
sub
mov
xchg
xor
pushf
adc
and
icebp
shr
fstp
pop
les
decl
or
or
aad
pop
test
jnp
xor
or
cmp
cmpsb
sub
cmc
mov
jno
movsb
cs
and
xchg
xchg
lret
sahf
out
jne
mov
jl
sub
push
fsubrs
xor
jge
sub
ds
enter
addl
pop
push
dec
aaa
xor
jno
mov
fsubrl
mov
icebp
test
mov
fcomip
loop
cmp
mov
xor
clc
and
arpl
cltd
inc
add
mov
cmp
mov
test
dec
or
nop
imul
jecxz
mov
cli
inc
and
lret
xchg
aam
aad
xchg
repnz
xchg
jmp
mov
push
inc
mov
mov
jecxz
pusha
lods
dec
mov
and
insb
fcmovnu
or
adc
cli
xor
movsl
dec
cwtl
leave
sarl
iret
xorl
fucomip
adc
mov
stos
jo
shrb
out
in
pop
jp
push
cli
popa
fdivrs
pop
or
lret
mov
movsl
ja
pop
enter
jle
loope
xchg
cli
pop
xchg
mov
xchg
push
shlb
into
fcomp
out
xchg
clc
push
xchg
adc
inc
inc
xchg
paddq
push
into
jp
stc
jecxz
pop
push
push
hlt
int3
stos
jb
outsl
jp
imul
sub
testl
ret
inc
or
mov
fnstsw
jno
jo
dec
push
lret
cmp
sbb
jmp
and
test
xchg
and
push
xor
ja
pop
cmpsl
lahf
jmp
mov
cld
cmc
jle
xchg
mov
mov
aad
int
es
jp
mov
cltd
push
js
dec
push
xchg
loop
jmp
pushf
outsb
nop
stos
repnz
dec
shrd
jp
dec
in
jmp
aas
mov
lea
cltd
or
pop
push
clts
mov
dec
and
movsb
jnp
or
add
repz
lret
dec
fldenv
addb
mov
insl
sub
mov
loope
xor
inc
jae
dec
nop
shll
out
dec
mov
mov
divb
out
out
into
adc
jge
fldl
je
movb
addr16
push
ds
jecxz
fadds
int3
std
stos
push
jnp
add
pop
xchg
xchg
je
add
dec
xorb
movsl
or
lods
jp
sbb
sub
mov
jge
mov
in
jne
stc
mov
push
push
pop
in
inc
bound
mov
add
xor
stos
add
cmp
push
mov
stos
lods
enter
cli
int
sti
push
mov
or
gs
inc
xchg
and
sub
lock
fiaddl
push
xchg
jb
cli
das
ret
xchg
arpl
push
mov
js
icebp
fcoms
fsubr
xor
jo
scas
popf
adc
sub
ds
jl
adc
cmp
mov
fdiv
fildll
jmp
adc
iret
stos
enter
pop
enter
aam
ficompl
xor
jnp
test
in
fldl
test
and
cltd
jnp
insl
subb
movsl
cli
add
movsb
or
cmp
push
mov
adc
push
scas
xchg
insb
inc
dec
push
shrb
push
push
test
jne
sbb
fsubrl
std
mov
aas
cmp
and
rcrb
sub
ret
fnsave
out
mov
aam
xchg
lahf
push
xchg
loop
mov
or
mov
dec
cltd
outsb
inc
imul
add
mov
push
aas
mov
cmp
cli
je
aam
pop
lods
cmp
addr16
ret
das
adc
icebp
xlat
aaa
mov
and
lret
or
mov
rclb
jmp
arpl
les
adc
stos
sbb
aas
mov
sub
cli
popf
mov
fs
jne
add
lods
xor
and
jle
stos
inc
or
cmc
insl
pushf
rcrl
sbb
push
sbbb
mov
adc
push
clc
xorl
popa
aad
fsubl
fucomi
xor
inc
cmp
push
and
fisubrs
das
iret
xchg
clc
add
add
js
jno
call
cmpsl
mov
mov
cwtl
push
aaa
es
rcl
add
rcrb
pop
add
push
sub
cmp
adc
outsl
adc
sbb
fs
insl
ljmp
cmp
push
mov
add
mov
loopne
rorl
int
sub
cltd
aas
push
sub
mov
push
jge
cs
inc
jno
mov
jnp
ljmp
or
or
jmp
pop
jl
and
xor
outsl
sti
scas
push
xchg
jge
pop
pop
pop
lahf
je
push
adc
adc
int
adc
jo
sub
stc
outsb
cmpl
clc
and
loopne
out
cli
mov
arpl
sarb
lahf
pcmpeqd
mov
sub
pop
jge
xchg
mov
std
push
mov
or
pop
mov
lahf
sbb
mov
cltd
popf
aam
pop
xchg
or
movsb
rolb
shll
out
inc
loopne
pop
push
push
cmp
mov
inc
mov
cmp
ror
or
push
mov
lea
cmpsb
xlat
ror
mov
aam
sub
mov
add
jo
cmpsl
cmp
xchg
xchg
adc
aas
shlb
cmp
push
daa
mov
insb
jl
stc
test
mov
cli
pop
lea
and
xchg
add
pop
je
shlb
jle
addr16
pushl
pop
and
xchg
daa
fidivs
push
cmp
jg
hlt
sti
push
pop
xchg
aaa
adc
cmp
test
mov
insb
pop
xor
dec
out
into
fs
ds
outsb
mov
push
adc
pushf
outsl
in
jnp
jp
enter
pop
icebp
mov
pop
je
ret
xchg
enter
les
push
mov
add
xor
xlat
mov
cmpsl
push
mov
mov
cmp
mov
movb
mul
rorl
cltd
fadds
imul
and
popa
jmp
pop
pop
pushf
lahf
xchg
dec
xor
lds
int
dec
inc
inc
pushf
pop
lock
mov
jp
dec
outsl
in
cmp
ret
lea
shll
pop
clc
sub
push
mov
inc
add
repnz
popf
test
daa
bound
lods
xor
sbb
adc
int3
lret
icebp
xchg
cld
cmpl
xchg
and
insl
negl
dec
dec
cld
and
aas
sbb
outsl
add
push
add
std
push
sbb
enter
jmp
and
xchg
arpl
sbb
les
add
mov
popf
inc
adc
je
mov
bound
dec
stos
adc
mov
out
ret
jmp
inc
add
push
push
popl
mov
cwtl
lock
fstl
dec
pusha
in
adc
adc
inc
sbb
mov
pushf
inc
stos
cmp
push
lock
mov
mov
cli
pop
xor
adc
ljmp
nop
pop
cwtl
jl
pop
adc
cmc
cmp
out
pop
lods
and
lret
into
xor
jnp
mov
mov
stos
clc
mov
lea
dec
inc
or
sub
std
sbb
out
xchg
addb
insb
lcall
pusha
xlat
push
jl
fstps
add
pop
xchg
popf
add
lds
movsl
insl
cmp
std
test
add
mov
inc
mov
inc
gs
cmpb
sbb
mov
cltd
dec
dec
cs
or
lods
movsb
hlt
cs
mov
and
outsb
dec
or
or
adcb
ror
std
jge
lahf
xchg
xchg
repz
repz
and
add
es
jmp
jg
out
and
sarb
inc
cwtl
fstpl
or
xchg
xchg
sarb
fisttpll
test
les
adc
cltd
loop
lods
fildll
pop
cmp
insb
fidivrl
movsb
dec
test
mov
test
xlat
mov
push
loopne
jns
lret
sub
pop
cmp
jbe
cltd
mov
push
mov
mov
test
mov
in
fsubrp
xchg
or
and
out
sbb
repz
push
push
rorl
jo
movsb
cmp
loop
inc
adc
movsl
sbb
out
je
sbb
xor
in
dec
mov
xchg
insb
pop
movsb
shlb
cmpsb
sbb
xchg
cmp
cmp
ljmp
jmp
and
sub
fdivrs
dec
loop
aad
imul
stos
sahf
test
lds
cmp
mov
lahf
and
push
dec
outsl
push
test
insb
jb
gs
adc
sbb
inc
dec
inc
cs
lret
lret
mov
push
loop
and
filds
sbb
xor
jmp
into
inc
clc
push
mov
or
cmp
cwtl
cmp
inc
les
add
xor
cmp
je
ja
add
mov
dec
mov
cmp
mov
outsl
pop
fcompl
cli
imul
xchg
sbb
mov
push
jmp
mov
es
clc
add
cmp
aam
xchg
lcall
inc
scas
mov
loop
mov
ljmp
add
data16
iret
dec
sahf
test
mov
xchg
bound
xchg
jge
push
sub
scas
push
pop
dec
int3
xlat
sbb
lods
call
mov
orl
jecxz
iret
xchg
test
mov
je
sub
jno
jb
fildll
and
push
mov
xchg
inc
add
jmp
adc
pusha
in
adc
popf
push
in
inc
mov
stos
incb
jmp
cmp
cmp
mov
bound
jns
push
fsubrs
cmp
sub
xchg
inc
pushf
stos
sbb
xor
dec
cmp
cmpsb
push
int3
movsb
jns
xor
les
pop
rolb
cmp
xchg
mov
cmp
cmp
lock
add
inc
fsubs
mov
imul
dec
js
pop
push
push
add
lret
inc
and
bound
or
jne
ret
ds
push
mov
jg
in
pop
icebp
adc
sbb
dec
test
fdivl
ror
mov
imul
ficompl
jbe
dec
sbb
mov
mov
sbb
mov
mov
mov
push
in
add
jno,pn
xchg
or
push
in
and
stos
xchg
sti
mov
mov
sub
cld
addr16
es
jl
movsl
push
cwtl
popf
pop
xor
sub
sahf
aas
je
stos
or
jp
jl
inc
int
xor
cmpsl
xchg
scas
push
dec
fsubl
lock
mov
jl
sbb
sbb
shll
sti
mov
fnstenv
jnp
stos
mov
mov
addr16
cmpsl
lock
inc
add
js
cmp
lock
inc
and
xor
in
dec
sarl
loope
mov
ret
aaa
sar
cmp
mov
lods
lock
jne
mov
jno
mov
sbbb
icebp
mov
stos
leave
sub
add
mov
jp
test
jg
int3
push
jbe
out
outsb
fildll
mov
pop
or
push
das
add
fld
shrl
rcrb
push
jae
dec
cmpsl
xchg
stos
xor
jne
jne
aam
mov
sub
iret
jo
test
leave
dec
les
mov
and
inc
stos
jecxz
sbb
cmp
int3
xchg
dec
cmp
fimull
jecxz
cmpsl
insb
push
movsb
enter
arpl
or
xchg
shrl
mov
jnp
in
outsb
dec
cmp
dec
pusha
push
cmpb
and
push
out
xor
lea
imul
mov
mov
mov
xor
sub
das
add
mov
adc
cmc
and
sub
jge
adc
push
xchg
push
dec
sbb
or
scas
xor
fwait
and
insb
inc
outsb
sub
mov
pop
cmc
mov
mov
lcall
test
aaa
inc
mov
push
jg
push
dec
mov
test
subl
xor
cmp
xor
mov
push
add
jne
repnz
and
push
fdiv
mov
imul
inc
addb
dec
cli
loop
movsb
pop
mov
aaa
or
add
or
mov
daa
out
imul
je
xchg
ja
and
or
and
sbb
push
sub
push
testb
mov
mov
and
cltd
dec
or
loope
int
dec
dec
in
aam
xlat
pusha
xchg
je
cmp
sti
push
fmull
or
inc
adc
adc
adc
ret
lock
cld
leave
jae
les
nop
je
dec
aam
mov
ret
adc
int
cmp
insb
insb
mov
negl
push
shlb
test
fdivp
xor
outsb
push
andb
nop
cmc
jp
sbb
outsb
cmp
adc
sub
dec
cmp
xchg
loopne
dec
mov
sbb
adc
dec
add
insb
pop
stos
aas
sbb
mov
fs
out
scas
daa
rcrl
jne
mov
mov
push
int3
push
out
lods
ljmp
mov
imulb
mov
jle
or
pop
int
mov
push
sub
mov
movsb
inc
xchg
add
adc
add
enter
cli
mov
orb
dec
pop
mov
out
fistpll
adcl
gs
loopne
jmp
inc
popf
cld
shlb
push
iret
test
sbb
sahf
ja
xor
push
sar
add
pop
cmpsb
mov
inc
and
jl
lock
mov
dec
and
imul
or
int
outsl
push
mov
call
hlt
cmovns
mov
lods
mov
imul
jmp
cltd
cmp
mov
add
inc
ja
push
pop
loopne
movsl
sbb
icebp
sub
and
cmp
test
inc
jl
cmc
mov
out
xor
mul
ret
stos
jge
outsl
push
arpl
pop
add
pop
es
std
movl
repz
mov
cmp
loopne
jo
fwait
xchg
add
sbb
cltd
mov
jno
xor
ss
adc
or
jno
movsl
inc
je,pt
push
cmp
pop
add
add
mov
call
mov
mov
aad
ja
jns
push
lret
rorb
cs
cmp
into
cmpsb
pop
add
pop
arpl
cmp
jp
ss
aaa
pushf
ss
imul
lds
sbb
loope
ficomps
icebp
pop
test
cmp
adc
movsl
xor
or
pop
sbb
lret
out
jb
das
sub
out
xlat
sbb
lcall
mov
xchg
call
push
mov
repnz
cmpsl
mov
inc
popf
pop
ja
xchg
rorb
fiaddl
fucomi
loope
adc
add
pop
bswap
ftst
add
test
or
push
mov
push
and
insl
push
ja
xchg
jb
stos
mov
xchg
iret
xor
jge
mulb
ror
jle
jp
adc
sub
sbb
dec
jb
gs
das
xchg
data16
dec
lret
fstpl
push
jae
mov
or
mov
jns
jle
sub
pop
in
xchg
jb
sbb
leave
fisubl
add
cmp
dec
aam
xchg
incb
test
mov
push
std
or
nop
mov
sti
fcomip
or
xchg
mov
jmp
pop
dec
mov
pop
mov
ja
popa
adc
inc
in
fisubs
push
xchg
push
push
jp
sbb
mov
push
gs
fnstsw
pusha
push
out
ss
lock
and
insl
pop
fs
mov
subps
push
xchg
movsl
mov
in
adc
fwait
sbb
add
push
or
xor
jmp
mov
lods
cmp
dec
xchg
fnsave
mov
jb
pop
pop
popa
dec
xor
repnz
int
es
sbbl
inc
sub
and
xor
pushl
cld
mov
xchg
mov
sbb
jge
mov
pop
xor
push
popf
cmc
push
jae
or
mov
dec
insl
std
pop
cmp
insl
test
jno
sub
fbld
pop
insl
shll
pop
mov
shrl
mov
in
jne
data16
fwait
test
sub
adc
cmpsl
cltd
aaa
cmp
lret
push
push
mov
cs
stos
fsubl
cltd
jle
fisubl
add
das
leave
sub
push
push
mov
in
jg
mov
and
mov
mov
jbe
cs
fisttpl
addr16
in
push
dec
repz
insb
mov
js
add
outsl
ret
repnz
or
mov
cmp
dec
jmp
sbb
dec
sahf
outsl
test
xor
jle
xchg
mov
and
jns
fnstenv
push
cmp
cmp
mov
jne
sbb
lret
jns
jp
ret
test
jne
and
jo
scas
and
gs
xchg
rorb
mov
and
pushf
and
mov
leave
iret
dec
sub
pop
mov
shll
loopne
aaa
xor
lods
dec
ds
xor
rcll
mov
js
xchg
push
repz
sbb
test
adc
and
jne
lret
dec
addb
sbb
mov
outsl
xchg
push
pop
push
push
fwait
jl
lods
clc
sbb
insb
mul
popf
jmp
in
sub
adc
shll
sbb
je
cmp
add
sub
repnz
repnz
not
jnp
add
jnp
jne
rcrb
cmc
add
xchg
data16
xchg
out
xchg
mov
add
lcall
dec
inc
push
push
cmp
sbbb
cmp
adc
jp
jno
mov
lods
xchg
fisubl
pop
fldcw
test
notb
add
cmpl
mov
push
or
jle
popf
test
fucomi
mov
xchg
adc
xor
inc
inc
cmc
cld
jge
dec
pop
test
sub
into
movsb
dec
inc
aaa
je
cs
xor
lods
mov
xchg
test
jmp
mov
testl
pop
and
cmp
jle
mov
mov
xchg
in
insb
dec
pop
xchg
leave
in
sbb
ljmp
clc
mov
cs
sbb
xor
or
sbb
pcmpeqd
ss
cli
pusha
cmp
dec
stos
mov
sbb
mov
insl
jo
xor
mov
es
mov
arpl
and
dec
mov
neg
push
call
imul
arpl
sarl
xchg
ror
subl
sub
rcrl
nop
push
andb
mov
lcall
cmp
ficoms
ss
lcall
cmp
fucom
cs
subl
cmpsl
and
fnstcw
jecxz
iret
cld
pop
jo
sar
mov
insb
sub
pop
call
fucom
push
pop
js
out
and
addr16
fwait
lret
mov
js
pop
in
jp
cmpsl
stos
and
adc
push
stos
mov
mov
bnd
movsb
inc
inc
jge
mov
pop
rcr
jl
mov
pushf
xlat
arpl
mov
popf
dec
pop
dec
fisubl
mov
mov
add
popf
movsl
roll
int3
mov
mov
scas
jle
xorb
les
pop
mov
ljmp
pop
mov
fcompl
daa
jae
test
stc
xchg
pop
aam
into
dec
pop
fisubrs
in
lahf
icebp
int3
loop
sti
adc
sbb
jg
loop
scas
and
addl
fisubl
and
cld
nop
push
in
pop
call
inc
repnz
dec
xchg
int
mov
mov
mov
mov
ljmp
popf
push
and
andl
pop
xchg
and
push
out
fisubrs
sbb
add
repnz
mov
adc
jge
pop
pop
jo
push
and
outsb
loope
dec
ss
pop
fildl
jg
scas
fildl
aam
and
push
int3
idivl
pop
jmp
rcrl
jg
cld
and
stos
xlat
push
mov
loope
push
pop
jmp
pop
sub
adc
jnp
sbb
mull
loop
and
aam
arpl
fmuls
ja
or
pop
popf
inc
jp
sahf
loop
pop
cmc
push
add
in
clc
or
sub
int3
adc
sbb
mov
cmp
cwtl
repz
xlat
fiadds
ds
jmp
mov
cmpb
and
outsl
pop
xchg
lcall
std
jmp
push
fidivrs
rclb
xchg
loope
ljmp
pop
repz
dec
imul
jne
xchg
cmp
icebp
clc
popf
xchg
pop
push
cmpsb
push
cmp
adc
xor
es
mov
xlat
mov
fs
fdivs
insb
mov
loopne
xchg
inc
xchg
inc
insl
stc
sbb
sub
cld
pop
mov
mov
pop
mov
jno
lcall
pushf
add
cmp
sbb
adc
xor
fidivl
or
imul
imul
clc
adc
call
and
xorl
pop
xchg
stos
push
jp
outsb
repnz
rolb
xchg
xor
mov
vmptrst
dec
xchg
xor
scas
jne
push
xchg
iret
ret
sbb
pop
int
push
imul
mov
mov
ss
sbb
mov
adc
cli
int3
in
out
popf
jb
mov
jge
dec
mov
mov
je
jl
adc
repnz
dec
fiadds
call
out
out
jle
insl
xlat
mov
int3
aas
fcompl
push
mov
mov
sbb
mov
and
cmp
into
fistps
stos
cld
test
testb
loop
hlt
and
bound
xchg
and
enter
pop
pop
mov
scas
or
push
pop
and
test
mov
rorb
or
inc
jns
lock
jb
mov
or
cs
shrb
or
outsb
cmc
inc
daa
and
xchg
xchg
dec
mov
icebp
inc
jno
sbbl
ljmp
xchg
dec
mov
push
push
inc
adc
mov
repz
adc
xchg
mov
pusha
sbb
data16
pop
add
push
dec
dec
jge
leave
mov
into
adc
adc
inc
mov
jne
xorl
sub
jbe
xlat
push
das
xchg
sbb
scas
in
inc
enter
push
push
pusha
mov
iret
popf
mov
test
stc
scas
lods
mov
sub
jns
dec
add
jecxz
lahf
lock
mov
bound
mov
nop
mov
push
icebp
push
aas
lods
or
mov
or
pop
jbe
inc
mov
push
pop
inc
sbb
aas
outsb
add
aam
repz
fisubl
popa
out
fnstcw
xchg
pop
cli
xchg
mov
orb
aam
jge
nop
dec
mov
xchg
mov
std
arpl
jg
lret
out
fiadds
push
loope
push
push
popf
jg
cmp
push
insb
cli
arpl
mov
sar
movsl
mov
aas
movsl
push
das
lret
lret
or
pop
stos
inc
out
push
add
dec
into
hlt
mov
and
inc
mov
sbbb
adc
dec
jmp
in
xchg
inc
xor
test
jo
gs
daa
dec
jle
repz
aam
vucomisd
mov
stc
pusha
loop
loope
xchg
or
into
and
in
inc
adc
push
xchg
mov
jp
add
daa
sub
nop
dec
lds
jb
ss
loope
mov
cmp
test
pop
fisubs
hlt
mov
lcall
xor
push
sti
or
daa
rolb
seto
or
icebp
xor
and
ror
inc
aam
test
cmpsl
loop
rcl
int3
pop
cmp
enter
cmp
stos
nop
ficompl
hlt
push
rorb
add
cmp
ret
sbbb
push
lock
cltd
fistpl
aas
pop
adc
pop
jo
aas
cmp
movsb
enter
repnz
jl
push
xchg
adc
mov
shrb
movsl
test
adc
cltd
or
adc
in
inc
or
cmpsl
push
push
dec
mov
mov
push
xor
push
mov
xchg
pop
idiv
pop
imul
rclb
test
dec
cld
leave
int3
les
ljmp
and
mov
dec
adc
cmpsl
add
imull
mov
mov
leave
jbe
bound
inc
pop
mov
loopne
push
mov
daa
xchg
test
xchg
cli
add
adcl
push
lea
decl
das
adc
movsl
lret
bound
mov
push
inc
pop
js
cmp
xor
pop
jb
movsb
popl
mov
fs
cmc
in
fidivrs
jle
xor
or
pop
and
pusha
pop
sbb
repz
and
dec
push
test
neg
gs
mul
fwait
neg
clc
mov
mov
adc
inc
pushf
adc
ds
test
xchg
mov
and
lcall
xchg
xor
stos
adc
or
push
xor
loop
lds
aas
shlb
loopne
add
jo
insl
cmp
mov
addr16
xor
popa
dec
dec
sbb
mov
push
xor
ret
fnstsw
lds
cmp
mov
push
cwtl
dec
in
sub
ljmp
mov
pop
xchg
mov
mov
jb
icebp
mov
sahf
setnp
and
lods
mov
ret
shr
and
inc
into
add
xor
ret
xor
call
dec
cmp
dec
push
test
daa
movsl
subb
lea
push
sbb
sub
test
bound
or
mov
movzwl
int3
xchg
cmpsb
sahf
inc
jo
inc
pushl
ds
data16
dec
and
scas
cli
mov
lods
cmp
mov
jne
fs
sub
push
test
int3
imul
xchg
add
jle
dec
add
int
std
cmpsb
sbb
adc
ljmp
push
add
lret
popa
out
jp
add
xchg
push
jno
scas
adc
repz
adc
xchg
lret
stos
ficompl
vshufpd
stc
push
fsub
imul
bound
testl
insl
aas
out
push
jmp
jmp
lret
ljmp
or
xchg
mov
push
fbstp
clc
test
ljmp
jl
stos
dec
movswl
pop
push
and
popf
arpl
pop
bound
loope
and
mov
xor
call
and
mov
mov
push
cmp
inc
xchg
mov
int
mov
std
fiaddl
icebp
inc
outsb
loope
cmp
push
test
mov
and
stos
es
mov
push
pop
mov
dec
out
mov
cs
sbb
jmp
mov
mov
hlt
xchg
xorl
xchg
jo
mov
add
mov
adc
sub
dec
mov
mov
lock
jl
fstp
fldl
inc
insl
outsl
pop
xor
stos
pusha
and
in
ret
cli
and
add
leave
sbb
sbb
imul
daa
mov
test
mov
add
inc
cli
mov
cwtl
shl
or
and
dec
icebp
shll
es
push
add
ss
mov
int3
jno
fistps
pop
sub
dec
lret
loope
xchg
add
es
inc
pop
inc
pusha
aam
mov
mov
outsb
xchg
jno
and
cmp
das
aad
dec
cmp
cmpsb
sub
cmp
mov
addr16
test
pop
mov
lahf
add
inc
loope
das
xor
ret
mov
cmp
sahf
cmp
and
adc
mov
ja
mov
bound
pop
lods
sub
movsb
xlat
or
jmp
test
pop
shlb
enter
test
inc
aaa
not
stc
pop
sub
sbb
icebp
lcall
xor
push
and
push
fldl
sbb
adc
mov
push
xchg
movsl
sub
and
mov
mov
sbb
and
icebp
aam
js
or
aaa
cmp
mov
in
dec
add
adc
or
add
jg
push
xchg
cmp
jecxz
cmpsb
mov
mov
stos
pop
cmp
int3
leave
loope
lcall
shll
add
pushf
bound
test
add
xlat
fimull
popa
ror
jg
pop
filds
inc
loopne
out
aad
int3
test
push
xchg
jmp
ds
cmp
xchg
fcompl
subb
test
xlat
inc
push
push
adc
push
movsb
pop
sbb
adc
mov
cmc
mov
dec
mov
je
add
xchg
loopne
mov
scas
pop
or
xchg
jmp
cli
jg
data16
mov
and
push
pop
jnp
mov
push
mov
test
les
mov
outsl
dec
sar
jo
pop
daa
lea
lock
xchg
dec
xlat
lret
xor
xchg
and
push
popf
pop
scas
mov
scas
mov
pop
rclb
ret
jl
das
mov
popa
test
sub
add
sub
mov
push
lea
dec
outsb
jge
ja
cmp
push
xor
push
js
pop
inc
mov
fcompl
cwtl
jno
cmpsl
clc
jne
in
sbb
mov
add
pusha
or
clc
aas
cmp
ret
int
mov
lahf
push
stc
xor
add
scas
mov
jg
loope
push
das
sbb
mov
jns
aaa
ret
into
xor
dec
cmpsl
enter
inc
dec
add
xor
and
or
dec
aam
inc
test
pop
repz
or
or
xchg
inc
push
xor
lock
daa
mov
idivb
inc
js
mov
cmc
adc
or
sub
jmp
dec
dec
pop
pop
aad
push
sahf
pop
cmc
imul
mov
pop
stc
iret
sbb
xchg
mov
cld
test
and
popa
dec
add
sub
stos
add
mov
mov
jb
test
mov
nop
mov
fildl
ds
push
pop
and
test
cmp
lea
cmpsb
push
lock
xchg
stos
movsb
pushl
mov
pop
sti
bound
hlt
fdivr
in
sti
or
sbb
mov
test
call
inc
dec
mov
push
icebp
daa
iret
insb
dec
xchg
mov
stos
fisubrs
aaa
fcomps
mov
mov
xor
jl
xchg
es
notb
clc
iret
adc
push
dec
insb
insb
mov
lcall
rol
loopne
test
mov
xchg
xchg
adc
mov
addr16
and
or
punpckhwd
stos
or
loopne
or
sarl
jecxz
and
out
scas
sub
cmp
mov
lods
cs
dec
push
adc
lahf
cmp
lahf
arpl
pop
mov
icebp
fstpl
mov
dec
or
add
push
imul
jne
icebp
add
cmp
dec
inc
enter
sbb
mov
xor
jle
xchg
mov
fcoms
test
fstpt
mov
sub
mov
pusha
int3
int
std
mov
mov
cld
addb
imul
push
pop
jne
addb
push
mov
and
insl
pop
icebp
je
push
push
add
fwait
out
int3
idiv
mov
leave
dec
dec
lret
shr
dec
mov
je
js
lret
insb
or
leave
sbb
sbb
jbe
dec
lock
dec
movaps
test
or
or
push
sar
and
mov
decl
mulb
mov
pop
in
xor
inc
mov
das
or
inc
push
inc
ret
cmp
adc
pop
and
mov
jns
pushl
sbb
mov
pop
in
popa
mov
mov
call
loopne
fdivs
mov
into
or
inc
je
insb
add
out
arpl
sbb
jnp
cld
insb
xchg
filds
xor
add
jb
sub
xor
mov
and
bound
or
mov
in
add
pop
js
mov
xchg
popl
jnp
fs
cmovp
pop
nop
pop
pop
movd
inc
inc
icebp
insl
ret
or
clc
int3
xor
pop
pushf
xchg
mov
cmp
test
or
outsl
add
movsl
mov
imul
scas
cmp
xor
push
xor
or
add
mov
xchg
push
fmuls
jle
xor
cmp
adc
cmc
fs
or
cmp
and
ds
out
pushf
sub
mov
mov
jp
and
roll
ja
mov
ret
cmp
mov
and
or
xchg
int3
ljmpw
ret
jl
testb
filds
ljmp
mov
dec
mov
sahf
lret
xchg
inc
jo
adc
or
cmp
sbb
dec
add
push
push
inc
lret
push
add
mov
sub
cltd
fyl2x
xor
into
les
lcall
insl
xchg
sti
dec
subl
aam
add
jl
add
xchg
cmp
xchg
lock
xor
test
xor
sbb
lds
je
in
scas
mov
sub
lret
or
clc
xor
lret
repz
lcall
scas
mov
cmc
xchg
jae
inc
sub
sub
xchg
stos
int3
ja
sbb
in
adcl
mov
sbb
pop
xchg
stos
imul
lcall
push
cmpsb
sarb
pop
adc
loopne
in
pop
dec
inc
push
jl
mov
push
das
sbb
popa
add
add
clc
xchg
icebp
adc
das
xor
bound
jge
out
pop
into
adc
pop
and
popa
push
loope
pop
mov
shll
sub
inc
lret
and
bound
jge
add
xor
sub
pop
push
sub
jl
cmp
pop
push
mov
pop
sub
and
ficoms
fwait
xor
mov
mov
fs
push
sub
jmp
rclb
out
add
push
cli
push
cmp
rcrb
fistl
repnz
outsb
test
aaa
shr
out
sbbb
mov
scas
repnz
xchg
scas
dec
das
mov
xchg
je
fcomip
push
mov
dec
scas
iret
scas
jbe
and
lea
js
mov
inc
jmp
lods
lock
out
push
or
and
scas
sti
adc
fldt
mov
fmuls
mov
test
push
push
or
mov
les
add
dec
or
aas
mov
shll
add
in
push
es
add
fists
jecxz
lahf
dec
xchg
dec
dec
ss
cld
jbe
ret
jecxz
out
scas
mov
fcmove
dec
insl
stos
push
pop
cmp
loope
pop
das
sbbb
aas
sub
loope
add
scas
add
ficompl
out
into
pop
jle
mov
ja
popa
mov
dec
mov
sbb
pop
xor
ja
movsl
pop
mov
aad
push
adc
test
out
jbe
mov
xor
pcmpeqw
xor
jecxz
lcall
xor
cwtl
jno
mov
and
daa
shr
push
in
lret
lahf
xchg
mov
movsl
mov
jbe
sbb
cmp
imul
inc
test
lock
jno
jbe
mov
loopne
jge
adc
xor
in
mov
and
imul
lea
je
jno
dec
mov
or
or
inc
pop
mov
push
mov
in
pop
psubb
xor
xchg
aad
mov
daa
xchg
sbb
jg
popf
sub
test
mov
ret
cs
data16
or
mov
aad
pop
data16
add
sbb
imul
out
cli
mov
mov
sub
into
and
xor
mov
fists
decl
pushf
xor
in
loop
pop
in
mov
popa
jg
pop
add
mov
subl
xchg
jle
movsb
adc
push
adc
push
cmp
movsl
ja
push
out
movsl
push
lret
scas
outsl
das
test
pushf
and
push
testb
sub
push
mov
dec
jbe
or
test
cmp
aaa
mov
jg
dec
push
inc
testb
push
mov
enter
push
ret
pop
push
adc
push
jp
aaa
adc
and
cld
xchg
cmp
out
lods
stos
push
sbb
daa
lcall
sub
inc
adc
jmp
and
mov
dec
movsb
ret
sahf
call
jge
jl
push
push
sbb
movsb
dec
xchg
mov
push
decb
fisttpl
lahf
jbe
call
sbb
push
lret
sub
pusha
xor
fists
dec
ljmp
mov
fistps
adc
in
fdiv
inc
test
fmuls
lea
lock
jmp
loope
dec
arpl
das
adc
not
fcomps
sarl
js
push
cmp
shr
jg
mov
fs
push
lret
push
iret
cmc
fldcw
cs
out
pushf
mov
push
icebp
out
and
out
outsl
jbe
adc
mov
or
inc
pushf
sub
sub
cltd
repnz
cmp
mov
mov
mov
pop
mov
loop
pop
mov
xchg
arpl
sahf
lea
jmp
and
dec
pop
es
xor
add
shlb
icebp
inc
xchg
fdivrl
cmp
int
add
jmp
loope
fstps
mov
aaa
ret
pop
stos
mov
iret
jecxz
lock
dec
xchg
sti
xor
mov
mov
mov
jmp
lock
test
hlt
dec
add
jmp
div
ucomiss
das
push
cmp
cmpl
ss
insb
xor
cmp
cmp
cltd
pop
cmp
imul
loopne
sbb
pop
loopne
xor
inc
mov
dec
cmp
into
jl
stos
mov
stos
ja
mov
aas
iret
cltd
push
clc
jnp
mov
or
mov
gs
addr16
in
lret
mov
aad
aas
aam
push
data16
pop
pusha
icebp
cli
mov
pusha
gs
arpl
loop
xor
pop
pop
push
shr
lret
or
mov
bound
inc
fisubrs
push
xchg
data16
cld
mov
test
dec
jp
inc
push
jae
int3
jl
xchg
pushf
jg
jge
repnz
hlt
out
imul
call
pop
sahf
push
mov
or
mov
cmc
lret
int
xchg
test
pop
mov
pop
std
jbe
mov
movsl
jnp
fiadds
push
lea
mov
jnp
out
and
sub
and
fisttpll
inc
stos
mov
xchg
and
shlb
jl
mov
fsubs
xchg
or
sub
psubusw
mov
adc
pop
pop
mov
sub
mov
in
cwtl
iret
jge
pusha
pop
mov
and
into
rcrb
xor
scas
push
sub
hlt
or
inc
and
jnp
call
and
mov
shlb
test
jge
cmp
sub
test
cmp
add
dec
test
outsb
les
cmpsl
je
sbb
in
mov
push
movsb
and
jle
cmp
addr16
fisubrs
pusha
insl
xchg
pop
pop
out
pop
mov
cli
lahf
addr16
scas
iret
cld
fs
push
jae
aas
pusha
mov
mov
mov
out
inc
fneni(8087
sub
mov
xchg
xlat
js
push
mov
mull
aam
ja
jno
repnz
loopne
xchg
jns
fisubrs
imul
pop
les
stos
aad
or
in
inc
mov
andb
loope
movsb
add
sbb
pop
push
xchg
enter
mov
lret
cmpsl
ss
and
and
loope
or
push
inc
dec
clc
jmp
pop
push
sahf
xlat
cltd
fst
loop
stc
jl
pushf
push
ljmp
movsb
pop
sub
fldcw
cmp
adc
lods
lods
dec
pusha
dec
imul
push
mov
dec
sbb
jecxz
add
repnz
or
xor
xchg
mov
or
lret
sbb
pop
jmp
xor
mov
js
aam
mov
jecxz
outsb
pop
les
out
push
xor
jns
adc
xor
jp
sub
jns
ljmp
jo
lret
push
mov
inc
dec
out
or
lods
mov
pusha
pop
out
dec
rcrl
mov
mov
and
xchg
dec
repnz
lods
ds
in
movsl
aas
icebp
xchg
pusha
repz
loope
and
add
inc
lods
mov
cld
imul
aaa
sub
push
xchg
fnsave
icebp
jle
movb
add
sub
jo
gs
adc
in
stc
xor
test
xor
jge
xlat
mov
dec
bound
pushf
sbb
jno
mov
ror
push
mov
repz
sbb
out
pushl
fs
cltd
in
push
inc
notl
push
and
add
test
int3
dec
sub
adc
fs
inc
bound
scas
or
out
jbe
ljmp
and
jmp
dec
cs
dec
xchg
mov
pop
push
or
push
sub
iret
pop
pop
test
scas
rcll
pop
jp
cmpsb
lahf
xchg
mov
popf
ljmp
push
sub
test
cmp
out
add
add
and
std
ds
out
pop
jecxz
aad
xchg
test
fcmovnu
in
lds
sbb
lret
int
stc
fidivs
xor
or
sti
icebp
mov
pop
and
ds
int
pop
aad
adc
cmp
pop
mov
mov
cwtl
out
inc
inc
scas
inc
ljmp
fisttpl
decb
ljmp
movsl
out
pop
dec
adc
mov
mov
popf
push
fidivrl
addr16
xor
mov
les
test
or
mov
stos
sub
add
push
fucomi
aam
inc
adc
mov
and
test
dec
jo
std
fnsave
push
adc
xor
cmpsl
mov
aas
and
lret
test
push
sti
mov
movsb
xchg
and
jl
cmp
adc
mov
ds
mov
movsl
stos
push
bound
pop
insl
jne
cvtps2pi
jl
push
fnstsw
fildl
aad
add
xor
inc
test
movsl
pop
fisttps
push
xchg
lods
cwtl
scas
dec
mov
int
mov
roll
push
nop
sub
adc
loope
out
pusha
lahf
add
shrb
mov
mov
rclb
push
or
lcall
repz
push
mov
xor
outsb
fsub
std
lcall
leave
inc
push
sbb
add
push
push
xchg
mov
sbb
in
sbb
hlt
lea
sub
and
cmpsb
repz
cmp
jne
imul
inc
stos
sub
mov
ficoms
shl
cmp
or
adc
push
ljmp
push
dec
cmpsb
in
or
mov
cmpsl
cltd
cmpsb
push
adc
es
push
fs
sbb
aam
push
push
dec
out
dec
add
or
test
pop
mov
clc
pop
add
into
jne
sub
repz
xchg
roll
mov
mov
mov
testb
in
imul
xor
and
add
jnp
push
adc
mov
in
std
fadds
std
cmpsb
cs
jle
inc
mov
fisttpl
mov
mov
jle
mov
cltd
pop
out
or
rcll
outsb
pushf
jmp
mov
mov
mov
inc
mov
push
sarb
xchg
lahf
and
sbb
in
cltd
mov
jne
jmp
iret
or
dec
pushl
fstpt
mov
jecxz
jmp
inc
into
adcl
mov
leave
mov
imul
mov
mov
lea
dec
add
and
lret
negb
mov
das
push
es
fsubrp
clc
jo
aas
out
add
push
mov
inc
cmp
jge
jmp
xchg
mov
lods
test
dec
pop
mov
outsl
out
xchg
out
aam
pusha
lods
dec
xor
sbb
pop
dec
add
sub
lcall
rcr
outsl
mov
jbe
dec
sub
mov
je
fsubl
fsubl
push
jge
insl
pop
xchg
ret
inc
jl
js
jmp
dec
jle
xorl
leave
nop
insb
xor
dec
popf
je,pn
sub
adc
push
js
mov
jne
mov
andl
xchg
dec
shlb
sub
rorb
pop
mov
jp
scas
fsubrs
je
rclb
hlt
cmp
enter
out
inc
mov
inc
outsl
lret
and
sti
dec
ret
cs
rcr
es
jne
or
sub
xchg
xchg
xchg
pop
stos
add
ljmp
lahf
add
xor
aam
dec
jge
inc
inc
gs
push
sub
mov
cmpsb
xor
stos
mov
jle
or
stos
inc
out
jns
xchg
mov
or
sub
adc
inc
inc
adc
sti
jbe
ljmp
inc
mov
push
add
pop
fucomp
adc
ds
shrb
inc
arpl
sbbl
xor
adc
aam
sub
push
jg,pn
push
fmul
jmp
aas
das
in
mov
shlb
loope
inc
repz
xor
pop
cmp
adc
add
jmp
or
jns
adc
add
pop
xchg
cwtl
ljmp
push
scas
fdivp
rolb
iret
pop
inc
pop
addr16
mov
xor
cli
jl
and
sbbl
jle
add
popa
movsl
mov
or
cmpsb
dec
aaa
cmp
popa
mov
loop
test
rol
lods
jge
add
shrd
rol
scas
enter
push
nop
push
push
cmp
cli
loop
sub
jae
mov
fsubr
lcall
mov
mov
pop
shll
add
dec
in
lcall
inc
jle
dec
push
mov
lea
test
inc
sub
in
mov
dec
and
outsl
fimull
xor
pop
fmull
dec
mov
mov
pop
sub
jnp
lods
mov
adc
add
std
cmpsl
je
adc
lods
sti
mov
into
jbe
mov
mov
sub
mov
jg
testl
test
jo
lcall
pop
sub
or
mov
outsl
repz
fwait
mov
outsl
fisubl
iret
popf
in
add
pop
fwait
notb
outsl
add
rclb
mov
gs
push
xor
fcomp
stos
fstpt
or
aaa
gs
mov
mov
jmp
adc
sahf
movsl
push
lock
or
jg
lock
pop
or
arpl
repz
add
mov
cmp
in
jge
add
sbb
scas
push
cmpsl
pop
fstl
sub
loope
jg
inc
push
cmpsl
fwait
rcll
jo
lods
xchg
mov
xor
ficomps
daa
inc
sub
int3
xor
addr16
or
leave
hlt
add
adc
icebp
or
and
xchg
mov
dec
loop
jb
fwait
nop
rorl
lock
inc
inc
jnp
cmp
int
psubq
test
add
mov
fldenv
lcall
cltd
popa
jge
xchg
jle
movsl
xchg
test
pop
and
mov
xchg
sbb
sub
sub
mov
lea
fs
push
push
pop
push
clc
mov
add
aad
orl
cmp
mov
aam
or
and
lods
lcall
nop
and
notb
xchg
xchg
adc
dec
push
stos
push
aas
shrl
sub
pop
sub
addr16
movsl
fwait
add
xchg
pop
xor
xlat
out
mov
xchg
sti
and
fidivrl
or
dec
daa
jo
pop
iret
outsl
xor
xor
lds
push
mov
loope
iret
sbb
inc
and
leave
aaa
push
jae
jnp
enter
or
ljmp
clc
or
test
cmp
lahf
int
aam
leave
lcall
mov
xlat
jl
icebp
cmp
je
sub
pop
push
decl
mov
repnz
sub
pop
sub
add
cmp
mov
nop
push
push
adc
and
push
movsbl
push
mov
jne,pt
sbb
jmp
push
sbb
adc
mov
jnp
lahf
pop
push
fcomp
testl
mov
clc
iret
cmpb
scas
xor
sbb
test
cs
out
sysenter
or
repz
movsb
scas
loope
mov
add
fldl
imul
push
scas
and
scas
imul
add
mov
xchg
lods
mov
je
xchg
loop
jae
cs
xlat
and
lea
add
cmp
or
outsb
call
push
add
shlb
imul
xchg
jnp
dec
js
xchg
inc
mov
scas
sub
push
lea
push
lcall
jmp
mov
cltd
lret
add
push
jl
cltd
mov
sbb
clc
add
stos
jecxz
xor
das
in
push
in
sub
push
shll
inc
jmp
insb
push
push
mov
stos
mov
mov
cmp
mov
int3
jecxz
mov
cs
and
stc
pop
imul
sbb
lcall
sbb
inc
mov
insb
sbb
pusha
pop
je
jp
add
outsl
loope
or
sbb
push
dec
dec
dec
dec
jae
roll
loop
jbe
pushf
push
lea
scas
or
sbb
mov
xchg
outsl
ret
insb
pop
xor
adc
pop
mov
xchg
cld
std
jmp
fdivs
lahf
bound
jo
xorb
xor
and
push
lcall
pop
fistl
fstps
push
push
fimuls
stos
adc
adc
pop
dec
js
lahf
jp
in
rol
xor
insb
xchg
mov
in
scas
stos
inc
or
dec
mov
push
jb
mov
sbb
ss
popf
sbb
push
ret
dec
sub
mov
sbb
add
out
rorb
js
lret
push
add
jne
mov
add
iret
cld
push
push
push
daa
into
pop
insl
mov
jno
and
mov
add
mov
push
ret
inc
push
insl
jg
mov
jb
loop
fsubs
cmpsb
xor
rorl
das
fcoms
and
xchg
sub
out
jo
outsb
out
int
add
fcmovnb
xchg
jo
adc
jg
cld
jbe
sub
iret
mov
jp
loopne
pusha
lods
je
sbb
add
or
sub
daa
test
xorb
jns
add
imul
add
enter
pushl
fstps
fisubrl
jl
xor
xchg
push
xchg
or
lahf
cmpsl
dec
in
xor
lods
sbb
repz
mov
push
dec
mov
repz
push
fstpt
mov
imul
aaa
mov
jg
mov
inc
fisubs
pop
adc
shlb
dec
rcl
and
and
pop
mov
add
pop
call
out
fld
repnz
fcoms
cltd
sub
int3
call
repnz
cmp
dec
mov
imul
test
movsl
es
aaa
sub
add
sarb
sti
pop
and
bound
mov
stc
ficoml
push
adc
or
cmp
ret
dec
cmp
pusha
pop
sub
cmpsl
or
xchg
adc
pop
pop
iret
fwait
mov
cmc
pop
or
fs
sub
int3
push
shlb
jno
cli
mov
pop
movsl
lahf
push
out
or
sbb
movsb
ss
mov
mov
push
orb
xor
mov
xor
rcll
mov
adc
jp
movsb
out
push
xor
loope
rclb
lea
setns
pop
xchg
rcrb
jo
icebp
pop
insl
test
clc
ret
das
mov
mov
mov
mov
xchg
insl
jg
pop
push
nop
pop
in
jle
enter
adc
push
insb
fs
ror
sbb
scas
rorb
jnp
sbb
inc
ds
movsl
xor
in
stc
addr16
cs
movsl
mov
arpl
sub
and
xor
outsl
and
add
xor
hlt
ficoml
mov
xor
loope
xorl
fdivl
and
mov
ss
je
gs
nop
and
cmc
test
pop
in
add
push
ds
jno
sbb
pop
mov
dec
cs
test
rclb
pop
sti
and
repnz
jl
sub
push
std
aas
loop
xorl
loope
aas
and
inc
xlat
inc
push
std
inc
jbe
imul
cmp
lretw
jmp
pop
cmc
rcrl
in
xor
push
sti
lock
mov
inc
push
rcl
out
xor
mov
jle
in
xchg
mov
stc
lock
scas
fcompl
lock
or
scas
xrelease
pop
pop
cmp
aaa
xor
sub
pop
shrl
out
aaa
test
loope
sub
cmc
ljmp
stos
fsubrl
lods
push
jg
mov
adc
inc
add
in
dec
xchg
shlb
lcall
mov
sahf
mov
outsl
stc
rorb
inc
scas
orb
dec
lock
push
movsb
cmp
clc
mov
rol
xchg
lea
xchg
mov
or
dec
lcall
push
push
dec
or
inc
repnz
xor
in
add
mov
adc
cwtl
mov
dec
mov
aad
pop
mov
xchg
mov
faddp
popa
leave
faddl
mov
cmpsb
pop
cli
inc
mov
pop
adc
dec
pop
jnp
shlb
inc
adc
or
push
mov
sub
or
inc
xor
mov
fsub
add
inc
cmp
ss
dec
sbb
aaa
or
icebp
pop
popf
pop
ja
leave
add
out
mov
inc
mov
push
cmpb
mov
sub
movsb
cmp
jb
jl
lods
and
loop
mov
and
mov
push
push
xchg
xchg
hlt
dec
jae
push
cltd
lcall
inc
sub
jmp
or
adc
out
js
inc
xchg
rep
sbb
push
mov
stos
push
dec
rorl
scas
dec
push
sarl
stc
push
jecxz
mov
sub
mul
mov
ss
out
sub
xor
mov
add
in
mov
sbb
sti
je
loop
enter
cmpsb
adc
mov
test
pushf
inc
cli
pushf
jge
mov
daa
pop
push
and
addl
sbb
xor
ret
xchg
scas
es
out
sub
inc
sbb
mov
movsl
aad
jge
sub
xchg
mov
lock
lret
rolb
mov
pop
pop
and
xchg
inc
sbb
nop
pop
fisubrs
mov
imul
jo
sub
sub
sbb
mov
mov
test
or
mov
icebp
inc
mov
xchg
adc
or
jns
insb
pusha
jbe
push
clc
xor
push
mov
mov
mov
adc
call
add
popf
pop
gs
lds
or
in
mov
outsb
mov
jmp
push
cmp
outsl
lahf
popf
or
out
ret
loope
clc
add
outsl
cmp
xor
lret
push
out
mov
cmp
mov
sub
push
loope
subl
scas
movsb
out
xor
ja
dec
js
sbb
negb
jnp
shl
in
sub
push
push
lods
cmp
or
mov
xchg
mov
jmp
dec
mov
pop
je
leave
xor
in
in
mov
aad
das
cmc
shlb
imul
push
jmp
push
adc
js
jo
cmp
mov
enter
bound
in
test
jnp
inc
fldt
into
adc
mov
sub
sub
pop
ret
dec
sub
xor
or
movsb
into
cmp
jl
or
add
fmull
jne
cmp
lods
xchg
sub
pusha
add
cltd
loopne
daa
ss
movsl
mov
jb
mov
inc
mov
ds
mov
dec
in
js
sahf
fdivr
jmp
roll
popf
or
xor
add
xor
or
in
repnz
insl
sub
add
ret
mov
pop
lret
and
in
lahf
scas
sub
ficoms
jnp
push
sub
insl
push
nop
push
dec
sbb
mov
cs
jle
add
fstps
mov
cmp
mov
add
xor
je
jae
mov
dec
scas
stos
scas
icebp
xor
fisubs
mov
jbe
cs
sbb
jecxz
dec
leave
shrl
sub
jl
mov
loope
aad
add
nop
xor
xchg
jmp
push
lahf
xor
cmpsl
loope
dec
push
js
hlt
mov
gs
enter
xorb
jmp
cld
mov
pop
cli
xor
mov
inc
idivb
fsin
mov
push
call
imul
iret
ffree
sbb
inc
lahf
idivb
sub
cmp
adc
arpl
adc
in
out
push
out
pop
leave
jge
cltd
sbb
pop
mov
and
xor
add
xor
rorl
andl
scas
jne
loopne
pop
and
insl
out
xor
cmpsl
push
bound
stc
cmp
lcall
mov
test
jno
mov
xchg
jae
in
lods
pop
cs
repnz
imul
mov
jp
mov
xor
jp
jg
jle
inc
lods
adc
jecxz
loop
int3
out
test
jg
cmpl
ss
aas
sbb
mov
xchg
sbb
ret
ja
pop
xorb
mov
pusha
mov
imul
fistpll
add
xchg
aam
pushf
pop
pop
adc
ss
in
movsb
subl
shlb
in
inc
mov
pop
lods
jmp
pop
loop
push
in
loop
lret
add
push
inc
mov
dec
mov
xor
cmpb
clc
lcall
push
enter
sbb
std
dec
aam
clc
sub
test
sahf
mov
xor
fs
mov
mov
in
xchg
or
sarl
ss
xchg
and
push
add
sub
movsb
and
out
repnz
dec
sahf
int
outsl
xor
inc
scas
inc
cmp
sub
sbb
stc
xor
stos
bound
cltd
pushf
imul
sub
mov
popa
jmp
fists
imul
cmp
and
jbe
mov
pop
getsec
jmp
inc
adcb
mov
insb
push
xor
mov
pop
fcmovnu
xchg
test
je
jo
adc
mov
clc
out
pop
sub
xchg
paddb
add
stos
mov
pop
sbb
sub
ljmp
ljmpw
fwait
add
ds
fisubrl
int3
inc
ja
movsb
cmpsb
ja
pop
in
pop
pop
push
mov
mov
xor
inc
shrl
pop
push
pop
test
add
insl
or
sub
cmp
cmp
mov
push
pop
test
lds
push
push
fstl
push
stc
out
sbb
jle
lea
mov
sub
icebp
sahf
add
aaa
cwtl
sarb
adc
test
dec
add
adc
out
and
fcoml
or
push
or
aad
fildl
pop
cli
xchg
push
adc
cltd
dec
nop
test
pushf
dec
xorb
xor
inc
negb
pop
cmp
sub
loop
mov
in
es
xchg
xchg
shl
dec
sti
fmull
push
fsubr
pop
notl
pusha
jp
push
push
ret
imul
out
jmp
xor
scas
xlat
mov
and
and
sub
cmova
sub
jge
or
cwtl
jo
rcr
lcall
pop
jbe
fst
and
fidivrl
pop
fbstp
loope
dec
pop
xchg
adc
push
xchg
pusha
test
sbbl
les
cmpl
sub
xor
jns
fmull
roll
pop
stos
imul
jae
mov
je
sub
push
sbb
dec
push
mov
mov
xor
adc
cmp
dec
rcr
push
push
loopne
cwtl
inc
hlt
mov
in
pop
mov
mov
dec
pop
aam
shll
cli
and
cmp
adc
cwtl
sub
dec
fstps
sbb
rclb
std
ret
out
adc
adc
or
shlb
mov
roll
test
inc
stos
cmc
jp
xchg
scas
xchg
insl
pop
test
mov
icebp
es
int
inc
test
mov
push
cmpsl
adc
and
stos
sbb
lret
push
push
lahf
stos
jmp
les
xchg
push
into
sub
in
rcrl
loope
fmull
lahf
mov
nop
inc
xor
dec
adc
sbb
dec
mov
jb
ljmp
or
clc
hlt
add
push
add
in
or
push
or
mov
out
icebp
out
mov
push
je
outsb
fistpl
pop
insb
mov
xchg
pop
pushf
shrl
jns
fimull
popa
sub
in
mov
call
pop
push
sti
jno
push
or
add
dec
in
std
sbb
out
test
add
xor
cmpsb
cmp
into
mov
lahf
repz
aam
icebp
mov
mov
cmp
outsb
fdivrp
arpl
int
call
mov
stos
jb
in
inc
popf
mov
repz
push
hlt
icebp
stos
popa
xor
ret
ret
push
xchg
std
or
jle
push
cmp
out
pop
test
movsb
pop
xchg
mov
ret
fcomp
and
jne
push
jge
adcl
and
add
xchg
fisubl
sub
inc
cmpb
out
insb
iret
subl
scas
jle
inc
imul
ret
jge
xor
das
cmpsb
xchg
adc
popf
lret
inc
leave
cmp
xchg
jecxz
jae
sub
inc
mov
jae
add
xor
test
jle
inc
cli
fldenv
bound
sub
mov
enter
mov
xchg
and
xor
loop
sub
sub
mov
add
pop
mov
xor
ljmp
imul
subb
stos
scas
inc
dec
mov
ja
or
ficoms
dec
push
lea
push
repz
gs
arpl
sarl
sub
inc
insb
dec
add
in
loope
add
in
sar
testl
or
daa
push
stos
fistl
lock
sub
pop
out
mov
sub
ja
mov
stc
adc
cmp
test
and
pop
pop
mov
daa
mov
mov
mov
mov
mov
cmp
adc
test
sub
std
test
inc
es
jg
and
jl
xchg
arpl
dec
push
ja
jns
jno
adc
pop
xchg
call
test
jbe
xor
lret
rcr
xchg
cwtl
daa
adcb
pop
dec
lahf
jmp
cld
test
xchg
repnz
add
addr16
adc
push
mov
push
es
iret
inc
outsl
fstpt
push
pushf
cmp
scas
clc
sbb
test
jl
pop
imul
jbe
and
cwtl
jecxz
pop
add
in
lock
sub
mov
gs
push
test
mov
dec
inc
data16
mov
xchg
and
xchg
lahf
mov
pop
inc
sub
outsb
xchg
pop
int3
dec
out
in
test
scas
sti
and
mov
fldt
das
and
int
loopne
lock
pop
lock
stos
out
notb
pop
xor
sub
aad
dec
out
call
push
push
stos
mov
inc
jno
dec
mov
or
clc
push
and
andl
faddl
push
fisttpll
rcrl
hlt
aad
sarb
xchg
or
shlb
mov
int3
daa
movsb
lahf
add
xlat
enter
mov
mov
or
subl
mov
sti
and
mov
stos
sub
popf
sub
mov
inc
into
jnp
pop
xor
jno
or
push
lret
xchg
lahf
stos
mov
cmp
xchg
mov
pop
xchg
inc
popa
push
pop
aad
enter
pop
insl
cmp
lret
add
inc
stos
insl
roll
adc
and
daa
jo
push
orb
mov
aaa
lcall
jg
popf
pop
lcall
lcall
ja
std
push
dec
mov
rorl
and
mov
movsb
dec
push
add
ret
into
mov
xchg
ficoml
and
orl
fildl
iret
mov
std
and
ss
ror
loope
movb
ljmp
mov
leave
mov
adc
std
andl
sbb
in
add
cmc
ja
out
pusha
and
xor
dec
mov
add
sbb
inc
cwtl
adc
sbb
inc
mov
cwtl
inc
bound
sti
cld
sub
jb
push
movsb
fwait
sub
inc
lahf
inc
rorl
stos
sbb
stos
and
insl
out
push
icebp
sbb
push
jle
and
les
aam
jle
lret
andl
daa
xor
arpl
imul
mov
add
pop
xchg
rcll
out
inc
jp
xchg
cmp
add
lods
inc
stc
and
jns
or
dec
xsha1
cmpsb
sub
movsl
jge
mov
cmp
sbb
ja
sar
sahf
lcall
pop
xor
push
out
pop
lahf
and
dec
mov
add
inc
pop
sbb
out
push
lods
pop
shlb
pop
ret
fcmovu
jp
cs
push
push
xchg
ret
dec
jp
jp
stc
mov
cmp
in
jecxz
push
loope
lret
mov
push
movsb
mov
lret
mov
loop
daa
shrl
insb
mov
mov
in
ljmp
mov
mov
js
cwtl
mov
hlt
xlat
push
cmpsb
lret
mov
adc
mov
frndint
out
pop
ljmp
adc
dec
leave
shrl
gs
push
stc
mov
nop
sbb
add
jge
pop
filds
ret
fisubrs
dec
pop
cld
out
iret
test
pop
dec
adcb
stc
repz
fs
cmp
push
mul
idivb
pop
movsl
sub
mov
sbb
and
xor
sti
stos
sub
add
lods
mov
nop
int
outsl
cltd
fstl
gs
dec
aas
clc
dec
repnz
arpl
mov
cs
xor
imul
sbb
ja
fsubrp
sub
mov
mov
jecxz
popf
sub
add
xchg
pop
stc
mov
inc
push
add
pop
xchg
pop
scas
xchg
popa
shll
cmp
mov
fdivs
sub
test
add
fwait
daa
dec
jbe
out
add
lahf
gs
mov
add
cwtl
out
ds
xlat
fcoml
dec
ret
fs
stc
loopne
mov
dec
cmp
xchg
push
inc
gs
or
mov
les
push
lock
mov
xchg
aas
xor
inc
dec
inc
test
cmp
ret
cli
or
mov
rolb
inc
mov
mov
jnp
sub
cmp
outsb
cli
mov
in
mov
cld
test
pop
sub
and
jns
jo
xchg
lret
jne
pusha
pop
xchg
cld
rclb
jne
xchg
lcall
inc
scas
iret
mov
dec
add
out
jns
and
xchg
push
mov
arpl
jg
jo
jns
jae
ss
pop
mov
sub
xlat
mov
push
paddusb
jno
push
mov
andl
out
test
filds
cwtl
lcall
xor
mov
mov
sub
cmp
dec
insl
or
mov
out
dec
aam
pop
loopne
clc
fidivrs
testb
xchg
pop
mov
insl
scas
out
jns
gs
cmp
cmpsb
dec
xor
and
xor
dec
fstpl
xchg
popf
cmpsl
jb
int
aam
inc
out
out
xchg
mov
roll
insb
push
cs
mov
lcall
popa
xchg
dec
jecxz
jno
sbb
fmull
mov
jne
xchg
mov
fs
fbld
dec
mov
lods
stos
xor
daa
jno
imul
cmpsb
lahf
hlt
lahf
xchg
pushf
push
lea
test
push
xor
les
sub
jb
jmp
add
mov
or
inc
iret
adc
out
popf
fdivl
dec
arpl
xchg
add
leave
rcrl
xor
cwtl
test
aas
addr16
call
or
cmpsb
aas
pop
mov
push
push
or
jo
or
popf
les
mov
movsb
out
xor
leave
ss
pop
pushf
mov
shll
dec
movsb
mov
mov
lock
cmpsl
jbe
jnp
in
sub
insb
mov
sub
xor
cmp
bnd
out
inc
pop
lcall
xor
jns
mov
lret
and
inc
inc
test
sbbl
jge
xlat
adc
faddl
xchg
inc
mov
int
insl
js
les
sbb
mov
adc
cmp
mov
mull
roll
outsl
enter
test
inc
mov
mov
in
fisttpl
imul
sbb
push
xor
jno
call
push
in
pop
arpl
stos
fbld
mov
test
inc
data16
mov
out
fnstsw
mov
sub
jle
ljmp
xor
jg
out
push
out
rclb
lcall
fisubl
sti
jle
adc
cmp
stos
aas
in
jg
into
pop
mov
xchg
inc
inc
jg
sub
mov
xor
shrb
mov
xor
cmp
adc
mov
pop
dec
xor
insl
xchg
ljmp
imulb
pop
arpl
sahf
mov
ss
jl
ljmp
lods
jb
inc
leave
idivl
mov
stos
xchg
movsl
jnp
int3
push
inc
ret
dec
add
mov
xchg
aam
push
mov
add
pop
and
mov
lods
jns
add
pop
push
inc
sub
aad
push
je
pusha
popa
adc
adc
icebp
jae
mov
mov
inc
leave
jns
cmp
les
xchg
fisubs
into
pop
pop
xor
aam
sub
pop
xchg
sbb
stc
jmp
icebp
rorl
fwait
imul
out
data16
xchg
movsl
notb
sahf
mov
shl
mov
jecxz
je
push
rorl
std
stc
loopne
movsl
out
cltd
push
fcoms
lock
pop
cmc
jbe
hlt
mov
inc
xadd
inc
sub
pop
stos
xchg
iret
add
cmp
test
sbb
mov
ror
adc
mov
fdivs
xor
adc
pop
stc
data16
cs
adc
or
push
sbb
test
mov
push
mov
clc
aad
sbb
pop
mov
adc
pop
jle
cmp
xor
adc
mov
xor
jl
jnp
add
jnp
je
repz
push
jg
ja
out
cmp
je
gs
outsb
mov
jae
mov
iret
xor
sub
cmpsl
add
loop
sbb
xor
vpcmpgtw
mov
icebp
ja
jecxz
test
dec
mov
add
fmulp
scas
and
push
push
cmc
sub
fwait
out
orl
fidivl
clc
pop
or
jno
sbb
sbb
pop
push
sub
and
es
mov
add
push
mov
dec
loope
fdiv
pop
ja
aaa
cmpsb
test
popf
sub
and
js
jno
xchg
int
repnz
adc
fnsave
cmpsl
pushf
insl
sub
xor
cmp
jle
test
cli
push
negb
jecxz
in
push
push
inc
arpl
mov
gs
cmp
or
loopne
and
stos
jb
mov
and
mov
and
shl
xchg
lea
vminss
jle
or
push
clc
xlat
loopne
and
movsl
lods
imul
fcoml
lahf
sbb
or
dec
inc
outsb
dec
outsb
rolb
pop
xchg
inc
movsb
mov
inc
xchg
adc
repnz
clc
enter
xchg
mov
add
testl
fcoml
pop
pop
pop
mov
call
cmp
adc
daa
adc
mov
cli
sbb
ljmp
mov
jns
push
xchg
out
mov
mov
aad
jge
cli
sub
pushf
cmp
xor
add
insb
dec
jg
js
cmpsl
pop
repz
mov
pop
outsl
push
mov
mov
and
push
sahf
fnsave
sahf
je
dec
cs
not
daa
jo
xor
stos
or
movsl
add
jo
stos
add
sbb
mov
mov
insb
lret
and
ja
lock
inc
mov
cmp
mov
pop
mov
add
cmc
lahf
mov
mov
insb
push
out
pop
movsl
ret
mov
lock
sbb
cmp
cmp
jge
mov
out
pop
mov
sbb
mov
add
xchg
xor
ret
mov
push
mov
inc
cmp
jp
popf
ljmp
cmpl
ss
mov
and
dec
and
popf
notb
and
shlb
mov
orl
pop
mov
shlb
daa
and
mov
test
xchg
xor
push
sbb
inc
xor
pop
inc
int
ret
jmp
sub
cli
mov
imul
rcrb
sbb
shrl
rcll
push
negl
repnz
mov
orl
sbb
js
imul
movsb
jo
jb
mov
mov
mov
fiadds
repz
adc
xchg
jo
mov
jge
sub
test
jb
xchg
popa
ret
xor
cmp
in
or
xor
scas
lret
repz
mov
mov
aaa
mov
add
add
clc
xchg
inc
test
push
ja
xchg
push
inc
ret
sub
push
scas
nop
test
outsl
xor
mov
inc
or
daa
lods
cwtl
pop
pusha
repz
nop
scas
pop
shll
or
mov
cs
pop
jae
push
xchg
inc
mov
mov
loopne
dec
out
fwait
cmp
mov
pop
mov
xchg
pushf
popa
mov
pop
outsl
hlt
mov
add
lds
sub
mov
or
or
fs
bound
lds
in
enter
fsubrl
sub
test
or
insl
in
dec
movsl
fwait
push
pop
dec
lar
sbb
lods
xchg
stos
xor
loopne
cwtl
es
cmp
and
xchg
insb
fstl
movsb
pop
out
jno
pop
mov
cmp
push
add
pop
pop
in
ficoml
imul
jnp
ret
mov
dec
sbb
inc
mov
cmp
insb
inc
mov
cmp
push
repnz
ficoms
sbb
sub
testb
aas
pop
dec
inc
or
push
add
jbe
test
xor
xor
xchg
arpl
jmp
dec
faddl
mov
dec
clc
adc
aad
sub
push
ja
sbb
fcmove
movb
xchg
int3
lock
into
inc
idiv
dec
xchg
pop
imul
js
pop
ja
sbb
mov
ret
enter
test
shlb
and
sub
mov
ret
pop
cwtl
adc
in
popf
inc
push
xorps
and
push
mov
out
sub
sub
repnz
push
outsb
mov
test
adc
lret
cs
cmc
pop
popf
or
pop
adc
lods
std
sbb
jmp
fwait
pop
pushf
and
push
neg
lahf
pop
scas
xor
out
insb
inc
and
into
adc
shll
add
loop
lods
into
cld
push
sub
jecxz
aam
mov
imul
sbb
dec
inc
adc
loope
sub
dec
out
outsl
add
jbe
dec
sbb
ret
mov
adcb
cmp
pop
test
xchg
pop
popf
mov
jmp
out
cld
clc
push
in
incb
lret
dec
pop
or
test
or
dec
pop
and
test
push
push
fildl
or
lcall
or
lahf
mov
gs
mulb
cmpsb
jo
mov
sbb
cmp
fwait
mov
mov
aam
xchg
cmp
insb
mov
mov
xor
lcall
jge
int3
inc
imul
sahf
jge
xor
mov
xchg
inc
jmp
mov
xor
push
jge
sbb
inc
jge
dec
ficoml
fdivrs
cli
nop
rcrb
insl
insb
aad
inc
adc
rorl
and
cltd
scas
xchg
push
shufps
pop
push
and
xchg
lret
jns
sub
notl
cmp
mov
mov
data16
xchg
adc
and
xchg
push
mov
imul
imul
cld
pop
add
pop
push
jp
jecxz
dec
loop
adc
inc
enter
add
das
jge
lea
push
or
outsl
mov
push
sbb
sbb
xchg
dec
pusha
inc
adc
xor
shlb
fdivp
dec
je
xor
clc
lock
faddp
mov
mov
lret
and
outsb
jl
enter
adc
dec
scas
dec
or
push
xchg
loop
sub
and
mov
adc
adc
pop
add
call
es
xchg
sbb
mov
push
gs
adc
popf
pminub
push
in
icebp
je
adc
push
mov
push
gs
and
fcomp
mov
push
insb
hlt
hlt
js
jno
inc
out
xor
jnp
sbb
cmp
cmp
add
mov
and
mov
pop
jbe
ss
in
ds
inc
cmp
aam
call
loope
mov
push
push
test
test
inc
push
pop
imul
aaa
add
call
or
and
push
or
lahf
aad
jecxz
add
inc
ja
popf
lret
cmp
aaa
add
aas
das
loopne
call
mov
je
sub
out
sbb
sbb
leave
daa
push
cmpsl
sub
or
scas
xchg
js,pn
mov
movsl
mov
daa
sbb
xor
xor
and
jae
cmpsl
xlat
xchg
popf
loope
add
bound
mov
xor
push
fidivs
std
sbb
ja
nop
aas
pop
fistpl
loop
mov
je
pop
sbb
cmpb
lcall
enter
imul
sbb
push
fldl
mov
sub
pop
out
int3
mov
lds
or
stc
cmpsb
bound
or
icebp
fstl
pop
imul
out
sarb
adc
jmp
pop
sub
out
mov
adcb
clc
lods
icebp
cwtl
jle
mov
dec
xchg
iret
ficomps
sub
scas
andb
sub
fs
and
dec
add
jl
pop
dec
pop
mov
cmp
test
mov
dec
and
shl
dec
jno
shr
cmp
dec
and
xor
lock
inc
sti
loop
sarl
stc
imul
mov
cmp
mov
lods
sbb
sub
add
imull
cld
and
mov
loop
leave
adcb
mov
inc
adc
test
sub
pop
jno
or
and
test
or
out
cmpb
pop
sbb
out
dec
cmpsb
mov
adc
sbb
imul
or
roll
lods
mov
mov
jns
push
push
xchg
adc
ljmp
and
mov
or
mov
add
repnz
jb
aaa
lock
xchg
mov
cs
insl
xor
pop
sub
jb
scas
push
inc
out
xchg
outsb
cmpsb
mov
or
add
pusha
pusha
jns
xor
xor
sub
cli
or
inc
dec
in
das
push
xor
inc
xor
inc
cmc
push
cmp
and
jbe
je
xor
jnp
xor
xchg
int
sub
es
xor
dec
out
jecxz
popf
ret
mov
jns
lret
mov
cmc
stc
loop
adc
cmp
out
gs
mov
jg
pop
push
mov
mov
ficoml
xorb
fidivrl
stos
loopne
push
and
aas
pop
and
test
mov
ss
mov
psubsw
out
fdivl
dec
push
lret
ds
inc
mov
push
cmp
aad
xlat
int
fcmovbe
mov
pop
mov
es
cmp
mov
int3
xchg
loopne
rcrl
jmp
xor
xchg
fmuls
add
lods
mov
cmpl
mov
test
push
mov
cmp
xchg
cli
addr16
add
xchg
mov
shlb
xchg
bound
mov
or
out
mov
mov
pop
movl
cmp
std
dec
in
lods
push
fwait
jns
pop
mov
adc
adc
mov
dec
fs
mov
outsb
int
inc
xchg
adc
cmp
pop
fdivs
fcoml
xor
cld
inc
lock
fsubs
popf
push
push
or
mov
pusha
lock
fmull
daa
mov
add
mov
mov
aad
testl
dec
lock
cmpl
add
lret
dec
nop
jle
push
add
mov
rcrl
jl
jnp
sbb
or
sti
cmpsb
xor
pop
inc
shll
shrl
pop
jp
rolb
lock
mov
incl
jmp
rcrl
aam
stc
mov
aad
sbb
sbb
and
outsl
in
and
cmp
lret
cmpsl
popf
sbb
into
sbb
out
add
pop
jb
out
bound
sub
adc
dec
ja
mov
sbb
lock
mov
notl
sbb
xchg
and
fiaddl
push
xor
inc
rsm
jb
and
push
mov
xchg
rcrl
jns
push
fs
cld
pop
sbb
rclb
dec
mov
mov
fbstp
jp
mov
lret
xchg
fisttpll
sahf
adc
cwtl
cmp
aad
jg
lret
movsl
dec
mov
lods
mov
cld
xchg
cmp
mov
ljmp
cmp
movsb
jmp
ljmp
dec
test
and
sub
repnz
mov
or
pop
gs
leave
xor
pop
sub
movsl
clc
mov
push
xchg
jp
and
cwtl
testl
lret
jp
jns
adc
lret
push
addb
lods
imull
rclb
xor
ds
ljmp
mov
dec
ret
rol
imul
cmpsl
mov
add
imul
leave
fs
imul
mov
add
fcomps
pop
testb
aaa
das
fistpll
fnstcw
sbb
or
dec
popa
jbe
cmp
mov
push
gs
rclb
adc
test
arpl
in
pop
fidivrs
daa
loope
stc
inc
pop
push
inc
cltd
sub
inc
add
dec
imul
lods
add
xchg
adc
push
xlat
sub
xchg
jmp
out
or
daa
lock
xor
gs
std
aad
out
aaa
sub
xchg
and
mov
inc
mov
lret
pop
xor
jmp
sbb
add
add
sti
or
push
sbb
loop
cmp
and
dec
out
xor
gs
in
shrl
cmpsb
daa
icebp
rclb
cmpsb
addr16
push
popa
adc
imul
xchg
pop
mov
dec
ficomps
inc
sahf
aas
push
lods
cmpsb
jo
fs
repz
mov
mov
dec
cwtl
add
add
aam
mov
xor
cmpsl
mov
jns
xor
or
imul
sub
aas
ret
ljmp
fistpl
je
inc
mov
aad
sbb
sbb
mov
aas
xchg
fstl
adc
dec
aas
sbb
mov
cwtl
repz
ja
faddl
xchg
xchg
jge
sub
popf
and
jo
pop
add
pop
push
outsb
jno
cwtl
pop
xor
mov
and
or
repnz
stos
add
lods
idivl
mov
and
popa
cmp
mov
xor
jne
pop
mov
or
pop
jmp
addr16
jne
and
aaa
ret
xor
scas
inc
xor
test
xchg
jbe
push
xor
dec
cmp
test
cmp
ret
mov
leave
cmpsl
sub
add
cwtl
mov
cmp
nop
dec
mov
mov
xchg
cmp
pop
movsl
aam
and
and
jl
pop
inc
lcall
jecxz
xchg
pop
xor
arpl
lods
stos
xlat
imul
aas
push
jbe
loopne
std
push
loope
push
daa
aad
jmp
fisttpll
rcrl
add
aaa
das
sbb
jmp
cwtl
lret
cltd
sub
mov
sub
loop
cmc
mov
ljmp
sti
sbb
jnp
data16
icebp
push
add
rcrl
ret
std
insb
test
cmp
or
icebp
mov
xor
xorb
test
inc
xor
push
outsb
out
loop
dec
arpl
gs
push
mov
cmp
jo
sub
pop
inc
mov
and
xchg
add
sbb
outsl
arpl
mov
sub
addr16
aaa
lret
iret
adc
fidivl
fldt
iret
push
and
and
xchg
popf
dec
scas
cmp
jbe
jecxz
pop
icebp
add
pusha
lahf
ror
xchg
notb
dec
subb
push
fsubrp
dec
loope
sub
add
dec
movsl
sahf
mov
inc
inc
mov
imul
pop
in
or
pop
aaa
bound
pop
insb
mov
stos
sub
cld
inc
fisubrs
and
push
imulb
add
mov
outsb
dec
inc
xchg
sti
adc
sti
pop
fdivl
out
and
insl
cmc
pop
lret
xchg
sub
mov
cmc
add
cmp
dec
pop
in
mov
or
xchg
add
loop
dec
jmp
pop
mov
push
inc
js
cmp
sarb
push
push
imul
out
out
cmpl
xor
cmc
int
jp
push
or
or
rclb
out
out
ljmp
test
jae
test
mov
push
in
dec
adc
je
stos
push
aam
test
ljmp
ret
sub
xlat
jb
arpl
sbb
adc
loope
adc
mov
xor
inc
std
ret
xor
jns
pop
ja
dec
in
pop
andl
sar
sbb
inc
sub
mov
fldcw
push
add
cmc
xchg
ret
xchg
incl
and
sub
ds
xor
mov
mov
inc
popf
pop
inc
movl
aaa
lret
xchg
dec
test
pop
push
call
adc
and
inc
imul
stos
ljmp
sbb
mov
movsl
dec
test
dec
daa
sbb
cmpb
mov
out
dec
out
fisttpl
add
jo
mov
push
leave
or
scas
push
mov
dec
cmp
xlat
outsb
jle
lea
lea
jb
ss
rorb
aaa
int
imulb
aas
es
imul
push
cmpb
xlat
jo
nop
idivb
ja
lds
xor
push
cmc
shrl
aad
in
push
push
adcb
or
sbb
stc
in
loop
aad
out
mov
adc
adc
mov
inc
insl
inc
addb
int
add
cmpl
fdivs
xor
pusha
in
outsl
out
dec
lods
sub
aam
mov
cltd
bound
push
fadds
in
imul
push
enter
out
xchg
pop
jae
or
inc
sbb
test
hlt
cmpsl
xor
xor
add
int3
mov
icebp
pushf
xor
and
stc
loop
dec
push
ret
hlt
and
scas
or
mov
mov
dec
jmp
or
loop
cs
rcl
outsb
xor
enter
sub
jae
out
push
ficoml
enter
je
pop
pop
das
inc
inc
fcom
lds
rcrb
or
inc
scas
int3
jle
sbb
stos
dec
or
int3
into
ret
mov
lret
in
sti
ffree
dec
nop
mov
push
and
jmp
sbb
inc
push
xor
std
jb
adc
dec
push
xchg
pop
mov
add
and
pop
mov
popf
xchg
aad
outsb
jns
cs
leave
xor
dec
clc
test
mov
push
lahf
jnp
mov
inc
sbb
js
imul
hlt
cwtl
leave
sub
push
add
cld
push
dec
ja
cmp
or
imul
loopne
fmuls
pop
adc
ljmp
xchg
leave
outsb
or
mov
push
out
ds
add
pop
iret
pop
sahf
mov
and
out
cmp
fwait
xchg
dec
aas
jns
pop
xor
xchg
cs
cltd
and
jno
mov
cmp
add
mov
stos
xor
mov
lret
or
xor
std
clc
jae
mov
adc
xchg
jle
int3
sbb
sub
fsubl
pop
incl
push
jle
mov
clc
push
pop
push
sbb
add
mov
arpl
or
stc
out
fimull
cwtl
adc
cli
inc
add
stc
andl
jnp
testl
out
mov
xor
sub
not
data16
jb
lds
in
xlat
cmp
mov
inc
out
xchg
sub
testl
ja
cmc
pop
or
jge
popa
inc
jg
sub
jbe
std
loop
call
ja
or
inc
ss
lret
fidivl
sbb
test
mov
sahf
mov
aad
push
cltd
imul
cmc
dec
push
mov
cmp
pop
pop
fbld
dec
clc
jae
sbb
in
std
mov
xchg
and
aas
pop
cmp
xchg
sub
xchg
push
xor
add
jne
xor
pushf
mov
jae
and
loop
pusha
out
sub
mov
test
inc
push
adc
or
repz
mov
andb
xlat
in
les
push
in
mov
mov
das
test
adc
pop
mov
xlat
lods
mov
out
in
rclb
or
jle
call
push
cmp
fimull
aad
inc
ret
cmp
dec
out
sbbb
xlat
inc
out
lods
add
jp
mov
add
decl
mov
mov
mov
mov
pop
rclb
dec
sbb
inc
lahf
jno
cltd
out
adc
mov
testl
pop
inc
xor
gs
jecxz
or
adc
xchg
and
aad
cmp
inc
push
xor
mov
dec
adc
roll
mov
mov
pop
das
cmc
sbb
inc
xchg
and
aad
sub
add
push
into
xor
shrl
dec
mov
cmc
lahf
in
stos
rorl
sahf
fstpt
cmpsb
pop
jp
out
adc
shrl
hlt
pop
mov
stos
stos
push
push
push
dec
pop
movsb
mov
add
enter
xchg
sahf
push
mov
jnp
and
push
mov
jbe
shrb
push
outsl
invd
and
test
call
xor
fstpt
xlat
enter
ja
or
jno
fs
inc
sub
in
adc
scas
xchg
aaa
mov
iret
adcb
pop
dec
push
pop
les
cmp
push
insb
xor
xchg
out
stc
mov
lcall
mov
xchg
call
jbe
loop
out
adc
pop
xor
movsb
pop
sub
subb
mov
dec
call
fidivs
lods
fwait
jne
xchg
inc
ret
mov
sbb
xchg
es
cmp
test
pop
push
addr16
rolb
pop
mov
xor
stos
inc
or
sub
add
inc
or
out
std
stos
cmp
imul
popf
inc
pop
add
cmpsb
mov
dec
pop
sbb
sbb
int
das
loopne
dec
mov
cmp
movl
jae
stc
jne
testl
ret
mov
and
cmc
cmp
add
scas
xlat
pop
mov
add
lret
btc
add
add
or
mov
into
sbb
pop
mov
psrlq
add
mov
lcall
bound
xchg
adc
inc
or
push
push
std
pop
sbb
and
in
ds
scas
and
shll
lret
sti
push
adc
cmp
jb
inc
push
loopne
dec
fucomp
add
jle
push
mov
push
xchg
cmp
aam
or
lods
popf
push
sbb
push
fwait
cmp
lcall
fstl
xchg
in
inc
sub
fisubrl
mov
iret
add
jns
dec
fs
iret
or
loopne
mov
and
sub
inc
jmp
outsl
pop
xchg
les
mov
lods
dec
xchg
ret
mov
sbb
arpl
in
sarl
cmp
push
into
jne
jg
pop
cltd
mov
adc
rorb
sub
loopne
cmc
jg
pop
sbb
sbb
aaa
movsl
inc
dec
push
daa
sub
push
fbld
fs
dec
jmp
outsl
mov
iret
or
loope
stos
sbb
sti
or
mov
jmp
jmp
push
cmp
pusha
add
inc
add
iret
or
mov
cmp
fnsave
fcompl
xchg
lds
dec
ret
ljmp
fcomip
jl
or
sub
adc
outsl
pop
rol
fs
ret
mov
jno
std
in
iret
xor
call
pop
in
xor
cwtl
lods
rcrl
clc
lock
mov
fcompl
std
adc
jnp,pt
mov
cs
add
push
dec
jg
push
jl
aaa
xchg
push
mov
xor
sub
push
mov
mov
pop
push
mov
cmp
mov
test
clc
pop
mov
in
inc
lret
jns
pop
inc
and
push
movsl
xlat
mov
mov
mov
and
xchg
out
faddl
inc
int3
aaa
pop
je
xor
out
gs
adc
xchg
and
xchg
adc
lock
mov
add
in
xlat
mov
loop
jp
mov
inc
adc
idivb
js
mov
outsb
xchg
iret
cld
mov
push
jmp
xor
mov
xor
and
fadds
and
xor
push
mov
out
mov
mov
push
cmp
fnstenv
mov
dec
test
jecxz
and
fisttpl
pop
inc
mov
adc
mov
gs
sbb
pusha
pop
test
test
test
lods
ret
repnz
and
inc
mov
pop
shll
cmpl
loopne
les
cwtl
scas
add
int3
adc
mov
popf
and
mov
jecxz
jns
jle
jmp
jo
add
in
stos
stos
clc
adc
or
cli
mov
fdivr
test
push
ss
sub
in
lcall
idivb
sbb
mov
or
pushf
push
notl
mov
mov
cmp
dec
add
mov
push
cli
aad
jnp
mov
push
clc
ja
lcall
pop
pop
sub
subb
cmp
pop
push
cmp
nop
faddp
or
jge
pop
adc
mov
out
lret
cmp
pushf
pop
inc
jl
mov
fwait
sbb
cmovns
enter
ja
and
sbb
sub
stos
stc
addr16
cltd
sahf
fadds
repz
outsl
jo
mov
data16
fsubl
or
xor
mov
jg
mov
or
pop
and
inc
jne
les
mov
jne
je
fisubl
and
xchg
roll
xor
mov
sub
aas
adc
es
and
xchg
xor
cmp
xchg
pop
leave
xor
xlat
push
lret
subb
dec
pop
jle
sarb
in
cmc
mov
jecxz
rcrl
mov
sub
inc
or
cmp
test
mov
sub
ret
or
stc
dec
jo
loopne
sarl
mov
xor
lods
repz
sahf
pop
dec
or
test
xchg
mov
push
pop
adc
int3
or
fistps
pop
jne
cmp
jo
push
cld
push
push
add
inc
fucomp
push
add
cmp
inc
dec
mov
cmc
arpl
mov
push
in
jbe
sbb
xchg
rcrl
mov
ljmp
adc
add
loope
lret
adc
sbbl
cmp
pop
pop
repz
in
xchg
sbb
je
sbb
xor
or
mov
jb
test
pop
sbb
xor
cmc
inc
dec
sysexit
mov
add
push
lods
scas
lock
scas
ffreep
cld
dec
in
dec
add
mul
jbe
mov
nop
lds
rol
sub
cs
adc
xor
sbb
sub
cmc
push
into
and
adc
jge
lret
stc
mov
pop
mov
sub
add
addr16
dec
cmpsb
pop
arpl
add
push
jbe
notl
add
out
and
movsl
gs
ss
test
adc
punpcklbw
sbb
inc
lcall
sbb
jmp
pushf
pop
addr16
cmp
pop
repnz
push
pop
bnd
in
imul
pop
je
call
loop
ss
jb
push
mov
or
sbb
sbb
out
daa
push
addr16
ljmp
mov
mov
inc
and
jl
insl
sahf
aas
je
cld
mov
in
rcl
mov
jmp
mov
std
mov
cmp
daa
push
mov
pushl
leave
sub
push
fisttpl
pop
sub
pop
fidivrs
inc
push
pop
out
jae
mov
je
jns
out
lods
push
and
sbb
dec
xchg
popf
icebp
pusha
fcmovbe
insl
add
mov
shlb
xchg
cmp
cli
pop
jne
and
xchg
xor
out
mov
ret
dec
je
xchg
outsl
popf
mov
jmp
les
adc
ss
mov
sub
xlat
xchg
lods
cmpb
aad
dec
xchg
mov
cli
adc
mov
pop
jle
hlt
push
int3
cmp
enter
xchg
xchg
data16
pop
cli
pop
xchg
int3
sub
jno
pop
push
push
xchg
fmulp
pop
fcmovb
sbb
pop
jno
mov
cs
cmpsb
pushf
mov
add
fidivs
push
repz
adc
lahf
shrb
sbb
xchg
fisubrl
fldcw
cmp
in
outsb
addr16
jae
jmp
push
cmpb
mov
enter
mov
insl
popf
and
or
mov
pushf
ljmp
sub
sub
sbb
pop
gs
xor
insb
pop
stos
popf
mov
xor
cmc
inc
jl
sbb
xchg
mov
lock
repz
or
push
pop
ss
int3
pop
push
loopne
sahf
xchg
in
pop
mov
repnz
sub
inc
sbb
leave
enter
fnstcw
mov
mov
fistl
cmp
sbb
sbbb
push
mov
imul
add
sub
jg
mov
mov
jp
sar
ds
shl
sar
mov
cmp
sub
push
inc
je
dec
fimuls
in
push
ret
or
addr16
mov
das
sbb
and
not
rcrl
call
xlat
adc
add
add
testb
jge
insl
sub
xchg
sbb
inc
sti
push
xchg
nop
push
lret
out
outsl
and
aam
mov
insl
test
icebp
cmp
ret
movsb
pop
ja
movsl
insb
out
scas
out
mov
ljmp
sbb
xchg
fstpt
cmpsb
fldenv
or
es
cmpsb
fcomps
ljmp
jmp
add
punpcklwd
sbb
icebp
int
adc
test
cmp
jecxz
or
adc
nop
xor
outsb
cmp
pop
call
or
pop
rolb
pop
btc
pop
mov
pop
xor
fmull
cmp
push
cmpl
sbb
pop
out
in
shrb
sub
xor
sbb
pop
mov
dec
and
add
adc
int
xchg
scas
call
mov
ret
and
out
popf
xchg
pusha
test
aas
jl
into
xchg
mov
mov
and
add
adc
push
mov
add
add
popf
testl
and
jge
les
in
xor
and
out
out
inc
or
lods
pop
std
ret
les
shrl
jno
cld
and
jnp
push
sbb
mov
not
sbb
mov
rcll
je
shll
insb
inc
mov
sbb
inc
loope
subl
stos
lret
popf
push
adc
sub
loop
in
addb
pop
pop
rcll
mov
mov
roll
sbb
jbe
jno
pop
pop
flds
cmp
arpl
mov
and
lds
mov
pop
cmp
push
xlat
adcl
mov
int
adc
mov
xor
inc
adc
add
js
scas
or
movsb
pop
testb
inc
pushf
dec
iret
dec
daa
push
mov
loope
fnstenv
cmp
sub
xchg
les
arpl
and
popa
icebp
pop
imul
pop
fcmovb
add
imul
bound
and
aaa
arpl
sar
scas
call
push
inc
jb
shrl
cmc
sub
mov
test
mov
dec
add
lea
inc
mov
fyl2xp1
jmp
dec
xlat
jmp
mov
xor
add
dec
repz
jl
mov
cmpsb
pop
dec
mov
pop
jns
dec
jp
hlt
jmp
lahf
sub
lods
out
add
ret
mov
fistps
inc
and
and
sbb
mov
dec
pop
jb
pushf
xchg
xchg
loope
sub
pusha
repz
or
fs
inc
cmp
in
out
rorb
pushf
out
in
mov
pop
mov
fildl
jae
add
sbb
pop
mov
ds
add
jp
inc
mov
xor
push
insl
pop
mov
adc
xlat
mov
or
mov
mov
enter
sub
call
lea
mov
cld
sub
dec
lock
arpl
jne
pop
shld
push
dec
jno
mov
mov
jmp
and
lods
pop
aam
mov
push
les
mov
jecxz
sbb
scas
cmp
ljmp
jb
into
mov
popa
ljmp
push
je
lret
in
imul
sahf
iret
inc
mov
mov
sarb
sbb
add
sbb
xchg
lds
lret
sub
pop
lret
xor
and
stc
cli
cmp
mov
or
and
jo
and
adc
fistl
aaa
mov
outsb
gs
mov
stos
pop
xor
movsl
sbb
js
or
popa
lock
xor
in
cmp
insb
outsb
andl
mov
push
test
lret
aam
jmp
cmc
inc
or
mov
aaa
sub
les
lods
inc
fistpl
mov
cmp
dec
push
cs
scas
fs
inc
sub
add
data16
out
dec
imul
jae
jo
or
dec
xlat
fadds
xor
sub
movsl
std
mov
mov
pop
xchg
gs
xchg
fidivrl
push
scas
jmp
addr16
ljmp
xchg
sbbl
xchg
dec
jg
rorb
subb
xchg
jo
xchg
push
jecxz
rcrb
mov
pop
stc
mov
xchg
inc
mov
insb
inc
pop
adc
mov
aas
cltd
rol
dec
in
out
std
sbb
fs
mov
negb
loop
fildl
mov
push
pop
aas
pop
popa
adc
jp
mov
and
imul
test
xchg
out
push
pop
mov
or
nop
xchg
outsl
mov
das
inc
imul
icebp
xchg
xor
daa
pop
aaa
adc
bound
push
push
cmp
shr
stos
out
and
icebp
iret
mov
mov
mov
test
dec
inc
adc
mov
sti
dec
sar
add
xor
and
and
loop
pushf
rorb
outsb
jmp
xchg
or
xor
out
ficompl
xchg
jmp
and
add
mov
fs
fsts
and
xchg
pop
sub
xchg
addr16
stos
outsl
mov
jne
ds
ficoml
dec
mov
add
insl
shl
add
xor
and
inc
inc
jae
ret
sbb
push
call
inc
ret
sub
lods
sbb
mov
rolb
mov
icebp
jae
fs
stc
cmp
lea
cmpsb
and
arpl
fmul
mov
mov
repnz
pop
sahf
pushf
jnp
stos
fs
or
xchg
out
rclb
add
dec
mov
fwait
aad
pop
call
je
imul
subb
xchg
push
jmp
fs
push
push
lret
dec
aam
aaa
pop
test
iret
xchg
inc
mov
std
movntq
fmull
inc
dec
call
test
sub
sbb
mul
hlt
inc
stos
lahf
xor
mov
sar
fcompl
mov
sub
sub
std
loopne
adc
fmulp
push
push
lahf
pop
add
or
daa
add
enter
sahf
push
jge
fnsave
ret
insl
nop
xchg
xchg
push
or
push
dec
push
push
test
and
dec
shr
cwtl
shll
mov
xchg
pop
cltd
lret
or
add
mov
and
ficoml
inc
cli
sub
popf
aad
lret
stc
fwait
ds
enter
aaa
int
or
popf
divb
lock
in
jnp
xor
inc
pop
or
cs
es
out
es
testb
fiadds
inc
and
dec
cmp
xchg
lea
popa
pop
xchg
arpl
iret
pop
lods
mov
cmp
jmp
xchg
sub
loop
sbb
addr16
movsl
test
lret
and
inc
rep
add
sub
mov
adc
into
xor
jg
mov
cmpl
sbb
push
push
sbb
arpl
hlt
mov
test
mov
push
push
mov
mov
lds
pusha
outsl
aad
lock
jmp
test
loopne
xchg
cwtl
sbb
lock
int3
pusha
xchg
mov
fistpll
fcmovne
outsl
add
push
jnp
add
repz
or
push
out
and
and
iret
jnp
pop
sbb
inc
sub
roll
icebp
cmovno
shll
movsb
sub
es
out
pop
data16
rorl
rcll
inc
pop
xor
roll
arpl
outsb
es
test
cmp
cmpsb
das
push
dec
sbb
adcb
cmpsb
and
cmp
mov
mov
pop
mov
mov
test
inc
mov
cli
jge
iret
scas
cli
in
add
or
dec
push
insl
inc
rorb
jae
sub
icebp
sbbb
movsl
js
jno
popf
push
lar
lcall
cwtl
mov
and
fistpl
andb
and
daa
push
cli
outsb
pop
bswap
outsl
and
cltd
or
aad
add
adcl
fisttpll
iret
jmp
lods
sbb
shrl
es
lods
ds
mov
pop
jne
enter
dec
pop
mov
jo
out
push
adc
shll
cld
clc
mov
loopne
repnz
lods
xchg
push
xchg
packsswb
leave
nop
stc
add
xor
in
test
sbb
jecxz
stc
clc
in
add
jp
mov
popf
sbb
ljmp
push
inc
jae
int
inc
jno
idiv
jnp
scas
into
data16
scas
xchg
xchg
mov
dec
scas
int3
inc
ret
mov
pop
xor
addb
ficompl
in
lock
sbb
add
push
or
mov
pop
dec
jl
ljmp
sub
and
push
stc
dec
inc
jno
push
adc
adc
call
hlt
xchg
jecxz
mov
imul
or
and
push
pop
cli
inc
mov
jg
jbe
adc
sbb
or
add
push
sub
leave
es
dec
adc
ds
movsl
into
dec
or
mov
dec
xchg
and
mov
dec
movsl
cld
xor
hlt
aas
mov
je
int3
or
lahf
adc
xchg
mov
mov
xchg
popa
fstps
out
repz
mov
hlt
les
inc
push
ljmp
call
roll
mov
lret
cmpsl
je
pushf
xor
mov
aam
out
mov
bound
lcall
sti
mov
icebp
mov
xor
inc
sub
push
fdivrs
stc
dec
repz
aam
stos
jecxz
jo
loop
mov
mov
cld
sti
mov
cmp
das
push
into
push
icebp
aaa
ja
add
lods
xorb
mov
lret
ss
push
fcomi
leave
inc
pop
cmp
pop
enter
cld
divb
movsb
iret
fwait
mov
xchg
in
xor
cmp
imul
mov
pop
xor
sti
add
icebp
mov
inc
imul
imul
or
inc
lcall
icebp
cld
into
hlt
jmp
icebp
nop
mov
sbb
in
pop
sti
mov
push
lret
cmp
imul
and
sbb
mov
adc
xchg
pop
and
sub
push
stc
es
mov
pop
nop
leave
jbe
xchg
jmp
adc
scas
jp
cmp
pop
pop
movsl
cwtl
loopne
loop
sbb
cmpsl
jl
xchg
nop
jg
mov
or
sub
sub
lods
mov
into
iret
push
and
stos
jno
add
lea
les
ljmp
mov
pop
xor
pop
lcall
sbb
mov
enter
xchg
push
movsl
lea
jnp
scas
push
divb
sub
into
aas
daa
repnz
xchg
xchg
mov
mov
xor
push
xor
jb
xchg
rclb
hlt
pop
aam
xor
mov
loopne
sub
xchg
pop
sahf
cmpb
nop
add
push
add
pusha
std
daa
mov
mov
jne
lods
mov
xchg
in
pop
xchg
out
pop
push
adc
ficompl
or
lea
dec
enter
push
or
sbb
popf
jecxz
push
sbb
push
js
sahf
daa
mov
lds
or
pop
pop
adc
jae
std
dec
xlat
pusha
cmc
and
push
mov
fwait
mov
xchg
rcr
xor
leave
popa
shll
dec
call
and
and
cmpb
adc
fldt
insl
rcl
ljmp
negl
jl
imul
xchg
into
in
divb
icebp
popa
lret
lahf
mov
sub
adc
lock
inc
mov
inc
xor
pop
mov
in
mov
or
enter
cmpsl
cmc
aad
mov
aas
ret
push
pop
add
jb
insb
inc
mov
inc
popa
int3
aas
sarb
out
sbb
cmp
nop
mov
mov
dec
addl
pop
jb
pop
fiadds
mov
lcall
or
imul
xchg
adc
ds
or
mov
movl
sbb
pop
sub
and
sahf
flds
faddl
jp
in
gs
inc
and
add
daa
jmp
mov
add
xchg
xchg
test
add
popa
or
out
pop
cltd
mov
ljmp
scas
inc
inc
inc
cmp
mov
pop
das
in
inc
mov
icebp
cli
xor
hlt
mov
add
mov
pop
pop
and
inc
or
jb
jle
dec
or
out
inc
popl
std
cltd
mov
lahf
outsb
pop
ds
movsl
jnp
out
js
pusha
ds
dec
adcb
ss
loop
cmp
insb
addr16
mov
fs
mov
loop
or
pop
push
and
in
xor
std
popa
ljmp
test
in
fwait
jl
mov
xchg
mov
popa
xchg
mov
adcl
loope
mov
mov
add
sbb
cs
push
sarl
insb
mov
push
aas
xchg
pop
mov
repnz
dec
dec
cmp
fimull
mov
pop
or
outsb
movsb
fildl
inc
mov
test
xchg
fsub
adc
xchg
loopne
sub
mov
or
mov
mov
or
scas
mov
jg
mulb
adc
push
sbb
mov
mov
es
mov
inc
das
rorb
xchg
lret
in
and
aam
outsl
lahf
movsb
xchg
gs
push
sbb
fwait
test
add
mov
pop
push
push
cmp
inc
cld
cli
imul
call
ficoms
ja
xchg
mov
lret
and
testl
and
shrb
scas
lods
inc
popf
or
sub
xchg
pop
in
cmpsb
int
add
cmp
dec
cmp
stc
fwait
lahf
fldt
rcr
outsl
das
inc
push
push
mov
fildl
sbb
jae
fisttpll
arpl
adc
lcall
scas
inc
int3
sbb
adc
adc
decb
addl
push
mov
loopne
sub
pop
aaa
cmp
mov
sub
out
test
lcall
xchg
fisttps
dec
push
aad
ljmp
outsl
push
cli
jae
fwait
jne
mov
cltd
inc
or
shrl
cmp
shll
mov
adc
jl
aad
repnz
jae
mov
aas
or
sub
jnp
pop
mov
in
pushf
dec
xchg
adc
add
lock
add
push
test
ja
sahf
xchg
pop
adc
testb
insb
mov
push
loope
fcoms
push
xchg
adc
enter
int
mov
sub
scas
test
inc
dec
test
icebp
in
push
incb
nop
mov
mov
pop
test
repz
out
and
cmpsb
aam
add
repnz
stc
or
ss
and
cld
xchg
pop
std
adc
gs
sbb
mov
mov
loop
aaa
cmp
aas
mov
repnz
ret
loope
pop
lock
je,pt
xchg
push
enter
pop
lods
aad
xor
xor
add
jns
push
iret
or
repz
inc
lcall
adc
daa
cmp
rolb
mov
rcrb
ds
cwtl
mov
call
pop
fcmove
orl
mov
outsl
out
jno
sahf
pop
push
dec
cmp
adc
iret
sbb
inc
pushf
mov
xor
cli
pop
push
test
mov
cmp
iret
loopne
lods
ror
test
dec
sbb
add
dec
pop
stos
pop
jb
movsb
adc
pop
arpl
push
inc
les
or
mov
jo
adc
clc
sub
pushf
xchg
dec
nop
xchg
add
iret
lods
mov
and
test
mov
shr
js
subl
ja
clc
push
imul
int
ds
in
sarl
in
call
lea
add
filds
or
and
scas
es
mov
jne
frstor
lcall
movsl
lock
orl
cmp
pushf
push
insl
push
mov
das
adc
sti
mov
fs
lock
sub
outsb
and
jg
jp
nop
unpcklps
add
incl
or
inc
movsl
in
insb
test
pop
and
mov
test
sub
sar
cli
popf
in
xchg
sbb
pop
or
call
outsl
fs
add
out
mov
xchg
jle
ret
and
jb
and
ret
in
lock
jnp
xchg
std
inc
dec
xor
xor
push
es
dec
mov
test
adc
enter
jbe
aas
repnz
andb
dec
insb
test
jg
sbb
pop
out
iret
out
pop
xchg
inc
mov
sub
test
es
sbb
jecxz
stos
xchg
sub
aas
ret
into
iret
ficomps
add
imul
mov
mov
cmc
mov
in
mov
sarl
fsts
ljmp
repz
fwait
sbb
idivl
lods
fcmove
sub
xor
push
inc
loope
inc
mov
loop
fiadds
sbb
mov
jg
out
out
out
repnz
mov
gs
call
imul
inc
lahf
push
cltd
std
call
fs
add
add
mov
jne
leave
cmp
xchg
test
mov
sub
je
push
pusha
fs
xor
dec
icebp
xchg
je
mov
or
and
mov
mov
jge
jae
pop
cltd
fwait
mov
test
pop
jge
xchg
lea
xchg
ficomps
filds
add
inc
or
push
test
aaa
je
mov
jnp
mov
cmp
mov
pop
bound
xor
daa
out
popa
xchg
add
and
fidivs
je
flds
out
int
add
test
mov
inc
dec
jnp
hlt
out
shlb
xor
push
adc
popf
ret
cmc
fistl
rolb
adc
push
and
dec
fistpl
lds
pop
out
popa
dec
sbb
sub
adcb
jbe
in
repz
and
scas
jl
stc
mov
lret
pushf
cmp
jl
test
sbb
push
pop
push
popf
jno
xchg
pop
addr16
adc
xor
adc
nop
loopne
rclb
stos
or
cwtl
and
stc
jecxz
or
mov
add
adc
mov
cmp
aam
outsl
aas
daa
inc
int3
lods
or
push
test
pop
push
xchg
mov
out
jp
lods
xchg
push
mov
jg
mov
in
xor
mov
xchg
mov
mov
and
mov
add
mov
inc
int
inc
mov
dec
scas
and
add
aas
push
jbe
insl
rdseed
pop
dec
addr16
mov
loope
clc
jecxz
bound
add
add
inc
sbb
inc
leave
repz
mov
sbb
cmp
dec
mov
xchg
fists
cmpsl
mov
mov
ss
cld
adc
xor
jbe
outsl
push
adc
sbb
mov
pushf
loope
mov
leave
pop
test
mov
inc
push
scas
mov
jb
loope
mov
inc
sbb
sti
xchg
movsb
mov
lcall
mov
cmpsb
pop
outsb
push
std
inc
popa
popf
loop
leave
xlat
fldl
pop
push
pop
leave
jp,pt
mov
repz
movsb
jno
lds
dec
mov
xor
stos
cmovg
push
and
lea
jnp
je
push
sbb
push
mov
or
adc
push
inc
mov
scas
inc
clc
dec
mov
xor
outsb
stc
jae
out
pop
mov
jmp
cli
fistps
jp
xlat
sub
clc
fmul
jp
sub
mov
mov
test
push
add
cmpsb
mov
jle
shll
push
popf
outsb
ljmp
addr16
adc
push
xchg
ds
mov
out
std
xchg
test
and
pop
outsl
xor
pushf
inc
out
jl
sbb
xchg
ds
mov
sbb
shrl
rcr
sub
mov
js
sbb
cli
dec
dec
xchg
sbb
sub
xchg
movsl
inc
popf
jns
test
sbb
and
js
or
insl
mov
adc
out
push
push
andl
xor
popa
movsb
mov
jno
xchg
outsb
inc
mov
es
nop
test
jo
and
cs
mov
cmp
xchg
cmp
lods
inc
in
je
xorb
xor
sbb
dec
sarl
or
cli
loope
lods
loope
repz
in
rcrb
mov
mov
std
rol
mov
xor
pop
imul
xchg
push
test
es
and
mov
cmp
insl
dec
sub
pop
mov
add
adc
jecxz
int
rcr
mov
bound
ljmp
es
jmp
push
cmp
inc
cmpsl
lock
push
mov
mov
adc
stc
mov
les
pop
fcompl
or
xchg
dec
jo
lcall
or
inc
iret
movsb
ror
dec
inc
jnp
je
out
pop
pop
cmp
scas
dec
mov
xchg
push
leave
movsl
and
xchg
icebp
stos
movsl
push
xlat
inc
pop
and
dec
fs
push
jle
push
cmp
sub
out
lods
js
pop
clc
fldenv
mov
sub
shlb
cs
cli
inc
ljmp
fdivp
bnd
jae
or
mov
sub
dec
jle
cmp
cmpsb
cmp
es
aad
cmc
xchg
xchg
es
cs
scas
pushf
lods
repnz
push
subl
pop
pop
gs
xor
mov
mov
sbb
or
push
notb
shlb
pop
jmp
cmp
jmp
jo
add
addr16
repz
push
inc
outsl
rolb
mov
sub
jg
dec
stos
xchg
pop
fidivrs
fcompl
insb
xchg
mov
fmul
dec
idiv
adc
dec
insb
cmp
mov
insl
jle
jp
dec
mov
loope
and
fsubs
int3
arpl
and
or
enter
xor
dec
pop
aaa
mov
or
mov
dec
dec
mov
push
imul
jne
fmul
shrl
mov
xchg
or
xchg
nop
push
and
mov
add
popf
in
cmp
shlb
std
in
or
push
pop
xchg
test
arpl
fmull
enter
je
push
shlb
xchg
sbb
sub
sarb
cmp
mov
xchg
insl
cmp
scas
call
push
loopne
insl
rcrb
cltd
pop
cmp
jnp
popa
ljmp
punpckhbw
gs
push
inc
shll
push
sbb
xor
scas
movsb
xchg
push
in
push
scas
out
or
cmp
mov
int
lods
rcrl
inc
pop
jnp
rorb
push
nop
subb
xchg
je
orb
jg
xor
adc
movsb
pop
push
icebp
fcoms
sub
jg
xchg
push
mov
popa
dec
cli
stc
xchg
in
test
push
icebp
lcall
mov
xlat
or
sti
imulb
mov
mov
inc
cwtl
movsl
popf
imull
aas
arpl
jecxz
mov
loop
popa
sbb
aam
in
pushf
sahf
dec
mov
cwtl
nop
mov
or
popf
sti
and
pop
test
fstpl
jnp
dec
pop
mov
pmaddwd
mov
cld
cwtl
pop
mov
sbb
pop
mov
es
popf
gs
fucomip
mov
pop
or
push
orl
lods
xchg
dec
lcall
lret
repnz
inc
xchg
push
mov
in
or
shlb
insl
xlat
jno
adc
or
cmp
sub
sbb
push
jno
and
cmp
push
pop
or
je
mov
in
dec
int
stc
cmpsb
stos
fildll
mov
cmp
sub
push
pop
and
fnstsw
sbb
les
xor
push
add
insb
dec
inc
mov
jecxz
cmp
mov
loope
xor
push
xchg
repz
sub
and
jns
pop
jmp
mov
sbb
roll
out
sub
aas
int3
add
dec
mov
sbb
mov
rcrb
xchg
mov
aad
lds
sbbl
or
lret
data16
or
inc
aaa
xor
sbb
fldt
clc
xchg
push
mov
push
ss
sbb
sahf
clc
hlt
mov
gs
push
inc
push
and
add
jae
fiadds
cltd
out
dec
dec
jae
jp
mov
jne
dec
pop
xor
sub
add
push
cmp
jae
jo
mov
and
test
and
lock
jbe
test
in
inc
pop
pop
and
aad
push
repnz
es
filds
and
pop
xchg
hlt
fcomps
nop
in
cmp
rcrb
lods
sub
loop
cmc
add
mov
lods
push
xlat
dec
ret
rcr
aad
sbb
call
pop
or
xchg
bound
mov
sarl
push
popa
stc
cmpsb
dec
lahf
int3
repz
push
insl
loopne
scas
aad
out
sbb
enter
int3
arpl
push
iret
cli
jnp
lret
mov
repnz
push
mov
inc
mov
fstl
or
or
divl
cmp
lods
cmc
push
stos
or
stc
ret
cmp
outsl
mov
xchg
inc
lret
imul
sub
ret
fcomip
inc
add
stos
mov
and
mov
sahf
shlb
addr16
and
fimuls
loopne
jle
ret
in
out
ds
insl
push
mov
aam
add
mov
bound
insl
frstor
push
insl
test
ja
fstl
das
test
ret
push
in
cmpsb
xor
scas
jg
cmp
mov
cmp
stc
int
cmpl
jo
gs
repnz
je
pop
enter
jle
or
aaa
iret
fldcw
ljmp
cmc
adc
pop
cs
shl
mov
push
ljmp
mov
adc
lahf
push
adc
test
loope
cld
fcompl
loopne
pop
push
and
rcll
jl
orb
pop
sub
repz
adc
or
aas
or
jns
ficomps
les
out
lock
in
aad
add
adc
adcb
jno
add
int
lcall
push
cmpsl
adc
dec
mov
insl
mov
pop
cmp
negl
fwait
sbbl
xchg
imul
pushf
and
addb
pop
mov
cmp
sub
xchg
sarl
stc
mov
fcom
fwait
into
shrb
fs
inc
ds
addr16
fadd
fidivl
nop
pop
clc
fs
xor
outsl
in
cmp
aas
push
mov
sbb
mov
subb
mov
shrl
xor
or
add
arpl
inc
insl
sub
inc
les
xor
pop
inc
dec
pop
bound
test
repz
mov
sbb
push
cmpsb
mov
popa
add
cmp
sbb
sti
dec
mov
imulb
popa
gs
sbb
jecxz
sub
add
inc
or
push
jmp
js
inc
nop
lcall
sub
les
dec
sub
sub
xlat
mov
push
sbb
and
dec
xor
loope
mov
ljmp
fs
fists
gs
mov
or
stos
jno
or
ja
xchg
outsl
or
popa
push
mov
shlb
stc
pop
mov
and
dec
xor
add
and
stos
mov
jb
add
cmp
iretw
int3
movsb
pusha
sub
ds
lea
mov
and
in
scas
call
inc
popf
fistl
or
or
adc
xchg
in
sbb
ficompl
in
adc
leave
jmp
jp
push
mov
pop
add
insb
fimuls
das
push
mov
hlt
das
or
lret
push
jmp
jg
ja
mov
jg
mov
xor
jnp
in
pop
add
xor
divl
cmp
pusha
sbb
and
or
fldenv
and
popf
and
icebp
pop
inc
inc
cmp
inc
imul
sbb
jp
mov
jmp
pop
mov
add
sbb
sub
push
ret
pop
push
loopne
cmovs
mov
outsb
cwtl
pop
cli
leave
fdivrs
testb
fcmovnbe
mov
pop
inc
movq
addr16
hlt
push
clc
jg
jp
inc
mov
mov
sahf
imul
cs
xor
pop
push
sbb
out
mov
cmp
stc
leave
adc
mov
and
aam
xor
pushl
sbb
arpl
rcl
pop
mov
jb
cmp
or
mov
xchg
pop
out
or
fcoml
xor
sbb
in
add
ficoml
push
mov
bound
popf
test
std
repz
cmp
add
popf
push
movsl
outsl
dec
enter
es
jne
push
cmp
mov
test
xchg
push
jl
ss
xor
adc
repnz
add
mov
mov
push
mov
push
inc
pop
xchg
push
dec
shrl
xor
or
dec
bound
pop
je
enter
xchg
inc
sti
test
jo
shll
and
pop
lods
addr16
push
test
jecxz
mov
leave
sub
jge
pop
lods
lcall
lcall
mov
sub
jecxz
loopne
fisttpll
imul
lea
sub
sub
mov
fdivrs
ja
adc
lods
mov
cli
xlat
lret
adc
sub
xchg
cld
imul
or
jbe
dec
inc
xor
scas
data16
mov
pushf
fstpt
xchg
mov
enter
loopne
xor
inc
mov
push
cld
addr16
pop
cmpsl
cmp
lcall
test
sti
idivl
push
outsl
divl
lods
fwait
mov
scas
pusha
ja
xchg
mov
leave
rolb
out
shr
xchg
insb
sbb
sarl
ds
lahf
push
mov
cmp
je
mov
push
jmp
adc
iret
jnp
lea
jbe
inc
xchg
outsl
adc
cld
mov
les
and
jecxz
aas
filds
mov
iret
jmp
adc
push
ret
cmpsb
xchg
in
outsl
repnz
sbb
mov
ret
inc
test
je
cmpsb
or
pop
pusha
int3
jnp
mov
nop
gs
hlt
sub
sbb
mov
clc
push
mov
and
jge
fwait
pop
sub
sbb
sbb
out
jns
and
cmpsl
xchg
add
inc
mov
loope
imul
pop
adc
call
cs
inc
les
nop
repz
test
push
xchg
sbb
xchg
lret
fmull
jno
push
ss
or
cwtl
sub
jbe
pusha
aam
xor
pop
xor
stos
cmp
jne
mov
lods
xchg
insb
leave
div
mov
mov
sbb
adc
ret
xchg
jb
mov
out
fsincos
xchg
sti
mov
jmp
pop
push
inc
in
mov
sbb
mov
pushf
stc
scas
imul
dec
jno
sbb
addr16
adc
or
mov
loopne
lret
and
pusha
mov
roll
aad
lock
xor
inc
stos
inc
fstl
xor
xchg
jp
stc
mov
es
mov
stc
pusha
scas
inc
ficomps
jae
scas
and
push
mov
mov
adc
cs
cwtl
xlat
mov
mov
sub
pop
cmc
aad
sbb
pop
addr16
in
daa
lea
jmp
jecxz
push
add
dec
shlb
loopne
aad
pop
test
sbb
push
push
pop
dec
icebp
bound
das
dec
nop
out
jp
das
mov
jmp
ror
hlt
add
dec
popf
push
pop
addr16
notb
ret
faddl
push
jbe
pop
mov
repz
jmp
jno
ss
mov
or
mov
mov
or
pushf
and
xlat
sub
loop
mov
data16
add
aam
dec
adc
scas
mov
rcr
bound
and
add
das
ljmp
inc
sbb
or
mov
gs
std
enter
mov
sahf
lcall
subb
pop
pop
push
sahf
mov
fcmovbe
xchg
mov
loopne
insb
push
cmp
xor
sub
lods
mov
jmp
dec
mov
push
sbb
ss
idivl
and
bnd
das
and
add
arpl
outsb
stos
shr
loope
cltd
jecxz
outsl
pop
cmpsb
inc
pushf
hlt
pop
inc
mov
mov
push
sub
sub
jnp
pop
cmp
jg
je
out
add
lods
pop
fisubs
push
cmc
aad
add
test
add
addl
sub
fwait
cmp
sub
jle
das
addr16
jb
ror
clc
adc
mov
rorb
cmp
dec
add
addr16
or
imul
xor
fistpll
aas
insb
arpl
loope
repz
je
or
add
shl
dec
idivb
pop
xchg
cmp
xchg
in
scas
mov
das
or
stc
pop
jl
push
cmp
stos
sub
cwtl
inc
je
or
mov
pop
sar
xchg
xchg
or
inc
cltd
iret
incb
xchg
or
xchg
pop
imul
leave
jmp
sbb
ret
movl
loope
dec
jae
xchg
sub
sbb
push
gs
sub
repnz
or
ljmp
insb
aaa
cmc
aaa
cs
mov
jg
dec
jo
sub
mov
out
inc
mov
mov
xlat
outsb
lret
mov
es
push
mov
mov
xor
js
pop
call
inc
std
mov
jae
or
push
push
and
push
jno
sbb
imul
shl
aad
xor
pop
mov
out
aam
test
jb
add
insl
ret
cmc
and
cmp
ss
ror
sti
add
inc
and
sbb
test
subb
arpl
aas
sbb
add
aaa
test
and
scas
ss
sbb
adc
pop
mov
movsb
shl
jo
inc
das
fistl
fstpt
jecxz
dec
sbb
rclb
in
xor
push
jecxz
imul
and
mov
pop
jle
push
xchg
popa
fwait
pop
sub
pop
call
imul
push
ljmp
push
adc
sub
inc
pop
addr16
test
mov
sbb
jns
aas
mov
sahf
dec
ja
enter
stos
sbb
movsl
sub
cmpl
sarl
adc
sahf
mov
lods
scas
inc
and
mov
and
pop
clc
jo
push
lods
repnz
inc
jp
std
in
pop
xor
and
xor
adc
mov
mov
jp
jae
jl
movsb
imul
pop
pop
test
imul
pop
in
insb
mov
dec
fxch
movsb
lcall
xchg
or
lahf
cmp
cmp
int
jno
insb
sbb
hlt
sub
mov
shrl
mov
aad
and
push
push
nop
mov
loopne
arpl
mov
xchg
stos
out
jns
ret
test
or
popf
push
out
or
xor
movsb
cmp
inc
pop
movsw
jg
out
int3
xor
adc
sbb
outsl
in
add
push
fwait
add
cmp
mov
inc
out
aad
xor
or
cmp
mov
movsb
ret
out
mov
mov
test
lahf
mov
cmpsl
mov
and
mul
xor
fs
flds
cmp
ja
mov
mov
dec
imul
xchg
add
mov
hlt
mov
rclb
aad
bswap
add
jae
dec
sub
fidivl
mov
inc
stos
push
add
dec
jmp
icebp
ficoms
xor
inc
lcall
loopne
lock
popf
adc
movsl
mov
insb
add
sbb
mov
mov
mov
xchg
jb
loope
pop
lock
lods
mov
xor
insb
xor
stos
sub
aas
xor
ljmp
dec
andb
cwtl
std
imul
push
pop
push
add
pop
dec
inc
cmp
in
out
xor
mov
in
ret
aad
adc
lods
mov
cmpl
or
shrl
ret
adc
and
daa
xchg
in
adc
movsl
xchg
hlt
add
loope
dec
pop
jmp
dec
or
in
test
lret
je
inc
dec
fadd
mov
add
adc
pop
mov
add
sbb
inc
push
pop
adc
lret
push
add
fnstenv
or
mov
adc
cs
cli
mov
dec
sbb
aam
fmuls
jmp
aad
pop
xor
in
and
adc
imul
inc
mov
adc
hlt
add
scas
and
mov
insb
add
xlat
leave
xor
pop
mov
mov
mov
dec
aad
test
mov
cmp
mov
pop
lock
push
fwait
jmp
pusha
fimuls
out
js
cmpsb
push
pop
sub
inc
ljmp
mov
std
adcl
mov
outsl
jmp
mov
mov
lods
xor
add
bound
xor
pop
adc
add
mov
adc
cmp
mov
cmpsl
mov
and
jne
adc
lds
ljmp
cltd
jp
mov
cmp
sub
mov
adc
xchg
xchg
or
pop
aad
mov
into
jns
fnstcw
cld
xor
gs
mov
pop
fsub
cmp
jg
xchg
mov
popa
mov
shrl
jbe
xchg
adc
in
mov
rclb
icebp
mov
rclb
std
xchg
mov
in
sbb
jns
or
pop
mov
cmpsl
ficompl
cld
cmp
add
add
out
or
jp
and
roll
and
xor
jns
mov
jae
inc
loopne
push
pushf
aaa
int
dec
cli
std
xchg
outsb
into
enter
out
mov
add
jnp
lret
xor
fdivrp
je
push
add
or
or
mov
cltd
ficoms
fstps
mov
pushf
push
jae
loop
out
sub
or
xor
and
cmp
cwtl
div
mov
enter
ljmp
sbb
or
scas
stc
and
dec
cmovge
out
cmp
cltd
jnp
out
xor
sbb
dec
push
xor
pop
pop
incl
add
mov
push
jl
jnp
insb
mov
jnp
and
in
ficoms
jl
fstps
push
popf
loop
inc
inc
stos
sub
add
fcmovnb
pop
and
fmuls
cmp
jmp
add
mov
pop
ds
popa
popf
and
int
jmp
int
mov
cmp
subb
test
ja
or
jle
mov
sub
push
cmp
rcrl
or
push
es
lock
pop
or
inc
lods
cmp
mov
scas
mov
outsl
sub
xor
ror
push
adc
adc
fs
data16
mov
mov
stos
lds
fildll
xchg
clc
or
mov
sub
sbb
leave
movsb
sbbl
jne
mov
mov
xorl
xchg
mov
cwtl
clc
pop
push
and
lods
cmp
je
test
addr16
inc
adc
mov
inc
push
inc
dec
into
shll
dec
fwait
paddw
out
fmull
aad
xchg
jo
inc
stc
in
xlat
jb
in
and
es
jp
fiadds
sahf
pop
sub
cs
sahf
xchg
push
cmp
lea
aam
imul
ror
mov
mov
lahf
pop
cmp
mov
imul
jge
repnz
jmp
mov
sub
jecxz
test
outsl
repnz
and
fmull
dec
rclb
cmpsb
xchg
aad
out
sbb
push
or
es
les
jle
inc
push
sti
loop
push
out
adc
das
and
jnp
in
dec
xchg
dec
ljmp
add
lods
iret
sub
inc
sahf
jmp
lds
pop
jecxz
adc
pop
js
aas
cmpsb
and
lock
stos
orl
sub
mov
pushf
test
xchg
cmc
out
and
ljmp
mov
and
ss
inc
mov
adc
popa
test
addl
sbb
fucomi
jae
rorb
jo
fdivr
movsb
xorb
lahf
adcl
and
data16
add
cmpsb
shrb
aam
lret
jns
xchg
mov
push
mov
xchg
std
es
psubb
xor
jge
or
add
add
sarl
and
nop
sub
xchg
push
arpl
add
aam
jne
lods
pop
or
stos
push
rdmsr
jae
arpl
inc
add
jns
push
sbb
sub
cmp
jle
cmpsl
adc
push
adc
fisubrl
sahf
mov
or
and
pop
mov
xchg
or
dec
pusha
adc
outsl
inc
add
fwait
jb
inc
loop
mov
lock
mov
insl
pop
stos
lods
mov
add
xor
ret
push
out
pop
aaa
les
mov
inc
lods
add
cli
push
fs
lret
push
lret
inc
push
jp
repnz
jmp
mov
add
xor
scas
mov
outsl
pop
jo
and
add
sbb
mov
test
scas
in
sbb
movsl
nop
in
or
push
test
push
push
xchg
imul
fdivs
pop
mov
loop
inc
inc
and
repnz
pop
add
test
js
jo
sub
clc
cmp
inc
jb
sub
outsb
xor
inc
jecxz
icebp
rorb
mov
mov
pop
or
mov
pop
cli
in
jne
aas
sbb
ret
stos
mov
out
push
sub
leave
dec
enter
add
jmp
fstps
mov
xor
push
xchg
ljmp
repz
dec
aas
iret
dec
daa
fcompl
mov
aas
andnps
aas
daa
adc
and
pushf
hlt
and
cli
lahf
prefetch
add
addl
xor
push
mov
inc
testb
sub
cmpsb
mov
rcll
sub
sahf
mov
push
pop
pop
pop
in
pushf
cltd
push
mov
and
pop
imul
dec
push
dec
sub
push
mov
mov
gs
lods
mov
add
jnp
jg
push
lahf
xchg
out
cltd
mov
xor
movsl
mov
jne
cld
push
pop
jae
jno
test
jl
lds
fsubs
outsb
fstl
xchg
or
aam
pushf
xor
lea
inc
lea
push
ss
scas
nop
jmp
shrb
or
aas
test
in
ds
loop
push
stos
test
lods
cmp
jecxz
inc
fwait
mov
in
or
sub
sti
popa
and
pop
pop
repz
xor
out
xchg
mov
xchg
mov
mov
pop
cmp
leave
lds
loop
int3
mov
sub
cmp
ror
popf
dec
adc
inc
pop
fldt
add
cmp
jnp
inc
fstpl
add
pop
test
lea
mov
faddp
xchg
je
push
out
icebp
mov
add
test
pop
lock
lds
mov
add
fnsave
jo
pop
aad
or
push
jmp
mulb
mov
mov
cli
icebp
xchg
and
sbb
fdivrs
jg
mov
sbb
das
dec
shl
xchg
mov
cld
fcomps
in
fcomps
sub
sub
mov
sub
jmp
out
sub
xor
je
inc
jo
adc
mov
jbe
xchg
mov
mov
mov
ljmp
jmp
sub
pop
loop
mov
pushf
aaa
jae
cmp
cmpl
or
pop
sbb
jmp
xor
outsb
ja
cmp
test
loop
push
test
pop
test
cmc
imul
or
mov
xchg
nop
xor
mov
bound
aaa
pop
sbb
movsb
testl
mov
pop
jg
cmc
xor
jo
dec
lahf
add
iret
or
xchg
jae
add
shll
lea
incl
push
test
push
inc
cmp
push
add
aaa
inc
push
and
ja
inc
sahf
ljmp
test
clc
sub
pop
sub
popa
cmpb
imul
in
xor
mov
push
std
cltd
adc
stos
mov
insb
in
jg
mov
adc
mov
popa
adcb
shll
loope
sub
jno
xor
pop
roll
fsub
and
movsl
lea
loope
and
test
aam
push
inc
xchg
or
sub
jg
jge
sub
push
mov
into
repz
aam
int3
push
xor
out
movsl
mov
inc
push
jmp
cld
sti
fwait
or
out
aam
push
shlb
cmp
sar
jo
pop
into
push
mov
inc
and
addb
outsl
repnz
negl
mov
mov
inc
aad
cld
cmp
sub
sub
xchg
sbb
push
addb
js
addr16
leave
mov
jmp
lods
js
inc
add
cwtl
or
mov
out
lcall
mov
hlt
nop
xchg
xchg
jae
leave
lock
imul
cmpsl
and
xchg
adc
mov
divb
mov
add
cmp
jl
jg
mov
clc
pop
insb
test
dec
int3
sub
add
test
push
adcb
clc
mov
paddusw
inc
xor
adc
pusha
sub
xchg
sbb
sub
imul
outsb
ret
clc
les
data16
or
adc
jnp
xlat
adc
push
dec
and
data16
ret
je
hlt
iret
out
mov
lods
mov
or
sub
adc
xchg
aam
mov
fmulp
jp
iret
push
rep
dec
enter
jae
jo
push
aam
pop
je
clc
inc
jp
push
cmp
jbe
jecxz
bnd
cwtl
lea
xlat
adc
jns
out
pop
fs
push
sbbb
hlt
adc
cltd
xchg
adc
iret
cltd
pop
jb
pop
add
push
adc
jge
aas
aaa
subl
cmc
outsb
mov
addr16
sbb
cmp
cli
fists
in
jmp
mov
jb
xchg
xor
divb
jge
add
andb
jmp
call
sub
outsb
gs
int3
pusha
ljmp
mov
in
shl
pop
sbb
lock
movaps
xchg
pop
popa
sub
clc
stos
adc
jmp
mov
and
pushf
and
jae
dec
lahf
and
push
rorl
scas
dec
sub
cmpsl
xlat
test
icebp
xlat
rolb
not
stc
out
push
lret
jbe
add
pop
out
je
arpl
add
lods
dec
xchg
xor
loope
or
or
pop
cwtl
je
pop
scas
adc
mov
or
aad
jmp
ja
add
dec
popf
dec
negb
inc
adc
mov
std
push
ja
push
adc
daa
xor
jb
inc
incl
les
inc
xchg
sbb
push
dec
adc
cmp
cmp
jbe
lret
aad
sarb
repnz
mov
mov
in
mov
adc
cmp
ja
and
mull
cmc
int3
jns
or
xchg
test
and
cwtl
or
clc
mov
les
dec
or
je
jmp
jne
jmp
xchg
shr
jecxz
xor
shlb
add
mov
add
sbbb
or
fnstenv
pushf
pcmpeqb
dec
dec
lcall
inc
or
mov
xchg
imul
jae
pop
xchg
sarl
aam
lods
push
sub
xor
cmp
popf
mov
jns
iret
cmc
or
gs
in
repnz
sbb
mov
int3
xor
in
cwtl
mov
add
inc
std
into
mov
xchg
int3
out
mov
lahf
scas
fistpl
or
test
mov
add
inc
push
mov
popf
mov
rorl
jbe
inc
inc
bound
test
cltd
rcrl
imul
fstpl
inc
in
mov
lods
rclb
xchg
dec
nop
xchg
rolb
jns
sbb
adc
movsb
test
sub
mov
not
fldl
fstpl
cmp
out
in
ror
test
xchg
ret
fistps
insl
cmp
loop
inc
fs
jp
mov
add
jno
pop
sbb
push
cli
shrl
cmpsl
or
pop
lret
int3
mov
mov
daa
jb
gs
shll
jl
xor
jmp
ljmp
aas
sti
fwait
inc
mov
lret
pext
movsb
cmpsl
push
outsl
andl
xor
and
xchg
fistpl
jns
insl
pop
jne
lahf
ss
cmp
sub
mov
scas
cmpsl
push
xchg
subb
clc
dec
stc
cwtl
ljmp
mov
shll
test
jnp
ficompl
cltd
fdivl
in
cmp
aam
or
popa
testb
das
loop
jbe
mov
pop
jae
inc
adc
les
dec
mov
inc
push
jb
ret
js
xchg
xchg
push
mov
add
das
nop
mov
sub
aam
leave
scas
pushf
mov
test
in
je
add
rcll
test
popa
ret
xchg
mov
popl
inc
jne
cmp
fxtract
xchg
loope
push
cmp
sbb
jle
stc
data16
pop
stos
push
pop
scas
mul
xchg
xchg
sub
push
push
push
movsb
sbb
xchg
jno
mov
cmp
fisubrs
adc
add
jge
addl
cmpsl
pop
dec
dec
jle
sbb
push
lret
jb
test
and
outsl
movl
sahf
in
lcall
enter
loopne
lret
mov
jbe
notb
movl
push
pop
jae
shll
adc
push
pop
test
cmp
add
and
fwait
pop
loope
mov
push
jmp
test
cmp
rcr
mov
nop
cltd
sub
movlhps
mov
push
fs
pop
inc
jae
jmp
jbe
mov
or
std
inc
in
mov
xor
aas
enter
sub
pop
mov
sbb
jle
aaa
xchg
mov
ret
add
dec
and
aad
rcrb
sbb
sub
mov
ds
cmp
sbb
movsl
mov
jno
sbb
hlt
stc
add
sti
imul
mov
hlt
dec
cs
pop
mov
mov
sbb
lock
sbb
push
cltd
dec
xchg
std
cmpsb
xchg
xchg
ss
xchg
mov
dec
scas
jnp
xor
xor
mov
mov
jl
popf
mov
je,pn
dec
sahf
push
sub
inc
mov
bound
jmp
sub
xor
cwtl
bound
stc
pusha
adc
add
imul
or
repnz
sti
jb
iret
sahf
jecxz
les
inc
outsb
cmp
xor
adcl
jg
sbbb
or
adcl
popa
rcrl
pusha
push
imul
outsb
daa
fsubrs
es
and
xlat
popa
inc
loope
mov
in
sbb
push
inc
push
adc
cmp
out
data16
sbb
pop
jl
lahf
jle
and
ret
jge
add
out
xor
leave
fs
pop
jmp
pop
adc
sarb
cmp
cwtl
adc
les
mov
bts
ret
lods
enter
rep
adc
xor
push
cld
loop
pop
cmp
pop
mov
cwtl
lret
dec
pop
scas
push
mov
ds
jne
jge
cmp
jb
rorb
push
and
pusha
mov
shll
cs
add
mov
jle
subl
lods
cmc
cmpsb
test
pusha
aam
sbb
rep
sub
mov
cmc
aad
or
in
cmp
les
adc
ja
pop
out
mov
test
jge
add
lods
add
arpl
sub
call
lcall
mov
fwait
push
loopne
daa
push
stos
lcall
lcall
test
adc
test
incl
scas
xor
or
sub
sub
push
in
mov
rcll
or
ljmp
lcall
movsb
in
es
jge
pop
loope
lea
popa
ret
ret
xchg
push
sbb
cli
pop
push
je
insb
and
fcmovbe
sub
jne
je
mov
mov
pop
mov
cmpsl
adc
mov
dec
mov
mov
pop
out
mov
xor
icebp
jcxz
pop
test
cmpsb
xchg
and
cmpb
js,pt
arpl
rorl
push
inc
inc
pop
dec
mov
adc
jae
out
mov
aad
es
shrl
adc
cli
jle
popf
add
rcr
frstor
enter
clc
aas
fwait
cmp
pop
or
sub
pop
or
pop
sti
hlt
movsb
into
nop
aas
hlt
hlt
ja
jecxz
not
imul
push
sbb
push
mov
std
cwtl
jo
mov
xor
pushf
add
mov
mov
pop
inc
pop
cmpl
movsb
shlb
mov
lcall
and
mov
lods
dec
repz
jle
out
cwtl
mov
dec
fcompl
mov
sarb
adc
dec
popa
pop
orb
jecxz
dec
ds
rorb
cld
lret
sbb
xor
adc
stc
loopne
lret
call
outsl
mov
mov
jo
daa
imul
jns
sub
or
xchg
test
lods
sub
push
insb
loop
inc
jb
aam
pop
and
sub
xor
push
mov
lcall
aam
sbb
jecxz
scas
cli
sub
adc
adc
mov
xchg
mov
aam
loop
outsl
cli
adc
cmc
hlt
stos
sub
pop
cmpsl
cmp
pop
sti
lcall
js
mov
mov
sbb
xor
js
ljmp
push
lock
lcall
mov
fiadds
or
test
or
or
adc
mov
xchg
cmpl
aam
xor
jl
mov
loope
punpcklwd
cmovns
lcall
rcl
mov
pop
repz
push
inc
jo
popf
aaa
aas
adc
test
sbb
xchg
pop
rcr
xor
arpl
fwait
lcall
cmp
jge
mov
cli
sarb
mov
das
mov
add
in
push
mov
push
cmp
ja
mov
mov
jge
sbb
jmp
xor
xor
pop
jecxz
mov
push
mov
aas
jl
pusha
mov
jmp
bound
push
inc
or
mov
dec
bnd
pushf
fisubs
and
mov
mov
cmp
mov
sub
inc
icebp
cmp
stc
mov
or
lods
ljmp
sub
enter
pop
push
mov
and
and
retw
mov
rcrl
stc
out
pusha
std
push
lods
jo
xchg
mov
sub
jo
leave
scas
add
mov
leave
shll
les
dec
mov
add
subb
sbb
sbb
in
pop
mov
aam
ret
nop
loop
and
out
sbb
xchg
sub
add
lods
fwait
xchg
inc
orb
aas
dec
scas
aaa
or
cmp
inc
lods
test
pop
jle
jno
push
add
ljmp
sub
or
inc
lods
int
stc
and
enter
jle
and
jbe
push
data16
jg
jo
cltd
loope
sub
jb
push
je
sub
mov
push
and
xchg
aam
adc
mov
in
sub
adc
push
mov
into
gs
and
addr16
push
jle
ror
add
lcall
loop
sub
xchg
lret
mov
mov
jb
push
leave
sbb
out
ret
sbb
fsubrs
in
popa
iret
fsubrl
mov
sbb
sbb
sub
movsl
jno
or
lods
data16
xor
mov
inc
cmpsl
xchg
in
rorl
dec
je
mov
xchg
pop
shll
adc
enter
popf
pop
stos
dec
or
stos
pop
into
mov
movsl
lret
inc
insl
xchg
mov
aaa
add
pop
sbb
mov
dec
inc
sbb
stc
mov
subl
inc
push
xor
jne
xor
sub
push
daa
in
inc
imul
std
insb
jmp
in
mov
add
popf
mov
push
pop
test
shlb
out
and
mov
sub
adc
mov
push
xchg
and
sbb
pop
adc
adc
cwtl
or
xor
inc
fmull
and
mov
sub
pushf
inc
mov
neg
sbb
xor
mov
lods
cltd
xchg
push
pop
lods
lcall
cwtl
gs
jae
push
insb
or
sti
out
jns
lds
or
or
sbb
pushf
inc
push
mov
cmp
push
cmp
xchg
dec
cmp
sbb
mov
dec
or
stos
jbe
xchg
fsubr
dec
bound
adcl
test
xor
cwtl
repz
xor
insl
push
adc
push
pop
in
ja
cs
mov
test
or
adc
pop
jmp
je
sbb
andb
test
fdivr
fisubrs
cmp
or
pop
dec
call
mov
jl
out
adcb
mov
call
xorb
xchg
rclb
fistps
sar
cmp
adc
mov
sub
mov
pop
pop
add
call
xor
jns
ja
stos
je
es
adc
jae
les
or
mov
cmp
adc
push
sbb
enter
ret
addr16
rcrb
cmp
xchg
pop
in
test
or
mov
dec
fsub
fisttpl
push
adc
cmpsl
into
fcoml
out
sub
lock
pop
sub
adc
sub
push
xor
sbb
jns
mov
inc
int3
push
jo
sti
pop
inc
lods
aaa
or
sbb
repnz
dec
ret
clc
inc
pop
push
xor
bound
sbb
cmc
sbb
mov
out
mov
adc
cmpsl
out
cld
sarl
mov
mov
or
outsb
xor
stc
incb
push
repnz
mov
and
xchg
xchg
sub
pop
data16
adc
arpl
sub
or
mov
push
sub
incl
xor
daa
test
cld
adc
add
cld
cltd
out
mov
test
mov
test
mov
adc
push
imul
add
dec
and
mov
les
std
mov
pop
add
mov
pop
loope
push
out
add
push
test
jl
rcr
pop
mov
ret
cmp
cmp
xchg
mov
lea
neg
clc
inc
mov
les
test
inc
stc
inc
into
stc
xchg
mov
lret
push
pop
inc
je
xor
inc
lock
popa
jg
jl
adc
sub
xor
add
xor
scas
subb
jg
sbb
mov
push
mov
pop
mov
push
dec
pop
cmp
lock
sub
push
mov
int
js
rcrl
mov
pop
inc
xor
ljmp
lea
iret
jmp
inc
sbb
or
data16
or
pop
jns
sbb
clc
shll
jno
inc
icebp
aas
or
push
insb
mov
adc
shlb
and
push
push
jle
mov
js
test
mov
jl
mov
int3
jle
jl
jbe
ret
or
cwtl
fidivs
lock
inc
adc
xor
js
insl
sti
fwait
xchg
push
push
jo
mov
pop
mov
cli
xor
mov
sbb
push
lea
sbb
aad
pop
push
sub
mov
jge
mov
shll
add
jecxz
jl
xorl
insb
jge
clc
adc
jo
hlt
mov
test
or
lahf
les
add
adc
ss
cmp
fs
in
jb
data16
pop
inc
je
jo
shlb
les
and
outsl
push
ror
testl
pushf
jns
lea
pop
dec
push
cltd
inc
js
xor
stos
xor
cmpsb
insl
leave
add
inc
in
ljmp
pushf
adc
jbe
cmp
stos
nop
mov
pop
out
dec
ret
inc
stos
arpl
jecxz
mov
lods
jl
sbb
js
stc
pop
adcb
lock
or
imul
arpl
insb
add
les
inc
outsl
data16
dec
outsl
and
lret
jnp
jno
daa
mov
mov
mov
clc
not
cld
push
subb
movsl
loop
mull
adc
inc
pop
fcmove
outsb
jnp
fldt
jns
lock
lea
mov
addr16
imul
mov
xor
dec
xor
jl
lods
inc
cmc
xor
xchg
push
rol
mov
and
mov
push
popl
push
aas
push
std
sbb
mov
cmp
hlt
ret
adc
aas
xor
shll
add
pop
adc
xor
xor
jbe
cs
setp
cmp
pop
inc
jnp
adc
icebp
jns
fucomip
stos
dec
xchg
ljmp
add
jo
dec
dec
pop
adc
test
dec
out
mov
adc
shrl
push
push
in
xor
mov
xchg
mov
popf
lahf
rcl
stos
add
mov
add
mov
jg
insl
fcmovnbe
test
adc
inc
xchg
dec
or
sti
movsl
add
or
mov
mov
add
popa
aaa
inc
imul
pusha
xchg
pop
adc
or
in
mov
in
lods
mov
xchg
lods
adc
jmp
icebp
iret
xchg
repnz
dec
cld
inc
add
jge
and
in
addb
mov
aam
add
mov
aad
jne
jnp
movsl
sub
pop
addr16
imul
and
lods
mov
push
fadd
xchg
ret
arpl
out
sbb
fs
dec
xor
mov
mov
icebp
cmp
cmp
loope
cmpsl
insb
incb
fs
in
mov
mov
outsb
sub
gs
jns
cmpl
push
mov
push
es
inc
jbe
xchg
icebp
push
and
dec
inc
imul
inc
aaa
xor
sub
mov
cmpsl
add
dec
je
jo
sub
sub
out
jp
xor
or
lret
mov
inc
inc
test
sbb
add
jle
pop
mov
subl
and
icebp
pop
mull
cmp
mov
fldenv
out
imul
bound
roll
and
jle
movsb
mov
jno
inc
or
pop
pop
lods
gs
sti
data16
stc
mov
fildl
jmp
adc
sub
stos
sahf
jnp
mov
xchg
rorb
xor
push
inc
fidivl
pop
insl
rolb
and
sbb
and
daa
adc
daa
and
add
dec
sbb
jge
cmp
shrl
shrl
mov
and
push
cmp
xor
dec
or
sbb
rolb
cmc
int
insl
cs
stos
in
mov
add
push
push
dec
jecxz
fs
into
jp
adc
inc
fidivl
mov
push
insl
pop
bound
inc
sahf
add
jno
stc
jb
lods
jo
lea
pusha
cmpsl
in
arpl
inc
sti
movsl
les
fs
pop
js
rcrb
sbb
push
cmp
fnstcw
test
inc
fimull
fidivrl
dec
xor
outsb
shl
repnz
push
outsl
lds
jl
inc
outsl
cltd
dec
and
outsl
gs
cmp
inc
lahf
cmp
into
jne
add
repnz
fiadds
insl
inc
sub
ret
xor
into
mov
mov
mov
fwait
inc
repnz
fadds
scas
enter
pushl
mov
and
add
mov
xor
aaa
adc
push
ret
cwtl
stc
mov
mov
test
fldenv
lock
dec
repnz
out
xchg
and
negl
std
pop
stos
imul
fbstp
sub
push
cmp
loop
inc
cmp
test
xchg
cmc
pop
test
push
add
in
mov
outsb
add
fmull
sbb
sbb
pop
cltd
stc
repnz
push
shrl
cli
cmp
push
mov
inc
pop
cmpsl
jo
rolb
jecxz
rcl
jns
outsb
not
jno
sub
call
push
inc
push
sbb
push
int
push
xor
cmp
and
dec
imul
mov
scas
dec
jp
mov
testl
and
mov
in
shll
inc
ja
dec
or
sahf
pop
jns
leave
cltd
fiadds
fwait
es
cs
lods
fdivs
cld
dec
sbb
stos
mov
push
dec
test
and
jnp
jne
hlt
fldenv
iret
pop
dec
xor
mov
dec
fisubrs
dec
insl
clc
push
mov
push
stos
cmp
mov
jns
cmp
call
loopne
scas
push
movsb
push
insl
in
enter
frstor
cmpl
dec
mov
es
adc
push
inc
int3
sbb
scas
mov
mov
scas
lods
jle
xor
mov
xchg
and
out
mov
scas
cld
push
dec
xor
fsubs
adc
xor
inc
cwtl
test
sbbb
push
movsl
bound
dec
sbb
ret
aam
push
je
test
pop
mov
inc
pop
pop
mov
push
sbb
rorb
mov
lds
inc
dec
iret
xchg
call
orb
and
xor
in
out
cld
lahf
aas
pop
sbb
rcrb
in
sbb
inc
push
lret
pusha
imul
dec
in
cmpsl
ret
test
pusha
hlt
xchg
xchg
adc
push
pop
shl
dec
inc
lods
hlt
sti
pop
mov
cld
xor
push
inc
jmp
es
rcrl
add
jbe
int3
fcmovbe
xor
mov
in
in
popa
outsb
cmp
addr16
adc
bound
ror
inc
sub
pop
fucomip
pop
jp
mov
jge
mov
pop
daa
fnstsw
add
fldcw
mov
mov
sar
mov
sub
iret
aam
pop
lret
lock
xor
xor
xchg
lretw
inc
idivl
or
or
rclb
push
inc
gs
cwtl
scas
pop
xor
inc
xchg
out
stos
jmp
ficoml
xchg
imul
fildl
repnz
in
out
ljmp
xchg
ljmp
inc
mov
cvtps2pd
into
sub
sub
insb
or
cmpsb
mov
xchg
push
cltd
dec
push
popa
xor
xor
lods
push
ret
mov
jb
js
mov
dec
jnp
push
jecxz
mov
clc
arpl
push
leave
arpl
leave
mov
mov
lahf
pop
sub
dec
add
or
push
insl
add
les
fidivl
and
shl
and
cmp
cs
dec
mov
jp
lods
ret
sbb
pop
cmc
in
mov
std
mov
jne
jmp
pop
int3
lea
movsb
icebp
lods
movsl
jmp
out
loopne
sub
sbb
js
test
cmpsl
shrl
jno
jnp
pushf
divb
dec
inc
pop
pop
cltd
push
cltd
jp
mov
aas
push
cld
sbb
mov
or
sbb
sub
rol
int
insl
fldenv
and
adc
loope
sahf
sbb
push
fistps
xlat
push
xchg
sub
mov
dec
loop
jno
gs
stos
fstps
cmpsb
outsb
je
mov
int3
sbb
jbe
sbb
and
and
mov
cmp
jp
adcl
xchg
lahf
notl
inc
insl
push
lcall
jo
cmp
mov
imul
in
jg
sub
sti
loop
insb
sbb
xchg
enter
pusha
sbbb
and
push
aad
sub
add
xor
scas
sti
push
jnp
pop
mov
cwtl
adc
mov
lahf
and
int3
mov
loop
in
mov
and
roll
mov
jno
mov
les
sub
inc
adc
iret
int3
jbe
mov
hlt
sub
icebp
mov
pop
xchg
fwait
addr16
xor
jae
mov
push
mov
cmp
and
add
ja
addl
add
jnp
lea
mov
pop
xchg
inc
fs
cmp
jno
pop
hlt
stos
es
mov
movsb
xchg
into
in
mov
cmp
orb
dec
fbstp
sub
cs
sahf
lea
push
push
stc
rolb
push
in
imul
mov
mov
mov
dec
push
inc
jae
mov
mov
mov
mov
cmp
add
sub
dec
sub
arpl
dec
jmp
cmp
dec
inc
shlb
add
pop
add
movsb
mov
pop
pop
pop
sbb
shlb
out
sub
mov
push
mov
add
xlat
loopne
adc
out
sub
jg
mov
bound
mov
inc
push
pop
mov
outsl
jmp
loopne
or
adc
cmp
lods
lock
sarb
dec
in
and
mov
jno
push
mov
push
sbb
out
pusha
outsl
out
pop
into
into
pop
xor
sub
dec
xor
jbe
testl
sti
daa
movb
mov
add
loope
add
xchg
out
cwtl
adc
mov
xor
push
lret
rorb
inc
xchg
xor
lds
sub
sti
test
adc
scas
mov
push
push
je
aaa
xchg
nop
add
aas
jnp
jg
in
punpckldq
clc
leave
sub
xchg
sti
push
cld
adc
call
scas
icebp
xchg
sub
jno
enter
or
pusha
lea
test
dec
stos
push
and
das
insb
rcl
sbb
shrl
dec
mov
fildll
hlt
push
mov
out
add
call
loope
jle
push
movsl
xor
mov
movsb
xor
or
daa
push
pop
int
lock
fdivl
xor
pop
icebp
mov
mov
mov
mov
popa
inc
lea
andl
push
inc
sbb
cmp
cmp
lods
mov
test
out
imul
paddd
in
inc
xchg
jne
lahf
outsb
out
ja
push
je
and
xchg
mov
mov
rcl
pop
jg
mov
jp
test
testl
sub
aad
xor
mov
orl
inc
mov
inc
cmp
inc
lret
sahf
stos
mov
jecxz
push
test
mov
lret
push
pushf
aam
jp
mov
add
mov
not
loop
rclb
xchg
stc
push
cli
inc
out
dec
cmc
adc
mov
hlt
and
sub
cltd
fsubrs
or
add
icebp
pop
mov
mov
in
and
scas
push
jp
notb
shl
jae
lahf
pop
ljmp
ffree
add
ss
mov
rclb
aaa
add
out
jo
setp
mov
pop
out
roll
add
add
inc
xor
add
pop
outsb
in
repz
lcall
inc
hlt
or
mov
jecxz
subl
and
pop
xchg
jo
sar
push
adc
dec
ja
dec
or
addb
leave
cmp
mov
mov
imull
xor
stos
dec
jmp
test
pop
dec
fisubl
xor
insb
outsb
mov
cld
fildl
or
jbe
rolb
test
sub
dec
dec
cmp
mov
mov
outsb
sarb
mov
push
or
imul
mov
mov
test
or
cli
rcl
mov
cli
sti
adc
jg
add
xchg
insb
lret
mov
xchg
xchg
lea
inc
ss
cwtl
mov
ja
push
sbb
ret
lock
adc
mov
cmp
push
or
lds
fwait
loopne
jmp
pop
imul
test
daa
jg
movsl
mov
nop
inc
daa
decb
sub
push
dec
rorb
mov
daa
inc
push
out
fs
jg
pop
jbe
imul
or
xchg
cwtl
lock
sub
xor
push
cmp
clc
jmp
pop
mov
push
mov
lods
sub
loop
mov
aad
incb
xor
xlat
out
in
ljmp
movsl
pop
pop
cmp
cmp
mov
dec
cltd
outsb
into
jo
xchg
sub
data16
xchg
lcall
loopne
xor
dec
xor
loope
ret
adc
loope
push
or
bound
cli
loope
cltd
shlb
add
ret
xchg
inc
hlt
ljmp
inc
lcall
add
enter
pop
cwtl
jae
pushf
mov
mov
add
aas
cmp
pop
push
les
pop
pop
out
leave
xchg
mov
aas
jle
sbb
aas
xchg
adc
in
mov
cmp
cmpsb
fnstcw
xchg
in
dec
sbb
fsubrl
stos
sub
in
sbb
sbb
fs
loope
or
lds
pushf
pop
sarb
aam
into
or
negl
sub
aas
and
rcll
fildl
rolb
add
scas
sbb
lahf
loope
jp
xchg
aas
incl
xor
inc
xlat
rsm
push
mov
xchg
add
dec
push
dec
ret
push
das
cmp
jl
cmp
sbb
insl
fcmovb
jbe
in
incl
sub
out
shlb
push
cmp
out
pop
test
xor
test
les
sub
sub
ja
clc
xor
ret
fistpll
push
jbe
mov
cmp
push
inc
outsb
xchg
pop
add
or
std
pop
push
and
in
adcl
mov
pop
fwait
pusha
push
imul
jae
je
ficompl
aad
jmp
in
mov
jle
and
inc
sub
ljmp
and
cwtl
stos
adc
fdiv
out
into
inc
nop
loopne
stc
pop
es
ret
ljmpw
int
out
addr16
adc
test
hlt
sub
sbb
aaa
mov
in
xchg
clts
xchg
xor
or
xrelease
ljmp
pop
mov
xchg
sahf
lods
pop
fsts
pop
into
ret
xor
push
das
xlat
jl
inc
popf
cli
mov
cmovno
out
rorb
pop
daa
push
add
pop
adc
fcom
cmp
cmp
or
stos
sbb
and
add
cmp
cmpsl
into
lods
dec
insb
or
ljmp
xlat
shrd
and
push
cltd
pop
rcll
mov
push
or
xchg
add
sub
jge
and
int
clc
cmp
xchg
or
sub
cmp
mov
xchg
sbb
nop
xchg
cmp
in
sbbl
and
mov
cld
jecxz
seta
cltd
cltd
mov
insl
addr16
sarl
lret
add
pop
inc
rcrl
mov
fidivrs
shrb
sti
cmp
cwtl
sbb
xchg
repnz
cmp
les
jmp
sbb
cmc
fnsave
sbb
inc
ds
aam
inc
insb
dec
test
mov
out
fdivl
out
add
pusha
ret
scas
and
xchg
mov
jo
out
adc
in
push
push
std
add
inc
pop
mul
insb
pop
mov
cmp
push
loop
ds
popf
sahf
bound
iret
scas
js
ss
add
lock
mov
mov
sub
mov
leave
push
inc
or
scas
fcmovb
ds
push
repz
std
sub
cmpsb
and
jno
xchg
pop
cwtl
pop
sub
bound
sahf
pop
cmp
subb
jb
sar
push
pop
movsl
cmp
popa
xor
cmp
lahf
cmpsb
cmp
pop
lcall
add
into
aam
push
cmovnp
cmc
pop
shrb
popa
xor
clc
in
or
jns
pushf
insb
lret
divb
daa
out
adc
insl
xor
jbe
jno
jns
sbb
mov
xor
out
jmp
ret
jo
mov
jns
dec
pushf
fnstenv
cmp
jbe
mov
mov
dec
xchg
xchg
adc
in
cmpsl
repz
mov
lods
mov
add
cmpsl
pop
in
cmpl
cli
xchg
and
in
aaa
add
std
jb
fistpl
xor
testl
mov
push
mov
push
xor
subl
mov
in
clc
cmpsb
inc
pushf
or
addb
jb
push
inc
mov
dec
and
negl
rcrl
mov
push
add
call
xor
and
fimull
cmpsb
pop
jle
dec
adc
xor
dec
aas
lock
and
lods
mov
loopne
test
bound
lret
mov
fisubrl
pop
and
outsb
push
add
lea
loopne
xor
mov
loop
iret
xor
or
jle
mov
scas
lahf
cli
mov
aad
and
xor
lret
inc
repz
js
pop
push
hlt
iret
dec
cs
es
xor
mov
mov
and
push
adc
mov
pop
xor
leave
gs
scas
mulb
xorb
mov
in
repnz
loope
enter
repz
pop
stos
aad
mov
adc
cwtl
fnsave
fstpl
repz
fcomip
or
xor
jmp
call
jmp
push
mov
xchg
add
sbb
or
add
ja
xor
jo
mov
xchg
insb
sar
sbb
pop
out
sbb
xor
push
ficomps
arpl
stos
lcall
jg
enter
aas
sbb
and
push
filds
mov
fwait
sbb
adc
outsl
lds
push
xor
pop
enter
inc
jg
test
es
addr16
pop
pop
mov
inc
mov
adc
scas
jnp
fisubrs
add
int3
cmp
out
push
arpl
outsb
pusha
scas
popf
pushf
fwait
xor
jle
outsb
pop
shlb
rolb
jb
pop
dec
xchg
insb
fs
jns
xor
and
gs
pop
jbe
push
inc
jp
pop
hlt
xchg
add
xchg
or
icebp
jo
hlt
mov
add
mov
ljmp
xchg
xlat
packuswb
dec
imul
jns
testl
popa
hlt
pop
mov
pop
bound
enter
xlat
or
xchg
add
xchg
pushf
or
jne
loopne
in
je
mov
mov
xchg
inc
mov
icebp
cmpl
loopne
aam
popf
push
test
clc
dec
or
lret
repz
idiv
lret
xor
lods
jae
xchg
adcb
xchg
pop
or
bts
pop
lret
fdivrp
ss
lods
xchg
sbb
cmp
rcrb
push
mov
pop
and
scas
fidivrs
inc
cmp
dec
pop
int
xchg
test
data16
test
cs
mov
mov
adc
or
je
lahf
cmp
fwait
jnp
mov
inc
sub
addl
mull
sarb
shll
cmpsl
and
data16
imul
dec
dec
or
int
inc
pop
sub
outsl
mov
push
mov
and
call
fnstcw
mov
adc
int
add
pop
icebp
jne
sbb
int
ret
and
push
test
aad
cli
and
xchg
in
fimull
push
shll
insb
adc
cmpsb
fnstcw
out
iret
ret
push
call
sbb
xor
push
mov
data16
mov
inc
iret
pop
nop
adc
jecxz
fiaddl
xor
aad
jno
adc
fdivs
xchg
mov
dec
shl
jp
dec
clc
push
mov
fdivs
aad
iret
or
cmp
cmp
sti
lahf
stos
jmp
cwtl
nopl
out
aad
jcxz
add
mov
adc
xchg
mov
lret
inc
das
sahf
faddp
jae
sub
jne
mov
sub
inc
outsb
cwtl
pop
divl
bound
mov
aaa
cli
in
lods
add
arpl
call
popa
mov
das
mov
mov
add
xchg
aad
mov
push
dec
popf
outsl
fimuls
pop
scas
iret
in
std
dec
stos
jb
inc
jmp
xor
mov
and
sub
adc
mov
mov
adc
dec
lret
jg
mov
cwtl
in
xor
rorb
fistps
cmp
sbb
pop
sub
bnd
cld
or
call
aam
xchg
or
dec
mov
mov
mov
mov
test
push
movsl
mov
jbe
stos
cmpsl
push
sub
insb
movsl
or
shlb
lea
push
scas
jbe
loopne
mov
stos
ljmp
bnd
movl
push
push
call
aas
stos
mov
xlat
push
mov
es
test
or
fwait
dec
fcomps
and
in
mov
mov
cmc
push
popf
push
or
movsb
lea
fsubl
and
pop
xchg
inc
sbb
movsb
das
mov
fs
jl
les
scas
or
inc
pop
ljmp
pop
mov
pop
cmpsl
fistpll
outsb
inc
decl
leave
stos
push
mov
sti
test
adc
mov
push
inc
aaa
es
std
jle
xor
fmull
subb
lret
xor
inc
add
xor
stos
lds
pop
and
popa
adc
jns
xor
dec
dec
add
sub
pop
mov
ja
lret
push
loopne
push
xlat
cmp
jl
sbb
mov
adc
jno
cwtl
jns
push
or
je
cmpsb
fdivl
movsl
cmp
fldcw
subl
or
or
stc
rcll
cmp
fildll
xchg
test
push
rorb
mov
jmp
cmp
mov
or
imul
adc
fildll
pop
xor
jbe
fiadds
testb
xchg
jb
in
sbb
sbb
rcl
jg
mov
sahf
hlt
lds
pop
cli
cwtl
add
test
lcall
imul
sahf
push
loop
add
mov
dec
jbe
xchg
aaa
cwtl
movsl
cwtl
lods
das
je
ret
pop
and
movsb
sub
sbb
jnp
aas
xor
data16
mov
push
cld
loope
mov
insb
sarb
xchg
xor
rolb
xor
movsl
add
jne
lret
push
pusha
push
aas
cs
ret
into
jns
adc
fcomps
xchg
jo
pop
loopne
and
mov
xchg
in
mov
mov
sarb
pop
or
sbbl
mov
adc
cmp
jne
dec
cmp
and
push
mov
mov
sub
inc
mov
insl
out
sbb
addr16
lret
mov
shl
loop
shlb
cmp
stos
xchg
jp
mov
js
insl
outsl
mov
dec
fiadds
or
ljmp
xchg
push
xchg
jbe
push
ss
fildll
pop
test
repnz
lahf
out
and
add
inc
lcall
push
movb
and
jl
xor
loope
rcrb
fisubrs
inc
imulb
pop
add
sbb
or
dec
adc
xor
dec
cltd
inc
faddl
ficoml
cmpsb
jl
rorb
lods
xchg
dec
jns
enter
sbb
in
push
call
js
inc
push
dec
mov
pop
je
repnz
into
mov
sub
xchg
xchg
add
cmp
popa
jl
js
mov
lds
sbb
mov
push
fsubrl
jmp
mov
push
shrb
pushf
sub
cld
adc
xchg
cmp
or
pop
dec
or
pop
adc
mov
mov
lahf
xchg
sub
es
mov
adc
xor
mov
ljmp
fisubrs
xchg
pop
xchg
sbb
stos
or
push
lods
loope
lods
shlb
je
outsb
mov
and
mov
xor
js
flds
dec
or
dec
aaa
jne
pusha
inc
test
jo
sub
icebp
mov
mov
sti
imul
jae
stos
jne
lods
repnz
cmp
out
or
push
jge
xlat
add
sahf
enter
or
mov
stos
bound
iret
ljmp
aaa
outsl
cmp
add
dec
das
pop
fstl
scas
lret
inc
lods
repnz
push
aam
sbb
fisttps
in
xlat
insb
dec
mov
pop
aaa
enter
test
mov
inc
in
sub
ljmp
mov
cmpsb
in
mov
pop
popf
mov
aam
test
jb
clc
pop
sbb
shlb
push
out
jge
stos
fxch
iret
loop
cmp
clc
mov
xchg
pushf
std
mov
and
xor
add
mov
lret
mov
aas
ljmp
push
dec
xchg
xor
in
movb
insb
pop
xor
dec
jae
mov
or
pusha
add
inc
cwtl
aaa
rep
xor
ret
imull
lret
xlat
shll
or
mov
xchg
rorb
sbb
cs
int
loopne
roll
and
shr
pop
fwait
jg
sbb
imul
push
rcl
mov
push
adc
icebp
pusha
js
jb
lods
rep
sbb
outsb
push
out
lret
xor
leave
int3
and
mov
scas
xor
jns
dec
or
sbb
push
cs
jp
inc
and
mov
sbb
and
test
xchg
xchg
inc
scas
out
lea
sbb
cmp
ja
cld
xchg
jmp
add
cmp
loope
adc
rolb
pop
push
ss
ret
pop
negl
dec
pop
and
repz
xorb
xor
jp
lock
inc
cmpsl
push
xchg
or
mov
jb
adc
xor
orl
cmp
pop
jmp
inc
pusha
dec
aas
push
add
aam
ss
into
frstor
js
out
aam
int3
xlat
outsl
in
mov
jp
pop
fwait
stos
jp
and
dec
notb
mov
xchg
adc
push
sub
enter
insb
shlb
xchg
fwait
test
sub
repz
aam
sbb
push
lea
cli
test
mov
scas
or
jns
or
adc
and
or
sbb
pop
inc
push
xchg
dec
jmp
data16
pop
mov
mov
xor
loopne
hlt
lahf
dec
dec
dec
dec
fidivl
pop
sub
cld
stc
imul
or
repz
xchg
cmpb
xlat
push
mov
push
jne
pusha
add
lods
movsl
cmpb
mov
jo
cmp
jg
xor
movsb
mov
repnz
or
xor
cmp
or
dec
cmp
push
inc
pop
lcall
pushf
lds
cmp
mov
sbb
push
push
dec
xor
mov
mov
ss
push
or
inc
imul
add
loopne
inc
imul
push
and
imul
rolb
push
hlt
fcmovne
and
aas
imul
hlt
mov
aaa
arpl
fmulp
and
and
fwait
pusha
sbb
xor
scas
orb
je,pn
and
scas
jecxz
insl
adc
psllw
push
mov
out
adc
aad
fwait
loopne
add
push
push
mov
and
inc
jbe
aas
mov
mov
sahf
mov
cmp
cmp
jge
jb
stos
add
add
jbe
pop
sar
aas
loop
add
xchg
sbb
and
clc
and
push
mov
std
bound
mov
mov
ficompl
incb
xchg
dec
mov
gs
push
sbb
dec
cmp
popf
sarb
in
js
or
push
call
popa
xor
cmp
xchg
mov
aam
movsb
mov
inc
subb
int3
xor
mov
lret
cltd
popf
or
xchg
jno
cmp
pushf
add
sbb
cmp
jl
cld
mov
mov
adc
fmulp
push
movsb
sahf
cltd
sarb
in
push
enter
popf
sbb
mov
fisubrs
mov
cmp
pushf
shlb
mov
icebp
mov
jmp
or
mov
inc
sub
popa
das
pop
icebp
jmp
repz
jns
push
in
jo
and
mov
in
adc
js
enter
pop
push
or
inc
notb
mov
adc
sub
mov
enter
or
rorb
lret
push
push
pushf
jecxz
mov
or
add
pop
cltd
ja
add
sarb
cli
leave
jecxz
test
dec
add
pop
lods
and
add
jne
mov
jge
leave
xor
jne
xor
les
idivw
dec
push
fsubr
and
ss
mov
mov
outsl
pop
mov
jp
sub
jnp
jmp
xchg
mov
push
xor
in
pusha
imul
ffreep
xchg
das
insl
pushf
jb
adc
aam
push
or
adc
xchg
cmp
sub
imul
out
pop
xor
in
loop
mov
bound
int3
or
mov
cli
into
cltd
in
das
jg
pop
mov
clc
push
bound
add
lret
ds
dec
movsb
add
out
mov
jnp
loopne
shr
and
cmp
sahf
push
fxam
xor
daa
cltd
nop
sbb
lea
cltd
and
stos
mov
jmp
and
push
test
mov
xor
dec
sarb
fldt
adcl
loopne
sbb
stos
cmp
or
jmp
sarl
inc
and
cmp
jmp
lret
mov
add
xchg
insb
push
outsl
pop
clc
pop
mov
inc
mov
push
addr16
pop
nop
jne
js
xchg
call
pop
cmp
fsubrs
sbb
fidivrl
pinsrw
xlat
into
xchg
and
sbb
pusha
pop
roll
dec
out
sub
lahf
dec
xchg
subb
cmpsb
loope
cmpsb
iret
mov
test
jg
in
or
pop
or
lock
outsl
xchg
pop
mov
imul
or
jmp
mov
xchg
mov
lahf
sbbl
mov
or
cmp
xchg
lret
jnp
jb
push
jne
cmp
orb
add
jmp
rcrb
call
aad
pop
push
lods
test
clc
and
cli
fidivrl
jmp
sbb
enter
bound
jnp
and
cltd
movsl
imul
insb
fdivrs
insb
jo
jl
insb
push
mov
mov
aam
inc
push
ret
xchg
or
call
or
in
notl
lods
adc
pop
mov
jno
sti
mov
xchg
data16
push
pop
scas
xlat
fistl
repz
mov
inc
xchg
pop
frstor
mov
jb
in
xor
lcall
pop
xchg
push
pop
mov
xchg
pop
mov
sub
stos
or
jae
lret
push
add
inc
daa
mov
popf
jno
or
movsb
inc
mov
cld
aad
xchg
jns
pop
cli
inc
fisubs
mov
cmc
xchg
insb
dec
shrb
lret
pop
fs
sbbb
mov
adc
test
mov
les
xchg
jecxz
jo
mov
push
jbe
scas
lods
es
scas
int3
aam
loope
push
mov
inc
mov
mov
movsl
stos
dec
dec
mov
js
jle
push
sub
inc
es
jecxz
std
hlt
les
loopne
shlb
jmp
add
adc
stc
pop
jg
in
dec
push
inc
fidivl
ss
inc
cmp
arpl
and
mov
push
dec
mov
pop
mov
insl
xchg
outsb
filds
xchg
lods
arpl
adc
cs
xchg
and
add
repnz
popa
and
aam
cmpb
xlat
mov
std
cmpsb
ss
imul
lods
dec
incl
xlat
mov
adcb
push
jae
mov
test
rcll
pop
out
push
icebp
mov
cmp
jg
dec
dec
pop
pop
mov
push
fwait
xlat
push
jge
mov
out
jecxz
pop
and
push
je
adc
test
test
out
pop
in
mov
pop
mov
mov
clc
call
adc
mov
jg
jbe
or
call
jmp
fnstenv
adc
fnsave
push
xor
mov
jo
cmpsl
cmp
inc
mov
dec
lea
push
imul
outsb
pop
sahf
fcoms
sbb
shlb
fbld
je
movsl
inc
or
add
or
test
in
xchg
movsb
insl
in
lock
mov
cmp
loope
push
adc
movb
jge
jge
rorl
lcall
aam
and
mov
lock
roll
sahf
pop
xor
add
in
dec
cli
js
push
add
fdivp
sbb
stc
jge
or
jnp
fcoms
mov
xchg
push
imul
insb
jns
xor
out
inc
inc
jne
jo
lods
mov
and
jge
dec
lods
mov
popf
push
rclb
mov
rcrb
adc
loope
aad
fcmovnb
add
push
cwtl
inc
push
push
pop
pop
imul
mov
xchg
mov
mov
sti
test
loop
xor
jecxz
mov
jl
inc
int
adc
enter
cmp
jp
fnstcw
enter
fildl
or
or
inc
shlb
lahf
adc
cld
jecxz
add
mov
and
xor
out
mov
cmpsb
cltd
sub
pushf
mov
fpatan
mov
push
and
shl
mov
add
mov
aaa
cmc
negl
stc
jmp
mov
mov
xchg
push
inc
push
mov
pop
add
mov
nop
jae
test
imul
jo
jmp
call
inc
in
les
enter
jge
lahf
orl
push
sub
push
mov
repnz
xlat
outsl
xor
and
inc
push
fmul
or
lock
aas
mov
pop
xchg
jae
adc
cmpsb
pushf
fnstenv
insl
and
mov
adc
scas
cld
mov
adc
mov
test
mov
hlt
int3
add
sbb
and
cmp
loope
or
pushf
sbb
dec
push
lea
mov
pop
outsl
stc
shlb
out
stc
push
pop
adc
cmp
loope
sub
fnstcw
dec
adcl
or
mov
ds
cwtl
dec
add
add
cld
pop
mov
cmp
lea
shrl
aam
jo
or
xchg
pop
cmp
popfw
cmp
mov
fmulp
data16
aaa
lcall
mov
cmp
mov
and
icebp
jmp
lret
out
in
hlt
dec
addb
push
lea
xor
jg
push
xor
mov
loopne
add
cmpsl
cltd
mov
adc
adc
outsb
adc
outsl
insb
arpl
lahf
dec
add
push
pop
mov
push
xlat
popf
inc
sub
jns
clc
adc
ss
jl
les
push
rorb
out
sbb
rdpmc
bound
jbe
xor
push
hlt
jmp
pop
fnstcw
push
push
orl
loope
lret
aaa
roll
iret
cmp
mov
add
lret
repz
jae
cwtl
les
in
aaa
cld
aad
repz
repz
jg
dec
xchg
pop
loopne
daa
pop
outsb
stos
push
mov
sub
mov
mov
inc
lea
sub
and
push
fstpt
inc
mov
addb
sbb
xor
rclb
jmp
and
shrb
lock
sahf
mov
inc
inc
roll
mov
mov
adc
sbb
popa
mov
adc
addr16
mov
loopne
jge
mov
cli
and
dec
inc
xchg
inc
xchg
mov
das
into
sbb
pop
pop
sbb
or
sub
outsl
cmp
outsl
gs
test
mov
jmp
mov
cmpsl
add
add
das
sbb
push
cmpsb
ljmp
pop
movsbl
insb
fbstp
fstpt
int3
nop
lahf
popf
idivb
iret
into
fisubrs
data16
jno
xchg
test
ss
pop
jae
mov
lea
rorb
mov
lods
mov
mov
scas
mov
pop
pop
ds
pop
aaa
fldlg2
and
popf
jle
scas
dec
jle
dec
loopne
adc
out
call
sbb
pop
aaa
jmp
out
dec
lcall
add
fs
scas
xchg
dec
lods
insb
xor
xor
ret
mov
out
pop
sub
cmp
push
repnz
jno
testl
mov
enter
test
dec
pop
sbb
pop
sahf
and
mov
pop
xchg
in
pop
repnz
insb
push
cmpb
std
fiadds
sub
scas
jge
and
sbb
inc
jne
mov
imul
iret
and
decb
ja
jle
loopne
sbb
push
and
mov
xchg
and
mov
mov
cmpb
test
xchg
jae
in
inc
icebp
xor
test
ss
sbb
pop
sbb
fnstcw
loop
xlat
jp
mov
in
outsl
push
jle
mov
int3
lret
hlt
into
movsb
cmp
stc
movsb
sbb
lcall
mov
pop
in
push
cmpsl
aaa
insb
test
shll
and
repz
sub
rep
test
daa
push
andl
dec
cmp
dec
xchg
mov
xorl
mov
push
mov
mov
pop
popa
faddl
bnd
ss
lods
fldz
and
cli
sbb
inc
pop
mov
sti
rorb
mov
out
jmp
subl
xor
out
cltd
lods
shrl
dec
sbb
cmp
movl
lret
out
js
push
leave
fstl
shll
negb
fwait
shl
inc
xchg
popf
js
fnstcw
out
jns
insl
or
inc
jns
and
cvtps2pi
xlat
pop
mov
ret
dec
cmpl
fisttpll
mov
in
inc
bound
sbb
lret
pop
insb
jbe
fdivrp
es
pop
stc
cwtl
sahf
call
lods
xor
rcrl
es
in
or
pop
dec
ror
int
leave
scas
lret
comiss
sbb
xlat
cmc
pusha
mov
jb
or
loopne
mov
int3
mov
or
and
aam
jmp
cmp
adc
and
daa
das
push
aam
dec
mov
pushf
es
sbb
jle
cmp
pop
ffreep
mov
cmpb
xlat
mov
rorb
xchg
iret
xor
js
dec
shl
mov
cli
insb
leave
push
sbb
xor
scas
pop
mov
mov
mov
xor
aas
mov
push
or
pop
mov
pop
testl
mov
out
jb
dec
inc
sub
mov
xchg
ret
push
dec
je
shl
sub
leave
mov
cltd
mov
fnstcw
les
sub
in
pop
mov
ss
sbb
xchg
lods
jmp
sbb
xor
push
xor
mov
and
dec
xchg
jle
mov
add
divl
in
mov
sahf
xchg
dec
clc
addb
cmp
cmp
lahf
aad
scas
push
aad
stos
inc
push
pushl
pop
add
cli
out
rclb
stos
das
or
es
push
adc
cli
pushf
push
sbb
add
push
xchg
popa
lea
mov
int3
push
rol
jmp
or
outsb
fwait
lods
or
ss
sbb
xchg
in
or
inc
mov
jle
pop
dec
es
push
and
out
daa
xor
jae
dec
push
inc
push
xchg
inc
xor
int3
test
out
sub
xor
shr
and
dec
push
inc
cmp
outsl
push
pop
xor
aad
mov
mov
in
jae
inc
sub
xor
fnstcw
bound
push
mov
out
insl
insl
lahf
jns
daa
loope
or
pushf
rorb
or
fldt
mov
popf
jge
xor
mov
mov
ja
and
sub
push
or
mov
test
inc
push
in
cmp
es
xchg
pop
dec
bound
fimull
and
leave
lods
inc
mov
xchg
mov
adc
cwtl
and
lahf
pop
arpl
jge
dec
loop
js
mov
out
out
mov
sbb
jl
push
stos
mov
aas
and
loope
adc
jb
loop
mull
dec
leave
dec
dec
xor
cmpsl
adcl
repnz
cmp
popf
mov
les
and
sarb
mov
xor
or
pushf
push
into
movsb
repnz
mov
xor
pop
push
ret
sbb
push
push
push
ret
out
mov
das
cmp
xor
pop
mull
push
in
pop
dec
aad
inc
mov
pushf
data16
inc
stc
aas
mov
aam
outsb
enter
pop
xchg
jge
out
lcall
punpckhbw
outsb
loopne
nop
sub
out
ds
cmp
aas
and
repnz
lods
aaa
inc
fsts
popa
movsb
fcmove
scas
xor
mov
scas
fwait
je
push
sbb
adc
or
out
ror
out
in
das
cmp
push
xchg
in
push
mov
loope
mov
mov
mov
mov
and
insl
clc
cli
aam
out
push
jmp
cmp
movsb
popa
pop
and
ficoms
mov
xor
sbb
xlat
mov
dec
rolb
in
sbb
or
pushf
iret
dec
push
cmp
cmp
sub
xchg
jmp
push
popf
cld
dec
ljmp
adc
sub
mov
dec
ss
mov
inc
mov
add
lock
aad
lret
xchg
dec
jmp
jp,pt
fsub
mov
jns
push
cltd
add
in
xor
add
xchg
jb
adc
jge
dec
mov
mov
dec
or
xchg
and
adc
fdivrl
call
push
cmp
add
dec
stos
add
sbb
leave
lods
pushf
lret
scas
popa
aad
lcall
sbb
out
aaa
or
jl
adc
stos
mov
bound
movl
fcoml
test
push
sub
add
xchg
cmpsl
sub
mov
push
inc
icebp
xchg
fldl
mov
mov
popa
pop
outsl
jnp
jp
pop
loope
cmpb
test
sub
mov
iret
sti
xchg
ficoml
dec
sbb
inc
push
xor
push
inc
lret
orb
push
loope
jb
lret
ret
mov
push
cmp
pop
adc
cmp
push
inc
pushf
fstl
xor
sbb
shll
in
sub
lock
cmp
inc
movsl
fucomi
lahf
ret
mov
xchg
leave
lar
bound
aad
and
sbb
fs
or
cmpsl
mov
pop
xor
call
pop
inc
faddp
pop
add
sub
popa
adc
and
loopne
add
scas
and
adc
mov
sub
mov
pop
inc
out
mov
inc
dec
jp
aam
dec
clc
test
std
lods
in
and
es
and
call
gs
aas
mov
pop
push
test
into
cmp
mov
in
push
fs
add
xchg
dec
add
jno
sbb
inc
jmp
inc
fldz
jp
inc
mov
cmp
cmpsb
or
xchg
mov
out
pop
lret
add
xor
xchg
orb
and
xchg
ror
adc
cli
xchg
adc
push
dec
movsl
adc
stc
outsl
xchg
xorl
adc
push
bound
gs
adc
pop
pop
inc
sub
scas
fcoml
jge
test
inc
push
push
mov
pop
sahf
pop
pop
in
mov
cmp
addr16
mov
outsl
fwait
hlt
movsb
outsl
fwait
sub
ret
add
aaa
or
mov
int
js
insl
scas
mov
cmp
into
xor
popa
cli
das
mov
pop
lods
cmpb
xchg
dec
dec
ss
into
push
pop
or
and
fcompl
outsl
stos
out
add
inc
lcall
cmp
stos
adc
ja
rcl
into
inc
mov
loopne
add
cli
cmpsb
mov
or
xchg
sbb
repnz
mov
imul
or
sarb
xchg
mov
add
jns
shlb
hlt
lret
push
rorl
sarb
sub
cli
mov
add
int
dec
fs
pop
aaa
negb
adc
stc
call
or
mov
lret
xor
jp
jno
jmp
pop
mov
and
cli
loope
sbb
movsb
mov
add
push
or
dec
imul
inc
das
add
cmp
push
push
shrl
subb
mov
mov
or
sbb
shll
adc
xor
xchg
stc
sub
cli
leave
scas
mov
dec
enter
sub
cld
jnp
iret
push
or
or
sub
push
popf
mov
arpl
daa
movsl
loopne
fisttps
sarb
sarl
jl
jl
pusha
xchg
xor
scas
dec
fwait
test
lods
pop
add
mov
stos
lcall
ds
aad
push
and
or
jbe
shlb
push
fldcw
mov
pop
pusha
inc
push
ja
cmp
and
cltd
repz
pop
shl
push
push
fsub
jbe
mov
out
outsb
inc
pop
jg
out
mov
jmp
out
mov
loopne
mov
sub
xor
mov
push
add
aas
lahf
in
and
dec
pop
inc
popf
and
ret
xor
cmpsb
fists
subb
jbe
adc
insb
xchg
pusha
jg
ljmp
and
cwtl
xchg
decl
mov
cmpsb
cltd
in
dec
in
pop
xchg
push
dec
lods
jmp
fistps
add
adc
mov
mov
scas
xchg
sldt
add
push
scas
xlat
pushf
stc
aaa
pushf
test
aas
pop
int
inc
fcom
nop
shrl
adc
in
mov
fsub
and
aaa
stos
jl
xlat
push
rcl
lods
pop
inc
ret
sub
cmpsl
fldt
pop
enter
mov
add
xor
cmc
jecxz
es
lcall
in
inc
pop
imul
cmp
sbb
sub
jecxz
push
imul
dec
pop
pop
xchg
dec
aaa
lock
popf
testl
mov
pop
out
inc
mov
sbb
fcmovne
xchg
inc
mov
cli
push
pop
std
mov
adcl
orb
push
xchg
or
fimull
leave
iret
inc
xchg
out
insl
clc
push
rorb
mov
sub
cld
bound
pop
push
dec
sbb
dec
mov
xor
pop
aaa
dec
jge
jb
cmp
pop
int3
xor
out
enter
test
ds
fstpl
push
adc
ret
mov
pop
mov
and
jp
hlt
mov
pop
movsl
fs
out
leave
dec
lea
int3
cmp
rclb
jg
call
jge
cmp
pop
mov
xor
dec
or
push
jecxz
imul
pusha
out
into
mov
mov
das
push
scas
dec
pop
or
aam
push
std
leave
pop
pushf
popa
mov
gs
add
mov
test
mov
mov
clc
dec
lret
mov
lds
fsubrs
lods
inc
ret
aaa
add
pop
pop
mov
pop
pop
icebp
xchg
add
and
movsl
mov
rcr
int3
cmp
jne
jb
fdivrp
add
jl
push
hlt
mov
xor
push
jl
cmpsb
jle,pn
sub
xor
ret
inc
ja
mov
adc
xor
cwtl
repz
and
push
testb
setge
jge
addl
sub
stos
test
jl
dec
mov
inc
je
push
scas
call
lcall
xor
jbe
stos
popf
out
cmp
xor
popa
sub
loopne
push
loop
mov
ljmp
lahf
sub
aam
adc
jne
sbb
add
mov
dec
mov
into
and
fdivrp
push
push
mov
adcl
jne,pt
dec
cltd
xchg
lods
enter
push
pop
mov
cmp
movsl
out
sub
or
pinsrw
mov
cmp
icebp
lods
pop
push
pushf
mov
push
inc
mov
add
lcall
inc
pop
pusha
ret
nop
adc
das
cltd
push
mov
mov
sbb
mov
mov
push
scas
cs
or
int
xor
jb
stc
notl
gs
jp
or
xor
push
and
fstpt
fisttps
jmp
sahf
jne
dec
lcall
mov
add
roll
sub
push
lahf
bound
fwait
cltd
sub
jb
jg
adc
dec
mov
rcl
neg
outsl
jns
pop
mov
mov
addr16
mov
jecxz
cld
push
mov
lock
mov
je
popa
or
push
sub
xor
mov
cltd
cld
lea
clc
lahf
icebp
mov
xor
add
push
sub
mov
dec
adc
pop
call
mov
daa
std
jmp
out
pop
sub
add
test
push
push
adc
lahf
loop
dec
push
dec
push
aaa
sbb
push
out
test
leave
ds
cmp
add
inc
js
push
fistps
xor
loope
push
mov
xchg
mov
add
add
or
cmp
pop
mov
dec
lock
subb
sub
push
aaa
aas
popa
xor
arpl
stc
add
mov
js
inc
sbb
pusha
mov
addb
mov
jne
cmp
test
sbbl
int3
test
xorl
nop
xor
cmpsb
leave
lds
mov
and
push
stos
jge
mov
aad
inc
push
mov
push
es
je
xor
iret
enter
outsb
xor
shrb
lea
lea
lret
gs
into
jmp
jnp
dec
cmp
jae
sbb
repz
xchg
repnz
or
mov
clc
int3
and
cmp
inc
cld
mov
pop
fnstcw
dec
repnz
pop
add
movsb
push
test
jecxz
inc
mov
clc
mov
adc
inc
ss
cmc
cli
pop
sub
pop
mov
lods
push
insl
inc
lret
rcrb
andl
push
mov
out
in
fidivl
pop
sub
fcoms
inc
sub
push
mov
dec
ljmp
fistpll
mov
xor
push
loopne
in
push
cld
mov
loopne
ret
push
data16
mov
inc
mov
jg,pt
mov
std
aam
xor
mov
leave
fnop
sub
add
loopne
sbb
subb
rcr
cmp
in
pop
push
fcmovnu
insb
outsl
sbb
mov
or
xchg
std
xchg
push
add
lcall
adc
out
je
push
sbb
mov
mov
mov
in
and
push
nop
divb
adcl
mov
cmp
arpl
sub
int
dec
pop
imul
int
pop
mov
out
sub
sti
lret
iret
gs
clc
mov
icebp
ja
inc
loop
into
xor
sahf
cmp
sbb
insl
sub
inc
sbb
xchg
mov
lock
iret
aaa
add
mov
shl
pop
cli
add
push
and
dec
icebp
sbb
pop
sub
mov
imul
mov
sub
ficoml
jo
xchg
push
push
notl
pop
rclb
insl
popf
nop
in
jecxz
movsl
mov
je
mov
dec
add
lahf
cmpb
mov
daa
insb
imul
sbb
or
scas
xor
mov
mov
xlat
pop
sub
nop
test
movsl
lock
fistpl
test
gs
sub
imul
adc
inc
dec
xchg
daa
aad
pop
sbb
and
notl
gs
orb
fidivrs
cmp
dec
cmc
movsl
inc
mov
xchg
inc
adc
popf
adc
dec
cmp
scas
mov
int3
pop
out
std
pop
xor
iret
or
jno
mull
sarb
push
xor
inc
jns
jmp
jnp
addl
xchg
ja
sbb
xor
push
mov
testl
test
pop
les
jo
mull
mov
leave
out
dec
sbb
jle
stos
and
cli
add
cmp
test
pop
fistps
sti
enter
xor
out
fnsave
sti
inc
mov
dec
dec
jns
insl
xor
cmp
adc
xor
push
push
lret
xor
jns
push
outsb
repnz
mov
mov
fnstsw
insb
scas
inc
jbe
and
pop
dec
test
addb
popf
mov
push
pop
enter
or
pop
push
fnstcw
cmp
pop
add
in
sbb
inc
test
ret
add
loop
pop
cmpsb
sbb
xor
stos
adc
xchg
pop
adc
clc
xchg
std
inc
fsubl
mov
repz
jmp
adc
test
bound
aam
add
lods
push
dec
ja
rcl
dec
movsl
popf
push
xor
xchg
in
push
ret
sarb
das
pop
sbb
repz
out
in
ja
push
and
jae
dec
xor
xchg
js
or
jmp
cmp
push
and
pop
dec
scas
ja
outsb
rorb
addb
test
imul
push
fisubrl
mov
jp
adc
add
test
push
pop
lea
jae
or
mov
push
mov
pop
cmovle
mov
hlt
add
scas
jb
rolb
jecxz
insl
sbb
ror
pop
push
out
sub
cmp
mov
scas
pop
add
loopne
mov
mov
cmp
je
jne
or
xchg
xor
jp
movsb
in
cltd
xor
push
shll
and
pop
ret
jge
dec
pop
outsb
test
push
outsl
stos
int
in
sar
mov
sub
enter
mov
push
int
pop
inc
or
das
loope
shrb
xchg
push
inc
sub
into
mov
xlat
sub
fwait
xor
lret
xchg
fidivrl
orb
sahf
dec
les
in
jle
test
sub
adcl
cmp
adc
cmp
rcl
sbb
into
sbb
scas
lds
sbbb
sbb
mov
pop
imul
xchg
push
push
xchg
mov
jns
inc
sahf
mov
lods
pop
inc
roll
aas
loope
fnstcw
push
sub
lret
ja
adc
push
and
lahf
push
lods
add
call
lds
stos
lods
adc
sub
sub
lret
leave
inc
mov
fwait
sarb
leave
fnstcw
jne
jle
sbb
hlt
testl
xchg
dec
xor
add
scas
push
adc
cli
movnti
cli
pop
addb
ss
push
outsb
and
or
rcl
popf
and
lds
movsb
sbb
lea
repz
out
aam
pop
jmp
cmpl
ss
jbe
pop
pop
sbb
ljmp
push
ja
jecxz
jg
cli
pop
xchg
pop
inc
xchg
in
mov
pop
fistpl
jle
cli
xlat
ljmp
and
fmul
jle
iret
lahf
rcl
push
sbb
sahf
mov
jp
inc
push
arpl
les
loope
lcall
or
stos
cmpsb
into
jne
mov
pop
mov
xchg
xlat
clc
ret
inc
mov
shll
dec
mov
or
sub
or
mov
scas
loope
dec
fnstsw
cmc
aaa
sbb
inc
nop
sub
adc
into
xchg
mov
push
sbb
sbb
xlat
pop
mov
cmc
jne
lods
adc
inc
add
cmp
or
pcmpgtw
mov
lcall
and
cmp
inc
data16
dec
mov
ud1
inc
sub
hlt
ss
mov
roll
lret
adc
inc
call
mov
mov
pop
out
jle
clc
mov
cmp
sahf
adcb
sub
ret
jl
cmp
pop
clc
ss
sbb
cmc
loope
xor
pop
sbbl
fistps
xor
mov
add
fstpt
out
mov
xchg
cmp
out
push
pop
sub
outsb
adc
arpl
aaa
mov
filds
mov
jmp
std
addl
or
arpl
xchg
pop
outsl
in
inc
jmp
inc
mov
fiaddl
xchg
mov
adc
mov
jbe
inc
xchg
roll
inc
pop
gs
adc
pop
jge
or
sub
xor
mov
in
add
mov
dec
roll
into
cli
pop
lcall
mov
adc
add
push
jl
inc
xchg
aam
inc
cmp
xchg
das
or
mov
cwtl
dec
stos
add
mov
lcall
icebp
lret
sub
mov
inc
cmp
stos
in
add
cmp
or
xor
out
fsubrs
sbb
dec
mov
loop
cwtl
jp
push
dec
es
pop
jae
notl
cmpsb
ret
add
mov
mov
jecxz
fldt
and
mov
or
filds
mov
shrb
sbb
dec
push
fisttps
pushf
aam
pop
ficomps
xchg
insb
lcall
pop
xchg
and
popa
mov
inc
xchg
add
and
out
test
loope
or
xchg
sub
ja
xchg
popa
inc
pop
mov
adc
mov
sbb
xor
push
out
cs
repnz
xchg
sub
pop
and
add
jmp
ja
test
scas
bound
jb
mov
mov
jns
faddl
pushf
adc
cmp
cmpsl
movsl
xchg
jo
pop
adc
stos
out
loop
add
cwtl
xor
and
rcl
cmp
sub
movb
xchg
iret
push
stos
into
out
inc
cltd
cld
scas
imul
push
cmp
leave
cli
fnstcw
sahf
sub
sub
xchg
int3
imul
jg
jne
popa
ja
jg
in
push
shl
fimull
rcl
test
xorl
pushf
rol
leave
arpl
rcll
aaa
xchg
cmp
sub
bound
xchg
pop
sbb
in
push
out
mov
dec
dec
mov
idiv
xor
mov
mov
in
rolb
sub
jl
mov
insl
jle
aad
xchg
inc
testb
dec
jmp
add
imul
int3
dec
cmp
out
adc
sti
mov
andb
clc
mov
notl
jmp
add
xor
fadd
rolb
in
stos
push
push
jl
push
stc
cmpsl
cmp
xchg
push
add
and
fs
adc
inc
stos
or
ds
mov
xor
cs
cmp
sub
xor
add
add
add
xchg
and
add
adc
sub
bound
xor
mov
sbb
test
mov
and
icebp
pop
xlat
pop
pop
push
sahf
mov
sub
jbe
out
mov
out
das
fstl
push
push
push
push
jle
rclb
add
and
enter
out
rcrl
mov
das
es
cmp
jae
movsb
cmp
stos
add
movb
mov
sub
push
add
lcall
pusha
inc
or
cltd
sub
aas
push
push
test
add
inc
xor
movups
jne
xchg
int
xorb
sbb
outsl
popa
icebp
mov
lret
sub
xchg
and
cmpsb
adc
cmp
push
rorb
bound
lret
push
sub
je
inc
or
das
fsubrs
mov
adc
xchg
ljmp
das
sti
sub
in
sti
ja
mov
mov
sbb
jecxz
inc
hlt
pop
dec
popf
cmp
dec
sbb
xchg
adc
cli
mov
jo
push
dec
inc
enter
ss
jecxz
aam
lea
inc
pop
xor
rcrb
mov
inc
pop
mov
inc
push
xor
fmuls
mov
cwtl
push
stos
push
mov
nop
and
lea
repnz
loop
fnstsw
dec
in
xchg
sbb
jl
je
loope
cmpsl
jo
add
dec
mov
inc
lcall
loop
pop
mov
outsb
out
jmp
push
icebp
cli
sbb
and
in
sub
push
xchg
mov
je
sub
dec
jae
enter
out
insb
leave
mov
pusha
pop
js
pop
mov
pop
mov
jbe
pop
sbbl
xlat
sub
sbbl
dec
xchg
decl
fistl
cmpb
and
std
lret
mov
out
pop
cmp
cmpsl
push
xchg
lods
pop
ja
leave
push
out
scas
in
clc
fnsave
mov
dec
dec
mov
mov
shlb
mov
inc
out
dec
nop
sbb
inc
add
fldenv
sti
scas
jbe
mov
popf
cmp
ficomps
sbb
loope
mov
cmpl
popa
jo
or
adc
mov
ds
call
imul
cmc
push
loop
test
mov
jb
test
xor
test
iret
or
pop
lret
iret
adc
sbb
cli
pop
pop
stc
mov
add
test
push
scas
push
or
mov
fucomip
push
loop
push
decl
test
push
inc
or
add
cltd
repz
mov
sbb
and
shll
fistpll
mov
in
es
sub
ja
dec
mov
clc
les
xlat
push
sub
jae
cmpsl
das
xchg
test
xchg
mov
xor
fcmovnb
sbb
cmp
mov
xchg
mov
aas
push
ss
in
ret
sbb
jo
sub
dec
in
adc
inc
xlat
cld
cmpsl
enter
inc
push
dec
adc
fdivrs
mov
mov
inc
mov
lcall
fnsave
jbe
jb
sbb
fiadds
lcall
pop
fisubrl
cs
fs
iret
inc
pop
popf
cmp
mov
in
mov
cmc
jecxz
lahf
lea
lret
test
xor
nop
mov
iret
fucomip
ljmp
mov
aad
into
push
nop
je
fbstp
and
dec
aas
sbb
and
shl
xchg
ret
jae
inc
dec
or
out
jb
call
sub
jno
mov
movb
sahf
add
jae
inc
jae
pop
loope
stc
jge
aad
mov
ret
pop
cmp
jmp
stos
hlt
out
mov
xchg
sarb
inc
xchg
nop
mov
and
lcall
pop
and
aaa
xchg
leave
adc
test
lret
inc
in
pop
stos
out
push
pop
fmuls
popf
mov
sub
xor
jb
mov
dec
fists
test
dec
fimull
xlat
inc
push
hlt
ds
push
pop
loop
out
or
and
xchg
test
xchg
push
scas
xor
mov
add
insl
pop
fisubl
cwtl
and
cld
jmp
fildll
out
scas
xchg
mov
mov
or
fimuls
fucomi
mov
xor
insl
or
sub
shrl
mov
lret
stc
dec
add
test
imul
out
jecxz
xchg
dec
and
hlt
mov
pop
pop
cmpsl
xor
cltd
test
loopne
sub
dec
int
jae
in
std
xchg
push
nop
sarl
fdiv
push
das
add
into
xchg
and
sub
push
outsl
mov
dec
sub
jno
sub
mov
dec
rorb
ret
arpl
dec
pop
lret
cmp
aaa
mov
loopne
aam
fistpl
inc
outsb
cli
cwtl
cmp
test
push
fwait
popa
jae
ds
sbb
mov
mov
inc
aam
int3
stc
sbb
roll
cmpsl
mov
mov
rcrl
push
ret
sub
test
jb
or
sbb
pop
mov
int3
inc
arpl
mov
ret
xor
adc
out
cmp
inc
add
mov
xchg
mov
call
lods
dec
sbb
jo
pop
pop
jbe
or
xchg
or
mov
scas
add
and
jp
shlb
sub
mov
out
fnstenv
stos
cs
sahf
adc
jae
and
sub
push
popf
and
out
mov
into
icebp
in
sbb
ljmp
cmp
push
jb
jnp
pop
in
add
fs
fiadds
imul
and
cmpsl
mov
pop
stos
insb
cvttps2pi
mov
out
out
shlb
sbb
pushf
out
or
and
jnp
jg
mov
shll
bound
aas
sbb
push
pop
pop
cmc
scas
iret
scas
push
addr16
and
arpl
mov
and
repnz
or
ss
ss
dec
push
test
rorb
mov
int3
in
dec
mov
cltd
mov
cmp
aad
out
outsb
rorb
push
jbe
cmc
lock
jb
mov
push
incl
cld
pop
sbb
xchg
pop
imul
std
sbb
mov
mov
and
jb
cmp
cld
xchg
cmp
hlt
inc
pop
cmp
dec
ret
ffree
and
add
fldt
mov
xchg
add
rcrl
mov
inc
addr16
repnz
mov
adcl
mov
loope
inc
dec
mov
lret
sub
pop
jb
loop
mov
or
xchg
imul
cltd
sahf
jo
pop
push
es
pop
in
bound
sbb
jae
lahf
clc
sub
rol
jns
stos
je
dec
mov
lods
aaa
sbb
pusha
pop
and
ret
nop
in
xchg
mov
mov
aaa
or
stos
push
adc
es
pusha
mov
and
mov
inc
sbb
push
xchg
xchg
mov
add
sbb
or
ret
jne
push
scas
fwait
or
repz
and
fs
mov
loope
cmpsb
out
repz
push
jle
mov
push
inc
imul
cli
lods
jb
cmp
add
push
clc
ds
into
cmp
lcall
aam
das
les
in
mov
add
or
pop
add
shlb
push
adc
out
subl
scas
gs
pop
lea
aaa
add
in
sub
imul
inc
push
out
xchg
add
and
repz
test
lea
out
adc
push
add
cld
jle
aas
scas
inc
in
sahf
lret
in
fisubrl
setne
sahf
mov
in
cld
mov
push
bound
dec
out
cmp
mov
sbb
ss
pop
aas
mov
pop
leave
scas
into
mov
jno
push
jne
push
cmp
adc
je
loop
xor
sahf
add
or
int
dec
cltd
call
enter
imul
pop
and
push
loope
push
fwait
jg
dec
hlt
fmull
or
js
mov
clc
lock
push
cltd
sub
ret
adc
mov
dec
int3
jbe
inc
cmpsl
pop
cmp
sti
mov
jmp
ljmp
sarl
inc
xor
cmp
or
sub
shrb
sub
adc
pushf
cltd
add
dec
mov
xchg
add
mov
dec
outsb
add
mov
mov
sub
repnz
inc
sbb
pop
jmp
mov
pop
cmp
mov
iret
int
hlt
and
xchg
decb
mov
and
mov
fstpl
cmpsb
js
pop
xor
xchg
adc
push
inc
insb
orb
pop
lock
pop
mov
mov
bound
lods
fs
xor
pop
sbb
dec
cltd
mov
clc
xor
xlat
int3
mov
jno
ret
lcall
jle
sub
incb
mov
pop
fidivrs
lret
ret
cmp
repnz
enter
incl
xor
cmp
dec
sub
mov
jmp
adc
stos
ljmp
arpl
test
fucomi
test
cmp
enter
or
xchg
sub
int3
pop
out
lret
outsb
xchg
jns
cwtl
rcr
fwait
xor
cli
inc
das
cltd
cld
add
inc
rcrb
lock
inc
mov
or
jne
mov
and
clc
popa
stos
fiadds
mov
je
xor
or
cs
dec
repz
add
jno
cmc
imul
and
mov
xchg
cmp
popf
pop
inc
jbe
je
add
dec
std
push
jle
rcrb
xor
add
lods
popf
loop
out
pop
jb
jecxz
in
mov
jae
lret
fistps
push
lods
icebp
aam
mov
xor
xor
enter
iret
aad
ret
inc
sub
jl
jne
lods
or
lcall
jns
aas
adc
cltd
jo
inc
add
or
sbb
in
mov
iret
popa
lds
imul
inc
adc
lcall
xchg
sbb
mov
adc
pushf
jge
and
pop
aaa
pop
sbb
rolb
cmc
movsl
test
jae
addr16
adc
or
adc
jecxz
out
lock
popf
jne
mov
xchg
stos
sub
cmp
cltd
into
leave
jmp
xor
mov
inc
or
in
pop
jno
jno
enter
gs
daa
imull
cmp
sub
dec
add
push
xchg
push
xor
pushf
ljmp
sbb
mov
mov
ljmp
pop
jmp
push
clc
push
cwtl
imul
sar
jnp
cltd
lret
mov
addl
mov
mov
stos
lret
lods
xchg
pop
ret
mov
out
xlat
pop
add
fisttps
cmp
mov
or
xchg
loop
and
jg
ret
jl
cmpsb
xor
lods
insb
ret
and
in
or
xchg
sub
jge
mov
sbb
in
das
or
pop
inc
or
dec
repnz
jns
mov
dec
cmp
mov
adc
outsl
sahf
mov
push
jnp
in
cli
cmp
aam
fs
xchg
aad
cli
inc
push
stos
test
ret
xchg
dec
cli
mov
push
add
call
testl
lahf
sahf
out
dec
jle
data16
fwait
or
in
sbb
les
xchg
adc
cld
xor
arpl
jne
out
test
push
fwait
sbb
xchg
jb
jbe
sub
inc
jecxz
inc
pop
fdivr
movsb
sub
das
dec
pop
xor
test
pop
xchg
std
xchg
adc
sub
in
lea
popa
adc
jmp
mov
ja
js
mov
mov
xchg
arpl
sub
out
lods
mov
jbe
dec
and
dec
xor
xor
pop
insl
outsb
or
int
rorb
rcll
add
pop
sbb
push
mov
xchg
mov
xchg
inc
jecxz
cltd
out
or
xchg
jecxz
jecxz
push
cmpsl
mov
iret
sub
mov
jge,pt
sub
mov
shlb
xchg
sbb
mov
add
xchg
dec
test
imul
imul
xchg
add
dec
push
cmp
adc
push
push
or
fs
and
sub
adc
cltd
aad
sub
mov
out
daa
leave
pushf
mov
pusha
in
or
fmuls
add
mov
packuswb
cmp
mov
aaa
pop
stos
stos
mov
xchg
mov
addl
dec
sub
jae
mov
adc
cmp
add
adc
je
ret
inc
pop
movsl
outsb
sbb
pop
scas
inc
mov
jb
and
lock
jge
lahf
dec
xor
nop
cmp
inc
ret
lock
js
mov
in
aas
xor
stc
xchg
adc
jbe
xchg
push
mov
xchg
inc
pop
pop
sbb
cmp
xchg
movsl
mov
jne
mov
cmp
shrl
adc
sahf
jmp
push
shr
xchg
mov
gs
pop
stc
in
inc
fimull
or
incb
mov
das
in
ljmp
or
add
and
adc
imull
mov
xor
xchg
insb
stc
nop
sub
push
pop
xor
cld
test
aam
shll
jnp
sbb
and
setno
js
cwtl
jle
aad
cmp
addr16
stos
add
adc
lret
mov
gs
scas
outsb
xorb
adc
in
mov
xchg
mov
jnp
test
iret
in
loop
lock
cmpsl
inc
xor
push
push
add
test
jle
arpl
popa
add
std
adc
add
jns
loope
dec
push
xchg
lcall
mov
add
cltd
jnp
add
cmp
push
sub
int
lahf
jecxz
mov
cmc
in
stos
and
jnp
test
insb
or
mov
ljmp
jne
rorb
jp
out
xor
mov
cli
push
das
les
fcmove
inc
repz
mov
movb
das
fstl
or
push
xchg
cmp
sub
lcall
mov
push
dec
scas
and
inc
sbbl
shrb
imul
sub
js
xor
add
rep
add
push
cmp
mov
addr16
xchg
dec
stos
xor
pop
mov
lret
cld
rcrb
mov
lahf
das
mov
pop
imul
psubsw
and
cs
test
mov
lret
fldl
dec
sub
sub
push
jno
add
inc
jbe
into
roll
nop
popa
sbb
jl
jge
dec
fcmovbe
jo
xlat
shlb
inc
mov
outsb
hlt
stos
xor
stos
pop
lahf
addb
pusha
jne
jo
sar
push
adc
jne
popa
and
arpl
push
adc
popa
imul
jmp
mov
xchg
push
add
push
pop
out
push
js
mov
insb
and
ror
add
test
or
pop
push
dec
mov
aaa
and
insl
dec
inc
cmp
roll
pop
jp
adc
ret
push
das
hlt
mov
int
lret
push
ret
in
pop
xchg
push
popa
mov
in
or
mov
fcomi
push
mov
jbe
cmpsb
sub
mov
ja
pop
cmp
repz
mov
out
jecxz
push
adc
jne
adc
and
movsb
and
test
fildl
repnz
je
aaa
rcrl
fldl
inc
inc
adc
data16
ljmp
lcall
addr16
shl
or
xor
cld
cli
shl
or
jmp
sbb
xchg
inc
adc
jo
out
cwtl
into
sbbb
in
lea
pop
repnz
idivb
aam
out
je
int3
leave
inc
push
push
imul
pop
mov
mov
sti
adc
dec
mov
sbb
loop
jne
cmpsb
jae
fisubrs
ret
or
cmpsb
sub
insl
pop
call
shlb
pop
inc
xchg
mov
and
push
xchg
repz
scas
push
jp
lret
bnd
and
clc
mov
mov
ss
rcr
jb
and
ljmp
jmp
stos
xchg
lcall
in
sub
jb
push
test
shl
scas
push
out
and
ss
xchg
pop
cmpsl
mov
jnp
push
aas
cmp
sub
ds
outsl
mov
mov
nop
xchg
sbb
popf
in
xor
jb
shlb
outsl
dec
jmp
mov
insb
dec
call
or
add
add
scas
xlat
cld
cltd
sbb
add
cmp
xor
and
xchg
jne
ffree
popf
mov
ljmp
popa
cld
cs
scas
jne
and
mov
mov
lds
sub
dec
pop
jle
shll
outsl
loop
sub
cmpsb
and
insl
xchg
jmp
in
cmp
lcall
adc
in
es
add
cld
in
mov
scas
inc
daa
ficomps
mov
enter
mov
in
cmp
add
mov
jmp
ds
mov
lea
jo
iret
inc
loopne
mov
ja
xor
inc
cs
sbb
xor
sbb
into
pop
mov
push
jae
mov
push
jae
jle
push
mov
mov
lods
xor
push
mov
sub
lret
and
and
add
cli
dec
push
gs
into
mov
imul
cli
push
mov
inc
in
ret
in
sub
loop
scas
insl
add
mov
jae
pop
aad
xchg
push
push
jbe
adc
popf
in
les
movsb
aad
aaa
jecxz
loop
sbb
fidivs
out
and
inc
pushf
mulb
and
adc
lahf
add
push
xlat
dec
fsubs
adc
js
iret
aaa
add
js
inc
shrb
dec
enter
ss
jnp
into
or
sub
dec
cmp
lds
arpl
xor
xor
test
mov
jae
push
and
mov
fwait
push
cmp
sarb
adc
fistl
cltd
push
ss
pop
loop
xchg
scas
xchg
push
into
mov
cwtl
sub
pop
or
mov
adc
addr16
jbe
and
sub
inc
mov
lds
lds
dec
dec
jb
scas
outsl
popa
in
inc
loop
mov
movsb
ret
sbbl
jns
fsubrs
mov
mov
sarb
dec
jbe
and
lcall
repnz
xlat
push
mov
lock
mov
inc
enter
fcomip
lods
lds
lcall
aas
add
pop
fbstp
push
xor
aas
or
mov
icebp
leave
dec
ds
cwtl
ja
aaa
sbb
mov
std
sub
stos
xor
inc
mov
push
dec
mov
movsl
mov
icebp
enter
neg
jecxz
push
mov
sub
out
jle
popa
jp
mov
inc
cmpsl
mov
adc
cmpsl
lahf
lahf
iret
jne
ljmp
mov
and
add
jb
mov
cli
xorb
pop
rcrb
mov
sub
test
or
pop
fbld
imul
stos
imul
aas
ljmp
in
jns
push
addr16
push
sti
add
lret
dec
ss
gs
cmpsl
lods
jp
add
ljmp
xor
jns
sub
xchg
je,pt
and
cmp
repz
movsl
scas
inc
and
push
xchg
sarl
and
cmp
gs
or
scas
push
mov
xchg
push
pushf
add
jmp
pop
movsl
cwtl
push
stos
mov
cwtl
lret
cmp
mov
imul
jnp
aas
cmc
and
xlat
test
pop
std
and
idivl
pop
ret
push
cld
and
xor
adc
jge
mov
inc
mov
loop
pop
stos
fs
insl
sbb
mov
fs
mov
fcompl
add
adc
cmp
fstpt
xchg
xchg
mov
xchg
fst
adc
mov
sbb
xor
push
adc
mov
lahf
inc
sub
sub
out
inc
pop
stos
add
sbb
cmpl
jl
movsl
sub
sbb
add
hlt
xchg
test
xchg
ljmp
pushf
mov
or
dec
movsb
into
aas
push
cmp
sub
cmpsb
int3
add
jns
sbb
cmc
mov
jl
push
test
loop
out
mov
std
dec
xchg
in
xor
xor
cmp
xor
jno
sub
bsr
dec
movsb
add
xlat
mov
sbb
push
out
inc
gs
into
sbb
dec
add
inc
jl
in
fwait
mov
and
les
adc
dec
or
add
cmpsl
stos
and
pop
divb
aad
das
push
test
loop
adc
fildl
push
and
sub
loope
bound
adc
int3
xchg
pusha
cmp
mov
lret
inc
and
movsb
cs
add
mov
repz
mov
add
add
push
mov
es
sbb
lahf
in
push
push
repnz
ss
cmpsb
nop
mov
sbb
ds
mov
xchg
sbb
sub
mov
pushf
insl
rcl
or
mov
rep
and
inc
and
pop
out
sbb
retw
adc
xchg
xchg
lock
add
pop
mov
jb
arpl
xchg
mov
or
mov
bswap
pop
add
pusha
cmpsb
xor
aas
packsswb
out
dec
insl
push
push
xchg
mov
push
dec
or
scas
lods
xchg
jmp
cmp
sahf
or
jmp
into
push
repz
adc
mov
fcoml
cmp
mov
mov
rclb
arpl
push
outsl
jnp
and
xchg
test
repz
lods
and
jae
sub
insb
mov
cmp
int
data16
mov
mov
imul
mov
push
es
jge
pop
iret
jb
push
mov
hlt
loopne
push
repnz
arpl
enter
bound
add
inc
xchg
jns
arpl
add
adcb
add
push
shrb
xor
jmp
mov
loope
add
mov
jb
push
sbb
adc
sarl
pushf
mov
insb
mov
aas
pop
sub
xlat
adc
ss
push
pop
dec
fnstenv
add
and
das
mov
mov
sbb
cmpsb
es
aaa
and
test
je
lret
xor
mov
or
rol
xchg
mov
std
je
inc
in
xor
int
push
push
inc
xor
mov
or
push
aad
push
cmpsb
filds
fstl
push
mov
insb
inc
cmp
inc
out
out
mov
inc
push
xlat
dec
addb
add
mov
add
and
add
xchg
dec
add
jbe
inc
mov
insl
mov
add
mov
xor
adc
or
sbb
mov
jne
das
inc
sbb
int
mov
dec
cmp
inc
lcall
out
mov
into
dec
jb
push
addr16
add
pop
popa
inc
imull
dec
jmp
add
add
cmp
inc
inc
mov
mov
test
adc
jl
rorl
fstpl
das
bnd
imul
outsb
inc
leave
test
sbb
or
loopne
cmp
inc
mov
fisubrs
sub
jae
loop
fs
in
int
mulps
mov
pop
enter
dec
aam
adc
xor
or
inc
add
imul
pop
in
ficoml
inc
dec
jge
jp
rclb
loopne
pop
in
lcall
jecxz
adc
jge
icebp
pop
test
fcmovbe
lcall
rclb
pop
test
sahf
fs
lgs
xor
dec
mov
mov
xchg
mov
inc
in
mov
sarb
pop
rcl
test
cwtl
enter
xchg
rorl
outsl
inc
int
scas
lock
mov
inc
pop
or
mov
adc
adc
mov
or
mov
mov
in
pushf
push
pop
push
into
lahf
mov
ficompl
movsl
or
mov
push
xchg
arpl
adc
xor
mov
jl
in
lahf
clc
adcl
test
sbb
imul
andb
add
push
mov
cs
mov
xor
pop
rorb
call
xor
notb
mov
inc
sbb
sub
aas
or
js
cmp
ret
popf
add
mov
ret
xor
push
stos
call
lods
dec
sub
mov
mov
nop
or
mov
inc
cmp
sub
inc
addl
adc
mov
into
cmp
inc
jle
adc
dec
push
dec
lahf
push
movsb
inc
pop
sub
xchg
clc
inc
pop
xor
cmp
sar
divl
sbb
std
arpl
mov
sub
add
inc
add
xchg
inc
sbb
arpl
stc
shll
sbb
mov
xchg
loop
push
popf
repz
fisubrl
lcall
cmp
int
inc
es
jle
pushf
daa
ds
divb
loope
push
pop
cmp
pusha
jbe
outsl
test
jns
cwtl
sbb
test
loop
xchg
or
sub
bound
xchg
popf
jo
adc
sbb
or
inc
cmpsl
cmpsb
fldenv
in
inc
mov
sti
lahf
mov
inc
or
in
aas
xchg
or
inc
adc
inc
mov
xchg
add
daa
push
sbb
rclb
sbb
sahf
xor
imul
add
mov
lret
fnsave
aad
in
les
cmp
xchg
clc
movsl
fucomip
mov
fs
mov
rcr
push
jmp
xchg
mov
xor
fs
dec
push
mov
ja
lahf
cmpl
ss
mov
sbb
xorl
cmp
ds
push
arpl
cli
and
subb
dec
jp
test
xor
enter
lahf
jb
and
bound
push
or
push
cs
and
jns
xor
sub
sbb
cmp
cmovp
addr16
mov
inc
daa
pop
xchg
stos
pop
mov
jmp
xchg
and
xor
mov
int3
and
sbbb
in
sbb
or
and
mov
clc
pop
pop
mov
and
push
jle
loopne
xor
ljmp
add
jbe
push
fs
push
add
cmp
mov
xor
lahf
add
jb
lahf
mov
mov
fcom
fimuls
ret
xor
fs
push
mov
out
fnstsw
sbb
lea
fdivrs
jo
push
cli
scas
add
or
mov
cwtl
shl
mov
loopne
outsb
xchg
mov
insl
mov
dec
pop
fstpt
push
lock
sub
leave
inc
pop
inc
fists
in
jecxz
xor
mov
adc
popa
mov
data16
jp
and
out
xchg
add
add
shr
cld
jmp
dec
jg
std
fsts
jmp
xchg
push
mov
in
enter
mov
mov
and
dec
imul
lret
stos
fnstsw
xchg
pop
mov
xor
mov
mov
fdivr
lods
in
sub
mov
stos
int
xchg
aaa
jecxz
mov
lods
and
vmptrld
and
push
add
pop
push
pop
fiadds
test
movsl
loop
cmp
cwtl
mov
fnsave
outsl
mov
or
sarb
popf
inc
mov
inc
arpl
pusha
lahf
stc
add
pop
ljmp
push
push
inc
stos
movsb
cmovle
or
jp
xor
xor
inc
notb
xor
add
dec
shll
pop
jle
mov
shl
or
scas
push
cli
xchg
push
in
es
push
mov
into
daa
sub
out
leave
gs
test
repz
je
mov
sti
jge
nop
scas
test
pop
mov
dec
push
cmp
add
xorl
mov
popf
xchg
xor
int
xchg
pop
fnstenv
fidivl
mov
xor
aas
jg
adc
sbb
in
cmp
and
xchg
test
jae
mov
fs
xchg
mov
and
mov
push
mov
mov
pop
cmpsl
push
bound
testb
leave
outsb
add
add
push
in
cmp
and
xchg
je
test
aam
psrlw
mov
sbb
sbb
out
jo
adc
fimull
fsubrl
xchg
inc
xorb
decl
mov
and
fwait
pusha
mov
push
shrb
cmpsl
je
push
daa
je
sub
xor
jmp
cmpsb
ret
jo
aaa
out
iret
call
idivb
mov
sub
popa
adc
mov
add
aaa
je
jp
popf
and
loop
cmpl
sbb
test
xor
shlb
fs
xchg
testb
aas
and
jp
mov
lret
jge
cli
cmp
nop
mov
shl
sti
loope
stc
es
or
cwtl
loope
nop
je
rorl
dec
push
lcall
mov
stos
outsb
dec
shll
jb
stos
mov
iret
lret
cmpsl
jbe
cld
dec
aas
data16
adc
and
or
stos
test
push
fisubl
sub
jp
aaa
test
lret
jnp
jmp
pop
rorb
jl
mov
add
inc
ds
jmp
add
mov
stos
adc
sti
jge
stos
into
das
adc
cmp
js
inc
je
or
pushf
popa
es
cmp
clc
or
pop
xchg
outsb
call
clc
lods
lcall
and
cmp
pop
movsb
dec
in
lods
ljmp
stos
cwtl
lods
adc
mov
test
push
mov
test
mov
aad
loop
ja
sub
dec
adc
insl
movsl
dec
and
sahf
xchg
pushf
addl
js
f2xm1
call
insb
push
or
pusha
or
fidivl
clc
sub
jp
or
hlt
int
pop
movsb
aam
jae
mov
mov
pop
xor
clc
adc
gs
xchg
stc
lea
pop
push
sbb
scas
je
mov
mov
pop
sub
push
jne
out
cmpsb
and
jge
push
or
cmp
rcrb
or
push
mov
sub
cwtl
ss
pop
icebp
cmp
jle
xor
repz
je
inc
mov
leave
inc
pushf
sarb
notl
xor
fucomip
xchg
push
lods
ret
rolb
push
divl
pop
mov
out
add
and
jp
and
pop
arpl
std
push
rcll
xchg
mov
pop
cld
lahf
sbb
push
mov
insb
dec
xor
in
mov
inc
repz
xor
mov
lret
int
adc
add
mov
sub
repz
js
xor
xchg
cmp
js
popf
movsb
sbb
xor
scas
js
fisubs
sahf
rolb
pop
mov
sbb
mov
loopne
insl
iret
incl
fiaddl
movsl
popf
cltd
incl
xor
aam
xorb
xor
aaa
popf
mov
add
push
xchg
lcall
jl
test
mov
mov
mov
pusha
rcrl
xor
mov
xor
dec
xor
and
mov
cmpsl
sub
mov
test
xor
cmpsb
test
in
std
sti
insb
inc
int
repnz
xchg
out
stos
iret
sub
pop
mov
loope
xchg
sti
orb
testb
mov
repz
insl
or
stc
cmp
dec
xchg
push
inc
mov
insl
iret
leave
shlb
bound
pop
push
aas
mov
xchg
jnp
je
xlat
ffree
lret
xchg
xor
stos
out
lcall
push
into
test
int3
into
xchg
mov
mov
mov
nop
push
repz
shl
mov
push
xchg
mov
stc
out
cmp
scas
xlat
addr16
ret
pop
addr16
loope
add
xchg
ficoml
into
insl
adc
decb
outsb
aam
sub
adc
push
mov
loopne
jae
int3
out
aas
es
jno
and
lds
sahf
lock
jle
cld
addr16
insl
sbb
sbb
ret
lret
sbb
or
loope
jno
dec
mov
dec
xor
rcll
loop
pop
xor
sahf
jp
jl
sbb
xchg
int3
jmp
jnp
aaa
sti
and
pop
jecxz
jg
js
dec
clc
cmp
pop
inc
dec
in
mov
cmpsb
or
mov
xlat
pop
mov
jmp
stc
cs
imul
out
cwtl
dec
or
mov
xchg
fldt
test
mov
fdivrs
fs
jb
shll
jns
lds
mov
sbb
les
jns
hlt
xor
mov
rcrl
scas
jb
std
bound
mov
jno,pt
fwait
xorl
cmp
mov
pop
jg
or
sar
fsubs
pop
pop
xchg
adc
and
push
loopne
add
sbb
and
rcr
cmc
frstor
jo
inc
sub
push
add
ja
mov
adcl
push
js
ja
cld
dec
jle
xchg
jmp
fmuls
adc
push
mov
dec
ljmp
xor
pop
add
push
or
mov
frndint
insl
ss
scas
adc
stc
mov
sub
les
loope
push
test
xlat
or
testl
mov
mov
dec
cs
add
andb
or
gs
loop
sahf
jne
xchg
jnp
xorb
jmpw
pop
add
sub
imul
jae
jb
lahf
in
and
adc
pushf
sbb
stos
add
add
out
dec
adcb
scas
sarl
jle
dec
inc
addr16
push
or
cmp
or
mov
dec
add
movsl
xchg
js
rcr
jge
repz
mov
mov
cltd
cmp
mov
rcr
add
rcl
fnstsw
jne
xchg
mov
popa
out
push
jbe
sbb
and
les
aam
pop
sti
or
push
idivb
sub
negb
mov
dec
aam
in
inc
cmpsb
or
daa
dec
mov
icebp
insb
jp
movsb
fmull
out
shr
pop
out
ljmp
decl
pop
shll
js
pop
sbb
jmp
sbb
in
sbb
push
sti
addr16
and
cmp
sub
cwtl
mov
push
sub
iret
aaa
aad
sbb
stos
pop
xor
shrl
mov
stc
addr16
in
pop
or
js
into
push
mov
mov
data16
sbb
sub
sti
xchg
mov
mov
lret
stos
mov
sbb
cmp
mov
mov
push
push
mov
bound
mov
or
jb
jle
std
fildll
adc
mov
mov
push
jne
pop
mov
arpl
lret
dec
jb
lcall
push
mov
or
out
fldt
mov
and
lock
sub
les
rorb
jg
jno
shlb
and
inc
mov
jg
jg
rcll
ja
lahf
lss
push
push
pushf
xchg
test
cmpsl
lahf
mov
fs
loop
les
jecxz
xchg
pop
sbb
insb
inc
pusha
push
jnp
ds
mov
add
outsb
push
push
dec
push
mov
out
cmp
cwtl
push
cmp
lods
lea
jbe
mov
inc
rcll
fdivrs
fmul
pop
push
or
xchg
ficompl
sbbb
cmp
pop
adc
or
dec
cmp
add
in
lea
sbb
mov
and
mov
test
xor
inc
stos
les
adc
jge
sub
lcall
jle
jle
mov
in
popa
xchg
mov
adc
jns
mov
pop
daa
add
xchg
mov
mov
push
add
cmp
loope
aas
fstpl
cwtl
push
sbb
sahf
pop
and
lock
loop
cmp
mov
loope
out
pop
xor
lods
add
je
add
cld
insl
pushf
out
sbb
in
and
add
clc
xor
jns
js
mov
and
pop
enter
and
les
data16
xor
dec
adc
loop
mov
xchg
roll
add
jne
xor
lods
mov
sbb
movsb
stos
mov
arpl
repnz
or
lcall
test
mov
add
push
pushf
insl
orb
repnz
rclb
dec
sub
cmc
add
scas
cmc
icebp
xor
xchg
out
mov
jmp
adcb
ret
mov
xchg
cs
mov
loope
ftst
loope
jl
xchg
mov
fwait
xor
xchg
ljmp
or
mov
mov
int
ret
mov
push
call
mov
jmp
in
dec
sub
call
mov
clc
and
les
mov
jl
aad
pop
popf
mov
dec
jg
das
pop
cmp
inc
nop
add
das
mov
pop
callw
test
xchg
mov
xor
pop
jne
rol
fmuls
jb
divb
and
int
push
cmp
clc
xchg
cmp
dec
test
into
in
test
shll
nop
xor
sbb
nop
imul
mov
jmp
mov
mov
cmpsb
jle
jae
int3
pop
pop
and
fdivr
fdecstp
push
cld
mov
dec
jo
push
cli
push
pusha
lds
in
bound
call
pusha
jle
das
int
aad
data16
leave
fiaddl
mov
sbb
outsb
repnz
roll
mov
dec
mov
stos
dec
jnp
roll
sbb
hlt
xchg
ret
cmc
add
jnp
cs
repz
in
cmpsl
hlt
fwait
push
add
imul
sbb
push
sbb
jnp
dec
pop
mov
mov
decl
xor
jbe
adc
cs
imul
mov
sbb
adc
adc
js
sub
jno
push
push
xor
jmp
lahf
push
stos
stos
pop
ds
pushf
shll
mov
mov
inc
jp
daa
xchg
fdivs
jb
lahf
mov
movsl
lods
out
mov
mov
mov
out
jo
call
adc
aas
and
inc
imul
sarl
sahf
rcrb
lcall
push
cmp
dec
adc
jne
inc
jnp
jmp
stos
mov
movl
inc
lcall
adc
and
inc
lea
nop
pusha
cmp
adc
cmp
pop
mulps
xlat
xchg
cli
cs
lret
xchg
xchg
movsw
cld
add
lret
xchg
popa
pop
iret
das
imul
addl
cltd
daa
dec
xor
push
push
pushf
or
mov
mov
mov
repz
inc
push
out
inc
in
push
fnstenv
pop
ljmp
mov
adc
movsb
cmpb
adc
mov
scas
sbb
lds
cli
or
add
xor
movsb
inc
imul
push
ret
fildl
div
inc
nop
test
push
sbb
mov
mov
cwtl
movl
insb
lahf
int
mov
xor
sbbb
xchg
adc
mov
ffreep
inc
sub
add
popf
jns
inc
jmp
mov
in
mov
imul
or
pushf
sbb
or
jmp
ds
pop
adc
adc
sub
push
call
xchg
sub
add
popf
fsts
sub
cmpsl
flds
pop
add
xchg
in
mov
sub
jle
outsb
mov
leave
dec
mov
xor
sbb
mov
punpcklwd
jle
pop
cmp
out
rolb
jnp
aas
arpl
and
xlat
sub
adc
fmull
data16
adc
xor
movsb
mov
jle
gs
mov
xchg
insl
mov
lods
jg
pop
std
adc
pop
shrl
cmpsb
cmpsl
sbb
cwtl
and
cmp
xor
cmpsb
and
mov
leave
or
push
and
les
pop
std
mov
lahf
aam
mov
les
mov
addl
mov
push
pop
mov
xchg
stc
pop
xchg
cmp
out
jmp
xchg
mov
jno
cwtl
and
aaa
pop
lods
adc
cmp
inc
out
cmp
mov
mulb
dec
ja
lods
and
sarl
cli
mov
enter
mov
pop
and
push
xor
sti
daa
insl
js
add
fwait
out
popl
dec
add
cmp
hlt
add
mov
xor
xchg
mov
loop
sbb
pushf
sub
orb
cmp
out
cltd
add
jnp
inc
stos
and
and
cmp
inc
les
dec
in
jae
inc
adcb
mov
jecxz
je
lea
add
inc
rorb
mov
ds
cmc
bound
xchg
hlt
int
mov
sbb
sahf
jle
fxch
rorl
mov
pop
dec
pop
or
adc
pop
mov
pop
lds
lret
pop
not
push
sub
rcll
mov
mov
std
adc
mov
pop
fbld
fwait
mov
add
das
mov
sbb
jmp
pushf
mov
xor
popf
dec
cmp
stos
idivb
jbe
or
movsl
divl
adc
bound
xchg
mov
stos
movsl
hlt
xchg
aaa
dec
es
ret
cmp
and
outsl
div
push
repnz
jne
sarl
dec
sbbb
mov
addr16
daa
ljmp
pop
cmp
pop
ret
outsl
outsl
aam
test
addr16
push
push
cli
jns
xchg
shlb
ljmp
add
out
nopl
inc
loop
adc
inc
inc
inc
adc
cmp
mov
ds
addr16
cld
std
xchg
jb
dec
xchg
mov
cli
arpl
mov
stos
lcall
xchg
scas
insl
addr16
test
popf
push
cmpb
add
nop
filds
mov
inc
sub
lcall
xchg
adc
clc
std
xchg
push
sbb
jbe
sahf
call
test
xor
aam
shlb
adc
jb
imul
xor
fisubrs
repz
rorb
cli
sub
es
enter
fs
push
les
iret
jmp
lods
test
call
fistl
int
enter
cmpxchg
outsl
jg
rorl
in
adc
mov
jecxz
jmp
and
mov
inc
mov
xchg
stc
cmp
and
add
xor
cmpl
adc
je
xchg
xchg
in
cli
xor
lret
rcll
pop
jno
mov
aad
cmp
jecxz
lahf
add
or
mov
adc
and
sbb
xchg
cmpsb
dec
cmp
pop
xor
xlat
mov
mov
sbb
pop
cwtl
dec
aad
add
cmp
ret
jnp
adc
xchg
mov
aad
add
stc
fs
or
jbe
pop
arpl
and
pop
xchg
cmc
mov
rcrb
xchg
sbb
and
jmp
es
dec
in
lock
in
iret
dec
gs
movsl
lock
in
pusha
cmp
enter
dec
inc
bound
mov
push
fmuls
pushf
scas
rolb
add
add
sbb
sub
sbb
add
je
jl
out
cmp
add
pop
repnz
dec
mov
add
push
mov
cli
mov
adc
mov
fsubrp
mov
test
inc
sarl
inc
mov
xchg
fcom
fmull
subl
xchg
into
rcll
adc
enter
insb
inc
aaa
bound
and
rolb
sub
adc
loope
stos
call
push
lcall
push
in
or
xchg
push
rcll
pop
inc
repnz
lods
jnp
int3
push
sub
xor
pop
test
test
cltd
rcrb
pop
push
pop
popa
lret
or
mov
andb
jne
cmp
push
xchg
stc
jns
xor
out
nop
ds
cwtl
xor
cli
adcl
push
bound
rorl
mov
mov
int3
dec
pop
mov
xchg
dec
jmp
inc
scas
sahf
les
and
or
fbld
call
push
js
pop
inc
sub
mov
jns
dec
fisttps
cmp
fisubs
out
test
lea
jbe
or
add
push
dec
fwait
leave
mov
cltd
ret
cmp
jl
icebp
fldlg2
fdivr
popa
dec
and
xchg
or
sbb
add
sar
subl
jb
or
xor
push
mov
inc
lcall
inc
insl
std
and
scas
push
mov
xor
or
mov
lock
test
and
and
add
fldenv
rcrb
dec
inc
jmp
lahf
imul
lea
mov
fldt
xchg
rcrb
mov
sti
adc
inc
loopne
push
mov
add
cli
in
repnz
gs
sar
cwtl
pushl
cs
adc
inc
aas
add
hlt
push
enter
sbb
scas
pop
imul
sub
je
pushf
cmc
jo
in
mov
and
and
stos
dec
push
sub
arpl
mov
sub
test
imul
pushf
stos
jp
cmpsl
aaa
loope
add
inc
out
sarb
in
jae
push
std
jo
add
jle
out
sbbl
pusha
aaa
dec
mov
jecxz
xchg
hlt
addr16
dec
xchg
js
add
mov
mov
in
dec
subb
cmc
pop
mov
push
pop
sbb
jbe
ljmp
pusha
rcrb
sub
sbb
mov
mov
inc
std
jae
sub
mov
decl
and
loopne
mov
ljmp
and
push
ljmp
cmp
stos
dec
lods
mov
push
lods
sub
sbb
test
pop
loop
xchg
mov
fs
in
jb
xchg
cli
or
jnp
sti
fisubs
push
jb
in
lcall
xor
lret
andl
lods
push
mov
jb
mov
xchg
inc
lret
arpl
pusha
and
adc
mov
in
aas
cld
fs
adc
icebp
daa
ljmp
addr16
sbb
addl
inc
mov
cs
xchg
pop
sbbl
nop
bound
test
sbb
mov
or
or
xchg
adc
shll
inc
notl
or
data16
jo
dec
xchg
and
and
xchg
jmp
stos
test
pop
inc
enter
add
cld
mul
jns
push
xor
cmp
loopne
xor
lds
jns
lret
mov
dec
mov
in
adc
xor
dec
leave
nop
lcall
or
arpl
sarb
in
lods
aaa
add
add
jnp
inc
mov
loopne
addb
adc
xchg
cmpsl
jg
in
enter
mov
jbe
in
sti
bswap
ljmp
sbb
sbb
fs
scas
xor
inc
push
test
xchg
ss
outsl
mov
movsl
or
into
pushf
jl
inc
clc
xor
jmp
mov
jae
cwtl
ljmp
add
std
dec
cmp
loop
adc
sbb
cmpsb
pop
jecxz
mov
push
dec
fwait
sbb
popa
or
xchg
or
ja
mov
add
loopne
mov
lea
push
jnp
cs
add
aaa
hlt
xor
push
dec
je
lret
outsl
mov
into
xor
cwtl
or
jg
inc
ret
jl
jecxz
imul
insb
popa
mov
jmp
inc
ja
lock
inc
popa
cmp
fwait
xchg
addr16
inc
jg
push
sub
lret
fsubl
pop
sub
ret
cmp
or
xchg
inc
aaa
add
mov
lea
pusha
inc
xchg
sub
mov
push
jns
movsb
sbbl
adc
jns
adc
push
sub
mov
push
and
out
lcall
add
iret
pop
hlt
insl
ret
sbb
adc
popa
out
fdecstp
cmpsb
addr16
xlat
mov
mov
inc
xorl
cmp
pop
fcoml
bound
inc
or
inc
xchg
les
addb
cld
lods
inc
pop
mov
jno
inc
aas
jo
jmp
daa
pusha
mov
sarl
mov
mov
jnp
cmpb
dec
add
mov
outsl
lret
clc
push
in
sub
sbb
push
cwtl
sbb
pop
jae
xchg
pop
in
pop
cmp
arpl
add
pop
push
pop
fs
fwait
and
push
imul
hlt
arpl
xchg
imul
cmp
in
aas
icebp
dec
sbb
xchg
push
nop
and
in
push
inc
xchg
sbb
gs
xchg
xor
xchg
in
repz
xchg
mov
or
movsb
test
nop
shrb
or
stos
fidivl
arpl
insb
lret
movsl
xor
xor
fiadds
pop
or
call
popa
lahf
lea
jb
lods
rcll
repz
rol
xlat
push
lea
jmp
vmovlps
fwait
mov
sub
mov
imull
pop
sub
fistpl
fisttps
push
adc
imul
repz
push
inc
mov
sub
adc
mov
int3
add
adc
pop
jecxz
jne
insl
popf
sub
cmp
sub
ss
fdivrl
lcall
xor
cmp
sub
cmp
fucomi
clc
lret
xchg
cld
add
pop
mov
sbb
and
jmp
stc
xchg
mov
ds
mov
es
aad
stc
aam
test
add
or
stc
xorb
push
dec
fs
sbb
repnz
enter
ret
dec
sbb
pushf
daa
xor
xchg
xchg
das
mov
cs
ja
push
adc
test
sbb
dec
or
mov
leave
pop
loop
inc
test
test
pop
inc
sub
and
push
mov
add
sub
and
out
into
lahf
rcrl
iret
jno
jb
push
sahf
scas
mov
roll
add
cmp
and
popa
das
fistpl
in
mov
das
scas
adcl
xor
adc
test
cmp
out
cmp
pushf
push
mov
cmp
movsl
sbb
addr16
call
or
subl
or
xorb
ret
xchg
xchg
scas
mov
in
movsb
std
xchg
fists
and
mov
leave
sbb
nop
jge
push
aad
xlat
or
lahf
jne
dec
out
cmp
test
pop
or
aaa
cld
adc
mov
mov
shl
pushl
sti
fs
mov
ljmp
cmpsl
fildll
jge
and
mov
into
test
and
fisttpl
lret
enter
lret
leave
rcrb
in
ja
adc
cmc
pop
xchg
jg
fbstp
sbb
cmp
cmp
adc
or
mov
aad
mov
jge
cwtl
sub
sbb
or
lcall
add
mov
jns
mov
mov
or
jns
popf
push
ja
popl
test
lock
repz
ds
in
loopne
lods
sub
loop
adc
add
mov
mov
jge
jp
push
daa
push
sub
lcall
fdivrs
mov
aad
adc
mov
xor
xor
sbb
insl
jge
cmc
sbb
and
ljmp
sbb
pusha
lea
aaa
add
lods
adc
adc
push
repz
loop
sbb
push
jno
xchg
dec
push
or
sub
ds
push
xchg
push
push
push
lret
push
mov
sub
imul
enter
sti
xor
aad
outsl
loop
mov
test
xchg
movsb
jge
push
pop
pusha
bnd
mov
out
xchg
out
lds
lds
out
dec
call
daa
inc
sbb
ss
jo
sbb
insb
test
jecxz
aad
mov
in
je
add
sbb
mov
jae
or
dec
popa
xchg
test
orb
repnz
cmp
mov
jns
xchg
inc
insb
sub
mov
test
into
lds
mov
sti
xlat
mov
push
in
pop
mov
mov
or
test
insb
pop
push
push
int
aam
cmp
lret
pop
clc
out
add
xchg
mov
fwait
adc
mov
pop
cmpsb
pop
sub
jge
fsubp
xchg
mov
jge,pt
fisttps
clc
outsb
sub
stos
push
xor
cmp
or
push
or
fstpt
pushf
inc
sbbb
or
dec
dec
stos
push
add
xor
loop
push
xchg
jge
ljmp
imul
lahf
mov
mov
push
daa
or
xor
or
mov
scas
stos
sub
sbb
mov
xchg
lea
push
jge
shll
xor
test
pop
sub
pop
dec
sub
loopne
and
fs
mov
insl
sti
mov
outsb
fstl
cmp
mov
cld
and
fbld
out
insl
clc
dec
nop
push
push
sbb
mov
cmpsb
or
xor
test
add
xchg
test
lods
in
and
push
sbbl
mov
rol
bound
sub
cmc
dec
lock
outsl
call
mov
scas
pop
jb
dec
add
bnd
js
cld
daa
push
mov
push
adc
or
xor
ss
lret
xchg
cmpsb
dec
scas
in
xchg
cmp
push
lds
push
les
jne
fsubr
sbb
je
test
pop
pop
sahf
push
fistps
aam
add
jle
pop
orl
hlt
fsubs
cmp
enter
out
sahf
xor
mov
js
fmuls
jg
jnp
xchg
xchg
shr
xor
jo
xlat
add
adc
enter
das
mov
add
push
xchg
sbb
ljmp
sbb
dec
shll
add
std
insl
pop
mov
dec
in
jmp
pop
and
xor
and
add
std
jnp
ss
in
xchg
icebp
negb
push
aas
arpl
xchg
pop
ds
mov
add
push
cmp
mov
adc
fcoml
cmpsb
xchg
rclb
push
jp
repnz
out
inc
jb
shrb
hlt
bound
xorb
movsb
push
jg
imul
dec
xlat
test
outsb
pop
std
jecxz
aaa
or
icebp
fmulp
mov
mov
pusha
fwait
inc
mov
loope
into
sub
push
mov
es
repz
and
nop
mov
roll
and
or
stos
mov
or
xor
cmp
cld
bound
inc
ret
jne
cltd
subb
sbbb
ja
mov
leave
xchg
adc
add
pop
xchg
ret
mov
shll
pushl
jae
cmp
pop
lcall
push
inc
in
xor
xlat
aas
test
xchg
push
and
outsb
jge
mov
movsb
cld
mov
mov
or
lea
aam
outsl
ljmp
dec
ds
add
inc
mov
dec
shlb
push
bound
or
dec
dec
or
imul
loope
xor
push
cltd
xchg
inc
ja
neg
mov
addl
es
je
xchg
or
mov
fdivl
push
add
stos
sahf
dec
cmp
mov
cld
rcrb
sub
or
xchg
dec
push
fcoml
popa
jno
or
hlt
les
cmpb
push
or
inc
xchg
das
test
and
push
mov
imul
pop
cli
cs
pop
pop
jmp
add
ret
les
popf
test
mov
std
insl
pop
pop
bound
stos
dec
std
lock
int3
jecxz
aam
fmull
xchg
stos
jns
or
or
mov
jmp
inc
pop
or
inc
mov
fisubl
daa
fldt
xchg
push
sub
lds
mov
push
inc
mov
imul
sbb
push
cmp
xchg
mov
and
adc
fmulp
cmp
aaa
scas
aad
shl
jae
dec
mov
cmpsl
dec
movsl
push
dec
xor
lahf
xor
fidivrl
dec
sbb
add
out
or
sahf
pusha
xchg
fstp
aam
pop
jl
daa
dec
or
jne
mov
outsl
lea
arpl
cmp
push
xor
dec
jecxz
jmp
inc
mov
in
insl
stos
sub
jl
push
popa
js
andb
sub
mov
bound
scas
jmp
mov
cmp
popa
pop
mov
push
xor
xchg
xchg
add
mov
push
data16
test
mov
mov
test
clc
movsl
xchg
outsl
fucomip
movsl
jb
lock
int
push
adc
inc
shrl
mov
mov
clc
aam
out
test
filds
int3
inc
jbe
repnz
icebp
push
pusha
push
shlb
jmp
out
mov
cmp
mov
ljmp
or
pop
std
shrl
out
out
jno
scas
fistl
adc
mov
clc
fprem1
sub
mov
sbb
in
stos
adc
repz
mov
mov
or
adc
ljmp
mov
mov
daa
inc
mov
xchg
cmp
jo
je
mov
sbb
adc
out
outsl
orl
cs
mov
jl
jbe
or
lock
jno
pop
ret
inc
insb
cli
jmp
imul
icebp
andl
jl
inc
sbb
pop
test
xchg
sbbl
mov
jge
mov
pop
dec
push
and
fimull
repnz
pusha
cs
xchg
das
pop
xchg
test
sub
loopne
shlb
sahf
push
dec
push
inc
test
and
int3
push
xorb
out
jle
xlat
aas
or
pop
aaa
leave
xchg
popa
fldl
movsl
mov
shl
mov
mov
push
rcrb
int
bound
push
mov
dec
pop
je
aaa
mov
js
stos
push
stos
mov
fmuls
sbb
scas
pop
cmc
dec
rcl
shrl
add
adcb
xor
or
int
jmp
or
ja
jbe
insb
imul
inc
ss
fimull
out
xor
mov
aaa
pop
test
xor
in
mov
mov
and
cmp
mov
sub
sub
outsb
push
ret
lods
inc
xchg
jecxz
xchg
nop
sub
cld
test
jbe
test
insl
in
push
pop
mov
pop
cli
inc
arpl
cmp
outsl
pop
das
push
jns
andb
in
mov
push
mov
test
inc
inc
and
xorb
lcall
add
out
inc
and
pop
pusha
sbb
and
cli
sub
les
xchg
mov
xor
lcall
and
push
dec
add
xchg
scas
cli
pop
cltd
inc
jecxz
mov
or
loopne
mov
stos
mov
mov
sbb
cld
jl
cmp
popf
inc
stos
dec
gs
loop
pop
fidivrs
nop
icebp
mov
pop
bound
arpl
out
cmp
mov
gs
jecxz
dec
inc
or
test
fmuls
lods
cmp
dec
inc
mov
dec
or
addl
and
sub
notb
lcall
lods
jmp
sbb
inc
mov
scas
mov
movsl
lahf
pop
and
mov
subl
mov
pop
or
lods
js
test
jne
inc
out
pushf
je
notl
fistpl
leave
push
ds
jno
mov
mov
mov
cmp
bound
mov
push
mov
add
int
jo
mov
push
add
jo
dec
mov
cmp
dec
test
mov
fdivs
push
mov
mov
and
cmpsb
or
movsl
pop
xchg
aad
and
sbb
test
ja
push
jecxz
and
jnp
jp
or
ret
mov
dec
in
arpl
pop
inc
pushf
xchg
push
lret
dec
xor
stos
sti
cs
psrlq
mov
movsl
subl
ds
aad
enter
xor
add
xchg
push
stos
icebp
xorl
jmp
push
lods
dec
and
jbe
cmp
int3
gs
rcl
out
push
je
sub
movsl
inc
mov
cmpsb
xor
xor
lea
fmul
aas
or
push
xchg
out
fcomip
pop
dec
pop
jecxz
insl
pushf
mov
dec
jnp
scas
loope
or
jge
stos
fsubrl
and
add
dec
add
ljmp
cwtl
mov
mov
aam
xor
loope
and
push
xor
sbbl
jnp
add
adc
lds
ja
test
mov
mov
push
jmp
jp
and
shll
mov
adc
imul
sub
mov
out
sahf
or
pop
mov
push
sub
sahf
pop
and
cmp
sbb
lock
adcb
test
rcrb
cmp
dec
add
test
push
jp
mov
fcomps
test
adc
xor
jb
xchg
dec
and
loope
sub
ds
xor
gs
xchg
das
repz
or
xchg
cmp
icebp
outsl
mov
mov
sahf
inc
push
inc
inc
popa
cmp
sahf
roll
js
inc
mov
loopne
std
lods
xchg
jmp
cwtl
push
testl
call
enter
push
into
sbb
inc
fadd
dec
jl
fisttps
pop
stc
fimuls
mov
stos
xor
mov
sub
mov
out
cmpsl
xor
mov
inc
out
imul
sub
inc
jbe
cmp
in
jno
rep
xor
test
and
sub
out
sub
rcrb
es
shrl
mov
mov
in
shlb
fbstp
aas
sti
cmp
mov
out
ficoms
in
ret
jl
data16
sbb
aad
jo
nop
xor
fimuls
xchg
and
ss
mov
out
pushf
lahf
pushf
imul
or
and
or
dec
add
cmp
add
arpl
repz
ret
movsl
mov
in
das
mov
dec
sub
into
push
mov
fistl
pop
push
je
or
in
inc
clc
movsb
mov
js
hlt
xchg
and
jl
mov
shrb
xor
std
dec
dec
adc
mov
xchg
lahf
clc
int3
movsl
cmp
cld
mov
jno
or
add
xchg
rorb
mov
sub
outsb
mov
iret
cmpsb
jecxz
mov
or
pop
pop
repz
fldcw
and
andl
call
mov
adc
dec
xor
inc
addr16
pusha
mov
insl
sbb
lcall
inc
xlat
in
popa
cld
loope
dec
mov
popf
jnp
xor
push
rorb
mov
xchg
scas
mov
sti
pusha
cmp
divb
icebp
push
mov
sbb
lock
jo
push
cmp
pushf
aad
fsubs
xchg
enter
es
ljmp
inc
inc
aad
adcb
sub
outsl
sub
adc
pop
dec
test
push
cmp
jl
mov
pop
mov
out
mov
push
fsubl
jae
mov
repz
mov
pop
stos
in
dec
and
fcmovne
out
mov
adc
jge
jo
or
fs
push
xor
inc
in
dec
int
sub
mov
out
popa
sbb
outsb
icebp
inc
pop
push
push
jae
mov
sbb
mov
stos
mov
or
dec
inc
or
movsb
add
sbb
lods
jb
push
bound
pop
das
ja
das
inc
push
aaa
fldl
aam
cmp
pushf
stos
xor
lahf
mov
ljmp
in
outsl
stos
jp
aas
jle
test
pop
add
add
push
pop
jne
faddl
mov
aas
and
push
in
push
mov
add
pop
sub
addr16
mov
jg
push
cmp
adc
adc
jne
cmp
imul
jns
and
ds
pop
scas
jb
clc
fxch
loope
repnz
dec
xchg
loop
sub
add
out
out
push
fisttpll
jl
cmp
nop
aaa
cmpsl
jno
pop
pop
movsb
add
ret
lods
push
sub
jg
fst
bound
inc
les
adc
xchg
cmpsl
jae
xchg
ret
nop
loope
push
xchg
es
jecxz
cld
or
inc
xchg
cltd
fs
lock
dec
sti
cmpsl
fs
into
sti
or
js
sbb
jae
xor
inc
mov
cld
xor
stc
push
movsb
lds
daa
pushf
ljmp
pop
lret
jmp
mov
jb
or
or
dec
lds
mov
cmp
aam
dec
push
das
jo
xor
int
and
les
adc
sub
js
cmp
loopne
push
pushf
mov
cmpsl
test
in
inc
repnz
jecxz
mov
jmp
or
lods
lcall
add
repz
dec
sbb
xor
adc
stos
pop
and
outsl
data16
mov
push
jecxz
into
lcall
adc
add
les
jmp
xor
mov
mov
in
pop
add
aaa
jo
into
pop
mov
rcl
addr16
nop
leave
and
jae
mov
sub
lock
insl
fldenv
shlb
dec
sub
fwait
mov
jle
sub
sahf
bound
and
xorb
jge
jecxz
push
xchg
xlat
aaa
leave
inc
in
in
outsb
cmp
sub
mov
pop
dec
divb
addr16
movsb
sarb
popf
mov
cmpsl
in
nop
in
and
jmp
pop
les
mov
dec
rcl
shrb
ret
ret
fadd
add
mov
fwait
lret
sbb
or
aas
mov
cltd
mov
arpl
jle
jge
add
pop
xchg
or
fistl
enter
sub
cltd
jmp
push
add
loop
les
sub
xchg
movsl
push
jge
pusha
xchg
lds
mov
cmp
mov
jae
cmpsl
xchg
xchg
loop
mov
scas
dec
ds
cwtl
adc
ficompl
xor
in
mov
xchg
mov
add
pushf
adc
out
cmp
fimuls
pop
push
add
jg
xchg
push
cmpsl
cmpsb
je
mov
cmp
orl
imul
test
or
sbb
clc
sub
sbb
xor
sti
mov
jae
in
sbb
and
pushw
pop
insl
loop,pn
and
loop
and
mov
scas
fisttpl
fwait
mov
jne
fsubp
es
cmp
xchg
cmp
inc
in
or
mov
sub
out
das
shll
stos
fldt
and
push
mov
xchg
dec
daa
jmp
dec
push
sbb
bnd
mov
cwtl
rcl
cmp
push
repnz
jmp
mov
clc
xchg
icebp
int
arpl
scas
push
pop
sti
jmp
ror
js
sub
insb
int3
repnz
sbb
outsl
cmpsl
mov
and
xor
or
sub
lods
in
das
jns
sti
pop
pop
mov
mov
out
pop
inc
add
lock
pop
ror
pop
jns
inc
popf
inc
xchg
or
iret
icebp
add
stc
lcall
sahf
mov
sbb
lret
push
movhps
loop
mov
inc
push
mov
imul
je
test
sub
push
inc
fstpl
sbb
sbb
ljmp
mov
sub
add
enter
inc
bound
add
jmp
mov
inc
xchg
xchg
fs
add
pop
outsl
mov
fbld
xchg
sbb
cltd
test
lods
movsb
addr16
pop
sbb
cli
xor
fs
sub
sbb
add
and
aaa
jmp
cmp
fstps
xchg
ret
imul
xchg
pop
ljmp
pop
mov
jae
or
sub
fs
sub
push
sbb
xor
adc
jae
cwtl
ret
lret
repnz
pop
add
dec
and
sub
fmul
shr
popa
cmpb
testb
xchg
gs
mov
addr16
pop
push
mov
rclb
mov
xor
test
rol
mov
pop
mov
push
aam
inc
adc
push
scas
bound
andl
shrl
or
aam
add
dec
imul
lahf
adc
inc
jb
cmpsl
dec
mov
cmc
fnstcw
jmp
xchg
xchg
xchg
cwtl
scas
jmp
and
rcrl
sbb
hlt
stos
sbb
adc
std
add
mov
scas
jno
clc
mov
cmp
add
rcr
je
mov
mov
out
je
fnstenv
pop
cmp
mov
xor
or
inc
pushf
test
movsb
fwait
mov
mov
pop
icebp
mov
inc
xchg
gs
addr16
lret
jae
int3
add
cmp
pop
test
aad
dec
adc
iret
cli
cmp
scas
call
xchg
aas
hlt
lock
and
test
jno
mov
das
xchg
arpl
aam
xor
sti
stos
iret
es
push
dec
pushf
or
lds
outsb
xlat
icebp
pop
leave
aas
cmc
out
loop
mov
ror
mov
xchg
mov
push
test
loopne
or
in
mov
sbb
xchg
adc
pop
mov
push
inc
xor
fimull
divl
fdiv
insl
inc
xor
stos
pop
shlb
pusha
mov
hlt
jno
scas
outsl
pop
fidivrs
or
push
sub
inc
dec
adc
and
mov
mov
testb
jns
dec
rol
sub
sub
pop
scas
and
outsb
iret
cmp
jmp
fdivl
push
cmc
movsl
xlat
mov
xchg
jg
pop
mov
repnz
mov
cmc
rcrb
lret
push
adc
das
pop
test
into
cltd
lahf
pushf
jmp
xchg
scas
xor
insb
pop
mov
lods
pusha
das
inc
jno
jmp
cltd
jp
pop
pop
or
lcall
aad
cmp
or
bound
ja
cwtl
adc
gs
inc
mov
sbb
add
mov
aam
iret
xor
movlps
push
push
cmp
mov
add
test
daa
aad
outsl
mov
shll
out
rorl
jne
xlat
push
xchg
sub
pop
loopne
aad
xor
pop
or
fstpl
mov
loopne
add
adcl
xor
icebp
sbb
subl
lds
aas
adc
adc
jl
iret
in
out
inc
add
push
sub
ret
xchg
xchg
adc
mov
cmpsb
test
in
ret
enter
ds
mov
or
xchg
sbb
sbb
mov
std
pop
mov
and
sub
pop
incl
mov
ljmp
fiadds
mov
cmpsl
jnp
and
lea
cmp
popa
or
loope
and
inc
sub
or
cmp
add
mov
imul
cmpsl
int3
jg
xor
push
cmc
insl
cmp
and
cmpsl
dec
shr
mov
call
cmpsb
sbb
shrl
ja
arpl
out
cmp
or
jnp
aas
jl
fidivrl
data16
jg
and
dec
pop
add
xchg
sbb
aaa
jge
aas
add
push
insb
adc
icebp
test
xlat
add
scas
mov
fmull
lret
push
scas
or
push
push
xlat
loopne
inc
jg
rcrl
mul
inc
jp
adc
cs
fdiv
pop
sbb
pop
inc
xchg
xor
mov
aam
dec
xlat
insl
inc
push
sbb
push
pusha
jnp
out
push
push
loop
sbb
clc
in
idivb
xchg
mov
or
mov
test
push
jno
jmp
lods
cli
dec
push
imul
push
jb
loope
jmp
shr
cmp
pop
ljmp
daa
aad
pop
cmp
lock
and
xlat
mov
fadd
jge
ds
dec
fwait
in
loop
pop
insb
outsb
push
subl
sbbl
aam
and
xor
ss
lret
inc
pusha
hlt
comiss
xchg
jg
popf
sahf
iret
xchg
jg
outsb
mov
push
into
or
mov
mov
shlb
subl
je
movsl
jecxz
jg
test
sbb
sbb
pushf
and
and
pop
dec
sub
int
fwait
cld
lock
mov
sbb
flds
pop
jae
xor
iret
push
stos
cs
rcrl
pop
enter
add
inc
fsubrs
sti
mov
inc
test
popf
shlb
xchg
lods
mov
sub
jecxz
inc
xchg
clc
pop
dec
mov
fistps
xchg
and
jl
xchg
out
or
aas
fimull
pop
ss
fsubrs
or
cltd
icebp
xor
cld
adc
push
mov
fistl
shlb
jp
aas
jge
sarl
push
pop
and
in
push
das
xchg
push
push
cmp
add
dec
mov
enter
push
or
xchg
sub
scas
mov
or
mov
fdivl
popf
out
add
leave
mov
in
inc
mov
cli
mov
imul
pusha
push
adc
push
jno
mov
int
dec
in
sbb
inc
ss
leave
cli
loop
shlb
push
xchg
xor
cmp
icebp
lods
and
mov
aad
in
xchg
dec
add
or
cli
mov
shll
lahf
lahf
mov
shl
es
clc
subl
jae
mov
xchg
push
jnp
push
pop
sti
jns
inc
xor
mov
add
cmp
hlt
xor
jp
adc
mov
sbb
loope
sbb
adc
dec
sbb
jge
push
aas
mov
adc
dec
jmp
inc
pop
test
inc
stos
stos
mov
dec
fdivrp
aad
mov
pop
add
pop
negb
mov
scas
cmpsb
pop
in
pop
jnp
cmc
push
cmpsl
inc
xchg
daa
sub
dec
test
adc
jns
push
in
cs
xchg
jle
push
jp
xor
loop
aaa
jbe
xor
pop
adc
orb
jecxz
out
cmpsl
cmp
push
dec
in
jno
test
pop
inc
dec
hlt
pop
stos
scas
cmp
mov
loopne
roll
outsb
xchg
int3
push
jbe
or
xor
ss
inc
mov
cmc
loope
insl
ss
lret
inc
mov
ficoms
pop
add
mov
and
cld
and
lret
fmulp
mov
mov
sbb
fcoms
stos
fsubs
or
data16
mov
pushf
jl
inc
mov
or
mov
cwtl
cld
push
sbbl
lahf
ffree
movsb
addr16
xorb
lret
mov
dec
and
repz
sub
push
sbb
push
jmp
in
inc
xchg
out
push
js
cltd
add
lahf
ljmp
sub
fucomp
push
mov
iret
movsb
mov
and
push
or
nop
rcrl
mov
insl
add
mov
push
cmpsl
xor
jb
or
out
jmp
stos
cld
cmpl
xchg
jnp
and
or
sub
mov
or
mov
icebp
les
or
mov
xor
ficoml
rcrl
sub
dec
xchg
outsb
cmp
stos
das
cmpsl
jns
pop
in
pop
mov
sub
lret
push
mov
dec
cmpsb
add
push
dec
add
movsb
inc
mov
pop
cmp
and
pushf
cltd
fstpl
call
push
mov
cli
shrl
pop
imul
or
negl
xlat
loopne
inc
inc
lods
xchg
mov
adc
fucomip
bswap
fldt
negl
and
ret
dec
jb
inc
mov
sbb
xchg
dec
fbstp
xacquire
sti
or
xchg
inc
sahf
outsl
jns
int
xor
jae
and
es
mov
cs
inc
xor
insb
incb
sbb
bnd
and
xchg
mov
xlat
mov
nop
rcll
outsl
cmp
pop
mov
movsb
arpl
and
rorl
xlat
arpl
ret
jne
mov
mov
cmpsb
fmuls
xor
stos
aad
push
mov
adc
repz
cmc
sub
jns
stos
test
add
enter
inc
or
shll
inc
mov
push
cltd
aam
adc
jmp
sub
inc
mov
mov
in
ss
push
jle
loop
sbb
rdmsr
in
pop
clc
sbb
and
xchg
pop
push
fsubs
dec
cli
dec
xchg
rolb
push
push
xor
scas
xchg
lods
repz
jne
pop
jge
jnp
fisttps
lock
int
inc
xor
add
mov
insl
lret
mov
pop
insl
arpl
xchg
sbb
mov
dec
mov
ja
sub
movsl
sbb
cmc
imul
add
inc
dec
pushl
in
mov
jnp
xor
out
push
shlb
sub
mov
adc
mov
imul
rorb
cltd
or
fsubr
aad
sub
inc
pop
popf
test
divl
xchg
xchg
xor
xchg
pop
into
xor
cmp
sub
stos
loopne
jns
mov
bound
fisubs
aam
push
xlat
pop
addr16
add
movsl
fdivrs
pop
push
pop
not
add
or
lock
mov
push
aad
repz
rol
xor
xchg
cmp
lret
mov
add
mov
enter
mov
out
dec
and
outsb
cmpsl
fldt
sbb
mov
xchg
ds
pop
outsl
cli
pop
sbb
pop
shll
mov
adc
aam
mov
stos
ret
dec
ss
jbe
inc
pusha
xchg
ret
and
xchg
cld
in
add
jl
inc
lret
decb
lahf
pop
push
adc
push
cmpsb
ror
out
idivl
or
int3
adc
fildll
ds
mov
mov
xchg
enter
cmpsl
inc
hlt
cwtl
in
lret
adc
cmc
jle
std
sbb
pusha
pop
adc
aam
sbb
mov
les
pusha
les
call
or
lea
inc
xor
sarb
icebp
lods
lock
and
mov
in
outsb
mov
imul
movsl
sbb
out
imul
xchg
or
sbb
adc
pop
dec
jle
sbb
sub
jmp
jg
xor
iret
js
and
jg
inc
scas
and
add
add
inc
push
imul
sbbb
jnp
pop
stos
inc
add
js
sub
and
aas
aad
sub
out
lods
ss
rcl
xchg
int
jae
sub
mov
dec
iret
in
fildl
cmp
outsl
cld
push
lret
inc
nop
jbe
sbb
sbbl
ss
mov
jmp
je
adc
int
mov
pop
sub
in
fwait
push
mov
xchg
aam
scas
sahf
movsb
psubsw
out
scas
call
orl
cwtl
cs
and
add
mov
sbb
xor
sarb
out
sub
xchg
inc
ret
mov
out
and
stos
icebp
pop
mov
aam
dec
or
mulb
js
pop
mov
fwait
mov
inc
mov
cmp
push
sub
test
out
inc
mov
inc
nop
mov
movsl
mov
cmp
jg
test
outsl
xor
fwait
les
mov
or
push
dec
xor
iret
mov
sbb
mov
lret
xchg
es
lods
mov
cmp
sbb
xor
fwait
mov
adc
loopne
mov
arpl
adc
lods
mov
mov
xor
shll
popf
jnp
cltd
sahf
add
push
js
cmc
mov
mov
push
mov
popf
cmp
test
in
mov
nop
jb
lods
adc
jb
adc
add
out
pop
iret
enter
lret
add
mov
sub
pop
push
leave
mov
adc
movsl
dec
mov
iret
out
mov
jb
ds
adc
hlt
mul
in
add
dec
sbb
lret
fiaddl
mov
cmp
mov
cmp
push
jge
subl
cmpsl
inc
cs
push
pop
jne
pop
and
sarb
lret
lods
sub
out
sbb
mov
or
ss
mov
push
cltd
push
sub
add
cmc
jmp
jb
add
sub
fisttpll
lds
fists
jge
shl
pop
mov
xor
gs
outsl
ss
or
icebp
and
movsb
aaa
popf
mov
mov
scas
and
mov
cmp
test
stos
fs
neg
clc
shrl
andl
in
adc
repz
pop
movsb
sub
outsb
add
adc
cmp
mov
sbb
mov
int
add
icebp
aaa
adc
and
mov
or
pop
dec
push
cmp
mov
pop
mulb
pop
fsubl
loope
fnstenv
mov
pop
sub
mov
loop
and
cmp
add
in
repz
mov
adc
lods
pop
data16
jae
lret
mov
or
cmp
cmp
jmp
mov
cltd
movsb
push
dec
lods
data16
inc
call
mov
mov
lret
outsb
aas
push
cmp
and
ja
dec
addr16
cmp
add
jg
xor
cmp
aad
cmp
dec
dec
xor
jno
outsl
mov
inc
pop
xlat
push
bound
push
and
jecxz
dec
push
daa
push
sbb
sarl
test
jmp
daa
stos
mov
jbe
in
jae
or
inc
dec
fildl
scas
roll
je
add
shl
jg
testb
call
jnp
xchg
and
jnp
fcompl
pop
dec
rorl
or
iret
sub
xchg
and
into
stc
aaa
pop
xchg
inc
jecxz
nop
pop
xor
and
orb
stos
shll
ss
in
gs
dec
pop
adc
xchg
jmp
push
push
push
xor
jmp
xchg
cmpsl
outsb
movsb
sbb
fstpt
jg
xchg
in
adc
and
fidivrl
mov
push
daa
or
xchg
push
fidivrs
jbe
in
add
jo
dec
dec
sbb
mov
negl
negb
jp
ja
in
test
pusha
push
js
les
xchg
imul
imul
mov
in
jmp
into
lcall
mov
and
ds
xor
lea
cmp
and
pop
jbe
push
fisubrs
jns
das
loopne
xchg
mov
push
insb
dec
insl
mov
cmp
mov
lret
js
xchg
insb
lahf
fadds
xlat
pop
jae
subb
mov
jo
inc
mov
cmp
cmpsb
mov
mov
shlb
sub
and
ret
xor
dec
fwait
jae
dec
ror
pop
lahf
mov
sub
shlb
addr16
lahf
scas
shlb
pushf
jecxz
fisubs
cmp
int
das
nop
or
scas
shld
shll
int3
enter
and
ret
pop
pushf
inc
incb
inc
rcr
mov
in
xchg
mov
scas
pop
lods
jnp
mov
inc
dec
and
aad
repz
adc
int
test
push
rcll
mov
aad
and
int3
mov
push
mov
scas
inc
test
xor
mov
icebp
xchg
dec
push
or
clc
mov
lds
mov
movsb
stos
frstpm(287
lods
and
out
or
sub
pop
inc
int3
xor
fwait
loopne
pop
rclb
int3
punpcklwd
cmp
fcmovb
adc
lret
mov
idiv
jl
fdivr
push
mov
push
jno
pusha
aaa
push
es
ss
sub
addr16
dec
pop
jle
addr16
xchg
out
dec
scas
jae
aaa
mov
mov
enter
loop
adc
je
push
pop
jl
dec
jge
push
lds
add
pop
outsl
into
arpl
pop
pop
bound
call
divl
jge
mov
repnz
cmp
inc
adc
inc
out
mov
push
js
loop
xchg
aad
cmp
push
in
rcr
insl
mov
test
or
dec
ds
sbb
push
pop
setns
ds
popa
les
cmp
push
sbb
dec
jge
xchg
push
jnp
fadds
xchg
lock
or
or
ljmp
or
jl
add
and
ljmp
das
mov
insb
xorb
push
movsb
add
mov
jnp
xor
push
xor
cmc
fwait
out
loop
inc
inc
mov
jne
push
mov
mov
adc
aad
lahf
fstp
inc
xchg
mov
pop
or
jmp
subb
push
and
lea
xchg
test
nop
jo
pop
bound
arpl
inc
inc
in
or
shrl
jbe
add
xor
insb
pop
add
sub
je
add
sbb
out
sti
scas
pop
sbb
push
jb
add
imul
or
or
mov
inc
xchg
mov
push
cmp
xchg
xor
mov
or
iret
add
sub
pop
mov
inc
mov
mulb
cmp
enter
cmp
lds
int3
push
add
cmp
add
xor
mov
fisttpll
mov
lcall
jbe
loop
lahf
std
enter
lret
test
aad
lea
mov
jo
fwait
rorb
cmp
out
daa
mov
jo
idivb
mov
mov
dec
repnz
sbb
mov
jae
jecxz
xchg
or
movsb
xchg
inc
nop
jmp
xchg
test
or
gs
xchg
repz
test
cmp
repnz
pop
xchg
mov
add
outsl
addr16
xorl
popl
adc
stos
stos
lods
xor
sbb
daa
xchg
xor
jmp
or
cmc
ret
inc
pop
fs
cli
dec
popf
insl
orl
ja
push
xchg
xor
xchg
icebp
nop
sti
push
subl
dec
loop
inc
cmp
xor
popf
and
cwtl
sbb
adc
dec
add
into
lock
sub
jo
pushf
dec
rorl
or
out
ret
test
pop
icebp
jecxz
aam
orb
sbb
fstps
in
mov
lock
adc
and
add
cmp
pop
or
xor
add
aam
adc
lahf
js
js
insl
ljmp
call
in
xor
pop
xor
into
inc
sbb
xchg
xchg
mov
dec
add
mov
mov
fiaddl
sti
lcall
xchg
jb
out
xchg
mov
jae
mov
jmp
and
out
pop
ljmp
iret
loop
push
xchg
int3
test
and
jb
mov
stos
iret
ja
mov
in
stos
dec
lods
sti
mov
pop
jnp
cmp
jge
mov
cmp
add
and
stos
sub
pusha
fstpt
push
lods
das
pop
rorb
pop
cmp
fs
gs
inc
mov
xchg
mov
popa
jge
dec
push
push
mov
jg
xor
pushf
or
mov
cmp
dec
out
push
jmp
mov
mov
lods
and
stos
nop
pop
lcall
add
cmp
into
xor
xchg
mov
dec
xor
cmp
popf
mov
mov
push
popa
imul
mov
xor
test
shlb
jae
cmp
shll
popa
xchg
push
sub
lcall
scas
repnz
outsb
cmp
or
mov
add
xlat
sbb
pusha
sti
sub
out
and
shll
pop
dec
adc
push
pusha
xorl
or
mov
arpl
mov
adc
lret
inc
jo
xor
loop
stos
dec
xor
sahf
add
stos
mov
repz
inc
mov
loope
add
je
hlt
loope
pop
xchg
loop
arpl
adc
adc
pop
insl
lret
out
mov
or
rcr
push
data16
rorb
mov
xchg
inc
ljmp
mov
push
push
aam
dec
jo
xchg
fdivl
add
lock
pop
sub
cmp
mov
xor
lcall
or
movl
cwtl
push
pop
sbb
sbb
pop
data16
adc
pop
loop
shll
fsubrs
pusha
mov
shll
pop
out
push
dec
push
inc
dec
mov
ljmp
int3
xor
not
lods
jb
pop
xchg
bound
or
shll
test
push
cli
movsb
mov
in
jns
adc
lahf
or
jecxz
dec
arpl
mov
mov
in
scas
mov
cmp
add
xor
std
je
jns
and
pusha
in
pop
dec
adc
dec
sbb
push
mov
push
or
in
leave
stc
adc
sbb
push
xchg
scas
dec
inc
jbe
lods
mov
ret
jns
jge
rcr
rclb
dec
mov
lahf
xchg
pop
inc
daa
lret
cs
cmpsb
and
mov
xchg
xchg
sub
fcoms
mov
repnz
stos
enter
xorpd
fwait
xchg
cmp
enter
pop
jl
or
notl
decl
add
in
xlat
aas
lahf
pop
pop
push
out
xor
adc
mov
in
pop
cwtl
xor
jg
loopne
ds
sub
mov
stos
pushl
or
mov
push
movsb
lods
inc
aaa
cmp
fistl
jp
jmp
mov
icebp
and
rcl
add
aam
or
mov
dec
gs
fmuls
inc
test
outsl
inc
and
mov
pop
jno
dec
sti
sub
int3
adc
push
in
loop
sbb
aaa
dec
push
icebp
cmp
pop
pop
lahf
imul
push
aam
nop
mov
sbb
lods
inc
sub
push
lods
aaa
xor
pop
gs
in
mov
mov
jns
adc
std
pop
push
adc
dec
std
inc
xor
xor
testl
and
xchg
and
push
aaa
pop
cld
adc
mov
add
ret
leave
dec
xchg
aad
mov
sbb
pop
mov
stos
es
pusha
fdivrl
mov
push
movl
dec
inc
mov
pop
faddl
pop
test
push
call
mov
fisubs
push
pop
es
adc
addr16
jmp
inc
cmpsl
cwtl
popf
aad
lds
out
fdivs
aaa
sub
fdivl
sbb
sti
mov
cld
movsb
movsb
test
jo
adc
pop
mov
cmp
pop
inc
aas
add
mov
loop
repnz
pushf
cwtl
pop
xor
push
insl
push
das
cmc
daa
and
mov
aas
movsl
andb
mov
cld
lcall
int3
jae
js
inc
sti
cmpb
inc
mov
dec
adc
inc
adc
lock
ror
jle
popf
inc
pop
and
sarb
imul
aas
fstpl
mov
cmpsl
inc
pushf
sub
ja
call
xchg
mov
cs
adc
lcall
mov
sub
jnp
nop
or
mov
inc
in
aaa
and
sbb
jb
fcom
repnz
mov
cmp
add
xchg
xchg
mov
aam
jne
xchg
subb
mov
testl
inc
or
cmpsl
lcall
adc
push
out
or
mov
nop
or
adc
xor
fsub
xlat
push
mov
xchg
subb
and
cmc
add
jae
sahf
adc
jg
movsl
inc
into
mov
imul
push
and
inc
clc
jl
mov
sbb
cmc
jb
stos
sahf
pop
jnp
adc
xor
pop
loopne
into
jno
cmp
push
xchg
mov
stos
inc
les
cmpsl
insl
inc
adc
test
out
ret
cmp
cmp
dec
or
rclb
pop
jne
jl
jo
cli
dec
enter
cmp
popa
mov
in
jae
or
mov
xchg
ds
stos
daa
imul
xor
cmp
sbb
loopne
in
stos
mov
pop
dec
inc
sar
pop
cmpb
ret
xchg
jb
dec
cmp
das
int
push
cmpsb
mov
test
data16
nop
fld
and
outsb
push
gs
int3
sub
or
incb
dec
or
xor
mov
lds
push
xlat
cmpsl
pop
cmpsb
mov
mov
xchg
outsl
pushf
divl
pop
or
sbb
xchg
xchg
dec
fcomps
mov
addr16
add
push
inc
xchg
lods
cmp
je
mov
pop
inc
test
adcb
outsb
and
ret
sub
out
out
scas
out
ret
and
xor
nop
jge
inc
lock
and
jne
jg
js
ds
fistpl
adc
aaa
lahf
mov
mov
mov
or
jge
cltd
xchg
dec
sub
loopne
mov
mov
fildl
jg,pt
jns
and
insl
bound
jl
xor
adc
xor
call
fisttpl
arpl
loop
xchg
add
mov
mov
out
push
movsb
mov
sub
addl
sub
lods
aaa
sub
jo
aam
jge
hlt
sbb
inc
cmp
in
xlat
std
inc
movsb
ljmp
aad
pop
aad
jo
mov
aam
inc
sub
std
lahf
aad
mov
loopne
inc
xor
aas
mov
das
dec
pop
daa
sbb
test
das
xchg
and
push
les
jo
sahf
stos
jecxz
das
inc
fadds
add
pop
dec
inc
pop
add
pop
test
sbb
dec
pop
inc
inc
adc
add
dec
inc
testb
into
pusha
push
cmp
lods
mov
xor
ficomps
sbb
imul
push
addr16
popa
test
bound
enter
cwtl
adc
push
sbbb
xchg
and
insb
sti
sbb
lock
add
jno
cmpsl
jmp
es
nop
in
daa
adc
out
std
dec
test
movsb
push
das
ret
jbe
or
orb
or
xchg
cli
mov
jl
mov
cmp
sarl
sar
pop
jle
sbb
pusha
xor
xlat
fldl
push
adc
cld
and
mov
stos
lret
shll
cmc
push
lock
sub
dec
fwait
jnp
jnp
adc
and
movsl
shr
ss
xchg
dec
cmpsl
jge
pop
sub
test
test
shr
cltd
adc
adc
aas
clc
data16
dec
dec
std
or
mov
aas
xor
lds
dec
cmpsl
adc
sahf
mov
or
jns
repz
dec
frstor
jae
mov
movb
pushf
jne
std
cwtl
and
fs
adc
mov
aas
insb
fmull
ds
cmp
clc
adc
adc
stc
jecxz
or
std
daa
lahf
test
cmp
mov
jns
xchg
fsubp
aaa
in
ja
sbb
pop
test
loopne
adc
addr16
or
push
stos
mov
cmpb
ja
dec
pop
mov
and
dec
or
stos
fiadds
sub
inc
pop
jge
daa
pop
mov
xchg
into
pop
sahf
sbb
enter
imul
pop
push
nop
jp
pop
add
gs
jg
sub
mov
iret
adc
ret
test
mov
and
cmpsl
push
ret
cvtps2pi
push
pusha
je
int
outsb
fadd
scas
fbstp
movsb
mov
dec
ja
cld
mov
fwait
mov
loopne
inc
cmpsl
add
jno
insl
in
xor
xchg
mov
lret
and
xchg
mov
out
sub
sbb
imul
jne
aas
inc
pop
sub
cmc
cmpsl
std
inc
bound
add
fimuls
mov
insl
inc
mov
mov
mov
or
sub
movsb
out
ljmp
repz
mov
adc
loope
ret
add
movsl
frstor
or
popa
and
out
fld
outsl
and
adc
insb
jno
pop
stos
pop
mov
mov
mov
out
jp
mov
dec
dec
add
jns
aam
sti
ret
sbb
cmc
aaa
andl
sbb
push
rcrl
sbb
das
sahf
gs
les
jne
sbbb
je
mov
ja
lret
mov
cmpb
js
sbb
scas
or
test
aas
js
cmp
mov
xchg
ficomps
sahf
insl
lods
jg
mov
mov
and
mov
cltd
cmp
adc
mov
cli
daa
jne
mov
fisttpl
aad
mov
mov
mov
mov
popf
xchg
pop
sub
lods
aas
cltd
adcl
jg
jmp
jmp
nop
stc
mov
cmp
imul
mov
add
pop
movsb
push
into
add
fists
dec
arpl
mov
sarb
push
jb
cmp
add
loop
push
push
pop
imul
ficoml
lods
inc
f2xm1
sbb
sub
jnp
not
ljmp
outsb
cs
stos
std
pop
adc
pop
jbe
mov
cmpl
scas
mov
cwtl
std
frstor
xor
imul
shll
in
adc
cwtl
push
aas
ror
dec
pop
push
mov
jmp
mov
push
scas
movsb
out
pop
and
aam
cmpsl
xchg
cmp
cmp
pop
push
mov
test
xchg
cmp
sbb
jnp
fsubrp
mov
stc
cmp
ljmp
cmp
xor
or
imul
sbb
or
scas
mov
sbb
call
sbb
mov
sbb
inc
movsl
fnstsw
mov
int3
mov
cmp
nop
dec
or
scas
inc
lcall
ss
stos
sbb
repnz
test
mov
iret
cmpsl
dec
mov
cmp
mov
loope
ss
sbb
mov
stc
out
test
cmp
push
lcall
cmpsl
xor
scas
ljmp
popa
mov
testb
cmp
push
into
jg
aas
xor
lock
ss
and
xor
jnp
push
lods
mov
dec
scas
dec
vmulpd
aaa
mov
jle
fwait
scas
jb
cmc
adc
xchg
mov
aam
mov
pop
mov
lods
mov
lds
mov
jns
mov
out
lcall
mov
inc
es
sub
push
fmull
mov
insb
outsl
sahf
sub
add
dec
iret
bts
add
mov
ret
xor
in
in
sarl
fisubrl
sub
xor
sub
jmp
ljmp
jmp
imul
mov
mov
fs
lods
push
cmp
push
and
daa
adc
cmp
aam
ja
mov
xchg
sti
xchg
mov
sbb
cmpsl
mov
inc
into
mov
scas
xchg
mov
jge
pusha
mov
mov
xor
lds
xor
adc
das
sub
xor
hlt
push
xchg
dec
mov
rcl
xchg
sub
int3
orb
add
sub
icebp
js
mov
lret
or
daa
fsubl
scas
cmp
inc
out
fildll
fwait
out
bts
lret
cltd
into
mov
mov
ror
jl
sub
shll
cmpsb
stc
test
stos
jmp
or
mov
ficompl
arpl
hlt
cmp
insb
outsb
add
mov
mov
dec
testb
test
movsb
out
subl
inc
xor
inc
dec
jae
pop
dec
adc
pop
dec
stos
mov
movsb
mov
pop
aad
aad
fildl
xchg
xchg
rclb
inc
aaa
stc
aaa
xorl
dec
test
cmp
fstps
and
pop
push
mov
js
xchg
icebp
shl
pushf
aam
loop
daa
push
nop
cmp
add
adc
roll
je
or
roll
into
outsb
dec
mov
rorl
stos
cmc
scas
xchg
ss
jg
xchg
push
sahf
inc
inc
arpl
jmp
push
jbe
fidivs
xchg
jmp
fwait
fs
dec
retw
mov
push
fisttpl
lcall
cli
push
or
adc
or
pop
and
inc
inc
mov
lcall
pop
cmp
ja
clc
imul
xlat
in
adc
add
mov
imul
filds
aaa
xchg
fistps
push
int
sub
mov
std
cmp
mov
bswap
jg
clc
ss
shll
mulb
jns
out
icebp
pusha
adc
lcall
xchg
out
aaa
jae
cmp
bound
fcoml
std
jnp,pt
pop
jo
clc
cmp
shll
push
fdivrs
xlat
fsubs
ljmp
add
int3
sub
mov
enter
in
pop
pop
test
mov
dec
lret
jbe
repnz
sub
push
lahf
or
in
test
xchg
push
notl
pop
jp
pop
add
in
test
jb
cs
mov
out
cwtl
test
pop
dec
sub
scas
dec
stos
out
mov
or
cmpsb
outsb
pop
pusha
je
test
pusha
sti
rcrl
in
icebp
imul
sbb
pop
jle
bound
fisttpll
sbb
arpl
pop
mov
outsl
popf
mov
stos
ja
leave
loope
push
fwait
jnp
push
xor
enter
adc
mov
lahf
sti
mov
add
xchg
jecxz
sub
sbbl
add
mov
pop
daa
mov
ret
cmp
sbb
xor
mov
sarl
in
lods
insl
push
arpl
pop
and
cmp
pop
dec
nop
xor
add
daa
mov
xchg
jge
mov
test
cli
xor
rcrb
dec
insb
les
mov
xor
push
shlb
push
and
jecxz
mov
pop
mov
push
jecxz
fildll
pushf
dec
pusha
cmc
inc
mov
cltd
jnp
sub
xchg
pushl
jge
repz
scas
pop
insb
inc
xor
dec
fcomps
lea
mov
jo
add
lds
sahf
pop
clc
divb
cmp
ficoms
dec
mov
xlat
and
scas
or
xchg
xchg
mov
es
add
inc
nop
xchg
fiaddl
ljmp
sahf
sub
outsb
cmp
fstps
into
dec
pop
inc
adc
xlat
mov
push
fwait
setno
int
cmp
cmp
sbb
mov
pop
or
int3
les
movsl
pop
stos
or
add
and
adc
inc
or
or
or
jns
cmp
scas
pop
mov
mov
imul
ret
or
fsubrp
rclb
es
or
push
in
adc
lret
jbe
int
notb
dec
pop
bound
inc
push
decw
sbbb
notl
ficoms
add
and
or
push
sbb
movsb
lock
ds
lds
adc
mov
dec
pop
mov
fisubrl
mov
into
lds
adc
divb
fucomip
cbtw
fwait
out
imul
fadds
faddl
and
mov
test
leave
mov
jl
mov
pop
inc
jle
xor
push
filds
cmp
jge
xor
lahf
push
test
or
mov
imul
push
push
sub
insb
ret
add
daa
shrb
leave
mov
lret
iret
rcrb
shl
movzbl
pop
repnz
pop
aam
push
jge
xchg
jge
ret
pushf
test
lret
or
jmp
xor
nop
stos
hlt
ja
xchg
lahf
pop
mov
int
jae
dec
shlb
clc
aas
mov
pop
pop
mov
jle
push
imul
mov
dec
mov
dec
leave
mov
insl
out
in
daa
or
lods
sbb
jbe
pop
stos
movsl
lcall
pop
adc
out
push
repnz
lods
sbb
xor
mov
inc
je
adc
inc
arpl
dec
filds
stos
mov
and
push
addb
inc
outsl
cmp
xchg
push
jecxz
push
xchg
cmpb
movsb
pop
sub
cmp
push
jmp
xor
push
int
cwtl
or
cltd
dec
mov
mov
rcrl
mov
pop
dec
test
scas
mov
insb
mov
int
xchg
push
in
push
stos
cmpsl
mov
test
sub
adc
inc
in
sti
orb
jae
xor
cmp
add
or
into
call
mov
out
xchg
xor
jge
jb
or
movsb
cld
mov
das
addl
fidivrl
mov
push
xor
lods
mov
addl
shrl
cmpsl
sahf
pop
adc
mov
jns
push
pushf
and
fadds
mov
inc
mov
dec
xchg
jge
icebp
sub
repnz
jae
push
data16
in
or
jo
mov
pusha
sbb
adc
jae
hlt
jle
pop
jns
cmp
inc
cmp
push
sub
test
lret
fstpl
mov
push
inc
rclb
mov
and
mov
loop
repnz
sbb
cmp
jg
loopne
pop
lret
sahf
shl
pop
and
jge
sub
jno
out
pop
outsl
cmp
aas
repz
inc
jbe
rorb
pushf
mov
rcr
cmp
mov
jbe
into
inc
jmp
or
and
xor
shll
rcll
jp
test
popf
test
test
or
sub
pushf
pop
lock
sub
test
jo
shll
mov
or
aam
ds
xlat
adc
mov
inc
enter
aaa
ficompl
out
cmp
cwtl
in
push
out
mov
xor
sbb
sub
in
add
xchg
dec
add
out
mov
xchg
test
xchg
xor
push
lea
adc
mov
jae
mov
lret
cmp
scas
lret
mov
rorb
fldl
lock
mov
add
add
sub
push
inc
jb
add
jo
xchg
jle
test
dec
aam
and
dec
jo
out
in
dec
xchg
fldcw
inc
outsb
xchg
lret
jnp
jnp
and
pop
movb
in
mov
aaa
mov
dec
je
fs
dec
mov
cmc
lret
push
fsin
test
cwtl
mov
out
into
lcall
mov
addr16
xchg
xor
fstpt
outsb
and
pusha
xchg
jne
cmp
mov
fs
sbb
inc
push
mov
push
test
mov
ljmp
xchg
js
add
jb
push
xor
xor
gs
xchg
roll
pop
imul
out
arpl
jae
shr
fs
mov
lock
mov
repnz
xchg
out
loope
stos
insb
and
or
inc
pop
or
scas
inc
or
ljmp
in
outsl
and
xor
int
cmpsb
out
out
mov
lds
mov
cltd
icebp
and
aad
sbb
mov
mov
imul
mov
dec
jbe
lahf
jae
shrl
repnz
popa
xchg
addl
out
mov
adcb
test
cmp
lcall
fidivs
xor
add
jg
xchg
xor
cmpsb
mov
dec
xchg
dec
xor
mov
mov
popf
cmp
and
inc
mov
movsl
fstpl
ret
cmp
fsub
pop
fistps
mov
lcall
fstpt
pop
mov
popa
fs
xchg
loope
xlat
lea
pop
pop
aam
sub
mov
jle
out
sti
cmp
dec
xor
adc
push
arpl
or
idivb
das
sbb
pop
stc
add
cwtl
jle
cmpsl
push
fwait
xchg
xchg
mov
cli
test
rolb
and
add
mov
adc
push
pop
cmp
inc
jl
lret
daa
mov
jbe
nop
jno
push
cmp
mov
inc
cmp
adc
lds
js
jg
mov
sub
jo
push
jecxz
aad
push
xchg
ss
cli
xchg
fiaddl
std
cmpsb
or
lcall
nop
cmpsl
cmpsl
int3
cmp
xor
pop
lret
hlt
js
ljmp
add
add
mov
in
xchg
dec
dec
ss
fisubrs
push
scas
sub
les
sub
adc
push
les
push
sub
scas
sbbb
mov
cli
in
sbb
lcall
mov
fistps
cmpsb
jne
inc
enter
inc
inc
mov
and
mov
pop
sarb
fisttpl
loop
das
lods
xchg
in
dec
inc
pop
imul
jl
pop
ficoml
jb
mov
enter
iret
xchg
inc
push
xchg
ss
fadds
int
icebp
push
test
inc
xchg
mov
mov
push
xor
xor
sbb
xor
sub
pop
fcmovbe
movsl
mov
nop
add
aad
inc
cmp
ss
mov
xchg
adc
pushf
lock
or
lcall
testl
jae
xchg
or
dec
lret
inc
pop
sahf
nop
push
sbb
mov
xlat
push
into
xchg
mull
jne
mov
lock
sub
fwait
imul
aaa
jnp
out
adc
lret
pop
push
pusha
mov
cmp
pop
add
jg
jb
les
pop
xchg
jo
or
xlat
dec
outsl
mov
jg
stos
adc
dec
js
movsb
jecxz
xlat
adc
mov
inc
sub
clc
cwtl
fwait
mov
jecxz
fldenv
jecxz
repnz
mov
mov
sub
iret
lret
push
pop
xor
std
repz
pop
mov
cmpsl
bound
and
int
pop
shlb
in
push
dec
mov
fst
sahf
jmp
jns
dec
ror
sub
sub
inc
out
lret
stc
fmul
inc
into
cmp
inc
imul
jns
xor
cmp
push
outsl
stc
and
fimull
icebp
dec
xor
mov
cmp
sahf
movntps
std
addr16
xchg
lret
aaa
gs
or
fdiv
dec
inc
movsl
push
adc
aam
xor
ja
fsubrs
jg
sbb
push
loopne
in
cltd
insb
rcrb
ljmp
mov
push
sbb
ret
ret
dec
dec
ss
fisttps
adc
mov
jne
lea
decb
outsl
scas
sti
sti
xchg
int3
mov
lcall
and
inc
mov
ret
sbb
movsl
shlb
imul
orb
mov
in
add
lahf
add
roll
cltd
pop
adc
pushf
push
or
mov
adc
data16
and
fsts
sub
inc
pop
out
dec
das
pop
lret
imul
adc
loope
cmc
pop
push
ja
dec
mov
xor
xchg
scas
mov
add
jle
dec
push
je
and
cmp
sbb
and
xchg
ret
and
or
adc
mov
cs
fdiv
dec
jb
cli
sbb
pushf
cmp
mov
xor
and
js
xchg
push
mov
adc
xor
mov
stos
movsl
daa
test
sahf
out
addb
pop
fdivrl
dec
into
out
jno
xchg
inc
mov
jae
ljmp
mov
jge
lcall
sbb
and
and
adcl
ljmp
xchg
leave
push
hlt
insb
ret
push
movsl
push
mov
cltd
push
and
or
adc
pop
aad
inc
sahf
push
inc
int
pop
sbb
filds
imul
cld
es
xor
add
popf
pop
mov
push
and
cmp
cmc
shll
jge
jge
sbb
clc
xchg
cmpsb
and
push
pushf
test
xor
ficompl
sbbb
jp
and
mov
int
mov
std
inc
jp
aad
cmp
dec
mov
mov
jnp
fsub
ret
stos
adc
dec
fs
aad
stos
or
xchg
push
jnp
popa
inc
cmp
jge
in
popf
ja
es
mov
inc
in
sub
jmp
or
xchg
mull
imulb
jmp
cmp
jnp
push
cld
in
cmp
scas
movsl
loope
and
out
mov
test
mov
jp
mov
mov
outsb
arpl
push
or
push
mov
out
mov
outsl
jb
ret
int
leave
pop
sub
or
push
and
repnz
pop
pop
add
cwtl
cmc
repz
xchg
jns
lret
pop
dec
enter
or
fisubs
inc
sub
in
xor
adc
fists
push
notb
pop
mov
jecxz
lret
icebp
pushw
stos
mov
cmp
std
jns
dec
mov
sti
cwtl
cmp
xor
or
mov
xor
dec
loope
in
incl
pusha
ljmp
inc
cld
cld
xorb
and
sbb
lock
pop
xchg
xchg
add
or
and
mov
xchg
sbbb
jbe
ss
jns
inc
fistpll
cld
adc
and
sbb
xor
add
das
nop
add
insl
or
stos
inc
ja
call
imul
xor
pop
add
sub
mov
sub
data16
subb
shlb
lcall
js
cmp
roll
stc
in
mov
lret
sbb
test
test
pop
jg
pop
xor
ja
xor
aas
fwait
lcall
and
shl
jp
sbb
andb
mov
push
push
mov
insb
scas
rol
imul
das
aam
pop
jb
jb
xchg
mov
xchg
mov
jnp
adc
testl
outsl
imul
inc
dec
lret
inc
mov
cli
mov
rcll
shll
jmp
jae
js
inc
cmpsb
jg
mov
insl
ss
mov
push
sub
jl
jmp
outsb
inc
aad
add
mov
push
out
gs
out
add
adc
ds
pop
sub
ds
xor
cli
fwait
mov
inc
add
movsl
sbb
mov
ficompl
sub
jge
loopne
mov
cmpsl
out
push
xchg
call
fsubr
mov
mov
mov
inc
incb
pop
dec
mov
jb
out
adc
mov
dec
mov
fidivl
das
into
mov
mov
dec
xabort
push
xchg
pop
in
xchg
rcrl
and
or
andb
lock
inc
cmc
inc
lahf
jp
lret
mov
lea
inc
aam
shr
int
cmp
mov
xor
cli
lock
mov
call
int3
inc
xchg
dec
cld
push
stc
call
or
xchg
repnz
or
push
xor
xor
sbb
push
adc
pop
jno
mov
jnp
cmpsb
add
inc
jns
inc
add
inc
sbb
push
aam
scas
inc
push
arpl
xchg
scas
sub
enter
sub
adc
js
mov
inc
jmp
cmp
sub
push
jae
push
stos
sti
jle
pop
lods
lret
movsl
xchg
mov
loopne
mov
js
popa
in
inc
js
out
jne
adc
hlt
pop
adc
jne
out
adc
push
jo
rcll
inc
cmc
scas
icebp
or
mov
push
aaa
jb
push
stos
fldl
jns
mov
xor
sti
push
adc
arpl
push
or
loop
iret
sub
int
imul
aas
and
sub
mov
inc
jne
lock
mov
mov
sbb
xor
hlt
push
stos
clc
cli
mov
js
movsb
sbb
aad
sub
mov
hlt
pop
daa
lods
or
inc
jno
fldt
cmp
mov
inc
int
dec
adc
lfs
imul
sbb
pop
push
popa
fidivrs
test
test
cmpl
mov
xor
cmp
enter
mov
nop
nop
mov
arpl
dec
sbb
imul
push
addr16
fnsave
pop
mov
popl
loope
xor
sub
cmpsl
lret
lcall
sub
mov
sbb
add
popf
lahf
inc
and
jb
js
repnz
enter
arpl
sub
sbb
lret
shll
pop
insb
pop
mov
es
inc
push
jmp
or
std
sub
mov
cmc
and
mov
outsb
add
aad
movl
xor
fsubs
shlb
mov
push
cmp
and
pop
jns
pop
mov
shl
sti
les
jbe
lret
js
out
inc
pop
in
sbb
out
lods
sbb
mov
ljmp
out
lods
inc
mov
cmc
je
outsl
les
sub
push
int3
mov
push
mov
jmp
pop
lahf
push
push
lahf
xchg
mov
rclb
cli
clc
mov
dec
jmp
ret
imul
lds
icebp
or
mov
cmp
repz
es
aam
push
cmpsl
out
mov
xchg
out
outsl
mov
mov
insb
jp
inc
jle
mov
mov
xchg
jnp
lds
sub
jns
push
add
jno
fstl
push
inc
cmp
jl
fs
scas
jl
xchg
mov
outsb
add
dec
push
lret
cmp
addb
mov
shll
or
add
lea
enter
mov
fwait
ret
or
lock
push
sbb
cwtl
sub
shrd
add
dec
scas
mov
bound
mov
push
ret
mov
jge
fldenv
xor
sti
mov
pop
test
dec
in
lahf
hlt
or
pop
fisttpll
push
leave
push
inc
dec
and
pop
add
and
icebp
jecxz
int3
int3
fstps
out
fadds
lahf
imul
rcrl
dec
adc
loop
inc
clc
and
push
sbb
dec
js
jae
mov
sbb
sub
adc
std
mov
aas
je
shr
push
mov
in
ret
testl
arpl
push
jo
jl
shll
push
xchg
ffree
push
lret
mov
stc
adc
je
push
scas
imul
pusha
adc
mov
dec
push
mov
outsb
adc
mov
push
stos
mov
das
clc
xor
pushf
mov
das
mov
and
jle
lods
push
and
shr
jns
mov
imul
xchg
xor
cmp
add
addl
inc
or
and
mov
icebp
jle
push
push
lea
mov
or
scas
pusha
shl
push
sub
sub
and
jbe
xor
xor
jb
adc
arpl
mov
adc
mov
das
lds
xchg
or
push
repnz
sarl
mov
inc
jge
sub
mov
std
inc
jge
pop
out
test
das
and
out
xor
cmp
mov
cld
in
xchg
jnp
inc
xor
add
loop
out
arpl
clc
aad
shr
and
mov
mov
fimuls
faddl
adc
in
xchg
mov
mov
notl
or
popf
fadds
pop
clc
scas
sbb
add
pop
add
and
and
adc
and
xor
and
inc
mov
mov
cmp
cmp
jbe
imul
imul
ss
mov
psllw
and
inc
lea
sbb
pop
loopne
cmp
xor
mov
push
leave
add
pop
arpl
inc
pop
jp
push
xor
testb
xor
loopne
jae
cmp
inc
cmp
test
jl
inc
xor
add
filds
rolb
aaa
jecxz
cmp
daa
lods
pop
pop
aaa
sub
dec
lret
pop
movsl
cmc
push
xlat
inc
xorl
sub
je
pop
fwait
cmp
lds
les
jns
insb
sub
dec
or
ja
int
adc
mov
stos
or
xchg
stos
movsl
test
mov
mov
xchg
aaa
jmp
jne
pushf
loop
dec
and
jbe
hlt
bound
push
test
sub
outsl
push
aam
popf
and
mov
pop
std
repnz
mov
mov
dec
int
mov
xor
mov
sub
jo
js
add
xor
xlat
or
imul
mov
aas
mov
dec
mov
mov
push
insb
xchg
cwtl
stos
cwtl
add
movsb
mov
shrl
jnp
push
xor
cs
jns
push
inc
adc
insb
hlt
sub
cmp
shll
aad
mov
or
sub
ljmp
mov
movsb
mov
std
xchg
test
scas
add
xor
or
outsl
cmpsl
lahf
xor
mov
jge
and
and
or
in
or
das
mov
pushl
fwait
cmp
jnp
lcall
aam
pop
push
cmp
aam
mov
pop
mov
add
adc
cs
adc
das
mov
mov
das
jl
sbb
out
mov
adc
fildll
sahf
jl
cli
and
in
pop
hlt
add
sub
and
sub
outsl
icebp
push
pop
daa
outsl
in
imul
or
cmp
jno
loope
sub
loopnew
lret
out
pop
add
popf
into
jle
mov
mov
std
jle
inc
pop
gs
pop
loope
push
ret
stos
cmpsb
adc
or
ficomps
loopne
sub
hlt
movsb
pop
cld
ss
cmp
or
jge
and
add
scas
jne
rclb
popf
imul
aaa
jae
mov
jl
insl
xchg
insl
ret
or
inc
xor
pusha
xchg
lcall
icebp
or
test
inc
pop
sbb
inc
and
imulb
fisubrl
fldenv
lahf
inc
cli
xchg
test
xor
in
jl
pop
in
and
out
mov
add
push
sub
stos
mov
fcomip
divb
mov
add
ds
cmp
or
xor
xchg
lods
push
lock
les
jmp
cmpsl
clc
cmc
add
sub
hlt
movsb
sub
jmp
jmp
mov
adc
ds
xchg
jbe
gs
cmp
xor
into
mov
sbb
int3
xchg
inc
lret
test
dec
ja
push
aaa
pop
push
push
pop
in
pop
add
imul
lock
xor
int
pop
fwait
outsb
xor
jmp
cmc
push
sub
call
pop
jg
add
dec
mov
sbb
lods
addr16
jae
and
idivb
mov
rcrb
cmp
mov
lds
add
push
nop
in
ljmp
add
cwtl
or
jno
xor
xchg
mov
std
jne
add
aam
sbb
push
xor
xor
mov
jb
pop
lahf
cs
lret
sarb
or
mov
sub
pop
pop
int3
clc
notl
sti
pop
int
mov
pop
rcrl
xor
or
cwtl
cmp
rcrl
imul
xchg
divl
pop
jmp
xchg
hlt
aad
mov
dec
or
dec
jo
pusha
es
inc
test
popf
jnp
pop
fcomps
ljmp
enter
sub
scas
jns
mov
pop
cmc
mov
lret
jmp
add
mov
loop
mov
popa
mov
fldcw
add
pop
in
in
adc
mov
aad
lahf
jne
dec
mov
aam
push
xor
mov
add
mov
jg
in
stos
adc
sbb
push
jg
sub
nop
pop
push
sub
rcll
neg
sbb
jne
int3
arpl
pop
rcrb
aad
mov
push
fidivrl
fistps
dec
mov
add
test
cmp
cmp
popf
jp
jmp
inc
repnz
cmp
je
mov
sarb
or
adc
push
and
shl
subb
fs
out
jnp
cmp
mov
add
dec
std
pop
push
out
pusha
mov
lods
pop
xchg
test
sbb
sahf
int3
bound
cmp
inc
jge
add
enter
cltd
lock
mov
in
iret
outsl
push
cwtl
aaa
jle
loope
push
xchg
pop
adc
popf
or
lcall
popf
mov
pop
aas
arpl
fldl
mov
loop
int
shlb
pop
xor
pop
sbb
dec
push
xchg
mov
sbb
out
pop
outsb
adc
aaa
adc
mov
loop,pt
shll
dec
dec
loop
mov
jl
lods
filds
js
xchg
push
popw
xlat
sub
repz
fnsave
rclb
mov
adc
cmp
jge
stos
fsubrs
fimuls
pusha
or
push
dec
sarb
fisttpl
mov
jmp
sub
aaa
sbb
je
push
pop
scas
mov
adc
and
data16
mov
sbb
cld
rcl
push
aas
push
popf
pop
sub
push
bound
repz
nop
pop
aam
add
jb
adc
jl
bound
jle
ret
pop
mov
idiv
sub
push
dec
scas
pop
pushf
push
test
ret
mov
lret
and
jp
jg
call
inc
orl
test
pop
adc
loope
mov
pop
sub
add
dec
ss
out
pop
xor
pop
ja
pop
inc
pop
idivb
repz
aas
jnp
cld
int
jg
mov
mov
pop
or
dec
hlt
test
loopne
das
clc
ficoms
shl
popf
repz
test
adc
cmpsb
out
or
xor
cmp
and
jl
push
xchg
insb
fidivl
jo
or
xor
jbe
adc
push
mov
sub
das
sub
stos
out
push
xchg
add
mov
dec
mov
aad
xchg
jae
ljmp
push
adc
xor
stos
sub
fcomps
pop
push
add
sub
packssdw
xchg
inc
inc
outsb
mov
pop
add
lahf
add
adc
mov
inc
or
sub
xor
mov
or
scas
shlb
and
imul
pusha
data16
jmp
inc
mov
adc
mov
fwait
jb
mov
jle
dec
push
jmp
daa
mov
jbe
mov
sahf
js
je
nop
in
cmp
mov
nopl
aam
inc
sbb
xchg
and
hlt
repz
xlat
mov
cmp
mov
sbb
xchg
lea
es
in
notl
std
lods
test
insb
daa
in
xor
fdivs
dec
mov
or
adc
loopne
add
mov
fidivrl
jns
fidivrs
fisubs
pop
xor
adcb
pop
sbb
clc
sbb
xchg
in
sub
enter
pop
les
movsl
xorb
fs
sub
aas
in
inc
and
lahf
mov
dec
leave
cmp
jne
orl
dec
dec
cmp
bound
pop
sub
pushf
jb
push
dec
rorb
fsubrs
add
lea
sbb
pop
cmp
adcb
jl
xor
jae
mov
jne
stc
aam
and
faddp
inc
mov
jnp
sahf
and
xor
test
lcall
dec
fsubl
mov
rcrl
and
mov
inc
out
inc
push
insl
pop
call
fstl
fsub
xor
mov
icebp
in
enter
imul
xor
add
ja
aam
cmpl
aad
mov
mov
sub
dec
mov
out
dec
jecxz
inc
stos
rorl
fsubl
das
or
pop
dec
subb
and
mov
into
orl
or
add
pop
pop
lret
pop
sub
sub
arpl
mov
fimull
dec
pusha
cmp
jle
addr16
inc
inc
iret
iret
adc
mov
jb
hlt
aam
orl
mov
repnz
mov
shr
xchg
and
add
cmc
push
test
movsb
int
rcl
push
pop
jecxz
pushf
inc
rcrl
xor
std
xor
rcr
out
xlat
adc
xor
pop
sub
adc
pop
mov
push
dec
push
shlb
push
shlb
sub
sub
daa
jnp
mov
insb
sub
xchg
mov
out
jo
push
fwait
rcl
mov
push
and
mov
and
push
fnsave
mov
jno
sub
inc
xchg
imul
out
ss
daa
cli
idivl
jbe
xchg
push
cmpsl
and
lcall
stos
inc
ss
mov
daa
jae
xchg
inc
pop
xor
or
inc
aas
fsubs
cli
inc
sarb
jp
xchg
insl
dec
push
repnz
nop
dec
and
cwtl
mov
mov
aad
in
lock
scas
idivb
cwtl
xorb
lea
test
dec
lods
sbb
loopne
mov
frstor
out
stc
lret
xor
fimuls
aam
dec
sub
inc
adc
repnz
arpl
shrl
mov
xchg
popf
sub
hlt
lret
dec
scas
sbb
mov
enter
sbb
inc
dec
stc
idivl
mov
insb
or
xor
shlb
iret
insl
das
mov
loop
mov
jg
ret
xor
jp
roll
push
mov
adc
jmp
mov
xchg
inc
mov
aas
iret
and
push
adc
stos
fisubrl
movsb
fisubrs
mov
sti
sub
sub
test
cmp
popa
xlat
into
xlat
and
push
pusha
out
add
mov
mov
fwait
lret
outsb
pusha
xor
call
mov
rcrl
ret
in
mov
pop
out
mov
mov
aaa
js
push
add
iret
inc
int3
and
mov
sbb
push
adc
ljmp
dec
out
push
lcall
xorb
push
add
mov
adc
xchg
icebp
mov
adcb
lcall
add
lods
mov
int3
clc
lds
cmp
stc
xor
fstpt
xor
loope
lahf
shlb
pop
enter
cld
negl
sti
inc
xchg
pop
dec
gs
loope
aaa
js
sub
test
pop
sbb
clc
jno
daa
lock
into
shl
or
xchg
cmp
jecxz
loop
je
outsb
cmp
cmp
nop
mov
je
in
int
mov
add
mov
in
push
cld
sub
sti
xchg
dec
sub
jo
in
cmp
dec
cmp
push
in
bnd
cwtl
sti
shlb
push
mov
arpl
pop
mov
test
lock
cmp
pop
or
pushf
sahf
and
fistl
pop
push
subb
inc
nop
xor
pop
sub
repnz
adc
je
outsl
xor
mov
inc
ret
jnp
sbb
cmp
mov
ss
sub
mov
add
sub
or
add
mov
shll
xchg
mov
inc
add
pop
add
sub
push
mov
sbb
lret
xchg
ds
pusha
loope
test
stos
aad
dec
jmp
ja
imul
push
fs
lret
ljmp
pop
or
imull
mov
and
pop
or
in
lea
in
stc
xlat
repz
scas
lds
stos
in
xchg
clc
xchg
out
pop
insl
xor
pop
xchg
adc
or
add
cmp
lods
push
mov
cmp
pushf
out
jae
out
cmp
sbb
int
jmp
pop
cmp
fstps
push
adc
cmp
mov
filds
pop
mov
mov
push
inc
lahf
leave
sahf
dec
pop
inc
cmp
movsb
sbb
jo
test
mov
add
inc
cmpsb
sub
cmp
and
mov
adc
xchg
add
cmp
lea
jno
lea
imul
subl
cmc
dec
cltd
add
cltd
dec
cmp
jnp
cmp
sbb
pop
cmp
mov
imul
test
les
pop
inc
add
rcll
mov
ret
ss
push
lods
popf
sbb
fs
jmp
fdivr
push
stos
cmp
movsl
clc
or
nop
push
cmp
dec
mov
jp
or
lock
push
lods
loope
xchg
les
pop
aam
pop
fcmovb
mov
fldcw
std
outsl
mov
jns
adc
enter
aaa
push
mov
sbb
add
sahf
push
in
pop
and
mov
fistpl
pop
pop
cmpsb
es
adc
pusha
mov
mov
lods
std
xchg
push
popa
rcrb
popf
mov
xchg
add
mov
jns
les
xor
movsb
cmp
lods
xor
int3
add
fsts
or
xor
mov
scas
add
mov
sub
and
lock
fincstp
cli
inc
cs
dec
repnz
into
adc
jnp
inc
or
outsb
out
stos
stos
cmc
push
sub
mov
andb
or
adc
jge
faddl
imul
sub
das
dec
dec
clc
popl
push
rolb
ja
shr
xchg
arpl
mov
sbb
outsb
clc
jmp
repnz
imul
hlt
jne
sub
sarb
pop
adc
sbb
mov
mov
mull
test
pop
leave
xchg
in
cltd
jmp
movsl
push
and
pushf
stos
xchg
fwait
mov
popa
lea
or
stc
mov
sbb
rorb
verw
je
mov
mov
clc
fiaddl
jl
imul
mov
and
les
mov
jne
rcrb
mov
jge
adc
mov
je
loope
and
out
arpl
jl
jae
mov
push
les
data16
push
lcall
incl
push
pop
nop
add
and
xchg
jp
jo
mov
jge
mov
push
sti
xchg
mov
xchg
mov
or
inc
aam
xchg
dec
or
fisttpll
xchg
mull
add
lret
fstpl
rolb
subb
cmp
ljmp
or
fs
inc
test
mov
xchg
sub
xchg
push
dec
ljmp
outsb
movsb
xor
inc
outsb
stc
cld
movl
lock
pop
mov
imul
mov
or
stc
add
sbb
icebp
adc
mov
inc
mov
mov
lret
std
jno
pop
out
bound
jl
loope
clc
xchg
mov
mov
and
sbb
xchg
cli
inc
jb
outsb
sbb
xchg
imul
ret
hlt
shl
mov
dec
xchg
inc
roll
or
dec
xchg
lock
dec
jecxz
cmp
sub
call
outsb
in
test
dec
dec
aas
sbb
je
sbb
test
add
inc
adc
pop
es
pushf
shlb
cwtl
inc
testl
leave
xlat
lcall
popf
imul
outsl
ds
and
sub
and
cmp
cmc
xchg
scas
not
mov
sub
and
ljmp
loopne
cmp
shl
xchg
bound
push
cld
mov
dec
sbb
mov
jg
jb
xchg
xor
add
jbe
jo
fistpl
arpl
movsb
lds
mov
jp
dec
xor
add
mov
push
dec
pop
push
xchg
int3
nop
lcall
decl
rcll
jb
xor
pop
mov
pop
push
xor
fcoml
mov
jmp
push
cmp
and
int
out
cmp
push
xchg
outsl
aam
xor
in
or
stc
cmc
mov
jg
in
jp
inc
jge
cli
push
jae
xchg
shrl
test
jb
outsl
call
mov
cld
sti
mov
jecxz
xor
adcl
dec
pop
rcrb
sti
sbb
pop
lods
ljmp
dec
scas
je
lock
xor
stos
aad
repz
aas
in
cmpsl
jle
xchg
mov
pop
cld
mov
nop
ret
test
bound
scas
xchg
mov
movsl
jne
into
ljmp
std
or
mov
cmp
inc
daa
pop
addr16
cmp
in
adc
xchg
rcr
jo
stc
cmp
jmp
imulb
arpl
mov
divl
jae
icebp
insb
fldenv
jle
lds
xchg
add
fidivl
or
and
cmp
into
cmc
sub
sub
jecxz
test
mov
ficompl
popf
fscale
xor
aas
insb
mov
pop
jmp
bound
dec
leave
jmp
lds
mov
frstor
call
ja
sbb
cmp
xchg
sub
mov
jne
je
fists
imul
cmpsl
sub
pop
jns
mov
rolb
sub
xor
std
ljmp
xor
stc
and
mov
ljmp
push
rdpmc
xchg
jg
rolb
dec
jp
rcll
jo
adc
adcb
jno
cmp
mov
push
cmpb
fcom
add
adc
jp
mov
xor
xchg
lds
xor
xlat
test
jo
add
xchg
shlb
out
test
jle
dec
roll
rorl
mov
fsubrl
mov
sub
arpl
mov
push
adc
daa
adc
sarb
in
mov
adc
test
xor
subb
cltd
movsl
aad
jnp
fisubl
jne
mov
or
test
aam
xchg
sub
in
pop
insb
push
int
xchg
sbb
push
cmp
clc
pop
mov
mov
les
jp
aaa
scas
xchg
fs
jge
pop
lods
sub
dec
mov
push
fnstcw
cmp
mov
inc
or
mov
inc
adc
or
out
jmp
dec
ret
fmuls
inc
and
test
or
les
cmp
aas
dec
lahf
fsts
mul
ror
scas
mov
cli
fidivrl
lea
aas
and
pop
cld
repz
pop
and
stos
fwait
and
ljmp
and
je
das
jno
push
xor
pmaxsw
loop
xchg
std
lret
jp
mov
out
xchg
xor
int3
loop
sahf
jae
mov
push
inc
arpl
ret
sub
push
mov
xchg
fnstcw
fcmove
push
mov
imul
lret
or
push
cmpsl
pop
cmp
mov
dec
arpl
sub
cmp
dec
cmp
push
pop
inc
jo
sti
ss
and
sub
push
inc
in
fwait
mov
orl
int3
sbb
mov
cmp
adc
imul
in
sub
cmpsl
pop
ljmp
inc
and
jo
sbb
sub
dec
push
and
jae
mov
inc
dec
inc
jmp
mov
ret
loopne
int
jnp
mov
pop
cmc
std
fnsave
push
lea
and
dec
jge
and
es
fldl
lret
ljmp
repnz
dec
in
sar
cltd
ficoms
sub
jo
das
insl
inc
leave
pop
xchg
inc
cmpsb
lea
dec
jmp
repnz
jbe
xchg
push
outsl
std
dec
xchg
or
jl
subb
jo
fcoml
adc
cmp
jmp
xorb
mov
jecxz
jae
dec
pop
add
out
push
mov
es
push
add
inc
mov
lock
push
ror
or
test
jb
lods
pop
sbb
adc
dec
add
lahf
testb
into
fsubp
xor
pop
je
dec
data16
inc
xchg
xlat
js
cmp
into
mov
loope
sub
lea
jae
inc
mov
push
pop
movb
addb
cmc
xlat
leave
stos
dec
pop
push
xchg
push
cmp
pop
cmc
js
cmpsb
popf
cmp
rcr
sar
in
ljmp
or
nop
sbb
bound
pop
sub
test
fisubrl
sub
lods
lods
sub
push
or
sbb
sbb
gs
and
xor
push
gs
inc
filds
add
arpl
dec
ret
pop
xor
jp
sbb
pop
push
loopne
or
mov
js
xchg
scas
mov
pushf
lcall
test
or
push
push
adc
jno
xor
cmpsb
xor
mov
mov
xchg
xchg
mov
loopne
dec
loope
add
push
in
sbb
cmpsl
call
or
xchg
gs
mov
movsb
scas
enter
pop
mov
mov
movsb
sbb
adc
push
mov
movsl
dec
xchg
psllq
cmp
cld
push
pmulhw
repnz
and
push
stc
nop
push
sahf
jb
andl
and
push
test
in
lret
adc
addr16
mov
or
mov
add
test
iret
int
jle
xor
faddp
and
js
add
ja
imul
fldl
or
sbb
fs
test
mov
push
iret
in
popf
jo
mov
out
cwtl
leave
cmp
clc
insl
cmc
stos
push
cmpsl
in
add
cmp
or
imul
mov
hlt
inc
fcomp
dec
rclb
hlt
pushf
jmp
xchg
repnz
lret
jnp
in
push
dec
push
jmp
add
aad
loopne
out
insb
fiadds
out
inc
dec
daa
dec
cmp
sarb
lock
sbb
jmp
adc
jae
ficoms
pop
mov
jl
cs
mul
cmpl
jle
aam
adc
mov
inc
pop
add
mov
push
into
add
lret
enter
or
imul
dec
arpl
enter
inc
dec
inc
dec
arpl
inc
aaa
adc
xor
mov
movsb
fsubrl
dec
jl
scas
dec
xor
pop
lods
xor
fldenv
fnstenv
ret
jle
rorb
pop
xchg
jns
insb
movsb
jl
stc
scas
push
pop
ljmp
or
insl
add
icebp
aas
dec
add
cld
in
rcrb
and
mov
add
icebp
fs
aas
inc
rcr
push
push
or
xor
test
outsb
inc
mov
pop
sbb
push
and
jge
les
iret
sahf
ds
xchg
dec
sub
push
xchg
rol
mov
sbbb
int3
inc
orl
in
aas
and
and
push
jl
pop
jne
loop
loope
mov
bound
int
sbb
jmp
aam
les
xchg
sub
xor
push
int
sbb
test
dec
add
mov
mov
rol
insb
lea
dec
pop
push
decl
mov
dec
adc
jno
fadds
push
gs
dec
xor
sahf
xchg
scas
mov
jnp
sbb
mov
add
in
and
mov
sarb
mov
hlt
xor
lock
loopne
or
stos
dec
lcall
lock
mov
pop
lcall
inc
lret
mov
dec
mov
cs
mov
cmc
cmpsl
rcl
lods
dec
sub
cmpsl
xchg
dec
sub
flds
add
ret
ds
sbb
jp
and
sbb
inc
pop
inc
addr16
cmp
repz
cld
subb
sbb
xchg
in
dec
mov
enter
movsl
mov
fdivl
fsubrs
rep
lahf
fdivrs
xor
out
stos
inc
fs
push
clc
hlt
lahf
cltd
out
fstpl
or
jge
push
adc
out
mov
mov
mov
cmp
jmp
cltd
pop
iret
les
pop
sbb
lea
mov
pop
pop
sub
and
xor
adcb
jns
int3
inc
in
psubusw
dec
and
ja
jo
adc
clc
add
mov
incb
in
mov
shrl
aaa
stos
mov
inc
adc
mov
out
or
les
out
mov
std
cmp
jge
fidivs
outsb
hlt
push
mov
push
daa
inc
sub
push
aad
test
gs
sub
or
mov
push
xor
inc
clc
lds
jb
mov
dec
push
leave
insb
pop
push
popf
xchg
mov
xchg
and
push
cld
enter
xchg
xchg
fbstp
sbb
imulb
in
addl
jnp
add
mov
cmpb
pop
shlb
dec
enter
and
and
pop
mov
into
xchg
ret
fucomi
push
insl
or
test
stos
imul
out
xchg
jbe
iret
pop
jnp
shll
scas
or
push
xor
pop
pop
mov
stos
cli
bound
and
pop
mov
push
mov
es
aas
daa
fxch
xchg
and
push
jp
ret
std
dec
sub
lea
ja
sarl
int
idiv
sbb
dec
aas
insb
add
outsb
or
jne
xchg
sbb
adc
sti
adc
pop
and
dec
xchg
dec
push
sub
or
in
test
add
or
mov
divl
nop
mov
push
pop
xor
cltd
scas
jae
xor
icebp
jne
xchg
dec
shrl
fstps
shlb
mov
mov
cmp
insl
cwtl
std
lcall
xchg
and
fiadds
cmp
push
movsl
repz
dec
jl
jmp
test
sbb
fcos
shlb
pop
add
pop
adc
lcall
fists
push
mov
or
mov
ja
popa
mov
or
shll
cmp
incl
out
or
cwtl
adc
and
bound
mov
push
pop
mov
lea
test
add
call
js
or
dec
jns
lea
das
inc
or
mov
and
mov
inc
not
decb
sub
jnp
add
stos
inc
inc
bnd
xor
xchg
insl
mov
iret
arpl
pusha
add
ds
mov
and
inc
mov
rcll
mov
lahf
cmp
adc
xor
cld
mov
stos
stos
inc
pop
mov
push
cwtl
sbb
mov
adc
sbb
hlt
ret
pop
jns
cltd
inc
aad
or
and
sub
pop
loope
adc
dec
add
popf
mov
xchg
addb
shrb
inc
into
xor
rolb
cmpsl
pop
or
sub
out
sub
xor
adc
or
cvtps2pd
adcl
out
outsl
clc
sbb
outsb
sub
imul
rolb
mov
cmp
fisubl
mov
aaa
pop
adc
lock
mov
xchg
test
frstor
mov
adc
popa
pop
pop
lahf
sahf
test
mov
pop
push
enter
test
filds
jb
or
xchg
sbb
stos
cld
repnz
add
test
push
gs
xchg
or
mov
popa
jg
jns
jnp
out
jae
pop
sbb
mov
in
xchg
cs
outsl
sub
xor
add
fisubrl
jmp
pop
imul
or
mov
ljmp
shrl
bound
xor
divl
idivb
lds
xlat
xor
push
insl
aad
cld
ja
cmp
lahf
pop
fadds
mov
mov
daa
notb
cmp
sti
sahf
fcomps
cmp
es
jp
mov
lret
pushf
pop
xchg
sarb
xchg
inc
push
mov
je
xor
int
shrl
pop
sbb
push
add
push
fadd
stos
push
jo
dec
gs
push
jns
sbb
add
test
jecxz
mov
inc
in
filds
xchg
pop
test
add
cmpsb
dec
sbb
repz
mov
fistpll
nop
std
and
add
inc
aam
mov
repnz
std
sbb
roll
dec
or
sub
xor
dec
xchg
jge
fwait
aas
xor
jae
ret
in
push
aad
mov
dec
jns
xchg
out
imul
stos
mov
mov
mov
fst
cmpsl
insb
mov
xchg
lock
mov
fisubl
inc
xorl
inc
or
into
testb
lods
ja
mov
int
sub
adc
cmc
lods
imul
repz
ss
test
pop
movsb
adc
dec
xchg
nop
jg
dec
rclb
enter
mov
add
jb
loopne
xchg
push
mov
sub
mov
mov
sub
cmp
jne
cmc
das
in
bound
int3
adc
mov
shlb
xchg
cwtl
mov
pop
cld
icebp
xchg
lret
push
mov
sbb
mov
popl
sarl
popf
jmp
pop
scas
mov
in
or
adcl
loopne
inc
cs
mov
icebp
fisubrs
clc
testl
mov
pop
sub
lcall
dec
mov
leave
js
xor
insb
and
adc
iret
add
push
xchg
fcomp
jno
cmpsb
js
or
es
xchg
mov
bound
mov
pusha
pusha
test
ss
enter
sbb
push
int3
adc
icebp
in
js
out
mov
mov
sahf
jae
sbb
insb
lret
lcall
xchg
pop
or
in
push
lea
pop
lods
inc
cmpsl
insl
and
fists
outsb
jle
mov
shl
dec
sarl
loope
add
and
clc
push
xor
fs
add
sub
sti
fimuls
xor
inc
stos
sbb
xor
inc
insl
sub
fisubrl
xchg
pop
inc
xor
jns
pop
jo
cwtl
inc
mov
vandnps
arpl
sahf
dec
push
jnp
pop
jle
mov
imul
js
jp
jmp
sbb
xchg
pop
in
lcall
insb
into
aaa
mov
jl
jb
and
loop
fidivrs
xor
mov
and
pushf
jbe
out
and
frstor
jle
ret
daa
test
cmc
mov
pop
jne
cmp
outsb
xor
scas
movsb
xchg
cmp
cmpsl
adc
lret
jno
mov
xor
pop
mov
sub
add
in
sub
fstpt
jmp
lea
lret
bt
scas
jp
inc
push
adc
incl
sub
mov
xor
mov
cmp
dec
mov
dec
enter
push
add
mov
cs
pop
push
xchg
scas
popa
call
scas
fbstp
stc
mov
in
dec
sbb
clc
add
or
sub
lahf
insb
or
mov
push
in
push
xchg
fsubrl
push
repnz
inc
sbb
imul
repz
jae
and
arpl
enter
cmp
mov
xchg
jbe
jo
cmp
imul
xor
lods
int3
mov
dec
insb
stc
jns
xchg
mov
les
mov
add
mov
jle
sarb
scas
ja
sbb
push
cltd
iret
fmulp
mov
sarl
aam
decl
lahf
enter
xchg
lock
shlb
adc
sbb
adc
fldcw
daa
dec
add
cmp
push
add
cmp
in
fmull
or
xchg
pop
cmpsb
mov
cmpl
inc
and
cmc
inc
outsl
add
cli
mov
into
repz
fwait
sub
and
fbstp
scas
outsb
cmp
mov
pop
dec
adc
jb
loope
movsb
push
xchg
notb
stos
mov
iret
shr
xchg
cmp
and
jb
loope
jnp
jae
cs
sbb
jecxz
add
push
and
cmp
je
bswap
and
scas
sbb
repnz
jge
add
xchg
sub
mov
jecxz
sub
scas
add
int
aam
mov
xchg
ja
rcr
inc
cmp
movsb
push
jmp
outsb
or
stc
mov
xor
sbbl
mov
inc
mov
inc
adc
xor
inc
imul
adc
stos
xchg
inc
xchg
popf
call
mov
imul
mov
pop
push
outsb
mov
or
mov
out
cltd
xor
into
adcl
jo
stc
rolb
fcmovbe
jl
pop
test
add
popa
lret
sbb
pop
xlat
lock
nop
iret
dec
je
lock
aam
inc
test
dec
jp
test
movsl
sub
fdivrs
daa
lret
sbb
pop
cmp
aam
sbb
std
xor
pop
dec
sbb
mov
rorl
sbb
xchg
lods
cmp
jae
and
call
fldl2e
je
jbe
subl
int
clc
push
enter
add
pushf
dec
mov
inc
mov
mov
insl
iret
and
mov
addr16
test
mov
mov
in
and
mov
sbb
jbe
sarb
cmpsl
das
adc
dec
lcall
xor
leave
jno
aas
add
push
leave
fnstenv
xchg
ds
dec
push
lret
pop
stos
js
loopne
adc
inc
push
push
aam
fidivrl
push
ljmp
add
xor
xor
sarl
inc
inc
mov
inc
cwtl
cmp
mov
xchg
push
cli
daa
movsl
push
cltd
xchg
arpl
dec
cmpsb
push
fldenv
outsl
xchg
fiaddl
scas
and
insb
push
addr16
shll
jge
inc
mov
sbb
sub
mov
xor
cmp
sbb
push
pop
std
push
mov
je
mov
lahf
mov
and
xchg
dec
cmpsb
pop
popa
or
loop
fs
push
jg
mov
hlt
and
ss
cmc
fs
outsl
aam
or
dec
insb
ror
mov
mov
pop
push
faddl
pop
test
gs
jnp
jne
test
ret
inc
repz
jnp
data16
add
mov
push
mov
add
and
pusha
aam
xchg
xor
mov
repnz
jmp
xchg
mov
ljmp
adcl
je
pop
aad
sub
mov
ret
adc
data16
out
pop
xor
mov
pop
mov
inc
cltd
inc
scas
stos
dec
and
shrl
jmp
ror
leave
addr16
cmp
jge
xlat
jge
mov
into
push
jb
cmp
sarl
gs
fstl
cltd
mov
jbe
mov
or
dec
push
insb
movsl
dec
push
sub
lcall
push
or
cmpsb
outsl
dec
jp
imul
sub
sub
inc
mov
jbe
sub
shlb
push
movsb
dec
lcall
adc
adc
mov
ja
adc
inc
loope
jmp
jl
std
jb
xor
xor
jb
rcr
cwtl
sbb
out
mov
mov
cs
adc
inc
inc
imul
test
lahf
pop
push
mov
xchg
pop
dec
stc
enter
cmp
aam
xor
cmp
xor
mov
lret
call
and
sbb
and
data16
sbb
xchg
insb
sbb
mov
sbb
xchg
loopne
insb
fistps
inc
testb
inc
ficoml
or
in
push
cmp
add
sti
push
fsubl
push
mov
mov
push
iret
xor
mov
add
scas
movsl
mov
xchg
add
aaa
call
pop
or
fists
mov
lret
stos
or
mov
adc
pop
push
ret
shrb
dec
adc
add
pop
fwait
mov
adc
add
push
sub
pop
repz
clc
mov
jno
lahf
or
dec
in
jle
add
mov
fsubrl
cmpsb
and
mov
popl
xorb
int
les
mov
outsl
inc
mov
js
leave
mov
sbb
xor
dec
jl
aas
cmp
stc
xor
cmpsl
insb
adc
ret
mov
mov
or
jnp
cltd
adc
out
cmp
mov
mov
mov
popf
jb
xor
in
jae,pt
inc
inc
addr16
jmp
jo
sub
cmpsb
push
push
std
dec
test
daa
les
and
adc
jno
xchg
pushf
into
push
outsl
dec
push
inc
push
jne
sub
scas
sub
add
aam
dec
xchg
mov
iret
les
push
mov
call
sbb
adc
add
pop
add
outsl
cld
add
fisttpl
inc
inc
inc
jl
fildl
pusha
cltd
mov
push
das
std
pop
ljmp
aas
test
fstp
adc
jo
nop
dec
xchg
mov
lret
aad
test
je
outsb
fildl
mov
aam
dec
test
gs
mov
fistpl
icebp
cmp
lds
or
add
push
pop
popf
jmp
roll
jae
js
icebp
cmp
add
cmpb
push
loopne
aam
mov
mov
jnp
cmpsb
xchg
xchg
mov
loop
daa
gs
cli
or
outsb
push
cs
loop
mov
add
je
sbb
or
outsl
add
jb
cli
lahf
push
cs
mov
adc
ljmp
test
cltd
call
xchg
rcrl
mov
sbb
std
push
enter
stc
ffree
aad
or
jnp
push
fstpl
cmp
cmp
aam
jns
lods
cli
andb
loop
cmpb
mov
jo
ret
sbb
jg
xchg
and
sbb
adc
jmp
xchg
sbb
xor
xchg
and
lods
mov
test
push
dec
cmpsb
jae
outsb
call
fadd
adc
mov
cmp
loop
pop
cmp
aad
jg
ljmp
sub
aaa
dec
js
iret
stc
lret
jo
aad
push
test
xchg
fs
pop
cmpsb
or
mov
mov
lret
and
daa
mov
mov
ds
mov
pop
aaa
push
xchg
mov
adc
pop
mov
inc
and
and
jp
mov
addr16
dec
loop
xor
jne
pop
adc
sbb
fistpl
push
lds
jno
inc
sub
mov
xor
aad
xchg
pop
or
aas
out
es
shrl
mov
imul
insb
inc
call
ja
arpl
insl
popa
rolb
mov
or
repnz
repz
dec
outsl
mov
or
and
flds
xchg
inc
cmp
aad
iret
lods
push
dec
mov
cmp
jo
jae
or
jle
ds
es
cli
mov
sbb
xor
push
sub
aas
cltd
xor
push
test
jl
gs
popa
xchg
hlt
cmpl
cld
jbe
mov
lret
sub
mov
xor
daa
aad
push
shrb
pop
push
jg
push
mov
test
fcomi
lods
mov
mov
bnd
push
pop
and
sub
lock
shlb
test
sub
pusha
adc
jne
sub
cmpl
pop
sbb
xchg
ffreep
rcl
dec
push
das
cmpsb
decl
sti
cmp
lock
aaa
roll
jl
repz
scas
stc
rsqrtps
mov
out
pop
icebp
mov
cmc
enter
jnp
adc
pop
add
push
arpl
andb
mov
sarb
movsl
scas
dec
fwait
jg
adc
jo
cmp
test
jnp
pop
push
and
mov
psubb
loopne
jmp
scas
mov
leave
dec
xor
adc
mov
enter
mov
cmp
push
lret
mov
sar
sbb
inc
andl
cltd
mov
lds
xchg
mov
out
mov
pop
push
icebp
mov
cmpsl
or
inc
mov
repz
pop
xchg
stos
and
addl
pushf
data16
ja
dec
jl
mov
adc
leave
lods
gs
movsl
lret
sahf
ja
pop
cs
sub
jge
repnz
cltd
push
jb
mov
ret
ret
adc
mov
sub
insb
enter
jl
in
sub
rolb
sti
cmpl
push
andb
sahf
stos
lods
or
jo
push
sarl
cmpsb
mov
clc
nop
mov
negl
fistpl
and
sbb
testl
mov
cmp
push
push
lock
and
push
xor
inc
fwait
das
adc
test
fs
pop
or
pop
add
push
cmc
fcoml
insl
test
pushf
xor
fsts
lock
jecxz
es
or
jo
mov
shlb
sub
jge
mov
loopne
inc
leave
push
sbb
addb
jg
mov
mov
fdivrs
iret
xchg
push
adc
pop
popa
mov
jmp
mov
push
es
mov
pop
push
xor
adc
xchg
lcall
xchg
pop
jne
movsl
pop
js
in
clc
inc
adc
adc
ss
jo
mov
dec
cmpsb
fs
mov
jl
jp
in
dec
and
dec
pusha
lods
jo
adc
rorb
insb
cmpsb
ficompl
repnz
sbbl
stos
jg
and
or
xor
int3
mov
jnp
dec
pushf
les
icebp
lods
paddsb
rclb
imulb
fdivl
pop
aad
jecxz
push
shrb
sub
pop
lahf
pushf
lds
gs
add
push
cmpsl
dec
ret
scas
mov
dec
rorl
mov
clc
imul
xor
jmp
mov
mov
add
xor
add
sbbl
jns
int
adc
mov
jl
inc
rolb
dec
ret
pop
inc
cmp
cmpsb
xchg
xor
aam
xor
sti
push
pop
add
jg
mov
insb
mov
dec
push
xor
std
or
out
push
test
pushf
mov
lcall
xchg
call
cmp
pusha
xor
mov
int3
fsubrp
cmp
hlt
icebp
pop
call
inc
andb
xchg
roll
xchg
jae
xchg
fs
lds
jge
movl
fdivs
mov
pop
arpl
xchg
sysret
xor
xchg
leave
pop
js
aaa
sub
and
cmpsl
movsb
out
sbb
adc
out
pop
sarb
inc
dec
mov
sub
imul
xchg
shlb
jmp
dec
cmp
push
ret
or
lret
mov
gs
pop
mov
outsb
mov
out
sub
nop
xor
hlt
sub
inc
jl
and
in
or
outsb
cmc
xorl
lock
cmpsb
xchg
outsb
lcall
lret
lods
cmp
cmp
fstpl
fstps
dec
jnp
jp
faddl
sbb
in
cs
push
xchg
cli
hlt
addr16
mov
lock
adc
stos
or
loope
dec
flds
insl
pop
lods
shl
inc
shlb
stos
in
roll
testl
mov
lret
outsl
jbe
popa
inc
mov
push
jbe
mov
ret
lret
les
mov
jmp
cs
adc
lea
lcall
and
pusha
nop
and
jo
push
xor
lock
repnz
js
push
pusha
dec
fstl
repz
je
imul
daa
ljmp
fldl
pop
dec
js
push
mov
cmp
lds
addr16
fiadds
mov
je
jne
or
fld
bound
jno
adc
push
daa
aad
mov
push
sub
pop
push
shrb
xchg
inc
fs
sub
lea
bound
add
push
adc
lret
repnz
add
fsubr
and
or
aas
iret
clc
shlb
jl
pop
mov
orb
mov
negl
idivb
stos
stc
mov
pop
cmp
out
cli
xor
add
pop
sub
push
add
xchg
inc
xor
sarl
cmpsb
aam
mov
xchg
mov
fstl
fcmovnbe
xchg
aad
mov
loope
jae
je
jb
push
mov
push
bound
jae
mov
mov
cltd
loope
sbb
dec
scas
ljmp
ret
xor
pop
mov
ljmp
mov
pop
xchg
ret
push
mov
xor
fildll
mov
adc
pusha
dec
or
movsl
popa
cmp
xchg
idivl
in
adc
inc
aas
inc
xchg
xchg
movsl
inc
sbb
push
and
and
out
fidivs
mov
mov
jmp
aas
idivb
sarl
out
call
adc
or
mov
and
add
xor
jecxz
scas
pop
rcrb
andb
lock
adcl
inc
push
mov
mov
cmpl
cmp
mov
mov
std
lahf
push
dec
ja
adc
mov
ss
call
mov
cmp
pop
ret
dec
nop
rcll
test
sub
mov
sti
les
aam
and
or
and
movsl
ss
imul
mov
sbb
cmp
jp
out
inc
adc
sbb
mov
inc
movsb
imul
movsb
mov
jmp
sub
data16
movsb
add
and
adc
or
lods
inc
enter
push
inc
adc
jl
jg
aaa
aaa
insb
push
popf
dec
pusha
nop
std
cmpl
es
xor
outsl
sub
pop
test
ja
xor
lcall
cwtl
aam
mov
push
jle
dec
mov
jb
adc
inc
jmp
and
aad
xchg
out
dec
dec
mov
pop
and
imul
cli
push
add
mov
nop
mov
pop
lods
jae
adc
pop
xor
insb
push
scas
int3
pop
inc
and
stos
sbb
in
pop
ljmp
repnz
mov
fwait
aas
sbb
rorl
mov
addr16
jp
and
push
dec
aad
sti
xor
pop
cltd
cmp
ds
ds
cmpsb
std
ret
pusha
sbb
jne
rorb
jmp
iret
pop
xchg
aam
cli
inc
decw
mov
mov
push
cmpsb
push
scas
lods
je
mov
jno
inc
stos
jle
jo
sub
add
addr16
out
jmp
mov
insb
stc
adc
mov
imull
xchg
pop
push
imull
xchg
jle
mov
loopne
rclb
addb
push
xor
popa
mov
in
sbb
data16
insb
stc
mov
xlat
leave
cmp
xor
out
test
adc
inc
out
or
mull
jns
push
cmp
addb
outsl
sbb
xor
adc
or
add
cmp
lcall
test
push
mov
and
jo
jmp
mov
icebp
test
xor
mov
cmpl
test
movsb
cld
xchg
mov
cltd
cwtl
test
sahf
dec
mov
stos
push
mov
adc
xor
and
xor
xchg
in
mov
pop
push
ss
pop
movsb
add
xor
jns
add
loopne
mov
sub
lcall
fiaddl
stc
sbb
and
push
imul
jp
popf
jbe
xchg
xor
sbb
shll
in
xchg
xchg
fcomi
mov
jo
lret
sbb
jbe
push
subl
movsl
jp
scas
jmp
mov
lods
pop
pop
jbe
lret
inc
mov
xchg
sarl
mov
xchg
xor
hlt
inc
or
mov
cmp
sbb
das
xor
mov
aaa
movsl
lret
dec
lcall
into
lds
lods
sbb
fidivrl
and
cmpsb
add
pop
cmpl
jle
dec
sahf
mov
jmp
or
lock
push
inc
adc
jge
or
ret
cmp
add
cwtl
and
sub
xchg
jmp
push
pop
loop
out
push
adc
shlb
adc
into
cmp
pop
cltd
ljmp
stos
jmp
sbb
addr16
dec
mov
les
pop
jmp
andl
or
sahf
addl
ss
cli
sub
pusha
ret
adc
fldenv
test
mov
pop
sbb
sub
add
pop
cmp
frstor
push
ja
movsb
push
sub
outsl
mov
std
mov
or
mov
aaa
sbb
inc
or
add
mov
sub
add
jmp
out
jbe
repz
cli
divb
xchg
jne
test
movsl
shll
pop
mov
dec
adc
push
imul
movnti
jecxz
and
stc
subb
and
add
pop
nop
icebp
pop
dec
pop
pop
push
and
daa
pop
shrb
pop
in
nop
paddusw
mov
jmp
mov
cmpsl
ljmp
jl
jns
sbbl
adc
jl
mov
rorb
mov
sub
jmp
out
push
jns
add
mov
mov
add
inc
push
cwtl
aas
mov
sahf
mov
mov
mov
in
xor
mov
test
out
mov
mov
fsubrs
lods
jl
pop
dec
pop
aaa
jno
inc
pop
adc
mov
ljmp
mov
push
or
pop
test
or
movsl
mov
shr
leave
into
bound
xchg
mov
push
mov
sbb
push
xor
in
inc
sbb
sbb
stc
addb
xor
dec
pop
mov
test
in
stc
mov
dec
or
fisttpl
or
ja
sbb
push
or
and
jae
and
test
and
xchg
xchg
andl
fisubl
out
dec
std
test
mov
cli
repz
in
outsb
outsb
or
in
xchg
repz
icebp
or
lock
ficompl
xor
inc
test
scas
int
push
in
jnp
and
fcomps
in
adc
in
ja
enter
notb
or
jb
inc
shl
dec
jb
pop
jne
push
add
addr16
out
hlt
pop
ss
data16
call
lahf
je
or
in
adc
rolb
pop
pop
sub
adc
sbb
push
xchg
ljmp
jns
in
adc
inc
jno
mov
je
xchg
pushf
jg
add
mov
sbb
testb
loop
lea
bound
xchg
push
pushf
inc
ss
push
and
or
stos
and
orb
xchg
insl
popa
inc
sub
popf
jg
jnp
std
add
das
popa
fildl
lods
push
out
push
sub
ja
in
in
fdivl
cwtl
mov
cmp
push
fwait
cli
mov
hlt
jp
add
popf
inc
nop
lock
add
sub
lods
push
les
repnz
push
outsb
pop
mov
loopne
les
in
jge
and
jl
inc
rcl
or
inc
sahf
inc
sarb
loopne
ret
in
aaa
repz
outsb
lods
pop
bound
mov
mov
jmp
sbb
xlat
pop
call
and
dec
movsl
andl
loop
xor
pop
cmp
adc
insl
clc
js
test
ljmp
in
adc
sbb
and
xchg
cmpb
mov
jo
jne
fbstp
xchg
or
mov
mov
fwait
jg
imulb
xchg
adc
add
cli
sub
js
push
jno
jo
dec
rcrl
ret
lds
gs
scas
lret
or
sbb
jbe
inc
push
clc
xchg
scas
ret
mov
add
cli
mov
repnz
outsl
lret
jp
sub
pop
out
hlt
imul
mov
sub
test
out
sbb
xchg
dec
lea
mov
bnd
lds
ljmp
inc
andb
pop
lods
add
pop
jl
dec
sbb
push
fcmovb
xchg
cmp
movsb
pop
push
xchg
cmpsb
jle
jne
dec
pop
and
clc
es
icebp
mov
ror
mov
daa
add
jbe
mov
push
shlb
push
mov
sbb
adc
jp
ret
push
out
sbb
xor
inc
ljmp
roll
ficompl
outsl
out
pop
negb
in
cwtl
sbb
arpl
cmc
jp
in
fiadds
mov
sub
ja
xor
add
rorl
mov
insl
sub
mov
je
out
inc
cmpsl
mov
dec
dec
adc
mov
xchg
jmp
testl
inc
pop
sbb
out
jb
or
ficoml
in
adc
lahf
test
test
subb
ds
jg
fldcw
xor
jle
xchg
mov
pop
outsb
or
pusha
jne
adc
mov
loope
xchg
clc
jae
cmp
xor
and
xchg
pop
pop
movsb
push
loopne
jmp
negl
pop
sub
push
and
int3
mov
push
inc
in
scas
fstps
movsb
fdivrl
jp
fidivrl
mov
jp
into
pop
pop
imul
fndisi(8087
lock
inc
fnstenv
fisttpll
pop
jno
mov
rcrl
xor
lds
out
xchg
xlat
cmp
lds
fistps
pop
hlt
loopne
cmpsl
adc
jecxz
push
mov
lcall
sub
out
sti
subb
pop
gs
test
xchg
cltd
xor
outsl
sub
mov
movsl
jns
jg
fs
cmp
in
call
jno
js
hlt
sub
cmp
adc
ljmp
lods
xchg
nop
xchg
xor
cmp
jecxz
xchg
sarb
jae
das
dec
insb
adc
popf
or
scas
mov
push
pop
imul
arpl
sub
cmp
fiadds
mov
adc
loop
outsl
cmp
pop
sbb
sub
mov
mov
xchg
insb
stos
negl
adc
add
int
adc
push
adc
push
and
incl
movsb
in
cwtl
jg
inc
push
push
cld
and
add
aas
push
mov
sbb
in
popf
jle
insl
jp
insb
or
cli
xchg
iret
mov
and
cld
push
pusha
faddl
cmp
push
scas
jl
fldpi
cmp
pop
xchg
pushf
or
bnd
insb
xor
jl
popa
outsb
out
adc
out
push
cltd
xchg
out
imul
fcmovnb
jecxz
pop
mov
out
inc
inc
sti
xor
mov
cmp
sub
cmp
enter
scas
leave
mov
inc
daa
cs
or
cmp
and
mov
mov
xchg
aam
fisubl
sbb
push
cmpsl
mov
jno
push
gs
movsb
and
pop
xchg
jns
idivb
and
js
std
add
scas
add
lds
inc
push
mov
xor
pushf
sbb
cmp
push
mov
mov
enter
sbb
clc
mov
ljmp
adcl
ds
add
lock
mov
jmp
fcom
outsl
stos
in
mov
dec
xchg
shlb
divb
cmc
jmp
insl
popa
in
or
dec
push
jl
dec
mov
popa
xchg
dec
dec
jne
lods
es
xchg
test
inc
adc
inc
fiadds
fstpl
sbb
or
adc
push
dec
fldenv
test
sub
aam
in
jae
pop
hlt
sbb
push
mov
jbe
mov
adcb
xchg
sub
mov
dec
add
jb
jmp
mov
mov
sub
fcmove
popf
ss
mov
icebp
int3
testb
hlt
or
sahf
aas
lret
push
sub
cmp
sub
push
xor
stc
adc
pusha
adc
stos
les
das
mov
or
jle
jg
out
es
lods
mov
cwtl
mov
xchg
daa
nop
xchg
rol
cli
je
cmp
mov
jp
cmp
std
mov
imul
repnz
testb
sti
outsb
add
sbb
xchg
and
cwtl
xor
xor
addl
push
cmc
mov
out
mov
mov
hlt
mov
push
mov
pop
divl
rcrl
inc
cwtl
push
faddp
scas
cld
add
jmp
pop
mov
dec
xor
or
cs
xchg
test
inc
xchg
jecxz
fnstcw
xchg
aaa
lods
sbb
jg
in
dec
repnz
xchg
or
push
pop
xchg
pop
stos
ret
jecxz
add
mov
jp
cmc
lret
mov
pop
cmp
fstl
mov
xchg
push
adc
pop
scas
in
sub
aad
sub
mov
sbb
cmp
inc
jns
fcomps
popf
testb
add
mov
pop
mov
fimull
xchg
jmp
inc
add
lods
mov
and
sub
xchg
mov
sbb
cmpsw
push
cmp
in
xchg
or
loop
push
cwtl
arpl
mov
jmp
dec
and
xor
mov
sbb
push
adc
push
jb
add
subl
loop
lea
adc
adc
jle
mov
icebp
push
mov
out
rcrl
fwait
or
push
inc
pop
leave
jmp
flds
pop
outsl
dec
and
adc
dec
cli
xchg
adc
lret
es
sub
stos
pop
mov
cmp
imul
sbb
mov
jnp
or
int
adc
push
pop
or
fiaddl
movsb
in
pop
shr
pop
insb
pop
xor
call
loope
jbe
pop
mov
out
mov
jne
xor
add
rclb
dec
fldcw
jno
or
xor
out
jmp
in
pop
xchg
stc
imul
lahf
xor
stc
xor
adcl
mov
gs
jne
jno
enter
pop
cmp
int
data16
test
in
sbb
jl
sbb
jle
jns
or
add
fwait
ret
rorb
cli
int
popa
xchg
sbb
inc
fs
stc
lock
push
cmp
or
jge
mov
imul
into
pop
or
add
call
add
pop
and
mov
and
push
jo
mov
data16
dec
mov
ss
mov
mov
fcom
aas
in
or
push
xor
mov
lods
sub
add
adc
sbb
fldt
push
xchg
ficompl
add
std
add
jecxz
popa
and
sti
inc
mov
hlt
icebp
xchg
insl
arpl
in
inc
jnp
add
jae
sbb
cltd
in
push
push
xchg
push
add
sbbb
push
inc
adc
repnz
out
std
in
movsl
jo
mov
icebp
aam
sub
mov
inc
mov
aad
or
das
lahf
sbb
push
lret
inc
inc
mov
xchg
rol
lds
aam
cmp
std
and
daa
ljmp
out
in
cmp
ror
xor
mov
test
in
rcl
or
rorl
inc
mov
push
adc
testl
jo
enter
les
fwait
and
push
jge
cmc
jns
pop
ss
leave
mov
pop
add
or
pop
les
or
test
or
xchg
push
ja
dec
jae
out
int3
cmp
lea
ljmp
movsl
lcall
inc
jb
enter
inc
div
lret
xor
mov
testl
lret
cmc
xchg
pop
gs
jno
mov
scas
mov
add
sbb
xor
pop
jae
inc
icebp
jmp
jbe
inc
fiaddl
inc
inc
xlat
outsb
fsub
mov
icebp
xor
mov
sbb
sub
jmp
nop
xchg
cmp
sub
leave
cmp
cmc
aas
and
push
cmp
xor
xor
test
xor
lea
cmp
std
fcomps
shr
jb
insl
mov
cmpsl
jae
push
mov
fstl
ficoms
xchg
or
movsb
push
mov
xchg
jg
leave
dec
sbb
scas
shr
and
mov
out
lret
xchg
movsb
lock
nop
incl
mov
or
loop
insl
les
add
stc
sub
mov
and
jbe
and
lds
aad
adc
scas
cwtl
cli
orb
mov
ljmp
xchg
add
out
data16
sahf
push
rorb
ds
mov
add
test
push
fnstsw
divl
out
lahf
imulb
in
call
icebp
filds
jge
leave
or
pop
scas
popa
mov
popa
xchg
xor
in
inc
rclb
sbb
test
add
cmp
inc
xor
outsl
jle
jnp
clc
std
jns
pop
sbb
mov
outsl
jbe
add
push
xchg
push
clc
mov
repz
nop
dec
imul
inc
cmpsl
mov
mov
pop
pop
movsl
out
mov
stos
enter
add
inc
push
sub
inc
rcr
imull
add
push
inc
dec
sbb
adc
lret
or
int
dec
out
or
or
sbbb
xor
sub
mov
call
dec
test
and
mov
pop
fdivrs
stos
push
push
test
std
fcmovnbe
loopne
xchg
or
rcrb
add
test
dec
lahf
lds
push
aam
test
ret
loope
cmp
aam
pop
jno
loope
mov
lods
imul
popa
push
inc
cltd
dec
shrl
fimull
sub
xchg
jecxz
int3
add
movl
xchg
filds
xor
pop
stos
fwait
pop
xchg
cmp
idivl
push
push
js
add
mov
jge
bound
loope
add
dec
hlt
lahf
xor
xchg
jecxz
ret
or
and
sbb
xor
push
ja
jbe
data16
xor
bound
ret
cmp
pusha
addr16
pop
or
hlt
sbb
mov
daa
arpl
cmpsl
sbb
ja
ds
fbld
dec
cltd
and
pop
push
push
or
hlt
dec
and
cmp
aas
stos
cmc
push
mov
pushf
test
in
cmpsl
jp
test
std
add
or
mov
sub
dec
leave
cltd
push
push
in
xchg
fs
ds
imul
ret
iret
xchg
mov
or
ljmp
repnz
testl
jl
xorb
mov
and
mov
jmp
xchg
push
stc
dec
pop
and
cmp
das
xor
dec
push
in
add
rcl
aaa
nop
or
or
adc
and
inc
jmp
repnz
into
fisubs
push
stos
lea
mov
push
iret
and
adc
mov
mov
mov
stos
pop
pop
loopne
jge
mulb
cmp
movsl
adc
adc
test
jbe
sbb
iret
pop
fadd
adcb
xor
jno
insl
jecxz
rcr
lea
pop
mov
int3
test
arpl
lods
sbb
and
sbb
dec
movsl
or
add
test
mov
movsl
ficoms
arpl
loope
mov
push
sub
aas
cmp
cmc
les
in
mov
mov
push
js
out
sbb
mov
cwtl
pop
jno
cmp
test
push
aas
push
or
jnp
xchg
popf
jb
lahf
sub
inc
in
jmp
movsb
fcmovb
sub
mov
aad
fisubs
loopne
xchg
jae
mov
jo
test
jle
xor
fcmovnbe
add
mov
jle
pop
cmp
in
movsl
add
psrld
mov
jb
outsl
pop
rorb
xchg
loope
push
test
adc
sub
inc
nop
fisubrl
adc
adc
dec
out
push
jnp
pusha
and
push
leave
jmp
jecxz
arpl
xchg
clc
lret
jmp
push
push
inc
int3
shll
stc
mov
xlat
sub
jbe
mov
js
mov
mov
cmp
jbe
jmp
addr16
push
mov
outsl
adc
shrb
cmp
mov
into
add
jne
add
das
icebp
cltd
xchg
pop
adc
lods
int
ja
mov
cmp
xor
std
add
int
xchg
inc
mov
jp
lods
in
sub
stc
jno
enter
xchg
pop
dec
into
out
adc
cmpsb
movsl
mov
cld
bound
add
xor
inc
stos
sbb
stos
pop
fidivrl
or
scas
test
aam
or
pop
lcall
std
inc
fldt
adc
sub
hlt
cwtl
cmpsl
xchg
enter
pop
add
cmp
cmp
out
cltd
popa
and
add
xchg
mov
mov
daa
sbb
lcall
jo
push
push
aad
mov
and
ret
clc
ja
sub
xchg
mov
aam
sbb
xchg
shrb
jmp
push
testb
std
jno
pop
jp
gs
out
jmp
mov
rorl
mov
sti
pop
pop
test
push
pop
xlat
aaa
jge
pop
idivb
push
mov
fisubl
inc
popa
ljmp
xlat
or
mov
push
xchg
cwtl
pop
sub
jns
inc
mov
scas
inc
lcall
mov
fildll
repnz
pop
dec
out
pop
mov
mov
imulb
aad
dec
adc
inc
rcr
testl
and
push
les
sub
test
and
std
insb
call
loopne
add
mov
xor
cltd
xor
add
pop
jns
gs
cmp
outsl
xchg
lahf
int3
pop
mov
and
pop
lahf
and
and
imul
jg
jge
subl
jle
int3
xlat
fidivrs
daa
mov
mov
inc
push
mov
jecxz
lods
movsl
movsb
hlt
sarl
mov
int
imul
jae
add
inc
fbld
nop
mov
adc
js
mov
test
shlb
cli
jnp
faddl
xor
dec
and
test
int3
xor
or
xor
cmp
cmp
xor
jecxz
pusha
cmpsl
mov
sub
sub
pushf
outsl
cmpsb
jne
or
test
mov
adc
mov
jno
cld
pop
fidivrs
cld
filds
lcall
mov
ds
roll
xlat
inc
mov
dec
inc
or
adc
add
pop
adc
pop
outsb
enter
and
adc
popa
lret
inc
mov
jmp
mov
xor
test
scas
das
fstpl
in
fildl
jo
std
jo
cs
add
loop
imul
lods
pop
in
dec
mov
pop
in
mov
xchg
outsb
mov
mov
mov
dec
mov
inc
xor
cmp
addr16
push
iret
sbb
jecxz
shll
ret
imul
and
and
xchg
in
enter
push
fwait
cmpsl
scas
pop
clc
repnz
xchg
scas
jp
leave
mov
sub
inc
imul
loopne
mov
popf
xchg
repz
push
test
cmpsb
sub
jmp
sahf
repz
loope
shll
aad
sub
pushf
cmpsl
mov
xlat
push
pop
add
loope
xchg
push
or
inc
sbb
adc
test
jae
imul
stos
scas
shll
push
sub
pop
repnz
sar
mov
push
loop
inc
jl
or
xor
repz
sbbl
sub
popa
xorb
lock
xor
mov
mov
shrb
add
clc
cmp
aam
mov
xor
notl
popf
movsb
inc
shll
cmp
in
out
ret
pushf
imul
dec
shl
sub
and
sbb
scas
outsb
mov
icebp
ss
addb
and
dec
cli
pop
rcrl
lds
lds
xchg
cwtl
sub
or
xor
mov
mov
mov
fwait
iret
pusha
mov
pop
adc
xchg
es
dec
pushf
xor
mov
mov
divl
in
add
xchg
popf
outsb
or
and
movsb
dec
push
std
js
or
push
xchg
xor
xchg
push
jnp
xor
out
dec
faddl
mov
bound
movsl
adc
sbb
les
arpl
mov
fidivrs
push
pop
cmp
and
stc
xchg
jno
hlt
sub
sub
mov
or
cmp
addr16
mov
ret
mov
inc
xor
sti
pusha
xor
add
push
into
jg
add
inc
std
adc
push
fst
adc
in
scas
add
in
rolb
test
pop
jbe
and
adc
jns
aam
mov
push
mov
jns
and
sub
xor
jb
mov
xor
push
stc
push
test
test
adc
cmc
mov
roll
push
mov
sub
call
cmpb
adc
jp
repz
xchg
popf
leave
popa
jp
in
pop
cmpsb
add
mov
insl
cs
lods
mov
aam
cmp
outsl
xchg
scas
adc
or
in
outsb
out
jle
pop
ror
sbb
out
push
add
cmp
mov
push
scas
pushf
addl
push
ret
sub
cs
mov
or
cmp
xchg
cmp
test
xchg
test
data16
mov
rolb
outsb
cmp
arpl
adc
arpl
repnz
std
cltd
add
mov
mov
cmp
gs
mov
lock
mov
mov
push
push
call
and
ds
pop
cmp
sbb
push
lret
or
jns
loop
sbb
lea
push
out
mov
inc
add
inc
sub
add
pop
jae
mov
fidivs
jmp
or
and
jle
sbb
leave
mov
pushf
cmovne
dec
dec
imulb
in
jno
jmp
sub
lret
mov
or
movsl
and
nop
daa
adc
mov
mov
xchg
sbb
imul
daa
ds
sarb
call
sub
and
cmpb
mov
push
in
ret
jmp
add
cmpsl
jne
inc
or
push
xchg
add
adc
push
scas
push
xchg
xchg
mov
mov
push
xor
shlb
jb
inc
leave
inc
mov
xlat
sbb
or
frstor
lods
jge
push
ss
movsl
adc
push
imul
int
xchg
movsl
cmp
xor
sub
icebp
jg
jmp
dec
mov
js,pn
lds
cmc
and
rcrl
adc
xor
push
adc
inc
jae
sub
fsts
xorb
mov
mov
stc
jns
lret
push
lcall
cmp
push
mov
mov
sbb
adc
mov
and
in
jno
or
mov
mov
test
mov
ljmp
xchg
js
mov
and
imul
cmpb
dec
ja
push
enter
cltd
arpl
adc
orl
shll
in
add
xchg
add
cs
pop
xor
mov
pop
stos
xor
push
mov
ds
arpl
or
repz
xor
std
dec
sub
push
repnz
iret
cmc
xchg
mov
pop
movsl
fwait
and
aaa
sub
xchg
hlt
in
nop
or
mov
popa
cli
sbb
shl
filds
clc
out
aas
stos
and
jnp
push
sbb
daa
ljmp
dec
jo
mov
xlat
in
lcall
push
repnz
jno
lcall
and
call
cmp
mov
add
jle
sub
xchg
out
mov
in
pop
cmpsl
outsb
and
mov
push
lods
mov
jle
icebp
push
out
adc
pop
pusha
and
shlb
fsubr
insl
bsf
mov
inc
cmp
aas
popf
add
xor
rcll
out
stos
push
add
bound
and
jle
cmp
in
ja
idivl
or
pop
mov
mov
adc
jg
mov
add
stos
dec
cld
insb
dec
stos
xchg
mov
pop
cs
mov
xchg
mov
fiaddl
mov
sub
into
aas
cmpsb
xor
into
int3
sbb
rolb
fmuls
jno
dec
mov
outsb
aad
pop
ss
sbb
xchg
lds
movsl
push
lods
scas
pop
mov
pop
push
xor
incl
xor
mov
mov
push
shrb
call
mov
fstps
addr16
cmp
dec
pop
push
dec
imul
push
cmp
das
in
insl
movsl
int
push
in
cmp
test
jl
push
inc
sbb
sub
iret
cmpsl
cmp
rclb
in
cmp
push
inc
pop
xor
mov
xchg
pusha
sbb
in
iret
dec
repz
mov
cmc
dec
xchg
and
rorb
add
jae
jo
push
mov
sbb
ja
push
mov
mov
xor
cmp
add
enter
adc
jl
or
test
and
shr
filds
fs
mov
dec
pop
mov
jns
sbb
or
aam
rcr
xchg
xchg
mov
and
lcall
jg
cld
mov
xor
xchg
cmp
xchg
mov
sub
mov
jns
and
gs
jae
lcall
cli
mov
repz
sub
cltd
push
pop
jns
xchg
loop
mov
mov
mov
jle
cmp
decl
addr16
int3
dec
mov
push
cmp
sub
jb
mov
dec
ja
mov
cmc
jmp
std
bound
in
pop
mov
mov
ja
sbb
sub
or
addl
stc
frndint
xchg
mov
xor
mov
cmp
or
mov
in
mov
dec
lret
test
sub
leave
jne
xor
and
movsb
cmc
xor
addr16
inc
bound
fiaddl
sub
xchg
into
cmp
add
ja
std
push
iret
adc
dec
xor
cmp
lahf
gs
ror
enter
pop
std
int3
adc
sti
sub
es
cmp
pushf
loop
mov
add
mov
insb
cwtl
sub
insb
xchg
sbb
jo
sbb
inc
sub
fsts
out
popa
into
and
dec
add
or
dec
lds
pop
into
cmp
pop
cwtl
push
test
stos
push
sub
push
aas
mov
pop
and
mov
lahf
sbb
lss
inc
cmp
das
clc
hlt
pushf
mov
pop
mov
or
movsb
mov
cmc
and
cmp
add
repnz
mov
push
idivl
imul
sub
cmp
ret
mov
fs
lcall
lock
pushf
cmp
out
lret
mov
cli
lret
jge
cmp
cmp
ljmp
mov
add
mov
mov
mov
das
sbb
dec
out
push
and
mov
cmpsl
loope
xchg
xchg
cmpsl
cli
mov
dec
in
cmpsb
sub
xorb
pop
sar
xchg
aaa
push
xchg
sbb
js
fildl
nop
sbb
pop
out
cltd
dec
mov
and
mov
pop
jb
mov
pusha
cwtl
or
icebp
push
jle
xchg
jnp
cwtl
pushf
pop
and
mov
jmp
inc
imulb
in
jns
mov
inc
enter
push
into
push
adc
sbb
addr16
mov
mov
adc
stos
mov
xchg
nop
and
fnstsw
fadd
jnp
push
xor
movsl
es
xor
cmp
rorb
sub
pushf
aad
push
push
test
out
je
cmp
mov
std
repnz
sub
stos
imul
mov
pushf
aaa
scas
pop
mov
sub
pop
adc
mov
cld
pop
test
mov
ljmp
and
adc
xor
filds
decl
stc
dec
je
or
pop
les
inc
jg
adc
fldcw
pop
mov
pop
fs
adcl
add
pop
mov
rcr
inc
and
add
push
mov
push
bound
push
les
lret
cmp
adc
sti
clc
cwtl
ljmp
jg
out
xor
sub
xchg
jg
inc
fidivrl
cmp
cmp
out
into
lret
cmp
jne
add
xchg
pop
push
aaa
lods
cmp
rorl
push
push
in
and
out
movsl
xrelease
iret
lock
inc
in
stc
test
inc
adcl
notb
and
cmp
int3
ret
orb
xor
addb
aas
ljmp
fcoml
ficompl
inc
cmp
fldenv
sub
inc
adc
pop
sub
out
jecxz
lret
mov
adc
frndint
or
adc
hlt
dec
dec
pop
pop
aam
add
mov
push
popa
sbb
es
or
xchg
inc
leave
mov
mov
icebp
inc
aam
test
jnp
sahf
adc
mov
data16
leave
dec
inc
dec
push
push
test
insb
sarl
sub
lret
imul
imul
push
les
es
and
dec
adc
mov
mov
or
imul
mov
xor
icebp
dec
adc
pusha
repnz
fs
and
mov
cmp
or
in
sbb
shlb
stos
inc
xor
mov
mov
mov
sbb
aaa
mov
lods
test
js
adc
outsl
in
xchg
adc
outsb
xor
pop
xor
mov
pop
adcl
push
push
pop
sbb
adc
aaa
popa
ficoml
add
pop
or
pop
pop
cmc
out
cmp
cmp
mov
stos
pop
sbb
pop
fmul
aas
test
call
lcall
inc
addr16
movsb
push
push
push
leave
pop
loope
xchg
jo
fs
into
lahf
adc
outsl
dec
xchg
jle
and
and
cmc
das
push
out
add
repnz
fistps
lahf
push
xor
xchg
mov
fstpl
pop
mov
in
imul
xchg
ljmp
xchg
imul
scas
push
dec
cmp
popa
jmp
sub
jecxz
sti
adc
xlat
jge,pt
lods
adc
loop,pt
mov
clc
push
shll
mov
xchg
aas
pop
push
iret
mov
js
jns
test
dec
sbb
sub
lock
mov
xchg
imul
adc
in
or
push
cmp
push
out
sarb
adc
out
adc
dec
imul
or
adc
or
shrl
adc
cmpsl
xchg
mov
inc
ss
mov
lahf
or
pop
dec
mov
aaa
fsubr
fdivrl
cmp
xchg
je
cld
aad
jno
pop
fdivs
mov
ja
int
imul
xchg
adc
push
sbb
ret
repnz
int
rclb
adc
adc
or
and
into
mov
pop
rcll
in
sbb
inc
xchg
ret
xor
es
fistpl
push
pop
imul
push
add
add
cmp
xor
jns
fxch
or
mov
mov
xchg
jb
out
pop
dec
adc
dec
lock
or
push
daa
in
addr16
add
dec
cmc
sbb
xor
adc
dec
pop
pop
cmp
push
xorl
add
lret
ja
das
mov
orl
and
and
loop
xchg
mov
popa
aas
cltd
rorl
leave
mov
sahf
mov
roll
popa
imul
out
hlt
cmp
cmc
ret
add
daa
hlt
out
pop
lcall
cmp
scas
mov
int
dec
or
pusha
fwait
negl
imul
fbstp
xchg
js
inc
push
inc
push
push
cmp
dec
mov
leave
xor
nop
dec
mov
and
shll
daa
imul
scas
mov
mov
sbbl
ror
mov
inc
add
sub
and
add
sbb
inc
pop
icebp
stos
pop
in
int
pop
dec
aaa
rol
push
stc
call
cmp
push
pop
inc
push
shr
push
add
add
ljmp
xchg
movsb
out
imul
add
sbb
mov
aas
xor
mov
xchg
jbe
or
repnz
psraw
in
mov
test
fdivrs
pop
cmpsb
ret
lea
das
arpl
cli
or
xchg
sbb
cmpsl
cmp
into
sbb
popf
dec
movb
call
faddl
pop
or
inc
adc
mov
test
sahf
xor
push
in
jecxz
fldcw
pop
loop
jae
shlb
xlat
xchg
and
pushf
jno
cmpsl
or
jo
pop
cltd
data16
lcall
xchg
sbb
fmuls
es
femms
lahf
cmp
movsl
icebp
jg
and
fnstenv
jle
jecxz
scas
lods
movsb
imul
cmp
push
push
cmp
fdivr
inc
out
test
cmp
mov
scas
arpl
cmp
mov
imul
xor
sub
push
nop
push
mov
js
push
mov
xor
nop
mov
stos
jne
mov
add
xchg
fbld
out
enter
insb
mov
dec
mov
imul
xlat
cmp
add
add
cwtl
mov
fcomi
mov
mulb
mov
xlat
inc
idivb
mov
fidivrl
lcall
aas
jno
es
daa
mov
sti
aam
sub
or
and
cld
inc
xchg
inc
rcrl
call
jbe
mov
push
pop
and
gs
cs
and
stos
push
dec
or
dec
je
sub
imul
mov
mov
dec
xchg
jl
bound
mov
xchg
inc
and
icebp
std
mov
in
inc
fcoms
vpmacswd
bndstx
std
jp
or
cmp
std
pop
fisubs
movl
in
mov
and
ljmp
adc
pusha
fisubrs
inc
add
aaa
or
inc
sub
xchg
adcl
jge
fwait
cmp
push
cmp
xchg
cmp
in
arpl
adcl
test
sbb
fidivrs
mov
xchg
test
dec
sbbl
mov
push
push
xor
xchg
mov
adc
pop
das
clc
push
js
cmp
sti
gs
jns
into
cwtl
or
push
icebp
lods
leave
in
sarl
mov
mov
imul
adc
mov
fcoml
pop
shrb
popf
mov
addl
hlt
cmp
xor
ja
scas
lahf
into
push
xchg
cmp
sub
xchg
shlb
scas
or
mov
sub
popf
cmp
jae
and
mov
fildl
dec
fmull
mov
ss
mov
mov
fmull
std
jne
sbb
das
js
ficomps
push
or
dec
lret
ja
cwtl
inc
xor
je,pn
sub
es
xchg
xor
lods
addr16
test
insb
dec
xchg
inc
test
bound
in
cmp
sbb
rcll
xchg
mov
inc
mov
mov
adc
mov
push
stos
fists
jg
popa
jo
add
roll
push
daa
sbb
cwtl
xchg
mov
aaa
and
xor
rorl
ret
enter
adc
fisubrl
mov
cmpb
mov
pop
rorb
adc
dec
jnp
test
call
push
aad
sbb
clc
push
mov
mov
and
add
lock
add
adc
mov
jns
sbb
or
jbe
cmp
fisttps
inc
xchg
cwtl
sub
xchg
gs
lds
sub
mov
in
sar
adc
push
xchg
js
cs
das
push
adc
arpl
in
aas
fmuls
dec
imul
cmpsb
jge
mov
inc
dec
lret
movsl
push
and
ljmp
insl
out
call
imul
add
mov
xor
inc
in
mov
jmp
dec
mov
aam
xor
mov
adcl
inc
mov
sbbl
inc
add
mov
cltd
out
adc
movsb
cmpb
ret
cmpsl
fcomps
xchg
inc
add
mov
js
pop
jmp
repz
scas
sbb
xlat
push
pop
lret
inc
and
jno
iret
sub
jns
inc
ja
int
pop
addr16
and
push
mov
test
lea
or
aas
jne
fbld
cmc
sub
scas
aad
mov
nop
mov
dec
pusha
pop
js
jae
repz
test
stos
dec
mov
repz
mov
shll
pop
bound
loop
or
mov
xor
dec
dec
jo
mov
jne
stos
popa
push
jle
outsl
orps
sub
pop
mov
popa
fcomp
aad
js
gs
in
popf
arpl
xchg
cmp
adc
add
xor
mov
sbb
pop
arpl
push
sbb
hlt
cmp
lret
add
sub
adc
mov
adc
push
add
dec
xchg
adc
pusha
cmp
mov
mov
pop
pop
shlb
mov
iret
out
daa
out
ss
shll
fsts
shll
imul
addr16
lods
push
add
sub
cs
xor
and
fxch
repnz
sahf
shll
xchg
and
dec
pop
rclb
xor
xchg
jge
aam
gs
mov
mov
add
inc
ror
fmuls
arpl
leave
clc
mov
mov
das
out
out
leave
mov
test
xor
loope
cmp
and
push
mov
xor
jg
dec
into
bound
orb
pusha
or
mov
dec
mov
or
xchg
push
mov
lds
aam
inc
repnz
jecxz
and
or
xor
push
icebp
rcrl
jmp
push
mov
fistpl
sub
movsb
arpl
decl
fucom
ss
into
dec
popf
jg
pusha
jecxz
loopne
pushf
or
jo
xchg
arpl
imul
outsl
add
dec
dec
dec
or
add
inc
or
pushf
in
cmpsl
rolb
nop
cmpsb
xor
out
xor
lds
mov
xchg
lods
gs
inc
ds
xchg
in
jnp
pop
jne
pop
and
pop
mov
jo
fdivr
pop
pop
insl
add
sbb
sti
xchg
pop
adc
pop
das
std
sti
mov
ds
xor
mov
fcoms
dec
push
ljmp
dec
pop
dec
in
xor
stos
dec
and
and
inc
fcomps
mov
fsubrs
add
dec
inc
hlt
ljmp
mov
icebp
xor
cmpsl
jge
repz
add
cmp
adc
xorb
xor
ljmp
inc
mov
stos
jae
cmp
enter
sbb
mov
popf
pop
add
sub
fwait
pop
cmpsb
dec
xor
scas
test
shrb
loope
mov
sub
cmp
pop
and
pop
xlat
outsb
ret
lret
testb
int3
xchg
gs
out
popa
add
sub
or
mov
pop
dec
jmp
out
mov
sbb
sbb
inc
pop
fsubrl
push
xchg
pushf
sarl
pop
leave
ds
push
daa
sti
xor
jge
lret
xchg
mov
sub
mov
sbb
mov
icebp
jp
or
outsb
cmp
dec
mov
jns
inc
pop
pop
rorb
xchg
fmull
roll
insb
hlt
pop
lahf
adc
add
lcall
int3
cmovl
push
call
mov
sbb
mov
stos
jmp
mov
test
pop
jle
in
dec
push
ret
fwait
or
ror
test
fildll
pop
jle
xor
pusha
or
or
dec
push
and
lods
mov
loop
pcmpeqb
std
out
mov
mov
ret
es
mov
sbb
je
jge
and
fdivr
push
push
clc
daa
leave
mov
mov
mov
stc
ss
ret
jbe
jb
out
aad
adc
push
jmp
movsl
adc
jmp
movsl
ja
clc
daa
lret
dec
cld
iret
xor
jo
call
imul
hlt
inc
add
jle
mov
dec
aaa
gs
dec
push
pop
jo
dec
fidivl
insl
imul
adc
and
or
roll
mov
loopne
stc
jecxz
das
push
pop
push
aad
stc
cmp
mov
cmpsl
int3
cmc
fwait
sahf
lods
call
std
mov
add
call
div
mov
xor
idivl
mov
cmp
cmp
cmpsl
fnstsw
xchg
inc
cmpsl
push
rcrl
inc
int3
popf
sub
aas
fwait
les
sub
rcll
and
jecxz
cmp
andb
aaa
cmp
jae
add
pop
stc
push
xchg
and
dec
jg
push
or
or
data16
and
dec
clc
adc
add
les
inc
xor
pop
imul
or
shlb
imul
adc
or
mov
dec
ja
adc
mov
and
aad
bound
mov
not
mov
dec
add
adc
lahf
orl
cld
mov
xlat
in
and
dec
popa
pop
sbb
arpl
mov
mov
out
leave
aaa
jno
jno
stc
scas
cmp
popa
push
aad
insl
call
mov
jge
mov
pop
xor
cwtl
mov
xor
dec
xchg
les
xchg
out
sub
sbb
lret
rcrl
cli
shrb
cli
aaa
hlt
out
mov
aad
shlb
pusha
das
pop
sub
add
xchg
test
fidivrs
adc
inc
push
arpl
mov
js
sub
test
ljmp
imulb
leave
sub
or
out
inc
loop
mov
test
or
xchg
push
sub
bound
mov
stc
mov
rcrb
roll
pop
jo
dec
loopne
stc
sbb
lods
ja
mov
ficoms
cmpb
push
cld
adc
lods
imul
add
cmp
cmpsb
xchg
pop
aad
movsb
lea
mov
and
sub
test
xlat
loop
fs
adc
push
cmc
mov
bt
mov
and
sub
xchg
xor
pop
jae
push
mov
cld
push
ret
jl
in
es
jmp
scas
int3
cmp
push
cmc
cs
inc
ror
arpl
mov
call
cmp
call
lcall
inc
inc
jbe
sbbb
push
cli
cmpsl
push
pop
sub
sub
fnstenv
xchg
gs
adc
repz
jno
rcrl
test
jle
add
fldenv
cmpsb
xlat
xchg
xchg
jo
sbb
xchg
or
sub
jno
test
mov
inc
or
sbb
xor
enter
jl
scas
ljmp
imul
arpl
pusha
push
fwait
adc
fwait
pop
cmp
mov
out
popf
xor
mov
pop
push
jnp
inc
cltd
ja
push
in
fldenv
lret
push
test
or
lahf
pop
fldcw
mov
fnstcw
int3
pop
les
fldt
mov
sbbl
fdivr
inc
xchg
call
cmp
idivl
dec
sub
sub
popf
add
xchg
in
pop
cmp
arpl
adc
jno
imul
test
out
divl
sbb
inc
aad
sbb
imul
imul
js
mov
jg
jbe
inc
cmpsb
ret
mov
add
inc
xor
insl
daa
mov
pop
pmaxsw
jg
int
push
and
std
stc
aaa
gs
mov
push
mov
shl
popf
cmp
adc
dec
xchg
mov
pop
inc
in
mov
mov
iret
xorb
loop
daa
adc
aaa
andl
fstps
sub
arpl
in
or
cmp
aaa
or
xor
xchg
inc
jno
daa
cmc
sub
cmpsl
dec
jmp
xchg
cmc
adc
cltd
shrl
mov
pop
and
push
test
cmc
clc
pushf
xor
push
push
or
cmpb
xchg
lahf
xchg
inc
add
test
dec
xchg
scas
insb
std
fcoml
push
or
inc
mov
ss
xor
push
and
inc
mov
test
stc
sbb
aad
aam
cmp
pop
adcb
das
mov
cmpsb
icebp
dec
rcll
ds
cmp
ljmp
mov
lcall
ret
adc
jne
xchg
xor
ret
push
lahf
jns
fbld
les
xor
add
rorb
int3
push
roll
xor
fmuls
inc
ljmp
enter
in
cmpb
addr16
inc
aas
cmp
push
nop
js
mov
inc
mov
test
xor
outsl
dec
icebp
adcb
fmuls
cwtl
xchg
sahf
cmp
mov
out
repnz
in
xorb
sub
pop
inc
push
lods
stc
scas
xchg
mov
sbb
pop
mov
in
shld
inc
mov
jg
ljmp
popf
lea
jae
loopne
movsb
sarl
push
add
mov
or
pop
stos
xor
fwait
pop
mov
dec
pop
lock
mov
rcll
cmp
adc
sbb
daa
mov
aas
outsl
xchg
lret
jle
push
mov
ja
cmpsb
scas
ja
ret
xchg
test
xchg
test
jmp
jle
inc
xor
ret
outsl
dec
cmpsb
inc
pushf
inc
and
jne
sbb
and
pop
out
dec
dec
outsb
loope
pop
fisubs
xor
cmpsb
test
mov
addr16
psrld
stc
and
mov
push
testl
pop
ret
into
and
xchg
data16
xabort
pushf
dec
insl
mov
hlt
in
sub
bound
mov
push
leave
cmp
adcl
fimuls
jnp
mov
inc
push
test
in
jg
movups
push
push
popf
scas
sub
jmp
into
pop
hlt
ret
ss
cs
and
int3
rcl
dec
int3
jb
out
xchg
ss
and
popl
dec
push
add
mov
mov
pop
rcrl
outsb
fwait
notb
dec
rcl
sbb
pop
mov
mov
mov
cltd
call
fbld
in
out
xchg
xchg
bound
add
aaa
fmul
bound
lds
rorl
mov
test
divb
fs
cmpl
push
pushf
aaa
add
sbb
sbb
mov
lcall
ljmp
xchg
mov
leave
fldenv
sub
inc
pop
imul
inc
dec
xor
out
push
inc
pop
in
inc
loopne
adc
popf
stc
iret
add
js
jae
daa
clc
adc
jmp
lods
push
arpl
inc
enter
in
cwtl
mov
nop
pop
mov
popa
insb
jno
std
mov
mov
mov
call
aad
adc
mov
pop
hlt
mov
lahf
dec
aam
mov
fcompl
pop
fwait
mov
call
sub
dec
inc
test
jmp
call
mov
dec
sahf
hlt
mov
jo
je
sbb
mov
out
jbe
shll
jp
test
loopne
je
add
flds
add
imul
int3
in
mov
or
movsl
inc
daa
sub
cmp
xor
adc
xor
mov
jbe
push
jb
mov
jge
push
adc
jbe
adc
xlat
jno
lcall
and
out
mov
or
add
add
fdivl
add
dec
inc
mov
lea
ljmp
pop
adc
xor
ds
test
inc
or
push
add
dec
imulb
mov
sbb
loop
dec
ficomps
iret
sub
xchg
pop
lock
mov
insl
aam
sub
jmp
xchg
or
stos
xchg
add
fildl
xchg
pop
xchg
cmc
jecxz
lahf
fs
jle
and
jecxz
cmpsb
fimull
push
stos
sub
and
nop
cmp
xlat
or
rcll
push
mov
xchg
mov
pop
cmpsb
ds
sti
in
jne
sbb
out
enter
addr16
push
mov
sbb
not
sub
popf
jne
push
and
push
lock
out
mov
sti
mov
mov
pop
out
out
push
sti
imul
imul
adc
jae
pop
in
pop
sbb
cmpsl
into
pop
lea
pop
shll
xchg
lahf
hlt
cmpsb
mov
imul
cld
or
mov
stc
jae
aaa
lds
stos
js
pusha
sub
xor
enter
test
push
out
jmp
jecxz
xchg
jb
cwtl
adc
sub
pop
bound
add
loope
xor
cmp
inc
mov
cmc
xor
ds
add
int3
jle
out
dec
mov
imul
adc
repnz
jno
pop
or
and
addr16
popf
ja
test
mov
loop
push
or
xor
fisubrl
pop
mov
stc
sub
push
int
xchg
dec
nop
sub
int3
sbb
xor
add
cmp
xor
sbb
pop
repnz
sub
inc
cmpb
leave
test
mov
das
sbb
adc
cwtl
mov
or
sahf
test
push
sbb
push
pop
push
int
arpl
mov
insl
jge
inc
sub
jl
hlt
dec
push
andb
xor
mov
fnsave
jg
or
sbb
ljmp
mov
cmpsl
subb
decb
or
popf
add
popf
mov
sbb
add
daa
mov
sbb
out
mov
cltd
push
add
loopne
and
pop
sar
sbb
test
mov
push
test
push
fucomi
cli
iret
sub
push
js
jmp
int3
push
jle
or
adcl
cwtl
adc
push
loopne
sbb
mov
stos
or
xchg
push
std
out
push
adc
pop
add
out
pop
xor
popa
dec
jo,pn
or
test
jecxz
dec
xor
aam
push
pop
xchg
push
sbb
mov
cld
xchg
xor
ds
adc
dec
pop
bound
std
pop
sub
mov
aaa
repnz
mov
push
pop
repz
xor
xchg
push
cmp
xor
stos
aad
ss
stos
adc
sbb
xorb
add
lcall
jae
nop
pop
adc
addr16
pop
jmp
ljmp
inc
xchg
sbb
and
das
lret
push
lcall
mov
in
lret
push
adc
mov
arpl
imull
in
ret
cmp
sbb
ljmp
fmull
sub
xor
enter
dec
mov
dec
ja
cmp
popa
insb
cmp
rorb
pushf
ja
dec
cmc
in
mov
cmp
test
xchg
inc
xchg
mov
xor
and
enter
int3
movsb
shrl
dec
out
cmpb
mov
mov
jg
jmp
fcoms
cmp
and
push
add
mov
pop
inc
cmp
into
mov
or
test
and
push
and
nop
xchg
sbb
mov
clc
repz
push
mov
cs
aam
mov
pushf
nop
dec
and
jmp
cvttps2pi
lret
jle
lahf
xorb
out
push
lock
inc
je
mov
push
clc
pop
sub
enter
add
dec
adc
or
dec
out
pop
sbb
add
fcomip
movsl
cmp
lret
ret
and
int3
jecxz
jle
xor
fcmovbe
testb
dec
sbb
mov
inc
leave
mov
shrl
cltd
mov
or
int3
mov
cltd
cs
add
iret
in
mov
adc
push
or
repnz
sub
and
cltd
push
sbb
mov
inc
sub
std
sbb
cmp
pop
enter
out
repz
adc
adc
ds
inc
addb
cmp
icebp
jecxz
push
js
nop
jmp
jg
repnz
shrb
movsl
xchg
mov
insl
push
pop
sub
fistpl
popa
adc
cltd
push
add
in
aad
pop
lcall
rcl
adc
mov
sub
cmpsb
addr16
and
addl
mov
add
in
pop
sub
inc
pop
loopne
mov
xchg
ds
or
pop
test
jne
cmpsb
mov
and
sbb
adc
mov
int3
jo
negb
inc
sub
inc
adc
inc
mov
jle
jb
mov
bound
xorl
repz
pop
cltd
mov
or
test
xacquire
and
jo
mov
push
fs
and
and
popf
es
jle
xor
fstp
xor
pop
loop
add
mov
xor
sub
jg
sub
aam
jl
xor
imul
cltd
repnz
xor
insl
mov
mov
sar
pop
inc
pop
cmp
aaa
int
dec
push
outsl
mov
adc
enter
pop
out
call
push
outsl
aas
and
aad
push
cmp
or
int
mov
push
mov
adc
xchg
push
fwait
or
es
iret
and
jp
shll
mov
arpl
push
add
or
pop
and
idivb
rol
jge
dec
inc
pusha
and
test
or
imull
sub
ss
xchg
xchg
popf
dec
in
sbb
inc
push
xor
mov
insl
lahf
loope
mov
dec
out
mov
mov
in
enter
lcall
out
cwtl
leave
add
test
ds
mov
daa
mov
sub
xor
and
fbstp
loopne
imul
pop
mov
mov
mov
xor
mov
xlat
rcll
push
sahf
das
cmp
lret
jbe
outsl
jbe
in
jle
cmp
xor
xor
mov
jae
int3
outsb
adc
andl
and
pushf
test
scas
int3
add
sub
xlat
inc
sub
adc
xor
pop
adc
cmpsb
sbb
pop
push
in
pop
jne
and
pop
add
add
ret
adc
outsl
jle
add
dec
sub
scas
ds
pop
shl
call
dec
mov
sti
and
popa
inc
pop
je
and
jae
outsb
sub
pop
mov
cmp
xor
sbb
and
jp
outsl
mov
jmp
cmpsb
ja
jp
out
fdivrs
jl
adc
and
cmp
lea
sbb
out
punpcklwd
out
jmp
xchg
adc
inc
pop
loopne
addr16
inc
push
out
add
jg
sbb
or
invd
aam
fisubrs
jle
sub
mov
xchg
and
sub
lea
push
mov
lea
dec
fdivrs
dec
movsb
stc
dec
adc
int
dec
loopne
ret
xchg
movsl
fstps
pop
xchg
pop
aaa
ljmp
dec
pop
out
jbe
lret
pop
movsb
std
mov
inc
xchg
jne
xchg
jns
jecxz
adc
jl
je
cmp
push
ja
into
loop
dec
adc
add
cmp
lods
push
dec
xor
ss
shlb
or
fsubl
arpl
addr16
xor
xor
ret
adc
adc
pop
outsb
cmp
pop
dec
inc
loope
xchg
or
and
cltd
inc
and
add
inc
jae
ret
mov
and
scas
pop
add
add
jl
lahf
push
pop
mov
rol
sbb
pop
sbb
push
nop
jg
push
mov
cmp
mov
jmp
jnp
pop
imull
xchg
dec
jne
lahf
jecxz
jl
pushl
jo
data16
hlt
gs
mov
pop
outsb
push
jbe
dec
sub
fldcw
call
stc
cs
scas
aad
lods
xchg
or
popa
and
lods
jp
gs
icebp
iret
ror
das
jns
and
jp
ficompl
jbe
dec
repnz
cmpsl
dec
sbbl
mov
in
lret
and
ljmp
push
cltd
and
or
dec
xchg
lock
inc
xchg
lcall
or
int3
mov
push
add
aad
pop
jp
mov
push
mov
mov
cmp
inc
out
sbb
sbb
xchg
mov
pop
daa
ja
int
inc
mov
scas
mov
sbb
adc
and
lods
mov
icebp
out
or
lods
jns
in
mov
sub
pop
inc
sbb
pop
jge
inc
or
cmc
jb
xor
mov
outsl
push
cmpsb
imul
inc
dec
int3
jl
aas
jns
idiv
shll
sbb
in
sbb
pop
test
dec
xor
loop
fldenv
mov
adc
mov
sub
sbb
je
mov
cmp
pop
push
mov
mov
lret
call
mov
xchg
ljmp
insb
mov
aaa
dec
sbb
jb
out
fsts
in
pop
cmp
mov
mov
pop
loopne
lea
xor
shll
sub
mov
inc
insb
jecxz
pop
xchg
dec
ret
andl
push
jo
jmp
out
adc
lahf
filds
and
js
cmc
sbb
cmpsb
icebp
sahf
cmp
and
nop
test
lret
sbb
adc
lods
and
and
int
fisubrl
jne
mov
lock
or
fmuls
mov
sub
mov
orb
sbb
and
jecxz
pop
leave
jl
adc
jmp
or
adcb
das
fnstcw
mov
xchg
test
mov
add
icebp
and
push
outsl
test
add
push
push
fs
mov
fcoml
inc
outsl
popa
mov
jmp
jmp
add
in
div
sub
enter
push
jmp
ja
xorl
or
mov
push
leave
inc
outsb
jge
sbb
cwtl
xchg
loop
popf
mov
roll
push
inc
add
hlt
fisubrs
in
insl
cltd
jge
mov
push
sbb
xchg
add
push
movsb
stos
sbb
xor
insb
nop
xchg
daa
xor
cmpsl
lahf
cmp
pop
dec
jb
fs
sub
enter
or
adc
pop
pop
jmp
jl
pushf
mov
dec
std
fdivr
sti
pop
rcrb
aas
fwait
add
dec
dec
push
dec
xchg
ja
xorb
sbb
rorb
sarb
push
mov
mov
or
pop
push
inc
mov
rcl
add
and
testb
aad
enter
rclb
mov
in
lret
fwait
push
ds
fisttps
fsubs
cmp
adc
cmpsl
fidivrl
iret
add
mov
mov
cmp
inc
mov
push
je
std
adc
sbb
add
fsubr
xchg
add
xchg
dec
aaa
scas
jae
xor
jno
pop
push
ja
adc
mov
xchg
mov
jg
lock
cltd
stos
stos
or
adc
stos
push
xchg
movd
stc
push
imul
fcmovnbe
mov
dec
fdivrs
insb
repnz
shrb
push
out
in
fwait
mov
rcr
dec
fmull
popa
in
jmp
push
mov
sbb
sbb
ljmp
or
fistpl
cli
push
sbb
push
dec
aam
pop
xchg
inc
insb
arpl
xlat
xor
push
stc
xor
scas
mov
imul
inc
jae
jg
pop
push
movsl
sub
push
mov
add
lea
cmp
sbbb
sbb
cmp
inc
into
mov
mov
adc
xchg
xor
push
insl
cltd
push
dec
ret
or
jge
inc
push
and
into
sub
pop
pop
leave
mov
faddl
daa
mov
repz
inc
int3
rolb
adc
sbb
xor
sbb
test
mov
jl
sbbb
loope
and
pusha
or
out
ret
sbb
je
ret
inc
mov
add
cwtl
in
dec
push
rcrb
cs
mov
jbe
mov
mov
jne
xchg
std
in
add
xor
orl
in
test
push
or
test
ret
loope
inc
mov
shrb
inc
shr
xchg
testb
loopne
jb
lea
xor
repz
pop
jns
jbe
mov
arpl
and
ss
jl
outsl
hlt
loope
pop
loop
dec
xor
in
sbb
movsl
imul
sbb
into
repz
mov
xchg
cmp
sub
test
test
xor
sbb
jmp
insl
in
sbb
mulb
jge
imul
jle
jle
icebp
movsb
imul
rcr
adc
sub
imull
rcll
and
adc
jmp
pop
push
mov
or
cltd
cmpsb
aas
sub
out
mov
sub
insl
stos
test
xchg
mov
outsl
jmp
sbb
data16
loope
call
mov
rep
addl
sbb
notb
ljmp
pop
lock
mov
pop
jb
mov
add
sti
fildll
mull
cmp
icebp
outsb
jb
mov
mov
in
daa
rclb
fimull
insb
sbb
and
push
scas
dec
sub
push
jg
call
sti
iret
or
cmp
ja
lahf
fsubs
pop
in
cli
ja
fwait
mov
ljmp
pop
jle
mov
mov
mov
dec
add
or
repnz
add
jae
xchg
clc
lods
call
and
stos
rorb
or
push
cmp
scas
and
adcb
inc
cmpsl
loop
xchg
lcall
and
push
push
jnp
sti
mov
in
fs
or
dec
adc
neg
lret
shrl
mov
xchg
rorl
vandps
jmp
and
or
sbb
add
call
cmpsl
cltd
mov
nop
cmp
mov
mov
add
adc
mov
sub
test
imul
loopne
shlb
hlt
cmp
mov
sbbb
dec
mov
repnz
rcr
push
addl
gs
sbb
dec
hlt
mov
sub
jp
lods
add
mov
call
pop
xchg
dec
push
outsl
shrb
push
inc
popa
iret
cmp
ret
bound
fidivrs
dec
or
mov
jg
xchg
divl
les
pop
ror
jns
jmp
and
daa
sbb
inc
jns
mov
mov
xor
jnp
sti
dec
nop
rcrl
mov
inc
dec
push
or
push
push
dec
jg
mov
mov
push
pop
mov
inc
adc
lahf
mov
ss
mov
cmp
outsb
pop
cmpb
pop
dec
hlt
lds
mov
mov
aad
mov
ss
sub
mov
cmc
or
jnp
mov
nop
or
fld
pop
icebp
xorb
test
stos
add
jmp
bound
rorl
les
sub
or
cmp
fildll
or
or
lahf
add
lret
sarb
int
pop
cmpsl
test
jmp
mov
fmuls
loop
insl
sbb
aam
ja
xor
imull
insl
lcall
ficompl
fcmovne
shll
lods
add
inc
adc
sub
in
arpl
imul
rcrl
pop
inc
cld
js
imul
cmp
push
sub
test
std
cld
into
jbe
stc
xchg
dec
xchg
jge
xchg
mov
push
mov
arpl
and
out
loop
cmp
inc
nop
lods
sahf
pushf
jle
sbb
push
push
adc
cld
rolb
sbb
jns
mov
sti
imull
cmp
sarl
mov
out
and
aas
add
mov
orl
pop
mov
cltd
push
scas
add
shrb
push
dec
xor
scas
stc
push
cmp
cmpsl
adc
js
mov
inc
inc
popa
and
sbb
mov
pushf
out
jl
mov
out
test
cmp
inc
jnp
add
aam
jbe
push
scas
sbb
jb
jmp
fiaddl
or
cmpsb
scas
xor
jo
mov
ds
add
xrelease
test
mov
shrb
and
in
jo
or
icebp
popl
scas
sub
hlt
lcall
lock
negb
je
stc
push
push
push
insl
dec
dec
dec
pop
pop
xchg
cs
inc
dec
clc
jb
std
inc
sti
push
sub
in
repz
mov
xor
iret
xor
xor
adc
sub
or
adc
inc
jecxz
pushf
jo
js
out
adc
mov
and
mov
xlat
into
jecxz
inc
and
jmp
xor
sbb
mov
pop
mov
imul
cmp
jb
lret
hlt
out
fisubrs
add
fists
mov
and
cmp
stos
ljmp
xchg
push
mov
push
fnstenv
mov
mov
in
inc
xchg
movsl
cmp
stc
rclb
adc
sbb
jo
rcr
mov
ret
inc
js
cs
das
sub
xor
popf
xchg
cs
daa
pop
aas
xchg
dec
fsubrs
mov
jle
add
pop
xchg
jle
jecxz
out
sbb
add
out
mov
subb
iret
daa
mov
lock
push
repz
addl
mov
iret
adc
mov
pop
xchg
out
pop
push
xor
mov
dec
fisttps
std
add
movsb
sbb
rorb
sbb
lock
push
jns
inc
aam
mov
outsb
in
push
push
test
push
mov
push
icebp
jo
adc
nop
aaa
push
adc
jno
in
mov
es
loopne
fidivrs
cli
gs
arpl
jmp
xchg
sub
and
mov
stc
mov
adc
test
pop
sub
ror
repnz
lahf
jb
xchg
mov
jne
add
je
push
movsb
mov
push
arpl
idivb
cwtl
popf
in
sub
add
dec
push
jle
test
xchg
dec
sub
into
sbb
js
mov
cwtl
fmull
cwtl
sti
repnz
dec
movsb
ljmp
sarl
mov
jns
xor
loopne
gs
cmpb
pop
scas
pop
xor
enter
or
mov
or
fwait
xchg
stc
cmpsb
pop
adc
add
or
or
nop
repnz
dec
sbb
fwait
sbb
and
mov
pop
inc
shlb
rolb
sbb
mov
lcall
mov
int3
rorl
loop
out
mov
pop
xchg
lea
out
pop
outsb
repz
mov
pop
sub
fwait
jnp
arpl
xor
push
es
pushf
cmp
outsb
imul
mulb
push
jno
jnp
jge
cmp
cmpsl
repz
xchg
mov
insl
testb
xor
inc
jp
mov
sbb
aad
shlb
xchg
mov
js
clc
push
push
jne
cwtl
ret
lret
scas
shlb
push
arpl
pop
stc
and
jb
sbb
push
push
and
aaa
or
mov
jae
or
mov
mov
xor
sbb
outsb
test
jae
add
pop
xchg
lds
xor
mov
ret
or
inc
xor
hlt
cwtl
ret
dec
inc
popa
lock
sbb
andl
cmp
arpl
scas
mov
add
aad
mov
ja
and
icebp
clc
mov
inc
push
dec
xor
dec
pop
andb
call
xchg
scas
push
push
nop
mov
fdivrs
or
inc
jle
cmp
or
int
add
cwtl
mov
xchg
push
shrb
or
push
fcompl
mov
int3
fs
mov
adc
add
test
loop
pop
push
cmp
imul
scas
repnz
mov
lahf
sbbb
pop
mov
inc
test
lahf
ds
inc
xor
pop
stos
cli
dec
inc
hlt
fcmovnb
lahf
pop
shr
notl
xor
fmull
leave
lods
or
dec
xlat
sub
sub
dec
cmc
sar
gs
mov
cli
or
outsl
jb
rcrb
in
xchg
add
lret
mov
fs
mov
xor
fisubrl
add
pop
shr
dec
into
mov
mov
ds
jl
insl
pop
cld
mov
clc
and
and
fldenv
add
lcall
shrl
sub
sbb
push
mov
insb
mov
mov
and
and
test
jg
xchg
daa
in
cmpsl
loopne
jl
push
push
push
faddl
aaa
in
scas
in
sub
mov
out
int
mov
push
adc
push
add
sbb
rcll
test
add
dec
mov
cmp
and
inc
adc
inc
inc
or
ret
xlat
adc
push
out
movsb
dec
add
push
adc
inc
mov
shlb
out
stos
js
jne
rcrb
insb
jne
scas
sub
stos
mov
bnd
lahf
and
push
pop
xor
shlb
cmp
push
cmp
or
xor
das
packuswb
pop
shll
dec
mov
into
push
inc
divb
dec
mov
ja
mov
je
ret
daa
test
dec
fiadds
fdivs
shll
sub
or
jg
and
mov
int3
fbld
or
adc
in
sbb
movsl
or
in
xchg
fsts
pop
notl
pop
gs
cmpsb
es
mov
je
push
inc
push
fisttpl
test
dec
add
sahf
and
adc
or
cmp
mov
test
loop
push
insb
fcomps
mov
cmp
push
enter
dec
mov
push
push
out
sub
push
mov
clc
mov
mov
mov
push
icebp
adc
cmp
psubq
rolb
sbb
mov
jbe
and
xlat
jne,pn
jg
fnstsw
xchg
add
add
lods
outsl
dec
cmpsb
mov
sahf
sub
lret
lock
mov
mov
sub
or
dec
mov
pop
mov
mov
in
xorl
sub
xchg
add
push
sub
adc
mov
xor
rolb
mov
mov
addl
mov
aam
in
dec
sbb
and
mov
add
sbb
push
xlat
sahf
sbb
mov
sbb
pop
xor
sub
jnp
inc
stos
lahf
and
mov
add
out
mov
outsl
cmc
test
aad
je
push
push
mov
aas
mov
lea
sub
sti
mov
sub
loop
cld
pushf
xor
lock
xchg
push
mov
push
or
mov
jecxz
cld
mov
xchg
push
out
and
or
mov
xchg
push
mov
outsl
mov
fldl
lahf
ja
loop
mov
scas
loopne
inc
daa
int3
repnz
mov
imul
jb
fsts
test
or
cmp
int3
fdivrs
pop
and
dec
shll
orb
pop
addr16
sahf
cltd
pop
jnp
sub
push
mov
int
jp
mov
cmp
lcall
and
lods
pop
add
movsl
jae
pop
dec
push
insb
lcall
cmp
xor
and
das
and
imul
pop
mov
xor
fs
roll
or
cmp
pop
call
out
xor
jle
mov
xchg
sbbl
repnz
movb
shlb
mov
mov
cli
and
xlat
mov
jb
in
cmp
add
adc
add
adc
jno
push
arpl
xchg
dec
popf
data16
int
ret
insb
sbb
mov
mov
mov
dec
cmp
lcall
adc
dec
rcrl
cld
pop
xchg
push
push
lret
ljmp
or
jecxz
sbb
nop
inc
jbe
out
test
pusha
out
rolb
push
aas
push
dec
nop
das
push
out
xchg
jecxz
or
jns
mov
out
mov
idivb
mov
jnp
sub
sub
insb
cmp
jo
repz
imul
xor
stos
mov
xchg
int
jns
das
pop
addb
sahf
mov
cmpsl
lcall
xchg
pop
nop
dec
lods
dec
int
or
mov
rol
fistps
inc
sub
dec
jbe
imul
adc
lods
sti
subb
push
enter
in
adc
mov
pop
mov
jb
pop
sbb
cmp
aaa
je
xchg
mov
push
and
dec
inc
jae
cs
je
ja
out
lods
xor
daa
jb
aas
jp
mov
cmc
sbb
ss
insl
push
in
mov
cmp
leave
xchg
mov
je
pop
icebp
jo
push
orl
sub
xchg
jp
rcll
lods
les
fldl
add
mov
aaa
in
inc
repnz
out
cmpsl
mov
mov
and
push
loope
push
aaa
fisttpll
lods
mov
adc
js
dec
fidivrs
data16
sbb
ljmp
or
lret
inc
lret
loop
xchg
push
sub
lea
xchg
sbb
rol
test
inc
push
sahf
mov
lret
je
inc
sti
lods
inc
mov
test
xchg
dec
xor
je
mov
pushf
fs
fldt
push
sub
maxps
jno
cmp
push
in
test
mov
movsl
inc
sub
lcall
ret
add
dec
or
xchg
pop
adc
shl
ljmp
int
mov
inc
mov
lea
nop
jbe
mov
sub
incl
jns
ja
lea
pop
lret
xchg
mov
test
xchg
cs
movsb
jle
xlat
out
fists
fnstenv
sub
cmp
add
dec
stc
push
mov
outsl
fmull
inc
in
jp
mov
cli
pop
sbb
mov
xor
mov
pop
add
xor
sbb
cmp
test
mov
xchg
repz
sub
inc
repz
fmuls
test
mov
push
mov
data16
inc
cmpsb
lret
mov
cmp
mov
icebp
xlat
sub
sub
stos
and
pusha
and
testl
sub
jg
push
in
test
jl
cltd
in
pop
das
add
jmp
inc
cmpsb
lcall
adc
and
lods
lahf
ds
das
sbbb
inc
mov
shll
or
jmp
push
aad
jl
push
jecxz
insb
jne
fstps
cmp
in
jp
sub
inc
sbb
pop
dec
xchg
call
sbb
jl
mov
data16
add
jb
outsb
cmpsl
jnp
mov
popa
xchg
ret
add
fistpll
fadds
cld
xor
xchg
je
mov
inc
dec
xorb
mov
xlat
xor
lock
adc
mov
data16
and
push
or
mov
std
cmpsl
lcall
sub
mov
inc
loopne
ret
sub
cltd
jge
sbbl
mov
inc
cmp
dec
xor
mov
insl
add
xchg
cmp
xor
nop
jge
sub
dec
pop
fwait
cmp
mov
inc
hlt
lea
dec
sbb
lahf
ljmp
int
xchg
inc
jl
push
push
adc
push
and
cmpsb
shrl
pop
cs
sub
insb
mov
movsl
loopne
adc
xchg
js
sbb
adc
cmp
push
dec
pop
xor
or
inc
and
repz
mov
xor
push
sub
loope
ss
push
sub
js
ret
je
adc
sub
orl
xlat
fsubrs
push
mov
movsb
adcl
push
mov
roll
push
repnz
ud1
ret
sbb
loope
push
xchg
dec
xchg
ficomps
cli
aas
and
push
popf
popf
int
jp
in
mov
dec
js
xchg
sbb
gs
mov
add
cmp
jg
or
int
add
pop
cltd
push
insl
mov
insb
mov
jl
mov
incl
inc
or
ss
mov
lock
adc
andl
int3
mov
aad
push
add
pop
daa
xor
push
jecxz
repnz
add
imul
xchg
fs
jl
push
cld
and
addl
cli
xchg
and
leave
shlb
pop
xor
sbb
adc
xchg
popf
pop
loopne
shl
sbb
ljmp
test
insb
fildl
bound
adc
sbb
jbe
dec
pop
or
cvttps2pi
aam
and
ljmp
dec
push
gs
adc
or
ret
pop
mov
xchg
test
ss
adc
jae
add
jecxz
mov
sarb
fbld
sub
mov
ret
pop
push
scas
jmp
mov
adc
ds
mov
and
in
popf
mov
mov
pushf
inc
imul
push
repnz
push
mov
sbb
fbstp
aam
lods
leave
and
je
dec
cmp
out
call
add
sbb
outsl
pop
pop
mov
push
jg
iret
push
pop
dec
stos
inc
push
out
jl
pop
sbb
mov
xor
aad
sbb
or
shll
clc
jge
push
rcll
lret
leave
lcall
xor
lret
shrl
mov
adc
push
mov
adc
pop
fs
sbb
scas
std
mov
lret
ss
and
sar
shlb
cmpsl
mov
sbb
xchg
repnz
add
lret
xlat
jp
pop
dec
mov
and
adc
jne
jl
mov
add
pavgw
dec
mov
cs
into
pop
dec
mov
imul
outsl
push
xor
lret
adc
cwtl
inc
add
lret
mov
leave
dec
and
shl
sub
nop
cmp
fstl
xor
push
mov
or
pop
pusha
push
xchg
dec
push
movsl
cmp
out
aaa
insl
inc
and
rorb
xchg
aad
cmp
lahf
mov
iret
add
popf
jo
call
or
pop
out
adc
sub
mov
mov
cmp
icebp
dec
jne
scas
mov
jmp
test
das
dec
mov
rolb
scas
jns
data16
ja
inc
outsl
pop
ds
sbb
mov
lcall
lcall
adc
sti
or
jp,pt
push
xor
insb
popa
xchg
mov
jno
sbbb
outsl
xlat
leave
outsl
inc
dec
andb
sub
mov
ror
lret
push
xchg
cmc
std
pushf
sub
in
sbb
mov
xor
cmp
call
adc
dec
pushf
inc
clc
push
les
lcall
shll
sahf
in
pop
jge
out
fsts
adc
xor
cmp
pop
xchg
roll
mov
test
js
movsl
stc
push
scas
loope,pn
pop
andl
ret
repz
add
push
popa
out
xchg
js
lahf
dec
clc
or
xchg
mov
mov
or
mov
dec
jp
fldcw
testb
push
mov
dec
cmp
movsb
cmpsl
rclb
inc
addr16
std
adc
dec
mov
pop
pop
movsl
popa
inc
roll
and
idivl
stc
pop
jmp
mov
sub
mov
xchg
mov
cwtl
test
out
dec
fsubr
xchg
pop
or
in
and
xchg
push
addl
cmpb
sbb
xchg
cmp
mov
xchg
test
test
std
pusha
pushf
sbb
xorl
testl
sbb
add
cli
popa
pop
movsl
xchg
lahf
adc
call
cmpsl
test
push
mov
pop
jecxz
in
aaa
nopl
std
aas
mov
cli
lahf
jle
inc
mov
push
fstpl
pop
gs
scas
jge
hlt
mov
mov
mov
les
outsb
aaa
jle
leave
inc
pop
and
mov
mov
xchg
test
cmpsb
push
das
mov
call
aam
sbb
test
adc
xor
add
cmc
adc
stos
xchg
repnz
mov
cmp
or
clc
xlat
ficompl
out
pop
xor
not
and
push
fiadds
sahf
pop
es
add
mov
stos
mov
cwtl
addb
pop
in
popa
mov
into
loopne
loopne
int
daa
cli
pop
dec
ret
xor
cmc
jae
adc
xchg
adc
and
fsubl
aad
mov
stos
ret
mov
inc
data16
mov
addb
in
inc
add
lea
mov
out
dec
jmp
repnz
sbb
and
inc
popf
lods
in
loopne
enter
in
es
inc
subb
pop
je
inc
test
cltd
and
mov
das
rcrb
push
mov
out
cmp
or
cmp
push
adc
cmp
in
push
in
jmp
pop
sbb
aas
inc
mov
add
cmp
in
ss
imul
popf
adc
xor
repnz
jg
ss
lcall
fdivrl
bound
xor
jecxz
int3
pop
push
push
xor
mov
pop
int3
js
cmp
subb
fbld
push
sbb
mov
push
popl
ret
cmp
xchg
mov
jns
mov
adc
add
jne
mov
fnstenv
in
in
and
dec
icebp
pop
mov
push
dec
sbb
mov
adc
mov
stos
test
push
jno
jae
mov
sti
or
test
xchg
adc
or
adc
fcmovne
lods
enter
pop
xchg
and
ja
mov
ret
rorl
pop
insl
js
inc
aam
jecxz
faddl
mov
pop
mov
popf
rcrl
or
dec
aad
xchg
aas
sub
in
shlb
xor
fidivrl
xlat
daa
test
iret
push
add
mov
in
rcrb
dec
jnp
inc
push
mov
sub
pop
add
call
sbb
sub
arpl
pop
pop
sahf
loope
adc
sub
ret
in
cmp
mov
aas
aad
pop
dec
shll
pop
push
fwait
or
lock
xchg
mov
enter
pop
lcall
flds
js
jno
call
mov
pusha
hlt
into
cmp
inc
fs
subl
sbb
sub
orl
loope
jns
xchg
lods
cs
push
adc
jb
mov
fadds
mov
call
add
jnp
pop
sub
sub
sbb
push
inc
loopne
jne
ljmp
lock
push
or
xor
pushl
push
or
ja
push
out
adc
mov
mov
aaa
pusha
jl
sti
adcb
ss
jmp
aaa
lea
nop
mov
lahf
pushf
mov
ja
mov
push
mov
xor
push
aad
sbbl
ds
aas
insl
adc
hlt
ret
shr
popa
mov
fcoms
sub
scas
outsb
pop
icebp
fs
and
lret
sub
xor
mov
jo
rorl
or
jne
xor
lahf
cld
insb
std
cs
cld
xor
mov
outsl
pop
add
dec
repz
rorb
push
shr
sub
nop
cltd
data16
les
cltd
scas
sub
adc
cmpsl
scas
add
mov
mov
fildll
shll
pop
push
cmp
adc
es
sub
push
mov
xchg
stos
sub
arpl
push
ds
fsubrl
xchg
enter
and
jle
bound
imul
int3
gs
push
and
adc
loope
cmp
fisttpl
andl
orb
cmp
mov
mov
sbb
mov
or
jae
xor
testl
popf
pusha
jns
mov
mov
cli
xor
ds
and
pop
dec
scas
push
test
xchg
mov
lds
xor
pop
pop
sbb
ss
leave
sbb
adcb
int
xchg
gs
andl
aaa
or
jb
pop
gs
dec
xchg
xchg
cmp
jmp
ljmp
or
push
cmp
xor
sub
enter
jae
pop
das
add
xchg
into
hlt
push
je
js
pop
jecxz
and
pusha
lret
test
rcrl
out
mov
cmp
pop
sarb
fcomp
dec
fbstp
sahf
mov
outsl
imul
mov
sahf
repz
bound
hlt
pusha
mov
and
pop
jae
jbe
push
mov
sub
mov
out
subl
dec
mov
and
ds
mov
icebp
aaa
loop
cwtl
xchg
inc
push
dec
lret
mov
inc
push
jne
xchg
out
stc
mov
mov
popa
sbb
in
sbb
dec
xchg
adc
pop
test
imul
sub
jo
push
lods
jno
dec
xor
add
push
mov
fcmovu
inc
scas
sbb
push
sbb
dec
in
push
rcll
in
and
cltd
jp
fmull
push
loop
sub
divb
dec
fcoml
subl
bound
out
aas
loop
dec
mov
outsb
out
loopne
cmpsl
adc
mov
xchg
dec
jle
inc
xor
fisubrl
add
pop
int3
sub
mov
aad
ret
and
xor
subl
push
lock
or
cmp
stos
or
jge
lcall
and
leave
pop
je
xchg
or
push
dec
iret
in
push
fdivrl
les
cwtl
sar
mov
jp
outsl
mov
outsl
shl
add
sub
test
mov
jno
pop
sbb
lea
mov
pop
jne
and
cwtl
sar
nop
lret
in
les
mov
rcr
repnz
and
sub
push
mov
dec
scas
mov
es
push
test
dec
aam
xchg
xor
dec
xor
push
or
test
pop
lods
xchg
sbb
shll
sbbl
fstpt
xchg
cmpl
insl
sbb
xchg
jno
pop
in
jns
pop
enter
ss
out
loopne
ret
xchg
and
or
cmpsl
xorl
jg
and
mov
push
sahf
mov
repnz
imul
aam
mov
cmp
cld
popf
mov
sbb
imull
cld
lahf
inc
mov
add
jecxz
rcl
jns
lock
mov
pop
jno
lods
push
adc
cld
test
sub
mov
xor
pop
pop
xchg
mov
xchg
mov
xor
dec
cmp
sbb
sbb
or
mov
pop
cmc
pop
negl
sbb
and
and
push
mov
xchg
cltd
outsl
rolb
pop
pop
cmc
cmpsl
adc
xor
cmp
loope
stos
in
xchg
mov
lods
addr16
and
std
adc
add
pop
xor
mov
hlt
push
lret
xor
js
mov
and
push
add
aad
fucomip
int
xor
aas
jno
sbb
data16
pusha
cwtl
fmull
push
jo
cmc
js
push
jp
les
ja
sub
mov
cmpsb
fldenv
lcall
movsb
inc
inc
jmp
dec
jg
iret
fdivs
fs
insl
xor
pushf
pop
and
adc
dec
pushf
xchg
stos
lahf
lcall
insl
popf
mov
dec
dec
test
lock
inc
mov
add
addr16
ds
les
pop
mov
shll
xor
lods
or
mov
aaa
stos
stos
pop
popl
mov
xchg
jp,pt
xor
in
mov
out
sti
xor
into
pop
xchg
xchg
cmp
xchg
jbe
movsb
in
xor
mulb
jae
jle
mov
lcall
in
xor
lcall
dec
ret
inc
repnz
in
fldt
or
sbb
or
fs
xchg
adc
add
mov
aas
add
xor
loop
enter
sti
sbb
aaa
dec
pop
scas
in
into
outsb
xor
or
sbb
sarb
loope
jmp
push
inc
outsb
and
sub
push
fcoms
xchg
pop
push
mov
into
inc
jle
push
jnp
xchg
test
dec
loopne
stos
mov
scas
jmp
loope
std
std
shll
test
daa
or
jecxz
xchg
aad
cld
fucom
cmpsl
fsubrl
inc
jb
bound
mov
or
dec
stos
notb
aad
add
mov
inc
mov
mov
inc
lret
cmpsb
xor
idivl
scas
jns
orl
in
pusha
mov
adc
in
fmull
cwtl
repnz
testb
inc
mov
inc
mov
push
mov
pop
jno
xor
xor
jnp
xor
mov
dec
dec
ljmp
lcall
and
xor
xor
in
pop
add
es
inc
cli
xchg
xchg
xchg
dec
cmpb
push
hlt
push
loope
lock
sahf
pop
pop
mov
pop
lcall
clc
mov
into
jl
inc
jns
sbb
cwtl
mov
orb
test
aam
xchg
stos
pop
add
arpl
popa
out
clc
out
sub
bound
fmull
mov
fsubrs
bound
in
xor
lock
mov
cmp
sar
and
sub
sbb
je
or
xchg
ja
pop
pop
mov
mov
dec
xlat
out
or
xchg
sbb
adc
push
popl
jmp
mov
xor
xor
dec
lret
jle,pn
sub
mov
mov
adc
mov
outsl
pop
insl
jge
xchg
jl
pushf
pushf
push
icebp
inc
mov
test
or
and
push
scas
stc
mov
mov
mov
or
loope
push
imul
out
sarb
adc
jbe
out
jno
mov
rcr
add
aam
sbb
sahf
call
nop
jae
pop
aad
xor
dec
pop
dec
cmp
test
es
fsubrl
inc
sub
mov
shrb
and
xchg
mov
fists
dec
xchg
test
adc
icebp
leave
push
lahf
jmp
sbb
lea
js
imul
push
xlat
test
lods
inc
jno
gs
imul
out
pop
add
lds
jl
cmp
inc
testb
push
inc
ja
test
int3
out
mov
and
lcall
out
sub
mov
jns
dec
outsl
add
xlat
cmp
lret
into
xchg
scas
insl
aas
pop
or
in
mov
push
ss
jl
mov
daa
adc
cmp
adc
push
and
mov
lcall
xorb
add
gs
mov
push
xor
movsl
pop
pushf
cmpsb
inc
pushf
sahf
or
pusha
inc
repz
mov
mov
push
jo
insl
dec
int
jbe
fldenv
or
sahf
lret
mov
adc
cmc
mov
jp
xchg
fsubl
arpl
imul
mov
xchg
lock
movsb
repnz
addl
xor
aam
dec
inc
mov
pop
cmp
jnp
inc
xchg
dec
lret
fildl
rorl
scas
or
xchg
loope
fistpl
sub
or
pop
addr16
mov
std
stos
jle
cwtl
icebp
xchg
cli
push
dec
mov
popf
cmpsb
push
cwtl
js
pop
xchg
daa
jne
in
out
mov
scas
pop
sbb
inc
mov
jb
std
fistpl
dec
cmpsb
push
lret
mov
dec
add
imul
fdiv
ret
mov
push
inc
mov
fmull
mov
push
insb
push
mov
xchg
outsl
push
push
icebp
popa
inc
xor
and
cmp
add
loopne
inc
insl
shll
test
push
subl
cmp
push
push
xchg
stc
mulb
testb
jecxz
cwtl
movsl
jecxz
scas
pop
push
movb
rclb
roll
jmp
js
loop
cmp
and
mov
mov
mov
mov
add
int3
les
xlat
fwait
adc
mov
or
in
jecxz
lea
notl
sub
pop
outsb
mov
mov
sbbl
rolb
push
mov
sub
cmp
and
mov
and
push
mov
fisttps
leave
lret
inc
rorl
mov
push
bound
out
sbb
or
cmp
xchg
test
sub
arpl
dec
push
mov
outsb
ja
pop
lock
add
fldt
rcrb
dec
in
mov
pushf
aad
ja
inc
imul
sub
pop
mov
xchg
xor
sbb
mov
jg
mov
rcll
sbb
pushf
jno
pop
dec
jge
or
mov
test
dec
push
xchg
and
repz
outsb
cmc
xor
pusha
mov
xor
mov
lcall
imul
mov
inc
ss
fs
sub
xor
pop
mov
adc
cmp
fildll
cltd
inc
add
sub
les
lea
mov
inc
add
rcr
repz
lret
mov
lock
adc
out
gs
sbb
insb
mov
sti
dec
lds
xchg
xlat
or
mul
sarl
xor
push
xchg
push
sbb
lea
or
mov
ljmp
sbb
jns
add
xor
divl
in
stos
push
cmpl
sbb
lret
les
scas
add
out
mov
cmpsb
cmp
xor
nop
cltd
fwait
dec
loopne
das
mov
std
repnz
jp
je
in
sbb
stos
push
stos
mov
std
inc
stos
adc
pop
cmc
mov
jnp
lret
mov
testl
mov
test
jge
xorb
dec
mov
dec
gs
insb
xchg
or
fwait
jge
xchg
xor
inc
sti
testb
cltd
pushf
test
fstps
mov
sbb
fisubrs
xchg
mov
xchg
inc
pushf
adc
scas
or
mul
ljmp
adc
pop
jno
je
in
ljmp
adc
or
aam
pop
sbb
aad
and
jnp
add
adc
xor
cld
bound
pop
jge
sti
clc
push
or
negb
or
test
inc
adc
mov
mov
fists
xor
psllw
adc
repz
mov
testb
movsl
fsubl
pop
dec
push
mov
icebp
xor
cli
mov
xorb
dec
sbb
cmpsb
mov
nop
lcall
int
into
stc
jo
mov
mov
lods
jo
je
mov
gs
ljmp
pop
xchg
adc
cmp
push
fwait
inc
faddl
inc
pop
stos
xlat
movsl
lods
push
add
test
out
sbb
pop
push
sub
dec
mov
sbb
jne
or
push
xor
icebp
add
xchg
jns
je
and
dec
pop
mov
lret
mov
test
test
dec
sbb
adc
sahf
xor
add
mov
repnz
pop
dec
sbb
lcall
arpl
aam
cltd
inc
pushf
es
js
xchg
push
jns
rolb
dec
bswap
sahf
mov
divb
lret
xor
imul
and
out
xor
mov
arpl
or
outsl
push
rorl
sub
out
mov
mov
mov
mov
aad
lods
sahf
add
mov
mov
sub
xchg
pop
mov
jo
jecxz
cmc
mov
insl
cs
jmp
xchg
and
aas
xorb
push
fcoms
inc
int3
mov
dec
mov
jmp
daa
lret
ret
dec
jmp
mov
inc
or
ret
add
dec
loope
sub
adc
jbe
adc
mov
add
sbb
test
mov
sub
out
ds
xchg
mov
in
pusha
lock
and
sub
fs
mov
xchg
adc
or
adc
fldcw
jmp
push
xlat
leave
hlt
push
pop
mov
push
iret
push
push
sub
pop
insb
jno
adc
in
jne
sbb
add
and
mov
mov
lret
and
and
lods
syscall
pop
or
popa
xchg
and
mov
insb
movsl
testb
mov
mov
ja
and
and
nop
and
outsl
add
mov
aas
xchg
mov
jo
cltd
pop
pop
lret
adc
mov
pushf
or
cmp
icebp
mov
ret
arpl
ret
cmp
lret
cltd
fdivrp
xchg
aas
push
lods
adc
sbb
pop
ss
sub
lcall
pop
iret
rcrl
loope
sub
in
cli
outsl
cmpsl
jns
cwtl
pop
sbb
jle
cs
or
cmp
mov
inc
arpl
cmp
leave
add
loopne
popf
jo
xchg
cltd
fincstp
mov
iret
cmpsl
adc
aam
add
addr16
xchg
enter
sbb
mov
sub
popl
and
fucomp
mov
daa
lds
xchg
hlt
push
jns
inc
cmpsb
xor
mov
out
inc
pop
inc
pop
in
enter
xor
xchg
xor
je
inc
and
rcrb
add
arpl
xchg
inc
mov
hlt
ljmp
mov
clc
icebp
push
xchg
nop
andl
sub
pop
and
ret
adc
and
rcr
addr16
mov
lods
js
sub
pop
ds
mov
les
jle
repnz
movsb
or
push
loope
cwtl
lea
fmuls
out
or
dec
ret
movsl
jns
adc
add
dec
stos
fxam
cmpsb
inc
push
jno
fiadds
frstor
test
addr16
sub
dec
test
xor
in
add
push
fldcw
sbb
mov
aaa
imul
jp
xchg
adc
outsb
mov
add
adc
sub
add
stos
or
into
add
xorb
sbb
xor
out
call
scas
in
lret
rolb
jno
sbb
mov
shrl
rcl
sbb
jns
scas
enter
sti
and
sub
daa
jecxz
cltd
mov
pop
push
je
adc
dec
inc
jno
push
addr16
jmp
clc
dec
sbb
xlat
pop
and
pop
and
push
mov
mov
daa
add
cmp
cld
and
dec
push
sub
movsl
mov
jp
and
cmpsl
into
fwait
jb
adc
dec
testl
jae
and
mov
lock
outsl
xchg
loope
daa
pusha
stc
inc
cmp
mov
sub
pop
xchg
mov
movsl
mov
cs
je
mov
mov
ja
call
jnp
mul
dec
mov
ss
jp
add
sbb
aas
cltd
mov
jle
pop
sub
lret
mov
ljmp
fcoml
aas
pop
sbb
scas
push
cwtl
cmp
repnz
adc
or
push
add
cmp
pop
inc
push
cmp
lods
insl
leave
adc
sar
jg
or
lea
fisubrl
jo
lds
push
xchg
jle
jmp
mov
mov
cmp
or
jae
gs
mov
mov
mov
sti
into
cwtl
or
xchg
jle
add
ret
test
loopne
icebp
and
dec
enter
loopne
mov
lcall
aaa
add
mov
cli
jo
adc
iret
pop
cwtl
sub
push
testl
cmp
dec
dec
dec
mov
js
xor
xor
mov
jnp
jns
sub
fsubl
or
inc
and
sub
mov
adc
dec
fwait
sub
cmp
jns
rorl
aaa
fidivrl
xlat
lahf
ret
or
fdivrp
sub
std
mov
lahf
xchg
sbbl
mov
cwtl
mov
pop
insb
movsb
xor
loope
xchg
inc
sbb
test
adc
int3
out
pop
rcrb
loopne
cltd
adc
addb
fsubl
lret
ss
je
popa
lahf
jbe
in
test
out
inc
in
add
fbld
xor
mov
call
push
pop
icebp
popa
push
scas
add
xchg
ljmp
loopne
xchg
mov
jns
pop
push
rcll
test
in
push
push
loope
ret
mov
sbb
shrl
dec
lock
cmp
sbb
fs
aaa
cmp
mov
call
mov
cwtl
push
mov
cmp
sbbb
arpl
testb
xchg
leave
jbe
insb
inc
xorb
cmpsl
movsl
push
shll
inc
mulb
inc
mov
les
data16
rorb
outsb
in
loope
fsubrl
inc
and
leave
out
pusha
sbb
adc
xor
in
add
sub
scas
push
push
out
sub
test
sbb
int
pop
dec
ds
arpl
loop
sahf
lcall
jmp
mov
sbb
ss
sbb
lret
mov
sahf
test
pop
sbb
movsb
out
cmp
pop
mov
fcoms
popa
sbb
into
fs
in
dec
outsl
movb
lahf
lods
mov
add
andb
xor
lods
in
in
fimuls
adc
jecxz
cwtl
inc
fimull
out
rcrb
fnstenv
xchg
ret
scas
addr16
nop
sbb
imul
jp
inc
lds
dec
xor
sbb
in
nop
insl
mov
insl
pop
inc
aas
imulb
adc
jnp
lds
mov
lods
inc
xchg
xlat
pusha
shlb
fcos
xchg
rcrl
jge
cmp
xchg
xor
and
adc
cs
jle
pop
lahf
or
push
test
push
addr16
ficoms
scas
ret
cs
adc
sbb
push
sahf
push
das
addr16
jne
add
dec
xchg
dec
test
out
add
pop
cli
cmpsl
mov
cmc
pop
mov
aam
and
sbb
jmp
and
add
mov
mov
add
scas
in
bnd
mov
jbe
cmp
cmp
add
xchg
cmp
sti
inc
fldt
sbb
shl
adc
dec
cmpsl
sub
mov
ret
sub
repz
or
pop
in
test
int3
sub
fstpt
cmp
ret
aam
mov
mov
imul
or
jo
push
sbb
pop
push
shr
push
mov
lahf
or
mov
cmpsb
std
clc
push
das
jmp
loop
js
lea
sbb
mov
sub
mov
adcb
jae
lea
popa
mov
test
add
mov
sub
push
pop
movsb
and
pusha
lea
jae
les
ret
jbe
xlat
pop
addr16
das
divl
dec
dec
pop
out
dec
cmp
push
xchg
inc
cs
xchg
hlt
fs
lods
or
mov
mov
out
push
adc
mov
xor
jecxz
maskmovq
notl
loop
nop
test
jg
movsb
adc
dec
std
xchg
shrb
push
add
adc
ljmp
icebp
mov
and
jecxz
jecxz
lds
xor
pop
notl
cmc
fistpll
sbb
repnz
push
loopne
pop
wrmsr
xor
pop
cld
pushf
adc
ljmp
loopne
mov
sbb
xlat
stc
lret
pop
inc
xchg
std
mov
pushf
test
adc
jge
in
cld
ret
sbb
xor
xchg
fwait
add
repnz
fnstcw
cmc
jno
cmc
and
cld
out
add
xchg
rcrb
in
icebp
imul
push
ret
std
mov
fdivs
xor
xchg
jnp
mov
or
push
xchg
movsb
pop
movsl
jae
jge
out
inc
cmp
cmpl
jbe
leave
clc
repnz
sub
sbb
cmpsb
mov
xor
jl
xor
xchg
aam
movsl
push
sub
pushf
or
je
mov
inc
nop
jg
movq
mov
roll
outsl
lods
lea
repz
adc
mov
adcb
add
sahf
push
inc
sbb
inc
and
jge
cmp
mov
sbb
push
inc
addl
pop
fsub
mov
adcb
inc
jno
js
pushf
push
xor
sbb
test
mov
xchg
mov
pop
xchg
gs
pop
jae
fiadds
lds
into
cld
inc
nop
mov
bound
fstpt
loop
cmp
jl
mov
adc
sub
or
in
dec
faddl
imul
cmp
popf
inc
sub
repnz
icebp
addr16
sti
stc
fmuls
dec
and
repnz
pop
in
push
pop
lret
jp
aas
add
xchg
mov
adc
loopne
in
add
or
outsl
push
xchg
cmp
push
cmp
add
inc
fcomi
pushf
dec
xchg
mov
inc
movsl
push
mov
jmp
push
sbb
cmp
adc
adc
mov
push
sbb
sub
sti
in
lea
pop
iret
negl
xchg
out
jmp
fmulp
jns
push
adc
push
dec
mov
mov
adc
dec
mov
or
add
lahf
rorb
pusha
add
es
xor
jne
or
loopne
xor
lods
jne
and
mov
lcall
repnz
movsl
push
sarl
dec
push
mov
add
aam
xor
sub
sbb
add
xchg
repnz
popa
frstor
mov
dec
divb
stos
loope
push
sub
fwait
jne
fwait
mov
xor
mov
and
cmp
arpl
xchg
cli
shrl
sbb
insb
add
and
jp
mov
ror
scas
mov
mov
mov
pop
sahf
and
inc
mov
mov
push
mov
mov
roll
dec
into
mov
cmc
or
jl
loop
mov
xor
mov
cmp
sti
sbb
jmp
and
fcmovu
movsb
or
call
rclb
and
and
push
jbe
or
jge
fldcw
mov
jnp
inc
scas
xor
jno
jnp
shlb
dec
inc
jno
shrl
fwait
push
out
cmp
sub
je
dec
pop
out
int
pop
jne
in
pop
cmpsb
idiv
adc
loop
and
ret
das
mov
push
fstpl
mov
test
stc
xchg
xor
push
in
outsl
jecxz
xchg
xchg
jae
divb
cmp
dec
dec
add
rolb
je
icebp
jo
fbld
movsb
movsb
add
adc
lods
out
and
dec
dec
jno
xchg
lret
push
and
cld
mov
insb
int
add
mov
xor
cli
jns
jp
les
jo
lcall
jnp
je
mov
les
inc
in
mov
outsb
jne
adc
rclb
ljmp
inc
dec
loop
pusha
dec
das
pop
mov
popf
movl
ljmp
das
orl
mov
mov
cmpsb
add
push
loop
sub
mov
cmp
xor
sub
out
mov
fsubrl
mov
sbb
fistpl
add
push
pop
push
test
negb
pop
cmp
aam
jp
pop
cmc
rcrb
mov
pop
stc
scas
daa
mov
jno
dec
fsubrl
in
test
paddw
test
sahf
xchg
mov
pop
lret
add
into
cld
xor
aas
xor
lahf
data16
mov
pop
mov
fadds
rcrb
xchg
call
fldenv
lret
jb
mov
out
sar
lcall
sbb
sbb
push
test
imul
out
ficoml
push
cmpsl
loopne
push
pusha
and
cmp
push
push
flds
insb
jecxz
sub
stc
lods
dec
sahf
inc
inc
dec
sarb
sub
std
mov
sahf
stos
cmpl
xor
pop
sbb
es
ss
imul
cmc
pop
jg
add
adc
and
mov
clc
dec
aaa
mov
push
pop
ficomps
xor
addr16
mov
test
nop
js
insl
pop
or
or
jns
ds
cmp
and
sbb
push
or
push
shlb
mov
push
ds
mov
mov
mov
cmp
cmc
or
lock
repnz
fbstp
inc
inc
jle
fabs
pop
movsl
jb
dec
mov
mov
loope
dec
stos
xorb
fldenv
mov
mov
out
mov
out
cmp
push
ret
pop
or
pushf
xor
xlat
dec
out
scas
cltd
faddp
les
imul
push
rclb
loopne
sub
jle
inc
adc
test
pop
data16
ficompl
icebp
fucom
daa
lret
pop
xchg
sbb
add
fcomip
and
and
insb
shrb
in
inc
lds
outsl
cmp
mov
lret
add
adc
insb
jae,pt
popf
pusha
addr16
dec
pusha
je
pusha
sub
inc
cmpsl
call
rorl
xchg
shrd
xchg
dec
popf
jg
jmp
cmpsl
sub
pop
sbb
mov
cltd
lret
cmpsb
sti
testb
test
or
push
adc
popf
inc
shlb
aad
das
repz
loope
fimull
or
jbe
xor
cmp
insl
sbb
xor
jb
js
in
and
lcall
repz
pop
lods
into
arpl
cmp
cmp
lahf
insb
gs
pop
jl
fadds
dec
nop
cmp
out
faddl
sub
mov
in
cmpsb
outsl
and
mov
and
add
in
fsubr
and
inc
mov
out
push
ret
sbb
or
xor
std
in
inc
jno
les
inc
push
and
in
call
stc
push
jle
push
into
and
jno
fdivrl
lds
jp
mov
call
xor
pop
add
sbb
outsl
cmp
lcall
xchg
push
movsb
xchg
outsl
ds
jge
xchg
sti
adc
scas
das
sub
sbb
and
cmp
xchg
add
shr
push
lods
cmpsb
std
pop
cmp
mov
sub
inc
loop
ja
pop
sub
mov
add
out
cs
or
lods
lcall
push
sbb
pop
xor
pop
icebp
fdivs
addb
test
fildl
cs
daa
push
ss
inc
adc
arpl
mov
pushw
inc
ss
sbb
mov
in
mov
mov
pop
aad
mov
xchg
shrl
push
xor
mov
push
cmc
and
push
aad
repnz
xchg
stc
gs
push
mov
inc
loope
inc
call
das
icebp
orb
sbb
inc
lock
dec
adc
outsb
jle
testl
pop
push
and
je
lods
push
ljmp
push
xchg
addr16
and
cmc
push
fcomps
test
aam
sbb
loop
push
jae
les
jmp
mov
inc
cmpsb
sbb
pop
das
cmp
xchg
add
cmc
lods
rclb
mov
cwtl
popa
sti
mov
push
cmp
lea
std
mov
jns
xor
push
jno
loop
enter
cmc
mov
hlt
xor
push
and
or
cmp
aaa
sti
inc
adc
in
inc
aad
sahf
insb
dec
dec
pusha
and
xorb
iret
xor
pop
dec
leave
addr16
dec
pop
aaa
dec
repz
pop
gs
xor
mov
shrb
xchg
in
dec
icebp
sti
cmpsl
push
mov
cmp
std
pop
stc
int
push
f2xm1
jge
scas
into
repnz
jg
aas
push
out
xor
imul
xor
and
fcomps
movsb
add
and
cmp
icebp
clc
aas
dec
mov
jnp
pop
mov
push
adc
insl
movsl
rcrl
popf
inc
and
rcrl
mov
jns
inc
aas
fidivrl
pop
cmp
int
mov
pop
aaa
push
xor
lods
loopnew
hlt
sbb
add
dec
sub
sub
dec
insl
cmpsl
mov
adc
pop
insl
push
hlt
movsb
add
sub
nop
jns
dec
ret
jle
sub
gs
pop
jge
loopne
push
popa
into
jmp
adc
pop
aaa
js
xchg
cmp
nop
outsb
or
inc
lock
fcompl
fnstcw
pop
xor
lret
inc
pop
cld
in
jno
cmp
jg
mov
out
pop
bnd
mov
pop
mov
pop
test
out
xor
in
push
jo
cmp
mov
lods
ret
ret
addr16
lcall
or
sti
mov
insl
push
cmp
sub
xor
iret
mov
xlat
mov
mov
push
pop
inc
cld
stos
fbld
mov
test
jb
movsl
sti
in
gs
or
or
loop
ret
pop
mov
jbe
xor
jnp
push
jae
xchg
into
arpl
rorl
pop
std
inc
xchg
hlt
and
dec
adc
fwait
aas
and
mov
mov
mov
out
push
lods
cwtl
cmpsb
das
cmp
orl
lret
inc
test
jo
data16
push
addr16
mov
into
cs
add
ja
push
fstpt
nop
fsubrp
test
out
rorl
dec
or
xchg
data16
mov
mov
loop
inc
xor
add
cmpsl
pushf
insb
mov
pushf
inc
push
popf
je
je
insb
test
pop
jns
sbb
orb
lahf
jge
shlb
sub
ljmp
ds
xchg
mov
dec
outsl
cmp
inc
cs
in
cs
jg
mov
scas
pop
mov
or
shll
dec
adc
lret
negb
cmpsb
jae
and
pop
adc
aad
xor
inc
shr
sbb
inc
mov
stos
adc
sub
arpl
imul
cwtl
mov
shrl
out
in
xchg
push
mov
mov
stos
and
sbbb
and
gs
cmp
pop
test
sub
mov
test
mov
adc
sbb
std
fisubrl
push
add
data16
shlb
test
roll
xlat
cmp
cmc
push
sbb
dec
add
out
ret
imul
scas
ret
inc
mov
in
fs
xor
insl
sbb
movsl
sarl
cltd
add
mov
xchg
cmpsb
sub
lods
jns
in
add
push
sbb
sahf
xor
dec
sub
push
adc
push
xchg
xlat
or
add
mov
cmp
insl
gs
mov
mov
aad
mov
in
andb
dec
mov
outsb
sarl
popf
push
subb
pop
mov
add
cmp
or
pop
push
cli
adc
dec
inc
jbe
inc
xchg
fdivl
xchg
xchg
xchg
cmp
jne
mov
mov
repz
push
jne
clc
xchg
rcr
ljmp
xchg
mov
pop
sub
mov
mov
jle
out
mov
ss
repnz
xor
add
lods
push
imul
adc
cmpsb
in
pushf
xlat
pusha
mov
cmpsl
mov
je
mov
or
jg
adc
fisttpll
or
mov
xchg
fbld
mov
jg
imul
mov
int3
fsub
loop
push
push
xor
jae
outsb
xchg
inc
xor
sub
addb
test
push
dec
jae
ljmp
inc
cmpsl
jns
jae
inc
add
adc
repz
push
in
sbb
xlat
adc
cltd
repnz
mov
loopne
pop
xor
insl
jno
mov
cmpsb
jo
test
jle
push
mov
sbb
repz
dec
push
lahf
inc
imul
sbb
and
pushf
jl
sbb
incl
inc
lret
pop
bound
jbe
rcrb
fucomi
inc
sub
dec
pushf
adc
les
shl
mov
push
adc
jmp
jg
jmp
mov
add
out
inc
jae
mov
je
fstpt
mov
or
xchg
sub
imul
fistpll
push
aas
jecxz
push
push
jb
dec
fcmovb
xor
cmpsb
mov
sar
sbbb
movl
sub
and
pop
cli
jae
mov
scas
cmp
int3
xor
and
cwtl
push
xchg
sbb
and
mov
pop
ja
xchg
push
inc
into
jno
shrl
or
loopne
imul
aas
inc
jnp
fcomi
fdivrl
fmulp
mov
out
rcll
lods
fisubl
xchg
test
add
sub
add
inc
das
call
sahf
mov
push
jmp
or
stos
scas
jmp
jle
and
sbb
dec
xchg
xchg
adc
loop
mov
cld
nop
test
in
jl
rclb
aad
add
inc
dec
jne
pop
subl
stc
in
xchg
faddl
mov
sub
aaa
xor
lds
nop
xchg
jb
xor
out
push
leave
out
cmp
cld
xor
sbb
idivl
insb
mov
icebp
jge
das
lock
loop
jmp
sbb
inc
adc
dec
add
mov
in
outsb
aam
aam
mov
mov
dec
mov
pop
popf
cmc
loop
sub
pop
pop
cltd
test
mov
mov
xor
arpl
adc
popa
testb
mov
xor
arpl
cmp
int3
dec
mov
xchg
push
inc
mov
jge
sub
jge
pop
in
mov
pop
movq
lret
inc
dec
inc
aas
sbb
lcall
jns
test
push
gs
repz
mov
cmp
in
nop
adc
loop
pop
adc
aad
lods
mov
fs
lea
jl
adcb
mov
nop
iret
shl
mov
jbe
jae
fmull
mov
or
mov
outsb
mov
fistl
sub
pop
adc
and
mov
sahf
and
push
ficompl
movsb
sub
sub
pop
orb
and
dec
mov
mov
push
fwait
lock
aaa
les
mov
pop
cltd
insb
mov
sti
stos
cmpsl
int3
xchg
pop
shlb
call
add
out
in
mov
and
imul
das
icebp
push
imul
lods
ficomps
lods
cli
dec
jl
sbb
sbb
out
xchg
mov
out
in
mov
mov
xchg
push
lret
pop
pop
sub
test
int3
mov
arpl
jb
dec
scas
repnz
jp
das
adc
xchg
sbb
sub
cltd
sub
lcall
xor
dec
lock
mov
andb
push
mov
call
in
inc
pop
adc
mov
mov
ror
stos
subb
movsb
and
mov
loope
xchg
clc
orb
lahf
or
mov
push
bound
lahf
adc
into
hlt
mov
mov
sub
je
pop
test
and
sub
dec
das
or
ret
push
mov
out
aam
jecxz
idivl
shl
sbb
and
inc
les
gs
jnp
fisttps
or
add
or
scas
inc
fwait
mov
push
fwait
in
scas
outsl
mov
fs
push
sub
iret
push
sub
mov
int3
push
jp
adc
mov
adc
fwait
dec
xor
out
xlat
dec
into
lock
jno
ljmp
mov
rorb
push
and
hlt
sbb
cli
loop
cmp
jle
les
jb
push
push
ret
jo
add
xor
pop
add
out
test
leave
adc
jg
jp
xchg
in
add
push
sub
lock
add
call
ljmp
addr16
dec
sbb
adc
sbb
push
push
sub
clc
fwait
aas
mov
rorl
aas
jo
fstpl
pop
mov
sarb
mov
xchg
stos
add
lock
xchg
pop
aas
xor
lds
and
xrelease
sub
dec
jle
jnp
add
jl
inc
mov
in
inc
dec
xor
out
cmp
cmp
jge
fistpl
andb
sbb
mov
cmpsl
jb
mov
mov
xchg
cwtl
jecxz
sbb
orl
or
xchg
shll
fstpl
push
or
sub
fsts
sub
stos
test
add
inc
out
out
mov
mov
jb
aas
dec
and
das
insl
xor
and
test
call
in
rcrl
xor
jne
in
ret
adc
fs
lds
jecxz
inc
mov
cli
xor
jns
popa
adc
dec
push
xchg
sub
insb
add
insl
push
out
inc
sub
test
cwtd
add
or
test
add
pusha
fcmovbe
shll
cwtl
and
xchg
aaa
arpl
ds
jmp
lock
leave
jb
ja
xor
dec
push
adc
daa
xor
and
mov
mov
cmp
sti
pusha
cmpsb
xor
hlt
test
rcrb
xchg
xor
sbb
ds
sub
imul
jge
mov
adc
mov
cltd
cwtl
icebp
in
cli
sahf
iret
adc
xchg
lret
stc
adc
jno
mov
cmp
add
add
rolb
scas
sbb
pop
sbb
mov
lds
xchg
shlb
pusha
insb
int
push
mov
mov
or
aaa
xchg
or
test
rolb
push
daa
cmp
sbb
sti
cmp
ret
fldenv
cs
xor
popa
out
xor
dec
fnstcw
mov
mov
mov
in
dec
repnz
mov
adc
and
mov
jae
repnz
fldt
sbb
scas
sub
ds
into
fwait
xor
adc
jl
dec
jecxz
rorb
xorb
stos
pcmpgtw
sbb
pop
cmc
insl
popf
mov
or
inc
fldt
test
jns
adc
and
scas
cltd
jmp
jl
mov
ljmp
xor
ss
fisttps
clc
stc
jle
mov
pop
jmp
lret
inc
inc
pop
push
mov
js
repnz
xor
sbb
daa
sbb
mov
das
lds
jmp
cmp
and
fsub
mov
cmpsb
hlt
movsl
lcall
push
dec
pop
les
sbb
notb
xchg
jo
orl
addr16
lret
jecxz
std
in
sbbb
add
mov
jge
jmp
mov
xchg
mov
out
mov
and
xchg
lods
sub
lahf
dec
dec
jb
icebp
subb
cs
push
jns
jge
lea
out
stos
mov
xor
int
loopne
leave
push
dec
xchg
cmp
xor
insl
dec
xor
or
cltd
mov
push
mov
mov
pushf
out
and
or
push
call
jmp
mov
dec
sbb
stc
mov
inc
icebp
cmc
ljmp
leave
and
and
jp
cmpsb
movsl
shrl
in
addr16
scas
enter
push
push
mov
adc
inc
popa
jle
lods
push
mov
scas
test
cli
lods
mov
push
mov
or
jl
scas
icebp
out
lahf
aas
adc
stos
test
je
push
jle
mov
sbbb
jns
mov
pop
jge
sarl
or
sub
rcll
mov
in
nop
div
aam
into
sub
pop
inc
cmpsb
and
adc
mov
adc
sub
out
hlt
mov
filds
lods
nop
clc
ret
outsb
cld
imul
out
mov
fdivl
xchg
int
pushf
pop
jo
fs
std
imul
stos
xchg
inc
pop
xor
mov
pusha
or
in
adc
sub
sub
jmp
push
test
cmp
frstor
adc
or
sub
mov
xor
or
test
testb
rcll
into
lock
xor
fwait
and
mov
or
aam
movsl
cwtl
pop
add
jb
xor
movsl
mov
out
mov
push
mov
scas
sub
insb
in
cmpsb
test
xchg
adc
cmpl
imul
inc
imul
push
push
mov
in
rcr
daa
push
loopne
fidivl
lds
mov
adc
adc
or
mov
push
cltd
sahf
test
xor
ja
sub
xchg
jle
out
in
push
pop
divl
rcrl
cmp
pushl
xor
dec
icebp
xor
mov
xchg
sbb
xor
adc
xor
js
ss
fbld
mov
jno
aad
sbb
sar
cmp
mov
or
jle
into
or
adc
repnz
jne
in
push
cmpsb
xchg
jge
div
mov
ds
and
hlt
add
inc
push
dec
test
jo
pop
pop
bound
adc
fldl
cmpsb
cwtl
repnz
mov
sub
test
leave
jbe
mov
fcomip
cmp
xor
mov
jmp
fs
xchg
pop
in
jb
pop
inc
jmp
sbb
std
lahf
xchg
je
add
pop
imul
mov
lret
and
adc
orl
xor
movd
push
push
icebp
cmpb
mov
mov
mov
push
xchg
jbe
mov
stos
mov
lret
sub
test
push
or
cmpl
cmp
lcall
mov
decb
xor
push
bound
add
pop
cmc
xor
mov
mov
sub
sti
adc
cmp
xchg
aaa
mov
imul
cwtl
lds
inc
test
jecxz
sar
jnp
mov
xchg
ljmp
adc
cmpsl
aas
xchg
mov
adc
and
sub
cmp
cs
std
push
add
sub
js
jl
out
push
jge
in
cmp
sub
daa
mov
pop
es
cwtl
je
push
je
cmp
jge
jle
test
xchg
shl
cmpsl
cld
dec
clc
cmp
pop
out
mov
testl
imul
push
test
iret
pop
jmp
loopne
sub
in
clc
rorl
or
cltd
out
dec
jo
sbb
orl
xor
rcrb
loop
mov
mov
add
cmpsl
xlat
addl
mulb
and
ja
pop
data16
pop
xor
movsb
jae
stc
xor
cmp
sahf
dec
imul
insl
pusha
jle
ds
loopne
mov
adc
movsl
movsb
clc
lcall
insb
cmp
sahf
je
jo
cmpsl
loope
sub
jecxz
arpl
push
out
repz
lret
pop
sbb
neg
xorb
rorl
push
fwait
dec
sub
and
push
jno
hlt
cmovs
fisubrs
rolb
inc
mov
rcrl
int3
and
xchg
push
inc
daa
loopne
dec
dec
iret
pop
movsb
clc
push
jnp
cwtl
std
cmc
inc
dec
test
test
or
sti
cli
push
sub
jp
out
pop
insl
adc
xlat
pop
lcall
xchg
das
or
xor
xor
jle
in
sbb
cltd
mov
mov
sbb
or
mov
ljmp
sbb
mov
data16
imul
xlat
dec
jg
jle
or
testb
rorb
sub
aam
inc
add
sbb
cmp
and
add
inc
mov
push
ficoms
out
jne
jno
cmp
add
adc
pusha
push
repz
loope
sbb
sbb
sbb
shlb
movsb
outsb
sbb
sub
ss
iret
pop
pop
mov
fwait
shrb
and
cs
mov
push
mov
jo
loope
and
stos
or
xchg
clc
mov
and
inc
js
fwait
sbb
in
cmp
jmp
cli
mov
insl
and
sub
cld
rcll
iret
inc
fstpl
pop
shr
pop
inc
add
test
sarb
ss
lock
popf
nop
lret
mov
aas
lret
jg
jp
loope
xor
imul
sub
pop
out
scas
cltd
push
dec
out
popa
sbb
push
cmp
out
daa
push
sbb
sbbb
test
mov
andb
xchg
dec
int
in
fldl
hlt
mov
lods
sbb
imul
mov
jp
aam
xor
mov
push
mov
sub
movsb
imul
xchg
xchg
jbe
mov
pushf
or
push
popa
adc
out
or
cmp
hlt
dec
pop
adc
xor
scas
sbb
dec
xlat
arpl
inc
jecxz
adc
adc
leave
rolb
leave
mov
lret
mov
lret
pop
dec
sbbb
es
out
out
sahf
sub
mov
mov
mov
dec
mov
cmpsb
xor
push
loope
rorb
iret
nopl
sub
pop
andl
sub
leave
iret
test
ss
dec
mov
stos
outsl
stos
mov
sub
test
enter
jle
imul
in
fdivrs
pushf
cmp
adc
out
add
cwtl
enter
icebp
imull
push
popf
fsubrs
cli
mov
div
cli
mov
push
pop
xchg
push
dec
cmp
inc
xor
fwait
stos
in
dec
mov
ja
lock
imul
adc
cmpsl
dec
testb
adc
xor
xchg
aas
je
pop
push
cli
pop
fwait
cwtl
sti
xchg
lods
shr
lods
bound
xchg
jecxz
sbb
stc
shlb
mov
outsb
adc
and
hlt
dec
test
mov
lods
out
mov
mov
ffree
inc
inc
add
loopne
dec
pushf
decl
add
out
mov
or
daa
sarl
mov
jle
sub
dec
fnstsw
fldenv
mov
stos
insl
xorb
mov
ror
and
or
sbb
daa
xor
and
sahf
inc
js
push
inc
add
aad
test
fs
cld
xchg
mov
and
popf
push
cltd
cltd
jmp
pop
daa
movsl
jns
dec
and
pop
sub
dec
mov
ret
push
inc
rorb
data16
jns
xor
sub
jl
sub
addr16
xchg
insb
push
shll
mov
xchg
shrb
lret
push
loope
jne
jno
sub
adc
sbb
mov
bound
xor
movsb
dec
mov
xor
testb
push
repz
dec
sub
int3
pop
arpl
into
out
loope
jle
jecxz
aad
and
add
or
jl
dec
mov
and
cmpsb
imul
pop
cld
xchg
push
cld
cmp
filds
mov
pushf
stos
in
mov
add
int3
pop
xor
out
add
clc
dec
inc
add
dec
cmp
cmp
cmp
cmp
xor
jp
mov
adc
insb
loop
popf
sub
in
in
sbb
cmp
lcall
and
lock
xchg
xchg
add
enter
push
mov
cld
fdivrs
mov
lcall
fimuls
or
adc
loope
add
xchg
sbb
or
xchg
fsubl
sbb
rcrb
and
adc
pushf
fcoml
lea
jbe
fwait
jmp
xlat
aaa
mov
add
sbb
jecxz
mov
push
dec
insb
adcb
lret
jl
icebp
sub
aas
cmpsl
imul
je
loopne
outsl
mov
mov
rcrb
in
mov
test
and
or
ret
mov
fcom
jae
fldcw
aas
push
sub
aas
jge
jnp
jno
inc
and
aaa
aaa
inc
in
pop
mov
adc
into
sahf
fidivs
lock
push
sarl
cmp
sbb
shl
mov
push
adc
aas
dec
in
hlt
lds
out
mov
lods
jne
jns
mov
or
pop
loope
pop
jp
das
jno
stc
sbb
jmp
adc
mov
lret
push
int3
sbb
mov
cmp
outsb
lock
test
out
jo
fs
mov
inc
std
mov
mov
pop
lods
repnz
push
adc
dec
stc
dec
bsf
sbbl
movsl
mov
dec
cmp
fucom
decb
pop
sub
je
push
and
hlt
int3
ret
or
sub
pop
popf
out
push
pop
into
jbe
xchg
dec
xor
loopne
adc
test
aas
push
and
rcrb
mov
rcll
repz
sbbb
sbb
adc
aad
mov
lods
fcmovnu
push
cld
push
pop
push
xchg
mov
ret
loope
xor
lahf
in
call
jp
pusha
je
pop
fisttpll
js
push
and
cmp
and
sbbb
aaa
or
inc
rcrl
loop
in
xor
popa
lods
adc
xor
lret
shlb
pop
inc
dec
fs
adc
mov
fisttpl
sub
test
sbb
inc
add
or
aad
jge
jmp
adc
or
push
inc
adcl
sub
mov
out
jp
les
arpl
inc
push
xchg
mov
cs
push
inc
pushf
int
jecxz
into
sbb
jmp
adc
add
in
cmc
push
inc
adc
iret
xorl
lods
lds
sbb
loopne
dec
into
xchg
ss
insl
cmp
int
test
roll
push
fs
push
jg
rorb
sbb
dec
xor
je
fcmovbe
aas
cli
out
push
pop
xor
xor
adc
lret
rorb
lahf
dec
clc
lret
std
es
mov
out
xor
push
jmp
add
call
or
push
call
jmp
dec
sbb
out
inc
mov
clc
aam
inc
int3
cmpl
aaa
sbb
pusha
pop
adc
mov
lods
les
stc
mov
mov
hlt
push
mov
into
fdivl
mov
mov
sub
js
hlt
icebp
cmp
and
aas
jbe
xchg
fisttps
mov
mov
dec
mov
jge
mov
in
addr16
out
xor
outsb
sub
jg
cmpsb
pop
vtestpd
sbb
loope
out
dec
or
push
or
shrl
sub
fcoms
loopne
out
stc
aaa
mov
repz
xor
movsl
mov
movsl
add
cmp
or
test
xor
xlat
pop
cmp
or
mov
mov
out
xchg
clc
jo
mov
jns
and
bound
xor
movsb
out
jle
push
sarl
push
lock
dec
xchg
jge
inc
pop
cmp
dec
div
sbbb
sbb
test
insl
out
jne
mov
test
push
outsl
xchg
fldt
dec
sub
test
lods
mov
fsubrs
stos
sbb
mov
fwait
cli
xlat
and
loope
ret
outsl
push
sahf
fldcw
mov
mov
cwtl
adc
call
sahf
xchg
inc
mov
xchg
mov
dec
adc
cmp
arpl
jle
and
stc
lea
scas
or
sbb
lahf
out
out
fwait
aad
and
das
mov
pop
les
jge
pop
data16
and
pop
add
add
or
jmp
pop
sub
mov
cld
je
jp
scas
rorb
iret
and
mov
andb
cmc
jl
push
mov
icebp
push
orl
hlt
cwtl
cmpsl
inc
clc
sbb
add
je
add
arpl
cs
lcall
roll
cmp
add
mov
cmpsl
jne
outsl
loopne
popf
test
aas
sbb
jmp
and
mov
xor
cld
sub
xor
or
or
cmp
rcll
mov
pop
xorb
lahf
stos
jo
or
movsl
jle
into
cmp
aas
inc
inc
push
sbb
xchg
insl
inc
out
cmpsb
add
jmp
add
sub
aaa
ficoml
inc
cld
mov
or
cmpsb
and
rcll
fimull
je
loopne
and
sbb
imul
jle
jbe
push
and
xchg
sub
jle
mov
jns
sbb
inc
or
jae
jne
mov
ja
add
call
daa
inc
imul
pop
xor
lods
add
mov
pop
sbb
mov
adc
sahf
jecxz
fisttps
pop
je
subb
out
adc
aam
mov
inc
aad
ja
or
xor
mov
data16
and
add
cmp
or
je
or
mulb
and
fistps
lret
xor
inc
mov
stc
jecxz
add
xor
push
mov
and
test
int3
mov
xor
into
dec
ret
mov
xor
lahf
pand
xor
bound
fimuls
clc
jecxz
fisttpll
xor
push
sarb
mov
outsl
mov
mov
adc
adc
push
cs
sub
inc
xorl
sub
add
in
push
sqrtps
ror
stc
mov
imul
insl
xchg
sub
xorb
mov
and
xchg
in
cmpl
int3
mov
popl
mov
pop
test
clc
dec
xchg
aaa
in
pop
xor
push
mov
icebp
ror
inc
xchg
les
fimull
and
outsb
addb
push
push
inc
or
sti
pop
adcb
fcoms
loop
rcrb
lcall
mov
loop
loopne
pop
ljmp
int
in
dec
out
sub
or
in
mov
rcrl
dec
jecxz
cs
das
inc
and
lcall
ss
fwait
test
push
jns
sub
lds
rcrl
pop
clc
pusha
bound
jmp
jl
xchg
insb
dec
ret
and
jg
clc
or
cmp
sbb
push
iret
movsl
out
push
dec
push
jnp
orb
scas
add
clc
cmp
repz
dec
lret
call
fwait
sarb
push
sbb
jns
pop
xor
fnsave
mov
jno
push
hlt
pop
pop
cmpl
xor
push
inc
mov
hlt
xor
jbe
push
repnz
xchg
dec
mov
mov
pop
dec
sbb
hlt
movsl
std
cmpsb
in
sub
sub
or
mov
aaa
loopne
andb
mov
and
stc
lods
xchg
mov
psrad
xchg
stc
mov
or
mov
xchg
out
mov
mov
sbb
dec
mov
out
rolb
arpl
cmc
in
add
out
mov
test
dec
or
cltd
test
or
dec
ret
inc
aas
es
mov
clc
fidivrl
pop
jno
and
out
incb
or
idiv
inc
xor
leave
and
adc
stos
mov
jo
rcrl
mov
sub
int3
outsb
rcll
jl
into
add
xor
inc
xchg
mov
xchg
test
movsl
es
aas
lods
jmp
xchg
jg
adc
repz
mov
andnps
mov
inc
adc
divl
jge
scas
cmp
adc
popa
add
inc
shll
dec
inc
inc
jbe
stos
push
sub
cmp
incb
sbb
decl
pushf
or
dec
jecxz
add
jnp
sbb
iret
sbb
push
pop
inc
add
movsl
mov
mov
xchg
cwtl
push
push
jp
idivb
test
xchg
xchg
scas
fnstenv
adc
push
movsb
jge
xchg
loopne
clc
add
popf
pop
xchg
sbb
jbe
xchg
ret
push
test
in
adc
ds
push
cmp
push
mov
inc
pop
inc
pop
pop
mov
outsl
cwtl
lahf
test
scas
adc
jl
ja
pop
and
repnz
orb
sbb
sti
fists
lods
sub
or
imul
pop
cmp
out
shll
push
dec
cmp
xorb
xor
nop
stos
popa
or
shlb
iret
push
jmp
cld
adc
xchg
sbb
and
test
add
test
lds
popa
cld
xchg
sbb
pop
mov
push
lds
xor
add
cltd
int3
add
ja
cs
movsl
push
jmp
dec
add
decb
push
inc
mov
sti
rorl
cs
lcall
dec
pop
test
mov
cwtl
inc
repz
ficompl
ret
jge
cli
adc
incb
xchg
jg
jmp
fimull
pop
push
inc
enter
dec
pusha
inc
es
mov
mov
popa
or
mov
lods
fwait
pop
arpl
addb
out
jne
push
mov
insl
pushf
nop
test
xchg
pop
outsl
mov
icebp
movsl
ret
push
out
pop
jmp
add
add
or
mov
sbb
mov
cwtl
pop
pusha
lret
sub
push
and
xor
adc
xchg
pop
or
sub
jp
and
test
cmova
mov
inc
les
scas
adc
flds
lea
push
out
sub
movsb
pop
pop
cmp
mov
pop
xchg
inc
pop
mov
imul
mov
jno
mov
fsubl
sub
in
jmp
mov
cmp
jle
mov
sbb
test
leave
fdivl
loopne
mov
or
mov
xorl
in
add
pop
loope
in
pop
inc
or
fsts
in
xlat
ja
in
enter
jbe
insb
jbe
sarb
stos
out
aaa
and
dec
mov
or
cmp
push
lahf
mov
dec
lea
pop
enter
aaa
or
pop
cmpsb
cmp
out
scas
pushf
xchg
call
add
inc
sbb
in
jmp
mov
dec
mov
dec
lret
dec
cmp
mov
das
imul
jmp
inc
insb
pushf
mov
fldt
rcll
adc
cld
or
adc
cs
xchg
jo
div
pop
pop
mov
in
jo
push
sub
cwtl
sbb
stc
loope
dec
scas
out
or
repnz
xchg
add
jne
sahf
jbe
jnp
and
pop
pop
and
adc
lds
jl
cmp
lret
xor
stc
in
dec
lods
int3
lret
mov
lcall
mov
xchg
in
mov
test
mov
es
cmpsb
idivl
cmc
inc
and
out
pushl
mov
subb
add
pop
shll
js
push
and
ljmp
jecxz
loop
roll
and
inc
mov
jnp
push
sbb
lahf
mov
mov
jne
adc
aaa
leave
dec
and
repnz
int3
subb
call
cmp
mov
mov
aaa
add
pop
jg
std
xchg
aad
mov
arpl
daa
add
dec
adc
and
ret
les
mov
adc
add
add
mov
mov
subb
mov
scas
fdivl
aam
cli
cld
add
push
fadd
inc
cmp
mov
or
inc
in
mov
scas
push
push
xor
lods
hlt
xor
outsb
or
pop
push
xor
push
cmp
jge
adc
and
cmp
jle
je
sub
iret
int
mov
xlat
test
sub
ret
imul
shlb
mov
shll
pop
inc
xlat
mov
js
mov
push
dec
push
scas
and
mov
jmp
cmp
dec
test
pop
outsb
cmp
outsb
aaa
push
lods
ds
gs
jge
scas
pop
sub
mov
mov
aad
mov
mov
sbb
lock
dec
aad
jo
cmpsl
sub
mov
mov
push
std
fsubl
mov
pop
aam
jns
rol
push
push
push
lahf
loope
and
std
stos
adc
ret
cmp
or
lock
pushf
dec
add
out
lock
sub
aaa
xor
int
sub
or
jmp
rorb
mov
iret
loopne
pop
jb
cmp
outsb
mov
pop
inc
adc
hlt
mov
mov
xor
arpl
mov
movsl
dec
pop
into
mov
jge
mov
jge
dec
or
les
pop
stc
dec
jo
inc
and
or
stc
mov
inc
fdivrl
jl
pusha
jnp
and
xor
in
int
cmp
push
cltd
into
jle
aaa
and
loopne
inc
gs
add
xor
and
data16
mov
adc
in
push
mov
add
xchg
aam
inc
mov
push
mov
cmc
scas
sbb
icebp
cmpsl
push
jnp
pop
xlat
fcomps
in
jg,pn
ss
mov
test
mov
loope
jno
push
sub
xchg
addl
inc
pop
ds
sub
sbb
jge
pop
cwtl
xchg
fsub
ror
icebp
test
lds
push
xchg
popa
mov
and
sbbb
mov
inc
mov
fs
mov
cmp
dec
mov
and
jmp
pushf
in
fistpll
sbb
cmpsb
je
lahf
in
out
pop
cli
or
ret
ret
lea
and
ret
inc
loopne
mov
roll
shll
icebp
inc
test
insl
pop
mov
lret
and
sbb
add
leave
packsswb
out
pop
push
dec
xor
xchg
rcll
sub
cwtl
shll
ljmp
cvtpi2ps
in
inc
clc
sbb
or
dec
pop
int
fdivr
and
and
sbb
lock
aaa
xlat
je
mov
ret
jl
sahf
lahf
std
xchg
out
inc
mov
or
test
in
in
das
insl
inc
loop
adc
push
dec
cmp
push
mov
mov
jne
xchg
adc
xlat
outsl
dec
sub
pop
ljmp
jl
test
pop
ljmp
rclb
dec
dec
xor
insl
sti
push
ss
ljmp
call
mov
xor
mov
dec
in
and
inc
das
jecxz
and
and
gs
sti
sahf
andl
sahf
or
cmp
hlt
mov
mov
mov
push
pusha
int3
jb
mov
fisttpl
xchg
mov
fwait
add
add
sahf
stos
xlat
shrl
je
jmp
inc
mov
repz
push
lcall
aaa
xchg
cmp
cmp
lret
cli
pop
movl
or
mov
data16
loope
pop
hlt
xchg
add
fmuls
dec
jb
pop
gs
mov
pop
insb
or
cmp
in
js
imul
and
push
je
and
imul
inc
xchg
sub
sbb
inc
fwait
pop
pop
call
std
sub
ret
pusha
mov
cmp
xchg
ds
xchg
cmpsb
sbb
in
cwtl
adc
dec
push
aam
lds
pop
call
cmp
cmc
adc
jnp
and
lods
fistl
mov
jp
or
pop
cltd
pop
mov
test
ss
push
add
clc
lods
pop
dec
call
test
mov
sub
outsb
adc
movsl
mov
rclb
out
das
push
xchg
fwait
mov
mov
jecxz
jle
mov
lock
adc
aam
lret
pop
inc
ss
jne
lret
pop
lcall
jne
mov
lods
incl
mov
je
add
out
xor
arpl
pushf
sbb
std
cwtl
pop
inc
xchg
xor
fs
loopne
mov
stos
insb
mov
inc
lods
jne
adc
jb
shr
ljmp
mov
mov
hlt
ljmp
lea
adc
arpl
mov
and
imul
jb
dec
js
lods
inc
mov
or
xchg
mov
mov
dec
das
add
fmuls
sub
inc
icebp
mov
fdivrl
fnstcw
repnz
push
xor
xchg
dec
push
mov
rcll
and
notl
addr16
scas
xchg
mov
push
or
inc
pop
mov
mov
stos
sub
dec
or
adc
add
cmpsb
mov
pop
iret
jne
js
sahf
out
fwait
xchg
cli
pop
dec
or
in
dec
inc
out
lods
adc
lcall
mov
ljmp
mov
cmp
add
in
sub
js
sbb
sub
and
enter
enter
jbe
adc
pop
stos
subl
sub
popa
mov
daa
xor
fnstcw
jg
push
jmp
push
sub
inc
pushf
mov
push
imul
movzwl
dec
sbb
sub
ret
jo
mov
lretw
sti
mov
mov
aad
loopne
hlt
add
in
enter
orb
insb
iret
shrb
mov
add
and
rcll
enter
xchg
push
outsl
sti
push
loopne
sub
or
icebp
sub
popf
fucomip
shll
jle
ret
xchg
mov
inc
lods
lahf
popf
add
enter
mov
sub
cld
sub
dec
js
icebp
mov
jns
cmp
xchg
shr
jg
pop
ds
sbb
ljmp
mov
adc
cmp
sti
aaa
cmp
je
pop
test
test
mov
sar
inc
pop
fcmovbe
shll
and
repnz
and
jb
and
scas
lock
sbb
jge
jnp
or
add
xchg
popf
cmpsl
pop
lahf
neg
adcb
hlt
mov
xchg
insl
movsb
push
lret
sbbl
das
nop
mov
mov
outsb
test
cwtl
mov
push
xor
mov
ror
rcl
xor
dec
sbbb
mov
stc
xchg
add
dec
dec
xor
fstpt
dec
repnz
shrb
subl
inc
sbb
stc
fs
sti
push
fidivrs
sub
adc
aam
or
cltd
cli
ret
jp
pop
mov
dec
pop
outsb
scas
push
or
push
es
repnz
mov
pop
test
int3
insb
inc
lds
inc
add
lahf
push
repnz
cmpb
pop
xchg
jb
out
arpl
sub
pop
loope
add
or
loopne
pop
inc
xchg
in
subl
iret
dec
lds
dec
xchg
call
repnz
xor
popf
jbe
sbb
xor
popa
loopne
sbb
cmp
imul
adc
and
in
mov
xor
stos
xchg
fdivrs
push
mov
xchg
inc
mulb
scas
arpl
xor
dec
idivb
testl
cld
jle
fnstcw
in
adc
movsb
insl
and
cmp
xor
push
mov
scas
addr16
dec
sub
aas
popf
mov
hlt
daa
inc
sbb
ret
lods
lahf
fists
and
push
movsb
adc
and
js
adc
xor
cmp
xchg
mov
xlat
dec
jne
rol
ret
mov
sbbl
mov
gs
ret
leave
cli
movsb
stos
mov
jge
inc
xorl
sub
inc
call
push
mov
loopne
or
xor
cmp
push
mov
iret
mov
lcall
rorb
fsubs
mov
mov
jge
ret
stc
sar
mov
insb
cltd
push
rcrl
mov
push
scas
rorl
fimull
push
pop
cmp
and
push
hlt
ret
dec
push
lock
inc
mov
loop
mov
notb
fs
mov
cs
fildl
cltd
clc
inc
cmp
pop
sub
mov
mov
mov
xor
sbb
testb
xor
lea
lds
pop
xor
pop
push
push
pop
shlb
adc
loop
sarl
loopne
adc
loope
cs
mov
cmpsl
lds
jge
sti
test
push
out
add
sbb
enter
mov
push
in
cmpsl
cld
cwtl
add
rolb
rcr
cmp
jnp
outsl
mov
sub
dec
mov
sbb
jnp
mov
xchg
sub
pop
mov
and
shll
jge
lea
push
and
test
mov
sbb
inc
sub
pop
mov
push
push
fdivrp
xlat
jecxz
cltd
mov
jl
add
adc
int
cmp
pop
das
outsb
lds
xchg
daa
test
pop
mov
or
fcoml
sbb
into
add
sarb
inc
ret
sub
jg
pop
mov
jno
jle
imul
mov
cmp
cwtl
or
call
push
sahf
mov
pop
pop
mov
call
adc
lea
xlat
xchg
idiv
or
xor
mov
jbe
inc
cmc
adc
inc
and
sub
gs
xor
cmpsb
lock
test
xchg
dec
mov
or
lock
push
dec
repz
inc
sub
inc
in
inc
sbb
shl
std
loop
inc
les
nop
imul
xchg
std
enter
sub
adc
adc
mov
pop
aad
mov
ja
cmp
pop
pop
add
loop
pop
test
sbb
xchg
lret
jae
loopne
mov
scas
or
hlt
cmp
or
adcb
pusha
cltd
jg
shl
mov
aaa
sbb
das
sub
push
shlb
and
lcall
sub
dec
dec
add
xchg
popa
cs
push
mov
loopne
sbb
mov
rolb
sbb
aas
rcrl
push
mov
xchg
setl
cli
ja
fildll
mov
shlb
push
inc
mov
out
dec
jecxz
sbb
sbb
fwait
mov
pop
dec
jecxz
pop
inc
orl
dec
push
out
out
jp
xchg
mov
mov
ret
test
adcl
pop
pop
pop
jb
jno
fs
jp
and
enter
in
jg
test
jmp
sub
imul
mov
rolb
sbbl
jbe
enter
jb
lds
negb
nop
mov
jle
dec
out
mov
mov
mov
pushf
xchg
inc
in
jnp
iret
mov
or
add
fisttps
mov
enter
iret
sub
pop
ja
leave
sub
jl
outsb
xorl
xchg
push
inc
jle
adc
scas
out
cmp
jl
mov
adc
cmp
inc
enter
jae
dec
or
ffree
lret
xchg
add
add
pop
mov
mov
out
js
and
push
js
sbb
rolb
leave
gs
jp
mov
std
mov
lods
mov
push
jbe
and
les
movsb
jbe
push
jg
rcll
xor
xorb
mov
imul
add
mov
xchg
fbld
aad
sbb
outsl
add
lea
repz
lods
lret
jecxz
test
ljmp
mov
scas
mov
lds
and
mov
fnstenv
sar
pop
int3
jne
adc
lret
pop
cmp
xchg
dec
mov
dec
mov
mov
int
stc
out
xchg
ja
ret
int3
frstor
mov
adc
add
pushf
fisttps
pushf
ror
xchg
in
adc
xor
movsb
and
pop
cmp
imul
out
adc
mov
lahf
adc
sub
jo
push
cmp
je
add
fwait
xchg
shr
sbb
mov
stos
vmovsldup
mov
jmp
dec
push
es
push
pop
filds
mov
xor
lods
push
mov
xchg
fwait
clc
mov
ljmp
jne
and
xor
sahf
mov
dec
rcll
aam
xor
aam
jo
sbb
jg
testl
cmp
and
mov
jns
lock
sbb
sbb
xchg
dec
scas
push
mov
stos
inc
call
cltd
rcrl
insb
pop
jl
mov
and
mov
inc
cmpl
mov
testl
pop
fldl
or
cmp
insl
hlt
inc
mov
lcall
pop
rcl
and
jb
stc
lea
pop
cli
push
mov
adc
pop
add
mov
int
dec
fisttpll
dec
add
sbb
dec
dec
push
bound
push
int
mov
ss
cmp
pop
mov
cmpsb
cli
mov
out
xchg
pop
cmp
dec
inc
jae
shrb
xchg
mov
ja
push
inc
scas
ror
cmp
xor
add
in
push
clc
enter
mov
xchg
repz
pop
roll
add
jne
sbb
cmpsb
test
pop
je
aaa
sub
mov
mov
mov
cmpl
fnstcw
nop
cmc
in
outsl
and
dec
ret
and
push
jne
mov
cld
xchg
jae
daa
ret
cmp
add
inc
rcrb
mov
into
fdivrs
loope
fadds
mov
dec
jle
aaa
fstpl
push
pop
push
push
jns
pop
adc
sbb
mov
mov
sahf
xchg
xor
xchg
addr16
xor
stc
icebp
adc
mov
xchg
push
movsb
push
mov
jmp
mov
aam
cmp
lock
negl
movsl
cmc
push
insl
cs
scas
dec
add
dec
mov
cld
out
test
clc
mov
add
lods
add
rcrl
dec
ffreep
popa
sbb
jp
jb
mov
movsb
dec
pop
lcall
sti
enter
mov
leave
std
push
test
jle
push
add
mov
insb
jnp
pop
or
jne
data16
loopne
shrb
outsl
add
mov
sub
dec
mov
insl
and
push
or
cltd
dec
popa
mov
inc
lea
sbb
inc
fadds
mov
jg
mov
xchg
rcr
addb
pop
or
iret
xor
mov
adc
xchg
add
xchg
dec
xchg
sbb
or
add
adc
shll
cmp
rcl
sti
pop
mov
sarb
mov
mov
mov
xchg
xchg
inc
add
adcb
aaa
cmp
rcrb
movsb
dec
adc
and
push
pop
shrb
sahf
mov
ja
push
fsubl
jmp
dec
out
insl
xor
pop
jb
dec
scas
aas
ds
pop
mov
sub
aas
lock
push
insb
pop
fldcw
mov
dec
push
int
cmpsl
pop
pop
push
dec
test
pusha
mov
decl
jle
xor
lcall
out
sbb
mov
dec
and
cmpsb
pusha
cwtl
cmp
frstor
ljmp
roll
pop
lcall
fbld
pop
mov
in
pushl
mov
outsl
sbbb
mov
pop
dec
cmp
xor
push
pop
xchg
pop
lcall
mov
lea
popf
dec
movsl
sbb
popf
push
add
in
xchg
out
cwtl
lock
scas
and
std
lcall
sub
dec
sub
sbb
daa
xchg
add
cmp
pop
sub
mov
icebp
push
mov
call
add
cmpsl
push
dec
add
pop
pop
push
idiv
mov
add
cwtl
fistps
pop
mov
cmp
xchg
mov
cltd
das
mov
sub
enter
arpl
ja
inc
jne
jns
repz
xorb
pop
fcomi
sub
test
std
mov
call
pushf
adc
outsl
fimull
pop
js
adcl
inc
push
mov
lea
subl
sar
sbb
or
fnstcw
divps
xchg
pop
js
sar
jno
mov
cmc
jns
lretw
push
xchg
inc
ja
pop
push
mov
mov
jno
jg
imul
leave
shll
bt
sti
roll
inc
hlt
push
sbb
xchg
mov
psadbw
sahf
mov
inc
xor
cmp
pusha
jl
sbb
adc
cwtl
jle
mov
cmp
movsb
imul
pop
std
cmpsl
sbb
cli
adc
in
enter
pop
add
push
pop
mov
insb
aaa
jmp
mov
lods
aam
jno
imul
xor
mov
sub
fimull
les
out
dec
call
mov
or
mov
jb
inc
in
mov
xchg
mov
add
cmp
sar
push
push
out
sub
int3
orb
rorl
mov
popa
jo
repnz
test
adc
int
aaa
add
xor
int3
movsl
test
data16
insb
std
mov
ret
xor
and
lret
fwait
stos
rolb
jge
sbb
sahf
movsb
ja
dec
xchg
push
incl
inc
xchg
movsb
ss
jl
add
ljmp
sahf
neg
push
repz
jb
insl
aas
add
cs
inc
popa
pop
pop
in
jecxz
adc
sub
xchg
dec
add
push
pop
or
aad
jl
mov
sub
mov
lret
xchg
incb
sahf
stc
ret
insb
and
cs
insb
pop
add
xchg
in
stos
xchg
lea
push
mov
popf
in
inc
daa
leave
mov
add
lret
jno
lret
jle
push
lret
jle
dec
mov
dec
cmp
sarb
arpl
arpl
jp
jg
jnp
data16
dec
jge
xchg
das
mov
data16
xlat
sbb
push
int
sarl
mov
sbb
mov
in
movsl
sbb
out
pminub
or
push
sub
mov
cli
out
or
sub
repz
adc
test
cs
sahf
fldpi
cmpsl
adc
insb
push
call
es
test
adc
pop
rorl
lret
pop
inc
gs
adc
lret
jmp
das
push
andl
aad
add
jo
lock
push
les
or
fnsave
xchg
cmp
lret
sahf
enter
jno
ficoml
sub
xchg
pop
int3
xor
mov
rcrl
in
sub
lds
mov
ds
mov
push
or
orps
roll
add
icebp
cli
pop
movsl
flds
inc
push
es
inc
push
repz
jbe
rorl
push
insl
inc
jae
sbb
jp
inc
divl
xor
xchg
jns
shll
movsb
pop
imul
inc
xchg
mov
mov
je
repz
filds
clc
xchg
inc
popa
sbb
sub
lahf
inc
daa
or
and
cmp
mov
stos
sub
push
sub
dec
dec
push
jp
imull
and
and
dec
testb
xor
push
subb
sub
dec
cwtl
iret
pushf
add
movsb
loopne
adc
xchg
xlat
aaa
xor
insb
fstpt
lret
push
cmp
aad
xor
inc
loopne
mov
cs
adc
test
sub
pop
test
xchg
cmp
add
fidivrs
sbb
cltd
cmpsl
pop
pop
out
pop
jg
ret
inc
add
jp
fwait
mov
push
nop
jb
mov
lcall
fucomip
js
xor
pop
in
cmpsl
mov
push
aad
push
lcall
repnz
pusha
or
xlat
fisttpll
xchg
push
aaa
pushf
cmp
cwtl
mov
jecxz
loopne
push
in
push
jno
gs
mov
and
adc
in
out
push
mov
rorb
popf
lcall
add
or
ss
cld
or
test
cmp
push
mov
lcall
lock
mov
inc
mov
ret
imul
js
mov
pop
and
sub
xor
lods
test
push
scas
cmpsl
pop
mov
mov
or
bswap
inc
test
les
cmp
lds
pushl
jo
lods
imul
jmp
cmp
sbb
jb
sbb
inc
xchg
mov
mov
fisttpl
xor
sbb
pop
jo
sahf
jb
and
roll
into
mov
jno
adc
jae
cmpsb
push
sbb
ja
adc
jge
xchg
jns
stos
xor
sbb
push
lds
mov
or
mov
jo
fistl
xor
xchg
xor
into
add
mov
xchg
and
xor
and
push
dec
in
pop
or
jp
adc
notl
sbb
movsl
mov
and
pop
jg
insl
les
test
icebp
mov
pop
adc
sbb
enter
jle
sub
in
pushf
out
sub
xchg
push
mov
les
xchg
int
or
sbb
jp
mov
adc
push
lret
or
mov
mov
fwait
icebp
push
popw
outsl
lock
leave
pusha
mov
or
cli
mov
out
mov
sbbb
xchg
jl
test
lret
xchg
cltd
mov
fistpll
sub
sti
outsl
sbb
inc
jle
and
xor
lret
sub
sar
stos
mov
scas
out
or
mov
push
jmp
mov
shr
adc
cmc
mov
fsubl
ss
fistps
push
xchg
repz
mov
fadd
push
mov
adc
sarb
shlb
cwtl
pop
lods
mov
mov
push
xor
dec
leave
jle
inc
mov
mov
aam
and
insw
adc
lret
aam
ja
and
pop
pop
mov
js
mov
push
mov
or
andb
repz
in
cmpsb
call
ret
mov
outsl
test
or
mov
lock
adc
aaa
mov
mov
inc
mov
leave
negl
sub
push
ret
mov
lods
adc
adc
cmc
cltd
pop
push
adc
out
adc
pop
adc
cli
inc
inc
adc
lods
push
ds
add
je
shl
lock
mov
into
leave
pop
jmp
or
test
loope
jmp
into
movsl
pushf
or
shlb
mov
adc
mov
cmp
xchg
cmc
sti
xchg
jp
jae
stos
mov
shl
js
adc
outsb
cmp
dec
sub
mov
add
out
incl
cmp
in
fsts
subb
out
sub
iret
and
divb
push
cmp
pop
loop
insl
shlb
sbb
stos
aam
out
daa
xchg
sahf
negb
testl
xlat
xor
add
inc
push
or
cltd
int
pop
ljmp
push
fdivrs
push
loop
rcll
sbb
pop
xor
lcall
lods
jns
es
in
fcomps
dec
pop
sub
and
dec
scas
sbb
add
cltd
leave
inc
mov
mov
jg
push
cwtl
mov
fsubr
aam
mov
aad
daa
xor
fwait
popa
push
ljmp
popa
dec
mov
add
mov
mov
stos
xchg
lcall
inc
out
dec
scas
jno
dec
dec
fiadds
mov
or
cmp
mov
test
mov
cmp
out
aad
pop
out
mov
inc
mov
mov
aam
je
lds
outsl
push
hlt
cmp
xor
adc
push
cmp
outsb
das
pushf
lea
mov
out
inc
mov
jmp
or
data16
mov
div
or
jbe
cmp
xchg
cmp
xor
aaa
or
mov
test
sets
adc
aas
push
pop
pop
xchg
lcall
shlb
sub
repnz
jno
repz
cli
inc
test
inc
dec
fisubs
out
pusha
lahf
lods
jns
and
imulb
cwtl
inc
stc
je
hlt
push
jae
nop
cmp
jo
mov
add
or
mov
or
and
push
insb
std
jae
adc
mov
pop
jnp
aam
scas
push
mov
repz
data16
sti
sub
rol
and
xchg
mov
aam
in
inc
mov
sub
fwait
cmpb
jp
mov
lea
xor
sti
lea
std
ret
or
repnz
xchg
push
lds
stos
iret
adc
shrb
mov
in
scas
pop
inc
outsl
cs
mov
and
ja
mov
out
mov
inc
sbb
ficoms
in
ja
push
stos
pop
in
test
mov
pop
rol
je
inc
xchg
cli
dec
cmp
mov
cmpsb
scas
xor
rcr
jge
or
push
lret
sbb
push
jbe
pushl
aaa
dec
jns
jl
push
mov
ds
add
subl
stos
notb
subb
push
sarb
out
jecxz
adc
icebp
add
les
fidivs
and
pop
mov
mov
negb
popa
fmull
andl
imul
mov
xchg
push
test
in
sub
push
push
mov
push
test
pop
jmp
pop
jae
sahf
xchg
inc
sahf
cld
inc
push
or
pop
jmp
mov
cltd
data16
pop
jae
adc
push
sahf
je
popa
dec
sbb
cmc
push
mov
jbe
adc
sub
sbb
sub
in
lret
and
jb
inc
lret
xlat
push
mov
cld
dec
mov
negb
pop
xchg
test
sbb
cmp
push
sub
enter
outsb
ficomps
sbb
ljmp
outsb
out
ja
jle
jmp
sbb
sbb
cltd
fstpl
roll
imul
jl
andl
inc
cmc
fcom
inc
mov
out
xor
dec
icebp
sbb
pop
es
mov
or
sbb
and
cmp
sar
gs
fsts
jbe
lock
add
push
cmp
inc
jo
outsb
ret
outsb
repz
lods
mov
xchg
inc
pop
mov
push
dec
or
add
cmp
imul
aaa
divl
addl
sub
or
add
mov
jmp
sub
mov
les
cld
jnp
pop
sti
and
add
lret
mov
cli
filds
fstpl
add
popf
mov
loopne
jae
fwait
out
adc
jl
icebp
dec
icebp
mov
in
push
out
testl
data16
push
cmp
mulb
aam
or
mov
divb
mov
add
xor
push
int3
adc
mov
cmp
push
stos
ljmp
mov
gs
out
cltd
test
and
insl
jecxz
roll
push
mov
and
and
out
cmpsl
rol
fwait
test
jle
mov
jne
test
cs
fwait
pop
outsb
ret
ret
imul
stc
lcall
xchg
sub
add
or
imul
sbb
xchg
cwtl
cwtl
and
ss
mov
clc
and
cmp
mov
mov
out
inc
push
sub
call
dec
inc
add
loopne
mov
xor
jg
mov
insl
add
stos
test
ja
add
movsb
cltd
test
icebp
push
or
cmp
cmpsb
test
int
push
std
outsb
and
cs
lcall
aas
sbb
cli
jecxz
inc
xor
or
inc
loope
cmp
xchg
adc
inc
mov
mov
out
xlat
fwait
les
dec
fnstenv
cli
jb
cmp
push
out
into
flds
inc
pop
icebp
xor
inc
les
loop
xchg
into
push
repnz
sub
add
ss
inc
jbe
add
jnp
push
xchg
pop
jae
andb
and
sub
es
jo
mov
mov
negb
fbstp
jecxz
ret
repnz
pop
jo
jbe
fmul
inc
in
ds
jne
cwtl
insb
pop
out
pop
scas
sarb
xor
les
xorl
mov
push
lock
pop
dec
push
test
test
les
add
enter
add
movsb
jae
dec
fsubs
loop
pop
mov
aam
inc
pop
or
xchg
xor
aaa
jl
sbb
cmp
xchg
cmp
out
pusha
ljmp
mov
jo
push
outsb
in
arpl
jg
mov
ja
sub
jge
xor
cmp
add
lcall
clts
sar
loopne
dec
call
mov
dec
repnz
int3
dec
xor
and
inc
les
es
repnz
adc
cwtl
inc
in
adc
insb
adc
aaa
imul
push
bound
and
sub
jae
shl
leave
push
push
add
out
aam
and
into
xchg
mov
push
popa
sbb
insb
repnz
cmp
ret
stc
jae
incb
pusha
mov
rolb
fstpt
dec
mov
out
es
add
xchg
mov
pop
lods
pop
outsb
loope
cmp
or
push
lock
sahf
inc
xor
pusha
xchg
ja
jmp
mov
mov
arpl
hlt
in
jl
and
cmp
add
sub
cwtl
push
mov
push
mov
sahf
mov
aas
mov
mov
and
pop
sub
jae
sbb
or
add
or
dec
push
or
test
std
add
call
aam
lods
inc
sub
jmp
imul
data16
mov
pop
pop
sti
cmp
or
test
int3
mov
mov
xchg
loopne
andb
out
dec
jmp
pushl
popf
iret
jno
pop
jecxz
and
sbb
push
pop
jns
inc
pop
push
in
cwtl
ljmp
mov
leave
mov
jmp
rcll
mov
outsb
push
jp
mov
or
mov
mov
fcompl
or
int
xchg
sbb
mov
jae
mov
adc
and
pop
sbb
int
and
movsb
push
lods
adc
sub
dec
sarl
sbb
gs
add
cmpsb
mov
jns
shll
xchg
dec
popf
sub
xchg
xchg
call
xor
cmp
add
and
or
mov
imul
add
insl
mov
mov
push
mov
aaa
adc
and
out
cmp
dec
dec
dec
call
jl
sub
sub
xchg
hlt
out
xor
mov
mov
mov
pop
std
jno
js
popf
or
gs
int
or
xchg
dec
jge
mov
sbb
lods
es
lret
sahf
xor
stc
gs
jo
xlat
mov
nop
stos
cmpsb
repz
test
adc
leave
outsl
xchg
pop
mov
pop
cmp
test
nop
stc
in
mov
stos
xchg
add
jecxz
stc
xchg
inc
je
stos
mov
bound
sahf
lods
pop
fiadds
enter
dec
xchg
jnp
xchg
xchg
sar
ror
test
loope
mov
stc
xor
mov
mov
js
repnz
or
dec
in
jle
xor
and
ds
push
jbe
dec
loopne
mov
lods
jge
imul
jbe
arpl
scas
or
add
test
cld
mov
pop
fs
sbb
int3
push
mov
iret
lods
cs
cs
shrl
push
xchg
mov
mov
std
insl
mov
imul
inc
pop
and
in
aas
push
add
lcall
cmp
dec
jl
xchg
xchg
imul
dec
mov
cmp
aas
or
pop
insl
out
dec
xchg
xchg
popa
mov
imul
sub
clc
xchg
pop
rcrl
cmp
or
aas
clc
xor
cmpsl
sbb
jns
sbb
adc
adc
enter
in
cli
in
sbb
arpl
cmp
adc
xchg
in
out
adc
xchg
ret
sbb
cmp
xchg
icebp
jmp
int3
cs
int3
jge
sbb
ljmp
nop
test
inc
and
lea
jo
fdivrl
jno
out
sub
sub
xchg
jl
aad
mov
jge
mov
xchg
adc
pushf
je
fsubrp
sub
repnz
fwait
dec
in
adc
enter
jbe
std
jne
mov
fimull
fs
test
mov
idiv
and
adcl
xchg
push
rcrl
outsb
sub
lahf
imul
pusha
in
add
or
ja
movsl
cmp
and
jge
pop
imulb
xor
in
dec
mov
xchg
adc
stos
nop
test
std
jo
mov
ffreep
pop
jecxz
mov
cmc
and
fisubs
mov
jge
lods
ja
push
pop
push
insb
push
loope
rcll
mov
aad
fsubl
aad
sbb
mov
testb
in
push
jecxz
rclb
scas
sub
lahf
lcall
mov
jb
jle
inc
mov
and
fcomps
add
sub
adc
daa
fs
out
popf
ja
inc
push
popf
mov
or
mov
cmpsb
xchg
cmp
mov
add
push
insl
mov
mov
das
inc
xchg
lahf
jmp
add
leave
xor
icebp
sbb
out
into
bound
lret
pop
nop
imul
jge
push
addb
jmp
dec
into
cmp
jnp
cmpsl
aas
dec
in
jge
scas
sub
or
jae
adc
lcall
sbb
ljmp
out
adc
mov
cwtl
jmp
fdivs
xchg
sahf
shlb
mov
cmp
pop
jne
cmp
and
mov
and
std
xchg
pop
xchg
add
out
adc
jmp
mov
filds
mov
jne
popf
inc
int3
mov
mov
pop
outsl
jg
cmp
loopne
jns
jns
xchg
in
mov
mov
jae
push
xor
lahf
jno
dec
loop
push
jmp
sahf
xchg
mov
sti
sub
dec
pop
mov
stos
ss
fisttpl
sub
loopne
stos
sarw
jmp
cld
loope
sub
jae
adc
mov
cmpsb
and
adc
dec
into
ss
jo
pop
daa
and
shl
fcoms
or
and
iret
push
aaa
push
gs
imul
arpl
add
jae
xchg
mov
add
test
shlb
int3
stos
cmpsb
inc
push
jecxz
adc
adc
add
xchg
mov
push
subb
mov
fcomps
inc
repz
inc
sub
and
mov
dec
push
repz
pop
cmp
mov
push
js
insl
movsl
ret
rdmsr
xor
mov
stc
in
add
je
sbb
add
rclb
jecxz
cmp
lret
push
dec
mov
fwait
xor
aam
mov
dec
jle
jnp
jmp
pusha
imul
sbb
int3
rolb
adc
stc
and
vcvtsd2ss
fisubrs
or
or
jbe
xchg
jo
imul
xor
jo
jge
lds
fwait
aas
fcom
jne
dec
or
inc
cmp
repnz
pop
push
test
pop
pushl
arpl
ret
rcll
xchg
fcmovb
shlb
insb
scas
mov
gs
push
pop
mov
insl
test
pop
push
ficoml
loopne
out
cs
fcmovb
mov
in
cmpsb
aas
aam
clc
jb
add
scas
xchg
inc
cli
pushf
cmp
sbb
sub
add
xchg
mov
adc
ret
and
cmp
mov
hlt
add
cmpsb
mov
loope
push
mov
inc
push
scas
mov
pop
out
xor
data16
and
xchg
sar
inc
sub
pop
pop
lcall
fisubrl
and
sbb
sub
mov
lret
hlt
xor
movsb
scas
sbb
cmpsl
mov
inc
cmc
test
int3
je
xor
fbstp
out
and
add
xchg
mov
cs
pop
cmp
mov
and
mov
sbb
adc
pusha
orb
jmp
cmpsl
add
int3
and
mov
jns
mov
or
mov
jo
pop
fadds
stos
lock
mov
stos
sti
adc
pusha
les
dec
push
outsl
cmp
push
fisubs
cmp
js
cmpl
ss
daa
push
xor
lahf
xchg
inc
lret
fimuls
icebp
imul
cmp
rcrb
ss
arpl
enter
imul
mov
jno
lods
sub
dec
mov
push
out
dec
pop
add
mov
xchg
cmpsb
jno
cmp
xchg
jecxz
and
xchg
dec
lds
mov
jo
xor
movsl
xorl
add
jmp
and
inc
loop
lcall
jnp
xlat
jb
dec
rcrb
jl
xchg
and
fadds
loope
jo
mov
xchg
stos
stos
jecxz
lods
fisttpl
xchg
sub
dec
roll
and
inc
or
mov
sub
push
test
out
sbb
jns
sub
jo
imul
int
aad
adc
mov
jle
sbb
ds
lods
or
pusha
addr16
sti
inc
mov
out
ret
lock
in
pusha
xor
push
fstps
popa
bound
dec
cmp
es
cmp
test
xchg
add
or
data16
andb
inc
add
negl
inc
out
in
orb
jmp
call
xchg
stc
sbb
or
cld
rclb
call
outsb
pusha
dec
cmpsb
cli
mov
sbbl
leave
xorb
nop
clc
fs
mov
cmp
sti
out
mov
sub
int
ret
test
leave
icebp
xor
popf
jbe
lds
sbb
nop
dec
xchg
jne
das
sub
inc
ljmp
pop
in
js
fcomip
mov
mov
push
xor
push
adc
push
fwait
lock
sub
add
sahf
imul
pmulhuw
pop
mov
and
mov
jns
int3
flds
leave
shlb
movsl
lock
sub
xor
in
rcr
push
stos
pop
mov
stos
xchg
insl
lods
sti
cwtl
mov
fstpl
sbb
in
test
pusha
ret
testb
aam
loope
loope
jge
fwait
lcall
xor
scas
adc
or
inc
xchg
add
loope
adc
mov
mov
outsb
and
jmp
fidivrs
and
jl
sub
addr16
jmp
rorl
push
and
das
cs
push
fldcw
lods
add
ret
cmp
sub
data16
xchg
psubsw
ljmp
pushl
movsb
adc
and
dec
lods
add
sub
mov
ljmp
mov
push
push
and
cmp
push
xor
fildl
jo
or
xchg
out
sub
movsb
dec
dec
mov
shrb
cli
stc
loopne
add
mov
popf
xlat
test
xor
test
dec
mov
arpl
add
divb
mov
cmp
neg
mov
in
or
fnsave
int
jns
data16
test
cmpb
out
jp
fmulp
push
mov
lret
lcall
ljmp
int
rcll
jns
mov
montmul
cmpsb
sbb
xchg
pop
ja
aas
xchg
cwtl
insl
aaa
push
clc
sub
sbb
fldl
push
pushw
or
testl
push
popl
fildll
add
lods
jo
hlt
lds
aaa
sub
cli
mov
loope
ss
xor
adc
dec
mov
push
dec
stc
adc
jl
stos
xchg
aam
pop
pop
call
roll
push
jle
aam
cmp
cmp
fwait
cmc
mov
ljmp
jg
imul
push
out
icebp
cli
daa
mov
js
sub
xchg
cmp
insl
sbb
daa
sub
xor
fwait
pop
int3
adc
inc
pop
popa
push
lea
and
inc
adc
stos
repnz
rcl
push
jnp
xchg
inc
les
into
loope
iret
ret
iret
mov
cs
add
pop
popf
ss
addr16
cld
aaa
push
mov
push
rcll
outsb
in
je
into
cmpsb
jne
and
cmp
aam
std
mov
in
xchg
jmp
xlat
ds
int3
rcll
mov
sbb
cmp
push
sub
daa
xlat
inc
divb
xor
roll
xchg
jae
jno
test
cwtl
faddp
in
add
jmp
sub
fisttps
dec
dec
inc
pushf
mov
bound
iret
rorl
lods
lods
and
nop
cmp
sbb
mov
scas
pop
sbb
shlb
sarb
push
int
xlat
push
ja
and
sbb
sbb
sbb
gs
mov
push
mov
or
outsb
out
stos
lods
xchg
movb
inc
push
das
xchg
add
outsb
adc
inc
fmuls
mov
add
fidivrs
loop
jne
ret
or
ficompl
mov
imul
xchg
sub
push
aam
cwtl
inc
outsl
xchg
xchg
int
cltd
jb
push
sub
scas
push
stos
mov
std
and
mov
cwtl
cmp
inc
xchg
out
add
inc
mov
lods
lock
add
pop
stos
jle
add
cli
out
pop
sbb
jg
lcall
ljmp
sbb
sbb
fs
mov
pusha
repz
add
mov
test
pop
xor
pop
fisttpll
lods
jo
pop
loopne
add
mov
and
push
sbb
mov
xchg
nop
jecxz
aaa
arpl
ret
in
xchg
and
in
out
popa
loopne
jo,pt
mov
std
push
xor
and
sub
jl
ss
push
lods
jecxz
sub
jne
mov
iret
jge
push
xor
aad
rcrl
dec
push
je
xor
cmpsb
aaa
or
mov
xchg
mov
push
or
push
push
popa
or
insl
clc
loopne
adc
lock
sbb
jge
push
add
cmp
lods
int3
lahf
sbbb
inc
outsl
cmp
and
add
sub
out
movsb
out
push
xlat
sub
cvtps2pi
out
cmpsl
test
jb
pop
push
lcall
cmp
std
mov
loope
xchg
jns
enter
in
into
inc
mov
rcr
es
movsb
fmuls
or
or
xor
sti
pop
mov
adc
cli
cmpl
fsubp
in
in
sahf
popf
subl
add
xchg
pop
sub
aaa
mov
sti
cmc
loope
or
scas
xor
lahf
mov
inc
iret
subl
popa
mov
pop
lods
subb
lock
or
pop
jg
outsl
shlb
pop
js
adc
fmul
mov
add
cs
push
lds
xchg
mov
das
sbb
mov
mov
mov
pop
mov
testb
mov
add
and
das
call
mov
add
or
fsts
cmp
push
cs
jnp
fwait
sub
mov
mov
adc
xchg
repz
mov
push
loopne
sbb
in
inc
jno
shll
out
pop
addr16
sbb
in
add
cmpsl
xorb
cmp
sbb
or
loopne
inc
call
inc
jae
cmp
dec
sub
jo
push
stos
stc
fisttpl
jb
mov
xlat
sub
and
jo
clc
fs
dec
sbb
dec
dec
dec
cmc
int
mov
int
les
icebp
mov
rcr
cmp
and
in
adc
das
and
cmp
mov
lahf
inc
gs
psllw
dec
and
testl
mov
mov
add
or
repnz
push
xchg
dec
xor
mov
dec
into
jle
ss
add
sbb
adc
into
sub
sbb
mov
nop
inc
adc
push
ss
movsl
fwait
loopne
out
movsl
pop
push
jae
popa
mov
les
cmpsb
rcll
sbb
sub
cld
leave
fsubs
std
nop
adc
pusha
cmp
mov
add
lret
and
hlt
fildll
insb
lea
iret
mov
push
mov
xlat
imul
addl
leave
lret
inc
or
pusha
jmp
call
xlat
mov
xchg
shll
enter
jg
in
stc
mov
mov
fstpl
mov
inc
cwtl
test
inc
test
cld
lea
adc
and
clc
and
in
mov
sbb
mov
repz
es
push
xor
mov
jns
das
mov
cmc
mov
ret
outsb
in
shr
and
jae
out
pop
push
mov
adc
xchg
negl
popf
in
loopne
pop
shll
or
lret
mov
movsl
scas
push
icebp
neg
xor
pop
jp
idivl
hlt
push
pop
aaa
loopne
push
and
fdivrs
in
jbe
mov
lock
bound
adc
inc
mov
test
and
jnp
or
jno
xchg
es
imul
jecxz
add
paddw
push
mov
mov
jae
scas
cmp
dec
and
jecxz
xorb
or
sti
pusha
sahf
div
adc
cmp
pop
lahf
pop
hlt
pop
jb
sbb
inc
idivb
gs
gs
cmp
sbb
mov
into
cltd
xlat
mov
fnstenv
inc
cmp
cmc
cmp
mov
inc
scas
pop
push
sbb
out
adc
sbbl
dec
cmp
adc
sahf
dec
sub
push
push
push
repz
add
out
and
outsl
das
adc
add
std
mov
lods
js
mov
addr16
movntps
inc
sahf
rorb
inc
sarl
outsb
in
mov
fs
pop
mov
ljmp
outsl
adc
xor
pushf
lock
dec
insb
adc
pushf
push
xchg
out
and
iret
jnp
cmp
cwtl
pop
lods
add
push
into
stc
insl
popa
fsubrp
mov
in
push
adcb
xlat
mov
dec
insl
xor
jne
add
outsl
jne
js
hlt
mov
or
mov
in
mov
inc
test
mov
fbstp
jge
push
rcrb
jle
and
das
mov
or
cwtl
push
push
mov
lahf
loope
push
or
test
push
push
incl
fistpl
sbb
inc
pop
or
fnsave
pop
loope
lods
xchg
or
push
lahf
insl
icebp
adc
xchg
sbb
int3
popf
fcomp
loope
and
cmp
or
and
xor
cmp
aad
jecxz
pop
sub
fucomi
dec
pop
adc
pop
mov
sarl
int3
push
ret
xor
orb
test
pusha
mov
jl
sub
hlt
movsb
mov
aaa
xchg
sti
push
xchg
fdiv
dec
sbb
daa
mov
stos
push
mov
std
in
clc
idivb
inc
mov
scas
mov
and
out
loope
push
pop
out
mov
std
leave
je
xor
and
push
test
into
in
or
cmp
xchg
jg
push
cmpsl
lods
test
dec
icebp
inc
in
mov
repz
inc
les
into
and
js
xchg
mov
scas
sbb
mov
loope
pop
xor
jnp
inc
lock
aad
arpl
and
push
xor
addr16
mov
xchg
cmp
jnp
in
cmp
pop
or
mov
roll
adc
icebp
leave
jle
mov
shl
idivl
dec
rcl
sub
fsubr
cmp
call
lret
mov
cltd
icebp
hlt
daa
fisubs
lds
mov
js
dec
xor
test
add
pop
test
enter
popa
and
xlat
call
data16
imul
pop
adc
cmp
push
rorb
mov
cltd
ss
inc
test
pop
dec
push
leave
sbb
dec
mov
dec
mov
jo
xchg
mov
cli
xchg
leave
push
xchg
dec
mov
mov
jge
mov
call
scas
adc
jle
xchg
out
push
dec
sub
ja
add
out
rclb
inc
pop
mull
xchg
addr16
dec
sub
jns
test
jo
es
jbe
stos
fcom
sub
adc
ret
mov
nop
xchg
xchg
fsub
dec
mov
cwtl
xchg
mov
push
inc
mov
or
in
jge
add
pop
sbb
in
lret
pop
add
pushf
mov
jmp
dec
repnz
xchg
outsl
and
mov
add
xor
les
xchg
lds
push
sbb
stc
fisttpll
jne
cmp
in
or
xor
dec
dec
xchg
fbstp
mov
xchg
mov
pop
adc
fldenv
shrb
fisubl
daa
adc
lods
sub
nop
dec
mov
push
xchg
imul
dec
add
leave
inc
xchg
mov
sbb
aad
pop
push
mov
dec
es
adc
fdivl
loop
push
or
das
push
push
iret
or
test
fisubrl
push
cs
or
ljmp
cmp
sub
leave
pop
aaa
rcrl
jge
adc
int3
lahf
push
xchg
cmp
test
sbb
xchg
into
test
mov
jmp
push
pop
mov
and
call
cmp
mov
rcll
mov
mov
pushf
jno
and
fidivs
jae
lds
cmpsb
cmp
enter
shll
popa
inc
ss
sub
mov
rcrb
out
dec
pop
mov
xor
cmp
jb
xor
rcrl
xchg
jge
in
add
or
fs
mov
pop
cmpsb
sbbb
pusha
xchg
mov
xchg
push
xor
xchg
lods
stos
in
rcrl
in
fstpt
jl
ljmp
fildl
adc
sub
sub
xchg
mov
push
pop
rcll
pop
cmpsb
sbb
stc
lret
in
push
dec
mov
and
push
jl
lods
aad
push
hlt
dec
sbb
xchg
jmp
lds
xchg
mov
dec
mov
imul
bound
scas
sub
mov
mov
test
or
xchg
add
sahf
sub
dec
mov
in
out
shll
sbbb
xchg
push
xorb
cmpsl
push
js
std
js
and
fsubl
or
insb
jp
or
shr
clc
out
fidivrl
mov
inc
loopne
lock
push
or
jmp
stos
and
adc
test
xor
push
push
dec
cmp
icebp
in
repz
mov
int3
mov
stc
xchg
inc
fsubrs
mov
cli
add
cmpb
inc
or
pop
xor
adc
lret
jle
loop
push
sbb
out
cmp
cs
stc
es
xor
sbb
mov
mov
or
xor
movsb
cmpsl
and
pushf
movsb
lea
int3
and
mov
data16
add
sarb
lods
mov
test
dec
nop
fwait
jbe
jno
pop
das
pop
stos
sub
push
mov
enter
stos
inc
stc
ret
dec
mov
rcrb
add
cmp
std
arpl
mov
push
orl
movsl
lock
lds
shl
mov
in
dec
push
negb
push
mov
xchg
sahf
jae
lds
jnp
test
jno
mov
rorb
adc
xchg
xchg
sub
and
xchg
add
jns
adc
mov
adc
loop
cmpsl
pop
push
inc
je
mov
arpl
stos
mov
and
sub
and
addr16
sbb
and
call
jbe
jmp
lods
xchg
sub
add
or
dec
xor
add
fs
mov
xchg
mov
repz
imul
inc
or
cmp
testb
lea
pop
pusha
add
es
fiaddl
enter
sbbl
sbb
cli
js
fldcw
int3
icebp
les
jp
or
cmp
shrl
jmp
nop
mov
movsb
fwait
repz
ss
out
out
sub
or
xor
faddp
movb
and
push
add
shr
loope
pop
sbb
shrl
inc
inc
leave
jo
rcrb
in
sbb
jl
andb
mov
test
outsl
out
repnz
aas
mov
push
jle
outsl
sub
xchg
jle
sub
dec
inc
add
lock
fwait
aas
es
pop
jge
jbe
repz
push
aas
fsubl
inc
hlt
pusha
test
jl
fwait
sbb
jl
in
and
popl
sbb
jp
add
sub
fldl
test
jne
mov
mov
icebp
out
popa
testb
jne
pop
xor
jg
stos
jmp
add
lahf
mov
shl
in
lods
dec
xchg
aam
pusha
fstps
add
int
dec
add
insb
dec
adc
enter
rolb
shrb
mov
and
je
sub
loopne
test
xchg
pop
cltd
xor
adc
jge
push
dec
and
lret
xchg
xchg
pop
inc
push
mov
mov
clc
into
lret
mov
inc
subl
or
sahf
or
inc
insl
lods
cmp
ror
js
cmp
outsl
xlat
pop
stos
add
mov
cmp
test
movsl
mov
sbb
jle
adc
push
add
add
stc
loope
call
mov
adc
push
mov
push
dec
push
mov
mov
sbb
inc
adc
fstpl
ret
jge
jg
shll
adc
imul
pop
push
mov
sbb
sarb
pop
in
call
dec
or
dec
mov
push
mov
bound
cli
sbb
push
cmc
add
jecxz
jns
sub
xchg
pop
sbb
into
mov
inc
repz
mov
outsb
pusha
mov
std
mov
push
fistpll
test
out
mov
push
pop
fbld
sahf
add
test
fwait
stc
adc
and
test
mov
addr16
mov
adc
jl
mov
cmp
dec
mov
xlat
mov
ror
out
js
mov
cwtl
mov
push
mov
pop
adc
add
fnstcw
imul
ljmp
add
fs
hlt
iret
xor
cmp
idivb
fstl
ja
or
sub
lds
sahf
adc
shl
adc
mov
pop
pop
inc
hlt
cmpsb
xchg
mov
movsl
clc
insl
and
arpl
mov
jne
inc
lahf
ret
je
jae
scas
into
popa
lret
inc
popf
jecxz
shrb
inc
call
push
std
mov
sbb
or
int
mulb
mov
lret
mov
shll
inc
inc
mov
push
pop
jnp
mov
out
rolb
sbb
cmc
lret
mov
rcrl
aad
and
das
imul
popf
shll
cmp
ja
lret
mov
xchg
mov
lds
lea
ljmp
daa
cli
xor
cmp
or
jl
mov
adc
cmp
and
out
push
xor
lcall
cli
stos
xchg
inc
and
shll
dec
cld
mov
mov
push
adc
inc
push
aad
pop
pop
mov
push
fisubl
test
mov
xchg
std
cmpsl
xor
sar
cmp
pop
loop
dec
ljmp
pop
lock
add
mov
jge
sbb
xor
dec
xchg
inc
mov
mov
es
mov
stos
pusha
cmpsb
lods
loope
aam
outsl
or
bound
gs
push
das
cs
addl
jmp
xchg
inc
inc
nop
or
or
nop
jnp
in
lock
pop
cmp
dec
xor
cmp
mov
sbb
ret
das
pop
ud1
ficomps
add
dec
je
sti
adc
repz
call
out
ds
in
xchg
scas
xor
cmpsl
xchg
add
mov
mov
mov
fs
fwait
cmp
push
jg
dec
pushf
insl
fimull
in
mov
fdivs
and
out
inc
cmp
mov
mov
inc
insb
jne
test
cmp
pop
sub
shll
es
insl
enter
call
pop
mov
mov
cmp
insl
sbb
fldenv
into
enter
sbb
idivl
loop
dec
loopne
rcl
or
fistl
imul
mov
push
rolb
subl
xor
cli
sbb
inc
cmpsb
mov
xor
and
or
les
out
mov
loop
outsl
arpl
inc
xchg
jae
lods
dec
hlt
testl
gs
xchg
fisubrl
inc
aad
outsl
fcmovu
int3
add
fstps
fstp
outsl
mov
adc
int3
push
cltd
jbe
fisubrl
insl
lcall
push
mov
dec
inc
out
scas
lret
lds
fidivs
nop
mov
mov
and
xor
push
mov
lahf
int
xor
inc
inc
sbb
pop
clc
sbb
jb
loopne,pn
test
xchg
mov
jge
ljmp
cmp
xor
push
jb
sti
inc
movsb
sbbl
clc
pop
push
pop
fisttpl
addl
nop
lcall
lock
xor
cmp
sbb
pop
or
jge
test
xchg
dec
dec
push
and
sub
sub
cmp
test
fwait
pop
mov
dec
dec
jbe
jne
cltd
out
jmp
aad
dec
rorl
std
cmp
outsl
cmp
fsubs
jecxz
imul
add
jb
dec
gs
mov
push
jno
mov
or
ss
mov
ss
sbb
and
sub
inc
nop
sbb
xchg
lods
and
xchg
ja
mov
jecxz
int3
daa
inc
inc
and
xchg
mov
push
cmpsb
dec
jne
mov
jns
outsl
or
mov
pop
lock
sbb
dec
push
ds
and
cmp
out
xor
repnz
sub
push
lret
leave
mov
out
sbb
out
sub
mov
ds
xchg
mov
hlt
out
jns
xor
inc
lds
das
inc
pop
push
dec
test
inc
sbb
jnp
and
jo
fstpt
mov
aad
repnz
push
cmp
adc
xchg
xchg
xor
js
push
mov
mov
outsb
adc
mull
sbb
ljmp
pop
mov
addl
jbe
or
xchg
je
testb
push
xor
sbb
pop
or
pop
add
fimuls
mov
idiv
pop
pop
mov
arpl
rorl
outsb
cmc
push
push
cmpsb
ret
adc
lret
add
mov
jge
or
jp
cwtl
ljmp
xor
hlt
inc
sarl
lock
push
in
je
jnp
lret
push
and
lahf
add
cli
dec
xchg
push
push
ljmp
pushf
xchg
imul
jns
xchg
mov
addr16
pop
je
xor
mov
das
daa
js
shll
push
pusha
dec
dec
call
pop
btr
inc
dec
icebp
mov
sbb
or
mov
aas
clc
push
pusha
xor
fwait
jae
jmp
lahf
dec
inc
in
test
dec
add
pop
scas
std
dec
mov
dec
fisubl
cltd
dec
lcall
jno
sub
iret
mulb
mov
xchg
fwait
movsb
cmc
outsb
aam
dec
or
adcl
in
or
push
stos
fnstsw
std
cmp
and
cmp
cmpsl
ficompl
insl
mov
fdivrl
dec
or
sbbl
shr
pop
jns
push
xchg
imul
jle
lods
lock
sbb
scas
inc
addr16
add
pusha
adc
ja
xor
and
jb
lds
das
mov
or
ret
dec
jb
insb
or
sbb
mov
andb
jae
loopne
mov
push
push
jmp
sbb
arpl
xor
and
les
xchg
mov
inc
xor
sahf
mov
jno
arpl
xor
adc
out
ficoml
pop
mov
ja
mov
sbb
cmp
pop
ja
add
xchg
mov
cwtl
decb
inc
gs
mov
mov
sub
arpl
insl
mov
xor
pop
mov
clc
jb
push
cmp
jo
push
popf
bound
fidivs
or
mov
les
adc
sub
idivb
dec
sar
ret
xchg
jne
sub
mov
insb
adc
pop
lea
xchg
ja
push
icebp
mov
pop
fwait
je
sub
pushf
jns
enter
pop
movsl
loope
out
imull
pushf
daa
jo
pop
out
rorl
ss
pop
stc
pop
xorb
pushf
loopne
push
daa
xor
mov
sbb
xchg
sbb
push
rcrl
cmp
sub
ljmp
xchg
inc
adc
cwtl
mov
inc
iret
jbe
push
mov
lahf
and
push
shll
rcrb
rcrb
jl
jbe
adc
and
out
int
arpl
or
inc
mov
add
jecxz
fidivrs
dec
test
or
sbb
test
ret
stc
sbb
mov
xchg
outsl
in
cmp
dec
sub
cmp
pop
aad
inc
test
ret
pop
and
out
pop
js
popf
and
xlat
mov
fwait
sbb
mov
stos
adc
and
mov
pop
daa
sbb
fmull
les
lea
jne
aad
jns
subl
mov
ss
xchg
mov
ret
imul
push
mov
int3
add
cwtl
push
add
mov
sbb
out
ds
out
adc
aas
dec
cmp
sub
es
adc
loope
jg
cs
mov
inc
lret
sbb
loopne
aaa
fisttpll
je
arpl
xor
nop
loop
jmp
sub
inc
and
es
pop
leave
push
sub
sub
lea
je
push
jo
ret
arpl
mov
inc
cmp
cmp
in
pop
mov
es
push
mov
or
xchg
hlt
dec
xchg
mov
in
jmp
dec
frstor
sbb
cmpsb
cmc
xchg
xor
mov
push
cmp
sub
fldl
cmovns
xor
fsubr
push
fdivrl
test
sarb
in
mov
cli
inc
in
fnstcw
shl
pop
cmp
xchg
xchg
cs
jg
ret
cltd
shl
cmpsb
dec
rorb
adc
inc
push
xlat
repnz
mov
cli
fisubrl
aas
imul
les
aam
loop
sarl
out
cmp
xchg
mov
shl
fidivrl
faddl
ret
pushf
xor
mov
gs
stc
jg
mov
xlat
push
or
push
mov
daa
test
mov
adc
mov
jp
push
in
scas
cmc
mov
sbb
xor
test
jg
bound
mov
cmp
pop
mov
cmp
adc
cmc
or
inc
xchg
jns
outsb
repnz
jb
mov
push
lock
les
cmpsl
gs
and
daa
pop
ss
dec
jg
jne
xor
movsb
adc
in
lret
adc
cmp
popf
je
movsb
out
lea
fdivrs
in
xor
dec
mov
sbb
and
add
push
pop
add
jo
push
mov
movsb
jp
gs
ret
mov
pop
inc
xor
inc
arpl
loope
dec
dec
iret
jbe
adc
outsb
jb
nop
mov
dec
fs
enter
inc
dec
pop
jg
roll
or
sbb
divb
pop
outsb
ret
push
into
pop
push
and
sbb
add
jo
push
adc
jmp
sbb
dec
push
in
arpl
pop
clc
sbb
outsl
xor
lea
gs
or
jbe
add
call
call
or
push
inc
rcll
in
push
sbb
adc
mov
das
push
pushf
or
jo
pop
lret
cli
lds
out
jge
inc
jns
mov
inc
negl
dec
or
rorl
mov
jmp
fs
repnz
mov
sbbl
repz
jo
and
jae
mov
stc
or
fcomip
mov
movsl
cmp
or
addr16
negb
jnp
insl
mov
mov
pop
mov
jecxz
mov
mov
loope
lock
shl
data16
iret
negl
data16
jne
test
out
gs
nop
aad
es
pop
sub
call
mov
not
stos
ret
les
cs
mov
push
stos
sub
les
arpl
and
adc
loopne
push
lock
xor
insb
in
jnp
call
sbb
cs
sti
cmp
add
jae
and
add
lea
xchg
xlat
mov
cmp
mov
cmp
sbb
rcr
push
jmp
mov
inc
rolb
pop
mov
pop
dec
aaa
lret
dec
mov
sbb
jo
xorl
mov
loop
inc
pop
mulb
xor
aaa
jmp
fsubs
push
xor
mov
outsb
popaw
jbe
test
je
sbbl
es
bound
push
sbb
push
push
gs
jle
cmp
jge
adc
cld
jns
icebp
sub
push
out
mull
loope
cmpsl
inc
push
out
lcall
jmp
xor
pop
loop
mov
cmp
mov
ret
mov
or
lock
test
js
dec
xchg
sbb
push
ret
and
outsb
ss
jmp
sbb
shll
or
sbb
out
fimuls
sub
test
loope
std
hlt
mov
push
cmpsb
gs
ljmp
stos
cmpsl
xor
std
add
mov
stos
std
push
out
cmc
push
clc
jp,pn
loopne
sbb
loopne
cmp
fcomps
arpl
into
jg
xlat
add
inc
fdivl
cmpsb
loope
push
pop
inc
and
cmp
mov
jmp
adc
pop
in
pop
pop
mov
cmp
rorl
enter
add
xor
add
push
xor
aaa
jge
or
stos
roll
inc
mov
nop
insb
fstps
pop
and
jbe
popa
enter
cli
fsubs
int
xchg
data16
scas
into
insb
fildl
jae
les
popf
fsin
psrlq
jo
push
cwtl
mov
scas
mov
adc
pop
dec
leave
mov
jecxz
mov
mov
push
stos
inc
cmp
inc
sub
push
xchg
stos
push
out
mov
leave
sbbl
xor
adc
jns
sbb
mov
dec
aad
or
fisubl
pop
dec
sub
mov
cltd
pop
and
rclb
fcoml
mov
mov
lods
sahf
jecxz
mov
adc
adc
cmp
cmp
scas
adc
cmp
mov
add
fcompl
into
icebp
pop
ljmp
fcmovb
jne
shrl
test
add
fsub
sbb
sub
inc
and
lret
push
xchg
in
mov
dec
inc
pop
insb
js
outsb
inc
xor
and
aad
flds
dec
in
sub
fldcw
and
js,pn
pavgw
out
xchg
sbb
adc
enter
push
in
adc
jnp
and
rol
and
outsb
sub
rcrl
lret
test
mov
sub
ss
jle
fdiv
push
pop
adc
call
je
rcrl
insl
ljmp
adcb
fiadds
xor
lods
xchg
mov
xchg
and
cli
out
sti
pop
aam
cltd
aas
inc
or
out
push
mov
out
xchg
dec
bound
jb
roll
push
movsl
dec
sbb
fisttpl
sbb
ja
xchg
add
lock
push
xlat
adc
and
in
jnp
lahf
sbb
inc
xchg
dec
jecxz
xchg
mov
loopne
and
add
test
mov
adcb
stc
mov
arpl
into
enter
js,pt
outsb
sbb
test
push
add
inc
dec
mov
ds
scas
pop
daa
mov
fsubrs
fmuls
neg
add
out
xchg
jb
and
sub
pop
rcrb
xchg
decb
enter
imulb
inc
sahf
xchg
nop
scas
loope
pop
gs
push
ud0
dec
in
aam
sbb
mov
decl
repnz
mov
sbb
xor
xlat
sti
xor
outsl
and
mov
insb
ret
loopne
into
dec
or
movsb
aaa
hlt
sub
insb
sub
daa
push
xchg
dec
stc
sub
sti
loope
ror
jne
pop
mov
add
sbb
out
int
orl
cmp
stc
adc
pusha
xor
sub
pop
rcl
jecxz
in
jecxz
imul
fbld
bound
dec
rep
in
sbb
ret
stos
das
or
pop
xchg
repz
aas
ffree
jo
or
stos
sti
pop
or
sub
movsl
leave
push
or
pusha
and
adc
in
cmp
cmp
xchg
je
jne
testb
or
pop
push
jp
jge
out
inc
leave
fldl
cltd
mov
pop
mov
mov
cli
pop
cmp
out
mov
je
fcompl
mov
dec
push
sbb
mov
inc
ret
add
stos
sub
dec
xchg
loop
sarb
and
je
add
std
xor
push
fwait
in
inc
mov
fsubrs
inc
mov
lods
in
gs
or
and
fidivrs
aad
sbb
pop
sahf
mov
in
scas
sbb
je
pushf
xchg
jge
das
into
pushl
int
mov
cmp
mov
icebp
stos
test
mov
les
jae
inc
outsl
js
scas
adc
xchg
mov
call
and
mov
lret
test
ja
inc
jmp
push
dec
add
jbe
mov
pusha
adc
out
cwtl
cmpsb
mov
adc
call
loopne
fadds
jbe
adc
or
dec
jne
sub
dec
mov
jecxz
adc
je
cs
pop
adc
mov
lret
hlt
ja
addr16
ja
push
xchg
loop
inc
insb
fnstsw
adc
frstor
xchg
mov
outsb
loope
dec
stos
or
mov
and
mov
dec
movsb
mov
jl
arpl
adc
mov
lret
jae
push
or
inc
pop
popf
pusha
stc
jne
jge
stos
test
cmpsl
out
xor
jbe
int3
mov
test
ljmp
stos
out
adc
cmp
loopne
cmpsb
nop
fmull
push
sbb
push
cmpsl
clc
frstor
bound
clc
pop
cwtl
mov
fwait
sahf
leave
ja
aad
outsl
jnp
pop
sub
and
stos
clc
or
in
lds
test
pop
mov
adc
xchg
cmpsb
out
cmp
jecxz
adc
adc
daa
jg
xlat
xor
int3
aaa
lret
in
sahf
mov
xor
mov
jno
and
leave
mov
pop
ficoml
int3
fwait
notl
in
fdivrp
push
mov
sbb
mov
mov
cmpsl
or
or
pusha
jns
ret
sbb
dec
out
push
pushf
lcall
pop
pushf
in
ficompl
jg
push
gs
xchg
arpl
mov
or
fstps
cltd
adc
mov
mov
repnz
mov
mov
lods
mov
xor
xchg
imul
jbe
test
cld
add
loop
jae
inc
jge
lcallw
and
adc
out
gs
aam
sti
lock
xor
and
call
pshufw
test
inc
or
push
loop
in
je
xor
push
xor
push
loopne
pop
or
mov
add
push
mov
mov
jbe
jns
pop
out
inc
add
add
jns
xchg
xchg
sbb
mov
lods
clc
rcll
fimull
pop
inc
rolb
xchg
push
inc
mov
mov
jecxz
rcll
out
dec
xchg
add
lds
lret
addb
sbb
mov
or
fs
popa
xchg
out
fmull
sbb
je
stos
shll
cmc
dec
mov
jo
push
adc
sub
inc
out
ss
pushf
adc
xchg
jle
outsb
lahf
andb
mov
rorl
jle
sub
xchg
lret
out
inc
add
out
daa
push
pop
mov
fidivl
push
sub
adc
push
das
jns
lods
sub
xor
inc
inc
dec
es
push
popf
out
addr16
mov
push
daa
xchg
mov
shl
bound
lret
sbbb
inc
mov
pop
pop
movsl
and
ret
sub
push
mov
mov
dec
test
std
rclb
xor
xlat
insb
sub
stos
jecxz
in
fsubl
addr16
icebp
sbb
add
inc
iret
lret
cld
fildl
xchg
cld
ds
pop
adc
flds
jae
mulb
aaa
mov
push
aas
add
jg
mov
das
cmp
pop
into
lock
add
mov
dec
imull
les
lret
test
and
xchg
or
loopne
daa
pop
jg
push
sbb
dec
xchg
xchg
movsb
mov
adc
jecxz
push
cmpsb
or
enter
sub
jb
add
mov
std
push
dec
pushf
bound
test
pop
lret
daa
ss
push
jo
pop
adc
push
add
mov
fisttpll
adc
inc
std
imul
xor
je
sti
mov
sbb
dec
pop
sub
lahf
mov
jge
nop
int
nop
xor
out
popf
jp
scas
mov
and
adc
xchg
test
or
pop
xor
and
sbb
mov
test
das
js
fidivl
gs
stc
sbb
or
fldl
bound
aam
fucomp
test
shlb
nop
adc
pop
out
jbe
in
xor
pop
loop
inc
add
packsswb
sbb
jp
inc
adc
push
popa
jb
lret
outsb
and
test
pusha
ds
adc
mov
aad
add
cmpsl
dec
adc
aad
notl
xor
push
hlt
cwtl
loop
stc
add
rcll
adc
outsb
or
pop
dec
pop
fcos
xorl
test
add
pop
or
inc
mov
sbbb
or
enter
hlt
mov
lock
mov
roll
int
mov
aad
sahf
inc
test
fdivrs
hlt
ficomps
rcl
clc
fisttpl
inc
cmp
rolb
jne
jge
add
xlat
es
and
iret
lret
pop
push
sahf
clc
push
mov
push
fdivrs
mov
xor
pop
cltd
sbb
xchg
enter
jae
or
push
sub
subb
mov
mov
ljmp
jecxz
pop
mov
int
and
test
lret
test
push
xchg
int
fbstp
sub
sbb
push
jge
mov
insl
out
cli
scas
rcl
cmp
aam
ror
lock
push
sub
xor
fisttpll
adc
pop
sub
xchg
push
loop
loop
out
nop
and
dec
pop
rcll
int
add
sbb
fwait
sbb
xchg
inc
xchg
pusha
or
in
mov
rorb
xchg
rorb
in
es
das
adc
daa
mov
xchg
push
add
fwait
push
out
jno
hlt
in
sub
lods
dec
pop
leave
mov
fbld
adc
push
sub
fdivl
fwait
imulb
adc
call
sbb
inc
out
adc
ror
mov
fdivs
or
icebp
inc
sub
testl
adc
pop
adc
push
lds
add
cltd
lods
lahf
sbb
jo
scas
iret
les
pop
sbb
dec
xchg
call
sti
jbe
sti
jb
jbe
sub
push
jle
cmp
in
test
mov
sbb
sarb
rcl
push
fists
push
jbe
fnstsw
cli
mov
and
sti
leave
lret
negl
fldcw
lcall
ss
xlat
stos
or
sbb
jg
pop
or
iret
mov
popf
scas
js
je
mov
js
push
ds
js
pusha
dec
sub
adc
or
mov
cmp
js
mov
jno
aam
pop
xor
call
es
push
fwait
decb
loope
mov
imull
pop
je
in
loopne
xchg
add
cmc
pop
pop
adc
loope
lods
inc
jmp
xor
push
and
aaa
jl
push
mov
out
int
sbb
testb
shll
enter
mov
rorl
and
add
and
fidivs
push
add
loope
stos
clc
test
lock
lock
and
mov
ja
int3
sbb
lahf
rcll
and
add
push
ret
jmp
add
imul
push
mov
sbb
sbb
stos
ret
mov
addr16
ds
ja
daa
lods
xchg
scas
fidivrs
add
xor
mov
lds
fucom
sub
iret
mov
inc
movntq
cltd
stos
in
divl
sbb
dec
fcmovnbe
int3
lea
sti
lods
xchg
adc
gs
adc
and
mov
jae
inc
push
or
pop
add
push
loopne
and
pop
shlb
ficompl
sbb
jg
xor
xor
decb
lcall
sbb
ret
mov
lahf
xchg
jnp
loopne
enter
dec
es
push
outsb
push
in
jp
movsb
mov
bound
inc
xor
lea
decl
add
cmp
addl
dec
and
int3
andl
push
sbb
xor
les
xlat
sbb
arpl
lock
in
mov
cmp
inc
cld
xchg
in
and
hlt
hlt
incl
add
cltd
jnp
adcb
scas
pop
outsb
movsl
pop
push
cld
test
push
mov
into
xchg
jno
dec
mov
mov
adc
in
outsl
sahf
jb,pn
jp
fiadds
add
jae
daa
jns
add
aaa
and
sub
pop
fcomip
push
cld
inc
stc
lea
mov
js
mov
adc
jle
jecxz
pusha
cmp
or
imull
loop
hlt
inc
inc
addb
stos
dec
xor
mov
shlb
dec
ret
xchg
ret
repnz
xchg
out
cmp
pusha
into
nop
std
pop
js
bound
fstpt
add
mov
lods
adc
adc
push
out
jnp,pt
addr16
inc
adc
add
jns
push
pop
sub
scas
pop
sub
insl
ss
mov
stos
fcmove
aad
aaa
pop
or
pop
mov
xor
or
outsb
cmp
and
cmp
aam
xor
je
nop
mov
mov
loope
test
cs
mov
or
stos
dec
cmp
mov
mov
sub
or
mov
sar
jne
pushf
adc
jp
int
inc
or
mov
leave
jo
pop
daa
cmp
cmpsl
cmc
jae,pn
jbe
outsl
inc
mov
mov
jge
es
pushf
push
sti
addb
jmp
ret
sub
cltd
jae
mov
jmp
or
push
jmp
gs
push
mov
vorpd
mov
and
cmp
mov
call
dec
ss
mov
int3
xchg
pop
popf
mov
cmp
xor
int
pop
mov
xchg
cmpsl
cmovl
and
cmp
cmpsb
push
mov
pop
dec
rorl
insl
add
scas
pop
xor
shlb
dec
lcall
andb
and
pop
or
lods
push
stc
xor
ror
mov
cltd
xchg
scas
lods
int3
add
pop
les
xchg
dec
mov
jb
dec
xchg
rcll
mov
push
in
lret
test
stos
ds
call
dec
repz
push
shrl
xchg
ror
repnz
mov
add
es
fstps
les
lods
mov
lock
mov
fidivs
jo
jp
hlt
lods
pushf
stc
leave
fadd
stos
sbb
jle
inc
xlat
pop
add
lds
xchg
fidivrs
sub
ja
sub
inc
pop
aam
cmp
test
and
pop
mov
mov
ds
sbb
data16
and
inc
cmc
pop
mov
mov
mov
inc
cmp
enter
cmpsl
mov
and
dec
jl
jb
mov
sar
dec
lcall
xchg
stos
out
push
sbb
ja
sub
mov
popa
cmp
ds
das
ds
fidivl
cltd
dec
inc
fiadds
aaa
inc
sti
xlat
mov
push
adc
or
pusha
jb
rorb
dec
imul
mov
jmp
mov
in
cmp
mov
mov
addb
inc
fdiv
sbb
sub
pop
pushf
out
arpl
imul
fisubrl
fdiv
sub
test
xor
pop
and
icebp
sub
movsb
insb
aas
mov
push
push
nop
test
inc
jecxz
add
fsubrs
add
daa
or
inc
out
lret
pusha
shrl
pop
push
outsl
ret
xorl
ja
xchg
cmp
cmpsb
scas
mov
mov
lods
stos
ja
jp
adc
dec
pop
sub
sbb
scas
jp
ret
add
pusha
out
sti
pushw
add
mov
mov
das
add
cli
icebp
fdivl
sub
je
pop
cmp
scas
mov
jnp
sub
adc
in
and
cmp
slwpcb
mov
or
lcall
das
iret
lds
push
arpl
scas
inc
movsl
inc
insb
pushf
mov
lret
or
mov
cmp
push
int3
shrb
enter
and
jne
push
ss
roll
inc
cmp
pop
xchg
cmp
add
stc
add
mov
insb
imul
push
loopne
into
popf
mov
cmpsl
std
inc
lret
aad
clc
dec
loope
popf
mov
nop
outsl
jmp
imul
cmp
add
xor
mov
and
add
sub
mov
xchg
adc
in
and
push
pushf
rcrl
int
adc
insb
cmp
js
sbb
lret
xlat
movsb
shlb
scas
pop
inc
int3
test
or
lcall
push
push
dec
out
and
stc
mov
adc
pushf
mov
or
ljmp
ss
jl
call
xor
gs
cmpsb
inc
les
scas
mov
addl
push
stos
adc
lock
mov
sbb
inc
lea
and
mov
fsubs
daa
pop
and
lret
cli
dec
jnp
or
push
leave
cmpsb
les
or
fs
call
int3
pop
rorl
xchg
jge
push
iret
inc
mov
mov
lret
pop
pop
mov
nop
pop
inc
popa
imul
push
push
fsubr
xchg
adc
repz
pop
mov
arpl
push
sbb
rorl
pop
sub
cmp
add
insb
cwtl
adc
aam
jns
adc
pop
test
fprem1
push
pushf
pop
pop
mov
rcll
aam
mov
mov
add
push
cmp
inc
test
xchg
daa
adc
outsb
jb
lea
mov
cltd
mov
jecxz
or
aam
pop
or
xor
inc
sbb
lds
mov
lds
in
int
mov
pusha
stos
fs
push
sub
dec
xor
sbb
int3
fwait
mov
stos
push
fmuls
push
push
bound
enter
mov
ja
movsl
test
lret
sarl
rorb
inc
out
aaa
pop
cmpsl
adc
pop
call
sbb
pop
movsl
test
mov
aas
arpl
lret
mov
jae
lods
adc
or
in
push
dec
ret
mov
sbb
inc
pop
ret
ljmp
cmc
sbb
push
fld1
aad
and
and
fbstp
sub
push
das
adcl
test
and
push
mov
and
jb
test
daa
lret
xlat
xchg
sub
js
test
repz
test
movsb
push
jo
in
lods
add
lods
cmpsl
xor
imul
mov
es
add
aas
ja
mov
repz
andb
dec
xchg
dec
js
ss
jno
cmp
pop
add
pop
push
into
ss
clc
mov
mov
mov
mov
jne
dec
sbb
sahf
data16
or
test
test
mov
xor
mov
cmp
cld
push
divb
aad
popa
lret
jmp
dec
sbb
mov
dec
mov
push
shlb
subb
sarb
das
mov
push
mov
jge
xchg
xchg
xchg
mov
jmp
mov
mov
xor
and
inc
mov
xchg
adc
stos
jp
ljmp
ds
ret
stos
mov
add
sbb
lds
mov
imull
xchg
push
adc
shlb
cs
orb
jae
mov
or
adc
ror
popf
sub
aam
call
push
out
mov
mov
xor
aaa
dec
repz
xor
sub
popf
decb
lahf
fcoml
or
xchg
adc
es
jbe
push
jecxz
dec
bswap
insb
aad
mov
scas
popa
outsl
sti
pusha
popa
or
cmpsb
js
stos
sub
call
shl
loopne
jae
mov
cmp
jle
cmp
jmp
and
xor
fwait
shll
push
jne
out
jne
das
fs
cmpl
xor
dec
jge
into
call
clc
push
sbb
xchg
jbe
push
xchg
out
in
hlt
pop
push
rorl
into
jge
mov
xchg
xchg
mov
lret
sub
scas
gs
mov
add
sub
cmp
add
mov
push
mov
fnstsw
movsb
scas
imul
test
lret
adc
shl
outsb
lds
scas
sbb
pop
xchg
popa
je
sbb
xchg
mulb
jecxz
in
ljmp
iret
cli
jae
push
inc
xchg
inc
push
mov
sub
test
cld
pop
aas
int3
sbb
push
sbb
inc
jae
lahf
xor
lahf
mov
out
fiadds
push
sbb
js
lret
pop
mov
popf
jb
dec
fsubl
stos
add
nop
lret
xchg
jg
int3
rolb
mov
jp
fldcw
fiadds
push
jns
pop
mov
or
outsl
xchg
inc
ljmp
adc
mov
xchg
pmaxsw
pushf
or
hlt
xor
mov
sti
cmc
aaa
cmp
push
jbe
push
mov
pop
cmp
ja
insl
div
icebp
inc
in
adcb
xor
jge
popf
xlat
lea
mov
mov
int
push
ss
pop
fdivs
mov
push
pop
imul
add
jbe
push
cmpsl
mov
in
adc
lods
dec
jge
ds
mov
gs
pop
les
xchg
mov
sti
mov
and
loop
mov
leave
dec
jne
sub
adc
fcoms
jns
sbbb
mov
lds
mov
pop
pop
pop
fwait
push
push
lret
in
xor
loope
dec
sti
sahf
sahf
jae
inc
cs
mov
push
pop
arpl
fisubrl
lock
jge
and
daa
push
mov
lds
in
loop
hlt
inc
inc
leave
sub
mov
sub
add
mov
xor
dec
cmp
mov
sub
jb
and
sbb
xchg
aas
cmp
cltd
jne
std
out
jl
mov
lods
cwtl
jecxz
push
aaa
pusha
inc
dec
inc
outsb
push
pop
and
push
iret
dec
ss
push
or
dec
stos
mov
out
pushf
jp
movsl
lods
mov
pop
and
aad
adc
out
test
rorl
cmc
mov
cs
cwtl
jns
fs
push
pop
sub
and
iret
stc
and
loop
jecxz
jae
popa
int3
ret
rclb
push
jo
add
js
scas
push
push
jns
hlt
sbb
pop
pop
jmp
cmc
sbb
cs
and
jecxz
mov
lret
mov
in
sub
mov
iret
push
pop
jmp
lret
mov
insl
dec
sbb
ret
cmpsb
data16
and
pop
lret
mov
cmpsl
lea
ss
jo
pop
ljmp
aas
jae
pushf
jecxz
dec
xchg
into
pause
add
pop
sub
nop
test
push
enter
sbb
pushf
ficompl
inc
pop
xor
fneni(8087
pop
cmp
cmp
cmpsl
dec
mov
adcb
pusha
cltd
sub
adc
insl
push
idivb
jnp
aaa
add
enter
mov
inc
test
rcrb
jnp
sti
mov
sbb
mov
or
std
mov
sbb
sub
add
hlt
int3
adc
dec
or
enter
or
je
xlat
fdivl
lahf
adc
cmp
or
addr16
xchg
repnz
add
dec
and
ret
out
inc
fistpl
int3
shl
xchg
lods
lods
dec
popa
cmp
mov
idivl
xor
mov
xor
and
repz
movsb
adc
jp
jge
gs
call
and
stos
dec
movsl
sbb
jg
imul
push
push
pop
xchg
adc
imul
scas
outsl
jne
scas
adcw
lret
js
push
aad
adc
add
sbb
inc
sbb
add
fidivl
sub
pop
fcomp
imul
jno
push
addl
mov
cld
nop
in
jecxz
push
and
sbb
mov
sub
mov
jne
lret
mov
mov
dec
xchg
sub
push
sbb
add
and
rclb
test
stos
cli
bound
push
mov
stos
xor
fisttpl
enter
pop
loopne
xchg
pusha
cmp
fldcw
aas
xchg
sub
daa
mov
xor
jl
rolb
jbe
or
sahf
mov
or
cmovs
mov
je
mov
call
jbe
cld
jle
data16
sbb
add
mov
xor
jo
lods
xchg
out
xchg
dec
daa
fdivl
inc
pop
push
repnz
add
mov
imulb
inc
mov
cmp
xchg
add
mov
inc
mov
sub
int
shlb
jp,pn
mov
fcomi
xor
sbb
outsl
in
pop
mov
les
outsb
push
or
ljmp
pop
inc
mov
xchg
add
iret
jbe
repz
dec
iret
mov
lods
mov
fnop
mov
sub
mov
fcompl
mov
or
sub
dec
cli
dec
stos
fdivs
mov
shrb
lea
lcall
xor
stc
dec
or
js
xor
cli
dec
das
fcmove
xor
xor
add
push
arpl
and
sub
jns
and
not
lahf
inc
int3
mov
xor
or
push
aad
incb
add
inc
std
out
adc
iret
jae
dec
sahf
sub
gs
lods
scas
mov
push
fldenv
jae
popa
mov
add
movsl
mov
hlt
test
pop
dec
dec
bound
repz
rol
mov
sar
pop
clc
lahf
dec
ret
xchg
repnz
repz
mov
into
mov
xchg
push
fisubl
cwtl
enter
xchg
mov
loop
ficompl
sbb
dec
mov
shll
pop
and
and
mov
push
and
loope
adc
ret
scas
in
sub
adc
movl
or
gs
pusha
sub
xor
mov
sbb
dec
jno
adc
popf
scas
and
lret
dec
aad
mov
and
push
mov
xor
sub
adc
out
inc
pop
mov
or
xor
cmp
fcmovnbe
jecxz
ss
stc
idivl
adc
jge
imul
fnstenv
les
cmp
cwtl
push
mov
mov
adc
or
push
xor
xor
incl
cmp
js
in
aas
int3
stc
mov
cltd
enter
jo
jbe
dec
xchg
mov
push
stos
or
insb
test
mov
mov
cmpsl
and
fcmovnb
mov
inc
mov
ret
xchg
jo
or
jbe
add
dec
negl
mov
fcompl
ficoms
fdivs
shrl
insb
pop
mov
sbb
cmp
sbb
mov
mov
test
mov
aaa
mov
push
sub
jge
cmpsb
in
rol
addr16
ja
jg
xchg
dec
sahf
xor
pushf
xchg
pop
stc
pop
mov
scas
mov
inc
mov
jae
icebp
mov
imul
push
scas
sti
sub
test
xchg
ret
stc
dec
cwtl
or
mov
ret
dec
pop
lods
lock
pop
dec
test
rolb
out
out
cld
xchg
push
std
shl
aad
cmp
jb
arpl
mov
mov
out
imul
push
lds
mov
and
imul
and
cmc
adc
lret
mov
test
dec
lcall
jecxz
lods
in
rolb
push
imul
xlat
popf
lods
arpl
xor
pop
lds
xlat
mov
or
add
fsubrl
out
jb
lds
mov
cmp
pushf
cmp
lret
xchg
cmp
or
enter
cmp
mov
mov
movsl
jmp
mov
fcmovnb
out
mov
cwtl
mov
inc
mov
mov
xchg
rcrl
dec
test
imul
mov
push
ret
pop
inc
sbb
mov
cld
jp
aam
add
pushw
outsb
mov
imul
cmc
lods
push
outsl
inc
imul
sti
repz
xchg
inc
pop
dec
xor
xor
add
inc
pop
xor
fmull
adc
notl
adc
outsb
jb
fmull
cmp
mov
xchg
popf
xchg
fldenv
inc
test
test
outsl
dec
adc
mov
and
xchg
enter
lahf
dec
or
jnp
int
hlt
aad
pop
jmp
add
xchg
mov
andb
push
sbb
adc
mov
test
xchg
push
push
jle
inc
fadd
sbb
shrb
js
inc
movaps
mov
cmpsl
jge
jp
cmpsl
dec
mov
and
pop
pop
les
sub
inc
loop
int3
jns
inc
imulb
or
test
cmp
icebp
xchg
add
or
lods
dec
repz
test
pop
xor
sti
inc
into
insl
xchg
add
mov
and
sbb
sub
pushl
jg
sub
xchg
sub
divl
adc
int
ficomps
xchg
imul
cli
ficompl
sbb
popa
testl
cmp
in
cmp
shr
mov
mov
add
inc
adcl
cli
pop
ss
cmp
and
mov
mov
divl
test
sub
pop
es
mov
pop
adc
mov
aas
push
pusha
fwait
inc
mov
sbb
lcall
rcrl
scas
ljmp
mov
lods
inc
jg
adc
pop
xchg
sbb
pushf
xchg
das
cmpsb
in
cmp
jecxz
cmc
outsl
stos
mov
enter
in
adc
jl
pop
out
out
es
in
repz
cmp
stc
lods
inc
jno
lods
jecxz
loope
push
pop
insl
or
test
jae
outsl
mov
lret
or
call
or
pop
cmp
fnstcw
je
pop
pop
jne
fdivl
in
and
ljmp
jno
mov
mov
sbb
mov
add
nop
inc
inc
icebp
inc
jmp
pop
test
dec
push
arpl
jl
in
movsl
out
dec
scas
or
rcrb
dec
inc
ss
pop
push
out
inc
mov
ja,pn
and
push
inc
mov
outsl
aas
andl
mov
ja
xchg
imul
mov
movsb
call
pop
pusha
and
xor
lret
pushf
push
sub
in
test
ror
in
in
addl
lds
dec
push
stc
jns
loope
cld
ret
xor
jecxz
in
push
xchg
fcompl
cmp
aas
sub
add
lods
divl
icebp
inc
xor
sbb
test
fsubs
mov
testb
in
movsb
sbb
and
sahf
inc
ficompl
pop
jmp
scas
jge
out
lret
mov
xadd
out
movsb
movsb
ror
filds
mov
lcall
or
fs
sub
inc
ljmp
xor
divb
cmpsl
movsb
cmpsb
ds
fiaddl
scas
dec
outsb
mov
xchg
lcall
jecxz
add
ss
div
inc
push
dec
fstps
das
mov
into
dec
lret
loope
push
cs
enter
lods
repz
xchg
push
in
xor
cmp
dec
and
adc
jb
js
push
test
jge
sahf
psllq
stos
sbb
xchg
jl
lds
xlat
hlt
xchg
adcl
popf
fildl
out
pop
aad
cmp
adc
incb
jae
es
add
push
mov
sub
push
and
xchg
out
cmpl
mov
adc
shrl
cltd
add
or
iret
jecxz
jp
pop
sbb
adc
mov
in
mov
shr
lea
lea
aaa
jmp
cmp
idivb
inc
and
cld
mov
leave
jns
sbb
lods
add
sahf
mov
in
sti
dec
cwtl
jge
out
and
pop
xor
push
mov
push
in
sbb
jno
dec
popf
aad
xchg
add
mov
insb
inc
out
jne
jb
daa
ret
jae
mov
sbb
data16
aam
test
xor
repz
push
in
enter
icebp
mov
mov
dec
ret
xor
mov
inc
sarb
sti
cmpsl
cmp
imul
xchg
mov
xchg
in
test
inc
iret
ljmp
pop
dec
inc
bound
jle
jg
cli
lahf
dec
pop
mov
xchg
mov
sarl
mov
mov
pop
dec
sbbl
sbb
xor
jae
hlt
mov
mov
push
push
or
cwtl
out
mov
lret
dec
jnp
nop
mov
add
jbe
stc
sub
rcll
insb
jmp
xchg
cmpsb
xlat
push
dec
les
not
lret
mov
mov
xchg
out
fwait
xor
scas
out
jne
and
and
or
cmpsl
stos
adc
arpl
jb
outsb
aam
cmpsl
repnz
movb
gs
es
add
lds
mov
cmp
dec
cmc
fdivr
test
mov
adc
int
cmp
mov
push
sbb
pop
mov
sbb
mov
in
jo
jmp
mov
dec
popa
sahf
je
sub
pop
jae
popf
xlat
push
ds
push
sbb
loope
lea
mov
ljmp
xchg
mov
mov
mov
sbb
bound
sub
in
mov
dec
pop
dec
insb
repz
push
std
es
ds
addr16
mov
mov
cmpsb
into
ss
rolb
clc
hlt
pop
jns
sbb
or
push
mov
jne
clc
mov
lds
sub
jle
adc
and
ss
mov
inc
into
push
shll
outsb
ror
bt
in
adc
xchg
adc
je
sub
dec
imul
push
aas
in
es
adc
and
mov
insl
or
push
xchg
and
fstp
pushl
push
cmp
jbe
xchg
mov
and
mov
mov
aas
imul
into
push
push
xchg
push
fildl
push
sahf
lret
in
dec
and
xor
std
int3
jns,pn
xlat
arpl
stc
repnz
xor
aas
dec
mov
dec
lds
add
popf
inc
fs
in
and
fstl
pop
lahf
out
inc
adc
hlt
repz
test
pop
and
add
sbb
cmp
std
sbb
fs
sbb
jecxz
out
dec
inc
jo
and
clc
mov
ja
xchg
shll
and
mov
mov
dec
xor
cmp
xchg
jp
addl
dec
jge
jbe
mov
mov
aam
mov
daa
xor
sub
and
add
ds
int3
rcrl
mov
movb
or
xchg
insl
call
or
adc
and
xor
sbb
push
enter
jae
and
push
test
jnp
out
stos
lods
lret
dec
in
cld
xchg
loop
jle
jmp
pusha
ret
jnp
loope
or
sbb
mov
mull
pop
or
mov
in
jge
dec
xor
mov
pop
fisubrs
push
xchg
xchg
out
inc
pop
daa
xor
mov
bound
lahf
add
jo
add
xchg
jg
pop
in
xchg
nop
push
movsl
cmp
sub
lcall
pop
jg
push
loope
cld
xor
mov
pusha
mov
gs
sbb
hlt
addl
fisubl
or
or
daa
movsl
xchg
out
xor
and
lahf
push
inc
movsl
stos
mov
out
ja
lock
ret
and
jbe,pn
mov
adc
xor
xor
xchg
ret
mov
and
adc
xchg
rorl
stos
int3
xlat
enter
scas
push
fisubs
dec
cmpsl
or
jne
ret
sub
pop
and
xchg
lret
mov
cmp
ds
test
adc
xchg
and
xchg
dec
xchg
fnsave
mov
sbbb
fadds
sti
fnstsw
hlt
data16
jb
les
lahf
push
mov
sti
push
stc
ja
xchg
test
push
aam
xor
popf
imul
sbb
fs
inc
cmp
or
sbb
outsb
imul
dec
and
push
mov
fisubs
xorb
mov
pop
or
mov
mov
fmull
mov
mov
ja
pop
ljmp
mov
mov
movsl
cmp
pop
pop
daa
push
or
pop
sbb
lods
cwtl
aaa
mov
outsb
in
orl
jns
push
shll
sti
sbb
sbb
add
es
in
cmp
jno
stos
adc
test
in
pop
xlat
call
pop
repz
nop
out
stc
pop
sbb
loopne
cmp
pop
loopne
inc
sbb
and
dec
xchg
add
cwtl
inc
cmp
outsb
cmp
xchg
xor
arpl
xchg
call
outsb
pop
pop
pop
add
mov
je
stos
setns
and
add
push
pop
xor
into
mov
ret
jne
pop
mov
adc
sub
sbb
das
sbb
xchg
cmp
ficoms
mov
lret
fs
lahf
shlb
pop
jl
or
cwtl
ja
and
loope
jmp
pop
jge
add
inc
jg
lcall
daa
or
mov
sbb
push
push
push
jnp
inc
loop
or
cmp
lret
and
sbb
aaa
dec
stos
es
jbe
push
sbb
mov
sar
out
jmp
int
movl
and
fsubs
add
sbb
in
jne
mov
push
push
xor
rcrb
adc
imul
cmc
loopne
mov
pop
nop
sbb
xchg
sbb
int
in
dec
or
adc
sbb
sti
cmp
pop
je
pop
ss
push
add
in
out
jecxz
push
inc
xchg
pop
push
mov
push
aad
das
mov
mov
out
scas
xchg
imul
jmp
ss
sub
imul
fists
hlt
cmp
repz
icebp
add
dec
cmpsl
out
int
mov
inc
loopne
fs
inc
mov
mov
js
rcll
call
mov
movsl
sub
jg
aaa
xchg
hlt
mov
rclb
push
mov
xor
test
sbbb
cwtl
mov
mov
lds
out
cmp
mov
push
into
mov
mov
insb
mov
aas
lea
cmp
and
push
pop
mov
xor
inc
sbb
push
mov
gs
push
sub
jbe
inc
jbe
xlat
jg
test
in
xor
test
loope
cmpsb
mov
and
cltd
and
xchg
add
ljmp
rolb
insb
inc
add
mov
fmuls
in
scas
xor
rcll
dec
cmp
pop
stos
sbb
icebp
push
cmp
pop
cmp
xor
testb
loopne
daa
popl
sbb
jbe
aas
sbb
mov
jbe
adc
cmp
add
push
adc
iret
mov
xchg
pop
cs
add
push
adc
je
push
sub
int3
pop
mov
cmp
push
rcl
add
mov
xor
pop
fwait
and
psubusw
in
lods
dec
mov
imul
divb
mov
cld
push
arpl
or
mov
cmpsl
mov
ljmp
popa
jnp
dec
movsl
pop
and
sub
xchg
push
out
adc
push
jg
dec
dec
add
incl
dec
push
add
fildll
push
and
mul
mov
push
adc
push
xor
movsl
lret
lock
xchg
insb
sbb
mov
stos
lods
xchg
sub
cli
mov
jnp
call
popf
insb
in
adc
push
ret
gs
mov
add
rol
jmp
push
icebp
or
dec
xor
push
out
add
or
jge
ficoml
jae
ret
adc
mov
fs
xlat
cmp
les
pop
shrl
pop
cmp
mov
adc
jbe
ja
inc
pop
add
dec
cld
bound
call
inc
jmp
pop
in
add
aaa
mov
sbb
jp
mov
aas
cwtl
xor
into
or
xor
aaa
xor
fidivrl
adc
mov
mov
lahf
and
jo
sub
mov
adc
jnp
push
das
popa
pop
mov
mov
outsb
cmpsl
lret
cmp
push
pop
push
pop
bound
xchg
ror
nop
xor
jmp
dec
push
leave
stc
popa
sub
jne
decl
std
push
sbb
pmaxub
mov
mov
cmp
mov
pushw
adc
hlt
je
jae
push
jp
xchg
sbb
and
bound
dec
stos
push
push
aaa
mov
divl
inc
and
sbbb
shl
push
andl
sahf
rcl
int3
adc
xor
aam
movsl
fadd
lret
out
or
pop
lea
ret
jb
ljmp
sti
fwait
xor
mov
or
loop
jg
inc
repz
enter
xor
pop
adcl
ss
imul
jo
cld
push
cltd
mov
xchg
inc
or
sub
push
xchg
shr
jnp
gs
lods
xorl
decb
mov
mov
aam
lcall
fwait
xor
shrb
or
add
arpl
sahf
jno
sub
push
lods
lcall
notl
loopew
pop
and
nopl
pop
stos
enter
push
stc
ret
les
jae
mov
pusha
lcall
or
dec
jg
loopne
leave
sbb
popl
cmp
inc
icebp
mov
add
mov
mov
mov
or
sahf
int3
pushf
into
and
lcall
mov
inc
add
and
pop
push
xchg
cs
pop
ljmp
pop
sub
mov
in
and
mov
hlt
xchg
push
mov
sbb
xchg
xor
push
outsb
int3
rcr
pop
cmp
je
sbb
cmpsb
dec
loopne
out
mov
inc
add
lds
and
cltd
in
and
insb
insb
or
loopne
shll
inc
rcll
xor
jne
cmp
mov
test
out
jge
pusha
xchg
std
jns
ljmp
imul
outsb
sbb
into
loope
push
imul
xor
and
shl
bound
mov
aad
xlat
mov
negb
leave
jnp
jl
fincstp
dec
pop
out
jns
lods
push
imul
mov
les
bound
pop
fidivrs
fcompl
dec
mov
cwtl
dec
inc
jne
sub
loopne
jmp
je
cwtl
inc
stc
roll
cltd
sbb
add
jno
pushf
and
sub
or
mov
lret
pusha
int
int
jo
xchg
mov
fmuls
jp
dec
inc
insl
cmp
sbb
adc
into
addl
and
stos
aam
sbb
dec
mov
enter
sub
ja
out
mull
enter
addb
pushf
push
mov
xchg
xor
inc
stos
int3
repz
push
jae
mov
in
pop
jne
sbb
mov
push
cwtl
mov
mov
pop
test
push
imul
mov
cmc
jno
push
mov
lock
dec
push
adc
adc
fcompl
sbb
int3
stos
ljmp
mov
mov
rcrl
jmp
je
cmp
jb
push
ljmp
xlat
and
sub
out
add
pushf
sub
jge
cmpsl
ljmp
movsl
dec
add
test
xor
cltd
push
leave
addb
jmp
and
idivb
add
test
xor
sub
andl
outsb
test
mov
xchg
mov
sub
pushl
push
fisubrl
call
and
out
push
cltd
cmp
mov
jl
jno
jge
mov
in
pop
sbb
or
cmp
leave
pop
fstl
jo
jbe
mov
loopne
bnd
cmp
inc
mov
xor
gs
les
fmuls
cmc
pop
out
mov
cli
inc
xchg
cmp
scas
andb
dec
jge
mov
inc
js
lods
adc
int3
out
in
push
es
cli
add
mov
mov
sbb
sbb
insb
dec
maxps
xchg
ss
sbb
sub
mov
mov
aas
and
xor
and
insb
jbe
stos
push
and
xchg
and
or
loopne
leave
mov
in
gs
pop
mov
mov
ficomps
cmc
inc
es
je
xor
test
rep
push
pop
pop
adc
xchg
xor
and
imul
adc
ja
bound
lods
push
push
stos
xchg
pop
add
mov
inc
adc
sub
and
adc
icebp
into
adc
fcmovbe
aad
shll
ret
ret
inc
stos
and
sub
mov
cli
dec
movsb
clc
and
jbe
mov
mov
sub
push
mov
in
or
or
test
fnstsw
mov
ja
or
push
xchg
pop
cltd
sbb
jge
sub
dec
adc
push
sub
sub
hlt
jne
imul
pop
iret
push
ss
js
arpl
pop
mov
jne
or
jno
inc
jmp
add
jg
testb
in
cmpb
or
sahf
mov
out
push
sub
push
hlt
icebp
leave
xchg
mov
push
out
fcomi
cmp
pop
sub
push
and
movl
int
lds
shlb
js
into
lret
sbb
pusha
sub
push
fiaddl
and
test
cli
cmpsb
imul
mov
gs
inc
mov
repz
lcall
loop
shll
les
push
hlt
fdiv
jmp
add
sub
stos
sbb
push
xor
inc
add
adc
lahf
xorb
repnz
sbb
mov
cmpsl
mov
jge
shll
in
cmpsb
push
or
xchg
ret
popl
mov
push
aas
jns
mov
sahf
cwtl
out
jecxz
adc
xor
mov
flds
gs
mov
sbb
aam
cmp
lret
cmpb
jns
xchg
aaa
and
cmpsb
xor
mov
sbb
jecxz
inc
icebp
add
xlat
xchg
subb
cmpsl
pop
mov
lret
insl
cmp
sub
and
push
sub
aam
cltd
sub
mov
inc
or
insb
loopne
ss
lret
adc
outsl
enter
cltd
push
inc
mov
and
add
and
sbb
lds
les
mov
jecxz
ret
cmp
cmpsl
std
mov
arpl
pusha
lret
add
mov
lods
sbb
outsb
mov
fstpt
inc
adc
dec
xchg
jno
rolb
hlt
sbb
mov
sub
das
sub
jmp
adc
pop
mov
into
aaa
pop
bound
adc
jbe
mov
or
idivl
xor
popa
pop
fnstsw
jo
add
jmp
jne
loop
repnz
loop
int3
out
cmpl
addb
es
iret
movb
ret
jp
je
mov
xchg
ja
pop
xor
movsb
add
jne
and
pop
cmc
out
lods
adc
jno
xchg
mov
sbb
and
repz
imul
xchg
lea
unpcklps
test
add
or
mov
sbb
ror
lcall
aad
rclb
add
mov
xor
clc
les
add
xor
std
or
sub
mov
aaa
and
or
xor
mov
pop
pop
leave
outsl
lock
mov
stos
in
mov
or
and
mov
push
shrb
ja
mov
add
ss
or
sahf
xchg
jge
sub
ljmp
push
call
push
icebp
fidivs
adc
mov
xor
sub
push
pop
shlb
adc
leave
xor
testl
adc
data16
movsb
mov
stc
push
cwtl
push
insl
movsb
orb
jle
add
lret
rcrl
pop
dec
mov
mov
jnp
jbe
sti
sub
or
fbstp
inc
fwait
repz
xor
inc
add
push
mov
mov
push
add
popa
push
push
jo
xchg
imul
mov
jmp
push
orl
pop
pusha
pop
scas
add
es
test
jmp
jo
and
sbb
mov
in
shrb
adc
mov
inc
cmp
incl
test
in
adc
je
add
shlb
subb
mov
inc
cli
push
arpl
stos
addr16
jbe
xor
or
add
incb
cmp
out
xchg
push
dec
mov
daa
andb
sbb
arpl
sub
or
cltd
push
ja
lret
mov
hlt
out
movsb
xor
add
jns
std
xor
push
cli
inc
pop
sahf
or
das
int
sbb
jecxz
fsubl
aaa
icebp
shll
sti
aam
sub
pop
test
dec
jmp
ljmp
pop
sub
idivl
fs
fcmovnb
sbb
test
add
sub
jmp
out
sahf
push
movsl
xor
or
mov
cs
cmp
pop
scas
mov
fs
sub
xchg
fildl
lods
fucom
das
xor
mov
and
xchg
subb
rolb
inc
loope
pop
mov
pop
xchg
inc
lret
sub
push
aas
lock
mov
dec
in
daa
or
ds
out
jle
idivl
mov
xor
xor
into
pusha
imull
jns
and
sbb
add
in
cltd
aad
popf
or
ljmp
or
pop
xchg
or
pop
aaa
popa
lds
pushf
test
or
psubsb
jp
and
mov
push
mov
cmp
sub
sbb
ja
pop
cld
add
arpl
bound
xor
loopne
mov
ss
out
and
dec
movhps
repnz
dec
add
inc
jo
cld
aaa
out
jmp
or
push
mov
in
jg
sbb
xchg
pop
or
mov
jg
nop
icebp
jo
push
sub
jmp
push
mov
aaa
mov
inc
pop
repnz
sub
in
and
int
add
jp
lea
or
jb
int3
stos
cmp
xchg
jmp
pavgb
stc
cmp
push
hlt
sub
stos
mov
stos
cmpsl
jge
cmc
cld
fldt
jle
jnp
mov
jb
into
sbb
in
pop
out
into
mov
pop
out
out
daa
dec
cli
popa
xor
les
jnp
mov
mov
fistps
lcall
imul
rol
movb
std
pop
xor
pop
pop
loopne
ss
cmpsl
lds
mov
repz
sub
dec
mov
mov
bound
int3
aas
pushf
cmp
or
dec
scas
rolb
jge
test
fstpl
std
pop
leave
data16
xor
fwait
pop
adc
scas
adc
pop
dec
cmp
insb
push
jns
and
jae
xchg
outsl
rcl
dec
cmp
out
sub
and
and
mov
xchg
in
cld
lret
mov
outsb
scas
test
bnd
jmp
aaa
aaa
sahf
cwtl
sbb
and
shlb
out
pop
mov
das
roll
xor
push
lea
mov
cmp
icebp
mov
js
mov
pop
pop
dec
cmp
or
push
sbb
inc
dec
pushf
mov
dec
arpl
roll
pop
aas
add
jnp
loopne
ja
loopne
mov
sbb
pop
popf
call
sbb
jno
push
das
sti
or
rcll
insl
pop
mov
lock
repz
or
das
sub
cmp
cmp
and
cmp
scas
jns
add
inc
fdivl
xchg
fdivrp
fmull
out
push
rolb
cmp
cmp
jecxz
mov
mull
ss
cmpb
and
fiaddl
add
xchg
aaa
addr16
aam
dec
cltd
mov
sahf
out
push
out
sub
hlt
and
jg
jmp
clc
adc
cli
testb
rcl
out
jmp
add
lds
add
and
addl
insb
dec
lret
add
mov
push
jnp
mov
pushf
pop
sub
cmp
jae
add
xchg
fimull
push
push
pop
pop
and
test
push
mul
test
inc
shll
scas
notb
push
std
adc
or
test
jp
in
push
cmpsb
jae
pop
in
ret
xchg
jo
jle
mov
dec
daa
lahf
inc
jmp
mov
pop
shrb
imulb
testl
hlt
mov
mov
jle
add
stos
mov
pop
mov
mov
or
or
cmp
imul
ja
ret
xor
jae
in
lret
pop
aam
inc
lea
ljmp
sti
mov
add
pop
adc
addl
pop
fs
jne
cmpb
cli
or
push
clc
jae
scas
cmpsb
add
test
lds
rcrb
cmp
mov
loope
sbb
stos
int3
push
pushl
push
cmp
or
fmull
dec
sbb
mov
fwait
sarl
pushf
xchg
fs
lcall
jb
push
mov
jne
sbb
lea
jmp
dec
lahf
dec
aas
jle
fiadds
mov
repnz
mov
sub
mov
into
push
mov
testb
xor
in
into
imul
test
mov
outsb
inc
fdivs
imul
sbb
jns
sbb
adc
jmp
data16
xchg
js
mov
cs
pop
jnp
ret
dec
xchg
sahf
cltd
cld
popa
dec
xchg
pushf
fs
bound
in
ret
mov
push
sub
pop
int3
movsl
add
shll
jmp
push
out
sub
pop
mov
dec
sbb
sub
pop
test
stc
cld
cld
or
cmp
xchg
lock
lahf
test
dec
jnp
aad
xchg
lahf
push
mov
ljmp
es
push
push
inc
in
out
out
inc
push
pop
xchg
add
sbb
imul
lock
or
add
loope
or
mov
iret
push
inc
and
repz
std
sbb
add
push
aaa
cmp
mov
xor
ds
sub
pusha
mov
mov
imul
adc
sub
aaa
xchg
ret
out
int3
mov
mov
xchg
pop
mov
aad
and
xchg
adc
insl
imul
xchg
sub
jns
cmp
xchg
movl
push
push
aaa
test
lret
or
push
cmpl
cli
shrl
xchg
push
inc
inc
hlt
add
inc
leave
mov
cmp
add
inc
in
dec
push
xlat
dec
lea
and
fdiv
fwait
loopne
pop
inc
mov
sarl
pop
adc
test
gs
push
dec
mov
call
adc
cs
lahf
or
push
xchg
dec
pop
push
pop
call
aad
xor
loope
lock
cmp
loopne
mov
scas
jb
push
aaa
push
mov
fs
hlt
test
sub
cmpsl
js
inc
mov
js
xor
dec
stos
insl
fcompl
outsl
imul
mov
rcll
mov
adc
in
rcrb
and
or
pop
sbb
pop
test
scas
fwait
enter
xchg
cmp
and
lds
mov
jle
idiv
adc
cmp
loopne
cmp
ljmp
repnz
jecxz
in
jae
cwtl
inc
add
int3
imul
bound
mov
pop
jmp
xor
gs
xor
cli
cli
or
movsl
int3
xor
add
or
insl
lret
popf
imul
mov
sarb
movb
mov
call
insb
dec
pop
xchg
mull
xor
lock
pop
cmp
pop
adc
outsb
pop
and
xor
cs
add
aaa
fs
jge
sub
mov
int3
out
cmc
jns
sub
sub
inc
insl
addr16
jbe
lds
lods
jmp
ljmp
adc
jecxz
pop
test
fistl
jne
xchg
popa
imul
das
jle
hlt
call
sarb
dec
cwtl
popf
jmp
pop
push
rcrb
aad
push
fcoms
mov
in
sahf
xchg
inc
out
mov
filds
mov
js
pop
pop
inc
push
imul
cld
cwtl
js
pop
dec
cs
dec
or
in
mov
lea
inc
sbb
cmp
test
mov
push
stos
ss
cmc
ret
clc
push
add
mov
stos
imul
sub
popf
sti
push
out
int
in
jno
popf
pop
pop
and
scas
shlb
push
jae
jp
xor
movsb
mov
adc
les
ljmp
pop
mov
pop
jp
xor
lock
rolb
lods
daa
cmp
add
push
jb
or
add
mov
cld
test
add
dec
je
aam
fdivl
add
loope
xor
cltd
inc
xchg
cvtdq2ps
testb
sbb
aas
lock
or
mov
data16
xor
mov
cli
pop
fisubrl
push
aad
adc
aam
test
xor
lahf
lods
pop
call
mov
mov
mov
fcomip
imul
xchg
fisubl
fildll
cmpsl
xor
adc
mov
js
cmc
sbb
lods
dec
and
lds
bswap
mov
push
push
lret
mov
and
and
xor
pop
clc
fadds
sub
mov
test
jns
filds
sbb
jge
push
add
mov
dec
jge
fcmovu
dec
jp
in
pusha
cli
movsb
cmp
lea
orl
iret
pop
jle
test
push
fsubrs
popa
out
or
xor
xchg
clc
mov
pop
das
jl
in
in
pop
jecxz
lea
inc
mov
clc
and
call
adc
pop
aad
daa
mov
push
cltd
pop
lret
std
aad
pop
fmull
mov
dec
cmp
negl
xor
xchg
out
inc
lret
fsts
test
sahf
mov
mov
pushf
push
xchg
inc
ds
and
xor
xchg
add
pop
mov
pop
popa
and
mov
pop
scas
lret
push
data16
mov
add
mov
movsl
and
fs
sar
or
pop
cmpsl
adc
loopne
rorl
and
jle
in
pop
popf
sbb
stos
adc
cmp
stos
mov
xchg
test
jmp
adc
dec
aas
cmp
enter
ss
insb
jbe
addr16
cmp
cmp
xchg
dec
js
cwtl
and
dec
sub
push
or
je
sbb
push
xor
mov
insb
inc
push
or
mov
mov
psraw
clc
mov
xchg
test
js
push
sub
negl
jnp
fsubl
push
ss
mov
fiaddl
ret
push
std
sub
mov
imul
xchg
int3
insl
adc
and
outsb
lock
push
xchg
gs
dec
xchg
rcrl
ret
mov
mov
ljmp
clc
dec
imul
js
mov
xchg
add
fadd
cmpsb
lds
out
mov
adc
aad
jle
testb
push
arpl
dec
pop
mov
or
or
jnp
test
mov
xchg
loopne
mov
xorl
call
adc
jp
sbb
push
sti
popa
inc
cmp
idivb
xor
and
xlat
add
mov
mov
fsubl
sahf
pop
xor
push
out
mov
pop
or
aaa
add
enter
dec
test
in
scas
fldenv
cmpsl
decl
pop
shll
pop
inc
jb
mov
xchg
cmc
mov
mov
ficomps
movsw
jle
dec
fxch
and
in
mov
scas
pop
push
pusha
rcrb
daa
pop
out
push
arpl
xlat
jmp
xor
and
xchg
scas
adc
pop
js
sbb
sar
cmpsl
insb
inc
adc
insb
sbb
push
sbb
push
pop
sbb
xchg
loopne
cmpsl
sub
aam
push
mov
xchg
clc
test
inc
push
sbb
cmpsb
sbb
rorb
dec
scas
xorb
idiv
sub
ret
jb
ds
or
sbb
mov
mov
bound
negb
in
ljmp
push
jnp
jmp
cmpsl
inc
jle
pop
lods
inc
imul
fstl
adc
dec
and
xchg
jae
cmp
adc
pop
rclb
in
jns
mov
xorb
or
aam
pop
xchg
adc
cmp
int3
push
cmp
je
in
add
sub
pop
sub
test
xor
xchg
fcoml
sbb
pop
data16
das
sub
addb
and
test
mov
popa
inc
aad
movsl
mov
push
call
lea
pop
cmp
int
push
aam
cmp
add
lcall
in
add
xchg
cmp
cli
mov
pop
data16
fidivl
addr16
cmp
jecxz
and
sbb
data16
repz
sarb
jp
sub
pop
or
out
inc
or
aam
xlat
xor
andb
lock
ds
xor
inc
popf
xchg
pop
inc
jg
ljmp
sahf
mov
hlt
cmp
inc
sub
xor
xorl
dec
xchg
ds
nop
in
rorb
das
ret
movsb
add
mov
push
andl
jno
jp
cltd
jne
mov
push
out
jae
loopne
imul
dec
cmp
scas
pop
inc
test
data16
testl
sbbb
loopne
fcompl
ljmp
mov
pop
nop
add
xor
xor
call
adcl
mov
fnsave
fs
fdivs
fwait
sbb
pop
ret
sbb
mov
faddl
cwtl
je
sbb
inc
or
jne
lods
movsl
push
fistl
fistpll
mov
lahf
push
in
es
jecxz
test
int3
cmp
or
mov
popf
pop
adc
cmpsb
rcr
dec
pop
cmp
adc
scas
inc
mov
or
stc
mov
aaa
leave
js
fucomip
stos
int3
andb
fadds
insl
std
stos
sbb
push
enter
insb
jns
dec
leave
popl
sbb
jp
inc
in
cmc
inc
out
loop
stc
sub
mov
inc
movaps
dec
ja
ds
test
push
and
add
scas
addb
aaa
mov
pop
sbb
cmp
mov
inc
loopne
add
std
cld
dec
arpl
mov
lret
arpl
xor
int
shll
data16
add
push
loope
test
mov
xchg
shl
repnz
mov
xchg
jb
int
repnz
leave
and
sbbl
arpl
dec
mov
add
enter
clc
sti
mov
add
testl
add
mov
divb
add
pop
inc
movsb
andl
push
scas
mov
test
xchg
xchg
sbb
mov
xchg
pop
jne
dec
shlb
loop
icebp
aad
je
scas
call
faddl
sbb
mov
mov
and
pop
mov
push
jmp
nop
xor
fstp
adc
pop
les
idiv
pop
push
add
jg
mov
xchg
push
daa
fcoms
jle
inc
sub
cmpsb
and
jb
pop
ret
sti
pop
lcall
out
fstps
cwtl
lahf
aad
sarl
repnz
inc
add
stc
push
pop
leave
lods
aas
inc
mov
lret
cmpsb
std
push
out
adc
pop
fimull
mov
cltd
clc
mov
pop
or
adc
dec
mov
fs
test
sbb
loop
shlb
sub
mov
push
lret
mov
sbb
clc
ja
pop
addb
dec
or
xor
push
and
sub
popf
es
filds
pop
bound
sbb
adc
movb
fisttpll
filds
lcall
adc
mov
and
sti
enter
popf
push
js
and
dec
gs
lret
jno,pt
pop
sbb
movd
mov
test
push
cld
aam
xchg
repz
dec
dec
adc
into
add
stc
dec
jne
hlt
aaa
mov
test
xchg
seto
mov
lds
lods
mov
jle
mov
or
adc
mov
inc
cmc
ljmp
xchg
outsb
insb
cmp
xchg
xor
mov
push
aas
jb
xchg
movsl
movsl
xchg
xchg
pop
sbb
lahf
adc
push
enter
enter
out
cld
or
mov
iret
add
sti
ja
sub
incl
push
test
scas
xor
or
ljmp
and
test
lods
sbb
addb
das
mov
repnz
sbb
adc
pusha
jno
xor
ljmp
xchg
mov
pusha
adc
scas
scas
mov
pop
cmpsl
out
pushf
aas
dec
cmp
enter
and
jae
in
out
mov
imul
jp
xor
cli
mov
loopne
lods
pusha
add
add
cmpsb
outsb
iret
in
sub
adc
jecxz
int
xor
popf
xchg
push
mov
mov
in
xchg
inc
jmp
ja
add
std
mov
scas
movsl
sti
adc
xchg
pusha
add
popa
add
mov
das
pop
push
hlt
test
add
jno
data16
loope
pop
rorb
js
and
xchg
pushl
mov
xchg
adc
test
ficomps
and
iret
xchg
pop
fcomi
mov
into
lcall
sbb
sarl
push
jbe
fwait
rorb
sbb
or
jns
and
xor
ds
jno
mov
lods
fcmovnu
cld
xor
loop
and
idivb
sbb
cltd
mov
mov
lds
xor
aam
lock
push
and
sub
xchg
or
xor
mov
inc
xchg
clc
mov
and
jne
dec
or
aas
jo
aas
das
sub
push
xchg
sbb
daa
jne
addr16
xchg
jp
adc
stc
cmp
ficoml
push
sub
inc
or
fildl
das
pop
into
jl
jge
cli
mov
aam
adc
mov
fidivrs
pusha
xchg
add
xor
jae
sub
test
add
push
or
pop
mov
lret
rclb
push
pop
or
or
loopne
or
adc
mov
and
inc
add
sti
js
aaa
xchg
imul
push
mov
jnp
daa
add
test
mov
je
sar
adc
icebp
bndstx
arpl
xchg
pusha
mov
mov
or
rol
xchg
dec
cmp
cmp
call
mov
in
xor
std
push
popf
jae
inc
movsl
cmc
cmc
insb
sti
stos
movsl
out
jne
jnp
popa
adc
mov
adc
mov
imul
push
in
aam
pop
mov
test
sbb
mov
aam
test
loope
sub
mov
push
dec
cli
add
js
call
pop
shlb
out
ja
icebp
add
pop
inc
push
and
mov
fdivrs
add
cli
dec
mov
cmc
scas
push
add
xchg
stos
and
test
sarl
arpl
xchg
sti
inc
xor
ror
lcall
mov
push
xor
rol
mov
out
sbbb
cwtl
dec
jne
adc
stc
call
push
lcall
sub
out
repz
jge
cmp
out
and
test
gs
inc
ret
inc
pop
aaa
sahf
outsl
dec
mov
dec
pop
cmpsb
cmp
cmp
std
cmpsl
push
lds
sub
push
frstor
cmpb
xor
adc
xor
xor
mov
or
mov
sub
inc
addl
aam
lcall
fldt
dec
sub
outsb
pop
sbb
neg
mov
mov
icebp
incl
insl
push
dec
lcall
mov
imulb
lea
sub
shr
ljmp
sub
cmp
pop
xchg
stos
es
scas
xchg
xchg
pop
js
outsl
and
xor
nop
jnp
adc
inc
mov
iret
push
mov
xlat
aam
loope
xchg
imul
popf
mov
nop
xor
dec
in
cli
and
int3
mov
push
mov
pop
sbb
fstpl
xor
outsl
pop
pop
enter
arpl
mov
sti
shl
fstps
daa
mov
popa
movsl
dec
mov
push
out
xor
pop
xor
lds
shr
enter
add
add
leave
sarl
push
xor
out
pop
sub
cli
pusha
dec
dec
inc
sbb
jge
popa
jg
xchg
jae
mov
loopne
or
xor
imul
inc
add
xchg
int3
mov
repz
mov
es
addr16
xor
fmul
in
pop
jle
dec
aam
dec
or
mov
dec
jno
test
std
js
mov
cld
inc
pop
add
insl
leave
jge
sbb
sub
add
cli
data16
loopne
dec
insl
add
adc
xlat
stos
push
popa
pop
cmp
lock
aad
add
sbb
push
cli
jbe
jo
ja
lahf
std
pop
aas
adc
cmp
adc
inc
pop
mov
loope
mov
nop
push
aad
mov
inc
add
sti
das
fs
test
jecxz
and
add
xor
cmp
cmp
fisttpl
cmp
stos
leave
and
dec
repnz
fnstsw
in
xor
push
mov
adc
xchg
ds
lods
and
or
cmp
pop
std
mov
push
daa
jle
inc
pop
xchg
cli
and
stos
mov
mov
int
in
out
mov
mov
cli
mov
add
in
orl
xchg
clc
xchg
sbb
pop
mov
jg
adc
scas
shrl
xchg
jp
fimuls
insb
fbld
adc
mov
into
popa
pop
out
dec
test
and
outsl
scas
lret
mov
mov
stc
or
gs
or
inc
push
out
fldcw
sub
call
pushf
bound
pop
aas
mov
mov
in
dec
jecxz
js
push
xchg
ljmp
mov
incb
add
adc
pushf
stos
mov
push
push
adc
pop
adc
mov
das
mov
stos
mov
and
cwtl
inc
call
cmpsb
sbb
pop
jo
repnz
addl
outsb
out
mov
mov
out
sub
push
lcall
mov
repz
pop
add
daa
pop
out
ss
inc
fisubrs
jg
pop
dec
js
insb
in
cmpsl
and
sub
dec
jp
mov
mov
sub
mov
mov
add
and
sti
push
mov
add
aaa
sbb
fadds
inc
sarl
lds
stc
inc
push
cmp
mov
and
mov
xchg
mov
add
dec
adc
adc
lods
test
pop
push
mov
ljmp
shll
dec
pop
stos
int
pop
sar
subl
cltd
xorb
xchg
dec
scas
jno
jmp
imul
out
mov
and
xor
int
idiv
scas
dec
dec
in
sahf
and
add
arpl
cmp
add
ljmp
xor
je
mov
or
sub
lahf
mov
add
stc
scas
adc
sahf
and
xchg
pop
push
xor
int
xchg
cmp
ss
cmpsb
xor
ljmp
sub
dec
and
push
cmp
test
mov
cli
shlb
mov
cmp
dec
aam
lods
or
roll
push
test
fsubs
mov
mov
xchg
popf
and
shrb
mov
mov
sub
push
movsb
mov
shrb
lret
push
call
dec
test
mov
cld
inc
ss
sbb
dec
pop
sub
dec
std
xchg
mov
loope
adcb
fucomi
jg
scas
cs
mov
lahf
insb
sub
lods
mov
dec
pop
loop
sub
daa
mov
out
icebp
loop
mov
mov
cmpsl
loop
adc
push
in
aam
dec
mov
imul
icebp
mov
xor
pop
jne
mov
pop
inc
mov
sbb
cs
cmp
inc
push
jp
xchg
xchg
push
lods
jnp
mov
ret
rolb
add
cmc
mov
pop
inc
xor
loopne
lods
push
mov
sbb
mov
cmp
in
in
or
imul
std
xchg
test
fs
cmp
or
mov
lods
mov
jle
into
mov
push
xor
cmp
add
pop
sbb
aas
loope
in
divb
hlt
mov
xchg
into
add
or
pop
fstp
push
dec
sbb
int
arpl
addb
cmpsl
test
push
repz
dec
sub
add
inc
roll
adc
mov
jo
push
or
aam
aam
and
rclb
push
push
pop
sahf
idivb
fiadds
int3
pop
popa
fistpl
jge
push
dec
outsl
stos
cld
jle
or
dec
xchg
dec
xchg
lahf
mov
loopne
jne
push
int
xor
pop
sahf
out
aas
jg
adc
mov
cmp
xor
xchg
scas
les
inc
inc
jg
add
je
xchg
mov
icebp
repnz
inc
ret
mov
sub
jb
mov
cmp
sub
push
daa
imul
pop
fisubs
stos
add
add
pop
sbb
fwait
xor
xor
subb
insl
nop
jae
xchg
mov
aas
sbb
imul
mov
imul
lret
rcr
xor
es
inc
movsb
sbb
idivb
dec
movsb
push
shlb
adc
xchg
in
add
cli
xor
sub
test
cs
adc
add
add
xchg
std
inc
jle
inc
mov
xchg
aas
out
and
mov
add
leave
xchg
dec
fdiv
adc
jle
pop
sbb
fsubr
mov
cmpb
xchg
or
loopne
mov
fstps
outsl
std
ror
pop
test
jl
cmpsb
adc
or
mov
gs
movsl
out
js
cmp
shlb
jg
xlat
jae
jg
into
loop
aaa
jo
aad
cmp
push
and
and
push
or
lcall
or
and
shrl
adc
fists
mov
filds
cmp
sahf
cltd
test
ret
jne
fadds
cwtl
lea
mov
mov
mov
insl
aad
mov
mov
mov
jle
adc
ds
jmp
mov
bound
xlat
out
dec
push
stos
jnp
pop
filds
adc
jmp
xchg
or
scas
dec
xchg
addb
jg
cmc
repnz
iret
dec
outsb
jl
movsb
inc
cmp
icebp
or
jl
mov
xchg
or
dec
lea
xor
xchg
pusha
xchg
jge
fwait
ret
jno
out
mov
out
cld
cltd
xor
ret
mov
clc
xor
lods
mov
fsincos
movsl
adc
pop
fnstsw
test
int
inc
xchg
push
push
mov
imul
inc
insl
dec
or
add
testl
fnstenv
pop
mov
xchg
pop
and
mov
xchg
or
dec
aaa
lods
popa
cmp
mov
pop
and
xor
adc
xor
xrelease
ret
cld
lods
cwtl
dec
outsl
sub
sbb
and
jle
sub
sbb
sbb
mov
jns
jne
inc
xchg
mov
ja
and
mov
xor
aaa
jmp
es
pop
les
icebp
je
ljmp
add
out
mov
sbb
pop
aad
stos
xor
lcall
push
iret
inc
aaa
jo
subb
test
cmpsl
jg
jle
lods
jp
orl
mov
or
in
test
push
insb
xchg
adc
ljmp
mov
lret
jns
push
dec
cwtl
mov
lock
adc
mov
and
in
mov
pushf
sub
or
rcr
xchg
daa
dec
outsb
push
lods
inc
daa
pop
inc
or
push
dec
cmp
shlb
notb
add
test
rep
jae
jle
std
jl
push
mov
pusha
cmp
dec
icebp
add
inc
push
pop
enter
push
lds
dec
mov
adc
jmp
add
jno
jnp
les
mov
pop
cltd
xor
push
das
mov
and
arpl
mov
jns
xorb
cmpsb
xchg
ret
fidivrl
loop
ljmp
push
movsb
pop
lods
add
and
sbb
int
sbb
push
inc
stos
lock
lds
stc
jae
dec
or
dec
loopne
mov
xchg
xor
jbe
mov
je
int
out
movsb
loopne
sti
lds
mov
lahf
out
ret
int
add
pop
into
cmc
negb
leave
lods
out
jne
inc
xor
xchg
test
dec
mov
dec
pushf
mov
daa
test
push
addr16
mov
arpl
mov
add
int3
arpl
xor
aas
iret
jl
aam
sub
pop
test
movsl
scas
sub
dec
out
aaa
stos
mov
lds
ret
push
loopne
jp
sub
ss
push
loopne
sbb
mov
jg
cwtl
dec
add
jns
push
xchg
pop
inc
pushf
lea
cmp
ljmp
adc
rcl
sti
scas
jno
pop
insl
sub
sub
sbb
cmp
xchg
aas
fs
stc
cwtl
adc
movsb
scas
sbb
pop
insb
das
push
lahf
mov
movsl
xchg
pop
popa
repnz
cmp
add
sbb
jb
fabs
cld
cmp
jno
adc
hlt
xchg
jge
push
adc
xor
and
loop
lock
popf
fcmovbe
sbbl
fstps
pop
pop
jno
sub
popf
movb
xchg
push
leave
mov
shll
push
sti
adc
or
mov
jnp
or
je
test
xor
repnz
mov
jmp
or
jns
shr
stc
jmp
fstps
cmp
stos
cmp
sub
testl
mov
xor
pop
or
daa
pop
fwait
mov
aad
pop
lcall
adc
sub
filds
bnd
add
fwait
lret
shlb
in
ds
ss
jmp
repnz
sbb
jns
cmpsb
lods
pop
sub
test
outsb
sbb
pop
sub
addr16
sub
pop
jmp
fcmovb
jb
and
scas
add
loope
imul
or
dec
inc
jp
inc
xor
dec
sbb
add
in
xchg
cld
pushf
cli
aad
xchg
mov
and
or
dec
and
arpl
pop
adc
jne
push
sub
sarb
cli
or
gs
push
xchg
dec
nop
jmp
enter
jbe
scas
inc
adcl
pop
lods
enter
lds
inc
sub
mov
icebp
mov
cld
ss
cmp
dec
push
fldcw
cltd
xchg
mov
ja
cmpsb
test
loopne
adc
test
rorl
push
lret
cmp
jle
dec
out
cld
mov
sub
je
cmpsb
fcmovnu
iret
mov
jmp
cltd
push
es
push
xchg
pop
jae
cmc
xor
jl
into
icebp
in
add
or
shl
lods
jl
in
bound
cmp
adc
pop
insl
xorb
add
add
inc
mov
cmpsl
mov
stc
xor
cmpsb
adc
xor
jnp
pop
mov
scas
mov
mov
test
shl
and
adc
jne
or
xlat
icebp
sahf
push
pop
pop
mov
xchg
arpl
sbb
cltd
add
xchg
in
icebp
fnstcw
sarb
divl
mov
or
js
jno
test
into
mov
cli
jp
addr16
adc
push
lods
jae
xor
push
decl
mov
mov
cmp
sbb
flds
cli
xchg
out
sub
sbb
push
insb
repz
adc
test
subl
daa
lret
push
sbb
shlb
lahf
jnp
repnz
xchg
sub
jb
ret
seta
fmuls
sbb
mov
inc
jle
add
jle
popf
or
subb
cmp
add
sahf
mov
rcll
ss
xor
mov
add
mov
shrl
push
pop
dec
and
sub
lea
outsb
adc
mov
sub
cwtl
mov
adc
inc
or
xchg
das
fsub
xchg
aam
sub
mov
dec
notl
and
notl
cmc
fcmovu
xchg
add
test
addr16
dec
scas
add
inc
test
lret
pop
push
mov
mov
jecxz
adc
xchg
out
bound
jns
into
xchg
das
ret
xor
andl
cmc
adc
test
inc
xor
sub
outsl
pop
fcomps
popf
mov
pop
je
xorl
cltd
addr16
dec
cmp
xor
js
jle,pn
sbb
imul
fldl
cmp
jne
sub
inc
in
pop
jmp
gs
cmp
ja
hlt
jle
push
xor
int3
mov
mov
push
push
aas
ror
stos
pop
mov
ja
outsl
mov
dec
mov
push
pop
xchg
outsb
push
inc
lock
sub
mov
arpl
xlat
lret
pop
inc
hlt
inc
stos
xorl
movsb
or
inc
push
mov
dec
pusha
adc
rep
xlat
ret
jne
les
ja
dec
adc
jns
mov
add
imul
sbb
add
fisttps
pop
mov
lock
xor
mov
xor
mov
xor
jl
fcmovne
xor
inc
aas
and
test
push
js
and
imul
dec
jecxz
enter
dec
fs
imul
xchg
mov
or
cmp
repnz
push
mov
xor
pop
cmp
decl
xor
jecxz
test
xor
pop
mov
cmp
test
mov
pop
pop
inc
mov
push
js
mov
in
dec
xchg
js
sbb
ret
add
jno
inc
notl
addl
add
sub
das
and
divl
test
in
cmpsb
sbb
stc
sbb
adc
ss
testb
lret
das
popa
push
jp
lret
adc
imul
int3
mov
xor
add
mov
sahf
hlt
mov
rorb
pop
inc
test
jnp
jge
jg
aas
jmp
mov
xchg
outsl
arpl
push
stos
std
and
xchg
push
jle
mov
add
outsb
xor
lods
ret
cmp
jbe
fisttpll
pop
out
jbe
ret
shlb
pushf
and
ja
ret
pop
lods
ja
orl
xchg
insb
insl
lods
push
pop
pop
setp
ja
je
jnp
mov
testb
or
imul
xor
fisttpl
cwtl
and
out
jo
mov
dec
dec
in
das
sbb
sbb
mov
lahf
int3
push
fdivrs
add
lea
mov
scas
mov
addr16
popf
imul
adc
es
mov
movsl
adc
popf
aam
js
mov
xor
data16
jbe
ss
sbb
sub
push
adc
je
popf
jmp
test
mov
repnz
mov
nop
lahf
inc
popa
iret
test
iret
jb
push
sbb
pop
enter
movsl
movsb
rclb
rolb
mov
in
js,pn
inc
cmpsb
sub
nop
mov
mov
add
jmp
cmp
sti
decl
push
sub
mov
jns
bound
lds
test
jnp
adc
add
cld
sub
jmp
push
into
inc
push
fldt
enter
lahf
hlt
rcll
push
push
inc
ljmp
sbb
loope
shll
sub
test
jae
pop
add
dec
jg
adc
test
xchg
stos
jecxz
int3
lods
scas
clc
pop
test
call
sahf
pop
pop
inc
mov
sbb
sbb
sub
dec
mov
jnp
cmc
rorl
xor
mov
mov
dec
hlt
push
lret
mov
mov
inc
jl
insb
insb
pop
mov
nop
in
das
jne
scas
fs
sub
push
push
inc
pushf
mov
inc
ja
aaa
xchg
ficoms
rcrb
add
or
add
cmp
cmp
mov
push
jmp
insb
pusha
inc
dec
test
jnp
xchg
jbe
shrb
xlat
je
scas
xor
sahf
adc
sbb
mov
shll
mov
xchg
cld
adc
std
ss
mov
repz
out
or
cmp
fildl
sub
push
jo
in
cmp
sub
pop
mul
popl
incb
add
cmc
xchg
sbb
rorb
mov
aad
lcall
je
clc
orl
nop
xor
sar
iret
adc
out
int3
in
jns
xchg
aam
mov
fwait
sarl
shlb
out
adc
call
repnz
out
cmp
sbb
pusha
out
mov
jns
xchg
pop
adc
or
loopne
pop
fidivrl
xchg
push
bound
dec
push
add
fdivr
xor
pop
xor
sbb
and
stos
lahf
sub
stos
addr16
cmp
pop
cmc
in
pop
int3
inc
icebp
lahf
cmp
imul
pop
or
repz
add
je
lds
jno
test
mov
mov
inc
lea
jne
add
daa
shrb
out
xor
outsl
pop
imul
rcl
xchg
and
int3
out
mov
mov
stos
cmp
testb
jge
sub
mov
lahf
test
jle
pop
push
and
clc
movsl
pop
xchg
pushf
mov
test
cmc
fsubrs
dec
mov
jo
lret
out
adc
aad
jmp
jmp
mov
aad
push
dec
xor
xchg
arpl
push
sub
inc
mov
dec
jb
mov
cmpsl
xorb
lcall
divb
dec
cmc
or
or
mov
fmull
arpl
add
out
ljmp
shll
stos
aam
lods
mov
sub
sub
test
pop
or
mov
cmp
cmp
std
push
imul
es
inc
gs
outsb
stos
jbe
push
pop
mov
test
stos
sub
aas
lods
or
pop
fadds
or
jne
mov
xchg
jo
xchg
mov
out
pop
mov
sbb
aad
bound
mov
sub
jmp
pop
dec
pop
cmp
mov
ret
cwtl
push
iret
ret
out
nop
imul
push
cmp
lods
lock
test
andb
sbb
cmp
jp
loope
jp
out
out
insl
in
xchg
insb
lcall
lods
pusha
pop
test
dec
cmpsl
ljmp
ret
cmp
cmpsb
lock
loop
push
pop
jns
lea
sub
pop
jle
imul
xchg
movsb
outsb
add
imulb
mov
push
stos
lods
xor
jb
cmp
sub
jb
xor
cmpsl
jb
ficoml
or
mov
int
movsb
mov
pop
jne
inc
loope
decl
cld
add
mov
cli
arpl
mov
mov
sbb
les
insb
sbb
add
xchg
cltd
and
iret
inc
loope
loopne
inc
push
mov
and
mov
inc
outsb
sahf
sbb
adc
jmp
int
pusha
sbb
push
iret
mov
adc
xchg
adc
lret
mov
clc
iret
loopne
cld
and
mov
cmp
mov
jne
sub
sub
mov
push
dec
xor
cmp
daa
jmp
fs
sbb
xchg
sub
pop
aaa
rcl
jp
and
push
xchg
push
popf
call
into
sbb
sub
jecxz
and
xor
orb
test
sub
sub
jp
push
dec
lods
inc
add
sub
jo
jo
insb
dec
dec
sbbb
fbld
int
inc
sahf
popa
xchg
out
and
jbe
mov
in
sbb
repz
push
vmread
jae
or
adc
repz
clc
dec
std
sub
cmp
scas
addr16
push
test
jo
js
bound
sbbl
sbb
add
jb
sub
push
test
nop
xor
aam
jg
sahf
nop
push
jb
mov
int3
cmp
and
shll
outsb
loop
das
xchg
loopne
fdivs
mov
lds
pop
push
test
mov
sbb
sbb
and
repz
mov
add
cmp
mov
jl
xor
or
mov
outsl
call
pop
xchg
cmp
dec
jp
sahf
cmpsb
xchg
cmp
lret
repnz
mov
test
xchg
rorb
mov
in
push
pop
mov
add
push
int
jae
mov
mov
insl
lds
mov
leave
xor
push
pop
jb
mov
outsl
cmp
rol
add
outsb
dec
cmp
push
mov
jnp
or
int
and
cmpsl
jmp
push
pop
jg
jecxz
lret
lcall
inc
adc
mov
repz
test
mov
lcall
lds
sbb
fildl
xchg
jno,pn
sub
dec
mov
mov
or
lods
fsub
push
imul
jg
push
sub
xchg
sbb
adc
mov
ds
dec
stc
xchg
adc
add
or
inc
imul
mov
jo
cmp
shl
xchg
push
push
push
imul
sti
inc
pop
xor
push
hlt
outsb
or
sahf
repnz
out
jns
push
int3
stc
fisubrl
push
mov
popa
fcmovnu
pop
push
cld
ja
popa
lcall
dec
sbb
xchg
xchg
adc
rolb
sub
mov
xchg
rcl
jno
repz
movq
std
mov
imul
dec
xchg
jne
das
int3
out
push
inc
sahf
ss
inc
add
mov
pop
xchg
and
repnz
mov
scas
adc
out
push
add
push
aad
loope
leave
dec
icebp
mov
lock
ja
scas
dec
enter
lea
pop
cmp
mov
and
lock
shlb
xor
imul
mov
out
leavew
push
popf
jo
mov
xchg
sahf
aas
sub
push
push
sbb
out
outsl
pusha
adc
cli
sbb
call
fisttps
fs
inc
cwtl
jmp
movsb
imul
cmp
out
dec
and
lahf
fs
jae
je
cwtl
enter
fdivrp
cmp
test
subl
jle
add
or
jl
pop
aas
mov
pushf
rcr
mov
and
pushf
stos
xchg
xchg
inc
ds
xorl
push
faddp
fdivrl
in
push
add
xor
and
pop
lds
pop
adc
inc
movsb
int3
leave
sub
cs
lods
mov
sbb
xchg
fnstenv
insl
xor
pushf
push
fisttpl
pop
mov
outsl
xor
dec
jb
les
mov
lods
ret
xor
aaa
pop
sub
int3
out
imul
sub
arpl
lock
dec
add
sub
push
sub
sub
je
jmp
ficoms
mov
dec
mov
mov
ficoms
pop
xlat
push
dec
inc
pop
inc
mov
adc
mov
es
jnp
cwtl
inc
sub
sbb
adc
cs
pop
or
adc
jp
add
fs
sub
dec
xor
xchg
imul
inc
test
lcall
addr16
hlt
dec
outsb
cmpsb
mov
lea
or
fidivrs
sbb
lods
dec
cmpsl
stos
pusha
sti
jge
lock
push
push
in
fimull
cld
cmp
sub
or
stos
mov
dec
xchg
ljmp
xor
cmp
jo
stos
fbstp
call
pop
cmpsl
sbb
sub
fldl
mov
inc
jb
sbb
jno
fs
xchg
cmc
push
movb
mov
dec
shl
push
mov
scas
adc
jg
pop
shll
xchg
imul
push
ret
pop
dec
fistpll
data16
xchg
loopne
cs
inc
hlt
jo,pn
inc
adc
pop
jae
mov
cli
mov
cmp
les
ss
add
sbb
out
sub
pop
sub
inc
xchg
and
inc
scas
cmpsl
fimuls
call
dec
in
add
dec
call
xchg
xchg
cmpsb
popf
cmp
dec
shl
cmc
cli
dec
xor
fcmovbe
jle
xchg
xlat
filds
test
mov
not
outsb
inc
aam
adc
inc
add
sub
cmp
insb
outsb
mov
mov
in
jne
rcrb
pop
adc
mov
call
sbb
sbb
jmp
out
adc
adc
pop
xlat
pop
sbb
add
mov
dec
rcrb
sti
xor
cmpb
add
test
ret
push
lock
flds
xor
les
mov
push
out
cli
mov
push
sub
scas
sbb
dec
pop
fsubrs
negb
test
add
sbb
sbb
pop
test
cld
pop
dec
mov
mov
test
lcall
iret
cmpsl
dec
inc
dec
sub
jg
dec
adc
push
sbb
leave
fwait
push
lods
sbb
mov
popf
aad
aad
fcomps
mov
and
cltd
bound
mov
adc
cmp
rclb
sbb
mov
and
pusha
xchg
sub
add
cmpsl
mov
cmp
rorw
jnp
adcl
push
pop
lcall
daa
jmp
stos
nop
enter
xchg
mov
out
mov
sub
dec
les
sbb
push
push
fwait
xchg
cmp
fwait
mov
or
pop
int3
cmc
inc
addl
ja
jle
sub
pusha
xchg
insl
test
mov
lea
ds
and
adc
fidivs
xchg
xchg
xchg
push
loopne
ds
test
push
cld
mov
dec
lods
adc
call
fidivrs
mov
inc
xchg
and
cmp
and
cmpb
cmp
sub
jns
xor
scas
aas
mov
in
sub
lds
push
shrl
and
popf
add
lahf
xor
inc
daa
scas
mov
popf
neg
xchg
bswap
add
jno
nop
ret
pushf
imul
xchg
adc
rcrb
mov
stc
inc
inc
stos
ficoms
pop
pop
mov
cmp
stos
xor
and
push
std
add
adcb
jne
fildl
call
pop
clc
pop
test
add
test
ret
push
and
xchg
jle
jmp
xchg
xchg
xchg
pop
lcall
add
outsl
mov
in
addr16
and
jmp
or
out
xchg
jae
xor
out
mov
rolb
ret
mov
sub
push
xlat
and
jp
jnp
and
and
gs
bound
xor
out
lock
mov
push
dec
dec
mov
add
xor
dec
inc
mov
pop
sbb
mov
enter
mov
stc
xor
pop
cmp
push
in
fnstsw
jnp
dec
jmp
loopne
ljmp
pop
ss
mov
jo
bound
shll
outsl
scas
xchg
sahf
pushf
cs
es
andl
sub
lret
insl
cld
sbbl
movsl
push
and
sub
rcll
and
add
xchg
adc
loopne
stos
mov
mov
iret
push
ljmp
mov
jge
shl
stc
pop
cli
insl
in
shrl
jbe
mov
xor
fwait
jecxz
es
test
insb
pop
mov
shrl
stos
cmp
mov
fcmovnb
dec
push
cmp
sti
mov
ds
out
adc
hlt
movsl
pop
std
mov
mov
xchg
mov
dec
inc
jp
jae
and
and
stc
inc
mov
ljmp
jl
dec
sub
sbb
add
stc
add
cmc
jnp
adc
cmp
fwait
fwait
sbbb
mov
xchg
pop
lcall
or
stc
jae
mov
popa
adc
leave
cld
add
repnz
mov
pop
scas
mov
push
pop
xchg
popa
sub
cli
popa
dec
pop
pop
out
movsl
or
cmpsl
sbb
mov
mov
mov
in
dec
xchg
jae
inc
fcomps
call
idivb
mov
in
sub
mov
cmpl
jg
fnstcw
int3
xor
xchg
data16
addr16
insb
adc
jmp
or
xchg
fwait
inc
xlat
xchg
xor
les
or
hlt
bound
inc
fstps
pop
dec
sbb
jp
lock
add
adc
insl
jecxz
enter
cmp
aas
push
sahf
cmpsl
ljmp
sub
xchg
loop
aas
dec
xor
push
xchg
es
jl
dec
sub
addr16
xchg
cmp
call
mov
jne
adcb
push
sti
cwtl
scas
aas
adc
icebp
clc
add
lcall
icebp
pop
das
pop
jbe
and
dec
mov
leave
mov
inc
loopne
pop
jg
mov
add
pop
mov
pop
xor
jno
mov
adc
fisttps
idiv
mov
xchg
lds
add
jae
pop
rorb
lods
in
hlt
data16
repnz
cmp
and
jmp
mov
mov
xchg
ja
add
mov
fidivs
sbb
sub
adc
adc
sti
lret
shll
sub
rcl
push
jno
and
jnp
pop
scas
add
jmp
fwait
pop
imul
andl
sub
lods
int3
loope
cmp
mov
jmp
pop
sub
test
test
ds
sbb
insl
rclb
cmp
and
jo
imul
int3
add
test
sbb
push
inc
out
rcrl
mov
pop
rolb
inc
int
xchg
lds
xlat
das
xor
adc
xchg
cwtl
lahf
push
fldcw
xchg
sub
cs
cmp
ss
sbb
mov
jnp
adc
mov
gs
mov
mov
cmp
std
cmp
stc
iret
call
sub
rcll
pop
imul
mov
cmp
dec
es
idivb
popl
cmp
cmc
data16
mov
pop
adc
xlat
jb
rcrb
jae
jns
cli
aam
fmull
push
xor
packuswb
jge
fstpt
jle
lea
pop
rclb
les
jle
push
or
inc
imul
je
cmp
dec
mov
cmp
xchg
scas
cld
sbb
xor
cmp
mov
add
and
mov
sub
pop
mov
push
xor
jl
sbb
jge
pop
mov
int3
int
ror
in
or
pop
cmpsl
dec
adc
push
in
cmc
mov
mov
fstl
xchg
je
and
icebp
cmp
mov
mov
mov
stos
adc
out
sbb
into
jp
jne
pop
das
outsl
iret
jl
cmp
mov
inc
ror
faddl
fwait
pop
and
repnz
add
push
push
js
or
adc
mov
and
mov
or
sub
lock
dec
jecxz
inc
es
in
jnp
xlat
xchg
loop
into
xchg
fdiv
insb
push
xchg
lea
imul
popa
xor
xchg
jecxz
mov
xor
unpckhps
xor
repnz
jmp
insb
xchg
cmpsb
dec
sbb
sbb
push
adc
mov
jo
addl
shrl
ja
pusha
add
jbe
inc
cmp
lea
mov
sarl
mov
pop
inc
in
mov
or
cmp
ret
movsl
fisttpl
fmul
js,pn
lahf
insb
out
push
xchg
mul
jo
jbe
push
icebp
push
pushf
xchg
lock
jp
xchg
cmp
sahf
sub
into
jge
adc
xchg
fildl
out
dec
jae
loop
add
mov
fcompl
test
je
ja
fidivrs
xchg
mov
or
repz
push
mov
filds
and
pop
rclb
int3
adc
addr16
sbb
add
out
mov
out
and
andb
test
and
lock
fldenv
fwait
adc
pop
inc
je
int
mov
jb
mov
data16
stc
fs
addr16
sahf
push
insl
cs
xor
ficoml
in
stc
popa
pusha
mov
jmp
xchg
ljmp
adc
loop
mov
cltd
mov
gs
adc
jecxz
dec
enter
bound
popa
cmpsl
popa
dec
jg
mov
sub
pop
enter
ss
mov
push
pop
xor
into
fiaddl
mov
leave
hlt
mov
push
mov
divb
daa
arpl
mov
iretw
ret
dec
jo
lods
jg
pop
les
add
inc
inc
mov
fildl
imul
ja
sbb
lret
je
add
push
pop
sbb
jns
bound
jbe
out
loopne
mov
mov
call
dec
or
cmp
sub
out
leave
icebp
ja
movsl
jl
mov
push
inc
bnd
es
test
insl
and
leave
xchg
and
iret
cli
dec
mov
mov
push
xchg
mov
mov
and
inc
in
mov
push
xchg
pop
or
nop
jae
fnsave
fwait
xor
jle
sub
aas
mov
jb
jno
pop
inc
out
push
jmp
shrl
mov
mov
rorb
or
cmp
xor
xor
mov
cld
mov
mov
mov
xchg
nop
sub
add
cmp
pop
mov
sbb
ss
jnp
pushf
or
scas
mov
sub
cmp
xor
movsb
mov
jle
xor
cltd
mov
dec
stos
pop
mov
cmc
outsb
in
dec
icebp
cmp
addb
fisubl
jg
mov
sti
adc
cli
negb
int
aaa
push
push
push
fistl
rcrl
in
leave
call
lahf
and
add
dec
das
std
push
push
sahf
sti
xchg
pop
jae
out
adc
testl
add
les
repz
lods
mov
lret
into
aam
push
sub
inc
mull
cwtl
adc
xchg
ret
pop
mov
mov
aas
loopne
xchg
iret
loope
push
lea
dec
ret
in
out
sub
xlat
inc
sbb
in
movsl
inc
cli
jmp
push
out
xchg
xchg
sub
loop
push
xchg
ret
fnsave
pop
gs
lret
jp
cmpsl
repnz
int
push
in
mov
dec
mov
in
jbe
in
bound
in
loopne
add
orl
pusha
pop
dec
inc
nop
scas
dec
insb
das
cli
sub
ret
insb
stos
gs
push
dec
sbb
adc
jne
iret
mov
mov
or
jmp
inc
test
jo
sbb
cmpsl
pop
psubq
push
incb
pop
adc
negl
mov
filds
pop
push
add
and
xchg
in
and
ljmp
gs
add
xchg
cmp
insb
adc
mov
cli
test
dec
mov
sti
add
leave
mov
pop
mov
push
lea
sub
cld
jns
int
mov
je
imul
adc
pop
add
int
sbb
adc
icebp
push
pusha
cli
xchg
addr16
outsb
sub
stc
and
inc
push
dec
je
outsb
dec
add
pop
dec
add
loope,pt
pop
sbb
and
mov
jae
stos
sbb
mov
mov
xchg
bound
cli
ret
and
ret
and
and
lret
in
jge
lcall
xchg
add
cwtl
pop
pop
mov
jbe
in
or
sbb
pop
pop
jno
or
mov
sub
cmp
and
lcall
fcmovb
stc
icebp
not
cmpsl
inc
jge
cmpsb
mov
xor
jle
cmp
sbb
out
add
add
mov
pop
sub
xchg
ror
jl
jno
bound
imul
imul
sbb
inc
add
lea
imull
idiv
jp
adc
mov
ss
lret
mov
fwait
push
or
aad
jg
push
aaa
or
into
cwtl
jmp
mov
daa
pop
sub
inc
lcall
cmp
aaa
xchg
lds
movsl
push
enter
xchg
or
adc
pop
je
fmull
imul
lret
jb
stc
aad
dec
xchg
int
mov
mov
add
out
sub
push
loope
inc
dec
ror
push
dec
cmp
testl
sbbb
xchg
xchg
mov
jns
rolb
sub
mov
aam
fstp
mov
mov
movsb
sbb
xor
stc
ret
enter
mov
int3
dec
stos
daa
std
into
dec
bound
test
push
mov
call
xchg
call
js
push
lods
jle
imul
into
sbb
mov
mov
loop
pop
aad
xchg
popa
scas
iret
jl
mov
negb
inc
pop
sbb
push
pop
loopne
mov
sahf
mov
mov
movsb
jle
mov
and
inc
xchg
cmc
and
and
aaa
sti
insl
cmp
test
sub
or
popf
dec
pop
sub
inc
and
ja
jo
pop
mov
lea
dec
jb
loop
test
jmp
cmp
pusha
rorb
xchg
sub
jae
adc
mov
daa
mov
incl
nop
push
or
xchg
outsl
nop
adc
jg
mov
jp
push
push
psrlw
or
lahf
xor
sub
hlt
in
popa
incl
ret
inc
cltd
shl
movsl
shl
dec
fwait
cli
shlb
jg
and
sbb
fldz
out
add
pop
adc
adc
hlt
push
push
jne
push
adc
pop
movsl
mov
push
sbb
and
ljmp
mov
dec
push
inc
data16
mov
mov
out
addr16
jo
lcallw
cs
mov
sbb
jle
xchg
xchg
push
pushf
cwtl
int
xchg
stos
bound
iret
jmp
mov
mov
sti
add
mov
adc
loopne
jge
inc
dec
xor
jmp
sub
testb
orb
mov
ds
lret
out
insl
pushf
test
in
test
or
jae
adc
clc
cmp
test
call
cmp
int
inc
xor
lods
jge
insl
lret
int
mov
and
push
gs
out
push
inc
outsb
call
mov
jl
jns
lret
dec
mov
xor
stc
adc
xchg
dec
xlat
repnz
pop
jl
adc
mov
xchg
sbb
outsl
sub
inc
leave
rcl
addr16
mov
std
lahf
xor
inc
scas
adc
pop
xchg
pop
xchg
fwait
into
or
loop
or
sbb
jle
sbb
cmp
jns
arpl
negb
in
pushf
lahf
mov
mov
lods
lret
imul
jb
iret
addr16
aad
mov
mov
cmpsb
fdivs
add
xchg
jns
pop
out
repnz
ds
jne
ret
cwtl
cmp
mov
jo
roll
sbb
cld
sbb
je
or
fisubs
data16
lahf
cmp
dec
pop
push
jmp
rorb
add
or
push
add
sbb
sub
mov
or
out
pop
lahf
cld
repnz
rclb
ljmp
push
jae
adc
and
lcall
out
lcall
inc
mov
fdivrl
fnstsw
scas
push
mov
xorl
cmp
push
aad
mov
and
mov
test
repz
popf
hlt
int3
fdivl
ss
nop
mov
sti
stc
add
rcrl
sbb
jge
mov
lahf
push
push
aad
mov
stos
pushf
movsl
xchg
xor
fidivl
aas
add
mov
mov
adcl
dec
jl
jbe
cmpsl
pop
daa
dec
lret
cmp
add
mov
add
add
out
xchg
mov
rcrl
jle,pt
add
push
ss
subl
xchg
and
xchg
push
jmp
mov
nop
push
or
xchg
mov
pop
mov
je
outsb
cmp
je
ss
mov
sahf
sub
out
xor
adc
cmp
repz
lret
repz
daa
push
popa
das
inc
popf
xchg
adc
push
enter
mov
mov
ss
jo
mov
cmp
movsl
dec
out
sbb
mov
pop
sub
fstps
add
icebp
outsl
push
lea
loopne
xchg
xor
pop
bound
popf
stc
rorl
adc
push
adc
mov
mov
loope
and
xor
sbb
inc
scas
add
js
jp
leave
pop
and
xor
mov
mov
outsl
fstl
jb
loope
movsb
fisubl
icebp
jns
and
leave
lea
aaa
insb
fidivl
add
or
mov
mov
jbe
ret
pop
sbb
outsl
mov
lods
pop
cli
js
ret
cmp
loope
xchg
or
or
lods
out
jns
popf
addr16
jne
das
mov
xor
addr16
inc
fstpt
cltd
xchg
repz
sbb
in
adc
xor
add
sub
je
lods
dec
push
outsl
jmp
sub
faddl
pop
jmp
mov
fsubp
in
pop
pop
xor
in
insl
push
pop
xchg
push
xor
rcrb
lods
cmp
sub
stos
mov
and
mov
icebp
flds
xlat
mov
and
cmp
fildl
sbb
int
arpl
ja
jnp
jne
test
mov
push
es
cld
mov
sub
adc
pmaxub
je
mov
pop
inc
push
fsubr
jg
out
dec
pop
loopne
pop
mov
jp
cltd
sub
test
xchg
lea
xor
pop
call
pop
xor
cmp
mov
xrelease
jl
fwait
cwtl
fbstp
aad
mov
inc
sbb
movsb
add
lahf
add
nop
xchg
xor
sbb
mov
enter
push
cmp
jecxz
ljmp
jg
push
mov
cs
ss
xchg
inc
test
cli
and
shrl
fnstcw
or
daa
jecxz
jmp
xlat
push
cmp
out
adc
cmc
or
pop
cwtl
sub
inc
dec
fisubl
push
xchg
mov
loope
loopne
fst
sub
enter
jp
lods
movsb
aam
insb
flds
rolb
push
or
jmp
cwtl
iret
inc
rclb
fisubrl
jg
lea
cmp
sub
xchg
push
mov
fbld
sbb
jo
cmp
sahf
adc
cmpsl
pop
shr
pushf
cmpsb
ds
loope
scas
jbe
ja
sub
cmp
mov
adcl
in
pop
out
push
andl
sub
fldt
pop
and
xor
xchg
mov
jp
insl
stos
test
stc
adc
fnstsw
lret
push
or
loope
pop
mov
jb
repz
push
testl
and
or
pop
pop
and
pop
es
xor
das
sbb
mov
decb
push
lahf
test
aad
jbe
push
sbb
out
lods
xor
in
loope
fsubrs
jb
mov
cmp
ret
cmp
in
cmc
bound
mov
lds
adc
sub
cmp
dec
pop
imul
stc
out
jb
jg
addl
and
lahf
icebp
cltd
sub
sub
sbb
in
ljmp
dec
hlt
addb
mov
lods
xor
movsl
add
jmp
rcrl
and
in
push
inc
jmp
lods
movsb
insb
pop
dec
jbe
sub
pop
sbb
int3
pop
ficomps
sbb
jno
lret
fsubrs
fwait
mov
jle
out
out
mov
push
dec
aad
jmp
dec
sub
rclb
jae
jecxz
mov
cmc
cld
jns
into
mov
fwait
sarb
add
mov
xchg
enter
dec
cli
gs
add
ret
add
jbe
data16
lret
stos
inc
adc
push
shlb
sub
es
or
test
cli
jmp
dec
enter
stos
fnsave
loopne
xchg
pop
xor
sahf
idiv
or
in
sbb
icebp
jo
sbb
sub
dec
sbb
mov
pop
dec
mov
push
sarb
scas
shll
lahf
dec
lock
push
movsb
inc
sbb
mov
mov
sbb
sahf
sbb
inc
push
xchg
and
or
lret
cld
ror
inc
sti
ret
pop
or
dec
mov
repnz
ds
in
mov
jno
pushf
mov
cli
fwait
xor
cmpsb
orl
and
gs
enter
inc
imul
das
int
icebp
jle
popf
cmp
cmpb
push
mov
rorb
xor
dec
lcall
xchg
dec
jne
xchg
jbe
data16
out
and
scas
clc
fsts
lods
and
or
or
fst
sbb
xor
and
xchg
mov
push
cli
xor
fsubrl
test
sbb
addr16
in
test
scas
xchg
cmc
mov
jecxz
add
xchg
mov
jge
mov
fisubrl
adc
push
cmp
push
pop
int
dec
outsl
ljmp
mov
loope
add
jp
insb
jmp
shl
pusha
cmc
jl
fsubrs
repnz
lahf
call
adc
fs
pop
pop
sbb
in
adc
lds
mov
in
mov
scas
sub
pop
adc
aam
pop
xor
fldl
icebp
fcmovne
xchg
rol
inc
mov
cld
add
pop
mov
jae
pop
pop
lcall
sahf
sub
repz
or
lret
inc
dec
dec
aam
and
push
mov
dec
jne
push
in
or
mov
lds
flds
inc
outsl
add
push
push
or
imul
pop
adc
jmp
fcmove
push
xor
xchg
std
dec
dec
xor
push
lcall
por
dec
dec
sahf
mov
lea
ret
test
nop
jle
out
int
push
push
pop
lods
jae
ss
daa
push
dec
shll
jne
popa
inc
ffree
inc
mov
cmc
mov
jg
out
pop
inc
inc
or
cmp
insb
in
es
daa
xchg
jg
addb
jns
bnd
sbb
jl
stc
xor
inc
out
and
pop
dec
and
adc
aad
iret
mov
mov
mov
inc
enter
cmp
fnstsw
or
popl
cmp
rcl
add
pop
pop
mov
pop
in
shl
add
push
xor
leave
fcom
cmpsb
push
or
ret
xor
adc
jns
jg
push
xor
aam
jbe
popf
sbb
dec
fadd
and
dec
xor
pop
pop
sahf
mov
loope
adc
pushf
cmp
pop
mov
mov
int
pop
adcb
mov
mov
data16
popf
xor
jecxz
xor
inc
sbb
lods
mov
cmp
sbb
lahf
rclb
in
int3
mov
jl
cmp
jb
fmuls
xor
rcll
outsb
test
int
sub
mov
rcl
fidivl
mov
mov
lea
fcompl
imul
lret
or
rcrl
jecxz
bound
dec
rcrl
sub
bound
inc
pop
insl
or
adc
mov
or
in
adc
adc
mov
hlt
and
and
sbb
in
scas
pop
in
bound
inc
sbb
inc
jl
inc
mov
outsl
jecxz
add
or
adc
aad
cmc
icebp
mov
pusha
mov
xchg
jmp
jo
lods
nop
adc
aas
inc
add
add
xchg
in
push
push
loop
dec
sbb
icebp
xor
sbbb
and
icebp
clc
inc
cmp
out
mov
repnz
fisubl
sub
ds
xlat
sub
es
aad
movsb
fnstcw
test
jns,pn
les
addr16
jno
sti
in
adc
mov
mov
outsl
out
scas
pop
jnp
dec
or
xor
fs
dec
adc
push
sbb
dec
ss
fbld
mov
pusha
push
sub
roll
jmp
mov
or
add
ret
icebp
repz
outsl
pop
sub
data16
cmc
sbb
sub
mov
cmc
in
in
sub
mov
jnp
mov
pop
jb
add
or
fnstenv
xor
adc
cmpsb
jae
jl
sti
int
xchg
out
pushl
iret
push
dec
or
in
shrb
jl
inc
mov
arpl
jne
in
pusha
lret
push
inc
mov
push
and
in
jo
xchg
mov
mov
fdivr
push
ss
shlb
outsb
xchg
cmp
dec
or
test
xchg
inc
cwtl
cmp
jl,pt
cmc
mov
push
mov
or
xchg
hlt
xor
xlat
mov
and
dec
jb
xor
int3
cld
pusha
testb
dec
aam
and
cwtl
and
sbb
sub
test
inc
inc
lret
sbb
inc
xlat
xor
lret
subl
in
adc
out
cld
push
stc
dec
push
xchg
movsb
sahf
xor
loop
int3
jae
arpl
lret
les
jl
jae
in
popa
push
mov
sub
or
xchg
add
loope
pushf
and
shll
rcrl
xchg
testl
not
bound
inc
sbb
sbb
jb
mov
shlb
fsub
addr16
inc
adc
loope
add
ds
push
push
popa
adc
xor
test
jg
push
cltd
jge
repz
sub
sbb
mov
test
leave
jnp
mov
xor
adc
sub
out
mov
cld
lock
and
and
push
fdivr
add
pop
scas
imul
and
cmp
adc
pop
sbb
int3
test
out
iret
or
enter
fidivl
push
or
jl
and
lods
adc
fildll
or
xor
mov
cld
jge
inc
rclb
clc
ljmp
sbbb
addr16
sub
enter
xchg
inc
jbe
pop
push
addb
xchg
add
jno
jae
divl
xor
lcall
push
lret
jnp
aas
loopne
rclb
mov
les
xlat
adc
mov
and
dec
adc
push
or
int
aam
js
sbb
jbe
dec
cmpsb
push
sub
lahf
hlt
adc
cli
imul
cld
into
test
stc
cmovnp
fldenv
fwait
mov
incl
cmp
inc
aaa
xor
in
iret
fiaddl
push
mov
mov
ss
and
add
jne
dec
cwtl
add
es
mov
dec
fs
or
js
test
ret
add
ja
push
inc
dec
xor
clc
push
aad
push
add
outsb
push
aaa
jecxz
xchg
lcall
cmpsl
imul
cmp
test
lea
sub
push
sahf
out
xor
xchg
ror
and
dec
popf
xor
push
pop
test
cmpsb
je
jnp
pop
sbb
dec
adc
inc
das
jecxz
mov
inc
jo
push
inc
adc
rcl
xchg
aaa
lahf
and
idivl
xchg
pop
rcr
loopne
and
movsb
cmpsl
adc
jns
mov
mov
idivl
dec
mov
nop
pop
lcall
fbld
jae
lret
mov
int
andl
js
movsl
mov
in
mov
and
xchg
xlat
out
mov
lcall
cli
scas
xor
mov
es
cmpsb
fwait
dec
mov
loopw
sti
mov
les
ss
push
in
sahf
ret
scas
pop
push
hlt
xor
sbb
jo
scas
jge
ucomiss
in
mov
scas
loop
dec
xchg
daa
je
push
ds
xchg
popa
rcl
mov
test
sub
rsm
sub
add
in
scas
iret
mov
jb
mov
fs
mov
and
cli
push
jl
pop
or
rolb
push
sbb
mov
enter
rol
sarl
scas
push
jle
jl
call
fldt
lret
pop
adc
sbb
movsl
inc
adc
test
adc
rorb
fcmovbe
dec
inc
fsts
fnstcw
es
mov
push
pop
daa
xchg
sub
imul
dec
mov
arpl
add
mov
leave
inc
lcall
outsl
xor
sub
mov
add
cltd
sub
add
jne
fsubs
ds
dec
jno
adc
mov
jge
mov
cmpsl
cmpsb
pop
lcall
mov
fstpl
xor
sbb
cmc
popa
popa
roll
lock
pop
aaa
xor
xor
mov
pop
cmp
int
jge
sub
mov
test
dec
mov
add
sbb
testl
mov
push
add
sbbl
sar
fadds
lock
pop
in
ja
sub
push
sub
gs
stos
xchg
pushf
dec
jp
fsubrs
mov
std
mov
lret
jmp
and
push
or
mov
mov
leave
loope
les
lcall
testb
fnstenv
push
jae
pop
jo
jne
test
push
into
adc
and
ja
pop
push
inc
push
adc
xchg
jg
js
push
mov
mov
fcmovne
adc
lds
sbb
and
push
inc
arpl
mov
rol
subl
lcall
cmp
repnz
push
cmpb
insl
sbb
inc
jae
lods
dec
push
and
pop
sub
ja
lea
imul
pusha
popa
xchg
sbb
fisttpl
shlb
xchg
mov
je
int
data16
out
or
inc
aas
push
imul
mov
out
dec
shl
pop
xor
out
je
cmp
sti
jp
sub
jo
pop
popf
xchg
inc
sbb
mov
fwait
dec
add
and
push
lods
mov
out
dec
cwtl
cltd
loopne
mov
sbb
fbstp
repz
ds
lahf
test
push
dec
sbb
mov
arpl
xchg
jl
adcb
ss
das
push
jecxz
dec
xchg
add
mov
and
lcall
dec
cmpsl
call
int
or
sub
daa
mov
fs
or
loop
pop
mov
popf
nop
jecxz
es
rcrb
xchg
jb
add
inc
pop
jno
and
push
push
ja
rep
repnz
das
jmp
lret
mov
stos
or
or
in
fdivrs
arpl
xchg
rclb
ss
out
int3
cmp
in
mov
loopne
insl
add
mov
push
or
xor
or
ror
loop
ljmp
inc
mov
dec
add
push
or
xor
xchg
xchg
sub
jge
lock
les
sbb
mov
fists
xor
iret
enter
xchg
or
push
pusha
cmp
add
fisttps
pop
pop
pop
and
add
imulb
mov
sub
pop
fisttpll
int3
shrl
mov
loop
mov
sbb
dec
loopne
inc
pop
jg
push
sub
inc
ror
push
js
cmc
sub
or
mov
fs
adc
dec
xchg
mov
stos
mov
pop
out
repz
adc
push
sbb
mov
ja
mov
nop
mov
dec
daa
push
sti
inc
out
mov
sub
mov
ja
cs
xchg
pop
sbb
sub
push
push
out
shll
in
jmp
es
jmp
inc
lahf
pop
dec
mov
add
inc
sbb
mov
js
ss
push
cmp
notb
and
testb
sysret
cmp
mov
adc
and
or
loopne
jle
sub
out
aad
ret
pop
add
mov
in
cmp
popa
out
adc
jne
and
incl
jne
bound
test
jl
pusha
mov
add
mov
test
test
mov
ss
mov
push
ss
cmpsb
clc
in
inc
or
enter
or
adc
or
mov
into
sbb
jnp
iret
js
packuswb
int3
mov
mov
xchg
lahf
test
movsl
outsb
rcll
fidivl
cmc
std
or
sbb
jne
xor
inc
xor
shlb
xchg
in
jmp
push
cmc
mov
outsl
jl
rolb
icebp
xor
cld
in
mov
mov
lods
inc
into
nop
jno
js
loopne
mov
ret
sub
add
inc
push
ss
xor
sbb
fistps
repnz
je
mov
nop
aas
add
adc
imul
fldln2
sbb
jns
int
push
push
fcompl
adc
xlat
or
ja
or
dec
cmp
inc
repz
sub
mov
gs
add
std
push
ret
xchg
push
sub
adc
or
clc
pop
outsb
iret
fldl
pop
mov
fwait
jecxz
mov
push
subl
cmpsl
faddl
cwtl
js
pop
or
addl
insl
lods
mov
jg
ljmp
iret
cmp
jae
fnstenv
mov
xchg
js
out
cmpsb
popa
leave
push
in
mov
fsub
sub
je
adc
xor
lret
fs
xchg
pop
pop
jnp
sbb
mov
jge
call
call
fstps
lods
dec
fldl
push
jg
add
aam
hlt
scas
pop
loope
adc
out
inc
das
scas
xor
addl
and
cltd
call
jp
int3
dec
dec
inc
scas
push
push
decl
sub
movsl
std
stc
sub
ret
lock
jle
sahf
jecxz
xchg
adc
jmp
pop
lock
push
adc
rclb
or
fistpll
mov
push
lock
mov
testb
lods
aad
jae
cwtl
inc
cs
in
fidivs
aam
sub
negb
dec
and
inc
jbe
fistl
ret
test
xor
sub
mov
fldt
sub
cmpsl
xlat
in
and
arpl
test
dec
mov
add
pop
mov
imul
push
xor
les
pop
les
call
push
imul
push
cmpsl
mov
fstpl
movsb
loop
dec
jns
out
add
cmpsl
jg
shrb
loope
mov
lods
dec
iret
int3
popf
pop
mov
ljmp
pop
jbe
lods
xor
pop
pushf
mov
mov
loope
ljmp
insl
add
jp
mov
negl
daa
sbb
movsl
xchg
or
lods
sub
cmp
insb
dec
mov
jmp
fbstp
or
sub
out
fnstsw
adc
xchg
mov
sbb
push
insb
jo
je
mov
clc
decl
pop
cmp
fbld
andb
sub
in
jl
mov
mov
dec
push
mov
das
fwait
leave
jo
imul
lahf
cmp
sbb
dec
xor
xchg
test
xor
pop
fildl
in
cmp
adc
cmp
cmp
rcrb
push
mov
mov
sbbb
ljmp
or
sbb
roll
adc
lods
shlb
jecxz
jb
cmp
mov
leave
adc
add
test
loop
mov
int
mov
add
sahf
out
sarb
xchg
data16
mov
in
adc
lcall
xchg
imul
xchg
decb
add
shlb
movsl
push
mov
cmp
je
cmp
push
mov
inc
rorb
int3
sub
dec
call
sbb
cmp
fcmovbe
out
out
pop
std
pop
adc
gs
push
movsl
outsb
movsl
xor
cmpsl
jb
aad
mov
iret
repz
cmp
xchg
out
add
and
imul
std
sbb
popa
pop
push
add
es
mov
movb
mov
ret
cmpsb
daa
dec
negl
push
imul
lcall
cltd
and
dec
jnp
mov
test
mov
lods
stos
int3
leave
mov
decb
cmp
cmp
scas
shlb
mov
aas
insl
lahf
adc
cmp
jne
mov
popf
repnz
pop
cltd
cmpsl
aaa
fiadds
cmp
loop
imul
icebp
mov
fidivrs
rcrb
call
and
stos
pop
pop
ljmp
xchg
inc
or
outsl
pushf
lcall
push
out
ret
sbb
inc
lret
xchg
xlat
je
outsl
sbbl
pop
test
adc
je
mov
insl
sahf
and
lret
pop
xorl
js
lahf
lret
add
in
lods
xchg
add
jnp
mov
or
imulb
negl
das
ficoml
mov
cli
fcomi
push
jno
sub
inc
jbe
fs
push
sbb
lret
push
in
outsl
mov
popf
jge
and
mov
scas
stos
jo
into
xchg
xchg
add
jle
stc
jl
inc
xor
mov
test
dec
adc
push
popf
inc
sub
sub
movsl
fstl
ljmp
xchg
inc
xor
mov
scas
stc
adc
loop
test
cwtl
mov
dec
mov
sbb
pop
mov
popf
jns
je
jmp
enter
mov
outsb
imulb
loop
xchg
into
jbe
sbb
cltd
inc
adc
scas
xor
cmp
in
fcomps
ljmp
bound
xlat
or
add
fdivl
xor
lcall
inc
fildll
adc
mov
mov
ror
push
add
inc
aas
mov
out
pop
mov
popl
outsb
sub
jbe
push
stos
in
jnp
loop
sub
pop
pop
gs
and
jg
xor
xchg
ds
mov
inc
insb
lret
ret
movb
add
cmp
testl
outsb
inc
subl
add
cmp
mov
xor
leave
pop
lret
lds
sbb
fsubl
ss
bound
mov
test
loopne
xchg
dec
std
jl
cmpsb
loope
add
xchg
das
jbe
dec
movsl
lret
sti
dec
test
ret
subb
pop
cmpsl
adc
mov
ljmp
fistl
pop
push
or
or
addr16
insb
popa
jo
mov
inc
test
andb
jp
fstl
dec
shll
mov
scas
xchg
and
xlat
pop
push
push
mov
mov
cmp
es
xchg
in
cld
iret
inc
mov
lds
nop
cli
push
jmp
adc
test
mov
lods
mov
rorb
jae
testb
adc
xlat
movsb
aam
popa
cmp
push
les
lcall
scas
dec
and
and
loopne
shll
loop
jnp
sbb
dec
ret
mov
ret
gs
lods
nop
pop
lock
pop
push
mov
or
xor
fdivl
xchg
icebp
aas
cmpsl
mov
es
test
es
gs
dec
jle
and
sti
dec
push
aas
cmp
into
outsb
inc
dec
xor
dec
mov
or
jnp
cltd
outsl
jnp
add
jmp
xchg
sbb
je
mov
cli
rorb
xchg
repnz
sbb
sbb
scas
or
push
mov
in
fdivrs
cmpb
inc
mov
roll
xchg
cmp
in
lret
fisubrs
or
sbb
adc
out
nop
mov
push
fadd
ret
fldt
das
mov
out
lods
xchg
and
scas
fidivrs
rcr
adc
daa
sbb
xor
adc
iret
adc
push
pusha
sti
sbb
inc
and
dec
addr16
int3
inc
cs
pop
cltd
push
lock
mov
pop
xor
and
incl
inc
pop
gs
in
movsb
mov
xchg
das
fimull
cltd
inc
fdivs
inc
xchg
and
push
xor
mov
xor
add
out
adc
or
mov
xchg
ss
das
js
and
fiaddl
sbb
push
mov
push
test
movsb
out
add
xlat
mov
pop
xchg
push
ja
sub
stos
hlt
scas
jae
hlt
movsb
add
mov
loop
in
mov
in
mov
or
into
out
sarb
fstps
cmp
lea
or
enter
loopne
xor
cli
nop
gs
mov
repnz
jnp
dec
adc
sbb
cld
and
popf
push
sbb
dec
cwtl
lret
jmp
inc
or
rcr
jge,pt
ss
outsl
loop
imul
or
stos
shrb
repnz
std
daa
das
push
add
ficoml
add
lahf
pusha
dec
aad
repz
xor
test
clc
pop
bound
fwait
jns
inc
mov
mov
testb
cmp
jne
xor
mov
adc
jne
scas
pop
jge
scas
push
insb
inc
xchg
lds
ljmp
test
out
sub
std
xor
jae
leave
jl
mov
dec
outsb
and
xchg
mov
pop
ss
mov
mov
adc
mov
ss
xchg
xchg
imul
cmc
xchg
ss
test
scas
out
out
jmp
mov
sti
sbb
insl
mov
or
push
pop
mov
std
sbb
and
jge
stc
adc
loope
fisubrs
ja
sti
xchg
stc
push
and
jecxz
fsts
scas
adc
adc
les
inc
mov
out
test
jns
in
pop
jmp
mov
mov
insb
lcall
dec
fnstsw
push
sbb
les
fcoml
xor
nop
pop
mov
or
jp
lahf
inc
inc
arpl
rclb
loopne
push
adc
cmp
lock
mov
adcl
xor
cmpsb
pop
cs
cmc
cmp
mulb
sbb
stos
arpl
imul
mov
push
out
test
cmpb
aas
push
inc
pop
insb
fwait
push
mov
pushf
mov
test
adc
mov
xchg
iret
push
mov
push
dec
addl
jge
xor
fwait
jbe
jo
pusha
and
sub
push
adc
dec
aad
loop
imul
jns
outsl
push
lret
mov
sbb
or
xor
mov
sahf
dec
adc
sbb
mov
mov
into
cs
out
mov
and
enter
ljmp
rcpps
and
pop
cld
clc
pop
adc
mov
aas
movsl
lods
cmc
iret
lret
loope
neg
jno
mov
daa
jmp
inc
or
dec
sbb
xchg
insl
popf
enter
xor
and
sarl
arpl
sub
in
mov
fwait
jge
lds
push
leave
imul
pushf
imul
or
sub
inc
stos
add
cmp
xor
jmp
xchg
mov
cmove
cltd
xchg
sbb
bnd
pop
push
cmp
cmp
xor
das
mov
icebp
push
inc
inc
int3
sarl
adc
pop
xor
push
shlb
dec
std
mov
lock
mov
setne
dec
outsl
jns
pop
adc
cmp
mov
cltd
ss
and
add
cmp
xchg
mov
aad
es
adc
arpl
jmp
andl
mov
movl
inc
loop
pop
mov
adc
jmp
inc
ss
mov
pop
sahf
test
insl
sub
mov
fnstenv
cwtl
icebp
jg
sbb
lret
sbb
loopne
out
cmp
xor
sbb
bound
push
mov
arpl
movsl
mov
jl
dec
jge
sbb
pop
mov
inc
add
div
inc
dec
pop
fnstsw
inc
in
adc
lcall
lahf
bnd
mov
pushf
je
cmp
mov
out
clc
rol
mov
mov
jl
pop
add
rcr
mov
jne
out
fildll
xor
jae
outsb
leave
push
arpl
pop
sub
fidivrl
fbstp
jae
xchg
repz
jns
sub
test
dec
mov
cwtl
cltd
mov
mov
repnz
repnz
push
add
rcr
adc
mov
clc
repnz
es
arpl
popf
mov
jo
out
mull
push
push
and
cmpsl
sbb
mov
test
mov
test
or
add
lods
and
rclb
xlat
add
inc
lds
out
das
mov
mov
push
nop
jecxz
push
shr
shlb
add
xor
cwtl
pop
add
pop
test
das
int
cmc
shll
repnz
fstl
stos
fidivrs
outsb
pushf
aam
fldl
jae
mov
daa
xchg
jecxz
movsl
ret
xchg
int
std
jb
jmp
cmp
xor
xchg
out
xchg
dec
into
cmp
movsl
xor
lods
mov
in
pop
es
aaa
pusha
fistps
fistl
cld
xchg
mov
xchg
insb
int3
js
hlt
nop
xor
testl
mov
mov
pop
ret
sahf
js
daa
js
cwtl
cltd
mov
in
mov
xchg
push
call
orb
movsb
scas
xor
in
pop
xchg
lret
lock
sbb
neg
mov
bound
cmpsb
mov
cmpsb
xorl
cmpsb
std
cmovne
insl
ret
sub
xchg
ret
mov
cmp
test
loope
push
gs
movsl
sbb
dec
std
mov
cwtl
mov
xor
dec
jge
mov
nop
cmp
adc
pop
icebp
rclb
cli
or
ljmp
push
adc
aaa
mov
jp
shll
vpsllq
xor
xchg
loope
notl
xchg
and
shll
lock
inc
or
lods
jno
mov
roll
jae
jnp
sub
mov
outsb
leave
pop
jno
cmpb
hlt
push
mov
mov
xchg
sub
stos
ret
push
mov
sub
pushf
and
call
out
js
xchg
outsb
adc
scas
sub
jnp
or
daa
les
std
add
sti
cmp
dec
sbb
cltd
imul
sub
add
ret
jne
out
je
push
and
pop
cmp
mov
arpl
add
sbb
and
push
lods
pop
mov
jae
push
push
inc
cmp
mov
mov
js
xchg
out
fstps
pop
jge
adc
pusha
adc
testb
fistps
push
push
or
iret
leave
lahf
adc
add
xchg
mov
test
jmp
fsub
lock
mov
xchg
in
xchg
lcall
xorb
add
in
mov
xor
test
push
mov
push
inc
xorb
ljmp
daa
leave
popa
dec
repz
add
imul
jl
push
xchg
in
mov
push
in
imul
out
xchg
inc
sbb
dec
testb
sbb
jae
lock
xlat
add
and
pushf
daa
pop
fsts
dec
repz
nop
inc
mov
lret
pop
xor
jmp
pop
cs
insb
cmp
cwtl
sub
fdivrl
inc
cmpb
stos
js
fmuls
lcall
push
xchg
sub
adc
jb
mov
sarl
sbb
pop
sbb
frstor
in
xchg
pop
mov
adc
cwtl
mov
and
add
imul
cmp
mov
or
gs
add
ret
sbb
sbb
add
xor
jbe
add
sbb
mov
hlt
fdivrl
int3
sbb
mov
repz
push
mov
sub
adc
dec
aam
or
dec
jg
sbbb
stc
stos
lock
mov
das
test
jle
mov
push
mov
aad
cmpsb
dec
dec
imul
or
imul
popf
insl
and
es
cmpb
jecxz
dec
shrl
xchg
push
cld
mov
fisubrs
cmpl
enter
push
mov
or
xor
bound
mov
sbb
mov
xor
std
ljmp
fadds
lds
adc
mov
jns
mov
fbstp
loopne
jle
outsl
fldl
int3
mov
mov
xor
stc
pushf
loope
scas
and
adc
adc
or
mov
scas
cmp
addl
inc
into
mov
adc
loopne
mov
mov
hlt
sbb
ds
or
dec
adc
lahf
add
test
jg
add
inc
mov
mov
enter
lret
pop
fimull
push
popf
loop
aad
repz
mov
mov
adc
mov
and
lock
sti
aaa
cmp
push
ja
rcll
pop
imul
sub
insb
in
dec
mov
xor
jb
lahf
ror
jp
lock
jmp
test
fcmovbe
loope
dec
enter
jle
lahf
imul
push
jo
adc
mov
dec
addl
sbb
adc
andb
rcll
pop
ljmp
adc
jae
mov
imul
and
pop
imul
pop
mov
test
lea
adc
cld
subb
push
pop
or
out
cltd
mov
pop
cmp
adc
notl
lret
loopne,pn
ret
jbe
xchg
pop
shrb
popf
mov
popf
xlat
aam
sbb
ds
dec
or
andb
fs
inc
mov
and
sbb
out
or
xor
jle
xchg
popf
in
jns
sbb
sti
pop
pop
jno
sahf
xchg
lret
ja
sbb
hlt
stos
lock
ret
sti
ja
sub
pop
sub
fwait
int
sub
jg
cs
hlt
sti
loope
fldenv
in
pop
push
push
or
pop
xchg
xor
lret
jae
jmp
mov
sti
cmpsb
loope
stos
cmpb
mov
shll
or
stos
xchg
cmpsb
xchg
push
enter
inc
iret
mov
fwait
aaa
notl
push
push
inc
xor
das
dec
pop
pop
cld
popa
nop
push
adc
hlt
inc
mov
xlat
rclb
nop
or
mov
lods
lock
push
push
ret
pop
sbb
add
out
pop
push
xchg
inc
sub
shrb
lret
in
mov
pop
mov
mov
or
push
andl
clc
stos
pop
push
repnz
sub
jg
xchg
dec
sarl
or
sbb
or
cmpsl
push
test
lcall
mov
pop
movsl
fcmovnbe
rol
dec
mov
outsb
or
mov
imul
enter
inc
adc
inc
ds
mov
sub
loop
adc
mov
cmpb
xor
ret
sarl
sahf
in
or
add
jbe
mov
movsl
ficoml
add
aad
and
or
pop
gs
mov
push
cmc
or
push
mov
mov
std
ret
pop
aas
cmp
mov
iret
sbb
incb
stc
lea
enter
pop
incl
hlt
lods
pusha
cmp
push
add
std
jle
add
sbb
inc
xor
std
scas
sbb
or
mov
push
sbb
fwait
pop
ror
add
pusha
xchg
ss
xor
sbb
out
mov
popa
mov
jle
aas
cmp
pushf
jle
inc
enter
add
popf
or
sbb
and
call
flds
mov
in
mov
cmc
mov
cwtl
pop
dec
test
mov
cmp
xchg
sbbl
add
outsl
in
mov
or
negl
inc
lea
inc
mov
or
pop
int3
xchg
pop
lods
inc
adc
sub
bound
sbb
arpl
data16
outsl
ret
leave
add
in
cltd
lods
xchg
insb
mov
xor
xor
pusha
popa
loop
popf
mov
fimuls
adc
and
mov
mov
add
mov
mov
mov
xchg
and
in
inc
ljmp
pop
jg
sub
mov
jnp
popa
pop
dec
or
add
cltd
fwait
dec
call
mov
mov
add
mov
sti
retw
lcall
push
pop
jbe
dec
leave
insb
enter
sub
push
xchg
call
inc
dec
clc
mov
inc
cmp
xchg
stos
faddp
inc
adc
cmp
inc
pop
je
xchg
mov
jp
test
jg
hlt
fisttps
mov
insb
inc
jge
pop
jle
fisubs
mov
mov
lahf
rol
mov
pop
cmpsl
int3
dec
push
jne
mov
jno
and
outsl
mov
ret
mov
xchg
mov
mov
enter
jmp
mov
arpl
in
stos
inc
test
xchg
mov
cli
fcoms
rcrb
mov
sub
push
inc
fisubrs
add
inc
lock
dec
sbb
push
out
sarl
pop
and
test
xchg
push
mov
lcall
sti
cld
mov
jmp
dec
adc
xchg
push
or
xlat
testb
jmp
mov
cli
xchg
lret
sub
clc
sub
cld
fucomp
fdivl
xor
aad
mov
mov
mov
mov
jge
ret
or
sub
rcll
mov
push
push
ret
mov
fldenv
cmpsl
or
push
mov
xor
and
xor
or
ret
xor
and
jl
test
int3
xor
pop
jle
mov
int
aam
and
jne
bound
je
fsubrp
jb
in
pop
out
fldcw
ret
int3
xchg
stos
nop
das
xchg
out
sbb
fwait
mov
inc
or
add
jle
je
add
imul
sub
in
xlat
adc
adc
ret
in
cs
outsl
sbb
push
dec
mov
push
xor
sub
sub
fsubs
cld
repz
cld
and
cwtl
and
add
shrb
sbb
pop
out
fsubs
add
lahf
push
push
imul
fidivrs
mov
rclb
repz
iret
pop
sub
pop
es
mov
push
and
push
dec
loope
and
adc
ret
sub
jne
jg
and
push
and
and
dec
push
adc
ret
rcll
pop
mov
and
pop
or
cmp
aam
add
imull
xchg
test
sub
in
or
inc
mov
cmp
push
aas
push
sti
sbb
or
or
subl
arpl
mov
adc
int3
pop
out
andb
fisubl
dec
dec
xor
in
mov
pop
dec
mov
aam
gs
loopne
cmp
add
xchg
mov
ljmp
test
inc
mov
xchg
xor
mov
clc
jmp
lods
mov
mov
jnp
sti
insl
mov
shll
in
cwtl
in
fistpl
fdiv
lds
sbb
push
ret
nop
fimull
mov
xchg
imul
mov
in
pop
jecxz
push
add
adc
mov
push
push
ffree
ja
or
in
mov
xor
jo
pop
lret
adc
xchg
mov
mov
gs
push
out
xlat
mov
iret
sbb
or
adc
in
xchg
push
and
push
push
jo
adc
in
data16
pop
clc
xor
test
mov
mov
xchg
inc
rol
outsb
dec
pusha
xor
into
outsl
add
lahf
cmp
dec
push
clc
jb
imulb
mov
or
dec
insb
int
clc
push
pop
jp
lock
int3
sub
or
xor
and
jmp
adc
cmc
xor
rorl
push
fimuls
frstpm(287
dec
cmpsb
mov
sub
cmp
and
cmp
inc
dec
sub
sar
pop
xchg
mov
iret
mov
adc
add
shr
mov
loop
outsb
inc
lret
sbb
cmc
adc
pusha
sbb
sti
cwtl
xorb
or
mov
vucomiss
push
sbb
ret
in
stos
push
pusha
xorb
sahf
cmp
push
rol
subb
lret
sbb
jl
lods
movsb
mov
inc
andl
pop
fsts
rcll
ret
je
lcall
out
pop
movsb
xchg
fistpl
les
popa
fldcw
fstps
add
test
mov
jb
outsl
mov
sbb
add
gs
mov
dec
adc
and
nop
in
ss
out
loop
dec
pop
jae
add
subl
push
test
ds
js
outsl
xorl
pusha
movsl
xchg
pop
sub
mov
pushf
add
and
mov
mov
xor
mov
adc
std
mov
fdiv
call
rcl
push
inc
adc
ret
xor
ds
clc
jp
idivb
mov
lfence
push
dec
mov
xchg
mov
xchg
cmp
pop
add
in
mov
pop
mov
cld
ret
rcll
addr16
das
shrb
mov
repz
push
jp
xchg
jg
mov
int
ss
mov
in
repnz
lahf
cld
lret
adc
mov
or
aas
popf
mov
movsl
inc
jae
std
push
or
dec
cltd
push
inc
dec
jecxz
in
xchg
cs
es
cltd
ja
and
pop
outsb
test
test
lock
stc
sub
and
movsb
mov
or
pop
movsb
cli
scas
pop
stc
mov
ret
jp
or
adc
cs
mov
jp
aas
and
pop
loope
shrl
mov
call
jno
ljmp
push
jne
sbb
mov
aas
mov
cmpsb
test
fidivrl
sarl
cwtl
jg
jbe
out
rcll
shrb
push
js
sub
ret
jb
popf
or
lret
xchg
fldl
aas
mov
and
adc
sbb
adc
leave
inc
addb
push
xor
out
cmp
jb
hlt
mov
sbb
and
inc
dec
adc
mov
out
outsl
je
and
jns
test
xchg
xchg
loopne
repnz
test
lret
xchg
dec
leave
mov
mov
movsl
sub
fs
push
in
cli
ret
mov
sub
loopne
insb
repz
cwtl
mov
inc
cmp
xlat
sti
mov
pop
push
in
jl
lock
pop
xchg
push
sbb
sub
fstpt
rcr
cmc
mov
dec
cmp
adc
loopne
and
inc
icebp
lar
outsl
cmc
fdiv
mov
and
push
jle
loope
xor
ficompl
jmp
out
insl
fstp
inc
or
lcall
aas
dec
mov
ficompl
lds
loopne
mov
ja
cmp
add
pop
sbbb
std
jp
int
or
stc
jle
jb
mov
in
into
addl
lcall
adc
enter
pop
pop
frstor
push
cs
xchg
mov
ja
dec
stos
lock
js
mov
scas
in
loope
fistpl
je
mov
add
jmp
or
jecxz
outsl
stos
mov
jmp
ds
pop
add
sbb
cmp
cmpsl
out
cli
sub
pop
sub
mov
movsl
ret
push
pop
sbb
jb
scas
pushf
cmp
mov
dec
cmc
mov
daa
xchg
std
out
dec
cmc
push
cmpsb
or
leave
in
mov
jbe
mov
adc
cmp
lret
or
jp
push
or
aad
mov
movsb
faddl
fs
fnstcw
inc
jo
leave
jnp
and
xchg
add
pop
push
das
or
js
test
fcoml
mov
shrl
add
jns
pop
push
movsl
inc
sarl
jb
movsl
leave
mov
sub
pop
cmc
inc
out
sbb
push
stc
das
sub
dec
in
mov
xchg
jle
push
pop
popa
mul
cli
or
je
sbb
lret
cmp
mov
jmp
or
push
fs
test
sbbl
movsb
cltd
std
xor
cli
imul
mov
mov
or
pushf
stos
icebp
lret
dec
push
dec
lods
mov
jmp
jl
outsb
pop
mov
jb
dec
dec
pop
and
cmp
sub
add
push
add
cmp
lods
sbb
in
pop
adc
pop
lret
imul
jg
and
popf
js
stos
xchg
push
aaa
testb
lea
lods
jmp
inc
adc
aas
lret
jne
add
out
movsb
int3
pushf
fnstenv
into
mov
mov
dec
dec
mov
inc
mov
jne
scas
psadbw
repnz
lds
inc
cmp
lock
mov
int3
out
in
xchg
dec
push
into
je
dec
mov
mov
js
lock
out
cmp
fsubrl
out
push
fwait
mov
pop
mov
out
rorb
sub
in
je
icebp
mov
scas
addl
or
pop
add
icebp
mov
notb
data16
rolb
rol
mov
mov
sbb
out
xor
adc
push
cmp
xlat
push
das
inc
aas
mov
leave
scas
jnp
lods
mov
repnz
rcl
sub
sub
dec
pop
sub
pop
push
and
cmp
pusha
push
fimull
dec
sub
and
lods
cs
mov
pop
inc
mov
mov
pop
add
inc
sti
lret
xchg
sbb
mov
pop
mov
mov
push
push
rorl
add
adc
push
shrl
pushf
out
incb
or
dec
mov
jge
pop
out
js
scas
push
sbb
sbb
xchg
jb
outsb
test
in
dec
fucomip
xchg
mov
jb
lret
jmp
into
adc
in
into
testl
js
and
or
adc
jl
fimuls
lods
repnz
sbb
pop
scas
cmc
jb
mov
aam
fnsave
loopne,pn
mov
jae
push
test
push
xor
jle
inc
outsl
add
mov
push
divb
out
and
inc
push
test
mov
in
jns
sub
xor
mov
fisttps
xor
xchg
cs
mul
or
sub
lock
jae
cld
and
add
mov
and
jge
jbe
xor
adc
xchg
xchg
shlb
data16
cmc
pop
jnp
xor
fldt
or
dec
popa
jl
push
ja
in
ds
mov
imul
insb
fnstcw
lret
cli
cmp
arpl
out
push
lea
repnz
lret
out
push
sbb
cmpsb
cmpsb
inc
jge
je
mov
jns
gs
pop
ljmp
jmp
sub
xor
push
leave
fidivrl
xorl
sti
rcll
fcom
cmp
mov
jnp
xor
pop
xor
mov
cmpb
inc
push
mov
arpl
adc
push
jnp
xchg
xor
inc
popa
mov
sarb
inc
call
sbb
pop
mov
add
int3
pushf
mov
xor
dec
and
adc
jns
dec
adc
pusha
xchg
or
andl
sub
mov
fsub
mov
ja
rcl
xor
daa
inc
in
enter
push
mov
jmp
mov
xadd
pop
psraw
push
xor
test
push
dec
icebp
lcall
out
cvtdq2ps
imul
push
sbb
mov
mov
inc
add
pop
jno
std
or
jne
add
add
pop
jns
hlt
repz
push
cmp
ljmp
or
or
popf
shlb
js
loop
mov
fiaddl
sub
pop
xchg
pusha
adc
aas
lods
push
test
inc
and
test
dec
push
xlat
lods
scas
sub
mov
sti
jecxz
ret
jbe
mov
push
push
and
out
add
jp
fistps
andb
pushf
loopne
stc
or
hlt
pop
lret
and
cmp
adc
sbb
ds
push
jns
imul
arpl
dec
jb
sub
and
gs
divb
xchg
mov
scas
lock
mov
data16
ljmp
mov
jno
mov
xchg
jp
lock
and
imul
mull
sub
cmp
add
dec
mov
cltd
add
or
dec
fwait
js
scas
sbb
call
jne,pn
xor
bound
xchg
mov
pusha
fdiv
or
sbbb
stc
jns
das
adc
sub
enter
movsb
push
sbb
adcb
movsl
add
es
mov
xchg
iret
int3
jg
js
and
push
scas
inc
movsb
leavew
insl
mov
daa
mov
rorb
imul
cmpsl
testl
insl
cmc
push
jbe
push
das
cmpb
in
add
sar
inc
and
pop
xchg
xor
popa
enter
cmp
pop
mov
ficomps
sub
sub
hlt
test
scas
pop
add
daa
mov
in
int3
xor
xor
ds
and
pop
cli
sti
lock
imul
xchg
orps
nop
mov
mov
mul
movl
cmp
and
idivl
mov
cmp
fldenv
dec
jmp
inc
sub
das
aaa
xor
dec
mov
fcmovb
sub
out
icebp
rcrb
add
xchg
sub
das
hlt
inc
dec
push
push
pop
ja
or
mov
cmc
adc
aam
shll
sub
movsl
aaa
test
sbb
jl
adc
push
iret
clc
fdivs
in
jnp
adc
dec
dec
jge
mov
aaa
cmp
cmc
jbe
int
call
test
pop
stc
inc
mulb
inc
js
in
gs
call
adc
pop
jge
daa
mov
out
gs
pop
ja
push
mov
jg
sahf
xchg
jno
nop
pushf
and
ja
and
pop
insb
pushf
and
xchg
out
icebp
sub
fstl
xor
mov
rcll
and
aaa
mov
sub
jo
sub
popf
jge
jmp
ljmp
mov
mov
roll
lret
loopne
iret
jle
push
mov
mov
adc
mov
addr16
jmp
jl
sub
ficoml
or
jbe
movsl
jmp
inc
mov
outsl
cmp
xlat
int3
pop
jb
adc
call
push
hlt
and
or
push
lods
rcr
and
outsl
or
pop
xchg
movsl
lods
dec
push
and
pop
in
cli
es
out
es
adc
jmp
cmp
xchg
sbb
inc
rcr
mov
out
adc
mov
ljmp
std
popa
js
push
or
push
jmp
xchg
aam
hlt
xlat
pusha
mov
in
sbb
mov
loope
cmp
int3
mov
push
pop
aam
test
dec
push
pop
pop
sbb
pop
call
rcr
sbb
sub
mov
jle
lock
stc
loope
cmp
or
or
xor
pop
dec
cwtl
adc
push
and
jbe
mov
gs
push
pop
in
clc
dec
or
fisttps
or
mov
mov
jmp
push
or
and
or
movnti
mov
mov
out
cld
je
sbbl
and
jne
stc
out
pop
icebp
lahf
in
arpl
loopne
mov
lea
jbe
flds
xsavec
and
lods
in
or
sbb
filds
jg
jo
dec
movsl
mov
test
sbb
sahf
lret
pop
add
and
cmp
mov
roll
gs
cli
mov
inc
inc
repz
outsb
xchg
fwait
or
push
setne
mov
cmp
sub
cmc
xchg
xor
scas
or
pusha
test
shll
gs
sti
repz
test
jns
int
jle
push
cs
mov
and
sub
divl
cmpsl
xor
ds
mov
ja
sub
data16
stc
jmp
add
jmp
sbb
stos
adc
cmc
add
int3
ss
fld
push
mov
pusha
ljmp
setle
push
pop
aad
jmp
sub
add
sbb
push
push
jge
mov
pushf
and
aaa
dec
dec
das
lds
loopne
sbb
arpl
int
pop
xor
scas
dec
divb
pusha
push
push
lock
dec
push
outsb
arpl
jle
mov
add
sub
loopne
lret
inc
es
cmp
aaa
jp
inc
push
dec
mov
inc
add
lea
sbbb
or
mov
in
imul
xor
dec
dec
xchg
cmp
mov
mov
lods
out
xor
sub
in
mov
xchg
out
cmp
pop
shlb
pop
mov
dec
filds
ret
cmc
and
out
sub
in
lahf
lods
sbb
sarl
imul
cmpl
adc
xchg
cwtl
pusha
insl
aas
mov
xchg
pop
stos
mov
lds
shl
aaa
sub
adc
inc
clc
xor
insl
and
das
shlb
stos
inc
add
lcall
cmc
mov
and
mov
leave
mov
aas
add
aaa
mov
gs
stos
fstpl
xchg
xor
mov
out
pushf
ror
xor
fwait
mov
pop
out
fisubs
mov
mov
mov
mov
pop
outsb
lret
gs
mov
and
js
cmp
cmp
jno
jns
jbe
sbb
andl
mov
lods
loopne
addr16
int3
insl
xchg
push
pop
inc
fcmovnb
aas
push
in
xchg
mov
fwait
loope
xchg
mov
xor
mov
nop
imul
out
rcrb
cli
jo
in
mov
push
adc
jbe
cwtl
enter
mov
int
outsb
dec
fwait
imul
add
pushf
icebp
push
lods
add
test
pushf
je,pt
push
fcompl
fldt
xor
cmp
xchg
and
lret
xlat
fs
int3
in
and
repz
int3
punpckhbw
push
sub
cmp
stc
scas
call
xchg
sub
push
outsl
nop
sub
aad
ret
shl
cs
dec
shll
sub
jl
test
js
or
xchg
ljmp
cmp
fwait
inc
mov
cmp
xor
lret
pop
fwait
js
dec
mov
xchg
outsl
call
adc
push
int
aaa
dec
outsl
out
pop
sbb
sbb
mov
mov
xchg
bound
mov
sbbl
call
orl
and
outsb
or
and
and
imul
fildll
ds
mov
popa
mov
jl
rorb
jnp
out
lds
std
rcll
xchg
into
cmpsb
test
cmp
cltd
rorl
or
xchg
xchg
ljmp
mov
xchg
inc
decl
push
adc
dec
mov
sti
ja
pop
repnz
out
xor
or
out
dec
pop
repz
mov
insb
xchg
cmpsl
add
imull
ficompl
push
imul
lcall
call
jecxz
les
push
imul
sub
ror
push
test
mov
data16
in
push
enter
outsl
inc
cmp
test
cmp
mov
fidivrl
not
cmpsl
stc
xchg
mov
xchg
jns
lds
int
dec
xchg
dec
daa
mov
and
sbb
jne
lret
lahf
cltd
loope
inc
pop
xor
int
outsb
or
scas
sbb
xchg
fiadds
pop
popf
out
inc
adc
iret
out
insl
xor
dec
outsb
sbb
push
or
fwait
subl
xchg
mov
test
dec
and
mov
lea
cld
lret
cltd
jp
jl
in
fldcw
mov
pop
addr16
push
pop
mov
enter
xchg
add
inc
push
xchg
cmp
aas
add
jae
push
test
mov
jmp
aas
mov
test
shlb
cmpsb
fwait
loopne
std
cltd
dec
jo
lret
lahf
popf
xor
fmuls
dec
inc
out
and
add
xchg
shlb
or
arpl
loope
push
addr16
cmp
shll
cmp
test
pusha
sub
cmp
jns
cwtl
lock
and
mov
idivb
xchg
idivb
or
imul
pop
mov
xlat
popa
pmaxsw
testb
jmp
mov
mov
sbb
lods
dec
dec
jnp
cmp
mov
incb
sub
pop
call
outsl
scas
cli
idivl
mov
iret
dec
inc
aas
mov
rcrb
mov
pop
xchg
jp
add
mov
lock
push
mov
out
dec
jge
cmp
push
xor
dec
mov
js
div
aas
jl
cwtl
inc
jl
xchg
jmp
fildll
inc
cmpsl
iret
push
into
pop
mov
push
shl
arpl
cmp
in
je
push
in
shll
clc
add
loope
imul
ret
mov
int3
jo
jmp
xchg
ja
pushl
pushf
in
ret
pop
fistps
xchg
mov
enter
out
mov
scas
ret
idivl
pusha
popf
push
push
aam
leave
cli
cmp
int3
jb
iret
icebp
xchg
adc
push
shlb
sub
xchg
fucomip
dec
inc
jg
jae
aam
xlat
mov
cmpl
xchg
adc
fs
pop
mov
push
or
add
mov
pop
cwtl
adcl
mov
mov
jle
push
stos
rorb
ret
push
sarl
add
xor
cmp
sarl
aad
shrl
sbb
fucom
inc
mov
aad
mov
or
sbbb
ret
push
pop
fwait
mov
mov
adc
lret
vpshad
mov
insb
sub
hlt
clc
shr
in
mov
lret
sub
add
mov
out
jg
jle
inc
sub
inc
ret
jge
nop
mov
sbb
js
lahf
inc
inc
leave
cltd
jb
and
stos
mov
pop
outsb
push
dec
fcmove
adc
mov
xchg
sub
xchg
mov
out
push
je
adc
psubsb
jp
mov
cmpsl
ss
push
pop
pushl
insb
insb
fcoms
faddp
add
mov
iret
jbe
or
icebp
lret
push
aaa
mov
adc
outsl
cmp
jge
cmc
ret
aad
fisttpll
xchg
inc
std
xchg
ret
popf
xchg
cmp
jno
aaa
js
je
pop
and
xor
or
loop
in
dec
add
fwait
icebp
bound
subl
jo
mov
jno
loope
inc
jmp
aaa
mov
sbb
and
inc
push
ret
pop
pop
mov
dec
add
dec
hlt
jecxz
fnstsw
fs
cmpsl
add
pop
xchg
jmp
jecxz
sahf
jno
pop
hlt
je
fdivrp
dec
mov
imul
jle
pushf
ja
lret
and
push
lock
jle
mov
shrb
sub
stos
imul
stos
mov
jnp
xor
pop
add
xor
js
dec
in
outsl
dec
sbb
dec
outsl
fiadds
jo
jmp
mov
dec
pop
cmpsl
ret
cwtl
add
inc
enter
dec
inc
ja
mov
imull
mov
ds
nop
sbb
mov
xchg
add
inc
or
mov
mov
lea
dec
mov
repz
in
push
arpl
aas
add
push
sbb
gs
add
jl
inc
push
pop
pop
sbb
fst
xchg
and
mov
loope
lahf
xor
mov
pop
divb
ljmp
out
in
int3
aad
ds
daa
cmp
adc
pop
leave
cs
jp
dec
push
mov
cwtl
xor
jge
loop
xchg
cmpsl
ds
sbb
mov
stos
push
push
arpl
mov
mov
addr16
sub
pusha
mov
clc
push
test
jmp
cmp
int
mov
jae
andl
test
movsb
lods
jge
adc
std
xchg
inc
xor
cmp
xlat
jnp
insb
jge
test
out
adc
pop
sahf
mov
outsl
cltd
fmull
fsubs
jbe
xchg
fwait
adc
jge
sub
lock
fadds
adc
inc
sub
clc
ja
leave
xchg
sub
imul
shll
inc
sbb
jns
ret
jbe
xor
mov
repnz
jne
and
mov
enter
sub
push
mov
mov
test
cmpb
cli
les
sbb
xchg
pop
repz
data16
fisttpl
jns
push
movsb
pop
mov
imull
leave
mov
add
xor
mov
pushf
aaa
sti
xchg
push
sbb
lods
mov
ret
test
add
cmp
and
mov
push
lods
mov
in
mov
int3
aad
adc
aad
dec
push
push
xor
and
enter
adc
jmp
pushf
jno
cmp
xor
push
mov
and
mov
jp
mov
push
ljmp
jnp
jb
imul
into
push
cmpsb
les
fdivs
sti
js
mov
mov
dec
sbb
in
mov
int3
fisubs
arpl
div
ficomps
inc
sbb
adc
les
int3
ret
mov
or
sbb
out
jle
ds
dec
and
add
xchg
pop
into
bound
pushf
sbb
jmp
insb
sbb
pop
repz
movsb
inc
cmp
pop
sub
push
cmp
loope
xlat
add
dec
imull
push
push
inc
jecxz
loopne
fistl
xor
int3
pop
push
adc
jl
mov
push
lods
sub
pop
mov
ficomps
fldt
or
mov
mov
or
mov
mov
sbb
jno
gs
mov
jns
add
cltd
push
icebp
call
pushf
cmp
aaa
data16
jae
cmc
jne
mov
pop
mov
fs
incb
add
and
push
inc
sbb
inc
ret
adc
xor
lahf
and
scas
stc
or
xor
mov
xchg
xor
mov
adc
dec
xchg
adc
xor
int3
jno
mov
mov
int3
dec
cmp
lock
push
inc
out
pop
xor
push
std
jne
fs
das
push
inc
mov
loope
jb
push
push
lret
sub
adc
jmp
push
or
pop
aad
xchg
sbb
mov
insb
fwait
cltd
lea
mov
bound
aad
push
adc
and
mov
imul
push
xor
mov
sbb
and
mov
inc
in
test
mov
push
push
mov
data16
mov
adc
pop
pop
test
outsb
jecxz
mov
std
cs
out
adc
mov
in
add
pop
leavew
ja
je
aas
in
outsl
adc
or
test
test
push
je
jnp
jbe
jno
push
mov
pop
lret
add
test
cmp
ljmp
xor
call
sbb
push
jge
aam
in
push
pop
jl
fldenv
push
int3
and
gs
lea
addr16
loopne
rcr
mov
xor
pop
mov
jg
jg
and
push
stos
and
xor
and
fwait
cli
xchg
pop
outsl
pop
jb
xlat
loopne
push
cmp
jle
aad
dec
out
imul
pop
cmp
outsl
lea
jge
xchg
push
adc
js
adc
shr
cmp
jno
call
jecxz
sbb
xlat
movsl
mov
xchg
mov
dec
mov
jle
mov
aad
orb
xlat
sub
xchg
sub
loope
mov
cmpsb
mov
push
xchg
inc
adc
or
aaa
mov
shrl
push
and
nop
xlat
xchg
lret
out
cmpl
and
cmpsb
out
shrl
out
popa
xor
pop
iret
out
popf
and
hlt
shll
mov
aad
hlt
jns
arpl
xor
push
sti
test
mov
xchg
js
enter
pop
jg
sbb
sbbb
lea
mov
jecxz
dec
add
jl
sbb
out
xchg
pop
push
jns
cmp
out
mov
xor
sub
imul
add
sub
fwait
and
nop
push
ss
mov
out
push
fstp
mov
sbb
mov
ljmp
mov
adc
cmp
xor
sbb
test
or
dec
add
in
sbb
xlat
sub
pop
rcrl
iret
mov
inc
pop
add
mov
inc
push
repnz
leave
gs
cmp
xchg
jne
out
idivb
out
sub
imul
sub
fcmovnu
ds
xor
inc
cmpsb
mov
xchg
xor
call
xor
jno
xchg
std
loopne
out
cmp
jle
sub
push
imul
data16
sub
mov
stos
cli
cmp
push
mov
xor
fnstcw
inc
pop
decl
icebp
cltd
sbb
sbb
lret
addb
mov
into
xor
xor
cmp
or
dec
cmp
fimuls
xchg
daa
or
jg,pt
dec
cmp
xchg
test
mov
mov
jle,pn
js
mov
outsl
xchg
and
inc
mov
adc
mov
fmull
leave
iret
mov
push
sbb
cmpsb
add
jnp
xchg
sahf
cmp
rorl
into
aaa
or
fldl
xchg
rcll
lods
xchg
adc
cmp
call
add
mov
push
push
lods
rcrb
adc
mov
imul
sti
ret
and
arpl
ja
movsb
dec
incb
mov
inc
mov
push
or
loopne
rorl
or
adc
rol
shr
dec
andb
popf
mov
fdecstp
lea
hlt
add
xor
mov
aas
je
cld
or
pop
push
xor
popf
fsubs
sub
dec
mov
jl
fisubs
popa
mov
mov
imul
divl
jnp
insb
and
ficomps
dec
jge
into
sub
push
sbb
inc
inc
xlat
outsb
not
push
int
inc
gs
push
mov
sbb
mov
pop
jl
or
icebp
lock
mov
add
sbb
bswap
in
jo
sub
xor
jmp
dec
jecxz,pn
pushf
sbb
pop
push
and
ret
cmp
movsb
icebp
cmpsb
std
fistl
pop
lods
les
ror
dec
or
andl
mov
out
jno
cld
fsubrl
xchg
inc
stos
or
addb
pop
rep
or
push
clc
lcall
lods
inc
xor
and
repz
or
mov
push
cmpsl
inc
arpl
xchg
fsts
into
rcl
adc
push
sti
int
iret
test
push
repnz
lea
into
xlat
ljmp
daa
mov
mov
jb
ret
jae
mov
cld
lods
ja
lock
mov
rcll
pop
xor
mov
mov
push
sbb
adc
insl
int
dec
pusha
push
out
mov
cmp
mov
sbb
pop
mov
dec
push
nop
jmp
xchg
add
cmp
cmp
cmp
mov
insb
xlat
in
fisubs
dec
out
adc
fnsave
repnz
xchg
ljmp
or
xor
outsl
and
sub
cmpsl
cmp
mov
or
test
xchg
rep
pop
cmpsl
or
mov
push
lret
sub
ljmp
dec
inc
jb
fldl
mov
and
jne
mov
pop
mov
testl
fcmovbe
scas
int
or
dec
inc
daa
es
push
int
pop
or
or
or
stc
lcall
popa
or
push
lods
mov
jl
loop
sub
cmp
aam
sahf
inc
sub
clc
inc
mov
popa
or
mov
adc
daa
fucomi
dec
and
aaa
xor
mov
pop
in
mov
ds
cmp
mov
adc
xor
lret
arpl
test
sbb
inc
cmp
sub
dec
mov
call
sub
cmp
out
imul
xlat
cld
sbb
arpl
add
mov
fmuls
push
add
jmp
mov
cwtl
ss
mov
cld
push
or
jl
in
mov
adc
lahf
xor
lods
mov
mov
mov
xorb
rclb
adc
out
jecxz
fwait
mov
aaa
mov
xchg
into
and
mov
adc
bound
fidivrl
cmc
rorb
lea
pop
sub
xchg
push
xlat
js
jp
push
jns
sarl
or
mov
rcrl
push
mov
popa
cmpsb
mov
fwait
and
loope
mov
enter
call
fildll
mov
test
popf
jae
xor
or
cli
popa
xchg
pop
adc
jmp
mov
pop
dec
xor
adc
dec
fdiv
xchg
in
cltd
je
xor
inc
mov
out
cld
xor
push
dec
mov
sub
gs
neg
jns
pusha
scas
pop
push
or
or
jg
inc
push
mov
mov
addl
in
popa
mov
addr16
out
lahf
dec
cmp
test
pushf
and
xchg
shll
loope
dec
in
xor
cmp
pop
fmull
fdiv
roll
lods
jp
cmp
fldcw
mov
test
test
flds
ret
ror
inc
cld
xchg
add
pop
inc
xor
sbb
push
lcall
into
adcl
jo
jns
pop
pop
mov
fcoms
push
cmp
outsb
loope
les
lock
js
jbe
cmp
push
adc
sbb
andb
and
pop
jmp
and
gs
mov
inc
mov
mov
mov
xchg
add
push
and
repnz
lds
jmp
jnp
mov
loop
leave
mov
fildll
leave
hlt
jnp
mov
jnp
outsl
lock
jmp
iret
adc
jecxz
fcoms
and
fsts
mov
div
gs
adc
or
push
mov
or
push
pop
add
ds
imul
arpl
mov
xlat
jl
stos
bound
loope
mov
int
ds
adc
mov
xlat
xchg
pop
js
mov
sbb
testl
push
in
lret
out
leave
xchg
push
push
push
jl
jp
test
addr16
je
add
mov
test
xchg
scas
sub
stos
jl
xchg
xchg
xor
jle
and
stos
ficoms
daa
arpl
jg
sbb
add
add
or
mov
jmp
addl
pop
popa
lret
shrb
pop
mov
cmpsb
push
div
jp
mov
std
ljmp
mov
scas
mov
dec
mov
or
and
cmpl
xchg
std
insb
cmp
adc
popf
jb
jne
shl
pop
lods
add
jns
push
mov
pop
pop
or
xor
aas
outsl
pushf
pop
mov
lcall
mov
inc
xor
int3
aas
jo
and
arpl
in
xchg
movsl
test
fucomip
lcall
push
addr16
xor
popa
loopne
in
mov
lahf
add
and
lds
xor
lret
jecxz
cmp
pop
aad
jnp
sub
cli
aas
ja
dec
daa
push
mov
jg
sbb
stos
cs
or
mov
mov
sar
aad
in
adc
adc
xchg
jbe
pop
cmp
push
imul
dec
inc
out
cmp
scas
xor
mov
and
and
sbb
nop
push
pop
in
dec
adc
push
pop
mov
push
inc
rcrb
push
sub
scas
in
or
mov
add
shll
popa
clc
push
and
push
dec
pop
lret
into
sbb
push
pop
cld
out
cmp
cmp
push
mov
mov
mov
js
lods
negb
dec
adc
sub
dec
pop
arpl
mov
and
cmp
pop
inc
push
inc
push
adc
std
jo
fldt
dec
setge
lock
icebp
mov
inc
sti
pusha
mov
pushf
cmp
sub
in
faddl
rcl
xor
fstpt
movsb
es
outsb
popf
sub
mov
adc
daa
xchg
test
shl
jp
rclb
pop
out
lahf
call
push
shll
insb
repnz
add
mov
enter
or
sub
cmpl
arpl
xor
xchg
mov
in
je
push
sbb
mov
or
xchg
mov
cmp
stc
jle
sub
pop
in
stc
inc
das
data16
rorl
push
mov
inc
jne
repz
jne
stos
iret
and
xchg
jl
pop
cmp
sub
xor
jae
lahf
push
loop
ret
imul
push
insb
ja
imul
sahf
cld
mov
lods
ret
iret
jbe
pusha
adc
cld
loopne
enter
lds
and
inc
jnp
mov
cld
push
or
sub
mov
test
mov
xchg
sub
stos
iret
ret
dec
cmp
cmp
ds
or
iret
jl
mov
ja
pop
rcrl
xchg
scas
arpl
repz
or
sub
roll
popa
ljmp
in
jmp
stos
mov
dec
jo
shl
push
rorl
sarb
inc
adc
or
xchg
jecxz
inc
sbb
incw
add
mov
lods
dec
cmpsl
and
jno
cmpsb
inc
shrl
lock
pop
fisttps
jnp
adc
test
fimuls
sbb
pop
stc
adc
and
cmpsl
out
loope
sub
in
mov
pop
lods
out
cmc
push
aad
aaa
mov
and
in
sub
mov
cmpsl
nop
jno
jp
rolb
faddl
cmpsl
xchg
fdivrs
daa
fmuls
mov
adc
push
cvtpi2ps
and
xor
push
popa
pop
or
xchg
mov
dec
push
out
lock
data16
cmp
push
add
cmp
lret
jle
sub
xor
xlat
or
outsl
sti
mov
jecxz
push
dec
test
and
jg
cwtl
cwtl
testb
pushf
cltd
xor
mov
jl
cmp
nop
cld
clc
push
xchg
outsl
les
arpl
repz
test
xor
insb
jbe
mov
push
sub
jne
pop
es
xchg
or
aam
jle
adc
mov
cltd
addl
fs
mov
movsl
arpl
test
xchg
push
les
gs
xor
ljmp
outsb
std
push
mov
loop
cld
adc
stos
xchg
notl
push
adc
adc
adc
fwait
movsb
fstl
cmpsb
fs
add
add
int
rolb
push
dec
adc
xchg
and
and
xchg
enter
inc
aas
insb
push
sbb
lahf
stos
xchg
lea
inc
jge
sti
sbb
test
idivl
mov
sti
dec
push
addr16
add
push
pop
lods
or
leave
xor
mov
stos
lods
orb
popa
test
cmp
dec
dec
push
jg
adc
je
mov
imul
mov
push
mov
adc
ljmp
cmp
sarl
stos
mov
mov
cld
sbb
test
repnz
or
rorb
xlat
sbb
in
inc
jno
lret
je
adcl
sahf
stc
lret
fs
cwtl
push
out
fmuls
cmp
fs
push
addr16
jg
out
mov
xchg
mov
add
xor
fiadds
outsl
sbb
ja
inc
cmp
shrb
sbb
andb
xlat
cltd
dec
loopne
das
push
xor
add
inc
jge
lods
pop
leave
dec
pusha
dec
sub
popf
xchg
pop
mov
movsl
ret
mov
dec
dec
leave
in
mov
mov
inc
mov
popf
out
mov
xchg
push
or
test
cmp
into
add
arpl
mov
fcoms
xchg
xchg
das
push
int
sbb
into
and
bound
dec
push
jp
repnz
dec
fstpl
mov
test
cmpl
sub
pushf
pmaxsw
jb
cmpsl
jae
cwtl
ss
mov
jl
dec
mov
fsubrp
ret
data16
jno
pop
mov
out
loop
aaa
jo
and
adc
sub
outsl
lcall
jns
rcl
ljmp
insb
lock
call
jbe
cmp
ret
xchg
mov
or
in
fcmovnu
add
pushf
mov
les
and
mov
xchg
aaa
in
ret
xor
and
es
sub
dec
add
insb
mov
icebp
clc
in
repz
dec
inc
notb
repnz
inc
cmp
inc
jns
add
sahf
xlat
and
adc
inc
out
xor
mov
js
push
pop
clc
mov
call
subl
push
push
or
dec
insl
repnz
jle
test
and
push
rcrb
sbbb
pop
jne
je
and
inc
mov
mov
xor
or
pop
adc
loope
push
mov
iret
test
jle
fdivrs
aad
cli
fiaddl
jg
adc
test
lds
sub
pop
add
loope
cmpsw
inc
push
pop
and
ljmp
arpl
lock
dec
xchg
xor
or
jb
push
dec
ljmp
adc
ljmp
retw
pusha
mov
jno
adc
outsl
fs
packuswb
mov
pop
cli
pop
pushl
lret
or
dec
cmp
arpl
fwait
mov
dec
push
fisubrs
jo
imul
mov
mov
sti
adc
movsl
movb
push
mov
sbb
inc
inc
push
pop
sub
std
cmc
mov
adc
cmpsl
mov
notl
sbb
jnp
inc
mov
pop
outsl
shrb
jbe
mov
sti
arpl
add
push
lret
lods
test
stc
es
in
add
push
push
mov
in
add
popf
lds
sahf
popa
leave
jg
in
push
inc
xchg
ret
jle
mov
cltd
test
xchg
es
popa
inc
sbb
dec
inc
jmp
pop
mov
lret
add
add
mov
mov
pop
data16
mov
in
roll
lret
xchg
sub
push
repnz
add
ss
stc
push
inc
lods
add
pop
jnp
sbb
sub
outsb
mov
loope
icebp
mov
ds
jge
xchg
icebp
mov
insl
xor
or
js
cmc
cld
hlt
cld
push
js
gs
ds
int
repnz
jns
and
or
sub
cli
repnz
push
imul
jbe
adc
xchg
xor
mov
pop
call
test
cmpl
js
mov
mov
lcall
sbb
loopne
cs
sbb
subl
jnp
or
clc
push
jmp
loope
and
jbe
mov
sbb
stos
xchg
in
pop
or
pop
mov
sbb
sbb
fimull
into
mov
sbb
sbb
pop
sub
jl
jg
mov
repnz
adc
push
jge
pop
mov
testb
push
xor
sub
jnp
lds
in
xor
icebp
mov
push
mov
inc
add
daa
sub
xchg
push
stos
sbb
pop
push
int
outsb
pop
dec
cmp
xchg
cmp
fiadds
lock
bound
mov
xor
pop
fcomi
ficoms
aaa
lods
shl
cltd
lods
push
movsl
inc
push
and
pop
cmp
adc
in
into
mov
outsb
cltd
pop
xchg
ror
leave
mov
into
je
out
xchg
repnz
ret
xchg
faddl
negl
cltd
or
xor
lret
xor
pop
icebp
sub
nop
pop
sti
push
fcom
pop
pusha
adc
shlb
cld
inc
cmp
andl
mov
lret
movsb
add
adc
mov
inc
int
pop
mov
js
repz
jae
push
loop
cmpsl
sub
mov
aaa
mov
sahf
push
xor
jo
std
dec
pop
mov
sub
xor
inc
mov
lahf
fistl
mov
loop
in
stos
mov
mov
xor
loopne
fcmovb
sbb
sub
adcl
fwait
dec
les
jb
push
repz
iret
cli
dec
pop
out
flds
dec
cmpsb
notb
cli
or
cmc
sbb
rcrl
pop
gs
pop
out
dec
sarb
xor
xchg
inc
jbe
ja
scas
cwtl
and
cmp
lret
xor
mov
addr16
int
jo
jecxz
xchg
mov
insl
add
or
adc
stos
cltd
sahf
sub
jns
jl
jne
cmpsl
repnz
push
mov
aas
fcom
mov
daa
and
je
xchg
cmpb
mov
xor
xchg
inc
jnp
pop
stc
jmp
sub
scas
mov
imul
xor
scas
inc
lcall
dec
fisttpll
stos
les
xor
sti
or
adc
xor
or
or
sti
imul
xor
jno
shrl
movsb
dec
idivl
test
xchg
mov
jae
nop
adc
nop
negb
into
loop
pop
sbb
mov
js
xor
adc
dec
sub
jmp
frstor
xor
xchg
out
bound
xchg
mov
fsubl
pop
cli
lock
push
aaa
push
xchg
loope
out
imul
push
sub
test
mov
int3
push
stos
test
xor
mov
jp
mov
daa
sub
xchg
xor
fs
cmc
fisubrl
or
test
jae
int
data16
mov
add
dec
add
rorb
or
push
dec
mov
xchg
popf
mov
or
mov
bound
out
scas
pop
jno
call
cmp
inc
outsb
call
dec
dec
adc
fisttps
jns
sub
outsb
ret
sub
aaa
dec
pusha
fstpl
mov
adc
repz
lds
inc
mov
adc
dec
imulb
scas
mov
adcl
inc
out
push
sub
xchg
sub
jg
rclb
sub
in
xchg
incl
ds
or
nop
in
mov
and
rorl
or
push
ljmp
xchg
mov
fldl
stos
add
mov
outsl
repnz
or
ja
xchg
jg
inc
stos
inc
inc
test
popf
cmp
lret
hlt
jb
dec
xor
fimuls
test
sbbb
inc
enter
rorb
mov
in
xchg
cs
inc
fs
sbb
js
cmp
icebp
mov
fwait
xchg
test
mov
js
mov
pop
xor
cmp
ret
and
stos
mov
jmp
loope
fistpll
or
int3
fisttpl
popf
sar
leave
mov
fs
jo
dec
mov
in
mov
insb
xchg
out
inc
mov
test
fistps
hlt
push
cli
mov
or
nop
inc
insb
out
mov
sub
mov
adc
je
push
inc
mov
xor
dec
les
fcmovnb
test
xchg
std
and
insb
fldcw
ret
fchs
jbe
mov
mov
ret
bound
addps
fxch
adc
pop
rolb
push
pop
mov
cmp
cld
dec
xchg
add
call
jno
cltd
stos
mov
xor
or
inc
cltd
xchg
inc
pushf
imul
shll
mov
adc
sbb
mov
adc
jbe
iret
enter
mov
in
xor
mov
jp
adc
sub
jmp
shlb
hlt
pop
std
xlat
shrl
inc
ljmp
rorl
dec
push
sbb
sub
pop
pop
mov
push
fldcw
pop
mov
popf
push
add
sbb
adc
fsubl
fnstcw
leave
pop
nop
std
lret
imul
mov
clc
cltd
ret
mov
push
lods
repnz
mov
adc
mov
rol
and
pop
or
mov
mov
mov
inc
add
xor
jge
lcall
xor
push
add
dec
sbb
adc
cld
out
adc
add
jl
pop
add
mov
imul
hlt
and
int
cmp
sahf
or
ja
call
mov
xor
adc
in
stc
mov
xor
shl
movsbl
hlt
gs
sbbl
loopne
sub
popl
and
jnp
repnz
std
or
push
in
out
sbb
push
roll
jecxz
les
repz
push
xchg
pusha
and
push
or
enter
call
shll
pop
popa
arpl
push
mov
or
push
adcb
cli
fsub
dec
ds
mov
scas
dec
loopne
ljmp
sbb
jae
cwtl
dec
fwait
rcr
push
popa
mov
scas
lahf
push
test
xchg
mov
test
cmp
imul
dec
sti
or
inc
jae
pop
das
or
jmp
cmpsb
pop
cmovg
fidivrs
stos
lds
std
dec
shll
dec
mov
loope
mov
je
stc
mov
pop
push
fwait
push
jb
add
out
xchg
mov
inc
mov
dec
jns
dec
pop
enter
pop
and
fcompl
xchg
jae
mov
adcb
dec
into
les
inc
mov
cltd
mov
in
jbe
push
mov
and
adc
fcompl
les
insb
loope
cmp
add
mov
movsl
gs
test
repnz
movsl
push
mov
mov
int3
sbb
fsubl
into
mov
lret
jnp
or
jae
out
fisubrs
pop
dec
xlat
call
push
iret
mov
pop
aam
out
repz
popa
cmp
jbe
lret
mov
ret
cmpsb
daa
imul
insb
adc
inc
pop
cli
out
bound
cld
cld
js
push
scas
pop
lret
cli
add
sub
aad
mov
fisttps
daa
loopne
pushf
scas
sahf
call
inc
dec
sub
es
andb
add
and
and
aaa
inc
adcl
insb
sub
das
mov
lock
mov
inc
aam
push
push
ret
cltd
addr16
scas
xlat
sub
fs
lret
lret
repz
fdivrl
jns,pn
mov
leave
pop
sbb
cld
pop
stc
fwait
mov
jo
testb
lret
jl
cmpsb
xorl
int
mov
lcall
and
ret
mov
jbe
jne
ret
std
jmp
das
pusha
cli
orl
scas
mov
jbe
mulb
mov
call
xor
cmpsl
add
mov
out
sbb
rorl
outsb
sahf
jns
loope
pusha
pop
movsb
outsl
and
fidivs
jae
inc
jnp
xor
fmul
je
and
sub
int3
cmpsl
cs
out
idivb
mov
insb
and
or
cli
dec
aam
xor
push
test
cli
or
add
iret
xchg
dec
mov
jp
sbb
jnp
inc
or
jl
ror
cs
push
outsb
fcomps
mov
mov
imul
jmp
or
addr16
bound
test
fnsave
shlb
in
popl
sbb
dec
pop
popf
repnz
mov
mov
movsb
cmp
push
push
push
push
aas
or
inc
sbb
lods
fwait
mov
gs
insb
dec
adc
les
fisttpl
shlb
pop
ss
int3
cmc
cmp
ret
mov
or
xchg
clc
loopne
jge
mov
mov
inc
js
mov
and
pop
cmc
and
cmp
inc
inc
sti
sahf
and
cmp
lret
in
jecxz
adc
mov
hlt
shr
jae
pop
pop
fsubrl
add
cmp
shll
dec
push
clc
or
lods
sahf
dec
dec
mov
inc
std
xchg
inc
fdivrl
scas
push
cltd
scas
fcomi
mov
arpl
out
imul
or
sub
bound
pop
cmp
mov
sti
test
add
fdivrs
dec
inc
add
jb
add
inc
iret
shrl
push
rcrb
and
ljmp
pop
fstl
int3
adc
in
sub
ss
pop
imulb
dec
sti
test
jno
add
ret
pop
pusha
jle
into
cmp
shl
or
pop
cmp
mov
sti
lret
movsl
or
rcrl
push
lret
cli
pop
xchg
and
loope
fstpt
mov
imull
dec
rorl
xchg
lret
nop
test
inc
sub
mov
leave
mov
scas
lock
lds
mov
cmc
cmp
test
les
repnz
push
int3
arpl
push
add
movsb
les
out
mov
xor
test
mov
mov
sti
idivl
and
out
cmp
push
and
popf
inc
xchg
shlb
push
nop
cmp
fcmove
xor
push
xchg
in
xor
inc
lock
test
jne
mov
pop
or
in
imul
adc
mov
lds
lahf
icebp
jecxz
fnstcw
in
jb
leave
ds
push
sbb
std
and
cmp
repz
in
out
ds
push
ja
or
adc
nop
adc
push
push
add
sbb
and
loope
fdivrl
mov
int
in
inc
xor
xor
out
xor
mov
xchg
and
fsubrp
push
pop
or
repnz
mov
fmulp
xor
ret
movsl
sti
jb
mov
in
sbb
mov
mov
lcall
push
xchg
adc
clc
roll
scas
les
add
push
mov
fs
push
lahf
xchg
xor
push
xchg
dec
jle
mov
inc
jae
xorb
lcall
push
pop
out
test
clc
ficoms
ficoml
mov
pop
repz
xchg
mov
inc
cs
testl
cmp
lea
or
fnstenv
mov
movsb
and
ret
dec
jb
loopne
pop
aaa
js
jnp
ret
outsb
scas
adc
jnp
pop
sub
das
stos
les
iret
xor
mov
fnstenv
arpl
dec
mov
fwait
pop
lahf
add
mov
mov
pop
out
mov
ret
push
xlat
insl
scas
xchg
cmp
pop
jo
sbb
fwait
test
and
insb
or
in
xchg
test
or
sub
xorb
jne
xor
or
cmp
lods
leave
divb
jmp
cmp
scas
dec
sbb
test
push
jmp
dec
pushl
mov
or
shrl
fcoml
stc
aam
out
cld
mov
xor
adc
mov
movsb
popa
jne
movsl
insl
out
and
and
adc
fstpt
mov
push
xchg
push
cli
out
push
lock
pop
dec
divb
cli
stos
fldl
push
ret
pop
inc
mov
xorb
aad
jnp
fadds
dec
popf
sbb
ljmp
int3
inc
call
dec
jge
outsb
sub
jmp
repnz
xlat
jnp
xlat
js
test
jg
mov
test
and
js
or
add
not
stos
jb
dec
sbb
sub
push
xor
dec
out
roll
inc
sti
sbb
jmp
push
mov
out
xchg
xor
pop
dec
es
inc
add
cmp
imul
les
jne
mov
cmp
insl
sub
idivb
mov
jmp
rolb
ja
imulb
sbb
dec
xlat
scas
push
sbb
mov
jp
mov
fdivrl
das
cmpsb
dec
mov
mov
pop
sar
and
in
out
dec
rorl
in
lret
mov
xorb
or
jge
or
mov
std
cmp
aas
ja
ror
jne
pop
ss
inc
and
xor
push
je
inc
ja
call
sbb
pop
pop
aad
shll
psllq
xor
lods
mov
mov
pusha
mov
xchg
jp
cwtl
movsl
jo
push
mov
cmp
adc
vmptrld
fwait
popa
adc
ljmp
push
mov
xchg
push
adc
test
dec
sti
xchg
pop
adc
testl
add
jge
and
leave
fildll
xor
mov
shll
rcrl
fdivrl
jecxz
andb
outsb
and
sub
repnz
sbb
pop
or
add
xchg
loop
popa
data16
sahf
jl
loopne
cmp
or
xor
cs
inc
and
sbb
in
subb
inc
mov
inc
dec
push
in
stc
pop
lret
pop
std
jnp
cli
stos
push
mov
jbe
pop
and
cmp
jp
ljmp
repnz
out
shll
mov
dec
fwait
roll
xor
dec
hlt
mov
rorb
or
idivb
push
xorb
sub
adc
jnp
cmp
xchg
pushf
mov
add
add
fdivs
push
test
mov
sub
in
sub
fadds
or
adc
fimuls
sub
imul
mov
ret
leave
lods
inc
cmp
aam
aam
jg
mov
jl
nop
cmp
fbld
push
data16
or
mov
cmp
or
into
fwait
subb
mov
sbb
pop
repnz
cld
mov
push
dec
popf
pop
test
and
cmp
lods
pop
add
or
pop
bnd
and
in
and
xchg
test
push
dec
int3
push
sub
cltd
aaa
aam
std
rclb
sub
cld
jb
lret
mov
inc
jb
xacquire
outsb
push
sti
addr16
lock
jb
and
and
mov
nop
and
mov
and
jne
ja
dec
add
xchg
hlt
mov
cmp
call
out
push
sub
add
mov
call
inc
and
pop
gs
cmp
fisttpll
mov
xor
rorb
rorb
mov
adc
sbb
aas
push
jo
cltd
push
jb
nop
sub
and
dec
divl
lea
enter
push
inc
add
fs
ja
xchg
lods
cs
aad
loopne
push
loope
test
mov
in
mov
ror
mov
fbstp
and
js
adc
aas
insl
scas
dec
cmp
add
pop
sbb
add
dec
lods
jmp
jbe
movsb
mov
movsl
sahf
push
je
mov
dec
lret
inc
lret
cs
dec
sti
push
in
flds
negb
push
aad
outsb
jecxz
xor
pop
lahf
imul
inc
test
fists
adc
adc
add
pop
inc
repz
pushf
mov
or
test
mov
aad
lds
mov
push
fsubrl
repnz
aaa
xor
adc
lods
push
sahf
fldcw
mov
sarb
cwtl
iret
mov
jne
or
adc
or
shrl
cmp
out
adc
mov
or
push
in
mov
pop
xor
out
fsub
sub
hlt
stos
fiaddl
sahf
scas
mov
fisubl
mov
jne
xchg
rolb
mov
lods
ret
jne
loop
sub
sbb
je
mov
and
mov
jle
cmp
inc
iret
mov
cli
xchg
out
iret
out
dec
pop
or
jo
call
sbb
mov
lods
jge
subb
mov
out
mov
inc
sub
pop
xchg
push
jp
sbb
test
push
mov
cltd
addr16
inc
imul
adc
and
clc
lds
pop
pop
mov
cltd
and
jne
inc
arpl
mov
int3
aam
mov
xchg
dec
out
inc
arpl
out
test
mov
sbb
jne
jae
push
jle
into
inc
sub
jno
lock
out
inc
xchg
jl
lods
add
inc
das
mov
xchg
jns
mov
movsl
test
int3
adc
imul
mov
pop
loop
js
pcmpgtd
rclb
sbb
nop
lock
add
leave
dec
push
mov
scas
dec
out
mov
mov
add
add
mov
mov
mov
or
scas
fs
pop
adc
mov
push
cwtl
ret
fstpt
xor
add
je
jecxz
orl
push
jns
xor
mov
stos
dec
inc
clc
xor
push
stc
loope
inc
mov
ficoms
fcmovbe
adc
adc
jmp
dec
xchg
pop
xor
sbb
adc
jo
mov
dec
mov
or
add
sbb
icebp
add
dec
daa
lret
fwait
fwait
jae
or
sbb
pop
and
addps
mov
stos
xlat
sbb
nop
cmpsl
insl
loope
inc
jbe
mov
pop
negb
adc
inc
push
ds
and
cmc
jae
std
pop
repz
ret
shl
les
pop
mov
xchg
dec
xor
pop
push
hlt
cwtl
aad
iret
jo
adc
and
inc
loopne
fdivp
rclb
xchg
shl
jmp
fdivrs
sbb
mov
push
jbe
jne
adc
scas
add
das
mov
shlb
pusha
mov
mov
lock
jecxz
dec
in
push
outsl
cmp
pop
andl
mov
nop
lods
xor
pmaddwd
fisubs
arpl
dec
sbb
jns
lock
jns
sbb
in
aaa
add
or
cmp
xchg
sbb
cmp
xchg
aam
fsubrs
in
les
xorb
or
les
jp
fisubrl
inc
repnz
mov
loope
xchg
sbb
mov
jae
mov
adc
in
mov
cltd
aam
push
ja
jb
icebp
ret
xchg
pop
fisttpl
fistpll
sub
cmp
ljmp
test
icebp
push
jnp
out
insl
jnp
mov
enter
je
fstps
push
mov
sbb
mov
xadd
fstpt
or
sbb
gs
les
repz
adc
push
jl
js
mov
xchg
push
cmp
mov
push
xchg
aam
xchg
fwait
and
sbb
mov
jns
add
out
sbb
pop
movsl
fiadds
mov
xor
dec
mov
jo
ret
arpl
or
push
das
jl
test
scas
cli
mov
imul
addl
cmp
push
repz
or
jae
pop
and
test
fistl
sbb
pop
inc
jecxz
scas
lahf
fwait
aad
aas
sahf
pushf
jge
sub
mov
pop
ror
icebp
fmuls
scas
pop
pop
sbb
scas
and
fnstcw
add
movsb
scas
sbb
fs
mov
enter
push
pop
stos
hlt
mov
mov
mov
sub
dec
imul
sub
adc
mov
mov
dec
ret
jl
pusha
xchg
shrl
shrl
pusha
push
push
daa
aad
cmpsl
sbb
mov
add
scas
cwtl
gs
mov
sbb
xchg
cvtps2pi
insb
loop
and
push
jne
insl
ret
add
filds
je
mov
inc
lods
aaa
cmpl
movsl
das
pusha
inc
cmpl
cli
in
aaa
insb
or
faddp
push
sti
insb
stc
cmc
loope
push
in
cmp
or
mov
or
mov
fldcw
pop
adc
mov
add
pop
xor
and
and
push
pop
sarl
es
dec
in
adc
xor
jnp
push
aaa
aaa
pop
mov
jno
push
xor
shrl
les
or
mov
sti
or
and
push
addl
adc
orl
jl
ret
popf
leave
adc
pusha
inc
push
fcomps
aas
cmp
xabort
iret
aas
movsl
pusha
or
outsl
sbb
sub
jle
fld
dec
pop
bound
cmp
cmpsl
xchg
mov
pushf
push
dec
cld
clc
int
mov
xchg
ss
popa
dec
pop
mov
int
pop
mov
push
add
iret
fidivs
stos
cmp
fsubrp
rolb
nop
pop
pop
insb
les
or
cmp
rcl
sbb
xor
cmp
iret
or
sbbl
adc
adc
sbb
mov
dec
outsl
fisttpll
mov
xlat
lcall
lock
mov
hlt
fistpll
je
cwtl
jmp
lahf
mov
cli
and
stos
inc
es
sbb
pop
xchg
clc
cli
mov
pop
inc
lret
or
shlb
sub
fcoms
lcall
mov
insb
pop
jb
les
popf
sub
es
es
aam
pop
pushf
lock
sbb
mov
add
insb
pop
and
dec
and
jbe
or
cmp
ds
inc
repz
inc
movsb
mov
pop
aam
and
jb
mov
sub
jno
pop
cmpsl
sub
cmp
sbb
jb
adc
loope
out
hlt
xor
and
cmp
loope
xor
jno
in
cmpsl
or
mov
stos
add
push
enter
outsl
arpl
inc
adc
push
scas
xchg
shrl
lock
cmp
adc
test
clc
test
adc
insl
scas
fcomip
sbb
mov
mov
push
jp
jns
and
push
rolb
add
mov
fisubrl
sub
sub
sub
repz
push
call
mov
ret
fistpll
xor
das
dec
mov
cwtl
mull
out
mov
xchg
xor
movsb
cmp
push
push
shll
insb
lret
scas
xchg
xchg
out
xchg
iret
xchg
sub
daa
xchg
dec
jecxz
js
dec
xlat
cld
cltd
mov
inc
inc
or
push
xchg
jne
movsb
and
jg
pop
jecxz
cmpsb
pop
lahf
add
jo
xchg
popa
sub
mov
lds
popf
sub
es
mov
adc
mov
xchg
das
in
data16
divb
mov
push
xchg
mov
int
pop
pop
test
push
xor
and
xor
jno
xchg
lret
adc
sub
mov
add
rolb
xor
aad
push
adc
push
leave
clc
mov
sbb
xor
pop
scas
lods
xchg
push
subb
adc
lock
mov
jg
icebp
lret
pop
sbb
dec
inc
mov
stc
arpl
xor
xor
data16
jecxz
or
dec
int3
cld
add
imul
jg
mov
cmp
mov
rcrb
sbb
cmp
inc
fstpt
mov
mov
jmp
mov
test
dec
push
mov
mov
and
subb
enter
lods
sbb
add
add
test
jecxz
js
sbb
dec
pop
jne
and
jmp
cmc
pop
in
mov
or
test
mov
push
cmp
fdivrp
mov
push
roll
dec
xchg
aaa
test
arpl
test
sbb
mov
movsl
loopne
mov
orb
stos
sbb
cmpsl
cli
insb
adc
dec
mov
push
add
mov
xchg
incl
and
js
inc
mov
xor
jns
cltd
test
roll
mov
xchg
dec
in
mov
and
cmpsl
mov
pushf
mov
and
inc
adc
cmpsb
xchg
jne
pop
jge
mov
jmp
jg
je
pop
sbb
hlt
aaa
into
fmull
ret
aaa
pop
sbb
lcall
outsb
push
add
call
sbb
stos
stos
out
sti
xchg
leave
cltd
mov
gs
packsswb
mov
inc
adc
ficomps
or
dec
xlat
jle
mov
jnp
xor
jl
push
iret
aad
add
in
int
fidivl
dec
mov
sub
pop
push
push
dec
adc
add
and
int
test
sbb
js
push
xchg
popf
mov
in
pop
jl
push
cs
lods
jge
mov
loop
fstpt
mov
fsubrp
xchg
xor
rcr
dec
add
clc
mov
iret
mov
dec
or
jae
xchg
inc
repz
xchg
daa
cli
or
mov
xchg
scas
mov
enter
neg
mov
jg
outsb
ror
call
out
repz
add
test
xchg
and
shll
mov
mov
test
jbe
fsubrs
xchg
rcl
hlt
or
sub
xor
xchg
ret
lods
cmp
dec
xchg
and
enter
add
sub
rolb
dec
sbb
adcb
cmp
out
in
inc
pop
testl
pop
mov
ss
lahf
push
jo
ret
push
or
roll
pusha
test
add
xor
into
shrl
and
sub
push
fnsave
mov
sub
adc
not
arpl
xchg
imul
xlat
movsl
lds
ret
stc
cmpsl
loope
adc
imul
add
fbstp
sti
push
orb
xchg
daa
outsl
leave
insb
sbb
push
cmp
and
pop
mov
inc
movsl
insl
mov
push
jbe
fstps
cmpb
pop
inc
std
pop
add
sti
icebp
outsl
mov
stos
and
mov
jle
and
or
and
inc
ss
adc
jle
cmpsb
outsl
push
pop
ja
mov
jnp
in
jae
sbb
js
bound
stos
mov
dec
dec
jo
stc
call
adc
jp
add
adc
movsb
cli
aad
mov
pop
decl
call
fmull
js
jl
pop
aas
jmp
cmpl
movsb
mov
dec
repz
adc
pop
push
mov
xchg
inc
mov
jmp
decb
pop
fisttpl
jb
and
outsb
popa
cmc
or
das
sub
lahf
icebp
lea
popf
out
int
fs
fisttpl
int3
pop
psubusw
mov
or
cld
sahf
jbe
mov
xchg
mov
add
mov
inc
mov
pop
and
sub
push
ljmp
ret
jmp
and
add
mov
push
xor
js
cmp
xchg
push
clc
sbb
cmpsl
gs
jb
push
inc
mov
lret
xor
jb
adc
mov
test
fwait
clc
andl
jae
inc
test
icebp
aad
jno
push
jb
add
mov
jge
fadd
xchg
and
dec
std
mov
xchg
lock
dec
lods
push
or
push
icebp
pop
dec
dec
pop
insb
adc
gs
add
out
rcr
inc
push
call
fdivrl
in
jnp
jno
sbb
imul
or
pop
jns
pop
aad
repz
or
idiv
jne
add
cltd
xor
xlat
sbb
lods
popf
sub
mov
frstor
mov
fidivl
cmc
adc
ret
xchg
ds
fs
pusha
adc
mov
sbb
adc
psubb
movsb
decb
add
jmp
addr16
inc
sub
mov
aad
rcll
lds
xchg
xchg
lock
pop
jnp
je
pusha
sbb
lods
push
aam
or
rcll
ljmp
ss
mov
outsb
push
in
int
or
std
stc
xchg
xchg
ss
ds
lods
inc
add
sbb
jmp
mov
mov
sub
xchg
push
out
sbb
xor
pop
push
cli
repnz
jg
cmp
scas
inc
inc
fwait
out
push
push
insb
cmp
lahf
push
test
push
mov
test
xchg
dec
cmpsl
ds
mov
inc
push
addr16
dec
xor
pop
xchg
and
and
mov
or
test
add
dec
xchg
dec
and
or
lea
mov
fsts
push
mov
in
and
jl
xor
idivb
orl
or
bnd
inc
and
fdivrs
inc
xchg
sub
pop
adc
fcmovnbe
outsl
jecxz
mov
cmc
mov
cltd
jb
adc
fists
iret
sbb
jp
mov
insb
mov
xchg
aas
lds
mov
repz
sub
or
mov
or
xchg
sahf
ret
movsl
jmp
lret
popf
xchg
dec
mov
xchg
nop
jno
repnz
ret
mov
outsb
aaa
pop
pop
sbb
into
and
xlat
lret
inc
rcrb
sbb
loop
pop
lods
pop
or
sub
jle
jle
aam
loop
lea
subb
mov
inc
mov
or
aad
mov
icebp
loopne
mov
jbe
push
mov
data16
scas
pushf
push
and
mov
cmp
mov
int
cmpl
or
aaa
mov
sbb
movsl
sub
mov
jne
cmp
mov
fsubrs
mov
jmp
adc
push
mov
je
xchg
push
ficoml
sub
aaa
pop
cmpb
jge
and
addr16
adc
daa
cmp
and
and
out
ret
mov
inc
std
adc
mov
mov
jnp
ss
push
dec
call
lods
imul
test
or
sahf
icebp
add
mov
jbe
cli
imul
sar
sub
cmp
push
xor
movsb
and
test
lcall
roll
scas
xchg
shll
sub
rclb
in
bound
mov
push
imul
sti
shl
stos
pop
iret
sub
lods
and
test
xchg
or
xor
aas
dec
push
aam
mov
or
icebp
mov
pop
fidivs
inc
and
jge
das
sub
push
jg
stos
dec
cmp
aaa
jae
sub
cmpsl
das
or
push
daa
xchg
test
push
dec
outsb
mov
add
mov
icebp
sub
jbe
loope
into
test
mov
xchg
dec
xchg
adcb
add
and
fwait
inc
mov
test
mov
nop
imul
outsb
test
or
bound
out
mov
jo
call
ljmp
out
pushf
loop
aas
mov
pop
cli
mov
mull
cmpsb
in
loopne
sub
in
jle
mov
aaa
and
push
arpl
dec
lea
mov
jecxz
sarl
cmpl
faddp
jne
lods
pop
dec
dec
std
dec
into
jae
inc
mov
jbe
pop
mov
hlt
adc
mov
pop
mov
pop
loope
test
lea
mov
pop
xchg
addr16
fisttpl
data16
mov
lcall
push
xchg
pop
xor
and
mov
sub
sub
jecxz
subl
cmp
lcall
int3
test
fcompl
mov
xor
stc
jns
out
dec
es
mov
jmp
or
mov
icebp
ss
jb
jno
jb
leave
popf
loopne
cld
insl
pop
fsts
lds
andl
test
out
pop
xchg
jp
int
adc
push
xor
in
xor
sub
push
or
xchg
fstpt
or
jb
into
jo
xchg
mov
loopne
mov
insl
jbe
adc
add
ljmp
pop
cmpsb
jp
ret
cmpsb
in
push
fcoml
jmp
mov
or
mov
sub
repz
push
outsb
scas
rcl
aam
lds
fs
mov
jnp
xchg
lock
stos
xchg
inc
or
xor
or
jp
jle
addb
cmp
mov
pop
xor
mov
inc
es
xor
fbld
pop
push
pop
mov
fimuls
pop
aas
xchg
cltd
mov
in
add
push
mov
jp
mov
repz
fstpl
arpl
call
out
ja
pop
mov
sub
mov
popf
add
mov
lods
fdivl
mov
js
lea
push
daa
por
orl
inc
push
lods
rcll
inc
xor
add
xchg
cltd
jno
aam
addr16
cli
dec
and
cmp
inc
mov
leave
outsb
mov
sbb
repz
and
dec
cmpb
mov
sarl
sub
mov
adc
push
es
mov
insl
je
mov
mov
xchg
pop
rcll
mov
insl
or
jae
mov
mov
push
shll
push
push
or
cmp
inc
jb
shll
or
xchg
into
lahf
xor
mov
loopne
sub
xor
ds
inc
mov
adc
and
pushf
pop
subb
mov
fwait
jl
fistps
jmp
mov
jo
push
mov
cmpsl
push
fwait
sbb
outsb
pop
adc
outsb
repnz
fwait
dec
stos
stc
stos
xchg
push
sbb
lret
push
mov
or
or
mov
xor
mov
in
xor
sti
xor
test
pushf
aas
aaa
mov
add
shrb
adc
sub
or
dec
sub
inc
pop
cmpsl
mov
jge
in
jmp
stc
imul
adc
nop
loop
data16
orb
mov
cmp
dec
cmpsl
mov
fisttpll
adc
jne
fwait
cltd
jbe
scas
jae
cwtl
pop
pop
stc
psubd
out
cltd
mov
mov
test
sahf
cmp
je
fdivrp
inc
cli
sbb
xlat
pop
clc
and
inc
and
loopne
ret
and
mov
and
data16
push
stc
call
xor
ds
pushf
and
pusha
jae
cwtl
pop
mov
add
js
cld
or
lods
push
push
adc
mov
xorl
pusha
and
xor
test
sbb
adc
test
das
add
xchg
mov
jne
test
push
or
sub
addl
popa
out
jecxz
rcrb
jmp
or
push
mov
xor
and
dec
test
jnp
mov
push
sub
hlt
lret
pop
xor
dec
adc
test
mov
test
sbb
repnz
push
mov
dec
cmp
sbb
into
dec
add
xor
xlat
mov
cmpsb
dec
dec
mov
cmp
adc
stos
inc
decb
mov
mov
or
push
inc
std
and
xor
sub
inc
arpl
sub
int3
icebp
adc
test
lds
pop
mov
mov
mov
xor
lds
xchg
jle
ret
and
cltd
jno
in
pop
jnp
les
sub
dec
inc
mov
jno
xchg
sub
mov
jg
or
jne
pop
and
lret
not
mov
loopne
xor
adc
sbb
scas
xor
faddp
or
jle
es
mov
mov
int
out
test
pop
jbe
aaa
inc
lds
loope
filds
xchg
aad
dec
ficoms
xor
hlt
add
push
fldt
scas
xchg
mov
inc
dec
mov
data16
mov
fisubrl
push
lret
loopne
inc
push
lret
inc
shlb
and
add
dec
aam
or
lret
fs
popl
jle
testb
divb
inc
rcrl
movsb
push
icebp
mov
orl
mov
subl
or
test
inc
lds
fldt
xor
cmc
and
jg
pop
inc
shr
inc
jnp
addl
adc
jns
xor
stos
out
in
or
cmp
adc
jo
loop
cmpsl
push
jg
dec
in
movb
xchg
sbb
adc
push
xor
xor
dec
xor
pop
sbb
iret
int
fcmovne
mov
dec
jb
jae
xchg
xchg
pop
ss
jbe
jl
test
test
push
in
cmp
ja
and
dec
es
cmp
out
push
test
push
repnz
jl
mov
sub
jo
pop
sub
jb,pt
icebp
dec
lahf
hlt
sti
cmp
fimull
ljmp
loopne
sahf
cmp
mov
xchg
mov
pop
mov
xchg
stc
enter
cli
add
ljmp
cmp
jle
scas
repz
shr
sahf
lods
pop
hlt
js
popf
mov
xor
mov
mov
clc
mov
dec
movl
cmp
inc
xor
popa
enter
mov
in
or
inc
loope
xchg
je
inc
pop
xor
repz
es
push
jl
sbb
or
jno
lahf
pop
mov
mov
fs
or
mov
mov
jne
orb
xor
lret
xchg
cs
ss
incl
cmpb
in
push
adc
lock
jb
pop
sub
mov
push
xchg
dec
enter
sbb
add
stc
jns
sub
xchg
je
cltd
or
loopne
bound
push
and
or
in
out
mov
jae
rcll
test
mov
or
mov
fidivrs
cmpsl
mov
roll
xor
jne
dec
pushf
gs
pop
mov
xchg
jno
xlat
xchg
in
test
ds
jmp
or
test
pop
imul
loopne
aaa
mov
mov
and
lods
adc
or
jb
sbb
mov
adc
outsl
inc
scas
push
push
mov
mov
push
mov
imul
mov
sub
pop
lahf
iret
aad
xchg
sub
ljmp
push
mov
xor
scas
or
cmp
ljmp
mov
mov
js
sub
das
cli
push
movsb
dec
xor
push
push
and
or
mov
sub
mov
xchg
mov
lahf
aas
outsl
or
lahf
pop
fdivp
jl
test
pop
add
xchg
stos
out
jl
lahf
mov
sub
or
ficoml
mov
lods
xor
adc
push
movsl
ret
mov
dec
adc
mov
mov
sbb
dec
sub
ds
or
ljmp
jb
sahf
lret
mov
test
cli
test
lret
jle
jne
sbbl
popa
out
ds
and
dec
ds
arpl
lods
mov
aaa
jp
sbbb
lret
inc
push
pop
push
iret
jmp
push
test
cmp
push
out
shll
jge
js
lcall
mov
cltd
pushf
mov
lods
mov
aam
jbe
out
jl
int
cmp
cmp
js
js
stos
dec
add
pop
xor
dec
adc
std
dec
and
subl
mov
xchg
mov
mov
mov
xchg
cmp
lcall
and
jmp
arpl
jb
in
lea
mov
mov
test
imul
push
lods
add
adc
sub
jbe
jbe
mov
test
or
inc
cmp
sbb
movaps
or
fcmovb
jl
or
cmp
mov
out
test
insl
test
sarb
push
cmp
dec
cmpsb
movsb
loop
outsb
dec
sbb
cmp
popf
pushl
jecxz
push
mov
test
cld
mov
mov
sbb
mov
xchg
cmpsb
pop
dec
xchg
mov
cmpsb
adc
loope
bound
rol
fisubs
dec
mov
xorl
loopne
iret
and
lods
adc
dec
adc
xchg
cmp
in
pushf
pop
rcrb
data16
scas
addl
mov
or
fiaddl
adc
pushf
push
lods
repnz
test
xor
push
pop
test
adc
les
fldcw
sbb
sub
lret
loop
notb
rorl
jae
adc
cmp
adc
je
and
pcmpeqb
repz
test
mov
ss
aaa
sti
jb
mov
mov
arpl
mov
and
insl
lock
pop
jle
sbb
xlat
jecxz
mov
or
fcoms
xchg
outsl
dec
push
add
enter
xor
cmp
cmpsb
add
mov
mov
movsl
sbb
arpl
fistpll
lock
push
and
cwtl
fimuls
dec
push
cmp
ss
push
xchg
mov
shll
ret
xchg
pop
adc
lock
xchg
mov
mov
icebp
xchg
pop
shlb
adc
ss
push
adc
add
ficoms
push
jae
and
incl
sub
xlat
push
movsb
jecxz
pop
inc
jo
sub
jb
data16
xor
inc
mov
and
hlt
das
rorl
push
fs
pushf
add
scas
test
and
mov
or
mov
pop
xchg
xchg
out
rcrb
adc
mov
mov
rcl
das
movsb
inc
inc
dec
cmc
pop
push
cli
cltd
test
mov
jns
incb
cmp
leave
loope
cltd
ret
imul
insl
lds
enter
cmp
je
xor
andb
jb
cmc
bound
imul
mov
mov
das
jae
xchg
push
out
or
dec
sbb
push
adc
in
aam
jno
adc
out
lcall
inc
cmp
push
stos
pop
shrl
outsl
sbb
sti
sbb
add
loop
movsb
jo
lods
ss
and
inc
insl
out
xor
jecxz
jo
adc
les
ss
mov
int
dec
je
mov
insb
sbb
xchg
aaa
rorb
mov
add
dec
sbb
movsl
mov
lds
pushf
add
sbb
nop
lea
ret
fmulp
pop
lcall
or
lods
idivl
fisubrl
ljmp
insb
lods
adc
xchg
push
popf
cmp
xor
rol
xor
inc
or
and
outsb
xor
mov
xor
xchg
cmpsb
out
sub
ficoms
arpl
aad
shrl
fsts
repz
ffree
and
and
sbb
mov
pop
dec
cmp
jge
rcrb
push
mov
stos
mov
cs
push
popa
pop
aad
push
bound
es
stos
or
fnstsw
stc
movsl
or
sub
xchg
test
lret
test
sarb
fmuls
repz
sub
inc
sub
adc
inc
pop
mov
test
cmpsl
or
dec
call
loopne
cld
dec
xlat
fiadds
mov
popf
imul
hlt
ljmp
lods
mov
adc
pop
mov
mov
repz
int
adc
push
orl
xchg
cmp
fnstcw
rcrl
aas
fnstenv
jg
pusha
jg
shl
sub
rep
inc
sub
dec
push
stos
lahf
loopne
es
mov
js
inc
out
cmpsb
cmp
lock
mov
ja
xchg
loope
je
xchg
or
ret
inc
popa
sahf
push
sbb
fcomps
mov
fcmovb
out
in
fdivr
popf
call
sub
ficompl
push
test
mov
pop
xchg
mov
in
test
dec
push
pop
pop
popf
or
add
mov
mov
imul
jecxz
jno
jnp
insl
cmp
imul
jp
xchg
push
sbb
cli
lds
and
mov
dec
out
ljmp
sub
jno
cmp
enter
cli
shrl
les
les
je
ds
js
cmp
add
or
ss
dec
dec
jne
cwtl
mov
cmp
pop
cmp
pop
pop
shr
adc
push
stos
jnp
jmp
mov
lock
xchg
mov
push
cmp
pop
or
ret
loop
jg
mov
out
pop
ss
inc
add
mov
insl
inc
adc
ja
and
cltd
xchg
xor
or
into
mov
add
stc
jg
push
rcr
out
in
push
cmp
call
enter
je
movsb
call
jo
jne
mov
test
push
fisttps
dec
loopne
mov
adc
fwait
cld
stos
xor
mov
jns
rorb
cmp
les
cmc
ds
mov
divb
mov
ret
inc
mov
pusha
hlt
loope
push
and
pop
scas
and
in
pop
add
push
loope
mov
adc
push
xchg
les
stos
xchg
js
jmp
pop
bound
jns
cmp
pop
cmp
in
sbb
outsb
outsb
sbb
jp
dec
xlat
and
loop
lret
shrb
cmp
cmp
inc
or
ljmp
mov
lods
pop
inc
lods
seto
mov
add
das
push
in
cltd
mov
sub
xor
push
loope
xchg
cmp
icebp
idivb
js
push
imul
mov
ftst
mov
lret
xchg
jb
int3
jno
icebp
daa
mov
test
mov
push
or
mov
call
inc
mov
sbb
push
dec
xor
inc
cmp
aad
mov
xor
and
out
lahf
nop
and
mov
mov
mov
insb
jl
dec
cs
in
push
cmp
iretw
bound
fsubp
mov
adcb
ja
lods
mov
outsb
iret
hlt
daa
das
push
mov
mov
js
xchg
xchg
xchg
sub
pop
sbb
add
push
cmpsl
lret
mov
cld
add
shll
js
mov
mov
dec
pop
add
sbb
cmp
inc
dec
lods
xchg
mov
xor
out
xchg
repz
fwait
es
push
call
jns
jle
mov
inc
jno
dec
cmc
shlb
mov
inc
in
cltd
pop
ret
rcl
ja
inc
ljmp
sub
rolb
nop
lahf
stos
movsb
jne
inc
mov
sti
mov
pop
mov
inc
in
out
push
cli
xchg
out
data16
push
stos
jmp
push
xor
sti
cmpsb
cmp
xor
push
fistpl
dec
lods
loop
out
mov
aas
dec
lock
pushf
repnz
cmp
ret
out
jmp
sub
xchg
pop
pop
or
clc
js
mov
mov
enter
jo
aad
in
xor
mov
shrl
sbb
je
push
nop
jns
lcall
iret
push
xor
sahf
dec
push
pop
mov
shrb
dec
sub
iret
adc
cmp
aad
dec
lods
sbb
es
les
cmp
add
lret
ss
shlb
or
xchg
inc
mov
mov
mov
mov
sbb
and
stc
cs
nop
fldt
stos
stc
insl
sub
dec
fidivs
adc
orb
sbb
cmc
aad
mov
sahf
add
fsubl
dec
jge
pop
adc
iret
outsl
test
movsl
addr16
sarb
push
jns
mov
xor
xchg
adc
jle
addr16
fsubrl
pop
out
ja
movsl
lds
cmpsb
lock
adc
jb
insl
daa
int
xor
fimuls
leave
or
pop
aam
pop
lret
jns
sbb
jge
lods
xchg
in
jnp
adc
and
nop
push
mov
rcll
mov
je
lahf
inc
sub
lret
dec
fsubl
jp
inc
cld
fwait
addr16
aas
mov
leave
mov
pop
aad
cmp
nop
jmp
xchg
ss
loope
push
nop
stc
insb
popf
dec
fwait
lahf
pushf
adc
xchg
xor
jnp
dec
ficompl
mov
outsb
add
imul
add
pop
out
mov
and
dec
push
icebp
stc
loope
decb
push
xor
dec
popa
and
cs
mov
jbe
lock
scas
mov
imul
fsubrl
xchg
jl
xlat
push
sub
push
inc
pusha
scas
daa
and
imul
pop
mov
repnz
mov
mov
adc
add
mov
adc
jp
test
xchg
int3
cmc
xor
and
xor
pop
add
mov
js
fs
shll
test
fnstenv
xchg
jnp
sti
jmp
iret
dec
xchg
shll
aas
cmp
daa
adc
or
mov
popa
outsb
ja
jmp
imul
pushf
mov
dec
mov
inc
ds
sbb
sub
xor
clc
aaa
sti
nop
xlat
xor
jecxz
dec
pop
sbb
ljmp
ljmp
adc
pop
rcl
test
lods
fstps
xchg
lods
xchg
add
cwtl
movsl
cmp
mov
push
sbb
xlat
and
les
xlat
jns
push
xorl
adc
lods
adc
mov
lret
dec
cmpsb
mov
cmp
fsts
mov
jl
gs
dec
xchg
imul
pop
jl
xchg
sbb
bnd
stos
lock
loop
mov
inc
ljmp
nop
dec
loop
cmp
mov
sti
icebp
mov
in
xor
icebp
bound
sbb
aaa
lret
lret
loopne
in
xor
shll
dec
inc
push
stc
lods
pop
lret
fcmovb
inc
gs
ret
aaa
lods
add
dec
xchg
rolb
add
nop
push
inc
pop
and
in
add
insl
or
sbb
fucom
ret
add
repz
popf
jbe
shlb
or
pusha
jbe
xchg
mov
test
push
enter
inc
xchg
out
push
dec
int3
jae
test
lock
add
test
xchg
jl
int
pop
ljmp
sub
shrb
mov
jb
pop
cwtl
dec
xchg
jo
push
enter
cmp
push
cld
push
ja
daa
sbb
mov
cwtl
mov
mov
outsl
popf
stc
shll
sub
pop
cltd
lea
aam
jge
adc
lcall
xor
inc
mov
hlt
pop
imul
push
cwtl
out
xchg
rcrl
xchg
ljmp
mov
lcall
ljmp
pop
xchg
inc
lock
lea
pop
and
jb
and
ffree
inc
push
add
xchg
adc
imul
jno
cmpsl
stos
mov
ljmp
add
loopne
and
std
adc
jo
loop
mov
inc
pop
pop
js
cmp
sbb
cmp
mov
iret
mov
xor
dec
mov
repz
mov
scas
mov
shl
pop
int3
cs
sbb
scas
fmuls
push
pusha
xlat
scas
out
mov
and
pop
ret
jp
mov
push
mov
dec
xchg
cwtl
inc
xor
xchg
int
mov
xchg
pop
inc
ret
fwait
cmp
or
hlt
and
pop
add
adc
xor
mov
pop
pop
bound
or
sub
repnz
mov
in
cmp
rcrb
out
push
aam
shr
and
pop
cmc
jo
cltd
xchg
inc
mov
subb
popf
imul
jl
dec
cli
sub
mov
sbb
push
loope
ljmp
xchg
fistps
dec
mov
test
je
pop
mov
gs
xor
dec
mov
out
inc
aad
loope
or
fsubl
or
in
scas
ljmp
jno
jbe
mov
add
and
lret
cmpb
add
test
int3
push
mov
cwtl
sbb
rcll
cltd
inc
lods
ret
int
mov
rcr
mov
in
sub
sti
lods
mov
cpuid
lret
xchg
mov
dec
xchg
icebp
lret
pop
mov
sti
out
mov
sub
lock
fwait
mov
push
enter
jle
mov
cmp
movsl
ret
xchg
into
mov
dec
loope
cmp
data16
jae
and
mov
push
das
mov
cmpb
ret
sbb
stos
int3
add
mov
out
jnp
or
and
push
inc
int3
loop
pslld
mov
mov
rcrb
inc
cli
call
push
cmp
pop
out
jle
xchg
movsl
jmp
subb
out
mov
fistps
dec
les
cmp
or
sbb
outsb
aaa
mov
sbb
gs
mov
mov
js
in
and
jne
push
cltd
lcall
jo
jge
insl
and
jecxz
test
and
inc
movsb
adc
sbb
fdivs
jecxz
jb
hlt
jbe
repnz
push
xchg
insl
mov
movups
add
mov
adc
inc
es
push
jnp
mov
sub
cmpsb
loope
dec
or
ret
or
insb
jge
jecxz
inc
push
cltd
stos
mov
xchg
jne
rcrb
mov
jp
in
mov
mov
in
mov
aaa
outsb
mov
scas
movsb
rcrb
in
push
ss
dec
jbe
or
inc
and
push
mov
or
xor
out
scas
fisubrs
xlat
pop
int
out
fisubl
mov
push
mov
lea
cmp
fs
push
mov
gs
mov
mov
mov
mov
adcb
add
aaa
test
xchg
popa
in
jge
pop
sbbl
ret
insl
out
cmc
and
bsr
inc
cmpsb
sbb
into
jns
jecxz
repnz
jg
jno
mov
fdivl
lock
rcrl
push
push
or
pushf
jle
aas
xchg
je
sahf
xor
roll
sbb
cwtl
repnz
rol
ret
sbb
cmpsb
sbbl
and
clc
test
pop
and
emms
mov
imul
rolb
das
dec
mov
or
addl
sub
and
push
mov
sahf
sbb
xchg
sti
andb
inc
inc
fidivl
cmp
and
dec
push
and
jo
xor
lcall
sub
cmp
loop
insl
hlt
pop
pop
ja
sarl
xchg
mov
shrb
jp
shl
fisttps
ret
ret
mov
jo
pop
mov
shrb
aas
movsb
sub
out
mov
sub
fnstsw
scas
mov
repz
lret
ds
cmp
cmp
mov
lods
or
xchg
mov
or
and
mov
push
rolb
movb
jecxz
stc
mov
gs
xchg
add
fsubrs
cmpsl
mov
mov
outsl
and
imul
cmp
rcll
mov
ffreep
dec
rolb
jno
mov
mov
outsl
arpl
xchg
lcall
adc
adc
fildl
cmp
xor
xchg
sarb
pop
scas
mov
push
and
pop
rclb
mov
cli
rcrb
pop
lcall
or
push
mov
leave
and
flds
ret
inc
push
js
sbb
pop
add
nop
xor
mov
stos
test
mov
shrl
cmp
and
or
xor
fdivs
mov
or
push
rclb
imul
jnp
mov
rorl
dec
cmpsb
loop
cs
ret
mov
jge
subps
imul
ljmp
sar
inc
cli
mov
push
pop
addr16
sub
jge
inc
in
movsb
and
pop
xchg
inc
sub
fstps
or
cmp
jb
aas
rcll
push
push
aaa
scas
pop
push
cmp
mov
mov
mov
rorl
dec
sti
and
mov
xor
and
test
pop
xchg
pop
sub
xor
xor
or
repnz
sub
jb
xorb
sti
shll
cs
adc
daa
mov
cmp
xor
mov
outsb
in
imul
inc
aam
xchg
jnp
shlb
jmp
xor
inc
mov
jmp
cmp
cltd
test
mov
fs
sbb
and
arpl
pop
jnp
fcoms
push
test
push
sub
hlt
es
push
jne
fadds
cltd
or
sbb
ret
inc
cmp
je
scas
shlb
push
popf
imul
xor
jmp
fiaddl
mov
cmpsl
cltd
test
dec
jbe
or
mov
adc
xchg
mov
cmp
cmp
push
jg
aad
imul
or
dec
jle
or
sbb
sub
movb
je
jno
jmp
cmp
dec
jp
pop
mov
stos
adc
push
jb
sbb
jbe
mov
popa
mov
push
push
stos
inc
mov
int
pushf
or
xchg
jbe
jnp
push
push
push
testb
add
jb
push
pop
push
imul
push
add
sti
xchg
jmp
xchg
push
mov
out
mov
adc
mov
fnstsw
mov
or
add
xchg
cs
pusha
cmpsb
push
push
or
test
xchg
call
mov
inc
and
jae
aad
shlb
adc
jno
adc
dec
aam
ss
icebp
outsl
movsl
aas
stos
and
mov
mov
lods
xchg
or
jnp
aas
mov
repz
dec
outsb
mov
mov
mov
cmp
leave
push
lcall
sti
daa
sub
add
inc
dec
ss
jb
ljmp
rcll
out
pop
push
fdivrp
push
xor
mov
xlat
outsb
aaa
rcll
mov
cmpsl
dec
or
mov
adc
fucomp
and
mov
jp
pop
aaa
imull
sub
add
mov
cmpsl
lret
xchg
clc
mov
repz
dec
cmp
sbb
stc
pushl
and
ds
jmp
add
jae
cmp
adc
sbb
mov
jbe
sub
arpl
mov
adc
sbb
jo
gs
aaa
mov
cmc
pop
mov
add
sub
aam
xchg
add
and
and
imul
inc
nop
bound
repz
in
xor
popf
pop
dec
in
xchg
mov
dec
daa
aad
inc
jge
adc
add
mov
repnz
loope
mov
pop
movsb
push
mov
std
loope
mov
test
negb
in
add
test
cmp
addr16
xchg
jb
pop
movsb
js
and
test
pop
ficoml
push
sbb
xchg
lds
xor
xor
push
pop
cmp
ds
outsl
inc
dec
sbb
sahf
push
dec
aaa
notb
out
iret
jecxz
cwtl
call
fidivrl
pushf
jb
adc
cmp
push
mov
adc
xchg
es
scas
loope
divb
inc
jecxz
fistpl
shll
outsb
inc
cmpsl
cmp
push
imul
in
or
arpl
leave
xchg
mov
cmp
mov
iret
std
adc
ds
dec
and
pusha
mov
dec
push
jne
xor
ss
jns
mov
xor
outsb
and
push
aaa
aam
les
or
lea
lcall
sbb
imul
lret
call
fisubs
sub
mov
add
cld
push
sub
lods
stc
stos
sbb
shrw
push
daa
in
gs
mov
repnz
rclb
dec
add
ds
fisttpll
cmp
inc
ds
fisttpll
ss
add
pop
jbe
ljmp
loope
jg
andb
xchg
adc
sbb
hlt
ss
mov
push
sbb
pop
imul
iret
cmp
orl
cmc
push
mov
inc
jle
outsb
sbb
mov
fnsave
dec
pop
mov
pop
cmp
xorl
xor
into
and
or
out
pop
pusha
fildl
out
mov
jl
into
adc
addb
dec
out
or
inc
push
or
stc
jae
or
gs
pop
icebp
mov
mov
test
cmpb
fs
add
sub
lret
push
enter
pop
mov
popa
pop
test
iret
push
jmp
clc
jecxz
mov
or
jg
lret
cltd
sbb
pop
add
loop
pushf
xchg
mov
pop
or
mov
mov
xchg
inc
outsl
dec
and
cwtl
cwtl
add
push
imul
or
xchg
rolb
mov
pop
mov
push
ret
sub
rclb
bound
adc
adc
in
jnp
adc
sub
sub
les
call
pusha
ljmp
add
imul
or
pop
in
add
sub
ljmp
adc
xchg
shll
mov
roll
les
and
faddl
scas
cmp
cmc
push
shr
xor
xor
inc
inc
fnstsw
push
out
mov
mov
jae
push
outsl
mov
adc
js
add
or
jp
out
xor
jp
rorl
mov
cmp
adc
xchg
or
push
sub
in
mov
adc
mov
mov
cltd
gs
jg
sub
dec
pop
jl
std
aas
in
aad
scas
mov
bnd
addb
mov
int3
jle
mov
jecxz
jg
test
fisubl
test
push
jp
or
jp
and
in
push
mov
adcb
mov
nop
mov
call
xchg
push
or
pop
pushf
xor
xor
movsl
stos
pop
cmpsb
imul
sub
mov
add
inc
sub
jp
fisttpll
lret
scas
nop
cmp
cs
and
and
and
ljmp
and
mov
fdivr
es
stc
sbb
push
jns
shrb
or
not
sub
aad
jge
lods
test
adc
hlt
jae
push
jecxz
mov
jnp
loopne
push
or
or
les
notl
inc
mov
pushf
push
sbb
pop
cmpsb
enter
pushf
mov
xchg
or
imul
adc
loopne
mov
bswap
dec
and
xchg
js
loopne
sub
xchg
popl
mov
pop
cltd
insb
mov
leave
mov
leave
add
rclb
adc
cmp
push
mov
lcall
repz
jae,pt
loop
cmpsb
and
mov
mov
cli
or
jp
lret
popa
cmpsl
adc
xchg
push
fwait
cwtl
sahf
mov
es
jp
clc
movsb
or
jmp
out
sti
cs
fldl
popf
mov
std
adc
add
loope
push
enter
or
cmp
mov
loop
dec
aad
inc
push
sahf
push
xor
xchg
test
jae
lds
ret
lahf
js
fcomps
mov
jns
sub
adc
pop
addr16
insl
mov
arpl
xor
gs
imul
cmc
jle
insl
and
lret
sbb
sub
int
repnz
or
shl
fldenv
fildll
and
sub
hlt
push
cmp
ds
xchg
int3
sbb
in
jbe
stos
mov
jnp
xchg
jge
pushl
dec
nop
int
xchg
mov
mov
or
fwait
sbb
fs
cmp
sub
enter
std
test
mov
mov
xor
cli
test
fstl
sbb
mov
popl
es
push
or
sarb
or
add
cmp
jno
adc
push
fisttps
nop
jge
lock
mov
jp
pop
pmullw
pop
lds
scas
cltd
push
mov
or
mov
cmp
inc
or
sbb
mov
cmc
lahf
xor
jns
mov
jmp
movsl
xor
mov
adc
or
xchg
mov
repnz
sbb
negb
sub
in
sbb
push
and
mov
cmp
addr16
xor
jmp
cs
jb
clc
sbb
enter
adc
orl
push
int
cld
out
popa
pushf
insl
fnstcw
lea
cmc
xor
clc
adc
icebp
sub
cwtl
jl
out
jg
hlt
cmp
xchg
call
fdivs
testb
or
fists
xor
ficompl
mov
adc
mov
subb
mov
push
fidivs
lret
adc
push
push
inc
call
jb
gs
rolb
jno,pt
xchg
in
in
cmpb
pop
push
dec
lds
stos
jp
push
cmpsb
shl
ror
pushf
inc
mov
notl
and
movsl
pop
iret
dec
lock
lds
pop
mov
out
pop
pop
jmp
cs
outsl
jecxz
cmpsl
dec
jne
cltd
mov
xor
lods
sti
dec
inc
inc
mov
jo
das
sar
push
cmp
mov
jae
fisubrs
lock
xor
shll
mov
mov
mov
sub
xchg
fsub
fists
aas
outsb
xor
gs
pop
add
xor
inc
int
test
lcall
mov
jo
mov
popl
loope
inc
xchg
add
mov
mov
scas
mov
adc
dec
mov
out
xchg
xor
aam
pop
jo
les
mov
jmp
in
dec
out
or
adc
push
xor
mov
mov
adc
repnz
push
insb
pop
jp
enter
cmc
adc
ret
fld
mov
mov
shlb
or
nop
inc
cmp
nop
pop
add
push
add
jmp
out
fs
daa
push
es
lret
insl
addr16
cltd
and
mov
jge
mov
arpl
popf
sbb
je
pop
or
mov
out
mov
cmp
loopne
movsb
adc
mov
addl
jns
mov
aas
sarl
addr16
lret
adc
arpl
test
addb
das
int
bound
xchg
sbb
push
das
in
ret
lahf
add
mov
lret
cli
jmp
fldl
or
idivl
shlb
mov
cmp
loopne
push
add
push
mov
xchg
cmp
adcl
dec
xor
xchg
pop
sbbl
mov
cmp
test
or
sub
dec
mov
adcb
adc
imul
sbb
int3
xchg
lock
test
ss
aad
fwait
loope
mov
ljmp
js
push
ljmp
push
call
cmpsl
push
xlat
jno
or
scas
pop
movsb
fiadds
jle
adc
fistps
gs
stos
sti
cmp
sbb
and
test
incb
mov
popf
bound
ja
xor
bnd
xchg
cs
pushf
stos
or
je
sub
ret
lahf
mov
mov
mov
push
movsb
sbb
mov
pop
jb
ret
sub
in
test
inc
aas
cmp
pop
je
cli
jl
mov
pushf
push
pop
out
adc
movsl
stc
scas
sbb
out
xchg
or
sbb
dec
loope
jb
pushf
test
cld
pop
pop
fs
orb
pop
push
dec
adc
pop
loope
adc
in
or
inc
jmp
movsb
test
and
add
mov
ja
imul
arpl
lods
andl
fldcw
sub
loopew
xlat
pop
ret
push
xor
or
bound
cld
adc
adcb
inc
jnp
sbb
es
pop
mov
and
lea
sub
lahf
cli
mov
fadds
cmp
jmp
push
and
in
sub
mov
push
cltd
mov
jns
aam
std
inc
dec
aad
xor
push
insb
mov
and
pop
sub
xchg
mov
pop
cld
mov
pop
sub
mov
arpl
lods
outsl
pop
cmpsb
lcall
pop
dec
jp
adc
cmpsl
mov
mov
jo
or
inc
or
rorl
and
cmp
jns
aam
push
lret
jmp
sub
outsl
jmp
ds
and
testb
sti
dec
stc
dec
mov
or
inc
jg
addr16
les
insb
inc
lock
pop
xchg
adc
test
mov
mov
testl
nop
out
daa
dec
mov
sub
xchg
ljmp
mov
out
shlb
sub
or
adc
cltd
pop
negl
dec
lahf
pop
push
jmp
push
mov
clc
sbb
scas
jge
pop
jl,pt
arpl
pop
push
js
inc
loopne
incl
lret
cmp
scas
lahf
out
xchg
in
cli
mull
and
push
add
adc
cmp
jp
push
ret
loop
jg
push
cmp
out
test
enter
popa
mov
das
or
push
mov
mov
and
pop
in
ror
imul
xchg
test
cmp
test
lret
mov
orl
mov
rol
cmp
mov
xor
lahf
aas
adc
sub
push
xchg
or
mov
and
mov
jno
cwtl
sbb
adc
cmpsl
mov
dec
loop
jns
xchg
inc
das
push
das
cmc
in
rcrl
aas
rorl
push
jmp
daa
mov
add
dec
cmpsb
dec
mov
push
cmp
mov
hlt
xchg
rcrb
notl
stos
rorl
push
push
fs
mov
lret
test
or
ja
imul
or
out
xchg
movsl
mov
push
or
mov
popf
fucomip
ss
cwtl
jecxz
aas
cmp
out
cmp
pop
pushf
jmp
xor
sbb
pop
cmpsb
repz
aad
je
xchg
pop
fistpl
add
mov
jg
push
mov
mov
aam
adc
mov
lea
xor
into
aam
in
adc
sbb
push
inc
lret
sbb
xchg
sbb
dec
ds
sahf
inc
adc
gs
ljmp
sub
push
sub
add
bound
test
inc
push
adc
pop
push
in
cli
cmc
jge
or
lea
mov
call
cmpsl
jp
loope
mov
jg
sar
push
scas
cmp
jns
mov
pop
sbb
outsb
mov
inc
cmc
cmpsl
in
add
std
jo
insl
insl
jne
rep
idivl
leave
sti
and
sbb
mov
adc
mov
fs
shlb
inc
jno
mov
jbe
pusha
addl
sti
mov
jbe
mov
aaa
inc
movsl
push
and
sbb
loope
popf
std
repz
push
mov
mov
repz
in
fstps
jae
sarl
lods
cmp
aas
sbb
cltd
lea
rcl
xor
sahf
jae
dec
inc
xchg
fmul
pushl
mov
lods
dec
test
xchg
hlt
outsl
loope
stc
test
inc
mov
negb
cmp
mov
add
mov
mov
rcrb
sub
mov
and
loope
cmp
cltd
mov
pushl
callw
xor
les
jns
mov
push
sub
imul
mov
sahf
outsb
jnp
push
add
jp
scas
mov
hlt
out
or
hlt
mov
cmc
cltd
xchg
pop
lret
bnd
outsl
add
pop
sarl
xor
xorl
sub
pusha
aad
hlt
jge
cltd
and
sbb
pop
jl
jmp
cmpsb
jnp
icebp
cmp
inc
sbb
push
mov
js
sar
scas
sub
testb
jmp
and
mov
cmp
dec
mov
push
fwait
xchg
mov
pop
fmuls
adc
adc
lods
in
mov
in
pop
pop
add
cld
xorb
dec
test
lret
mov
jae
xchg
fcompl
fmull
push
out
xchg
jge
mov
push
inc
xchg
mov
xchg
mov
imul
iret
negl
mov
inc
mov
out
ret
fcom
mov
mov
sub
movsl
ret
ss
sub
divl
inc
mov
jle
xor
mov
sbbl
pop
adc
or
sbb
add
inc
imul
sbb
xchg
xor
pushf
add
push
mov
dec
cmp
mov
das
add
es
jecxz
pop
sbb
push
adc
inc
call
push
loopne
mov
mov
push
das
call
in
ljmp
lods
out
lret
shrb
cmc
jns
cld
or
cmpsl
inc
mov
bound
fistps
jnp
jecxz
daa
dec
mov
clc
jo
call
add
aad
rclb
add
and
test
sahf
jnp
icebp
popa
pop
adc
and
repnz
outsb
iret
fsubrl
call
mov
loop
clc
arpl
cmp
fnstenv
dec
cltd
xchg
cmp
loop
xchg
mov
sub
pop
repnz
sub
and
loop
sahf
fdivrl
sub
xchg
and
inc
push
cmp
loopne
sub
test
or
dec
sub
loopne
es
je
and
aad
dec
inc
out
adc
and
pop
leave
mov
adc
mov
sbb
jae
and
xchg
and
sbb
hlt
sti
push
dec
inc
mov
jbe
jl
xchg
rcr
mov
bnd
sbb
xchg
icebp
and
enter
loope
xor
push
int3
ficoms
ss
pop
aaa
xor
ja
dec
cli
mov
jp
pop
and
inc
ss
repz
sub
sarl
aad
sbbb
and
scas
outsb
mov
xor
ja
dec
clc
push
es
push
mov
pop
int3
out
and
jge
repnz
mov
jbe
jb
inc
sbb
sbb
ret
cld
xchg
int
inc
ficoms
ret
shll
push
xor
sub
sub
das
pop
insl
jp
sub
sub
pop
dec
loope
stos
xchg
hlt
xlat
test
loopne
push
or
outsb
les
cmpl
pop
lock
push
scas
shrb
cmp
cmp
xchg
addr16
int
movsl
inc
mov
mov
push
cmp
jnp
push
lcall
or
xor
jno
xor
mov
cltd
clc
and
xor
popa
push
push
in
add
mov
jg
jnp
xchg
add
pop
lret
sub
xor
push
mov
popa
bndldx
sbb
movsb
xchg
push
movsb
in
ret
sbb
outsl
cmc
jo
into
mov
mov
flds
mov
or
jp
pushf
ret
cmp
out
inc
sbb
or
pusha
mov
dec
in
bound
adc
push
pop
rorb
inc
inc
out
loopne
cmpsb
xchg
mov
in
xchg
inc
or
or
jno
outsb
push
out
inc
fnstenv
jbe
xchg
sarb
nop
imul
into
sub
lea
cs
ds
sti
fiadds
or
and
loop
pusha
xor
lds
mov
lock
sub
xchg
out
push
xchg
xor
addb
bound
or
mov
popf
cli
je
push
faddl
or
pop
movsl
repz
jno
es
sbb
inc
ljmp
adc
and
stos
andb
dec
mov
clc
fisttpl
or
push
stos
pushf
xchg
insb
std
rcll
inc
rcrl
mov
add
cmp
leave
mov
dec
pop
pop
cwtl
ss
cmp
and
jmp
js
or
sbb
add
sub
and
in
outsb
mov
imul
pop
push
out
inc
jle
sub
jae
mov
cmc
mov
xor
mov
mov
sbb
insb
xor
fwait
cld
movsb
or
cmp
fwait
popf
clc
jp
cmp
sub
xchg
pop
pusha
sahf
cmc
imul
test
lcall
xor
mov
sbb
out
mov
lea
divl
push
adc
cmpsb
or
dec
cwtl
sbb
sahf
nop
cmp
jp
xor
pop
outsl
daa
fs
xchg
ja
push
xchg
jg
test
lret
pop
out
xor
and
xchg
inc
push
xchg
arpl
xchg
jmp
sbb
and
test
cmpsl
or
mov
push
xchg
test
mov
mov
xchg
and
std
push
add
pop
mov
mov
adc
adc
imul
insb
mov
sbb
cmp
call
leave
adc
shrl
outsb
adc
mov
dec
or
aad
jecxz
mov
cltd
ds
out
hlt
sbb
pushf
push
clc
sub
jle
mov
xacquire
xchg
push
mov
int3
or
scas
enter
sub
pop
or
bnd
sub
loope
push
jno
faddl
pop
ljmp
cltd
dec
xor
pop
pop
lea
adc
xor
xchg
pop
lods
push
xor
ret
push
icebp
cmp
pop
add
and
xchg
fdivs
out
inc
and
cmp
movl
pop
stc
fsubrs
repz
out
imull
pop
mov
xchg
fwait
jbe
lret
lret
mov
ret
cli
scas
pop
ret
ja
jecxz
add
jecxz
xchg
mov
add
pusha
nop
ds
nop
test
xchg
xor
scas
mov
dec
xchg
mov
or
les
sub
cmpsl
inc
inc
mov
adc
mov
sub
dec
dec
dec
in
dec
push
dec
cmpsb
mov
pop
mov
mov
mov
es
sbb
in
mov
jge
stos
ja
jns
mov
mov
mov
shlb
gs
or
int
mov
push
shlb
dec
jecxz
enter
fmul
inc
leave
addr16
stos
lods
icebp
jmp
jg
and
ds
push
sub
lea
sahf
bndstx
mov
aaa
jle
inc
lods
push
int3
jl
hlt
jmp
jbe
xchg
loopne
arpl
cmp
push
add
lds
dec
mov
mov
inc
mov
pop
jmp
in
cmc
mov
loopne
fmuls
cmp
mov
cmp
or
sbb
dec
lret
xor
xor
cli
fstpt
or
loope
dec
cmp
dec
or
fdivr
aaa
scas
bnd
push
data16
xor
or
sbb
pusha
cmp
fwait
pop
repz
and
subl
test
loop
mov
jo
loope
sbb
fldcw
push
pop
mov
aaa
add
stc
stos
mov
xor
lods
test
sbb
or
dec
mov
out
mov
in
jl
dec
pop
mov
cld
fstpt
dec
mov
addb
test
pop
inc
mulb
ja
je
js
dec
add
in
nop
sbb
fwait
cmp
cmpxchg
xchg
out
lods
or
dec
mov
lahf
roll
sbb
imulb
das
call
mull
scas
jo
cmp
and
loope
popf
mov
mov
das
pop
adc
mov
cmpb
shl
jecxz
xor
ja
or
and
cli
in
icebp
or
sub
jmp
sub
sahf
repz
adc
sub
push
jnp
push
sub
out
add
push
out
int3
and
mov
ljmp
fildl
push
sub
mov
inc
lahf
test
dec
test
loope
dec
fcomi
cmpsb
and
add
rorl
nop
mov
xchg
dec
xchg
pop
int3
add
out
cs
pop
jns
test
popf
in
pop
pop
jg
cmp
in
adc
lret
cmpsl
iret
insb
adc
sbb
sbb
arpl
pop
mov
jecxz
jp
mov
pop
out
lret
fidivs
mov
loop
out
pop
push
stos
add
stos
mov
lock
mov
xor
adc
std
stc
es
mov
cli
mov
test
loop
add
add
pop
test
in
jns
scas
xchg
loop
lock
gs
jb
adc
mov
xchg
pusha
test
adc
fidivl
inc
cli
test
jmp
sub
jl
test
cmpsb
test
and
out
popa
mov
adc
and
mov
sub
cwtl
jno
add
stc
cmp
loope
popa
add
sub
cmp
fidivrl
fnstsw
repz
add
sbb
lods
push
dec
and
out
jp
fcoms
and
gs
ret
icebp
or
mov
ffree
push
mov
rcrb
das
in
adc
pushf
mov
fsubr
sub
lret
or
ljmp
scas
data16
dec
movsl
into
and
stos
mov
test
inc
clc
ds
add
nop
and
sub
fcoml
jecxz,pn
daa
loopne
mov
adc
pusha
xor
scas
and
xchg
adc
inc
xchg
xlat
repz
add
popa
bnd
jno
inc
or
int
hlt
sbb
iret
std
mov
push
ret
icebp
out
test
lret
xor
leave
pop
pusha
in
jnp
pop
in
addr16
jmp
fs
jg
les
movsb
pop
cs
mov
mov
xchg
dec
sub
mov
pop
pop
xorb
inc
ds
mov
push
ja
or
test
mov
mov
push
mov
xor
push
add
push
inc
mov
add
loop
movsl
loope
xchg
adc
pop
nop
scas
or
mov
loope
jbe
out
inc
in
adc
in
test
pop
fs
adc
popa
mov
cmp
test
add
in
mov
jbe
out
pusha
int
jbe
in
jl
sahf
mov
jp
cmp
cmpsl
insl
int
fiaddl
inc
jbe
mov
fwait
sub
sti
insb
pop
pop
dec
inc
and
or
add
xor
mov
fwait
mov
arpl
sbb
rcrb
and
imul
mov
mov
inc
ror
mov
mov
jne
or
incb
fdivl
shll
mov
dec
dec
push
dec
lcall
adc
or
std
adc
addr16
xor
sbb
dec
js
pop
mulb
into
scas
imull
push
jno
sbb
out
insb
sar
dec
pop
jno
int
sbb
jl
push
sbb
insl
lea
pop
jb
xor
mov
mov
gs
xor
xchg
out
insb
stos
mov
xchg
adc
icebp
sbb
xchg
push
xchg
xchg
pop
je
pop
pushf
xor
mov
or
mov
xor
outsl
pop
push
pop
shrl
aaa
cmp
push
cmova
inc
shl
mov
mov
mov
xlat
xchg
mov
and
cld
jns
jae
insl
jne
cmp
push
mov
cld
add
sbb
cmp
ss
in
cmpsl
mov
imul
cmpsb
rcrb
cld
gs
dec
xchg
mov
aad
movsl
enter
push
decb
inc
movsb
or
push
xchg
test
test
inc
push
add
xor
cli
sbb
pop
jle
pop
pop
push
and
pop
in
cmpsb
sbb
mul
test
scas
cmc
cltd
nop
mov
inc
arpl
mov
inc
adc
xchg
pop
lret
lock
test
mov
mov
cmp
push
and
and
int
jecxz
loopne
movsb
js
rol
cmp
mov
fistl
or
pop
cmp
rorl
rorl
out
stos
and
int
divl
push
xor
movsl
add
and
mov
dec
leave
push
inc
cld
pop
out
add
sbb
dec
loopne
push
std
dec
hlt
ja
stos
push
add
pop
push
movsl
rcll
test
mov
sbb
stos
push
mov
xlat
jp
push
jecxz
subb
adc
mov
mov
sbb
cli
cmp
test
dec
jg
xor
pop
dec
xor
mov
pop
jbe
test
jae
pop
sti
jae
sub
xor
and
daa
jecxz
mov
add
call
xchg
mov
push
fsts
add
in
pop
es
adc
shll
add
stos
mov
xor
andb
add
js
call
mov
das
xor
push
mov
mov
push
popf
aas
dec
jns
inc
jb
sbb
mov
sub
add
push
aas
sbb
jg
fimull
lock
aad
lods
fsubs
push
das
in
ds
push
mov
outsb
repz
sbb
sti
test
pmulhuw
out
in
sti
push
out
movb
les
bound
sbb
pop
xchg
outsl
push
inc
inc
nop
pop
je
movsb
cld
pop
inc
ret
mov
dec
imul
add
xchg
shlb
lret
mov
mov
shll
and
and
addl
lldt
cltd
push
pop
mov
add
pop
loop
negb
lods
push
lahf
jg
lea
adc
push
lock
push
mov
pop
shrl
int3
enter
and
jecxz
pushf
jle
sub
in
cmpsb
loop
pop
pop
imul
xchg
pop
mov
insl
out
in
sbb
out
mov
cmp
sbb
imul
jmp
imul
jo
pusha
mov
pop
or
lcall
push
cmp
inc
je
jmp
jl
mov
sbb
xor
xchg
ss
es
clc
lock
pop
inc
dec
cld
cmpsb
aas
imul
jmp
and
pop
es
push
scas
dec
dec
es
mov
push
cli
sbb
xchg
popa
rolb
ds
lock
cmpsl
xchg
ficoml
jge
cs
xchg
popf
mov
mov
adc
mov
mov
and
addl
jne
lock
sbb
push
mov
pushf
push
mov
repz
xchg
xlat
push
mov
or
or
sub
adc
push
es
push
push
test
fistps
inc
movsb
mov
insl
add
mov
cmp
lahf
cmp
pop
fs
pop
int
rcr
repz
movsl
push
cmp
sub
jbe
sub
and
arpl
sbb
in
push
not
mov
push
aas
cmp
mov
iret
dec
or
fwait
cmp
fdivl
add
inc
jb
inc
mov
xchg
xlat
pop
enter
mov
jae
lahf
sub
aam
push
loop
cs
sti
xchg
dec
sahf
decl
mov
cld
leave
clc
jb
lahf
jl
add
iret
adcb
jae
lahf
and
cmp
and
add
in
mov
cli
xor
leave
mov
add
mov
mov
sbb
jns
popf
or
jp
cmp
ja
xchg
pop
bound
js
mov
xor
pushf
add
sbb
cwtl
iret
std
sbb
mov
mov
mov
dec
insb
mov
dec
insl
sub
inc
aam
push
xlat
shll
sub
lods
test
mov
lahf
lea
lcall
lods
sbb
inc
inc
mov
push
std
mov
mov
push
in
adc
jae
or
hlt
inc
and
cs
pop
inc
test
enter
ja
xor
jne
js
jo
js
jns
fcoms
xchg
mov
in
inc
jb
xor
hlt
cmp
imul
sub
mov
sti
lock
enter
cmp
into
xchg
ficompl
jmp
adc
lods
cmpsb
stos
inc
sahf
mov
xor
pushf
fs
lods
or
add
js
cli
mov
aam
pop
and
jmp
cmp
xor
dec
xchg
mov
iret
insl
fucom
xchg
mov
dec
xchg
mov
mov
mov
mov
out
cli
cwtl
adc
cwtd
or
mov
movsl
mov
les
aad
jne
pushf
add
dec
xchg
fmuls
outsb
xchg
inc
test
xchg
icebp
or
mov
xor
fs
mov
cmc
xlat
and
add
and
sub
js
movsl
mov
xor
addr16
push
es
mov
inc
inc
push
lds
add
sbb
outsb
inc
cwtl
jns
sub
adcl
adc
arpl
mov
dec
pop
jp
push
jmp
jbe
dec
mov
xchg
or
xchg
lds
fstl
xor
addr16
cmp
inc
je
test
mov
in
repz
ss
pop
push
shlb
popa
sbb
or
out
aad
data16
std
mov
in
mov
jecxz
les
pop
cmpsl
push
imul
lods
sub
push
pop
pushw
sbb
setg
int
xchg
subb
jno
or
fildll
in
or
mov
mov
sbb
mov
cld
out
jae
adc
jne
cmp
xchg
sub
pop
sub
mov
pop
rcll
cwtl
mov
int
push
add
nop
out
scas
adc
daa
mov
jge
cmp
or
jecxz
jbe
lock
add
aam
js
sub
and
and
mov
rolb
stc
cmpsb
andl
call
data16
pop
push
mov
cmp
mov
adc
push
adc
das
iret
add
test
xchg
ret
sahf
mov
repnz
ror
lcall
mov
cmpsb
adc
mov
scas
cmp
cs
sub
outsl
inc
adc
mov
inc
xchg
jg
fs
push
pop
arpl
mov
xchg
cmp
xchg
push
ret
sub
out
and
test
jb
outsb
cmp
sub
pusha
adc
dec
sbb
fnstenv
in
hlt
cli
lcall
mov
push
ret
xchg
dec
add
xchg
lahf
adc
and
ljmp
dec
in
jl
sbb
jmp
jo
test
popf
mov
pop
rorb
scas
test
push
call
daa
nop
fistpll
mov
pusha
insl
mov
inc
test
or
icebp
xchg
jae
lret
bound
mov
mov
push
lods
pop
pop
std
mov
add
jno
push
mov
rclb
xchg
imull
stos
mov
mov
and
mov
mov
pusha
es
cmp
lret
push
mov
idivb
in
insb
mov
xor
call
nop
and
fs
mov
das
mov
jecxz
xor
xchg
pop
xchg
mov
gs
sub
icebp
lcall
cmp
fldl
xor
cmc
fcoms
les
xor
outsl
adc
jmp
movsb
aam
and
out
xchg
iret
scas
repnz
cs
js
fcoml
sub
pop
test
pop
cltd
adc
pop
push
lret
adc
ret
sub
scas
or
jno
adc
dec
xor
mov
cmp
out
imul
jp
or
iret
sahf
inc
jno
mov
jl
cmp
stos
xchg
aaa
ficoms
cmc
pop
jecxz
push
xchg
mov
cld
jg
jl
into
andb
add
sub
cs
lods
mov
and
fiadds
inc
test
ja
sub
sbb
inc
inc
mov
cmc
cmp
lds
inc
jno
ffreep
fsub
jnp
scas
nop
jns
mov
sub
test
add
adc
add
lret
xchg
inc
cmp
test
stos
and
or
mov
sti
loop
mov
lret
rcl
inc
enter
push
popf
lods
jae
mov
push
pop
xchg
add
int
lock
mov
xor
mov
xchg
adc
enter
mov
lret
mov
hlt
outsl
xchg
je
sbb
stos
mov
popf
jmp
or
push
dec
jae
add
or
pop
int3
mov
dec
faddl
mov
dec
into
imul
shrl
or
inc
out
jno
cmp
mov
out
mov
repz
xor
mov
aam
or
mov
inc
mov
mov
cmc
jo
pop
fnstenv
js
mov
incb
rep
xor
lods
sub
cli
rorb
xchg
cld
mov
out
ja
mov
ljmp
stos
sub
push
sub
shlb
jno
jg
adc
leave
jmp
mov
mov
roll
and
dec
jns
mov
andl
sub
int3
pop
movsb
lahf
add
hlt
aad
scas
xor
scas
imul
repz
test
add
xchg
ret
add
cmp
mov
imul
inc
out
out
dec
push
mov
stos
sub
rclb
mov
xchg
sbb
adc
sbb
push
mov
ret
push
cmp
lcall
je
xor
stos
dec
cmp
push
push
mov
leave
lahf
inc
cmp
mov
clc
pop
jns
xlat
repz
subb
test
adc
add
mov
hlt
xchg
cmp
mov
in
jmp
into
scas
popf
cs
mov
popa
dec
lds
dec
and
xor
ja
pop
adc
jp
add
dec
push
scas
int
push
mov
sub
scas
xor
lods
ja
and
stos
sub
jge
sbb
xlat
ret
jo
pop
es
xchg
xchg
cmp
mov
fimull
gs
pushf
jg
lcall
adc
movsb
cmp
test
adcb
shlb
ret
into
pop
cmp
mov
fisttpll
pop
inc
cmp
cmp
dec
popa
push
cmp
push
or
mov
pop
or
repz
shrb
mov
or
add
inc
or
cwtl
mov
fcom
js
cmpsl
xor
cmc
decl
sahf
xchg
lcall
mov
dec
cmpsl
icebp
mov
xchg
adc
xor
sbb
lret
leave
xor
jl
pop
push
mov
mov
outsb
dec
mov
pop
das
cmpb
and
push
fwait
pop
pop
rcrb
inc
in
hlt
sbb
call
dec
jns
outsb
or
xor
loop,pn
sbb
icebp
insl
outsb
cwtl
push
fbstp
repnz
shlb
sub
mov
pusha
add
pushl
lret
mov
pusha
pop
pop
xor
icebp
inc
in
aam
in
fldl
sarb
fcoms
in
mov
xchg
imul
mov
fistpl
mov
imul
scas
setno
jg
and
push
imul
and
lods
adc
mov
cld
dec
cwtl
xchg
jb
loope
lock
ja
mov
mov
sub
mov
insb
rcr
mov
sbbb
cmp
mov
adc
dec
fidivl
cmp
rcrl
and
mov
cmp
cli
loope
leave
sbb
add
lock
in
jbe
or
inc
rol
mov
popa
out
jo
pushf
lcall
jbe
mov
sub
imul
sub
jbe
arpl
adc
jecxz
add
push
movsl
movsl
jae
push
fnstcw
nop
fidivs
mov
cltd
int
mov
adc
dec
fsubs
push
cmp
bound
ss
fimuls
imul
lahf
adc
out
jge
pop
and
lcall
dec
push
sbb
fcomps
test
fisttpl
xchg
adc
adc
dec
xchg
sbb
movsl
outsb
enter
jno
imul
cltd
and
pop
push
in
rolb
sahf
inc
sahf
dec
cmpsb
fldcw
jg
movsl
adc
loopne
cwtl
mov
pop
cmp
pop
and
scas
lret
cmpsl
pop
push
dec
fcmovnbe
sarl
das
cmpsl
mov
xchg
add
js
adc
mov
mov
add
idivb
push
jno
push
adc
hlt
popf
jne
sahf
push
fiaddl
inc
repnz
fwait
nop
push
shrb
sub
mov
xor
in
mov
pop
inc
sbb
adc
lods
push
xchg
aaa
jno
out
mov
ret
les
fimuls
push
mov
cmpsb
pop
loopne
es
push
in
adcb
sub
ss
cmp
in
fistl
cmp
dec
pop
cmp
arpl
jl
mov
test
and
stc
insl
cmp
xchg
and
movsb
in
inc
ds
lcall
inc
clc
jge
jmp
cmp
mov
cmc
mov
push
out
sarb
pop
test
xchg
daa
jge
sub
jns
jecxz
and
adc
and
stc
popf
sbb
mov
sbb
jecxz
lcall
mov
addr16
lock
test
in
lret
in
fisubl
fisubl
mov
icebp
jg
adc
mov
adc
ds
cmp
cwtl
cwtl
jg
add
insb
lock
sub
inc
gs
jge
rorl
stos
in
pop
mov
mov
jg
mov
xor
inc
mov
jbe
stos
and
add
das
pop
and
xor
jge
bound
mov
ja
xlat
inc
jmp
ret
xchg
pushf
insw
or
repnz
fs
adcb
jbe
push
xchg
mov
and
stos
inc
pop
lods
pop
addr16
mov
arpl
xlat
shrb
dec
and
in
push
mov
outsb
sub
jmp
xor
dec
mov
ljmp
xchg
xchg
mov
popf
cmp
adc
int
mov
lods
gs
cs
fwait
mov
push
aad
cwtl
das
clc
jns
lds
sub
jo
adc
iret
xor
roll
je
pushf
push
adc
jo
pop
mov
cmp
cmp
sub
sub
lret
mov
jno
sub
ja
lock
decb
dec
inc
rcll
sub
repnz
and
icebp
rclb
fsubrs
mov
pop
fsubl
jne
mov
out
push
ds
jns
pop
lcall
mov
dec
jbe
xchg
std
jno
jmp
xor
jne
mov
clc
and
mov
lods
and
inc
inc
push
adc
jg
jg
js
jnp
cmp
orl
dec
out
and
inc
mov
mov
fsubs
sahf
jnp
or
aam
and
scas
mov
stos
and
add
pop
call
mov
xchg
jae
ret
js
in
jae
xchg
xor
lret
outsl
fisttpl
sbb
add
fsubl
hlt
cltd
inc
bound
ret
inc
loop
push
out
into
mov
out
fs
dec
not
clc
dec
dec
sub
fstl
in
xchg
mov
sbb
dec
icebp
dec
xchg
xor
sbb
jnp
std
imulb
mov
stos
lret
add
repnz
je
out
push
xor
push
pop
dec
rcl
repnz
hlt
test
push
cmp
jno
sarl
test
add
adc
push
mov
jnp
out
outsl
fsqrt
adcb
adc
or
push
outsl
fldenv
xor
fwait
cs
cwtl
pop
mov
pushf
rclb
inc
jno
jp
std
or
xchg
xchg
add
mov
popa
dec
loope
in
jno
hlt
insl
jae
mov
mov
aaa
pushl
iret
push
mov
out
mov
sbb
mov
mov
mov
pop
cwtl
lahf
iret
mov
popa
add
xchg
xchg
loopne
jge
add
and
xlat
enter
loop
add
mov
test
fucomip
aas
sub
jnp
mov
inc
icebp
movb
ja
repnz
xchg
aaa
fidivs
push
push
mov
int
rorb
pop
lods
inc
mov
loopne
orb
rclb
cld
sti
fstpl
popf
outsl
ja
sub
cmpl
mov
xor
mov
cmp
mov
lds
lcall
sbb
fwait
mov
inc
les
mov
mov
jg
dec
imul
xchg
cmp
and
adc
in
mov
fcomps
dec
cmpl
jl
scas
call
add
or
sbb
add
pop
lcall
cltd
fdivrl
in
rorl
movsb
shll
pmulhuw
mov
dec
xor
xchg
inc
cmp
pop
testl
xchg
cmp
jg
xor
dec
xor
fdivrs
ret
cli
mov
mov
fimuls
pop
mov
pop
jno
dec
fs
inc
negb
mov
lcall
push
sbb
jg
or
movb
xchg
and
les
pop
gs
jmp
mov
gs
test
rcll
in
cld
ja
outsb
bound
jo
and
orl
lock
xor
ret
cwtl
inc
in
jnp
xor
jnp
lea
loopne
pop
shlb
sub
jbe
ret
sub
dec
clc
mov
addb
push
dec
scas
nop
and
lret
dec
mov
xchg
aas
mov
and
popl
pop
mov
cwtl
mov
and
lock
xchg
and
adc
notb
sub
pop
push
nop
adc
xor
mov
stos
lahf
arpl
cmp
scas
xor
fisubs
dec
xor
cmp
pop
test
sub
pop
push
and
out
push
bnd
xchg
popa
cmp
mov
or
fsubrs
jmp
dec
xlat
pushf
dec
stos
ret
push
adc
push
inc
fadd
fldenv
adc
call
and
lret
or
nop
and
enter
fdivrl
insb
lret
inc
pop
mov
push
bound
pop
fidivl
cmc
gs
sbb
stos
movsb
sahf
add
mov
cmp
adc
leave
je
rorl
or
adc
mov
loopne
cmpsb
lods
bnd
sti
pop
aam
sbb
xchg
xchg
dec
lret
jne
pop
jns
inc
cmp
mov
dec
je
push
inc
orb
fcmovu
aam
lods
incb
inc
xor
leave
mov
jae
mov
popa
dec
mov
sbb
cmp
cld
pop
mov
push
out
lahf
lret
and
nopl
push
fcomps
fidivrl
mov
jmp
mov
test
pop
dec
push
cmpsl
add
or
add
test
nop
mov
sub
shr
fnsave
mov
adc
pop
stos
popf
inc
xlat
adc
dec
push
das
sub
pop
aam
jb
fnstcw
ja
xchg
push
push
xchg
sub
xchg
subb
sarb
ret
xchg
mov
in
sub
cmpsb
rorl
fbld
xchg
mov
push
aaa
aas
jg
cmp
ss
scas
mov
xor
aam
cld
add
inc
cltd
dec
ret
mov
mov
mov
jecxz
cmp
dec
xchg
add
rcrb
fucomi
ficompl
lods
cld
adc
lock
inc
stos
icebp
adc
fbstp
jns
aas
mov
stos
xorb
sahf
test
int
pop
push
pop
lret
ret
sbb
adc
shll
bound
and
fisubrl
pop
sub
daa
js
pop
mov
popa
fs
daa
push
inc
add
out
outsb
push
test
ljmp
test
rol
aaa
loope
test
xor
sbb
mov
movsl
aas
scas
cmp
rol
xor
aam
jae
xlat
sbb
mov
inc
inc
fmull
dec
mov
imul
popa
cs
dec
daa
imul
dec
jbe
aam
and
lods
xchg
push
bound
es
add
inc
stos
cmp
cli
outsl
mov
dec
or
push
and
pop
fmul
jge
mov
repnz
ret
mov
adc
or
pop
cmp
and
lret
dec
outsl
js
jmp
lea
jp
out
mov
pop
push
cmpl
bnd
fwait
push
xchg
push
clc
push
iret
jbe
repz
add
and
push
roll
push
dec
jno
dec
jl
scas
cmp
test
jo
push
fnstsw
shlb
push
xor
popa
sub
rol
jmp
inc
or
call
pop
inc
xchg
push
sti
fstps
mov
push
fs
cmp
adc
out
js
sbb
ret
mov
out
daa
arpl
loope
mov
aad
add
mov
addl
xlat
or
jbe
loop
loopne
jae
int3
xor
xor
jmp
xchg
ret
pop
out
into
mov
fcoms
pop
test
leave
push
adc
mov
or
or
xor
xor
jmp
jb
test
jno
pop
adc
fmuls
sbb
jmp
jle
call
fnstsw
insb
idivl
add
mov
rorl
out
add
cltd
mov
jp
xchg
leave
aad
adc
leave
add
mov
jno
and
frstor
into
dec
ss
fbstp
fs
mov
inc
rolb
mov
mov
adc
je
insl
mov
fidivl
cmp
or
xchg
movsb
sub
dec
mov
mov
mov
cmp
call
inc
adc
pop
pop
out
or
and
jmp
xor
nop
mov
jle
fwait
and
sub
mov
nop
mov
mov
xor
sub
pop
jae
lds
add
xor
cmp
pop
cmp
fdiv
jne
imul
jmp
push
pop
gs
xchg
xor
fistps
add
xlat
mov
jns
mov
in
pop
pop
mov
movsl
insb
cld
jecxz
int
std
stos
adc
test
jmp
add
push
add
mov
dec
push
push
mov
sub
pop
sbb
mov
outsl
push
jnp
jg
in
bound
rolb
cmp
lahf
je
fwait
jg
push
push
loope
jmp
ficoml
inc
inc
xchg
mov
iret
out
scas
or
rclb
and
mov
adc
xor
and
fstl
inc
push
out
ljmp
insb
xchg
mov
or
ficoms
stos
jecxz
repnz
sbb
sub
or
cmpsb
rcrb
sub
cmp
movd
sti
cli
stos
aad
sbb
mov
out
xor
jb
sub
cmpsl
dec
or
ljmp
jle
call
jecxz
jmp
cmp
mov
fistl
pop
jne
add
in
mov
rcr
ret
cmc
push
movsl
sub
loopne
imul
rorl
add
sti
inc
inc
ret
adc
rolb
inc
testb
add
jge
icebp
insb
jecxz
repnz
cmp
stos
fsubs
sbb
xor
dec
push
jl
outsl
leave
scas
mov
push
nop
ret
idivl
cmp
jbe
or
ficompl
or
in
xchg
lock
pop
dec
sub
mov
shlb
movsl
cmc
loope
cli
int
cmp
imul
sub
xchg
sti
mov
push
faddl
xchg
push
push
jge
mov
inc
test
je
mov
sbb
bound
les
xchg
xor
addr16
lods
ljmp
xchg
out
mov
adc
pop
xorl
lds
addr16
xor
mov
stos
pusha
lcall
pop
jg
sub
faddl
cmp
into
mov
jp
ret
pop
mov
mov
push
push
cmp
subb
cmp
daa
mov
mov
pop
pop
jge
lahf
xorl
mov
lret
inc
ret
dec
int
jns
inc
xchg
xor
cmpsl
add
push
negl
repz
mov
and
mov
dec
js
pop
xchg
mov
push
cs
push
xchg
jae
push
push
jno
push
and
sahf
inc
cmc
xor
jns
sti
xchg
pop
pop
push
xchg
mov
inc
popf
filds
xchg
das
jno
es
js
push
inc
xor
add
movsb
mov
adc
xor
out
jecxz
out
sbb
inc
push
setg
jo
ja
xor
hlt
enter
push
btsl
out
cmp
jnp
pop
mov
dec
in
mov
iret
rorb
ret
lcall
in
push
or
mov
roll
into
je
push
insl
sbb
out
add
pop
arpl
sub
cmp
jl
sbb
adc
push
sbb
push
jge
mov
test
sub
add
adcb
jmp
mov
mov
loop
ret
gs
aaa
mov
mov
je
dec
or
cmp
sahf
out
in
dec
xchg
int3
sub
cltd
inc
mov
xchg
pop
push
insl
out
xorb
cmpsl
or
fwait
sarb
xor
jl
lods
mov
xchg
pop
pop
mov
cmpb
ret
imul
movsb
jns
mov
in
mov
mov
cmp
xor
push
jecxz
mov
paddd
sub
outsl
fdivl
xchg
lahf
aam
mov
cmp
jmp
pop
add
rorl
mov
aad
test
loop
mov
sub
and
lods
pop
sbbb
iret
jb
sbb
mov
jle
add
adc
lds
add
ret
sbb
clc
les
mov
push
mov
aaa
push
mov
loopne
test
inc
add
repnz
jp
add
out
and
mov
loop
int
sbb
dec
and
xchg
out
sub
pop
clc
inc
pop
jnp
cmp
xchg
jl
mov
mov
in
pop
dec
mov
adc
inc
fnclex
jae
fidivs
push
shll
int3
or
enter
std
inc
xchg
jae
inc
xchg
mov
insl
sahf
mov
ss
insb
ja
jb
fisubs
dec
mov
pushf
mov
or
sbb
adcl
rclb
sub
dec
mov
pop
mov
cmp
js
adc
imul
dec
or
lea
sahf
ret
sub
jle
sbb
lea
xchg
repz
int3
mov
push
je
imul
pop
sbb
xlat
mov
xchg
sbb
loopne
push
mov
sub
fimull
xorb
loop
loop
sbb
lahf
orb
loope
jp
imul
aad
insl
test
inc
cmp
imul
cmp
leave
mov
xor
sub
jmp
jecxz
mov
lods
xchg
pop
cmp
push
cmp
fmull
jp
shlb
fdivs
out
outsb
hlt
push
imul
fnstenv
mov
out
jnp
cmc
and
adc
adc
lods
or
movsb
mov
jecxz
shr
xlat
shrb
cmp
sbb
cmp
jae
jns
inc
or
xchg
xlat
lods
sar
xor
out
xchg
push
fnsave
mov
mov
sbb
mov
loopne
fmull
cmp
dec
fnstenv
dec
ss
jb
in
stos
cmp
popa
xor
fidivl
leave
jge
push
je
push
fmull
mov
fcomi
arpl
inc
scas
mov
aam
inc
jo
in
rol
and
popf
or
add
dec
add
push
insl
testl
mov
pop
sbb
xor
inc
pop
lret
fsubrp
jbe
jg
movsb
xor
xchg
cmp
ljmp
push
and
add
mov
inc
mov
pop
fcoml
xor
bound
loop
push
faddl
push
in
adc
sbb
movsl
inc
xor
movsl
jmp
push
dec
out
sarb
jp
pushf
scas
clc
je
mov
cmp
lods
clc
xchg
scas
mov
cltd
sub
inc
sub
pop
or
mov
cmp
sbb
aaa
loopne
xchg
push
outsl
xchg
xlat
sub
sti
xor
lret
in
mov
push
or
outsl
add
mov
push
nop
aad
dec
int
fsubrl
xor
scas
jg
and
leave
test
idivb
mov
mov
and
cmp
add
adc
add
stc
test
push
inc
pop
xchg
mov
bound
mov
cltd
imul
dec
pop
xchg
shl
pusha
sarl
int
mov
mov
xchg
jbe
mov
push
lea
xor
rcr
stc
hlt
mov
addb
mov
lcall
jae
jge
jbe
and
out
xchg
cltd
push
fldt
and
aad
cmp
es
dec
iret
popa
gs
std
mov
in
call
dec
scas
fmul
testl
and
or
stc
push
inc
ret
fstps
adc
adc
cmp
lods
push
pop
stos
loopne
out
xor
out
lods
mov
stos
sub
test
enter
dec
xor
arpl
xchg
add
mov
sbb
push
lds
push
push
jge
cmc
aas
sbb
movsb
lahf
pop
in
add
or
cli
push
dec
push
jns
xchg
repz
sbb
mov
cmp
mov
imull
es
gs
or
cmp
lock
aam
add
mov
dec
and
add
movsb
mov
movsb
xabort
cmp
adcb
push
loopne
adc
lods
lret
fdivrs
je
jb
xor
sbb
push
das
mov
jecxz
cmp
addb
push
nop
jne
movsb
loope
andl
daa
and
imul
cmpsl
jb
push
xlat
fbld
sbb
in
cs
adc
jecxz
cwtl
pop
lea
xchg
xor
ret
lret
mov
daa
inc
add
add
jge
push
or
lods
push
xor
xchg
and
mov
inc
dec
jle
scas
cmc
inc
ja
and
ret
fnstenv
dec
jb
mov
in
daa
ja
lods
rcr
adc
or
stos
outsb
xor
pop
push
cwtl
repnz
cmpsb
mov
xchg
scas
mov
xor
clc
adc
pushf
test
frstor
cmp
xor
aaa
jno
xchg
insb
loopne
imul
in
ja
rcl
xchg
popf
mov
dec
rorb
aam
sub
pop
loopne
js
iret
sub
adc
cmpsl
mov
lea
movsl
gs
imul
and
mov
test
lahf
or
mov
mov
lret
jmp
mov
ret
aas
mov
and
cld
cmpsb
and
dec
rcrl
push
mov
xlat
nop
mov
xor
fcoms
xchg
cld
sbb
inc
sbb
adc
add
cltd
daa
fsubrp
xor
popf
jb
out
xor
jnp
xor
clc
add
push
repz
push
and
outsb
aam
fstpt
xor
popf
push
int
enter
clc
fnstcw
sbb
jbe
bound
adc
and
or
pop
lds
mov
in
es
mov
inc
jmp
fdivrs
fs
inc
cmp
stos
cmp
jns
mov
aaa
enter
cli
mov
sahf
and
push
mov
xor
gs
pusha
adc
and
mov
hlt
js
fs
pop
cmp
push
inc
xor
shlb
in
pushf
jl
xchg
fadd
jl
mov
jle
fcmovnb
push
and
push
hlt
xorb
sbb
push
in
shrl
add
fwait
movb
cmp
lret
cmpsl
push
mov
jns
jp
data16
mov
or
imul
ficoms
xchg
sub
aam
insb
aad
adc
push
cmpsb
dec
jb
rcrb
js
xchg
push
cmpsl
and
out
fbld
push
add
mov
outsb
ret
aad
bound
push
pop
add
mov
xor
cwtl
mov
push
push
rol
enter
leave
out
les
pop
or
insb
mov
dec
and
mov
adc
sub
movsl
test
shll
mov
sub
ret
adc
add
fadd
mov
pusha
xchg
in
rorl
sahf
inc
sbb
cmp
punpckhdq
lock
dec
lock
mov
or
arpl
jp
pop
push
adc
mov
inc
ss
mov
out
mov
leave
ja
sbb
stc
loop
mov
icebp
mov
dec
mov
pop
bound
cmp
test
add
insb
xchg
xor
pop
cmc
inc
pop
test
xlat
call
push
mov
and
mov
inc
inc
sti
xor
insl
push
jle
sbb
hlt
repz
aam
add
and
push
lcall
clc
in
adc
not
out
mov
xchg
push
mov
in
jmp
sbb
pop
adc
in
in
add
into
push
pshufw
mov
push
je
dec
test
and
sub
jno
roll
lods
fdivr
xlat
push
call
bound
mov
jns
xchg
fbstp
fildl
cmp
jb
popf
cmp
loop
aas
lods
mov
cmpsb
test
out
fnstcw
loopne
or
mov
pop
mov
hlt
outsb
add
push
inc
lock
inc
movsl
loope
popf
pop
mov
testb
mov
adcb
and
test
dec
xor
inc
jb
hlt
data16
cmc
dec
faddp
and
pop
jp
xlat
mov
cmp
pop
mov
sbb
sub
cmpsl
push
dec
sub
inc
cmp
iret
outsl
in
xor
aam
xor
cmpsb
bound
push
push
xchg
lret
or
scas
ljmp
xor
mov
out
pop
or
lret
mov
rcrl
test
pusha
daa
cmc
push
clc
dec
nop
pop
cmp
and
xor
mov
push
inc
mov
scas
fwait
mov
das
cmp
jo
sbb
notb
push
ljmp
sub
push
push
add
outsb
lods
xor
xchg
cmpsb
movsb
push
sbb
sbb
jb
dec
adc
mov
mov
add
ret
aam
jns
dec
xchg
sub
xchg
fdivs
insb
jle
pop
ljmp
sbb
pop
enter
mov
clc
stc
icebp
insb
mov
push
int
push
jne
ds
xchg
cld
lock
add
clc
int
pop
stos
ljmp
cmpsb
outsl
xlat
lods
jne
and
decb
mov
notl
cmpsl
mov
jne
lret
push
not
push
out
jge
add
cld
popa
push
int3
movsl
lds
ret
stos
mov
dec
pusha
andl
outsl
pop
mov
xchg
fidivrl
sub
ja
loopne
adc
shlb
add
xor
aam
or
adc
jae,pn
cmpl
inc
subb
xchg
xor
sub
mov
jne
xchg
in
clc
mov
fildl
push
mov
loopne
movsl
stos
in
dec
std
add
xor
mov
xchg
jg
push
or
xchg
insb
fdivrl
or
pushf
mov
ficomps
addr16
xor
inc
loop
cmp
sbb
adc
jge
movsb
stos
pusha
test
je
into
adc
add
fs
jmp
pop
xor
arpl
cmp
xchg
mov
gs
adc
jbe
call
mov
popa
clc
mov
pop
das
mov
jp
and
cmpsl
sub
insl
xchg
stos
out
dec
jecxz
mov
adcb
gs
and
dec
je
sti
stos
inc
inc
xor
dec
cs
push
loop
dec
mov
cmp
xor
fsubp
inc
pusha
aaa
lea
jns
adc
xor
lahf
lea
hlt
int
xchg
outsb
shrl
loop
sbb
jb
jle
xor
int
pop
aas
push
outsl
lahf
mov
jecxz
es
leave
std
mov
lods
add
icebp
or
jle
and
jns
mov
ret
cld
dec
bound
popa
or
stos
cmp
jmp
and
mov
adc
xorl
shrb
stos
fimull
add
push
cltd
into
dec
scas
add
dec
or
pop
scas
mov
stc
mov
mov
lods
subb
movsb
or
aaa
cltd
xchg
sub
int3
or
mov
imul
push
incl
cmp
pop
fmul
std
roll
jecxz
inc
enter
std
mov
cs
xchg
fnstcw
xor
fcoms
leave
js
mov
test
loopne
pop
adc
popa
sti
push
dec
xchg
sub
or
out
addb
inc
loop
jnp
mov
and
sbbb
aad
cwtl
ljmp
pop
sarb
mov
and
dec
popf
imul
add
lock
cltd
mov
mov
and
ss
adc
push
adc
add
out
popf
sub
lcall
std
mov
icebp
fcmovnb
or
ss
call
lea
cwtl
lret
subl
outsl
push
in
jl
cmpsb
sbb
push
sahf
jecxz
inc
shl
shrl
mov
cld
int
or
and
sbb
lret
or
hlt
std
mov
or
mov
fs
mov
mov
lods
in
in
mov
pop
ljmp
mov
push
mov
and
cltd
push
jmp
stos
icebp
movsb
dec
xchg
xchg
mov
jl
mov
add
lret
mov
insl
cld
adc
pop
pop
jmp
xor
adc
cld
orl
xchg
xchg
ret
in
rolb
dec
std
outsb
out
push
adc
lods
inc
out
js
dec
sbbb
mov
inc
sbb
shrb
pop
ss
xor
push
es
sbb
sbb
jle
and
mov
arpl
stos
mov
jecxz
call
jnp
test
leave
in
aad
pop
lcall
mov
xchg
in
idivl
adc
mov
iret
gs
loopne
out
popa
xor
mov
push
cmc
jp
sarb
adc
andl
lcall
inc
icebp
mov
sahf
cwtl
push
adc
fsubl
mov
sub
std
fimuls
mov
sbb
xor
dec
nop
inc
mov
mov
push
stos
dec
bound
mov
out
movsl
loopne
arpl
mov
sub
outsl
lods
pop
cmc
mov
or
mov
jg
mov
daa
xchg
sub
cmp
mov
mov
and
pushl
std
inc
aas
mov
scas
xor
pop
sub
lahf
pop
fxch
movsl
data16
push
push
dec
sbb
mov
xor
gs
or
jno
test
cwtl
mov
sahf
sub
roll
out
into
add
mov
mov
mov
mov
push
mov
dec
jbe
dec
lock
push
mov
in
fstpt
mov
in
popf
lds
add
adc
push
push
cmp
idivl
adc
aaa
jmp
cmc
fsubl
lret
movsl
adc
in
sub
ss
repnz
lcall
sub
leave
stos
aam
cmp
mov
lods
cmpsb
xchg
jp
stos
cs
insl
test
out
fldt
out
stos
repz
out
or
mov
mov
fucomi
cwtl
lahf
sbb
push
xor
jecxz
call
push
add
mov
enter
cmp
mov
pop
mov
and
mov
loope
add
or
push
jb
mov
xchg
lcall
clc
cli
adc
push
push
loope
dec
stos
ja
pop
je
lahf
aam
mov
jns
in
sbb
loopne
enter
push
shrl
cmp
loopne,pn
xchg
fcomps
jecxz
out
dec
fnsave
scas
xchg
hlt
adc
sbb
pop
pop
sub
cmp
daa
xchg
mov
xchg
rcrb
push
xor
pop
xchg
cmp
xchg
lods
mov
ja
fsubrl
push
cli
and
or
movsl
ja
bound
aam
jge
stos
push
and
mov
add
add
sti
and
xchg
push
imul
aaa
stos
iret
enter
daa
bound
xor
xchg
add
lods
out
lahf
or
cmp
mov
je
dec
xor
xchg
subb
mov
push
cmpsb
out
xor
pop
sarb
lods
push
hlt
pop
ss
mov
dec
movsl
outsl
iret
sub
sbb
jno
out
pop
mov
imul
repnz
aas
pop
lahf
xchg
cmp
push
enter
xchg
insb
mov
out
pop
and
cmp
shlb
cmp
stc
xchg
mov
sbb
mov
mov
in
xchg
jmp
repz
mov
mov
add
jo
in
and
fcoms
ret
jae
in
loop
cmp
bound
or
mov
mov
jmp
sub
stc
out
adc
cmp
in
pop
rorb
cmp
cmpsb
push
stos
out
rcl
add
pop
sub
cmp
push
ret
xor
out
arpl
gs
dec
iret
sbb
push
adc
popa
mov
or
pop
je
inc
mov
and
sub
adc
xchg
jp
add
sbb
repnz
aad
pop
jmp
in
aaa
subb
jnp
lret
or
fbld
sbb
dec
mov
jp
mov
insl
std
push
push
jp
fndisi(8087
adc
roll
sub
push
insl
jo
gs
js
or
jbe
aas
xor
and
dec
adc
stos
arpl
fcompl
dec
sahf
and
repz
mov
stos
cmova
add
and
push
cmc
addr16
imul
mov
add
imull
push
mov
mov
pop
outsb
or
push
mov
xor
inc
repz
dec
cld
stc
icebp
mov
xor
and
jno
test
les
inc
jg
lock
loopne
sti
je
movsl
xor
xchg
cmp
mov
jo
in
sti
jb
mov
je
xchg
fcompl
jle
jg
shrb
adc
ds
push
ja
add
mov
je
adc
push
push
dec
mov
int
adc
es
inc
jp
ret
sbb
mov
cwtl
test
mov
inc
cwtl
xchg
test
cli
insl
jmp
adc
xor
pop
icebp
test
jge
in
outsl
sbb
jle
int3
mov
sub
ljmp
push
inc
test
shrb
cmpsl
scas
stc
add
add
cmp
icebp
jp
inc
inc
sbb
adc
dec
movsb
cli
sub
jo
mov
mov
inc
mov
xchg
fcoms
test
pop
mov
repnz
mov
mov
push
sub
imul
dec
cltd
xchg
or
push
push
mov
in
mov
sbb
out
mov
push
dec
out
push
xchg
or
xor
add
push
xchg
inc
ss
fidivl
mov
mov
loop
fucomi
pop
inc
out
jp
sbb
add
adc
push
cmpsb
clc
sbb
dec
xor
pushf
arpl
pop
push
jmp
lret
jle
enter
xchg
adc
jp
xor
jns
jno
ljmp
push
xchg
push
push
or
in
mov
in
clc
sub
dec
xor
and
data16
dec
int3
xor
hlt
inc
movsl
mov
xchg
sub
loope
xlat
popa
mov
sbb
arpl
lret
jmp
cmp
cmpsb
imul
in
repz
adc
xchg
mov
mov
jnp
fcompl
inc
adcl
in
pushf
lret
xchg
xchg
push
jp
push
push
scas
xor
in
cwtl
jnp
in
sub
dec
movsl
adc
pushf
cs
xchg
mov
and
inc
lea
arpl
imul
daa
cmp
sti
adc
xor
clc
pop
mov
jae
xor
int
pop
mov
cwtl
inc
sub
pop
or
test
cmp
flds
addr16
inc
mov
add
les
addr16
xchg
lahf
or
or
int
lods
icebp
mov
bound
fdivl
add
add
je
insl
aas
clc
sub
xor
in
adc
push
aaa
add
mov
mov
loopne
and
sbb
lods
push
cmpsl
fs
iret
adc
cmp
ljmp
insb
shll
in
jne
xchg
push
jmp
pop
call
add
shufps
pop
in
mov
outsb
repnz
inc
insl
dec
dec
stos
pop
mov
enter
sbb
lahf
outsb
imulb
mov
cld
icebp
push
jecxz
pop
pop
fnstenv
mov
inc
mov
imul
jb
adc
in
sub
cmc
je
xlat
mov
xor
ss
ficoml
mov
inc
jl
mov
leave
xlat
or
mov
enter
in
insl
cld
fxch
fnstsw
cltd
lea
pop
jo
jne
out
repnz
sbb
rolb
test
dec
push
mov
shrb
xor
mov
cmpsb
dec
test
data16
mov
sbb
xchg
pusha
leave
jnp
scas
mov
push
xor
or
add
cli
dec
andl
int
xchg
shll
jg
cmp
pop
jecxz
xchg
stos
mov
xor
cli
pop
in
mov
pop
js
jnp
xchg
fistpll
test
loop
mov
xchg
mov
sbb
pop
mov
cmp
xchg
dec
cld
call
xor
sub
cmc
dec
xor
pop
or
dec
push
stos
aam
push
xchg
loopne
fistps
push
and
push
stos
push
xor
les
add
or
mov
mov
shrl
es
dec
or
and
or
data16
push
inc
jmp
mov
dec
es
and
in
inc
xchg
ficoms
out
or
pop
lcall
sti
pop
stos
lcall
icebp
mov
mov
push
loop
in
or
inc
sarb
incb
andl
and
lret
xor
shrl
mov
cmp
movsb
adc
je
add
dec
inc
pop
fcmovu
push
cld
rcll
jmp
kmovd
jb
adc
das
in
mov
inc
mov
sub
xchg
lcall
jp
add
in
cmp
sbb
out
imul
fsub
mov
loopne
pop
out
int
mov
aam
gs
mov
js
dec
push
fwait
xor
sbb
addb
pop
xchg
arpl
and
rclb
call
iret
ret
xchg
daa
jg
pop
fcmovnb
mov
xor
mov
movsb
ret
lods
inc
stos
xchg
pop
mov
xor
xchg
xchg
sbb
mov
pushf
das
push
mov
jl
adc
test
jno
mov
int3
mov
and
movsb
pop
repnz
loopne
cmp
in
outsb
push
mov
adc
xor
fs
call
pop
and
lods
inc
test
scas
add
mov
inc
xchg
outsb
frstor
mov
insl
jo
adc
gs
jno
jo
adc
outsl
and
fwait
adc
test
test
add
pop
gs
out
mov
aaa
mov
jnp
dec
sub
mov
mov
test
sub
cmpsb
lret
push
pop
xchg
add
push
scas
add
adc
sahf
sbb
sbb
push
push
push
lea
and
xor
decb
cwtl
fiadds
lods
dec
sub
lock
pushf
in
adc
cmc
pushf
fsubl
scas
jg
sbb
jno
stos
adc
test
je
fwait
mov
push
dec
cld
mov
pop
and
inc
bound
mov
out
loopne
ss
sahf
jecxz
call
cmpsl
xor
adc
lret
jle
push
mov
shl
cwtl
outsl
lods
pop
ljmp
in
or
je
cmpsl
aad
bound
std
mov
pop
call
andl
dec
sub
out
stos
mov
inc
shlb
add
imul
scas
pop
in
testb
jl
cli
out
dec
pop
push
dec
clc
daa
mov
leave
cmp
lea
jg
sub
lret
int
imul
sti
or
rolb
pop
mov
lret
call
dec
mov
inc
insl
mov
dec
dec
jbe
jbe
roll
insl
or
movsl
imul
xor
push
lahf
sti
jl
jle
fidivrs
dec
sbb
fpatan
andl
cwtl
push
dec
idivl
adc
mov
repz
imul
jmp
ret
jle
push
hlt
mov
loopne
xor
xor
fildll
js
in
add
sub
adc
push
data16
mov
movb
aas
cmpsl
mov
fmul
loopne
jno
mov
adc
jbe
lret
adc
ficoml
xor
imul
push
call
mov
pop
inc
and
test
std
ret
xchg
sub
adc
jbe
lahf
mov
fwait
es
xlat
xorb
mov
test
addr16
icebp
shlb
xchg
mov
pop
add
test
mov
filds
test
mov
dec
fimull
cs
or
ret
mov
xor
push
lds
xor
ss
std
sarl
je
inc
movsl
xchg
in
test
test
or
ss
outsl
popa
mov
movb
add
aas
mov
push
aaa
inc
or
in
loop
lods
mov
inc
lahf
and
bound
adc
cmp
ss
cmp
cmp
and
dec
xchg
cmp
pushf
js
int3
sbb
jnp
ljmp
and
out
add
cmp
lock
inc
xor
or
lahf
jp
add
arpl
popf
in
adc
xor
gs
dec
jb
jle
popf
pop
sub
dec
bsf
or
xor
inc
cld
js
sub
lahf
jmp
and
xchg
sbb
dec
mov
hlt
adc
inc
or
dec
fldcw
popf
jae
mov
jb
mov
pop
add
mov
push
out
stos
mov
xchg
xor
inc
inc
inc
push
or
xchg
ficoms
mov
out
repz
rolb
repz
mov
sbb
lock
imul
jl
mov
mov
cltd
hlt
lahf
inc
insl
jl
mov
incl
mov
jae
insl
ret
mov
jno
movsl
inc
adc
sbb
lea
fadd
dec
daa
inc
int3
enter
into
cmp
dec
cmpsl
mov
mov
push
fdivr
cmp
xor
cmpsl
push
outsb
pop
pop
inc
insl
sub
mov
push
jecxz
in
fld
or
popa
mov
stc
add
orb
push
fwait
xchg
mov
out
or
sub
dec
arpl
call
leave
xchg
jp
loop
movsb
jbe
lahf
add
stos
mov
pusha
fmul
and
push
in
cmp
xchg
or
adc
pop
jle
out
sub
adc
std
dec
mov
movsb
inc
stos
test
pop
xor
and
cmp
arpl
test
xor
addr16
clc
mov
lret
mov
inc
out
punpckhwd
push
mov
add
stc
lock
das
push
sbb
dec
push
dec
cltd
mov
dec
xchg
push
in
cs
push
lret
sbb
fistl
xchg
jl
inc
cld
fstpt
das
jl
stos
mov
add
sbb
mov
adc
mov
adc
add
inc
xchg
push
pop
push
cwtl
push
fsubl
sub
add
fadds
mov
das
xchg
in
inc
jl
adc
pop
hlt
mov
orb
sub
movsl
movsl
inc
cmp
and
jmp
mov
into
movsl
outsl
pop
lock
and
mov
repz
xlat
pop
jo
sbb
das
daa
push
ret
in
sbb
data16
dec
mov
xchg
mov
cmovp
sbb
in
sahf
adc
adc
inc
andl
jecxz
es
pop
pop
pusha
cwtl
inc
clc
and
in
cmp
out
mov
fadds
inc
push
out
mov
in
stos
and
les
or
sbb
dec
int
mov
xchg
pop
add
lcall
sub
lea
adc
xor
jnp
test
or
push
push
mov
inc
mov
fildl
mov
pop
cmp
push
jb
stos
sbb
cmc
cwtl
lds
push
push
inc
ds
mov
xor
and
aaa
jnp
pushl
inc
lret
mov
out
stos
add
mov
test
bound
mov
ret
cmp
or
xor
cmp
outsl
push
jno
shll
push
inc
dec
insl
ljmp
cs
inc
xorl
push
push
fstl
push
gs
dec
fldt
dec
imul
pop
shll
leave
xchg
addr16
dec
js
xor
xor
push
ss
icebp
pop
lea
pusha
xlat
imul
into
xor
xchg
insb
xor
imul
mov
daa
jmp
test
arpl
xor
ret
pop
push
or
nop
les
loope
xchg
fnsaves
mov
jbe
repnz
repz
jno
lods
jge
pushf
add
mov
decb
pop
js
fucomip
loopne
pop
push
adc
inc
xchg
mov
fisubrs
arpl
add
or
rcrb
add
jnp
or
imul
mulb
sbb
jp
xchg
mov
and
sbb
xor
mov
push
or
dec
bnd
xchg
inc
rorl
adc
cmp
or
add
pop
push
adc
jle
add
mov
fs
or
mov
mov
call
stc
scas
repz
mov
icebp
aad
fcmovb
ss
inc
and
inc
stos
push
mov
pop
ljmp
xor
ds
jmp
lret
in
jle
xchg
jmp
lahf
loop
add
imul
jle
sbb
pop
inc
je
test
movsb
ret
xchg
repnz
lock
or
sahf
mov
loope
dec
fwait
cld
inc
or
repz
mov
lret
cmpsb
sbb
or
lret
cltd
push
out
ret
push
adc
xor
into
push
aaa
cltd
mov
sbb
cmpsb
enter
stos
vmovhpd
jo
stos
dec
fsubs
add
repnz
scas
mov
sahf
push
inc
pop
sub
sbb
mov
rcl
jnp
mov
jnp
es
or
out
lahf
in
sbb
cmc
mov
lds
mov
icebp
jbe
iret
sbb
out
sub
sbb
or
inc
sbb
es
data16
ds
mov
ds
leave
inc
int3
arpl
rclb
nop
add
jp
jne
loop
push
dec
gs
enter
dec
xor
sbbb
xor
add
mov
test
xchg
repz
test
cmp
shrl
mov
push
test
pop
out
lods
add
jns
sub
icebp
pop
mov
fldt
shl
mov
inc
dec
subl
leave
fistpll
xor
jle
cmp
mov
pushf
test
push
cmp
cmpl
jl
pop
scas
into
mov
divl
cmpsb
les
fldt
xchg
jg
adc
push
mov
les
das
lcall
dec
insl
leave
mov
sub
out
mov
scas
jp
jecxz
imul
pop
insl
add
frstor
push
and
push
movsb
es
cmp
pop
jmp
outsb
sti
pop
push
jmp
aaa
test
ret
mov
cmc
jmp
inc
push
data16
adc
mov
lret
push
into
sarb
add
mov
mov
ja
test
jbe
sar
pushf
call
jae
cli
inc
out
push
inc
cli
xchg
pop
inc
mov
mov
mull
dec
leave
mov
sub
loope
lods
push
repnz
int
test
sarb
pop
mov
andb
imul
mov
mov
ds
lods
out
xchg
aad
in
mov
gs
push
jecxz
scas
fs
mov
lods
sbb
out
lret
arpl
sub
divl
scas
ljmp
repz
inc
mov
into
sbbb
xlat
incb
cli
jo
pause
xlat
aam
push
lret
cmp
ss
sub
shll
popa
lret
les
insl
or
push
push
and
notb
add
imul
pushf
in
ret
inc
sahf
cmp
push
mov
or
je
push
call
or
dec
push
sahf
dec
sub
mov
dec
or
xchg
sbb
jmp
pop
mov
adc
shl
mov
mov
sub
jg
dec
xor
fxch
push
sti
xlat
push
mov
pop
lods
jmp
imul
sub
or
cmp
stos
scas
movsl
lock
cmp
jle
add
sub
in
hlt
insl
push
add
and
sbb
imul
xchg
subb
mov
push
imul
xor
pop
pop
cmp
shlb
cltd
sbb
push
dec
push
repz
pop
lock
pop
xor
adc
xchg
pop
scas
jmp
sbb
push
jmp
push
push
gs
pop
jno
call
pop
mov
jmp
in
adc
jge
mov
scas
mov
fidivl
arpl
cld
imul
lods
pop
sub
sbb
notl
xchg
pop
push
cltd
hlt
sub
cli
xchg
gs
push
lock
into
dec
and
xor
dec
ret
out
call
in
mov
push
subb
push
sub
add
pop
xchg
mov
xchg
hlt
push
push
lcall
push
sbb
movsl
mov
lahf
xchg
orl
mov
pop
ret
in
addb
in
pop
fldcw
outsb
fadd
xor
mov
test
rolb
adc
sbb
test
mov
adc
fnstcw
jg
and
xchg
movsb
movb
stos
out
push
test
jl
sti
inc
sbb
jb
and
mov
mov
loopne
shll
out
jecxz
mov
xchg
out
fistl
mov
mov
xchg
ror
imul
loope
je
imulb
xor
fucom
jo
rcrb
je
xor
jne
push
sub
jle
mov
test
jns
mov
push
mov
cld
js
nop
xor
mov
xchg
mov
enter
push
jae
mov
cmpsl
inc
or
inc
push
notb
jo
popf
fcmovne
aaa
icebp
jno
pop
xor
mov
jp
or
mov
js
mov
jns,pt
cmp
mov
cmpsb
je
jg
out
cwtl
sub
mov
inc
dec
jae
ret
mov
in
jle
in
mov
sahf
add
pushf
push
bound
pop
loopne
or
sti
add
adc
push
and
aam
sbb
mov
aas
cmp
add
add
in
xor
std
shl
push
into
add
mov
loopne
movsb
push
int
cld
sub
fisubl
scas
out
push
fidivs
jmp
outsb
pop
fisubl
ljmp
add
in
adc
repnz
lret
sahf
jmp
gs
pop
push
lods
fildll
shrl
fldcw
xchg
or
mov
popfw
mov
sbb
pop
jle
lret
jbe
outsl
imul
btl
jns
test
inc
inc
lods
inc
pop
icebp
sahf
push
repz
cmpb
sub
push
lods
std
sub
push
pop
addl
out
jne
jo
lahf
cmpsb
xchg
ror
test
xchg
in
popf
sub
test
out
orl
pop
add
xchg
dec
xor
add
or
and
lahf
xchg
imul
inc
shl
lods
add
mov
or
sbb
cli
push
aam
and
xchg
inc
sbb
inc
loop
std
cmpsb
shlb
insb
fisttps
lcall
popf
push
mov
pushf
jge
adc
aaa
out
stc
or
dec
jp
ljmp
xchg
mov
into
fwait
sub
xlat
cli
out
in
inc
cmp
xchg
mov
ja
daa
in
xor
sub
cmpsl
ffreep
dec
sti
jno
jp
mov
push
sub
mov
scas
popf
jns
jmp
mov
ljmp
xor
out
out
out
es
arpl
mov
sub
or
pop
lret
ljmp
pop
mov
outsb
les
pusha
jmp
inc
dec
inc
cmp
mov
jl
xor
insl
cmpsb
and
ja
fstpl
outsb
adc
mov
mov
addr16
clc
push
cmp
scas
arpl
xchg
ret
push
imull
pop
popf
test
lods
mov
mov
push
dec
aad
mov
icebp
fnstcw
int3
test
shll
jg
sbb
mov
mov
fsts
jg
popa
fcompl
in
pop
popa
out
push
or
push
and
loop
push
xor
sbbb
aam
push
fwait
xor
xlat
xor
movsl
and
mov
sbb
mov
or
sub
xor
shll
and
inc
test
mov
mov
mov
xchg
into
pop
xchg
shlb
and
insb
adc
stc
movsb
and
inc
mov
adc
dec
jg
dec
popf
xor
ds
cmp
test
cs
push
pop
test
out
xchg
outsl
fnsave
popa
sbb
mov
mov
insl
push
hlt
lds
mov
push
roll
movsb
loopne
push
fimuls
push
push
pop
ror
popf
out
rcll
cmp
jmp
imul
mov
leave
cmp
pushf
int3
xchg
adc
xchg
movsb
or
dec
mov
mov
mov
popa
rolb
repz
lock
insl
xor
outsl
insb
mov
adc
xchg
mov
sbb
cwtl
mov
jne
cltd
in
stc
popa
into
mov
jnp
push
mov
mov
xor
into
aas
xchg
popa
xor
pop
lcall
xchg
mov
and
mov
scas
add
mov
cmc
test
imul
scas
mov
xor
add
inc
pop
enter
sub
gs
jbe
push
pushf
xchg
les
mov
shlb
cmp
mov
aam
push
cmpsb
stos
sub
stos
push
or
sbb
pop
ljmp
fsubrl
jmp
loopne
inc
sahf
inc
or
movl
and
cmp
daa
int
scas
shll
xorb
pusha
sbb
cs
sbb
add
ret
cwtl
daa
mov
xorb
je
xor
pop
pop
popa
in
jg
pushf
and
inc
test
imul
mov
repz
les
fimull
ja
test
adc
pop
adc
loop
dec
mov
insl
or
movsb
dec
arpl
dec
jg
roll
mov
mov
push
xchg
scas
cmpsl
loope
mov
xor
mov
int
sbb
sub
push
ljmp
xor
in
outsl
pop
pop
lock
mov
push
std
lahf
fimuls
inc
aas
aas
mov
xor
in
lods
cmpsl
mov
lea
andl
jg
es
pop
int
cmp
testb
movsl
xor
mov
sbb
stos
inc
stos
jle
lret
xchg
enter
arpl
xor
in
in
fistpll
xchg
fldt
cmpsb
jmp
sub
test
fldl
dec
mov
dec
subl
stos
sbb
or
cmpb
ficoms
in
pop
fyl2xp1
sub
xchg
pop
ret
add
test
add
pop
xor
jmp
lcallw
hlt
repz
mov
mov
xor
adc
xchg
push
sahf
jmp
jnp
cmp
xchg
dec
ljmp
xchg
jo
rcll
in
aad
mov
jbe
adc
pop
lea
mov
clc
je
addr16
sbb
sbb
jno
movsb
clc
jecxz
add
imul
cmp
pop
ljmp
sub
subl
arpl
je
sahf
or
jo
loopne
inc
nop
mov
pop
imul
push
scas
jno
filds
cld
aaa
adc
shll
fdivr
xchg
xchg
sub
es
push
mov
addr16
rcll
push
mov
fsubrl
mov
stos
pop
gs
enter
in
mov
xor
stc
lret
dec
xchg
cld
ret
add
xchg
stc
cmp
push
cmp
xor
add
dec
rorl
test
fsubrs
fsubrl
inc
pop
inc
test
das
pop
jmp
dec
or
add
pushf
leave
in
mov
jmp
icebp
fiadds
dec
and
sbb
cmp
pushw
arpl
out
jl
inc
cli
dec
arpl
mov
inc
jb
mov
in
jo
sahf
cmpl
jb
cmp
xchg
mov
or
push
dec
ret
mov
add
dec
fstl
sti
mov
call
mov
sahf
mov
rcll
jns
out
sahf
ljmp
pop
daa
mov
out
mov
add
or
fidivrs
mulb
pushf
adc
ljmp
es
lret
js
daa
sbb
in
les
sarb
sahf
cmp
add
inc
test
and
pop
lahf
xor
nop
fcmovnbe
and
mov
fistl
mov
les
and
popf
adc
test
ljmp
arpl
aaa
dec
ficoml
push
mov
loope
out
ja
js
outsb
test
dec
push
insb
mov
mov
push
cli
inc
mov
mov
add
in
outsb
pop
mov
xor
fistps
pop
std
je
jb
into
add
inc
push
out
push
sub
xor
inc
cwtl
mov
pushf
push
movsb
lock
aas
aam
inc
cld
rolb
jno
pusha
data16
lcall
or
xchg
pop
mov
ja
mov
mov
sub
cmp
clc
xlat
inc
movb
out
pop
test
lahf
dec
mov
je
pop
mov
mov
shrl
ret
pop
cwtl
or
dec
imul
mov
test
mov
mov
js
cmp
in
push
imul
inc
popf
mov
jne
adcb
dec
jle
fmull
out
inc
push
pop
out
cmp
ds
sub
push
or
sub
jnp
mov
inc
push
adc
cmp
push
loope
sbb
scas
push
insl
mov
fcoms
std
out
jle
mov
mov
add
push
gs
dec
leave
adc
ret
in
add
jp
out
mov
mov
pop
mov
andb
dec
jp
add
adcl
and
lock
adcl
cmpsl
lea
lods
pop
pop
in
mov
sub
cmp
pusha
add
lret
pop
outsl
and
lret
jae
mov
test
adc
push
adc
ds
js
or
xor
jae
sbb
out
fdivl
add
add
add
xchg
mov
aam
mov
and
addb
out
xor
cmp
mov
mov
popf
xor
adc
loopne
mov
mov
inc
add
subl
scas
xor
aaa
ss
out
andb
fwait
out
push
mov
fcompl
stc
gs
add
and
mov
cld
mov
dec
cmp
mov
out
mov
sbb
outsb
sbb
test
dec
int
cmp
jns
sbb
sub
data16
imul
pushl
lods
mov
fmull
dec
popf
mov
or
jg
cs
pop
mov
aaa
stos
out
mov
bound
xchg
adc
jmp
ljmp
add
jnp
fmul
or
mov
ds
hlt
sbb
cmp
out
cmp
stc
xor
xchg
inc
mov
lock
js
aaa
jno
ljmp
addb
ret
mov
or
jmp
fnstcw
mov
ret
aad
sbb
inc
popl
push
lods
cmpsl
es
shrb
pushf
in
mov
sub
or
mov
ss
enter
push
insl
faddl
or
test
sub
stos
xor
in
and
push
out
mov
fdivrl
lods
inc
stos
cli
fcmovnb
cld
out
ror
fisubs
int3
icebp
popa
insl
fs
sub
mov
and
rorb
or
cmp
aam
inc
sbb
mov
or
mov
mov
push
add
mov
xor
aad
jg
in
aad
dec
push
sub
jmp
cmpsb
xor
ja
ficompl
add
lods
add
test
mov
and
mov
jl
call
inc
jns
outsl
inc
fxch
sbb
loopne
cltd
and
lcall
loopne
add
enter
inc
jae
addl
loopne
inc
add
mov
inc
mov
jne
xchg
xorl
mov
fdivp
cmp
jno
mov
cmp
push
xchg
jle
mov
mov
fildll
xchg
mov
call
std
mov
aas
in
test
xor
add
jecxz
rclb
dec
lods
and
imull
mov
ret
fdivrs
int3
xor
jnp
jmp
mov
shl
xchg
cmp
cmp
add
mov
lods
mov
arpl
inc
icebp
mov
dec
sbb
je
cld
dec
or
dec
cmp
sub
in
cld
and
cltd
in
jae
jmp
jle
addr16
aas
movsl
shl
mov
fsubp
iret
push
and
mov
stos
out
mov
rol
or
mov
lods
mov
xorl
mov
jp
xor
jg
insl
mov
xlat
sahf
pop
das
jns
or
cld
xchg
dec
pop
dec
xchg
adc
push
sti
shlb
mov
lret
rolb
ljmp
jl
out
mov
bound
fwait
sub
pop
aas
sub
ss
push
int
in
cmp
mov
inc
and
aaa
mov
pushf
ja
negb
in
xor
inc
mov
ds
dec
aad
jle
popf
mov
push
dec
xor
dec
std
ljmp
mov
sbb
ja
adc
ret
jne
xor
push
mov
xor
out
dec
mov
fsubl
dec
push
inc
inc
jp
in
ds
stc
inc
scas
and
test
push
inc
add
adc
sbb
lods
add
idivl
lds
push
dec
cmc
pop
pusha
and
and
mov
movsb
dec
fs
gs
sbb
dec
inc
sub
out
push
push
jecxz
popf
outsl
mov
mov
xchg
out
pop
stc
push
enter
sub
addl
aam
jge
push
filds
lahf
lcall
push
cmpsl
ljmp
mov
sarb
movsb
cmc
lea
ds
std
loop
ficompl
loope
in
dec
jnp
into
test
dec
pop
xor
pop
adc
test
sub
inc
fidivrs
mov
push
mov
xchg
dec
je
std
jmp
jnp
jns
inc
lret
addr16
dec
sub
push
inc
add
mov
jb
in
lret
lods
je
mov
test
push
dec
cmpsb
daa
sbb
jge
sbb
jne
lahf
sbb
jmp
sub
mov
lret
cmp
test
sti
out
sarb
jg
dec
out
js
gs
movsb
pop
push
sub
and
test
xchg
add
cmpsb
pop
mov
xlat
sub
add
mov
adc
enter
jle
int
inc
shll
sbb
push
mov
jne
jns
jge
push
cmp
mov
fldenv
mov
jg
test
fistps
fnsave
in
lods
int3
or
fisubrl
sahf
insb
stc
lods
xor
icebp
movsl
jae
dec
fs
mov
arpl
add
scas
inc
bound
mov
dec
addb
mov
jnp
ret
in
add
test
lahf
subb
inc
cmpsb
lock
xchg
mov
dec
fidivrl
jae
fbstp
or
mov
fnstsw
pop
aaa
scas
mov
test
ret
add
mov
adc
add
and
mov
xchg
inc
pop
imul
and
or
fcompl
movsl
lea
and
test
insb
add
rcrl
subl
jae
push
scas
xor
xor
xchg
cmp
lcall
push
mov
add
lds
cmp
icebp
push
imul
jnp
es
inc
cmpb
aad
dec
cmc
mov
lret
sub
shll
shl
subl
pop
xchg
jge
pop
cmp
jg
adc
xor
dec
jbe,pt
xor
pushl
xchg
cwtl
inc
loope
mov
loopne
ds
cli
in
pop
mov
jp
jge
push
xor
lahf
cwtl
inc
jae
ret
sub
daa
outsl
push
inc
imul
mov
mov
fiaddl
jnp
in
jge
in
or
xchg
popa
pop
repz
inc
add
je
pop
cmp
jb
gs
stos
mov
pop
push
dec
dec
inc
push
sbb
cmp
or
push
sbb
int3
cmp
add
mov
sub
paddsw
add
sbb
jbe
bound
fstl
pop
add
add
nop
or
lahf
cmpsb
adc
lods
inc
dec
dec
push
xchg
dec
xor
mov
xor
sahf
inc
mov
cwtl
lcall
scas
outsl
lods
push
or
je
aaa
dec
mov
aas
pop
sub
push
imulb
push
jae
xorl
repz
and
das
mov
ficoms
cmp
or
adc
cmpsb
add
cmp
js
xchg
punpcklwd
das
pop
repnz
dec
and
add
mov
scas
inc
cmp
and
cmpsb
rolb
out
orl
cmpsb
adc
scas
push
leave
dec
pop
lods
cmp
xchg
add
rcll
pop
js
xchg
cmp
jbe
xor
push
test
dec
lcall
or
loopne
cmp
push
inc
xchg
jg
aaa
rcll
xor
test
popf
popf
lcall
sub
repnz
inc
push
std
icebp
jne
mov
lods
add
popa
push
push
or
push
mov
dec
mov
aam
mov
into
shrb
mov
in
add
loop
shl
shlb
jne
sub
or
and
mov
lods
mov
imul
outsl
jae
adc
pop
out
imul
cmp
inc
cli
rcl
inc
dec
jns
push
cmpsl
es
xor
sarl
lea
test
imul
ja
mov
lods
jne
add
pop
in
lcall
adc
lret
inc
cld
ds
outsl
push
and
mov
adc
out
popl
pop
ss
sbb
xlat
int
iret
sbb
std
jne
dec
jecxz
aas
dec
negl
or
push
pop
xor
jge
cli
cld
and
jns
sub
pop
subl
mov
push
imul
dec
movsb
push
pop
fwait
mov
inc
sub
pop
xor
std
addr16
pushfw
and
xorl
fiaddl
xorb
adc
imul
sbb
not
ss
jns
jl,pn
lods
jle
push
sbb
sub
lea
add
rol
call
out
daa
inc
or
cmp
mov
pusha
mov
xor
sahf
xchg
iret
rep
std
repnz
outsl
dec
mov
adc
and
rol
xchg
add
or
addr16
in
xchg
lcall
or
cmovge
mov
sub
push
ret
mov
or
push
add
xchg
mov
cmp
daa
notb
cmp
pusha
ret
subb
in
pop
pop
ljmp
mov
ja
jns
dec
loope
mov
xchg
in
adc
es
std
es
jnp
mov
jbe
rol
pusha
mov
test
mov
lahf
movsl
cld
mov
inc
in
out
mov
popf
btcl
jmp
inc
cmp
sti
inc
xor
cmp
mov
lds
adc
notb
jo
stos
push
xchg
and
pushf
int3
adc
cmpsl
xchg
jg
dec
xor
cmpsl
clc
push
inc
xor
fdivs
dec
fisttpll
dec
cmp
rcr
inc
dec
and
rcrb
in
test
shlb
push
mov
push
mov
pop
add
push
out
sti
adc
mov
ljmp
inc
mov
repz
addr16
inc
loop
pop
mov
pop
push
push
loop
inc
mov
push
jae
push
push
sub
push
cli
push
add
in
enter
inc
rclb
pushl
cmp
iret
mov
ror
shl
add
in
test
dec
out
fadds
lcall
stos
outsb
jge
xchg
aas
fcmovnbe
scas
mov
fcoml
add
data16
jo
adc
lea
pop
push
rcrb
xor
cs
jno
sub
dec
inc
pop
mov
rclb
jo
xchg
pop
jge
aaa
out
jb
jae
cli
mov
frstor
xor
xor
aad
in
mov
inc
sbb
and
fdivr
mov
lret
pop
repnz
fs
in
shll
pop
fcom
aam
gs
jnp
push
push
or
hlt
fcmovb
sti
jmp
out
pop
sarl
cli
jmp
mov
lods
inc
insl
xchg
data16
sahf
push
cltd
sub
das
mov
and
dec
idivb
scas
pop
sub
or
pop
mov
dec
subl
push
dec
xlat
mov
rorl
xchg
fs
inc
or
lret
incb
push
imul
or
mov
ds
into
cs
mov
std
dec
mov
lahf
push
push
mov
lret
icebp
arpl
mov
mov
pusha
xor
adc
pop
ss
push
ja
pop
jno
sub
xchg
xchg
lahf
push
xchg
dec
imull
rcll
or
push
outsl
daa
outsb
cltd
aas
in
andb
adc
scas
lds
stos
insl
rcl
xchg
loopne
mov
shlb
pop
adc
adc
ja
das
lea
dec
xor
inc
inc
inc
dec
fs
pop
clc
cmc
mov
inc
jbe
mov
sti
adc
and
cmp
cwtl
sub
data16
in
push
inc
or
ficomps
dec
popa
cmp
cmc
test
lock
imul
inc
mov
fisubs
add
ja
adc
jbe
add
hlt
ja
and
nop
dec
adc
add
ljmp
pop
jl
fbld
pushf
inc
cmc
xchg
stc
xor
mov
push
mov
fcmovnbe
cmp
clc
das
bound
mov
adc
shrl
std
jnp
pop
imull
pop
and
loope
cli
leave
fisubrs
enter
jle
movsl
lret
ret
add
mov
js
push
lret
push
add
out
adc
dec
inc
call
xchg
pop
lods
sbb
xlat
sbb
pop
jnp
jo
pusha
movsb
add
sub
mov
jp
inc
loope
out
loop
les
aad
stos
mov
xchg
cmpl
out
stc
jmp
pop
aaa
mov
inc
and
push
inc
pop
pop
sbb
sbb
std
pop
mov
push
cltd
dec
rcrl
jne
jg
insl
rcll
jnp
inc
fldt
xor
adc
xchg
test
mov
imul
mov
push
jae
aam
lret
adc
popl
int
xchg
insl
fwait
in
outsb
mov
pusha
outsl
jl
mov
test
je
jmp
mov
pop
aam
fucomp
mov
cmp
dec
aas
into
add
xor
add
nop
xor
rclb
push
mov
and
imul
jle
adc
inc
or
cmp
pop
pop
inc
shlb
movsl
sbb
jp
rsm
mov
or
sub
js
xor
fcomps
addl
or
lds
mov
xchg
ljmp
ret
pop
popa
bound
or
es
les
jno
jl
lock
subb
inc
imul
jg
push
or
pop
out
cmp
jge
inc
cltd
xchg
dec
jge
jno
push
movsb
daa
or
dec
je
adc
jno
dec
inc
adc
mov
mov
mov
repnz
inc
pop
dec
in
les
and
aad
cmp
enter
push
inc
iret
lahf
int
adc
scas
push
insb
sub
das
jl
call
lret
sub
dec
in
clc
test
mov
and
mov
aad
mov
adc
or
gs
pusha
pop
sbb
xor
test
xor
call
stc
ds
inc
in
pop
push
mov
mov
sbb
sti
inc
jge
fs
das
mov
jle
fstpt
lret
out
movb
dec
or
inc
repz
and
jne
mov
lret
xchg
mov
xor
xor
mov
push
mov
in
cmp
ret
das
sti
sub
inc
mov
lea
push
gs
and
jecxz
adcl
loope
jl
outsl
fdivrl
sub
icebp
or
dec
sti
xchg
inc
aad
and
sbb
pop
aas
enter
outsb
jp
adc
xor
jp
dec
cmpsb
adc
sbb
jae
xor
cmp
jb
jmp
ja
cwtl
movsb
mov
xchg
jmp
arpl
push
jae
push
push
lock
sbb
push
mov
rorb
iret
addr16
dec
pushf
sub
mov
push
add
pushf
pop
jbe
adc
stos
adc
dec
pop
push
pop
mov
imulb
inc
mov
mov
outsb
jecxz
je
mov
daa
fbstp
icebp
push
sbb
repnz
fisubs
popl
ljmp
jmp
fdivp
dec
xchg
adc
cli
mov
sbb
ss
filds
scas
popa
stos
shlb
push
orl
mov
andb
mov
mov
mov
mov
out
dec
fsubp
stos
cmp
xchg
push
bound
dec
xchg
cmpsl
loop
out
xchg
push
adc
inc
lret
loope
jg
les
add
pop
or
mov
cmp
lock
int
out
outsb
es
shll
jmp
loope
test
imul
hlt
adc
or
je
fisubs
and
mov
ja
xchg
xchg
sbb
cmp
push
jnp
inc
cmp
sub
push
or
mov
div
daa
sti
xor
pop
sbb
push
wrmsr
xchg
push
scas
leave
add
lahf
sub
pusha
pop
mov
or
cmp
ljmp
ja
adc
sub
jge
testl
jle
adc
in
data16
and
push
hlt
dec
jle
int3
bound
push
push
sub
lods
icebp
aam
rorb
inc
and
xchg
mov
sbb
mov
nop
cmp
repnz
xor
xor
or
jecxz
test
popa
mov
lods
pop
mov
mov
sub
mov
push
push
mov
lds
pop
and
repnz
xchg
inc
ret
push
pop
cmpsb
enter
xor
ret
pop
outsb
cli
mov
aas
daa
adc
popa
push
sbbl
call
aad
sti
sbb
in
popa
mov
stos
cwtl
sub
jae
lea
xlat
popa
popf
jne
mulb
insb
iret
sbb
js
sahf
dec
jge
fsubs
leave
shll
test
sub
pop
jge
sub
lret
xor
out
fwait
les
jmp
xlat
jno
cmp
dec
test
adc
lds
faddp
jns
fs
aam
sub
sbb
and
adc
mov
aas
mov
push
jb
or
xchg
xchg
stos
std
call
cmc
and
mov
popl
adc
xchg
jns
fs
je
dec
aaa
push
push
pusha
shll
sub
mov
insb
and
popf
xchg
inc
inc
cmc
and
dec
in
sub
and
fnstsw
mov
add
pop
into
fildl
sbb
mov
test
mov
fs
pop
je
mov
pop
xor
and
int
pop
inc
adc
jp
jnp
mov
add
jo
dec
adc
lock
hlt
pusha
pop
pop
nop
cmc
movsb
cmpsl
adc
hlt
cmp
fldenv
lods
fs
push
mov
fwait
push
push
movsl
push
dec
insl
out
call
xchg
sub
xor
movsl
cmc
cmp
les
cmp
insl
add
pushf
lret
cmc
lods
adc
sbb
push
in
adc
shrb
dec
mov
aam
ficoml
cli
mov
add
add
sahf
dec
xor
imul
mov
bnd
addr16
rcl
add
jbe
js
fnstcw
or
fs
out
xor
fadds
scas
inc
sbb
cltd
movsb
stos
fwait
jnp
and
ja
adc
add
int
mov
jge
xchg
lret
ljmp
jnp
adc
inc
je
clc
push
xor
out
ss
movl
mov
mov
or
adc
mov
mov
call
sub
dec
push
loope
mov
pushf
inc
loope
adc
adc
sub
and
xchg
andl
push
add
insb
das
lea
sbb
add
sti
movsl
pusha
andb
ljmp
mov
insb
add
jmp
fstl
add
maskmovq
sahf
sbb
cld
pop
push
cmpsb
xchg
and
std
pop
mov
test
lods
and
xchg
add
mov
cmpsl
movsb
std
mov
andl
push
push
mov
mov
mov
mov
pop
pop
popf
sbb
sbb
push
xchg
inc
icebp
mov
movsl
mov
and
add
lcall
sti
cmp
mov
data16
arpl
jp
jnp
sbb
imul
fisttpl
jp
cmpsl
mov
xor
ljmp
std
mov
pop
rclb
imul
icebp
popf
aam
sbb
sbb
or
fiaddl
lcall
test
inc
jl
jmp
movw
jg
ljmp
js
jnp
mov
arpl
sbbl
mov
stc
jno,pn
jp
xlat
lea
or
sub
push
pop
negl
xchg
aad
pop
in
push
mov
sub
test
jbe
test
adc
stc
cmpsb
mov
xchg
xlat
xchg
xchg
adc
or
adc
mov
or
push
add
push
dec
ja
out
pusha
ret
les
lcall
xchg
pop
cmp
outsl
sarb
ss
and
xchg
cs
pop
scas
mov
mov
popa
addr16
mov
ja
cmovo
dec
mov
dec
test
inc
test
gs
sub
ss
adc
dec
fistps
jle
cmp
daa
xchg
cs
or
imul
mov
sub
rol
ja
fcoml
or
fstpt
adc
or
lahf
arpl
xchg
or
subb
inc
or
aam
sub
jg
jo
mov
and
adc
loop
int3
pop
dec
pop
xlat
push
shll
cmp
cwtl
sub
lock
cmc
lahf
int
add
jge
jle
aad
pop
insb
fnstenv
mov
xor
cmpsb
out
rclb
xor
sbb
lahf
xor
push
dec
in
lods
xor
cmp
inc
mov
stos
fisubrl
cmp
insl
popa
cmpsb
movsb
adc
out
movsb
push
adc
add
stos
and
test
mov
jnp
xor
sbbl
imul
stos
xchg
shll
mov
adc
stc
inc
in
add
pop
inc
mov
xchg
ror
cmpsl
inc
jge
hlt
push
imul
pop
sbb
cmp
or
lods
xor
sub
xor
fdivr
mov
addb
cmpsl
pop
cmp
push
int3
inc
jne
adc
cmc
or
movsl
push
pop
int3
xor
adcb
fcmove
mov
sbb
mov
pop
stos
inc
lods
xchg
inc
orl
adc
xlat
fists
add
loope
int3
adc
popf
pop
pushf
add
cmp
rep
add
or
push
mov
pop
lea
lcall
inc
es
xchg
loopne
enter
adc
loopne
mov
loopne
in
or
lahf
leave
sub
je
push
punpcklwd
inc
sbbl
mov
adc
add
mov
cmp
or
adc
loopne
mov
sub
mov
ljmp
mov
dec
stc
enter
notl
ss
jge
inc
push
or
adc
rcr
cmpsl
loop
mov
xor
out
dec
sbb
xor
lcall
repz
inc
mov
mov
sub
les
sbb
xchg
out
test
cltd
mov
mov
xchg
jb
in
sbb
mov
in
mov
mov
lahf
push
jmp
loope
adc
roll
cmpsb
lcall
mov
mov
test
sub
push
je
setns
mov
imul
xor
push
mov
mov
out
cmp
stc
cltd
movsl
inc
push
sbb
dec
pop
les
jb
mov
ret
sub
cltd
jbe
and
jp
mov
repz
jg
push
inc
icebp
jg
cmpsl
inc
in
sahf
test
insb
das
aaa
pop
jecxz
into
es
jecxz
inc
in
imul
outsl
and
rol
inc
mov
xor
mov
sub
push
mov
xchg
les
push
cmp
das
push
xlat
dec
test
insl
cmpsl
pop
jge,pn
or
fcomps
insl
dec
cltd
xchg
or
out
popa
xor
movsl
jne
inc
popl
pop
mov
mov
mov
inc
inc
adc
or
and
ret
cmpb
movl
cmp
xchg
push
int
push
cltd
push
mov
push
clc
les
mov
mov
insl
es
imul
cmp
mov
mov
push
lret
movsl
not
or
pop
pushf
jno
testb
mov
hlt
dec
fimuls
xor
add
sbb
jnp
jb
clc
aad
sbb
cmp
or
pop
popf
test
dec
ds
mov
cld
pop
xor
mov
aam
push
push
and
mov
cli
adc
cmp
cli
fstps
arpl
ret
jne
inc
mov
mov
mov
mull
dec
add
shr
and
dec
xchg
frstor
pusha
inc
cmp
imul
fwait
sub
popa
and
in
pop
push
xlat
unpcklps
lea
lock
outsb
and
arpl
insl
cmpsl
adc
dec
popa
mov
enter
bound
xchg
inc
cs
jae
mov
lods
cwtl
dec
enter
into
sub
push
inc
insb
outsl
dec
pop
inc
sbb
mov
leave
std
push
pop
cmp
addr16
test
sbb
and
mov
iret
test
std
in
sub
das
push
inc
lds
adc
mov
mov
int3
lret
int3
je
cld
stos
enter
cs
fwait
pop
mov
je
outsl
ffreep
jne
push
adc
cmp
add
and
sbb
pop
sub
or
js
imul
xor
sbb
loopne
daa
dec
inc
testl
mov
and
test
ficoms
dec
aas
mov
inc
push
gs
notb
push
mov
xchg
aaa
leave
roll
imul
lcall
movsl
lret
cmp
xchg
adcl
sbb
jle
mov
icebp
push
inc
outsl
or
push
subb
jecxz
clc
sbb
jg
popa
mov
jo
sbb
fstpl
mov
movsb
lret
adc
pop
out
mov
in
mov
insb
insb
xchg
popf
cmp
xchg
push
les
aam
inc
xlat
jle
aam
repnz
mov
xchg
sbb
ret
int3
repz
dec
sti
mov
test
push
jle
aam
and
sbbb
pop
jge
aam
jmp
imul
cmp
test
jo
push
jmp
aam
insb
icebp
mov
rolb
pop
and
fs
stos
dec
dec
ret
mov
aad
mov
gs
inc
pop
sbb
or
sub
cmp
mov
pop
mov
inc
je
int
inc
mov
repz
fcmovb
lods
sub
test
sbb
sub
add
xchg
ret
pushf
out
and
mov
mov
pop
lahf
in
push
inc
fcmovne
xor
out
xor
and
inc
fwait
mov
in
pusha
call
cmp
js
cmpsb
or
gs
sbb
int
adc
mov
or
push
mov
das
das
pop
test
xorl
in
loopne
cld
pop
mov
clc
call
add
inc
test
loop
adcb
mov
loopne
jb
inc
scas
mov
mov
cmp
and
jl
shll
sub
std
out
das
out
shrl
mov
fcoms
push
adc
fistl
xchg
sub
popf
rorb
jo
dec
testb
inc
jecxz
xor
addr16
lods
pop
shl
lret
rcrb
cmp
les
xor
jo
mov
sbb
xlat
out
shll
inc
das
sub
mov
mov
jg
iret
xchg
and
push
mov
dec
xorl
aad
shr
std
push
orb
and
in
jg
adc
jge
mov
xchg
xchg
xor
push
call
jg
xchg
clc
adc
pop
xor
scas
mov
fnstcw
cwtl
xchg
and
fldl
or
cmpl
loope
jns
bswap
pop
push
push
daa
lret
leave
xchg
bound
push
sub
pop
mov
aaa
push
popa
push
test
shl
mov
pop
pushf
adc
mov
movsl
sub
pmaxsw
push
push
das
mov
ja
pop
sbb
mov
mov
push
sub
xchg
stos
addb
adc
fisubrl
and
add
movsb
aas
pop
outsl
jnp
dec
push
or
mov
push
fwait
outsl
rcrb
cltd
jmp
insb
loopne
in
push
dec
mov
and
stc
xchg
cmc
pop
sub
mov
push
popa
or
push
out
cmc
mov
test
fcmovne
pushf
cmc
sub
dec
incb
aas
bnd
pop
dec
push
std
cmpsb
mov
add
fdivrs
movsb
mov
xchg
adc
adc
sti
xor
shll
mov
xchg
xor
and
cmp
das
pop
lret
ja
jp
xorb
mov
ficomps
mov
cltd
ljmp
xor
jno
lret
xchg
data16
pop
and
xor
adc
imul
fistl
mov
jne
mov
ret
mov
comiss
cli
jp
mov
dec
test
fldenv
cmpsl
push
mov
and
test
pop
ss
dec
inc
in
scas
inc
stos
push
movsb
in
rclb
cmp
notb
xor
in
adc
negb
addr16
inc
sti
cltd
sarb
mov
add
addr16
fnsave
es
xor
or
lds
rorb
stos
outsl
sbb
je
and
in
ljmp
addr16
arpl
mov
fcmovnu
and
sub
popa
push
xor
and
adc
adc
push
jg
pop
int3
dec
gs
shll
jp
mov
mov
mov
xlat
push
add
std
stc
push
pushf
add
leave
xor
mov
adc
jmp
into
sub
cltd
cwtl
jl
sub
inc
dec
jne
cmp
mov
add
sbbl
fildl
aad
iret
mov
pop
or
imul
lret
push
push
fisttps
xchg
stc
adc
fcoms
adc
aam
add
push
lea
test
sub
test
sti
test
inc
roll
jns
dec
and
jmp
jge
in
mov
divb
popa
test
clc
sbb
pop
ss
pop
xchg
adc
push
sub
pop
repnz
ret
scas
stos
cli
jo
fidivrl
cmp
out
pop
xchg
inc
push
aam
shll
fidivl
jno
movl
and
dec
shr
xchg
push
pop
testl
or
push
mov
or
xchg
mov
push
imull
movsb
movsl
jb
and
mov
aas
popa
ds
mov
shrl
aas
xchg
cmp
pop
mov
rolb
jne
pusha
test
dec
push
inc
push
and
jmp
aam
adc
add
pop
clc
sahf
and
mov
in
mov
or
jg
mov
testb
stc
outsb
dec
sbb
jo
xchg
mov
push
movsb
inc
bound
sbb
cmpsb
jmp
dec
mov
xor
ret
inc
inc
sahf
jnp
dec
jns
add
js
sbb
xorb
adcl
push
cmp
in
insl
cmp
ror
mov
add
push
sti
cwtl
ror
std
mov
jo
sbb
add
sbb
leave
pop
mov
cwtl
add
jl
sub
xchg
fcoms
cltd
lret
add
push
jle
adc
or
pop
mov
xor
push
adc
cmpsl
cmpsb
addr16
cwtl
xlat
push
les
push
fdivrl
test
ss
call
pop
mov
adc
sbb
jp
dec
sti
mov
les
inc
ret
cli
shl
mov
jne
jge
outsl
aad
sahf
ss
cmp
add
outsl
cmp
into
sbb
es
push
decl
aaa
roll
mov
push
adc
dec
cmc
jp
in
cmpb
sbb
outsl
aam
xchg
fists
int
aaa
insb
push
or
add
rolb
xlat
sarl
pop
and
das
enter
clc
aad
test
jl
shrl
add
cmc
mov
jp
xchg
pop
pop
sarl
sub
fs
idivb
dec
jle
pop
adc
lret
mov
pop
cmc
test
and
push
es
test
xchg
sbb
xor
loopne
pop
adc
movsl
sub
pushf
jnp
test
push
dec
lea
add
fisttps
incb
xchg
gs
cmp
mull
test
cmpb
into
push
cld
testl
add
in
xor
test
push
movsl
pop
push
fwait
das
out
mov
jl
enter
sub
push
pop
aaa
fwait
icebp
ss
sarb
xchg
scas
scas
std
ds
ss
test
push
dec
or
xchg
mov
outsl
testl
mov
enter
mov
aaa
dec
xor
dec
and
sub
push
pop
sarb
imul
dec
adc
xorb
stos
and
jne
mov
mov
adc
push
mov
fiaddl
ret
aad
push
hlt
repz
and
inc
in
mov
int3
inc
aam
pop
mov
or
inc
and
jno
jne
test
pop
test
mov
mov
xor
scas
add
push
pop
add
leave
fcomip
xlat
call
xlat
xchg
push
std
sarb
sub
lods
jg
rol
cmp
fistpll
push
fstl
bnd
or
pcmpeqd
push
es
xchg
mov
outsb
mov
cmpsb
int
and
sti
ja
imull
aam
decl
add
dec
loope
pop
fidivs
dec
lods
orl
inc
enter
adc
fists
xchg
ja
fs
addb
and
dec
and
xchg
mov
jns
call
sti
call
adc
inc
jo
jne
push
mov
aam
xchg
sub
pop
mov
mov
mov
adc
adc
cld
xchg
and
into
scas
sub
push
jmp
daa
cmp
inc
incl
sar
imul
and
xchg
sbbl
fstpl
xor
adc
ja
nop
xor
cmp
jmp
ss
jp
call
into
inc
das
pop
xlat
pop
inc
jne
aas
mov
add
sarl
imul
fcomip
or
mov
out
test
adc
outsb
fwait
and
stos
arpl
std
mov
mov
cmp
sarl
jl
sbb
fildl
idiv
push
dec
scas
push
or
data16
fimuls
fistps
cwtl
scas
pop
cmp
mov
or
xchg
lods
pop
add
cli
pop
bnd
fs
sub
sub
jge
dec
inc
out
add
scas
jno
push
out
test
jb
cltd
or
cmp
shll
mov
push
mull
sub
xor
dec
mov
mov
rol
lods
cwtl
xchg
stos
sbb
test
inc
leave
jo
adc
js
int3
mov
js
insb
adc
mov
or
dec
xchg
in
stos
mov
jno
adc
ret
les
jecxz
xchg
jge
scas
loop
mov
push
jns
push
or
jmp
or
lcall
jge
jae
add
add
popf
mov
int3
out
sahf
and
adc
cmp
pushf
ljmp
int3
lret
adcl
ret
xchg
int
or
cmpsb
xchg
nop
mov
icebp
das
pop
add
outsb
dec
mov
sbb
cmc
push
imul
dec
aas
or
push
mov
in
inc
push
jns
dec
cmp
jmp
adc
mov
cmp
push
lcall
push
lods
ret
mov
cmp
jb
xor
ret
adc
fisttpl
ficoml
rcrb
dec
shll
mov
pcmpgtb
test
pusha
mov
mov
xor
ret
add
adc
std
add
inc
les
dec
jl
enter
push
mov
pop
out
pop
push
nop
shld
jl
sub
ret
mov
add
jbe
xor
dec
insb
jg
sub
add
mov
xchg
jno
xchg
in
mov
out
int
orb
adc
add
cli
xlat
fidivs
or
je
loope
bts
in
push
dec
dec
test
jmp
cli
pop
test
jl
ss
mov
sbb
xchg
jnp
sub
xor
mov
cs
and
mov
mov
scas
pop
and
pop
or
push
adcb
push
push
push
xor
lahf
pop
fwait
xor
loop
add
loopne
push
in
mov
in
mov
icebp
mov
fisttps
fsts
sub
mov
push
ljmp
xchg
sbb
lds
scas
in
icebp
test
std
push
or
es
jmp
jmp
jns
arpl
inc
enter
pop
mov
hlt
jno
gs
jae
addr16
jae
and
ljmp
filds
mov
iret
adc
mov
add
ret
push
xchg
sub
stos
das
xor
cmp
jmp
xchg
test
xor
sbb
ret
stos
fwait
ljmp
cmp
or
sub
jp
cli
test
dec
mov
mov
push
je
int
les
das
mov
in
mov
pop
test
jmp
and
insl
leave
dec
out
stos
lret
jg
mov
jp
stos
into
and
loop
pusha
cmpsb
push
in
jne
dec
pop
cmpsb
std
out
xchg
scas
mov
pop
pop
pop
inc
sbb
sub
les
xchg
insl
jae
jnp
jp
cmp
loope
mov
aaa
ja
insl
inc
jb
mov
subl
or
test
pop
or
and
add
or
mov
push
outsl
xchg
sbb
mov
mov
outsl
sbb
lahf
ss
in
or
js
push
outsl
pop
mov
cmp
sub
push
insb
jae
inc
xor
pop
jns
inc
cmovnp
pop
pop
call
sahf
push
testl
pushf
push
outsb
popf
or
add
sbb
cmc
int
push
xchg
stc
add
push
stc
imulb
cwtl
inc
lock
mov
ss
lds
loopne
add
sub
sbb
add
or
popa
leave
mov
or
dec
lahf
mov
insb
std
das
cmp
clc
bound
in
push
jle
enter
aaa
fstps
push
mov
mov
cwtl
pop
sbb
jp
loop
sti
loope
fldt
out
xor
jns
das
insb
pop
sub
fdivl
lahf
jns
fdiv
dec
test
sub
mov
ret
dec
test
shr
xor
mov
cld
push
lods
xchg
outsb
shlb
push
leave
dec
jae
push
or
mov
mov
popa
leave
xchg
pop
ds
out
lock
nop
and
dec
stos
push
fidivs
or
lret
cltd
hlt
pop
sbb
aam
cwtl
xchg
test
pop
push
stos
insb
sbb
imul
popf
pop
inc
call
and
mov
cld
cmp
dec
push
and
mov
lods
lods
out
insl
jg
cs
loop
stc
or
mov
stos
stos
fstpl
xor
pop
jo
jmp
fcmovbe
sub
adc
jg
mov
xlat
or
pop
inc
pop
add
stos
or
stc
rorl
jno
adc
or
mov
pop
pushl
insl
filds
push
loope
jmp
adc
aas
mov
push
lock
or
fdivrl
mov
arpl
mov
add
xorl
jno
xchg
cmpsl
sbb
lds
incl
lret
pusha
jb
loope
cmp
int3
xlat
iret
adc
ds
loop
mov
outsl
test
int
ret
stos
mov
pop
loopnew
inc
lods
add
cmp
sub
sbbb
dec
outsb
jo
testl
adc
push
test
mov
cmp
test
mov
push
insl
enter
cli
pop
jl
rcrb
pop
mov
ss
leave
mov
fbstp
insl
pop
cmpsl
sti
and
mov
mov
rorb
and
inc
sarl
je
jo
fwait
jg
lret
icebp
mov
add
fmull
pop
iret
orb
cmp
push
repz
into
pop
jnp
inc
adc
jecxz
js
js
icebp
sbb
iret
mov
hlt
sub
bound
imul
stc
xchg
addr16
push
inc
and
jle
js
push
pushf
fs
mov
rolb
divb
stos
jns
xor
popa
aas
xlat
sahf
jg
mov
lock
cmpsl
add
add
mov
daa
hlt
xchg
mov
nop
inc
fistl
outsl
test
ret
xor
xchg
cld
movsl
ljmp
mov
cld
pop
and
push
lods
mov
or
mov
and
icebp
mov
xor
inc
mov
rcll
cmpsl
lock
push
lcall
cmp
mov
push
mov
mov
xor
add
mov
mov
test
lret
cmc
imul
std
dec
in
enter
outsb
enter
loopne
mov
add
push
xor
xor
sbb
pop
cmp
push
push
fwait
adc
fs
movsb
daa
fdivl
xor
mov
pop
out
xchg
push
jno
mov
add
push
inc
outsb
cmpsb
jbe
jae
sub
push
shll
sbb
jno
mov
lds
cmpsb
aaa
jns
aas
in
gs
jns
sbbb
push
fadd
sub
iret
xor
sti
int3
push
les
or
push
pushf
mov
imul
add
xor
ret
in
xchg
adc
mov
cmp
inc
dec
add
mov
in
lret
ficoml
or
arpl
ror
add
jecxz
cltd
add
pop
mov
xchg
sub
outsl
mov
iret
adc
testb
cmp
fwait
test
mov
pop
imul
cwtl
dec
pop
arpl
xchg
data16
xchg
sub
pop
or
lods
and
push
push
mov
pushf
dec
or
leave
fadds
repnz
mov
dec
mov
ds
xchg
mov
mov
inc
fists
sbb
pop
mov
add
cmc
inc
add
xor
loopne
cmp
ret
data16
dec
sub
rolb
push
test
or
je,pn
push
and
dec
rcrl
imul
outsl
mov
xchg
ret
testb
int
jecxz
js
sub
cwtl
xchg
pushf
xchg
aam
inc
push
rclb
xchg
popa
jb
push
cmp
pop
std
and
adc
cli
adc
push
ret
and
fists
andb
dec
stos
dec
rol
addr16
xchg
xchg
adcl
mov
shrb
xor
ljmp
clc
frstor
push
cmp
ss
mov
sbbb
sbb
negl
mov
jg
ds
fcoms
push
xchg
push
pop
ficoms
leave
into
cltd
in
shrl
mov
xor
mov
jp
push
adc
mov
push
fsubrl
cmp
mov
mov
in
out
and
imul
dec
movsb
test
and
xor
mov
fnstsw
iret
stos
xor
test
mov
fidivl
dec
inc
xor
fildl
dec
inc
xchg
and
adc
cmpsl
dec
push
das
ds
popf
in
lahf
cs
daa
add
sbb
rclb
add
clc
jp
sub
insb
mov
pop
xchg
es
inc
stos
or
ficompl
xchg
leave
cmp
adc
sti
and
imul
mov
test
call
in
pop
add
push
xor
jno
ja
inc
mov
sbb
xor
mov
setb
xchg
add
lret
mov
mov
adc
lcall
cmpsl
and
lock
lods
xor
dec
jne
mov
int
sbb
outsl
lods
push
xchg
mov
mov
push
into
enter
dec
mov
sub
stos
cmpsl
shlb
mov
mov
adc
out
pop
andb
cmp
inc
shl
xor
xchg
jbe
pop
sbb
add
inc
inc
dec
fldcw
mov
inc
sbb
outsl
dec
lret
push
pop
adc
xlat
clc
pop
xlat
xor
dec
inc
mov
repnz
xchg
dec
adc
das
int
imul
test
cmp
adc
inc
ljmp
dec
adc
inc
cwtl
xchg
mov
or
adcb
cmp
jg
mov
xor
sub
cli
pop
xchg
enter
inc
inc
push
stos
roll
aam
xor
mov
jne
sub
add
xor
pop
adc
or
mov
lahf
cltd
aam
add
imul
push
adc
adcl
int3
or
pushf
cmp
and
cmc
xchg
xchg
aas
setne
dec
dec
adcb
daa
mov
lahf
pop
dec
lret
xchg
cmpb
rcll
add
enter
roll
jl
inc
fcoms
repnz
push
jecxz
pusha
adc
bound
mov
into
std
push
fnstcw
adc
xchg
mov
pop
aas
movsl
lds
daa
cmp
icebp
mov
fs
inc
jb
andl
insl
ljmp
cmc
icebp
mov
add
push
incb
xchg
out
and
lret
xor
mov
adc
jg
mov
std
popa
ret
push
call
daa
lahf
push
pop
lods
jns
lahf
xor
das
shlb
xor
xchg
sub
pop
mov
push
cmp
out
clc
dec
cld
cmp
test
insl
and
adcl
cmpl
test
aam
xchg
sub
push
fsubp
mov
scas
repz
adc
cmp
nop
xchg
clc
push
fisubs
mov
ss
push
ljmp
ret
xor
jne
movsl
lahf
je
sbb
mov
lcall
int3
push
dec
inc
mov
popa
sub
movsb
ss
sub
and
xor
ss
fs
pop
xor
rorw
divl
mov
popf
mov
or
mov
dec
fnstsw
cmp
mov
sub
push
scas
shlb
scas
fstpl
jmp
iret
jecxz
or
fisubrl
adc
sbb
push
in
ja
sahf
and
or
dec
cmc
dec
aaa
mov
pop
fbld
stc
sub
or
cwtl
push
call
jl
mov
lods
and
adc
push
push
stos
stos
fldenv
lea
aad
or
ret
jge
popf
add
push
xlat
roll
jp
leave
repz
or
mov
mov
loope
sbb
add
sbb
sbb
inc
xchg
test
fwait
xchg
pop
inc
dec
gs
mov
gs
in
sub
ljmp
adc
xchg
xchg
mov
mov
fistpll
add
shlb
xor
lea
lahf
mov
mov
es
sub
jno
sub
cmc
test
lret
data16
and
testb
cmpsb
push
cld
add
data16
ret
clc
leave
popa
int3
push
shrl
add
push
popa
testl
fcomps
cli
inc
leave
ds
fs
cmp
inc
rcrb
out
rcll
adc
ja
insb
inc
jbe
add
pop
and
das
pop
mov
push
jmp
mov
ja
add
inc
es
dec
in
gs
push
mov
adc
adc
outsl
lea
jle,pt
ds
xchg
fisubrl
das
jg
push
popf
aad
cmp
stc
cli
jb
cmc
add
sbbl
jp
gs
inc
adc
mov
inc
aas
fs
push
lods
push
fnstsw
adc
pop
hlt
jae
xor
addr16
fs
mov
fs
push
pop
push
repnz
mov
mov
hlt
push
dec
fs
adc
mov
xchg
pop
fidivrl
aad
cmc
int
call
arpl
lcall
add
inc
push
in
mov
mov
rcr
lret
push
shr
int3
dec
adc
rcrb
ret
in
scas
test
lahf
jmp
jmp
inc
or
cmp
std
cli
xchg
int
bound
and
cmp
loope
dec
roll
out
dec
test
jg
add
das
pop
xchg
gs
jo
arpl
mov
mov
ret
imul
ret
mov
cs
pop
xchg
scas
js
nop
cli
jl
mov
fistpl
stos
or
sarl
nop
or
push
dec
sbb
adc
pop
sbb
adc
lock
inc
orb
fcmovu
add
fucomip
andl
dec
mov
push
andl
xor
xor
icebp
mov
ret
jb
rcrb
stc
fldt
addr16
xchg
adc
mov
inc
mov
insb
or
arpl
aas
cmp
fprem1
xor
arpl
lahf
adc
pop
int
cmp
xor
divl
jne
mov
lahf
add
sub
fcoms
aaa
pop
in
in
rcrb
or
mov
scas
pop
pop
cmc
push
inc
mov
xchg
mov
dec
pop
ss
call
or
lds
loope
shrl
jne
std
mov
in
int3
cld
mov
call
data16
jl
ss
or
mov
push
sub
aaa
out
cwtl
dec
jnp
sbb
int3
sub
ret
or
push
jbe
out
xor
out
xorb
mov
lea
jbe
push
dec
cld
lock
jne
outsb
pop
iret
jnp
cli
ja
pusha
mov
rcrl
loope
das
scas
fisttpl
scas
xlat
pop
dec
std
or
sbb
es
leave
hlt
das
push
push
jg
xchg
pop
jle
pop
rep
xchg
ss
push
adc
adc
icebp
daa
mov
aad
les
enter
sub
lods
dec
sub
je
cmpsb
jae
stos
and
loop
daa
xor
adcb
pop
cmpsb
mov
mov
dec
cld
sub
in
mov
cmp
clc
in
movsb
mov
add
notb
pop
fildl
xchg
xchg
sub
popa
mov
sub
arpl
sub
sahf
sbb
add
or
insb
in
aam
inc
pop
or
pushf
clc
mov
popa
nop
mov
stc
sahf
fwait
setne
adc
int3
mov
sti
gs
aas
pop
mov
test
lock
in
scas
mov
dec
xchg
and
push
inc
dec
inc
push
dec
mov
js
and
cs
call
or
cmc
cltd
shrl
xchg
out
inc
mov
dec
sub
lea
inc
sub
fs
jns
mov
mov
ja
xchg
mov
das
fistpll
dec
icebp
mov
xor
jnp
aaa
mov
das
das
sbb
xchg
add
dec
adc
addl
mov
out
inc
xchg
repz
adc
pop
fimuls
add
mov
outsl
out
push
mov
ja
or
in
push
outsl
jae
hlt
movsb
lock
loopne
mov
out
ficomps
push
sbb
and
or
xchg
xor
das
addr16
cld
pushf
adc
pop
pop
inc
push
jge
mov
incb
out
jmp
jnp
ret
mov
in
xchg
push
xchg
pop
sbb
insl
loop
cmp
adc
insb
mov
dec
sub
fcmovnb
sub
fnsave
add
xlat
mov
fs
or
mov
ret
stc
and
addr16
daa
rol
pop
sub
jno
pop
xor
add
fwait
mov
fwait
mov
xchg
add
shrb
mov
addr16
add
xchg
repz
dec
cmc
roll
leave
enter
in
je
in
mov
xchg
mulb
lret
ja
mov
jl
fnstenv
test
xchg
leave
shrl
pop
dec
or
xor
add
jg
stos
lods
push
repnz
add
mov
jbe
adc
aad
into
divb
mov
lret
in
adcb
xor
rclb
outsl
bound
xor
shll
out
jb
rcrb
cmp
mov
and
out
rorb
shll
ss
lods
pop
xchg
nop
imul
outsb
cmovs
popf
jle
xor
sti
js
dec
imul
clc
packuswb
mov
loop
hlt
fmull
subl
icebp
jecxz
cli
jb
ljmp
cmp
push
cs
xchg
inc
mov
out
cmp
mov
stc
sbb
shlb
gs
inc
cwtl
aad
mov
lds
fs
push
in
mov
sbb
gs
das
test
movsl
divb
fnstenv
les
mov
mov
pop
lea
lret
jae
add
inc
std
hlt
xchg
mov
insl
das
lret
movsb
pslld
jb
icebp
push
and
xchg
adc
movsb
cmp
xchg
mov
inc
mov
sub
jnp
pusha
loop
hlt
adc
lahf
push
xchg
add
sbb
xor
or
xor
hlt
sbb
cld
jecxz
mov
xchg
mov
ja
fisubrl
and
push
daa
inc
in
add
dec
addb
adc
add
repz
push
jmp
jl
fnstsw
push
lods
sub
cmp
stc
dec
shlb
adc
xor
pop
jge
in
imul
insl
incl
cmp
jo
loopne
shrl
les
sbbb
adcl
outsl
xchg
pusha
xchg
lds
lds
push
outsl
test
out
push
mov
int3
lcall
jge
xchg
js
lret
mov
and
clc
nop
lds
adc
rep
ja
cmpsb
or
jle
in
das
es
pop
xorl
pop
push
push
push
jge
mov
dec
iret
and
pop
sarl
or
call
mov
daa
movsl
subl
outsl
sub
pop
js
sbb
mov
add
icebp
aam
fs
dec
cmp
lea
or
enter
int
fiadds
mov
aad
in
sbb
push
data16
and
clc
cmp
cld
imul
jno
pop
mov
daa
fwait
mov
or
cld
fldt
push
movsb
aas
xchg
pop
sub
push
es
adc
stos
mov
adc
xor
sbb
loop
push
mov
push
pushf
decl
hlt
das
and
stos
push
loop
xchg
lock
push
xchg
stc
fcomi
push
cli
notl
sbb
dec
fcmovbe
ljmp
dec
aam
dec
inc
pusha
push
inc
ficomps
xchg
out
int
and
rclb
out
cwtl
test
xor
mov
jns
mov
lret
int3
sub
stos
ficomps
jle
pop
lea
push
les
enter
insb
pushl
jg
mov
or
xchg
dec
lcall
sti
xlat
xchg
jb
xor
decb
push
adc
xor
cmp
cli
les
pop
add
sub
cli
cltd
xor
dec
add
faddl
adc
cli
popl
lret
sti
mov
inc
jecxz
xor
sbb
int
aas
mov
repnz
inc
test
mov
mov
and
add
inc
outsb
xor
mov
fsubs
mov
xlat
ds
xor
sub
out
rorl
mov
mov
loopne
das
bound
cmp
imul
aam
roll
mov
xchg
push
dec
sub
imul
imul
faddl
dec
or
pop
mov
lods
push
lahf
addb
jg
mov
mov
shrb
jbe
dec
cld
add
clc
scas
aaa
or
sbb
shl
cltd
cmpsl
add
stc
repnz
pop
js
xor
and
dec
jns
fldcw
xchg
outsl
mov
jmp
lock
stc
inc
mov
iret
adc
mov
loopne
mov
adc
xor
jg
xchg
inc
xchg
xchg
ja
and
pop
add
pop
loope
pop
dec
aaa
sbb
out
push
nop
xor
into
cltd
sti
stc
adc
mov
call
lea
push
cmpsb
test
mov
sbb
jae
add
pusha
subb
fdivrl
in
out
movsb
cwtl
inc
fsqrt
mov
adc
push
or
test
mov
xor
shl
xlat
aad
fsubr
popa
push
sti
repnz
sub
mov
add
in
dec
add
dec
hlt
in
fcomps
sbb
notl
cli
imul
lret
push
add
pushf
popf
sub
jne
push
test
loop
mov
js
xorb
out
jg
rorl
outsl
insb
std
push
jg
cmp
in
or
jmp
pop
cmp
mov
mov
xor
mov
cmp
or
xor
xchg
mov
daa
loope
mov
aaa
push
iret
mov
lods
push
das
mov
push
mov
push
in
das
andb
pop
jecxz
mov
outsl
cmpxchg
adc
fcomp
out
push
rclb
xchg
inc
out
iret
adc
add
fs
and
sbb
ret
jmp
or
or
test
mov
loop
lret
push
lcall
lahf
push
mov
inc
out
add
xchg
cld
test
and
jno
rol
xlat
imul
jmp
pusha
dec
xchg
add
mov
outsb
and
nop
incl
pushf
mov
hlt
dec
mov
outsb
add
jp
clc
xor
jle
test
add
hlt
add
push
mov
and
popa
mov
ret
cltd
xchg
xchg
cs
mov
int3
mov
imul
out
hlt
or
inc
xor
inc
adc
adcl
or
fdivl
pop
into
jo
icebp
jle
sbb
outsb
sti
xor
mov
ret
stc
jle
adc
sub
sbb
test
xor
shrl
mov
test
inc
arpl
cld
cmp
jle
xor
repnz
ret
mov
inc
loope
sar
push
bnd
dec
lahf
dec
mov
flds
sub
mov
es
cmpsl
test
mov
shrb
std
sub
jg
bound
adc
aas
xchg
push
jg
or
jle
outsb
add
xor
push
cmp
and
xor
push
loope
jp
mov
sbb
cmpsl
cmp
xchg
mov
mov
ds
pop
xchg
adc
mov
enter
push
bound
fstpt
mov
test
iret
fldt
mov
lcall
push
lods
adc
arpl
icebp
adc
test
fdivr
out
add
insl
add
xor
insb
sti
xlat
sbb
sbb
mov
mov
or
xlat
rorl
cmp
mov
daa
out
cmp
fildll
scas
mov
fdivl
loop
icebp
imul
or
mov
data16
and
fdivp
pop
add
hlt
scas
js
dec
pop
gs
xor
xchg
mov
mov
xor
push
lahf
cs
arpl
ss
or
test
jne
or
and
pusha
mull
data16
and
repnz
lock
and
xchg
aad
inc
fnsave
dec
jns
stos
imul
pop
adc
add
mov
push
call
div
bound
mov
sti
sub
jns
fwait
push
mov
inc
mov
and
mov
mov
xlat
mov
lock
lret
shl
xchg
inc
insl
std
cmp
ja
ljmp
xchg
inc
orb
mov
and
mov
das
int3
sbb
add
inc
adc
pop
cmp
stos
pop
inc
lock
mov
xor
insb
mov
adc
rcrb
mov
dec
xor
or
callw
mov
inc
pushf
sbb
push
jmp
out
popf
inc
psrlw
std
cmp
cmpsb
push
push
mov
jecxz
xor
pop
mov
and
push
data16
cmc
pop
mov
jb
mov
jg
push
test
or
or
push
dec
jl
lahf
movsb
dec
in
roll
or
shll
or
mov
mov
iret
outsb
mov
and
test
stc
xchg
test
cmp
jne
mov
outsl
test
lea
in
pop
adc
cmpsl
pop
in
call
icebp
inc
jo
js
jg
jo
lds
jg
xchg
add
mov
inc
mov
push
add
cwtl
and
ret
cmpsb
cmp
test
cmp
push
adc
dec
je
andl
mov
lods
hlt
icebp
adc
cmp
jbe
push
jmp
inc
sub
outsl
pop
shll
push
fs
data16
xchg
and
pop
notl
sbb
bound
dec
call
pop
jle
mov
cmpsb
xor
adc
add
nop
xorb
inc
mov
push
iret
xor
jno
int
xor
mov
xchg
inc
inc
fiadds
mov
push
sbb
mov
and
in
adc
rclb
add
pop
adc
add
test
shrb
push
pop
cmp
std
fcmovbe
xchg
sbb
sub
mov
test
mov
mov
adc
rcrl
jecxz
jp
scas
pop
nop
dec
insl
call
loopne
xor
bound
sarb
pop
add
lods
jp
jecxz
scas
or
pushf
das
jne
inc
insl
fs
pop
loope
rcrl
xchg
push
ljmp
sbb
nop
xchg
mov
das
test
jo
cmp
jmp
cmpsl
pop
mov
daa
adc
cwtl
scas
adc
daa
pop
dec
adc
push
cltd
subb
insl
out
sub
mov
lahf
or
js
shlb
stos
xchg
xchg
lea
pop
push
push
push
and
dec
cmp
sbb
ret
out
sub
cltd
dec
rcrb
jae
push
gs
popf
scas
sub
ds
rep
mov
dec
lods
aad
sbb
into
push
mov
cmpsl
cld
ret
dec
mov
inc
xor
dec
inc
jns
push
sub
test
xor
outsb
jbe
adc
jns
push
test
mov
jmp
xchg
aaa
bound
imul
adc
pop
mov
test
loop
mov
rcll
std
mov
in
icebp
push
xor
mov
mov
clc
mov
and
mov
push
jae
dec
xlat
rorb
repz
dec
test
and
insb
int3
push
fwait
push
fldt
inc
sbb
mov
lret
fstl
ja
jle
fdivrl
adc
test
jge
in
adc
mov
sbb
icebp
inc
and
in
dec
lods
call
aad
fs
leave
xorb
mov
aaa
xor
add
add
mov
mov
lods
in
insl
or
cmp
es
xor
pop
push
lret
sti
cs
lea
jb
push
sbb
xchg
and
test
mov
xchg
sahf
adc
cmpsl
sub
cli
mov
mov
ret
dec
movb
push
pop
mov
jae
xchg
test
dec
and
xor
movsl
jo
mov
sbb
jge
in
repz
popf
icebp
std
mov
mov
sahf
es
into
sub
xor
dec
clc
push
xor
mov
adc
cmp
aam
hlt
mov
fmull
jne
mov
divb
aad
push
fnsave
push
xor
mov
inc
mov
ja
in
sub
stos
sub
jo
scas
or
adc
inc
xorb
mov
sar
cs
mov
bound
scas
push
stos
lea
jp
jb
jne
cmp
and
sub
scas
aad
loopne
cwtl
movsl
aam
mov
xorl
rolb
jmp
mov
jo
scas
xor
stos
rcrb
mov
mov
push
fildl
jnp
add
arpl
out
je
push
andl
mov
lret
cmp
inc
sti
push
test
aad
ja
mov
jne
mov
mov
out
lds
or
cmp
push
mov
fnsave
xorb
xor
in
dec
mov
mov
out
mov
cli
dec
fsubp
sub
mov
jp
jb
pop
nop
push
pusha
div
ror
aas
imul
inc
jnp
int3
mov
ds
sahf
ds
testl
and
add
sub
push
stc
adc
mov
fstp
push
jle
sti
dec
adc
fnstcw
dec
xchg
xorl
mov
and
inc
push
add
xor
cli
cli
cmp
inc
push
scas
pop
add
sub
xchg
iret
scas
rcrl
or
add
mov
pop
dec
int3
lock
and
xchg
loope
xchg
push
outsl
lds
jl
out
push
add
hlt
jo
rolb
subb
pusha
mov
xchg
repnz
inc
xor
loop
dec
lret
cltd
data16
lea
jmp
fwait
in
outsb
pop
mov
jmp
mov
cmp
leave
mov
add
insb
or
clc
push
and
sub
loopne
fcos
ficompl
jne
inc
lret
mov
xchg
pextrw
sbb
movsb
rcl
daa
mov
in
clc
lock
mov
sub
lds
or
lods
out
daa
and
and
iret
push
pop
cld
pop
add
push
or
mov
pop
inc
or
int3
add
jge
mov
mov
fidivrl
cmpl
fsubs
sbb
in
and
jge
sbb
mov
insb
inc
and
cld
add
push
dec
sub
push
shll
cli
aaa
xor
test
insl
xchg
addr16
jnp
aad
shrl
imul
mov
pop
mov
or
pushf
dec
cmp
sub
mov
add
mov
bound
out
insb
test
pop
dec
dec
jle
adc
fstl
jge
lret
into
pop
pushf
aas
aas
pop
mov
sbb
jnp
sahf
mov
cltd
lds
sbb
mov
push
cmp
sub
xor
iret
in
push
lock
fisttpl
mov
loope
lea
cmpsb
scas
pop
xchg
sbb
aam
mov
pop
imul
aas
sbb
cwtl
adc
iret
cmp
jbe
jnp
mov
jne
or
push
xchg
xchg
and
popa
pop
stos
cld
inc
cmp
icebp
bts
adc
sti
xchg
rorb
aad
or
aad
adc
or
jno
daa
or
jno
hlt
jmp
add
sub
icebp
enter
mov
cmp
popa
loop
mull
jbe
sbb
mov
jns
adc
addr16
sub
orb
dec
hlt
push
inc
push
sub
mov
cli
aam
stos
lret
mov
mov
sti
cmp
xchg
mov
and
std
mov
jne,pt
sub
xorb
leave
push
outsl
daa
enter
leave
lret
xchg
xor
enter
sub
or
inc
bound
inc
inc
and
insb
sbb
in
jg
jae
lret
aaa
js
mov
lock
or
mov
pop
xchg
fnsave
rcr
in
inc
xlat
push
add
xchg
sti
mov
sar
popf
je
ret
fdivrp
mov
dec
jge
imul
pop
int3
scas
in
movsl
sub
or
sub
shl
and
mov
pop
cld
test
jmp
fstl
add
push
popl
push
cmpsl
push
stc
sbb
loop
mov
sub
and
push
inc
jge
out
mov
mov
push
pop
je
imul
add
adc
insb
push
jns
dec
aad
enter
lods
test
daa
js
jno
test
inc
lahf
imul
movsb
shr
inc
xlat
sbb
jnp
pop
xchg
es
adc
mov
adc
lods
and
sub
lock
lea
lods
inc
cmp
mov
andl
mov
into
call
out
or
cmp
cld
xchg
mov
repz
sub
jbe
repnz
add
mov
xor
out
sub
movsb
xor
test
xadd
sub
pushf
push
jnp
icebp
pushf
dec
xor
mov
xchg
shll
mov
lods
jae
adc
pop
out
inc
mov
call
cmp
stc
shlb
xor
fnstcw
out
mov
out
xor
mov
rorb
xchg
mov
inc
repnz
pop
sub
repnz
cli
mov
jbe
adc
shrl
aad
fimuls
add
std
std
dec
pop
es
pop
lds
xchg
add
popf
mov
mov
or
and
jno
dec
dec
cmp
push
lahf
std
iret
je
in
add
sbb
loope
stos
mov
or
and
sbb
dec
jo
lods
mov
divb
imul
dec
in
adc
push
in
adc
mov
hlt
xchg
rolb
jmp
sub
jno
inc
lock
loopne
fbstp
mov
or
adc
lea
xor
lods
mov
jl
insl
mov
sbb
test
pusha
sbb
adc
mov
xchg
mov
jp
jg
test
imul
adc
mov
mov
out
push
pop
aaa
push
sub
ror
test
xchg
in
xchg
sub
or
adcb
out
lahf
inc
fcoms
cmp
call
adc
icebp
lods
or
pop
adc
xor
out
inc
xlat
fwait
imul
int3
adc
inc
dec
aam
adc
lds
sub
dec
push
aad
scas
mov
xchg
xchg
add
sti
and
mov
cmpsl
ljmp
nop
negb
jne
push
lret
sub
xor
adc
outsb
cli
hlt
clc
push
or
cmp
inc
mov
mull
mov
lcall
xchg
lock
lcall
mov
fisttps
out
scas
push
outsl
ror
mov
dec
mov
cld
out
frndint
mov
jbe
stos
pop
les
mov
int3
push
push
rorl
push
aam
inc
mov
dec
cmp
xor
fdivrl
jae,pn
and
je
push
xacquire
aas
mov
insl
or
repz
test
daa
cs
mov
leave
pop
adc
or
leave
adc
mov
push
adc
sbb
xchg
mov
movsb
mov
xor
mov
mov
jb
shlb
xor
ljmp
incb
sub
pop
push
popf
out
mov
loopne
and
lea
push
cmp
icebp
mov
dec
or
fimull
xchg
jp
cmp
push
mov
ret
jae
loop
mov
out
sbb
mov
into
jo
xor
repnz
hlt
sub
or
and
pop
jmp
stos
sbb
punpcklwd
sahf
lahf
ficompl
mov
pop
jbe
je
pop
inc
movsl
add
inc
insl
jmp
mov
sub
int
dec
push
push
push
inc
jmp
mov
jge
repnz
pop
test
cwtl
fcompl
fcoml
shll
dec
pop
ds
mov
and
sti
mov
ja
test
into
inc
mov
fs
mov
adc
mov
pop
push
cmp
jb
cld
or
popa
cs
icebp
aad
xor
xor
add
sub
outsl
adc
dec
pop
and
test
roll
aas
imul
mov
repnz
jo
inc
sbb
pop
cmpsl
mov
jb
lret
fucomip
mov
xchg
mov
arpl
scas
or
les
pop
aaa
pop
jmp
cmpsb
movsl
sbb
sarb
mov
xor
sbb
jmp
lcall
mov
cmp
mov
test
std
cmp
rcrb
lret
sub
jmp
xchg
aad
fimull
filds
aad
xchg
sbb
jmp
mov
andl
inc
stc
js
add
mov
mov
scas
das
mov
mov
stos
pop
pop
dec
lret
mov
push
pop
inc
sbb
jp
mov
filds
inc
arpl
loop
sahf
mov
in
das
in
and
iret
mov
jecxz
arpl
ljmp
xor
js
push
aam
xorb
aam
push
scas
lods
and
btc
sbb
adc
mov
lods
out
bound
or
adc
arpl
sbb
or
dec
add
outsb
sub
cmc
pop
mov
inc
pop
mov
loopne
xorb
cmp
loope
mov
aaa
sahf
pop
cltd
mov
aam
movsl
add
lahf
sub
aaa
jp
xor
stos
push
js
and
cmp
xlat
mov
lea
inc
cmp
xor
aaa
xchg
into
cli
lods
sti
mov
mov
mov
sub
in
icebp
rolb
movsl
aad
cmp
clc
ss
push
enter
adc
nop
mov
inc
add
push
bound
test
in
push
pushf
iret
and
jge
cmc
fs
xchg
mov
lcall
lock
in
jmp
test
xchg
or
jmp
cmp
icebp
aas
test
call
push
mov
jle
std
mov
addl
mov
shlb
inc
xchg
and
pop
cmp
ss
out
xchg
decb
jns
call
sti
and
inc
stos
inc
xchg
cld
inc
inc
aaa
fyl2x
fs
roll
cmp
test
loop
mov
push
adc
imul
jbe
fcomps
enter
sub
pop
sub
mov
inc
mov
popf
cmp
and
out
adc
faddl
jne
out
call
cmovae
mov
aad
das
pop
pop
mov
ja
jle
das
sbb
fidivs
fucom
sub
mov
clc
in
popa
jl
ret
incl
out
stc
pop
xor
adc
push
inc
iret
imul
fs
jmp
gs
jmp
lds
nop
xchg
fstpt
mov
pop
cli
je
ss
inc
aaa
mov
inc
mov
push
arpl
or
rclb
sub
mov
ret
scas
jne
in
lcall
or
pop
jae
xchg
jo
rol
sub
sbb
jg
scas
jle
aam
mov
and
push
mov
add
jge
xchg
jl
scas
or
cs
sbb
rcrb
xchg
xchg
cmp
jns
movsb
movsb
push
pop
ret
push
push
or
cli
test
dec
xchg
loope
pop
lds
popf
mov
int3
jmp
hlt
fldlg2
movsb
cli
dec
dec
ss
cmp
xor
mov
inc
xchg
jo
js
movsl
stos
dec
lock
loopne
cmovne
ja
shr
mov
orl
clc
lea
mov
inc
jle
mov
push
outsl
add
arpl
cmc
fwait
adc
or
jg
mov
test
outsl
cmp
mov
add
lods
sub
and
and
sti
aaa
es
test
ret
out
mov
pop
rol
and
ljmp
shl
xchg
cmp
rcll
push
sbb
ss
imul
idivb
mov
cwtl
stos
adcb
cli
lods
stos
sbb
and
jae
fdivs
cmp
mov
lock
mov
xchg
aas
adc
push
fldcw
data16
fsubl
enter
and
jno
push
in
in
or
jns
ror
leave
aaa
push
lret
mov
xchg
arpl
lods
jb
push
inc
test
cwtl
jge
cmpsl
cmp
xor
mov
cld
test
and
scas
std
jno
push
mov
mov
adc
ja
addr16
inc
sbb
pop
xchg
mov
test
cmpsb
inc
pusha
stos
iret
enter
lahf
mov
insl
dec
dec
adc
jne
rcl
sbb
inc
divb
push
and
inc
roll
fwait
aad
push
adc
mov
cmpsl
mov
loopne
cmp
lcall
cltd
pop
sub
cs
adcb
xchg
inc
sbb
lods
add
lock
imul
sub
xchg
xor
mov
ror
xor
out
xor
mov
sbb
jg
data16
dec
adc
daa
in
xchg
subl
pushf
data16
lcall
sahf
mov
mov
pop
mov
xor
jno
ljmp
pusha
cmp
inc
cmpsb
dec
mul
aas
jge
xchg
outsl
lcall
ret
pop
jge
int3
inc
pop
outsb
and
mov
push
pop
xchg
pop
rolb
aas
mov
push
sbb
clc
scas
ror
les
sahf
sbbb
xor
sahf
ret
aam
cmp
jno
push
or
jbe
outsb
mov
iret
std
xchg
jle
das
push
sub
xchg
adc
inc
imulb
scas
ljmp
jbe
movsb
inc
je
fcoml
lea
js
ljmp
imul
popf
stos
int3
xchg
outsl
jecxz
sarl
inc
jecxz
sub
mov
psubq
ss
mov
and
pop
repnz
jbe
pop
frstor
frstor
cli
jnp
sbb
stos
xchg
shl
aam
pushf
cld
fldl
stos
jbe
in
inc
jno
sbb
mov
or
mov
out
stos
pop
lcall
inc
mov
lcall
xchg
pop
inc
pop
mov
loope
les
mov
inc
pushf
pop
out
icebp
dec
aad
jmp
out
sahf
sbb
int
add
xor
scas
and
push
inc
in
push
mov
cld
es
sahf
and
jb
outsb
cwtl
xchg
mov
popf
mov
push
sbb
dec
rcll
test
fs
xchg
shrl
sbb
in
stos
aaa
fwait
xchg
popa
out
mov
jmp
jl
repz
out
divl
cmc
rcrb
jne
sbb
or
xor
in
jb
in
or
lods
push
sarb
xor
mov
mov
inc
sti
lds
lret
jp
push
jle
leave
stos
sti
mov
adc
call
lret
scas
aaa
adc
movsb
rcrl
cmp
unpcklps
in
and
test
outsl
pushf
outsb
test
lahf
lahf
inc
mov
orb
lea
mov
add
pop
cmp
movsl
shrl
cmpsl
pusha
fwait
mov
sub
push
and
or
lea
mov
jnp
jnp
pop
movsl
and
cli
sbb
fwait
in
inc
cmp
jno
jae
cmp
mov
rcr
lahf
and
add
xlat
and
cwtl
ud1
add
loopne
add
add
test
xchg
repz
les
imul
push
cmc
jns
daa
jmp
fs
pop
pop
or
faddl
add
in
xor
push
daa
pop
lret
ss
cmc
dec
cli
inc
aam
inc
cmp
scas
jl
sbb
inc
dec
add
push
mov
dec
cmpsl
adc
aam
jecxz
mov
fsubs
push
decb
gs
arpl
cmpsb
push
xchg
add
int3
mov
push
jecxz
xchg
leave
mov
insb
inc
cmp
pop
dec
push
loope
xchg
mov
jge
int
and
ucomiss
pop
test
mov
pop
in
sub
ror
add
andb
mov
lods
pop
inc
stos
clc
inc
pop
in
jge
cwtl
or
sar
mov
js
mov
jne
mov
es
add
or
or
push
int
loope
mov
and
mov
add
arpl
mov
push
lahf
cmp
adc
pop
adc
xchg
mov
pop
scas
leave
add
popf
xchg
jg
adc
cmpsl
xor
add
fidivs
mov
ljmp
scas
dec
cwtl
inc
pop
cs
fdivl
push
dec
mov
mov
dec
outsb
mov
cmp
sub
xor
in
nop
jecxz
inc
mov
rcll
lods
lret
mov
dec
arpl
je
add
jb
adc
push
ret
jnp
push
es
popf
fwait
add
test
in
icebp
js
mov
sub
pop
test
popa
scas
ljmp
sti
pop
sub
and
rorl
lock
sub
mov
xchg
dec
idiv
mov
inc
loopne
mov
mov
mov
jl
adc
jle
test
jb
insb
ror
pop
push
mov
cmpsl
jl
test
sub
in
jnp
ljmp
cmc
and
cmp
ds
rorl
mov
sbb
ret
mov
iret
inc
xor
aaa
push
mov
mov
pop
call
inc
js
mov
clc
cmp
or
add
mov
xor
pop
loope
bound
in
faddp
pop
mov
cmp
movsl
insb
mov
pop
jo
cmp
push
and
and
fs
sbb
insl
scas
cmp
jl
std
cmp
jo
daa
xor
or
mov
jp
lds
les
mov
mov
dec
int
push
jmp
dec
outsl
mov
pop
cmp
pop
or
or
cmp
push
into
sbb
or
outsl
pop
rorb
popa
fwait
pop
stos
xchg
or
pop
insl
jge
pop
dec
add
push
inc
sbb
leave
and
adc
add
mov
cltd
mov
repz
jns
loop
aas
arpl
imul
add
xor
lret
add
mov
dec
outsl
mov
mov
xchg
dec
shlb
js
sub
xchg
sbb
jnp
pop
movsb
pop
push
out
test
in
or
out
jmp
cmp
sub
xchg
int
push
add
mov
stos
xor
mov
in
jle
lret
lea
getsec
out
cmpsl
fistpl
mov
aam
cmp
inc
lea
pop
push
adc
mov
mov
scas
sbbl
enter
sub
pop
jns
mov
lds
es
push
push
adc
add
jecxz
enter
adc
aam
sub
xor
ret
sub
testb
push
ret
and
jnp
enter
in
dec
add
xchg
pop
xchg
int3
pop
dec
push
out
pushf
lods
mov
push
pop
pop
sub
pop
aaa
std
subb
cli
cmpsl
shlb
and
cmp
add
mov
xor
xchg
xchg
jle
or
pop
and
cmp
mov
push
inc
xorb
add
daa
mov
faddl
cld
mov
loopne
pop
sbb
pop
pop
xor
fnsave
stos
add
pop
inc
mov
in
mov
pmaxub
in
mov
cmp
jb
sub
sub
push
cmc
adcl
cmp
cmp
jae
cmp
aas
xchg
imull
notl
leave
cmp
mov
jecxz
mov
mov
lret
jo
jge
inc
and
std
jle
xlat
jne
popf
sbb
into
adc
dec
push
dec
aad
dec
add
and
pop
dec
sub
das
pop
add
or
cmpsb
dec
cmpsb
pop
inc
inc
jle
mov
out
test
or
xchg
cmp
mov
jbe
pop
jno
jb
rcll
mov
cmpsl
popa
jnp
fcomps
popa
push
cs
push
adcl
push
push
adc
repz
adc
mov
aas
pop
add
jbe
inc
cmpsb
pusha
fwait
cmp
and
test
sbb
cmpsl
dec
sahf
shlb
or
out
push
cmp
out
rorl
jp
lock
cmpsb
jp
arpl
jb
negb
jno
cmp
gs
je
dec
mov
or
push
notb
adc
sub
into
jno
xor
pop
lret
xchg
xor
nop
shrl
std
test
int
mov
stc
ret
adc
push
sub
push
xchg
mov
xchg
push
sarl
aas
add
lds
aas
push
cmp
adc
int
mov
mov
sti
mov
js
jecxz
inc
fstpl
or
movsb
addl
dec
push
arpl
lret
mov
dec
loope
and
sub
sub
push
lods
dec
xor
mov
sub
fidivrl
fisttpll
lods
pop
inc
sbb
add
aam
adcl
scas
push
or
add
pop
mov
xchg
jo
inc
mov
mov
shl
filds
bound
jae
arpl
adc
aad
jbe
data16
cmp
xchg
popa
ljmp
sbb
scas
mov
or
pop
test
jne
sete
sarb
out
movsb
loopne
lcall
lret
cld
xchg
mov
cmp
mov
cld
insl
repnz
iret
jbe
jnp
rolb
sub
lret
mov
lahf
fcomps
mov
lds
bound
lock
xor
xor
scas
fnsave
js
mov
sti
das
mov
ss
icebp
inc
cmpsl
mov
popf
xchg
pop
outsl
xchg
jno
sub
mov
adc
outsl
iret
adc
xchg
jnp
xchg
rcrl
rcl
outsl
jp
cmpsl
fidivrl
xor
jb
js
sub
jmp
js
pop
and
jle
lcall
movsl
xchg
cmp
enter
add
or
or
pushl
inc
pop
ljmp
fwait
mov
lea
lahf
mov
inc
lock
test
push
cmc
inc
jne
stc
test
xor
fdivrl
test
inc
mov
fsts
cmp
in
les
xor
ret
add
push
push
xrelease
popf
xor
stos
call
repz
mov
dec
out
stos
filds
push
xchg
xor
movsb
and
mov
leave
ret
add
clc
int3
mov
pop
mov
shll
pop
outsb
test
dec
sbb
cmpsl
out
or
mov
cld
add
jp
sbbb
push
sahf
aad
mov
sub
fsubrp
stos
sahf
nop
push
cmp
outsl
pop
adc
nop
test
gs
enter
or
stc
popl
and
adc
xor
filds
jno
test
out
shrb
pop
cmp
imul
sbb
jo
dec
xchg
sar
mov
jo
add
jmp
cltd
xor
pop
and
stc
ja
daa
xchg
fs
popf
out
push
loop
dec
lock
mov
scas
stos
sub
outsl
push
stc
gs
dec
in
inc
mov
maxps
outsb
sahf
xorb
cltd
lock
insb
adcl
std
les
mov
sahf
dec
bound
or
arpl
fcmovb
xorl
test
inc
sub
or
pandn
fsts
enter
dec
mov
ret
sbb
pusha
jne
mov
sarl
and
push
aas
adc
sbb
mov
leave
adc
mov
sub
jae
mov
jmp
popf
outsb
add
mov
adc
jae
adc
mov
sub
jb
mov
pushf
push
aaa
pinsrw
in
sti
aam
les
pop
lea
add
dec
push
inc
jl
ljmp
rcrl
in
lea
adc
arpl
fmulp
ss
cmp
sbbb
std
dec
mov
out
jge
popa
fidivrl
xor
push
pop
enter
js
dec
xchg
dec
cltd
sub
pop
adc
shrl
in
jg
icebp
mov
mov
dec
adc
sub
jge
and
add
ljmp
sbb
data16
loopne
dec
stos
pop
or
cli
daa
push
data16
jg
cltd
jne
in
movb
mov
pop
lock
xchg
stos
cmp
lods
lods
mov
jnp
call
sbb
and
fs
inc
cltd
and
stos
pop
lea
rcl
test
in
das
jne
or
push
mov
sahf
movsb
add
out
xchg
dec
notb
stc
push
sbb
test
xor
sub
xor
int
dec
mov
enter
mov
sub
or
or
push
cmpsb
jno
jecxz
push
mov
xchg
mov
mov
xor
sbb
movsl
cwtl
addr16
dec
pop
out
fisubl
pop
push
shrb
mov
dec
jecxz
push
pop
push
popf
push
and
clc
xlat
xchg
mov
mov
dec
int
dec
xor
ret
sarl
rorb
jl
cli
jecxz
lea
mov
jbe
push
push
mov
popa
xor
jg
add
push
addb
iret
xor
mov
in
sti
xor
loop
test
xchg
sar
push
pop
mov
push
data16
pop
adc
lock
cmpsl
push
adc
in
enter
pop
cld
popa
jge
rcl
insb
sub
test
jge
jecxz
pop
sahf
lods
xchg
iret
fsubrl
mov
jle
repnz
js
mov
mov
outsl
rorl
lret
mov
jl
fsubs
shr
push
lods
push
xchg
or
adcl
loopne
jo
in
faddp
js
adc
sbb
jb
insl
std
or
sub
xlat
push
or
jle
jb
jae
sub
mov
pop
in
es
test
pop
lret
inc
daa
mov
test
mov
out
shrb
pop
lret
js
dec
fstl
mov
mov
sbb
jno
mov
jbe
mov
inc
push
mov
js
adc
loopne
imul
xor
push
stc
fsts
cmp
data16
dec
xor
hlt
sbbb
mov
or
shl
rcrb
fs
xchg
mov
xor
arpl
lret
lods
cli
xadd
mov
leave
clc
int3
mov
imul
repz
add
dec
ds
loop
inc
pushf
dec
push
jno
in
cld
mov
ja
roll
test
adc
aad
rcr
test
cmpsl
rcr
in
jmp
push
sub
add
xlat
aam
clc
imul
cmp
xor
push
mov
mov
int3
call
inc
or
jg
jp
ds
inc
popf
test
daa
pop
ret
out
daa
xchg
xchg
mov
or
roll
adc
add
test
mov
scas
gs
xchg
cmp
mov
inc
inc
loope
into
inc
movsl
repnz
inc
lcall
ja
mov
fwait
adc
adc
mov
lret
jmp
mov
mov
push
insb
sub
fildl
add
ret
nop
xor
add
scas
and
pop
and
enter
andl
fstps
fisubrl
mov
lret
sti
loope
pop
idiv
add
add
pop
inc
dec
cltd
cmc
das
sahf
push
mov
push
inc
outsb
mov
js
inc
mov
fcomps
dec
mov
dec
add
mov
aas
lock
xchg
jb
sbbl
icebp
xor
xchg
mov
or
movsl
xchg
lret
dec
roll
fld
push
out
faddl
cld
xor
repz
add
cld
inc
sbb
mov
and
pop
enter
and
ja
xor
mov
add
aaa
jmp
xchg
push
cmp
sub
mov
push
call
fnsave
sar
inc
into
xchg
or
mov
inc
add
dec
sub
jg
add
enter
cmp
adc
js
push
mov
loopne
insl
xor
ret
testb
add
add
sbbl
inc
add
dec
les
and
loopne
push
pop
push
jge
push
ret
and
fabs
pop
push
scas
pop
and
stos
xor
mov
insl
inc
repnz
push
arpl
dec
cmp
and
sub
adc
imul
xor
pop
mov
xchg
sbb
dec
or
cmp
cld
cmp
inc
or
adc
mov
loope
push
pop
sti
xchg
jno
mov
sub
bound
xor
sbb
pop
outsb
mov
add
lds
dec
xchg
movsl
rcl
std
adc
shll
push
push
cmp
sub
arpl
mov
into
adc
mov
jge
xchg
push
gs
pusha
mov
cwtl
jmp
cs
icebp
insb
jecxz
mov
shlb
dec
mov
pop
rcll
xchg
add
cmp
insl
in
push
adc
push
jl
add
pop
cs
add
sub
pusha
pop
mov
in
popf
sbb
in
fidivs
and
sbb
imul
jnp
enter
xorl
dec
pop
cmp
pusha
adc
mov
xchg
cld
add
cs
js
mov
scas
shll
push
imul
dec
adc
orb
movsl
negb
fscale
mov
out
sbb
adc
pop
pop
xlat
mul
cmp
xchg
and
cmpsb
ficoms
mov
adc
adc
cmp
loopne
or
int
inc
and
dec
outsw
push
inc
jg
outsb
xorb
adc
test
ret
outsb
fsub
les
adc
jns
or
stc
xor
pop
popa
sbb
xchg
push
in
test
popa
xchg
pop
mov
xchg
popa
cmp
sbbl
cltd
dec
sbb
push
pop
dec
call
xchg
pop
add
dec
jbe
cmc
test
data16
inc
subb
rcrl
push
mov
and
xchg
fs
iret
mov
jp
pop
inc
sub
pop
sub
mov
stc
outsb
stos
es
xchg
scas
or
shll
push
mov
push
lcall
loopne
lds
adc
jmp
sub
faddp
rorb
cmp
xor
imul
mov
xchg
in
jmp
lahf
push
cwtl
dec
jno
mov
jo
ficompl
sbb
sub
and
and
or
sbb
sub
xor
jne
hlt
xor
loope
or
popa
mov
push
mov
sti
mov
push
cwtl
out
push
mov
xor
adc
push
jns
inc
jb
dec
xor
ss
sub
cmc
testb
dec
cmp
das
cmp
mov
outsb
stc
test
dec
popa
mov
mov
mov
jb
in
cmp
mov
inc
arpl
fcomip
out
dec
mov
ret
or
xor
movd
shll
loop
pop
fcompl
sub
push
sbb
push
dec
xor
cmp
adc
push
ljmp
jno
cwtl
ja
addw
stc
push
xor
outsb
clc
push
imulb
pushf
bt
xchg
jbe
enter
adcl
xchg
mov
int
call
push
int3
mov
repz
push
iret
mov
imul
mov
adc
adc
inc
adc
adc
shlb
fisubl
jae
std
and
and
testl
xchg
ljmp
loope
rcll
outsb
enter
loop
enter
stc
sarb
xor
mov
mov
sbb
jmp
add
test
scas
sub
pushf
push
addr16
mov
adc
add
test
mov
mov
lcall
in
push
fucomip
pusha
adc
es
add
cmp
mov
adc
or
movsl
push
push
push
mov
inc
and
sub
ret
push
inc
xchg
mov
iret
jl
or
test
clc
fsubl
xchg
dec
fisubrl
jae
push
je
rclb
mov
cwtl
inc
push
add
adc
dec
pop
xchg
out
adc
fwait
cmp
out
std
int
popf
stos
repz
jo
push
add
inc
loopne
notb
push
fwait
imul
test
pop
call
aad
and
xor
cmc
in
rolb
repz
sub
movsb
push
sbb
push
cmc
cwtl
cltd
mov
push
and
cs
into
cmp
mov
ret
outsb
push
pop
inc
cld
stos
pop
out
push
and
es
adc
xor
rclb
sbb
xchg
enter
mov
xchg
pop
orl
insb
adc
push
dec
jno
subb
das
or
out
dec
push
out
imulb
sbb
outsb
xchg
fstpt
ret
mov
and
pop
dec
and
cmp
sbb
mov
jo
loopne
pop
cmp
shlb
xchg
fcompl
push
push
inc
inc
test
into
jb
mov
sub
cmp
mov
dec
push
jmp
xchg
and
rcrb
cld
hlt
ljmp
ret
lret
mov
jne
or
loope
pop
rcr
push
sub
hlt
sti
mov
mov
repnz
out
push
repnz
lea
jo
adc
inc
xchg
loope
js
lret
das
lcall
dec
inc
cmp
xor
inc
ret
daa
test
aad
sbb
xor
into
xchg
sub
push
push
leave
stc
nop
out
adc
pop
lret
aad
mov
test
inc
mov
mov
sbb
aam
out
mov
dec
loop,pn
in
loopne
cmp
mov
jmp
rorb
jecxz
mov
leave
scas
insb
pop
and
xlat
xlat
fdivr
cltd
jae
sar
clc
rorb
pop
inc
into
jae
sbb
std
dec
xchg
mov
int3
jno
negb
adc
xchg
mov
repnz
into
pop
lods
cmp
mov
sub
cmc
into
lcall
outsb
pop
push
xor
out
dec
adc
sub
clc
sarb
divb
mov
sarb
cwtl
or
adc
push
bound
mov
or
dec
out
push
in
out
cmp
sahf
jl
mov
cmpsl
fwait
xchg
cltd
fistps
or
jo
andl
sub
cmp
jo
pop
cmp
or
mov
xor
jbe
sbb
inc
lret
lock
add
adc
mov
nop
jmp
dec
aam
movsl
jg
lret
sarl
xor
cmpsb
cmp
lahf
mov
inc
inc
inc
lods
das
lret
in
out
add
nop
push
int
hlt
push
loop
bound
mov
or
jns
mov
mov
jns
mov
ret
add
je
adcl
inc
in
push
sarb
shll
std
jmp
and
mov
outsb
mov
js
decl
dec
or
sbb
lods
fndisi(8087
movsb
cmp
and
lret
movl
sub
add
xor
lahf
inc
xchg
mov
cli
fimull
mov
xlat
fwait
cmp
fisubs
rclb
dec
mov
movsb
dec
sub
out
aad
scas
jb
push
xchg
in
pop
inc
shrl
adc
cmp
pop
adc
sti
dec
stos
jae
stos
inc
aam
fdivrl
lret
ja
sar
pop
mov
push
add
inc
shlb
mov
jg
cmp
sbb
xchg
hlt
aas
dec
ss
scas
lret
dec
je
mov
xor
cld
xchg
cmp
and
cmc
lret
fildll
sub
pop
mov
mov
jmp
int3
leave
mov
stc
push
sub
mov
in
xor
sbb
lahf
ret
mov
and
js
repnz
js
mov
into
xchg
push
insb
jnp
dec
sbbb
aad
xchg
jo
cld
inc
fs
inc
icebp
dec
jo
inc
mov
jg
xor
sub
mov
fs
rclb
push
mov
pop
repz
mov
ja
add
or
mov
and
sub
fmul
daa
mov
shl
cmc
jg
shrl
mov
mov
jno
jb
sbb
jo
stos
mov
xor
sahf
add
mov
jns
test
mov
mov
cltd
ret
push
loop
cmp
cmpsl
dec
sub
cmpsl
or
std
jp
xchg
pop
or
push
pop
cmpsb
add
jns
std
and
mov
shll
nop
pop
cmp
clc
imul
mov
and
test
out
xchg
xchg
dec
xchg
pop
cmp
lret
push
loopne
sub
xor
sub
in
dec
pop
jb
xchg
ss
add
test
stos
push
loop
sub
jne
repnz
adc
stos
sbb
cli
scas
or
jmp
pusha
cmpl
jge
jae
xor
fs
fs
mov
mov
cmp
mov
daa
pop
cmpsb
pop
xor
std
jg
rclb
jp
push
dec
bound
repz
leave
outsb
and
outsl
movups
jp
jg
lods
push
js
jns
cld
and
popa
or
in
sbb
mov
mov
cltd
push
imul
jp
adc
int3
in
sbb
pop
scas
fnsave
adc
sub
fcompl
add
hlt
adc
outsb
inc
pop
or
mov
sub
and
jo
lea
push
in
adc
popa
sub
xor
lea
sub
adc
add
or
cmc
fisttpl
dec
push
or
mov
jge
xchg
inc
xor
xchg
js
ss
lea
add
xchg
push
sbb
mov
inc
loope
xor
xchg
push
icebp
mov
jmp
and
and
cmpsl
xchg
daa
stos
fucom
dec
xor
dec
push
dec
mov
mov
sbb
adcl
std
mov
mov
mov
sbb
adc
inc
adc
daa
jmp
dec
mov
mov
int3
xlat
mov
add
loopne
clc
not
insb
out
scas
sbb
out
loopne
das
pop
pop
dec
rcr
lea
ds
adc
andl
ret
leave
jo
fwait
push
iret
mov
or
add
inc
in
in
popf
push
sti
frstor
shlb
and
inc
sbb
xchg
loope
cmp
pop
mov
or
push
mov
repnz
mov
adc
cmpsb
ja
mov
inc
lds
popf
lcall
or
sahf
shrl
or
dec
mov
enter
pop
dec
add
pop
xchg
xor
xchg
pop
jns
mov
scas
push
test
jg
inc
xor
out
xchg
xchg
in
mov
loope
cmp
cmp
into
inc
std
jecxz
xchg
icebp
shll
cmpsl
stos
mov
pop
pop
js
imul
push
xor
or
icebp
pop
mov
mov
jo
dec
jmp
push
pop
vandnpd
fstpt
cmp
and
xor
mov
xchg
rol
inc
incl
push
andb
and
add
xlat
mov
xchg
stos
push
sbb
fmuls
fs
mov
rorl
mov
pop
rclb
xor
or
scas
xchg
stos
inc
sti
mov
iret
in
enter
mov
sub
lahf
repnz
fs
out
dec
repz
ret
popf
pop
and
inc
repnz
lcall
mov
lahf
pop
sbb
xchg
add
mov
mov
pushf
xabort
adc
sar
pushf
sub
fcomip
push
pop
add
in
cmp
and
test
sbb
and
xor
je
fildll
sub
cmpsb
mov
lods
sub
adc
xorb
push
jmp
pop
movsl
fwait
cmp
fisttpl
jno,pn
repnz
leave
pop
fldl
jnp
outsl
les
leave
pop
push
cmc
inc
cli
popa
cli
aas
pop
jne
sbb
sti
inc
pop
dec
push
fwait
stos
or
jecxz
sbbl
loope
mov
or
and
or
loope
sub
xchg
add
xor
mov
sub
ss
addr16
out
push
cli
xchg
mov
scas
rcl
das
xorb
nop
jno
xchg
inc
addr16
fstps
dec
inc
pop
inc
gs
repz
repz
popa
lret
or
inc
xchg
mov
or
orl
pop
popa
outsl
mov
das
out
sbb
imul
scas
stc
inc
xor
repz
shll
add
lock
iret
jmp
mov
xor
pop
pop
xchg
add
out
in
sub
xchg
sbb
addb
les
sbb
cmp
xbegin
xor
ret
adc
pop
fwait
xchg
inc
outsb
in
pop
jnp
mov
dec
call
repz
xor
test
rorb
loop
scas
cs
insb
je
mov
imul
mov
xor
movsl
call
lods
ret
cmp
in
sti
inc
sahf
xchg
cmc
jnp
loop
add
push
test
cmp
inc
int
add
xchg
fs
inc
scas
inc
mulb
lock
push
inc
push
ljmp
ss
cli
ds
notb
imul
hlt
ret
nop
cmpsl
pusha
icebp
inc
jle
repz
xchg
xlat
sbb
xchg
jbe
outsb
jmp
out
mov
std
cwtl
mov
cltd
and
stos
and
ret
sbb
inc
sahf
out
inc
xchg
mov
push
fld1
add
shrl
xchg
sub
dec
hlt
xor
sbb
into
xor
or
out
les
mov
dec
movsl
dec
push
sub
fcmovne
xor
mov
dec
inc
pop
cs
jp
sub
adc
and
bound
int3
or
fsub
pop
push
or
jbe
add
and
cmc
insb
sub
jecxz
dec
ljmp
sarb
inc
movsb
cmp
hlt
testb
mov
ss
push
inc
pop
scas
negl
mov
in
jmp
in
mov
mov
in
pusha
dec
dec
xchg
jns
out
add
mov
jg
push
adc
aas
in
dec
mov
lods
hlt
push
ljmp
adc
cltd
in
push
xchg
or
push
imul
mov
ljmp
mov
cmpsb
sbb
pop
sub
cmp
inc
outsl
lds
xor
hlt
jg
sbb
in
push
add
dec
scas
lret
test
mov
in
cmpsb
inc
sbb
popa
inc
repz
xchg
scas
xchg
push
scas
jg
add
repz
je
xchg
sahf
ret
push
lahf
xchg
mov
cld
cmpb
cli
mov
and
icebp
loopne
fiadds
mov
loopne
scas
mov
push
mov
lahf
pop
lods
sub
cmc
outsb
and
data16
or
stos
les
loop
xlat
ja
push
or
pop
aam
xor
jne
mov
add
xor
and
roll
sbb
pop
xor
sbb
xor
lods
jmp
fsubp
out
dec
iret
sahf
sahf
lahf
lock
jl
gs
out
daa
adc
stc
pusha
mov
dec
scas
adc
ljmp
aad
mov
fidivrl
sbb
pop
cmpl
in
jl
movsl
outsb
ror
ud2
inc
shrl
lock
or
inc
mov
cmp
fstpl
push
repnz
cld
xchg
xchg
movsb
mov
sbb
push
pusha
sarb
test
mov
mov
imul
xchg
jne
out
xchg
fstpl
daa
pushf
cmc
inc
jbe
cmp
push
jl
imul
nop
shlb
lret
scas
js
testb
sub
fucom
sbb
das
mov
data16
push
jns
leave
add
mov
ja
push
rcll
pop
sahf
mov
inc
sbb
faddl
fsubs
adc
jns
mov
cmpb
and
insl
mov
enter
test
test
aam
xor
setb
fsubs
pop
fdiv
pop
cli
loop
cld
sub
add
jle
les
cmpsb
ljmp
jo
fdivs
xor
mov
mov
stos
xchg
inc
mov
cld
mov
ljmp
sub
andb
cmp
test
cmp
rclb
xor
ljmp
outsb
sub
aaa
and
adc
out
sbb
dec
add
dec
lret
lret
outsl
ret
repnz
mov
jnp
out
imul
dec
inc
xor
mov
xchg
and
ret
ss
cli
sahf
inc
test
iret
or
insb
lcall
dec
mov
cmc
sbb
popa
imull
or
mov
shr
sbb
dec
lret
jae
ja
jns
vorps
xchg
or
cmpl
push
test
sbb
ja
clc
dec
sbb
mov
out
out
fnstsw
mov
movsl
sub
push
push
andb
jno
stos
adc
or
cld
or
adc
sub
mov
pop
addr16
jb
add
sub
rcrb
repnz
push
aam
mov
js
xchg
inc
aas
and
adc
jl
pop
mov
rorb
lcall
jg
inc
fildll
adc
stos
arpl
js
shrl
or
shr
pushl
adc
pop
xchg
add
orb
jb
inc
ret
xchg
scas
fisttpl
arpl
loope
cmc
ds
jmp
mov
hlt
xchg
mov
call
scas
jo
jbe
mov
call
mov
sub
fcmovu
fsubrl
ret
add
aam
jns
arpl
add
sbb
pop
xchg
lahf
notl
cmp
fcmovnbe
decb
mov
adcl
dec
or
dec
xor
int
imul
out
push
adc
dec
movsb
dec
imul
outsl
cs
cmp
mov
sbb
xor
push
jnp
add
push
add
pop
lret
pop
sbb
or
imul
pop
out
pop
and
pusha
test
mov
inc
in
es
mov
pop
add
pop
fwait
ret
ds
setbe
add
sub
mov
jmp
lock
jmp
inc
roll
pop
or
clc
leave
mov
fidivrs
dec
jg
mov
pop
cmpsl
js
mov
mov
adc
out
movsb
fxch
or
fcom
outsl
mov
jb
pop
fs
dec
out
push
fnstsw
fimuls
sar
in
sub
lods
sarb
add
cmp
mov
push
fnstenv
pop
push
inc
ret
in
into
adc
jnp
xlat
int3
and
pop
push
jmp
inc
and
and
xchg
outsb
pop
jecxz
shr
push
in
or
and
jno
jecxz
add
mov
popa
or
or
cmpsb
lock
jecxz
leave
in
jmp
fs
cmpl
into
jmp
adc
iret
sar
mov
mov
cld
xor
out
push
or
ljmp
mov
push
dec
sub
dec
mov
or
pop
cmpsl
xchg
add
int
pop
pop
movsb
or
mov
inc
push
jo
aaa
ja
jns
dec
arpl
push
cmpsb
adc
shl
or
mov
aad
fwait
int
or
or
faddl
sbb
dec
jge
inc
pop
das
test
cmp
fimull
xor
xchg
aas
jns
in
data16
cmp
test
int3
cld
cld
popa
pop
mov
push
inc
mov
xchg
add
mov
loope
adc
xor
sub
aas
ficomps
mov
ds
mov
sbb
neg
aas
or
push
adc
bound
xchg
mov
jne
aam
sub
imul
xor
addr16
int
jnp
lock
xor
and
out
lcall
jo
js
xor
add
or
dec
jmp
push
ljmp
dec
je
fsubl
mov
and
fmull
movsb
insl
dec
jle
cld
fldt
push
rcll
pop
jp
lds
xchg
add
out
mov
movsb
es
push
or
xchg
lahf
or
or
repz
stos
shr
fdivs
int
jge
iret
test
dec
jae
push
in
inc
daa
fsubrl
cmpb
arpl
mov
xor
lahf
adc
mov
jecxz
lods
mov
xchg
orb
pop
into
fisubrs
lcall
adcl
sbbl
out
adc
sub
sub
ja
jecxz
out
ss
std
fcompl
ljmp
es
sub
or
stos
mov
cmpsl
push
sbb
jmp
leave
aam
out
push
movsb
sarl
dec
ret
js
xchg
mov
outsl
pop
inc
stos
out
push
testb
sbb
and
fcomip
mov
push
mov
adc
lcall
and
popa
mov
loop
lret
in
loopne
inc
mov
outsb
mov
mov
iret
add
and
mov
popa
push
mov
mov
stos
in
popf
aad
cmp
sbb
pop
fwait
or
cmovge
ss
mov
mov
xchg
adc
xor
nop
adc
mov
adc
push
ss
fstpl
mov
orl
out
scas
ljmp
push
filds
mov
mov
pushf
mov
aaa
xchg
mov
cld
sbb
inc
pop
leave
lock
out
fs
movsl
or
xorb
sbb
cwtl
fmull
cli
popf
into
pop
insl
or
imul
inc
orl
add
and
sub
mov
mov
inc
pop
shll
and
inc
sub
cs
mov
add
lahf
adc
dec
fcom
mov
rcrl
ficoms
pop
insb
into
les
inc
add
popa
sbb
add
jmp
jbe
pop
clc
xlat
fs
adc
push
or
xor
mov
xchg
pop
xor
sub
in
xlat
stos
fisttpll
call
out
sbb
bnd
hlt
push
or
jecxz
and
pushf
mov
jne
adc
bound
or
pop
ss
filds
add
ja
hlt
or
testl
xchg
mov
sbb
lock
imul
les
std
adc
cmpsb
push
mov
testb
mov
cmp
imul
mov
mov
fsubrs
pop
push
mov
pop
test
mov
adc
mov
ret
pop
sub
sub
aas
inc
pop
outsb
insl
ljmp
add
inc
xchg
outsl
jno
cmp
lods
arpl
popf
mov
mov
xorl
sahf
sarl
out
in
xor
subl
pop
popa
mov
in
pop
ja
outsb
stos
xchg
xchg
popf
cwtl
inc
adc
mov
mov
dec
mov
adc
bound
cmp
imul
mov
test
lahf
js
mov
jecxz
mov
mov
mov
rorb
sti
or
mov
cld
addb
and
ret
das
xor
jmp
cmp
out
out
aad
sbb
out
inc
adcb
fwait
pushf
aas
jno
bound
sbb
xchg
mov
push
arpl
fsts
ds
subb
adc
mov
and
cmp
sbb
iret
mov
test
nop
push
push
shl
fwait
sahf
lret
lret
fwait
loopne
jnp
mov
dec
call
cmc
sahf
fisubrs
inc
std
add
jns
int3
xor
mov
xchg
rorl
adc
adc
cmpsl
xor
xchg
adc
jmp
fmul
xor
pop
and
push
add
out
mov
mov
sbb
xor
jno
ja
jbe
stc
dec
or
jne
sahf
push
les
xor
leave
aam
cli
mov
leave
sbb
dec
imul
cmp
fstp
add
int3
pop
lret
sub
xchg
sub
pop
mov
dec
mov
add
dec
mov
push
inc
fcom
mov
cmpsb
loope
jge
idiv
lock
popf
shll
xchg
call
mov
nop
stc
cmp
pop
sub
and
loopne
jae
mov
repnz
dec
mov
insb
pop
mov
cmp
xchg
xchg
cmp
iret
test
rcr
push
test
roll
out
adc
mov
push
ret
pop
push
dec
dec
xchg
mov
in
ficompl
add
sbb
xor
mov
into
xchg
or
stc
jge
pop
ficomps
in
push
xor
lods
repz
les
nop
mov
popa
pop
loope
hlt
push
xorb
xor
std
test
jle
add
lods
leave
xchg
popf
test
mov
mov
popf
xchg
out
jnp
test
test
pop
xlat
and
aam
int
inc
imul
movsb
test
mov
iret
icebp
jb
negb
mov
inc
es
hlt
jno
in
mov
fsubr
push
jge
add
out
cmp
mov
sbb
sub
sbb
add
testl
sub
lds
add
stos
fdiv
loope
jnp
cltd
aam
mov
cmpb
inc
pop
mov
cmpl
lods
mov
xchg
jne
push
and
cli
or
dec
inc
cmp
xor
adc
or
pop
pop
cmp
inc
loopne
imul
jns
inc
xchg
rol
mov
gs
inc
stc
int3
cmp
rorb
jg
outsb
xor
cmp
ss
pusha
xor
fcomip
sub
jmp
or
int
adc
sbb
inc
lock
cmp
pop
add
sahf
movsl
mov
dec
jb
pop
xor
int3
xchg
inc
insl
dec
mov
mov
cmove
das
add
stc
pop
lods
dec
hlt
sbb
out
aad
ds
add
mov
les
inc
inc
into
and
xchg
jbe
sahf
add
negl
sub
and
je
cmp
cmp
xlat
daa
repz
xchg
pop
mov
das
leave
lods
gs
adc
cmp
xchg
adc
mov
and
popa
push
jp
jo
jno
jae
mov
ljmp
xlat
test
or
arpl
fistps
sbb
out
loopw
push
xchg
movsb
pop
or
mov
push
bound
data16
push
xor
sub
fsubr
lret
frstor
xchg
or
inc
xchg
ljmp
dec
mov
iret
pop
inc
push
inc
and
in
aas
jae
mov
int
jne
xor
sbb
out
lods
mov
mov
or
mov
or
pminub
sti
mov
push
push
addb
daa
xorb
push
outsb
jg
cwtl
sub
subl
mov
negl
pop
fwait
sbbb
jle
adc
lea
adc
in
pop
add
daa
push
lahf
adcb
sbb
cmp
addr16
add
lret
jnp
or
icebp
popf
icebp
imulb
push
sub
idivl
dec
repnz
push
pop
int
pop
inc
pop
aas
dec
sub
fldt
movsb
mov
xor
les
rolb
dec
mov
sub
and
daa
lods
hlt
pop
xor
cmp
mov
or
and
addr16
gs
dec
out
push
cltd
sub
das
mov
test
js,pn
sbb
xchg
mov
js
inc
jno
insb
ret
dec
lods
dec
xchg
mov
imul
repz
scas
mov
stc
push
pop
int
jecxz
lds
mov
and
mov
pop
addr16
or
cmpsb
pop
lcall
fwait
in
arpl
test
mov
shll
sbb
add
push
lcallw
enter
sbb
push
jp
out
shlb
push
xor
fdiv
shll
insl
push
idivb
lods
add
xchg
adcb
jne
mov
xor
jmp
push
neg
adc
sub
lret
roll
dec
popa
mov
jmp
nop
fidivrl
xchg
jecxz
sbb
xchg
lret
loop
push
inc
ss
ljmp
sbb
or
jbe
outsl
pushw
mov
mov
mov
test
inc
and
mov
call
ljmp
jmp
inc
mov
mov
je
ja
xor
xchg
or
aam
shlb
xchg
xchg
xor
lcall
dec
in
stos
aad
hlt
inc
lahf
ds
pop
jb
rcrb
sbb
mov
notl
inc
repnz
xor
add
jbe
cmp
mov
fs
fisttpll
cmp
mov
sub
es
je
pop
add
and
and
inc
shr
jnp
hlt
pop
jmp
mov
adc
fdivp
iret
insl
jnp,pt
xor
aaa
ficoms
loop
mov
inc
mov
inc
lods
lret
aad
into
xchg
rorb
and
addl
das
pop
das
mov
pop
mov
xor
sarb
adc
iret
int3
mov
test
push
bound
inc
cmp
jle
inc
push
add
fsubs
stos
insb
ficoms
mov
out
repnz
cmp
or
push
and
cli
mov
jne
insl
push
xchg
mov
imul
cmp
inc
inc
mov
leave
fidivrl
mov
dec
inc
mov
in
push
dec
xchg
fiadds
stos
jecxz
pop
pop
fnsave
fnstsw
mov
ljmp
and
xor
into
cmpsb
pusha
mov
iret
sub
push
cmpsl
pop
pop
and
aas
out
push
xor
cmpsb
inc
stc
xchg
xchg
scas
mov
into
enter
sub
or
daa
cmp
ja
jno
sbb
mov
loopne
inc
ficoms
or
fucomp
scas
xchg
into
repnz
dec
pop
inc
xchg
jle
push
pop
jne
sub
ja
cmp
popa
adc
stos
lods
out
xchg
imul
dec
outsb
dec
cmpsb
push
mov
fs
in
arpl
insl
int
mov
inc
pop
sub
rcr
push
rorb
cmpsl
inc
dec
mov
mov
stc
lds
or
out
pop
nop
mov
arpl
imul
ljmp
add
mov
push
in
sti
pop
mov
lods
cmp
xchg
or
xor
push
jne
fdivrs
in
mov
in
aaa
jnp
shlb
inc
cmp
filds
scas
push
jne
cmp
inc
arpl
adc
jmp
mov
daa
mov
data16
sbbb
mov
loop
and
add
rcll
push
int
pop
fisubl
push
push
and
mov
inc
jb
adc
test
xor
xchg
ss
pop
sbb
push
js
lods
mov
lods
rcrb
xchg
adc
movsb
in
pop
dec
out
inc
sub
pop
lods
movsb
adcb
lcall
dec
jae
or
mov
mov
test
cli
int3
jns
xor
movups
test
cmp
in
jns
xchg
push
insl
rep
xor
insb
dec
pop
fs
jl
dec
jo
jnp
cmp
bound
mov
mov
push
cmp
shll
test
loop
aam
mov
iret
mov
dec
fdivp
xor
aad
xchg
adcl
sub
cli
inc
pop
je
nop
adc
xchg
mov
mov
lods
and
je
add
jmp
pop
mov
or
xor
inc
cmp
or
sub
xor
jmp
jp
inc
cmp
xchg
test
rorb
mov
je
je
lock
sbb
out
adcl
mov
cmp
into
jo
mov
sbb
mov
xchg
adc
xor
aad
add
es
cmpsb
enter
sub
scas
mov
repz
imul
cmp
push
imul
add
sub
ljmp
aad
dec
sbb
inc
mov
cmp
jo
repnz
dec
nop
in
jns
and
mov
lods
dec
std
loopne
iret
mov
cmp
lcall
lds
lahf
sbb
cmp
cmpsb
stos
loope
xor
jg
mov
mov
insl
jbe
mov
sub
sub
sub
lret
inc
adc
jg
pop
hlt
flds
mov
jns
addr16
pop
push
mov
in
jno
xor
mov
outsl
jbe
sbb
call
and
das
push
xchg
mov
cld
push
and
xor
loopne
aad
inc
roll
jbe
mov
mov
and
loope
push
aaa
insb
xchg
xchg
inc
add
out
loopne
out
push
fadd
dec
mov
push
push
mov
lods
inc
dec
cli
mov
enter
loopne
loop
test
push
xor
or
push
mov
mov
xorl
inc
outsb
push
xor
add
sub
add
push
aam
je
xor
pushf
outsb
ds
push
bound
fcoml
xor
call
cs
cmp
push
pop
iret
add
mov
aad
cmovns
lea
adc
ljmp
stos
mov
repz
inc
add
lods
test
pushf
jle
inc
out
bound
fdivr
pop
adc
mov
jbe
gs
inc
repz
xchg
nop
mov
jns
sbb
rolb
sbb
add
inc
sub
sahf
sub
lahf
stos
ja,pt
stc
stc
les
xor
outsb
jae
or
push
add
sub
dec
inc
push
sub
fildl
out
fisttpll
hlt
dec
in
call
cwtl
mov
hlt
sti
fmuls
into
out
push
fwait
adc
jle
xor
mov
lods
push
mov
and
jnp
inc
aam
mov
insb
lahf
jb
xor
add
lcall
mov
jbe
bound
jbe
fists
mov
sbb
std
imul
mov
mov
gs
std
mov
ja
mov
mov
fcmovu
daa
dec
scas
xchg
cs
nop
loope
jb
and
fcoml
test
lds
sub
arpl
in
sarl
add
divb
mov
sahf
xor
cmc
mov
and
and
or
fnstenv
rcrl
and
aam
daa
pinsrw
ja
jge
add
inc
into
inc
insb
das
stos
aaa
out
mov
mov
rolb
insl
cld
mov
fxch
mov
add
in
add
repz
into
dec
scas
adc
cmc
clc
sub
adc
cmp
hlt
and
adc
push
sbb
arpl
xchg
fsubr
aas
ret
andb
leave
inc
inc
sub
mov
pushf
nop
mov
and
mov
xchg
jno
lds
jg
and
mov
mov
stos
xor
lcall
test
mov
sbb
sbb
fstpl
js
or
add
into
jl
rcl
lret
jnp
add
sub
adc
pusha
inc
inc
ljmp
shrb
les
mov
loopne
inc
mov
mov
jge
sbb
mov
push
sbb
sbb
jo
repz
xor
cli
lds
aaa
sub
xor
jp
jl
dec
cmp
jae
out
jnp
lret
mov
xor
ror
test
scas
sbb
lret
mov
add
mov
sbb
mov
daa
lock
jb
jne
mov
jo
cmp
dec
cmp
popf
iret
mov
lcall
lret
sub
or
or
dec
cwtl
aaa
data16
sub
push
gs
movsl
mov
pop
loopne
push
movsb
jp
or
or
inc
inc
sub
sbb
aaa
add
int3
int3
popa
cwtl
in
xchg
sti
fisttpl
repz
sub
test
andb
xchg
fs
push
add
mov
stos
outsb
fdiv
mov
mov
jecxz
test
or
mov
or
or
lods
cmpsb
cs
jmp
xor
adc
cmc
or
mov
adc
or
jae
shll
mov
adc
test
jp
out
push
inc
enter
mov
jae
iret
sbb
inc
push
aam
dec
ret
xchg
jns
filds
push
ja
into
pop
sti
outsb
das
lcall
clc
adc
jnp
push
dec
pop
xor
cmp
add
stos
xchg
sub
dec
outsb
adc
popa
mov
test
push
pop
pop
mov
fisttpll
xchg
or
mov
flds
andb
jmp
sub
mov
adc
push
pop
jnp
std
out
mov
jae
ljmp
into
jae
jb
sub
arpl
cs
mov
dec
filds
iret
mov
mov
sub
dec
push
adc
mov
repz
jb
mov
popa
sub
es
cltd
lods
mov
pop
popf
xchg
pop
test
leave
fimuls
aaa
inc
add
popa
in
jne
pop
andl
xor
mov
daa
leave
cld
mov
stos
dec
sbb
inc
xchg
lret
js
pushf
cmp
dec
sbb
cmc
call
adc
jge
ret
pop
dec
jp
mov
sbb
das
aam
jle
ret
daa
dec
push
jmp
outsl
pop
or
jl
xchg
cmp
in
and
stos
jns
ret
xor
or
ds
add
or
call
lret
aam
cmp
push
cld
das
and
jg
ret
pop
cmpsb
clc
adc
cmp
arpl
insl
xchg
inc
aaa
test
pop
divb
nop
or
jle
lcall
andl
xor
movsb
jg
push
mov
inc
ret
pop
nop
pop
movsb
out
cmp
aas
mov
movsl
xor
xlat
rsqrtps
jge
sbb
cmp
cmc
repz
movsb
or
iret
loope
cmpsl
mov
add
in
add
jmp
mov
add
or
or
cmp
sbb
aaa
sbb
adc
push
mov
popf
sahf
jl
xor
xchg
sub
lea
sbb
sti
leave
sbb
pop
adc
out
cmp
inc
add
sub
mov
pushw
jg
shll
popa
xchg
xor
lock
mov
leave
pop
pop
mov
jmp
enter
ror
stos
sub
jp
pop
pop
mov
andl
cwtl
or
jne
sub
ss
jns
jg
push
jecxz
bound
clc
xor
and
fildll
dec
adc
dec
xchg
xor
popl
lods
addl
push
outsb
pushf
int3
and
in
out
aam
ror
and
ja
adc
or
push
popa
adc
test
jbe
imull
push
fwait
push
or
xchg
pop
ljmp
adc
stos
lods
hlt
fwait
inc
add
sub
adc
fcmovne
add
mov
and
leave
and
add
adc
push
int3
jae
lods
push
jg
mov
lock
in
loop
out
nop
daa
mov
adc
out
push
mov
nop
loop
loopne
mov
adc
add
mov
out
jg
ljmp
ja
mov
std
test
sahf
sub
add
sbb
xchg
cltd
loop
push
or
lds
imul
nop
mov
push
frndint
pop
mov
loopne
cs
push
daa
insb
jbe
xchg
mov
and
push
in
aas
cmp
fistpll
jle
mov
dec
pop
loope
xchg
lcall
mov
call
fcmovbe
push
sbb
push
mov
pop
stc
dec
aas
movsl
lods
movsl
mov
outsl
sub
xor
cmp
xchg
dec
out
xchg
dec
jmp
jo
push
xchg
cmp
jge
add
cmp
bound
adc
in
sub
fcoml
add
mov
jo
mov
mov
shrb
jo
dec
in
pushf
and
mov
pop
mov
stc
adc
in
add
adc
mov
sub
test
mov
push
inc
loope
aad
mov
fsubs
jge
testl
mov
add
push
lds
imul
pop
jmp
sub
jae
fcmovnb
pop
loop
push
inc
pop
adc
mov
xor
and
fxch
sbb
mov
repnz
jge
enterw
inc
adc
pop
fwait
inc
enter
or
cmpsl
into
pusha
fs
mov
mov
pop
mov
adc
je
mov
or
div
lret
xchg
jge
mov
xchg
mov
pushf
repnz
jecxz
xorb
mov
adc
mov
jno
out
std
shll
scas
dec
pop
mov
mov
xchg
inc
fcmovbe
rep
mov
cli
cmp
sbb
xchg
xchg
stos
out
dec
es
mov
adc
sub
mov
jg
outsb
jp
loopne
repz
call
bound
jnp
jno
pop
adc
fmul
aaa
mov
jge
arpl
icebp
repnz
mov
sub
dec
daa
push
or
pushf
dec
and
xor
jmp
sbb
pop
icebp
in
pop
cmc
mov
rcl
test
scas
dec
out
rorb
ljmp
or
repz
test
cmpsb
shl
xchg
add
add
daa
push
testb
inc
jmp
inc
add
rorl
cld
cmpsl
xor
mov
mov
iret
cmpsb
cmp
mov
mov
pusha
jge
inc
pop
repz
lahf
arpl
push
xchg
sub
fadds
mov
lcall
mov
pop
xlat
dec
cmp
lea
pop
in
cmpsb
mov
adc
mov
jo
orb
jno
inc
mov
add
outsl
mov
lods
cld
cmc
mov
daa
les
jp
xchg
subl
fadds
jmp
mov
mov
not
rcrl
xchg
inc
push
add
xchg
push
mov
mov
cmp
movsl
pop
sti
lcall
sub
cmpsb
xchg
int
mov
iret
leave
hlt
adc
scas
lods
rorl
mov
cld
or
mov
movsl
push
dec
out
jnp
and
or
jl
mov
mov
adc
mov
loope
aaa
movsl
fisttpl
mov
xchg
imulb
mov
movb
sahf
jne
scas
jnp
cwtl
ret
andb
inc
or
insb
push
pop
xor
or
mov
add
xorl
mov
stos
lret
pop
dec
or
mov
sti
push
pop
push
lret
sbb
or
mov
fmuls
cwtl
movsl
cwtl
xor
xchg
jp
movsl
idivl
mov
sub
outsl
sbb
imul
push
jg
xchg
sarb
add
ret
mov
xorb
leave
mov
pop
les
sti
xor
sub
daa
mov
mov
xor
inc
mov
sbb
dec
lock
adc
adc
insb
xor
cltd
mov
outsb
lret
js
add
sbb
mov
and
add
sbb
jo
mov
repz
dec
fidivrs
scas
rclb
adc
adc
sub
lock
jb
adc
aaa
jl
pop
aaa
rorl
inc
mov
add
mov
lret
rorb
cld
dec
mov
stos
add
sbb
pop
cld
dec
insl
mov
nop
sbb
std
insb
xchg
xchg
and
fistpl
and
imul
inc
jb
xchg
xchg
jae
push
xor
mov
fstpl
aad
mov
adc
or
xor
sub
add
pop
out
cs
sbb
pop
mov
dec
mov
in
loope
leave
push
outsb
lds
pop
push
mov
int3
mov
xlat
add
mov
outsb
lahf
dec
pop
sub
scas
sahf
mov
jne
scas
add
sbb
popa
and
in
mov
lret
int
cld
bound
cmp
data16
pushf
movsb
dec
jnp
cmp
push
push
call
inc
adc
test
pop
inc
popa
xorl
popf
adc
and
ljmp
fldl
or
dec
inc
push
inc
popf
mov
and
pop
in
in
inc
pop
aam
cld
and
mov
sub
test
push
push
sub
mov
addr16
mov
push
push
dec
inc
test
mov
sub
sarb
xchg
cmp
push
push
add
push
rcrb
add
fiadds
adc
cmp
mov
adc
enter
or
adc
jmp
pop
mov
repz
fwait
lcall
lret
js
lcall
cmp
outsl
test
cmpsb
cmpsl
enter
fs
mov
arpl
movsb
push
add
movsb
movsb
stos
lods
dec
ss
inc
mov
jmp
dec
mov
sub
sub
scas
pop
xlat
int
testb
cs
mov
popa
cltd
xchg
cs
icebp
inc
mov
je
call
test
adcb
leave
or
ret
and
add
jnp
addr16
jne
outsl
jbe
xor
jg
adc
shlb
aad
push
xchg
jp
cmpsl
add
push
push
xor
cmp
jge
in
enter
loopne
inc
sahf
inc
jle
mov
jmp
fisubrl
bound
dec
cmp
sbb
and
idivl
sbb
inc
outsb
femms
mov
cli
aaa
js
ret
xchg
test
lods
aaa
jne
call
call
push
jb
dec
xchg
sbb
sub
out
jns
aad
jbe
inc
push
pop
fstp
and
push
bound
cmp
scas
lret
daa
pop
cmc
jne
lret
pop
sub
pop
mov
mov
jnp
xor
jge
push
mov
inc
adc
pop
xor
jne
cmpsl
loope
push
scas
outsl
loop
or
add
pop
roll
leave
push
sbb
test
add
xor
lods
sub
jbe
jl
inc
jb
and
adc
scas
mov
xchg
inc
sub
xorl
imul
fldl
mov
es
adc
jmp
jne
cmp
fisubrl
add
ds
inc
jo
rorl
xchg
mov
mov
push
iret
fnsave
cli
stos
sbb
push
in
pand
inc
push
sub
aam
out
add
mov
lahf
mov
outsl
call
cli
out
xchg
aam
jb
add
je
cli
jl
imul
loopne
iret
inc
jnp
and
sbb
push
ljmp
pop
hlt
aaa
lcall
jne
rcrb
pushf
outsl
mov
ja
les
sar
mov
lahf
and
adc
ss
inc
xchg
mov
inc
pop
xchg
mov
dec
dec
mov
std
pop
push
call
mov
jle
pop
cmp
cld
inc
fadds
add
jae
rcr
insb
notb
mov
mov
icebp
dec
xchg
out
leave
lods
in
mov
cmpsb
sub
lahf
push
ds
std
rcr
mov
or
dec
adc
xor
fs
mov
hlt
pop
fildl
dec
in
test
sahf
pop
imul
sub
mov
gs
je
pop
push
in
push
push
rcr
jns
add
xchg
mov
jb
adc
iret
mov
push
fs
pop
jb
icebp
in
fs
pop
mov
or
inc
outsb
adc
shrl
pop
lods
sbb
mov
inc
xchg
test
xor
cmc
cs
mov
inc
rcr
dec
pusha
sbb
sti
push
cmp
xor
lcall
xchg
mov
jle
add
cld
adc
push
xchg
cmp
mov
pop
dec
cmp
leave
imull
jo
add
call
and
dec
dec
cmp
mov
mov
adc
lods
stos
enter
cld
mov
in
xor
rcrb
dec
add
cmpsl
pop
idiv
jle
mov
or
mov
xor
or
sbb
lret
xlat
pop
dec
jb
js
sbb
cmc
rep
lcall
cmpsb
xchg
jnp
xlat
sar
fldcw
sbb
lahf
and
fisubrl
and
les
push
xorb
int
or
and
lea
outsl
nop
inc
arpl
es
push
sbb
mov
cltd
mov
leave
cltd
ljmp
jbe
xor
cs
mov
push
mov
push
push
dec
pusha
nop
sbb
push
xor
sub
fs
pop
push
or
mov
out
in
aad
iret
aas
mov
mov
or
adc
cmpsb
push
lahf
push
aam
in
cmp
jns
mov
gs
push
xchg
enter
and
add
mov
mov
out
pop
mov
dec
jge
fldl
gs
mov
jns
pop
mov
fistps
aas
lods
inc
or
jge
xchg
and
mov
fdivrp
mov
cs
jo
sti
push
cltd
or
subb
fsubrs
inc
cmp
sbb
js
xchg
int3
push
jnp
mov
mov
mov
adcb
out
inc
test
insb
push
movsl
xchg
iret
mov
std
clc
inc
into
div
adc
aad
dec
mov
movsl
out
in
jge
imul
lods
mov
xchg
std
xchg
std
bnd
aas
cmpsb
push
and
test
add
testb
mov
sarl
mov
mov
in
int3
mov
in
imul
xchg
xchg
mov
cmp
xor
inc
xor
push
addl
inc
mov
jp
mov
insl
lret
pop
xchg
sbb
pop
shll
aaa
rcl
stos
adcb
cmpsb
out
mov
pop
orb
lret
mov
jns
mov
call
cmp
push
mov
stc
add
orb
dec
xchg
push
lds
sbb
cwtl
loope
push
stc
aam
fmull
adc
jg
push
out
fs
mov
pop
xor
xor
sub
sbb
ror
adc
or
push
inc
rcr
mov
movsb
dec
inc
scas
and
pop
jb
mov
mov
jno
dec
mov
dec
aas
push
xchg
aaa
lahf
int3
and
lret
out
imul
add
insb
cs
dec
fistpl
sbb
push
ds
cmp
adc
pusha
addr16
sub
fbld
movsl
cmp
fcoms
inc
inc
mov
cld
rorl
cmp
aam
pop
xchg
arpl
dec
sti
aas
loop
outsb
fcmovbe
dec
loopne
mov
cmp
pusha
add
mov
and
push
punpcklwd
icebp
shlb
cwtl
add
scas
xor
cmp
xchg
out
xchg
bnd
or
or
mov
icebp
fisubrl
mov
xchg
insb
loopne
rcrb
in
in
or
and
subb
add
sbb
test
inc
inc
pusha
clc
mov
repnz
ss
daa
inc
jle
push
xor
scas
or
les
xor
pop
add
call
xchg
aam
sbb
adc
jp
cmp
mov
mov
xor
ret
and
mov
int
add
push
add
mov
push
add
adc
pushf
xor
fisttpll
push
and
add
loope
nop
xor
lods
xchg
shl
call
insb
pop
mov
sbb
jl
lods
outsl
fldl
add
inc
jo
les
sub
mov
add
pop
in
dec
or
subl
lcall
es
pop
push
jb
jmp
push
lahf
outsl
push
insb
push
adc
clc
jmp
mov
inc
add
xorb
mov
arpl
ss
lods
jne
or
scas
cmp
lcall
xlat
iret
xor
lods
jl
xchg
pop
pop
push
cmp
inc
mov
cli
fstps
das
and
xor
mov
enter
mov
adc
push
cmp
mov
mov
fcompl
or
lret
in
aaa
in
in
stc
gs
sub
dec
lret
mov
nop
pop
push
push
mov
push
mov
jp
jmp
or
cmpl
jmp
sub
sub
inc
add
loopne
imul
add
andl
jmp
lods
dec
mov
int3
ds
ja
fiaddl
aad
dec
scas
jb
add
fsub
in
jb
or
pop
mov
add
scas
inc
inc
mov
test
dec
cmpsb
jge
rorb
cmpsl
cmp
adc
inc
mov
adc
and
fildl
andb
mull
inc
xchg
sahf
inc
lcall
jle
mov
lret
das
cs
aas
and
mov
mov
sahf
out
mov
inc
int
les
jp
lock
add
sub
sarb
push
mov
dec
xchg
cmp
mov
andb
dec
push
mov
push
push
shlb
popa
push
lock
xor
stos
nop
inc
enter
add
test
data16
push
pop
lret
xchg
mov
inc
lea
ss
mov
stos
and
cmpl
push
cltd
push
ja
sub
add
mov
jae
scas
filds
call
pop
inc
ret
pop
sti
push
fs
stos
pop
mov
aam
sahf
fimull
into
xchg
jne
pop
popw
mov
mov
mov
or
cld
bound
pushf
xchg
aam
pop
fwait
stc
imul
push
outsb
xorb
inc
stos
mov
fwait
pop
sub
pop
cmpl
loop
mov
push
jg
sahf
iret
shl
in
dec
pusha
push
ja
cld
and
xor
mov
outsl
adc
inc
xor
xchg
mov
inc
jp
out
shlb
sub
repnz
repnz
lea
pop
jno
push
and
xor
dec
pop
jns
lea
or
inc
popa
cmp
std
nop
or
orl
xchg
sub
push
in
add
insl
lcall
mov
outsl
xchg
aad
sti
cwtl
cmc
int
outsb
out
mov
dec
cmp
push
out
dec
cli
mov
orl
aam
popa
pusha
fsubr
mov
mov
in
add
aas
and
ss
sahf
or
std
fwait
xchg
jne
scas
xor
cmp
push
dec
ret
ds
repnz
sub
cmp
into
jne
mov
push
repnz
lock
jle
add
or
into
or
mov
push
push
imul
adc
test
ret
cs
jl
sub
clc
jno
push
ds
xchg
push
pop
and
sbb
cli
mov
adc
or
cmp
shrl
cwtl
fbstp
add
inc
add
jl
adc
pop
push
jmp
or
aas
inc
jmp
mov
jge
jb
xor
popa
inc
sub
gs
imul
xchg
jo
lods
jnp
sub
outsb
add
pop
xchg
addr16
mov
pop
les
mov
xchg
xor
cld
xorl
into
lahf
push
das
sub
add
aad
ret
idivb
clc
ss
lds
mov
stos
jge
ds
mov
ss
movsl
loop
loop
lods
lahf
negl
test
lret
cld
shll
jae
sahf
fs
pop
cltd
ss
cmp
in
mov
movsb
push
mov
into
pusha
shrl
mov
and
stc
mov
adcb
cwtl
je
gs
sahf
inc
ret
mov
out
lret
jmp
cmpsb
jb
inc
addb
arpl
imul
push
cli
loop
popa
mov
pop
xchg
mov
lret
stc
mov
inc
xchg
scas
imul
add
mov
mov
cld
sbb
xchg
mov
loopne
in
mov
sbb
bound
sbb
aaa
adc
mov
cmp
push
push
in
movsb
xchg
mov
sahf
add
jne
leave
test
xchg
push
adc
jbe
punpcklbw
insl
les
test
and
pop
cmp
in
test
jne
xchg
aam
stc
mov
lods
cmp
add
js
aaa
mov
loop
jg
bound
mov
ja
lahf
cltd
mov
sar
xor
pop
and
and
roll
pop
push
fnsave
or
rcrl
cli
scas
pop
xchg
fisubrl
aam
mov
pop
mov
cmp
mov
push
push
inc
mov
jne
icebp
sahf
push
lods
xor
add
pop
add
mov
pushf
sub
lret
ret
mov
mov
aad
xchg
mov
adc
xor
rolb
mov
fisubs
lds
mov
and
int3
lret
sub
mov
rclb
sub
cmp
fnstsw
inc
lods
sbb
fsubs
xlat
pop
add
rol
insl
outsl
cmp
fwait
xor
mov
push
mov
js
fs
fwait
js
out
lret
sahf
dec
and
adc
inc
repz
mov
call
xlat
outsb
dec
in
mov
jo
add
out
xchg
mov
add
test
mov
int3
and
lods
adc
adc
add
mov
adc
cli
push
fsub
inc
cmp
push
or
in
and
lret
dec
lret
inc
mov
push
std
mov
cs
inc
xor
pop
xchg
popf
dec
test
rcrl
in
mov
lret
shrb
mov
and
ja
repz
ds
sbb
xchg
bound
pop
popf
stc
pushw
mov
pop
gs
jmp
push
adc
je
cmp
push
or
jnp
movsl
or
mov
sub
jbe
imul
test
aad
sub
cmp
cltd
dec
js
xor
movsl
jnp
jae
pushf
insb
sbbl
mul
aaa
xlat
inc
cmc
inc
mov
xlat
cmp
fwait
aas
inc
ja
xor
sub
sub
mov
jnp
mov
mov
loope
adc
and
jge
mov
jns
jl
mov
jo
subl
mov
bound
test
les
and
jae
or
test
xchg
push
ficoms
addb
das
std
imul
jg
xor
mov
xacquire
aad
inc
mov
xchg
movsl
testb
add
popa
jmp
push
shll
loopne
test
leave
mov
dec
bound
sub
ret
fsqrt
xlat
sub
xchg
adc
pop
stos
jne
loop
and
push
pop
pop
mov
pusha
inc
movb
mov
iret
stos
aad
push
cld
xchg
in
jbe
pop
out
leave
xor
iret
shrb
ss
mov
adc
push
inc
xchg
stos
imul
or
lods
push
adc
test
daa
stc
xchg
push
stc
xor
sbb
push
sahf
mov
rclb
mov
addr16
mov
push
mov
dec
jge
push
mov
pop
mov
out
push
xor
push
cld
mov
imul
imull
cs
xchg
shll
ds
push
pop
rclb
sbb
and
mov
jmp
cmp
fcom
mov
cmp
mov
dec
es
ret
or
in
cmp
adc
mov
subb
pusha
ret
push
punpckhwd
jmp
push
adc
lds
push
fcomps
dec
sbb
jl
cmp
jmp
push
adc
aam
outsl
out
jg
cwtl
mov
fistpll
bound
add
push
jecxz
out
or
test
or
push
jge
std
lock
cmp
push
fisubrs
shl
add
inc
ss
mov
mov
mov
and
xor
fsubl
pop
xchg
mov
xchg
or
inc
pop
adc
scas
divl
ret
lret
push
andb
pop
xchg
rcrl
ja
mov
dec
roll
stos
add
adc
movsb
rcrl
ret
popa
and
adc
imul
sbb
mov
les
mov
ss
pop
ds
leave
lret
sub
mov
adc
jg
jp
decb
dec
popa
mov
js
outsb
scas
out
push
cs
jl
cmp
jmp
in
notb
lret
inc
cmp
or
int3
dec
mov
inc
lods
pusha
hlt
jmp
and
sbb
rclb
lods
ret
mov
out
insl
push
mov
test
aam
pop
mov
sub
daa
pop
add
arpl
jle
scas
xchg
test
push
aad
loope
adc
adc
mov
add
cltd
cmp
arpl
xchg
mov
idiv
cltd
nop
test
cli
add
pop
addr16
das
xchg
testb
jb
fisttps
notb
cmp
jae
adc
mov
mov
pop
xchg
push
ss
xchg
in
mov
insb
sbb
out
mov
insl
push
mov
aad
mov
dec
sub
mov
adc
jae
bnd
and
push
stos
pop
inc
push
cmp
jno
hlt
fildll
fnstcw
js
pop
cmp
dec
push
xor
push
stc
jns
mov
aam
inc
fcmovnb
test
push
xchg
mov
pop
xor
test
or
adc
ret
mull
ja
add
pusha
lds
xchg
xchg
data16
sub
adc
ret
add
mov
aas
faddl
outsl
add
mov
adc
xchg
fs
sti
mov
jecxz
mov
jg
jl
adcl
std
in
add
call
jge
ss
push
fcomps
aas
jnp
inc
dec
sbb
cwtl
aad
les
sahf
and
cmp
int
sbb
ficomps
cwtl
sub
push
cmp
test
jne
sub
pop
or
gs
push
arpl
mov
out
inc
pop
and
cltd
enter
jae
pusha
mov
mov
loop
daa
nop
lcall
xchg
or
dec
push
xchg
dec
movsb
mov
lods
mov
push
sbb
xchg
cmp
out
and
cmp
lcall
lock
inc
xchg
mov
outsb
jecxz
cli
mov
push
mov
ja
shl
inc
jg
cmp
pop
mov
mov
adc
ss
mov
sbb
fcoms
or
ljmp
jbe
pop
imul
adc
pop
and
push
pop
lahf
xchg
fs
ljmp
mov
adc
push
stos
cmpsb
xor
fwait
mov
or
notb
pop
leave
inc
fadd
mov
out
pop
lret
lods
inc
std
sbb
jo
push
push
jmp
jmp
pop
aam
jae
and
jns
push
insl
add
cmp
jb
and
pop
add
adc
or
lods
bndldx
lcall
sbb
lret
push
or
sbb
scas
mov
arpl
clc
fdivrl
xchg
hlt
fildl
push
test
cs
fdivrs
leave
adc
push
xchg
jne
lods
push
xor
mov
movsl
inc
mov
sbb
out
mov
addr16
popa
mov
fcomp
sar
sub
mov
mov
jmp
mov
sbb
adc
and
push
xchg
dec
outsl
mov
mov
sbb
and
test
jo
pop
outsl
lods
cwtl
in
hlt
mov
test
insl
sbb
out
fwait
jae
pop
xchg
pop
and
mov
mov
sarb
stc
stc
or
bound
out
sub
pop
jl
or
xchg
xchg
repz
inc
xchg
call
xchg
xchg
lods
loope
jp
test
xchg
mov
call
adc
ret
mov
sbb
scas
cmp
mov
loopne
shl
and
xor
repnz
sbb
into
lcall
dec
and
inc
pop
lret
rcrl
in
data16
jns
pop
stc
rclb
fcoms
cmp
pop
jp
sbb
repnz
repnz
in
mov
rcrl
mull
cmp
nop
cmp
and
pop
ret
jbe
enter
mov
sub
dec
mov
mov
jge
xchg
lods
imul
imull
sub
jbe
std
lret
add
gs
pop
fnsave
cmp
mov
std
mov
add
mov
dec
adc
mov
ret
mov
mov
mov
jge
and
fistpll
sti
test
cwtl
cmp
and
adc
jns
fildll
fcomps
lods
sbb
xchg
stos
adc
ljmp
mov
aas
cld
jp
fdivrs
lret
cli
jno
mov
repz
mov
fisttps
add
cld
fcoml
xchg
aas
bound
lret
les
mov
mov
and
mov
jno
inc
lods
jae
sbb
test
cmpsb
dec
daa
mov
imul
popf
shl
jns
mov
push
je
mov
jnp
rcrb
in
imull
dec
jp
int3
popf
ss
mov
ss
dec
sbb
clc
rol
sahf
in
ret
in
push
ret
mov
mov
out
push
xor
inc
aad
adc
adc
roll
movsl
outsb
mov
lods
aaa
and
js
in
dec
inc
jno
sbb
je
scas
add
cmp
sbb
dec
loope
mov
ds
sbb
pop
mov
or
fadd
hlt
imul
loopne
leave
cs
xor
push
mov
aad
dec
sub
mov
adc
leave
xor
add
call
push
push
outsl
retw
shrb
scas
rorb
add
mov
adc
sbb
xlat
cmp
daa
mov
mov
mov
mov
into
sub
cld
xchg
addr16
lahf
sbb
sarb
xor
xchg
pop
movsb
push
and
cmc
or
xlat
and
cmp
cmp
pop
je
xchg
pop
xchg
xor
call
testb
cmpb
lcall
mov
les
or
mov
push
dec
fs
fisubs
pop
pop
fwait
ljmp
push
aas
push
ljmp
dec
rorb
xor
daa
jne
popf
cmpsb
repz
mov
call
gs
rep
add
ffreep
mov
cmp
nop
popa
inc
pop
ljmp
test
aad
addr16
xor
outsl
pop
scas
sbb
lahf
iret
xchg
sub
sbb
stos
mov
cmpsl
out
mov
xor
lret
sbb
or
pushf
xor
adc
add
loope
jnp
test
mov
pop
mov
xor
sbb
test
nop
adc
jns
inc
out
es
in
jno
push
lahf
roll
sbb
fnsave
lahf
mov
mov
test
mov
gs
in
mov
fidivrl
xchg
cltd
add
mov
mov
test
rcll
fs
jg
insb
fdivr
int
stos
es
cmp
pop
mov
jbe
mov
adc
dec
dec
repz
ljmp
and
dec
movsb
sub
pop
mov
in
xlat
lods
mov
push
iret
scas
mov
push
sbb
or
rolb
lahf
sbb
outsl
mov
cmp
fs
cltd
cld
icebp
push
sbb
mov
int
jno
add
cmpsb
scas
jge
inc
lock
add
test
xchg
mov
stc
rcrl
pop
fmull
adc
jbe
pop
or
mov
xchg
mov
cltd
ret
rcrb
in
insl
lds
imul
repnz
rcll
xchg
mov
sti
jmp
popa
mov
jl
in
sub
cld
sahf
sbb
ss
enter
ret
mov
pop
int
xor
xlat
int
clc
inc
lahf
jp
stos
mov
pop
inc
jb
leave
or
jmp
jae
fxch
leave
add
inc
push
test
adc
or
sbb
push
sti
xchg
addb
inc
test
xchg
mov
mov
xor
xor
mov
jb
cwtl
stc
rclb
push
sub
sbb
lock
push
dec
rclb
insl
aam
and
push
sub
push
insl
inc
or
cli
or
or
jecxz
adc
jns
scas
xchg
leave
popa
js
lds
aas
cltd
mov
imul
rolb
int
fsubrp
pop
gs
or
ret
push
lock
sub
aam
and
jae
sbb
and
roll
enter
push
js
roll
xchg
pop
testl
adc
das
loopne
or
sbb
pop
fisttpll
mov
mov
orl
pushf
das
dec
cmpsb
sbb
aaa
icebp
push
loope
cmpsb
aaa
push
les
movsl
xor
push
shlb
fs
cmc
mov
or
cmpsb
roll
subl
push
lods
mov
scas
cmpsl
cmp
mov
cltd
scas
dec
pop
repz
or
cmp
insb
data16
lret
adc
imulb
mov
inc
pop
cmp
mov
xlat
faddl
xor
pop
bound
sbb
dec
add
and
cmp
nop
adc
andl
loop
jg
dec
jmp
pop
bound
out
xor
push
insl
je
mov
test
orb
mov
adc
cmp
leave
int
adc
jle
cmc
fimuls
mov
das
popa
daa
cli
ret
mov
mov
and
loop
jae
jns
xchg
mov
das
cld
xor
inc
pushf
stc
push
icebp
or
inc
pop
dec
xchg
into
xor
lahf
jmp
mov
jle
dec
cmpl
cli
cld
mov
xchg
jb
insb
xor
cmpsb
xor
sub
stos
dec
push
mov
insb
push
loop
jmp
cmp
add
dec
pop
cmpsl
cmc
xchg
push
mov
shll
pop
or
xor
shl
outsb
xchg
leave
pop
mov
sub
jne
pop
repnz
outsl
and
test
pop
negb
movsl
enter
mov
add
sahf
lret
rcrb
jb
pop
inc
pop
and
mov
sub
push
lret
cli
ficompl
dec
and
test
out
lret
pop
call
jae
out
cmp
mov
fcompl
mov
movl
adc
and
es
aad
cmp
lea
into
push
add
or
sub
mov
shrb
add
rcr
ret
repz
inc
and
daa
jne
aaa
sbb
xlat
inc
pop
mov
adc
or
pop
and
lret
lret
nop
pop
fcoms
imul
adc
inc
fnstsw
sub
orl
test
scas
sub
outsb
xlat
xchg
repz
jecxz
movsb
pop
in
test
or
sub
cltd
add
fnsave
sub
fcmovb
dec
mov
pop
xchg
or
inc
and
dec
fcompl
sti
frndint
lds
repz
mov
and
xor
cs
jb
shrl
jge
push
or
aas
repnz
cld
out
jmp
pop
aam
sbb
stc
mov
sub
dec
or
pop
pop
jecxz
jmp
rolb
call
in
gs
jb
push
fs
or
push
mov
pop
xchg
xor
mov
mov
xlat
dec
cmp
ret
xor
mov
xor
rcrl
mov
mov
lahf
mov
add
mov
pop
dec
mov
jecxz
lock
push
mov
fdivp
pop
arpl
insb
xchg
push
in
sub
shr
jmp
lahf
into
ficoml
mov
mov
pop
jno
sbb
mov
sbb
mov
sbb
xlat
jnp
aam
jmp
sub
sub
je
aam
pop
mov
push
push
dec
xchg
lds
mov
lret
or
add
xor
mov
fs
daa
lods
and
xchg
mov
ss
das
add
lods
or
pop
loope
sbb
sbb
xchg
sbb
imul
cmp
pushf
fsubl
jp
in
inc
xor
mov
dec
xorl
and
inc
mov
aam
sub
add
in
data16
mov
or
jge
das
std
xchg
idivb
jae
dec
mov
adc
dec
enter
lods
leave
inc
and
mov
dec
jmp
mov
fnstenv
pop
add
sbb
mov
push
jle
out
pop
movsl
and
jl
push
inc
jae
call
mov
mov
ds
pop
add
jle
gs
xorl
mov
jae
fstl
sbb
adc
bound
push
cmp
xorl
mov
jae
lea
orl
sub
ds
js
jp
bnd
cltd
gs
xorl
loopne
arpl
ss
mov
jg
inc
xor
xchg
jns
cld
add
divl
out
push
cmp
rcl
sbb
sahf
jne
inc
jmp
and
cmp
addr16
mov
mov
lret
push
sti
mov
cli
std
outsb
inc
jl
cmpl
in
iret
das
xchg
adc
pushw
outsb
add
bound
fidivrs
and
ret
mov
test
mov
inc
jae
sub
das
pusha
ljmp
mov
dec
push
lahf
jl
js
dec
add
out
xchg
dec
ret
cwtl
es
dec
imul
inc
dec
test
mov
dec
mov
call
jecxz
js
mov
in
mov
sbb
shrl
mov
imul
xchg
jg
stc
popf
dec
fsubl
push
xchg
loope
push
cmp
das
dec
leave
mov
xchg
cltd
mov
iret
lock
mov
pusha
call
mov
je
jp
jecxz
imul
mov
into
repz
ficompl
cmp
lahf
leave
lahf
mov
loopne
mov
pandn
out
xor
pusha
clc
in
xchg
push
lea
icebp
loopne
mov
inc
mov
ja
push
call
jb
test
fiadds
push
jae
pusha
andl
movsb
repnz
lds
aas
movsb
and
add
nop
mov
or
jl
icebp
cmp
cmc
outsl
sti
add
inc
out
sbb
sbb
cltd
xchg
pop
rorb
stc
sbb
mov
xor
fsubl
sbb
lret
icebp
inc
xor
leave
lret
add
mull
adc
das
popa
shrb
hlt
mov
sar
mov
in
dec
call
mov
fmuls
leave
sti
or
inc
pop
std
sbb
cmpsl
rclb
ss
aaa
lods
push
fdivrl
out
mov
testl
dec
fadd
push
mov
scas
je
rorb
pop
mov
push
cmp
test
jle
jp
in
pop
dec
out
sbb
test
push
addr16
inc
add
ss
das
addr16
fbld
fsubrs
xchg
jmp
inc
cmpsl
jp
jle
iret
mov
sub
data16
pop
pop
mov
mov
dec
and
imul
sub
dec
cltd
push
cmpl
adc
mov
int
and
xlat
shl
subb
push
adc
sahf
stos
xchg
movsl
shlb
in
fsts
jnp
rcrl
not
aas
mov
mov
mov
mov
mov
jo
and
insl
xchg
mov
repnz
pop
add
stos
push
pop
push
jno
rcll
inc
cmpsb
je
mov
cmpsb
dec
test
aas
cmpsl
shll
lret
cmp
xor
in
sahf
adc
inc
xlat
test
mov
ds
adc
and
lods
cwtl
cmp
repnz
ret
cmp
mov
add
jne
cmc
lods
and
cwtl
daa
adc
test
xchg
testl
push
push
sarl
inc
addb
out
add
push
repnz
hlt
sarl
lahf
lcall
push
add
int3
cmp
adc
sub
push
inc
xchg
inc
es
fists
ds
xor
scas
cmp
push
popa
leave
pusha
iret
sbb
js
or
shlb
les
jb
xor
mov
cmpsl
cmp
push
and
xchg
sbb
notb
ds
out
xorl
push
ljmp
ljmp
stos
lea
inc
add
mov
ret
dec
sub
dec
jecxz
cmc
addr16
or
mov
ds
pop
ror
test
cwtl
xorb
pop
cwtl
ljmp
data16
push
dec
dec
or
and
sub
inc
repnz
sub
xlat
dec
divb
fwait
mov
jecxz
mov
mov
mov
sub
int
lret
int3
xor
mov
and
add
dec
mov
push
jecxz
jne
fbld
mov
iret
mov
cs
mov
inc
testb
repnz
and
and
xor
and
and
xor
les
jb
and
mov
js
xchg
pop
xor
or
inc
mov
jmp
xor
inc
rorl
pusha
scas
sub
push
ljmp
cmc
mov
cwtl
jg
imul
xchg
mov
jae
pop
shlb
xchg
dec
cmp
or
pop
jnp
scas
aam
lcall
mov
inc
lea
mov
rcrl
sbb
mov
inc
das
test
pop
inc
adc
mov
mov
mov
sahf
dec
push
aam
jbe
icebp
scas
scas
lcall
imulb
in
sbb
pop
jo
lods
mov
dec
pcmpgtd
popf
sbb
hlt
in
in
pop
jmp
xor
mov
jns
cmpsl
cmp
xchg
xchg
sbb
das
faddl
jg
or
stos
decl
push
inc
imulb
jno
push
aad
out
cltd
jle
clc
xor
cmc
adc
mov
mov
mov
nop
fldl
gs
adc
pop
les
insb
call
lret
xchg
pop
jno
cmpl
insb
xchg
add
xchg
or
jo
sbb
xchg
jmp
cmp
lahf
gs
lock
sti
lret
pop
push
loope
jmp
pop
lods
out
dec
xor
or
pop
scas
cli
dec
adc
mov
jge
iret
andps
push
inc
aam
into
daa
cmpsb
dec
or
and
pop
gs
pop
lock
sbb
sub
outsb
das
or
xchg
scas
lcall
jmp
or
add
lock
mov
mov
repz
outsl
mov
lea
stos
add
or
xlat
mov
jne
mov
pop
push
in
lea
push
js
ljmp
fdivrs
fcompl
mov
ljmp
mov
dec
jg
or
xor
fldl
mov
mov
sub
jnp
aas
pop
cmpsb
adc
mov
add
shll
js
add
fnstcw
in
adc
sub
imul
or
ja
cld
inc
add
bound
or
sbb
xlat
gs
addl
pop
inc
mov
inc
or
insb
jmp
repz
inc
cmp
adc
mov
idivl
addl
out
repz
fdivl
xor
stc
test
in
inc
outsb
nop
jo
fcmovbe
test
sub
and
mov
adc
ljmp
push
ret
cmp
push
jbe
out
sahf
mov
adc
mov
mov
rorb
je
lea
lret
jp
pop
jbe
cmc
xor
sbb
mov
aad
push
mov
addr16
divb
je
hlt
push
xor
inc
insb
insb
cmp
stos
fsubs
loope
call
test
and
loope
cmc
push
test
xchg
jl
je
pop
mov
mov
das
call
cbtw
leave
fildll
fistps
loope
xchg
mov
mov
fmull
out
clc
arpl
or
cld
outsl
dec
jae
push
dec
and
inc
add
and
neg
into
fdivrs
mov
mov
popa
adc
aad
popw
out
jle
pop
psrlq
ljmp
mov
inc
movsb
xchg
push
cmpsl
inc
xlat
and
mov
std
outsb
dec
adcb
mov
out
fldl
stos
orl
jb
cmp
aad
cmc
lahf
jp
mov
cmp
push
mov
sub
insl
jecxz
jo
loopne
test
add
cmp
dec
push
cmp
xchg
outsl
xchg
fcmovne
ss
sub
sbb
imul
negb
fldenv
mov
insb
push
add
mov
cmc
lahf
push
pop
stc
push
jmp
je
gs
mov
stos
xor
xor
cmp
mov
bound
mov
nop
pop
sti
or
test
andb
lds
movsb
add
es
jne
push
lret
mov
xchg
sbb
add
add
loope
rcll
mov
fldenv
adc
popa
mov
adc
lods
cs
insl
sub
jmp
test
cld
add
lea
pop
dec
out
jp
pop
or
sub
daa
dec
mov
repnz
shr
and
mov
or
loop
inc
inc
popf
aad
jp
call
shl
aam
int
stos
ja
mov
jnp
into
sbb
push
xor
cmpl
pushf
popa
test
or
repz
jp
test
cmpsb
sub
dec
jb
call
xchg
mov
fsubrs
mov
repnz
rcl
jl
aaa
icebp
dec
cmp
scas
xchg
or
or
mov
shll
mov
std
jecxz
jae
outsl
jo
adc
mov
push
sti
ja
push
arpl
fnstsw
jnp
in
xchg
in
push
mov
push
loope
pusha
int3
jp
es
mov
add
lret
sahf
sbb
ja
rcrl
sbb
add
xor
cmp
pop
xchg
xor
dec
xor
ja
lea
jle
jecxz
jg
lahf
xchg
insb
adc
xor
mov
jno
xchg
daa
xchg
out
pusha
imul
mov
data16
aad
sbb
jns
stos
push
hlt
or
test
shr
mov
dec
push
sbb
sbb
nop
arpl
mov
fmuls
dec
inc
stos
ljmp
mov
mov
xchg
shl
sahf
mov
sub
sbb
insl
ja
add
mov
xchg
ljmp
or
and
jo
fs
push
jnp
mov
stc
fcmovu
pop
mov
jno
xchg
adc
cltd
push
popl
repnz
jb
aas
lahf
out
call
in
div
xchg
orl
lods
jp
test
add
pop
jp
push
push
xor
js
jbe
push
jae
pop
or
dec
movsb
push
sub
iret
cmpsl
stos
and
daa
pop
dec
push
mov
das
rcrb
xchg
xchg
jp
ret
xor
std
and
xchg
or
sti
cmp
jl
xor
mov
or
pop
push
xor
daa
inc
outsl
in
push
jmp
js
mov
jge
scas
jecxz
push
lcall
dec
out
cmp
xor
sbb
mov
inc
mov
call
stc
or
mov
ficoml
outsb
sub
ret
orl
inc
nop
into
mov
adc
int
inc
ljmp
fisttpll
inc
stos
jge
lods
pop
and
clc
jmp
sahf
inc
jp
fistpll
push
mov
inc
repz
cs
dec
ret
cmpsl
sub
inc
decb
negb
pop
out
xlat
lds
popf
jg
fsubl
add
xor
dec
or
inc
inc
lcall
push
in
jbe
mov
iret
inc
pop
sub
out
mov
pop
iret
jle
mov
fs
loop
sbb
push
xor
ret
addr16
ret
daa
dec
ret
push
push
push
push
bound
mov
loopne
push
mov
xor
add
mov
dec
xlat
pop
pushl
xchg
dec
push
xor
loope
inc
test
icebp
std
and
push
outsl
mov
pop
inc
test
mov
out
inc
mov
cltd
notl
sub
or
xchg
lock
insb
adc
mov
inc
mov
mov
iret
test
scas
jo
iret
out
jno
aas
jae
mov
sti
xchg
cmp
dec
pop
mov
leave
inc
adc
mov
or
popf
loope
loop
mov
rol
mov
sub
int
pop
cmpsb
shlb
sbb
mov
jb
push
pop
sub
insl
sbb
dec
mov
xchg
xor
arpl
xchg
mov
sbb
loop
fisttpl
pusha
xchg
push
xchg
xchg
cmp
ds
les
mov
fwait
mov
and
daa
pop
sbb
dec
inc
mov
xchg
ficoms
jno
cmpsb
jge
shrl
sub
xchg
mov
ss
xor
mov
popa
dec
adc
and
mov
inc
sahf
mov
loop,pt
das
fs
movsb
sbb
jae
jnp
push
lret
pusha
das
sub
fwait
push
push
sub
jno
dec
test
jnp
mov
push
outsb
rclb
sub
aad
mov
push
xlat
rorb
nop
add
in
dec
jb
add
clc
stos
out
lods
pop
fbld
and
sub
fnstenv
add
pop
imul
add
cltd
inc
pop
enter
push
cmp
bound
xchg
aam
fldcw
xchg
adc
jns
jb
cmp
lahf
fs
mov
rcrb
int3
lock
stos
mov
jno
jg
cmp
dec
jo
cmp
jle
fcmovbe
dec
scas
xlat
jns
cmp
sahf
fidivrs
sahf
push
mov
loope
in
push
das
pop
clc
jne
iret
and
call
xor
or
inc
xchg
cli
ljmp
mov
mov
repnz
jnp
inc
adc
push
lret
arpl
scas
cli
stc
scas
inc
xor
js
jo
mov
mov
pop
sbb
pop
mov
scas
sti
leave
jne
jmp
mov
stos
push
fs
stos
sub
divb
mov
popa
cwtl
or
mov
lahf
sub
or
xor
cmpb
dec
fstpt
fcomps
xchg
jns
cltd
xor
xor
cmp
pushf
loopne
lock
pop
adc
scas
mov
push
mov
int
cmp
repz
lcall
xchg
insl
pop
inc
mov
addr16
test
inc
pusha
ret
popa
xor
dec
xor
xchg
lds
pop
inc
dec
xchg
push
mov
daa
fists
push
adc
mov
or
xlat
mov
cld
jl
sahf
nop
hlt
mov
sbb
cmp
xchg
adc
out
pop
dec
inc
fdivs
jbe
shrb
mov
popa
mov
mov
pop
sar
cmp
out
stos
loopne
jb
push
add
cmp
aaa
add
or
xchg
cmpsl
iret
loope
pop
frstor
fistl
cmp
into
je
add
adc
add
icebp
mov
mov
movsl
mov
cmpsl
add
fimull
lret
in
lahf
in
add
sub
stos
push
ljmp
mov
sub
adc
aad
mov
pop
cmp
pop
mov
in
jo
fwait
cmp
ljmp
cltd
push
daa
es
sub
cmp
inc
ja
cmpsl
movsb
movsl
jmp
mov
push
add
icebp
lds
lret
adc
call
dec
mov
pop
ret
lods
lret
jo
and
aaa
dec
xchg
loopne
jbe
ss
jle
sbb
sbb
aaa
cs
ds
or
push
mov
dec
lock
sarb
inc
or
lcall
enter
dec
shll
inc
testb
test
imul
js
xchg
inc
ficomps
xchg
arpl
or
push
pop
imul
mov
mov
daa
adc
jl
xor
inc
lods
addr16
movsb
mov
jae
dec
stos
mov
cmp
sub
ret
cmp
push
pop
push
jmp
cmp
or
inc
jae
xor
pop
cwtl
mov
fcmovb
fidivs
xchg
add
mov
fmulp
dec
xchg
fisttpll
call
int3
jg
clc
push
sbb
outsb
das
inc
lds
in
mov
lods
enter
sbb
xchg
rol
out
test
sbb
lcall
pop
xor
and
jle
push
arpl
xor
adc
ror
out
out
mov
xchg
movsb
stos
dec
addr16
xlat
cld
ret
push
movsb
mov
mov
aas
clc
iret
lods
inc
lret
test
pop
in
movsb
icebp
aaa
cwtl
mov
mov
imul
sti
loope
mov
into
lahf
aaa
fsub
cltd
xchg
aaa
sub
in
or
iret
scas
jne,pn
or
add
roll
in
mov
xor
or
test
icebp
test
add
or
mov
and
addr16
xchg
insb
test
outsb
mov
mov
and
mov
jne
outsb
xchg
loop
lcall
pop
loope
push
fcomps
mov
xchg
cmp
test
inc
sar
es
push
arpl
or
xor
mov
mov
sub
call
sbb
pop
lods
scas
jmp
shrl
int
inc
fwait
lret
adc
xchg
cmp
inc
scas
rolb
sti
and
out
sub
add
xchg
notb
mov
aaa
jge
cld
ficoml
out
inc
adc
cmp
mov
cs
scas
push
jne
cmp
mov
cmpsb
shlb
and
xor
push
sbb
pop
xchg
sbb
es
xor
push
pop
mov
hlt
sub
shlb
pop
ror
aas
cmc
mov
call
data16
mov
bound
lcall
shlb
test
dec
in
addr16
jmp
xlat
mov
outsb
push
dec
outsb
cmpsl
sbb
mov
mov
jo
jecxz
cwtl
ljmp
xchg
sbb
inc
sub
inc
neg
cltd
in
ja
cmpsl
js
in
mov
mov
sub
lret
inc
lcall
add
inc
adc
add
out
imul
jno
adc
das
icebp
mov
mov
sub
shrl
cwtl
inc
dec
dec
popf
sbb
insl
movsl
xchg
shlb
and
and
push
pop
pop
insb
std
pop
jecxz
lret
movsb
cli
lea
test
sub
jmp
push
bound
lea
das
nop
cmp
xor
ret
ret
push
outsb
and
rorb
inc
xchg
jno
lock
dec
cmpsb
sar
push
adc
or
mov
jl
outsl
inc
and
shrl
mov
jno
cwtl
adc
leave
mov
sbb
add
pop
cwtl
sub
cmc
cmpsl
adc
dec
and
out
nop
je
add
cltd
jns
maxps
lret
dec
dec
std
mov
scas
sub
aad
rclb
andb
subl
push
pushf
mov
or
adc
adc
dec
pusha
jnp
jne
adc
arpl
push
leave
fnstcw
jno
sub
xor
das
inc
loope
jne
js
popf
sbb
aam
hlt
cmpsb
cmpsb
ja
xchg
lahf
pop
sub
jnp
push
nop
inc
in
in
out
add
add
add
mov
sarb
and
inc
mulb
and
xchg
xor
or
or
inc
or
in
call
push
jecxz
sahf
jp
dec
mov
sbb
jecxz
mov
inc
stc
or
xchg
mov
mov
dec
inc
jbe
sbb
jno
ja
push
mov
aaa
test
ficoml
add
pop
and
jl
jecxz
out
jnp
mov
inc
fwait
cmp
xchg
movsb
add
pop
leave
jne
pop
xchg
mov
pop
out
test
jae
pop
pop
sahf
imul
inc
aaa
jbe
cmp
fdivl
out
xor
dec
cmp
lds
fxam
inc
fistpl
xchg
add
push
je
cmp
clc
and
mov
xor
in
lahf
xor
insb
test
scas
orl
mov
sbb
sub
imul
or
icebp
aad
cmp
push
xchg
cmp
loop
rcll
cwtl
pop
pop
mov
add
or
loope
int3
xchg
push
imul
inc
stos
aam
mov
test
fistpl
inc
imul
ja
mov
jo
add
aas
iret
mov
insb
lcall
vpandn
jb
loop
mov
jle
hlt
xchg
push
enter
in
int
jge
pop
test
pop
jne
or
add
add
cwtl
jo
xchg
test
pusha
add
fsubrs
ja
loop
sbb
outsb
popf
leave
cld
out
aam
sbb
outsl
or
ret
sub
xchg
ss
push
js
fnsave
mov
jae
cmpsb
jo
mov
jmp
jae
and
jne
mov
insb
mov
lock
add
inc
out
jbe
ficomps
xor
adcl
xor
addr16
loopne
test
mov
scas
repz
inc
add
repz
add
sbb
ja
mov
sbb
pop
fldt
xchg
out
xchg
testl
imul
addr16
cmp
mov
jge
loopne
leave
icebp
fnstsw
dec
pop
jae
fcmovb
aam
pop
in
cmc
sbb
addr16
xlat
mov
jl
or
mov
push
or
inc
cmp
dec
jmp
test
push
and
add
sbb
ljmp
and
loope
push
das
mov
sub
icebp
rcrl
lods
jmp
stos
shl
movsl
pop
add
push
in
mov
test
call
mov
or
shrb
in
mov
repnz
cs
and
mov
mov
push
aas
cmp
leave
mov
cmp
jo
insb
push
push
and
imul
stc
outsb
dec
rorb
in
cmpb
add
aad
push
aam
adc
mov
dec
pop
or
mov
mov
dec
xor
push
mov
popf
lcall
mov
dec
xlat
ds
fs
mov
cmp
fcoml
arpl
pop
or
clc
xchg
push
jo
jge
sub
outsl
jo
dec
mov
jbe
cmp
pushf
cmp
mov
ss
xor
cmp
or
sub
xchg
lds
mov
out
sbb
push
xchg
pop
cmpsl
test
insl
stos
in
cmp
add
jb
lods
push
push
les
lods
daa
or
lods
stos
xchg
cmp
fisttpl
push
push
lcall
lahf
mov
or
cmp
movsb
fcmovne
imul
stc
add
shlb
adc
jl
push
pop
movsl
outsb
fdivrl
fs
insb
cmp
xor
sub
not
mov
adc
or
dec
lods
pop
fdivs
scas
leave
adc
jg
repz
ljmp
in
ds
dec
jbe
mov
je
inc
insl
jnp
mov
addr16
jnp
aad
rcl
mov
xchg
push
jne
sbb
std
mov
push
popw
popa
xchg
push
sub
sarb
cmp
xor
cmp
insb
adc
mov
adc
adcl
xor
jns
jns
xchg
push
fucomp
mov
add
pusha
sbb
push
ljmp
pop
clc
cwtl
mov
hlt
mov
push
pop
cmp
pop
call
orl
rcrl
or
nop
lcall
das
sbbl
mov
je
dec
jb
add
sub
fsubl
decb
dec
mov
fistpll
rolb
clc
dec
mov
or
ljmp
pop
cmpsb
sahf
jae
orb
push
adc
pop
loopne
fisubs
push
out
into
mov
clc
movsl
push
aam
pop
add
xchg
sarb
movsb
adc
pop
aaa
ja
mov
repz
cmp
inc
fcomp
add
adc
xchg
push
sbb
or
out
pop
inc
mov
je
mov
push
stc
xchg
dec
push
ss
jmp
xchg
xor
lret
jbe
fs
data16
push
xor
loop
jne
insl
cltd
mov
sarl
fdivrl
jbe
mov
and
inc
xorb
mov
std
mov
addr16
jnp
mov
adc
arpl
into
mov
gs
push
dec
xor
lea
adc
in
test
mov
sub
mov
aas
movsb
xor
je
sbb
inc
dec
les
lret
mov
adc
gs
ds
dec
rorl
cmp
jne
xchg
inc
es
popa
add
inc
mov
mov
adc
sbb
mov
inc
jo
movsb
jge
push
xor
adc
xchg
pop
call
loopnew
push
arpl
mov
push
js
sub
cmpsl
mov
ret
push
dec
shrl
mov
mov
pop
pop
adc
add
inc
add
sbb
xchg
sub
add
and
jns
lcall
shr
sbb
lahf
call
pop
mov
jae
js
pop
rclb
shl
ja
ds
jno
inc
add
cmp
pop
jo
mov
int
in
inc
mov
aad
sub
dec
pop
push
cmp
std
add
mov
mov
lahf
pop
jmp
push
and
mov
testl
dec
add
push
xor
aam
pop
mov
push
inc
stos
xchg
push
int3
sbb
fmul
sub
pop
and
pusha
aad
mov
or
call
xor
inc
lahf
out
or
sbb
es
adc
cltd
xchg
aas
sub
xor
adc
lahf
inc
mov
popf
push
xchg
scas
ret
sbb
and
loopne
jl
sub
sti
sbb
repz
xchg
adc
imul
adc
dec
out
loopne
mov
pusha
xor
popf
cmp
jne
mov
adc
inc
sbb
rcr
xchg
sbbb
push
ret
push
cmpsb
and
push
cli
xchg
inc
les
or
inc
leave
inc
lea
jae
mov
pop
mov
mov
adc
fsubrs
in
imul
mov
in
dec
pusha
jmp
xchg
daa
cs
mov
test
jae
mov
push
pop
sbbl
mov
jne
mov
insb
loopne
leave
clc
mov
push
push
mov
adc
mov
xor
test
or
popa
leave
aam
ljmp
jb
push
pushf
mov
popa
jb
sub
adc
gs
leave
adc
xor
xchg
ret
or
dec
cmp
jbe
ficoms
add
movsl
xor
pop
push
std
cmpl
and
xor
lahf
sub
test
aaa
into
pop
in
jo
lods
icebp
add
arpl
inc
sub
dec
push
popa
pop
cmpsl
fimuls
sbb
ret
add
ljmp
push
mov
cld
mov
or
and
loopne
xchg
adc
leave
jl
inc
inc
sub
jle
rorb
push
pop
mov
icebp
jbe
std
into
cmpl
shrb
mov
movsb
lea
hlt
bound
lods
repz
cmp
setnp
pop
xchg
adc
sbb
dec
cli
ljmp
add
jne
scas
nop
lahf
add
push
adc
mov
lret
adc
incl
cmpb
test
push
stos
adc
pop
aam
lods
gs
cld
in
sbb
mov
jae
lret
inc
cmp
cltd
or
add
sub
out
jbe
cld
ffree
inc
mov
and
adc
adc
cli
out
mov
getsec
dec
push
ja
fildll
ret
push
insl
iret
jecxz
fiadds
jae
adc
add
icebp
mov
pop
and
adc
push
repz
push
lods
or
outsl
aas
xchg
outsb
fs
or
fdivl
jbe
and
ja
pop
mov
enter
push
inc
addr16
aad
sub
int
cmp
jne
ljmp
lds
movsbl
dec
ja
dec
loop
inc
pop
jmp
sti
or
hlt
repz
imul
out
sbb
ja
clc
mov
aas
sub
add
jo
inc
fs
and
inc
rolb
lods
add
testl
mov
insl
mov
test
je
sub
mov
sbbl
std
mov
jno
iret
push
loop
xchg
js
add
cs
cmp
outsb
sub
push
adc
iret
adc
push
jne
mov
int3
jnp
outsb
add
sarb
insb
mov
jge
jbe
add
mov
test
ljmp
std
mov
lret
dec
gs
and
pop
pop
bound
dec
fst
cwtl
ret
and
aas
outsl
inc
cmp
sub
mov
stos
sub
mov
sarb
push
aad
mov
into
aam
fs
xchg
lret
addr16
mov
movsl
lret
push
stos
pop
call
xchg
add
sbb
test
loop
mov
loopne
add
add
push
adc
add
movl
mov
sbb
mov
sub
aaa
mov
test
xorl
in
sti
aam
sub
outsl
hlt
push
sahf
pop
lock
push
pop
inc
aas
lds
aam
rsqrtps
pop
or
jmp
add
mov
xchg
lds
mulb
fldz
dec
mov
mov
add
fadds
sbb
cmp
jne
push
pop
push
adc
and
cmp
into
pop
ds
enter
xor
cltd
cmpsb
lds
mov
mov
fldl2e
add
dec
rclb
out
and
lahf
adcb
out
ds
dec
stos
xor
imul
pop
xor
push
xchg
loopne
popa
cltd
nop
loope
xchg
and
lods
cs
jmp
xor
mov
lret
dec
mov
lcall
push
test
inc
cmp
ljmp
fcmove
sbb
fidivl
inc
daa
nop
or
cmp
cmc
stc
add
or
adc
test
jo
push
nop
loope
xor
shr
sub
push
out
out
xor
jbe
les
inc
pop
jb
inc
sbb
or
xor
pop
push
stos
xor
xchg
lods
jmp
iret
int
cmp
in
push
mov
sub
mov
rorl
push
ss
cmp
fwait
sar
xor
push
add
cmpsb
push
add
lods
sbb
add
xlat
sbb
das
sbb
jae
cmpsl
or
sbb
mov
lock
or
push
jmp
jg
push
dec
sarb
mov
jnp
mov
mov
scas
and
push
movsb
mov
stos
jmp
mov
xchg
lods
xchg
or
nop
pop
pop
rolb
test
rcll
ja
push
js
xchg
popa
ret
cld
mov
rcl
dec
xchg
nop
shl
xchg
lods
aam
jge
pop
jmp
or
lahf
stos
shll
pushf
mov
cmp
mov
sub
and
inc
rolb
scas
mov
rcrl
mov
mov
insb
fistl
in
inc
jmp
mov
shlb
mov
add
sub
lds
push
sarb
xchg
mov
fidivl
sub
nop
mov
and
into
enter
dec
sbb
fdivr
mov
mov
pop
mov
push
add
repz
inc
cmp
in
mov
int
iret
stos
int
lahf
fstpt
push
mov
mov
rclb
inc
inc
movsl
mov
push
mov
xor
cmp
sahf
dec
add
push
repnz
movsb
insl
lret
or
sub
inc
enter
mov
dec
loope
mov
cld
mov
insb
sarl
mov
mov
fs
push
mov
outsb
and
sbb
xchg
mov
into
add
mov
inc
les
enter
je
or
adc
out
mov
or
jo
hlt
icebp
xchg
lock
fs
pop
leave
lds
insl
fxch
jne
dec
push
xor
xchg
and
pushf
dec
mov
int3
push
nop
adc
outsl
shlb
xor
inc
xor
cld
cltd
hlt
cmp
dec
daa
imul
jns
xor
outsb
pushl
adc
inc
jb
sub
ficompl
repz
add
sbb
sahf
push
push
repnz
adc
ds
mov
imul
fucom
loope
leave
aam
xor
cmpsb
orb
mov
add
sbb
sarl
test
scas
add
test
cmp
adc
add
mov
std
fisttpl
mov
sarb
ja
push
inc
int
mulb
sbb
fiadds
and
sbb
or
pop
sub
and
je
ja
jmp
rcr
pop
jp
xchg
movsb
dec
jns
sbb
fldl
mov
push
rcrl
rclb
out
fistpl
or
mov
clc
and
faddl
jno
lcall
icebp
bound
mov
adc
aaa
cmp
jno
fidivs
frstor
push
xchg
jmp
sahf
xchg
mov
mov
pop
or
inc
xor
inc
push
cmp
add
xor
dec
icebp
sbb
or
movsb
shr
sahf
out
sub
sub
lea
or
pop
insl
and
jmp
pop
mov
shl
mov
in
mov
out
mov
push
pop
sbb
fs
mov
jb
or
lahf
lret
jp
fucom
hlt
stos
cld
dec
adc
sti
or
push
out
repz
jg
mov
ret
pop
imul
dec
adc
fildll
add
pop
or
jae
scas
int3
adc
xor
in
pop
add
push
movsb
inc
mov
inc
js
adc
or
mov
das
mov
dec
adc
push
push
sti
in
stos
jg
pop
xor
mov
and
cmpsl
scas
push
enter
xor
imul
lcall
jne
ds
adc
sets
cmp
and
loopne
lret
add
out
outsb
mov
mov
clc
insb
mov
bound
sbb
ret
outsl
xchg
cli
mov
mov
mov
in
push
mov
push
cld
jp
cmpsl
push
mov
dec
adc
fxtract
dec
mov
xor
xlat
cmp
movsb
mov
enter
or
and
cwtl
into
out
jmp
arpl
arpl
mov
iret
push
std
cmp
int
push
roll
pop
and
xor
fucomip
aad
or
lret
sbb
mov
jg
js
pop
jle
pop
lahf
jno
push
sti
add
mov
adc
xchg
jl
mov
inc
push
lret
push
jbe
mov
mov
pop
shll
aam
insb
mov
sahf
test
sbb
insb
pop
lods
mov
xchg
push
das
loopne
fcomps
jnp
xor
xorl
cmpsl
cmp
push
mov
js
sub
mov
inc
scas
and
in
cmc
mov
ret
inc
xchg
sbb
sbb
cmp
fldcw
push
inc
mov
add
data16
add
out
xchg
mov
mov
pop
adc
sub
xlat
lds
push
mov
xor
pop
aas
in
sub
test
arpl
jo
mov
stos
jecxz
xchg
mov
pop
je
and
test
push
xor
lock
xchg
shrb
xchg
mov
mov
and
cmpsl
push
cmp
jnp
and
pop
sti
lahf
ltr
into
pop
std
imulb
cltd
repnz
lcall
insb
loop
cmc
mov
xor
out
xchg
adc
pop
dec
daa
mov
pop
inc
subl
push
loopne
ja
mov
ss
inc
gs
test
sbb
push
bound
pop
and
dec
pop
or
ret
push
cmp
xor
shll
mov
ja
icebp
scas
dec
aas
repz
xchg
adc
inc
cmp
inc
cmp
xor
ret
push
outsb
out
ret
push
push
cmpsb
pop
sbb
or
nop
pop
fstps
mov
fiaddl
sbb
adc
sarb
cmp
and
jns
data16
and
sbb
test
pop
int
js
sbb
dec
fs
sub
jnp
ret
sbb
xchg
jge
out
fs
stos
stc
dec
mov
stc
cwtl
xor
lock
or
mov
sbb
xor
mov
sub
aad
loope
dec
mov
sub
jb
or
ret
mov
negb
sahf
pop
push
add
rol
or
mov
push
pcmpeqb
jecxz
popa
dec
test
in
stos
mov
dec
dec
shrb
mov
xchg
movsl
sub
xchg
loope
scas
arpl
mov
aas
push
xchg
cs
mov
inc
inc
push
inc
jp
hlt
insl
fisubrl
arpl
mov
lods
xlat
insl
popf
mov
scas
cmpsl
jno
cli
add
ss
cmp
cmp
cli
ret
push
push
xchg
in
sub
data16
andb
xchg
xchg
cmpl
aam
jp
addl
adc
pushf
scas
jns
inc
or
adcl
cltd
pop
jo
pop
sbb
lock
repz
jne
das
mov
and
cwtl
arpl
out
in
mov
enter
dec
dec
dec
inc
aas
sub
aad
sub
inc
add
sbb
pushf
pop
repz
out
adc
outsl
imul
scas
ja
xchg
fiaddl
mov
adc
mov
std
xor
push
push
in
inc
movb
shl
scas
stos
sub
std
out
imul
fwait
inc
sbb
divl
mov
cli
lock
in
test
sti
fmull
sub
pop
mov
sbb
xor
sub
pop
and
xchg
mov
ja
cld
clc
cmpsl
xor
or
jbe
mov
push
and
pop
sbb
inc
in
push
es
lock
ljmp
sti
repnz
mov
xor
insb
cmpsb
xor
sub
test
cmp
pop
cmp
popf
xchg
setnp
jo
xchg
dec
add
cmpsb
aas
dec
jno
jp
add
in
dec
mov
sbb
je
mov
hlt
div
aas
aam
inc
int3
sub
mov
dec
lods
sbb
out
in
outsb
dec
sti
pop
ss
test
cmpsb
iret
add
ds
pushw
lock
cwtl
inc
or
xchg
jecxz
in
jb
sbb
jg
add
dec
lods
mov
jbe
push
pushf
pop
roll
shlb
inc
cmpsl
dec
inc
repz
and
ret
xchg
add
imulb
ret
mov
out
adc
mov
inc
jp
adc
xor
in
out
mov
or
lret
loope
in
fwait
or
dec
addr16
out
mov
mov
pusha
push
test
icebp
xorb
dec
adcb
cli
dec
cmp
push
outsb
mov
in
fisubs
pop
sub
sbbb
cld
mov
push
lret
push
cmp
dec
icebp
loope
xchg
inc
in
fdivrs
pop
bound
xchg
add
mov
mov
cmp
test
test
jno
fdivp
mov
sbb
decl
push
gs
pop
jmp
imul
shl
clc
imul
and
mov
pop
push
jle
adc
inc
jmp
push
xchg
add
mov
mov
push
inc
ds
leave
dec
push
pop
lods
in
clc
sbb
sbb
shrl
xlat
pop
mov
xlat
dec
outsb
pop
lock
adc
ret
inc
adc
negb
psubsw
divl
pop
shl
rclb
or
testb
mov
arpl
jecxz
imull
mov
mov
dec
xchg
aaa
sbbb
lods
into
and
pop
stos
ja
push
outsl
aas
mov
jnp
das
lret
dec
and
ljmp
cmpsb
in
add
les
jmp
mov
pop
cmpsb
popf
lahf
inc
mov
dec
bound
int3
xchg
mov
cltd
pop
fwait
inc
fs
adc
scas
xor
or
sbb
jno
test
pop
adc
stc
loop
dec
push
pop
add
mov
mov
pop
xchg
mov
testl
adc
jno
scas
aas
scas
sbb
orl
rorb
aas
mov
sbb
inc
dec
sbb
repnz
xchg
mov
enter
inc
popf
jns
aam
sarl
out
add
js
jno
jle
pop
inc
idivl
jle
adc
xor
dec
push
in
or
mov
data16
clc
subl
dec
push
je
pop
xchg
jo
rcl
inc
jecxz
adc
clc
and
arpl
cmp
jmp
and
mov
mov
mov
mov
inc
out
ja
in
inc
stos
hlt
jb
push
pop
neg
mov
mov
sbb
lock
test
push
shll
fbstp
out
orl
cmp
std
test
adc
jle
test
fisttpll
mov
sbbb
adc
cmp
lcall
scas
sbb
rcrb
mov
fst
and
cmp
jp
push
pop
stc
mov
ja
scas
jge
add
and
iret
sub
xchg
xchg
push
mov
shll
pop
or
insl
fsubl
adc
aas
or
sahf
mov
jle
lahf
xabort
xchg
inc
cmp
jg
sub
movl
and
bound
mov
popf
aaa
pop
xchg
mov
das
lahf
push
repz
xchg
xchg
push
mov
out
sub
sub
jge
jle
jb,pt
je
dec
mov
rorb
adc
push
mov
out
fld
outsb
loope
cmpb
pushf
enter
sbb
mov
sbb
pushf
mov
arpl
ja
lcall
cmpsl
out
lods
mov
js
adc
mov
xchg
sub
aad
scas
shrb
pop
mov
out
mov
mov
inc
divb
fisubl
cmp
push
or
lret
hlt
icebp
mov
push
sub
es
subl
fwait
stos
cmp
and
fimull
outsl
sbb
mov
fldcw
mov
rorl
add
push
repz
lds
xor
scas
or
jl
scas
push
dec
and
sbbl
data16
cltd
mov
das
mov
enter
pop
std
clc
xchg
sub
push
out
sub
sub
nop
and
stos
lret
mov
pop
xchg
aas
shlb
ds
aas
sub
aas
das
lock
ljmp
push
pop
sub
add
xchg
in
dec
dec
stc
ret
jecxz
mov
mov
in
hlt
fs
test
imull
fnsave
mov
ss
inc
dec
or
push
ja
add
inc
lahf
dec
or
push
add
or
hlt
shlb
idivl
xchg
rorb
push
ja
leave
dec
imul
pop
aaa
jns
and
int3
mov
push
fwait
xor
jp
fwait
fs
aam
outsb
in
fwait
mov
mov
nop
fdivrs
mov
clc
fcmovbe
shlb
rcrl
jg
test
cltd
test
cmp
push
sbb
repz
shlb
ds
out
lcall
loopne
into
add
add
movsb
mov
pushf
push
enter
jb
push
enter
dec
inc
mov
pop
imul
shrl
cmp
and
pop
xchg
sahf
in
test
sub
cltd
jp
movsl
mov
addr16
cmpsb
xchg
pop
cltd
repz
hlt
xchg
enter
xchg
repz
inc
sub
mov
je
arpl
or
xor
mov
out
insb
out
xchg
int3
jp
fs
sti
test
jle
mov
sbb
aas
mov
jne
stos
xchg
mov
sbb
push
mov
inc
orb
inc
mov
popw
sarb
cmc
test
and
add
cmp
lret
adc
dec
lcall
push
inc
aas
jo
adc
js
cmpsb
repz
cwtl
jl
addr16
lds
and
loope
cli
mov
add
mov
xchg
lods
pop
fidivl
dec
daa
jp
gs
data16
add
mov
gs
cmpsl
ret
pop
push
push
adc
jg
push
fadds
inc
mov
cmp
stc
pop
gs
repz
hlt
enter
or
cmp
push
sti
sahf
test
add
inc
mov
out
rcrb
mov
pop
sbb
mov
sbb
mov
test
adc
push
inc
xor
push
cmp
pop
dec
fwait
imul
gs
add
mov
cmp
lods
into
dec
or
pop
out
ret
int
lea
das
cmp
cmpsb
inc
enter
scas
inc
xchg
adc
mov
es
cmpsl
xchg
ja
imul
push
push
inc
pusha
lods
loopne
sahf
mov
jae
mov
jo
ret
call
and
jno
cltd
inc
push
or
or
mov
mov
push
xchg
in
mov
pusha
cmc
cmpsl
mov
inc
fdivr
shl
pusha
xchg
pop
cmp
jb
cmpsb
repz
fucomip
stc
enter
push
jp
inc
int
fsubs
ret
lods
loop
clc
stos
push
shr
push
sbb
cltd
dec
or
imul
mov
das
mov
clc
adc
pop
enter
lods
cmp
in
add
dec
cmp
xchg
fcmove
lods
fwait
mov
mov
out
mov
shrb
aam
in
addr16
or
or
pop
lret
pop
cmp
inc
in
pop
cmpb
xchg
inc
nop
mov
es
sbb
add
outsl
lahf
fsubrs
pushf
adc
inc
ficomps
push
and
xchg
xor
add
mov
pop
push
push
dec
xor
loope
stos
in
stc
scas
addl
inc
fstpl
in
jge
inc
xchg
sub
adc
adc
divl
and
inc
fcmovu
insl
shrb
xor
and
dec
lret
shrl
sbb
in
lods
or
cmp
adcl
jns
lods
icebp
rcrl
repz
jl
adc
and
aaa
hlt
adc
shlb
dec
pusha
int3
jl
stos
mov
xchg
sbb
cltd
mov
jl
sarb
lahf
add
out
and
aad
std
mov
inc
ror
cmove
test
ss
mov
push
into
cmpsl
in
add
cmpsl
jle
dec
dec
cmpsb
pop
sub
push
sarl
mov
jg
xchg
push
xor
jle
xor
js
push
in
shrl
lea
dec
mov
inc
xlat
movsl
adc
aad
fbstp
leave
insl
inc
mov
icebp
add
pushf
mov
mov
cmp
ljmp
sbb
shl
adc
pop
out
push
daa
jno
fwait
adc
mov
lret
outsl
lret
sub
cld
xchg
ret
sub
inc
mov
and
popa
and
sti
xchg
pop
dec
push
lret
in
xlat
adc
jmp
xor
mov
inc
cltd
into
rol
shrb
aas
mov
and
xchg
mov
in
sub
jae
mov
rorb
fadd
arpl
mov
or
es
sahf
aas
xor
cld
hlt
sbb
jmp
or
gs
test
dec
test
cmp
lods
sub
adc
sub
push
fadds
cs
orb
sub
jle
and
push
dec
jmp
dec
in
divb
out
jae
gs
je
mov
mov
arpl
decb
xor
jne
inc
push
out
bound
lds
hlt
fildll
mov
popa
jle
jo
xchg
aad
mov
pop
cmp
icebp
inc
rorb
out
lods
pop
pop
inc
data16
pushf
rcll
out
pop
data16
xor
inc
iret
insl
push
movb
ret
mov
test
cmp
pop
pop
mov
shll
in
flds
imul
cmpsl
xor
ret
outsb
add
fiaddl
scas
jp
lea
or
push
outsl
adcl
inc
dec
stos
sub
pop
rcrb
loope
test
jno
call
add
or
popa
and
pop
mov
cli
scas
push
jno
in
jl
pop
cwtl
pop
jp
sahf
addr16
pop
jmp
xor
cs
rclb
ret
cld
cmp
hlt
push
jbe
sub
aaa
adc
adc
jnp
rorl
adc
fdivrl
xorl
pop
out
and
shll
loopne
mov
mov
scas
aaa
or
nop
dec
ficoms
fnstcw
test
dec
lods
push
or
jl
pop
jns
in
pop
mov
aas
repz
sbb
and
mov
mov
mov
mov
sbb
movsl
popf
lahf
pusha
inc
adc
dec
xchg
rcrb
scas
and
mov
data16
in
insl
jbe
jo
popa
jo
repnz
fistps
jbe
dec
mov
push
add
pop
imul
clc
clc
add
sbb
cmp
imul
fstps
push
stc
sbbl
push
xchg
or
out
inc
clc
adc
lahf
int3
loopne
decl
js
pop
flds
dec
xchg
mov
sub
inc
xor
add
pop
push
mov
rorl
pop
insl
xchg
push
xor
inc
inc
imul
aam
xchg
adc
ficomps
mov
stc
je
imul
mov
cld
dec
rorl
inc
fwait
mov
call
sub
out
sar
xor
pusha
enter
les
inc
sub
dec
inc
rolb
loopne
push
sbb
lods
popa
pop
and
pop
push
add
mov
or
cltd
inc
sbb
push
lods
add
add
lods
adc
scas
mov
mov
stos
aaa
and
ss
mov
mov
jl
mov
fsubl
lock
dec
mov
sbb
cmpsb
cwtl
xchg
mov
mul
and
cltd
jo
addb
inc
jbe
jbe
in
cmp
dec
stc
push
xabort
dec
repz
stos
dec
daa
out
divl
sub
add
mov
jecxz
dec
aad
imul
data16
xor
imul
or
mov
jne
pop
jg
dec
mov
repz
mov
xor
aad
inc
int3
xchg
iret
fistps
popf
adc
dec
add
adc
adc
xor
or
sub
aad
sti
into
call
je
sbb
popf
or
push
pop
cmpsl
jge
sbb
push
inc
xchg
cmpsb
add
adc
lahf
in
jne
xor
push
repnz
mov
pop
adcl
jecxz
rclb
or
mov
pop
testb
sbb
pop
shll
in
mov
aad
ss
sbb
sbb
shll
and
xor
test
mov
test
mulb
mov
movsb
push
ss
xchg
jle
rcrl
sbb
adc
sar
adc
mov
bt
rcl
iret
ror
je
stc
sbb
and
imul
stos
icebp
cmp
push
cmpsl
sub
mov
jne
outsb
cpuid
aam
mov
into
outsb
mov
test
lock
xlat
pop
sbbb
repz
lods
pop
xchg
adc
or
jmp
insl
xchg
mov
loop
fs
jno
pop
jnp
cwtl
mov
std
xor
push
aas
dec
popf
sbb
xor
jae
std
xor
jle
in
lret
and
pop
insl
mov
xchg
xor
aas
pop
pop
xor
mov
mov
sahf
add
lods
push
adc
inc
frstor
iret
aam
pop
lret
clc
fadds
jmp
push
dec
mov
or
push
jne
pop
mov
mov
fdivr
inc
inc
jns
xor
dec
or
in
mov
or
pusha
fnstcw
cmp
js
mov
lods
add
fs
and
xor
addr16
push
dec
sbb
mov
fidivrl
movsb
inc
push
lcall
shlb
std
and
clc
ds
lret
dec
push
ss
push
sbb
test
xchg
loopne
jmp
aad
scas
loop
repnz
fadd
loope
inc
cmpl
sbb
ja
imul
int3
add
repz
jae
fildll
stc
scas
and
jl
and
add
out
push
xorb
aaa
mov
js
icebp
pop
loop
inc
jns
or
push
xchg
stc
xor
lcall
jbe
jl
test
xor
insb
cli
lock
lock
movsl
out
ljmp
mov
xchg
pop
dec
sbb
or
loope
xchg
hlt
jne
aad
bound
into
adc
outsl
mov
cmpsb
imulb
lods
xor
add
js
push
outsl
mov
mov
loopne
frstor
push
xor
add
jmp
dec
ficompl
mov
loopne
scas
cmc
lea
notb
inc
add
sub
adc
push
mov
stc
xchg
out
sbb
js
in
repz
pop
jns
cltd
and
frstor
jle
jbe
jo
and
adc
pop
fildll
andl
sub
cmc
ret
mov
xchg
sar
xchg
pushf
jae
je
adc
ljmp
iret
int
add
stos
jnp
fisubrs
idiv
pop
insb
push
lahf
arpl
nop
arpl
dec
pop
push
and
push
add
dec
fld
xchg
sahf
add
lods
add
int
cmp
xor
pop
sbb
xor
movsb
mov
mov
and
xor
lock
das
xor
mov
dec
jmp
sti
cld
jle
jp
adc
lahf
xorl
in
push
sub
push
adc
icebp
int3
pop
and
cmc
inc
add
stc
cmp
test
fisubrs
cmp
cmp
push
subl
and
cmp
cmp
pushl
push
adc
or
fwait
dec
or
dec
cs
push
sub
into
rorl
cwtl
cwtl
jl
and
xchg
iret
subb
in
sbb
int
fnstenv
pop
add
int3
mov
add
shr
xchg
mov
mulb
ret
push
mov
adc
push
shrl
fwait
add
jmp
push
dec
pop
insl
sbb
orb
or
push
sbb
out
add
jle
scas
add
adc
xchg
mov
jmp
inc
cmp
insb
loope
xor
testb
out
ljmp
mov
test
into
jb
arpl
loope
cs
cmc
in
test
adc
fisttpl
aam
in
movsb
sbb
adc
xchg
cs
cmp
xchg
jae
mov
and
test
mov
outsb
or
pop
or
mov
ja
scas
xor
ds
xchg
out
xchg
lds
outsb
and
or
lret
test
cmp
cmp
mov
mov
std
sbb
jo
clc
inc
pop
adc
or
cmpb
pop
roll
or
adc
icebp
sbb
fistpll
fildl
ds
das
cs
cmp
incb
jle
pusha
icebp
addr16
sbb
dec
imul
or
mov
notb
stos
stos
or
mov
adc
fwait
jb
mov
mov
push
sbb
cmp
mov
pop
test
cld
int3
lds
cltd
in
lods
fcmovne
jno
sti
int3
adc
aaa
popf
in
pushf
mov
jle
sar
push
push
das
into
cmpsb
shr
push
mov
jge
scas
test
daa
jecxz
mov
or
lods
in
pop
mov
push
jg
pop
xor
std
xchg
je
lret
loop
jne
adc
inc
mov
divl
cs
inc
sub
insb
sbb
sub
jg
inc
aad
dec
and
testl
jp
ja
adc
mov
arpl
cmovle
xchg
jb
clc
dec
pop
mov
add
mov
cmp
ss
sbbl
cmp
or
inc
fbstp
push
xor
push
addr16
push
scas
or
test
sbb
rorl
enter
lahf
jnp
in
je
dec
pop
shll
bound
jb
inc
mov
fsts
fwait
mov
movsb
jmp
push
cmpsb
std
imul
mov
xor
popf
ja
std
jecxz
ja
and
jne
sbb
movsb
mov
push
mov
pop
call
mov
fs
pop
ds
pop
adc
sti
aad
stos
imul
add
mov
and
inc
lods
mov
xchg
push
inc
xchg
fwait
dec
sarl
jge
lods
jg
shll
jle
das
mov
cmp
fdivp
adc
xchg
push
xchg
pushf
fistl
scas
ret
inc
mov
rcr
out
sbb
push
inc
pop
imul
lods
sub
dec
and
xor
js
and
mov
pop
cmpb
xchg
cld
push
lods
insl
enter
dec
xor
mov
lods
daa
dec
push
aad
dec
fucomip
cmp
push
dec
insb
push
cmp
cs
push
iret
or
xor
mov
in
jne
fsin
imul
popa
push
cld
add
sbb
les
inc
cli
push
pusha
adc
cli
dec
pop
xchg
xor
jno
lods
out
in
je
pop
roll
mov
cs
sti
sbb
lock
nop
andl
bndldx
cmp
xchg
popf
pop
roll
jb
xchg
pop
pop
xchg
push
outsb
xchg
loope
aad
das
lret
std
inc
dec
dec
pop
mov
mov
push
iret
jns
int
pop
je
das
movsb
push
dec
faddl
inc
bound
inc
mov
dec
sbb
jge
add
xchg
mov
mov
mov
add
and
add
sbb
fsubrs
or
and
in
ljmp
push
mov
inc
iret
cwtl
jge
mov
push
adc
pop
mov
lods
out
inc
insb
ret
mov
lods
pop
adc
pop
adc
mov
ss
pop
sbb
stos
es
cli
mov
sti
or
xor
pop
jmp
cld
leave
movsb
xchg
push
aaa
mov
mov
sti
jmp
xlat
or
push
ret
cli
int
in
imul
inc
insl
in
push
xchg
jmp
adc
imul
xorb
fwait
or
xor
mov
in
sbb
mov
sbb
mov
data16
xlat
mov
and
jecxz
scas
or
imul
xchg
sub
dec
lret
adc
repz
scas
inc
and
gs
inc
pop
sub
add
mov
fisttps
fstl
lds
mov
mov
clc
jmp
sbb
xor
xor
inc
mov
pop
lods
or
push
mov
loopne
sub
cmp
rcll
jae
jne
pushf
mulb
jmp
mov
aaa
movsb
xchg
adc
pop
gs
test
dec
mov
cmc
sbb
xchg
insl
fmull
fwait
mov
jnp
mov
mov
sbb
add
je
mov
jnp
scas
in
pusha
cmp
mov
cmp
pop
fisubs
inc
outsb
adc
negl
mov
in
scas
lods
lret
push
xor
arpl
es
cli
and
push
aaa
leave
enter
lahf
stos
fidivrs
sti
mov
sbb
lds
xor
mov
cwtl
jl
lret
filds
dec
out
fmuls
mov
outsl
mov
adc
sahf
out
cmpsb
sahf
push
fisubrl
add
and
cmp
push
fstps
mov
push
mov
sbb
add
lcall
and
cmp
out
lods
dec
lea
mov
es
sbb
lret
xchg
movsw
adc
aaa
push
out
sbb
movsl
jbe
lods
stos
cmp
mov
in
mov
test
mov
mov
lahf
jmp
xchg
jl
add
and
daa
popa
xor
jmp
adc
inc
adc
pop
xor
pusha
inc
js
lahf
sbb
cmp
jne
pop
in
dec
fdiv
ds
push
inc
xchg
cmc
mul
aas
pop
jae
cmp
pop
cmp
inc
daa
or
or
lret
add
bound
fdivp
std
jg
cmpsb
and
xchg
pop
cltd
subb
jg
sub
sbbb
mov
push
fisubrl
mov
mov
inc
push
popf
jo
xchg
loope
xchg
in
jns
ja
and
pop
test
sub
fsubl
push
gs
cmpsb
jg
data16
push
mov
andb
jns
fmulp
cmpb
xor
scas
xor
pushf
sbb
mov
push
mov
lock
cmp
mov
add
jl
enter
push
xor
xor
cltd
inc
das
mov
mov
cmp
sub
pushf
pop
loop
pop
mov
and
loope
and
mov
sbb
shr
xchg
cli
inc
stos
leave
and
ret
js
lcall
xchg
xor
lret
jno
jae
repnz
xchg
add
popf
push
xor
mov
dec
lods
sahf
fldcw
loope
pop
xchg
xchg
imul
xcrypt-cbc
cmpsl
adc
cmp
ja
lods
push
dec
movl
mov
nop
pop
ds
xor
and
pop
ds
and
je
test
jne
adc
notb
rorl
das
pop
mov
sbb
fdiv
jbe
sbb
stos
dec
ds
sbb
fldt
lock
subl
icebp
ds
mov
mov
cmp
pop
inc
xor
or
fildl
fidivl
mov
add
enter
add
mov
pop
xchg
xor
dec
sub
add
shrb
js
sbb
push
adc
ficompl
cli
stc
inc
push
mov
loopne
imul
xor
gs
ret
out
adc
ret
jo
fnsave
lods
loope
cmpsl
push
xor
fsubrs
lock
inc
int
insl
cmp
ror
in
aaa
mov
mov
out
js
fists
das
and
pop
fiadds
mov
or
sub
cmpsl
inc
add
pop
lcall
adcb
cmp
loopne
push
stos
out
into
call
aaa
mov
rol
jmp
pop
cli
aas
add
jnp
bound
jns
dec
sbb
ret
enter
add
push
xchg
sub
mov
sub
mov
push
sbb
jae
fs
sub
sti
xchg
shrl
jp
pop
es
mov
sysexit
or
cld
lds
mov
mov
xchg
lock
dec
movsb
scas
je
xorl
mov
hlt
sub
lea
in
cs
test
ror
pop
aaa
cmpsb
jle
repnz
add
add
clc
xchg
or
adc
mov
or
es
into
addr16
insl
jg
sarb
imul
mov
xlat
ror
fildl
pop
cltd
addr16
push
std
dec
loop
pop
sub
cmc
jb
jl
divb
outsb
mov
movsl
xorl
dec
outsl
ja
imul
ret
scas
jecxz
mov
ret
inc
fmull
inc
idivl
imul
sbb
test
jb
mov
mov
mov
dec
dec
lock
cltd
sub
incb
jmp
out
mov
push
mov
push
sahf
and
add
xchg
push
ret
xor
orl
xchg
sub
loopne
or
sbbb
movsl
jb
adc
orl
inc
lcall
push
pop
adc
cmpsl
test
stos
das
mov
enter
rcl
jne
in
add
push
mov
xchg
cltd
stos
ss
add
push
push
jg
mov
js
inc
in
shll
mov
mov
je
pop
das
add
andb
xchg
adc
outsb
xchg
push
mov
daa
into
enter
push
mov
xchg
push
fmuls
pop
or
repz
adc
mov
je
mov
les
and
test
push
shl
mov
push
xchg
mov
repz
gs
fwait
mov
mov
movsb
mov
movsb
mov
into
addb
cmc
cltd
std
out
mov
mov
lock
xor
lods
xchg
decl
loope
dec
and
iret
call
ss
jnp
not
cmp
cmp
mov
jo
push
jns
lods
xchg
lds
movsl
jp
pop
test
repnz
addr16
scas
out
xchg
sti
sti
jmp
jae
bswap
cmp
std
adc
mov
mov
and
testl
xor
inc
ret
es
cmp
or
outsl
loopne
loope
shll
wbinvd
dec
push
mov
sub
lret
insb
data16
lret
adc
xor
push
mov
add
and
or
ss
cmp
repz
xor
aad
push
inc
std
popf
fs
or
push
fdivr
xchg
stos
into
aaa
xchg
shlb
xor
cmp
inc
push
jge
into
lcall
mov
push
enter
lods
outsl
in
pop
pop
and
in
jmp
pop
enter
popa
mov
aam
sbb
test
das
je,pn
mov
insl
fcoms
test
dec
int3
xchg
jecxz
daa
gs
jnp
mov
cmp
aaa
insw
mov
xorb
mov
add
xor
mov
jl
std
add
or
ljmp
xor
cmp
xlat
mov
pop
mov
sbb
adc
fwait
dec
loope
in
pop
xor
push
jge
lods
ljmp
adc
dec
push
cmp
aad
repz
mov
popa
dec
adc
sbb
cmpsl
push
sub
out
aaa
mov
sbb
lods
pop
ja
mov
mov
pushf
push
inc
pop
cmp
aam
lods
cs
fs
ret
and
inc
stc
push
cwtl
cld
jb
inc
xorb
jl
int
mov
dec
es
inc
jae
push
out
movsb
test
xchg
sti
stos
cmp
mov
hlt
inc
test
dec
fidivrl
push
andb
fimull
aad
mov
insb
sub
jmp
dec
movsl
out
add
mov
mov
inc
mov
ret
push
sbb
fdivl
inc
clc
dec
sbb
fidivrl
popa
ljmp
dec
sbb
push
daa
ror
jle
data16
popf
adc
jb
lock
cld
pop
push
aam
dec
cli
addr16
rorb
nop
mov
test
fmull
and
out
adc
or
test
push
fwait
xor
ret
mull
aam
jge
in
mov
ret
jae
shrb
imul
sbb
out
lock
push
aad
add
and
in
sub
cmp
loop
ret
push
xor
pop
mov
mov
mov
lock
pop
push
lret
inc
jo
jp
in
mov
aas
and
pop
pop
cmp
and
mov
jecxz
push
add
fcoms
inc
cmc
pop
leave
mov
jmp
pop
mov
shrl
cs
dec
js
cli
jge
fmuls
imul
xchg
div
cwtl
mov
jmp
out
imul
outsb
lahf
ljmp
sti
add
cltd
popa
jb
loop
addr16
icebp
cltd
push
daa
mov
lds
adc
or
jae
mov
cwtl
enter
iret
mov
les
sbbl
pop
sbb
lds
cmpb
mov
push
ret
faddl
xchg
jge
jno
mov
xor
sub
fcmovnb
mov
or
cmpsl
and
xchg
shl
fadds
stc
call
mov
push
lret
xchg
jbe
lock
popf
mov
rorb
xor
sbb
or
jecxz
mov
cmp
cmp
push
sahf
pop
mov
mov
cld
stos
es
fistl
pusha
jns
test
push
das
mov
lods
jl
inc
insb
aaa
xchg
ds
lret
add
cltd
mov
cmp
fildl
arpl
cmp
shl
adc
setns
sti
add
mov
imul
pop
ds
test
xchg
jnp
pop
mov
je
xchg
mov
sbb
mov
mov
ja
mov
gs
mov
out
pushw
call
add
jmp
out
xchg
xchg
jns
fidivs
cmp
insl
mov
xchg
popf
sbb
mov
fxam
aam
dec
cld
xor
jo
into
data16
aas
xor
jae
sbb
insl
jo
and
cltd
rcrb
dec
inc
cmp
insl
adc
je
add
sbb
mov
ret
jne
test
aaa
mov
push
xchg
pop
std
pop
xadd
inc
cld
sbb
pop
ja
mov
jle
push
cwtl
cli
ja
mov
xor
jnp
inc
mov
es
scas
repnz
dec
ret
dec
and
daa
jp
jo
xlat
test
sar
clc
sarl
add
sahf
dec
dec
testb
jge
inc
sbb
sti
bnd
mov
call
inc
bnd
into
inc
cmpsb
fiaddl
dec
dec
or
and
popf
in
xchg
lods
shrl
mov
mov
stos
lahf
xchg
repnz
inc
test
nop
ja
das
jecxz
jnp
daa
mov
jmp
int
insb
push
push
cmp
fs
mov
pop
mov
lret
repz
adc
pop
cmp
mov
or
mov
or
jne
push
or
test
movsb
sbb
cld
cltd
shll
xchg
insb
jge
popa
aas
pop
repz
out
ss
cwtl
pusha
subl
add
xchg
arpl
test
pop
fiadds
sahf
scas
into
ffree
pop
cmp
imul
or
adc
adc
iret
ss
push
int
bnd
mov
pop
cmp
jle
pop
mov
cltd
xchg
sub
aaa
add
xlat
or
and
insb
mov
mov
arpl
xchg
jno
sti
mov
inc
dec
sub
adc
sbb
push
or
mov
pop
pop
jl
xchg
cmp
int
xchg
dec
mov
mov
mov
clc
and
push
out
ficoms
imull
mov
jge
aad
in
sahf
sub
rclb
sub
inc
movsb
movsb
cltd
movsl
inc
test
pop
clc
and
add
int3
push
dec
jo
je
ss
mov
xor
xor
loopne
lret
shr
adc
testb
xor
or
pushf
std
popf
fistl
xchg
add
sbb
dec
jge
jmp
inc
or
pop
and
or
mov
cmc
rorl
ficoms
ffree
andb
mov
into
in
xlat
rorb
std
dec
daa
or
cld
lret
repz
cmp
adc
and
xchg
ss
push
pop
loopne
and
out
shlb
mov
push
in
inc
push
jno
mov
jle
mov
xchg
push
add
and
sub
push
fnsave
sbb
rorl
aad
hlt
mov
dec
mov
inc
in
mov
popf
ss
dec
xchg
sbb
mov
scas
mov
out
add
das
repnz
pop
data16
xchg
ret
jo
sarb
int3
jae
jecxz
arpl
and
test
pop
cmpsb
stc
std
push
mov
jg
xchg
or
mov
push
xchg
iret
sbb
scas
mov
fs
cmpsl
and
outsl
or
pop
pminub
and
lcall
imull
fwait
mov
test
cmp
push
shrl
xor
and
cmpsb
mov
js
inc
mov
arpl
ja
scas
fnstcw
out
lahf
aam
lcall
insb
mov
add
jae
cmpsl
xor
in
cmp
scas
ljmp
add
lret
cmp
mov
je
test
jb
into
dec
xchg
mov
rcrb
mov
adc
adc
iret
pop
iret
dec
mov
inc
pop
push
in
shlb
xchg
addr16
push
cmpsb
pop
insb
scas
or
pop
jae
sub
int
icebp
jb
xchg
mov
test
and
push
jg
mov
dec
sahf
mov
mov
pop
insl
pop
jmp
mov
ret
insb
shlb
and
in
repnz
push
sbb
divb
lcall
dec
pop
mov
repnz
push
repnz
mov
fwait
cmc
lret
fiaddl
jns
cwtl
pop
cmpsb
and
sub
dec
fwait
xor
jmp
outsb
pop
push
scas
outsb
or
test
in
sub
repnz
cld
test
jne
stc
add
inc
or
push
mov
mov
jo
or
and
or
movsb
pop
jg
lock
jo
jl
cmp
int3
sarb
stos
jge
mov
nop
push
cmp
das
test
push
add
das
clc
inc
ljmp
lods
push
pusha
push
push
lds
and
sub
fidivl
xor
scas
cmp
sub
or
push
into
mov
inc
push
jl
pusha
popf
add
and
shrl
sbb
jle
leave
mov
outsb
push
push
xor
pop
test
mov
push
sahf
xor
push
imul
aaa
scas
mov
out
aas
cld
mov
adc
enter
test
divl
add
or
xor
adc
and
and
iret
mov
ljmp
adc
fs
shlb
out
rcrl
out
loope
jb
fadd
ss
cmpsb
and
imul
aas
mov
fucom
xchg
clc
jg
aam
xor
std
movsl
cmp
es
outsl
sbb
cld
jg
and
mov
subb
int
push
les
xchg
inc
push
push
das
sbb
pop
cmc
sbb
push
sbb
repz
stos
sbb
jmp
cmp
std
adc
hlt
xor
iret
jecxz
pop
pmullw
xor
push
push
inc
adc
lods
mov
sbb
aaa
les
stos
inc
arpl
test
push
lods
adc
jae
into
fs
dec
gs
push
repz
pusha
je
push
out
cmp
push
pop
cmp
into
call
add
in
out
or
hlt
adc
in
adc
arpl
outsb
mov
int3
jecxz
mov
mov
dec
xor
notb
cmp
fisubl
inc
out
sub
jae
pop
loop
test
sub
jns
mov
fidivrl
addr16
pop
push
aaa
xor
loop
sti
mov
pop
cmc
xor
adcb
lcall
add
scas
and
cmpsl
push
ljmp
push
adc
scas
out
hlt
lds
leave
jb
das
mov
jle
push
cs
stos
call
mov
cli
jecxz
jl
dec
popf
push
mov
xor
mov
daa
xor
push
or
fists
data16
outsb
jnp
ss
xor
inc
ljmp
cmc
es
push
inc
mov
pusha
push
pusha
dec
pop
jmp
push
ret
sub
in
rcll
rclb
adc
or
xchg
dec
hlt
imul
xchg
inc
test
sub
jmp
and
push
das
push
sbb
pop
fcoml
sub
push
scas
in
push
fsts
arpl
cmp
leave
je,pn
push
jne
adc
push
pop
pop
das
leave
fwait
push
enter
jne
inc
push
fnstenv
add
dec
rcrl
popa
adc
xor
xlat
or
aad
clc
fists
cmp
notb
xor
ljmp
push
push
mov
mov
aad
outsb
jae
jae
lahf
adc
inc
push
fisttps
mov
fistpl
and
or
dec
fdivr
fsubrl
mov
data16
or
or
cmpsb
xchg
or
push
cs
into
stos
sbb
adc
mov
sbb
stc
mov
mov
cmpl
push
jecxz
sub
mov
test
unpcklps
jbe
push
dec
push
shlb
and
divb
lods
mov
jg
aas
inc
imul
adc
pushf
mov
pop
mov
or
js
mov
mov
test
push
xchg
or
lods
cwtl
sub
ror
rcl
push
in
push
enter
out
jae
push
imul
dec
cmpb
imul
das
loopne
mov
adc
nop
xchg
push
jecxz
inc
fs
es
cmpsb
test
bnd
adc
and
jg
sub
fisttpl
shll
jbe
add
cmp
sbb
sbb
pop
pop
pop
cmc
dec
adc
pop
pop
or
inc
mov
outsl
inc
ds
cmp
xchg
inc
lcall
xor
pop
pop
xor
out
mov
lret
jp
mov
shrl
incl
mov
mov
mov
adc
arpl
xchg
sbbl
in
cmp
dec
xchg
cltd
orl
movsl
out
scas
dec
adc
sbb
dec
xor
xor
add
into
sub
lret
test
pusha
pop
cmp
or
movsl
xor
sub
std
clc
sbb
xchg
movsl
pop
inc
test
rcl
sub
in
push
push
aad
pusha
pop
jbe
ret
push
mov
adc
pop
lcall
sub
dec
repnz
bound
xchg
mov
and
rolb
mov
xor
sbb
push
arpl
fstl
insl
adc
pop
mov
add
fstpt
aas
aam
sti
push
cltd
pop
jne
xchg
loopne
test
xor
pop
add
jl
dec
sahf
xchg
adc
dec
out
movsl
jae
pushl
lahf
sub
cli
inc
and
mov
inc
lods
pop
xchg
or
lahf
arpl
pop
dec
sub
or
push
dec
fs
lcall
imul
enter
ret
jle
cmp
inc
in
scas
jbe
adc
pop
push
mov
mov
aas
cmpsl
xchg
testl
pop
lret
adc
jmp
xchg
mov
cs
mov
ljmp
adc
outsb
or
orl
dec
adc
adc
std
movsl
cltd
les
and
mov
jge
dec
in
jne
pop
jg
sub
push
ret
jbe
mov
int3
adc
or
sarb
xchg
jg
das
loopne
jmp
sarl
add
clc
into
clc
cmp
inc
sub
mov
mov
mov
sbb
cmc
incl
lods
xchg
sbb
cmp
push
cmp
mov
cmp
in
xor
add
fsubs
cmp
push
repz
inc
xchg
xchg
outsl
movsl
stos
mov
or
dec
sub
cmp
push
cmp
pop
les
or
xchg
dec
adc
cmp
ret
cwtl
insb
mov
pop
sub
movsb
pusha
mov
sbb
add
pop
dec
mov
adc
xor
sbb
cmpb
xor
loopne
pop
mov
frstor
sub
xchg
mov
in
add
xchg
push
sbb
sbb
sub
imul
ds
adc
jmp
lret
mov
or
das
xorl
out
xorb
or
sub
adc
dec
popf
mov
faddl
push
mov
fistl
xchg
shlb
leave
sbb
sub
sbb
mov
push
clc
sahf
jg
bound
push
aas
inc
std
fstps
sub
pop
lret
loope
xor
pop
xchg
xchg
mov
or
lods
and
and
gs
xor
mov
jmp
clc
xchg
test
hlt
scas
xchg
jne
pushf
pop
fisubrs
adc
inc
or
push
mov
xor
out
push
outsl
sbbl
insb
lret
aaa
mov
sbb
das
adc
inc
mov
or
int3
push
xchg
cli
imul
dec
cmp
xchg
inc
mov
mov
dec
mov
ret
mov
pop
jno
adc
insb
inc
fnstenv
stos
or
xchg
jmp
sbb
cmpsl
loop
pushl
negl
rcrb
xor
xchg
adc
push
js
and
xchg
fistps
inc
sti
scas
xor
sbb
subb
pusha
mov
mov
in
mov
in
or
pop
out
jg
or
sub
stc
adc
iret
cmc
cmp
inc
mov
mov
pop
stos
sbbb
fdivrl
adc
sub
and
sub
lret
cli
shrl
push
jge
iret
popa
dec
jne
adc
mov
aaa
pop
fdivrs
dec
lea
out
popf
adc
mulb
divb
jo
test
xor
hlt
cs
repz
cmc
mov
inc
inc
and
cmpb
lods
popa
sqrtps
xcrypt-cbc
cmpsl
adc
bound
adc
test
rol
dec
in
inc
call
imul
sub
pop
addr16
cmp
icebp
jle
and
xchg
lea
cmp
std
jnp
add
cwtl
sub
inc
cmc
outsb
adc
dec
add
mov
xor
andl
inc
xchg
imul
mov
dec
sarl
inc
lock
mov
mov
mov
pop
adc
sub
add
cld
push
ret
das
fcompl
push
pop
clc
daa
fnstcw
dec
leave
xor
fistl
popf
sub
xlat
xchg
loop
mov
adc
nop
pop
xchg
sbb
xorb
xor
outsl
scas
scas
jbe
jg
xor
cmp
lret
dec
stos
mov
xchg
mov
xchg
fsubr
shl
pusha
sbb
loope
aaa
inc
cwtl
imul
jmp
pop
mov
int
xchg
imul
testb
mov
add
repnz
call
mov
ja
sub
push
loopne
sbb
fsubs
dec
jae
jnp
jp
xchg
andl
fwait
js
xchg
inc
mov
sbb
xchg
xor
or
mov
lods
mov
push
stc
or
ljmp
arpl
xlat
mov
enter
fwait
imul
icebp
dec
sbb
mov
les
mov
rep
les
dec
iret
in
lods
fmull
in
call
push
sub
xchg
aad
in
sti
icebp
ja
cmp
jbe
prefetchnta
xchg
mov
leave
xor
mov
test
fidivrl
mov
fs
out
das
outsb
jg
fsubl
aam
and
int3
jecxz
dec
nopl
std
sbb
test
pop
ss
mov
and
les
movsb
cmp
loopne
push
aas
test
das
out
adc
aam
pushf
jge
call
mov
movsb
popa
pop
mov
pop
xor
lods
mov
ret
out
mov
cmovno
hlt
or
sub
jbe
and
daa
je
push
lahf
aas
add
mov
sub
mov
push
popa
lcall
insl
push
and
push
imulw
gs
and
push
jl
loopw
mov
stos
cwtl
pop
cltd
mov
add
imul
and
into
add
cwtl
lahf
cmp
pop
rorb
add
mov
mov
cltd
add
fldenv
cmp
add
insb
leave
insl
mov
mov
insl
adc
jo
movsb
mov
outsl
sbb
jne
sarb
cs
jg
pop
arpl
lret
js
xor
ja
fs
frstor
ficomps
cmp
aam
inc
mov
bound
dec
mov
inc
loope
cwtl
lods
cmpl
inc
in
notb
orl
insb
ja
cmp
mov
pop
rorl
mov
imul
outsb
in
cs
or
mov
sbb
shrl
mov
and
arpl
adc
xchg
add
inc
jae
fistl
lret
mov
mov
push
clc
add
jecxz
jne
add
adc
xor
test
testl
jp
cmp
cmp
cmp
cmc
push
lahf
movl
jecxz
mov
xchg
rcll
aad
push
xor
xchg
mov
pop
lahf
add
xchg
cmp
cld
jp
test
cmp
sbb
pushf
sbb
sub
mov
push
dec
pop
mov
inc
mov
sbb
xchg
dec
data16
scas
jp
mov
imul
rep
sub
mov
movsb
sub
push
xchg
mov
xchg
js
repz
xlat
lahf
cmp
scas
xchg
and
scas
sar
pop
inc
or
jmp
pop
sbb
sahf
xchg
cmp
ja
repnz
je
adcl
and
jb
xchg
cmp
jecxz
ficoms
mov
psubq
push
sub
imul
add
ljmp
mov
cwtl
xlat
adc
dec
leave
xor
add
out
fst
push
les
into
xchg
lret
push
outsl
lods
ret
sti
imul
or
pop
pop
dec
cmpsb
pop
lods
jecxz
push
push
outsl
xor
leave
xor
pop
xor
push
dec
cli
rcrb
sbb
fistpll
and
les
outsb
xchg
push
cmp
ss
inc
test
sub
inc
outsl
arpl
ljmp
int
fildll
repz
out
outsl
pushf
cmp
push
or
test
imulb
xchg
jnp
imul
mov
inc
insb
in
loopne
dec
sbb
mov
in
sbb
jle
orb
call
sahf
or
xor
insb
aad
jle
jb
roll
das
push
sbb
xor
std
sbb
xorl
xor
negb
dec
xchg
imul
adc
arpl
into
jno
jns
mov
ret
push
dec
pop
out
jecxz
fwait
pop
outsb
mov
cs
iret
mov
aad
out
loopne
inc
sub
test
sbb
push
xlat
lods
mov
sub
data16
pop
in
stc
cmc
jb
std
test
mov
or
andb
fwait
pop
xor
and
cwtl
ss
inc
jae
insl
xchg
and
mov
dec
sti
sbb
xor
in
outsl
js
movsb
jne
mov
mov
mov
pop
subb
adc
xor
mov
push
int3
mov
mov
fmuls
imul
cmp
mov
sbb
jno
adc
mov
inc
roll
subb
dec
or
mov
push
fmuls
mov
inc
lret
or
hlt
xchg
es
cli
fwait
mov
stos
fistpl
pop
loop
lret
rcrb
paddq
call
pop
mov
jns
mov
dec
jnp
and
fwait
push
lret
sub
or
xor
adc
loop
or
jno
outsl
out
out
inc
into
shr
mov
cmpsb
adc
jl
cmp
dec
lret
test
or
pop
shl
aaa
push
sbb
xchg
mov
es
aaa
add
outsl
stos
int3
jb
cmpsb
lods
dec
das
or
sub
sti
jle
mov
nop
jns
jb
andb
mov
and
int
add
and
jg
scas
jge
mov
scas
xchg
sti
mov
add
lea
pop
data16
lahf
sub
shrl
xor
add
aam
sub
divb
lret
outsl
adc
jge
pop
dec
test
out
ss
inc
dec
scas
mov
arpl
jbe
stos
popa
outsb
add
push
inc
mov
sbb
cwtl
cmpsl
pop
jbe
jae
add
jmp
push
or
mov
and
sti
out
pop
mov
add
push
cli
in
lods
cwtl
movsl
xchg
and
and
sub
scas
ljmp
mov
cwtl
loope
push
cmp
fwait
pop
add
or
lret
lock
fwait
push
cli
bound
aad
pop
mov
fisttpl
sbb
lods
cmp
mov
out
xor
cs
push
xor
inc
add
ss
ljmp
jbe
fistps
sbb
mov
imul
jg
xor
and
push
inc
scas
iret
enter
out
mov
fs
shr
xchg
lock
dec
clc
dec
cmp
jle
xchg
bound
in
jb
pop
cmp
pop
dec
push
jmp
xor
pop
adc
and
jo
sbb
repz
fbld
lock
cmp
jo
fistpl
in
mov
mov
pop
int
cmpsl
nop
inc
ja
hlt
in
fisubrl
add
in
or
dec
xchg
xor
repz
dec
stos
sub
push
call
mov
ror
pusha
xor
mov
rorl
roll
icebp
stc
xorb
mov
in
cmpsl
or
dec
notl
mov
ret
pop
mov
imul
aad
jo
dec
cs
pop
imul
ds
xor
into
pop
sub
xor
sub
mov
aaa
test
xchg
mov
in
fisubs
push
stos
pop
jp
out
pop
sti
cs
push
outsb
imul
test
in
inc
mov
out
aas
dec
je
out
mov
push
lret
pop
sahf
inc
mov
jp
out
xchg
push
lret
iret
pop
dec
sbb
fs
roll
fistps
lcall
jmp
jns
ret
int3
call
and
test
xor
imull
ja
xlat
add
insl
popf
or
dec
cmpsb
popa
mov
sbb
repz
jnp
and
jecxz
movsb
sub
std
out
xor
ret
xchg
jb
insb
rorl
ja
loop
test
xchg
add
inc
push
cmp
jne
les
ja
xor
inc
pop
mov
xchg
sti
push
sub
push
cmp
push
xlat
ja
inc
mov
movsb
inc
jo
js
cmpsl
sub
cltd
add
pop
or
arpl
jbe
outsl
mov
repz
sub
dec
mov
icebp
pusha
ja
push
xchg
push
sbb
cmp
int
icebp
push
movsb
enter
sub
iret
mov
push
jecxz
push
cmp
repz
outsl
fdiv
movsb
rclb
scas
lods
cmp
add
pop
addl
pop
mov
mov
xor
gs
int
dec
pop
cmp
adc
les
sbb
dec
sbb
adc
jbe
xchg
mov
and
test
in
fsubrs
popf
pop
or
lds
mov
jb
les
orb
mov
ficomps
or
scas
inc
ror
repnz
arpl
or
imul
scas
cli
push
xchg
dec
fs
mov
sub
and
dec
jp
testb
mov
cmc
mov
call
xor
or
cmp
popa
xor
data16
jne
movsb
ret
les
inc
mov
and
stc
push
dec
or
cltd
jg
sbb
jmp
mov
std
sbb
adc
les
lds
cmp
and
add
popf
mov
push
cmp
xlat
insl
repnz
adc
push
outsb
mov
xchg
lds
cmp
imul
test
das
scas
imul
imul
mov
jg
gs
xchg
pavgw
in
mov
dec
jne
scas
test
fcomps
or
movsl
jg
jne
les
lret
out
xchg
inc
xor
mov
jbe
nop
xor
insb
push
pop
push
add
pop
ret
ss
mov
fcoms
mov
cld
test
sbb
jo
adc
mov
dec
inc
mov
pop
cmp
fs
lock
subb
and
xchg
fwait
mov
or
outsl
scas
or
and
and
data16
push
inc
mov
and
imul
movsb
movsl
pop
lahf
out
bnd
fmuls
push
pop
fcmovu
mov
jnp
pop
or
mov
cmp
sbb
int3
subl
jle
sahf
adc
or
out
push
lds
jno
jnp
jnp
in
inc
aaa
mov
mov
or
adc
pop
add
or
pop
xor
add
nop
mov
lea
push
into
mov
push
and
xchg
popf
mov
jmp
push
shrb
fisttpl
dec
cmp
adc
mov
imul
lock
fiadds
pusha
push
jge
sub
fistpll
or
dec
movsb
mov
push
xchg
or
add
stc
jne
cmp
icebp
psadbw
cmp
mov
mov
insb
pop
test
hlt
scas
outsl
mov
mov
xchg
push
lcall
test
xchg
dec
movsb
dec
add
es
pop
cwtl
call
mov
test
mov
cwtl
fcmovnu
std
jns
loop
shl
int
out
data16
insb
aam
inc
scas
cltd
data16
inc
cld
call
xchg
xchg
js
stos
ljmp
sar
mov
leave
repnz
divb
jnp
pusha
add
fstps
xlat
ja
daa
mov
lret
fistpl
xchg
in
mov
sahf
add
xchg
es
jge
jb
scas
cmp
adc
imul
and
xor
jecxz
pop
mov
xchg
popf
push
jmp
popa
cld
jnp
cmc
and
inc
xchg
push
pop
or
out
or
xchg
mov
and
ds
call
and
scas
sbb
xchg
sbb
cwtl
aad
clc
inc
cmp
push
mov
dec
idivl
ret
push
das
mov
and
dec
sub
xor
pop
dec
sbb
mov
push
pop
mov
sti
jge
loope
imul
mov
orl
dec
in
je
xchg
cmp
mov
mov
test
dec
mov
stos
mov
stos
mov
popa
xchg
lret
xchg
add
add
pop
pop
repz
mov
add
jae
adc
mov
iret
cmc
fwait
pop
sub
outsb
daa
out
cmp
mov
jg
jno
fnstcw
mov
xchg
cmp
lock
hlt
add
jbe
ljmp
mov
cmp
pop
aad
jo
push
mov
popa
lds
lock
jg
mov
ss
xchg
pop
xchg
jns
xchg
sub
dec
mov
mov
cmp
cmp
in
icebp
inc
neg
xchg
rorb
push
fwait
mov
adc
ret
add
into
std
and
mov
add
divl
fimull
in
push
sbb
arpl
inc
sbb
adc
xor
push
and
test
js
popf
adc
jb
inc
ss
rcr
fwait
mov
add
sbbb
stc
cmp
sbb
mov
inc
jns
xchg
addr16
loopne
sub
cwtl
xchg
pop
or
js
pop
dec
jo
mov
fsubs
test
test
sbb
fwait
dec
push
adc
sti
roll
test
mov
stos
cmpsb
jae
out
jp
sub
sub
or
mov
outsl
div
add
out
pop
add
out
push
xlat
push
in
bound
xchg
dec
xor
mov
test
push
lahf
imul
push
dec
addr16
add
push
jmp
inc
in
jge
sbb
cmp
loop
or
mov
sar
pop
nop
insb
inc
je
pop
out
cld
pusha
or
es
dec
mov
jmp
imul
imul
jmp
sbb
dec
inc
lods
jo
and
jle
sahf
scas
jmp
xor
add
cmp
outsb
in
ljmp
sub
mov
sbb
mov
push
pop
xor
iret
jae
sbb
cmp
movsl
notl
sub
inc
daa
aas
div
cs
loopne
popf
dec
push
jne
and
test
in
adc
in
xchg
pop
mov
mov
dec
adc
sbb
xlat
sbb
ljmp
push
add
mov
andb
loope
or
in
pop
pop
fistpl
dec
loope
push
scas
add
jb
sbb
sbb
push
pop
rcrb
inc
xchg
mov
ljmp
mov
and
je
rclb
call
jns
pop
mov
test
sub
xor
xorb
imul
ja
cmpsl
and
or
inc
sbb
mov
dec
sbb
sahf
js
leave
mov
je
mov
pop
pop
inc
jo
push
sub
test
push
lcall
inc
or
repnz
add
push
jae
xorb
lret
ret
int
inc
loop
loope
pushf
in
push
jnp
repz
lods
imul
or
stos
add
sub
adc
scas
enter
xor
in
incl
push
out
scas
call
jmp
pop
cmc
add
mov
mov
aaa
lcall
sbb
push
xor
out
lahf
fdivs
ret
inc
movsl
push
inc
repz
nop
sbb
dec
loop
cmp
orb
icebp
dec
jg
mov
xor
mov
test
imul
push
pop
and
jg
scas
inc
or
mov
sbb
dec
imul
imul
dec
sbb
mov
push
cmp
arpl
clc
int3
loop
cld
push
lret
pop
rclb
inc
shrl
push
xchg
lahf
stc
dec
jbe
test
jle
jno
loope
rclb
ss
in
jle
mov
jnp
xchg
in
imul
out
outsl
xchg
shll
jge
fistpll
popa
mov
sarb
sbb
sub
addl
mov
lds
in
mov
xor
call
lds
dec
inc
cmp
jbe
mov
out
inc
ror
xchg
dec
insb
pop
jo
incb
out
sbb
push
xchg
or
arpl
jno
adcl
jb
jnp
and
or
mov
push
pop
dec
sub
shlb
lods
scas
pop
inc
add
jb
cmpsb
fiadds
cs
mov
lods
mov
scas
cmc
jae
aad
insb
ficoml
push
mov
jle
movzbl
inc
pop
inc
inc
mov
mov
rcrb
or
leave
inc
test
scas
cwtl
in
lret
mov
xor
sub
mov
mov
pop
add
sub
cmp
pop
jg
add
in
lea
pop
scas
mov
push
and
and
mov
test
mov
popf
aaa
popa
dec
dec
mov
add
jb
dec
nop
cs
sbbl
jl
aad
cmc
insb
jmp
mov
hlt
jg
ds
les
adc
cmc
or
adc
shll
or
or
fidivrs
cmp
pop
mov
outsl
scas
rcrb
dec
and
cltd
mov
mov
lock
repz
xchg
lds
push
cmp
mov
push
aad
cmpsl
mov
push
mov
out
insb
dec
add
dec
cli
mov
xchg
test
mov
adc
or
jmp
rcll
in
mov
and
andl
lds
aad
pop
inc
inc
shll
inc
sbbl
iret
or
push
dec
scas
mov
xor
jno
stc
into
add
enter
or
mov
mov
cli
and
imul
cwtl
mov
mov
and
lgs
xlat
sub
int3
jno
subl
cmc
iret
jno
shll
cmpsl
add
push
xchg
cmpsb
rorl
mov
pop
pop
fisttpl
orl
cld
mov
mov
sbb
in
lcall
es
icebp
loop
sub
inc
and
bswap
mov
ret
pop
je
xor
test
repz
subb
xor
filds
inc
jns
into
pusha
into
popa
pop
gs
lds
jnp
mov
dec
sub
inc
arpl
push
or
jge
inc
push
ja
popl
xor
add
test
inc
mov
xor
mov
cmp
call
jmp
in
sbb
jmp
scas
negb
testb
pusha
into
push
in
stos
hlt
xor
push
add
dec
es
mov
adc
imull
push
push
sub
stc
mov
mov
or
pop
push
mov
js
int3
sbb
aaa
lahf
movsb
in
or
jmp
and
pushf
xchg
mov
adc
mov
lods
mov
jae
sarl
mov
xor
dec
cmp
pop
outsb
or
dec
roll
adcb
mov
loop
rcrb
dec
iret
outsl
out
xor
std
das
mov
sbb
inc
pop
lahf
add
mov
fxtract
loop
cmpsl
push
inc
loope
jbe
rorb
push
jb
mov
xchg
or
mov
inc
and
mov
xchg
imul
push
mov
adc
mov
adc
mov
cwtl
dec
adc
movsl
jecxz
popf
cs
fiadds
add
imul
sub
pop
push
jp
int
mov
or
sbb
lret
jg
inc
shl
mov
sbbb
hlt
lret
out
and
dec
in
pop
popa
jns
psrlw
ficoms
xchg
test
out
sbb
hlt
jb
xchg
mov
sbb
add
jns
lock
mov
push
aad
std
dec
pop
cmp
movsl
mov
int
sbb
add
int
inc
mov
inc
adc
dec
test
arpl
sbb
push
stc
pushf
aas
or
pop
add
xor
insl
jp
pop
pop
adc
mov
popf
es
fs
jno
cwtl
adc
lret
or
mov
daa
dec
pop
fwait
xchg
in
dec
and
inc
add
repnz
xor
lds
or
dec
push
jmp
in
gs
jp
inc
or
lods
mov
pop
call
sub
movb
lahf
adc
dec
sbb
mov
mov
popf
cmp
aas
sbb
cmp
roll
mov
and
lods
pop
mov
sub
cmp
sbbl
shl
adc
cmp
cmc
lods
aaa
jbe
das
and
lds
popa
mov
inc
nop
add
add
pushf
jl
out
dec
xor
push
lahf
shll
jno
add
mov
ret
pop
sti
xchg
out
sub
dec
push
xchg
adc
data16
andb
xor
jnp
popf
mov
xchg
mov
dec
cmpsl
test
in
xor
dec
lock
cwtl
push
push
div
sub
jo
inc
jns
adc
and
sub
jge
mov
xchg
lret
bound
cmp
pop
xor
jnp
xchg
loop
movsb
mov
or
mov
mov
in
push
push
out
aad
xchg
test
in
clc
sti
enter
test
xchg
imul
push
leave
dec
or
jne
in
movaps
ret
mov
jae
fs
and
mov
mov
or
ficomps
push
mov
sub
popa
pusha
jae
dec
jle
dec
mov
jge
inc
movsb
in
out
xchg
mov
sub
pop
adc
scas
jb
cld
adc
inc
subb
mov
shll
vmovups
xor
jbe
cs
xor
cmp
flds
lea
pop
xor
iret
je
mov
dec
mov
xchg
dec
movsb
fisttpl
push
add
sub
test
xor
arpl
aad
sar
mov
jp
lea
cmp
out
sahf
mov
lret
sub
mov
xlat
cmp
adc
dec
cmpsb
test
ss
add
stos
mov
in
or
lods
andb
lahf
shrl
jae
sahf
xchg
and
hlt
inc
cmp
or
mov
sbb
gs
xor
cmp
popl
push
sbb
je
inc
imul
insb
enter
jbe
loop
xchg
jge
and
xchg
nop
sbb
mov
addb
mov
mov
push
cmp
pop
loop
adc
lcall
jge
push
sbb
push
in
xchg
sti
nop
inc
cmp
shll
jno
cmpsb
cltd
sub
loopne
stos
imul
ja
pop
mov
adc
in
aas
adc
in
ds
xchg
pop
push
sub
pop
and
imul
test
sbb
jmp
sbb
fmull
insb
scas
lock
xor
mov
jg
lret
adc
jae
test
mov
push
mov
sub
sbb
push
cmp
js
fidivrs
shlb
int3
mov
imul
cmp
jae
out
mov
fucom
test
pop
push
pop
movsb
jb
incl
xorb
mov
push
insl
dec
pop
pop
jge
stc
ficomps
mov
and
xchg
jnp
enter
jle
push
filds
ds
pop
loop
xor
stos
xrelease
roll
cmp
add
ja
iret
mov
mov
or
int
dec
sbb
cmp
push
lcall
sub
or
mov
testb
movsl
inc
jno
sub
mov
and
sti
sbb
adc
adc
mov
lea
mov
ja
lock
inc
jecxz
fcoml
addl
imul
mov
inc
mov
fisubs
adc
out
fwait
mov
sbb
xchg
scas
icebp
push
test
mov
cmp
and
adc
pop
lock
shll
ljmp
lret
nop
sub
rol
or
fistpll
xor
jle
cmp
mov
rcll
aam
clc
sahf
xchg
lods
sub
rcr
xor
jae
popf
push
cltd
xor
and
add
inc
shlb
sahf
loope
cmp
mov
xchg
lea
fsts
aam
jne
mov
or
hlt
popf
jae
mov
icebp
xor
jb
and
add
das
lret
cmc
push
mov
push
out
test
fdivrs
cwtl
inc
cmpb
idivb
push
icebp
aad
stos
aam
sbb
xor
and
cmc
rcrb
inc
sysenter
dec
dec
cs
adc
cmp
sbb
in
dec
bnd
rcrb
xchg
sbb
mov
cmpsl
stos
adc
mov
ret
xor
mov
leave
push
xorl
leave
popa
imul
xchg
cmpsb
fs
out
std
repnz
add
add
sub
xor
fadd
cmpsw
cmp
dec
jp
fs
loope
pop
add
sbb
mov
jno
test
adcl
pop
lahf
sub
pop
mov
fsubrs
cmp
inc
push
aas
or
aam
and
std
pop
imulb
xor
inc
jecxz
std
xchg
rcrl
mov
aas
out
jns
and
repnz
jmp
das
pop
pop
xorl
xor
fsub
popa
sbb
xchg
fcoms
push
sahf
mov
dec
or
in
pushf
push
push
dec
enter
negb
xor
loope
sub
movsb
emms
out
shlb
jle
mov
hlt
or
inc
rcrl
js
out
and
mov
ljmp
push
rolb
addr16
loope
and
jmp
mov
leave
cmp
mov
sbb
rcrb
xor
hlt
fnstenv
cmp
mov
imul
leave
push
aaa
fidivs
pushf
or
adcl
addr16
adc
cmp
std
pop
ret
cmpsl
push
sub
push
ljmp
and
dec
ret
arpl
arpl
xchg
cli
push
push
mov
xchg
int
inc
mov
lcall
pop
mov
cmp
pop
sti
or
pop
lcall
shll
lret
in
js
inc
sbb
or
xchg
adc
cmp
pop
dec
in
xchg
stos
xchg
jle
test
arpl
pop
cwtl
call
mov
mov
fs
sub
nop
cwtl
insb
repnz
and
fxch
or
shrb
filds
nop
push
nop
push
pushf
xor
jmp
push
mov
popf
sub
int3
mov
cli
in
iret
pop
mov
pop
mov
lods
das
lahf
jp
pop
pop
push
insb
nop
sbb
pop
cltd
or
repnz
dec
push
dec
pop
or
out
push
sub
fsubs
xchg
lock
lret
fdivs
and
mov
sub
in
push
mov
dec
fists
ds
sbb
cmp
rcr
fnsave
jle
sbb
pop
sti
jge
mov
mov
mov
lahf
fs
mov
sahf
mov
ljmp
lcall
cmpb
jecxz
mov
lcall
fs
rcrb
push
xor
lods
jbe
dec
into
xchg
addr16
ret
sub
sti
adc
outsl
inc
xlat
adc
fwait
iret
test
push
test
shlb
xor
and
jecxz
call
jb
insb
xor
mov
add
jo
lea
cltd
pop
popf
ret
push
js
sbb
xchg
lock
fwait
shl
push
mov
pop
out
and
jle
pop
dec
sti
sti
aad
ss
adc
pop
out
out
in
xlat
adc
adc
sahf
cltd
popf
nop
movsl
cmp
call
sbb
shrl
in
inc
pop
in
cwtl
pop
adc
int
test
mov
and
sbb
adc
mov
mov
in
jbe
inc
test
out
ds
inc
les
insl
sti
inc
sti
jl
pop
lods
sbbl
jne
mov
nop
aas
test
je
pop
sbb
out
inc
nop
sbb
rorb
int
cltd
mov
xchg
sub
jmp
mov
lea
add
test
lret
fnsave
stos
jb
aad
sbb
adc
mov
jmp
xchg
adc
call
xor
push
xchg
out
rcl
sub
jle
mov
pop
stos
out
lods
inc
dec
in
aad
xchg
dec
testb
sub
adc
fwait
cmp
jl
test
mov
xchg
inc
push
scas
pop
dec
jbe
fistpll
inc
sub
push
pop
mov
xor
xchg
jmp
popa
out
jl
les
inc
int
inc
xor
ror
sahf
adc
out
cmp
rcr
insb
cmp
pop
inc
int
lods
sub
pushf
shr
sub
fsubrs
movl
pop
cmpsb
out
cwtl
and
mov
adc
push
ror
pop
bound
ja
jae
lods
dec
sub
jge
outsb
aam
or
lods
sbb
call
pop
pop
mov
sbb
xchg
adc
dec
cmp
incb
dec
std
jns
pop
cwtl
inc
xchg
mov
push
mov
int3
pop
push
mov
xchg
xor
arpl
ficoms
dec
mov
stos
iret
adc
mov
sub
add
jns
xchg
neg
test
shrl
xor
cli
mov
cmpsl
mov
nop
dec
mov
sbb
cmpsb
cltd
gs
test
dec
aad
lret
cmp
sub
or
sub
xor
not
dec
xor
xlat
dec
cmp
adc
fs
fsubl
pop
inc
shll
test
out
xor
flds
lods
data16
fwait
mov
cwtl
lahf
aaa
je
inc
lock
mov
nop
pop
movsl
xchg
jnp
repnz
xlat
cmpsb
icebp
sub
bound
ljmp
rcr
popa
jo
adc
mov
pop
or
xchg
ret
cmpsb
js
xchg
test
in
adc
jb
aad
adc
stos
sub
jnp
xchg
mov
fs
inc
xchg
je
lret
ret
add
push
lret
xor
or
fs
sub
fsubs
jecxz
push
push
mov
and
push
xor
mov
test
xchg
inc
sub
les
out
jg
in
mov
jmp
bound
fadds
in
mov
push
fs
sbbb
mov
loopne
and
jg
sub
dec
mov
inc
xor
sarb
gs
jne
bnd
sub
fstpl
xchg
jnp
add
iret
adc
stos
sub
dec
psrlq
jle
adc
jns
mov
or
scas
negb
popl
imul
jmp
std
outsb
outsb
mov
sbb
in
and
js
imull
push
adc
lds
repnz
mov
fsubs
jbe
or
cli
fdiv
push
incb
lds
out
jmp
push
out
push
out
shl
push
hlt
dec
mov
mov
xchg
std
xor
lods
push
insl
and
popf
mov
ljmp
xor
sub
adc
cltd
or
add
pop
add
scas
mov
xchg
dec
pop
sub
jecxz
xchg
push
incb
adc
leave
mov
push
and
jl
call
movsl
dec
fstpt
push
mov
pop
inc
shl
lahf
xor
lret
and
push
lahf
sbb
add
jmp
push
mov
jmp
popa
add
dec
lods
loopne
std
xchg
pushf
decl
gs
jbe
subl
cmp
fbld
sub
ret
scas
scas
ffree
pop
sahf
adc
jne
jmp
fimuls
icebp
rcrb
sbb
les
notb
fwait
or
in
outsb
icebp
nop
xchg
add
or
jo
cmpl
add
ja
in
addr16
lea
mov
test
fdivp
and
fnsave
push
sub
out
xor
mov
loope
cld
inc
jne
pop
sbb
jmp
pop
push
mov
cmp
inc
mov
shll
add
adc
inc
xchg
jecxz
inc
mov
aaa
addr16
nopl
jne
data16
mov
mov
sbb
pop
push
pusha
cmp
scas
arpl
push
daa
mov
mov
lret
scas
jecxz
fs
stos
xchg
cltd
negb
push
aas
xchg
enter
call
cmp
mov
sbb
cmc
fiadds
dec
mov
push
pop
mov
xchg
adcl
pop
hlt
in
in
and
jge
sbb
mov
outsl
test
and
leave
dec
adc
rcl
cmpsl
mov
pop
inc
mov
jae
or
sub
fdivrl
ljmp
pop
dec
xor
mov
xor
jnp
ljmp
or
mov
ds
inc
mov
es
sarl
cmp
pop
ret
or
cli
xlat
mov
push
mov
cmpsb
pop
push
aad
jge
adc
dec
test
pushf
xchg
cli
insl
popa
dec
mov
push
mov
fisubrs
movsl
aad
cs
cmp
mov
movsl
mov
scas
inc
imul
cmp
std
stos
sbb
xlat
mov
jnp
dec
stc
insl
xorl
movl
sub
test
mov
xchg
sbb
lods
daa
jp
jle
rcll
es
mov
iret
inc
les
inc
in
aaa
mov
ret
imull
cmp
cmp
enter
sbb
cmp
jp
push
add
ss
add
addl
cmp
sub
sbb
scas
insl
mov
mov
jp
in
outsb
sub
mov
add
mov
dec
dec
in
jge
xchg
sahf
xor
adc
lds
nop
movsl
push
inc
mov
or
dec
repnz
jno
cmp
shll
cli
in
ret
mov
mov
test
addr16
icebp
pop
lret
in
sahf
leave
jb
leave
adc
mov
sub
fs
sub
fs
test
sub
push
arpl
filds
outsb
dec
push
or
push
fimull
sub
fucom
in
mov
fcomp
cmpb
jle
adc
fwait
mov
push
mov
mov
ljmp
pushf
lahf
fwait
test
shlb
and
and
xor
adc
rorb
arpl
sub
ror
push
dec
mov
stos
shll
nop
aam
jge
add
or
dec
jmp
inc
outsl
orl
fnsave
push
into
add
sub
mov
mov
sbb
mov
mov
xor
pop
out
add
cltd
mov
mov
outsb
jmp
outsb
je
mov
cltd
dec
loop
xor
xchg
aad
mov
push
or
sub
lret
std
out
lods
pushf
test
mov
divl
pop
out
and
xchg
xor
arpl
test
xchg
pop
addb
iret
adc
hlt
xlat
cmp
dec
push
xchg
test
lods
mov
jecxz
call
mov
fisttpl
lret
outsb
ret
cmp
mov
shll
pop
in
fs
ss
lret
or
sbb
in
insb
mov
ss
dec
inc
aas
iret
xchg
xchg
aaa
fisttpll
add
fucom
or
sarb
fistpl
mov
popl
jl
or
dec
test
inc
inc
xchg
and
loopne
lock
sub
dec
mov
js
add
addr16
outsb
rcr
push
jbe
inc
mov
shll
dec
inc
aaa
inc
cld
cmp
mov
push
rorl
dec
pop
dec
inc
jl
sub
movsb
fwait
inc
add
scas
fdivrs
and
sub
fs
int
xor
push
mov
add
stos
jns
jmp
add
xchg
stc
mov
jmp
push
fs
dec
mov
mov
addr16
adc
fcomip
test
xchg
mov
dec
mov
push
outsb
data16
xchg
mov
imulb
and
hlt
push
iret
sbb
loopne
subb
jnp
jnp
pop
jb
and
adc
insb
imull
jns
fisubrl
loopne
cli
adc
cmp
rcrb
dec
sub
or
imul
xor
rol
aaa
dec
ficoml
mov
outsl
cmp
ret
rol
insb
adc
cmp
pop
xor
pop
dec
ja
movsb
outsw
jbe
shl
mov
mov
dec
add
arpl
fnsave
push
cmp
inc
adc
jecxz
sbb
or
add
adc
fcoms
out
add
sahf
add
add
push
jne
sti
and
cmp
or
jg
cwtl
inc
cld
inc
mov
pop
ret
movsl
adc
lods
mov
mov
cmp
pop
adc
jecxz
and
mov
sbb
sub
push
jno
or
xchg
out
ret
adc
cwtl
jo
shll
in
and
movsb
out
sbbl
repnz
mov
in
aas
mov
cltd
dec
sub
jns
dec
ret
xor
mov
sub
jg
jne
xchg
repnz
out
xchg
jecxz
cli
jo
cmc
lea
dec
adc
adcb
icebp
mov
ficoml
cmpl
es
in
cmpsb
jecxz
jb
mov
movsl
pop
dec
stos
sbb
fcompl
mov
les
push
and
lret
jp
add
cmpsb
mov
aad
call
out
int3
dec
xchg
int
ret
push
out
inc
iret
cmp
mov
movzbl
sbb
adc
ljmp
cmp
repnz
sbbb
iret
mov
ds
mov
mov
sub
xchg
sbb
jle
popf
sub
add
push
cltd
mov
mov
in
dec
out
ljmp
adc
test
jp
sub
jno
mov
jo
mov
icebp
mov
jp
dec
dec
jle
ficompl
clc
ret
mov
xlat
aam
pop
jmp
mov
dec
mov
mov
sti
sbb
daa
cmp
in
push
fcmovu
imul
pop
pop
movsb
or
and
ret
mov
mov
adc
aad
js
pop
test
jl
enter
dec
mov
inc
mov
fwait
xchg
mov
mov
shrl
sub
push
xor
rolb
pop
or
loop
inc
mov
xchg
dec
push
imul
insl
sti
pop
inc
xlat
rcrl
flds
std
int
pop
mov
adc
mov
movsl
aas
in
mov
js
lret
mov
imulb
shrl
mov
stos
xchg
lahf
inc
mov
push
jg
push
in
bound
test
push
lcall
out
jge
ss
xchg
pop
lods
cmp
cmp
outsb
outsl
leave
or
js
push
sub
shlb
int
ret
dec
shl
and
push
mov
jle
cmp
jecxz
cmpsb
and
in
stos
jns
imulb
mov
mov
sbb
test
mov
sub
pop
hlt
stc
shl
add
dec
and
fcmovnbe
movsl
lock
sub
jg
adc
orb
dec
fcoml
subl
mov
lcall
jne
sbb
out
insb
dec
shr
fidivrl
fidivrl
pop
pushf
cli
add
es
inc
fldl2e
pop
inc
insb
mov
orb
lods
mov
adc
or
in
mov
insl
jae
mov
jp
pop
mov
mov
sub
lods
cmc
rolb
in
cmp
enter
xchg
pop
inc
xor
adc
lcall
ljmp
cs
mov
aam
mov
push
int3
insl
stc
push
or
and
imul
dec
dec
mov
call
inc
or
decb
mov
adc
mov
cmpsb
pushaw
repnz
dec
xor
sarl
out
adc
pop
add
fdivrl
test
loopne
mov
mov
mov
faddl
sbb
ds
pop
imul
addr16
fstpt
ljmp
dec
sub
pop
mov
xor
cmp
jle
mov
adc
sbb
mov
xor
ja
pop
jo
data16
fstl
add
jae
rcrl
call
ja
sbb
leave
lds
sbbb
xchg
dec
mov
xor
in
ss
inc
cmp
test
mov
add
and
inc
dec
scas
xchg
leave
jecxz
punpckldq
out
sub
mov
jo
int
mov
adc
pop
scas
xchg
cmp
fisubl
sarb
aad
je
stos
mov
shrb
cmpsl
les
sbb
pop
iret
push
push
inc
jno
push
leave
xchg
mov
jmp
push
daa
bound
lret
arpl
cmp
incl
mov
ret
lock
add
mov
rcll
fisubrl
dec
call
ret
ljmp
mov
sbb
insl
mov
and
sub
adc
stc
mov
mov
xchg
sbb
xor
call
ret
and
inc
jbe
cmp
adc
fcoml
dec
push
rolb
jae
cmpsb
mov
call
mov
adc
sbb
je,pn
jbe
push
ja
or
pop
mov
enter
jbe
and
shll
cmp
stc
mov
cmp
ss
hlt
or
pop
and
mov
lods
jecxz
mov
sbb
and
push
mov
ss
mov
cmp
mov
jmp
bound
mov
and
std
cmp
xor
mov
lds
lods
adcb
cmp
popf
test
fldenv
rorb
scas
inc
test
cs
inc
cmp
stc
in
sarl
inc
cmpsl
into
hlt
outsb
cltd
jp
rolb
movsl
xor
push
ja
movsl
cmp
or
fwait
pop
push
stc
hlt
sbb
dec
mov
je
loop
inc
lret
jle
out
xchg
and
or
lods
dec
adc
sub
lock
ljmp
fwait
push
rcr
mov
adc
jle
xchg
inc
inc
hlt
mov
jl
adc
mov
pop
adc
and
out
adc
fsubs
fsubrs
xchg
jg
xchg
jg
adc
mov
in
imul
test
pushf
jl
jp
int3
or
pop
loop
mov
aaa
inc
or
inc
add
sbb
daa
testl
sbb
test
mov
pop
test
cli
out
aam
loopne
stos
pop
test
lahf
jo
and
fisttpll
cltd
dec
add
inc
dec
lahf
movsl
lds
jno
rolb
hlt
les
cmpsb
cmc
inc
out
jl
xchg
sarb
cltd
push
push
sahf
mov
gs
mov
mov
sub
fisubrs
js
xlat
call
mov
mov
inc
add
and
lret
jecxz
add
add
xchg
push
xor
cli
insl
adc
sub
int
scas
test
xchg
adc
add
inc
fdivrl
shrb
adc
mov
or
or
push
jmp
sub
adc
jmp
out
cmp
adc
aas
rcll
cmpsl
or
out
sarl
icebp
aaa
pop
lret
lret
imul
ja
sub
dec
jecxz
arpl
sbb
icebp
or
inc
shrl
push
dec
test
and
rclb
addb
ret
js
rorb
pop
lods
mov
aas
inc
adc
imul
hlt
in
and
xchg
mov
test
std
mov
test
cmpsb
aas
dec
ffreep
and
sbb
xor
sti
pop
decl
jo
lock
fcompl
jmp
out
mov
outsb
mov
loop
sbb
lock
mov
popa
test
loop
sub
pop
inc
mov
pop
sbb
loope
push
mov
sbb
outsl
or
imul
fstpt
dec
xor
mov
jno
push
adc
mov
xchg
stos
and
jg
ss
push
sub
dec
or
int3
scas
mov
dec
lahf
fxch
lods
adc
xchg
or
in
repz
pop
mov
scas
push
or
scas
mov
pop
jne
mov
adc
gs
leave
imul
arpl
xlat
lds
xchg
adc
dec
mov
mov
scas
pop
lods
bound
cmp
jo
push
cmp
sbb
ja
shr
sbb
adc
or
int3
inc
dec
movsb
push
pop
or
iret
push
aad
xchg
mov
lea
push
xchg
subl
scas
sub
xlat
mov
push
mov
pop
mov
gs
adcb
xchg
fsubrs
xchg
jne
pop
in
or
and
xchg
popa
xor
fs
lcall
sbb
repz
mov
lcall
sub
xchg
and
popf
add
ret
loopne
mov
enter
add
in
das
dec
popf
pop
movsb
push
pop
rorb
mov
cmpsl
push
mov
call
lcall
cmc
fdivs
xlat
out
pop
inc
mov
cmp
mov
push
arpl
inc
nop
es
movsl
mov
sub
push
imul
sub
fs
test
push
stos
inc
inc
hlt
push
fsubs
push
adc
fbstp
cmp
mov
cmpsb
mov
mov
je
pop
cmp
call
sti
adc
pop
addl
sbb
jg
xor
mov
push
fcmovnu
addr16
pushl
mov
mov
mov
int3
scas
xchg
out
fidivl
scas
jb
mov
lock
xor
popa
add
xchg
sub
iret
jle
push
inc
dec
jl
mov
aaa
movsb
arpl
cmp
test
arpl
adc
mov
in
cmpsl
out
js
jecxz
push
nop
insb
jae
mov
fsub
xor
pusha
mov
ror
repz
pop
cmp
ljmp
fsubr
aaa
dec
mov
push
leave
mov
lea
mov
aaa
mov
inc
lock
sbb
decl
inc
adcl
out
adc
movsl
mov
jecxz
xlat
scas
xor
dec
mov
insl
loope
popa
lret
mov
xor
nop
loop
test
or
outsb
push
add
inc
dec
enter
add
insl
mov
push
xor
push
movsl
xchg
lock
jno
pusha
pop
ss
jmp
adc
pop
cmp
cvtps2pd
aas
lret
notb
jne
push
movsl
pop
out
lcall
mov
aaa
hlt
sbb
mov
scas
out
push
or
jl
das
mov
sub
popa
adc
popf
movsl
push
sbb
jo
or
cmp
push
imul
scas
insl
loope
dec
push
insb
lahf
jnp
fcomi
jge
lea
jns
sbb
sbb
inc
test
js
pop
sbb
cmp
aam
loop
scas
jns
push
sub
mov
sub
inc
faddl
and
mov
insl
pop
shl
sub
or
out
xchg
mov
cld
test
das
popa
adc
mov
jne
push
pop
daa
mov
dec
shl
roll
xor
idivb
xlat
lods
stos
repnz
inc
or
sahf
pop
xchg
insl
jno
push
cwtl
stos
sbb
int
xor
imul
dec
dec
enter
dec
gs
movsb
mov
cmp
inc
fcoms
push
leave
fs
mov
out
out
arpl
xchg
nop
out
mov
vlddqu
pop
test
jmp
cmpsl
mov
cmc
cltd
outsb
or
out
jp
iret
scas
xchg
lods
add
ljmp
xchg
imul
das
mov
adcb
es
inc
ficoms
push
ja
mov
into
fcomps
xchg
inc
mov
xor
mov
lret
sbb
push
nop
jo
xor
jecxz
mulb
adc
sub
fwait
test
sub
mov
vmwrite
adc
push
jbe
out
outsb
rol
mov
outsb
mov
lahf
fnstenv
popa
mov
mov
jmp
in
dec
pop
insb
dec
push
shlb
rcll
mov
dec
adcl
lahf
int3
and
adc
bnd
imul
push
and
icebp
addr16
push
mov
sbb
mov
scas
dec
inc
popa
lcall
insl
ss
lock
mov
pushf
adc
lds
cli
imul
push
mov
inc
xor
pop
pop
hlt
xchg
loopne
and
test
fs
add
mov
lock
mov
pop
mov
call
adc
adc
sarb
mov
enter
andl
ja
in
scas
clc
das
cli
push
rcl
shll
sbb
cmp
or
jbe
and
xchg
mov
sti
nop
loop
rsqrtps
int
xchg
insb
in
arpl
add
insb
aaa
es
push
ljmp
or
push
jne
lret
and
xchg
mov
in
shrl
in
std
out
imul
fdivs
cmpsb
stos
mov
addr16
imull
push
outsb
push
or
lret
dec
jb
sub
aam
ljmp
call
inc
lods
pushf
in
movsb
insb
inc
mov
mul
daa
rcl
js
or
push
or
add
filds
xor
adc
and
and
mov
xor
adc
jg
cmpsl
sbb
loopne
inc
lea
or
add
out
imul
sbb
test
frstor
lock
mov
xor
cmp
xchg
in
sbb
mov
ja
push
or
nop
ret
dec
cmp
scas
or
pop
or
test
sar
mov
leave
sarl
aad
push
jg
pop
pop
or
sbb
addl
pop
pop
or
adc
loop
mov
pop
mov
mov
fdivr
jns
jg
mov
jb,pn
aas
xchg
test
jnp
or
shr
jns
push
cli
ljmp
sti
loope
inc
cmp
mov
push
or
dec
jbe
mov
push
push
idivb
dec
mov
aam
cmc
cmp
push
dec
es
fiadds
mov
mov
insl
jo
ss
or
add
mov
jbe
iret
mov
fildl
push
or
push
fidivrs
jne
inc
rorl
or
mov
dec
and
mov
adc
pop
cmpsl
sbb
cmp
stc
loop
cwtl
sub
clc
jp
sbb
jp
jnp
icebp
mov
test
and
sub
mov
pop
int
test
cmp
xchg
cmp
push
and
cli
push
jecxz
adc
fstps
or
pop
movb
orl
mov
cwtl
inc
cmpsb
movsl
lods
das
and
insl
out
lock
mov
sbb
into
mov
div
push
cmc
push
fidivl
out
lahf
add
sti
sti
or
xor
lea
sbbl
testl
sar
shrl
mov
add
sub
stos
lret
scas
lods
ljmp
lret
lahf
pop
sub
jo
push
subl
or
rcrl
es
sbbb
rcl
jae
cmp
je
push
and
push
imul
gs
sub
shll
fs
xchg
fwait
ret
fstps
js
sub
inc
lcall
lret
std
adc
and
repz
sub
or
shr
mov
pop
adc
clc
or
xchg
pushf
icebp
or
mov
pushf
loop
push
push
adc
nop
ret
outsb
pop
dec
cmc
mov
or
out
loopne
mov
dec
jle
pop
add
jle
je
out
mov
wrmsr
inc
rolb
icebp
ret
add
test
aaa
lea
push
push
pmullw
sti
out
sub
int3
cmp
xchg
dec
xchg
scas
ffree
mov
shll
xchg
pop
fisubrl
inc
fs
les
cmc
jbe
out
test
iret
cmp
pop
pop
inc
cwtl
stos
and
loopne
cmpsb
cmpsb
dec
cmp
and
popa
xchg
xchg
andb
push
or
push
aas
cmp
push
push
xor
mov
leave
inc
fsub
sarb
mov
int3
hlt
cld
fldenv
fcoml
and
mov
cmpsl
xchg
test
shll
jle
or
movsb
or
xchg
mov
fldcw
sahf
mov
or
and
inc
test
adc
jp
lods
pop
pop
je
inc
jo
shlb
test
lret
cmc
mov
mov
aad
and
mov
inc
testb
push
scas
mull
lds
repnz
shlb
or
push
or
cmp
push
out
adc
int
push
in
xchg
les
ds
test
in
pop
push
inc
dec
hlt
je
inc
outsl
ja
cwtl
and
rorl
repnz
ret
aad
adc
aam
loope
xchg
out
adc
push
inc
pop
lock
out
sbb
push
jp
add
test
cmp
lock
lods
in
xchg
push
test
mov
ljmp
jae
or
jb
push
mov
or
fnstcw
adc
and
jo
incb
jle
xor
enter
insl
inc
rol
lods
scas
jge
std
mov
push
inc
lock
jecxz
mov
pop
ja
in
adc
inc
cmp
addb
cmpsb
daa
js
ret
add
adc
movsl
adc
mov
dec
mov
mov
cli
jo
push
fstp
push
dec
jecxz
shlb
negb
sbb
pop
lock
xor
pop
daa
xchg
ret
aas
sahf
leave
out
fnstenv
jns
aad
mov
mov
or
push
repz
insb
push
insl
sarb
sbb
jg
lea
sbb
fs
or
ja
insb
mov
pop
mov
aas
fsubrl
add
cli
test
xor
aad
int3
cmpsb
jmp
hlt
mov
insl
lahf
test
out
xchg
in
test
ficoms
adc
jnp
mov
ljmp
jl
pop
daa
rcr
cwtl
push
add
testl
cmp
sub
and
xor
fildl
adc
clc
sub
xchg
aad
xor
popf
mov
mov
cli
scas
movl
ds
fisubs
push
push
mov
cld
adc
add
test
sub
sbb
mov
sbb
mov
and
adc
sbb
pop
repz
scas
mov
pop
lods
orl
jns
jl
out
push
sub
adc
testb
mov
mov
cli
ljmp
sbb
mov
xor
mov
shl
out
daa
and
mov
sbb
mov
pop
and
pop
int
int3
sbb
pushf
popa
out
bound
shl
gs
sub
test
xchg
test
dec
jb
jb
jmp
loopne
adc
pop
jecxz
cmp
jl
sbb
mov
pop
leave
mov
adc
lahf
jecxz
imul
jo
outsb
or
loopne
pop
test
sar
xchg
int
pop
add
rorb
ja
pop
lcall
xchg
pusha
aam
adc
insb
xchg
in
cmp
jl
dec
aaa
jns
daa
sbb
adc
mov
xchg
ss
sbb
popf
xor
mov
and
bswap
aaa
negl
push
fisubrl
inc
aam
sbb
imul
xchg
imulb
dec
arpl
add
and
adc
dec
test
sarb
dec
jp
push
xchg
stos
repnz
jnp
je
push
jmp
jge
mov
sbb
mov
in
inc
sub
xchg
pop
cmp
lahf
rcll
mov
dec
testl
jmp
fstpt
mov
dec
mov
lea
popf
inc
cmpsl
xchg
les
subl
adc
imul
repz
dec
mov
pop
sub
arpl
test
stc
fildll
xchg
fldt
sar
pop
aaa
add
outsl
mov
xor
stos
mov
cmp
scas
cmc
push
in
or
aad
imul
pop
xchg
xchg
in
outsb
push
into
xor
call
mov
and
inc
fbstp
inc
bound
pop
jl
mov
xor
xor
push
add
mov
sbb
fmuls
xchg
rcr
xorl
dec
stos
pop
movsl
outsb
mov
insb
jae
sbb
dec
push
inc
in
xchg
add
xor
loop
push
into
sub
mov
js
in
movsl
imul
inc
mov
push
int
or
data16
mov
pop
flds
push
mov
mov
jns
mov
hlt
cmp
mov
lock
mov
scas
sbb
into
decb
lods
push
pop
lret
repz
scas
scas
xchg
inc
xchg
aas
cmp
mov
or
in
and
int3
sbb
jne
movsb
lock
mov
pop
jecxz
cs
jge
cmp
lods
push
lea
dec
cmp
jns
push
jbe
into
fisttps
dec
jmp
fcoml
in
je
jg
push
std
lock
and
lret
cmp
inc
std
dec
imulb
scas
mov
les
outsl
xor
xor
cmp
scas
orl
int
clc
adc
cmpl
inc
les
jb
mov
add
aaa
movsb
push
sbb
dec
scas
fmull
mov
dec
adc
lea
mov
jno
sub
lahf
add
popf
insl
mov
or
loopne
lds
cmp
movsl
addr16
or
notl
sti
xorb
arpl
cmp
data16
fmull
mov
in
mov
xor
cmp
lock
mov
push
or
sahf
or
mov
fstl
xchg
or
sub
and
test
clc
fcoml
sbb
mov
xchg
fs
bound
insl
pop
mov
jp
mov
test
xor
mov
imul
loopne
insb
jnp
aas
cmc
scas
dec
adc
int
cs
test
stos
adc
push
js
pop
xchg
or
inc
fxch
pushf
mov
jns
mov
add
mov
jae
enter
cmp
inc
inc
mov
pop
push
fs
sbb
gs
add
and
xor
add
sbb
leave
push
cld
or
ljmp
sbb
fists
outsl
pop
cld
cmp
xor
cli
add
aad
mov
ret
and
or
cmp
xor
xchg
xchg
jecxz
sub
into
pop
mov
rcll
xchg
adc
sahf
pop
pop
test
addr16
mov
or
pop
repnz
cwtl
sub
xchg
xor
xchg
icebp
push
inc
fwait
or
xor
xchg
jns
add
cmpb
outsb
repnz
rol
and
pop
les
loope
test
sti
jae
lock
pcmpgtb
dec
jecxz
and
sub
lods
push
loope
stos
test
jae
push
jl
xchg
insl
cld
movsl
mov
add
repz
sbb
jecxz
dec
sbbl
push
lods
repz
aaa
mov
test
addb
movsl
jp
insb
repz
push
pop
jns
leave
cmpl
pop
dec
test
jne
xchg
inc
mov
push
inc
into
lcall
sbbb
mov
xor
in
sbb
adc
loop
mov
sub
sarl
pop
dec
fnstcw
outsb
jo
xchg
push
scas
mov
out
out
adc
lods
in
inc
nop
je
xor
in
ja
imul
enter
xor
adc
std
cmp
movl
arpl
mov
addr16
les
add
jle
inc
mov
sbb
mov
adc
and
mov
or
jecxz
in
outsb
cmp
pop
arpl
mov
adc
aaa
dec
ja
cmp
sub
add
loopne
adc
pusha
imul
es
movb
sub
inc
jge
and
lret
leave
call
mov
testl
xchg
add
add
mov
mov
cltd
inc
dec
or
mov
sarl
lods
pop
mov
loop
in
pop
inc
imul
lods
add
inc
insb
xor
adc
inc
shl
repz
xchg
mov
pop
jle
mov
mov
mov
sub
vpsubusb
roll
ror
pop
fsubrs
mov
test
imul
mov
pop
jle
daa
mov
bound
and
pop
and
mov
add
int3
pop
fs
and
std
testb
rolb
xor
aad
ficoml
push
jecxz
faddp
mov
hlt
mov
inc
outsl
xor
mov
or
jb
fsubl
scas
int
sub
xchg
cltd
sub
and
xor
negl
repnz
test
add
cmpsl
das
iret
stos
into
sub
xor
dec
leave
push
mov
lods
pop
or
fdiv
jecxz
lret
sub
in
scas
andl
movsb
mov
sbb
cs
hlt
ret
lahf
jb
add
in
pop
mov
imul
add
dec
jnp
mov
mov
ret
outsb
xor
inc
mov
xor
inc
addr16
adc
sub
movsl
bound
and
sub
xor
pop
shr
mov
repz
rorw
sbb
inc
popa
lret
mov
mov
adc
mov
sbbb
decl
jge
pop
lret
enter
cltd
arpl
xor
es
and
cmp
mov
dec
sti
jg
mov
fsub
mov
imul
out
bound
out
sbb
add
insl
inc
pop
pop
stos
push
bnd
repz
sub
mov
mov
add
dec
je
dec
or
jecxz
mov
push
jge
mull
inc
cmpsl
shlb
rclb
cmc
pop
mov
in
mov
mov
mov
inc
fisttpl
pusha
cmpsb
or
and
imul
and
cs
rorb
sub
aam
lahf
mov
cmp
das
hlt
lcall
mov
push
in
and
sub
inc
mov
bound
dec
xchg
add
xchg
push
pop
xor
rcrl
aad
stos
and
cmp
rcl
pop
xor
mov
imul
xor
cmp
inc
mov
loopne
iret
adc
push
xor
jae
mov
lret
jge
sarb
xor
push
jmp
out
aad
ret
lods
std
mov
es
jp
data16
sbbl
out
or
test
gs
xor
sub
xor
in
dec
inc
out
xor
mov
and
sub
fchs
int3
fwait
insb
and
pusha
add
add
xchg
mov
sub
push
scas
and
jg
fdivr
test
incl
std
mov
bound
jl
int
and
sub
push
or
jne
mov
aam
shll
lahf
lret
aam
sub
jge
and
sbb
mov
pop
fiaddl
push
ss
mov
clc
cltd
cmp
cwtl
xchg
imul
pop
sub
xchg
jne
mov
mov
into
hlt
enter
outsb
pop
inc
sub
xchg
or
xchg
dec
lahf
insl
ret
cmpsb
mov
pop
js
loope
or
jae
push
jne
jbe
outsb
jnp
mov
movsl
popf
adc
cmp
imul
nop
loopne
xchg
xor
mov
mov
inc
mov
dec
mov
aam
cmp
out
add
mov
mov
xchg
fcoms
mov
test
cmp
add
loope
int3
mov
orl
push
imul
mov
testl
sbbl
sbb
test
inc
ja
int3
lds
sbb
mov
push
rcrl
movsb
outsl
adc
in
xchg
xchg
clc
or
iret
outsb
aas
pop
data16
jb
subb
dec
test
ds
adc
lcall
out
movl
out
cld
jb
dec
arpl
xor
das
pop
pextrw
and
cmp
mov
mulb
scas
out
mov
push
dec
dec
pop
mov
out
cmp
mov
sub
outsb
cmpsb
inc
pusha
sti
bound
xor
frstor
jmp
out
mov
fs
sahf
ja
add
mov
mov
push
adc
jno
rcl
into
insl
mov
mov
push
fldcw
push
add
xchg
scas
push
cwtl
js
lret
test
add
rcll
repz
andb
adc
jmp
xchg
mov
sbb
jmp
sbb
ds
dec
aad
rol
adc
ret
jae
bound
cltd
out
mov
lock
xchg
hlt
inc
roll
fisttps
mov
lret
pop
scas
mov
pop
addr16
inc
add
push
and
sub
sub
cmp
push
xchg
jae
cmc
push
nop
cmpsl
xor
pop
mov
and
pushf
fsubrs
jmp
mov
popa
inc
adc
ret
push
hlt
outsb
mov
xor
push
popf
lret
mulb
mov
cmp
outsl
xchg
iret
inc
lret
pop
mov
insl
cmp
stc
push
fisttpl
or
xor
inc
push
in
nop
cltd
fs
in
sbb
add
sbb
jo
fldt
shl
xchg
arpl
scas
inc
adc
add
arpl
out
les
divb
pushf
sbb
ljmp
insl
mov
test
icebp
xor
jnp
sahf
lds
outsl
sub
sbb
mov
xchg
sub
icebp
inc
sbb
shll
sbb
ret
cmpsb
addl
imulb
leave
and
outsb
test
pop
inc
ds
loope
push
mov
and
hlt
jne
pop
push
out
xchg
ret
fwait
cld
lahf
fmulp
inc
dec
shlb
into
and
fstl
imul
add
sbb
sub
mov
jle
sbb
popa
adc
sub
dec
test
frstor
sbbl
aam
xor
insb
mov
lret
xchg
jl
mov
imul
mov
adc
pop
or
pop
outsb
xlat
js
xchg
leave
cmp
clc
outsl
push
xchg
sbb
xor
fsts
or
sbb
mov
cmp
test
push
movsl
lds
and
inc
out
mov
mov
cwtl
xchg
int3
add
mov
push
nop
adc
pop
xor
arpl
sub
cmc
ja
pop
pop
xchg
inc
inc
fmull
dec
mov
add
lret
add
lahf
cmp
bound
loopne
sbb
fidivrl
mov
jp
sahf
pop
jg
scas
cmc
sbbb
inc
dec
int3
js
mov
lods
daa
xchg
clc
mov
push
adc
or
aas
int3
out
test
mov
shlb
mov
mov
jge
mov
lcall
enter
int
sub
mov
jmp
pop
sbb
add
pop
fstps
push
nop
sub
dec
add
sbb
xchg
mov
adc
je
dec
jecxz
xor
pushf
sarl
ljmp
fldenv
or
cmp
out
mov
into
jle
inc
add
ljmp
mov
sbb
ds
cmp
xor
sub
sbb
into
add
mov
push
and
mov
xor
rclb
arpl
push
addr16
fcoml
push
in
loop
cwtl
and
inc
xchg
xor
sub
jl
adc
adc
push
mov
lds
cmp
push
imull
xor
adc
sbb
ret
sbb
scas
cmpsl
movsl
out
cmpsl
lret
mov
mov
inc
mov
sbb
int
jo
add
inc
inc
sahf
dec
int3
gs
sub
in
inc
imul
push
dec
ss
mov
push
nop
add
pop
arpl
cmpps
mov
inc
js
mov
incb
dec
out
mov
test
fwait
or
insb
mov
outsl
loopne
jecxz
mov
sub
or
bound
and
mov
jb
jns
pop
xbegin
xor
xor
adc
imul
aam
mov
aam
mov
movsl
mov
cmpsb
loope
notb
pop
dec
cmp
xor
jmp
push
arpl
mov
inc
inc
push
inc
sbb
ror
mov
mov
adc
xchg
int3
adc
ss
add
push
sbb
pop
inc
dec
aaa
scas
leave
xchg
stos
or
fs
push
push
cvtps2pd
testl
shrl
icebp
jmp
push
jae
test
movsl
ljmp
sub
leave
aaa
out
insb
sbb
js
sar
enter
xor
jns
outsl
jns
sub
in
mov
test
mov
adc
sahf
rclb
inc
mov
xchg
xor
scas
push
push
mov
push
cmp
int
cmp
ja
push
cmp
dec
inc
adc
fwait
jle
and
or
adc
xchg
inc
iret
lcall
dec
and
nop
mov
insb
and
into
insl
lods
add
dec
dec
push
add
repz
inc
mov
ss
xor
not
or
sub
mov
lods
mov
mov
faddp
mov
xchg
add
jae
sbb
xchg
repnz
lods
mov
mov
fs
in
pop
xchg
cmp
sbb
loop
dec
ret
jnp
mov
sub
ror
mov
jmp
mov
adc
mov
push
lods
sub
xor
fmulp
sbb
adc
xor
push
push
loopne
mov
lds
jle
mov
cwtl
mov
inc
push
push
stos
mov
fisubl
into
loope
popf
js
loop
pop
insb
jo
bound
or
mov
mov
cld
inc
into
jnp
in
aad
gs
in
pop
incb
xor
imulb
adc
dec
cli
jl
das
xchg
inc
push
repz
add
dec
enter
mov
repnz
or
mov
sub
mov
cmp
pop
and
sbb
adcb
ja
jmp
fs
or
inc
in
sub
aam
adc
fcoms
adc
lcall
inc
xchg
jle
lret
fadds
ss
xlat
dec
xorl
mov
sub
daa
dec
cwtl
sbbl
or
leave
mov
out
cmc
imul
outsb
cltd
fmull
dec
dec
dec
adc
jmp
or
xchg
dec
pop
fisttpll
xchg
cli
or
dec
loope
jo
insb
ja
jge
sub
push
das
and
xor
in
out
cmp
mov
popf
in
cmp
jnp
mov
lret
xor
movq
pop
es
push
inc
ror
jo
inc
imul
ljmp
jae
sub
push
pop
es
cld
scas
xchg
std
or
aad
iret
movsb
hlt
enter
xor
sbb
xchg
jmp
fildl
cmpsl
je
imul
pop
loop
daa
mov
fnsave
data16
sub
repnz
mov
or
movsb
cmpxchg
xchg
add
data16
mov
lcall
or
or
popa
movsb
push
mov
fstpt
mov
cmp
pop
lret
add
cli
inc
or
jnp
and
scas
mov
cmp
pop
or
sarb
dec
pop
out
stos
cltd
repnz
pusha
lcall
pop
cmp
aam
pop
xlat
fldcw
xchg
in
xchg
jb
sub
dec
jo
adc
rcrl
dec
jge
and
cwtl
out
out
adc
cmove
les
int
aad
add
loopne
jmp
ficoms
sbb
mov
or
jno
lock
add
push
push
mov
adc
and
shll
scas
and
sub
in
sbb
cmp
cld
push
ljmp
or
xor
leave
dec
dec
lcall
jne
mov
push
jb
inc
push
jl
sbb
adc
jg
mov
push
mov
std
repz
int3
inc
sbb
sub
movsl
xor
scas
jno
arpl
sti
inc
adc
mov
dec
ja
xlat
pop
xchg
cmpsb
mov
xor
push
shrb
and
lcall
inc
ds
out
or
push
mov
fmuls
aad
iret
test
lods
cmp
or
or
add
and
mov
pop
mov
icebp
das
imul
inc
mov
in
mov
jo
loop
sub
xchg
js
loope
pop
mov
jecxz
push
sti
inc
repz
nop
xchg
cmp
pop
adc
insb
popa
shll
jb
pop
je
das
mov
gs
inc
iret
lcall
jno
mov
pushf
js
out
cmpsb
mov
sub
scas
call
jne
sub
push
fwait
test
faddp
xchg
lcall
mov
jge
fsubr
jp
jno
push
sub
inc
pop
and
fists
lcall
out
cmpsb
aaa
jb
pop
das
mov
pushl
mov
mov
push
mov
adc
aam
ret
sub
jb
andb
dec
adc
insb
scas
dec
in
push
mov
fidivl
aas
pop
scas
or
daa
sbb
mov
xchg
bound
or
repnz
shlb
cmp
cld
rcl
adc
mov
cmp
aas
adc
mov
mov
push
sti
or
sahf
lret
mov
cli
xorl
dec
mov
mov
dec
xor
add
pop
dec
dec
and
cmp
mov
roll
insb
ficoml
and
rcrb
popa
stos
pop
inc
or
xor
pusha
int
xor
and
outsl
jae
test
stos
pop
jle
ja
ds
cld
adcl
and
subb
mov
jl
in
leave
aas
rcr
nop
pop
fstl
daa
dec
pop
push
inc
cwtl
in
add
lcall
hlt
in
cltd
push
pop
and
and
xchg
out
jge
sbb
test
notb
sahf
dec
mov
add
std
mov
fucomi
lods
and
in
ret
repz
scas
xchg
mov
jo
adc
or
out
jg
pop
mov
loope
push
cmpsb
ljmp
mov
test
mov
adc
or
sbb
and
mov
sbb
inc
push
out
lea
inc
mov
jmp
jl
inc
cld
rcll
push
daa
jno
jecxz
pop
out
inc
sub
loopne
inc
mov
sub
mov
shrb
push
push
xorl
repnz
clc
repz
fimull
leave
mov
and
andb
jae
jecxz
std
mov
xchg
subb
inc
cwtl
mov
xchg
sbb
hlt
jne
pop
jnp
movsb
repz
outsl
insl
ret
fildl
mov
push
fisubl
cli
jae
es
pop
pop
fwait
pop
mov
jg
or
or
mov
clc
xor
dec
adc
jle
daa
imul
ud1
daa
jb
mov
push
movsl
mov
and
movsl
enter
jl
das
jno
jge
aam
sub
cmp
icebp
or
aaa
mov
mov
lds
inc
int
jl
addr16
xchg
add
push
jp
aas
cltd
mov
ret
leave
push
mov
cld
shll
call
xlat
xor
fdivs
daa
xor
loopnew
out
scas
add
adc
fnsave
lds
ret
xor
gs
icebp
mov
lods
inc
jbe
push
jbe
inc
pushf
inc
add
pusha
mov
inc
dec
mov
rcll
adc
test
es
aas
or
xchg
mov
add
cmpsl
dec
in
stos
adc
sahf
mov
pop
jmp
jl
cli
outsb
fisubs
cmp
imul
cli
nop
xor
mov
mov
xchg
aam
pop
xchg
mov
sub
xor
dec
xor
fiadds
and
scas
add
pusha
xchg
mov
shlb
int3
mov
clc
jp
dec
imul
sub
lods
lds
inc
movsb
lcall
call
push
repnz
mov
sub
xchg
filds
push
push
push
loope
xor
lcall
in
sti
iret
ret
jl
xor
sahf
mov
inc
mov
clc
sahf
dec
fs
mov
sahf
mov
adc
incl
mov
in
ffreep
repz
jns
push
add
pop
outsl
add
mov
adc
out
jb
ss
icebp
dec
pop
cmc
push
pop
mov
pop
mov
mov
cs
in
rcpps
mov
mov
cwtl
cs
jns
xor
divb
and
dec
in
loope
cmp
pop
add
sbb
xchg
hlt
scas
sub
or
in
push
jae
pop
mov
and
xchg
mov
out
mov
aad
jne
cmp
jp
inc
inc
mov
jecxz
xchg
fucom
pop
js,pt
rol
jnp
movsb
mov
sub
sbb
add
bound
rorb
into
mov
test
gs
cmp
nop
mov
inc
jb
inc
ds
jle
cmp
insl
rcll
ss
das
inc
loopne
pusha
ret
fldcw
add
ljmp
jnp
xor
call
pop
addr16
iret
jecxz
outsl
sti
rcl
pop
and
pop
inc
cmp
push
sarl
sub
lods
mov
and
push
jo
ret
inc
adc
push
mov
repz
and
jno
pop
shlb
test
shlb
sahf
inc
rorb
out
mov
rcrl
clc
mov
mov
gs
mov
in
adc
push
in
scas
sarl
sbb
sti
mov
clc
push
cltd
rcll
outsb
data16
jb
shlb
je
sub
mov
and
icebp
or
xchg
fstpt
xchg
xchg
add
imul
pop
jb
pop
imul
test
icebp
sti
aam
subb
out
scas
fwait
push
xor
imull
out
mov
mov
test
or
inc
xor
dec
mov
dec
fistps
jns
sub
test
push
push
ljmp
addr16
cltd
pop
clc
outsl
cmp
data16
add
mov
and
mov
or
pop
shl
adc
imul
outsl
icebp
inc
push
addb
jo
test
mov
mov
loop
aas
test
stos
xor
add
iret
xchg
push
jne
add
xor
decl
sub
xchg
or
inc
imul
repz
stos
inc
faddl
enter
mov
xchg
aad
mov
push
or
cmp
aad
mov
mov
inc
testl
loopew
lea
lods
lea
sbb
jno
in
ljmp
ret
fisubrs
out
das
mov
sbb
xchg
into
xchg
or
xorl
fbstp
rorl
mov
jnp
jb
inc
add
jnp
pop
mov
movsb
jg
push
pop
arpl
mov
jno
jae
pop
cmp
jp
jae
sahf
subl
stos
add
out
std
dec
push
test
push
or
or
hlt
insb
and
xor
sub
lods
in
data16
or
pop
iret
add
outsb
inc
scas
inc
inc
dec
test
mov
and
mov
sahf
aas
push
cmp
lods
imul
into
add
rcrb
std
lsl
ljmp
loopne
inc
cltd
xor
inc
es
sub
adc
pop
pop
dec
mov
mov
sarb
mov
enter
and
push
fbstp
sbb
out
popa
pop
sahf
ja
mov
cmovnp
shlb
push
into
dec
sbb
bound
jb
popa
lret
dec
int3
int3
out
insb
mov
nop
arpl
fdivrs
xor
stos
add
jae
adc
aaa
jle,pn
in
repz
ds
aam
shll
or
leave
xchg
lock
or
jle
ja
push
fisubrl
dec
dec
fs
jmp
cmp
jle
repnz
xor
ds
int
jmp
push
xchg
jmp
dec
aaa
outsl
push
sub
icebp
imul
jbe
cmp
mov
dec
inc
push
sub
sub
addr16
xor
and
xor
rolb
xchg
sbb
lods
xchg
xchg
cmpsb
add
lds
ja
push
lea
fmull
and
pop
f2xm1
sbb
dec
data16
and
xlat
fstps
inc
mov
movsb
pop
xchg
jno
jmp
push
cmp
dec
je
pushf
xor
nop
push
ficoms
push
lods
cmp
cmp
out
movsl
jbe
insl
icebp
add
dec
jmp
mov
push
lahf
mov
test
xchg
jle
out
in
push
loop
cmc
pop
out
dec
idivb
popf
popa
mov
loope
push
adc
out
adc
cs
jmp
cmp
loope
push
push
mov
add
lret
jge
xchg
je
pusha
mov
mov
mov
notl
push
pusha
shl
js
jecxz
stc
pop
push
cmp
cmp
pop
add
xor
and
push
xor
add
cmp
cmc
sub
ret
into
inc
scas
sbb
push
lods
jo
sub
adc
pop
jns
add
insb
xor
jo
lods
mov
popf
mov
or
test
lea
jp
test
inc
jnp
dec
cmp
mov
mov
cmpsb
test
cmp
xorb
imul
cmp
lods
or
hlt
ss
mov
aam
add
xor
mov
inc
aas
into
sub
bound
mov
jnp
std
test
stc
ret
pop
fwait
jmp
imul
lock
aaa
inc
popf
divb
enter
int3
jmp
jno
sub
js,pn
adc
lock
orl
and
outsl
xchg
into
sub
sub
mov
sub
data16
and
fs
cmp
xchg
cs
into
pop
cwtl
bound
movl
clc
inc
pop
popf
ret
fsubrs
lods
ficompl
adc
pop
scas
lods
and
test
data16
or
sbb
call
cmp
clc
test
in
into
or
sahf
sbb
and
or
pop
mov
sub
fstpt
inc
cmp
sub
xor
pushf
mov
cmp
sub
aaa
test
bnd
out
sbb
lods
in
cli
sbb
and
stos
sti
push
mov
fs
xor
subb
lret
sbb
orl
pop
or
add
push
jno
jns
fsubrs
inc
mov
sub
lret
pop
test
mov
lahf
or
and
cltd
jnp
mov
fidivl
addr16
ja
cmc
popl
xor
add
test
leave
dec
mov
fists
stos
add
outsb
sub
sbb
sbb
add
sub
jmp
xchg
clc
cmc
inc
cmp
jae
xchg
ficomps
leave
rcrl
out
imul
andl
pop
loop
cmpsb
adc
or
cs
rcll
push
mov
fwait
inc
jno
and
adc
cmpsb
gs
nop
xchg
fmuls
lods
shl
fidivl
jmp
outsb
out
movsl
xor
movsl
mov
mov
jb
inc
push
adc
scas
pop
mov
in
pop
mov
cmp
mov
fists
inc
lcall
or
jns
cs
lods
stos
pop
movsb
mov
ss
stos
or
into
inc
jbe
xchg
shlb
dec
dec
sbb
out
push
bound
rclb
sbb
hlt
jo
jge
xor
dec
scas
movsl
std
imul
xchg
xlat
pop
jp
enter
xchg
lock
sbb
cmp
inc
jle
in
imul
stos
cld
sbb
and
sub
mov
pop
add
and
lods
rclb
cmc
lods
addr16
cmpsb
cmp
xchg
mov
xchg
movsb
into
fnstsw
xor
decb
mov
add
sbb
pop
push
sub
outsl
pop
dec
aad
cmp
in
and
mov
and
arpl
js
in
call
lahf
xchg
xor
xchg
into
paddd
jge
dec
xchg
and
test
test
push
lea
call
das
mov
pop
cli
sub
dec
push
jl
movsb
push
jg
fcoml
ss
inc
arpl
ret
inc
rcr
mov
jbe
xor
adc
cmpl
rclb
pop
and
pop
movsb
rorb
push
jge
pop
xchg
cmp
lods
fsts
mov
jb
les
ja
cmp
scas
pop
fldt
je
cltd
pop
call
xlat
js
fisubs
fs
sbb
popf
fsts
mov
fwait
in
insb
stos
iret
push
cltd
or
cmc
inc
out
aas
bound
imul
jns
push
xor
jmp
rcl
imul
movsw
popf
and
aam
pop
cmp
pop
ds
sub
movsl
mov
jbe
andl
int3
mov
mov
movsb
lret
sbb
cmp
mov
ljmp
addr16
cmp
fwait
repz
aam
xchg
push
cmpsb
inc
sub
or
addr16
in
shl
out
cmc
icebp
nop
mov
push
jp
sahf
aas
xor
in
push
or
test
lea
ret
mov
cmpsl
mov
cmpsb
inc
fs
push
mov
xlat
in
test
in
rorl
mov
xchg
pop
cmp
test
jnp
sbb
jnp
dec
loop
xchg
and
fdivl
pop
sbb
bound
out
imul
roll
dec
insl
dec
mov
xchg
mov
dec
and
outsb
ret
jmp
dec
gs
sbb
leave
push
xchg
js
cmovnp
scas
imul
push
adc
out
adc
pop
push
or
push
fistpl
jle
cmp
enter
add
cmp
sbb
push
push
mov
es
inc
iret
cmp
xlat
and
filds
cmp
mov
jl
pop
xchg
roll
cs
rdpmc
popa
add
fistl
fwait
xchg
call
adc
or
popa
push
pop
stc
in
adc
pop
loop
imul
mov
cli
aaa
cmp
bswap
xor
mov
sbb
fwait
sub
aam
pop
cld
lret
push
xor
fcmovb
push
sub
daa
cmp
int
lret
pop
sahf
or
aaa
push
popf
pop
dec
jno
das
and
and
push
mov
mov
dec
lock
popl
lret
and
pop
lret
push
push
sahf
ljmp
das
jle
out
mov
xchg
mov
dec
sbb
add
enter
and
xor
daa
sub
dec
call
in
jbe
adc
out
sbb
mov
push
lcall
aaa
cli
lea
jno
push
call
cmpsb
test
out
call
fisubrs
xchg
sbb
pop
ljmp
inc
inc
in
imulb
mov
es
jnp
mov
mov
xchg
mov
movsb
pop
xor
cmp
add
push
stos
leave
aad
cltd
jl
lods
dec
jb
jl
dec
in
jnp
jb
in
pop
sub
imul
out
jne
push
pop
push
mov
mov
sub
aam
jl
jne
pop
xor
imul
ljmp
movsb
mov
push
cld
loope
movb
xchg
cmp
cmpsl
jmp
ret
jno
mov
push
mov
movsl
sahf
sbb
addl
xor
xor
popa
in
popf
je
push
test
les
in
pop
pmaddwd
xchg
lret
mov
aas
movsl
or
sbb
mov
cmc
mov
pop
inc
xchg
jno
add
cld
ja
jge
mov
call
jp
ret
nop
push
test
loopne
adc
jge
flds
mov
clc
insb
mov
jge
mov
and
bound
mov
xchg
jecxz
cli
lea
movsb
sbb
lret
lcall
jno
or
mov
into
lock
adc
mov
adc
pop
xor
scas
cli
stc
adcl
jmp
xor
lcall
cmp
push
fcmove
arpl
int
cmp
repnz
repz
fmull
in
or
lcall
mov
add
sub
sub
sub
mov
xchg
int3
or
sub
mov
or
inc
xchg
pop
stos
sahf
pop
data16
gs
jecxz
fcompl
imul
je
pop
pushf
xchg
aam
je
and
outsl
add
test
sbb
pop
rcr
and
je
pop
and
fstpt
jnp
push
push
mull
gs
popa
cmp
inc
or
jecxz
jno
cmpl
sbb
mov
dec
test
push
cmpsb
add
xorps
mov
jns
or
bnd
insl
push
jae
js
push
stc
inc
mov
in
sbb
xor
rcrl
out
fmul
int3
mov
and
insb
fcmovnb
pop
fmull
imul
fcompl
cmp
cmp
dec
sub
and
push
or
int
enter
cmc
negl
and
arpl
pop
popa
fcomi
and
and
or
mov
loopne
jnp
fidivs
sahf
xchg
popa
js
movsb
ljmp
int
mov
cli
mov
mov
in
mov
fwait
sar
jbe
es
out
and
in
push
mov
cld
and
imul
cmpsl
push
pop
test
sub
nop
add
das
mov
cmp
mov
outsl
add
mov
fsubr
mov
hlt
pusha
inc
mov
xlat
adc
scas
mov
pop
aas
xor
add
and
lods
shrb
and
mov
and
in
or
int
and
orl
shrl
int
repz
sub
xchg
pop
sub
pop
and
xor
jl
add
dec
push
shll
pop
leave
loope
cmp
push
cltd
pop
cmc
xor
mov
and
cmp
xor
mov
scas
and
xchg
pop
mov
adc
out
les
add
jge
jle
push
push
adc
outsl
loopne
ljmp
imul
imul
mov
xchg
sbbl
jne
add
adc
mov
cltd
pop
bound
in
rorl
dec
insb
sbb
mov
jns
mov
cs
add
mov
xor
sarl
dec
imul
scas
push
in
outsl
loop
mov
fs
aad
adcb
dec
pusha
stos
scas
and
lcall
push
sbb
loop
jnp
int3
lds
sbbl
outsb
jp
jno
or
jg
or
push
call
jl
xor
loope
rol
es
repnz
test
inc
imul
pop
pop
movsb
pop
xor
mov
lock
pusha
rcrl
adc
int3
ds
mov
mov
mov
xor
addl
pop
cmp
xlat
jge
mov
cmpsl
lahf
scas
xorb
pop
js
iret
mov
sbb
nop
mov
sbb
jp
pop
mov
dec
jge
inc
imul
in
stos
push
daa
into
gs
push
push
push
insb
jmp
out
scas
sub
gs
sbb
js
pushf
pop
nop
or
xor
ja
or
shrb
sub
sub
add
lods
and
lock
das
push
xchg
das
adc
data16
lcall
in
repz
push
nop
and
adc
ss
push
jecxz
xor
or
addr16
out
mov
mov
adcl
mov
sub
pop
cwtl
stc
xorl
xchg
shl
xor
inc
dec
sti
sbb
lahf
sbb
mov
cltd
xor
into
sbb
outsb
out
call
outsl
xchg
add
fsubs
or
adc
lea
inc
adc
push
dec
enter
jne
into
test
or
lcall
jl
cmp
sti
lods
clc
cmp
pop
shll
push
dec
mov
xlat
fucomi
xorb
loop
xchg
push
sub
mov
push
fs
or
js
jae
cld
sbb
rcrb
outsl
dec
mov
xorl
xchg
xor
shrb
aaa
cltd
test
adc
inc
xor
jle
inc
pop
inc
xor
fwait
test
jecxz
ret
in
pop
pop
push
gs
and
outsb
add
push
add
arpl
sbb
jge
lret
outsb
lahf
adc
sahf
sbb
add
rolb
pop
pop
dec
inc
bound
data16
mov
scas
push
inc
xchg
xchg
mov
xorb
pop
jp
xor
ret
aas
pop
jl
test
inc
lea
push
stos
repz
jmp
lods
mov
in
xlat
xorl
into
inc
sbb
xor
push
lods
nop
jmp
adc
in
js
inc
add
loopne
cmp
addr16
cmpsl
mov
dec
cmp
cmp
mov
fs
popa
xchg
mov
bound
lret
cmc
outsb
ljmp
pop
inc
or
addr16
mov
shlb
pop
lds
or
pop
xor
loop
xlat
jecxz
sub
add
out
mov
testb
test
sub
jbe
push
mov
repnz
in
movsb
jmp
jmp
sbb
jb
push
mov
cs
mov
daa
mov
adc
mov
ficomps
mov
and
fsubrl
sub
pop
dec
into
sbb
mov
outsl
cmp
sbb
sti
pusha
sub
repz
loop
aas
loope
push
sbb
iret
scas
enter
adc
pop
pop
cmp
je
in
les
out
xchg
adc
sub
mov
dec
xor
clc
shll
fsubr
iret
jnp
repz
scas
lds
aad
push
sahf
addr16
jne
mov
popf
dec
arpl
xchg
inc
dec
and
xchg
jno
sbb
test
xchg
adc
cmc
jl
cmpsl
pop
loopne
pop
outsl
mov
faddl
xor
xchg
sbb
or
add
imul
in
pop
mov
adc
pop
aam
mov
sbb
cmp
cli
xchg
adc
int
mov
repz
sub
ficomps
js
mov
js
dec
in
shlb
pop
dec
dec
sub
outsl
adc
adc
sub
loopne
mov
gs
pop
mov
push
stos
adcl
xor
add
and
mov
xor
push
sub
pop
jns
dec
pop
sahf
push
lock
pop
popf
imul
xor
xor
add
ret
repnz
mov
int3
hlt
outsl
add
mov
ret
mov
jne
ret
enter
ljmp
cld
pop
lahf
mov
lret
mov
and
xor
je
hlt
ret
ds
sub
imul
pusha
int3
mov
jmp
rorl
sbb
push
fwait
ret
xor
aas
stos
sarb
scas
andb
or
sbb
mov
jbe
cmp
loope
dec
xor
vcvtsd2si
xor
dec
negb
adc
loope
sub
mov
iret
jmp
mov
flds
outsl
clc
sub
mov
scas
daa
loop
int
fnclex
aad
cmpsl
insb
mov
mov
pushf
dec
sahf
pop
and
pop
cmp
xchg
outsb
in
sub
dec
cmp
fsub
insl
dec
inc
mov
push
aaa
add
aad
cmp
push
xor
ficomps
adc
jbe
mov
out
pop
ja
loopne
in
popa
clc
mov
ja
and
sbbb
push
sub
inc
and
test
jne
push
mov
test
ds
rcrl
les
jno
mov
pop
cli
daa
xchg
test
aad
repz
lods
xorb
stc
lret
xchg
jae
aam
mov
cmpsb
test
jno
jne
gs
ret
shl
sub
mov
scas
and
lret
cs
es
in
std
call
and
xchg
outsl
dec
jmp
stos
data16
xor
mov
loope
outsb
hlt
ret
sbb
pop
jne
dec
out
loope
addb
sbb
pop
rol
movsb
and
in
xchg
dec
inc
ret
and
mov
test
pop
and
push
push
lcall
adc
aaa
pop
adc
or
adc
jne
push
hlt
out
jmp
popf
js
loop
loop
rcrl
popf
stos
repnz
xlat
scas
xorl
add
rclb
cs
sti
mov
aaa
cmc
cld
inc
adcb
testl
lcall
in
add
js
nop
outsb
jne
pop
adc
dec
mov
mov
sub
aad
sbb
int
mov
loopne
xor
jno
sbb
inc
pop
cmc
sahf
out
leave
add
loopne
add
pop
cmpsb
adc
es
lods
hlt
fists
inc
mov
dec
fcmovne
fcoms
adc
xchg
mov
cmp
scas
push
mov
sbb
addr16
das
outsl
lock
sub
sub
jae
and
and
or
daa
adc
cmp
mov
jbe
adc
cmp
xchg
cs
stc
xor
sub
enter
iret
in
xchg
push
push
add
cmpsl
push
mov
call
mov
ljmp
pop
in
sbb
fcmovb
add
stos
add
call
inc
push
les
and
mov
sbb
iret
mov
stos
aam
rorl
sbb
clc
aad
push
call
popa
shll
mov
stos
faddl
testb
sbb
jbe
cmp
into
add
out
popa
adc
inc
outsl
movb
push
xchg
cs
cwtl
movsl
mov
pop
icebp
lods
or
push
je
dec
sub
mov
xchg
sub
and
jecxz
adc
inc
push
fdivrs
enter
test
inc
insb
popa
pop
lcall
in
idivl
xlat
dec
pop
lods
mov
mov
inc
sub
pop
rorb
ja
mov
add
movsl
sbb
fistps
pop
es
out
addr16
push
incb
insl
ret
nop
jnp
incl
push
pop
outsl
xor
push
shll
incl
aad
add
cmp
sarb
movsb
push
pop
lret
es
mov
pop
in
imul
lahf
lret
cmp
push
push
subl
mov
and
mov
cmp
enter
cld
out
cli
mov
ret
jg
lcall
std
push
lods
lret
xchg
shr
mov
sbb
pop
mov
xchg
sub
pop
mov
lret
cltd
imul
mov
imul
ljmp
lahf
lahf
add
out
lock
js
and
gs
jle
cmp
push
jne
in
dec
lods
ja
fstps
add
popa
xchg
cwtl
out
pop
sbb
add
mov
lcall
movsl
faddp
sub
arpl
jle
flds
mov
ljmp
iret
loop
cltd
out
mov
mov
cmp
fists
push
lcall
mov
fsubr
and
pop
pop
inc
xlat
or
dec
and
mov
mov
or
and
mov
adc
jbe
test
out
cmp
aas
loop
shl
jo
clc
loope
mov
inc
fisubs
mov
and
xchg
sbb
mov
loope
lods
jge
sub
cmp
test
sarb
pop
ja
push
test
test
and
pop
inc
outsb
clc
jecxz
aaa
jmp
cmp
icebp
and
pusha
std
xchg
inc
adc
inc
insb
fildl
dec
push
add
sub
aaa
cmp
ljmp
int3
movups
outsb
rcrl
smsw
enter
scas
idivl
fldenv
mov
xchg
leave
mov
mov
mov
mov
lods
mov
push
push
nopl
ss
in
out
xchg
pop
sbb
insl
lods
dec
leave
jle
add
popf
cltd
aam
mov
mov
cli
pop
in
repnz
or
cmpsl
lahf
mov
insb
sbb
add
movd
dec
push
jecxz
dec
xor
pop
and
adc
adc
in
xor
xchg
add
lods
add
js
fxch
imul
ljmp
adc
or
or
mov
dec
lahf
lret
cltd
fs
sub
or
pop
aam
mov
sbb
data16
jl
int3
jl
inc
pop
mov
jge
inc
push
dec
jg
mov
mov
xor
pushw
cli
popa
cs
sbb
aas
lcall
icebp
or
out
sbb
sarb
add
sbb
jo
mov
xchg
shll
iret
iret
cmp
xchg
stc
sahf
das
cmpsb
push
outsl
mov
imul
pop
cwtl
mov
fcmovne
mov
xchg
hlt
fidivrs
add
cmp
jge
mov
dec
out
mov
sahf
push
mov
pop
rcr
xor
jmp
mov
mov
aad
pop
jle
popa
mov
add
div
ret
lcall
aaa
jbe
push
loopne
ret
add
stc
data16
adc
and
movsb
adc
mov
fucomip
lods
adc
mov
popa
stc
and
sbb
or
jle
testw
xor
imulb
cli
jl
cld
cld
cwtl
mov
push
aas
popa
pop
loop
rcl
lahf
mov
pop
scas
ret
shrl
sub
pop
cltd
xchg
jmp
cs
daa
push
addl
jg
mov
jecxz
bound
mov
jne
jecxz
repz
das
sub
pop
nop
movl
mov
imul
lret
cmp
ds
pop
pop
adc
and
pop
fistps
or
cwtl
fiaddl
push
pop
stc
cld
les
mov
sarl
aam
lea
mov
mov
jne
push
and
sahf
dec
push
test
fmull
mov
and
jg
sbb
xor
jg
int
mov
xchg
inc
pushf
xor
xchg
loop
jns
pop
adcb
push
roll
fwait
outsl
xchg
ror
cmp
leave
xlat
pusha
pop
cli
sub
fstpt
ds
jns
out
pushl
mov
test
pop
outsb
loope
icebp
daa
mov
pusha
sahf
dec
sbbl
sub
mov
pop
ret
jnp
mov
jl
iret
movsl
push
or
scas
add
adc
xchg
shlb
mov
jbe
repnz
jb
pop
push
jo
sub
fcoms
inc
pop
sbb
push
or
iret
popa
lds
pop
add
rolb
movsl
sbb
int3
jb
inc
adc
xor
aas
push
imul
and
jmp
xor
mov
rcrl
mov
fcompl
bound
into
int
jns
mov
and
cmp
sbb
mov
ss
fildl
aas
push
push
cmc
inc
or
leave
dec
add
xor
rolb
mov
call
cwtl
jmp
xchg
xchg
mov
mov
aam
sub
mov
fstpt
ds
cmp
lret
stc
xlat
mov
mov
and
inc
xor
add
in
movsb
rolb
mov
push
idivb
push
add
jp
std
lods
xor
pop
jb
dec
hlt
out
xor
ja
scas
test
andb
loope
mov
mov
or
mov
xchg
pop
mov
mov
cmp
mov
sbb
fs
inc
sbb
jne
les
jne
adc
aam
ficomps
adc
fsubrp
pop
xchg
mov
ljmp
incb
dec
cmp
mov
cwtl
loopne
call
xchg
lahf
popf
test
sub
gs
xchg
test
in
jnp
out
and
cs
fidivs
icebp
push
xchg
imul
inc
inc
jno
movsl
psubsb
out
int
or
jns
popa
enter
fildl
jnp
or
pop
mov
je
add
arpl
aam
inc
add
lds
es
out
rcrb
mov
inc
aad
mov
jecxz
push
or
fsts
or
mov
and
push
call
xlat
dec
ret
orb
loop
rcrl
es
rorb
mov
sub
ljmp
sub
ss
xchg
out
xor
xor
sub
sub
pop
pop
lods
addl
repz
popl
ss
or
pop
mov
pop
pop
add
fists
xacquire
push
test
outsb
lahf
fnsave
or
fnstsw
cwtl
test
and
inc
xchg
mov
mov
push
dec
cs
push
es
loope
xchg
pop
repz
jle
mov
fs
push
jnp
sbb
mov
popf
scas
cmp
sub
fistpll
shll
inc
test
fwait
ret
xor
test
sbb
std
dec
sbb
inc
sahf
xor
mov
insl
out
je
add
imul
xchg
lods
lcall
push
mov
add
push
inc
push
scas
push
subb
mov
aam
cmc
mov
sub
dec
xor
or
fistpll
jne
popf
mull
test
jbe
lods
dec
insb
pop
cltd
inc
fcomps
call
xor
mov
mov
mov
and
mov
and
std
movsb
adc
xor
gs
sbb
xor
imul
adc
rcr
jo
or
mov
jg
mov
mov
jle
mov
lret
leave
mov
inc
jmp
pop
out
pop
cmp
cmp
sbb
push
pop
dec
inc
shll
ret
mov
aas
mov
stos
push
jb
mov
push
daa
inc
fsubl
popa
lods
scas
in
lds
movsl
dec
xchg
xchg
dec
loop
pusha
sub
scas
xchg
pop
push
cmp
mov
scas
jbe
repnz
mov
fwait
cltd
mov
or
mov
xorb
dec
cmpsl
and
into
cmpsl
cmc
add
mov
xchg
into
push
or
jg
lret
push
sub
mov
mov
jnp
jnp
ficompl
xchg
and
jle
imul
imul
sub
and
movsb
pop
mov
addr16
imul
jno
inc
pop
shll
shlb
push
cmpsb
sub
mov
mov
add
pop
stos
movb
or
cmp
mov
insl
stos
fwait
sub
dec
ret
loope
pop
repnz
cs
ja
std
int3
arpl
testl
sbb
cmp
mov
adc
and
out
stos
sbb
rclb
lea
nop
outsb
adcb
fsubrl
test
cmpsb
and
dec
fiaddl
cmp
push
frstor
ljmp
cmp
cmc
scas
sbb
jmp
shll
and
sahf
push
pop
test
lea
mov
shl
fnstenv
mov
push
inc
xor
or
mov
dec
cmp
cwtl
add
mov
and
pop
cmp
dec
ficompl
rolb
or
lret
aad
aad
das
gs
jg
orb
sahf
inc
ds
fmuls
adc
jge
fwait
adc
cs
add
mov
push
hlt
mov
push
lret
pop
and
test
dec
ss
aas
shr
mov
sbb
jno
mov
pushf
sahf
sub
pop
adc
xlat
mov
push
cmp
sbb
add
outsb
or
out
arpl
cltd
add
sub
cli
xchg
cmp
fmul
ljmp
stos
sbb
add
sbb
sbb
ret
or
int3
je
aad
fnstenv
sar
push
insl
call
stos
ret
adc
scas
js
dec
lahf
sub
clc
je
xlat
enter
daa
notl
idivb
jns
or
mov
jnp
sahf
push
sahf
xor
out
mov
cmpsb
ficompl
cmp
pop
mov
push
subb
dec
movsl
mov
lods
pop
fisubl
sbb
mov
icebp
mov
imul
pmuludq
lds
adc
or
jl
mov
pop
int3
nop
sub
je
faddl
pop
add
sub
mov
mov
or
xlat
xchg
dec
push
outsl
jp
sbb
out
add
mov
pusha
ljmp
jno
pop
popa
clc
pop
in
fcmovnbe
push
fs
jbe
loope
mov
add
inc
test
push
lods
or
or
and
mov
das
das
jle
mov
daa
lcall
test
cmp
or
add
imull
mov
add
mov
adc
loop
mov
sbb
mov
cmp
stos
sahf
cmp
aas
pop
mov
int
outsl
das
pusha
add
sahf
mov
add
jle
mov
mov
cli
inc
push
divl
jg
div
or
std
out
enter
gs
inc
sub
jg
jmp
icebp
test
jecxz
xor
mov
add
ret
loopne
push
stos
pop
leave
mov
cmp
sub
pop
imul
mov
or
les
stc
xchg
sub
cld
mov
xchg
mov
dec
sub
sbb
jae
mov
out
adc
lods
nop
sbb
test
mov
js
scas
loop
push
cli
sti
push
mov
adc
outsl
bnd
mov
xchg
push
jne
lret
aaa
les
cli
add
rcl
cmp
js
add
sub
clc
pop
inc
inc
cmpsb
jp
sub
es
sub
loope
out
jmp
sbb
or
jg
pop
mov
push
nop
shlb
mov
outsb
cmp
int3
clc
out
fistl
in
sti
popf
dec
inc
inc
xchg
inc
mov
and
xchg
lods
push
imul
xchg
jns
pop
cmc
das
test
and
fsubl
mov
adc
xor
repnz
int3
sahf
cwtl
xchg
iret
mov
xlat
mov
dec
jo
adc
and
les
or
loopne
or
add
pop
pop
test
cmp
aaa
adc
daa
push
inc
test
push
jecxz
lods
mov
lcall
add
ja
pop
add
gs
inc
arpl
cmp
xchg
ret
cld
add
jle
inc
add
sahf
testb
out
xchg
call
sti
sub
mov
xor
fs
sar
xchg
pop
insb
adc
jno
leave
dec
xchg
pusha
and
mov
mov
ds
mov
orl
mulb
jo
mov
mov
sub
scas
cli
sub
push
mov
dec
jno
xchg
ss
pop
sbb
sub
pop
int3
push
fisttpll
sub
js
sbb
xlat
pop
je
scas
push
xor
mov
test
xchg
aam
loopne
xlat
sub
scas
cmp
mov
adc
fs
daa
adc
in
push
gs
sbb
cmp
sarb
in
movsl
mov
pop
fimull
xchg
lret
sbb
ret
sbb
js
mov
jbe
mov
dec
gs
out
loope
adc
mov
xor
xlat
push
inc
clc
push
cli
mov
fistpl
mov
jmp
mov
xchg
push
push
adc
imul
jnp
outsl
test
sbb
dec
or
ret
sarl
push
jge
xor
jns
sub
jmp
aaa
add
mov
or
insl
dec
mov
push
mov
and
cmp
scas
lods
mov
pop
pop
add
xchg
div
int
pop
jmp
mov
iret
sbb
cmp
mov
addr16
and
mov
pop
std
clc
fsubs
insl
xchg
mov
cld
test
ss
mov
mov
xchg
pop
pop
dec
pop
cld
jne
leave
inc
push
scas
sub
fsubrl
pop
mov
sub
mov
dec
pop
ret
ret
in
int
mov
in
std
outsl
push
pushf
ret
jle
gs
dec
jo
and
mov
data16
and
push
mov
cmp
jmp
lods
jecxz
sbb
xorl
cmpsl
fisubs
inc
mov
sbb
lods
faddp
call
subl
and
sbb
mov
dec
mov
int3
or
cld
inc
je
nop
rcr
push
fisubrs
lea
frstor
xchg
mov
push
rorl
push
xchg
ja
lcall
dec
pusha
outsb
add
rcll
pusha
jno
sbb
or
adc
pop
nop
push
adc
mov
daa
test
push
lcall
and
dec
gs
mov
cltd
mov
push
and
sub
fmuls
test
add
xchg
outsb
push
idivb
push
sahf
push
xchg
outsl
pop
pushf
or
shlb
cmp
mov
mov
icebp
mov
or
sbb
dec
mov
jecxz
push
jge
or
call
or
xchg
fbstp
inc
cmp
gs
or
cmp
push
fwait
add
imul
mov
adc
cmc
pop
lea
popa
mov
lods
pop
and
adc
in
cltd
sarb
push
ss
aaa
ds
push
stc
insl
mov
cmp
sbb
lods
arpl
xchg
ja
cmp
pop
sub
and
pushf
scas
push
pop
imul
repnz
insl
addr16
add
inc
fdivrs
xchg
lahf
outsl
arpl
arpl
mov
out
mov
gs
jb
push
cmpsb
scas
adc
and
insl
sti
and
jo
dec
sub
rsqrtps
xorl
js
jecxz
add
outsb
out
pop
lods
inc
test
test
scas
outsl
or
test
adc
xchg
dec
pmovmskb
lods
aaa
adcb
dec
and
cmp
and
pop
jecxz
orb
movsb
adc
push
xor
inc
mov
jge
popf
sbb
dec
shll
mov
iret
or
push
pop
fcompl
cwtl
or
scas
sub
pop
xchg
outsl
xchg
jbe
jmp
mov
push
daa
ret
rorl
int
lcall
sub
mov
daa
xor
ret
int3
mov
int
mov
mov
gs
mov
scas
leave
push
mov
push
add
aam
in
orl
jo
mov
sbb
jbe
or
inc
psubd
movsb
ljmp
fwait
hlt
fcomps
jne
xor
jle
inc
in
or
push
mov
sbb
movsb
inc
or
in
loop
mov
lods
sub
pop
push
xor
test
xchg
test
stos
testl
xchg
xchg
xchg
add
inc
rcr
outsb
pushf
shrl
fcoms
jnp
push
adc
arpl
pop
pop
out
stc
jge
pop
cmp
lds
inc
insb
andb
push
mov
xchg
js
cmpb
shrb
out
push
ret
inc
cld
iret
popf
fstpl
rolb
adc
movsl
ljmp
pop
imul
sbb
push
adc
adc
dec
in
mov
in
dec
jge
jge
jl
out
fcmove
push
stc
imul
lret
pop
pop
aam
mov
jle
pushf
fs
pop
out
mov
xor
sub
clc
xchg
push
loopne
sbb
xchg
andl
xchg
ror
test
cli
or
lcall
xor
or
inc
loope
and
cmpsl
pusha
push
sti
test
adc
push
add
xor
adc
mov
push
testw
das
jmp
add
and
test
or
or
fucom
sahf
outsl
jns
mov
lods
fidivrl
aaa
xchg
pop
push
mov
sbb
sarb
imul
adc
inc
das
push
cmp
scas
push
jbe
jge
cmp
out
mov
sbb
incl
or
xor
iret
popf
pop
shrl
jb
push
sub
fldt
in
rclb
fldenv
sub
fidivl
mov
sbb
push
in
fdivrs
mov
dec
inc
dec
xchg
mov
pusha
pop
xchg
inc
nop
loop
pop
or
data16
dec
cwtl
dec
lret
jl
cmp
test
pop
jo
jbe
inc
jmp
push
xchg
orl
add
ret
out
js
jecxz
stos
sbb
cli
lcall
orl
nop
adc
jecxz
cmp
dec
add
iret
lcall
mov
test
das
fldt
add
adc
jmp
rorl
stos
push
mov
sub
rorb
cmpsb
lods
sbb
sarb
jl
mov
lcall
sub
cli
cmpsb
fcom
mov
sti
adc
dec
xor
pop
mov
pop
mov
mov
data16
sub
push
mov
mov
mov
imul
popf
js
jle
dec
or
jg
jmp
insl
je
dec
lea
out
adc
pop
rclb
push
aad
std
call
in
jae
loop
dec
outsl
cmp
cmp
es
cmp
movsl
fnstcw
hlt
cmp
pop
enter
les
xchg
jp
stos
int
lahf
dec
nop
fiadds
push
imul
pop
aam
dec
lods
pushf
dec
fisubrs
pusha
pop
cmp
lock
and
and
rcl
jmp
hlt
ss
lea
adc
mov
hlt
fwait
push
push
jae
idivl
fdivrl
cmpsb
add
mov
dec
jecxz
and
fcmovnb
sub
cmp
push
in
adc
cli
aad
and
cmp
je
push
jge
or
add
inc
ret
xchg
leave
sbb
jbe
iret
cmp
pushf
aas
fildll
jo
sbb
lods
movsl
cli
xlat
or
call
push
std
hlt
sbb
xchg
call
xlat
cmp
xchg
ret
fs
xchg
fisttpl
in
cmp
inc
and
adc
lods
sub
push
repz
jbe
add
mov
rorb
fs
xor
lea
in
scas
sub
sub
push
cpuid
imul
sbb
mov
cltd
js
inc
add
cmp
sbb
dec
add
push
sbb
icebp
sbb
xchg
rorb
addr16
jg
ffreep
into
cmpsb
jns
sub
bswap
adc
inc
push
inc
mov
icebp
mov
stc
sub
xchg
mov
pop
scas
cwtd
xchg
jl
jle,pt
jns
pop
adc
test
xor
lret
xchg
cmp
push
xor
add
ds
xor
fldl
sbb
sarb
mov
sub
inc
lock
loope
add
rcll
lock
mov
shll
mov
call
into
shlb
jo
ror
jb
cmp
enter
mov
pusha
pop
fsubl
push
das
test
mov
dec
cmp
sbb
sti
add
ljmp
in
inc
pop
je
cltd
rclb
push
fcmovnb
cld
in
in
push
movsb
lods
mov
sbb
shlb
mov
out
sbb
xor
jo
repz
fcomps
repnz
shl
mov
push
inc
pop
je
mov
and
enter
mov
pop
repnz
push
hlt
sbb
cld
aad
jo
xchg
sub
popf
popf
dec
mov
fmul
mov
jno
cmpsb
leave
mov
cmp
out
xchg
dec
xchg
cli
jl
in
movsb
rcrl
xchg
lahf
lock
outsb
adc
sti
in
ffree
pop
andl
and
and
inc
push
ja
mov
xor
push
jae
sub
pop
dec
add
xorb
aam
mov
stos
imul
cmp
sbb
pop
xchg
fsubrl
mov
cli
aaa
mov
int
test
enter
and
cltd
push
rorl
xchg
and
insb
faddl
popa
int
sub
hlt
enter
cltd
xchg
adc
sub
pop
pop
or
movsl
sbb
dec
push
imul
cmp
mov
lret
jecxz
adc
mov
ja
xchg
push
mov
mov
in
mov
rorl
mov
xlat
in
test
nop
icebp
stos
fildl
loope
sub
cmpsb
repz
sbb
cmp
mov
in
add
or
adc
push
lea
push
ds
fsubr
cmp
add
fnstcw
mov
adc
or
sub
pushf
push
sbb
push
pop
sbb
jnp
xchg
dec
rcll
js
sbb
dec
fs
mov
sub
in
sub
dec
ret
std
cmp
and
scas
out
sbb
aam
mov
cmp
mov
pop
jae
and
mov
out
cmp
mov
ljmp
aad
or
xchg
shll
outsb
int3
out
xchg
inc
fdiv
mov
xchg
and
jmp
int3
ja
call
sub
jge
and
pop
dec
mov
fisttpll
sub
jnp
lods
lahf
xor
jbe
mov
inc
js
outsl
ljmp
adc
ret
pusha
inc
add
inc
bound
jge
adc
inc
insl
push
loopne
add
adc
pop
es
sbb
mov
sbb
arpl
xchg
push
jo
in
scas
int
sti
and
pop
pop
lret
mov
pop
lea
xchg
test
int3
and
std
pop
shrb
push
jbe
adc
pop
aam
sub
out
in
cwtl
cli
cld
loopne
ss
btr
dec
rorl
pop
sbb
jno
cwtl
hlt
jg
or
or
fistps
add
lret
pop
jae
mov
mov
lahf
dec
push
add
mov
lds
cld
dec
add
jnp
cmp
int3
out
pop
cs
sbb
pop
xchg
cs
ja
cld
or
push
repnz
movzbl
lods
in
iret
lahf
inc
xchg
daa
push
lret
mov
jo
leave
jl
lret
aam
mov
lods
lret
cltd
rcl
leave
test
pop
cmp
test
jecxz
fs
insl
xchg
dec
shlb
push
jp
xchg
xor
dec
inc
pop
icebp
cld
push
mov
movsb
in
out
adc
push
lods
and
cs
aad
add
aam
mov
lret
shll
xor
cmp
dec
cmp
bound
mov
push
mov
xor
lcall
cmp
jne
daa
push
mov
pop
repnz
pop
push
cmp
fistps
aaa
add
outsb
popa
cld
mov
movsb
inc
icebp
dec
cmp
push
pop
lahf
xchg
push
mov
or
mov
outsl
xchg
popf
mov
xchg
loop
add
dec
pop
insb
mov
jns
ffree
call
cmp
stos
stc
shrb
rcrl
test
jno
in
xlat
lds
mov
sbb
mov
sub
and
inc
mov
pop
lcall
jnp
ja
and
popa
imul
cmpsb
mov
jp
frstor
mov
adc
and
add
cs
cmp
push
ret
adcl
cmp
push
pushf
dec
pop
push
leave
ret
xor
pop
into
mov
mov
shrb
push
inc
sub
iret
jb
pop
ds
movsb
xor
or
cli
push
rolb
movsb
loop
sbb
rcr
mov
out
mov
rol
dec
push
add
fisttps
call
test
adcb
sbb
into
and
fbld
lret
dec
repz
addl
or
addr16
push
stos
push
sbb
cli
mov
scas
push
stc
add
outsb
mov
inc
jo
das
hlt
sub
sub
js
arpl
test
aaa
imul
popa
hlt
adc
push
cwtl
xor
lcall
out
dec
mov
jmp
imul
gs
ret
imul
clc
mov
xor
adc
and
pop
or
je
mov
jle
pop
mov
mov
inc
lret
jb
inc
stos
fistpl
stos
repz
push
inc
push
push
adc
into
pop
dec
and
ja
gs
ja
mov
add
test
fwait
mov
cmpsl
cmpsl
arpl
mov
push
xchg
mov
inc
rcrb
and
and
dec
rorl
xor
pop
cmp
push
adc
dec
mov
subl
pop
add
es
xor
pop
pop
xor
mov
mov
push
sub
xor
cs
mov
xlat
cwtl
dec
bnd
sub
xchg
outsl
int3
es
fisttpll
out
jo
pusha
popa
cmp
fidivrs
mov
or
dec
pop
mov
or
xor
imul
pop
push
sub
sub
out
ret
bound
jnp
mov
leave
pop
mov
outsl
dec
xchg
ds
fldenv
sar
xchg
inc
cltd
push
mov
leave
and
sti
addr16
push
cmp
mov
stos
shrb
das
jnp
imul
outsb
fsubrs
mov
popl
xlat
test
int
pop
pop
pop
pop
xor
lods
jecxz
push
arpl
dec
jb
mov
icebp
jp
dec
pop
inc
cmpsb
fldl
shrl
scas
push
lea
sub
sub
hlt
push
inc
ja
gs
inc
or
das
sbb
lea
imul
out
push
add
push
scas
rclb
mov
jge
mov
push
xchg
sub
mov
insl
inc
jcxz
insb
movsb
sub
loope
jg
cs
popf
xchg
mov
subb
test
xorb
lds
jge
aam
sbb
adc
dec
jno
mov
jns
inc
fcoml
std
inc
sub
cmc
idivl
adc
jl
cmpsl
adc
cmpb
sub
mov
pop
repz
mov
int3
or
mov
mov
stos
pop
pop
scas
inc
hlt
xchg
aaa
cmp
in
out
call
adc
ds
or
xor
mov
in
pop
inc
pop
popl
daa
mov
mov
mov
mov
cli
cmp
and
enter
and
ljmp
in
dec
fwait
in
je
loope
jmp
push
mov
clc
sbb
sub
test
lret
push
jmp
les
rcll
add
push
cmp
mov
jns
popa
or
iret
aad
pop
or
inc
jne
jge
loop
ja
cli
hlt
filds
lods
jbe
mov
adc
dec
xchg
cmp
or
mov
cmp
stos
push
dec
addr16
into
into
imul
test
jae
mov
xor
mov
or
xchg
repz
cmp
inc
mov
mov
lds
shll
test
in
aaa
int
jnp
rcll
xchg
xor
xchg
sub
or
dec
dec
xchg
xor
loopne
and
push
mov
out
cmp
cmp
fnsave
out
div
rclb
push
scas
mov
add
fcomp
xchg
dec
test
into
and
inc
imul
pop
jno
pushf
clc
pusha
mov
testl
add
shrl
push
jmp
add
or
inc
mov
andl
stos
js
xor
leave
outsl
jmp
xorl
in
mov
fadd
jne
fiaddl
xchg
movsl
cmc
sub
cmp
outsl
cmp
pop
arpl
sbb
cmp
xor
into
lods
dec
add
sbb
cmpsb
push
jmp
jo
lods
sbb
cwtl
or
pushf
pop
inc
inc
push
jp
push
test
adc
cltd
mov
scas
sbb
aad
mov
stos
push
add
and
fs
pop
data16
cmp
pop
subl
nop
sti
daa
std
sarl
out
push
rorl
push
mov
bound
mov
pop
adc
jp
ret
cs
pusha
pop
test
in
pusha
lock
test
mov
imul
dec
int3
fwait
xor
mov
add
adc
in
mov
or
push
sbb
insl
testb
pop
push
push
and
pop
int3
pop
frstor
inc
scas
sub
xchg
sub
mov
shrb
inc
and
test
xor
dec
loop
dec
add
jle
int3
cmpsl
xchg
or
or
dec
add
mov
cwtl
cli
xchg
mov
jb
aas
ret
sbb
cmp
fbstp
shrb
mov
ljmp
shr
sbb
jae
ljmp
leave
jg
test
jnp
subb
jne
and
xchg
mov
outsl
mov
in
pop
out
inc
xor
adc
cmp
divb
ljmp
mov
mov
mov
xchg
sub
into
inc
push
push
ficompl
into
push
fcoms
aad
lahf
in
jg
inc
inc
mov
mov
out
push
push
push
lcall
xchg
je
xchg
movsl
addr16
and
inc
and
dec
pop
pop
mov
lret
xchg
popa
fs
xor
adc
add
mov
popa
jo
dec
pop
fisttps
stos
inc
add
mov
into
outsb
mov
movsb
dec
lret
repz
mov
popl
ret
cmc
jae
call
das
rcl
or
sub
test
ss
push
jne
out
fnsave
in
gs
adc
rcrb
icebp
inc
cmp
cltd
out
jg
inc
xor
frstor
hlt
pop
fildll
cmpsl
mov
cmp
mov
mov
or
inc
rol
jnp
xor
inc
pop
jmp
notb
xchg
sub
pop
mov
and
ss
cmc
push
mov
dec
mov
push
int3
xchg
fisttpl
dec
pop
and
out
pop
mov
ja
xchg
out
jmp
cld
add
popa
adc
mov
fmuls
bound
pop
jne
out
xlat
int3
adc
dec
mov
jno
out
xchg
and
jo
sub
and
push
shll
adc
outsb
idivl
in
in
xor
into
dec
inc
mov
repnz
addr16
cmp
adc
dec
and
leave
sbb
sbb
aam
sub
cmc
or
hlt
mov
adc
xchg
cwtl
sti
mov
jno
test
scas
aam
and
in
xchg
outsb
popa
jl
sub
mov
lds
add
inc
pop
xor
and
mov
inc
stc
mov
pop
pop
pop
lret
push
adc
pushf
xor
mov
or
dec
lcall
jne
sbb
jb
mov
hlt
mov
adc
jle
ja
lcall
rcrl
push
push
xchg
shll
pop
push
repz
nop
test
lahf
add
mov
jle
dec
inc
das
push
mov
mov
mov
popa
cld
dec
sub
or
lods
mov
push
xor
or
and
cmc
mov
mov
lds
mov
movsl
sub
jbe
push
dec
ja
shrd
sub
xchg
push
leave
and
loopne
aam
pop
cmpb
rol
roll
sbb
sub
ja
call
ret
xchg
cmp
jg
pop
xor
loop
js
sbbb
xor
insb
pop
movsl
shlb
or
jns
loope
adc
mov
dec
lret
xchg
bound
inc
movsl
mov
xor
xchg
rolb
stc
fisubrl
pop
dec
jno
cld
add
xchg
inc
arpl
lret
jle
or
xor
in
andl
cmp
negb
xchg
popa
leave
pop
or
mov
push
sub
cmpsb
lds
mov
xchg
jb
pop
popa
jbe
aas
mov
dec
mov
or
in
xchg
das
enter
dec
sbbl
cmpsl
push
inc
push
int
dec
test
addl
jecxz
mov
jge
mov
cmp
out
in
push
jbe
mov
je
jle
inc
daa
gs
scas
and
rcrb
rolb
out
adc
pop
jnp
bound
fsubs
or
shlb
xor
xor
dec
aad
mov
loop
mov
repz
aam
pop
sbb
repz
sub
fs
xchg
ret
mov
pop
mov
xchg
nop
xchg
cwtl
scas
push
pop
mov
bnd
aam
push
mov
push
test
push
sbb
and
hlt
jnp
shr
orb
or
subb
xchg
mov
mov
and
mov
adc
ds
mov
or
rcl
inc
and
push
add
inc
clc
mov
fwait
dec
push
aaa
sahf
pop
adc
or
mov
mov
mov
dec
fidivrl
dec
ret
sbb
jmp
or
sbb
repnz
enter
test
xchg
mov
pop
lea
mov
mov
or
shlb
inc
sub
stc
inc
add
xor
out
and
dec
cli
mov
mov
dec
xor
add
inc
mov
pop
xchg
dec
adc
inc
mull
sarb
lret
inc
jge
pusha
mov
call
inc
hlt
xor
add
jg
imul
mov
fwait
loopne
out
fs
xor
cmpsl
aas
jmp
mov
inc
xchg
adc
into
pushf
in
fnstenv
loopne
mov
cltd
pop
fmuls
push
imul
int3
xchg
in
push
iret
xor
pop
in
loopne
mov
jmp
nop
call
incb
loope
ds
pop
neg
ror
fidivs
insl
mov
fiaddl
xchg
and
xchg
push
mov
call
inc
fdivrp
pusha
cmp
xchg
rorl
add
adc
mov
int3
xchg
cmpb
xchg
fists
and
sahf
lahf
lcall
js
idivb
mov
sub
hlt
xchg
xchg
add
mov
pop
fnstenv
movsl
aas
lods
pop
sub
inc
inc
cmp
push
pop
mov
push
cmc
js
test
jo
inc
outsb
mov
icebp
and
jecxz
push
dec
fldenv
loopne
or
outsl
int
out
shll
repz
movsb
test
iret
pop
or
fs
loop
orl
mov
pop
icebp
lds
cs
xlat
mov
adc
xor
inc
roll
mov
scas
xchg
aas
les
mov
fldenv
jg
xor
shl
sbb
aam
jb
leave
xor
daa
pop
pop
inc
fisubrl
jo
jle
push
sbb
and
fisttps
dec
adc
sbb
dec
push
cmp
mov
je
mov
sub
jmp
mov
mov
pop
and
ss
adc
add
call
mov
sub
imul
dec
rcrb
data16
loopne
inc
cmpsl
popf
adc
add
icebp
in
je
jecxz
into
lds
lcall
arpl
test
cltd
dec
xor
mov
loop
pavgw
das
or
mov
sbb
push
repz
inc
mov
lea
inc
push
jl
dec
pop
cmc
in
jne
mov
jp
cmp
bound
cmp
aaa
push
cld
bound
ds
stos
sti
inc
push
clc
movsl
fs
aaa
jns
xchg
js
cmp
or
sbb
fcompl
addr16
push
movd
add
or
cmp
sbb
xor
fs
jmp
jns
shr
pop
fs
call
ss
loop
sbb
je
jmp
inc
ss
inc
jp
into
mov
cs
outsb
sarl
into
in
xchg
mul
movsb
popf
mov
repz
xchg
mov
shl
int3
pop
in
loopne
loop
cld
mov
push
icebp
shl
dec
pop
mov
cmp
mov
push
cmp
mov
mov
fisubrs
repz
std
add
imul
mov
push
repz
imul
sbb
cld
lock
xchg
push
gs
xchg
inc
out
adc
mov
pop
add
or
jmp
mov
inc
faddl
push
mov
ror
cli
add
xchg
mov
mov
sub
icebp
mulb
pop
int
rcrb
xor
nopl
xchg
arpl
sbb
or
addr16
pop
out
cmp
bnd
cld
xor
push
rcr
push
jmp
lret
mov
mov
jmp
clc
ret
adc
cmp
andb
mov
push
dec
ljmp
push
fs
dec
adc
push
pop
fprem1
push
sbb
daa
cmp
xor
inc
cmp
fimuls
jb
nop
cmp
sub
orb
mov
or
bound
and
pop
mov
je
imul
fsub
cmp
cld
push
repz
jle
rclb
xor
test
test
mov
gs
lods
pop
adc
inc
out
int3
xchg
mov
or
out
imul
push
dec
inc
mov
enter
aad
aad
out
pop
rorl
cmpsl
xor
cli
movsl
ss
in
insl
mov
aaa
inc
cltd
insl
ss
sahf
inc
cwtl
cmp
adcl
sbb
insb
push
imul
fisubs
shrl
les
pop
enter
pop
jle
and
lret
jae
in
or
sbb
pop
ror
mov
fstpl
add
sbb
in
popa
push
inc
ret
or
das
popa
incb
xchg
faddl
mov
sub
jle
jmp
in
and
sbb
jp
aad
out
xchg
loopne
add
loopne
xor
lds
cmp
aas
fmull
sub
xchg
inc
xchg
addl
xor
leave
add
cli
imul
testl
jmp
in
lcall
xchg
cmpl
mov
mov
call
dec
in
outsl
cmp
shr
bound
mov
cli
mov
lock
cli
test
adc
and
mov
xorb
jecxz
mov
lds
dec
mov
test
jo
mov
sti
push
jb
addr16
rorb
dec
jae
arpl
dec
ret
jbe
rcll
icebp
and
lahf
xlat
mov
fwait
add
rorb
mov
or
call
inc
out
inc
dec
addr16
add
cmp
inc
lods
jmp
mov
cmp
rorb
jmp
lods
push
cmp
cmp
sar
mov
xor
divb
adc
add
sahf
pop
imulb
fdivrs
js
rcrl
fcoml
and
lea
test
xchg
mov
lods
mov
sbb
xor
shr
stos
outsb
insb
aaa
jg
testb
mov
push
scas
out
sub
mov
aaa
inc
fstps
mov
pop
jl
mov
xor
dec
sub
mov
xchg
imul
sub
sbb
das
sbb
dec
dec
xchg
rcr
in
mov
addr16
mov
call
in
lods
xchg
mov
popf
ret
lods
jle
xor
es
jp
push
data16
out
xor
inc
pop
addr16
xchg
das
daa
inc
dec
xor
jl
aaa
add
aaa
xchg
cmp
fidivl
dec
lods
orb
fstl
inc
jns
shrb
xchg
mov
mov
addb
jge
inc
or
dec
jo
subl
push
cmc
nop
fisttpl
lcall
cmpsb
mov
or
mov
pusha
sub
xor
cmpsl
std
xor
cmc
mov
popa
jp
jnp
xchg
out
andb
push
push
data16
pushf
sub
pushf
jecxz
mov
cmc
cmp
inc
mov
xchg
popf
cmpsl
xor
mov
inc
scas
lret
or
cmp
or
das
mov
dec
push
xor
addr16
mov
adc
pop
push
pop
repz
inc
mov
inc
in
jbe
loope
jnp
jnp
lahf
lea
jnp
xchg
push
aam
sarb
jle
sarl
push
adc
pusha
das
hlt
xchg
xchg
movsl
jae
test
cmp
mov
shrl
js
fsubs
pusha
test
inc
es
fwait
jnp
movsb
int3
ficoml
mov
stos
int
push
out
cli
inc
add
dec
xor
mov
lcall
mov
dec
test
test
mov
jo
cmp
sub
lods
repz
jp
aam
lahf
xlat
shr
int
jg
out
pop
xor
jns
lret
xchg
shlb
test
cmpsb
mov
adc
xchg
outsl
mov
incb
adc
test
push
xchg
mov
adc
in
pop
in
test
push
inc
lret
adc
push
sti
push
cltd
pop
shrb
pushf
cmp
lock
ret
pop
dec
xchg
dec
inc
mov
cmp
adc
mov
pop
mov
push
mov
enter
pop
add
cmp
mov
scas
fisttpl
and
adc
fldt
addb
lret
cmp
or
insl
rclb
lahf
fldenv
dec
jb
or
test
xor
scas
mov
push
sub
jne
cmp
dec
pop
pop
jle
shlb
movsl
push
jno
mov
je
fisubs
std
cwtl
lea
adc
xor
loop
mov
inc
iret
rolb
mov
inc
scas
lods
aaa
dec
popa
jne
push
adc
lock
mov
jbe
lahf
stc
ljmp
jb
andl
cmp
jbe
xchg
xchg
inc
lahf
and
xor
lods
dec
fiaddl
xor
or
push
ror
ljmp
and
dec
sahf
loopne
bound
dec
dec
test
sbb
mov
cld
mov
in
or
cmp
sarb
jns
mov
sub
mov
aas
dec
mov
das
lea
jae
mov
sbb
cltd
aam
ljmp
sbb
sub
push
jecxz
outsb
cwtl
cs
adc
push
mov
ret
cmp
test
and
fsubrs
test
int3
and
lret
rcr
jb
in
push
xorb
and
fwait
aad
push
lcall
xchg
adcl
or
or
into
stos
xchg
shll
or
pushf
inc
subb
insb
xor
jno
subl
cmp
mov
into
inc
mov
das
iret
les
push
push
push
daa
add
lcall
jg
rolb
add
xor
in
sub
sub
lock
sbb
je
jns
sub
mov
lret
enter
push
jae
adc
mov
pop
js,pt
mov
xor
movsl
mov
xchg
ror
mov
fldt
pop
popf
adc
pop
inc
sbb
cmp
pop
dec
pop
sub
stos
sub
lods
stos
negb
hlt
push
mov
xchg
movsb
xorl
lret
fwait
jp
xchg
pop
mov
daa
add
cmp
xlat
sub
fwait
add
mov
inc
inc
sbb
xchg
int3
lods
xor
insb
xchg
scas
cmc
aaa
push
movsl
adc
fimull
mov
inc
adc
addl
push
adc
or
test
outsb
xchg
ja
mov
jns
or
fmuls
push
outsl
outsb
mov
adc
mov
mov
arpl
sub
mov
outsl
pop
aad
das
popa
fimull
inc
sbb
xchg
adc
inc
test
cmp
loop
stos
push
lret
pop
xchg
stc
aam
int3
popa
cli
cmc
loope
mov
fidivs
into
mov
pop
and
imul
hlt
clc
push
mov
ficoml
int3
loopne
outsl
add
fldl2e
jae
les
and
and
pusha
orb
out
jo
cmp
pop
movsb
or
popa
inc
daa
xor
jae
sub
pop
mov
push
inc
adc
cltd
push
fidivl
ds
push
push
inc
xor
pop
mov
xchg
addr16
dec
mov
cmc
imull
imul
je
rorl
mov
pusha
jmp
xor
push
xchg
add
dec
jns
dec
into
lret
add
icebp
xor
pushf
call
in
into
cmpsb
jnp
clc
in
iret
xchg
add
mov
ret
and
push
aad
or
cs
xchg
cmpl
dec
inc
xor
in
dec
into
movntps
mov
js
loope
xchg
jae
imul
sub
movsb
xlat
sbb
or
testb
loope
lahf
or
pop
dec
mov
mov
lods
iret
add
sub
xor
xor
jns
int
xchg
leave
fnclex
fidivrl
push
divb
push
push
inc
or
rcrl
in
mov
pop
jl
add
or
fmull
int
out
lret
pop
or
mov
cli
push
sbb
mov
js
add
add
in
adc
cs
shll
lahf
test
popa
adc
fwait
ret
cmpsb
push
pusha
in
pop
push
xchg
and
xlat
scas
cmpsl
sbb
jno
loopne
fs
xchg
jmp
in
push
cmp
mov
std
sbb
rcll
bnd
sbb
int3
negb
add
pop
loopne
mul
jnp
dec
fwait
mov
aaa
and
pop
inc
mov
ja
mov
mov
push
lock
or
dec
cltd
out
dec
mov
movsl
jns
xchg
mov
add
sbb
ds
test
daa
xchg
sub
sub
stc
sbb
sub
inc
in
xchg
push
cmpsl
add
inc
and
lods
xchg
insl
cmp
lahf
in
adcb
cs
fists
push
add
sub
sti
sub
mov
add
cltd
stos
or
sbb
pop
dec
xchg
mov
push
jae
int3
gs
ljmp
lock
cmc
movsb
test
sahf
push
cmovle
sbb
outsb
mov
loopne
ret
inc
mov
jo
mov
call
aad
call
mov
mov
mov
outsl
and
and
xchg
imul
push
int
loope
inc
sub
cltd
mov
lret
mov
pusha
mov
mov
bound
sub
mov
test
sub
fisubrl
gs
pop
ficoms
push
push
jmp
leave
xchg
or
or
xchg
aas
loope
aad
lock
std
mov
sub
xchg
adc
xor
xchg
sti
cltd
mov
js
bound
sbb
out
insl
xlat
pushf
jns
mov
roll
and
movsl
mov
cmp
cmp
std
ljmp
inc
mov
loopne
push
je
inc
lods
jmp
movsb
jns
jg
sbb
pop
sub
xor
fcom
mov
mov
fucomi
arpl
cmp
scas
xchg
mov
stos
push
divl
out
movsl
cld
pop
bound
xor
mov
shrl
mov
cmc
ja
fbstp
xor
popf
call
mov
pop
and
and
js
enter
in
cmpb
sbb
push
aad
sbb
aad
fsubrl
adc
xlat
rorb
adc
adc
xor
jge
dec
les
ficoml
xor
lods
dec
cmpsl
mov
rcll
jmp
xlat
test
jo
jno
inc
dec
in
les
aas
stc
adc
sbb
xchg
cmp
and
ret
aaa
aam
cwtl
fidivrs
fdivrl
sub
aad
rclb
fs
sub
hlt
ficoms
in
out
pop
nop
std
push
fistps
sbbb
mov
push
inc
sti
jne
lock
jno
adcb
xor
fs
add
arpl
insl
push
or
test
inc
int
cmc
outsl
mov
xor
jnp
stos
add
cwtl
mov
jge
popa
imul
jmp
mov
mov
lock
pop
popa
or
je
mov
dec
mov
ja
cmp
pop
cmp
sub
mov
arpl
mov
fwait
and
orl
push
imul
stc
jnp
repz
ret
into
int
sub
pop
cmp
jp,pn
rcl
fcoms
fistl
mov
nop
dec
sbb
subl
pop
sbb
das
jne
dec
bnd
insl
dec
adc
adc
xor
movsb
push
test
xchg
or
int3
jo
aad
mov
pop
lds
shlb
cs
adc
xor
clc
push
xorl
cld
pop
dec
adc
js
sbb
sub
cltd
stos
imul
dec
aaa
adc
mov
mov
mov
rcl
sbb
xor
lods
mov
mov
pop
in
pusha
jge
js
push
int3
lea
push
sbb
cmp
outsb
pop
in
fsubrl
out
sbb
aas
sahf
pop
data16
jl
mov
sti
and
addr16
xchg
cmp
data16
mov
xor
dec
dec
lock
mov
stos
sahf
mov
dec
xchg
mov
scas
out
and
or
and
mov
mov
adcb
and
pop
les
dec
fistpll
orl
inc
cli
add
insb
cwtl
gs
lret
sbb
push
fidivs
dec
pop
pop
sub
data16
das
enter
or
add
rol
cmp
add
add
inc
inc
lret
inc
mov
sti
pop
out
or
jmp
dec
xchg
jnp
and
add
mov
cmc
insb
inc
jae
mov
jbe
in
inc
or
mov
je
adc
pop
pop
pop
jle
fildl
cmpsl
and
jge
pop
mov
aam
mov
out
out
mov
push
sbb
movsb
ja
mov
pushf
das
mov
int
testl
dec
nop
mov
sti
repnz
push
cmc
aad
iret
dec
add
or
mov
ret
jbe
sub
adc
popf
das
or
jmp
rcr
mov
cmp
stos
in
push
ja
test
cmp
jge
ficoms
adc
dec
out
xchg
cmp
shr
in
js
jne
add
cs
add
int3
inc
push
aaa
mov
jb
lcall
xor
ret
cltd
xchg
pop
jge
fildl
adc
dec
testl
xchg
loope
dec
je
in
mov
jo
sub
jg
fldt
insb
addr16
cmp
mov
add
test
mov
adc
cmpsl
jecxz
and
out
xchg
mov
pushf
ja
fmuls
loope
aaa
sub
pop
mov
cmp
jg
fsts
sub
cmpsl
push
ja
cmp
jmp
in
negl
out
rolb
dec
inc
lds
gs
in
sarl
test
mov
pop
aam
out
sub
ss
cmp
int
jnp
icebp
adc
and
xchg
dec
and
mov
hlt
verr
dec
filds
into
in
clc
rcr
adc
testb
push
xchg
int
sub
inc
addr16
cmp
gs
xchg
dec
mov
jg
cwtl
mov
cmp
lods
iret
fnsave
clc
cmp
js
pop
and
pop
aam
arpl
jg
lds
add
push
sub
jecxz
adc
mov
divb
lahf
cld
leave
or
repz
les
insl
xchg
lock
xchg
sbb
push
jle
fstps
inc
xchg
jne
aad
je
gs
jmpw
inc
mul
pop
inc
and
adc
mov
ja
aas
inc
fcomps
push
xchg
movsl
gs
jnp
std
cmpsb
inc
fcoml
xor
scas
push
sbb
out
sub
arpl
xor
rorl
dec
hlt
mov
outsb
xor
add
fbld
push
and
jp
mov
jno
push
adc
xlat
test
daa
dec
adc
sti
add
leave
mov
inc
push
sbb
or
fildl
jmp
adc
sub
out
adc
test
xor
mov
sub
inc
jmp
rcll
lcall
aad
cmpsl
or
out
das
scas
addr16
cmp
add
sbb
push
pop
loope
insl
or
add
push
mov
mov
push
mov
mov
mov
xchg
inc
in
xchg
movsb
lea
jns
call
cmp
out
out
movsl
mov
jl
nop
insl
xchg
inc
mov
loop
mov
test
jge
dec
mov
or
sbb
cmc
ds
data16
repnz
mov
rcl
jnp
nop
jnp
push
jne
cmp
xor
cmp
xchg
rcll
sub
add
imul
imul
loopne
add
or
jp
data16
jb
pop
insb
xor
sti
fsub
dec
add
push
aaa
ja
jge
aam
xchg
push
test
lcall
aas
stc
add
mov
push
xchg
add
in
cld
mov
shlb
and
into
push
jecxz
rcrl
and
push
pop
mov
cmp
stos
jbe
cld
dec
pop
outsb
mov
or
jge
push
leave
xchg
xor
and
and
mov
jle
or
mov
sbb
and
lcall
inc
pop
pop
movsl
adc
mov
mov
addr16
je
xor
mulb
cld
in
das
pop
js
mov
inc
xor
iret
stos
jp
loopne
fisttpll
xchg
jmp
dec
fs
pop
adcb
xchg
and
loop
dec
xor
insl
ret
mov
mov
add
push
sub
icebp
mov
xchg
cmp
out
add
movsb
and
push
jne
scas
sbb
and
sub
mov
dec
clc
divl
add
fnstenv
leave
mull
bound
loope
fstps
xchg
fdivs
dec
mov
andl
stc
adc
icebp
pop
jne
arpl
dec
jae
lock
loop
pop
pop
sbb
lcall
pop
nop
xor
lock
lret
pop
leave
idiv
lret
mov
cmc
jnp
dec
and
inc
inc
mov
sbb
imul
sub
std
aaa
pop
mov
cmp
rorb
jge
scas
rorb
mov
in
arpl
and
or
jge
or
jo
sub
gs
ret
mov
pop
in
mov
xchg
xchg
gs
inc
cwtl
inc
mov
int3
dec
sub
repnz
cltd
mov
lds
test
lret
out
fbld
pop
lret
and
jns
jge
sub
inc
jns
mov
fistpll
outsl
ror
sub
fcompl
lcall
lcallw
pop
loopne
pop
cwtl
adc
sti
outsb
rclb
test
and
sub
arpl
add
xor
adc
mov
int
fwait
inc
fistpll
shrb
push
daa
pop
push
or
das
int3
stc
push
fs
push
idivl
or
cmpsb
daa
sub
jno
inc
or
or
xchg
inc
dec
mov
pop
and
daa
cltd
push
mov
xchg
xor
push
call
cmp
pop
jae
ja
das
inc
rcll
xchg
fs
inc
ret
push
ret
or
andb
fs
mov
lret
xor
out
out
out
mov
psubw
mov
or
mov
sbb
cmp
aad
or
sarl
mov
jnp
add
xor
div
shl
push
sub
cwtl
decl
mov
xor
mov
or
fisttps
sub
popa
cs
sti
in
jbe
pushf
inc
faddl
lds
push
push
pop
and
push
fisttpll
outsl
scas
adcb
jne
pop
outsl
incb
lea
hlt
fimull
dec
mov
add
adc
push
outsb
cmpsb
into
scas
sub
xor
shlb
fidivrs
inc
ja
shll
pop
push
rcrl
shl
add
pop
add
pop
add
dec
jmp
les
and
cmpsl
pusha
fs
dec
fildll
adc
push
and
xor
inc
jo
mov
inc
mov
inc
cli
sbb
mov
lock
decb
sbb
loop
shl
jecxz
out
icebp
loope
xor
xchg
idivw
adc
cmp
push
jl
pop
les
fisubs
sbb
mov
push
loope
lea
or
pushf
daa
outsb
aaa
ljmp
sbb
cltd
test
cmp
push
xchg
pusha
out
adc
nop
xchg
cs
adc
int
lods
mov
fimuls
hlt
repz
fimull
or
outsb
sub
divb
repnz
jle
pop
push
add
adc
xchg
fwait
inc
jle
sub
cmp
clc
ljmp
cmp
lods
pop
ljmp
xor
in
pop
daa
pop
mov
lret
sti
cmpsb
adc
sub
or
mov
cmp
or
xor
mov
sar
test
mov
jge
cltd
clc
shll
jl
lock
cmpl
das
xorw
insl
ret
movsl
xor
das
sub
add
xchg
enter
popf
push
pop
ret
jb
idivb
xchg
cmp
test
mov
imul
push
movsl
in
mov
mov
out
das
arpl
divb
or
cmp
popf
mov
fisttpl
cmp
inc
rclb
xchg
cmp
adc
fmuls
dec
test
je
xor
xchg
aaa
mov
mov
jle
in
push
cmpl
dec
inc
mov
lcall
push
icebp
pop
cmp
popa
mov
mov
hlt
pop
repnz
adc
inc
mov
and
lds
adc
xor
lea
mov
test
shlb
out
sbb
fstpt
add
das
mov
or
loopne
ret
loope
fimuls
pop
push
mov
in
fwait
push
ficompl
sub
xor
shll
cmp
dec
mov
adc
iret
lcall
dec
scas
aaa
mov
jne
sub
fistps
mov
xor
imulb
stos
fadds
jecxz
push
int
cwtl
adc
mov
or
icebp
mov
xchg
mov
fiadds
add
xchg
pop
adcl
add
xchg
in
add
iret
xchg
jne
xchg
xlat
mov
test
repnz
xor
cmp
push
dec
mov
out
jmp
loopne
pop
mov
pop
stos
mov
mov
jmp
ljmp
sub
inc
inc
mulb
gs
pop
mov
fwait
add
sbb
sub
mov
insl
inc
or
push
cmp
jl
aam
mov
outsl
pop
sti
or
outsl
lret
imul
cmpsb
inc
cmp
pop
cld
xchg
leave
cwtl
addb
iret
mov
mov
push
lahf
shrl
sub
xchg
mov
cmp
fnsave
repz
cmp
and
lcall
push
hlt
mov
test
xor
out
icebp
into
cmp
sbbl
push
xchg
xchg
push
icebp
dec
or
mov
dec
in
cmp
adcb
pop
push
rorb
push
dec
adc
xlat
aas
in
inc
mov
rcr
lods
cmc
xlat
mov
or
fisubrl
pop
push
loopne
add
inc
insl
movsl
das
cli
shlb
aad
mov
push
cltd
lock
std
mov
xor
fistl
lock
jnp
lea
pop
pop
jbe
jp
cmpsb
sti
cmp
mov
stos
shl
and
decl
pop
pop
imul
fiaddl
gs
mov
xor
xlat
dec
ja
daa
and
push
mov
mov
mov
dec
addb
pop
int3
push
sar
fucom
outsb
dec
pop
nop
and
mov
cli
jnp
mov
out
fisttpl
mov
adc
outsb
jmp
jbe
or
cmpb
test
sbb
stc
cmp
adc
rcll
xchg
movsb
enter
pop
xchg
scas
jo
pop
pop
ljmp
push
je
xchg
push
pop
sub
imul
and
ss
sub
xchg
subb
stos
out
fdivl
jecxz
adc
sahf
pop
adc
dec
mov
pop
sub
fidivl
push
mov
xchg
cmc
inc
andl
and
xchg
xor
cmpsb
imul
dec
push
lds
aaa
test
dec
sub
in
pop
rorb
in
xchg
dec
mov
ja
mov
test
add
repnz
ficompl
inc
xor
std
mov
jl
cli
mov
sahf
shr
jecxz
iret
mov
pushf
sbb
xchg
test
lock
sub
add
arpl
movb
adc
lods
shlb
cwtl
sarl
dec
cmp
fldenv
scas
adc
frstor
dec
outsl
mov
andl
sbb
and
mov
dec
bound
out
inc
or
sbb
in
popl
mov
add
adc
xor
je
shlb
mov
out
pop
lea
mov
xchg
and
mov
rol
imul
pop
dec
mov
or
push
add
dec
pop
stos
mov
pop
pop
loope
test
and
in
ret
scas
pop
cltd
fs
mov
mov
push
and
movsl
pop
sbb
lods
cmp
dec
xor
test
icebp
in
cmpsb
ss
cmc
push
shl
and
pop
hlt
push
push
dec
mov
xorb
adc
les
dec
ss
mov
adc
cmp
push
sbb
adc
adc
pop
popl
sbb
out
xchg
cmp
and
das
adc
fists
pushf
inc
fldenv
cld
lds
cmp
sarl
movups
xchg
std
and
xchg
rclb
stc
nop
cmpsb
je
es
popfw
dec
fisubl
dec
push
je
clc
ja
imul
xlat
mov
cmpb
push
add
fbld
and
insb
mov
into
mov
cmp
imull
rclb
fpatan
xor
aam
ljmp
insb
pop
lret
insb
dec
int
dec
popf
inc
icebp
sbb
or
mov
xchg
xor
xchg
movl
sbb
mov
clc
mov
les
fldenv
jp
mov
adc
lock
fcmovbe
and
xchg
sbb
jg
jecxz
js
cmpl
xchg
pushf
adc
cmp
mov
ja
xchg
inc
shlb
xchg
popw
add
sub
mov
fsubs
pop
fldcw
push
sub
cwtl
cld
or
clc
sub
or
ficompl
and
or
mov
xor
cltd
and
xchg
and
cmp
sub
or
add
out
jge
sti
mov
mov
add
ficoml
add
add
inc
ror
xor
adc
jb
cmpsb
mov
ss
push
repz
mov
dec
xchg
loopne
jmp
in
fdivrs
jmp
adc
mov
out
test
add
sbb
mov
cmp
dec
ret
jne
and
test
or
jne
nop
mov
loopne
add
mov
lret
pop
sbb
xor
clc
adc
stos
popa
das
lea
es
scas
xor
mov
mov
jnp
dec
inc
sbb
dec
or
scas
sub
mov
mov
jae
lcall
adc
inc
sub
or
and
lds
mov
dec
push
daa
daa
fnstcw
sarl
lods
cmp
test
add
push
or
lds
pop
sti
xor
enter
inc
xor
outsl
push
cmp
in
dec
pop
mov
pop
adc
in
sbb
test
ljmp
mov
sub
inc
stos
jnp
jmp
push
sbb
inc
dec
repnz
loope
sub
idivb
stos
cmp
dec
add
popa
pop
fisubl
xchg
sbb
jmp
jno
xchg
adc
push
sbb
insl
jbe
mov
sbb
adc
sub
jns
out
divb
iret
pop
cltd
sahf
fidivrs
daa
int
scas
divb
cwtl
rolb
stos
add
xchg
mov
out
enter
mov
pop
cmpsb
pop
daa
xchg
repz
add
cltd
jnp
xor
je
int3
jo
mov
jae
or
xchg
mov
mov
shlb
stos
shlb
mov
adc
out
mov
in
ds
sub
into
add
inc
mov
pop
jnp
loopne
dec
in
inc
decl
data16
lea
out
sbb
xor
fsubrs
adc
sbb
xor
fcoml
jmp
mov
jl
ficompl
sarb
xchg
or
stc
outsl
imul
jae
sahf
xlat
or
popa
loope
fcmovbe
fdiv
xor
xchg
dec
hlt
xchg
loop
mov
pop
jo
adc
in
xchg
dec
mov
mov
push
fldcw
and
lret
or
pop
into
sbb
fstpt
push
cs
outsb
movsl
rcl
fistl
xchg
add
cmp
into
out
adc
dec
out
insb
icebp
out
idivl
cwtl
dec
xor
imulb
es
cmpsb
cmp
sbb
inc
sub
mov
int3
insb
push
mov
pop
in
mov
jns
mov
stos
in
scas
outsb
mov
jo
inc
cwtl
add
inc
shlb
mov
sarl
inc
gs
xor
rcrb
lret
clc
xchg
out
sub
arpl
push
jno
es
cmp
push
adc
loop
push
cmp
xchg
jle
cmp
push
sub
insl
es
aaa
xchg
loop
push
loopne
adc
fildll
dec
scas
mov
sbb
in
stc
add
mov
out
inc
mov
test
add
sti
push
pushf
andl
xchg
addl
mov
fldenv
aam
fsts
shl
mov
dec
mov
jo
xor
movsb
xchg
push
arpl
scas
mov
loop
add
dec
mov
mov
inc
mov
call
sub
mov
sbb
pop
xchg
clc
roll
icebp
fwait
pop
inc
add
test
movsl
ret
dec
scas
jb
scas
mov
jnp
jmp
hlt
lcall
mov
inc
or
pop
sti
xchg
xor
outsb
jle
add
mov
icebp
popf
lcall
repz
test
insb
mov
mov
lds
imul
movsl
jo
test
mull
lret
jnp
jae
sahf
mov
mov
xchg
adc
ds
xchg
jge
pusha
addr16
cmp
leave
lahf
push
pop
jb
cmp
loop
sbb
stos
ret
cmpsb
cmc
jbe
mov
sbb
push
dec
jne
fwait
inc
sahf
test
jno
cmp
add
ret
pop
xor
cmc
imulb
sub
mov
push
arpl
lock
ret
mov
test
rclb
imul
push
fstps
add
bsr
push
jo
push
addb
sarb
jo
adc
or
dec
aad
in
xchg
jl
add
sti
enter
pop
jbe
jno
aam
push
addb
insl
repz
das
jp
aad
inc
inc
push
hlt
add
jmp
push
dec
jmp
xor
shlb
push
ss
mov
or
sbb
enter
data16
pop
hlt
jne
mov
out
jge
or
jb,pt
fidivs
jb
mov
rolb
ficoml
push
mov
mov
aaa
jnp
and
or
sbb
in
sub
and
lea
cli
adc
and
sbb
adc
adc
cwtl
leave
js
dec
daa
dec
fisttps
fists
sarb
xchg
rolb
add
lea
sub
adc
test
dec
mov
xchg
xorl
call
xchg
xor
es
mov
xchg
es
subl
xor
out
outsb
mov
pop
mov
repnz
pop
jge
clc
inc
pop
daa
push
aad
flds
ret
cs
fldt
xchg
pop
xchg
mov
inc
aad
test
xor
cmp
ret
push
add
cwtl
cld
pop
nop
push
xchg
call
jb
shll
and
fwait
popf
push
lahf
push
mov
push
mov
cmp
jae
pop
xchg
imul
in
push
dec
sbb
lahf
xlat
lret
fldt
inc
in
lods
sub
or
das
andb
scas
push
pop
scas
sub
xchg
mov
xor
clc
insl
xchg
movsb
in
stc
int3
dec
jp
xchg
out
cmpsb
cmpsb
push
andb
add
sub
cmpsl
jg
rcrl
lock
aaa
fisubrl
sub
jne
jno
ljmp
push
xlat
push
test
sbb
sub
xor
lahf
push
cs
mov
push
jp
xchg
sub
sti
std
shlb
lea
std
pop
add
cmp
jl
aas
icebp
fisubrl
dec
hlt
inc
cmpsb
pop
lock
loope
lods
je
clc
int
inc
mov
sub
cli
fstl
push
xor
push
loope
mov
enter
movsb
push
out
sub
fstp
pop
dec
mov
add
mov
and
inc
lds
add
lea
add
stc
jne
jnp
push
subl
mov
xchg
es
aad
xor
bswap
mov
cli
sub
pop
loopne
int
sbb
mov
inc
sub
xor
inc
or
cmp
and
cmp
mov
lret
lea
nop
arpl
pop
es
jnp
insb
mov
mov
int
mov
push
out
popa
test
push
popf
loop
push
out
lock
cmp
dec
xor
xchg
mov
pusha
hlt
ss
stos
jbe
pop
dec
cmp
fmul
sub
loope
out
fisubs
pop
pusha
fcomi
leave
sbb
cld
cwtl
sub
or
pop
inc
adc
jne
roll
mov
jp
adc
es
shrl
je
add
adc
rcll
mov
add
int3
add
inc
add
fs
icebp
pop
jnp
xor
xchg
xchg
mov
add
sbb
ret
or
and
xchg
push
jl
orb
imul
fcoml
fdiv
pop
insb
call
std
fldcw
pop
adc
std
jno
push
mov
mov
mov
xor
inc
cltd
je
ffree
pop
out
xor
gs
pop
push
faddl
pop
mov
jp
adc
xchg
jg
mov
mov
aas
leave
pusha
dec
les
mov
pop
xlat
pop
and
out
dec
lahf
repz
jecxz
adc
adcb
repnz
shrb
sub
cmp
jg
mov
adc
xor
sbb
add
push
and
cmp
fidivrl
shll
fldenv
pop
mov
loope
xor
pop
ss
jg
jecxz
pop
ljmp
and
aas
jno,pt
subl
lock
aam
sub
mov
pop
and
adc
clc
cmp
popf
mov
cmp
or
pop
insb
jae
lods
xchg
cmc
xchg
lcall
inc
sbb
jle
call
or
jge
sub
sbb
inc
mov
pop
push
dec
bound
jns
jne
ret
and
xor
mov
shl
jne
dec
orl
sti
push
pop
hlt
shlb
lods
in
pop
popa
jbe
mov
ja
sub
xchg
pop
aad
movsl
push
adc
ret
jmp
gs
pop
les
mov
adc
jmp
or
mov
pop
dec
push
ss
xor
pop
mov
movsl
mov
xchg
imul
das
fwait
pop
mov
lret
inc
lret
xchg
mov
nop
or
aam
xchg
jmp
xchg
adc
lahf
je
xor
icebp
fwait
adc
and
out
xchg
insb
push
push
mov
sbb
push
leave
and
jne
or
mov
imul
or
inc
push
lea
stc
clc
mov
pop
inc
push
bnd
adcl
mov
cmp
dec
push
dec
rcr
inc
or
cmp
inc
clc
mov
dec
lock
cwtl
lret
popf
ljmp
mov
lahf
aaa
lock
iret
jnp
push
out
rcll
cltd
xchg
dec
lret
call
cli
or
or
or
hlt
xor
jmp
sub
push
insl
xchg
hlt
adc
adc
test
aas
repz
loope
sahf
mov
shrb
mov
dec
leave
fisubl
les
rcll
shrl
sar
inc
mov
out
xor
ret
outsl
imul
jecxz
aas
mov
movsb
scas
add
sub
xor
fcmovnu
ja
push
insb
mov
mov
cmp
gs
and
cmpl
jle
aas
xor
negb
push
hlt
int
jp
fadds
mov
cli
mov
add
dec
and
pop
pushf
out
scas
clc
scas
sub
mov
lahf
in
and
xlat
fidivrs
xor
dec
test
fcoml
loop
enter
out
lret
xlat
lock
call
lock
xchg
out
out
sbb
fldenv
dec
cmpsb
into
inc
mov
mov
and
fistpll
shrb
lds
mov
mov
cmc
mov
ret
fildl
jmp
loopne
adc
push
inc
fistpll
roll
add
jle,pn
sub
mov
pop
xor
test
ret
ret
subb
xchg
movsl
ds
sub
mov
data16
aam
mov
lods
ljmp
and
frstor
je
shl
adc
mov
repz
int
pusha
dec
pop
in
jg
cmp
mov
adc
subb
adc
xor
dec
jne
aam
adc
jl
stos
test
lods
fdivl
sbb
std
xchg
fisubl
test
xchg
pusha
sti
ss
xor
adc
adc
fcoml
push
cmp
xchg
xsaves
jo
mov
jle
inc
movsl
pop
inc
inc
out
or
mov
scas
cwtl
lods
jb
push
cmp
sarl
inc
xchg
rcll
sbb
lds
js
test
mov
mov
push
mov
inc
sub
lea
jbe
dec
sub
ljmp
jo
adc
ret
sub
ret
out
outsb
dec
mov
adc
sbbb
nop
stos
add
in
test
enter
fisttps
cmp
stc
mov
in
mul
ret
jmp
pop
fstpl
sub
jae
rorb
pop
dec
das
inc
dec
fcmovb
cmc
andb
cli
mov
push
iret
jb
aam
nop
dec
mov
jne
bswap
lret
push
fldt
or
cmc
push
xchg
xor
insb
push
stos
stc
addr16
aam
inc
imul
mov
add
mov
lcall
sub
pushf
mov
xchg
xchg
pop
clc
cmp
out
scas
sahf
fucomp
ja
jmp
inc
out
pop
xor
push
ret
js
cmp
sbb
cmp
xchg
add
push
test
mov
or
jne
push
lods
shll
sub
nop
call
je
xor
adc
insl
or
addb
inc
push
je
adc
jnp
mov
enter
leave
cmp
push
sub
inc
test
dec
push
lret
cmp
push
xchg
rolb
inc
icebp
push
push
pop
sub
sbb
lret
add
imul
mov
inc
call
dec
pop
int3
mov
or
fidivs
xor
subb
fwait
inc
fsubrl
es
inc
cld
popa
int
xor
jecxz
mov
push
jecxz
cli
pop
pop
imul
gs
sub
inc
add
call
out
mov
icebp
mov
mov
psubsw
and
xchg
sbb
adc
stos
or
in
outsb
push
mov
imul
push
add
mov
mov
jecxz
dec
mov
cli
push
jae
test
loope
pop
mov
imul
mov
push
lea
and
xor
aaa
and
es
fcomip
or
pusha
mov
inc
aam
ds
imul
lods
dec
addr16
int3
adc
inc
or
pop
repz
test
adc
insb
sub
or
pop
mov
dec
or
mov
addr16
std
lods
lods
xorl
cmpsl
cmp
in
loop
loope
add
testl
cmp
rorb
cmc
arpl
lds
lds
cmp
aad
jns
pop
xorl
xchg
xor
push
test
jnp
fnsave
xor
arpl
mov
cmp
cmp
push
mov
mov
pop
pop
jbe
sub
push
icebp
cli
movsl
addl
lods
fmul
mov
inc
stos
movsl
ss
inc
das
mov
sbbl
in
inc
jp
push
mov
inc
cmp
cmp
sub
iret
jns
mov
sbb
sahf
jmp
cmp
jmp
mov
and
int
xchg
jp
cmpsb
mov
mov
xorb
mov
push
in
imul
lock
jle
push
adc
mov
lds
addr16
and
fnstsw
xchg
sbb
jne
push
push
scas
imul
mov
les
out
dec
lahf
sub
dec
cli
cs
inc
fcmovbe
dec
icebp
popf
js
subl
jns
jge
dec
sbb
hlt
add
inc
mov
pusha
add
xchg
mov
mov
sub
fmuls
pop
scas
leave
push
xor
sub
enter
xlat
and
fdivl
jae
inc
mov
jbe
stos
pop
or
dec
push
mov
outsl
dec
xchg
sbbl
jbe
jbe
stos
fs
lret
cmp
arpl
sti
sub
mov
xchg
pop
mov
ss
call
sbb
adc
rorl
mov
mov
fucomp
ljmp
negl
rcrl
scas
aas
test
mov
mov
mov
nop
push
mov
les
fwait
sbb
dec
cmp
xchg
dec
sub
shl
insb
lahf
jecxz,pn
imul
in
jae
subb
sbb
pop
aam
mull
jns
out
cwtl
cld
and
jnp
jp
insl
jbe
jne
mov
or
lcall
cmp
xor
push
or
fidivrl
cmp
in
adc
mov
mov
xchg
or
icebp
lahf
adc
mov
stos
jl
sbb
insl
add
idivl
jle
in
es
andb
mov
push
mov
sub
mov
add
mov
sub
nop
mov
scas
xchg
and
dec
test
sbb
xlat
push
add
adc
out
das
cmpsb
imul
jmp
insl
inc
dec
mov
push
fimull
or
adc
xor
sbb
push
sbb
sub
nop
push
insl
stos
std
or
or
scas
ljmp
js
xor
das
rcrb
out
addr16
sbb
jno
fimuls
in
mov
ret
leave
cs
and
jb
and
cmc
jmp
add
std
push
dec
push
xchg
fwait
push
fnstenv
cltd
sbb
push
pushf
int3
dec
push
stos
repz
jnp
aas
test
jmp
cmp
sbb
mov
lahf
ret
push
sti
cmp
cmp
adc
push
sbb
mov
pop
xchg
idivb
mov
mov
cmp
nop
sub
jmp
dec
psllq
movsl
and
lea
push
fcmovbe
aaa
push
and
bnd
call
in
nop
mov
cltd
jne
dec
mov
sbb
aad
push
cmp
cs
jl
lcall
pop
pop
sbb
orb
dec
jmp
pop
xchg
jae
adcl
nop
leave
out
sub
scas
aam
inc
in
in
dec
push
jl
mov
sti
js
xchg
mov
es
adc
lods
push
cld
es
mov
xor
jno
jo
push
in
lea
or
sub
inc
adc
rcll
ret
inc
push
mov
ret
xchg
faddl
call
ss
fld
push
pusha
push
outsb
cmp
mov
jg
ror
popl
popa
lods
gs
icebp
nop
push
movsb
ficomps
mov
inc
movl
and
push
frstor
shlb
movsb
das
stc
in
cmc
loopne
and
movsb
les
out
cs
push
sbb
in
xchg
and
arpl
xchg
or
adc
xchg
cmp
hlt
pop
nop
dec
jns
push
stos
in
pop
adc
leave
push
jae
lahf
push
insl
xlat
jns
sbb
repz
jbe
adc
call
ret
out
aas
sbb
jge
pop
mov
daa
jnp
leave
push
stc
add
xor
sahf
sbb
push
sbb
fldl
and
xchg
ds
mov
mov
xchg
xchg
xchg
or
jnp
xor
add
fxch
mov
subb
scas
xchg
fdivs
jns
xor
aam
add
inc
cs
jo
divb
nop
in
cmc
jo
pop
jg,pn
jbe
and
mov
dec
jge
lea
lret
int
push
push
aam
fldenv
leave
movsb
jg
jnp
mov
jnp
ret
mov
push
out
xor
mov
mov
pop
pop
ficompl
xorb
cmpl
lods
and
int
pop
or
inc
out
movsl
dec
ss
popf
ss
xor
pextrw
and
shlb
jbe
dec
inc
dec
lret
and
je
rol
movsl
icebp
loop
js
popf
imul
xor
subl
ja
inc
sub
mov
xor
xchg
rorl
xchg
cmpl
jle
popf
cli
std
inc
mov
xchg
imul
inc
pop
fadd
insb
jmp
js
xchg
repnz
add
ficoms
mov
sti
mov
jae
ffreep
aad
imul
repz
sbb
movsb
lods
adc
rcl
cld
xorb
or
sbb
out
inc
pop
insl
jbe
mov
xchg
xor
ljmp
add
push
dec
xlat
sub
xchg
cs
xlat
aaa
cld
adc
mov
push
daa
cmp
sbb
pop
rorb
scas
xor
push
dec
test
insl
aad
stos
pop
adc
cli
pushl
ljmp
sub
push
dec
pop
out
push
xlat
dec
mov
and
push
das
cmpsb
cmpsb
js
lods
lret
xchg
dec
outsl
mov
pop
shlb
xchg
mov
jo
call
into
xchg
addr16
ret
sahf
pop
xchg
mov
xchg
cmp
xor
mov
int3
and
push
mov
fldcw
cs
insb
jmp
mov
out
nop
push
push
outsl
pop
lock
mov
pop
shrl
push
or
frndint
add
dec
mov
dec
or
dec
push
pop
dec
shlb
sbb
stc
ja
xor
pop
ret
inc
mov
imul
fcmovb
jmp
inc
movsb
jle
push
pop
inc
mov
sbb
imul
lret
js
pop
xor
and
mov
cltd
and
out
xchg
idivb
sbb
adc
push
dec
and
test
aam
arpl
imul
daa
or
cmpl
in
cmp
into
mov
das
rcrl
cmp
hlt
mov
aad
outsl
mov
jae
add
push
fstl
mov
pop
dec
fwait
ret
pop
loopne
loope
push
jp
in
testb
xor
aad
xchg
sub
xor
shlb
sbb
dec
dec
aaa
mov
lea
dec
jmp
jecxz
lcall
ret
or
adc
sub
stc
in
arpl
inc
cld
push
jo
aad
jmp
or
mov
fsubl
leave
sarb
push
ss
dec
ds
xor
jp
insl
pushf
adc
pushf
daa
std
or
pusha
push
filds
adc
cwtl
data16
or
jl
cltd
and
mov
leave
cmc
dec
test
lea
fwait
js
mov
push
mov
stos
mov
ficomps
adc
aaa
adc
icebp
lcall
sub
lahf
xchg
xchg
test
mov
pop
adc
push
push
aad
test
in
pop
mov
js
pusha
fs
lret
sti
pop
inc
or
mov
iret
mov
inc
mov
mov
inc
mov
les
pusha
dec
cmc
mov
popf
sbb
shl
out
push
inc
je
xor
aam
and
test
cmp
and
adc
jle
mov
mov
enter
sahf
out
lahf
mov
pop
movsb
lea
sub
xor
imul
cmp
fwait
cmp
mov
add
sbb
es
ljmp
clc
ljmp
push
out
int
xor
mov
mov
sbb
xor
xor
and
or
fneni(8087
test
mov
arpl
lahf
and
xchg
mov
cmp
iret
int3
cwtl
sahf
inc
jmp
cmp
lds
dec
mov
mov
lds
pusha
ja
rclb
mov
xchg
push
inc
repz
fidivl
and
sbb
cld
xchg
mov
lahf
fcomps
dec
outsb
loop
in
lock
add
xor
pop
or
dec
mov
std
ja
daa
test
cltd
add
push
push
and
lahf
jmp
not
jno
inc
and
in
lods
rcll
sbb
mov
xchg
test
sbb
clc
arpl
dec
mov
cmpsb
sub
push
dec
mov
xor
stos
push
adcl
test
add
mov
ret
sub
scas
xorb
inc
test
ljmp
call
push
and
mov
aaa
jo
cwtl
sbb
enter
arpl
push
pop
inc
pop
sub
xchg
xchg
sub
nop
adc
test
xchg
mov
repnz
xchg
cmp
enter
fdivs
adc
xor
or
sub
push
stos
pushf
xchg
fisubs
daa
test
pop
insb
add
xchg
in
in
scas
idiv
clc
popa
aaa
jb
hlt
ss
cmpsb
push
mov
push
xor
cs
rorl
and
adc
dec
pop
mov
sbb
bound
aad
cmp
sub
sub
adc
xor
mov
lock
pusha
cs
cmpb
stos
sbb
inc
int3
jl
pusha
mov
inc
jns
rol
mov
imul
ds
mov
negb
out
hlt
lods
cmp
nop
fs
push
jb
jae
cld
aad
inc
jae
pop
push
sbb
push
add
jne
add
mov
add
and
mov
mov
sub
xor
in
mov
dec
mov
aad
pop
xlat
fs
mov
int3
add
test
aaa
mov
or
jae
hlt
stc
xor
xchg
negb
cmp
out
popf
pop
ds
sbb
test
push
jge
mov
push
jge
lahf
fnsave
xlat
xchg
loopne
fdivr
mul
and
cmp
sarb
insl
mov
ficoml
inc
pusha
push
int3
sbb
mov
in
mov
add
jns
mov
jmp
pop
lds
inc
sub
adc
cli
inc
call
mov
je
jno
mov
lcall
loop
pop
mov
ss
mov
add
imul
test
cmp
mov
idivb
xchg
clc
pop
aaa
loope
cmp
dec
popa
nop
push
out
sti
jne
and
xchg
imulb
mov
dec
lods
outsl
nop
sbb
lahf
jle
jecxz
mov
mov
aaa
adc
aad
mov
aaa
fadd
and
ja
fs
fcompl
and
adc
jecxz
cltd
daa
sbb
xor
lods
loopne
inc
adc
mov
test
or
adc
pop
pop
int
cmc
xchg
xor
jb
jl
dec
or
adc
insb
push
pop
aad
cmp
or
inc
mov
and
push
ret
jns
fmul
inc
div
loop
pop
lret
push
shlb
inc
out
ljmp
movsl
aaa
adc
mov
inc
lock
xchg
mov
adc
and
dec
push
mov
pop
mov
push
ret
xor
test
cmp
dec
sti
mov
adc
js
inc
testl
lret
mov
mov
mov
push
xor
push
fisubrl
sub
pop
cmc
pop
jge
lcall
jp
test
inc
sti
push
cmpsb
add
adc
mov
in
xchg
jnp
push
and
lea
cmpsb
adc
ret
push
aas
jne
jecxz
push
adc
stos
jmp
std
jecxz
jg
cmpsb
pusha
or
mov
scas
push
xor
mov
adc
push
das
repnz
sbb
cwtl
pop
push
dec
sbb
adc
mov
mov
addr16
dec
jmp
int
stc
lcall
jg
scas
sbb
sbb
mov
stos
mov
insl
mov
pop
test
add
dec
adc
in
sub
mov
mov
cmp
fiaddl
pop
mov
mov
mov
push
inc
mov
xor
dec
aad
mov
hlt
mov
cmp
xor
mov
push
js
das
ljmp
inc
mul
stos
ret
out
add
mov
insb
jg
jbe
sub
jne
push
mov
int
mov
lock
stos
aam
jne
int3
mul
outsl
sub
push
daa
lods
mov
pop
ljmp
cmc
negb
das
incb
fwait
sub
lea
sti
xchg
xor
or
xor
test
sbb
xchg
pop
in
lret
jmp
cmpsl
movsb
ds
sbb
dec
stos
popl
sbb
pop
loop
idivl
adc
popa
xchg
inc
jne
mov
mov
and
jecxz
negb
jne
fnsave
aad
mov
iret
addr16
outsb
pop
imul
mov
dec
push
push
jne
test
push
push
lahf
rcr
mov
inc
xchg
mov
and
xchg
adc
daa
dec
mov
repz
jo
mov
push
cld
fbstp
int3
fmull
test
inc
mov
xchg
or
and
inc
adc
out
sub
jb
and
les
cld
push
cs
mov
xlat
sub
repnz
xchg
stos
bound
mov
cwtl
vmread
pop
push
and
ljmp
movsl
mov
out
dec
testl
jp
fisttpll
aam
mov
and
dec
mov
subl
fs
xor
inc
rcl
orl
pop
xchg
aam
cmp
pop
fnstcw
or
xor
xor
mov
xlat
lea
into
lcall
out
mov
lret
pop
in
rep
idivb
or
pop
push
dec
cli
test
jle
lds
inc
xchg
dec
or
pop
insl
lret
and
mov
mov
outsl
sbb
jnp
or
and
hlt
stc
cmpsl
xchg
or
imul
scas
cwtl
les
push
or
xchg
sub
pop
testb
aam
jg
pop
ret
mov
lds
or
in
cmp
add
imul
repz
icebp
cmp
loope
dec
and
pop
popa
outsb
push
xor
fisubl
inc
lahf
shl
add
fwait
adcl
clc
mov
cmp
add
js
les
outsb
roll
xchg
aas
mov
jb
mov
test
add
stos
mov
jb
xor
loope
or
adc
mov
push
push
cltd
mov
stos
test
icebp
sbb
bound
loopne
sti
shl
arpl
repz
jb
rolb
shlb
into
dec
sbb
push
push
inc
xor
loopne
jg
add
and
xor
add
je
pop
es
inc
inc
and
pop
jne
sbb
fisttpl
shlb
and
dec
sahf
inc
imul
gs
movsb
xchg
jnp
sub
jno
add
out
enter
fstp
pusha
dec
xor
dec
lret
or
enter
lahf
fwait
adcl
inc
out
inc
negb
sub
dec
lds
cwtl
pop
mov
dec
lods
inc
pop
ret
jmp
cmp
add
mov
mov
or
test
enter
cmpsb
push
fldt
lods
std
mov
xor
sbb
mov
pop
adc
fdivrs
fsub
out
in
movsl
lret
aaa
aad
loope
aam
pop
and
mov
fs
pop
or
fisttps
push
popa
fnstsw
loope
cld
repnz
dec
in
cli
mov
sbbb
and
jbe
cmpsb
adc
inc
cmp
outsl
push
xchg
aam
xchg
mov
js
pop
mov
xor
add
shll
add
fs
mov
ja
dec
and
cltd
dec
inc
cmp
cmp
cwtl
add
das
jmp
scas
jnp
mov
jg
adc
fmull
jecxz
dec
ficoml
out
xchg
sub
xchg
mov
sub
stos
popf
insb
lods
call
fdivr
dec
push
adc
mov
add
or
dec
iret
dec
push
test
aaa
lods
pop
mov
out
hlt
lods
lret
imul
out
and
inc
movsb
sarl
ds
lods
add
icebp
in
repnz
out
mov
fdivrs
aad
out
cs
adc
imul
mov
inc
inc
and
push
repnz
pop
xor
fistpll
xor
out
pop
or
sbb
lods
out
arpl
mov
sub
out
or
lods
out
jge
iret
repz
jl
ds
dec
xchg
clc
pop
mov
pop
mov
dec
es
or
aam
js
lret
sub
std
xor
mov
xchg
test
adc
cmpsl
test
sahf
scas
in
or
movsb
daa
nop
fistpll
pusha
sbb
pop
xbegin
adc
mov
jae
xlat
cmp
sub
nop
in
icebp
inc
xor
cmc
cmp
xchg
pusha
in
jl
aaa
inc
jnp
aaa
movsb
xor
shll
rorl
sbb
xchg
ja
lds
and
call
jae
sbb
pop
fmuls
ljmp
add
xchg
hlt
push
scas
or
sbb
ljmp
xor
xor
push
sahf
cmp
cmp
jp
cmp
xchg
xor
inc
push
mov
cmp
dec
ja
outsl
push
pop
dec
xorl
xchg
sub
les
mov
or
inc
jg
jno
les
mov
fcoms
rcrl
mov
fdivl
jno
inc
mov
call
roll
jg
gs
push
arpl
pushf
xor
repnz
sub
fdivl
pop
lret
stos
push
add
fcoms
push
sbb
pushw
jne
xchg
xorb
push
fsubrs
or
repnz
iret
imul
ss
xchg
idivl
fldl
push
sbb
add
es
clc
sahf
test
add
gs
enter
mov
test
movsb
cmp
mov
cmpb
pop
mov
pop
sbb
mov
mov
and
shl
mov
push
out
and
push
cwtl
mov
hlt
stos
out
stc
sbb
mov
inc
divb
push
out
mov
xlat
and
dec
dec
aaa
fsubs
mov
xchg
es
mov
dec
stos
mov
and
pop
jne
mov
rclb
lahf
xchg
es
push
in
mov
jbe
dec
stos
mov
faddl
out
xlat
in
sub
pop
mov
sub
mov
stos
mov
mov
dec
inc
jmp
shr
sub
dec
cltd
stos
push
sbb
push
sbb
cs
add
mov
stc
cmp
push
rorl
inc
popf
push
mov
or
cwtl
inc
inc
mov
sub
fmull
loop
cld
xor
mov
ljmp
into
sbb
stc
enter
mov
bound
cmp
sub
rolb
push
cli
out
sbb
leave
adc
dec
xor
lods
mov
push
pop
enter
push
inc
testb
xchg
fstl
int
push
dec
test
scas
in
lcall
jmp
out
and
adc
add
addb
mov
clc
rcl
cmp
arpl
in
sub
pop
movsl
adc
dec
pop
xchg
mov
inc
cmc
mov
sbb
ja
inc
sub
jmp
sbb
out
dec
movsl
sti
idivb
and
adc
testb
es
cmp
int3
aam
incb
jno
pushf
jecxz
test
sbb
std
iret
testl
and
subb
movsb
and
mov
ja
pop
push
das
int3
cmp
ljmp
jle
push
jae
stos
cli
imul
dec
andb
inc
stos
mov
or
or
push
pop
repnz
stos
mov
add
jp
and
loope
je
mov
mul
lds
rcl
mov
mov
outsl
popf
jg
nop
je
push
push
loope
mov
mov
add
rcrb
ret
add
inc
cmpsb
jae
dec
jp
lods
ljmp
sub
add
je
lods
jnp
dec
cmp
jae
ja
sbb
adc
daa
xchg
dec
cwtl
jbe
dec
lods
out
sub
xlat
ds
mov
fstpt
pop
mov
loopne
lods
hlt
or
notb
xlat
lcall
int3
mov
clc
insb
and
das
mov
cs
dec
pop
adc
loope
push
hlt
stc
in
xchg
test
xor
inc
adc
jno
addr16
xchg
arpl
xchg
fcomps
dec
mov
sub
cwtl
jle
xor
aam
push
roll
stos
ja
push
jns
pop
mov
ficoml
inc
je
push
add
add
js
dec
cmp
dec
dec
jno
pop
xor
xlat
cli
je
aaa
mov
js
inc
jle
out
outsb
ret
add
sbb
sub
andb
mov
xor
jo
sub
in
jns
lret
fidivl
xchg
movsl
dec
orb
rcll
adc
cwtl
pop
std
jne
jle
out
push
cmc
les
jp
xchg
divb
mov
pop
test
adc
test
outsb
shll
pop
and
cmp
jmp
sub
xor
pushf
or
mov
add
dec
cmpsl
bound
ja
movsl
add
scas
sbb
ffree
push
push
mov
xor
xor
je
dec
arpl
repnz
jmp
push
xchg
ret
mov
adc
pop
lret
jge
jmp
xorb
mov
flds
in
in
jle
push
cltd
aad
sub
inc
fistl
adc
ror
xlat
jns
pop
movsl
pop
js
and
dec
mov
or
pop
add
les
in
js
frstor
mov
xchg
push
fsubrl
adc
add
in
and
ljmp
dec
push
outsb
xchg
push
mov
shll
aam
enter
in
cmpsb
addr16
icebp
sub
rclb
je
sbb
dec
xor
decb
add
jle
pop
mov
or
xchg
pop
mov
push
adc
mov
out
push
adc
loope
mov
or
pushf
sti
mov
jno
or
xchg
bound
push
inc
mov
int3
lods
inc
pusha
int
fwait
dec
add
out
sub
ljmp
fidivrs
dec
mov
sub
sub
stos
and
sub
sub
rclb
add
ficomps
loope
orb
cwtl
mov
mov
imul
sahf
push
mov
mov
clc
scas
mov
xchg
jne
mull
cmpsl
xchg
xchg
aad
pop
outsb
adc
jbe
std
icebp
mov
dec
jo
popf
roll
lahf
jno
sbb
inc
xchg
clc
push
and
stos
lret
hlt
jecxz
dec
mov
jmp
pop
cmp
mov
mov
adc
dec
test
cmc
xchg
mov
xchg
xor
les
idivl
out
xchg
sbb
pand
scas
or
mov
pushf
cwtl
or
mov
xchg
rclb
push
mov
mov
mov
xor
es
scas
xchg
cli
mov
fidivrs
call
cmpsl
or
out
mov
mov
sbb
dec
ljmp
and
jns
in
mov
aas
mov
rclb
ds
mov
xchg
mov
push
fistpll
xchg
cmp
mov
sti
enter
sub
mov
in
cltd
mov
push
mov
out
mov
sbb
test
jle
jge
xor
pop
repz
mov
leave
adc
hlt
push
loope
testb
popa
insb
pop
test
inc
mov
add
adc
fs
lods
pop
add
sahf
push
ret
pop
push
and
add
fisubl
or
outsl
fsubrl
pop
jne
gs
fdivr
mov
test
lds
loopne
mov
dec
addr16
inc
fnstsw
mov
pop
push
add
or
orl
stos
mov
addb
repnz
les
test
sub
inc
daa
arpl
call
cmp
dec
jns
cltd
sti
mov
mov
pop
adc
loope
jb
outsl
mov
fcompl
sbb
shlb
push
test
out
test
lods
adc
sbbb
ljmp
bound
sarb
rcrb
cmpl
push
push
add
aaa
mov
jecxz
sub
adc
and
fidivrs
movsb
daa
je
data16
xor
add
inc
or
xchg
jp
adc
adc
bound
xor
add
repnz
xor
shll
int
xor
jns
int
outsb
clc
jg
stos
push
ret
jl
or
jnp
lods
jbe
addb
divl
out
mov
add
incb
adc
jmp
pusha
out
pushl
push
adc
cmc
adc
dec
out
sahf
inc
xchg
sub
pop
gs
cmp
add
or
push
sub
mov
ret
inc
enter
shlb
in
sub
xor
lret
daa
stc
stos
sub
jl
inc
mov
xor
cltd
xchg
fwait
jl
frstpm(287
jns
push
and
js
rclb
into
aaa
aam
movaps
cmp
aaa
jl
scas
js
les
js
xor
inc
aaa
addr16
cmp
jno
xchg
testl
dec
insl
dec
pop
arpl
xchg
ljmp
repnz
jg
pop
call
insb
imul
enter
xchg
loope
ja
sub
lds
popf
push
call
xchg
xchg
insl
push
push
test
repnz
sub
push
lods
or
loopne
add
fadds
int3
dec
jmp
incl
bound
jge
sti
xchg
scas
mov
cmpsb
pop
pop
xchg
mov
mov
ret
pop
clc
hlt
test
and
xor
inc
xor
sub
inc
jo,pn
pushf
sub
push
test
stos
pop
adc
call
and
stos
pop
add
and
outsb
frstor
fs
test
icebp
add
xchg
in
lahf
pop
pop
dec
dec
mov
fwait
mov
daa
dec
jle
fs
xchg
mov
mov
mov
sbb
je
imul
jl
fldl
ret
cmpsb
adc
mov
add
addr16
out
or
pop
das
mov
push
lcall
xchg
sarl
std
jne
fldlg2
jne
stos
nop
or
mov
pop
scas
ljmp
sbb
insb
pusha
jle
mov
mov
cli
pop
pusha
xor
sbb
push
add
repnz
mov
arpl
mov
and
mov
sub
out
mov
aaa
and
inc
arpl
jg
xlat
scas
xlat
popf
movsl
xchg
jl
aaa
mov
jbe
rcll
loop
inc
mov
dec
xlat
or
repz
mov
in
cli
pop
and
dec
pop
pop
mov
in
sub
adc
adc
add
std
ja
pop
mov
cwtl
and
pop
sti
sarb
popa
into
std
xchg
xor
push
sbb
cmp
or
mov
push
push
pushf
jb
sysenter
add
or
xchg
stc
out
inc
pushf
int3
xor
das
and
mov
adc
push
mov
das
pusha
jae
push
jne
repnz
xor
push
pushf
push
jp
jbe
inc
jg
dec
es
pop
pop
decb
push
in
push
popf
int
mov
push
outsb
jg
dec
scas
mov
jmp
int3
mov
push
cs
loopne
and
sub
jge
je
ret
es
movsb
and
rorb
mov
xchg
push
fwait
cmp
popa
jl
add
loope
testl
subl
mov
mov
mov
scas
loop
xchg
jo
mov
mov
in
dec
add
pushf
dec
mov
movsb
aam
stc
gs
jge
sub
adc
jo
fadds
adc
out
and
dec
ja
add
jge
jae
cltd
pop
ret
jl
inc
pushf
sbb
pop
or
les
stos
mov
dec
xchg
jno
pop
cmpb
or
sbb
shl
pop
dec
pop
pop
mov
dec
js
fsts
inc
add
push
leave
movsl
inc
inc
and
insl
push
adc
addr16
sti
xor
fidivs
inc
fistl
dec
in
xor
pop
add
call
ss
out
jb
ljmp
bound
pop
pop
xchg
add
push
add
in
imulb
outsl
ja
into
cld
xchg
iret
pop
jne
xor
mov
in
mov
mov
or
add
adc
insl
scas
ds
arpl
in
push
sub
xchg
pop
mov
sbb
mov
push
ret
fs
in
and
cwtl
les
or
pop
ror
xor
mov
enterw
fcom
inc
roll
lret
add
data16
clc
lahf
aad
popf
data16
add
out
sub
push
dec
push
inc
orb
xchg
call
pop
and
cwtl
jae
pop
cld
scas
dec
cmp
repz
aam
lds
cli
push
jo
adc
mov
into
xchg
out
add
xchg
dec
out
inc
add
aam
insl
and
jg
xor
jns
test
or
imul
jo
or
in
jge
inc
sub
and
filds
push
adc
xor
imull
fwait
mov
loopne
xchg
fisttpl
rcl
movsb
xchg
mov
dec
cmp
adc
mov
shrb
in
xor
push
ss
pop
out
cmp
add
ljmp
push
push
mov
lahf
adc
je
fstp
xor
xor
fnstenv
popa
push
js
add
pop
pop
mov
int3
or
andl
cmp
adc
add
aas
cltd
mov
sub
mov
mov
iret
and
add
adc
iret
push
cmc
imull
orl
lea
loop
pop
xchg
aad
sbb
push
aaa
stc
add
repnz
fadds
testl
inc
dec
insl
mov
lock
add
ror
imul
ds
xor
or
jmp
push
inc
andl
inc
push
and
pop
inc
lea
xchg
aam
adc
aad
fists
add
daa
shrb
pop
xor
jb
xchg
mov
cwtl
pusha
xor
enter
inc
movsl
xor
clc
daa
mov
and
jp
es
scas
fdivl
rclb
mov
pop
jo
pop
cmp
icebp
roll
mov
jg
inc
or
or
or
jl
outsb
test
fmull
xchg
pop
sub
adc
cli
int
rorl
mov
fisttpll
adc
adc
mov
xor
xchg
daa
jo
imul
add
mov
cs
lock
js
nop
pushf
mov
sbb
dec
jmp
fistpl
lds
rolb
daa
inc
cmp
idivl
std
loopne
pop
cld
movsl
cltd
sbb
mov
cmp
enter
pop
lods
pusha
imul
add
xor
jl
xchg
adcl
mov
jle
xchg
xor
das
dec
out
movsb
adc
mov
int
push
inc
add
jns
subl
fiaddl
sbb
sbb
inc
insl
cld
jge
in
inc
jg
outsb
pop
aaa
popa
pop
fs
sbb
jne
dec
pusha
xlat
adc
int3
push
ljmp
inc
sub
sub
sbb
xchg
insb
call
lods
mov
scas
inc
mov
fwait
push
sub
sub
test
or
xor
mov
mov
mov
movsl
jb
push
xchg
add
ficomps
stos
xchg
repz
test
add
movsl
cli
pusha
leave
lds
stos
cmp
or
sbb
sbb
push
imul
idiv
xchg
inc
xchg
inc
jo
push
divl
xor
inc
cmpsb
or
test
cmp
xor
inc
mov
pusha
adc
cmp
inc
or
mov
cmpsl
add
jp
xchg
arpl
fs
out
xor
loope
xchg
cmc
and
jl
sbb
scas
enter
adc
and
sbb
mov
es
movswl
pop
in
fmul
cmpsb
les
cmp
sub
imul
dec
imul
dec
jmp
leave
mov
fidivs
pop
inc
mov
and
xor
aam
cmpsl
push
xchg
and
inc
xor
dec
push
mov
xor
movsl
mov
cmpsl
push
and
mov
push
ret
iret
cmpsl
sahf
fdivrl
xchg
mov
aam
lock
imul
mov
nop
sub
aaa
inc
mov
lcall
fldl
xchg
call
sbb
loopne
shrb
mov
pop
sbb
push
cmp
cmc
add
inc
rorb
pop
aam
stc
icebp
pusha
jmp
cmpsb
stos
add
xchg
and
xchg
imul
lahf
inc
addl
dec
jbe
mov
mov
xlat
mov
cmpl
or
sbb
xor
jmp
and
test
sarl
push
mov
imul
xchg
xchg
pop
mov
cmp
pop
fcmovnbe
std
cltd
repz
gs
mov
shrl
cs
outsl
test
shll
push
push
imul
mov
movsb
add
outsb
std
lock
mov
sbb
fstpl
ja
imul
cmpsl
mov
adc
pop
push
pop
into
xor
mov
mov
idivl
mov
xchg
jae
in
jne
outsb
dec
roll
ret
into
out
lcall
test
mov
mov
xchg
lods
ret
movd
lret
and
test
mov
lret
mov
ret
or
cld
add
sub
movsl
mov
inc
add
iret
xchg
lea
mov
lret
pushf
fwait
jmp
inc
cmpsb
sarl
dec
push
push
pop
sub
test
sar
and
add
add
mov
enter
sub
enter
push
test
dec
cs
iret
sahf
or
in
mov
fiaddl
das
dec
adcl
jne
xchg
jge
das
and
notb
inc
hlt
add
repz
xor
jle
or
mov
dec
push
xor
inc
pusha
in
inc
cs
add
jns
mov
push
in
ret
cli
leave
xlat
push
and
cmp
push
inc
cmp
sub
ljmp
push
mov
sub
mov
std
pop
mov
cmpsb
lea
and
jge
cmpsb
adc
test
stos
pop
divl
sbb
outsl
lret
mov
vmovntps
icebp
fwait
stc
cmp
or
inc
out
rorl
pop
and
leave
outsl
mov
loope
testb
stos
pop
fcompl
daa
lock
enter
push
fldt
and
jl
into
fstl
or
lahf
push
add
mov
ljmp
pop
into
loopne
leave
xor
adc
enter
mov
into
mov
scas
mov
lods
xchg
and
jle
xchg
mov
jo
inc
and
icebp
xor
roll
mov
push
addr16
add
mov
add
mov
pushf
and
pushf
xchg
cmp
call
jns
pop
jns
inc
sbb
mov
roll
mov
mov
ds
stc
inc
mov
ror
mov
shlb
cmc
xor
test
xor
pop
and
aaa
fs
fwait
rol
inc
or
jmp
lret
sbb
pop
pop
jne
push
fdivrs
xor
adc
setg
or
rclb
or
jb
pop
xor
dec
lcall
cmpl
adc
frstor
clc
sub
add
ja
push
dec
adc
mov
push
lahf
andb
inc
decl
outsb
insb
jns
sbb
loopne
pop
call
push
push
push
bound
stos
lds
mov
data16
mov
inc
cmc
daa
jle
subb
mov
jp
adc
add
mov
daa
xchg
rclb
enter
or
iret
sahf
xor
por
sbb
mov
es
cmpsb
push
out
sub
call
jge
jne
adc
and
arpl
xor
cmpsb
or
stc
mov
dec
pop
xor
push
sti
and
mov
jmp
jg
fidivrl
fwait
push
mov
push
leave
adc
inc
lock
adc
outsl
rclb
fstl
xchg
shlb
xchg
xchg
xchg
daa
testb
mov
dec
dec
add
mov
inc
push
insl
in
movsb
lea
fistps
cmp
lock
scas
push
arpl
xchg
inc
xor
push
outsb
xchg
xor
and
rsm
inc
push
mov
cmp
cmp
in
dec
xor
clc
add
lds
icebp
cmpsl
xchg
sar
cmpsl
or
mov
sub
dec
dec
push
dec
mov
shrb
insb
mov
lods
ret
aad
push
fistpl
inc
xor
ret
dec
outsb
loope
out
push
sub
je
add
cmc
std
fisttps
sub
flds
push
int3
mov
cmpsl
mov
and
dec
xchg
pop
mov
iret
aad
pop
inc
jne
sbb
xchg
jl
pop
pop
push
inc
int
push
jle
push
jnp
cmp
pop
mov
cwtl
mov
jns
push
shrl
arpl
iret
dec
in
js
push
ss
and
daa
xchg
jo
and
pop
sahf
lods
xchg
cmp
or
mov
jp
xchg
fadds
lcall
push
in
xlat
js
ljmp
adc
shl
out
jae
in
push
fnstenv
and
adc
cs
add
sbb
lods
mov
add
cmp
xchg
jge
icebp
mov
sub
mov
fsts
sarb
jge
pop
int3
push
mov
lock
pusha
mov
push
popf
por
lcall
cli
stos
sarl
insl
mov
jns
notl
clc
xchg
cmp
sbb
movsl
sti
jl
outsb
repz
out
push
nop
pop
es
fadds
sub
or
bound
sbb
sahf
mov
outsb
cpuid
lock
inc
clc
hlt
mov
inc
cmpsl
xor
fnstenv
push
push
cmp
insl
aaa
xchg
inc
insl
push
xlat
in
stos
xchg
add
pop
push
js
sub
add
inc
push
lea
mov
cli
rcr
dec
add
das
jne
insb
das
lea
jmp
repz
mov
or
mov
add
push
aad
jo
test
insb
jb
inc
or
cli
xchg
ja
mov
dec
adc
jl
sub
pusha
mov
lcall
es
cmp
pop
pop
pop
adc
or
sahf
cmc
stos
pop
dec
inc
xchg
sub
add
repz
lods
shrl
push
pop
fsubrl
in
push
push
cmp
dec
gs
clc
ljmp
mov
pop
fmull
lret
test
cwtl
loope
pop
xchg
or
xchg
sbb
insl
repnz
repz
dec
ja
int3
xchg
mov
ret
testb
push
push
in
jp
orl
jb
stc
rcrl
lock
scas
aaa
aad
lea
inc
ret
inc
stos
out
repnz
and
add
pop
dec
dec
cmpsl
sub
cli
or
cmc
inc
ds
lret
fistps
hlt
xor
xorl
mov
or
mov
mov
shll
dec
push
jl
pop
push
add
mov
jbe
xor
lret
or
movsl
aas
push
mov
cmp
jae
lds
icebp
push
lock
stc
lret
jg
clc
int3
sbb
sti
mov
cmp
xchg
insl
repz
cli
mov
iret
push
jle
dec
and
js
adc
push
sub
add
lret
lock
adc
mov
add
js
add
sub
mov
inc
icebp
sbb
mov
push
addl
mov
adc
test
adc
popf
cmp
dec
mov
add
adc
repnz
int3
pop
mov
push
fistpl
push
ret
outsb
add
addr16
test
addl
loopne
xchg
scas
pop
pop
dec
jo
mov
sub
repnz
cmpsb
xorl
out
xchg
jle
xchg
pop
int3
inc
inc
mov
or
aam
push
mov
pushl
into
cld
ds
sarb
test
inc
add
dec
mov
jmp
std
notb
ret
call
sbb
ja
xchg
xchg
daa
inc
iret
sub
outsb
cs
arpl
cmp
push
add
xchg
loope
jl
mov
sti
nop
mov
dec
cli
or
repnz
call
sub
push
cld
fstps
stc
pop
call
imul
lods
mov
mov
mov
add
xlat
ss
mov
int3
sub
nop
add
loope,pn
dec
ljmp
scas
mov
std
sarl
push
pop
out
lods
mov
notb
mov
cmp
outsb
push
int3
cmpsl
add
xchg
mov
lds
imul
jp
fildl
mov
sbb
cmp
in
jnp
int3
pop
je
push
cmp
sbb
loopne
je
xchg
or
xor
aas
sub
mov
mov
xchg
mov
xchg
push
andl
add
ds
fiadds
lcall
add
rcll
xchg
push
lret
inc
movsb
jmp
mov
dec
pop
lret
add
imulb
inc
mov
fisubrs
stos
jle
hlt
lret
ficomps
mov
das
scas
dec
push
mov
sarl
loop
lahf
adc
out
and
shlb
jmp
in
lahf
cmp
push
fldcw
jbe
dec
sti
sub
aas
fldl
jl
and
mulb
leave
xorl
test
fsubs
and
cmp
lcall
fcoml
or
jo
xor
roll
cmp
sub
lcall
xor
inc
mov
test
add
jb
inc
mov
es
inc
and
xchg
jmp
inc
popa
xchg
jae
sbb
loopne
sbb
mov
test
fldl
mov
js
fs
stc
or
scas
outsl
jg
pop
pop
shll
scas
popf
call
jo,pn
bnd
add
movsl
out
in
jnp
mov
dec
jecxz
xor
subl
jle
std
adc
test
fcoms
testl
loop
jecxz
lret
cli
push
mov
and
out
xor
in
ret
push
push
xchg
mov
aam
add
ja
fsts
movsl
movsb
mull
pop
mov
repz
aam
cld
jb
inc
mov
pop
sbb
mov
lahf
add
sbb
cmp
adc
je
mov
out
hlt
xchg
add
lods
ljmp
jbe
mov
xchg
mov
push
inc
scas
push
or
mov
fildll
aam
xor
gs
sub
idivl
lea
and
sbb
popf
inc
scas
mov
lock
call
xchg
jg
daa
ja
jbe
les
xor
int3
sti
das
ds
or
and
out
inc
loop
sub
repnz
int
out
sub
push
cmpsl
es
mov
mov
stc
dec
pop
test
dec
xlat
inc
jge
sub
mov
test
jp
jge
fwait
rorl
mov
lret
mov
mov
subl
adc
test
inc
rcrb
js
add
sbb
dec
mov
imul
pop
cmp
pusha
imul
rcrl
ja
in
sarb
lret
xlat
movsl
jmp
cmp
sub
push
std
repnz
and
outsl
aas
js
and
lret
bound
into
jp
add
dec
pop
mov
aas
xchg
ds
fdivs
xchg
push
mov
fwait
mov
push
lret
sbb
popf
dec
cld
fildl
mov
je
mov
push
pop
or
sahf
fiaddl
stos
mov
or
sarb
outsb
sbb
pushw
scas
sbb
fcomi
sbb
and
in
popf
push
sbb
sysret
xchg
cmp
push
pushf
daa
jno
or
das
insb
stos
out
out
ljmp
jl
inc
inc
icebp
in
sub
cmp
mov
outsl
push
push
test
jg
pop
jae
jecxz
push
mov
inc
dec
mov
push
test
jmp
mov
cmp
roll
dec
pushf
cmp
mov
in
jbe
shr
mov
mov
cli
adc
lahf
sar
or
sbb
push
lods
insl
cmc
out
dec
in
sub
repnz
out
js
or
ret
call
sub
movsl
mov
mov
es
sbb
jo
mov
inc
adc
fidivl
addr16
cltd
adc
out
dec
fisubrl
dec
push
sahf
bnd
test
mov
xchg
pop
cli
dec
arpl
and
and
add
xor
xor
xchg
imul
xchg
js
repz
clc
push
cmp
aad
jmp
or
or
cmp
aam
orl
hlt
sub
lret
fiaddl
and
insl
adc
mov
mov
cli
daa
pop
lods
add
cmp
jl
jge
xor
jecxz
xchg
jno
or
cs
xor
pop
pop
daa
dec
adc
sarl
cli
lock
dec
outsl
shrl
or
lcall
jae
pop
jo
cmp
inc
add
stc
std
dec
scas
cmp
test
pop
cld
cli
push
mov
nop
adc
fidivl
inc
jg
and
mov
pop
mov
pop
jmp
movsl
imul
ror
pop
or
loop
les
jge
mov
jnp
mov
cld
pushf
add
jns
ja
enter
out
imul
ret
outsb
ljmp
les
lock
xchg
orl
lret
ja
or
mov
and
push
sub
popa
sub
outsl
insl
dec
dec
bound
test
jns
dec
push
punpckhwd
jmp
sbb
notb
mov
mov
mov
cwtl
jmp
and
sbb
mov
push
sbb
mov
jne
jnp
iret
fcmovnbe
std
push
mov
dec
movsb
dec
jb
ja
sbb
cmp
in
add
pop
les
and
pop
jg
mov
mov
ljmp
ljmp
je
dec
fbld
imul
adc
adcb
sbb
add
dec
fnstsw
je
or
pop
das
repz
jg
mov
or
mov
aaa
fistpll
repnz
mov
jno
data16
sub
lahf
rcll
xor
mov
mov
in
xorb
xor
gs
and
pusha
aad
stc
out
mov
dec
push
shlb
cmp
pop
scas
pop
cmp
xor
mov
push
add
stc
jo
sub
fnsave
xchg
mov
rorb
mov
insb
aaa
out
inc
xor
sbbl
cmp
sarb
das
or
mov
in
sub
in
pop
pop
andb
adc
mov
pop
dec
pop
stc
and
rol
mov
out
shr
lods
out
inc
push
cld
or
roll
ret
shl
add
out
dec
jns
jmp
fwait
lret
push
out
test
xor
xchg
outsl
xor
cmp
and
decb
and
insb
mov
mov
insl
push
icebp
mov
insl
pop
loop
xchg
mov
fidivs
cmp
dec
dec
test
mov
sub
push
and
test
aam
ret
into
push
gs
mov
imull
or
out
pop
cmp
fiaddl
out
pop
insb
in
adc
cmc
xchg
push
cmp
or
int
jmp
imul
cmp
inc
aam
imul
mov
popf
test
outsb
inc
setae
and
inc
xchg
dec
lret
cmpsb
jns
or
aad
scas
bound
dec
stos
push
pop
and
jle
sub
in
call
xor
std
xchg
cmp
xor
xchg
push
xchg
stos
lret
mov
xorl
xor
push
les
enter
sub
inc
pop
mov
test
sbb
iret
sbb
mov
mov
jl
dec
lock
ss
cld
cld
movsb
int3
jno
pop
shll
mov
icebp
mov
push
sbb
xor
lods
aaa
cmp
in
gs
and
lret
stos
pop
loop
loop
insl
cmp
cmp
xchg
movsb
add
mov
sbb
mov
ss
sarb
fs
popa
mov
mov
or
adcl
inc
pop
xchg
push
cmp
testb
and
lret
shl
mov
shrb
inc
les
movsb
stos
cmp
pop
adc
inc
movsl
mov
lods
lahf
dec
jle
jo
subb
cwtl
stos
lahf
sub
mov
xor
xlat
fwait
les
sbb
ds
fwait
cs
inc
ret
cmc
outsb
flds
jns
pop
mov
pop
ljmp
mov
jnp
fsts
cmpsl
xchg
cmpsb
idivl
std
inc
sbb
pop
mov
push
fwait
xchg
sbb
inc
popa
sub
dec
xchg
pop
lds
jbe
mov
xchg
mov
cltd
rcrl
xlat
out
jno
mov
and
jbe
sbb
inc
adc
xor
ret
or
ljmp
push
and
les
gs
pop
fs
add
sbb
call
in
out
xchg
gs
stos
out
jecxz
lods
fnstsw
mov
ja
jge
out
repnz
lods
mov
sahf
dec
mov
mov
push
mov
sub
scas
push
pop
cli
push
ss
jnp
into
pop
sbb
unpcklps
out
inc
pop
cmp
push
sbb
xchg
pop
ror
nop
sti
ljmp
add
xor
dec
in
mov
push
sub
inc
jg
lods
inc
je
mov
sub
push
pop
mov
dec
insl
test
adc
fcmovbe
jg
rcl
dec
mov
push
out
pop
sbbl
pop
loope
and
shrl
outsl
and
inc
mov
sub
pop
mov
push
mov
pop
shl
lods
rcll
cwtl
jo
stos
xchg
popa
js
addr16
jne
cmc
pop
and
pushf
rcr
aaa
out
stc
arpl
inc
xchg
jl
xor
push
jmp
add
push
cmp
xchg
lahf
faddl
jnp
sbb
ret
mov
jo
jbe
mov
ljmp
test
jl
xchg
push
lahf
insb
sbb
cmp
mov
loopne
call
push
jae
lea
hlt
cmc
mov
iret
sarl
sahf
pop
fimull
insb
sub
jp
enter
mov
dec
stos
sbb
push
sub
pusha
jge
sub
mov
add
push
inc
pop
fwait
outsl
lock
mov
ss
loope
lahf
mov
mov
cwtl
jmp
test
xor
xor
imul
and
adc
jno
shl
sbb
adc
add
mov
lret
push
adc
push
and
xchg
pop
mov
stc
fidivs
cmp
or
aas
ret
sbb
xchg
cmpsb
inc
pushf
fwait
push
rclb
add
aaa
lock
mov
mov
sbb
mov
leave
insl
je
mov
je
rcrl
jg
sub
push
push
ja
or
mov
xchg
ret
xor
xchg
fdivp
scas
sysexit
mov
jo
push
imul
xchg
pop
rcrb
imul
pop
push
push
or
rclb
ror
sbb
cmpsb
outsl
mov
xchg
or
adc
rcll
pop
cli
test
mov
jo
add
push
sub
hlt
xor
test
sbb
mov
lcall
cmpsb
sbb
repnz
xor
pop
dec
mov
dec
cmp
mov
fsubl
mov
inc
mov
fidivs
hlt
add
enter
xor
xchg
ja
fst
mov
es
fbstp
out
mov
cmc
jne
ret
mov
insb
xchg
sbb
popf
jne
sbb
insb
imul
mov
iret
addr16
pop
enter
mov
xchg
mov
pusha
popf
ljmp
hlt
inc
icebp
fsubl
xor
dec
push
clc
shll
add
push
and
js
inc
int
in
and
pop
or
jmp
jb
sbb
aaa
and
mov
or
cmc
bound
cmp
ljmp
and
test
mov
dec
xor
push
fdivl
xor
mov
mov
outsb
mov
push
lcall
sub
movsb
mov
in
adc
pop
jae
dec
pop
xor
xchg
mov
mov
sarb
icebp
insl
pop
aam
adc
cmp
insb
bswap
stos
mov
and
fists
movb
push
push
dec
aam
movsb
mov
and
clc
mov
cmp
pop
repnz
test
out
cltd
filds
ret
cmpsl
jb
pop
les
mov
aaa
lret
add
repz
inc
dec
jo
pop
insl
mov
incb
cmp
lret
mov
xor
out
or
mov
sub
les
cmp
and
push
pop
lret
xchg
xchg
arpl
mov
lds
cs
test
stos
lods
test
hlt
xchg
and
push
les
lods
xchg
test
popf
jno
xchg
sbb
ja
mov
fisttpll
sub
popa
arpl
fwait
mov
mov
sub
mov
sub
cs
jnp
loope
jbe
insb
jge
cmc
and
pop
mov
adc
or
add
sbb
notb
jae
inc
xchg
mov
mov
das
cwtl
inc
mov
sbb
jb
ja
jo
inc
pushf
mov
pop
mov
stos
xchg
sub
call
push
or
jne
or
or
add
xchg
std
cmp
or
mov
push
pop
outsl
inc
add
xor
inc
insl
jne
in
in
aad
jecxz
jl
or
and
mov
pusha
pop
push
cvtps2pi
fdivs
mov
js
inc
in
lcall
sbb
push
add
pop
push
mov
iret
cmp
mov
inc
repz
out
stc
loop
stc
in
outsb
sub
mov
into
mov
jne
add
jo
jae
inc
mov
dec
shll
in
ja
adc
ret
xchg
mov
ss
daa
push
dec
xchg
jo
xchg
jne
xor
jle
mov
push
cltd
lds
gs
test
push
mov
mov
fwait
out
xchg
mov
and
outsb
mov
enter
in
push
pop
xor
incl
hlt
ret
les
mov
loop
sbbl
adc
and
pop
std
lods
lea
dec
inc
rorl
mov
insb
inc
sbb
mov
push
sub
xchg
jo
jo
push
push
xchg
add
cli
sub
out
ss
sbb
jl
cmp
lret
pop
into
mov
aad
sbb
popf
xchg
fdivr
cmp
pop
sub
lret
or
fimuls
sbb
mov
das
ja
pop
xchg
bound
jne
push
mov
sub
dec
pop
sbb
inc
sarl
or
dec
sbb
jge
pusha
pmuludq
push
mov
inc
pusha
sub
ja
mov
xchg
push
jge
aas
adc
negl
test
sbb
xchg
addb
sbb
aad
sub
mov
add
mov
out
push
call
shrl
test
cld
mov
mov
mov
push
or
sbb
pusha
or
or
int3
cmpsb
xor
cs
add
mov
dec
imul
cmc
les
and
pop
cli
push
shll
imul
imul
std
inc
xorl
pop
fnsave
es
enter
cmp
inc
mov
sub
mov
pushf
jle
pusha
cmp
sub
cwtl
add
rcll
int3
es
lahf
push
aam
mov
std
push
add
stos
pop
and
mov
pop
call
rclb
daa
in
test
sbb
inc
sbb
or
push
or
test
mov
dec
push
push
iret
ljmp
lret
push
jne
outsl
dec
adc
testb
mov
popf
dec
xchg
mov
jns
and
loop
cwtl
jae
sbb
out
or
sbb
jp
dec
cli
push
daa
mov
out
mov
cmp
or
loope
mov
addr16
mov
and
insl
es
cs
je
sub
adc
push
cmp
das
aas
les
push
or
mov
enter
stc
std
or
stc
sub
mov
mov
and
push
and
les
adc
xor
test
lea
fst
cmpsl
mov
cmp
mov
sub
add
jns
mov
and
push
dec
jno
out
fcoml
scas
sbb
add
movsb
xlat
in
xchg
add
jg
cmp
dec
lods
push
ss
lret
rolb
jge
dec
into
pop
loopne
mov
xchg
adc
mov
cmpsl
andps
xchg
mov
idiv
mov
mov
movsl
in
xchg
pop
jb
loope
pop
scas
mov
lea
add
add
icebp
cmpl
int
in
push
hlt
cld
inc
leave
inc
pop
mov
out
rcll
mov
inc
scas
icebp
adc
mov
and
push
xchg
loop
ret
les
sub
pop
sub
push
sarl
dec
xor
daa
sti
pusha
lea
mov
mov
sbb
stos
negl
mov
adc
add
add
mov
xchg
rep
add
push
xchg
lahf
and
subb
xor
jnp
out
fistpl
leave
orl
sbb
incl
out
cmc
ror
std
add
jp
cwtl
ret
dec
aaa
dec
lcall
xchg
jae
sub
cmpsb
ja
pop
orb
fs
push
test
das
movsl
jle
outsb
in
jae
leave
test
xchg
sbb
adc
dec
popf
fisubl
or
sbbb
stos
setb
mov
popf
aad
mov
and
dec
ret
pop
call
fistl
fcomi
jge
outsl
dec
mov
jo
add
pop
pop
rcpps
xchg
fdivs
sarb
lods
sbb
jle
int3
scas
shl
test
push
push
jnp
dec
insl
shrb
mov
push
xchg
lret
lret
inc
adc
add
mov
stc
xchg
call
pop
jge
faddp
or
sahf
mov
push
ret
mov
mov
and
xchg
push
adc
test
mov
insb
inc
cmp
or
lods
mov
jg
stc
add
sub
rclb
sbb
mov
jecxz
pop
mov
leave
pop
mov
push
push
add
dec
ja
jne
adc
adc
fimuls
ficompl
psrad
jecxz
jp
add
mov
cld
fimuls
dec
pop
cltd
cwtl
loop
mov
mov
mov
mov
lds
popa
jns
bound
out
inc
in
lret
pop
add
sub
jnp
cltd
sbb
xorl
lret
dec
cmp
arpl
or
mov
mov
cmc
ljmp
inc
ror
ret
idivb
add
aad
inc
lcall
inc
jno
loop
fisubs
sub
roll
jp
outsl
pushf
cmp
dec
rolb
scas
jecxz,pt
push
es
lret
pop
sbb
pop
xor
nop
imul
ret
shlb
mov
dec
fsub
outsb
sub
ds
mov
jle
push
lds
jbe
jle
add
lahf
mov
lods
mov
imul
mov
xchg
pop
inc
add
out
outsb
dec
dec
clc
int
pushf
in
stos
loopne
imul
sub
jmp
fdivl
pop
dec
xorl
cmp
fs
and
xor
fildll
in
or
daa
jbe
adcb
arpl
cmp
fldcw
pusha
cmpsb
incl
jg
hlt
pusha
scas
adcb
sarl
adc
cmp
sbb
mov
mov
out
sub
test
jne
mov
mov
and
xchg
ja
dec
pop
jbe
xchg
cli
xchg
fiadds
inc
jge
iret
out
aad
mov
jmp
das
jmp
ret
popa
jne
fimuls
lods
mov
ljmp
aam
mov
dec
dec
pop
popa
in
pop
and
fiadds
pop
mov
rorb
es
lcall
movsl
sbb
lods
lods
cs
jp
and
add
loop
jb
js
add
pop
sbb
nop
clc
pop
clc
hlt
mov
cmp
in
mov
mov
xchg
aaa
sbb
mov
sub
pusha
dec
scas
es
push
ljmp
ss
sub
jl
sub
cld
mov
pop
lahf
jmp
cmp
or
movb
fwait
dec
aam
lcall
cli
lcall
into
nop
or
negb
or
sbb
into
jnp
cmp
imull
fidivrl
cli
loop
es
rolb
test
lea
mov
cltd
frstor
movq
or
test
mov
icebp
or
cmp
mov
adc
cli
rolb
ficompl
test
sahf
jle
sbbb
jmp
sbb
or
dec
mov
adc
repz
mov
mov
div
ret
inc
test
push
xor
clc
inc
popf
int3
sahf
in
mov
aaa
inc
mov
shl
sub
cltd
push
pushf
mov
pop
cmpsb
mov
dec
faddp
scas
daa
xchg
movsb
dec
outsl
push
outsl
sub
jg
fimull
mov
ret
outsl
xchg
mov
stc
mov
daa
mov
mov
mov
pop
inc
adc
push
xor
pop
adcb
rolb
ljmp
pop
add
inc
add
dec
adc
dec
and
mov
push
mov
mov
add
ja
inc
adc
push
movsl
push
mov
scas
cld
bound
push
sbb
or
aaa
movsb
jge
dec
mov
nop
scas
pusha
mov
in
adc
xor
add
mov
negb
out
das
ss
mov
repz
fdivs
jmp
sti
into
scas
add
lahf
pop
and
movsb
outsl
loopne
dec
fcom
shrb
xor
pop
iret
les
pop
pushf
icebp
fdiv
lods
mov
bound
xor
sahf
inc
inc
add
shrb
sbbb
and
inc
fcmovbe
dec
popf
cmpsb
add
fmuls
lock
movsb
fisttps
nop
ret
push
push
std
jmp
dec
mov
out
mov
jmp
data16
push
jae
call
push
inc
mov
xchg
pop
fisttps
test
add
xchg
pop
cmpsb
inc
fstl
mov
icebp
loop
xor
cmp
jmp
push
shlb
and
dec
mov
jne
inc
dec
fcmovne
lods
sub
push
sbb
shll
or
adc
out
sti
jp
enter
cmpsl
pop
mov
add
jnp
adc
mov
adc
imul
or
cmp
jg
insl
test
repnz
roll
in
popa
inc
jl
das
mov
sbb
pop
lahf
shlb
lods
xchg
dec
rcrb
sahf
and
mov
lods
mov
cld
shll
in
mov
add
loop
or
jnp
shrb
clc
pop
mov
aam
mov
add
mov
or
into
lds
dec
adc
mov
loopne
in
add
ja
pop
jle
jnp
push
lods
cmp
inc
adc
or
arpl
xor
xchg
test
imul
jne
xchg
rorb
fiaddl
add
mov
mov
rcll
fsubr
movsl
xchg
dec
addl
and
lahf
sti
andl
fisttpl
cmp
sarl
jl
popa
daa
push
add
insb
mov
jmp
mov
mov
mov
mov
mov
adc
inc
xchg
fstps
cltd
mov
insl
xor
sbb
jle
pop
call
mov
out
lea
lea
cli
sbb
xlat
into
sub
std
clc
fiadds
cli
and
mov
pushl
into
jnp
jae
sbb
es
mov
jp
xchg
jns
adc
mov
pop
inc
push
push
int
jns
aaa
xor
mov
sahf
sub
leave
movsl
insb
jmp
out
dec
stos
push
sarl
out
sbb
cmp
pop
out
mov
adc
sub
loope
sub
fsubs
mov
dec
pop
cwtl
adc
es
cmp
dec
jb
adc
xchg
jns
dec
jae
sub
int
dec
add
imul
dec
and
jb
pop
lods
jno
push
sahf
in
sub
repnz
dec
push
fnstsw
ljmp
mov
data16
mov
dec
ret
cmp
nop
mov
mov
dec
movl
jge
sub
add
pop
sub
and
xchg
inc
sbbl
xorl
dec
daa
call
push
cli
movb
ja
icebp
adc
adc
adc
mov
cwtl
mov
fldl
add
call
fsts
js
mov
xlat
arpl
aaa
rcrb
into
je
stos
clc
stos
in
loopne
xchg
outsb
fmull
icebp
sahf
or
mov
push
repz
shrl
sarb
sbb
jne
mov
ret
jno
xor
jns
sbb
in
adc
pop
cli
test
xor
shll
mov
push
adcl
add
jl
jbe
jb
cmp
jno
pop
dec
movl
push
dec
imul
lcall
imul
sbb
hlt
es
adc
dec
imul
fisttpll
or
push
cmpsl
sub
int3
jb
mov
testb
jbe
pop
sbb
addr16
fwait
popf
sbb
xlat
sar
xor
mov
testl
jb
jge
sahf
add
push
inc
dec
stos
cmp
xchg
test
push
aaa
pop
fldl2t
or
mov
inc
scas
xchg
sub
aad
in
mov
mov
es
mov
lret
xor
inc
dec
sub
xor
and
and
sti
fsubr
scas
xchg
lcall
mov
fcoms
ficomps
lods
adc
push
movsb
out
dec
cwtl
pop
lcall
popa
ss
or
sahf
cmpsl
inc
pop
inc
mov
aaa
xchg
dec
pushf
inc
dec
push
add
fisubs
rcrl
inc
sti
stos
iret
jnp
fidivrs
xchg
adc
adcb
and
or
into
mov
divl
pop
adc
test
cmp
mov
push
jmp
and
xor
or
lret
xor
ja
xor
jp
cmp
jl
sbb
out
enter
outsl
loop
xchg
push
out
xchg
add
jg
stos
dec
sub
mov
mov
ret
pop
cmp
mov
jno
xchg
cli
dec
or
or
jecxz
ret
fldl
mov
inc
mov
inc
jae
int
push
mov
dec
pop
shll
cli
orl
jnp
loope
lods
roll
mov
jecxz
adc
loope
inc
loopne
push
or
and
shlb
shrb
shl
xor
push
xor
imul
jns
cmpsl
and
mov
aas
outsl
dec
lret
jl
das
iret
addr16
movsl
aas
aas
into
xchg
push
aad
rol
xor
xchg
cmp
sub
in
mov
ret
test
outsb
shlb
andl
hlt
pop
add
imul
mov
mov
push
popf
adc
pop
lods
sbbl
mov
aaa
jo
cmp
shl
push
mov
or
out
sub
inc
or
xor
jbe
flds
push
mov
jne
mov
inc
stc
sbb
rcrl
dec
adcb
sarb
repnz
mov
mov
lods
int
arpl
jg
mov
lret
sbb
push
mov
adc
sub
dec
sub
xchg
add
sub
lds
loopne,pt
std
cmp
dec
je
push
cmp
jns
pusha
push
mov
testb
push
fsubrl
daa
sarb
add
pop
pop
sbb
iret
cmp
mov
lcall
xor
push
dec
in
push
call
xchg
movsl
dec
adcl
dec
lods
and
pop
jecxz
jp
cmp
xchg
xorl
into
pop
jl
adc
ljmp
and
pop
cs
shrb
aaa
fsubr
push
push
mov
mov
sbb
lret
cmpsl
jge
sti
xchg
inc
jns
loop
sahf
ja
xor
push
lock
push
inc
push
pop
es
std
in
pop
inc
xchg
pop
fst
popa
jne
scas
ds
inc
dec
ja
fcmovu
cmp
sub
fwait
add
mov
jecxz
notb
fldl2t
in
gs
mov
add
pop
mov
push
or
fiaddl
inc
in
adc
rdmsr
ret
cmp
adc
cmp
pop
call
inc
mov
mov
loop
lds
orb
xchg
fs
mov
out
cwtl
outsb
cmp
and
loope
xchg
bound
int3
jg
nop
sbb
fsubrl
out
push
jae
lahf
ljmp
push
ja
or
xor
jl
and
sub
cs
iret
lahf
pop
iret
test
mov
inc
mov
or
stos
lahf
int3
xor
aam
fs
out
dec
adc
rorb
xchg
fstpl
sbb
test
lds
incl
dec
sub
or
sbb
xor
mov
mov
pop
jmp
or
xchg
or
cmp
or
stos
jne
sbb
int
adc
add
shll
jae
adc
push
inc
xchg
pop
test
jae
lret
sbb
rcll
ret
jae
cmp
jmp
xor
add
cld
add
pushf
cmp
pop
mov
adc
hlt
push
scas
mov
sbb
mov
or
out
xorb
scas
std
das
je
jne
mov
dec
pop
mov
std
xchg
jmp
fldt
xor
inc
repnz
stc
subb
jns
xchg
data16
rcrb
inc
test
scas
addr16
adc
loope
adc
mov
fs
pop
pop
push
cmp
scas
popf
ret
sti
mov
je
int
push
mov
or
mov
xor
xchg
and
lret
add
inc
adc
and
sbbl
inc
loopne
rcl
mov
xchg
pandn
adc
mov
les
mov
adc
mov
imull
rcrb
jae
jbe
cmp
xchg
pushf
int
and
inc
enter
and
jecxz
mov
mov
lods
jl
ja
and
and
in
loope
cmpsb
aam
mov
adc
sub
mov
cmc
inc
or
test
test
push
push
testl
daa
add
out
rclb
arpl
push
xchg
mov
cwtl
jne
scas
and
mov
jbe
jae
ret
xchg
repz
stc
jl,pt
test
xor
mov
mov
popa
adc
dec
and
add
jne
loop
pushf
pop
pop
in
mov
pushf
pop
test
pop
pop
fildll
xchg
insb
int
sub
xor
ja
inc
jb
mov
sbb
movsl
push
xor
xchg
mov
scas
inc
adc
cli
pop
mov
cld
lahf
dec
movsl
ret
push
loopne
ret
jae
sub
xor
adc
test
cmp
subl
test
dec
jno
mov
shrb
sbb
and
pop
pop
xchg
outsl
cli
inc
lahf
push
push
call
fmull
or
and
dec
add
cmpsb
xchg
cwtl
inc
mov
sub
test
stc
xchg
push
lcall
cli
shlb
neg
mov
xchg
ljmp
jl
push
imul
fldln2
mov
nop
les
popa
sbb
xchg
or
mov
mov
stc
fs
sbb
jb
mov
jne
lahf
push
mov
dec
or
cmpsb
add
and
xorl
and
inc
inc
mov
or
push
cltd
js
and
rcr
mov
or
and
add
jno
lret
inc
mov
jno
shll
mov
jb
sti
push
jbe
bound
mov
mov
addr16
dec
add
xchg
repnz
dec
or
pop
fwait
loop
mov
lret
icebp
sbb
adc
and
jmp
mov
movsb
movsb
aas
daa
ds
pushf
mov
sub
stos
and
sub
stos
sub
lock
lods
cmpl
sbb
aaa
fbstp
push
push
stc
sahf
xchg
jmp
sbb
adc
fsubrp
inc
ret
sub
or
iret
int3
cwtl
push
dec
xchg
jnp
mov
push
cmp
outsb
cmc
sbb
jne
insb
shll
inc
push
adc
xor
push
dec
jecxz
iret
out
shlb
sub
cmpsl
shll
rorl
ret
sbb
loop
stos
je
ss
push
inc
pop
ret
fisubl
mov
jp
pop
adc
jg
xor
or
lods
lahf
std
push
lds
insb
inc
pop
xchg
out
pop
std
add
xchg
push
xchg
cmp
pmovmskb
icebp
in
inc
sbb
test
lahf
sbb
mov
and
push
pop
leave
int
outsl
es
cmp
ja
push
push
shr
popf
aas
fimull
je
xchg
adc
mov
bound
add
lock
outsb
or
xchg
and
mov
cli
mov
jle
mov
adcl
cmpsb
stos
mov
sub
imul
inc
out
pop
mov
fwait
push
test
cmp
sub
hlt
js
arpl
jl
pop
mov
mov
ja
insl
xchg
fstl
in
test
xlat
hlt
daa
loop
dec
xchg
push
repnz
negl
cmp
out
sti
and
adc
mov
xchg
sub
scas
cs
jbe
inc
dec
dec
push
fildll
jl
outsb
sub
arpl
inc
and
xchg
pop
xor
popa
dec
jo
or
xchg
xlat
mov
ret
cmp
out
xor
mov
pop
push
add
cld
in
cwtl
xchg
mov
rolb
orb
popa
sbb
push
push
inc
mov
das
sbb
sub
mov
ret
xor
jecxz
dec
mov
stos
adc
lahf
adc
pop
movsb
sbb
cmp
xor
popa
das
sub
mov
dec
and
pop
inc
sub
mov
sbb
push
cmp
or
in
iret
shrb
mov
pop
in
sbb
push
mov
orb
mov
sahf
adc
pushf
or
in
add
pusha
loopne
push
sub
lock
arpl
nop
xchg
sub
inc
in
imul
mov
stos
outsb
xor
pop
imulb
mov
adc
mov
pop
dec
jnp
mov
ljmp
insl
fs
out
inc
pop
pop
icebp
adc
mov
sub
scas
and
lcall
lret
orl
lock
mov
mov
aas
popa
pop
sarl
iret
test
jbe
jne
push
fisubl
mov
xchg
mov
dec
cmc
stos
pop
mov
bound
enter
test
add
fstl
sbb
filds
int
shll
and
ss
mov
pop
fidivl
cmp
movsl
add
pusha
fisttps
cmc
aam
out
pop
call
cmpsl
ds
mov
mov
mov
int
arpl
sub
and
sarb
add
lods
or
fistpl
in
dec
jo
add
mov
mov
pusha
jl
shrl
jo
in
add
jp
call
adc
jne
dec
mov
add
orb
ja
push
xchg
loope
push
gs
ljmp
sub
push
sub
mov
lret
inc
jmp
inc
faddl
or
fwait
testb
pop
adc
mov
xor
adc
pop
or
clc
push
repz
jno
cs
addr16
cmpb
sub
jno
test
lahf
push
jnp
inc
stos
aas
rorl
jge
mov
aad
cld
add
inc
jle
xchg
xor
sub
xchg
pop
push
stos
pop
iret
sahf
cmc
pop
jmp
in
jae
stos
icebp
incb
sub
bound
xchg
adc
daa
cmp
jle
dec
jne
mov
mov
mov
pop
xlat
sub
cwtl
out
in
push
cli
mov
insl
lods
mov
sbb
arpl
mov
scas
pop
stos
lahf
lods
andb
and
stos
xchg
cmp
ret
mov
pusha
sbb
mov
sahf
dec
hlt
jo
and
push
icebp
push
cmc
adc
loopne
imul
xchg
adc
adc
lcall
cmp
and
and
popf
sbb
sbb
cmc
stc
sbb
adcl
inc
add
push
pop
mov
jge
dec
adc
test
mov
jno
jo
pop
scas
stos
movsb
andb
out
out
jnp
mov
fbld
ds
sbb
sti
jle
pop
push
push
adc
cld
popf
mov
dec
pop
inc
pop
mov
in
mov
xchg
xor
and
int
and
and
mov
fsubrs
xchg
stc
jns
adc
dec
mov
ljmp
xor
in
cmc
xor
cmc
stos
mov
push
test
add
loopne
fiadds
push
xchg
lods
sbb
mov
push
jmp
inc
adc
and
sarl
xchg
xor
mov
cmp
push
xchg
xor
adc
mov
push
adc
lods
fld
xor
movsl
jo
and
popa
mov
movl
xor
inc
push
push
mov
icebp
cmp
add
lea
add
fwait
roll
decb
xchg
adc
add
xor
mov
mov
mov
xchg
pusha
inc
call
inc
jno
iret
je
jl
xchg
xchg
mov
push
xor
inc
sub
stos
xchg
pop
pop
test
in
mov
mov
rcrb
testl
jo
sub
das
scas
push
scas
or
push
jnp
xor
in
push
lock
leave
lock
repz
dec
mov
js
les
mov
add
sarl
pop
les
imull
hlt
pop
sub
mov
push
pop
add
rcrl
insl
ret
popf
xchg
pop
mov
addl
shl
rcrb
sbb
sub
pop
mov
addr16
mov
ds
sarb
shr
loopne
test
insb
repz
fsubrs
and
int
jl
xor
xchg
jg
ljmp
sbb
adc
ficoml
mov
jnp
jae
pop
cltd
mov
adc
cmp
or
clc
mov
das
movsb
mov
insl
addr16
push
push
mov
adc
fwait
in
adc
or
aaa
jle
push
ss
mov
and
cmpsl
cmp
jns
iret
shrl
cli
loope
lock
push
and
pushf
jb
xor
inc
imull
sub
jmp
std
popf
nop
push
jecxz
fadds
sahf
cmp
xor
jb
loopne
adc
inc
fucom
sahf
sub
jle
jmp
pop
pop
jo
ja
and
xlat
loope
xchg
jle
in
cmp
jnp
dec
mov
xchg
lods
cwtl
out
fildl
sub
jle
pusha
mov
movsb
xchg
jns
repnz
jbe
lret
cmc
int3
sbb
sub
lea
sbb
out
cli
call
xchg
lds
or
push
nop
cs
popa
xor
cmp
xchg
push
bound
or
xchg
or
mov
cwtl
sbb
repnz
xchg
jno
icebp
out
jnp
jns
dec
sub
sti
add
movsb
sbb
xchg
and
and
inc
addb
ret
aaa
pop
fcmovu
cli
cmp
rcl
fisttpl
push
xorb
mov
ss
or
xchg
shl
and
push
stos
dec
and
add
mov
fcomp
sub
lods
jl
jp
ret
loope
pop
pop
stos
push
cmc
cmovno
mov
int
pop
sbbb
xchg
scas
push
aam
arpl
aad
out
inc
mov
insl
mov
out
leave
sti
add
jmp
inc
adc
repz
loopne
push
std
xchg
mov
xchg
mov
or
cmp
adc
jae
or
pusha
fbstp
add
je
fdiv
pop
jb
push
in
push
sbbb
mov
adcb
in
cmp
and
dec
push
mov
push
xchg
push
daa
out
les
jp
addr16
dec
cmp
dec
and
pop
jecxz
inc
inc
mov
xor
mov
jecxz
test
push
xchg
sbb
out
aam
inc
iret
jae
push
gs
push
cmp
pusha
out
invd
je
ss
add
out
hlt
or
jp
nop
imul
std
and
pop
push
aad
int
jmp
pop
mov
cltd
cmp
addl
out
daa
push
and
inc
push
mov
add
push
jge
ror
shlb
jmp
and
dec
adcb
mov
out
outsb
mov
xchg
iret
adc
shr
push
mov
cmp
mov
sbb
jbe
imul
cmc
xor
dec
negl
lahf
push
mov
fs
cmp
fucomp
push
dec
hlt
scas
shlb
cmp
mov
cmp
clc
inc
mov
out
sub
lahf
cltd
pop
andb
cmpsl
popa
pop
adc
pusha
lods
outsl
push
repnz
inc
stos
pop
fbld
pop
int3
jle
fstps
jp
push
call
pop
mov
or
mov
pop
mov
movsb
mov
push
in
mov
roll
loope
shll
pop
js
cwtl
in
out
push
sbb
clc
sub
jb
test
and
inc
clc
enter
lret
and
in
repnz
xchg
rcrb
xor
xor
aas
push
das
xchg
xor
mov
nop
inc
inc
iret
mov
inc
jb
xchg
xchg
lahf
lds
iret
ficompl
test
nop
fsubr
jle
popa
inc
mov
pop
push
pushf
movsb
stos
inc
pop
call
sub
fdiv
dec
aaa
movb
mov
mov
addr16
pop
push
mov
sub
xlat
and
shll
jecxz
andnps
or
jl
dec
mov
out
push
sti
xchg
ja
movsl
mov
add
inc
sub
inc
movsb
int
ret
fstl
xchg
jmp
addr16
and
sub
mov
push
ds
jno
push
in
pop
movsb
in
sbb
jl
jecxz
aam
dec
xchg
push
leave
or
scas
cmp
mov
pusha
xor
cmp
jb
stos
sub
loope
mov
rorb
mov
stos
fidivs
aaa
push
jl
inc
call
push
lods
movsb
mov
out
mov
inc
daa
jecxz
jle
imulb
pushf
xchg
je
sahf
cmp
mov
lds
out
clc
sbbb
mov
mov
stos
into
xchg
dec
lods
and
add
test
faddl
pushf
es
lods
popa
pushf
xchg
pop
add
add
jp
lods
psubd
movsb
js
xchg
test
dec
lret
aam
iret
dec
jmp
mov
in
xchg
rcr
inc
notb
or
and
loop
add
testl
notb
xor
or
mov
inc
push
push
dec
jmp
sbb
ljmp
fisttpll
or
ds
lcall
cs
cmp
push
xor
sbb
pop
scas
push
in
push
enter
int3
jge
fmull
iret
mov
pusha
mov
xchg
add
int3
test
insb
jl
outsb
mov
add
sahf
jbe
je
jge
repnz
data16
imul
cmp
mov
mov
int3
aad
scas
adcb
xchg
fdiv
mov
into
sbb
fdivr
jne
mov
cld
les
filds
leave
sahf
ja
or
lcall
mov
cmp
sbb
jno
push
dec
inc
in
dec
push
popf
into
addr16
pop
addr16
inc
aad
inc
arpl
cli
leave
push
out
dec
ret
roll
push
cmpsl
mov
cmp
in
mov
mov
flds
into
into
or
pop
loopne
mov
cmc
jne
test
jne
pop
xor
sbb
mov
sarl
jecxz
sbb
lcall
js
cmp
rcrb
add
xchg
mov
sbb
mov
lea
enter
rclb
in
add
loop
push
repz
push
pmullw
xchg
flds
add
in
lock
mov
or
mov
xor
mov
in
sub
out
fisubs
add
pop
jne
dec
pop
stos
jle
js
xor
fisubl
sbb
addr16
jnp
jne
jb
mov
gs
inc
add
rorb
push
test
movsl
call
test
mov
enter
test
ss
add
jl
mov
pop
test
mov
shrb
cmp
insb
push
test
subl
loop
fucomip
add
push
dec
outsl
insb
daa
inc
das
iret
or
or
push
jp
divl
add
mov
jno
idivb
jg
out
xor
add
loop
jo
in
iret
push
test
or
and
scas
or
xor
pop
loopne
fildll
inc
mov
lea
xor
mov
jb
sbb
xlat
mov
ds
cmp
shll
mov
or
cmpsl
fcomp
jge
js
fisttpll
mov
dec
jle
adc
push
lods
jbe
aas
mov
jne
out
inc
cmp
sub
xor
and
and
push
dec
sub
mov
sub
push
iret
adc
add
pop
mov
loopne
sbb
ret
mov
cmp
mov
pop
imulb
nop
fnstenv
xor
push
add
sbbb
cmp
inc
ljmp
jecxz
sbb
inc
dec
inc
mov
xor
cmp
imul
leave
insb
cs
pop
std
mov
sbb
xor
imul
popa
fadd
jo
jmp
sbb
icebp
push
out
sbb
pop
ret
scas
and
out
mov
pop
fwait
jle
add
push
insb
cmc
xchg
lock
sbb
movsl
adc
test
sub
xchg
xorb
iret
popf
adc
mov
sbb
jp
sbb
repz
xchg
loop
ljmp
pop
and
mov
xchg
aam
hlt
jo
andl
cmp
popa
mov
ret
and
and
adcb
in
fs
pop
test
mov
lds
sbb
shrb
sub
push
ss
icebp
or
aas
das
pop
ljmp
int3
fldenv
das
mov
dec
int
push
testb
std
mov
xchg
test
mov
mov
push
inc
mov
loope
jmp
popa
std
mov
lahf
gs
pop
push
ljmp
dec
sbb
dec
test
and
in
mov
js
sub
xor
adc
cs
and
push
in
jbe
mov
in
scas
xor
int3
call
lds
jmp
pop
mov
rorl
scas
fidivl
lods
pop
add
xchg
call
lods
dec
jns
fsts
add
push
repz
cmpb
or
inc
or
or
xchg
push
dec
cli
ljmp
shrl
les
xchg
fldcw
or
fadd
sub
jbe
mov
andl
sub
push
mov
add
add
adc
shrl
push
mov
cmp
adc
and
ret
mov
imul
inc
data16
push
push
icebp
negb
inc
jg
pop
js
cmc
mov
cmp
push
adc
jo
mov
test
sub
and
movl
xchg
test
adc
add
xchg
loopne
fwait
shl
mov
add
stos
call
inc
add
int3
icebp
arpl
sbb
loope
adc
or
sbb
jbe
lcall
cli
mov
je
loope
pop
int
mov
notl
insl
and
int3
push
cli
xchg
sarb
mov
fdivl
adc
cmpsl
stos
xchg
sub
sahf
or
stos
bound
mov
subl
pusha
in
fiadds
sub
fmull
outsb
or
adc
push
push
jo
sbb
mov
xor
cmp
inc
jne
out
dec
imul
mov
or
int
pop
xor
inc
mov
shrl
pop
dec
loope
push
movsl
fadd
fs
loope
fmulp
dec
jne
imulb
popf
loopne
xchg
fldl
mov
push
clc
push
jmp
inc
xchg
lock
dec
sti
push
out
test
popa
stos
adc
shl
ljmp
fldenv
roll
in
cmp
lock
fwait
mov
or
sbb
mov
mov
lock
lret
adc
sbbb
pop
dec
fistpll
push
jb
or
js
push
bound
bnd
mov
sub
loope
sbb
jecxz
rol
scas
lret
insb
mov
cmpsb
or
mov
jecxz
shlb
push
sub
push
lahf
stos
addr16
sbb
jge
jp
fidivl
inc
dec
add
jns
ret
out
aas
xor
mov
cmpsb
ljmp
sbb
cmp
cld
das
adc
in
and
mov
jbe
adc
pop
popf
mov
mov
mov
xchg
out
fmull
and
mov
push
int3
ss
mov
cmp
xor
fwait
jo
popl
push
fbstp
daa
stos
sbb
lret
movsl
adc
notb
into
mov
push
dec
enter
lahf
xor
add
fimuls
data16
pop
arpl
negb
jmp
jg
dec
pop
push
jle
je
cli
nop
sub
jl
in
call
mov
jg
fistps
mov
cwtl
testl
cld
and
test
adc
sbb
and
ret
lods
mov
xor
lret
mov
dec
lods
mov
jp
dec
roll
jmp
stos
push
mov
push
sub
mov
out
lcall
call
loop
std
dec
adc
sbb
insb
jno
push
pop
sub
pop
ret
mov
ret
sti
pop
adc
mov
push
movsb
enter
add
add
cmp
inc
mull
sub
nop
outsb
fucomp
inc
push
cmp
xchg
cmp
add
mov
rcrb
add
lret
std
nop
mov
mov
sarb
in
pop
shll
ffreep
int3
arpl
leave
fisubl
push
pop
adc
fs
mov
cmp
fs
sub
pop
imul
mov
cld
cmp
lock
andl
push
mov
lahf
mov
xchg
push
pop
enter
xchg
fs
shrl
push
mov
push
cmp
cmp
jmp
into
mov
data16
mov
pop
mov
inc
add
cmp
push
mov
cmc
adc
mov
movsl
dec
xor
sbb
jl
add
ffree
mov
pop
imul
leave
pop
push
sarl
pop
popf
pop
sub
xor
dec
push
mov
or
aam
outsb
push
mov
sub
jge
in
jl
jb
pushl
std
sahf
and
out
leave
imul
lret
out
js
add
fs
pop
das
adc
jg
inc
or
xchg
push
shll
push
and
andl
pop
mov
mov
mov
hlt
pop
cmpsl
gs
scas
and
inc
pop
ljmp
daa
bnd
imul
xor
movsb
int3
leave
aad
sbb
sbb
orl
and
sti
out
ret
jnp
addl
pop
dec
bound
sub
xor
clc
xor
adcb
fdivrs
ja
es
sbb
inc
psrlw
pop
lods
sarb
xchg
mov
add
insb
bound
or
fisubrs
xchg
add
and
mov
jno
dec
xchg
aas
iret
cmp
sbb
add
stc
in
lock
nop
xor
popf
push
xor
nop
repnz
movb
rol
xor
iret
shrb
leave
shll
mov
into
fidivs
sti
lret
and
mov
aas
js
cli
jns
push
scas
mov
ja
loopne
ret
push
lret
andb
fcmovnbe
enter
js
jle
call
mov
imul
jg
push
imul
test
push
repnz
call
pop
jecxz
insl
xchg
out
mov
sbb
cmp
pushf
inc
sbb
or
lahf
mov
inc
mov
sub
or
mov
int
mov
inc
cli
and
andl
faddp
subb
dec
stc
mov
loopne
xchg
xor
enter
into
mov
addl
xchg
mov
ret
xchg
xor
and
aam
leave
enter
in
inc
jmp
xchg
and
loope
mov
add
test
lock
daa
xor
xor
mov
cmp
loopne
sti
mov
mov
cmp
aas
imul
out
outsb
xchg
add
sahf
jl
enter
mov
idivb
lahf
dec
data16
cmc
and
jne
xchg
dec
mov
mov
gs
fmull
jp
std
mov
xchg
pushl
adc
xchg
xchg
xchg
dec
pop
mov
mov
pop
mov
imul
fsts
push
inc
dec
pushf
lods
leave
and
lds
pop
test
call
sub
testl
push
clc
stos
xchg
sub
stos
adc
popf
mov
int
jb
arpl
adc
in
test
popf
stos
fidivrl
jmp
mov
enter
shrb
jle
cld
clc
mov
in
out
cs
xchg
repnz
daa
ficomps
mov
sbb
rorl
cwtl
loope
aam
push
loopne
push
or
cmp
push
add
std
stos
faddp
mov
pop
not
jp
jmp
sbb
test
inc
jns
lcall
push
fs
cmp
stos
and
xchg
xchg
mov
gs
mov
pop
jne
gs
andb
pop
lods
vcmppd
push
sub
xor
add
mov
push
mov
jg
out
dec
jae
lretw
push
sbb
fbstp
shlb
sbb
in
jns
push
sahf
xor
push
test
and
daa
int
testb
mov
ss
jmp
add
jae
test
int
jp
js
pop
shld
aas
andl
in
int
test
addr16
xchg
pop
jl
push
scas
cmp
fs
decb
into
sub
push
push
cmp
fildll
add
mov
fstp
mov
sub
mov
orb
dec
fidivrl
sysexit
scas
xchg
es
mov
jb
ficoml
add
push
sub
adc
push
and
mov
dec
jns,pn
mov
mov
and
mov
cmp
sub
enter
lcall
adc
fdivl
mov
mov
or
dec
cmc
lock
push
mov
sbb
add
popa
xchg
mov
mov
cmc
mov
dec
xchg
push
xor
xor
clc
push
lcall
ret
xor
jmp
dec
and
xor
adc
jne
mov
cli
shll
stos
outsb
sub
dec
nop
and
jbe
and
movsl
xchg
cmp
fadd
push
mov
jle
aas
ret
gs
out
jne
cmc
mov
pop
cs
jae
cld
push
jne
inc
push
mov
lcall
sbb
les
pop
out
mov
mov
mov
lds
test
loop
cmp
add
das
sub
jge
sbb
push
les
xlat
mov
sub
mov
jo
xchg
inc
pop
sbb
repz
push
rcr
mov
push
sub
mov
xor
pusha
lahf
pop
in
push
cmp
imul
repnz
sahf
rolb
int3
push
dec
adc
and
push
aas
push
aam
xor
sbb
cmp
mov
push
mov
rorl
jnp
mov
mov
lahf
push
pusha
mov
pop
inc
sbb
cmp
xchg
fldenv
cmp
call
jmp
mov
mov
repz
mov
xchg
addr16
inc
pop
push
pop
inc
push
mov
dec
imul
mov
in
add
je
jnp
stos
and
sub
adc
loop
mov
adc
jb
mov
jns
adc
inc
stos
addr16
inc
out
in
mov
inc
jns
ljmp
xchg
divb
in
inc
pop
pop
or
pop
nop
push
clc
inc
insl
push
xchg
stc
es
and
ja,pn
lods
dec
cwtl
fldenv
clc
adc
fidivs
loopne
mov
cs
imull
xchg
or
xchg
sub
out
jb
push
int
sbb
cmc
adc
mov
dec
cmp
loopne
sub
shll
xchg
jo
inc
dec
sub
loopne
bound
inc
jge
pop
fs
sbb
cli
push
and
xchg
rclb
fdivrl
mov
popf
inc
pop
cmp
loop
out
das
shrb
pop
cmp
xorb
fwait
xchg
sbb
mov
dec
and
pop
cmpsb
mov
cli
adc
loop
sub
xor
rcll
test
sbbl
or
fs
and
punpcklwd
addr16
fisubrs
mov
cmpsb
in
jae
icebp
outsl
into
cmp
pop
jb
xlat
xchg
js
pop
cmp
dec
sub
sbb
outsb
lods
cmp
mov
repz
push
sti
jl
testb
pop
cmp
aaa
pop
cmp
imul
jae
jbe
push
daa
mov
js
ficoms
outsl
addr16
imul
mov
push
repnz
enter
xchg
dec
xlat
xor
stc
sub
pop
cld
fcoml
mov
dec
rcrl
imul
inc
or
push
pop
cwtl
dec
aas
in
lock
int
fadds
out
mov
data16
mov
mov
add
jp
iret
dec
movsb
add
loope
push
movsb
cwtl
mov
cmp
add
stc
or
mov
fs
loope
cmpsb
rcrl
pop
stos
mull
xor
and
inc
ljmp
shll
mov
sub
mov
mov
or
out
push
sbbb
inc
sub
or
jns
mov
xchg
fcoms
cs
mov
mov
cmpsb
xchg
std
mov
jo
js
rcrl
ljmp
adc
xchg
leave
xor
stos
das
add
sbb
pop
and
mov
mov
sub
inc
inc
dec
add
xor
mov
mov
dec
mov
or
jp
test
cmp
ret
scas
testb
stos
mov
inc
int
mov
pop
shll
pop
lret
data16
xor
fcomps
ja
daa
and
mov
outsl
hlt
mov
jmp
movsl
pop
jge
push
or
stc
push
dec
ficoml
cmp
mov
add
pop
xor
mov
push
std
jmp
mov
inc
and
test
push
repz
push
enter
inc
push
jnp
jns
cs
bound
cmp
adc
les
xchg
mov
and
dec
jp
iret
push
adc
adc
fsubl
xchg
aas
pusha
xchg
jle
pop
lea
xorl
xchg
mov
mov
push
out
fs
and
jae
sbb
popa
xchg
decb
sti
leave
arpl
fs
sub
pop
clc
lods
add
xchg
xlat
ret
insl
addr16
aam
mov
ret
or
cmp
dec
outsb
fisubrs
sub
xor
adc
movsb
ror
xor
cli
sti
insl
insl
add
pop
out
popf
stc
push
and
pop
ds
xchg
daa
dec
dec
cmpsl
cmp
fs
outsb
mov
mov
test
cmc
adc
mov
xchg
pop
mov
dec
mov
sub
add
test
sub
pushf
pop
shrb
in
pop
aad
sbb
ss
fistpl
cwtl
es
into
nop
xor
pcmpgtd
jl
test
cmp
jecxz
cmp
cmp
ss
mov
cmpsl
mov
xchg
out
mov
pop
dec
call
fsubrl
or
repz
push
sub
gs
or
out
sbb
insb
sub
sbb
leave
fisubl
rorb
sbb
int3
into
xor
imul
and
cmpl
mov
push
fisubs
pushf
ds
std
mov
fisubrs
subl
push
add
pushf
jle
les
bound
jne
push
mov
jmp
cmpsb
pop
decb
inc
mov
aaa
adc
shrb
lds
xchg
jg
sub
stc
jg
add
aad
pop
les
pop
sub
jns
rep
out
push
pop
sahf
mov
sub
jnp
dec
idiv
jecxz
add
xchg
jge
popf
in
and
pop
mov
cmpl
jl
sbb
cmpsl
push
sub
outsb
mov
jl
dec
in
pop
and
mov
jno
cmp
out
xchg
cltd
rcrl
dec
movsl
cltd
scas
jp
cmp
dec
pushf
push
mov
inc
outsb
adc
or
roll
add
jmp
or
test
cmp
icebp
lcall
mov
mov
out
jg
pop
add
insb
dec
fs
cwtl
dec
loopne
sahf
in
pop
add
dec
clts
fwait
jle
hlt
fidivrl
stos
jg
popa
xor
lret
inc
sbb
push
jg
and
in
or
in
xor
push
jnp
jge
jae
cli
ret
xlat
lret
xchg
in
add
jno
out
dec
rcrl
clc
into
cmp
shrl
outsl
movb
mov
rcr
mov
cld
inc
and
mov
jbe
jno
xor
lret
sti
mov
mov
mov
sbb
or
mov
pop
mov
call
fsts
pusha
add
push
aaa
ss
pop
mov
adc
jecxz
cwtl
in
insb
sub
lea
pop
mov
and
loopne
test
mov
push
mov
jecxz
dec
push
cltd
mov
out
sbb
dec
adc
add
or
mov
xor
fwait
gs
and
sub
mov
in
in
add
outsb
insb
stos
mov
aam
jp
dec
inc
orb
cmpb
jmp
jnp
andb
js
sbbb
mov
stos
lret
jp
lock
stos
dec
cmpsl
in
data16
or
repnz
push
or
addr16
or
sbb
xchg
dec
and
pushf
pop
or
push
dec
push
push
loop
dec
dec
inc
int3
jp
xlat
je
cmpsb
cmp
in
imul
lds
arpl
jbe
or
std
sbb
push
inc
mov
mov
cmpsb
dec
sub
test
adc
jmp
mov
inc
push
in
lret
xor
mov
push
pop
rorb
sub
ljmp
jmp
sti
popa
push
add
inc
jecxz
adc
mov
mov
jmp
xor
in
push
add
xchg
mov
imulb
cwtl
or
sub
mov
lret
test
lret
or
pop
pop
xchg
stc
nop
iret
jl
mov
mov
sub
aam
pop
or
jg
sub
push
sbb
pop
arpl
or
sti
jmp
fldt
pop
or
push
pop
mov
xchg
loope
pop
inc
imul
stc
mov
push
sbb
mov
imul
xlat
fidivrl
xchg
adc
shlb
cli
neg
jmp
xor
mov
pop
cs
add
in
test
push
inc
pop
pusha
adc
movsb
stos
cmp
jg
add
jg
cli
mov
scas
fdivrp
dec
lcall
clc
cld
pop
inc
add
loope
pop
and
repz
mov
mov
daa
in
imul
stos
and
push
loop
cmc
cmc
lods
mov
and
adc
jle
daa
push
insb
minps
inc
lods
rolb
in
in
or
and
sub
sub
add
pop
add
or
inc
jbe
out
xchg
jo
xchg
ret
aas
inc
and
xchg
inc
push
rorb
fisttps
mov
cmp
lods
repnz
mov
xor
dec
jge
inc
jno
pop
popa
dec
int3
inc
push
jg
inc
and
adc
sbb
cld
mov
sti
adcb
sbb
push
dec
cmp
loope
lods
xchg
sbb
add
push
or
inc
out
pushf
or
hlt
sbb
sarl
mov
fs
xlat
imul
aaa
lds
mov
and
ficomps
dec
add
repz
or
jp
pop
mov
iret
ficomps
jp
lods
and
jmp
decl
push
aaa
mov
mov
sub
repnz
into
sbb
add
ret
imul
cli
push
jecxz
int
or
push
lret
repnz
sub
jp
mov
out
pop
sbb
clc
ret
fs
dec
mov
loope
pop
pop
scas
stos
sub
sub
mov
jae
lds
jnp,pt
adc
push
xchg
jns
mov
cmpsb
rep
pop
mov
inc
lret
or
ljmp
into
cld
out
xchg
test
mov
ret
stos
or
push
push
imulb
sub
push
jl
sub
jae
jecxz
lcall
sbb
mov
add
dec
mov
cmp
scas
mov
aam
cmc
adc
inc
sti
jb
addr16
dec
fldpi
inc
and
adc
shl
adc
dec
adc
lods
jecxz
jns
jmp
or
or
imul
xorb
mov
and
cmp
or
mov
cwtl
test
stc
mov
adc
sbb
push
pushf
jnp
or
lret
cld
inc
inc
cwtl
ljmp
cmp
shll
mov
cltd
push
int3
xchg
xchg
xchg
lcall
in
aam
jb
mov
sbb
cwtl
mov
imul
inc
sbb
ss
addr16
inc
adc
daa
pop
js
cmp
loop
or
mov
push
jns
inc
adc
andb
cmp
cs
shl
test
cmp
out
xchg
push
mov
mov
inc
inc
inc
xchg
mov
dec
ret
cwtl
jnp
add
inc
test
bnd
pusha
jge
or
pop
stc
fwait
movsb
dec
pop
pop
dec
xor
sub
sub
sbb
pop
loopne
in
mov
icebp
add
cmp
mov
jb
adc
cltd
clc
aad
mov
ljmp
jae
loope
iret
push
movsl
cs
pop
std
movsl
lea
out
jne
pop
cli
loopne
jo
inc
outsl
les
add
adc
pop
mov
les
fsubrs
pop
sub
xchg
pop
xchg
push
rorl
mov
addr16
cmp
aaa
jecxz
ret
loopne
fmuls
sarb
cli
daa
push
xlat
dec
mov
call
les
in
jb
pop
mov
es
push
ja
inc
push
sbb
jecxz
btsl
push
shlb
add
push
cwtl
inc
xor
cwtl
pop
cltd
ret
xor
ret
stc
idivl
sbb
mov
out
mov
and
jns
out
xor
mov
mov
adc
pop
mov
and
les
mov
stos
push
jnp
xor
jb
bound
inc
mov
popa
iret
dec
jns
cltd
mov
add
add
jno
mov
outsb
pop
add
mov
mov
ret
fnstcw
mov
xchg
adc
popa
xchg
push
mov
lahf
push
mov
hlt
hlt
sbb
fidivs
ffreep
popf
repnz
mov
mov
rclb
insb
loopne
inc
jmp
mov
sbbl
push
mov
iret
inc
pop
or
jae
iret
cld
or
mov
int3
mov
icebp
outsb
cmc
cltd
rcll
in
enter
in
add
int
loopne
jg
xor
mov
push
into
mov
ss
jns
mov
mov
add
cmp
aas
aas
or
repnz
sbb
in
mov
mov
sub
sub
pop
imul
outsl
jns
mov
fstpl
jbe
dec
pop
mov
xchg
jbe
mov
pop
fs
xor
outsb
popf
xchg
outsl
shrb
lret
xchg
inc
jmp
xor
pop
xorl
popa
js
jae
inc
test
xchg
test
adc
jp
cmpsb
fmuls
aas
and
xchg
int3
sub
jl
mov
pop
hlt
add
sub
rorb
push
jbe
test
jbe
stos
lock
cmp
arpl
scas
mov
mov
and
arpl
inc
pop
xor
sub
xor
push
scas
xor
shll
cmp
stos
push
cwtl
jo
dec
add
mov
daa
mov
push
aaa
lcall
pop
sub
sarl
sbb
jle
ret
insl
push
xchg
shlb
pop
inc
mov
mov
mov
mov
jae
mov
jle
pushf
or
mov
imul
in
adc
push
and
or
jmp
sub
mov
into
cld
mov
dec
pop
bound
mov
daa
xlat
fs
xchg
test
popf
ret
jmp
dec
mov
in
in
movb
mov
std
pop
fs
pop
inc
xchg
xchg
pop
lds
adc
xor
and
xchg
cmp
das
test
test
mov
mov
mov
xchg
test
or
aaa
addr16
repz
xchg
pop
xor
inc
lods
mov
xchg
inc
js
mov
enter
rclb
daa
in
mov
shlb
mov
test
in
mov
xchg
mov
popf
mov
mov
pop
adc
mov
mov
pop
jecxz
mov
les
jb
pop
in
repnz
cs
xlat
aaa
pushf
mov
jmp
xchg
std
es
lea
xchg
and
stc
jb
jb
js
lock
mov
pop
fsubrl
dec
xchg
pop
mov
mov
inc
inc
and
xchg
mov
push
dec
pop
sbb
mov
mov
repz
sub
pop
dec
sbb
bound
xor
insl
pop
cmpb
daa
and
sub
fsubs
xchg
repnz
fcoml
aad
lcall
sbb
jmp
outsb
push
aam
incl
lds
or
xor
mov
cltd
mov
adc
pop
repz
pusha
xchg
mov
cld
adc
add
sbb
mov
subl
and
jnp
jb
sahf
ds
pop
insl
mov
rorb
mov
adc
mov
push
idivb
xor
out
test
add
xor
jg
mov
pop
jecxz
rcrl
add
lock
fldcw
in
cmp
sbb
out
or
movsl
inc
std
popa
popf
add
mov
test
pop
cltd
adc
push
dec
jmp
xlat
stos
loopne
xor
jle
jne
push
aam
xor
inc
and
xchg
nop
enter
mov
mov
std
pop
je
aam
cmpsl
ficompl
jne
in
xor
inc
xor
ds
int
cli
lock
mov
xor
pop
aam
leave
cs
push
inc
test
mov
inc
xchg
inc
add
in
fsincos
push
dec
sti
lcall
pop
cmp
scas
mov
xchg
mov
pop
out
decw
or
shlb
filds
int3
add
lret
mov
jb
sbb
test
jns
mov
call
into
punpckhbw
or
stc
dec
test
and
xchg
xchg
xchg
sub
repnz
push
mov
adc
and
mov
pop
pop
jb
fwait
out
out
pusha
adc
or
pop
cmpsb
test
lret
push
fcmovbe
mov
mov
inc
out
fbld
movsl
and
push
push
aam
aaa
add
pop
cmp
cmpl
or
adc
mov
adc
mov
mov
cli
or
lods
inc
or
or
inc
dec
and
clc
or
cmpsb
xchg
sub
ret
aad
in
push
fcoml
rcrl
sub
inc
loope
fisubl
add
dec
mov
outsl
mov
ljmp
jp
clc
jge
adc
add
push
sub
pop
out
add
sub
in
std
scas
lea
or
rcrl
pop
sbb
cwtl
enter
and
repnz
into
jmp
lret
mov
push
mov
push
orl
cmp
inc
xchg
sub
test
into
and
and
sub
cmc
bound
xor
dec
adc
mov
out
sahf
add
sub
xor
ds
lret
or
pop
ss
cmp
adc
mov
ret
aad
es
mov
ds
push
xor
aaa
add
cli
xor
jle
stos
fldl
and
jno
pusha
and
jge
fnstsw
scas
out
and
inc
stos
and
inc
push
inc
and
scas
mov
test
fimuls
loopne
scas
jle
sbbl
fsub
mov
push
cmp
sbb
movsl
subb
jecxz
lahf
sub
leave
lahf
stos
sub
jo
mov
mov
je
out
addr16
jns
pop
movsl
dec
pop
daa
dec
pushf
out
aam
es
pop
jae
or
call
daa
mov
das
aam
test
cmp
mov
scas
imul
out
lret
pop
rcr
into
test
push
mov
fisttpl
stc
add
call
and
push
repnz
fldt
out
adc
jne
aas
stos
or
cmpsb
les
cmovs
dec
loopne
mov
popf
cmc
in
les
push
les
jg
xchg
mov
iret
into
stos
pop
repnz
aad
sub
test
call
stos
out
add
mov
jmp
cmp
lds
pop
jmp
inc
imul
xchg
mov
mov
adc
insl
jns
cmp
or
loop
push
mov
int3
loope
insb
ja
ljmp
adc
adc
cmpsl
sub
in
aas
fsubs
std
xor
xor
sbb
lea
and
sub
popa
movsb
sbb
xchg
movsl
enter
insl
into
loope
or
loope
pop
idivb
repnz
dec
test
fstps
xor
sub
xorl
mov
sti
nop
adc
call
inc
jp
jb
clc
lods
pushf
je
or
jbe
pop
mov
ret
cmp
arpl
pop
outsl
xchg
std
dec
daa
mulb
std
js
sbb
repnz
imul
sti
lret
xchg
pusha
mov
push
cmpsb
ret
dec
pop
mov
aam
dec
pop
adcl
mov
das
pop
daa
rorl
stos
ss
imul
daa
lock
add
mov
dec
test
mov
mov
mov
cmp
pop
jns
inc
xchg
jecxz
outsl
cmp
or
sub
jns
xchg
lock
cs
and
sub
lods
inc
lahf
call
sahf
mov
cwtl
xchg
cmpsl
jns
xor
xor
push
insb
mov
fs
cmp
adc
sbb
bound
jbe
inc
scas
cmpsb
cli
test
repnz
loop
in
mov
out
rclb
test
imul
push
clc
or
and
add
add
adc
pop
sbb
jecxz
cmp
or
xchg
push
adc
jno
sbb
dec
add
pop
jmp
fs
adc
lahf
and
sbb
or
into
push
es
rol
rclb
mov
pop
cmpsb
loope
xchg
inc
js
inc
in
cmp
lock
movsb
adc
aad
xchg
cmpsl
out
subb
push
lods
adc
xlat
test
data16
sbb
lea
ret
lret
inc
xchg
lret
out
sahf
jecxz
adc
outsb
or
adc
pop
lcall
in
enter
gs
xor
jns
scas
xchg
add
int
cmpb
imul
inc
test
cmc
test
arpl
mov
jmp
cmp
push
pop
aam
sbb
mov
fimuls
into
jae
mov
scas
clc
lcall
dec
stos
int3
sbb
dec
daa
loope
adc
mov
repnz
dec
lods
test
imul
xchg
ljmp
imul
cmp
jne
inc
or
stc
mov
or
jb
dec
fldt
lock
scas
cs
jp
sub
fidivl
lea
daa
pop
andb
ret
jl
jmp
daa
xor
hlt
and
sub
das
sub
scas
es
adc
pushf
pop
ret
xor
sub
js
sub
popa
sti
sbb
xlat
stc
xlat
dec
or
jg
jge
gs
mov
pushf
lds
xor
and
pop
sbb
pop
repz
xor
aas
stos
sbb
xor
sbbb
cmp
push
dec
fldt
out
out
cmpsl
add
cld
bound
mov
imul
ds
pop
inc
mov
enter
rcr
xchg
jl
push
mov
pop
jno
shlb
jge
add
gs
stos
push
pop
mov
sub
leave
insb
jns
mov
lods
ja
inc
fisttpl
das
cltd
test
mov
add
lods
push
and
movsb
mov
daa
cmp
xchg
ret
xchg
out
fsubr
hlt
andl
or
add
icebp
iret
jle
jmp
je
xchg
add
push
inc
gs
add
push
cwtl
add
test
shll
and
xchg
jmp
xor
adc
mov
jo
mov
add
hlt
insl
outsb
mov
in
outsb
jo
daa
sbb
and
cmpsb
movb
and
mov
fisttps
inc
pop
sbb
lcall
aad
js
test
pop
and
add
mov
scas
vpunpckldq
or
popf
addr16
repnz
inc
adc
add
jmp
pushf
pop
pop
andl
loopne
imull
stc
push
sbb
mov
loopne
pop
popf
or
pop
cld
mov
xchg
test
jne
insl
andnps
mov
mov
cwtl
scas
adc
insb
inc
mov
pop
adc
adc
adc
fs
jnp
scas
insl
test
push
mov
jmp
call
lods
mov
jo
fmull
call
mov
test
adcl
mov
rcrl
cmpsb
enter
aam
int
xchg
pop
and
rclb
das
ds
mov
xor
jp
lret
sbb
add
in
jmp
mov
cli
or
orl
inc
mov
repnz
mov
jbe
arpl
test
jb
cmp
jmp
adc
inc
pop
jno
inc
clc
push
mov
xchg
pop
dec
mov
es
push
fwait
repnz
in
orb
or
sub
xchg
inc
popf
cmp
jge
clc
imul
sub
stos
dec
outsl
mov
adcb
cmpsl
cmc
sub
pusha
hlt
push
fisubrs
pushf
aas
stos
xchg
push
es
xor
mov
repnz
subb
repnz
jo
cld
pop
mov
bt
hlt
add
je
xor
mov
sub
popf
mov
pushf
dec
mov
inc
xchg
push
sbb
adc
jg
jge
mov
cmc
es
push
outsl
mov
aam
sbb
fidivl
and
xchg
jg
stos
jb
std
fistps
idiv
in
cltd
pop
add
fdivrl
pop
dec
sub
mov
sti
xchg
and
fwait
int3
mov
xchg
mov
in
pushf
add
pushf
pop
mov
mov
movntq
mov
or
pop
aad
sub
xor
xor
repnz
push
jns
or
jnp
je
out
rolb
sub
xchg
push
aam
sbb
push
mov
adc
adcb
sub
sbb
std
data16
outsb
dec
jno
loopne
cmp
ret
loope
xor
push
push
sar
int3
push
ret
mov
add
pop
sbb
jo
decl
push
add
dec
dec
push
mov
mov
pop
inc
outsb
adc
hlt
movsl
cmp
xor
mov
jne
or
mov
add
jge
aaa
aad
mov
call
mov
pop
outsb
mov
ja
push
ja
pop
adc
arpl
insl
ficomps
jnp
jmp
gs
push
push
push
and
cmp
inc
xor
int
cltd
mov
pop
or
mov
mov
adc
aaa
shl
cwtl
test
cmpsb
lret
js
stc
jle
popa
pop
mul
cli
leave
push
mov
test
push
in
push
mov
decl
shll
push
xchg
adc
cmp
fs
mov
mov
ret
fwait
push
insb
mov
add
lret
sub
xchg
je
or
stos
scas
leave
inc
imul
jg
clc
push
sbb
sub
lcall
arpl
fsubr
inc
xor
lahf
mov
clc
mov
jmp
subl
push
ss
xchg
aaa
lods
scas
and
sbbl
test
inc
dec
push
ljmp
call
mov
jp
mov
and
jb
test
cmp
adc
les
fiadds
mov
rclb
or
shrb
ficoms
lahf
fs
jne
or
rorb
mov
cmp
in
stos
imul
pop
jle
cmp
push
lds
jmp
and
pop
mov
sarb
leave
bound
xchg
or
pop
add
test
inc
inc
mov
test
push
pop
int3
xor
or
ficompl
sub
iret
adc
into
fisttps
push
push
sahf
xchg
fdivrp
cmp
jecxz
or
mov
pop
pusha
adc
cltd
adc
jbe
mov
or
push
outsl
fstpt
dec
ljmp
jmp
dec
jecxz
push
jmp
cmpsl
or
push
xorl
addr16
testl
aam
jnp
test
rcrb
cmp
inc
addr16
sbb
and
aam
faddl
cld
loopne
pop
and
lock
mov
xchg
push
mov
fdivs
cmp
subb
shl
fisubl
adc
aaa
ss
mov
or
fdivl
mov
cmp
xchg
sbbb
jae
or
shlb
popf
adc
push
je
sub
aaa
push
pop
lret
nop
in
arpl
xchg
mov
inc
mov
lock
lock
std
adc
outsl
mov
jae
xchg
movsl
sbb
arpl
push
xchg
lret
cmp
shlb
rorb
out
hlt
mov
cld
add
call
mov
xchg
cltd
cltd
cs
lahf
fmulp
sub
mov
add
pushf
lock
outsl
sbbb
push
sarb
add
shlb
out
dec
push
roll
mov
bound
cmp
loop
lock
inc
cmc
in
in
dec
outsb
jo
jns
xchg
fadd
mov
inc
push
jae
fmull
inc
jp
scas
pop
mov
mov
daa
mov
inc
sub
or
int
hlt
add
dec
inc
dec
sub
pop
je
gs
out
jae
jle
push
cmpsl
or
jmp
push
adc
aad
cltd
sbb
cmpsb
stc
pushf
pop
adc
ljmp
test
mov
aas
js
xor
in
icebp
xor
mov
pop
inc
push
mov
cmpsl
push
mov
xor
push
sarb
cld
push
inc
out
xchg
sti
mov
pop
clc
or
aam
outsb
inc
es
inc
cld
int
dec
insb
out
stos
icebp
add
mov
js
out
aaa
add
int3
movsl
xchg
inc
bound
insb
adc
sub
sbb
pop
lcall
jp
add
pop
mov
iret
cwtl
xchg
out
andl
movsb
clc
mov
push
pop
adc
shll
inc
adc
lock
or
mov
loop
xor
adc
jns
xor
push
imul
dec
adc
adc
jge
cltd
add
adc
cmp
mov
push
cmp
mov
js
lahf
jg
sbb
std
shrl
js
or
js
pop
jae
pop
mov
cmp
xor
and
ficoms
stos
fmull
mov
and
fiadds
es
xchg
jle
dec
test
add
xchg
fucomip
pusha
or
cli
cmp
sbb
std
ljmp
cmp
cmp
adc
mov
jb
cmp
mov
icebp
sbb
or
lods
cltd
sahf
add
int
loope
jae
out
out
aad
pop
ds
sbbl
rcrb
xchg
hlt
testb
mov
push
mov
xchg
call
aam
lds
arpl
jno
testb
xor
mov
xor
add
xchg
pop
xor
and
mov
xchg
jo
rcrb
imul
cmp
add
jle
cli
or
into
lock
ss
mov
int3
mov
enter
in
adc
inc
lea
pop
pop
xchg
xor
rorl
stos
sbb
inc
cwtl
dec
test
dec
shr
sti
pop
shll
jmp
sbb
in
fmuls
scas
testl
add
aad
jne
add
xor
mov
les
aaa
jne
pusha
mov
jb
cmpsb
push
adc
push
pop
loop
outsl
pop
pop
inc
aas
cltd
out
sti
cmpsl
mov
rcr
and
sarl
push
add
mov
or
stos
je
sti
push
add
adc
icebp
inc
mov
cmp
jmp
daa
les
in
cmpsb
arpl
or
mov
leave
loop
data16
or
inc
fisubrs
int3
rcr
mov
dec
roll
pop
mov
jmp
hlt
fisttps
imull
push
jae
int
bound
jns
mov
sbb
aaa
push
ds
es
mov
and
xchg
mov
sub
dec
pop
repz
sub
cmp
jbe
imul
sub
cmp
fnsave
repnz
ret
inc
lret
scas
adc
jmp
cmp
mov
fs
es
icebp
mov
mov
jmp
fwait
mov
and
mov
push
idiv
fisubrs
pop
and
mov
cmpsb
fucomip
and
leave
ficompl
xor
pop
fldcw
xchg
xor
int
jg
dec
loop
lds
sbb
cmc
add
xor
push
mov
and
popf
and
test
hlt
sub
inc
in
mov
jo
je
push
inc
pop
pop
xchg
fmuls
in
fstps
enter
pusha
out
mov
lods
inc
into
dec
loop
sbb
ss
push
push
xchg
or
test
dec
ss
pop
jae
stos
mov
popa
fidivl
cmc
or
xchg
inc
adc
ljmp
cli
xchg
sbb
fbstp
dec
ret
inc
jl
cmp
in
xlat
test
das
adc
and
cs
in
mov
mov
cmp
mov
shr
repz
push
rclb
xchg
ret
cmp
lcall
xor
add
push
sub
jnp
cmc
add
sub
shll
mov
jae
inc
cs
or
mov
lock
clc
xabort
and
je
add
loop
mov
push
mov
shll
jae
imul
mov
pop
sbbl
jge
je
add
push
loopne
lret
pop
iret
push
inc
inc
jo
xchg
add
add
test
push
sub
cmpb
xor
and
sub
pop
shll
mov
push
popa
pop
outsb
push
std
adc
test
les
jne
stos
xchg
inc
rclb
sub
jne
fidivrl
dec
jmp
pshufw
add
inc
insb
xchg
popf
push
pushf
dec
cmp
mov
out
xchg
int3
inc
dec
inc
lds
adc
dec
test
mov
cmpsl
fistps
jae
add
xor
dec
add
pop
cwtl
pop
dec
lcall
popf
jge
or
insl
push
mov
mov
cmp
cmp
adc
aas
or
jmp
pushf
popa
mov
add
jb
out
in
xchg
ret
in
adc
mov
mov
sub
les
les
or
sahf
push
nop
popf
jle
mov
fists
pop
inc
push
scas
fs
clc
push
cltd
test
gs
sbb
dec
cmp
rorb
pmaxub
std
lcall
pop
mov
xchg
popa
outsb
stc
add
push
jno
push
xchg
inc
xor
adc
sub
insb
out
jge
jne
clc
push
loope
fs
jl
jno
enter
enter
mov
xor
outsb
loope
in
and
push
sbbb
divl
inc
cmp
cmpsb
stc
mov
and
push
divl
jl
pop
gs
jp
lcall
mov
fdivrs
pop
jnp
jmp
sub
jl
or
fmuls
mov
arpl
push
lahf
pop
cmpsl
fiaddl
lret
lds
inc
inc
pusha
insl
popf
mov
sbb
mov
pop
ds
mov
add
arpl
arpl
ficompl
sarb
repnz
xchg
outsb
sbb
jno
adc
push
cli
push
fsubl
cmp
mov
push
push
in
xlat
call
mov
mov
pop
or
xor
sub
or
push
jns
jmp
in
leave
repnz
and
scas
fdiv
jp
and
adc
insl
inc
outsb
leave
cwtl
jmpw
mov
or
and
rcr
pop
sub
jae
movsl
in
jne
jae
fistps
sbb
cmp
xor
push
aad
push
test
shll
pop
movsl
outsl
or
sub
jbe
inc
stc
enter
cs
outsl
ss
or
mov
or
hlt
mov
adc
into
cld
notb
mov
call
dec
push
mov
ja
rclb
push
xchg
mov
push
daa
add
mov
jo
cs
adc
mov
frstor
pop
pop
out
iret
push
aad
loopne
gs
scas
fwait
xchg
iret
sbb
cltd
mov
push
jle
or
cmp
aaa
xlat
popf
mov
loope
sbbb
lret
inc
adc
xchg
or
in
stos
push
cmp
cwtl
shlb
lea
cmc
mov
jecxz
mov
out
stc
dec
xchg
shll
xchg
mov
repnz
mov
ss
test
lods
add
or
and
add
aaa
fnstsw
or
mov
pop
push
pop
lcall
mov
jp
sbb
xor
sbb
aam
mov
pop
mov
mov
pop
sbb
hlt
xor
jns
insl
arpl
stos
mov
xor
jmp
mov
and
scas
sbb
sub
loop
sub
fdivs
mov
repz
xlat
sbb
xorb
xor
cmpsb
out
xor
pop
out
stos
jns
lods
push
sti
lea
jns
inc
push
or
inc
xchg
push
fisubrs
imul
enter
scas
dec
mov
ret
xchg
mov
cmp
out
mov
ret
xchg
xchg
xor
and
pop
jl
aam
rcrl
mov
pop
jns
mov
mov
or
xchg
rol
or
or
movsb
repnz
cltd
imul
xor
sbb
mov
fadd
out
jbe
testl
sti
cli
xor
mov
movsb
loopne
sbb
outsb
insb
repnz
xchg
push
fisubl
xchg
push
in
pop
or
jo
add
or
jae
push
mov
lods
ret
adc
shr
inc
clc
mov
mov
push
out
cltd
sbb
rol
shrb
rorl
daa
mov
cmp
or
addr16
das
add
test
addr16
daa
sub
sub
xchg
or
xchg
jae
xor
ss
mov
xchg
and
int3
and
sbb
xchg
cld
jp
test
mov
out
and
stos
xor
shl
leave
adcb
in
mov
mov
cmp
fdivs
xor
pop
in
ret
jmp
pop
out
in
mov
nop
and
call
xor
in
ficoms
adc
dec
or
pusha
adc
sbb
outsb
sub
sbb
call
cs
ja
xchg
cwtl
sbb
dec
dec
cmp
fwait
push
pop
stos
cmp
std
repnz
scas
fwait
nop
daa
stos
xchg
std
imul
outsb
int
xchg
sub
out
loopne
xor
xchg
mov
repz
mov
sti
inc
xchg
dec
push
idivb
sub
and
xchg
ja
or
dec
cmp
lret
jmp
mov
in
xchg
xchg
jns
fidivs
add
push
pop
mov
mov
gs
out
dec
in
int
adc
pop
sahf
mov
pushl
enter
push
dec
daa
push
push
jnp
pop
lock
or
ljmp
inc
and
sub
mov
ret
ret
inc
lahf
dec
test
scas
push
aad
in
repz
ret
enter
mov
cmp
xchg
out
xchg
test
pusha
fwait
cli
xchg
mov
push
add
cmpsl
adc
adc
adc
rcrl
pop
loope
lock
sub
cmpsl
test
mov
mov
xchg
int
cmpsl
les
jg
icebp
rcr
jecxz
repz
push
insb
cs
shlb
mov
iret
mull
add
fbstp
out
sub
or
daa
dec
scas
dec
pop
dec
test
xchg
sar
inc
pusha
sbb
xor
cmp
and
stc
xchg
adc
cmp
xor
cmp
jns
popa
pusha
lods
clc
fisubrs
or
shlb
mov
mov
repnz
push
call
scas
xor
push
mov
data16
or
inc
xchg
negb
loope
cmp
xchg
adc
jge
stos
jae
sti
frstor
rcl
aas
test
jmp
imul
outsb
stc
pusha
cmpsb
mov
fs
out
out
repnz
sub
ja
inc
fisttps
or
orl
insb
inc
aam
sti
loop
pop
dec
xor
jne
push
daa
dec
test
jnp
sub
fwait
sbb
dec
call
mov
cs
lock
inc
mov
xlat
pop
inc
sub
into
cltd
popa
rdtsc
mov
push
sbb
xchg
dec
sub
mov
jno
push
xchg
imulb
arpl
sbb
popa
dec
in
mov
jnp
xor
jbe
subl
dec
out
loope
inc
cmp
sub
stc
push
cmp
rcr
in
cmp
xor
xor
inc
inc
push
sbb
loop
push
sbb
inc
arpl
popf
adc
mov
jg
push
mov
cmp
mov
sbb
xor
outsb
cli
andb
in
dec
cwtl
or
nop
lods
out
stos
jge
sbb
jl
out
mov
push
mov
cwtl
ficoml
lods
popa
cmpsl
xchg
lock
stc
clc
sub
ljmp
lods
bound
mov
xor
jne
inc
mov
jnp
jae
and
cmc
mov
xchg
adc
jg
mov
and
sub
imul
lods
cltd
insb
mov
xor
mov
xchg
pop
fstpt
push
sub
push
or
add
cmpb
test
arpl
inc
jecxz
pop
bound
fcoml
xchg
and
jmp
pusha
ss
adc
add
imul
fisubrs
fstl
dec
mov
pop
in
or
sbb
push
xor
pop
sti
xlat
push
ficompl
jge
jle
in
aad
push
dec
adc
lahf
repnz
arpl
xchg
roll
jmp
out
scas
and
xchg
cmp
in
push
mov
add
sub
cmp
fcoms
jmp
pop
in
cmp
cmp
hlt
pop
out
shl
jae
jg
lods
push
dec
cmpsl
inc
rclb
arpl
in
jg
lock
and
lock
ret
push
and
fstl
add
pop
ja
std
push
dec
fidivl
fsts
push
mov
pop
add
stc
xor
cmp
es
iret
or
dec
pop
pop
scas
cmp
out
jp
sbb
lea
jl
and
es
xchg
xor
xchg
ljmp
hlt
xchg
cmpsl
into
lods
subb
xlat
sbb
pop
adc
jle
and
inc
enter
add
ss
mov
stos
nop
scas
and
scas
mov
and
inc
inc
jno
push
addr16
add
ja
mov
les
or
mov
adc
aaa
mov
jns
aas
shl
mov
inc
sub
sbb
sub
das
or
and
or
xchg
leave
jl
daa
mul
mov
xchg
push
xchg
aas
cmc
mov
cmp
mov
mov
mov
cmp
and
add
mov
aaa
xchg
fsubl
and
loopne
mov
fwait
cli
mov
cwtl
inc
testb
adc
mov
jbe
in
cmpsb
mov
mov
jge
inc
sti
icebp
add
mov
je
inc
mov
and
in
cmp
or
jne
pushl
fisubs
inc
test
jo
adc
sti
stos
jno
clc
xchg
test
mov
add
rcrl
dec
sbb
test
jo
or
arpl
dec
sbb
scas
pop
sti
pop
add
inc
negb
add
and
pop
cld
xor
mov
and
mov
out
scas
or
mov
jg
cmp
stos
mov
pop
xchg
add
xor
outsl
sub
mov
ds
push
jb
lods
fmull
fsts
ret
cs
sbb
lahf
outsl
dec
or
cmp
rolb
dec
adc
sbb
push
cli
pop
in
push
arpl
inc
ds
out
js
out
mov
movsl
out
pop
outsl
push
add
jo
dec
scas
cli
andl
cmpxchg
adc
pushf
push
push
pop
loope
pop
arpl
and
insl
xchg
scas
inc
adc
pop
jmp
ss
jle
int
mov
iret
fldt
inc
int
sti
add
pop
push
and
inc
and
pop
xor
gs
or
sub
int3
dec
lods
shll
pop
lret
call
cs
jmp
int3
orb
xorl
mov
mov
jbe
mov
mov
push
or
sub
imul
ja
pop
cmp
lock
mov
ret
mov
rclb
ja
je
add
ret
mov
scas
fisubrl
mov
scas
fidivrs
test
jbe
call
jo
adc
clc
push
nop
movsb
fiaddl
adc
pop
xor
lcall
das
fwait
jb
mov
and
xchg
jmp
mov
pop
dec
iret
mov
int
incl
mov
push
lea
imul
mov
xchg
mov
sbb
jno
jne
fdiv
or
outsb
dec
inc
push
icebp
aad
jecxz
adc
cmpsl
mov
iret
mov
xor
test
mov
mov
push
pop
or
lods
outsl
sub
fwait
cmp
dec
xchg
out
out
sbb
mov
pop
xchg
gs
jnp
jne
lods
repz
fldenv
scas
sti
out
lea
lods
push
mov
pop
imul
sarl
adc
sbb
lea
add
prefetch
push
push
hlt
mov
in
neg
pop
scas
adc
mov
ficoms
xlat
inc
sbb
sbb
movsl
push
lock
mov
xchg
jecxz
or
outsb
xchg
mov
xchg
jmp
or
cmc
sbb
stc
dec
int
lods
xchg
addl
jle
mov
add
fnstenv
xor
pop
roll
std
jmp
testl
cmpsb
aaa
sbb
aas
gs
subl
xor
scas
pop
bound
jg
push
addl
xor
push
jo
pop
nop
mov
adc
sbb
add
xor
push
in
mov
push
out
cs
bound
mov
push
insl
mov
je
out
ljmp
inc
lahf
jmp
sbbb
cmc
cld
aaa
jp
data16
dec
arpl
push
sbb
mov
lods
mov
jl
sti
rorl
inc
sub
and
sub
insb
xor
add
out
xchg
and
cli
mov
in
push
adc
jecxz
jle
xchg
ret
and
incb
and
pop
mov
add
iret
dec
repnz
sbb
add
iret
cmpsl
xchg
adc
lods
jmp
cmpsl
cmp
jge
addr16
daa
gs
or
push
mov
loopne
add
lahf
sbb
cmp
cmp
dec
mov
sub
mov
gs
push
xorl
and
jo
mov
add
addr16
negl
cltd
xor
inc
sbb
insl
pop
lea
cwtl
xlat
jae
xchg
add
cmp
push
gs
push
flds
xchg
adc
outsb
inc
inc
lret
int3
dec
lea
call
xchg
movl
pop
decl
pop
cmp
in
sub
movsb
and
negb
push
lds
and
xchg
int
xor
lea
inc
add
cwtl
scas
sbb
or
loope
mov
pop
pop
sub
movsl
add
fidivrl
sbb
in
ret
sbb
in
testb
data16
imul
fnsetpm(287
adc
xor
sbb
dec
and
jecxz
mov
jae
inc
xchg
pop
mov
sub
into
push
into
mov
hlt
push
data16
lods
cwtl
sahf
cmpsb
int
in
gs
in
ds
or
sub
imul
dec
mov
inc
sbb
cmc
clc
jle
add
ret
add
out
or
xlat
xchg
xchg
mov
mov
enter
xchg
pop
jle
push
sbb
jp
pop
cwtl
and
loope
mov
pop
sti
pop
data16
jns
divl
iret
push
mov
fstpt
cmpsl
fdivr
jae
cmp
fwait
mov
cmp
scas
mov
jne
mov
sbb
dec
jb
dec
je
fs
push
pusha
out
xor
out
add
cwtl
lods
jecxz
icebp
scas
jbe
test
es
add
cltd
xchg
push
test
enter
fsubs
push
arpl
cs
cmp
ret
lods
mov
fnsave
arpl
out
negl
mov
std
and
xor
mov
push
ljmp
xchg
clc
arpl
int
pusha
sub
jne
push
push
cmp
dec
fmull
das
gs
or
pop
aas
scas
or
lock
push
mov
mov
and
enter
inc
push
xor
ss
mov
fists
dec
and
lds
jle
movsb
rcr
mov
push
gs
pop
in
mov
loopne
out
cld
dec
add
mov
push
test
push
push
sbb
push
xor
push
cmp
mov
mov
or
sbb
popa
loopne
mov
dec
mov
mov
inc
mov
and
inc
lods
imul
or
push
dec
cmova
out
gs
jae
stc
pop
fcompl
fcmovu
je
fdivl
cmpsl
mov
out
mov
int3
filds
out
imul
pop
fistpl
cmp
adc
push
mov
mov
jmp
mov
adc
xchg
jmp
stos
gs
movsb
pusha
add
into
je
push
sti
rcrb
cmpsl
xor
fistpl
pop
lret
data16
sub
sub
les
popa
in
jbe
call
dec
movsb
xor
lret
mov
xor
aaa
mov
xchg
jle
test
out
push
inc
fiadds
jmp
pop
adc
add
je
lret
inc
cmp
aad
lock
pusha
push
mov
mov
cli
push
add
cmp
mov
cli
test
addr16
cmp
cmp
stos
cmc
push
scas
pop
data16
mov
arpl
mov
ljmp
test
push
xchg
lahf
mov
jge
aas
dec
sarb
fs
test
negb
pop
xchg
add
inc
jle
jae
pop
lock
or
scas
outsb
push
mov
fidivrl
fistpl
out
lret
cmp
push
inc
loop
inc
sti
xor
or
lahf
jg
push
or
lea
aas
mov
repz
push
inc
jne
jp
push
push
test
jne
mov
pusha
cmp
adc
xor
jbe
jl
add
xor
jae
xlat
xor
push
or
fstps
mov
xor
cmp
add
sbb
stos
es
lret
pop
mov
pop
mov
loope
pusha
insl
xor
idivl
jp
pushf
movsl
popa
push
insb
mov
in
mov
sub
mov
pusha
pop
sbb
or
push
mov
or
or
jb
sub
sub
fdivr
hlt
ljmp
aas
cmp
cld
in
jns
arpl
dec
hlt
jl
pop
orb
xchg
push
and
into
scas
pop
aaa
xchg
inc
in
lods
jno
lods
sub
notb
imul
cmp
lds
inc
inc
and
mov
mov
xlat
xor
testl
mov
xchg
aas
scas
rclb
jnp
lret
popf
mov
in
mov
mov
les
or
notl
and
dec
mov
inc
jg
outsb
inc
xor
jnp
shr
lret
rcr
adc
and
inc
cld
movsl
push
mov
sub
inc
xchg
jns
jge
mov
and
sbb
scas
mov
repnz
out
cli
fsubrl
jecxz
es
lods
cmp
ss
xor
push
or
fcmove
xor
add
insl
fcmovbe
pop
sbb
clc
mov
pop
lahf
xchg
data16
sub
add
fdiv
inc
sbb
jbe
leave
lds
sbb
jo
pop
pop
xchg
and
mov
adc
push
pushl
das
in
mov
in
xchg
jecxz
sbb
test
and
or
xor
out
in
mov
xchg
adc
outsb
cmp
cli
test
bound
test
adc
stos
xor
int
and
pop
sub
or
push
fs
mov
popa
jmp
cltd
out
xchg
fnsave
and
mov
fistl
or
mull
cmc
cmpsl
negb
jge
bound
add
mov
push
push
test
adc
jecxz
fs
jmp
adc
xchg
cmp
push
aad
outsl
cmp
adc
inc
mov
push
mov
dec
mov
mov
xchg
lea
and
dec
cmp
mov
lret
hlt
js
dec
mov
imul
fimuls
mov
mov
mov
hlt
bsf
or
add
dec
popf
fldt
cmp
pop
fs
clc
sbb
jl
pop
adc
sbb
fidivs
test
and
pop
push
rcl
mov
xchg
stos
sub
adc
imul
pop
lea
and
ljmp
aaa
adc
ds
sub
shlb
pop
adcl
inc
aam
scas
and
imul
lret
sub
push
je
shlb
sub
or
rcrb
insb
sbb
sub
mov
xchg
loope
jb
mov
adc
in
sub
gs
lret
das
je
adcb
ret
icebp
into
mov
mov
adc
mov
sbb
dec
stc
cld
xchg
mov
or
push
mov
cld
mov
ret
or
sbb
add
lahf
ud0
mov
push
jns
sbb
mov
sbb
mov
adc
leave
hlt
pushf
cmc
gs
js
gs
testb
push
push
movsb
inc
in
inc
int
dec
fistps
ret
shrb
mov
in
lock
push
add
cmp
add
mov
gs
js
imul
mov
mov
in
aam
aam
aam
cmp
je
push
dec
scas
idiv
bound
lods
ss
mov
xchg
dec
push
adc
es
orl
jbe
mov
dec
test
aas
inc
xor
test
sarb
or
testb
jae
xchg
dec
faddl
shr
push
hlt
clc
in
or
mov
repnz
add
push
jl
push
in
jo
xor
fimuls
mov
inc
fdivp
sbb
sub
adc
pop
aam
mov
shll
div
pop
repnz
adc
sub
push
hlt
mov
mov
fdivl
adc
pop
inc
jne
inc
mov
inc
xchg
add
sub
fwait
mov
add
repnz
xchg
or
data16
push
cmpsl
pop
dec
out
fwait
aas
cs
add
mov
jne
ret
rcr
aam
pop
loop
jmp
repz
fwait
jl
add
xchg
mov
push
jge
rolb
test
ss
stos
mov
push
ss
rolb
adc
cmc
push
push
sbb
and
mov
jl
cmpl
cmp
fs
inc
inc
jmp
rcrb
inc
mov
push
jecxz
fildll
pop
int3
loop
vpmuludq
sahf
int
jnp
out
xchg
out
insb
lret
int3
sti
add
or
fcomi
imul
inc
les
mov
jmp
test
out
imul
ret
test
sarb
iret
rorb
or
test
adc
xchg
xor
or
cwtl
int3
lock
cltd
pop
push
dec
push
jb
pop
imul
adc
jnp
sbb
mov
scas
mov
in
call
shll
add
adc
js
sbb
cmpsb
inc
mov
insl
les
stos
lods
cld
jno
xor
cmp
das
pop
cmpsb
cmp
cvtpi2ps
lret
add
int
push
stos
xor
mov
cltd
in
cmp
dec
leave
sarb
out
aad
mov
lods
and
mov
pop
cwtl
outsb
adc
cmp
xor
loop
shl
mov
xchg
pop
dec
xchg
movl
shrl
push
mov
lahf
cmp
pop
hlt
cmc
lods
rclb
mov
mov
add
repnz
push
push
cs
xchg
pop
inc
dec
insl
hlt
inc
cltd
or
sub
xlat
sbb
jbe
mov
pop
mov
sub
mov
sub
addr16
dec
push
fxch
cmpsb
pop
fnsave
or
popa
sahf
out
dec
arpl
mov
or
inc
je
inc
lahf
push
mov
and
lock
and
push
scas
xchg
mov
ffreep
and
push
push
ss
pop
rolb
jmp
stos
cmp
or
xchg
jae
and
js
xchg
fiadds
test
imul
lret
pop
lahf
cmp
nop
or
pop
add
mov
inc
cmpsb
mov
mov
jae
cwtl
mov
jns
jnp
into
cmp
push
jle
mov
stos
lret
aas
jae
inc
sub
dec
lahf
fdivs
arpl
adc
mov
adcb
pop
cmc
mov
inc
sbb
jmp
stos
scas
test
jno
mov
in
insb
repz
test
dec
lock
inc
test
jmp
rolb
setb
cmp
xchg
xchg
pop
fcmove
jg
add
pop
add
push
sbb
push
fsubl
divl
pop
ficoml
push
rolb
and
cld
jmp
cmc
out
add
adc
sar
push
addr16
movsl
sbb
sbb
sarb
js
insl
and
mov
int3
adc
outsl
add
ficoms
stc
int
jns
fwait
gs
lock
cmp
pop
dec
sbb
mov
unpcklps
inc
push
mov
mov
arpl
imul
jae
negl
ret
pop
les
pusha
loopne
and
in
iret
mov
inc
add
fadds
cmp
cli
jmp
or
sub
add
addl
in
pop
adcb
enter
jle
mov
dec
mov
sub
add
sbb
inc
jne
decl
dec
gs
sub
js
mov
lods
ficomps
test
ds
push
stc
sub
inc
daa
add
lahf
adc
je
xor
lret
data16
xchg
xor
xor
gs
mov
mov
sbb
mov
stos
repz
imul
loop
neg
out
mov
nop
jg
cmpsb
jns
sub
jecxz
inc
xor
mov
aas
rcrb
xlat
stos
adc
xor
insb
push
addr16
out
shlb
in
xchg
imul
pop
cmp
out
stos
insl
roll
cmpsl
imul
cld
cmc
jnp
aas
sbb
inc
mov
xor
pop
inc
cmpsl
faddl
inc
mov
pop
imul
dec
sub
inc
orb
mov
mov
fiadds
xor
es
fiadds
pop
mov
and
enter
xor
outsb
cmpsl
pop
inc
popf
cmc
inc
std
cwtl
push
out
jl
cld
hlt
jecxz
fnsave
pop
pmaxub
mov
dec
and
mov
and
add
adc
ret
test
add
pop
sbb
add
out
mov
dec
jmp
lods
out
icebp
mov
pop
scas
mov
fistpll
sbb
arpl
rcll
xchg
add
hlt
lock
div
push
test
cmp
xor
mov
out
dec
dec
xor
cmc
add
es
pop
push
add
jo
fdivl
cmp
and
push
add
mov
add
mov
add
xchg
rolb
stos
and
sbb
push
cmp
xchg
lods
push
xor
mov
movsl
cmp
sub
subl
cmp
out
ss
pop
mov
jns
xor
outsl
pushf
adc
addr16
dec
or
cmpsl
out
loop
mov
add
in
std
xchg
in
popf
test
or
leave
fistl
cmc
ja
push
jmp
popa
or
add
dec
insb
ss
inc
std
mov
lahf
idivb
jg
stos
cmp
loope
outsl
rcrl
into
mov
mov
shll
ret
ret
aad
mov
push
sub
jg
inc
jp
sbbl
xchg
xchg
xchg
adc
sub
sti
in
mov
test
xchg
pop
mov
mov
and
sahf
jns
outsl
sub
inc
mov
ljmp
lock
mov
push
sbb
inc
pop
loopne
in
jle
lds
icebp
adc
out
out
dec
push
inc
xchg
sahf
hlt
jecxz
xchg
scas
cmp
pop
push
ror
or
xchg
jmp
lods
test
push
jge
sbb
xor
shlb
cmp
in
sti
xchg
mov
leave
cmpsl
clc
sub
mov
mov
int3
pop
lahf
ret
std
pop
add
cmp
jle
jno
pop
fs
ret
je
jmp
out
pop
sbb
push
stos
scas
and
sbb
cmp
sbb
inc
mov
pushf
push
lret
jnp
jmp
mov
mov
jmp
popa
inc
out
into
fadds
pop
inc
inc
cmpsb
push
movsb
mov
ljmp
comiss
fnstsw
aam
mov
int
pop
ja
inc
ljmp
std
shll
mov
xchg
pop
add
nop
sub
cmp
jmp
out
mov
movl
aam
mov
add
sbb
testl
sub
outsb
xchg
test
cmp
jns
mov
mov
shlb
imul
and
out
and
push
push
movb
and
lods
sub
xchg
call
xor
pusha
pop
adcl
rcrl
shll
out
fs
cld
push
fidivl
mov
xor
dec
lock
mov
in
pop
rorl
fs
subl
or
sbb
inc
sbb
shlb
aad
adc
insl
push
in
addl
mov
xor
add
fld
mov
pop
stos
mov
rorb
mov
push
sbb
push
mov
enter
add
lds
shrb
loope
jmp
add
testl
scas
add
movsl
mov
mov
int3
cmp
repnz
push
cmp
push
sbb
ljmp
sarb
jnp
pop
daa
mov
and
flds
inc
fstpt
hlt
xor
repz
push
les
mov
fdivl
push
daa
jne
mov
jno
ljmp
in
scas
push
sbb
test
inc
pop
push
std
sub
in
sub
or
fwait
mov
or
xor
test
shlb
stos
rorb
stc
and
mov
lods
jnp
mov
jmp
in
loope
mov
add
fidivrs
cltd
dec
xor
ret
jbe
adc
call
fwait
or
xor
cmp
ja
mov
div
jne
into
je
sbb
push
es
movsb
xchg
sub
daa
lret
outsb
les
cmpsl
push
push
pop
jo
pop
popf
or
fadd
dec
in
daa
aas
dec
call
mov
push
xchg
push
sub
push
stc
inc
adc
mul
les
add
outsl
jne
mov
add
cld
add
pop
lock
add
add
mov
and
pcmpeqd
push
or
sub
and
mov
pop
icebp
cmp
inc
push
sub
push
sar
xchg
movsb
jb
imul
mov
pop
dec
xchg
jb
jne
pop
and
and
ss
outsl
int
lret
icebp
lds
in
out
and
push
roll
repz
or
push
adc
int
test
sub
jbe
inc
mov
imul
pop
imul
jb
mov
test
scas
pavgb
add
repnz
lods
mov
pop
push
movsb
jns
mov
popf
out
subl
and
push
jno
repnz
mov
and
and
fwait
xchg
inc
cmp
fidivrs
adc
jb
or
in
pop
jge
sbb
arpl
mov
fsubrp
aas
dec
mov
daa
fnsave
adc
and
mov
out
aam
push
inc
and
fsubp
negl
push
lods
mov
out
pusha
mov
jb
dec
inc
lods
mov
out
cmp
and
push
mov
outsb
repnz
outsl
push
sbb
pop
xchg
xchg
pop
push
xchg
dec
xchg
pushf
cmp
pop
testl
adc
jae
mov
rorb
mov
cli
arpl
dec
pop
call
mov
cli
or
std
xchg
addr16
insl
push
mov
les
dec
bound
jae
les
adcb
rol
push
jne
aaa
or
fidivs
jbe
xlat
orb
dec
mov
mov
mov
jg
push
sbb
dec
pop
lcall
rclb
cmp
scas
cmp
clc
int3
lods
jl
and
xor
sub
pop
mov
cmp
ja
lret
and
out
inc
test
xchg
pop
pop
and
mov
mov
adc
andb
lret
sub
ror
push
mov
or
test
sbb
shrb
in
pushw
jae
xor
les
nop
ficomps
adc
xchg
testl
push
mov
mov
in
pop
push
inc
ret
mov
fcmovbe
sbb
clc
sbb
pop
dec
sub
test
or
and
into
dec
popa
out
or
pop
pop
testb
jbe
add
mov
flds
jns
sub
mov
aas
sahf
jmp
jp
xor
and
int3
sahf
add
xchg
lahf
cli
lock
clc
dec
jmp
cld
inc
in
pop
loope
shl
pushf
inc
push
movsl
push
sbb
fwait
test
jp
test
out
das
add
cwtl
jle
fmuls
mov
pop
xchg
add
pop
out
and
or
add
jbe
adc
push
fadds
cmp
cmp
mov
dec
int3
and
cs
loopne
mov
push
dec
push
adc
and
jp
mov
lods
outsl
scas
push
mov
loopne
aas
mov
into
insl
cltd
cltd
or
rcrl
movsl
jo
or
addl
cmp
jge
sbb
popa
mov
into
mov
and
loope
xchg
and
test
push
cmp
pop
mov
add
aas
jl
popa
sub
xchg
and
xlat
addr16
loope
mov
js
mov
jne
jae
rorl
mov
sti
cs
scas
out
cmpl
xchg
and
jne
int3
inc
jge
icebp
mov
xlat
js
sub
jle
movsb
imul
mov
adc
idivb
dec
test
inc
in
sbbl
push
adc
push
and
mov
inc
ret
or
or
lcall
fcomps
insb
ficompl
xlat
or
or
call
pop
and
pop
cwtl
imul
xorl
pop
insb
jmp
int
mov
insl
mov
nop
jecxz
push
xchg
inc
out
xor
fstpt
xor
scas
sti
pop
or
push
arpl
test
fwait
jmp
lret
enter
xlat
dec
jne
mulb
jecxz
dec
nop
insb
inc
aas
and
sub
cli
iret
inc
xchg
ret
jo
pop
xchg
dec
or
in
xor
fisubrs
xor
push
adc
cmp
int3
cwtl
addr16
test
add
sub
or
push
push
add
js
and
mov
je
inc
out
and
cmp
dec
ret
push
jo
popa
xor
lahf
adc
sbb
hlt
repnz
test
mov
les
cmp
imul
or
dec
mov
and
xor
and
pop
idivl
push
aam
jecxz
mov
mov
inc
sbb
cmpsl
lcall
cmp
shrl
sbb
fwait
in
fs
pop
jbe
sysexit
pusha
loopne
loopne
mov
and
push
mov
outsb
test
in
xlat
and
jnp
dec
sbb
call
or
cwtl
sti
push
pop
pusha
cmp
sub
mov
and
sub
insl
shll
sbb
lds
daa
or
mov
aad
pop
push
xorb
pop
cmp
js
sahf
sbb
dec
data16
test
lret
jne
inc
arpl
xor
fs
lcall
imul
decb
push
or
lods
sbb
mov
xor
call
dec
pop
mov
out
adc
push
pushl
imul
sbbl
imul
dec
mov
rorl
push
mov
mov
es
push
cmp
or
stos
shl
fbstp
adc
mov
ficoms
jne
xor
jno
mov
mov
dec
mov
xor
mov
cmc
xor
fisubrl
cmp
adcb
xor
mov
push
pop
add
add
icebp
lret
imul
and
filds
or
mov
or
cmp
push
sub
pusha
leave
jmp
jmp
rcll
ret
cmp
std
hlt
ja
fcomp
jge
cmp
enter
lret
xchg
roll
fmuls
fistpl
fs
adc
ja
lock
test
cmp
xor
subb
mov
iret
addr16
inc
inc
or
movsb
loope
mov
pop
cmpb
mov
sub
div
mov
clc
ret
inc
sahf
sti
xchg
pop
bound
inc
insl
xor
out
or
pop
pop
nop
mov
pushf
and
sbb
xchg
sub
in
jno
mov
enter
inc
out
std
pop
fwait
enter
inc
mov
into
or
jno
sub
adc
lock
cmp
and
sti
ds
test
inc
adc
sbb
and
fistps
outsb
sub
cli
pop
sub
push
mov
movsb
popf
xor
mov
dec
push
pushf
inc
daa
nop
jg
ret
jle
dec
loope
or
sub
dec
gs
aam
mov
call
dec
lock
jl
stc
pushw
data16
ja
xchg
jnp
add
mov
pop
push
sbb
cmc
cmp
xchg
arpl
push
sub
lds
imul
xlat
rcr
mov
sbb
mov
or
daa
and
mov
jle
mov
xchg
mov
or
pop
xchg
std
push
push
sbb
push
jp
xchg
in
and
push
xor
pop
jno
jns
xchg
paddq
and
fsubl
pop
insb
push
xor
subl
addb
mov
mov
enter
inc
lock
repnz
xchg
in
stos
jnp
pop
mov
push
push
mov
cs
mov
pop
int
and
in
bound
mov
int3
cmp
xor
jne
pop
jae
lret
pushf
imul
push
pop
stos
or
mov
fnstcw
stos
daa
sbb
mov
leave
adc
or
xor
xchg
sub
inc
loope
mul
sbb
xor
mov
jne
aad
or
nop
mov
jo
xchg
jno
test
jg
nop
movsl
cmp
sbb
out
or
add
flds
xchg
push
cmc
es
cmpsb
sub
rolb
mov
sahf
orb
jl
jb
ficoml
lret
push
data16
push
push
lds
aam
ret
mov
std
xsave
push
fwait
ds
int
outsb
shl
jg
xchg
push
jecxz
mov
int3
or
sbb
fwait
dec
and
js
push
fs
or
lahf
ljmp
jecxz
cmp
mul
sbb
pop
xor
add
lods
mov
fmuls
out
arpl
fdivrs
ja
icebp
jne
insb
scas
popf
mov
mov
jge
sbb
pop
ret
jle
gs
loope
movl
stc
push
div
addr16
add
xchg
and
xlat
lea
fbld
nop
test
xchg
ljmp
sub
stos
and
xor
fcom
lock
push
jnp
push
xchg
mov
mov
insb
pushf
stos
push
into
mov
ds
lds
test
call
jle
pop
jns
mov
addb
jp
xchg
jmp
lret
and
das
mov
inc
daa
popa
out
xor
ret
sarb
xchg
push
ret
push
fnstcw
cmc
mov
fdivr
add
push
xchg
jmp
pop
pop
loopne
stos
mov
xchg
ss
imul
mov
or
push
addr16
cwtl
pop
jbe
mov
push
out
mov
or
inc
insl
stos
xor
cmp
jnp
das
xor
loopne
add
pop
std
or
cmp
iret
adc
cld
sbb
gs
outsl
xchg
test
ljmp
out
jl
jle
inc
cmp
sbb
xlat
or
and
pusha
adc
fstl
repz
in
orl
sub
inc
arpl
sbb
mov
mov
dec
cmp
mov
lcall
mov
loope
int
sub
mov
jmp
push
mov
jmp
loopne
mov
ljmp
cld
je
cld
add
subb
cmc
dec
insw
scas
shl
fidivrl
push
ret
cmpsl
push
ret
mov
inc
mov
push
clc
leave
or
dec
mov
cmp
daa
and
pusha
and
sti
mov
add
push
or
std
add
mov
cli
cmp
lcall
mov
dec
test
xchg
ss
test
cmp
mov
dec
das
push
and
mov
adc
jns
repnz
loopne
dec
rcll
ret
popa
cmp
scas
xor
scas
in
fdivrs
cmp
mov
xchg
pop
sub
mov
cmpsb
popf
jno
push
xchg
inc
sarb
andb
pop
pop
in
loope
cmp
dec
inc
mov
push
mov
js
fldcw
lds
scas
test
mov
xlat
iret
sbb
enter
pusha
xor
jnp
mov
pop
repz
pop
mov
pop
lret
mov
cmc
cli
stos
xchg
out
shlb
mov
xor
out
and
cmpsl
stc
enter
and
data16
pop
fsub
leave
ficompl
lds
sbb
add
inc
dec
lea
std
pop
lods
pop
mov
mov
in
movl
jo
and
je
popa
mov
insl
testl
aam
xchg
ljmp
in
rorl
stc
and
in
das
lds
mov
adc
arpl
ds
pushf
daa
and
push
mov
sbbl
test
or
rcrb
and
scas
push
int3
test
add
add
adc
clc
es
rcrl
aas
je
push
outsb
lods
xchg
sub
inc
mov
xchg
ret
cld
into
push
jno
cmp
testb
adc
pop
subb
sub
clc
fs
lahf
inc
notb
and
cli
cmpsb
shlb
das
pop
lods
add
fidivl
mov
fwait
test
fidivrs
shrb
and
or
repz
mov
scas
imul
push
test
in
cmpb
rcll
cmc
add
push
add
aas
xchg
jns
push
or
js
jno
push
jns
in
subl
push
and
out
nop
pop
xor
dec
gs
lahf
dec
loopne
or
scas
call
adc
ret
sbb
xor
mov
xor
nop
xor
mov
cmp
sahf
fimuls
fisubs
lret
stos
es
mov
pushf
mov
inc
shrl
push
mov
in
push
mov
jmp
aam
add
push
call
imul
in
sbb
je
dec
fcomp
jbe
xchg
cltd
sbb
xorb
out
repz
test
xor
repz
fwait
xor
mov
pop
lods
pop
cmp
cmp
rolb
loope
dec
loopne
inc
xor
lahf
aaa
mov
addr16
jge
adc
aaa
int
lods
sahf
imul
pop
and
addr16
and
loop
xor
fsubrs
push
mov
popa
fistpll
loopne
pop
inc
mov
sub
xchg
xlat
jnp
mov
push
jmp
fucomp
ret
sti
dec
jae
pop
xchg
pop
mov
xchg
add
ds
dec
cld
sub
push
jne
mov
arpl
cmc
sbb
or
adc
inc
lret
inc
jl
mov
out
xchg
add
cwtl
pop
cmp
pop
sub
pop
cmp
call
pop
gs
pop
lods
or
xlat
lahf
outsl
gs
cmpsl
testl
jl
adc
cmp
cmp
out
adc
in
fwait
cld
and
jmp
dec
push
pusha
sti
test
push
lock
call
pushl
sbb
cmp
push
out
add
pop
sbb
stos
sub
sbb
test
add
sbb
lcall
pop
xchg
ret
push
lods
imulb
out
sti
lret
pop
inc
sub
push
add
sbb
das
adc
xor
iret
test
popf
daa
cmp
lods
add
leave
loopne
and
sbb
lret
and
rcr
add
jno
and
inc
push
pop
mov
fwait
popf
mov
cmc
fdivl
or
mov
sbb
cld
test
cs
aam
xor
cmp
add
adc
lods
mov
mov
leave
cmp
pop
pop
sbb
mov
dec
es
outsb
jge
out
mov
push
call
and
and
xlat
sub
adc
or
or
mov
bound
pop
dec
cmp
sti
imul
hlt
mov
inc
sahf
ficomps
cli
fsubr
ljmp
test
xor
sub
and
or
mov
leave
das
call
jp
mov
imull
jae
jo
test
xor
sub
mov
push
adc
cld
xchg
cmp
mov
subl
xor
test
daa
push
out
lea
scas
arpl
inc
jp
xchg
out
icebp
int3
movsl
std
mov
std
cli
cmpsl
inc
mov
repnz
jmp
xchg
cwtl
xor
popf
lea
incl
sahf
sbb
add
int
sub
lock
cmp
sbb
dec
mov
mov
push
daa
out
pop
roll
adc
cmpsl
mov
hlt
scas
mov
outsb
daa
notl
lahf
pop
xchg
mov
fildll
sbb
inc
out
or
mov
fwait
scas
jg
clc
cmp
mov
xchg
ficompl
mov
cltd
cmpsl
pop
aad
testb
add
inc
inc
mov
cmp
add
adcl
fwait
in
pop
les
lods
outsl
dec
jnp
outsb
push
inc
enter
jmp
int
sbb
inc
aad
pop
dec
sbb
xor
cmp
and
shlb
in
or
and
xor
xchg
and
and
mov
in
and
cld
inc
jg
sbb
daa
dec
push
fistl
sbb
pop
cmp
push
les
cmp
jle
arpl
inc
mov
cli
sbb
xor
shlb
push
shlb
push
fs
cltd
or
xchg
xlat
test
adc
mov
cmp
jp
cmpsl
inc
adc
bound
lahf
pusha
adcl
cmpsb
enter
mov
insb
adc
and
iret
jecxz
lds
xchg
movsl
sbb
popf
into
pop
aas
dec
addr16
jp
lahf
lret
mov
loop
mov
mov
stc
push
push
xor
das
jns
rolb
je
imul
sub
jb
mov
jecxz
idivl
add
mov
stos
dec
inc
pop
pusha
jae
std
mov
pop
jbe
andl
dec
out
frstor
aas
mov
bnd
push
adc
sbb
call
in
cmpsb
icebp
or
push
leave
mov
jno
in
cltd
mov
call
test
test
mov
hlt
mov
mov
int
mov
adc
mov
hlt
xchg
pop
movups
es
fstpt
loopne
imul
daa
mov
mov
mov
lcall
neg
mov
and
adc
in
jae
leave
lahf
call
sub
add
mov
mov
sbb
xchg
fisttps
shrl
cmp
je
pop
pop
shl
addb
jb
fs
sub
xlat
sbb
pop
push
loopne
movsb
repnz
mov
test
xor
and
push
push
stc
fbstp
incb
mov
fcmovnu
xor
mov
stos
push
and
jmp
andb
mov
pop
and
pop
in
outsl
and
xchg
test
adc
lahf
adc
lods
mov
xor
cmc
adc
adc
mov
pop
sub
inc
mov
insb
outsl
add
call
fcomip
popf
lods
shrl
stc
sub
ds
xor
pusha
aam
insb
pop
push
cld
inc
xor
push
push
dec
sti
mov
xor
stc
in
and
lds
dec
pushl
insb
xchg
inc
jp
cli
sti
or
int3
xor
stc
jg
mov
in
movsb
lcall
jg
sbb
cmp
in
dec
xchg
sub
cmpl
sahf
inc
jbe
adcb
out
ss
out
loopne
mov
mov
jnp
push
push
xchg
lcall
cmpsb
jge
fisubrs
inc
outsb
push
mov
dec
jg
out
adc
and
sbb
pop
push
sbb
pushf
mov
arpl
sub
sbbb
fwait
insb
mov
cmp
stc
imul
out
jb
mov
mov
das
inc
adc
and
int3
adc
mov
sbb
jp
jne
adc
pop
push
mov
or
jnp
arpl
push
outsl
lret
lock
or
cmp
add
clc
xchg
sub
cwtl
xor
movsl
inc
ds
dec
jnp
inc
pop
sbb
fildll
cltd
mov
repnz
inc
pusha
mov
mov
cmp
xchg
cwtl
lret
mov
or
cwtl
lods
mov
stc
mov
sbb
xor
mulb
cld
adc
xchg
fwait
sbb
mov
mov
jmp
addb
cs
pop
insb
xchg
add
lods
int
pop
dec
lcall
xchg
pop
push
sbb
pop
cmp
ljmp
fisttps
aas
sbb
xchg
out
cli
sbbb
dec
stos
bound
int
sahf
sbb
and
push
mov
gs
out
jo
decb
les
xor
pop
or
mov
xchg
mov
mov
sub
dec
repz
in
xchg
aam
lea
out
jnp
inc
not
inc
testl
push
lret
mov
mov
loope
insb
pop
or
jnp
pop
insb
jle
fstps
push
push
jmp
push
push
aaa
mov
lcall
data16
pop
inc
dec
out
cltd
push
arpl
xor
pop
cmp
and
sbb
sarl
loop,pt
pop
jbe
adc
and
mov
outsb
outsb
sahf
cmpsl
dec
pop
and
push
xor
lea
ljmp
adc
or
loope
sub
pop
shll
mov
repnz
xchg
inc
xlat
cmp
mov
dec
cld
mov
je,pn
sub
mov
jl
subl
push
mov
mov
or
dec
in
sub
fwait
adc
outsb
imul
sahf
jmp
and
js
sub
and
dec
scas
dec
mov
xor
rdpmc
aad
shrl
xor
sahf
ficompl
adc
xchg
mov
jmp
push
pop
inc
mov
aad
fdivl
inc
lods
mov
ljmp
xchg
pop
jo
fmull
sbb
push
mov
jmp
jbe
push
lcall
std
inc
mov
cmpsl
fidivrs
add
imul
and
clc
int
cli
decb
test
stos
outsb
fdivp
repz
adc
mov
jl
rclb
and
int
scas
push
mov
push
add
mov
mov
mov
call
lahf
faddl
cli
les
fs
cmp
push
sbb
sar
cmp
xchg
mov
sbb
fldenv
xchg
addr16
adc
or
cmp
push
sti
sbb
xor
pop
jbe
repz
les
and
in
inc
jnp
leave
push
imul
rclb
sub
iret
cmp
mov
inc
int
mov
push
pop
pop
imul
xchg
loopne
test
push
xor
insl
mov
mulps
aad
negl
sti
popa
ficompl
push
and
fbstp
fidivrl
ret
sbb
stos
mov
push
dec
inc
adc
call
in
mov
add
addr16
insl
push
les
loop
outsb
iret
mov
push
mov
loopne
sbb
xchg
dec
ss
aam
mov
inc
jg
lcall
mov
aam
loop
or
jnp
dec
mov
lret
add
xchg
sbb
lahf
sbb
xor
push
add
xchg
movsl
les
ficoml
sbb
push
cmp
jb
icebp
repz
fbstp
aam
lea
or
addr16
mov
cmpsb
sbb
add
mov
aad
repz
mov
lock
mov
icebp
sbb
cmp
jle
and
lret
mov
sub
xor
sub
aaa
dec
mov
mulb
aaa
lcall
inc
and
mov
imul
push
ja
andl
adc
push
mov
xor
and
push
not
push
adc
in
sub
adc
xchg
hlt
jne
jmp
insl
cmpl
xchg
inc
decl
das
mov
rorb
push
mov
xchg
sub
pop
mov
fdivrp
and
xchg
push
and
xchg
enter
add
sub
das
aas
rcrb
leave
mov
sti
enter
fildl
popa
dec
xchg
das
ret
dec
fcmovnb
mov
and
mov
pop
inc
test
jnp
fstpt
shl
rclb
sar
stc
pop
inc
sar
in
pop
cs
sti
lret
imul
and
cmpsb
mov
mov
iret
jb
mov
scas
jbe
fucomp
cmp
mov
das
push
jnp
cwtl
dec
clc
push
in
test
add
stos
cs
jg
cmc
mov
ss
mov
mov
aas
scas
mov
add
movsb
pop
loop
push
stos
aaa
adc
jmp
mov
mov
js
rorb
or
loop
popf
iret
push
xchg
pop
outsl
sub
jmp
adc
xchg
mov
loop
or
pop
sar
inc
and
lcall
lmsw
fs
adcl
adc
push
push
loop
mov
inc
xchg
and
inc
xchg
pop
jmp
mov
outsb
cmp
test
lcall
jmp
or
lret
imul
adc
pusha
sbb
mov
jns
jb
ds
scas
es
dec
cli
gs
pop
xchg
mov
call
xchg
pushf
xchg
xchg
es
in
or
cmp
out
inc
push
and
push
shll
pop
daa
ljmpw
sbb
push
clc
sbb
stc
xor
xchg
push
pop
insb
pop
cmp
xchg
aad
jo
lret
js
out
mov
cltd
inc
xchg
insl
insb
in
cwtl
jne
xor
ds
cmc
loope
and
aam
imul
push
add
andb
lret
cmp
mov
ja
push
fstpl
sub
rcll
sub
sbb
inc
outsb
mov
pop
test
popf
imul
fs
lods
jbe
fisubl
mov
push
aad
int3
cmpsl
imul
mov
jmp
test
dec
push
jmp
loop
cwtl
push
shl
lods
subl
and
cmp
clc
mov
jbe
fnstenv
lods
mov
fnstsw
sahf
sub
out
and
lcall
xchg
xchg
fincstp
mov
test
frstor
mov
dec
inc
mov
sub
shlb
sbb
fucomip
call
cmp
in
insb
sbb
cmp
or
arpl
test
fistpl
inc
jns
pop
or
lea
xor
shll
popa
in
nop
inc
addr16
add
stc
xor
mov
test
loop
xchg
out
cltd
push
in
aad
sbbb
in
xchg
repz
push
jmp
inc
push
aad
lea
xor
jmp
fistpll
mov
enter
or
arpl
bound
in
in
int
or
and
push
adc
cmp
repz
outsl
xchg
clc
push
cs
cs
cld
jno
pop
jns
shrl
fisubrl
pop
fimull
jb
in
js
ss
pop
xchg
and
xchg
sbb
fwait
inc
pop
dec
sub
addr16
adc
mov
adc
inc
push
lret
fsubrs
enter
pop
icebp
aaa
cmp
cld
je
push
ds
adc
ret
or
out
int3
xlat
push
rcll
fisubrl
push
cmc
push
shr
sub
test
inc
mov
push
xchg
xor
rclb
ss
xor
and
pop
and
push
stc
inc
je
push
loop
sahf
loope
cmpsb
jae
xchg
mov
cld
aas
dec
jge
sub
jge
cli
sbb
ret
fidivrl
mov
xor
sub
lea
push
movsb
mov
mov
call
les
xor
loope
pusha
add
fdivr
loope
incb
mov
cmp
cmc
sbb
adc
adc
mov
xlat
in
das
ds
int
adc
push
test
dec
clc
rcl
mov
mov
add
ret
insl
add
fwait
pop
jnp
repz
adc
inc
flds
mov
add
mov
pop
pusha
cmp
cmp
imul
mov
leave
add
clc
test
add
or
sahf
sub
mov
jge
aad
xchg
jo
mov
sbb
pop
xchg
sub
push
dec
leave
scas
nop
push
and
loopne
or
arpl
jecxz
or
ret
clc
sbbl
push
xrelease
orl
in
inc
xor
mov
pop
aam
jbe
out
daa
aas
out
sbb
bnd
mov
pop
sub
add
adc
hlt
add
in
fs
out
rorb
sbb
xchg
push
xor
push
adc
sub
pop
xor
aaa
jo
out
xor
mov
lcall
push
cmc
adc
inc
or
shll
jecxz
sbb
pushf
ja
add
pop
cltd
scas
push
inc
adc
jecxz
mov
push
jmp
push
or
and
sbb
addr16
sub
dec
fists
xchg
mov
ret
sbb
orl
pop
mov
cmp
mov
adc
mov
push
scas
imul
std
dec
imul
add
int
jle
push
fsubs
sbb
stos
pop
fwait
add
imul
jecxz
cmp
lods
cmp
mov
push
pusha
cmp
or
mov
xor
les
shl
pop
popa
movsb
dec
pop
sbb
xchg
ret
call
pop
sbb
int
and
scas
pop
xor
addr16
pop
aad
mov
and
mov
cmpl
xor
xchg
mov
dec
mov
adc
jg
pop
and
nop
sbb
jg
push
bound
fistl
pop
xor
sub
out
bound
ficoml
out
jnp
addl
dec
or
std
aam
jo
or
jb
andb
sub
loope
dec
sahf
adc
adc
movsl
mov
out
stos
stos
in
inc
xchg
push
daa
mov
xor
push
xchg
mov
sbb
mov
xor
xchg
mov
int
imul
push
or
add
rcll
add
dec
pop
dec
lcall
add
outsb
ret
call
loope
lcall
addb
cmc
dec
test
xchg
and
add
xchg
insl
adc
mov
popa
int
cmc
inc
inc
dec
in
lahf
inc
aad
sub
mov
sub
xor
cmc
adc
sahf
mov
cwtl
jb
inc
xchg
xchg
pop
das
fildll
xlat
das
pop
test
sbb
ds
xor
mov
mov
sbbl
cwtl
gs
cmp
fistpll
arpl
int3
xor
cmp
mov
sbbl
ljmp
movsl
mov
push
xchg
arpl
jp
or
jecxz
lahf
je
and
pop
and
divl
pop
push
cld
push
xor
xchg
mov
jge
inc
push
cmpsl
sub
jl
int3
pushf
pop
rol
in
leave
xor
jg
fcompl
fsubrp
push
pop
ljmp
imul
xor
inc
movsl
lret
mov
fmuls
ja
fst
test
cmp
out
leave
adc
test
xchg
mov
hlt
xlat
or
out
int
or
push
adc
adc
jge
xchg
outsl
sbb
aas
aaa
popa
inc
sub
or
outsb
sub
xchg
xchg
push
adc
movsb
rcrl
ret
jbe
negl
xor
aad
jno
adc
inc
push
inc
jp
sub
gs
mov
lret
xchg
rolb
dec
mov
adc
imul
popf
ret
sub
addr16
jl
imul
sbb
sub
addb
dec
cli
in
mov
shr
pop
stc
pop
push
sbb
lret
jne
ja
jge
shrb
add
cmp
cmp
xor
mov
arpl
or
cltd
lret
inc
jmp
pcmpeqd
out
mov
jg
mov
pop
daa
cmpsl
jns
out
dec
lcall
jbe
xchg
neg
cmp
subl
es
js
rclb
into
pop
aas
test
xchg
cmp
inc
sbb
outsl
test
sbb
repz
js
add
inc
xchg
xor
mov
jbe
test
add
xor
jecxz
ficompl
sahf
cmp
or
insb
or
push
ja
jb
mov
adc
pop
pop
ror
jp
clc
xchg
mov
fwait
imul
push
inc
ret
push
sub
jbe
cs
mov
in
xchg
out
pop
sbb
sbb
mov
hlt
or
fs
outsl
add
dec
jnp
mov
fisubrs
hlt
sahf
lds
mov
stos
sub
or
xorl
jno
es
xchg
dec
mov
fdivrl
loop
and
xchg
cs
jns
test
push
cmc
roll
xchg
mov
sahf
bound
cmp
push
rorl
push
pop
jns
inc
mov
jecxz
cli
lock
fidivrl
xor
xchg
jge
imul
mov
pop
ficomps
ds
cmp
adc
xchg
push
inc
adc
aas
dec
loope
inc
test
jmp
out
aas
movsb
std
push
lock
push
ret
lock
ss
dec
stos
push
mov
xor
into
out
sub
loope
js
mov
dec
popa
push
xchg
pop
xor
pop
repz
rclb
pop
jae
mov
adcl
cltd
mov
jp
or
dec
cmp
xor
insb
jle
in
and
repnz
pushf
movl
out
jo
sub
adc
mov
mov
je
adc
cmpsb
mov
mov
jle
xor
sub
leave
insl
mov
fists
aam
jb
push
push
cmp
push
js
js
mull
loop
rorb
mov
aas
pop
or
inc
movsl
imul
js
inc
ss
push
in
push
in
adc
inc
cmp
enter
lret
out
icebp
adc
fdivp
dec
adc
pop
mov
loopne
xchg
jle
out
int
sub
xor
shll
lods
lea
mov
xchg
xchg
shr
movsb
aad
add
jbe
cs
arpl
shl
adc
movsl
mov
pop
outsl
mov
in
inc
mov
xchg
loop
xchg
fwait
dec
add
mov
mov
xchg
loope
or
pop
mov
xor
popl
jnp
leave
lret
sbb
push
scas
pushf
cmc
mov
addb
into
mov
mov
pop
sbb
inc
add
fnstsw
adc
and
inc
arpl
and
push
movsl
call
or
insl
and
test
sbb
jne
ret
cmp
ret
mov
push
pop
dec
stc
fcom
insl
mov
pop
or
test
les
mov
sbb
add
and
lods
mov
cwtl
add
pop
mov
pop
sub
repz
mov
lahf
jne
jns
jmp
in
std
dec
push
call
cmp
sbb
push
cmp
cmp
xchg
pop
sbb
sbb
aas
xchg
jnp
mov
cwtl
mov
sbb
adc
sbb
xchg
xor
and
xchg
jmp
lahf
dec
scas
shrl
sub
push
subl
mov
jl
in
xor
aaa
hlt
push
cmpsb
hlt
dec
add
ss
dec
mov
ret
pop
jae
ret
xor
fld
mov
into
insl
pop
push
xchg
and
mov
jl
arpl
fidivs
push
push
scas
mov
xorb
movsb
sbb
jge
ret
adc
add
xor
cmp
jns
inc
shl
outsl
popf
into
push
pusha
pop
and
add
arpl
or
repz
iret
jecxz
add
faddp
inc
inc
movsb
adc
ja
push
dec
jbe
push
in
pop
nop
adc
cmpsl
add
xor
xor
lods
mov
pushf
or
iret
inc
sbb
and
pop
jns
sub
push
bound
fsubl
std
ret
aaa
inc
dec
dec
sub
inc
and
data16
cs
dec
sbbb
lret
rcll
mov
xchg
sub
hlt
test
xchg
cld
decb
cli
mov
pop
sub
inc
mov
mov
sahf
push
add
pop
sbb
decb
pop
dec
or
pop
loop
ss
jl
push
stos
and
inc
or
jnp
sub
push
cmp
aam
test
mov
cs
call
gs
mov
cwtl
cmp
add
sub
orb
ss
imul
inc
pop
or
mov
js
mov
xor
pop
mov
outsb
scas
rcll
or
sbb
test
adcl
push
negb
sbb
ds
jg
or
sarl
add
mov
cmp
icebp
add
data16
or
ljmp
sub
pop
imul
inc
xchg
insb
popa
cmp
mov
test
push
mov
xlat
jnp
xchg
aam
pop
adc
clc
or
bound
adc
aam
add
test
xor
shrl
outsb
cld
ss
xor
fs
add
out
decb
xchg
test
mov
jge
push
xor
xlat
and
mov
push
fdivrl
lods
inc
pop
ret
test
pop
adc
popf
adc
adc
push
add
mov
lcall
test
and
push
jbe
shr
mov
cmpl
jo
jns
mov
mov
sbb
sbb
mov
add
xor
xor
jl
data16
mov
mov
icebp
es
movsl
pop
pushf
cmp
lahf
gs
push
sbb
fsub
lea
test
cmc
pop
or
mov
and
push
addr16
lods
js
push
ret
cmp
sahf
mov
xor
inc
lds
cmp
mov
and
ljmp
pop
pop
push
jmp
mov
xlat
sahf
pop
jl
mov
int3
popa
fsubr
stos
fimuls
movsb
sub
pop
lret
jo
pushf
rorl
es
sbb
dec
dec
int
dec
mov
inc
ja
outsl
cmpsb
sbb
orb
xor
sbb
lahf
add
lahf
cltd
aas
mov
ja
nop
sub
adcl
push
mov
sub
inc
cmp
jno
mov
dec
inc
xchg
loopne
and
or
pop
or
or
mov
mov
fimull
mov
lds
jae
sbb
data16
jl
lret
rol
int3
jno
lcall
sti
jbe
pop
loop
shl
cltd
cmp
adc
addr16
push
in
dec
jecxz
out
cltd
fisttpl
fwait
mul
sbbl
je
movsb
pop
aad
lods
xor
push
pop
rcl
mul
clc
je
bound
shrl
movsb
test
add
push
pushf
bound
pushw
jbe
cmpsb
mov
sub
jp
lods
sub
inc
xlat
lret
pushf
sub
cmp
mov
sub
mov
int
clc
sbb
icebp
mov
stos
stos
pop
mov
pop
insl
stos
jge
cmpsl
rorb
mov
jne
add
test
out
cld
sbb
int3
dec
bound
jne
in
and
pop
nop
jp
leave
and
lret
int3
loop
test
icebp
add
ret
add
inc
lock
xor
xchg
push
mov
test
popa
fiadds
movsl
cmp
dec
js
je
sub
popa
insb
push
xor
and
xor
mov
dec
pop
das
xor
sti
pop
nop
or
push
xor
sbb
jns
xchg
dec
out
push
fnstcw
mov
xorl
cltd
mov
pop
push
movl
adc
shrb
loop
repz
inc
les
add
jo
popa
dec
dec
cmc
ret
cmpsb
mov
rclb
mov
push
sbb
mov
mov
add
pushf
jae
pop
inc
pop
lahf
popf
or
movsl
or
rcll
es
int3
sbb
mov
mov
ret
mov
fldt
call
cmp
push
mov
push
jle
inc
sub
inc
xchg
call
push
mov
push
and
enter
pop
bound
xchg
pusha
push
push
push
push
inc
cld
stos
das
sbbl
jb
out
ret
xchg
scas
cmp
push
iret
adc
jl
ja
push
les
cmp
pop
icebp
shll
push
sbb
pop
cwtl
adc
fwait
sub
test
jne
xor
pusha
pop
and
xchg
adc
das
and
inc
data16
or
int
push
mov
xchg
sbb
enter
xor
jno
mov
std
hlt
pop
daa
cltd
sub
push
cmpsl
shrl
ret
inc
jge
pop
mov
loopne
or
adc
lds
stos
cmpsl
and
out
xchg
pop
out
stos
pop
jl
push
icebp
xor
jae
push
add
cmp
aam
lock
jne
mov
and
push
pop
xchg
adcl
sbb
in
jb
mov
sub
adc
push
mov
xor
leave
sahf
mov
movsl
cli
xchg
cmpsl
je
in
shll
xchg
lcall
push
dec
lock
into
or
je
les
mov
dec
sub
xor
ja
and
fcomps
imul
or
clc
arpl
hlt
xchg
int3
cmp
movsl
add
cmpb
cmpsl
push
mov
xor
inc
out
add
pushf
dec
std
mov
addb
ficoms
sub
dec
mov
js
and
cli
fcmovnu
adc
stc
jle
xchg
mov
jne
in
adc
add
rcr
daa
daa
ja
lcall
jp
adc
pop
and
xor
cmpsl
xchg
mov
xchg
mov
sub
outsl
push
mov
jecxz
adc
ss
or
stos
mov
xchg
call
dec
adc
sub
repnz
das
adc
psubb
setp
mov
inc
jle
scas
xchg
jle
jns
or
loopne
mov
cld
mov
jno
adc
insb
dec
dec
adcb
aam
lods
out
jl
sbb
pop
mov
add
push
xor
adc
fstl
dec
outsl
pop
ja
inc
mov
cs
cmpsl
mov
pop
add
cwtl
stos
imul
pusha
cld
enter
data16
sub
pop
aad
imul
pop
in
push
sub
add
or
pop
test
push
mov
sbb
fcmovnu
cli
sub
mov
scas
sub
shrb
rolb
fwait
adc
daa
adc
fimull
adc
aam
fs
jb
xor
inc
les
call
pop
andl
loopne
shrb
sbb
arpl
jb
fldl2t
clc
lock
orl
and
js
and
mov
push
gs
repz
pop
shl
jmp
aam
adc
pop
ret
xor
jecxz
aaa
cli
jae
cmp
in
sahf
mov
cmp
rol
mov
addr16
aas
ret
lods
and
fsubrs
rcr
pop
out
push
lods
gs
enter
ret
out
stos
repz
mov
in
pop
ror
mov
jbe
adc
mov
out
fsubrl
imul
outsb
idiv
mov
pop
adc
sbb
stos
dec
cwtl
clc
jmp
mov
repz
jns
adc
jae
mov
pop
jb
sar
js
bound
push
mov
mov
mov
pop
add
mov
add
pop
pop
sbb
iret
outsb
andl
loopne
sti
cmp
mov
pop
pop
dec
popf
hlt
sar
lods
mov
fldcw
stc
jbe
xchg
iret
push
xchg
adc
lahf
repz
pusha
adc
into
ja
outsl
sti
mov
lock
xchg
inc
aad
inc
pusha
mov
clc
jno
call
add
xor
lock
xchg
cmpl
jecxz
push
pop
insl
sti
mov
cltd
mov
call
rolb
and
mov
rcr
mov
std
xchg
jnp
mov
xchg
jge
mov
insl
and
aam
fbstp
cmp
fmull
inc
pop
lret
scas
out
or
jae
sbb
mov
xor
dec
cmp
fst
pop
cli
add
enter
pop
mov
cmp
test
xchg
pop
rclb
inc
cld
ds
lret
xchg
jnp
in
dec
fdivrl
mov
cmp
int
popf
mov
pop
push
flds
xchg
jnp
pop
adc
ds
out
pop
mov
lea
rcrb
and
inc
sub
jo
lds
scas
pop
test
test
insb
test
int
inc
adc
xchg
out
popf
loopne
leave
insl
mov
jns
addr16
ljmp
es
mov
scas
aaa
mov
dec
jno
xor
out
pushf
lcall
cmp
mov
repnz
rclb
fsts
call
inc
insb
sbb
adc
add
inc
lods
sub
xor
fwait
cmp
cmp
movsl
adcb
cmp
inc
mov
fnstenv
out
mov
sbb
xor
cmp
js
test
xor
shll
sub
push
popa
xlat
cwtl
push
mov
pop
sbb
cmp
loopne
fcoml
lahf
jge
std
inc
xchg
dec
arpl
push
or
xchg
nop
pop
xor
stos
dec
test
cmp
in
push
jl
mov
xchg
popf
jnp
cmp
out
adc
add
aam
rcr
repnz
xor
sub
jbe
or
pop
sti
cmp
dec
out
push
dec
data16
xor
pop
bound
jge
popa
adc
cmp
repnz
mov
xchg
sbb
mov
lret
cld
and
mov
test
mov
int3
mull
mov
add
mov
pop
int3
in
outsl
inc
aam
or
pop
and
and
and
cld
and
out
sbb
mov
rorl
push
sub
ret
call
push
lods
mov
jecxz
mov
lcall
test
loop
dec
daa
sbb
xor
mov
sti
xchg
adc
mov
scas
stc
sbb
cwtl
les
sti
test
sbb
pop
and
daa
jp
shr
and
sub
in
pop
xchg
iret
pop
es
xchg
out
or
adc
das
cs
imul
cwtl
enter
mov
add
or
andb
xlat
out
dec
adc
xor
xor
arpl
jp
and
aaa
movsl
inc
cs
call
push
pop
les
testl
sti
popa
or
int3
push
sub
and
pop
jge
hlt
lds
push
xor
adc
ss
movsb
and
mov
mov
mov
mov
mov
sub
add
shrb
jb
rolb
lahf
mov
and
cmpsb
fs
sahf
jg
sarl
daa
rorb
xchg
andl
sub
xchg
leave
mov
push
mov
andl
fcoml
mov
cmp
jb
outsb
mov
dec
pop
popf
inc
mov
mov
inc
flds
inc
inc
mov
jge
sti
out
jl
nop
sarb
cmpsl
pop
push
cmp
inc
xchg
fs
daa
bnd
clc
sti
push
cmpsl
sub
push
addr16
test
stos
mov
shll
jmp
sub
loope
sbb
sarl
pop
xchg
pop
xchg
pop
or
jo
or
or
mov
mov
lea
add
lret
mov
subb
ljmp
xchg
ret
daa
daa
nop
mov
outsb
mov
xchg
addr16
cli
call
or
add
and
int3
and
addr16
outsb
jne
cld
addr16
lods
and
mov
popf
sbb
jmp
test
mov
xor
adc
xor
mov
sub
fisttps
aas
cmpsb
sub
insb
mov
loope
lock
sahf
xor
dec
scas
in
fadds
mov
rorb
outsl
push
mov
xor
jg
das
lcall
push
xchg
in
shl
and
mov
repz
jl
push
fildll
sbb
or
inc
dec
pop
es
push
xor
setae
jg
stc
dec
ljmp
mov
xlat
ss
xchg
in
xchg
rcll
mov
sbb
ficompl
push
shl
push
or
jns
ficomps
mov
dec
jbe
imul
adc
call
dec
rcrl
cld
in
mov
or
jbe
xchg
iret
cmp
pop
jbe
loope
sti
cmp
mov
or
and
push
jbe
imul
outsb
xchg
out
js
add
cmp
imul
stos
pop
movsl
jmp
push
cmpsb
inc
mov
pusha
xchg
push
add
insb
pusha
sti
fwait
push
arpl
and
add
scas
lods
out
inc
cmp
or
sub
pop
or
and
test
xchg
fstpt
push
popf
addr16
lret
daa
sbbl
xor
fidivs
lods
sbb
mov
fcoms
int3
iret
add
mov
sub
icebp
scas
js,pt
dec
scas
lds
stc
sahf
lods
push
pop
test
movsl
xchg
fs
mov
xchg
push
loop
adc
sbb
sub
fbstp
lahf
adc
sahf
mov
clc
adc
push
jno
popa
push
mov
jns
lds
push
cmp
fldenv
repz
aaa
mov
scas
sub
adc
int
sub
inc
push
sbb
daa
cmp
jno
jno
pop
mov
mov
push
std
fdiv
icebp
mov
scas
or
jg
jnp
mov
dec
or
insl
xlat
jbe
mov
sub
cmp
loopne
pop
ret
push
mov
cwtl
adcl
dec
adc
in
stc
lods
or
lret
mov
hlt
jne
xchg
xchg
xor
mov
push
pop
mov
pop
fstpt
cmpsl
decl
add
pop
mov
and
adc
jns
negb
movsb
and
aam
imul
gs
or
dec
fdivl
fmul
cmp
movsb
aaa
data16
ja
outsb
xchg
jl
aaa
dec
loope
aas
popf
adc
xor
and
pop
add
mov
cmp
lret
cmp
shlb
push
xchg
cmp
pop
adc
pop
jae
test
cmp
cmp
stos
fsts
dec
mov
xor
jle
jecxz
rcll
int
je
inc
pushf
mov
out
jno
test
lret
inc
mov
loop
push
and
add
pop
enter
cs
and
fs
outsl
add
mov
jp
in
shll
int
push
adc
in
inc
outsl
stos
gs
mov
push
adc
cmp
or
mov
aas
mov
lret
adc
jb
adc
loopne
aaa
sbb
xor
fldz
mov
adc
xchg
xchg
inc
shll
jnp
inc
push
lods
testb
cmpsb
shr
fdivl
sbb
xchg
sbb
add
mov
pop
xchg
push
insl
mov
inc
icebp
jmp
in
xlat
inc
orb
adc
cld
dec
cld
insl
stc
sbb
adc
lods
cs
jbe
pop
xchg
sub
arpl
cli
sbb
bound
xchg
mov
jmp
xchg
pusha
test
scas
int3
push
out
out
fimull
cmp
out
push
lea
sub
mov
test
cmp
in
xchg
pop
inc
jmp
adc
sub
loop
insl
cmp
push
xchg
lret
push
pusha
inc
aad
sbb
mov
mul
gs
sub
inc
sub
lods
jb
jnp
push
jae
push
pushf
shlb
push
adc
mov
fidivs
add
aas
shll
nop
and
in
in
add
xor
adc
xchg
dec
ljmp
outsb
xchg
adc
jg
adc
add
mov
sub
pushf
sbb
xor
push
adc
adc
and
push
dec
aaa
mov
xor
mov
fwait
mov
and
mov
scas
mov
mov
mov
test
adc
xor
sub
loop
pop
stos
pusha
sub
aam
nop
inc
pop
rol
dec
decl
adc
sbb
lahf
inc
inc
fistpll
dec
mov
xchg
sbb
sbb
imul
mov
es
mov
inc
hlt
pop
mov
cmpsb
mov
jnp
lea
or
mov
scas
je
lods
pushf
jne
sbb
gs
dec
mov
iret
sub
pop
fcom
inc
je
mov
movsl
lods
jnp
lods
cli
inc
insb
pusha
pop
nop
pop
pop
cmp
insl
fldcw
dec
scas
insl
fs
push
or
inc
es
daa
lods
cmp
mov
out
mov
fcmovu
or
cmc
mov
mov
int
mov
fsubs
enter
fcomp
xlat
outsb
xchg
pop
lahf
push
in
sub
test
ds
std
ds
cmc
out
je
movsb
out
lret
daa
scas
je
andps
sti
fwait
cmp
jg
xchg
rorb
pop
or
cmpl
ds
in
inc
mov
pop
call
aas
jns
sbbl
lahf
dec
sub
fwait
ret
inc
or
xchg
pushf
adc
push
mov
add
sti
sbb
xor
dec
lahf
mov
mov
xchg
movsl
hlt
and
int3
and
fmul
das
rorl
js
jl
nop
addb
cli
jp
dec
pop
mov
pop
jbe,pn
out
mov
movsl
xor
lods
cmpl
cld
out
jnp
adc
ja
mov
pop
push
ret
insl
push
mov
cmp
pop
clc
inc
push
insl
data16
stc
mov
inc
pop
mov
dec
or
mov
mov
sub
cmpsb
clc
push
gs
adc
jnp
in
inc
push
sbb
cltd
test
mov
mulb
jno
insl
sub
comiss
in
adc
jnp
or
jbe
push
mov
ja
xchg
lret
push
ret
dec
outsb
lods
stc
loopne
rcrl
mov
dec
ljmp
mov
test
je
scas
ss
test
enter
push
call
loopne
test
pop
and
jecxz
aad
pop
lods
cmpsb
or
push
add
xor
ficoms
ror
lods
dec
xchg
int3
decb
lock
mov
dec
rcll
inc
jmp
pushl
insb
mov
and
ja
out
ds
lret
add
scas
ja
icebp
fisubrl
sbb
adc
xor
cltd
stos
in
and
cmp
sub
xor
xchg
mov
rorl
add
fiaddl
cld
gs
es
pop
add
push
mov
sbb
aad
add
adc
pop
jl
sbb
out
cld
cmpsl
iret
sub
dec
and
addl
inc
mov
jb
adcb
push
rcrl
jp
jo
cmp
les
mov
jns
fbld
rol
sbb
lods
js
outsl
aad
stos
sbb
adc
or
xchg
dec
aad
rorb
push
or
xor
lock
dec
sbb
pop
sbb
push
xchg
int3
loope
xorb
xchg
fnstenv
jb
cmp
adcl
add
rcr
cwtl
mov
test
daa
in
sbb
into
mov
push
sub
jo
cmp
and
mul
repnz
out
cmp
in
scas
and
mov
cmp
ret
adc
addr16
jne
adc
push
mov
sbb
test
xchg
jle
fimull
aam
mov
mov
and
jmp
rorl
das
push
scas
lret
jns
mov
inc
fucomp
gs
test
sahf
pop
jmp
mov
ficomps
add
sbb
mov
or
mov
pop
popf
inc
out
lods
std
mov
cmp
adc
lock
cmovge
jne
cmp
bound
xchg
loope
pop
mov
mov
pop
pop
xchg
dec
push
jl
outsl
xlat
shll
pop
jo
arpl
in
stos
cmp
not
pop
pop
xlat
or
inc
icebp
mov
add
scas
pop
xchg
in
clc
mov
rcrl
cmpsb
and
sahf
push
add
cli
add
or
cld
lods
loope
leave
in
sub
xor
adc
inc
cs
ret
mov
cltd
or
mov
addr16
mov
out
aas
xor
les
lock
aaa
sub
shl
inc
shlb
jl
xor
fs
mov
ljmp
xor
and
xlat
cmpsl
jnp
adc
movl
sub
mov
gs
cmp
mov
hlt
push
cli
push
mov
push
in
push
call
pop
lods
push
pop
ret
mov
inc
sahf
rolb
sbb
or
lds
aas
jno
pop
mov
inc
mov
stos
pushf
cmc
arpl
sbb
cmpsl
cs
in
into
filds
in
sub
pop
lods
outsb
push
cs
adc
or
test
xor
push
sbb
xlat
push
sub
mov
or
lcall
add
jmp
popf
sbb
xchg
mov
imul
bound
jo
dec
lods
pop
das
aaa
mov
cmp
xlat
fidivl
popf
xchg
xorl
add
incb
inc
xchg
imul
inc
cli
cmp
push
outsl
mov
out
push
pop
mulb
jno
lods
xchg
scas
jo
pop
xor
fwait
imul
stos
cmp
fidivrl
jbe
mov
aad
aam
dec
lea
gs
pop
es
cmc
cmpsl
add
outsl
cmp
sub
outsb
pop
inc
mov
mov
jl
icebp
lock
mov
imul
jne
jge
inc
pop
jbe
pop
insl
scas
and
lcall
repnz
adc
push
xchg
add
adc
jnp
pop
out
outsb
cmp
stc
sub
sbb
dec
pop
or
lods
pop
loope
repz
or
cmp
add
data16
xchg
mov
push
sarb
mov
sbb
data16
and
mov
nop
jle
testl
push
jns
shl
mov
jno
xor
pop
push
lcall
sbb
sbb
cltd
test
add
into
mov
repnz
push
mov
dec
pop
lcall
call
cmp
sbbb
dec
lcall
dec
dec
push
icebp
insl
jnp
dec
in
lcall
nop
jecxz
orl
je
mov
nop
push
bound
into
adc
mov
mov
push
jge
mov
push
jnp
cmp
cmp
xor
and
ds
iret
inc
mov
push
lcall
lock
mov
dec
add
xchg
sbb
out
mov
cmpsl
jae
pop
aas
movsl
lock
sarb
dec
sbb
sti
cmp
and
pushf
xchg
dec
xlat
gs
ret
sub
lods
mov
ret
imul
and
inc
movb
inc
push
bound
repnz
sbb
adc
lret
adc
insb
aaa
lret
dec
movsb
jg
inc
jmp
inc
scas
adc
int3
xchg
jnp
in
std
or
dec
inc
pop
add
sub
sub
dec
popa
jo
repz
aas
cs
jns
mov
pop
add
loope
nop
xchg
and
jno
les
and
jns
cmp
jns
push
adc
int3
mov
mull
movsb
pop
xor
and
js
add
push
push
fcoml
fnstenv
cli
and
add
mov
es
pop
imul
aam
insb
daa
out
pop
cmp
test
inc
arpl
test
out
shlb
outsl
push
push
lods
insl
ret
lods
and
xor
das
mov
jbe
les
sub
loope
das
jo
jg
adc
xchg
mov
mov
xchg
sub
call
leave
add
xchg
sbb
in
ja
dec
sbb
mov
push
movswl
add
xor
popa
xlat
sbb
stos
cmpsl
test
es
fidivrl
or
cmp
jno
sub
mov
lods
and
dec
pop
and
jb
sahf
mov
or
mov
arpl
rorb
mov
push
lret
sub
scas
insl
jp
cmpsb
ja
das
inc
testl
inc
and
aaa
fdivl
xchg
cmp
js
nop
rcll
mov
shlb
rcrl
adc
mov
or
xchg
lahf
pop
mov
je
dec
cmpsl
inc
shrl
insl
cmpl
mov
roll
shl
xor
jnp
lds
adc
dec
mov
dec
pop
mov
inc
mov
mov
ds
ljmp
jno
cmp
in
push
fmuls
xchg
faddl
lret
xorb
rcrb
pop
xlat
js
adc
sbb
rcll
insl
inc
mov
push
jbe,pt
call
pop
cs
dec
xlat
jb
enter
lock
roll
sahf
ret
jno
and
sub
sbb
dec
mov
xor
cmp
rorb
xor
lea
test
xchg
fisttps
ret
mov
stos
adc
pop
sbb
inc
xor
repz
dec
sar
and
in
es
lods
arpl
mov
lods
mov
data16
mov
pusha
mov
jle
shll
inc
scas
stc
jp
or
in
lret
inc
test
movsb
aam
bound
adc
subb
cmp
addr16
in
jo
inc
or
jecxz
insb
mov
fdivrp
dec
mov
xchg
ret
push
subb
inc
and
test
xchg
dec
movsl
outsb
xchg
jnp
ljmp
xchg
ret
mov
mov
cmp
push
lock
ds
popa
mov
inc
push
shlb
popf
test
clc
and
lcall
fs
lahf
fwait
adc
js
in
fidivrl
out
outsl
aas
inc
dec
inc
sbb
jno
sub
mov
dec
lods
out
add
je
mov
inc
push
xchg
in
mov
cmc
xor
repnz
mov
mul
jb
es
xor
lea
push
jns
xor
ja
stc
cwtl
mov
pop
push
cmp
rclb
cmp
adc
mov
lahf
std
dec
push
sub
int
movsl
test
and
pop
cmc
xlat
mov
mov
fnsave
sub
xor
les
lock
or
mov
jge
iret
mov
mov
mov
jmp
mov
mov
cmp
jb
enter
nop
add
pop
mov
dec
cmp
negl
mov
cmp
add
jmp
sahf
jmp
out
jns
pop
push
mov
sti
shll
in
out
xchg
lods
mov
popa
fxch
stc
in
rcll
iret
xchg
adc
or
fs
ficoml
aas
inc
dec
pop
xchg
sub
popf
jl
xor
adc
insl
xchg
push
testl
pop
xor
fisubrs
cmpsb
push
out
jg
mov
enter
sub
in
pop
mov
pop
ljmp
outsb
sti
sbb
push
bound
jbe
mov
outsl
xlat
test
mov
outsl
ret
mov
test
inc
dec
and
loope
xor
inc
xor
lret
sub
mov
stc
lahf
ficoml
xor
cmc
xchg
dec
mov
loopne
lods
shll
pop
mov
mov
loop
adc
or
outsl
in
inc
and
stc
stos
dec
and
add
push
fdivrl
mov
jg
std
cmp
mov
mov
call
cwtl
push
leave
and
mov
adc
xor
in
mov
fs
pop
lds
out
shll
pop
sbb
mov
mov
addb
xorl
arpl
xor
hlt
test
call
xor
mov
mov
mov
xor
mov
mov
shlb
dec
or
jecxz
or
mov
in
jns
pushf
lods
ja
inc
cli
push
jmp
xchg
jo
out
jle
xor
and
rolb
cmpsb
inc
scas
fwait
sub
push
movsl
push
cmc
shlb
movmskps
cmp
lcall
pop
xchg
and
xchg
sbb
ds
sub
dec
jae
lock
loopne
mov
cmp
call
orl
push
cli
push
pop
int
and
ret
shlb
adc
add
mov
jne
and
pushf
jne
stc
mov
jbe
sbb
testb
dec
sbb
or
inc
sub
daa
ja
inc
clc
fisubrs
or
push
sbb
sbb
bsf
enter
rcrb
push
inc
mov
in
rcrl
test
movsl
mov
out
xchg
inc
lret
repz
jg
mov
ja
addr16
mov
mov
sahf
and
fs
dec
adc
test
mov
loopne
push
ljmp
in
xchg
int
inc
popa
cld
daa
sub
push
mov
push
dec
sub
call
loop
jg
sti
push
jns
insb
dec
rorb
ljmp
inc
xchg
lods
mov
lret
rcrb
mov
mov
and
iret
loope
or
push
sbb
fsubrs
je
ror
push
sub
or
cmpsl
or
jbe
push
xor
cmc
sbb
jmp
scas
outsb
movsl
xor
mov
test
jae
test
xor
xchg
ret
add
fisttpl
jae
mov
sarl
and
leave
cli
push
pop
jbe
dec
addr16
aaa
or
inc
pop
mov
je
loopne
test
cmpsl
or
fucomip
es
sarl
adc
cli
jmp
call
and
cltd
xchg
fstl
xchg
popf
mov
adc
inc
push
cmp
std
ret
stos
into
jnp
mov
cmp
jp
bound
jmp
decl
icebp
out
sbb
daa
mov
xor
pop
divl
mov
cmpsb
add
xor
popa
jmp
shlb
mov
jns
mov
divl
mov
mov
stos
gs
pop
enter
pop
or
into
inc
jbe
roll
aas
dec
cmpb
inc
xchg
mov
inc
cltd
xchg
jno
sti
jb
out
outsb
push
pop
adc
out
das
fildl
dec
les
xor
fdivrl
lret
xchg
jb
into
cmpsb
popf
pushf
or
and
fdivl
xlat
mov
scas
xchg
add
pop
push
mov
and
push
inc
ficompl
xor
movsb
mov
lods
aam
gs
pop
andl
jle
xchg
cmp
jle
jae
in
pushf
cli
sbb
lahf
xchg
xorb
outsb
push
adc
add
sahf
jge
rorb
pop
mov
iret
in
jo
cmp
fisubrs
jbe
pop
ret
push
mov
add
add
bound
lods
adc
insl
ja
mov
fisubrs
movsb
movsb
hlt
imul
jb
int3
popa
and
and
movsl
xlat
pop
adc
xor
addr16
rorb
cmp
jnp
pop
adc
shl
andl
insl
push
in
mov
fpatan
jp
mov
cs
imul
pop
in
cmp
jg
cmp
testl
shrb
lahf
js
out
mov
dec
sti
push
in
adc
pop
or
mov
imul
jmp
insl
and
jmp
mov
mov
fildll
aam
xchg
xchg
jecxz
push
add
arpl
push
xchg
lahf
aad
cmp
mov
test
add
mov
inc
jmp
mov
mov
out
mov
out
popf
data16
sbb
cmp
xchg
pushf
fnsave
mov
mov
cs
icebp
ret
mov
cmp
ds
inc
adc
and
rorb
movsl
jl
pusha
dec
xchg
insl
lret
sub
sbb
adc
jmp
mov
adc
xchg
sub
push
lret
inc
arpl
pop
xor
iret
mov
jp
sbb
or
push
mov
push
jmp
xchg
push
leave
xor
lds
bound
stos
push
clc
and
int
mov
filds
pop
add
sbb
push
add
roll
fnstenv
push
cmpsl
mov
pop
das
lods
movl
push
add
lods
cmp
sub
push
cmp
adc
dec
xor
push
lret
fcomps
dec
xor
xor
or
pop
loop
rclb
out
sub
mov
dec
add
cmp
dec
into
add
mov
adc
shrl
add
imul
push
xor
mov
movsl
insl
jo
test
out
mov
pop
movsb
sub
push
lea
leave
loop
lret
fucom
jge
jp
cmc
cmp
sbb
enter
dec
mov
xchg
mov
std
xlat
andl
iret
cmp
in
iret
sub
or
stos
pop
cmp
in
pop
add
mov
fidivl
mov
cltd
xor
data16
push
lret
cmpsb
cli
int
cwtl
iret
insb
dec
rclb
shlb
fsubrs
xchg
pop
sub
call
and
mov
mov
add
arpl
push
daa
and
fbstp
mov
dec
rclb
leave
jp
leave
jp
stc
sbb
dec
data16
notl
cmp
mov
sbb
pop
cmp
clc
int
movl
cmpsl
dec
nop
into
sub
test
js
shll
mov
ret
adc
ffreep
int3
movsl
or
sub
fstp
cli
ja
stos
adc
or
add
jmp
pop
add
cmc
fstl
cli
js
push
add
pop
mov
in
in
std
cmpsl
add
stc
stos
mov
xchg
mov
popf
aaa
inc
adc
inc
pop
call
fldpi
movsb
pop
or
loop
push
xor
ja
push
rclb
outsb
scas
pop
mov
xor
dec
outsb
cmpsb
cmp
leave
ljmp
fwait
addb
out
ds
into
push
mov
xlat
or
scas
jecxz
inc
xor
fwait
mov
in
push
scas
fwait
sti
insb
sbb
xchg
push
jo
pop
or
xchg
pop
jo
test
cmp
leave
cmp
jl
inc
pop
ds
mov
xor
xor
mov
mov
jnp
out
iret
cmc
int
jle
outsl
aam
sub
movsb
out
in
in
add
mov
inc
xchg
lahf
xlat
pop
cmc
dec
sub
mov
xchg
xor
add
icebp
push
and
mov
mov
mov
dec
mov
and
xor
andl
rol
jmp
test
jb
sti
lods
les
outsl
in
xchg
in
data16
test
int3
gs
loope
pop
mov
stc
stc
inc
or
call
mov
ljmp
fwait
lds
rorl
cmp
sub
and
test
cmp
fwait
loopne
popf
add
mov
push
je
jo
je
inc
mov
les
jge
push
adc
iret
inc
ds
push
mov
imul
inc
cmp
movsb
les
dec
imul
cmp
and
push
jb
aad
jp
jecxz
addr16
adc
mov
sarl
scas
mov
mov
xchg
xor
lods
sbb
mov
mov
repnz
add
jnp
jge
jp
shl
mov
pop
loope
sarb
push
mov
fisubrl
push
xor
adc
mov
push
xchg
push
shr
or
addb
lahf
xor
cmpsl
cmc
fidivs
in
inc
or
mov
das
jp
and
lock
addr16
and
add
jnp
push
jns
push
mov
lds
cli
push
dec
and
ret
fimuls
out
or
test
sub
push
in
into
imulb
pop
xchg
dec
dec
in
stos
push
push
lret
insl
ss
inc
sbb
sbb
sub
dec
push
sbb
mov
test
jmp
scas
xchg
jmp
pop
mov
fstpl
push
mov
and
imul
mov
push
arpl
cmpsl
mov
jmp
sbb
mov
sbb
push
hlt
test
popf
lcall
leave
loop
cmc
push
add
pop
mov
pop
shrl
clc
or
xchg
aad
pop
sbb
cwtl
ds
sub
aam
mov
jb
push
imul
and
subb
jmp
loopne
xchg
bound
sub
jnp
enter
xor
jae
mov
jecxz
les
jle
push
jg
sbb
scas
cmpsl
mov
imulb
xchg
sub
fwait
or
ret
sbb
adc
xor
sub
sub
push
addr16
inc
scas
addr16
in
rclb
loope
aas
mov
aam
jb
cmp
hlt
sti
int
cmp
inc
les
or
sbb
pop
icebp
mov
jno
imul
aas
pop
repz
xchg
aas
fsubrp
pop
push
js
ret
push
dec
cs
and
cmp
stc
mov
ret
in
popa
dec
cmp
mov
mov
pop
popf
lcall
rcrb
lods
adc
imul
lahf
inc
pop
or
jb
mov
insl
jbe
gs
dec
cmp
and
cmp
sahf
cs
pop
hlt
aaa
lret
mov
push
fistps
pushf
sbb
aaa
scas
mov
pop
jo
outsb
fstl
lret
fnstcw
pop
push
scas
and
dec
mov
icebp
push
pop
lock
stos
icebp
pop
sbb
data16
xchg
out
std
dec
push
test
pop
xchg
sbb
and
and
and
push
cmp
sbb
inc
dec
ret
or
sbb
andl
or
dec
fstps
sbb
mov
push
sub
int3
dec
aas
jg
push
pop
sbb
pop
cmp
ret
out
push
jns
sbb
pop
clc
xor
or
pop
popa
insl
aaa
lcall
pushl
ret
mov
pop
loop
xchg
adc
xor
nop
mov
movsl
push
mov
imul
push
mov
pop
pop
push
aas
and
cmp
pop
xchg
pop
jns
jne
jns
cld
arpl
sarb
inc
xchg
push
in
leave
mov
pop
std
stos
lods
push
test
add
popf
ret
and
xor
mov
aad
xchg
in
loop
scas
and
mov
push
scas
mov
ret
or
push
mov
inc
xchg
sbb
aas
dec
mov
sub
add
filds
shrl
mov
adc
cs
arpl
push
adc
xchg
jl
inc
fldenv
not
int
fistpl
enter
leave
and
or
popf
sbb
out
lea
stc
data16
sbb
push
roll
cmpsb
or
sbb
ffreep
xchg
dec
adc
add
test
sbb
les
mov
das
repz
shll
in
push
in
aad
test
cmp
pop
or
fldcw
mov
inc
xchg
js
jmp
push
jbe
or
sub
gs
xchg
orl
pop
jle
dec
sub
or
mov
mov
loopne
add
cmpsb
adc
add
sbb
mov
pop
mov
pushf
addr16
inc
lahf
out
ds
cli
mov
mov
decb
pop
popa
bound
xor
das
in
pop
icebp
sub
inc
je
adc
out
lahf
dec
mov
mov
mov
cmp
mov
jmp
pop
add
popf
jl
or
jns
loope
add
inc
mov
leave
lahf
pop
jmp
pop
pop
xor
or
add
mov
xor
cmp
adc
inc
into
xchg
pop
sbb
add
mov
cltd
subl
xchg
scas
pop
mov
stos
adc
push
movsl
std
pop
and
or
xor
add
repnz
rcrl
in
bound
xchg
jne
push
mov
mov
jns
and
xor
and
iret
lods
dec
cmp
jp
mov
lods
sbb
xchg
lcall
in
jbe
xlat
and
cmp
sar
rorb
push
sbb
xchg
push
xchg
xchg
sbb
push
mov
out
xchg
or
fcmovbe
into
push
sub
dec
jp
push
jmp
das
ds
pop
test
pusha
in
mov
scas
push
xchg
push
lock
insl
cmp
imul
loopne
stos
bound
dec
movsl
jne
mov
sbb
das
loop
xchg
push
dec
cmp
mov
fldt
sub
inc
call
pop
repnz
divb
test
int3
push
xchg
popa
xchg
lea
stos
inc
mov
pusha
jecxz
popa
xor
xchg
jnp,pt
popf
addr16
inc
push
mov
push
insl
xchg
sub
dec
or
ret
pushf
mov
out
mov
pop
into
or
inc
adc
mov
xor
dec
xor
cmp
mov
loope
adc
mov
pop
fstps
cltd
fldenv
xor
mov
int
xor
mov
inc
pop
hlt
xchg
fiadds
outsl
pop
mov
jecxz
repnz
jmp
data16
ret
adc
mov
push
and
mov
out
gs
xchg
add
ljmp
pushf
arpl
enter
pop
mov
or
and
ljmp
mov
in
adc
out
sub
imul
jp
jl
adcl
push
sbb
mov
and
pop
add
imul
and
pusha
or
lods
xor
sahf
fnstcw
movsb
or
scas
pop
scas
cmpsl
clc
push
push
loop
xchg
or
mov
inc
cs
test
inc
bound
outsl
loopne
psadbw
or
and
adc
lcall
insl
pop
jp
xadd
sbb
xor
incl
into
in
leave
test
cmp
dec
and
xchg
inc
sahf
xchg
shlb
ds
mov
xchg
mov
dec
adc
imul
mov
jo
xlat
out
cld
add
mov
xor
fistpll
stos
jge
addl
sbb
leave
cmpsl
mov
sbb
lret
pop
cltd
popf
mov
stos
push
insl
movsb
ffreep
or
sub
mov
xor
adc
dec
xor
aas
testl
inc
fidivrs
xchg
inc
jnp
xchg
cmp
push
pop
dec
pop
int3
cmpsl
in
arpl
cmp
mov
mov
jbe
jmp
pop
repz
fld
mov
loop
pusha
lcall
or
in
pop
mov
fsts
in
test
mov
sbb
adc
in
or
shrb
imul
dec
lods
and
xor
imul
je
pop
fnsave
out
and
or
es
test
mov
rorl
cs
inc
repz
and
xlat
sub
in
sbb
cmc
xor
cmp
aad
xchg
test
push
repz
mov
cltd
jne
in
sub
cli
sub
mov
fiaddl
jb
fwait
cmp
cltd
sub
jmp
adc
ja
pusha
push
punpckhdq
pop
cmp
sbb
cld
andb
mov
or
mov
movsb
aam
and
mov
retw
insl
lods
psrlw
pop
mov
in
je
pop
xchg
stos
inc
bnd
mov
ret
mov
jbe
jg
repnz
jg
push
pop
jmp
gs
mov
lds
sub
push
add
adc
mov
loopne
push
jge
adc
insl
jnp
leave
pop
push
dec
cmp
push
cmp
dec
mov
lock
adc
ja
hlt
jg
call
shlb
xor
imul
lretw
cmp
daa
das
in
imull
and
data16
icebp
lods
fs
fidivrs
mov
adc
dec
mulb
push
mov
lcall
pop
cmp
jo
or
inc
std
add
push
push
add
out
pop
jl
das
ret
loopne
stos
add
repz
mov
lret
cmpsb
into
or
xchg
add
out
fs
mov
stc
daa
cwtl
insb
fistps
mov
fists
pop
faddl
loop
cmpsb
add
jg
jp
sar
cmc
sub
push
push
in
xchg
and
out
xchg
hlt
jno
or
int
mov
js
aas
jbe
dec
aas
call
aad
nop
jecxz
push
and
mov
imull
jmp
adc
in
hlt
es
lret
lea
xor
rclb
inc
out
add
lahf
into
imul
lds
or
xchg
scas
push
jnp
xor
lock
mov
imul
push
das
fucom
icebp
xor
fisubrl
dec
xchg
sar
out
dec
stos
nop
cmp
jg
pop
in
adc
push
ret
push
pop
sti
stos
jns
and
sbb
imul
jecxz
call
jnp
dec
push
pop
or
sti
lcall
dec
bound
lcall
gs
mov
inc
lea
sbb
sti
frstpm(287
jg
test
hlt
mov
out
das
push
mov
sub
jns
pop
jg
dec
test
pushf
fmuls
jg
and
jmp
movsb
int
outsl
pop
adc
outsl
inc
std
rcrb
cmp
add
cmp
xor
orb
subl
popf
and
xchg
fs
xchg
inc
bound
jb
es
sub
mov
jb
xchg
adc
sar
xor
imul
daa
pop
cmp
pop
mov
out
shrl
cmp
and
jo
and
jp
mov
mov
int3
mov
arpl
das
and
push
push
repnz
dec
mov
inc
pop
push
js
xchg
cmpsl
jae
cmpsl
add
ret
movsl
push
jp
insl
out
mov
nop
xlat
aam
mov
outsb
add
out
into
pop
mov
jae
mov
jnp
mov
mov
jb
xlat
push
mov
dec
or
mov
shrb
add
sub
xor
stc
add
mov
jge
pusha
insb
aaa
mov
pop
mov
mov
mov
xchg
outsb
sub
inc
hlt
ss
sub
addb
or
inc
cmc
out
adc
xchg
inc
loop
lahf
es
aas
mov
popf
test
test
lods
sub
xchg
jnp
xchg
cld
into
or
outsb
mov
popa
push
mov
stc
shll
loopne
cmp
je
sub
mov
or
push
mov
subl
lods
dec
xor
xor
outsb
iret
pop
and
adc
bound
ja
inc
pop
fstps
dec
pushf
or
mov
cmp
sub
dec
jbe
les
push
popa
cld
cld
gs
and
mov
mov
es
cmp
dec
inc
subb
lret
fists
test
arpl
adcl
add
jnp
cmpsb
dec
mov
pop
fisubrs
stos
sbb
xchg
imul
data16
mov
out
jg
mov
dec
xor
push
cwtl
out
inc
add
add
inc
inc
adcl
cmc
imul
popf
and
adc
cmp
mov
imul
mov
lods
outsb
out
and
lock
and
imul
sbb
incl
sti
sbb
mov
push
and
js
and
mov
xchg
loopne
jecxz
add
test
push
dec
jne
negl
xchg
aaa
cmp
clc
repnz
add
xor
or
mov
xor
xchg
movsb
sub
lret
shlb
daa
call
scas
fstpl
sub
loope
xchg
push
xlat
outsl
inc
and
in
add
and
shlb
jge
pop
jl
dec
fisubl
pop
xor
mov
xor
xchg
or
fdivr
pop
into
jp
push
dec
pop
mov
nop
mov
cmpsb
jno
sarb
cmp
les
sti
cmpsl
mov
dec
or
fcoml
and
loop
outsb
xor
and
rolb
mov
or
adc
lret
scas
lret
cmp
icebp
outsb
xor
and
fildll
push
sbb
push
imulb
sahf
mov
in
icebp
jae
aad
cmp
divl
lahf
xchg
shr
mov
out
jmp
pop
outsb
mov
jns
jge
mov
mov
movsl
scas
jae
sti
cmp
in
mov
addb
xlat
int3
scas
gs
jge
icebp
movsb
imul
lods
lods
xchg
mov
add
in
ret
stos
jae
aaa
and
enter
mov
xor
dec
jmp
dec
imul
test
pop
adc
or
lods
add
jne
dec
jns
cs
sub
pop
push
insl
pushf
out
call
mov
xchg
mov
test
mov
popf
insb
lret
xor
adc
movsb
mov
sub
pop
mov
inc
xor
push
ljmp
aam
lds
arpl
sbb
push
sti
popa
arpl
or
hlt
push
mov
xlat
push
dec
leave
or
pop
pop
clc
or
cld
sbb
jb
loopne
shrl
jnp
add
notb
fwait
inc
jae
and
add
inc
mov
xor
and
dec
mov
mov
push
sahf
jno
jecxz
inc
or
mov
or
das
mov
gs
cmpsb
nop
test
jl
addr16
leave
inc
or
and
or
sbb
pop
mov
cmp
stos
sbb
mov
addb
add
jmp
jmp
add
push
aam
pushl
mov
lea
jmp
incl
inc
adc
ja
pop
adc
incl
imul
inc
arpl
icebp
cmpsl
sbb
adc
lcall
mov
iret
cwtl
stos
xor
stc
xchg
pop
aam
fidivs
dec
fnstenv
fwait
mov
add
jecxz
leave
push
lock
add
in
mov
cmp
adc
cmp
push
das
xchg
lahf
mov
sarb
movsb
sub
cmp
dec
in
cli
imul
scas
fistpll
loop
push
mov
inc
mov
fstl
fcmovnbe
mov
sti
jb
sbb
mov
fisttpl
fbstp
test
xchg
insl
imul
std
push
cmp
sbb
dec
mov
clc
mov
imul
scas
ds
int3
cmp
xor
ss
mov
jae
xchg
shrb
mov
pop
gs
adc
lahf
std
jno
popa
popa
sub
shlb
ds
push
mov
jnp
gs
loopne
in
jecxz
lret
imul
movsl
adc
xor
pop
mov
cld
or
sub
movb
push
outsb
adc
sub
cltd
sbb
mov
xchg
pop
xor
int3
inc
mov
fs
mov
push
and
sub
inc
test
ds
lahf
into
dec
jmp
sub
ljmp
ds
test
scas
insl
int3
xchg
pop
pop
inc
sub
or
xchg
je
sbb
cwtl
pop
cli
jae
sarb
arpl
gs
fistpl
xor
add
add
lds
out
jmp
aaa
enter
push
push
pop
or
outsl
popa
inc
jo
icebp
and
push
mov
dec
pop
pusha
movsl
jmp
cmpsb
inc
xor
mov
icebp
jnp
sbb
xlat
sbbl
xchg
insl
and
jecxz
push
in
lea
lcall
xor
cld
xor
sub
mov
mov
aas
adc
mov
cmp
shlb
scas
dec
ss
mov
mov
lahf
int
out
bnd
insl
lcall
dec
and
movsl
rclb
mov
pop
lock
lods
ret
imul
mov
int
icebp
movsl
fidivs
mov
push
scas
xor
mov
rcrl
jns
jecxz
or
dec
jp
scas
test
mov
or
out
jnp
jp
cwtl
xlat
rcr
or
xor
adc
mov
in
mov
lds
scas
jne
sbb
jle
adc
in
mov
outsl
xchg
dec
jnp
xor
jno
bound
or
enter
xchg
and
imul
cmp
add
add
inc
mov
cs
dec
fadds
inc
ds
inc
das
arpl
adc
je
pop
jns
adc
insb
pop
pop
jmp
out
test
neg
pop
add
sub
dec
add
addb
mov
pop
cltd
cmp
das
cmc
test
lods
jge
fs
arpl
add
sub
xchg
mov
cmpsb
shl
pop
fwait
jl
and
mov
dec
or
movsl
xchg
push
jecxz
stc
add
push
push
imul
lods
push
push
adc
and
test
lock
mov
xchg
dec
stos
add
xchg
test
or
test
jmpw
cmp
pop
mov
pop
dec
icebp
setle
es
push
push
in
cmp
mov
pop
sahf
mov
imul
ljmp
out
jbe
shll
sbb
jl
mov
bnd
inc
pop
jle
cwtl
ja
sti
daa
mov
push
sbb
repz
or
inc
mov
add
push
sbb
ror
mov
xchg
xor
popl
shrl
pop
sbb
stos
popa
sbb
adc
add
imul
inc
jnp
xorl
mov
push
xchg
push
lahf
pop
mov
lods
lock
dec
fdivrs
or
in
enter
outsl
test
loop
faddl
jns
cmc
mov
stos
cwtl
xchg
xor
and
pop
push
aas
adc
pusha
mov
daa
cli
mov
mov
xor
outsl
das
mov
push
or
and
mov
push
out
push
sub
and
sub
cmp
mov
ret
mov
push
ret
insl
inc
cmp
js
loop
sbb
mov
test
test
inc
cmp
cltd
add
stos
ffreep
xchg
outsl
xchg
mov
movsb
and
jne
clc
scas
dec
rcll
mov
jne
imul
push
nop
ret
adc
or
pop
mov
testl
sbb
mov
test
pushf
js
mov
mov
sbb
xor
cmpsl
rcrb
sub
xor
dec
add
sbb
push
and
ret
sbb
mov
mov
popa
inc
jle
mov
xchg
xchg
test
insl
mov
mov
adc
push
xchg
push
pop
mov
xor
out
pusha
jne
mov
sub
push
push
push
data16
mov
test
mov
push
sub
ret
aas
shl
xor
add
and
mov
fnstcw
mov
jmp
push
addl
jnp
les
xchg
call
sbb
out
imul
jb
jno
xlat
popf
pop
movsl
add
in
aas
iret
jle
and
jb
out
pop
cmpsl
xlat
jne
dec
dec
int
js
inc
cmp
dec
lcall
call
fistps
icebp
int
xchg
daa
imul
hlt
xlat
cmp
lods
sarl
bound
push
rcrb
leave
mov
and
jge
outsb
int
push
dec
shll
jnp
cmp
jo
mov
fsts
jne
int3
xor
pop
sub
push
xor
out
xchg
data16
dec
mov
enter
mov
movsb
dec
pop
push
pop
fiadds
aaa
pop
jg
clc
int3
bound
jecxz
pushf
imul
lods
push
negb
sub
xchg
mov
pop
mov
sbb
inc
iret
repz
int3
arpl
and
insl
adc
mov
sahf
mov
mov
test
dec
movsb
insb
lahf
jnp
clc
pop
pop
addl
aas
mul
test
enter
das
aam
pop
mov
out
stc
xchg
add
or
push
jge
adc
std
cmpsb
fisttpl
daa
lods
push
xchg
int3
pop
fdiv
dec
int3
dec
cmpsb
jnp
sbb
mov
add
jg
sub
jo
incl
lods
xchg
pop
add
je
xor
mov
aad
cmp
jno
pop
mov
pop
scas
inc
leave
insl
sahf
and
or
adc
or
inc
pop
pop
fcmovu
out
or
push
inc
movsl
mov
flds
sbb
mov
push
in
jb
inc
data16
loopne
inc
call
rcll
dec
inc
inc
push
mov
mov
imul
lea
sub
jns
cli
aaa
lcall
dec
inc
xchg
push
loop
jb
and
pop
stos
aaa
sub
mov
ds
xorb
bound
xorl
mov
and
int3
insb
mov
lret
or
add
push
ret
push
adc
sbb
mov
into
lea
push
cmc
dec
incb
aad
xchg
enter
sbb
add
push
decl
or
mov
aaa
sbbl
mov
ja
dec
sub
inc
cmp
pop
mov
push
ficomps
fiaddl
xor
inc
leave
fcomps
cld
xor
mov
lock
daa
mov
ljmp
sub
xor
int
mov
aaa
add
pop
pop
pop
iret
push
int3
sbb
or
push
mov
ja
jb
loopne
lock
repnz
mov
xor
mov
add
and
aam
sub
outsl
pop
xchg
xlat
cwtl
aad
test
in
frstor
es
ret
ja
call
call
push
xchg
fcompl
jnp
hlt
adc
cmp
sbb
or
pop
add
mull
add
pusha
out
popf
or
in
call
mov
out
int
in
dec
filds
pop
pushf
jmp
insb
inc
int
ret
stc
sub
ret
fcmovnu
xchg
aad
or
pushf
xor
sub
push
in
test
jl
lods
sbb
add
pop
mov
dec
shrb
scas
adc
jp
in
dec
dec
inc
push
fsubrs
adc
jbe
push
lods
cmp
or
in
loopne
dec
cmp
push
lahf
jp
stos
pop
fsubrs
dec
rcrl
dec
dec
nop
mov
movsl
ret
das
pushf
int3
call
inc
popf
mov
adc
and
xchg
in
sub
cmp
mov
mov
push
pushf
pop
imul
sub
cmc
mov
jle
and
pop
cmp
shl
in
test
enter
loopne
repz
mov
xor
sbb
nop
dec
test
or
cltd
and
fdivs
xchg
xor
lcall
pop
push
jmp
in
mov
xor
ja
mov
loope
xor
in
mov
ss
ret
les
mov
sub
lods
push
int3
pop
lcall
pop
xor
push
roll
testl
orl
push
dec
xchg
xor
imul
dec
in
sub
fistl
and
sub
cli
xlat
arpl
sbb
adc
loop
jl
call
and
cli
lret
inc
repnz
sbb
fwait
xchg
sub
dec
stos
pop
xchg
in
pop
mov
sub
inc
aad
out
xor
pop
add
mov
mov
das
in
inc
push
shl
xlat
xchg
test
mov
popf
inc
pusha
stc
cmp
fimull
or
xchg
insb
hlt
and
push
leave
pop
mov
je
daa
cmpb
mov
mov
into
push
arpl
cmp
lahf
out
sub
movsl
jge
sbb
iret
cmc
clc
mov
lea
shll
insl
repnz
in
ds
mov
outsb
add
mov
pop
testl
push
push
icebp
es
inc
and
add
fbstp
lret
sbb
pop
es
jo
pop
mov
ds
das
inc
jmp
je
jmp
inc
add
shlb
in
aam
fisttpll
inc
shrb
lahf
imul
js
push
dec
cmpl
pop
bound
adc
mov
fdiv
sti
cmp
mov
xor
lahf
mov
stos
test
adc
shl
mov
and
cli
iret
pop
xor
add
or
sti
enter
mov
in
cmpsl
pop
cltd
aam
mov
and
and
loopne
push
pop
xchg
add
sub
xchg
dec
adc
out
imul
hlt
pop
ficoml
test
aad
xchg
lea
sub
sarb
test
mov
outsb
mov
cld
push
add
xchg
sub
arpl
pop
pop
int3
outsb
test
inc
cld
loope
insb
js
dec
and
je
add
xchg
dec
out
div
lods
test
mov
shlb
sbb
rorl
mov
pop
cmp
add
push
jg
xor
daa
sbb
mov
xchg
pop
xchg
jno
imul
lcall
out
movsb
mov
pop
lahf
lret
fwait
pop
cmp
xchg
or
or
aaa
pop
push
les
out
lahf
out
xchg
daa
mov
mov
add
dec
in
fldcw
mov
jno
aaa
adc
imul
das
rclb
add
inc
push
jg
and
sub
jno
adc
dec
pop
xor
push
orl
mov
mov
add
shlb
in
addr16
or
fcoms
aaa
inc
in
mov
jo
xor
fs
dec
pop
dec
test
cmp
aad
call
mov
jg
shrb
mov
xchg
mov
push
leave
mov
or
dec
mov
fnstsw
jmp
mov
mov
pop
js
and
jg
loope
pusha
mov
add
aam
pushf
pushf
sti
adc
ds
sbb
pop
inc
jo
cmp
dec
pop
into
lods
mov
pop
out
ror
test
lods
imul
xchg
dec
inc
and
imul
shl
add
mov
insl
lcall
cmp
mov
dec
sub
xor
xor
aaa
add
int3
dec
mov
adc
imul
negl
repnz
pop
mov
jg
mov
push
out
add
dec
sahf
cmpsl
test
test
pop
sub
and
ret
push
movsb
clc
cwtl
bound
scas
aas
sub
test
outsl
enter
in
negb
fs
bound
lret
icebp
and
jmp
lahf
shll
fwait
jne
je
addr16
in
daa
sahf
push
sub
imul
lock
or
mov
fcompl
add
fcmovne
add
pop
jge
cmp
fcmove
fstpt
add
aad
pusha
push
pop
mov
aam
pushf
adc
imul
aad
fidivrl
testl
sahf
xchg
pop
loope
mov
les
xlat
sub
ret
push
jmp
xlat
pop
pop
and
sbb
jns
scas
sbbl
lds
and
imul
inc
test
mov
inc
call
pop
jo
stos
and
data16
mov
andl
icebp
inc
roll
sub
and
add
movsl
adc
mov
call
out
aaa
stos
pushf
scas
xor
shlb
test
das
xor
jae
mov
or
or
mov
imul
xor
mov
jle
mov
sti
and
pxor
rcll
sub
adc
cwtl
push
in
fidivrs
sbb
push
adc
xchg
jge
push
ds
xor
stos
vshufps
xchg
mov
or
sbbl
pop
sbb
mov
dec
cmp
leave
pop
sub
jmp
jne
ret
push
imul
pop
mov
inc
xor
decl
push
mov
movb
fidivs
cmp
sub
xlat
outsb
jo
test
jp
push
stos
in
mov
bnd
mov
jle
jecxz
in
mov
or
fwait
mov
jecxz
xlat
das
pop
call
int
inc
push
je
mov
sub
sbb
in
xchg
jl
or
jnp
jne
lcall
xor
jb
mov
mov
adc
lret
repz
adc
inc
jnp
addb
jno
cli
fwait
jecxz
xor
fnstsw
decl
mov
aaa
mov
ret
fwait
icebp
cs
mov
push
push
mov
aam
mov
leave
rolb
test
shl
xchg
sub
xor
insl
sbb
pop
call
insb
das
or
push
xor
cwtl
mov
sbb
test
popa
push
outsb
sbb
test
daa
into
cs
in
or
pop
jl
repz
test
out
mov
push
mov
inc
add
dec
dec
inc
dec
addr16
ds
cmp
mov
add
sbbl
mov
jns
icebp
aaa
icebp
cmc
pop
xchg
jecxz
flds
rcrb
out
xchg
push
aaa
mov
jge
pop
sub
stos
sti
xchg
push
loopne
jl
ret
imul
pop
sub
mov
out
xor
and
lcall
pop
imul
cmp
jno
nop
loopne
mov
push
mov
cli
lret
aas
mov
inc
cmpb
mov
xchg
imul
pop
addb
dec
and
test
push
lret
lods
in
dec
and
mov
sub
add
xchg
pop
test
insb
mov
mov
push
and
lret
sub
fs
push
loop
aas
sub
dec
xor
sbb
inc
mov
push
shlb
fldl
js
pop
cli
fists
daa
daa
inc
mov
orl
test
mov
jg
add
es
lea
dec
testl
sahf
mov
push
cltd
outsl
sbb
cmp
cmp
rorl
aas
pop
outsb
cli
in
dec
xchg
jnp
mov
jb
daa
aam
sahf
sbb
or
adcb
jae
mov
int3
sti
add
add
mov
daa
cmp
and
xchg
lahf
add
push
aad
popa
out
pop
decb
push
add
stos
cwtl
mov
clc
pop
ljmp
jmp
stos
test
dec
cmpsb
inc
mov
mov
orb
or
xor
rcll
jg
pop
mov
lds
cli
repnz
push
cmp
pop
cld
gs
std
mov
scas
pop
sbb
xchg
das
xchg
jnp
sbb
sbb
repnz
pop
mov
mov
imul
leave
sbb
ret
mov
xchg
xchg
jo
sub
loopne
cmpsl
jle
xor
sbb
ja
cwtl
popf
cmp
adc
pop
pop
cmp
addl
xor
sub
mov
shll
cmp
arpl
mov
lods
xchg
sbb
sahf
push
fwait
sbb
fdivs
pushw
lods
push
lahf
and
add
hlt
jb
in
jo
add
jge
jl
shlb
cld
ret
or
dec
pushf
leave
push
sbb
or
mov
ds
bound
int
inc
sbb
jno
mov
add
push
jge
into
lock
pushf
loopne
negl
repnz
push
mov
iret
movsb
jbe
or
in
dec
mov
pop
addr16
rep
dec
sbb
lret
mov
aaa
in
stos
jmp
andl
and
rorl
cli
cwtl
or
fdivs
xchg
movsl
in
outsl
sub
adcb
inc
inc
xor
test
das
data16
inc
aad
das
fsubl
iret
inc
adc
ret
xor
out
clc
out
jl
insl
add
outsl
in
aad
frstor
iret
fmul
adc
xchg
loope
aaa
arpl
sbb
insb
inc
dec
xor
pop
dec
imul
mov
jns
lret
mov
xor
xchg
or
mov
in
inc
adc
and
mov
sti
xor
push
out
push
push
jecxz
jecxz
sbb
pop
aas
mov
arpl
push
sbb
cld
cmp
mov
or
push
sub
cwtl
dec
jle
and
fcoms
jne
push
inc
nop
mov
xor
mov
ss
jge
or
cmp
cmp
in
and
out
adc
push
enter
jae
push
cld
dec
inc
dec
mov
jecxz
adc
aas
ret
cltd
repnz
add
push
sbb
jle
mov
inc
loope
popa
adc
lcall
hlt
push
daa
mov
mov
rcr
mov
outsl
push
or
shll
outsl
roll
cmp
leave
mov
xor
pop
sub
push
ss
or
gs
xchg
mov
mov
popl
cmp
and
std
inc
sbb
jg
sti
sub
mov
inc
or
pushf
ret
adc
stos
inc
jnp
shlb
and
dec
adcl
push
mov
test
mov
jno
lcall
mov
cltd
popa
outsl
and
push
mov
cltd
add
arpl
xchg
mov
rol
jle
sub
add
adc
mov
cli
inc
pop
inc
xchg
pop
ret
mov
roll
in
xlat
add
add
add
lock
add
addr16
and
in
lea
cli
ret
out
enter
mov
stc
cwtl
push
and
jo
jecxz
jle
pop
scas
fisubl
mov
dec
jmp
or
mov
inc
lds
xor
sbb
adc
mov
sbb
jb
inc
pop
adc
xlat
nop
mov
adc
aas
aaa
arpl
in
xor
pop
sbb
arpl
lock
cltd
mov
jmp
mov
jns
mov
cmc
ljmp
or
movsl
push
adcl
cmp
scas
cs
ror
xchg
in
scas
sub
dec
lcall
mov
push
loop
daa
or
fadd
fadds
scas
pop
outsb
push
sahf
pop
inc
pop
cmp
imul
jae
arpl
inc
fsubr
mov
pop
push
sub
mov
mov
push
pop
push
sub
aas
mov
cld
xchg
subb
inc
push
fcoms
lock
loopne
out
rcrb
xchg
insl
push
or
lahf
inc
or
push
dec
or
cmp
imul
adc
push
ljmp
sbb
lret
rcll
cli
gs
or
adc
cli
fisubrl
fsubrl
mull
cmpsb
dec
xchg
outsl
add
jne
cmpsb
insb
shl
and
cmp
sti
jl
and
out
push
inc
xchg
out
xor
mov
rcrb
push
jne
sbb
loopne
ret
arpl
loope
add
inc
int3
pop
add
push
xor
inc
das
mov
jbe
shrb
addr16
test
cmp
outsb
sub
in
out
jge
dec
xchg
dec
out
lock
mov
jnp
dec
popa
int
pop
sub
cmc
ss
xchg
enter
add
loopne
popf
rolb
inc
jns
ret
roll
push
sub
movsl
push
mov
and
in
sub
pop
pushf
sub
xchg
lea
loope
fwait
pusha
lcall
mov
imul
sbb
sbb
or
and
mov
outsl
adc
pop
push
cmp
repz
push
sbb
xchg
pop
jmp
add
cmpsl
mov
jnp
loope
cwtl
push
testb
pushf
mov
outsl
aas
mov
test
repnz
sbb
test
daa
stc
loope
data16
cmp
loopnew
inc
mov
sahf
add
jmp
add
sub
jecxz
mov
test
fcoml
cld
fldl
call
inc
test
and
cmp
dec
cmc
xor
add
push
dec
add
repz
sti
je
imul
adc
push
cwtl
sbb
or
xor
jmp
fbstp
add
ret
mov
out
push
insl
add
xor
gs
sub
dec
jecxz
test
mov
adc
in
or
sub
imull
adcb
add
inc
arpl
mov
call
xor
imul
test
fisubrl
lods
out
in
call
and
in
sbb
sahf
test
enter
pop
cmp
aaa
push
pop
ja
daa
cmpsb
xchg
cmp
xor
xchg
jmp
jecxz
push
notl
sub
test
xor
movsb
push
loopw
arpl
ror
loop
notl
mov
nop
mov
in
dec
cmp
mull
mov
add
jne
add
pop
or
or
push
imul
sub
or
inc
pushf
dec
xor
jmp
add
sub
aas
imul
enter
lods
xchg
inc
jecxz
jns
sbb
mov
xor
adc
out
in
xchg
insl
xchg
pop
lea
ret
and
iret
leave
jecxz
mov
imulb
inc
adc
cmp
cmc
add
inc
xor
adcl
fidivrl
add
arpl
inc
sbb
xchg
call
dec
gs
push
in
idivb
sbb
mov
xchg
jle
stc
inc
mov
dec
jge
sbb
push
movsl
call
inc
mov
or
add
addl
int3
pushf
and
lods
mov
xor
fwait
pop
push
imul
and
pop
xor
or
testb
pop
mov
mov
add
add
mov
icebp
scas
xchg
leave
and
cmc
sub
fs
std
jne
cmpsl
arpl
mov
jp
adc
enter
or
jmp
sub
hlt
mov
and
inc
daa
mov
add
out
or
stos
pop
lret
push
add
orb
sbbb
stos
xchg
ljmp
je
lods
mov
out
sub
push
mov
cmp
cmp
in
jnp
ror
popa
mov
rcll
sbb
cli
cmp
mov
jno
adc
sbb
movsb
scas
ret
je
orl
push
lds
pop
lods
push
sar
or
xchg
mov
mov
outsl
loopne
cmp
cmp
call
fildll
sahf
push
pop
jg
test
mov
mov
scas
jl
loopne
mov
out
andb
shll
into
push
mov
pop
sbb
jmp
mov
in
cwtl
outsl
aad
in
js
mov
pop
insl
daa
jecxz
cmovns
mov
shr
sub
and
xor
jbe
addl
insb
bound
push
mov
sbb
bound
mov
mov
cltd
int3
outsl
add
xor
insl
sbb
pop
dec
jns
sti
jge
cmc
repz
pop
push
out
mov
sbb
mov
flds
cld
add
sbb
movsl
xchg
insl
in
pop
jo
arpl
dec
xcrypt-ofb
cmpsl
imul
cli
out
lock
out
ss
dec
ud0
ret
mov
fmul
lea
out
in
mov
lea
mov
sti
xchg
fisubl
jg
shll
aaa
imul
add
aad
in
sub
cmpsb
push
push
push
jb
fwait
xor
scas
scas
add
push
push
lahf
lds
imul
out
aaa
cmp
mov
mov
cmpb
or
dec
jge
add
pop
fidivl
inc
sub
enter
cmp
outsl
imul
cmp
test
les
bnd
add
fs
fs
sub
dec
push
xchg
xchg
and
icebp
inc
mov
das
add
and
lock
jp
je
inc
jo
iret
into
jae
sbb
mov
fisubl
ss
outsb
ja
jns
inc
mov
or
and
dec
arpl
daa
nop
repz
dec
pop
addl
inc
stos
ljmp
add
push
mov
inc
adcl
xchg
call
cmpsb
sahf
mov
mov
xor
scas
cltd
xor
mov
pushf
pop
mov
aad
sbb
subl
lock
jne
lcall
out
arpl
mov
nop
mov
fsts
sub
clc
pushf
das
mov
jnp
dec
daa
pop
rclb
push
xchg
hlt
aam
sahf
cld
ret
fwait
stos
mov
jnp
lret
mov
dec
aam
mov
push
cmp
std
push
pop
push
mov
jl
and
or
jae
ljmp
pop
out
outsl
out
and
jns
dec
sbb
xor
pop
shl
sbb
jne
lea
mov
jns
adc
out
cmp
pop
add
mov
cmp
std
adc
pop
scas
pop
loop
fs
xchg
lcall
rclb
sbb
scas
adc
xchg
xlat
xor
aas
push
das
sub
scas
dec
pop
adc
mov
out
jbe
mov
sub
jmp
xchg
loope
je
adc
cli
ret
icebp
xchg
test
sub
sub
pop
mov
aam
push
rcll
mov
push
dec
cwtl
fdivrp
xchg
test
fxch
scas
aad
inc
scas
sub
fdivs
xor
mov
test
and
add
dec
cmp
pop
inc
sub
or
mov
inc
das
je
push
test
push
and
cwtl
mov
mov
pop
cmpsb
mov
mov
fcompl
fcomps
bts
push
loopne
xchg
adc
pusha
sarl
sub
inc
cli
jb
fiadds
cmp
mov
fdivrp
adcl
mov
mov
mov
ss
add
popa
sbb
dec
pop
pop
popa
loope
mov
mov
xor
aad
mov
xor
xchg
jns
xchg
cltd
fcmovbe
subl
mov
cmp
or
jnp
bound
hlt
or
shll
mov
in
in
mov
cmpsl
inc
push
iret
dec
cmp
push
push
pop
inc
push
in
jmp
add
sub
hlt
rorb
push
cmpsb
lret
pop
insb
dec
addr16
fadd
bound
leave
cmp
test
pop
inc
divb
xchg
add
xchg
cmp
repnz
inc
repnz
mov
cld
jns
mov
sahf
add
cmpsl
mov
xor
mov
iret
test
add
add
popf
cltd
mov
enter
add
inc
mov
repnz
xor
loope
es
inc
les
adc
cmpsl
jmp
imul
movsl
and
push
inc
leave
insl
sub
loope
shll
jg
dec
jb
and
mov
popf
mov
or
push
cwtl
mov
cmpsb
cmp
push
pushl
ret
mov
add
mov
inc
mov
push
popf
cmpsb
scas
add
cmpsl
or
and
sbb
out
out
mov
sbb
sub
add
pop
inc
hlt
nop
arpl
shlb
pop
ret
sub
mov
dec
and
out
mov
xchg
jl
pusha
inc
int3
dec
popf
sbb
jns
in
fisubrs
add
jo
inc
jnp
xchg
mov
aaa
pop
adc
in
pop
js
push
ret
cmpb
adc
repz
push
jl
into
adc
cmp
sahf
into
jbe
xor
imul
rolb
outsl
and
cmc
xchg
mov
out
or
push
pop
outsb
and
sbb
jb
and
popl
ljmp
iret
ja
lock
hlt
pusha
adc
pop
or
aam
inc
das
rcrl
mov
pop
adc
ljmp
mov
pop
les
xchg
pushf
push
cmp
dec
mov
adcb
xchg
cmp
pop
inc
imul
add
sub
mov
jnp
and
lods
sbb
icebp
bound
orl
xchg
pushf
jno
inc
aad
insb
test
movsb
divl
sar
lods
or
loop
aad
xlat
xchg
pushf
call
cs
push
xchg
jl
ret
jp
fisttpl
xchg
imul
pusha
sahf
lret
inc
xor
xchg
enter
dec
cmp
cmc
inc
xchg
mov
jnp
sarl
ljmp
push
inc
fcmovbe
cli
in
sbb
cld
sti
lcall
fimull
lret
dec
mov
lods
nop
jo
cmp
jb
mov
xchg
jae
cmp
mov
lods
pop
pop
jmp
jg
mov
xchg
lahf
rcrb
cmpsb
sub
sub
xchg
xor
cmpsb
dec
lods
lods
mov
aas
mov
add
flds
jo
je
inc
es
dec
and
mov
scas
adc
fisttps
fdivrl
pushf
sub
add
popf
fmull
das
xchg
push
test
adc
data16
jmp
jno
js
sub
bnd
dec
data16
ficompl
std
add
mov
lods
divl
daa
sub
cs
sbb
jns
add
mov
les
mov
daa
shl
out
pop
mov
loope
cmp
jecxz
dec
mov
loopne
ds
mov
shr
sub
dec
xor
mov
cs
dec
dec
push
xor
leave
xor
cmc
and
jg
cld
das
sbb
adc
loope
lock
xchg
int3
rclb
pop
push
jge
adc
stc
and
mov
inc
out
arpl
shrb
flds
repz
popf
dec
stos
adc
pop
in
and
clc
ljmp
pop
ss
add
fsubrp
cwtl
sbb
lcall
sub
mov
sti
psubusw
cli
cld
ja
imul
mov
mov
jns
fists
push
inc
sbb
addr16
mov
ss
lret
in
and
aad
jb
push
jb
inc
sub
adc
sub
iret
adc
mov
mov
mov
insb
mov
dec
leave
xchg
bnd
push
mov
repz
addr16
xlat
and
dec
push
mov
sti
pushf
cmp
insl
lea
ror
stos
nop
push
in
cmp
test
pop
push
or
mov
adc
imul
fwait
inc
pop
fisubl
ret
mov
hlt
ret
mov
lea
imul
lea
xor
enter
rcl
push
dec
ret
cs
stos
sbb
or
inc
popa
jo
flds
out
movsb
mov
sbb
pop
xchg
sahf
sbb
pop
lds
fdivs
mov
jmp
push
imul
je
imul
shll
mov
xchg
leave
xchg
filds
cld
in
insb
lock
loop
mov
jmp
sbb
loope
cmc
sub
std
cltd
fildll
stos
cmp
pusha
daa
aas
sub
pop
push
push
and
int
mov
cmp
aam
in
lods
dec
js
cltd
mov
push
lcall
jle
std
mov
fbstp
out
mov
add
inc
cli
divb
testl
ret
mov
or
xor
cmpsl
aam
and
jnp
test
popa
repnz
inc
xchg
outsb
pop
cltd
xorl
push
cmpsb
mov
cli
jecxz
sbb
sub
aas
pop
jne
icebp
pop
sahf
push
mov
ds
lret
fwait
insl
jmp
add
xor
adc
mov
lcall
mov
paddsb
and
cmpsl
add
lds
sahf
dec
mov
clc
sub
out
mov
mov
in
xchg
cmc
arpl
adc
lds
sbb
adc
lret
jge
adc
cmp
nop
cmpsl
push
pop
and
outsl
mov
mov
xlat
dec
inc
addb
sub
push
movsl
mov
test
mov
loopne
dec
imul
adc
les
notb
mov
enter
pop
test
in
cmp
xchg
jg
adc
cltd
dec
sub
in
jbe
push
mov
jmp
out
inc
dec
dec
rorl
scas
push
fimuls
cld
test
cltd
imul
dec
inc
jmp
mov
aas
aam
cltd
loope
clc
add
and
jecxz
divl
cmp
aas
xchg
enter
lahf
mov
push
cmp
ds
xor
pop
stos
inc
xchg
clc
xchg
pushf
xor
cli
sbb
push
aam
jb
outsb
aam
mov
arpl
cmpsb
clc
ud1
xchg
sbb
cltd
arpl
cmp
push
in
lret
dec
push
test
push
push
cmp
adc
cmp
mov
stos
push
flds
adc
pop
xchg
dec
es
jl
sub
cmpsb
pop
inc
call
or
and
push
cmpsb
cmpsb
in
jge
xor
int3
outsl
sub
jg
mov
xlat
out
sbb
inc
clc
sub
mov
adc
jnp
push
ja
testb
shrb
pusha
lret
jmp
xor
imul
in
js
cmp
icebp
cmpsl
scas
ret
fildll
int3
pop
fidivl
into
xchg
lock
sub
cmp
out
push
call
pop
inc
out
repnz
cmp
lahf
fmull
mov
cs
mov
loop
mov
mov
frstor
aad
repz
enter
imul
cmc
call
mov
mov
push
sbb
sbb
stc
add
cmp
mov
sub
push
sbb
dec
daa
das
mov
xchg
out
cli
fwait
rolb
adc
sbb
fwait
sub
xchg
and
xlat
mov
or
lock
test
cld
fbstp
in
push
mov
jmp
imul
in
insb
push
ret
and
sbb
pop
fdivs
movsl
mov
ret
fwait
shrb
inc
fstpl
lods
cmp
popa
ja
mov
or
xlat
mov
add
adc
in
jne
in
movsb
mov
push
daa
mov
into
and
jae
enter
fimuls
push
filds
dec
xor
lcall
ds
insb
lock
xor
shlb
aad
mov
int
movsl
lods
jb
push
adc
push
cmp
xchg
fmulp
pop
cwtl
and
insb
add
jnp
and
incb
sbb
xchg
push
out
pushf
mov
sti
fists
adc
outsl
aas
jbe
subl
push
sbb
add
adc
mov
test
pop
int3
div
js
xor
dec
sbb
pop
stc
dec
mov
mov
mov
mov
mov
add
push
inc
enter
popf
jbe
sbb
jmp
or
out
jb
ret
add
test
inc
daa
daa
movsb
out
xchg
sub
int3
and
insb
inc
mov
outsl
adcb
pop
out
stos
jnp
adc
enter
xchg
cmp
mov
out
outsb
jmp
jb,pn
add
mov
into
fcmovne
inc
push
jp
push
cmpsl
aam
and
inc
fs
testb
icebp
push
adc
ds
mov
into
rcrb
fsubr
push
cmp
mov
mov
aad
add
cmp
add
pop
ds
or
sub
xchg
ss
lret
nop
popf
mov
data16
xor
fcmovnu
test
fstl
sti
dec
roll
mov
imul
sahf
sub
pop
lds
fcoms
sbb
subb
mov
jecxz
loopne
cltd
and
xor
jmp
dec
pushf
mov
mov
mov
lods
jge
sarb
out
arpl
pusha
push
jno
push
dec
adc
jb
dec
jbe
pop
mov
mov
rcrl
jne
je
imul
sbb
push
loopne
cmc
sub
mov
xor
sbb
xor
popf
ror
mov
push
xor
push
sbb
sarb
xchg
insb
pushl
in
inc
sbb
jb
call
shll
push
xchg
lret
fnsave
adc
mov
jle,pn
add
ljmp
xor
mov
shlb
idivl
cld
aaa
ficompl
fiaddl
hlt
insl
pusha
iret
daa
add
inc
push
pushf
fwait
add
inc
stos
xchg
imul
jae
inc
jmp
or
xor
gs
into
movsl
push
mov
data16
or
repz
lds
leave
mov
xchg
mov
test
arpl
mov
cltd
adc
rclb
out
lea
fdivrl
cmp
nop
sbb
dec
rclb
add
orb
test
mov
shl
xchg
mov
mov
ja
adc
push
enter
mov
mov
xchg
lahf
or
pop
adcb
fwait
repz
pop
xchg
ja
ljmp
mov
mov
hlt
loopne
sub
add
adc
aas
rolb
dec
pop
out
movsb
dec
test
nop
lds
popl
pop
xor
xor
sbb
xor
lods
pushf
pop
jo
and
in
notl
loop
adc
or
popa
fwait
popf
inc
loopne
fadds
dec
rorb
mov
pop
cwtl
test
fldcw
mov
lahf
xchg
incl
mov
dec
subl
fsub
lds
insl
nop
jp
pushf
pop
add
sub
adc
ret
in
scas
jns
mov
sub
mov
or
sbb
sti
xor
jnp
pop
aad
add
xor
xlat
repz
andb
jne
push
add
sub
imul
loope
inc
pop
or
xor
mov
add
sti
leave
push
mov
int
sub
loope
cmp
push
pop
mov
aas
iret
cmc
xor
jnp
ljmp
pop
or
mov
loope
sbb
cltd
pop
jo
xor
aaa
xor
aam
cmpsl
pop
repnz
shlb
push
or
sub
jno
out
mov
cmc
shrb
and
sbb
mov
sub
cltd
sub
lret
dec
test
ljmp
xlat
cmp
cmpl
outsb
xchg
mov
in
ds
int
test
addl
sub
mov
mov
or
mov
in
mov
scas
xlat
out
mov
movsl
sub
dec
add
ss
inc
outsl
sti
addb
push
mov
cltd
imul
sub
and
repnz
fsubrs
sub
mov
leave
push
xor
pop
lock
shll
scas
ja
mov
rcrb
ret
xchg
adc
mov
sar
jg
divl
rcl
scas
jo
pusha
sti
lea
pop
ja
mov
xor
cmp
mov
or
das
stos
mov
or
push
fidivs
jmp
push
or
fdivrs
lea
inc
push
or
mov
or
sahf
adcl
push
xchg
arpl
adc
push
bound
add
push
loope
out
sarl
adc
imul
inc
pop
sub
icebp
sub
dec
rolb
sbb
loope
nop
subps
mov
cmpsl
push
mov
push
pop
xor
xor
xor
mov
pushf
jae
fidivl
and
ljmp
testl
xchg
dec
mov
and
scas
add
jns
daa
mov
enter
mov
fsubs
mov
push
sub
int3
sub
pushf
sahf
and
shlb
fcom
arpl
sbb
outsl
insb
mov
call
jns
xchg
xor
mov
out
cmp
pop
popf
push
sbb
mov
jg
push
cmp
mov
add
adc
xchg
inc
hlt
insl
test
push
jns
dec
push
shl
jp
jae
pushl
sti
rclb
dec
cmpsl
inc
fstpl
pusha
dec
inc
xchg
out
mov
loopne
inc
les
testb
out
lds
ds
std
lods
ja
push
xchg
imul
xlat
sbb
mov
stc
push
jae
mov
pop
jecxz
fidivrl
nop
mov
imull
je
sbbb
mov
in
xchg
fnsave
pop
test
xor
fildll
push
pop
mov
iret
and
inc
sbb
inc
pop
cmpsl
cmp
ret
push
fsubr
mov
push
cmpsb
add
jecxz
pop
gs
scas
adc
mov
dec
or
xchg
sahf
sbb
or
popf
mov
pop
mov
lock
pushf
dec
xchg
dec
sub
jl
pop
imul
cmp
cltd
int3
xchg
mov
inc
xor
bound
sahf
clc
and
and
jl
push
leave
mov
xor
shr
int3
sahf
jns
mov
lods
cwtl
xchg
or
cmc
cmp
fldcw
pop
cmp
dec
repnz
sbb
dec
pusha
xchg
mov
mov
push
cmp
repz
scas
lret
adc
popa
push
test
or
pop
dec
movb
mov
mov
lock
shlb
mov
orb
insl
push
xchg
sub
dec
mov
ljmp
movsl
mov
stos
xchg
fcmovnb
clc
mov
ret
or
int
add
in
xchg
add
jl
pop
mov
and
push
outsl
test
lret
dec
lods
fbstp
add
insl
lret
pop
dec
aad
leave
data16
inc
out
mov
loopne
inc
clc
aas
cmpsl
jmp
sbb
repz
mov
stc
inc
fnstenv
xchg
dec
cmp
xchg
jnp
cmp
sub
push
repnz
fwait
xchg
cwtl
aaa
jl
dec
fwait
mov
mov
sbb
dec
lret
insl
pop
aaa
lods
sub
idivl
imul
and
ljmp
xchg
insb
insb
idivl
in
and
mov
test
stos
mov
lret
jg
in
outsl
iret
lods
aaa
pop
push
pusha
notb
bound
and
imul
jnp
ret
cmpsb
int3
sbb
roll
sub
push
mov
lea
xlat
adc
dec
leave
test
cli
add
and
stc
outsb
aaa
cmp
xchg
or
sub
sbb
sub
adc
sahf
cld
mov
jne
and
cmp
ret
sub
daa
mov
or
je
lea
lods
or
aam
mov
stc
adc
push
cmpsb
pop
popl
mov
push
xor
pcmpeqd
mov
outsb
adc
dec
dec
in
sub
arpl
inc
pop
push
push
and
ja
cmp
mov
cltd
rcrl
mov
ret
mov
pop
jp
cmp
push
iret
adc
push
cmp
dec
outsl
and
dec
stos
cmpsl
aad
inc
test
cmp
xorl
cmpsl
popa
xor
test
lods
lret
and
xor
xchg
stos
sub
or
xor
xlat
mov
jbe
cld
xchg
and
sbb
in
jb
dec
pop
xor
xchg
mov
add
and
add
mov
int
or
leave
cmp
dec
push
xor
call
xchg
iret
sbb
aaa
test
in
cmpsl
sub
mov
adc
insb
insl
xchg
add
xchg
arpl
lock
xor
sarb
cmp
sbb
cmpl
push
fmul
neg
fs
pop
lahf
xchg
cmpsb
pop
mov
pop
jo
push
inc
adc
jnp
dec
add
adc
imul
xchg
pop
jle
mov
iret
mov
xchg
adc
hlt
ja
adc
imul
pop
pop
js
xchg
stos
mov
xorl
repz
or
jle
xorb
rcrb
xchg
xor
push
push
jle
mov
stos
in
gs
push
dec
pusha
movsb
shrb
mov
and
ret
sub
inc
loope
jl
add
dec
icebp
pop
addr16
xor
jl
mov
mov
cld
add
pop
enter
pop
and
in
and
xchg
and
xchg
mov
jecxz
daa
ljmp
adcl
sbb
jno
cmp
jge
ss
enter
cmpb
or
cmp
jnp
sbb
lcall
cmp
sub
mov
mov
insl
shlb
lahf
mov
into
sahf
dec
mov
movsb
cltd
sarl
lret
cs
lret
and
test
mov
das
das
subb
sbb
fs
adc
sub
or
or
imul
es
pop
rcl
in
stos
shll
aaa
scas
ret
push
cmp
dec
inc
inc
gs
pop
in
out
data16
daa
sub
ret
lods
jmp
xlat
lahf
incl
shl
jl
or
sub
movl
push
adc
sahf
cmp
or
ret
xchg
jne
clc
jbe
adc
fwait
ds
xchg
xchg
and
jg
mov
popa
cwtl
pop
push
imul
data16
jg
cwtl
ljmp
test
pusha
rorb
mov
insl
lods
push
dec
xor
call
pop
mov
add
or
in
scas
add
jl
mov
mov
jae
xchg
fnsave
dec
cmp
gs
int
arpl
mov
loopne
dec
push
pusha
hlt
sub
sub
int
pusha
sbb
push
out
iret
cmp
aaa
je
or
cmp
push
cwtl
icebp
in
data16
out
mov
leave
loop
sbb
push
lcall
out
jbe
mov
mov
jmp
popf
movsb
fcmovnb
jle
mov
xor
sbb
addb
adc
mov
outsb
pop
adc
lock
xor
ja
adc
jb
aam
jmp
fcomip
pop
push
outsl
lods
lea
loope
dec
inc
adc
cmp
adc
ds
movsb
xchg
push
dec
cmp
cs
lret
jl
mov
data16
adc
xchg
fistl
dec
shll
lahf
in
add
les
cmpb
inc
mov
sub
imul
mov
xchg
imul
out
int
sub
jmp
xor
add
push
test
mov
xor
lods
loope
or
mov
ret
dec
xor
xchg
and
add
push
mov
mov
xchg
push
xchg
adc
push
and
dec
jl
popf
shll
mov
test
xchg
pop
mov
xchg
data16
sbb
and
popf
mov
cmp
push
in
aam
xor
xor
jp
incl
pushf
sub
aad
xor
sbb
mov
push
push
inc
push
xor
fadd
push
push
test
lods
addr16
push
loop
call
pushf
orl
les
jle
fsubrl
ret
popf
lcall
enter
cmp
addr16
cmc
push
jo
in
gs
ret
test
push
mov
adc
sub
clc
jp
adc
cmp
mov
pop
and
adc
xchg
xor
in
in
fldlg2
in
sbb
mov
dec
in
inc
xchg
mov
ret
push
fcmovbe
xchg
push
rcr
xchg
adc
xchg
lea
adc
rol
lcall
loope
fdivrs
mov
jnp
js
push
jp
ss
in
inc
dec
gs
xchg
cs
cmp
or
and
mov
sbbl
negl
addr16
and
or
dec
js
sbb
dec
lods
mov
addl
shll
movsb
xor
andl
and
push
lock
pop
lds
cmpsb
mov
mov
lcall
adc
aaa
mov
xchg
dec
orl
fnstsw
xor
dec
push
or
call
ss
dec
ja
mov
push
push
inc
sub
xor
movsb
pop
xor
push
push
xchg
jmp
aas
dec
dec
test
mov
pop
or
adc
popa
jnp
sub
and
in
nop
and
mov
mov
fmuls
scas
sbbl
xor
mov
adc
or
in
incl
ja
mov
mov
mov
jl
or
jecxz
test
sahf
orb
rol
pop
sub
shl
scas
mov
mov
imul
xchg
and
add
inc
push
or
cmp
sub
sub
cltd
pushf
jmp
jno
lahf
loopne
mov
rcrb
push
cli
inc
lret
movsl
loop
and
int3
loop
inc
inc
rorb
jmp
inc
sub
int3
sti
repnz
das
shrl
movsb
sbb
or
dec
pop
lods
cmp
in
mov
cmc
test
fsubl
sahf
mov
popf
lcall
sbb
jl
push
cmp
mov
pslld
sbb
jbe
xchg
xchg
push
sahf
mov
fwait
sti
cmpsl
push
rcll
fsts
push
cmp
adc
sub
or
jb
mov
out
jp
jns
insb
ret
arpl
sbbb
js
cmpsb
fcmovnbe
cmp
adc
popa
shll
bound
inc
dec
cmp
adc
iret
mov
and
mov
xchg
pop
xor
xor
or
inc
shlb
jns
and
push
cmp
xor
pop
dec
mov
jmp
out
div
lds
sbb
int3
nop
ds
jne
stos
add
inc
sbb
call
adc
js
orl
xor
jbe
into
jmp
pop
out
cmpsl
add
lods
cwtl
hlt
xor
xchg
iret
mov
jnp
dec
repz
mov
ret
xchg
jl
cmp
pop
cmpsb
cmp
into
mov
mov
out
xlat
or
cmp
fdivrl
push
jge
stc
lods
pop
in
das
inc
imul
dec
cs
rorb
ljmp
push
int
adcb
jl
cmc
sahf
lcall
stc
mov
xchg
aas
jp
xor
mov
idiv
pop
fiadds
xchg
push
push
and
jne
iret
stos
rcrl
movsl
mov
xor
inc
ret
add
scas
xor
mov
sti
dec
lea
daa
push
aas
adc
fdiv
push
cli
jmp
and
jle
sub
enter
push
push
icebp
xchg
fsub
mov
or
mov
adc
mov
call
mov
and
jmp
cmc
mov
mov
pop
out
les
lds
and
cwtl
xchg
nop
mov
xchg
jo
fwait
lds
mov
dec
mov
mov
jbe
inc
out
sbb
mov
out
outsl
mov
jae
inc
test
out
sbb
jbe
test
cmp
or
add
xlat
add
enter
faddl
and
ficompl
dec
aas
push
repnz
xchg
sbb
xchg
xor
mov
jp
mov
shlb
sahf
push
sub
ljmp
mov
enter
int3
incb
mov
sbb
rcl
scas
inc
cmpsl
dec
jns
and
into
daa
push
mov
inc
dec
push
and
or
sahf
cmp
sbb
inc
sahf
ret
int
cltd
xchg
int
jmp
es
pop
arpl
push
arpl
inc
fcmovb
aas
cs
xor
xchg
mov
lea
imul
fmull
mov
mov
cmp
dec
sub
and
leave
jle
insb
bound
imul
shll
inc
mov
sub
enter
lcall
xchg
jmp
add
xlat
sti
repnz
dec
xor
mov
pop
xlat
ret
cs
sbb
jl
lret
xor
bndstx
cmpsl
movsb
lahf
push
ss
nop
and
cmp
imul
xchg
fstl
push
sub
and
inc
mov
add
cmp
cmp
arpl
lret
mov
mov
in
cwtl
std
sbb
pop
cmp
in
mov
aad
xchg
sub
add
xor
xor
push
fs
mov
mov
lea
les
movsl
mov
fcomps
inc
call
sti
inc
enter
mov
rcrl
mov
inc
arpl
call
adc
fbstp
mov
xchg
fidivl
mov
aaa
aad
mov
addb
pop
push
cli
lret
mov
pop
stos
mov
sub
sar
out
add
jno
push
sahf
sbbl
sub
ljmp
aas
inc
jmp
js
clc
dec
es
mov
insl
cs
cwtl
jo
inc
adc
jmp
cmp
movsl
pop
push
pop
dec
adc
in
push
add
pushf
mov
mov
nop
imul
jecxz
ret
rolb
xor
cmp
out
add
ds
inc
je
cmp
orb
stos
push
cmp
int3
jbe
popa
adc
mov
arpl
les
xorb
mov
iret
add
cmp
jge
adc
daa
adc
push
test
mov
and
add
push
loop
enter
push
mov
rcrl
int3
jmp
sub
push
in
dec
xchg
jmp
sbb
rorb
sbb
in
xlat
fcmovb
jne
pop
in
movsb
xchg
repnz
inc
popf
fwait
stos
loopne
xchg
in
and
mov
aad
bound
popf
test
scas
xor
cld
or
out
jge
cmp
paddw
cmc
mov
imulb
inc
popf
cmpsl
movsb
loope
fistl
ds
sub
push
add
pop
filds
std
sub
fwait
mov
mov
cmp
stc
frstor
mov
mov
sub
inc
icebp
mov
mov
push
aaa
sub
mov
pop
mov
in
cli
and
push
jl
insb
iret
ja
jns
imul
xchg
inc
arpl
adc
push
dec
outsb
addr16
rcr
lret
outsb
mov
pop
adc
mov
push
stos
xchg
cmp
rcr
push
sahf
add
mov
pop
inc
stos
roll
xchg
dec
push
lret
adc
sbb
inc
fldcw
int
push
shlb
popf
pop
pop
xchg
or
mov
push
out
cmp
loope
outsb
pop
sub
or
ficompl
in
fmuls
cltd
jo
xor
lods
push
xchg
jmp
xchg
sub
sti
imul
aad
push
cld
jp
dec
and
sub
mov
pop
inc
es
js
fdivrl
fdivrl
rcr
mov
loopne
ja
inc
and
push
xlat
loop
lret
mov
jne
int
push
out
shrb
arpl
push
dec
jnp
cwtl
sbb
jnp
pop
stc
or
mov
push
fwait
insl
mov
arpl
insb
stos
mov
xlat
mov
mov
mov
repz
mov
adc
pop
not
rcr
lds
cmp
orl
fimuls
jle
mov
push
loopw
xchg
in
lods
lods
pusha
mov
andl
outsb
insb
fcomps
icebp
adc
adc
imul
cmpsb
aam
lcall
and
mov
cs
mov
push
out
cwtl
dec
xchg
mov
pop
jae
sti
xchg
hlt
cwtl
nop
mov
lock
cmpsl
jecxz
ds
fiaddl
adcl
cmp
call
xchg
xchg
push
dec
dec
sbb
cmpsb
out
add
xor
outsl
arpl
or
and
sbb
int
lahf
mov
nop
xchg
cmc
fistl
sub
shlb
sub
or
mov
mov
ljmp
lret
ljmp
jb
sahf
jo
mov
sub
out
or
lock
cmp
fs
push
stos
mov
pop
pop
test
cmp
xor
daa
and
loop
push
mov
inc
pmullw
jle
fidivrs
lods
jb
jno
push
xor
dec
mov
mov
div
push
jg
inc
xlat
sbb
mov
insb
sub
dec
add
pop
cmp
mov
cmp
xor
stos
test
lock
ds
jle
lahf
rclb
repz
aas
mov
roll
jmp
int3
cmpsl
cwtl
movb
mov
adcb
enter
push
pop
push
mov
or
data16
bound
aaa
jae
testl
push
outsb
jle
jge
ret
xor
out
add
jbe
mov
pusha
ja
add
mov
sub
dec
push
loop
jno
add
jl
push
add
cmpsl
pusha
push
pop
mov
out
sub
xor
sbb
mov
sbb
cmp
addl
jbe
or
les
sbb
dec
xchg
movsl
movsl
lea
stos
sub
adc
push
scas
jae
mov
std
fs
pop
test
les
xchg
mov
adc
nop
into
fcos
adc
jb
insl
lods
sbb
sbb
sub
sbb
outsl
or
push
icebp
out
stos
pop
add
pop
in
push
add
pop
ja
sti
addr16
gs
cmp
inc
mov
jecxz
adc
std
sarl
mov
pop
cld
adc
pause
add
rorl
sbb
push
xchg
mov
jno,pt
je
popf
jb
pop
ret
into
adc
icebp
cs
repnz
mov
fcoml
xchg
int
lods
and
or
cmp
sbb
sti
adc
jno
mov
xlat
and
clc
leave
add
adc
xchg
lock
pop
enter
pushf
xor
aas
enter
je
iret
je
and
pop
iret
lods
and
insl
jmp
xor
mov
jbe
push
jmp
inc
jle
xor
xchg
mov
scas
and
les
pop
mov
jmp
push
insl
sbb
inc
push
dec
add
xchg
mov
sbb
push
jnp
std
dec
xchg
and
xor
sub
ja
enter
push
in
push
andb
cmp
mov
add
insb
in
add
imul
cltd
clc
xchg
push
add
push
mov
cmp
adc
into
pop
mov
mov
test
push
shrb
and
sub
mov
fadds
in
js
sub
xor
fcompl
inc
cmpsb
mov
push
mov
pop
xor
or
sbb
sti
or
adcl
lret
sub
sbb
dec
xor
dec
mov
push
mov
ja
inc
mov
ficoms
dec
mov
cli
out
jle
add
sub
fucomip
out
sub
ficoml
fistl
imul
lret
leave
xor
movsl
pop
insl
test
jns
fists
data16
jns
je
fsubrs
mov
lret
dec
or
fidivrs
or
mov
inc
aad
cmpsb
dec
pusha
cmp
imul
pop
sub
adc
xchg
jns
sbb
pop
mov
aas
pop
outsb
lcall
mov
sbb
adc
call
push
ds
popf
or
mov
mov
jmp
sarl
cs
ja
inc
xor
test
pcmpgtb
push
push
aas
mov
xlat
pop
fstps
lcall
mov
cmp
sarl
pop
les
loope
add
insl
loopne
scas
decl
lret
xor
rclb
adc
fcomi
xchg
decl
out
daa
popa
pop
ds
dec
cli
lcall
mov
add
lret
jge
jmp
loopne
cld
cmp
xor
into
mov
data16
adc
mov
sbb
mov
mov
adc
jns
inc
dec
xchg
maxps
inc
lret
jp
es
mov
mov
popf
fisttpll
lods
mov
sub
sub
sbb
jns
outsb
rcrb
xchg
nop
popf
stc
rcll
dec
rclb
sub
add
sbb
int
mov
xlat
lods
lea
ret
jb
mov
inc
dec
out
adc
push
push
ret
cltd
test
lret
mov
sub
and
lcall
sub
rcrb
mov
nop
dec
mov
and
xchg
dec
fildl
stos
int
sub
or
push
in
xchg
xlat
ds
insl
mov
jo
add
mov
fmul
xor
mov
frstor
sbb
loop
fs
arpl
lods
xor
fiadds
cmpsl
xchg
loopne
test
pop
cmpsb
or
stos
dec
scas
int3
sub
out
jl
push
test
sbb
shll
std
in
aaa
cmpsb
push
iret
fwait
pop
xchg
push
push
or
mov
movsb
aad
pop
xchg
mov
repnz
popa
shr
sbb
rorb
push
or
adc
push
sbb
sbb
jnp
or
mov
adc
test
xor
mov
or
push
daa
mov
hlt
adc
mov
jnp
sub
mov
shll
cli
pop
hlt
jmp
or
flds
dec
andb
pusha
int3
jg
or
adc
cmp
jne
xchg
jmp
inc
lods
pop
xchg
sub
outsb
jecxz
sub
add
inc
imul
inc
sub
mov
popf
pop
cmp
sub
or
lea
les
pop
xchg
or
add
ds
test
lret
scas
and
mov
mov
sub
adc
jecxz
lods
pop
popa
aaa
pop
outsl
or
andb
or
jbe
and
in
dec
popf
pop
in
sbb
xchg
adc
shl
or
leave
fiaddl
cmc
push
shrb
add
add
dec
jle
and
bound
push
ficompl
sar
jecxz
sbb
divb
popa
imul
fnstenv
pusha
mov
test
fadd
jne
jae
repnz
push
dec
neg
cs
mov
and
push
xor
xor
sahf
cmp
jle
mov
fwait
push
ja
inc
adcb
cmp
aas
enter
add
mov
adc
lcall
jg
and
pop
fadds
nop
enter
cmp
add
arpl
sbb
push
pop
mov
inc
xchg
sub
mov
add
mov
sub
lahf
imul
cltd
pop
les
mov
test
sbb
pop
mov
fldl
lea
std
ret
and
in
stc
mov
jmp
fdivs
mov
jb
pop
add
jae
stc
je
xor
jno
sub
cmp
xchg
xlat
xor
xchg
jmp
std
add
loopne
sahf
cs
sbb
xor
cltd
pop
or
xor
pusha
sub
dec
mov
add
test
bound
repnz
ret
shrl
push
push
jge
and
xor
imul
mov
loopne
sbb
inc
std
hlt
repnz
pop
sbb
fisttpll
mov
sub
push
test
sbb
ds
call
adc
fists
sbb
in
mov
sub
lock
pop
mov
inc
mov
out
shlb
dec
hlt
nop
sub
out
mov
stos
mov
adc
popf
pop
dec
push
xor
repnz
sbb
push
and
stos
popf
stos
enter
xchg
mov
or
mov
in
icebp
xchg
mov
repnz
arpl
js
std
mov
cli
fstp
loope
jp
int3
dec
insb
sub
fcom
inc
enter
cmc
sbbb
mov
or
ds
xor
enter
inc
add
stos
movsl
and
lds
xor
fisttpll
pop
xchg
outsl
nop
scas
sbb
add
loope
cld
xchg
sti
stos
fdivrl
movsl
dec
pop
lahf
inc
mov
mov
pop
fisubl
lods
add
std
daa
xor
mov
fcoml
in
push
bound
xchg
std
fisttpll
mov
lahf
leave
xor
xor
popf
inc
add
push
xor
cwtl
ja
add
in
lcall
subl
lea
subl
cli
push
jo
lret
notl
cli
sarb
inc
mov
nop
dec
test
ljmp
sbb
mov
rcrl
and
inc
cmpsb
mov
adc
out
xchg
pop
stos
lods
xlat
or
xchg
xlat
filds
cmp
std
into
lcall
sbb
xchg
cli
int3
cmp
scas
dec
pop
out
add
outsl
sub
push
es
std
movsb
ret
call
test
cmp
jp
push
insb
xchg
testl
adcl
cmpsb
in
ss
jo
jl
cmp
pop
mov
jno
movsb
dec
mov
mov
mov
clc
push
je
mov
mov
adcl
out
or
rcl
or
lret
fcomi
jne
push
inc
xchg
inc
mov
lret
out
pop
xor
and
dec
insl
jge
es
popa
cld
mov
stos
push
sub
jecxz
adc
sub
into
dec
fnstsw
pop
mov
lret
xchg
add
mov
dec
cwtl
cmpsb
cmc
lret
adc
pop
imul
xchg
xchg
and
int3
movsl
xchg
pop
pushf
jecxz
mov
ret
mov
sbb
dec
add
mov
je
jmp
pop
dec
xchg
lret
leave
push
pop
mov
ret
sub
cwtl
shlb
movsb
mov
mov
lea
add
xor
xor
pop
xor
sbb
or
mov
add
rolb
ljmp
test
test
int3
or
in
xor
bnd
mov
fdivs
add
xor
inc
test
ficoms
ja
sub
or
sbb
xor
mov
loopne
mov
das
mov
sub
jo
insl
inc
fsubr
sbb
rcrl
or
dec
and
mov
int3
movl
xor
dec
cmpl
cmp
inc
aas
push
cli
pop
aad
push
imul
push
push
inc
inc
out
lret
out
pop
je
sub
in
cmp
cs
dec
pusha
xchg
dec
enter
jno
xchg
leave
es
mov
lea
or
jae
cmc
cmp
ds
das
call
jae
cld
sub
mov
int
test
mov
push
clc
ja
daa
jns
fistl
mov
sub
les
lods
popa
out
pop
inc
mov
mov
pop
out
in
jae
dec
aas
mov
ret
out
and
lret
jns
in
faddl
movsl
mov
mov
add
adc
hlt
pop
dec
dec
addl
ret
repnz
mov
adc
clc
vmovaps
enter
clc
mov
mov
xor
push
cld
pushl
stos
insl
sub
shr
orb
mov
test
in
mov
xor
mov
add
pushf
repz
cmp
lea
sbb
stos
mov
mov
cwtl
leave
pop
loope
pop
cmp
push
mov
std
fisttpl
mov
ret
jnp
mov
jge
clc
cmp
pusha
mov
add
in
shlb
sub
cmpb
cmpsb
test
aam
insb
xchg
stos
lea
fldl
mov
pop
and
jb
push
rclb
sbb
dec
xor
dec
ja
jecxz
mov
in
cli
xor
out
pop
shl
xchg
lock
pop
call
addr16
jl
xchg
or
push
xchg
sbb
testl
mov
and
mov
js
cli
mov
mov
and
pop
rorb
movsb
sbb
or
inc
cmpsb
test
jno
daa
mov
cli
mov
fldt
push
sarl
rorb
xchg
ljmp
xchg
je
push
clc
or
call
cmp
dec
stos
mov
jnp
xor
jp
or
imulb
jmp
xchg
xor
ja
movsl
call
int3
cmp
cmp
pop
pop
sbb
cs
movsb
add
sbb
xchg
in
stc
adc
pop
lret
jae
cmp
push
ljmp
js
cwtl
fiaddl
nop
xchg
cmp
inc
sahf
je
nop
push
out
cmp
das
cltd
pop
clc
dec
dec
mov
lahf
inc
mov
rcrb
xchg
pop
inc
or
inc
addb
mov
add
test
rolb
inc
aad
and
mov
pop
bnd
cmpxchg
mov
inc
jmp
jmp
cwtl
xchg
inc
pop
imul
test
jge
scas
fldl
stos
or
int
jne
cmp
jne
add
pop
xor
push
in
rcr
fcmovne
shrl
xor
jmp
fcoml
ss
ret
iret
shll
push
pop
pop
adc
pop
bound
js
stc
push
sbb
scas
out
adcl
fnsave
cld
aas
or
sbb
push
xlat
bswap
jp
test
shl
lahf
jae
aas
cmp
int3
xor
sarb
sbb
bound
sbb
addr16
ja
addr16
push
jbe
insb
shr
xchg
outsl
mov
sbb
mov
rol
ret
dec
mov
mov
push
push
xlat
jo
call
inc
xchg
dec
mov
jb
arpl
add
rcl
jo
scas
cmp
jecxz
pop
nop
cmc
or
jns
addb
loop
jl
jg
or
xor
mov
xchg
mov
imul
iret
fsubrl
leave
mov
scas
pop
sarb
inc
xchg
mov
push
push
insb
push
adc
hlt
scas
push
jo
mov
cli
and
mov
cmp
loope
mov
and
mov
inc
or
jno
mov
aas
insb
cmp
adc
scas
push
dec
add
xor
and
lret
mov
ljmp
mov
mov
pop
inc
mov
mov
mov
push
push
pop
push
imul
and
jmp
adc
push
push
push
dec
sbb
inc
movsb
pop
jmp
fld
std
les
jno
push
jmp
push
dec
xlat
loop
fisttps
push
out
shrb
out
push
dec
jle
rcll
std
sti
int
rorl
mov
repnz
push
xchg
lret
cli
call
dec
inc
xlat
nop
dec
dec
pop
push
push
sub
popf
sbb
scas
cwtl
add
sbb
roll
xchg
mov
cmc
push
leave
cmpsb
stos
push
int3
dec
ljmp
fcom
sar
pushf
dec
add
pushf
push
or
dec
jns
mov
sbb
scas
push
pop
adc
or
mov
push
mov
jnp
xchg
loopne
cmp
ds
in
inc
or
pop
xor
test
or
fadds
mov
mov
sub
rorl
push
jno
popa
icebp
insb
mov
sub
mov
test
stos
push
push
dec
xorl
mov
fimull
test
int3
push
aaa
aam
stos
add
subb
dec
jnp
int
daa
daa
dec
pop
add
test
out
dec
mov
sbb
sub
pop
adc
add
jecxz
add
push
movsl
js
aaa
dec
xlat
or
mov
inc
int3
cmc
adc
mov
mov
mov
add
push
jbe
and
dec
jecxz
lar
jg
push
pop
sarb
repz
scas
mov
sub
jbe
das
stos
sbb
test
in
lds
cmp
pop
sbb
or
jbe
and
stc
dec
mov
adc
mov
fcmove
andb
jne
cwtl
jle
jnp
mov
sbb
push
mov
fdivs
int
outsb
inc
mov
mov
dec
cmp
add
int3
lret
or
xor
loopne
adc
outsb
add
je
sbb
sbb
test
push
xchg
leave
fldz
test
push
add
rolb
ja
xchg
mov
xchg
data16
and
mov
aas
daa
push
imul
adc
mov
mov
mov
add
fildll
fwait
cmp
data16
rcr
cmpsb
sub
test
stc
jno
imul
mov
add
iret
dec
enter
icebp
push
leave
addl
lcall
sub
and
aaa
ficomps
fsub
loopne
in
roll
xchg
sub
or
int
dec
xor
insb
inc
xchg
ja
cltd
imul
mov
jo
push
xor
cmpl
repz
xchg
mov
xor
pop
popf
nop
rolb
adc
lcall
jecxz
fadds
and
push
mov
xchg
mov
cmp
out
mov
mov
in
ficoms
inc
out
in
call
in
pusha
pop
xchg
adc
outsb
sbb
ret
xlat
call
pop
adc
add
pop
mov
dec
popa
push
movsb
into
mov
sbb
icebp
and
cmc
imul
xchg
pop
lock
pop
or
xor
bound
shl
pushf
mov
push
mov
dec
outsb
mov
fdivrs
out
sub
stc
loop
xchg
call
pop
pushf
shrl
mov
jnp
sub
sahf
mov
in
sbb
flds
je
cmp
adc
cltd
or
add
dec
popf
iret
icebp
push
mov
inc
lods
lock
xchg
xchg
jg
fimull
xor
xchg
inc
cmp
cld
lcall
fstpl
xchg
mov
add
loope
mov
pop
add
dec
and
dec
cld
in
push
or
or
imul
sbb
mov
dec
sbb
arpl
aas
mov
cmp
jb
out
push
dec
mov
dec
and
shll
lods
dec
insl
or
dec
cmp
inc
push
mov
mov
mov
mov
mov
inc
pop
push
aaa
arpl
dec
sbb
scas
mov
jecxz
jne
popf
adc
adc
jb
clc
out
xchg
sub
popl
adc
push
and
addr16
jns
ds
in
jle
push
xchg
xor
pop
lret
ja
pop
and
push
mov
dec
clc
fisubrs
jle
sti
in
test
mov
icebp
xchg
jmp
cmp
dec
add
lret
cs
mov
sub
mov
test
mov
loope
xor
out
mov
test
mov
fdivrl
xor
cmp
add
iret
jge
int
mov
push
xchg
pop
xor
dec
movsb
sub
or
jmp
insl
adc
cmp
adc
pop
in
stos
fsub
xlat
cs
and
pop
and
leave
xchg
inc
and
arpl
dec
xor
dec
nop
cld
cmpsl
dec
inc
ds
popf
fadds
add
insl
xchg
jnp
lret
sub
mov
in
mov
pusha
push
adc
fsubrp
add
xlat
call
mov
mov
sub
mov
jb
dec
mov
mov
inc
clc
inc
push
sub
xor
mov
imul
in
in
add
dec
divb
mov
clc
daa
push
pop
cmp
jae
outsl
push
outsb
dec
je
cmpsl
imul
push
mov
rcl
push
adc
incb
mov
repnz
adc
inc
dec
mov
xor
and
jb
fists
test
pop
pop
cmp
pop
das
popf
mov
lahf
dec
popa
mov
add
adc
popa
mov
inc
shlb
cld
test
mov
iret
out
mov
mov
pop
aad
test
aas
testb
sbb
sti
sub
in
mov
pop
xchg
outsl
insb
jmp
lcall
repz
xchg
pop
xor
icebp
xchg
push
adc
lds
sbb
add
in
xor
shrl
scas
pop
test
mov
add
cld
popf
clc
mov
sub
lea
pop
push
inc
sub
aas
lea
and
lretw
pop
addl
xor
imul
lds
divb
leave
stos
inc
movsb
test
adc
std
shlb
insb
jl
out
push
ret
jbe
bound
shl
jle
pop
iret
in
lret
subb
push
and
add
inc
das
cmp
cmp
fs
dec
cmp
popa
mov
inc
pop
dec
repnz
movsl
lret
movsb
sahf
adc
test
cmp
ljmp
pop
mov
cltd
adc
dec
clc
push
andb
push
add
fdivrs
mov
mov
lcall
outsb
in
fisttpl
ret
popf
insb
pusha
and
loop
aas
daa
mov
les
pushf
mov
ja
cmpb
lods
mov
sub
movsl
sub
fcomp
cltd
mov
mov
int
call
clc
inc
and
insl
icebp
and
call
and
add
sub
mov
out
mov
mov
mov
shrb
popa
stos
aaa
popa
pusha
jp
ljmp
outsb
and
ja,pt
mov
stos
lret
sbbb
pmulhuw
je
xchg
jle
pop
mov
jle
lahf
lock
fimuls
fisubrs
adc
cmpsl
sarb
iret
add
push
pop
sbb
call
data16
fnstcw
bound
inc
push
call
pop
cmp
fsubr
ds
repnz
daa
xor
pop
jg
mov
lcall
cmp
scas
shrl
scas
ja
leave
stos
adc
addr16
mov
sbb
les
jb
mov
lcall
cmp
push
jl
call
jne
ja
cmc
mov
jecxz
mov
add
jae
inc
packsswb
add
stos
scas
insb
pop
pop
jno
repz
fdivp
test
loope
xchg
cmpsb
mov
dec
cs
cmp
fdivs
inc
dec
fcmove
dec
inc
test
sub
jne
pop
pop
sub
in
out
sub
movsl
add
mov
into
push
adc
mov
sub
pop
xchg
dec
push
test
pop
pop
mov
push
fdivl
and
test
imul
cld
jecxz
mov
push
mov
xor
push
cwtl
loope
ret
jae
mov
inc
stc
xchg
jg
add
insl
pop
enter
lock
xor
mov
rcll
or
gs
add
in
jle
mov
lret
lcall
aad
out
cmpsb
test
fdivrs
lcall
lods
testl
push
icebp
adc
push
inc
jmp
add
push
jne
inc
mov
aaa
cld
filds
or
push
outsb
out
mov
adc
popa
inc
or
mov
xor
sub
int3
bnd
dec
sti
xor
jmp
pop
xor
mov
test
ficompl
add
in
inc
and
icebp
fstps
pop
adc
addr16
imul
ret
cmp
aad
stc
daa
and
mov
call
les
pop
cmpsb
fistpl
daa
dec
hlt
xor
cli
test
mov
sti
hlt
pop
mov
or
xlat
popa
gs
add
mov
xchg
call
or
pusha
test
shl
add
repnz
clc
shll
ret
pushf
cmpsl
cmp
sbb
loope
ret
cmp
mov
dec
call
pop
push
aam
jnp
dec
movb
cwtl
xor
inc
xchg
jae
sbb
pushf
cmp
or
mov
xchg
ljmp
push
cwtl
or
jae
lock
xchg
aad
jbe
jne
rol
cmc
fs
out
push
add
fwait
pop
lock
or
pop
out
xor
mov
push
xor
mov
xor
pushf
sbb
jge
jae
inc
xchg
xlat
popa
add
jg
insl
in
push
cmp
mov
pop
repz
dec
jns
lock
push
pushf
ja
mov
daa
subl
mov
xchg
adc
iret
ja
addr16
repnz
lods
push
je
sti
jmp
push
daa
pushf
iret
dec
out
aaa
cmc
cmp
pop
xchg
addr16
push
je
xor
in
flds
std
and
aad
outsl
cmpsl
std
xchg
jbe
lcall
sbb
int
stos
xchg
cmp
shl
scas
scas
mov
stos
bound
gs
inc
loope
filds
pop
test
dec
xor
cld
dec
push
inc
push
push
je
enter
xorb
sub
mov
into
shlb
test
push
ljmp
cmp
lcall
inc
iret
jo
pop
and
aaa
pop
cs
mov
jg
inc
jp
adc
xor
mov
into
push
fwait
or
mov
mov
xchg
fs
in
sbb
cmpsl
mov
inc
loop
imul
in
xchg
hlt
cmp
mov
add
mov
dec
push
out
adc
cli
loope
jp
cld
movdqu
iret
xchg
sbb
insl
arpl
mov
cmp
fs
mov
in
jae
shlb
jge
dec
mov
xor
pop
sti
and
aad
add
jmp
and
loopne
inc
stos
sbb
imul
adc
and
fcmovnbe
jbe
add
hlt
in
pop
cmp
push
data16
cmp
ja
es
cli
jb
inc
jg
mov
popf
push
add
movsl
icebp
in
call
adc
les
inc
popa
mov
mov
fwait
lea
xchg
or
and
pop
xchg
lret
repz
push
test
dec
sahf
jl
cmpb
lods
cmpsb
and
ds
or
or
repz
sbb
pop
insl
leave
push
sbb
clc
mov
xlat
cmc
sbb
call
call
or
xchg
sub
cmp
icebp
mov
mov
fmul
clc
mov
loopne
push
rcl
cmc
ret
mov
out
lret
sub
mov
push
pop
cwtl
cmpsb
mov
mov
je
lret
pop
pop
loope
mov
add
pop
dec
and
mov
mov
push
xor
fdivp
sarb
js
jmp
aaa
xor
inc
mov
int3
stc
dec
sbb
adc
leave
cmc
mov
cltd
adc
out
popa
jecxz
shll
mov
mov
sub
push
mov
mov
outsb
sub
ret
es
adc
sbb
push
ret
rcl
or
or
scas
pop
cli
dec
xchg
rcrb
inc
jno
xchg
pop
add
loope
lahf
lds
pop
sahf
adc
imulb
dec
loop
call
mov
inc
pop
jb
in
test
or
fld1
addr16
push
cs
jae
lahf
stc
mov
outsb
mov
sub
mov
std
in
clc
fcoms
push
push
leave
fimull
dec
xor
shlb
add
lret
add
mov
fmull
ret
sahf
adc
cs
test
pop
out
loope
or
add
rcr
das
push
xchg
xchg
push
add
iret
scas
int3
mov
mov
push
clc
fwait
stos
lahf
bound
cli
frstor
cmp
add
fnstsw
mov
xchg
sub
adc
lcall
fdivrl
sub
sub
sarl
push
xchg
add
add
push
mov
mov
les
jo
add
xchg
jbe
je
sub
arpl
dec
mov
ror
cmp
nop
or
push
cmpsb
cld
or
inc
dec
jb
xor
outsl
mov
lods
lds
repnz
stc
mov
push
out
cs
push
push
je
xor
or
add
push
lods
pop
inc
cli
mov
sub
insb
cwtl
mov
sub
shll
sbb
or
fucomp
dec
pushf
cmpsl
into
arpl
faddl
mov
cli
incb
adc
fcmovnbe
cld
or
outsb
cld
je
lods
sbb
xchg
shlb
jmp
ljmp
call
mov
pop
and
add
mov
loop
mov
adc
jns
out
xor
xorl
jmp
sub
rcrb
sub
or
push
and
lahf
sub
mov
fiadds
adc
loope
in
out
cmpl
adc
cmp
enter
gs
xchg
scas
and
fadd
rclb
loopne
adc
lods
mov
hlt
js
lods
out
es
xchg
cmp
rcr
adc
sub
dec
outsl
jbe
clc
lret
add
imul
repz
xchg
out
fistpll
movsb
sbb
int3
sbb
sarb
sbb
xchg
ret
add
xchg
push
jp
and
lds
dec
filds
and
sbbb
and
xchg
es
mov
or
inc
mov
sbb
mov
aam
mov
add
add
sbb
inc
sbb
mov
rcll
test
push
imulb
add
push
inc
add
scas
inc
aad
into
arpl
mov
ret
pop
sub
xor
cld
stc
arpl
out
fcmovnb
in
aaa
jae
inc
mov
popf
or
push
dec
aaa
jbe,pt
fsubrl
add
gs
or
add
cmp
daa
add
mov
arpl
int
pop
push
loope
jmp
xor
add
frstor
mov
xchg
rol
xor
test
xchg
leave
jge
lea
ret
fwait
arpl
test
shll
cmp
xchg
xor
fs
dec
push
mov
xchg
cmp
int
inc
in
lods
inc
jl
lret
mov
adcb
ficoms
testl
mov
stos
mov
and
and
cmpsb
mov
dec
xchg
mov
cmp
imul
dec
pop
mov
jp
test
xor
jp
mov
or
dec
lods
fstpt
sbb
sub
jns
dec
mov
stos
jp
imul
test
pushf
push
ret
jmp
in
push
add
inc
cmpsl
xlat
clc
jb
mov
loope
ret
inc
ficoms
insb
sub
movl
add
pop
orb
popf
push
and
add
mov
mov
adc
dec
imul
xchg
xchg
inc
add
int3
aas
divb
xchg
xchg
mov
pop
cmp
pushw
push
sbb
leave
negl
arpl
inc
aad
lea
push
xchg
mov
rolb
push
pop
loop
inc
pusha
jne
xor
inc
ss
sub
js
lret
cmc
outsl
inc
pop
mov
inc
push
imulb
sti
mov
xchg
fnstenv
outsl
mov
pop
jbe
lret
mov
testb
dec
dec
lds
mov
pop
cmp
mov
adc
call
roll
addr16
movsb
push
test
dec
pop
cs
test
movsl
call
mov
clc
dec
jo
sahf
sub
cld
scas
ljmp
push
pop
out
mov
cmp
lock
iret
pop
push
xchg
sahf
popf
mov
nop
or
fucomp
dec
rol
out
test
mov
push
sbb
sbb
sti
sbb
arpl
mov
sub
add
adc
push
mov
iret
cmc
shlb
mov
mov
decb
sbb
lret
int
xlat
sbb
pop
subb
sbb
mov
adc
cli
jo
adc
and
movsb
jae
mov
in
sbb
mov
insl
repnz
xchg
test
xchg
or
sbb
dec
movsb
cli
cwtl
xchg
push
or
sub
mov
pop
stc
xchg
dec
jge
fbstp
mov
jge
push
std
pop
mov
out
xchg
mov
xor
lea
fbstp
pop
out
pop
push
lds
dec
mov
and
push
lcall
rorl
sub
inc
xor
ficoms
stos
xorl
mov
iret
mov
and
loope
fs
jmp
mov
push
adc
mov
sti
iret
call
xchg
pop
dec
stos
xchg
repz
lret
out
jb
push
dec
jo
inc
mov
lret
lret
mov
pop
push
mov
adc
dec
and
stos
adc
or
adc
vmovss
sbb
fsubl
adc
lods
aaa
xchg
sti
add
xchg
test
test
pop
repnz
mov
jp
xor
and
cmp
and
pusha
mov
lods
mov
push
mov
fstps
enter
cmp
cld
sbb
xchg
scas
mov
fsts
cltd
sbb
xor
pop
push
push
jbe
testl
xchg
xchg
into
dec
fs
inc
xor
lods
sar
cmc
leave
ret
data16
inc
inc
xchg
mov
test
mov
mov
cmp
push
mov
mov
sbb
push
lods
fdivrs
mov
adcl
ficoms
rcrl
lret
repnz
into
inc
out
xchg
bound
cltd
sbb
cmp
xlat
scas
movb
push
pop
mov
sbb
cli
mov
inc
jmp
lcall
test
gs
mov
lcall
push
mov
addr16
xchg
aas
int
fisttpll
movsb
jo
outsb
inc
pop
in
imul
addb
fs
test
xchg
xchg
loope
pop
push
push
repz
dec
jp
jle
mov
push
lea
shll
cmp
sub
dec
mov
fldenv
inc
loopne
and
repnz
xchg
je
mov
cwtl
ljmp
jo
and
jle
xchg
daa
sub
popa
icebp
popa
lea
xchg
shrl
aam
mov
jge
iret
push
clc
mov
jo
pop
or
in
mov
nop
mov
fnstenv
stc
dec
std
aaa
xchg
fdiv
add
cmc
inc
add
decl
je
popf
inc
sbb
cmp
test
call
popf
std
test
stos
jg
mov
dec
add
gs
mov
push
sub
rcll
add
jp
sub
pop
mov
jl
sub
out
dec
inc
adc
add
lods
outsb
cmp
stc
fisttps
push
lds
mov
aas
dec
dec
adc
mov
loop
dec
mov
adc
dec
nop
lahf
loope
add
enter
in
sbb
inc
lea
mov
ds
push
int3
mov
loopne
push
pop
add
mov
sti
je
in
sbb
add
test
decb
mov
dec
shrl
ret
in
mov
xor
out
mov
push
or
adc
movsl
fnstsw
imul
filds
or
in
and
mov
inc
and
jmp
int
sbb
sbb
movsl
and
dec
cmp
push
xchg
int3
test
sub
lcall
faddp
adc
mov
mov
xor
out
fnsave
popf
xchg
ret
inc
pop
sbb
sarb
add
push
ljmp
cli
xor
jne
out
leave
mov
popf
ret
pop
jmp
and
shll
inc
cmpsb
mov
or
aaa
js
pop
cld
xchg
push
test
aam
outsb
adc
ja
dec
push
and
lea
ret
dec
mov
mov
insb
cmp
xor
sub
scas
stos
les
mov
int3
popa
sahf
add
repnz
xor
and
adc
pop
pop
fs
cmp
scas
pop
sub
pop
xor
or
and
call
sbb
push
mov
and
mov
loop
sub
pop
mov
pop
push
adc
mov
test
add
sbb
and
roll
cmp
adc
mov
out
into
inc
aaa
push
leave
push
xor
rolb
or
dec
sbb
cltd
adc
sbbl
mov
push
pop
daa
pop
mov
cmp
test
sbb
mov
add
scas
daa
mov
pop
pop
in
into
hlt
jno
int
sbb
xor
enter
xchg
adc
gs
mov
cli
stc
sbb
test
mov
hlt
cmp
out
sbb
push
adc
fucom
pop
scas
jge
cwtl
scas
mov
and
and
subb
outsl
hlt
es
jmp
ret
sub
cmp
sti
cmp
pusha
sub
lock
fs
mov
push
pop
inc
call
scas
and
xchg
cmp
fs
lret
jbe
data16
sub
mov
cltd
push
inc
test
int
push
loopne
mov
mov
leave
pop
adc
push
push
cmc
cmp
mov
or
aas
xchg
lret
push
xlat
cltd
sub
ja
jo
mov
ja
xchg
dec
cmc
adc
mov
mov
addr16
jbe
or
sbbb
loopne
ret
mov
aad
jge
movl
lds
nop
repz
out
sub
outsl
pushf
sbb
pusha
cmp
push
std
pop
xor
mov
push
leave
xchg
mov
dec
ss
xchg
insb
sti
or
aaa
push
add
out
wrmsr
lcall
das
cmp
push
cmpsb
adc
xchg
sbb
inc
out
sub
fadd
jmp
out
repz
mov
call
pop
cmpb
lret
xchg
loopne
and
push
adc
xor
out
mov
in
mov
mov
insl
int
sub
mov
dec
imul
mulb
sarl
ljmp
movsl
fdivr
xlat
pop
in
or
int
cmc
xchg
jbe
xchg
cmpsb
cwtl
subb
repz
frstor
sub
push
mov
dec
movsl
xchg
mov
inc
sar
jno
pop
scas
dec
lret
pusha
mov
popa
cli
adc
mov
repnz
mov
xlat
pop
jns
das
aad
sbb
dec
movsb
dec
jne
dec
jne
xchg
xchg
sbb
jo
sbb
xchg
shlb
xchg
mov
fisubrs
or
mov
ds
cmp
pop
leave
sub
jp
aad
lea
lods
loopne
pop
jmp
jo
dec
xlat
cmp
cmp
and
or
dec
dec
push
addl
lods
sub
cmpsb
stos
adc
mov
insl
mov
ret
inc
test
test
loope
pop
jne
cwtl
pop
sbb
pop
xchg
loopne
popa
das
dec
sbb
jg
dec
push
in
test
lcall
or
lahf
xchg
xchg
push
mov
test
sbb
dec
cmp
not
subb
testb
mov
cmp
or
fs
and
test
into
fs
nop
orb
sbb
lock
mov
cltd
in
rorb
hlt
xchg
test
and
mov
dec
stos
nop
aaa
or
mov
push
sqrtps
mov
leave
lods
fstpl
sbb
lods
movsl
jle
mov
das
add
sub
push
cli
bound
mov
pushf
mov
jle
sbb
jns
insl
cli
sub
jae
fs
xchg
inc
sub
xor
cmpsb
sub
cld
sub
mov
cmp
aam
scas
js
in
fs
mov
jns
imul
repz
sbb
xchg
pop
xchg
sub
sub
lret
movsb
cld
daa
int3
dec
ss
ja
xlat
xchg
in
mov
and
stos
xor
xchg
cltd
sbb
ret
aaa
lcall
out
jge
daa
jecxz
cmpsl
aad
adc
lods
outsb
pop
dec
or
movsb
loop
ja
pusha
inc
lret
xchg
loope
and
adc
insl
scas
mov
aas
out
jg
jb
faddl
fdiv
xorb
lret
pop
imul
in
adc
inc
movsl
out
push
pusha
sbb
jbe
shr
mov
popa
nop
add
cmpsb
or
xchg
jge
inc
xchg
outsb
cmp
add
and
je
push
push
push
xor
mov
pusha
iret
call
and
test
sahf
outsl
std
adc
fdivs
insb
fcmovu
cwtl
addr16
xor
ret
push
mull
jns
mov
loop
or
das
jmp
jne
insl
das
push
aam
dec
add
xchg
repz
and
and
cmp
aad
mov
xchg
pop
xchg
mov
mov
out
inc
shlb
imul
or
cmp
adc
popf
sbb
xor
or
pop
mov
jno
sub
imul
repnz
or
in
pop
pop
pop
push
mov
mov
je
and
push
push
decl
das
stc
stos
mov
mov
add
inc
scas
cli
subb
mov
xchg
ja
xor
insb
jg
push
sbb
les
or
iret
mov
cld
ljmp
stos
out
inc
add
pop
bound
jo
int3
dec
mov
xlat
leave
xor
xchg
js
jge
int3
jns
mov
dec
xchg
pop
mov
cld
jne
cld
pop
int3
xor
dec
push
icebp
in
mov
lret
enter
mov
cmpsl
cmp
call
lock
xor
loopnew
sub
sbb
jae
test
lea
sbb
push
sahf
out
and
outsb
adc
sbb
test
rcl
xchg
sbb
sbb
sub
xchg
clc
jno
sarb
mov
ljmp
add
adc
leave
leave
push
inc
xlat
push
mov
daa
cmc
sub
xchg
xchg
popa
push
push
lea
inc
sbb
loopne
mov
push
mov
xchg
ret
adc
fnstcw
add
out
adc
or
leave
jecxz
outsb
mov
sub
lock
or
jmp
mov
in
adc
sub
inc
arpl
mov
and
scas
adc
cmp
addr16
adc
push
cld
adc
mov
jo
jmp
out
daa
jbe
mov
or
and
pop
es
repz
sub
and
pop
mov
mov
pushf
leave
jp
jbe
mov
jne
outsl
add
das
pushf
movsb
push
sbb
movsb
jne
andps
add
xor
cmp
add
test
sti
jecxz
lcall
xor
sub
icebp
in
mov
dec
pop
pop
rcrb
int3
sub
out
sub
jl
pop
pusha
out
int3
push
fisubrl
mov
jecxz
into
addr16
cmc
jne
mov
pushf
aam
addr16
cmpsl
pop
cmp
aaa
dec
test
aaa
adc
pop
fimuls
push
insb
and
scas
cli
fmuls
mov
xchg
cmpsb
mov
jge,pt
mov
cmp
sub
loopne
scas
testl
fldl
ds
loope
and
add
js,pt
pop
shlb
sbb
mov
jg
outsb
aaa
sub
sbb
int
pop
in
imul
inc
xchg
jmp
inc
xor
xchg
jae
push
sarl
hlt
sbb
pop
push
je
pop
inc
jb
adc
adc
xor
cmp
fsts
cmp
xchg
stc
mul
add
cmp
mov
jmp
pop
cmp
dec
into
push
and
repz
shll
popf
jne
push
ja
pop
addb
lret
push
jnp
mov
and
ja
xor
cwtl
popf
ljmp
daa
sbb
lret
iret
sub
mov
shll
add
popa
stos
shll
pop
aas
sub
shrl
mov
mov
rolb
sbb
inc
xchg
xor
aam
popf
rcll
je
xchg
cmp
xlat
mov
sub
or
dec
jae
loope
jle
loop
loope
popf
pop
loopne
jg
adc
imul
mov
sbb
sbb
cmpsl
sub
mov
lcall
fiaddl
rorl
scas
mov
iret
inc
imul
dec
jae
fs
xchg
popf
cs
cmp
sbb
loope
ljmp
push
jns
xor
mov
repnz
push
insl
testb
leave
cwtl
out
or
dec
jmp
cmpsl
cmpsb
call
imul
les
xchg
or
sub
adc
adc
movsl
mov
jmp
repnz
push
push
and
cli
scas
scas
je
jecxz
call
fadd
ret
jmp
mov
lods
nop
gs
jmp
add
push
pop
mov
xchg
shr
fsubrs
lahf
add
lret
jmp
adc
pop
pop
imul
mov
add
fstpl
rorb
dec
sbb
clc
div
out
mov
lock
hlt
scas
dec
add
push
mov
push
jns
inc
xchg
add
clc
scas
mov
adc
cmp
xchg
or
fists
into
push
mov
inc
repz
pop
js
sub
mov
addr16
cmp
in
cmp
shlb
cld
or
aad
pop
dec
aad
lods
es
inc
pop
in
lods
or
inc
ljmp
pop
lock
ret
cmp
mov
daa
pop
ja
sub
dec
push
pop
mov
add
dec
aad
add
or
addr16
mov
inc
jp
mov
push
xor
fptan
sub
outsl
daa
mov
jb
test
jmp
int
js
stos
movl
xchg
fwait
out
loop
call
sub
or
cltd
inc
mov
sarl
xor
add
mov
pushf
in
rcrl
movsb
push
pop
popa
dec
xchg
or
faddl
push
outsb
lcall
xor
mov
std
repnz
dec
das
pop
inc
inc
cmp
js
cmp
cmp
stos
lods
xchg
mov
xchg
adc
ljmp
pop
mov
sub
push
or
cli
or
push
orb
jbe
cmp
jecxz
bound
sub
lcall
xchg
loop
fsubrl
stos
push
fnstcw
aas
add
test
push
xchg
jno
xor
mov
sbb
negl
rclb
mov
mov
inc
lock
mov
fs
jg
mov
xchg
cmpsl
stc
push
ror
mov
je
lods
clc
jo
mov
inc
cmpsl
jno
rorb
icebp
popa
cwtl
call
inc
xchg
lock
mov
push
jg
add
lahf
jp
ret
jp
adc
shrb
xor
out
xlat
jg
push
iret
mov
stos
loope
adcb
jnp
jmp
push
sbb
test
pop
aam
jle
jb
sbb
repnz
lcall
andb
loopne
imul
mov
lock
adc
sbb
ja
sti
dec
push
jp
pop
inc
into
mov
sub
push
sbb
pop
inc
insb
dec
fcompl
addr16
leave
repz
stos
or
jecxz
leave
or
gs
in
mov
dec
arpl
push
pop
dec
push
fisubrl
xor
scas
adc
mov
shlb
ror
mov
sub
add
mov
adc
in
into
sbb
pop
mov
jo
mov
into
inc
call
inc
stos
call
jae
mov
push
mov
mov
divb
gs
pushf
cmp
adc
ljmp
std
jbe
fxam
inc
push
push
adc
xor
imul
pop
test
js
shl
mov
lock
jge
cli
pop
fnsave
sahf
adc
hlt
pusha
nop
mov
repz
call
mov
shlb
inc
sub
dec
mov
inc
cmp
inc
and
arpl
cs
arpl
pop
popf
lahf
out
cmc
ret
mov
push
mov
aas
dec
push
pusha
mov
mov
packsswb
sub
inc
xchg
loopne
mov
movsb
shrl
push
nop
ss
mov
inc
dec
and
stc
lahf
int3
jne
mov
push
test
addr16
xor
stc
mov
imul
repz
out
mov
jbe
or
les
cmp
and
movsb
es
mov
out
scas
fimuls
cld
notb
sarl
insl
lahf
outsb
jp
cmp
dec
sbb
inc
xor
xor
pop
std
sbb
cmpsb
lahf
pop
jae
pop
mov
and
rcrb
rcrb
sbb
scas
mov
leave
out
push
mov
popa
push
lods
jbe
mov
cmp
out
pop
lds
mov
into
bound
ret
dec
pop
enter
xchg
add
pop
adc
fnsave
pop
push
jno
inc
movsb
xor
mov
arpl
dec
jg
sti
sbb
pop
loop
and
loope
jns
and
mov
add
dec
movsb
mov
push
sub
cmpsb
cmpsb
ja
sbb
cltd
cld
push
dec
popa
movsb
push
es
clc
cmc
mov
scas
mov
jnp
jp
xor
mov
test
mov
or
cmp
jg
dec
push
jp
add
xchg
xchg
mov
test
idivb
mov
pusha
inc
push
xor
cmpsl
jb
mov
mov
es
pop
cld
xchg
sbb
inc
and
in
pusha
shll
mov
or
aad
shrl
scas
out
and
rcll
ds
cmp
and
xchg
add
fs
imul
cmp
xchg
push
add
in
lock
xchg
cli
jecxz
jl
add
fistpll
adc
xchg
mov
lock
call
movsl
jno
pop
ret
or
in
adc
out
add
cmc
aad
je
imul
jnp
lcall
sbb
lods
inc
imul
lcall
cmp
push
pop
or
xchg
and
dec
cmp
cmp
jge
in
xor
loopne
sub
loopne
fneni(8087
cmp
shlb
mov
cld
repz
mov
mov
xorl
add
fistl
into
jge
push
push
icebp
and
addr16
out
or
pop
push
adc
dec
ds
addr16
mov
mov
add
test
pop
sbb
sbb
inc
imul
cmp
out
es
insb
lock
nop
xlat
xor
data16
add
and
cmp
in
jg
and
inc
sbbb
mov
mov
cmp
xchg
ss
lret
int3
adc
sub
cli
imul
rorb
scas
in
lods
add
mov
push
addl
pop
jne
cmp
xchg
sbb
mov
icebp
pop
mov
cli
dec
call
lea
jns
cmpsl
fwait
and
repz
push
loopne
out
out
movsb
mov
das
pop
test
test
ss
test
hlt
xchg
in
hlt
add
xor
ss
mov
gs
jg
stos
xor
xchg
popl
mov
xor
or
sub
dec
xchg
mov
and
inc
sbb
pop
hlt
out
out
xchg
ja
xchg
cmp
inc
addr16
add
mov
sbb
test
pop
into
sbb
pusha
xchg
push
xchg
bound
push
push
adc
mov
mov
cmp
inc
inc
fwait
cmpb
inc
xor
pop
pop
movsb
jnp
inc
and
out
ret
icebp
call
jbe
das
std
pop
add
mov
ljmp
fdivp
cmp
jno
jle
dec
stos
jg
xor
mov
push
inc
push
pop
dec
jecxz
add
xchg
addr16
int
jne
scas
jb
or
sub
fdivp
jg
shr
xor
lds
push
or
shl
sub
push
dec
xor
mov
mov
popf
jnp
xchg
lret
pop
dec
add
inc
or
int3
mov
inc
stos
addr16
push
test
dec
mov
jne
xchg
scas
or
xchg
push
jbe
xor
insl
jbe
cmp
pop
add
bound
pop
add
fs
movsl
frstor
fistpl
add
in
daa
dec
pop
sub
outsl
imul
hlt
inc
add
ljmp
jmp
cmp
fcoms
clc
dec
jno
add
mov
and
int
mov
prefetch
mov
ja
pop
std
mov
inc
sbb
adc
push
fildll
inc
pop
pop
push
push
or
lret
pop
inc
outsb
or
jns
xchg
fnstsw
push
pop
or
xchg
sbb
aas
in
fsubrl
sbbl
and
mov
jno
lret
add
add
pop
cli
adc
ret
jb
or
in
aaa
push
ror
shrl
sbb
subl
sar
dec
mov
test
mov
push
inc
adc
sbb
lret
je
add
sahf
ret
xor
jnp
fiadds
out
and
adc
cwtl
mov
adc
pop
and
in
adc
jno
add
mov
idivl
adcb
clc
or
loop
pop
xor
int3
fcom
jne
imul
push
ret
cmpsl
xchg
sbb
mov
jae
adc
push
adc
fmull
add
stos
pop
cld
mov
data16
push
jl
mov
mov
adc
dec
addr16
dec
push
addr16
dec
xchg
mov
emms
jb
sub
jle
mov
imull
cmc
stos
xchg
push
cmp
fisttps
or
inc
mov
sbb
and
mov
lock
jb
scas
sbb
sti
add
or
rorb
pop
xor
outsb
fbstp
xchg
and
cmpsl
push
cli
mov
jg
fidivl
pop
sbb
dec
push
dec
repnz
push
std
test
cmp
stos
pop
and
movsl
sbb
iret
mov
call
test
lret
add
test
pop
pop
sub
or
push
jecxz
inc
jnp
stos
mov
inc
mov
ret
iret
and
mov
scas
jecxz
jle
out
lds
cmpsb
imul
es
mov
test
and
fdivrl
or
push
int
dec
dec
cltd
jl
jnp
enter
enter
cmp
inc
xchg
pop
fdivrs
lods
sub
pop
fs
popf
adc
into
jle
pop
sbb
loope
or
mov
fwait
div
insl
push
pop
out
fdivs
xchg
mov
add
cmpb
and
pop
mov
imul
fcomps
mov
daa
into
adc
cmpsl
loope
add
push
push
jp
mov
jmp
xor
shll
frstor
jns
loop
jo
cmp
rcr
fisttps
add
bnd
xchg
xor
inc
mov
fcomi
in
cmp
dec
rorl
or
or
and
xchg
icebp
sbb
fbstp
outsl
and
pop
popf
mov
sbb
jne
mov
sbb
fnstcw
test
in
mov
mov
mov
sarb
repnz
dec
outsb
or
cmpsb
sbb
add
xlat
or
das
mov
in
les
pop
es
mov
aas
add
sbb
sub
add
inc
loopne
imul
rorb
ljmp
dec
adc
fnsave
xor
xchg
jne
or
adc
or
add
add
pop
je
or
xorl
jno
fs
fisttpl
ljmp
jmp
pop
es
push
sub
divb
mov
cmpsl
lods
push
mov
xor
and
fsts
sbb
lret
add
sbbb
mov
test
jbe
in
cmp
test
xchg
das
dec
andl
fbstp
jecxz
cmp
lea
bound
or
test
lock
pop
mov
hlt
jle
fdivrp
loope
cmc
lea
pushf
mov
je
decb
push
fdivs
iret
or
adc
mov
loop
or
movsl
ljmp
add
rcll
sarb
ljmp
movsb
jne
push
adc
pop
add
js
mov
js
inc
dec
icebp
push
xchg
dec
pop
fcomps
jmp
xor
mov
xor
push
sub
jecxz
iret
sti
mov
pop
sub
pop
mov
adc
sti
and
testb
fnstenv
stos
dec
ljmp
or
lcall
sbb
sahf
xchg
fwait
xor
cmpsb
or
add
aad
stos
lahf
out
fsubrs
mov
out
xchg
pop
mov
push
test
in
jbe
push
jmp
pop
cld
mov
sbb
es
mov
add
jle
les
fcomps
mov
mov
bnd
adc
mov
adc
icebp
es
movsb
mov
movsb
js
es
add
adc
iret
sbb
adc
push
and
jp
jo
or
sub
or
cmc
int
js
xor
ljmp
mov
xchg
and
test
movsb
and
add
movb
incb
ljmp
xor
xor
mov
push
mov
push
test
loope
sbb
push
insl
xchg
sub
rcrb
xor
adc
clc
cs
adcb
repnz
outsl
arpl
shlb
cmpsl
inc
ljmp
lcall
sub
lret
pop
xor
push
push
test
bnd
pop
dec
mov
push
mov
call
fsubrs
mov
divl
scas
mov
pop
cli
pop
mov
mov
or
mov
xchg
push
repz
inc
es
jl
cmp
push
test
dec
das
lock
jns
icebp
jmp
scas
mov
pop
sub
pop
enter
dec
addr16
mov
adc
mov
cmp
push
push
push
adc
sbb
xor
xor
popa
cltd
cmp
ss
mov
in
bound
add
mov
lea
xor
clc
or
pushf
fwait
jns
cmp
sbb
push
std
or
stos
das
movsb
xor
push
lock
push
lcall
xor
shrb
test
and
aaa
cmpsb
mov
gs
cmpsb
mov
rol
int
dec
test
jne
cmp
in
pop
out
ss
cwtl
ljmp
mov
rep
mov
testl
cmpsb
mov
mov
aam
pop
xchg
jl
inc
push
nop
mov
push
int3
mov
fisubs
imul
stos
mov
jns
push
and
mov
stos
sub
fwait
test
pop
jl
scas
adc
sub
scas
clc
inc
movl
daa
jle
push
fcoms
ret
and
mov
and
pop
out
push
out
xchg
mov
mov
orl
ljmp
imul
or
xchg
xchg
pop
hlt
mov
cmp
iret
js
test
mov
cwtl
mov
cli
cld
mov
repz
adc
xor
scas
outsl
test
cmp
cld
cmp
enter
jmp
add
ret
out
lea
lock
or
aad
mov
mov
push
outsl
out
sub
jae
enter
adc
loop
add
and
testb
fwait
and
jns
sbb
jae
cmp
jbe
xchg
lods
add
daa
cmp
adc
adc
and
mov
repz
or
mov
inc
cli
xor
jecxz
jg
ljmp
jp
or
pushl
or
aaa
xchg
int
sub
sub
sbb
sbb
inc
fucomi
std
adc
dec
stos
fisttps
insb
mov
mov
lods
pop
cmp
xchg
gs
xor
push
cmc
orb
js
clc
pop
adc
or
jno
rorb
push
test
push
sbb
jnp
mov
fdivrl
dec
and
xor
xor
daa
in
cmp
adc
pop
pop
cld
mov
insb
cmpb
icebp
add
dec
xor
inc
cwtl
sbb
dec
adc
shlb
jns
xor
sub
daa
sbb
xchg
js
cmp
xchg
lock
xchg
test
inc
scas
icebp
add
scas
imul
add
push
adc
xchg
icebp
adc
movsb
pop
xchg
daa
enter
imul
insl
xchg
sub
jo
cmp
fisubs
add
xchg
lods
xorl
add
lds
cmp
fnstenv
adc
fsubrl
test
fdivrl
or
dec
mov
adc
adc
js
jmp
arpl
fcmovne
mov
rcl
gs
inc
aad
adc
lock
test
dec
loopne
cld
or
mov
rorb
fldlg2
inc
and
jns
or
fisttps
cwtl
push
and
push
stos
cmpsb
into
mov
jbe
cli
cmp
stos
sbb
out
pop
fisttpll
or
sub
dec
sub
dec
cmp
cmpl
and
pushf
sbb
fwait
pushf
test
mov
mov
mov
fiadds
gs
pop
adc
fsubs
enter
sbbl
adc
hlt
shlb
xor
bound
je
xchg
lret
sbb
and
push
clc
mov
sti
cmp
lahf
push
test
stos
sbb
addr16
mov
repz
subl
call
mov
outsl
sbb
movsb
cwtl
pushf
cli
dec
add
rcrb
loop
mov
mov
xor
mov
pop
push
loope
fistps
mov
movsb
bnd
or
cs
xchg
sub
into
inc
xor
or
adc
bound
popa
push
inc
arpl
push
xchg
sub
add
and
les
mov
and
mov
pop
fisttpll
xor
mov
scas
gs
sub
aas
aad
push
add
and
in
push
or
enter
sbb
lods
mov
mov
and
xor
sub
push
sbb
sbb
inc
shll
dec
inc
enter
xor
mov
stc
mov
jae
cmp
scas
imul
imul
outsl
loop
cmp
adc
rclb
dec
ror
cmp
aad
sahf
aad
and
ss
outsb
mov
xchg
popf
cmp
in
movl
adc
xchg
mov
xchg
out
add
clc
into
sub
fwait
sbb
xor
xor
dec
rcrb
push
les
lods
das
movsb
mov
cmpsb
add
jmp
mov
pop
sub
mov
mov
mov
inc
mov
mov
mov
mov
mov
pop
dec
fadd
pusha
out
movsl
or
mov
push
fisubrs
aaa
or
xor
add
push
idivb
ret
and
mov
pop
add
lahf
mov
subb
adc
push
jae
or
inc
sbb
mov
pop
push
lods
sub
xor
pop
repz
aad
pop
in
cmp
push
and
and
es
mov
cmp
imul
sub
mov
lret
or
lods
mov
insb
or
bound
arpl
stos
stos
das
pop
or
xchg
daa
and
pusha
jg
sete
iret
data16
mov
insb
stc
into
mov
sbb
sarb
xchg
push
xchg
xor
je
jb
int3
xor
in
outsb
hlt
sarb
mov
sub
cld
or
loope
popa
sub
xchg
popl
add
xorl
pop
repz
push
push
push
cltd
in
cmp
cmp
sub
lcall
push
imul
sub
scas
jge
mov
aad
mov
sbb
and
cmpsl
call
sbb
jo
dec
popa
scas
lock
xchg
push
jecxz
pop
sahf
ret
cmp
jnp
pop
ljmp
fisttpll
xchg
repz
test
shr
sub
out
and
ret
dec
lea
mov
jo
sbb
xchg
aas
pop
into
adc
decl
inc
icebp
add
pop
push
jl
adc
cmp
xchg
test
sarl
push
or
loopne
xchg
incb
xchg
mov
cld
lret
pmaddwd
mov
or
push
adc
jge
popf
jae
lods
jmp
test
mov
je
pop
adc
push
adc
rcll
jg
cmc
push
es
add
out
or
sbb
rcll
sub
test
dec
adc
call
loope
mov
and
sbb
ja
pop
add
lea
xor
dec
mov
lcall
jno
xchg
mov
and
or
in
popf
cli
pop
xor
jns
or
inc
sbb
movsb
in
out
dec
jns
cmc
fnsave
pop
sarl
push
rolb
inc
xchg
ret
call
mov
sub
and
jecxz
jmp
push
sti
aaa
and
add
jae
push
aam
mov
aam
and
xchg
gs
test
lret
lcall
std
loope
jmp
jo
ret
inc
std
es
cmc
js
insl
xchg
daa
and
lods
adc
jnp
cmp
enter
jb
sahf
sbb
in
adc
cmp
lods
pop
fidivrl
inc
push
xchg
fwait
mov
pop
adc
ja
imul
jnp
sbb
xlat
mov
mov
sbb
add
adc
cmpxchg
dec
mov
mov
pop
mov
inc
out
or
and
js
shll
add
ficoml
in
loope
cmpsb
sbbl
mov
je
insb
jecxz
repz
cmp
in
in
daa
inc
jns
dec
jno
insl
sahf
cli
addr16
popf
aaa
lods
mov
std
subb
std
data16
push
push
out
sub
dec
popf
clc
aam
sub
mov
hlt
and
lods
aam
mov
rcrb
std
xlat
insb
pop
in
jge
into
jo
test
inc
fiadds
xor
sub
jecxz
mov
daa
les
test
addr16
xchg
cli
sti
imul
add
xchg
sub
aas
add
dec
fsubl
add
and
iret
in
sub
movsb
into
negb
adc
decl
inc
sahf
pushf
inc
outsl
insl
stos
pop
sbb
movsl
add
pop
addr16
add
outsl
test
mov
dec
fptan
cmc
fnstsw
out
push
xor
mov
shll
dec
mov
loop
xchg
add
xchg
pop
in
push
into
and
pop
insb
sub
je
loopne
imull
imul
popf
das
pop
pop
add
imul
xor
insl
stos
lods
movsb
sahf
loopne
addr16
mov
mov
ficomps
cmp
fidivrs
jns
xchg
cmpsb
or
pop
add
std
inc
loopne
add
leave
jmp
inc
cmp
hlt
mov
fsubs
outsb
icebp
aam
into
lahf
pop
jp
insb
mov
mov
jecxz
js
loopne
aaa
sbb
lea
out
pop
lret
mov
popf
mov
cmpsb
jle
push
xor
adc
push
jb
jne
xorb
cli
jle
repz
xor
loope
mov
popf
mov
sbb
lds
mov
fcoms
xchg
shrl
sbb
int3
outsb
dec
je
xlat
push
mov
jg
fsin
in
rcrb
andb
dec
or
in
ret
xlat
ja
sbb
insb
ds
aad
dec
ljmp
ficomps
mov
inc
daa
push
nop
push
pop
pop
fdivp
ud2
daa
xor
ss
mov
cs
pop
push
mov
int3
or
add
pop
minps
adc
mov
mov
lock
stos
cld
rcr
stos
stos
psubsw
sub
pop
mov
into
movsl
mov
add
les
mov
cmp
xlat
bound
xchg
and
mov
out
and
pop
mov
shll
jo
gs
push
arpl
xor
stos
mov
test
cwtl
cld
adc
sbb
cmp
imul
pop
xchg
mov
dec
data16
subl
push
ss
mul
mov
mov
ljmp
xchg
sub
sub
push
out
stos
outsl
mov
adc
pop
add
xor
lcall
mov
mov
inc
mov
jp
push
fadds
sbb
cmp
subl
xor
dec
and
insb
ds
in
iret
jecxz
push
or
test
imul
mov
inc
sbb
clc
fstl
cltd
and
lds
mov
imul
jno
dec
mov
or
jne
aas
or
sarl
pop
push
mov
add
loop
pop
push
enter
jae
in
push
adc
mov
push
jno
pop
fsub
pop
idivb
std
aas
push
dec
sbb
stc
out
pop
xor
lret
inc
pop
jne
mov
ret
adc
cs
sbb
pusha
dec
scas
addr16
add
push
add
aaa
and
pop
bnd
mov
fwait
aad
adc
hlt
or
sbb
and
arpl
and
push
adc
xorb
xchg
fildl
cwtl
iret
je
and
aad
fwait
bound
xchg
stos
sti
mov
jns
jmp
imul
test
add
adc
mov
cmp
mov
ss
repz
sbb
pusha
loope
push
jmp
mov
and
movsl
rol
pop
ret
inc
add
xchg
mov
insb
aam
mov
mov
inc
int
cli
data16
inc
xor
fsubl
sti
sahf
push
cli
jge
pop
mov
dec
sahf
sbb
xor
pushf
lcall
inc
inc
sub
das
dec
stos
cmc
imul
in
ret
push
fcomi
mov
out
arpl
dec
mov
pop
aas
fdivrp
test
cld
push
je
adc
cmp
xor
sbb
into
jne
rorb
fildll
pop
sub
mov
push
in
mov
outsb
inc
popa
aas
bound
jb
pop
rcrb
sar
test
sahf
xchg
icebp
imul
jo
fidivrs
dec
leave
mov
les
jl
xlat
inc
cwtl
in
inc
push
mov
sbb
fistps
into
adc
sahf
add
or
imul
outsb
lds
sub
mov
mov
mov
movsl
in
out
notb
jmp
ljmp
pushf
cmp
mov
or
sbb
dec
or
rorl
mov
mov
sbb
mov
hlt
lcall
lds
mov
les
add
fdivp
jp
leave
fwait
imul
outsl
je
mov
fwait
stos
shr
addb
in
fstl
xchg
push
adc
xchg
pop
push
in
cmp
in
lods
mov
xor
iret
mov
iret
xorl
inc
mov
sti
and
call
fwait
xchg
leave
jns
addr16
and
mov
dec
mov
mov
push
add
sbb
cli
sbb
ret
test
sub
data16
dec
mov
jl
out
add
fadds
jmp
push
sahf
mov
add
jnp
jl
push
in
aad
cmpsb
ljmp
mov
xor
and
stc
dec
pop
or
xor
pop
test
pop
or
sub
fiadds
pop
daa
ljmp
and
add
test
pusha
mov
out
dec
ret
enter
lahf
ret
add
dec
jo
jbe
dec
sbb
rolb
mov
cmpl
test
cltd
sbbl
nop
shrl
inc
add
and
or
les
push
or
ret
es
and
fnstenv
dec
inc
adc
mov
and
mov
imul
stos
pop
sti
cltd
xor
and
mov
dec
xor
and
sbb
fs
dec
xadd
push
push
add
pop
shrl
cmp
pop
jge
leave
push
xor
test
aam
rol
inc
inc
loopne
cltd
pop
ret
das
loope
cltd
push
inc
mov
outsl
push
mov
mov
lcall
push
arpl
into
mov
mov
mov
add
rorb
inc
test
or
in
xchg
dec
push
out
adc
popa
pop
mov
mov
cs
mov
notl
cmc
aaa
gs
int
adc
sub
dec
fdivrs
and
inc
push
sbb
sub
bound
hlt
jae
inc
popa
pop
push
xchg
xchg
xor
andl
pushl
mov
sub
fs
test
dec
pop
xchg
inc
in
push
lock
mov
pop
aas
xchg
lcall
test
pop
out
std
dec
aas
leave
sub
test
sarb
mov
fiaddl
jbe
imul
fwait
inc
les
jg
movsb
cli
test
xor
in
loopne
push
xor
mov
jbe
outsb
jmp
mov
push
nop
cmpsl
js
or
pop
mov
sub
xor
lea
loope
or
loopne
imul
cmp
xor
dec
rcl
fisubl
mov
cmpsb
xor
lret
sub
data16
daa
inc
mov
loope
pop
jecxz
mov
bound
mov
mov
cmc
enter
xchg
inc
mulb
clc
lret
add
sbb
mov
add
les
outsl
addr16
sbb
lret
dec
dec
mov
lcall
pop
and
cld
fcmovnb
add
jmp
mov
addr16
inc
aad
decb
jge
cli
pop
ja
cmp
inc
mov
sar
loop
test
adc
mov
test
neg
mov
dec
push
xor
jnp
rcrl
pop
cmpsb
into
test
cli
cmpsl
mov
cwtl
adc
stos
or
call
mov
push
mov
mov
adc
rcrb
dec
push
stos
jne
lret
jle
ss
xchg
xor
shrl
outsl
mov
jl
int
cmp
adc
enter
adc
js
add
mov
mov
inc
fs
cwtl
push
ret
addr16
adc
push
gs
xor
push
stos
xlat
xor
shll
pop
jle
pushf
nop
mov
rclb
loopne
gs
push
ja
stos
popa
mov
cmpsl
xchg
jo
jno
mov
ss
dec
xchg
cmp
data16
inc
fimull
ljmp
add
sbb
add
sbb
aad
mov
out
and
sub
jge
or
addr16
jmp
adc
in
inc
jmp
add
stos
dec
in
and
inc
jecxz
or
mov
mov
mov
repz
sbb
bound
and
fldenv
sarl
ds
sbb
adc
push
xor
mov
jb
test
jns
pop
sub
cmpsl
xchg
dec
mov
movsb
mov
mov
fs
loope
fwait
shlb
repz
push
xor
sbb
mov
loope
in
inc
sbb
cli
enter
roll
jno
add
push
fsubl
inc
int
or
pop
mov
pop
sbbl
pushw
jmp
dec
cmpsb
jbe
stos
sbb
cmpl
mov
inc
loope
movsb
mov
push
test
push
sub
cmc
shl
movq
or
shll
cmp
adc
outsl
cmp
test
hlt
fdivp
dec
repz
test
sub
adc
sarl
inc
jg
pop
popf
sbbb
sbb
cmc
scas
or
cmc
and
push
into
xor
es
inc
aam
test
hlt
dec
mov
bound
jmp
xchg
imul
and
adc
mov
ss
push
jbe
out
adc
ss
pop
inc
xchg
pop
mov
gs
mov
adc
mov
and
lods
sbb
sbb
int3
ret
add
mov
orl
inc
popa
in
idivl
mov
addl
es
jbe
adc
fsubrl
mov
ret
mov
lret
cwtl
leave
mov
cld
xchg
push
and
xor
sti
pop
xchg
mov
push
push
cmp
cmp
gs
xchg
outsl
dec
dec
cmp
push
xchg
mov
loopne
divb
sub
adc
shlb
sbb
add
sbb
pop
and
out
insb
adc
mov
test
pop
jnp
aaa
mov
pop
cs
sub
mov
adc
test
xor
mov
lcall
and
dec
mov
and
or
repz
fistl
fstps
lock
push
je
or
scas
xchg
sub
adc
shl
imul
fwait
lea
out
stc
out
repnz
movb
mov
or
sbb
cmp
dec
popf
xor
mov
xchg
bound
ss
addr16
cmp
aad
or
push
cmc
lea
ret
inc
shl
sub
xor
popl
movsl
ret
push
dec
int
mov
jl
lcall
mov
jnp
sub
inc
ja
gs
inc
inc
ljmp
imul
or
jbe
shl
cld
imul
mov
or
mov
mov
xor
mov
jmp
je
and
or
sub
inc
dec
mov
xlat
dec
shl
fistpll
sub
adcb
gs
loope
mov
fwait
and
cmp
pop
mov
xor
daa
movsl
lds
mov
pop
sti
pop
subb
or
out
fwait
or
add
sti
xor
insl
and
inc
adc
jmp
adc
aas
fisubrl
out
fildl
mov
mov
jnp
icebp
pushf
sti
das
xchg
scas
loopne
or
push
enter
imul
insb
scas
test
sub
stos
nop
jl
dec
jbe
jge
mov
cwtl
push
stos
faddp
fmuls
cmpsb
addr16
mov
scas
cmp
push
and
lahf
cmc
xchg
nop
dec
addr16
mov
xchg
inc
mov
dec
jbe
push
jb
es
std
lods
pop
mov
movsb
add
or
testl
int
inc
add
addl
bound
ret
add
insl
inc
xor
lods
insl
pushf
sbb
mov
data16
stos
shl
mov
cli
leave
dec
inc
test
inc
fisubrl
mov
repnz
cmp
loopne
and
or
sbb
inc
pop
jge
mov
cmp
sbb
mov
xorl
adc
aaa
outsl
pop
xchg
mov
or
add
cli
jae
hlt
dec
adc
or
xchg
sub
add
imul
movsb
imul
jecxz
jle
inc
and
rol
push
movsl
and
aas
movsb
push
and
in
xor
push
pop
sarl
mov
mov
jg
xor
lret
and
sbb
cmpsl
sub
mov
fwait
sbb
in
cwtl
fildl
mov
push
mov
fiaddl
fsubrs
in
sbb
cmp
mov
fsqrt
pop
int3
cmp
mov
pop
ds
or
pop
sub
sahf
ss
in
sub
and
jo
adc
xchg
bound
jecxz
fdiv
add
scas
dec
ret
adc
adc
negb
addr16
clc
and
dec
dec
mov
repnz
xor
cmpsl
into
aad
cmp
mov
mov
push
scas
adc
jecxz
adcl
adc
xchg
pop
cs
mov
or
mov
mov
insb
fwait
and
jl
stos
jecxz
enter
fidivl
pop
movsb
jns
or
inc
sub
and
mov
int
sbb
mov
aam
test
sbb
dec
rcrb
popa
xor
xor
inc
xchg
sbbb
outsl
sbb
cld
xchg
fiaddl
push
push
ret
dec
insl
in
mov
xchg
inc
mov
lods
mov
lret
movsb
xor
pop
scas
xchg
ss
rcll
push
in
lcall
inc
sbbl
subl
dec
adc
jl
dec
add
aad
rorl
cmp
mov
cmpl
test
bt
aam
xchg
pushf
and
xchg
aad
lret
into
gs
js
gs
push
inc
lret
inc
int
popf
push
push
rcll
insb
mov
js
pushf
test
leave
fsubrl
test
mov
bound
adc
xchg
push
enter
dec
and
xchg
inc
int3
pop
jns
dec
pop
dec
xor
add
sbb
lock
sbbl
sbbl
dec
in
shll
fidivrs
shrb
loop
and
mov
push
mov
push
insl
cmp
cmpsb
fmuls
cmp
push
leave
jo
sbb
jne
loope
mov
popl
sti
sbb
icebp
cmp
xchg
mov
test
xlat
mov
std
dec
in
lret
test
lret
repz
jmp
or
mov
adc
jne
dec
mov
out
aas
shll
sbb
dec
js
inc
shll
push
in
cmc
idivl
mov
jo
mov
daa
mov
mov
mov
sbb
jg
filds
jns
arpl
dec
ret
fld
xor
das
shlb
loop
lret
fdivs
sub
jmp
dec
or
out
mov
arpl
cli
mov
sub
aam
mov
fwait
mov
add
xchg
cli
cmp
mov
call
jle
xor
ljmpw
enter
addl
fidivrl
mov
jnp
imul
xchg
mov
ret
outsl
jp
mov
cmc
cmp
fsubrs
enter
jne
add
dec
cmovne
add
push
mov
int3
add
add
pop
mov
pop
xor
mov
adc
jecxz
insb
ss
imul
cmp
pusha
xor
ficompl
sub
cmp
js
mov
sbb
out
repz
sti
and
push
adc
xchg
ror
out
data16
mov
add
mov
sbb
loopne
je
add
mov
and
mov
cltd
into
xchg
iret
inc
pop
cmpsl
adc
pop
mov
outsl
fistpl
aam
outsl
dec
fcoms
in
rolb
out
push
shll
pusha
push
fiaddl
pop
dec
jg
push
ds
jp
sub
repz
ret
mov
push
mov
dec
xchg
push
cmp
pop
mov
rolb
inc
pop
push
or
rep
out
test
outsb
mov
mov
mov
test
movsb
adc
mov
outsb
xor
fs
shlb
je
dec
scas
inc
shlb
xchg
mov
dec
lret
xor
jg
or
ja
sahf
hlt
xor
xchg
and
pop
js
adc
jnp
xor
shl
add
out
shlb
arpl
lret
lods
jg
fwait
jno
push
sarl
mov
sub
add
out
jno
cli
jno
fildll
cmp
jge
popa
nop
addb
xor
jnp
jne
scas
jo
cs
inc
es
ds
xlat
out
inc
push
in
jmp
shl
cmc
or
lock
push
aam
push
mov
jmp
out
xor
ja
push
adc
add
push
aaa
cli
sbb
rolb
adc
inc
decl
repz
pop
insb
sbb
or
mov
popl
push
mov
gs
xchg
mov
push
xchg
cwtl
pop
fdivl
idiv
and
js
xchg
adc
jns
or
mov
call
das
aam
mov
or
cmpsb
gs
cmpsb
imul
test
jne
pop
push
add
add
jbe
fsts
imul
sbb
mov
mov
mov
clc
mov
push
in
testl
dec
xchg
adc
sbb
movsl
pop
arpl
lods
testb
lods
dec
sub
add
pop
flds
mov
inc
push
jl
mov
idivb
or
and
xchg
xor
lock
mov
testb
sub
cmp
mov
icebp
xchg
add
inc
cmpsb
mov
mov
cli
xorb
enter
ficoms
inc
push
call
mov
push
xchg
or
movb
mov
xor
aaa
sbb
xchg
pop
mov
mov
push
movsl
jb
clc
push
push
cmp
fdivr
mov
dec
jo
pop
outsl
mov
out
sub
bound
fsts
in
sbb
add
sub
mov
bound
inc
call
repnz
pop
in
loopne
sbb
mov
sbb
push
add
movsl
out
rcll
in
jp
mov
iret
or
jnp
pop
pusha
shrl
inc
mov
jo
xor
adc
add
loope
lret
mov
cmp
and
cmpxchg
mov
jecxz
or
je
mov
push
notb
pop
cmp
out
pop
xor
daa
inc
push
push
ret
mov
and
push
or
jbe
subb
push
test
cmp
outsb
cmp
or
xchg
sbb
xor
stos
sarl
icebp
push
xor
out
in
shr
pop
int3
pop
call
mov
pushw
mov
or
loopne
mov
xor
jns
mov
ficompl
push
cwtl
fistpll
neg
inc
mov
in
fnsave
cmp
and
sbb
aam
test
aad
cld
xor
push
outsl
fnsave
imulb
xchg
xor
ret
and
push
lcall
mov
mov
inc
les
iret
fwait
adc
mov
jg
aad
fdivs
cmp
addr16
mov
shrb
jno
aas
repnz
in
xor
ja
inc
add
loop
movsb
lret
adc
pop
ja
mov
gs
push
cltd
sub
jnp
cmpsl
inc
call
add
add
add
test
adc
cmp
pop
mulb
movsb
addr16
sub
rcrb
lock
mov
xor
jl
xor
pop
pop
add
imul
jb
push
mov
int3
push
test
jnp
in
xchg
test
push
popf
push
shl
pop
jge
or
clc
popfw
dec
push
cmp
pop
add
pop
call
jg
mov
cltd
ror
cmp
movsl
punpcklwd
mov
mov
sahf
and
lahf
aam
add
fnstenv
pop
arpl
enter
stos
dec
lea
jmp
fisubs
popf
add
push
lcall
push
movsb
pusha
push
or
push
push
rcl
enter
lock
jae
mov
jne
scas
gs
push
repnz
cmp
jp
mov
ds
cmp
lahf
dec
test
or
sti
mov
sub
fldl
xor
mov
push
dec
stc
adc
inc
ficompl
inc
aad
les
aam
and
and
xor
mov
jns
cmpsb
dec
add
pop
cmpsb
shrl
and
pop
stos
sbb
testl
stc
mov
mov
add
jle
pushf
mov
les
int3
outsl
clc
adc
jnp
or
cmp
and
enter
mov
or
in
add
pusha
xchg
mov
jmp
nop
nop
outsb
add
subl
pusha
mov
mov
mov
xchg
jecxz
test
add
push
insl
sbb
push
arpl
outsl
stc
inc
add
dec
or
adc
dec
addr16
mov
cmp
adc
jae
in
in
sub
ss
out
and
adc
stos
mov
mov
dec
mov
dec
adcb
and
or
je
cs
ret
insb
sbb
pop
cld
dec
lods
mov
xor
lods
sub
xchg
leave
popf
mov
mov
cmc
movsl
mov
xlat
sti
dec
fdivl
insb
fisubs
testl
push
out
ja
bound
movsb
dec
add
mov
jge
roll
jne
cmpsl
loop
xchg
test
fs
lret
data16
scas
dec
xor
add
pop
xchg
in
pop
sub
js
pop
sbb
dec
loope
jmp
popa
leavew
add
aam
fcmovne
or
and
ret
xchg
pop
mov
lret
data16
pop
sub
dec
sysret
ljmp
in
sti
pop
mov
test
fdivrs
ja
add
dec
mov
lcall
stos
in
fwait
and
int
mov
rcrb
rcll
popf
iret
lods
and
add
es
movnti
inc
jle
popa
gs
cltd
cmpsb
adc
popf
pop
inc
pop
push
mov
or
out
loopne
and
mov
pop
sub
pushf
repnz
or
sti
movb
add
repnz
enter
shll
fcompl
imull
mov
repz
add
es
mov
lds
xchg
test
adc
cmp
mov
jnp
or
cmpsb
push
or
iret
lods
jne
xchg
test
fisttpll
ret
adc
and
loope
jecxz
mov
out
int3
xchg
out
lods
pop
push
icebp
shll
add
inc
push
sti
pop
mov
push
or
jge
mov
filds
adc
mov
jg
or
mov
add
sti
jp
icebp
je
cmp
mull
push
dec
add
dec
adc
icebp
cmpb
aas
pusha
pop
jg
ss
jmp
xchg
mov
xchg
fcomps
sarl
push
sub
in
pop
pop
push
dec
cmp
mov
push
xchg
jg
andb
sbb
cmpb
sbb
mov
into
dec
imul
mov
rcl
adc
aam
push
cmp
sub
adc
mov
and
add
sbb
jmp
xor
stos
inc
into
dec
pop
in
mov
loop
pop
inc
add
lea
jo
pop
xchg
data16
xor
in
int
ss
lods
fistps
xchg
into
es
xor
sub
jg
notl
mov
iret
push
mov
and
jne
xor
mov
sti
pop
xor
mov
outsb
mov
mov
je
dec
ficoms
mov
loopne
push
int
push
or
xor
jo
sahf
xchg
inc
push
and
and
lcall
std
arpl
cmpsl
js
xor
lret
pop
mov
sub
cmc
sbb
ret
push
inc
cld
add
and
inc
out
pop
jmp
js
enter
bnd
inc
pop
or
cmpsb
mov
pop
jmp
pop
ds
add
sti
xchg
push
imul
lods
pop
cmp
fmul
insl
int3
push
mov
shrl
push
pop
sahf
fdivr
xor
and
loop
xchg
ds
outsl
push
xlat
push
test
orl
inc
fsub
es
mov
pop
xlat
ja
dec
jne
xchg
test
push
stc
push
jno
fs
pop
pusha
jmp
repz
jo
jb
sub
lret
jmp
cmp
push
fists
jne
push
fidivrl
mov
pop
push
lds
ret
pop
nop
mov
pop
movsb
xlat
or
mov
and
ja
mov
fs
cmpsl
xchg
cld
out
test
sti
mov
sub
movsl
in
push
popf
gs
sbb
add
rcrl
ror
bound
cwtl
jb
adc
or
das
fadds
pop
jnp
sbb
lods
jg
jb
inc
cld
xchg
xchg
mov
divb
outsl
andb
stc
stos
aaa
mov
lahf
pop
and
and
fs
jns
cmp
sti
mov
dec
mov
mov
jnp
inc
in
rcrl
mov
aam
hlt
push
push
or
data16
and
ja
xchg
sbb
scas
cld
addr16
and
stos
sub
outsl
cmc
mov
jno
bound
stc
or
add
imul
ret
shlb
lahf
movsl
mov
imulb
test
adc
adc
stc
mov
in
mov
push
dec
push
inc
shl
inc
jae
sti
sti
stos
add
xchg
cmp
jnp
call
pop
cmc
adc
jno
addr16
icebp
fwait
sbb
mov
or
add
lahf
js
jb
inc
mov
lret
push
mov
mov
out
pop
rorl
test
inc
lods
int
rclb
std
xchg
sbb
or
sub
jns
aas
ja
sahf
psraw
dec
imul
das
sbb
cmp
les
jnp
push
sub
iret
sti
push
xlat
sti
add
aad
jl
cli
push
dec
mov
mov
loop
mov
xlat
mov
pop
mov
sub
mov
jae
sub
inc
mov
stc
adc
jnp
in
xchg
xor
ds
cmp
xchg
or
shrl
cmc
daa
mov
mov
add
imulb
fldenv
sub
int3
lea
cbtw
fstpt
xchg
fldlg2
adc
xor
pop
pop
xor
in
sbb
jecxz
clc
cmp
jo
sub
or
shrl
jmp
repnz
sub
scas
lret
call
shrb
movsb
inc
sbb
test
shll
mov
je
addl
pusha
fsubs
out
lea
cwtl
adc
mov
xchg
inc
mov
addr16
jmp
fsts
adc
js
outsb
push
cmp
sub
sbb
movsb
aas
lock
xor
sub
aam
es
fucom
cmp
insl
push
and
pushf
fld
jecxz
leave
jmp
in
mov
pop
jne
jle
adc
mov
xor
rorl
push
int
outsl
mov
ret
inc
fbstp
pop
dec
inc
adc
mov
pop
aad
jns
jl
adc
clc
pop
outsl
push
mov
int
pushf
bound
cltd
mov
jno
cmp
je
cld
fs
lcall
pop
cli
xchg
dec
cmp
inc
ljmp
and
jns
cmpsl
bound
in
mov
loop
cmp
push
dec
data16
adc
popa
cmp
mov
fisttpll
push
jg
pushf
dec
lcall
call
aaa
inc
cmp
ret
dec
sub
inc
rol
mov
aas
and
divb
push
jg
repz
dec
repnz
push
mov
pop
cmpsl
imul
andl
cmp
sub
or
adc
stos
sub
or
or
jmp
mov
ret
outsl
gs
lret
jbe
xchg
mov
mov
out
add
mov
and
cmpsl
imul
test
mov
into
test
rorl
jp
call
xor
dec
and
fs
mov
push
fnsave
dec
in
pop
cmp
add
xchg
sub
fldenv
cmp
hlt
sub
cmp
xchg
std
inc
sub
mov
stos
add
test
dec
pop
push
inc
lea
sbb
cwtl
lods
lock
in
adc
inc
inc
loop
fisttpl
pushf
popl
jb
testb
or
je
gs
stc
pop
leave
lds
aad
lods
rorl
test
fwait
mov
push
fstps
in
pop
and
mov
outsb
push
sahf
adc
ss
movsb
cmp
jns
xchg
inc
testl
mov
pop
call
lcall
xchg
pusha
mov
rclb
rorb
addr16
xchg
in
xor
aad
add
adc
popa
sbb
push
out
dec
xor
stos
or
mov
insl
loopne
dec
rcll
cmc
fsubs
mov
sbb
imul
lock
fbld
jnp
in
into
arpl
test
and
sbb
push
pop
lahf
pop
sub
or
push
xor
dec
ja
jno
jno
sbb
sbb
cmp
call
and
subl
mov
daa
or
xlat
mov
push
jbe
mov
mov
cli
bound
test
mov
jle
pop
pop
push
mov
jb
insb
ja
cltd
cmpsb
xchg
in
aad
testb
lahf
mov
gs
stc
sarl
xorb
sub
push
cmp
mov
inc
loopne
aad
jno
jne
out
sbb
fnstenv
push
inc
in
xor
das
xchg
faddl
jge
aam
push
imul
push
lds
adc
mov
sbb
decb
sbb
push
es
fadd
popa
clc
xchg
pusha
sbbl
dec
int
in
and
bound
cli
sbb
xchg
das
xchg
lret
pop
push
dec
lods
repnz
or
dec
dec
jne
ss
jle
jno
jo
push
fisubs
fstpt
push
loope
adc
imul
testl
cmpsl
pop
cmp
xor
xor
clc
loopne
mov
mov
fimull
scas
lret
inc
xor
popf
cli
je
dec
sbb
sub
xor
jns
fmull
adc
sub
jns
stc
xor
hlt
cmp
adc
and
pushf
stc
and
xor
fistpll
cmp
ja
and
xor
ljmp
mov
inc
jg
push
adc
adc
push
jmp
mov
mov
push
jecxz
stos
aaa
or
loope
outsb
add
mov
sub
icebp
push
jb
dec
lds
pop
add
addl
stos
or
xchg
aad
scas
shrb
sbb
cwtl
fisubrs
xlat
pusha
jae
out
sub
adc
cmp
mov
aam
mov
js
int3
shlb
call
popf
inc
jp
pop
inc
mov
add
iret
lock
not
adc
pop
adcb
cmp
add
xchg
out
iret
add
ljmp
mov
mov
sbb
movsl
adc
enter
pop
ret
xor
gs
mov
jae
ret
lret
add
dec
je
mov
daa
push
sub
fs
fnstcw
sbb
cmp
mov
lret
ss
and
hlt
loop
loopne
in
jmp
cltd
sbb
push
dec
xchg
jnp
repnz
es
dec
push
shrl
stos
fdivs
dec
clc
loope
xchg
add
jo
sub
clc
mov
mov
rcrl
das
push
into
test
inc
shlb
or
adc
into
data16
cmp
in
sbb
enter
push
or
lods
cmp
pop
fdivs
and
mov
lock
lods
lds
jb
and
frstor
adc
mov
mov
mov
stos
clc
fimull
lahf
out
jae
cmp
out
inc
adc
fs
jmp
test
insb
adc
fisubrs
pop
cmp
pop
lret
mov
arpl
lods
cmp
mov
in
cmp
pop
ss
inc
cmpsl
out
pop
adcl
mov
std
jnp
or
clc
adc
jb
pop
push
sbb
dec
or
rolb
jb
sbb
dec
lds
add
shlb
leave
lods
out
or
repz
aam
mov
push
pop
mov
icebp
fsubl
mov
jb
pop
ja
push
in
stos
out
cwtl
popf
bt
adc
ja
jbe
jo
mov
mov
adc
popf
pushl
cmp
push
jno
inc
clc
std
mov
push
jno
jl
adc
icebp
sti
aam
in
rolb
push
int
push
fwait
inc
xchg
mov
mov
inc
mov
push
sbb
fstpt
jecxz
adcb
jns
clc
test
pop
in
cmc
xchg
jbe
ret
inc
jge
jb
cli
icebp
adc
cmc
sub
cs
ljmp
test
sub
add
shlb
inc
push
int3
scas
lret
std
and
sbb
mov
pop
leave
inc
xchg
arpl
inc
call
rcll
or
fcomps
in
insb
xchg
jbe
xchg
daa
inc
add
xchg
test
test
lock
mov
mov
leave
xor
pop
lret
in
cmpsb
js
dec
sti
mov
jecxz
dec
sti
enter
rorl
cld
and
popa
ret
cmpsb
adc
sbb
test
mov
outsl
push
mov
inc
jg
negb
arpl
dec
out
adc
ja
fnstenv
divb
arpl
aam
push
int
hlt
stc
mull
jmp
sub
xchg
jmp
sub
push
imul
xor
into
mov
aam
inc
pop
adc
pusha
push
cmp
lret
fistl
and
and
inc
loop
je
enter
mov
jo
push
pop
and
lret
lds
shlb
jnp
or
lcall
cs
loope
inc
testb
mov
xchg
add
adc
test
insl
out
mov
insl
in
popf
mov
fwait
movsl
das
push
shll
jp
or
mov
mov
dec
dec
pop
out
fdivs
sbb
push
loopne
nop
xor
test
in
aam
sub
and
or
xchg
scas
jo
and
sub
movsb
dec
push
pop
dec
mov
lret
fcoms
psubusw
test
testl
mov
pop
ret
mov
jnp
and
popa
sbb
aas
inc
dec
push
pusha
leave
fwait
bound
mov
cmp
out
loop
icebp
out
xchg
dec
xchg
mulb
aas
or
addr16
nop
xchg
clc
lods
mov
adc
dec
push
aas
clc
sbb
push
ret
jae
mov
out
lods
idivl
dec
sub
pushf
loopne
adc
gs
ljmp
rol
out
fisubrl
lret
dec
inc
adc
mov
adc
inc
aaa
cltd
lahf
dec
pop
fcmovnu
outsb
stos
adc
subb
push
jbe
xor
lcall
js
pop
dec
mov
scas
jne
gs
dec
int
jmp
call
pop
rcll
pop
movsb
or
lcall
adc
iret
push
int3
add
sbb
inc
inc
enter
int
fistps
mov
in
mov
xor
rorb
sub
scas
fdivrl
or
adc
repz
mov
xchg
xlat
cltd
xchg
jbe
into
syscall
cmp
movsl
push
in
adc
popf
scas
or
mov
push
sub
add
andb
lods
cmpl
es
lahf
loopne
ljmp
adc
inc
pop
dec
pop
mov
xchg
testb
pop
fwait
cli
push
cltd
jnp
out
or
pop
xor
xchg
repz
adc
jle
mov
testb
pop
cli
push
jbe
mov
out
push
je
aam
and
pusha
in
inc
mov
sub
adc
xchg
unpckhps
xor
xchg
pop
adc
cltd
mov
mov
lods
subb
dec
les
out
ljmp
cmp
movl
mov
arpl
push
push
mov
mov
popf
outsl
les
int
inc
iret
ss
scas
mov
xor
mov
adc
rclb
cmpb
xor
pop
bound
clc
push
lock
xchg
clc
clc
outsb
add
in
imul
iret
pop
jl
rclb
jnp
call
movsb
sbb
mov
sbb
and
leave
cmp
sbb
in
bound
and
nop
les
sub
and
test
cmp
inc
jmp
test
push
add
and
hlt
lds
lods
dec
and
pusha
cli
aam
lcall
or
mov
roll
sub
out
imul
shlb
mov
sub
cmp
bound
cmp
xchg
ret
cld
mov
dec
cmpb
jo
int
cmp
dec
xchg
mov
dec
xor
dec
add
mov
inc
pop
lods
and
jmp
cwtl
mov
in
push
push
inc
or
push
mov
push
das
jecxz
fmull
cmc
in
pop
dec
mov
dec
sub
mov
hlt
fimull
icebp
cmp
outsb
sbbb
jecxz
leave
mov
push
mov
jp
pop
inc
add
gs
sub
adc
testl
call
pop
daa
cmp
mov
and
lods
pop
adc
pop
jnp
inc
jp
pusha
and
imul
xchg
add
hlt
fsts
mov
jb
sbb
mov
dec
adc
cld
mov
jae
cwtl
gs
jne
pop
out
rorl
dec
lods
mov
iret
mov
jno
push
es
aam
xlat
pop
or
sub
and
fwait
loopne
mov
cmc
cmp
adc
clc
cmp
adc
pop
mov
shl
pushf
mov
movsl
inc
xchg
pop
mov
loope
sbb
loop
xchg
push
sbb
sbb
fistl
or
xchg
mov
or
sub
pop
and
addr16
dec
and
xchg
mov
imul
and
adc
cmp
xor
popa
mov
xchg
in
bound
mov
add
jmp
mov
xlat
frstor
insl
dec
stos
js
in
das
sub
insl
pop
push
dec
xor
fildll
cmp
push
das
test
push
cld
jge
mov
shl
imul
jo
sub
cltd
rcrl
dec
xor
shr
dec
insb
add
mov
jnp
and
call
imul
cmp
dec
sbb
mov
lods
sti
std
mov
pusha
test
add
jge
call
sbb
fstpt
pushf
xor
cltd
stos
dec
imul
stc
pop
and
iret
mov
cmp
das
mov
sbb
mov
mov
addb
fldenv
pop
or
outsl
xchg
push
sbb
dec
pop
and
xchg
adc
sub
fbstp
adc
inc
add
pop
jno
xor
jb
int3
mov
mov
movsb
push
push
imul
sbb
out
outsb
add
ret
data16
jg
fwait
sarl
cld
add
and
lds
in
push
mov
scas
lret
mov
rcl
xchg
pusha
mov
push
scas
jle
push
divl
addb
lret
pop
int
popf
imul
pop
pop
pop
and
mov
orb
sub
out
mov
pusha
jl
push
or
sbb
lods
jl
cmp
repnz
inc
and
mov
adc
inc
js
clc
and
mov
lock
shrd
dec
push
aad
pop
stc
jns
sti
addb
pop
or
pop
stos
fists
mov
shlb
mov
inc
dec
in
xor
push
fsub
aad
jl
mov
jg
sub
jmp
jne
rol
cmp
sub
pop
out
call
push
out
inc
or
mov
push
into
jge
xor
mov
fdivrs
and
xor
or
jns
mov
adc
mov
shr
dec
repz
or
cmp
and
sbb
out
push
push
rcll
loop
and
adc
fimull
jno
ja
cwtl
shlb
insl
shll
outsb
aaa
and
repz
push
adc
mov
mov
pusha
dec
mov
or
ficomps
xor
sub
clc
jle
push
in
out
pusha
pop
push
pop
inc
out
push
adc
mov
mov
idiv
sbb
int
mov
push
cmp
sbb
imul
sub
rcr
mov
add
out
mov
cwtl
dec
sti
xor
push
pop
jo
cmp
lds
pushf
int
insl
sbb
cmpb
sbb
sub
stc
movsb
arpl
je
dec
movsl
sub
test
xlat
add
fs
mov
cmp
and
jo
pop
cmp
ja
aam
in
mull
rcpps
popa
aas
mov
call
or
sub
pop
sbb
leave
idiv
insb
xchg
leave
scas
pushf
mov
mov
sbb
xchg
mov
cmp
sbb
cmp
bound
or
add
std
dec
jmp
jns
sbb
pop
ret
xor
mov
xchg
lahf
scas
mov
popa
jmp
adc
test
inc
pop
test
fcoml
adc
adc
hlt
hlt
test
imul
arpl
push
pusha
push
sbb
leave
jmp
mov
jae
call
or
push
and
pop
mov
cmpsb
cltd
jl
cmc
nop
out
push
lahf
in
ror
add
or
sbb
xor
data16
scas
or
aad
outsl
rol
rcrl
pop
jg
inc
je
cltd
jl
dec
pop
adc
add
jecxz
rorb
clc
jae
int3
mov
xchg
cmp
inc
out
lret
lcall
jle
xor
fwait
sti
mov
pop
or
mov
xor
ds
sub
ss
jo
bound
vzeroupper
ljmp
pop
loopne
adc
or
jmp
xchg
negl
sahf
mov
pusha
mov
scas
inc
sub
dec
adc
pop
leave
push
push
push
push
pop
test
and
outsl
out
dec
push
icebp
mov
cmc
in
dec
sarl
mov
cmp
add
in
hlt
or
insb
or
push
cmp
dec
mov
dec
pop
cmpsb
push
fidivrl
sbb
sbb
scas
push
test
es
lahf
push
mov
jl
sub
cmp
xchg
sub
dec
mov
adc
mov
xor
rolb
cmpsb
movsb
push
cmp
adc
or
inc
jo
and
cmc
and
sbb
in
test
cmc
jmp
ss
iret
ds
notl
inc
add
pause
popf
mov
mov
adcb
mov
lock
clc
dec
jp
por
cmp
pop
sub
sbb
dec
cmpsl
mov
outsl
out
pop
and
call
pop
sub
sub
das
adc
sbb
fbstp
push
imull
fmull
mov
jbe
sbb
jmp
or
jb
repnz
repnz
jbe
or
std
jmp
pop
mov
inc
jge
push
inc
movsl
pop
ret
xchg
orl
inc
sub
pusha
loopne
inc
push
inc
insb
lcall
jns
rcll
push
add
dec
es
jnp
sub
mov
leave
jo
sub
lea
outsl
ljmp
mov
jb
mov
sbb
or
xlat
sub
pop
popa
sarb
testb
jns
mov
ret
add
or
std
pop
adc
subb
adc
xor
add
or
fdivrp
fdivrl
dec
in
inc
adc
sub
sub
or
push
sbb
andl
xor
jno
aaa
shrl
jl
dec
xor
outsb
dec
xor
scas
in
xchg
scas
out
stos
push
mov
mov
cmpsb
test
cmc
ljmp
nop
xchg
sub
les
ljmp
cltd
jb
xchg
xchg
dec
cmp
frstor
cmpb
imul
lcall
pop
inc
ss
mov
ret
out
stos
dec
and
cld
xor
popf
lods
jmp
push
mov
adc
addr16
sub
fisubl
dec
imul
sbb
and
mov
mov
fwait
xchg
mov
adc
ljmp
mov
aam
mov
out
sbb
ljmp
test
imul
cmp
sbb
scas
dec
xchg
mov
fnclex
int3
fdivs
imul
mov
stos
and
pushf
or
push
cmp
imul
in
imul
adc
push
lods
xor
fisubrs
lcall
mov
repz
gs
adc
push
mov
mov
int
cmp
incb
pop
mov
push
inc
cmp
les
sub
push
ret
out
pop
or
or
in
and
cmp
jmp
popf
xor
into
idiv
sub
xchg
ljmp
xchg
and
dec
bndstx
sub
test
mov
add
mov
xor
or
cld
xor
adc
fstpt
and
gs
cltd
aad
lahf
fwait
jge
add
jne
mov
jp
adc
fwait
inc
ret
jns
add
mov
lcall
leave
pop
xchg
hlt
lcall
pop
hlt
and
cs
loop
scas
add
mov
or
call
dec
inc
imul
push
fsubrs
outsb
pushf
loopne
push
outsb
pop
lea
xchg
fstpl
mov
push
jne
sub
pop
test
imul
pusha
xchg
mov
cmpsb
rcrl
lds
arpl
mov
or
fistps
cmp
lods
test
sbb
ss
sub
xorb
mov
lcall
stc
aad
inc
jp
add
pop
and
mov
in
mov
ds
lahf
dec
and
adc
mov
add
mov
enter
test
lahf
adc
mov
jnp
sub
adc
ja
aad
xchg
hlt
bound
mov
add
inc
or
push
push
jmp
scas
cmpsb
xor
mov
xchg
mov
icebp
mov
xchg
test
xor
push
subb
adc
in
sbb
and
jns
ficoms
sbb
aam
and
mov
xor
mov
subl
test
jp
pop
js
out
mov
in
mov
ds
xchg
xorb
cmp
stc
out
popa
mov
xor
out
out
cmpsl
out
push
sti
pop
lds
arpl
and
cmpsb
leave
inc
sbb
sbb
cmpsl
mov
xchg
pop
mov
adc
iret
dec
jne
aaa
adc
or
rcl
daa
adc
dec
xchg
push
cs
repnz
sbb
ficoml
into
roll
xor
lahf
sbb
push
jae
xchg
lret
movsb
stos
sbb
js
movsl
lods
inc
sbb
pop
adc
push
lock
gs
cmp
jo
sub
hlt
add
inc
stos
mov
cmp
jl
test
addb
lret
mov
sbb
in
in
fcomps
lea
stc
pop
lods
std
ret
lods
ds
xchg
sbb
int
icebp
inc
repz
cltd
es
mov
popa
leave
aad
sub
roll
leavew
sub
rcrb
push
dec
jmp
fsubrl
cli
orl
jno
rcl
sub
jmp
fisttpl
dec
xchg
cmpsl
push
aaa
add
jne
test
testb
mov
push
insb
pushf
addr16
push
fidivrs
mov
je
js
cmp
test
mov
mov
testb
cs
jns
mov
popf
cltd
pop
test
mov
jmp
enter
xlat
push
cmp
inc
int3
xchg
aaa
xchg
aas
mov
in
pop
inc
cli
mulb
xor
str
sbb
push
lret
xchg
daa
xchg
dec
lcall
fdivs
push
cmp
add
rorb
int3
xchg
roll
dec
or
orl
icebp
mov
sbb
test
lcall
and
lret
xchg
jp
and
imul
push
jle
xlat
xchg
aad
imul
ss
jecxz
or
pop
rcrb
icebp
xor
jp
js
cmp
shl
in
sahf
cmp
adc
ret
jnp
loope
sub
mov
jp
jne
push
cwtl
mov
int3
scas
sub
imul
adc
inc
mov
push
jo
jge
adcl
lahf
cltd
stc
in
jo
stos
repnz
add
mov
push
mov
and
cmpxchg
rcl
xchg
test
cld
fmul
arpl
xchg
out
lcall
ds
push
fisubs
mov
mov
fiadds
push
xchg
push
popa
mov
stos
rclb
loop
dec
push
cwtl
lret
std
mov
mov
inc
rcr
mov
popf
repz
mov
or
aas
mov
cmp
inc
xchg
jnp
fimuls
pop
push
inc
popa
cmc
add
pop
in
pop
push
rcrl
sub
dec
fidivl
outsb
mov
test
divb
and
ftst
aad
cmp
aad
xchg
pushf
push
mov
xchg
aam
cltd
outsb
and
flds
xor
xchg
or
roll
and
mov
inc
dec
mov
jb
sbb
adc
dec
xor
enter
repz
cli
lock
hlt
add
dec
shrl
adc
out
mov
push
jp
mov
cmp
sarl
adc
jecxz
mov
mov
and
sub
add
repz
pop
sbb
mov
gs
mov
movsl
int3
aam
pushf
jge
lret
inc
push
shl
push
lahf
fnstcw
add
call
xor
lcall
cmpsb
in
je
push
sbb
es
jl
in
aad
test
jo
or
push
ljmp
ja
lahf
add
cltd
into
or
nop
mov
loopne
jbe
and
sbb
jmp
sub
mov
xchg
push
je
aad
ds
fists
push
callw
mov
addr16
sbb
cld
sysenter
add
in
xchg
aas
js
jle
cmpsl
shll
or
or
cmp
lods
sahf
jns
cmp
fmuls
jnp
jle
pop
lods
or
insb
mov
xor
imul
dec
cld
lret
push
adc
cmp
inc
cmp
xchg
adc
jge
in
mov
mov
out
enter
mov
cmp
mov
inc
sub
mov
dec
pop
lods
aad
inc
sub
pop
pop
cmp
add
mov
pop
adc
testb
inc
movsb
lea
jge
xchg
lods
mov
or
dec
insb
mov
mov
scas
test
pop
mov
or
mull
lahf
cltd
in
into
ficomps
fsubrs
pop
lret
cli
jmp
je
mov
fs
sub
aad
clc
dec
arpl
lea
mov
popf
sti
test
or
dec
rol
mov
add
jg
lods
loop
mov
jle
imull
adc
cs
sbb
scas
mov
lock
mov
xchg
xor
cmc
cmpb
sti
cmp
fwait
aaa
add
adc
push
packuswb
mov
push
add
or
add
lret
call
fisubrl
roll
js
std
mov
push
arpl
into
addb
cld
xor
pusha
sub
movsl
push
repz
xor
cmp
bound
fsub
aaa
xlat
adc
ret
addps
jg
jg
sbb
lea
and
ljmp
cmp
ret
jp
push
ljmp
jp
pop
daa
mov
repnz
scas
popf
adc
mov
fisubl
mov
insl
fucomp
je
add
ja
gs
inc
ljmp
daa
cmp
das
scas
testb
lods
in
movsb
arpl
mov
and
adc
dec
or
int3
fsubrl
movsb
or
addb
cmp
repz
test
cmp
fnstenv
lods
and
push
lods
scas
fs
imul
mov
outsl
mov
sbb
cmpsl
lahf
mov
or
ja
or
or
xor
push
xchg
mov
jb
jl
xor
dec
fisubrs
shlb
or
mov
pop
add
mov
xchg
out
xor
orl
insl
push
and
scas
ja
in
cmpsl
cwtl
xlat
xor
int
ljmp
dec
push
xchg
divb
jge
fwait
pop
jp
push
xor
rorl
mov
pop
fwait
int3
mov
push
pop
imul
jno
sbb
push
mov
push
fs
lret
in
dec
fdivs
loope
inc
std
xchg
dec
scas
and
rcrl
xor
lods
jo
dec
xlat
daa
adc
hlt
mov
inc
shll
imul
ds
inc
pop
push
imul
shr
in
mov
ljmp
outsl
xor
jge
xor
js
in
stos
jb
xor
jmp
nop
or
icebp
and
xchg
out
int3
mov
lret
pop
ljmp
adcb
push
out
nop
push
inc
jbe
loopne
lret
cmp
jb
rep
in
mov
test
xchg
and
fdivrl
push
mov
mov
inc
sbb
cmp
pop
popa
leave
insb
movsb
dec
push
in
cmpsb
push
sub
inc
sti
stc
pop
ficoms
lea
mov
mov
mov
cs
jno
sub
cmp
in
push
sub
lret
xchg
aam
jmpw
add
or
jl
hlt
jge
add
rorb
adc
xor
shlb
lahf
jbe
cmp
cmp
es
test
jb
lock
fcoms
data16
xchg
mov
jns
fcmovu
sbb
cli
pop
pop
and
push
in
mov
push
add
cmp
aas
sarl
push
xchg
stos
gs
fldlg2
out
and
mov
les
pop
cmp
pop
imul
insl
mov
subb
xchg
push
and
add
cld
cmpb
lods
js
adc
sbb
jbe
xchg
stos
aad
jg
int3
mov
test
in
jg
mov
outsl
dec
adc
enter
add
cmp
aas
jmp
adc
daa
outsb
aas
andb
imul
mov
je
cmp
add
add
jg
or
dec
addl
cmp
xchg
pop
mov
mov
inc
jg
mov
pop
pop
pop
pushf
sbbb
fwait
movsl
aas
fists
adc
dec
push
test
ss
mov
pop
int
sub
xchg
sbb
fstl
daa
into
ds
rorb
movsb
mov
notb
push
add
out
icebp
pop
cli
clc
push
xchg
inc
pop
or
jns
mov
inc
pop
cs
loopne
mov
push
scas
sahf
sbb
ds
adc
gs
jbe
imul
loope
mov
int
mov
repnz
or
outsl
add
xchg
loop
fucomi
das
add
adc
xor
pop
and
stc
test
and
add
data16
mov
das
jge
cmc
hlt
stos
int
addl
test
pop
out
jmp
or
pop
sub
nop
or
cmp
jmp
into
mov
inc
jne
adc
jmp
fadd
jle
sub
adc
or
pop
mov
popa
mov
out
out
xor
push
adc
jge
sbb
xlat
pop
int
inc
outsb
sub
sarb
sub
js
sti
fsubrs
pop
mov
call
stos
inc
in
xor
adc
in
xchg
inc
push
push
push
mov
and
jbe
mov
push
xor
sub
mov
xchg
movsl
jbe
inc
lea
xchg
stos
mov
sbb
popa
mov
fnstsw
icebp
lods
fwait
ja
test
lds
add
or
push
aaa
push
stc
iret
je
cmpsb
push
mov
mov
xor
adc
xchg
and
aaa
adc
lock
shll
sahf
rcll
rorb
lret
dec
sbb
xor
lea
fcomps
inc
out
adc
loop
dec
fldz
pushf
jl
xchg
and
mov
nop
pop
test
jl
out
lea
adc
out
int
jge
pop
mov
jne
push
mov
out
gs
lret
mov
cli
sbb
mov
loope
jnp
jb
shll
lea
lods
inc
outsb
inc
stos
repnz
xchg
lock
add
lret
xchg
repnz
int3
fcmovb
mov
or
cmp
push
or
push
mov
aas
lea
add
adc
and
fsubrp
pop
daa
cwtl
add
test
inc
xchg
mov
sbb
inc
fistpl
lcall
adc
push
xchg
lds
test
mov
inc
jmp
sbb
xchg
mov
dec
cld
loopne
jae
add
jmp
inc
dec
mov
leave
orb
mov
adc
cltd
jnp
test
fs
pop
mov
inc
dec
dec
lods
lea
or
leave
inc
mov
add
jl
pop
mov
aam
jp
icebp
cs
mov
and
fcmovnu
sahf
sub
lret
cmpl
je
ja
inc
or
sbb
add
jmp
push
jg
adc
icebp
lcall
int3
jle
clc
sub
inc
out
jns
hlt
lods
sbb
mov
sbbl
inc
cs
xchg
or
int3
mov
loop
mov
mov
aam
in
in
insl
jle
xchg
jp
aas
minps
sbb
adc
mov
fsubl
add
aas
mov
sub
mov
into
jb,pt
dec
cli
jns
cmp
cmpb
mov
lret
addr16
or
xor
xor
shll
mov
jnp
xchg
outsb
pushf
or
xchg
inc
idiv
data16
add
loopne
nop
adc
pop
cmp
pop
dec
je
cmpl
gs
xor
push
lcall
sub
dec
lahf
data16
sub
jo
mov
and
xchg
clc
mov
sub
mov
mov
cmpsl
inc
jp,pn
data16
outsl
and
ret
inc
lret
jnp
mov
loop
dec
sbb
sbb
decl
xor
mov
out
les
out
dec
jecxz
xor
cmp
subb
cmp
cld
xchg
loop
test
xchg
add
sbb
xorl
pop
jecxz
lds
test
dec
fcompl
xlat
jns
test
and
mov
clc
clc
add
mov
lret
cmc
ficompl
inc
imul
push
cld
cmpsb
inc
pop
push
mov
push
adc
cmpsb
rolb
lret
mov
or
aas
nop
or
mov
aad
jecxz
inc
dec
call
dec
inc
out
lahf
cmp
mov
cmp
mov
mov
pop
sbb
lods
clc
pop
test
leave
cs
sbb
mov
js
inc
xchg
imul
divl
popf
xchg
sti
shlb
movsb
outsb
into
test
les
jp
bound
lods
mov
jo
not
aad
add
mov
cmpsl
jo
sub
mov
mov
pop
adc
rorb
jns
enter
pop
mov
dec
pop
stc
rcrl
adc
and
fsubrl
dec
jae
and
push
or
or
mov
addr16
xor
dec
pop
sbb
mov
lds
mov
jbe
xchg
mov
cmp
lods
xchg
sbb
stc
xchg
sub
dec
jo
push
aaa
jno
and
test
xchg
fbstp
fwait
test
cwtl
xchg
jae
out
mov
xor
xor
testl
rorl
cmc
ret
cltd
std
push
jno
neg
mov
xchg
ja
gs
or
cltd
or
mov
iret
xchg
jae
push
mov
shrl
cwtl
popa
pop
adc
outsb
cmc
dec
iret
int
hlt
cmpsl
ficoml
push
out
mov
sub
inc
sbb
cmp
call
mov
and
movsb
add
mov
pop
test
jle
ficompl
fistpll
adc
mov
clc
rcll
fdivl
dec
pop
sub
clc
je
lods
adc
add
sub
inc
and
jno
and
inc
xchg
mov
mov
cmpsb
xlat
std
adc
cwtl
fwait
pop
pop
mov
add
psllq
add
ss
pop
push
jecxz
mov
jb
xchg
aaa
add
outsb
hlt
jmp
ret
sti
mov
push
cltd
std
adc
push
pop
adcl
mov
sub
cwtl
movsb
bound
stos
aam
addb
cmp
mov
dec
xchg
ret
and
scas
dec
fwait
ss
ret
and
jmp
in
cmp
or
lcall
xlat
add
pop
ret
aam
xchg
pop
mov
hlt
pop
xor
std
jns
dec
paddq
flds
pop
in
out
movsb
fdivrl
sbb
mov
cltd
shll
mov
cmp
fs
xor
jbe
jmp
or
sub
call
and
mov
pop
jmp
cmp
jbe
mov
xchg
fs
push
mov
loope
dec
das
jle
jnp
lods
xlat
sbb
sub
jae
scas
or
sub
pop
xor
xor
mov
mov
push
mov
dec
testb
cmpsb
roll
mov
xor
inc
pop
jp
ja
in
and
in
in
and
mov
inc
or
xor
xchg
add
je
pop
iret
dec
and
pop
fldl
xchg
in
xchg
loope
or
dec
repnz
mov
push
stc
xchg
fistpll
dec
mov
mov
repz
push
clc
in
cwtl
push
clc
mov
aad
dec
rorb
mov
sbb
fcmovnb
cmp
js
xchg
call
sbb
mov
movsb
mov
or
rcl
jecxz
fdivp
leave
and
mov
shlb
xchg
xchg
out
fcmovb
mov
cmp
xchg
add
cli
sbb
inc
dec
and
or
mov
int
pusha
ret
shrb
call
mov
add
jno
xchg
out
out
mov
ja
adc
aas
dec
adc
icebp
jb
adc
sbb
add
adc
stos
jg
sub
aas
and
jb
jae
mov
scas
pushf
add
xlat
popa
xor
insl
jnp
pop
jb
es
ja
inc
in
cmp
ljmp
add
subb
loopne
mov
loop
mov
pop
js
in
das
add
leave
ljmp
xor
sub
pop
cmc
lahf
fnstcw
xchg
loop
mov
lret
mov
jp
jle
push
cmp
or
dec
out
leave
and
fdivs
mov
cmp
adc
inc
pop
rolb
test
jb
js
xchg
xchg
jle
pop
cmpsl
jns
loope
ljmp
js
out
pop
inc
push
test
nop
rolb
sahf
loopne
flds
cmc
jae
test
xchg
or
pusha
push
adc
subl
mov
push
dec
add
xlat
cmp
pop
es
pop
cmpsb
pop
popf
add
stc
push
sub
movsl
pop
leave
xor
pushf
xchg
jae
outsb
rolb
sub
mov
jae
add
shrb
pop
adc
fiadds
jnp
mov
and
sbb
inc
push
lahf
pusha
sbb
sti
and
xchg
and
cli
ret
pop
xor
xor
jae
cmp
mov
xor
cmc
pop
cmpsl
push
es
jl
test
jne
repz
sahf
mov
adc
fdivs
adc
lahf
adc
push
inc
or
xor
rorb
mov
je
dec
push
lods
std
clc
adc
das
xor
xchg
pushl
pop
push
push
out
pop
cli
in
and
hlt
or
cli
mov
cwtl
and
inc
mov
dec
or
je
cld
subb
rorl
add
sbb
mov
and
imul
pushf
cltd
jecxz
cmp
lret
arpl
push
loop
icebp
aas
add
sbb
adcb
adc
stos
cli
xchg
lret
fdivs
xorl
and
mov
mov
add
xchg
hlt
aas
mov
rcrl
sub
push
data16
add
test
cmp
cmp
xchg
inc
negb
out
imul
mov
push
jmp
add
xlat
addb
jae
hlt
mov
cmp
leave
push
aaa
subl
std
mov
es
jbe
or
out
inc
shll
subl
cli
mov
push
int
xorl
js
or
out
add
inc
add
push
or
xorb
int
sub
int3
xor
cld
push
add
xchg
xchg
or
or
dec
fidivs
testb
fcmovnb
pop
xchg
jnp
mov
and
fmul
push
call
into
scas
scas
test
orb
pusha
jecxz
mov
or
mov
addr16
outsw
ds
mov
xor
sub
jp
stc
and
int3
sbb
adc
mov
mov
or
push
out
xchg
xchg
aas
mov
aad
es
pxor
loop
aaa
xlat
testb
xchg
fsubr
pop
or
out
fcompl
push
xchg
dec
jnp
fnstsw
test
lods
mov
adc
xor
stc
decb
ret
daa
push
cmp
jl
in
pop
loopne
mov
cmp
mov
jge
xor
jg
jbe
inc
out
jbe
fsts
adc
xor
sbbl
add
push
lock
lcall
insb
fucomp
test
enter
addr16
aad
cmc
xor
movsl
sbb
fstps
xor
in
shrl
mov
mov
addr16
sarl
fstpt
movsl
and
mov
ss
sahf
mov
and
pop
rcll
lahf
addr16
adc
push
push
call
mov
fcoml
add
fs
sbb
clc
mov
cmpsl
mov
mov
lcall
dec
je
aad
iret
dec
or
push
or
push
sub
jb
adc
test
pop
add
pop
call
data16
push
cmpl
stos
adc
icebp
mov
fcoms
inc
addr16
and
add
pop
into
mov
mov
lods
adc
mov
inc
stc
lds
jo
mov
xor
adcl
out
inc
jne
test
jecxz
mov
xor
xchg
dec
out
push
loope
add
xor
iret
cwtl
out
mov
add
pop
xor
das
mov
popa
pop
push
fisttpl
xor
mov
cmp
pop
pop
pop
pop
xor
cs
adc
mov
test
push
and
add
mov
dec
fbstp
push
clc
lods
and
movsb
dec
push
and
mov
adc
outsl
mov
sbb
into
ficomps
add
insb
out
loope
push
mov
jbe
adc
jnp
outsb
mov
loop
mov
test
inc
xchg
dec
jns
cmp
jno
mov
pop
adc
fldt
and
push
pop
xor
push
add
pop
pusha
mov
and
adc
cmp
addr16
and
mov
dec
jecxz
adc
mov
cld
popa
fists
xor
xchg
sub
fnstenv
add
sbb
adc
cli
dec
sti
and
mov
dec
fisttps
adc
pop
add
add
popa
cwtl
sub
add
repnz
popa
aas
inc
fs
push
icebp
lret
sahf
add
fld
int
daa
fmulp
or
jp
xchg
cmp
shlb
lcall
lods
lock
xor
add
lret
xor
xor
out
push
in
mov
inc
ds
fsubr
mov
pop
outsb
ret
push
sub
shlb
icebp
loope
fdivs
xchg
cltd
repz
and
pop
mov
call
mov
xor
mov
cmp
push
fmul
fwait
jbe
stos
xchg
jo
mov
pushf
jno
add
ret
mov
jg
out
clc
addr16
lret
mov
in
add
push
fsubrs
inc
lock
jge
ret
dec
inc
and
jle
pusha
push
scas
aaa
xchg
xor
rcll
mov
leave
popa
dec
push
cmc
bound
cmc
adc
in
movsl
bound
mov
sbb
les
das
imul
dec
cmp
sti
dec
jb
jecxz
out
icebp
aam
loopne
pop
insb
jne
and
mov
or
neg
and
bound
add
aas
dec
cmp
scas
out
jge
xchg
ljmp
aam
jno
xor
and
push
loopne
mov
mov
jecxz
mov
xchg
fisubrl
inc
pop
dec
insl
call
mov
mov
out
push
and
lahf
jge
add
clc
outsb
fldl2e
in
cmp
xchg
ljmp
aaa
mov
imul
or
adc
jnp
inc
aam
jg
or
stc
push
lods
mov
outsl
mov
lret
movsl
sub
pusha
nop
add
movsl
inc
mov
scas
xor
or
xchg
or
mov
push
shl
fstpl
cli
adc
and
popa
mov
sub
dec
cs
enter
mov
js
xchg
test
jo
ss
fistl
lea
jns
cmpsl
or
mov
pop
stc
xchg
je
mov
icebp
ret
dec
pop
inc
dec
add
cs
jb
adc
call
pop
adc
ljmp
push
mov
out
in
xor
xorl
jecxz
mov
pop
mov
inc
mov
aam
xor
adc
add
adc
adc
mov
scas
pop
cmp
push
lea
sbbb
shlb
push
and
les
adc
cld
mov
or
fcompl
push
add
add
pop
stos
jns
nop
cli
ja
and
sub
fsubrl
push
test
fisttpll
jo
insb
in
stc
addb
repnz
scas
adc
pop
idivl
test
incl
push
cltd
test
cld
mov
insl
in
or
arpl
cmc
popf
cltd
ret
push
pop
icebp
rcr
jecxz
scas
pop
imul
push
lret
divb
mov
adc
inc
addr16
sarb
dec
in
pop
in
mov
jne
ljmp
xchg
jg
sbb
jecxz
mov
xor
in
shrb
in
lcall
cld
std
stos
fdivrp
mov
aaa
sub
insl
popa
pop
mov
sub
dec
or
sub
mov
or
aaa
test
dec
and
mov
inc
cli
repnz
add
push
test
mov
sbb
add
in
fstpt
in
imul
mov
pop
aad
xchg
pop
adc
sub
dec
aaa
cmp
xchg
lock
jae
jmp
push
push
arpl
mov
sub
fidivrs
sbb
jmp
and
sbbb
in
int
ds
cmp
pushf
mov
daa
scas
rolb
xor
jnp
mov
icebp
js
push
call
push
push
mov
add
lods
mov
fwait
inc
dec
mov
cmpsb
lahf
aaa
leave
push
adc
int3
in
or
fwait
out
scas
cmp
push
fldl
cli
jno
mov
add
cs
jge
inc
fcoms
xchg
scas
aaa
bound
inc
sarb
push
mov
in
sub
std
test
push
xchg
cmp
cmp
enter
push
push
mov
mov
leave
pop
or
ss
mov
xchg
mov
out
in
sub
jb
xor
call
mov
pop
addl
xchg
mov
cmp
sti
pushl
inc
dec
es
addr16
push
rolb
scas
leave
mov
fistpll
inc
push
ds
jb
jg
cmpsb
es
xor
and
cmp
jmp
xchg
js
dec
push
gs
xchg
bound
fisubl
lret
cltd
cmp
push
popa
xlat
repnz
inc
jbe
fisttpll
or
dec
pusha
das
cvtps2pi
push
mov
xchg
jl
xchg
gs
xchg
dec
cmp
std
adc
jl
fdivl
sbb
out
xor
push
xor
sbb
rcr
mov
les
daa
mov
cmpsl
jp
xchg
sub
add
lahf
sbb
ds
cmc
addr16
sub
aad
dec
mov
dec
dec
jmp
xor
mov
das
and
test
xchg
lahf
in
cs
mov
movsb
and
push
aaa
stos
out
rcll
lret
mov
ret
add
xor
inc
or
fsubrs
filds
out
nop
sub
icebp
sub
sbb
ds
cmpl
inc
xor
in
pop
sti
dec
mov
rcrb
xor
fsubrs
mov
data16
lea
mov
mov
dec
js
lcall
mov
mov
ret
adc
mov
enter
fisttps
cmpsl
mov
or
iret
cmp
sarl
sbb
sub
cmp
jo
pop
fdivp
mov
inc
or
jno
in
pop
adc
into
loop
dec
pusha
in
or
or
inc
popa
mov
adc
sbb
dec
pushf
mov
dec
loop
call
ror
test
push
scas
es
xchg
cmp
xor
xchg
or
cmpsb
loopne
loopne,pn
repnz
push
adc
add
loope
sahf
xchg
inc
mov
sub
and
ja
dec
jno
and
inc
xchg
pop
fnstenv
pop
lds
cmpsl
pop
adc
mov
out
pushf
jg
decl
mov
ss
mov
addl
into
inc
std
dec
in
sbb
clc
inc
xor
sub
sbb
sahf
rcll
adc
sub
add
in
shrl
sarl
sbb
jae
pop
std
lahf
xchg
cmpsl
out
jae
aas
and
cmp
sbbl
inc
and
dec
mov
movsb
mov
roll
fcmove
cmp
gs
push
roll
sub
call
cmp
daa
das
sbb
mov
inc
and
mov
popa
lret
lret
push
xor
inc
push
inc
iret
dec
pop
dec
mov
xchg
adc
ds
es
test
movsl
fistpll
cmpsb
stc
mov
mov
mov
scas
ja
xchg
xchg
lea
mov
nop
xchg
cmp
andl
adc
test
sbb
inc
mov
ret
xchg
popa
test
jae
fldl
dec
or
das
inc
push
bound
or
xchg
mov
adc
jg
cmpsb
and
mov
lcall
and
ljmp
inc
push
add
arpl
subb
xchg
xor
cmpsb
xchg
loopne
pop
add
out
push
jb
xchg
add
jne
in
mov
inc
dec
into
sub
mov
push
xchg
mov
inc
dec
in
or
sahf
jmp
fadds
cltd
mov
add
roll
inc
cmp
lret
adc
std
dec
mov
mov
sahf
fadd
int
icebp
jecxz
add
ja
xor
sbb
jns
fisttps
addr16
dec
sub
jnp
mov
and
repz
push
inc
dec
imul
negl
jno
or
cmpsl
addr16
cmp
pop
mov
out
xchg
add
ror
int3
out
inc
cmpsl
cmpl
dec
stos
ljmp
pop
stos
pop
jno
pop
inc
aas
jle
add
out
movmskps
aaa
xlat
hlt
lret
xchg
repnz
push
pop
jecxz
je
or
push
jne
mov
rolb
and
addr16
mov
jb
push
icebp
pop
cwtl
mov
fs
mov
movsl
fstpt
jbe
stos
xchg
sahf
out
cli
fwait
dec
mov
jle
jmp
push
stc
int
dec
sub
or
out
test
out
ja
mov
inc
or
pop
fimull
mov
in
popf
int
adc
add
imul
cltd
outsb
jns
cmp
xlat
enter
inc
cmp
ret
in
pop
ret
rolb
lods
jb
jg
js
fwait
inc
imul
add
cmpsb
clc
ret
outsb
adc
xor
adc
sbb
mov
dec
mov
bound
sub
dec
daa
mov
inc
push
jo
or
pop
dec
ss
test
xlat
es
ljmp
cmp
jne
jnp
cmp
cs
jb
es
mov
xchg
cmp
cmp
xchg
sub
add
pop
leave
xchg
leave
insl
pop
and
fnstenv
clc
ds
mov
fisttps
and
pop
cmp
loop
cmpl
xchg
jns
in
push
mov
mov
add
out
lret
test
into
rolb
and
bound
into
add
test
push
jae
enter
test
stos
int3
jmp
addr16
sar
inc
fsubrs
jg
addr16
enter
xor
sub
popf
ss
pop
stc
or
mov
and
pop
pop
jle
push
popa
lock
test
adc
pop
shlb
jb
push
lea
out
sti
movsb
cmp
jo
push
cmp
leave
fmuls
jg
imul
xchg
movsb
test
aaa
ja
jae
out
add
push
xor
insl
pop
or
add
cmp
pop
jg
addr16
fmull
mov
insl
mov
sahf
cmp
push
push
xlat
mov
pop
sub
sub
sub
aaa
jo
mov
lds
aam
ficoml
mov
mov
rorb
jno
fldcw
push
xchg
out
addr16
push
mov
lahf
pop
test
pop
xor
je
les
test
in
push
cli
dec
jp
and
out
aam
push
ja
mov
popa
dec
pop
inc
mov
dec
jbe
mov
push
repnz
pop
fisttpl
cltd
sbb
movd
pop
aam
xchg
xchg
inc
dec
out
das
call
sub
or
out
pushf
mov
and
cmc
dec
pop
jns
std
jae
cmp
js
cmc
out
sbb
cmovb
insb
addr16
mov
je
loope
stos
sbbl
dec
sti
retw
xchg
dec
comiss
pop
inc
pop
or
sbb
xorb
fs
push
mov
andl
lock
test
orl
mov
out
es
mov
outsl
jae
lahf
push
or
pop
fistl
pop
adc
jne
inc
push
and
pushf
sbb
dec
call
xchg
mov
and
cmpsl
lcall
jl
inc
movsl
and
inc
add
pop
jbe
les
jg
stos
test
movsb
inc
in
xchg
push
inc
push
sub
jns
das
cld
fwait
dec
addl
hlt
pop
rclb
add
mov
mov
push
ljmp
das
aad
pushf
das
out
cmpsb
and
repnz
jmp
mov
cmp
pop
push
and
sub
xor
push
out
out
loop
jecxz
ficompl
cld
cmp
jnp
jns
xchg
xchg
push
leave
aam
orl
pop
cmc
rol
andb
jne
and
lods
cmp
mov
cmpsl
clc
loop
in
jb
sbb
movsb
add
cld
cmp
insb
sbb
divb
jnp
push
sbb
ret
aaa
pop
mov
bound
adc
mov
sar
add
dec
inc
push
stos
pop
inc
push
dec
fdivp
xchg
sahf
cmpsl
in
daa
lret
incl
into
dec
xchg
jl
cltd
inc
scas
cmp
mov
pop
das
cltd
pop
xchg
shlb
push
rcll
sbb
jge
popa
pop
inc
dec
out
cli
aad
mov
test
in
add
inc
push
int3
sbb
loope
je
jo
mov
andb
int3
push
and
push
popf
pushf
jne
shll
paddb
dec
adc
mov
subl
xchg
mov
mov
pop
fldt
dec
rclb
jmp
insl
jp
dec
fs
repz
das
adc
mov
jnp
and
and
adc
dec
cmpsb
cmp
mov
add
in
adc
add
add
popf
sub
pop
and
push
inc
or
imul
xchg
mov
scas
adc
call
cmp
insb
sub
roll
insl
sti
add
dec
dec
mov
testl
ret
fs
std
push
cli
mov
xorl
fbld
pop
repnz
push
push
div
cmp
push
scas
add
push
mov
or
inc
push
jmp
popa
mov
sub
in
cmp
bound
mov
in
pop
pusha
loopw
mov
jae
mov
adc
cli
shlb
pop
sub
mov
or
call
xor
jle
mov
lret
mov
cmc
or
lds
mov
adc
lock
mov
push
outsl
in
xor
in
sbb
fsub
mov
bound
and
mov
test
rcll
push
sti
js
inc
adc
jno
mov
dec
out
mov
xor
push
pop
mov
lds
sub
inc
mov
lds
push
lds
addl
cltd
xchg
gs
fstpl
jmp
rorb
cs
lret
push
mov
int
xor
lret
or
xchg
pusha
lahf
mov
sbb
mov
ja
push
cli
leave
outsb
int
jb
rorb
mov
bound
bound
lods
es
sar
das
fidivs
add
subl
jnp
fs
mov
test
xchg
in
xor
int3
cwtl
mov
stc
jg
repz
aam
clc
xchg
pop
loope
sbb
insl
in
cld
cld
aam
out
in
invlpg
sbb
sub
lods
inc
das
sub
mov
das
int
adc
push
std
cwtl
lea
xor
mov
into
shrb
daa
dec
xchg
popw
inc
inc
addb
mov
mov
jno
stc
insb
jmp
sarl
cmc
pop
and
sbb
test
scas
push
popl
mov
mov
inc
ret
mov
xchg
mov
fbld
sbb
adc
cltd
xorl
cmpsl
push
mov
in
fbld
push
mov
das
imul
aaa
aad
nop
lahf
lods
test
les
mov
add
xor
push
jne
cmpsb
dec
add
sbb
jne
cmpsb
dec
fidivrl
xchg
jecxz
xchg
and
inc
nop
enter
jno
fldcw
dec
and
outsl
pop
fucom
dec
lods
insl
lahf
int3
lcall
inc
stos
inc
cmp
add
leave
xchg
bound
mov
inc
mov
into
sbb
pop
mov
adcl
pop
fdivrl
push
jge
ret
sub
add
outsb
ret
cmp
ret
dec
dec
jae
cmpsl
test
dec
fs
adc
inc
inc
jle
out
mov
outsl
lea
lcall
inc
pop
ss
fcompl
repz
mov
mov
or
jecxz
ljmp
jb
push
gs
xchg
add
dec
mov
popf
jle
sti
lret
mov
outsb
nop
aaa
bound
imul
sbb
push
ds
notb
ret
xchg
pop
fwait
in
add
in
in
ret
pop
mov
sub
movsl
mov
add
pop
loopne
mov
shlb
mov
mov
jbe
rcrb
push
add
aas
out
jmp
sbb
mov
jae
cwtl
xlat
int
xor
rorl
mov
sub
sti
push
insl
inc
mov
rcrl
and
das
lret
mov
push
jno
mov
pusha
clc
out
lea
jl
int3
sbb
lret
sbb
mov
lock
fs
mov
dec
jnp
jmp
pop
xchg
fiadds
xor
add
mov
jb
mov
ret
sub
sub
loope
stos
and
mov
ldmxcsr
clc
dec
xchg
jge
xor
inc
lods
pop
and
mov
outsl
stos
cmp
loop
fldcw
mov
add
jl
mov
cmp
call
jae
sbb
inc
loop
push
mov
pop
lock
or
ss
xor
sahf
pop
mov
lcall
mov
mov
xlat
and
loop
test
add
andl
les
cmp
sahf
xor
lods
jg
sub
or
adcl
out
cli
test
push
xchg
movsl
cmp
pop
cltd
test
mov
jg
push
ret
je
inc
pop
lahf
push
mov
es
outsl
movsb
cld
adc
cli
cmp
fldl
add
sar
clc
jmp
int3
dec
fstl
sahf
xchg
shrb
cmp
cld
in
in
and
pop
xchg
push
sbb
add
or
xchg
fldl
repnz
push
rcrl
popf
mov
push
rclb
adc
cmp
scas
push
sub
xchg
cmpsb
add
movsb
xchg
or
push
adc
or
adc
inc
mov
lds
iret
mov
push
repnz
jp
mov
jno
lret
cmp
insb
lea
jmp
shlb
sub
inc
ds
lods
outsl
push
ret
popf
dec
imul
xchg
dec
fisubrs
enter
hlt
insb
push
mov
pusha
xchg
cltd
jne
es
lahf
pop
in
sbb
add
dec
fdivr
testb
sub
mov
pop
sub
mov
outsl
mov
or
pop
js
or
ss
mov
pop
xchg
or
repz
sbb
out
add
pop
sub
movsb
aad
or
xor
pop
jmp
int3
insl
mov
and
dec
test
sbbb
mov
shrb
mov
mov
dec
push
ds
inc
sti
pop
scas
nop
add
ret
sub
xchg
add
mov
adc
pop
add
or
in
and
stc
hlt
jl
pop
pop
inc
jnp
orl
dec
fildl
insb
idivb
xchg
lock
dec
dec
aam
rcll
clc
js
sbb
jle
incb
or
or
icebp
dec
cltd
cltd
ret
mov
loop
daa
sbb
dec
out
scas
push
cwtl
push
fcoms
add
cmp
dec
addr16
pusha
cmp
pop
arpl
pusha
lret
test
in
sbb
adc
xor
sbb
inc
adc
or
and
inc
push
sbb
mov
mov
clc
inc
push
dec
add
pop
jbe
mov
mov
sti
jb
stos
pop
mov
jmp
mov
lock
loop
cld
xor
sbb
sub
and
pushf
push
repnz
das
pop
and
jnp
xchg
xor
push
lds
cwtl
push
ret
cmpl
shld
pop
mov
rcrb
and
clc
mov
xchg
lods
jo
movsb
xchg
test
cli
mov
jns
sub
mov
mov
in
stos
mov
ljmp
sarb
add
ja
lea
jbe
mov
jmp
call
ljmp
xchg
int
sub
push
push
ftst
mov
outsb
adc
inc
pop
dec
mov
jge
sti
popf
fisubrs
pop
or
cmp
test
mov
add
pusha
repz
sar
gs
dec
xor
and
nop
adc
xor
pop
push
bound
and
xchg
cmp
or
daa
les
mov
mov
test
movsb
cmp
sub
in
fbstp
push
pusha
stos
out
mov
dec
cmp
xor
dec
pop
addb
out
xor
cltd
or
aaa
in
xor
ret
mov
add
mov
das
lock
fst
icebp
js
ficoml
loopne
std
int3
dec
mov
and
mov
sbb
pusha
andl
fcomp
xor
jecxz
in
adc
and
add
fdivrs
insb
loopne
sub
inc
inc
adcl
push
jae
fcomps
mov
xchg
movl
ret
pop
push
sbb
adcb
das
inc
xchg
add
push
divb
cmc
cltd
sahf
jae
dec
jns
push
lret
mov
push
loopne
mov
mov
leave
lahf
inc
mov
das
mov
int3
xor
std
jae
movsl
std
enter
cmp
sub
dec
inc
xor
xchg
jnp
and
xor
rcrl
nop
jbe
ja
int
fwait
dec
lods
fnstcw
jb
data16
in
mov
xorl
pop
dec
dec
jnp
jno
jecxz
adc
int
movsl
sbb
imul
push
gs
fisttps
popa
fcoml
or
stos
sub
sub
cmpsb
outsl
daa
dec
mov
insl
les
push
jnp
mov
pop
fimuls
push
sbb
popf
mov
mov
mov
sub
in
fiaddl
mov
fstp
iret
cmp
fcoml
add
xchg
into
cld
hlt
or
lock
mov
xchg
loope
sbb
aas
stos
jecxz
xor
in
cmp
mov
mov
dec
adc
cmpsl
xchg
pushf
sbb
in
add
sahf
mov
les
aam
xchg
adc
aas
inc
ja
jl
mov
adc
fisttpll
imul
int
pop
mov
mull
js
fucomp
mov
dec
out
add
insb
jecxz
in
fisubl
xchg
clc
jnp
or
pop
dec
cmp
inc
jle
mov
dec
in
inc
ja
aaa
mov
dec
imul
xchg
test
aam
and
ficoml
cli
inc
cli
dec
fnstsw
in
stos
cwtl
sbb
cld
mov
add
push
pop
lahf
repz
pop
xchg
xchg
mov
jae
testb
fcmove
inc
shrl
jae
and
cmp
pop
ljmp
mov
pop
adcl
adc
data16
fadds
inc
fisubrl
int3
je
iret
and
sub
repnz
mov
mov
mov
dec
mov
stc
cmovb
pusha
iret
push
push
mov
pop
pushf
outsl
pop
fdivs
in
insb
or
imul
add
stc
adc
inc
and
add
fadds
cld
pusha
jbe
les
adc
mov
addr16
sub
rorb
xor
or
xchg
add
add
inc
in
inc
pop
iret
push
cltd
mov
xorb
push
sbb
jns
push
xor
pusha
xlat
jns
test
into
cmp
leave
dec
push
cmpsl
imull
lret
inc
add
jmp
es
lahf
cwtl
subl
lret
add
arpl
jmp
fbld
ds
sbb
popa
adc
std
mov
sbb
mov
int3
jae
sarb
sbb
js
cmp
sbb
hlt
xor
leave
fidivrs
xlat
ret
pusha
pop
jp
stos
call
xchg
shlb
pop
subb
xchg
cli
sbb
xchg
push
loopne
je
dec
std
xchg
push
push
pop
test
xchg
std
jb
xchg
icebp
mov
mov
cmp
outsl
imul
ja
js
mov
push
adc
enter
lods
int3
fiaddl
push
jle
jno
inc
xchg
outsl
or
pop
inc
add
dec
add
cmp
pop
pop
sbb
sbb
mov
or
push
mov
mov
dec
adc
jecxz
int
sub
mov
iret
movsl
dec
int3
aaa
jbe
or
and
mov
push
int3
repnz
das
lahf
aaa
jg
in
aam
movsl
xchg
pop
jmp
or
idivb
cs
daa
lock
es
push
xchg
and
sbb
mov
cli
xchg
and
jo
sbb
inc
int3
fistpll
xchg
sub
fstpl
jo
das
pop
insl
dec
mov
sub
scas
in
ss
push
add
vmwrite
ja
mov
and
xor
insb
movsb
out
ret
ds
movb
popa
and
dec
mov
scas
adc
pop
fcmovb
into
pop
push
inc
out
and
call
pop
mov
inc
mov
icebp
inc
or
inc
movsb
pushf
int
jmp
dec
mov
sub
mov
aas
cmp
icebp
fnstenv
mov
jbe
lock
dec
and
push
dec
jae
je
jge
adc
mov
inc
lret
jb
rcr
fdivp
mov
fucomip
xor
and
or
and
xchg
mov
cmovp
les
pop
fdivrs
imul
or
divl
rolb
xchg
cltd
push
jns
inc
push
hlt
je
insb
repz
mov
add
xorb
mov
inc
mov
movsb
cli
jb
sbb
in
mov
jns
rcrl
mov
and
cld
inc
mov
pop
cli
inc
loope
je
leave
sbb
mov
mov
inc
stc
jns
mov
fcoml
lea
icebp
or
lret
pop
add
xor
mov
jnp
repz
icebp
xor
int3
dec
jns
dec
mov
pop
jns
cmp
push
testb
das
lods
xor
mov
lock
jp
cmp
repnz
pushf
in
pcmpgtb
stos
cmp
xor
ljmp
aad
adc
repz
add
outsb
add
es
cltd
xor
mov
inc
add
aas
push
jnp
inc
dec
push
das
outsl
dec
and
adcl
fadds
sbb
out
mov
cmc
movsl
sbb
xchg
mov
cmp
mov
imull
lds
arpl
push
test
xchg
test
or
cmc
xor
ret
imulb
pop
mov
imul
inc
sub
movsl
std
mov
pushf
inc
cwtl
ja
cmc
mov
clc
sub
test
adc
sbb
xor
lods
pushf
mov
cmp
stc
notb
xchg
pusha
insl
push
int3
call
jno
cld
dec
lods
sbb
pusha
outsl
imul
cmpsl
sahf
stos
push
sub
adc
int
pusha
or
jle
scas
out
sub
dec
and
and
mov
mov
scas
xchg
xchg
push
xchg
push
xor
sbb
shlb
enter
cmp
dec
insb
movsl
xchg
cs
movb
cs
add
in
in
in
dec
dec
pop
pop
stos
mov
sub
mov
xor
xor
out
in
rcrb
xchg
aad
int
lret
push
push
js
and
jle
mov
int3
mov
pop
aad
add
imul
lds
sbb
stc
in
and
int3
pop
pop
pop
dec
insb
in
jmp
cmpsl
sub
fnsave
jb
xor
fstps
adc
mov
cltd
lock
andl
push
les
jp
and
lahf
push
and
enter
pop
push
lds
sub
jmp
push
fucomi
xor
fcomps
sub
pop
pushf
mov
or
dec
fcoml
lcall
mov
mov
sbb
imul
xor
xchg
aam
sbb
xchg
mov
repz
and
je
mov
nop
incl
mov
clc
lcall
stos
push
sub
nop
jae
sarl
aaa
inc
pop
int
out
je
cmp
test
sbb
mov
dec
xchg
xor
pop
int
fldcw
pop
pop
adcl
mov
cltd
cs
out
fs
xchg
rclb
jnp
andl
iret
in
loope
mov
xchg
popa
test
repz
popa
lods
pop
daa
mov
pop
mov
out
repz
ss
push
repz
and
xor
cmp
mov
mov
xor
xorl
daa
subb
and
mov
ja
loopne
int3
mov
add
cld
jge
mov
ljmp
sahf
add
lret
int3
imulb
pop
enter
adc
arpl
jg
mov
and
mov
outsl
push
loopne
les
aad
outsb
or
pop
scas
jno
xlat
pop
sbb
dec
sub
inc
sti
pop
scas
rolb
pusha
sub
insl
xchg
jge
dec
gs
gs
push
dec
lds
cltd
je
iret
loop
scas
adc
test
lods
inc
jmp
xor
das
test
ret
lods
fidivl
ja
roll
stc
leave
int3
push
loopne
fs
xorl
sarl
fbstp
xor
imul
sbb
int3
call
mov
xor
jp
or
mov
mov
pop
repz
pusha
sub
xor
lret
or
mov
cs
jmp
sub
mov
and
jp
mov
sub
inc
mov
fwait
inc
nop
lods
sub
test
push
fistpl
roll
dec
lods
loop
fsubs
fs
stos
jne
into
insl
bound
aad
mov
fcomps
dec
inc
call
pop
repz
out
jl
inc
pop
sub
test
sbb
push
inc
ljmp
mov
mov
movsl
test
sbb
rcll
sbb
mov
mov
scas
stos
add
inc
ret
inc
inc
in
call
add
mov
rclb
pusha
scas
leave
jp
int
xlat
push
inc
fcoml
sub
lea
jno
mov
dec
dec
incl
cmp
aam
mov
lods
repz
out
jl
cwtl
push
pop
pop
fwait
scas
cltd
jmp
xorb
jl
pop
sub
jl
mov
lcall
daa
out
ss
in
add
pop
das
and
sub
movsl
loope
cwtl
lea
push
mov
cmp
pop
fwait
dec
pop
adc
cmpsb
aas
pushf
dec
mov
jecxz
fisubrl
filds
inc
cld
jmp
xchg
add
lea
icebp
xchg
das
xchg
test
add
loop
ss
shlb
push
and
sahf
js
pop
scas
mov
jae
nop
and
adc
cmp
add
add
test
jecxz
mov
shlb
lock
sub
sub
sti
mov
test
sbb
rcll
fimull
lods
mov
js
stos
in
nop
jmp
outsb
mov
shll
ret
mov
add
lea
mov
add
mov
push
or
icebp
movsb
pshufw
push
inc
call
jge
loopne
sub
fsubs
cs
and
sbb
jo
push
ss
mov
leave
pusha
fnstenv
das
inc
scas
inc
clc
push
sti
hlt
push
fsqrt
add
push
enter
and
xchg
push
pop
daa
movsl
orb
lods
pop
scas
test
aam
sbb
push
mov
int3
lcall
and
fwait
call
cmp
ror
jno
xchg
out
jle
xchg
movsl
push
loopne
push
dec
inc
and
cmp
mov
xor
ds
lods
mov
pop
add
test
lods
sub
cmp
and
xchg
notl
sbb
loopne
fstpl
outsb
sub
xchg
inc
push
add
sahf
push
sub
dec
test
fmull
and
test
add
in
xor
in
jl
push
psubsw
int3
cmp
rorl
xor
test
inc
and
jnp
jae
cmp
ja
jp
fists
ret
icebp
jl
stc
or
fstl
mov
insl
and
fdivl
jnp
negl
add
xchg
pop
adc
loope,pt
mov
mov
adc
xor
pop
and
dec
and
in
ja
pushf
cmp
and
or
push
adc
pop
in
mov
adc
rcrb
mov
mov
mov
push
pop
les
stos
adc
aam
cmp
movsl
stc
mov
lret
je
stos
push
add
dec
xor
sbb
pop
mov
or
mov
jmp
push
aam
shl
xor
cmp
shrl
jle
sarl
add
cmpsl
mov
mov
adc
lods
inc
ja
arpl
xor
pop
je
jno
popa
mov
push
push
xchg
push
arpl
xchg
pop
arpl
sub
pop
roll
xchg
adc
inc
mov
js
cwtl
lcall
add
fstpl
rorb
iret
or
lods
inc
pop
ds
loopne
subl
test
shll
jle
dec
clc
ficompl
xor
push
and
loop
jmp
push
mov
sbb
mov
jecxz
cmp
lods
adc
push
ss
mov
xchg
cs
dec
sbb
cmp
testl
repnz
outsl
pop
mov
lret
fbstp
in
xor
xorb
arpl
mov
adc
clc
aad
dec
sbb
push
adc
mov
and
hlt
fcmovnb
lods
pop
insb
int3
and
inc
mov
push
pop
lods
add
dec
inc
mov
pop
movsb
jl
jbe
cmp
cli
ds
lods
loopne
je
sbb
and
cli
mov
dec
ja
jns
pop
repnz
test
fnstsw
cltd
outsb
push
sub
fs
scas
int3
pop
adc
adc
push
fwait
mov
aas
cmp
xor
inc
ja
int
push
aas
mov
in
movsb
xchg
mov
int3
jb
ret
push
stos
add
dec
adc
pushl
or
in
shlb
dec
mov
mov
xlat
imul
out
push
and
adc
in
arpl
cmp
fs
pop
xlat
je
sti
fsubp
outsb
mov
mov
imull
in
pop
add
test
das
dec
jbe
sbb
rcrb
xor
and
jbe
and
movsl
sub
imul
shrl
inc
das
push
sub
pop
pop
mov
add
cmp
insb
jecxz
dec
je
and
movq
pop
fs
mov
lahf
and
sahf
lods
dec
sbbb
cld
fsub
pop
mov
std
aas
popf
mov
shlb
ja
movb
aad
xchg
cwtl
add
inc
sbb
mov
inc
adcl
cmp
cmpsb
and
and
or
mov
jno
nop
mov
nop
jb
sbb
js
push
aam
cmp
pop
jae
dec
insl
adc
mov
or
aaa
mov
jbe
fldl
test
sub
dec
mov
jmp
push
fsubl
das
sbb
or
int
ret
mov
jns
xchg
xor
out
cld
mov
arpl
insb
jecxz
mov
pop
aam
jbe
and
and
out
fnstcw
jb
inc
inc
je
movl
psllq
lcall
inc
pop
notl
test
repnz
outsl
imul
mov
xor
imul
in
jg
js
pop
and
add
adc
inc
orl
stos
test
cmp
fwait
sub
pop
dec
movsl
xor
pop
cmp
add
fstps
xchg
and
nop
and
cmp
lcall
out
scas
mov
jo
cmp
push
mov
mov
aaa
or
pop
xchg
inc
cmp
aam
aad
testl
push
int
jmp
mov
xchg
add
cmp
or
mov
testb
cs
fcompl
mov
push
xchg
mov
xor
shlb
shlb
mov
dec
push
outsl
mov
ljmp
insl
sarb
cltd
sbb
jp
inc
mov
in
push
or
sub
xchg
lods
repz
fstpt
xor
int3
stc
call
push
loop
stc
push
shrl
ja
add
sbb
jg
les
cmp
popa
push
sbb
hlt
cmp
les
pop
out
cwtl
or
xchg
xchg
push
jmp
adc
ja
cmpl
jl
bound
jmp
xor
in
dec
mov
mov
cld
divb
in
pop
pop
lods
cmp
cli
mov
movsb
lock
mov
and
sbb
sub
mov
hlt
jnp
loopne
mov
scas
adc
lods
push
in
xor
xor
js
dec
cmpsl
sar
in
push
pop
popf
mov
ja
and
and
stos
clc
sarb
or
test
test
mov
pop
cli
inc
inc
jg
pop
adc
ja
jnp
mov
call
sbb
mov
sbb
sbb
mov
dec
rcrl
scas
cltd
ja
or
mov
out
mov
push
sub
cld
xor
shll
jmp
jne
in
mov
shll
es
pop
mov
sub
cmpsb
mov
inc
mov
or
mov
jecxz
inc
mov
cli
loopne
push
sti
mov
mov
jmp
adc
add
lahf
adc
cmpsl
cs
pop
cwtl
cmpsb
or
lods
dec
sahf
mov
addr16
xor
pop
xor
lret
out
insl
repz
loopne
adc
out
inc
fldl
enter
mov
outsb
push
sbbb
adc
jmp
add
or
gs
adc
and
sub
cld
mov
inc
push
test
xchg
xor
inc
dec
xchg
xor
jo
mov
sbb
stos
imul
ja
cmp
or
and
in
test
popl
xchg
add
sub
call
adc
push
add
pop
jns
jb
pusha
jns
fnstenv
test
pop
dec
outsb
add
push
mov
pop
cmp
out
mov
add
or
aad
mov
sbbl
and
int3
rorl
and
into
xchg
dec
pusha
insl
cmpsb
aaa
push
pop
lret
jmp
sbb
jnp
cmpsl
fcomps
sub
xor
push
xchg
or
hlt
sub
xchg
movsl
inc
sub
mov
push
daa
ss
dec
adc
scas
sbb
xor
les
pop
cwtl
in
cmp
push
scas
cmpsb
in
and
decb
push
int
jl
pop
mov
xchg
push
sbb
adc
roll
push
or
add
xor
mov
push
movsl
jg
mov
xchg
jmp
jb
sbb
popf
jp
mov
enter
pop
mov
test
arpl
call
mov
cmp
loopne
nop
mov
daa
aaa
lds
in
mov
stos
jl
repz
fs
cmpsb
mov
aad
jb
cmp
clc
inc
mov
or
sub
xchg
in
test
cli
out
sub
sahf
ja
cmp
xchg
jecxz
mov
aaa
aam
adc
xchg
lea
add
mov
xchg
pop
popa
jle
or
push
into
inc
popa
push
fimuls
dec
icebp
rcrl
sub
add
stos
repz
jmp
jl,pn
sub
pop
subl
call
cmp
sbb
xor
push
push
inc
cmp
adc
mov
pop
aas
gs
stc
adc
pop
iret
rclb
push
xlat
jae
xor
int3
sub
pop
push
daa
or
subb
inc
test
sbb
leave
inc
insb
pop
stos
and
mov
jae
lods
cmp
stos
lods
mov
arpl
jecxz
fbld
test
mov
cmpsb
ficompl
push
enter
or
jmp
scas
xor
aam
rsm
fiadds
pushf
or
lea
sub
inc
dec
or
add
aam
adc
stc
das
clc
mov
mov
std
xchg
in
pusha
ss
fiadds
cmp
fsubrs
jno
xor
mov
jl
mov
inc
in
mov
cmp
rcrb
stos
fnstenv
movsb
iret
loop
lods
rcll
push
insb
cmp
jns
jg
or
lret
jle
pop
cmp
out
ficompl
add
shlb
and
fisubl
nopl
lds
add
adc
repz
test
fnstenv
rcll
lcall
xor
pop
jo
add
jne
dec
outsl
out
cmp
push
in
test
dec
loop
aad
dec
xchg
pop
pushf
ret
fists
jnp
int3
mov
add
cmp
xor
lcall
dec
std
repnz
cmp
loope
cmp
add
cmp
daa
cmp
inc
mov
imul
rcrl
dec
loope
loope
add
or
lds
or
icebp
inc
pop
pusha
cmp
push
pop
jae
adc
jmp
insl
jae
push
pop
mov
pop
push
jl
sub
popf
aaa
push
outsb
dec
cmc
push
outsl
mov
inc
mov
adc
sub
inc
pop
int3
inc
pop
mov
test
dec
mov
leave
push
add
scas
push
mov
mov
icebp
and
xchg
mov
je
insl
bound
call
sahf
adc
mov
sub
in
push
rorb
push
test
pop
xor
mov
mov
mov
sbb
lods
cs
mov
insl
imul
inc
sub
aaa
int3
into
push
enter
faddl
movsl
subl
les
cmpsb
sbb
sbb
in
cmp
insb
mov
inc
mov
aaa
cmp
mov
les
xlat
pop
mov
outsl
and
xor
inc
cmp
adc
movsl
test
movsl
fldl
add
mov
mov
pusha
fcom
test
inc
dec
mov
test
test
mov
xchg
movsb
inc
or
xor
outsb
shrl
es
fcmovb
or
dec
int3
add
movsb
stos
push
aaa
add
cs
cwtl
sbb
cwtl
mov
push
cmpl
aaa
jb
out
mov
ret
loop
jecxz
jp
sbb
mov
in
inc
inc
mov
aam
loopne
sbb
pop
and
shr
fstpl
push
lret
add
xchg
inc
mov
jl
imul
mov
jb,pn
andb
pop
mov
push
outsb
push
and
addl
mov
ljmp
xchg
fnstsw
movsl
lahf
xchg
xor
stc
rcr
pop
js
neg
test
outsb
adc
lods
or
repz
push
testl
mov
pop
inc
pop
stos
stos
push
lahf
mov
sub
adc
sti
icebp
lds
sub
mov
xchg
mov
jmp
sbbb
out
jecxz
mov
cmpb
cli
mov
fptan
add
out
popa
test
push
push
loop
xor
xor
adc
mov
mov
cmp
pushf
xchg
jne
lret
call
push
pop
dec
inc
sub
les
jmp
mov
push
loopne
lock
out
roll
out
adc
fwait
out
test
sbb
pop
je
lea
ret
ret
hlt
rcrl
stc
or
daa
jle
xor
pusha
dec
pop
adc
mov
stos
mov
lea
pop
dec
push
aam
push
fistl
mov
nop
ja
sbb
fldenv
adc
in
fmul
push
jle
clc
fstps
or
add
inc
daa
xor
jmp
in
imul
imul
aam
ss
std
xchg
addl
jg
add
mov
and
jbe
imul
testl
mov
rcl
jbe
ficoms
das
sub
add
or
xchg
sbb
sbb
roll
mov
sar
lds
div
sbb
mov
inc
xchg
push
add
xchg
scas
repnz
jmp
jg
lret
in
xchg
pop
adc
dec
lret
loop
pop
pop
push
mov
dec
cs
xor
repz
sub
pop
push
loop
mov
push
cmpsl
pop
or
les
negl
test
rol
ret
sub
sbb
jns
test
daa
xor
jl
cmp
cld
add
mov
xor
mov
arpl
loope
xchg
pop
bound
xchg
xchg
popa
iret
or
icebp
xor
fisubrs
xchg
mov
mov
hlt
out
mov
dec
in
cmp
fnstcw
sub
stos
dec
jnp
lods
sahf
addr16
aas
sbb
in
lods
xor
fimuls
cmp
pop
pusha
mov
sub
lret
stc
sub
xlat
mov
mov
fldcw
jmp
xor
xchg
cmp
aam
jo
pop
cmp
test
push
inc
mov
cwtl
pop
pop
cli
test
jp
inc
jecxz
ds
mov
push
sbb
pop
inc
mov
hlt
mov
sti
cmp
rorl
std
and
inc
lahf
popf
pop
lret
cmp
push
mov
dec
inc
dec
add
vrcpps
pop
enter
dec
pop
es
into
mov
lods
enter
std
and
jo
out
adc
jne
jno
dec
divl
adc
lock
xor
push
push
mov
add
shlb
push
int
test
mov
mov
pop
stos
lea
xor
and
pop
imul
dec
lods
iret
mov
outsl
bnd
fistpl
mov
pop
scas
mov
fcmovnb
fs
pop
and
sbb
jne
cltd
xor
dec
push
push
jmp
or
cltd
cmp
jae
cwtl
ljmp
mov
mov
mov
adc
jecxz
or
push
and
xor
cli
outsb
or
inc
cmc
jbe
fwait
repz
push
dec
mov
ficoml
push
cwtl
rorl
hlt
repnz
cmc
or
add
js
pop
jg
mov
jne
adc
insl
movsl
arpl
xchg
pushf
sysret
movsl
and
xorb
orl
pushf
or
pop
dec
mov
push
xchg
adc
inc
dec
repz
lods
mov
xor
mov
std
ljmp
dec
xor
adc
xor
int3
jno
pop
iret
adc
cltd
cmp
mov
out
lcall
ret
shrb
icebp
mov
dec
pop
or
clc
repnz
cwtl
push
pop
test
test
xor
ja
xchg
aam
lods
and
xchg
leave
fiaddl
inc
push
andl
aaa
push
insl
dec
fwait
hlt
fs
outsb
inc
adc
push
lds
sub
xchg
movb
adc
imul
mov
push
sbb
cmc
adc
stos
jp
shl
loope
cmpsl
stos
icebp
cmp
lahf
push
imul
fisubs
push
inc
push
lea
ret
cmp
mov
pop
mov
sbbb
jg
stos
fcmovb
mov
xchg
ffreep
mov
repz
adc
or
inc
sub
sbb
sbb
or
xor
mov
hlt
mov
adc
push
int
insb
aaa
xor
mov
or
jl
lcall
xchg
pop
mov
fisttpl
xchg
jnp
ds
jnp
inc
inc
sbb
out
sti
in
fldenv
inc
mov
mov
fwait
dec
dec
and
mov
addl
mov
or
pop
je
lea
add
and
stc
iret
in
pop
repz
xor
data16
xchg
sub
push
js
xor
dec
mov
mov
mov
enter
out
dec
pop
scas
jg
in
ja
mov
movsl
repz
stos
jae
xor
sub
or
fildl
xchg
movsl
or
push
mov
rcrl
jle
jns
jno
inc
sahf
jg
inc
call
cwtl
and
mov
jb
jnp
mov
pop
mov
divl
gs
out
ljmp
fnsave
sub
push
int
leave
lods
sbb
dec
xchg
icebp
adc
lods
iret
lods
iret
cli
jle
dec
outsl
pop
movsb
jl
jmp
dec
out
xchg
or
popf
les
out
stos
dec
in
xchg
pop
mov
fisubl
pop
and
mov
mov
mov
cmp
xchg
xchg
adcb
shlb
fadds
or
pop
bound
pop
popf
dec
sti
xchg
and
clc
and
jg
jo
push
jmp
sub
adc
or
popf
pop
addb
sti
jmp
jo
or
dec
mov
push
push
xchg
jmp
xlat
jge
add
out
in
out
and
insl
add
jg
shrl
pop
and
cmp
ret
test
mov
xchg
lret
fiaddl
out
adc
sbb
xor
inc
xchg
sbb
cmp
mov
sbb
xchg
pushf
outsl
test
fxch
inc
cld
pop
int
lds
adc
sahf
dec
mov
subl
lcall
fbstp
mov
xor
dec
mov
xor
iret
inc
sti
sbb
pop
outsl
jge
gs
inc
mov
pop
test
jnp
xor
pop
adc
jbe
jecxz
cli
xlat
pop
nop
xor
sti
mov
pop
dec
in
imul
xor
stos
mov
push
inc
movsb
rcrb
ss
je
lcall
fdivrs
xor
or
sti
cmpsb
dec
cmp
xor
outsb
dec
push
int
aas
js
inc
sti
out
aas
push
mov
cli
rcrl
add
mov
mov
and
lock
shlb
mov
mov
sbb
orl
inc
jg
sbb
sti
dec
movsl
pop
loope
fistpl
frstor
or
test
iret
call
pop
lret
xchg
dec
js
loopne
push
sub
mov
push
cld
in
fimull
mov
add
gs
ljmp
lret
mov
adc
out
mov
and
test
pusha
loope
mov
pop
in
inc
or
inc
das
xor
icebp
add
push
rcrb
out
xchg
js
repz
daa
out
mov
cmp
imul
test
sahf
mulb
popf
or
dec
xor
mov
pop
cli
hlt
mov
mov
mulb
sbb
jbe
ja
jmp
dec
push
cltd
and
mov
sbb
dec
add
mov
movsb
adc
adc
fidivrs
mov
pop
rcll
adc
xchg
ljmp
jge
cwtl
push
adc
xchg
mov
mov
inc
lock
roll
and
mov
adc
or
mov
cmp
popa
xor
inc
push
ret
ss
adc
jecxz
adc
fnstsw
mov
jne
sub
jb
mov
pop
inc
sbb
cmp
lds
ja
push
or
scas
gs
inc
sbb
lods
add
fwait
adc
fdivrl
fprem1
sub
jmp
jg
aad
mov
add
and
mov
js
cld
mov
jo
adc
in
sar
mov
es
mov
aas
lahf
mov
les
push
xchg
jns
xor
xchg
sti
jge
add
lods
jg
movsb
cltd
jbe
inc
xchg
fisttpll
ret
fwait
jge
push
cmp
pop
mov
popf
scas
mov
les
sti
lret
icebp
jmp
ret
xlat
add
sbb
iret
movsb
rorb
dec
icebp
push
je,pt
fistps
mov
lods
movb
and
mov
dec
ret
inc
and
jno
aad
inc
mov
jle
ljmp
xor
andl
and
test
ljmp
dec
cmp
movsb
ja
std
cld
les
pop
imulb
icebp
jb
ljmp
adc
rcrl
or
fs
iret
or
dec
xor
test
mov
loope
pusha
test
sahf
mov
or
imul
lds
rcr
and
adcb
test
repnz
fcomi
popa
adc
cs
repz
mov
cltd
loope
cltd
mov
ret
xchg
push
movsl
pop
pop
mov
loope
dec
fdivl
mov
rcrl
or
shlb
push
or
mov
adc
jecxz
and
add
ss
iret
enter
push
xchg
aaa
imul
xchg
iret
sub
or
stos
xor
loope
xchg
arpl
pusha
and
jmp
rcll
cmc
rcrb
xchg
pushf
sub
jmp
lahf
mov
cmp
inc
mov
jo
and
add
xchg
mov
cmp
xchg
and
sbb
pop
jp
inc
inc
adc
inc
inc
idivl
nop
inc
fdivp
mov
jae
cli
xchg
or
sub
add
fidivl
push
ja
adc
adc
cmp
mov
and
cli
enter
das
mov
and
and
arpl
enter
clc
mov
push
test
je
ljmp
sub
scas
and
nop
xchg
lret
jge
cmp
lret
repnz
clc
sbbb
xor
out
jb
outsb
and
jge
out
aaa
push
out
pop
inc
jbe
add
aad
lods
imul
ret
dec
cwtl
push
pop
xor
mov
dec
sub
mov
xchg
xlat
add
fdivrs
jecxz
push
jmp
sub
js
ja
lock
add
rcrl
in
inc
jbe
dec
inc
mov
adc
cmp
es
or
cmpsl
sbb
xor
loopne
mov
mov
pushl
xlat
jle
aad
xchg
xorl
hlt
imulb
stos
sub
out
js
pop
sub
cmp
push
mov
leave
ret
scas
pop
dec
enter
hlt
mov
adc
push
xchg
mov
adc
aad
inc
sub
xchg
adc
mov
rcr
into
mov
add
sbb
cmp
ret
inc
pop
push
sti
ss
loopne
daa
jb
push
sub
jb
pop
jbe
add
icebp
daa
cmpsl
enter
rclb
jns
inc
adc
push
sub
jle
cmpsl
dec
sbbl
xchg
inc
mov
adc
push
and
into
lock
mov
ret
pop
cs
aaa
push
aad
insb
cmc
pop
jnp
sbb
inc
xor
aaa
push
sbb
pop
mov
lods
pop
xchg
lahf
mov
icebp
aam
jl
mov
iret
stc
jp
cli
aad
mov
hlt
jb
push
inc
cmc
sub
fisubs
fcomi
and
dec
inc
pop
jae
push
loope
jne
cmp
push
sbb
scas
xchg
inc
or
xor
and
add
out
or
cmpsl
xor
adc
outsl
mov
imul
jnp
xor
xor
cmpsl
shrl
pop
inc
inc
into
fnstenv
inc
or
inc
mov
out
dec
adc
std
jecxz
or
cmpsb
mov
and
and
fwait
popa
dec
sbb
aad
inc
push
das
xchg
out
or
pop
outsb
cmpl
call
rcll
leave
xchg
nop
lahf
sub
push
fdivp
int3
bnd
dec
push
shrb
sti
or
rcrb
pop
andl
retw
mov
mov
jg
gs
or
cmpsl
fiadds
dec
into
daa
pop
fcmovne
shll
and
adc
and
out
rorb
fstl
roll
leave
xchg
pop
cmpsb
mov
jnp
mov
xor
push
rclb
xchg
js
xor
lods
jb
lret
icebp
jmp
sub
jl
cmp
orb
or
xor
xor
cmp
mov
test
enter
imul
fimull
add
stos
adc
outsl
lods
adc
into
push
ja
jne
sbb
mov
adc
add
jmp
sahf
pop
mov
out
into
cs
mov
cmpsb
xchg
inc
sbb
pusha
adc
arpl
push
je
ret
pop
jg
pushf
jno
add
mov
icebp
je
jg
lret
jae
loop
out
icebp
ljmp
je
cs
dec
jle
js
mov
mov
aas
cld
ljmp
psubw
jecxz
jb
xchg
dec
cmp
ret
jp
jae
cmp
std
loop
inc
loope
adc
add
test
stc
nop
insb
push
push
or
xor
sbb
mov
or
daa
inc
lea
mov
addr16
fmull
shrb
pop
test
xchg
inc
hlt
mov
add
mov
out
mov
mov
cmc
jge
push
mov
pusha
lods
lods
and
jmp
cltd
pop
popf
lods
mov
sub
ljmp
jb
push
push
pusha
imul
push
sub
js
jo
push
popa
and
fsubrl
jae
sub
ret
and
pushf
jo
test
or
lret
add
jne
mov
inc
shrl
stos
or
outsl
mov
inc
jnp
sub
cmp
shrb
adc
dec
js
lret
push
into
out
jne
jle
jl
rcrb
jb
cmc
cmpsl
jo
test
push
mov
jb
ret
mov
sbb
cmp
xor
es
push
dec
in
push
cmp
inc
push
mov
jmp
divl
gs
push
repnz
jge
push
inc
jge
lods
dec
data16
subb
out
xchg
sub
loop
xor
jno
dec
nop
jecxz
xchg
sub
cmp
xchg
je
std
dec
lods
pop
sahf
inc
push
cmp
cmc
jg
xorb
xchg
add
cmc
jmp
imul
addl
addr16
mov
addr16
xchg
inc
fldcw
pushf
sbb
mov
fisubrs
bound
ret
sbb
mulb
mov
sbb
mov
stos
sub
xchg
dec
stos
not
fisubs
dec
mov
and
sbb
clc
fisttpll
stc
ljmp
and
or
xchg
xor
xor
mov
adc
sub
sbb
jle
cmp
imul
scas
aas
test
stos
xor
lea
dec
mov
int
xchg
sub
loope
js
and
inc
call
js
lret
cmp
inc
std
mov
gs
push
icebp
xlat
roll
xor
inc
aam
nop
push
out
dec
shlb
fnsave
sub
popf
inc
sub
mov
adcl
rdpmc
push
sub
push
add
stos
add
icebp
and
xor
push
int3
in
push
pusha
xor
xor
push
ja
mov
mov
mov
ss
ss
cmp
xor
popf
bound
add
popf
mov
xchg
pop
and
pop
push
mov
and
pop
dec
pop
aaa
cmp
mov
stos
fdivl
arpl
movsl
sbb
hlt
jno
aad
test
mov
inc
iret
es
push
add
pop
out
divb
stos
hlt
adc
mov
jb
jl
lahf
sub
int3
jge
aaa
sbb
addr16
jo
push
mov
cwtl
sub
push
arpl
imul
rclb
lea
mov
push
mov
hlt
add
shlb
pop
dec
dec
dec
mov
popa
pop
je
pop
pop
pop
repz
inc
daa
mov
out
stos
mov
frstor
flds
dec
fnstenv
pop
mov
inc
lods
imul
push
mov
scas
repz
pop
adc
inc
ficoms
add
sbb
ret
fisttpl
es
in
negl
fnstcw
adc
and
lock
test
inc
leave
pop
xor
addr16
test
out
int3
adc
sbb
pop
push
mov
sbb
add
xchg
pop
shlb
mov
lods
inc
adc
cmpl
or
xlat
mov
sub
mov
nop
mov
cltd
mov
cmpsb
jno
icebp
xchg
cltd
cmc
pop
mov
xor
cmc
popa
in
xor
sbb
cmpb
lea
incl
mov
insl
push
sub
xchg
cmp
out
mov
xor
jecxz
mov
pushf
jns
daa
push
dec
xchg
jge
xor
mov
dec
clc
aad
dec
xchg
mov
inc
fisubs
xor
cmc
cli
ret
adc
jp
mov
pop
cwtl
test
jecxz
lret
sub
inc
push
jns
rorb
jge
aaa
and
push
jmp
mov
or
cmp
inc
pop
aad
lret
mov
jne
sbb
shlb
sbb
arpl
pop
jnp
jne
mov
mov
mov
pop
aam
push
xor
push
push
inc
and
push
fsts
add
arpl
mov
lea
jb
gs
fiadds
call
or
fcmovnb
in
cmp
shlb
ret
dec
sub
dec
data16
add
xchg
sub
enter
ret
data16
imul
xchg
add
addr16
xor
push
les
mov
cmp
jge
jb
cs
lods
adc
fs
test
push
mov
clc
push
pmaddwd
out
fnsave
ret
lret
les
mov
lret
clc
xchg
xor
pushf
mov
or
adcb
icebp
and
push
mov
xorl
mov
iret
or
bound
ja
and
sbb
cmpsb
mov
cltd
mov
movsl
es
mov
cmpsl
testb
jnp
xchg
sarl
mov
fisttpll
inc
sub
scas
mov
jp
mov
xlat
dec
pop
inc
out
jmp
inc
mov
movsw
cmpsb
in
popf
fcompl
movsl
mov
mov
cmp
mov
fmuls
push
pushl
clc
imul
and
xlat
js
xchg
arpl
xor
mov
jl
aas
pop
loopne
inc
je
orb
fistps
jnp
mov
dec
adc
sbb
out
jns
cwtl
adc
insl
in
adcb
sub
imul
add
adc
das
sub
insb
enter
or
push
sti
divl
dec
xor
inc
les
and
cwtl
das
inc
rcrb
push
push
push
mov
xchg
popf
push
inc
dec
fwait
lret
push
jns
out
mov
pop
shll
into
pop
mov
cs
and
cmp
sarl
and
testb
pusha
pop
aam
pop
insb
cmc
cwtl
insl
jge
fucomp
cmp
imul
sbb
cmpsb
fnstcw
push
xchg
add
int
popa
push
je
mov
push
les
fcomps
mov
lea
adc
or
and
aad
out
dec
sbb
and
mov
leave
adc
fiaddl
lret
enter
xor
popf
cmp
in
fisubrl
mov
repnz
and
sub
cmp
push
xlat
mov
pop
test
outsl
mov
xchg
xor
loopne
aas
mov
sbb
fiaddl
bound
or
data16
dec
fwait
dec
lea
xchg
mov
test
ret
jo
cmpsl
das
lods
addr16
lahf
xchg
out
pop
sub
cli
inc
lods
push
fisubrl
enter
or
scas
mov
inc
fiadds
jae,pt
in
xor
or
cmp
stos
pop
lret
jp
pop
push
add
xchg
in
inc
adc
mov
lcall
nop
fmul
je
sti
aaa
jne
fldt
adc
xchg
adc
test
dec
fstl
xchg
cmp
jl
mul
cld
xor
ss
cltd
repnz
js
xchg
mov
cltd
dec
andl
cmp
in
and
aad
inc
inc
jmp
xchg
push
repnz
ret
pushw
lcall
mov
repnz
mov
in
loop
pop
push
dec
je
dec
test
int3
push
out
popa
fisttpl
bound
cs
lods
inc
jecxz
dec
push
xor
sub
sarb
jb
sbb
mov
jb
sbb
dec
scas
xor
repz
mov
and
fidivrs
js
das
aam
test
movsb
es
out
ss
scas
insb
insl
inc
mov
lcall
rcrl
rcrb
out
jge
xor
and
mov
popf
xchg
and
daa
aaa
push
mov
adc
inc
ja
xor
sbbl
sub
rorl
adc
lock
mov
xlat
pop
cli
aaa
hlt
pop
mov
icebp
mov
insb
into
inc
rcrl
dec
push
adc
and
stc
xchg
inc
negb
xor
or
mov
cmpsb
in
je
push
pop
fcompl
ja
xor
pop
push
xchg
pusha
ss
shrl
lret
push
pop
testb
stos
jns
pop
iret
dec
cli
out
cli
data16
cmp
adcl
ret
mov
add
test
dec
mov
ficoml
scas
js
sti
les
jnp
dec
test
ret
adc
fxam
clc
dec
pop
mov
aaa
push
out
mov
mov
add
or
adc
fwait
ret
xchg
lods
xchg
lahf
aad
call
sbb
dec
shrl
xor
inc
jb
inc
in
lret
hlt
and
mov
jno
mov
jnp
inc
jge
push
xor
inc
add
mov
and
in
mov
fsub
call
sub
imul
jnp
xor
adc
int3
fs
sbb
out
popa
mov
add
int
daa
pop
cmpsl
push
loopne
and
add
dec
aas
icebp
push
mov
shrb
inc
cs
mov
sub
nop
mov
inc
xchg
jns
inc
mov
adc
stos
jnp
mov
loopne
inc
pushf
mov
and
jns
pop
repz
sub
cmp
sub
ja
int
dec
push
adc
jg
fnstsw
lret
fucomi
cmp
fstl
push
stos
nop
push
insl
xor
push
jl
punpcklbw
ljmp
xchg
sarb
sub
repnz
nop
rorl
loop
mov
sbb
insl
or
fstl
gs
out
imul
lea
push
sub
jae
add
cmp
push
push
ja
flds
notb
shrd
jb
repz
sti
test
rcr
mov
sbb
lcall
cmpsl
negl
lret
fstl
mov
sbb
sub
dec
aam
cmp
int3
and
or
nop
sbbb
pushf
lods
jmp
jp
scas
std
pop
sbb
imul
xchg
rep
sti
inc
dec
fdivl
fiaddl
enter
jne
ss
sub
sub
and
mov
sbb
mov
shl
or
mov
mov
push
pop
dec
push
insb
aad
or
add
push
sub
mov
in
mov
xlat
sub
inc
add
in
out
add
add
sbb
jp
scas
push
jle
js
call
sbb
movsl
scas
pop
jnp
int3
mov
negb
push
cmp
mov
dec
pop
fxch
pop
into
inc
adc
sahf
sbb
jg
mov
stos
mov
scas
ljmp
sbb
push
rcr
jb
mov
outsb
stos
mov
incl
sub
push
mov
dec
shl
cmpsl
ljmp
jns
repz
mulb
lds
sbb
add
insb
ljmp
inc
push
fsubs
stos
mov
sub
xchg
gs
adc
aad
sbbl
xor
sbb
sbb
mov
out
dec
pop
cmc
je
add
lods
mov
test
outsl
sbb
xlat
mov
es
pop
mov
ja
or
loop
bound
sahf
push
js
aad
adc
cmp
cli
or
sub
inc
mov
xor
out
frstor
aaa
cmp
andb
pop
add
and
addb
lds
dec
adc
cmp
ss
mov
pop
mov
xchg
dec
mov
sahf
lods
pop
cmp
add
push
inc
inc
mov
mov
pusha
xchg
mov
scas
mov
push
lret
adc
test
mov
loopw
addr16
or
rclw
out
mov
leave
call
jb
roll
or
jb
ljmp
loope
push
jbe
jge
push
ds
mov
xchg
and
pcmpeqb
mov
cmp
fs
repz
mov
pop
mov
xchg
jle
stc
and
push
add
push
fwait
ret
mov
lret
scas
jae
adc
stc
hlt
loop
aam
adc
sbb
or
mov
lahf
inc
cmpsb
push
mov
add
addr16
shlb
stos
cs
fists
jecxz
outsb
mov
fdivrl
sbb
pop
or
scas
lahf
jb
mov
jne
jle
aad
xchg
les
sbb
jnp
mov
mov
inc
push
jecxz
outsb
push
adc
fnstcw
inc
push
inc
jmp
sahf
pop
dec
or
outsl
inc
imul
jno
call
dec
jecxz
lret
enter
lea
into
xchg
fmull
add
rcl
or
bound
sbb
popf
pop
inc
jge
xchg
push
mov
arpl
rorb
je
or
pop
sti
mov
ja
ffreep
jmp
stos
sarl
add
mov
adc
outsb
mov
xor
repnz
lods
mov
and
and
inc
or
xor
scas
pop
sbb
adc
js
jge
xor
push
outsl
daa
sub
mov
pop
adc
push
outsl
call
and
pop
test
loop
cmp
out
sub
nop
subl
daa
push
fisubrl
jne
ret
add
stc
adc
mov
xor
pop
ret
ret
ret
arpl
mov
mov
loopne
xor
jle
hlt
or
stc
iret
adcb
cmpsb
mov
dec
pusha
push
loopne
or
mov
push
adc
pop
jae
dec
inc
mov
fdivl
jae
call
call
push
or
cltd
fs
dec
mov
aad
fcmove
fildl
dec
cli
jecxz
notb
dec
inc
cmp
push
outsb
mov
mull
ret
xchg
xor
arpl
ss
lods
fistps
cld
mov
dec
mov
cld
dec
insl
push
loop
pop
imul
mov
movsb
pushf
shl
iret
stos
fisubrs
or
inc
push
cmp
add
dec
cmp
test
leave
lahf
push
nopl
dec
outsb
ja
out
call
fisubrl
jmp
jge
xchg
jo
dec
in
add
subb
pop
movsl
or
cmp
xor
pop
lret
icebp
mov
out
cmp
jne
movsb
push
cmp
nop
sahf
lds
mov
dec
cmc
xchg
mov
into
xchg
decl
sbb
sbb
mov
lahf
mov
and
adc
mov
in
jp
es
in
int3
pushf
sbb
in
rclb
sub
cld
mov
push
movsl
jg
add
cmp
cmp
popf
into
push
inc
out
pop
jnp
jno
cs
push
fldt
push
movsl
mov
movsl
cmp
pop
jge
mov
mov
in
fidivrl
sbbb
jo
mov
jl
stc
fwait
rclb
adc
notb
test
scas
cwtl
push
xor
dec
jle
jns
dec
test
push
stos
xchg
ss
add
jecxz
push
cmpsb
jge
mov
and
or
pop
pop
adc
mov
dec
mov
repz
stos
inc
ret
and
pop
ljmp
xor
and
js
jle
jb
test
lds
clc
jle
jp
push
cmpsl
adc
call
xchg
arpl
xor
sbb
jecxz
add
dec
ficompl
fucomi
in
leave
lret
inc
inc
dec
gs
imul
inc
mov
jg
sub
jnp
andb
fsubr
mov
xor
and
lock
pop
ljmp
jne
and
fists
push
mov
imul
mov
shrl
inc
adc
add
or
imul
int3
fs
je
iret
adc
xchg
nop
push
mov
push
cld
je
das
fcmove
jg
rcrl
int
lret
mov
push
stos
inc
int
mov
mov
test
and
jb
cmpsl
add
jl
push
xor
mov
mov
repz
jge
cmp
test
mov
imul
outsl
nop
jecxz
ss
pushf
inc
shll
jmp
test
jmp
jl
call
aaa
imul
add
cs
push
sub
stos
imul
jge
adc
lea
mov
ss
fistpl
and
fs
xchg
mov
dec
jae
push
popf
cmpsl
faddl
jnp
dec
or
cmpsl
cltd
jecxz
cmp
pop
mov
mov
mov
or
test
divb
rcrb
int3
jmp
into
adc
mov
out
adc
out
sub
mov
xchg
lock
pushf
mov
mov
push
sub
fdivs
push
cmpsb
fidivl
flds
rolb
lcall
lods
subl
pop
xlat
mov
lret
je
push
xor
push
imul
and
stc
rclb
mov
and
out
inc
jno
cmp
push
push
insl
cmp
cltd
scas
das
leave
jecxz
sbb
and
jecxz
fiadds
mov
mov
push
filds
mov
cld
and
lods
jae
mov
add
mov
push
mov
sub
inc
mov
shrl
stos
push
add
stos
xchg
or
daa
ja
dec
popa
aam
mov
mov
push
push
fmuls
lret
repz
sub
movsl
pop
imul
and
int3
sahf
aad
cmpsb
jb
pop
inc
into
mov
xlat
push
pop
daa
out
dec
fildl
xchg
push
sbb
sbb
je
enter
loop
xchg
jmp
movsb
enter
iret
shrl
movsl
fcoml
push
shrl
lcall
out
cmp
stos
orb
add
in
add
je,pn
sbb
mov
sahf
xchg
fisttpll
lock
inc
in
movsl
fsub
shrb
fistl
dec
cli
out
imul
fistpl
bound
or
out
push
fyl2x
cltd
xchg
sbb
pop
inc
in
xchg
jle
rclb
push
into
dec
sub
push
inc
mov
ret
add
orl
inc
push
lret
int3
or
and
dec
fstpt
mov
daa
cmpl
cmp
cltd
jle
or
and
cmpsb
out
xor
popa
or
icebp
pop
sub
fisubrl
imul
and
adc
adc
das
jns
and
stc
xor
mov
push
adc
stos
fistpll
imul
dec
fisubs
xchg
xlat
push
dec
xchg
ret
arpl
xchg
in
push
cwtl
jle
rorl
imul
loope
aaa
jbe
sbb
mov
in
inc
enter
mov
loope
fcoml
sahf
dec
popf
imul
call
lods
loop
ds
mov
jne
mov
cmp
icebp
popa
push
fiadds
sbbl
adc
jne
lods
push
or
arpl
mov
mov
pushf
hlt
repz
sub
adc
xor
scas
daa
sub
sbb
xor
hlt
inc
jnp
xorl
push
mov
xchg
and
popa
xor
sub
repnz
sbb
jne
arpl
sbb
xchg
popf
sahf
arpl
lcall
push
sahf
test
sub
mov
mov
mov
lret
cmp
mov
push
push
scas
shll
aaa
test
hlt
outsb
mov
jne
lds
add
xorl
lcall
scas
add
push
movsb
test
add
lahf
push
into
adc
adc
cmp
sbb
jle
cltd
xchg
push
iret
jle
and
add
and
inc
aam
xor
push
pop
sub
adc
and
sub
add
fsubr
adc
inc
mov
or
fistl
adc
or
cmp
dec
divl
iret
pop
leave
mov
and
pusha
sahf
sbb
mov
xchg
mov
je
das
jno
add
xchg
jnp
sub
fisubl
mov
outsl
and
enter
out
xchg
insb
mov
xor
mov
and
arpl
cmp
mov
or
iret
cmp
cltd
cwtl
aam
aaa
stc
push
or
push
add
repnz
std
lcall
insl
push
jnp
mov
inc
fsubrs
popl
xor
sub
dec
cwtl
fs
pusha
ret
inc
nop
in
loope
or
mov
lds
mov
std
jno
sbb
int3
rorl
push
mov
icebp
std
cmp
cld
outsl
je
push
jae
nop
movsl
out
cwtl
sahf
sub
pop
sbb
jg
adc
es
push
stc
pop
push
sub
adc
xchg
aas
mov
pushf
jbe
lcall
mov
sar
dec
int3
push
test
sbb
jp
mov
pop
arpl
pop
pop
dec
mov
mov
hlt
xlat
adc
cmp
ds
mov
cmp
mov
xchg
xorl
leave
mov
stc
jle
stc
cmpb
dec
xchg
insl
xchg
jg
cmpsb
push
ret
testb
xlat
fscale
call
mov
ret
cmpsb
push
sub
pop
mov
neg
jno
jp
mov
aad
dec
stos
mov
xchg
lahf
adc
push
ficomps
pop
mov
imul
adc
es
jl
sbb
pop
ret
scas
sbb
ss
mov
ss
aas
pusha
pop
adc
xchg
pop
push
mov
test
fisttps
not
add
stos
inc
mov
push
jl
fisubrl
mov
bound
sbb
inc
jne
xchg
aaa
in
mov
mov
add
cmp
or
jle
inc
ja
sti
and
cmp
fwait
pop
mov
adc
test
mov
mov
push
iret
sub
pop
std
sbb
dec
push
jmp
xlat
in
int3
push
adc
sar
jecxz
loopne
mulb
andb
gs
shr
jno
in
mov
cmpsb
and
dec
into
cli
pop
mov
shl
push
push
sbb
xchg
pushf
jne
jbe
fwait
repz
sahf
sbb
roll
xchg
push
xor
movsl
cmp
jmp
fnstenv
xchg
pop
jno
icebp
aad
sbb
loopne
mov
popf
pusha
mov
add
pop
nop
dec
insb
out
outsl
jmp
mov
sub
mov
jae
sub
pop
push
mov
addl
frstor
scas
aam
and
outsl
xor
push
jne
xchg
aas
test
leave
mov
cmp
repnz
xor
or
sub
dec
ret
pusha
jae,pt
xor
nop
fnstcw
lahf
pop
sbbb
jecxz
mov
pop
pop
test
jecxz
addl
mov
lds
sbb
fisubrs
std
mov
xchg
jecxz
in
dec
lods
aas
xchg
and
jno
cmp
mov
in
pop
pop
es
mov
filds
daa
or
in
inc
adc
adc
aas
mov
fisubrs
in
dec
pushf
inc
mov
imul
ficoml
adc
inc
outsb
aam
nop
lahf
pop
adc
scas
mov
xchg
sbb
test
call
out
icebp
into
jle
dec
int
roll
adc
bound
sbb
mov
adc
test
test
xchg
xchg
stos
lretw
lea
mov
fldenv
inc
push
sbb
xchg
outsl
cmp
cmp
dec
dec
gs
popa
push
addl
aaa
or
add
sbb
inc
mov
inc
sbb
push
test
mov
xchg
xchg
gs
mov
sahf
sub
fisubl
js
cltd
adc
ret
cmpsb
jno
data16
stos
mov
gs
pop
pop
mov
sbb
sub
xchg
leave
push
xchg
xchg
push
fists
mov
cmp
daa
nop
mov
ja
sub
mov
push
and
movsl
sahf
aas
pop
sbb
xchg
fucompp
push
inc
lcall
xor
cmpsl
outsb
push
ss
mov
add
out
movsl
aam
adc
cmpsb
sub
and
ret
xchg
mov
ret
test
rcrl
insb
ficomps
aad
dec
mov
add
dec
fsubl
sbb
xchg
sub
into
arpl
cmp
cs
push
fnsave
stos
add
mov
dec
cmp
mov
mov
jne
jns
jecxz
ja
inc
out
gs
sbb
je
jns
mov
xor
mov
jle
push
push
out
rcrb
int
and
fsin
adc
stos
sub
les
js
dec
push
clc
push
aaa
lret
xchg
and
push
fimull
and
mov
cmp
mov
arpl
ds
xchg
or
mov
nop
push
adc
mov
jnp
cmp
cmp
sub
add
stos
inc
pop
rol
pushf
ljmp
add
push
shlb
mov
scas
jno
dec
mov
mov
jmp
xchg
sbb
divl
out
and
and
sub
in
mov
outsl
sub
mov
jbe
arpl
jmp
cmc
adc
negb
cmp
sub
aam
daa
push
xchg
je
jecxz
lcall
icebp
mov
imull
lock
sbb
rorb
pop
lahf
mov
adc
jmp
pop
cld
movsl
test
mov
int
push
add
cmc
jmp
add
dec
push
push
insl
push
jo
sbb
xor
add
inc
lods
add
mov
sbb
pop
les
mov
xor
add
test
std
ja
sbb
inc
movsb
cltd
decl
insl
sub
out
or
xchg
jns
jb
adc
loopne
mov
pop
sahf
fsubs
jp
popf
adc
dec
adc
xchg
mov
test
xor
pop
clc
orl
add
sahf
push
imul
sarb
nop
xor
cmpsl
mov
stc
push
jge
adc
jno
leave
das
gs
pop
inc
imul
push
sbb
mov
popa
movsb
popa
shll
notb
adc
andl
jge
push
sub
hlt
cmpsl
xor
push
js
adc
in
cmp
inc
xchg
mov
je
or
call
daa
pop
aaa
aas
xor
adc
testl
test
aaa
ret
sbb
add
inc
and
scas
div
xchg
inc
xchg
adc
sub
jbe
inc
sub
xor
loop
js
pop
aad
test
icebp
and
bound
popa
imul
sbb
orb
dec
lock
cmpsb
mov
ret
ret
cmp
add
push
and
or
push
jno
rcrb
or
xor
out
mov
je
aaa
lahf
jae
outsl
push
cmp
mov
inc
push
ret
ljmp
std
out
cmp
pop
pop
add
das
daa
mov
out
pop
mov
push
push
data16
add
js
sub
or
push
js
xlat
push
and
rorb
out
leave
roll
xlat
mov
push
idivb
xor
ljmp
sbb
inc
and
loope
xchg
scas
fs
std
pop
push
dec
fnstcw
int3
aad
jg
popa
sub
mov
mov
lret
pop
cmp
xor
adc
adc
lahf
xor
mov
loop
inc
adc
jb
inc
bound
cwtl
ja
cmpb
vfrczpd
mov
ds
or
addb
jnp
in
xor
stos
bound
xor
pop
bound
aaa
xchg
push
pop
int
cltd
into
xchg
jl
sub
and
mov
fistps
sub
sub
ljmp
sbb
jae
movb
xchg
or
dec
mov
xchg
cld
xchg
lcall
gs
rcl
filds
xor
rclb
cmpsb
xchg
mov
imul
jecxz
jp
push
fwait
lcall
les
aad
and
dec
jmp
nop
dec
inc
test
jp
dec
negb
js
mov
push
jns
daa
inc
sub
push
jp
mov
pop
sbb
mov
inc
aaa
xor
fidivrl
repnz
mov
test
inc
fs
aaa
jmp
outsb
lret
jbe
test
pop
cmp
inc
xor
mov
rcrl
call
pop
jns
enter
je
outsl
push
mov
mov
push
and
mov
imul
jmp
pop
fidivrs
int3
push
adc
divl
jns
push
sub
inc
mov
mov
cmp
stos
add
sub
imul
fsubrs
in
fidivs
imul
lds
stc
mov
bound
pushf
adc
loope
lret
scas
dec
lods
repnz
mov
pop
pop
or
mov
sub
cmc
je
loop
mov
je
jl
nop
rcr
movsb
jge
js
sub
setne
stos
aas
sti
lcall
adcb
push
mov
dec
mov
les
lock
jb
mov
fldl
mov
ret
loop
adc
mov
xor
movl
mov
les
pcmpeqd
fsubp
cmp
adc
sub
fcomp
sarb
ds
clc
push
ror
std
fimuls
js
sub
cli
mov
inc
ret
and
cmp
in
xor
cwtl
inc
ds
pop
jo
and
lret
arpl
push
jmp
mov
add
mov
dec
rdmsr
push
icebp
int3
fs
add
cwtl
push
daa
mov
sub
in
aas
cmc
push
movsb
cmc
cs
jns,pt
dec
fsubs
pop
daa
leave
mov
or
in
pop
sbb
nop
stc
dec
cmpb
pop
push
out
dec
xlat
mov
push
call
mov
xchg
lret
jmp
and
int
loope
aas
pop
out
inc
fiadds
mov
mov
cmpsb
int
adc
adc
or
lret
rorl
fsubl
daa
sub
cmp
mov
add
or
xlat
sbb
shlb
xchg
mov
sbb
in
insb
add
hlt
sub
clc
lret
repz
or
cmp
shlb
fimull
cmp
dec
and
pop
iret
jp
push
and
lds
and
test
rorb
cltd
imul
push
add
or
outsl
inc
push
fistl
leave
in
stos
cwtl
mov
dec
into
loope
mov
cmpsb
cld
sbb
jno
cli
test
js
push
adc
enter
aam
adc
loop
arpl
aas
dec
inc
sbb
cltd
loopne
push
fdivrl
push
cmp
inc
incl
add
adc
inc
inc
xchg
cmpsb
add
cwtl
jae
add
ja
loop
data16
das
xchg
or
push
pop
std
cmpsb
adc
mov
pop
pusha
clc
rorl
mov
pop
dec
cmp
fdivl
pop
iret
icebp
imul
ss
fstpt
sbb
push
sub
loop
xor
cld
mov
xor
int
mov
push
dec
loope
or
adc
sbb
jg
or
addr16
iret
repz
mov
bound
orb
or
loopne
xchg
mov
mov
xorb
sub
cmpsl
jnp
hlt
popa
dec
push
sub
rorl
aam
inc
dec
add
test
mov
pop
call
or
incl
loopne
mov
repz
mov
adc
xlat
in
or
pop
lods
adc
and
xor
mov
xor
popa
push
mov
adc
mov
pop
adc
shll
add
inc
jle
sub
sub
jne
sub
call
cmpsl
dec
jle
iret
xchg
pop
add
push
mov
push
arpl
lret
cmp
data16
test
aad
ds
jl
out
shr
shrb
sub
jecxz
mov
loope
je
cmp
pop
rcl
mov
cmpsl
mov
cmp
push
aaa
mov
iret
scas
dec
enter
pop
loopne
push
ja
push
push
push
arpl
xchg
negb
jmp
mov
or
cld
pop
cmp
jg
mov
dec
lods
std
xor
push
movsl
xchg
or
jne
arpl
xchg
inc
das
pusha
aaa
sub
lahf
cmpsl
mov
mov
fldenv
test
pop
scas
pop
lret
xchg
add
dec
out
hlt
subl
mov
sub
jg
mov
out
aad
or
add
sub
pop
add
pop
and
addb
cmp
add
jnp
xorl
dec
scas
add
jmp
imul
clc
fldcw
les
sbb
insb
flds
icebp
andb
add
or
loopne
cmp
lret
jle
lds
dec
call
sub
sub
push
shlb
ljmp
imul
mov
dec
push
sub
cli
jo
xchg
and
es
sub
inc
jmp
jb
ja
loope
cld
xor
into
shlb
pusha
sub
lock
mov
push
xor
insl
mov
stos
xor
scas
jbe
sub
jns
fdivr
shll
out
insb
push
stc
xchg
loop
loop
sbb
xchg
mov
imul
test
sbb
shlb
shll
dec
xor
testb
jg
ficomps
in
push
out
into
data16
sahf
das
clc
test
mov
xor
sbb
mov
xor
and
les
inc
in
fnstsw
repnz
xchg
xor
imul
inc
jmp
inc
cmc
sbb
movsl
jae
insl
shr
and
mov
lods
jmp
adc
cs
or
mov
xlat
stc
add
clc
mov
stos
sti
dec
and
pusha
and
sbbb
inc
pop
or
rclb
das
or
je
int3
daa
sbb
iret
inc
xchg
mov
adc
stos
pop
addl
cs
insb
stos
outsb
icebp
adc
jno
push
cltd
ljmp
out
imul
dec
push
xor
or
push
inc
movsl
insl
loop
add
mov
addr16
jl
push
nop
fimuls
mov
ret
sbb
jbe
mov
fnsave
mov
ljmp
dec
cli
mov
add
rorl
and
cmp
mov
adc
inc
movsl
lret
sbb
in
mov
adc
sub
jecxz
test
or
ret
mov
sti
mov
das
xchg
and
in
jno
cmc
jno
std
dec
mov
sub
add
fcmovu
xor
aaa
lock
rol
out
mov
pop
lock
cmc
sub
xor
push
mov
pushf
in
mov
sbb
add
push
cmp
adc
dec
mov
or
mov
dec
xchg
leave
test
clc
fildll
shl
mov
cwtl
sub
add
push
fsubs
out
mov
imul
fmuls
test
js
mov
mov
cmovno
push
mov
cmc
cli
ljmp
call
xor
daa
xchg
inc
leave
lahf
adc
or
out
dec
les
cmp
xorl
adc
getsec
pop
and
cmpsb
les
dec
mov
fldcw
adc
data16
or
in
scas
mov
outsb
fistl
inc
sti
jmp
sub
and
and
xchg
ljmp
ds
test
mov
mov
sbb
loope
sbb
push
mov
and
es
lret
mov
push
lea
lret
fsubr
mull
imul
inc
jne
xchg
fisubrs
mov
out
in
mov
inc
movb
xor
pop
movsb
xchg
pop
mov
icebp
outsl
add
adc
gs
psubq
xchg
jns
adc
mov
daa
les
sub
test
sub
popf
mov
jbe
and
pop
sbb
push
push
inc
cmpsl
repnz
fwait
ja
sub
cmpsl
insb
sbb
dec
fwait
pop
jg
sbb
or
pop
loopne
and
xchg
out
push
mov
dec
lcall
cltd
inc
imul
rcrl
sti
aaa
inc
jecxz
jmp
mov
cmp
xchg
lods
test
testl
xchg
jle
popf
or
cmc
pop
sub
add
into
mov
les
inc
pop
fdivs
out
in
in
inc
ja
jg
sub
stc
cmp
mov
cmc
push
dec
sbb
and
mov
or
fwait
lret
cld
inc
out
jbe
aad
mov
jb
bound
xor
adc
xor
addl
ss
arpl
stos
scas
push
xor
cwtl
mov
xor
sbb
aaa
lcall
jge
sub
lods
fisubl
dec
rcl
sahf
sbb
mov
test
sbb
imul
push
and
xor
popa
cmp
sbb
fnstcw
jbe
cltd
ja
pop
gs
movsb
mov
jns
xor
inc
sub
cmc
xor
daa
pop
adc
in
mov
mov
in
push
xor
mov
and
push
enter
xchg
adc
inc
fistpll
and
idivb
inc
or
pop
enter
pop
push
loop
pushf
pop
mov
fmulp
lahf
repnz
test
push
lods
addb
push
pop
lock
ljmp
les
sub
pop
std
xchg
sti
or
push
push
cwtl
test
insl
xor
adc
gs
xor
out
cmp
daa
in
adc
fidivs
mov
inc
and
or
jp
out
popa
je
clc
cs
shlb
ret
xor
mov
leave
mov
sub
inc
xlat
jae
pop
fs
sub
sub
nop
rcl
pop
out
jbe
xchg
in
pop
mov
sbb
inc
test
out
inc
mov
pop
nop
mov
mov
in
push
cli
test
mov
sbb
subl
insb
mov
sbb
xchg
sbb
xchg
aaa
push
loope
test
cmpsl
je
inc
jmp
pop
lret
insb
cld
test
outsb
lds
jb
xor
sbb
xchg
imul
fwait
into
lods
sub
xchg
push
clc
cmp
inc
es
rcl
pop
idivb
inc
add
dec
pop
dec
dec
std
gs
cmc
roll
loope
clc
addr16
or
lret
addr16
in
pop
mov
sbb
dec
jp
push
inc
gs
shll
pop
cmp
rcrb
jecxz
xchg
cld
in
push
das
jle
cs
and
addr16
and
dec
fcomps
leave
or
mov
and
xor
and
cmp
lcall
push
stos
hlt
ret
inc
fcoml
and
dec
adc
dec
iret
lea
clc
lret
cmpsl
fcomps
stos
insb
add
mov
inc
mov
push
outsl
lods
hlt
push
cmp
in
or
jns
mov
lods
push
mov
add
fisubrs
call
sbb
dec
mov
cmp
mov
ljmp
cli
cmpsl
fwait
mov
js
inc
mov
stc
push
mov
cmp
dec
jge
sbb
jo
cmp
cld
out
or
cli
out
xchg
pop
pop
test
or
jo
rol
ja
mov
repz
lods
mov
sahf
rcrb
test
dec
adcl
sub
repnz
jns
push
insb
pop
mov
inc
dec
add
mov
mov
sub
adc
xchg
in
adc
sbb
lods
pushf
popa
cmpsb
out
rolb
sbb
sbb
xlat
xchg
push
pop
nop
int
js
call
add
leave
push
xlat
divb
xchg
popa
aas
pop
push
xor
data16
xor
and
add
or
cmp
or
mov
fildll
ds
cmc
dec
xchg
push
lret
shll
shrl
inc
push
addl
dec
stc
cmp
mov
fisubs
mul
or
enter
pop
aaa
dec
xchg
decl
mov
pop
rcrb
mov
mov
out
mov
lea
adc
sub
in
sbbb
jne
cli
imul
je
pop
pushf
in
inc
imul
jmp
icebp
fildll
sub
push
mov
ja
fmuls
arpl
out
jbe
pop
or
pop
fnstsw
pop
fdivrs
pusha
xlat
inc
lds
dec
sbb
dec
pop
xchg
push
aam
fimull
in
dec
mov
mov
jge
loop
jae
sub
shrl
pushf
pop
bound
or
pop
or
pusha
mov
push
and
dec
in
mov
push
js
xchg
sub
ret
dec
mov
mov
pushf
int3
add
xchg
rcrb
sub
inc
shll
arpl
cs
nop
sti
cwtl
push
movsb
test
or
pop
mov
rorb
or
shlb
loop
fidivrl
and
push
data16
arpl
xchg
dec
cmc
mov
mov
test
ret
mov
xor
or
aam
xchg
cmp
mov
inc
mov
ret
jge
cmp
mov
xor
sub
popa
sbb
mov
ret
loopne
fnstenv
loope
jle
out
aam
jle
push
xchg
mov
fnstcw
mov
sub
sub
sub
xor
outsl
inc
pop
dec
push
addb
gs
test
jb
dec
jp
jns
xor
xchg
insb
xor
out
pop
fiadds
xor
inc
lods
movsl
test
and
hlt
adc
loope
cmp
imul
adc
xorb
lods
jae
ja
js
stos
mov
shrl
dec
fdivl
dec
xor
jp
cld
int
cmp
cmp
mov
mov
popf
xlat
shlb
imul
js
mov
scas
hlt
cmpl
inc
mov
data16
out
mov
insb
movsb
xchg
xchg
cmp
je
std
lods
imul
jmp
inc
xorb
adc
xor
mov
and
outsl
lock
cmp
leave
mov
xchg
cmp
lidtl
dec
js
dec
stc
jb
xchg
dec
imul
test
enter
or
push
popf
sbb
jl
inc
movsb
mov
push
pop
and
idivl
sbb
addr16
clc
aas
xor
cltd
imulb
sub
test
xlat
jmp
sub
out
adc
idivl
mov
jecxz
inc
aaa
loopne
test
xorl
and
addr16
or
mov
ja
mov
xchg
fs
add
stc
push
or
jns
mov
jp
jecxz
mov
dec
jmp
lcall
loopne
push
mov
addr16
mov
clc
pop
push
push
int
ficoms
mov
pushf
scas
cmpb
push
jo
pop
pusha
pop
pop
mov
cmp
mov
push
xchg
xchg
push
das
jno
or
xor
clc
fwait
mov
add
mov
push
je
fsubs
adc
repnz
je
orb
jb
cmp
int
fisttpll
sbb
popa
mov
rorl
mov
push
call
push
add
out
jns
fwait
jnp
adc
test
xorl
xor
mov
aam
mov
imul
das
les
cmpl
jecxz
or
push
push
jp
jns
js
jbe
fistpl
dec
imul
stos
mov
jne
push
clc
es
or
push
mov
mov
aad
aad
adc
std
xchg
movsb
add
pop
in
xchg
ja
mov
push
pop
loope
ss
adc
inc
rclb
mov
andb
mov
cli
out
mov
mov
ss
aas
add
sub
mov
push
push
sub
cmp
mov
sarb
movb
imul
jmp
dec
and
mov
mov
lods
inc
arpl
addl
cmp
jo
pop
andb
mov
dec
push
ljmp
shrl
xorl
pusha
and
cld
lahf
pop
inc
sbb
push
int3
push
push
sbb
lret
icebp
xchg
arpl
test
inc
xchg
fld1
push
push
xor
push
popf
in
add
and
rolb
ret
xchg
leave
das
push
mov
jmp
aaa
test
cld
enter
lret
ljmp
outsl
movsb
call
jecxz
data16
fidivrl
movsl
push
pop
mov
stos
shlb
pop
mov
push
adc
and
je
imull
lcall
lahf
scas
add
popa
fwait
jl
xchg
and
pusha
andb
xor
pop
push
bound
sbb
add
xor
sub
pop
push
clc
out
jecxz
xor
ss
arpl
adc
scas
roll
jbe
dec
add
dec
fildl
adc
cs
or
ret
loop
pop
outsl
mov
jle
daa
lret
fidivs
and
cs
mov
sbbl
pop
call
lcall
or
or
stos
aaa
mov
xchg
hlt
add
cmp
clc
hlt
sbb
fstp
movsb
mov
lods
loopne
mov
mov
sbb
xlat
xchg
fwait
push
dec
jp
lods
mov
mov
or
fs
xchg
dec
mov
push
xchg
sub
xor
hlt
pop
shl
imul
std
push
mov
pop
inc
loope
dec
jns
ret
sub
jp
cltd
enter
out
mov
dec
sub
ret
cmp
andl
mov
cltd
mov
push
dec
xchg
jge
rol
je
push
or
in
scas
push
xlat
mov
xor
jb
shlb
xchg
xchg
lock
aam
aad
fsubp
sahf
dec
clc
jge
push
xchg
jp
push
daa
cld
lret
int3
insb
mov
xlat
push
xor
icebp
ret
ret
pop
sbb
dec
subl
or
xor
adc
inc
aad
dec
push
dec
daa
aam
push
cmp
pusha
loope
fsubr
mov
aas
adc
sub
mov
inc
ret
outsb
imul
xor
dec
incl
and
sub
pop
in
push
dec
push
and
into
or
ljmp
roll
pop
push
orb
push
inc
lcallw
adc
movsb
mov
cmpb
lods
fdivrs
aas
xor
cltd
sahf
cs
sbb
loopne
cmp
add
pop
sbb
or
lods
jge
adc
cmc
pop
add
jb
jae
and
inc
in
jp
iret
rorb
addr16
adc
pop
nop
or
xor
es
xor
sti
mov
jge
xor
xor
sbb
shr
mov
fs
xlat
enter
pop
call
test
int
jnp
arpl
or
and
add
adc
sbb
pushl
insb
out
push
cld
push
push
inc
shll
out
mov
push
enter
stc
jnp
imul
and
sbb
xor
dec
repz
into
out
mov
xchg
in
lret
push
lahf
enter
dec
repz
addr16
fldt
mov
sbb
push
in
push
mov
push
subl
sbb
outsb
cmpsl
jo
scas
cmp
push
lret
fdivl
lods
or
in
xor
imul
jae
push
mov
ret
ret
mov
cmp
ja
pop
stos
dec
xchg
push
fs
rolb
sub
mov
dec
mov
jns
loope
mov
popl
and
adc
cli
pop
aam
es
cld
xchg
mov
mov
sbb
pop
lret
mov
ds
xrelease
sbbl
cmpsl
dec
int3
and
push
jp
shrl
push
sbb
test
xor
lcall
xor
pop
sahf
movsl
push
cmc
iret
jne
push
insb
pusha
and
xchg
or
and
rcll
inc
push
sub
fs
dec
aas
aam
movsl
add
inc
shll
or
pop
sbb
jnp
push
inc
pushf
mov
flds
in
pop
push
push
nop
cli
xchg
inc
or
aaa
loope
inc
and
inc
sarl
addl
sub
mov
loop
imul
stos
mov
push
or
maskmovq
notl
jb
sbb
xor
sahf
and
and
icebp
cmpsb
out
and
inc
push
test
jae
xor
fcomp
fdivrl
dec
sub
sub
inc
push
sub
mov
scas
pop
dec
jle
lcall
fsub
loopne
sub
ds
arpl
cmp
xchg
into
mov
or
outsb
and
cld
pop
lods
imull
orb
mul
mov
test
cmp
mov
and
loopne
jo
push
insb
sbb
add
mov
cmp
sbb
outsb
stos
mov
pop
pop
inc
dec
cmp
sub
add
test
add
sub
xor
cmpsl
out
sbb
mov
mov
call
cmpsb
pop
inc
mov
or
scas
je
adc
in
adc
xor
int3
adc
xchg
test
sub
enter
sbb
push
out
pop
dec
fadds
and
in
fdiv
jns
pusha
in
jne
cmpb
test
mov
dec
movb
jne
and
jns
shlb
stos
and
into
in
jo
leave
cmp
jns
insl
ljmp
xchg
pop
pushf
sub
test
and
sub
test
mov
fwait
je
add
sbb
push
jns
xchg
into
pop
jb
aaa
adcb
mov
jmp
xchg
dec
cmp
int3
xchg
push
test
sbb
loop
mul
ds
shrb
inc
add
aas
fmull
fs
lcall
pop
add
add
sub
push
pop
xchg
stos
add
and
imul
lea
incl
sub
pop
pop
js
loopne
xor
dec
cmpsb
xchg
mov
inc
std
iret
shll
pusha
mov
dec
jbe
xor
mov
push
pusha
jle
popf
jmp
cltd
out
or
andl
adc
xor
xor
adc
sub
mov
or
jne
pop
int3
dec
das
mov
mov
pop
and
inc
jo
mov
jbe
pop
fiadds
adc
push
imul
or
ja
sbb
pop
push
cmp
cmp
pop
cs
int
dec
jecxz
and
xlat
dec
xchg
xor
cmp
fucomip
rolb
outsl
jmp
repnz
lahf
dec
cmpsl
sub
mov
push
mov
and
addr16
xor
scas
pop
inc
test
fstpt
jmp
inc
pushf
and
filds
in
dec
push
ffreep
or
std
cwtl
aas
sub
icebp
ret
and
fs
fmuls
sbb
jp
data16
mov
push
pop
dec
loope
dec
loope
ss
aas
inc
or
sti
or
jbe
sub
lahf
push
neg
arpl
out
test
ror
bnd
iret
mov
in
bound
sahf
into
ret
xchg
jecxz
cmpsb
pop
mov
sub
inc
mov
and
fldl
insb
inc
dec
inc
push
lods
mov
repnz
mov
lret
jae
arpl
aas
loope
lods
mov
imul
dec
les
sbb
or
inc
rep
ret
jp
xlat
pushf
or
dec
mov
cmp
cmp
cmpsb
out
hlt
and
movsl
push
xchg
fisubl
dec
cs
xor
sub
rcr
mov
aad
jae
xchg
movsl
jnp
jl
dec
push
mov
sahf
inc
mov
fwait
insb
adc
std
dec
stos
adc
lahf
push
ds
cmp
imul
lods
mov
shrb
pop
jne
mov
cmp
or
fcoml
outsb
mov
arpl
mov
mov
jbe
jno
pushl
sub
push
and
jo
sub
mov
mov
pop
je
mov
mov
xor
outsb
push
sbb
push
mov
fwait
jbe
testb
mov
push
ret
xor
xlat
push
cmpsl
std
or
mov
pusha
pop
jo
les
sbb
test
outsl
jmp
and
pop
stc
std
jp
testb
sbb
sbb
stos
and
xor
out
outsl
ret
and
mov
lods
scas
pop
mov
aaa
xchg
and
test
push
icebp
ds
add
or
ss
fwait
mov
and
pop
dec
mov
jp
inc
sbb
clc
inc
inc
movsb
push
xchg
addr16
dec
cmp
mov
lret
mov
cmp
jne
sbb
mov
mov
mov
into
pushf
adc
hlt
loopne
cli
outsb
in
insb
pop
and
je
push
stos
pop
rcl
cmpsl
add
dec
add
call
push
mov
cmp
imul
jo
incb
dec
lret
mov
mov
out
ror
fwait
dec
push
cmc
push
outsl
addb
cs
into
jecxz
inc
push
pop
dec
mov
jb
jmp
dec
pop
xor
xlat
jl
mov
jp
ret
inc
mov
dec
mov
xchg
test
imul
stos
xchg
mov
xor
daa
mov
or
arpl
mov
adc
jle
enter
jle
sub
push
ja
add
and
hlt
mov
fs
sbb
pop
ret
pop
daa
dec
push
adc
lock
jmp
pop
mov
sbb
sahf
xor
sbb
sub
fucomip
imul
xlat
push
add
or
out
mov
loop
in
jl
lea
sar
test
pop
cmp
pop
push
inc
adc
dec
sbbb
or
mov
add
and
mov
lods
inc
cmp
add
inc
mov
lret
push
mov
push
mov
push
sbb
lds
sub
out
sbb
inc
in
shrl
and
dec
int
and
rcll
push
mov
dec
adc
adc
test
pop
sub
inc
jmp
sbb
fcoms
lea
sbb
mov
je
jae,pn
pop
sbb
popf
push
repnz
adc
lock
xchg
rcrl
xor
xor
dec
and
mov
adc
mov
or
xor
mov
mov
mov
adc
inc
sbb
arpl
gs
jnp
xor
mov
insl
popf
popa
push
ljmp
sub
mov
push
jns
adc
testb
cmp
adc
xchg
push
rcr
adc
das
push
mov
add
test
lods
push
mov
movsw
das
test
inc
jl
xchg
inc
pusha
jns
lods
or
sub
sti
lods
out
xchg
shll
flds
dec
push
jne
push
roll
popa
jae
ret
shlb
push
cmpsl
cmpsl
add
je
mov
test
push
push
mov
pop
jmp
into
mov
sbb
daa
sbb
xlat
mov
cmp
and
test
cmp
mov
fcoms
scas
sbbb
mov
sahf
mov
jns
mov
pusha
test
jns
dec
mov
push
f2xm1
lods
stos
or
arpl
xchg
test
insb
icebp
imul
repnz
in
xchg
out
and
add
and
enter
icebp
loope
inc
cld
sbb
ficoms
mov
xchg
add
or
jmp
push
cli
push
movsl
outsl
sysenter
xor
repnz
ds
iret
out
cmp
sbb
push
jbe
mov
test
fstpl
lds
inc
orl
and
xchg
dec
mov
int3
cmp
add
mov
push
mov
lcall
jmp
mov
insb
mov
pop
sbb
push
mov
sub
push
pusha
push
pop
dec
roll
push
cltd
mov
mov
sbb
mov
dec
xchg
pop
aam
leave
cmp
cmp
jl
pop
mov
jne
fisttpl
aaa
pop
mov
push
out
and
pop
xor
sub
out
mov
mov
jge
pushf
push
aam
xchg
popl
and
pop
inc
movsb
inc
imul
loop
jnp
push
fcoml
ret
or
and
shrb
repz
push
stc
test
lods
aad
xchg
mov
cmp
lahf
sbb
test
jge
loop
push
outsl
js
aas
push
push
repz
cwtl
or
stos
movsl
jp
loope
push
pop
xlat
mov
mov
movsl
gs
aam
mov
fnstcw
lods
adc
jne
inc
ds
idiv
jmp
insl
in
mov
jbe
cmpsb
mov
sbb
in
and
stos
cmpsl
fwait
inc
mov
ret
adc
mov
adc
imul
jae
pop
frstor
jb
addr16
test
imul
cmp
xchg
ss
movsl
ss
pop
call
jb
dec
mov
adc
jb
dec
insl
shll
push
push
fldenv
aad
mov
inc
dec
adc
pop
adc
push
add
jecxz
xor
or
cs
pop
and
add
sbb
imul
xchg
pop
lretw
push
icebp
je
and
out
divl
mov
cmp
ds
push
adc
mov
iret
mov
pusha
cmp
ror
inc
sbb
mov
cmp
clc
cmp
in
cmp
es
fs
int3
addr16
jg
add
mov
lahf
icebp
in
and
ficoml
jmp
pop
in
xlat
dec
ret
adc
jns
sbb
adc
jmp
call
lea
push
pop
xor
out
test
sbb
ret
imul
nop
xchg
and
ds
mov
push
xor
sub
fdivl
in
push
das
loopne
jecxz
rcrb
add
add
insb
and
ror
add
mov
xor
jbe
call
inc
out
push
call
stos
push
pop
xchg
imul
fcomps
add
mov
into
mov
adc
mov
cli
sbb
dec
sbb
xchg
dec
xchg
add
mov
ret
pop
jae
mov
pusha
push
and
xorb
xor
popa
sub
hlt
cmc
sbb
mov
inc
xchg
sub
repz
inc
cmpsb
dec
in
addr16
sahf
add
addr16
mov
data16
ds
mov
dec
cld
arpl
mov
inc
mov
xchg
jecxz
mov
sub
add
adc
xchg
push
mov
jae
loope
sbb
cwtl
scas
mov
ljmp
pop
mov
aaa
mov
arpl
les
dec
lcall
in
jle
mov
push
cmp
ret
push
test
cltd
sub
mov
lods
int3
sub
dec
out
insb
jmp
mov
ljmp
je
call
loop
int
xchg
jmp
pop
adc
add
mov
sbb
lock
or
adc
mov
mov
adc
push
pop
mov
dec
ja
push
xchg
mulb
aaa
sub
sarb
mov
out
aad
adc
fistpl
shlb
pop
pop
mov
mov
and
cmp
in
add
sbb
jae
fidivs
decl
xchg
mov
idiv
sahf
mov
scas
orb
sub
add
and
test
dec
rcr
inc
dec
popa
aaa
or
mov
and
bound
cmpsl
sub
xor
lods
sub
js
clc
testl
xchg
stc
ljmp
fwait
out
mov
mov
ret
in
push
xor
mov
pop
outsl
push
pop
add
fsts
mov
pop
and
fistl
push
dec
outsb
sbb
jne
loop
fisttpl
loopne
add
hlt
into
lock
aaa
data16
movsl
or
mov
mov
test
mov
lret
int3
ror
orl
jns
or
dec
notb
sbb
add
fisubrs
popa
xor
sbb
xor
adc
int
push
sarb
xor
rcrl
inc
scas
mov
repnz
sarl
fldcw
loopne
add
cmp
push
pop
mov
jbe
jne
les
sbb
and
inc
pop
xchg
cwtl
neg
ljmp
dec
ret
or
out
jl
pop
cld
lcall
dec
mov
fstl
les
vmwrite
xchg
xor
push
pop
cs
mov
adc
sti
in
sbb
cmp
inc
scas
loop
fistpl
in
pop
fdivrl
add
lcall
or
out
testl
xor
push
push
sbb
jge
cmc
jp
mov
daa
and
mov
inc
mov
add
cli
push
add
pushf
or
scas
xor
subl
les
xorl
lods
and
pop
push
shrb
mov
push
mov
jge
insb
mov
lods
push
loope
lret
cmpb
or
cmp
insb
mov
out
out
fcmovu
aad
data16
mov
fidivrl
sahf
test
cmp
sbbl
pop
adc
hlt
lret
xchg
sbbl
scas
push
mov
ja
test
hlt
mov
cmp
and
stos
sbbb
jae
xor
pop
fildl
cmp
dec
cmp
cmp
or
outsb
dec
cmpsl
dec
cmp
sbb
adc
mov
das
mov
xchg
in
shll
mov
push
icebp
sti
loopne,pn
adcb
fisubrl
fstpt
sbb
jnp
out
aam
or
sarl
aas
push
add
unpckhps
jbe
sarl
out
ljmp
dec
std
sub
push
sahf
es
ror
lret
or
jle
scas
add
push
push
and
leave
enter
imul
and
imul
adc
call
or
testl
sub
aam
adc
hlt
ret
xchg
mov
sbb
into
pop
mov
sbb
xlat
sub
rolb
jmp
or
iret
rorl
xor
mov
inc
lods
fwait
cmpsl
fistps
fucomip
mov
push
sbb
cli
test
jge
insb
ret
mov
clc
add
push
and
cmpsb
enter
dec
mov
cli
sahf
dec
adc
ds
xchg
int
cwtl
pushf
xor
out
loope
int
lahf
mov
insl
mov
jl
mov
rol
test
push
leave
setne
das
into
test
int3
rcll
inc
out
jnp
fwait
out
push
mov
and
inc
cmp
leave
clc
xchg
fwait
ret
ljmp
pop
add
out
leave
aaa
sub
daa
xchg
xor
dec
faddl
adc
rep
andb
add
pop
sbbb
je
pop
push
movsl
es
sub
ret
and
setns
pop
pop
loope
ljmp
paddw
inc
dec
mov
cmp
mov
jle
jecxz
movsb
mov
rcll
mov
scas
jne
sahf
add
loopne
scas
es
cmp
mov
rcll
jp
cmc
bound
aaa
sub
mov
inc
push
fidivrl
movsl
xchg
ja
sarl
insb
xchg
mov
or
xchg
push
ret
repz
stc
arpl
out
pop
addl
lahf
adc
testl
cs
and
mov
push
pushf
mov
push
add
daa
mov
inc
xchg
dec
push
call
pop
cld
sub
inc
cmp
and
insb
pop
insl
repz
ss
xorl
jge
in
pop
pop
out
inc
sbb
adc
movsb
adcb
orl
cmpsl
mov
stos
push
sbb
ljmp
popf
not
jge
in
jp
dec
adc
repz
jnp
fs
imul
in
or
mov
lahf
jae
jae
sub
orb
daa
sbb
xchg
fbld
or
test
xor
add
and
lret
sub
add
cmp
mov
mov
dec
xchg
lods
cmpsb
scas
mov
mov
push
es
jmp
pop
inc
shr
movsb
or
arpl
add
imul
int
shlb
sbb
sbb
jns
dec
xor
stc
movsl
loope
pop
call
pop
sub
mov
xchg
gs
xchg
xlat
icebp
xchg
lods
out
iret
hlt
mov
sbb
fistl
xchg
lcall
sub
out
push
sti
ficompl
mov
xchg
cmpsb
inc
xchg
and
fcompl
sbb
sbbb
outsl
rorb
fmull
insl
fstpt
stos
xchg
aam
ret
shll
negl
fdivrl
inc
leave
cmp
add
pop
push
mov
mov
stc
pop
sub
cmp
xlat
or
sahf
mov
mov
mov
addb
mov
lock
push
mov
cmpsl
and
mov
insl
cmc
mov
xchg
aam
shlb
fiaddl
lcall
ret
repnz
test
mov
leave
push
cltd
cmpsb
inc
dec
sbb
aaa
insb
icebp
scas
sub
movsb
push
cmpsl
lock
mov
add
scas
bound
and
and
pushf
push
cwtl
adc
and
mov
insl
addr16
shl
orb
into
aam
jo
lds
pop
in
pop
push
add
cmc
test
mov
int3
imul
icebp
movsl
cmovbe
fwait
pusha
jmp
jg
adc
addb
mov
lcall
out
fldenv
dec
fbld
add
in
mov
adc
repnz
hlt
sbb
sahf
cmc
mov
mov
pop
or
out
push
pop
dec
in
pop
shlb
faddl
shrl
xchg
das
fwait
andb
leave
adc
and
cld
test
pop
clc
mov
push
xchg
pushf
inc
sub
jl
popl
sub
or
ret
inc
out
loope
sub
leave
loope,pt
and
out
push
and
lret
ljmp
adc
mov
test
fists
mov
sub
jnp
outsl
pop
arpl
insb
add
jmp
xchg
lret
fisttps
jecxz
fwait
mov
int3
xor
sub
aaa
inc
bound
cli
inc
mov
jg
mov
and
jg
je
or
dec
cmp
pop
mov
dec
gs
das
jbe
cs
xchg
insl
dec
outsl
cwtl
scas
xor
insb
jnp
dec
movsb
xor
daa
pop
jbe
or
pusha
mov
cli
sti
loope
add
jg
xchg
add
sub
lcall
int
inc
cmp
sbb
int3
adc
inc
into
and
rcrb
int3
mov
fs
xorb
or
in
frstor
jne
addl
xchg
insl
clc
insb
mov
lods
xchg
jg
stos
xchg
into
mov
push
test
or
lods
jmp
jp
or
or
js
sbb
popa
push
loope
cmp
mov
js
movsl
dec
lahf
clc
mov
test
push
and
lock
notl
jle
cmpb
push
xor
mov
add
lods
mov
fs
jp
sub
cmp
insl
dec
and
inc
iret
fldt
add
in
lods
and
xor
cmp
shr
test
pop
testb
push
or
sub
ljmp
arpl
test
mov
adc
fsubl
das
lds
out
sbb
xor
test
jge
aad
ljmp
pushf
push
pop
aas
out
sbb
int
notb
mov
push
or
fucom
mov
adc
jmp
leave
popf
sbb
cmpsl
inc
mov
repz
lret
aas
ljmp
pushf
test
nop
addb
pop
mov
inc
or
cmc
insb
fmuls
lds
cwtl
xchg
xor
mov
mov
call
pop
stos
aam
jno
fstpl
push
jne
push
add
enter
xchg
das
xor
subl
mov
cld
mov
cmp
push
loopne
loop
sub
in
fiaddl
push
inc
jne
fwait
adc
sbb
and
push
cs
stos
lret
or
push
xor
loopne
daa
shl
jne
fs
cli
bnd
xor
gs
jne
dec
pop
xchg
cs
fmuls
lods
enter
gs
mov
lret
out
mov
mov
add
cmp
scas
push
mov
or
rorb
lods
cs
mov
pop
fisubrl
jle
or
rcll
or
int
pop
ret
xor
push
mov
mov
pop
ret
popa
int
js
call
stc
scas
mov
pop
sahf
movsb
pop
scas
idiv
adc
testb
sub
sbb
test
jl
sbb
shll
xor
nop
xor
sub
pop
jb
or
into
aam
outsl
inc
data16
mov
xchg
or
cmp
pop
mov
ficoml
xchg
lret
push
shlb
jne
jmp
cmpsl
insb
or
das
push
lret
sbb
pop
xchg
bound
je
call
xchg
inc
ss
mov
cs
xlat
fs
cld
jle
inc
fucomp
sbb
pop
and
ss
jae
pop
adc
push
adc
popl
sub
xchg
subb
inc
jns
sbb
and
shl
repnz
test
add
pop
push
outsl
mov
lret
adc
lds
std
cli
into
fucomip
fisttpll
bound
imul
inc
push
mov
jge
and
jbe
in
mov
pop
xor
movsl
adc
push
icebp
sub
pop
mov
cs
outsl
xchg
mov
lock
shlb
or
cmp
or
cmovle
mov
mov
int3
xor
aaa
roll
shrb
fstpl
lcall
pop
lcall
adc
insl
bound
aas
movb
rorl
lods
or
dec
mov
inc
fwait
cwtl
in
jmp
test
sub
rorb
and
int3
dec
inc
addr16
sub
and
xor
in
shl
cmp
sub
mov
int3
add
mov
lock
rsqrtps
in
fdivl
pushf
fists
iret
mov
gs
add
push
idivl
jno
lock
in
dec
int
subb
pop
jg
sbb
xchg
xchg
icebp
mov
out
fldl
imul
and
jge
dec
lahf
repz
std
clc
cmp
adc
je
fcompl
lods
add
pop
mov
sbb
mov
ds
mov
pop
lret
mov
xchg
cmpl
cpuid
fwait
aas
and
xchg
jecxz
xor
sub
mov
pop
xchg
in
cmpsl
dec
add
and
xor
das
pop
mov
jle
mull
mov
fs
cmovge
out
outsl
cmp
lea
dec
aad
push
lods
enter
in
cld
fnstcw
pop
shrl
mov
mov
out
je
out
xor
push
sbb
push
insb
sar
aaa
adc
lret
out
push
sbb
xchg
mov
push
sbb
es
pop
cmp
pminsw
sbb
cmp
pop
icebp
mov
and
faddp
das
mov
pop
aam
aam
jge
push
dec
punpckldq
or
mov
bswap
dec
in
add
xchg
mov
mov
xchg
cmp
cmp
inc
adc
fldcw
jae
cwtl
cld
es
push
add
call
xchg
incl
xor
xchg
inc
or
out
movsb
mov
sbb
addr16
mov
fisubrl
lds
fwait
adc
cmc
call
mov
mov
cmc
mov
pop
test
push
loopne
sbb
pop
bound
jmp
xor
sub
movsb
mov
mov
pop
rcll
sub
inc
xchg
mov
mov
push
sahf
mov
into
nop
repnz
fmul
test
and
adc
data16
adc
push
into
mov
ret
icebp
add
xchg
outsl
daa
mov
push
ljmp
stc
inc
das
or
and
pop
in
jmp
inc
and
cltd
decl
test
jns
in
cltd
adcb
mov
mov
mov
sub
imul
sahf
jp
outsb
xor
xor
add
adc
loopne
inc
xor
lds
pusha
xchg
jle
movsl
cld
dec
inc
movb
shrl
out
pop
push
lds
adcb
aad
clc
fists
xchg
rorl
sti
pop
jle
xchg
imul
jl
add
test
pop
add
mov
and
std
jae
gs
repz
pop
jbe
push
adc
and
mov
jne
scas
jl
in
fldenv
sub
and
push
sbbl
sbb
xchg
and
mov
sub
sbbl
push
cmpsb
lea
adc
xchg
push
xchg
adc
add
clc
pushf
cmp
push
jmp
lea
test
ret
xchg
addps
in
sub
add
arpl
ja
pop
or
jae
arpl
dec
inc
cmp
rolb
add
pop
push
iret
sti
sbb
dec
repz
xchg
xor
and
or
pop
idivl
jmp
add
xlat
jns
jge
and
mov
out
dec
mov
push
call
push
out
jge,pt
inc
gs
insl
sbb
mov
mov
lcall
in
cli
mov
and
stos
mov
repnz
sbbl
idivb
fistps
mov
push
frstor
sub
mov
jge
fld
in
inc
hlt
fcoml
add
aad
xor
inc
movsl
or
dec
cmp
es
inc
mov
cmp
mov
jle
sbb
lock
popl
jp
mov
movsl
icebp
push
or
jl
sub
or
add
mov
sbb
pop
pop
sbb
sbb
pop
lods
mov
cld
adc
call
mov
into
call
jbe
push
mov
fsts
js
jp
sti
fiadds
stc
or
xchg
test
iret
mov
int
xchg
int
es
mov
mov
add
jns
andl
dec
cli
mov
xor
jl
inc
sbb
jg
jns
out
jp
dec
daa
loope
sbb
mov
loopne
add
fiadds
mov
and
aad
inc
dec
aaa
stc
ljmp
cmp
push
xor
rcrl
ss
lret
or
xchg
sbb
cmp
inc
dec
pushf
mov
notb
lods
xchg
inc
sub
xchg
sbb
mov
icebp
bound
outsl
je
cmp
push
fwait
cltd
daa
push
fistpll
push
pop
out
mov
out
sbb
rcll
in
iret
inc
test
jle
movsl
sbb
pop
pop
mov
inc
mov
out
fldl
push
lret
daa
xlat
js
lods
popl
cli
lret
repz
mov
lods
mov
ret
js
mov
cmp
sub
push
jne
js
mov
jbe
mov
adc
out
icebp
cs
inc
inc
fidivrl
and
xchg
push
sbb
mov
imul
mov
mov
sub
sbb
mov
mov
mov
push
addl
imul
lods
jnp
xchg
aam
xchg
xor
mov
inc
adc
xchg
imul
add
rol
insb
mov
cmpsl
js
mov
subb
fwait
push
mov
mov
sbb
sbb
out
ja
pop
sub
ficoms
jns
int
or
inc
fidivs
xlat
fldl2t
sub
inc
movsb
into
leave
rcrl
push
jns
mov
add
adc
or
jns
mov
cmc
adc
cltd
je
cmpsb
push
fisttps
xchg
not
xchg
mov
cmp
push
xchg
cmpsb
or
jne
push
lea
fidivrl
xchg
gs
stc
rorb
jae
mov
mov
outsb
hlt
inc
xchg
sti
rcr
fwait
loop
mov
das
data16
negl
dec
out
lds
xorl
fwait
lret
cmc
into
push
fdivrp
mov
mov
pop
cmp
xorl
je
ffree
adc
je
mov
pop
xorb
mov
dec
adc
xor
loope
out
psllw
int3
or
mov
cltd
in
mov
cmp
iret
or
fmuls
pop
dec
or
xlat
mov
cmc
xlat
sub
pop
fiadds
insb
in
cmpsb
cmp
lea
push
sub
out
mov
xchg
test
gs
ds
sti
xlat
dec
fstps
stc
fwait
sahf
in
out
imul
mov
sub
mov
lcall
mov
call
sub
mov
jno,pn
ljmp
aas
jae
xchg
and
add
leave
scas
pushl
mov
xchg
imulb
in
mov
rorb
pushf
clc
add
fisubrs
mov
mov
inc
rorl
dec
push
add
fstpt
icebp
or
out
paddusw
test
mov
xchg
enterw
mov
or
fwait
ror
rorb
scas
push
aad
mov
cltd
sub
sbb
cld
ficoms
hlt
cltd
test
xor
or
fsubs
dec
test
xchg
lea
iret
sub
fidivl
ds
ljmp
call
fdivr
hlt
and
pop
inc
enter
daa
jg
repz
fucompp
fwait
xor
inc
jl
add
pop
aam
or
mov
cmp
fldcw
jae
shlb
push
clc
das
jmp
test
add
xlat
ds
and
cmovno
arpl
cmc
jno
dec
add
stc
or
cmp
test
mov
nop
addr16
mov
push
mov
mov
sbb
imul
enter
adc
std
repnz
add
out
xor
je
xorb
pop
out
mov
fildll
adcb
repnz
add
sub
insb
mov
lahf
push
ret
dec
xor
ljmp
jb
scas
dec
push
add
fnsave
push
adc
sbb
push
or
mov
and
lret
loop
in
mov
rol
xor
std
lret
push
push
ss
sub
into
xchg
int3
mov
ds
aam
xor
push
mov
inc
stos
ss
and
add
faddl
push
rcrb
fcompl
push
push
jmp
in
dec
leave
or
adc
add
sbb
pop
push
lret
xchg
rorl
leave
adc
call
mov
jecxz
mov
sbb
cmp
mov
enter
dec
insl
leave
jecxz
aam
imul
jns
lahf
and
popa
and
andb
int
stos
adc
xor
popa
dec
cmp
gs
cmc
push
xchg
aad
aas
xchg
jo
sti
or
xor
push
xlat
inc
sbb
mov
pop
pop
fstl
sub
mov
and
inc
adc
or
js
out
add
jo
sbbb
stos
jb
daa
pop
sub
xchg
or
push
cld
ret
enter
repnz
pop
fisttpl
ftst
jecxz
add
bound
fisttpl
xlat
mov
cmp
sbb
movsb
adc
cld
cli
pushf
mov
xlat
mov
in
xor
and
xor
lea
sbb
cmc
jb
xchg
into
inc
gs
add
push
and
mov
aas
xchg
test
mov
push
xor
or
fidivs
popa
jno
out
add
mov
add
mov
mov
sub
test
or
push
sub
loopne
pop
xchg
sbb
xor
std
insl
std
ds
ret
push
adc
add
cld
popf
sub
insl
and
out
add
jo
push
xchg
out
pop
xchg
daa
lods
dec
imul
sub
dec
les
cltd
ja
inc
sbb
and
ret
dec
cmp
lret
inc
rol
sahf
nop
cmp
popa
testl
or
jmp
loopne
cmp
mov
push
es
lret
xlat
pushf
and
mov
cli
jl
add
mulb
rcl
inc
sub
decb
pop
mov
xchg
jno
push
ss
add
int
popf
lea
das
mov
push
cmp
and
jo
mov
mov
sti
jo
fcompl
mov
fsubs
jbe
jns
cmp
jmp
jnp
push
aaa
clc
out
aam
xor
mov
adc
dec
call
out
mov
mov
jmp
ljmp
cmp
lcall
rolb
pop
jg
lret
sbb
outsl
repz
pop
add
pop
pop
xorb
push
lcall
adc
fistps
adc
pusha
bound
pushl
push
or
movsl
mov
jp
jl
jge
xchg
pop
lea
sub
iret
je
andb
add
xchg
loopne
aas
ja
ret
xchg
rclb
dec
mov
sub
or
inc
cli
jmp
js
adc
data16
movsb
daa
push
cld
mov
or
pop
dec
inc
and
inc
fiaddl
cmp
repz
and
jo
call
xlat
jp
pop
sub
in
pop
mov
scas
and
sahf
bnd
cli
push
mov
or
movsl
jae
cs
je
aas
mov
dec
mov
dec
mov
into
ljmp
clc
jmp
rsm
iret
cmp
ficompl
or
mov
popl
js
or
push
in
cli
add
jmp
mov
cli
sub
sbb
sub
testl
inc
dec
add
push
pushf
and
stos
push
cmp
in
les
push
jmp
adc
div
jns
mov
cmc
sub
pause
int3
sub
push
jle
repnz
test
incl
push
push
pushf
in
sbb
test
jne
mov
adc
pop
rcrl
jecxz
popf
imul
adc
inc
movsb
adcb
mov
mov
sahf
ds
pop
jae
jo
lahf
lret
mov
lcall
sub
xchg
sbb
insb
mov
sub
mov
repnz
push
or
lock
or
sbb
imul
scas
call
mov
lods
inc
push
sbb
add
mov
mov
mov
aas
push
pusha
lcall
sub
cwtl
mov
shrb
add
stos
sbb
cld
cmp
mov
jne
es
out
jge
push
mov
lahf
mov
out
addr16
xor
sbb
aad
jno
sbb
and
test
sub
cmp
stos
in
sbb
sbb
inc
lahf
xchg
leave
or
pop
dec
add
fs
dec
nop
fs
xor
xlat
add
dec
push
daa
inc
dec
jmp
xor
push
and
gs
mov
xor
cld
mov
cmpl
fwait
into
cmp
in
ret
adc
mov
pop
int
push
bound
cmp
movsl
scas
jp
jno
into
pop
addl
fs
out
sbb
into
mov
aas
cmc
dec
ss
cmp
add
arpl
in
jb
testb
int3
inc
push
xlat
icebp
cmpb
dec
cmp
imul
push
sub
xor
out
iret
sti
push
test
push
jb
int
fidivl
fisubs
pop
or
fnstenv
rol
pop
mov
sub
mov
mov
fsubl
enter
test
mov
jge
leave
jecxz
push
push
mov
jmp
sbb
xor
inc
mov
aaa
stos
pusha
fsubr
mov
fyl2xp1
sbb
fs
mov
sti
dec
outsb
stc
gs
clc
pop
inc
sbb
push
xchg
jbe
je
int3
jecxz
fs
idivb
jae
adc
pop
inc
xchg
mov
sbb
ss
jbe
ror
dec
xlat
add
data16
adc
jecxz
arpl
inc
ljmp
cmp
loopne
sbb
mov
push
pushf
fisubrl
sbb
outsl
scas
shll
cwtl
jbe
ffreep
mov
mov
mov
daa
and
mov
push
add
cmp
dec
jo
add
shlb
clc
and
insb
and
mov
loop
push
xchg
cmp
xchg
jne
pop
popf
insb
or
out
xchg
mulb
loope
xlat
xchg
mov
in
call
jo
or
das
pop
mov
xor
cmpsl
dec
rorl
pop
jmp
push
mov
fmuls
sti
jge
cmp
cmp
push
stc
out
clc
imul
inc
or
lcall
xor
cs
aam
pop
push
cmpsb
pop
repnz
cmp
neg
clc
in
testl
add
lock
popf
ljmp
jle
scas
fisubs
std
cmp
sbb
adc
inc
xor
cs
int3
loope
xchg
aad
inc
jle
push
inc
push
or
fisttpl
cmp
jg
sbb
inc
sbb
inc
inc
dec
lock
cmp
push
add
sbb
testl
addb
dec
sub
and
cmp
xor
dec
cld
dec
hlt
jp
cmp
push
sub
sub
addl
aas
addr16
cmpsl
jbe
pop
stos
lods
push
sub
jb,pn
sub
hlt
xchg
roll
bound
call
cmpsl
ds
jp
sbb
in
and
mov
push
xchg
jg
fldt
adc
out
cmp
scas
sarb
popf
dec
and
pop
xor
cmp
inc
pop
frstor
or
and
adc
jp
icebp
dec
popa
or
mov
mov
outsb
sarl
push
cltd
sub
and
scas
aad
movhps
movsb
fsubr
sub
pop
pop
out
push
roll
sub
add
pop
mov
push
xchg
push
xchg
xor
push
popf
adc
sub
dec
int3
mov
jg
pop
cmp
lods
fmul
lods
out
cmpsb
movsb
test
or
dec
add
rorl
pop
sbb
jge
xchg
or
adc
fnsave
leave
dec
or
sarl
cs
mov
add
mov
dec
mov
push
mov
sub
xlat
std
dec
and
dec
lahf
in
mov
cmp
aad
ss
int3
call
dec
mov
cmp
xor
jbe
push
mov
out
jb
ret
lcall
test
jp
jb
stos
pop
sahf
stc
sbb
push
lods
icebp
pop
divl
outsb
jp
lods
outsl
pushf
cmc
rol
jae
inc
loopne
or
sbb
or
add
xchg
sti
popf
icebp
sahf
loop
push
xor
imul
add
in
dec
mov
xor
push
dec
and
scas
loope
xchg
jmp
mov
mov
ljmp
add
pop
popa
das
inc
push
and
ret
insb
scas
push
mov
jmp
fisubl
scas
and
mov
pop
pop
in
xchg
or
xchg
nop
ljmp
mov
dec
lahf
adc
ret
mov
adc
pop
cltd
ffreep
lock
frstor
insl
mov
mov
insl
sub
mov
adc
inc
movsb
mov
js
dec
mov
int3
push
test
fucom
jns
xchg
es
test
repz
inc
mov
xchg
push
insb
or
or
test
jns
or
frstor
pop
arpl
push
sbb
enter
sbb
sub
xor
ja
test
push
dec
adc
inc
mov
fwait
repnz
ja
and
and
divl
sbb
cmp
mov
mov
nop
push
cmpsl
mov
cltd
lods
push
jp
lahf
push
push
cld
dec
jecxz
and
aad
add
xor
and
imul
inc
ss
xchg
mov
mov
push
mov
pop
adc
addr16
out
repz
push
push
mov
xchg
ret
sbb
lret
push
stos
out
mov
xor
fiaddl
or
insb
sbb
out
mov
adc
add
inc
lea
jnp
shll
in
sbb
mov
mov
add
mov
mov
sbb
leave
mov
pop
addr16
jae
jg
cmp
pusha
aaa
test
jmp
shll
int
out
dec
mov
mov
jnp
shlb
add
popf
add
jns
inc
out
add
inc
cmpsl
in
scas
add
fisubs
lret
xchg
ret
sbb
gs
jmp
js
hlt
leave
repnz
sbb
xorb
push
xlat
es
and
pop
fldl
mov
and
mov
ss
mov
mov
mov
lahf
sub
sbb
repz
repz
lea
mov
sti
out
jg
push
ja
movsb
push
arpl
dec
adc
fisubs
mov
cmp
jbe
adc
sbb
sbbb
ds
lea
cltd
test
insl
nop
test
inc
scas
jne
sbb
popf
mov
lods
dec
fs
outsb
mov
xor
shrl
dec
dec
call
arpl
bound
pop
testb
sbb
sub
sbb
lcall
fistps
inc
mov
mov
cmp
cmpl
push
inc
aam
push
push
ret
or
aaa
lds
pop
jne
idivl
repnz
lret
and
gs
ret
pop
jb
mov
pop
daa
or
enter
outsb
mov
stos
push
fwait
xor
or
xor
aas
jecxz
xchg
scas
sbb
push
jle
mov
add
insb
jae
jge
ja
xchg
or
fwait
lods
mov
lds
imul
sub
jae
ret
cmp
sbb
cmpsl
dec
repz
pop
jae
lds
jne
cmpsl
inc
cmc
in
jno
scas
jmp
push
sub
addr16
sbb
gs
aaa
in
mov
cld
sti
fwait
popf
jp
data16
loope
push
inc
dec
push
pop
pop
cmp
fmuls
pop
cmpsl
clc
bound
imul
or
je
jecxz
arpl
push
pop
int3
jbe
imul
mov
in
iret
jge
jns
mov
leave
dec
jp
aas
dec
fstps
stos
add
sahf
push
adc
push
fucomi
insl
movb
aam
gs
rcll
negb
add
in
add
and
jecxz
pop
add
cmpsb
cmp
xlat
mov
add
sub
sbb
cli
insb
test
dec
stos
add
das
cmc
hlt
scas
ret
ret
push
aad
in
jb
pop
js
iret
fsts
sbb
test
subb
loope
loopne
out
test
das
shll
mov
add
aad
add
addr16
movb
lods
das
dec
ljmp
int
je
test
mov
mov
pop
mov
xchg
imull
xor
lahf
inc
and
jb
push
lds
push
mov
iret
fldenv
sub
insb
pop
mov
jge
mov
pop
jb
or
mov
imul
cmp
jge
jo
shr
and
rorl
xor
call
jmp
lcall
mov
inc
outsb
xor
lods
cld
inc
dec
or
clc
jb
stos
xor
inc
inc
push
jecxz
insb
push
test
adc
add
stos
jb
jae
out
sbb
adc
jnp
insb
sbb
insl
sub
aam
rolb
inc
inc
xor
mov
fcmovne
inc
out
xchg
adc
stos
out
mov
fincstp
jg
mov
xchg
adc
push
jnp
fmuls
cwtl
das
andl
pop
je
aaa
add
das
pop
and
xchg
mov
out
xorl
sbb
mov
or
les
mov
push
sub
pusha
or
movsl
notb
adc
xchg
adc
add
cmp
xchg
xor
mov
mov
out
fidivrl
pop
fdivrs
cmpsl
mov
adc
xor
adc
stos
pop
cmp
ret
aam
cmpsb
sahf
lods
mov
insl
pop
outsl
mov
call
lods
test
scas
mov
ljmp
fcoms
dec
test
cmp
mov
fwait
mov
stos
sub
outsb
xlat
ret
fwait
lret
dec
sbb
cmp
mov
jecxz
mov
fwait
pop
arpl
pop
sbbl
mov
push
pop
inc
rorb
andb
bnd
cld
pop
scas
fcompl
sub
enter
cmp
add
lahf
adc
mov
sahf
fistpl
push
test
or
adc
mov
and
in
cmc
ds
mov
mov
pop
jmp
jp
sub
ljmp
mov
inc
jl
fadd
es
insl
dec
push
and
jmp
stos
cmpps
stos
in
test
mov
movl
int3
jge
outsl
fs
xchg
sbb
sbb
add
lahf
pop
pop
push
repnz
xor
and
adc
sbb
in
mov
sbb
cmpsb
mov
in
jo
mov
mov
mov
lea
sbb
js
aad
adc
movb
inc
xor
sbb
cmp
and
cmp
mov
pop
dec
loop
mov
into
rorl
mov
outsb
das
insb
push
movsb
xor
jge
scas
enter
sbb
movsb
inc
mov
mov
movsl
out
mov
inc
nopl
movsb
pop
push
adcb
test
sub
test
push
scas
cli
adc
xchg
insb
ljmp
popf
adc
lods
js
lahf
out
push
push
push
push
test
inc
sbb
xchg
mov
cmp
mov
dec
sub
test
int
fisttpl
adc
push
ret
test
ret
inc
pop
jecxz
imul
stc
sbb
xor
mov
mov
mov
icebp
aam
adcl
and
dec
rcrb
xchg
or
fwait
ds
jae
daa
mov
insl
xor
pop
pop
mov
adc
or
adc
mov
rorl
lods
es
mov
in
cli
xor
into
pop
mov
xchg
push
mov
cmpsb
cli
in
sbb
repz
popf
rcl
mov
idiv
mov
ret
mov
xor
and
dec
mov
inc
ss
mov
mov
or
movsl
xor
insb
pop
aas
mov
push
sbb
lds
mov
rcl
stos
mov
ret
push
push
incl
adc
fcoms
test
imul
dec
in
dec
sub
cmp
lcall
loope
mov
sar
ret
mov
test
inc
add
xchg
adc
cmp
aad
sbb
addr16
dec
test
insl
lods
adc
push
insl
adc
mov
sbb
inc
pop
clc
test
aad
cwtl
jbe
push
gs
jno
and
nop
ficoms
scas
pusha
pop
enter
cltd
inc
cmp
ds
dec
jl
cmp
sti
lcall
push
adc
int3
into
sahf
movsb
int3
mov
insl
pop
inc
dec
stc
scas
xchg
cmp
sub
movb
in
pusha
mov
mov
sbb
mov
cs
pop
jecxz
adcl
xlat
push
mov
inc
into
jns
scas
sub
inc
pop
cltd
or
enter
xchg
fwait
shlb
nop
inc
stc
add
lods
mov
ret
rorl
aam
bound
rcrb
mulb
xlat
mov
push
sahf
or
and
sbb
mov
out
mov
fidivl
xchg
xor
rcrl
sub
mov
cli
jo
xor
cld
or
pop
pop
lret
bound
movsl
call
pop
insb
cmp
push
lcall
fs
int3
daa
mov
pusha
mov
vmovntdq
push
xchg
into
sbb
ret
push
sub
pushf
lods
fidivrl
out
daa
fwait
in
mov
insb
cmp
and
add
sub
or
stos
out
pop
xor
jg
dec
sub
std
push
in
jae
mov
jbe
add
adc
mov
xor
aad
inc
scas
jg
dec
mov
aaa
and
ja
inc
sub
xchg
push
sub
out
mov
xor
stos
and
jl
lcall
xchg
in
sub
mov
mov
stos
pop
fnsave
dec
int3
repz
mov
mov
shll
nop
mov
into
cltd
pop
enter
sarl
test
aaa
loope
mov
push
mov
mov
mov
dec
test
out
mov
cmpsl
inc
xor
and
or
scas
notl
rcl
lret
and
bound
out
rcll
test
lea
mov
jl
in
in
scas
push
or
fwait
aad
ret
dec
mov
and
pop
lods
dec
or
fidivs
ret
test
inc
lcall
int3
adc
ds
push
pop
or
mov
ja
xor
or
mov
mov
subl
pop
cmc
adc
adcb
mov
in
jecxz
test
dec
dec
out
mov
mov
push
or
cli
push
cmc
rcr
sub
movsl
xchg
sub
fadds
mov
les
mov
jg
inc
mov
push
mov
std
fsubp
push
and
je
test
js
add
test
add
add
sub
cmp
mov
scas
push
pop
sahf
call
lcall
xchg
cmp
in
sbb
dec
cmpsb
push
cmpsl
mov
push
lret
lds
icebp
xchg
mov
add
faddl
lods
mov
sub
jb
xor
push
loope
mov
jb
add
xchg
insb
add
push
fcompl
jb
inc
jno
xchg
mov
push
fsubl
faddl
adc
mov
jo
das
lret
call
ror
cwtl
sub
sub
sbb
lods
pop
jp
inc
cmpsl
push
or
ja
and
jge
or
outsb
test
fnstenv
adc
out
cmp
inc
arpl
mov
jbe
lods
mov
in
fwait
inc
sub
add
fistps
pop
push
je
mov
ljmp
setl
lahf
jo
mov
ljmp
add
push
cs
sbbb
movsb
icebp
leave
lods
clc
test
xchg
fildl
lods
outsb
aaa
imul
mov
lea
push
ret
lret
fiaddl
pusha
mov
mov
sbb
xlat
mov
in
idivl
mov
rcrb
sbb
xchg
dec
adc
imul
cmp
mov
add
mov
sbb
fmul
or
mov
fimull
push
sbb
sub
lret
push
mov
mov
mov
add
cmp
and
mov
in
int
adc
pop
mov
pop
bound
les
dec
jb
ljmp
lock
enter
fistps
movsl
repz
pop
daa
inc
sahf
dec
lock
cmpsb
sti
mov
or
fildl
inc
jl
arpl
pop
jl
mov
mov
pop
fucom
jae
push
repnz
in
push
ss
lods
cmp
jbe
pop
iret
hlt
push
dec
xor
add
pop
ret
push
fstl
add
enter
and
and
sub
sub
roll
add
das
sub
mov
test
push
insl
jmp
in
nop
xor
rorb
mov
scas
push
jecxz
cmp
jecxz
rol
into
push
ret
xor
sti
or
aaa
fistl
dec
test
mov
sbb
ret
test
mov
inc
je
jns
xchg
insb
insb
out
pop
loopne
mov
pusha
push
adc
push
dec
andl
fidivrs
insb
mov
cmp
xchg
mov
outsl
sub
cmpsb
in
hlt
pop
scas
icebp
jns
dec
gs
inc
aas
ds
sahf
setne
cmp
cmp
ficoml
inc
xor
ja
inc
testb
popa
push
jp
jle
xor
lret
call
lahf
add
push
or
pushf
jnp
es
stos
jmp
in
repz
xchg
sbb
ret
cs
add
add
jg
lea
jno
inc
call
mov
jmp
sbb
out
sub
cld
cwtl
cs
mov
mov
repnz
jecxz
jl
out
and
pop
xor
jno
mov
mov
push
cltd
sub
sbb
sti
popa
dec
movsl
lahf
das
cmpsb
add
jnp,pn
mov
cmpsb
pop
shl
sbb
gs
in
push
adc
inc
xchg
sahf
cmpsb
jg
sbb
movsl
and
ja
jb
xchg
stos
or
daa
jg
jne
mov
dec
jns
fbstp
cmovb
xor
or
or
xchg
push
xchg
and
daa
shll
mov
jbe
mov
mov
fsubrs
negl
xchg
insl
or
mov
mov
dec
pusha
mov
push
ret
addr16
insl
imul
xor
jmp
and
pop
into
sahf
jle
in
out
in
loope
mov
fimull
adc
xor
sbb
add
pop
loope
push
pop
into
push
in
mov
mov
pushf
lcall
add
or
push
test
test
add
mov
push
repz
and
sbb
test
mov
shr
and
stos
movsl
pop
lret
inc
mov
inc
cmp
popf
xchg
or
add
sarl
mov
les
aaa
xor
orb
test
ret
push
sub
push
popa
int3
aaa
movsl
add
mov
xchg
and
xor
cmp
sarb
add
push
pop
insb
cmp
enter
insl
sub
adc
xchg
shlb
mov
loopne
popl
xor
out
ret
xlat
push
sbb
cwtl
inc
jg
or
ja
jecxz
xlat
push
dec
icebp
test
int
dec
mov
push
add
xchg
mov
jg
or
xchg
dec
dec
outsl
sub
mov
inc
push
lahf
add
mov
out
push
repnz
sbbb
ds
push
push
inc
hlt
mov
mov
int3
push
pusha
push
fs
je
push
les
and
xchg
loopne
and
sbb
int3
xchg
sub
pushf
sub
mov
adc
mov
lods
lcall
jbe
fimuls
fbld
and
imul
mov
or
sbb
dec
pop
and
dec
orl
frstor
sub
out
sub
xchg
pushf
inc
xor
fsubrl
sarl
xchg
fwait
mov
or
rcr
stos
fwait
adc
adc
shr
test
pop
adc
mov
imul
mov
and
jmp
dec
cltd
pop
sbb
push
mov
ss
push
in
push
sub
ja
and
adc
mov
jbe
pop
inc
cmovae
outsl
dec
das
adc
mov
fs
push
stc
and
rolb
or
bound
imul
mov
or
scas
je
ret
pop
xor
mov
adc
mov
pop
push
stos
cltd
int
insb
xor
or
cvtpi2ps
ds
or
sub
jmp
clc
cmpsb
clc
mov
test
or
mov
add
pop
inc
dec
jae
adc
es
xchg
mulb
ja
cs
cmpsb
lock
stos
xor
adc
lods
ss
mov
xchg
xor
xchg
std
pop
ret
jge
pop
test
out
xchg
adc
and
aad
and
insb
repnz
mov
mov
ja
sbb
cmpsb
dec
es
mov
jg
fisttpl
push
pop
pop
and
add
push
mov
movb
int3
sub
sbb
xor
adc
lods
mov
adc
gs
jbe
xchg
bswap
jge
fwait
jge
adc
fstpl
outsb
lahf
stos
insl
xchg
jecxz
adc
jmp
pop
mov
jbe
cmp
adc
push
push
lods
aaa
lret
dec
sbb
jmp
fbld
popf
mov
and
sbb
jp
or
mov
push
or
std
sbbl
inc
int3
rol
leave
les
sub
jp
fsubs
sub
jmp
lea
sahf
sarl
stos
stos
xchg
adc
xchg
sub
push
std
int
mov
push
adc
push
mov
dec
loop
sarb
lock
xor
pop
cmp
sti
xor
sbb
dec
jns
cmp
sbb
mov
push
push
stos
imul
icebp
scas
pop
inc
mov
dec
mov
dec
push
mov
das
movsl
lcall
out
push
add
xchg
add
sbb
lds
test
adc
icebp
inc
clc
imul
mov
repz
bound
add
call
ret
cwtl
xor
xchg
inc
loope
stos
hlt
inc
mov
xchg
pop
ss
ljmp
mov
push
ret
ret
push
push
mov
je
insl
mov
inc
out
and
and
das
ret
dec
mov
cli
fimull
cmp
shrl
xlat
mov
pop
dec
mov
jle
testl
mov
sub
popa
int3
out
mov
aas
insb
dec
sbb
mov
mov
dec
leave
add
clc
sbb
jmp
in
or
stos
es
jae
push
pop
shll
fldl
push
push
ffree
popa
xlat
loop
data16
imul
mov
mov
add
or
adc
mov
xchg
cwtl
cmp
ljmp
mov
ret
ljmp
add
or
xchg
cs
jp
sbb
int
loopne
pop
ljmp
lret
cmp
popl
xchg
aas
jle
mov
lret
jno
xor
adcb
leave
xor
in
mov
push
inc
mov
pop
xor
daa
xchg
test
stos
cmp
sub
mov
dec
imul
sub
pop
mov
lea
adc
scas
mov
mov
jle
shlb
daa
mov
scas
fcomps
fdivp
jne
sbb
mov
ret
xor
repnz
bound
daa
rorl
stos
stos
push
cmp
xor
mov
and
ljmp
cmp
pop
das
stos
adc
sub
dec
loopne
xor
js
out
xchg
es
icebp
pop
mov
int3
mov
xor
sub
dec
pushf
xor
fiadds
fisubs
call
mov
pop
sti
pop
rclb
cltd
xchg
inc
bound
dec
sub
adcb
in
pop
icebp
js
sub
inc
lods
mov
repnz
and
pop
fstpl
add
mov
and
cmpsl
xchg
xchg
mov
imul
fiaddl
repz
pop
sti
les
pop
popa
dec
mov
loop
cltd
js
imul
mov
sbb
ret
insl
fwait
dec
mov
jg
xchg
scas
push
or
xchg
push
in
es
aas
sub
jbe
cld
lds
mov
and
loope
int3
cmp
scas
cmp
push
inc
shl
push
push
mov
jg
movsl
add
lods
sub
aaa
aad
shlb
jae
into
add
push
repz
push
xor
int
jb
lods
dec
xchg
and
push
cmc
fcomps
sbb
sub
add
pop
pop
jg
clc
ret
pushf
jbe
cmp
imul
lahf
pop
in
mov
pop
dec
les
hlt
fdivrs
cmp
rorl
dec
jmp
fisubs
adc
or
insl
daa
dec
sbb
ficomps
cld
xchg
fwait
mov
addl
nop
out
roll
out
or
sub
sbb
ret
pop
or
stc
cli
push
inc
push
fxch
movsl
je
rorb
and
pop
cltd
xor
sub
mov
xchg
cld
inc
cltd
push
mov
out
les
popa
shrl
bound
xchg
ret
xchg
push
jmp
sub
stos
xchg
out
mov
xchg
stos
mov
adc
cltd
clc
jbe
pop
movsb
test
xor
fbstp
mov
xor
loop
aas
scas
xchg
xor
pop
dec
outsl
addr16
pop
xchg
sti
aaa
push
lea
xor
dec
xor
mov
in
cmc
jmp
jg
push
and
lock
or
icebp
or
jle
adc
lea
inc
jo
loopne
mov
push
addr16
repnz
mov
loope
sub
push
hlt
or
pushf
sub
xor
out
or
aam
push
sbb
xchg
inc
nop
decl
mov
das
out
sbb
incl
push
dec
xchg
jne
insl
add
repnz
jb
fistpl
inc
fdivrs
in
sub
maskmovq
in
mov
test
mov
clc
insb
pop
test
sub
push
negb
jae
lret
mov
push
inc
dec
out
mov
in
push
sbb
testl
mov
ret
inc
popa
adc
xchg
pop
push
xor
shll
shll
adc
mov
mov
mov
xchg
icebp
jl
stc
icebp
dec
out
dec
or
lret
aam
fisubs
dec
test
and
shll
jns
test
pop
cmc
or
or
into
adc
sub
pusha
inc
lock
inc
and
adc
mov
mov
movsl
push
das
push
fwait
add
push
in
sti
mov
scas
das
addb
lock
or
hlt
inc
pop
push
aas
pop
decb
adc
add
xchg
dec
mov
sbb
fisubl
mov
ljmp
jp
insl
int
mov
dec
xor
imul
test
mov
dec
jp
jnp
ret
int3
fwait
sahf
push
lods
icebp
into
pop
lret
stos
fwait
lcall
cmpsb
cmp
adc
out
lds
mov
sub
cli
xor
fwait
adc
daa
imul
insl
aas
in
inc
aaa
add
add
movsl
adc
mov
and
inc
mov
aam
jmp
movsb
loopne
or
push
xor
jge
lock
nop
dec
pop
aaa
pop
xchg
dec
xchg
cmpsl
dec
pop
push
xchg
mov
or
push
repnz
inc
cltd
pusha
xchg
sub
dec
outsb
cmpb
arpl
insl
pop
and
mov
out
xchg
jns
mov
xchg
pop
roll
pop
lea
sahf
in
ljmp
lds
mov
pop
jbe
out
mov
setb
adc
xchg
fwait
adc
or
bound
lcall
push
fiadds
pop
test
pop
add
mov
out
xor
adc
data16
pop
outsb
js
addr16
xorl
mov
push
cmp
cmpsl
inc
leave
xor
or
dec
loopne
jbe
xchg
pop
fisttpl
ss
loopne
jo
mov
loop
outsb
push
mov
insb
add
pop
push
xor
je
pop
aad
mov
xchg
ds
fidivl
stos
add
jp
push
mov
nop
sbb
int3
es
jns
ret
test
mov
or
cmc
inc
mov
pop
xlat
cld
popf
sub
xor
repz
cld
testl
lock
jp
andb
pop
aaa
xlat
repz
and
push
push
mov
and
mov
jnp
ss
imul
inc
dec
mov
jp
cmp
xchg
int3
dec
and
inc
mov
push
inc
lret
and
mov
xor
mov
out
icebp
scas
ret
and
adc
pop
idiv
lods
add
pop
xchg
sbb
repz
or
cs
out
in
mov
xchg
ljmp
test
and
xchg
dec
push
dec
mov
xor
adc
repz
popf
pop
pop
lcall
pop
mov
fldt
sbb
rcll
or
dec
gs
aam
hlt
lahf
movsb
xlat
rolb
mov
daa
push
or
leave
pop
int3
pop
jbe
stos
insb
add
cmp
int
cmp
lret
adc
aas
xchg
push
sti
pop
xchg
mov
xchg
cmp
push
andl
sbb
dec
ficoml
pop
in
dec
pop
push
push
push
repz
cmp
data16
in
sub
push
cwtl
fwait
js
push
sbb
ret
push
sbb
lea
sbb
jae
push
pop
out
test
into
adc
repnz
mov
sbb
sarb
sahf
rorb
je
dec
push
mov
inc
sbb
dec
sub
lods
out
jmp
adc
sbb
popa
rol
out
sbb
add
mulb
or
sub
adc
les
push
std
sub
mov
rol
dec
mov
clc
ret
addr16
imul
and
roll
or
xor
addb
xor
pushf
dec
inc
ret
dec
jge
push
mov
aad
push
cmp
stos
rorl
xchg
into
mov
lea
pop
les
xor
push
loopne
das
fwait
mull
or
leave
lahf
outsb
out
jmp
fnstsw
rolb
mov
mov
dec
mov
cmp
xor
cmpb
fnsave
adc
sub
xchg
push
xlat
lret
pop
pop
outsl
cmp
xor
movsl
es
push
roll
sub
js
pop
bound
test
pop
xchg
movsl
xor
mov
add
mov
xor
push
mov
mov
xchg
cwtl
mov
pop
or
push
and
push
ret
xchg
push
addr16
hlt
inc
mov
mov
xchg
ljmp
push
in
pop
clc
push
jnp,pn
mov
add
pop
jbe
or
xlat
mov
mov
pop
add
jae
or
fisubrs
sub
test
cmp
divl
nop
dec
inc
ret
adc
outsl
pop
out
cs
lea
sahf
dec
jecxz
or
movsl
es
cld
xor
rorl
icebp
push
icebp
adc
dec
pop
in
dec
sub
dec
and
sub
mov
aad
dec
mov
ss
rcl
pop
out
push
lds
push
jl
cmpsl
push
mov
rorb
jnp
mov
icebp
push
das
dec
out
lods
jbe
loope
addr16
cs
ret
jmp
cmp
lds
sub
outsb
cmp
dec
imul
and
pop
popf
ds
lods
xor
mov
xlat
movsb
leave
mov
cmc
cmpsl
sbb
sar
cmp
out
mov
ret
sti
jmp
push
out
scas
sbb
lods
sbb
sti
jb
loope
test
imul
cmp
jnp
dec
loope
jl
and
or
xchg
sub
cmpl
push
fimull
xor
jge
mov
data16
cltd
xchg
adc
cmpb
out
clc
int3
pop
in
fldl
popf
cmp
pop
mov
and
out
notb
out
loop
rclb
fadd
imul
outsb
negl
in
sbbb
call
push
xchg
daa
and
jmp
loop
scas
popa
jle
or
dec
xor
adc
leave
ret
in
movsb
inc
and
push
popaw
mov
push
adc
jle
xor
sahf
adc
cmc
ret
out
fs
push
and
inc
das
mov
cmp
lock
das
je
mov
jnp
faddl
sub
jg
and
mov
insb
into
addb
mov
pushf
and
lret
es
cmp
inc
fadds
ss
pushf
pop
fidivrs
shll
and
add
repnz
xlat
stos
xor
cmpsl
lea
in
and
scas
bound
pop
cltd
repnz
scas
push
fadds
push
clc
mov
xor
repz
pop
stos
add
idivb
shlb
cltd
inc
sbb
xchg
and
dec
or
mov
fcmove
inc
jg
imul
insl
imul
sub
dec
cltd
arpl
jns
inc
shll
into
sub
sub
jno
out
push
xor
pop
push
mov
push
jo
mov
and
mov
mov
xlat
push
dec
push
sub
sub
loop
mov
pop
push
fstl
or
add
inc
mov
add
pushf
sub
out
cmp
cmp
test
sub
pop
dec
rcr
push
pop
adc
mov
leave
sub
in
add
outsb
pop
add
or
add
in
dec
std
adc
xor
or
dec
xchg
or
loope
xchg
mov
repnz
mov
pop
leave
dec
orl
add
clc
js
loop
out
xlat
mov
imul
or
in
pop
adc
sbb
xor
push
push
inc
sahf
int
fnstsw
jae
add
out
fldenv
push
and
xchg
adc
clc
push
sbb
into
pause
add
mov
xor
adc
movsl
xor
shrl
int
out
loopne
stc
and
out
cmp
xchg
arpl
out
or
stos
clc
xchg
int3
add
pop
and
xchg
mov
js
hlt
xor
dec
sahf
pop
xchg
addr16
jns
popf
sub
int3
sbb
jae
fs
or
mov
adc
mov
mov
lret
outsb
cmp
dec
arpl
pop
xchg
lea
shl
outsb
and
hlt
insl
stos
jns
inc
add
dec
imulb
cmp
and
pop
stc
scas
jecxz
mov
ret
pushf
push
jae
lahf
dec
mov
jns
fwait
dec
fs
sbb
adc
dec
mov
divb
dec
pop
sbbl
inc
shll
pop
and
sahf
mov
ret
or
stc
inc
aaa
test
dec
sbb
xchg
mov
add
cmp
outsl
add
dec
jl
mov
push
pop
pop
orb
cmp
push
iret
dec
scas
jg
add
push
stos
rcll
ljmp
or
or
push
cltd
jl
fs
jmp
sub
lods
bound
push
iret
scas
sbb
add
std
mov
pop
icebp
je
ret
and
pop
sub
cltd
idivb
iret
dec
push
lods
pop
cmp
ljmp
mov
stos
cmc
inc
andl
jl
loop
test
xor
inc
jecxz
push
iret
sbb
cld
pop
sub
or
pop
lcall
push
add
mov
jp
add
outsb
mov
xchg
popf
sahf
ret
push
mov
loope
insb
or
or
add
and
adc
xlat
cli
sub
into
clc
add
stos
push
jnp
int3
in
mov
clc
loope
pop
mov
cwtl
in
aaa
push
fcmove
movsb
int
push
xchg
out
sbb
dec
lods
fldenv
xchg
lds
mov
inc
setg
push
inc
out
inc
add
mov
aad
sbb
mov
icebp
add
fsubl
cmp
outsl
xor
mov
sub
mov
adc
test
lds
data16
arpl
adc
xchg
or
scas
ficoms
out
das
leave
enter
pop
in
int
bound
call
stos
scas
dec
and
inc
cmc
mov
out
stc
pop
adc
lret
push
adc
movsb
aad
dec
jne
sbb
push
push
ss
test
jp
insb
mov
inc
out
jnp
lods
jmp
ret
stc
pop
and
jne
ficoms
cmp
in
clc
sti
jle
testb
cwtl
lea
jbe
shlb
in
adc
push
mov
and
loopne
mov
cltd
dec
push
int3
fsts
add
sti
jl
shl
stc
mov
shrl
pop
scas
clc
nop
loop
mov
mov
and
pop
subl
push
lret
dec
lds
enter
js
dec
jge
push
pop
mov
push
pop
adc
add
xor
push
sub
add
mov
scas
cmp
sbb
inc
cwtl
mov
jp
sahf
pop
sbb
add
cli
sub
into
and
mov
popa
imul
push
xor
sub
mov
addr16
xor
out
aam
jle
xchg
cmpl
sub
pushf
push
pop
data16
repnz
icebp
and
ficompl
hlt
pusha
fcomi
js
inc
xor
cmp
pop
testb
push
xchg
outsl
aam
fistl
and
mov
aam
repz
lcall
outsl
lahf
leave
mov
icebp
fsubrs
lods
or
xchg
fisubrl
cltd
out
jo
mov
cmp
sub
push
shrb
loopne
mov
mov
add
mov
idiv
repnz
test
fldt
lods
fadds
add
adc
jo
push
arpl
inc
xchg
stos
daa
addb
and
test
pop
mov
pop
jne
xor
mov
gs
sbb
dec
sub
push
cmp
cltd
in
inc
push
or
sbb
push
mov
push
mov
test
pop
lods
call
ds
and
adc
dec
add
xor
cmp
imul
jle
cwtl
and
out
mov
and
and
dec
jp
test
mulb
subb
mov
and
aas
adc
ret
push
add
pop
test
popf
clc
sahf
and
pop
push
jmp
test
pop
dec
iret
outsb
fimuls
aad
inc
push
rclb
das
scas
or
sbb
stc
xor
addr16
addb
push
fldenv
les
pop
dec
std
inc
cmp
je
push
in
out
push
js
jle
xchg
cmc
push
pop
ds
shl
cmpsb
adc
push
jo
push
mov
into
mov
xor
cs
fdivrs
or
enter
scas
xor
dec
lods
push
xor
shl
or
xorl
inc
push
mov
mov
ds
jne
or
push
mov
aaa
ljmp
inc
pop
dec
movsl
scas
sbb
testl
ret
bound
pop
rolb
les
xchg
dec
cli
mov
mov
dec
add
ffree
mov
repnz
hlt
jecxz
push
in
imul
das
adc
int3
aam
gs
sbb
mov
sub
ja
mov
insb
clc
adc
mov
xor
cli
pop
js
cmp
or
adc
lret
cmp
dec
push
dec
mov
jno
out
push
mov
cmp
adc
fcmovbe
adc
popf
testb
lret
leave
lods
ja
aaa
cli
pop
loop
lods
loop
mov
fldl
inc
pop
jmp
jb
add
sbb
test
add
fs
test
out
and
adc
into
push
int3
stos
or
ret
popa
dec
ficompl
mov
dec
ja
mov
cld
jno
jl
fldcw
add
mov
ds
push
sahf
inc
sbb
push
ja
adc
mov
and
xlat
movsb
mov
adc
push
icebp
xor
push
add
push
jp
adc
jae
adc
lock
push
aad
mov
push
outsb
mov
mov
loope
dec
push
push
imul
push
in
repnz
or
mov
sbb
add
sub
shrb
jecxz
jmp
lea
je
dec
sub
mov
aaa
or
loopne
in
repz
pop
fcomps
jnp
sbb
or
or
pushf
add
xor
mov
in
daa
stc
cmp
xchg
push
fldenv
test
das
aad
bound
cld
pop
jbe
jge
inc
cwtl
push
ds
ret
stos
or
insb
hlt
sbb
push
push
call
pop
adc
xor
fs
movsb
insl
aas
imul
mov
movsb
std
jecxz
outsl
lea
cmp
sti
xchg
mov
je
mov
or
add
mov
cwtl
xchg
add
in
sbb
cli
outsl
and
mov
cltd
movsl
mov
and
push
jge
insb
fnstcw
mov
cli
sub
adc
shll
hlt
mov
jge
sub
andl
jle
movsl
int
mov
lea
mov
or
rcrl
ret
mov
lret
fildll
jge
mov
sbb
sbb
mov
jae
mov
outsl
mov
jo
jns
pop
or
movsb
dec
jns
loope
in
mov
or
mov
pop
gs
or
dec
divl
jbe
jle
stc
pop
fs
push
ljmp
fxam
jp
jmp
xor
and
stc
add
dec
mov
icebp
jge
push
fimull
nop
cltd
jmp
dec
or
fisubrs
add
js
rcrl
pop
out
xchg
or
sub
mov
sbb
sub
shll
jbe
pop
scas
cmp
test
jge
xlat
mov
adc
dec
xor
xor
adc
aad
out
jg
mov
dec
imul
cmp
inc
lock
cmp
inc
movsl
subl
mov
or
xchg
mov
cli
cmp
push
xor
je
testl
jae
and
ficoms
sahf
leave
outsl
jns
add
loopne
xor
fnstenv
pop
push
mov
sti
pop
add
add
pop
xchg
push
mov
and
popa
ret
add
das
inc
fidivrs
jno
in
ret
push
xchg
mov
lret
mov
lock
xor
inc
xor
js
jp
pop
add
insb
mov
mov
shll
jmp
push
stos
fisubl
loopne
add
push
jbe
xchg
jb
push
movsl
cs
and
iret
mov
mov
add
outsl
push
scas
mov
dec
pop
mov
out
push
xor
loop
repnz
adc
ss
or
sbb
pushf
cmp
mov
mov
push
fbld
inc
sub
imull
adc
push
in
cmp
movb
mov
fs
add
dec
pop
stc
mov
push
test
sub
das
cmp
inc
mov
sub
adc
inc
arpl
sub
shlb
push
dec
jl
mov
in
lods
xchg
clc
mov
push
pop
and
jp
cmpl
sbb
push
pop
or
in
mov
sub
ret
aaa
jne
jle
dec
mov
mov
jns
scas
mov
mov
sub
pop
mov
je
hlt
xor
cmp
stos
pop
push
or
mov
pusha
jbe
and
fstps
sub
mov
push
insb
mov
mov
and
es
cwtl
mov
sahf
pop
mov
lods
aad
cmp
jle
fsubl
inc
and
int3
adc
pop
decl
mov
jmp
lods
or
jns
mov
shlb
stc
leave
jmp
movsl
jae
les
xchg
aas
or
cmc
adc
xlat
ret
xor
mov
mulb
aam
fisttpl
xor
mov
es
cmpsl
popa
sbb
dec
lods
cli
adc
cwtl
jb
adc
enter
sub
push
call
mov
std
arpl
hlt
pop
jo
push
int
sub
or
cld
xlat
mov
sub
js
cld
or
faddl
scas
and
leave
pop
aad
pushf
ljmp
pop
in
jb
mov
push
ss
shll
fdivrs
cmpsl
dec
sbb
pop
nop
test
fldenv
repz
adc
xchg
int
xchg
ljmp
outsl
inc
or
xchg
sub
cvtpi2ps
push
push
adc
or
xorl
inc
xchg
das
jo
mov
leave
pop
ficoms
cmp
jb
repnz
mov
mov
je
cld
cmc
imul
pop
and
stc
or
scas
jl
rcrb
inc
arpl
mov
or
incb
sub
jns
pusha
sbb
jo
outsl
aam
je
add
ja
mov
fwait
imul
sub
in
sub
loopne
jle
xchg
fwait
outsl
scas
in
stc
pop
xchg
push
in
and
pop
leave
lret
push
mov
loop
mov
jmp
pop
cmpsl
into
fadds
js
mov
je
insb
adc
and
insl
pushf
int3
push
xchg
or
das
or
pop
mov
aam
aas
aaa
push
hlt
xchg
dec
pop
gs
sbb
in
jl
or
int
sbb
mov
mov
sub
testb
push
rcll
sub
fwait
sahf
or
xor
push
adc
hlt
test
or
mov
aad
mov
dec
inc
jnp
cli
pop
ljmp
jbe
sub
lods
pushf
rcrl
daa
nop
or
mov
pop
sbb
inc
scas
sbb
inc
pop
or
push
mov
push
xchg
shlb
pop
ds
in
cs
jno
fwait
jno
mov
mov
xchg
ret
addr16
insb
dec
in
jmp
pop
int
repz
inc
sahf
cs
mov
mov
xchg
addr16
rorl
sti
lret
xlat
dec
pop
push
xor
cmp
jg
add
mov
mov
adc
cmp
shll
fcom
call
das
jmp
inc
into
hlt
jbe
lds
in
mov
jnp
movsl
pop
adc
mov
adcl
popf
pusha
jno
xor
loopne
sbb
and
xor
push
jle
pop
cli
ficoms
popf
iret
jo
scas
cld
cwtl
xor
fsubl
jp
insb
leave
mov
lret
xchg
movsb
fwait
je
pop
dec
fsts
inc
lea
and
jb
arpl
inc
jnp
stos
sbb
pop
stos
pop
pop
hlt
adc
add
push
push
cld
mov
imul
cmp
aad
jmp
sbb
insl
jl
lds
push
aas
xor
adc
xor
addr16
ja
mov
scas
jne
ret
xlat
push
mov
push
ja
cmp
aaa
or
pop
xor
jl
dec
dec
or
rclb
mov
add
xchg
and
mov
add
jecxz
add
pop
lods
gs
repz
adc
or
outsb
jne
out
mov
leave
lret
cmpsb
mov
repz
rcl
fimuls
ja
mov
fadds
mov
dec
shlb
out
cli
or
outsb
or
dec
sbb
cmp
cli
bound
ret
pop
dec
sbbl
ret
adc
ja
jg
stc
cmpsl
xchg
pop
dec
pop
mov
mov
mov
cmp
push
sbb
pop
mov
nop
aas
lock
out
sbb
and
cmpsb
jnp
or
mov
shlb
sbb
imul
ret
lret
xchg
mov
ss
sbb
push
outsb
test
adc
mov
sub
lods
addr16
loopne
sbb
pop
nop
iret
xchg
sub
mov
fiadds
scas
mov
scas
push
lds
scas
push
adc
sbb
xlat
lret
add
iret
enter
cmpsb
mov
andl
arpl
test
sub
push
dec
or
ficoms
fbld
dec
std
loopne
adc
ret
ds
mov
cltd
inc
sbb
data16
arpl
sbb
cli
out
inc
cwtl
imul
inc
mov
mov
mov
push
jne
push
push
pushf
inc
inc
mov
add
dec
stc
inc
nop
xchg
fidivrl
xor
movl
test
out
mov
sbb
pop
adc
in
incl
lock
pop
or
or
insl
pop
insl
nop
push
push
push
in
mov
jno
dec
rcll
inc
insl
mov
cmpsb
adc
push
mov
mov
insb
adc
pop
jle
shlb
aaa
pushf
hlt
ds
mov
pop
fiadds
cmc
jl
lahf
xchg
out
stos
sub
sti
bound
orb
sbb
int3
sub
or
inc
xor
jns
imul
test
mov
sahf
jle
inc
mov
mov
lock
stc
xchg
dec
xchg
mov
pop
ja
fadds
hlt
cld
sahf
cmp
ja
sbb
sbb
lds
and
nop
int3
push
fmuls
mov
sbb
popa
loopne
dec
adc
push
cmc
cmp
pop
cmpl
mov
cltd
out
xlat
add
pop
bound
cmp
mov
int3
jbe
lcall
fnstenv
and
shlb
mov
in
and
test
mov
testb
popa
xchg
and
pushf
lahf
or
and
jo
cld
int
inc
movntps
mov
insl
stc
lock
negb
repnz
aam
jle
inc
mov
stc
jmp
imul
jmp
mov
lgdtl
popf
lock
inc
xor
mov
pop
pop
imul
dec
aas
insb
fisttpll
xchg
adc
movsl
stos
test
inc
mov
mov
jae
mov
push
mov
fmull
clc
cmp
lcall
jno
in
ret
xchg
adc
push
or
into
mov
xor
sub
xchg
xchg
loop
cmp
test
fucomip
stos
pop
xchg
js
out
inc
in
cmpsl
mov
xchg
lods
fidivrs
sahf
jg
mov
mov
xchg
jle
mov
in
out
cmp
jne
sti
stos
cmp
inc
dec
stc
xchg
xor
sub
pusha
and
in
jns
mov
adc
mov
xor
stos
test
mov
pop
test
push
std
add
mov
jb
scas
in
loop
sub
jo
aaa
popa
filds
lock
xchg
dec
ret
mov
mov
push
mov
inc
or
dec
xlat
rorb
outsl
inc
adc
push
sbb
lds
mov
inc
test
hlt
pop
fmul
sub
dec
and
out
inc
sti
dec
ret
andb
or
sbb
lods
jmp
xor
pusha
xchg
and
pop
scas
adc
mov
fimull
sahf
jg
mov
lds
pop
cwtl
gs
adc
pop
push
add
cmp
cmpsl
imulb
mov
dec
and
icebp
xor
test
aaa
jae
mov
stos
xor
push
in
push
loopne
and
ja
and
jb
aam
ljmp
push
add
inc
pop
jl
mov
fcmovu
cmc
jecxz
imul
cwtl
arpl
out
add
mov
jne
jecxz
in
lea
mov
out
jp
int3
inc
inc
adc
push
iret
enter
test
dec
and
addr16
or
mov
repz
mov
jbe
xchg
pop
xor
fdivl
andl
scas
shll
notl
mov
fcoml
ljmp
ds
mov
sub
dec
dec
jmp
push
push
jecxz
fdivrl
iret
mov
adc
mov
iret
sub
inc
xchg
jnp
aas
fidivs
aaa
sbb
sbb
or
hlt
lahf
pop
out
push
mov
loope
mov
add
jp
adc
clc
or
sti
das
ror
cwtl
loope
mov
xchg
cmp
ss
add
pop
lea
mov
push
mov
jbe
mov
pop
sarl
jmp
loope
mov
shl
ficoms
and
popf
aas
pop
es
test
sub
call
sbb
xor
or
xor
dec
fistl
pusha
sub
addr16
test
mov
jo
subb
mov
js
xor
xchg
cmp
out
cmp
cmp
xchg
sub
fldcw
loopne
pop
nop
pop
shll
movsl
scas
sbb
vpshaw
bnd
jns
les
inc
xchg
imul
pop
mov
arpl
pop
scas
rclb
aaa
sti
iret
jecxz
inc
and
and
xor
mov
cmpb
hlt
out
pop
sahf
iret
lods
xor
cmp
dec
or
cmp
lea
xor
gs
and
push
cli
sub
mov
pop
lahf
les
push
sub
mov
gs
test
and
pop
push
push
and
pushf
lret
xor
xor
sub
andps
xor
lcall
cli
out
and
jns
rorl
xor
xor
mov
test
push
insb
jns
push
punpcklbw
adcb
cmc
leave
daa
popf
fnsave
lea
lds
scas
inc
jle
lcall
jbe
sub
pop
xor
push
jbe
cwtl
and
jecxz
sub
les
enter
push
leave
ret
mov
popf
sahf
addr16
aas
data16
jle
pop
cld
fadds
rorl
mov
or
sub
pusha
cmp
mov
fs
icebp
daa
cmp
or
sub
mov
sbb
test
andl
sbb
inc
mov
add
sub
test
push
mov
int3
sbb
and
call
xor
pop
dec
stos
shll
dec
or
inc
push
mov
test
mov
cld
out
jp
aam
das
xor
pop
jae
xchg
lahf
xlat
test
push
xor
popa
dec
jo
and
test
add
scas
jo
cs
es
pop
pushl
pusha
lods
pop
and
sub
xchg
jle
mov
ficoms
stos
jno
cltd
mov
cmpb
push
xchg
or
xor
push
ds
test
dec
jp
sbb
sbb
faddl
cmp
movsl
in
xchg
or
ret
gs
sarb
jge
sub
xchg
adc
es
add
data16
pop
sbb
mov
sbb
mov
push
pop
in
push
push
sub
mov
xor
mov
fwait
xchg
cli
testl
cmpsl
adc
fldenv
sbb
dec
std
pusha
fstps
pop
test
xor
ja
lods
mov
push
cld
lahf
jg
sahf
jmp
and
stos
hlt
cmp
outsb
aas
push
sbb
xor
outsb
sub
add
mov
lods
jns
mov
pusha
push
sub
dec
push
stos
cmp
out
inc
pop
dec
dec
adc
mov
xchg
dec
jmp
orb
call
dec
lcall
mov
lcall
adc
add
cli
sub
xlat
pop
cltd
addr16
add
scas
leave
imul
out
aaa
dec
pop
std
sub
xchg
jmp
mov
icebp
jo
adc
jl
mov
push
insl
add
jnp
push
fists
lcall
xor
lods
out
xor
pop
jns
dec
popa
sub
ljmp
xchg
loopne
pop
sbb
roll
add
pop
sahf
cwtl
mov
mull
jo
inc
pop
call
pop
mov
mov
xor
lds
jge
sub
pop
pop
dec
add
test
enter
jnp
mov
pop
nop
push
fsubr
jge
cltd
adc
or
add
or
inc
pop
leave
push
daa
fdivrl
push
movsl
cmpsl
ror
stos
xchg
mov
jg
add
xchg
pop
mov
nop
daa
jg
xchg
mov
cmp
adc
xor
imul
push
add
mov
clc
rcl
ret
and
and
xor
sub
or
rorl
rorb
xchg
test
mov
dec
fldt
insb
xor
xlat
push
cmc
sahf
fsubrl
mov
pop
shrl
fwait
outsb
jne
xor
sub
lock
push
lahf
outsl
dec
stos
push
out
enter
jmp
cwtl
sbb
jno
push
adc
xlat
mov
or
sub
inc
adc
ljmp
jle
xchg
push
out
jne
rcll
addr16
pop
pop
mov
and
adc
cmp
in
adc
sub
out
xchg
out
lahf
and
xor
popf
mov
sub
dec
push
ljmp
bound
cmp
xor
mov
ss
ret
test
jns
and
cmpsb
test
sbb
and
jmp
mov
mov
inc
insb
loop
xor
push
dec
jmp
push
sti
loopne
push
test
adc
sbb
jl
xchg
fadds
xor
xorl
addr16
bound
jbe
rolb
shlb
xor
hlt
or
popf
or
cwtl
jns
push
ret
adc
lret
ret
leave
cwtl
adc
pushf
xacquire
xor
and
aaa
jg
fucomip
aaa
sbb
adc
sti
jbe
test
ljmp
addr16
sub
mov
xlat
nop
and
push
pop
in
or
add
insl
and
and
sub
pop
inc
incl
xchg
fnstenv
loop
xchg
add
lea
in
jp
enter
imulb
test
adc
cmp
test
mov
dec
nop
cltd
pop
test
jbe
xchg
pop
add
jo
daa
xchg
jno
cltd
add
push
and
mov
pop
call
lret
and
sbb
mov
fiaddl
push
std
cmp
scas
hlt
mov
adc
mov
stos
negl
pop
repnz
out
and
nop
xchg
pop
data16
adc
in
fcomps
dec
lods
jbe
and
pop
xchg
push
pop
inc
ucomiss
adc
push
test
incb
mov
xchg
pop
jle
mov
mov
movsb
mov
pop
cli
lock
jne
lods
and
rorb
lahf
push
cli
imul
lret
jg
add
mov
lea
test
add
imul
out
loop
adc
cld
rcll
fsubrp
stc
mov
cmp
fists
xchg
fbld
and
xchg
je
and
js
push
ljmp
xor
and
loope
push
jecxz
in
sbb
cmp
lret
jecxz
and
aas
xchg
push
insl
sub
in
lret
fistpl
cmc
or
mov
jns
jp
cmp
ret
sub
mov
shr
and
push
xchg
stos
ds
xchg
lods
jb
push
gs
sub
jno
insl
les
mov
and
mov
sahf
push
xor
push
add
iret
ja
cmp
inc
mov
out
je
jo
mov
cmpsl
xlat
das
dec
xchg
or
sub
adc
into
cmc
pop
call
outsl
add
mov
movsl
xor
into
jb
jo
cmp
cmp
add
mov
cmp
xlat
xchg
addr16
lahf
mov
in
pop
ret
call
push
or
cmp
push
xor
mov
push
dec
into
mov
in
sbb
jl
pop
les
add
dec
test
or
fldl
inc
mov
pop
repnz
ljmp
out
and
adc
or
xlat
shlb
ss
mov
adc
sbb
fistps
fists
jno
xchg
or
in
lcall
jge
dec
jge
mov
jne
in
mov
repz
mov
negb
pop
sbb
test
pushf
mov
out
push
fsubrl
lcall
out
nop
flds
mov
jl
push
push
xor
mov
int
adc
int3
sbb
or
out
add
ffreep
inc
test
test
inc
cmp
push
cmpsb
std
pop
push
fcompl
or
and
into
iret
int
mov
mov
out
scas
jae
int3
push
push
xchg
xor
enter
pop
adc
push
jne
add
xchg
outsb
ja
test
pop
sub
adc
dec
imul
loopne
xor
add
or
cli
outsl
xor
mov
mov
fistps
pushf
push
nop
push
insb
add
movsl
mov
insb
je
and
rcr
push
out
cmc
adc
mov
jb
xor
popf
lock
pop
dec
mov
jge
inc
iret
insb
rcrl
push
jns
jle
cmp
dec
stos
repz
insl
sbbl
pusha
cmp
mov
xor
inc
inc
inc
mov
cmpsb
and
adc
lods
bound
js
pusha
ret
addl
mov
sar
dec
inc
ret
adc
cmp
stos
adc
jns
adc
sti
mov
int3
aaa
or
mov
jp
jae
int
bound
inc
fnstsw
mov
pop
mov
rol
jmp
and
xchg
adc
adc
pushf
push
movsb
cmp
pop
adc
or
jno
lds
lcall
add
mov
movsb
and
fxch
sbb
jl
add
xlat
fldcw
pop
mov
mov
push
sub
inc
pop
jae
cld
add
pop
xchg
movsl
pusha
push
hlt
fsubs
mov
stos
xchg
xchg
in
cmpsb
movsl
ret
xor
aad
inc
sub
cmp
add
mov
jecxz
loop
aas
push
nop
mov
jo
mov
and
mov
pushf
mov
sbb
ja
mov
fwait
dec
mov
adc
and
pop
xlat
mov
xchg
test
add
pushf
stos
bound
pop
daa
lret
or
add
insb
hlt
lods
iret
repz
in
jle
xchg
cmpsl
xlat
sbbb
in
enter
lret
mov
jmp
jno
std
out
in
movsl
repz
sbb
orl
xchg
data16
cli
ror
or
push
or
arpl
inc
lods
inc
xor
adc
test
lcall
addb
adcl
stos
call
add
xor
dec
mov
sub
cmp
push
dec
jmp
inc
outsb
mov
push
movsb
push
xor
ss
and
adc
dec
ja
xchg
scas
pop
sbb
and
jb
xchg
cwtl
pop
mov
dec
jnp
incl
paddb
mov
add
aad
pop
inc
stc
fwait
adc
insl
insb
mov
or
push
pop
std
nop
pop
je
mov
mov
cs
mov
clc
stos
mov
cmp
call
fcmove
ret
call
rcll
adc
enter
lcall
mov
cmpsb
lock
nop
mov
xchg
inc
jle
cmp
xor
cltd
std
pusha
mul
dec
mov
sbb
sarl
int3
sarl
or
dec
push
int
mov
je
xor
lret
cmp
cwtl
sub
add
add
push
lods
cwtl
mov
jecxz
js
scas
mov
mov
fidivrl
mov
push
sbb
cmp
cmp
push
rcrb
rcr
cmp
scas
sahf
mov
xor
sti
ret
mov
outsl
repz
ja
shl
mov
aaa
pop
jns
cmc
and
jns
scas
pop
insb
xchg
dec
in
test
jecxz
lret
cmp
roll
and
lods
inc
ja
fisttpll
xor
sbb
test
lret
jecxz
jae
lcall
sub
sbb
dec
cmpl
sbb
aas
andl
xchg
and
mov
push
std
ljmp
out
xchg
imul
daa
jecxz
cmp
jae
and
enter
xchg
mov
mov
pop
pop
cmp
push
mov
rclb
sbb
sbb
pop
stos
push
bound
mov
imul
or
add
pop
jns
jbe
mov
fildl
push
jmp
pop
add
xor
sbb
push
decb
aad
js
dec
cmp
mov
mov
pop
cltd
mov
dec
repnz
xorb
leave
push
adc
ret
insl
jle
rolb
in
or
sbb
jae
push
in
cltd
ror
aaa
test
and
mov
enter
sub
adc
push
mov
es
daa
loopne
mov
ret
xchg
sub
imul
mov
cmp
shrb
or
pop
add
xchg
shl
jl
aam
inc
outsb
int3
push
lea
mov
and
fcmovnbe
leave
jmp
sar
push
pushl
sub
ljmp
les
int3
jne
jbe
call
js
mov
mov
and
sbb
pop
movsb
stc
xlat
mov
mov
cld
xchg
inc
ror
lock
daa
jecxz
aaa
in
cmc
outsl
or
push
pop
out
test
or
inc
jp
sbb
out
orl
dec
cmp
xor
push
xchg
sub
idivb
fldenv
push
mov
xor
xchg
mov
and
jle
pushf
adc
scas
shll
rclb
mov
pop
fcompl
ljmp
mov
cld
add
cmc
mov
lahf
mov
and
dec
sbb
data16
adc
cmpb
ja
xor
mov
insb
mov
jne
dec
adc
or
stc
sub
loope
out
jle
xchg
idiv
lahf
movsl
sbb
inc
push
roll
add
push
sti
icebp
shl
or
lahf
or
add
xchg
ljmp
mov
ja
pop
mov
adc
and
data16
aaa
xchg
fmul
add
cmp
xchg
mov
pusha
adc
xor
sbb
rolb
inc
int
mov
and
or
mov
xlat
push
lret
sbbl
sub
sti
cmpsb
dec
adc
mov
add
frstor
in
xchg
fs
mov
js
lds
sbbl
stos
pusha
test
call
mov
mov
test
sub
push
ljmp
je
mov
xchg
mov
bound
xlat
jne
xor
mov
inc
js
push
push
insb
push
xchg
push
repnz
lock
cmc
cmp
pop
pop
out
ja
jecxz
stc
mov
data16
add
mov
xchg
sbb
xor
cld
sub
mov
int3
into
fxch
sub
mov
mov
ret
xchg
sub
add
pop
daa
add
dec
outsl
mov
jo
fdiv
cmpsb
out
movsb
dec
sbbl
loope
and
out
clc
movsl
jns
movsl
push
incl
arpl
rolb
xor
xchg
sahf
sub
lods
repnz
jg
inc
pop
bound
add
or
sub
xchg
cli
adc
mov
pop
rol
test
mov
rclb
push
cmp
inc
mov
xadd
scas
mov
mov
sbb
lea
jl
lcall
sub
bound
pop
cmpsb
arpl
xor
inc
cmpsb
loop
rcrb
jg
or
add
xchg
dec
add
mov
mov
cmpsb
rolb
cmp
dec
in
out
scas
popa
pop
jae
pop
test
into
inc
cmp
orl
stc
rorl
xchg
outsb
ficompl
dec
sbbb
dec
iret
cld
jl
dec
gs
ret
pusha
or
adc
push
push
push
loop
call
shrl
dec
int
xchg
xlat
mov
call
or
xchg
sub
adc
xchg
cltd
jbe
imul
inc
iret
jo
rcrl
lret
add
scas
jb
addl
xchg
and
nop
out
mov
dec
jne
dec
or
jns
mov
sub
sub
enter
loop
cmpb
push
pusha
ret
sub
jge
xor
fdivr
imul
testb
hlt
add
mov
or
jae
inc
mov
int3
int
mov
or
mov
lret
cmp
negb
pop
push
or
push
test
lods
lods
add
pop
faddl
jb
mov
jmp
insl
enter
aam
es
pop
lods
gs
stos
popf
and
popf
or
ljmp
test
sub
cmpsb
lods
daa
add
or
stos
mov
lahf
inc
lcall
ficoml
mov
movb
addr16
mov
xchg
clc
dec
pop
xchg
dec
mov
mov
rolb
or
cmpsl
mov
sahf
adc
inc
xchg
push
pop
push
sub
inc
cs
orb
imul
scas
push
fdiv
arpl
stc
clc
xlat
lods
int
mov
jno
mov
push
dec
loop
cmp
imul
xchg
test
std
ud1
and
lds
sub
adc
mov
lds
test
jns
push
in
cmp
xchg
push
sbb
xor
inc
enter
jno
push
mov
mov
inc
out
sti
inc
pop
jmp
xor
inc
jne
divl
adc
add
xchg
ljmp
scas
add
or
cltd
stos
popf
push
xor
lock
lods
add
adc
inc
add
xchg
jae
inc
outsb
in
aaa
sahf
insl
jmp
popf
sub
jbe
sub
les
test
push
aad
sti
lods
inc
clc
jg
pop
cmp
inc
or
lahf
xchg
dec
mov
cmp
icebp
mov
cmpsl
jp
xchg
inc
push
les
jmp
pushf
xor
mov
mov
or
les
movsb
ret
pop
out
cmp
mov
pop
dec
or
add
out
clc
inc
subb
stos
mov
gs
rcll
jl
push
in
jecxz
scas
mov
dec
push
test
jns
sbb
scas
push
ljmp
int
cmp
inc
dec
sub
jne
stos
mov
jmp
adc
pop
adc
mov
mov
jp
dec
in
jns
repnz
push
xor
aaa
adc
mov
dec
je
and
pusha
xchg
nop
rcll
mov
ret
inc
inc
xchg
sahf
dec
push
fmul
in
insl
inc
divl
mov
nop
cmpsb
jecxz
cmp
mov
and
call
bound
pop
mov
stc
outsl
insl
pop
inc
pop
es
inc
xchg
inc
cld
push
jp
jno
sbb
in
add
sbb
repz
dec
fwait
and
xlat
xchg
jle
movb
jge
sbb
xchg
movsb
outsl
mov
pop
mov
lods
dec
fwait
orl
sbb
gs
jne
push
xchg
sahf
into
sbb
xor
stos
jnp
push
rol
push
mov
mov
pusha
test
mov
pop
hlt
jg
stos
inc
add
sbb
loopne
push
and
int
sub
sub
push
pushf
pop
sub
mov
sbb
je
mov
dec
lock
leave
fistl
in
cwtl
push
daa
push
jle
lret
xchg
loop
ss
fsub
or
lcall
jb
mov
sub
in
mov
in
ds
jge
cmpb
cmp
aas
mov
lods
sti
test
lock
or
cwtl
pop
inc
cs
enter
fidivrs
pop
arpl
repz
dec
lock
cmp
enter
insl
leave
mov
cmc
adc
mov
pushf
inc
aaa
push
testl
test
stc
jmp
push
fistl
pop
jg
sbb
scas
sub
insb
mov
dec
adcb
outsl
data16
fiaddl
test
inc
mull
ds
leave
xchg
cld
xchg
jle
sbb
loopne
mov
xchg
div
mov
sbb
lods
test
loopne
jmp
or
in
aaa
ja
aam
push
aaa
mov
imul
xchg
dec
pop
add
out
xor
jp
stos
pop
sbb
nop
lret
cmpsb
cmpsl
inc
jge
pop
push
jnp
je
adcb
adc
lret
popf
aaa
adcb
ja
rcrl
loope
or
xorb
fiaddl
cld
outsl
or
cmpsb
push
out
shll
jp
stos
add
sti
push
cmpsl
fdivrs
insl
push
mov
jb
sub
mov
cld
xchg
in
pop
or
scas
xchg
testl
xor
dec
cmpsb
jp
stos
mov
int
repnz
push
jne
ficompl
sbb
ficompl
fildll
sub
outsl
sti
lahf
sub
dec
push
les
in
ret
push
aad
nop
inc
xchg
sbb
popa
shl
imul
inc
sub
sub
mov
inc
fcmovne
dec
js
decb
ret
push
dec
xor
pop
or
and
lods
jb
cmc
add
push
je
popa
jg
mov
and
inc
lret
pop
mov
adc
addl
call
add
imul
in
mov
out
imulb
out
add
add
rcll
jo
cli
lds
mov
mov
xchg
add
jns
mov
pop
mov
in
xor
adc
sbb
push
cld
loopne
ltr
scas
xchg
mov
push
add
idivb
ss
clc
loopne
cmpsb
inc
shll
jno
dec
inc
sbb
enter
and
iret
int3
push
scas
lahf
sub
gs
push
add
leave
daa
andl
rorb
outsb
sbbb
xchg
add
sahf
push
adc
mov
faddl
pop
mov
add
sub
mov
cmp
in
sub
stc
aaa
or
pop
int
cmp
sbb
nop
xchg
jne
push
notb
or
jmp
mov
pop
rol
jbe
mov
push
lock
sahf
pop
and
jns
xchg
xchg
sar
pusha
pop
push
push
lcall
stos
pop
aaa
cwtl
in
scas
fmuls
cli
lahf
loop
sbb
mov
arpl
inc
fwait
add
dec
jnp
adc
xchg
xor
inc
push
mov
pop
mov
xchg
scas
jp
mov
cli
push
nop
loop
sarb
cmp
xor
sbb
divl
pop
out
lea
cmp
lret
push
cmp
clc
repz
sub
or
cmp
scas
push
dec
push
mov
and
repz
cmp
and
dec
sub
popa
push
jl
inc
sbb
adc
pop
cmc
pop
cmp
fucom
int3
out
lods
jg
pop
mov
jle
adcl
iret
xchg
ljmp
jl
gs
or
adc
aas
cltd
mov
adc
adc
adc
and
mov
arpl
aas
testb
lcall
js
lods
stos
scas
repz
lods
js
std
dec
jb
outsw
mov
insb
and
fildll
jno
test
fisubrs
movsb
fsubl
mov
or
pop
jns
xor
sub
rorl
xchg
in
adc
nop
jno
outsl
jle
push
mov
pop
cmp
in
sub
repz
push
push
aaa
arpl
scas
iret
sub
mov
sub
js
call
sbb
jmp
arpl
fcoms
cmpsl
inc
mov
sti
and
mov
in
es
insb
fildll
cmp
push
clc
sbb
test
or
dec
xchg
lret
adc
lcall
fidivrs
xchg
in
dec
push
mov
mov
mov
fst
xor
shr
sub
rorb
cmp
pusha
xchg
jnp
sbb
or
sub
mov
scas
pop
les
cmp
pusha
lea
int3
cmp
push
rorl
dec
sub
aaa
xchg
lods
dec
xor
push
jmp
sub
sub
insl
ljmp
inc
push
sbb
mov
inc
fwait
cmp
push
divb
loop
out
dec
fstpl
push
mov
mov
lcall
lods
push
lahf
mov
xchg
inc
add
xorl
out
lods
mov
iret
jmp
shrl
fldcw
jno
mov
lcall
icebp
sarb
inc
push
fcomip
or
jle
jne
adc
scas
push
pop
adc
jmp
add
xchg
jnp
shll
xchg
lret
sub
rolb
or
jnp
test
ret
aas
movsl
arpl
dec
stos
cwtl
push
jp
xchg
call
push
xor
add
push
fbld
xor
mov
cmp
lods
dec
adc
pusha
imul
adc
imul
xor
out
lcall
push
pushf
mov
inc
add
mov
out
popa
add
and
mov
rol
addr16
mov
push
mov
cmpsb
or
and
inc
insb
inc
popf
xor
jns
lods
fsts
mov
mov
das
call
or
inc
adc
adc
mov
xor
cmp
mov
icebp
add
test
jb
and
loop
dec
mov
jl
fwait
scas
lcall
jb
fs
lods
popf
xchg
mov
out
mov
sti
xchg
xor
or
xchg
outsl
cmp
in
in
loop
shr
pop
sub
jg
nop
rorl
cmp
shlb
or
in
mov
inc
inc
inc
lea
jl
adc
sub
repz
sar
cmpsb
xchg
and
xchg
scas
ljmp
pop
pop
or
add
es
inc
jns
in
and
in
cmc
lods
and
sbb
cmp
and
dec
rcrl
in
inc
mov
jecxz
cmpsl
popf
mov
mov
mov
jp
mov
xchg
pop
mov
push
dec
ss
push
ret
mov
add
and
add
and
push
pop
push
sti
bound
mov
les
testl
test
jg
fucomi
lods
ja
movsb
les
das
cltd
push
call
push
mov
and
and
mov
lods
and
xchg
pop
fistl
in
lret
xor
sub
adc
lcall
push
insb
inc
pop
cs
jp
test
push
add
mov
icebp
sub
add
mov
insb
xor
cs
fwait
imul
repz
push
add
lret
mov
inc
jmp
sub
jno
inc
pop
adc
mov
push
and
ljmp
xchg
jae
and
shll
subl
mov
dec
jae
ss
jns
xchg
iret
ljmp
cmp
xchg
mov
shll
enter
push
inc
xchg
mov
sbb
pushf
mov
jno
push
fcomps
in
pop
and
add
xchg
lock
sub
rorb
jno
dec
dec
mov
dec
mov
sub
xlat
pop
je
push
adc
dec
bound
fcmovb
aas
out
out
cmp
popf
test
leavew
and
pop
test
test
mov
xor
ljmp
decb
xor
rorl
iret
shl
and
in
andl
push
stos
mov
popf
push
outsb
loop
lcall
cmp
push
dec
dec
jb
and
cld
cmp
xor
mov
mov
into
sahf
std
int3
dec
xlat
push
cmc
mov
cmp
inc
add
mov
fabs
xor
xchg
jns
mov
test
cmp
fwait
sub
pop
mov
cltd
int3
mov
sbb
bound
and
inc
or
sbb
push
es
jbe
mov
call
mov
dec
push
xchg
icebp
testl
cwtl
add
adc
pop
mov
je
or
scas
aaa
push
xchg
xor
das
in
mov
int3
movsl
cld
cld
das
pop
rcrb
mov
fadds
xlat
cmp
and
adc
jp
sahf
rcr
xchg
das
mov
mov
mov
fcmovu
gs
sub
cmp
jmp
mov
and
xchg
and
push
and
jo
sub
sbb
adc
xchg
sbb
mov
clc
movsl
sub
cmpsb
jg
loopne
jbe
cmp
inc
mov
push
jmp
pop
inc
sbb
ret
ljmp
mov
pop
xchg
iret
mov
in
addr16
out
cmp
nop
pop
add
and
adc
push
xorb
mov
push
push
mov
cltd
sbb
inc
lods
popf
jnp
mov
add
sub
xlat
inc
pop
loope
mov
xor
sbb
jo
mov
test
out
mov
adc
fldl
add
dec
xor
xor
cmpsl
mov
sub
adc
icebp
and
into
push
sbb
test
andb
std
add
addr16
movsb
push
adcb
xchg
aam
push
push
xor
out
push
pop
testb
xchg
push
enter
data16
push
sbb
and
mov
cmpsb
mov
push
xor
sub
fs
mov
or
push
mov
aas
xor
xor
arpl
outsl
pop
inc
aas
mov
cmp
pop
lret
adc
cltd
xchg
adc
push
push
enter
xor
jae
pushf
in
in
mov
adc
mov
aas
addb
sub
sub
jmp
inc
sbb
dec
mov
out
imul
cmpsl
mov
push
push
fimull
cli
icebp
int3
cmpsb
out
int
aas
daa
ljmp
add
imul
mov
test
add
sbbb
push
jns
push
lret
stos
mov
dec
pop
imul
sub
xchg
js
outsb
sub
fadds
in
cmp
push
addl
shlb
and
push
aas
xor
adc
test
xchg
xor
daa
icebp
mov
jno
frstor
or
bnd
dec
or
jne
outsl
leave
loope
jecxz
pop
mov
inc
inc
jo
pop
adc
test
je
fcmove
pushf
or
mov
jnp
hlt
arpl
add
mov
out
stos
in
push
inc
or
lods
lea
out
mov
fstpt
pop
dec
imull
jae
xor
shrb
lret
or
xchg
sbb
mov
aaa
ret
cld
into
pushf
unpcklps
into
ret
jo
filds
addr16
sub
push
mov
jp
jl
inc
sub
incl
push
inc
mov
dec
aam
loop
push
mov
cs
les
jecxz
sarl
mov
mov
adc
dec
ror
xchg
lea
push
sbbl
cld
cmp
cmc
xor
xor
ret
jle
pusha
loop
leave
fsubrl
cwtl
loopne
push
sbb
imul
lret
insb
sti
and
inc
sbb
mov
jae
mov
dec
push
mov
out
pop
ficoms
push
iret
mov
fldcw
mov
dec
out
clc
mov
imul
imul
xchg
iret
stc
movsb
idiv
jo
call
xor
cmp
or
cs
pop
scas
mov
frstor
lret
xchg
cli
ljmp
test
sbb
push
faddl
jg
pop
lock
or
mov
ss
out
push
jb
outsb
test
push
add
sti
pmuludq
bound
sahf
mov
mov
lock
dec
xlat
or
mov
popa
daa
mulb
int3
add
icebp
movsb
xchg
test
sahf
push
out
mov
dec
popa
pop
sub
xchg
jp
iret
sub
mul
lcall
push
pop
test
lret
jnp
jb
je
mov
pop
shrl
incl
jbe
mov
mov
push
mov
jnp
sarb
mov
jmp
pop
icebp
dec
push
xchg
sub
inc
es
jo
and
imul
adc
ds
sub
xchg
popf
jb
incl
push
ret
xchg
aaa
js
int3
nop
ret
fldt
imul
imul
insl
scas
mov
in
insl
int
lea
outsb
scas
push
mov
xchg
outsb
xchg
lock
add
mov
add
xor
testl
mov
pop
fildl
iret
pop
enter
out
mov
pop
ljmp
nop
fimull
mov
mov
and
dec
mull
jmp
mov
sbb
call
lea
mov
stos
cwtl
add
adc
cmp
addl
es
add
pushw
fsubrl
inc
push
mov
faddl
lods
xor
xlat
mov
xchg
mov
aas
pop
jno
sub
ret
inc
popa
add
or
mov
add
lret
and
sbb
xchg
cmpsl
or
bound
sub
dec
add
lea
std
add
and
or
ljmp
add
inc
jne
popa
push
push
mov
cltd
and
dec
iret
sbb
repnz
popa
adc
lret
movsl
xchg
int
fistl
jp
cmpsb
push
loop
sti
jge
xchg
insb
lds
stos
add
lods
pop
xchg
pusha
sub
push
sub
out
in
mov
sbbl
inc
out
cmpsl
add
lahf
xchg
out
inc
xor
es
test
fbstp
arpl
push
push
outsl
push
loopne
pop
or
pop
mov
pop
and
out
lock
jae
mov
repnz
rcll
mov
insb
xchg
mov
mov
sbb
dec
mov
les
sbb
movsb
jg
xor
fwait
adc
xor
push
aam
mov
icebp
call
xor
sub
popa
loop
testl
mov
out
ret
pop
xor
push
movsl
mov
mov
outsl
data16
or
sbb
repz
inc
and
je
cmpsl
cmp
daa
push
lahf
movsl
mov
xchg
decl
dec
adcl
imul
in
cmp
sub
repnz
jne
js
sahf
pushf
aam
mov
ret
test
dec
sbb
loop
fstpt
icebp
jae
cmpsb
pop
out
loopne
nop
sub
or
mov
cmpsl
mov
pop
inc
sub
jns
loop
push
or
cltd
xchg
xor
jl
sbb
lds
jne
lcall
rcrb
add
adc
sbb
mov
ja
sub
and
push
ja
xchg
pushf
xchg
loope
cmp
fs
dec
movsb
mov
ljmp
loop
and
push
dec
cmp
dec
add
mov
stos
xchg
arpl
adc
sbb
mov
ffreep
dec
push
mov
scas
mov
jo
dec
sub
in
pop
pushf
mov
icebp
shll
push
jecxz
cli
cmp
insl
daa
sbb
mov
popa
push
xchg
or
add
push
mov
inc
aas
das
jl
fiaddl
sub
cli
lock
pop
ds
jae
in
or
shrb
mov
ret
in
lods
xchg
jbe
jle
jae
xchg
xchg
push
jmp
push
or
movsl
push
cmpsb
mov
mov
mov
daa
sbb
andl
cli
cmp
aaa
mov
mov
mov
and
test
sub
ret
jmp
repnz
add
lahf
sbb
xchg
add
ja
xor
inc
shlb
push
jg
xchg
ret
cmpsl
cwtl
call
jmp
sub
xchg
mov
jno
pusha
sbb
ret
mov
arpl
scas
xor
fsub
les
jno
mov
cmp
mov
xchg
div
ror
std
lock
jns
or
mov
or
cld
or
fstcw
inc
test
push
fnstsw
add
sbb
int3
lahf
pusha
pop
or
insl
mov
push
pusha
and
xor
pop
stc
dec
lods
push
xor
imulb
and
sub
pop
pmaxub
je
add
push
fs
sub
cmpsb
cld
cmp
xchg
fistpl
jp
shll
sub
daa
add
mov
jns
pop
repnz
aas
jmp
push
pop
cmc
nop
xor
jne
xchg
shlb
add
and
jle
xchg
adc
pop
adc
cmpl
jp
sub
xchg
fwait
repnz
sahf
push
cmp
push
lods
shrb
ss
das
test
mov
lea
sbb
mov
imul
and
call
jbe
lea
sub
or
mov
xchg
aaa
sbb
add
xor
dec
loopne
test
dec
mov
push
lock
rcrl
sub
push
int
mov
mov
insl
in
out
add
inc
xor
lret
push
test
or
xchg
cld
ja
insl
clc
ret
jg
mov
xchg
xor
adc
push
adc
fadd
stc
xchg
lock
xchg
out
fsubrl
pop
jnp
lods
xor
call
mov
roll
push
add
jge
mov
dec
testb
fisubrl
fdivrs
jecxz
addr16
leave
addr16
dec
push
dec
lahf
and
xor
jno
push
push
mov
inc
pop
imul
test
loop
dec
pop
jnp
cmpsl
cwtl
mov
out
dec
std
lods
mov
mov
cmpsb
test
mov
sub
loope
or
mov
fs
push
inc
jns
pop
mov
pop
mov
jbe
enter
add
inc
mov
cli
adc
xlat
jecxz
push
or
mov
add
testb
push
push
jecxz
in
push
adcl
xor
mov
pop
pop
stc
in
cmp
jl
mov
sub
fadds
inc
mov
mov
addr16
jnp
jbe
rclb
pop
call
sub
test
in
addr16
mov
pushf
xchg
ret
popf
xor
insb
add
scas
ss
xor
shrb
add
pop
loopne
mov
pop
cwtl
adc
sub
xchg
dec
cmpsb
repz
inc
cmp
or
cltd
add
xor
push
loop
loop
in
ret
dec
lods
sbb
mov
fsubl
pop
or
pop
ja
stos
mov
repz
jle
adc
mov
mov
cmp
or
ret
add
jbe
sub
lds
test
nop
pop
cmp
repnz
push
mov
push
fisubrl
hlt
cmp
adc
pop
aaa
push
test
mov
testl
sbb
fsubrl
mov
pusha
subb
sahf
jge
mov
pop
dec
and
je
fsubrs
cltd
sub
xor
cmc
cmp
adcl
inc
mull
das
lcall
push
in
rolb
nop
sbb
sub
mov
testl
ss
cmp
aaa
ss
cmp
adc
or
lock
test
cmc
test
cmp
fsub
shlb
push
sub
jecxz
push
loop
push
or
xchg
sbb
push
push
pushf
stos
popf
loopne
inc
xchg
or
sahf
xchg
rcrl
popf
sub
addr16
jmp
cmp
sti
jmp
icebp
lods
ja
movsl
fcmovu
fwait
cmp
cmp
repnz
rcrl
and
mov
push
fwait
sbb
stc
idivl
xor
sub
test
insb
pop
push
popa
pop
in
or
imul
pop
paddusb
mov
inc
xchg
push
cmc
movsl
imul
pop
push
bound
jmp
popf
jge
das
dec
xor
stos
shlb
lret
gs
in
sbb
lret
setge
sbbl
test
and
in
mov
jb
push
and
insb
shlb
push
xchg
unpckhps
lods
jle
sub
lods
dec
std
jb
test
gs
je
or
pop
lret
cltd
lret
xor
cmp
mov
dec
mov
cmp
push
mov
inc
dec
xor
or
out
nop
stos
jge
daa
pop
sbb
movsb
or
std
pop
inc
mov
popf
icebp
mov
ds
ret
push
mov
push
into
rep
ds
seto
aas
push
popf
pop
movsb
dec
test
into
lea
add
inc
int3
popf
pop
js
test
pop
cwtl
jp
pop
push
mov
int
sbb
or
jnp
fisubl
xchg
adc
push
lock
jnp
jae
rcl
pop
out
dec
and
cmpsb
mov
push
pop
cmpsb
sbb
cmp
mov
add
pop
xor
loopne
inc
call
out
popf
mov
inc
in
lcall
lds
dec
sbb
jb
or
shll
clc
inc
sti
test
ret
mov
ficoms
mov
push
dec
sbb
test
push
shll
enter
xor
sbb
pop
daa
bound
add
test
or
inc
push
movsb
xor
inc
popa
cmp
out
inc
push
es
ret
jb
add
lret
jl
aas
mov
insl
push
or
mov
and
jmp
and
ds
loopne
ljmp
jnp
pop
lods
enter
js
jno
cmpb
scas
popl
aas
leave
mov
xchg
or
into
addl
mov
stos
cmp
mov
adc
xor
pop
pop
test
push
jge
leave
or
xchg
push
mov
mov
add
imul
cmp
jle
rorl
pop
adc
out
xor
inc
mov
mov
adc
cmp
mov
cmc
cmp
dec
mov
pop
getsec
dec
dec
add
jl
push
jp
jl
push
add
in
and
inc
ljmp
jmp
push
test
or
push
outsl
jmp
repz
add
into
add
mov
cs
aad
test
adc
add
inc
or
inc
mov
ljmp
sti
aad
xchg
gs
cltd
imul
pop
pop
and
inc
ja
mov
mov
arpl
jl
jbe
jecxz
and
adc
sti
ja
loop
inc
hlt
cli
sti
sub
pop
mov
pop
sbb
aam
aas
xor
pusha
repnz
fnstsw
jl
push
insl
mov
inc
sbb
or
movsl
jle
lds
add
inc
lock
cmp
out
push
shrl
mov
loope
mov
dec
and
inc
push
xchg
in
mov
xchg
fwait
sbb
cmc
sbb
add
std
fstps
cmpl
lret
fimuls
mov
daa
xor
pop
js
mov
aaa
adc
out
test
repnz
dec
enter
shlb
xlat
pop
add
or
imul
jg,pt
js
xor
and
dec
pop
loop
fistps
aas
jmp
popf
xor
in
adc
out
add
aaa
mov
movsb
mov
pop
xor
jnp
test
in
dec
out
pop
dec
jnp
aas
cmp
les
imul
call
popf
dec
scas
lret
and
fildl
push
pop
dec
push
int3
mov
xor
outsl
inc
add
arpl
dec
adc
or
jbe
and
jmp
sub
sti
jno
jmp
test
push
lret
xchg
fs
mov
xor
mov
stos
dec
dec
sub
mov
movb
leave
mov
xchg
mov
out
xchg
in
call
rcr
jp
lods
pop
mov
repz
mov
mov
subl
or
cmpsl
xor
push
mov
test
aas
jns
outsl
out
addr16
ljmp
sub
cmc
inc
test
push
inc
or
add
js
dec
add
mov
jae
sub
sub
inc
sub
aam
fucom
push
out
clc
mov
sbb
cmp
pop
jecxz
jle
mov
pop
dec
lock
idivl
pop
stos
repnz
nop
mov
dec
lahf
loope
pop
mov
pop
adc
into
ret
mov
out
cmpb
adc
or
in
mov
je
or
movsl
jl
xlat
pop
dec
sub
nop
in
test
mov
push
and
loope
sbb
xchg
mov
push
int
push
mov
stos
dec
jmp
mov
lahf
cmpl
iret
loop
insb
pop
adc
sub
divl
mov
std
in
xchg
mov
pop
movsl
inc
or
sbb
mov
stos
scas
dec
push
out
inc
aad
arpl
mov
les
lea
mov
mov
mov
repnz
or
out
cmp
pop
mov
scas
orb
lahf
mov
cmp
aad
lret
adc
sub
lahf
sub
push
mov
mov
ljmp
pushf
cmp
or
mov
xchg
fildll
push
inc
mov
cs
sar
mov
mov
add
cli
gs
ds
cmp
or
and
cld
mov
dec
xchg
sahf
notl
dec
sub
pop
sub
xlat
sbb
push
in
lock
orl
shll
inc
cltd
sub
movsb
mov
push
xchg
jbe
cmp
sarb
out
pop
fsubrl
leave
push
add
mov
cmpsb
push
mov
rorb
mov
dec
mov
add
pop
inc
ja
imul
divps
negl
add
pop
sbb
das
cmp
mov
lret
jmp
bound
roll
jb
shll
das
jo
call
ljmp
cmp
std
xor
sub
imul
and
out
sbb
int3
int
pop
xchg
insl
push
jno
daa
cmpsb
fidivs
pop
pushf
mov
popf
lds
push
iret
pop
mov
mov
jnp
ja
push
inc
fsubr
or
dec
mov
mov
xor
imulb
xor
insb
clc
in
dec
sub
sahf
sbb
pusha
mov
jns
sub
shlb
mov
test
mull
jle
add
add
mov
inc
xor
sti
sbb
and
jg
aaa
jp
push
inc
flds
sub
jbe
test
cmp
aaa
lods
int3
xchg
fcomps
cmp
mov
and
sti
or
sbb
and
and
movb
sbb
xchg
stos
shrb
arpl
in
aaa
pushf
pop
dec
fisttpl
sub
loope
push
inc
cs
outsb
mov
fdivp
dec
ljmp
out
pop
stc
push
pop
xchg
or
push
sub
jb
or
in
popa
dec
push
icebp
adc
or
add
ljmp
mov
clc
shll
cs
and
aam
pushf
jg
lahf
push
pushf
movsl
pop
add
insb
dec
pop
sub
gs
popa
push
pop
pushf
jmp
sbb
insb
cmp
mov
js
adc
je
popf
inc
or
push
movsb
sahf
ret
or
mov
shr
sub
rcll
xor
aaa
cmp
mov
xor
inc
sbb
leave
mov
mov
and
add
insb
les
xchg
and
psubb
and
in
in
and
inc
xchg
xchg
sti
fildll
shll
pop
fnstcw
negl
std
add
enter
add
sbb
scas
js
push
inc
outsb
fisubs
movsl
les
adc
mov
bound
jbe
cli
mov
fcompp
cli
adc
out
and
push
in
push
iret
inc
lods
mov
into
shll
cmpsb
or
dec
sbb
or
bound
aaa
inc
icebp
outsb
ffree
aad
std
push
sarb
mov
jecxz
mov
fs
mov
push
test
lret
jno
icebp
or
rcrb
cmp
lcall
xchg
ret
dec
ljmp
xlat
repnz
cmp
inc
and
leave
and
inc
sti
xchg
out
shrl
cs
inc
mov
mov
add
roll
fiaddl
js
pop
jo
jne
add
popa
mov
jmp
pop
inc
mov
aaa
xchg
adc
pop
sti
mov
clc
adc
das
push
pop
add
push
mov
iret
in
or
enter
add
in
cmpsl
les
repnz
out
adc
mov
and
or
stos
addb
inc
popa
rcll
jne
dec
fs
push
pop
sbb
and
cmc
cmp
push
js
jb
clc
daa
or
insb
imul
jle
das
cmp
imul
dec
xchg
mov
push
mov
popf
fcompl
jmp
es
sub
push
dec
clc
in
dec
dec
outsl
insl
std
mov
lods
cmpsb
outsb
lcall
cld
dec
ss
lock
lods
fimull
aam
movsb
and
addr16
mov
dec
push
fidivs
daa
and
adc
push
clc
je
std
push
and
dec
push
lea
pop
lret
out
lret
inc
lods
pop
or
imul
xchg
jp
mov
out
mov
push
push
xchg
cli
mov
jle
repz
inc
mov
shll
sbb
dec
rcr
stos
and
and
adc
xlat
addb
adc
popw
hlt
sub
popa
xchg
xchg
sub
mov
outsb
dec
dec
push
test
mov
push
push
js
inc
mov
fcmovu
or
cld
mov
xchg
adc
sbb
call
dec
mov
push
mov
jle
push
xchg
in
lret
xor
sub
push
shll
jo
sub
adc
or
faddl
dec
pushf
sub
jns
add
sub
cs
pop
pop
jne
out
hlt
mov
pop
ficomps
push
loopne
fnstenv
and
mov
out
jns
int
mov
jae
jnp
cmp
cmp
inc
inc
pusha
add
notl
mov
mov
jle
cmc
out
scas
xchg
outsb
mov
lea
or
hlt
pop
fimull
lret
shl
sahf
cs
xchg
cmc
arpl
movsl
mov
stc
popa
lcall
arpl
out
push
jnp
add
rcrb
cltd
dec
mov
adc
add
add
fsub
dec
mov
inc
xchg
mov
or
fdiv
movsl
shll
aaa
stos
and
test
sahf
jge
pop
cmp
jne
insb
pusha
loopne
lods
sbbb
or
fmuls
jae
and
jge
pop
jl
cmp
in
movsb
enter
ja
sub
cmp
push
fidivrl
add
push
js
dec
aaa
jmp
in
shrl
push
mov
adc
cmp
daa
add
adc
ds
xchg
pop
jnp
sbb
mov
lods
push
pop
jp
add
fldl
add
pop
clc
jecxz
push
inc
jns
outsb
or
shll
cmpsl
test
aam
pop
jo
xchg
jge
xchg
xlat
or
rorl
imul
xchg
pushf
popa
mov
int3
xchg
insb
bound
mov
fistpll
cwtl
or
xor
out
sub
cld
push
pushf
mov
xchg
negb
inc
mov
adc
jmp
mov
xor
jg
mov
or
lcall
mov
xor
xor
mov
mov
pop
jmp
sbbl
movsb
pop
pop
shrb
shrb
aaa
xchg
in
stos
mov
xchg
lret
sbb
cmp
cmp
xlat
aas
cwtl
movb
sub
lea
ficoms
repz
push
cmp
iret
push
outsb
mov
mov
mov
into
inc
jmp
jnp
repnz
mov
icebp
mov
push
jno
negl
mov
mov
cmc
inc
xchg
xor
pop
push
in
or
sub
sbb
push
mov
dec
jmp
pop
lods
pop
push
stos
sub
jbe
mov
fwait
inc
mov
pop
mov
fimuls
addr16
mov
lret
dec
das
add
xlat
into
xchg
fidivl
mov
into
xchg
or
inc
insb
mov
dec
add
lret
adc
out
and
out
int
xor
push
cmpsb
add
fstl
ja
or
push
push
movsb
add
xchg
fldz
movsb
xchg
fldt
mov
into
add
fucomp
jmp
enter
loop
pop
jl
ja
fildll
movsb
sarb
leave
xor
inc
mov
int
rolb
aam
jno
jb
rclb
dec
addr16
leave
movsb
adc
mov
rcl
xchg
ret
stos
outsb
mov
sti
dec
shr
cs
dec
sti
clc
mov
aad
data16
fldt
outsb
pop
and
mov
sbb
mov
je
popa
mov
cmpsl
mov
fsub
xor
push
leave
in
notl
ljmp
push
mov
int
mov
adc
jno
inc
xchg
pop
imul
loopne
pop
xchg
movsl
js
addr16
jge
or
add
add
mov
imul
sbb
aaa
push
ds
sbb
jns
das
or
aaa
and
sub
mov
xchg
cli
jnp
mov
and
and
mov
in
mov
fcompl
inc
jmp
cltd
lock
imul
in
insb
xchg
jl
stos
push
sarl
andb
sbb
xorb
mov
push
int
and
mov
sub
add
sbb
loop
push
push
inc
add
out
insb
cld
jae
or
xlat
bound
loop
dec
leave
ror
add
mov
aam
sti
push
inc
bound
pusha
dec
hlt
mov
lds
enter
mov
jo
aad
imul
es
mov
nop
mov
and
sbb
sete
jne
aaa
scas
add
pop
xchg
push
sahf
pop
popa
fdivs
adc
mov
shlb
add
addr16
cli
andl
imul
lods
fstps
in
in
dec
push
std
adc
mov
mov
add
xchg
or
dec
es
xor
push
ja
sbb
bndstx
ljmp
dec
ss
sti
and
inc
les
dec
push
xchg
mov
adc
cmp
push
arpl
aam
sti
loope
push
add
fiadds
addl
imul
ja
repnz
add
pop
inc
pop
mov
or
sti
xorb
adc
scas
ror
sub
dec
inc
enter
je
and
orb
rcr
imul
arpl
js
push
insl
cmpsl
iret
mov
lahf
roll
dec
inc
cltd
std
int
mov
xlat
sub
int
sti
cmp
ficompl
sub
jl
mov
loope
adc
lret
xor
hlt
push
int3
fldcw
push
in
or
gs
aaa
push
hlt
lahf
fcomp
cmp
aam
xchg
sbb
mov
fwait
adc
mov
pushf
jno
pusha
add
adc
xor
ficomps
xor
mov
fwait
inc
test
out
iret
mov
rclb
or
xchg
test
idivb
mov
hlt
std
sub
sub
cwtl
adc
cmp
std
pushf
xlat
cmp
out
push
insb
pop
jp
in
xchg
int3
mov
leave
stos
repz
clc
inc
movsl
dec
das
ja
fwait
cmpl
jnp
daa
into
in
xor
in
sti
xchg
push
fisubl
adc
js
ljmpw
enter
jge
push
pushf
push
subl
sar
sarl
dec
scas
jo
xchg
xchg
cmp
inc
jge
das
mov
stos
push
jb
cmpsl
ret
sti
mov
lds
lret
lods
mov
iret
push
rcrl
push
inc
lods
fiaddl
inc
xorl
lretw
rcrl
mov
hlt
repz
in
movsl
xor
stos
push
loop
add
push
mov
push
pop
add
fstpl
jns
and
mov
push
mov
pop
xchg
pop
mov
xlat
sarb
pop
xchg
push
xor
rep
sbb
dec
cmc
daa
sub
js
enter
mov
lock
inc
mov
arpl
push
ljmp
movsl
xchg
mov
outsb
inc
mov
test
pushl
std
push
dec
inc
into
jmp
mov
in
lcall
cs
fstpt
call
xchg
and
jne
loop
jns
sbb
aam
shlb
sbb
int
push
je
sub
dec
js
daa
stos
loop
mov
movsl
sub
push
lea
sub
pop
sbb
lock
pop
jecxz
mov
das
add
clc
jno
out
mov
inc
add
lret
xchg
and
roll
mov
fnstcw
adc
cli
stos
push
in
fsubl
pop
adc
das
cmpsb
js
aad
lods
xor
cmc
mov
pop
lcall
repz
aas
scas
stos
dec
cltd
or
mov
pop
cld
pop
fildl
lret
jp
ss
sti
pop
ret
cwtl
push
or
mov
sub
mov
ds
loopne
lods
xchg
out
xchg
dec
outsb
int3
xchg
mov
adc
mov
int3
pop
pop
adc
lcall
cli
testb
cmp
mov
jb
pusha
icebp
dec
cli
add
insl
nop
mov
and
xorl
repz
ds
dec
rcrl
mov
movsb
ljmp
mov
sbb
sbb
jnp
aas
imul
bound
test
icebp
mov
shlb
stos
add
adc
adc
test
cmpsl
jo
lret
sbb
ss
repz
addr16
mov
pop
sub
pusha
cmpsb
cmp
cmpsl
jge
jle
adc
cs
jo
pop
das
cmp
in
mov
and
mov
movsb
cmpsb
inc
xor
xchg
pop
xor
jge
shrb
cmp
sbb
fidivrs
mov
sbb
repz
gs
sub
and
or
jnp
loope
and
push
addb
pop
cmp
adc
jmp
mov
arpl
arpl
and
pushw
xor
push
xchg
cmpl
adc
push
sbb
notb
and
pop
pop
xor
mov
mov
sub
std
les
pop
jp
out
movsb
dec
pop
testb
shll
addr16
xchg
test
out
aam
push
add
adc
test
lods
insb
push
or
add
inc
fldl
std
cmp
cmp
add
add
push
stos
xchg
cmpsb
and
test
sbb
inc
mov
shrb
adc
jns
sub
loope
mov
or
clc
xchg
mov
fmull
cmp
jae
in
rcrb
setb
les
pop
push
shlb
in
faddl
subw
movl
mov
gs
adc
addr16
in
cmc
push
xor
jg
add
xor
push
jb
mov
pop
adc
add
dec
mov
es
les
xchg
push
xor
lods
sbb
pop
aad
jecxz
gs
cs
mov
adc
cmc
mull
add
insb
sub
mov
out
pop
fiaddl
and
repnz
push
mov
cmp
dec
mov
icebp
shrb
mov
pop
xor
push
loop
test
cs
pop
mov
mov
int3
pop
xchg
shll
imul
sahf
dec
in
test
jg
inc
ss
jmp
loop
mov
aas
cmp
ror
lods
shll
mov
clc
xchg
pop
ljmp
xor
int
aam
sub
scas
int3
lret
xor
fidivrs
bound
aaa
mov
xor
push
dec
enter
ja
in
repz
fisubl
into
mov
cmp
ss
out
and
out
push
mov
adc
mov
xchg
repnz
mov
jno
mov
out
out
insb
movsl
ret
jno
push
sub
fmuls
xchg
icebp
inc
call
or
aad
and
jmp
sub
movb
int
shlb
out
cmp
ss
push
ljmp
xchg
xchg
xchg
insb
inc
mov
push
xchg
cmp
lret
xor
sub
bound
test
addr16
cmp
cmpl
push
enter
fidivs
lahf
roll
and
adc
icebp
or
sub
pusha
scas
test
push
out
sbb
scas
test
adc
ret
push
add
mov
push
or
int3
xchg
stos
mov
sbb
push
or
ret
out
or
mov
fs
sbb
int3
xchg
inc
push
cmp
iret
dec
mov
sbb
jb
in
mov
cmpsl
insb
pop
fimuls
movsb
out
inc
pop
outsl
into
mov
mov
adc
dec
loopne
lds
inc
es
aaa
jae
in
stc
push
gs
cli
xchg
inc
pusha
scas
add
or
lods
fmulp
aaa
jns
sarl
add
js
push
pop
lods
add
bound
lods
ss
roll
jg
and
fisttpl
xchg
mov
out
push
popl
jo
mov
adc
xchg
lret
xchg
push
fwait
adc
adcl
cmp
xchg
cmp
addb
xor
outsl
cmp
icebp
push
sub
pushl
dec
ljmp
xchg
js
mov
dec
ss
and
mov
fnstcw
iret
xchg
cmp
fisttps
and
inc
fsubrl
shlb
pop
popa
sahf
aad
cmpsb
movsl
adc
xorb
xor
popf
sub
and
pop
aas
or
jne
or
push
push
mov
push
mov
je
inc
or
pushf
call
movsl
xor
inc
push
sub
lds
in
inc
out
cwtl
sub
inc
subb
dec
ficoms
sbb
scas
js
or
sti
and
mov
push
mov
jl
cmpsl
popa
int
mov
out
mov
in
jmp
dec
xchg
jl
adc
pop
lret
in
cmpsb
mov
jb
sub
push
mov
cwtl
iret
popf
outsb
push
or
push
cmp
mov
push
pop
mov
repnz
mov
xor
mov
xchg
mov
sub
pop
stos
mov
outsb
loope
mov
and
sub
mov
out
sahf
rcll
mov
xlat
rcrl
test
aas
mov
and
cmp
stos
xlat
xor
sbbb
mov
mov
cld
push
add
pop
sbb
ja
push
stc
jne
fsub
mov
mov
jb
out
fwait
inc
jle
sbb
fdivrs
cmpb
jbe
fcoml
repnz
sub
ret
dec
rcrl
sub
out
jne
nop
cmovb
cltd
daa
sarl
mov
imul
adc
jmp
adc
or
and
adc
mov
and
pop
loopne
jae
cmpsb
jecxz
and
xor
sbb
dec
mov
in
or
loopne
lds
lds
orb
mov
imul
adc
cmp
adc
mov
lahf
sti
mov
mov
cmc
andb
cmp
ss
loopne
ja
sbb
sbb
das
data16
shlb
inc
inc
pop
add
inc
sarl
cmp
dec
js
mov
icebp
lret
mov
sub
adc
arpl
pop
jmp
ja
add
add
pop
mov
xor
ficoml
js
inc
out
lock
decb
pop
add
repnz
fldenv
xchg
add
lock
add
pop
outsl
adc
lret
cmpsl
and
pop
test
mov
popa
dec
std
data16
pop
iret
xchg
xor
stc
lcall
dec
pop
cmc
int3
fbld
or
add
clc
daa
lcall
push
lahf
jnp
jnp
push
mov
aad
push
dec
daa
inc
orb
shrl
xchg
jle
mov
mov
imul
jecxz
sub
push
cmpsb
sub
aam
mov
loop
or
in
nop
imul
sub
jo
sbb
inc
subb
cs
cmp
ds
fwait
sub
pop
sbbb
inc
pop
rcr
es
jl
jle
xlat
jne
jecxz
cltd
add
jnp
js
aaa
jge
subb
cmpsb
in
aas
cmp
sbb
inc
add
pop
xor
sub
xor
dec
inc
aaa
adc
pop
lods
ss
inc
les
icebp
xchg
ljmp
cmp
ljmp
fmull
out
ljmp
loop
dec
sub
in
push
cmp
sahf
dec
lods
adc
xor
lcall
jb
and
fimuls
iret
inc
mov
pop
cmp
cmpsb
bound
cmp
orb
dec
cmp
sbb
mov
imul
mov
lea
mov
mov
sarl
je
loop
test
inc
mov
sahf
out
aam
popf
dec
mov
inc
jbe
dec
mov
mov
xchg
mov
test
inc
push
adc
lret
jb
adc
xor
je
xchg
xor
dec
sahf
insb
fdivs
or
adc
mov
stc
inc
mov
ljmp
enter
xor
cltd
daa
push
mov
out
pop
push
sbb
xor
lahf
mov
mov
es
sub
rclb
imul
xchg
push
sub
in
push
mov
add
jns
xchg
xor
ds
js
in
and
pop
call
inc
adc
addb
in
test
add
push
scas
mov
in
inc
mov
movsb
aad
mov
push
lods
loopne
mov
mov
xchg
mov
xor
inc
mov
repz
stos
out
sbb
adc
scas
and
push
aaa
std
popf
leave
xchg
inc
addr16
shrl
stc
jp
cwtl
adc
cmp
arpl
ja
scas
or
test
sbb
out
cmpsb
cmp
ret
xlat
in
inc
mov
shl
cmpsb
dec
sbb
push
adc
loopne
out
mov
jno
mov
xor
xchg
sbb
fbld
adc
scas
xlat
adc
jle
hlt
int
or
mov
mov
or
outsb
ret
ljmp
nop
cmp
dec
in
pop
sub
cmp
sbb
pop
clc
inc
js,pt
cmp
jne
gs
inc
xchg
mov
icebp
push
stos
dec
dec
dec
insl
push
jb
pop
push
dec
mov
aam
push
out
cmp
sub
or
in
sub
and
pop
xchg
or
sbb
and
push
cltd
and
push
push
push
jbe
incb
push
popa
pop
mov
xor
mov
das
out
cmpsl
arpl
xor
fwait
addr16
dec
dec
pusha
push
jp
out
and
mov
xor
cli
push
dec
out
call
adc
mov
jb
fstp
xchg
inc
sbbb
lahf
sbb
xor
mov
out
add
data16
hlt
lret
out
enter
and
mov
pop
pop
rclb
xor
loope
subb
add
mov
dec
pop
popf
mov
cmp
jb
add
inc
enter
test
pop
repnz
scas
xor
daa
lret
mov
cmc
cwtl
pop
js
jne
mov
xor
or
jb
fisttps
insb
scas
inc
fxch
inc
mov
sbb
idiv
popa
sarb
xor
scas
das
push
inc
stos
out
fstl
idivl
je
je
cmp
aam
xor
dec
clc
lret
xchg
lret
cmp
lret
push
sub
mov
push
and
enter
cmp
xor
aam
add
sub
xchg
repnz
gs
rcll
add
jg
mov
mov
out
jp
cmpsb
cmpsb
leave
fwait
adc
ror
xlat
out
jns
dec
stos
pop
je
int
outsl
push
mov
cmp
sbb
xor
in
jno
push
cmpsb
dec
and
cmp
and
inc
add
into
mov
pop
mov
jmp
sbb
addr16
dec
push
sahf
cmp
inc
fmuls
add
cmpsb
lret
and
sub
daa
fcmovnb
sub
arpl
and
mov
popa
push
or
xor
sub
in
bnd
mov
push
or
lret
sbb
pop
lock
rorb
dec
add
stos
xchg
lcall
bound
jecxz
or
loope
mov
aas
xchg
pop
sahf
inc
or
loope
ljmp
mov
adc
call
stos
cmp
mov
push
outsl
testb
xchg
das
adc
pop
jo
inc
ficoms
or
stos
cmc
in
imul
test
dec
test
add
lret
outsb
icebp
icebp
cmp
std
rcrl
out
xchg
mov
dec
movsl
pop
clc
cmp
xorl
push
sbb
add
test
mov
stc
pop
test
aas
inc
xchg
fs
out
gs
jo
call
dec
in
sub
lahf
sbb
adc
mov
or
int
cli
jno
int3
lret
sti
mov
iret
xchg
loope
dec
les
lds
out
jae
add
jb
jo
mov
lcall
hlt
mov
mov
je
setnp
pop
jbe
and
lods
scas
ds
fidivrl
jmp
cmpsb
idivl
ss
sti
inc
pop
mov
mov
sub
ja
fadds
mov
dec
add
pop
lcall
jnp
fdivrs
shll
mov
mov
dec
push
les
push
lds
dec
shll
mov
nop
js
mov
jle
in
mov
inc
mov
shll
dec
aas
iret
imul
pop
pop
dec
sub
enter
fsub
or
push
inc
arpl
in
xor
or
lods
aad
test
lea
xor
fxch
jno
xor
repnz
and
dec
sub
xchg
sub
adc
fnstenv
xchg
pop
push
addr16
mov
dec
mov
pushf
lds
pop
ret
stc
jl
in
cmc
lahf
cmp
cld
push
sbb
lods
cmpsl
out
in
aas
dec
fnstcw
lcall
mov
decb
pop
xchg
loop
clc
loopne
int3
daa
mov
push
out
jp
int
push
arpl
adc
cld
xor
cmp
sub
xor
mov
test
xchg
mov
ret
mov
lret
into
insb
inc
xlat
sub
mov
fsubrs
lock
aam
sbb
lcall
imul
aad
push
inc
adcl
lea
jae
iret
dec
fildl
in
mov
dec
mov
adc
sub
jne
lods
or
arpl
rorl
cwtl
cmp
adc
call
pop
push
out
daa
add
imul
xchg
push
je
aam
mov
jno
addr16
cmpsl
out
outsb
cld
adc
add
sub
cmp
dec
xor
mov
jo
mov
aas
inc
inc
mov
pop
lret
jecxz
repnz
jno
js
cmc
cmp
cs
sub
pop
add
push
adc
loop
dec
add
inc
and
inc
push
push
jmp
sub
icebp
stos
mov
inc
lds
xchg
pop
and
mov
or
cmovs
fcoml
pushf
out
mov
inc
pop
ljmp
js
xor
mov
mov
pop
xor
pop
test
dec
lea
in
cmp
movsl
loope
in
mov
mov
mov
xchg
and
imul
xchg
ret
ljmp
sub
add
xchg
pushf
dec
outsb
add
push
rorl
inc
sub
mov
hlt
inc
dec
add
pop
rol
movsb
jno
push
jns
mov
ret
mov
adc
fnstenv
sahf
imul
in
xchg
test
cwtl
xor
pop
shlb
mov
lods
pop
into
imul
cmpb
and
ljmp
mov
imul
dec
fs
jbe
mov
imul
inc
rcr
inc
testb
pop
adcb
dec
dec
pop
mov
or
push
sub
lret
mov
xlat
lret
iret
pop
aad
ds
or
repz
rcrb
insb
loope
push
lret
orb
push
mov
mov
js
fimull
aam
insb
fs
xchg
movsb
in
movsl
gs
loopne
shl
mov
jp
lcall
mov
cli
outsb
inc
pop
push
adc
movsb
lds
fs
or
daa
popa
or
pop
orl
nop
stos
jo
push
gs
sub
ds
lods
inc
daa
fwait
into
xchg
call
or
fwait
sbb
sub
mov
out
imull
pop
jno
cmp
jne
mov
xor
pop
ret
mov
stc
xor
aad
fmull
outsb
inc
syscall
jp
mov
jae
sub
bound
pop
fidivrl
xchg
ds
xchg
inc
js
dec
push
rcl
mov
adc
mov
fcomps
shll
daa
push
outsb
leave
add
lcall
or
or
jo
mov
call
cwtl
mov
dec
inc
push
in
dec
arpl
push
xor
popa
movsl
dec
mov
jne
xor
movsb
sbb
lahf
notb
aas
cli
sahf
imull
dec
dec
mov
mov
data16
or
enter
push
scas
cmp
pop
sub
fs
mov
jbe
pop
xor
dec
popa
jae
test
inc
dec
xchg
mov
inc
test
lods
pop
addr16
jae
push
aad
sar
inc
hlt
jbe
fwait
cs
jp
inc
dec
push
or
add
jbe
or
pop
dec
push
or
aad
das
andl
and
lods
sub
push
jmp
and
nop
mov
mov
sbb
mov
push
not
cmp
mov
cs
mov
or
ret
cmp
popf
sbb
pop
xchg
inc
dec
mov
icebp
incl
mov
pop
icebp
out
cli
cmpb
jle
sub
sbb
subl
cli
add
mov
aas
or
stos
rcrl
out
jo
dec
or
fstpl
iret
es
xor
stos
dec
mov
repnz
xchg
cld
stos
jnp
dec
mov
aad
cmp
and
negb
in
mov
xchg
cmpl
lock
or
cmpb
mov
stos
sub
jl
jp
add
cs
das
std
notl
and
pop
pusha
cmp
scas
fwait
and
jbe
lea
faddl
push
sub
dec
jmp
fnsave
pop
or
outsb
test
xor
fcmove
pop
sub
aad
fildl
scas
add
mov
das
jecxz
jmp
mov
xchg
xlat
loope
inc
cmc
dec
adc
movsb
mov
lahf
push
subb
and
into
jno
gs
pusha
cltd
in
pop
pop
rcrb
test
repnz
bound
inc
xchg
adc
test
outsb
mov
ds
stos
rcr
mov
pop
sbb
cld
or
rcr
mov
not
outsb
int
inc
pop
outsl
pop
sbbl
int
jg
cld
and
dec
inc
push
cmp
aaa
mov
inc
fs
jle
mov
jp
clc
xchg
ljmp
out
adc
pop
jge
lds
lahf
adc
pusha
mov
lahf
pushf
cltd
ja
sub
outsl
add
fisubrl
js
cmp
mov
pusha
subb
imul
adc
lret
mov
inc
rorb
dec
xchg
adc
sbb
or
adc
jmp
xchg
mov
push
mov
cs
call
int
inc
outsb
or
sbbl
iret
popa
xor
cwtl
push
sub
and
imul
test
sbb
adc
ljmp
aaa
movsb
xor
cmc
insb
lock
mov
and
jl
cmp
andl
pop
cld
xchg
pop
aad
subl
jbe
sub
lret
cld
orl
and
les
adc
xchg
dec
adc
pop
pushf
push
and
data16
hlt
cmpl
loopne
sbb
jge
lods
cs
or
test
jl
out
addr16
sbb
adc
in
jmp
test
sbb
pop
mov
lods
popa
pusha
or
out
arpl
lea
dec
fwait
push
mov
aaa
push
icebp
dec
repz
mov
out
jbe
leave
aad
xlat
push
sub
hlt
sbb
inc
pop
popa
repnz
adc
ret
in
fldt
cmpsl
cwtl
addl
aas
aam
dec
xchg
fmulp
fsubrs
pop
cmp
dec
fnstenv
mov
insl
cmp
xchg
or
sub
lret
dec
aas
sub
pop
sahf
push
fildl
cmpsl
je
fmulp
gs
sub
xchg
adc
dec
mov
repz
dec
add
stos
dec
xchg
fisttpl
loope
sub
xchg
loope
fnstcw
adc
movsl
inc
xchg
cmp
dec
je
mov
lds
xchg
fs
pop
out
cld
cmp
lock
push
call
xor
jnp
dec
mov
add
std
add
fidivrs
or
test
push
call
int3
inc
jns
mov
push
mov
repnz
pop
xlat
icebp
cpuid
fsubs
lcall
pop
mov
xor
fs
sbb
jnp
icebp
mov
inc
mov
in
xchg
pop
jl
cli
jecxz
or
push
sub
mov
dec
daa
insb
mov
out
sarb
fcoms
cmpsb
insb
xor
sub
mov
or
push
jb
flds
mov
push
xchg
sbb
sub
out
movsb
push
mov
mov
arpl
fildl
and
pop
ficompl
inc
ja
lahf
scas
xchg
jb
test
ret
xchg
xor
mov
xchg
jl
pop
jle
xchg
and
and
pop
sbb
mov
jge
dec
sbb
adc
pop
enter
stos
jmp
cmpsl
idivb
push
cli
pop
inc
out
outsb
xchg
or
dec
rcl
add
mov
lea
push
sub
scas
dec
xchg
leave
int3
mov
inc
and
sub
out
out
fstpl
or
aas
inc
mov
xchg
jo
sub
and
mov
movsl
adc
nop
pushf
dec
mov
dec
ljmp
stos
out
push
jp
cmp
fstpt
loope
mov
int
fldt
fsubr
adc
and
in
aaa
loop
lea
sar
push
sub
shll
jo
outsl
pop
mov
xor
sbb
clc
inc
xchg
mov
adc
cwtl
hlt
dec
movsb
jmp
cld
push
repz
push
pop
lahf
out
dec
sbb
mov
pushl
sub
pop
add
inc
add
xlat
lock
addr16
inc
leave
pusha
sbb
adc
xchg
imul
and
mov
mov
cld
sti
lods
lcall
cld
pop
pop
sbb
xchg
cmp
dec
lret
pop
add
mov
mov
mov
mov
scas
or
test
xchg
fcomip
out
aas
jno
add
cmp
int3
mov
test
lret
pop
mov
dec
push
jae
or
call
ficoms
pop
xor
and
cmpsl
rolb
inc
cmp
pop
cld
mov
gs
repz
scas
adc
mov
push
inc
pop
das
mov
divl
or
movsl
push
push
sbb
xorb
pop
xor
repnz
lret
xor
and
pop
fs
jge
loop
sub
mov
cmp
enter
out
es
push
mov
loop
lahf
ljmp
xor
inc
mov
mov
lret
jge
lahf
loope
movsl
loope
xlat
mov
repz
es
ficoml
insl
pusha
adc
push
xchg
adc
aaa
fbld
gs
arpl
xor
pop
fimull
mov
adc
neg
push
lods
or
push
inc
psrld
scas
inc
lods
cmp
mov
shll
inc
js
mov
bound
loopne
mov
in
loop
and
loopne
clc
cmp
dec
jae
pop
movsl
fisttps
sti
mov
add
dec
mov
movsl
scas
jge
cwtl
ret
insb
aaa
sbb
das
testl
sbb
or
mov
xor
in
inc
mov
pop
add
fldt
ss
inc
pop
shll
jae
cmp
pop
cltd
mov
sbb
test
pop
cmp
inc
loop
push
push
cmp
adc
cld
sub
mov
andb
mov
mov
fists
inc
mov
and
inc
push
cmc
iret
dec
cmpl
xchg
pop
scas
push
movl
insl
shrl
jae
push
fnsave
mov
in
es
jmp
cwtl
gs
icebp
add
out
test
rep
push
xchg
lds
mov
adc
gs
mov
sub
cltd
ret
xor
adc
mov
dec
pop
push
and
xlat
xchg
loope
jp
xor
dec
pop
and
and
xor
stc
mov
inc
pusha
pop
and
push
pop
mov
and
stos
fldl
jns
jmp
and
pop
mov
mov
jmp
leave
mov
cmp
pop
sahf
mov
or
pushf
xchg
lock
adc
inc
test
xor
pop
adc
ljmp
adc
mov
jp
jo
rcr
daa
add
std
popf
iret
pop
insl
adc
sbb
std
dec
add
pusha
addb
cmpsl
out
mov
call
jns
les
inc
mov
aas
adc
loope
imul
xchg
int3
lret
cltd
mov
mov
jae
mov
dec
xchg
jmp
sbb
popa
xor
into
inc
push
xchg
outsb
hlt
not
push
jmp
fsubs
sahf
fwait
insl
cmp
adc
jb
jns,pn
push
arpl
pop
call
push
xor
mov
cmpsb
xor
movsb
adcb
ja
out
jne
cli
enter
jbe
push
mov
mov
mov
xchg
ja
mov
mov
shlb
je
push
dec
fwait
or
out
push
jb
cmpsl
mov
in
add
mov
mov
lret
fdivs
and
mov
jne
std
je
in
addr16
test
pop
test
mov
fistpll
xchg
xchg
outsl
sub
in
das
jg
cmp
push
aaa
imul
pusha
loopne
jmp
mov
mov
push
shrl
je
sar
out
popf
jns
mov
adc
mov
pusha
ret
mov
jbe
mov
ss
push
outsl
mov
mov
sbb
push
aad
mov
jbe
cli
adc
stos
lock
test
push
add
in
jbe
das
dec
popa
ss
inc
dec
xchg
daa
add
jmp
inc
add
sub
jecxz
cmc
popa
call
rcrl
vandps
loop
sahf
inc
mov
pusha
int
or
xchg
test
jns
mov
jecxz
in
insl
ret
fisubrl
inc
pop
faddl
mov
cwtl
test
sub
fsts
mov
push
jl
pushf
cs
or
push
adc
test
out
testl
sbb
inc
mov
adcb
arpl
jae
flds
inc
call
rolb
jne
mov
push
dec
aaa
mov
jp
cmp
popa
jg
inc
mov
push
call
das
or
imul
inc
popa
push
aaa
jnp
movsb
insb
enter
mov
leave
dec
dec
cmp
stos
and
cs
icebp
scas
sbb
dec
jle
mov
cs
adc
icebp
pop
xchg
les
jl
pop
or
xchg
dec
adc
inc
mov
mov
inc
shlb
pop
test
cmp
stc
fmuls
sbb
cltd
int3
rcrb
jg
adc
cmp
or
ret
shrb
xchg
shll
mov
xchg
xchg
push
cltd
jecxz
jge
inc
and
jo
cmp
and
xchg
push
adc
push
test
lret
cmp
mov
fcompl
dec
xlat
dec
xor
add
lcall
outsl
testl
loopne
jns
sub
int
scas
sub
stc
mov
xor
sub
enter
xor
and
rorl
add
inc
adc
out
sub
push
je
jno
mov
and
lret
and
mov
jmp
hlt
xchg
mov
in
mov
testl
test
aad
in
scas
mov
cmp
dec
jmp
and
pop
inc
roll
cmp
scas
loope
call
xor
mov
pop
and
fidivrl
loope
and
clc
mov
test
leave
fdivs
nop
jecxz
stc
lds
jle
add
or
jg
in
push
fucom
mov
das
shlb
bnd
in
imul
and
mov
pop
cmp
sbb
push
int
xor
popa
jnp
sbb
sarl
adc
shlb
inc
push
sub
mov
sub
xor
in
xchg
add
fistpll
daa
push
stos
push
add
xlat
jp
movsb
mov
xor
and
cmpb
adc
xchg
int
inc
push
inc
sub
test
in
fsubrl
add
fistps
xchg
dec
aad
fisubl
sub
mov
cltd
mov
jbe
push
jmp
std
xor
ret
inc
ljmp
push
xor
loop
sub
addr16
fwait
push
js
divl
jns
cmc
jae
ljmp
stc
mov
dec
push
sub
inc
or
ret
cmp
popa
or
mov
push
les
lea
scas
xor
dec
cmp
cld
mov
xlat
jp
insb
loopne
and
out
in
sbb
jae
cmp
push
enter
inc
sbb
leave
and
sub
jo
loopne
fwait
jbe
mov
in
imul
push
pop
dec
sbb
xor
aam
sub
stos
inc
orl
push
mov
mov
cli
xor
sub
jno
push
inc
dec
mov
dec
icebp
fsubrl
sbb
mov
jle
jns
ret
jp
aad
dec
loope
loop
or
jno
add
inc
outsb
idivb
cmpsb
fs
cmp
pcmpeqw
outsl
xchg
pop
add
loopne
cs
push
push
xchg
jno
add
push
push
pop
inc
filds
or
lods
jns
fsubrl
cmpl
cmp
push
addr16
clc
inc
xchg
jge
mov
cld
ret
cmp
mov
dec
fsubrl
inc
xchg
inc
loop
sub
je
mov
orb
xchg
daa
fwait
insl
daa
sar
xor
cmpsl
les
movsb
ret
push
into
stc
mov
cmp
xor
xchg
clc
mov
inc
mov
xchg
sbb
add
insb
pop
mov
or
dec
xchg
mov
into
je
aam
inc
adc
ret
add
js
lret
clc
test
ret
out
movsl
mov
movsl
sub
mov
inc
cwtl
add
jecxz
sarb
jle
enter
test
cld
orb
lds
push
sub
adc
iret
mov
aam
mov
mov
fwait
cmp
test
xchg
mov
addr16
cmpsl
jb
cmpsb
xchg
fimuls
std
testl
mov
mov
pop
rcrb
rclb
inc
leave
push
dec
xchg
inc
or
out
cld
sbb
inc
dec
jae
lcall
xor
aas
fwait
mov
mov
pusha
call
mov
pop
or
jno
inc
and
sbb
insl
push
sbb
mov
jl
sbbb
nop
aam
outsl
xchg
adc
shl
test
inc
xorb
xor
sub
je
sbb
mov
mov
mov
mull
daa
arpl
jae
in
mov
mov
testl
js
xor
stc
jmp
mov
nop
imul
push
dec
mov
pop
xlat
lcall
jns
sti
shlb
adc
and
stos
adc
mov
aad
sbb
aad
xchg
fs
jns
xchg
push
dec
sub
mov
subb
mov
jg
shll
lcall
imul
stos
cmp
movsb
mov
in
sub
insb
xchg
jno
call
lock
sub
sti
lods
sti
adc
mov
push
inc
dec
je
inc
add
pushf
xchg
lret
xor
adc
adc
imul
lret
add
out
dec
stos
les
and
sub
inc
jne
dec
dec
mov
add
int3
or
cmp
mov
pop
adc
popf
push
sub
and
and
in
test
or
xchg
movsl
inc
pop
repnz
pusha
mov
lret
cmp
cmpsb
jg
push
sub
and
mov
mov
sbb
cmp
outsl
pop
insl
push
nop
insb
dec
xchg
in
add
push
adc
cmpsb
aad
stos
ror
push
pusha
aas
movb
out
mov
push
into
lret
jbe
sti
add
hlt
popf
cs
dec
push
mov
sub
fisubl
mov
push
std
jecxz
lods
mov
ja
lret
mov
mov
or
stc
ret
je
mov
imul
xchg
inc
jno
sti
sub
jne
int3
pop
aaa
pop
push
loope
mov
inc
shll
andl
imul
xor
sub
out
add
in
int
mov
lahf
inc
negl
lret
mov
adc
jle
shrl
out
mov
int3
loop
enter
sub
rcrl
stos
in
lods
pushf
jmp
int
xchg
popw
push
cmp
mov
sahf
dec
mov
lds
xor
pop
sbb
pushf
aas
subl
shl
int
jo
lret
dec
cmp
add
outsl
insl
cmp
rorl
iret
int3
mov
jecxz
mov
mov
pop
mov
pop
cltd
addl
or
gs
mov
aas
imul
cwtl
mov
test
in
mov
push
sbb
cld
scas
idivl
sbb
adc
push
dec
lods
loopne
mov
scas
rolb
mov
out
adc
pop
test
pop
daa
xor
add
adc
fs
and
jmp
pop
fidivl
lret
sbb
lock
sub
inc
xchg
dec
aam
mov
movsl
add
scas
std
or
iret
pop
jp
fs
mov
mov
add
jecxz
lds
cli
lea
repnz
jmp
icebp
imul
mov
sbb
mov
jne
leave
sti
in
mov
sbb
movsl
int3
adc
int
adc
sbb
lds
int3
rcl
xchg
lret
mov
pusha
out
sbbb
xor
je
mov
call
jg
cmpsb
ja
mov
mov
js
test
mov
xor
arpl
and
clc
sub
aas
repnz
push
lods
repnz
xorb
sti
xor
pop
imul
push
inc
mov
rorl
mov
xor
and
jno
out
fiadds
testb
std
jae
das
sbb
enter
addr16
xchg
xorl
test
push
pop
jp
fistpl
jo
mov
cmc
xchg
sarw
xchg
pop
sub
add
icebp
dec
fwait
add
add
cmpsb
adc
dec
sar
fmul
inc
imul
mov
adc
xchg
popa
aam
pop
mov
nop
or
sbb
test
call
ret
lcall
out
fwait
cltd
test
and
cli
jge
inc
jbe
subb
lods
xor
in
pop
pop
cmp
mov
popf
out
jmp
cmp
mov
test
loope
fcompl
dec
push
sub
inc
test
xchg
fmuls
aas
jge
loop
sbbb
fdivs
out
xlat
jae
ja
xchg
cmc
push
sub
icebp
in
pop
out
push
jns
cmc
cmpsb
pushf
loope
andb
out
lods
mov
enter
jno
sbb
fsubr
mov
fstp
xchg
lods
inc
and
aaa
dec
je
lds
xchg
push
push
sbb
mov
mov
push
sbb
cmp
dec
inc
add
jnp
sbb
pusha
test
xchg
xchg
sbb
xor
jmp
xchg
pop
ret
adc
out
and
or
cmp
inc
add
jp
inc
je
sbb
push
pushf
data16
int
jmp
mov
push
push
fidivs
push
and
mov
sbb
push
add
test
push
mov
xor
insb
in
test
pop
lods
mov
icebp
ret
and
roll
test
call
cwtl
fdiv
bound
or
lret
inc
pushf
sbb
jl
jns
lock
jb
sbb
pop
or
pop
dec
or
sub
dec
ret
fcmovne
mov
push
and
mov
loop
mov
inc
daa
jo
or
sub
addb
test
mov
dec
repz
push
pop
jns
loope
int
jno
insl
and
mov
repz
lods
cmp
lahf
mov
call
mov
int3
lods
sbb
sub
push
jle
mov
sub
jns
pop
or
cli
in
pop
add
in
add
push
mov
test
mov
cmpsl
daa
std
push
mov
out
fsubrs
cmp
dec
or
mov
push
mov
xor
mov
sub
loop
fiadds
push
xor
or
test
adc
and
lock
aam
inc
ljmp
nop
fadds
xchg
in
lods
cmp
ljmp
inc
pusha
aam
jecxz
out
lcall
lret
cltd
inc
pusha
test
xchg
nop
shll
push
or
inc
ficoml
mov
inc
sbb
jns
mov
pop
push
mov
mov
add
cli
out
out
sti
out
dec
das
lcall
pop
xchg
ret
out
lcall
out
mov
ja
jno
or
mov
pop
add
mov
xchg
ja,pn
idivb
das
in
add
jecxz
xor
lock
jmp
leave
xor
add
sbb
ret
lahf
mov
dec
dec
loop
xor
and
bound
pop
or
push
mov
and
das
mov
lea
lock
xchg
imul
jg
js
imul
mov
jae
dec
rorl
mov
js
inc
nop
arpl
lret
clc
sbb
sti
dec
xchg
sbb
sub
mov
jecxz
cmp
adc
and
fnsave
imul
push
add
lods
dec
push
lea
pop
enter
arpl
adc
nop
inc
data16
inc
sbb
fstpl
mov
xchg
les
mov
stc
pop
sub
cwtl
divb
xchg
ds
pushf
push
lock
aam
xchg
mov
xor
icebp
xor
mov
cltd
pop
jmp
das
and
fs
cmp
dec
dec
aas
rcrb
fdivr
or
dec
test
push
lods
or
rorb
cmp
cmp
aam
out
sub
dec
cmp
in
movsl
pop
xor
xlat
xor
pop
push
out
xchg
adc
jl
jae
out
mov
and
or
xchg
nop
stos
sahf
imull
lods
push
js
inc
xor
lea
jnp
xor
orb
or
mov
mov
scas
sbb
push
rcl
sub
das
adc
cmp
inc
xor
mov
daa
mov
dec
and
or
adc
out
je
call
fsub
pop
xchg
repnz
jp
imul
jle
inc
iret
subl
mov
pop
add
fildl
cmp
cmp
test
or
loope
pop
mov
mov
imul
scas
push
icebp
and
rorl
pop
lock
mov
push
stc
iret
lock
push
xchg
and
imul
cmp
cli
lret
gs
or
icebp
pop
xchg
dec
addr16
and
cmp
aas
mov
divps
rorb
mov
pop
push
sbb
insl
mov
xorl
sbb
pop
xlat
in
fwait
and
std
test
xchg
das
sbb
jae
movsl
push
mov
in
lods
and
rcrl
int3
das
mov
mov
adc
fwait
imul
int
jmp
out
jo
aad
adc
popf
jnp
mov
aaa
or
dec
sub
dec
in
jle
adc
rclb
xchg
pushf
mov
out
out
and
mov
out
jae
mov
jmp
and
push
mov
daa
fstpl
dec
or
inc
xor
cmpl
mov
mov
shl
mov
mov
and
fstpl
mov
mov
ret
pop
lahf
or
test
pop
outsl
cmp
adc
dec
inc
adcb
mov
adc
out
dec
repnz
mov
in
fs
push
ss
aas
clc
fists
aam
dec
xor
mov
sub
mov
mov
jecxz
xor
inc
jle
or
add
mov
out
mov
sbb
sub
cwtl
fnstenv
mov
xchg
jb
pop
popf
test
mov
popl
nop
lods
ds
xchg
mov
scas
jge
jg
aam
rsm
fmuls
jns
nop
fs
shr
xchg
or
loopne
xchg
or
stc
mov
sbb
pushf
insb
push
ret
fwait
push
push
in
push
xchg
and
xchg
sub
js
idivl
or
dec
and
repz
pop
mov
orl
mov
mov
lods
and
pop
jns
add
mov
dec
fwait
dec
adc
pop
cmp
xor
mov
ss
paddusb
inc
fs
enter
sub
imul
sub
and
pop
movsl
mov
mov
dec
test
push
rsqrtps
inc
aam
add
push
lods
mov
jl
imul
frstor
sbb
in
out
popa
pop
ss
push
pop
mov
mov
jbe
addb
sub
int3
repnz
pop
jb
aad
mov
cmpsl
push
push
in
int3
xor
movsl
ret
inc
mov
paddusw
aam
movsl
test
repnz
imulb
pop
gs
test
mov
xor
dec
ficoms
mov
xorb
xchg
out
sbb
push
xor
dec
mov
fistl
and
in
stc
mov
or
ffreep
les
aam
in
sbb
mov
pop
cmp
or
pop
pop
sbb
sahf
jl
lret
jno
pop
dec
cmp
sbb
add
jmp
or
int3
jle
sub
insb
seta
lahf
xlat
cwtl
rolb
test
mov
add
sub
insb
jne
add
ds
xor
shr
iret
fisubs
inc
lea
mov
mov
lret
test
mov
push
outsl
and
add
push
jb
jb
leave
test
filds
xor
and
add
xchg
push
sub
clc
and
jecxz
std
mov
lret
jnp
mov
xchg
hlt
lods
sub
jno
shlb
xor
mov
je
fistps
sti
mov
mov
shlb
rcl
outsl
add
mov
jns
lock
push
xchg
fcompl
xchg
ljmp
hlt
cld
mov
sti
scas
inc
call
inc
adc
outsb
std
iret
and
jmp
arpl
pop
fsts
pop
ja
jns
xor
add
and
pop
shlb
sub
adc
pop
mov
add
in
and
cmp
or
call
pusha
mov
sub
addb
sub
data16
in
jg
lahf
nop
adc
pop
out
xchg
ficoms
push
xor
pop
mov
add
sub
roll
std
xchg
add
iret
data16
pop
jle
sbb
lea
in
pusha
jle
xchg
pop
stc
icebp
cs
jnp
mov
pusha
and
xchg
fstl
xor
mov
or
shlb
movsb
push
sub
adc
mov
jo
xlat
xchg
iret
cmp
inc
outsb
vmread
rolb
outsl
imul
adc
push
loope
int
and
or
jl
adc
pushf
xor
int3
dec
sub
jecxz
sbb
imul
mov
mov
xchg
repz
push
imul
pop
ss
and
je
add
pop
xchg
fisttpl
xor
add
push
inc
ret
stc
sbb
mov
into
frstor
xchg
pop
ja
int3
sar
sub
mov
pop
pop
jecxz
pusha
rcr
fnstcw
or
in
movsb
sahf
lea
push
inc
add
mov
scas
jbe
sub
or
pop
pop
push
sarb
dec
mov
xchg
adc
xor
or
in
push
icebp
mov
mov
mov
pop
int3
movb
call
sbb
jne
dec
js
cmc
cmpsb
fcom
mov
add
sbb
mov
into
jmp
or
in
das
inc
xlat
dec
lret
outsb
mov
lret
ljmp
fs
lcall
in
dec
add
add
and
addr16
inc
stos
or
mov
xchg
lods
xchg
pop
push
movsl
pop
call
stos
les
bound
jo
and
add
cmpsb
stos
xchg
xchg
lds
out
fdivp
and
inc
in
popa
adc
aam
mov
or
jnp
mov
inc
mov
imul
aam
repnz
cwtl
lods
push
inc
xor
inc
out
shl
mov
jl
loopne
insb
jno
enter
push
adc
rcl
rolb
shl
mov
stc
packuswb
mov
fmull
mov
add
cmp
scas
xor
call
popf
sbb
arpl
fistl
call
dec
mov
out
insb
imul
ljmp
fisubrl
cmp
jnp
mov
pop
or
pusha
or
jmp
rorb
sub
cs
stc
mov
lock
pop
sbb
repnz
in
add
imul
adc
hlt
insb
mov
fdivl
dec
mov
pmulhuw
mov
mov
dec
add
add
sbbl
adc
push
jecxz
std
xchg
fmulp
xchg
dec
cmp
and
xor
xlat
inc
je
or
ror
add
outsl
hlt
out
fmuls
or
and
jnp
adc
or
dec
sahf
lahf
xor
push
shll
or
dec
and
cltd
jecxz
sub
sub
push
ret
pushf
or
mov
loop
jle
jne
inc
mov
test
jecxz
and
leave
pop
shlb
dec
sub
and
out
sub
inc
push
aad
pop
in
jp
scas
mov
bound
ljmp
fistpll
or
popa
cmp
divb
fisubrs
push
inc
mov
and
popf
aam
cwtl
popa
sbb
jo
lods
fwait
push
pop
xchg
es
sbb
mov
xor
cmp
lock
fidivl
cmp
aaa
pop
lret
dec
push
cld
repnz
fdivs
cmp
pop
xor
mov
imul
outsl
sar
test
lcall
pop
jl
mov
jae
add
outsb
jae
adc
push
adc
sub
mov
aaa
xchg
and
xchg
out
xor
mov
sub
hlt
pop
int3
popa
imul
push
aas
das
enter
pop
and
and
push
sbb
xor
in
push
ds
cmc
int3
mov
mov
jno
faddl
addl
xchg
ss
bound
inc
pop
adcl
inc
jae
xchg
inc
lods
add
mov
sbb
movups
add
scas
push
pop
pop
cmpsl
dec
push
movsl
push
mov
ret
dec
test
dec
jmp
pushf
sub
lods
jl
imul
lock
push
imul
pop
sti
outsb
sub
and
add
pop
ds
ja
add
inc
and
cli
pop
lret
imul
push
mov
cmpb
mov
sub
imul
mov
mov
cmpsl
add
jbe
lock
sarl
fwait
inc
fldt
sti
pop
pop
shll
push
xchg
jb
mov
push
jb
out
insb
mov
jns
je
pop
dec
push
mov
cmp
inc
mov
cli
mov
rorl
cltd
jp
stc
lods
incb
sarb
rsqrtps
cwtl
mov
push
clc
loop
or
std
xchg
insb
shll
mov
push
push
dec
lods
ljmp
dec
adc
mov
in
into
mov
and
mov
loop
out
inc
rolb
inc
mulb
adc
xchg
jmp
pusha
sti
arpl
aaa
and
repz
inc
add
rcll
xchg
dec
pop
inc
lahf
xchg
rorl
mov
imul
les
push
xchg
out
pop
adc
or
lahf
fsts
mov
sbb
xchg
popa
pop
stc
push
mov
sub
punpcklbw
xchg
popf
sbb
je
dec
pop
mov
inc
iret
cmp
inc
into
hlt
aaa
fs
pushf
inc
int3
push
add
lds
les
mov
jns
cwtl
push
jg
cmpb
dec
xchg
xchg
clc
bound
add
sbb
mov
pop
cs
push
mov
sbb
cmp
test
xchg
lds
cmp
out
mov
cld
add
stos
xchg
aas
push
test
aas
cmp
dec
add
les
das
xor
mov
loope
shlb
mov
add
arpl
sarl
dec
or
mov
mov
xchg
std
sbb
fs
pop
xor
clc
jecxz
fdivl
mov
dec
xor
scas
jmp
xor
shl
outsb
adc
sbb
mov
imul
inc
sub
sbb
mov
mov
scas
mov
sti
push
mov
ljmp
sbb
mov
xchg
out
das
mov
mov
out
mov
push
loopne
inc
fs
arpl
lods
xor
out
sbb
push
add
mov
push
aas
cmpsl
cmp
push
mov
test
mov
add
pop
into
xchg
jecxz
push
jecxz
stc
enter
lea
in
js
imul
loop
arpl
inc
push
icebp
xlat
scas
push
jg
inc
push
sub
popf
pop
sbb
xchg
inc
stc
sbb
dec
out
and
push
jns
and
xchg
ss
sti
or
inc
ss
jp
jp
xor
or
push
pop
fisubs
scas
mov
push
outsb
insl
xchg
xchg
xor
in
dec
inc
inc
jnp
decl
sbb
sub
pop
mov
xchg
ficomps
lea
mov
inc
xchg
mov
dec
pop
out
push
dec
xor
mov
sub
cmpsl
shlb
fsubs
nop
insl
jno
sbb
jp
inc
jns
das
push
lcall
js
adc
rcrl
xchg
sbb
adc
mov
daa
inc
jnp
pop
and
inc
addb
xor
scas
push
sbb
mov
inc
cmpsb
lret
popf
push
pop
shl
aaa
or
xchg
mov
pop
out
jg
imul
or
mov
inc
and
push
daa
cltd
sub
pop
jp
xchg
mov
rolb
jp
repz
adc
inc
adc
xor
cltd
aad
je
imul
test
cld
fnstsw
add
sbb
xchg
push
inc
adcb
sub
imul
mov
fsub
mov
sub
jle
xchg
jbe
outsb
cmpsl
daa
add
rcll
xor
lods
mov
test
dec
xor
mov
in
xchg
mov
enter
shrl
sub
stc
pop
pop
jno
loopne
dec
add
arpl
mov
pop
test
mov
sarb
scas
sbb
sbb
cs
iret
jmp
sbb
push
add
jecxz
sbb
sub
xchg
enter
dec
insb
mov
call
adc
xor
sub
sarl
lea
push
mov
and
test
dec
cmc
mov
hlt
sub
adc
decb
jbe
xor
inc
movsl
add
push
out
adc
movsb
lods
ret
ficomps
fists
and
xor
inc
jp
xchg
mov
push
pop
lret
xor
loopne
gs
mov
fsts
outsl
push
inc
orl
sub
mov
fidivrl
mov
cmc
in
out
sar
loopne
out
jle
pop
movsl
pop
popf
rcrb
aaa
xchg
mov
insb
ret
lods
into
outsl
mov
scas
jne
call
hlt
pop
mov
mov
adc
dec
cld
xor
mov
insb
outsl
pop
and
popf
rorl
test
in
pop
fisubs
lret
ret
dec
add
inc
lock
pop
insl
loope
lods
xchg
loop
sbb
stos
dec
stos
fstpt
or
jg
loop
and
in
enter
or
dec
mov
mov
cltd
adc
pop
stos
dec
arpl
dec
fildll
roll
stc
inc
mov
xchg
mov
pop
mov
imul
sub
mov
es
pop
inc
out
and
sar
dec
fsubrp
enter
mov
and
cmp
push
xor
mov
pop
inc
pop
scas
pop
divl
pop
dec
pop
sahf
cmpsl
lcall
push
mov
rclb
xchg
mov
dec
in
insl
lcall
jp
or
inc
out
stos
and
into
aad
dec
mov
outsb
dec
mov
ret
inc
mov
mov
and
xchg
jbe
test
pusha
je
xchg
movsb
addr16
test
pop
cld
fbld
adc
mov
jne
fcmovnbe
pop
and
addr16
cmp
aaa
mov
stos
out
les
xor
adcl
lret
out
out
movsb
inc
call
xchg
cmpsl
add
inc
scas
arpl
popf
repz
or
xchg
jns
jmp
jl
push
mov
jg
mov
repz
pop
dec
daa
test
enter
scas
mov
pop
xchg
icebp
repz
xor
pop
pop
xchg
mov
dec
push
xchg
out
cmp
adc
cli
lds
shll
hlt
testl
jne
mov
and
sub
pop
scas
bound
fstl
test
jmp
pusha
popl
pop
aam
and
js
jbe
xor
mov
xor
inc
sbb
sti
adc
inc
mov
or
lcall
xchg
cmp
xor
jns
xchg
cmpsl
add
enter
cwtl
das
pop
pop
iret
std
inc
testl
xor
adc
ja
mov
xchg
mov
hlt
outsb
xchg
sbb
aaa
xchg
sub
xor
pushl
pop
adc
ds
mov
add
push
adc
xor
mov
or
das
jl
mov
or
inc
scas
and
pop
popf
stc
out
aad
sbb
pop
xchg
mov
add
sub
test
pop
mov
daa
push
loope
jcxz
sti
add
xor
xor
cmp
cmpsb
jge
and
sar
dec
xor
sbb
mov
sbb
add
arpl
rclb
js
fldl
shlb
inc
and
in
test
push
pop
fidivrl
lods
das
pop
pop
mov
stos
xchg
adc
mov
or
mov
mov
xor
leave
or
mov
rcrb
setnp
les
or
jno
and
jle
dec
test
popf
in
shlb
call
cwtl
sub
inc
xchg
cltd
je
decl
xchg
jge
shlb
adc
pop
push
js
lods
jne
mov
inc
jmp
mov
xchg
arpl
cmpsl
pop
out
add
jb
mov
mov
lods
js
xchg
sub
shll
sbb
fisttpll
ja
fdivr
and
sub
or
fidivrl
jb
leave
pusha
sub
add
fstps
mov
ds
insb
pop
jne
mov
aad
adc
int
jnp
dec
stos
fwait
adc
cmpsl
call
aam
les
dec
jo
or
mov
add
push
icebp
lds
rcrb
mov
cli
xchg
mov
inc
aad
in
and
xor
xor
icebp
movsl
add
pop
pushf
adc
outsl
sub
jno
add
mov
pusha
ds
mov
and
pop
js
movsl
mov
lcall
dec
add
sbbb
imul
dec
pop
push
int
push
push
adc
loope
jns
and
jnp
inc
jmp
dec
pop
fldt
ret
lods
lods
ja
lock
xor
jmp
nop
xchg
movsl
or
xor
jg
pop
mov
mov
cmpb
push
int3
mov
out
mov
and
je
pop
jnp
sub
pusha
scas
shll
shrb
pop
push
das
sti
jo
xchg
xorl
ds
cld
bound
imul
jg
lret
mov
aaa
inc
sbb
mov
xchg
out
or
jne
les
lock
arpl
inc
fcomps
xchg
pop
pop
pop
ret
leave
and
iret
adc
ljmp
cmpsl
cld
dec
mov
into
es
repnz
add
mov
mov
cmp
fsubl
inc
into
orl
lea
pop
movsl
sbb
xchg
leave
cld
lock
arpl
aaa
mov
insl
xlat
ljmp
push
dec
mov
ret
ret
cmp
ds
rcrb
stos
loopne
jecxz
or
xor
leave
sub
and
clc
aam
xor
xchg
les
stc
outsb
insl
adc
mov
inc
or
out
repnz
dec
dec
cld
insl
out
dec
cbtw
or
or
repnz
aaa
jb
mov
jne
cs
movsl
push
dec
mov
and
cmp
mov
ljmp
int
add
sarl
push
dec
dec
or
rolb
inc
dec
dec
xchg
add
aas
movsb
xchg
cmp
and
xchg
movsb
adc
mov
jbe
js
dec
insb
jmp
sub
sbb
mov
in
jno
mov
add
ljmp
mov
pop
xchg
out
mulb
cmp
into
pop
xchg
ljmp
add
xchg
dec
inc
lds
sub
fimuls
pop
in
movhlps
cwtl
add
pop
mov
mov
mov
enter
jbe
xchg
loopne
mov
lahf
bound
or
push
mov
outsb
in
jmp
mov
cmp
push
mov
push
inc
adc
sub
mov
popf
test
xchg
repnz
mov
sbb
push
cs
fstps
and
cmp
mov
and
xchg
jmp
rorb
shlb
mov
and
aam
lds
fimuls
pop
cmp
mov
push
ja
ret
stos
std
pop
adc
lods
fs
movsb
icebp
cld
lcall
xlat
xor
jbe
lcall
xor
mov
inc
jb
mov
cmpsb
fcompl
push
loopne,pn
jl
xchg
call
jnp
ret
dec
icebp
dec
cmp
push
stos
mov
lods
mov
pop
inc
mov
add
fmuls
xor
into
cmpsl
cmpb
mov
cld
popf
outsl
inc
lret
sub
mov
ljmp
mov
add
pop
xorl
outsb
fsts
jmp
adc
jne
out
cmp
cmpsb
pop
shr
dec
push
fs
jbe
xor
fwait
inc
insb
mov
lods
xor
loop
push
imul
jl
mov
gs
inc
and
sbb
and
pop
les
out
in
pop
addl
dec
mov
and
xorb
aaa
scas
cmp
sbb
repnz
arpl
nop
jo
ret
rcl
and
inc
dec
and
sahf
rorb
jmp
mov
add
jae
scas
hlt
loope
lret
and
stc
cmp
push
or
jno
cmp
daa
mov
fcmovu
xchg
test
movsb
fdivl
cmp
sbbb
jns
repnz
push
jno
lahf
test
jl
in
roll
mov
test
divb
loop
cmp
enter
jns
lock
lcall
inc
mov
int3
insb
xlat
icebp
icebp
ret
mov
push
cmpl
and
js
xchg
mov
ds
cmpsb
sub
shl
orb
mov
divb
pop
ret
rorb
sub
jne
mov
les
cmp
xor
sub
jle
ja
jp
and
std
dec
out
lcall
subl
jne
sub
icebp
add
push
imul
jp
push
sti
orb
mov
mov
or
add
pop
mov
dec
sub
inc
push
mov
push
hlt
add
mov
fisubrs
inc
xchg
je
scas
hlt
inc
xchg
mov
xchg
push
mov
loope
fisubs
sar
or
leave
int3
call
dec
hlt
mov
mov
mov
push
test
stos
shll
das
mov
in
pop
mov
add
fnstenv
cmp
and
adc
mov
sbb
adc
iret
inc
notl
loopne
mov
loop
push
je
sub
out
loope
cmp
or
inc
out
sbb
lret
jecxz
lea
inc
adc
in
add
add
xchg
adc
cmpsl
or
and
pop
mov
out
sub
xchg
cmp
daa
fstp
or
jne
popf
fiadds
pop
loop
and
add
cmp
jg
lcall
add
outsl
adc
xchg
in
sub
adc
popa
out
ret
roll
pop
push
and
mov
outsl
hlt
sahf
or
add
enter
fstpt
jle
mov
sub
mul
jns
push
hlt
jne
mov
adc
insb
int3
bound
in
daa
jo
lret
orb
lret
xor
imull
inc
std
cmpsl
and
push
pop
movsl
adc
orb
mov
cmp
mov
movsl
xor
jbe
fcompl
sbb
push
mov
ss
fsubl
lods
add
and
adc
push
mov
sbb
push
jbe
lahf
insl
adc
shr
push
ficoms
dec
flds
data16
ds
stos
test
loopne
or
stc
dec
or
mov
js
jge
xchg
andb
pushf
lock
repnz
test
lret
cmp
xor
pop
jle
dec
inc
jbe
ret
loop
sub
cmp
lods
lret
movl
jns
mov
stos
pop
insb
and
cmp
test
sub
jb
adc
dec
mov
mov
cmp
fists
mov
lahf
movsb
inc
std
push
outsl
cmp
shll
pop
inc
cmp
push
mov
jmp
pop
negl
lret
pop
fwait
cld
in
jnp
sbb
mov
out
orb
sub
call
xchg
xorl
mov
aam
jecxz
fyl2x
or
pop
jb
clc
adc
sahf
shl
movsb
mov
adc
aad
mov
call
dec
pushl
sbb
or
enter
xchg
or
sub
icebp
daa
cmpsb
loop
out
sbb
js
mov
push
xlat
inc
push
jmp
dec
orb
mov
fisubrl
dec
dec
jne
cmpsl
add
fmull
mov
aas
push
int3
iret
mov
xor
pushf
and
rcr
sbbb
outsl
dec
inc
pushf
mov
jmp
testl
jae
subl
mov
das
aam
into
xchg
cmp
xchg
mov
in
push
aad
jo
dec
xor
sub
mov
leave
xor
xor
mov
sbb
adc
mov
sbb
or
mov
cmc
lock
sbb
xor
ror
repnz
sub
out
add
icebp
in
xor
lret
adc
jecxz
icebp
loope
or
push
dec
mov
mov
sub
or
jmp
pop
movsl
bswap
xchg
mov
cmp
lds
jb
jmp
xchg
ja
dec
fcmovnu
sub
rol
pop
xor
std
repnz
adc
dec
shll
je
bound
or
in
jmp
into
xchg
jb
adc
dec
fwait
icebp
jae
inc
fdivl
sub
popa
pusha
rcrb
pop
pushf
cmp
fldcw
enter
xor
add
or
outsb
aad
das
sbb
push
mov
or
sub
in
xchg
stos
orl
push
cld
imul
sub
ja
pop
ret
les
out
stos
sbb
ret
dec
loopne
in
dec
pop
out
loopne
shl
and
loop
and
jmp
pop
sbbl
pusha
test
sub
ss
jb
mov
insb
pop
and
xchg
mov
inc
into
xchg
scas
std
test
cmp
cltd
jge
outsb
jo
add
enter
mov
jl
mov
mov
jge
mov
or
xchg
stos
sub
arpl
sarl
adc
dec
ja
cmpsl
sar
in
adc
pusha
add
jg
inc
test
hlt
fmul
sub
sti
fiadds
mov
rcrl
mov
insl
jmp
call
inc
jmp
aad
lods
pop
sti
inc
or
lds
in
mov
jbe
or
mov
mov
mov
pushf
mov
mov
fsubrl
add
dec
sub
push
mov
mov
movsl
push
jecxz
inc
mov
and
js
jns,pt
into
mov
push
fistl
push
pop
sub
jl
bound
pop
adc
rep
out
cmp
xchg
adc
and
mov
mov
pop
arpl
cmpsl
out
outsl
idiv
xchg
mov
fucompp
xor
cmpsb
dec
fldl
pop
jl
cmp
fbld
push
jbe
push
jle
xchg
test
cmp
adc
mov
std
mov
push
test
cmp
jg
xor
fcoml
movsb
push
or
sub
test
add
dec
jl
inc
imull
call
lret
add
sti
or
imul
sub
sub
dec
mov
roll
xchg
enter
fwait
in
enter
ds
subl
fdivrs
stos
rcrb
lods
in
dec
push
push
enter
inc
xor
or
mov
sub
inc
push
data16
jno
sbb
push
flds
inc
jno
movsb
cld
shll
jns
or
icebp
cmp
dec
aad
test
sbb
jae
jge
xchg
push
sbb
int3
shll
roll
daa
in
dec
mov
xor
sahf
and
xor
iret
jnp
cvtps2pi
addb
xor
push
outsl
mov
repz
outsl
mov
outsl
iret
xchg
cs
out
xchg
mov
pop
std
mov
mov
dec
scas
clc
out
std
xor
jno
mov
je
pushfw
or
pop
test
cmp
fsubrl
mov
out
cwtl
push
xchg
dec
aad
in
and
clc
push
outsb
mov
data16
insb
xor
push
push
repnz
lahf
dec
sub
pop
daa
push
mov
ss
mov
add
ljmp
jle
stc
inc
lahf
imul
jno
ja
shrb
mov
das
outsl
sbb
sarb
cmp
xchg
jl
in
cmpsb
test
adc
pop
in
xchg
adc
out
aaa
cld
pop
int
push
cmp
std
ds
fcomps
pop
mov
bound
mov
pop
insl
push
inc
pop
js
idivb
data16
lcall
data16
xor
subb
pop
scas
mov
pop
int
jecxz
and
test
add
imul
mov
in
sbb
pop
popa
sbb
je
imul
sbbl
jle
cmpsl
in
xor
dec
push
lcall
lret
pop
outsl
lahf
mov
or
xchg
jno
lds
xor
lock
cmova
or
fwait
notw
int3
loope
testb
cmp
movsl
mov
fistpl
lods
arpl
or
scas
rcrl
pusha
movsl
dec
inc
jb
or
mov
andb
jp
popa
pop
rol
push
jecxz
dec
dec
fs
dec
jle
xorl
or
addr16
add
jo
inc
jg
std
out
adc
xchg
ret
sub
in
arpl
xlat
ja
xchg
ljmp
lock
test
mov
arpl
adc
cs
stos
inc
pop
push
sbb
mov
jno
and
nop
inc
mov
push
mov
sbb
rcll
push
xor
mov
fiadds
add
ljmp
inc
fstps
sti
cmp
int3
jae
in
cli
mov
add
mov
push
loopne
push
loopne
xchg
ds
mov
fadds
pop
dec
inc
sahf
loope
cld
and
movsb
out
aaa
into
daa
jno
pop
inc
and
sub
imul
pop
out
sarl
jmp
lds
inc
xlat
mov
inc
mov
jge
sub
shll
sbb
aad
mov
notb
int3
inc
scas
adc
pushf
call
js
push
inc
push
dec
pop
std
jle
in
adc
and
pushl
mov
dec
adc
sub
aad
xchg
inc
xchg
push
nop
add
mov
pop
ret
add
loop
lret
inc
push
push
push
jno
pop
sarb
scas
adcl
pop
or
inc
sbb
fisubrs
jmp
test
cmp
inc
clc
lods
xchg
add
into
popa
test
or
xchg
push
pop
or
out
mov
js
xchg
sbb
sub
jle
cmp
xchg
sbb
outsl
and
int
sub
push
and
jmp
stos
dec
jg
dec
dec
loop
xchg
in
push
xor
sti
pop
cmpsb
jp
scas
clc
roll
lock
orl
int3
jno
adc
iret
jle
push
xchg
xor
adc
xor
inc
js
jb
sbb
mov
mov
jle
orb
out
cmp
imul
clc
mov
xchg
xor
jbe
stos
pop
adc
call
in
fistpl
ljmp
lock
scas
push
or
jl
icebp
mov
and
js
sub
stos
les
and
lock
xchg
xchg
adc
or
push
sbb
add
mov
push
cmp
push
push
adc
out
loope
imul
mov
inc
imul
and
mov
xchg
adc
inc
dec
into
movsl
not
push
ficoml
jns
daa
imul
dec
fwait
inc
mov
inc
adc
decb
mov
add
mov
hlt
sub
cmp
xchg
sub
das
out
stos
mov
jecxz
pop
addr16
adc
mov
jge
or
adc
sbb
jmp
hlt
cltd
idivb
ficomps
idivl
clc
inc
ja
push
das
ja
inc
in
push
lods
inc
and
push
je
addl
and
pusha
fisttpll
pusha
dec
cld
jmp
sbb
fmul
cmp
stc
fnstenv
pop
push
push
dec
mov
cmp
mov
or
add
rcrl
pusha
nop
jae
add
jnp
sbb
or
jl
and
or
jae
clc
imul
lock
bound
sbb
ret
out
mov
les
insb
repnz
xor
out
rcl
into
xorl
cltd
fidivl
out
jns
enter
aad
icebp
incb
jl
std
test
sub
int3
mov
jge
ss
xorb
loope
iret
je
dec
nop
sbb
mov
aaa
scas
xchg
pop
popf
nop
stc
xor
scas
fwait
mov
mov
push
in
stos
int3
mov
lock
cmp
push
test
mov
mov
call
fldenv
cmpsl
push
ja
stos
ds
stos
mov
scas
aas
lret
push
outsl
xchg
inc
sbb
mov
adc
xlat
pusha
push
daa
pop
adc
jnp
lea
jg
out
or
test
bnd
mov
cmp
xor
dec
insl
pop
shll
dec
loopne
scas
cmpsl
nop
xchg
aad
push
dec
lahf
test
mov
jb
jle
shll
jge
mov
imul
and
jle
xchg
pop
mov
out
push
push
out
mov
cmp
jnp
jp
rcrl
mov
stc
mov
cmc
adc
rclb
out
dec
or
add
xchg
in
in
adc
adc
lret
jmp
dec
filds
pusha
cmp
iret
mov
cmp
push
scas
sbb
jns
ficomps
fsubr
lret
dec
stc
mov
xor
std
into
repnz
and
negl
jecxz
inc
xchg
xchg
iret
jno
xor
into
mov
pop
aam
dec
jo
dec
jmp
add
insl
inc
clc
sbb
rcrl
dec
bound
mov
or
mov
jne
push
cmp
mov
dec
mov
xchg
movsl
cltd
xchg
sbb
lea
es
iret
pop
adc
or
cwtl
xchg
leave
pop
sbb
inc
cmp
mov
sbb
movsb
add
lods
outsb
jb
mov
hlt
mov
jae
sbb
inc
jo
push
mov
push
cltd
mov
mov
jge
pop
mov
adc
int
mov
std
push
sbb
mov
add
jmp
arpl
add
mov
bound
cli
rcrl
movb
dec
clc
cmp
sbb
ja
xchg
rcrl
fsub
jmp
fxch
arpl
int3
gs
dec
js
mov
ljmp
call
jne
ljmp
and
lods
js
xor
sbb
jno
std
sub
scas
lret
outsl
sti
fstpl
inc
in
pop
sub
aaa
jl
mov
loope
pushl
jp
movsl
int3
adc
cmp
ficoms
inc
lods
je
xchg
jns
push
sbb
mov
adc
or
lret
and
lahf
lods
shl
sarl
cmp
inc
sub
xchg
or
xor
cmp
xor
and
xchg
rolb
xchg
mov
gs
inc
xlat
fwait
outsl
adc
xor
insl
es
xchg
cli
sbb
les
loope
ss
aas
jecxz
jge
shl
testb
adc
xchg
sub
mov
cs
in
bound
push
adc
je
cmpsb
mov
insl
push
dec
push
xchg
gs
sbb
sub
cli
xchg
cmc
adc
pop
push
pop
loopne
mov
push
cmp
test
pusha
das
jb
inc
or
inc
das
movsb
mov
push
movsl
rorl
leave
pop
pop
js
arpl
js
fwait
daa
sbb
adc
sub
icebp
decb
cmp
rcr
mov
data16
sub
shl
decb
repz
fldcw
mov
fldl
rorl
push
push
enter
enter
sbb
ljmp
ja
push
out
or
das
stos
xchg
mov
inc
into
into
les
inc
inc
inc
jno
push
loop
nop
xor
pop
dec
jnp
mov
loop
sub
dec
aad
cmpb
push
xchg
in
fildl
repz
mov
sbbl
call
add
pop
push
fcmove
pusha
add
and
out
mov
jg
dec
movsb
call
movb
pop
and
push
push
jbe
pop
dec
cs
outsb
mov
mov
and
add
dec
popf
jnp
pop
xchg
push
incl
xor
mov
add
in
in
push
cmp
gs
mov
jg
repz
cld
sbb
cmp
roll
sbb
int3
jb
pop
aad
mov
inc
mov
jg
dec
jl
jp
pushf
fcmovnb
or
in
stos
sbb
aam
es
dec
adc
into
cmpsb
mov
lock
fstps
dec
mov
jae
mov
sbb
cmpsb
dec
in
adc
je
out
jns
in
jle
jne
test
jl
fisttpl
icebp
fsub
cmp
bound
fisubs
and
sbb
or
int3
pop
lock
in
cmpsb
sub
ss
sbb
jecxz
scas
mov
jae
orl
aaa
insb
xchg
in
jecxz
je
xchg
adc
test
dec
adc
mov
bound
mov
push
mov
and
fmull
aam
dec
cmc
fwait
pop
xor
repnz
lret
mov
cmc
cmp
push
xchg
mov
enter
hlt
and
cmp
mov
and
xchg
push
lea
mov
push
stc
scas
adc
or
imul
dec
mov
cmc
xchg
inc
not
sahf
inc
or
dec
mov
in
inc
lret
aaa
jae
daa
sub
sbb
mov
fs
mov
inc
xor
hlt
xor
lods
pop
jns
ljmp
jge
jae
inc
sbb
xchg
out
cltd
mov
push
inc
jb
mov
aas
bound
lcall
les
adc
call
scas
xor
lea
push
scas
jmp
je
cmp
push
xchg
push
pop
sub
inc
push
mov
int
icebp
fidivrs
fidivs
mov
adc
cmp
xor
cltd
popf
lock
mov
pusha
xchg
lcall
leave
pusha
in
cwtl
push
fsub
fs
inc
dec
lcall
jge
fidivrs
daa
rclb
ds
lods
xor
jp
repnz
sbb
mov
pop
or
mov
outsb
js
xlat
imul
cmpsb
lock
sahf
lods
call
cmc
or
push
sbb
jb
out
sbb
and
outsb
shl
les
and
push
sbb
in
clc
shrb
lret
loop
sub
in
lret
xorb
mov
ret
nop
mov
inc
test
arpl
pop
ljmp
xor
xor
sub
das
add
mov
mov
pop
stos
cltd
xlat
inc
into
lock
jbe
fs
popa
push
dec
lret
loop
aad
iret
incl
pop
enter
jle
xor
dec
adc
mov
bound
xor
jb
mov
adc
jae
mov
add
jmp
cmp
push
iret
jnp
in
jno
ds
sub
imull
sbb
fistpl
add
sub
jge
imul
movzwl
dec
lea
idivl
xchg
mov
fwait
getsec
add
pop
push
dec
pusha
sbb
test
push
lret
cltd
inc
je
in
sbb
negl
lahf
cld
cs
or
xlat
lret
mov
dec
icebp
xor
adc
popa
repnz
and
imul
dec
xchg
scas
mov
loope
test
mov
mov
xchg
adc
nop
or
fisubs
or
jne
inc
lods
ds
gs
add
icebp
mulb
push
cwtl
pop
adc
and
pop
adc
xor
add
xor
mov
or
mov
data16
jae
jecxz
push
xor
jmp
dec
iret
mov
test
sbb
ret
out
add
mov
lcall
or
dec
adc
fidivrs
aas
lods
adc
hlt
xchg
cld
jo
sub
push
sbb
js
xor
push
jle
sti
and
mov
in
xchg
daa
repnz
or
push
push
mov
adc
xchg
loopne
or
repnz
inc
idivl
fisttps
repz
jbe
jecxz
dec
in
into
jnp
add
push
test
mov
pop
out
cmp
clc
or
sti
xchg
cmp
pop
imul
jmp
inc
shll
push
cli
sub
cs
ss
out
sub
cli
movsl
test
push
mov
and
adc
and
push
loopne
push
push
ds
inc
lret
mov
mov
cmp
pop
jmp
dec
pop
add
outsb
adc
aam
pusha
pop
inc
and
ss
leave
mov
aas
inc
jl
mov
cwtl
sbb
fisubrl
andps
gs
xlat
outsb
mov
xchg
sub
pop
imull
dec
jno
cmp
cltd
mov
ds
lods
jg
vcvtsi2ssl
enter
jg
xchg
stos
ljmp
int
push
or
js
add
das
mov
orb
pushl
js
shlb
dec
adcl
mov
js
addb
pop
fcompl
iret
jle
ds
mov
mov
out
fdivrp
pop
fildl
and
xchg
add
aad
inc
gs
xor
aad
out
cld
jl
mov
mov
dec
mov
jae
sti
ljmp
jns
adc
add
cs
pop
mov
cmp
sub
stos
pop
daa
dec
cwtl
dec
subb
popf
insb
out
call
mov
aaa
lahf
xchg
int
mov
or
scas
add
in
add
jb
into
iret
push
pop
cmc
dec
pop
push
and
in
push
ja
mov
sahf
cmp
sar
neg
pop
stos
movsl
jo
pusha
orl
rcr
dec
mov
sti
sarb
or
or
stc
pusha
adc
mov
jge
jmp
mov
mov
test
add
dec
mov
push
inc
in
aam
aad
cmpsb
push
sti
arpl
xchg
and
xchg
or
push
in
mov
std
and
sbb
inc
imul
and
cmp
or
rcrb
ss
nop
dec
jle
pusha
hlt
lods
dec
sti
call
popf
les
sub
int3
jl
push
cmp
sbb
mov
decb
push
out
je
daa
push
inc
inc
out
stos
sbb
call
push
mov
sbb
inc
loope
addr16
jle
add
outsb
xor
jae
je
mul
test
inc
imul
mov
aam
pop
pop
adc
jl
push
pop
and
js
sbb
mov
sahf
jge
imul
pop
or
pop
jne
imul
or
dec
and
std
push
and
gs
repnz
inc
mov
ja
orl
pop
sbb
cmpsb
xor
ret
nop
sahf
push
jmp
test
stc
adc
ss
jmp
dec
pop
push
xchg
inc
unpcklps
hlt
aaa
fistps
outsl
es
outsb
cmpsb
pop
mov
aas
sbb
push
cmc
je
in
push
jne
jae
or
lcall
test
jge
fisubrs
jo
test
inc
daa
ja
movsl
ljmp
mov
jns
push
xor
lret
repz
test
enter
test
arpl
mov
insb
fists
lcall
cmp
lahf
inc
xor
jbe
cld
pop
aas
test
imul
xor
mov
pop
jg
jmp
and
nop
jl
dec
mov
addb
cmpsl
and
ljmp
daa
mov
popa
pop
mov
sti
mov
add
ror
cmc
test
xchg
pop
or
in
xor
cmp
ljmp
daa
sbb
cli
cmp
jp
xor
and
mov
aas
rcl
xor
lahf
add
xchg
inc
insb
test
pop
subb
jbe
in
ficompl
in
xchg
cmp
inc
shl
or
xor
and
adc
pop
xor
out
mov
scas
sub
pop
pop
shlb
cmp
adc
mov
and
pop
jg
xor
sub
mov
inc
lods
pop
sbb
adc
rcl
lret
or
dec
mov
cmp
or
jno
push
mov
xor
push
pop
jecxz
dec
jecxz
pcmpgtb
jge
subl
push
cmp
pop
in
jae
loope
clc
lret
aaa
cli
out
int3
out
jmp
inc
add
jp
mov
test
cmp
mov
sbb
adc
xor
aaa
xor
ljmp
shrb
add
aad
jp
cmp
test
add
push
or
jnp
xchg
insl
add
mov
sub
xor
xchg
jnp
imul
sbb
sbb
sub
movsb
out
add
insb
stos
out
lods
and
adc
int
pop
and
push
pushf
cmpsb
out
push
xorl
lods
scas
scas
cld
iret
and
jb
lret
sahf
add
outsl
mov
ret
sub
mov
add
aam
push
or
dec
or
jecxz
sbb
inc
cmpsl
and
movsb
dec
xchg
sub
push
addr16
loope
push
cmp
dec
mov
sub
outsl
or
or
sarl
cmp
mov
mov
test
jecxz
cmc
enter
mov
and
push
push
cwtl
mov
mov
mov
jecxz
lods
dec
into
insb
xchg
int3
imul
clc
xchg
ret
xlat
addr16
inc
gs
pop
sbb
jmp
ljmp
lret
add
jmp
lea
test
test
sbb
add
out
fwait
aad
imul
dec
sbb
push
xchg
mov
add
in
movsb
push
into
mov
and
pop
xor
mov
mov
nop
xlat
aam
jo
ja
cs
or
aas
push
std
push
jae
outsl
mov
pop
sahf
lret
inc
mov
cmp
pop
jge
and
mov
cwtl
or
in
filds
jmp
xor
inc
xchg
mov
loope
lods
add
loope
mov
pop
mov
cmp
mov
pop
mov
inc
test
sub
push
mov
in
push
dec
test
nop
xchg
mov
insb
in
test
mov
pop
mov
fistpl
jnp
rcr
jp
test
loopne
mov
mov
cwtl
pop
loop
cmp
shll
outsl
test
jnp
jns
in
adc
mov
mov
outsb
cmp
xor
or
jmp
iret
into
pop
jno
sub
pop
arpl
mov
adc
mov
sub
lods
or
jno
aam
sub
jo
ss
repz
int
dec
inc
jmp
icebp
mov
sbb
add
outsb
cmpl
loopne
out
sub
lea
rorl
xchg
test
fdivl
andl
add
in
cmpsb
pop
xlat
mov
cmpsb
movsb
fadds
mov
aam
popf
daa
cs
sahf
mov
sub
push
cmp
add
xor
dec
cmpsl
fdiv
and
inc
mov
xchg
mov
jnp
addb
ss
inc
xor
nop
jae
and
cltd
js
jmp
dec
sbb
push
mov
mov
loopne
cmp
jmp
hlt
push
adc
pushf
lea
test
jmp
and
jmp
pop
lcall
fs
inc
push
xchg
rorb
imul
sbb
cmpsl
ss
stos
dec
ret
xchg
dec
fwait
bound
or
mov
cmp
aad
push
jbe
dec
mov
cmpb
aas
mov
data16
xchg
rolb
sahf
sbb
xorl
ja
and
sahf
ss
push
test
mov
cmp
sub
xchg
mov
cmp
sbb
mov
inc
sbb
sbb
cmp
mov
pop
rcrl
incb
mov
or
leave
adc
push
mov
ss
jno
jp
mov
cwtl
je
push
lret
addb
pop
jnp
push
leave
adc
pusha
insl
fstpt
xchg
repnz
int
cmp
lahf
movsb
les
call
pop
mov
sbb
inc
pop
sbb
pop
mov
add
xor
int3
jno
xor
orb
jmp
mov
scas
jae
xor
in
xlat
ret
pop
shl
jmp
lods
out
fists
fsts
dec
imul
push
dec
scas
sub
dec
cmpb
xchg
enter
push
push
std
lret
mov
in
movl
test
clc
jno
lret
push
ds
xchg
shl
shlb
js
fldcw
jno
mov
push
movsl
xchg
aam
orb
test
mov
mov
andb
in
mov
cmpsl
cmp
pop
repnz
fdivl
push
test
jp
mov
cmp
cwtl
or
aas
repz
in
sarb
mov
sub
loope
test
adc
sbb
jg
scas
mov
mov
aaa
inc
loop
out
mov
hlt
rclb
and
dec
dec
xor
xchg
sub
or
test
mov
dec
mov
push
xchg
mov
loopne
imul
xchg
xlat
popa
fs
jmp
pop
push
orb
icebp
jo
pop
jmp
add
aad
cmp
fisttps
aaa
in
xchg
xor
mov
je
pop
inc
imul
js
stos
xor
push
or
mov
sbb
pop
mov
xchg
dec
sti
sti
sbb
push
mov
sbb
je
into
xchg
and
rcr
xchg
jb
stos
mov
pop
stc
scas
nop
popf
lret
dec
pop
rol
xor
push
pusha
jb
daa
out
cmp
pushl
inc
fidivs
xor
addr16
push
mov
mov
xor
mov
inc
cmp
and
add
shlb
dec
test
sub
push
jnp
or
xchg
push
or
icebp
mov
push
arpl
sub
add
pop
sbb
jns
nop
fists
movsl
aam
popa
imul
clc
or
sub
sbb
lret
sbb
mov
fldl
mov
push
leave
mov
xchg
fldt
js
xor
inc
test
push
bound
mov
fdivrl
adc
xchg
pushf
mov
cmpb
add
push
pop
pop
ficoms
add
add
inc
pop
clc
cmp
leave
mov
cmp
pop
aam
adc
aas
imul
mov
sbb
imul
mov
test
mov
outsl
pop
ret
fbld
or
cwtl
das
xor
rclb
ss
jge
add
add
inc
bt
data16
push
scas
insl
mov
fwait
sti
push
xchg
xor
mov
jmp
mov
lahf
popf
jae
and
je
inc
sarb
adc
fdivrs
cmpsl
sbb
adc
int
mov
imul
mov
filds
into
mov
lahf
pop
mov
mov
jmp
jle
mov
xchg
adc
or
mov
sarb
addl
xchg
or
cwtl
mov
int
jbe
pop
inc
or
idivl
cmp
filds
mov
pop
in
fmull
pop
bnd
clc
cmc
jge
jns
dec
sub
pop
mov
pop
ss
fwait
lds
insl
in
fstpt
dec
push
cmpsb
repz
cmp
addr16
mov
ss
jge
fnstsw
xchg
push
fistpl
sahf
mov
mov
mov
push
shlb
inc
or
movsb
inc
mov
xor
sti
ror
iret
adc
add
sbb
mov
jmp
outsl
or
pop
or
inc
out
push
arpl
xor
mov
adc
add
leave
push
imulb
rorl
xchg
cmpb
mov
sbb
adc
popa
add
test
lods
dec
jmp
sti
divb
sub
cmp
stos
xor
scas
rcll
lahf
lds
cwtl
jno
scas
mov
hlt
cld
fimull
jo
iret
pop
and
addr16
mov
jecxz
mov
fcmove
enter
jg
aam
cli
pop
js
mulb
es
mov
mov
push
sub
dec
sub
dec
mov
and
fsubl
repz
xchg
add
shrb
insl
cmpsl
add
jge
or
pusha
mov
xchg
leave
fs
test
repnz
jno
int3
jno
push
pop
les
shl
popf
ret
cmpb
cli
aam
sub
aam
dec
push
adc
mov
clc
pop
dec
jp
shll
les
dec
leave
xor
pop
outsl
push
xlat
cmp
pop
js
jno
aam
push
mov
xor
cltd
jp
pushf
clc
xchg
sub
sbb
and
addr16
stos
int3
pushf
xor
je
mov
xchg
leave
subb
outsb
jp
push
or
outsl
mov
loope
fimull
lret
cs
jb
inc
mov
repnz
mov
lret
daa
cmpsl
or
lods
jmp
cmp
mov
movsl
loop
sub
pop
pop
lock
cmpsb
js
stc
scas
arpl
mov
loopne
pusha
lds
fsubr
add
xchg
scas
stos
das
mov
aad
popf
out
cltd
fs
jmp
mov
cmpsl
lock
icebp
adc
loopne
or
lods
rorb
push
bound
push
xor
scas
test
aam
pushf
adc
scas
inc
daa
push
loopne
sahf
or
in
je
add
sub
stos
add
enter
daa
and
imul
jmp
cmp
mov
xchg
test
adc
mov
mov
jl
inc
sub
sar
loope
test
movsb
or
js
add
sub
mov
aad
daa
mov
cltd
popf
and
mov
ret
mov
jbe
mov
pop
cmpsb
add
and
add
and
lret
cmp
jnp
dec
out
data16
leave
ffree
mov
fwait
test
ret
dec
xchg
dec
cmpsl
dec
loope
sbb
fs
and
sbb
xchg
cwtl
dec
sbb
aaa
jbe
std
xchg
idivl
mov
mov
aas
dec
cmc
mov
cld
ljmp
cwtl
xor
into
popa
or
adc
sub
xor
inc
xchg
add
dec
out
out
sub
fildl
cwtl
push
add
sub
pop
cld
scas
mov
dec
int
enter
into
lret
push
xchg
mov
dec
pop
icebp
js
insl
or
aas
fwait
sbb
mov
hlt
nop
repz
gs
sbb
xchg
vshufps
and
add
mov
daa
mov
inc
pop
push
inc
adc
jecxz
movsb
mov
nop
pop
shll
xchg
out
std
hlt
jecxz
loop
rcrb
call
mov
jle
mov
pop
add
jns
insb
test
inc
loopne
std
lahf
out
fs
and
dec
cmp
xor
hlt
lret
scas
arpl
jecxz
and
scas
sub
mov
lret
out
add
pop
or
dec
in
add
inc
push
add
rorl
aas
and
test
lcall
stc
and
stos
inc
fwait
mov
scas
test
lahf
add
mov
iret
dec
push
or
jb
push
cmc
lods
pusha
jecxz
leave
loope
push
inc
movsl
sbb
xchg
xchg
std
or
leave
in
addl
loope
mov
cltd
notb
sbb
cmp
test
xor
jne
data16
mov
cltd
push
mov
inc
popf
push
and
cmp
cmc
pushf
mov
repz
jo
pop
leave
jb
adc
mov
aam
fmuls
in
clc
dec
sbb
int
sub
mov
fidivrs
dec
jle
sub
or
cld
jmp
dec
xor
pop
xchg
pop
inc
rorl
fldt
nop
xor
test
xchg
mov
pop
or
shll
loopne
imul
push
jmp
mov
lret
sbb
bound
out
jmp
or
inc
cwtl
jno
add
mov
inc
push
mov
pop
fsub
lods
xchg
sub
sti
xchg
outsl
xlat
push
pushf
movsl
cmpsb
push
push
mov
or
dec
or
out
icebp
aas
pop
nop
rolb
inc
arpl
es
pop
ret
mov
adc
popf
mov
add
jnp
es
or
mov
pop
leave
jno
shrb
test
push
scas
mov
sti
in
and
dec
fdivr
add
xchg
hlt
rorl
dec
jnp
push
jae
pushf
adc
imul
fmull
inc
sbb
xchg
cmp
in
dec
mov
push
sub
add
add
je
cmpsb
sti
push
jbe
or
fldl
xchg
repnz
call
jae
dec
arpl
dec
mov
loopne
dec
adc
or
dec
push
sbb
jle
xor
in
cmp
popa
lret
mov
mov
xlat
imul
ret
xor
jg
ret
pop
sub
sbb
je
xor
cli
int3
lret
push
imul
add
stos
call
push
mov
movsb
and
inc
notl
icebp
mov
inc
mov
mov
jbe
sbbb
pop
mov
dec
inc
dec
in
icebp
adc
xor
push
loop
or
movsb
aam
cli
cmp
jecxz
scas
pop
mov
inc
mov
movsl
add
divl
sbb
add
push
data16
adc
movsl
out
pop
xchg
es
std
dec
push
stos
inc
icebp
je
loop
dec
cmp
jle
pop
ret
jo
stc
mov
fs
mov
outsb
xor
xor
jb
jmp
pop
outsl
out
rcr
data16
shlb
movsl
add
xchg
mov
pop
jns
ds
add
popa
push
and
js
mov
jno
jg
into
iret
and
pop
mov
outsl
arpl
or
clc
fimull
and
rcrl
pop
sub
es
mov
sbb
dec
mov
sbb
in
pop
dec
mov
jge
xor
xor
add
cmp
out
mov
push
sub
outsl
cmp
add
dec
mov
pop
in
mov
and
test
dec
add
repnz
cmc
jmp
stos
pushf
movsb
pushf
dec
xor
inc
lds
movsb
loop
into
test
sbb
aas
orl
out
ret
add
scas
mov
pop
test
pop
cwtl
into
xchg
push
add
push
callw
icebp
pop
icebp
add
out
ret
ss
cwtl
jbe
mov
bound
or
outsb
jne
daa
push
outsl
jns
cmpsl
inc
jge
cmp
in
incb
mov
dec
add
xor
mov
stc
rcrl
sar
int3
inc
lret
cmp
icebp
into
or
mov
pop
jbe
stc
cmc
push
data16
jg
pop
jg
ret
jmp
fcmovnb
xor
fsubr
movsl
repz
dec
jns
sub
gs
mov
scas
and
lods
sbb
fimuls
sub
add
mov
loopne
pop
cmpsl
fucomi
aam
mov
inc
cmp
push
mov
dec
mov
fsubs
xchg
sub
dec
cmp
mov
push
fdivrl
xchg
mov
adc
cmp
push
scas
lds
test
je
stos
ret
test
rclb
sbb
testb
push
mov
pop
and
cli
outsl
pushl
or
dec
imul
into
add
sbb
inc
or
mov
adcl
inc
xor
mov
pop
fucomi
push
pop
mov
push
xchg
scas
jno
jo
aam
xlat
cli
jp
aad
push
sub
stc
inc
lea
inc
js
and
shll
flds
sub
xchg
bound
out
cmp
fwait
mov
jl
adc
sub
cs
sub
mov
mov
cmc
out
nop
rol
pop
sbb
shrb
ds
js
pop
repnz
mov
lahf
jb
stc
pop
jnp
push
xor
jp
jl
rorb
xchg
dec
xor
sbb
and
cmp
pop
mov
sar
int3
aam
mov
jno
mov
sub
push
enter
nop
inc
mov
sbb
push
dec
loope
cs
mov
test
aas
fbstp
es
inc
ficoml
push
aaa
cmpsl
jno
stos
cmp
adc
inc
cmpsl
sbb
inc
jne
lds
int3
sub
lcall
js
lock
test
sbb
inc
stos
scas
les
lret
ja
sbb
xchg
ficoml
hlt
mov
push
push
adc
pop
clc
xchg
lahf
xchg
enter
mov
or
out
sub
dec
daa
inc
pop
dec
inc
aas
cmpsl
outsl
sub
cmp
or
push
dec
clc
daa
aad
shrb
jecxz
imul
lret
call
popa
insb
leave
push
insb
dec
imul
push
jne
ja
jbe
enter
test
call
push
xchg
adc
shlb
jnp
enter
arpl
popa
ja
cmc
stos
jecxz
cltd
mov
jae
test
push
out
inc
or
mov
mov
jg
xchg
setle
mov
push
pop
mov
lahf
add
sub
lock
push
iret
popa
add
rcll
and
arpl
bound
in
jecxz
and
std
sahf
outsb
dec
inc
call
adc
xchg
arpl
lods
push
outsl
or
inc
pop
sarb
into
and
ljmp
bound
add
mov
loopne
add
aas
loopne
jmp
dec
sbb
stos
out
pop
sbb
xchg
and
cmp
ret
pause
sub
xchg
lods
inc
xchg
sbb
mov
es
jo
icebp
cmc
out
repnz
cmp
ds
pushf
repnz
je
hlt
ja
dec
sub
sbb
out
cmp
insl
pop
push
mov
push
push
loop
dec
add
push
push
and
pop
dec
popf
pop
push
rclb
xchg
xor
mov
aad
inc
mov
or
std
mov
sbb
pop
in
dec
negl
out
xor
sub
mov
pop
push
imul
push
add
xchg
in
sarb
mov
and
dec
adc
mov
loopne
push
gs
mov
inc
mov
and
mov
dec
xorl
push
add
mov
or
push
loop
sub
xchg
je
xchg
jnp
or
or
sub
add
movsl
aad
adc
cli
sahf
stos
or
jmp
ljmp
push
popa
out
push
push
sub
cmp
leave
cmp
mov
movsl
xchg
repnz
fcoml
mov
fwait
xchg
cmp
mov
je
inc
mov
divb
repnz
xorl
jbe
pop
xor
xchg
ds
and
jns
cmp
push
fnstsw
das
lahf
cmp
cmp
inc
fwait
lcall
in
sub
sbb
jle
mov
arpl
jl
adc
js
loop
ret
pushf
into
fwait
lds
out
rolb
sub
mov
mov
pop
inc
test
int
xor
push
imull
sbb
call
daa
ret
mov
dec
aas
jmp
cld
mov
stc
fdivrs
loopne
fs
cwtl
call
data16
jo
inc
adc
push
inc
push
testb
sti
in
mov
ret
jmp
test
aad
mov
cmp
jle
mov
pop
cltd
sti
sub
clc
xchg
sub
arpl
adc
dec
jl
adc
ss
xchg
stc
into
push
adc
sti
movsl
frndint
clc
addb
and
aas
add
xorl
pop
jae,pn
xor
or
lds
outsb
add
xchg
mov
out
movsl
mov
arpl
ja
nop
shll
filds
movsb
push
gs
mov
push
add
or
cs
and
cmpsb
mov
ja
out
xchg
push
xor
dec
mov
call
divl
das
xchg
mov
push
repnz
stos
sbb
inc
icebp
out
inc
mov
aaa
dec
jae
aaa
es
inc
mov
dec
std
xor
inc
push
cmpsl
push
add
ret
aaa
popa
out
jns
dec
pusha
imul
into
xor
pop
and
sub
orl
cmpsl
xchg
push
arpl
push
mov
fucomp
jmp
fcmovbe
xor
xlat
inc
rcll
inc
inc
inc
int3
xchg
stos
outsb
push
or
addr16
adc
pop
fmuls
sub
cltd
enter
jo
add
shlb
sbb
addr16
movsl
in
inc
and
test
cmc
popf
lcall
or
rclb
scas
fiaddl
fbld
xor
pop
mov
not
dec
pop
xchg
fcoml
inc
es
mov
fcoml
lcall
sub
mov
int
cmp
loope
jbe
add
movsb
lahf
xchg
std
addr16
sahf
pop
out
aaa
inc
add
ds
or
dec
fisubs
mov
imul
mov
ja
in
jge
push
adc
popf
das
call
push
out
pcmpgtw
xchg
cwtl
mov
shll
push
sbb
rclb
push
insb
pop
push
pushf
out
lcall
incb
push
lods
dec
lret
inc
push
es
insb
xor
inc
mov
pop
jbe
lea
mov
push
shl
cld
outsl
aaa
jmp
into
dec
in
and
xlat
push
sbb
and
or
scas
or
sahf
outsb
aam
fld1
cmp
nop
sarl
push
adc
orl
push
lret
pusha
aaa
add
les
inc
sub
inc
adcl
mov
xchg
inc
sti
mov
leave
jp
mov
aas
ret
jbe
push
loopne
sub
lea
ja
dec
inc
fimuls
add
scas
push
cmc
popa
push
xchg
rcl
gs
and
fadd
jnp
jne
je
cmp
mov
in
into
and
mov
lret
decb
imull
rcrl
inc
aaa
dec
mov
jmp
insl
imul
adc
mov
jns
mov
add
push
push
inc
jle
enter
ljmp
mov
cmc
jl
inc
add
xchg
pusha
jne
cmp
jnp
sub
mov
adc
and
lret
in
nop
leave
leave
ret
data16
cmp
fwait
sti
lret
daa
in
cmp
stc
xchg
mov
out
setl
shlb
ret
fs
sbbb
and
mov
xchg
mov
mov
xchg
inc
sub
adc
mov
lea
in
xor
sub
add
inc
movsl
mov
out
addr16
in
mov
dec
aad
xchg
sbb
or
int
dec
iret
xor
inc
ds
or
mov
push
push
fnstcw
mov
pop
loop
popa
in
loop
fcomp
cli
xor
inc
sarb
je
int
test
mov
lods
mov
std
jecxz
sbb
outsl
cs
orb
popf
pop
dec
outsl
outsb
pop
jg
add
sbb
cs
out
call
cli
clc
pop
into
cmpsb
je
popf
cmp
sub
cmpsl
adc
stc
outsb
lods
add
pop
adc
mov
shlb
andb
pop
sub
sbb
xchg
sti
xchg
or
je
pusha
fcmovbe
xor
xchg
xor
fsubrl
mov
jb
push
sub
or
ret
mov
sub
mov
mov
dec
inc
add
pop
shll
cs
cmp
xchg
sti
or
adc
xchg
xchg
outsl
xor
jo
push
pop
push
or
mov
sahf
mov
xor
das
out
mov
sub
ljmp
mov
subl
push
rolb
xchg
add
ret
pushf
push
ret
lea
push
push
stos
fdivrl
pop
sub
ret
mov
nop
jns
fisubrs
add
cmp
push
push
xchg
faddp
lahf
mov
push
int3
scas
mov
cltd
out
cmp
mov
or
pop
aam
das
nop
fimuls
cwtl
jmp
stos
mov
inc
in
enter
sbb
dec
pop
mov
mov
inc
jg
mov
xor
cmp
insb
inc
fwait
sub
movsl
inc
adc
and
insb
gs
clc
lods
and
in
fcomip
pushaw
pop
jle
cmpsl
dec
es
xchg
jmp
fsubr
push
dec
sbb
cmp
jno
xor
mov
jno
loop
xchg
ja
cltd
out
insb
rcll
mov
mov
add
test
inc
cmp
fsin
pusha
adc
insb
dec
mov
sti
pop
sub
or
shlb
das
pop
insb
rorl
xchg
stos
push
xchg
pop
mov
push
xor
jne
out
mov
push
stc
and
cmpsb
hlt
push
and
ja
jne
xchg
cmp
bound
fstpt
mov
add
push
adc
loope
fisttpll
inc
and
xchg
pop
sti
sbb
lds
dec
xchg
ja
int
adc
mov
orb
or
pop
ret
fildll
mov
and
scas
mov
out
and
push
movsb
sub
xchg
adc
int3
in
scas
pop
test
sbb
mov
jnp
imul
and
lods
mov
insl
jl
jmp
dec
ficompl
dec
jl
sti
addb
movsl
mov
push
sub
bound
insl
fcompl
dec
mov
loopne
cli
push
ret
add
adc
repnz
inc
adc
cmp
mov
ds
out
push
dec
fnstcw
mov
jmp
cmp
jne
dec
int
dec
ret
push
jns
fucomp
or
sbbl
mov
dec
add
subl
test
shrl
xchg
stc
mov
jle
dec
hlt
cmp
lods
adc
mov
call
mov
roll
jnp
call
adc
xchg
jp
xor
testl
inc
movsl
int3
push
and
adc
and
inc
mov
sbb
fwait
ja
gs
rolb
xlat
lahf
aaa
xlat
jp
andb
add
mov
xor
add
jbe
clc
and
out
sbb
aas
or
inc
inc
xlat
mov
icebp
sbb
mov
sbb
mov
sahf
repz
push
jge
or
in
stc
dec
xchg
dec
fcomps
insb
fstpl
mov
bound
mov
ja
into
pop
dec
mov
das
sahf
pop
movb
fdivrl
out
sub
into
push
pop
and
bound
lock
inc
pop
pusha
hlt
js
lea
jp
mov
sbb
mov
mov
push
cli
push
jmp
loop
mov
sub
ficoml
fwait
getsec
xlat
pop
fdivl
gs
sbbb
pop
push
sbb
ja
sub
in
int3
imul
stos
inc
mov
adc
test
xchg
js
ljmp
in
ds
xchg
pop
sub
sub
pusha
push
popa
and
jns,pn
adc
ljmp
ljmp
mov
pushf
dec
jne
iret
mov
addb
loopne
jl
or
jge
jecxz
jno
sarb
jle
test
dec
sbb
sarl
and
call
std
jne
fwait
lods
xchg
cmpsl
add
rorl
xor
xchg
add
lock
inc
aaa
dec
mov
adc
subl
dec
loop
mov
push
cmp
mov
or
sahf
xchg
cli
add
mov
scas
mov
popa
pop
ret
or
and
mov
xchg
fs
mov
cmc
loope
pop
inc
das
pushf
xchg
out
xor
mov
ds
dec
xchg
ret
paddusb
or
dec
pushf
and
imul
sbb
dec
push
frstor
rcrb
mov
stos
inc
push
or
xchg
inc
xor
sub
lahf
ss
dec
xchg
adc
pshufw
ss
dec
lods
xor
adc
and
stos
xchg
jg
out
ljmp
lahf
mov
push
push
sqrtps
imul
loopne
pop
into
adc
js
imul
shlb
incb
repz
jge
cmp
xorl
outsl
movsl
and
xchg
inc
ret
aaa
in
jno
adc
fisubrs
hlt
shlb
hlt
cwtl
push
insl
mov
pop
cli
xchg
sbb
lods
jnp
lret
xchg
adc
cltd
repnz
push
data16
jns
mov
push
in
jb
push
in
pop
stos
jg
loope
sbb
gs
iret
sbb
pop
aam
adc
fsubrs
pop
xchg
pop
dec
xlat
arpl
inc
push
rorl
sub
mov
inc
cld
clc
xchg
adc
jmp
sbb
sbb
jo
jp
nop
roll
lds
test
and
mov
clc
push
dec
popa
xlat
mov
pop
fisttpl
popf
lcall
mov
out
sub
and
push
cltd
push
cltd
lahf
into
sti
sub
es
sbb
test
loopne
dec
mov
mov
cmp
int
ficoml
cmpsb
push
jne
outsl
adc
sbb
js
push
push
mov
sbb
hlt
mov
pop
lahf
mov
mov
mov
stc
pop
aad
andl
cmp
and
das
mov
cmp
xchg
mov
mov
mov
cli
out
sub
sub
jge
inc
adc
je
pop
xchg
std
subb
ficompl
xchg
sub
and
xchg
cmp
add
rol
idivb
jne
mov
adc
sbb
xchg
enter
or
gs
outsl
scas
leave
loopne
cli
shll
ret
xchg
xorb
repz
push
std
sbb
add
lods
pushf
xchg
mov
add
cltd
adc
ljmp
cmpsb
paddsw
sbb
aas
mov
pop
sbb
push
cwtl
fldl
dec
mov
jno
adc
or
les
mov
ds
xor
and
movsl
jg
push
lods
and
outsb
int3
rorb
dec
in
lcall
adc
iret
repz
lret
iret
test
dec
pushf
mov
fwait
nopl
adc
cld
in
inc
push
ret
sub
or
xchg
pop
frstor
bound
mov
push
cmpsb
add
daa
lods
jmp
insb
mov
jecxz
enter
lret
into
mulb
les
add
pop
or
lret
mov
adc
fs
lea
xor
push
mov
imul
jge
fs
sbb
sub
or
aas
jecxz
loop
push
inc
outsl
dec
jge
insl
mov
stos
dec
fidivrl
dec
cld
lret
shrb
fisttpl
cmp
push
enter
mov
stos
and
cmp
mov
fxch
xchg
scas
fidivl
js
mov
test
cmc
sbb
pop
mov
adc
dec
mov
lcall
gs
sbb
repnz
repnz
divb
jae
sarl
or
iret
dec
jmp
pusha
fnstsw
repnz
test
xor
sbb
jge
outsb
jg
aas
ljmp
jb
dec
popa
mov
cmc
rcl
test
ljmp
mov
and
mov
shll
mov
pop
add
sbb
sbb
adc
sub
scas
enter
or
insb
mov
adc
push
push
adc
xchg
out
stos
call
dec
xchg
sbb
sbbl
mov
mov
pop
stos
scas
xchg
bound
inc
pop
pop
outsl
pop
jne
add
push
sbb
xlat
idivb
test
cmpsl
jae
leave
imul
dec
lock
sbb
inc
xchg
add
add
cmp
cmp
sbbl
xchg
jge
fs
repnz
pushf
aam
pop
xor
int
daa
pop
out
dec
xor
pop
outsl
data16
movsl
xchg
into
xchg
ss
js
outsl
scas
loopne
imul
ds
sub
cmp
es
lcall
popf
sub
inc
adc
out
scas
mov
aam
push
xchg
or
nop
pop
pop
mov
inc
xchg
or
xchg
xor
mov
imul
mov
mov
lret
xor
pop
sub
and
lock
and
mov
adc
out
clc
add
inc
push
mov
out
mov
fldl
xchg
or
jbe
mov
add
xchg
mov
jo
test
add
sbb
pop
and
adc
aad
mov
lcall
xor
fldenv
xchg
iret
cmp
jne
xor
loopne
cmpb
enter
ret
scas
mov
popf
lds
pop
stos
daa
stos
xor
or
scas
or
andb
mov
xchg
add
fcmovbe
inc
hlt
mov
mov
xor
inc
add
mov
test
lret
sub
rorl
cltd
mov
mov
jns
push
jp
jmp
in
stc
xchg
add
into
outsb
pop
fcomip
fcom
add
mov
sbb
mov
pop
cmp
pop
mov
loopne
add
imul
xchg
pop
xchg
dec
push
insb
jle
add
in
les
aaa
push
or
push
add
add
mov
xlat
push
lahf
movsl
outsl
inc
outsb
mov
sub
es
out
rorl
sub
iret
xchg
fnstenv
xor
xor
and
sub
outsl
movb
sub
jecxz
rcll
std
cltd
scas
sub
cmp
mov
andl
jp
mov
jbe
mov
or
loopne
mov
and
pop
std
jb
or
dec
sbb
fbstp
xchg
clc
mov
iret
cli
push
sub
in
and
inc
cmp
jp
dec
jbe
fwait
aaa
pop
and
inc
push
xchg
xchg
hlt
and
push
inc
jo
imul
xchg
push
pop
or
sbb
inc
mov
shlb
leave
jle
xchg
jmp
adc
adc
mov
mov
lods
roll
mov
imul
in
nop
add
das
fadds
leave
dec
popf
test
xchg
scas
roll
sti
jne
test
mov
xor
into
jno
xor
into
mov
aad
dec
add
sub
mov
test
fs
pop
push
daa
jae
dec
xorb
jo
dec
jg
pop
adc
in
sbb
mov
filds
jle
sbb
std
psubsb
test
stos
jne
mov
xchg
rcll
pop
adc
fdiv
mov
mov
sub
xchg
push
outsb
ljmp
inc
sbb
scas
inc
mov
sbb
jns
nop
movsb
fistpl
mov
add
outsb
cs
and
jnp
lods
sub
imul
mov
xchg
dec
lods
add
pop
and
aaa
inc
jmp
ljmp
jo
mov
xchg
xor
inc
addb
jns
dec
cli
cmp
fistl
loope
mov
mov
xchg
jge
cld
mov
jne
xchg
shr
ret
aad
lretw
sbb
push
test
jmp
jno
cmp
inc
stos
sub
iret
mov
add
lret
mov
mov
ja
adc
xchg
call
sbb
or
loop
movb
ss
xchg
addb
mov
or
cltd
pusha
push
and
call
scas
pop
cld
jne
icebp
lahf
inc
mov
insb
jae
xchg
xchg
popa
sbb
jg
shr
loope
addl
mov
mov
and
adc
hlt
inc
sar
dec
dec
int3
aas
por
sub
jno
inc
pop
loope
lcall
out
aaa
xor
push
sbb
xor
clc
daa
cwtl
inc
pop
lcall
mov
leave
arpl
jle
sahf
das
xchg
inc
sub
mov
neg
lret
rorb
dec
mov
pop
insb
mov
and
inc
and
dec
in
dec
scas
sbb
fisubl
jl
xor
dec
sbb
push
repnz
adc
pop
ljmp
mov
and
add
inc
lods
add
sbb
sub
xor
pop
out
adc
cmpsl
fmuls
andb
sbb
add
fimuls
xchg
cmp
mov
lock
int
pop
mov
test
sbb
mov
icebp
jb
lock
mov
or
testb
xor
push
add
sub
or
xchg
cs
test
xchg
xor
out
adc
or
mov
ret
aad
adc
mov
adc
pop
ret
jg
push
mov
cmp
fnstsw
bt
sub
nop
int3
int3
sub
xor
dec
out
adc
or
xor
test
inc
mov
andb
or
or
cmpsb
outsb
scas
lea
sahf
push
mov
push
mov
and
push
addl
mov
pop
mov
jmp
push
cltd
adc
dec
insb
in
scas
mov
xor
fst
jne
repz
jmp
lods
imul
jne
mov
mov
cmpsb
shrb
loopne
jl
int3
bound
in
xor
sbb
iret
fs
xchg
xor
fstpt
xor
push
stos
aad
pop
addr16
jmp
sbbb
sbb
das
pusha
fadds
mov
inc
push
test
cltd
lock
dec
hlt
testb
sub
call
mov
out
repz
scas
mov
pop
scas
ret
repz
imul
inc
std
dec
mov
cli
jecxz
imul
xor
pusha
scas
aas
push
add
ja
pusha
xchg
arpl
sub
mov
or
shlb
daa
loop
jbe
outsb
int
bound
or
xor
pushf
sbb
sbb
inc
mov
mov
xor
decl
shr
jle
sbb
test
loopne
mov
sbb
pop
inc
leave
mov
js
cli
je
fldenv
dec
lcall
repz
jmp
cmp
cmpb
rcrl
fbld
push
or
mov
inc
fisubrs
cmp
into
addr16
mov
pop
js
stos
jge
add
nop
mov
jp
mov
cs
shrb
sti
pop
jnp
notl
iret
outsl
mov
jle
rclb
sbb
sbb
inc
sub
addl
imul
dec
and
mov
cli
push
push
gs
rol
mov
inc
sbb
inc
jae
gs
pushf
xchg
or
dec
fsubrs
mov
mov
inc
pop
pop
sahf
fcmovbe
test
mov
pop
mov
pop
mov
cld
xlat
out
or
sbb
js
aad
fisttpll
push
and
adc
fsubrs
mov
sti
mov
std
jns
jno
xchg
add
cmp
movsl
xchg
mov
or
jnp
mov
int
xor
cmc
jae
mov
pop
test
add
mov
test
and
mov
iret
in
imulb
and
add
mov
inc
jno
pop
xor
out
insl
push
pop
shrl
and
out
xchg
rolb
sbb
mov
pop
int3
fcmovne
push
ror
inc
xchg
xchg
and
mov
push
sti
roll
dec
jnp
inc
repnz
xchg
mov
out
clc
cmp
or
cmpl
jle
push
das
xchg
xrelease
jbe
stos
bound
mov
pop
js
movsb
add
test
jbe
out
and
andb
aaa
mov
jge
test
div
sbb
inc
in
dec
or
outsb
sahf
inc
xchg
jns
std
outsl
aas
mov
clc
push
aad
cmp
push
mov
mov
xor
cwtl
lret
out
sar
jg
push
xchg
imul
test
mov
scas
aad
pop
mov
mov
xor
roll
popa
lret
mov
jecxz
push
mov
pop
fdivs
movsl
dec
popa
xchg
jne
cmpb
imul
aaa
dec
pop
jnp
mov
jecxz
sbb
out
arpl
push
repz
rcr
mov
insb
jnp
sbb
int
mov
loopne
dec
sbb
imul
stos
icebp
push
out
jge
xchg
dec
clc
pop
sbb
xor
lahf
ljmp
mov
inc
sub
xor
adc
std
lock
cmp
das
inc
popa
test
push
lret
pop
insl
mov
mov
add
fwait
adc
push
cmp
outsl
cmp
popf
ret
xchg
in
in
addr16
sbb
add
dec
mov
outsl
gs
push
xchg
mov
gs
xchg
jmp
int3
inc
sbb
sub
mov
xor
adcb
sbb
inc
lea
mov
push
gs
out
out
stos
in
icebp
inc
jo
pop
ja
xchg
out
pop
repz
icebp
inc
data16
mov
mov
adc
insl
lock
xlat
or
movsl
clc
popf
jmp
lahf
sbb
jno
fldcw
ret
sub
movsb
arpl
add
popa
cmc
andl
cmp
je
mov
insb
pop
cld
add
imull
xlat
jnp
rcr
cltd
ss
jne
imul
mov
lahf
pusha
out
sub
dec
jecxz
imul
cmpsb
add
adc
mov
fsubr
xchg
cmpsl
jmp
jno
sub
in
xchg
fstps
add
jge
xchg
and
mov
pop
cli
andl
sahf
xor
mov
dec
mov
in
mov
arpl
sahf
das
aaa
mov
scas
iret
adc
or
hlt
sarb
xchg
lcall
mov
aas
mov
xchg
pop
jno
ret
dec
cmp
xor
pop
mov
inc
cmp
es
inc
in
cmpsb
imul
int3
mov
filds
dec
fsubrl
in
jbe
cmp
mov
mov
test
daa
cld
pop
shll
xor
js
dec
dec
pop
or
mov
cli
iret
testb
mov
jecxz
dec
sbb
iret
push
cmp
adcb
pop
andb
and
add
jnp
push
in
outsl
mov
inc
inc
dec
pusha
insb
lods
mov
lahf
test
mov
xor
pop
sub
arpl
insl
add
add
testb
jno
out
addr16
fs
hlt
mov
or
jns
sti
pop
cmp
enter
jnp
push
jg
add
inc
inc
pop
mov
mov
push
ret
bound
mov
mov
xchg
insl
mov
push
leave
pushf
mulb
outsl
int3
xchg
jo
add
xchg
push
xchg
and
adc
xor
test
adc
hlt
fdiv
mov
cmc
mov
adcl
add
sbb
or
pushf
mov
xchg
sbb
inc
iret
test
fs
stos
stos
cmp
push
mov
sub
push
cmpsl
sbb
add
sti
mov
ds
lock
test
jge
das
mov
insl
xor
leave
push
ds
test
jbe
arpl
out
in
mov
ret
fsts
inc
ljmp
aas
aaa
stos
repz
loop
xchg
inc
das
and
fnstsw
std
xchg
sbb
iret
push
loopne
or
pop
pop
gs
leave
dec
add
dec
leave
add
mov
add
ja
xor
subl
adc
adc
sbb
into
out
mov
and
or
movsb
scas
jbe
add
jnp
push
mov
fidivs
sub
mov
mov
adcb
rcl
dec
dec
call
addr16
mov
pop
ss
lcall
dec
add
movb
outsb
jbe
daa
sbb
stc
das
mov
notl
aaa
mov
repnz
jg
xchg
ss
mov
enter
push
mov
dec
mov
pop
or
mov
mov
fnstcw
cmp
fwait
enter
xlat
xor
mov
push
out
dec
iret
sbb
cmpsl
lods
mov
dec
mov
into
mov
into
aad
ficompl
das
popa
xor
imul
pop
std
stos
jbe
add
insb
cmp
jge
jmp
imul
ljmp
call
sub
sahf
test
add
out
cltd
jge
out
xchg
mov
lods
add
hlt
out
cli
cltd
dec
fsubl
leave
mov
mov
push
jp
jb
inc
mov
fnsave
repz
cwtl
ja
fisubrl
shl
fs
xchg
push
push
fadds
movsb
aas
inc
xor
add
aad
and
aaa
in
mov
jnp
ljmp
adc
neg
add
lock
loop
push
out
pop
xorl
mov
movsb
mov
xchg
addr16
cmc
cmc
push
mov
ffree
popa
fsubs
ja
push
jbe
nop
shr
les
mov
dec
xchg
repz
jns
sbb
push
jnp
cmp
xchg
out
and
pop
sarb
or
dec
jl
pop
aas
jecxz
inc
push
jnp
inc
inc
call
std
mov
xchg
out
je
daa
sub
or
pop
xchg
sub
sbb
or
ljmp
xchg
jle
fcmovnb
shll
sbb
jnp
in
or
cld
dec
popa
push
data16
loopne
outsb
sub
pop
inc
xchg
test
push
shrl
xchg
in
fisubrs
mov
and
jnp
mov
dec
cld
cmp
cmp
in
out
repz
xchg
leave
jno
mov
pusha
pop
mov
rcrl
cwtl
add
sub
imul
jecxz
ret
cmpsb
pusha
add
mov
xchg
in
cmp
mov
inc
enter
daa
mov
and
push
and
int
dec
sub
mov
mov
cmpsl
cmpsl
add
pop
mov
pop
push
xchg
or
jnp
pop
pop
notl
shrl
cmc
cmpsl
ret
add
outsb
xor
cmp
int3
fisttpl
jbe
xchg
aam
inc
rorb
mov
push
bound
dec
and
ret
fcompl
sbb
movsb
add
xchg
cmp
jmp
int
jecxz
or
pusha
arpl
push
sub
xchg
lea
sbb
cld
lret
add
out
push
das
test
mov
sbb
pop
lea
addr16
add
sbb
cmp
std
popa
or
adc
popl
test
and
xchg
fcomi
inc
jns
repnz
cli
mov
ds
lods
fstpt
push
or
jmp
fistl
inc
mov
dec
js
ss
adc
movsl
xchg
jp
int
loop
and
jb
jl
arpl
jnp
adc
loopne
repnz
mov
adc
inc
pop
sbbb
fwait
aad
add
repnz
xor
mov
add
cltd
adc
dec
aaa
test
adc
shl
push
test
pop
divl
shlb
pop
mov
pop
out
aaa
test
iret
outsl
dec
loop
movsl
insl
pop
pop
addb
out
and
or
adc
out
out
shl
sbb
xor
mov
cmpl
lea
int
dec
xchg
fnstcw
push
and
jmp
imul
es
xchg
ljmp
pop
je
addr16
pop
push
mov
int3
jno
and
mov
rcr
roll
bound
pop
sti
das
and
xor
adc
mov
aaa
sub
ret
inc
movsl
les
jns
inc
mov
and
dec
rorl
arpl
mov
ds
scas
dec
jl
cli
push
ljmp
out
cmpsl
repz
jl
lods
testb
sahf
ficoml
xchg
inc
fists
fistpll
dec
xchg
mov
push
sti
sub
outsb
leave
inc
jl
push
bnd
jecxz
je
ret
cwtl
push
add
push
sbb
call
orb
xchg
daa
jb
notl
fsub
jg
and
cmp
ficomps
cwtl
mov
sbb
cmc
sbb
add
sub
add
aam
andl
pushf
jno
ljmp
xor
in
scas
jns
mov
or
in
ret
test
loopne
xchg
bound
iret
aad
insl
stc
adc
xchg
dec
sub
mov
in
nop
popw
and
and
fs
lock
imul
ficoml
jo
and
push
xchg
cmp
inc
jbe
hlt
mov
lret
int
in
lcall
nop
stos
adc
or
adc
push
int3
jo
adc
fisubrs
pop
jg
in
xchg
test
mov
mov
and
inc
push
add
insl
cld
imulb
cmpsl
rolb
or
shrl
xorl
icebp
in
jmp
jns
aam
jmp
in
mov
aam
scas
cltd
dec
mov
cmp
or
lahf
out
jle
or
fimull
movsl
filds
mov
jg
lret
in
or
jg
jne
repnz
inc
jnp
movsl
jb
in
or
lcall
inc
sub
loope
and
out
push
cmpsb
fxch
cmp
aad
popa
xor
push
sahf
ret
push
dec
loop
push
test
inc
ud2
ror
sti
in
cmp
push
dec
int
sahf
mov
sub
lods
push
cmpsl
das
hlt
repnz
ljmp
mov
mov
sub
fsubl
insb
sbb
in
xchg
repz
ja
sbb
push
aad
imul
mov
sub
repz
icebp
xchg
aad
leave
mov
clc
mov
cwtl
fisttpl
int
fimull
andl
xchg
add
orl
stc
and
jg
gs
jb
mov
fisubrs
bound
inc
dec
out
data16
adc
mov
test
adc
cwtl
inc
mov
int
out
push
movsl
mov
scas
pop
loopne
sub
mov
xchg
xor
test
push
loopne
test
push
xchg
je
ret
xor
mov
xchg
fstpt
pop
aas
mov
pop
aad
dec
scas
sub
sbb
ljmp
push
mov
ja
push
fs
dec
cmp
pop
add
test
inc
mov
aas
mov
sbb
mov
push
sahf
mov
dec
mov
jge
mov
rorb
jmp
ret
mov
or
lods
repz
cmp
jns
cwtl
decl
inc
and
pushf
movsb
inc
mov
adc
fwait
xor
and
sub
test
mov
fldt
rcll
jl
fs
mov
inc
cmpsl
push
push
movsl
and
enter
movsb
lods
pop
lret
xor
add
fcmovu
mov
xor
xchg
scas
jmp
and
or
ss
lods
pop
mov
add
out
sub
jns
dec
dec
fucomi
cs
sub
incl
mov
and
ret
cwtl
cmp
lret
repz
cmp
xchg
jle
xor
adc
andb
lods
mov
jno
mov
stos
xchg
sub
xchg
pop
out
jo
stc
mov
cmp
cmpsl
cmp
repnz
pop
mov
aam
jo
in
fmulp
cli
hlt
mov
shll
sbb
add
lahf
sahf
push
mov
push
bound
ljmp
pop
jo
popf
in
xchg
mov
les
out
cmpsb
xor
ret
ficoms
push
adc
and
pop
mov
fnsave
push
lock
clc
out
xor
and
lods
pop
stc
scas
adc
mov
sub
mov
cmpsb
aam
into
popf
pop
pop
push
subb
loope
push
std
jl
adc
mov
jp
xchg
push
fnstcw
add
cmp
loopne
mov
ret
imul
mov
mov
sbb
in
push
stc
rorl
das
dec
test
dec
lret
out
sbb
mov
add
xchg
call
cmp
push
dec
les
inc
adc
mov
mov
add
jg
xlat
lahf
test
cmp
sub
fnstenv
xor
lock
mov
lea
dec
in
add
fdivl
jns
sbb
fs
sarl
iret
xor
shrl
mov
loope
popa
sbb
ljmp
aam
mov
int3
pshufw
cmp
pop
xchg
mov
fmuls
sub
in
or
mov
or
and
and
dec
sub
addl
jmp
shrd
jnp
pop
popa
nop
cmovle
repz
adc
test
inc
pushl
sahf
adc
call
outsl
push
loop
cwtl
xlat
ja
and
xchg
rcll
jge
cltd
mov
lret
cmp
cmp
cmp
fidivl
adc
mov
or
mov
btc
jae
shlb
imul
mov
xlat
pop
int3
pop
xlat
push
ret
push
pop
dec
jae
jl
lcall
jge
scas
mov
pop
sub
in
aaa
sbbb
aam
xchg
faddp
push
dec
mov
hlt
cmpl
add
xor
ret
jg
int3
popa
out
inc
inc
adc
cmp
jmp
outsl
loopne
pusha
cmp
enter
sahf
lods
or
jno
lods
pop
xor
cmp
jmp
fcomp
or
scas
test
cwtl
ljmp
fxch
push
cmc
mov
xor
add
cwtl
loop
sub
xor
inc
jg
push
push
shll
or
loopne
int3
fwait
pushf
mov
push
shrl
cwtl
in
mov
in
cwtl
std
sbb
test
mov
faddl
aas
loop
pop
in
fsub
inc
xchg
shlb
cli
adc
and
sub
jo
push
sbbb
in
jge
rcrb
cs
inc
mov
daa
bound
nop
pusha
setle
cwtl
rolb
mov
xchg
mov
lods
cs
shll
mov
les
call
adc
sub
and
sub
cmp
xchg
push
dec
dec
test
adc
aam
mul
scas
push
push
mov
addb
jno
mov
pop
test
jmp
aas
mov
popa
cmpsb
dec
mov
shrb
and
mov
les
cmpsb
or
sbb
movsb
xlat
data16
adc
stos
mull
fld
sarl
lea
ljmp
and
inc
les
cmpsb
and
push
fsubrp
lds
cmpsb
into
not
lea
imul
mov
shrb
xchg
lods
in
push
mov
mov
sub
pop
ss
and
jp
xchg
adc
notb
jo
lods
pushl
sbb
adc
lea
stc
and
aad
inc
sub
push
adc
mov
mov
pop
sub
leave
cmp
mov
sbb
push
popf
dec
mov
mov
mov
pushf
push
rcrl
jae
adcl
in
pop
scas
jb
sbb
xor
push
jle
cwtl
xchg
dec
data16
push
clc
mov
cmp
stos
dec
repz
les
mov
xchg
std
adc
add
lahf
adc
cmc
xor
or
cmp
jle
mov
adc
sub
inc
je
xor
dec
notl
in
insb
in
dec
mov
dec
lcall
xchg
inc
mov
sbb
push
addr16
cmp
fwait
pop
sbb
pop
andb
aam
lret
cmp
je
sub
adc
cwtl
lret
push
dec
adc
adc
push
ret
mov
pop
loope
push
sub
sub
and
es
and
ret
stos
sti
lods
bound
sbb
mov
out
into
lods
add
stos
popa
sub
xorl
arpl
and
push
aam
pop
shlb
pop
xor
push
xchg
pop
popa
loope
push
stos
popa
decb
sub
xor
mov
shlb
cmp
pop
lcall
in
inc
outsb
mov
call
dec
popf
insb
xchg
sub
push
and
lcall
cmpsb
aas
popf
scas
out
push
mov
fwait
pop
aam
xchg
inc
ja
and
push
div
addr16
dec
int
mov
push
add
adc
jmp
es
mov
add
mov
mov
sbb
das
scas
push
lods
dec
xchg
jo
xor
incl
inc
lret
xor
push
lret
jg
je
loope
fcmovbe
jne
repnz
push
jnp
lock
mov
dec
fidivl
sub
xlat
or
arpl
add
lods
pop
jo
add
pop
int3
inc
or
out
sbb
loopne
ss
xlat
sub
jg
mov
test
aam
jb
arpl
std
out
or
jmp
sti
negl
loopne
xor
lods
les
push
mov
arpl
sub
ficompl
lods
rorb
xchg
popa
cmp
fldcw
mov
xor
push
popa
into
fwait
cmc
cmp
imul
cs
and
sub
sbb
pop
mov
outsb
call
xchg
push
and
mov
dec
outsl
shrl
gs
mov
lret
mov
fbstp
jno
cld
sbb
lds
sub
scas
cmp
dec
mov
cmc
jmp
into
lock
cmp
aas
add
lea
addl
lock
xlat
push
mov
xchg
ljmp
or
call
data16
sbb
push
inc
test
outsb
ret
std
in
jae
negl
int3
mull
lret
icebp
pusha
stc
cwtl
rolb
push
ds
iret
dec
xorl
sbb
cmpsl
lret
mov
mov
loope
mov
jo
push
rcll
jo
adc
test
pop
mov
mov
out
pop
fwait
leave
mov
pop
pop
and
sbb
push
jp
scas
insb
inc
loop
icebp
or
sub
adc
mov
mov
test
das
adc
adc
fimull
cmp
lret
sbb
push
adc
sbb
push
xchg
lock
rol
jl
dec
jecxz
dec
and
mov
and
aaa
test
and
push
xchg
out
fcmove
push
sbb
mov
repz
movsb
lock
inc
fwait
sub
adc
xlat
jge
lea
sbb
pushf
imul
enter
mov
addr16
jb
stos
stc
lret
push
cwtl
adc
rolb
inc
pop
je
movsb
imul
icebp
mov
pop
and
je
xlat
popa
push
scas
int
mulb
mov
int
pop
add
stos
outsb
movsl
adc
dec
and
stos
jno
sbb
fidivrs
xchg
in
xor
push
or
je
andl
xor
popa
jle
cmp
and
dec
sub
call
sub
and
dec
sub
dec
aas
nop
ret
or
add
pop
fisubl
dec
push
cmp
xchg
nop
mov
int
lahf
pop
push
cmp
out
or
and
in
mov
pop
aaa
add
mov
ds
xor
test
lea
out
popa
xchg
das
sub
adc
test
lods
inc
xor
inc
push
stos
jbe
repz
test
mov
addr16
cli
fidivs
inc
in
add
pop
mov
loope
in
inc
int
push
mov
xor
outsl
lahf
cmp
and
adc
sub
sbb
cmp
add
sub
sub
out
or
xchg
js
mov
push
mov
jge
mov
fs
jle
ds
scas
or
loopne
mov
int3
movsb
mov
loop
call
push
adc
ljmp
sbb
adc
xorb
imul
adc
jle
push
aad
or
mov
cld
sarl
cmc
xchg
les
cmp
jbe
cmp
adc
insb
jae
sbb
pop
in
pop
lea
xor
outsl
mov
xor
andb
jg
and
scas
inc
mov
test
sbbb
pop
ret
popa
sbb
mov
jle
mov
adc
pop
or
or
scas
adc
inc
sbb
xor
xlat
aas
mov
out
fcoms
outsb
sub
sahf
mov
nop
xor
xor
movsb
mov
iret
inc
sbb
add
mov
mov
aad
sub
in
adc
fsubrl
jae
adc
nop
adc
add
mov
lahf
dec
cwtl
mov
nopl
insb
xor
push
pop
cwtl
jns
test
mov
mov
mov
dec
insb
or
mov
pop
mov
push
mov
push
jp
mov
add
es
rcr
mov
arpl
les
mov
mov
dec
dec
cmp
fcos
aas
inc
roll
cmp
mov
mov
cmp
or
push
pop
inc
adc
imulb
jns
and
out
inc
repz
lahf
pushf
xchg
push
shrb
jns
cmp
sbb
sbb
fldl
adc
inc
push
pop
adc
xor
dec
add
bound
mov
sbb
jne
bound
dec
pop
or
rcll
fsubrl
filds
inc
outsb
into
push
loope
push
pop
xchg
push
inc
sbbl
sub
pop
movsl
add
lahf
popa
insl
jbe
xchg
imul
jge
mov
sbb
dec
or
pop
dec
cmp
iret
pop
adc
pushf
adc
ja
fadd
push
cmp
bound
daa
movsl
fstl
jmp
xor
and
cli
clc
out
xrelease
adc
mov
pop
xlat
jge
cmp
movsb
lret
js
lods
xlat
fwait
movsl
jbe
xor
push
icebp
mov
fwait
xor
out
xor
and
cmpsl
mov
dec
mov
cld
in
pop
cmp
movsb
and
rolb
fsubrl
pop
cmp
pop
insl
mov
shrl
push
test
fwait
adc
dec
xchg
cmp
lret
daa
stos
scas
scas
shl
loope
ret
shl
je
test
pop
dec
and
pusha
insl
je
dec
ror
jmp
inc
aas
testl
jo
cmp
mov
and
jecxz
das
add
push
sub
mov
sub
ja
lock
mov
popf
addl
xor
lret
gs
in
push
icebp
xchg
pop
adc
xchg
adc
xchg
das
or
imul
sbb
dec
popf
cmpsl
jg
sahf
sbbl
lahf
fsubs
jae
out
fnstenv
mov
es
mov
cmp
or
inc
leave
das
jne
push
call
jg
adc
aas
xchg
push
inc
push
mov
mov
out
push
jg
pop
xchg
sbb
xor
sbb
mov
and
xor
or
pop
nop
repz
and
jecxz
daa
ja
jne
mov
mov
or
in
or
push
test
mov
and
push
jb
mov
pop
dec
xchg
hlt
test
jle
aad
pusha
out
xor
cmp
jae
cmp
aad
out
cmpsl
xor
lods
repz
testb
xlat
mov
sub
jo
cmp
jbe
cmpsl
mov
pusha
cmp
mov
scas
orl
in
adc
adc
and
push
mov
cld
cli
mov
dec
sbb
sbb
xchg
mov
adc
test
in
push
bound
adc
pusha
fldenv
call
push
stc
test
lcall
aad
push
mov
xchg
nop
sbb
xchg
test
sub
sub
je
jae
add
and
jbe
ljmp
iret
dec
mov
mov
movb
push
mov
sub
aad
or
lcall
stos
and
dec
subl
int3
mov
cmc
sahf
cli
aad
lods
es
rcll
xor
fstps
insl
or
jb
cmpsl
sub
xchg
movsb
js
sbb
and
sbb
fst
xchg
iret
jg
daa
pop
lret
cmpsl
fbstp
or
push
dec
adc
lret
repnz
sbb
cltd
ficoms
push
sti
inc
jle,pn
cltd
pushf
jns
roll
xor
outsl
inc
and
push
ljmp
inc
les
rolb
xor
popl
repz
or
and
xchg
jno
pop
stc
mov
outsl
cwtl
mov
dec
push
and
jmp
loop
fwait
dec
sub
popa
fs
into
add
bound
repnz
loope
and
and
jno
clc
clc
mov
mov
hlt
adc
scas
xchg
push
dec
mov
dec
jns
mov
jge
pop
sub
lods
cmp
pop
push
aam
jne
mov
sahf
lock
test
es
mov
mov
and
push
repz
mov
lock
dec
imulb
mov
jo
stos
push
push
sbb
xchg
xchg
imul
inc
mov
cwtl
jge
adc
adc
mov
mov
push
lret
mov
add
inc
xchg
push
pop
adc
movsl
xchg
out
pop
lea
and
jnp
sub
shlb
stos
and
outsl
pusha
ss
and
push
in
mov
or
mul
or
aad
outsb
push
xchg
in
push
adc
ja
fwait
adc
aaa
imul
or
stos
sbb
sub
sbbb
idivl
cmp
xchg
out
mov
adc
push
adc
jae
mov
lret
push
and
mov
out
aad
and
icebp
xchg
or
fsts
mov
xchg
cmp
rol
push
push
notb
andl
push
imul
fs
nop
add
mov
mov
insb
inc
jb
adc
mov
xor
test
xchg
jecxz
inc
sahf
out
aam
mov
inc
push
test
cmp
loopne
ss
insl
xor
stc
push
sub
addl
cmp
jp
fdivs
mov
incb
mov
clc
mov
cld
or
cs
cmp
mov
push
xchg
ret
fstl
xchg
sub
sub
call
xor
out
mov
sbb
adc
scas
jnp
test
movsb
add
lret
imul
cwtl
cld
mov
decl
add
sbb
fisttps
dec
xchg
mov
sti
xchg
fdivrl
push
lahf
push
lds
xor
push
or
ror
jb
mov
add
fsincos
lods
sub
push
ljmp
fnsave
push
mov
roll
mov
xor
fimuls
cmp
jnp
fbld
jge
fiadds
dec
and
rorl
pop
push
lds
mov
mov
fs
cmc
cmp
push
mov
cmpsl
pushl
jp
pop
inc
ja
pusha
add
aad
test
mov
xor
popa
lods
sbb
aaa
inc
ds
mov
movsl
push
cmp
add
pop
ret
stos
jmp
mov
into
lods
cmp
arpl
mov
mov
and
ds
mov
xchg
int3
and
lock
stos
adc
fiaddl
scas
es
pop
cmc
push
enter
xchg
scas
cmp
inc
stos
xchg
inc
cld
cmp
scas
or
lods
jg
xchg
sbb
pop
pop
cs
jbe
pop
xchg
sahf
pop
push
mov
xchg
cmp
out
xlat
xor
sub
inc
mov
in
cmp
inc
mov
sub
loope
testb
push
push
mov
xchg
mov
sub
aad
mov
xchg
stos
mov
lret
push
push
fs
add
stos
loope
push
add
in
push
pop
and
mov
imul
inc
pushfw
mov
xor
add
or
enter
mov
lret
pusha
jo
cmp
push
dec
xchg
xor
lea
mov
outsl
pop
push
mov
out
lods
jecxz
daa
pop
lods
xchg
sbb
arpl
xchg
or
xchg
in
jecxz
and
mov
mov
pop
adc
dec
dec
enter
flds
sbb
adc
rclb
rorb
movsl
jo
arpl
sub
push
fcmovnb
push
rcrb
mov
adcb
jbe
mov
das
push
rcrb
jmp
in
lcall
leave
or
lret
mov
and
sub
adc
sub
in
nop
es
insw
jae
clc
call
sarb
inc
es
insb
and
mov
dec
mov
cli
dec
cmp
xor
mov
shll
add
ja
es
push
xor
in
adc
mov
mov
popf
in
mov
imul
and
nop
inc
jno
lret
fcompl
adc
and
mov
mov
and
dec
add
inc
inc
divl
lods
push
mov
jle
and
sbb
jae
jb
mov
adc
cmp
sub
pop
sbb
fs
pop
cmp
push
xchg
add
push
jne
push
fs
fisubrs
jecxz
adc
push
xchg
pop
cmp
jno
push
dec
and
add
aaa
or
xchg
lret
xchg
pop
aas
lock
aas
mov
pusha
aaa
push
mov
sub
xchg
push
pop
xchg
stos
movsl
test
xchg
push
add
test
or
pop
int3
fcmovnu
mov
hlt
lock
inc
out
out
out
aas
into
jae
xorb
pop
jo
xor
les
movsl
cltd
es
add
mov
sbb
sub
jnp,pt
into
mov
mov
xchg
in
addb
or
xlat
jno
pop
sahf
add
mov
push
and
push
cmp
add
jmp
outsb
dec
frstor
into
bound
int3
sti
shl
outsb
ds
divb
ss
out
out
mov
sbb
ret
add
xchg
push
pop
inc
int
adc
cli
cmp
es
scas
addr16
ja
cmc
out
popa
jle
add
js
and
daa
lcall
jl
pop
lahf
add
movsl
mov
arpl
hlt
push
cmp
outsb
test
cmp
fidivl
mov
push
sub
aad
mov
fsts
adc
jmp
mov
jo
or
mov
fdivs
in
cmp
jle
rcl
jbe
test
je
pop
mov
cld
das
or
mov
jmp
aaa
and
add
mov
or
mov
add
sti
out
adc
push
pop
xor
test
lret
test
fsubr
stos
lret
scas
mov
and
xchg
daa
mov
loopne
jg
dec
jbe
jmp
cld
mov
jg
aam
cld
js
es
je
repz
imull
cld
cmp
outsb
test
adc
jle
lods
dec
ja
xrelease
xchg
popf
jns
or
movsl
lret
cltd
aas
mov
and
adc
nop
push
mov
or
int3
fadds
pushf
popa
xchg
dec
call
jae
xchg
xchg
in
xchg
xchg
outsb
repnz
outsl
push
xchg
sub
sub
mov
pop
jo
sbbl
loop
ja
push
clc
mov
aad
push
mov
pop
or
pop
mov
or
push
cltd
mov
and
xor
adc
lods
dec
and
test
pop
pushf
or
mov
or
push
add
pusha
mov
sbb
sub
roll
push
mov
test
scas
push
inc
add
sbb
test
add
cmpb
aas
movsb
push
add
lcall
sub
mov
sbb
push
jb
out
or
repz
enter
jb
xor
rclb
clc
add
das
sbb
mov
loop
cmp
jg
adc
dec
test
and
jno
iret
stos
dec
mov
or
mov
xorb
lds
adc
jo
adc
xor
or
xchg
mov
push
in
cmpsb
inc
inc
adc
or
aas
xchg
inc
push
push
jo
lahf
jecxz
fists
jge
lods
add
mov
ljmp
int3
ja
pop
mov
dec
cmp
nop
dec
push
js
inc
lea
adc
xor
scas
inc
xchg
test
imul
push
mov
sbb
stos
int3
idivb
loopne
pop
sti
pop
negl
mov
cmp
in
mov
scas
sub
in
orb
cmp
divb
insb
xor
insb
fs
xlat
leave
push
mov
int
add
inc
inc
xor
cld
xchg
xchg
mov
lds
rcrb
lds
subb
movsl
loop
mov
pop
sbb
outsb
repnz
or
or
push
fdiv
mov
sbb
mov
push
imul
jl
pop
in
fnstenv
es
push
sub
stos
xor
ss
ret
jp
pop
aad
adcl
fs
nop
push
and
add
sahf
ljmp
test
out
outsb
xchg
je
inc
pop
mov
jae
jo
ss
fbld
lea
jo
jae
fbstp
add
ds
hlt
std
jae
inc
movsl
test
pusha
hlt
fidivrs
mov
negl
sub
mov
mov
xor
sub
sbb
movsb
and
daa
imul
or
in
cli
mov
push
jbe
jg
fdivs
fcoms
inc
push
and
or
mov
adc
cltd
test
sub
out
leave
jb
pop
popa
fwait
fwait
std
in
in
jae
mov
iret
mov
daa
in
jg
pusha
shrl
jb
fwait
mov
mov
add
cwtl
xchg
aaa
imul
push
test
mov
pushf
nop
push
jecxz
inc
sarb
test
std
jge
jne
in
into
and
add
in
daa
inc
cmp
test
arpl
pop
cltd
and
outsb
stos
pop
std
enter
or
xchg
add
movsb
or
inc
rcl
andl
push
clc
pop
mov
pushf
cs
mov
out
sub
repz
cltd
sbb
push
jmp
xchg
and
add
xchg
sub
mov
push
xchg
inc
in
cmc
ljmp
xor
mov
cltd
out
cmc
sbb
divb
push
adc
inc
test
inc
cmp
int3
push
dec
mov
mov
jns
bound
scas
insb
or
out
and
repz
aaa
fs
pop
jb
mov
mov
xor
rorb
daa
aaa
sbb
add
mov
faddl
js
cmpl
sub
push
pop
push
dec
test
jns
pop
xchg
stos
sbb
clc
xor
loopne
xchg
or
mov
fbld
adc
popa
cmc
lret
inc
mov
ja
adc
lret
jle
sbb
jl
lods
adc
dec
out
jmp
sbb
mov
adc
cmp
dec
xchg
mov
mov
mov
dec
jmp
and
inc
aas
sti
jmp
vmread
loope
scas
adc
out
in
test
lds
fists
push
sub
or
jg
cli
daa
push
fidivrl
leave
int
sbb
adc
dec
outsb
push
cmp
push
dec
in
aaa
roll
and
fstp
insb
into
in
cmp
xchg
ja
into
sbb
cli
insb
push
in
cmpb
pop
mov
mov
sbb
jae
filds
add
jecxz
div
dec
add
aad
loop
scas
inc
call
mov
pop
push
aas
and
pop
aas
xchg
and
test
ret
and
cmp
ljmp
dec
sub
int3
mov
jbe
and
rcrl
sub
pushf
ret
in
mov
jbe
jo
mov
aaa
test
jb
dec
out
aam
xchg
push
lret
and
xor
pop
and
mov
test
mov
mov
pop
mov
and
aam
sub
adc
testb
xor
mov
jecxz
adc
pusha
cld
adc
lock
and
sbb
push
mov
or
dec
fnstsw
rclb
outsl
push
jecxz
pop
jnp
jnp
mov
aad
in
sub
loope
mov
add
xlat
xlat
rorb
je
shl
fbld
cmp
in
lods
or
cmp
stos
cwtl
test
cmp
xchg
loope
bound
mulb
xor
sahf
add
jge
orb
rclb
jmp
ret
lret
jnp
mov
cmp
jg
cmp
sub
not
mov
cmp
add
leave
mov
fnstsw
mov
push
fisubrl
dec
adc
or
xor
mov
popf
and
inc
cltd
mov
loope
dec
inc
jns
in
repz
movsbl
lahf
xor
cmp
shrb
fbld
or
je
fsubrs
cmp
adc
ds
fs
jbe
testb
push
add
test
push
dec
mov
add
sub
pop
les
out
insb
mov
push
ret
out
outsl
decb
or
fldl
push
test
push
add
in
cmp
pusha
cmp
mov
jae
cmp
lock
in
rorb
dec
mov
repnz
test
dec
nop
jle
adc
enter
into
out
out
shrl
jmp
call
addr16
in
mov
push
dec
add
lahf
sbb
push
and
into
cmp
sub
push
cld
mov
xor
std
test
or
lea
sbbl
das
or
jb
repz
push
xor
sub
dec
data16
inc
inc
clc
arpl
or
out
adc
sub
mov
xchg
pop
sarl
push
outsl
xlat
adc
scas
popa
mov
jne
xchg
mov
fcoml
sahf
lahf
outsl
clc
test
push
lahf
clc
ds
sahf
push
mov
push
adcl
push
cmp
test
or
mov
xlat
xor
pop
incl
push
push
rcll
aad
sbb
data16
aam
cli
and
xchg
cmp
adc
fcoml
sahf
jns
xor
fnstsw
hlt
mov
mov
sbb
in
dec
loop
cmp
shrb
lods
cmpsb
lea
xchg
sbb
mov
pop
xor
add
adc
aam
xchg
fcmovbe
mov
push
leave
pop
int3
dec
call
xchg
lds
inc
sub
mov
lods
and
jmp
xchg
fs
cmpsb
and
iret
dec
push
jecxz
or
sub
call
lret
sbb
jmp
aaa
mov
push
lahf
pop
add
lods
and
fs
stos
testl
cltd
pop
mov
push
into
cld
mov
imul
sub
and
and
or
sbb
and
ss
ret
add
push
outsb
mov
or
loopne
popl
scas
stos
insl
push
xchg
inc
call
jo
jle
push
mov
add
out
cli
test
add
cmpsb
push
arpl
and
lret
cld
ret
sarl
jbe
rorl
and
mov
mov
sub
or
pushf
mov
dec
or
ljmp
call
cmp
aaa
repz
repnz
add
inc
mov
orb
lods
mov
ret
outsb
push
jns
lods
xchg
pop
add
repnz
js
or
xchg
pop
xchg
push
outsb
rcr
je
xchg
scas
hlt
int
jnp
das
add
std
movsb
or
xor
stos
in
nop
inc
jnp
pop
ljmp
frstor
push
sbb
jge
or
test
movsl
hlt
outsl
fstpt
std
jbe
inc
mov
iret
stos
pop
cmp
arpl
pop
mov
ja
sub
lock
xchg
push
or
and
ja
cmp
das
gs
outsb
inc
mov
cltd
shrl
in
add
mov
ja
cmp
jb
out
cmp
imul
sbb
shl
notl
xor
push
xor
cmp
mov
pushf
dec
xchg
push
push
jl
fdivp
out
lods
xchg
xlat
aad
ret
ds
dec
loop
jecxz
mov
pop
icebp
inc
sbb
dec
enter
jb
movsb
jmp
fisubrs
and
gs
dec
lahf
sbb
orb
jg
inc
mov
rorl
pop
pop
xchg
andl
add
mov
inc
pop
xor
pop
adc
inc
and
addb
icebp
cmpsl
and
imul
jns
adc
sbb
inc
pop
sub
das
mov
popa
push
mov
mov
adc
xor
push
out
mov
js
cmp
add
mov
scas
xor
out
stos
xor
or
mov
fiadds
mov
push
dec
repz
fisubs
jl
push
pop
je
ds
int
mov
int3
or
push
les
sbbl
sub
insl
push
rorb
push
nop
and
pop
loopne
cld
pop
fistpl
xchg
mov
sahf
push
add
xchg
leave
add
xchg
out
xor
sub
xchg
jne
mov
add
mov
adc
lahf
lahf
insl
leave
out
jne
mov
mov
in
pushf
jae
pop
dec
mov
cmp
inc
push
cli
insb
and
aam
fistpll
xor
andps
xor
sub
mov
outsl
adc
rcl
mov
ljmp
mul
pop
int
mov
stc
int
xchg
mov
and
jbe
and
mov
sub
jg
sub
cwtl
and
das
cli
lret
mov
mov
inc
sbb
sub
out
xor
rorb
mov
loop
xchg
and
pop
lods
push
xchg
jb
insb
mov
add
pop
lock
pop
dec
or
adc
or
pop
xor
push
scas
inc
mov
sti
call
lock
push
cltd
orb
mov
pop
push
into
mov
out
fisubrs
lret
and
push
adc
repz
jmp
mov
push
gs
ds
add
jno
addr16
test
mov
mov
push
jnp
lods
lcall
or
mov
fs
dec
cs
push
xor
push
and
mov
adc
inc
xchg
sbb
dec
xchg
sbb
outsb
repnz
ja
add
push
jle
sub
mov
mov
fsubr
jbe
add
mov
pop
sbb
ss
add
js
stos
push
or
insb
fsubrs
js
cmp
push
outsb
bnd
sub
bndldx
mov
lock
dec
jmp
sbb
inc
shlb
fsubrs
aam
pop
mov
fwait
out
xchg
fiadds
add
mov
mov
xor
inc
pushf
jmp
push
int3
movsl
das
arpl
jl
dec
out
mov
ret
ret
adc
cwtl
adc
and
adc
xchg
mov
sahf
ljmp
inc
ret
mov
xchg
outsl
jno
cli
cmp
js
icebp
xor
pop
mov
clc
sub
mov
dec
cld
divps
ja
in
mov
repz
mov
pop
cld
out
sub
jae
popf
inc
adc
movsb
shll
adc
or
hlt
adcb
sbb
sub
jnp
push
leave
aaa
pop
lods
addr16
jnp
jmp
cld
lret
jae
pop
and
cmpsb
xchg
rclb
push
divl
dec
xor
in
out
ja
cmc
jle
stos
pop
and
je
out
mov
mov
hlt
inc
imul
das
sub
sbb
scas
mov
inc
in
ret
and
mov
or
sbb
les
rolb
lods
jmp
jp
filds
fsubrl
pusha
fsubrs
imul
fmull
dec
push
pop
cmp
ror
cwtl
push
inc
sub
call
rcrl
xchg
fsubrl
mov
popf
adc
adc
adc
dec
nop
xchg
pop
incl
shl
loopne
jbe
mov
movsl
adc
test
insl
or
test
xor
pop
addr16
jmp
es
jmp
mov
push
mov
sub
jo
xchg
or
je
ljmp
xlat
ds
or
sub
test
sbb
cwtl
clc
mov
adc
scas
std
sbbl
adc
pop
mov
adc
pop
sbb
cmp
fsts
bound
cld
lahf
xchg
mov
lret
sbb
xor
cmp
std
nop
dec
mov
lret
ljmp
mov
inc
xchg
popf
loopne
inc
or
xlat
out
test
cmpsb
subl
fchs
push
cmp
sub
push
repz
lahf
int3
pusha
dec
mull
cmp
mov
fists
sbb
loopne
xlat
jp
pop
xchg
adc
push
sbb
js
mov
shlb
ja
cmp
jno
mov
sahf
or
or
sbb
dec
aad
data16
pop
cmp
xor
icebp
fwait
pop
pushf
sub
fldt
mov
adc
sbb
out
daa
cs
imul
dec
adc
or
dec
jns
lods
lcall
push
push
mov
out
mov
pop
mov
cmp
push
sahf
cmp
cli
repnz
cmp
push
jl
scas
icebp
inc
sbb
mov
leave
rorl
add
jo
rorb
scas
jbe
lcall
xor
fwait
daa
mov
ficoml
mov
and
lahf
adc
mov
jns
dec
add
repz
push
cltd
jns
jp
lea
aad
push
adc
pop
inc
cltd
stc
sub
shlb
push
std
sub
pop
test
and
les
inc
push
and
xchg
sbb
stc
sub
adc
push
sub
or
enter
fnstcw
and
pop
mov
pop
xchg
mov
enter
test
movsl
test
xchg
idivb
jo
aas
mov
cmpsb
adc
and
lahf
mov
aas
fidivrs
jg
clc
xchg
insl
adc
mov
test
and
push
sbb
push
add
out
insl
loop
or
jmp
test
call
add
imul
mov
dec
notb
dec
push
cmp
repz
or
xchg
mov
test
and
jno
filds
add
inc
jns
jbe
jmp
xor
or
mov
pop
adc
add
test
sarb
xchg
idiv
pop
mov
mov
std
lods
sahf
int
sbb
jl
push
add
ja
mov
sbb
jae
xor
sub
xchg
xor
aaa
add
lods
or
popa
and
mov
xchg
clc
into
and
mov
daa
testl
shr
call
movsb
ficoml
add
das
pop
lods
inc
in
add
dec
aad
or
stos
repnz
xor
jle
es
shrb
cmpsl
and
mov
mov
fcmovnbe
mov
jo
or
je
ss
icebp
mov
and
inc
mov
lea
xor
andb
add
pop
jae
pop
push
cmpsl
mov
mov
fwait
pop
adc
lret
dec
dec
pushf
aad
lret
mov
lock
jae
push
sbb
xor
mov
add
nop
add
jmp
xchg
ds
xor
fwait
xor
in
dec
mov
movsb
mov
adc
sbb
jns
lods
xor
push
cli
outsl
jmp
adc
dec
mov
ljmp
test
mov
pop
testb
les
xchg
mov
adc
jmp
mov
cltd
stc
adc
testb
rol
in
mov
cmp
xchg
test
or
ljmp
mov
lock
jp
sbb
outsl
pop
fdivl
or
stos
lods
mov
mov
sub
sbb
add
aad
hlt
not
push
shlb
je
and
dec
fcmovnb
mov
ds
xor
stos
out
push
inc
call
lods
daa
xor
bound
shll
lods
gs
fldcw
fists
add
insb
out
cwtl
push
popf
pushf
mov
pop
sbb
dec
or
out
dec
cmpsl
scas
jno
in
ret
mov
jbe
adc
into
mov
lahf
pop
popa
inc
stos
fsts
mov
in
mov
sahf
es
or
into
lret
jo
inc
pop
sbb
clc
jnp
cmp
xchg
mov
iret
push
cltd
popa
or
and
bound
adc
subl
repnz
mov
enter
jl
and
out
or
out
popf
iret
xchg
sbb
sbb
dec
push
push
mov
cli
push
pop
andb
mov
sbb
pop
add
pushf
xor
xchg
loop
mov
jae
adc
sub
xor
push
sbb
ja
mov
pop
inc
dec
xchg
cwtl
out
push
sbb
pop
orl
ds
in
adc
ljmp
mov
pop
fs
jno
pop
pop
in
bound
inc
outsb
movsl
xchg
add
aaa
movsl
xchg
enter
mov
lock
les
cmp
fldenv
inc
in
repnz
lahf
push
jle
mov
or
movsb
xor
into
mov
adc
fs
push
jae
cs
std
in
mov
fstps
pop
aam
pusha
mov
stos
sti
xor
fcmovbe
int
fs
xchg
mov
rcr
test
pop
dec
mov
inc
ret
sbb
push
in
jle
add
mov
sbb
xchg
insl
sahf
sbb
cld
push
jmp
pushf
cli
xor
loopne
sub
lds
and
pusha
lods
pop
loop,pt
fisubrs
insb
sbbb
mov
xor
mov
pushl
mov
cmp
fwait
inc
lret
rol
aam
divb
outsl
add
adc
shll
popa
adc
or
dec
jno
inc
push
pop
lods
movsb
pop
into
mov
fwait
and
cltd
std
lock
mov
dec
mov
stos
leave
add
ret
inc
cltd
pop
js
in
fistpll
add
jge
mov
adc
mov
fcoms
pop
popa
sub
aas
cli
fsubrl
sub
pop
ret
mov
cli
adc
stc
push
std
and
bound
sub
pop
mov
into
or
aad
or
sar
iret
pushf
or
out
rcrl
addr16
adc
in
out
sub
jo
arpl
jecxz
xor
mov
mov
clc
dec
loop
xor
push
sar
ja
pop
mov
pop
xchg
jne
stos
arpl
pop
je
loopne
sub
incb
sbb
std
jg
cmp
mov
ss
fistl
rorb
insb
dec
dec
inc
icebp
and
mov
xor
es
pop
jp
lret
adc
inc
in
or
or
in
insl
add
mov
js
pop
aad
mov
mov
or
cmp
js
mov
scas
jns
cmp
pop
pop
mov
xchg
fistl
pop
shrl
push
out
jne
lret
sbb
sub
iret
scas
pop
or
mov
push
repz
cmp
ret
jle
xlat
iret
dec
add
or
add
lea
xor
addl
mov
jb
inc
mov
rcl
fimuls
jb
iret
lds
pop
mov
in
mov
fidivs
ljmp
pop
dec
pop
mov
fists
sbb
and
pop
mov
popa
dec
cli
mov
mov
sub
and
and
enter
int
cld
xchg
insb
push
xchg
pop
or
dec
lds
inc
fs
cmp
rcrb
orl
xor
imul
xor
divb
pop
xchg
xchg
rcll
test
dec
inc
shlb
xor
push
pop
fnstenv
cmpsl
inc
outsl
ret
mov
ds
test
add
adc
out
imul
mov
test
push
jo
daa
outsb
xor
and
pop
movb
test
ret
add
jae
out
scas
xor
aaa
pop
jno
cmp
iret
divl
stos
popa
rcll
adc
or
cmp
or
movsb
fiadds
cmp
inc
insb
push
jle
aam
int3
in
cmp
or
in
testb
fbld
lds
add
dec
jle
sub
in
cli
lcall
imul
or
fidivrs
push
jmp
popf
in
out
or
daa
xchg
cltd
sbbb
imul
dec
dec
add
aas
icebp
dec
fsubs
xchg
lahf
or
in
add
inc
repz
jmp
mov
mov
add
in
push
lea
out
xor
paddw
in
fidivl
imul
push
mov
lods
push
notb
xor
sbb
mov
jne
sub
fstl
dec
fs
sbb
in
xchg
sbb
int3
xchg
mov
rcrl
ds
inc
dec
das
jecxz
add
ss
xlat
jae
dec
outsb
xchg
mov
sub
outsb
add
ds
push
fwait
loope
mov
enter
dec
shll
and
mov
js
and
into
jae
ja
xchg
iret
jne
xchg
dec
jnp
orb
jge
imul
mov
pop
mov
jns
js
fs
sub
clc
xchg
xchg
out
cvtps2pd
adc
cmp
lahf
sbb
int
lods
outsl
sahf
mov
idivb
cs
cmpsb
orl
jne
xor
sub
jg
icebp
push
cmpsb
dec
push
push
inc
aad
dec
leave
mov
fs
pop
pop
mov
adc
in
roll
int3
lea
mov
scas
mov
mov
stos
pop
xlat
or
fimull
xor
mov
inc
mov
and
dec
roll
cmp
insb
sbb
inc
sbb
loopne
push
mov
add
movsl
push
ret
addr16
add
jnp
addr16
and
jle
add
mov
scas
mov
or
sahf
iret
cli
push
hlt
sarb
or
mov
ljmp
jecxz
enter
ret
mov
je
mov
adc
dec
xor
push
cmp
inc
jge
ds
pop
roll
fdivp
or
outsl
pop
or
shll
dec
adc
push
icebp
fs
lret
cmp
mov
adc
les
subl
push
aad
lcall
in
cltd
rcrl
pop
cmp
and
jg
jl
or
dec
adc
xchg
out
cmc
repnz
add
mov
mov
and
mov
out
dec
xlat
imul
adc
leave
stos
jns
inc
fsubrl
mov
push
cmp
lock
shrl
fisubs
push
adc
mov
adc
push
add
addr16
xchg
imul
xor
adc
test
stos
adc
jb
jb
enter
sti
pop
dec
mov
xor
in
sbb
dec
out
pop
sti
mov
jge
xor
xchg
iret
scas
rorb
sbb
mov
inc
ja
push
adc
inc
pop
call
xchg
add
das
dec
lret
pop
mov
jle
dec
je
xchg
stc
cmp
pop
aam
mov
mov
xlat
jae
push
sub
push
fs
push
in
bound
call
cltd
nop
sub
das
pop
cld
push
pop
pop
mov
push
jecxz
lods
xchg
out
push
cmp
test
mov
pop
mov
scas
je
jg
test
mov
add
mov
mov
flds
cmp
xchg
sub
int3
pop
mov
push
pushf
or
stc
adc
fwait
shrl
mov
cmp
leave
icebp
push
hlt
int
fwait
add
sbb
movl
pop
push
push
movsb
fst
or
adc
add
sarl
xchg
mov
sbb
outsb
mov
std
dec
mov
xlat
dec
lret
jo
jnp
pop
out
pop
outsl
xor
fwait
pop
push
loopne
pop
jg
cmp
pop
mov
fwait
test
out
mov
cmpsl
stc
pop
rcll
std
dec
addl
adc
mov
add
arpl
fldt
pop
test
inc
fdiv
and
rorb
movsb
test
imul
ret
jge
loop
call
jecxz
rolb
pop
adc
dec
sub
xchg
in
mov
sbbl
mov
roll
adc
pop
sbb
lret
jge
adc
ret
repnz
inc
dec
jg
mov
cmc
jmp
outsl
mov
dec
in
or
mov
jge
jns
popf
mov
jo
xchg
sbb
lods
ret
dec
cmp
subl
jmp
jle
adc
inc
and
push
in
call
popf
daa
movsb
aas
ret
jae
jno
mov
mov
xchg
cmp
mov
in
pop
push
pop
int3
mov
je
test
sti
lods
add
adc
test
test
xchg
xor
in
in
lret
pusha
and
xchg
dec
out
dec
mov
lea
add
dec
mov
inc
add
repz
add
enter
or
lea
mov
scas
push
lret
iret
scas
out
or
push
dec
sub
arpl
add
test
in
ja
ds
movsb
pusha
xchg
icebp
sbb
in
loopne
inc
cli
xchg
int3
add
sbb
fs
adc
fcomi
pop
int
fwait
repnz
sbb
insb
inc
cmp
and
adc
xor
sbb
cmp
push
mov
leave
rorb
cmp
pop
sarb
mov
mov
mov
xchg
add
loop
stos
nop
adc
call
push
pop
mov
sub
sbb
jecxz
inc
stos
loop
imul
pop
insb
ja
dec
add
lret
xchg
sbb
cmp
cmp
outsl
ljmp
jl
xchg
push
pop
xchg
jmp
mov
leave
rcr
in
movsl
jle
jno
add
xorb
roll
push
data16
lea
loope
cltd
push
dec
lock
mov
mov
sub
adc
pop
sti
sub
adc
sub
pusha
shrb
lcall
mov
cmp
jmp
adc
loope
fisubrs
xchg
out
cli
push
addl
inc
mov
dec
lds
scas
scas
sahf
mov
loopne
sbb
dec
pop
int
sbb
pop
mov
and
int3
jbe
in
dec
pop
and
aam
leave
mov
inc
pop
xchg
mov
sbb
mov
jbe
mov
mov
cli
add
mov
adc
lcall
mov
sbb
jno
dec
mov
and
insl
in
repz
test
out
ja
add
loop
mov
push
shr
cmp
push
pusha
cmc
jns
push
pop
sbb
lea
ret
sbb
xchg
into
mov
adc
mov
jp
daa
cmp
in
lcall
das
and
cmp
push
repnz
add
outsl
inc
das
mov
add
cmp
add
dec
cmc
popf
mul
adc
out
adc
adc
shrb
push
jae
stos
adc
xor
and
inc
inc
inc
icebp
jmp
cmp
outsb
push
pop
pop
or
popf
int3
sti
sar
stc
into
inc
push
fisubl
gs
into
test
sub
imul
sbb
out
jl
mov
jne
mov
in
cmp
pop
inc
xchg
mov
scas
ret
loop
mull
test
dec
pop
mov
pop
or
sub
xchg
jnp
arpl
gs
pop
popf
imul
xchg
lods
cmp
mov
adc
arpl
scas
jp
sbb
push
repnz
fwait
sti
xchg
push
sub
push
adcl
incl
jmp
add
sub
addr16
dec
mov
mov
lret
ss
int3
xor
add
cld
mov
fdiv
fstl
or
insb
inc
js
or
fs
popf
push
dec
xor
aas
dec
dec
xor
mov
hlt
cmp
ffree
mov
hlt
ds
or
aaa
lcall
rcrb
sbb
test
and
out
mov
out
mov
lcall
into
jp
adc
xor
clc
mov
jle
push
pop
cmp
stos
push
cmp
pop
add
in
jg
clc
jp
andl
xchg
addr16
insb
xor
push
aad
mov
jnp
dec
cld
adc
pop
into
pop
call
jmp
inc
dec
jbe
in
jb
ja
insb
insb
jns
cmp
iret
fstpl
in
test
das
push
stc
adc
mov
add
pop
mov
adc
and
adc
sbb
mov
cld
in
nop
push
jl
stos
xchg
lods
dec
or
or
imul
test
mov
cwtl
mov
add
test
rcll
iret
js
xor
jo
daa
stos
lcall
ret
mov
cmc
push
repz
lcall
cmp
sub
dec
test
sub
mov
outsl
hlt
pop
mov
inc
sbb
adc
and
sbb
cmp
jbe
add
mov
test
ret
adc
scas
xchg
mov
movsl
jae
inc
jg
xor
sub
mov
pop
lcall
je
imul
sbb
and
xchg
pushf
arpl
cmp
les
sbb
pop
cltd
mov
mov
fucomi
mov
jne
repz
aam
daa
xor
das
push
mov
inc
cmc
js
scas
int3
fiaddl
mov
scas
inc
xchg
das
test
repz
adc
imul
ljmp
mov
lcall
out
or
dec
lcall
mov
jns
outsl
sbbb
outsl
repz
clc
and
push
and
sub
movsb
mov
push
fcoms
shrl
cmp
outsl
dec
xchg
mov
les
test
lcall
insl
xchg
jne
add
loope
imul
mov
dec
hlt
push
lods
inc
xchg
insb
nop
cmc
out
out
cmp
mov
shl
add
sar
add
popa
iret
lods
cli
push
xor
mov
xor
push
cmp
dec
sub
je
push
push
cwtl
loope
dec
sub
adc
xor
imul
mov
sub
mov
dec
dec
scas
add
cmc
stos
and
inc
loopne
mov
adc
stos
mov
scas
or
dec
lock
cmp
jl
add
pop
pop
xchg
dec
cmc
inc
inc
and
or
adc
idivl
mov
adc
ljmp
pop
jmp
in
mov
test
insb
sti
xchg
sub
shlb
lret
mov
mov
inc
out
stos
xor
popa
mov
cwtl
pop
mov
mov
sbb
dec
out
or
pushf
stos
rcl
xor
rclb
pop
mov
ja
in
es
mov
stc
jle
xchg
shl
lret
cmp
push
jne
in
andb
push
jge
mov
out
adc
jns
repz
pop
mov
enter
mov
outsb
into
ret
xor
and
hlt
imul
push
shll
jno
std
clc
mov
sub
and
inc
or
lcall
jo
es
and
pop
movsb
xor
loope
or
lea
mov
jo
and
jp
and
mov
push
lea
mov
ret
cmp
cmpsl
stc
xor
idivb
aad
mov
add
push
scas
mov
incl
sub
mov
sub
adc
cmc
lock
xor
inc
push
pop
test
cli
andb
xor
or
in
stos
pop
inc
push
hlt
or
xor
lret
jae
movl
sbbb
pop
pop
test
jo
js
es
xchg
sbb
fcmovnb
and
adc
ret
lfs
dec
adc
xor
add
pushf
push
sub
fmull
in
pop
sub
shll
adc
rclb
out
out
scas
in
ds
sub
adc
dec
lods
pop
xchg
mov
je
sbb
pop
adc
dec
mov
je
cmp
push
cmp
es
movsb
xor
mov
popf
push
dec
mov
ljmp
or
lods
mov
mov
lret
imul
add
and
dec
ja
pusha
js
cmp
sbb
lcall
and
pop
sub
mov
stos
loop
lods
fnstcw
cli
in
pop
nop
sub
xchg
inc
je
mov
adc
xor
push
das
cmp
or
pop
mov
bound
push
inc
pop
adc
mov
vphsubwd
adc
jge
add
lock
jae
lret
mov
pop
dec
pop
ret
jb
pop
or
testl
mov
loopne
lds
adc
push
ljmp
xchg
xchg
int
mov
sbb
sub
loope
push
push
sub
sub
in
lret
paddusb
ja
lods
lret
xchg
int
add
lock
roll
xor
hlt
xchg
ficoms
add
ret
jp
cmp
test
jb
xchg
and
addr16
add
movsl
inc
int
pusha
dec
cmp
xchg
pop
cmc
inc
pop
pushf
jbe
sub
jg
dec
test
sub
sbb
ret
add
call
xchg
cmp
add
sub
out
xchg
lahf
sbb
jb
cmp
movsb
lcall
mov
lret
aad
in
bound
loope
cs
cmpsb
fisubl
std
ret
sbb
xchg
mov
sahf
push
jae
inc
push
cmpsb
push
dec
std
mov
into
imul
mov
aad
push
test
cmp
lods
push
fcomps
inc
pop
mov
push
mov
or
stos
push
or
add
jbe
repnz
nop
iret
mov
stos
fcomps
popa
mov
insb
and
negl
pusha
mov
dec
sbbb
in
push
bound
mov
cmp
mulb
loope
mov
mov
jecxz
add
mov
addr16
in
movl
daa
mov
xor
mov
out
pop
test
movsl
xor
cmpsl
jp
mov
sub
psrlq
imul
or
xchg
rcl
mov
cmp
fwait
ss
mov
orb
stos
popf
icebp
xchg
cltd
pop
imul
ret
push
stos
pop
and
arpl
int3
enter
cmp
mov
repz
inc
and
sti
sub
fstpl
mov
xor
imul
subl
and
jp
lea
nop
addl
mov
int
pop
ljmp
lea
movsl
mov
mov
mov
ror
cltd
scas
stos
das
clc
and
adc
mov
push
pushf
jecxz
nop
ficoms
and
sbb
mov
pop
mov
mov
movsb
push
sub
sbb
push
xchg
repnz
fs
adc
popf
xlat
cs
aas
sbb
shrb
sbbb
jbe
daa
add
cmc
add
jg
or
mov
std
enter
scas
icebp
mov
mov
test
rcr
in
push
jo
out
aad
xor
jecxz
inc
xorb
add
rolb
mov
push
sbb
jae
aaa
sbb
mov
dec
js
loop
subl
sahf
mov
dec
aas
imul
shlb
pop
adc
mov
inc
sub
test
jp
add
dec
mov
mov
or
push
jl
mov
mov
mov
dec
ja
sbb
lcall
mov
pop
repz
dec
pusha
jle
add
pop
sbb
sbb
pop
je
jns
sbb
or
add
pop
push
aad
in
sub
add
daa
movsb
mov
mov
cltd
push
test
mov
jb
pop
sub
pop
leave
xchg
insb
cmp
inc
jl
xchg
iret
cs
and
out
and
sub
outsb
jns
mov
inc
dec
inc
pop
out
sahf
mov
dec
cmp
add
sbb
ret
mov
and
call
mov
pop
clc
in
aaa
jmp
loopne
xchg
xchg
lret
or
inc
popa
lret
xor
std
sub
pop
shl
ret
add
xor
or
cmpsl
in
push
cmp
sti
ljmp
push
push
or
sub
sbb
test
xchg
sub
inc
push
pop
mov
xchg
pop
sub
fisttpll
push
repnz
dec
cmpsl
and
cmp
bound
sbb
out
lods
mov
movsb
in
imul
dec
xor
push
mov
movl
loope
jmp
xor
arpl
cmp
das
ret
inc
dec
sahf
add
push
adc
and
stc
clc
xor
push
sbb
xor
sub
cmc
into
add
out
mov
mov
pop
mov
pop
jbe
mov
sbbb
cmp
int
movsl
add
data16
int
clc
dec
outsl
fsts
fisubs
cmp
add
sub
add
outsl
popa
xchg
movsb
popa
popa
mov
sbb
sub
xor
repnz
xchg
das
jae
imulb
addr16
add
mov
push
sub
aad
xchg
xlat
enter
jl
jg
adc
mov
inc
jbe
idivb
mov
test
popa
aaa
orl
dec
cmpsb
push
jbe
push
lahf
les
pop
mov
cwtl
pop
shrb
jge
fwait
cmp
xor
and
pop
lret
mov
insb
repnz
in
lcall
sbb
mov
mov
lock
rcrl
push
mov
nop
leave
add
push
mov
xorb
ljmp
or
fs
test
pop
sti
sub
xor
xchg
fnstenv
sub
outsb
clc
out
mov
dec
sbb
dec
add
mov
inc
mov
add
popa
inc
aas
rol
shl
xchg
aad
mov
ss
adc
mov
adc
mull
sub
subb
pop
gs
and
xchg
dec
lcall
inc
and
cltd
jl
xchg
ljmp
mov
adc
xor
add
popa
add
and
jb
loope
sti
mov
push
xchg
idivl
adc
adcb
pusha
arpl
fildll
xchg
cs
mov
lret
xor
mov
or
push
sbb
xchg
sbbl
pusha
aaa
mov
cmc
shr
ffreep
mov
cmp
sbb
mov
push
xchg
cmp
jo
rcll
push
and
insl
mov
or
push
int
sub
mov
sbb
adc
sahf
inc
or
ds
loope
cmp
jge
icebp
cs
fidivl
cli
fsubs
pop
repz
outsl
loope
cmp
push
jae
std
repnz
dec
push
outsb
cli
jbe
add
pop
xchg
push
out
sti
mov
cmp
push
push
dec
and
cwtl
notl
das
lock
movsb
into
sub
xchg
or
into
and
mulb
sbb
add
lret
jecxz
fwait
lret
xor
add
xchg
push
stc
sbb
push
daa
push
xchg
insb
in
icebp
sbb
xchg
or
sbb
and
dec
cmp
int3
pop
inc
xlat
in
or
jbe
ss
jl
test
add
xchg
clc
test
out
sbb
jne
push
dec
cmc
add
or
sub
leave
mov
push
lret
insl
jle
xor
les
aas
or
in
and
inc
aad
fcmove
das
cmp
in
fimuls
ss
inc
in
in
xchg
imul
les
mov
das
dec
sub
and
mov
cmc
fsts
and
add
adc
addr16
scas
inc
lods
mov
pminub
leave
inc
mov
sbb
movsl
popf
sbb
inc
icebp
xlat
scas
out
ja
mov
jo
mov
add
cmp
pop
lret
jg
lahf
cltd
into
push
push
add
testl
je
cli
fs
jp
lret
lret
pop
fbld
negl
lcall
enter
add
ret
pop
dec
jg
cmp
cmpsb
lret
inc
mov
pop
shlb
push
lds
imul
ja
bound
shll
std
pop
adc
aad
dec
inc
ljmp
stc
test
das
cmp
xchg
xor
sub
das
and
jnp
jmp
into
test
int
and
iret
roll
adc
mov
jle
out
push
sbb
sarb
dec
fs
jno
sbb
jge
testb
add
push
insl
sub
addr16
sub
popl
mov
lea
lcall
repnz
mov
xchg
and
cmpsb
sub
jae
cs
mov
mov
sub
dec
push
xor
imul
mov
add
adc
pop
jle
sub
mov
leave
lock
push
neg
jle
dec
dec
or
push
add
loop
dec
fwait
movl
pop
loope
outsb
pop
test
mov
xor
roll
out
dec
test
or
xor
xchg
ficoms
repnz
into
outsb
push
pushf
mov
je
adc
and
push
js
xchg
push
ficompl
daa
cmpsb
xorb
xor
fs
and
mov
jp
xor
mov
bound
lret
mov
xchg
aad
repz
or
inc
dec
push
cmp
pop
dec
inc
push
movsl
shlb
mov
stc
lret
outsl
ja
sahf
out
sbb
mov
push
lea
cld
dec
mull
cmc
jg
sti
or
adc
mov
mov
mov
jge
pushf
cmpsl
je
fsts
inc
jb
lock
push
das
pop
roll
push
cmp
jmp
test
scas
lods
rorl
fwait
mov
mov
adcl
andb
add
pop
or
pop
fucomi
repnz
leave
push
adc
jae
pop
fsubrl
fwait
int
push
cmp
add
cltd
dec
out
cmp
fsubrs
jne
cmpsb
dec
mov
xor
ja
testb
push
faddl
cld
mov
jnp
shll
cmp
jne
in
dec
shll
in
ret
andl
hlt
sbb
inc
xchg
jl
lahf
pop
js
rorb
sub
and
cmp
mov
lret
inc
lods
jg
lahf
push
ja
ja
push
mov
or
xchg
inc
ret
hlt
jecxz
xor
dec
insb
inc
sbb
sub
fldcw
inc
fcoms
and
sti
insl
lock
push
or
cmc
fucom
adc
enter
out
push
loop
pop
movsl
cld
fadds
aam
notl
gs
or
clc
add
imul
cmpsb
mov
and
mov
fnstcw
sbb
mov
nop
fwait
mov
outsl
rclb
ja
js
int
insl
adc
xchg
shl
add
lret
mov
insl
pop
lea
dec
fiaddl
fmul
mov
push
adcb
cmpsw
cmp
mov
imul
das
lods
dec
sub
xor
arpl
sub
inc
aas
dec
or
divl
cmp
movsl
push
push
xchg
push
or
popa
mov
jo
mulb
sub
fcompl
mov
les
ret
dec
int3
fs
loopne
or
sbb
pop
xchg
jbe
std
pop
lock
imul
sub
std
and
loopne
ljmp
popl
shl
dec
in
inc
pop
insb
cmp
jno
xchg
dec
jne
outsl
dec
imul
inc
scas
ja
add
sub
popf
adc
jno
mov
aam
imul
sub
sub
sti
xor
cmp
sbb
repz
push
movsl
decl
popf
outsb
jp
cmp
pop
mov
pop
push
dec
sbb
mov
cmp
sbb
and
clc
icebp
inc
mov
aam
movsl
xchg
imul
cmp
cld
cs
lret
pop
outsb
push
dec
pop
mov
popa
xchg
push
das
insb
ret
or
xchg
addr16
negb
sbb
inc
sub
cmp
xor
pop
xor
dec
mov
repnz
add
add
rcrl
out
int3
outsl
sbb
push
int
add
dec
mov
outsl
add
and
push
adc
in
aam
loop
xor
out
sbb
testl
or
add
mov
add
cltd
bound
outsl
mov
mulb
leave
nop
divb
inc
xchg
xchg
dec
sub
cli
bound
rorl
sti
lock
pop
ret
das
dec
and
fldcw
imul
aaa
daa
mov
sti
sbb
je
repnz
popf
cwtl
cmove
add
xchg
jl
cld
jne
pop
dec
pop
daa
cld
pop
rolb
sub
inc
mov
and
dec
dec
jge
js
and
negb
das
sub
dec
insb
xor
xchg
inc
jb
push
adc
jno
or
fidivl
add
pop
roll
xor
ja
movsb
jbe
push
aam
and
sbb
lods
mov
add
adc
sub
pop
or
lea
cs
push
sarl
xor
push
pop
addr16
loop
rclb
add
cmp
test
cli
cltd
scas
and
inc
sahf
ds
adc
sub
sub
pop
pusha
push
mov
int
dec
sbbl
lcall
mov
adc
ja
mov
jecxz
fcoml
dec
adc
loopne
sbb
fldl
test
test
fisubl
sub
flds
mov
xor
mov
sbb
shll
sbb
mov
mov
shll
test
pop
cmpsl
loope
push
repnz
mov
pop
loope
rorb
add
cmp
addl
dec
jnp
push
push
or
cmp
jmp
pop
inc
or
inc
gs
jp
or
cmp
shl
data16
lock
mov
loope
mov
lods
mov
xchg
jge
jmp
xor
iret
xchg
cmp
push
mov
inc
fbstp
jge
push
pop
sub
push
xor
sbb
out
push
cmp
cwtl
arpl
xor
and
mov
je
xchg
push
cli
cwtl
sbb
jmp
sub
aam
dec
scas
pop
outsb
inc
lea
jecxz
sahf
dec
pop
push
pusha
pop
add
ds
mov
push
lock
jecxz
xchg
and
cld
aaa
cmp
fcomp
xchg
dec
push
and
fldenv
fucom
lret
test
push
jo
push
jmp
lahf
out
xchg
mov
sahf
fwait
mov
adc
inc
mov
fwait
dec
pop
shlb
mov
adc
outsb
es
mov
cli
push
sub
mov
push
fldcw
js
mov
stc
pop
jne
push
jg
nop
xor
int3
adc
fimuls
add
mov
jno
jg
test
stc
jl
or
fimull
enter
pop
repz
pushf
xor
clc
aaa
inc
shl
in
popa
jne
cmp
adc
push
pop
insl
xchg
push
ja
aaa
cmp
adc
xlat
out
lcall
ret
loope
fsubr
or
divl
xor
sbb
adc
jp
jmp
into
and
cld
xchg
insb
mov
xchg
mov
mov
in
or
ret
loope
lret
int3
add
outsl
inc
inc
js
pop
loope
sti
sbb
out
cli
test
xchg
mov
cld
imul
scas
push
xchg
adc
jb
push
sub
cld
cs
jns
sub
pop
scas
pop
mov
push
pop
repnz
xor
inc
dec
movsl
mov
ficoml
test
add
push
cltd
insb
mov
outsb
xchg
or
sub
fstl
out
addb
addb
lods
ss
aad
jnp
mov
and
jae
arpl
out
and
sbb
mov
psubusw
jnp
dec
pop
push
adc
stc
mov
or
dec
jo
cwtl
lds
out
push
stc
and
rcrl
fmull
mov
andb
inc
mov
mov
stc
mov
sbb
inc
lahf
mov
shl
fs
or
xchg
fwait
mov
push
mov
xor
dec
dec
dec
pop
adc
mov
ds
mov
insb
fstpt
cs
cmp
xchg
lret
cmp
bound
and
inc
out
imul
cmp
xor
xor
xor
lods
push
in
out
test
push
or
dec
scas
fwait
inc
int
gs
mov
out
in
push
aam
pop
dec
dec
mov
jecxz
or
inc
cmc
pop
ret
xchg
sahf
test
fisubl
jno
ret
jo
push
mov
sbb
rcrl
adc
pop
sahf
ret
adc
psraw
aaa
inc
and
or
fsubrs
mov
sbb
arpl
mov
xlat
int3
inc
repnz
jecxz
cld
jg
js
loope
cmp
xchg
or
inc
insb
sti
jno
sub
sbb
stos
popf
mov
jnp
inc
push
rorb
inc
dec
es
mov
icebp
jne
pop
test
cmp
add
mov
cmp
pop
jbe
jp
jecxz
push
dec
pop
and
out
push
push
xor
mov
and
sbbl
iret
inc
lea
push
clc
mov
call
stc
cmp
jge
and
xchg
dec
fidivs
fwait
jmp
cmpsl
ljmp
arpl
mov
hlt
orl
push
nop
cmp
xor
cli
jle
mov
jo
shll
js
stos
outsl
pop
lret
call
xor
pop
sbb
jecxz,pt
lcall
push
sti
jecxz
ljmp
and
xor
insb
icebp
jb
call
jle
popf
pop
ds
push
int
iret
inc
shl
sub
pop
sub
mov
add
mov
sahf
sbb
sub
insl
adc
test
lret
shlb
enter
mov
mull
xchg
fbstp
inc
push
mov
jg
and
pop
add
cmp
inc
stos
lahf
out
cltd
jl
mov
lods
jnp
mov
movsb
mov
popa
aam
add
xchg
lea
cmp
push
ja
daa
sub
mov
pavgw
or
mov
cmpsb
jp
xor
pop
pop
in
hlt
jo
pop
mov
in
ljmp
pop
test
sbb
pop
adc
dec
pop
xchg
in
mov
scas
mov
divl
pushf
jle
into
fimuls
xchg
sbb
mov
sub
sub
rolb
movsb
repnz
push
xchg
dec
int
and
out
pop
repz
jbe
ret
mov
into
movsb
testl
xor
and
in
out
out
xchg
add
inc
sti
mov
fcoms
fs
andb
inc
mov
or
cmc
test
add
dec
mov
inc
cmpsl
jmp
cmp
pushf
repnz
pop
jmp
dec
sub
pop
jmp
and
jnp
lods
nop
inc
jb
fisubrs
jno
sub
or
mov
mov
xchg
rcr
rclb
iret
jbe
xor
adc
mov
aad
cwtl
les
mov
mov
or
fimuls
aas
inc
cltd
mov
sbb
out
dec
add
imul
or
loope
ret
addr16
jmp
aaa
mov
jae
popl
ret
dec
inc
stos
dec
pop
das
fidivl
add
es
into
xchg
xlat
gs
fisttps
movsb
mov
or
fcmovb
icebp
and
xchg
and
cmc
xchg
and
nop
lahf
ret
and
mov
cltd
mov
cmpb
mov
sbb
push
iret
mov
sbb
fidivrl
or
lock
inc
mov
das
jae
dec
in
inc
enter
pusha
rcrb
orl
push
repz
enter
inc
jge
jl
dec
outsb
pop
fwait
mov
xchg
imul
jb
push
faddp
mov
jp
inc
repz
mov
je
mov
dec
addr16
cltd
push
leave
jg
lea
jmp
jl
notl
lcall
push
push
mov
xorl
lea
fildl
inc
imul
cmp
push
fadd
inc
cmp
sub
pop
idivl
dec
mov
and
xchg
inc
sarb
icebp
mov
fldenv
sbb
jl,pt
pop
pop
ds
jo
adc
arpl
inc
cmp
arpl
dec
sahf
mov
and
rorb
or
outsl
mov
and
sub
incb
mov
adcb
sub
aad
scas
int
testl
dec
pop
in
jg
pop
fadd
cmp
push
clc
aam
fwait
pop
dec
addr16
xor
pop
lods
pop
rcrl
pop
fwait
loope
pop
fwait
mov
xchg
das
fdivs
divl
cmp
or
sbb
push
pop
adc
fwait
out
push
pop
dec
testb
mov
jo
sti
adc
scas
pop
gs
ja
jl
out
pop
jle,pn
ss
xor
cs
xchg
mov
lcall
fistl
movsl
lea
dec
mov
cmp
cmp
fbld
insb
out
test
jg
push
sub
rcrb
pop
ror
pop
xor
pop
mov
fsubrl
xorb
mov
ficoml
mov
lds
movsb
clc
mov
mov
push
shrl
das
test
mov
dec
pop
shrl
iret
addb
pop
dec
dec
dec
scas
fwait
mov
xor
fwait
xor
sbb
ljmp
and
and
jecxz
lods
mov
mov
add
or
add
inc
push
sbb
lret
xchg
es
rclb
mov
arpl
xchg
jo
sub
sbb
xor
pop
pop
mov
dec
inc
mov
dec
mov
inc
xlat
adc
add
lds
push
aas
or
rcrl
mov
xor
pop
popa
popa
push
loopne
shrl
lock
lahf
cld
push
xlat
insl
and
in
mov
adc
fucomi
mov
je
movsb
cltd
test
aas
hlt
iret
popa
add
mov
dec
into
fidivrs
xchg
pop
outsl
xchg
icebp
out
movsl
sbb
imul
sahf
push
mov
dec
jge
mov
adc
stc
inc
lock
aas
xchg
fdivrs
or
pop
add
outsl
pop
push
loop
xchg
leave
call
xor
mov
push
andnps
mov
cmp
adc
ja
jmp
mov
dec
or
hlt
add
into
pop
or
push
fisubs
xor
outsb
in
inc
fidivl
dec
dec
testb
sub
ret
fcmovnbe
pop
insl
push
pop
mov
fmul
aas
iret
popa
js
rcl
mov
inc
jl
push
cli
push
inc
in
je
fs
sti
mov
out
pop
mov
jecxz
mov
dec
and
out
push
jl
mov
aad
cmp
movsb
out
cmp
hlt
jb
xor
sub
daa
std
sub
ds
xchg
pop
dec
aas
gs
rorl
jle
mov
fstl
xor
sub
cmpl
fwait
insb
lds
fstps
xor
repnz
ret
or
out
addr16
add
mov
loopne
sub
lea
inc
out
fldcw
jne
fsubs
xor
icebp
pop
xchg
mov
les
cs
out
imul
ja
xchg
xor
test
lea
aas
dec
out
cmc
lret
enter
jp
cmpsb
dec
xor
lcall
std
cwtl
ffree
outsl
xor
adc
inc
in
xor
cmp
push
stos
add
pop
call
flds
scas
push
adc
loopne
gs
cmp
mov
std
mov
hlt
je
fidivs
cltd
jle
push
inc
cmp
inc
orl
push
orb
sub
mov
lods
add
mov
mov
std
popa
or
or
adc
mov
pusha
stos
les
xchg
mov
ja
cli
xchg
loope
cmp
xorl
imul
cmp
out
les
xor
push
fistpll
sti
inc
loopne
mulb
mov
clc
rcl
fisubrl
aam
cmp
in
sbb
push
fistl
hlt
ret
gs
repnz
fwait
rorb
pushf
mov
mov
lea
imul
loop
cmp
pushf
push
cmpb
pop
dec
fisubrl
leave
inc
and
int
and
or
adc
loop
fwait
cmp
jmp
sbb
scas
js
int3
out
jns
cmpsl
ljmp
push
pop
mov
test
hlt
aas
xlat
in
loop
int
bound
and
icebp
mov
adc
jo
mov
sti
push
mov
jns
stc
push
cmp
cmc
sub
lods
jne
gs
idivb
icebp
mov
aas
add
add
fidivl
imul
sbb
mov
out
int
pushl
push
fwait
stos
ljmp
dec
xchg
les
jg
adc
movsb
pop
sti
dec
xor
nop
in
mov
xchg
mov
and
in
stos
ret
neg
xor
jae
js
iret
mov
stos
in
in
and
xor
jmp
xor
repnz
fstpl
jp
jecxz
xchg
pop
imul
outsb
dec
xor
jecxz
fldcw
dec
xchg
mov
and
cmp
mov
insl
bound
gs
ret
outsl
xchg
andl
repz
imul
popf
call
xchg
pop
cmpsb
adc
data16
iret
and
std
jecxz
cli
ucomiss
push
inc
or
pop
mov
mov
xchg
inc
shlb
stos
mov
add
jo
cmp
cli
adc
mov
andb
popf
push
daa
test
ror
int
arpl
insb
sbb
out
cmp
ss
sbb
scas
lea
pushf
outsl
mov
xchg
pop
jnp
add
or
inc
rcl
dec
or
ds
adc
cmpsb
out
popf
pop
lock
enter
das
fnsave
xor
cmpsb
jl
sbb
xor
dec
mov
int3
xor
or
jl
movsl
mov
xchg
push
jmp
add
scas
adc
cmp
imul
and
mov
xor
stc
or
pop
dec
mov
cmp
clc
test
loop
lret
loopne
nop
call
jbe
mov
addr16
dec
mov
adc
lea
inc
push
or
aaa
xchg
out
les
mov
xchg
imul
cmp
imul
ret
enter
adc
jo
add
dec
mov
hlt
ret
push
sahf
lods
and
mov
fisubl
mov
test
mov
add
xchg
subb
cmp
sbb
bound
into
lea
lds
arpl
mov
dec
inc
inc
pop
adcl
cmpsl
cmp
mov
push
lcall
jg
jp
push
ds
ret
pop
or
cmp
mov
inc
fwait
pop
or
imul
jge
das
dec
push
jb
icebp
fistl
sub
push
loope
xor
cli
mov
fwait
es
push
cmp
jns
and
push
jbe
sahf
scas
add
jl
or
xchg
or
jle
dec
inc
cltd
sbb
lods
pop
insb
pop
and
mov
testb
jg
jle
pop
fmull
mov
scas
inc
insl
ret
mov
imul
shll
lahf
sbb
dec
sbb
push
pop
std
mov
in
mov
cmp
icebp
xchg
xchg
outsl
dec
imul
aad
pop
lea
sub
js
jbe
sub
or
js
dec
aaa
movsb
movsl
popf
pushf
scas
or
nop
sub
xor
push
hlt
clc
sub
add
xchg
push
fistpl
xor
call
repz
cmp
enter
jl
call
sbb
es
mov
xlat
sbb
sub
lock
lock
sbb
sarb
sbb
inc
pop
mov
xor
lods
and
bnd
inc
push
movsb
jae
cli
shll
addb
repnz
sub
ds
scas
dec
orl
xchg
in
mov
fwait
inc
xor
cmp
aaa
jg
aaa
jae
addr16
cmp
jmp
mov
xlat
into
mov
out
and
jle
dec
das
cmp
lahf
add
cmpsb
sbb
mov
cs
pop
push
stos
outsb
inc
xor
pushf
and
pop
shr
cltd
mov
xor
testl
xchg
cwtl
cmp
lods
scas
dec
or
dec
push
xor
mov
mov
xlat
adc
adc
aad
mov
loop
pop
mov
es
xchg
test
int
lahf
fnsave
pop
cmp
xor
cmp
sarb
jg
insb
ss
fs
lea
pop
mov
xlat
jb
mov
sti
es
fwait
test
push
xor
addr16
mov
add
sbb
jmp
lock
cld
push
mov
hlt
popa
fdivrl
or
data16
daa
dec
ljmp
mov
bound
jo
mov
testb
enter
push
push
xlat
rolb
jnp
push
lcall
aad
test
aad
sbb
dec
push
push
mov
push
mov
fbstp
inc
sub
cld
into
ret
xchg
es
xchg
and
fsubl
cltd
mov
xchg
test
and
lcall
shrl
arpl
jne
je
adc
bound
inc
mov
sbb
xchg
pop
test
rol
sub
cmpsl
cmpps
testb
aas
out
mov
inc
ret
insl
push
jne
and
push
cmp
int3
add
sti
cmp
repz
adc
pop
xor
or
incl
push
cs
into
insl
fsubrl
rolb
test
xor
jo
sahf
std
fstl
lods
sbb
orb
std
mov
jae
push
adc
lods
aam
mov
sub
movsl
lcall
mov
dec
dec
jo
inc
addl
sub
stos
or
push
aaa
loopne
and
shll
sbb
xchg
pop
inc
pop
fs
imul
mov
sub
dec
ret
iret
lock
rclb
mov
push
dec
and
shlb
push
xchg
mov
xor
xchg
jo
lgs
sbb
adc
pop
push
testb
sub
aas
mov
sbb
push
sub
push
push
inc
xchg
mov
xchg
cmp
sub
clc
mov
jno
push
cmp
and
jg
stos
inc
jnp
orb
stos
addl
adc
inc
or
leave
lret
sub
cmc
loop
or
js
pusha
test
mov
loopne
adc
shlb
hlt
xor
ret
jo
adcl
aad
mov
xchg
adc
mov
adc
pop
push
mov
push
jbe
mov
lret
dec
cli
std
and
adc
add
in
pop
sbb
cwtl
inc
cmp
scas
add
mov
outsl
pusha
mov
mov
jb
jne
aad
lods
sti
ss
or
lock
jle
outsl
fistps
xchg
adc
dec
xor
call
shl
sub
test
arpl
push
mov
and
aaa
shrb
pop
adc
pop
inc
ret
mov
sbb
add
push
inc
push
jle
jle
pop
lcall
fwait
or
fstl
jo
int3
test
cld
pop
and
call
xlat
cltd
xchg
imul
ja
in
sahf
cwtl
mov
out
mov
sbb
in
in
in
adc
push
aas
dec
arpl
sbb
cmpsl
xchg
adc
xchg
push
mov
mov
jecxz
lods
lds
push
in
mov
jp
sti
mov
or
ja
xor
dec
xor
fisubl
nop
cmp
mov
or
popa
sbb
and
ret
jns
pop
repz
gs
lcall
adc
mov
imul
pop
mov
mov
or
fdivs
mov
cwtl
test
fidivl
negb
ret
xchg
and
inc
add
cmpsl
mov
xor
fsubl
or
fcoml
cmp
pmulhuw
mov
jg
mov
xor
jp
sub
mov
ds
outsl
jp
aaa
xor
adc
inc
adc
pop
out
cltd
xor
js
push
xchg
xchg
call
cmp
ds
cmpl
dec
and
lret
fcomps
fdiv
lret
jge
pop
and
outsb
lods
cmp
sti
or
jp
out
mov
pop
cmp
jg
jl
lea
inc
aad
inc
cmp
imulb
mov
inc
add
inc
xchg
in
sub
sbb
mov
or
jb
bound
ret
out
sub
xlat
mov
sub
ljmp
sbb
jp
pop
jnp
lret
xchg
sahf
or
pop
ljmp
mov
inc
roll
mov
mov
call
fmull
dec
std
rol
dec
jecxz
mov
sub
push
xor
arpl
xchg
cmp
mov
lret
jne
xor
xchg
stos
sbb
test
inc
nop
rol
test
loopne
int3
lods
and
das
test
ljmp
xchg
ss
mov
leave
aaa
mov
cmp
les
adc
cmp
add
and
cmc
and
popa
and
repz
jg
mov
push
cmp
push
jmp
aam
addr16
aam
cld
adc
out
addr16
pop
push
jmp
rorb
mov
sub
xchg
clc
xor
inc
in
adc
icebp
or
dec
and
pop
leave
push
mov
inc
or
rclb
sub
imul
rcll
jge
adc
sub
gs
test
xchg
push
adc
cwtl
mov
lret
sbb
mov
out
ret
test
cmpsl
es
jno
scas
sahf
out
ljmp
add
es
loop
cmpsl
idivl
jae
mov
mov
push
mov
aam
xor
inc
mov
hlt
das
inc
jge
mov
imul
jecxz
mov
pop
pop
addr16
jns
sbb
cs
imul
sbb
popf
adc
mov
mov
jp
pusha
mov
shrl
push
roll
mov
sbb
adc
daa
cmpsb
mov
sub
xor
gs
sbb
cmpl
or
mov
mov
cmp
dec
push
mov
cmp
imul
stos
les
ja
sbbl
in
jge
movb
jecxz
adc
sub
xor
jb
mov
jp
ret
es
ds
inc
leave
sub
mov
mov
cmc
xchg
dec
pop
je
pop
mov
imul
stos
cmp
cmp
int3
sub
std
cmpsl
popf
in
lret
pop
fiaddl
jmp
sbb
jb
ja
fmuls
or
lret
push
stos
incb
add
cmp
in
and
pop
mov
arpl
add
push
testb
push
mov
xchg
inc
cld
sub
sti
sbb
insb
jle
stos
pcmpeqd
jnp
xor
stc
sbb
mov
js
imul
rcll
jo
fnsave
dec
xor
pusha
cld
jle
scas
xchg
fdiv
add
push
lcall
sub
mov
sbbb
adc
call
mov
xor
jge
mov
sbb
scas
movsl
rcr
insb
xchg
orb
xchg
mov
jg
fwait
addl
adc
sahf
adc
mov
jmp
and
sub
fidivrl
notl
fwait
ret
ljmp
or
fimull
lahf
movsb
lcall
mov
leave
xor
mov
cs
pop
adc
call
pushf
pop
pop
pop
xor
add
push
cli
inc
or
mov
aad
lcall
dec
aad
stc
adc
aad
lret
je
lods
pusha
stos
outsb
sahf
sbb
cld
cmp
dec
call
cmc
cld
lds
sub
mov
iret
test
aam
into
push
andl
test
jbe
jge
cmp
and
push
mov
jne
push
arpl
aas
clc
xor
adc
jo
xchg
adc
roll
int3
and
push
lahf
lret
jbe
xor
fidivrl
into
shl
inc
ja
mov
sub
xor
cmp
lds
adcl
lock
pushf
std
int
cmc
bound
xchg
mov
out
pop
jmp
bound
or
push
test
cli
into
lods
cmp
out
orl
xor
jb
scas
movsl
add
in
or
subb
sub
ja
sbb
and
rcrb
out
and
mov
dec
es
sti
jb
test
pop
mov
cmp
ret
inc
mov
lods
and
test
pop
je
fisubl
sbb
sbb
rorl
dec
adc
adc
cltd
cmp
out
sub
dec
or
dec
ficoml
repnz
jne
ss
test
jne
fwait
xchg
faddl
or
cld
mov
imul
test
sub
mov
mov
jmp
sub
sub
mov
dec
outsl
pop
hlt
imul
cmp
pop
ljmp
stc
scas
push
mov
movsl
pop
inc
pop
dec
filds
inc
inc
jge
push
out
sbb
push
mov
push
pop
pop
sti
adc
enter
addr16
adc
add
cli
push
mov
pushf
jns
inc
popa
xor
std
out
lods
push
jle
xchg
das
rorb
scas
inc
xlat
shrb
xor
mov
leave
jne
inc
sbb
pushf
enter
aad
mov
mov
push
xorb
cmpsl
push
xor
lea
cld
aaa
idivb
sub
testb
jp
in
push
sti
push
lds
adc
xchg
cmp
test
lret
mov
das
fidivs
pop
mov
std
je
pop
fidivrs
ds
rclb
icebp
sbb
aam
adc
pusha
orb
dec
xor
xor
stos
imul
lahf
cmpsb
xor
cmpsl
stos
pop
xorb
add
insl
sti
fstpl
cmp
mov
or
xchg
jne
stos
es
mov
les
cmp
dec
add
inc
pop
sub
loopne
out
fistps
andb
or
lds
loop
int3
loop
push
jecxz
cmpsb
jle
mov
inc
inc
mov
pop
sbb
iret
test
push
add
fstpt
sbb
ret
mov
jge
add
mov
ret
xchg
je
sbb
adc
lret
mov
in
add
scas
mov
jns
dec
scas
movsl
jns,pn
fstpl
xor
jl
in
pusha
ljmp
stos
orl
test
test
and
push
lods
cltd
lret
popf
ret
mov
pop
sub
lds
nop
cs
dec
sub
nop
loope
mov
stos
push
cltd
xchg
and
lret
jl
lret
insl
push
jbe
sbb
adc
les
lods
push
sub
jle
mov
sbb
fdivrl
enter
inc
sbb
sub
adc
andl
enter
je
test
dec
jbe
adc
fstpt
leave
pop
dec
cmp
js
cmp
lea
cmp
push
movsl
dec
or
dec
mov
sbb
inc
sub
push
and
xchg
mov
sub
aaa
out
sbb
mov
mov
rcrl
pusha
andl
mov
cmp
push
cs
and
js
push
fistpll
hlt
jmp
inc
sbb
mov
adc
std
push
mov
dec
xchg
outsb
mov
sbb
cmp
jne
test
clc
inc
sub
dec
mov
aas
xchg
dec
adc
dec
sbb
loopne
cmp
push
pop
loope
in
int3
mov
sar
add
pop
clc
and
pop
mov
adc
pop
jle
xchg
int3
loopne,pt
sti
aad
cli
mov
inc
lock
push
push
popf
sti
adc
sbb
jg
cmp
filds
ljmp
cmp
or
dec
jns
mov
inc
popw
cmc
cmpsb
pop
xchg
stos
cmpsb
sub
cltd
ds
add
and
dec
inc
mov
xor
jmp
incb
push
ja
ljmp
shr
std
cmp
clc
fnstenv
lret
cmp
lods
pop
dec
addr16
mov
mov
mov
shl
pusha
pop
aam
out
repnz
jae
fiaddl
jmp
jmp
pop
stos
cmp
sub
sub
jne
jno
cmc
push
cmpsl
clc
add
or
movsb
pop
push
jle
lcall
dec
pop
mov
ret
in
jl
sbb
fsubs
arpl
ss
dec
ja
inc
movlps
xchg
lds
cmpsl
xchg
xor
dec
lock
mov
jb
arpl
cmp
sar
jecxz
sbb
mov
imul
pop
cmp
adc
ret
testb
xchg
test
out
pop
nop
dec
test
aam
pop
mov
loope
or
and
call
call
out
sub
ret
call
mov
cltd
scas
inc
mov
inc
or
jp
insb
sbb
adc
lahf
int3
mov
dec
and
or
xlat
push
mov
jo
lahf
jno
neg
fimuls
out
les
mov
mov
pop
mulb
outsb
lods
imul
xchg
xchg
loopne
push
xchg
movsl
call
fcmovne
mov
cmpsl
mov
cmp
mov
sbb
fildl
cmp
movsb
inc
jge
addl
push
test
std
cmp
orl
sub
cli
xor
pop
ret
adc
jl
out
adc
push
adc
xchg
andl
xchg
ret
test
cmp
adc
and
or
ret
sahf
pop
mov
add
das
scas
test
lock
or
das
scas
dec
xchg
shrl
mov
jmp
or
fldpi
pop
jb
jae
jle
lock
mov
lret
mov
lret
sbb
popl
gs
add
sbb
jo
mov
sub
mov
mov
lcall
pop
pop
dec
sbb
ljmp
test
lcall
call
cmpsb
bound
adc
negl
jp
std
lea
popa
rorl
stos
jp
addb
push
push
mov
das
jmp
adc
bound
icebp
inc
fistps
pusha
push
push
pop
add
lods
out
inc
inc
lods
int3
scas
add
imul
inc
pop
or
push
loop
out
lock
in
clc
pop
inc
push
mov
mov
int3
sbb
mov
xor
pop
add
mov
or
aad
xor
enter
push
es
shlb
orb
cmc
loopne
jo
xchg
ficomps
pop
or
jg
cwtl
inc
adc
je
fwait
mov
sbb
add
or
test
test
nop
xchg
push
cmovae
mov
push
and
push
iret
add
jl
jo
jl
in
mov
lret
les
cmp
jle
dec
imull
or
ljmp
rcll
jl
add
mov
mov
xor
insb
in
loopne
cmp
rclb
out
pushf
xchg
cld
add
jo
or
imul
xchg
mov
add
orl
sarl
loop
mov
lret
or
and
xchg
ret
jle
inc
lock
or
pop
sbb
xor
xlat
dec
int3
jle
jge
fwait
addb
and
inc
loope
das
ss
rol
mov
lcall
int
push
sarl
jo
pop
jnp
sbb
dec
push
push
inc
and
or
pop
mov
cmpsl
jl
jecxz,pn
imul
fwait
cmp
push
aaa
imul
mov
insl
lea
jae
or
daa
dec
das
inc
shlb
insb
xchg
push
addr16
push
aas
sbb
mov
push
sub
js
movsb
out
shl
je
inc
ret
cmp
shll
sub
push
and
cld
andl
cli
cmp
andb
xchg
popf
test
clc
mov
outsb
sbb
add
lret
dec
pop
ret
rol
arpl
cmp
es
call
shld
sbb
loopne
add
mov
cmp
jo
mov
repz
adc
mov
push
lret
cmp
mov
pop
mov
push
repz
or
sub
jae
push
push
adc
sbb
pop
call
call
outsb
pop
sbb
add
out
dec
std
test
fwait
inc
jge
xchg
rcrb
or
ss
leave
cwtl
fcoms
mov
push
mov
mov
inc
add
roll
gs
jae
push
sbb
inc
fiadds
mov
pop
push
adc
jno
fcoms
push
jp
mov
jmp
xor
adc
pusha
rcll
in
fbld
or
jnp
repz
lahf
dec
jae
inc
fs
mov
les
imul
dec
jmp
ficompl
mov
xor
xor
mov
or
pop
sbb
cmp
out
aad
enter
popf
addb
xchg
call
dec
xchg
fcoml
divb
movsl
inc
or
or
inc
fisttps
negl
out
inc
loop
cltd
pushf
pop
insl
cmpb
and
cli
inc
shr
sbb
loopne
popf
push
jle
cs
fiadds
push
inc
inc
and
inc
fisubrs
push
fsubs
or
in
jb
dec
adc
jbe
push
jae
movsb
imul
push
sub
jbe
imul
push
cmp
je
hlt
shrb
push
jle
sub
pop
in
push
test
jg
push
xor
roll
les
scas
lret
add
jp
xor
fists
clc
fwait
outsl
fnstcw
xor
jns
out
ds
push
mov
je
and
shll
popa
xchg
filds
sbb
adc
jmp
dec
dec
mov
inc
mov
popa
xlat
xlat
mov
mov
stos
out
lods
jp
lahf
popa
aad
sub
out
mov
dec
insb
orl
push
bound
cmp
xchg
cli
cmp
or
lea
dec
jl
add
ja
push
or
movsb
or
pop
test
incl
dec
pop
dec
mov
popl
dec
bound
fcomip
sti
mov
jb
xchg
mov
mov
movsb
mov
cmp
sub
out
stos
repnz
mov
adc
mov
fxch
pop
cmp
or
pop
aas
cld
dec
adc
repz
and
mov
dec
jns
adc
ja
loopne
loop
enter
gs
dec
insl
ret
test
xor
xchg
lock
test
mov
and
ror
or
mov
movzwl
fisttps
jbe
int
inc
mov
push
test
xchg
mov
sbb
xor
push
daa
lds
push
mov
aam
test
sbb
mov
test
or
inc
sbb
sub
cmpsb
mov
insb
popa
rorb
jno
jmp
aaa
test
and
insb
sbbl
leave
mov
add
rorl
sbb
out
jp
adc
test
xchg
add
and
push
pop
push
daa
mov
xchg
fwait
adc
add
repz
or
xchg
nop
les
jnp
and
addl
and
xchg
dec
inc
jp
jl
push
out
mov
sub
std
ljmp
shrl
lea
dec
imul
mov
add
add
sbb
sahf
sub
in
mov
lret
movsb
fmuls
test
sub
je
dec
inc
push
sbb
jae
push
fisttps
lock
and
cs
add
xor
mov
push
nop
push
leave
arpl
cld
jmp
or
mov
adc
sbb
xchg
dec
clc
test
cld
ds
and
lock
jp
into
repnz
rclb
testb
pop
jb
xor
jp
xor
mov
or
jo
lahf
shll
ja
jecxz
sbb
ljmp
enter
dec
enter
mov
repz
lods
and
sbb
roll
daa
jle
inc
pop
or
add
testb
mull
mov
mov
lods
dec
lret
pop
and
jp
cmpsl
cmc
je
gs
imul
iret
sub
repz
sub
dec
ja
jns
in
mov
loopne
call
xor
pop
xchg
xor
push
dec
push
shl
adc
adc
addr16
repz
add
xor
inc
fsubp
call
sbbb
fucomip
jae
les
cmc
in
push
les
loopne
roll
or
push
inc
cmp
jne
jae
jae
dec
add
cs
jns
sarl
and
orb
iret
std
in
dec
cli
jno
ficompl
adc
into
or
addr16
sub
xchg
dec
repnz
out
std
xchg
mov
js
xstore-rng
cmpsl
inc
mov
push
loop
push
pop
mov
mov
scas
movsb
cmp
pusha
mov
or
sbb
rol
insl
xchg
shll
push
inc
xchg
pop
fwait
sarb
pop
mov
cmp
add
xor
sbb
loop
sub
jno
icebp
cmp
dec
int3
mov
call
sbb
sbb
jl
xor
push
add
sbb
or
add
hlt
adc
out
aam
xor
dec
sub
xor
jns
mov
ss
or
xchg
and
xor
jbe
xchg
out
enter
jecxz
cltd
dec
testb
mov
add
cwtl
add
pusha
hlt
in
cmp
mov
dec
mov
jae
cltd
sbb
shll
jne
leave
jmp
push
bound
add
aaa
and
xchg
jne
les
or
bound
push
push
dec
mov
mov
sbb
dec
add
dec
icebp
cmp
cmpsl
je
incb
inc
mov
aam
arpl
jge
add
cmp
icebp
test
adc
into
das
lret
cmp
ds
movsb
xor
scas
adc
sub
mov
ja
int3
pop
sub
xchg
fisubrs
pop
lods
xor
aaa
cmpl
lods
add
arpl
add
mov
mov
sbb
sub
lock
insl
sub
dec
enter
scas
cld
add
sbb
xchg
aas
ficoml
sub
iret
imul
and
fcoms
in
mov
xchg
push
xchg
pop
sbb
test
dec
sub
sub
int3
mov
imul
jp
pop
and
jbe,pn
int3
imul
xor
lret
scas
mov
jmp
ret
xchg
testl
and
subl
mov
cmpsb
ret
inc
movsl
js
adc
in
das
mov
jle
xchg
hlt
addl
xchg
adc
sub
add
cmp
jno
inc
push
inc
or
loopne
add
push
mov
push
dec
mov
jb
xor
push
xchg
jae
mov
fs
stos
iret
push
aam
pop
inc
jmp
pop
hlt
or
inc
jmp
dec
popf
push
sub
ja
add
adc
clc
mov
jl
in
popf
cltd
mov
clc
sbb
js
shlb
add
ds
or
sbb
push
sbb
mov
fdivrs
xchg
ja
cmc
loope
lock
rcl
test
inc
lcall
lods
cmp
lods
adc
pop
aaa
bound
push
dec
jae
out
sarb
lcall
fstpt
je
inc
out
pushf
sub
mov
pop
push
mov
int
ret
sub
gs
loopne
or
out
push
mov
sbb
xor
jne
and
insl
add
push
cwtl
mov
dec
loop
fidivrs
arpl
shrl
push
or
dec
and
and
inc
mov
xor
pop
pop
and
push
push
fcomps
and
imul
inc
addr16
xchg
mov
xor
add
lcall
jo
inc
jle
xchg
jno
outsl
setns
adc
jno
mov
mov
xor
and
inc
adc
and
or
xchg
mov
mov
push
pop
cmpsb
xor
les
ljmp
pop
pop
adc
lret
lcall
mov
add
pusha
sbb
out
jne
push
add
mov
int
jo
push
jg
mov
xor
adc
ss
cmp
les
pop
jl
push
fnstenv
push
imul
bound
xor
sarl
inc
push
fcompl
in
push
dec
mov
dec
inc
sub
aas
imul
mov
lods
jns
push
pop
inc
lods
mov
insl
das
pop
mov
rclb
xchg
push
xor
mov
sbb
cmp
mov
sbb
dec
aam
jb
sbb
dec
sbb
popf
lock
cmpsb
movsb
frstor
jmp
jg
lods
sub
insb
hlt
or
mov
sbb
aad
xor
das
insb
mov
fs
push
icebp
cli
and
pop
pop
cwtl
mulb
dec
sub
enter
sbb
sbb
lods
sbb
ja
push
negb
cmp
cli
fcmovnu
adcb
daa
pop
mov
fnsave
ret
mov
lea
movsb
enter
pop
into
jns
jnp
sbb
ret
fstpt
or
add
sbb
xor
jae
pop
gs
mov
sbb
pop
pop
jne
mov
xlat
lahf
inc
scas
cmp
popl
lods
xchg
mov
dec
notb
nop
adc
iret
xor
inc
in
pop
arpl
xchg
leave
mov
lret
addr16
mov
scas
mov
push
stos
dec
or
xchg
cmp
fimull
inc
xor
inc
push
and
sbb
push
aaa
insl
mov
push
imul
push
fisttps
sti
sub
js
ja
xchg
roll
or
andl
rorl
cmpsb
pop
ds
push
xor
inc
ljmp
sbbl
sub
push
not
adc
mov
mov
push
lods
pop
xor
je
mov
cld
std
pop
aad
dec
or
push
jo,pt
ljmp
inc
daa
mov
aaa
pop
in
jg
push
add
cwtl
jo
sbb
movsb
push
mov
outsl
subb
or
lahf
in
cmc
xor
sub
jp
pop
pop
sub
fbstp
xchg
xor
aas
outsl
in
adc
jo
movsl
add
in
add
inc
je
cwtl
xchg
clc
sub
pop
push
jle
mov
lahf
sbb
or
leave
insb
mov
or
repz
xor
lea
pop
nop
push
adc
sub
shlb
mov
fwait
aam
fwait
and
cmc
jnp
xor
mov
pop
mov
rcrl
xlat
adc
mov
int3
cmpsb
mov
xor
push
data16
into
aaa
imul
outsl
cwtl
mov
lret
sbb
sub
incl
ljmp
adc
imul
fcmovnu
stos
add
and
push
mov
add
les
lods
lods
xchg
outsb
das
aas
sub
jae
mov
pop
clc
out
adc
cmp
mov
adc
aas
les
sarl
out
sbb
inc
xchg
or
arpl
sbb
pop
cwtl
jbe
pushf
in
cmp
fmull
push
int3
ja
sarb
push
add
popa
mov
movsb
xchg
mov
xchg
sbb
test
xchg
ret
push
mov
popa
enter
mov
inc
jb
std
enter
mov
js
jl
out
das
xor
sbb
dec
adc
out
stos
and
fs
or
inc
and
jecxz
mov
imul
fnstenv
movsl
xchg
lcall
out
xchg
jae
sub
jbe
cld
ljmp
lods
hlt
sub
insb
pop
inc
add
push
ret
js
push
fildl
mov
lock
add
jo
je
xchg
daa
imul
call
arpl
imul
or
jg
repz
inc
mov
mov
mov
sub
mov
cmp
mov
adc
pop
sbb
jb
daa
dec
sarl
push
push
repz
xor
lret
pop
test
jp
ljmp
iret
dec
push
sub
xor
pop
mov
outsb
mov
xorb
aas
cmpsl
in
xchg
xchg
pop
sbb
scas
daa
dec
enter
loope
add
insl
adcb
sbb
je
sbb
mov
pop
inc
icebp
stc
and
push
adc
add
pop
imull
popf
add
insb
fdivrs
pop
scas
mov
outsl
push
mov
add
shll
sbb
lods
inc
and
icebp
pop
loope
icebp
xchg
add
pop
ret
mov
inc
imulb
repnz
addb
or
dec
push
and
pop
jo
inc
call
fists
add
inc
pop
xchg
push
orps
dec
cmpl
mov
push
pop
in
scas
stos
lahf
jmp
adc
push
loopne
pop
lea
xor
mov
sti
pop
loopne
and
sub
fsts
lret
jbe
jmp
andb
jg
test
jge
xchg
xlat
add
lret
inc
sub
sub
dec
and
and
sub
test
adc
cld
lret
ljmp
jge
frstor
addr16
mov
dec
xchg
fimull
rcr
arpl
or
jg
dec
lock
in
and
pop
fimuls
xchg
adc
scas
ds
sub
jbe
ljmp
jp
xchg
popa
jne
sbb
pushf
test
repz
and
sbb
je
mov
cltd
or
dec
push
add
and
out
dec
aaa
or
mov
shrl
adc
sub
loop
loope
pushf
mov
or
jmp
in
faddl
or
jl
mov
into
pusha
leave
adc
movsl
jl
xor
xchg
lods
jge
movsb
fldt
push
jl
mov
sahf
sarl
lods
jo
dec
dec
push
ss
and
lret
data16
fdivrs
bound
jo
dec
shl
add
xor
dec
loop
mov
enter
fidivs
call
xor
jle
sub
jbe
fbstp
pop
movl
ret
dec
out
mov
or
push
das
shlb
mov
adc
and
sub
push
insb
or
adc
repnz
leave
xor
daa
pop
adc
nop
mov
cli
clc
add
clc
or
shlb
sbb
sti
ds
xor
lods
insb
data16
das
orl
or
push
insb
loop
insl
out
push
adc
mov
pmullw
push
inc
ja
sarb
pusha
int3
jb
lret
fxch
imul
icebp
leave
stos
je
cld
push
stos
xchg
int3
fnstsw
lea
mov
out
sarl
dec
mov
lds
inc
rcr
mov
popf
leave
fisubs
mov
bound
cld
xchg
jl
mov
xor
pop
push
jmp
js
in
or
int
pop
insb
lods
les
xor
in
mov
mov
lock
clc
ret
faddl
xchg
rep
cs
int
and
inc
fcoml
out
cli
pop
sub
mov
xlat
inc
inc
push
mov
pop
aaa
popa
adc
mov
stos
cmpsl
fwait
es
test
ds
mov
test
es
xor
mov
inc
sti
push
arpl
inc
xchg
aas
or
and
popf
jno,pn
jecxz
pop
mov
sarb
repnz
les
aam
dec
ret
xor
cmp
fstl
imull
adc
inc
repz
repz
xchg
lods
xor
adc
inc
scas
cmp
sub
call
test
outsb
clc
andb
jg
hlt
dec
rol
dec
in
out
push
and
test
push
or
int3
add
xor
aad
xchg
dec
cmc
add
ljmp
xor
lahf
add
stos
xor
jne
std
leave
loope
out
je
cmc
outsb
jo
into
ja
movsl
jecxz
stos
adc
lea
cmpsb
push
mov
dec
sbb
in
cmp
cmc
cltd
imul
jl
inc
mov
cmp
sbb
sub
call
dec
xor
add
inc
and
dec
repnz
cmp
movsb
cmp
push
mov
sbb
aaa
stos
inc
xor
mov
xlat
test
out
cmp
iret
daa
push
xor
and
das
jo
adc
mov
cli
int3
fucomip
cmc
pop
aaa
aas
shll
pop
adc
ss
daa
mov
adc
aas
call
test
test
xlat
dec
lea
push
scas
mov
popf
dec
mov
add
es
js
jns
or
mov
sub
in
add
dec
push
andl
jge
call
push
ret
hlt
sbb
jmp
push
mov
daa
or
cmp
fldcw
dec
shl
int3
mov
cmp
rcr
fistps
clc
xchg
xor
sbb
in
jns
inc
inc
cmp
mov
add
ja
gs
sahf
jne
push
sbb
cmpsl
cli
jb
xchg
jae
test
shlb
jb
jae
push
xor
lea
rcrb
dec
cmp
int3
arpl
outsl
pop
outsl
pop
mov
arpl
add
sarl
scas
dec
cmp
div
cwtl
add
fs
jne
sub
jle
cmpsb
out
cmp
popf
pop
or
dec
ret
and
out
mov
inc
addr16
jb
xchg
lahf
adc
mov
mov
jns
inc
cmp
inc
mov
pushf
mov
jp
xchg
sbb
sub
nop
sbb
sub
dec
push
sub
inc
popa
sti
ds
daa
outsb
mov
stos
dec
imul
dec
lcall
icebp
add
inc
pop
pop
inc
nop
cld
iret
out
and
and
sbb
lahf
stos
dec
or
push
xchg
mov
daa
adc
and
xchg
dec
rcr
sbb
add
lahf
call
addr16
pop
add
and
mov
lock
mov
sub
sbb
rolb
jnp
or
dec
in
ret
push
add
cwtl
iret
jnp
xchg
pop
inc
cmp
jle
out
shll
cmpsb
adc
out
xchg
outsl
std
pop
gs
or
jecxz
shll
xor
fs
push
icebp
divl
push
sbb
repz
push
and
jo
jle
push
pop
lahf
pushf
cmpsl
cmc
pop
push
test
shlb
arpl
ja
in
push
and
das
pop
mov
or
jle
lahf
jg
lcall
imul
gs
mov
pusha
pop
outsl
ret
pop
punpckldq
adc
xchg
xor
xchg
ss
add
cli
negb
xor
jns
bound
pop
adc
inc
or
icebp
xchg
mov
fwait
leave
aad
sbb
jg
test
push
push
lret
jg
imull
adc
loop
ret
fmul
dec
or
lds
cmp
test
adc
rol
daa
xor
mov
test
inc
and
hlt
ja
push
cmpsl
mov
cmpsl
xchg
ljmp
mov
push
enter
cs
jecxz
fwait
jl
cld
es
cmc
repnz
lea
repz
cmpsl
sbb
push
add
xor
xchg
addb
adc
cmp
loopne
mov
rorl
jbe
mov
out
push
add
int
or
pop
shl
pop
push
enter
leave
fdivrl
push
inc
out
aad
stc
test
jge
das
jmp
popa
stos
movsb
stos
sbb
pop
sub
xor
outsl
leave
aam
stos
lahf
pop
lods
add
scas
aad
pop
rorb
sar
mov
mov
in
jp
pop
push
mov
hlt
shll
mov
out
test
mov
mov
int3
cltd
cmc
incl
pusha
rcr
es
jecxz
pop
push
gs
lahf
sbb
loop
push
out
cmp
pop
cmc
data16
or
add
sbb
jge
out
fadd
scas
xor
add
push
and
push
loope
mov
repz
xchg
jg
je
mov
adc
or
add
int3
das
mov
cmp
pop
cwtl
mov
dec
inc
int
cmp
enter
add
xor
sbb
shrl
ljmp
inc
fucomp
jmp
sbb
cwtl
scas
jae
dec
mov
cmpsb
sti
das
mov
sbb
mov
sub
out
sub
push
pop
sbb
mov
popf
daa
sub
rcr
shll
aas
push
mov
cmpsb
push
cwtl
roll
sub
mov
inc
scas
sub
mov
push
xchg
mov
pop
test
outsb
jg
enter
test
xor
into
fdivrp
scas
cmp
test
xchg
rcrl
and
add
das
jle
cmovp
loopne
rep
arpl
push
repnz
je
fwait
call
imul
gs
mov
gs
pop
xor
shlb
xchg
jae
xor
inc
sub
or
iret
sub
data16
bound
cmp
add
xor
push
adc
jno
addl
inc
je
push
push
xor
xor
push
push
dec
xchg
insb
mov
mov
lcall
push
scas
lods
popa
xor
pop
loop
jp
cmp
xchg
lcall
lods
outsl
sub
fstpt
cmp
loopne
mov
into
add
sbb
sbb
testb
nop
sbb
or
pop
int
dec
stos
call
dec
mov
mov
inc
out
inc
pop
push
aam
add
xchg
or
test
jmp
xor
ljmp
xchg
and
push
push
mov
jecxz
pop
cmpsb
lcall
rcrl
fdivl
fiaddl
in
mov
mov
pop
mov
or
lahf
daa
mov
add
gs
dec
and
lods
push
out
inc
push
push
test
popf
jns
and
xchg
xor
fwait
cmp
jg
cld
cmp
mov
scas
cltd
aas
sbb
sub
sarl
nop
out
cs
add
ret
push
and
and
push
inc
arpl
jecxz
loopne
push
cmp
pop
popf
mov
dec
push
je
mov
cld
dec
pop
cld
shrb
push
pop
pusha
xor
xlat
mov
mov
sbb
mov
ja
daa
xchg
aaa
pop
push
scas
stc
mov
popa
cs
arpl
ljmp
ss
lods
das
push
mov
add
mov
pop
sbbl
xlat
pushf
dec
into
xchg
shrl
pop
push
sub
cmp
sbb
add
lock
notl
inc
int
mov
xlat
pop
push
push
cmc
inc
xchg
out
ror
jge
in
push
clc
loopne
push
in
sbb
cli
pusha
in
jp
or
je
pop
shrb
add
cmpsl
and
sub
xchg
loopne
loope
fwait
subl
xchg
outsb
and
outsb
pop
inc
int3
mov
xchg
xchg
aaa
jl
cmp
in
fadds
ds
inc
or
loop
add
push
lea
fadds
mov
adc
rcrl
adc
movsl
inc
cmp
das
fistpl
mov
mov
inc
cwtl
fnstsw
pop
dec
rolb
cs
dec
mov
mov
xchg
rclb
out
inc
dec
cwtl
clc
xor
xor
jb
insb
jo
sub
add
loop
aad
pop
aaa
clc
xor
or
add
cmpsl
add
dec
adc
xchg
dec
movl
sti
push
xchg
mov
xchg
pop
cld
jmp
daa
divl
push
add
inc
jae
jb
xor
cwtl
hlt
jnp
es
icebp
dec
cmp
adc
aaa
cmp
push
adc
sbbl
hlt
repnz
inc
aas
push
sub
cmp
mov
inc
mov
loopne
mov
inc
jp
daa
arpl
ja
xor
fcoms
popa
lahf
mov
sbb
dec
ja
outsb
push
stc
into
leave
repz
sbb
in
cmp
test
pushf
arpl
mov
ss
inc
hlt
pop
jl
std
cmp
mov
pop
xor
or
sbb
cld
sbb
push
sub
out
add
dec
jno
xchg
int
xchg
scas
add
lods
fstpt
push
inc
enter
xchg
or
push
jns
push
sub
sbb
push
xor
add
ret
jns
dec
out
js
stos
pop
loop
out
stc
cmc
push
popa
es
mov
test
add
jmp
inc
fidivrs
xchg
mov
fcoms
data16
add
push
movsb
bndstx
cmp
fadds
add
or
push
mov
div
jge
sub
ds
lock
mov
and
xlat
xchg
outsl
jg
xchg
push
leave
pop
out
add
jae
push
mov
xlat
sub
xorb
and
loop
dec
shrb
cmp
in
std
lahf
xchg
lds
or
mov
push
sbbl
aaa
cmpsl
jbe
cld
loopne
lret
ja
add
add
push
fidivl
jno
inc
in
sub
in
add
fcmove
aam
in
sub
and
inc
bound
cli
mov
mov
repnz
push
shr
inc
jb
add
clc
icebp
sbb
std
xchg
out
cmp
inc
insb
cmp
xor
popf
jle
inc
imul
sbb
fstpt
xchg
and
into
and
stos
jmp
ljmp
push
popa
mov
and
ljmp
cs
mov
fwait
cmp
mov
adc
fnsave
mov
out
in
inc
sarb
xchg
pop
or
insl
pop
dec
sub
dec
js
add
pop
sar
mov
jne
xchg
dec
gs
pushf
dec
out
loopne
inc
jle
cmp
jne
cmp
inc
jo
andb
lods
dec
ds
mov
orb
pop
xor
dec
setbe
and
cwtl
in
and
outsl
mov
test
cmpsb
scas
or
and
aad
jbe
adc
out
lret
push
mov
mov
mov
movb
aad
mov
shrl
add
jb
dec
mov
bound
xchg
test
pop
mov
clc
mov
aas
pop
lods
adc
out
push
out
adc
pop
jecxz
jge
push
and
jb
and
pop
idivb
mov
rclb
popf
cmpsl
popf
cmp
xor
cltd
fcomps
and
les
push
test
mov
nop
add
lret
repz
fnsave
pop
popf
sar
push
mov
lcall
mov
mov
pop
nop
mov
dec
mov
cmp
dec
insb
insb
or
dec
push
sbb
loope
and
xchg
pusha
mov
mov
xchg
mov
sub
out
or
mov
movsl
sbb
mov
mov
lods
pop
and
not
ljmp
add
jle
lea
mov
test
aad
sub
cmp
xor
data16
add
cmp
iret
ja
xchg
mov
insl
xor
aas
fs
jbe
mov
fstps
mov
testl
outsb
pop
lret
add
fstps
scas
add
rcrl
jmp
int
sbb
and
and
mov
cmp
cli
rcll
add
push
jp
inc
aam
lock
sub
lret
sub
movsl
stc
mov
outsl
imul
jle
cli
clc
lret
mov
mov
mov
mov
or
jo
rcrb
jge
sub
enter
lock
dec
jne
xorb
test
imul
or
daa
cvtpi2ps
lret
test
xchg
jmp
movsl
jmp
xchg
xchg
and
mull
dec
nop
push
add
shlb
fists
cmp
int
insl
aam
pop
xchg
pop
cmpsl
ja
pop
xchg
clc
xchg
mov
int3
lret
movsl
cmp
ljmp
mov
stos
arpl
test
add
in
cmpsb
jns
cmpsb
pop
pushf
sbb
mov
pop
ret
sub
ret
pushf
jle
cmp
fldt
rolb
stos
push
lods
dec
push
loopne
inc
pop
std
jge
leave
cmpl
or
sub
sub
sbb
je
rolb
jmp
push
pop
les
mov
push
shlb
or
and
push
jg
fiaddl
pop
mov
adc
sahf
out
sti
xchg
out
and
jp
mov
mov
dec
pop
outsl
out
pop
push
mov
mov
loope
push
lret
aam
sub
das
push
mov
cmp
test
push
adc
movsb
stos
lcall
inc
cmp
or
sahf
repz
loopne
xchg
jns
pop
jecxz
pop
xchg
mov
push
test
jbe
pop
stc
inc
mov
lret
xor
push
out
aad
jg
cltd
sbb
add
sub
pop
sahf
cld
jecxz
fists
mov
inc
ret
jo
push
lock
aas
xchg
adc
push
mov
adc
pop
lahf
ljmp
or
fcmovb
hlt
pop
je
sarb
fisttps
inc
push
adc
scas
cmc
adc
daa
push
repz
adc
cmpsl
gs
adc
mov
cmc
fwait
arpl
pop
push
sbb
ret
mov
lahf
imull
jg
xchg
ds
in
xor
sbb
mull
jg
inc
hlt
mov
fsts
imul
sti
mov
and
jecxz
push
aam
mov
popf
cmp
and
pusha
pop
dec
dec
nop
push
lret
daa
sbb
push
and
dec
sub
sub
int3
inc
repnz
dec
mov
jnp
pop
jns
jl
and
push
arpl
in
int3
stc
popf
dec
sahf
dec
pop
sti
xchg
mov
push
add
sahf
mov
push
sbbl
aad
mov
out
inc
sbb
pop
jne
push
sahf
cmp
out
xlat
inc
rcll
rolb
jae
lret
shl
push
lfs
filds
mov
scas
mov
dec
popl
and
xor
imul
pop
test
stos
xchg
daa
and
cmp
dec
mov
cmp
xor
cmp
xor
cmp
add
jb
pop
sub
sub
testl
ret
data16
pop
cli
pop
mov
std
in
mov
pop
leave
mov
pop
popl
or
add
jno
cmpsl
jge
xor
or
imul
add
movsb
sub
xor
xchg
cmc
data16
stos
cld
cmp
stos
frstor
pop
icebp
pop
xor
sbb
jbe
call
sahf
pop
daa
mov
xrelease
js
dec
repz
pop
out
cld
push
ficomps
fildll
ret
push
sub
repnz
push
or
movsb
mov
lcall
mov
mov
dec
mov
push
aaa
dec
sarb
les
dec
push
fstps
push
xchg
xchg
xchg
and
add
inc
push
mov
push
orl
jmp
or
scas
dec
fbstp
leave
push
fiaddl
lock
xchg
mov
or
popa
data16
mov
add
or
mov
adc
mov
inc
inc
adc
push
and
cmp
in
fwait
jg
dec
fistpl
push
pop
outsb
pop
mov
jb
cmp
xchg
sbb
movsl
lret
mov
sbb
add
ds
lock
sub
cmp
push
cmpsl
rcll
sbb
pop
fldz
cmp
mov
jmp
mov
fucom
jge
repnz
loope
or
dec
or
push
out
pop
lret
ljmp
divl
inc
iret
outsl
sti
push
jnp
cld
loope
outsl
or
loop
xor
sbb
xor
pop
jno
jb
jbe
sbb
push
into
lds
mov
movsb
sub
push
iret
clc
lods
dec
outsl
shl
mov
jge
fwait
lret
mov
mov
fistpll
jge
xor
mov
loop
xor
sbb
lods
scas
negb
mov
mov
pushf
fnsave
cmpsl
cmp
into
ja
in
mov
add
jb
cli
xchg
jge
lea
jg
das
and
push
scas
pop
cmovp
or
mov
lret
xorl
xorb
push
repz
outsl
ficompl
sbb
cmp
cmp
xchg
inc
mov
iret
scas
rcrb
jbe
xor
cmp
sbb
xchg
mov
cmpsl
inc
and
stc
testb
outsl
xchg
je
inc
cmc
pop
jge
inc
pop
ret
ror
add
push
jae
popf
dec
mov
test
ds
sub
addr16
in
pop
ror
int3
push
cld
iret
mov
inc
jno
cmc
out
lret
es
adc
clc
cmpb
fucomi
nop
mov
test
pop
pop
jecxz
mov
mov
xor
scas
adc
pop
xchg
incl
test
mov
ret
popa
push
loopne
lcall
push
scas
clc
dec
mov
jl
mov
push
je
repz
jge
repz
add
fwait
mov
xor
jae
and
cld
add
test
rolb
loope
es
add
xchg
xor
mov
ret
stos
cld
imul
jg
mov
loop
jp
mov
lods
mov
addr16
imul
enter
cmp
movsb
push
mov
stos
imul
fmull
xchg
sti
sbb
xor
mov
or
leave
jnp
mov
inc
ror
xor
xor
push
sbbl
dec
in
rorb
int3
movsb
aas
stc
xchg
xor
pop
xor
adc
sub
add
cli
xchg
cwtl
cli
cmp
dec
fnstcw
lods
gs
nop
ret
pop
leave
lcall
xor
in
gs
push
or
fldcw
mov
mov
xchg
int
lahf
and
cmpsl
mov
dec
sbb
sub
cmp
xchg
in
lods
pop
addl
fldcw
shll
jne
adc
out
lods
ljmp
jg
sub
lcall
es
mov
fldcw
sub
xor
fld
and
or
sub
fidivl
ljmp
stc
fst
pop
pop
hlt
lret
in
adc
xchg
insl
mov
push
faddl
cli
push
and
mov
mov
and
scas
mov
sti
negb
cmp
mov
sub
xor
cmc
sub
inc
subb
test
mov
xlat
bound
jnp
xor
pop
testl
rol
subb
shrb
fs
xchg
in
repz
addr16
push
cmp
in
fisubl
pop
mov
std
cmpb
mov
sbb
jl
xor
stos
insb
shl
mov
jmp
xchg
jb
lret
lea
aad
pushl
xchg
stos
mov
pop
adc
mov
inc
add
xchg
ror
sub
lods
aas
pusha
lret
orl
mov
int
or
add
mov
dec
xchg
dec
outsb
stos
aam
or
fisubrs
sahf
out
and
dec
mov
push
mov
xchg
dec
cmpsb
pop
or
imul
and
mov
popf
in
and
and
dec
popa
inc
mov
sub
or
or
shll
sub
pop
mov
add
mov
int3
sahf
insl
sahf
ret
add
mov
or
into
std
pop
imulb
out
xchg
and
mov
iret
lods
jp
lock
push
movsl
inc
insb
xchg
pop
stos
mov
bound
mov
xchg
or
lods
or
push
es
add
push
xor
cmp
test
dec
test
adc
dec
inc
gs
cmp
mov
dec
or
push
lea
xor
sub
cmp
pop
lcall
rol
xchg
jg
movsl
or
or
ror
mov
sbb
xchg
cli
jo
pusha
out
pop
outsb
mov
sub
test
jp
aaa
pop
inc
or
pushf
xchg
mov
fistps
push
mov
das
negl
adc
clc
sub
pop
leave
fiaddl
inc
xlat
add
dec
fs
jecxz
pop
iret
es
fsubs
addr16
subw
jns
cmp
cltd
pop
jle
dec
and
inc
xchg
fsubl
dec
mov
nop
dec
inc
cmpsl
pushf
add
dec
jp
ret
lock
mov
mov
push
test
repnz
clc
nop
xchg
pusha
stos
mov
test
ror
shr
idiv
rcrl
inc
cmp
inc
mov
lret
pop
imul
mov
ret
arpl
ja,pt
xor
jb
popf
inc
out
daa
cltd
xor
jb
mov
and
nop
pop
imul
fcoms
add
sbb
or
xor
cmp
and
lea
mov
inc
cmp
inc
shll
fildll
jae
and
push
aam
jb
lock
notl
data16
push
jmp
push
nop
sbb
mov
arpl
roll
mov
loop
mov
sub
mov
in
xor
fcomps
popf
fcmovb
push
fldenv
int
adc
adc
outsl
icebp
dec
cmpsb
or
lods
push
in
cmp
jno
testl
pushf
lahf
xor
xchg
xor
dec
fistpl
jo
scas
mov
mov
sbb
shrl
int
dec
outsb
dec
lcall
adc
dec
aad
ja
addl
mov
in
mov
xor
aam
cmc
push
cmp
icebp
lahf
cld
in
test
mov
xor
out
mov
add
insl
rorl
and
aad
cltd
cli
dec
bt
push
iret
outsb
je
xchg
sub
clc
out
dec
xor
jo
xchg
ret
jns
mov
leave
out
xlat
pop
jae
add
repz
arpl
cld
mov
cmc
cmp
popf
in
jnp
cmpsl
jmp
into
les
push
pop
jg
cld
loop
ljmp
push
test
mov
rorb
push
adc
dec
pop
in
test
ret
pusha
rclb
lret
dec
mov
sub
pop
cmc
repz
loope
int3
inc
sbb
jne
scas
or
or
cmp
movsl
jmp
mov
ss
pop
cmp
sbb
cmp
aad
mov
mov
mov
mov
ss
popf
lds
jne
mov
fdivr
rcr
subl
imul
mov
xlat
lods
and
scas
jecxz
aam
add
jg
popl
mov
fs
dec
dec
int3
sarb
mov
movsl
mov
rolb
test
and
mov
inc
das
jbe
mov
shl
js
pop
mov
adc
loop
pop
adc
add
or
ret
icebp
mov
or
repnz
dec
sahf
ret
pushf
iret
cmpsl
rorb
mov
flds
loope
ret
out
jp
push
pop
push
cld
fs
cmpsl
mov
pop
pop
pop
bnd
add
mov
fsubl
mov
dec
imul
into
js
xchg
idivl
push
nop
jle
jnp
pop
mov
cmc
in
pop
rcrb
xchg
mov
loope
inc
ljmp
pusha
movsl
pop
mov
xor
sarl
jp
push
dec
fsubl
out
pop
mov
lods
mov
sahf
pop
cltd
push
sub
jno
sbb
shlb
adc
ja
xor
mov
test
inc
adc
mov
xchg
xlat
aam
lock
hlt
sbb
push
jmp
xor
cmpsl
ret
mov
test
push
xchg
and
sub
jbe
mov
cmpsb
sahf
mov
lds
mov
incb
xlat
jne
cmc
jecxz
lds
pop
and
sbb
cmc
mov
sbb
add
lock
into
test
cwtl
ror
xor
inc
jae
xchg
sahf
jo
inc
mov
adc
ds
fildll
mov
mov
push
adc
ljmp
xchg
sahf
stc
ror
pushf
push
jbe
movsl
jno
insl
jns
insb
aaa
call
clc
jecxz
jb
mov
stos
or
aaa
out
adc
pop
adcl
push
mov
or
lcall
mov
jge
mov
inc
pusha
data16
jecxz
mov
xor
or
jns
dec
icebp
mov
mov
adc
rolb
cmp
loopne
add
jmp
stc
pop
div
jno
aas
ljmp
pop
ret
xor
jo
and
repz
punpcklbw
fidivs
push
rcr
dec
push
je
test
cmp
cwtl
xor
outsl
mov
push
ss
ja
stos
push
mov
addb
cli
mov
mov
dec
clc
test
push
js
or
stos
mov
add
and
dec
pushf
mov
data16
add
jno
imul
notl
xchg
or
out
enter
pop
mov
mov
inc
mov
jb
iret
in
and
push
lods
stos
add
jg
in
lods
loop
in
lds
test
or
cmp
js
cmp
dec
jnp
hlt
pop
imul
mov
bound
adc
lret
mov
jne
inc
sub
dec
or
pop
aam
les
call
addr16
movsl
push
adcb
push
lods
xor
ja
scas
aaa
push
lock
into
pop
add
outsl
test
cmp
ds
push
and
pop
fstl
nop
mov
pop
jo
cmp
les
push
loopne
jmp
call
jle
movsb
adc
cmp
jge
das
adc
stos
out
push
imul
jo
mov
jl
sarb
pop
adc
mov
pop
scas
xor
mov
mov
sbb
scas
je
xlat
jg
inc
cmp
and
notl
icebp
fs
mov
and
jns
xchg
add
and
pop
testl
imulb
mov
ficoml
ss
aas
jb
js
fwait
and
xchg
mov
mov
xor
insl
jp
testl
aaa
dec
jmp
mov
add
xchg
mov
push
adc
lods
mov
jl
pop
push
js
cltd
insl
mov
mov
mov
or
mov
xchg
cmp
outsb
and
idiv
mov
mov
dec
add
imul
mov
lods
out
sahf
out
jp
loopne
pop
movsb
jg
add
jbe
xorb
mov
mov
mov
cmp
inc
dec
adc
pop
pop
jle
push
xchg
in
fstpt
jmp
hlt
mov
and
cltd
xchg
outsl
aam
mov
xlat
dec
out
inc
stos
lret
sub
add
jp
popa
jecxz
dec
fldl2t
dec
push
aad
popf
pop
mov
cmp
negb
xchg
jo
arpl
push
fwait
adc
ds
mov
jne
int3
sub
movb
movsb
into
or
dec
imul
negb
ds
rolb
add
rcrl
or
cwtl
sbb
mov
movsl
sbb
push
push
ret
mov
std
pop
out
adc
lock
mov
push
inc
call
inc
incl
outsl
xor
hlt
pop
adc
mov
lea
insl
add
mov
fsubrp
cmp
das
inc
fdivs
lret
out
sbb
and
outsb
addl
jbe
inc
add
out
cmpsl
pop
mov
fcmovnu
leave
test
inc
push
pop
js
dec
arpl
sub
jmp
push
std
leave
lods
imul
std
add
jae
cmp
mov
push
mov
ds
push
pop
inc
cltd
clc
push
daa
nop
das
add
fisubl
sub
push
mov
je
and
mov
mov
jmp
cmp
jae
mov
and
and
adc
cmovb
inc
cld
add
mov
and
mov
cmpsl
outsl
fisubl
les
loop
jns
sbb
repnz
inc
popf
add
or
inc
bound
loopne
fistl
les
sbb
adc
lret
js
push
cwtl
movsl
dec
cmp
and
push
scas
add
mov
rolb
xor
adc
gs
int
mov
sti
fnstenv
outsb
xlat
sti
inc
jp
mov
inc
pop
orb
pop
jae
push
mov
push
daa
inc
les
aam
sbb
test
cltd
pop
sub
add
add
outsl
dec
ja
cmp
cltd
cmpsb
dec
mov
dec
adc
icebp
add
push
inc
sub
lret
sahf
sti
aas
scas
sub
ljmp
mov
cmp
cmp
cs
fisttps
sbb
push
es
imul
mov
pop
gs
out
aas
push
add
cmc
mov
or
dec
jl,pt
jp
sbb
mov
lea
jge
imul
and
mov
push
dec
pushf
cwtl
imulb
imul
aam
bnd
xchg
jnp
cmp
mov
scas
push
jne
test
add
push
sbb
clc
mov
jo
mov
int3
push
fadds
out
add
push
mov
or
jge
sub
popf
popf
bound
jnp
roll
pop
xchg
icebp
sbb
or
movsb
or
divb
in
into
ja
dec
push
pop
adc
test
repnz
lahf
xchg
mov
ret
mov
sbb
ret
or
mov
and
mov
sti
jb
pop
fwait
mov
mov
lods
dec
mov
inc
imul
mov
lock
shrl
lds
out
mov
clc
pop
pop
adc
inc
push
mov
mov
xor
repz
shr
mov
xchg
mov
je
subb
data16
aam
ss
xlat
xor
ret
pop
insl
mov
fdivl
cltd
lret
cld
lds
mov
or
ret
inc
push
andl
adc
mov
test
jl
push
lcall
pop
jge
sub
jo
dec
daa
jns
sarb
pop
or
andl
add
dec
dec
out
mov
xchg
out
fs
out
mov
xchg
mov
pop
js
or
repz
jns
scas
cmp
push
add
mov
xor
lods
mov
test
cmp
and
cld
faddl
daa
jns
mov
push
xor
sbb
out
sti
lret
mov
sub
inc
fdivl
arpl
outsb
inc
int3
dec
push
add
cmp
dec
mov
out
fdiv
adc
push
push
enter
or
and
movsl
rcrb
sub
movsb
sbb
adc
out
mov
sub
addr16
push
aam
mov
aas
shrb
push
or
xchg
imul
cmc
cltd
in
adc
dec
inc
loope
sbb
dec
lea
enter
arpl
and
sbb
aam
cltd
pusha
jl
jle
int
clc
int
loopne
cltd
dec
jmp
pop
fiadds
xchg
cli
arpl
jns
ds
push
and
mov
mov
adc
inc
cltd
jo
mov
fidivrl
sub
jnp
mov
xchg
lods
sbb
pop
xor
sbb
jl
sub
ja
add
fs
cmovnp
out
pop
cmpsl
pop
int3
sbb
jmp
cltd
js
or
clc
outsl
clc
rolb
sbb
rcrl
cltd
cmp
adc
mov
popa
adc
sub
pop
lods
push
xchg
lods
das
out
push
repz
data16
add
xor
jle
test
jl
cmp
push
hlt
mov
push
inc
xor
lods
push
push
pop
mov
pop
not
mov
iret
push
mov
cmp
clc
xchg
inc
jbe
pop
in
xchg
sub
mov
push
sub
cli
adc
dec
jle
shl
jmp
sub
cmpsl
ljmp
sub
in
jb
dec
sub
xchg
or
in
lea
jmp
icebp
sub
jg
inc
popa
iret
or
arpl
pop
neg
jo
mov
gs
dec
fidivrs
mov
cmpsb
addr16
cmp
adcl
mov
xchg
sbb
rcr
xor
shll
in
outsl
jo
fiaddl
mov
inc
in
inc
pop
int3
jo
mov
pop
or
mov
cmpsb
sub
out
push
inc
in
push
adc
call
push
sahf
std
mov
sbb
xor
xchg
add
jno
jmp
aaa
xchg
sti
xor
jbe
jmp
lfs
sub
leave
cltd
pop
fnsave
lea
js
test
mov
outsl
push
cmp
imull
and
mov
or
in
sbb
in
inc
arpl
mov
lret
mov
sti
dec
incb
push
xchg
sub
pop
sbb
jle
pop
and
sbb
sub
divb
mov
or
jge
pushf
pop
pop
shlb
inc
xchg
repnz
outsl
or
mov
out
data16
outsl
sub
subb
sbb
outsb
shlb
push
ja
iret
xor
cld
cmpsl
or
add
add
jbe
shl
fcmovnu
pop
fcmovne
push
sbb
testb
mov
outsl
fmul
fs
movb
cli
mov
cltd
push
and
out
push
dec
mov
test
pop
dec
mov
xchg
mov
adc
pop
stos
dec
add
xor
iret
adc
sub
iret
mov
adc
roll
add
lahf
cmp
decl
sub
xor
mov
push
loope
in
jecxz
outsl
into
add
aam
mov
cmp
sub
sub
mov
notl
xchg
mov
fst
or
mov
cli
jp
ret
add
xor
fs
fwait
mov
inc
push
xchg
fdivr
xor
sti
dec
adc
mov
sbb
dec
pop
imul
mov
add
mov
and
mov
xor
ret
mov
and
rep
push
imul
mov
iret
dec
jbe
xor
adc
fiaddl
sbb
movsb
je
push
sbb
or
cmp
imul
dec
jecxz
inc
aam
movzbl
push
lds
in
push
add
jno
and
cmpsl
nop
mov
aas
mov
push
mov
add
inc
ss
jge
jns
xchg
sbb
in
fldenv
outsb
add
outsb
mov
push
insl
or
lcall
stos
rolb
ds
js
mov
or
imul
mov
ja
fnstenv
shr
add
push
mov
repnz
imul
je
movsb
mov
bound
sti
dec
repz
inc
mov
nop
adc
out
xchg
call
in
add
pop
push
cwtl
out
xchg
push
std
mov
cs
mov
cltd
ljmp
shl
out
ljmp
sub
push
cmpl
int
ss
mov
fcom
das
cli
mov
inc
stos
outsl
push
dec
push
fildll
ds
movsb
jb
outsl
lods
inc
loop
stos
push
in
add
adc
ss
cmpsb
xlat
es
add
cmpsb
push
je
mov
or
mov
or
xor
sub
outsb
xor
mul
mov
movb
lcall
cmp
shll
out
repnz
and
mov
mov
cmpsl
xchg
lods
xor
cmp
push
das
mov
outsb
sub
fcmove
movsl
int
notb
pop
clc
into
lods
jmp
add
or
in
icebp
cltd
add
jg
insb
stos
mulb
pop
inc
jge
mov
xor
ja
push
and
inc
test
xor
push
cltd
inc
js
jmp
sub
test
nop
xor
adc
xchg
pop
cmpb
cmp
rclb
cmp
mov
pop
pop
stos
inc
int
mov
cmp
fs
cltd
divl
out
sti
mov
popa
sbb
fs
mov
roll
or
cs
movsl
push
icebp
out
test
jns
and
clc
fwait
cmpsb
fwait
xchg
cs
shrb
int3
cmp
sbb
cmp
dec
dec
hlt
mov
sarb
sub
mov
pop
addl
push
sub
out
into
pushf
xchg
xor
loope
mov
jb
jl
add
stos
add
sar
cltd
ret
mov
dec
movsl
out
push
loope
cmp
push
cmp
leave
mov
adc
cmp
aaa
cmpl
popa
std
fwait
jecxz
adc
sub
fs
ret
mov
and
bound
pop
mov
imul
xchg
addr16
xchg
jae
incb
mov
pop
dec
and
dec
out
movsl
mov
mov
mov
pop
push
xor
fstpl
push
ret
xchg
mov
mov
sbb
loopne
sbb
mov
pushf
popa
inc
lods
mov
sub
cmp
roll
and
push
hlt
xor
loop
push
popa
mov
mov
in
popl
mov
sbb
sub
loop
jl
mov
cmpb
lcall
je
jns
adc
test
mov
jecxz
sub
fists
pop
push
inc
push
fldt
inc
and
movsb
sub
xor
pop
push
xlat
mov
ror
testl
fsubrl
adc
stos
test
adc
xor
hlt
bound
pop
imul
jae
pop
bound
mov
dec
mov
sahf
jb
fmull
in
into
xor
fistl
jns
subl
movsl
cmc
dec
mov
push
pavgw
rcr
mov
out
jl
mov
mov
inc
add
mov
aas
mov
mov
fnstcw
popf
jne
lea
sbb
cmp
test
das
addr16
int3
jle
js
ss
push
pop
inc
push
and
dec
sbb
xchg
arpl
xchg
pop
dec
shrb
mov
add
pop
test
les
add
push
ljmp
mov
add
and
shlb
mov
mov
ss
or
sbb
ret
xor
xchg
lret
xchg
iret
mov
daa
hlt
into
push
popf
pusha
fwait
cld
push
ret
sbb
pop
mov
movsb
inc
cmp
dec
sub
mov
cwtl
in
pop
xchg
add
adc
xchg
dec
lock
insl
in
cmp
inc
mov
jge
mov
inc
dec
pop
sbb
pop
sti
sarb
pushf
inc
fiadds
shl
xor
jne
xor
addl
out
data16
adc
add
adc
imul
jmp
fidivrs
test
js
lret
in
sub
xor
xor
shr
or
jmp
mov
cmp
sbb
fadds
outsb
cs
xor
arpl
xchg
and
xor
sub
ret
rorl
cmp
sahf
mov
mov
dec
stc
and
sub
push
add
mov
mov
mov
pop
sahf
enter
int
scas
insl
mov
lods
push
into
in
fisttps
out
lods
cltd
rcrl
imul
rorl
das
shl
sub
mov
adcl
cmp
lds
pop
les
pop
popf
shr
popf
clc
pop
add
jae
ret
xchg
add
mov
push
inc
sub
or
cmp
jp
dec
iret
cmpsb
enter
sub
sub
in
stc
mov
jmp
cmp
push
and
and
pop
fscale
adc
cmp
or
dec
lds
test
jns
aam
cltd
mov
dec
push
inc
into
test
mov
push
push
sub
lcall
push
sub
das
loopne
bound
xor
inc
je
dec
clc
xor
clc
in
mov
cwtl
and
into
adc
adc
or
aam
aam
mov
hlt
repz
mov
movsb
cmp
lret
mov
lret
adc
xlat
adc
cld
daa
std
scas
aad
xchg
add
adcb
daa
dec
push
fistl
inc
jl
rcrl
frstor
imul
ror
jno
pop
lea
xchg
clc
adc
ss
adc
mov
sbb
clc
mov
int3
mov
sub
sub
cmc
xlat
pop
ds
cld
dec
adc
shr
dec
jecxz
jle
push
cmpsl
pushf
mov
jecxz
sbb
aam
sbb
addr16
inc
pop
daa
mov
lret
mov
lea
cld
cmp
imul
or
ret
sbb
pop
sbb
mov
jle
xchg
das
or
rcll
dec
mov
mov
mov
daa
aad
sub
sub
loope,pt
xchg
pop
push
or
rcrl
outsl
adc
mov
outsb
sub
sbb
and
inc
mov
and
pop
inc
inc
mov
push
cmp
cli
mov
aaa
in
mov
sub
inc
xor
push
adc
lods
aas
sbb
out
mov
jne
cmc
cs
lods
ja
lea
loopne
icebp
ficoms
jnp
mov
fdivl
push
lea
inc
jae
dec
lods
icebp
add
pop
sbb
jns
or
andb
and
imul
dec
lahf
addl
adc
mov
addb
push
ret
cli
push
mov
ss
lcall
rcl
aad
scas
mov
pop
pop
shll
add
sbb
sbb
gs
cmp
jge
rcll
xchg
test
jge
cs
je
mov
ret
addr16
rorl
or
or
enter
in
gs
cmpsl
jb
add
sbb
enter
in
sub
lods
aas
or
cmp
pop
fldenv
add
mov
jecxz
add
xchg
pop
mov
fcoms
shll
mov
ja
outsb
iret
inc
gs
lcall
ds
stos
gs
imul
push
test
imul
xlat
xorb
jl
jne
sub
xor
fs
sub
pop
adc
cmp
sub
push
test
fwait
push
xchg
xchg
ss
cmpsb
test
or
mov
or
stos
stc
pop
or
sti
mull
sbb
pop
or
mov
xchg
jb
fwait
jno
movsl
jbe
ds
cmp
mov
inc
sub
jmp
es
aas
jnp
cmp
test
aaa
or
sub
fdivrp
xor
add
into
or
mov
push
dec
cwtl
leave
jae
mov
enter
hlt
jge
xchg
lret
into
sbb
mov
adc
fcmovb
cmp
sar
jle
cli
call
mov
cld
arpl
mov
fwait
dec
cld
mov
sbb
aam
mov
jo
fisttpl
pop
adc
cwtl
jae
rclb
mov
cmpsb
mov
sub
mov
cs
mov
popa
push
or
adc
lea
mov
pop
stc
fsub
mov
pop
aas
pop
mov
xor
repz
lods
push
test
or
insl
insb
pop
add
mov
mov
and
inc
loopne
repnz
or
sbb
popf
mov
mov
mov
mov
cli
and
jns
lret
or
xchg
adc
ljmp
inc
addb
loop
fwait
mov
es
xor
ja
sbb
or
clc
push
jae
push
test
jno
cltd
cmp
stos
test
stos
arpl
or
sub
mov
int3
jp
sub
fdivl
scas
sbb
dec
icebp
movsb
lock
add
inc
dec
push
cmp
scas
mov
insb
call
push
cmp
in
je
pusha
dec
out
mov
dec
dec
aas
stos
sti
mov
add
lock
js
sti
fs
dec
adc
mov
cmpb
push
xchg
dec
cmp
bound
pop
fmul
jbe
js
out
push
lods
push
adc
cld
push
fldcw
xorb
cmp
jns
or
xchg
fsubrl
push
out
adc
adc
out
aaa
outsl
cli
fcoms
test
scas
push
hlt
or
push
pop
fs
xor
add
mov
insb
or
adcb
xor
test
das
clc
out
fsts
clc
aad
xchg
inc
add
inc
shr
iret
pusha
sbb
out
test
test
shlb
incb
and
mov
scas
lds
bound
test
jae
mov
or
adc
cltd
stos
mov
pop
mov
jb
out
mov
jae
pusha
add
stos
cmp
gs
leave
cmp
data16
mov
jne
out
loopne
inc
adc
lea
scas
jbe
ret
cmp
pop
xchg
adc
in
cmpsb
add
mov
push
dec
loope
jecxz
and
pop
test
xchg
stc
mov
in
arpl
add
dec
cmp
mov
cmc
loope
mov
cmc
aaa
xchg
pusha
jg
call
cmp
push
in
sub
outsb
pop
mov
roll
mov
or
cmp
lret
xorb
sub
out
out
mov
inc
out
mov
sub
cmp
cld
das
mov
push
loope
ds
rclb
dec
inc
int3
std
add
inc
cmp
cmpsb
repz
mov
fsubr
adc
and
push
cmp
out
xor
jmp
and
roll
sbb
fcmovnb
fsts
fldl
ja
push
sub
test
jno
popl
or
les
mov
dec
ljmp
loope
roll
icebp
mov
xchg
stos
mov
pusha
inc
test
filds
xchg
pop
addr16
ja
add
xor
push
xor
addr16
cmpsl
popf
ds
cltd
push
jle
jecxz
pop
lds
ja
ret
test
ror
stc
data16
icebp
aas
and
iret
adc
std
mov
dec
mov
fcmovbe
shrl
push
xchg
insl
push
rcl
enter
shlb
js
dec
jb
add
cltd
es
mov
fistpl
mov
jb
pop
xchg
mov
xor
adcl
push
mov
rsm
inc
aas
cwtl
sahf
das
loope
test
ror
mov
dec
jecxz
fcoml
push
jle
lcall
lds
mov
fildl
outsb
test
jp
sbb
jb
sbb
xchg
or
xor
or
xor
or
xchg
out
jmp
imul
and
and
nop
popf
clc
out
addr16
push
lods
mov
enter
push
imul
xor
mov
lea
lods
push
sub
arpl
dec
out
mov
out
mov
jl
fiaddl
test
andb
stos
in
jge
sub
call
jl
mov
cmpsl
enter
dec
insl
adc
add
rcr
fsts
repnz
aaa
ja
sbb
inc
inc
pushf
cmp
pop
ss
or
std
add
pop
aad
mov
movsb
mov
pop
inc
lea
dec
add
enter
lock
stos
popf
lretw
push
xchg
aad
in
movsl
cli
aad
in
dec
test
mov
aaa
data16
pop
mov
lea
adc
fcmovne
jecxz
lods
leave
sbb
pushf
and
mov
out
out
dec
or
sti
xor
pop
les
lcall
push
adc
cmp
pop
bound
in
aam
jp
inc
in
push
insl
shrl
jmp
popa
ret
loope
std
loop
loopne
fisttpll
out
fnstcw
pop
xchg
stos
leave
cld
icebp
mov
aas
rol
leave
arpl
dec
ret
insl
pop
sub
dec
jae
dec
repnz
data16
mov
sub
mov
jl
and
jg
sub
inc
sbb
divl
add
sub
xlat
and
adc
add
lahf
add
cmpsl
out
aam
sub
push
inc
and
cmc
push
test
call
jnp
loopne
or
out
mov
outsl
push
mov
mov
cltd
aaa
dec
loope
jecxz
cmp
add
inc
ret
enter
icebp
xorl
imul
lock
cmp
or
fldl
pop
mov
scas
mov
xchg
cmp
stos
mov
in
out
loope
mov
jg
iret
lods
negl
inc
in
sub
mov
mov
cmp
cltd
add
insl
push
mov
mov
cmp
cmpsb
pop
movntps
push
dec
xchg
stos
or
mov
loop
movsb
mov
or
in
pop
enter
xchg
js
loope
sbb
aaa
xor
jmp
arpl
lahf
push
push
xor
call
push
out
add
lods
or
lods
call
push
sub
and
add
push
mov
mov
xor
jb
call
popa
and
pop
mov
pop
ret
jo
test
or
imul
test
push
loop
cmpsl
icebp
xchg
add
cld
dec
and
sub
js
outsl
in
jmp
mov
push
pop
lods
lcall
jl
or
lea
dec
xlat
scas
mov
push
sub
sbb
adc
push
movsb
cmp
rorl
iret
pop
and
or
out
push
mov
repz
aam
pop
test
sti
call
xor
mov
out
aad
cmpsb
or
xorl
sub
jns
push
sub
pop
mov
rcrl
aad
pop
testl
test
pusha
lret
cmpsb
gs
pop
loope
inc
or
or
add
mov
aaa
push
ret
cmp
pop
nop
adc
into
fdivrl
lahf
insl
mov
outsb
xor
push
push
fwait
mov
stos
test
or
push
adc
idivb
fs
shlb
adc
cmp
dec
adc
cmpsb
cmp
cmpsb
aam
adc
int3
and
ret
cmpsl
out
mov
int3
dec
daa
wrmsr
cs
or
out
popa
enter
lret
mov
sbbb
decl
shll
mov
push
jmp
xor
xorl
test
rclb
adc
pop
or
stos
imulb
loopne
cmpl
cli
ret
ljmp
xlat
cmp
repz
add
lahf
jmp
or
sbb
jl
outsb
cs
stos
cmpsl
lods
cmp
mov
fcoms
and
mov
in
pushf
imul
bswap
outsb
mov
fwait
dec
jae
shlb
push
scas
hlt
add
sbb
addr16
pop
test
cmpsb
ja
in
shlb
data16
idivl
mov
fs
cmc
shrl
xlat
scas
jb
xor
sbb
out
pop
jmp
cmp
push
sbbb
mov
insb
jp
pop
adc
icebp
cmp
lods
pop
mov
test
and
sahf
cs
rclb
adc
int
xchg
push
push
fnstsw
popf
pop
lcall
jmp
shll
cli
aad
mov
pop
hlt
inc
ljmp
or
push
and
mov
lock
mov
sbb
xchg
iret
rcrb
stc
and
ljmp
lret
nop
dec
push
in
out
lock
pop
sbb
stos
cmpsl
adc
push
lcall
inc
das
shlb
add
lods
pop
pop
lahf
lret
nop
xchg
cld
jns
pop
push
or
mov
fwait
jo
iret
jno
mov
cmp
push
movsl
out
mov
xchg
lcall
in
mov
shll
sub
xchg
dec
insb
scas
iret
sbb
lahf
dec
cmpsb
mov
and
inc
rcrl
addl
mov
sbb
ljmp
iret
clc
xchg
lods
or
pop
adc
pop
lea
add
out
jno
out
jmp
and
or
and
add
in
mov
or
xchg
popa
xor
mov
loop
ret
cwtl
aad
dec
ret
fwait
scas
jecxz
rcrl
jns
xchg
cmpsb
inc
dec
inc
inc
shrl
sub
inc
dec
xor
inc
adc
les
loop
jle
ds
cmc
mov
jp
shll
iret
mov
cwtl
movsl
pop
scas
dec
sbb
sbb
hlt
inc
pop
gs
push
add
mov
mov
push
pushf
subb
in
push
leave
add
xlat
mov
outsb
lods
clc
pop
xor
mov
dec
mov
dec
js
jns
push
fdivs
sbb
mov
movsb
pop
sbb
sub
ret
sbb
ror
mov
pop
popa
pushf
or
push
add
sbb
push
fistl
xor
pushf
inc
add
fldl
pop
int3
xor
or
filds
aam
cs
scas
rcrl
mov
pusha
pop
lret
xor
fs
jge
repz
dec
add
xchg
xor
pop
or
add
inc
bound
hlt
jle
fs
loop
xchg
sub
aam
or
in
das
std
cmp
pop
das
pop
aam
mov
push
pop
ret
xchg
mov
dec
out
sbb
mov
into
sti
or
loope
sub
and
test
xor
add
std
addl
mov
jecxz
sahf
into
fucomi
call
imulb
sbb
mov
shll
movsb
mov
imul
adc
dec
cmp
pushf
dec
inc
ret
clc
imul
mov
rcll
cltd
add
pop
repz
mov
sbb
pop
fs
ss
mov
pop
jbe
stos
data16
jle
xor
fildl
sbb
sbb
inc
mov
xchg
push
pop
movsl
pop
push
mov
cmp
fidivrl
popf
or
out
adc
subl
roll
cmc
push
xlat
and
imul
jmp
push
repnz
pop
divb
or
aam
lcall
mov
mov
scas
fcoms
orl
cmp
adc
loop
jns
inc
cli
lret
into
andl
movsb
aad
fistps
sarl
mov
rcrl
repz
push
nop
or
push
test
sahf
std
cmp
add
jns
repnz
arpl
fisttpl
xchg
mov
repnz
inc
xchg
cmpsl
cmp
cmc
or
inc
dec
inc
jmp
mov
jne
cmp
push
push
daa
sub
cmp
adc
stos
icebp
cmp
test
jle
shll
push
inc
loop
push
and
xor
out
or
mov
cmp
jae
and
cmp
mov
call
and
jae
xabort
cmpl
xor
pop
fistps
mov
ds
mov
loopne
and
pop
and
jns
shll
and
or
inc
or
int
fwait
pop
xchg
xorb
inc
pop
jge
push
aaa
sarb
inc
lcall
sbb
loope
loope
xor
mov
fisubrl
dec
fisubrl
js
pop
cmp
push
inc
jne
adc
dec
cmp
sbb
inc
inc
stos
push
sub
mov
filds
bound
stos
mov
mov
push
mov
leave
cmp
push
push
iret
xor
cltd
mov
insl
and
js
push
scas
or
int
mov
leave
adc
mov
sbb
call
and
sub
push
xchg
imul
dec
bound
sahf
mov
sbb
push
fadds
fmul
leave
xchg
mov
sti
and
out
lcall
push
and
ss
outsb
push
xchg
stc
jp
cmp
insl
sub
mov
pop
mov
push
mov
out
bnd
mov
inc
call
push
or
lods
lret
add
mov
jge
movsl
rol
push
scas
sub
leave
jp
fistps
rcr
ds
cmp
dec
pop
dec
or
cmpsl
add
pushf
xchg
lods
push
loopne
ds
iret
clc
aad
leave
push
lret
popa
rorl
jns
cmp
mov
jno
fs
in
xchg
lahf
or
lea
fsts
jp
jmp
sti
inc
mull
mov
outsb
mov
sbb
jae
xchg
mov
or
cmpsb
mov
push
push
xchg
pop
test
fnstcw
shlb
inc
xor
adc
push
pop
xchg
jb
int
sub
into
popa
xor
jmp
aaa
out
push
cmp
nop
mov
sbb
shll
jne
pop
sahf
or
push
roll
test
push
mov
adc
mov
cmp
push
pshufw
mov
adc
loope
xor
jecxz
and
mov
pop
mov
je
add
push
dec
lds
in
mov
cltd
fdivl
pop
xlat
iret
syscall
mov
pop
mov
shll
and
hlt
je
sbb
and
addr16
mov
jno
sub
mov
in
cmpl
loopne
sbb
fsubl
clc
lret
mov
inc
ljmp
test
jb
pop
stos
mov
pop
iret
lret
adc
test
or
push
test
jo
adc
ljmp
scas
add
ss
cmpl
leave
mov
xor
xor
fnstsw
mov
sub
cli
jns
dec
mov
data16
push
test
or
call
imulb
lods
mov
push
loope
inc
jmp
or
sbb
loope
es
push
cmp
addr16
cli
pop
pop
add
ja
bound
in
les
notb
neg
jno
add
cli
pop
sub
pop
dec
popa
and
jo
sbb
push
adc
mov
out
push
aaa
mov
mov
je
cmp
scas
add
ficomps
and
jl
push
mov
sbb
xchg
fdivrl
jne
into
cltd
add
mov
or
js
mov
inc
mov
aaa
das
dec
decl
jo
jae
imul
andl
lahf
js
mov
ja
inc
adc
pop
loope
or
xchg
add
push
cmp
pop
jbe
in
ficoml
test
mov
and
gs
sub
movsb
jecxz
mov
mov
mov
sub
enter
fsub
xor
ret
addr16
gs
sub
fiaddl
mov
std
adc
mov
ljmp
jecxz
nop
orl
mov
sbb
lahf
movsl
sub
jge
sbb
inc
lret
mov
loop
enter
inc
imul
dec
jg
pop
pop
mov
insl
inc
inc
mov
mov
inc
aaa
insb
mov
movsl
das
pusha
data16
addr16
ds
out
repz
mov
pop
and
bswap
inc
dec
or
lret
rolb
push
bnd
das
mov
pushf
sti
pop
xchg
mov
lea
dec
add
notb
aad
or
xchg
push
push
imul
fidivs
jle
cmp
add
push
int
mov
add
xor
xor
test
call
int
inc
shlb
or
mov
mov
mov
jecxz
jbe
loop
or
pminub
pushf
adc
mov
enter
jb
nop
imul
js
inc
sub
sub
mov
rcrb
or
aad
loop
andl
xchg
mov
push
push
call
repz
push
xchg
mov
xlat
mov
test
push
pushf
fdivl
stos
mov
mov
mov
xor
cltd
sub
inc
inc
adc
xchg
xor
scas
aam
test
out
cmp
ja
xchg
andl
jle
adc
loopne
pop
adc
mull
shll
test
outsb
shlb
mov
mov
scas
cmpsb
jecxz
test
mov
xchg
movsb
leave
repz
in
test
mov
push
fsubs
pmaxsw
in
mov
popf
in
in
xchg
pop
xchg
scas
sbb
faddl
in
int3
test
sbb
and
fdiv
mov
sub
loope
mov
add
add
cmp
pop
sub
mov
in
mov
dec
adc
and
mov
and
sbb
add
jl
and
mov
out
jbe
sub
lret
push
mov
mov
sahf
cmp
cld
aam
repz
aas
jl
xchg
ret
mov
add
mov
dec
sub
mov
sub
test
aad
jge
outsl
xchg
scas
rcll
mov
fs
test
push
and
fwait
mov
insb
aad
sbb
test
ljmp
loope
mov
cwtl
fwait
dec
cmp
daa
into
sub
out
xchg
cltd
call
scas
and
pop
push
xchg
mov
sub
clc
xchg
sub
xor
cmpsb
into
mov
push
fadd
mov
cmp
xlat
shl
mov
xor
stos
stc
lds
push
dec
mov
int
mov
les
sub
xor
repz
mov
dec
lret
in
rclb
adc
add
insl
rcrl
jge,pt
cmc
mov
or
testl
pop
pop
lcall
jno
fimull
out
pop
mov
js
shlb
insl
mov
popa
push
cmp
xor
jmp
cmp
xor
sub
xor
add
inc
mov
xchg
or
repz
sbb
mov
sbb
rolb
xlat
fbld
sbb
dec
incb
sub
outsl
cwtl
lock
flds
jmp
sub
cmpsb
loopne
xchg
outsb
lcall
pushf
or
loop
mov
rcr
stos
cs
aam
cmpsb
xor
lods
inc
in
pop
popf
stos
cmp
outsb
pop
out
repnz
mov
add
and
xchg
lock
jb
mov
lds
pop
mov
cltd
pop
dec
popa
cld
sahf
add
bound
ret
les
push
sbbb
xchg
push
jae
pop
sbb
xchg
aam
sbb
or
es
inc
rcrl
xor
cwtl
int
mov
and
sbb
lods
sbb
inc
lahf
clc
dec
and
fdiv
xchg
and
add
int
rcrl
xor
out
xchg
pop
rcrl
mov
or
bound
pop
movsl
sbb
lcall
dec
fmuls
sarb
outsb
cltd
addr16
stos
jo
cmpsb
loop
cmpsb
dec
mov
mov
xchg
repz
inc
inc
pop
cmp
inc
sbb
cmp
adc
and
or
repnz
cmpsb
hlt
or
cmc
insb
pop
fwait
aaa
repnz
ja
mov
lods
jb
call
imul
jg
pop
mov
xchg
sub
jmp
out
adc
dec
incl
and
mov
inc
ljmp
lcall
fisubs
and
push
mov
fnsave
hlt
and
and
jge
push
out
mov
insb
jae
repz
mov
cmpps
in
add
sub
dec
mov
xchg
popf
dec
cld
push
aam
int
roll
xlat
fwait
xor
fisubrs
sub
jo
fsubr
jl
push
fldcw
dec
push
cwtl
fdivrs
cmpsl
into
xchg
mov
into
addb
or
nop
arpl
out
pop
dec
pop
test
mov
loopne
or
mov
push
jp
test
cltd
cmpsb
dec
fsubr
adc
mov
aad
push
push
addr16
mov
js
adc
xor
mov
out
fisttps
add
std
imul
fimuls
push
int
shll
push
or
das
ficomps
push
adc
or
or
cs
xor
or
pushw
test
das
lcall
inc
imul
loopne
insb
cwtl
jmp
nop
imul
adc
pop
and
and
das
inc
es
popf
push
mov
xor
sbb
xor
xchg
pop
add
cmc
xchg
shlb
scas
mov
inc
stc
mov
sbb
lea
xchg
or
jmp
test
add
jae
out
adc
imul
xchg
mov
and
test
arpl
fidivs
pop
adc
or
sets
or
push
jb
mov
ljmp
ficompl
leave
or
push
xor
cmpsb
mov
dec
imul
xor
call
outsl
push
pop
lahf
testl
push
aas
inc
add
cmc
bound
lret
jmp
mov
ret
sub
ljmp
mov
bound
mov
sub
pop
cmp
and
outsl
sub
push
leave
push
inc
xor
std
divl
je
fdivrp
inc
in
xor
leave
sbb
roll
dec
insl
jns
jno
testb
sti
movsb
or
icebp
pop
ljmp
xchg
ja
lret
mov
minps
add
mov
out
movsb
std
rcrb
repz
std
loope
inc
data16
mov
out
mov
out
scas
pushw
sbb
sbb
fwait
add
adc
jmp
dec
pop
sub
mov
ja
xchg
cmpsl
mov
movsl
xor
icebp
out
fs
lret
or
push
lahf
popa
add
and
lahf
ficoml
jecxz
sub
aad
inc
or
inc
cltd
sbb
pop
push
out
xor
inc
es
loopne
mov
jg
jmp
repz
fnstenv
push
push
push
push
xor
mov
mov
iret
dec
lods
jno
jl
pop
jmp
das
push
je
pop
insb
sub
mov
push
rcr
test
shll
sbb
push
xor
sub
cmp
scas
pop
xchg
mov
lret
popa
cmp
rol
jge
stos
and
fptan
insl
popf
cmc
js
insl
xchg
sub
mov
sbb
sbbl
pusha
jecxz
imul
fists
scas
lods
and
xor
adc
fiaddl
or
aad
push
jae
mov
inc
xchg
mov
add
lahf
jp
pushf
imul
jp
xor
aam
push
sub
xor
inc
mov
aad
add
mov
outsl
outsl
xchg
and
sub
mov
push
icebp
pop
mov
dec
cmp
and
pop
mov
add
dec
add
mov
mov
pop
cmpl
xor
pushf
iret
cmp
fcoms
cli
mov
lds
cmp
push
sbb
dec
je
add
pushf
cli
or
mov
sbb
mov
jg
or
das
cmc
dec
mov
jae
daa
lock
orb
inc
scas
push
jnp
fstpl
out
imul
shl
lock
cs
pushl
add
adc
push
sahf
ret
xchg
fisubl
xchg
js
mov
ud0
dec
arpl
jbe
mov
adc
lods
push
cmp
jp
xor
push
in
pop
rcrl
data16
ret
lock
cmp
mov
inc
test
pop
mov
mov
ss
rolb
mov
rcrb
out
into
jae
cli
push
lock
jae
cmp
fs
loope
out
mov
cli
ret
jno
xor
ret
fadds
jg
mov
fsubrs
sub
cmp
mov
add
pop
xor
lock
imul
adc
subl
ret
inc
imul
test
inc
mov
ret
xchg
mov
cld
and
push
xchg
push
fldt
or
cmc
xor
fwait
popa
push
dec
mov
je
mov
pop
mov
xor
xchg
lea
movsl
ja
and
gs
sub
inc
lods
jbe
mov
test
loop
jp
jp
cld
mov
imul
push
adc
mov
in
inc
push
repnz
mov
pop
mov
lock
enter
inc
pop
call
sahf
dec
dec
rol
push
sbb
mov
aas
adc
jle
pop
sub
push
sbb
into
jg
dec
scas
or
inc
lcall
inc
adc
xor
iret
lds
xchg
lds
xorl
jno
shlb
pop
pop
call
out
xlat
mov
add
mov
cmpsl
stos
xor
push
dec
out
cli
sub
int3
sti
leave
in
push
cmp
inc
mov
or
pusha
jbe
mov
or
push
aas
fyl2xp1
push
mov
loope
xchg
test
pop
sbb
and
test
mov
add
mov
test
xchg
mov
insb
ret
andl
scas
xchg
out
mov
jl
fdiv
scas
adc
xlat
iret
das
mov
push
cld
in
hlt
sbb
pop
sbb
add
mov
outsb
push
pop
clc
sbb
aad
sub
adc
jne
cli
fsubrs
out
sti
sub
sub
and
push
repz
cld
adc
test
or
jne
mov
sub
mov
pop
dec
lods
rcrb
jp,pn
test
cmpsb
xchg
fmuls
mul
aas
ljmp
dec
daa
mov
mov
ret
fcomip
lock
pop
loope
nop
sub
fs
hlt
mov
push
pop
std
sbb
repnz
or
outsb
dec
mov
dec
insl
mov
dec
adc
sub
nop
cmpb
out
pop
adc
fs
push
arpl
lods
pop
stos
cmp
add
mov
mov
sub
sub
mull
push
fs
jbe
push
push
popa
icebp
gs
sarb
movsl
mov
icebp
sub
andb
xor
or
in
pop
lods
fisttpll
mov
mov
fwait
push
or
out
jg
in
fiaddl
out
pushl
mov
xchg
xchg
xchg
mov
xchg
fdivr
shrb
insl
xor
stos
rorl
pop
jle
loopne
pop
stos
ds
or
add
hlt
and
fcompl
out
sbb
ja
imul
sbb
movsl
push
xor
ds
incl
es
jnp
mov
fidivs
push
cwtl
insb
mov
add
shlb
or
lods
lret
jl
and
repnz
sbb
xchg
aaa
sbb
xor
loopne
je
enter
in
inc
shlb
dec
and
xchg
dec
frstor
iret
sub
lcall
jnp
movsb
cmp
pop
xlat
in
out
or
add
add
and
push
jo
sbb
inc
ds
jecxz
ja
loope
aad
sub
push
jl
xchg
scas
dec
xor
add
dec
lea
push
jmp
or
xorb
scas
cmp
clc
xchg
jge
movsl
cltd
int3
sub
adc
xlat
add
pusha
add
into
inc
push
xor
int3
les
xchg
out
mov
add
fisubl
inc
mov
out
ss
fsubrp
ds
idivl
scas
std
and
fdivs
mov
pop
scas
shl
loopne
lret
push
or
mov
add
add
stos
jmp
repz
cwtl
out
scas
mov
std
push
xor
mov
jnp
int
mov
jp
ja
ds
mov
out
fidivrl
stos
imul
and
lea
adc
sahf
pushf
mov
push
repz
cli
push
xor
pop
aas
sub
push
jp
jb
mov
cmp
pop
nop
arpl
cli
fdivp
pop
scas
in
lods
dec
sarb
das
and
adcl
test
loop
stos
in
in
data16
cld
mov
cmc
nop
cmp
add
outsb
hlt
cmpsl
push
sub
aad
sbb
and
mov
jge
push
cmpsl
jo
clc
ljmp
adc
jg
mov
fdivs
pop
int3
adc
pop
in
mov
es
mov
add
add
mov
test
cmp
push
fsqrt
lods
cmp
ss
test
sbb
call
add
push
and
adc
dec
mov
out
fdivr
test
push
subl
mov
sbbb
cwtl
dec
ljmp
mov
push
jo
jno
jg
pop
mov
div
enter
mov
std
bound
rcl
jbe
mov
dec
xchg
stos
xchg
mov
push
rcrb
inc
jl
mov
lods
xchg
in
pop
dec
or
popf
mov
sub
pushf
xor
daa
xchg
sbb
stc
add
cld
cmc
cmp
imul
test
mov
loop
ficoml
push
and
hlt
arpl
lods
shrl
int
jno
inc
mov
jmp
mov
cmpsl
mov
xchg
pop
scas
xor
pop
and
or
pop
cmpsb
xchg
jp
jecxz
movsl
and
sbb
hlt
mov
das
gs
insb
jno
mov
stc
xchg
loope
loope
cmpb
rol
jmp
xlat
cmp
rcll
repz
aad
loop
pop
push
inc
sub
fldl
pop
jae
and
xchg
or
cmp
dec
fwait
in
jb
mov
cmp
cld
dec
mov
movsb
rolb
adc
cs
push
out
popf
aas
add
mov
imul
fmulp
popf
out
testl
sub
jl
mov
jle
sar
jecxz
jb
int3
jmp
mov
dec
outsb
or
int3
fdivs
xlat
xor
dec
mov
inc
cmp
pusha
push
testl
es
jmp
xchg
add
andl
and
ficompl
in
aas
movsb
xchg
jl
dec
cmpsb
cmp
aas
add
xchg
mov
scas
xor
jl
das
movsl
ljmp
stos
loop
fwait
fs
dec
xor
jp
loopne
add
shrb
imul
pop
xor
adc
out
push
in
xchg
push
pop
jnp
mov
outsb
add
jne
addl
xchg
sub
data16
add
mov
lds
in
sbb
push
cwtl
fs
push
aas
cmp
aad
hlt
mov
pop
or
fs
lds
leave
cmpsb
sbb
mov
iret
adc
mov
in
sahf
and
cmc
sub
jp
or
inc
xor
es
mov
pushf
dec
cmp
lods
lahf
mov
out
subl
xor
and
push
push
data16
jnp
add
cli
dec
xchg
jae
push
xor
pop
fadds
push
cmpsb
rol
adc
mov
je
daa
in
clc
loopne
push
scas
popf
sub
popf
jmp
cmp
stc
movzbl
jae
and
add
add
adcb
xchg
fisubs
sbb
in
sbb
stos
mov
jno
pushf
jmp
push
jg
fsubr
aad
fstps
push
mov
xchg
pop
out
mov
jns
mov
sti
lret
repnz
xor
pop
pop
lds
sub
test
jmp
fsubr
xchg
fdivl
cmc
cmpsl
xchg
and
ret
dec
cli
push
test
inc
ds
dec
mov
push
in
int3
cltd
pushf
mov
dec
add
sbb
push
xor
lea
push
push
enter
dec
mov
mov
sbb
mov
inc
cwtl
inc
repnz
cmp
sti
mov
fwait
pop
mov
rcl
aad
inc
fildll
cli
pusha
push
adc
out
int
negb
lret
push
lret
or
rorl
sbb
add
cmc
push
fldenv
mov
loopne
ljmp
repz
dec
gs
and
loopne
out
lea
push
inc
int3
mov
js
and
lods
movsb
xchg
dec
jge
and
aas
sbbb
loop
pushf
out
dec
gs
test
add
gs
inc
mov
ror
test
ficoms
test
pop
sahf
js
push
xor
add
jb
cmp
add
jne
je
inc
cmp
inc
pushf
aad
int
cmc
jbe
jg
aaa
addr16
rorl
dec
mov
sbb
test
test
dec
add
in
movsb
jo
fmulp
movsb
cmp
inc
adc
gs
in
fst
push
push
inc
xchg
loop
cli
cmpl
mov
mov
sarl
jge
and
jmp
cmp
cmp
or
or
f2xm1
aad
mov
dec
mov
xchg
lret
icebp
xchg
out
mov
push
jnp
test
cmp
adc
xchg
xchg
int3
adc
mov
and
cltd
idivl
out
xor
jecxz
dec
popf
orl
xor
loop
jmp
test
insb
fsts
dec
mov
and
jo
test
jecxz
sub
mov
jp
mov
pop
lret
stc
mov
or
pop
movsb
subl
inc
jecxz
adc
cmc
push
jge
stos
lahf
lods
cs
cmp
test
xor
sub
aas
push
push
cmp
shll
stos
sub
mov
mov
mov
dec
divb
and
add
push
sarl
mov
aas
cltd
mov
cwtl
into
jp
sub
adc
cmpsl
lods
sub
add
xchg
mov
xchg
adc
push
mov
mov
jnp
pop
vpcomuw
pop
addr16
or
xchg
insb
scas
addb
mov
shlb
scas
pop
jg
fildll
outsl
loop
mov
push
adc
cli
dec
out
inc
or
cmp
pop
loop
jns
add
cwtl
cmpl
sbb
sbb
lret
std
cwtl
lods
jne
and
out
sarb
mov
lock
out
cmpsb
stos
call
fildll
mov
addb
jno
push
call
mov
nop
pop
sbb
rorl
dec
arpl
clc
fiaddl
mov
lcall
xor
addr16
mov
sub
and
and
lahf
mov
mov
pop
les
lret
jne
int3
sub
cmp
push
xchg
mov
repnz
into
mov
mov
mov
aad
xor
push
push
enter
movsl
jg
int
mov
cwtl
mov
lock
imul
loope
stos
ret
push
negl
adc
mov
shl
dec
mov
enter
outsb
imul
sub
pop
aaa
ds
lahf
mov
aas
xor
jmp
dec
mov
inc
mov
out
jp
push
mov
add
inc
outsb
sbb
repz
ror
cmpb
imul
ret
out
js
ja
repz
push
movsl
sbb
popa
lret
and
lea
fsubrp
push
rcrl
icebp
mov
mov
lods
call
mov
in
stos
insb
sbbb
out
and
rorl
xchg
push
outsb
sbb
pop
adc
hlt
enter
mov
sub
mov
ret
subl
or
stos
je
jae
dec
mov
and
sar
dec
js
pop
xor
mov
gs
roll
mov
lods
test
lret
xchg
arpl
push
xchg
mov
and
and
bound
mov
lods
icebp
fwait
push
push
cmpsb
imul
lss
popa
sub
jno
mov
adc
int3
test
add
loop
xlat
xchg
jmp
mov
xchg
repz
and
ds
push
add
push
rolb
dec
lds
js
in
pop
mov
shr
aas
push
push
loop
dec
lea
pop
ret
js
insl
stc
sahf
pop
cs
clc
filds
imul
into
insl
pop
push
out
jo
mov
loop
js
xor
adc
stos
rcrb
or
shrl
xor
mov
in
outsb
insb
mov
in
js
lret
inc
lock
sahf
dec
xor
dec
sub
push
xchg
push
lds
push
mov
loop
dec
sub
cmc
out
dec
mov
cmp
data16
dec
rorl
adc
lret
pop
ficomps
aad
and
shl
xor
pop
popf
inc
or
mov
pop
jno
cmp
add
lock
cwtl
pop
sub
push
xchg
add
cmp
or
scas
cmc
fcompl
mov
dec
scas
push
sub
rorb
iret
rclb
dec
outsb
and
nop
ror
out
mov
in
arpl
test
cmpsb
fsubp
sub
xchg
fwait
pop
add
jno
xor
push
scas
js
orl
dec
jmp
pop
fwait
push
dec
daa
inc
push
push
inc
xchg
sub
cltd
icebp
movsl
stos
lea
mov
xchg
shl
dec
xor
mov
out
adc
fldcw
enter
mov
cmp
incl
adc
jg
cmpsb
mov
mov
adc
aaa
push
rol
rorl
pmaxub
xchg
movsl
jecxz
cwtl
stos
adc
mov
leave
test
push
sti
cs
sub
fsubl
addl
jle
jo
sti
push
mov
call
xor
jle
movsl
sarl
loop
lods
int3
inc
sub
and
in
pusha
mov
lods
and
movsb
mov
dec
addr16
adc
leave
mov
sarb
stos
dec
jle
outsl
rcll
mov
sahf
xchg
loop
aad
lret
add
aad
pop
sbb
pop
lret
and
push
cmp
xchg
lcall
add
sti
and
or
or
xchg
aas
in
or
jle
xchg
movsb
and
push
int3
xorl
lcall
mov
adc
jecxz
sbb
xlat
pop
dec
es
mov
call
imul
pop
popa
mov
xchg
mov
mov
jno
pop
inc
std
scas
ror
dec
dec
aas
nop
cmp
jl
ss
aam
in
push
push
xchg
aas
adc
mov
and
dec
sub
sub
pushl
dec
ss
aam
and
clc
add
sbb
mov
jecxz
sub
fldt
dec
cmc
mov
and
lahf
xchg
cmc
stc
clc
imul
or
leave
dec
xchg
jge
cmp
adc
and
adc
mov
mov
mov
jmp
push
inc
mov
rcll
dec
je
repnz
mov
or
aad
mov
repz
test
add
out
lock
pop
data16
sub
aas
jb
imul
or
cmpsl
cmp
sbb
dec
pop
xchg
dec
fs
mov
loop
sbb
xor
outsl
popa
mov
mov
aam
push
inc
addr16
std
int3
dec
fdivl
int
ss
aam
out
push
jne
or
mull
imul
leave
lods
nop
cld
sbb
test
mov
mov
mov
fidivrs
sub
push
dec
rcr
les
or
push
adc
mov
dec
or
cmp
aaa
fnstsw
jae
push
out
enter
push
cmpsb
mov
push
pusha
testl
test
push
popa
add
adc
add
dec
lock
dec
ret
decl
mov
push
sbb
clc
push
add
mov
movsl
pop
lock
test
ja
dec
insl
leave
push
stc
add
and
sbb
or
inc
in
push
fwait
dec
popf
int
push
xchg
add
cmp
mov
push
or
mov
sbb
mov
jne
les
sbb
pop
sbb
pop
dec
imul
into
es
rcr
loop
inc
dec
xchg
cmpsl
or
sub
xor
scas
psubsw
xor
fistps
sub
xor
adc
or
loopne
and
mov
iret
mov
imul
insb
push
std
decl
pusha
xchg
jecxz
rolb
dec
push
sarb
je
and
or
dec
push
inc
gs
dec
ljmp
and
cli
scas
pop
cmp
aad
push
jecxz
sub
test
scas
push
subl
dec
mov
dec
notb
movsl
sbb
cld
pop
pop
sub
mov
lahf
xchg
mov
imul
sbb
bound
mov
xor
movsb
stos
mov
adc
int3
inc
in
add
add
mov
mov
inc
daa
xchg
mov
xchg
dec
stos
dec
or
lcall
adc
scas
faddp
jne
into
jl
es
adc
dec
inc
lcall
outsb
xor
das
adcb
nop
dec
pop
rcl
iret
xchg
mov
dec
fcmovnu
and
or
mov
ja
popa
dec
pusha
ds
xor
idivl
cmpsb
loop
out
fldt
inc
faddl
lods
pusha
cs
test
adc
mov
fincstp
xor
mov
out
jle
adc
andl
repnz
inc
mov
imul
or
aam
or
clc
mov
jbe
je
stos
aaa
loopne
inc
faddp
cltd
mov
dec
mov
mov
scas
pop
pusha
out
push
or
push
or
mov
les
imul
out
xchg
mov
mov
fimull
repz
icebp
adcl
outsl
push
xchg
insl
push
pop
sbb
bound
daa
mov
rcrb
ret
lock
jno
and
leave
add
imul
into
outsb
pop
mov
aad
mov
jnp
stc
sbb
xor
enter
popa
lock
pop
add
xchg
add
mov
jp
mov
cmp
jb
and
mov
loope
test
fiadds
cli
js
sbb
in
and
mov
jne
push
sarl
pop
das
hlt
scas
add
and
push
fucomp
lea
and
sbb
rcr
pushf
sub
dec
mov
fiaddl
ja
add
ret
loopne
sub
in
scas
or
sti
mov
pushf
adc
into
and
outsl
xor
sub
mov
push
shr
imul
loope
jo
xchg
push
mov
pop
fbstp
repz
in
mov
xchg
ss
outsl
cmp
adc
xchg
outsb
ljmp
pop
dec
mov
inc
or
popf
dec
icebp
daa
xchg
rcll
mov
jns
movsl
xor
push
pop
das
pop
xor
xchg
sbb
push
cmpl
inc
inc
popa
into
mov
jno
dec
mov
dec
dec
pop
inc
in
aad
add
sub
cld
pop
js
mov
dec
popf
les
add
xchg
jle
movsl
push
mov
or
lds
mov
cmp
cmc
movsl
mov
sbb
dec
xchg
loopne
hlt
dec
jl
xlat
sub
adc
jmp
pop
pop
clc
or
xchg
pop
push
sarb
fldln2
push
mov
cld
sub
ja
adc
or
or
inc
or
jb
addb
int3
fmulp
cmc
ficompl
inc
arpl
dec
pop
fwait
dec
inc
jmp
and
xchg
icebp
das
pop
cwtl
inc
or
add
sbb
fnstsw
push
and
lahf
ljmp
hlt
into
pop
pop
test
xchg
ret
loopne
aaa
or
sbb
fstl
inc
jo
test
das
dec
dec
bound
imul
xchg
jge
mov
shrl
jp
adc
dec
pop
jbe
or
and
jge
pop
lods
imul
lahf
iret
sti
dec
push
jnp
fdivrs
sub
sbb
lcall
inc
push
cmpsl
hlt
push
mov
out
mov
shll
in
stos
xchg
mov
push
push
pop
fsubrs
mov
movsl
sbbl
fwait
add
icebp
iret
in
mov
and
dec
mov
or
loop
ficoms
jae
mov
push
fcoml
xchg
ret
cltd
movsl
mov
arpl
adc
add
outsl
xchg
gs
leave
out
push
movsb
mov
pop
jecxz
sbb
lods
gs
cmc
rclb
outsl
std
jecxz
loopne
cld
popf
pop
push
xrelease
mov
mov
add
in
sub
fwait
adc
jae
mov
fwait
push
sarl
mov
sbb
pusha
mov
enter
rcrb
adc
lret
lods
sub
jae
or
inc
xor
movsb
add
mov
faddl
lret
and
lret
sbb
add
mov
fisubl
ss
lock
je
sub
add
pop
xor
rcll
xor
push
xor
push
sub
mov
pushf
cwtl
nop
fcom
push
or
cmp
daa
sbb
xor
jg
fbstp
mov
push
xchg
aaa
fiaddl
jl
mov
push
dec
cs
fdivrs
or
jnp
dec
and
imull
out
xchg
cmp
jnp
testl
xor
pop
pop
and
fadds
nop
cmc
je
outsl
insb
js
inc
dec
sahf
mov
mov
sub
loopne
or
je
sbbb
mov
or
les
icebp
cmpl
dec
ficompl
loop
mov
outsb
cs
mov
scas
inc
mov
test
ss
mov
inc
out
ret
mov
add
mov
mov
dec
sub
mov
pop
pop
push
rcr
in
js
and
into
push
sti
stos
ret
das
icebp
adc
test
jmp
push
mov
and
push
aad
inc
xor
das
bnd
and
jno
and
pop
mov
jl
push
sub
lock
cmpsl
inc
pop
mov
add
aam
movl
push
jb
jmp
int3
adc
or
push
lock
in
sub
cmpb
xchg
xchg
jp
out
and
xchg
test
dec
and
pop
aam
mov
jns
sub
hlt
inc
frstor
inc
fcoms
mov
and
adcl
inc
xor
sti
adc
mov
lds
dec
dec
jge
gs
sub
adc
fcompl
sbb
mov
and
icebp
xchg
outsb
cmp
lds
mov
repz
fisubs
or
xchg
xchg
je
imul
outsl
and
call
stos
cltd
leave
orl
ljmp
bound
mov
jb
fcmovnb
and
jo
out
cltd
cmp
jp
insb
lret
das
dec
mov
dec
xor
fstpl
aas
lea
jae
xor
cmc
in
mov
stos
mov
hlt
ljmp
stos
or
push
xchg
mov
aam
gs
into
lcall
loope
out
roll
push
inc
pusha
pop
mov
jecxz
fistl
sahf
pop
int3
and
fsubrp
push
sbb
dec
mov
mov
inc
lcall
adc
jns
mov
push
or
stos
int3
pop
mov
aas
mov
ss
ret
inc
mov
test
jge
mov
jnp
cmp
mov
push
add
and
push
test
cwtl
ret
in
frstor
dec
mov
dec
cmovl
or
jl
pushf
inc
push
dec
push
mov
or
scas
cwtl
mov
out
sti
insl
jo
jp
xor
mov
push
jle
xchg
mov
adc
inc
cmc
out
test
push
stc
xchg
dec
cs
push
fisttps
stos
aas
fdivl
xor
out
sub
incb
xor
lock
cmp
out
in
nop
adc
jl
int3
xor
adc
dec
jnp
cmpsl
out
rcl
loopne
xchg
enter
lahf
pusha
clc
sub
repz
jne
push
shlb
notl
das
test
pop
and
div
out
mov
lea
inc
pop
xchg
ds
or
js
jmp
scas
into
bound
std
mov
shrb
push
imul
fcmovnu
outsl
scas
mov
mov
and
xor
or
loop
fisubs
dec
aas
xor
fcom
in
mov
adc
adc
pop
pop
add
shll
dec
push
ja
adc
out
cmp
imul
jno
sbb
fwait
inc
jecxz
test
rcll
jne
pop
mov
push
push
xor
mov
xchg
insl
fistl
lods
call
mov
loope
push
cmpb
mov
mov
sub
icebp
mov
jecxz
mov
pop
mov
arpl
or
push
or
and
cmp
das
or
cmp
dec
add
xor
test
push
shlb
push
lret
cmp
xor
xor
pcmpeqw
loopne
add
or
outsl
divl
pop
cmpsl
xchg
sbb
testl
push
pop
repz
out
add
mov
push
dec
sbb
cmp
lcall
lods
pushf
or
push
pop
popf
or
into
xor
and
push
inc
adc
push
les
cld
lcall
clc
hlt
push
cmp
das
test
movsl
mov
adc
cmpsl
les
popa
out
les
inc
jmp
pop
dec
cmp
push
pop
fcmove
lcall
test
popf
popf
in
xchg
add
push
sub
out
sub
lock
jns
pop
fistpl
mov
popa
cmp
das
mov
popa
sub
loopne
sbb
int3
fcompl
adc
pop
mov
movsl
and
mov
cmp
mov
and
hlt
jae
and
outsl
mov
adc
arpl
push
inc
fnsave
lods
jmp
lret
jb
jg
rcl
popf
test
pusha
outsb
pop
push
insb
out
mov
mov
jle
add
dec
sub
dec
inc
out
stc
sbb
clc
jp
xchg
ljmp
pop
and
add
cmp
and
jl
je
stos
mov
jecxz
dec
xor
sub
xchg
ret
test
movsl
push
mov
cmp
rcrb
rcrl
int3
out
cmp
mov
lock
aam
pushf
dec
and
mov
dec
jbe
pop
sbb
aaa
aam
jne
loop
push
push
jge
aaa
std
inc
das
out
lods
xor
cmpsl
dec
xchg
ljmp
sub
adc
ret
add
mov
jmp
into
and
mov
pop
dec
push
outsl
fldt
dec
dec
mov
mov
rcrl
inc
inc
mov
mov
sbb
daa
mov
insb
and
out
xor
scas
push
cmp
pop
jg
movsb
cmc
mov
xor
add
mov
pop
jno
rorb
iret
ljmp
mov
sub
or
fimuls
sbb
fs
clc
loope
ret
icebp
inc
leave
incb
sbb
inc
dec
mov
mov
cmp
pushf
and
fimull
sub
ss
xchg
or
incb
dec
pop
or
jge
or
sbb
sub
xor
stc
lea
xchg
int3
fistpll
dec
xchg
lret
and
test
in
jmp
and
jle
and
pop
leave
pop
mov
and
addl
mov
add
lods
insl
jl
sub
jp
mov
aas
outsb
cmp
ja
and
popf
fidivl
push
jbe
add
mov
aaa
jno
movsl
fildll
ficomps
in
inc
movsb
sub
inc
mov
xchg
lds
jg
incl
add
fcmovbe
dec
mov
or
cmp
call
sub
arpl
test
not
mov
or
cli
cmpb
or
imull
icebp
cmpsl
xchg
or
aaa
xchg
sub
dec
push
aas
or
jnp
dec
sub
xchg
punpckldq
xor
imul
cmpsl
pushf
pop
inc
jg
pop
push
inc
push
sbb
jbe
mov
es
std
lock
ficomps
push
or
cmpl
xchg
mov
cmp
gs
push
into
pop
cs
loopne
popa
nop
nop
xor
jl
pop
pop
pop
xchg
mov
push
btr
stos
push
jo
popf
imul
in
push
inc
mov
and
adc
or
fiaddl
inc
mov
imul
insl
jmp
mov
sbb
pop
mov
roll
imull
loope
cmp
lcall
jle
add
gs
fsubs
fnstcw
xor
outsb
push
jbe
dec
adc
sub
xor
pushl
and
daa
mov
rolb
fidivrl
and
ret
bound
repnz
or
idivb
mov
push
repz
movsb
fiadds
test
mov
arpl
xor
xchg
call
push
pop
or
iret
mov
pushf
fwait
icebp
and
iret
test
sti
pushf
sub
ljmp
dec
sbb
cltd
enter
mov
loope
adc
sbb
and
cmp
push
pop
jl
in
test
scas
push
ret
test
xor
sbb
inc
sbb
sbb
loopne
fwait
pop
cmp
cmpsb
sub
imul
setge
js
sbb
aas
imul
rolb
xchg
imulb
xchg
iret
aaa
arpl
lds
inc
int
sub
jno
xlat
xlat
lds
jge
xor
aaa
push
pop
mov
imul
mov
dec
les
shl
aad
mov
push
enter
cmp
in
mov
or
pop
pop
mov
mov
mov
outsb
movsl
sub
ss
cmp
lret
cmp
sbb
imul
cmpsl
cmp
mov
rol
cwtl
xchg
cltd
cld
push
mov
mov
ds
faddp
xchg
loope
fisubs
mov
popf
push
aad
push
in
subb
and
pop
xlat
inc
and
dec
loopne
jb
loop
sti
add
stos
mov
add
sti
stos
or
aad
cld
push
mov
mov
test
adc
fnstcw
in
sbb
movsb
test
rolb
mov
inc
jne
jnp
dec
cmpsl
jg
xchg
xor
test
adc
loope
es
and
and
adc
mov
or
mov
xchg
jns
jge
cltd
ror
adc
addb
xor
push
jmpw
stc
cmpsb
pop
out
xor
mov
dec
fwait
mov
lea
inc
stos
shlb
mov
and
fdivl
push
xchg
or
push
xchg
jnp
add
aad
repnz
xor
ljmp
js
dec
loop
ja
incl
jle
aas
imul
push
add
pop
inc
jno
fidivl
js
mov
or
inc
mov
mov
mov
out
pop
js
roll
cmc
std
xor
insb
rep
lods
loop
aam
jle
es
adc
outsl
cltd
sub
loopne
pushf
dec
xlat
lock
inc
pop
cmpsl
movsb
iret
cmp
test
jae
sbb
js
cmp
jmp
addr16
nop
or
cmp
mov
lret
std
dec
xor
mov
push
mov
sub
and
push
adc
fistps
dec
fcompl
nop
mov
imul
mov
push
or
mov
lea
xor
enter
mov
dec
out
push
xchg
jb
push
jp
xlat
xchg
xor
mov
cmp
mov
sti
icebp
pop
dec
xor
es
xchg
pop
stos
adc
enter
out
dec
pop
pop
loopne
pop
adc
mul
insb
fisubl
test
pushf
lret
aaa
push
sub
push
mov
jge
xchg
std
cld
add
jl
imul
dec
or
jecxz
and
jae
ss
dec
cmp
aam
jge
mov
pop
fmul
pushf
ja
adc
loopne
push
cmp
sub
mov
adc
mov
fwait
adc
sbb
repz
je
dec
push
cwtl
inc
mov
push
arpl
lods
adc
outsl
insl
ljmp
push
in
jl
dec
lock
movsl
sahf
pop
scas
movl
sbb
fwait
lea
mov
fldl
lods
into
dec
jae
outsb
cltd
test
and
xchg
out
insl
jo
inc
les
ret
sbbl
inc
mov
loop
aad
pop
dec
mov
lods
fs
adc
mov
faddl
pop
test
inc
inc
mov
repz
jbe,pt
into
std
hlt
jbe
in
ja
mov
ja
lea
push
lcall
mov
jecxz
rcrb
ss
outsb
arpl
push
fisubrl
in
aam
mov
test
movsl
xor
test
sub
and
test
imul
je
fnstenv
pop
jno
outsl
push
out
shrb
xchg
pusha
mov
mov
mov
nop
inc
sbb
test
sbb
push
push
mov
sub
sbb
dec
lahf
mov
mov
cs
in
lea
jae
data16
xor
fcoms
aas
xlat
imul
cwtl
xchg
rcll
cmpsb
jo
adc
icebp
pop
lahf
test
shl
fmul
sub
lock
push
jnp
xchg
mov
out
dec
xchg
pop
fiaddl
mov
or
xchg
stos
xchg
adc
mov
stos
and
and
xchg
mov
mov
out
mov
add
lcallw
push
mov
adc
fwait
jmp
sbb
jg
and
pop
dec
cmp
inc
mov
pushf
fdivr
xor
push
sti
jno
icebp
shll
loope
jg
out
addr16
adc
les
loope
orl
sarb
or
jp
hlt
stos
in
std
rcrb
mov
ficomps
movsl
mov
lods
push
jb
mov
sbb
test
frstor
popf
jnp
sub
cltd
cmp
pop
fmuls
fldz
sbb
mov
add
jg
mov
mov
fcmovbe
push
jl
adc
pop
aas
add
ds
aas
inc
js
pop
cmp
xor
popa
lods
pusha
bound
cltd
cmp
xchg
mov
jmp
sbb
push
lock
stos
sbb
pop
jnp
push
add
adc
dec
js
xchg
ret
cwtl
outsb
out
insb
inc
dec
mov
ss
gs
mov
mov
nop
cmpsl
sub
ljmp
dec
jecxz
xchg
mov
out
push
in
jne
sbb
stc
jnp
ret
push
add
ljmp
push
pop
mov
fs
mov
jnp
aas
pop
es
ret
cltd
mov
mov
add
leave
sub
gs
xchg
in
pop
sbb
rcrl
jge
call
xor
pushf
push
pop
mov
jb
mov
add
pop
jecxz
hlt
xchg
in
mov
sbb
pop
cmp
xchg
js
push
jae
js
sbb
fdiv
pop
push
xchg
mov
jns
arpl
popf
dec
ret
inc
adc
jp
test
cmpsl
ss
in
adc
or
nop
out
inc
aaa
je
and
xor
push
mov
dec
push
inc
sbb
jge
xchg
dec
push
add
cmp
leave
push
inc
adc
mov
mov
add
fimull
or
imul
movsb
icebp
inc
lret
mov
xchg
sarb
mov
imul
inc
cs
mov
ljmp
aas
lret
ds
imul
mov
lret
pop
cmp
cmp
sbb
xchg
inc
and
mov
loopne
repnz
cwtl
or
clc
aas
xchg
int
jae
pop
inc
or
jl
cmp
inc
sub
mov
loop
push
mov
cmp
cwtl
inc
push
jnp
jno
shrl
push
fnsave
xchg
fisubrs
mov
repz
jmp
stos
mov
bound
and
cwtl
enter
ret
push
repnz
data16
inc
pushf
sbb
adc
add
gs
movsl
inc
push
outsl
xor
mov
add
inc
mov
sahf
adc
stos
int3
mov
sahf
inc
cmp
push
mov
xor
repz
lds
pusha
fisubs
cmp
test
imul
sbb
lret
pop
lea
mov
xor
push
xchg
int
cltd
xlat
sbb
xchg
jmp
mov
mov
in
mov
lock
jge
adc
mov
pop
dec
mov
mov
fdivrp
loop
fisttpll
mov
loopne
pop
mov
ja
repz
icebp
jns
xchg
xor
fidivrl
nop
test
dec
cmpsl
cmp
xchg
mov
addr16
scas
pusha
pop
insb
shrb
repnz
popf
popf
cwtl
lcall
or
and
lahf
pop
sbb
mov
shrd
jmp
xchg
and
mov
sbb
jle
iret
mov
sub
mov
inc
shl
xor
sub
jb
lods
xor
inc
sub
or
cmpsl
loope
sub
sar
inc
push
adc
push
lock
mov
jg
mov
push
push
bound
clc
lds
cmp
dec
out
jns
dec
cmp
or
sub
pop
or
fstpl
sub
xchg
push
mov
mov
xchg
ret
gs
mov
les
mov
mov
mov
push
dec
cmc
cmp
mov
enter
xchg
insb
mov
sbb
push
xchg
dec
mov
lret
ret
movb
add
aad
ja
push
pop
cmp
sbb
leave
dec
je
mov
push
mov
int
dec
mov
pop
add
adcl
push
outsl
mov
mov
lret
push
stos
pop
in
setae
add
mov
cmpl
jecxz
test
std
or
nop
push
stos
sbb
sbb
bound
xchg
jl
rclb
pop
inc
mov
stos
add
cmp
push
push
mov
lahf
imul
stc
inc
mov
sbb
stos
xchg
insl
out
enter
jne
mov
sahf
stos
subb
jg
or
sbb
pop
in
ret
es
js
ss
repnz
push
gs
xchg
mov
jmp
sarl
jne
fucomp
sub
cwtl
lcall
call
ljmp
cmpsl
int3
adc
or
or
cli
push
push
bound
adc
mov
adc
rcll
sub
mov
xchg
fsubr
xchg
pop
xor
and
pop
adc
push
and
dec
mov
in
mov
in
out
lret
push
lods
or
dec
test
jle
jne
repnz
fldt
lcall
ss
pop
mov
mov
dec
add
mov
xchg
xor
add
mov
rcll
xchg
and
leave
cmp
hlt
shll
jmp
lea
jge
movsl
out
iret
adc
pop
mov
adc
pusha
jae
mov
outsb
pop
add
sbb
inc
shr
repz
lea
adc
loope
lock
pop
fcompl
mov
cmp
pop
mov
addr16
leave
adc
stos
das
inc
and
mov
enter
add
loopne
push
pusha
dec
mov
push
int3
loop
xor
inc
or
and
pop
mov
adc
outsl
and
mov
pop
pop
int
stc
test
adc
test
imul
test
jecxz
pop
mov
cmp
jno
lahf
int
test
cmp
pop
fisubs
xorb
daa
ja
out
or
or
xchg
clc
sbb
daa
popa
aam
inc
sahf
mov
sbb
jmp
mov
ja
mov
jnp
sbbl
sub
test
xchg
test
je
sbb
add
inc
das
cld
add
sub
cwtl
jnp
jg
loop
insb
mov
cmp
stc
jl
inc
ljmp
mov
fdivr
cmp
cmpsl
pop
mov
addb
rcrb
lea
cwtl
cmpsb
xlat
jmp
into
mov
lcall
mov
dec
mov
push
jle
and
cmp
mov
movsb
pop
adc
sbb
aad
repz
adc
push
outsl
cmc
outsl
mov
lcall
jno
fidivl
in
sbb
push
fstl
lods
pop
jecxz
xchg
inc
sbb
jmp
adc
scas
xchg
pop
pusha
popf
pusha
add
es
in
mov
cmp
or
sbb
xchg
jnp
sub
dec
fstpt
add
pushf
loop
call
repnz
mov
arpl
subb
pop
subb
pushf
inc
xchg
mov
cmpsl
adc
pop
inc
jmp
sub
fwait
cmpsl
aas
xchg
bound
or
pop
insb
scas
sti
xchg
cmp
dec
aad
shl
push
fucomi
cld
loop
daa
mov
or
dec
test
cmp
sub
cmpsb
xorl
add
sahf
jp
pop
inc
shrb
cmpsl
mov
mov
or
repnz
outsb
mov
push
stc
xchg
pop
shlb
push
or
in
out
stos
lahf
mov
stc
sbb
jae
adc
adc
xor
ret
xor
data16
insl
pop
dec
cmp
mov
mov
pusha
add
mov
shl
int3
add
inc
and
dec
xor
adcl
in
popa
and
mov
ja
and
pop
loop
ret
mov
movsb
dec
mov
jmp
mov
subl
es
inc
mov
scas
push
push
fcmovbe
bound
int3
inc
lods
pusha
inc
inc
fwait
add
dec
push
mov
loope
add
testl
fimull
push
stos
loopne
xchg
cs
shr
jae
sbbb
adc
mov
mov
insl
push
cltd
add
icebp
clc
push
adc
lret
dec
inc
jge
mov
jp
sti
iret
pop
xor
inc
push
jg
inc
outsl
xor
sbb
dec
int3
jle
push
dec
in
ds
test
popa
sbb
sub
pop
enter
xor
clc
roll
xchg
jnp
nop
mov
aas
call
lds
or
push
js
dec
add
aad
pop
decl
cli
mov
jbe
add
call
mov
test
addr16
ss
xlat
enter
outsl
push
mov
shlb
into
stc
into
ss
inc
je
cli
aas
es
shll
jne,pt
xchg
aad
push
in
push
in
outsb
sbb
pop
sub
in
out
cltd
pusha
and
mov
mov
cld
push
xchg
xchg
add
sbb
aam
mov
sbb
lea
push
iret
mov
arpl
sub
mov
shrb
int3
dec
add
mov
and
jae
xor
mov
clc
iret
cs
frstor
pop
sahf
arpl
mov
test
stos
sub
mov
mov
jmp
add
mov
jecxz
mov
not
mul
int3
cmp
adc
iret
mov
sbb
and
adc
arpl
add
fistpll
mov
mov
daa
cmp
hlt
cli
mov
test
outsb
xor
jmp
pop
lock
add
add
loop
sub
jecxz
movsb
in
push
pop
adc
loopne
mov
push
adc
pop
inc
nop
adc
dec
fdivl
pop
fidivrs
adc
mov
out
pop
popf
dec
in
int
mov
out
data16
xchg
loopne
out
repz
and
test
pop
pop
loope
aam
pop
ret
cmp
mov
dec
aaa
scas
push
out
ret
cmp
cmp
pop
dec
test
xchg
mov
mov
fisubrl
add
ja
loop
mov
inc
mov
jnp
push
jno
test
mov
jmp
sub
sbb
rclb
enter
call
pushl
xchg
and
ja
fwait
inc
jns
mov
dec
rorb
push
xchg
bsf
inc
cmp
das
sub
fidivrs
adcl
mov
jo
addr16
inc
and
xchg
addr16
fs
loopne
enter
aas
je
push
mulb
or
jmp
xor
push
fs
xchg
cld
lods
add
movsb
push
cld
les
jg
push
mov
out
cwtl
push
jne
add
loope
xor
xchg
add
pop
jbe
add
pop
xor
push
push
test
arpl
add
das
lcall
inc
and
das
or
mov
ret
cmpsb
xchg
sub
dec
jbe
lret
dec
xorb
or
rorb
int3
push
xchg
jecxz
lea
in
lds
repz
leave
and
dec
cld
movsl
mov
lahf
mov
lods
push
sbb
ret
gs
dec
add
and
push
js
daa
xchg
xor
pop
pop
popf
test
mov
xor
arpl
lret
insl
jecxz
clc
lods
les
mov
adc
pushf
and
inc
hlt
mov
test
ljmp
inc
push
cmpsl
jmp
orb
push
jp
mov
or
out
fsubl
sbb
sbb
imul
addr16
aas
mov
inc
daa
bound
roll
movsl
xchg
pop
scas
push
mov
popa
mov
sbb
es
neg
xchg
sub
lret
inc
xchg
rclb
xor
hlt
scas
dec
mov
mov
xor
push
inc
enter
imul
jne
andl
shrb
mov
or
lcall
in
and
fmul
les
pop
lret
add
mov
xor
mov
fildll
pushf
std
aas
cmc
pushf
adc
cmp
outsb
cmp
pop
bound
sti
sbb
xor
add
pop
fwait
mov
mov
push
out
and
sahf
adc
lret
js
mov
jp
shrb
into
ss
push
pop
and
xor
or
xchg
int3
jns
mov
addr16
ret
adc
ret
cwtl
loop
mov
jecxz
je
shrb
and
pop
cmp
cmp
adc
pop
lods
sub
and
rolb
dec
adc
fs
sub
add
xchg
pop
sarb
insl
rcrl
int3
add
popa
mov
dec
mov
and
ds
add
mov
or
xchg
or
or
fldt
mov
mov
xchg
cltd
mov
les
add
or
rol
xor
mov
repz
popa
mov
rclb
xor
jl
loop
mov
aas
js
nop
int3
negl
leave
cmp
mov
add
xor
push
xor
pop
pop
pop
js
pop
jnp
mov
test
icebp
scas
adc
in
push
test
push
ret
addb
rclb
mov
mov
ror
mov
sub
stos
or
test
shlb
mov
loopne
mov
lds
das
and
leave
dec
pop
mov
shrb
push
lret
pop
test
xchg
pop
mov
int
add
or
xor
push
cmpsb
loop
addr16
inc
jecxz
sub
aad
cwtl
mov
mov
or
lret
jne
adc
inc
aam
lret
inc
add
stos
push
adc
pop
mov
or
inc
stos
jecxz
jle
sub
loop
jge
test
pop
inc
sub
mov
pop
sti
pop
rol
mov
and
jmp
adc
je
shl
iret
and
rclb
icebp
xchg
push
ret
sbb
add
movsb
lret
repz
dec
jns
loope
je
cvtps2pi
push
into
jge
xor
in
xchg
cmpsl
icebp
daa
subl
enter
faddl
sub
pop
out
aad
out
stos
jo
test
push
std
or
daa
jl
or
popa
jle
shrl
inc
inc
lock
inc
cmovns
jo
xchg
mov
lods
jmp
adc
and
clc
or
sub
mov
xor
sti
arpl
cmc
test
sub
mov
pop
add
std
ror
int
test
push
mov
xor
pop
add
scas
xchg
pop
push
and
sti
jns
cmpsb
adc
sti
dec
test
mov
pop
jae
and
mov
fcoms
adc
cmp
mov
push
jmp
mov
repnz
lds
push
movsb
andl
jge
xor
data16
add
ret
scas
pop
shl
not
push
adc
mov
movsb
bound
xlat
inc
or
sub
mov
mov
testl
jg
sub
lods
push
pop
mov
jns
xchg
shrb
clc
mov
inc
push
cmpsl
xor
xor
mov
lcall
pop
adc
fstpl
lds
add
xchg
es
sti
cmc
lahf
aaa
insb
int3
div
xchg
lock
xor
andl
push
data16
in
in
mov
in
push
nop
outsl
mov
scas
ja
rcr
mov
lahf
fdivrl
or
sbb
int
xchg
mov
mov
mov
or
sub
insl
rorb
add
or
pop
or
jl
lcall
jecxz
int3
and
cmpsb
sub
mov
mov
fcoms
push
rol
xlat
sbb
lcall
xchg
test
and
pop
add
or
testl
test
mov
mov
mov
lods
imul
shll
je
rcrb
dec
push
push
and
clts
lods
das
push
inc
mov
cwtl
push
adc
inc
cltd
sahf
mov
or
mov
inc
pop
lret
testb
hlt
mov
jecxz
sahf
out
pop
nop
cmpsb
inc
filds
stc
js
jle
mov
stc
push
sbb
xchg
and
pushf
loop
mov
mov
xor
pop
in
xor
ficompl
push
aas
sbb
pop
push
mov
cmp
icebp
cltd
mov
movb
cmpsl
mov
testl
jb
pop
jo
add
cmpsl
mov
sub
rcr
sbb
dec
ret
inc
sahf
pop
int3
or
or
and
out
push
stc
add
adcb
insl
jmp
jmp
lret
jl
addr16
cmp
loopne
insl
and
inc
adcb
fnstenv
pause
push
jmp
pop
les
hlt
cmpsb
mov
ja
cmp
inc
pusha
cmpsl
mov
jle
or
dec
hlt
pushf
inc
sbb
dec
roll
jl
xor
ret
inc
ret
adc
rcll
lds
mov
mov
mov
sbb
sub
test
notl
mov
cmpsl
mov
fcoms
flds
add
cmp
inc
xorl
xlat
idiv
out
pop
loopne
push
subl
lods
inc
inc
mov
lock
mov
mov
hlt
pusha
or
jne
es
insb
ljmp
sub
cli
hlt
int3
loope
jmp
jno
inc
leave
mov
pusha
and
mov
push
pop
pop
testl
rcr
pushf
test
pop
mov
leave
pop
cmpl
arpl
es
call
int
inc
inc
cmp
aam
pop
cmp
cli
cmpsl
cmp
bndstx
jbe
sub
loope
test
pop
sub
out
mov
adc
aaa
mov
push
mov
ret
outsl
daa
inc
es
bound
or
stos
das
fld
shll
mov
test
loope
and
xchg
int
xor
xor
ja
mov
pop
cmp
adc
ret
inc
push
test
push
fnstenv
ficoms
es
push
pop
cld
test
xchg
imul
sbb
roll
xor
mov
inc
stos
add
and
mov
fisttpll
jp
jns
bound
int
aad
insb
sbb
outsl
gs
adc
aaa
stos
out
leave
mov
imul
std
loope
xchg
dec
cld
jecxz,pn
iret
xorl
cmpsb
rcrb
push
push
cld
movsb
shrl
rcl
jbe
movsl
insb
sub
add
push
insl
cli
outsb
sub
pop
jb
jg
and
mov
sbb
sbb
call
dec
pop
add
xchg
jmp
sub
ja
and
gs
insb
into
je
iret
and
mov
and
inc
jnp
add
push
sbb
fdivp
outsb
movsb
fimuls
xor
lea
jne
lods
loope
int
lret
push
adc
dec
xor
adc
cmp
pop
dec
xchg
scas
mov
sbb
cmp
mov
mov
lea
add
xchg
std
insl
xor
push
sbb
xchg
or
adc
add
call
stos
dec
aad
jle
fwait
imul
iret
xor
popf
ljmp
add
adc
shrl
sub
in
jg
or
add
movsb
mov
dec
or
push
gs
lahf
mov
xor
xchg
outsl
ret
push
in
and
pop
ret
jp
outsb
or
mov
loope
cmpsb
dec
jmp
mov
cwtl
push
popf
and
nop
jge
mov
adc
mov
pop
mov
push
mov
dec
inc
and
xchg
fstl
xchg
sbb
test
leave
ds
testb
enter
fsubrs
cli
loope
and
leave
rcrb
push
or
scas
inc
out
mov
dec
scas
mov
add
mov
lods
mov
fwait
in
stos
and
xchg
xor
ret
out
daa
add
scas
loopne
or
push
sahf
inc
mov
inc
idivb
negl
xchg
scas
mov
test
sbb
and
mov
add
les
dec
dec
cmpsb
cmp
xchg
jg
add
jge
xor
andl
cs
and
outsb
sbb
or
fldl
lds
std
jmp
adc
in
gs
mov
out
jo
fwait
mov
xchg
sarb
jmp
jge
mov
rorl
mov
pop
jg
push
cmpsl
in
and
adc
pop
fwait
aas
mov
xor
in
mov
xchg
cmp
rcrl
sarb
and
cmpsb
cld
sbb
cld
xor
lcall
sti
push
and
mov
repz
int3
andl
iret
adc
inc
mov
jmp
popa
mov
fcompl
add
add
ja
fldt
out
stc
mov
outsl
cmp
dec
mov
repz
lea
repz
mov
xchg
fildll
pop
mov
push
std
fistps
sarb
adc
in
push
jno
adc
push
push
push
loope
jbe
xchg
fisttps
les
sbb
push
jp
xor
add
jne
jge
ret
mov
fstps
sarl
fst
jg
enter
ds
add
sti
jne
cmp
pop
pop
mov
hlt
out
out
in
movsb
fcomps
pop
pop
or
add
outsl
sbb
cld
je
mov
mov
icebp
test
pop
hlt
andl
mov
xchg
pop
mov
cmp
decl
inc
in
xor
push
push
adc
or
mov
int3
cmpsl
cmp
fdivs
sahf
fiadds
cld
rcll
mov
pushf
sbb
orl
out
decb
inc
imul
movsl
aas
push
and
inc
outsl
sbb
rorl
aad
movsl
mov
mov
pop
push
dec
int
test
jecxz
pop
adc
and
xchg
and
arpl
shlb
or
jne
sahf
xchg
pop
lods
xchg
pusha
daa
lods
mov
pop
inc
mov
pop
in
xchg
inc
pop
je
loopne
xchg
xor
stc
pop
cmpsl
fistpl
mov
push
xor
xchg
shll
jmp
inc
aas
xor
out
xor
mov
and
std
loopne
je
cmpsl
inc
sub
and
out
pop
inc
mov
lea
test
dec
mov
xor
sbb
fcmove
dec
shll
sub
aaa
jle
add
add
xchg
jae
xchg
ficoml
ret
adc
mov
dec
leave
icebp
sbb
sub
sbb
cmpsl
or
outsb
jecxz
pop
les
insl
jle
cld
int
int
mov
pop
xchg
pop
mov
cmp
push
add
mov
or
jno
movsl
mov
adc
stc
xchg
insl
xchg
adcl
and
and
movsl
pop
xlat
cmp
rol
js
adc
or
nop
repz
sbb
sbb
cmp
mov
ds
sahf
push
dec
scas
xchg
push
add
into
lcall
mov
mov
xorl
in
imul
and
call
rol
test
cmpsl
sub
add
jns
imul
mov
aad
pop
dec
xchg
jp
dec
sbb
int
cmp
add
repz
insl
xlat
xchg
pop
sub
push
hlt
pop
vmread
popf
movsb
paddsw
jle
stos
mov
push
sub
sub
aam
sahf
inc
loopne
mov
xchg
leave
xor
sbb
test
xlat
je
add
arpl
movsb
fiaddl
mov
sbb
or
mov
je
fwait
mov
subb
shlb
aad
pop
dec
lods
add
xchg
in
cmp
lea
sub
out
inc
jg
adc
push
add
jmp
ret
aas
cmp
xchg
and
xor
dec
shlb
jo
xchg
daa
mov
lock
xchg
xlat
outsl
xchg
mov
mov
gs
fs
insl
lret
sub
popa
cmp
sti
in
lret
icebp
cmp
xchg
fcoml
test
rolb
jns
push
mov
outsl
mov
arpl
scas
mov
sub
popa
sahf
mov
sbb
xor
outsl
sub
sarb
mov
bound
mov
ljmp
mov
ret
mov
repnz
enter
popa
call
ja
xchg
ljmp
sub
jae
filds
int
lea
dec
movsl
std
jp
push
inc
xchg
jne
mov
enter
lods
mov
xchg
inc
cwtl
into
popa
pop
push
mov
dec
outsb
gs
adc
sbb
inc
jno
sbb
mov
movsb
dec
push
clc
loop
adc
inc
fsubp
lea
push
dec
cmp
mov
sbb
out
inc
push
mov
popa
pop
mov
je
scas
add
xorl
add
pop
lods
push
aam
mov
scas
arpl
or
jnp
cmpsl
hlt
popa
mov
mov
cmp
fbld
cld
mov
dec
push
xor
lea
and
std
or
dec
jp
je
lret
orl
jbe
inc
lret
sbb
in
ret
sbb
adc
test
adcb
pop
leave
lds
mull
jo
insl
addl
loope
hlt
push
testl
add
sar
pop
mov
adc
pop
push
mov
sub
pop
sbb
sarl
stc
mov
lods
add
pop
mov
lcall
adc
cli
out
add
outsb
outsb
cmp
add
lock
dec
shrb
ret
roll
adc
push
mov
mov
pushf
mov
adc
sarl
mov
in
dec
sub
fucomip
push
loop
inc
inc
shrb
out
js
rorb
jp
push
pop
rcl
shll
loopne
pop
xor
out
xor
sahf
in
sbb
cmpsb
aas
ljmp
or
jecxz
aas
daa
xor
outsl
adc
sbb
sti
dec
fcmovbe
xlat
lea
jmp
rorl
push
gs
lods
adc
mov
bound
jne
adc
xor
or
arpl
dec
xor
jl
or
dec
fisttpl
repnz
das
jae
jns
stos
push
pusha
xor
in
or
stos
jo
bound
lcall
mov
imul
cmp
sbb
jo
es
push
add
pop
fiaddl
std
add
movsb
lcall
cmp
addr16
adc
jbe
clc
adc
jle
aad
inc
mov
add
into
sbb
mov
pop
jle
loopne
je
xchg
dec
lret
dec
dec
inc
dec
pop
sbb
and
inc
stc
scas
add
das
xchg
and
popf
ljmp
adcb
cmp
cmp
ret
mov
loope
stc
xchg
adc
xchg
mov
ret
roll
jp
mov
test
jno
push
sbb
shlb
or
jnp
xchg
mov
sub
dec
inc
fstpl
push
or
mov
push
lahf
sbb
jecxz
jns
and
add
dec
insl
cmp
enter
add
mov
jge
fistl
xchg
mov
lds
aaa
ja
in
and
pusha
or
lret
pusha
or
jne
or
sahf
pop
pop
lds
dec
out
push
mov
sub
int3
repnz
mov
aaa
fwait
iret
fsubs
sub
xchg
cmp
mov
jg
mov
cmp
test
mov
push
mov
ljmp
in
in
imul
cmpsl
ror
inc
fbstp
cmp
jl
add
cmp
push
sbb
movsb
movsb
popa
jp
inc
test
cmc
or
vmovd
dec
in
lcall
mov
sbb
test
push
ljmp
hlt
jae
push
lods
xchg
xchg
mov
out
sahf
cwtl
push
movl
add
sub
inc
push
sahf
es
inc
adc
jnp
xchg
fcmovu
mov
xchg
pop
std
jg
and
enter
or
xchg
and
mov
sbb
cld
iret
push
cmpsb
jno
sub
loope
rol
mov
paddusb
push
imul
shrb
mov
and
mov
popf
outsb
xchg
lcall
outsl
out
mov
outsb
stc
xorl
pushf
mov
and
xor
repnz
orb
pop
sub
aas
push
scas
mov
cmp
push
popf
cmp
ficomps
mov
inc
fwait
sbb
fwait
sub
adc
out
xchg
pandn
adc
out
push
aaa
hlt
js
insb
sbb
rcll
lret
sub
test
xor
xlat
pusha
pop
and
dec
mov
sahf
add
dec
xor
inc
push
add
and
mov
rcrl
cmp
sbb
pusha
fcomps
add
imul
jge
adc
cmp
sbb
repnz
xor
mov
jae
inc
jg
pusha
xor
xchg
sbbl
xor
xor
test
fdivs
cmp
mov
sub
xor
pop
iret
fiaddl
pop
xor
sbb
sahf
repnz
stos
insb
loopne
sub
mov
pop
sub
mov
push
outsb
enter
sbb
sbb
sub
xchg
push
pop
xor
push
mov
ljmp
test
mov
iret
lock
rorb
in
xchg
jp
in
pop
loope
mov
xchg
test
mov
into
fs
ffree
ret
aaa
loope
shrb
out
cli
shlb
jl
icebp
mov
inc
sbb
sub
ss
cmc
dec
and
mov
cwtl
dec
test
mov
inc
lods
test
xor
xchg
sub
push
lcall
mov
xor
jp
cltd
dec
aaa
call
mov
add
xor
and
xchg
mov
push
add
or
ds
jns
fsubrl
jge
in
bound
xchg
xchg
cld
pop
fistps
es
cmpsb
imul
jns
fcoms
jns
jb
outsb
xchg
mov
cli
andl
rcrl
fcompl
pop
fisttps
add
std
and
mov
lcall
xchg
or
test
mov
loope
push
mov
push
pop
neg
mov
fs
adc
sub
lcall
dec
test
sbb
add
cmp
cmpb
repnz
push
sbb
lret
test
add
in
addr16
add
lcall
add
pop
lea
push
and
cmp
xor
in
mov
cmp
test
repz
fcmovne
add
lds
leave
xor
xchg
xchg
mov
and
jge
mov
fdivrs
cmpsb
add
dec
dec
aaa
insb
fstpt
sarb
add
push
inc
lcall
or
dec
cmp
sub
repz
sub
jns
push
lcall
bound
cmova
cmp
push
add
outsl
cmpsb
in
popa
mov
in
flds
loope
cmpsb
dec
pop
cmp
dec
imul
add
outsl
adcb
aam
dec
cmc
lds
jmp
pusha
inc
push
les
negb
fwait
or
pop
sarb
add
ud2
cmp
jns
incb
pop
mov
mov
or
leave
ror
mov
cld
and
loopne
sub
dec
inc
sahf
adc
xor
push
cld
lods
mov
call
mov
fsubs
cmp
cmp
call
aaa
sub
pusha
out
cmpsl
into
jge
and
pop
mov
int3
les
cmp
in
pop
adc
xor
add
icebp
lret
insl
adc
ds
ret
jecxz
in
push
or
std
test
test
sahf
cmp
mov
mov
mov
lahf
dec
pop
sub
stc
sbb
sarl
inc
out
insb
add
dec
repz
inc
in
call
inc
insb
mov
mov
cmc
outsb
xlat
push
jle
mov
or
out
in
es
cmp
enter
int
or
or
out
push
cs
cmp
loop
imul
pop
sub
lods
jb
jg
xor
sbb
mov
inc
mov
mov
sbb
inc
fcomi
imul
adc
mov
cmc
pop
cmc
fwait
into
or
leave
in
mov
aas
mov
cltd
jp
sbb
loop
sbb
imul
cmp
loopne
lcall
rcll
cltd
lods
cmpl
stos
mov
insl
dec
pop
je
insb
sbb
cltd
sub
jl
mov
push
repz
loope
stos
shrb
cmp
mov
jle
in
ret
dec
mov
cwtl
ss
pop
or
std
inc
sahf
cmp
scas
jmp
lods
mov
dec
or
pop
lret
jmp
push
ret
lods
mov
lock
xlat
xor
push
gs
sbb
popa
jno
cmpsb
adc
jns
aas
push
xchg
lods
data16
repz
sbbb
ret
mov
mov
jg
xlat
and
rclb
xchg
pusha
cwtl
cs
mov
call
mov
cmp
adc
cwtl
les
add
inc
lret
xchg
out
rclb
shrl
push
imul
lock
add
xchg
in
or
xchg
loop
pushf
stc
and
and
push
nop
scas
jnp
dec
imul
dec
inc
sub
and
sub
add
xor
ja
adc
pop
and
je
dec
xchg
testl
cmp
or
or
pop
movsb
or
fmul
mov
fsubs
sbb
mov
mov
adc
push
and
cltd
adc
mov
add
mov
pop
int
add
ret
mov
das
mov
add
pop
adc
lds
cmp
or
pushf
push
and
jnp
clc
pop
sub
push
mov
sbbb
les
test
js
adc
jo
mov
and
test
add
inc
jbe
sub
pop
jmp
pushf
test
sub
dec
mov
inc
sub
rorl
aam
dec
xchg
sbb
test
mov
fxrstor
test
pop
xchg
jl
mov
cmpsl
lret
push
test
mov
rcrb
and
mov
das
fwait
add
mov
cmp
or
jb
inc
lds
cmp
movl
cltd
cld
scas
add
xchg
fs
sahf
ss
call
outsl
lcall
and
dec
dec
xchg
test
inc
enter
out
std
cmp
dec
pop
pop
shrb
mov
into
pop
in
movsl
mov
fs
jne
xor
ja
test
js
cld
push
jmp
out
mov
sti
pop
pop
adc
adc
and
lahf
loope
lret
or
push
and
cmp
dec
push
das
xchg
sbb
sbb
pusha
push
movsb
inc
dec
pop
adc
mov
int
nop
mov
add
xchg
iret
movsl
loop
cwtl
push
pop
outsl
ds
mov
sub
dec
or
fdivrs
mov
and
cmpsl
and
cmpsb
je
mov
inc
movsb
add
insl
outsl
test
aas
jg
cmp
jno
mov
cmp
je
flds
cwtl
in
ret
xor
lret
add
cwtl
mov
rcr
mov
outsb
mov
iret
aaa
int3
rcr
xor
pop
jb
insl
inc
pop
mov
cmpsb
cmp
cmp
bound
cwtl
sub
jle
pushf
sub
and
dec
push
lahf
jb
cmp
loope
fwait
or
mov
repnz
scas
cs
push
sbb
subb
push
sti
daa
orb
add
inc
pop
arpl
pop
pop
fsubrl
xchg
loope
cmc
cmp
in
sahf
and
nop
mov
jl
mov
in
xchg
mov
mov
cltd
sub
cld
bound
xor
xchg
aaa
idiv
in
mov
or
sub
mov
mov
les
addr16
jb
pop
femms
fcoml
push
arpl
in
movsl
sbb
test
pop
sbb
adcb
je
pop
fidivs
clc
loop
mov
mov
mov
cltd
cmp
lods
cmpsl
xor
mov
ror
mov
pusha
les
gs
roll
daa
lahf
mov
dec
jbe,pt
mov
xchg
nop
inc
xchg
adc
mov
arpl
pop
or
dec
and
lret
mov
repnz
loop
or
add
jmp
lahf
daa
pop
in
jbe
incl
cltd
sub
fwait
shrb
xor
cli
xchg
ss
mov
pop
mov
inc
in
push
mov
sub
sbb
vhaddps
stos
lret
and
push
mov
or
mov
xor
and
loope
ror
dec
icebp
enter
mov
jl
and
scas
mov
or
add
push
cmp
inc
movsb
sarb
cmpsl
mov
pusha
das
imul
inc
xorl
jo
push
push
out
outsb
push
sbb
les
mov
cmp
aaa
mov
push
xor
dec
enter
push
push
lock
and
ss
arpl
xlat
xlat
mov
sub
das
lods
rorl
test
mov
movsb
and
inc
loop
adc
out
decl
test
add
sub
mov
fstpl
jb
pop
stc
xor
mov
jnp
cltd
cld
stc
out
cwtl
dec
jno
les
adcl
inc
add
lea
jnp
push
pop
inc
lds
jge
bound
rcll
mov
mov
sbb
xchg
sbb
test
stc
cmp
outsl
or
mov
push
jp
pop
mov
mov
inc
sbb
bound
arpl
test
shrl
push
pushf
icebp
cmpsl
dec
pop
aam
test
movsl
adc
cs
pop
hlt
fcmove
dec
test
inc
or
xchg
lock
mov
fdivr
aam
cmp
fsubrl
dec
ret
repnz
sti
dec
sti
movsb
mov
out
dec
pop
icebp
mov
test
cld
add
outsb
mov
loopne
inc
jae
stc
aaa
pop
or
add
sbb
cmpsb
jns
aad
mov
jbe
lods
fiaddl
mov
sbb
shll
inc
std
xchg
cs
addr16
xor
jno
lds
leave
add
adc
lods
cmp
fs
mov
lahf
dec
push
mov
push
pop
imul
inc
push
add
stos
jnp
push
and
sub
insl
mov
push
cwtl
or
push
outsb
clc
in
jns
adc
cmp
xchg
cmp
push
mov
push
shl
sub
cli
dec
test
in
adc
jmp
out
rcrl
xchg
push
mov
nop
icebp
repnz
and
dec
dec
pushf
ja
out
imul
jp
in
xchg
aad
jle
loopne
ret
adc
or
in
sar
aad
neg
lds
fdivrs
das
pop
mov
xchg
shrl
sub
popa
stos
int
xor
sahf
rclb
nop
jne
xor
pop
aad
stos
push
pop
nop
lret
popa
inc
dec
cmp
sub
xchg
lods
jno
cwtl
pop
push
into
sub
lret
add
rcll
ja
xchg
fwait
mulb
sti
ret
sbbb
cmp
add
cmpsb
xchg
insl
xor
adc
cmpl
cmpsb
movsb
push
dec
sbb
imul
lret
clc
dec
push
jecxz
into
or
cli
popf
inc
fldenv
in
or
xor
jg
push
std
sbb
jle
fcomps
adc
jnp,pn
push
ret
aas
mov
sbb
add
sbb
inc
cmp
adc
loop
and
dec
xchg
cmp
xchg
in
bound
pop
add
mov
insb
sub
and
data16
jp
mov
test
jmp
insb
mov
jnp
fsubrl
push
lds
push
pushl
stos
push
scas
int3
mov
and
pop
and
scas
fwait
popf
mov
shl
mov
xor
out
aas
push
pop
popf
in
cld
ret
movsl
push
adc
and
pop
ljmp
sarl
cs
or
sbb
or
inc
lcall
or
xlat
hlt
ss
mov
fistpl
mov
int3
pop
jp
negb
xchg
scas
outsb
lea
push
lds
mov
and
or
push
popf
out
mov
out
sub
push
adc
cmpsl
je
mov
inc
fidivl
adc
stos
pop
fcomps
or
xor
stc
inc
pop
shrl
shlb
sbb
sbb
gs
push
push
pusha
jnp
loop
mov
jp
js,pn
add
test
je
cmpsb
xchg
pop
sarl
jae
lea
cld
cmp
push
dec
mov
hlt
or
lret
cmp
add
push
and
push
mov
jmp
test
mov
jno
test
testl
cli
mov
xchg
cs
fxam
fs
les
pop
ds
cmovns
mov
push
inc
enter
sub
ds
mov
cmp
sarb
test
idivb
xchg
sbb
jmp
jbe
sub
jl
mov
push
add
mov
enter
movsl
xchg
sub
lret
rorb
push
cltd
sub
fcomi
addr16
test
sbb
mov
inc
aas
das
ret
mov
movsb
repnz
int3
xchg
insl
insl
add
test
dec
punpcklbw
lods
sar
adcl
or
sub
mov
mov
testl
outsb
adcl
jo
ss
bound
or
stos
push
dec
imul
mov
hlt
mov
push
arpl
out
mov
sbb
fstpt
mov
pop
out
stos
repnz
loopne
and
fwait
dec
xchg
pusha
jb
and
int
adc
lds
inc
loopne
and
jbe
push
movb
push
lea
push
push
das
insb
mov
iret
sbb
xor
sub
lock
inc
push
sub
out
adcl
shll
gs
out
cwtl
mov
add
pop
push
ss
cltd
rcrl
cmpsl
repz
xchg
jmp
arpl
mov
pop
repnz
in
dec
mov
call
call
lock
push
insb
inc
mov
sbb
icebp
sub
mov
loopne
outsl
popf
dec
insb
int
cmpsb
mov
pop
mov
pushf
push
pop
jmp
ss
and
cmp
ds
mov
out
insl
test
and
popl
loop
jno
pop
test
sbb
jbe
in
sbb
add
fbstp
dec
push
int3
jno
inc
test
test
pop
andb
mov
xorl
daa
cmp
jg
push
cs
ds
adc
pop
adc
cmp
pop
mov
pop
jne
add
movsb
inc
pop
scas
sbb
fs
mov
mov
jo
mov
push
inc
or
shlb
push
lret
sbb
mov
pop
xchg
mov
ljmp
out
xchg
or
jecxz
mov
lcall
adc
push
repnz
testl
xchg
xchg
jno
pop
imul
lea
loop
adc
mov
xorb
add
push
call
sti
imul
pop
add
shll
imul
xchg
jns
stc
ret
cmc
cwtl
test
int
cmc
mov
xlat
pop
mov
rolb
cld
imul
dec
push
mov
es
jp
sub
xor
mov
scas
pop
push
xchg
andl
inc
dec
aad
rcll
cmp
cmpsl
mov
cld
lock
aad
cmp
arpl
pushf
ja
xchg
sub
fcomip
lock
scas
sarl
roll
add
jmp
xchg
int3
movsl
push
lods
cltd
cmc
dec
out
out
test
outsl
sub
sbb
dec
jmp
popf
jb
cli
inc
mov
test
jl
aam
jbe
push
mov
inc
shrb
andl
xchg
pushl
xchg
iret
sbb
mov
add
stos
sbb
add
add
add
sbb
or
push
pusha
inc
bound
cli
je
and
fwait
test
stc
dec
pop
dec
push
push
popa
cltd
shr
jnp
jns
les
inc
push
insl
in
loopne
in
mov
das
loopne
rol
fidivrs
or
push
bound
or
repz
sub
out
jo
call
push
and
icebp
lcall
fs
xchg
and
jns
les
mov
adcb
jbe
adc
xlat
insb
sti
pop
xchg
cld
push
sub
arpl
imul
xchg
jp
mov
imulb
pandn
cmp
or
mov
cwtl
sahf
daa
in
inc
pop
je
mov
rcll
and
mov
arpl
jmp
mov
xchg
and
lret
popa
cltd
dec
aaa
xor
push
xor
push
push
or
sub
mov
addr16
sbb
les
sbb
mov
lods
rcl
fisubrl
lcall
and
outsb
push
scas
repz
mov
arpl
xchg
mov
cli
sub
sbb
and
fsubr
pop
mull
test
inc
xor
push
rcll
push
dec
sbb
mov
pop
repnz
jp
in
andb
lcall
push
aas
or
mov
mov
mov
xchg
jmp
cmp
rclb
outsl
cmc
leave
movsl
cwtl
iret
add
and
pusha
xor
jl
dec
push
in
xchg
push
nop
xchg
nop
repnz
push
aam
pop
xchg
outsb
jl
inc
pop
mov
ja
pushf
mov
outsw
cmp
icebp
push
pusha
mov
mov
lea
fnstsw
xor
iret
fdivs
fsubs
adc
loopw
xchg
outsb
int
cmc
call
jecxz
mov
mov
sti
add
xor
mov
jmp
mov
stos
mov
xchg
loopne
das
sbb
aas
stc
fimull
pop
enter
jbe
mov
cs
lret
lds
outsb
pushf
movzwl
les
data16
pop
push
lret
xchg
mov
pushf
loope
mov
out
xchg
and
mov
inc
push
das
js
jae
subb
outsb
in
cmp
aam
adc
lcallw
clc
cmp
loop
push
push
jg
xor
lods
bound
imul
cmp
sub
test
xchg
test
dec
push
mov
icebp
adc
jbe
je
xor
call
xchg
and
cmp
add
pop
fstps
scas
repz
movsl
cwtl
sti
lahf
hlt
pushl
out
call
movsl
mov
out
lods
adc
add
arpl
fwait
jl
xchg
pushf
cmpb
aam
xchg
call
add
jl
sub
sti
mov
scas
sbb
neg
sub
mov
and
andb
push
fst
ss
add
icebp
cmp
mov
imul
jecxz
mov
xor
shll
push
mov
mov
inc
cmp
lcall
mov
mov
int3
mov
push
ud0
arpl
int3
ja
push
pop
repnz
ret
jg
sub
outsl
aam
aam
fistps
outsl
stc
inc
aaa
lret
movsl
adc
xchg
lahf
aas
mov
loop
je
pop
ss
pop
or
jo
stc
mov
lods
mov
or
cmp
int
test
fisubl
lret
inc
scas
sub
lcall
lods
mov
fs
jo
sahf
mov
fistpl
dec
pusha
sti
and
cmp
shrb
or
sub
repnz
cld
sub
xchg
cmc
and
xor
pop
les
add
cmovae
cmp
xor
mov
fs
mull
popa
and
loope
mov
xlat
ja
xchg
jmp
mov
jmp
aas
mov
inc
xlat
add
inc
cwtl
int3
out
pop
ror
shrb
enter
jp
mov
lods
mov
lea
jecxz
mov
dec
psubw
out
adcl
xor
aad
insl
sbb
shlb
loope
or
push
sub
ds
mov
xor
cs
pop
mov
push
or
mov
adc
rol
push
aaa
xor
xchg
testb
scas
testb
std
push
mov
push
fdivrs
dec
dec
cmp
adc
ret
mov
dec
test
mov
sahf
xchg
imul
leave
and
mov
jb
xchg
mov
sbb
stos
out
xchg
xchg
sub
gs
nop
incb
push
pop
out
imul
and
idiv
fdivs
xor
out
sbb
aad
sbb
movsl
pop
mull
lods
ret
push
cwtl
imull
xchg
jb
xor
enter
xor
xor
pop
xchg
movsl
wrmsr
dec
js
sbb
stos
xlat
inc
test
inc
push
mov
arpl
aas
outsb
cs
and
lret
idivb
sbb
daa
mov
repz
dec
jne
pop
inc
in
xchg
nop
push
mov
mov
mov
addr16
jge
adc
stos
push
call
nop
sub
push
jge
and
inc
xchg
lds
push
shlb
je
sbb
das
and
cmpsb
xor
int3
adc
movsl
out
enter
mov
push
in
dec
incl
gs
mov
add
std
cli
aam
jle
xor
push
or
call
mov
xor
mov
inc
xor
mov
jb
imul
pop
mov
xchg
add
bound
test
in
sbbl
aad
mov
jb
rolb
je
dec
clc
lcall
out
aas
stc
xchg
enter
arpl
fstp
es
push
jmp
in
fnsave
sbb
dec
dec
stc
dec
incl
add
into
xor
mov
lret
mov
adc
xchg
mov
cmp
leavew
dec
popf
pop
mov
es
roll
jmp
xchg
aam
sub
insb
clc
inc
mov
pop
popf
clc
pop
mov
test
jne
cmp
sub
xchg
pusha
repnz
xchg
data16
nop
and
aad
ficompl
xor
dec
fsts
imul
cld
push
fistl
into
mov
daa
push
mov
negl
clc
out
and
xlat
out
ds
xchg
mov
mov
arpl
push
lock
cltd
inc
xor
push
adc
and
in
dec
mov
or
and
movsb
int3
add
dec
arpl
sbb
mov
and
xchg
divl
pop
ficoms
add
insb
rcll
insl
out
cmp
and
dec
in
lods
in
mov
jg
xlat
or
mov
cmpsl
out
repnz
mov
loopne
loope
push
into
jl
fstpl
aaa
pop
xchg
xchg
jmp
aaa
hlt
xchg
sbb
jg
mov
jae
mov
ljmp
inc
cmp
fwait
cmp
out
cmp
cmpsl
into
cwtl
rorb
push
push
push
pop
imul
ss
aaa
add
das
jb
in
lret
push
enter
cmp
xchg
in
subb
stos
xor
cli
fwait
jno
into
outsl
ds
sub
adc
cmc
mov
loop
int
imul
add
xlat
jmp
adc
add
call
push
int3
dec
mov
jmp
jae
in
push
sub
mov
enter
or
jns
xor
or
jl
xor
cli
pop
aad
push
push
jo
pusha
daa
jecxz
push
sub
rcll
xchg
loopne
add
ret
xor
movsl
sbb
rcl
popa
cmp
lret
cmp
mov
negb
mov
aaa
je
mov
lds
xlat
mov
xor
je
inc
xchg
je
inc
jne
add
ret
jne
add
xchg
inc
cli
fmuls
ja
jne
lea
outsb
out
add
das
jae
rorb
mov
inc
pop
lret
sbb
out
pushf
adc
mov
pop
jp
bound
cmp
push
into
pop
fists
sbb
repnz
or
in
insl
or
imul
pop
mov
test
into
xchg
sbb
pop
sti
std
pop
leave
sarb
inc
push
xchg
and
sbb
pop
cmovnp
xor
dec
push
shr
xor
pop
jns
std
mov
xlat
adc
fucomip
loope
shl
and
mov
dec
adcl
jb
inc
out
lret
cmp
loope
arpl
daa
adc
jne
fimull
insl
pop
dec
insb
dec
sub
das
inc
test
sub
adc
mov
xchg
or
insb
add
nop
fadd
mov
pop
stos
push
xchg
sbb
and
rolb
mov
in
pop
fwait
subb
push
pushf
push
xchg
push
or
shll
ss
fisubs
outsb
fsts
das
inc
xor
cmp
jmp
outsl
sbb
add
repnz
sub
clc
fs
push
shlb
orb
mov
loop
mov
inc
mov
xchg
les
in
out
repnz
mov
cld
cwtl
adc
cli
repnz
sub
push
cmp
push
das
dec
jle
shlb
sarl
lahf
jae
sarb
and
or
iret
mov
fmuls
aaa
enter
mov
inc
cmp
arpl
or
mov
sbb
lret
sub
adc
shrl
addr16
add
mov
jo
jno
inc
stos
inc
loope
push
mull
popa
sahf
movsb
sub
andl
adc
mov
sbb
adc
xchg
cmp
packssdw
cmp
or
dec
xchg
jge
mov
sub
cmpsb
cmp
mov
mov
cmp
dec
out
adc
push
pop
dec
push
in
sub
ret
lret
addl
jp
lock
mov
rcl
out
add
sbb
mov
mov
mov
rcrl
fidivs
imull
cmpl
in
mov
dec
divl
fiaddl
mov
les
addr16
and
gs
cmpb
pushf
and
loop
test
cmc
in
gs
jge
aad
insb
push
sti
fbld
dec
cmc
je
inc
lcall
test
sub
or
or
fidivl
test
dec
and
shl
into
lock
pop
adc
shrb
aam
or
iret
in
test
adc
idivl
mov
add
lods
xor
xchg
push
pop
cmp
mov
lret
mov
push
or
das
mov
sbb
lock
jne
or
push
pop
fwait
test
sbb
pushf
adc
mov
in
inc
xchg
popf
repnz
push
dec
push
xor
or
mov
adc
mov
dec
leave
sub
xor
lret
lods
dec
dec
pop
push
in
ss
adc
cmp
or
fcomp
push
add
push
adc
nop
mov
jno
test
pop
jecxz
jb
jp
push
pop
add
pop
sub
mov
stc
fimull
popl
jg
scas
and
or
dec
into
adc
jno
movsl
jne
add
aad
sub
sub
cmp
imul
dec
and
xchg
add
push
arpl
and
sti
inc
arpl
out
xor
push
pop
mov
inc
jbe
add
dec
jecxz
push
sub
push
imul
mov
sti
mov
sbb
in
and
jns
hlt
aaa
rorb
testl
sbb
push
and
sbb
push
mov
dec
or
arpl
not
dec
int
mov
push
mov
cmc
repnz
xchg
mov
mov
lahf
push
test
add
jp
shlb
loop
lret
fwait
adc
dec
dec
mov
outsl
jns
cs
lods
mov
dec
cmpsb
inc
int3
movsl
jmp
int3
movsb
push
xchg
xor
data16
and
push
test
jmp
add
xor
in
xchg
stos
cmpsb
sub
xor
ss
sbb
out
inc
push
sarl
push
jmp
int
push
fiadds
es
xchg
loopne
cmp
lret
sub
add
mov
out
adc
lahf
push
les
sbb
aad
jb
add
lea
xchg
xor
dec
adc
loope
sbb
jl
shufps
in
sbb
addr16
out
cmp
or
insl
dec
lods
or
pop
sbb
sarb
sub
fisubrl
cltd
inc
cmp
jge
scas
xlat
lods
lcall
mov
add
xchg
inc
adc
sub
jnp
outsb
inc
jg
push
dec
cmpsb
fidivrs
adc
jno
jle
xchg
jnp
jne
loop
or
shll
mov
jmp
or
inc
and
cltd
mov
lock
xlat
pop
in
pop
adc
pusha
mov
lretw
fwait
add
sub
lea
fstpt
or
jmp
aad
dec
inc
ss
mov
pop
rcll
inc
xorl
movsb
andl
xchg
mov
jno
cli
jle
call
jo
sub
les
cltd
jecxz
lods
mov
loope
fs
repz
mov
imul
sub
int3
dec
cld
sbb
in
jg
cs
xor
pop
mov
stos
ret
inc
ds
push
jle
and
jnp
sbb
out
pusha
std
stc
lcall
mov
or
pop
inc
sub
xor
out
mov
adc
jmp
jno
movsl
jne
sub
push
push
mov
cmp
gs
xchg
jae
dec
jmp
cs
sbbb
outsb
add
repz
stc
mov
bswap
arpl
jno
cmp
cmp
stos
xor
push
pop
fnstcw
xchg
mov
add
push
cmpsb
loop
dec
test
push
jge
sub
sub
ror
xchg
repnz
add
cwtl
je
xlat
sbb
xchg
jp
mov
jns
rcl
sub
jne
and
insl
insl
sahf
inc
push
es
mov
rol
fcmovnu
jle
int3
aas
jg
xchg
ret
rcr
stos
test
or
mov
cs
pop
cltd
add
add
aaa
in
roll
jl
push
into
daa
mov
out
and
in
aaa
push
cmpb
sbb
in
insb
adc
scas
jo
xor
inc
in
mov
es
addr16
ja
mov
xchg
inc
mov
sub
out
cmpxchg
fs
sbb
push
pop
mov
jae
fisubrl
stos
inc
call
sub
dec
push
cwtl
sub
adc
or
out
push
cmp
nop
adc
mov
push
in
mov
sbb
aam
xchg
test
das
sub
sbb
mov
sub
cmc
cmc
mov
sbb
pop
add
push
sahf
insb
dec
enter
xchg
inc
stos
sbb
xchg
gs
cmp
int3
inc
pusha
push
sbb
imul
int3
outsl
inc
push
xorb
adcb
mov
cmp
jecxz
das
push
dec
call
cmp
das
mov
cmp
test
shrb
les
ds
xchg
jbe
scas
pop
mov
push
adc
out
push
mov
test
xchg
and
adc
xor
mov
cmpsl
xorb
enter
or
jae
inc
subb
es
push
adc
push
add
xor
and
push
in
pop
icebp
popf
aas
xchg
pop
leave
out
xchg
int
push
push
pop
movsb
rol
cltd
fmulp
jmp
outsl
nop
xor
mov
fildl
inc
cmpsb
xchg
jge
xchg
ljmp
and
xchg
add
adc
mov
cld
sti
add
fucomp
cmpsl
sub
dec
sbb
adc
push
into
into
mov
pop
orb
jbe
ret
sbb
push
fisubrs
rcl
xor
inc
sub
in
sahf
cmpsb
pop
dec
push
pop
imul
dec
push
xor
inc
mov
add
xchg
fmulp
add
xchg
mov
popa
sub
insl
arpl
insl
out
out
mov
stc
sub
movsl
jbe
mov
cmpsb
aad
stc
sub
aam
push
adc
hlt
jmp
xchg
xor
inc
je
xlat
and
scas
jno
inc
dec
sbb
ret
andl
sti
cmp
and
pop
bound
addr16
movsb
pop
mov
into
jb
inc
cmp
dec
clc
cmp
cmc
roll
aaa
repz
retw
mov
xchg
dec
cmp
cs
jb
std
movsl
aaa
loopne
dec
iret
imul
sub
xor
push
and
push
jle
adc
mov
mov
jl
mov
add
and
and
inc
lcall
mov
dec
loop
shrl
je
out
insl
scas
xor
repnz
cmc
movsb
inc
out
mov
cmc
sub
cmp
pop
mov
dec
ljmp
dec
xchg
push
lret
addr16
and
test
into
frstor
xor
pop
cld
adc
data16
dec
sub
push
xchg
insb
and
daa
lock
test
adcb
mov
jmp
mov
test
addr16
adc
add
scas
add
std
cmp
and
add
sarl
pop
shlb
dec
sub
in
pop
add
hlt
rorl
dec
aad
jp
movsb
jnp
add
push
xchg
xor
push
fcmove
sbb
ja
ret
inc
aam
adc
add
mov
jno
shlb
xorl
test
mov
out
lods
rcrl
sub
imul
out
and
push
sarl
stc
cmpsb
dec
adc
mov
jg
inc
and
int
into
std
xor
je
xorl
loope
movb
in
sarl
mov
jmp
or
repz
std
add
clc
mov
xchg
js
gs
push
cs
sbb
xchg
addb
fisubrl
push
shrl
in
or
mov
scas
dec
test
jb
add
loopne
dec
sahf
xchg
add
cwtl
xor
add
adc
mov
mov
ljmp
cmpsl
lods
pop
inc
and
push
test
fwait
addr16
mov
jne
enter
xor
repz
cltd
cmp
push
scas
push
std
add
cli
add
mov
push
lret
in
cli
or
loope
inc
push
push
or
jp
jno
mov
jae
test
and
shll
xchg
sahf
into
imul
lret
inc
les
hlt
mov
es
pop
out
jae
imul
push
mov
jp
xlat
aaa
dec
inc
js
cli
mov
shrl
mov
mov
lret
out
clc
sub
xor
jno
mov
shll
sarl
ffree
and
fcmove
je
ljmp
cmp
pop
js
je
push
add
ss
arpl
decb
ljmp
jmp
lea
outsl
push
iret
dec
sahf
xor
add
or
stos
dec
jne
dec
xchg
cmpsb
dec
loope
lret
lock
iret
aaa
movl
pop
cmp
sub
dec
mov
cmpsl
shl
scas
das
bound
mov
test
fsubrl
inc
mov
ret
mov
out
jne
test
jnp
fdivrs
sbb
iret
test
stos
pop
leave
jle
nop
pusha
in
popa
lret
jmp
mov
lret
mov
sbb
stos
rolb
cli
mov
leave
into
je
aam
in
pop
push
mulb
aam
mov
repz
cs
jp
outsb
int3
fstpt
and
dec
roll
jbe
out
ljmp
pop
cmp
orb
outsl
dec
pushf
mov
adc
lds
popf
or
clc
and
mov
inc
out
pop
and
sbb
sbb
or
js
fsubrl
sub
loop
sahf
mov
sbb
dec
inc
popl
inc
pop
pop
push
push
add
outsb
jg
sbb
mov
mov
jne
jnp
gs
shlb
inc
jge
adc
das
add
mov
xchg
cmp
fcom
mov
insl
mov
dec
xchg
les
pop
mov
mov
xor
rcrl
or
add
cmp
cmp
sbb
shlb
cli
inc
sub
imul
dec
inc
dec
mov
and
mov
arpl
and
pop
mov
lret
or
andb
xlat
out
push
mov
xchg
add
into
sub
xor
xchg
fstps
es
sbbb
dec
add
ljmp
loop
mov
push
sub
mov
xchg
pop
sub
and
adc
icebp
imul
dec
cmp
cld
jle
andl
push
cmp
push
push
cmp
adc
sbb
xor
aaa
mov
jae
repnz
mov
inc
inc
and
pusha
xchg
xchg
stos
mov
inc
xor
popa
mov
icebp
sbb
and
mov
loop
lods
in
sbb
add
scas
filds
mov
or
pop
addr16
repz
lds
lahf
pop
mov
decb
pop
jnp
xlat
out
sti
int
notl
rorl
add
pop
xor
push
and
lahf
flds
daa
fcom
stc
pop
rorl
scas
add
jmp
into
jno
push
lds
mov
fs
cmp
pop
push
jle
leave
test
popa
incl
mov
nop
cmp
sti
jnp
add
jbe
jo
jb
test
jbe
add
and
dec
shrl
fidivrs
inc
adc
pop
sarl
out
lods
in
inc
and
aad
imul
mov
mov
clc
cmp
lret
into
imul
mov
mov
sub
stos
dec
xor
mov
dec
stos
nop
test
xchg
mov
icebp
popf
ret
sarl
xchg
hlt
lock
or
and
add
jg
into
hlt
lret
clc
xor
mov
lretw
cmp
ds
in
xchg
je
xor
out
jbe
das
loop
loopne
test
cli
dec
dec
cmc
mov
jne
enter
lods
mov
out
dec
cltd
jb
daa
shll
add
cwtl
cs
je
sbb
sahf
shl
add
pop
mov
aaa
dec
mov
xchg
fdivs
fdivr
xchg
or
jbe
sti
sub
sub
push
mov
inc
jo
mov
push
inc
sub
xchg
dec
insl
adc
add
outsl
cmp
mov
in
std
and
aas
inc
test
fmull
sub
mov
cli
outsb
xchg
xor
test
adc
ds
test
test
jecxz
leave
jnp
mov
ja
fcompl
enter
dec
adc
mov
inc
lahf
xor
ret
push
mov
sti
out
sub
das
mov
lds
mov
sarb
rcll
dec
lcall
inc
pop
sub
jne
push
lcall
test
ljmp
xchg
and
hlt
add
setae
pop
xor
std
sti
xor
jecxz
stos
pop
outsb
adc
mov
fsubl
insl
outsl
jbe
andnps
mov
push
pop
jmp
dec
fld
cmpsl
mov
xor
adc
insl
iret
pushf
repz
pushf
rcrb
daa
cmp
mov
enter
divl
sahf
mov
int3
fs
jle
dec
jp
fdivl
enter
data16
int3
lret
add
out
hlt
das
push
xchg
jl
cmp
push
imul
in
addb
jbe
call
xchg
or
inc
loop
loope
adc
xchg
out
jle
mov
pop
mov
js
test
lods
and
fadds
test
cwtl
pop
fwait
dec
das
pop
add
jge
mov
dec
mov
dec
cmc
andl
push
lret
dec
push
outsl
in
fwait
xor
sub
aas
arpl
cmpsb
fs
inc
jp
loope
ficoms
rolb
out
sub
fcomip
push
insl
pop
stos
inc
in
test
push
dec
push
adc
and
mov
cmp
addr16
add
mov
int3
cmpsl
mov
cmp
pop
adc
xchg
inc
iret
es
and
xor
arpl
les
ror
or
addr16
and
fstpl
enter
add
scas
loop
das
arpl
sti
movsb
fwait
jg
pop
xchg
add
jp
adc
pop
cmc
mov
adc
sub
ficoml
leave
imul
rcrl
rcll
cmpsl
ja
add
jo
cmc
decb
in
outsb
xchg
jg
pop
and
push
add
jne
insb
ljmp
or
fmul
addb
cld
push
mov
cmc
fistpll
js
sub
mov
xor
fdivr
adc
ds
int3
adc
jbe
lea
sub
adc
sahf
nop
push
pop
in
out
push
imul
fcmovnb
out
leave
jg
mov
es
push
jne
mov
ljmp
or
adc
fdivl
push
jnp
call
movsb
fwait
out
cmp
cltd
cmpsb
lock
mov
xor
shlb
clc
or
sbb
mov
cs
sub
mov
adc
xchg
and
pop
imul
add
mov
mov
not
in
inc
cmp
adc
mov
shlb
aad
xchg
fadds
push
rcrb
loope
and
cs
mov
inc
loope
lods
in
xor
neg
push
xchg
mov
sub
aaa
xchg
push
arpl
sub
mov
daa
loopne
mov
sahf
push
push
mov
sbb
pop
cli
lock
sub
jp
clc
js
add
pop
dec
sbb
adcl
lcall
mov
xor
mov
mov
jb
outsl
aaa
mov
shl
out
loop
mov
push
imul
xchg
and
sbb
xor
movsb
adc
and
adc
in
jae
sub
xor
dec
cs
insl
js
outsb
daa
fstps
jmp
sub
push
sbb
jo
outsb
mov
iret
xchg
cmp
insl
rclb
xchg
mov
mov
ja
push
ret
das
pop
mov
test
mov
int3
movsb
fisubs
push
mov
mov
stc
add
mov
jns
test
and
add
dec
sub
cmc
inc
pop
jp
int
or
fwait
cld
xor
sub
movsl
push
mov
xchg
pop
outsb
xlat
and
cmpsb
es
push
out
aam
adc
jo
pushf
outsb
jge
mov
popa
mov
cmpsl
cmp
xchg
and
mov
repz
xchg
aas
clc
push
out
cwtl
mov
mov
inc
cwtl
shrl
imul
orl
loope
je
or
stos
lock
cmp
mov
adc
xchg
mov
sbb
xor
pop
xchg
fbstp
sahf
and
mov
loop
dec
cmp
outsb
adc
lods
fidivrl
jns
loop
mov
fsubrp
adc
xchg
cmpsl
dec
sbb
or
and
mov
mov
jge
mov
sbb
pushl
mov
aad
lods
and
ds
addr16
or
nop
mov
xchg
outsb
fistpl
js
or
repnz
cmpsb
outsl
fcmovne
mov
pop
sbb
out
pmuludq
pop
cmp
cmpsb
icebp
call
mov
mov
shrb
stos
rcl
scas
lods
and
mov
jns
and
adc
push
pop
nop
std
xchg
ffreep
imul
in
stos
mov
adc
je
pop
mov
xor
sahf
push
lods
stos
stc
in
jle
adc
leave
mov
arpl
fldt
xchg
sub
xchg
cli
add
mov
shll
dec
pop
jnp
lcall
mov
mov
push
dec
mov
repnz
dec
cmp
mov
inc
push
mov
aaa
and
push
sbb
mulb
pop
stos
loop
and
mov
or
add
das
push
push
in
dec
out
mov
add
push
pop
mov
aas
outsl
inc
add
mov
jb
cmp
sahf
add
and
lea
and
jl
sti
lcall
sbb
testl
ljmp
and
out
loop
xchg
mov
cmpps
call
pop
out
into
and
std
and
adc
cmp
jne
fsts
sub
std
xchg
mov
mov
faddp
pop
int3
repz
add
mov
call
xor
xor
add
inc
mov
popf
adc
mov
sbbl
sti
js
mov
and
adc
mov
ljmp
test
lret
cmp
out
sbb
icebp
jg
dec
jmp
push
fwait
jo
lea
jno
or
daa
and
xchg
mov
mov
mov
mov
jno
mov
add
xlat
stos
push
gs
xor
inc
sbb
add
leave
jle
cmp
iret
push
sub
or
and
inc
fmull
pop
ljmp
xchg
jmp
in
in
int3
outsb
adc
in
arpl
nop
sbb
jge
push
fsts
imul
clc
clc
cltd
xchg
stos
fbstp
fisttpl
sbbb
ret
mov
adc
cltd
and
dec
cwtl
push
jbe
sarl
push
dec
adc
xchg
push
in
repnz
stc
jecxz
jo
sub
cmp
pop
adc
ds
add
xor
pop
inc
jecxz
daa
mov
pop
lahf
mov
cwtl
fsts
pop
add
repnz
nop
mov
int
and
sbb
mov
or
mov
xchg
fstpt
sbb
push
test
js
pop
ljmp
adc
test
in
pop
scas
or
mov
or
adc
test
dec
sbbl
fdivr
loopne
insl
inc
mov
cmp
mov
dec
add
dec
cmp
pop
es
xor
sbb
neg
std
inc
in
cmp
adc
sti
das
mov
xor
test
mov
insl
les
push
pushf
fisttps
push
pushf
mov
mov
jnp
pop
hlt
and
mov
imul
sub
popa
outsl
arpl
push
jge
pop
fadd
sahf
jo
sbb
mov
sbb
jmp
lds
jl
pop
dec
imul
mov
sbb
enter
mov
push
push
inc
shll
jg
dec
add
mov
in
or
add
cmp
push
cmp
pop
xchg
in
stos
sub
repnz
int
bnd
sti
mov
testl
in
fwait
dec
fcompl
push
aas
jge
cmp
jo
lret
and
xchg
adc
rorl
test
dec
add
pop
jecxz
xor
cmp
ss
mov
cltd
mov
xchg
push
xchg
push
jnp
mov
pop
out
xor
push
out
adc
leave
dec
add
or
popa
mov
mov
stos
jmp
or
cmpsl
dec
movb
aam
rcrb
sub
mov
push
mov
jne
xchg
mov
clc
ljmp
mov
xor
sub
mov
mov
sbb
scas
pop
fists
fwait
cmp
loop
arpl
push
sub
pop
sarb
inc
push
stc
call
mov
fwait
pop
lds
das
out
int3
xchg
push
dec
add
push
mov
push
std
lret
ret
dec
test
push
fcoml
mov
pop
mov
sti
je
shlb
xor
and
mov
popa
call
repz
xor
mov
nop
pusha
mov
add
xchg
jae
cmp
mov
mov
mov
js
ficompl
mov
rolb
or
in
ja
pop
dec
pop
xor
inc
call
scas
cmp
data16
push
pop
dec
xchg
aaa
lcall
sub
jecxz
cmp
xchg
mov
sbb
mov
pop
fisttpll
or
cli
adcl
faddl
cmp
bound
imul
addl
jge
adc
jmp
outsb
lds
or
outsl
rcrb
push
xchg
mov
jns
jp
dec
ffree
lods
dec
push
scas
ficoms
test
dec
jle
push
std
mov
leave
mov
out
fstl
mov
mov
loop
push
jns
or
pop
call
xchg
add
jmp
mov
dec
mov
mov
out
cmp
cli
scas
shlb
je
or
mov
je
fldcw
data16
sbb
test
pop
pop
jae
cmpsl
pop
fistpl
inc
mov
repnz
aad
addr16
jbe
pop
int3
push
sub
push
enter
jns
dec
add
clc
shl
mov
mov
sbb
cld
xor
pusha
xchg
dec
jo
sarb
mov
cltd
push
cmp
adc
out
mov
or
pop
clc
push
test
or
js
in
mov
adc
push
imul
push
pop
or
add
mov
outsl
or
cli
xor
frstpm(287
or
mov
insl
mov
xor
and
in
addb
jecxz
in
push
pop
push
imul
pop
xchg
push
arpl
shrb
inc
pop
aam
inc
add
sub
and
loope
scas
cltd
test
sbb
ffree
dec
mov
addb
dec
lcall
xchg
and
xorb
or
cmp
or
lods
shr
cmp
aad
cmc
jg
or
cmp
out
or
xchg
cwtl
sbb
sbb
shlb
fisttpl
shll
inc
or
inc
jle
or
loopne
dec
fisubs
xchg
fs
mov
add
xlat
shlb
xor
dec
cld
cmpsl
fiaddl
je
aad
stc
into
and
inc
inc
xchg
mov
cmpsl
popf
idivl
add
jno
test
sub
cmpsb
imul
sbb
jl
loopne
popf
cli
test
push
add
or
mov
notb
fisubs
mov
inc
jg
ds
in
lcall
jns
inc
stos
xor
xchg
mov
and
pop
jle
or
imul
add
jp
movsb
test
push
mov
cmp
in
ds
in
inc
dec
popa
jg
xchg
and
mov
das
inc
xor
ljmp
bound
clc
jae
xor
xchg
sub
inc
push
shrb
mov
xchg
dec
arpl
clc
add
outsl
cmp
push
dec
out
jnp
xorb
jns
add
or
fbstp
stc
clc
es
dec
adc
out
dec
lock
ja
sub
cmp
xlat
xchg
ljmp
je
xchg
in
xlat
mov
jp
repz
mov
push
adc
jl
mov
sbb
in
adc
outsb
sar
repz
pusha
adc
test
xor
sbb
add
mov
lods
jno
add
add
enter
loopne
push
dec
or
push
shr
sahf
lahf
sub
add
shlb
adcl
cmp
pop
aas
mov
lcall
lock
xor
fistpl
inc
push
mov
adc
mov
outsl
pop
inc
ja
mov
or
lea
push
add
ds
stc
dec
sti
xor
popf
inc
nop
adc
lahf
scas
dec
mov
inc
js
sar
pop
xor
ret
aad
call
inc
decb
int
mov
cmp
sbb
into
and
inc
adc
dec
shlb
test
sbb
pop
xchg
sbb
pop
sti
jae
add
pop
out
jp
sub
mov
mov
mov
mov
ds
cltd
out
test
mov
std
pop
jno
push
pop
aad
lods
clc
fst
into
aam
jmp
jp
push
dec
popf
sub
inc
test
pop
push
or
aam
in
ljmp
in
das
and
jl
or
dec
fdivl
stos
add
sbb
add
mov
xor
push
inc
daa
sub
sbb
mov
mov
dec
push
and
cmp
inc
add
xchg
inc
out
pop
mov
inc
pop
xor
push
add
jl
mov
mov
push
cmpsl
cltd
push
xor
mov
out
in
repz
out
rclb
fisubrs
mov
sbbb
mov
enter
loope
xor
je
push
movsl
sti
jns
call
mov
rorl
inc
push
scas
jne,pn
stos
rcll
jne
xchg
rolb
jns
xlat
das
cld
fnstcw
fisubl
sbb
cltd
xchg
mov
fucomip
inc
arpl
sub
sbb
in
sbb
out
lcall
enter
and
adc
sub
mov
pop
pop
flds
and
insb
repz
xor
test
jno
es
popa
pop
fdivr
cmp
and
jb
mov
and
inc
inc
repnz
mov
adc
insb
jp
dec
adc
cmp
dec
push
mov
addr16
mov
inc
pop
repz
xchg
jnp,pn
ret
jno
scas
xlat
les
repz
das
clc
nop
push
pusha
add
xchg
adc
push
pusha
mov
testl
rol
add
mov
popa
fs
cli
arpl
push
cld
mov
add
mov
imul
movsb
dec
adc
push
push
sti
hlt
es
je
lret
pop
xor
fstpt
loopne
outsl
cmp
mov
js
sub
or
hlt
aas
movsb
mov
data16
sbb
cmpsl
lret
stos
insl
addl
mov
data16
jmp
jecxz
add
jp
cmp
push
aam
xor
push
inc
fcoms
sbb
cld
jo
mov
mov
test
mov
cli
sbb
pop
and
test
or
jne
mov
ret
mov
mov
add
mov
nop
mov
mov
inc
outsl
addr16
testl
inc
cmpsl
or
flds
push
or
xor
xchg
rcll
cmc
and
add
das
push
fdivl
sbb
nop
mov
iret
xchg
adc
cmp
sti
sbbl
iret
jo
fisubl
mov
mov
leave
in
or
add
jne
lods
push
push
testb
aad
push
lldt
adc
xor
js
jno
push
lock
aaa
push
ds
outsb
into
pop
push
push
mov
cmp
in
aam
xor
cwtl
mov
daa
lcall
fmull
stos
out
fwait
xchg
fisubl
lods
jl
jo
mov
dec
outsl
push
arpl
cmpsl
popf
push
mov
addl
pop
cmpsb
or
ficomps
xchg
rolb
shr
fwait
popa
and
adc
loopne
out
out
or
fisttpl
popa
enter
dec
shl
inc
add
push
or
jno
and
jl
push
mov
mov
cmpsb
push
add
push
adc
jno
pop
sti
mov
xorb
mov
mov
shll
aas
fsubs
mov
mov
shrb
cld
push
je
inc
cli
outsb
shrl
cmp
xchg
cmpsl
std
bound
leave
fwait
sbb
inc
jno
out
add
sub
imul
in
outsb
movsb
ret
shl
jo
push
xchg
dec
xchg
leave
int
je
gs
pop
fsubrs
ficoms
mov
and
push
jno
frstor
mov
or
out
lea
out
xorl
mov
pop
mov
push
arpl
lock
jne
dec
pushl
cmp
sbb
pop
dec
rolb
daa
das
mov
mov
cmpb
cltd
es
jne
fdivr
dec
into
xor
imul
xor
adc
ss
fsubl
faddp
popa
fcmovnbe
mov
insb
mov
adc
lock
and
push
shlb
sahf
push
mov
pop
mov
jmp
mov
aad
cmpsl
nop
sub
ds
negb
add
addr16
sbbb
leave
in
icebp
data16
imul
pop
stos
or
int
jo
mov
or
dec
pop
lods
xchg
jmp
and
lcall
mov
test
jmp
ret
cmpsl
lret
out
scas
sbb
mov
mov
pop
jne
int3
xor
and
xchg
sahf
xor
sub
scas
clc
push
mov
rolb
jb
cmp
or
mov
je
in
push
jns
fucomp
lcall
jo
out
clc
ja
dec
es
push
push
ja
push
das
int3
inc
sub
lahf
ds
sub
pop
outsb
pop
imul
sti
loopnew
push
outsl
iret
int3
sbb
and
jg
icebp
xor
or
mov
test
leave
hlt
sub
add
cmc
clc
aas
bound
ljmp
xchg
xchg
clc
adc
repnz
inc
jnp
jae
in
insb
mov
movsb
mov
and
testl
push
cmp
loope
lahf
cmp
loopne
es
in
dec
insb
shrb
das
xchg
outsl
jle
cli
es
daa
imulb
nop
push
sbb
xor
jns
push
jne
mov
mov
imull
add
repz
daa
scas
jp
xchg
pop
icebp
popf
push
inc
dec
sub
push
xor
or
xlat
mov
mov
add
dec
iret
push
verw
push
iret
jmp
jmp
shrb
mov
jb
cmpsl
ja
xchg
ja
adc
pop
aad
stc
xor
xchg
adc
jg
add
mov
xchg
mov
mov
jle
xchg
int3
outsb
cs
setg
jbe
andb
dec
repnz
mov
les
push
nop
stos
xchg
push
push
mov
push
in
in
or
mov
loope
lret
leave
adc
or
andl
mov
and
inc
sbb
push
out
popa
cmp
out
std
xor
jmp
scas
ret
mov
and
in
cltd
insl
inc
mov
test
cmc
movsl
imul
std
push
mov
test
mov
lock
add
mov
or
mov
in
fsts
mov
sub
cmpsb
dec
js
in
mov
iret
pmaddwd
push
rcrl
xor
mov
fs
adc
push
pop
mov
mov
pop
daa
inc
sti
aas
xchg
jno
fsubrs
negb
mov
ljmp
sbb
sbb
mov
push
pextrw
outsl
dec
outsb
jle
sarb
sbb
aam
fidivl
lahf
fldl2t
cmp
jl
mov
imul
into
sub
movsl
aaa
daa
pop
mov
mov
jl
xor
jne
cmc
fldcw
pop
push
imul
sub
xor
frstor
scas
add
fadds
xor
adc
sub
mov
inc
loope
cli
mov
mov
jnp
mov
xchg
cwtl
cld
mov
mov
sbb
cmpsb
push
rcl
aas
lea
imul
cmc
mov
ss
fs
cmp
or
enter
sbb
test
xchg
repz
and
mov
lret
or
or
divb
sti
lret
or
repnz
out
movsl
mov
xlat
mov
sub
xchg
mov
int3
mov
push
js
add
dec
or
inc
mov
cs
jne
sub
xchg
repz
fstpl
xor
lods
push
rorl
aaa
cli
jns
jl
mov
or
out
icebp
push
mov
mov
add
lea
adc
movsb
sub
lods
adc
adc
fsubrs
and
push
decl
into
or
lds
dec
int3
data16
or
mov
mov
push
andl
cmc
aam
pusha
movsl
xor
pop
push
mov
ljmp
loop
mov
xor
or
sub
mov
sbbb
nop
les
xchg
pushl
into
out
and
xor
cmpsb
into
movsl
enter
ret
mov
insb
sbb
xor
ret
sbb
mov
and
jp
in
ja
scas
test
sbb
xchg
mov
add
inc
sbb
dec
push
cmp
mov
outsb
fdivrl
decb
inc
mov
sti
sub
daa
push
or
dec
dec
pushf
mov
ljmp
pop
mov
adc
jno
cmp
lods
jbe
fmulp
pop
insb
lcall
push
cmp
les
lahf
jle
mov
dec
outsb
jle
add
out
mov
sub
or
bound
outsb
scas
pop
cmc
mov
pop
ret
mov
dec
cmp
aaa
aad
test
fs
push
jae
pop
cmp
mov
rclb
aaa
sahf
imul
and
and
mov
xchg
icebp
pop
ret
pop
or
mov
out
test
push
jl
pop
aad
dec
mov
mov
fisubrl
cmpsl
dec
out
xlat
lock
sbb
xchg
add
jno
out
or
dec
cltd
dec
bound
mov
les
mov
mov
mov
add
cs
test
sbb
leave
and
and
andl
mov
imul
xchg
push
xchg
les
and
iret
fwait
mov
xchg
sti
shrl
jmp
lods
and
mov
aaa
cmp
dec
lcall
clc
dec
mov
sahf
jecxz
mov
popa
pop
jae
loop
inc
sub
push
pop
or
mov
shrl
jge
ss
adc
cwtl
ss
fmul
add
mov
in
mov
hlt
push
jle
mov
mov
movsl
int
addr16
mov
mov
jmp
add
xchg
push
sub
xlat
in
adc
inc
js
aas
push
and
jmp
rorl
push
mov
cmp
inc
sbb
inc
rep
fistl
loop
das
outsl
dec
lds
mov
nop
fs
int
cmp
add
loop
cld
fadds
mov
mov
out
sahf
mov
test
jnp
jne
xor
jecxz
sarl
insb
jne
add
dec
xchg
aad
divb
push
ds
ljmp
cmp
fnstcw
mov
lds
or
out
mov
adc
ja
mov
jnp
shlb
cmp
pushf
dec
xchg
add
dec
test
add
jns
lods
mov
jbe
nop
pop
inc
out
pop
enter
into
push
dec
lods
xor
bound
dec
stc
and
cmpl
movsl
add
adc
enter
mov
test
inc
iret
lods
mov
icebp
xor
adc
insl
jne
xor
sbb
mov
mov
out
push
movsb
out
push
iret
sub
jp
jae
mov
insb
push
stos
xchg
clc
adc
or
mov
repnz
fwait
decb
in
mov
inc
sbb
sub
out
mov
andl
and
fwait
add
ja
orl
fdivl
and
daa
jp
mul
lods
test
jne
ljmp
int3
sub
mov
stos
pusha
inc
add
sbb
clc
pop
ss
inc
inc
and
data16
jno
adc
xchg
aam
in
or
loopne
xchg
pop
sbb
pop
pop
pcmpgtb
cmp
sub
stc
mov
in
pusha
int3
xchg
stos
std
cmp
addl
sbb
loope
mov
clc
daa
xor
lods
inc
jne
pop
and
out
addb
lahf
test
or
out
sub
jp
xor
data16
and
adc
jle
push
pop
mov
fldenv
add
jae
xor
push
movsl
push
hlt
ljmp
add
push
fwait
mov
cmpsl
imul
lahf
xchg
test
and
ja
call
gs
push
pop
cld
insl
xchg
jbe
movsl
incb
shrl
mov
pop
or
loopne
mov
fnstsw
iret
sbb
xor
mov
dec
stos
jmp
and
int
mov
mov
int3
adc
cmpsb
cmp
arpl
sets
jo
mov
adc
iret
in
insl
and
and
add
in
xchg
dec
ds
mov
test
stos
imul
dec
out
test
insl
std
pop
cli
repz
stos
jno
mov
fs
int3
in
dec
pop
jo
add
test
mov
call
sub
xchg
movsb
pop
pop
pop
imul
std
ret
outsl
push
fstps
and
dec
inc
dec
mov
xchg
push
jae
stos
cmpsb
lcall
std
jl
inc
xchg
dec
fwait
or
movsb
fistpll
stc
imul
mov
cmc
dec
rcrl
mov
imul
out
add
pop
cmp
or
aaa
in
sbb
sbb
shl
lret
mov
lret
insb
inc
nop
dec
cmp
scas
sahf
sub
mov
xor
xor
cld
dec
or
aam
mov
push
xor
movsb
or
les
psrld
rcll
dec
jge
push
outsb
mov
sahf
and
mov
sbb
cltd
movsb
pop
aam
in
dec
cmpsb
mov
mov
push
cld
sbb
shr
inc
mov
insb
mov
loope
mov
inc
inc
xchg
hlt
in
or
jmp
cmpsb
mov
test
cmpsl
xchg
mov
cmpl
out
push
pop
mov
das
mov
js
add
jl
insb
jno
ret
scas
cmp
imul
mov
cmp
int3
lcall
rcl
das
bound
pop
jo
sbb
sahf
dec
stc
push
jp
aad
mov
sub
lods
cli
dec
test
or
imul
jp
loope
test
fisubs
insl
shrl
jmp
mov
jmp
dec
lea
pusha
push
and
sarb
insl
int
cs
lods
cs
test
nop
icebp
lock
pop
jge
repnz
adc
push
and
inc
cmc
popa
ds
sub
ja
jne
subb
xchg
ds
xor
dec
jle
mov
push
cmp
mov
imul
stos
sbb
adc
repnz
stos
sub
cwtl
add
clc
push
cmpsl
or
aas
icebp
fisttps
cmp
ja
pop
imul
mov
cmpsb
dec
or
push
cmp
icebp
lea
out
mov
jo
or
adc
adcl
mov
mov
stos
shrb
fimuls
sbb
movsl
filds
movsb
adc
popf
outsl
pushf
mov
test
add
jbe
inc
in
push
pop
cli
notb
clc
sbb
shl
adc
jno
es
pushf
lcall
jmp
mulb
cmp
std
xchg
mov
pusha
push
and
pop
frstor
pop
lret
mov
addr16
push
xlat
mov
in
sub
repnz
xor
out
mov
sbb
dec
mov
xchg
cmp
mov
jl
pushf
dec
pop
shrl
push
std
cs
jmp
xlat
mov
sub
jae
out
xchg
ljmp
jg
scas
and
xor
inc
data16
in
in
out
mov
out
pop
jne
bnd
sbb
addr16
les
in
pop
cltd
xor
insb
push
lahf
ret
sbb
stos
and
sbb
jg
ret
pop
out
push
mov
jg
mov
test
inc
pop
cmc
cmp
add
jle
push
xlat
push
stos
lods
scas
push
sub
jmp
jg
adc
repz
ret
fisubrs
or
and
add
outsb
pop
sub
sub
sbb
mov
daa
sbb
xor
pop
aaa
adc
fsubl
pusha
inc
in
std
js
in
movsl
js
push
imul
jae
and
sbb
lret
out
xor
inc
loopne
in
sti
xchg
ret
data16
push
adc
loop
jl
sti
or
mov
mov
cmp
sub
push
js
inc
pop
outsb
sbb
inc
sbb
dec
les
iret
add
push
test
xchg
mov
mov
cmp
mov
add
jnp
push
sub
lea
jne
sbbl
or
test
cmp
and
addl
test
imull
cwtl
popf
adcl
and
jle
jae
push
mov
jo
cwtl
nop
xor
push
fdivs
shll
fdiv
mov
in
mov
cmp
popa
mov
pop
repz
jp
mulb
inc
xlat
out
daa
sbb
sbbl
jge
fcompl
fwait
aas
mov
scas
and
cmp
popf
dec
addr16
test
roll
je
pop
inc
xlat
loop
shlb
pop
out
jb
movsb
jl
push
fs
ret
xor
jl
cmpsw
fwait
pop
and
xor
mov
scas
jno
add
movsl
daa
xchg
pop
ret
sti
pop
inc
aad
leave
fimuls
mov
and
scas
add
jp
inc
imul
insl
sbb
mov
mov
sub
dec
jo
cmp
pop
jbe
ret
pop
dec
cmp
sbb
mov
ret
mov
dec
adc
pop
aas
aas
mov
mov
jae
cmp
push
dec
jno
fsubl
mov
push
jae
fistl
out
pop
jp
mov
dec
push
lock
sub
pop
scas
loop
pop
loop
mov
inc
aas
fiadds
and
mov
sbb
pop
enter
cltd
sbb
push
mov
mov
cmp
dec
test
xchg
xor
repz
jns
lock
arpl
into
call
pop
inc
add
push
loopne
cwtl
pop
adc
imul
jmp
aas
add
inc
xor
push
jo
or
sub
mov
mov
lods
or
gs
int
jno
mov
ss
cmp
jnp
enter
loope
mov
inc
test
inc
inc
inc
inc
aas
mov
cld
or
aad
mov
sbb
lock
jbe
pop
mov
pusha
mov
rcrl
in
pop
pop
xor
lds
jne
call
iret
ja,pn
ret
dec
xchg
int
add
mov
imul
ret
sbb
dec
inc
movsl
les
inc
mov
testl
and
repnz
add
push
icebp
imul
pop
push
mov
fdivrp
fstpt
inc
adcl
jno
mov
pop
adc
jecxz
nop
fmul
movb
and
jle
loopne
dec
imul
and
pop
lret
ljmp
mov
or
mov
stos
lret
sbb
add
or
and
adc
stc
cltd
or
outsb
pop
test
andl
lds
mov
mov
popf
inc
repnz
cwtl
mulb
or
out
loope
aam
sub
mov
in
movsb
js
cmp
push
gs
loopne
ret
sub
lods
out
cmpsl
and
push
mov
inc
enter
lods
mov
push
nop
mov
fwait
ret
inc
mov
inc
inc
xchg
cmp
add
sbb
dec
daa
mov
mov
sbb
xor
push
add
xor
outsb
add
or
add
and
out
jo
aad
cwtl
jecxz
mov
movsl
shl
in
or
je
mov
inc
adc
jo
xchg
outsl
pop
gs
imul
push
cmpsb
into
inc
shl
lods
dec
pop
repnz
xrelease
addl
add
add
pop
idivl
cmp
outsb
inc
ljmp
mov
adc
aaa
xor
dec
add
and
push
and
adc
mov
hlt
movsl
dec
push
mov
dec
inc
lret
addb
sub
clc
cmp
adc
test
shrb
ds
pushf
cld
fsubr
shlb
lahf
mov
cltd
inc
dec
mov
pop
mov
je
int3
popa
imul
adc
loope
inc
fwait
les
mov
or
repz
xor
insb
adc
cld
in
ficomps
repnz
ljmp
fsts
mov
sub
or
sbb
lret
enter
mov
scas
fidivl
test
pop
jmp
rcll
xchg
adc
xchg
outsl
cli
mov
jle
neg
inc
push
hlt
shr
mov
sbb
stos
xor
or
lods
or
into
scas
inc
xchg
pop
push
mov
fiaddl
mov
push
dec
lock
jns
xorl
bnd
gs
add
and
mov
lds
push
and
add
jnp
pop
fmull
cmp
mov
adc
shl
sub
cmp
das
xchg
jne
clc
xor
shlb
mov
add
cmp
mov
mov
mov
lods
and
fisttps
subb
loope
dec
hlt
test
es
sub
xorb
pop
dec
decl
mov
adc
daa
add
shrb
cmpsl
rcl
pushf
mov
stos
adc
scas
inc
sti
out
adc
pusha
lds
push
imul
mov
lahf
pop
mov
scas
mov
in
movsl
sub
aaa
sbb
xchg
mov
dec
add
cmp
and
jle
mov
mov
jb
mov
mov
or
stos
fdivl
arpl
mov
push
insl
inc
fdivrl
mov
mov
mov
jecxz
fwait
xchg
movsl
mov
sub
in
movsl
push
nop
and
dec
lds
mov
hlt
inc
sub
cmpsl
mov
xor
adc
sbb
shrl
push
add
scas
fs
mov
scas
cld
push
es
jmp
mov
std
outsl
push
ja
add
mov
rcl
push
inc
aad
dec
or
leave
fcoml
pushl
jne
out
sbb
xor
mov
push
imul
aam
push
dec
push
sahf
jmp
popa
dec
mov
int
and
insl
inc
pop
hlt
sub
leave
mov
adc
xor
or
mov
out
xchg
mov
xlat
mov
fsubr
sub
mov
pop
pop
movsb
mov
mov
cmp
or
int
lret
inc
mov
mov
mov
xchg
mov
push
aad
lret
dec
mov
insl
cs
push
mov
fcoml
fistl
xor
xor
jne
cmp
sub
scas
mov
xor
jg
pop
mov
outsb
jo
sbb
sbb
sub
sbb
or
fdivr
and
xor
cmp
mov
fwait
add
aas
test
negl
insb
jl
push
sahf
xchg
daa
aam
in
mov
push
sbb
inc
mov
jecxz
cs
int3
mov
jmp
pop
subb
sahf
dec
arpl
cmp
push
xchg
mov
inc
mov
int3
notb
cmp
mov
addr16
push
call
jge
xchg
das
ljmp
ret
push
stc
mov
jbe
insl
xor
lods
mov
cmpsl
inc
pop
add
push
fisubrs
push
subl
scas
cmp
pop
sub
mov
test
inc
cs
out
inc
ficoms
jb
inc
int
scas
or
dec
pop
aaa
jo
adc
arpl
ret
push
aas
lea
fisttps
scas
repz
xchg
outsb
fisubrl
push
pop
push
hlt
ljmp
sbb
neg
cmpsl
sbb
rorl
mov
inc
inc
and
add
outsl
pop
push
cltd
fcomps
out
bound
push
mov
fs
push
mov
arpl
pop
daa
fdivr
test
xchg
ds
add
mov
xchg
jle
dec
nop
adc
fs
xlat
call
pop
ficoms
mov
aas
sbb
and
test
cwtl
ss
lock
std
data16
icebp
fcomp
xor
xchg
jecxz
jle
shrb
mov
sahf
dec
outsb
movsb
inc
mov
stc
inc
sub
call
frstor
add
fisttpll
pop
or
popf
adc
inc
jbe
mov
cmp
test
scas
adc
or
xor
xor
add
frstor
sti
cmp
rorl
into
cmp
stos
pop
jmp
pop
cmp
mov
jnp
in
sub
jno
and
mov
rcll
mov
mov
sahf
push
mov
shll
push
add
out
xchg
lcall
add
push
sbb
mov
adc
or
pop
lcall
sub
cs
imul
mov
aas
push
xchg
sub
xor
mov
pop
outsl
dec
sahf
add
mov
inc
in
lds
mov
pop
xor
fisttps
cmp
mov
mov
xchg
xchg
in
pusha
pop
or
sti
flds
fnsave
call
ficoml
filds
in
insl
or
nop
les
sti
sub
cmp
jl
push
adc
add
cli
ret
popf
mov
push
and
movsb
mov
notl
add
leave
loop
add
xchg
add
xchg
and
mov
hlt
dec
mov
and
add
xor
mov
negb
insl
lock
jb
out
aad
sub
xchg
call
xor
std
cmpsl
shlb
scas
mov
xchg
adc
push
cmp
arpl
sahf
gs
test
xchg
fldz
loopne
mov
push
inc
xchg
pop
movsb
dec
movsb
inc
popa
test
add
pushl
movsb
addr16
push
push
outsl
jle
ret
enter
or
push
dec
cld
mov
mov
jne
mov
mov
leave
sbbb
xlat
cmp
cwtl
cmp
test
std
jae
mov
jecxz
add
adc
or
js
loop
shll
dec
in
cmp
movq
adc
stos
lock
shll
stos
xor
roll
add
rorb
out
inc
jne
add
fdiv
mov
and
test
das
icebp
pusha
sbb
sbb
dec
adc
repnz
fcompl
scas
cmp
add
mov
push
jno
fwait
mov
cmp
fcom
test
call
ss
push
jecxz
cltd
or
and
push
ret
cli
stos
push
lea
pop
lcall
int3
push
loope
rcr
fidivs
ljmp
sub
out
nop
sub
call
incl
and
jo
dec
xchg
xchg
cmpsb
in
jl
addr16
or
pop
sbb
in
lods
xor
lock
inc
sub
sti
je
sbb
xchg
jle
call
sbb
adc
outsb
std
das
ficoml
jp
dec
js
jecxz
rcl
insl
or
add
lcall
mov
push
lods
mov
cmp
call
cli
ljmp
cmpsl
inc
stc
xchg
jns
jae
push
sbb
xor
sbb
insl
sbb
mov
pop
pop
jno
or
sub
sbbl
out
mov
mov
xchg
fildll
pop
lods
out
jne
dec
push
mov
insl
in
sbb
push
mov
cs
sub
mov
add
sahf
sbb
sub
lock
pop
xchg
and
cli
int3
mov
fsubrs
popf
mov
das
jle
jae
inc
push
ja
adc
movsl
aam
or
sub
decl
subl
popa
test
std
pop
cmpsl
mov
mov
inc
xchg
xor
popa
in
mov
inc
jae
dec
cwtl
lret
movsb
int3
je
push
cmp
subl
lds
out
mov
cmp
jns
sub
mov
or
popf
and
mov
cmp
je
mov
add
stos
out
or
xor
fsub
daa
addr16
rclb
cmpsl
or
pop
xchg
jo
pop
fcoms
gs
and
and
mov
fnstenv
adc
aaa
stos
jle
sbb
hlt
aad
nop
xchg
mov
and
add
adc
xor
add
outsl
mov
cmpsl
jle
pop
xor
rcrl
sahf
out
lcall
mov
pop
xor
sub
xorl
mov
loop
push
push
mov
sbb
jno
aad
pop
sub
clc
push
sub
mov
jl
jle
push
lcall
jge
jmp
cmp
sbb
andl
cmp
in
xchg
sbb
mov
cld
or
sub
dec
mov
leave
fldt
jns
xor
loopne
xchg
cmpsl
mov
pushf
repz
testl
push
sub
mov
popf
les
cwtl
ret
ljmp
nop
pop
dec
stc
add
push
mov
sbb
inc
jbe
imul
shll
or
arpl
xchg
or
add
xor
test
and
mov
imul
stos
pushf
dec
loope
adc
out
outsl
stos
addr16
lock
add
jge
cmpsb
xor
pop
test
dec
fiadds
outsb
mov
push
mov
test
mov
inc
cli
or
fnstsw
jp
shrb
mov
adcl
sbb
stos
jae
notl
imul
jb
and
push
popf
jno
sub
xchg
jbe
incb
lret
subb
jmp
sti
xchg
faddl
push
dec
lahf
fimuls
dec
adc
loop
aas
cmpsb
push
xchg
sbb
push
rcll
mov
cmp
cli
lahf
mov
rolb
jnp
gs
mov
push
jmp
call
stc
out
cmp
loope
in
sbb
add
out
repz
pop
nop
addb
jno
mov
sar
or
mov
cmc
imul
add
add
add
pop
cmpsb
xchg
scas
cld
sub
sbb
test
loope
sahf
nop
inc
outsb
rclb
jle
jmp
add
cmp
pop
addr16
and
aaa
xor
fimull
jle
mov
jl
cs
xchg
push
adc
fidivrs
xchg
pop
fsub
inc
enter
mov
stc
sahf
add
or
adc
icebp
fprem1
adc
push
mov
aas
rcl
push
dec
sarb
mov
ljmp
xor
xor
addl
into
dec
ret
xchg
pushf
and
sub
or
xchg
xchg
dec
out
xor
lods
incb
int
int3
jb
jno
mov
xor
ficoms
in
xchg
insl
scas
xchg
sub
lret
inc
out
std
outsl
imul
stos
xchg
ret
mov
lret
pop
push
aam
xor
cmp
dec
mov
sub
dec
jns
cld
out
ret
jg
or
subb
sbb
iret
das
xor
mov
mov
inc
or
mov
push
inc
call
jne
and
jecxz
cmp
pop
sbb
xchg
mov
movsb
loop
scas
xchg
xor
test
or
pop
ss
sti
cmp
dec
cld
and
jb
and
jle
cs
cmp
loop
cmp
jne
cmp
mov
inc
leave
jl
add
adc
cwtl
stos
loope
fbstp
pop
jmp
add
in
nop
or
mov
outsl
movsl
mov
ds
icebp
jg
out
cmpsl
out
pop
nop
hlt
cwtl
cmc
je
lods
jecxz
mov
js
jp
dec
scas
mov
inc
xchg
push
or
test
push
sbb
movsb
loope
and
iret
pop
adc
add
out
xchg
mov
jno
add
ds
push
mov
mov
push
hlt
fisubrl
out
mov
out
pop
jbe
lret
mov
idivb
in
faddl
cmpsl
jge
xchg
add
sti
and
arpl
loope
rcr
rorl
jg
adc
out
xlat
sub
mov
jmp
mov
push
cs
xchg
xchg
jb
testb
mov
fisubrs
lods
xchg
push
out
jb
bswap
jecxz
or
stos
outsl
js
mov
hlt
gs
xchg
in
and
push
scas
cmc
and
cmpsb
jp
popl
jnp
or
push
mov
jmp
fisubl
cmp
sbb
mov
xor
lcall
xlat
dec
testl
sbb
xchg
imul
ret
pop
dec
and
inc
es
mov
rorl
push
add
jne
cmp
ret
mov
jg
add
cwtl
or
sbb
pop
mov
mov
dec
add
fisubs
mov
dec
mov
adc
pop
fisubl
divb
jg
sub
outsl
stos
cmp
gs
fldenv
inc
fnstsw
sbb
inc
aas
adc
or
lret
enter
scas
repz
adc
pop
dec
xorb
jle
insl
lds
add
mov
call
hlt
pop
mov
stos
xchg
adc
lea
jbe
and
push
pop
xlat
push
addr16
in
xchg
xchg
ja
mov
popf
and
cmc
aam
loop
sbb
jle
jno
shll
inc
mov
cmp
mov
and
pop
pop
shlb
adc
dec
add
mov
xor
jb
filds
jne
popl
mov
pusha
jecxz
dec
cmp
hlt
ret
mov
lods
jmp
adcl
out
and
pushf
cwtl
mov
imul
ljmp
inc
xor
test
aas
cwtl
in
mov
sbb
jne
and
push
mov
pop
aaa
clc
cmp
add
inc
outsl
loop
push
fldcw
in
ja
ret
inc
imul
lods
ds
dec
ds
dec
fcmove
cltd
cmpsl
adc
mov
sbb
mov
add
fsubrl
das
jae
mov
rorl
or
mov
or
jno
or
nop
arpl
dec
or
jno
push
adc
incl
insb
mov
pop
rolb
jb
mov
or
test
mov
jae
xchg
movsl
xchg
add
clc
mov
sti
shll
fadd
les
add
sub
sub
cmpsl
push
dec
movsl
cli
and
mov
xor
mov
stc
cmc
push
jg
in
cmpsl
mov
pop
xchg
lahf
das
paddsw
fwait
and
fs
mov
out
adc
jmp
inc
and
adc
push
lds
cmc
mov
test
popa
push
mov
ficomps
and
push
ja
std
mov
adc
mov
ss
rcrl
inc
sub
push
sub
int
xor
sbb
call
hlt
aas
dec
shl
cwtl
pop
xchg
cmc
lahf
xchg
xchg
inc
fucomi
mov
push
cmpsb
jg
sub
dec
insb
cli
outsl
cwtl
iret
add
das
insl
icebp
cmp
mov
cmpsl
xor
jno
fstps
data16
outsl
xlat
pop
pushf
nop
mov
mov
lahf
es
loop
test
mov
call
movsl
test
sarl
jle
jbe
ficoml
jae
push
pop
mov
aam
xchg
inc
push
xchg
shrb
nop
cld
faddp
addr16
scas
bound
fcomp
fdivrs
mov
xor
dec
repz
dec
mov
jnp
mov
lds
or
adc
jne
sub
js
outsl
stos
push
stos
or
cmp
sub
loop
gs
cs
mov
es
push
pop
add
arpl
test
pushf
mov
pushfw
sub
test
imull
cwtl
enter
pop
adc
cmpsl
sbb
lcall
pop
enter
stos
test
adc
test
xchg
xchg
out
stc
test
or
rcrb
pop
mov
in
cmc
mov
shll
inc
xchg
inc
js
repnz
test
cpuid
or
inc
mov
adc
jmp
dec
out
jp
xor
jle
cmp
cmp
dec
popf
fsubp
xor
popf
jge
addr16
mov
lcall
movsb
pop
xor
push
mov
loop
or
imul
inc
popf
add
and
fldl
mov
mov
xchg
cmp
repnz
push
add
pusha
jns
push
repz
aad
sbbb
dec
fs
loope
pop
adc
and
dec
out
adc
mov
out
js
shrl
shlb
jp
mov
test
push
or
mov
xchg
cwtl
and
sub
fnstsw
push
enter
mov
sbb
shl
and
mov
add
and
dec
mov
bound
sub
cmp
xchg
loope
sub
cmp
test
ss
pop
sub
inc
not
jp
fwait
xor
pushf
movsb
push
leave
push
incl
push
pushf
pop
iret
popf
xor
stos
adc
sbb
or
test
rcrb
and
mov
lsl
stos
xor
aaa
test
test
aaa
sahf
movsb
or
leave
imull
cmp
iret
sbb
push
ss
lock
mov
push
mov
jl
outsb
mov
mov
icebp
lods
add
jbe
and
mov
push
xchg
sub
mov
dec
popf
adc
dec
data16
shrb
cmpsl
das
adc
xchg
xchg
dec
and
sbb
fsts
cmpsb
cwtl
das
dec
shll
enter
dec
out
out
test
sub
jns
mov
push
imul
mov
sub
jg
jne
leave
nop
fidivrs
ret
inc
sbb
aaa
dec
lcall
pop
mov
push
or
pop
mov
cwtl
xor
sub
into
jmp
movsb
daa
or
pop
inc
add
inc
movsl
jl
mov
mov
mov
mov
mov
mov
clc
pop
or
js
popa
xchg
pop
sbb
lcall
vsqrtps
bound
arpl
cmpsl
sti
push
cmp
jo
mov
xchg
xor
jae
fsubl
dec
imul
icebp
adc
and
dec
imul
iret
adc
lds
shrb
adc
cs
out
push
jae
or
shr
fstp
cs
shr
inc
pop
mov
inc
inc
neg
xchg
fisubrs
fistps
adc
add
outsb
stos
dec
mov
pusha
test
mov
push
and
or
jmp
cmp
or
test
adc
jo
mov
inc
int3
iret
je
pop
insl
xlat
mov
or
shrl
dec
stos
fcompl
xor
push
add
test
pop
pop
cli
adcb
inc
add
mov
loope
clc
xorb
mov
arpl
js
pop
mov
mov
js
add
data16
aas
sbb
sbb
das
jle
inc
rcr
in
push
aam
xor
add
dec
cmp
mov
mov
jl
push
cmp
adc
add
cmpb
aaa
xchg
in
faddl
xor
mov
cmp
cmp
adc
and
add
jae
sub
mov
sahf
mov
sub
xor
mov
out
enter
out
mov
xor
lods
jp
test
leave
mov
mov
popa
mov
leave
stos
mov
addb
cmp
aad
mov
mov
mov
push
jge
aam
enter
insb
pusha
hlt
cmp
lods
add
int
test
cs
mov
imul
roll
dec
inc
shl
dec
jne
pop
insl
jmp
les
subb
push
pop
or
dec
dec
in
divb
jmp
jp
sbbb
sub
sbbb
mov
inc
mov
cmpsb
sub
mov
inc
insb
cmp
mov
dec
jne
adc
pop
fbld
dec
jg
mov
xchg
mov
cwtl
pop
cmc
shll
adc
addb
lret
ret
adc
es
inc
ret
pop
dec
nop
stc
imull
xor
jmp
add
or
shlb
inc
std
xor
pop
mov
outsl
dec
sti
popf
lods
fcompl
inc
in
addl
in
cmp
sbb
mov
mov
xchg
les
jo
push
outsl
dec
rcrb
int3
jmp
addr16
add
lcall
pop
pop
or
stc
mov
adc
std
rcrl
xor
mov
cmp
xchg
test
dec
xor
lods
cmpsl
and
out
mov
xchg
mov
jno
adc
cli
fimull
std
popa
push
pushf
mov
ljmp
stc
sub
lcall
cmp
cli
pusha
cmp
fsts
mov
loop
ficoms
dec
mov
mov
jmp
add
ds
stc
xchg
inc
out
test
mov
sbb
mov
clc
mov
mov
cli
insb
sub
hlt
and
loope
jle
dec
push
xlat
lret
aaa
int3
push
jns
lock
popa
adc
jg
out
lods
out
sbb
mov
cmp
mov
push
dec
shl
std
addr16
inc
stc
add
pop
outsl
push
mov
ds
ljmp
xor
mov
sahf
aad
fcompl
push
adc
dec
rolb
or
ljmp
mov
xor
xchg
and
jae
insl
movsb
jp
lret
out
outsb
push
push
sub
sbb
sarb
popa
xchg
jbe
sbb
or
pusha
jg
mov
adc
or
ljmp
loopne
xchg
dec
adc
ljmp
hlt
cld
stc
in
movhps
push
les
jno
mov
mov
dec
mov
outsb
fsts
cwtl
and
mov
push
mov
and
jp
mov
jg
movb
adc
xchg
lret
or
and
iret
inc
pop
fdivrl
xchg
outsb
adc
jbe
pop
xchg
iret
imul
push
push
int
mov
xor
ljmp
dec
dec
cld
sbb
mov
mulb
pop
call
dec
sti
scas
mov
sbb
pop
enter
and
sbb
mov
sbb
sahf
push
lcall
jle
cmp
in
mov
ds
lea
inc
adc
jmp
sti
mov
fnstcw
inc
dec
mov
sbb
shll
gs
add
ret
cld
jl
cld
mov
push
mov
lret
jae
fadd
aaa
sub
movsl
out
add
test
xchg
data16
fcmovne
outsl
aaa
and
cmpsb
in
sbb
out
daa
sbb
ja
hlt
aaa
inc
mov
mov
outsb
and
jge
fildl
call
pop
rcrl
fwait
push
fwait
int
test
adc
imul
js
jo
outsb
insl
or
mov
mov
loope
cs
adc
rolb
imul
ret
add
fdivrl
xor
repz
push
or
loop
and
lds
jp
push
jo
sarb
jo
jg
mov
lds
call
xchg
popa
sub
push
and
mov
sti
cmp
testb
cmp
test
sub
shll
rclb
jne
dec
or
mov
mov
stos
addr16
movsb
into
movsl
lds
lea
pop
pop
out
adc
jns
in
int3
cmp
cmp
popa
xor
jle
scas
fisttpl
cmp
loop
push
and
xor
push
ret
mov
stos
xor
jl
inc
jo
js
fstpt
es
push
and
jb
push
pop
adc
pop
out
dec
dec
aas
mov
cltd
mov
outsl
mov
out
xlat
stos
je
add
mov
cwtl
mov
cwtl
cmp
movsb
nop
mov
mov
addr16
test
popf
mov
pop
jnp
xlat
les
ret
mov
mov
cmp
jg
dec
push
push
stc
sbb
addr16
and
fdivr
cltd
pop
sti
push
divb
fmull
movsl
leave
inc
jge
pop
adc
call
fnsave
jl
jg
jmp
mov
jne
iret
adc
cmp
xchg
mov
in
add
push
ds
js
pusha
out
sbb
or
cwtl
mull
shrl
sbb
adc
mov
mov
add
mov
jmp
push
sbb
mov
testl
rcl
push
lods
lods
xor
jp
lret
in
lock
inc
inc
fxam
mov
aad
xor
imul
stc
pop
cmpsb
push
daa
fadds
into
iret
in
popl
and
movsb
xor
dec
mov
inc
movsl
out
std
test
mul
push
fs
bound
in
pop
xor
cmp
sub
cmpsb
insl
push
insb
adc
mov
incl
leave
loop
sahf
je
pop
sbb
hlt
popa
sub
rcrb
ljmp
cmp
in
adc
sbbl
add
cld
or
mov
ljmp
jno
xchg
mov
pop
mov
lock
inc
stos
movsb
hlt
movsb
ljmp
mov
or
repz
jmp
dec
test
clc
jno
dec
inc
and
imul
mov
cs
or
jl
and
ret
mov
xor
test
sarl
mov
shlb
add
mov
pop
mov
in
lret
dec
pop
orb
das
mulb
popa
pop
sbb
popa
cmp
mov
push
sti
pop
testl
stos
pusha
mov
stc
dec
and
mov
mov
pop
xchg
out
ja
push
jns
push
pop
mov
ret
jmp
int
jp
sahf
das
test
cmp
test
mov
and
add
test
cmp
les
imul
sub
pop
int3
or
stos
dec
cld
jge
arpl
cmc
shlb
inc
cmpsb
sub
xor
jo
pop
cmp
fisttpl
mov
fistps
jo
out
pop
cmc
add
shlb
adc
imull
push
xchg
add
lcall
cmp
push
test
sub
cmpsl
push
jmp
andb
cmp
out
mov
stos
xor
xchg
sub
aaa
jns
sub
sbb
cli
cmpsb
out
push
mov
mov
inc
in
mov
or
fidivrs
xchg
sbb
andb
and
push
mov
dec
mov
cs
or
out
or
ljmp
push
shl
pusha
fistpll
push
pop
inc
popa
mov
add
lods
inc
repz
inc
test
lods
add
cmpl
gs
mov
lahf
push
sbb
sarl
adc
push
push
mov
pop
imull
imul
mov
jbe
aaa
xor
repnz
enter
adc
lahf
imul
mov
pop
jb
xchg
jl
imul
ljmp
nop
out
rclb
into
cmp
mov
and
in
sbb
clc
inc
jno
unpckhps
inc
sti
and
mov
lods
cmp
stos
lcall
sti
cwtl
std
jecxz
out
add
shrb
pop
scas
jo
inc
cmp
push
mov
pop
shll
mov
loope
mov
push
mov
or
sub
cmp
daa
mov
loop
and
xor
pop
pop
repnz
out
rorb
jns
out
and
pop
inc
sarl
andb
dec
adc
jmp
dec
jle
pop
sbb
sbb
mov
adc
mov
decl
add
mull
and
xchg
push
cs
jns
pop
mov
sahf
imul
xchg
shll
mov
jnp
ret
pop
test
bound
int3
or
cs
adc
test
jo
pop
inc
xlat
xchg
jg
xor
or
adc
cmp
add
lahf
xor
lea
sahf
sbb
push
jl
fisttps
ret
nop
cmp
loopne
sbb
nop
inc
inc
fimull
cmp
insb
inc
lods
cs
outsb
sbb
push
push
in
push
jg
mov
pop
subl
test
sub
adc
dec
lods
mov
jne
aam
xchg
inc
loopne
movsb
data16
xor
push
fst
cmp
lahf
inc
test
idiv
mov
insl
nop
jle
dec
shlb
jmp
push
and
fisubs
xchg
sbb
mov
daa
or
and
enter
mov
mov
int3
int3
push
jae
cmp
icebp
push
xchg
xchg
repz
dec
sahf
idivb
ljmp
sub
push
bound
gs
push
inc
pop
adc
jno
test
inc
dec
cwtl
mov
pop
xor
xor
mov
pop
ja
inc
push
scas
cmp
aam
cmp
adc
push
out
mov
loop
jae
movd
data16
push
ret
movsb
out
xor
fs
ljmp
xor
sbb
fmull
fisubrs
cld
std
subb
mov
cmpsl
xchg
iret
inc
inc
mov
mov
dec
xchg
xor
lret
mov
test
sbb
sti
sti
xor
aas
orb
cwtl
xor
jl
lret
mov
movsl
das
icebp
cmpsl
sub
enter
dec
stos
scas
and
cmp
lcall
cmp
insl
test
and
scas
ja
dec
jnp
stos
popl
vmovapd
and
xor
das
out
icebp
mov
pop
sub
adc
xchg
pusha
mov
fnstsw
or
cwtl
adc
mov
mov
mov
sbb
or
jle
push
sbb
enter
inc
xlat
cmp
jecxz
fisubrs
jae
jnp
jbe
aaa
push
mov
dec
rorb
push
in
adc
and
cmc
inc
or
cmpsl
cwtl
popf
sub
into
lret
repnz
sub
test
mov
mov
movsl
ret
and
outsl
in
fidivrl
test
rolb
and
cs
rol
adc
add
dec
mov
pop
sub
inc
rcl
inc
push
xor
push
loop
xchg
mov
mov
jge
or
mov
ret
xchg
inc
clc
mov
and
or
xor
stc
aam
jns
testl
sbb
pushf
movaps
ret
xchg
fcom
push
fmuls
out
jecxz
jb
stc
mov
sahf
test
dec
loope
ds
bound
pop
inc
clc
inc
sti
out
pop
pop
stos
orb
push
mov
in
xor
jb
scas
xor
add
jecxz
xor
lea
mov
not
xchg
mov
push
insb
pusha
jp
pop
or
push
push
cmpsb
popf
push
adc
mov
mov
sbb
push
dec
cmpsb
jo
sbb
out
lock
iret
mov
jae
es
mov
js
add
cmpsb
test
sub
stos
std
nop
dec
stos
lret
repz
adcl
cmp
xchg
mov
and
sbb
rorb
stos
fcmovnbe
fs
stc
outsb
test
fidivl
dec
gs
mov
sub
mov
dec
mov
pushf
mov
test
rorl
clc
jns
and
jmpw
int3
dec
push
lods
inc
pop
pop
faddl
test
and
sahf
mov
dec
push
outsb
xor
lahf
in
insl
xor
aaa
bound
rcrl
insl
ficoms
mov
or
cltd
in
add
mov
iret
xchg
mov
jl
sub
ss
dec
stos
sarl
in
inc
es
dec
lcall
lock
mov
xchg
push
jmp
js
dec
or
mov
adc
push
fmull
inc
fcmovne
inc
or
and
int
das
add
subb
mov
adc
lods
fs
sarl
mov
cwtl
loope
push
jg
mov
cmp
daa
pop
mov
jae
dec
xlat
call
sbb
outsb
sub
and
aad
ficompl
arpl
pop
sahf
sub
dec
mov
leave
stos
mov
lea
lret
mov
movsb
or
loop
lret
lret
fistl
es
in
dec
xchg
imul
int3
inc
mov
cmp
les
push
mov
aaa
shll
add
testl
out
ret
stos
stc
fildll
sbb
sbb
cmpsb
fldl
lcall
mov
or
xchg
dec
xchg
xor
pop
leave
lahf
pushl
cmp
add
push
jnp
lods
sarb
fstl
push
xchg
jge
movsb
sub
push
stos
imul
inc
or
movsl
pop
ficoml
sbb
or
mov
sub
pop
loopne
sub
les
mov
and
pop
xchg
lret
mov
js
inc
mov
or
cmpsl
inc
js
clc
int
mov
out
repnz
sbb
cmp
setg
push
xor
daa
xchg
lret
cwtl
sarl
imul
inc
out
jae
repnz
lods
pop
in
sbb
cmp
arpl
adc
sbb
scas
inc
lea
lahf
jge
inc
jle
mov
shll
pop
dec
xchg
ja
mov
in
pop
fucomi
jg
jb
pop
mov
push
cmp
rorl
jecxz
jmp
push
pop
sbb
out
outsb
add
bound
mov
enter
mov
jae
sbb
cmp
xchg
out
mov
mov
es
imul
mov
hlt
mov
out
jo
neg
mov
xorb
std
and
jge
or
shrl
iret
sbb
cmp
stc
push
gs
and
mov
mov
mov
sub
mov
test
fidivrs
adc
lock
test
cmp
sarb
bound
mov
cmp
pushf
iret
out
add
mov
mov
mov
xor
rep
jnp
test
jmp
jns
adc
aas
and
cli
mov
lret
stos
mov
xchg
sbbb
inc
faddl
xchg
cmp
scas
daa
mov
pop
dec
push
dec
pusha
sub
cmc
or
ja
into
mov
test
cli
cmc
fs
mov
pop
pusha
jmp
xor
xor
scas
xchg
sub
stos
and
ljmp
sarb
push
jo
sub
pop
inc
lcall
insl
xchg
hlt
dec
repnz
pushf
xor
pop
cmp
jnp
push
movsb
dec
inc
popa
sub
mov
xchg
add
push
sarb
xchg
mov
sbb
insl
mov
js
pop
pop
out
lahf
fwait
pop
dec
mov
sub
cld
inc
scas
xor
push
sub
mov
jbe
push
imulb
test
cmpsb
mov
jmp
pop
mov
cmp
add
xor
push
mov
dec
loope
stos
inc
xchg
es
mov
sub
jno
xor
dec
lods
push
lret
fistpll
mov
lds
jg
add
jle
push
addl
xor
aad
dec
movsb
mov
cmp
enter
aas
adc
and
out
pop
popf
mov
push
adc
sub
xor
mov
jg
mov
sub
add
or
push
mov
push
cmp
outsl
outsb
je
lods
xchg
push
movq
cmp
in
jecxz
sbb
sbb
fsub
lds
jo
mov
rcl
mov
cmpb
cmp
xor
dec
xor
sbb
hlt
inc
and
jmp
test
mov
aas
jp
xchg
cwtl
loop
subb
dec
shll
mov
and
cmp
sub
or
stos
stos
in
in
mov
and
lods
adc
bound
dec
insl
push
sbb
mov
subb
xchg
push
pop
divb
iret
leave
xor
push
sub
test
or
mov
mov
jnp
cmp
push
pop
imul
fstpt
jae
jbe
adc
daa
scas
pop
iret
sbb
es
stos
mov
pop
popa
xor
mov
jp
xlat
jb
cld
xor
mov
fldl2t
ret
shrb
inc
push
mov
jmp
fucomi
lds
js
iret
or
mov
sub
pop
add
add
movsb
mov
mov
leave
pop
mov
fisubl
xchg
adc
ret
sbb
clc
pop
sub
mov
or
mov
stc
mov
insb
shlb
inc
adc
xlat
aaa
clc
popf
or
shlb
pop
xor
push
add
xchg
mov
lcall
pop
dec
shll
fisttpll
std
pushf
in
enter
cmp
lods
in
add
sbbl
mov
push
inc
push
out
push
cmp
shll
mov
test
es
cmpsb
inc
or
pop
xchg
pop
mov
mov
js
add
lock
dec
sub
stc
jge
aad
out
les
push
sbb
sbb
pop
jbe
xor
scas
sbb
cmp
and
add
sub
sub
lods
movsl
or
loope
mov
int
xor
subb
fldl
inc
xor
jnp
inc
out
jle
insb
add
repz
ja
sbb
sub
clc
test
add
mov
xchg
push
test
das
push
fwait
push
cmc
addr16
xlat
out
mov
movsl
xor
push
inc
dec
int
cli
ja
repz
rcrb
scas
gs
insl
lea
mov
xor
xchg
or
pushf
xor
loope
jns
out
lahf
pop
mov
inc
sub
inc
xchg
ret
push
jae
xchg
ja
andl
xor
inc
ret
daa
int3
pop
subl
clc
shll
sbb
push
sbb
mov
test
cld
and
pop
inc
dec
aas
cmc
shl
or
cmp
dec
cmp
or
fimuls
pop
movsb
fstps
jne
les
jbe
and
lods
sbb
pop
stos
or
push
testl
sbb
fcom
incb
loop
insb
adc
pop
mov
cltd
ljmp
mov
dec
ds
sub
popl
cld
pop
imul
std
insl
jg
pop
or
rcll
pop
fxch
es
insb
push
inc
int3
push
loope
shrb
mov
dec
ljmp
outsl
mov
outsl
pop
pop
adc
mov
cmp
out
fisttpl
nop
aas
hlt
dec
sub
sbb
outsl
ret
push
push
mov
imul
xchg
or
add
add
cmp
dec
push
push
sbb
push
es
pop
lods
jbe
mov
rorb
xorb
aam
shlb
ret
mov
mov
jns
cltd
test
icebp
inc
in
out
cltd
or
imul
xchg
jno
mov
push
push
gs
xchg
mov
push
mov
lods
xchg
shr
bound
pop
pop
movsb
sahf
scas
fstpt
out
mov
jmp
sbb
and
jno
ret
movsb
mov
shr
mov
ds
pop
mov
push
sarb
popl
xchg
xchg
cmp
adcl
xchg
xchg
lret
test
xchg
push
jg
stc
sar
mov
adc
and
dec
mov
cltd
sub
pop
mov
adc
je
movsl
and
shll
jge
cwtl
sub
sarl
leave
sub
pop
fdivrs
push
stc
lcall
shll
cmp
movsb
in
repnz
lcall
loope
sub
pop
xor
in
stos
rorb
adc
jbe
ss
push
and
push
scas
xchg
pop
in
mov
popa
ss
adc
jns
mov
jmp
test
ljmp
fnsave
lret
lods
mov
sub
mov
xchg
popf
test
ds
sub
push
push
jnp
mull
stc
jno
jns
jp
call
ljmp
inc
iret
loopne
lds
movsb
call
jcxz
cmpsb
or
adc
fidivrs
inc
leave
pop
sbb
ret
cmc
pop
or
fs
orl
call
jmp
outsb
fisubrs
outsb
cmp
lods
xchg
stos
push
or
mov
jo
jbe
xchg
mov
add
xchg
testl
test
push
lods
pop
mov
xorb
sub
sahf
int3
pop
add
xlat
cmp
dec
mov
or
xchg
jmp
inc
shll
je
cmp
pop
shlb
stos
add
aaa
lock
dec
lahf
xor
in
pop
in
cmp
xchg
insb
imul
or
or
test
mov
push
pop
std
inc
inc
adc
das
add
aam
lods
and
fcompl
jb
xchg
inc
inc
adc
dec
outsb
icebp
push
mov
cmc
test
xchg
mov
adc
push
push
cmpsb
rcrl
inc
adc
movsl
pop
xchg
mov
mov
js
push
or
sub
subl
push
ja
adc
jmp
push
cli
je
ret
cmp
jne
xor
movsl
mov
jbe
pop
xor
aas
jge
sbb
imulb
cmp
addb
std
xchg
pop
in
cli
inc
ds
xlat
mov
push
pushf
xorl
inc
jno
gs
dec
les
call
lods
clc
inc
jae
sbb
mov
jae
jg
mov
fwait
adc
push
lret
cmp
push
test
pop
dec
mov
push
cmp
jno
lods
out
add
sub
pop
xchg
mov
adc
dec
lahf
enter
sbb
ret
inc
rclb
sbb
fdivs
mov
add
push
data16
cwtl
mov
mov
jno
sub
inc
stc
mov
dec
adc
stos
inc
push
daa
mov
inc
fucom
int
mov
iret
imul
stc
sub
cbtw
jns
mov
push
or
fimuls
rolb
or
test
fwait
jno
cmpsl
inc
cld
xor
popf
sub
fdivrl
je
sbb
cmp
aam
fsubl
int3
ljmp
push
and
pop
fistpll
call
jno
cmp
sub
ljmp
scas
dec
xchg
imul
sub
cmp
test
lock
jle
loopne
push
loop
sbb
iret
adc
or
sahf
lret
push
sub
data16
jecxz
rolb
push
adc
stc
pop
mov
rorl
in
sub
jg
push
lahf
fwait
stos
mov
pop
fdivrs
push
icebp
jmp
sub
adc
sbb
jb
ds
push
std
pop
mov
and
adc
adc
bound
std
fcmovbe
das
xchg
pop
push
jmp
roll
push
jecxz
fimull
mov
push
lock
imull
outsl
push
cmp
hlt
ret
sbbb
and
fistpl
call
push
mov
sub
sbb
fistl
xor
xor
sti
in
aam
jns
imul
test
movsl
movsl
adc
inc
push
popf
push
incl
sub
and
insb
insb
imul
and
add
add
lock
add
jbe
add
jnp
add
dec
add
mov
adc
add
add
add
add
or
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
