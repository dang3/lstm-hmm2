and
add
push
add
cmp
add
dec
push
add
bound
add
add
jle
add
nop
push
add
mov
push
add
mov
push
add
call
push
add
or
push
add
aas
push
add
pop
push
add
jge
add
cwtl
push
add
cmpsl
push
add
mov
push
add
out
push
add
add
add
push
add
and
add
add
dec
push
add
bound
add
add
mov
add
push
add
ret
push
add
rclb
add
push
add
push
add
adc
add
push
add
cmp
add
add
push
add
add
add
adc
add
push
add
or
adc
add
push
add
pop
push
add
mov
add
dec
mov
add
inc
movzbl
xor
lea
mov
mov
add
mov
add
dec
movzbl
add
add
add
lea
imul
and
inc
dec
movzbl
inc
inc
xor
or
lea
inc
imul
dec
sub
add
inc
add
lea
mov
dec
sub
dec
jne
sub
mov
inc
add
pop
lea
imul
pop
dec
dec
pop
add
dec
xor
lea
mov
dec
inc
inc
sub
or
lea
add
ret
push
mov
inc
dec
add
inc
and
lea
movzwl
push
push
push
push
dec
inc
dec
push
dec
and
lea
mov
inc
dec
inc
add
add
mov
lea
push
mov
add
xor
sub
sub
push
inc
sub
push
lea
mov
pushl
dec
call
inc
add
add
add
xor
lea
mov
dec
dec
pop
ret
pushf
mov
xor
sub
adc
jl
cmpsl
dec
cmp
cmp
jle
hlt
jne
movsb
mov
fwait
daa
inc
pop
rcl
repnz
inc
scas
jae
xchg
jge
add
ret
popa
dec
xor
and
je
xchg
jle
aas
cltd
dec
adc
push
mov
sub
push
inc
leave
cmpsb
pop
stos
and
test
movsl
mov
shrl
pop
ret
int
aaa
dec
adc
int3
adc
loopne
pop
mov
mov
and
push
repnz
test
into
jno
in
hlt
pshufw
imul
or
scas
pop
xchg
cld
or
sbb
addr16
je
mov
jmp
jo
sbbl
xlat
addb
lea
loop
bnd
ljmp
bound
lock
ja
pop
ja
out
sti
je
mov
in
rcrl
mov
mov
aad
roll
xchg
xor
outsl
push
inc
add
pop
es
xor
mov
mov
sbb
mulb
cmp
test
inc
add
mov
add
lret
mov
xlat
leave
lcall
sbb
mov
jmp
sub
test
out
jnp
mov
cmpsl
mov
fsubs
add
leave
mov
adc
movsb
int
pop
sbb
out
ror
xor
jb
jb
pop
popf
inc
lret
sti
call
aad
jno,pn
aas
mov
sub
test
stc
pop
adc
jg
mov
mov
jo
and
cmp
into
loope
lret
or
jbe
mov
mov
mov
out
or
jb
lahf
fdivl
mov
test
pushf
fs
xorb
std
insb
and
nop
inc
fisubs
xlat
popa
sub
push
pop
add
not
dec
cmp
lcall
xchg
jae
push
in
ds
out
push
add
push
fs
data16
adc
sar
movsb
call
enter
sub
cmp
gs
mov
repz
xchg
movsl
lcall
movsl
bound
mov
jmp
xor
xor
stos
mov
xchg
js
mov
sar
fldenv
sbb
sub
test
test
cmp
flds
stos
adc
fisttpl
mov
packsswb
push
test
cmc
inc
sub
adc
pop
ja
push
data16
adc
sbb
int3
rcr
sbb
lea
push
cmp
mov
test
stos
addr16
and
cmc
orb
les
jge
jecxz
xchg
sarl
sub
mov
fildll
mov
insb
lock
pop
pushl
aaa
xor
adc
push
and
inc
mov
arpl
movsb
addb
add
cmp
imul
jmp
xor
shlb
xchg
daa
iret
loope
scas
xchg
push
fidivrs
packuswb
ds
insb
andb
insb
xlat
mov
xchg
gs
andl
ds
sub
out
sahf
fs
jne
in
dec
ljmp
insl
mov
inc
dec
pushf
sub
dec
rclb
hlt
ljmp
mov
ss
xor
add
jge
sub
pop
int
rorl
iret
das
loope
add
adc
ja
xchg
loope
idivb
sbb
jb
aam
pop
mov
pop
loopne
cli
mov
inc
sbb
push
xchg
testl
enter
decb
leave
movsb
mov
lods
sub
ret
dec
mov
dec
nop
test
mov
pop
push
cmpsl
sbb
std
popa
sbb
shrl
adc
jmp
jge
jb
fs
lcall
into
xchg
ljmp
rcl
insl
cltd
jle
das
cmp
xchg
mov
bnd
stos
and
dec
and
jo
adc
in
push
push
loope
aad
dec
call
add
sub
xchg
fmuls
leave
push
pop
daa
test
or
cs
out
fs
cli
sbb
adc
mov
mov
mov
orb
aam
shrl
push
cmpsl
idivl
dec
pop
lds
cs
scas
imul
scas
mov
orps
lcall
cmp
rcll
jno
aam
dec
rcrl
scas
adc
sub
inc
sbb
ljmp
ret
inc
xorl
or
adc
xchg
imul
aad
outsl
push
xchg
sub
movsl
mov
scas
ja
insb
push
stc
bnd
xchg
jae
lahf
cltd
cltd
mov
jns
xlat
movsb
fisubl
lods
lods
adc
in
shrl
add
or
sub
fcomps
add
pop
mov
mov
call
shlb
cmpsb
subb
lretw
int
ds
cmc
xchg
popa
sub
aas
movb
hlt
andb
sbb
dec
rcll
sub
clc
mov
or
pop
sbb
aaa
pop
mov
adc
insl
in
movsl
inc
clc
push
adc
mov
cmp
rorl
ss
movsb
xchg
mov
std
outsb
std
push
and
pop
cs
outsb
mov
mov
test
popa
mov
ret
dec
cmpsl
fmull
jge
ds
outsb
add
mov
push
cmpsl
jnp
inc
pop
pop
xchg
out
divb
inc
mov
mov
test
mov
mov
push
shlb
adcl
adc
popa
cmpsl
enter
mov
aad
icebp
ja
pop
cmc
or
adc
test
js
push
mov
and
jns
hlt
pop
jb,pt
xchg
in
mov
fidivs
lahf
jle
jl
push
inc
dec
es
lods
call
dec
mov
ret
call
rcr
mov
sub
mov
mov
addb
std
jae
pushf
add
inc
addr16
bound
enter
ret
mov
inc
mov
movsl
inc
sti
cmpsl
mov
in
in
mov
subb
mov
pop
push
add
jle
fildll
and
pop
aad
mov
ss
out
inc
xor
dec
popa
js
popf
cltd
ss
mov
sub
or
pop
out
push
enter
fdivrp
jae
les
push
mov
inc
adc
xchg
icebp
cld
icebp
push
and
jne
lcall
lods
fstps
insl
bound
xlat
ret
test
hlt
jae
daa
adc
and
xor
push
fwait
pop
xchg
mov
pop
pop
in
or
les
push
daa
test
mov
pushf
aad
movsb
mov
in
in
ficoms
or
mov
and
fisubrs
cmp
xorb
sbb
loop
add
jnp
sub
aad
dec
mov
push
je
xor
cmpsb
rorl
sub
mov
push
and
xor
fistpll
push
inc
mov
xchg
and
enter
mov
stos
and
test
stc
out
dec
scas
cmp
arpl
out
js
jnp
sub
es
mov
cmp
cmp
and
mov
xchg
add
out
imul
scas
xchg
jmp
fisubrs
push
incl
dec
sub
pop
xchg
or
jp
popa
and
xchg
pop
lea
rcll
xchg
or
std
mov
movsb
je
mov
sbb
jbe
iret
cmp
push
imulb
out
push
fucomp
cmp
xor
mov
sarb
ja
iret
sbb
inc
pusha
adc
and
xchg
test
cmp
fnstcw
pushf
imull
js
hlt
pop
jns
rol
ret
gs
or
out
or
js
add
jb
jle
and
sub
push
lock
cmp
push
fwait
cmpb
pop
repnz
call
mov
ljmp
jmp
inc
dec
dec
imul
mov
mov
adc
daa
mov
into
lock
leave
dec
frstor
lret
push
test
addr16
out
push
jo
push
and
std
nop
pop
jle
movsl
imul
push
push
add
xchg
mov
rcll
enter
jo
mov
ss
lods
jno
int
aad
shll
dec
in
jo
orb
aam
add
inc
lcall
xchg
jecxz
lcall
mov
inc
nop
pushf
jo
rcrb
into
loope
pop
cmc
ss
repnz
or
cltd
sbb
inc
add
pop
imul
daa
pop
bswap
lock
into
imul
mov
pushf
jno
pop
pop
das
insb
mov
mov
pushf
outsl
sbb
add
stc
lds
aad
dec
jnp
lods
add
inc
push
inc
cmp
sahf
scas
xchg
lret
cmpsl
idivl
add
mov
jg
and
std
cltd
sbb
xlat
pusha
ja
jge
fadd
xchg
adc
xor
dec
int
cld
mov
in
adc
fmulp
mov
mov
pop
loopne
mov
imul
cmp
lds
test
mov
xchg
inc
add
lds
fstps
cmp
inc
inc
in
cmpsb
pushf
les
xchg
add
mov
push
psrlq
jle
int3
mov
pop
ljmp
je
xchg
pop
das
in
clc
jne
lahf
pop
movsb
mov
movsl
cmpps
xchg
inc
push
jns
stc
cmp
scas
jmp
repz
xchg
jmp
js
das
les
out
pop
out
mov
fcoms
push
pop
out
cs
and
jne
dec
fdivrl
or
fwait
jne
cmp
xchg
loope
pop
jecxz
js
shrb
scas
popf
add
mov
test
ss
ss
xor
jge
sbb
or
sub
push
mov
mov
cld
hlt
jne
push
divb
or
sbb
xchg
add
cmp
mov
enter
bound
fs
push
pop
inc
mov
test
stos
ret
daa
dec
lea
jne
jo
sub
fdivs
or
ljmp
aas
mov
sets
fsub
adc
ds
jno
mov
out
scas
aaa
ja
mov
sub
adc
fldl
cwtl
shrl
and
dec
fbld
sub
repz
jmp
add
outsb
dec
jg
insb
push
in
pop
int
in
mov
add
sub
add
int
cmpsb
fistl
popf
or
out
cs
jecxz
imul
hlt
adc
sbbb
add
insb
sub
xchg
jns
shll
adc
stos
movsl
lea
imul
dec
sbb
or
mov
cs
out
cmpl
and
les
or
push
ret
or
cmp
mov
xor
or
daa
sub
sub
pop
push
int3
lret
xor
aad
mov
rclb
imul
lds
xchg
and
int
lret
cli
inc
adc
dec
decl
push
xchg
xor
cmp
lret
push
data16
faddl
cmp
push
cmp
sub
xchg
and
cmp
xor
jnp
inc
cs
lret
cltd
and
push
addb
pop
scas
fsubrp
lds
fwait
sbb
pusha
xor
pop
mov
mov
sub
nopl
push
insb
daa
negb
pop
int3
push
xchg
or
inc
pusha
movsb
data16
leave
push
xchg
dec
cwtl
andl
cld
mov
inc
aas
call
and
roll
inc
stos
test
lds
add
sbb
stos
fwait
movsb
xchg
mov
xchg
cmp
ds
pop
mov
add
mov
pusha
cmpsb
imul
outsb
iret
fsub
dec
mov
xchg
and
adc
movsb
ret
loopne
pop
mov
or
ret
adc
or
mov
jno
ljmp
rcrb
pusha
sbbb
adcb
sbb
lds
movsb
test
lret
rol
sub
lahf
sub
pusha
push
add
or
cld
dec
push
clc
dec
pop
pop
ret
not
mov
jnp
or
cmp
add
lea
push
loope
frstor
xchg
mov
pop
scas
xchg
out
jp
dec
addr16
out
pop
mov
and
ret
sub
push
mov
or
out
iret
lock
pusha
rcrl
push
out
cli
rorl
mov
xor
or
inc
mov
loop
sbb
cmp
outsb
lods
int
out
rcrb
xor
jae
jmp
mov
sub
jbe
aad
in
div
es
mov
push
repz
jae
stos
out
jbe
lret
rolb
jo
jbe
iret
mov
shrb
and
ljmp
test
lock
cmc
out
sub
imul
sbb
cmp
sbb
mov
dec
jae
fsubl
push
dec
or
jp
dec
jnp
out
and
or
jns
or
out
inc
jg
lea
mov
xchg
dec
inc
loopne
data16
test
hlt
sti
xchg
sub
sbb
fsubl
out
and
icebp
mov
mov
mov
sub
xchg
outsb
lahf
hlt
lods
pop
xchg
in
in
fs
sub
dec
cmc
xor
cmp
data16
aad
cmp
aam
sbb
inc
fidivs
dec
aam
outsl
fcmovnu
xchg
pop
in
sub
push
jbe
je
js
mov
push
jl
sbb
lcall
pop
add
movb
fnstcw
int3
dec
scas
cltd
sub
cmp
inc
mov
inc
daa
pop
sbb
in
push
add
push
pushf
jl
xorb
cld
leave
cmpsb
inc
push
mov
mov
sahf
sub
pushf
sub
jne
mov
pop
call
mov
lods
adc
and
mov
sbb
mov
sbb
insl
test
add
jbe
aad
or
test
movsl
xor
mov
inc
and
out
xchg
insl
out
ss
imul
xor
repnz
cmc
sti
std
push
xchg
and
sbb
and
bound
jne
dec
xlat
cli
jg
stos
arpl
and
inc
std
mov
frstor
xchg
fistpll
fs
aas
ljmp
cs
fwait
subl
stos
jmp
mov
clc
mov
mov
rcr
sti
pusha
push
loope
mov
dec
pop
idivb
je
push
mov
jns
sub
dec
rorl
jl
pop
sbb
psraw
cmp
or
push
enter
mov
dec
rorl
sub
pop
lea
mov
leave
scas
dec
scas
icebp
mov
std
cmp
add
shlb
mov
or
hlt
adc
out
xchg
loop
das
loope
sti
aam
out
pop
repz
fcoms
lea
xor
fisttpl
fisttpl
xlat
xlat
mov
pop
arpl
mov
mov
dec
xor
jns
push
xchg
data16
stc
xor
sbb
fcmovnbe
mov
mov
cwtl
leave
imul
fistpll
mov
and
test
adc
aas
imul
sti
push
pop
mov
shld
push
push
jns
popa
enter
add
mov
sbb
jg
cmp
les
push
jae
bswap
xor
mov
fstl
inc
popa
push
mov
lea
xor
outsl
cmp
mov
sbb
dec
cmp
loop
and
cmc
xchg
and
or
mov
test
insb
jbe
jne
ret
loope
gs
sbb
pushf
pop
sbb
into
inc
aas
jne
into
enter
repnz
loopne
icebp
sbb
insl
fldt
mov
cmpsl
decb
pop
test
push
add
push
rcll
pop
subl
cmp
jecxz
ss
or
into
out
inc
add
into
cmp
cli
inc
adc
pop
popa
fldt
pop
cmp
shrb
push
push
jo
imul
arpl
or
mov
xlat
mov
jle
test
mov
inc
ret
mov
xchg
push
or
xchg
mov
inc
mov
sub
int3
mov
cmpsb
int3
outsb
sbb
into
dec
pop
fucomp
sbb
sahf
sbb
push
sub
dec
cmp
leave
repnz
sbb
sbb
push
pop
and
mov
jne
lahf
xchg
add
sti
faddl
shr
dec
mov
push
es
inc
add
xor
mov
mov
test
clc
sbb
adc
pushl
sub
cmp
mov
fnsave
xchg
xchg
mov
insb
sub
movsl
ret
aas
stc
adcb
out
cmc
sub
dec
or
jecxz
push
inc
inc
sub
aas
push
mov
mov
movsb
dec
xchg
dec
push
pop
jmp
or
jmp
test
js
js
inc
or
loope
jb
sub
adc
fs
and
popf
js
sti
int3
adc
xchg
movsb
jns
jmp
sub
stc
test
fidivrs
adc
in
addr16
imul
insb
push
jne
push
in
ret
jg
xchg
pop
lds
aas
insb
nop
sbb
pop
mov
ret
clc
daa
popf
push
fadd
stc
xor
pop
dec
sub
cmp
lods
mov
repnz
xchg
add
test
adc
jb
in
shlb
in
cmp
jg
push
add
iret
dec
lcall
lods
dec
clc
add
lcall
arpl
aas
enter
bound
out
or
mov
scas
pop
cmp
outsl
aad
fisubrl
pop
fwait
ret
aas
sub
and
aas
jbe
xor
sbb
mov
movsl
sbb
rcrl
dec
xor
jp
push
or
jmp
outsl
movsb
jne
inc
add
mov
mov
mov
fmul
mov
push
pop
add
xchg
xchg
or
cmp
adc
fdivrs
jp
xchg
icebp
xchg
xchg
fcompl
sbb
inc
pop
inc
mov
inc
fistps
mov
and
pop
push
mov
repz
pop
xor
loop
push
les
add
mov
mov
mov
test
imul
cwtl
scas
loope
push
jge
jmp
dec
dec
dec
testl
test
icebp
add
rolb
xor
jbe
ljmp
or
out
inc
nop
movsl
push
fcoml
das
les
adc
push
cmp
or
push
cmpsl
fmul
xlat
stc
xor
xchg
leave
pop
nop
cltd
dec
dec
sbb
inc
mov
into
test
fwait
xchg
ror
fadd
repz
pop
scas
addr16
inc
xchg
dec
pop
inc
or
mov
test
out
jae
scas
xchg
mov
mov
xor
rcrl
push
jp
push
das
sar
mov
dec
mov
add
mov
repnz
aas
pop
je
sub
lret
imul
iret
sbb
lret
jb
das
xchg
bound
pop
stc
imul
test
ror
jae
fsubl
divb
push
loop
or
rcrl
add
mov
dec
dec
adc
sbb
push
sbb
out
mov
arpl
or
dec
or
push
mov
lods
push
mov
sbb
mov
sub
cmpb
stc
arpl
xchg
pop
dec
sbb
test
int3
repz
push
aad
cmp
mov
dec
xor
mov
adc
outsb
and
add
jecxz
xchg
leave
es
sbb
cmp
les
js
jmp
cltd
jae
stos
sbb
pmaddwd
outsl
add
daa
mov
sbb
push
subl
mov
sti
cmpsb
inc
lods
mov
sarb
inc
test
dec
xor
icebp
or
xor
lcall
mov
jg
xor
ja
xor
push
test
and
pop
inc
dec
push
mov
cld
testb
bound
sbb
add
cmp
xchg
dec
out
push
pop
call
push
cmpsl
add
jp
xchg
mov
int
loopne
sbb
xchg
adc
add
or
ret
ror
add
inc
xchg
push
dec
sbb
or
jg
mov
dec
mov
push
pushf
scas
mov
push
scas
aas
aam
push
das
mov
loopne
ret
push
jne
mov
mov
rcrl
bound
jns
aas
icebp
repnz
jle
mov
nop
xor
push
mov
aas
out
dec
mov
ret
add
insl
test
xchg
inc
pop
movsl
push
cli
dec
add
xor
movsl
sbb
inc
or
sbb
outsb
cmp
stc
mov
adc
enter
mov
pop
push
inc
aaa
jecxz
mov
mov
add
int3
in
or
or
xchg
cs
jge
das
dec
ljmp
pop
mov
insb
cmp
mov
je
xlat
adc
gs
or
mov
add
mov
jmp
dec
out
and
adc
xor
fisubl
mov
ret
xor
cmp
repnz
mov
xchg
pop
test
dec
mov
ficoms
mull
mov
pop
fstpt
add
rcll
jo
daa
xor
lds
imull
jge
fadds
adc
fildll
jno
pusha
and
out
sub
sahf
cmp
jae
add
in
lea
pop
out
add
iret
repnz
pop
mov
and
ljmp
into
in
or
sbb
iret
xor
cmp
cli
cmp
je
mov
out
ficompl
cs
inc
mov
and
cmp
push
outsl
xchg
inc
daa
dec
xchg
or
aaa
sbb
movsl
lock
das
and
negl
cld
sbbl
cmpsb
iret
stos
mov
std
dec
sub
movsb
arpl
adc
inc
and
jle
fwait
and
or
pusha
shl
dec
mov
dec
cmp
add
jae
cltd
sub
aaa
arpl
inc
sub
push
inc
je
sub
cwtl
stos
pop
lods
hlt
enter
addr16
fwait
ss
fsubl
fs
sub
adc
in
fisubrl
sbb
mov
pop
dec
sub
cwtl
cmpsl
push
or
mov
pop
cmpsl
or
scas
cmp
aam
sti
std
fiadds
mov
jb
mov
repnz
ja
push
cmp
ret
add
iret
push
in
sarl
sarb
cmpsb
js
mov
bound
add
cvtps2pd
add
push
cmpl
add
sub
lods
xlat
inc
xchg
aaa
in
sbb
push
and
or
sbb
push
fnstenv
dec
push
int
arpl
in
ja
inc
cld
sbb
pushf
out
imul
cmp
inc
dec
insb
push
fadd
xchg
mov
sbb
push
dec
or
dec
mov
push
mov
mov
mov
xor
lods
popf
cmp
jmp
int3
sub
add
movsl
jbe
and
dec
mov
js
gs
or
outsb
mov
sbb
xor
sub
cmp
adc
out
pusha
in
ficoms
rep
jp
jmp
mov
jecxz
test
dec
mov
pop
movsb
negb
add
fildll
jp
and
xchg
int
pop
in
dec
cmpsl
sahf
add
insb
xor
filds
filds
mov
push
push
insb
xor
xchg
inc
inc
out
sub
cmpsb
shll
dec
arpl
mov
pop
jmp
notb
add
test
test
or
mov
dec
fcmove
test
fptan
sub
xor
dec
xlat
jle
xchg
sub
push
cmp
xor
shrb
jns
push
call
sub
push
adc
in
cli
push
or
mov
or
xchg
filds
adcb
pop
fcoms
sbb
pop
mov
movsl
pop
sbb
jge
cmp
dec
ja
cmpsl
popa
out
mov
in
in
sbb
cltd
xchg
pop
aaa
fidivl
xchg
std
fmuls
mov
scas
mov
testb
push
xor
jl
into
push
add
xchg
in
or
insl
mov
outsb
inc
aas
in
mov
inc
push
or
lret
decl
inc
test
cmp
int3
fildll
xchg
insb
aad
pushf
jp
je
leave
ja
xchg
stos
call
xlat
jno
lods
push
loopne
out
push
out
into
mov
sub
in
or
es
or
pop
sti
stos
iret
adc
xadd
sbb
imul
or
lahf
mov
or
stos
into
and
xchg
add
mov
fnsave
stos
push
pop
jge
push
adc
dec
fstps
sub
shlb
pop
sub
fistpll
rolb
push
jl
repnz
hlt
iret
adc
dec
stos
xchg
cmp
mov
in
push
outsb
mov
adcl
rolb
lock
mov
jecxz
mov
out
addr16
dec
movl
pop
push
lcall
cmpsb
inc
repnz
out
add
lea
inc
mulb
mov
push
dec
iret
mov
negb
cltd
ss
and
inc
enter
dec
fisubrs
addr16
outsl
addr16
scas
scas
repnz
aad
or
repz
mov
pop
sarb
xchg
repnz
mov
ds
loop
dec
or
into
daa
or
cmpsb
negb
loope
adc
pop
pop
testl
xor
es
adc
mov
icebp
imul
mov
inc
sti
imul
pusha
mov
popa
mov
jns
iret
cmp
inc
ja
inc
in
sbb
cmp
jmp
ss
mov
test
faddl
data16
int3
fs
add
pushf
in
test
gs
inc
sahf
xor
add
or
test
or
iret
pop
and
in
mov
clc
cmp
jns
xor
mov
add
mov
xchg
movsl
leave
push
sub
or
and
sub
pop
cmp
sub
mov
repz
jae
sub
insb
sbb
mov
dec
mov
cmp
and
jno
cmp
shrb
mov
pop
mov
in
movsl
daa
outsb
fs
test
shrb
lret
ds
xchg
and
in
popf
pusha
xchg
negw
daa
xchg
xor
aaa
push
cmpsb
dec
gs
icebp
pop
pushf
push
out
shr
ljmp
out
add
mov
jp
jle
inc
inc
orl
jbe
adc
and
inc
mov
xchg
xchg
imul
adcb
std
test
ror
sub
xchg
and
push
push
add
jno
dec
testl
arpl
lea
icebp
mov
dec
cmp
mov
mov
mov
int3
enter
js
and
stos
cmpsl
fucom
jbe
popa
xchg
fidivs
inc
loop
jnp
jae
jp
add
adc
mov
jbe
je
repz
stos
cmp
jno
std
fbld
outsl
lods
cmp
mov
cltd
xchg
mov
push
lcall
adc
test
sarl
les
add
xchg
repz
stos
scas
jne
test
cs
sbb
dec
lcall
cmpsb
mov
cld
rcr
cld
or
push
jle
sub
xchg
mov
and
pop
sub
xor
jb
adc
and
mov
test
sbb
lods
shrl
mov
push
push
sub
lea
out
cmpsl
ljmp
outsl
pop
je
mov
icebp
mov
sbb
sbb
pop
sbb
sbb
jbe
int
movsb
push
cltd
xchg
or
ss
popf
sahf
outsl
and
stos
bound
iret
add
sbb
mov
cmpsl
out
out
inc
inc
push
scas
xchg
push
dec
mov
notb
jl
dec
and
xlat
cld
or
test
sbb
xor
mov
or
pop
sub
push
sahf
out
and
into
fstpl
lcall
dec
cmp
enter
pop
loope
xchg
push
xlat
out
stos
mov
shlb
pop
sbbl
cmc
test
and
jo
sub
push
stc
hlt
inc
mov
scas
pop
jge
movsl
mov
popf
cmpsb
xor
pusha
push
int
xchg
and
leave
push
es
es
sub
lret
decl
rcll
into
add
fst
cmpsl
pop
lds
or
add
mov
inc
add
jmp
push
scas
push
push
jmp
dec
ds
stos
cmc
inc
js
jb
pop
aaa
ljmp
push
mov
mov
and
jl
movsl
inc
in
les
and
sub
mov
out
movsb
jecxz
scas
pushf
push
adc
loope
cmc
lock
and
and
inc
jnp
xchg
push
clc
cmpsl
in
inc
lods
mov
fucomi
and
mov
add
js
decb
test
insl
cwtl
or
push
stc
adc
out
lods
xchg
sarl
pop
pop
dec
dec
push
notl
lods
fildl
stc
ljmp
and
daa
jp
mov
push
xor
insb
fwait
jmp
mov
out
outsb
jg
mov
inc
bound
mov
pop
les
cmpsl
mov
adcb
clc
adc
out
les
insb
sahf
cmp
je
cli
dec
inc
inc
mov
mov
fldt
jmp
fistpl
inc
inc
gs
in
cmp
xor
mov
iret
adc
or
pop
pmaddwd
mov
repnz
lds
hlt
cmp
or
call
lret
in
mov
fsubrl
loope
xchg
mov
push
in
jno
adc
outsb
adc
pop
lahf
outsb
mov
cld
mov
shll
mov
into
fwait
in
inc
jmp
aad
mov
xchg
jmp
cld
sub
and
movsl
sbb
dec
les
stos
les
dec
or
rcrl
sbb
cs
fwait
sub
into
arpl
add
push
pop
icebp
stos
inc
test
mov
repz
frstor
adc
jnp
dec
ljmp
push
in
sub
or
mov
imul
fists
jecxz
andl
mov
add
cli
inc
jno
repz
jne
aas
mov
pop
add
sti
rcr
into
movsb
sbbb
and
rcr
dec
push
jl
push
xchg
xorb
sub
push
xchg
cmc
jge
xchg
popa
sbb
sbb
lahf
sbb
sub
add
pop
xor
je
movsb
mov
sbb
pop
xchg
sarl
cltd
cs
mov
cmp
outsl
add
pop
test
insb
fwait
push
inc
out
in
or
stc
imul
inc
insl
fildll
pop
cwtl
inc
mov
in
xor
push
outsb
xorb
mov
mov
inc
insl
mov
mov
xor
in
sarb
adc
jecxz
jbe
ss
or
into
aam
ss
std
ficompl
dec
mov
jae
dec
pop
inc
adc
lods
dec
insl
insb
movsl
push
add
mov
stos
fistps
jecxz
int
xchg
inc
shl
xchg
push
cmp
cmp
gs
idivl
loope
cmp
mov
xor
mov
ficomps
mov
push
add
xchg
movsb
sbb
lahf
decb
test
ficomps
dec
push
clc
mov
xlat
addl
jno
xchg
and
repnz
push
mov
sub
xchg
dec
cmp
das
dec
pop
daa
mov
jno
sarl
cld
popf
mov
push
fbstp
arpl
in
les
lahf
sti
test
mov
xor
inc
test
rorl
jo
pop
orb
push
or
mov
pusha
ljmp
ret
add
mov
jbe
add
je
ftst
jl
mov
jb
int
push
and
adc
insb
mov
cmp
pop
cld
inc
sahf
jge
insl
fs
xchg
or
xchg
adc
scas
xchg
cmp
out
lahf
sti
and
mov
mov
sub
sbb
sub
jo
test
or
lcall
add
jge
popf
or
in
mov
and
push
push
arpl
adc
dec
mov
dec
cli
shlb
fstpl
decb
movd
push
add
jmp
into
jno
negb
lods
stos
pop
jmp
fdivs
pop
sbb
nop
sbb
xor
mov
cltd
test
rorl
pop
mov
pop
jbe
je
mov
outsb
pop
sbb
jp
sti
or
insb
add
out
andl
gs
fdivl
add
rorb
inc
xor
xchg
insl
or
outsb
add
cbtw
in
cmp
bound
shll
push
aaa
dec
cmpsl
stos
std
dec
add
pop
adc
addb
aad
pop
lods
ss
sub
fiaddl
mov
sbb
fwait
jno
and
add
sbb
sub
push
push
mov
je
daa
xor
push
push
cmp
and
leave
adc
pop
xchg
jp
jbe
xor
mov
dec
ret
mov
pop
rcrl
mov
lret
push
adc
mov
cmpl
cld
jge
ss
and
jge
inc
mov
stos
int3
sub
inc
add
mov
out
dec
sbb
lds
push
rcll
outsl
outsl
cmpsl
rolb
je
push
in
cli
xor
jb
mov
add
mov
mov
jle
fcomp
lea
xor
jecxz
mov
into
fbld
repnz
sub
push
fisttpll
ret
lcall
std
mov
les
sahf
and
lcall
scas
cs
popf
test
int3
out
movl
cld
gs
xorl
fisttps
mov
jae
test
pop
or
mov
fwait
cmp
sbb
test
in
cmp
mov
or
sarb
cld
and
push
push
xor
stc
ja
gs
push
sbb
gs
fisttpll
adc
sbb
and
leave
inc
jno
push
pushf
cltd
bound
test
das
push
into
xchg
xchg
test
add
adc
shlb
xor
xchg
je
add
je
fwait
repnz
add
mov
mov
out
sbb
xor
cmp
outsb
test
pushf
push
jle
sub
cmp
ret
cltd
push
and
lds
sub
aad
pop
mov
push
pop
sbb
xchg
push
fmuls
add
mov
jl
push
sbb
and
jge
jge
adc
movsl
sub
push
sub
sahf
push
sbb
call
cs
leave
push
repz
shlb
xchg
in
push
das
inc
mov
or
push
and
jo
ja
imul
shlb
stos
aam
or
lock
mov
addl
or
add
jecxz
mov
stc
insb
sbb
in
lods
cmp
push
pop
sub
dec
repz
jecxz
cmp
sub
ret
enter
out
test
sub
out
shrd
xor
nop
sarb
jle
jg
push
in
sbb
fstpt
in
scas
sub
rcrl
fmuls
test
negb
or
mov
mov
fsubr
loop
fs
orb
push
out
xchg
pusha
and
push
mov
jnp
arpl
inc
mov
test
push
cwtl
pop
push
into
orl
scas
and
jmp
adc
add
or
aad
stc
std
outsb
xchg
xchg
mov
or
in
leave
pop
add
dec
xor
dec
inc
jne
pop
pushf
dec
xor
cmpl
mov
push
sub
scas
cltd
lods
fcmovbe
and
daa
add
and
hlt
fistpl
lods
jl
addr16
lock
jbe
test
xchg
scas
mov
dec
scas
shrl
int3
mov
fs
mov
sbb
pop
push
in
sbb
int
push
pop
adc
jnp
xchg
lods
mov
test
mov
sbbl
xchg
fisubs
mov
or
cmc
sahf
cmpsb
ret
daa
push
jmp
arpl
repnz
jns
mov
cld
mov
mov
and
mov
out
mov
mov
js
loope
xor
sbb
mov
das
cli
xchg
and
dec
popa
lods
test
leave
adcb
cmp
call
sbb
sbb
or
push
mov
fdivl
scas
iret
cltd
test
scas
jne
dec
xor
or
jle
mov
or
test
stos
imul
and
subb
mov
mov
insl
aad
add
lods
jge
ds
xchg
mov
push
pop
sub
fwait
pop
and
sub
xor
shr
mov
dec
bound
sbb
cmpsb
shlb
fucomi
sbb
frstor
dec
fucom
lcall
or
mov
or
pop
clc
dec
mov
insb
pop
lods
or
outsl
and
lcall
ljmp
dec
adc
aaa
cltd
jmp
out
or
xor
push
add
sbb
mul
sbb
sahf
stc
adc
add
adc
push
insb
jle
fists
xchg
mov
jnp
in
dec
insb
orb
lods
js
xor
testb
push
rcll
push
addr16
mov
xor
popa
xchg
mov
aaa
popa
xchg
pop
mov
xor
fildll
inc
add
mov
clc
jnp
data16
xor
pop
cmp
cmp
mov
adc
push
mov
lret
xor
sbb
jecxz
xor
fsubs
ret
loope
jo
jbe
sbb
xchg
add
mov
cmp
sub
jbe
and
xorl
mov
stos
icebp
mov
or
dec
xchg
mov
inc
daa
mov
lods
xchg
mov
add
or
test
ja
jnp
dec
push
or
jns
pop
xor
outsl
push
xor
mov
push
jno
rcrb
hlt
xchg
mov
mov
pop
mov
push
cltd
fiadds
cmpsl
jl
push
add
pop
in
std
ds
xchg
pause
aad
clc
lods
mov
mov
ret
push
mov
push
add
xor
movsb
add
test
jae
sbb
xor
lcall
add
mov
es
xor
outsb
xchg
outsl
mov
fimuls
push
jns
adc
push
cmp
clc
ror
aaa
test
int3
cwtl
xor
int
imul
add
push
xchg
test
adc
and
jbe
pop
push
stos
movsb
out
add
into
push
shll
sub
imull
iret
adcl
popa
imul
mov
cmp
ds
and
pop
sbb
or
push
and
mov
jbe
push
dec
insl
lret
mov
sti
scas
fwait
mov
or
imul
lret
adc
jecxz
mov
ss
insb
loope
push
stos
xorl
dec
outsb
mov
pop
dec
test
xor
push
mov
sbb
push
or
pop
aam
sub
lods
cli
or
loope
adc
fwait
mov
lock
pop
or
aaa
js
cmpsb
rolb
ds
jge
sbb
out
xor
add
bound
xor
push
cmp
jmp
push
mov
cli
jbe
and
xor
and
mov
cmc
mov
and
fcmovu
push
mov
ret
cmp
push
cld
adc
ss
cmp
mov
lret
push
xor
sbb
lds
fisubs
js
mov
nop
popa
das
xor
sub
adc
inc
xchg
lods
jge
mov
and
inc
xchg
popf
call
pop
push
fistl
add
loopne
jle
sahf
fwait
and
xchg
test
lret
addr16
pop
js
leave
mov
pop
bound
mov
inc
test
jg
adc
lods
pop
pop
pop
mov
andb
ficoml
and
mov
sub
cmp
xchg
shll
inc
orl
repnz
cmp
mov
jnp
sbb
dec
sbb
cs
shll
add
jge
xorb
pushf
cmc
popa
mov
inc
stc
orl
inc
jbe
ret
jb
or
lcall
les
xor
push
push
sbb
test
sub
test
fsubs
mov
stos
rcl
pop
adc
out
in
cwtl
loopne
xchg
or
lods
sub
orb
or
clc
jl
inc
mov
xchg
adc
lea
sub
cli
mov
mov
pop
idivl
cmpsl
inc
das
ret
push
jb
jl
adc
and
mov
inc
sub
int3
std
push
add
mov
xlat
mov
jbe
and
sub
bound
gs
arpl
enter
repz
fisubrl
fists
insl
call
sub
js
jl
jb
aaa
mov
mov
iret
mov
shl
or
pushf
cli
sbb
lret
mov
pop
jbe
inc
js
rolb
mov
dec
cli
xchg
fwait
sahf
fsubs
jno
jns
jle
hlt
les
lahf
stc
push
push
movsb
movsl
mov
jbe
es
cmpb
test
mov
mov
xor
inc
fmul
jno
int3
cmp
cmp
jb
push
jo
scas
shl
inc
or
or
ret
fistpll
cmc
in
enter
cli
or
jbe
cltd
mov
push
mov
mov
repnz
pop
std
xor
cli
push
sub
adc
pop
orl
insb
dec
insl
adc
push
push
jecxz
sbb
push
adc
jl
sub
sbbl
mov
or
sbb
pop
xchg
out
addb
dec
outsl
movsl
lods
sahf
std
mov
into
sub
adc
mov
and
sbb
sub
iret
sbb
jno,pt
sahf
push
stc
xlat
enter
xchg
fists
or
das
xlat
hlt
shrl
pushf
dec
mov
mov
mov
sub
into
mov
cmp
xchg
cmp
inc
push
adc
std
lret
out
fs
in
xor
inc
add
movsb
dec
jle
lcall
push
in
push
mov
lods
in
das
inc
pushf
xchg
and
scas
dec
fsubrp
xchg
mov
push
ret
mov
fnsave
pop
cmp
sub
dec
cmpsb
pop
fsubr
push
pop
fwait
popf
xor
xor
jo,pt
xchg
sub
in
ds
or
sub
outsb
cmp
std
ja
stc
pop
inc
push
sbb
mov
in
je
lcall
push
cmpsl
mov
xor
mov
lods
add
icebp
mov
in
xchg
rclb
in
cmpsl
xlat
ljmp
and
test
inc
jl
jnp
xchg
daa
es
push
cmpsb
mov
jnp
sahf
out
shrl
sub
aas
sbbl
mov
leave
jnp
inc
xchg
movsb
or
mov
push
xor
imul
dec
lea
mov
movsl
not
aad
push
cmpsb
push
push
sub
es
xchg
lcall
sahf
jmp
int
sahf
jecxz
push
sbb
jb
sub
mov
mov
sub
lcall
cwtl
lods
add
rcrb
ljmp
or
aas
movsb
mov
dec
scas
cmp
frstor
or
pop
add
ret
mov
ds
cmp
adc
pop
js
push
es
pop
sar
adc
jp
inc
mov
push
xchg
in
cmp
stos
outsb
dec
cs
neg
xlat
xor
pop
push
ja
or
or
add
or
and
cmp
push
add
idiv
sahf
mov
jae
testl
shlb
out
xor
shll
inc
cltd
or
xchg
sbb
mov
sbb
cwtl
mov
or
adc
les
jmp
shrl
pop
cmp
push
dec
sub
test
test
sbb
stos
out
out
mov
aad
jb
cltd
xchg
inc
mov
sbbb
push
push
mov
jo,pt
enter
dec
mov
repz
lret
add
insb
push
rorb
jb
mov
daa
dec
cmpsl
adc
call
int3
jbe
stos
movsl
push
and
xchg
dec
scas
push
icebp
xchg
xchg
insb
add
repnz
add
iret
lods
mov
jmp
pop
jae
fstl
mov
adcb
mov
pop
adc
jo
ficoml
aas
stc
push
sub
sub
in
push
jnp
ds
lahf
mov
aaa
lea
daa
sub
mov
or
jne
pop
lock
sub
adc
stos
xchg
sbb
xchg
stos
jmp
mov
sub
pop
mov
jg
inc
xchg
jecxz
aaa
push
testl
cli
push
sbb
mov
dec
mov
es
fstps
jno
sti
sub
or
jge
subb
xchg
pop
cmpsl
inc
push
jl
insl
cmp
xchg
xlat
adc
jae
and
inc
ret
fldcw
sub
cmc
mov
jns
outsl
shll
adc
ret
mov
and
mov
xor
mov
adc
aaa
adc
adc
pushf
aas
or
push
in
and
mov
in
cmpsl
sub
stos
sbb
lds
les
mov
or
les
pop
dec
ret
rolb
xchg
sbb
pop
rorb
stos
pop
pop
lds
push
jmp
jle
out
jne
and
mov
mov
add
ljmp
icebp
gs
xlat
sub
adc
jnp
jno
mov
and
cli
stos
lea
xchg
and
pushf
inc
cmpsl
cmc
cs
add
jo
xor
call
test
sub
xor
jnp
jns
cmp
pop
xorl
pusha
mov
ds
imul
jne
ror
dec
pop
sub
adc
outsl
pop
mov
mov
dec
xlat
inc
in
mov
sub
jl
or
push
cmp
fstps
jnp
sub
mov
mull
in
daa
cmp
adc
adc
lea
push
jne
adc
mov
push
sbb
dec
lcall
loope
jge
pop
xchg
loope
cmp
lods
cmp
xor
aaa
shlb
jmp
adc
stc
add
inc
push
mov
repnz
pop
fcom
adc
test
lock
xor
js
sbb
xor
mov
sbb
in
push
push
dec
and
sbb
jo
push
mov
adc
xor
dec
mov
jp
addr16
nop
test
cmp
add
mov
insb
pop
mov
shr
or
inc
test
mov
and
cltd
push
sub
cltd
enter
pop
mov
push
or
adc
sahf
pop
inc
xchg
insl
mov
mov
xchg
jns
scas
xchg
cltd
popa
jae
shl
xchg
lock
and
scas
outsb
out
call
sbb
push
test
jecxz
push
sbb
cmpsl
fisubs
mov
inc
lahf
jg
test
movsl
ds
lds
cmpsl
fstpt
inc
idivb
fstps
and
stos
insl
dec
mov
jno
test
adc
add
loop
imul
xchg
fimull
movsb
repnz
arpl
push
fldt
addb
jbe
dec
out
shll
rcrb
sub
setp
xchg
jne
shlb
lret
mov
xor
mov
cld
lods
mov
out
mov
stos
fisubrl
push
mov
pusha
out
dec
mov
jb
push
movsl
mov
lret
jb
popl
push
lods
xchg
inc
mov
jo
mov
mov
mov
dec
jo
lret
mov
jg
push
stc
and
mov
mov
add
sub
xchg
test
add
mov
inc
sarb
or
jl
inc
loop
out
aam
lods
loope
cs
xor
lret
jg
aam
mul
les
mov
xchg
in
cmc
sbb
mov
lcall
push
mov
les
into
mov
add
dec
dec
mov
out
paddw
jp
jg
pop
rclb
gs
popf
lret
js
cmc
jne
cmp
out
divl
mov
mov
push
xor
push
add
cmp
add
arpl
and
adc
mov
and
jl
mov
int3
insl
mov
ljmp
imul
imul
fs
mov
push
or
add
nop
sbb
filds
bound
adc
mov
add
mov
dec
popf
lods
xchg
leave
stc
cmp
xchg
stos
mov
dec
sbb
dec
subb
push
mov
push
jmp
push
stc
jge
in
fs
lea
adc
dec
push
out
mov
xchg
mov
cmc
lods
mov
cld
dec
add
insl
jecxz
ret
mov
xor
aam
jmp
cltd
push
into
daa
sbb
pop
mov
loopne
outsl
push
inc
shll
mov
inc
jb
rorb
loopne
pop
icebp
mov
cmpb
cmp
adc
lcall
test
mov
pop
int3
cli
xchg
imul
int3
mov
adc
mov
inc
pop
mov
sub
bound
repnz
insb
icebp
xchg
fisttpl
push
testl
les
in
sahf
daa
insb
push
add
shl
insb
pop
mov
sbb
jne
dec
lret
addr16
roll
aas
mov
dec
in
movl
xchg
cmp
jg
jne
popa
out
push
sbbb
add
push
adc
bound
pop
cmp
aam
jae
cmp
idivb
loopne
mov
and
daa
addb
int3
leave
or
fs
int3
rclb
or
adc
cli
xor
pop
xlat
mov
bound
jnp
insb
push
sub
js
sbb
in
cld
cmp
aaa
mov
and
out
shrb
xor
cmpsl
inc
aam
push
push
cltd
mov
inc
add
aas
stos
lods
mov
std
sarb
in
mov
out
js
repz
push
inc
jb
pop
cmp
and
sub
lods
mov
lds
xchg
jge
bound
cmpb
push
fxam
fs
arpl
addr16
xor
les
xor
push
pop
jno
fildl
or
icebp
or
nopl
dec
cld
xor
jb
clc
or
out
or
dec
inc
or
icebp
test
test
jbe
dec
fists
popa
sub
fistpl
adc
cwtl
outsb
fiaddl
enter
mov
cs
adc
push
hlt
aad
adc
sbb
cmp
cmp
iret
sahf
adc
cmp
popf
mov
adc
dec
pop
out
push
imul
outsb
or
dec
adc
jne,pn
repz
iret
add
aad
dec
scas
push
scas
lds
lods
xor
aaa
data16
pop
xchg
out
mov
mov
roll
and
sti
mov
push
je
mov
shll
mov
movsl
mov
adc
fmull
jnp
xchg
pop
xchg
inc
les
mov
push
xlat
jl
insb
outsl
cmp
dec
movsb
test
xlat
push
mov
jp
pop
inc
call
push
mov
lock
fcmovbe
sarb
es
jo
jecxz
sub
cwtl
xchg
loop
mov
inc
sbb
jne
inc
or
cmpsb
cmpsl
fcmove
pop
sub
shrb
movsl
lods
in
daa
xchg
mov
mov
push
xchg
insl
or
fistl
mov
xchg
pushf
and
jnp
xorl
mov
shrl
xor
xchg
out
and
in
dec
jno
jle
sar
leave
dec
pop
aad
and
mov
adc
sub
int
fsubrs
inc
xchg
sbb
popf
jb
jbe
leave
jbe
scas
js
addr16
xorl
hlt
js
ss
test
fs
jbe
adc
adc
add
ret
scas
stos
push
mov
add
pop
sti
jno
pop
test
mov
lods
pusha
push
sub
nop
sahf
inc
cmp
shll
pop
sub
es
int
aaa
lods
lods
sbb
jmp
dec
dec
insb
inc
in
adc
mov
ret
sbb
cmp
xor
sar
jnp
arpl
rcr
mov
add
gs
loopne
jmp
cmpsb
and
mov
lds
dec
pop
and
xor
mov
cli
jns
loop
shlb
pushf
pop
xlat
push
dec
fimuls
cmpsb
mov
or
adc
cmp
fdivp
dec
push
daa
add
inc
sub
xor
push
pop
push
mov
fs
push
mov
add
lahf
mov
cli
cli
movsb
xchg
mov
stos
pusha
jb
ljmp
mov
rorb
fisubs
adc
jecxz
mov
in
popa
popa
mov
nop
in
sub
int3
xor
and
pop
testb
js
fisubs
mov
mov
xlat
jmp
cltd
js
mov
xchg
push
daa
decb
test
push
cmp
adc
les
mov
jl
or
dec
push
or
insb
outsl
xchg
push
pop
dec
xor
loope
mov
cwtl
test
bound
ret
mov
mov
push
jbe
test
hlt
daa
xor
loop
dec
xor
push
out
and
jo
pop
ds
sbbl
jle
and
add
inc
repnz
or
inc
sub
sub
inc
stc
jp
dec
or
stos
xchg
push
stos
inc
cltd
mov
add
cmp
test
sub
test
mulb
pop
outsl
stos
push
std
fidivl
jne
add
push
xchg
or
leave
add
jns
xchg
add
or
fldl
shrb
push
lods
lods
mov
addr16
adc
in
cmp
adc
cltd
push
insw
inc
sub
inc
adc
cmpsb
mov
push
cmpsb
popa
mov
sub
fisubl
pushf
cmpsb
lock
mov
xchg
pop
push
or
loop
push
sub
xchg
fmull
icebp
clc
jecxz
and
in
sbb
icebp
icebp
loopne
pop
daa
test
jg
sub
mov
dec
jmp
cmpb
inc
cld
jg
adc
imul
adc
dec
lds
insl
mov
fsubrs
in
adc
cmpsl
xor
mov
leave
jge
gs
sub
imull
enter
std
adc
xor
lcall
adc
inc
insl
or
faddl
dec
mov
sbb
test
insl
sbb
cmpsl
dec
dec
xchg
bound
incb
mov
icebp
cwtl
mov
push
int3
test
or
scas
adc
hlt
sahf
mov
pop
enter
fisttps
movsl
mov
mov
sub
or
mov
mov
repz
aas
lret
sub
popa
fdivr
lods
dec
pusha
adc
lcall
out
outsb
mov
sbb
in
mov
push
fnstenv
lahf
xchg
call
lret
fildll
dec
daa
inc
mov
imul
jne
ficomps
mov
jp
push
sbb
sub
ljmp
ret
cmpl
stos
adc
in
xchg
leave
xor
cmp
sub
mov
js
mov
sahf
push
in
out
inc
lods
ret
sbb
in
fisttpll
pop
daa
xchg
fidivl
jmp
shll
fnstenv
jb
jecxz
jle
out
sub
cmp
push
pop
into
mov
or
inc
cmp
xor
imul
addr16
jp
jg,pn
int
sarb
ja
inc
dec
and
subb
push
sti
add
cmpsb
mov
dec
adcb
std
cmp
jbe
or
pop
daa
push
fstpt
pop
int
mov
fstpt
fadds
out
and
sbbl
cmpsb
cmp
add
jl
push
or
add
mov
push
sbb
pop
mov
insl
jb
test
cmpsb
repz
movl
push
fdivs
out
xchg
adc
pop
shrb
lahf
pop
dec
ljmp
push
mov
and
jecxz
xor
pop
fs
mov
imul
int
inc
cmp
cmc
pop
or
fwait
mov
je
jbe
pop
test
rorb
lds
aaa
mov
hlt
stos
and
xor
mov
push
sti
mov
dec
mov
je
cli
cmp
xchg
ret
sub
and
inc
pop
scas
dec
and
inc
jle
xor
ljmp
xor
or
enter
cltd
cmpsb
das
jbe
cs
lcall
push
sahf
in
jl
fiadds
jle
inc
cs
sbb
xor
in
dec
pop
dec
push
hlt
fs
sbb
cltd
xchg
hlt
push
outsl
mov
adc
mov
jg
cmovns
sar
push
adc
pusha
jmp
test
mov
lret
pusha
pop
mov
xor
mov
add
ja
loope
push
mov
lods
push
lret
sub
jb
sbb
mov
push
and
insb
sub
jo
js
cmp
iret
adc
mov
fimuls
mov
cmp
xor
mov
xorl
push
loope
xchg
aas
in
pop
inc
lea
in
cmp
clc
rcrl
js
jae
mov
xchg
lret
in
loop
loope
xor
xor
or
scas
sub
loope
xchg
addr16
push
jmp
dec
call
xchg
mov
jb
jnp
rcll
mov
adc
jb
adc
out
add
jmp
mov
sbb
push
popf
sbb
mov
cmp
pop
jbe
mov
es
or
lods
jno
and
push
jns
fidivl
popa
adc
dec
push
jns
imul
sbb
lds
mov
push
stc
mov
aad
and
push
xchg
lea
sub
int
pop
ret
pop
push
xchg
imul
add
or
or
sub
sub
out
fcmove
out
or
out
jbe
push
xlat
ret
mov
cs
and
pop
ror
rcrb
push
dec
sbb
pushf
dec
imul
out
jno
arpl
mov
xchg
mov
gs
mov
lods
pusha
lret
outsb
fstpl
sbb
mov
mov
sbb
imull
out
mov
mov
add
sbb
dec
mov
in
inc
mov
jne
sarb
test
stc
mov
mov
ss
lds
fwait
cmp
sbb
pop
cmp
jne
sahf
pop
popa
mov
push
ja
cld
daa
push
push
pop
insl
dec
inc
js
addb
mov
leave
aas
leave
std
mov
and
cmp
aaa
jbe
les
shrb
pop
repz
or
or
pop
xchg
js
jmp
neg
xchg
pop
jo
xchg
push
in
xor
jno
lret
inc
ljmp
decb
push
je
sbb
or
fmulp
inc
sahf
jo
loope
fstpt
mov
inc
ds
push
popa
adc
adc
insl
lock
aaa
ljmp
icebp
push
mov
sbbl
clc
pop
jle
mov
imull
mov
fsubl
pop
push
das
cmp
popf
push
push
xchg
ljmp
cmp
cwtl
aad
xchg
popf
les
xchg
or
add
sbb
push
and
movsb
and
test
push
mov
sbb
mov
push
mov
xchg
movsb
movsl
push
push
rcrl
xor
shl
inc
pop
jae
mov
or
xor
out
popf
in
push
imul
lret
gs
xor
xchg
data16
fadds
fsubrl
icebp
fistpl
inc
addb
cs
incb
push
adc
mov
ret
push
ljmp
inc
aas
xor
je
jb
jo
les
sbb
inc
dec
repz
in
add
mov
out
mov
ret
cmp
sub
cmpb
push
mov
scas
sbb
mov
test
mov
cld
adc
gs
out
pop
cmp
int
nop
xchg
sub
arpl
cld
jge
shrb
jno
fmul
xchg
mov
mov
pop
and
js
sub
rolb
loopne
ja
flds
push
pop
xchg
push
fcmovb
mov
push
scas
aaa
ss
push
imul
cmc
cmp
lret
adc
mov
jb
pop
jp
das
pop
add
cmpsb
push
xchg
push
xor
xchg
adc
cmp
mov
adc
sbb
repnz
pop
lods
test
cmpl
pop
roll
dec
mov
mov
pop
das
jne
out
cld
xchg
mov
push
xchg
fs
mov
repz
enter
leave
push
int3
fidivs
sbb
fistpll
mov
das
push
pop
shr
inc
mov
push
push
cmp
adc
mov
pop
cmp
int3
inc
cld
mov
jns
dec
test
pop
cmovg
push
sbb
or
cwtl
cmpsl
sub
daa
push
or
andl
sbb
push
mov
xor
ret
aad
cmpsb
ret
sbb
gs
int3
jo
xchg
dec
imul
dec
xchg
cmpsb
cmp
bsf
jg
mov
es
adc
lret
push
push
insl
out
or
push
mov
and
pop
dec
fld
hlt
add
dec
ret
int
push
sbb
sbb
pusha
mov
enter
push
test
pop
stos
inc
cli
pop
jle
inc
sub
sahf
add
fwait
push
xor
cs
jl
cmp
ds
xchg
sbb
and
popf
test
cmp
inc
lahf
outsl
adc
pop
xlat
mov
jecxz
sbb
fildll
addr16
arpl
or
mov
stc
imul
dec
cli
in
jae
stc
out
icebp
out
pop
mov
inc
add
mov
test
cmp
out
xor
xchg
jnp
stos
mov
sti
mov
popa
xor
sbb
adc
xchg
aaa
repz
adc
repz
jae
and
das
fidivs
jp
pop
jae
jp
hlt
icebp
fidivrl
jne
arpl
inc
in
sbb
in
mov
xchg
cmp
movsl
lds
adc
in
add
stos
mov
aad
jbe
fisubs
cmp
inc
shll
movl
mov
xchg
fldcw
or
cmp
into
mov
cwtl
test
bound
xchg
adc
push
cltd
fisttps
stos
inc
hlt
or
add
xor
pop
cmp
pop
mov
fnstsw
aas
inc
scas
jmp
in
aas
mov
dec
lods
pop
mov
cs
add
std
into
popf
cmpsl
push
mov
sub
pop
and
mov
movl
sub
cmp
inc
jp
hlt
mov
xchg
add
adcb
push
in
pop
jg
cmpsl
cs
cmp
mov
data16
push
xchg
loopne
adc
push
scas
fstpl
cld
xchg
call
jno
pop
pop
or
pop
sti
dec
cmp
ljmp
testl
loop
std
movsb
cmp
pop
sbb
lcall
push
jae
lret
add
mov
sbb
mov
and
dec
int3
push
movsl
xlat
add
dec
dec
add
jmp
push
ret
cld
mov
pop
inc
xor
and
xchg
outsl
rclb
push
mov
push
mov
mov
subb
fs
cmp
mov
loopne
inc
insl
jmp
sbb
fdiv
aam
mov
push
nop
mov
sub
out
hlt
jne
mov
pusha
pop
push
outsb
test
in
sub
xor
push
orb
push
push
xor
imul
aam
jb
jnp
mov
xor
popa
pop
jb
pop
push
int
nop
in
xor
mov
mov
pop
sbb
sub
in
xor
push
adc
xor
lds
fdivrl
pop
sub
lds
mov
ja
cmp
aaa
in
inc
int
mov
xor
push
jecxz
ret
mov
movsb
jne
movsl
push
jmp
xchg
xchg
mov
stos
push
xchg
xchg
rcrl
adc
inc
loope
daa
cmc
mov
movsb
movaps
fldenv
call
mov
mov
stc
dec
mov
hlt
ficoms
popl
xchg
roll
fbld
or
scas
xor
leave
fld1
jbe
les
pop
test
mov
push
jns
stos
jae
or
pusha
and
mov
adc
jl
out
out
test
std
das
push
xor
sub
into
adc
lret
xchg
mov
and
mov
sub
sbb
inc
dec
xchg
and
aam
mov
ret
push
or
pop
sub
jnp
jnp
popf
jmp
xlat
mov
add
sbb
push
cmp
stos
ror
insb
fcomip
test
push
push
das
push
scas
xchg
faddl
cmp
test
add
inc
inc
xchg
insb
ret
pop
in
cltd
pop
es
outsl
sub
or
data16
pop
jno
out
sub
mov
sti
xchg
adc
in
push
jle
test
insl
fidivrl
clc
inc
and
call
pop
fisttpl
push
ja
inc
sub
inc
sbb
rorb
fwait
mov
and
aaa
sbb
jnp
sbbb
mov
xor
insl
jmp
call
jle
adc
js
lods
sub
sbb
popf
sbb
pop
in
lcall
mov
lods
jo
lock
sub
popf
adc
pusha
mov
or
aam
fdivs
cmp
push
push
lods
mov
xor
stc
dec
call
ret
push
sub
rcrb
outsb
mov
xor
pop
lcall
gs
or
cmp
mov
and
push
push
jecxz
das
sub
inc
test
push
bswap
je
adc
or
lcall
jl
stos
ljmp
xchg
jg
jp
movsl
mov
and
sbb
sub
mov
mov
or
scas
scas
push
movsb
retw
lods
arpl
xchg
or
and
int
mov
sbb
push
arpl
xor
push
jnp
repz
imulb
push
xor
nop
add
push
popa
dec
push
int3
sub
fstpt
mov
add
jg,pn
stc
stos
mov
mov
push
xchg
lds
mov
movsl
cmp
mov
jns
aad
adc
push
or
int
cwtl
jle
adc
out
inc
test
imul
dec
in
dec
test
pop
pop
jnp
push
shll
into
mov
xor
or
sbb
gs
fnstsw
push
stos
movsb
aaa
movsb
sbb
cmc
pop
je
sub
pop
aam
sbb
xor
test
fsubrs
lret
std
mov
sbb
fcmovnbe
sti
cmp
fst
mov
and
inc
sbb
mov
inc
sub
mov
sub
xor
add
pushf
outsb
pop
sub
outsl
pop
mov
and
sbb
rol
inc
sub
imul
decb
add
outsb
lea
jno
cs
cmpsl
repz
aad
add
popf
add
jo
cld
clc
add
jmp
mov
in
sbb
xlat
xchg
or
ret
jg
mov
pop
cltd
push
scas
loopne
mov
xchg
adc
popf
scas
pop
shrb
mov
dec
or
shl
incl
ljmp
or
in
outsb
mov
inc
popf
jnp
sbb
mov
xor
arpl
test
es
scas
mov
pop
add
push
push
stos
push
fimull
addb
scas
add
add
out
rcrl
push
sub
in
loopne
addl
add
int
dec
sarb
jg
test
shlb
jmp
popf
xchg
outsl
sub
cmc
fcom
dec
mov
or
sub
ret
mov
sbb
add
adc
cmp
clc
mov
int3
mov
xchg
mov
pusha
rorb
and
nop
das
ret
pop
jp
ja
repz
mov
lahf
imul
sbb
fisttpll
jo
mov
cld
pop
or
sub
dec
lret
push
push
bound
xchg
sbb
out
inc
shrb
and
nop
dec
xor
push
cs
dec
and
shll
ss
negl
mov
adc
lea
les
adc
adc
stos
mov
lahf
mov
fstpt
xorb
dec
inc
ss
in
adc
or
lods
mov
mov
out
mov
cmp
dec
pop
mov
outsl
pop
aad
jns
arpl
adc
cmp
cmpsl
lods
xchg
test
cmc
or
pusha
fs
sbb
sbb
pushf
mov
popf
icebp
cmc
sahf
mov
adc
mov
loopne
pushf
xor
xor
dec
inc
dec
lret
out
sahf
mov
pop
jb
jne
cmp
std
cltd
ret
jbe
or
das
mov
stc
push
sar
xchg
pop
pop
pop
xchg
enter
shl
jbe
sbb
popl
inc
pop
dec
add
movb
aad
mov
push
cmpsb
sub
sar
addr16
das
movsl
push
dec
mov
popa
cmp
mov
adc
inc
mov
lea
rep
aaa
mov
inc
lcall
cmpsb
jmp
xor
mov
mov
or
addr16
mov
mov
fdivr
push
pop
gs
adc
add
nop
jl,pt
mov
jecxz
lock
and
push
push
jmp
mov
or
or
mov
rclb
and
mov
adc
outsb
nop
sti
add
cmp
cmp
dec
pop
ret
mov
dec
cmp
xor
es
jo
inc
xor
stos
xchg
fabs
lcall
popl
lea
ljmp
test
fisttpl
nop
and
ja
mov
jne
das
mov
arpl
out
shll
clc
xchg
jbe
mov
sbb
int
test
cmpsb
repz
gs
sbb
jl
outsb
loop
push
std
sbbl
pusha
xchg
sbb
movsl
ds
cmpsb
cmp
aam
fdivl
inc
sbb
pop
or
faddl
push
mov
pop
mov
and
cwtl
sub
adc
mov
pushf
fcompl
bound
or
mov
pop
xchg
adc
and
adc
pop
icebp
cmp
push
out
movsl
mov
sbb
shr
sub
aas
enter
in
aaa
icebp
popf
test
pop
cmc
xchg
xchg
sbb
sub
test
xchg
dec
cltd
jns
sbb
ss
sbb
inc
xchg
inc
test
cs
jmp
mov
sub
xor
rclb
in
cmp
mov
xchg
notb
cmp
addr16
sub
fcmovbe
ds
jle
outsb
mov
test
pop
lcall
repz
cmp
or
pop
fldenv
mov
repnz
dec
sbb
or
sahf
add
xor
sbbl
and
and
push
lahf
stos
dec
xchg
fcmovb
add
sub
ret
gs
test
fmuls
jnp
pushf
mov
dec
fistl
dec
add
add
sub
pop
mov
divb
insl
xor
cmpsl
cltd
ljmp
es
into
cli
adc
add
jnp
jno
cld
stos
mov
imul
int3
jp
mov
inc
xor
jecxz
mov
mov
ss
inc
pop
fs
xchg
cmp
fs
repnz
cwtl
icebp
fisttpll
adc
jge
sbb
or
imull
fcomps
push
xorl
insb
jne
call
pop
push
imulb
add
xor
sbb
sub
es
inc
int
rclb
popl
cmp
inc
lgs
cld
or
sti
cwtl
mov
popf
and
shrl
rcr
xchg
xchg
xor
and
or
inc
pop
gs
cmp
loop
mov
repz
sub
sbbb
fidivs
pushf
movsl
pop
adc
pop
and
cmp
ret
push
sub
xchg
or
mov
and
jge
xlat
test
lahf
pmuludq
jg
js
scas
jne
and
lret
pop
mov
test
sti
dec
pop
jmp
in
mov
adc
lret
jne
add
fisubrl
cmp
and
xor
int3
inc
push
cmp
test
adc
dec
lock
pop
inc
mov
daa
lds
push
pop
adc
and
xlat
sub
ds
stos
int
xchg
mov
aas
int3
cmp
addr16
mov
mov
cmp
shr
mov
push
adc
inc
scas
xchg
insl
rolb
in
pop
push
jno
push
into
rcll
mov
xor
test
pusha
push
out
daa
es
adc
mov
out
dec
lret
pop
bound
push
imul
mov
int
mov
clc
movsl
sub
xchg
cmpsb
add
jb
aad
stos
test
add
scas
mov
js
mov
mov
xchg
cmp
sub
jmp
das
jp
mov
call
inc
jmp
pop
fiaddl
mov
jns
push
shlb
mov
addb
in
clc
mov
adc
daa
xchg
not
add
setne
cmp
pop
cmp
in
shlb
leave
sarb
sub
shrl
lahf
pop
gs
adc
push
int
add
in
daa
mov
xchg
nop
sarb
push
ror
xlat
mov
mov
jmp
mov
xchg
add
cltd
addl
push
and
popf
jg
pop
mov
mov
cmc
inc
pushf
hlt
mov
sldt
add
cmp
movsb
add
leave
fdivl
pop
push
dec
mov
jge
fs
aaa
jecxz
decb
dec
push
fists
push
jne
testb
dec
cmpsl
push
gs
ret
data16
jecxz
outsl
ret
into
lahf
xlat
jp
xchg
push
jo
sbb
xchg
pop
cli
mov
xchg
arpl
les
cmpsl
stc
push
clc
mov
cld
mov
adc
aaa
test
adc
cmp
insb
into
imul
inc
adc
and
inc
iret
imull
jnp
stos
hlt
int
cmp
fists
pop
or
ficomps
mov
inc
adc
lds
push
sahf
jl
out
ja
fsubr
add
xlat
xor
pop
orl
inc
inc
ss
mov
lds
stos
push
in
sbbl
or
es
fiadds
and
inc
in
loope
sub
pop
sub
repnz
mov
lret
mov
inc
insl
daa
stc
imul
sbb
int
scas
pusha
stos
daa
dec
sbb
nop
pop
sarb
pop
jmp
cmp
insb
jne
xor
out
enter
jle
sub
sbb
out
cwtl
lods
inc
cwtl
push
mov
cmpb
xor
xchg
daa
xor
loop
sahf
cmp
icebp
mov
mov
dec
stos
mov
sbb
cld
aas
pop
inc
pop
hlt
jg
push
mov
std
dec
or
sbbb
inc
popa
push
lahf
xor
or
ret
pop
fiaddl
popa
out
sti
out
shlb
xor
js
fstpl
in
or
xchg
fsubr
mov
in
adc
int
dec
or
add
cmp
imul
ds
loope
popa
cmp
sbb
jae
ret
movsb
pop
add
or
mov
sbb
data16
xor
adc
xchg
fs
aam
jecxz
je
xchg
mov
mov
pop
loope
jbe
adc
andb
enter
sarb
jle
mov
pop
int
cmp
jno
add
ja
mov
gs
mov
idivb
sbb
arpl
out
jbe
test
dec
in
dec
ss
cmp
xchg
pop
jl
cmp
lock
xor
lret
add
ja
repz
pop
cld
mov
pop
xor
loopne
mov
rclb
pusha
push
push
movsb
shrl
test
mov
mov
lret
push
imul
fiaddl
fimull
movsb
rcll
test
and
shlb
scas
mov
inc
xor
iret
mov
rcr
or
or
out
or
mov
pop
xorl
mov
fwait
push
push
js
mov
dec
cmpl
out
pop
cmp
xor
lret
and
mov
dec
mov
dec
idiv
in
mov
outsb
arpl
fstps
adc
divl
iret
push
adc
jge
jns
xchg
or
jge
mov
sbb
dec
ret
mov
loopne
inc
jge
js
sbb
mov
movsl
sbb
cmp
fwait
sub
mov
inc
xchg
mov
cmc
lock
push
xchg
dec
xor
mov
or
sub
ffreep
xchg
cmp
jae
dec
sbb
adc
dec
push
jnp
xchg
in
repz
push
dec
inc
mov
movsb
push
enter
sbb
or
addl
cmpl
decl
sti
cmp
xor
pop
add
push
aad
and
cmp
adc
push
xchg
roll
xchg
mov
pop
push
sti
add
fidivl
mov
xchg
push
dec
jnp
pushl
push
mov
push
lea
jecxz
jne
insb
push
adc
out
mov
cld
mov
test
cmp
call
inc
ret
mov
cmp
aam
in
mov
mov
xchg
cmc
out
xchg
rolb
lret
rcrl
loope
mov
loop
shl
jno
xlat
fcom
and
and
add
clc
xor
adc
daa
data16
cmp
dec
in
es
fcomps
pop
clc
mov
jo
ljmp
setle
shrl
repz
jb
mov
jae
dec
pop
loopne
xor
outsl
cmp
mov
ja
das
cwtl
aaa
ljmp
sub
inc
dec
mov
fwait
sub
push
xchg
ss
mulps
popa
mov
vphaddubd
aam
orb
xchg
push
fwait
lods
hlt
movsb
into
ret
adc
xchg
repz
sub
jns
imul
fstl
pop
jno
sbb
call
sbbb
out
xor
mov
lds
test
dec
xorl
fwait
sub
mov
inc
xchg
scas
cmpsl
je
pop
mov
push
icebp
dec
inc
out
mov
movsb
sahf
push
fidivrs
ret
push
add
shlb
in
sub
add
cmp
mov
loope
jmp
sbb
mov
xlat
daa
push
nop
push
mov
pop
xchg
enter
inc
sub
aam
jg
fcompl
pop
inc
pop
aaa
les
mov
jbe
mov
pop
adc
mov
dec
out
mov
xor
enter
daa
sub
cld
mov
mov
dec
les
inc
dec
adc
and
mov
add
leave
add
cmc
and
fldl
mov
bound
add
mov
xor
sub
xchg
add
popa
fmul
lcall
icebp
xchg
addr16
add
mov
mov
mov
ror
test
sub
or
aam
push
mov
outsb
sahf
sbb
in
frstor
jle
jbe
dec
mov
nop
or
add
aam
ss
mov
lods
jmp
outsl
and
jnp
xchg
divl
shl
mov
mov
pop
add
cmp
shrl
loopne
xchg
sbb
test
pop
dec
scas
xchg
dec
insb
frstor
fwait
pop
rcl
data16
mov
xor
sub
scas
inc
fstl
dec
mov
adc
mov
ret
xchg
out
jle
outsb
jge
sub
and
xchg
ja
push
push
in
pop
ret
jbe
rcr
stos
mov
jecxz
pop
pusha
inc
jbe
inc
je
divl
subl
aam
popa
dec
inc
dec
dec
and
mov
mov
es
and
test
pop
inc
popf
shlb
imul
mov
dec
jb
pop
adc
imul
dec
push
jno
aam
aaa
insb
cmpsb
jge
dec
ret
roll
out
mov
into
mov
repnz
push
jnp
push
and
mov
dec
fstps
cwtl
xchg
insb
adc
sub
pop
and
jmp
inc
dec
jnp
xor
mov
mov
sbb
cld
jmp
xor
pop
outsl
jecxz
pop
out
xchg
aad
inc
jbe
jo
insl
push
push
sub
leave
lahf
ds
pop
mov
xor
sbb
push
push
int
ljmp
out
mov
jg
cmpsb
imull
sub
sbb
add
popf
call
fwait
xlat
ret
lcall
ja
scas
cmp
fwait
test
pop
dec
mov
cmp
fdivs
adc
jp
push
arpl
insb
ds
add
dec
mov
movsb
mov
test
adc
fistl
mov
inc
pop
add
or
ret
fidivs
mov
jecxz
jnp
xchg
rcr
mov
roll
jne
cmpsb
xchg
addl
fdivs
pushf
fldl
pop
imulb
out
push
pop
stc
sbb
int3
lods
sub
roll
js
jl
cmp
mov
ljmp
cld
repnz
lds
lahf
pop
mov
xchg
fnstsw
mov
imul
cmp
sti
dec
mov
push
mov
push
cs
cmp
xchg
movsl
jbe
ljmp
or
add
repz
sbb
jbe
mov
or
fdiv
cmpsb
insl
arpl
andl
jp
and
sbb
dec
inc
xor
idiv
hlt
mov
mov
adc
xchg
pop
fldt
adc
dec
push
mov
addr16
ljmp
mov
repnz
sahf
add
sub
xchg
out
push
mov
sub
push
mov
subl
push
cltd
ja
fidivs
leave
lea
addb
xchg
dec
ret
test
add
jno
addl
in
addb
out
jmp
lret
inc
repnz
aad
lcall
call
test
sti
lcall
pop
xchg
push
mov
mov
iret
lret
mov
and
mov
inc
popf
and
mov
das
cmp
cld
jecxz
mov
rcr
or
dec
xchg
jmp
sbb
xchg
cld
iret
jae
xchg
or
sti
repnz
aam
enter
in
pop
cmp
out
ret
rorl
les
in
pop
jge
pop
push
negl
mov
sbb
mov
aas
enter
xor
fidivl
xchg
add
cltd
inc
pop
mov
out
mov
test
xchg
loopne
mov
inc
or
je
sub
gs
flds
push
outsl
xchg
push
nop
aam
faddp
fsubrp
movb
fisttps
loop
addr16
andb
fsubs
out
dec
out
sbb
push
jge
js
ljmp
xor
add
mull
and
adc
mov
push
add
loope
cmc
push
push
xchg
addr16
or
xchg
xchg
adc
cmpsl
jae
cmc
les
fs
inc
dec
xchg
lods
movsl
jp
fs
pop
out
out
fsubrs
call
fistps
fwait
iret
test
movsl
inc
daa
repz
pop
pushf
js
lods
jp
mov
dec
and
cmpl
cltd
mov
in
mov
ret
mov
cmp
cmp
xor
aad
and
ss
inc
mov
add
fldcw
sub
scas
into
xchg
adc
daa
orl
jg
mov
stos
sbb
inc
push
icebp
gs
push
imul
outsb
loopne
or
cltd
sub
je
in
sub
inc
outsl
negl
mov
les
mov
popf
stos
xor
lret
push
pop
adc
mov
dec
in
or
sub
fnstcw
push
jge
inc
dec
xor
inc
mov
jb
inc
int3
hlt
mov
and
movsb
mov
test
jb
push
mov
xchg
dec
adc
and
in
clc
cmp
push
cmp
lods
xor
jmp
cmp
xchg
fs
mov
ds
ss
push
leave
pop
add
jnp
adc
xchg
loop
test
and
mov
scas
xorl
cmp
mov
ret
push
xor
dec
jecxz
xor
dec
jbe
subb
test
ja
xchg
pop
jecxz
test
into
xchg
sbb
sarb
mov
lcall
orb
xchg
jnp
cmpsb
rorb
insb
test
inc
pop
sub
jnp
repz
aam
movsl
rorb
cld
lret
xchg
stos
mov
addr16
xchg
ljmp
jge
pop
jp
add
xchg
push
dec
cmp
push
mov
sbb
jge
ljmp
stc
icebp
into
in
inc
ret
xor
inc
dec
inc
fcmovne
loopne
jno
pop
loopne
arpl
cmpsl
xchg
idivb
outsl
call
jle
call
jbe
push
push
jmp
pop
mov
scas
test
ja
add
inc
dec
test
aam
push
sbb
cmp
icebp
insb
push
push
inc
cmp
int
push
push
inc
in
test
mov
sbb
jo
cmpsb
loopne
jns
popa
call
test
push
shlb
add
aas
push
out
sbb
mov
in
pushf
add
ret
mov
xchg
push
push
stos
pop
cs
sub
jmp
fsub
aaa
jmp
cmpb
shll
xorl
imul
sub
adc
push
pop
cmpsb
xchg
scas
insb
pop
insl
jmp
insb
clc
dec
fincstp
pushf
xchg
gs
inc
xor
jge
lds
ret
jle
jns
pop
sub
jecxz
fbstp
sub
mov
mov
out
cmp
pop
leave
stc
rclb
aas
push
sahf
inc
enter
sub
test
nop
das
and
push
loopne
mov
xor
jne
cwtl
ljmp
jns
mov
aad
dec
cmp
xor
fimull
xchg
lahf
or
clc
cli
mov
push
sahf
fnstsw
inc
cld
rcr
mov
push
scas
xor
mov
xchg
inc
jae
pop
sbb
xlat
dec
cmp
inc
jb
das
iret
mov
cmp
jnp
dec
cmp
mov
xor
mov
test
jae
rcrb
xchg
call
push
jbe
cmp
lahf
or
mov
mov
insb
fistpll
nop
or
mov
addr16
push
lcall
fidivs
ret
mov
mov
jnp
int
push
jmp
sahf
pop
pop
sbb
stc
xor
or
fcoml
es
jg
adc
xchg
push
adc
outsl
push
out
sbb
cmp
push
dec
loopne
lea
cmc
test
xchg
stc
or
scas
in
push
mov
stos
fsubs
test
and
stos
push
leave
adc
pop
adcl
mov
mulb
jle
cmp
mov
and
and
dec
xchg
push
mov
mov
sbb
adc
add
fadd
dec
cltd
push
push
cmp
push
xor
jnp
scas
jae
adc
or
push
and
inc
xor
xchg
mov
in
push
push
pop
mov
loope
inc
mov
mov
iret
daa
icebp
fdivs
rol
xchg
out
sub
lods
ret
loop
jb,pt
js
pop
sbb
sub
test
in
testb
sub
cmp
sub
cs
iret
int3
neg
push
call
xchg
mov
xor
dec
xor
in
jno
push
or
insl
imul
pop
not
inc
adc
dec
xchg
xchg
scas
test
cwtl
adc
test
fnstsw
int3
les
cmp
sub
sub
adcb
mov
lds
fs
cli
in
inc
jns
push
nop
cs
dec
je
dec
cmp
sarl
dec
xchg
dec
push
aad
js
in
aaa
ret
push
lret
mov
adc
jb
or
aam
iret
out
call
jno
popa
adc
pop
cli
dec
lds
mov
les
pop
and
in
xchg
adc
mov
mov
enter
push
push
sub
imul
lcall
lods
imul
jle
test
mov
jecxz
stc
mov
mov
jmp
je
xchg
inc
mov
jb
in
addl
xor
jle
xor
nop
mov
inc
mov
cmp
cld
xor
cli
push
sarb
icebp
pop
test
lods
mov
xor
cltd
dec
jbe
aam
hlt
roll
test
mov
cmp
pop
je
xchg
in
cmpsb
cwtl
mov
sbb
cmp
mov
xor
xor
push
loopne
mov
adc
addl
pushf
xor
inc
jb
mov
jne
insl
fstpt
fadds
insl
mov
jg
cs
loop
lods
insb
lods
jg
xchg
push
ja
cmp
xor
mov
mov
and
adc
je
jp
sub
mov
xchg
stos
xchg
fimull
es
dec
dec
push
pop
sub
or
xchg
inc
adc
sub
sarb
sub
pop
push
adc
or
inc
mov
mov
xchg
push
adc
lods
xchg
add
mov
sahf
cmp
movsb
pushf
in
jbe
out
jle
jecxz
mov
stos
in
ds
push
mov
mov
sub
das
jbe
es
mov
xchg
icebp
adc
fwait
pop
repz
pop
add
xchg
insl
inc
popa
cs
lahf
fsubl
inc
outsb
and
movsb
or
sbb
out
or
movsl
push
dec
fwait
sbb
hlt
lods
jp
outsl
jnp
fcoml
aad
cmp
cmpsb
jns
imul
cmp
mov
lcall
cwtl
rcl
sub
aas
push
ja
inc
push
adc
testb
aaa
dec
push
ljmp
or
dec
testl
mov
stos
pop
imul
outsb
inc
ret
lahf
pop
push
rcl
add
dec
cmp
jnp
or
sub
scas
dec
cmp
rclb
push
sbb
sldt
mov
mov
sub
and
repnz
addr16
clc
enter
fwait
dec
test
lcall
push
push
pushf
inc
sti
pop
lds
cmp
jmp
movsb
and
sub
and
lcall
sub
mov
mov
andl
cli
push
or
dec
stos
fistl
and
loopne
pop
out
xchg
push
int3
int3
ss
test
aaa
push
and
and
pushf
sub
cld
filds
jbe
in
add
outsb
jae
test
out
icebp
push
mov
repz
mov
jl
ja
scas
lcall
mov
lahf
adc
and
movsl
push
lret
pushf
add
cltd
inc
or
leave
pop
aam
lret
xor
xlat
mov
scas
mov
hlt
mov
mov
stc
xor
cmc
push
les
push
sbb
es
gs
movsl
aam
jns
popf
inc
icebp
ds
sbb
push
inc
arpl
fdivs
cmp
call
ds
lock
sbb
xor
scas
jecxz
into
sbb
or
jle
ja
xchg
fmul
pop
mov
jmp
xor
mov
icebp
cwtl
inc
ret
pop
sub
pop
adc
out
icebp
mov
pop
lea
addr16
pop
cmpsb
ret
shll
fwait
int
sahf
jb
mov
fistps
arpl
aad
stc
sub
enter
mov
pop
pop
repnz
mov
loop
cwtl
mov
out
push
cmpsl
mov
daa
xchg
push
mov
pop
or
mov
out
cltd
ret
aaa
adc
adcl
fisubs
pop
enter
fidivs
pop
notb
dec
mov
sub
fs
jmp
enter
mov
dec
dec
lret
dec
push
pop
fsubs
enter
dec
fadds
or
outsb
scas
lcall
sbb
push
in
push
sarb
es
mov
popf
stc
outsl
pop
inc
adc
loop
je
mov
cmp
jno
xchg
xor
dec
mov
out
sbb
push
push
pusha
fisubrl
dec
add
pop
add
fwait
sbb
fnstsw
fdivrp
xchg
mov
ds
out
adc
stos
rcrl
mov
xchg
popa
cmc
sbb
dec
add
iret
enter
test
mov
cltd
and
add
or
pop
nop
jg
ret
cmp
cmc
in
test
cmpsl
xchg
dec
in
stc
mov
push
lcall
ss
xchg
xchg
std
add
shlb
sbb
out
gs
and
dec
jp
gs
nop
sbb
or
int3
js
scas
sbb
subl
xchg
bound
lods
cmp
mov
mov
cmp
ret
mov
inc
cli
mov
adc
mov
stos
hlt
push
aaa
mov
and
jbe
shlb
mov
push
lds
pop
dec
add
pushf
or
lahf
jle
jmp
stos
movsb
inc
or
mov
aaa
je
mov
mov
dec
in
and
mov
inc
sbb
push
lods
cmp
sub
sar
sarb
mov
adc
scas
movlps
mov
pop
and
mov
push
pop
std
pushf
xchg
mov
std
lahf
rolb
xor
xchg
sub
loop
adc
add
ret
pop
call
adc
cmp
and
mov
movsl
mov
in
out
sbb
cmp
cmp
push
sub
jmp
jne
fistpll
push
clc
inc
xor
inc
mov
xchg
mov
xlat
lods
mov
sahf
pop
xchg
stos
rorl
sbb
scas
push
and
pop
in
inc
and
push
outsb
fbld
lds
rol
imul
pop
jle
cmpsl
inc
inc
ljmp
mov
cld
and
jmp
mov
jp
xchg
mov
push
jg
loope
xor
push
pop
icebp
add
xor
xchg
xchg
inc
mov
inc
icebp
stc
jns
xlat
test
add
xchg
sbb
jl
movsb
fstpt
jbe
int
sub
or
inc
push
addr16
push
mov
inc
lret
mov
cmp
cltd
fwait
jb
dec
or
in
mov
stc
adc
sub
jns
dec
daa
add
out
and
push
cmpsl
mov
test
es
dec
xor
cltd
pop
sub
mov
bound
pop
mov
movsb
lock
push
int
sub
xor
pop
cltd
fcmovb
mov
mov
repz
or
pop
xchg
inc
add
sbb
int
loop
inc
jmp
icebp
sub
jle
ja
dec
aad
jecxz
xor
jo
in
imul
insb
aaa
dec
out
or
int3
das
inc
adc
ja
pop
jno
cmp
mov
test
push
das
cmp
pop
cmp
jmp
adc
les
iret
dec
movb
movsl
stos
and
pushf
cmp
sarb
or
testl
inc
imul
in
lret
inc
loopne
lock
in
mov
pusha
and
and
stc
test
mov
and
int
fwait
cmp
cltd
inc
stc
mov
sbb
in
sbb
fisttpl
dec
aam
shrl
gs
outsl
adc
lret
ljmp
test
lods
or
es
test
popf
adc
sahf
cld
mov
xorb
int
sbb
lret
adc
and
mov
sbb
jge
xlat
call
ffree
rorb
sub
enter
fdiv
push
fcmovbe
and
dec
cmp
jbe
add
ds
cmp
push
dec
ds
xor
sub
fstp
and
adc
and
jp
and
pop
xlat
xchg
pusha
adc
pop
aas
sub
popa
or
sbb
push
fdivs
add
cs
push
push
cmp
repz
dec
xor
fiaddl
dec
repz
movsb
inc
xor
loope
sti
lods
sti
out
daa
add
dec
sbb
enter
rclb
in
adc
push
mov
mov
inc
mov
int3
mov
out
stos
push
out
insl
sbb
out
lea
mov
mov
xor
pop
std
addb
cli
push
cs
and
jnp
push
mov
out
ljmp
out
out
xchg
das
les
mov
inc
jae
sbb
pop
movsl
jb
pop
sub
sahf
ja
pop
mov
xchg
push
call
pop
xor
mov
push
ss
rorb
cmc
jne
js
mov
fisubrl
stos
mov
sub
sub
mov
nop
adc
dec
cmpsb
mov
or
mov
mov
add
int
cmp
cld
test
loop
rcr
xor
push
xchg
or
data16
jbe
icebp
or
jge
cli
jmp
mov
cmpsl
stos
mov
push
mov
lea
scas
mov
or
add
test
inc
ljmp
cmp
sbb
adcb
push
inc
add
mov
test
enter
andb
jmp
lods
inc
pop
sub
cld
xor
cmp
mov
jmp
inc
test
ret
cs
xor
hlt
pusha
ds
mov
xchg
xchg
cmp
lds
pop
repnz
jo
aaa
lods
outsl
imul
test
inc
loope
fwait
pop
mov
push
stos
das
push
stos
std
mov
stos
push
and
xchg
int3
lods
call
and
out
mov
mov
and
imul
mov
inc
cwtl
adc
aad
scas
movsb
sbb
jns
dec
scas
add
sbb
pop
xor
fsubrl
inc
repz
stos
lds
mov
and
int3
mov
jmp
mov
adc
or
adc
jge
xor
pusha
fcoml
inc
push
mov
and
imul
fildl
push
lcall
mov
jmp
jns
movsl
adc
pushf
mov
mov
call
test
test
sub
leave
movsl
movsb
cmp
out
mov
jb
nop
shr
out
xchg
lods
lods
cs
ljmp
mov
mov
xor
fldl
loopne
nop
jle
mov
xchg
pop
daa
mov
add
add
jmp
and
xchg
rolb
test
xchg
sub
and
sub
movsb
cmpsb
cli
cmp
cli
cmpsb
movsl
pop
div
dec
int
sbb
pop
shr
rcr
add
dec
leavew
stc
ror
into
sub
adc
scas
sbb
xor
mov
mov
popa
inc
rcl
test
jg
js
fbstp
int3
ljmp
xchg
roll
mov
push
jns
cmp
mov
sbb
push
insb
outsb
inc
sbb
imul
outsl
jne
push
outsb
dec
stos
push
jmp
lret
cwtl
mov
mov
or
sub
jg
stos
cmp
pusha
scas
push
mov
dec
add
cmp
addr16
dec
add
inc
mov
lods
lods
push
jns
pop
nopl
sub
push
inc
aas
neg
or
popf
and
cld
ret
sbb
fisttpl
loopne,pn
gs
out
cmp
jo
loop
mov
imul
out
mov
cmp
sbb
les
inc
mov
into
push
out
shll
loopne
mov
mov
addr16
jae
rol
das
fisttpl
scas
aad
in
loopne
cmp
and
ficomps
and
add
mov
ljmp
call
imul
adc
out
gs
adc
inc
out
fidivl
cli
lods
nop
movsbl
fs
mov
cmp
mov
ljmp
sarb
lds
jbe
push
outsb
mov
ljmp
imul
inc
test
or
paddd
shl
xchg
jae
fcmovnu
in
out
loope
fcompl
push
pop
scas
mov
scas
push
movsb
out
xchg
push
std
daa
adc
or
mov
lea
mov
jne
push
xlat
call
outsb
jb
jecxz
mov
lods
jae
pop
mov
push
push
pop
sub
movsl
adc
mov
mov
loop
loop
aam
rolb
mov
xor
sbb
bound
inc
mov
inc
fwait
aad
in
imul
add
push
out
clc
inc
dec
mov
mov
jns
sti
test
int
mov
out
stos
jmp
mov
testb
std
inc
sbb
aad
ss
data16
rol
push
popf
mov
popf
adc
cwtl
and
push
or
and
pop
orb
dec
mov
xor
cmp
adc
inc
inc
fidivrs
pushf
mov
adc
addb
cmp
cli
add
mov
stos
and
divb
pop
jge
cs
add
mov
push
js
orb
sub
jae
mov
or
scas
push
push
mov
push
push
push
sub
push
cmp
fwait
jp
shll
pop
jp
sbb
jb
mov
mov
insb
dec
or
mov
sbb
fldenv
and
gs
mov
in
mov
inc
rolb
pop
xchg
sahf
cwtl
cwtl
std
mov
stos
inc
orl
mov
pop
mov
pushl
sub
lcall
test
cmp
adc
sub
in
movsl
clc
pop
push
pop
jb
mov
xchg
and
pop
jl
adc
sti
sub
cwtl
dec
dec
cmpsb
xabort
mov
aas
in
lods
jno
sub
mov
shl
and
nop
je
pusha
xchg
inc
push
cmp
cmpsl
cld
mov
js
sub
test
jmp
or
pusha
sub
mov
sbb
xchg
lds
mov
jae
jnp
insl
jl
shrb
out
sub
ss
loope
shlb
inc
ss
inc
push
imul
fiadds
in
ret
sub
cmp
idivb
clc
mov
fstps
ud1
mov
int
std
xchg
mov
movsb
sub
pop
fsubl
enter
sbb
ja
push
mov
mov
push
xlat
fs
xchg
mov
popf
psllw
movsb
cmp
orl
add
inc
cwtl
pusha
cli
sti
test
imul
out
push
call
imul
mov
jle
mov
xchg
and
push
sub
or
js
mov
mov
mov
outsl
js
nop
cwtl
pop
inc
or
cli
inc
mov
sbb
xor
adc
out
cmpsl
lcall
int
sbb
jp
cmpsl
imul
mov
rcrb
fwait
ljmp
adc
mov
jecxz
addr16
inc
mov
imul
aad
push
mov
or
push
in
dec
mov
adcb
inc
sub
xor
mov
mov
adc
or
mov
daa
mov
dec
stos
sbb
in
cld
push
xor
or
or
das
dec
and
pop
repnz
mov
jbe
mov
cwtl
mov
stos
out
mov
lock
cli
shrb
js
sarl
imul
sbb
jbe
out
mov
sbb
push
addr16
lods
jbe
fld
cmc
bound
push
or
add
mov
adc
sbb
xchg
insl
aad
adc
into
or
jnp
popf
sub
adc
push
inc
pusha
testb
int
jns
inc
mov
push
leave
push
xchg
cmp
jmp
push
je
test
mov
jnp
dec
sbb
and
jmp
jns
mov
cmp
mov
fistps
jae
xchg
int
mov
ret
adc
js
mov
push
push
sbb
dec
xchg
cmpsb
pop
mov
fimuls
ja
pop
jo
cld
xor
insl
sarb
push
iret
scas
cmpsl
cmp
cli
divl
pop
cmpl
ret
insb
popf
fstps
cmp
outsl
orb
sbb
sub
lods
and
add
lea
and
push
push
add
inc
fwait
dec
cwtl
xlat
or
jo
mov
enter
mov
in
out
cwtl
sub
adc
aam
stos
dec
mov
xorl
fwait
das
and
jl
dec
pop
mov
test
fs
inc
dec
cwtl
inc
sub
sete
push
sub
mov
rorl
adc
insl
xor
or
divl
and
out
call
adc
dec
push
ljmp
int
gs
sti
mov
mov
insb
cmp
jle
pushf
and
push
cmpsw
jge
stc
das
ret
stos
or
xor
mov
mov
sbb
inc
jb
push
ret
mov
push
xor
mov
loop
cmp
mov
sub
addr16
cmp
or
pop
jp
stos
out
or
stc
mov
loope
pop
and
loop
negl
mov
push
repnz
push
mov
xorl
or
fldt
call
in
test
test
jb
addr16
movsl
shl
sub
and
jb
mov
mov
pop
dec
add
push
inc
add
mov
xor
lea
mov
add
sub
add
dec
and
lea
mov
add
call
add
dec
inc
sub
lea
movswl
inc
dec
add
inc
add
lea
mov
sub
add
inc
add
or
lea
movswl
add
add
dec
add
call
sub
lea
mov
dec
call
inc
dec
add
sub
call
lea
push
imul
dec
sub
inc
add
call
or
lea
imul
inc
dec
inc
call
add
pop
add
lea
imul
add
inc
pop
dec
add
pop
sub
sub
lea
mov
pop
dec
add
sub
dec
xor
lea
movzbl
dec
pop
add
sub
pop
dec
add
mov
lea
mov
call
dec
sub
inc
add
ret
or
lea
push
imul
inc
push
inc
add
push
add
and
push
lea
mov
push
dec
dec
mov
add
inc
push
xor
ret
push
lea
push
imul
sub
push
inc
dec
push
inc
xor
lea
push
add
dec
add
call
inc
xor
lea
sub
add
dec
inc
and
lea
imul
dec
dec
sub
jmp
add
mov
add
inc
movzbl
and
lea
inc
add
sub
inc
add
inc
sub
movzbl
lea
inc
sub
inc
add
add
lea
inc
mov
inc
mov
dec
inc
add
and
lea
imul
cmp
jb
dec
xor
inc
dec
mov
sub
and
mov
lea
movswl
inc
inc
inc
sub
add
and
lea
mov
imul
inc
cmp
jb
inc
mov
sub
sub
xor
xor
lea
xor
mov
dec
pop
add
inc
test
jbe
dec
and
lea
mov
dec
dec
dec
sub
or
lea
inc
sub
inc
dec
add
lea
inc
mov
inc
sub
inc
dec
and
and
lea
mov
mov
dec
dec
movzbl
sub
sub
add
add
lea
and
mov
inc
mov
inc
add
mov
inc
xor
mov
lea
movzbl
mov
inc
inc
add
add
sub
lea
dec
jne
mov
mov
dec
add
inc
inc
sub
lea
imul
add
dec
add
mov
add
xor
lea
mov
inc
dec
add
sub
mov
sub
lea
test
jbe
movzwl
inc
sub
sub
dec
and
lea
mov
inc
sub
dec
dec
sub
lea
mov
inc
add
add
inc
dec
sub
lea
and
mov
dec
mov
dec
add
movzbl
inc
and
add
lea
imul
and
dec
jmp
sub
add
lea
mov
add
sub
pop
ret
push
sub
dec
and
lea
mov
add
dec
dec
sub
dec
push
add
lea
push
imul
dec
push
dec
dec
push
add
sub
lea
mov
add
dec
inc
sub
add
lea
mov
add
inc
sub
inc
xor
lea
imul
inc
call
call
add
add
sub
xor
lea
imul
dec
dec
dec
dec
or
lea
imul
add
dec
add
dec
or
lea
imul
inc
add
inc
dec
xor
lea
mov
cmp
je
dec
dec
inc
add
and
lea
mov
inc
inc
dec
dec
and
lea
mov
add
add
inc
sub
and
lea
mov
add
inc
sub
add
add
lea
mov
inc
add
dec
add
or
lea
mov
inc
add
inc
sub
or
lea
imul
inc
inc
dec
add
or
lea
imul
add
inc
dec
add
xor
lea
ret
mov
add
pop
inc
ret
push
dec
mov
inc
sub
push
lea
imul
add
inc
dec
push
dec
push
inc
push
and
lea
push
movswl
jmp
call
dec
inc
add
push
inc
and
xor
lea
mov
movzwl
mov
dec
add
mov
dec
add
test
je
sub
lea
mov
inc
sub
dec
dec
or
lea
mov
imul
add
mov
add
dec
add
xor
repnz
lea
mov
add
dec
jmp
add
inc
dec
sub
lea
imul
inc
dec
inc
dec
pop
pop
ret
push
xor
lea
mov
dec
inc
inc
dec
sub
lea
mov
add
sub
dec
inc
xor
lea
movswl
dec
sub
dec
dec
and
lea
mov
inc
dec
inc
inc
pop
ret
sub
or
mov
lea
mov
mov
sub
dec
mov
inc
inc
mov
and
lea
xor
mov
sub
mov
dec
inc
inc
inc
and
lea
mov
inc
inc
cmp
jb
inc
push
inc
sub
push
lea
imul
push
inc
inc
mov
inc
inc
xor
or
lea
xor
mov
inc
xor
dec
dec
push
inc
add
xor
lea
imul
mov
dec
jmp
pusha
push
or
outsb
mov
sbb
xchg
inc
dec
enter
jp
lock
sbb
sbb
sbb
fistpl
xchg
mov
and
cwtl
nop
shlb
hlt
scas
inc
sub
repz
sub
aaa
sub
roll
sub
jecxz
lret
mov
in
mov
lret
xchg
mov
leave
rcl
nop
cld
adc
popa
push
ds
mov
mov
jno
add
jne
movsl
dec
shlb
repz
jg
fwait
stc
inc
push
repnz
push
xlat
sub
sbb
mov
mov
lret
dec
dec
or
add
fs
inc
sbb
or
outsl
push
fdiv
or
sbbb
mov
fdivrl
jns
fld
or
or
xor
push
and
and
popa
divb
adcb
lods
popa
out
test
dec
loope
ret
lock
cmpl
dec
jbe
jne
jnp
xchg
cmp
int3
loope
jp
and
arpl
mov
mov
das
adc
push
lock
arpl
inc
aaa
jecxz
gs
pop
fisubrs
lds
push
dec
out
movsb
lahf
movsb
lods
dec
les
data16
iret
repnz
notl
mov
fwait
adc
scas
mov
xlat
cmc
xchg
dec
jns
pop
pop
xlat
sbb
test
mov
repnz
xor
fs
aaa
fsubs
pop
sti
and
mov
shrb
stos
imul
sub
nop
pop
cmpsb
repz
jo
subb
push
cli
adc
test
lea
out
imul
pop
aad
xchg
roll
repz
inc
pop
xchg
stos
sbb
jmp
es
dec
push
mov
or
stc
jl
add
jns
loope
jno
pop
into
fiadds
xlat
cwtl
gs
cmp
addr16
cmp
or
fisubrs
insl
scas
jns
cmp
mov
pop
mov
outsl
jbe
or
or
pop
ror
lahf
add
insl
mov
test
imul
mov
jle
mov
mov
or
or
mov
enterw
jno
stos
sbb
nop
push
pop
movsb
xor
sub
ljmp
pushf
adc
ss
dec
xchg
sbb
pushf
pusha
mov
out
setnp
out
das
xchg
push
insl
pop
jnp
push
push
jbe
dec
mov
lock
adc
orb
jge
ret
inc
mov
add
xor
jecxz
sub
pop
movsb
xor
out
pop
adc
xor
sbb
mov
clc
cmp
jno
enter
and
data16
push
mov
ret
pop
cmpsb
jmp
ds
dec
mov
repz
icebp
push
add
addr16
popf
lcall
inc
mov
mov
mov
call
or
out
mov
push
xchg
jae
fwait
jge
jne
aaa
jno
ret
loope
lret
pop
inc
hlt
jae
lret
adc
lds
and
fdivs
jle
jl
xchg
cmp
sub
push
fdivrl
xlat
cmpsb
cmp
inc
fwait
daa
out
pushf
notb
nop
testb
or
pop
push
xor
aam
fs
xchg
adc
orl
in
push
ss
je
xor
dec
cmp
jp
pop
xchg
lcall
lret
or
xchg
es
gs
push
inc
jl
adc
sbb
int3
xchg
jo
inc
rcll
lcall
xor
sub
jae
adc
mov
cwtl
dec
test
insl
adc
xor
sub
call
add
cmp
lret
dec
ja
pop
cmp
out
cmpsl
shrl
inc
cmp
out
jb
jl
sub
nop
sbb
xor
xor
mov
push
inc
adc
push
aad
cmc
xchg
sti
fst
dec
fisubrs
push
add
cltd
rcl
sub
adcb
test
movsb
push
pop
sub
aam
jge
push
pop
into
cs
jmp
push
inc
pop
mov
aas
stc
cmp
cmp
mov
call
lods
xchg
or
and
wbinvd
test
stc
pop
adc
mov
jae
sub
adcb
xchg
clc
mov
pop
aad
lods
test
setns
pop
scas
adc
jns
in
push
popa
mov
iret
mov
cltd
mov
mov
jmp
icebp
sbb
jle
arpl
jl
pop
cs
scas
ljmp
pop
int3
dec
mov
xchg
in
divb
pop
addr16
out
pushf
sub
xlat
inc
sub
cmpl
and
fucomp
test
xchg
add
push
add
pop
push
call
sbb
mov
adc
stos
aaa
movsl
gs
scas
scas
lret
mov
sbb
push
mov
fidivrs
jne
cmp
leave
mov
and
and
jno
into
repz
mull
xchg
jae
xchg
outsb
icebp
mov
pop
ljmp
inc
pop
pop
sub
fdivrs
mov
dec
fdiv
icebp
scas
or
push
ss
xchg
mov
ret
push
inc
sub
cs
mov
fs
jbe
orl
test
dec
das
xor
add
subl
adc
mov
cltd
jbe
insl
ds
std
cld
xor
test
rcl
mov
dec
adc
cli
mov
cwtl
lret
in
neg
cmp
mov
jge
hlt
ljmp
push
xchg
push
or
push
xor
push
xor
decl
mov
int3
jbe
pushf
data16
xor
sub
jne
sub
mov
xor
aam
jo
lahf
jmp
add
gs
imul
add
dec
and
jae
mov
imul
ds
mov
push
jno
iret
jmp
mov
stc
cmp
pushf
ss
bound
adc
jne
or
jl
cltd
xchg
add
jmp
mov
hlt
xor
pop
add
jge
push
mov
lods
sahf
out
jg
pop
gs
cmc
push
mov
mov
mov
fldcw
outsl
sbb
lods
jnp
rcrb
cwtl
jne
push
add
pop
int3
daa
push
popa
into
ret
push
scas
mov
push
adc
sti
gs
fidivrl
jge
sbb
les
sub
push
js
das
aas
pop
cmp
les
mov
mov
xchg
xor
arpl
push
push
push
and
int
xchg
fwait
jae
ljmp
imul
cmc
call
mov
int3
xlat
xorb
cld
shlb
lds
rorl
add
add
stc
dec
mov
outsl
lahf
and
pop
mov
mov
iret
lahf
sub
cmc
mov
dec
roll
sub
fwait
sub
fistps
jecxz
in
mov
mov
sbb
test
lods
and
xchg
mov
sti
rolb
je
add
cmp
lcall
and
inc
inc
cmp
sbb
scas
insl
mov
lea
int
addl
pop
jb
lds
fiadds
sub
adc
mov
bound
fwait
ror
push
clc
aam
pop
xorl
dec
lock
or
flds
xchg
jecxz
lds
pop
sub
cmpsl
cmp
ds
mov
lods
lret
test
bound
adc
add
loop
mov
push
call
inc
loope
cmp
sub
les
arpl
loopne
in
and
pop
dec
fst
inc
lods
mov
test
or
sbb
cmc
pushf
mov
imul
pop
push
xor
fiaddl
incl
test
pop
inc
pop
shrb
negb
mov
std
ja
dec
xchg
std
sbb
jb
pusha
jne
jbe
sub
push
cmpsl
xchg
shlb
loopne
clc
ss
popa
addb
xchg
xchg
jle
jmp
sub
pop
mov
fcoml
jnp
lret
call
inc
cmc
mov
in
inc
pop
mov
xor
sahf
inc
and
cwtl
cmp
jae
data16
add
or
rclb
mov
inc
stc
in
jb
pushf
inc
pop
stc
or
shlb
cmp
clc
push
shlb
mov
xchg
lock
push
decl
push
icebp
lret
adc
addr16
movsb
rolb
mov
pop
and
cmp
xor
outsb
xchg
sti
xchg
loop
aas
stos
cmp
shrb
data16
push
out
rcll
mov
add
shrl
fistps
xchg
dec
pushl
aas
imul
stc
les
dec
andb
test
sub
rolb
push
mov
pop
add
enter
scas
push
or
mov
dec
push
rcrb
insb
sub
aam
popf
xchg
popa
mov
loope
invd
jo
jge
xchg
out
fsubr
sub
mov
lcall
in
mov
ret
dec
sub
jl
push
adc
dec
pushf
jmp
js
pop
mov
jge
in
dec
loope
inc
into
sahf
jb
mov
into
mov
pop
inc
jnp
add
insb
mov
cltd
mov
mov
insl
xchg
inc
push
cmpsb
jmp
xorl
fmuls
repz
mov
adc
cmc
inc
aam
int3
iret
movsb
or
push
dec
es
jmp
adc
dec
sub
dec
cmpsb
and
mov
jmp
test
pop
movsb
pop
in
mov
fdivrl
nop
sbb
sub
shll
or
lock
addr16
xor
sub
ljmp
ret
mov
test
sti
loopne
push
sahf
ds
jle
add
and
sub
inc
imul
inc
jb
andb
add
adc
add
adc
aam
adc
or
mov
and
cmp
stc
dec
mov
sahf
sub
outsl
in
jne
cmp
fs
ret
dec
call
inc
xor
enter
scas
mov
aam
lea
xchg
in
roll
sub
dec
sub
add
lahf
out
pop
mov
jae
pop
sbb
js
adc
xorb
repnz
pop
cmpsb
mov
pop
cmpsl
mov
jmp
adcl
fcmovu
lcall
mov
inc
xchg
push
in
jae
adc
xlat
pop
popl
scas
pushf
adc
add
mov
dec
cmc
test
and
mov
fildll
add
es
xchg
sub
in
aad
dec
test
adc
je
pop
subb
mov
pop
push
mov
pushf
cli
xor
xorl
dec
add
mov
scas
repnz
pop
in
aas
ss
mov
push
dec
mov
ret
sub
or
flds
sub
jle
fcomi
test
jnp
xor
fisubrs
mov
lds
lret
dec
dec
call
jnp
mov
mov
adc
ret
pop
add
aad
push
dec
aaa
out
push
pusha
push
mov
pop
test
es
push
xor
cs
dec
xor
mulb
add
or
sbb
into
cmp
fwait
dec
cmp
inc
mov
cli
dec
stos
rolb
mov
and
ss
mov
mov
ss
cmpsl
or
inc
cmp
in
and
xchg
ds
dec
mov
dec
fistpl
iret
out
adc
fistpll
popa
cmpsl
inc
cmc
mov
push
push
fdiv
int3
aam
or
sub
es
push
scas
ds
pusha
enter
bound
cmpsl
dec
xchg
mov
lret
pop
inc
mov
cmp
lock
outsl
sub
adc
cli
push
sbb
out
das
cmp
xchg
lods
fisubs
in
cmp
loopne
in
push
sbb
pop
dec
and
push
inc
out
decb
popf
mov
stc
cmp
jge
jp
lock
mov
test
mov
aam
lcall
fisubs
ds
add
loop,pt
inc
and
push
pop
mov
in
mov
ds
push
subl
nop
cmp
call
fisttpl
shll
cwtl
mov
jge
popf
xchg
mov
rolb
jge
push
repnz
sti
scas
sbb
pop
stc
lahf
pop
push
fistps
rclb
inc
sbb
adc
shrl
lret
iret
cs
sub
dec
nop
dec
cmp
roll
ja
es
xor
xchg
out
mov
ret
lret
or
inc
inc
sbb
inc
push
popa
jo
adc
ret
mov
jne
jmp
adc
test
dec
cmpsb
leave
insb
sub
inc
loope
imul
leave
hlt
hlt
test
add
loopne
pop
xor
stos
cmpsb
lock
cmp
jge
sti
mov
xchg
sub
adc
hlt
cmp
cli
rorl
mov
pop
or
fs
pop
jle
jns
fwait
int3
mov
push
mov
or
ret
mov
mov
daa
and
movsl
jnp
jb
mov
xchg
clc
jle
pop
gs
push
cmpsl
xchg
repz
inc
out
inc
fld
sub
aam
and
xor
sti
ret
push
out
mov
fs
dec
lea
call
jg
call
mov
dec
fistps
mov
add
mov
mov
hlt
lahf
jb
scas
in
icebp
jns
mulb
xchg
loopne
sti
aam
repz
inc
ret
fdiv
ficomps
cmc
lret
mov
push
cli
sub
aad
enter
dec
xchg
es
out
xchg
das
dec
in
inc
nop
les
add
bound
aas
cmpsb
jle
and
sahf
int3
popa
inc
inc
pusha
mov
mov
lret
xor
cld
or
pop
ror
cmp
xlat
cmp
xchg
in
ljmp
mov
and
jl
xor
sub
les
out
cwtl
push
sti
xchg
lret
cmp
or
cmp
or
lock
inc
mov
or
ss
mov
mov
leave
mov
out
push
pop
cmpsb
orl
lock
in
dec
jnp
je
xchg
popf
mov
sub
ja
in
jno
shlb
mov
or
out
imul
xlat
jb
mov
jge
popf
mov
and
sub
add
push
adc
dec
push
lea
xchg
int3
fisubrl
ja
sub
loopne
loope
std
add
jmp
shrl
or
pop
mov
cmp
and
aam
inc
es
jnp
dec
icebp
stos
add
into
inc
div
pop
insb
lret
dec
or
push
mov
mov
loopne
jmp
pop
xchg
into
into
xchg
lds
xchg
jp
gs
imul
out
jl
mov
jno
add
insl
lret
adc
push
dec
fnsave
fdivrs
xlat
in
aad
scas
inc
jbe
jmp
call
mov
lods
mov
lret
jmp
xor
cmp
popf
subl
xchg
fisttps
test
cmp
mov
js
jmp
sbb
inc
jl
adc
jmp
lcall
shr
cmc
adc
in
hlt
pushf
and
and
stos
mov
lret
inc
insl
inc
push
insl
gs
scas
and
add
dec
lret
je
inc
fstpl
popa
movsb
jb
fwait
rorb
sub
jno
leave
mov
test
paddusb
xchg
out
roll
insl
lret
mov
ljmp
pop
ret
cmpl
andb
stos
inc
or
imul
popf
pushf
test
int3
pop
into
add
dec
push
xchg
jns
cmp
pop
push
sahf
inc
movsb
jmp
ret
xchg
aam
mov
mov
xchg
or
addr16
scas
pop
adc
addb
xchg
mov
sbb
nop
and
mov
icebp
inc
push
lock
lea
insl
mov
mov
inc
lret
repnz
and
int
iret
xchg
aad
sub
call
jl
adc
sub
push
sbb
adc
inc
jl
enter
mov
fstpl
sarb
fstpt
sarl
subl
xchg
mov
cmpsl
daa
ds
sub
mov
adc
push
cli
fisttpl
adc
sub
jb
and
lcall
addr16
aaa
mov
xor
push
dec
dec
pop
test
inc
cli
lock
aas
push
cli
lea
sub
es
dec
out
imul
sub
in
imul
add
cmp
mov
pop
jns
cmpsl
xchg
sub
or
in
sub
xor
lea
in
sub
inc
jmp
loop
push
cmpsl
call
and
int
adc
jg
pop
pop
add
cmp
jno
dec
cmp
insb
and
inc
sub
push
and
xchg
sbb
xchg
lods
jle
int
stc
imul
jno
mov
or
push
mov
mov
fidivrs
pop
out
imul
dec
arpl
fiaddl
or
and
lea
mov
fnstenv
xchg
fs
shlb
add
and
mov
push
pop
push
adc
test
push
out
mov
leave
xchg
jne
push
mov
cltd
inc
out
or
inc
xchg
mov
jmp
dec
lahf
jae
inc
movsl
jae
mov
mov
insl
sub
jge
mov
dec
pusha
cmp
lods
mov
lret
lods
fidivrs
jns
ds
mov
xlat
call
fisubl
adc
push
xchg
cmp
test
mov
pop
insb
popf
xchg
jnp
pushf
adc
es
divl
das
dec
pop
inc
pop
enter
loope
enter
loope
push
icebp
mov
repnz
idiv
in
push
movsl
pushf
jnp
arpl
shrb
mov
data16
in
xor
inc
xchg
loope
mov
mov
inc
leave
sub
movsl
or
mov
push
stos
push
in
cwtl
sub
jle
sbb
mov
lds
jl
xor
jnp
test
and
es
movsl
jbe
xchg
xor
mov
or
addb
jl
test
gs
mov
lret
push
imul
mov
pop
out
pushf
pop
lock
xor
inc
push
into
xor
push
adc
dec
pop
xor
and
sub
mov
clc
lods
mov
jnp
std
push
mov
jno
jno
cltd
cmpsl
scas
lock
and
insl
cmp
push
fsubrp
cmp
outsb
mov
out
sbbb
lea
mov
insl
push
sti
mov
pop
movsl
rcrl
xor
les
clc
shrb
sbb
jne
dec
adc
daa
xchg
pushf
aas
sub
orl
push
cs
jb
xor
mov
pop
mov
mov
mov
das
mov
push
data16
add
js
mov
dec
mov
ljmp
adc
addb
jne
movsb
xchg
aaa
jp
lret
pop
mov
and
out
adc
add
in
jl
pop
adc
das
adc
push
mov
xchg
jp
orb
mov
lret
jge
push
xorb
or
pop
push
dec
scas
xchg
test
aam
js
jp
jecxz
movsb
out
das
dec
cmp
jb
push
adc
adc
push
rcr
xchg
daa
shlb
sub
and
sbb
add
inc
push
ja
mov
xchg
subb
pop
fwait
cmp
pop
mov
loopne
mov
add
es
cltd
rorb
xor
jne,pn
cmp
scas
bnd
xchg
ljmp
push
out
out
xor
xchg
repz
repz
jb
leave
cmp
mov
mov
popa
mov
shlb
adc
cmp
addr16
mov
pop
repnz
jmp
jecxz
or
xchg
push
aaa
leave
ret
xor
xchg
shrl
std
cld
pop
mov
adc
pop
or
in
stos
adc
loop
je
stos
adc
pop
hlt
mov
lahf
pop
xor
jo
in
jp
lods
mov
xchg
dec
xchg
xchg
lcall
inc
and
ds
test
sbb
inc
sub
fisttpll
imul
test
js
sti
rorb
mov
add
adc
xor
xchg
pop
xchg
fwait
lret
xor
stc
adc
pop
loopne
dec
pop
mov
cmp
lds
and
xchg
pop
loopne
push
pop
add
cs
dec
push
cmpsb
shr
sub
in
inc
pop
daa
jne
push
scas
sbb
test
sahf
xchg
jb
xchg
mov
jg
outsb
dec
pop
jae
mov
loope
sbb
jp
fisttps
sub
mov
xchg
lods
sbb
pushf
aaa
sbb
hlt
out
shr
imul
sbb
movsl
cltd
loope
inc
out
stos
xchg
arpl
push
xchg
push
jge
mov
andb
mov
xchg
xchg
sahf
inc
rol
icebp
insb
push
or
xchg
cwtl
aad
mov
cltd
bnd
sarl
enter
xor
mov
sub
clc
xchg
dec
jae
xchg
cmp
std
push
and
ja
mov
pop
pop
lods
movaps
lahf
sahf
lea
shrb
inc
ror
enter
mov
int
fiaddl
and
lcall
lret
mov
pop
call
jp
sti
rcrl
add
std
shlb
jns
mov
aad
fcoms
imul
je
add
sbb
jp
cmp
pop
or
aas
fs
cmp
movsb
sub
gs
or
jg
das
shlb
shr
pop
nop
sarl
lcall
je
dec
scas
and
jecxz
jbe
fnstenv
jecxz
int3
sbb
xchg
cmp
jmp
les
notl
dec
sub
dec
dec
jg
in
xchg
cltd
fs
sub
jecxz
mov
jbe
xor
dec
or
mov
cmp
rorl
inc
cmp
popf
jl,pt
xor
insl
inc
lds
and
dec
cmp
fmuls
cmp
sub
jo
mov
sbb
mov
add
pop
sbb
mov
inc
push
inc
enter
push
adc
pop
mov
adc
js
add
sub
ret
mov
out
pop
aas
inc
adc
adc
es
add
cmp
shll
jb
jecxz
pushf
fidivrl
in
xchg
sti
mov
mov
push
dec
mov
xchg
addr16
int3
sbb
push
jp
lcall
pop
or
mov
cmc
add
xor
pushl
adc
jle
and
xlat
mov
xor
mov
in
adc
test
lret
pushf
adc
call
or
andl
xchg
ret
dec
mov
popl
sub
push
jbe
mov
cmpl
sahf
sahf
pop
icebp
xor
xchg
ret
xchg
inc
std
xlat
cmp
pop
xchg
lods
push
xlat
mov
je
xlat
dec
push
aam
jge
notl
sub
dec
xchg
sub
bound
enter
xor
aas
imul
in
loop
stos
lretw
nop
pop
repnz
lret
outsb
fnsave
cmpsb
sbb
push
lcall
bound
push
insl
jno
jl
je
add
push
ljmp
subl
psllq
pop
and
mov
mov
jge
fcmove
gs
push
daa
out
xchg
std
fucomp
int3
cs
sub
in
je
sub
loop
and
in
jmp
push
stos
push
and
cmpsb
push
push
pushf
das
ficoml
dec
ss
enter
divb
fsubr
js
ret
push
or
xor
dec
ja
jnp
sbb
jl
into
sbb
stos
sbb
jge
out
pop
pushf
push
or
stos
stos
test
or
adc
push
inc
arpl
lcall
icebp
je
loopne
imul
add
js
cli
cli
xchg
das
pop
pop
xor
arpl
cmp
pusha
mov
sbb
sbb
push
outsl
mov
and
mov
jp
xor
mov
stos
dec
jb
iret
jnp
rcll
sub
dec
ret
mov
inc
sti
adc
mov
mov
mov
mov
sbb
xchg
and
mov
mov
scas
iret
pop
dec
icebp
xchg
loope
xor
mov
stc
xor
movsb
mov
jmp
pop
andl
sbb
jbe
out
mov
out
adc
pop
inc
adcl
adc
mov
or
les
outsb
pop
ds
gs
and
arpl
ret
aad
fs
mov
ret
lret
stc
pop
cmpsl
sub
rcr
jg
lods
and
sti
jg
loop
dec
inc
pop
rcrl
in
add
sub
stos
stos
xchg
pop
shrl
or
clc
outsb
pushw
aaa
dec
cs
mov
mull
insl
dec
push
popf
xchg
test
addb
clc
shlb
mov
dec
push
jecxz
mov
push
outsl
ds
cltd
fistps
or
and
roll
dec
pop
lahf
ja
and
repnz
test
inc
lods
mov
xchg
je
xchg
test
ljmp
cmpsb
cmp
sub
shrl
imul
loope
xchg
cmp
push
sbb
test
sbb
dec
repnz
inc
jg
sbb
bound
data16
pusha
imull
sbb
push
add
dec
lods
shrl
jbe
in
mov
mov
push
dec
push
mov
cmp
mov
shlb
push
mov
mov
xchg
pop
insl
inc
fdivrl
cmp
cmp
sub
lahf
pop
hlt
int3
sub
into
sbb
dec
insl
cld
lret
xchg
aam
imul
pop
insl
jb
add
mov
imul
mov
in
jg
pop
pushf
lods
mov
or
lods
and
repnz
movb
popf
jmp
inc
pop
test
push
ljmp
sti
test
push
mov
mov
outsb
push
or
mov
int
hlt
xchg
xchg
and
shll
lea
cmc
jae
push
dec
inc
jns
loopne
out
in
clc
lahf
fisttps
xchg
push
mov
fnstcw
push
xor
adc
das
repz
mov
daa
sub
punpcklbw
scas
adc
repz
dec
pop
lret
fdivrl
xchg
bound
sub
out
jg
cmpsl
sbb
push
jae
pushl
adc
xchg
stc
mov
xchg
push
repz
jne
sbb
jne
push
jb
shl
sbb
sarb
je
nop
push
push
pmuludq
push
push
sub
mov
xlat
pop
adc
mov
mov
push
lds
jo
or
stc
fcmovu
daa
out
leave
imul
clc
sub
fs
or
pusha
mov
jb
lea
lcall
push
arpl
test
and
sbb
xlat
and
insl
add
js
or
mov
ds
cmp
nop
adc
sbb
xchg
dec
jo
xchg
fnop
mov
out
dec
jne
in
mov
mov
bound
adc
loope
xchg
mov
pusha
xchg
xor
xorl
icebp
test
pop
aam
push
mov
repnz
in
mov
mov
in
gs
inc
ret
in
push
push
pusha
rorl
or
push
insl
xchg
ja
jecxz
aaa
adc
xchg
sub
sbb
bound
scas
adc
jbe
mov
mov
int
mov
shll
mov
cmp
mov
cmp
ja
fwait
int
stc
mov
push
fistpl
test
add
repz
mov
dec
xor
test
mov
cmp
and
movsl
cs
out
dec
gs
js
popa
inc
call
popa
push
mov
int3
cmp
stc
dec
and
aas
out
ffree
sub
popa
lock
scas
push
popa
cmp
mov
insl
cmp
data16
pushf
scas
and
in
fsubrp
jbe
cmc
cltd
inc
out
sub
jb
sarl
sbbb
popf
mov
notl
or
shll
jns
dec
test
jne
aas
and
pop
sub
pushf
sub
and
fwait
jbe
shll
mov
xchg
adc
dec
enter
mov
out
test
inc
sub
repnz
mov
inc
xchg
pop
in
fdivrs
dec
aaa
scas
iret
push
xchg
xchg
gs
pop
inc
je
xor
cwtl
jb
int3
push
dec
lods
push
or
insl
lds
inc
incb
xchg
add
repz
and
insl
xor
jno
xchg
add
sarl
mov
adc
inc
in
ljmp
sub
cwtl
aaa
outsl
mov
sbbl
pop
push
rcl
mov
inc
rolb
mov
call
into
bound
adc
fs
push
lcall
cmpsb
pop
xchg
ret
je
and
push
in
inc
lcall
into
push
fisubl
pop
daa
imul
mov
daa
lahf
fildll
pop
shrl
inc
dec
sub
ja
lahf
mov
hlt
push
out
lds
mov
movsl
xchg
lea
scas
cmp
mov
ds
cmp
jmp
pop
jl
lock
inc
mov
test
outsb
test
addr16
jmp
cmpsb
push
mov
fs
xor
scas
rcrl
les
or
ljmp
push
pusha
rorl
das
mov
or
adc
int
mov
jge
mov
jbe
xchg
xlat
mov
ljmp
push
xchg
data16
std
int3
mov
or
mov
scas
subb
in
or
sbb
ljmp
call
jb
inc
sbb
imul
adc
adc
lods
inc
jecxz
sub
test
xchg
or
mov
or
ret
push
dec
out
mov
repz
in
arpl
push
jge
les
mov
fstpl
xchg
imul
jnp
cmp
out
lods
inc
push
popa
mov
leave
out
mov
daa
mov
xchg
pop
and
out
xchg
lahf
xchg
dec
repnz
cltd
fwait
stos
in
sub
in
pop
push
fsubs
arpl
xlat
fisubs
cld
mov
pusha
mov
arpl
js
add
cmp
push
jnp
scas
mov
inc
scas
pop
stos
cmp
xchg
xchg
test
push
xchg
mov
fsubrs
in
cmp
cmp
sub
bound
aam
mov
push
cld
mov
cmp
dec
ret
in
push
arpl
cmpsl
mov
xchg
lret
push
and
inc
adc
ficompl
pop
mov
fsubrl
push
cli
adc
test
cli
dec
jle
les
push
adc
add
out
lahf
es
xor
jge
in
fnstcw
or
xchg
shlb
add
sbb
cmp
xlat
sub
xchg
cli
pop
pusha
ret
sub
adc
stos
out
push
pop
cmp
pop
pop
fwait
mov
jno
lea
push
int3
mov
cmp
imul
xlat
mov
pop
cmp
mov
sub
pushf
lret
push
inc
loop
mov
xchg
jns
in
pusha
sbbl
and
movsl
push
fs
add
cmc
push
jnp
aad
mov
out
dec
loop
or
cwtl
cld
nop
and
inc
test
mov
lahf
push
aad
xlat
push
inc
pop
pop
sbb
outsb
int
jecxz
repz
mov
test
inc
sub
pop
testb
or
pop
and
jo
fiadds
out
pop
sti
ret
int
fs
lret
mov
pop
inc
lret
fimull
stc
or
adc
dec
push
nop
xchg
inc
lret
out
mov
cmp
int3
dec
cmc
movsl
jmp
xor
inc
jbe
les
cmp
add
mov
jnp
add
and
rcr
adc
mov
sbb
stos
sub
hlt
aaa
or
push
insb
adc
scas
inc
jmp
xor
inc
cmp
cmc
jo
iret
lret
stos
out
xor
aam
scas
js
loopne
jmp
rcrl
fldt
and
push
adc
adc
into
mov
and
cmpsl
jo
mov
ret
mov
sbb
pop
jns
and
push
je
fcomps
lahf
in
pusha
push
cmpsb
test
add
jb
das
fmull
mov
sbb
enter
mov
les
mov
inc
dec
dec
add
clc
imul
mov
lahf
or
xor
sahf
adc
push
cld
mov
mov
dec
sbb
xor
sub
push
and
mov
xor
lods
mov
clc
xor
jb
in
pop
and
fistps
ja
daa
or
hlt
rorl
jmp
pop
add
lods
sub
fnstsw
sarl
xchg
rcrl
adc
stos
jl
push
inc
cmp
je
loopne
xor
in
mov
push
adc
bnd
sbb
hlt
inc
inc
imul
pop
dec
repz
or
pop
inc
fadds
push
mov
repz
xchg
adc
dec
repz
fildl
out
or
sbb
test
shlb
adc
aad
mov
mov
inc
lahf
inc
cld
insb
shlb
mov
mov
scas
sub
sbb
mov
fdivl
mov
dec
push
sbb
iret
xchg
out
loopne
fcompl
rcrl
xchg
jmp
lods
mov
test
imul
cmpsb
insl
sbb
lea
lods
cmpsl
fsubrl
pop
jne
push
aad
negb
cmpsb
and
dec
stos
test
inc
clc
mov
imul
mov
cwtl
pushf
lods
xchg
cmp
add
jp
test
or
in
adc
int
jnp
icebp
mov
or
arpl
xchg
pop
pop
ss
push
jmp
addb
xchg
addl
jne
mulb
jmp
fists
cwtl
adc
push
inc
jae
lea
fidivs
aaa
int3
sahf
aam
rclb
scas
movsb
jmp
mov
xchg
clc
inc
in
daa
inc
inc
outsb
sbb
inc
sub
punpcklbw
cmpsb
rcll
lret
cmp
mov
out
jg
daa
je
scas
jp
push
mov
jbe
push
fnstenv
pop
ss
lds
in
sets
lock
xor
mov
sub
dec
ljmp
daa
dec
mov
dec
addl
xor
push
push
push
mov
mov
les
sub
test
jge
jno
jl
cmpsb
addl
cmpsl
cld
xchg
decl
imul
incl
xor
cmp
pop
adc
and
iret
pop
push
xor
int3
xchg
cmp
pop
sub
dec
sub
ret
movsb
cmp
cmp
mov
dec
push
stos
fwait
jle
cmpb
pop
xlat
sbb
repnz
mov
jno
and
jp
shl
pop
aam
call
lcall
xor
push
in
fbstp
sbb
in
inc
xchg
push
push
shr
mov
ret
xchg
lret
xchg
pop
mov
inc
or
and
add
cmc
pop
out
push
addl
test
hlt
push
adc
out
dec
fldenv
xchg
stc
daa
jge
sub
bnd
cld
es
pusha
ja
pop
dec
xchg
add
push
call
je
mov
shlb
pop
dec
insb
sub
pusha
out
nop
popf
sbb
inc
out
lahf
ljmp
mov
daa
ffreep
xor
cmp
stos
inc
pusha
das
cmp
cs
fdiv
push
inc
push
jnp
cmc
stos
rcr
push
insl
dec
inc
test
int3
movsl
ja
jmp
mov
mov
and
sub
dec
addl
pop
out
cmp
call
arpl
sbb
jbe
shrl
scas
popa
and
testl
push
jle
sbb
jnp
adc
insl
nop
lret
xchg
jnp
push
push
pop
sub
mov
and
push
fisttps
rclb
push
push
jnp
mov
scas
dec
ret
fcomps
push
pop
inc
push
stos
xor
adc
movsl
not
and
imul
out
fwait
shrb
adc
out
repnz
sbbl
jae
mov
xchg
inc
in
sbb
push
sbb
pop
mov
xor
jecxz
xchg
in
adc
push
mov
and
notb
inc
push
and
xchg
outsb
jp
xchg
mov
out
push
push
adc
faddp
xor
or
pop
je
sbb
lret
pop
lret
cltd
push
into
loope
lods
in
enter
loop
cltd
jmp
shrl
jbe
mov
fnstsw
sub
imul
dec
mov
shrd
jp
mov
cltd
pop
into
and
inc
inc
sub
inc
and
shrl
push
sbb
sarl
lods
shlb
cs
ds
ljmp
mov
fisttpl
lahf
mov
or
pop
into
mov
enter
inc
mov
add
jge
ja
inc
push
cs
pop
mov
pop
test
cli
lahf
mov
inc
push
insl
xchg
push
lds
dec
stos
test
in
push
int
std
xchg
test
jge
fldt
adc
sbb
jnp
clc
jecxz
test
xorl
inc
addr16
or
cmpsl
sub
or
jae
cli
lods
cmp
mov
xor
cmpl
pop
xchg
xlat
inc
out
sbb
fwait
xlat
es
dec
ficoms
aad
lret
cwtl
nop
dec
xchg
test
xchg
mov
sub
jb
push
and
jle
fmul
cmp
aas
and
int
std
mov
idivb
ss
xor
loopne
adc
ds
dec
jp
lods
fs
mov
xor
outsl
cmpsl
cmp
in
sub
scas
mov
xchg
xor
mov
test
into
xor
test
je
xchg
fwait
hlt
addr16
mov
mov
mov
aaa
xchg
xchg
jnp
out
xchg
jge
loope
xchg
jl
jo
dec
jb
pop
cmpsb
cli
adc
mov
ds
push
mov
sbb
xchg
jne
dec
mov
ja
std
pop
mov
loop
shl
push
inc
aad
in
pop
pop
inc
repnz
ficoms
xor
sarl
mov
rcll
xor
cmpsl
xchg
and
xlat
mov
inc
pop
fisttpll
sub
push
mov
bts
sub
dec
xchg
mov
push
cmp
push
fs
pop
cmp
ja
dec
das
cld
testl
mov
sub
sub
sbb
jbe
ljmp
jns
cwtl
sbb
sub
mov
clc
repnz
outsl
movq
jle
dec
std
outsl
cmp
dec
les
xor
cmp
movsl
aam
rcl
test
vmovhpd
mov
stos
cmpl
or
repz
das
mov
mov
test
cmp
adcl
lea
and
clc
call
lods
mov
movsl
mov
and
cmp
push
inc
fwait
mov
aam
loopne
cmp
sbb
cld
inc
xchg
outsb
push
inc
repz
in
hlt
jmp
int
mov
jne
mov
test
mov
out
enter
in
les
sub
insl
mov
out
sbb
mov
sub
mov
mov
mov
stos
fcmovb
adc
inc
rclb
sub
jbe
adc
popa
shlb
xchg
push
xchg
xor
or
lret
cmp
mov
popa
push
test
imul
jle
add
ljmp
sbb
pop
mov
pop
mov
mov
dec
test
fwait
out
adc
aam
ds
pop
xor
pop
push
pop
mov
pop
pop
mov
dec
mov
and
enter
les
sbb
mov
hlt
ds
rclb
or
cmp
jns
or
or
nop
cmpl
pop
call
in
pop
std
push
sti
mov
clc
jp
sbb
mov
push
pop
outsb
out
adc
int3
and
mov
pop
add
lea
jnp
cmp
push
pop
imul
repz
ret
in
xor
adc
cmpsb
insb
pop
rclb
inc
sub
pusha
outsb
fnstsw
dec
pop
test
ds
jp
cmp
cld
divb
movsl
out
std
xchg
mov
into
sub
adc
push
mov
pop
fisubrl
or
out
dec
int
cmc
insl
imul
and
add
movsb
dec
jo
fisttpl
repnz
call
mov
rorb
xchg
cmp
imul
iret
or
pop
xchg
sbb
nop
inc
pushf
pop
xchg
or
hlt
jbe
and
xchg
sar
push
popa
or
sbb
std
bound
adc
push
xchg
jae
push
jne
lods
jg
cmp
or
rorl
loopne
mov
repnz
in
inc
pop
mov
sbb
mov
xchg
xchg
adc
cs
mov
cmp
jbe
pop
stc
idiv
imul
pop
sbb
in
neg
fdivr
push
hlt
cmp
int
lods
es
add
and
inc
mov
mov
jecxz
push
ret
call
fnstsw
js
jg
fimuls
pop
out
pop
lea
inc
cmp
push
and
jne
or
pop
fsts
ss
fnstenv
pop
fnsave
jge
add
repz
xchg
aam
xchg
leave
and
lds
pop
add
xchg
pusha
addr16
stos
and
test
cld
roll
mov
es
sbb
sub
or
fdivr
add
cld
daa
cmp
iret
lret
rcl
and
jnp
xchg
fnstsw
cmp
mov
cmp
add
dec
push
pop
mov
sbb
push
int3
out
les
push
rol
adc
call
xchg
out
add
jae
lahf
call
scas
fwait
sbb
jno
in
mov
les
inc
rorb
fdivl
xor
pop
jp
or
mov
xor
movsb
mov
push
out
scas
out
push
ret
lods
xchg
je
cmp
shlb
mov
fnstsw
dec
pop
or
mov
fildll
pop
or
mov
and
push
mov
fcmovnb
je
std
pusha
jl
mov
push
mov
xor
das
into
cmp
icebp
jmp
mov
loopne
in
out
xchg
fisttps
shll
or
leave
cmpl
mov
adc
popa
or
test
jp
clc
dec
lahf
push
add
cmpsl
pop
lock
push
add
and
dec
test
mov
adc
lds
inc
push
imul
std
ljmp
dec
inc
xor
movsl
mov
push
jp
aaa
popf
sbb
enter
aam
push
leave
cli
dec
rcl
int
gs
sub
pop
push
jl
fcompl
dec
inc
cmp
adc
pusha
pop
int3
sti
aad
out
pop
mov
stc
adc
in
insb
mov
pop
cmpsl
adc
into
adc
clc
jns
jno
loopne
in
and
mov
cmc
jl
inc
push
in
sub
mov
or
out
loope
or
movsb
inc
test
xor
stos
daa
mov
popa
ja
inc
jmp
jae
and
sbbl
sub
test
mov
iret
push
jge
stos
ja
or
xlat
cld
stc
popf
int3
enter
sahf
mov
icebp
jge
xor
mov
dec
rcrl
or
pushf
pop
pop
cmpsb
and
sbb
pop
pusha
cmpsb
movsb
imulb
sub
sub
xlat
fimuls
ret
lock
jb
and
mov
pop
adc
sub
out
xor
popa
mov
jb
nop
mov
dec
mov
cmp
out
mov
jns
loop
fs
aam
call
ja
jmp
fdivr
mov
adc
popl
mull
shrl
fsts
mov
xor
sub
xor
data16
jbe
xchg
and
push
and
add
fldcw
xchg
sbb
out
into
push
loope
fiaddl
out
or
mov
mov
lods
fistps
imul
repz
cmpsb
mov
add
lahf
mov
mov
add
enter
add
lock
mov
pop
cld
mov
xchg
lock
mov
push
xchg
imul
rcrb
es
sub
cwtl
pop
test
or
shlb
adc
inc
xchg
cli
sub
mov
cs
leavew
es
add
ss
pop
mov
push
jmp
adc
sbb
mov
outsb
inc
scas
movsb
int
loop
jno
ja
mov
adc
sbb
adc
jns
addb
fsub
loop
outsb
imul
daa
into
push
ss
fcmovnu
sub
inc
repnz
dec
movsl
jns
bound
add
or
leave
cmp
push
inc
mov
push
cmc
movsb
shlb
pop
ss
mov
mov
pop
add
mov
xorb
mov
jp
sahf
and
enter
rcl
mov
ja
jge
daa
jo
inc
pop
cmp
xchg
mov
push
popf
pop
push
test
scas
adc
pop
xchg
aas
sub
push
jecxz
lahf
mov
daa
inc
fucom
rorb
or
xor
fwait
sahf
jp
dec
mov
pop
xchg
daa
sub
sbb
in
pop
jno
andb
repnz
jo
push
setp
fs
add
xor
push
decb
adc
add
xrelease
je
ljmp
mov
xchg
loopne
sub
or
aam
pushw
movsl
sub
pop
mov
ja
lahf
fisubs
stc
inc
or
ja
lods
sbb
inc
mov
mov
push
int3
andl
mov
inc
mov
fnstenv
shlb
jmp
arpl
mov
adc
inc
push
or
sub
or
sarl
in
push
call
adc
cmp
xor
lds
iret
das
fistl
or
mov
adc
cli
cmp
mov
or
xor
pop
mov
mov
sbb
repnz
mov
loopne
int3
fadds
sarl
cltd
jae
outsl
cmp
xchg
or
adc
clc
stos
jp
test
rorl
fldt
xor
cmp
rcrl
in
xor
mov
dec
push
cmp
clc
stc
mov
sub
mov
stc
and
sahf
arpl
ret
adcb
dec
dec
repz
mov
and
lods
in
sti
popf
lods
rcr
jmp
std
clc
adc
xchg
lret
dec
popf
jns
push
pop
ret
mov
roll
push
add
stos
sub
popa
mov
repnz
js
ja
fs
push
jl
mov
sbb
aaa
push
inc
mov
inc
jecxz
push
arpl
pushl
std
fwait
stos
sbb
dec
fists
push
lods
jno
cmp
imul
mov
jbe
pop
cmp
push
js
cwtl
dec
dec
dec
dec
popa
adc
fwait
hlt
scas
imul
jl
les
test
sub
loopne
notb
cmp
movd
push
in
jae
lar
or
arpl
adc
fisubrl
imul
mov
xor
addl
jle
adc
aas
sub
pop
movsb
sub
cmp
push
sbb
dec
push
int
add
jp
push
cmpl
mov
dec
int
movsb
mov
xor
std
mov
xor
es
and
aad
adc
repnz
dec
pusha
imul
sbb
xchg
xor
rclb
in
or
imul
and
pop
out
cli
xor
xchg
ss
jle
push
adc
pause
or
gs
mov
cltd
inc
sub
lret
aas
ret
add
sbb
push
std
inc
pop
jle
test
cmpsl
xor
mov
xchg
dec
icebp
stc
lret
leave
imul
clc
sti
out
xchg
mov
in
call
aas
and
outsl
outsb
outsl
fnstcw
dec
daa
sub
lods
mov
negl
mov
cmpsb
dec
jno
rcl
mov
sbb
call
out
and
xchg
mov
fcompl
fadd
cmc
mov
sarl
jnp
dec
add
jecxz
pushf
stc
xor
cmp
or
dec
fildl
inc
movsl
push
addr16
scas
loopne
loope
push
test
nop
loope
or
fisubrs
mov
ds
xlat
fsubrl
xchg
cmp
out
cltd
iret
addr16
xlat
addb
add
adc
enter
cmpsl
lds
pusha
mov
jo
out
mov
sbb
mov
dec
pop
scas
jmp
push
xchg
and
push
outsl
adc
mov
jno
dec
mov
sbb
loope
popf
dec
outsl
sarl
cli
pop
dec
or
xor
mov
sti
cltd
or
sahf
loop
or
xchg
js
mov
scas
push
mov
pop
add
mov
in
aas
sub
xchg
pop
repz
push
and
cs
mulb
mov
test
xchg
aas
les
mov
adc
cmp
adc
mov
or
dec
test
jge
dec
mov
and
push
sti
dec
jg
fcoml
sbb
jae
popa
lds
jmp
mov
shl
xchg
lahf
das
scas
iret
or
inc
xor
mov
pop
orl
mull
insl
aam
jo
adcb
jle
lahf
in
out
and
and
jecxz
xchg
inc
jno
fists
jne
ljmp
adc
sbb
mov
jns
xor
mov
out
add
stos
dec
movsl
repnz
nop
sbb
adc
cmpsl
sub
aam
lods
add
or
mov
aas
sub
addps
lods
xchg
sbb
mov
push
hlt
xor
cmp
jmp
addr16
jmp
or
test
push
and
inc
xchg
push
xchg
jb
mov
add
pushf
mov
adcl
in
jo
dec
xor
xor
and
cmp
fwait
sub
mov
aas
xchg
sti
xchg
mov
adc
or
in
stos
mov
xor
call
repz
mov
sub
mulb
ret
jno
mov
sti
or
xor
sti
outsb
out
cmpsl
mov
out
cvttps2pi
sbb
fistl
imul
iret
cmpl
xchg
xchg
rcl
adc
or
aas
popa
icebp
mov
pop
inc
cmp
add
xchg
xor
cmp
lret
into
jmp
xor
mov
jg
mov
cmp
add
xlat
or
out
xchg
test
xchg
inc
jecxz
xchg
es
cltd
out
sub
sbb
push
lea
mov
lret
or
imul
sub
mov
psrlw
fnstsw
loopne
test
push
jecxz
andl
inc
sub
pusha
ss
fdivr
insl
pop
jno,pt
incl
addr16
or
stos
lahf
dec
sbb
daa
ja
outsb
cli
push
sub
jbe
popa
cmp
lods
jo
xor
lret
mov
jecxz
scas
xchg
ret
sbb
adc
mov
push
lret
fdiv
pop
sub
hlt
sti
jle
movsl
cmc
sub
outsb
cmp
scas
out
push
imul
fidivs
xchg
in
mov
cmp
pop
inc
cmp
subl
mov
std
aas
push
es
xchg
pop
mov
pop
ficoms
mov
inc
outsb
push
inc
jb
cmp
pop
es
xlat
pop
in
into
cmp
inc
shlb
mov
pushl
fistpll
mov
sahf
xor
insl
fsubrl
cmc
aam
mov
std
out
mov
sbb
mov
mull
push
xchg
cmc
arpl
leave
lock
mov
out
inc
inc
call
jns
test
sub
out
test
jo
daa
subl
xchg
test
test
inc
xor
push
inc
xchg
sub
sub
stos
sub
into
hlt
or
dec
les
mov
lret
push
mov
adc
popa
cmc
aas
fs
pop
filds
pop
inc
mov
bound
cwtl
cwtl
pop
clc
mov
scas
mov
and
fadds
cmp
add
sti
push
lcall
in
imul
jo
mov
divl
cmp
mov
arpl
and
scas
dec
xor
aam
movsb
pop
addr16
mov
jmp
outsl
clc
insb
fs
enter
lret
and
or
pop
leave
lret
mov
stc
out
sarb
jmp
xchg
rorl
pop
push
mov
out
push
nop
jecxz
sbb
imul
cs
jl
adc
test
xorb
aam
out
in
jns
xor
jo
js
xchg
sub
xchg
stc
jp
push
mov
dec
adc
ret
ljmp
inc
or
js
popa
pop
or
cmp
stos
mov
mov
mov
adc
mov
xchg
pop
in
rcrb
cmp
frstor
jbe
sahf
push
xchg
jne
pop
inc
repz
or
gs
push
pop
inc
lahf
cs
and
shrl
bound
in
bound
divb
jge
std
ljmp
adc
lea
hlt
cmpb
adc
outsl
out
xchg
push
arpl
clc
jecxz
push
sub
popa
dec
push
je
jne
xlat
icebp
mov
dec
sbb
lds
mov
jle
mov
dec
in
or
ja
jnp
fdivr
xor
adc
fiaddl
stos
adc
or
push
or
enter
dec
outsl
fstpt
xchg
pop
testb
das
mov
out
movsb
mov
sbb
pop
sbb
add
sub
jno
aad
xlat
outsb
mov
mov
sub
xor
mov
pop
xor
mov
data16
xchg
dec
repz
insl
adc
push
fstpl
pop
xor
fs
push
aad
mov
push
gs
pop
xchg
inc
xchg
push
imul
sub
loop
jb
pop
xlat
cltd
pop
fisubs
cwtl
and
or
mov
scas
jb
inc
or
xchg
fisubl
adc
addb
xor
sbb
imul
dec
pop
or
sub
leave
dec
adc
push
sub
loope
stos
je
js
pushf
add
and
test
pop
or
je
cwtl
into
mov
leave
jo
sub
push
das
jb
xor
fistps
clc
andb
xchg
push
adc
mov
sbb
subl
scas
in
shr
sahf
js
enter
mov
orb
lods
add
roll
or
cwtl
add
stos
xlat
out
pop
xor
outsb
cmp
dec
dec
mov
rcrl
ret
mov
sub
dec
rol
gs
mov
clc
rcrb
notl
mov
int
rcr
fwait
cmpb
or
mov
das
sub
xchg
popf
inc
and
inc
push
push
lcall
or
mov
in
aad
lods
into
pop
vmovq
sbb
fcomp
xchg
adc
es
or
fidivrs
push
jbe
leave
add
jo
mov
pop
push
fsts
sbb
pop
loopne
lea
mov
jnp
shll
rclb
hlt
bound
out
outsb
shl
mov
addr16
lcall
in
dec
add
push
inc
data16
xchg
mov
sub
or
aad
jne
push
dec
mov
int
mov
leave
in
aas
dec
nop
hlt
or
sbb
push
insb
call
sub
psrlw
cwtl
add
cld
mov
cmc
bound
pop
je
pop
jmp
mov
cmpsb
or
xor
stc
mov
insb
pop
lds
inc
push
sahf
mov
cld
push
iret
mov
cmp
and
mov
push
sub
pop
loop
pop
mov
pop
xchg
and
mov
iret
cmc
std
cmc
into
aam
sbb
push
shl
arpl
cmp
test
push
mov
xorb
ret
aas
mov
mov
scas
jo
rcr
inc
andl
or
push
lahf
inc
cmpsb
push
mov
jl
jmp
cmp
stos
lcall
or
call
adc
xchg
scas
jo
cs
jae
out
mov
mov
sbb
adcb
or
or
vpshufd
xchg
dec
cwtl
mov
jo
cs
push
movsb
mov
fdiv
lret
pop
mov
jmp
adc
xchg
rclb
and
sarb
mov
hlt
or
scas
and
movsl
ljmp
sbb
cmc
xchg
addr16
adc
jg
jns
jmp
lahf
sbb
jg
test
out
push
push
push
outsl
jg
jp
push
and
dec
add
and
or
sbb
cli
pop
cmc
jne
hlt
cmp
fisttpll
push
ss
dec
inc
scas
mov
push
lcall
mov
or
xchg
popf
ds
push
xor
cli
lcall
mov
shlb
mov
pushf
push
mov
and
scas
or
jbe
into
pop
pop
in
pop
pop
cli
stos
sub
dec
gs
lahf
mov
dec
jno
inc
clc
repz
jbe
jnp
jge
movsb
mov
pop
test
mov
add
roll
pop
jecxz
cmpsb
sbb
mov
cli
sub
mov
in
mov
divl
cwtl
sbb
push
xlat
test
mov
std
jecxz
repnz
pop
xchg
adc
push
xchg
jo
inc
push
int3
cmc
pop
insb
inc
cmp
pop
iret
sub
and
inc
ja
int
pop
sbb
lret
je
mov
cmp
sahf
shll
push
in
test
ds
movsl
dec
pop
std
xor
test
dec
or
adc
jno
lods
pop
dec
push
xchg
mov
xchg
xchg
loopne
push
or
subl
in
add
mov
lea
pop
test
roll
testl
add
jmp
and
pushf
mov
xchg
cmp
or
retw
push
push
lret
cmovns
pop
mov
stc
dec
push
push
loopne
xor
scas
je
std
push
ror
pop
out
pop
out
adc
sbb
xor
adc
into
hlt
jno
pusha
xor
fidivl
daa
dec
out
aaa
bound
add
jb
or
lock
rorl
xchg
mov
ja
add
repnz
lods
dec
cld
cmp
xchg
ljmp
mov
jg
inc
pop
mov
int3
mov
mov
pop
add
dec
mov
jne
inc
lock
aas
cmp
inc
and
es
pop
data16
mov
mov
sbb
lahf
xchg
aaa
das
cmp
mov
popf
shll
push
mov
jae
jge,pt
rcr
and
sbb
mov
fldenv
pop
insb
fs
add
sahf
push
or
adc
leave
mov
sbb
scas
add
movsb
mov
xchg
cmp
imull
jns
mov
cmp
cmp
jge
cmp
enter
pop
mov
and
push
xchg
jb
mov
xorl
pushl
xlat
pop
xchg
addr16
pop
ret
xchg
pop
inc
xor
mov
sbb
fdivrl
sub
or
ret
mov
xchg
cmp
add
roll
and
cltd
ja
jbe
pop
jecxz
mov
jmp
adc
movsb
or
mov
cltd
aas
mov
xchg
out
adc
add
stos
pop
cmpl
lret
inc
and
pop
lret
ja
xchg
inc
inc
sbb
ss
mov
cmpsl
into
jns
arpl
ftst
pusha
cltd
xchg
fs
sub
lret
rcrb
sahf
out
jno
fsubs
mov
test
addr16
adc
fxch
or
dec
xchg
stc
mov
fs
call
in
cmp
jae
in
js
iret
push
daa
icebp
into
sub
leave
insb
cmpsb
outsb
outsl
out
sub
sti
je
add
and
daa
mov
mov
les
mov
jp
cmp
lock
ss
mov
clc
pop
mov
push
aas
and
push
xor
jmp
mov
cltd
xchg
aaa
cmp
lret
pop
xor
lock
lds
xchg
outsl
jae
bound
imul
fldenv
repnz
cmp
pushf
movsl
js,pt
xor
mov
jae
cmc
push
mov
xchg
pusha
mov
dec
pop
xchg
sti
dec
xchg
xchg
repnz
pop
cld
mov
push
jno
dec
in
orl
sub
mov
adc
mov
adc
xor
out
call
cmpsl
mov
jmp
adc
lahf
push
xchg
mov
mov
call
mov
movsl
into
add
push
xor
jbe
xchg
in
adc
js
fcomps
daa
scas
test
lods
cmp
xchg
mov
inc
adc
cli
dec
mov
and
inc
repz
stos
test
dec
nopl
jl
iret
sub
pop
addr16
out
test
push
or
cmp
and
push
mov
rcrl
shlb
inc
cltd
fwait
aad
test
add
add
inc
jl
cmp
inc
jnp
mov
dec
add
lea
roll
out
adc
add
sarl
int
ljmp
roll
cmpsl
sbb
pop
cmp
and
les
outsb
sbb
cld
ds
lahf
push
jl
xor
in
popa
sarb
out
push
push
sbb
xor
fstl
movsb
loop
add
mov
mov
mov
imul
inc
xchg
add
bound
sub
inc
and
shrb
out
lret
jecxz
insl
inc
in
nop
mov
jbe
mov
imul
dec
pop
movsl
add
sbb
aad
popa
cmpsl
or
addr16
jecxz
loopne
add
popf
push
push
and
mov
jae
enter
jge
mov
push
pop
bound
into
xchg
inc
dec
mov
or
les
adc
stos
push
add
out
mov
gs
sub
add
push
sub
or
mov
fsubs
aas
push
pop
pop
xchg
adc
push
loope
xor
add
jle
push
xchg
xlat
inc
shll
and
fsubr
cmp
les
pop
cmp
or
push
adc
movsl
call
push
pusha
ljmp
inc
mov
mov
push
jg
mov
sbbl
and
cs
std
mov
add
insb
icebp
ljmp
add
aas
aam
mov
pop
shlb
enter
inc
ljmp
mov
push
out
mov
rcrb
mov
mov
push
pop
add
aam
or
and
sub
push
shl
notl
das
jne
push
xor
std
out
xchg
xchg
or
pushf
pop
mov
daa
pop
mov
pop
cmc
jecxz
cmp
shrb
xor
cmp
xor
ret
imul
or
je
cltd
jno
add
rcrb
inc
dec
lods
xchg
cmp
adc
in
pushf
mov
dec
cld
mov
xchg
dec
push
dec
mov
cmp
xchg
add
pop
call
cwtl
fidivrs
lcall
imul
cmp
loopne
movsb
cmp
popf
pop
cwtl
xor
int3
xchg
dec
cmpsl
cmc
xor
stos
in
fcmovb
xchg
inc
cmp
cmpsl
popa
mov
inc
mov
imul
sbb
jmp
sub
daa
mov
mov
mov
scas
adc
sti
popa
addr16
cs
mov
ds
mov
das
pop
in
icebp
stos
lahf
fists
test
roll
push
mov
outsb
icebp
pushf
mov
scas
mov
sbb
jbe
mov
movsb
inc
shrb
dec
push
push
stc
dec
mov
sbb
cmp
xlat
inc
mov
mov
push
xchg
jecxz
sub
fisttps
outsl
scas
or
mov
ss
or
aas
jae
lock
popf
or
inc
jbe
push
loope
jl
aam
call
sbb
out
jmp
xchg
sbb
push
mov
clc
aaa
jmp
cmc
xchg
sub
je
movsb
cmpsl
mov
add
sbb
xchg
insl
ret
mov
mov
mov
cltd
out
mov
repz
pusha
fisubs
rolb
unpcklps
dec
push
repz
and
inc
repnz
icebp
scas
ret
inc
loopne
xlat
pusha
cmp
lock
cwtl
or
divl
cwtl
xchg
xor
xlat
sub
outsl
lods
inc
inc
aas
jg
insb
ret
addr16
into
mov
lds
mov
jle
iret
push
call
mov
aas
lcall
insb
in
inc
mov
in
shll
lcall
cmp
inc
push
xchg
xchg
and
cmp
dec
loopne
dec
in
xchg
pop
mov
cs
test
push
or
std
rcr
lea
sbb
inc
add
test
inc
std
mov
xchg
inc
insb
in
xor
cmpsw
in
inc
mov
out
iret
pop
mov
loope
sub
stc
mov
or
cmpsb
pusha
cmp
testb
cmp
fstl
pop
in
pusha
stc
mov
cli
sbb
and
cmp
jns
lock
jmp
cwtl
push
jnp
nop
lret
inc
popf
dec
pushf
icebp
xchg
out
out
xchg
push
sbb
cld
jnp
sbb
jg
ret
test
xlat
mov
add
aam
scas
push
cs
push
int3
icebp
iret
test
mov
xchg
dec
push
shrl
inc
sbb
popa
mov
xlat
orl
mov
fcmovnu
jb
arpl
xor
orb
ficoms
je
in
fsubs
mov
or
scas
mov
jbe
mov
mov
repz
lahf
inc
scas
push
lret
test
sbb
addr16
out
pop
and
and
mov
je
cld
pop
add
divb
or
mov
ja
iret
and
lahf
subl
mov
repnz
fildll
sub
cmc
adc
repz
jno
idiv
lret
sub
sub
insb
xlat
nop
in
or
sti
lret
nop
lds
pop
scas
inc
xchg
fstl
adc
cli
loop
jns
pop
ret
rclb
aad
scas
add
and
sar
mov
stc
add
mov
mov
push
or
or
sbb
lock
aaa
inc
push
iret
adc
xlat
or
xchg
es
dec
in
sbb
push
mov
sub
dec
popa
inc
mov
xlat
jo
sbb
pop
jp
mov
das
pop
rcl
and
icebp
int
addb
or
andl
pop
scas
add
and
cli
ret
pop
addr16
lods
xor
jmp
mov
outsb
data16
adc
add
test
int3
push
inc
mov
pop
imul
out
pop
fstps
push
out
mov
loop
scas
adc
xchg
icebp
adc
shll
push
movsb
sbb
lcall
loope
sahf
cmp
lds
pop
xchg
sbb
dec
test
mov
pop
or
ficoms
xor
xchg
data16
repnz
add
popf
add
and
xchg
inc
push
dec
dec
pop
adc
jecxz
xor
xor
aad
fsubs
std
pusha
pop
popf
insb
inc
fistps
sbb
adc
jle
mov
cmpsl
fstl
add
lret
sbb
ss
rorl
cld
div
cld
xchg
push
call
jmp
inc
xor
sub
xor
sbb
pusha
pop
push
ss
lea
or
out
imul
hlt
dec
shrb
shl
fidivrl
es
clc
jnp
testl
in
in
xor
inc
mov
xchg
fmul
dec
mov
out
pop
sbb
inc
push
mov
adc
faddp
inc
xchg
rolb
cmp
pop
je
xor
testl
jl
xchg
pushf
inc
shl
xchg
jnp
dec
std
push
pop
lods
lret
add
pop
lahf
mov
mov
addr16
jg
fdivrl
sar
bound
xchg
pop
loope
arpl
add
fwait
in
or
inc
imul
repz
movsb
jge
lock
in
cmp
fwait
mov
fwait
lods
hlt
push
hlt
adc
cs
lods
ss
mov
jbe
out
adc
arpl
test
lea
adc
cmpsb
jnp
or
testb
out
push
das
into
pop
mov
dec
pusha
mov
fistl
dec
cltd
int
inc
stos
adc
leave
ss
jnp
incb
xor
sbb
shl
test
jg
xchg
jecxz
dec
push
clc
js
daa
imul
xlat
or
pop
ss
push
push
dec
xchg
mov
mov
mov
shll
and
cmpsl
sub
mov
fsubs
rol
sbb
xchg
pcmpeqw
push
test
aam
ljmp
fistpl
and
enter
pusha
xchg
ljmp
sub
adc
lahf
in
aam
lds
and
sbb
jecxz
data16
push
rorl
and
push
mov
dec
test
cmp
jb
mov
roll
pop
arpl
or
pushf
outsl
or
sub
fildll
rcl
stc
cmp
ss
jae
cmp
mov
stos
mov
ret
ja
cmovs
lret
aaa
insl
jae
btc
fiaddl
sbb
mov
jp
sarb
sarb
inc
push
mov
mov
ret
pop
mov
pop
insl
mov
fs
insl
ret
dec
mov
imul
mov
xchg
xchg
ret
inc
lcall
jne
xor
pop
xchg
and
pop
jne
ljmp
fcompl
mov
mov
xchg
and
pop
and
loopne
dec
lods
add
cmp
mov
sar
push
sub
jle
dec
push
das
inc
test
sbb
jno
fcoms
fadd
sbb
dec
loope
aas
mov
mov
dec
pop
gs
sbb
xchg
or
xchg
lret
mov
jbe
sub
insb
fimull
sub
adc
mov
adc
js
mov
outsl
xchg
fildl
push
mov
ds
addr16
test
push
push
pop
jbe
jo
mov
in
inc
push
and
pop
adc
cwtl
jne
pop
jp
jno
dec
fsts
in
xchg
insl
or
jp
mov
xor
adc
ss
fs
mov
xor
dec
addr16
xor
push
xchg
bound
icebp
inc
scas
std
les
xchg
push
mov
lcall
cmp
movsl
push
in
and
adc
pop
add
int3
mov
inc
out
lret
dec
jo
xorb
andl
stos
or
dec
inc
aas
dec
dec
mov
rclb
pop
outsl
sti
sub
xchg
popl
adc
cmp
jb
push
push
sbb
ds
xchg
pop
in
jg
dec
aad
out
add
jmp
mov
xchg
jnp
cmp
lds
orb
into
cmp
adc
popf
dec
mov
push
push
repnz
mov
pop
mov
lods
nop
in
outsb
insb
mov
aas
insl
lret
sbb
dec
sub
sbb
fdivr
popa
xchg
iret
and
mov
pusha
imul
fcmovu
jns
pop
or
inc
test
rcrl
dec
push
push
insb
test
ss
hlt
outsl
sbb
mov
cwtl
inc
lahf
xor
cmp
push
dec
fmuls
xlat
jmp
dec
xchg
mov
sarb
xchg
or
fimuls
cs
scas
loope
mov
aas
pop
test
cs
jl
dec
add
or
in
popf
sbb
xorb
and
stc
inc
jbe
outsl
mov
xchg
fisttps
and
xchg
jbe
push
push
push
imul
js
or
test
test
jns
push
outsb
loope
ficoml
sub
push
push
xchg
sbb
inc
push
pop
dec
int
xchg
pop
ror
push
pop
xchg
int
enter
xlat
in
das
jle
xor
loopne
loopne
les
mov
cmp
jo
xchg
aam
sbbb
push
scas
add
sbb
lods
or
frstor
and
cmp
pop
cld
mov
loop
fstps
and
cmp
xor
clc
je
adc
rcll
and
sub
pop
mov
in
out
test
fbstp
aad
icebp
sub
pop
pop
negl
inc
fisttpl
fisttpll
cmp
sub
xor
es
loop
lds
push
stc
and
cli
lea
sub
adcb
sub
fists
jle
call
inc
lahf
inc
add
fisubs
leave
fisubrs
fnsave
clc
mull
push
cmpsl
dec
sbb
stos
pop
icebp
cmp
inc
push
lcall
in
xchg
pusha
clc
pop
jae
push
insb
addr16
lcall
inc
and
lock
push
add
lahf
cmpl
add
xchg
cli
test
sub
xchg
mov
push
fdivrs
pushf
xor
stos
sbb
lahf
out
sub
mov
cmpl
dec
xchg
inc
jae
into
mov
inc
ja
sbb
xchg
int
pop
add
jo
cwtl
sub
lret
mov
dec
imul
js
cmpl
or
adc
fwait
adcb
cmp
fists
rep
stos
insl
lods
xor
xor
and
mov
mov
or
shll
sub
mov
xlat
ss
fidivs
xlat
mov
mov
cmpsb
mov
enter
popaw
stc
sbb
mov
loopne
adc
lock
adc
cmp
test
or
fldl
rol
movd
adc
cld
inc
clc
js
and
fs
jnp
lds
sub
cmc
xchg
jo
or
rolb
mov
test
xchg
incb
xchg
arpl
leave
inc
sarb
add
cmp
ret
stos
test
mov
in
jecxz
lret
decl
pusha
mov
jge
jno
rolb
and
jle
adc
xor
mov
xor
push
xor
ficoml
cmp
or
jp
out
push
mov
lds
mov
and
sub
xchg
or
je
jb
icebp
ret
push
and
xor
dec
jns
inc
fisttps
xchg
int3
inc
push
movsl
enter
inc
or
aas
fdivl
sub
mov
out
adc
loop
mov
ror
lcall
aas
mov
dec
and
cmp
and
or
insb
leave
mov
sti
inc
fnstsw
insb
xchg
jecxz
call
mov
cmp
cmp
fninit
xchg
outsl
jo
or
fdivp
cmp
adc
fistps
adc
add
mov
enter
mov
hlt
pop
out
popf
mov
add
movsl
and
fs
or
outsb
loop
test
inc
call
mov
stos
add
jno
pop
das
sbb
test
test
cmp
adc
inc
vhaddpd
and
mov
xchg
aam
adc
hlt
pop
pop
clc
mov
test
or
and
cmc
mov
aad
push
pop
add
imul
pop
lahf
push
sti
movsb
not
scas
cmp
mov
aaa
mov
jg
and
dec
lods
mov
cs
mov
add
outsb
dec
sub
dec
gs
xor
jnp
pop
testl
mov
mov
jno
add
cmp
adc
add
mov
jle
jae
fwait
out
ds
leave
bnd
dec
popf
cmp
push
mov
bound
cmp
je
out
mov
and
add
scas
jl
dec
mull
scas
mov
xchg
jne
cltd
das
mov
test
mov
leave
add
into
jmp
imul
pop
add
mov
dec
loop
dec
xchg
xchg
jnp
arpl
mov
sti
fdivs
xchg
jl
push
loop
mov
cmc
pop
mov
xchg
lea
enter
xchg
js
lods
js
jp
mov
jg
push
data16
adc
push
fxch
scas
sti
pop
je
mov
xchg
or
shll
adc
dec
sbb
xchg
or
test
imul
jbe
jns
jne
dec
cli
mov
js
mov
rcrl
sbb
mov
cmpsb
out
inc
inc
sarl
leave
inc
and
ds
js
and
sti
stc
ds
lret
lods
and
sub
pop
pop
lea
outsb
sbb
ds
pop
in
dec
dec
mov
jae
daa
inc
xlat
inc
fs
sub
xor
sbb
and
jl
add
inc
mov
or
jg
jmp
mov
push
popa
mov
jmp
push
mov
push
jne
jne
subl
pop
iret
out
ret
cmp
xlat
ret
adc
shld
xor
cmp
out
movsb
fdiv
mov
pop
mov
imul
xor
jnp
pop
pop
sarb
and
lock
inc
cmc
popf
test
arpl
addr16
dec
rol
lahf
dec
inc
xchg
cmp
pop
add
nop
or
mov
in
arpl
aad
das
ffree
and
add
aad
clc
mov
cld
in
sbb
adc
and
xchg
mov
cld
loopne
sub
enter
xchg
jo
rcrb
std
jle
daa
and
pusha
lahf
ss
dec
arpl
mov
add
cmp
push
dec
push
stos
imul
and
shll
clc
cmp
mov
jle
insl
shll
fwait
xlat
pop
test
cmpsl
inc
or
xor
adcb
sar
inc
push
loope
addr16
pop
add
subl
adc
pushf
dec
pop
mov
cmp
lods
xchg
pop
movsb
cld
out
testl
enter
mov
arpl
cmp
dec
aaa
cltd
outsl
jmp
xlat
adc
loop
insb
aad
movsl
repz
or
fxch
pop
mov
imul
inc
push
sub
faddl
xchg
xchg
cmp
push
sbb
cmp
xchg
je
push
iret
cmp
int3
push
xor
leave
stos
sub
sub
xor
movsl
icebp
ficoml
mov
sbb
inc
mov
in
jno,pt
and
outsl
out
ds
jg
jg
jns
inc
xchg
mov
push
mov
pop
sbb
xchg
out
or
push
pop
xor
jl
push
out
lds
xabort
mov
inc
ret
adc
sub
add
nop
std
cmp
movsb
xchg
xor
mov
testb
test
jmp
xor
mov
lret
cmpb
pop
divl
pop
mov
ja
xchg
test
xlat
ja
test
fcompl
lods
xor
inc
or
cmp
add
cmc
out
push
jmp
leave
adc
dec
cli
mov
and
inc
adc
push
xor
sbb
scas
or
xchg
mov
jo
mov
scas
push
js
mov
adc
lods
adc
mov
mov
mov
pop
jecxz
xlat
ss
int
test
mov
cmp
pop
jecxz
lock
mov
pop
ds
xchg
xor
pop
push
add
add
imul
lcall
cmp
or
jge
add
or
imul
pop
mov
movsb
aaa
or
lret
xchg
fcomps
cmp
xchg
cwtl
inc
mov
mov
jnp
jmp
scas
push
cmpsb
jnp
shrb
push
test
fwait
push
ljmp
lods
mov
dec
xchg
popa
mov
jecxz
loopne
xor
adc
xor
idiv
pop
setg
faddl
xchg
push
in
inc
push
pop
sbb
and
addr16
stc
mov
mov
fs
jge
jb
cmpsb
sub
inc
xor
pop
add
and
mov
rep
sahf
pop
xchg
mov
jecxz
sub
and
cmp
jp
movsl
fistps
cmpsb
fldcw
inc
xor
notl
scas
lret
ss
adc
dec
lods
mov
mov
and
xchg
mov
add
daa
out
sbb
bnd
pushf
cmp
push
lock
in
mov
cld
mov
enter
popa
int
xchg
ds
hlt
sub
mov
inc
and
ret
leave
clc
mov
pop
xchg
cltd
lret
xor
or
lods
leave
mov
dec
ret
and
inc
mov
jno
icebp
outsl
jecxz
dec
mov
fcoml
or
lcall
aam
or
pop
addr16
sbb
inc
mov
fsubl
inc
dec
out
lea
lds
add
cmc
mov
mov
test
loope
cwtl
pop
xchg
and
int
shlb
mov
pop
or
data16
insb
punpckldq
jnp
jae
inc
out
sbb
pop
ja
stos
ficompl
mov
cmp
xchg
ds
popl
les
enter
ljmp
insb
mov
inc
jmp
loop
call
cmp
mov
std
lock
das
loope
inc
stos
jo
sbb
fs
in
ljmp
push
add
shrl
sub
cmp
or
pop
cmc
cmp
xchg
adc
mov
fisttps
andb
int
inc
add
iret
in
fimuls
jne
xchg
fsin
in
imul
dec
mov
mulb
mov
aas
and
pop
insb
mov
daa
dec
push
ss
mov
lds
add
insl
cmpsl
in
and
inc
out
mov
fst
std
in
negl
add
lock
cmp
or
insl
fnstenv
sbb
jo
int3
loope
mov
in
jno
or
mov
cmpsb
jg
and
xchg
jno
pop
aaa
ds
or
cmp
pop
xor
scas
lds
andb
xchg
jnp
cltd
into
iret
xchg
or
dec
fiadds
gs
jno
xchg
add
dec
push
mov
sub
mov
xchg
je
dec
or
mov
sarb
mov
pop
out
jmp
push
lds
pop
ret
out
mov
int
subb
test
cmp
mov
xlat
mov
xor
adc
mov
inc
lock
cmp
dec
dec
pop
adc
ljmp
push
divb
fldenv
aaa
dec
ds
dec
dec
testl
add
mov
idivb
movsb
inc
ret
arpl
aaa
xor
out
xchg
insl
cmp
jmp
push
loope
jno
or
xchg
push
mov
xor
sarl
enter
and
xor
inc
xor
xchg
cmp
sub
inc
jp
test
imul
adc
jecxz
mov
pop
fcoms
sub
popa
cmpsb
add
iret
scas
movsb
dec
ljmp
push
adc
sub
imul
mov
xchg
sbb
mov
ja
dec
mov
cmp
or
je
imul
cmp
movsb
out
mov
fs
inc
cwtl
push
sbb
dec
mov
fstpt
lret
leave
shr
mov
push
jbe
push
add
into
rcrl
insl
pop
xchg
cmp
mov
xor
mov
ret
pop
fildl
mov
pop
popf
adcb
ja
shlb
div
out
dec
sub
lahf
push
fdivs
ja
pop
and
clc
pop
sub
fnstsw
in
out
lcall
iret
jge,pn
pop
imul
enter
cmc
std
mov
cli
out
out
pop
mov
mov
xchg
pop
adc
test
mov
push
mov
jg
insl
jae
icebp
lock
rorb
sub
sti
push
push
sbb
fsub
sbb
push
xor
ficoml
inc
shlb
xor
push
sub
stc
or
mov
xor
adc
icebp
iret
dec
or
sarl
mov
decl
push
inc
mov
sbb
cmp
and
pop
cmc
adc
xor
mov
sbb
jle
loope
jb
movl
dec
xchg
aad
and
jge
cmp
call
xchg
testl
rol
cmp
call
xchg
add
imul
repnz
in
inc
mov
dec
adc
jns
jle
or
cmp
addr16
fs
push
and
popa
fwait
test
adc
shr
insb
push
rclb
ret
pop
inc
pushf
mov
pop
dec
sti
inc
cli
dec
sbb
test
adc
sahf
div
inc
test
and
in
fstl
lods
in
push
cmc
jns
not
shrb
aam
sub
lea
mov
push
in
in
pop
mov
mov
lcall
cli
cmp
cs
shll
loop
movsl
cmpsl
xchg
sarb
pop
jg
insb
cmp
mov
and
mov
or
pop
sbbb
testl
adc
cs
inc
push
insb
xchg
lods
push
data16
outsl
dec
mov
retw
int
cli
add
sub
iret
test
dec
and
iret
fidivs
xorb
fnstenvs
sbb
cltd
add
xor
mov
mov
push
bound
pushf
scas
push
adc
sub
xor
xchg
movsb
inc
lahf
in
push
xor
fmull
push
out
call
pop
mov
adc
dec
fs
mov
jmp
ret
inc
add
jnp
popf
add
enter
insb
shlb
out
in
inc
and
insb
jae
sub
repz
mov
jbe
xchg
lods
mov
pop
adc
fisubrs
pop
push
cmpsb
insb
add
mov
xchg
mov
les
out
lods
pop
push
dec
jmp
aas
lcall
pop
sarb
aaa
loopne
je
les
xor
dec
cld
lcall
ret
popa
fdivrp
out
pusha
les
adc
or
push
sbb
out
rcll
add
subl
mov
mov
popf
mov
pop
roll
data16
xor
das
cmc
adc
mov
jg
pop
fdivl
dec
push
mov
cmp
and
sbb
push
shrb
sar
inc
mov
jnp
jnp
and
mov
xchg
and
sbb
scas
push
mov
rcrb
shlb
push
roll
movsl
mov
ss
push
scas
xchg
mov
add
sbb
xchg
in
stos
sti
xor
flds
lahf
aas
fdivrl
fnstenv
mov
inc
insl
dec
insb
mov
or
scas
sahf
test
cmp
pushf
push
lods
cmp
add
rclb
mov
push
pusha
aad
leave
nop
sarl
jnp
aas
lcall
sub
lds
clts
ficomps
xchg
and
lahf
adc
sbb
pop
imulb
sbb
aaa
jp
pop
ss
cmp
push
cmpsb
push
or
push
push
mov
inc
mov
ds
adc
test
fstpl
push
mov
lods
pushf
dec
cs
lret
cmpsb
jb
mov
mov
in
sarb
mov
scas
add
scas
xchg
jnp
cmp
ljmp
daa
aaa
inc
add
jno
sub
dec
pop
sub
add
add
into
inc
insl
ret
icebp
cs
outsl
dec
jae
mov
loop
cltd
xchg
jb
aad
mov
shll
mov
mov
testl
fs
mov
mov
sbb
stc
cmp
ret
lahf
pusha
test
shr
adc
neg
jne
pop
xor
rcl
fcomps
mov
or
mov
xchg
clc
test
sbb
xchg
inc
lcall
push
sbb
fisubrl
dec
loopne
aam
je
scas
cmp
or
int
jmp
sbb
mov
mov
jne
mov
call
dec
mov
push
add
clc
sub
leave
pop
sahf
aad
inc
cmp
movsb
cmp
out
js
imul
pop
cmp
inc
pop
add
push
sbb
repz
mov
inc
xor
xor
cmpsl
mov
or
aad
push
lea
pushf
jmp
adc
popa
push
jecxz
xor
popf
outsl
jg
mov
sub
pop
or
mov
lock
fs
mov
sbbb
dec
pusha
dec
inc
jnp
xchg
xor
popa
iret
add
int
nop
mov
mov
shl
or
or
lods
jmp
cmp
mov
in
and
inc
dec
or
cmpsl
sbb
mov
mov
ss
shrl
jns
data16
mov
adc
js
pop
cmp
inc
pop
fs
test
mov
or
stos
inc
xchg
addb
pop
lret
cmp
inc
sub
das
loopne
sbb
push
push
cmc
mov
into
insb
lods
jge
jbe
xchg
ljmp
inc
jae
xchg
mov
clc
test
mov
lods
enter
add
rol
mov
sbbb
outsb
aad
insb
pop
xor
scas
push
lret
and
and
es
xlat
pushf
addl
push
stc
nop
sub
adc
add
xor
out
push
dec
jbe
dec
lds
out
adc
push
lahf
dec
push
addr16
pushf
in
inc
movhps
lahf
cs
lods
dec
adc
pop
dec
orl
popl
pop
mov
cli
mov
push
loope
or
xchg
mov
loop
arpl
pop
xor
pop
pop
sbb
lret
push
pushf
ds
icebp
aas
sbb
cld
pop
mov
jle
mov
and
push
daa
popl
out
fmuls
inc
leave
test
lds
xlat
sub
push
mov
stc
sahf
mov
scas
or
adc
push
lcall
out
sub
bound
outsl
mov
popa
xchg
insb
inc
jb
jns
sbb
mov
jae
pop
push
pop
adc
cmp
cmp
lahf
sub
iret
in
push
sbb
mov
xor
rclb
movsb
stos
inc
lods
or
hlt
dec
mov
xchg
lret
push
loopne
cltd
clc
in
and
mov
jo
sub
mov
and
fmull
in
pop
mov
or
lods
ja
lock
cwtl
sbb
mov
dec
pop
aaa
push
xor
das
jp
test
push
xchg
or
dec
out
das
mov
sub
scas
aas
xor
iret
and
mov
add
bound
mov
stc
imul
icebp
jmp
sub
sub
lods
adc
or
or
jbe
inc
jne
mov
jne
jnp
push
aam
pop
cmp
cmp
shl
das
shr
push
stos
pop
mov
test
sbb
jb
mov
and
mov
mov
jns
adc
out
and
jg
and
mov
out
lret
xor
add
out
incl
inc
aad
mov
xchg
push
icebp
jae
adcl
ret
stos
dec
gs
push
lret
mov
imul
divb
out
lds
push
rorb
xchg
push
insl
dec
pop
rolb
add
push
dec
cs
xchg
mov
xchg
lret
and
sbb
add
outsb
fdivrl
or
daa
mov
add
inc
das
movsl
xor
mov
mov
cmpsb
pop
xchg
or
lds
xchg
jg
mov
mov
popa
pop
pop
xchg
or
jle
push
xor
mov
or
xor
cmp
test
lret
sahf
std
push
into
jp
dec
movsl
rol
js
mov
jb
out
lock
flds
movsb
leave
dec
sbb
mov
arpl
jne
push
shl
and
stos
jl
mov
sysenter
jo
sbb
fs
rclb
lds
and
and
pushf
stos
pop
out
push
jo
mull
and
out
adcw
push
mov
jl
pop
cmp
fimuls
cmp
mov
int
pusha
ret
xchg
jo
sbb
lods
shl
jbe
mov
and
or
cmp
insl
stc
push
sbb
in
adc
test
xor
idivl
mov
popf
xchg
sbbb
loop
mov
gs
mov
fistpll
test
cmp
mov
test
out
and
insl
lods
jmp
out
das
pusha
cmp
inc
in
out
sahf
cmpsl
dec
xor
sbb
leave
ds
shl
push
out
test
paddsw
addr16
cmc
jmp
scas
jmp
ljmp
inc
sub
es
adc
jle
fisubrs
pop
push
arpl
stc
test
inc
data16
add
in
dec
push
jo
adc
repz
aad
in
jne,pn
sarb
add
lock
pop
and
pop
int3
pop
sarb
jg
cmpsl
sub
lea
mov
ror
lret
adc
popa
lods
sub
jmp
fs
mov
mov
movsb
insb
xor
dec
and
fadd
sbb
dec
sahf
fstpt
lea
sahf
outsb
push
mov
sbb
in
add
movb
roll
sub
jle
insl
dec
push
rcll
aam
pop
pushf
aas
mov
inc
xchg
stos
lods
stc
stc
push
into
xor
mov
or
dec
inc
fisttpll
cmp
dec
sti
push
push
sbb
push
enter
imul
ljmp
pop
std
mov
inc
es
shlb
icebp
fisttpll
mov
dec
or
gs
cmpsb
sbb
int
fwait
dec
add
ja
hlt
cmpsl
movsl
imul
or
jmp
ds
jge
orl
jmp
repnz
pop
jecxz
pop
dec
pop
mov
pusha
mov
cmp
sub
push
dec
loopne
mov
jns
out
mov
jo
push
mov
es
pop
push
sub
cld
mov
arpl
stos
push
and
aaa
xchg
repz
lods
out
popf
cmp
add
pop
daa
push
mov
or
mov
adc
je
mov
stos
addr16
in
push
outsb
or
and
xchg
xchg
jne
lret
cmpl
jl
pop
jecxz
or
out
xchg
loopne
xchg
inc
rcl
pop
fbld
popf
test
sbb
movnti
pop
add
orb
lret
pop
in
and
pushf
push
and
ja
pop
ret
loope
cs
repz
fcom
dec
lgs
cwtl
sarb
xor
movsl
sbb
xor
pop
push
jb
dec
add
push
push
push
and
lret
mov
iret
xchg
cmp
cmp
xchg
cmp
lret
pop
les
ficoml
pop
mov
mov
scas
sbb
xor
lds
sub
dec
mov
in
xor
aaa
mov
sbb
and
outsl
mov
cmp
nop
dec
out
nop
pop
adc
mov
jecxz
lret
fdiv
mov
pop
clc
lock
inc
fstpt
adc
cmc
ftst
pop
cltd
lahf
ja
shlb
iret
loopne
pop
insl
cs
loop
cli
pop
jecxz
sahf
push
sbb
adcl
adc
or
loope
comiss
adc
lock
inc
repz
out
clc
ret
psadbw
cmp
mov
adc
cs
jl
dec
lcall
ret
in
push
ds
es
mov
cmp
fchs
or
daa
out
cmp
pop
jg
fsubrs
clc
test
xchg
shrb
fdivs
pop
pop
jg
xchg
mov
addr16
std
jp
repz
add
xor
mov
or
nop
sbb
mov
pushf
inc
xchg
cltd
dec
es
dec
das
mov
fldl
jnp
in
xchg
das
xor
push
push
cmp
inc
pop
xor
mov
mov
out
add
sti
or
push
jmp
in
out
push
or
rorb
test
loope
push
xchg
jl
fstl
xlat
lds
lods
mov
or
leave
mov
enter
cmpl
lcall
mov
jg
imul
mov
inc
jnp
sbb
xor
lret
push
adc
in
test
push
push
dec
das
fcomip
dec
jo
cmc
dec
cmp
int
or
xchg
cmp
out
xor
sub
fmul
pop
push
mov
mov
inc
call
iret
jnp
iret
inc
mov
xchg
lcall
in
pusha
cld
leave
fbld
xchg
and
fisttpl
sub
pop
dec
sub
hlt
jecxz
push
dec
jo
outsl
stos
mov
loope
cmc
mov
jne
test
mov
ret
pop
int
and
pop
push
cmp
test
fwait
sbb
fcmovnb
lahf
addb
mov
and
repnz
sarb
loope
test
xchg
inc
sbb
or
nop
mov
pop
xchg
movsb
push
ja
in
inc
ficomps
cmp
mov
out
es
inc
lret
pusha
add
adcl
cmpsb
cmc
test
pop
out
lea
xchg
xor
add
xor
mov
fldcw
aad
sarl
jmp
and
adc
ret
ror
sbb
lock
xchg
inc
jns
mov
inc
cwtl
push
push
test
dec
push
in
cmp
sarl
mov
xchg
inc
insl
mov
or
pop
loop
cltd
mov
add
xchg
adc
jb
cmp
mov
idivl
mov
dec
xchg
fnstsw
call
mov
xchg
sub
xor
cmp
out
rclb
push
fcomps
pop
inc
les
fbstp
mov
xchg
sub
push
xor
push
push
sub
mov
lds
xorl
js
xor
inc
push
clc
dec
dec
cmp
loopne
mov
pop
xor
mov
orb
cmp
mov
push
jae
dec
add
into
jl
and
and
mov
movsl
repnz
xchg
or
ljmp
jns
dec
shr
sub
je
xchg
pop
mov
pop
pusha
mov
in
js
and
roll
mov
mov
aam
mov
pushf
fstps
sbb
das
add
pop
xchg
xchg
pushf
int
xchg
adc
pop
mov
ror
fdivs
push
lret
mov
test
js
cmp
loope
jo
push
filds
dec
test
mov
test
stos
xchg
mov
sub
mov
mov
mov
cmovno
divl
lea
repnz
inc
jg
adc
icebp
in
sub
cld
andb
into
inc
fwait
pop
mov
jle
test
pop
pop
mov
call
cmp
add
ret
test
xchg
loope
sbb
pop
pop
in
cmp
push
cli
add
mov
rorl
pop
adc
sbbb
not
and
enter
std
adc
mov
hlt
xlat
dec
cltd
pop
out
popf
aad
mov
adc
pop
add
hlt
inc
test
out
xchg
xchg
cmp
jbe
push
lock
dec
sub
ds
dec
ja
fimuls
add
nop
int3
sub
sub
jp
mov
adc
and
mov
out
lods
test
jecxz
lret
dec
cmp
out
test
push
add
adc
xchg
sub
bound
repz
scas
cmp
mov
mov
popa
pop
dec
pop
cmpsl
inc
mov
ret
sti
scas
mov
outsl
cmp
push
std
mov
push
dec
test
inc
jns
frstor
enter
outsb
fsub
das
or
jle
jbe
and
sbb
fldenv
in
jne
push
scas
mov
cltd
sub
jo
loop
push
sbb
setnp
dec
pusha
popf
shlb
mov
sahf
dec
jge
sub
scas
cmpsl
in
push
and
add
dec
cmp
outsb
hlt
ret
testb
ret
push
mov
jl
mov
cmpsb
or
bound
inc
mov
xchg
jne
outsb
add
cltd
jecxz
sbb
push
xor
push
sbb
std
scas
mov
push
dec
or
data16
dec
sbb
adc
jmp
es
test
aaa
xchg
mulb
xor
enter
jae
inc
push
xor
popf
sti
popa
add
outsl
dec
mov
inc
inc
lods
into
mov
ljmp
xor
jb
out
lret
push
and
dec
out
out
mov
adc
jl
xchg
test
fistl
inc
lahf
mov
movmskps
and
pop
arpl
in
stos
pop
int3
push
adc
cltd
xchg
stos
lahf
and
inc
std
pushf
dec
sbb
lods
es
imul
into
sbb
pop
push
inc
and
mov
mov
mov
jp
push
hlt
imul
pop
repz
push
and
es
mov
ret
ds
int
out
arpl
ljmp
aaa
bound
and
cltd
arpl
test
push
sub
pop
test
or
aad
sub
jb
aas
ss
js
call
stos
sahf
jl
or
mov
cmp
in
cltd
nop
add
in
dec
into
or
xlat
pop
or
mov
notb
push
and
test
dec
push
aas
rcr
or
jp
sub
adc
inc
mov
stos
xor
sbb
mov
and
ljmp
imul
cwtl
and
dec
dec
ds
push
inc
ljmp
pop
lea
aam
cmp
std
inc
rol
out
mov
repnz
pop
adc
repnz
adc
mov
dec
mov
adc
cli
inc
lea
outsb
mov
je
mov
jmp
adc
jne
dec
lods
addr16
jo
or
cwtl
faddl
daa
pop
cmp
loope
test
mov
mov
xchg
fidivrl
jecxz
js
dec
mov
mov
movsb
jno
xchg
test
loope
aam
push
aad
daa
or
add
cmp
roll
adc
jge
push
push
xor
dec
out
in
fstl
cmpsb
dec
int
pop
mov
pop
pushf
push
push
lcall
jl
cmp
fstl
pop
mov
js
cwtl
js
lods
and
jp
fnstcw
call
in
in
mov
ljmp
add
xor
sub
int
push
in
mov
int3
inc
fcmove
cltd
cmp
loope
mov
stos
repz
sbb
xchg
out
push
jecxz
sti
xchg
xor
mov
lock
fwait
fwait
mov
and
xor
mov
cltd
push
pop
and
inc
jo
xchg
adc
bound
sbb
pop
jnp
jno
lods
xchg
cmpsl
test
adc
sbbl
mov
popa
repz
loopne
sub
cmpsl
jmp
orl
adc
sub
push
bound
aaa
jo
push
lods
scas
lahf
roll
scas
insl
shl
add
cmp
icebp
es
rcl
hlt
push
xlat
xor
or
aad
push
mov
out
sbb
inc
pop
in
lock
mov
int
testb
fucompp
sub
rcll
inc
into
testb
es
mov
fisubrl
and
sub
dec
pop
add
dec
flds
aad
jecxz
je
mov
jmp
cld
lods
into
imulb
shrb
bound
jne
inc
mov
inc
xchg
shl
rcrl
jbe
enter
adc
dec
or
jnp
mov
test
cmp
push
sti
jg
push
jle
out
scas
xor
add
lods
rcr
int3
xchg
mov
xchg
insl
fidivl
cmp
mov
push
les
mov
loopne
loopne
xor
cltd
jp
sbb
pop
pop
jmp
adc
mov
mov
out
clc
adc
and
xchg
fdivrl
jnp
outsb
sub
adc
xor
xor
or
pusha
ja
ficompl
sub
pop
xor
adc
in
pop
aas
adc
sub
imul
jbe
iret
lds
in
fbld
jp
sbb
loope
ret
stc
push
sbb
imull
mov
lcall
mov
push
sarb
int3
dec
rcll
ss
cmp
push
mov
out
orb
ljmp
test
xor
sbb
sbb
into
sub
imulb
lock
push
sahf
out
loopne
jle
sti
fldt
push
or
dec
ret
in
scas
aam
xor
push
lock
scas
aad
or
push
pop
pushf
mov
data16
dec
in
jno
gs
mov
mov
sub
faddl
out
adc
pop
mov
into
bnd
add
fdivl
jg
ljmp
mov
repnz
mov
hlt
sbb
int
mov
movsb
push
add
adc
repnz
inc
or
mov
lods
cli
cltd
or
addr16
daa
enter
push
int3
das
subb
sahf
and
and
xor
or
add
sarl
jge
ja
mov
dec
and
enter
mov
adc
loop
jmp
out
jge
pop
add
push
mov
movsb
lods
sbb
xor
in
pop
add
inc
xchg
shll
and
cmp
sbb
xor
cmp
rorb
xchg
ss
xchg
sub
dec
inc
xor
xor
sahf
cmpsl
adc
pop
out
xor
idivl
rcrb
jl
lods
movsl
push
rcll
lahf
xor
cmpsb
dec
out
mov
adc
ret
push
punpckhdq
xchg
clc
or
mov
jp
pusha
mov
jns
inc
scas
and
cmp
xor
jno
xchg
jae
ficompl
lahf
fimuls
ljmp
or
add
sub
nop
xchg
js
es
xor
mov
pop
lds
ds
sub
xor
lret
jmp
loopne
hlt
jp
xlat
out
sbb
hlt
push
or
dec
fmull
pop
jae
jne
mov
divl
cmp
test
in
arpl
leave
adc
ja
sub
xor
cmp
arpl
push
popf
mov
mov
jge
xor
push
inc
mov
and
popf
sbb
jle
jno
cmc
add
ret
loop
jl
aam
xchg
or
rol
lret
push
cmp
outsb
and
fadds
mov
xor
and
ss
lods
popa
les
imul
mov
daa
test
xchg
pop
mov
xor
add
pop
fisubrs
push
jbe
inc
repz
lahf
xor
and
std
aas
nop
jno
mov
pop
mov
cmp
adc
xor
fs
int3
mov
into
add
jp
cli
cld
sub
lods
mov
imul
cmp
lea
mov
jge
push
insb
out
aaa
push
add
movsl
mov
roll
push
sub
stos
push
cltd
dec
pusha
pop
ljmp
lret
jmp
movsl
aad
aam
or
mov
adc
mov
shll
popa
mov
jle
xchg
gs
cmc
sub
outsl
push
shlb
inc
pop
shlb
orb
pop
popf
push
mov
rcl
bnd
jecxz
xchg
das
incl
nop
cli
xor
ja
movsb
imul
ljmp
inc
xor
aaa
ja
and
push
scas
repnz
or
ret
out
daa
lret
outsl
popf
mov
jp
cmp
mov
add
inc
mov
xor
js
icebp
sbb
jge
insb
or
jb
xchg
daa
inc
jne
mov
call
mov
movsb
jae
sub
into
into
xchg
lahf
add
iret
jo
stc
mov
pop
js
xchg
jbe
loope
cltd
mov
jg
rcrl
addr16
inc
push
ja
mov
rorl
clc
jne
in
orl
push
roll
loope
fisttps
jno
xor
cwtl
mov
inc
jb
pop
mov
arpl
xor
call
or
inc
dec
movsb
lock
or
stos
jecxz
jl
jns
lods
cmp
bound
dec
pop
cli
mulb
mov
ds
sub
iret
pop
ljmp
das
add
sub
lea
add
xchg
jbe
mov
mov
jle
loope
pop
out
jno
mov
xchg
sti
jno
dec
repnz
mov
das
leave
into
push
das
inc
cmp
xor
pop
gs
lret
movsb
sub
andb
or
fdecstp
aam
scas
repnz
ret
cld
pop
xchg
and
sub
xor
pushf
add
cltd
dec
dec
sbb
std
push
in
sub
imulb
push
aas
insb
mov
ss
bound
mov
pop
pop
add
xacquire
daa
ret
adc
movsb
push
jne
mov
movsb
fcoml
push
pop
jne
add
into
ficomps
in
lret
xor
call
aas
sti
mov
popa
testl
pop
or
push
push
jp
or
rorb
sub
jecxz
sar
and
popf
lcall
and
dec
daa
insb
lcall
int3
mov
scas
clc
lods
xor
cmpsb
cmp
jcxz
push
cmp
push
in
dec
ja
movsl
sbb
push
and
jnp
push
int
lods
add
jmp
pop
data16
cmp
or
divb
ret
add
mul
leave
out
rolb
push
inc
lcall
dec
cmc
rcrb
shll
push
out
jo
cmp
xchg
add
daa
enter
sbb
pop
cltd
inc
fwait
mov
pusha
mov
rdmsr
xchg
inc
push
mov
cmp
sahf
fmull
and
xor
cld
sbb
int3
cmpsl
push
xor
mov
test
andb
adc
jge
addr16
pop
call
out
aam
xor
mov
add
xor
test
sub
pop
jge
enter
fldcw
jb
sbb
stc
movsl
xor
ds
stos
dec
repz
sbb
addb
pop
mov
cmpsl
xor
mov
jg
leave
loopne
fucomip
mov
ljmp
jge
xchg
lods
call
xchg
pop
sub
insb
fnsave
xor
paddw
pop
mov
ds
in
push
xor
fcomps
movsl
das
mov
or
arpl
jo
lahf
int3
or
mov
mov
lcall
mov
fsubs
pop
lods
in
hlt
or
mov
outsb
aad
add
pop
xor
fimull
not
lock
inc
enter
je
cli
push
adc
pop
test
push
repnz
std
daa
or
jp
popf
and
into
pushf
cmp
push
filds
or
push
mov
jae
sbb
mov
xchg
ret
addr16
nop
jb
inc
scas
jnp
adc
jbe
insb
mov
fstpt
arpl
push
jp
arpl
or
xchg
push
add
std
sub
xor
sbb
leave
out
lds
inc
pusha
mov
cmp
jo
mov
pop
mov
fbld
sub
shlb
pop
or
ficompl
cmp
mov
ds
dec
mov
out
xchg
mov
in
jns
into
out
cmp
ret
xor
mov
aad
cmovo
mov
push
in
jnp
sub
pop
outsl
mov
sbb
add
pop
jp
xchg
jb
fsubrp
out
inc
pushf
mov
mov
outsl
and
pop
push
jne
inc
inc
and
ja
andl
push
xor
push
dec
ss
rcrl
outsb
mov
cmp
mov
stos
pop
shl
lret
and
sahf
add
imul
fistpl
stos
bswap
add
movsl
call
insb
and
jno
mov
pop
aam
cwtl
sti
push
adc
aaa
sti
jecxz
and
adc
idiv
push
xchg
mov
xchg
xlat
xchg
int3
inc
xor
add
add
xor
sbb
jg
mov
out
push
out
flds
push
ds
inc
mov
and
and
ret
daa
decb
rcll
pop
dec
clc
sub
mov
std
adc
imul
xor
fcoms
std
jmp
dec
and
cmp
movsl
std
jge
sub
jecxz
mov
int
test
fcoml
xor
inc
push
sarl
xchg
mov
dec
sub
push
mov
pop
sub
pop
xchg
inc
pop
sbb
xor
lea
decb
pop
jmp
cmp
out
push
push
adc
mov
popa
jl
fwait
sbb
nop
fdivrl
pop
xor
adc
clc
sbb
repnz
cmpsb
fsubl
xchg
dec
xchg
int3
push
fiaddl
fisttps
ret
dec
adcl
dec
push
cmpl
fcompl
ja
inc
nop
xor
inc
xchg
lea
scas
push
xchg
jbe
subb
add
shrb
fidivrl
inc
cmpsl
pop
pop
jge
xor
movsl
call
je
jo
ljmp
mov
jns
and
shll
fisubl
pop
shrl
jge
sbb
mov
leave
sahf
xchg
dec
test
fwait
clc
mov
dec
jmp
and
fwait
nop
pop
mov
sbb
add
add
shr
jmp
out
jo
inc
fisttpll
mov
stos
fs
cmpsl
lods
dec
js
out
outsl
mov
sbb
add
fisttpl
jne
ret
fsts
pop
add
xchg
pop
fs
jnp
fidivs
aas
push
mov
lret
inc
in
ja
ret
or
mov
repnz
or
or
or
pop
iret
in
add
mov
inc
fcmovbe
lahf
int
aaa
popf
stos
pop
adc
cltd
dec
shrl
das
inc
inc
add
dec
sbb
loopne
imul
andb
inc
inc
push
cmp
pop
ret
int3
push
sbb
das
daa
jns
cmc
add
fs
outsb
dec
mov
mov
enter
test
call
xor
lods
syscall
mov
popf
push
mov
pop
pop
das
mov
mov
outsl
ss
adc
cmp
xchg
icebp
imul
mov
adc
scas
inc
mov
iret
xor
dec
dec
scas
hlt
and
push
pmullw
bswap
jb
mov
mov
adc
stc
mov
outsl
mov
or
in
js
and
sub
mov
push
stc
mov
or
xor
adc
pop
xchg
popa
xchg
mov
add
aad
jb
rcll
mov
dec
cwtl
std
lcall
in
add
jmp
mov
popa
xchg
out
out
push
leave
rclb
adcb
sti
shrb
mov
push
jl
call
cltd
or
fisttpll
inc
mov
out
shlb
push
mov
adcl
popa
push
xor
das
pop
inc
into
jmp
lret
mov
add
mov
stos
mov
inc
pop
out
sti
xor
fistps
cltd
sub
cmp
sub
outsb
pop
dec
lock
push
push
xor
inc
lret
jbe
movsl
cltd
repz
jecxz
fidivl
outsl
mov
mov
push
xorl
lods
xor
cmc
fcomps
mov
mov
inc
insb
aas
mov
popa
cmp
hlt
jne
arpl
lods
lods
add
or
dec
out
dec
sub
pop
adc
addr16
or
mov
in
popf
sub
or
scas
jo
cmc
test
or
sbb
add
cmp
in
lods
push
insb
xor
test
sub
aad
sub
lods
cltd
je
pop
int
dec
xorl
lea
scas
cli
push
inc
mov
mov
jmp
test
loop
inc
xor
pop
andb
jecxz
cs
arpl
dec
inc
pusha
mov
cmpsb
or
push
loopne
pop
clc
cmc
scas
xchg
dec
adc
xchg
imul
sbb
xchg
mov
push
arpl
mov
adc
mov
add
repnz
and
fisttps
cwtl
or
jae
inc
jle
pusha
cmp
enter
std
dec
sbb
pop
xor
sbb
mov
mov
mov
xchg
cltd
sti
push
pop
test
and
fimull
popa
sbb
addb
iret
enter
adc
mov
jns
incb
in
shll
fmuls
scas
pop
jge
in
adc
jmp
imul
xchg
fdivs
mov
loop
stos
adc
or
xchg
jge
enter
add
mov
xchg
pop
xchg
subb
nop
lock
dec
es
mov
pop
je
and
mov
mov
push
cmp
mov
mov
repnz
xchg
fsubs
or
clc
mov
les
push
shr
xchg
and
xchg
ftst
dec
repz
fadds
sahf
outsl
test
inc
inc
loope
inc
mov
lret
in
shrb
mov
and
das
adcl
int3
out
mov
out
pop
mov
or
mov
daa
mov
pop
sbbb
pop
sti
adc
test
orl
and
fwait
repnz
mov
mov
out
fwait
mov
add
dec
addr16
aad
or
fnstsw
int3
pop
lods
xor
add
imul
notb
test
cmpsl
daa
ret
cmp
hlt
xor
fldcw
xchg
fiaddl
add
sub
test
dec
lock
push
hlt
enter
out
fstpl
xchg
mov
lret
fisubl
dec
and
pop
jg
xchg
jb
out
cmp
lods
pop
sub
dec
cltd
xor
dec
lret
adc
es
out
lock
mov
fsubrs
lahf
out
repnz
fdivp
pop
test
or
jno
ret
std
cs
lahf
dec
mov
add
lds
mov
sbb
cmp
jb
mov
push
sti
mov
hlt
sub
dec
and
imul
lahf
add
cltd
adc
movsb
pop
pop
fs
fs
pop
aad
movsb
out
ret
dec
out
xor
incb
sar
stos
and
hlt
cli
dec
jb
push
pop
fiaddl
jns
iret
into
sti
adc
and
stc
scas
pop
pop
cmpsb
xchg
mull
push
xor
shrl
push
jl
sub
cmpsl
test
adc
pusha
aaa
sub
roll
std
shll
and
lea
pushf
push
push
fldl2e
push
sub
mov
lret
pop
or
add
dec
gs
dec
lret
cs
mov
inc
imul
loopne
in
hlt
adc
mov
cmp
enter
movsl
rclb
sarb
mov
in
imull
sub
pop
xchg
iret
inc
lods
dec
inc
arpl
pusha
imul
pop
mov
push
or
inc
icebp
sub
push
clc
lahf
ret
cmp
jns
mov
pushf
xchg
xor
movsb
mov
jle
cmpsl
sub
aaa
roll
imul
dec
out
add
stos
adc
out
aaa
loop
cmp
js
sub
mov
cli
es
adc
out
aam
push
popa
not
inc
loop
cmpsl
cmc
aam
sbb
test
dec
sbb
nop
out
fcmovnb
adc
pop
mov
call
fdivr
add
test
sahf
lret
mov
jns
subl
cmp
xor
loope
dec
cltd
and
sbbl
aam
mov
xlat
setne
adc
mov
lcall
jno
lret
nop
xchg
push
enter
sbb
stos
adc
inc
mov
bound
inc
push
ljmp
mov
rorl
loopne
in
push
mov
xchg
push
movsl
mov
ret
add
das
push
lods
xor
add
jb
cmp
adc
xor
xor
ds
movsl
sbb
leave
ja
adc
cli
loope
xchg
adc
imul
js
sub
insb
mov
in
push
or
pop
lcall
jne
inc
out
or
shrb
lds
push
dec
mov
fs
adc
mov
and
aad
nop
fisubs
adc
add
cmpl
adc
shl
mov
gs
outsb
add
add
stos
fnstsw
dec
push
fsubr
mov
aam
ljmp
dec
lea
dec
mov
xlat
add
in
in
test
dec
pop
push
arpl
xchg
rcll
psubsb
cltd
mov
lahf
inc
test
imul
fwait
pop
ja
dec
mov
cmp
cmp
sbb
xlat
lret
shll
push
push
inc
pop
or
mov
or
and
in
stos
mov
mov
in
xchg
mov
cmp
mov
jb
mov
sbb
mov
test
xchg
in
sbb
dec
lret
mov
pop
rcrl
jmp
repz
mov
jp
movsb
stos
movsl
add
aad
andl
xchg
ss
mov
push
leave
ljmp
sti
out
xor
insl
mov
pushf
pop
add
sub
or
jnp
pushf
or
movsl
fdivs
xor
scas
inc
sarl
jnp
mov
loop
adc
jae
push
jno
idivl
arpl
fsts
jnp
dec
pop
sub
dec
dec
pop
sbbb
adc
push
adc
xchg
cmpsb
cmpsl
push
jle
imul
out
add
or
rorl
or
nop
daa
scas
shrb
das
mov
jge
dec
xchg
lods
dec
lret
ljmp
xchg
in
xor
xchg
jecxz
idivl
adc
pop
or
lret
cs
mov
imul
test
loopne
push
ljmp
and
or
lods
add
pusha
dec
xchg
in
aad
lods
ss
xor
inc
mov
xchg
dec
test
or
iret
imul
xlat
push
add
test
popw
xor
push
in
ret
mov
fiadds
std
adc
outsb
ror
loop
pop
sbb
nop
and
jmp
jmp
xor
iret
pop
cltd
lret
adc
cs
cmp
addr16
dec
mov
inc
ss
xor
jne
cmp
insl
xchg
mov
add
sbb
icebp
cmp
jg,pt
inc
adcl
adc
test
out
fimull
xchg
dec
xor
sbb
push
and
pop
ss
mov
mov
cmp
pop
push
mov
mov
leave
pushl
inc
popf
mov
imul
jno
jns
adc
add
push
cmp
pop
divb
jmp
stos
jbe
popf
push
sahf
mov
das
out
mov
mov
inc
inc
ror
mov
out
push
icebp
dec
rorb
jbe
ret
sbb
gs
inc
out
mov
into
test
out
inc
and
dec
inc
ja
xor
insl
or
bound
push
inc
pop
mov
and
mov
sub
pop
das
xor
fsubrs
add
inc
es
icebp
bound
cmp
push
push
mov
repz
xchg
rcr
adc
xchg
sbb
add
adc
neg
ret
and
push
out
lcall
mov
push
adc
repz
in
mov
pop
sbb
mov
mov
stos
mov
aam
loopne
xchg
push
jb
sub
push
ret
sbb
mov
add
rcr
xchg
lahf
pop
arpl
sahf
shlb
repnz
xor
or
mov
sbb
test
cmpsl
iret
sbb
fiaddl
movsb
fs
fsubs
fs
fwait
xlat
xchg
add
xor
stc
fsts
inc
push
jno
jb
addr16
or
cmp
das
push
push
xor
mov
loopne
pop
mov
rorb
gs
aam
xor
push
adc
lods
or
into
repz
mov
mov
mov
dec
cmp
les
mov
push
or
lods
lahf
dec
xchg
and
shrl
jp
cmc
cltd
loope
bound
sub
les
jae
mov
imul
dec
popf
push
add
sbb
xor
outsb
loop
cmp
jmp
cwtl
sub
clc
idivl
scas
and
adc
or
loop
ficomps
xorl
sbb
pop
inc
push
pop
imul
xchg
pop
push
xor
add
pop
push
orl
xchg
leave
and
or
add
orb
push
fistpl
arpl
sub
loop
call
jne
les
dec
in
xchg
arpl
insb
dec
mov
in
sbb
mov
daa
out
fadds
pop
nop
ret
lods
aad
arpl
cmp
pop
mov
cmp
jo
push
stc
or
xor
pop
xlat
out
scas
outsb
in
das
outsl
mov
jmp
sub
and
adcl
inc
or
add
dec
test
jae
iret
mov
icebp
cs
add
or
pop
std
push
adc
mov
pushf
push
xchg
lea
xor
call
loopne
xchg
stos
cli
cmc
jmp
pop
sbb
lds
ja
rep
outsl
hlt
inc
sbb
sbb
jae
scas
mov
aaa
js
and
movsb
cmp
mov
insb
call
jne
jae
cmpl
add
sbb
aas
mov
nop
les
dec
shl
xor
and
rcll
mov
xor
testl
dec
mov
fimull
jnp
pop
imul
out
pusha
and
mov
add
sbb
adc
mov
or
out
jecxz
pop
leave
cmp
pop
dec
sub
add
or
test
orb
xchg
inc
and
fs
idivl
jb
and
notb
push
push
or
inc
stos
stos
adc
jb
and
sbb
mov
pop
stc
xor
enter
std
inc
cmp
mov
pop
leave
scas
xor
pop
dec
push
inc
iret
movsl
loope
sub
sub
xor
std
jns
dec
movsl
into
fimull
mov
push
xlat
mov
jecxz
adc
and
dec
sti
test
mov
out
cmpsl
xchg
sti
or
mov
cmp
insb
dec
xor
pop
adc
inc
and
adc
cmpsb
fidivs
mov
aad
in
dec
fs
or
add
xchg
mov
or
jle
mov
outsb
inc
sub
ficomps
sbb
fistps
pushf
mov
and
pushf
pop
push
lahf
call
icebp
das
in
fcmovnb
xor
lods
out
arpl
arpl
jmp
cmc
cmp
jle
lret
jns
inc
addb
and
out
add
call
test
cmp
shlb
sbb
mov
push
push
cmpsl
icebp
inc
push
sub
mov
add
into
xor
aas
scas
aad
adc
mov
movsl
int
das
xchg
or
mov
xchg
push
lcall
loope
dec
cld
pop
insl
pushf
insl
ja
sbb
inc
or
push
mov
ret
ret
cmpb
sub
pop
cmp
inc
sbb
mov
repnz
push
scas
mov
cmpb
lea
or
clc
mov
dec
cmp
sbbl
xor
or
sub
hlt
sti
mov
ficoml
mov
xchg
fmull
out
loopne
push
cs
or
mov
and
and
repnz
mov
ds
aaa
rclb
data16
and
inc
cmp
inc
pop
psadbw
push
js
jmp
fs
push
adc
mov
cmp
sub
scas
add
jp
pusha
pop
sbb
ss
jg
sbb
out
and
repz
sbb
adc
adc
pop
out
push
xor
aad
mov
insl
jl
cmp
xchg
xchg
add
repz
mov
adc
dec
inc
xor
lds
jo
sub
test
pop
shl
mov
jae
mov
jecxz
inc
mov
repnz
jl
ljmp
inc
je
addl
cwtl
gs
out
clc
pop
pop
dec
mov
jl
push
pop
push
fwait
les
mov
stos
jecxz
imul
stc
xor
pop
mov
sahf
mov
jge
or
imul
ret
aad
xchg
inc
aam
xor
xor
or
pop
cmpsl
dec
xchg
shr
mov
dec
xor
xchg
mov
cwtl
or
or
jnp
dec
mov
in
movsl
out
add
xchg
mov
push
and
aam
test
or
sbb
pushf
mov
sahf
pushf
loope
movsl
add
cmp
xchg
stos
xchg
andb
ja
dec
shr
fcoms
movl
nop
xor
or
cmp
mov
inc
in
pop
sub
or
idivb
cltd
mov
adc
movsl
dec
lret
clc
fs
pushf
movsl
lock
hlt
fldl
les
nop
aas
lret
int3
pop
pop
mov
cmp
adc
jl
and
lea
and
pop
ja
or
sarl
push
cmp
and
and
inc
mov
cmp
dec
cld
jmp
xor
xor
imul
fbld
mov
aad
lds
mov
inc
pop
inc
pusha
push
push
arpl
cltd
xor
and
sub
fmull
jl
movsb
pop
lcall
jo
jnp
add
mov
cmp
ja
mov
add
pop
pop
fdivl
fbstp
pop
adc
or
fbld
outsb
mov
das
mov
cmpsb
mov
cmpsb
movsb
sub
mov
xor
jne
sbb
dec
xor
call
and
dec
aam
mov
push
insb
enter
out
cmc
loop
in
lock
mov
sub
and
ljmp
push
mov
push
cmp
cmpsl
sbb
mov
rorl
push
pop
dec
ja
lea
add
push
ret
outsl
xchg
ja
xor
std
negb
mov
fdivrp
pop
jl
aam
fldt
movsl
shrl
shll
mov
mov
mov
insb
sbb
les
movsb
pop
push
add
aas
aas
in
sti
fs
inc
orl
scas
popf
mov
gs
out
dec
push
fdivl
scas
out
push
pop
mov
mov
lods
sbb
push
cmp
call
mov
jb
inc
xchg
jg
xchg
jne
pop
shll
inc
cmp
mov
jge
enter
jbe
dec
pop
xor
fcoml
out
push
xor
testb
sbb
jae
or
and
nop
cmpsl
and
jmp
bound
xchg
push
xor
adc
xorb
lea
mov
or
mov
fisttps
jb
inc
aas
mov
test
fbld
and
movsb
mov
das
lea
sbb
jno
pop
cmp
and
jb
inc
ds
pop
icebp
test
je
dec
aad
inc
sbb
push
cwtl
scas
cmp
pop
orb
ds
orb
xor
lea
cwtl
sbb
xchg
mov
fsub
mov
iret
add
pop
jle
fwait
mov
xor
pusha
mov
inc
jne
pushf
fistl
mov
pop
sub
adc
add
ja
jg
subb
mulb
sbb
pop
popf
shll
lret
rorb
stc
cld
mov
loopne
bound
movsb
sbb
shrl
dec
cmpsl
mov
mov
sbb
push
aam
jp
adc
stos
es
sub
out
stc
pushf
cltd
mov
sbb
js
push
popa
sbb
lock
bound
xchg
shll
inc
das
mov
xor
pop
outsb
sbb
pop
ss
test
mov
cmc
and
arpl
or
dec
pop
xchg
xchg
dec
out
mov
xchg
out
mov
inc
dec
jp
aas
fs
leave
mov
xchg
stos
insl
out
jns
addl
insb
mov
mov
pop
jp
mov
xor
cmp
xchg
pop
sbb
dec
test
add
mov
and
roll
addl
sbb
jecxz
xor
mov
pusha
mov
lock
lcall
aas
std
mov
lret
aaa
push
cli
test
popa
xor
loopne
inc
add
sbb
leave
imul
lods
icebp
ret
dec
mov
dec
dec
in
xchg
in
cmpsb
xchg
add
or
mov
imul
div
xlat
add
fsubrs
fwait
mov
out
mov
scas
sub
rorl
mov
imul
out
adc
add
xor
push
jns
aas
xor
and
mov
adc
sub
jns
aaa
mov
sbb
jecxz
ss
pop
xchg
in
cmp
push
into
mov
aaa
inc
fimull
std
cmpsb
pop
shl
mov
xlat
jbe
and
xchg
in
dec
into
outsb
sub
popf
pop
adc
sarb
repnz
or
push
push
stc
sub
leave
insb
sbb
mov
fsubr
mov
dec
push
stc
leave
adc
pop
jno
or
loope
mov
outsl
push
pop
in
adc
xchg
mov
sbb
popf
add
fcom
cld
cmp
in
test
push
lock
or
cmp
loopne
jo
cmp
cmp
mov
fists
pop
mul
lods
daa
mov
jp
int
cmpsl
arpl
xchg
pop
dec
sub
arpl
fs
inc
loop
jmp
xchg
dec
mov
mov
xor
nop
fstps
dec
xor
xchg
jp
dec
xchg
imul
sti
into
sub
cmp
dec
sbb
stos
pop
test
mov
add
jns
fucomp
lret
mov
mov
adc
xchg
cwtl
inc
and
lods
repnz
jle
test
mov
nop
nop
or
sub
xchg
inc
and
pop
cmp
jl
mov
or
jmp
mov
dec
jg
or
icebp
mov
mov
dec
enter
movsl
sbb
push
stos
xchg
cmpb
call
daa
push
aas
movsl
into
out
insb
mov
mov
mov
dec
mov
inc
scas
stos
leave
xchg
bound
cmpsb
xor
xchg
popw
outsb
arpl
adc
decb
xlat
inc
lahf
negl
daa
add
out
ljmp
scas
cld
mov
add
jo
fistps
mov
jg
imul
ret
stos
dec
dec
sbb
scas
icebp
fstl
in
ljmp
movsb
and
or
xchg
jne
mov
cmp
into
jmp
clc
loope
in
mov
ss
fcmovnb
mov
ja
sbb
sbb
nop
jp
out
into
subb
mov
xlat
jb
std
push
gs
cmpsl
aas
rorb
push
subl
movsb
ja
loopne
sub
sbb
mov
mov
addr16
mov
inc
cmc
loop
mov
clc
mov
fiaddl
mov
mov
popf
sahf
sub
loop
xchg
clc
mov
sbb
out
enter
adc
mov
mov
push
pop
in
pop
sbb
sub
xor
je
das
cltd
out
cmp
mov
mov
add
jbe
loop
test
inc
addr16
lods
or
out
xchg
pop
icebp
nop
sahf
insb
movsb
in
repz
cmp
xchg
jns
int
je
ret
lods
arpl
ret
mov
add
xchg
sbb
lock
xor
mov
mov
and
sub
cmpsb
and
and
cmp
jns
inc
nop
cli
pop
cmpsb
adc
rcl
push
or
add
mov
mov
imul
and
adc
mov
pop
inc
mov
pop
sbb
mov
inc
scas
cmp
mov
imul
mov
add
mov
cmpsb
push
add
xor
push
mov
inc
cmpsb
push
js
add
inc
aam
jo
jge
adc
push
call
dec
mul
idivb
xor
cs
ret
pop
fcomp
pop
cmp
pop
int3
movsl
push
pop
mov
call
xor
pop
and
test
cmp
ret
insb
pop
addr16
movsb
int
je
out
pushf
in
in
lret
je
pusha
inc
or
mov
sbb
iret
mov
sub
ss
cli
ret
in
pop
pushf
in
or
ss
fadds
lcall
sbb
fiadds
adc
stc
jg
and
mov
sbb
out
mov
pop
mov
xor
loop
hlt
out
decb
jbe
fdivr
cmp
out
pop
out
pop
sbb
dec
loope
out
lds
xor
push
insb
js
pop
lret
pop
sbb
cmp
outsl
push
push
add
test
add
pushf
scas
rcl
aas
popf
lcall
jae
fdiv
xor
faddp
mov
mov
out
das
fsubrs
in
idivb
popf
addr16
jbe
jl
scas
sbb
mov
jl
sub
push
pop
std
mov
push
sarb
or
jno
pop
jp
pop
push
push
out
aad
jo
xchg
enter
inc
mov
sub
pop
scas
pop
in
fdiv
testb
jb
js
andb
mov
lods
cmpsb
dec
or
lret
out
lock
data16
outsb
xchg
or
mov
sub
sub
ret
inc
popf
cmpl
inc
ja
xchg
in
scas
ljmp
std
jecxz
xchg
filds
lcall
shl
jecxz
cmc
aad
divb
es
mov
mov
push
or
dec
mov
fwait
push
jle
sbb
js
aam
stos
test
ss
jmp
pop
data16
pop
jb
orb
int
pop
xor
inc
jmp
jecxz
inc
mov
sahf
sbb
hlt
xor
adc
fnstsw
enter
popf
cmp
mov
adc
addl
push
push
cmp
push
loope
xchg
jecxz
repnz
ret
les
sub
scas
adc
insb
jmp
aam
fwait
dec
rcr
push
je
mov
js,pn
push
scas
sub
jno
sub
dec
cltd
mov
enter
mov
fwait
jb
cltd
fsubrl
iret
push
pop
and
lods
andl
enter
cmp
pop
mov
fidivrs
sub
jmp
cmp
dec
das
out
and
out
ret
lret
adc
dec
xchg
jge
lods
jmp
add
jne
mov
push
insb
out
addr16
sahf
or
test
inc
jae
insb
shll
jne
jo
lock
mov
push
and
mov
jbe
xor
xorl
and
adc
xor
add
movsb
sti
test
sti
or
notl
mov
mov
jbe
repz
out
pop
adc
movsb
cmp
gs
js
loopne
in
popf
outsb
adc
fwait
mov
out
imul
mov
xor
sub
jo
mov
or
fstpl
pop
pop
movsb
dec
sub
iret
shlb
gs
mov
ja
xchg
inc
cmpsl
mov
fisttpll
add
mov
mov
pop
inc
inc
and
xor
dec
jle
hlt
or
insl
cmpsb
and
jl
ret
push
test
pop
cli
pop
out
das
ja
lds
insl
inc
push
bound
std
sbb
dec
jle
and
adcl
push
stos
jecxz
xchg
int
push
iret
and
cmp
inc
iret
enter
imul
notb
in
sahf
mov
hlt
cmp
xchg
add
lret
or
jns
test
sub
jp
mov
std
mov
mov
mov
es
ja
xor
ret
cmpsb
and
and
cmp
in
int3
pusha
xlat
sahf
xchg
lods
fs
pop
sub
jae
mov
test
xor
test
lret
inc
out
or
shll
cmp
pop
iret
jnp
push
cmpl
hlt
pushf
insb
mov
or
in
xchg
or
nop
mov
and
pusha
cltd
div
ror
mov
imul
cmp
nop
push
or
add
pusha
jbe
mov
shlb
outsl
repz
mov
adc
mov
mov
mov
mov
xchg
movsb
pop
and
pusha
pop
lret
mov
sbb
jge
shll
adc
or
xchg
addr16
cli
mov
sbb
sahf
add
or
ljmp
or
fsubl
mov
adc
out
mov
jl
dec
add
loope
or
mov
loopne
push
push
inc
addl
ror
outsl
popf
add
jle
jbe
push
jle
fsub
sbb
pop
or
push
adc
mov
xor
mov
mov
pop
out
fldcw
cld
and
int
xchg
pop
cmc
jns
adc
dec
mov
jo
xchg
jecxz
aam
add
or
jbe
add
and
sbb
xor
imul
jae
or
and
filds
int3
imul
mov
cwtl
push
aas
ret
insl
cli
mov
addb
pop
inc
cmpsb
outsl
lcall
iret
mov
fsubs
mov
dec
jg
shll
aas
jp
push
cmpsb
mov
and
ds
out
call
je
icebp
daa
test
mov
push
jno
mov
push
std
jmp
mov
mov
iret
lahf
ret
jb
scas
clc
mov
jo
pusha
cld
outsl
xchg
int3
jp
mov
test
jo
cwtl
mov
xchg
sub
std
cmpsl
lock
sub
adc
mov
xchg
fstps
add
adcl
ret
cld
sub
out
lret
test
inc
clc
xchg
cld
fwait
stos
push
and
in
xchg
test
mov
mov
or
dec
jne
mull
push
pop
jecxz
sahf
outsb
movsl
pop
and
sub
fbld
push
or
xlat
sub
and
notb
clc
adc
ret
fnsave
out
sbb
inc
push
aas
inc
inc
lods
push
mov
mov
dec
pop
push
test
nop
cmp
cld
imul
xchg
lret
push
push
or
pinsrw
js
or
cmpsl
testb
mov
mov
xchg
jns
lock
cld
mov
mov
xchg
mov
fmuls
mov
cmc
sbb
out
inc
aas
dec
mov
mov
cmp
and
mov
and
jp
add
mov
clc
fistl
pop
pop
cmp
stos
in
add
jno
fwait
mov
sub
jnp
fcom
or
rcr
scas
jne
xor
test
fs
lret
mov
jno
inc
xorl
mov
jnp
push
push
cwtl
fcoms
mov
movsb
xor
jg
roll
dec
cmp
addr16
add
xor
mov
call
dec
scas
push
xor
in
je
stos
ret
push
loope
ret
in
pushf
cmp
mov
cltd
test
mov
adc
movsl
mov
data16
or
mov
sbb
in
inc
ss
sahf
loop
ret
dec
mov
jns
jnp
cmpsb
das
data16
or
roll
mov
mov
jl
xchg
aam
sub
and
inc
xorb
stos
test
fcoml
and
push
push
sbb
sbb
add
mov
mov
mov
or
pop
pop
addr16
dec
inc
add
into
subb
mov
call
ficoml
sub
lcall
lods
daa
mov
fnstenv
lcall
push
sub
sub
je
jb
lahf
dec
mov
add
pop
ja
cwtl
cmp
or
sbb
push
movb
out
cmc
pop
js
das
adc
lock
xor
sub
inc
cmpsb
pushf
lret
mov
movsb
and
mov
jg
fwait
shr
xor
push
jg
fdivrs
int
stos
xlat
push
or
sahf
bound
cmp
shl
jns
test
leave
jne
rolb
gs
inc
xor
insb
push
lret
jo
or
in
or
inc
scas
lds
fsub
out
lret
testl
or
test
lret
aaa
xor
rcrl
and
in
call
iret
aam
lret
int3
sbb
ljmp
sub
push
je
push
rclb
lret
std
sbb
addr16
sarl
xor
popf
loop
arpl
and
push
ja
adc
jae
push
inc
ret
imul
mov
testb
jp
adc
es
out
adc
xchg
cmp
pop
stos
dec
or
fisttpl
fwait
movsl
shlb
fsubl
cld
andb
adc
mov
inc
mov
pop
gs
push
dec
adcl
xlat
stc
cs
cmc
cmpsb
xlat
cli
fsubrl
mov
push
xlat
or
mov
icebp
cltd
repz
inc
sub
add
pop
adc
pop
mov
sahf
push
inc
xchg
in
mov
xchg
mov
pop
jp
hlt
mov
popa
lods
dec
pop
push
test
pop
inc
sti
ret
and
push
loop
popa
mov
xor
add
arpl
sahf
inc
push
dec
sub
sub
jle
pop
test
add
and
out
mov
mov
iret
loopne
push
push
sub
iret
jge
jmp
cmp
cmp
and
xchg
pop
or
or
jle
and
flds
or
cmc
rolb
test
sub
lea
mov
pop
jecxz
clc
and
ds
inc
jb
lret
mov
add
xchg
pop
shrl
aas
jle
sbb
lret
roll
pop
jmp
xchg
push
aas
movl
neg
mov
cltd
arpl
mov
pop
cmovne
sahf
cmp
and
xor
adc
pop
andb
add
std
push
lea
inc
mov
insb
testb
leave
and
dec
cmp
aad
movsb
xchg
cmpsl
aam
mov
mov
sub
pop
nop
decl
mov
loope
push
fs
popa
bound
dec
lcall
xchg
jl
or
fidivrl
mov
dec
xchg
js
int
insb
int
push
popa
loope
out
outsl
fmuls
push
add
jne
jmp
push
xchg
pusha
inc
stc
sahf
cmp
iret
mov
mov
je
mov
cmc
pop
sarb
xorb
lcall
push
xlat
cs
stc
adc
fwait
stos
je
push
pop
push
es
inc
inc
sub
xor
jne,pt
sbb
or
or
jo
adc
jns
arpl
and
lods
sarl
push
mov
aaa
ljmp
push
mov
addr16
inc
sahf
add
xor
inc
mov
or
xchg
pop
pop
test
xchg
dec
pop
movsl
mov
xchg
outsl
leave
sbb
sbb
inc
inc
dec
adc
cmc
cmc
push
or
addr16
gs
jo
sub
out
loope
addr16
sti
dec
jb
sbb
jp
pusha
jo
cmpsl
pop
stos
or
lods
cmp
inc
rcrl
sbb
notl
insb
int3
es
popa
loop
ljmp
shr
jo
test
hlt
push
cmp
or
push
mov
cmp
push
bound
jg
rcl
daa
xor
add
in
mov
add
xchg
push
lcall
mov
test
test
xchg
or
cmp
adc
aam
sbb
test
jne
repz
sbb
mov
push
or
aas
insb
call
icebp
jge
sbb
arpl
and
mov
jns
loope
packuswb
sub
inc
mov
inc
movsl
add
rorb
xor
int3
dec
xchg
inc
mov
cld
cmp
shll
fs
dec
inc
mov
clc
rolb
sbb
inc
imul
sbb
jle
pusha
pop
xor
adc
adc
add
stos
sbb
add
push
fdivrl
pushl
dec
call
push
imul
and
mov
adc
cmp
cmp
test
rcrl
aad
cmc
jecxz
dec
ja
loop
sub
xor
mov
sbb
push
jae
add
add
pop
jae
cwtl
dec
mov
jp
cmp
add
fdivr
xor
jle
xchg
fildll
clc
call
mov
aam
jg
pusha
dec
aaa
call
sti
xchg
fsub
lods
adcb
mov
iret
mov
and
push
sub
int
fldenv
je
daa
scas
sbb
sbb
xor
pop
cmpsl
fldl
adc
inc
adc
fbstp
and
add
jb
dec
or
pop
in
dec
pusha
add
mov
cmp
lods
icebp
out
int3
sub
xchg
js
int
sub
push
fwait
insl
mov
mov
aam
out
mov
std
lahf
movb
xor
or
fcompl
inc
adc
ret
ss
dec
push
mov
popf
pop
mov
cmpsb
gs
ret
pop
loopne
xor
add
lcall
fnstsw
rolb
mov
cmp
call
cmp
test
fcoml
inc
mov
test
add
cli
cmp
aas
ret
sbb
jecxz,pn
sbb
mov
lods
push
pop
cmpsl
popa
clc
in
push
xor
mov
lret
pop
aaa
dec
push
pop
mov
dec
scas
pop
out
rcrl
aam
lods
cmp
test
inc
xchg
xor
jl
pop
xchg
clc
sti
fisubl
popa
sbb
sahf
daa
mov
daa
push
leave
cmp
dec
pop
inc
mov
stc
popf
xchg
js
push
sti
adc
cld
lret
xor
cmp
push
inc
push
push
popa
mov
jl
jae
repnz
mov
lods
and
inc
outsb
mov
in
add
sbb
xor
loope
cmp
push
sbb
cmp
push
js
jp
arpl
mov
leave
and
subl
inc
ds
mov
add
push
push
popa
jns
insb
inc
jmp
dec
int3
inc
in
lcall
mov
mov
jge
mov
push
andl
push
or
adcb
pop
lahf
push
in
xor
mov
cld
sub
sbb
std
jmp
push
fimull
pop
pop
adc
ret
jecxz
mov
outsl
sahf
mov
push
mov
outsl
dec
jmp
addr16
stos
in
dec
js
push
lods
sbb
sbb
and
add
dec
les
mov
fmul
fsubrl
or
mov
lea
stc
mov
popf
and
push
fistpl
push
pop
data16
push
cli
push
daa
push
stc
in
xchg
cmpsb
dec
repz
mov
xchg
rorl
pop
lahf
cmp
dec
hlt
add
loop
inc
xchg
cmp
inc
push
inc
iret
or
inc
rclb
ljmp
stc
inc
push
lret
scas
test
mov
mov
mov
pop
lods
movsb
lods
imull
je
sbb
aad
out
xor
mov
dec
fstp
int3
pop
cmp
mov
dec
jbe
sub
xor
push
jno
xchg
mov
dec
dec
jl
movsb
xor
daa
int
shr
push
cmp
aaa
loopne
stc
cmp
mov
cmp
cmpsb
bound
pop
loopne
lods
sti
jbe
bound
aam
cmp
jb
dec
mov
int3
outsl
dec
adc
nop
inc
pop
xchg
lret
aad
out
ss
push
pop
jmp
lods
sbb
xor
mov
shlb
dec
nop
movsb
in
cmp
inc
sub
ljmp
mov
fsub
test
mov
or
xor
or
sbb
mov
fcomps
or
mov
xor
fdivs
sub
and
inc
adc
cli
lods
adc
dec
pop
repz
ljmp
roll
outsb
dec
call
dec
adc
sub
std
movsb
filds
jl
mov
fidivs
push
call
stos
adc
movsl
pop
in
xor
pop
mov
mov
cmpsb
or
in
push
xchg
cmp
in
push
adc
cmp
hlt
sub
jno
sub
pop
or
cmp
push
stos
and
movsl
sbbl
in
loop
cmc
mov
out
sbb
add
and
or
fcomip
and
outsl
out
mov
adc
movsb
pushf
push
and
fldl
jno
cmp
ret
ja
mov
ret
shlb
jmp
pop
sbb
lret
call
cli
test
jp
in
leave
fucom
jnp
sbb
out
xor
push
int
bound
add
jg
add
xchg
test
cmp
sub
lret
inc
ret
ficompl
mov
into
int
mov
outsb
insl
cmp
lret
ret
popf
pop
fcomps
imul
jo
mov
xchg
mov
stos
jle
aas
mov
shlb
stos
push
dec
loopne
ljmp
add
shrb
loop
pop
mov
ja
rcrb
roll
xchg
cmp
arpl
jns
mov
pcmpgtw
or
cmp
fiaddl
mov
or
andl
mov
cmpsl
bound
jl
loope
cmp
loop
mov
addr16
xor
xchg
or
fs
arpl
aam
dec
insl
add
hlt
cs
mov
je
mov
jne
js,pt
dec
pop
pushf
cmp
xchg
xchg
rcl
sub
test
or
sbb
out
pop
loope
sub
fstps
sub
sub
mov
gs
aas
and
dec
pop
xchg
mov
sbb
repz
inc
cwtl
loope
inc
jno
cs
pushf
push
call
enter
and
ret
or
mov
pop
roll
xor
cli
lea
mov
scas
push
divl
jns
rcll
fidivs
arpl
aam
lds
pop
lods
lods
sbb
sub
lds
mov
addr16
mov
insl
sub
insb
cmc
sahf
pop
sbb
jmp
push
mov
push
lock
out
lcall
shl
imul
pushf
cmpb
inc
popf
dec
ljmp
insb
fcoms
push
cmp
lock
icebp
loope
int
movsl
out
mov
jno
outsl
mov
neg
loop
mov
loopne
shr
addb
and
cmc
inc
fwait
inc
sbb
imul
pop
cmpsl
and
cltd
xchg
je
push
jno
mov
hlt
jno
mov
xchg
xchg
sbb
and
mov
sbb
adcb
sti
out
and
add
xchg
fucom
aaa
xchg
ljmp
sbb
xor
pop
pop
xor
bound
jo
xchg
mov
mov
call
jno
or
inc
aas
push
sub
xchg
pop
sbb
mov
cmp
lds
cwtl
push
sub
mov
pushf
sbb
test
int
aas
bound
test
int3
orb
popa
cmp
inc
fucomp
adc
fcomp
adc
fs
cmp
push
adcl
std
jno
pop
pop
pop
movsb
xor
and
out
mov
cwtl
mov
xacquire
fsubp
dec
pop
sub
add
push
xor
pop
jae
pop
arpl
int
rorb
push
dec
sub
inc
movsb
cmp
ljmp
adc
je
clc
shr
push
in
movsl
mov
and
aam
hlt
dec
jl
imul
fcompl
mov
fdiv
fadd
pop
pop
pop
fsubrp
xor
or
pop
push
push
or
test
jg
sahf
fs
or
sbb
or
add
xchg
jo
cmpsl
xlat
pop
cmp
int3
sub
mov
lods
std
sub
push
xchg
pushf
mov
push
add
rolb
push
in
std
cmp
into
in
or
rcrl
and
add
inc
mov
cwtl
orl
andb
add
aam
push
inc
outsl
xchg
push
inc
jae
pop
repnz
in
in
shrd
enter
call
inc
dec
pop
add
push
mov
push
xchg
or
stc
push
aaa
pop
ror
mov
or
imul
jmp
loope
je
xorl
cmp
clc
and
mov
push
das
mov
mov
fidivs
subb
mov
xchg
mov
mov
std
sbb
mov
dec
out
sub
mov
cmp
mov
jmp
pop
and
push
lcall
xchg
into
addl
std
or
push
enter
or
int3
mov
call
push
sub
xor
jmp
mov
and
lret
mov
scas
imul
in
in
out
xchg
adc
xchg
pop
out
xor
push
dec
push
adcl
xor
inc
inc
lahf
sbb
xor
mov
and
mov
xchg
cmpsl
outsl
int
cmp
outsl
xor
dec
mov
inc
enter
hlt
leave
popa
pushf
sub
js
leave
mov
or
mov
test
dec
dec
xchg
adc
cmpl
jb
cmpsl
xchg
cmp
xor
pushf
mov
cli
xchg
push
inc
cli
jb
in
dec
push
fimuls
xor
not
pop
cwtl
cmpsl
shl
pop
cmp
cltd
movsl
push
pcmpgtd
das
lahf
daa
jp
outsl
xor
dec
mov
lret
cmp
mov
xor
fcomps
mov
fwait
or
call
sarl
aaa
sbb
jg
or
lock
loop
jb
xchg
adc
mov
outsb
fnstenv
xor
inc
lds
jmp
ret
out
call
adc
mov
sub
mov
stos
pushf
adc
outsl
out
jno
imul
ret
adc
and
jne
test
sbb
jge
scas
loope
inc
or
push
mov
mov
xchg
sub
imul
jb
aam
inc
cwtl
repnz
test
das
add
xor
add
xchg
aad
push
orl
cmp
sbb
test
icebp
sub
mov
sahf
dec
inc
adc
out
dec
gs
jbe
and
mov
sub
jbe
dec
dec
adc
je
daa
inc
arpl
jecxz
or
xchg
mov
cld
mov
stos
add
lahf
popf
adc
repz
lods
out
pop
jno
out
sub
pop
sub
mov
xchg
popf
push
mov
out
negl
lds
test
repz
push
push
test
nop
mov
mov
push
inc
iret
xor
and
pop
fxch
cli
mov
ret
inc
mov
pushf
xchg
arpl
push
in
scas
clc
into
stos
cmc
pop
fsubs
inc
out
fldl
data16
jmp
and
bound
jp
dec
mov
cmp
push
cmp
jb
popf
cmp
std
stos
sub
cmp
xchg
aad
mov
enter
push
xlat
adc
push
or
xchg
inc
push
mov
aaa
les
sbb
pop
rorb
