sbb
add
mov
pushf
mov
add
loopne
adc
daa
sbb
mov
mov
mov
lahf
roll
adc
loope
ficoms
mov
loop
jae
and
mov
mov
das
imul
xchg
sub
lods
sub
dec
cld
pop
inc
aaa
adc
or
inc
inc
add
pop
mov
xchg
test
push
adc
roll
int3
sbb
and
movsl
imul
iret
leave
shrb
cmp
cmc
mov
mov
rol
in
bound
mov
call
mov
cmp
pop
jno
mov
test
out
scas
add
gs
sarl
and
aas
daa
pop
mov
in
push
mov
pushl
xchg
or
das
cli
mov
lahf
roll
adc
cmpsl
xchg
push
mov
pop
jecxz
hlt
negb
rcll
sbb
adc
push
pushf
xor
lods
dec
or
jge
imul
inc
sbbl
mov
cmpsl
xor
jns
insl
into
insl
mov
aas
push
xchg
sbb
stc
mov
leave
pushf
xchg
push
aad
dec
cltd
push
lcall
mov
jne
pop
pop
mov
xchg
pop
jae
jne
jmp
pop
lret
lods
dec
adc
inc
or
gs
pop
neg
pop
pop
sub
lahf
jbe
in
lods
ffree
mov
dec
or
add
lss
icebp
neg
push
aas
cs
idivb
inc
inc
std
fcomps
cmp
ficompl
or
int
jne
adc
or
cs
addr16
sbb
popf
jbe
add
sbb
pusha
ja
imul
arpl
outsl
loopne
sub
or
popa
dec
pop
movsb
imul
push
lods
insb
and
push
cmpsb
repz
popf
cmp
sti
push
ja
jae
xor
pop
sbb
lock
jl
xchg
inc
dec
xchg
add
push
jnp
adc
and
outsl
pop
mov
mov
dec
push
stc
test
mov
adc
xlat
sub
pop
sti
sti
adc
push
mov
imul
lods
add
sub
lahf
popf
imul
push
das
or
adc
xchg
add
or
xor
addr16
adc
sar
fcoml
aam
add
aam
or
scas
mov
cmp
jecxz
std
jne
cmp
jne
gs
xchg
push
movsb
insl
sbb
jb
adc
repz
and
rcrl
and
mov
es
add
lcall
and
mov
test
push
push
sub
popf
shll
mov
mov
repnz
clc
clc
jo
aam
je
dec
xchg
orb
fcoms
pop
dec
dec
cmp
fs
nop
dec
add
jnp
sahf
add
ljmp
push
call
jne
out
pop
mov
add
rep
lret
aam
lcall
aad
gs
dec
dec
xchg
mov
scas
insl
ss
out
push
je
fcmovu
xor
data16
movsl
sub
call
lds
enter
adcl
pop
pop
or
cmp
mov
clc
vpmacsdd
xchg
addl
push
fdiv
xchg
pop
lcall
cmpl
sub
rcll
inc
dec
xor
inc
jp
into
push
jo
aad
mov
pushf
rcll
lods
push
sub
decl
sarl
lods
lds
cmp
mov
ret
insl
push
pop
cmp
imul
xchg
add
sbb
stos
adc
add
jb
out
clc
or
rol
imul
inc
hlt
shrl
rcl
inc
sbb
fcmove
mov
cmp
mov
clc
push
int3
test
cli
mov
je
jno
je
sbb
rorl
aad
or
push
push
add
in
cwtl
or
push
add
push
add
popa
ja
xchg
in
mov
sub
loop
mov
lds
mov
mov
mov
mov
xchg
in
lret
push
movsb
inc
sahf
sar
cmp
inc
inc
mov
add
enter
rep
mov
adc
lahf
mov
cs
hlt
repnz
insl
inc
xor
add
pusha
add
lea
inc
dec
cmp
ss
jne
fwait
popf
xchg
mov
in
push
sub
cwtl
push
fstl
sub
cmp
imul
scas
scas
shll
loop
jne
pop
fadds
ljmp
dec
xlat
pusha
mov
sub
cld
jge
mov
or
mov
xchg
sbb
pusha
pop
es
aas
mov
mov
adc
xchg
enter
js
aam
adc
loope
scas
test
mov
arpl
out
cmp
jae
add
xchg
in
mov
fldcw
pop
and
dec
outsb
and
shrb
bnd
add
js
rcll
daa
pop
mov
cli
scas
sarl
and
fildl
dec
call
mov
xor
lods
push
fdivrl
xchg
jge
jle
and
je
pop
inc
dec
jge
inc
sbb
inc
testl
lcall
cmp
or
cld
xor
lahf
test
data16
pop
movsb
inc
leave
mov
xacquire
in
out
jmp
pop
hlt
into
dec
fstps
mov
cltd
mov
inc
and
mov
adc
dec
mov
jb
cs
fucom
test
and
imul
enter
in
mov
lds
mov
rclb
jle
inc
sbb
testl
js
out
or
sahf
lret
lahf
daa
or
push
mov
push
sti
push
cli
mov
int3
lret
or
sub
dec
cmp
aaa
mov
jae
pop
mov
inc
std
adc
data16
enter
jmp
lret
mov
sub
xchg
mov
test
testl
xorl
sbb
xchg
adc
pop
cmp
or
mov
ds
mov
inc
xor
daa
fs
xchg
imul
es
adc
mov
fdivr
les
into
pop
xor
adc
mov
pushf
or
pop
cmp
outsb
rcr
aad
sub
cmp
int3
movsl
jo
int3
mov
sbb
jmp
rclb
mov
cmpb
pop
mov
es
cltd
les
outsb
mov
and
jbe
and
pop
or
insl
xchg
sbb
pop
fs
mov
sub
mov
stc
insb
fstps
dec
add
xor
mov
imul
fstpt
in
pop
cwtl
xor
fdiv
add
sbb
inc
cmc
mov
call
pusha
mov
hlt
aam
dec
jo
xchg
mov
fisubl
xchg
stos
pop
jl,pt
cmp
mov
sbb
inc
pop
frstpm(287
pushf
jns
cmp
cmp
push
or
push
cwtl
mov
mov
loope
into
jmp
addr16
iret
sbb
fimuls
ror
xlat
sbb
inc
cmc
cli
dec
push
mov
mov
and
loop
or
mov
or
insb
fcoms
sahf
adc
push
push
or
movsl
insl
push
test
push
lds
test
lods
imull
pop
shlb
aaa
adc
rcl
jne,pn
sub
icebp
push
xchg
lahf
xor
jp
xchg
fs
and
nop
loop
loope
adc
pop
pop
pop
into
fwait
js
or
mov
inc
icebp
je
or
roll
xchg
nop
and
mov
fwait
jg,pn
jnp
pop
subb
jb
sbb
push
xor
cld
jb
sub
loope
inc
mov
adc
push
xor
lret
xchg
je
push
cmp
insb
jb
leave
xor
test
adc
mov
fistps
dec
mov
std
mov
pop
fisubrl
mov
mov
xchg
lret
push
bound
jmp
and
add
fisubs
mov
mov
pushf
cmp
mov
jbe
shl
jecxz
dec
daa
add
repnz
mov
push
inc
fwait
cli
mov
test
inc
jge
out
loope
mov
jne
and
push
sti
and
outsl
inc
movsb
or
mov
lock
sub
pop
inc
adc
fsubrl
cld
lock
sub
adc
int
stos
add
cmovne
cmp
mov
test
or
cwtl
mov
and
pop
inc
inc
inc
pop
pop
sub
imul
adcb
inc
inc
mov
aad
jp
icebp
out
inc
rorb
test
aas
stos
dec
add
xchg
adc
xor
lcall
pusha
rcrl
test
shrb
xchg
stc
inc
sub
xchg
dec
fidivl
ja
inc
mov
mov
out
daa
addl
xor
jno
adc
dec
ficoms
ret
je
inc
cs
pop
and
and
fisubrl
cmp
call
loope
popa
aad
cmp
push
in
xor
pop
incb
adc
aam
push
out
push
insb
cmpsl
mov
mov
adc
out
sbb
inc
and
jae
jl
xchg
cltd
popl
ja
xchg
lret
and
enter
sbb
stos
addr16
jo
and
in
notb
mov
dec
aas
pop
sbb
or
adc
adc
mov
jo
inc
ja
sub
push
stos
push
dec
xchg
ss
xchg
adc
std
incl
cmp
push
mov
faddl
pop
push
push
sbb
fbld
cmp
mov
or
mov
data16
lret
ljmp
shrb
fsubp
imul
aas
cltd
or
sbb
ficompl
stc
lahf
aaa
and
cwtl
lods
pushf
add
mov
movsb
sub
sub
scas
mov
xor
pushf
mov
mov
js
jne
into
addr16
in
dec
sub
cmp
xchg
int3
mov
xchg
lret
push
out
and
dec
cmp
mov
loope
les
addr16
sbb
push
xchg
ret
pop
jae
addr16
and
into
icebp
mov
jne
lods
xchg
sub
jae
outsb
inc
push
test
xchg
xchg
mov
fs
sub
lcall
pop
mov
mov
mov
add
arpl
pop
out
mov
orl
cmp
mov
out
sbb
inc
xlat
das
lret
mov
inc
mov
pop
stc
cmc
xchg
jno
rcl
es
mov
xor
out
lret
and
outsb
int3
pushf
and
int
es
xchg
cmp
lret
arpl
pop
jmp
add
popf
das
les
jnp
vpunpckhqdq
in
cmp
jecxz
stc
sub
and
inc
rcrl
xchg
imul
and
and
dec
ja
mov
popf
loope
rcll
mov
mov
dec
inc
jge
leave
cltd
sub
pop
cltd
mov
loope
adc
mov
fnsave
push
cmp
add
fdiv
aaa
sub
sbb
into
jbe
xor
fdivrs
xor
scas
and
sbb
out
scas
jo
jp
lds
jl
fsubl
jbe
aad
mov
xchg
and
pushf
xor
and
fmull
xchg
lret
or
adc
ss
idivb
pop
add
or
popf
jnp
dec
test
fisttps
clc
lahf
stc
pop
adc
mov
and
cmp
stc
cmp
push
pop
sahf
loop
adc
fyl2xp1
push
lret
sub
xchg
dec
ret
sbb
dec
popa
in
mov
sbb
adc
hlt
dec
pusha
sbb
xchg
decb
inc
jp
push
mov
mov
hlt
push
adc
jg
or
jmp
pusha
xchg
and
inc
jno
ficompl
sbb
aad
xchg
in
ret
cmp
shlb
sub
add
int
and
or
aad
dec
cltd
mov
dec
sub
pop
je
xchg
sbb
sub
loop
jecxz
outsb
push
mov
adc
call
cmp
mov
dec
pop
rorb
xchg
sarb
cld
mov
test
stos
arpl
loop
xchg
xchg
jnp
pop
and
loope
loopne
xchg
iret
div
sahf
loop
popa
cmp
insl
push
mov
mov
cld
test
lahf
fbld
aam
xchg
arpl
adc
cli
add
iret
mov
in
xor
mov
popa
ds
xor
add
hlt
test
in
mov
dec
lods
stos
scas
mov
xchg
in
jns,pt
push
push
or
in
cli
fwait
jbe
rcrl
jns
xor
bound
std
repz
not
fadds
inc
xchg
inc
and
dec
pavgb
lahf
push
int3
mov
push
mov
mov
out
mov
sti
add
sbb
aas
in
mov
fiaddl
lds
adc
cli
push
mov
dec
jo
xchg
sub
mov
test
dec
xor
xchg
out
cmp
dec
sbb
adc
and
imul
mov
sub
imul
fwait
pop
stos
ds
mov
cmp
cmp
mov
xlat
or
fwait
int
in
cmp
iret
inc
fisubrs
cmp
adc
ret
or
jo
fsubrl
xchg
xchg
mov
sub
cmp
test
jno
dec
push
nopl
fdivrs
push
mov
pop
mov
iret
mov
dec
subb
ljmp
in
rcll
mov
aad
in
push
shlb
cli
wbinvd
stos
stos
push
xchg
dec
xchg
lock
popf
jge
or
xor
jl
stc
dec
add
jge
adc
ret
shrb
dec
aas
outsl
and
mov
fwait
stc
or
hlt
cs
ficoml
popf
mov
pop
es
stos
loopne
inc
mov
sub
stos
sub
xlat
xchg
cli
dec
rolb
jl
lcall
dec
ja
xor
xchg
bsr
jns
xchg
imul
push
lcall
enter
nop
and
shll
jmp
bound
je
out
inc
stos
js
mov
or
fistl
inc
or
inc
in
add
jae
jl
mov
and
lock
sbb
testb
inc
sub
jmp
shlb
adc
divl
rcrl
cmpsl
sub
or
push
addr16
inc
adc
mov
pop
icebp
jge
sub
aas
fsubs
addr16
add
jecxz
push
bound
jb
out
stos
cmp
push
int3
js
jecxz
and
dec
pop
inc
sbbl
pop
mov
mov
mov
dec
pop
pop
fstpt
gs
inc
mov
mov
cmp
pushf
pop
jle
mov
out
or
rolb
inc
cltd
fcomps
jmp
pushf
pushf
sub
dec
jecxz
fisttpll
sbb
push
out
in
loopne
movsb
pop
xchg
cmp
mov
ljmp
mov
iret
cmp
or
or
addb
xchg
mov
ret
das
push
push
rcrl
aad
xchg
sub
mov
mov
pop
int3
inc
jmp
and
pop
adc
popf
push
repnz
jo
pop
and
shlb
adc
hlt
adc
jne
dec
inc
out
call
insl
and
or
sub
imulb
jb
jnp
sbb
shl
push
std
imul
push
mov
sub
sub
cmp
arpl
push
add
movntq
or
jnp
sub
xchg
daa
jl
daa
aam
lods
pop
ja
sub
jl
insl
lods
mov
test
sahf
adc
or
int3
fs
lea
std
sbb
rcl
decl
cmpsl
fldenv
mov
cmp
sahf
jns
sbb
mov
popa
sub
push
lods
xchg
cmc
push
lret
ret
cmp
jmp
call
push
push
int
sub
cmp
or
cmp
mov
int
pop
cmp
push
or
stc
sarl
popa
fistps
daa
cmpsl
pop
sti
dec
or
and
les
pushf
push
and
and
adc
mov
sbb
push
xorl
lea
orl
or
dec
and
outsl
mov
adc
fldl
mov
mov
mov
insb
lods
lret
xorb
pop
and
ljmp
stc
xchg
mov
in
scas
cltd
cmp
clc
das
into
cmp
mov
mov
jl
stos
je
stc
dec
xor
ss
mov
insl
inc
div
out
mov
cltd
ds
xchg
cs
in
shrl
scas
pop
lods
cmp
shlb
add
ror
mov
xor
jg
mov
data16
ja
mov
imul
loope
mov
orl
fdivr
cmpb
les
aad
les
xchg
std
mov
imul
mov
cmp
movsl
xchg
dec
aaa
sbb
xchg
mov
adc
mov
cltd
jnp,pn
test
jl
adc
lock
push
dec
xor
mov
sub
dec
cmpsl
pop
scas
dec
adc
cmpsb
mov
out
jae
pop
xor
jbe
dec
ljmp
dec
pop
fwait
jb
xorb
inc
mov
xor
filds
stos
xchg
cs
dec
nop
stc
fiadds
mov
xchg
ja
scas
aaa
das
add
and
cmovae
iret
in
mov
jge
inc
imul
and
pop
push
jp
je
push
notb
jge
test
sub
push
dec
mov
sbb
pop
in
stos
iret
lock
or
std
pop
lret
adc
clc
cmp
jns
pushf
out
push
pop
insl
imul
rcll
ljmp
and
test
pop
loop
push
mov
sarb
mov
aas
xor
pop
lcall
dec
sub
push
lret
sti
in
xor
in
icebp
scas
fisubrl
adc
dec
xchg
xchg
or
icebp
cld
test
pop
push
fldcw
mov
jne
inc
fidivs
in
orb
mov
ret
mov
scas
cltd
pop
mov
jb
ficoms
popf
lret
movsl
fdivrs
xchg
jo
test
lcall
cmpsb
pusha
fcomp
push
lea
ret
inc
mov
fldcw
mov
cwtl
sub
aam
jp
inc
cmpsb
movsb
lret
mov
push
repz
lock
mov
inc
sbb
inc
arpl
jb
mov
xchg
push
out
imul
sub
pushf
fisttpl
cld
xor
out
ljmp
xor
shll
psubsb
out
inc
negl
cmpb
mov
sbb
xor
dec
pop
sub
addr16
sbb
jmp
leave
mull
pop
sub
test
testb
das
pop
in
add
addr16
xchg
cltd
ds
adc
lcall
mov
cltd
fidivrl
bound
fdivr
pop
sahf
and
cmp
aaa
je
add
or
scas
cmp
popf
jnp
push
or
imul
jns
fistpll
mov
pusha
sbb
sub
je
sub
movsl
cmp
sub
andb
aas
int
clc
in
arpl
inc
fsub
loope
mov
pop
in
lret
mov
daa
movsl
pop
push
stos
mov
les
sub
cmp
push
icebp
aaa
lahf
push
pop
jge
bndldx
je
pusha
dec
adc
or
sbb
lret
push
sbb
arpl
push
leave
or
in
dec
lods
pop
roll
mov
mov
ret
mov
dec
pop
fcoml
push
cwtl
xchg
loope
mov
sub
clc
and
ss
scas
cwtl
mov
mov
dec
lahf
dec
push
inc
mov
dec
mov
or
cmpsl
or
push
dec
gs
dec
adc
arpl
mov
sarb
insl
xor
je
insb
inc
aaa
clc
mov
scas
push
ds
imul
in
mov
inc
test
and
rcrb
cmpsb
repz
aad
inc
add
cmpb
adc
scas
mov
xchg
sub
mov
popf
incl
dec
push
ret
push
push
outsb
or
dec
outsb
or
dec
xchg
mov
jecxz
cmpsb
dec
adc
add
mov
rcr
dec
rcll
lcall
xor
cmp
loope
add
jns
call
sbb
stc
dec
cmc
test
jns
inc
pushf
mov
scas
cs
inc
mov
dec
data16
lea
dec
sub
push
sarl
ret
repz
pop
lahf
in
nop
xchg
in
iret
mov
xchg
xor
dec
xor
inc
xor
stos
push
lgs
xchg
aaa
sbb
jb
divb
xor
in
mov
mov
adc
xchg
or
push
rol
scas
or
add
sbb
adc
inc
popf
dec
add
push
lret
ds
call
dec
push
fsubr
inc
lret
dec
pushf
xor
adc
jl
sbb
add
es
xchg
daa
jge
fwait
in
insl
sbb
inc
scas
mov
cs
mov
xor
and
cmpsl
pop
out
and
orl
cltd
mov
dec
lock
lret
mov
cmpsl
out
lret
mov
mov
pusha
cmp
adcl
and
adc
jp
sub
mull
add
out
add
std
fstpt
pop
cmp
mov
push
jp
scas
vpsubsb
jne
test
push
push
jo
adc
je
sub
sub
add
dec
loopne
xor
jl
dec
mov
sub
test
in
or
and
dec
in
xor
mov
fld
adc
push
sbb
andb
leave
sti
mov
dec
daa
and
jecxz
jns
sub
adc
jecxz
rol
pop
ret
xor
mov
ljmp
mov
jns
adc
sbbb
add
fistl
out
push
inc
cwtl
push
pop
je
sbb
cmpsl
mov
clc
mov
xchg
jne
aaa
imulb
add
les
mov
mov
mov
mov
adc
mov
sbb
cmp
leave
push
jge
mull
ss
lock
inc
push
loopne
push
cmp
idivl
mov
mov
xchg
adc
js
xor
mov
xchg
adc
inc
inc
stc
sub
lahf
or
data16
xchg
addr16
cli
inc
sbb
cmpb
sub
lahf
movsw
or
xlat
cmp
dec
mov
mov
and
sbb
repz
adc
and
jmp
dec
loope
and
jae
mov
mov
mov
shll
nop
xchg
mov
movsl
jae
sub
daa
mov
int
fidivl
and
enter
cmc
repnz
in
fmull
push
pushf
loop
rorb
mov
mov
or
addb
out
mov
mov
mov
into
sbb
shll
pop
js
pop
jbe
scas
and
mov
xchg
cmp
test
and
dec
push
icebp
sti
inc
dec
rcrl
adc
xchg
inc
in
xor
add
jmp
pop
xor
loop
stos
xchg
aas
fcompl
cli
xchg
movsl
dec
push
mov
mull
lods
nop
inc
mov
mov
fcmovnb
das
jl
mov
xchg
add
cmp
cld
adc
mov
mov
sub
xchg
or
repz
ret
dec
cwtl
adc
cli
add
je
push
out
cmpsl
sub
inc
jmp
pusha
pop
pop
sub
jle
int
sbb
mov
inc
pop
inc
add
adc
lds
aam
bound
xchg
cmpsb
dec
push
cs
add
lahf
mov
mov
dec
mov
data16
and
add
cmp
movsl
cmpsl
pop
xor
mov
loop
and
aam
push
mov
xchg
movsl
add
pop
fldenv
xchg
inc
inc
in
cltd
push
addr16
movsb
mov
nop
xchg
int3
jb
inc
push
movsl
je
divl
out
out
dec
mov
pop
dec
and
in
inc
mov
std
andb
ret
ret
fwait
lea
repnz
aam
cmp
adc
cmp
test
mov
shlb
jle
mov
xor
mov
xchg
loope
loopne
adc
push
add
pop
fwait
push
pop
subb
lea
cmp
inc
jbe
and
jae
jns
and
mov
lret
cmp
jmp
clc
fwait
lret
add
mov
mov
cmpsb
sarl
mov
cli
inc
sub
hlt
lods
in
les
mov
cmpsl
repz
imul
inc
sub
arpl
mov
and
cs
push
test
rclb
outsl
adcb
xor
sub
sub
fmuls
sub
xor
pop
mov
std
ret
mov
fiadds
mov
jg
mov
and
adc
pop
push
jns
popa
add
push
xor
sti
clc
push
mov
add
adc
and
ret
push
push
push
inc
test
or
xchg
inc
xchg
imul
pop
mov
in
xor
fcoml
pop
mov
loopne
mov
leave
sahf
lods
and
and
in
ret
push
cmp
clc
lret
xchg
or
jmp
jbe
sub
cmp
xor
xchg
sbb
push
dec
push
rorb
or
push
sbb
inc
inc
addb
push
sub
jns
enter
imul
adc
cmp
and
push
add
or
or
call
or
xchg
add
dec
inc
icebp
sarl
jnp
pop
push
mov
popf
loop
fildl
sub
and
sub
les
or
outsb
movsb
push
fmull
jo
mov
lock
sub
movsb
enter
scas
add
aas
push
ret
fsubrs
jp
sbb
out
push
lcall
fildl
cli
and
cmp
cmp
push
add
stc
out
out
and
cs
mov
cltd
cld
aad
mov
jno
push
xor
outsb
push
test
jnp
mov
stos
sti
inc
sub
add
cmp
out
int
dec
shl
xorl
test
sti
sub
add
lcall
sub
hlt
jg
jno
jge
bound
ja
inc
fstps
jae
sub
cmpsb
push
sbb
imul
mov
add
mov
add
cltd
cmp
mov
jne
mov
dec
cmp
nop
ljmp
adc
and
mov
push
mov
adc
inc
mov
push
jnp
sub
dec
sub
push
pop
outsb
mov
pushf
xchg
mov
adc
add
mov
jecxz
iret
lea
mov
mov
ss
adc
cmpsb
mov
in
xchg
int3
fmulp
or
and
add
mov
cmc
stos
adc
or
int
pop
lcall
sahf
mov
clc
pop
cmpb
lret
js
daa
inc
xor
int
and
mov
jge
out
mov
add
mov
cld
cmp
mov
mov
call
mov
adc
cmpl
xor
pop
xchg
repz
jmp
xchg
out
pop
dec
jmp
xlat
mov
js
fld
pop
jns
out
out
push
cwtl
dec
and
dec
add
sbb
mov
das
sti
mov
or
insb
and
jno
test
sar
jl
aad
push
fistpl
addr16
imul
or
outsb
xor
insb
pop
or
mov
xchg
adc
xor
stos
xchg
and
fmuls
ljmp
das
adc
and
in
push
xor
repnz
ss
movsl
mov
xchg
aas
sbb
add
orl
fsubl
shl
xchg
inc
sbb
into
push
mov
pop
jle
or
inc
test
addl
push
pushf
and
jns
jno
out
dec
lods
add
fdivrs
push
mov
pop
xchg
inc
pop
lock
push
mov
xchg
outsl
pop
jne
lcall
mov
mov
movsb
push
mov
or
movsb
clc
test
repz
mov
loopne
or
bnd
arpl
fcmovu
mov
jno
out
add
pushf
arpl
cmp
daa
xchg
inc
pop
dec
adc
int3
xchg
pop
cmp
pop
shl
rclb
jge
jb
idivl
jmp
nop
push
sbb
aaa
xchg
jbe
push
push
pop
mov
jnp
jbe
adc
xchg
xchg
fwait
pop
adc
pop
daa
test
inc
loop
int3
xchg
stos
push
adc
aaa
rcrl
sub
movsb
jae
fidivl
jns
outsl
mov
sbb
out
xor
cltd
ljmp
hlt
mov
dec
inc
xchg
mov
mov
fstpl
push
test
or
push
add
addb
jae
ret
push
sti
aad
loopne
stos
fstps
push
iret
aad
fwait
xchg
pop
cltd
push
cmp
jmp
add
jl
mov
fs
test
adc
cmp
add
cmp
mov
mov
sbb
mov
ffree
stos
mov
data16
inc
sbb
fnstsw
jl
and
je
cmp
adc
sbbb
jg
push
push
push
push
imul
pop
push
hlt
dec
stc
sarb
bsr
shll
jl
xchg
dec
dec
fsts
jb
cwtl
outsl
repz
nop
push
mov
pop
cs
pushf
inc
imul
cmp
neg
jg
jmp
insl
dec
jecxz
jmp
jae
push
jno
xor
or
movsb
cld
testb
iret
pop
sub
pop
and
dec
enter
testl
mov
daa
mov
pushf
dec
sbb
sbb
movsl
inc
daa
daa
lods
sub
pop
adc
shrl
mov
push
sub
mov
arpl
or
adc
loop
in
cmp
jp
inc
cmp
stc
pop
lods
mov
and
insl
ficoml
xchg
fstl
std
ja
add
popa
mov
in
sub
lods
popa
mov
and
faddl
sbb
sbb
into
xchg
std
fistpll
shll
sbb
xor
and
sbb
ficoml
mov
xor
mov
jmp
pop
pusha
add
mov
ret
adc
loop
imul
std
sahf
xchg
inc
lcall
xor
push
jo
xchg
clc
jnp
add
stos
out
xor
push
dec
pop
movsb
and
dec
in
sbb
jp
stc
std
add
lods
push
dec
in
in
lock
out
mov
add
xor
jp
sahf
mov
je
xor
ret
std
in
aad
sub
sti
out
jle
dec
xor
add
fmuls
test
sbb
jno
jl
sub
fisubl
fmul
stos
push
sbb
addr16
xchg
scas
mov
cmpsl
push
adc
jae
repz
lods
arpl
inc
and
jg
cmp
push
cld
push
cmp
rorb
daa
push
int
loope
adc
sbb
cmp
je
and
add
pushw
xor
pop
pushf
cmp
inc
cwtl
xor
adc
mov
ror
test
pop
pop
and
or
pop
pop
loope
cmp
push
dec
fiaddl
clc
push
inc
sbb
dec
inc
xchg
in
cmc
das
cmpsl
insl
jno
push
add
sub
xchg
sbb
push
addb
fistps
insb
xchg
dec
pop
std
mov
add
scas
aam
popa
out
push
jmp
pop
push
dec
movsl
jmp
mov
iret
stos
cmp
mov
loop
and
push
leave
xchg
pop
mov
and
je
cmp
inc
inc
jo
jle
sbb
popa
arpl
add
movsl
sub
stos
das
xchg
xor
hlt
jb
test
mov
jg
cmp
sbb
sub
outsb
add
mov
push
pop
aas
dec
ror
xchg
sub
xchg
ret
out
test
inc
mov
or
pop
push
test
stos
lock
int
test
xchg
pop
lret
pop
mov
jno
xor
xor
xchg
dec
mov
pop
jb
arpl
xchg
dec
mov
push
mov
xchg
jge
je
and
inc
gs
jl
pop
mov
pop
pop
cs
mov
jecxz
mov
xchg
mov
push
xor
xchg
push
push
pusha
inc
repnz
push
push
xlat
jmp
iret
push
xor
mov
dec
cmpsl
cmpl
insl
lods
adc
hlt
push
push
out
jl
dec
xchg
add
mov
pop
sahf
out
mov
sbb
sahf
addb
out
loop
xchg
mov
and
mov
ja
xor
sbb
mov
and
cmp
icebp
xchg
out
out
inc
popf
out
lea
fnstcw
sbb
lods
mov
add
add
inc
mov
sub
in
cmp
cmpsl
mov
inc
fs
dec
stos
lods
add
jmp
lcall
push
fbstp
adc
scas
repz
addr16
or
rcrb
jg
out
sbb
pop
sub
adc
fs
shl
and
movsb
dec
xor
lods
push
das
mov
or
adc
leave
jb
cs
cmp
pop
mov
fwait
cmp
adc
hlt
adc
lcall
fldcw
stos
dec
inc
aam
dec
lea
cmpsl
std
arpl
fsubrl
insb
mov
xor
push
or
aas
leave
mov
enter
pop
xchg
xor
mov
insb
mov
add
stos
sbb
sti
add
cmp
sbb
push
imul
orb
mov
pop
ja
mov
mov
loope
pop
jno
movsl
orl
cmp
jbe
popa
jecxz
ss
adc
daa
xlat
cli
cmp
mov
lds
pushf
fldl
sbb
cld
sbb
imul
or
rorl
iret
gs
fstps
mov
sub
or
push
inc
fs
les
sub
inc
jo
test
sbb
xor
jle
xchg
and
ficoms
xor
mov
jge
xor
mov
and
scas
mov
mov
mov
mov
mov
mov
mov
push
push
repz
pop
jecxz
sbb
sbb
xchg
mov
adc
mov
sbb
fcoms
andl
psraw
inc
lahf
cmpsb
cmp
cwtl
xchg
leave
jb
mov
lods
xchg
inc
repz
jl
ja
mov
cltd
out
push
sbb
fisubrl
pushf
inc
inc
leave
mov
aad
mov
xor
in
mov
cltd
inc
mov
sbb
icebp
pop
mov
pushf
in
jnp
xor
rcrb
nop
lods
push
lret
jg
cmp
ja
fsubrl
ja
xchg
xchg
push
mov
add
push
mov
inc
fmull
aad
scas
pop
shl
pop
scas
sbb
pop
mov
mov
addr16
xchg
mov
push
lds
push
mov
adc
adc
cmp
iret
gs
mov
push
fwait
mov
mov
jnp
imul
testb
ja
sub
dec
lea
mov
mov
loopne
leave
daa
test
add
leave
lods
fidivrl
in
mov
cmc
shll
ret
sti
push
xor
add
int
aam
pop
insb
packsswb
stc
aas
jo
dec
ficoms
mull
jl
pop
ficoms
or
int
mov
add
notl
fs
pushf
pop
stos
stc
sub
fwait
out
mov
mov
or
outsb
jp
stos
int3
aad
enter
inc
sar
repz
movsb
inc
cmp
ja
cwtl
lret
loopne
cmp
xchg
and
sub
and
outsl
mull
sbb
andb
cmpsb
adc
mov
fbstp
movsl
cltd
adc
clc
jbe
sbb
sub
pushf
push
xchg
mov
hlt
mov
je
test
sub
mov
pop
jp
mov
inc
or
push
repnz
sub
push
imul
pop
lds
js
cld
inc
push
cld
in
lea
push
call
xlat
out
lea
push
cwtl
pop
mov
sti
into
ljmp
or
imul
punpckhwd
sub
fcoms
pop
inc
push
lods
sqrtps
cmp
jno
fstpt
mov
dec
subb
sub
orb
jecxz
loop
imul
mov
adc
es
testl
pusha
and
lods
call
lock
or
jge
lods
jmp
ret
popa
adc
or
mov
lds
es
jmp
ret
mov
sub
or
jecxz
dec
mov
sub
mov
sub
jno
ss
lret
shr
inc
clc
data16
fisubrl
sbb
fdivrl
and
sub
ljmp
mov
testb
sahf
popl
push
stos
std
mov
cmp
pop
loopne
rorb
sub
lods
xchg
dec
mov
mov
imul
mov
mov
push
cmc
out
les
sahf
test
xlat
aam
mov
rol
fiadds
or
or
fcompl
mov
enter
imul
sbb
cmp
out
mov
cmp
lahf
fisttps
dec
xlat
ret
inc
enter
scas
arpl
test
stos
sub
bound
push
stos
test
test
int3
cld
or
imul
outsb
cmpsb
inc
scas
or
fdivr
inc
xchg
scas
les
aas
add
popf
mov
out
hlt
leave
or
popf
mov
test
imul
jnp
movsl
je
mov
stos
aad
xor
loop
pop
outsb
aad
push
push
push
jp
xor
dec
push
sub
shl
lret
sbb
adc
ret
jge
ljmp
sbb
xchg
ror
and
sbb
pop
jae
inc
cmpsb
xchg
in
xchg
mov
lcall
jmp
or
xchg
stc
lods
dec
jge
dec
test
lods
mov
and
xchg
sub
or
xchg
push
cmpl
push
hlt
jge
add
mov
or
aam
adc
fbstp
sbb
and
pop
test
aam
xchg
or
push
outsb
push
sub
out
sub
lds
pop
sub
sub
mov
addr16
xchg
pop
adc
aad
std
js
sub
fdivrs
shlb
insl
xchg
fs
and
adc
arpl
sbb
bound
dec
push
sub
outsb
jbe
je
cmc
adc
push
xchg
ss
orl
sbb
xlat
mov
sbb
pushf
std
sbb
mov
mov
cmc
pop
xchg
aad
ja
lds
lods
pop
cld
fcomps
bound
pop
cmp
std
mov
in
scas
add
popf
lock
mov
add
xchg
adc
addr16
add
xchg
sbb
enter
xor
adc
sub
pop
loope
and
inc
sub
push
subb
test
or
lret
insl
ret
stos
lods
les
int3
lret
roll
mov
arpl
dec
andl
test
stc
pusha
lret
xor
cmp
jl
xlat
mov
addr16
aad
das
leave
mov
pop
pop
repnz
and
fsubrl
cli
mov
add
push
nop
cwtl
std
dec
call
xchg
ret
xchg
scas
add
std
mov
fcomip
inc
fmull
push
jne
inc
insb
xor
mov
mov
cwtl
jl
lcall
jge
cmp
gs
add
fbld
fcoml
lods
jle
orb
sub
mov
jecxz
or
xor
fs
sbb
inc
mov
sub
dec
mov
mov
jg
jecxz
mov
lahf
enter
pop
adc
inc
adc
mov
out
lds
test
push
and
jecxz
lds
xchg
ja
inc
cmp
dec
out
das
pop
and
adc
jle
mov
imul
xor
ljmp
sarl
pop
mov
pcmpeqb
cmp
inc
stos
repnz
inc
fidivrs
paddd
aas
and
xchg
arpl
add
cmp
pop
mov
push
or
ret
out
xor
dec
cvtps2pi
ljmp
inc
mov
ficompl
insl
adc
popf
add
dec
or
fnstcw
mov
gs
cmp
sbb
inc
loope
sbb
sbbb
or
lea
mov
fimull
je
sbb
aas
sub
sbb
and
cmc
sub
fisubl
pop
xchg
clc
addr16
jge
push
dec
aad
cs
and
sbb
push
icebp
lcall
in
xor
lds
xor
fcoml
iret
push
or
cld
ljmp
jno
sbb
fcoml
adc
push
add
mov
dec
js
dec
add
stos
ret
ljmp
lock
xchg
jae
and
js
outsb
add
sbb
mov
ffreep
xor
inc
inc
pop
inc
push
pop
mov
fisubl
push
out
xor
fldenv
je
mov
xchg
sub
fisubs
ret
out
ds
in
idiv
jnp
jp
mov
es
testb
icebp
hlt
fsubl
mov
sbb
pop
shrl
ret
mov
cmp
pop
xchg
leave
xchg
adc
inc
fimuls
adc
aaa
adc
mov
adc
push
ljmp
scas
jnp
fisttpl
popa
sub
orps
mov
sub
jnp
cmp
fmul
ljmp
jno
mov
jb
sahf
jl
inc
pop
mov
in
lods
aas
mov
das
push
jnp
in
xor
js
popa
adc
dec
add
mov
or
xchg
or
les
and
jecxz
push
jmp
testb
mov
or
mov
mov
inc
loope
adc
rcrb
mov
lcall
dec
pop
sbb
xchg
jecxz
xor
mov
out
lods
popf
fsubrl
fcmovnb
cs
decl
xlat
xchg
icebp
movsl
insb
jne
es
mov
out
inc
sbb
lcall
addl
inc
and
add
sahf
test
pcmpgtw
mov
int3
jmp
pushf
repnz
push
leave
sahf
or
push
pop
aad
int
or
in
cmp
push
dec
sahf
andb
mov
sub
cld
int
sbb
ret
fisubrl
ret
sub
xor
xor
add
push
jge
movsb
jp
push
insb
cli
sub
clc
andl
loop
and
push
xchg
test
rep
xchg
xor
xor
jecxz
dec
adc
adc
inc
fsubrl
mov
pop
mov
fdivl
mov
adc
pop
sahf
and
xor
dec
imul
repz
scas
rorb
in
dec
push
je
push
mov
into
es
lret
imull
scas
addr16
cmpsb
daa
scas
sti
and
adc
mov
xor
mov
scas
in
mov
sub
popf
cld
scas
inc
xchg
int3
rcll
mov
addr16
mov
push
mov
mov
adc
adc
addl
add
jbe
lret
or
sbb
fists
mov
icebp
fsubl
int
enter
cmp
xchg
inc
mov
pop
int3
fimull
aam
sub
cli
jne
lret
imul
mov
pop
or
push
outsb
sbb
in
cmp
jp
rcll
loopne
cs
adc
mov
cmp
aam
jp
mov
insb
push
sbb
std
out
mov
dec
test
xchg
lea
sub
mov
icebp
mov
inc
enter
les
test
jecxz
dec
sbb
out
and
pop
hlt
jnp
sahf
sti
aad
movsl
dec
inc
das
cwtl
push
pushf
arpl
loop
test
cmc
fbstp
and
aas
js
push
lcall
push
mov
test
pushf
push
pushf
cmp
push
pop
xchg
push
pop
sar
adc
fldt
jl
sub
mov
ret
in
daa
jge
jecxz
add
fsubrl
stc
enter
ret
cs
addb
scas
sbb
inc
cmpsl
inc
imul
cmpsl
inc
test
in
xor
aam
and
pop
jge
jno
aas
ja
mov
mov
cmpb
jo
sub
push
ja
fs
and
cli
test
dec
cmp
sub
in
dec
cmp
int3
lret
sahf
xchg
pop
and
mov
sahf
testb
mov
push
sti
inc
jmp
adc
sub
push
lahf
push
add
cmpsl
jmp
test
rcr
loop
pop
sbb
push
cmc
jnp
pop
mov
inc
xchg
sbb
add
repz
popa
xchg
xchg
stc
mov
imul
xchg
ja
mov
imul
mov
inc
iret
sub
in
call
push
or
dec
into
arpl
loope
and
into
sub
mov
jmp
mov
popa
sbb
add
divl
adc
fwait
adc
and
nop
mov
shl
jecxz
mov
push
sub
movsl
mov
push
fildll
dec
and
and
adc
aas
imul
mov
incb
scas
add
jge
dec
add
pushf
adc
mov
adc
pop
sub
filds
sub
mov
lock
xchg
bswap
cmp
adc
mov
notb
lods
ss
call
lods
dec
inc
inc
sbb
add
lods
cli
push
xor
fwait
lea
mov
and
test
mov
rolb
in
ja
inc
vdivsd
inc
dec
lock
jns
out
adc
jns
outsl
test
dec
dec
loopne
test
pop
test
in
divl
cld
insb
or
lock
xor
or
out
ret
outsb
pop
out
mov
shrb
push
sub
mov
insl
ljmp
pushl
ljmp
mov
leave
xchg
fs
jns
lods
addr16
mov
lock
adc
mov
out
int3
xor
or
adc
scas
or
add
xor
lods
push
repz
das
ret
or
or
adc
cli
mov
xor
aaa
add
inc
jo
les
jns
sub
jg
and
mov
lret
sbb
pop
jl
sub
mov
cltd
les
dec
jno
loop
pop
sub
push
out
dec
jmp
cmp
pop
mov
outsb
mov
stc
pushl
loop
and
dec
int
add
or
clc
mov
and
cmp
mov
or
ja
sbb
idivb
cmp
pusha
scas
xor
into
xchg
and
xchg
mov
fsubl
cli
cmp
in
jno
add
ret
push
jb
or
inc
jmp
imul
and
mov
mov
btr
add
push
adc
movb
daa
mov
mov
rcrb
inc
mov
jmp
and
jb
lds
mov
outsb
test
push
adc
scas
pop
scas
es
or
gs
cmp
in
push
sti
fs
dec
outsb
int3
or
aam
and
push
cmp
jmp
push
test
scas
loope
sbb
ja
js
dec
std
outsb
pushf
jecxz
sub
add
cmp
cs
in
mov
outsl
lock
sub
adc
cmp
fildll
mov
xchg
pop
mov
mov
xor
pop
cmp
xchg
cmp
or
pop
sbb
xchg
add
mov
pop
popa
subl
pop
adc
in
mov
test
lods
lahf
lcall
js
xor
cwtl
dec
imul
cmc
ja
iret
je
and
hlt
pop
xchg
leave
jmp
outsb
xchg
or
out
mov
cmp
adcb
loop
sbb
xor
into
push
xor
or
mov
cmp
push
in
gs
pop
in
jg
call
push
push
es
add
and
and
and
shrb
cmp
mov
inc
adc
jo
push
and
and
sub
repz
lea
adc
icebp
or
add
subb
adc
xor
dec
mov
mov
xor
sbb
fsubs
lret
cld
add
testb
flds
and
lods
rolb
and
mov
inc
imul
mov
or
in
mov
insb
or
cmpsl
out
adc
jl
add
push
cmpsl
or
incb
js
inc
icebp
subb
in
cmpsl
ss
cmp
dec
mov
jecxz
and
scas
jmp
out
into
xor
ret
xlat
test
call
pusha
pop
pop
imul
and
jle
add
movsb
aam
stc
out
test
imul
movsb
adc
adc
popa
pop
lahf
jg
jno
hlt
cs
add
je
lea
xchg
xlat
mov
push
in
ret
xchg
bound
loopne
std
mov
cmpsb
pop
arpl
imul
lds
jnp
adc
dec
lock
inc
lcall
loop
insl
fs
mov
mov
aam
adcb
xchg
insb
arpl
dec
xchg
mov
xor
ljmp
xchg
ljmp
je
mov
dec
xchg
test
and
dec
inc
xchg
stc
sub
rcr
mov
sbb
ds
jg
mov
add
pop
movsl
ret
fs
in
dec
cmp
lahf
mov
stos
jns
in
mov
in
dec
jecxz
stos
sti
mov
in
sbb
jp
fdivrl
inc
sbb
pop
scas
imul
mov
cmp
hlt
into
lret
ja
xor
sti
sub
out
ret
rcr
mov
cmpsl
adc
mov
sbb
out
add
xchg
mov
pop
enter
test
shl
fs
mov
hlt
xchg
mov
dec
mov
nop
in
stos
push
mov
and
pusha
shrb
or
push
pop
out
push
add
rclb
orl
mov
xchg
inc
jb
aam
xchg
jo
aam
xor
cmc
mov
test
imul
xchg
andb
dec
sub
push
xchg
pop
mov
push
and
push
sub
cltd
pop
sub
int
bound
jg
xor
jns
adc
xor
sub
mov
jb
xchg
nop
jl
mov
ss
dec
sbb
inc
int3
xchg
adc
test
push
sub
or
sbb
adc
loope
cmpsb
nop
jmp
sbb
mov
and
push
lcall
aam
into
inc
adcl
es
push
out
mov
push
mov
push
xor
mov
fwait
daa
mov
pop
call
xchg
xor
pop
stos
movsl
addr16
daa
mov
xchg
daa
mov
jp
fistps
test
fidivrs
cld
push
inc
jmp
sbb
jo
andl
adc
lock
xchg
cmp
js
mov
aad
gs
cmpsl
push
pop
or
push
pop
dec
std
pusha
out
js
sbbl
sub
dec
mov
in
test
xor
cmp
push
inc
lock
ljmp
gs
adc
lret
or
xor
jge
das
mov
movsb
popa
in
fsubr
enter
push
shll
repnz
cld
movsl
lahf
push
jne
xchg
mov
test
dec
or
insb
pop
sahf
mov
sarb
test
pop
inc
nop
inc
test
adc
test
repnz
mov
mov
shrb
adc
jbe
ljmp
icebp
lods
scas
lods
and
pop
scas
dec
les
lea
mov
aaa
inc
pop
sbb
xchg
jnp
cmp
jae
fimuls
mov
pop
dec
add
mov
cltd
bound
fisttpl
mov
fidivs
arpl
shrb
jno
mov
mov
adc
xor
imul
mov
scas
xchg
mov
mov
cmp
adc
lods
stc
inc
cmp
lods
mov
aaa
sub
sub
leave
jmp
negb
mov
fistpll
out
cmp
push
dec
lahf
add
sub
mov
mov
pop
shll
cmp
sbb
lds
push
imull
imul
int
mov
pushf
add
sbb
jno
fiaddl
mov
fdivrl
fsubl
adc
scas
push
ret
test
sbb
aas
xchg
push
jno
ret
xor
jecxz
adc
add
mov
mov
pop
scas
dec
fisubrl
inc
ret
add
or
sbb
or
stos
xor
in
jae
push
mov
mov
jno
jge
and
imul
ret
scas
aam
mov
in
dec
cmp
movsl
xor
pop
or
push
out
pop
mov
push
pop
popa
push
lcall
pusha
mov
fs
sub
scas
sub
popa
stc
mov
xchg
jo
or
dec
mov
mov
mov
adc
xchg
stos
lret
add
add
push
fwait
in
push
and
mov
dec
inc
lods
mov
cli
add
cwtl
mov
test
in
mov
mulb
inc
aaa
stos
and
ja
icebp
popa
sbb
loop
jmp
push
xorl
sar
into
dec
push
vpsrad
rolb
inc
push
add
cmp
add
js
push
shl
scas
xchg
add
jmp
es
lahf
cmc
or
sub
pop
hlt
and
or
xor
js
jle
fs
jecxz
dec
xchg
jecxz
icebp
mov
dec
xor
xchg
pop
dec
jge
mov
sbb
enter
push
mov
addr16
cmp
sbb
jecxz
jp
cmpsb
gs
stos
cmp
adc
adc
xor
in
xchg
fiaddl
subl
test
icebp
mov
sahf
ja
test
mov
fucomip
sbb
ja
or
out
iret
adc
add
mov
fstps
aaa
cmp
push
push
mov
loop
sub
or
xlat
mov
pop
pop
add
dec
jmp
adc
sbb
es
aas
and
mov
bound
lods
inc
add
lods
sbb
dec
lcall
or
push
ret
add
sbb
iret
dec
cmp
mov
xchg
jmp
inc
or
push
push
fmul
xchg
fidivrs
fnstsw
xchg
mov
mov
adcb
cmp
add
xchg
pop
add
icebp
mov
inc
adc
in
js
repz
xchg
inc
push
xchg
idivl
pop
mov
ljmp
int3
pusha
lcall
gs
js
pop
jp
popa
enter
lret
mov
lcall
test
pop
adcl
mov
icebp
or
push
mov
lods
jb
add
cli
push
xchg
out
mov
fwait
cmc
adc
push
push
sub
call
dec
cmp
jns
popa
mov
sbb
jp
xchg
push
mov
and
movsb
sbb
inc
es
std
rolb
cmc
xchg
cmpsb
mov
push
int3
pusha
test
in
xor
xchg
repnz
sti
lds
pop
pop
test
leave
sbb
arpl
fwait
ljmp
adc
mov
test
cmpsl
pop
lds
jo
mov
jnp
sbb
cs
cli
jp
xchg
scas
lods
mov
push
cmp
sbb
inc
pop
out
xor
adc
sbb
scas
lds
cmp
xor
jae
dec
mov
and
mov
pop
loop
jmp
push
or
adc
sub
loope
xchg
push
adc
mov
mov
fwait
xor
add
dec
test
inc
insl
test
test
jle
nop
pop
ret
adc
popa
cmpsb
cmpsl
outsl
es
pop
pop
and
hlt
inc
aam
jno
inc
mov
pmaxsw
add
les
pop
sti
inc
jp
jp
rorb
rorb
and
sub
or
sarl
fidivrl
sbb
mov
inc
pop
jno
xchg
sub
ja
popa
scas
jne
and
in
rolb
add
into
or
or
ret
js
lret
out
repz
push
icebp
test
and
bound
add
adcb
pop
popf
jmp
mov
mov
mov
test
js
std
daa
pop
dec
test
add
push
inc
daa
mov
xchg
jb
js
pop
xchg
cli
cltd
mov
js
scas
add
mov
loope
fwait
lcall
or
cmp
daa
and
push
dec
filds
scas
or
pop
push
in
bound
cli
pop
jl
outsb
outsl
and
pop
in
out
mov
inc
sbb
movsb
sbbl
jl
dec
daa
mov
xchg
mov
bound
sti
push
scas
int
scas
iret
outsl
lcall
push
pusha
loopne
gs
jp
ret
movsl
pop
jmp
movsl
mov
xchg
xchg
cmp
pop
movsl
repz
loopne
loop
decb
inc
scas
fnstsw
clc
adc
sub
mov
jp
cmpsl
clc
cmp
dec
es
nop
push
pushl
cmp
xchg
in
pop
jb
test
sub
sub
insb
es
ljmp
lret
or
add
sbb
xlat
arpl
jno
dec
or
ret
and
add
scas
cwtl
and
outsb
fcomps
cmpsl
jb
scas
cmpl
jge
test
sbb
sahf
and
push
add
adc
stc
and
and
pop
push
jb
or
mov
sbb
pop
int
hlt
imul
jbe
ss
fidivrs
inc
scas
rol
fistpll
pop
incb
pop
iret
imul
fsubrs
inc
xlat
aad
je
jg
jae,pt
hlt
aaa
aaa
push
rcrb
lret
cmc
and
and
and
dec
mov
push
mov
icebp
mov
mov
mov
aas
lret
xchg
cltd
cmpsb
and
xchg
pop
lods
clc
mov
sbb
sub
push
inc
push
int3
sar
mov
dec
lahf
addl
pop
jle
cmp
sarl
adc
leave
jle
mov
sbb
popf
pop
jp
mov
push
mov
imul
mov
lahf
or
int
bound
dec
movsb
ret
jno
mov
pop
jno
sbb
lret
das
icebp
push
rcrb
stc
jo
imul
adc
in
clc
mov
shrb
loope
and
scas
out
fldl
jne
mov
pop
sbb
mov
inc
sbb
cli
or
repz
jmp
mov
add
sahf
in
adc
ret
in
push
xchg
xor
cltd
imul
sub
mov
test
mov
lea
push
add
ds
ror
test
icebp
test
mov
ret
test
sbb
or
pop
loopne
stos
xor
sub
imul
shr
sub
sahf
mov
fstpl
pusha
push
mov
leave
lcall
outsb
dec
inc
xor
int3
lock
fwait
cli
xor
imul
adc
cmpsb
or
sub
dec
sub
xor
xor
add
ret
insl
loopne
and
int
out
std
mov
iret
xor
xchg
inc
sbb
js
int
pop
pop
arpl
notl
cmp
and
movsl
imul
pusha
push
push
stos
test
mov
add
pop
jns
mov
stos
xchg
dec
addr16
xchg
stc
mov
fstl
lock
push
mov
xlat
sub
add
in
sbb
mov
ret
add
inc
dec
test
mov
cmp
mov
xor
lret
out
insl
fwait
push
jnp
mov
push
fisubs
aas
dec
fistl
jbe
clc
loope
sub
adc
clc
jg
pop
mov
int3
imul
lcall
pop
testb
loope
sub
xor
leave
jbe
clc
lret
clc
sbbb
mov
sub
dec
or
add
sbb
jae
daa
inc
in
mov
jge
in
xor
jns
test
mov
xchg
add
pusha
insb
rclb
stc
outsb
lret
imulb
out
or
and
push
jo
mov
pusha
outsb
shl
out
xchg
jg
sub
cld
push
cmp
sub
dec
inc
lcall
cmp
loope
dec
mov
ret
loop
fidivl
lcall
ja
and
xchg
lds
push
adc
pop
sbb
dec
add
xor
in
adc
into
movsb
lea
aad
in
jb
lock
or
cmp
sti
xor
mov
loop
pop
mov
icebp
jle
push
xor
inc
outsl
ja
xor
enter
aas
or
xlat
jp
push
mov
cmp
in
adcl
lea
cmp
loop
xchg
jp
je
cmp
jae
cmp
sbbl
adc
movsl
inc
out
xchg
test
daa
pop
arpl
dec
dec
jbe
pop
aam
sub
lahf
stc
sbb
ja
cmpsl
fcomps
jns
lcall
out
arpl
sbb
mov
jo
xorl
sub
adc
imul
pop
adc
push
or
cmp
mov
pop
adc
add
xor
aas
sub
sub
inc
and
popa
dec
stos
jae
jae
js
insl
add
and
add
pop
ja
push
in
mulb
fisubs
inc
fistpl
mov
clc
mov
in
popf
ljmp
dec
scas
pop
push
dec
lock
adc
push
lea
mov
inc
jge
pop
leave
cmp
or
daa
inc
insb
cmp
enter
push
sbb
imul
sti
out
inc
int
in
jmp
imul
cltd
pop
into
and
lock
dec
xorl
rcll
test
mov
mov
xlat
cmp
inc
add
push
sub
push
cwtl
push
cs
mov
mov
cmp
gs
inc
or
jns
ret
jae
stos
pop
ret
dec
scas
jbe
leave
enter
xchg
add
sar
xor
xlat
xchg
inc
pusha
cmpsl
fstp
test
jle
mov
in
mov
pop
jecxz
add
fldenv
repz
mov
push
and
fstps
xor
jo
mov
add
jns
xchg
cmpsl
inc
test
jg
mov
cmp
jle
push
pop
loopne
cli
lods
sbb
ljmp
test
push
push
lcall
stos
enter
xchg
cmpsb
dec
jbe
aad
stos
repnz
add
mov
cmp
and
lahf
sub
jmp
sti
xchg
jecxz
roll
lock
mov
cli
and
imul
popf
adc
sbb
push
mov
mov
stc
leave
xchg
push
sbb
ret
testb
fbstp
clc
pop
stos
cmp
jle
push
cwtl
or
xchg
fwait
dec
test
cmp
cmp
inc
rcll
sti
gs
sub
xchg
adc
lret
cld
add
into
mov
mov
bound
cltd
add
div
or
jg
mov
and
insl
test
dec
fs
ret
pop
lods
das
or
adc
adc
cltd
clc
xchg
adc
and
jo
cmp
mov
pusha
sub
push
sbb
xchg
sub
xor
inc
xor
mov
fbstp
sub
jmp
outsl
sub
in
xchg
cmp
cld
and
sub
fidivs
mov
dec
and
insl
push
pop
lods
adc
add
fcmovnbe
ror
mov
push
xchg
push
sub
ret
mov
jno
adc
addr16
adc
daa
cmp
aaa
nop
xor
mov
push
fidivs
pop
aam
scas
mov
out
jg
mov
mov
xor
aam
fucomp
bound
enter
mov
cmp
clc
push
nop
cltd
sub
outsb
pop
sub
jecxz
lret
jmp
je
out
stc
mov
andb
add
shr
fisubrs
xor
into
aas
or
pop
mov
cli
xchg
adc
aaa
push
fisttpll
add
or
shrb
pop
jbe
jp
shr
testb
addb
in
sbbb
js
ret
aas
cmpsb
adc
dec
pop
pop
or
daa
xor
jbe
fs
pop
jge
dec
ret
fs
mov
adc
mov
push
add
iret
iret
mov
jno
push
jbe
gs
mov
fidivs
jnp
jb
jl
in
into
dec
pop
push
loope
loope
stc
addb
nop
xchg
popf
jp
jge
gs
cmp
dec
mov
inc
mov
cmp
popa
xchg
sub
fldcw
xor
or
inc
sub
or
adc
or
repnz
lds
test
rorl
out
jne
pop
insl
push
imul
shrl
adc
outsb
outsb
sub
add
in
xor
out
ja
xor
lcall
in
add
pusha
mov
ss
pop
sub
sub
lea
push
jecxz
dec
xor
pusha
bound
movsb
int3
push
sbbb
mov
xchg
adc
jmp
cmp
fs
cli
dec
lds
mov
insl
or
arpl
fimull
mov
mov
lret
cmp
xor
outsl
xchg
sub
sub
cmpsl
pop
cmp
stc
repnz
xor
insb
fldl
adcl
lea
mov
inc
lock
or
popf
aam
or
enter
inc
or
sub
and
in
cli
and
lea
mov
lret
loope
cmpsl
mov
sub
mov
out
mov
shll
cld
jb
insb
cmpsb
mov
mov
adcl
sbb
cmp
das
inc
xchg
lea
ret
jno
push
test
int
mov
sub
sbb
fistpl
pop
shrb
fidivs
int3
std
or
xchg
push
subl
jno
cmp
ret
cld
in
out
jmp
add
sbb
jg
sub
sbbb
daa
out
outsb
sbb
add
pop
adc
test
cmp
xchg
fucomip
and
shll
hlt
jns
adc
sahf
mov
pop
cmp
scas
or
jo
iret
sti
push
inc
shll
addr16
imul
sbb
push
ljmp
pop
add
mov
pop
lret
cmp
fidivs
orb
cld
shrl
dec
cmpsl
adc
lods
cmp
xor
xlat
pop
mov
in
mov
cld
xchg
jp
faddl
data16
lahf
dec
mov
lods
dec
inc
ret
lea
sbb
sbb
mov
int
js
mov
mov
mov
sbb
lcall
adc
enter
jecxz
ds
jae
ret
add
fisubs
sub
cmp
aas
outsl
loope
idivb
fs
ret
mov
or
jg
xchg
jmp
sbb
or
inc
or
repnz
jge
arpl
ja
adc
xchg
leave
sbb
mov
popa
sti
jb
add
out
and
add
test
outsl
fnstenv
test
test
or
dec
stos
out
pop
in
negb
or
fcmove
xchg
dec
jmp
jp
or
cmp
dec
pop
xchg
fwait
lea
sti
out
mov
lret
push
rorl
repz
pop
push
andl
pop
jg
cmp
jge
mov
mov
cmp
or
mov
push
roll
arpl
imul
in
int
out
js
or
fs
adc
push
xor
mov
pop
jb
push
addr16
lcall
hlt
sbb
or
add
mov
insl
xchg
or
lock
ljmp
or
xor
call
test
std
add
ret
in
push
adc
mov
mov
imul
out
jne
inc
test
sbb
mov
mov
shlb
jbe
movsb
fisttpll
mov
jns
mov
mov
adc
mov
mov
jecxz
sahf
xchg
mov
je
mov
gs
aam
or
mov
mov
mov
push
add
insb
dec
shll
es
or
fidivrs
pop
xor
cmp
xor
fstl
cmpsl
sbb
push
gs
lea
clc
mov
cmpsb
inc
mov
bound
or
fcomi
mov
stos
aaa
push
loop
out
xchg
rol
xchg
je
mov
loope
scas
mov
dec
test
out
adc
clc
or
inc
arpl
mov
ja
out
pop
mov
mov
mov
mov
xorl
add
fsts
inc
dec
push
mov
out
adc
nop
int3
scas
or
jns
in
mov
mov
insl
adc
lahf
insb
lods
adc
stos
sub
dec
xchg
mov
addr16
xchg
inc
call
mov
outsb
jne
dec
jmp
aaa
pop
insl
test
mov
pop
push
push
dec
push
loop
pop
cmpsl
call
mov
cmc
or
mov
inc
xor
popa
enter
into
das
leave
ss
inc
push
je
push
mov
mov
and
sbb
mov
insb
inc
aam
jno
push
lock
jle
ds
inc
cmp
out
push
orl
mov
fdecstp
int3
inc
adc
pop
push
or
and
jmp
adc
jno
imul
add
xorb
dec
xchg
stc
pop
cmp
jae
fidivl
add
mov
push
jecxz
js
xorl
sbb
and
aaa
adc
lea
mov
inc
lea
test
loopne
sti
dec
negb
adc
rcrl
sub
test
frstor
sub
fwait
call
xchg
lahf
sub
in
push
mov
add
push
inc
mov
mov
xchg
xlat
cmp
out
inc
insl
xlat
ja
sbb
fmuls
sbb
add
cmp
out
cmpsb
xchg
outsl
add
xchg
push
jecxz
cltd
jne
jle
fwait
in
xchg
fimull
mov
jnp
je
mov
xor
ds
mov
and
imul
sub
mov
popa
inc
mov
gs
enter
xlat
addr16
es
dec
push
ss
cltd
test
cmp
push
mov
fwait
adc
rcrl
pop
dec
test
pop
pushf
adc
stos
ret
sub
fs
rcr
add
pop
push
subl
jmp
ss
icebp
scas
insl
aad
adc
lods
js
das
aas
jl
inc
mov
jno
fdivrs
xchg
sbb
movb
mov
add
pop
and
adc
cmp
decb
lcall
test
mov
cmp
add
les
out
inc
rcrb
aam
sahf
mov
adcl
lock
cmp
inc
pop
test
push
jecxz
xchg
mov
mull
mov
lods
testb
jns
xchg
nop
hlt
sub
data16
data16
push
call
sub
or
dec
fdivl
popa
icebp
inc
xchg
std
adc
fcmovbe
out
jne
aad
mov
popa
pop
push
pop
mov
sbb
and
mov
je
in
jmp
bound
xchg
jbe
cmc
lcall
dec
xor
test
xor
jbe
cmpsl
fiaddl
xchg
xchg
dec
mov
sbb
fadds
dec
jno
jb
adc
xlat
idivb
dec
mov
stc
sub
inc
adc
loope
test
cmpsl
push
xchg
or
mov
aaa
or
adc
icebp
icebp
fdivl
lahf
push
sahf
xor
and
lret
repnz
fbstp
loop
sub
and
insl
clc
mov
pop
idivl
adc
rorl
xor
rcrl
mov
or
xor
mov
cmp
pop
xchg
popf
mov
fildl
std
and
idivb
jle
mov
jge
scas
sahf
mov
or
mov
pmaxsw
aas
cli
pusha
adc
pop
ret
dec
lcall
call
mov
ss
sub
xor
mov
mov
shll
xor
push
add
sahf
jnp
test
push
adc
filds
int
push
divb
jnp
mov
cmpsb
add
je
xor
cmp
ficoml
jmp
pop
loop
cltd
xchg
push
clc
push
xlat
mov
adc
test
das
wrmsr
pop
rcrl
jb
dec
ljmp
rcl
adc
stos
decl
cwtl
or
imul
sub
mov
jb
ret
mov
add
sbb
mov
cmpl
push
scas
mov
imul
push
dec
dec
mov
xchg
mov
xlat
ficoml
cld
mov
sbb
push
out
ljmp
ret
out
leave
test
inc
stc
std
out
insl
js
dec
push
or
andl
lock
sbb
into
push
sti
out
aaa
xor
sub
cltd
xor
movsb
jb
ja
int3
ljmp
es
or
or
cmp
fidivrl
push
clc
pop
pop
stos
out
test
into
popf
stos
jae
sub
dec
sbb
je
or
pop
add
xor
arpl
js
movsl
xor
ljmp
mov
pop
addr16
lahf
outsb
pop
mov
daa
xchg
cli
les
out
scas
sbb
mov
jae
push
cmp
jge
xor
sbb
imul
lahf
dec
jns
mov
aam
sbb
sub
xchg
rorw
push
sub
inc
hlt
cmc
popf
and
push
mov
jge
dec
pop
xor
lcall
lret
enter
push
sbb
mov
cmp
sahf
lret
inc
shrb
fistps
hlt
adc
gs
shl
mov
adc
mov
shll
int
jle
mov
mov
nop
pop
sbb
sub
pop
cli
popa
sbb
in
lods
hlt
or
out
icebp
sbb
pushf
dec
mov
jmp
push
push
aaa
fdivl
stos
pop
pop
mov
int
stos
mov
push
mov
sbb
in
sbb
cmc
sub
sbb
jl
pop
mov
sub
stos
into
mov
orl
xchg
mov
imul
xchg
sub
out
lcall
push
ret
mov
fwait
mul
mov
pcmpgtb
adc
es
incb
sub
out
ds
sbb
popf
pop
lret
stos
test
jns
or
mov
and
shll
loope
and
mov
mov
or
inc
xchg
nop
push
pop
sub
mov
pop
pop
add
iret
mov
imul
or
mov
xchg
scas
popa
jmp
mov
ds
int3
mov
mov
leave
scas
adc
add
sti
pop
pop
sub
pop
nopl
mov
scas
fwait
pop
outsl
lock
jecxz
call
pop
jns
dec
lret
inc
jbe
pop
inc
xchg
add
ljmp
lock
stc
cwtl
aad
inc
xchg
test
push
xor
lret
cmc
xchg
adcb
hlt
mov
test
mov
jno
sub
std
scas
push
push
add
push
cltd
mov
ja
out
inc
mov
jmp
mov
cwtl
or
add
icebp
stc
mov
cltd
ds
xchg
mov
ret
dec
into
adc
and
leave
outsl
dec
rcl
pusha
fcmovnu
outsl
shl
in
icebp
icebp
ss
imul
daa
popf
fisubrl
shll
jo
mov
cmp
stos
jo
stos
jb
xlat
pop
push
push
add
mov
ds
fdivs
cmpsl
sti
add
add
rolb
fnstenv
xchg
mov
popf
sub
xchg
out
fsincos
push
repz
dec
in
aad
mov
movsl
es
push
outsb
xor
mov
notl
xlat
mov
jnp
inc
pop
jne
fisubrs
mov
inc
or
dec
gs
movsl
sarl
stc
mov
xchg
pop
push
cmp
in
repnz
scas
fnsave
repz
jbe
enter
popf
lods
cmp
loop
fcompl
repnz
dec
rorb
cmp
mov
jbe
xchg
sub
and
fdiv
loopne
js
pop
ror
dec
xor
lret
iret
push
divb
push
ret
jp
lock
lahf
inc
cmpsb
mov
jle
into
add
inc
push
fbld
push
ja
xchg
out
mov
xchg
jmp
cmpsl
adc
enter
mov
popa
cmp
lock
dec
pushw
adc
out
rclb
add
rorb
mov
jge
inc
mov
mov
jno
popa
fcompl
mov
cmp
pushf
cmpl
ja
or
mov
push
dec
jne
outsl
and
icebp
popf
addr16
and
xor
dec
or
sti
xchg
mov
mov
pop
and
add
jecxz
incb
das
jne
or
hlt
or
jno
jge
je
into
test
mov
xor
push
mov
xor
dec
jno
inc
jnp
test
imul
lds
and
push
insl
fwait
add
adc
xlat
in
mov
adc
mov
and
lcall
push
imul
sub
and
mov
adc
sti
lods
push
inc
xchg
mov
aaa
xchg
addr16
icebp
sub
jl
mov
out
add
addb
jae
or
and
adc
stos
sahf
es
mov
adc
aad
dec
addl
inc
and
dec
pop
mov
xlat
cltd
cli
xchg
mov
bound
cmp
cmc
cwtl
test
mov
dec
ret
sbb
xchg
and
xchg
in
or
aaa
mov
out
in
notb
pop
rcrb
sbb
lcall
into
dec
mov
fildll
rcrb
pusha
pop
sub
cld
ds
movsb
adc
or
sub
call
ss
lock
scas
aas
popa
jo
bound
repz
inc
rol
pushf
add
insl
inc
out
add
test
xchg
mov
push
out
rorb
stc
lods
xor
xor
mov
xchg
insl
inc
push
jge
shrl
push
ficoml
bnd
rorb
les
pop
xor
push
jo
stos
or
and
mov
pop
pop
jmp
sbb
xchg
mov
shrl
pop
lds
fwait
pop
sub
add
jmp
stos
xor
adc
and
sub
or
test
data16
pop
das
add
dec
sbb
sub
sbb
sub
add
pop
out
and
sahf
dec
sbbl
cmp
outsl
out
xchg
daa
push
ret
stos
fisttpll
push
sub
dec
ljmp
sti
mov
enter
jns
jns
mov
mov
sub
jmp
out
jb
test
push
repnz
xchg
pop
cltd
jo
insb
or
mov
addb
test
pop
dec
js
call
jb
mov
hlt
ljmp
lock
fstpt
jo
data16
out
sbb
xor
inc
insb
add
mov
lods
pop
in
push
cmp
pop
lahf
mov
hlt
arpl
and
push
hlt
int3
jmp
ds
sub
sahf
js
inc
fistps
pop
fsubs
sub
sub
pushf
adc
xor
pop
dec
jbe
in
gs
outsl
and
das
les
flds
lret
pop
mov
bound
jle
pop
xorps
div
mov
nop
lea
in
and
data16
xchg
inc
stc
mov
ds
mov
lahf
and
stc
dec
jnp
push
mov
cmpsb
ljmp
ljmp
sbb
mov
test
dec
xchg
lock
scas
add
mov
push
ds
sbb
addl
jae
out
sbb
ds
cltd
ljmp
xor
inc
pop
jle
mov
adc
xlat
mov
dec
or
inc
push
aaa
pop
cmp
movq
orl
xor
pop
jb
mov
fstpl
push
fimuls
jle
sbb
mov
sub
in
inc
mov
ss
mov
push
fstps
sbb
add
or
dec
dec
fiadds
je
mov
sbb
mov
fstpl
hlt
in
push
in
mov
dec
mov
es
mov
jb
push
mov
out
xchg
aad
dec
adcb
push
pop
jno
push
jnp
nop/reserved
addl
push
cmp
lret
test
popf
jne
cmp
imul
jo
fsubp
bound
fisttps
mov
gs
aam
xchg
dec
xor
jno
imul
inc
pop
lahf
xchg
mov
inc
xor
xor
or
lret
jns
bound
xchg
dec
into
add
dec
mov
fidivl
aad
jbe
jp
mov
repnz
jno
jmp
lds
cmp
xchg
icebp
pushf
push
xchg
mov
xor
xchg
ss
scas
stos
aam
stos
rcll
fidivs
loopne
rcrb
sbb
dec
lcall
push
call
adc
push
enter
jb
jnp
dec
test
scas
leave
insb
pusha
scas
jle
ja
loope
xchg
icebp
sub
test
and
adc
mov
imul
arpl
push
adcb
fidivrs
movsl
movsb
clc
test
sbb
ror
ret
mov
cld
negl
mov
popf
pop
adc
es
and
mov
clc
add
add
fisubrl
or
pop
rsm
inc
outsl
lods
dec
xchg
sub
push
jl
cwtl
or
mov
or
push
loopne
insb
outsl
cmp
mov
mov
push
bound
scas
and
and
inc
jg
rorb
jg
lods
mov
pop
jmp
leave
cmp
jb
or
fbld
imul
pop
and
cwtl
mov
jo
ss
mov
es
xlat
shll
mov
and
mov
rcl
mov
sahf
hlt
pop
ret
int3
adc
test
jmp
fimuls
pusha
adc
pushf
stc
xchg
fisubrl
ja
mov
jmp
cmp
lea
mov
mov
outsl
fwait
mov
inc
imul
push
cli
push
mov
pop
dec
pop
pop
sub
ds
jne
mov
xor
dec
inc
shll
push
dec
rolb
mov
push
popf
mov
imul
shlb
shl
lock
adc
xchg
rol
or
cmp
das
dec
nop
pop
mov
sbbl
inc
fnstcw
or
xorl
lock
push
jns
adc
int3
int
jp
daa
stc
je
movl
cmp
cmp
lret
jge
loop
sub
and
jl
sbb
gs
ljmp
sub
pop
data16
stos
imul
lock
hlt
push
xchg
mov
push
mov
lcall
cs
inc
or
scas
aam
pop
adc
daa
mov
pushl
cmc
mov
pop
rolb
push
arpl
mov
popf
and
icebp
stos
and
sub
lret
rcll
push
push
roll
lcall
push
fcoms
sub
mov
testb
mov
out
dec
out
nop
adc
lea
and
pop
test
in
ret
cmc
loop
test
imul
lcall
not
sarl
mov
cltd
test
lock
fcmovnbe
pushf
push
ffreep
push
hlt
dec
lcall
nop
lods
push
xchg
jmp
or
jle
and
cmpsl
sahf
cmp
jne
out
push
shll
sbb
push
sub
push
push
gs
les
fwait
jne
shrb
std
push
add
ja
or
in
sbb
ficoms
aaa
add
mov
xor
fidivrl
cs
pop
fcompl
lea
add
push
out
inc
les
fs
into
xlat
rclb
and
mov
xchg
or
or
push
mov
sahf
movsl
cmp
xchg
or
pop
lea
scas
jg
push
sub
fwait
insl
mov
nop
sub
dec
pop
filds
rorl
sahf
packsswb
add
cld
rclb
es
jae
je
cmp
xchg
cs
in
xchg
xchg
fwait
mov
xor
and
inc
fimuls
in
outsb
ja
inc
rorl
sbb
inc
mov
ret
jp
push
je
mov
ja
shrb
lods
out
xchg
ss
pop
cmp
push
add
jne
sbb
pushf
push
mov
data16
mov
cmp
icebp
cmp
rcl
enter
cmc
fnsave
mov
hlt
fdivl
xchg
lcall
rorl
mov
push
scas
loop
pop
mov
aas
pop
and
shlb
lret
push
or
in
loopne
jns
push
test
cmp
mov
out
scas
mov
cmpsl
xchg
les
int
orl
rep
mov
jge
addr16
psraw
js
in
loopne
add
add
daa
adc
test
mov
ljmp
cmpsb
mov
dec
sti
adc
shll
cli
jg
sbb
in
rorb
pop
push
xchg
dec
fdivrs
push
push
jg
bound
dec
add
aam
jge
adc
sub
mov
mov
pusha
call
movsb
jl
in
pop
mov
arpl
gs
add
outsb
pop
adc
aas
cli
jno
jp
sub
dec
sub
xchg
ret
adc
jbe
mov
daa
outsl
repnz
or
imul
jo
addr16
dec
push
xor
outsl
inc
mov
push
push
cltd
mov
adc
popf
aaa
faddp
daa
push
mov
sbb
ss
jno
mov
hlt
loope
push
movsl
inc
dec
imulb
mov
pop
cs
nop
out
push
in
movsl
xchg
iret
pushf
into
mov
jb
xor
ja
jae
inc
mov
inc
pop
imul
xchg
in
loopne
add
sub
rcr
or
jle
inc
mov
adc
push
sub
fdivl
cmp
mov
aam
mov
push
pop
pop
mov
sub
xor
cmpsl
mov
rol
scas
cmp
mov
ljmp
xor
shl
sti
push
mov
cli
xlat
loop
pop
push
sarw
mov
jp
xor
adc
sahf
cmpsl
fldcw
jno
cmp
loopne
and
out
mov
in
jecxz
lcall
data16
mov
mov
cwtl
lcall
sbb
sbb
fstpt
jbe
mov
test
or
mov
addr16
xlat
cmpsl
add
arpl
pop
mov
lock
into
and
mov
ret
sub
pop
sub
loope
shl
adc
stc
xlat
jns
fmull
data16
sub
scas
lahf
mov
bound
xor
cmp
jns
in
pop
sbb
arpl
mov
leave
pop
icebp
mov
out
adc
popf
dec
pop
jbe
jo
push
cmp
mov
fldl
fdivrl
in
mov
xchg
or
dec
push
jmp
or
mov
inc
cmpsb
pop
adc
sahf
pop
ret
call
or
leave
cmp
imul
dec
cmc
insb
stos
inc
repnz
imul
mov
in
faddl
inc
sbb
inc
mov
out
fwait
pop
xchg
xchg
jmp
inc
cmpsl
and
inc
nop
or
into
lods
adc
shrb
fldl
out
jbe
inc
aaa
xchg
push
push
mov
stc
out
test
sub
mov
mov
push
dec
and
xlat
scas
inc
pop
xor
pusha
xchg
push
stos
cmp
mov
dec
inc
or
daa
lods
xchg
dec
pushf
aas
gs
pop
leave
out
enter
or
repnz
call
icebp
adc
push
cld
lods
mov
cwtl
mov
jnp
loopne
fistpl
insl
ss
jmp
dec
xchg
enter
scas
imul
mov
mov
outsb
xchg
fs
jge
mov
cmpsb
inc
inc
es
jns
cmp
jecxz
outsb
add
icebp
inc
add
in
fwait
bnd
idivl
cmpsb
int3
push
test
sbb
cld
pop
push
and
aam
and
push
test
imul
mov
rol
movb
fadds
iret
add
outsl
dec
mov
ss
jae
xor
inc
mov
outsl
adc
gs
inc
pop
add
negb
adc
add
fcomps
rcll
out
inc
in
pop
jmp
je
outsb
push
mov
mov
lahf
sahf
das
mov
testb
filds
cmpsb
cmp
data16
sbb
or
and
dec
cs
out
repnz
insb
mov
cmpsl
jns
mov
loop
and
mov
push
testl
xchg
dec
scas
cmp
movl
sbb
pop
mov
xchg
icebp
mov
sar
mov
or
mov
mov
lret
push
adc
inc
mov
es
les
and
jno
test
push
aam
imul
test
jb
mov
push
or
mov
loope
xor
xchg
adc
aam
dec
xchg
sahf
add
lret
and
cld
cli
fsts
mov
dec
imul
inc
lods
std
inc
fcmovb
add
mov
pop
data16
subl
outsl
or
jbe
lds
fbstp
pusha
aad
mov
lret
mov
aaa
ja
push
int3
frstor
adc
and
adc
mov
fs
cmp
test
mov
fsubs
call
pusha
or
push
mov
adc
pop
pop
dec
jae
bnd
ss
mov
jno
xchg
ljmp
insl
pop
xchg
jo
adc
xchg
mov
daa
dec
popf
xchg
push
or
daa
bound
test
sbb
int3
cmp
pop
cmc
test
dec
test
lahf
fldl
je
pop
arpl
mov
push
add
push
sbb
sub
jbe
stc
rcrb
ret
fwait
mov
out
out
xor
mov
push
sbb
call
push
fcoml
push
js
add
mov
loop
xchg
sti
xchg
dec
loop
xchg
jle
mov
and
lret
cld
bndstx
out
adc
test
add
es
test
xchg
movsl
out
adcb
repnz
arpl
sahf
mov
inc
mov
loop
pop
sbb
stos
js
ret
dec
adc
outsb
mov
jae
pop
lret
les
je
xor
notb
shll
xchg
jno
loop
rcrb
jns
mulb
lods
in
test
loop
movsl
ja
loopne
mov
inc
pop
adcb
mov
dec
sbb
add
test
bound
push
test
jo
and
popa
cmpsb
mov
jg
xchg
leave
lock
and
xchg
in
xor
repnz
sub
clc
or
mov
fadd
scas
xchg
cltd
jbe
andl
adc
cmp
pop
push
mov
stos
movsb
test
fcmovu
mov
xor
in
add
fwait
push
pusha
add
jb
or
xor
add
dec
xor
add
xchg
cmpsl
lret
outsb
lahf
xchg
push
xchg
test
negb
sub
std
cmp
sbb
lds
push
or
cmp
push
inc
push
in
sbb
test
negl
das
out
cwtl
mov
addr16
subb
je
xor
dec
cmp
movsb
xor
fnsave
sbb
mov
out
dec
lahf
scas
xor
or
loop
es
cmc
mov
or
iret
sbb
aaa
mov
dec
movsb
mov
aad
mov
cmc
xchg
inc
es
sahf
xchg
ljmp
cmp
sbb
jo
loope
lea
clc
mov
stc
imull
mov
dec
mov
test
cli
lock
jp
es
add
out
lock
mov
jecxz
jl
sahf
push
push
mov
xchg
mov
mov
xlat
call
mov
icebp
sbb
movsb
ljmp
or
cmp
pop
cmp
mov
add
das
popf
lret
jo
cmp
shrl
cmp
push
dec
push
mov
bound
push
nop
jecxz
es
and
gs
lret
or
sti
sbb
icebp
add
mov
popa
or
out
movsl
popa
cld
fistpll
push
shlb
insl
ja
subb
push
fdivl
daa
into
les
jge
or
jnp
fbstp
out
nop
hlt
clc
add
dec
pusha
xchg
jb
push
bound
or
pop
mov
jmp
movl
ja
add
in
fistpl
test
data16
stc
lret
xor
inc
sar
dec
add
insb
pop
jl
xor
push
movsb
cmpl
out
and
jp
xor
rclb
jbe
adc
or
lds
mov
sbb
ficomps
andb
idivl
or
inc
enter
or
out
add
add
add
cs
ret
mov
inc
leave
js
inc
scas
cmp
mov
rclb
push
bound
je
xchg
pop
in
fwait
xchg
mov
and
inc
pop
loope
mov
xchg
call
mov
int3
mov
mov
jge
pop
shll
addb
and
xchg
lret
mov
xor
rol
enter
mov
cs
ds
icebp
mov
xor
pusha
sub
popf
mov
xchg
adcl
jmp
push
je
xor
mov
mov
cmp
mov
test
adc
shrb
mov
fwait
pushf
jns
out
outsb
jnp
lahf
in
dec
fldl
xor
mov
jl
les
sub
xor
jecxz
adc
jns
loop
push
or
cmpsb
xchg
push
mov
push
jae
int
and
adc
fisttpl
sbb
cmp
loopne
cmp
add
mov
mov
cmpsl
sbb
repnz
es
les
add
ljmp
jg
sbb
mov
outsb
add
sub
ljmp
mov
inc
aaa
or
add
sbb
xor
test
fisttps
jb
sub
test
mov
decl
nop
stc
add
in
jns
push
shll
pop
jecxz
pop
jl
or
mov
mov
pusha
cwtl
ret
mov
int3
push
mov
ss
cmp
fidivs
cmpsl
scas
les
mov
mov
mov
rcrl
xor
loop
sbb
dec
lock
sbb
call
into
das
int
inc
mov
push
sti
sets
push
adc
add
sbb
xor
sbb
mov
xchg
test
add
sub
push
mov
icebp
jns
push
mov
and
jne
jle
inc
addr16
pushf
cmp
mov
rcrl
sub
pushf
cmpsl
call
sub
sbb
xchg
in
xchg
add
scas
dec
cs
add
lcall
mov
lret
adc
add
lret
adc
insb
mov
rorl
dec
sbb
aam
jmp
sbb
xchg
ret
inc
rcrb
dec
sbb
test
jle
or
lock
and
sar
fbld
push
or
cmpsl
arpl
push
add
lea
popf
enter
popa
adc
add
xor
sub
push
mov
inc
mov
int
push
inc
out
xchg
hlt
mov
push
sbb
inc
pusha
dec
ret
ret
loop
mov
cwtl
lock
push
aas
jbe
ret
int
lea
mov
cmc
repnz
aam
addl
orb
or
not
push
out
dec
ljmp
xchg
mov
push
mov
shll
inc
jg
push
xchg
test
sub
inc
fists
sub
cli
pop
jg
add
sbb
std
add
mov
push
dec
pop
ds
inc
aas
rorb
push
mov
cmp
xchg
out
mov
jne
fistpl
pop
xor
cmp
jecxz
in
xor
pusha
lods
int
jb
pushf
stc
push
mov
rcrl
movsl
mov
push
mov
gs
mov
xorb
sub
dec
mov
jmp
dec
adc
xchg
sub
test
inc
hlt
jno
mov
dec
cmp
fcmovbe
shl
jno
lds
pop
outsl
mov
sbb
mov
cs
or
sbb
sbb
mov
out
push
fndisi(8087
loopne
xor
out
pop
or
test
mov
jg
mov
cmovg
push
fldt
lcall
inc
jg
dec
lods
mov
dec
mov
cmp
mov
sub
movsb
inc
mov
adc
outsb
stos
mov
in
imul
pop
mov
xorb
loope
pop
cmp
xchg
in
xchg
cmp
and
stos
shrb
arpl
gs
insl
movsb
movsb
mov
adc
sbb
rorb
xchg
or
xchg
call
xlat
in
shl
adcl
idivl
dec
jb
rclb
shrb
test
ret
mov
es
jg
inc
push
std
pop
ja
outsl
rclb
das
fsts
mov
sub
fsub
push
xor
stos
ret
adc
adc
jne
aam
sub
mov
vcvtps2dq
lahf
xor
or
into
pop
mov
or
rorb
lea
or
add
lds
decb
repnz
fsubrs
jmp
pop
jne
xchg
xchg
mov
test
mov
fistps
and
and
mov
shrb
sub
inc
cmp
push
decb
sub
and
sbb
imul
and
or
cmp
add
pop
adc
outsl
lds
xor
sub
pushw
mov
lcall
dec
popa
xor
mov
fldenv
push
lock
mov
js
mov
pop
negb
in
xor
clc
pusha
cltd
push
adc
les
inc
mov
jne
call
fsubl
inc
int
scas
pop
jg
clc
adc
shlb
and
push
adc
cmp
adc
jb
sub
push
jb
std
adc
sbb
mov
push
stos
rcr
mov
pop
xor
jnp
adc
test
int
jnp
adc
xor
cmp
out
fistpl
sub
and
add
mov
dec
inc
sar
pusha
sti
xchg
lret
pop
mov
in
jge
or
scas
jg
fnstsw
xor
rcl
mov
test
in
inc
sbb
sti
mov
xlat
repz
adc
dec
cmp
fildl
arpl
out
imul
jge
push
repnz
adc
cmp
and
cmp
loope
xor
and
cmp
cmc
add
ja
inc
jecxz
gs
mov
mov
sub
inc
pop
pop
addl
stos
mov
mov
in
out
in
or
shl
das
inc
loopne
jecxz
loop
cmp
sbb
mov
out
jl
dec
cmpb
in
add
xor
inc
mov
pusha
mov
cmp
xchg
in
xchg
adc
test
sarl
int3
jg
push
das
inc
mov
int
pop
dec
loop
and
ficomps
cmp
adc
sbbb
movsl
pop
cli
std
cmp
mov
fs
or
rolb
pop
add
in
addr16
pop
aad
pop
in
std
ds
pop
cmp
enter
push
jo
loopne
pop
lea
je
xor
dec
inc
iret
mov
bound
mov
les
xchg
adc
cmp
jbe
loop
pop
cwtl
add
push
sbb
stc
icebp
iret
in
je
cmp
pop
loope
mov
mov
push
popf
add
sub
mov
lods
cmc
dec
sbb
or
and
xor
mov
sbb
sbb
ret
sarb
jne
mov
loope
aam
daa
test
loop
adc
xchg
aad
sub
mov
push
enter
jno
loope
push
cmp
or
into
jecxz
jae
fidivrl
bound
adc
inc
sbb
movsl
test
mov
cmp
repnz
push
daa
jae
xor
bound
les
jnp
pop
mov
mov
adcl
mov
outsb
dec
repnz
xor
je
push
fnstcw
push
dec
and
cmp
push
jmp
inc
sahf
dec
jno
out
jo
push
clc
mov
insl
cmp
dec
pop
pop
xor
cmp
in
ret
test
pop
pop
mov
fisubs
in
pushf
ror
sub
mov
sub
imul
in
mov
xor
mov
mov
push
jb
shrb
xchg
mov
fadds
mov
aaa
sbb
in
int3
inc
ds
leave
push
and
pop
mov
and
data16
xor
sbb
outsl
jb
sahf
fstps
rolb
mov
pop
daa
inc
add
js
inc
xchg
xchg
jae
dec
push
bound
lods
xor
sub
outsb
rcrl
setnp
lcall
adc
out
pop
add
jmp
and
sbb
hlt
test
test
sti
push
jns
lret
mov
add
clc
test
out
mov
movsb
xchg
or
pop
addl
xchg
dec
out
pushf
pop
sub
xchg
sbb
or
push
mov
push
and
test
dec
aad
rorl
mov
std
lret
and
movsl
call
or
test
cmpsl
in
imul
cli
fldt
cwtl
into
cmpsb
cmp
es
loop
jmp
jge
aad
xor
push
fdivr
adc
arpl
lahf
xchg
fbstp
jl
mov
repnz
movsb
mov
and
cli
mov
inc
xlat
int3
mul
pop
movsl
xorl
aas
movsb
jae
sub
stc
inc
aas
xorb
mov
sub
in
cmp
inc
out
pop
ret
push
addr16
mov
add
popf
call
dec
push
sub
scas
pop
pop
mov
insl
inc
repnz
dec
pop
xchg
cmp
aam
mov
xor
sbb
inc
jo
mov
mov
fisubrs
aaa
add
pop
stc
mov
std
dec
int
sbb
inc
shlb
xchg
nop
std
loopne
mov
cltd
push
mov
mov
jmp
cmp
clc
pusha
push
vmread
pop
mull
jecxz
les
mov
cmp
fwait
cmp
jbe
movsb
pop
mov
mov
dec
iret
mov
cmp
xchg
or
cmp
cli
aaa
arpl
mov
sbb
mov
dec
pop
pop
cmpsb
push
xlat
stc
insl
incl
mov
xor
test
pop
sbb
pop
dec
jle
lcall
lea
cwtl
sub
dec
cmp
sub
rcll
mov
push
or
aam
cld
daa
cli
push
js
dec
sbb
mov
add
outsl
jle
sbb
gs
or
repnz
out
push
add
pop
call
push
xchg
lds
fbstp
pop
xor
pop
mov
and
xor
sbb
mov
inc
push
leave
cs
test
jnp
fistpll
cwtl
push
xor
pop
cmp
in
mov
mov
mov
test
adc
adc
mov
jge
mov
push
stos
xor
ja
sub
lds
loope
pop
lods
pop
aaa
jbe
test
xchg
push
cmp
dec
pop
sahf
pop
call
and
outsl
int
xor
stc
addb
int3
scas
mov
mov
mov
xorl
jecxz
xlat
push
pop
aaa
lcall
loope
or
mov
xchg
js
xchg
sub
add
xor
mov
or
scas
pusha
adc
scas
test
lcall
cld
pop
mov
dec
cmp
addb
push
push
pop
xor
lcall
scas
dec
arpl
xor
shlb
cmp
xchg
mov
and
ljmp
push
inc
or
jae
in
sarb
xlat
push
les
fldt
cmp
in
cmp
stc
je
fldenv
pusha
dec
jne
pushw
xchg
push
cli
fisubl
jns
pop
inc
mov
lock
lret
xchg
in
sub
out
dec
pushf
mov
int
cmpsb
mov
mov
shr
mov
mov
outsl
and
idivb
stos
pop
and
dec
mov
mov
mov
fildl
push
adc
sbb
repnz
xor
mov
flds
inc
and
fidivrs
ficoms
cs
into
lods
mov
mov
test
cmc
or
jne
sbb
mov
fs
ficomps
imull
push
call
jmp
dec
jl
push
lods
mov
or
cmp
repnz
jno
cmp
push
lret
outsl
outsb
or
in
stc
add
inc
add
pop
jb
insb
arpl
in
mov
pop
test
arpl
lcall
inc
lods
sub
inc
mov
sub
sbb
xor
jb
fwait
mov
jbe
les
adc
insb
cmp
add
les
xchg
adc
fwait
add
sub
mov
push
add
pop
in
adc
out
je
mov
add
xor
aas
cmp
out
lret
fldenv
int
cmp
sahf
lods
jae
mov
mov
mov
push
sbb
mov
adc
dec
adc
mov
xchg
jp
push
pop
lods
in
add
mov
mov
sub
xchg
add
lods
or
xchg
test
insl
jl
icebp
leave
jle
and
divl
pop
subl
scas
lds
cmp
jns
lock
inc
popa
ret
ja
loop
jl
and
sbb
cltd
cwtl
push
xor
test
test
cmpsl
notl
mov
sub
xchg
dec
adc
idivb
push
mov
add
pop
cwtl
and
sbb
sub
xlat
cmp
or
cmp
jmp
orb
pop
xchg
push
and
scas
xor
bound
jne
sarl
jg
xchg
jmp
pop
iret
inc
imul
xor
push
xchg
ds
shrl
mov
xchg
cmp
ds
xchg
pop
divb
xchg
movsb
jecxz
push
pop
scas
mov
jle
sbb
test
xchg
fmulp
out
ret
ja
jp
fnstsw
gs
xchg
sub
pusha
sub
jle
sub
cld
jecxz
fldenv
push
inc
and
sbb
inc
inc
push
mov
mov
sub
or
cmp
and
lea
insl
pop
push
jmp
popf
jg
in
shlb
mov
mov
dec
ret
inc
fisubl
mov
pop
and
push
pop
les
jbe
ret
sub
aam
out
push
pushl
cwtl
jecxz
jnp
or
dec
xchg
jmp
mov
roll
pop
test
ret
gs
add
dec
sbb
push
add
outsb
rolb
xor
dec
or
jmp
out
stc
sbb
push
mov
shlb
cltd
mov
addr16
mov
int
ljmp
fnstcw
in
xchg
notb
movsl
out
das
jo
add
mov
je
or
and
test
inc
out
pop
push
rclb
jne
into
pop
psubd
bound
xor
jl
popf
xor
shlb
loop
imul
add
int3
stos
dec
loope
imul
outsl
jg
in
jp
mov
dec
push
inc
mov
cltd
push
add
sub
jge
lret
push
cmp
sub
je
dec
cmpsl
test
or
fnstcw
sti
int3
out
pop
dec
or
loop
pop
pop
sub
pop
jecxz
sar
xchg
cmp
mov
fs
mov
dec
leave
movsl
cmp
ficomps
stos
call
out
out
adcb
lret
push
aad
dec
jns
shld
xor
jmp
je
inc
add
pop
fisubs
adc
push
cmpl
jo
mov
fimuls
jae
fidivrs
ja
or
mov
shrl
cltd
popa
scas
jne
lahf
shl
jecxz
lret
dec
sahf
loope
nop
subl
cmpsb
pop
cmovo
jge
xor
pushf
add
xor
pop
adc
push
shlb
test
test
pop
push
cs
ds
pop
aas
inc
ffreep
mov
or
int3
dec
mov
jge
std
sub
pusha
lret
push
jo
xchg
rolb
mov
ret
xchg
xchg
addb
popa
mov
jo
inc
xchg
hlt
sub
jns
lods
into
es
jo
mov
lret
popa
int3
jns
or
inc
cmpsl
adc
jle
pop
ds
xchg
push
jne
loop
xlat
xchg
push
mov
mov
mov
jmpw
fisttpl
dec
add
or
cmp
sbb
dec
and
test
push
and
mov
loope
add
jae
inc
sbb
stc
jb
inc
fcmovnb
int
mov
clc
cwtl
fldpi
leave
jb
cmp
inc
push
sahf
out
std
add
mov
and
xor
pop
or
pushf
shll
pop
xorb
jb
mov
jnp
push
sbb
clc
das
loop
and
xor
xor
mov
inc
sub
out
dec
insl
in
mov
in
sbb
popa
fdivrp
pop
leave
push
clc
int
shlb
inc
push
cli
int3
aas
subl
movb
out
push
stos
cli
in
cmp
cmp
mov
fsubrs
cmp
cmp
stos
lahf
dec
push
popa
cmp
int
sub
cmp
ds
outsb
lcall
sbb
rorb
dec
movsb
or
ret
pop
cltd
xchg
xor
enter
sub
jg
cltd
sbb
pop
push
sbb
iret
sbbb
mov
adc
pop
fldcw
push
call
pop
lahf
pop
jbe
pop
hlt
mov
jae
xchg
stos
loopne
lock
push
cltd
ficompl
fwait
orl
xchg
jge
push
adc
cmp
into
mov
mov
flds
mov
mov
xor
push
ja
xchg
ret
mov
loop
lock
adc
cmc
in
push
ficompl
mov
test
ror
rcll
sti
sub
ret
pop
and
and
cwtl
mov
xor
sti
mov
lods
jp
inc
pop
fnstsw
enter
std
jg
in
notl
sbb
xlat
and
jb
pushf
test
cmp
push
stos
xchg
dec
jns
adc
push
push
cmc
and
leave
test
sti
arpl
ljmp
or
iretw
ljmp
dec
dec
jb
orl
movsl
fwait
cmpsb
and
nop
fidivs
cmp
fldt
ds
movsl
fadds
mov
adc
ds
or
arpl
scas
in
mov
sub
addr16
lret
xor
xlat
lock
mov
cmp
adc
dec
ficoms
cmpsl
mov
rcrl
adc
inc
or
test
test
jmp
xchg
adc
inc
adc
xor
cmpsl
pop
lahf
aas
mov
cmpb
out
xor
fistpl
xchg
sti
jo
inc
pop
cmpsb
xor
add
inc
cmp
cltd
mov
loop
imul
in
inc
inc
add
ljmp
ds
mov
shl
or
nop
add
pop
xchg
rcll
addl
push
cmp
jb
cltd
sub
out
jge
int3
cmc
push
cmpsb
xor
xchg
add
inc
add
add
nop
in
pop
dec
pop
movsl
adc
inc
xchg
setp
mov
lock
dec
repnz
ret
or
insl
subl
das
scas
daa
divl
add
and
sbb
push
mov
mov
jns
sub
cmp
lods
mov
xor
repnz
adc
jp
sub
mov
inc
push
insb
hlt
ss
int3
pop
mov
mov
mov
inc
decb
add
mov
lahf
arpl
stos
in
pusha
and
icebp
add
imul
sbb
dec
mov
cld
addr16
and
aam
loopne
cmp
fists
aas
push
or
das
lea
jg
pop
sub
push
popa
stc
ss
jnp
and
loopne
out
sub
jmp
cmp
lods
clc
mov
leave
sub
insl
push
lahf
xor
fldenv
test
jb
mov
push
add
sahf
and
scas
and
testb
cli
sbbb
call
popa
fs
xchg
pop
push
pop
cmp
jge
das
icebp
ss
repnz
aas
sbb
jb
cmp
stos
lds
xchg
ds
sbb
hlt
cmpsl
lods
mov
bound
dec
out
outsb
cmpsb
add
mov
cmovge
loop
test
je
lea
in
stos
addr16
cld
sub
xor
mov
jle
movsl
xchg
mov
xchg
mov
loopne
jle
pop
fcoml
inc
add
mov
jp
mov
xlat
add
pushf
mov
imul
inc
mov
daa
pop
pop
adc
mov
lcall
xlat
xor
jmp
test
pop
stos
add
and
sbb
mov
fsubl
les
and
mov
mov
cli
xchg
mov
out
lock
rcr
xchg
sub
pop
or
or
mov
frstor
mov
pusha
mov
add
stos
adc
pop
lods
xadd
adc
mov
imul
cmp
cs
push
lock
add
push
mov
xchg
cmc
push
lods
mov
cmp
stos
aas
in
daa
sbb
xor
fmuls
cmp
lods
lret
pop
pop
adc
push
pop
mov
pop
icebp
jge
pop
mov
cmp
sbb
dec
dec
test
sti
jle
std
les
rorl
jbe
ret
cmp
jmp
pop
sti
push
repnz
xchg
shlb
jnp
mov
lods
mov
inc
ret
movsl
imul
sti
sub
mov
jp
aas
adc
mov
fdivl
repnz
xchg
shrl
xchg
ret
ds
cli
cmp
fnsave
or
xchg
mov
xchg
sub
sbb
test
or
in
sub
push
mov
arpl
or
jo
cmc
cmc
inc
push
add
adc
cmp
mov
fisttpl
sbb
mov
push
dec
fnstenv
push
mov
jp
movb
mov
cwtl
outsb
mov
jmp
jge
pop
leave
or
stos
aad
or
dec
sbb
and
dec
pop
orl
jmp
inc
and
lods
xchg
lock
push
xchg
mov
aas
jge
adc
enter
mov
lea
inc
add
int
add
mov
je
jmp
dec
mov
std
and
push
lea
cmp
adc
pusha
jg
insb
test
js
xor
clc
in
or
sub
adc
ret
bound
mov
xchg
and
lret
sahf
das
mov
adc
dec
pop
push
xor
pop
arpl
inc
push
add
cmp
mov
push
out
and
data16
cmp
lds
cmp
popa
addr16
push
xchg
and
inc
dec
je
movsl
filds
test
loopne
test
mov
mov
sarb
dec
mov
mov
lea
xchg
jle
jp
cmc
pop
lcall
test
adc
and
mov
sbb
lock
fisttpll
mov
orb
add
and
das
and
aad
movsl
xchg
sbb
dec
mov
push
idivb
push
icebp
dec
xor
imul
test
pop
adc
xchg
lahf
pusha
pop
dec
aaa
outsb
mov
test
imul
sbb
iret
cli
scas
push
int3
ja
dec
dec
sbb
scas
orb
fwait
loop
loope
lods
jge
mov
dec
fs
icebp
ss
daa
test
sub
call
or
adc
jno
xor
mov
dec
pop
adc
adcl
int3
cmp
push
movsb
push
bnd
outsb
and
arpl
jbe
insl
xor
fwait
pop
dec
sbb
mov
and
repz
mov
imul
pusha
push
loope
adc
jge
or
aaa
cwtl
popf
bound
dec
repnz
adc
sub
pop
jle
jno
xor
add
jb
and
or
mov
cmp
push
sub
dec
mov
jns
cld
pop
adc
push
cs
in
fldl
dec
fildl
nop
adc
pusha
addr16
pushl
jno
mov
mov
jae
xchg
lahf
add
sarb
loop
hlt
push
mov
jge
lds
sub
ljmp
xor
pop
ret
jo
fisubrl
mov
rsqrtps
mov
xlat
sbb
out
and
dec
dec
xchg
subl
and
jmp
stos
ret
arpl
aam
rcr
mov
lods
ret
cmp
jg
inc
mov
das
jl
push
andl
scas
bound
pop
lods
xchg
scas
icebp
push
lods
movsb
sbb
xlat
fcomip
pusha
adc
mov
jno
in
js
pop
imul
fidivs
arpl
imull
pushl
call
sbb
scas
mov
push
mov
inc
jmp
adc
fs
leave
sub
in
push
or
insl
mov
imul
jp
inc
push
sahf
jae
mov
sub
jo
lret
clc
addr16
ret
pop
dec
mov
push
mov
cmp
loope
into
inc
mov
stc
hlt
mov
repnz
in
imul
out
adc
std
fcmove
pop
aad
and
xchg
pop
push
fcoms
icebp
jo
jg
das
imul
rolb
loope
icebp
daa
and
dec
insb
mov
das
rcr
std
jb
js
adc
aaa
dec
ds
ficompl
and
xorb
pop
inc
xchg
sub
les
xchg
iret
fmull
outsl
rcl
pop
xorl
dec
sbbb
and
pushf
stos
rorl
outsl
std
cmp
mov
or
mov
cwtl
xchg
xor
flds
dec
call
xchg
pop
push
repz
xlat
and
in
mov
sub
push
das
pop
scas
fbld
jp
lods
cmpsb
rcll
and
mov
dec
in
fldcw
orl
aas
push
inc
gs
cmpsb
adc
scas
sub
movsl
out
jb
pop
js
fcompl
fsubl
push
push
imul
mov
test
xorb
mov
sahf
aad
shlb
xchg
mov
inc
push
push
jge
sub
push
imull
xchg
outsb
jbe
pop
lcall
scas
push
stos
push
imul
mov
popa
lret
shrb
pusha
dec
mov
dec
cltd
ret
loopne
add
enter
adc
int3
and
out
pop
xlat
jnp
dec
pop
cld
xchg
into
inc
inc
add
ret
es
dec
push
push
and
outsb
inc
std
loopne
insl
add
in
pop
leave
sbb
pop
sahf
in
arpl
dec
popf
in
mov
cmp
shlb
je
and
dec
xchg
mov
cmpsl
inc
sub
push
or
xor
inc
mov
jmp
das
jnp
imul
jecxz
jp
pop
out
out
out
push
mov
lret
inc
or
lret
xchg
scas
pop
cwtl
add
sbb
push
mov
pop
cmp
mov
test
outsb
jge
enter
push
mov
in
pusha
mov
jmp
pop
dec
cmp
push
mov
sub
jg
add
pop
push
outsl
fistpl
scas
loopne
mov
es
test
in
add
fldl
add
testb
les
out
stos
fistps
gs
push
mov
es
frstor
pop
push
fstl
loop
andb
and
lds
xchg
das
enter
ficoms
mov
fldl
xchg
dec
daa
push
xchg
imul
cmpl
add
mov
jmp
insb
cmpsl
test
cmpl
inc
xlat
popf
mov
or
xchg
cld
jle
push
je
xchg
or
icebp
data16
cmpsb
or
xchg
loope
nop
negl
rcr
testl
pop
adc
mov
fnstenv
cmpsb
and
pop
inc
xchg
xchg
ljmp
xchg
pop
aam
pop
aas
cwtl
push
xor
cmpsl
lds
outsl
jo
imul
imul
das
mov
mov
filds
sbb
jnp
or
lods
xchg
sub
xor
sahf
daa
or
add
shr
and
and
ss
adc
jp
iret
inc
leave
add
cld
ss
xor
adc
mov
xchg
pop
sbb
xorb
pushf
sbbl
dec
in
mov
nop
divb
mov
sub
pusha
sbb
pop
das
pushf
cmpsb
pop
jns
mov
or
stc
adc
sbb
loope
lods
xchg
sub
xor
jae
xor
mov
imul
push
sahf
adc
sti
mov
mov
or
stc
xchg
sahf
call
cli
jle
test
jmp
popf
add
adc
inc
scas
or
ja
notb
xchg
mov
jmp
sbb
in
sub
popa
jnp
mov
mov
in
adc
clc
xor
bound
xor
pop
xchg
push
lret
bound
and
test
xor
xor
negl
adc
adc
pop
lods
out
out
xchg
lcall
ljmp
jge
ss
jge
outsb
mov
inc
insl
out
push
jmp
inc
ret
add
mov
dec
sub
adc
ljmp
mov
adc
push
sub
inc
adc
and
ss
shl
movsb
hlt
jns
sbb
jge
inc
clc
pop
js
das
rclb
inc
dec
shl
xor
sub
xor
lret
add
outsl
fiadds
mov
mov
ret
dec
xchg
jmp
inc
std
pushf
pop
xchg
push
jp
xor
add
stc
and
jl
sbb
dec
and
push
mov
mov
popf
mov
fcom
loop
data16
loop
stos
stc
bound
jg
test
scas
mov
adc
xchg
faddl
cld
fstl
std
add
mov
scas
adc
dec
push
xchg
call
dec
xchg
repz
icebp
inc
xchg
lcall
call
xor
popa
sbb
cs
nop
outsb
or
icebp
and
je
xor
and
jecxz
mov
jne
add
add
out
inc
jmp
xchg
shll
test
mov
imul
aas
xchg
sbb
dec
push
repnz
out
xor
and
push
cltd
push
fidivrs
in
jl
orl
je
rcrb
and
mov
les
xchg
inc
test
mov
repz
int3
sbb
les
repz
loope
sub
mov
jl
fs
jp
pop
adc
cmp
stos
data16
or
sbb
cmpsl
xorb
enter
cmp
adc
sbb
aad
mov
movsl
pop
mov
inc
push
pusha
xchg
push
push
sbb
fmull
inc
movsb
aad
dec
popa
in
mov
jnp
leave
jbe
mov
rol
xor
jl
ret
mov
das
cltd
dec
mov
call
js
and
mov
cmp
mov
dec
jo
shlb
sub
jl
add
add
jmp
pop
xchg
lret
jge
xlat
mov
or
pop
adcb
in
popf
and
loope
mov
push
pop
mov
lret
sarb
rclb
lds
pop
inc
add
insb
and
fs
fwait
jmp
test
cld
mov
push
or
out
and
jl
stos
arpl
xlat
sub
daa
pop
mov
stos
lret
leave
outsl
leave
out
aam
or
inc
and
or
xchg
push
mov
push
inc
fdivs
fwait
imulb
xchg
push
clc
jge
xchg
leave
adc
sarl
arpl
notl
movsl
mov
lcall
cmp
dec
scas
popf
sti
pop
dec
mov
fdivp
xchg
mov
xor
jl
xorl
adc
push
dec
scas
dec
cmp
jb
inc
sbb
push
call
jg
lock
mov
cwtl
leave
cmp
adc
or
xchg
rol
sbb
or
add
push
in
in
movl
repz
cs
addr16
stc
xlat
mov
hlt
lds
std
arpl
push
mov
xlat
sbb
cmc
mov
add
es
and
dec
mov
sbb
jle
insb
and
mov
pop
pop
push
dec
das
sub
aas
pushf
lcall
lea
jge
aam
out
xchg
cmpsb
data16
xchg
lock
and
and
sbbb
xchg
jmp
inc
xchg
in
aam
out
das
ret
pushf
or
push
outsb
test
and
out
out
sbb
add
and
push
fsubl
mov
divb
xchg
hlt
adc
insb
sbb
push
or
push
sub
or
mov
insl
lahf
xchg
cmp
xor
mov
dec
inc
mov
jnp
push
repz
aaa
sahf
outsl
pop
sahf
jge
cmpsl
icebp
lret
scas
in
cmp
dec
add
enter
add
pop
fisttps
in
cmp
popf
jecxz
xchg
xchg
pcmpeqb
sti
inc
mov
push
and
inc
filds
pop
and
out
lahf
mov
inc
pop
sbb
mov
pop
sub
add
sarb
pushf
mov
cmp
shr
lret
push
sub
sub
pop
popa
add
xchg
fs
mov
pop
cmp
imul
notl
sahf
sbb
loop
xchg
frstor
fsubrl
cmc
xchg
rcrl
push
pop
mov
test
loope
lock
jp
into
lcall
dec
or
in
sub
test
push
cli
bound
fs
pop
cmp
cwtl
leave
ss
pop
push
dec
test
jmp
push
xor
imul
repnz
push
pop
rorl
xchg
push
pop
xchg
out
ss
adc
outsb
xchg
mov
cmc
xchg
fidivl
xor
out
lock
inc
cmpsb
and
das
in
adc
insb
lea
decb
fstpl
sub
ss
xchg
ret
dec
jns
adc
sbb
test
outsb
loope
cltd
pop
xchg
or
jno
imul
data16
mov
scas
mov
mov
movsl
xchg
sub
or
inc
test
outsl
lods
sub
push
mov
sub
sbbl
xchg
push
xlat
movsb
pop
pop
aaa
push
and
xchg
jno
or
roll
int3
or
iret
adc
in
pop
xchg
shlb
ret
push
sbb
pusha
mov
lds
dec
imul
faddl
and
pop
es
adcb
jo
xor
or
jge
and
cmp
bound
outsb
gs
ret
nop
ss
cmp
pushf
in
jmp
mov
mov
test
imul
ja
lcall
or
cmc
arpl
in
test
push
pop
adc
les
xchg
add
add
clc
mov
jb
loopne
add
lds
fcmovnu
imul
jbe
cmp
outsb
pop
sub
inc
std
loop
sub
lods
add
fnsave
scas
sti
push
jmp
push
repz
and
jae
clc
fwait
and
mov
jnp
imul
mov
dec
adcb
jb
faddl
and
ret
stos
push
jp
mov
mov
jmp
adc
pop
mov
add
mull
adc
mov
daa
icebp
imul
jecxz
xor
stos
scas
jl
cld
cli
dec
mov
inc
and
hlt
mov
cmp
clc
dec
ss
cs
xor
int3
loope
dec
mov
and
fisttpl
lock
je
push
mov
fisttpll
sub
add
fbld
loope
call
cmp
test
bound
mov
pushf
push
mov
sub
push
lods
cmp
jb
in
or
pop
lods
push
push
pushf
mov
shlb
ljmp
xchg
scas
cli
xor
hlt
out
lods
or
sarb
btr
in
icebp
pextrw
imul
int
nop
aam
stos
pop
cmp
lret
pop
lahf
lods
std
into
not
and
mov
cwtl
jnp
mov
dec
nop
iret
mov
xchg
movsb
sbb
sub
fidivrl
imul
push
mov
jp
lods
jg
mov
scas
inc
and
ljmp
mov
lcall
inc
inc
test
lret
lods
lock
test
call
mov
jmp
sub
sub
sbbb
mov
adc
adc
ds
pop
xchg
mov
mov
add
xlat
sbb
pop
xchg
push
adc
leave
xor
dec
adc
filds
adc
lds
sbb
jne
mov
push
loope
pop
pop
les
imul
dec
stos
inc
jae
jnp
mov
jge
pop
mov
push
aas
test
jns
add
gs
mov
xlat
push
xchg
xor
push
dec
mov
push
push
push
or
mov
in
fisttpl
aas
lret
xor
jmp
dec
push
out
rcr
jle
cld
push
mov
adc
iret
lds
jecxz
sub
add
les
dec
mov
add
sbb
inc
mov
ja
inc
aad
hlt
xor
nop
cmp
divl
lock
ret
xor
mov
jge
es
sub
jg
xchg
mov
xor
lahf
sbb
pushf
mov
jne
out
push
mov
jmp
adc
cltd
test
push
or
inc
mov
rolb
adc
lea
movsl
movsl
hlt
les
jae
popa
xlat
mov
mov
or
pop
jle
mov
mov
loop
mov
mov
aas
dec
inc
sbb
and
das
pop
pop
jl
inc
sbb
mov
lods
and
sbb
lods
fisubrs
dec
jne
outsl
in
mov
jg
pop
pop
orl
push
jo
int
test
lret
aad
daa
dec
cmp
push
mov
and
stos
sub
cmp
shll
in
sbb
inc
lret
ds
mov
rcll
mov
add
std
mov
xlat
or
ds
xchg
or
mov
sbb
xchg
pushf
dec
jne
test
fdivr
nop
xor
push
lcall
ret
and
fcoms
mov
cmp
es
movsb
mov
js
mov
jnp
sbb
inc
dec
inc
xchg
mov
stos
notb
mov
lcall
das
test
jmp
dec
xor
xchg
fdivs
xchg
aad
lret
mov
push
cmp
cmp
xchg
stos
imul
sub
das
cmp
in
lret
push
pop
pop
mov
mov
xchg
lret
cmp
fcmovnbe
outsl
out
daa
sbb
ret
inc
sub
push
push
or
push
inc
adc
jbe
or
xchg
std
add
cmc
dec
loop
lock
mov
cmp
inc
sbb
sbb
mov
pop
or
dec
inc
addl
mov
adc
sbb
jmp
cltd
pop
cwtl
inc
push
insl
and
pop
stos
push
popf
cs
adc
imul
ret
xlat
push
xor
gs
xor
shrb
sub
mov
call
movsb
push
cmp
aam
stos
add
or
ret
ljmp
outsl
hlt
jnp
mov
aaa
aad
cmp
loopne
js
movsb
incl
shl
hlt
lods
push
enter
push
mov
test
fsubrl
negl
jle
and
int
dec
inc
lret
jmp
xchg
sbb
mov
xor
or
sti
mov
stc
call
xlat
adcl
inc
sbb
stos
adc
sarl
aaa
xchg
fistpll
mov
pop
outsb
mov
pop
stos
jnp
cwtl
xchg
add
and
test
out
enter
leave
test
into
rorb
paddusb
and
sub
data16
jbe
int3
sarl
fldenv
scas
jp
mov
or
mov
ljmp
das
out
fisttps
push
lcall
movsb
mov
fbstp
sub
aaa
fwait
dec
rcrl
lcall
in
and
faddl
aaa
orl
popa
fs
test
dec
test
push
test
out
insb
ret
popa
dec
fcmovb
or
or
daa
sub
dec
int
sbb
ja
ja
in
sbb
push
push
xor
sbb
push
sahf
sub
inc
lods
sbbl
and
jp
lahf
adc
rorl
jecxz
dec
jge
shrb
dec
dec
adc
cwtl
push
sub
adc
shlb
mov
aad
adcl
outsl
popa
pop
test
push
sti
je
xchg
test
adc
nop
inc
punpckhwd
sub
cmpsl
add
cmp
imul
pop
popa
aaa
test
aad
adc
jb
inc
mov
in
lods
repnz
cmpsl
add
jae
pushf
xor
mov
sub
scas
rcll
inc
mov
jo
inc
mov
jp
arpl
add
mov
cmp
sbb
push
and
mov
aam
repnz
sahf
mov
dec
jnp
cmpsl
decl
sbbl
fnsave
fcmovb
mov
loop
roll
xor
sarl
les
call
xlat
mov
pop
sbb
stc
out
mov
xchg
sbb
jb
push
pop
les
dec
xor
push
fdivrs
nop
aad
push
and
addr16
push
inc
mov
add
sbb
add
cs
dec
fucomip
dec
and
inc
add
mov
movsl
dec
mov
stos
dec
mov
popa
dec
insl
push
sbb
sub
in
push
daa
cmc
lea
mov
dec
mov
adc
push
sbb
ja
jne
lods
fldt
lods
or
int3
push
jo
xchg
fimuls
adcb
pop
cmc
mov
loop
fists
add
jae
adc
es
paddusb
or
inc
cwtl
and
mov
inc
ljmp
dec
pop
int
je
dec
add
cltd
push
pop
mov
arpl
pop
push
push
adc
stos
inc
xor
addr16
pop
push
adc
stc
inc
adc
scas
rcll
xchg
loop
pushf
sahf
cmpsb
fcmove
mov
sub
fs
add
nop
and
cwtl
imul
call
dec
dec
outsl
leave
mov
jo
popf
cmp
cmovnp
adc
inc
mov
jg
ficompl
icebp
pop
sti
mov
adc
sub
bound
fcoml
stos
gs
mov
jge
scas
xchg
fimuls
pop
mov
jbe
mov
sbb
rorb
je
outsb
std
xchg
insl
mov
fnstenv
dec
out
jl
add
mov
leave
aas
out
dec
mov
mov
jbe
push
cmpsb
fld
inc
xchg
lods
loop
mov
pop
pushf
aas
lahf
jb
adc
jge
mov
xchg
imull
push
test
imul
cmp
mov
pop
cmpsl
popf
sbb
loop
test
mov
xchg
xchg
jno
sub
sub
daa
fsubrl
cltd
sub
adcb
push
mov
and
outsb
push
push
mov
adc
push
mov
hlt
mov
push
lahf
and
push
loope
jecxz
sarb
or
loope
jnp
fwait
mov
sbbl
jg
or
ja
daa
mov
imull
enter
sub
inc
dec
or
ja
push
stc
insb
push
repz
or
loop
popa
jl
ss
lahf
dec
pop
notb
push
mov
mov
cmp
cmp
outsb
mov
loop
out
mov
sahf
dec
inc
rcl
adc
ja
arpl
pop
and
enter
add
imul
outsl
repz
cmc
push
and
ret
int3
jb
push
jns
mov
testl
loopne
call
out
and
xor
mov
gs
insb
mov
ds
or
xchg
loopne
gs
adc
ja
sub
insb
or
stc
gs
jo
pushf
cmp
xchg
pop
add
mov
or
sbb
mov
cmp
pushf
test
outsb
out
xor
xchg
es
gs
gs
sub
ret
jp
out
arpl
out
js
xchg
inc
fistpll
std
sub
push
or
adc
xor
sub
popa
inc
cmovae
fistps
xchg
test
xor
data16
pop
fcmovnu
push
in
mov
fisttpll
xchg
scas
mov
stc
int
fisubs
dec
mov
cmpl
inc
ss
cmp
dec
sbb
mov
sti
cld
pushf
ficoms
xchg
outsl
aam
mov
mov
sbb
push
push
sub
test
adc
ss
daa
mov
fldenv
stos
mov
jo
add
and
cltd
or
pop
pop
ret
pop
sbb
outsl
iret
test
rcrl
outsb
fnstenv
dec
addr16
sub
mov
imul
pop
inc
jns
dec
mov
or
sbb
inc
enter
out
cmp
setge
mov
add
lock
imul
sub
loopne
xor
pop
push
push
mov
imul
jmp
out
test
sub
xor
es
notb
lahf
inc
movsl
imul
mov
jo
mulb
hlt
stos
cmp
add
in
cmpb
add
adc
xor
mov
and
loopnew
xchg
loop
insb
mov
push
push
sbbl
cs
dec
in
test
mov
xchg
lret
movsl
sub
movsb
outsl
inc
xlat
stc
js
fwait
testb
das
push
iret
sub
int3
xchg
or
push
cmp
lret
sub
lods
xor
mov
fcomip
clc
xlat
into
stos
add
fsts
pop
sahf
sub
sbb
jmp
std
mov
loopne
mov
leave
scas
jle
mov
pop
int
ds
cmp
fbld
stc
lcall
mov
rcrl
mov
pop
ret
jns
add
mov
jmp
pop
cwtl
ja
call
xor
sbb
jne
mov
dec
aas
or
mov
fnstenv
push
insb
orl
or
dec
jbe
bnd
pop
aam
lahf
fstpt
shrl
cmc
ret
fdivrs
and
xor
mov
sbb
in
adc
pop
aaa
adc
pusha
and
sbb
mov
sub
and
and
movsl
cmp
sub
scas
sub
dec
add
and
mov
lcall
mov
push
jno
adc
sub
mov
and
ret
icebp
cwtl
sbb
insb
lcall
aas
sbb
std
or
lds
fcoml
rclb
imul
sbb
jo
lea
inc
pushf
cwtl
xchg
and
sub
push
inc
dec
dec
aam
add
mov
or
mov
inc
shl
or
test
aaa
int3
fisubs
or
xchg
pop
lret
xchg
das
call
jnp
insb
and
dec
sbb
fs
out
xchg
inc
pop
mov
in
xorb
adc
repz
shrl
xchg
xchg
das
and
cwtl
mov
popw
adc
jg
sub
cmp
test
lahf
pusha
jecxz
add
sbbb
mov
les
inc
arpl
lods
sbb
repnz
mov
outsl
jp
mov
push
inc
sbb
popf
and
sbb
xlat
fcoml
pop
lods
pop
sub
xchg
mov
add
cmp
mov
popf
pushf
dec
imul
sti
push
test
fldenv
subl
leave
repnz
out
cmpsl
test
push
lds
js
pop
or
out
push
sbb
negb
mov
data16
mov
outsl
aas
xchg
cs
repz
inc
in
out
push
mov
rolb
jne
adc
sbb
adc
in
in
test
jmp
push
hlt
mov
cmpsb
js
sub
cmp
in
lahf
pop
xor
add
jns
jae
mov
adc
cmp
push
cmpsb
push
jp
mov
sti
das
outsb
popa
adc
repnz
imul
dec
int
push
adc
sbb
push
jmp
in
insl
notl
loop
call
ss
pushl
fsubs
fs
leave
pop
hlt
ds
adc
divb
test
hlt
pop
int3
or
mov
sub
and
nop
push
ja
pop
lret
je
cmpsb
mov
inc
jb
repz
lea
iret
mul
dec
xchg
mov
cwtl
dec
rol
dec
daa
push
jle
aaa
mov
xor
sbb
pop
pop
popf
or
pop
lret
jbe
or
or
jmp
pop
xor
xchg
inc
ror
ja
jb
mov
xor
cmp
add
les
lcall
loopne
mov
push
std
insb
enter
or
xor
jne
add
push
jge
push
lret
push
fucom
mov
out
pop
pusha
jecxz
adc
insb
enter
scas
pop
test
lret
inc
jg
mov
push
ss
jo
jns
dec
and
repnz
ja
lret
pop
stos
dec
cmpb
push
shll
xor
inc
lcall
aaa
inc
inc
inc
push
sahf
sbb
xchg
les
les
jb
rcrl
pop
std
and
inc
lock
cmp
mov
popf
movsb
jl
lcall
movsb
or
enter
jne
jmp
out
int3
jmp
or
cmp
adc
cmp
cmp
cmp
adc
adc
sub
mov
outsl
outsb
rcrb
adc
or
xor
sbb
xor
inc
lret
pop
subb
movsl
inc
mov
push
ret
mov
cmp
mov
sbb
cltd
add
pushf
fistl
add
rorb
test
daa
loope
xchg
sub
mov
mov
ljmp
xorl
sub
adcl
test
or
sub
inc
cmp
sub
jno
cld
lods
xor
sbb
xchg
scas
add
push
shll
sbb
jo
jae
movsl
loopne
xchg
mov
rcrl
jo
pop
xchg
adc
ljmp
inc
mov
pop
fbld
jle
cmpsl
xor
clc
xor
mov
int
pop
inc
insl
mov
roll
xchg
lea
jge
add
jl
shr
imul
ss
or
stos
sbb
test
xor
mov
jge
fsubl
cs
imul
jo
sbb
or
sar
sbbl
xchg
fcomi
push
es
jl
xor
imul
mov
out
ret
cltd
dec
sbb
js,pn
push
sbb
or
inc
insl
pop
pop
push
cmp
mov
enter
sbb
sbb
cwtl
cmpsb
sub
or
imulb
push
jae
rorb
outsb
loope
lods
sti
int3
sub
stos
sbb
fst
push
popa
out
lret
cmc
lods
push
scas
xchg
aad
loop
out
jbe
outsb
orl
or
scas
adc
in
mov
int
jmp
jo
loopne
push
mov
movsl
inc
push
mov
mov
push
aam
shll
pop
push
fwait
jle
and
add
mov
sbb
add
ja
cltd
inc
mov
adc
loop
hlt
and
js
and
sbb
mov
pop
xchg
outsl
mull
cmpsb
sbb
sahf
mov
imul
dec
sbb
out
mov
stc
mull
jmp
dec
pop
in
push
dec
adc
and
int3
addr16
test
lods
add
push
aaa
icebp
std
mov
inc
fmull
lcall
xor
frstor
cld
call
nop
cltd
cld
mov
mov
fldcw
rcrl
rorb
daa
inc
and
mov
sbb
push
pop
cmp
and
fcomip
mov
mov
in
sub
mov
cmpsb
jl
std
dec
inc
dec
jo
xchg
inc
lds
pop
cmpsb
jb
pusha
add
pop
sbb
lods
inc
icebp
push
stc
jns
cs
mov
leave
stos
cmp
pop
cmc
sbbb
sub
mov
sbb
sbb
dec
test
aam
divl
jecxz
test
stc
xor
mov
out
xchg
dec
lcall
fistps
imul
insl
sbb
mov
out
pusha
sbb
fistpll
inc
in
shl
cmpsl
xchg
imul
insb
jbe
sub
jbe
jge
mov
loop
xor
leave
mov
rolb
cmp
dec
xchg
test
jae
jle
pop
jge
add
out
sub
adc
sbb
cmp
inc
xchg
add
je
ret
mov
dec
mov
rclb
mov
loopne
stos
repz
pop
jge
stos
add
and
in
mov
call
mov
ret
imul
arpl
ret
dec
push
add
push
or
js
clc
push
pushf
or
and
cmp
xchg
adc
fists
arpl
xlat
mov
aad
sub
mov
fwait
iret
and
sub
lret
int3
and
out
insl
dec
cmpb
mov
in
sub
mov
cltd
inc
push
subl
adcb
push
aaa
ds
pop
adc
cmp
fisttpll
ja
adc
scas
mov
pop
and
or
dec
adc
sbb
cmp
jmp
and
popa
sbb
xor
inc
pop
inc
inc
mulb
mov
push
pushf
in
mov
popa
stc
mov
shlb
adc
test
sub
adc
mov
dec
popf
pusha
test
dec
ljmp
sub
fildll
mov
int
jg
cld
xchg
cmp
inc
cli
aaa
call
fldt
mov
xchg
fstpl
je
jle
insl
jnp
jb
inc
pusha
mov
and
hlt
push
scas
and
mov
xor
sub
into
outsb
adc
data16
lret
repz
insl
add
sbb
je
or
xchg
loopne
mov
dec
xchg
xor
orl
mov
or
sbb
imul
xor
mov
fdivrl
cmp
adcl
int3
xchg
lock
and
ja
inc
jl
and
lret
out
mov
mov
sub
test
roll
cmpsb
adc
mov
sbb
sbb
inc
jmp
out
jbe
data16
fwait
lods
loope
or
mov
ljmp
mov
and
loopne
mov
lock
push
sbb
dec
cmp
mov
mov
xorl
mov
cmp
jle
cmp
je
lods
xchg
leave
mov
test
push
addr16
ror
add
xchg
push
xchg
jg
xchg
add
int
popl
jge
lds
jnp
mov
adc
mov
push
mov
in
or
xor
mov
sub
cs
xor
mov
mov
xchg
or
xchg
nop
or
xchg
and
xchg
iret
push
push
sbb
jae
or
inc
dec
jmp
xchg
fcoms
ffreep
leave
popa
jecxz
push
and
sahf
mov
insb
mov
mov
cmp
lea
clc
bound
rorb
or
xlat
pushf
jl
mov
ljmp
mov
mov
loopne
push
mov
int
sub
push
in
xchg
and
xchg
fs
ds
xchg
sarb
pop
sti
xchg
lret
ja
sub
aas
sar
cs
push
or
pop
sbb
sbb
rorl
and
outsb
loope
inc
test
aaa
gs
sbb
xchg
lods
jno
imul
dec
pop
or
sub
mov
push
popa
loopne
frstor
stos
outsl
ljmp
insb
inc
adc
cli
cs
movsb
dec
mov
inc
inc
or
test
stc
ljmp
data16
into
lcall
jb
stos
push
inc
testb
shr
xor
sahf
test
lock
pop
mov
movsl
or
insl
xor
scas
sub
fiadds
and
add
cli
sti
push
xchg
push
popa
faddl
push
add
push
lods
push
fadd
cmp
pop
les
cwtl
insl
sbb
adc
push
xor
inc
or
dec
les
mov
sbb
mov
inc
cmp
mov
push
adc
cli
push
mov
ret
sbb
repz
dec
cmp
inc
fbld
xor
arpl
inc
out
jle
cmp
sbb
or
mov
dec
dec
mov
jle
std
testb
xor
stos
cmp
divl
push
jge
mov
cs
push
xchg
jns
jg
sahf
cmp
pushf
or
mov
xchg
sbb
js
and
scas
and
gs
fsts
inc
inc
jno
and
adc
daa
imul
adc
mov
arpl
orl
sub
sbb
xorb
js
les
shl
test
inc
sti
stos
movsl
xchg
add
bound
and
in
or
push
mov
stc
mov
adc
iret
cmp
in
xor
inc
hlt
xchg
add
add
pusha
ja
out
test
jb
push
lods
pop
aas
loopne
enter
enter
xchg
loopne
dec
loop
es
dec
mov
sub
scas
test
xor
outsb
jmp
xor
add
jne
sub
subps
jle
pop
ficomps
cmp
and
std
push
xchg
cli
jecxz
push
bound
mov
pop
sub
ds
mov
mov
imul
jns,pt
add
mov
subb
lcall
jecxz
sub
inc
jnp
mov
sub
pop
sbb
push
jge
mov
jb
adc
sbb
scas
repz
or
sti
rcrl
xchg
mov
int3
outsb
dec
mov
jg
push
jle
pop
jns
mov
xor
or
pop
dec
xchg
shll
push
dec
aaa
xor
icebp
push
mov
inc
or
inc
mov
xlat
pop
popa
jnp
jmp
ljmp
popf
pop
mov
pop
jg
cwtl
pop
lret
jns
jp
xlat
push
addr16
jb
arpl
pop
jp
dec
mov
cmp
fwait
cltd
sahf
lods
adc
scas
xchg
sub
or
jmp
outsb
xor
icebp
andb
jl
mov
dec
mov
inc
inc
insb
out
pop
mov
sub
push
sahf
orb
insl
sbb
cld
pop
call
das
rcrl
divl
pusha
inc
dec
pop
add
sbb
pop
sub
cmp
dec
fistpll
xor
add
jo
orb
je
xchg
daa
xchg
ficomps
inc
inc
jne
mov
fadds
mov
jne
pop
mov
std
sbb
clc
hlt
cli
mov
add
and
jp
jecxz
jl
cltd
pop
leave
pop
inc
fisubrs
cmp
sub
in
lea
shll
and
int
fs
lret
mov
pop
out
push
in
jne
scas
mov
inc
mov
loop
add
stos
out
scas
lret
stc
sbb
pop
add
adc
mov
jl
ljmp
jg
lods
inc
inc
dec
inc
pusha
cmpsb
mov
stos
cmp
inc
xor
fidivrl
lock
aas
xor
adc
mov
sbb
movsb
jl
insl
dec
lea
fs
shll
and
ds
add
ja
fstpl
mov
popw
xchg
ret
or
jmp
fadds
lea
add
lret
push
rcll
cmp
idivl
adc
stos
into
test
notl
cmc
sbb
iret
mov
jb
or
fisubrl
movsl
sti
mov
lock
popa
push
jge
fidivrl
movsl
stc
ljmp
in
cmp
shlb
push
xchg
dec
in
push
pop
mov
ret
ja
cmc
sbb
popf
imul
adc
jo
mov
sbb
xchg
xchg
inc
mov
subl
jp
inc
pop
sahf
xchg
sbb
out
loope
push
cmp
pop
pop
adc
push
or
pop
and
mov
push
mov
push
jns
popf
cmp
out
add
insb
fstpl
mov
dec
dec
inc
les
mov
xor
subl
mov
mov
push
ret
cmp
aas
data16
dec
js
sarl
fucomp
cli
arpl
out
jp
push
popa
jp
add
inc
insb
dec
in
xorb
and
xor
sub
in
mov
sahf
aad
mov
jge
orl
es
mov
add
cmp
stos
pop
fucomp
mov
sub
mov
outsb
mov
test
pop
ret
lods
cmp
push
xchg
xor
popf
or
stc
inc
shrb
xchg
inc
sub
lahf
mov
ret
mov
fists
adc
push
repz
jle
cs
fwait
cltd
push
xchg
and
xchg
iret
mov
mov
sbb
or
sub
xchg
lahf
jne
inc
iret
and
sar
mov
sbb
and
push
sbbl
jg
xor
loope
nop
fcmovb
and
xor
cmp
aam
mov
int
or
pop
mov
pop
test
movsb
mov
and
inc
jg
mov
fisttps
xchg
mov
push
das
cmpsb
negb
pop
xchg
cs
ljmp
add
mov
test
jnp
sahf
xchg
ljmp
pushf
mull
jbe
inc
leave
mov
popa
insl
xchg
push
dec
or
in
cli
nop
sub
dec
jnp
hlt
adc
outsl
cmpsl
in
jmp
jb
lret
inc
repz
int3
lret
pop
xlat
std
cmp
sub
add
int
inc
out
dec
sbb
mov
aaa
pop
pop
jae
fxch
fisttps
mov
ret
int3
inc
jge
test
movsb
xchg
jb
mov
icebp
xrelease
inc
aad
xor
repz
dec
cmc
lret
pushf
std
pop
xor
sysexit
xchg
push
out
loop
lock
in
xlat
sub
mov
xchg
or
inc
movsb
cmp
sbbb
stos
jmp
xchg
mov
in
xchg
in
jbe
or
mov
jmp
adc
inc
xchg
push
pop
or
mov
xor
popf
std
push
roll
test
push
mov
iret
ret
in
pop
in
jl
mov
and
bound
push
addl
or
loope
out
pop
mov
out
out
push
std
or
loopne
xor
test
daa
ja
and
sub
jecxz
add
shll
fcmovu
imul
fcomip
jns
bound
xchg
dec
push
or
sub
mov
jns
pop
jae
dec
sbb
push
ret
outsb
call
movl
jle
sbb
jmp
add
addb
cmp
cs
pop
stos
sub
int3
aaa
int3
inc
cmp
add
in
dec
mov
in
add
inc
sub
mov
rcll
jge
iret
jge
ja
popf
aaa
inc
out
jecxz
xor
ljmp
test
cld
arpl
sbb
cs
in
rcr
out
mov
mov
cmpl
mov
mov
out
jne
insl
aad
jns
lcall
outsl
out
in
loopne
xor
call
and
shll
mov
pop
lret
push
test
roll
jecxz
sbb
inc
jns
out
es
xor
test
ret
dec
xor
mov
repnz
jae
subb
movsl
sub
cmpsl
rolb
jle
shll
sahf
mov
jge
shrl
jl
mov
and
jp
adc
pop
adc
push
push
sbb
sbb
pop
rolb
popf
mov
mov
mov
out
in
test
out
movb
repz
sub
out
push
shrb
add
lret
repz
in
and
inc
add
xor
pop
fiadds
lods
icebp
sbb
sbb
lds
shlb
hlt
nop
mov
fsubrl
hlt
push
jg
mov
or
test
and
jmp
pop
xchg
arpl
out
mov
adc
icebp
xchg
out
adc
adc
pushf
cs
pushf
and
jns
gs
shlb
jae
das
pop
lods
and
or
clc
fdivp
or
push
jbe
scas
jl
notb
mov
inc
mov
fistps
lea
inc
add
lahf
std
push
adc
sbb
scas
dec
mov
or
repz
push
insb
xor
fstpt
sub
dec
cmp
rcl
mov
fstpt
lahf
nop
mov
rcll
in
and
add
dec
adc
das
cmp
mov
add
mov
out
iret
xor
cwtl
mov
repz
xchg
repz
jge
dec
fnsetpm(287
popa
mov
sahf
cs
cmp
aas
cmp
imul
adc
pop
or
test
jnp
ljmp
xor
shll
cmp
arpl
push
cs
jb
and
push
test
push
ds
inc
or
imul
mov
enter
or
dec
rcll
add
fisttps
repz
add
xchg
cli
xchg
cld
xlat
mov
mov
adc
movsl
cmp
stos
int
loopne
aas
and
sbb
pop
pusha
mov
mov
sbb
subb
mov
sti
lcall
pop
sti
sub
lods
lods
adc
je
test
loop
shlb
dec
sbb
dec
std
dec
mov
jo
in
inc
fiaddl
fcomps
push
inc
sahf
scas
icebp
inc
cs
adc
push
fs
push
clc
jge
lahf
inc
test
rcl
fdivrl
imul
call
inc
inc
mov
mov
dec
ja
push
or
mulb
ficompl
push
testb
or
push
pop
shr
popf
add
jle
adc
cmc
and
mov
das
popa
inc
mov
inc
jno
lret
inc
add
jne
add
ss
jl
bnd
mov
adc
fsubrl
mov
jge
mov
aam
dec
icebp
outsl
push
xchg
popf
out
jno
sub
push
andb
fists
jecxz
mov
dec
and
and
mov
add
xchg
clc
inc
jl
ja
mov
jmp
add
int3
mov
lret
pop
hlt
lods
leave
push
inc
loope
fistpl
aad
mov
sub
popa
insb
fsubrl
adc
mov
sarl
push
sub
push
divb
adc
mov
sub
filds
mov
ret
rol
and
jecxz
outsl
cmc
push
insl
dec
rorb
xchg
rolb
out
cmp
push
mov
pop
and
sarb
adc
scas
dec
outsb
fsubs
popa
pop
push
cmp
mov
sbb
xor
cmp
jle
rcr
sub
sbb
aaa
iret
stos
mov
fwait
testl
push
ret
pop
dec
push
inc
lcall
sbb
pop
out
sbb
jmp
insb
lock
sub
fcomi
xchg
xchg
outsb
cli
std
fwait
dec
out
lods
jb
mov
jge
aam
das
inc
mov
adc
out
sbb
adcl
and
test
loopne
lds
fadd
ljmp
mov
and
repnz
cld
cmp
cmp
xchg
sub
movsb
pop
mov
movsl
pop
mov
push
pop
sbbb
int
fs
add
jl
jne
mov
xor
pop
incb
cwtl
xor
inc
jl
pop
cmp
aaa
test
mov
inc
lds
gs
sbb
in
es
mov
repz
sti
rcrb
in
es
sbb
repz
pop
out
stos
sub
les
add
in
insl
xchg
dec
push
jae
push
rcrl
sub
adc
popf
jo
jg
sbb
das
adc
or
mov
sbb
call
movsl
hlt
mov
xor
push
in
sub
mov
fwait
pop
hlt
js
add
jne
es
mov
sub
aad
sub
pop
testl
fstpl
jns
fs
jo
add
loopne
push
mov
jbe
sbb
out
ret
fs
add
stos
push
mov
cld
sbb
rorb
push
clc
nop
loope
cmpsb
xchg
movsb
xor
sbb
int
xchg
aas
lret
movsl
mov
ja
cli
push
fwait
aaa
xlat
jb
rclb
fstpt
mov
sahf
xor
dec
in
inc
pop
xor
dec
add
add
mov
jg
mov
cld
lods
xchg
movsl
rep
cmp
test
inc
enter
xchg
or
lock
js
insl
and
in
dec
cmp
xchg
ss
imul
inc
cmpsl
shrb
iret
mov
xor
loop
stos
jecxz
pop
pop
pop
icebp
div
fisubs
rcll
sub
add
adcl
popf
cmp
pusha
in
stos
mov
fdivr
out
ja
ret
pop
jecxz
mov
mov
clc
inc
aaa
imul
cmp
mov
xor
lock
adc
mov
lds
inc
out
cmp
lods
cmp
sub
mov
mov
push
sbb
jbe
mul
adc
jns
mov
das
jle
inc
mov
push
add
mov
and
xor
out
jge
dec
mov
subl
jne
adc
adc
or
cmpsb
and
or
stc
nop
std
mov
sbb
jae
jo
push
mov
or
scas
pusha
loopne
les
mov
cmpsl
adc
stos
test
test
ljmp
notb
lret
popa
inc
mov
adc
ljmp
xor
add
xor
sbb
repz
xchg
in
mov
sbbl
lods
fsubp
sbb
push
out
jecxz
out
imul
sub
xor
in
xchg
xor
sub
clc
test
lods
pop
das
daa
dec
or
stc
std
mov
lcall
pop
or
imul
cmpsl
xchg
adc
mov
cmp
inc
sti
push
xchg
jg
pusha
mov
or
xchg
xchg
push
cltd
std
and
adc
add
lods
scas
outsb
scas
call
mov
fs
add
pop
mov
fiadds
aam
add
mov
pop
xchg
xchg
loopne
and
aas
lahf
into
mov
jbe
fdivs
jno
roll
ljmp
cmp
icebp
sti
push
pop
mov
and
dec
sub
jne
jne
or
inc
aaa
addr16
dec
out
and
test
scas
test
sub
ss
in
faddl
mov
imul
stc
add
es
mov
pop
icebp
int3
sbb
loope
decb
sbb
adcl
inc
mov
cmp
xor
add
cmpxchg
in
sahf
xor
imul
test
mov
sar
mov
je
or
nop
and
add
pop
inc
and
cmp
push
inc
scas
aad
jl
sbb
fimull
mov
xor
mov
push
cmp
cmp
mov
jmp
mov
cmpsb
push
pushf
inc
mov
in
ret
dec
fisubrl
leave
sbb
xchg
cwtl
repnz
and
ss
push
cmp
ljmp
popw
std
hlt
jge
inc
mov
xchg
dec
pusha
hlt
add
cmp
shrb
push
mov
fs
repz
fbld
adc
enter
and
jno
fdiv
cmp
pop
aam
add
or
mov
push
pop
xchg
shll
faddl
or
enter
ljmp
lods
xchg
jp
unpckhps
test
push
adcl
ficoms
loop
imul
roll
out
xor
sti
jp
arpl
mov
mov
xchg
mov
aad
test
push
xlat
mov
push
in
push
stos
into
loop
and
test
mov
and
sub
cmp
mov
xor
dec
std
or
aam
sbb
sub
pop
push
mov
cld
dec
adc
pop
pop
adc
insl
push
jl
mov
or
aad
test
cli
je
fwait
inc
jb
and
mov
pop
sahf
sti
test
lods
jge
iret
mov
popf
popf
js
scas
lea
add
adc
pusha
xchg
mov
lods
cli
jae
pop
cmp
fisubrl
test
fistpl
jno
cmova
gs
mulb
mov
add
loop
adc
test
push
cli
jg
lds
xor
fidivs
adc
ljmp
mov
neg
popa
mov
pop
fdivl
mov
cmp
pop
test
jne
pop
push
divl
cmp
mov
in
and
dec
aaa
dec
rorb
inc
repnz
fcmovbe
adc
sbb
jnp
sbb
ja
aam
push
stos
mov
xor
icebp
les
loope
sti
stos
fs
dec
mov
int3
in
push
lods
testb
cmpsb
out
leave
sbb
lret
dec
pop
dec
pop
xor
mov
popf
xchg
out
sub
dec
aaa
inc
mov
dec
xchg
sbbb
adc
or
aas
sti
mov
les
pop
mov
insl
mov
sti
stos
fstpt
mov
icebp
pop
or
add
or
inc
sbb
repz
jnp
cli
aam
into
test
cmpsb
scas
and
mov
inc
ja
ljmp
mov
les
adcl
push
xor
popf
push
fidivrl
lock
out
aam
push
das
fcoml
jo
xchg
and
aaa
dec
fwait
ljmp
xor
add
lret
repnz
adc
mov
gs
xchg
inc
int
dec
adc
lock
cmc
and
push
xor
clc
das
imul
lahf
adc
sbb
jne
adc
stc
adc
xchg
mov
adc
rol
shll
or
leave
test
dec
fcmovbe
mov
fwait
jmp
mov
xor
int
mov
fsubrs
hlt
ss
xor
xlat
inc
jle
mov
call
popf
test
sbb
push
pop
sub
push
mov
pop
mov
inc
sahf
adc
enter
adc
and
repz
mov
movsb
inc
js
sbb
push
cmp
stc
xlat
into
add
jecxz
enter
sub
out
cmc
gs
or
call
shrb
movsb
jmp
jne
dec
jae
repnz
jae
mov
addl
mov
cwtl
xor
cmp
ds
cmpsb
iret
out
cs
pop
mov
push
popa
inc
test
es
icebp
mov
out
subb
pusha
sbb
aas
push
xchg
in
push
dec
insb
pop
ret
pusha
aad
insl
add
xor
and
and
loope,pt
and
lds
in
pop
pusha
stos
mov
in
cmp
mov
daa
xorb
std
ljmp
cmp
push
pop
jno
add
cmp
pusha
ret
lods
jge
jns
aas
aaa
pop
inc
outsl
repz
push
adc
jae
testl
mov
xchg
adcl
adc
inc
xchg
push
ret
push
cltd
or
lock
out
enter
push
into
iret
dec
int
scas
in
jbe
mov
scas
lods
mov
out
xor
pop
outsl
xor
sub
ljmp
stos
pop
push
arpl
lret
or
mov
xor
orl
xor
adc
add
loope
sbb
mov
rcll
scas
push
add
add
testl
outsl
mov
dec
push
aam
jnp
sub
inc
or
jb
sbb
js
jmp
xor
jg
jne
sub
xlat
dec
dec
push
lahf
sbb
mov
push
sub
and
inc
sbb
fs
mov
inc
arpl
pop
xchg
mov
push
xchg
les
nop
and
call
pop
aam
sub
fsts
push
xor
lea
movsb
repnz
aaa
std
xor
stos
fs
mov
adc
add
inc
mov
xchg
xor
test
xchg
dec
sar
jecxz
loop
mov
call
cmp
sub
push
cmp
adc
fisubrl
mov
aaa
xchg
pop
in
fimuls
sbb
jbe
cltd
test
jge
mov
imul
cmp
sub
lods
out
and
scas
aaa
and
ss
sbb
inc
pushf
fwait
mov
das
pop
push
movsb
ret
mov
rcrb
out
lea
loope
mov
popa
jnp
lock
xchg
jecxz
insb
cmp
jns
stos
filds
test
push
popf
in
adc
imul
xor
pop
shl
push
test
xor
mov
int
sahf
loop
stos
mov
fbld
test
jns
nop
nop
cmp
test
lods
cmp
jae
jnp
shl
rep
rcrb
xor
pop
mov
mov
dec
ret
repnz
sar
clc
push
dec
inc
mov
push
ss
mov
sbb
cmp
test
mov
jp
push
pop
adc
mov
dec
fwait
je
mov
adc
pop
mov
sub
aad
into
or
pusha
push
and
pop
jne
cs
add
repz
mov
jecxz
cmp
cmp
xchg
movsb
stc
or
nop
lods
rclb
mov
mov
dec
and
ficomps
lea
pushl
cmp
inc
mov
pop
enter
pop
pop
fs
mov
mov
pop
adc
push
scas
popf
inc
and
mov
mov
dec
mov
std
cwtl
shl
subb
push
lret
mov
jp
sub
xchg
hlt
lcall
xor
icebp
fcmovb
lea
jnp
icebp
push
push
aas
loop
dec
out
or
ffree
add
mov
and
repnz
arpl
cld
xchg
xor
cmp
inc
mov
adc
xchg
adc
das
data16
cmp
insb
mov
aas
aaa
dec
push
ja
pusha
subb
aas
cld
cmc
pushf
movsb
out
popa
pop
mov
ret
je
cmp
aaa
in
push
in
test
push
jmp
push
jg
stos
xchg
adc
adc
or
push
aaa
loope
inc
out
fldcw
pop
mov
in
sub
fs
in
test
mov
add
insb
ror
push
out
jnp
mov
ss
mov
roll
test
lock
sub
xchg
add
xchg
xor
sbb
sub
mov
in
mov
mov
and
mov
daa
cmc
movsl
mov
push
ja
or
fdivrs
lahf
cwtl
imul
imul
jnp
cs
aad
push
xlat
insl
ss
adcb
cmovae
pushf
test
cmp
adc
or
out
push
push
mov
sub
mov
nop
lods
xchg
dec
inc
cwtl
or
movl
test
call
in
mov
pop
shr
pop
call
push
test
aaa
vmwrite
addr16
jae
xchg
or
mov
xchg
jno
ds
xor
push
or
or
test
sbb
fisubrl
dec
dec
xor
jecxz
loop
cli
add
inc
fnsave
xchg
lds
xchg
iret
adc
jae
repz
cmp
je
ja
cli
idivl
mov
and
sub
ffreep
and
xchg
mov
iret
mov
jns
ret
or
jmp
xor
mov
std
pop
lock
data16
cmp
mov
test
jno
pop
std
fprem
xor
pop
mov
jl
mov
pop
add
fsubl
and
ja
rclb
dec
xchg
test
sub
or
repnz
jns
aam
das
std
add
lret
out
xor
sbb
pop
call
xchg
insb
or
pop
movsb
gs
testb
xchg
dec
push
inc
jne
shl
xor
add
jle
inc
test
icebp
jae
push
ficompl
add
jp
jle
loop
out
popa
mov
sbb
lea
add
outsb
std
adc
cmpsl
negb
cmpsl
cmp
rorl
sti
and
inc
int
inc
or
dec
test
cmp
and
push
decb
sahf
dec
dec
xchg
sub
xor
and
jnp
jns
jno
cmpb
mov
push
ds
rorb
jns
sbbb
fimull
cmc
das
add
jmp
sti
sub
and
xchg
xor
or
sahf
and
adc
mov
fst
jo
shlb
mov
out
stc
push
lds
pop
mov
lret
andb
inc
rclb
adc
fwait
icebp
pop
fisttps
call
jl
jo
test
je
xchg
sub
ja
jne
sti
mov
add
add
jecxz
mov
add
sbb
shlb
mov
jle
mov
in
jp
fnstsw
sub
jne
jg
mov
jp
cmpsb
nop
mov
rol
adc
push
pop
test
std
push
adc
int
pop
negl
xchg
mov
mov
push
push
mov
setb
push
cmp
jmp
jbe
pop
outsb
in
rcr
imul
xor
sub
scas
out
sub
xchg
scas
pop
sbb
adc
cmp
inc
dec
mov
aas
or
out
push
xchg
cmp
fiadds
les
adc
sub
pop
cs
jge
in
xor
fistps
jnp
loope
jmp
std
out
adc
push
fwait
outsl
outsb
in
pop
sub
push
sbb
outsb
cmp
or
sub
nop
mov
mov
stos
jbe
lahf
push
push
lods
and
push
dec
es
outsl
dec
push
out
push
mov
hlt
sarl
in
add
test
mov
clc
mov
loopne
fpatan
aas
movsl
mov
xor
adc
enter
mov
sbbl
test
jp
outsl
or
jmp
fildl
ja
mov
lods
out
in
jns
outsb
outsl
cmpsl
xor
cmp
sub
adc
in
aad
mov
in
xchg
sbb
mov
mov
divl
gs
ljmp
mov
cmpb
cli
pop
out
mov
loop
push
cmp
loope
shll
fnstenv
iret
movsb
or
stos
cwtl
and
mov
les
cmp
ret
lret
icebp
jge
push
cmp
push
inc
mov
lods
cmpsb
shlb
je
jnp
cmp
xorl
xor
pusha
pop
sti
je
lock
inc
leave
je
jle
loope
pop
and
mov
inc
cmp
or
fldenv
dec
jo
or
dec
shl
xchg
es
dec
fidivs
testl
rclb
lcall
into
int
and
mov
xchg
sub
push
xchg
mov
cmp
out
test
mov
pop
mov
sbb
adc
sbb
cli
cmpsb
pop
popa
xor
xor
test
mov
inc
sub
pop
jp
pop
out
mov
cmpsl
int
mov
jmp
xchg
pushf
in
pcmpeqb
call
fildll
or
test
inc
cmpsb
xchg
imul
and
push
fstl
cmp
int3
jp
mov
imul
push
pop
mov
mull
sub
dec
cmp
data16
stc
pop
xor
jg
dec
mov
push
lcall
cld
into
fwait
inc
movsl
fmulp
xchg
mov
pop
inc
dec
rep
mov
mov
ja
incl
sar
or
repz
fwait
in
cld
data16
popa
cli
mov
cmp
xor
add
lret
cmpsl
rcll
mov
cmp
out
xchg
out
sbb
dec
imul
pop
movsb
push
insb
sbb
pop
in
mov
movl
loopne
dec
ret
out
push
enter
out
push
push
aas
xor
mov
mov
ja
es
andb
or
xchg
dec
stos
push
cmp
and
sub
xchg
sub
sbb
sbb
loopne
jl
orl
mov
mov
js
mov
sbb
mov
rcll
xor
inc
mov
jmp
push
lahf
imul
shrl
mov
ret
mov
ret
std
mov
add
mov
cmpl
sbb
xor
xor
in
insb
aaa
test
orb
cmp
fiadds
lds
sbb
ljmp
push
jb
or
or
pop
sub
call
lds
push
jp
cmc
and
adc
movsb
mov
shr
data16
cmove
jbe
lret
sbb
sub
scas
cli
dec
or
jg
mov
inc
sbbl
xor
lock
test
adc
sti
out
out
data16
jne
push
mov
sbb
aaa
fildl
xchg
fcmove
mov
adc
rcrl
int3
mov
adc
dec
lea
outsl
jmp
inc
and
fsubrl
pop
jle
ds
jg
xchg
pop
in
inc
sbb
inc
or
filds
sbb
divb
data16
cmp
sahf
xchg
adc
aas
or
idivb
mov
clc
adc
std
jg
lock
or
mov
cmpsb
mov
out
cmp
jl
xor
pop
sub
fcomp
xchg
pop
mov
pop
je
mov
pushf
test
mov
sub
mov
cmp
sub
adc
mov
clc
adc
sarb
stc
pop
popl
div
xor
mov
cmpsl
cmp
mov
xor
ret
jle
stos
movsb
fadd
sti
into
pop
dec
fistpl
das
cmp
xchg
inc
mov
dec
loope
fnstsw
dec
push
cmp
sbb
pop
sar
pushl
jp
insb
sahf
pop
pop
jp
sbb
jp
push
xchg
xor
inc
mov
jne
jae
pop
adc
mov
rorb
hlt
mov
jge
fcom
mov
fists
in
adcl
mov
xchg
cmp
je
sbb
call
mov
sub
pop
cs
out
fadds
mov
icebp
jae
pop
mov
ret
and
aas
fs
sub
aas
sarb
int3
enter
pusha
and
fidivl
xor
jae
adc
xlat
sti
stc
jnp
inc
sbb
mov
add
repz
xor
cmp
sbb
insb
insb
add
popa
cmp
iret
in
stos
xlat
in
mov
test
lods
or
inc
jnp
orl
jl
inc
lods
fidivs
cmc
inc
fiadds
dec
sub
stc
add
inc
add
push
leave
fldl
cmc
jnp
popa
sub
mov
stos
cmp
mov
pop
fldenv
xchg
jl
xchg
enter
das
dec
pushl
fnstsw
push
or
arpl
sahf
aas
mov
out
dec
rcrb
icebp
add
bound
jns
roll
inc
mov
loopne
repnz
insb
call
in
movsb
fnstenv
jle
sub
push
es
push
sbb
rol
insb
inc
push
rcrl
daa
xchg
int3
and
cmp
inc
lock
rcl
or
dec
xchg
cmp
push
mov
movsl
push
sbb
or
dec
lock
js
jo
jge
or
je
or
mov
sbb
and
ljmp
aad
shlb
pop
push
sbb
cmp
push
scas
lods
jp
mull
inc
sub
mov
push
imul
dec
sub
test
jg
mov
pop
xor
cmp
cmpsl
push
shll
mov
xchg
cwtl
icebp
sub
mov
or
sub
dec
test
stc
xlat
gs
dec
iret
mov
mov
mov
cmp
jg
out
lock
inc
js
dec
xor
outsl
push
adc
jp
and
adc
sbb
cmpsb
lahf
sub
pop
shll
sti
pusha
adc
push
test
jecxz
incl
clc
addr16
icebp
stos
lods
adc
mov
je
xor
hlt
mov
aad
and
xchg
cltd
pop
pop
xchg
or
adc
xchg
jecxz
mov
push
push
popa
cmp
mov
insb
jne
mov
iret
adc
incl
ds
jbe
shr
cmpsl
inc
leave
movsl
int3
movsl
mov
ss
ficoms
or
xor
jecxz
and
mov
loope
out
dec
stos
inc
adc
popf
jnp
aad
stos
cmpsl
xor
push
xchg
or
fs
cmp
jo
sbb
push
push
cld
cwtl
out
jge
xor
push
dec
pop
mov
sub
stos
lret
scas
sbbb
iret
movsl
repz
stos
hlt
adc
mov
mov
je
leave
adc
nop
cwtl
inc
cvttps2pi
bound
pop
push
outsb
stos
test
xor
aad
es
cmp
insl
gs
mov
leave
fnstenv
shl
pop
imul
mov
mov
adc
cld
lcall
mov
mov
ret
stos
dec
imul
or
clc
out
dec
mov
lea
and
xchg
jns
and
pusha
or
push
js
xchg
inc
movl
je
out
in
repnz
ljmp
xchg
mov
mov
sbb
fistl
push
outsl
push
mov
jb
jl
scas
pop
dec
cmp
mov
cmp
mov
cmp
dec
repnz
loop
pop
mov
test
cmp
pushf
push
add
hlt
push
xchg
shl
cmp
cmp
or
sbb
fwait
mov
lock
cmp
scas
scas
out
jae
test
or
adc
push
jmp
adcl
jns
lods
pushf
xchg
imul
mov
inc
xor
jl
fnstsw
movsl
pop
push
std
pop
and
inc
les
mov
fwait
loope
in
add
into
pop
dec
mov
pop
xchg
iret
inc
or
iret
loopne
insb
xchg
les
dec
mov
insl
xorl
push
mov
ret
or
idivl
dec
pop
cwtl
repz
repz
mov
nop
ret
pop
push
xchg
imulb
push
fnstcw
jmp
dec
sub
loopne
cmc
ficoms
sbb
xor
push
and
pop
popf
mov
xor
bound
fnstcw
jae
sub
lcall
mov
mov
arpl
fwait
inc
shl
push
pop
lahf
sbb
aam
nop
jmp
push
and
bound
dec
icebp
jecxz
js
mov
mov
repnz
jbe
addr16
sbb
fistl
std
xchg
aaa
jmp
pop
hlt
mov
jbe
and
int
inc
gs
fsubrl
testb
popa
sbb
call
xor
imul
inc
pop
in
sahf
inc
add
dec
xor
fs
mov
shl
mov
pop
push
and
outsl
rclb
xchg
aaa
xor
adc
cmpsl
int3
cmp
cmp
mov
or
add
add
sti
je
inc
les
mov
cmp
ljmp
insb
ljmp
mov
dec
movsl
or
es
test
test
mov
sub
imul
rorl
cmp
fistl
test
call
movsb
fisubs
rcl
sbb
shll
push
test
or
mov
into
push
clc
lcall
mov
scas
incb
adc
push
cs
sbb
pop
push
xchg
pop
fists
mov
insl
mov
xchg
mov
mov
notb
xor
push
inc
mov
push
sub
xchg
or
inc
out
mov
sti
pop
jecxz
fldl
inc
bound
mov
rclb
rcll
pop
inc
or
jmp
sub
push
stos
dec
xchg
push
inc
fmul
fstp
test
sbb
lods
add
in
push
pop
mov
sbb
sbb
lods
mov
push
lcall
in
jg
mov
ret
adc
loopne
xor
jno
sub
push
outsl
cmpsb
pop
adc
js
mov
push
push
fdivp
cmp
leave
scas
icebp
push
in
gs
je
pop
or
jmp
cmp
notb
jae
xchg
mov
ret
sub
imul
push
add
pop
jbe
xor
insl
out
pop
add
fcom
adc
sbb
rorb
mov
das
push
lret
pop
mov
pushl
xchg
or
idivb
aas
test
jae
push
xlat
mov
in
xor
push
mov
ss
mov
and
dec
inc
push
and
fstpl
push
enter
xchg
fstp
out
outsb
or
pop
imul
into
ret
or
bound
ss
out
out
pop
cmp
cmpsb
lock
popf
iret
push
fistps
mov
lcall
and
sbb
loope
jg
dec
addr16
mov
inc
inc
inc
insl
push
in
pop
js
divb
inc
mov
hlt
imul
das
lahf
dec
mov
push
mov
lock
sti
pop
stos
dec
sti
cmpsb
push
mov
cmp
loope
or
xor
out
popf
pop
mov
lock
sbbb
cli
fs
pop
leave
and
enter
push
icebp
jmp
scas
mov
jp
add
xchg
pop
dec
jl
and
dec
push
sbb
push
mull
and
mov
xchg
lret
fists
add
ret
jo
add
aas
add
xchg
mov
out
insl
mov
sbb
mov
mov
or
or
push
movsb
sub
inc
cmp
lea
add
les
lahf
hlt
pusha
mov
lret
and
xorb
fsubs
jne
filds
repz
in
popa
inc
sub
cmp
inc
sahf
sub
pusha
mov
ret
jle
and
loop
in
mov
inc
movsl
inc
jne
mov
mov
mov
fisubrl
mov
jle
cmpsb
adc
adc
pop
push
std
mov
out
out
mov
arpl
stos
in
lahf
xchg
aas
add
sub
dec
mov
std
jg
call
lods
xchg
movsl
lea
lret
mov
cltd
aas
jo
push
inc
sbb
cmp
movsb
xlat
aad
scas
mov
popf
cmp
jle
sbb
or
or
inc
xchg
mov
dec
or
mov
jno
pop
test
lods
idivb
call
mov
xchg
cli
sbb
nop
je
mov
sbb
test
xor
xchg
icebp
cmc
insb
inc
data16
shrl
cmp
sub
subb
xchg
fbld
clc
pop
dec
lcall
mov
mov
lock
push
sub
cmp
sub
pushf
fcmovnb
push
lods
xchg
cld
pop
ljmp
pop
lea
dec
mov
sub
or
hlt
push
and
mov
iret
inc
inc
adcl
push
mov
mov
mov
negb
aad
in
idivb
cmp
sbb
hlt
paddd
pushl
push
jle
stos
xor
or
mov
hlt
jnp
cmp
pop
leave
aaa
cli
mov
stc
add
push
jp
jae
in
jp
pop
lock
test
out
mov
mov
addb
lret
cwtl
fsts
enter
les
jo
testb
fimuls
or
mov
mov
sbb
ror
arpl
dec
test
cmp
les
in
jmp
bound
lock
std
je
mov
out
popa
pop
xchg
mov
mov
cmpsl
sub
mov
cld
fstpt
daa
and
out
or
mov
call
adc
jae
inc
jecxz
lods
inc
pop
daa
xchg
das
xor
pop
push
adc
movsl
lock
scas
fcoms
adc
fsubl
out
aam
ljmp
xor
test
loopne
xor
jge
cwtl
push
daa
xchg
mov
push
inc
lcall
cmp
aad
and
in
jno
xchg
jge
push
daa
outsb
xor
jp
inc
icebp
mov
mov
mov
jg
repnz
adc
dec
ds
aad
sarb
mov
pop
push
mov
add
adcb
mov
lods
xor
dec
adc
push
mov
xor
arpl
pop
and
cmp
repz
jmp
jne
and
in
mov
test
out
clc
cs
outsl
push
mov
xchg
sub
test
push
imul
mov
rcrl
mov
imul
xchg
setle
pop
add
mov
cmpsl
mov
mov
mov
nop
add
adc
jmp
push
ss
adc
cltd
mov
pop
mov
push
loope
mov
inc
lret
cltd
xlat
icebp
inc
imul
test
mov
sbb
jge
in
mov
push
xchg
dec
dec
lahf
stc
jns
outsb
outsb
test
pop
mov
inc
mov
mov
popl
dec
or
sub
dec
jge
inc
dec
fcmovne
rorb
push
xor
jmp
push
push
add
xor
mov
mov
adc
je
pop
cli
outsl
push
sbb
movsb
pop
js
or
adc
xlat
jo
clc
jmp
xchg
sub
dec
jnp
push
imul
ror
sbbl
mov
aad
rolb
mov
outsl
push
aas
scas
push
inc
fimuls
mov
mov
mov
sbb
fld
mov
dec
aam
jmp
pop
pop
scas
into
cli
icebp
enter
cmp
lods
lret
xchg
mov
test
push
or
xor
jae
pop
xor
add
dec
xor
out
jno
xchg
pop
jnp
je
fcmove
pop
mov
lret
mov
ds
popf
xchg
les
pop
mov
sub
xor
cli
daa
in
imul
std
testl
imul
int3
clc
push
loope
xchg
loope
mov
sti
pop
xor
mov
xchg
aaa
and
adc
roll
inc
jae
sti
stc
sarl
xchg
aas
je
xchg
lock
inc
push
repnz
xchg
push
push
stos
loope
inc
pusha
xchg
cltd
dec
outsb
lock
mov
jno
ss
sub
sbb
test
stc
inc
mov
xchg
pop
pop
dec
dec
xor
fsubrs
rclb
leave
mov
push
nop
lods
idivl
push
add
sti
cli
push
xorl
mov
fs
outsb
jo
jle
mov
sbb
push
mov
xor
sbb
push
xchg
hlt
dec
mov
adc
out
enter
jbe
test
xor
dec
mov
daa
jb
cld
xlat
fs
in
cmp
mulb
xorl
bound
pop
push
sbb
add
mov
stos
or
rcll
clc
fmull
mov
hlt
mov
js
adc
lods
repnz
xor
lods
and
mov
adc
push
xchg
repnz
adc
iret
mov
or
rorb
mov
sbb
in
sbb
dec
ret
test
cmp
sub
mov
cmp
mov
mov
in
inc
sub
xlat
ljmp
test
cltd
fisubl
sbb
stos
test
xor
adc
loope
push
adc
imul
dec
mov
cmpsb
or
out
xchg
jo
xor
jb
pop
mov
stos
icebp
ret
push
push
push
inc
sbb
jae
or
push
hlt
inc
sub
adc
cmpsb
orb
dec
jo
lret
sub
xor
cmp
pop
xor
cwtl
les
call
subl
int3
daa
or
or
jp
pusha
aad
fwait
ja
push
adc
fidivs
cmp
aam
movsb
push
mov
test
mov
add
ret
subb
arpl
lcall
pop
dec
out
mov
std
cs
pop
cld
repz
lds
movsb
in
pop
ret
mov
or
out
cmp
daa
cmp
jle
jle
pusha
fidivl
mov
mov
pushf
mov
std
cmp
loope
push
pop
addr16
outsl
or
in
add
lret
js
push
pushf
aam
rorl
ret
ss
arpl
subb
loope
data16
sbb
pop
xlat
adc
out
repnz
cs
fisttpll
jle
inc
jnp
xchg
aam
mov
adc
lret
cs
mov
add
jmp
or
or
mov
int3
mov
push
ret
add
pop
loop
imul
lock
pop
add
test
lret
js
into
add
sub
scas
ret
ret
jp
sbb
fildll
mov
lods
aam
mov
inc
xchg
inc
sbb
jnp
fidivrl
mov
rclb
clc
cmc
jmp
or
pop
fsub
sub
fdivrl
insb
sub
cmp
jnp
jecxz
adc
leave
push
cmp
pop
mov
in
jmp
shlb
push
pop
lock
xor
xchg
dec
lret
loop
nop
mov
jno
jmp
cmp
adc
mov
adc
or
xchg
rcrb
subb
ret
mov
push
and
pop
int
adc
fistps
push
cltd
lods
aaa
loope
cmc
jg
out
lds
mov
aas
inc
xor
negb
push
stos
je
aad
mov
inc
sub
pop
js
test
gs
mov
pop
and
loopne
mov
dec
adc
test
cmp
mov
addb
and
incb
mov
gs
inc
cmp
test
pop
adc
mov
repnz
in
cmc
dec
mov
sbb
es
sbb
jne
cmpsb
xor
ret
xchg
fcmovb
leave
adc
add
std
mov
push
outsl
xor
or
orb
fmul
jb
enter
mov
sub
adc
pusha
inc
jmp
xor
aam
and
in
scas
jge
das
jmp
adc
shrb
lret
std
es
push
and
mov
mov
mov
or
cmp
xchg
mov
xchg
mov
adc
fisttpll
lret
jge
add
jnp
mov
dec
pop
repnz
icebp
cmp
std
pop
xchg
sti
mov
popf
push
je
arpl
movsb
scas
insl
or
into
sub
mov
cli
ss
mov
and
pop
fstpl
in
xchg
mov
sub
or
push
lcall
cmpsl
sbb
in
pop
out
and
sub
add
mov
xor
inc
dec
out
inc
subb
in
lret
test
push
scas
lahf
push
adc
movsb
loop
mov
inc
mov
jmp
adc
aaa
xchg
test
cs
dec
and
mov
fwait
mov
push
pop
imul
aad
sti
cmp
dec
inc
add
nop
out
outsl
adc
movsl
shr
add
pop
xor
push
xor
add
loope
aaa
dec
fucomp
jle
pop
add
adc
push
and
es
in
fwait
data16
sti
pop
test
loope
addr16
js
inc
enter
pop
cmpb
and
add
in
shlb
ljmp
inc
stc
and
add
sub
es
inc
faddl
sub
repz
mov
fstpt
push
sub
push
inc
repz
jge
loopne
dec
lret
inc
outsb
mov
xor
inc
ja
ret
mov
push
xchg
decb
mov
lret
subb
lcall
fwait
insb
jl
mov
rcll
adc
mov
aad
jl
fidivl
enter
mov
aam
inc
outsb
insl
sbb
fidivs
sub
mov
daa
shrl
shrl
xchg
mov
xchg
imul
xlat
sub
fs
xchg
mov
out
and
xchg
mov
dec
adc
jl
pop
mov
popa
adc
pusha
iret
dec
std
in
shlb
jno
jle
outsl
mov
scas
or
sub
mov
ljmp
cltd
in
popa
sbb
adc
push
xchg
test
sbb
sbb
mov
lea
cmpsb
enter
push
adc
shrb
xchg
out
mov
fisttps
enter
in
out
loop
rcll
inc
pop
in
out
cltd
cmc
lret
sub
mov
test
sub
jecxz
inc
popa
sbb
jae
js
pop
je
in
call
and
and
pop
dec
cmp
mov
push
cmpsl
cmpsb
ljmp
adc
lods
insb
push
cmp
stos
pop
or
xor
sub
mov
data16
jae
test
cld
jmp
popa
xor
and
dec
adc
sbb
insb
cmc
mov
iret
sub
jge
inc
mov
popf
sub
cli
push
dec
jbe
ret
or
enter
movsl
jle
sub
jecxz
sbb
pusha
sub
xchg
cmpsb
sub
pop
and
data16
fsub
xchg
cmp
gs
adc
in
jmp
dec
sub
add
dec
cwtl
fsts
mov
lock
rolb
or
pushaw
lret
sub
les
pop
lods
les
lcall
mov
popf
push
jo
aam
add
sarl
or
lds
test
out
popf
jmp
add
cld
xchg
or
and
xor
sahf
test
xor
imul
sub
dec
lcall
xchg
idivl
ror
in
mov
and
mull
fs
lret
and
pop
pop
ds
mov
arpl
or
sbb
inc
ljmp
inc
ljmp
fsubs
shlb
and
add
lcall
stos
pop
loop
and
pop
pop
mov
inc
add
push
rolb
mov
mov
cmc
inc
jge
push
test
mov
pop
push
push
pop
inc
in
rcrb
and
cld
cmp
fidivl
adc
lret
subb
adc
and
pop
inc
mov
xchg
mov
daa
leave
ret
push
push
dec
sbb
jle
mov
scas
std
test
cltd
cmpsb
ret
jno
dec
pop
mov
push
push
cwtl
and
nop
pop
pop
pop
movsl
inc
lahf
aaa
or
pop
jnp
or
sub
jecxz
pop
dec
xchg
jp
out
push
cli
loopne
xchg
add
add
cmp
dec
mov
mov
mov
mov
xchg
mov
inc
inc
aaa
push
pusha
test
push
dec
out
loopne
daa
jnp
test
sbbl
aad
sub
jbe
mov
out
xlat
adc
add
mov
pop
pop
loope
mov
mov
xor
int3
das
arpl
xchg
ljmp
xlat
scas
lret
mov
inc
addr16
and
xlat
pop
int3
out
jecxz
push
insl
out
xchg
xchg
fs
mov
in
adc
mov
in
iret
cmp
mov
sbb
icebp
mov
dec
sub
push
stos
and
arpl
mov
xchg
sub
jmp
lret
mov
enter
int
xchg
pushf
push
stos
cmpsb
xor
fs
or
out
daa
out
adc
roll
jbe
mull
mov
inc
test
xor
fildll
dec
aas
inc
test
pop
jmp
dec
cmp
roll
mov
or
sti
mov
and
xchg
jmp
jnp
into
cmpsb
icebp
rorb
pop
test
lock
mov
rorb
and
scas
pop
test
je
sbbl
jbe
push
add
repnz
mov
dec
pop
std
adc
cwtl
cld
out
test
rcrb
data16
cmc
fcomps
sbb
sub
xchg
lret
cltd
xor
adc
xchg
fstcw
inc
test
inc
add
mov
insb
popf
ret
inc
pop
pop
adc
jle
xchg
in
in
std
cwtl
ja
pop
icebp
push
pushf
cwtl
addb
or
or
sahf
mov
xor
insb
fnstenv
push
adc
ja
or
adcb
test
es
aad
iret
pop
ja
mov
hlt
adc
dec
mov
or
mov
icebp
repz
cli
dec
not
mov
les
movsl
mov
lret
jae
jne
sub
mov
shll
sub
inc
aas
js
push
rcl
jne
fstpt
sbbb
lds
sub
fisubrs
adc
adc
pop
jbe
sub
adc
loop
push
cmp
add
daa
ljmp
loop
stos
cmp
cmpsl
and
test
mov
adc
push
std
jmp
lds
lahf
sub
push
push
jge
jo
push
mov
in
in
xchg
adc
loop
enter
cmpsb
iret
fidivl
mov
ret
cmp
cmp
jl
into
cmpsb
sbb
stos
into
fxch
sbb
xchg
stos
mov
sti
nop
lcall
or
out
test
push
mov
ljmp
xchg
add
in
mov
cld
cld
fistpll
mov
dec
sbb
repz
adc
jno
js
movsb
dec
pop
ret
dec
out
lcall
jno
andb
and
les
les
mov
sub
gs
mov
jl
dec
outsl
hlt
cwtl
loope
pusha
sbb
pop
je
sbb
xchg
stos
fwait
pop
mov
or
push
mov
cmp
push
ret
gs
mov
out
sub
sbb
xor
cmp
jo
in
sub
jb
lcall
cmp
fsubrs
or
ret
or
pop
xchg
cltd
dec
sub
scas
loopne
mov
pusha
neg
or
or
xor
int3
ljmp
and
push
cmp
xor
dec
adc
sbb
and
sub
mov
out
cmpsb
jo
aas
jno
shrd
fdecstp
nop
cltd
stc
lahf
es
mov
sbb
lock
mov
mov
xor
out
aad
popf
insb
test
push
pushf
sbb
or
and
shrl
insl
sub
sti
sub
add
lods
add
xchg
movsl
push
jg
cmpsl
adc
add
not
incb
stos
mov
cltd
in
sbb
jg
mov
cltd
insl
outsb
jb
idivl
inc
mov
hlt
mov
xor
xchg
sbb
dec
dec
das
cmpl
outsl
scas
inc
lds
push
mov
or
les
mov
cs
adc
imul
sub
int3
loopne
mov
ja
push
addr16
repnz
xor
sub
mov
push
fbld
jbe
sub
or
hlt
jge
mov
adc
movsl
adc
xchg
push
sbb
inc
push
push
rorb
or
mov
sbb
daa
or
push
gs
lods
sbbl
pusha
push
divb
add
push
pop
mov
mov
add
mov
pop
dec
inc
and
pop
sub
loopne
cmp
push
pop
das
and
adc
xor
mov
xor
aad
adc
cmp
xchg
hlt
sub
fcmove
pop
lcall
inc
lea
into
xor
sbb
adc
push
les
lahf
xchg
out
jne
cmpsb
xor
loop
pop
push
add
shll
out
movsl
push
xchg
test
inc
insb
popa
not
mov
lcall
sbb
sbb
fildll
sbb
jbe
mov
cmpsb
xor
loopne
push
ret
pusha
imul
popf
sbb
xchg
adc
xchg
inc
or
dec
sub
in
push
rcrb
out
xchg
fistpll
inc
ret
fisttpl
push
arpl
or
or
mov
xchg
pop
cmp
pop
xchg
lods
icebp
out
mov
out
es
pop
lret
jns
movsb
xor
shrb
je
and
jo
xchg
ljmp
and
aas
cli
mov
jge
mov
cmpsl
fnclex
dec
data16
mov
jno
mov
mov
test
gs
test
in
fprem1
xchg
mov
adc
xchg
pop
rorb
mov
push
adc
mov
mov
xor
int3
aam
shlb
add
out
andb
sbb
ljmp
inc
mov
in
aad
repz
dec
test
jg
xchg
inc
stos
addr16
jecxz
lret
div
cmp
adc
dec
into
aaa
add
push
outsl
addr16
push
mov
jno
movsb
jp
int
shrl
xchg
xlat
mov
out
mov
cmpsb
jge
in
jmp
pusha
cmpsb
hlt
in
sbb
std
cmpsb
sub
cli
out
dec
bound
sbb
jns
lret
jp
pop
lods
jnp
aad
test
or
adc
push
add
cmp
movl
sbb
inc
and
lret
fsubrl
inc
cmp
add
fidivs
fstpl
jae
xlat
bound
aaa
push
and
insb
int
and
aam
mov
repz
in
aam
xchg
sarl
loope
mov
jbe
and
pop
fmul
mov
test
jns
adc
push
mov
pop
xchg
mov
movsb
stos
pop
pop
dec
sbb
enter
cmp
xchg
or
test
xchg
lahf
sbb
xorb
and
jnp
inc
push
scas
add
or
pop
pop
jge
in
movsb
lret
push
test
mov
inc
fs
push
out
out
cmc
sub
inc
sub
xchg
jg
aad
xlat
push
pop
sub
rol
test
push
jl
mov
test
incb
out
xchg
inc
xor
movsb
inc
push
xchg
aas
xor
jl
fidivs
pop
xchg
push
stos
js
mov
xchg
sahf
and
jmp
cmp
push
jl
neg
scas
dec
js
icebp
mov
jp
stc
push
dec
inc
lret
and
xor
mov
dec
jne
or
in
push
dec
repz
mov
sbb
adc
pop
lret
test
mov
fs
test
leave
sbb
lret
pop
lcall
sti
sub
sub
lods
push
push
adcl
dec
mov
push
adc
mov
pop
dec
pop
lret
push
int
add
call
std
pop
jae
mov
and
xchg
add
dec
jmp
push
rol
pop
fidivrs
inc
xor
add
pushf
mov
and
mov
repnz
outsb
lea
ficompl
mov
imul
xchg
sbb
iret
dec
cmpl
cmp
loope
cs
sarl
xchg
cmp
pop
xchg
xchg
jmp
jge
jmp
jb
test
add
stos
ljmp
clc
in
and
add
inc
pushf
cmp
sub
fnsave
jp
stos
repz
sub
addb
mov
loopne
lock
das
fs
fsub
mov
outsl
je
orl
mov
mov
xchg
lds
mov
cmpsl
xchg
movsb
fldcw
xlat
push
xor
iret
fldenv
cwtl
xchg
lret
push
jnp
ja
add
lods
sub
pop
or
sbbb
lret
inc
fwait
xchg
sub
rolb
mov
pop
aam
cltd
push
pop
dec
mov
cld
mov
cltd
stos
push
lahf
loope
ret
mov
jmp
pop
xchg
scas
mov
dec
inc
mov
push
shll
hlt
mov
sbb
mov
dec
loopne
xchg
lea
push
cmc
subl
mov
or
adc
ljmp
fwait
shlb
loopne
xor
push
subb
andl
outsl
cmpsb
pop
inc
enter
ljmp
rolb
xlat
popf
lcall
cmp
movsb
clc
mov
aam
outsl
xor
adc
sti
and
sbbb
nop
cmp
mov
add
ss
add
loopne
cwtl
xchg
scas
xor
adc
js
xlat
pop
push
jl
lret
mov
add
mov
js
out
sbb
sub
frstor
sarl
mov
xchg
mov
into
xchg
sbb
jnp
scas
cs
ficompl
xor
push
xor
fistl
inc
push
les
ds
mov
movsb
jecxz
jbe
jo
lahf
jg
mov
mov
or
lret
roll
dec
push
dec
sbb
fcmovb
lods
xchg
jnp
rclb
jno
xchg
mul
ja
xor
lods
pushf
and
inc
stc
repz
bound
and
sub
or
mov
pop
mov
inc
inc
lcall
lds
mov
lock
xchg
mov
push
jne
or
inc
cmp
adc
sti
pop
ret
jae
lea
sub
jmp
dec
daa
sbb
push
sti
or
sbb
mov
pop
cmpl
xor
mov
add
inc
clc
push
inc
xor
imull
jl
jnp
lods
jno
arpl
xor
mov
xchg
mov
outsl
sahf
aam
mov
ss
andb
xchg
push
shlb
adc
xor
sbb
into
je
fisubrl
sbb
loop
cltd
xor
test
and
shrl
sbb
mov
and
std
dec
xchg
mov
arpl
in
add
fsts
push
xchg
enter
adc
stc
xor
aas
lret
adc
je
dec
or
ss
imul
fcompl
xchg
cmp
mov
mov
xor
outsb
push
sbb
sub
popa
sbbl
fdiv
mov
pop
sbb
add
fildl
testb
xlat
push
push
aam
cmpsl
cmp
xor
jl
fimuls
mov
scas
popf
mov
jo
fs
mov
stos
mull
into
mov
push
pusha
je
outsb
mov
fildll
xchg
jle
stc
sub
mov
enter
jp
xor
mov
adc
loope
std
jg
mov
lahf
int3
xchg
push
jne
jecxz
clc
insl
mov
xchg
push
mov
inc
mov
shrb
addr16
add
je
jns
bound
adc
sub
lcall
add
data16
movsb
cltd
dec
adc
test
push
inc
mov
mov
shlb
popl
pop
xchg
out
sub
xchg
mov
sbb
hlt
push
xor
stos
or
adc
pop
mov
imul
test
jge
sbb
inc
cmp
cmc
ss
sbb
ret
js
cmp
xchg
mov
mov
add
cmp
call
push
cld
stos
or
xchg
push
or
or
enter
stos
sub
rclb
int3
adc
and
xlat
int3
hlt
mov
leave
inc
and
into
out
sbb
push
sub
aas
fisubl
adc
add
iret
stc
pop
in
adc
pop
aaa
mov
repz
ss
fucomi
insl
sub
mov
mov
imul
lahf
sti
xchg
jg
test
xchg
lcall
dec
sbb
jnp
int
les
xchg
test
lods
arpl
subb
jge
cmpsb
mov
test
dec
mov
dec
es
cmp
jo
jo
icebp
orb
add
sti
clc
push
inc
shrb
dec
and
jecxz
fisubs
xchg
xchg
adc
cmpsb
fwait
xor
jae
adc
mov
cmp
pop
pop
ss
out
mov
jns
in
pop
stos
aam
out
mov
push
pusha
imul
popa
and
push
pop
insb
mov
sbb
rorb
mov
mov
adc
mov
out
ss
push
dec
and
xchg
mov
jno
sbb
lret
icebp
iret
into
pop
mov
xor
inc
enter
jne
mov
gs
enterw
fnstsw
or
inc
mov
push
xchg
pop
std
hlt
jbe
and
jno
stc
inc
sub
sbb
jl
fstl
push
xchg
and
testl
ljmp
mov
add
or
fwait
mov
xchg
les
mov
shll
sub
xor
das
inc
fisubrl
out
xor
je
imul
add
mov
enter
pop
pop
iret
mov
sbb
outsl
mov
sub
insb
enter
popf
pop
xchg
sbb
ret
mov
je
xor
inc
incl
movsb
sub
je
cmc
rorb
fstp
cltd
scas
movsl
fidivrl
out
nop
inc
or
stc
cmc
jge
or
ret
xchg
subl
cmp
adc
xchg
hlt
or
sub
xor
mov
divb
jp
and
lea
xchg
cmpsl
into
xchg
je
dec
inc
popfw
out
jecxz
jge
jle
jns
push
repnz
mov
push
sub
mov
in
in
jmp
fwait
sbb
mov
mov
push
push
test
pop
mov
jge
push
add
lea
adc
and
adc
repnz
out
add
adc
dec
mov
inc
loopne
xchg
or
xlat
lret
subb
sub
gs
adc
lret
std
xchg
cmp
inc
daa
jg
jg
mov
jae
xlat
xchg
adcl
cmp
sbb
pop
jg
orb
mov
daa
jmp
mov
test
mov
fmul
mov
cmp
jno
loope
out
inc
push
pop
popa
int3
mov
data16
rorb
pop
push
fstpt
inc
mov
sahf
movsl
lcall
fwait
xor
sub
cltd
out
sub
clc
xchg
fstpl
xor
cmp
sbb
shl
sub
push
scas
mov
push
sbb
jns
xchg
insb
xor
scas
dec
mov
add
in
enter
jp
jge
pop
aam
xchg
sti
xor
add
push
test
es
iret
mov
ss
lahf
push
cwtl
icebp
mov
daa
ficompl
test
sub
shl
rclb
aad
push
xlat
mov
loope
or
and
push
out
or
sbb
cmp
aad
cmp
mov
xor
push
push
xchg
scas
inc
xchg
scas
push
mov
pop
dec
inc
dec
adc
jne
pusha
push
push
xlat
jecxz
lea
in
popf
out
cmp
test
insb
out
popf
idivb
sub
add
mov
scas
lock
scas
addr16
jmp
or
repnz
aad
cmp
mov
jecxz
xchg
dec
dec
lods
mov
inc
and
mov
sarl
ret
daa
fmull
add
popa
xor
dec
leave
pop
push
es
sub
and
cmc
ss
jns
xchg
mov
jge
mov
aas
jns
movsb
pop
subb
aad
outsl
inc
pop
jns
mov
call
addr16
jb
popa
mov
push
aaa
sub
insl
jae
sbb
stc
out
sub
push
mov
or
icebp
sahf
out
inc
loop
and
add
leave
lahf
fsub
aas
repnz
and
je
sbb
push
mov
jo
idivb
fs
rclb
das
mov
cld
shlb
jle
push
loopne
sub
push
adc
add
or
dec
dec
adc
rcrl
xorl
cltd
mov
vmread
adc
arpl
es
mov
mov
sahf
lods
int
xchg
imul
xchg
xchg
enter
rcl
dec
xchg
adc
arpl
pop
inc
bound
insl
lea
fld
inc
fs
or
call
bound
aad
inc
aam
adc
and
xlat
inc
push
and
push
inc
dec
sub
mov
push
ljmp
sub
into
fnstenv
call
ds
sub
sub
lcall
fs
jmp
sti
nop
jmp
inc
xchg
dec
call
addl
dec
pop
or
ret
add
enter
jge
xchg
cmpsb
repnz
add
lea
xor
test
in
out
xor
lret
and
sbb
mov
insl
mov
xchg
aas
cmp
dec
adcl
push
mov
push
dec
sahf
xor
je
movsb
push
mov
inc
mov
rcr
jb
aaa
jnp
scas
inc
test
xor
mov
cmp
push
lahf
mov
jnp
loope
outsl
mov
insl
xor
mov
adc
leave
sbb
scas
lock
dec
mov
test
xchg
cmp
add
lahf
jno
lret
stos
pop
push
mov
xchg
push
lahf
mov
ss
rolb
data16
mov
mov
aaa
adc
xor
jne
add
sti
pop
arpl
push
ss
pop
push
in
mov
xor
xor
inc
jp
std
mov
mov
lret
inc
inc
mov
das
fnsave
push
lcall
insb
fnstenv
pop
adc
shrl
xlat
mov
imul
cld
ja
xorl
pusha
jae
jmp
mov
sbb
arpl
outsb
lret
xchg
or
movsb
adc
dec
adc
inc
pushf
pandn
jbe
add
fs
int3
out
test
das
pop
shll
inc
mov
repz
cmpsl
inc
lds
and
jle
fwait
inc
scas
mov
hlt
inc
or
add
push
jg
pop
popa
jnp
ret
sub
sbb
fs
mov
std
rclb
or
or
rorb
inc
inc
push
fwait
mov
inc
fdivl
xchg
sbb
jae
mov
cmp
add
cmp
test
repz
or
fwait
out
js
pop
cmp
or
jnp
loop
and
loop
stos
pop
repz
and
mov
xchg
inc
sub
fucomip
cmp
sbb
or
add
push
scas
lods
dec
push
lcall
stc
shlb
shll
push
negl
xor
cwtl
lea
out
or
repnz
push
jl
mov
add
push
mov
adc
xchg
rclb
js
imul
or
mov
sbbl
mov
filds
jle
stos
leave
ljmp
es
xchg
xorl
fldenv
or
or
aam
bound
xlat
xchg
sbb
fsubrl
mov
push
popa
repz
int
pushl
arpl
mov
or
cmp
in
cmc
mov
push
mov
addl
lahf
cmpsl
and
mov
xor
rcr
mov
test
jl
dec
loope
sbb
and
pop
pop
pop
shrl
pop
ficoml
loope
sub
push
jl
add
inc
in
adc
inc
or
push
pop
push
inc
rorb
inc
sbb
mov
sbb
out
add
adc
cs
or
test
iret
or
jns
adc
inc
and
adcl
mov
fidivs
mov
lret
xchg
inc
sbb
hlt
cld
dec
cmp
inc
incb
ret
mov
xchg
loope
imull
in
jbe
adc
mov
addr16
mov
ret
mov
insb
ss
fstl
ficompl
popa
mov
inc
inc
and
mov
mov
loop
inc
pop
dec
addr16
aam
sti
add
xchg
cmpsb
cmp
int3
jmp
push
sbb
mov
or
dec
pop
cmp
fstps
pop
rcrb
sbb
mov
inc
sbb
aad
push
shll
cli
xchg
lahf
xchg
movntps
ficoms
mov
fcmove
pop
movnti
xchg
jo
les
incb
mov
rcl
mov
daa
sub
xor
mov
cmp
jle
mov
movsb
les
loop
adc
shr
mov
arpl
out
test
jno
add
cwtl
push
test
sti
push
mov
loop
xlat
mov
lahf
aas
cmp
push
movsb
jb
sub
lds
xchg
fs
push
jmp
push
ljmp
xchg
ret
sbb
ljmp
mov
mov
mov
fs
insl
movsl
dec
jle
inc
mov
and
or
jmp
or
or
push
mov
insb
mov
jg
mov
mov
add
or
leave
and
lds
add
jae
cmp
push
push
inc
push
scas
dec
inc
ss
pop
xchg
inc
popa
mov
popa
dec
das
int3
push
and
inc
mov
fucom
mov
push
sub
lret
rol
dec
inc
xlat
push
test
dec
repz
arpl
call
gs
push
int
mov
shld
jae
jne
enter
insb
shrb
cmp
add
jbe
inc
pop
mov
mov
mov
push
stos
mov
xor
mov
push
sbb
cmp
mov
mov
adc
imul
xchg
aaa
iret
fsub
ret
cmc
aad
xchg
dec
xchg
mov
cltd
inc
push
sbb
out
loop
fcompl
mov
inc
mov
out
or
cmp
ret
cs
ret
mov
fistl
add
insl
nop
sbb
push
es
jo
or
out
les
lahf
cmp
xchg
cli
les
adc
push
test
push
test
std
push
mov
ficomps
mov
aad
jmp
cld
pop
pop
mov
cmp
sbb
aad
mov
cmp
jg
dec
mov
jns
shl
sbb
in
ret
fs
xchg
fiadds
test
inc
out
and
ret
jbe
sub
or
push
iret
int
inc
xor
fsts
fwait
sub
cmp
and
pushf
les
ret
imul
push
addr16
jmp
push
repnz
testb
mov
xchg
ret
arpl
or
mov
enter
ljmp
cltd
xor
repz
dec
xchg
fcoml
pusha
mov
sti
out
jmp
xor
dec
cli
adc
push
sub
in
bnd
mov
bound
jae
jl
jmp
push
xor
es
adcl
add
and
or
push
movsl
adc
into
lods
mov
insb
cmc
xor
test
sub
xlat
fisubrs
ss
cmp
sbb
ja
sbb
add
repz
mov
dec
xchg
rorb
sub
pop
inc
add
inc
jno
push
out
pushl
rcll
adc
dec
std
add
das
mov
pop
add
or
lods
call
inc
mov
hlt
arpl
adc
jmp
lea
jmp
mov
pop
lret
js,pt
rcrl
add
imul
add
cmpsl
inc
icebp
xor
pop
ret
shll
fwait
addr16
or
inc
mov
ljmp
adc
pop
sbb
inc
xchg
sbb
imul
pop
and
push
hlt
xor
in
push
jge
cs
cwtl
out
mov
in
cmp
inc
lods
sub
andl
inc
pop
and
push
test
inc
insl
push
dec
add
loop
fildll
jne
iret
adc
dec
mov
into
sbb
jbe
inc
stc
pop
and
bound
pop
xchg
frstor
imul
jne
inc
in
popf
jns
imul
bound
cld
add
mov
lock
pop
notl
and
iret
mov
or
out
jecxz
add
xchg
push
aas
jmp
cmp
das
popa
jne
insl
dec
stos
adc
adc
insb
out
mov
sbb
jle
sub
mov
cmp
das
stos
pusha
inc
gs
inc
scas
in
adc
lods
es
psubusb
lods
imulb
or
push
shrl
popa
lret
mov
xor
loopne
jge
mov
xchg
addl
adc
adc
aas
insb
sti
fwait
and
call
fiaddl
fidivrl
adc
pop
pop
mul
dec
iret
je
mov
or
mov
pop
fisttpll
mov
cmp
fdiv
xor
mov
out
and
popa
dec
jne
mov
aaa
subb
dec
jbe
idivl
test
ds
jg
cwtl
loop
pop
call
sbb
test
inc
mov
and
cmp
add
cmpsb
push
jne
mov
xchg
jp
call
fcoml
xchg
mov
jns
sub
dec
mov
dec
mov
ret
mov
aaa
cmp
mov
movsb
in
fisttps
mov
pop
add
cmpsb
pop
dec
lock
popf
mov
inc
js
lcall
negb
iret
out
pop
sbb
ret
and
push
push
add
pusha
pop
dec
jno
or
pop
inc
jmp
sahf
jno
jno
movsb
ret
jb
pop
xor
jnp
add
fists
gs
jge
xor
sub
jmp
cmpsb
adc
xlat
leave
movsl
inc
repnz
dec
pushf
pop
test
dec
mov
in
mov
adc
lods
mov
xchg
dec
mov
mov
mov
in
pop
in
mov
mov
pop
push
std
or
cld
sbb
or
scas
push
add
ljmp
jae,pn
xor
aad
shr
jg
xlat
stos
push
and
jle
inc
xchg
mov
push
mov
pop
xchg
jecxz
out
jecxz
daa
cmp
rolb
xchg
sti
add
xor
leave
cli
inc
aas
stc
mov
pop
in
push
dec
cmpsb
add
pcmpeqd
rcrl
shrl
movsl
popf
xchg
xor
jecxz
cmp
and
lahf
hlt
mov
ljmp
or
xor
stc
push
pusha
scas
test
loope
push
push
jb
sub
pop
jbe
stos
sbb
je
xor
jae
sbb
sbb
andl
scas
push
iret
xor
mov
or
mov
lea
push
jbe
jbe
dec
xchg
outsl
je
pop
out
sbb
xor
pop
cli
lods
xchg
dec
push
cmp
pushf
aas
stc
cmp
mov
insb
dec
sbb
mov
pop
add
lods
xchg
mov
add
stos
xor
movsb
add
mov
pushl
outsl
xchg
stc
jbe
sbb
xchg
shrb
rcrb
push
push
jmp
in
fdivrl
lret
cmpb
pop
jge
dec
xchg
jae
lret
mov
xrelease
shll
fildl
loope
xlat
call
pop
xchg
into
and
stos
cmp
sub
rcrl
sti
test
nop
shr
js
cld
cld
pop
xchg
fimuls
mov
cmpsb
fneni(8087
pop
popa
adc
out
fsts
negb
into
mov
pop
arpl
shrl
mov
mov
adc
ss
jmp
push
inc
jge
pop
cmp
adc
xlat
ss
cmp
mov
arpl
pop
ret
sbb
test
mov
jb
inc
sub
das
or
test
mov
popf
pop
test
pop
add
rol
mov
adc
jmp
mov
add
sbb
mov
jecxz
and
mov
adc
jb
add
addr16
mov
fwait
lods
mov
shll
mov
outsl
cmp
dec
sub
jge
add
mov
xor
ljmp
or
lcall
leave
xchg
add
mov
sbb
aam
inc
hlt
fidivs
mov
iret
pop
cmp
in
pop
mov
sbb
inc
cmp
sub
lods
jge
fbld
inc
pop
cs
push
popa
aam
jnp
cmp
cld
popa
push
push
outsb
js
or
outsb
sub
or
icebp
clc
jne
lds
push
sub
mov
adc
int3
push
xor
push
pop
stos
add
bound
mov
daa
push
fdivrl
inc
jo
movsl
scas
sub
xor
pop
pop
leave
insl
loope
dec
jle
shll
inc
xchg
and
push
pop
or
rcrl
sbb
adc
lods
idiv
cltd
rcrb
add
pop
mov
push
shlb
fsubrl
popw
adc
cmc
mov
loopne
test
mov
ficoml
faddl
mov
cmp
jnp
shr
cltd
inc
std
mulb
inc
pop
imul
xchg
jecxz
and
lods
adc
xchg
jecxz
sub
dec
es
sbb
repnz
ud2
and
mov
cwtl
insl
xor
inc
dec
repnz
aad
mov
jbe
inc
scas
sahf
cwtl
movsl
mov
stos
mov
addr16
inc
mov
out
hlt
xchg
cmpsb
mov
push
cmpsb
daa
jnp
or
out
mov
fbstp
shrb
fsubrs
inc
jns
cmp
sbb
jg
jl
loopne
imul
stc
adc
inc
add
out
imul
hlt
in
hlt
jae
jle
dec
int3
adc
mov
imul
cmpl
cmpb
sbb
cmp
or
data16
sub
or
xor
mov
lahf
daa
push
loope
mov
jns
dec
movsb
dec
cmp
lods
loopne
dec
add
aas
inc
movsb
movsl
nop
jbe
xchg
xor
out
movsb
pop
scas
fwait
cmp
js
in
add
push
cwtl
jl
faddl
sub
pop
cld
test
add
cltd
adc
jecxz
mov
pop
inc
ljmp
or
pop
push
ljmp
rclb
add
xchg
lea
pop
inc
scas
scas
pop
in
xor
in
stos
xchg
fucomp
sub
lcall
js
sbb
out
sarl
enter
mov
movsb
mov
int
xor
adc
in
mov
adc
cmp
mov
mov
mov
insl
mov
loopne
add
dec
scas
jle
push
out
fld
xchg
pushf
lds
frstor
loop
mov
push
dec
jmp
mov
sahf
imul
dec
push
sbb
push
push
mov
xchg
jle
push
fucomp
icebp
jp
cmp
dec
or
sub
xor
dec
inc
mov
pop
test
fwait
xchg
xlat
sub
idivl
pop
repz
and
jne
call
and
xor
add
nop
xchg
adc
mov
mov
fisttps
jns
insb
push
add
adc
and
aad
sub
aad
lods
inc
adc
add
pop
xor
cmp
shlb
cltd
shrb
sub
dec
out
das
imul
mov
sti
clc
fisubrs
popa
arpl
jo
inc
or
movsl
imul
inc
pop
lret
jge
dec
lret
add
enter
in
adc
xor
sbb
mov
xor
inc
das
fimuls
cmc
xchg
jp
cmpsl
in
lret
and
sahf
hlt
movsl
push
adc
dec
fsts
cmp
pop
mov
sub
push
jbe
ja
rcl
lret
jmp
mov
xor
lds
cmp
repnz
xchg
jl
je
cli
inc
in
out
fwait
sub
ss
inc
mov
lds
dec
inc
mov
lods
push
sbb
mov
sbb
popf
filds
lea
jb
outsl
add
js
rorb
sub
or
mov
cmpsb
lods
jge
jle
sub
cmp
lcall
nop
nop
dec
jb
xchg
cs
sti
nop
shll
jge
shl
lcall
pop
out
and
mov
fdivl
sbb
pushf
jecxz
inc
mov
mov
dec
imul
mov
leave
dec
xor
dec
cmp
xchg
xchg
sub
aaa
and
dec
shll
xchg
mov
sbb
pop
push
mov
fwait
call
sub
push
dec
inc
js
test
jmp
sarl
mov
pop
lret
out
xor
pop
mov
addr16
sub
and
movsl
xchg
js
jno
jb
mov
lahf
cltd
popa
and
sarl
cmc
scas
and
mov
cs
movsb
adc
or
andb
sbb
lods
in
aam
jge
nop
add
and
or
int3
lret
loop
ss
push
daa
repz
jle
sub
pop
sti
adc
mov
in
ror
push
lods
dec
fidivs
cmp
mov
imul
xor
push
push
dec
sbb
mov
inc
mov
jmp
or
cmpsb
imul
adc
movsl
xchg
shr
call
iret
push
cltd
or
daa
mov
aas
ret
mov
loop
mov
adc
or
out
inc
push
lods
out
mov
ss
cs
jns
cmp
pop
mov
jp
movsb
push
add
int3
push
jo
and
popf
or
adc
cwtl
pop
and
js
pop
adc
add
mov
xor
fwait
xor
xor
and
xor
dec
xor
jecxz
jbe
inc
mov
cmp
stos
push
pushf
cmp
push
jo
xorb
cltd
mov
xor
ja
pop
mov
imul
jp
cmpsb
mov
dec
fstpl
ret
inc
mov
aas
dec
or
mov
sti
loop
add
filds
and
movsb
arpl
mov
xor
into
lods
jg
cltd
jnp
pop
mov
ja
push
loop
pop
xchg
outsl
xchg
jnp
idiv
jbe
call
mov
adc
mov
sbb
or
lret
imul
mov
mov
fldenv
pop
lods
shll
int
clc
ret
imulb
fldl
das
bound
call
mov
sahf
cli
or
dec
dec
cmpsl
repz
clc
data16
sub
lock
fisttpl
mov
into
sti
dec
push
xchg
jbe
movsb
addl
call
les
push
aad
fimuls
push
stc
jle
stos
decl
xor
sub
sti
outsl
icebp
sub
jl
pop
inc
cld
adc
and
jb
jns
sub
adc
or
xchg
push
push
dec
mov
ja
sub
push
adc
out
xor
les
pop
mov
popf
cs
pop
in
pop
xlat
xor
cmp
jne
sbb
pop
mov
test
test
mov
ja
test
rorb
mov
pop
test
xchg
fwait
lods
roll
dec
fsubl
dec
mov
inc
sub
mov
lock
push
sub
sbb
xchg
push
xor
pusha
pop
inc
shll
lea
insl
cmp
mov
xchg
dec
xor
insb
sti
push
loope
jae
pop
repnz
cltd
cmp
pusha
push
jge
dec
inc
lahf
mov
add
push
cmp
sbb
mov
dec
imul
aam
sbb
add
sub
sbb
clc
pop
ljmp
add
fdivs
dec
fcmove
test
sub
push
pushf
add
dec
sti
iret
pop
dec
cmp
cmp
dec
cmp
jg
imul
mov
jae
cmp
hlt
add
loope
repnz
mov
popl
inc
iret
popf
push
xor
das
add
mov
daa
out
fiadds
pop
adc
pop
pop
ljmp
cmpsl
out
cwtl
mov
jae
ficompl
xor
aad
adc
inc
push
ja
daa
shll
add
jl
fwait
and
lcall
addb
movsl
fdivrs
adc
cmp
adc
popf
cmp
xor
push
xchg
mov
outsl
push
into
leave
out
push
xchg
mov
int3
sub
jns
adc
cltd
imul
mov
mov
push
jl
pop
in
mov
xchg
inc
sbb
add
or
mov
and
sub
nop
scas
inc
or
pop
shll
push
push
cmc
adc
popf
sbb
xchg
mov
push
push
dec
aaa
movsl
out
sbb
mov
xor
mov
out
sar
std
pop
dec
xchg
inc
cmpsb
mov
or
cmpsb
mov
iret
push
jne
cli
mov
jno
int
sbb
dec
popf
mov
stos
and
push
add
or
std
popa
iret
std
std
loopne
xor
mov
adc
movl
inc
jge
push
aaa
cld
pop
cmp
mov
jno
adc
cmp
mov
push
sbb
xor
adc
shrl
and
aam
adc
xchg
imul
fs
sti
sti
xchg
repz
cmp
xchg
xchg
out
shrb
xchg
mov
inc
hlt
add
lret
and
inc
das
icebp
jmp
popf
in
add
cmp
mov
pop
mov
dec
pop
fldenv
dec
and
ds
pop
xor
cwtl
jl
mov
js,pn
rolb
pop
sti
inc
js
aaa
fsubp
bound
cmp
xor
jmp
inc
jnp
faddp
sub
rcrb
scas
mov
cld
sub
insb
incl
jb
push
cmpsl
xor
pop
out
jmp
mov
lcall
fcmovb
mov
pushf
lods
mov
push
in
shlb
mov
jmp
mov
pop
adc
adc
lods
dec
mov
fidivrl
mov
xchg
fcoml
add
jg
int
mov
push
es
repnz
data16
popf
movl
mov
cltd
scas
les
mov
ljmp
push
mov
jecxz
mov
mov
push
loopne
dec
inc
pop
cs
jl
mov
sub
nop
clc
fwait
mov
lret
fcmove
sbb
sbb
lcall
push
mov
pop
jno
into
clc
lods
cli
xchg
mov
cmc
xchg
cld
mov
fbstp
sbb
adc
mov
jb
jle
and
addr16
xchg
dec
inc
sbb
jl
inc
jb
mov
jmp
arpl
popa
insb
inc
jns
jns
sahf
es
jae
xchg
pop
into
inc
lcall
cli
popf
dec
cmpsb
loopne
out
das
test
roll
jne
orl
test
loope
fildll
mov
adc
jecxz
lock
popa
stos
jo
mov
push
jns
loopne
rolb
hlt
int
icebp
fwait
sbb
icebp
sub
sbb
xchg
jb
shlb
or
cld
sti
fimuls
mov
cmp
push
stos
mov
out
ret
addr16
mov
mov
shrl
mov
jne
outsl
mov
inc
negl
outsl
mov
enter
fsubr
data16
sbb
push
cmpsb
or
mov
shlb
in
adc
daa
jb
lret
inc
xchg
movsb
jp
fmuls
or
push
lods
aas
leave
scas
std
and
xchg
sub
aam
sbb
mov
xchg
dec
lds
inc
ret
les
cmp
stc
add
popa
adc
sbb
in
stos
jg
stc
mov
push
pop
fstl
bound
rol
pop
mov
xchg
sbb
pop
les
sub
call
dec
in
sub
mov
inc
mov
xchg
cli
xchg
loope
ret
icebp
pusha
pop
mov
inc
movsb
je
cltd
and
roll
enter
mov
dec
aad
rorb
inc
xchg
and
fisubl
testl
inc
lds
test
pusha
cmpsb
lret
out
pop
push
add
hlt
xor
xchg
dec
and
sbb
sub
pop
inc
mov
jae
das
inc
icebp
cmpl
jecxz
mov
aad
xchg
dec
ucomiss
aad
mov
mov
mov
lret
les
rsqrtps
pushl
and
cmp
pop
dec
cmp
ss
movsb
adc
push
fldt
sbb
dec
lds
into
and
adc
or
nop
push
sbb
push
xor
test
inc
jg
rorl
ret
mov
inc
or
jne
cmp
or
mov
xor
sbb
fisttps
hlt
pop
mov
cltd
lds
lds
inc
scas
out
arpl
add
test
movsl
jmp
add
xor
dec
scas
popf
lock
mov
movsl
in
imul
loop
jp
test
aaa
push
imul
lcall
out
jnp
insb
mov
sbb
into
ret
sbb
xchg
testl
push
mov
rcll
cwtl
aad
idivl
push
cmpsl
test
sldt
jnp
sbb
push
and
int
add
sbb
pop
sbb
adc
pop
xchg
sbb
xchg
lods
mov
popf
jno
add
xchg
xor
gs
sub
xor
lds
mov
sahf
cmp
pushf
mov
loopne
jg
sub
push
popa
outsb
dec
mov
sarl
sahf
loope
mov
test
and
mov
fbstp
inc
pushl
fldenv
adc
insb
call
push
scas
imul
mov
sub
pop
sub
mov
pop
jge
inc
out
shll
fwait
out
test
cs
ljmp
and
fnstsw
pop
es
and
popa
mov
fcomps
scas
aas
fwait
lods
popa
addl
mov
push
repnz
mov
xorl
pusha
mov
scas
push
and
dec
lea
inc
mov
xchg
dec
int
int
lea
pop
out
cs
call
cmp
and
test
fsts
cmpsl
pop
jle
movsb
fisttpll
gs
xor
sti
xor
ret
test
icebp
sub
mov
push
rolb
mov
adc
cltd
dec
cwtl
adc
cli
mov
std
scas
lahf
jle
mov
loopne
loopne
mov
or
ret
insl
jecxz
mov
cmp
pop
mov
popf
ror
pop
fcomps
int
lock
movsb
fldcw
enter
sbb
push
sbb
rcrb
out
dec
sbb
xor
inc
jp
icebp
fadds
sub
hlt
dec
js
and
add
ret
scas
push
push
cld
cmpsb
cltd
inc
in
sbb
jb
cli
in
mov
fidivs
iret
mov
xchg
cmpsl
mov
repnz
cmp
jmp
jbe
fs
push
cmp
nop
ret
ljmp
or
out
negl
inc
xchg
addw
mov
or
mov
pop
movsl
repnz
pop
lret
xchg
sbb
testl
adc
and
imul
push
pusha
sub
xchg
pop
cld
ja
xchg
arpl
popl
add
jp
push
cmp
cmc
push
aad
daa
jb
sbb
push
roll
std
popa
push
arpl
int
aas
lods
pop
adc
adcb
adc
cwtl
cmp
or
pop
push
mulb
fildl
addr16
sub
cmpsl
jge
xchg
scas
jns
add
stos
push
movsl
cmp
shr
test
outsl
fucomp
pusha
sbb
pop
xor
jmp
stos
sarb
cs
adc
incb
notb
mov
dec
ja
fcmove
cmc
adc
pop
icebp
cmp
nop
ret
push
mov
pop
fnstenv
iret
xor
adcl
movsb
add
jne
or
stos
cmpsl
cli
in
pushf
gs
mov
lcall
jbe
cmc
mov
cmp
stos
cmp
jb
cmp
out
fs
out
or
fwait
andb
dec
sbb
rolb
mov
mov
sub
test
hlt
jecxz
movsb
insb
jge
stos
mov
into
mov
outsb
jbe
shrl
or
loop
cli
add
and
ja
je
add
mov
mov
inc
xchg
mov
lods
and
xchg
or
std
mov
jmp
sub
cld
ret
mov
aaa
push
jl
faddl
pop
notb
xor
mov
imul
or
mov
cmp
icebp
push
sbb
data16
push
adc
push
out
jge
pand
and
je
mov
mov
insb
mov
push
dec
gs
adc
ficomps
lea
sbb
neg
dec
jb
jbe
push
xor
lock
mov
xchg
push
addl
jecxz
and
bnd
dec
add
icebp
bound
lds
sub
int3
dec
adc
or
fidivrl
adc
in
xor
dec
pop
jp
xchg
test
es
mov
test
lahf
push
lods
sub
push
das
xchg
mov
loop
pop
mov
jmp
js
fldcw
out
out
pushl
mov
aaa
movsl
test
loope
daa
divb
fimull
xor
mov
ja
decb
cmpl
decl
pop
inc
test
mov
iret
arpl
ret
outsl
fisubrs
lods
ljmp
daa
pop
mov
fcmove
and
dec
ljmp
inc
fbstp
cmp
push
push
push
outsl
pop
ja
cmpsb
mov
xor
dec
mov
popa
sti
idiv
dec
inc
jno
mov
lret
les
xor
or
add
inc
mov
jl
in
insl
cmp
repz
inc
xchg
fcomps
cmp
cmp
addr16
adc
cmp
dec
shl
mov
jns
push
xchg
es
jmp
xchg
or
out
pop
mov
mov
or
xchg
inc
cmpsb
aam
neg
movsb
into
inc
jns
jbe
je
movsb
jne
movsl
push
fs
out
aam
or
call
mov
push
pop
sbb
mov
ja
push
stos
fists
arpl
aam
xor
ja
sub
test
loope
sub
ffreep
add
or
leave
mov
xchg
iret
cmp
cs
daa
pop
xor
fdiv
scas
cmp
insb
pop
adc
cld
sub
cld
aad
cmp
pop
sahf
je
lock
lea
lods
push
jge
popf
cli
ret
sbb
push
arpl
lcall
lods
mov
mov
add
xchg
jnp
jnp
sbb
lret
add
hlt
jecxz
or
xlat
lods
xchg
fnsave
mov
and
adc
sub
cltd
add
add
nop
dec
mov
pop
subb
xor
or
call
cmp
cmp
fisubrl
jmp
push
push
rol
repz
push
xor
cmpsb
mov
jb
and
pop
lret
pop
dec
and
add
cmp
pop
push
cmc
mov
enter
jns
jns
xchg
jo
stc
dec
push
or
jl
or
cltd
movsb
or
int3
insb
popa
pushf
iret
sarl
mov
mov
ljmp
mov
loop
mul
gs
jmp
inc
add
mov
lods
gs
pop
sbb
stc
std
mov
rcrb
mov
fldl
mov
loop
add
lods
ret
and
mov
jbe
mov
add
cmpsb
cltd
ja
aaa
xacquire
outsl
mov
fwait
push
mov
repz
mov
sbbb
jge
sub
in
xchg
iret
bound
xchg
dec
xchg
push
std
jmp
out
pushf
mov
outsl
xchg
sbb
cmc
or
pop
jle
in
and
pushl
dec
mov
fldl
cld
dec
stos
ds
mov
pop
mov
ss
fdivs
lret
and
jg
cmpsb
pop
dec
movsl
sbb
daa
in
mov
js
cmp
imul
cmc
int
push
pop
mov
aam
jae
pop
fcompl
arpl
test
addb
push
pop
mov
cmp
add
stos
add
out
mov
lock
aas
setnp
adc
enter
jo
lods
pop
popfw
jb
mov
xchg
add
and
out
cmp
sbb
addr16
test
inc
jno
scas
mov
dec
fsts
test
dec
xor
pop
mov
es
jmp
lods
push
sub
or
xor
shll
cmp
xor
shrl
mov
iret
adc
mov
pop
sub
sub
loope
in
fnstenv
add
xor
sbb
mov
push
ret
xor
ja
xchg
xchg
cltd
rolb
push
inc
mov
xchg
sbbb
cmp
push
xorl
mov
ds
notl
inc
cmp
leave
dec
scas
sub
neg
fisubl
mov
jo
push
shrl
das
xchg
push
ja
xor
jnp
mov
jecxz
lret
mov
leave
hlt
pop
jae
adc
outsb
xor
mov
popa
add
hlt
adc
es
jno
xchg
lea
out
faddl
lods
mov
cmp
sub
cmp
xchg
sbb
aad
sbb
mov
jl
push
mov
lahf
pop
clc
inc
gs
dec
jae
dec
sbb
or
mov
mov
dec
in
inc
and
data16
int
sbb
xor
jle
bound
adc
stos
add
rcll
mov
movsl
xor
push
or
mov
mov
mov
ds
popf
mov
inc
into
popf
jnp
cmpsb
sub
adc
scas
xchg
cld
xlat
xor
outsl
cmp
mov
and
dec
jl
popf
sbb
stc
test
xor
in
cmp
jp
fbstp
mov
dec
fisubrl
cltd
gs
push
mov
mov
sub
push
cwtl
stos
scas
xor
push
out
mov
das
jbe
in
inc
testb
mov
xchg
jne
xor
pop
es
mov
pop
fiaddl
xchg
dec
mov
inc
jno
add
shll
or
xchg
or
adcl
repnz
dec
jge
mov
jbe
sahf
scas
test
ljmp
mov
sub
and
inc
sub
jmp
jge
jle
imulb
test
xor
push
pop
inc
outsb
jmp
inc
scas
or
hlt
test
adc
daa
jmp
out
xchg
std
bound
cmc
push
enter
push
jbe
mov
push
inc
pop
lds
jecxz
out
mov
out
mov
loope
fnstcw
inc
sbbb
mov
jns
fiaddl
jmp
filds
jne
cli
imul
sub
sub
fwait
daa
dec
mov
pop
repz
hlt
daa
cmp
jnp
stos
xor
sub
and
or
mov
pop
cli
sbb
dec
adc
je
int3
cwtl
inc
rcl
cs
push
pop
xor
loopne
and
xor
sub
fwait
or
pop
idivl
xor
or
push
in
push
pop
dec
jns,pt
xchg
fwait
ret
xchg
push
int3
cmp
dec
shr
inc
inc
add
xchg
sti
xchg
sahf
fnstenv
icebp
cmp
insl
jmp
adc
cmc
ret
mov
dec
sbb
sbb
push
popa
sahf
fstl
push
pop
cmp
mov
dec
and
incb
or
mov
fldl
imul
jmp
arpl
push
faddp
jbe
popa
testb
popf
and
insb
je
test
nop
mov
fldenv
and
out
adc
mov
lcall
lcall
shrl
push
stos
arpl
std
xchg
sti
stc
pop
popa
xchg
jae
fcompl
cwtl
popa
xchg
mov
and
mov
mov
in
pop
push
or
pop
out
lahf
call
out
mov
sub
sub
xor
loopne
dec
fisttpl
movsl
dec
insb
addl
push
fistl
xchg
fwait
stc
ds
xor
jae
popaw
aam
xor
jne
rcll
lods
mov
int
in
nop
call
jmp
ljmp
add
daa
cltd
mov
in
lret
xchg
or
or
sti
pop
std
stos
dec
lret
movsl
xor
nop
dec
and
pop
xor
repnz
notl
mov
popa
inc
mov
inc
adc
or
lahf
subb
shrb
push
andb
inc
jp
test
sub
aam
jecxz
hlt
jge
das
out
mov
cmpl
repnz
mov
and
cwtl
adc
mov
or
push
aas
dec
inc
or
lcall
pop
mov
enter
jmp
dec
jo
stc
aam
test
dec
divl
int
loop
xchg
ret
mov
pop
fnsetpm(287
adc
cmp
and
push
shrl
push
push
mov
inc
dec
sub
test
lock
cmc
mov
mov
int3
leave
lret
jge
call
std
jb
cmp
cmc
pop
out
lock
mov
fldt
lods
subl
std
lcall
ljmp
mov
dec
test
gs
push
push
sbb
and
lods
icebp
mov
dec
in
mov
push
dec
test
cld
sbb
in
add
addr16
sbb
sbbl
dec
fwait
aas
adc
xor
pop
bnd
test
mulb
imul
pop
enter
ror
mov
jo
fdivrl
rep
loopne
pop
cmp
fstpt
or
call
pop
dec
lock
pop
test
rcrb
mov
xchg
rclb
popa
bound
inc
leave
je
adc
mov
push
mov
int3
aam
jo
xchg
or
sbb
lock
mov
fyl2xp1
mov
inc
out
lcall
xchg
or
jmp
and
sub
scas
pop
inc
call
mov
in
dec
inc
dec
inc
jo
cmp
jbe
popf
bound
std
ss
push
mov
jge
gs
jae
sub
cmpsb
ja
xchg
hlt
dec
push
mov
dec
stos
adc
push
pushf
pmaddwd
out
ja
insl
addr16
cmp
in
fwait
adc
cmp
leave
jno
mov
sub
add
add
pop
xchg
popa
mov
cmp
mov
outsl
lods
sub
xchg
fdivs
jmp
pop
scas
lret
jbe
aas
roll
mov
repnz
fdivrs
xchg
imul
ds
fstl
mov
cmc
push
das
xchg
repnz
fidivl
mov
shr
push
lods
sbb
dec
int
les
xor
loop
lret
insb
add
dec
jge
jbe
xchg
xorb
mov
popa
xchg
push
out
mov
aaa
mov
into
mov
test
dec
jno
xor
cli
lcall
sbb
test
lods
pop
push
adc
mov
xchg
jno
sti
pop
data16
in
test
arpl
mov
sub
mov
stos
push
mov
jns
insb
pop
and
call
mov
push
insb
push
outsl
sbb
ficoml
ret
add
out
hlt
loope
aad
lock
push
mov
jle
dec
or
sti
outsl
adc
pop
stc
xor
mov
push
dec
ds
std
shrb
stc
roll
jg
js
mov
dec
gs
fs
mov
pop
push
inc
and
cld
add
cli
mov
std
fwait
sbbb
xor
mov
out
dec
aas
sbb
out
testl
pop
xchg
lock
je
push
adc
gs
das
mov
or
int
and
inc
sbb
shll
mov
and
aam
pushf
int
bnd
cmp
scas
ja,pt
dec
pop
scas
ds
in
push
stos
cmp
pop
mov
or
lods
repz
mov
enter
loopne
mov
xor
std
sar
inc
or
jns
into
mov
hlt
add
mov
aam
je,pt
cmp
arpl
jne
rcr
in
test
pop
imul
f2xm1
lods
stos
in
adc
xor
inc
leave
inc
dec
lret
sbb
mov
mov
and
sbb
sub
or
dec
sbb
enter
mov
leave
push
push
sbb
inc
adc
inc
dec
dec
sub
mov
data16
push
pop
pop
ds
add
adc
out
into
xor
and
adc
outsb
sub
inc
fisubs
shr
int3
shrl
cmp
pop
aam
daa
adc
fcompl
mov
and
dec
daa
inc
cwtl
jmp
call
xor
xchg
mul
add
call
pop
in
ret
mov
aaa
in
push
or
repz
call
popa
xchg
movsl
imul
dec
or
cmp
aam
xor
enter
jle
stos
dec
outsb
js
pop
push
aad
not
into
push
ds
push
lahf
adc
fstl
cmp
pop
fistpl
push
jg
pusha
js
stc
jnp
rclb
scas
mov
jb
push
mov
xor
pop
push
sbb
lods
rclb
push
out
andb
aam
mov
out
add
inc
adc
mov
sub
sub
sarb
fiaddl
fidivs
gs
xor
xchg
fdivr
pop
mov
in
add
es
pop
mov
mov
xorl
mov
xchg
adc
push
nop
test
sar
push
nop
sub
sahf
or
sbb
in
in
repnz
xor
cli
ds
sub
sbb
stc
pop
inc
bound
push
sbb
jge
pop
inc
daa
add
mov
add
data16
je
adc
mov
jno
mov
je
jge
dec
iret
cs
je
xchg
cmp
fistpll
xchg
nop
inc
nop
adc
imul
aam
int
jno
add
lahf
decl
cmc
test
or
pop
mov
pop
dec
cltd
jg
test
roll
iret
notb
imul
nop
sub
das
mov
popf
imul
pop
inc
push
jp
and
or
jno
inc
xchg
sbb
ljmp
or
pop
mov
mov
jl
int
mov
pop
and
jb
fdivs
mov
aad
fisttps
rcrl
pop
dec
mov
mov
addps
shlb
pop
addb
push
shl
sub
adc
shrl
xchg
sbb
fisttpl
out
inc
cld
mov
sub
cltd
ljmp
sub
inc
mov
xchg
test
xchg
sub
xor
test
daa
imul
test
out
clc
xchg
adc
popl
xlat
aad
mov
xchg
sti
fs
add
lret
push
mov
cmp
bnd
xchg
jae
lret
scas
sub
dec
or
outsb
sbb
and
inc
jecxz
pusha
cmp
sahf
inc
pop
inc
pop
sub
js
fldl
sub
sbb
sbb
push
stc
mov
insb
std
mov
and
lds
ret
add
mov
out
out
das
stos
fsubl
in
subl
and
pop
lret
sub
in
clc
push
hlt
rolb
inc
mov
bound
cmpsb
or
push
cmp
pop
xchg
adc
mov
xor
push
lret
mov
clc
sarb
pop
add
enter
xchg
sbb
sahf
test
cs
inc
pop
xchg
pop
out
sbb
jge
pop
add
ljmp
push
xchg
ss
cmpsl
in
xchg
dec
mov
in
in
jno
in
mov
lea
fistpll
fnsave
in
outsb
mov
push
sub
adcb
jge
fbld
add
cmp
cmpsl
pop
or
pop
lcall
sub
xchg
jbe
inc
ja
adc
add
sub
or
xor
push
xor
jo
ret
mov
adc
imul
push
mov
mov
xchg
outsl
fnsave
push
jo
sub
xchg
sub
js
cmp
jnp
add
mov
adc
cltd
mov
mov
and
mov
xor
push
jecxz
hlt
enter
xor
pop
call
cmp
add
xor
fildl
movsl
jb
nop
mov
push
test
inc
add
xlat
mov
sub
ss
push
pop
jo
ret
add
fildll
mov
mov
sbb
in
fwait
or
test
push
push
mov
inc
or
into
jo
insl
fildl
fstl
adc
pushf
mov
stos
fisubrs
dec
cmp
inc
push
add
cmp
out
add
pop
adc
sub
imul
mov
orb
out
pop
out
fldt
imul
pop
and
push
dec
stos
pop
outsl
les
cmp
mov
and
ret
jnp
bound
dec
das
je
dec
jnp
or
mov
xor
dec
dec
mov
fidivrs
jle
adc
sbb
shlb
inc
out
in
imul
dec
shl
xchg
xchg
mov
push
jns
inc
sbb
sub
pop
pop
dec
ss
mov
xchg
mov
in
adc
adcb
xlat
bound
mov
out
pop
sbbb
int3
xor
fldenv
fsubrs
sub
lcall
lret
cld
ret
in
in
adc
mov
dec
insl
fcomi
daa
pushf
adc
outsb
push
cld
sahf
jno
cmp
lahf
mov
inc
push
push
int
hlt
xchg
enter
cmpsb
sbb
loop
fiadds
xchg
adcl
loope
popf
cli
mov
dec
mov
and
aam
cmp
push
mov
data16
sbb
and
mov
or
lahf
test
push
pop
fdivr
mov
adc
xor
dec
addl
jmp
aaa
push
int3
push
mull
das
mov
popa
jo
scas
sbb
mov
sbb
push
push
mov
cli
xchg
int
jle
inc
add
test
stc
imul
popf
js
addr16
mov
insb
push
movsl
repz
xchg
in
insb
aam
and
flds
cld
dec
lcall
idivl
stos
popa
data16
fdivr
cmp
cli
mov
adc
pop
jbe
dec
push
addr16
andl
or
insl
mov
rorl
push
cmp
cld
xor
imul
das
xchg
call
sahf
cmp
ret
jle
inc
jb
adc
inc
aam
xor
rolb
out
ljmp
lret
enter
enter
shlb
adc
stos
mov
xlat
or
int
mov
aad
mov
cs
sti
sarb
xchg
out
sub
ljmp
rcrb
in
inc
shll
jbe
cmp
and
xlat
daa
push
cmc
fstps
mov
pop
jg
xchg
inc
pushf
aad
mov
pop
lds
cwtl
pop
imul
repnz
mov
pop
std
and
xchg
mov
inc
dec
aaa
es
stos
cmpsl
pop
je
mov
mov
subb
rcrb
gs
mov
adc
or
xchg
stos
sbb
in
mov
insb
push
dec
in
out
cltd
scas
ljmp
aaa
pusha
sub
inc
pop
aam
adc
pop
cmp
dec
stos
sub
pusha
jae
mov
pushf
mov
mov
dec
dec
xor
mov
jl
xor
iret
daa
jo
scas
int
pop
mov
clc
fistl
cld
in
push
and
mov
sbb
ja
sub
cld
lret
sbb
pop
and
in
add
imul
pop
mov
pop
mov
repz
inc
shrl
mov
pop
icebp
xor
sbb
flds
mov
test
push
cwtl
mov
je
and
pop
xor
das
xor
mov
test
jae
sub
xor
cmpsl
sub
mov
rorb
push
fucomip
cmpsb
shlb
call
clc
test
add
sbb
dec
lahf
mov
fld
fdivs
adc
add
add
pop
jecxz
inc
push
and
mov
test
jge
xor
daa
jge
dec
jl
sbb
loopne
cmp
lds
push
mov
jb
jbe
cld
and
mov
lret
and
loope
cmp
cmp
pop
dec
xlat
aaa
loopne
repz
and
lret
push
cli
push
inc
dec
xchg
dec
pop
test
ja
stc
cmp
dec
movsb
outsb
adc
clc
dec
jbe
jae
repnz
inc
inc
mov
mov
sbb
xchg
ljmp
sbb
and
or
add
pusha
push
movsb
lcall
out
xchg
dec
push
sub
mov
fbld
rol
cld
mov
push
scas
jle
cwtl
stos
aad
sbb
sub
mov
loop
lods
test
mov
lcall
shrl
stos
sti
scas
mov
dec
pop
mov
sarl
out
adc
xor
add
sahf
fnsave
movsl
push
dec
lock
jo
or
cwtl
push
sahf
std
test
push
stc
mov
pop
xchg
pop
or
or
add
jne
jle
sub
adc
mov
cmp
test
jns
xchg
and
jle
or
leave
sub
aas
mov
adc
in
mov
or
inc
cmpsl
fs
fstp
in
and
jno
xor
sbb
jbe
mov
xchg
mov
xchg
sub
mov
pushf
repz
scas
dec
adc
mov
inc
notb
js
stos
imul
stc
mov
testb
idivl
icebp
and
mov
ret
dec
pop
les
daa
add
bound
lret
sbb
lods
jl
adc
ret
dec
lcall
mov
dec
xchg
fs
enter
out
xor
jecxz
jo
dec
bound
js
jbe
jmp
add
pop
fcmovbe
dec
bound
and
aas
sti
out
rclb
lds
xchg
repnz
jg
sbb
jbe
hlt
je
sub
out
pop
xor
push
ret
sub
mov
pop
mov
ret
push
xchg
pop
dec
ret
popa
jne
lods
gs
xchg
out
and
inc
xchg
xchg
sub
loope
pop
cmp
ret
shrb
and
pop
jnp
faddp
or
mov
rclb
adc
dec
movsb
popa
outsl
inc
sub
scas
iret
mov
mov
loop
sub
push
shll
ret
xor
lcall
out
jbe
adc
addl
and
inc
in
mov
ds
cwtl
fmuls
xor
jg
add
sub
mov
mov
sti
mov
andl
jl
jp
nop
push
xor
mov
mov
add
inc
imul
and
mov
adc
mov
loopne
push
sbb
xor
xor
mov
ljmp
in
push
aaa
mov
xchg
pop
test
jl
push
mov
sti
insb
sub
cwtl
rorb
and
xchg
inc
dec
dec
loop
fcoml
int3
lcall
xlat
outsl
dec
dec
gs
movsb
out
cmpsl
das
js
vxorpd
jne
inc
and
jae
aad
sbb
test
stos
cmpsb
fdivp
js
outsl
fimull
lods
sub
cmp
mov
mov
push
adc
and
mulb
mov
push
hlt
mov
cs
sarb
adc
push
dec
ljmp
xor
or
in
lret
aad
daa
pop
sti
or
mov
notl
lea
out
mov
sub
and
mov
outsb
pop
lahf
inc
pop
shrl
push
push
xchg
mov
xchg
push
sahf
movsb
movsl
and
out
fwait
dec
cmp
pop
mov
arpl
orl
inc
or
movsl
insl
hlt
adc
fisttpl
insl
sub
or
pushw
add
xchg
sbb
mov
gs
jge
sbb
fwait
lock
sti
or
jmp
xchg
dec
mov
icebp
adc
dec
popa
add
cmpsl
aas
push
lds
imul
and
mov
sbb
jmp
jp
hlt
cld
mov
inc
xchg
jno
adc
ret
cmp
mov
arpl
stos
insl
cmp
call
dec
in
xchg
sub
js
fs
push
pushf
movsb
pop
dec
scas
sti
jge
pusha
mov
jno
pop
or
push
popf
in
dec
dec
inc
adc
cmpsl
or
ret
sbb
push
incl
in
cmp
fwait
mov
pop
rcrb
xchg
int3
imul
je
movsl
or
pop
stc
aaa
inc
cs
pusha
dec
sbb
aaa
cmpb
inc
stos
test
out
xor
xor
inc
add
test
rolb
lock
loope
jecxz
ss
cld
mov
mov
mov
ficomps
xchg
cld
push
mov
stc
cmp
adc
jle
mov
jae
out
imul
sar
push
shl
popa
mov
sbb
pushf
aas
inc
jno
ja
jecxz
outsb
ljmp
inc
jmp
fadds
mov
dec
push
es
scas
cmpsb
dec
lret
xchg
sarb
and
cmp
iret
rcrl
out
and
jno
pop
call
mov
mov
mov
les
adc
sahf
and
lret
sub
mov
shr
and
rolb
sub
rcrl
daa
or
insb
movsl
push
adc
and
mov
outsl
aad
xchg
nop
imul
popa
cmp
test
outsb
into
cmp
cmp
mov
add
aaa
add
call
jb
ds
xchg
cmc
test
sbb
cmp
fwait
dec
mov
add
fnsave
xlat
data16
push
cmp
jns
stos
enter
fidivl
adc
sbb
or
aad
pop
rolb
loop
sub
outsb
out
mov
mov
inc
shlb
enter
ror
pop
in
cmp
fidivrs
ljmp
push
shrl
and
insl
adc
aad
test
lret
cld
mov
dec
inc
sti
jae
adc
xlat
aaa
cmp
mov
pop
push
xchg
cs
out
rclb
out
push
mul
or
mov
dec
inc
xchg
and
sarl
in
xor
pusha
repz
leave
int
cmpsl
dec
mov
sarl
mov
rorb
and
fidivrs
lock
inc
jbe
mov
mov
shrl
fiaddl
xchg
lret
cmp
push
rcl
mov
scas
daa
xchg
adc
fnsave
mov
cli
mov
into
loop
add
pop
jle
jmp
adc
pop
push
movsl
mov
jge
push
sbb
jne
push
outsb
push
lds
sbb
or
mov
lahf
mov
inc
lock
cmp
add
xor
xor
insb
jns
push
mov
xlat
popa
jno
in
cwtl
xor
adc
mov
scas
sahf
jl
iret
dec
mov
pop
shlb
insl
push
lock
xchg
fsubrs
mov
inc
mov
gs
fisubrl
or
cmp
mov
fadds
and
popf
iret
cli
cmc
in
pusha
and
lods
dec
push
adc
cmp
sbb
jne
push
rorb
xor
mov
jge
jmp
leave
xor
fsubl
pop
clc
xchg
cmpsb
or
mov
jbe
and
sub
mov
or
mov
xchg
aas
xchg
cmc
cmp
push
mov
add
push
cmpsb
mov
push
mov
jno
test
call
sbb
push
fnstenv
mov
inc
mov
inc
clc
das
out
mov
mov
iret
repnz
jne
enter
push
mov
sub
aas
ror
xor
std
pop
out
in
fmul
scas
in
inc
loope
out
inc
arpl
in
gs
stos
jo
dec
loope
jo
aaa
mov
adc
pushf
in
xchg
ss
jnp
andb
insb
mov
clc
cld
jnp
in
push
push
mov
fisttpll
xchg
cmpsl
inc
outsb
scas
cmpsb
inc
xchg
xorb
xchg
enter
jne
into
inc
mov
cmp
outsb
dec
mov
scas
repz
das
mov
iret
or
mov
push
push
das
pop
mov
dec
maxps
cltd
mov
sub
in
dec
mov
add
pop
lret
loop
es
adc
mov
pop
pop
pusha
shll
and
push
pop
push
addr16
addr16
or
jb
lret
pop
js
cmp
repnz
cmp
les
pop
and
rol
push
pop
xor
ja
cmp
imul
pop
mov
cmc
in
inc
lods
mov
bound
push
popa
js
dec
xorb
icebp
outsl
stos
icebp
dec
jne
gs
popa
mov
fidivrs
rcrl
mov
add
mov
xchg
inc
mov
xchg
lret
dec
iret
imul
and
insb
sbb
inc
push
aas
pop
xchg
and
push
movsl
add
cwtl
inc
movsb
mov
sub
jo
in
push
mov
fnstsw
cmp
roll
cmp
ret
lock
push
je
movsl
jns
dec
or
movsb
sbb
xchg
jp
pusha
clc
jo
fistl
dec
arpl
popf
orl
js
das
mov
xchg
add
push
xchg
rcr
push
pop
pop
or
sbb
hlt
call
ret
lea
mul
sti
in
mov
pop
sbb
es
mov
cmp
pop
lcall
lret
xor
stc
lret
jge
mov
enter
or
add
xor
mov
cld
pop
in
mov
lods
lret
push
jmp
mov
add
mov
sbb
and
inc
ret
test
jne
jns
mov
xlat
jbe
bound
xor
aas
je
je
jge
mov
mov
imul
cmp
sub
jp
inc
aaa
pop
rcl
add
out
fsubr
pop
test
xchg
and
mov
dec
cmp
xor
fwait
sbb
les
sarb
stos
ss
sbb
mov
int3
lds
je
dec
mov
pop
scas
xor
or
lods
inc
aas
add
cld
mov
movsb
popf
imul
push
jp
imul
fcomps
shll
fdivrp
jle
dec
arpl
out
movb
subb
arpl
sarb
adc
mov
int3
jle
pop
jg
imul
hlt
out
aas
or
frstpm(287
cmp
test
repz
sub
sub
or
jnp
cmp
xor
cmpsl
repz
mov
fildl
dec
jl
into
mov
es
ljmp
sbb
mov
inc
mov
cmpsb
jp
popf
and
and
mov
das
pop
pushf
fs
enter
sahf
je
sbb
adc
adc
cmpsb
inc
mov
repz
jb
jp
mov
fnstsw
inc
adc
pop
mov
aam
ljmp
sarl
dec
cltd
loopne
sbb
divb
dec
jae
jo
adcl
inc
test
dec
mov
pop
es
fdivrs
leave
ja
lret
sub
adc
cltd
out
or
adc
pop
and
xor
outsb
sbb
xor
pop
in
mov
stos
dec
xchg
shr
xor
ds
test
sbb
dec
and
call
or
dec
sti
mov
lods
iret
mov
mov
cmp
jg
dec
inc
int
inc
lret
inc
mov
insb
movsb
mov
stos
mov
sbb
sbb
out
sbbl
push
loopne
jo
addr16
rolb
addb
into
jl
out
outsl
ret
in
or
jb
mov
das
stc
cmp
pop
cld
pop
push
lock
shrb
movsl
test
jnp
ljmp
mov
andl
mov
sub
xor
pop
inc
jns
jg
inc
push
add
cmc
pop
mov
clc
jle
push
jae
cmpsl
xchg
loope
inc
pop
adc
iret
mov
loopne
sub
inc
cmpb
mov
loop
andl
push
fisubl
test
jbe
and
in
dec
stos
rol
push
outsl
in
push
pop
movsb
cmpsb
sbb
orl
jg
push
test
mov
or
pop
std
imul
and
aam
adc
fnsave
xor
in
push
popa
js
cmp
jne
mov
or
add
imul
sahf
lea
arpl
sbb
and
mov
adc
bsr
mov
aas
lds
sbb
cmp
cmpsb
push
pop
lds
lock
or
arpl
in
aaa
out
jmp
and
addl
int3
adc
cmp
xor
mov
adcl
add
rorl
push
rolb
jmp
push
leave
pop
loopne
in
outsb
inc
outsb
mov
ljmp
inc
xchg
jnp
setne
dec
ret
cltd
cwtl
jle
jne
addr16
jle
jns
in
filds
and
ljmp
xor
test
in
arpl
cltd
xor
jp
mov
cmc
xor
xor
xor
jb
push
jp
addr16
and
inc
mov
push
pop
push
push
dec
xchg
std
inc
fdivrp
sub
xchg
out
sarb
add
or
sarb
sub
sarb
push
mov
shl
imul
scas
das
push
jnp
lret
adc
sbb
ja
xor
sub
sbb
loopne
aam
dec
repz
push
pop
sbb
xchg
ret
pop
icebp
xlat
outsb
iret
out
xchg
and
test
jne
jecxz
cs
xchg
mull
or
and
adc
in
jg
fwait
and
push
sub
mov
sar
repnz
inc
mov
mov
arpl
jle
add
push
mov
or
jmp
fisubrl
fnstcw
jbe
mov
pop
or
insb
fwait
push
test
mov
adc
mov
add
xchg
jbe
lcall
imul
es
cli
cmp
popa
aam
jbe
hlt
movsl
clc
push
jo
dec
xchg
jg
pop
and
push
ss
jp
sub
jns
push
popl
stos
dec
cmpsb
add
sbb
mov
pop
test
les
sub
push
mov
xlat
push
clc
xchg
mov
pop
call
dec
das
mov
adc
ret
fstpl
jns
or
cltd
outsb
aas
xchg
inc
ds
enter
cmpb
cmp
mov
xchg
mov
fstps
stc
jle
mov
js
addr16
or
movaps
lret
and
dec
mov
cmp
test
sub
insl
push
popa
adc
sub
js,pn
fnsave
mov
push
lret
aas
cltd
mov
or
pusha
inc
loopne
orl
inc
xor
sbb
xor
in
xchg
imul
push
pop
jns
pop
in
dec
scas
push
mov
adc
in
pop
dec
inc
lds
sbb
or
xchg
adc
sbbl
outsb
dec
xchg
pop
adc
xchg
lret
jno
pushf
push
fsubl
xor
dec
add
sub
sbb
mov
ret
insl
xchg
cmp
xchg
fbstp
jg
inc
movsb
jb
movsl
cmpsl
scas
cmc
in
mov
mov
js
cwtl
ficompl
movsl
dec
sbb
movsb
push
fwait
mov
sub
arpl
lock
and
aaa
mov
ja
cmp
jno
jecxz
sub
jbe
loopne
sbb
mov
arpl
pop
sub
cwtl
push
cltd
add
mov
dec
mov
negl
add
dec
or
sub
jmp
pusha
std
or
test
cmp
fistl
lock
inc
mov
dec
add
xchg
cmp
test
shufps
jmp
mov
dec
and
sub
bnd
lahf
loop
js
add
fsubr
or
xchg
leave
or
xchg
hlt
movsl
nop
or
insl
ret
dec
jg
jb
test
mov
lret
jp
xchg
sub
push
pushf
mov
add
std
cmp
ss
mov
es
xchg
pop
cmpsl
lcall
lock
jns
sub
movsl
mov
mov
jb
test
imul
call
jg
dec
xchg
pop
jb
dec
int3
jb
add
push
imul
scas
sahf
icebp
pop
jns
cwtl
mov
jb
jge
mov
xor
xchg
idivl
pop
dec
and
add
pop
jp
icebp
stos
aam
test
cltd
xchg
notl
pop
sub
mov
sbb
loope
or
jns
scas
js
inc
mov
cmp
sub
mov
xchg
inc
mov
pop
icebp
insb
fdivl
fisubrl
or
inc
aaa
adc
or
mov
push
sub
or
insb
add
mov
and
lock
sti
pop
lahf
dec
add
adc
mov
fsub
jmp
and
mov
or
scas
loope
dec
in
push
xchg
gs
mov
and
and
push
inc
and
mov
mov
add
push
mov
imul
imul
aad
sbb
push
sub
iret
mov
push
mov
or
sbb
imul
push
scas
pop
bound
push
add
ja
sub
popf
push
inc
push
pushf
arpl
sbb
stc
repnz
mov
movsl
ljmp
mov
adc
push
inc
add
ret
add
mov
jl
inc
outsb
aam
mov
aaa
loopne
lret
cmp
ds
fcoml
cltd
popa
xor
inc
push
inc
fmuls
and
dec
adc
dec
mov
lods
mov
xor
add
dec
stc
fistl
add
mov
ja
cmc
or
mov
in
xchg
xor
jmp
mov
cs
mov
pop
lea
cmp
popa
jnp
xchg
daa
pop
in
inc
add
or
mov
lret
mov
insb
and
cmp
pop
dec
andb
jg
adc
insb
out
jl
leave
rorb
stos
clc
rcl
iret
scas
adc
sbb
xchg
adc
arpl
lds
pop
mov
das
int
movsb
leave
mov
sahf
xchg
inc
lret
xchg
lock
out
mov
mov
movaps
ror
jno
shlb
dec
cmp
and
test
clc
dec
jp
add
mov
sahf
sbb
leave
cmp
sbbl
jp
dec
dec
dec
push
loope
jbe
sbbl
fwait
fs
stos
mov
js
jmp
fadd
lock
mov
ljmp
mov
mov
es
push
out
jmp
daa
mov
pop
sbb
mov
movsl
xchg
pop
jecxz
test
and
int
fsin
cmp
leave
sbb
jge
sub
repnz
or
dec
inc
inc
xchg
cmp
jecxz
push
fcoml
inc
out
test
lret
mov
lcall
xchg
jge
fidivrl
mov
dec
mov
icebp
jecxz
xchg
mov
push
push
cs
ja
mov
push
dec
test
adc
sbb
movsl
add
adc
mov
lds
pop
mov
xchg
inc
popf
cmp
test
ds
jp
lahf
test
repz
adc
mov
pop
sub
mov
cmpsb
cmp
decl
and
or
cltd
mov
int3
push
mov
xchg
mov
push
addb
mov
xchg
test
test
movups
jecxz
xor
xchg
out
ret
imul
cli
xor
inc
dec
fsubrl
mov
shlb
cmc
in
aad
lods
pop
xor
pop
ret
mov
and
pop
int
test
mov
sub
mov
mov
subl
xor
in
repnz
pop
or
mov
stc
cli
pop
add
lahf
fnstsw
iret
cwtl
dec
sub
sub
ret
pushf
and
mov
and
inc
jmp
gs
inc
pushf
rcrl
mov
sub
pop
push
and
pop
xchg
fdivrl
xor
push
scas
stc
fcoml
pop
mov
jnp
mov
inc
jle
ljmp
cltd
inc
adc
iret
inc
out
and
sbb
cmpsb
sbb
inc
inc
inc
sub
test
pop
dec
or
push
cmp
int
nop
jle
stos
add
inc
mov
mov
jb
mov
adc
pop
lods
lock
icebp
lods
cmp
shrb
cmp
mov
iret
fs
pushf
inc
sub
in
jecxz
mov
jb
sbb
jl
or
pop
test
fcoml
repz
jbe
push
or
add
inc
outsl
adc
and
rcrb
adc
mov
pop
or
pop
adc
inc
cmc
mov
insb
xor
cwtl
cmpsl
int3
pop
shll
shll
xchg
sbb
add
imul
mov
cltd
adc
insl
pushf
jo
or
scas
add
mulb
mov
or
jnp
call
shll
sbb
fisubrl
xchg
and
add
pop
aas
xchg
pop
push
sbb
mov
dec
inc
xchg
es
loopne
sbb
loope
mov
jle
ret
push
or
push
cmpsl
jmp
inc
into
lods
mov
fwait
fwait
cmp
out
aas
xchg
sti
push
insb
mov
push
add
xchg
sti
and
jne
xchg
lahf
or
add
push
js
mov
sti
adc
int3
cmp
or
mov
mov
enter
in
scas
sub
push
adc
mov
mov
pop
mov
std
jp
in
dec
inc
pop
adc
mov
and
jbe
sub
into
lret
push
pop
imul
cmc
aam
cmp
test
mov
scas
add
cmp
lods
outsl
idiv
sbb
add
add
aaa
loop
push
and
inc
pop
dec
jo
xchg
lahf
fstps
test
cmp
nop
scas
push
mov
xor
xchg
nop
cmc
push
ja
xchg
xor
xchg
and
push
testb
mov
fdivrl
adc
inc
ja
adc
ljmp
cmp
popf
cld
leave
andb
xchg
mov
dec
lret
and
mov
outsb
and
outsb
cmp
adc
xchg
lcall
aas
leave
fs
jl
int3
clc
xchg
or
dec
test
mov
push
jo
push
xchg
push
aas
sub
inc
mov
dec
xchg
mov
xchg
adc
into
pushf
mov
mov
inc
adc
mov
popa
cmp
jp
xchg
mov
adc
cld
mulb
loop
sub
stos
pusha
shlb
aaa
ret
hlt
shll
nop
repnz
addl
push
cmpsl
xchg
call
jge
das
xchg
xchg
cmp
shlb
adc
rolb
pop
popf
sub
push
sub
cmp
or
adc
subb
int3
mov
rolb
inc
add
test
outsl
pop
imul
xchg
mov
cmp
pop
cli
lret
inc
subl
inc
mov
or
push
mov
ds
jbe
push
outsb
dec
ror
pusha
sub
cltd
out
mov
mov
or
adc
pop
inc
fists
adc
push
movb
or
test
rolb
lret
int
cmpl
fistpl
mov
dec
and
pop
dec
stc
adc
shll
pusha
jnp
jg
into
adc
lods
mov
lahf
mov
test
pushf
lahf
add
mov
sarb
fcoms
push
fcoml
or
fidivrs
add
shll
inc
negl
std
clc
inc
cmpsl
je
shlb
daa
fldenv
push
ret
arpl
add
or
push
jg
shll
sub
and
stc
aas
lods
cmpl
or
push
gs
test
or
push
test
stos
insl
or
pusha
dec
mov
xchg
inc
mov
cld
inc
pop
inc
sub
jmp
or
cltd
imul
inc
adc
push
adc
les
scas
test
ss
aad
mov
push
and
scas
push
int
sbb
sub
sbb
fs
xor
mov
mov
fadds
jne
lock
cli
jmp
adc
shlb
adc
push
mov
jmp
mov
orl
or
daa
lods
push
xor
icebp
aam
test
gs
daa
imull
xchg
daa
test
or
xlat
push
loopne
push
jle
stos
mov
inc
sbb
nop
imul
iret
outsl
cmp
mov
sub
adc
pop
ret
inc
jge
jnp
inc
mov
out
test
adc
pop
xchg
rclb
enter
addl
pop
or
push
rcrb
stos
int3
push
push
add
push
imul
and
mov
jns
mov
pop
adc
or
push
es
mov
and
iret
enter
mov
adc
test
in
clc
sbb
mov
jle
jmp
imul
sbb
inc
pop
mov
aam
imul
sub
mov
xchg
push
lods
push
pop
int3
fwait
and
mov
jno
faddp
jns
out
add
xor
in
into
ja
jge
push
orl
hlt
adc
js
dec
lods
pop
arpl
add
mov
or
adc
std
imul
loop
inc
cld
push
mov
addb
push
mov
fistpll
call
sub
mov
jne
xor
das
sbb
test
push
sbb
adc
fwait
aad
adc
mov
fwait
mov
cli
dec
mov
xchg
loopne
dec
inc
push
loope
mov
inc
xchg
add
mov
mov
inc
cld
dec
mov
out
pop
loop
je
mov
fists
iret
icebp
xchg
movsl
rcll
stos
push
sbb
push
cmp
mov
testl
ds
add
cmp
jmp
push
mov
pop
stos
add
mov
js
jl
lods
cwtl
stos
push
loope
xchg
scas
aaa
fs
hlt
out
sub
pop
gs
adc
clc
scas
jae
cld
in
and
push
enter
jle
enter
mov
cld
outsb
lret
shlb
arpl
shlb
mov
cmc
je
bnd
inc
jo
popf
sub
out
gs
pusha
adc
fldl2t
xchg
sahf
pop
into
jl
inc
xor
mov
dec
scas
es
dec
jge
or
add
das
jge
aad
sbb
into
das
pop
mov
imul
mov
inc
xchg
mov
es
adcl
ljmp
mov
xchg
pop
adc
push
mov
adc
xor
and
mov
rolb
and
dec
dec
test
xor
out
orl
jle
push
xor
out
nop
and
jmp
enter
sub
mov
leave
cmp
mov
outsl
bnd
adc
dec
cld
mov
fmull
nop
out
cmpsl
lahf
outsl
mov
xor
pop
stc
mov
pushf
cmp
enter
push
xchg
mov
mov
cmp
fsubrl
xor
es
jbe
lds
adc
and
jb
rol
icebp
dec
cmp
jl
sub
out
or
push
xchg
int3
pusha
arpl
xor
sbb
xorl
xchg
xor
adc
sti
aaa
aaa
aam
aas
jbe
cmp
inc
jnp
or
sbb
shl
jne
mov
push
std
jbe
or
int
push
imul
sub
outsb
dec
cmp
adc
pop
inc
lea
cmp
sti
jne
adcl
test
cld
int3
mov
dec
out
in
adc
jne
insl
out
pop
mov
in
add
jo
or
mov
mov
repnz
jne
dec
jno
repz
mov
imul
adc
jne
xor
xorl
in
fs
movsl
pushf
icebp
sbb
or
xchg
sahf
add
test
repnz
mov
movl
pop
mov
movb
mov
inc
xchg
jge
jg
inc
rol
pushl
or
cmp
push
fs
leave
inc
adc
arpl
cmpsb
aas
pop
sbb
pop
xchg
rcr
hlt
cmpsb
lea
dec
out
mov
mov
sbb
xchg
push
sbb
jnp
mov
xchg
push
mov
shl
sbb
or
jl
call
rcll
push
sbb
pusha
pop
pop
clc
inc
inc
fmuls
aaa
mov
lods
loop
je
or
pop
leave
ret
and
jp
sti
out
jnp
ss
arpl
insl
cmp
push
into
push
or
rcr
shlb
jo
or
mov
xchg
enter
into
sub
popf
in
data16
pushf
pop
cmp
and
adc
xor
mov
sbb
dec
push
cmpsl
push
push
xor
negl
fwait
mov
shll
pusha
in
inc
fst
scas
jle
pop
xor
cmc
fisubs
cltd
pusha
ret
dec
fsubr
ficomps
scas
xor
push
push
int
lahf
shrb
pop
ss
imul
lcall
pushf
xchg
pop
int
sub
push
arpl
push
push
mov
sbb
sub
jbe
jns
lahf
jbe
insl
test
pushf
stc
out
jno
jl
dec
lret
push
mov
sbb
ja
sarb
or
aas
sbb
fbld
sbb
fsubrs
in
mov
mov
stos
into
aas
or
pop
fsubrp
xor
call
or
ljmp
dec
mov
cltd
shll
repz
fs
pop
repnz
les
test
cmp
ror
or
icebp
insl
inc
sub
data16
xor
add
push
push
jne
push
iret
in
cwtl
in
xchg
mov
mov
enter
mov
cmp
push
icebp
cli
xchg
adc
fs
push
repnz
mov
dec
int3
xchg
aas
inc
int3
mov
jbe
dec
inc
movb
dec
fstps
dec
out
adcl
sbb
mov
sub
xor
arpl
dec
mov
push
es
pop
arpl
std
jl
adc
fisubs
and
xor
stos
and
pushf
les
mov
outsb
cltd
mov
pushf
inc
dec
cmp
jo
sub
fiadds
out
mov
aad
imul
mov
repnz
call
adc
loopne
sbb
sub
xor
pop
and
cmp
xor
mov
cmp
dec
jp
jb
test
and
popf
xchg
popf
imul
ret
mov
jb
add
sub
hlt
test
clc
or
enter
pop
out
pop
loope
mov
call
sub
push
shr
inc
jne
in
in
lea
jecxz
stc
stc
mov
xchg
cltd
outsl
inc
cmc
add
scas
xchg
cmp
pushf
dec
mov
adc
pusha
cmpsl
xor
push
dec
loope
sub
pop
insb
and
iret
xor
pop
inc
dec
xor
jl
jnp
jge
mov
cmpsl
push
adcb
rorl
movsb
dec
jns
pop
jb
cmp
jle
je
mov
mov
push
lods
cmp
aad
mov
push
popa
fsincos
pop
lock
cmc
arpl
push
fwait
insl
mov
jnp
enter
popf
xchg
push
xchg
sbb
lcall
mov
stos
xor
aad
jle
lods
adc
dec
mov
shlb
sub
dec
leave
roll
ds
dec
notb
repnz
imul
ret
push
pop
dec
jg
or
adc
pop
sbbl
lahf
mov
fwait
and
iret
insl
mov
push
or
into
fisubrs
sbb
imul
pop
shll
xchg
lods
insb
sub
fdivl
stc
sbb
stos
insb
mov
xlat
sbb
js
mov
insl
repnz
roll
sbb
out
fdivl
data16
push
jns
sub
mov
sbbb
int3
dec
movsb
xchg
mov
dec
pop
icebp
pop
sbb
insl
push
aad
inc
es
imul
sti
push
add
xor
xor
lret
lods
test
stc
orb
mov
shl
inc
mov
mov
incl
mov
jl
bound
stos
inc
out
adc
js
or
xor
mov
lret
xchg
stos
testl
cmc
sub
lods
lcall
insb
jge
in
mov
pop
mov
xor
add
pop
out
xlat
add
xchg
and
inc
adc
dec
adcb
cmpsl
inc
mov
jge
mov
loopne
mov
imul
jnp
rcrl
push
inc
pop
stos
aas
push
lds
je
cmpsl
xchg
xchg
test
cs
cmp
add
les
mov
mov
mov
add
fstpt
int
dec
lock
mov
daa
jns
sahf
mov
ret
or
iret
xchg
mov
and
jl
mov
mov
or
out
xor
aam
mov
fdiv
push
jmp
sub
mov
xorl
stos
add
out
or
fisubrl
pop
xor
sub
outsb
inc
sbb
cld
push
add
inc
mov
push
inc
loop
push
in
mov
and
les
mov
hlt
sbb
cmpl
ds
cwtl
outsb
scas
sub
push
xchg
xchg
cmp
pop
or
push
stc
stos
loopne
out
loopne
mov
mov
repz
sbb
flds
or
xor
subl
cmp
push
xchg
lahf
inc
insl
xchg
mov
cmpsb
insb
jbe
jae
mov
inc
xchg
push
or
sbb
pop
shll
fsubs
sbb
ret
repz
sbb
sub
ror
push
fnsave
dec
ljmp
hlt
rclb
int3
pop
cli
test
add
test
fldenv
js
fcmovnu
mov
test
lods
aad
and
in
pop
cmp
mov
fistpll
sbb
add
cld
xlat
imul
in
bound
xor
cmp
push
sbb
frstor
mov
sbb
xlat
jnp
lcall
lret
ljmp
cltd
in
xor
imul
inc
lret
xchg
mov
xor
mov
push
orb
addr16
xor
lcall
or
out
mov
leave
xor
test
xchg
jae
add
test
mov
push
fcomi
bound
out
popa
xchg
dec
clc
rorb
imul
clc
add
test
idivl
dec
out
push
test
inc
push
mov
push
mov
or
xchg
or
adc
test
add
fldt
and
sub
and
fcomip
jno
jge
mov
inc
cmp
jno
jp
lods
sti
shll
sub
inc
xor
add
sbb
ss
cli
mov
int
mov
movl
mov
xlat
sub
or
fisttpll
stc
int
inc
jmp
or
cmpsb
pop
pop
cld
pusha
out
in
add
mov
sbb
ret
push
pop
andb
jmp
dec
lcall
les
mov
mov
scas
add
pop
jp
mov
call
push
gs
and
lea
and
xchg
dec
mov
test
jl
jne
push
bound
mov
out
jb
push
bnd
sub
adc
mov
xor
or
mov
jae
cmpsl
add
cs
flds
jnp
inc
cli
test
add
inc
js
sub
sbb
imul
loop
lods
aaa
sbb
sub
cmp
out
hlt
sub
xor
xor
daa
jl
insb
mov
inc
cmpsl
out
mov
movsl
push
outsl
push
in
outsb
xor
loopne
roll
mov
cmpsl
xor
mov
les
das
add
pushf
cmp
aam
jle
cmp
daa
out
push
mov
hlt
add
add
cld
test
sub
shrb
sub
pop
sbb
xor
jo
push
adc
lretw
movsb
enter
mov
or
jge
cltd
push
jo
jl
cmpsb
xor
jns
mov
ja
add
es
cli
xor
lds
push
cmc
pusha
xor
popa
mov
inc
dec
shll
iret
lods
int
fwait
push
mov
cli
sbb
adc
xor
movsb
xchg
inc
xchg
jle
iret
addl
or
sub
xchg
shlb
ja
xor
scas
lock
je
push
mov
xchg
arpl
cmp
xor
popa
and
push
jge
xor
movsl
mov
adc
stos
outsl
popf
push
mov
repz
aad
or
mov
push
jae
daa
clc
faddl
dec
inc
js
je
sub
ret
rclb
out
leave
in
cmpsb
xchg
fbstp
mov
pop
pop
ja
sarb
push
int
out
imul
arpl
call
ss
test
or
fldt
sub
add
cmp
or
xchg
adc
xchg
repz
add
movsl
out
push
in
int3
dec
cmp
dec
add
mov
imul
rorb
imul
gs
cmp
mov
cmp
inc
add
iret
xchg
lods
inc
int
xlat
dec
inc
jae
inc
and
cmp
dec
mov
adc
popa
jae
xchg
test
xchg
sub
push
add
ds
in
or
push
jb
xchg
push
cmpsb
das
and
add
xchg
imulb
dec
dec
loop
fldcw
push
into
andb
xchg
in
dec
insb
outsl
outsb
or
cwtl
mov
jnp
xchg
pop
dec
scas
ficomps
pop
adc
jle
pop
pop
jbe
sbb
in
dec
cmp
hlt
jb
rorb
sbb
fldt
push
aaa
lods
inc
rorb
dec
popa
xchg
add
out
pop
sbbl
jecxz
cmp
rcrb
xor
pop
ret
jge
push
dec
jnp
out
cmp
nop
xor
orb
add
daa
aaa
inc
sub
push
xchg
scas
imul
cmp
and
sbb
out
xchg
push
mov
dec
dec
add
sbb
or
mov
pop
shrb
shll
leave
or
xor
jge
and
lock
imul
jg
out
jne
cmp
stos
cli
mov
les
movb
in
inc
jg,pt
int
add
lods
jno
and
inc
xchg
xor
arpl
inc
lcall
jbe
shll
mov
pop
xor
sbb
sbb
clc
int3
repz
pop
insl
xor
les
dec
mov
mov
std
mov
mov
test
jecxz
jl
mov
adc
das
into
inc
sahf
mov
mov
gs
pop
mov
jno
inc
pop
dec
sbb
cmp
push
inc
fbld
out
jo
repnz
in
pop
cmpsb
mov
or
and
imul
dec
pop
pusha
adc
ret
aas
mov
sahf
sbb
inc
lds
cmp
dec
scas
in
lret
add
adc
sub
and
xor
jle
push
pop
arpl
sub
aad
add
insb
int3
mov
push
or
inc
out
or
cmp
and
sarb
jle
cmp
pop
fcmovbe
xchg
mov
xchg
pop
xor
popf
xchg
mov
shrl
lcall
inc
aad
mov
dec
xchg
insb
movsl
ss
loope
jmp
xchg
lret
or
or
lods
test
and
flds
and
out
aas
adc
adc
lcall
stos
cmp
outsl
pop
xor
inc
inc
stos
sub
fiaddl
enter
or
dec
aad
imul
sti
add
js
out
jmp
xchg
daa
inc
jge
inc
xor
xor
movsb
add
mov
rcrb
clc
mov
out
cmpsl
jno
and
pop
in
lock
insb
gs
adc
addb
mov
push
mov
jmp
xor
pop
mov
pop
out
out
pop
imul
ds
es
cmp
lret
sahf
dec
push
jmp
ret
outsl
leave
jl
adc
xchg
imul
jae
xchg
dec
fstps
cmp
xlat
lret
inc
bound
rclb
pusha
xchg
in
je
bound
shlb
outsl
dec
jno
or
das
and
pusha
jnp
pushf
popf
ds
in
loopne
jg
clc
fwait
fwait
and
xchg
loope
repnz
dec
mov
fdiv
mov
aam
xor
rclb
out
sub
xor
xchg
ret
mov
pop
jp
adcl
shrl
xchg
push
mov
lock
inc
push
jns
gs
mov
cmpsl
xor
push
ret
ret
lock
lods
stos
inc
push
test
cmp
adc
in
sarl
cmp
lret
mov
gs
nop
out
sarb
mov
in
shll
adc
repnz
sub
jo
aad
inc
push
out
mov
das
movsl
sub
les
add
ja,pn
popf
sbb
pusha
rcrl
jno
xchg
fsubs
inc
pop
mov
int3
test
inc
cmpsb
addr16
xor
aam
adc
outsl
sbb
out
fsubs
cmp
sbb
pop
addr16
in
or
addr16
and
insl
pop
dec
aad
hlt
ret
fsubl
push
es
shl
cmpsb
mov
pushf
dec
arpl
hlt
sbb
bound
cmp
push
mov
mov
push
daa
xchg
cmpsb
jp
data16
xlat
int
mov
lods
popa
sar
fmul
pushf
in
pop
mov
pop
jge
add
jge
aad
es
xor
and
popf
push
pop
addr16
sub
jle
arpl
test
lahf
jne
mov
out
cmp
add
pop
insl
xor
pop
pop
cmpsl
jns
xor
cmp
mov
mov
add
add
sbb
lods
dec
test
add
add
xchg
push
das
jbe
jo
dec
mov
jo
adc
mov
mov
pop
incb
xlat
push
fisubrl
jmp
sub
jle
mov
sahf
mov
pop
mov
out
dec
xchg
mov
pop
xor
xlat
sbb
xchg
call
inc
dec
mov
icebp
out
pushl
xlat
loopne
inc
out
cmp
iret
mov
popf
pusha
add
and
pop
xor
cmpb
scas
and
xor
push
dec
fsubs
ficomps
sub
push
lea
cli
repz
mov
sbb
mov
movsb
xlat
rcll
xchg
mov
iretw
pop
mov
pop
add
or
and
pusha
xor
lods
or
mov
xchg
push
xchg
pop
mov
mov
jns
subl
add
sahf
dec
jno
js
jbe
popa
jne
addr16
push
xchg
push
and
bound
push
or
jge
aam
jb
popf
ret
sbb
xor
mov
sub
in
lea
mov
inc
int3
in
cmp
test
mov
xchg
add
mov
je
cli
dec
or
sbb
mov
xlat
sar
ret
dec
rcll
pop
sbb
fisttpll
or
adc
mov
sub
insb
iret
or
shrb
sub
xchg
pop
mov
jne
or
mov
jns
push
and
pop
sub
outsl
sbb
jbe
and
sub
ret
inc
xor
push
mov
sub
daa
mov
sub
lahf
mov
out
jbe
or
out
cmp
movsb
pop
jae
jmp
push
adc
fldl
jge
add
sub
dec
jle
scas
sbb
xchg
mov
dec
pop
push
and
rol
pop
xlat
xchg
sarb
jb
or
adc
clc
pop
inc
and
sbb
jb
xor
test
rcl
jge
adc
jecxz
pop
mov
dec
rcr
mov
insb
mov
push
dec
int3
int3
aam
rol
cmp
scas
les
fadd
enter
add
jmp
sbb
movsl
stos
stos
xor
xor
sti
xchg
sub
jecxz
mov
int
mov
jle
add
jno
jo
in
mov
mov
fwait
hlt
fisttpll
addr16
movsb
or
cld
pop
orb
mov
lock
stos
pop
add
push
dec
mov
sahf
mov
pop
pop
das
fidivs
dec
pop
push
push
loop
rorb
lcall
negb
sbb
arpl
push
test
leave
inc
in
addr16
sbb
add
fidivl
sub
sarb
pushf
mov
xchg
rcrb
sub
lock
les
cmp
in
mov
lret
mov
repz
lret
icebp
ficomps
dec
mov
mov
js
adc
clc
push
push
mov
shlb
sub
pop
xchg
fcomp
mov
sub
mov
pop
loop
insb
inc
rorl
mov
sbb
jmp
xor
lods
es
mov
fnstsw
pop
icebp
mov
clc
xchg
fistpll
icebp
xor
pop
push
xor
inc
ljmp
cmp
or
adc
jb
das
inc
add
add
dec
inc
pop
outsb
dec
mov
iret
out
fnstsw
mov
push
cmp
das
scas
in
mov
fidivs
push
xchg
inc
testl
lods
mov
lods
lret
or
inc
fs
cwtl
adc
sub
xchg
ljmp
or
push
add
mov
loop
shl
into
jecxz
xchg
fistpl
movsl
jb
xchg
pushf
pop
adcb
in
jmp
jge
and
sub
mov
ret
xor
adc
dec
fisttpl
fsubl
jo
cmp
jle
outsb
cmpsl
inc
jbe
sub
cld
adc
cmc
daa
test
stos
mov
mov
aad
pop
test
insl
sbb
push
divb
adc
jo
test
and
cmp
sub
mov
mov
inc
fidivrs
ljmp
push
mov
xchg
and
pop
incb
lea
mov
mov
cmp
pushf
and
jnp
test
jae
cmpsl
mov
sbb
jge
lret
je
inc
pop
ljmp
mov
loopne
std
inc
lds
adc
shlb
mov
jnp
daa
dec
notl
pop
mov
mov
rolb
mov
sub
pop
push
add
lock
xchg
loop
mov
imul
roll
jg
lahf
shlb
mov
jns
adc
dec
nop
cmp
pushf
orb
mov
movsl
or
ja
cmp
sub
mov
push
loop
movsb
jle
cmc
xchg
loop
test
push
fimull
and
divb
sbb
imul
rorb
jge
outsb
bound
jmp
dec
insb
lea
mov
mov
lahf
pop
js
pop
mov
fists
jno
loope
or
and
test
sti
out
sub
inc
negl
mov
push
out
shlb
dec
lcall
iret
fldcw
mov
xchg
and
mov
gs
lret
pop
or
push
insb
push
jl
lods
dec
xchg
pop
mov
rcr
mov
sub
cmp
jns
jbe
iret
pop
pop
and
scas
stos
fldl
gs
fdivl
inc
adc
mov
pop
rclb
stos
lret
jl
dec
test
push
and
aaa
inc
sub
mov
aam
clc
cmpsl
adc
mov
xchg
jb
int3
scas
xor
cmpsl
or
push
sbb
add
xor
addr16
aaa
stos
loop
test
arpl
adc
in
pop
enter
enter
inc
sti
psubsb
mov
xchg
pop
lea
cwtl
sub
pop
movsb
cmc
pop
push
gs
bound
mov
int
les
sbb
sub
xchg
icebp
push
negl
cmc
mov
sahf
and
add
pop
in
cltd
pop
outsl
inc
insl
xor
pushf
pop
js
mov
popl
push
incl
cmpsl
sub
hlt
cld
push
fcomps
sub
rcr
sarl
push
adcl
int
jae
leave
cmpb
cmpsl
sub
jmp
xchg
pop
rorb
stos
ds
or
rcrb
add
mov
lea
xchg
lea
fs
cmp
sub
xchg
xchg
mov
pop
mov
xchg
or
mov
pusha
jbe
pop
out
cltd
cmp
andl
test
sub
stos
ja
mov
int3
js
pop
sub
je
cmc
in
fcoml
xchg
pop
push
rcrl
pushf
pop
mov
jae
mov
sbb
repnz
and
fstpl
mov
mov
mov
pop
movsl
mov
cmp
out
fimull
and
lcall
imul
mov
lret
pop
gs
xchg
jno
pop
test
cmp
rolb
mov
and
mov
push
mov
push
add
or
psubsb
inc
add
push
aas
cld
sub
outsl
fwait
nop
mov
sub
lcall
jp
int
test
jne
ret
stos
ljmp
cmp
sti
test
iret
das
mov
addr16
cmp
out
jne
adc
repz
or
jmp
sti
add
insb
cmc
jnp
jae
jl
dec
xchg
call
inc
ret
cmp
lds
es
bound
aaa
repnz
mov
lcall
ja
dec
add
scas
cs
js
push
xchg
fs
xor
push
cli
mov
jo
out
dec
les
add
cmc
test
sub
daa
push
adc
incb
xchg
add
sbb
mov
repz
rol
nop
xor
sub
leave
fsubrs
lcall
mov
into
clc
inc
js
lods
lods
ret
addr16
push
rcrb
pop
stos
sbb
mov
lods
and
scas
jle
add
cmp
sysenter
sub
add
add
pop
adc
dec
imul
mov
ljmp
pop
rorb
je
adc
dec
sbb
xchg
push
data16
int
enter
sub
movsb
adc
cltd
pop
xchg
ret
dec
nop
jae
nop
jnp
mov
adc
clc
xor
mov
adc
inc
ss
cs
aaa
sub
ror
mov
fwait
mov
repnz
cmp
jbe
stos
sbb
repnz
mov
mov
sbb
xor
pop
adc
pop
pop
in
les
in
out
mov
jg
xlat
mov
aas
test
or
pop
add
push
pop
outsb
cltd
add
inc
aam
mov
insl
xchg
inc
or
leave
aaa
push
fdivrs
sub
pop
fimull
jecxz
ficoms
lods
iret
and
cwtl
sub
add
push
cmc
adc
and
cmc
gs
xchg
cwtl
inc
push
sbb
fucomp
mov
adc
push
mov
push
push
popa
repnz
cli
lea
ret
adc
push
jge
stos
dec
dec
ss
movsb
inc
shll
fisubs
mov
xor
mov
int
std
xchg
and
mov
js
pop
or
roll
jo
push
mul
mov
ror
pop
sbb
sub
and
xchg
add
loopne
fistpl
shlb
push
or
jne
pop
inc
adc
cmc
js
shrb
dec
rol
sbb
pop
aam
dec
pop
pop
add
dec
and
dec
sbb
cli
pop
jno
aam
and
xor
add
lcall
push
insb
loop
jge
aam
iret
xor
mov
in
shl
push
inc
jg
cmp
shl
cmp
jne
cmc
dec
mov
cmp
hlt
sbb
outsl
stos
call
flds
in
adc
in
adc
pushf
pop
lcall
cltd
popf
ljmp
sbb
xor
int3
mov
or
pop
sub
cmc
bound
mov
mov
mov
xlat
adc
jecxz
or
jge
adc
cmp
bound
or
and
in
insl
stos
add
outsl
push
or
cmp
lds
mov
ljmp
into
in
add
rcll
out
imul
and
addl
fldcw
adcl
das
sub
aaa
jb
mov
stos
mov
cmp
in
and
inc
adc
ja
dec
icebp
addr16
outsb
rclb
enter
jne
iret
add
dec
jnp
inc
xchg
sarb
out
jle
sub
xchg
sub
lahf
push
das
ja,pt
out
inc
out
scas
int
xor
push
daa
aas
fldenv
int
fdivl
mov
ror
in
inc
xor
in
dec
test
inc
xchg
leave
cmpsb
repnz
mov
pop
aad
clc
or
inc
nop
dec
iret
dec
aad
test
sub
mov
mov
jl
fsubrs
xor
jmp
repnz
lret
into
xchg
jle
dec
xchg
pop
pushf
xor
fcomps
and
jmp
jp
fcoms
cmpsl
add
in
lret
pop
adc
pop
enter
pop
dec
or
daa
data16
popa
fs
pop
scas
shl
mov
ficoms
in
cmp
call
rcrb
cwtl
ret
test
mov
xor
cmp
into
cwtl
jnp
sub
in
dec
jne
jae
ss
jecxz
pop
xchg
mov
sahf
psubusw
pop
insb
mov
jl
ud2
int
sub
dec
cmp
loope
fsubrs
sub
hlt
fwait
pop
mov
push
lds
xor
push
mov
xor
push
dec
in
test
je
das
les
sub
scas
cmp
sbb
sbb
pusha
shll
lret
or
pushf
mov
repz
bound
jge
outsb
test
dec
inc
in
mov
lahf
cs
imul
ret
sbb
push
pavgw
mov
inc
aad
movsb
aaa
stos
add
leave
fdiv
xor
movsb
or
stos
jno
cwtl
mov
and
and
fdivp
sub
pushf
mov
std
mov
lods
outsb
inc
das
fmulp
daa
ja
mov
daa
xchg
or
fs
das
sbb
outsl
pushf
fcomps
add
push
cmp
xchg
sarb
jae
addr16
shl
hlt
sub
pop
into
aaa
outsl
in
push
clc
aas
or
and
sbb
lods
ss
jl
sahf
sub
ficoms
sub
jle
lods
add
out
ljmp
outsb
imul
push
add
xor
push
enter
mov
jp
int
mov
or
rol
gs
cs
adc
xor
mov
jg
jle
mov
dec
sahf
cld
ss
pop
mov
rorb
into
movl
fxrstor
xchg
mov
xchg
int3
add
adc
cld
push
mov
and
jb
dec
hlt
add
and
jbe
aam
mov
add
repnz
add
inc
xchg
xchg
in
add
outsl
data16
popf
sti
xor
inc
out
sub
or
push
adc
jmp
filds
mov
loopne
test
repz
xchg
popa
xchg
fadds
test
mov
addr16
rcrb
jae
lds
daa
fldcw
mov
sbb
xor
jbe
cmpsb
or
pop
adcb
outsl
frstor
push
push
mov
dec
das
mulb
xor
pop
push
je
pop
icebp
test
lds
in
mov
pop
add
or
lahf
or
inc
mov
mov
mov
cmp
xchg
mov
xchg
shlb
dec
out
xchg
popa
fwait
ss
mov
xor
lds
dec
ja
sub
pusha
push
cmp
jecxz
ret
xor
data16
fidivrs
ja
mov
ljmp
lahf
jge
mov
dec
insl
ljmp
stc
mov
inc
ss
xchg
out
and
rclb
lret
mov
fsubp
jmp
fisubs
lcall
clc
subb
pop
adc
in
and
push
inc
pushf
sbb
xor
fistpll
fcompl
add
nop
shrl
scas
out
push
push
scas
adc
call
adc
dec
int3
sahf
out
outsl
jmp
pop
movsb
pop
or
inc
mov
and
out
outsb
imul
sub
mov
push
jmp
or
pusha
inc
add
int
movsb
pop
loop
xchg
mov
mov
mov
add
inc
jno
lret
lock
pop
push
mov
mov
and
mov
mov
sbb
xchg
test
sub
mov
lds
decl
jle
sub
mov
out
cmpsb
inc
lds
pop
sub
mov
cli
outsl
adc
xchg
and
sahf
or
cwtl
pop
imul
sbb
mov
shll
add
inc
outsb
cmp
pushf
iret
mov
sahf
test
mov
and
sbbb
add
jb
sbb
js
in
orb
in
mov
mov
xchg
mov
mov
scas
xchg
arpl
add
lds
out
jg
mov
popa
xchg
push
bound
outsl
push
and
cld
inc
leave
rcrl
jp
outsb
cmp
xchg
xlat
mov
mov
sbbl
fsubrp
das
ja
aas
idivb
adc
popf
mov
mov
lahf
imulb
mov
jb
xchg
push
cmp
int3
inc
andb
pop
scas
dec
shr
sti
adc
adc
mov
loop
or
xor
jecxz
xchg
xchg
pop
mov
jne
cltd
mov
mov
jns
sub
into
add
pop
int3
pop
in
enter
out
add
xlat
adc
cmp
cmp
jl
xchg
xor
cli
test
mov
mov
push
into
test
ret
push
add
insl
repnz
push
push
sbb
inc
idivb
sbb
add
jne
mov
int
js
ss
movsb
jg
xchg
push
sbb
sbb
scas
or
adc
mov
mov
in
inc
fistps
fcompl
inc
fstl
jae
int3
pushf
push
sbb
outsl
jno
push
lret
aaa
sbb
xor
loope
mov
rclb
ss
adc
fcomi
loope
stc
in
and
xor
sbb
push
or
clc
cmpsl
aas
mov
call
mov
jge
cwtl
dec
mov
sub
ds
sub
mov
push
sub
mov
sar
psadbw
xor
stos
testl
pop
inc
out
add
add
hlt
push
dec
test
je
cs
xor
fs
dec
bound
xlat
outsl
sub
sbb
ja
and
mov
xchg
cmp
jno
subl
pop
pop
stos
in
jb
add
jno
mov
or
lret
lahf
ficoms
mov
in
stos
std
push
xlat
test
ret
loop
jecxz
xlat
push
and
pop
imul
imul
pop
fsub
pop
int3
mov
sbb
xor
fnstenv
add
arpl
jb
mov
jnp
sub
jmp
pusha
adc
adc
xchg
cmp
stos
sub
aas
adc
jb
push
in
in
and
test
mov
push
pop
in
jg
or
fistl
sub
xorb
jne
out
pop
sarb
and
inc
cmp
cwtl
neg
inc
scas
inc
test
cwtl
movq
pop
push
mov
les
sbb
shlb
jne
xorl
stc
arpl
aaa
fcompl
mov
push
scas
fcompl
pushf
les
aam
clc
mov
or
xor
mov
add
lret
ret
test
cmpsb
bound
dec
xlat
or
xor
cmpsl
xchg
outsl
mov
cwtl
inc
stos
lahf
mov
xchg
les
dec
fidivs
insb
inc
sbb
pop
and
dec
adcb
and
adc
sub
mov
and
xchg
push
cmpsb
out
dec
stc
ficoms
inc
sarb
mov
mov
xchg
sbb
pop
lock
and
adc
xor
jle
dec
jae
mov
mull
aaa
addr16
pop
cmpsl
jge
clc
cmp
cmp
cs
mov
rep
cmc
jae
inc
xchg
push
jmp
shrl
xor
in
mov
jg
mov
add
lods
jbe
inc
mov
jno
adc
pop
jge
into
shlb
sbb
nop
pop
outsb
mov
dec
gs
in
push
mov
in
icebp
scas
out
sub
lds
cltd
add
test
cmpsb
xchg
mov
mov
shrl
movsb
sub
mov
xor
in
movsb
and
cmp
mov
xchg
insl
out
cld
mov
xor
pushf
cmp
aaa
mov
mov
add
cmp
push
push
dec
lcall
in
hlt
in
push
lods
cmpsb
mov
mov
push
inc
jle
jl
push
push
cmp
ficoms
ficompl
push
ds
pop
add
or
adcl
test
xor
mov
icebp
ja
mov
bound
cwtl
inc
pop
hlt
push
scas
roll
mov
sub
cmp
mov
sbb
jl
int3
dec
pop
push
fldln2
shrb
fcompl
mov
cmpsb
sub
sub
mov
divb
orl
mov
mov
cwtl
in
xor
adc
jecxz
imul
inc
out
sub
lods
inc
mov
dec
fiadds
sub
sub
adc
test
sub
mulb
test
and
adc
add
pop
pop
jl
sbb
data16
roll
mov
mov
ljmp
outsl
inc
icebp
add
jmp
cmp
pop
lods
dec
mov
sbb
push
or
mov
ret
pop
cmp
mov
or
and
adcb
jmp
jecxz
and
pop
test
xchg
push
mov
sub
dec
jbe
mov
int
push
jae
iret
or
ficomps
mov
ret
and
es
push
inc
push
loope
cmc
iret
fld
pop
cli
es
addr16
mov
arpl
mov
shr
sbbl
aam
loop
int3
sub
xchg
pop
stos
jp
nop
subl
add
rcll
sub
push
pop
pop
jno
sti
pop
xor
or
outsl
mov
xor
ds
fisttps
push
shrl
sub
sbb
xlat
mov
mov
mov
push
and
inc
dec
loopne
mov
push
outsl
rcl
mov
jne
push
xor
add
xor
ja
mov
sbb
test
leave
dec
inc
fldl
test
cmp
outsb
aam
adc
adc
lret
sub
jno
dec
int3
xchg
pop
ret
and
cmpl
fnsave
cs
cli
stos
popf
and
xchg
and
test
js
dec
and
scas
test
xchg
inc
mov
xor
push
fists
insl
jne
xchg
in
and
int
adcl
nop
sub
adc
sbb
cmc
daa
xor
or
bound
xor
inc
adc
int3
loope
mov
fwait
xchg
dec
sub
lret
sbb
orl
test
mov
ss
sarb
adc
in
sub
xchg
sub
lret
cmp
loope
clc
enter
mov
jne
sbb
sbb
shr
dec
jbe
cmp
inc
rclb
mov
imul
jle
or
cmpl
out
sahf
push
jbe
xor
add
jecxz
xchg
push
int3
shlb
xor
loope
mov
pop
test
das
or
aaa
push
ret
jmp
sbb
pop
inc
jno
fbstp
pop
arpl
jns
sub
cmp
fdivr
or
les
cltd
jmp
push
lcall
dec
test
or
mov
popa
dec
pop
cli
xchg
scas
jne
xor
jp
push
sub
insl
add
outsl
std
inc
pop
adc
inc
inc
rcll
xchg
jl
jno
push
sahf
push
insb
outsb
stc
and
movsl
sbb
daa
jno
adc
jp
rolb
inc
inc
add
leave
mov
cwtl
adc
cmpsl
sbb
push
jg
div
sbb
pushf
push
mov
push
out
and
mov
pop
ja
jecxz
inc
mov
mull
sbb
sub
or
fisubs
xor
bound
or
dec
adc
repz
jo
lcall
dec
xchg
push
adc
shll
xchg
leave
sub
repz
xor
bswap
popl
cmp
iret
in
dec
mov
mov
mov
dec
fwait
and
jne
aaa
mov
jle
push
add
pusha
pushf
cli
xchg
lods
retw
aad
jbe
cwtl
arpl
cmpsb
and
pop
mov
clc
pop
sarl
scas
cmp
imul
push
mov
jns
outsb
icebp
pop
cmp
in
add
fstpl
jae
xor
push
nop
std
mov
xchg
bnd
scas
jmp
out
aam
inc
jl
stc
pop
add
adc
push
xchg
test
daa
push
insb
and
sbb
inc
hlt
out
sbb
mov
push
sub
arpl
inc
dec
push
out
sbbb
add
shl
push
jb
mov
shlb
pop
sub
and
inc
ljmp
stc
push
out
cmp
push
mov
mov
loop
outsl
jae
nop
daa
pop
cmc
sbb
mov
dec
push
jae
ljmp
xor
sbb
fcoms
jge
pop
mov
lea
mov
popf
pop
stc
dec
ficoms
inc
inc
sbb
mov
mov
fildll
lret
hlt
cmp
rcr
sbb
out
cltd
mov
popf
push
scas
mov
sbb
mov
push
cmp
xchg
adc
pop
mov
mov
xor
fsubr
xchg
out
rclb
mov
rol
je
xchg
mov
test
xlat
add
inc
in
in
leave
mov
lods
iret
pop
push
lret
loopne
xchg
pop
aaa
push
adc
dec
insb
xor
scas
push
addl
inc
mov
in
cmpl
mov
or
jl
inc
xchg
jmp
mov
mov
fildll
pop
jp
jbe
push
sahf
scas
rcrl
fsubr
push
aas
xor
adc
scas
jne
cmpsl
aad
cmp
xchg
add
mov
sbbb
mov
add
ljmp
jo
mov
sub
sbb
jo
inc
jmp
xlat
sbb
lock
mov
scas
mov
or
jge
movsl
mov
cmpsl
orl
mov
repnz
bound
mov
scas
cmp
ret
xor
mov
clc
and
jo
outsl
and
xchg
fstpl
push
xchg
adcb
test
mov
sbb
xor
dec
ss
aad
dec
or
mov
lock
repz
ret
mov
sarb
push
xor
into
adc
jb
arpl
xchg
lds
xchg
hlt
ror
mov
or
pop
lods
or
call
cli
cmpsb
add
aam
mov
enter
push
je
testl
pop
and
sbb
jl
push
test
xchg
cs
jno
rcrb
pop
insl
test
inc
inc
adc
fwait
xor
in
hlt
into
out
fcmove
cmpsb
dec
jae
push
lcall
cmp
notb
inc
xchg
fisubs
and
pop
sti
pushf
pop
push
xchg
mov
call
ret
sarb
push
test
jmp
adc
mov
scas
int
dec
std
push
repnz
jo
rolb
aad
and
pop
dec
and
cmp
out
lret
jne
sub
js
mov
mov
popf
jp
inc
incl
fisubrs
lock
pop
lock
pusha
inc
xchg
inc
or
push
push
scas
aas
enter
dec
pop
push
aas
pop
mov
mov
into
xor
iret
pop
sub
jns
push
mov
cld
mov
sarl
and
fwait
mov
in
add
jmp
ds
ret
add
jns
cmp
into
imul
fstpt
pop
or
fdivl
xor
test
aam
nop
jg
adc
je
pop
fsubr
std
ret
loope
aam
or
mov
or
sahf
or
xchg
ds
aad
pop
in
sarb
inc
das
mov
inc
icebp
jg
shll
cmp
or
xchg
shl
cld
or
mov
sahf
cmpsb
lahf
cwtl
pop
jmp
ret
cmpl
rorb
loopne
cld
inc
add
xor
inc
movsl
popf
inc
lcall
outsl
push
or
or
pop
movsb
scas
xchg
xor
sub
jb
sub
or
js
inc
inc
add
sub
into
loope
repz
ret
aaa
and
lret
scas
or
pop
into
in
cld
stos
gs
ljmp
xor
fnstenv
push
push
cmp
jo
inc
lea
call
ja
test
shll
sbb
or
mov
out
fs
js
xchg
inc
leave
idivl
xor
ja
lds
add
test
cld
mov
lods
stos
mov
sub
jmp
lock
aas
cmp
inc
push
mov
cli
pop
in
mov
xchg
dec
rcll
data16
dec
movsb
lock
fidivs
push
mov
mov
shll
out
test
mov
xchg
mov
insl
data16
arpl
fdivl
inc
icebp
out
add
pop
add
dec
sbb
pusha
aad
jg
pop
call
fbld
leave
pop
xchg
cwtl
insl
ljmp
movsbl
sahf
je
test
jno
ficompl
fsts
mov
push
insb
in
popa
cmp
xchg
addr16
lcall
sub
jbe
fsts
pop
push
pop
mov
repz
jbe
imul
iret
jecxz
pop
or
int
push
out
ret
adc
fwait
cmp
pop
int3
and
cli
dec
cmp
sub
xchg
cmp
mov
nop
or
push
clc
test
sbb
mov
and
push
mov
pop
and
fildll
and
sbb
fsubl
mov
sub
jecxz
jg
jmp
or
mov
add
clc
adc
sbb
add
lret
jmp
sub
pop
cmpsb
nop
rolb
into
lret
sub
xor
pop
xor
mov
gs
icebp
std
stos
lods
mov
daa
call
aas
pop
lea
in
icebp
jne
out
int
pop
xchg
xchg
lahf
repz
and
mov
unpckhps
cld
cld
cmp
out
out
fbstp
les
pushl
test
add
lea
test
mov
fimuls
pop
inc
add
or
or
cmp
pop
push
xor
in
add
xor
pop
jo
cmp
in
ljmp
dec
mov
xchg
mov
test
dec
or
roll
pop
aam
and
and
jne
and
cli
sub
lret
fiaddl
stos
mov
mov
insl
into
mov
push
fisubrl
outsl
shlb
shrl
call
cmp
mov
inc
sbb
or
fnstcw
jmp
popa
xlat
or
outsb
pop
daa
or
push
mov
mov
xchg
je
cmp
dec
sub
nop
inc
lods
subl
gs
lret
jg
loopne
das
loope
cmp
push
mov
push
insl
lds
mov
nop
clc
imul
shl
ficompl
xchg
loop
aam
dec
jmp
shll
imul
mov
mov
add
stc
adc
cmp
int3
int3
and
mov
sbb
jl
push
dec
shrb
mov
inc
jle
pop
mov
cmp
lahf
sub
cmp
jg
mov
lea
aam
pop
xchg
les
fsub
in
jbe
cltd
mov
inc
jno
ds
xchg
fsubrl
and
push
jns
sbb
jmp
std
dec
and
out
mov
outsb
mov
ja
clc
pusha
in
pop
sub
xchg
push
pop
dec
mov
sahf
jmp
les
jg
push
popf
clc
mov
loop
inc
xchg
mov
mov
jmp
push
mov
ret
ret
cmc
or
aad
add
mov
dec
xchg
cmc
gs
test
mov
imul
sbb
pop
push
loope
mov
pop
or
push
sub
cmpsl
iret
pusha
ret
inc
inc
or
std
in
imul
in
rcrb
aad
adc
mov
ja
in
lret
dec
cmp
dec
into
add
mov
inc
mov
or
xchg
mov
imul
inc
shr
jbe
and
mov
das
out
xchg
test
fisubrs
in
aad
sbb
pop
pop
dec
inc
push
jp
add
call
in
mov
and
pushf
pop
scas
pusha
sbb
fisttps
xchg
xchg
stos
add
dec
adc
sahf
sub
mov
data16
sbb
je
fwait
add
pop
dec
mov
fnstenv
lea
add
pop
mov
mov
xor
mov
fisubrs
pushf
pop
push
insl
cmp
push
dec
loop
loopne
pusha
add
jmp
ret
push
cwtl
in
cltd
ss
push
lahf
mov
mov
in
leave
scas
jb
sub
aad
adc
and
xchg
adc
sub
mov
dec
dec
movsl
cmp
enter
xor
sahf
sbb
out
push
mull
mov
xlat
push
dec
les
jnp
push
repz
ret
leave
jg
pop
jno
xchg
sbb
push
stos
xchg
mov
xchg
jns
adc
adc
dec
pop
cmp
cltd
and
dec
sbbb
je
insl
jmp
mov
add
insb
icebp
test
in
mov
test
stos
push
icebp
cmp
fisttps
in
cmpsb
mov
hlt
mov
int3
pop
xor
jle
shlb
test
jmp
add
repnz
cmp
mov
loope
cmp
sbb
data16
mov
jno
sub
sti
sti
fmulp
gs
mov
or
sbb
int
adc
mov
insb
test
ret
pop
adc
push
xchg
bound
outsb
xchg
push
fwait
cwtl
lds
rorl
js
pop
insb
mov
sti
xor
cmp
mov
fstp
clc
push
inc
das
cwtl
out
mov
loop
fsubrs
sti
xorb
push
lods
aaa
outsb
cli
cmovae
xlat
movsb
cmc
lea
lcall
mov
inc
mov
rorl
in
xchg
in
pop
in
div
cltd
sub
sub
sbb
imul
pop
lods
idivl
mov
loopne
sbb
mov
pop
or
cmp
adc
scas
mov
call
bound
aad
lea
push
sar
pop
push
mov
data16
test
ds
out
mov
dec
es
cmp
jb
push
mov
cs
mov
fisttpl
test
imul
inc
jmp
movsl
cmp
dec
aam
dec
lock
fldcw
jle
mov
sbb
and
mov
cwtl
mov
stos
adc
cmpsl
fs
mov
pop
add
xchg
call
push
add
sbb
lcall
test
mov
jg
popa
stos
imul
test
jb
add
add
push
cld
xchg
dec
dec
jns
add
push
rcr
rclb
out
pushf
sti
mov
hlt
movsb
fisubs
stos
push
push
hlt
imul
ret
cld
xchg
sub
inc
test
push
pop
sub
lods
adc
or
xchg
jb
fcoms
xchg
pop
dec
push
pop
xchg
and
pop
pop
dec
std
inc
sbb
js
lods
adc
and
popf
mov
popf
pop
addr16
push
jp
and
lcall
mov
push
inc
and
add
clc
negb
int3
mov
dec
sub
pop
add
pop
stos
and
adc
sbb
enter
cmc
mov
jbe
and
hlt
sub
dec
std
xchg
lahf
out
xchg
icebp
mov
jne
shll
fstl
repnz
fucomip
jb
sti
mov
sbb
hlt
aas
repz
pop
dec
and
push
gs
jl
out
mov
cltd
sbb
clc
pushf
add
orl
pop
mov
scas
movsb
push
sbb
jne
jmp
and
adc
jl
sbb
push
and
mov
in
std
mov
jmp
nop
push
or
pop
mov
mov
arpl
xchg
dec
dec
repz
sbb
imul
mov
jmp
das
dec
ljmp
clc
xor
jae
lcall
pop
fcmovnb
jns
sarl
adc
or
xorl
push
imul
fistpll
adcb
pop
jnp
outsb
shlb
rol
cmc
dec
cs
pop
cmp
inc
test
push
or
fadds
icebp
jae
fisttpll
ds
and
xchg
mov
jbe
jl
sub
lcall
mov
mov
inc
int
call
daa
adcb
jmp
xchg
shl
and
mov
lods
jo
fsubl
scas
cmp
xor
aaa
or
or
cwtl
xchg
data16
rolb
xor
or
xchg
mov
andb
sahf
pop
int3
push
in
iret
test
sub
rorb
jns
xchg
hlt
mov
jg
mov
sub
int3
inc
xor
push
les
scas
arpl
and
in
fsubrl
fnstcw
out
scas
xor
jno
jo
or
mov
mov
lds
push
adc
in
fwait
stos
lods
xchg
or
dec
xchg
imul
push
daa
and
aam
xchg
fimuls
dec
subb
ret
fidivs
dec
pop
inc
test
aas
imul
sub
and
inc
lcall
or
sub
jb
stos
xor
add
push
sbb
push
dec
xor
or
negb
pop
rep
mov
push
mov
xchg
sbb
or
pushf
fistl
and
in
push
fimull
add
ds
enter
test
push
and
inc
shl
fldln2
gs
or
mov
cmp
jle
pop
pop
dec
shll
inc
push
outsb
repz
sub
inc
imul
jp
push
and
repz
cmp
lret
sbb
lods
jns
adc
or
mov
mov
cmpsb
jle
test
cmc
mov
and
or
mov
dec
stc
nop
jbe
inc
add
idivb
mov
popa
pop
jl
or
repz
shrb
lods
adc
dec
iret
xor
mov
sub
int3
jecxz
in
mov
divb
outsb
sbb
fisubrs
cs
rorb
les
pop
sahf
xor
jnp
idiv
pop
inc
mov
push
sbb
xor
shl
jg,pn
mov
les
push
mov
dec
mov
cwtl
add
test
mov
fisubs
loopne
outsl
ljmp
and
repnz
fdivr
addl
out
jl,pn
fisubrs
je
imul
push
icebp
fdivrs
sbb
data16
in
sbb
xor
cmp
mov
call
push
in
ljmp
jmp
ret
sub
jp
jo
in
inc
pop
sub
mov
mov
movsb
push
fldcw
cwtl
mov
xor
movsb
inc
nop
mov
ds
sbb
sbb
jbe
push
mov
out
sbb
insb
xchg
mov
leave
xchg
adc
cli
jmp
leave
or
push
jno
lock
cltd
cmpsl
add
mov
into
xchg
push
ljmp
sar
inc
pop
mov
bound
xchg
je
pop
jno
jns
mov
jne
frstor
pop
es
or
mov
aad
xchg
or
sub
outsl
fimuls
jbe
cmp
add
cmp
stos
cmp
aaa
push
fs
mov
inc
xor
pop
lods
cmp
lds
cs
xor
sub
data16
mov
jns
jb
loopne
sub
test
in
fidivrs
vcomiss
jno
add
rcrb
clc
arpl
cmp
aaa
lock
inc
ss
sbb
mov
pop
push
mov
inc
flds
rorl
mov
push
xorl
aam
push
fcoml
jns
cmp
cltd
cs
popa
pusha
xlat
mov
outsb
sub
sbb
inc
mov
jae
repnz
sbb
sbb
cmp
shll
fwait
jae
sbb
cmp
sub
aam
aaa
sub
enter
and
nop
stos
in
cmp
rorl
arpl
pop
and
mov
push
ficoml
mov
pop
int3
cmpsb
roll
sub
movsb
jb
mov
dec
push
inc
xor
inc
pop
in
addr16
cmpsl
xor
cmp
push
out
cltd
int3
inc
jp
xor
shrb
add
shl
addl
xchg
scas
adc
push
in
and
pushf
push
fucomip
in
pop
fsubrl
sahf
sbb
mov
cmp
ljmp
imul
negb
or
clc
icebp
or
push
mov
push
test
add
popf
add
xchg
push
xchg
sub
and
call
push
inc
xchg
push
xchg
fisubl
pusha
jo
jb
inc
test
bound
push
and
lcall
movsb
js
cmp
jns
pushl
arpl
fwait
cltd
pop
and
jne
sub
lcall
clc
mov
lahf
pop
mov
out
mov
jge
cmp
lcall
xor
adc
cmc
dec
out
loopne
pop
sub
pop
xchg
jecxz
lret
lods
xor
mov
push
movsb
out
adc
cmp
dec
pop
out
lcall
jle
xor
popf
mov
xchg
aas
mulb
push
mov
lcall
dec
jge
pop
xchg
cmpsl
sbb
pop
lcall
fiadds
xchg
loope
mov
xchg
ficoml
cmpl
lds
pop
clc
dec
imul
sbb
into
imul
test
mov
mov
imul
jae
sbb
aad
nop
cmp
mov
aad
in
cmc
stos
jl
pop
mov
adc
lret
lds
pop
jno
loope
push
cs
ret
jae
mov
jmp
sahf
fs
sbb
sbb
notb
xor
inc
or
stos
ret
jle
movb
adc
fnstcw
fsubr
out
dec
aaa
popa
int
xchg
pop
and
push
test
xchg
cmp
outsb
mov
pop
cld
sbb
jge
xlat
mov
add
push
xchg
jne
dec
and
and
testb
push
pop
pop
inc
mov
adc
mov
cltd
divl
leave
mov
push
rolb
addb
dec
fs
scas
pushf
xchg
dec
pop
int3
fistpll
mov
pop
mov
cmp
pop
sbb
loop
into
xchg
je
imul
jl
xchg
lds
xlat
cmp
inc
scas
dec
pushf
push
lcall
mov
mov
fst
scas
push
outsl
add
call
adc
int
or
adc
ljmp
xchg
dec
test
xor
rcr
push
jb
and
add
add
jb
mov
pop
scas
xor
movsb
or
std
push
lret
sbb
ljmp
popf
sahf
fbstp
in
in
scas
out
xorb
add
ds
push
mov
xlat
sbb
lea
cmp
pushf
mov
inc
dec
pop
adc
lret
xor
fcompl
lahf
xlat
xchg
sbb
stos
xchg
jo
mov
cmp
sbb
and
cmp
into
ds
xchg
xchg
push
pop
je
mov
push
pop
loopne
mov
and
cli
jecxz
xlat
adc
adc
xchg
dec
mov
push
pop
cmp
jp
push
out
xchg
sti
xchg
out
mov
mov
adc
popl
or
inc
add
lcall
fildl
cmpsb
xor
push
enter
mov
and
mov
shrb
rcrb
test
mov
add
into
cs
enter
push
cmp
cli
cltd
xchg
nop
orb
fcoml
push
movsb
mov
arpl
xchg
fisubs
sbb
sub
fninit
inc
xor
nop
sbb
mov
xchg
jae
aas
hlt
push
imul
cmp
push
stc
es
pushf
mov
les
out
or
lret
lock
cmp
lahf
es
adc
push
repz
push
lcall
sbb
cs
cltd
dec
jge
jo
jp
cmc
insb
in
fldl
lock
adc
mov
pop
je
or
mov
lods
push
mov
or
arpl
addr16
cmpl
leave
mov
mov
push
cs
test
mov
mov
pop
xchg
sbb
je
fwait
and
ret
mov
mov
mov
or
add
mov
push
sub
adc
push
addr16
or
sbb
cmc
cltd
xchg
and
cmp
pop
cld
sub
push
lahf
jl
fdivl
xchg
loop
loop
int
dec
lea
dec
jbe
push
pop
daa
dec
mov
sub
pop
fstpl
aas
in
ja
lock
jae
out
adc
loop
in
les
std
in
cltd
sbb
in
lods
fdivl
sbb
and
jb
cmp
lahf
andl
add
inc
mov
push
xor
dec
dec
fisubrs
jno
and
pusha
loope
repnz
jp
fstpl
add
mov
push
push
dec
cmc
xor
mov
dec
cli
stos
jmp
xor
addb
int
mov
pop
sar
scas
push
frstor
cld
stos
int
outsl
fisttpl
xor
cmp
or
fst
push
add
lcall
fwait
xchg
ficompl
lretw
fistpll
xor
xchg
pop
repz
popa
insb
sub
adc
lret
mov
testb
cmp
int
sub
add
imul
pop
inc
xchg
pop
ja
clc
loop
xchg
addr16
out
fistpll
les
fwait
cmp
hlt
scas
push
ret
mov
dec
ret
sarb
movsb
int
lret
cmp
je
mov
outsl
xor
cld
leave
sub
adc
in
push
dec
inc
pop
pop
mov
lods
or
pop
and
ret
push
inc
adc
repnz
pop
je
inc
fs
add
push
jno
and
popa
outsb
lock
inc
daa
add
jle
jb
pop
dec
je
fsub
ror
cli
mov
out
sbb
sub
or
mov
clc
and
mov
in
adc
inc
aas
push
fsubrl
cmp
hlt
data16
mov
mov
push
jl
sbb
test
xchg
adc
clc
lcall
out
icebp
je
dec
mov
out
push
mov
cmpsb
xchg
nop
cld
mov
mov
adc
fcmovnu
bound
in
movsl
jb
jecxz
dec
mov
and
fcoms
sar
jno
pop
stos
push
sbb
push
cmp
jecxz
lock
addr16
test
sbb
aad
test
cmp
test
out
xchg
in
sbb
outsb
push
jl
shll
lret
lock
sbb
cli
enter
int3
jp
cltd
sarb
shll
cmc
adc
rcr
sub
jecxz
cmp
inc
cmp
rolb
fidivs
call
cmc
mov
out
pop
ja
lahf
dec
xchg
repnz
enter
add
es
mov
into
xorl
clc
jno
mov
popf
mov
stos
jecxz
js
cld
inc
fwait
sahf
dec
dec
pop
xchg
out
call
add
test
xchg
push
or
xor
bound
sahf
xor
in
pop
lcall
fsubrp
pop
cmpsl
adc
js
jmp
inc
int3
sbb
or
imul
aaa
or
sub
lock
sbb
push
out
pop
cli
inc
mov
loope
mov
dec
push
dec
nop
or
mov
dec
test
addr16
jp
test
mov
jmp
inc
inc
mull
dec
add
js
sub
call
jmp
push
pushf
adc
test
popf
int3
sbb
dec
js
mov
inc
sbb
pushf
cli
outsl
xlat
in
dec
dec
sbbb
data16
movsb
jg
sahf
and
xor
cmpsl
cmp
cmc
loope
rclb
jne
bnd
pop
jno
cmp
xchg
xor
subl
icebp
jne
dec
subl
sbb
cltd
jle
cmp
inc
jg
cmp
or
idivb
inc
dec
mov
idivb
aam
divl
gs
mov
js
orb
fstpt
leave
jns
fstps
ja
popf
xlat
push
xor
sub
push
xchg
add
mov
mov
in
push
test
inc
in
inc
xor
jbe
fbstp
mov
stos
ds
push
cmp
xchg
outsb
xor
and
add
push
fwait
hlt
mov
lds
adc
jle
imull
fcmove
leave
lret
cs
inc
fsubl
sub
arpl
divb
push
ds
add
filds
aas
das
imul
mov
jb
subl
cmp
sahf
mov
jge
in
aas
rorb
mov
repnz
je
xor
adc
aad
scas
shr
scas
jp,pn
daa
push
pop
adc
ficomps
jno
enter
lret
pop
mov
lret
push
pop
mov
fcoml
push
inc
inc
dec
and
xchg
xchg
leave
adc
leave
rorb
faddl
mov
shll
push
pop
or
jge
push
fmull
movsl
add
xorl
lret
inc
movsl
das
fs
mov
pop
ds
sbb
ficompl
add
mov
inc
xchg
and
in
lret
sub
inc
daa
adc
mov
cmpl
out
mov
into
jmp
lahf
sbb
jle
push
push
movsb
gs
jge
pop
push
pop
dec
mov
nop
sub
xchg
loop
in
test
adc
inc
lret
aaa
hlt
cmp
repz
imulb
cmp
stos
pop
push
jo
loop
ror
dec
fists
shlb
cmp
pop
clc
addl
pop
pop
pop
insl
push
push
loop
pop
push
push
movsl
loope
jno
cli
dec
int3
mov
ret
sti
std
add
push
cs
bound
push
aas
pop
call
mov
loope
adc
cld
outsl
test
js
mov
aas
cmpsb
dec
dec
stc
ret
sti
xchg
mov
dec
cmp
ret
es
cmp
bound
sahf
xor
addr16
cmp
ret
ss
aas
js
and
mov
test
mov
cmc
jbe
sbb
fdivrl
imul
inc
popf
scas
dec
stc
shr
mov
shr
bound
mov
hlt
xchg
jmp
loopne
ret
cwtl
imulb
enter
aaa
or
subl
adc
push
inc
ret
adc
add
roll
out
ret
cmp
push
mov
push
push
inc
mov
and
dec
sbb
stos
and
add
dec
outsl
fadds
push
mull
add
xor
or
adc
lret
fiadds
inc
mov
add
add
pop
outsb
bound
mov
loop
sub
jnp
jge
mov
xchg
sahf
sti
pop
mov
add
pop
push
and
in
cmp
movsl
adc
int
push
ds
push
arpl
into
in
jmp
cmpsb
lea
arpl
push
imul
jecxz
pop
call
pop
inc
insl
xchg
inc
mov
and
fisubl
and
xor
lahf
je
adc
jns
dec
push
dec
adc
hlt
xchg
popf
dec
fdivs
lahf
shrl
movsl
pop
pop
into
mov
repz
push
lods
neg
lds
int3
sub
dec
cmp
jge
or
xor
hlt
push
sub
rol
mov
cli
inc
dec
nop
and
push
cli
adc
imul
or
movsl
dec
jp
in
mov
push
mov
inc
rcrl
xor
test
arpl
fst
das
cli
clc
and
and
out
jge
imul
push
push
out
shlb
mov
cltd
push
repz
mov
xlat
dec
jmp
mov
pop
dec
inc
fmulp
ret
jmp
cmpsb
mov
or
fwait
std
jb
aaa
lcall
movsb
cli
mov
jno
pushf
mov
dec
fs
lahf
stos
cmp
iret
jns
cs
imul
push
and
pop
and
mov
mov
test
daa
jnp
mov
es
dec
sub
stc
mov
push
cmp
adc
xchg
pop
xor
pop
stos
cmp
or
lea
xchg
pop
imul
dec
add
ret
call
ljmp
cmp
mov
scas
xor
dec
les
aam
sub
mov
mov
mov
es
mov
inc
test
out
clc
mov
aam
rcrb
mov
jo
in
mov
lcall
mov
cli
mov
in
xchg
push
test
shl
nop
cwtl
inc
popa
lcall
enter
iret
out
cmp
or
jns
cli
push
push
and
add
scas
mov
mov
jbe
xor
js
sub
cmpsl
fistps
lret
sub
scas
loope
sti
test
xchg
add
push
out
sbb
dec
jp
pop
mov
add
cmp
mov
movsb
sub
dec
sahf
ret
aam
jne
fcoms
data16
and
sub
jb
ja
xchg
fsubs
subb
xchg
or
insb
stos
and
sti
sbb
xor
mov
jmp
pop
sub
stos
rorl
jl
push
pop
enter
cmp
pop
mov
lcall
inc
sbb
mov
pop
and
push
mov
mov
fcomps
fistps
cmpb
sbb
mov
hlt
les
cli
div
fcoms
cmp
ds
mov
and
pop
fisttpl
dec
or
and
push
push
sbbl
mulb
and
test
pop
test
stos
test
sar
ss
mov
loop
aas
sub
mov
and
push
outsb
fmull
lock
mov
and
xchg
pusha
dec
in
sbb
or
dec
in
in
pop
popf
lods
ja
mov
out
inc
mov
out
or
jle
add
scas
xor
push
loope
and
cmp
or
jecxz
mov
mov
shr
addb
xchg
cmp
xchg
daa
xlat
ret
pop
xchg
and
movsb
pop
xor
pusha
sbb
or
stos
ret
cmp
cmp
sub
scas
adc
dec
popl
jge
or
sahf
daa
gs
add
movsl
or
into
xchg
dec
and
inc
cltd
fisubrl
bound
movsl
fimull
sub
jb
xlat
adc
incl
test
jmp
stos
mov
jl
mov
ss
inc
mov
sti
insb
jno
shlb
xchg
sbb
xor
out
stos
ja,pn
call
pop
jne
rcll
push
in
inc
leave
stos
mov
xchg
sbb
add
in
movsb
into
gs
out
xor
lahf
ret
push
std
cmp
pop
push
xchg
or
je
pop
ret
fsubrl
lods
jb
lret
lahf
adc
aam
xlat
mov
fwait
mov
lret
sbbl
pop
and
pop
lcall
xorl
pop
mov
imul
lret
sub
incb
stc
push
js
add
mov
mov
cmp
int3
sti
lret
vmaxss
mov
mov
pop
push
mov
push
fisttpll
lods
xor
outsl
mov
push
mov
cwtl
cwtl
adc
mov
fsubl
mov
sub
mov
jmp
mov
adc
notl
dec
cs
add
mov
cmpsb
mov
jmp
ror
fs
jae
test
mov
stos
cs
jp
mov
mov
push
fs
jns
and
jmp
cs
lods
les
push
shll
adc
repnz
dec
xor
mov
stos
cmp
dec
mov
out
dec
mov
mov
mov
mov
nop
nop
add
push
pushf
ss
mov
sbb
data16
pop
stos
enter
jo
pop
lock
pop
in
push
data16
enter
inc
loop
pop
push
mov
xchg
fcoml
gs
cmp
data16
sub
sti
cmp
lahf
sub
pop
xchg
xlat
sti
lret
mov
push
scas
add
fcmove
sub
sbb
xchg
cmp
fs
or
inc
push
cmp
inc
inc
int3
cmp
inc
loope
push
jmp
jl
push
xchg
jmp
es
xchg
cmpsb
inc
jnp
outsb
jne
imul
mov
movsl
insb
add
or
dec
addb
fdiv
adcb
out
adc
adc
insl
iret
aas
cld
rcrb
mov
mov
xor
push
add
dec
sbb
sub
dec
mov
push
enter
js
aaa
std
add
jl
pop
sbb
daa
cmp
mov
andl
mov
pop
or
dec
push
dec
add
mov
ja
mov
rclb
xchg
mov
sub
sbbl
ja
or
mov
rcrb
daa
fldcw
adc
dec
mov
cmp
xchg
into
mov
xchg
incb
call
jecxz
xchg
dec
js
dec
add
out
and
adc
sbb
jge
fxch
je
mov
into
xlat
jmp
outsl
sub
popa
mov
loopne
out
loopne
pusha
cs
xchg
aas
inc
adc
rcll
mov
or
adc
lret
sbb
mov
pusha
inc
mov
insb
jns
jge
xchg
int3
xor
pop
sub
sub
jo
daa
subb
sbb
test
push
insl
xchg
push
cmc
aam
jmp
imul
aas
xchg
cmp
data16
fcmovne
and
mov
add
cmp
repz
adc
aad
test
or
movsb
jae
popa
arpl
mov
sbb
fildll
push
into
or
andl
test
je
pop
fisubl
push
mov
popa
add
dec
nop
lds
imul
xchg
cmp
or
lock
add
push
test
and
sub
stos
dec
adc
insb
pop
imul
stos
out
ret
add
scas
sti
in
cmp
and
in
inc
daa
mov
pop
cmp
dec
xchg
lea
cmp
inc
push
mov
cmp
shll
movsb
sub
shr
push
mov
aas
sti
in
mov
push
xchg
cmp
cmp
lahf
sbb
pop
lock
lock
push
repz
pop
push
movsl
dec
sar
imul
ja
lds
jo
leave
jbe
sub
pop
out
sti
pop
xchg
mov
and
dec
adcb
es
sti
add
inc
adc
pop
imulb
mov
pusha
cltd
xor
and
clc
leave
or
dec
out
jae
shll
add
jg
aam
gs
ljmp
imul
push
loop
pop
out
and
lock
or
sub
nop
into
scas
hlt
insl
enter
push
xor
and
mov
xor
data16
ret
push
nop
xchg
cli
add
fnstenv
dec
ds
pavgb
sub
dec
inc
xor
je
fucomi
cmpsb
std
in
jne
add
in
pop
cmp
xchg
dec
sbb
push
push
pop
mov
shlb
jo
ja
stc
dec
jbe
fstl
and
pop
sbb
daa
push
sbb
cmpsb
cmpsb
or
lcall
mov
dec
shlb
cmc
push
inc
pop
xor
out
sahf
repz
daa
shll
hlt
jge
inc
scas
inc
cmp
push
or
push
cmp
hlt
incb
inc
cmp
fdivrl
push
pop
popf
dec
scas
cmp
inc
xor
pop
mov
ljmp
sub
adc
and
stos
pop
mov
fcoms
iret
cmp
enter
mov
or
jmp
mov
outsl
jo
and
scas
pop
pusha
lcall
outsl
jmp
incl
cmp
out
scas
mov
enter
popf
lods
testb
mov
outsb
add
mov
icebp
gs
jb
pop
jnp
xchg
xchg
mov
push
nop
add
inc
mov
out
insl
mov
and
xlat
xchg
push
enter
sub
pusha
jecxz
ret
fimuls
addr16
pop
pop
jg
scas
add
mov
add
inc
adc
lret
rol
cmp
jno
mov
sbb
fwait
stos
sbb
fwait
or
dec
mov
in
cmp
in
andb
mov
jmp
push
xchg
and
push
mov
clc
sar
push
dec
and
cmp
int3
es
push
daa
push
scas
jno
pop
cltd
arpl
or
aaa
stos
icebp
add
dec
cltd
mov
test
fisubrl
nop
add
xchg
mov
mov
xor
xchg
fimuls
cmp
push
push
inc
mov
dec
cs
mov
shll
in
cmc
subb
cld
aam
lods
ret
loope
dec
push
les
imul
mov
push
cmp
rcrb
push
insb
pusha
or
ret
xchg
shlb
mov
or
insb
inc
pop
ret
pop
xchg
inc
pop
jecxz
xor
sbb
les
in
sbb
fimull
mov
xor
or
fadds
repnz
add
push
fsubrl
pop
iret
std
or
dec
xchg
add
sub
clc
mov
enter
jnp
xor
scas
and
lds
mov
pop
outsb
adc
scas
or
or
dec
or
lahf
or
lahf
mov
lea
push
push
cmp
pop
int
pop
push
inc
xchg
and
jp
in
stos
xor
movsb
cmp
sbb
das
inc
or
jb
push
xchg
xor
pop
insl
and
mov
filds
xor
pop
jle
mov
mov
lret
sbb
sbb
insl
aam
push
cltd
xor
fwait
imul
pop
shlb
or
test
out
out
or
mov
daa
out
add
lds
jo
push
sub
sub
dec
test
mov
mov
and
push
shlb
add
negl
jg
add
pop
shl
pop
out
jbe
pop
scas
cld
ja
enter
xchg
sub
in
add
or
lret
inc
in
xchg
addr16
in
mov
aad
add
sbb
xchg
pop
inc
ss
mov
push
xchg
cmp
nop
lock
mov
sahf
fs
adc
mov
inc
pmaxsw
xorl
pop
movsb
dec
loop
cmpsb
scas
pop
sub
fs
push
loopne
jmp
stc
or
enter
add
subb
in
lret
bound
repz
or
rclb
popa
cmp
pop
dec
adc
mov
in
pushf
test
repz
cwtl
xor
mov
lcall
aas
bound
or
bound
jae
or
inc
lea
adcb
pcmpgtw
mov
iret
jmp
mov
loop
dec
fstl
sahf
mov
push
add
imulb
add
ss
mov
dec
ret
out
sub
test
shrl
popa
hlt
pop
xor
lds
aaa
fdivrl
inc
jge
sti
ds
add
roll
shlb
lds
add
mov
xor
mov
rorl
loop
push
roll
fbld
inc
inc
or
fisttpll
cmpb
pop
je
movsl
outsl
sarb
sbb
hlt
fsubl
pop
push
lret
iret
pushf
outsb
mov
ret
inc
subb
rdseed
push
ret
fidivs
imul
cmp
dec
pusha
cs
lea
cmp
xor
shrb
pop
jo
fmuls
cltd
push
and
repz
xchg
in
repnz
push
jno
pop
adc
add
sub
pop
sbb
dec
mov
mov
inc
inc
mov
das
rclb
aas
adc
loop
cmp
ja
mov
dec
push
aam
mov
xchg
jg
pop
rcrb
xor
mov
or
xchg
dec
dec
mov
pop
xor
dec
xor
cmp
xlat
ljmp
sub
inc
imul
mov
fmuls
inc
lds
push
push
dec
fsts
fisttpl
aam
icebp
pop
xchg
int
mov
loope
xchg
mov
inc
popf
sti
or
lcall
test
adc
and
cld
cmp
popa
shl
call
rolb
mov
pop
jb
sub
test
mov
adc
lcall
gs
sbb
jge
dec
cmp
cltd
dec
test
mov
or
mov
mov
push
addr16
pop
lea
adc
push
in
inc
push
adc
popf
popf
rol
outsl
enter
gs
hlt
sbb
jecxz
and
dec
mov
dec
mov
cmpsl
inc
imul
push
jbe
jo
adc
mov
outsl
into
das
addr16
mov
pushl
cmpsb
inc
repnz
adc
repz
adcl
mov
mov
shll
clc
mov
dec
into
aam
jnp
insb
dec
out
scas
popf
outsl
pop
jp
aam
in
enter
leave
push
addr16
imul
fidivrs
push
iret
sbb
xor
out
xchg
jno
dec
insb
or
cmp
jo
mov
call
adc
dec
iret
or
mov
mov
dec
pop
pop
cld
jae
sahf
repnz
out
adc
adc
dec
lea
push
nop
mov
pop
les
repz
ficompl
lds
adc
mov
mov
sub
cmp
sbb
shrl
sti
xorl
fisttps
sbb
sub
mov
dec
mov
scas
add
out
lock
jg
ja
clc
fwait
jp
jp
pop
mov
xchg
or
pop
sbb
sub
jl
lods
xor
xchg
stos
fwait
inc
jns
pop
add
rorb
div
es
jnp
xchg
leave
xchg
in
xchg
jns
inc
clc
xor
shrl
xchg
jo
shrb
xchg
pushl
or
mov
push
dec
mov
mov
lock
icebp
hlt
jae
jne
pop
push
mov
add
mov
push
int3
scas
add
sbb
mov
addr16
aad
jb
xchg
inc
push
mov
dec
pop
andb
pop
pop
scas
stos
daa
and
pop
jae
xchg
stc
pushf
cli
cltd
mov
dec
insl
and
icebp
imul
out
jae
mov
jno
and
ret
adc
jg
and
pop
or
sub
cmp
pop
jge
cmp
cmp
pop
cmp
jno
lods
xor
mov
dec
aas
cmp
xor
into
cmpsb
adc
clc
ret
out
xchg
popaw
iret
pop
add
sbbl
pop
or
dec
popa
mov
push
fiadds
inc
loop
rclb
test
bound
out
ljmp
xor
fstl
xlat
cmp
mov
adc
test
adc
loopne
mov
fiaddl
push
sbb
cmp
out
imul
pop
sbb
mov
lea
inc
negl
inc
xchg
pop
pop
jge
ds
bound
mov
hlt
sub
bound
aam
ret
std
gs
lret
mov
lea
outsl
mov
ss
nop
fwait
pusha
push
cs
pop
pop
ljmp
test
test
repnz
mov
ret
fidivrl
sub
cmp
movl
movsl
dec
jp
xor
pushf
dec
in
fcmovu
shll
xor
imul
bound
gs
xor
mov
sbb
push
pusha
inc
lahf
shrl
push
iret
fdivrl
or
pop
loop
and
test
fnsave
mov
cmovnp
mov
jp
orb
pop
cmp
xor
cmpsb
out
outsb
xchg
ljmp
js
lods
mov
int3
jmp
add
test
and
int
cmp
je
sub
enter
ret
jp
push
daa
pop
lds
sub
and
push
or
inc
outsl
pop
mov
xchg
shrb
arpl
jg
push
insl
lret
loop
popa
je
lds
inc
push
sti
icebp
or
sbb
rcl
sub
sub
pop
fistpll
jbe
or
jb
repnz
mov
out
adc
jns
adc
mov
lcall
ds
xchg
push
sahf
rcll
aas
xor
aad
mov
mov
loope
pop
jle
aaa
xchg
shrd
or
or
sbb
fisttpll
movsb
sti
imul
fnop
jecxz
int3
adc
out
movsl
cmp
mov
mov
lods
icebp
imul
imul
add
xor
xchg
lock
jno
loop
sub
movsb
inc
in
sub
rcll
sub
mov
sub
push
cwtl
xchg
inc
mov
dec
mov
mov
jecxz
or
out
cmc
mov
std
xchg
loop
push
into
sub
aaa
adc
fistl
dec
scas
jp
adc
das
shll
jge
js
mov
and
jno
bound
dec
fwait
mov
or
inc
lahf
jae
or
jae
or
dec
xor
scas
divl
or
pop
shlb
jg
add
cld
popf
popl
fcoms
xor
mov
bound
fisubrs
push
mov
xchg
and
shr
mov
push
and
mov
or
fnsave
dec
jl
pop
ss
fstp
ds
push
imul
movsb
dec
xchg
mov
lds
sahf
xor
add
scas
mov
mov
lock
mov
xchg
bound
ret
mov
into
and
pop
movsl
enter
push
sbb
mov
inc
rcrb
and
sub
lods
jno
sub
jne
mov
xchg
pop
add
stos
fwait
fs
adc
das
and
sub
push
or
xchg
jge
jmp
ljmp
imul
nop
enter
and
xchg
pop
aaa
add
les
add
dec
xchg
into
sbb
pop
cmp
inc
xchg
add
sahf
lcall
add
jnp
pop
bsr
jl
ljmp
mov
aas
je
sysret
jo
sar
mov
adc
nop
adc
mov
insl
in
loop
je
es
insl
pop
xchg
iret
jno
std
mov
ds
ret
jecxz
dec
dec
aaa
mov
inc
mulps
inc
or
test
negl
adc
lods
insl
jge
mov
pop
int
dec
clc
insb
inc
hlt
iret
sbb
dec
out
push
cmpsl
jns
ja
jb
les
push
pop
inc
mov
test
mov
push
dec
cmc
jmp
out
lcall
xchg
outsb
bnd
xor
or
imul
sub
imul
inc
inc
mov
or
popf
pop
push
or
ss
lcall
movsl
pop
ret
jl
lods
test
xlat
cmc
sub
nop
jp
xlat
mov
lcall
insl
cmc
cmc
push
push
mov
es
inc
jmp
sbb
xchg
idivb
subl
and
lret
aam
sbb
movsb
push
into
mov
xchg
inc
pop
cli
icebp
popa
sub
inc
loopne
inc
mov
aaa
stos
or
pop
jp
mov
jp
out
fistl
mov
sbb
js
pand
pop
xor
in
loopne
push
clc
ja
pop
test
sub
aaa
or
pop
pop
push
aad
push
lds
int
push
fstl
mov
sbb
inc
adc
fldl
rorb
mov
dec
xchg
fimull
aad
push
push
icebp
sbb
xor
cmpsl
std
or
popf
adc
sbb
arpl
xor
cmp
xor
in
rorb
in
pop
sub
test
mov
aad
inc
js
and
roll
jb
popa
pop
iret
inc
xchg
jmp
iret
jecxz
sbb
dec
repz
mov
xchg
mov
call
aam
sub
rclb
push
or
in
dec
inc
inc
pop
outsb
cmpsb
adcb
cmp
cmp
iret
cltd
push
xor
and
xchg
mov
imul
xor
push
repz
mov
push
dec
sbb
mov
lds
dec
pop
pop
or
lods
inc
xchg
xor
iret
lret
into
pop
mov
ret
jb
fst
sbb
mov
push
push
loop
xlat
pop
test
addr16
andl
add
dec
cwtl
xchg
pop
mov
insl
xchg
pushf
cmpsb
or
sub
ja
sbb
arpl
mov
sti
pop
test
pop
es
xor
adc
out
xor
xchg
jnp
enter
cwtl
mov
cld
popa
xorb
push
sbb
testl
xchg
mov
mov
orb
xorb
jle
pop
and
cmpsl
adc
inc
cmc
mov
jge
int
push
test
mov
mov
into
dec
add
or
js
xchg
dec
loope
mov
insb
rolb
xchg
and
xor
stos
or
sub
clc
outsl
lea
cmc
das
daa
mov
fistps
fxch
push
push
mov
out
xlat
ljmp
aam
imul
jge
mov
pop
mov
push
out
stc
mov
pusha
stos
sub
xor
inc
mov
and
in
daa
movsb
pop
movsl
jnp
popa
in
dec
adc
shlb
test
cwtl
imul
cld
pushf
xchg
and
js
xchg
mov
daa
in
stos
xchg
insl
movsb
xchg
xchg
adc
cmp
loopne
jno
push
jnp
outsb
js
int3
xchg
push
aaa
adc
iret
outsl
lret
push
inc
add
jp
enter
nop
fistl
mov
mul
lds
inc
mov
andl
adc
xchg
cli
cwtl
xorb
or
imul
xchg
outsb
movsl
daa
cmpsb
adc
insb
bound
mov
xor
insb
jnp
adc
fs
xchg
push
inc
inc
dec
xchg
inc
or
daa
xchg
push
movntq
mov
pop
add
jns
dec
insl
loope
xor
sbb
das
xchg
xchg
and
or
jbe
ret
mov
mov
mov
pop
call
lret
stc
cmc
push
icebp
imul
in
or
shrb
or
cmp
imul
inc
mov
aaa
pusha
mov
mov
cmc
jp
pusha
jae
push
test
and
push
andb
ljmp
fisttps
sti
jge
dec
pop
mov
dec
or
xchg
stc
adc
addb
testb
jo
aam
adc
bound
lods
adc
ret
add
xor
subb
adc
push
fwait
punpcklbw
sbb
xor
xchg
jecxz
jg
repnz
insl
add
pusha
and
ja
push
and
aas
out
fisttpll
cs
fildl
xchg
adc
xor
fcmovne
fstps
or
xchg
pop
stos
jge
popf
sbb
fstp
inc
into
fsts
pop
sub
pop
add
inc
dec
dec
ret
mov
js
filds
push
xchg
leave
inc
shrb
cmp
arpl
xor
xlat
loopne
or
cld
adc
or
mov
in
xchg
nop
add
mov
inc
lods
das
movb
or
call
dec
and
outsb
cmp
jge
test
leave
sbb
test
mov
sbb
aad
cs
scas
push
mov
jae
in
add
and
adc
lahf
ja
ja
ret
leave
bound
sbbl
test
out
mov
xor
scas
addr16
sbb
std
test
roll
andb
leave
arpl
jge
mov
pop
lds
or
pop
pop
pop
mov
iret
xorb
insl
sbb
fstl
xor
mov
jg
adc
lret
sub
adc
orb
push
xchg
into
inc
sahf
cmp
dec
jp
das
movsl
into
jg
mov
insb
mov
jmp
fwait
aam
pop
cli
dec
mov
jle
sbb
jb,pn
pop
push
dec
jmp
jge
arpl
push
sub
insl
jecxz
dec
sub
xor
stos
int3
jp
push
sub
jb
loopne
adc
inc
nop
xor
std
sti
rcrb
stos
leave
aad
pop
mov
xchg
sti
cmp
sbb
mov
sub
mov
mov
enter
and
jmp
pop
push
test
mov
ss
stos
stc
scas
pushf
mov
inc
es
mov
mov
bnd
jge
outsb
loope
adc
in
jg
leave
idivl
imul
les
es
sbb
outsb
cld
xchg
push
and
cmp
xor
pop
call
dec
nop
xor
xchg
inc
adc
enter
pop
dec
push
fcomps
push
shrl
mov
daa
movsb
jnp
repnz
shll
cli
pushl
xchg
push
lods
mov
mov
sub
pusha
fildl
les
shll
stc
mov
jmp
push
roll
mov
insb
aad
jp
push
adc
dec
push
sti
or
mov
ljmp
xor
fwait
rcll
clc
mov
and
data16
mov
cmp
in
les
in
pop
icebp
fistpl
popa
lcall
sub
adc
mov
cmp
lahf
cld
jp
sahf
mov
out
cmp
ja
add
cmp
mov
pop
pop
ljmp
sub
mov
pop
loop
mov
dec
scas
mov
jmp
push
sub
insb
xor
loope
push
or
jle
inc
lock
add
cmp
adc
mov
or
jne
sub
or
sub
daa
sbb
or
adc
test
xor
incb
xlat
dec
mov
mov
mov
lea
xor
mov
mov
adc
xchg
gs
jo
addr16
movsl
lds
in
lock
add
fwait
or
sti
mov
inc
movsb
add
mov
pop
scas
nop
addb
and
xor
repnz
pop
cmp
inc
daa
push
fsub
gs
sub
add
loop
pushw
jne
bound
call
inc
scas
push
mov
aaa
movsb
and
nop
or
pop
inc
adc
dec
imul
out
sti
xor
mov
pop
or
addb
push
popa
insl
aad
add
sub
mov
jge
into
les
scas
iret
movb
stc
xor
jge
mov
mov
pop
mov
in
lahf
xor
fdivs
jb
stc
fsubl
pusha
mov
aam
and
lds
dec
sbb
cmp
inc
es
sbb
fnsave
popf
sub
orb
lds
mov
add
std
cmp
icebp
mov
test
mov
inc
lahf
imulb
divl
into
faddl
dec
lds
push
mov
sbb
adc
in
mov
mov
add
cmc
sub
in
test
xor
test
add
dec
or
xor
sbb
iret
inc
test
xchg
lods
pushl
mov
pop
clc
mov
inc
loope
xchg
xor
cmpsb
into
dec
mov
lcall
mov
or
or
andl
pop
call
out
xchg
or
cmpsl
and
cmp
shl
les
sbb
push
daa
idiv
push
mov
cmp
addb
cmp
jns
mov
mov
js
test
mov
xor
sahf
fdivrl
ljmp
jbe
cmp
adc
push
out
lods
add
popl
mov
pop
sbb
data16
and
shlb
in
and
fisubl
stos
jge
jb
outsl
ja
or
pusha
andb
inc
aas
dec
xchg
or
jns
xchg
cli
push
push
push
out
sbb
and
outsb
ret
scas
mov
movsb
aas
insb
sub
push
xchg
xor
test
mov
pop
stos
mov
mov
cmp
push
aam
loopne
out
xchg
pop
popa
loopne
hlt
out
inc
sbb
inc
cltd
cmp
enter
fbld
sub
inc
xor
testl
and
in
and
cmpsl
xchg
cld
sbb
push
xlat
xor
rcll
inc
mov
data16
in
xor
xchg
adc
pop
sbb
fsubrl
push
pusha
cmpb
cmp
mov
xchg
jno
out
dec
stos
and
xchg
push
jge
dec
outsl
add
cmpsl
cmp
add
inc
push
daa
mov
xchg
daa
mov
cmp
push
inc
mull
out
inc
or
lcall
sub
inc
sbb
mov
popa
jp
pop
stc
jl
sti
gs
mov
nop
aas
and
lds
subb
rcr
jbe
icebp
cmp
cld
sub
add
scas
pop
jo
mov
mov
mov
mov
icebp
ja
cs
cmp
mov
push
outsl
mov
xlat
rcl
iret
jno
inc
mov
test
jbe
inc
add
outsl
popa
xor
les
xchg
movsl
inc
subl
iret
in
pop
or
repz
std
fildl
push
in
dec
mov
fidivrl
mov
mov
pop
add
push
stos
cltd
mov
outsb
ret
pop
out
ja
lock
repz
dec
add
inc
dec
std
lods
mov
dec
mov
and
cmpsb
pusha
clc
dec
es
iret
ds
scas
in
add
out
jg
ficompl
mov
push
movsl
xor
in
sbb
leave
je
sahf
sbb
push
or
fmulp
lods
jmp
mov
sub
pop
xchg
cmp
push
test
cmp
xchg
and
mov
pusha
arpl
inc
lcall
int
push
jmp
clc
jge
stc
insl
mov
outsl
lea
call
cmpsl
out
cmp
sbb
mov
cwtl
or
repz
sarb
xlat
push
push
jno
xor
lods
jne
mov
jl
in
pop
bound
xlat
inc
std
or
pop
and
aam
push
sub
pop
add
sti
mov
xor
sbb
shll
repnz
lret
inc
enter
lret
imul
adc
push
data16
mov
sub
cmp
adc
or
adc
inc
mov
dec
ljmp
mov
mov
aam
imul
push
push
sub
imul
testl
adc
cmp
mov
lret
dec
mov
outsl
sub
inc
dec
xchg
cmc
inc
push
push
push
cmp
mov
dec
popf
sbb
add
enter
pusha
mov
inc
in
mov
sub
js
shlb
subl
movsb
cmp
out
mov
jge
xchg
cmp
inc
mov
ljmp
call
xor
dec
jg
mov
js
pop
sub
add
mov
and
dec
mov
mov
iret
out
pop
aad
decl
out
imulb
xchg
inc
ja
rorl
aad
repz
pop
xor
cmovae
push
inc
jp
insl
cwtl
arpl
push
mov
xor
ss
sub
insl
outsl
lret
gs
pop
movl
push
fidivrs
fbstp
call
lcall
push
mov
nop
jnp
stc
aas
les
push
loopne
fwait
mov
insl
filds
sbb
xor
inc
cli
insb
adc
in
mov
cmp
mov
fiaddl
sti
scas
pop
mov
ljmp
adc
xchg
fldenv
addl
mov
jmp
mov
insb
lret
cli
xor
push
scas
jae
mov
sub
xor
add
int
jle
loope
mov
jne
sub
xchg
jne
imul
daa
pop
sbb
repz
xchg
outsl
lahf
inc
int3
je
insb
fsqrt
jb
dec
ljmp
inc
or
inc
cmpsb
mov
enter
jmp
in
outsl
test
cmpsb
lods
movsb
aas
or
inc
inc
mov
inc
punpckhbw
out
in
jl
add
pushf
xchg
mov
loope
rorb
es
mov
add
stc
lret
icebp
jle
mov
push
pop
lods
adc
mov
or
jae
xchg
ror
aas
in
jge
pop
inc
fdiv
sbb
xor
mov
sub
push
pop
inc
mov
sub
test
cltd
vmread
int3
jg
xchg
sahf
add
cli
dec
xchg
scas
movsb
inc
and
add
inc
in
push
sbb
cmpsb
stc
in
cs
icebp
sub
popf
cmp
movsb
pushf
xor
add
cmp
mov
xchg
sbbl
xlat
adc
jnp
xlat
xchg
xchg
xchg
ret
les
inc
aam
out
xchg
jae
mov
jne
shrb
movsl
sub
fs
ljmp
sbb
mov
stos
sub
nop
xlat
sub
test
ljmp
sti
pop
imul
push
fsubl
ja
loopne
sbb
ljmp
mov
xlat
mov
pop
pop
dec
mov
mov
mov
addr16
mov
flds
fisubrs
mov
cmp
lds
lret
stos
into
int
lock
cld
sub
jns
movsb
out
xchg
add
out
mov
hlt
loop
jbe
das
ds
sbb
shlb
div
out
dec
adc
push
inc
jecxz
mov
mov
fucomi
xor
int
outsb
push
cld
and
subb
mov
sub
push
jbe
mov
or
inc
sbb
imul
rolb
ret
fimuls
int
mov
mov
adc
mov
xchg
xor
mov
rcr
jb
inc
inc
dec
xchg
push
jnp
push
lret
mov
jp
jns
add
and
mov
mov
mov
sti
into
push
sbb
jnp
jnp
dec
leave
jo
shl
in
or
addb
call
fisubrl
aam
loopne
sbb
sub
inc
jne
adc
inc
fs
loop
fs
jno
sbb
lret
xlat
pop
mov
int
xchg
push
add
into
push
lods
pop
aaa
adc
adc
sti
lea
push
dec
adc
loop
insb
fisubl
mov
add
inc
or
adc
dec
or
repnz
cmp
xor
loop
xchg
gs
jle
out
xor
repnz
jne
popa
push
xor
scas
sbb
and
add
add
sahf
mov
or
pop
push
xor
aaa
aas
mov
cmpsb
pushf
inc
mov
je
mov
mov
cmc
xchg
jnp
enter
and
xor
dec
pop
mov
pop
or
mov
nop
xor
je
out
mov
lds
out
or
mov
xchg
fs
pop
mov
xlat
or
jns
jp
lret
adc
mov
push
sti
sbb
pushf
or
lea
xor
test
xor
mov
fdivs
xchg
jo
icebp
or
jle
sbb
call
call
movsb
add
dec
call
out
inc
mov
mov
rcrl
mov
xor
and
xor
jp
popa
dec
jge
pushf
sub
xchg
inc
mov
bound
or
push
push
inc
mov
int3
mov
sbb
leave
or
mov
movsb
dec
cmp
mov
rcll
aad
or
icebp
mov
xor
xchg
xchg
nop
inc
insl
push
xchg
sub
mov
in
push
jne
inc
mov
sbb
pop
js
imul
pop
adc
mov
adc
inc
cmp
dec
mov
cmp
mov
ja
mov
scas
mov
push
lahf
xchg
hlt
sbb
mov
dec
nop
add
dec
pop
jge
lea
fstl
mov
dec
push
int
inc
clc
ja
mov
mov
ds
push
or
sub
lcall
leave
dec
stc
jmp
in
jmp
or
testb
sarb
lods
sub
sbb
jo
fsubrs
lds
push
stos
repz
cmp
sub
mov
dec
or
ja
mov
mov
xlat
jp
fsubrl
repz
sbb
addr16
scas
lcall
xor
and
pushf
jp
jmp
sahf
add
cmp
mov
leave
cmc
jne
push
adc
sbb
aad
ss
pop
in
pushf
lods
stc
in
out
and
pushf
pop
test
daa
mulb
cmp
lahf
dec
sub
or
cmp
sbb
fbstp
cltd
pop
bound
pop
xor
push
stc
aas
sahf
fimull
xchg
sub
in
lahf
mov
sub
xorb
in
or
shr
aas
mov
mov
jns
shlb
scas
jl
jl
je
mov
pop
fimull
adc
lcall
fwait
js
inc
dec
jge
and
cmp
jo
mov
add
push
push
mov
pop
jae
push
sbbb
mov
jns
lea
xchg
xlat
jb
push
imul
jge
movsl
fldenv
add
sar
ss
jae
jbe
insl
ja
push
bound
ljmp
cld
adc
cld
je
inc
es
sbb
mov
cwtl
add
cmp
pusha
arpl
sub
gs
pop
nop
jecxz
xchg
xorl
mov
test
cs
mov
shr
cmp
shlb
sbb
jmp
push
mov
lock
dec
fdivrs
jp
mov
mov
das
mov
test
shlb
in
repz
xor
push
jo
xor
es
xchg
rcll
cli
aas
nop
movq
pop
dec
mov
loop
jne
inc
pop
aam
lds
and
mov
daa
rcrb
int
pusha
mov
dec
cli
xchg
push
rcl
clc
or
scas
movsl
push
fst
movsb
ss
xchg
xlat
int
nop
ja
or
jnp
dec
shl
xor
arpl
shll
andl
sbb
mov
mov
cmpsl
jne
pop
jecxz
outsl
mov
xor
nop
mov
mov
or
cltd
bound
mov
add
cmc
inc
sbb
gs
pop
or
and
or
dec
cld
jb
inc
outsb
jns
les
mov
push
pop
cmp
sahf
add
mov
loope
mov
ja
mov
cmp
mov
xchg
iret
sub
mov
in
mov
shrl
fwait
add
enter
pusha
mov
adc
test
inc
sarl
jmp
and
inc
mov
jmp
push
fldt
lahf
movsl
test
xchg
pop
sub
into
test
sbb
out
push
aad
movsb
mov
xor
cwtl
fldl
ljmp
scas
mov
cld
xor
mov
sub
xchg
in
cmp
mov
int3
repz
fcompl
cwtl
inc
shl
lcall
mov
out
sbb
jmp
xor
mov
ret
push
inc
fisubs
sti
out
push
mov
xor
sbb
mov
cmpsb
lods
fwait
xchg
xor
divps
faddl
ljmp
push
dec
pop
shlb
repnz
mov
leave
jb
lahf
dec
jb
fs
inc
sahf
adc
ds
pop
mov
les
sub
iret
push
sahf
mov
movsl
out
sbb
xchg
push
mov
jmp
scas
js
inc
movsl
adc
rcl
dec
sub
mov
iret
add
fisubs
sti
cli
dec
inc
adc
sub
adc
xor
mov
test
mov
cmp
mov
mov
lahf
cmp
push
xor
xor
movsb
add
inc
iret
mov
add
clc
cmpsb
xchg
fstpt
adc
shl
jge
and
setge
cmp
stos
movsb
lret
sbb
and
jle
mov
icebp
mov
repz
loop
xlat
adc
outsl
insb
loopne
and
dec
out
mov
lcall
push
sahf
pop
test
pop
addr16
mov
out
into
cmp
repnz
popf
in
mov
das
mov
out
and
jbe
outsl
outsb
xchg
or
lds
loopne
push
jp
cmp
sar
dec
je
or
sub
mov
xor
fisubrl
dec
push
aam
inc
mov
std
push
int3
cmp
out
rcrb
repnz
add
repnz
andl
pop
push
cmp
mov
mov
icebp
pushf
mov
ficoml
and
repnz
jno,pn
movsb
into
mov
pop
mov
sub
sbb
dec
mov
jns
and
jno
xchg
ret
sub
push
lahf
subl
xchg
in
xor
mov
dec
push
xchg
pop
cld
movsl
int3
jo
adcl
sub
push
inc
shr
cmpsb
pusha
mov
or
add
out
iret
movsb
mov
fwait
popf
inc
out
mov
popf
xlat
dec
and
adc
enter
popf
flds
lods
movsb
je
mov
push
movsb
inc
push
int3
sub
mov
test
jns
shrb
push
adc
jnp
fmull
cmp
sub
data16
aaa
fstpl
outsl
jns
cs
cmp
mov
loope
mov
xchg
cmp
add
inc
inc
aam
cli
mov
negb
push
fbld
push
out
push
sbb
int3
jbe
mov
and
rorl
adc
repnz
jp
adc
dec
adc
popa
adc
mov
jle,pn
fs
lcall
mov
jbe
adc
inc
sub
push
sarb
sahf
ljmp
out
pop
addr16
xor
inc
adc
mov
add
addr16
adc
cli
or
mov
insb
inc
addr16
mov
movsl
push
pop
jb
daa
imul
mov
mov
or
stos
hlt
aaa
sbb
fdiv
dec
mov
repnz
fnstcw
and
jecxz
push
es
aam
aad
insl
in
xorl
sbb
sbbl
cli
add
mov
scas
jl
jbe
cmpsb
adc
or
jb
clc
inc
ljmp
andb
xor
xor
insl
push
sub
or
ss
jge
xchg
push
mov
popa
inc
cwtl
and
addr16
and
insl
or
and
ret
pusha
mov
or
cs
cmp
mov
sub
mov
add
mov
ror
cmpsl
mov
bound
outsl
adc
push
push
mov
sub
mov
js
lds
arpl
push
outsl
jno
int3
push
sub
das
dec
dec
dec
inc
daa
sub
or
lea
out
fidivl
out
cli
call
sub
mov
mov
mov
call
test
pop
clc
rcrb
push
cmp
test
test
add
inc
test
lret
test
daa
repnz
add
je
jle
sti
push
mov
ja
and
mov
pop
scas
out
xchg
pop
pop
pop
sbb
repnz
push
xchg
pushf
imul
xor
xchg
and
add
add
and
jnp
xchg
sbb
aaa
insb
pop
outsb
adc
iret
imul
mov
cwtl
into
or
xchg
js
rolb
outsl
pop
add
sub
stos
subb
test
lcall
hlt
mov
sbb
repz
xchg
sbb
scas
inc
sbb
lahf
ss
rclb
mov
mov
and
jmp
mov
push
inc
fstl
cmpsl
adc
xor
add
xor
and
xor
mov
dec
sub
push
sahf
cwtl
lea
repz
jbe
lea
fcoml
test
enter
dec
fistps
add
cmp
mov
sub
push
fwait
mov
jns
inc
subb
mov
js
mov
xchg
mov
jle
pop
add
push
pop
into
dec
test
loope
push
arpl
cmp
mov
andb
cmp
pushl
cmp
outsb
mov
mov
sub
mov
pop
pop
insl
int
lods
arpl
inc
aaa
xor
dec
mov
aad
xchg
xor
pushf
mov
stos
xchg
shll
test
lret
jmp
lcall
enter
adc
shrb
adcb
mov
and
mov
shlb
aas
pop
imul
add
push
xchg
jl
xor
sub
sub
adc
shr
in
cmpsl
and
lods
or
aaa
pop
in
inc
mov
rcll
mov
cmpsl
dec
sti
jmp
or
mov
mov
push
in
imul
pop
add
nop
xchg
lea
push
in
sbbb
lods
push
or
nop
fwait
ss
jb
shrb
sbb
mov
fwait
push
inc
stos
shlb
loop
fwait
push
cmp
sbb
dec
sub
fdivl
fdivs
adc
cmp
jecxz
jg
lcall
cmp
mov
cmpsb
roll
iret
fdivrs
add
ljmp
in
mov
mov
jbe
jmp
loop
mov
sarl
push
rcrl
mov
mov
xor
xor
push
or
test
sbb
aad
or
adc
dec
mov
shll
dec
test
repz
popa
xor
lods
xchg
lea
and
loop
jge
call
loop
mov
fidivs
pusha
mov
sub
sub
scas
xchg
add
test
dec
mov
mov
ja
dec
pop
dec
dec
fistpl
and
cwtl
or
cmc
xchg
adc
mov
loop
cmp
add
push
aas
jne
bound
mov
nop
sub
dec
fdivs
out
idivb
fstpl
dec
xchg
test
iret
cld
out
mov
leave
mov
inc
or
test
adc
aas
cmp
filds
pop
repnz
jbe
aas
cmpsl
setns
loop
lock
mov
fmuls
inc
sbb
test
xorb
or
fs
push
or
dec
sbb
xchg
in
pop
push
dec
pop
jecxz
sub
sarb
repz
adc
cmpsl
push
addr16
repz
xchg
push
sahf
sub
pop
test
into
inc
in
pop
jo
xchg
mov
ljmp
xchg
add
outsb
push
mov
mov
push
nop
sub
mov
lret
inc
pop
shlb
lcall
mov
sbb
imul
dec
pop
mov
inc
push
adc
lea
jnp
and
rcr
sbb
mov
mov
push
sti
mov
mov
push
cwtl
pop
iret
mov
mov
ltr
shrd
js
sarl
adcl
mov
aaa
or
mov
ret
add
add
mov
pop
out
and
ljmp
xor
push
adcl
div
mov
pop
push
xor
jecxz
lret
sub
rcrl
ss
lods
out
addr16
arpl
adc
test
repnz
pop
xorb
daa
mov
jmp
jbe
xchg
iret
sahf
clc
xchg
mov
fisubl
mov
adc
dec
add
movsb
xchg
inc
leave
jl
and
out
in
dec
push
loop
push
jno
loop
or
sub
in
mov
adcb
stos
shr
add
fsubs
call
popa
mov
insb
xor
les
bound
and
clc
aas
xchg
rcr
mov
xor
push
and
sbb
dec
stos
xchg
jnp
je
cmp
dec
sub
daa
xchg
or
mov
xchg
push
cmp
jg
call
sub
cmp
xchg
lret
pop
mov
lret
inc
and
cs
pushf
inc
test
pop
outsl
xchg
or
and
mov
cmpsl
sbb
test
imul
sub
jl
jae
addb
fiaddl
sbb
sar
cmp
dec
and
push
ljmp
lea
addr16
pop
shrl
bound
cmpsb
pop
leave
popf
stos
lahf
imul
inc
sbb
sbb
ds
call
aam
adc
sub
hlt
sbb
dec
push
rcr
xchg
or
sarb
mov
pop
xor
scas
cmpsl
sub
dec
mov
jb
js
dec
ljmp
dec
dec
rcrl
jle
sbb
test
js
aad
ss
mov
adc
int3
jp
je
pop
xchg
mov
push
dec
push
loop
pop
call
pop
push
add
cmpsl
frstor
push
iret
mov
mov
pop
stos
pop
nop
test
pop
jl
imul
out
es
addr16
fisttpl
mov
jle
push
lret
xchg
cmpsb
mov
ds
pop
and
jb
add
or
push
pop
lds
cmpsb
sub
test
lods
sub
or
addl
rcrl
jnp
and
adc
daa
xor
fwait
jle
aad
movsb
xchg
and
jge
sbb
popa
test
adc
aaa
out
in
popa
in
pusha
ficomps
loope
out
lret
lcall
insb
mov
adc
adc
fcmovnb
lods
sub
out
addb
gs
dec
pop
pop
aad
leave
or
pop
ret
jb
fdivrl
in
xlat
in
pop
fstps
mov
out
dec
ljmp
mov
push
xor
mov
pop
test
jb
test
pop
iret
lret
jo
xchg
insb
mov
pop
rolb
aad
mov
xchg
ficoms
add
sub
out
pop
pusha
jmp
repnz
xchg
jno
sti
dec
out
push
out
mov
ljmp
fwait
repz
addl
jmp
sub
mov
sub
jp
inc
push
jmp
cli
xchg
popl
cmp
insb
jbe
leave
jb
pop
fsubr
addr16
inc
arpl
xchg
std
cwtl
or
sbbl
pop
fidivrl
jo
jne
ficoml
sub
adc
xchg
aas
mov
stc
sub
or
sub
daa
lret
pop
adc
xchg
adc
xchg
sub
jl
jle
in
int3
hlt
xchg
mov
cmp
js
lcall
ret
imul
sbb
bound
sahf
ret
les
mov
jnp
or
push
or
jge
and
cmp
call
or
or
sbb
adc
jno
adc
cmp
push
jno
lcall
mov
dec
pop
cmp
xchg
xor
scas
pop
les
shll
int
adc
in
or
jp
cmp
cmp
testl
xchg
push
jle
push
inc
lea
mov
add
mov
jnp
loope
mov
dec
enter
imull
dec
dec
mov
inc
sub
mov
aam
dec
sbb
push
dec
push
sbb
push
mov
test
inc
das
cmp
push
mov
ja
rep
fsubrs
dec
push
test
xchg
rsqrtps
xor
insb
xlat
push
xlat
dec
loop
test
imul
adc
aad
xchg
or
and
arpl
cld
push
int3
ljmp
ljmp
rcll
mov
sbbb
xchg
and
xor
push
adc
into
inc
pop
sub
push
jmp
fldt
loopne
sub
daa
add
bound
push
push
pop
cmp
xor
ret
and
xchg
out
xchg
push
ljmp
push
dec
mov
mov
call
sub
cmc
outsl
push
int3
pop
ja
mov
test
test
or
cld
xor
int
popf
out
adc
iret
push
test
jne
or
out
xor
das
pop
mov
lods
xchg
inc
jl
sar
and
pop
bound
jbe
lret
loop
femms
push
pop
outsb
imul
scas
inc
and
frstor
push
pop
shrb
gs
das
adc
shlb
clc
stc
std
xor
pop
cmpsb
mov
shl
leave
es
out
and
jb
jle
mov
cld
cli
enter
pushf
int3
cmp
mov
jle
or
sub
loopne
mov
dec
xchg
stos
pop
es
sbb
ret
jge
shrb
dec
sbb
push
and
mov
inc
gs
inc
cmp
je
rorl
shll
pop
xor
or
or
xchg
xlat
lcall
push
int3
mov
xchg
pop
add
pop
js
fimull
sub
inc
xor
jp
sub
mov
mov
das
stos
scas
mov
arpl
aad
mov
mov
sarl
push
push
loopne
mov
push
jnp
pop
lcall
push
out
adc
rcrb
iret
and
mov
pusha
ret
loopne
nop
imul
insb
into
scas
loopne
push
pop
scas
pushf
mov
shrl
mov
pop
cs
cmc
cmp
pandn
das
adc
mov
cmp
or
inc
daa
lahf
sub
sbb
popf
ret
lret
call
sub
cs
inc
stos
mov
shrb
inc
inc
in
xchg
mov
push
add
or
hlt
sub
ss
lret
pop
test
clc
je
data16
pop
jecxz
lea
push
pop
loopne
popa
dec
pop
pop
sub
ja
cmp
and
pushf
test
or
inc
roll
xchg
ja
fisubrl
or
push
fmuls
cmc
xchg
out
pop
jnp
or
adc
lds
sub
out
into
adc
int3
inc
les
shrb
in
lahf
dec
adc
mov
sbb
pop
cltd
in
nop
push
stos
les
pop
je
push
outsl
sbb
adc
jb
pop
je
xor
fidivl
out
dec
sbb
das
int3
jne
fst
adc
loope
cs
lds
mov
sbb
mov
adc
lcall
sub
jb
divl
call
pop
movsl
mov
insb
lcall
divb
xor
lret
loopne
ja
cwtl
push
jmp
push
and
xor
sbb
adc
sub
cmc
pop
xchg
out
jnp
stc
or
xchg
xchg
or
jmp
inc
jge
dec
or
lret
push
xchg
scas
shl
or
hlt
jns
jge
fiaddl
fwait
cmp
mov
enter
es
ret
mov
mov
sub
jp
call
ss
jecxz
stc
mov
and
cmpsl
fwait
iret
loop
stos
loop
cmc
aam
mov
xchg
pop
sub
cmpsl
mov
and
mov
jb
dec
fimull
dec
cs
mov
mov
lock
fldenv
out
inc
push
dec
stos
scas
vphaddudq
adc
repz
pushf
int
fsts
insb
lds
sahf
movsl
add
lcall
adc
pop
inc
aaa
push
or
and
pop
xchg
out
pop
pop
inc
imul
pop
out
outsl
testb
lcall
addr16
pop
repz
mov
pop
mov
add
add
push
jecxz
sub
ds
shll
mov
dec
fistpl
and
bsr
or
mov
mov
add
aam
jno
imulb
sbb
loope
iret
add
hlt
or
int3
icebp
mov
adc
inc
cmp
mov
add
shr
push
icebp
inc
imul
inc
and
mov
jmp
xor
sbb
inc
cmp
jmp
sub
lock
and
push
mov
xchg
fs
outsl
daa
add
dec
jle
push
int3
inc
xchg
sub
jmp
out
sbb
xor
jmp
pop
std
pop
add
in
jp
sub
movb
gs
orb
jg
inc
mov
jle
loopne
mov
cltd
push
std
ljmp
jmp
mov
cs
ss
and
pop
jp
and
subl
cld
jno
test
inc
sub
fiadds
stos
das
test
xchg
shl
sub
cmpsb
out
lret
cmp
jecxz
test
mov
mov
pop
xor
ja
pushf
sbb
push
sub
jnp
addr16
adc
jb
or
fwait
rcr
adc
testb
and
or
push
jmp
mov
gs
andb
adc
adc
add
and
nop
fnstsw
in
pop
test
lods
mov
out
hlt
mov
pop
aad
inc
mov
daa
adc
cmc
imulb
inc
adc
xchg
out
xchg
jnp
stos
stos
leave
cmp
lea
push
ljmp
das
nop
movsb
push
mov
gs
jo
jae
inc
sbb
loopne
lds
add
fistpl
push
imul
adc
outsl
rcrb
icebp
stos
int3
leave
cmp
adc
out
std
adc
lods
sar
shl
popa
mov
lods
pop
inc
add
imul
add
sti
add
jb
mov
repz
sti
repz
fidivrs
push
inc
push
movsb
arpl
add
ljmp
or
shl
shl
jp
aam
pop
adc
fstpt
scas
fistl
mov
jno
pop
hlt
jle
mov
cli
arpl
andb
in
es
adc
cmp
les
icebp
jnp
lods
cmp
fsubl
dec
sbb
out
int
xchg
xchg
cmp
sahf
scas
insb
enter
inc
insb
jbe
test
aad
nop
dec
jmp
leave
mov
pop
xchg
push
outsl
xor
sbb
jle
stc
sub
adc
push
std
test
mov
loop
and
arpl
jbe
sub
cmpsb
ret
std
and
pushf
jp
imul
das
jp
sub
in
cmp
xchg
daa
nop
subb
hlt
imul
insb
pop
in
out
pop
or
ljmp
push
inc
push
mov
lcall
fldl
jp
ror
stc
sub
or
mov
leave
inc
push
or
inc
popl
mov
push
in
es
jmp
aas
mov
adc
add
pop
jb
add
jne
mov
rolb
push
cmp
pop
insb
loope
movntq
out
pop
xor
jns
or
and
inc
popa
and
sub
cltd
jl
jbe
dec
icebp
inc
push
into
loop
or
mov
leave
pusha
jno
inc
sub
cs
inc
jle
sbb
pop
jg
jno
fdiv
pop
jl
sti
push
push
lar
inc
mov
push
mov
push
jp
jo
mov
jmp
jmp
add
add
mov
cli
xchg
in
addr16
rorb
std
jp
dec
mov
jge
movsb
xor
mov
adcl
ss
pop
int
and
sub
pusha
arpl
jnp
popa
ret
push
das
jg
xchg
sub
inc
dec
cmpsl
mov
jo
mov
imull
addr16
test
xor
test
push
fisttps
jae
dec
into
test
jae
cmp
fistl
inc
popa
movsb
adc
test
imul
out
jle
pop
test
test
lea
xor
or
mov
ljmp
loop
rorl
cmpsl
scas
mov
cli
mov
scas
push
jecxz
jmp
dec
loope
sub
in
push
inc
dec
jecxz
ret
jns
mov
shll
xchg
std
cwtl
lods
loope
stos
popl
or
jns
xor
sbb
sbb
pop
cli
xchg
mov
cmp
mov
into
ja,pt
les
mov
and
cwtl
ficomps
andl
sbb
mov
push
or
inc
jmp
repz
jecxz
or
pop
cmpsb
leave
inc
push
jmp
mov
adc
adc
xor
pop
outsl
push
add
fmuls
addb
insb
add
ja
aam
pop
jbe
dec
int3
push
or
shlb
or
jge
aas
rclb
test
and
mov
add
cmpsl
fidivrl
pop
sub
repz
in
push
pop
mov
jmp
adc
sbbb
lcall
or
push
fisttps
cmp
pop
ret
ret
out
xorl
jge
insb
sahf
es
addr16
xlat
imul
adc
jp
mov
dec
nop
jg
or
outsb
pop
aam
cmpl
or
popf
out
loope
inc
daa
lds
mov
and
cld
enter
inc
lcall
outsb
push
inc
repz
cmc
test
push
dec
lahf
dec
xor
push
daa
pushf
fs
ret
xchg
push
jae
xor
int
insb
inc
addr16
sti
lret
or
mov
cwtl
xchg
mov
jmp
pop
mov
cmp
dec
adcb
dec
ret
sbb
push
scas
cli
les
and
cmp
loope
vmovntps
std
sbb
sbb
pop
shll
xchg
pop
cmpsb
jnp
shl
adc
pop
xlat
outsb
xchg
fcmovu
sub
ljmp
mov
inc
mov
or
int3
and
dec
jmp
pop
das
jo
mov
bound
cmp
push
popf
mov
mov
cmp
clc
data16
hlt
dec
in
sbbl
sub
hlt
cmp
add
mov
jmp
sbb
sbb
cwtl
xor
mov
sub
rorl
and
sbb
sbb
or
cmp
dec
pop
jae
decb
mov
jmp
fsubs
sahf
push
push
ss
repnz
jmp
sub
add
int
cwtl
fs
popa
je
test
and
in
mov
testb
pop
shr
jmp
loope
pop
mov
test
cmp
je
sub
inc
add
and
fucomip
xor
les
push
ret
add
pop
lock
jne
mov
push
cltd
push
dec
and
jecxz
imul
and
cmp
xchg
mov
cli
scas
push
hlt
cmpsl
pop
stos
xor
xor
mov
push
test
es
push
lods
es
push
pusha
inc
fiadds
aaa
jae
dec
pop
cmp
mov
cmpsl
or
insl
or
mov
cmp
ret
pop
ret
ret
jne
lock
adc
lahf
fsubl
or
xchg
pushf
out
fsub
jno
jno
and
ljmp
dec
mov
cmpb
imul
jno
cmc
dec
scas
mov
or
std
in
js
gs
cmpsb
fistl
lods
push
cmp
out
fucomip
pop
frstor
xor
fistpll
xchg
stos
pop
fistps
cmp
sub
xor
jne
insb
xor
repnz
fdivr
xlat
in
in
add
fisttpl
adc
cmpsl
jne
mov
mov
sbb
jg
andl
adc
movsl
repnz
ss
or
popf
pop
stos
les
mov
rol
ret
lcall
sahf
test
jo
repnz
and
sbb
jg
push
and
scas
pop
cmp
push
decb
or
jb
pushf
sahf
roll
shrl
pop
and
aas
movsl
mov
in
jno
movsl
jge
mov
pusha
xchg
xlat
aam
stos
call
cmp
push
pop
mov
mov
sbb
movb
mov
ja
in
add
cmp
mov
jne
xor
cmp
mov
cmp
xor
xor
test
imul
cmpsl
mov
fcmovnu
rcll
enter
test
xor
mov
ret
es
es
inc
imulb
aad
xor
dec
and
xchg
and
add
mov
mov
into
lods
loop
dec
sub
jo
sbb
cwtl
cmp
jo
mov
dec
ds
xchg
clc
cmp
mov
out
inc
repnz
ljmp
mov
sub
inc
hlt
cmp
and
jne
dec
and
xchg
jge
inc
aaa
mov
pop
adc
mov
and
pop
cmp
jnp
pop
push
gs
es
jb
adc
shlb
repnz
add
inc
mov
xlat
xor
mov
js
mov
push
imulb
test
mov
aas
movsb
xchg
in
out
jle
pop
pop
int3
push
ljmp
rorl
sub
rcll
adc
dec
mov
cmp
inc
adc
ljmp
std
ret
or
std
ret
lods
stos
fbstp
jge
cld
sub
mov
push
push
mov
loopne
dec
adc
cmp
clc
ds
adc
loopne
push
cld
sbb
gs
pop
insb
xchg
rolb
xchg
sbb
movsb
push
jecxz
hlt
in
std
sti
pop
add
and
ljmp
or
mov
xor
push
movsl
sub
leave
jns
jne
mov
mov
push
imul
movsb
mov
fsts
inc
loopne
rcrl
or
dec
dec
dec
inc
sub
xor
in
jne
xchg
lret
push
ret
les
int
sub
cmpsl
or
jns
and
cmp
dec
pop
sahf
mov
lods
and
xor
mov
gs
aas
fdivr
ja
stos
xor
sub
jns
xor
ficompl
cmp
addr16
in
jp
lods
ljmp
push
pop
push
in
test
stos
jp
addb
jmp
pop
dec
hlt
ljmp
sub
fsubs
mov
sub
sub
inc
jge
inc
sub
mov
xchg
or
jnp
mov
mov
lock
cmpsb
orl
fidivrs
dec
jp
cmc
add
mov
movsb
sbb
xlat
xchg
push
pop
mov
mov
pop
jb
subl
mov
xor
xor
mov
inc
and
notl
test
xchg
push
or
leave
add
and
xchg
scas
rorl
lods
and
and
dec
and
inc
pusha
mov
push
mov
out
push
adc
mov
adc
pop
insb
mov
test
iret
fcoms
cmp
adcb
loop
and
test
xchg
lcall
inc
cmp
pop
jp
aad
gs
movsb
ja,pn
std
ss
inc
pop
imul
scas
pop
mov
mov
ljmp
jb
and
and
xor
inc
out
fistpl
pop
cmpsb
mov
inc
lret
mov
sahf
jo
inc
aad
mov
ret
sbb
shrl
in
rcl
jo
xor
add
xchg
loop
popf
incb
hlt
lahf
ret
rcr
dec
test
sbb
mov
add
fldt
aad
jl
sbb
inc
fwait
inc
daa
push
stc
mov
lcall
in
xchg
mov
fiadds
fiaddl
push
int
push
mov
dec
incb
push
sbb
push
push
sahf
mov
push
push
push
mov
xchg
jno
cs
xlat
pop
push
pop
mov
js
dec
imul
fcomps
jnp
xchg
cmpsb
idivl
out
jnp
cmp
pop
orb
icebp
ljmp
bnd
sub
out
sub
movsl
adc
add
xchg
sub
lcall
mov
insb
neg
pop
or
jp
adc
inc
add
xor
out
push
lret
sub
dec
movsl
xchg
adc
rclb
inc
add
and
imul
mov
or
loope
outsb
pusha
dec
cwtl
in
sbb
fchs
lock
sbb
in
xchg
mov
pop
jns
or
dec
faddl
mov
shl
mov
cmp
outsb
jo
or
movsl
xchg
or
dec
cld
popa
and
dec
cmp
cmp
and
test
je
jns
push
data16
enter
rol
push
les
jle
mov
lret
lea
lcall
test
pop
push
in
aam
adc
lret
loop
push
test
inc
rcl
mul
mov
stos
test
inc
stos
mov
outsl
lea
stos
cmpsb
adc
sub
gs
mov
fcoms
mov
pop
adc
icebp
daa
xor
mov
adc
orb
dec
test
push
jp
mov
xchg
lds
inc
cli
jle
mov
mov
hlt
jl
test
xor
mov
mov
addr16
test
out
enter
std
push
push
xchg
fstpl
jmp
test
push
add
sub
and
cwtl
data16
fsubrl
fdivrs
stos
pusha
cmc
xchg
fcmovbe
popf
lcall
mov
adc
pop
xchg
mov
and
xor
in
jge
mov
mov
dec
jl
sbbl
push
rorl
aad
xor
cmp
xorl
jno
fisubrs
pop
jb
and
gs
jge
insb
sbb
push
or
in
aaa
out
jb
outsb
jno
mov
push
mov
inc
cwtl
or
sbb
xor
pop
popa
fcmove
mov
push
mov
mov
iret
sub
add
inc
dec
jae
cmp
cli
in
int
out
jl
stc
or
sbb
sub
arpl
pop
les
and
xor
xchg
jno
push
dec
cmpsb
cs
sbb
cmp
lods
push
mov
cmp
ret
sbb
pop
in
popa
insl
in
enter
scas
cld
aaa
daa
dec
push
psrad
and
xor
add
sti
jmp
test
push
insl
into
sbb
lahf
mov
aad
jp
clc
sbb
inc
sub
aas
insb
imul
or
lods
outsb
sub
jp
icebp
push
js
rcrb
or
lahf
pop
mov
pusha
mov
mov
push
inc
push
push
xchg
pop
sbb
jp
sub
repnz
and
pop
cs
in
dec
pop
test
in
mov
sub
push
dec
mov
jbe
fwait
fwait
jb
das
ja
pop
sub
push
mov
sbb
repnz
and
push
jle
and
inc
add
and
inc
push
popa
push
sub
sub
in
shlb
fistpll
mov
jmp
jle
sub
cmp
pop
or
ja
jb
xor
cli
out
in
and
mov
ds
rcrl
mov
iret
inc
pop
ljmp
shrl
and
dec
in
in
jne
nop
test
ficomps
push
lea
dec
xchg
cmp
movhps
stc
out
outsl
xchg
pop
xchg
sti
sub
out
fsts
outsl
mov
in
xchg
xchg
jbe
pop
mov
dec
push
mov
hlt
popa
sti
inc
mov
dec
add
mov
push
push
inc
repz
dec
sub
adc
mov
flds
bound
xor
pop
cmp
paddusw
ret
inc
mov
outsb
sarl
stc
dec
orl
and
cmp
das
jb
pop
mov
cmpsb
hlt
jb
dec
outsl
and
jbe
nop
sbb
mov
jmp
iret
enter
jnp
pop
mov
aam
inc
ret
scas
sub
mov
pop
cmpsl
jl
dec
or
jbe
pop
inc
shlb
sbb
push
push
hlt
outsb
test
adc
cmpsb
push
mov
push
sbb
inc
inc
popf
mov
jmp
mov
jp
xlat
sub
outsl
mov
fiaddl
inc
mov
cmp
fldl
inc
push
mov
insb
outsb
mov
push
sahf
addr16
sub
movsb
adc
xlat
ret
mov
or
pushl
xor
fistps
push
jmp
dec
cmpsb
jmp
ss
je
lret
dec
mov
mov
pop
lods
fcmovne
xchg
jno
icebp
shl
and
pop
pop
imul
data16
cmp
pop
jbe
mov
stos
mov
sub
adc
das
inc
mov
or
cmp
and
jae
sbb
loopne
cmp
aam
test
sub
cltd
out
fimuls
mov
pop
dec
arpl
nop
outsb
sbb
dec
sti
xchg
jmp
inc
hlt
popf
push
add
inc
push
dec
cs
arpl
xchg
dec
mov
pop
mov
mov
iret
pop
push
imul
std
pop
xchg
push
cs
test
mov
inc
pop
jae
jl
cmp
mov
or
dec
mov
dec
fists
in
arpl
cmc
mov
push
adc
xchg
rorb
cli
inc
lahf
or
popa
xchg
gs
pushf
cmp
jg
in
sbb
xchg
jge
push
sahf
sti
shlb
js
mov
xchg
and
sub
mov
push
xchg
add
jae
jmp
bound
test
mov
js
lods
pop
and
cmpsb
xchg
repz
sub
ss
push
mov
pop
inc
inc
xor
inc
adc
sbb
enter
xor
mov
inc
jno
mov
push
pop
mov
pmaddwd
arpl
int
mov
sub
out
pop
push
orl
hlt
mov
mov
xor
fstl
popf
inc
btc
xchg
movsb
repnz
jae
rcr
sbb
outsl
push
sub
data16
arpl
jge
loop
fildll
iret
imul
mov
sbb
gs
shrl
pop
xor
out
fwait
lahf
out
mov
xchg
jno
pop
mov
xchg
jnp
push
iret
jge
inc
or
xchg
in
jns
or
inc
mov
iret
mov
cmp
pop
inc
cld
decb
mov
loop
or
mov
ss
fcompl
cmp
imul
aad
xchg
xlat
xchg
or
xor
iret
out
mov
push
xchg
int3
hlt
adc
loop
pop
adc
inc
jle
rorb
ret
pop
mov
je
jbe
pop
adcl
lods
lret
mov
xor
mov
xchg
inc
ss
lea
sub
lds
push
xchg
jge
adc
xchg
data16
mov
addr16
call
mov
nop
sbb
lods
push
repnz
pusha
and
ja
sbb
push
fistpl
sbb
andl
push
call
notl
movsb
scas
pop
adc
jbe
movsb
sbb
jle
cmp
ja
imul
shrb
or
sub
lahf
cmpsb
push
mov
pop
out
loop
adcb
insl
mov
inc
mulb
outsl
pop
stc
inc
pop
sbb
lods
shr
sti
sti
xlat
sbb
ljmp
adc
cmpsb
push
bound
aas
push
int3
and
ffreep
shlb
xor
pop
mov
movsl
pop
scas
popf
mov
pop
dec
movsl
pop
dec
add
roll
push
sahf
jns
jae
jno
push
push
lcall
ja
mov
xchg
pop
pushf
lea
mov
stos
stos
stos
cmp
aad
xchg
ret
js
cmp
add
and
ret
cmp
jmp
mov
cmp
out
or
xor
aaa
pop
leave
fistps
sbb
inc
inc
xor
rorl
cmp
cmp
daa
jp
cmp
aad
push
xchg
ljmp
adc
int3
push
jmp
mov
decb
push
xor
xor
xchg
xchg
push
and
jge
push
loope
gs
and
aaa
xchg
fs
jmp
dec
movsb
lods
pushf
ds
movsb
adc
stos
int3
mov
aas
icebp
xchg
pcmpeqw
jno
xchg
stos
in
loope
fs
jb
push
mov
and
lcall
imul
mov
or
shl
aas
iret
push
adc
test
jge
mov
pop
cmp
push
xor
ljmp
mov
insl
push
push
es
fwait
test
fcomi
jne
addb
ja
std
js
fcomps
xchg
sub
xchg
fdivp
imul
vpcomub
or
lcall
dec
mov
call
dec
js
dec
je
jnp
xor
mov
std
fadd
lret
ds
xchg
cltd
inc
int3
repnz
adc
cmp
cld
cs
mov
add
jmp
ret
out
push
pop
mov
mov
xor
pop
clc
dec
jo
fisttps
dec
mov
clc
inc
add
xlat
cmpsb
mov
xchg
mov
push
push
jge
in
pushf
adc
push
int3
cmp
and
jbe
subb
and
mov
cmp
adc
xor
inc
je
cmp
lea
negb
jbe
and
dec
sub
call
bound
rcll
daa
cmc
push
inc
adc
xor
add
sarl
hlt
mov
add
int3
jb
mov
cmpsb
jl
push
dec
mov
adc
ficompl
jbe
push
scas
push
inc
test
sbb
xor
nop
addr16
loope
jmp
ret
rclb
nop
sbb
inc
xor
mov
push
mov
sti
cs
dec
enter
fmul
stc
out
insb
add
adc
pop
insl
mov
xchg
jle
sbb
lahf
popa
mov
push
mov
cmp
inc
push
jle
popa
sub
ret
mov
cli
xlat
inc
sbb
add
addb
mov
sub
pop
mov
lret
sub
jbe
dec
outsb
mov
nop
cli
adc
push
clc
jecxz
jns
push
xor
add
clc
cmpb
mov
adc
mov
fsubs
sub
and
iret
mulb
xchg
xchg
mov
loope
rcrl
xchg
push
fnsave
pop
push
mov
movsb
insb
arpl
cmp
push
jp
lret
cltd
std
stos
stos
repnz
gs
mov
adc
rcrb
xchg
pop
inc
sbb
test
xchg
jg
mov
sub
mov
fistl
jno
mov
xchg
scas
dec
sbb
mov
and
push
mov
scas
loopne
sub
xlat
mov
imul
mov
es
pop
rcrl
cltd
mov
stc
adc
mov
dec
cmp
xchg
lods
pop
lock
data16
insl
mov
pushf
add
xor
jns
push
dec
adc
mov
imul
jne
loopne
sub
sbb
clc
or
push
adc
movsb
ret
mov
sbb
mov
mov
sbb
or
adcb
dec
jno
cmp
jbe
push
insl
test
cmp
jecxz
xchg
lcallw
pusha
aad
out
mov
aad
cmp
mov
inc
mov
leave
faddp
std
std
xchg
xchg
enter
jns
pusha
sub
lcall
push
aad
rolb
fs
mov
adc
loop
jmp
iret
mov
dec
inc
pop
and
rep
mov
ret
adc
adc
jle
or
rcr
test
out
push
dec
adc
loopne
jl
stc
pop
push
out
iret
loop
sbb
sti
jmp
jae
pop
ret
mov
iret
and
shrb
cwtl
xchg
aaa
sbb
add
arpl
add
dec
and
xchg
add
sbb
mov
push
leave
add
test
mov
fimull
pop
dec
cmp
jnp
pusha
push
lods
lods
add
sub
jecxz
push
push
imul
repnz
add
test
stc
mov
popf
pop
sbb
jl
test
jbe
push
sbb
filds
test
pop
iret
jno
pop
lds
lcall
mov
out
test
je
mov
adc
mov
sbb
popa
jne
jno
ss
shlb
sub
loopne
enter
push
mov
mov
stos
insl
cld
lret
and
push
scas
aad
and
call
jmp
jg
popf
fnstsw
leave
adc
adc
add
jno
xchg
mov
aad
push
jnp
fld1
rcll
jge
xor
jae
push
jnp
imul
pop
popf
or
jge
cmp
push
into
or
loop
jg
lock
push
pop
std
hlt
js
jnp
test
popa
jnp
shrl
popf
pusha
das
mov
lret
jl
icebp
jle
adc
dec
mov
push
mov
in
aaa
int3
loop
mov
and
fmull
dec
push
and
sbbb
shl
ret
loope
in
xor
mov
mov
add
ficompl
inc
mov
cli
sub
mov
and
cmp
dec
enter
mov
fs
lea
jbe
ret
xor
and
cmpsl
clc
mov
jmp
into
icebp
outsl
fistps
jb
sbb
sub
mov
push
bound
bound
icebp
push
adc
imul
in
ljmp
fbld
mov
push
sbb
xor
mov
fadds
push
pop
push
sbb
mov
gs
add
mov
out
jmp
dec
popa
mov
loopne
and
lods
xchg
inc
aad
out
mov
mov
xchg
sarl
js
imulb
xchg
cmc
jb
jo
mov
lock
lret
pusha
and
ret
and
insb
xchg
mov
cmpsl
arpl
or
ss
insl
lds
movsb
add
aaa
repnz
pop
int3
das
mov
pop
pop
mov
mov
js
fld
mov
fld
lea
addr16
out
xchg
xor
mov
lahf
inc
jns
idivl
lods
rcrb
outsb
xchg
shll
mov
daa
push
mov
in
jb
inc
repnz
or
shll
popf
or
popf
add
rcr
and
movsl
sbb
mov
cmp
mov
inc
add
les
ja
cmp
and
cmpsl
cs
ds
inc
fdivrs
orl
aad
and
sub
xlat
xor
or
pop
pop
cmp
pop
insb
push
mov
test
scas
add
lods
adc
rorl
sahf
cmp
mov
jns
xchg
xor
push
pop
icebp
out
pop
ret
or
out
in
rcrb
xchg
in
or
mov
sub
sti
mov
xchg
enter
cmpsb
ds
xchg
mov
jns
inc
or
dec
cld
ja
popa
fwait
mov
insl
das
cmpl
sub
sub
insb
mov
mov
and
and
dec
in
insl
mov
scas
mov
repz
push
mov
xchg
in
add
cmpsb
imul
sbb
add
fildll
mov
nop
or
push
ja
test
ret
or
add
fwait
dec
add
dec
push
cmp
mov
xchg
push
lret
push
mov
inc
dec
adc
dec
popf
xchg
sub
jecxz
mov
or
test
cwtl
xchg
jmp
cli
mov
jb
pop
pop
arpl
dec
cmp
mov
mov
mov
popf
mov
repnz
sub
cmc
das
jle
or
icebp
inc
jle
sbb
xlat
add
dec
xchg
xor
imul
push
mov
call
pusha
es
or
jae
push
icebp
shll
imul
add
cli
xor
flds
or
xchg
divl
or
jp
push
mov
pop
rcr
inc
sbb
pop
aam
cmpsl
cmpsb
stos
sbb
or
icebp
mov
shr
out
imul
push
push
test
ds
aad
repz
test
pop
xor
mov
imul
ret
cmp
adc
stc
mov
aas
ror
fidivs
mov
fucomp
mov
ret
cmp
int3
or
out
movsl
push
push
and
and
pop
out
sbb
adc
cmp
dec
outsl
fimuls
test
shll
sarb
sbbl
mov
adc
sub
push
jge
mov
mov
pop
imul
hlt
lret
mov
ljmp
iret
das
jne
or
stc
nop
iret
out
and
out
loopne
adc
mov
xor
out
jne
sub
arpl
ret
sbb
ror
or
mov
in
leave
nop
int3
push
xchg
xchg
lods
scas
hlt
mov
jecxz
and
lahf
lock
sub
aad
mov
adc
shll
xchg
pop
lock
mov
mov
mov
pusha
cmp
xchg
icebp
xchg
mov
adc
xchg
bound
jp
push
add
mov
adc
pop
xor
push
call
andb
rorl
pop
mov
jmp
aam
push
mov
pop
sbbl
pop
or
aas
push
jmp
in
push
lret
push
adc
mov
push
sub
ficompl
clc
mov
cmp
push
adc
xchg
call
mov
dec
push
jb
out
push
mov
and
pop
push
dec
xorb
pop
or
xor
loopne
fcomp
adc
xor
xchg
ss
das
int
cli
sbb
insl
out
sbb
push
rcrb
cmp
ss
mov
xchg
lods
sub
mov
xor
adc
lods
hlt
mov
fmuls
out
mov
aam
ljmp
sub
test
jae
stc
xchg
int
mov
out
iret
push
jg
aaa
ss
or
add
cmp
aam
and
enter
push
fldpi
dec
sub
jno
xor
sti
test
roll
pushl
pop
and
gs
in
mov
adc
fldenv
cld
lds
cmp
scas
xchg
sahf
and
jg
shrl
push
test
mov
addr16
nop
fidivl
imul
loop
lea
outsl
or
sbb
sbb
cwtl
sarl
and
pop
sub
orl
cmp
xchg
jge
out
data16
push
xchg
aaa
and
cs
and
out
je
mov
mov
mov
dec
iret
push
inc
xor
into
inc
lahf
xchg
xor
cmp
or
inc
mov
mov
out
ret
addb
xchg
xor
test
dec
inc
pop
inc
inc
data16
jns
cld
xor
scas
mov
pop
or
mov
roll
cmp
clc
loopne
and
out
das
rclb
stos
iret
adc
xchg
call
ret
mov
or
or
xor
xor
dec
sbbb
fcmovnb
in
mov
es
add
cmp
nop
fcoms
test
imul
rorl
mov
jge,pt
sub
xor
imul
adcl
rcl
lea
jo
xor
or
les
rorl
adc
fsubp
or
mov
into
cmp
push
dec
add
fadds
js
clc
mov
cmp
hlt
inc
xchg
inc
cltd
popa
cmp
mov
imul
jle
or
jns
rorl
popa
adcb
in
mov
sahf
stos
outsb
cmp
adc
cli
mov
mov
lods
push
inc
nop
sbb
adc
in
incl
clc
aas
mov
sub
jb
daa
jns
mov
cs
lods
leave
push
sbb
mov
ficomps
jno
xchg
int3
dec
mov
mov
pop
ret
add
mov
mov
lahf
mov
add
sub
es
push
add
and
xorb
and
add
xlat
sub
mov
jge
fsubrp
pop
xor
imul
mov
push
or
sbb
or
test
inc
sub
fxch
es
loope
cmpsb
or
cmp
arpl
std
nop
out
int
inc
popa
dec
fcompl
inc
dec
dec
lcall
lret
adcl
stc
cmpsb
push
into
movsl
xchg
pop
sub
pop
das
cmp
rcrl
dec
bound
mov
testl
mov
inc
inc
and
xor
out
fnstenv
fisttpll
mov
push
stos
data16
fcompl
push
fmul
push
xchg
sarb
mov
xor
sbb
mov
cmp
mov
pop
ret
lods
rcr
sarl
lods
and
rol
inc
into
cs
jbe
xor
xchg
lret
jns
out
dec
sbb
add
inc
addr16
xchg
push
divb
hlt
cwtl
daa
adc
enter
add
mov
add
pop
arpl
dec
jmp
stc
ja
mov
sbb
aad
or
stc
adc
and
or
in
jmp
insb
inc
call
jb
xor
pop
xchg
dec
mov
add
push
dec
adc
mov
fwait
scas
xchg
add
inc
mov
imul
sbb
fisubrs
or
mov
cwtl
mov
pop
mov
add
fcom
std
aad
push
enter
cmp
pop
mov
mov
adc
adc
sti
cs
je
push
push
mov
repnz
cmc
cmp
rcll
js
test
mov
add
mov
inc
sub
mov
mov
rcll
ss
imul
and
mov
mov
adc
xor
insb
jg
mov
sbb
gs
push
movsl
push
fsubs
mov
ljmp
mov
inc
js
fmul
mov
pop
mov
clc
sti
xor
test
outsl
mov
push
mov
test
leave
bound
std
and
bound
pusha
mov
lea
adc
mov
nop
add
inc
xchg
sbb
sbb
cmp
pusha
dec
jae
xor
popa
push
loope
pop
rcll
sub
or
imul
std
dec
pop
lea
sub
movsb
mov
mov
shll
fidivs
shrb
inc
ljmp
ss
ljmp
cli
dec
cld
sub
sahf
push
mov
je
imul
mov
sub
dec
pushf
pop
cmpsb
jl
dec
out
push
inc
push
popa
sub
adc
mov
sub
push
into
cmpsl
or
xor
pop
push
and
adc
stc
jecxz
les
add
out
push
push
test
cmp
into
pop
and
lds
lcall
cmpsb
dec
inc
xor
adc
push
pushf
jp
push
mov
outsl
loop
lds
mov
pusha
into
leave
fcomp
push
push
mov
and
mov
cltd
mov
js
je
cli
or
push
xor
gs
movsb
leave
cs
xor
cmp
add
clc
or
cli
cmp
sub
and
movsb
iret
jbe
je
jmp
das
adc
clc
dec
sbb
ss
jl
stos
stc
lret
inc
loop
adc
sbb
mov
popf
xor
pop
dec
push
movsb
aad
or
jle
add
add
fs
cmp
rorb
fisubs
pusha
jne
insb
ret
pop
ret
push
and
fstpl
pusha
iret
mov
out
cli
invd
push
popf
mov
outsb
sbb
jl
mov
leave
adc
add
cmpsb
inc
adc
and
and
sub
or
cwtl
mov
bound
mov
stos
lock
lods
lock
outsb
push
cmp
jl
gs
and
adc
pop
jb
in
pop
jg
ds
sub
test
daa
repnz
inc
push
xchg
in
mov
mov
inc
std
sbb
xchg
mov
and
push
push
pop
mov
dec
outsb
sarl
jg
iret
rorb
std
in
pop
bound
decl
mov
push
add
and
inc
hlt
ss
into
push
inc
adc
ss
jnp
cmp
inc
movsb
push
or
push
sbb
orl
or
in
push
ss
jecxz
or
dec
jmp
int
in
repnz
jmp
popa
out
rcr
cmp
int
xchg
dec
cmpsb
cmp
push
aaa
sub
test
sbb
in
xchg
mov
cmp
subb
hlt
es
nop
mov
add
int3
xchg
hlt
jns
lods
jmp
or
loope
jae
sub
xchg
push
fiaddl
and
sahf
js
insb
enter
inc
jl
cmp
jmp
add
mov
dec
in
xor
fcoml
aam
sarl
mov
adc
dec
xorb
in
aaa
mov
jae
or
mov
mov
ss
add
cmp
ja
dec
movsl
sub
aad
jecxz
xchg
in
dec
test
and
ljmpw
psubusw
xchg
ret
adc
ljmp
out
pushf
xor
ret
ret
mov
inc
mov
test
inc
and
in
dec
jge
pop
pop
and
into
shlb
jg
das
adc
or
push
mov
push
dec
push
fldcw
mov
and
xlat
pop
popf
jmp
adc
or
int
movsb
sbb
sbb
xchg
pop
or
pop
push
mov
sub
cmovno
add
rolb
sbb
xchg
add
nopl
in
sbb
ret
aad
push
subl
lcall
mov
outsb
iret
xchg
and
mov
push
fdivl
mov
call
rcrb
lods
fiaddl
push
mov
mov
shl
xchg
hlt
mov
cmp
inc
and
jle
insb
scas
mov
push
push
jns
fimuls
rcrl
xchg
push
cmp
popf
aaa
xchg
cmp
inc
jno
fdivrs
dec
pop
adc
pop
aaa
in
mov
jne
addr16
pop
movsl
cs
or
or
adcb
jle
push
push
enter
mov
add
sarb
cmp
out
xchg
cmp
xor
fsubrs
mov
pop
and
lods
jle
push
outsl
sub
add
mov
jg
mov
lods
shlb
sbbb
repnz
mov
dec
push
push
sbb
mov
or
gs
js
mov
mov
js
ss
sub
cmp
das
add
xor
push
sahf
in
out
push
test
sub
mul
pop
inc
xor
and
jp
ret
dec
mov
out
mov
shll
and
dec
mov
aaa
pushw
stos
sub
sub
gs
cmpl
fmulp
lcall
pop
outsl
subl
insl
xlat
aam
sbb
arpl
js
ret
lea
lods
dec
cmc
mov
jnp
mov
dec
ficoml
cmp
icebp
adc
add
pop
xchg
mov
mov
pushf
sbb
mov
mov
add
movsb
cwtl
jmp
fdivrs
popf
fldenv
cwtl
add
add
scas
pushf
jb
dec
enter
mov
ret
cmp
jmp
cmp
inc
inc
mov
int
test
or
lcall
xchg
jmp
fs
lods
imul
cmc
ss
mov
nop
jnp
push
cmpsb
xchg
mov
mov
add
pop
push
jns
add
adc
iret
lods
stc
jno
sbb
adc
dec
ret
push
mov
in
cmpsb
movsl
bound
lahf
jge
xor
fidivl
push
cmp
or
lea
pop
xchg
icebp
adc
or
jbe
xchg
dec
in
pusha
lods
iret
subl
cmc
ja
jb
inc
inc
adc
repnz
pusha
push
lahf
pop
std
or
xor
data16
stos
add
sti
and
fsts
cltd
pop
jge
xchg
jle
inc
inc
movsb
mov
mov
sub
test
icebp
aad
cmp
sub
es
icebp
and
insl
push
cli
nop
sub
sbb
daa
sub
add
stos
fs
out
sbb
jmp
arpl
xor
popa
or
mov
mov
mov
adc
mov
icebp
shll
outsb
dec
mull
inc
xchg
sbb
jne
dec
in
in
in
vpmacsww
test
lods
xchg
inc
add
insl
jg
jmp
fcompl
sahf
jo
imul
ret
pop
insb
inc
out
cmp
pop
out
fidivrs
gs
lahf
aad
mov
jp
sbb
xor
or
clc
jb
test
repz
mov
push
mov
test
push
or
pusha
in
or
adc
out
xchg
cmp
mov
nop
test
subl
mov
mov
ljmp
mov
dec
int3
mov
lds
xchg
push
jne
or
mov
mov
jl
js
lds
fdivrs
xchg
xchg
xchg
xchg
out
or
pusha
cmp
insl
mov
sub
cmpsb
dec
clc
sbb
lods
ret
cmp
cmpb
js
xlat
ret
pop
scas
ret
xchg
je
mov
mov
nop
inc
gs
inc
fcomip
sub
cmp
fnsave
cmpb
mov
xchg
shl
and
inc
cmp
cmp
outsl
sbb
ja
into
mov
add
cmp
push
bound
dec
xchg
mov
push
push
mov
jmp
push
sub
testb
adc
sub
lcall
and
inc
xchg
inc
push
nop
adc
js
pop
enter
js
clc
mov
dec
mov
sub
movsb
jmp
xchg
fcoml
lcall
aad
push
xchg
push
les
mov
test
adc
into
mov
pop
and
and
popa
ss
ret
cli
fcom
enter
ss
lahf
xor
add
movsl
xor
out
clc
ljmp
mov
and
adc
mov
outsl
mov
imul
out
add
dec
rol
mov
xor
das
lock
mov
sahf
leave
or
pop
ja
and
icebp
notb
call
push
xlat
subb
add
bound
je
sub
movsl
cmp
mov
jmp
imul
and
inc
lcall
in
lods
and
mov
or
fs
jb
sbb
test
sub
insb
mov
sbb
sub
nop
xor
mov
sahf
pmovmskb
lret
sub
mov
xor
jle
hlt
xor
cmp
lret
pop
jb
scas
aam
mov
xor
scas
add
sbb
xchg
lahf
cld
dec
push
xchg
jbe
mov
mov
cmp
nop
icebp
push
add
inc
push
sbb
push
cmpb
stos
add
jg
mov
js
adc
ljmpw
push
xchg
iret
fwait
mov
sbb
add
and
lea
sarl
mov
sar
sub
dec
sbbb
sbb
cwtl
adcb
insb
jb
mov
sub
cs
bound
mov
push
pop
and
insl
mov
test
nop
shl
pop
lret
push
lahf
push
into
and
sbb
inc
addb
cmp
sub
xor
test
pop
jmp
es
and
enterw
add
fnstenv
pushf
sbb
pop
mov
stos
cli
sti
movsl
mov
jno
int3
test
icebp
sbb
mov
add
dec
std
lock
mov
movsb
pop
xchg
mov
test
gs
xor
sbb
aam
push
mov
popa
fadds
addr16
adc
mov
push
sub
test
addr16
mov
and
js
inc
stc
lahf
sbb
js
push
sti
jb
nop
mov
or
rorl
jle
gs
add
add
add
popa
orl
mov
mov
mov
mov
or
jl
push
jp
inc
js
xor
ds
imul
imul
or
and
sbb
dec
into
dec
stc
dec
mov
shll
ljmp
mov
dec
add
lret
dec
add
push
and
aaa
aas
push
push
mov
pop
scas
stos
lcall
hlt
sarb
jp
or
iret
mov
mov
sub
nop
and
cli
xchg
mov
insl
int
mov
cmc
and
shlb
push
mov
xor
adc
lock
xchg
mov
push
xor
mov
push
call
arpl
into
sbb
lahf
and
inc
in
lcall
xor
and
push
out
leave
push
jle
pushf
addb
and
ja
xor
and
jae
daa
dec
in
scas
and
insb
mov
cltd
sti
xor
adc
scas
adc
and
jmp
mov
fmuls
bound
pop
fldt
sub
and
shll
xchg
pushf
dec
adc
shlb
xor
add
or
mov
sub
or
jmp
nop
cmp
repnz
jae
adc
lock
xor
xchg
jne
jnp
xchg
pusha
push
psubusb
clc
bound
aam
das
push
adc
call
test
sub
jp
gs
sti
mov
dec
mov
stc
insb
arpl
scas
fwait
jae
add
inc
adc
or
push
addl
out
rcrl
adc
lods
xor
fildl
or
jnp
sub
inc
aam
jb
jb
icebp
pop
rorl
shll
mov
or
and
scas
fs
mov
into
mov
add
loope
cmpsl
jae
pop
sub
mov
lret
insb
rcl
and
jg
popf
jb
pop
cmc
sahf
fwait
mov
or
sbb
inc
lahf
cltd
rorl
jmp
dec
std
movsb
cltd
das
mov
mov
sub
cmp
enter
jl
shll
mov
int
inc
pop
fnstcw
jmp
push
sarl
mov
fyl2xp1
testl
push
sub
jmp
arpl
mov
dec
mov
push
data16
or
outsl
adc
jno
jb
ror
cltd
int3
add
rolb
test
mov
jmp
or
iret
aaa
pop
ljmp
scas
insb
scas
into
xchg
ret
mov
sbb
lahf
addb
inc
lcall
cs
pop
dec
mov
xor
jae
imulb
int3
push
ss
fldt
ja
mov
scas
xor
ss
jmp
fld
adc
loop
cwtl
push
dec
pop
and
clc
pop
lods
fidivl
repnz
imull
xchg
cmp
jne
gs
test
stos
or
out
addb
xchg
cmp
sub
fisttps
and
fcompl
scas
imul
and
inc
add
daa
jl
out
push
push
push
outsl
adc
mov
in
nop
out
mov
xchg
nop
dec
cmp
cmp
xrelease
mov
pushf
fistpll
out
loopne
jmp
js
push
in
hlt
xchg
adc
ljmp
pop
pop
mov
push
dec
xor
jnp
mov
fdivs
inc
testb
cli
mov
scas
test
adc
jg
out
jle
ds
rcr
mov
inc
push
jg
jge
adc
sub
call
and
sub
mov
outsb
outsl
cwtl
pop
dec
add
pushf
xchg
cmp
push
cwtl
push
xlat
loope
inc
std
lahf
mov
faddp
and
mov
pop
jns
lea
test
popa
stos
stos
jle
mov
out
lahf
das
pop
push
aad
jns
mov
xchg
mov
push
cli
idivl
jmp
xchg
mov
cmp
lods
inc
jne
lock
es
int3
fimull
ljmp
leave
dec
fwait
subb
and
and
jns
cwtl
xlat
mov
dec
or
push
mov
sub
inc
xchg
es
or
inc
jno
push
cmp
mov
sbbb
les
pushf
cmpsl
test
mov
fisttpll
cmp
adc
pusha
loop
div
js
dec
mov
or
sub
adc
lahf
sub
shlb
daa
dec
imull
sub
mov
jmp
sub
mov
lret
or
push
mov
data16
dec
pop
repz
sarb
je
mov
sub
mov
lods
mov
sbb
jmp
cmp
shll
scas
daa
mov
addl
adcl
js
or
outsl
into
dec
lea
imulb
pusha
sbb
lock
loop
sub
mov
ljmp
rcll
inc
adc
idivb
icebp
stos
mov
mov
out
mov
cmp
std
hlt
lret
or
out
jnp
es
jbe
ss
jmp
adc
outsl
lds
repz
inc
shlb
sbb
sbb
jbe
mov
and
fistl
gs
int3
pop
mov
dec
mov
into
cmpsb
add
sub
outsb
mov
imul
stc
pop
xchg
test
sbb
dec
imul
lods
jecxz
pop
xor
cmp
xor
sbb
cmc
movsb
or
push
xor
lret
mov
clc
cld
adc
negb
in
and
xor
pop
dec
cltd
dec
pop
lcall
addb
mov
xchg
mov
clc
cmp
mov
lahf
push
and
mov
jecxz,pn
scas
mov
mov
xchg
out
das
daa
cmp
cmpsl
icebp
pop
rorb
and
cmp
jp
aaa
repnz
into
or
dec
dec
nop
ds
or
mov
sub
adc
test
aam
mov
inc
mov
mov
mov
adc
add
sbb
push
mov
cltd
mov
push
mov
or
nop
fidivrl
loopne
cmpsb
stos
xor
adc
inc
mov
jo
test
fwait
pushf
push
lock
das
sahf
pop
push
aam
pop
fdivl
mov
push
addr16
mov
imul
movsb
xlat
cmp
and
aas
xchg
mov
mov
dec
inc
shlb
add
sub
inc
jmp
mov
mov
mov
adc
adc
ds
ja
mov
insb
and
xchg
adcb
arpl
test
out
daa
std
outsl
and
or
insl
cmp
jbe
cs
xchg
jp
pop
loopne
pop
stos
inc
jbe
nop
movsb
jecxz
ss
mov
mov
push
loop
pop
jo
and
cmp
sub
dec
into
stc
sub
xor
push
dec
test
mov
mov
add
xor
or
add
cmp
fbld
adc
pusha
add
in
ror
mov
jp
iret
fs
add
cmp
sub
arpl
sbb
fwait
push
sub
xchg
pop
loop
inc
mov
test
mov
aaa
lcall
xchg
leave
lahf
dec
adc
mov
push
pop
mov
out
pop
mov
mov
sahf
and
clc
imul
mov
push
mov
cmp
jp
inc
mov
inc
adc
popf
mov
dec
ja
rdmsr
repnz
cmp
mov
je
cld
pop
inc
cli
sub
xchg
sub
jns
jne
testb
lods
pcmpgtw
mov
push
enter
lea
cld
pop
xlat
push
pop
sbb
mov
movsl
push
lahf
mov
xor
adc
lahf
add
out
mov
cmp
outsl
dec
out
test
xor
xchg
jle
xchg
dec
sti
jmp
push
cmp
test
mov
mov
ret
inc
pushf
int
in
movsb
or
rol
cmc
push
xchg
cmp
xlat
xor
pop
dec
xchg
jbe
pusha
rorb
lock
dec
inc
fisubrs
mov
js
mov
fdivrs
fiadds
into
cmp
nop
adcb
or
push
xor
mov
push
scas
pop
jg
incb
xchg
push
lcall
fwait
shll
and
xor
imul
jnp
and
cmpb
cli
cmp
leave
pop
ljmp
bound
mov
inc
mov
lods
push
pop
push
test
or
rolb
push
in
pop
stc
sub
sti
jge
dec
out
sbbl
and
sub
je
pop
and
idivl
cmc
or
out
and
mov
lret
or
mov
jbe
loop
jl
arpl
and
scas
test
imul
iret
ficoml
xchg
xor
xor
ja
jne
cltd
and
scas
aas
lds
out
test
mov
popa
add
js
cmp
mov
add
inc
cld
int3
cmpsb
sub
jnp
dec
test
push
sarl
mov
mov
test
stos
shrb
xchg
dec
mov
repz
leave
mull
push
into
mov
sarl
xlat
out
popa
mulb
es
sbbb
lods
fisubl
notl
dec
std
daa
std
mov
mov
outsl
mov
imul
outsb
aam
push
mov
push
fs
push
in
jge
cld
or
subb
jnp
in
add
je
or
xchg
in
dec
out
popf
mov
mov
cmpsl
daa
push
icebp
mov
js
mov
sahf
push
sbb
or
lret
loopne
arpl
lret
insb
cmp
hlt
inc
je
or
fwait
push
fwait
pop
shrl
inc
cwtl
jge
lods
sbb
push
ljmp
jmp
mov
shll
mull
movl
push
sarl
jge
xchg
pop
xor
dec
sub
cmp
push
dec
jno
xchg
jle
mov
fldcw
sbb
or
lds
dec
cmc
mov
or
aad
jmp
pop
xor
filds
pop
sbb
dec
enter
ja
subb
mov
cs
push
jmp
add
fbld
mov
test
pop
pop
jns
testl
inc
sbb
fdivrs
jge
sbb
ror
es
add
scas
fisubs
loopne
popa
in
stos
jle
inc
das
mov
cwtl
out
ficoml
inc
mov
and
dec
stos
mov
lret
jg
cmpsb
stos
jbe
jnp
xorb
test
mov
into
xchg
dec
fstpl
mov
movsl
xchg
lock
mov
add
pop
sahf
jo
cld
test
lock
shrb
pop
xchg
jne
or
adc
or
mov
aam
or
arpl
in
loope
and
sar
rolb
inc
cmp
dec
es
xchg
test
cmp
stos
and
mov
fcompl
pop
dec
fwait
decl
mov
loopne
shl
mov
jge
lds
dec
jno
sti
adc
mov
adc
into
cs
xchg
cmp
cmp
mov
pop
inc
jp
inc
jb
inc
inc
jmp
dec
xor
icebp
xchg
push
jmp
call
mov
sub
outsl
stos
lods
jg
inc
dec
pop
imul
xchg
int
xchg
jge
inc
add
stc
pop
ljmp
cmp
xor
daa
mov
xchg
das
out
cmp
scas
mov
rcll
ss
arpl
repnz
into
test
and
mov
mov
fadd
xor
inc
mov
subb
rcr
fwait
jle
mov
mov
pop
fs
mov
ljmp
xchg
xchg
ret
pusha
das
iret
adc
pop
push
shlb
pop
je
popf
clc
pop
mov
or
test
popf
dec
fildll
cmp
jo
mov
enter
lods
je
sub
mov
test
and
xchg
cmpsb
cmpsb
pop
push
cltd
mov
in
sbb
std
mov
je
movsl
mov
add
lock
xor
sub
clc
mov
mov
cmp
sub
sub
push
pop
int3
push
push
jecxz
add
push
je
jo
std
mov
push
pop
mov
sbb
out
dec
sti
stc
mov
xchg
xor
sbb
nop
sbb
ficoms
mov
jg
imul
sub
xlat
and
jp
into
xor
dec
mov
push
jns
sbbl
xchg
rcrl
or
in
aaa
mov
pop
xchg
bound
ret
fbstp
rcll
xor
mov
mov
mov
js
mov
pop
lock
mov
vmulpd
push
mov
out
bswap
mov
fsubp
jae
stos
add
pop
mov
pop
mov
adc
imul
xchg
sub
pop
mov
test
cmpb
jnp
int3
pop
xlat
mov
jno
or
js
pop
xchg
sbb
out
jbe
dec
and
push
pusha
and
fistpl
and
mov
int3
jne
dec
jae
pop
shlb
pop
subl
pop
pusha
cmp
xchg
jg
mov
mov
fbstp
lock
or
sbb
rolb
jecxz
lods
cmp
adc
bound
cltd
fildl
mov
xchg
lds
add
sbb
ret
in
mov
and
sub
sbb
lret
adc
aam
sbb
hlt
sbb
decb
into
push
vpermilpd
lcall
out
push
xor
stos
shl
sar
sbb
insl
and
inc
or
sub
movsl
or
rcrb
fidivs
rcll
das
dec
xchg
ret
cld
pop
in
cli
mov
jne
sbb
movsl
cmp
test
ds
lock
push
int3
icebp
ret
inc
lahf
xchg
out
sub
cmpsb
mov
dec
les
mov
jecxz
nop
xchg
add
mov
jmp
fisubrs
sub
aas
inc
mov
test
cmp
pushf
mov
cmp
inc
imul
pop
xchg
or
add
cmp
sub
mov
sahf
ja
mov
mov
jbe
dec
fs
mov
arpl
loope
nop
stc
icebp
clc
lret
in
dec
mov
dec
insl
ret
xor
test
mov
sub
xor
adc
mov
mov
adc
jo
mov
es
sbbb
mov
push
mov
dec
cltd
lea
out
xchg
inc
and
push
or
movhps
jns
and
cmpsl
xchg
ja
or
jecxz
sbb
or
out
and
push
jno
add
push
rcll
xchg
adc
sbb
sub
jle
xcrypt-cbc
cmpsl
pop
in
stos
addr16
mov
rolb
lret
add
or
adc
daa
mov
mov
jno
mov
fstpt
mov
fcompl
sbb
xchg
test
xchg
das
push
dec
sahf
and
rolb
mov
and
adc
cmp
pop
mov
dec
cmp
xor
xchg
scas
shll
aad
or
inc
add
mov
or
lock
xorl
jge
mov
movsl
inc
movl
jbe
mov
ficoms
xchg
jg
mov
push
clc
enter
orb
je
mov
imul
adcl
popa
dec
sub
fldt
or
push
sub
pop
jmp
and
test
js
and
jp
mov
iret
cmp
jmp
out
pop
pop
jae
cs
ret
jne
outsl
jmp
in
cltd
mov
sbb
test
std
cltd
shrd
dec
outsl
dec
daa
lods
leave
in
arpl
mov
cmp
push
dec
inc
or
pavgw
mov
cwtl
push
pop
fidivl
dec
xchg
xchg
call
mov
mov
pop
mov
add
xor
sbb
fistps
cmp
bnd
out
push
std
dec
jmp
xorb
push
fidivrs
data16
inc
sub
movswl
adc
movb
or
jg
fstps
sbb
jmp
dec
mov
cld
sub
cmp
out
jle
and
imul
fbstp
mov
lret
js
out
dec
clc
jp
gs
inc
jne
dec
dec
cmp
call
push
imul
add
shll
push
sub
cmp
pop
adc
fisubrs
xor
aad
cmp
sbbb
aas
js
jae
test
mov
jno
andl
mov
pop
add
or
rcr
test
es
lcall
dec
mov
movsl
ljmp
fs
aad
repnz
leave
or
outsl
in
jne
movb
and
cmp
rclb
imul
dec
inc
or
add
cmp
fs
subb
dec
dec
inc
aam
jo
ss
or
out
add
lahf
cld
cmc
xor
lret
fisubrs
popf
mov
jg
lock
pop
insb
out
idivb
mov
cs
js
mov
fwait
jg
fsubs
adcl
cltd
jle
js
pushf
je
sbb
movsb
bound
outsb
inc
icebp
les
jo
lock
adc
mov
lret
test
mov
pop
cmc
pushf
sti
pop
dec
adc
inc
sarb
inc
out
leave
ja
loopne
mov
icebp
outsb
in
mov
call
and
mov
push
inc
pushf
fwait
lock
sub
cmp
repz
arpl
or
andb
inc
xchg
fldcw
mov
pop
mov
add
imul
cmp
addr16
xor
aam
daa
ret
aam
fisttpll
xchg
jle
push
movsl
jb
push
sub
push
lret
test
lock
push
mov
xlat
stc
pmaxsw
push
jmp
xor
mov
cmpsl
aaa
xor
sbb
dec
add
pop
mov
hlt
ret
shl
pop
xor
sarl
mov
arpl
aas
loopne
inc
addr16
and
cs
and
int3
lret
inc
enter
jle
mov
mov
pusha
sub
sub
jb
or
mov
mov
sahf
out
loopne
mov
daa
nop
movsb
sub
mov
int
cmpsl
cli
adc
lcall
pop
int3
insb
dec
pop
daa
out
push
mov
ror
sbb
jns
mov
scas
jnp
jb
push
sbb
gs
push
movsl
ret
mov
push
or
fs
aad
int
and
divb
add
into
push
sub
and
inc
stc
pop
sub
dec
jnp
mov
dec
ja
rcr
mov
dec
scas
into
cmc
stos
les
in
add
inc
adc
shl
int
insl
aam
cmpl
mov
push
stc
scas
sbb
sti
mov
dec
inc
xchg
xor
inc
mov
mov
mov
insl
mov
mov
lock
sahf
icebp
push
sti
jge
orb
out
in
out
lods
out
cmpsl
lahf
mov
fisttpl
scas
repz
repnz
fmul
mov
jle
rorb
movsl
xlat
shlb
mov
test
int3
cmpsl
mov
push
inc
xchg
dec
stos
sti
test
test
mov
sbb
movsb
jo
movsb
sti
fisttpll
jb
fwait
mov
push
scas
fsubrl
push
dec
gs
xchg
jge
shrb
sbb
jbe
icebp
adc
dec
fwait
mov
or
xchg
xchg
and
dec
mov
jmp
shlb
cmpsl
maxps
and
mov
sti
or
adc
outsb
mov
jo
cmp
out
sbb
lret
addr16
fwait
rorl
lock
cwtl
pop
shr
pushf
cmp
loop
loopne
pop
fsub
fdivrl
mov
addr16
dec
xor
ja
loopne
adc
jb
add
adc
xchg
cld
js
popf
jbe
rclb
cwtl
pushf
mov
mov
dec
xlat
push
mov
loop
jle
inc
es
fadds
fwait
adc
fwait
es
cmc
repnz
rcrb
push
rorl
mov
fwait
xchg
cmpsl
fdivrl
movsl
repz
mov
into
dec
or
rcrl
mov
push
add
std
stc
jns
fwait
ret
push
lret
dec
jecxz
pop
inc
rcr
ret
jns
sbb
push
rorl
mov
and
inc
cmpsb
jmp
das
inc
jl
scas
loope
cmp
dec
std
mov
fnsetpm(287
cli
rclb
cli
and
aam
sbb
pushf
int3
filds
push
sub
movsb
lret
repz
mov
and
xlat
je
add
xchg
sub
in
loopne
lods
dec
testb
pop
mov
or
repz
repz
cmp
push
cmp
and
sub
rcrb
test
repnz
fiaddl
lcall
xor
pushf
ficompl
sbb
xchg
inc
hlt
call
jl
sub
mov
test
add
stos
add
jno
movsb
movsb
add
pop
fisubs
pop
adc
test
loopne
xlat
or
jns
mov
push
xor
xcrypt-ctr
cmpsl
pushf
stc
xchg
push
test
mov
imul
shll
loop
fbstp
jge
dec
ret
sti
push
jns
xor
xor
jl
scas
dec
push
iret
lock
jo
lret
inc
addr16
mov
jnp
bound
jbe
iret
pusha
bound
fwait
sub
xor
fmull
ss
dec
pop
and
bound
jge
or
inc
lock
fstpl
ja
xchg
sbb
aas
inc
jne
adc
movsb
test
mov
arpl
adc
pusha
sbb
mov
cmp
negl
sbb
pop
ja
pushf
int
dec
int3
repnz
xor
xchg
dec
mov
push
fists
mov
in
mov
out
mov
clc
jecxz
aaa
jae
lock
sbb
aam
int
push
cmpsb
jae
cs
push
sbb
repz
outsb
outsb
rclb
jle
mov
xor
pop
sbb
mov
loope
xor
cwtl
push
imul
add
cmp
scas
push
ret
scas
sub
mov
and
jno
xchg
nop
adc
loope
mov
adc
scas
das
sub
push
mov
mov
loopne
mov
cmp
outsl
push
mov
push
popa
xor
mov
mov
test
inc
mov
std
cmp
pop
out
sub
or
stos
ret
cmpsb
sbb
outsb
icebp
pop
add
gs
sbb
sbb
in
shrb
sbb
insl
push
pop
add
mov
or
jle
test
or
movntps
dec
test
out
lretw
outsl
test
insb
sbb
sahf
or
cmp
cmp
mov
add
and
xchg
jl
mov
or
pop
dec
outsb
add
cs
cmp
sub
lds
hlt
xchg
outsl
push
daa
and
jbe
arpl
jb
cmp
xor
lcall
xchg
jecxz
and
sub
lds
cld
xchg
mov
or
int3
out
insb
cltd
mov
pop
in
or
push
ds
sub
jle
mov
fcoms
lds
mov
cmpsb
mov
dec
fiadds
jnp
mov
lods
cli
push
imul
mov
and
or
xchg
push
test
repnz
jno
shll
mov
xchg
or
lods
mov
fdivl
push
inc
loope
xchg
dec
stos
xor
pop
sti
add
sti
inc
aad
mov
mov
lret
fs
sti
cwtl
mov
rclb
js
repnz
push
data16
push
mov
outsl
pushf
lock
and
lock
out
jl
imul
scas
mov
add
sbbl
jg
inc
lahf
mov
sub
jl
aam
leave
jne
jg
rcr
clc
inc
in
sbb
outsb
pusha
fnstsw
cmp
and
xchg
shll
or
les
out
or
xchg
xor
or
rcrl
mov
test
mov
mov
push
push
cld
gs
xor
adc
sbb
add
jb
loope
add
dec
stc
lahf
jl
and
cmp
repnz
arpl
mov
in
pop
mov
out
mov
mov
and
fsubr
xchg
mov
or
or
mov
fs
pop
mov
subb
pusha
cmpsb
call
sub
xchg
pop
cmpsl
es
popf
mov
bnd
aad
xchg
and
nop
pop
sahf
push
aad
jo
clc
sbb
cmp
sbb
xchg
xor
cltd
jg
mov
jp
shrb
jbe
jge
js
push
dec
pop
inc
lds
push
or
cmp
inc
xlat
je
cmpl
shl
push
push
push
sub
mull
jge
pushf
repz
add
mov
mov
or
notl
lock
mov
cmp
dec
mov
mov
cmpb
shll
leave
cli
fwait
jmp
loopne
aas
jb
xchg
je
xor
fstps
dec
negl
imul
dec
les
xchg
and
and
rcrl
and
test
inc
push
in
mov
mov
sbb
mov
mov
sub
aas
xchg
push
int3
sbb
outsl
insl
movsb
or
pop
mov
insl
and
sub
mov
push
inc
int3
das
xor
lock
aaa
push
cwtl
push
mov
nop
rcl
xchg
mov
ja
jl
js
testb
or
dec
gs
sub
out
and
lret
adc
addr16
jno
das
iret
mov
outsl
mov
out
test
dec
lret
xchg
xor
xor
xorb
and
lock
jle
push
jg
lret
inc
je
loope
mov
push
in
loop
add
push
sbb
mov
jo
jge
inc
sti
mov
sarb
outsl
add
jnp
pop
std
sahf
add
mov
int3
popa
sbb
xor
into
clc
xchg
pop
add
loope
dec
lret
xor
sbb
jae
notl
or
in
mov
fimull
pusha
out
mov
lahf
push
das
arpl
loopne
cmp
jge
outsb
xor
lahf
test
xor
mov
cltd
jne
fdiv
popl
or
jecxz
add
in
and
fcmovnu
fldenv
adc
repnz
sub
jmp
jl
dec
and
fimull
faddl
mov
divl
les
pop
cmp
notl
inc
hlt
fs
pop
iret
pop
add
out
ds
dec
das
insl
xor
aas
fincstp
push
out
inc
rorl
mov
mov
lret
and
hlt
or
or
push
setnp
xor
das
add
pop
add
or
faddp
enter
mov
add
sbb
inc
add
jb
dec
push
cmp
inc
test
popl
pop
xor
adc
push
insl
or
test
test
shlb
icebp
and
dec
dec
pushf
and
mov
cli
fnstcw
xchg
add
push
movsb
in
dec
push
pop
push
pop
cmp
sub
cs
fisubrs
pop
jmp
pop
loope
xor
bound
popa
sub
aas
sbb
sub
push
and
inc
add
dec
or
jno
xor
std
xor
int3
jno
sbb
or
ret
xor
sub
sahf
and
int
sub
outsb
pop
jg
sbb
pop
dec
rorl
dec
imul
cmc
insl
call
repz
mov
pop
xor
dec
push
mov
inc
mov
pop
xor
mov
mov
cmpsl
and
xchg
inc
dec
les
cltd
mov
add
mov
cld
jns
sbb
scas
add
insl
cltd
les
inc
fnclex
dec
clc
mov
add
xlat
push
test
int
lret
fwait
test
fimull
mov
mov
mov
push
push
pop
sbb
jecxz
bound
repnz
cmc
pop
mov
mov
push
sub
xchg
xor
inc
push
aas
pusha
push
inc
insl
mov
jecxz
push
or
jg
cmp
sbb
inc
adc
inc
push
fdiv
xchg
jg
mov
push
xor
jnp
sbb
sbbl
fstps
fdivrp
adc
ret
jecxz
ss
xchg
jae
push
repnz
cwtl
fiadds
fs
adc
push
xchg
inc
ret
mov
push
push
js
in
faddl
push
add
sbb
lods
fbstp
sbb
stos
mov
push
int3
xor
and
dec
cwtl
movzwl
jb
inc
dec
push
mov
test
jo
mov
cmp
mov
xchg
jecxz
lods
mov
push
inc
jnp
sub
ss
adc
sub
lret
je
daa
jecxz
aad
sbb
popa
nop
shll
cld
mov
jo
sub
push
mov
sub
add
mov
repnz
pop
insl
pop
add
cmp
mov
popf
mov
dec
mov
xor
imul
cs
aaa
adc
and
insb
and
pop
push
in
aaa
insl
gs
cmpl
xchg
int
mov
into
in
mov
insl
mov
or
cli
xor
lahf
sbb
aaa
movsl
mov
jmp
mov
cmp
push
adc
lahf
iret
mov
mov
cmp
insl
xchg
or
mov
jno
or
sbb
lods
dec
lret
lret
insl
iret
sbb
je
mov
in
lock
xlat
jno
popa
cli
fs
cmp
xchg
cld
add
pop
mov
test
cmp
outsb
dec
mov
xchg
and
xchg
adc
mov
cmp
movsb
pop
ljmp
add
xchg
mov
sbb
cmp
repnz
aaa
and
sub
and
cmp
sahf
pop
ret
std
dec
mul
cmp
inc
adc
fiaddl
fidivrs
inc
nop
mov
add
data16
sahf
aaa
inc
or
xchg
pop
pop
scas
mov
daa
fmull
pop
mov
ficompl
add
dec
test
jne
add
and
aam
push
or
icebp
cld
iret
rorb
repz
inc
sbb
mov
or
jmp
mov
xor
dec
bound
cmp
or
cwtl
jle
cltd
pop
fmul
shl
sti
scas
idivb
cld
mov
inc
cmp
aam
add
out
sub
or
insb
pop
shlb
xchg
es
nop
jp
shrb
vxorps
testl
lock
cwtl
adcl
adc
or
pop
sub
sbbl
jp
lods
pop
clc
sbb
mov
fwait
mov
imul
pop
std
xchg
xchg
aad
push
jns
orb
pop
push
lods
xchg
mov
ret
fsubrp
pop
loop
les
ret
mov
push
int
in
das
sub
dec
adc
adc
mov
stos
cmpsb
xchg
jnp
sub
lcall
mov
jne
sub
mov
push
inc
aas
mov
inc
dec
lock
mov
jmp
inc
enter
xchg
in
sti
jl
push
or
jle
xchg
std
dec
xor
mov
mov
ss
shrb
pop
lcall
rorb
mull
imul
mov
cli
out
les
pop
mov
cld
and
xchg
pop
xor
out
imull
test
inc
and
add
pop
aam
pop
dec
out
out
fbstp
or
or
push
or
cld
cmc
push
test
adc
sbb
jo
adc
nop
call
cwtl
cmpsb
jecxz
push
subb
inc
xchg
push
ror
ds
mov
cli
out
aad
fsubs
jge
xchg
addr16
xchg
inc
dec
test
js
cmc
pop
fbstp
in
arpl
das
xor
dec
sbb
inc
xor
pop
xor
outsl
inc
mov
mov
stc
or
loope
xchg
test
and
lock
jno
or
pop
add
lcall
shlb
arpl
stc
cmp
dec
in
pop
fwait
lods
mov
les
mov
cmovo
arpl
or
mov
xchg
pop
dec
pop
les
scas
adc
adc
adc
movsb
or
sub
cs
je
dec
jbe
mov
mov
stc
xchg
push
pusha
cmp
push
int3
xchg
adcb
imul
shrb
shlb
outsl
inc
sbb
or
cmp
cmp
cs
sub
daa
jmp
jmp
inc
xchg
mov
add
sbb
shll
sbb
xchg
aam
push
dec
out
clc
xchg
sar
push
sbb
mov
or
stos
ret
mov
loop
mov
dec
xchg
or
cltd
out
xchg
dec
ficomps
pop
les
push
orb
xor
adc
or
repnz
cmp
adc
xor
leave
jmp
cmp
inc
xorb
les
pop
xchg
call
das
mov
or
cmp
or
sbb
mov
add
sarl
loopne
xchg
push
push
aam
dec
mov
xor
js
mov
cmp
es
call
dec
sahf
push
mov
pop
push
adc
andl
xor
pop
stc
cmpsb
ret
or
mov
xlat
sub
pushl
xchg
adc
sub
cmp
jl
aaa
mov
mov
scas
sub
sbb
andb
ljmp
and
aam
mov
sub
insb
call
lock
sub
out
ficomps
push
insb
xchg
or
inc
pop
jnp
xchg
les
mov
or
andl
fldcw
aam
pop
dec
lods
adc
shl
inc
dec
push
in
mov
jmp
mov
out
and
loopne
insb
pop
in
mov
insl
mov
popf
mov
cmp
insl
fiaddl
pop
mov
fbstp
or
out
fndisi(8087
push
jmp
adc
mov
loope
add
mov
or
or
jmp
loop
jecxz
out
lret
ja
cmp
int
and
movsb
and
lcall
and
mov
js
sbb
popa
add
mov
mov
mov
outsb
add
leave
cmc
idivl
xchg
shrl
jbe
cmpb
gs
pop
sub
scas
lds
inc
mov
or
mov
jbe
addb
lret
mov
loop
cmp
xor
addr16
mov
mov
ljmp
pop
jl
aam
inc
dec
out
push
lret
sub
loopne
jl
enter
or
jle
adc
push
sub
lock
push
cmp
xchg
lcall
cmc
ds
pop
pop
fsts
jb
jb
inc
cmp
std
je
xlat
jnp
outsl
sbb
and
adc
cmpsl
setno
or
scas
test
scas
inc
cmp
pop
inc
cmpsl
fisubs
mov
push
je
adc
pop
or
sbb
xchg
jle
ja
xchg
mov
jne
jmp
scas
mov
fs
inc
mov
cmpsb
push
jbe
out
inc
enter
pop
roll
inc
xor
pop
out
stc
mov
gs
cmp
out
xchg
stos
xchg
subb
pusha
addr16
xor
xchg
jp
popa
mov
lcall
cs
dec
out
mov
stc
push
mov
cmp
and
cltd
cmp
xchg
fstp
frstor
pop
push
mov
xchg
test
lock
outsl
push
push
and
pop
sub
arpl
out
call
divb
sub
adc
in
jbe
mov
cmp
mov
movsl
dec
repz
push
push
test
xchg
jae
add
pop
jb
mov
push
xor
fwait
adc
cltd
xor
cld
out
cmp
popf
in
xchg
fcmovnb
mov
and
fcoml
cmp
dec
push
inc
mov
jno
ljmp
sbb
add
in
xor
pop
inc
out
mov
dec
fcomi
mov
cs
add
sbb
fucomip
mov
dec
xlat
cmpl
dec
mov
mov
pop
gs
mov
jbe
inc
nop
dec
jecxz
cmp
cmc
cs
and
loope
cli
adc
ret
adc
shl
pop
cmp
cmp
sub
sub
aam
mov
stos
push
sub
rcrb
sub
dec
jmp
lea
cmp
sub
cmp
xor
cmp
mov
inc
cld
rcll
gs
lahf
sbb
inc
mov
add
mov
jle
stos
mov
push
in
dec
cmpsl
sub
inc
arpl
or
dec
xchg
outsb
xor
rcll
cli
or
jb
xorb
arpl
in
mov
and
mov
scas
mov
sbb
sahf
and
nop
mov
push
mov
mov
ja
cs
or
mov
loope
jno
pusha
outsl
jge
insb
dec
scas
or
loope
mov
inc
and
pop
loop
dec
sub
insl
ret
pop
dec
push
mov
inc
jns
xor
jle
cmp
sbbl
stos
imul
adc
jmp
sub
cltd
loope
mov
xlat
inc
xor
mov
push
sbb
xchg
inc
pop
cmp
iret
inc
in
mov
jecxz
jno
pop
pop
mov
sbb
xlat
jo
imul
pop
xchg
and
mov
adc
jne
fwait
or
maxps
and
mov
test
mov
sbb
inc
call
adc
mov
mov
insl
fimuls
sub
mov
inc
xchg
popf
in
cwtl
movsl
inc
daa
rclb
mov
inc
sub
aas
js
sbb
lds
jae
std
cmpsb
push
cld
rorl
mov
scas
push
or
pop
mov
pop
sbb
jp
xchg
psubusb
rorb
dec
shl
xchg
adc
inc
sbbb
adc
stos
iret
xor
stos
je
cs
add
int3
addr16
test
mov
fs
xchg
or
jne
inc
adc
stc
fxch
dec
jne
cmpsb
movsb
lea
movsl
pop
sbbl
mov
lcall
ror
mov
mov
insl
movsl
call
adc
xorl
out
cmc
mov
ss
or
xor
push
movsb
imul
sub
and
cmp
mul
xchg
ficomps
sti
sub
pop
or
aas
pop
rorb
push
jns
frstor
sub
and
push
cmc
fwait
push
and
lret
mov
mov
and
hlt
pop
pop
outsb
xchg
xchg
adc
ret
sub
cmp
repz
mov
xchg
fdivrl
push
sbb
jmp
rcrb
ljmp
sbb
pminsw
lds
pop
push
push
sub
mov
dec
lods
jle
or
aaa
xlat
mov
rolb
sub
inc
inc
repnz
xchg
movb
sbb
addl
frndint
or
loope
lret
sbb
dec
adc
push
mov
mov
mov
add
inc
dec
cmp
in
fidivrs
mov
mov
mov
pop
dec
add
push
cmpsb
or
loopne
and
int
push
pop
mov
cmp
mov
repz
aad
aam
lret
ljmp
cmp
nop
outsb
push
sahf
jmp
and
cmpsb
xchg
dec
jo
outsl
in
aaa
jmp
mov
pop
mov
int3
and
push
mov
jbe
lahf
push
dec
scas
sub
cmpsb
xchg
or
xor
pop
or
jle
push
jno
divb
ljmp
jne
cltd
xchg
xchg
cmovae
xchg
imul
xchg
nop
or
addr16
xchg
iret
mov
push
fdivs
cmp
xor
aaa
add
gs
lret
push
xchg
jmp
aaa
in
push
push
xchg
mov
je
adc
lods
pop
push
inc
les
fidivs
xchg
lret
cli
cwtl
aad
sbb
push
pushf
adc
fldcw
pop
add
mov
push
mov
rorb
out
inc
ljmp
lods
test
xchg
loopne
lds
adc
call
mov
aas
xchg
jg
xor
mov
fs
push
enter
sub
imul
pop
adc
inc
movl
pop
add
xchg
mov
gs
loop,pt
and
outsb
push
dec
out
jbe
out
cmp
xchg
push
andl
jl
in
lcall
adc
sub
cmc
in
cs
fdivr
pop
arpl
mov
outsl
mov
out
xor
lods
dec
and
cwtl
push
xlat
jl
into
das
mov
sub
xchg
jle
push
test
daa
jmp
aam
mov
dec
jb
aam
aad
mov
stos
xchg
mov
in
jl
mov
gs
test
hlt
jmp
jge
repnz
divl
sbb
data16
push
fadds
or
or
dec
push
sbb
aad
movsl
in
daa
pushf
jbe
mov
data16
outsb
outsb
es
mov
xor
jge
fbstp
pop
or
pop
inc
repnz
jg
shlb
and
mov
fmuls
imul
gs
mov
shr
rorl
ja
aad
outsl
cmc
or
adc
lcall
push
mov
mov
aad
mov
add
xchg
inc
or
fs
repz
popl
xor
popf
ds
mov
sbb
sub
in
and
adc
pop
jnp
pop
adcb
dec
push
push
xchg
je
push
xchg
fldenv
lods
adc
or
fsts
aad
lret
icebp
xchg
cmc
cmp
jne
test
push
cmp
adc
jmp
xor
mov
or
add
loopne
cmp
cld
mov
icebp
and
dec
and
outsb
mov
idivl
jo
jg
jno
push
inc
add
out
lcall
pop
inc
adc
lods
mov
iret
xor
orl
push
adc
dec
jecxz
sub
push
push
lds
add
xor
cmp
loopne
popa
mov
scas
lock
orl
dec
pop
jo
dec
jecxz
push
push
arpl
push
mov
into
in
lret
push
test
mov
imul
and
add
xchg
mov
pop
mov
ja
test
or
adc
jp
sbbl
cmp
aad
sub
add
inc
popf
push
das
or
rep
xor
xor
insb
jge
std
test
daa
mov
es
mov
and
rcll
lcall
andb
pop
pop
xor
pop
subl
repnz
pop
or
lods
inc
in
fmul
jb
arpl
jl
stos
iret
cmp
std
js
mov
js
sbbb
inc
imul
mov
mov
jmp
shl
sbbb
out
cmp
sub
das
es
mov
data16
insl
in
jl
sbb
dec
dec
add
inc
inc
cmp
iret
sti
cltd
pusha
movsb
hlt
xlat
fwait
testb
xchg
in
jge
dec
aas
push
cld
push
in
cltd
push
sbb
subl
mov
leave
fisttpl
mov
adc
inc
iret
loop
lea
popf
cwtl
mov
mov
sub
pop
jl
jle
sbb
mov
int3
mov
ljmp
xlat
cmp
insl
cmp
aaa
add
pop
movsl
sbb
mov
sub
pop
and
repnz
pop
jae
int
mov
xlat
int
sbb
xchg
pop
sahf
data16
fimull
mov
sub
fdivrs
sti
mul
out
jno
lret
sbb
jecxz
mov
cltd
push
push
or
sbb
xchg
fucomi
xor
les
xor
aad
cwtl
cmpsl
pop
cwtl
lahf
arpl
mov
jg
jl
and
mov
dec
test
negb
dec
mov
sti
fsubrs
out
aad
pop
aas
or
inc
add
test
cmp
pop
test
inc
mov
jl
xor
mov
jle
or
and
xor
xor
add
loop
mov
bound
mov
cmp
bswap
add
stc
mov
push
inc
push
jo
shll
xchg
hlt
lcall
pop
lods
ret
pop
xor
test
mov
push
adc
and
js
lock
adc
push
push
out
or
inc
shrb
adc
add
jg
cmpsb
push
mov
mov
push
sbb
mov
lock
dec
push
and
mov
mov
mov
pop
std
repnz
cmp
sub
cmp
pop
fisttpll
loopne
mov
sbb
in
jnp
stos
adc
inc
imul
pop
dec
leave
jo
orb
dec
popf
adc
cmp
clc
ljmp
or
mov
sub
inc
addb
cmp
and
repz
sub
loope
dec
mov
sti
clc
pop
insb
xchg
std
jb
sarl
cmpb
leave
inc
push
sbb
dec
mov
and
mov
or
scas
pop
add
pop
push
fists
ljmp
cmp
cmpsl
int
loopne
aam
mov
xchg
out
cmpsb
gs
test
mov
dec
push
int
inc
sub
aas
sti
rcrb
int
rclb
sbb
es
das
xor
or
xor
fmull
and
sbb
sbb
xor
test
cmpsb
jnp
cmc
mov
data16
push
mov
sub
sahf
and
in
cmp
jl
rcrl
call
jge
sbb
adc
pop
and
notb
pop
sti
or
jo
pop
push
imul
jo
in
shr
test
jnp
add
pusha
lcall
mov
pop
sub
dec
popf
mov
xchg
enter
xchg
mov
xor
xchg
mov
push
xchg
mov
shll
jb
mov
rolb
iret
mov
inc
xchg
and
inc
mov
cmp
push
xchg
push
xchg
sbb
mov
pop
xor
lret
inc
adc
fistps
mov
out
repz
js
pop
stos
loopne
sub
cmp
adc
xor
push
loope
fiadds
lds
fisubl
add
mov
or
jge
inc
sbb
fisubrs
jo
jl
adc
cmc
xchg
stos
and
scas
mov
ret
add
jb
daa
mov
jmp
push
pop
mov
mov
jnp
rcr
inc
fisttpl
out
jno
sti
in
cmp
adc
or
and
in
mov
mov
xchg
movsl
xor
aaa
push
scas
sbb
das
testl
jmp
mov
and
adc
mov
xor
add
and
lahf
inc
push
sbb
cmpsb
fnstsw
jp
addr16
mov
mov
in
inc
mov
jbe
int
leave
into
cmpb
cmpsb
push
les
xor
mov
fistl
xlat
pop
lea
add
jb
push
sbb
dec
mov
cmp
sub
add
in
inc
add
test
inc
fsubp
mov
mov
mov
stos
popa
sbb
mov
and
jno
inc
sub
std
fldt
test
outsb
insl
repnz
loopne
icebp
test
imul
hlt
sbb
dec
into
add
test
pusha
mov
insb
mov
cmpsl
pushf
add
or
adc
gs
or
sbb
mov
call
inc
ret
les
jnp
fmuls
pop
in
adc
fsubs
addl
repnz
popf
jns
fistps
in
xchg
inc
int3
jo
iret
mov
adc
xchg
sub
sbb
test
fwait
xchg
stos
ret
jecxz
pusha
lds
mov
jp
jo
cltd
int
es
jno
jbe
mov
jge
push
jl
inc
stos
std
push
adc
dec
fwait
out
das
adc
lcall
sbbb
imul
cwtl
sub
sbb
adc
jne
jl
jle
pop
jecxz
mov
mov
ds
cli
mov
jb
dec
add
add
push
lock
dec
fwait
int3
lea
aam
insl
cmp
pop
int3
test
andl
movsl
mov
mov
mov
push
push
decl
adc
or
xor
cmp
sti
xchg
call
in
adc
pop
jae
and
xlat
mov
fidivl
xchg
mov
and
mov
jmp
flds
mov
arpl
pop
test
fcoms
int
xlat
fsubrs
decl
sub
xchg
mov
fcomps
stos
mov
sbb
nop
das
repz
insl
sub
mov
xchg
shl
inc
int
mov
mov
cltd
adc
pop
out
mov
inc
add
imul
pop
cmp
sbbb
les
fnstenv
cmp
popf
jb
stos
push
fwait
cmp
mov
and
xor
jmp
jecxz
mov
inc
pushf
xor
inc
adc
je
jns
es
add
inc
scas
push
jmp
mov
dec
sub
cltd
or
jmp
mov
fisttpll
inc
push
test
cmp
dec
or
pop
test
xor
mov
movsl
cmp
sarl
scas
rolb
pop
pop
mov
sub
and
imul
ret
lret
dec
testl
orl
pop
jbe
jmp
and
mov
pop
in
xor
imul
mov
aas
pop
cmp
mov
loop
jb
push
out
scas
jns
jo
cltd
out
dec
in
pop
ds
fnstsw
aam
popf
jnp
add
mov
repnz
pop
add
and
xor
dec
mov
mov
add
pop
sahf
imul
cwtl
daa
scas
outsl
ljmp
shl
sbb
test
and
and
dec
dec
sbb
mov
dec
out
add
push
idiv
aam
scas
cmpsl
add
and
pcmpgtb
sbb
inc
and
xchg
dec
mov
push
out
xchg
xor
sbb
insb
addl
mov
and
mov
loope
cmp
sbb
test
cmp
mov
jbe
xchg
pop
or
or
into
push
xchg
xchg
dec
rorl
jecxz
adc
ror
jmp
lock
inc
mov
and
cmp
inc
push
sub
mov
cmp
loope
test
adc
dec
pusha
in
jp
rcr
jnp
mov
xor
mov
push
test
jb
pop
cmpsb
mov
scas
lock
addr16
pop
stos
rorl
imul
xchg
aam
inc
cli
stos
jb
inc
xchg
mov
in
andw
pop
xchg
cli
push
test
mov
add
sbb
adc
jp
cmp
gs
jae
mov
pop
mov
xchg
out
lret
int
sbb
out
xchg
pop
pop
pop
xchg
je
mov
stos
and
pop
pop
mov
mov
in
mov
mov
rcll
pop
adc
dec
pushf
in
roll
mov
out
dec
mov
jp
inc
jg
xchg
rorb
jle
add
movsl
push
icebp
jmp
or
mov
adc
nop
es
insb
adc
notb
je
lret
push
lret
add
or
stc
les
in
jmp
push
repz
mov
mov
jmp
mov
dec
icebp
mov
push
fisttpl
or
inc
ss
pop
mov
pop
mov
into
jno
xchg
lods
cmp
les
push
inc
movsl
lods
insw
mov
in
sub
popf
orl
cmc
adc
into
mov
sub
adc
aad
movsb
aad
dec
lahf
xlat
jl
xor
lahf
xlat
xchg
call
lret
cmp
fistpll
pop
bound
rorl
jle
fs
cwtl
mov
push
gs
mov
xor
mov
popl
sbb
in
jg
jg
sbb
je
cmp
lahf
and
test
fs
xchg
pop
sbb
jno
jl
mov
inc
dec
mov
mov
into
mov
mov
ljmp
and
push
push
sahf
jnp
int3
jo
mov
mov
add
cmp
addl
pop
ss
ret
je
inc
stos
mov
ret
mov
in
std
dec
and
cwtl
and
cli
xor
out
jp
mov
test
rcr
add
sbbb
push
cmp
mov
or
push
mov
add
adcb
movsl
mov
sti
inc
jnp
push
jge
out
imul
inc
add
push
xlat
mov
add
push
repnz
inc
dec
cli
out
xchg
cmpsb
dec
stos
rcr
idivl
add
adc
mov
iret
xor
in
cmc
sbb
imul
jl
outsl
add
dec
test
mov
xchg
mov
or
or
mov
xor
or
stos
inc
sar
ljmp
shl
xlat
xchg
mov
sarb
xchg
dec
aad
lock
outsb
push
aad
and
xchg
jl
les
movsl
lds
hlt
dec
imul
in
cmpsb
clc
pop
jge
iret
or
sbb
dec
xchg
aaa
dec
xor
lds
loopne
mov
pop
mov
sub
cwtl
mov
aas
dec
insb
inc
pop
sub
out
aad
jne
mov
cmp
mov
and
and
aaa
add
loope
inc
ficoms
adc
sbb
insl
mov
icebp
popf
and
or
setp
lods
jmp
mov
dec
xor
popf
sub
push
lret
xor
in
push
fnstenv
test
xor
stos
in
sarb
divl
sbb
and
adc
in
ret
jne
pop
test
stos
test
cmp
fcompl
loope
jl
sbb
sub
jecxz
outsl
adc
push
js
addr16
xor
hlt
push
add
ja
mov
pop
or
push
outsb
imul
out
enter
jmp
sub
imul
int3
or
add
or
dec
into
jno
mov
mov
sti
dec
outsb
add
out
push
adc
in
jbe
addr16
jp
rcll
mov
push
jg
inc
xchg
mov
or
fdivrl
xchg
test
jge
inc
pusha
mov
xchg
lea
out
push
mov
jns
loopne
dec
sbb
push
insl
cmp
mov
sbb
scas
and
jo
sbb
enter
lcall
ret
xchg
xchg
enter
outsl
mov
xor
dec
int3
stc
sbb
push
jle
push
sarb
sahf
scas
sub
push
cltd
inc
lret
mov
mov
in
loope
sbb
sbb
pop
or
inc
in
push
mov
mov
push
es
insb
sbb
mov
inc
inc
leave
mov
add
sub
push
pop
cmpsb
add
inc
sub
sub
adc
aaa
movsb
hlt
scas
sarl
stos
jnp
mov
add
notl
xlat
or
pop
and
enter
imul
scas
or
push
cwtl
push
sub
push
xchg
outsb
addr16
xchg
scas
dec
mov
mov
jae
int
call
call
sbb
mov
xor
and
andl
pop
push
in
int
fwait
sbb
int3
jle
pop
call
shrb
xchg
or
shrb
mov
fldcw
iret
std
in
pop
inc
adc
or
js
add
lret
sbb
incb
inc
mov
out
sbb
lods
jmp
and
es
add
nop
xlat
inc
or
movsb
lds
mov
cli
sarl
mov
sti
pusha
mov
xchg
pop
push
gs
cli
push
adc
in
out
push
jecxz
andl
mov
mov
sti
dec
push
mov
mov
inc
jl
fwait
je
sub
mov
sahf
stos
fdivl
clc
push
and
nop
mov
dec
stc
mov
in
jp
mov
pop
mov
shll
jmp
or
push
call
xor
sub
inc
pop
dec
mov
lods
repnz
mov
push
jg
pop
enter
rclb
pop
or
ja
jo
test
push
pusha
push
xchg
adc
push
icebp
ljmp
and
push
xchg
sbb
sahf
outsl
cli
xchg
add
sub
jle
adc
xchg
mov
enter
ret
jb
insb
cs
imul
lea
insb
inc
aad
adc
push
outsl
cwtl
lods
cmp
push
ficoml
and
or
or
sbb
scas
add
or
pop
insl
test
sub
iret
sbb
sub
aaa
xchg
mov
aam
mov
sub
and
mov
dec
mov
outsl
pop
setbe
jl
adc
cmp
sahf
xor
push
je
inc
dec
jp
adc
or
aaa
pop
add
ret
stos
inc
xchg
jle
pusha
push
arpl
pop
inc
mov
bound
ret
cmpsb
add
fisubrs
sub
and
mov
or
push
lods
aaa
push
pusha
and
aaa
gs
imul
lds
adc
sub
cmp
dec
lods
mov
orb
inc
sahf
push
movsb
push
ret
sarl
leave
cli
je
test
sbbl
push
mov
mov
leave
aad
push
jge
adc
addr16
adc
inc
cmpb
lock
mov
int3
sbb
xor
add
and
int3
pop
insl
fdivp
gs
mov
cmpsb
les
clc
out
mov
rorb
std
gs
aas
dec
shrb
add
in
in
roll
stos
xchg
sbb
mov
rcll
cmpsb
sbb
lret
add
or
jmp
shll
jae
aam
mov
in
fs
sub
and
rcrl
mov
lods
filds
int3
out
cmp
dec
jecxz
rcrb
mov
jns
jg
js
cmp
aaa
xor
xlat
mov
ds
jnp
in
daa
stc
dec
xchg
stc
sti
mov
mov
sbb
or
lods
pop
xor
xor
dec
xchg
in
add
or
push
imul
or
adcl
push
dec
jno
ficoml
jae
and
sahf
aad
scas
lea
loopne
dec
push
movsl
jmp
push
fstpt
fisubl
lods
loopne
les
repz
add
pop
in
subb
dec
lret
loop
mov
lret
loopne
pop
xor
test
mov
jne
xchg
test
stos
pop
sti
cmpsb
inc
pop
and
mov
insb
dec
jecxz
mov
movsl
pop
mov
push
mov
lret
adc
jb
mov
mov
sbb
jno
adc
mov
mov
aad
mov
xor
xchg
sti
loopne
xchg
js
in
in
and
jecxz
jno
and
or
push
mov
fs
ret
int3
and
xlat
data16
add
stos
and
aad
push
test
inc
xchg
out
jle
and
cmpsl
in
mov
in
insb
out
adc
lret
sbb
outsb
add
mov
jno
mov
sbbl
xchg
out
dec
outsl
test
bound
pop
dec
rcll
xchg
ss
jo
int3
dec
nop
mov
lds
inc
push
fwait
add
stos
dec
sarl
dec
sti
arpl
mov
cmp
cwtl
and
push
test
loop
sbb
sbb
jnp
nop
sub
jmp
rol
push
inc
out
scas
std
ss
cmp
les
pop
mov
sub
std
icebp
sahf
lret
ja
jno
sub
scas
cmp
inc
jl
fimuls
dec
pop
ljmp
xor
push
roll
xchg
aad
push
jnp
jbe
aas
shlb
in
jne
push
sti
mov
xor
mov
jmp
mov
jns
jae
daa
pop
mov
das
shl
fsubl
cmp
js
pop
xor
xchg
mov
sub
pop
jae
jnp
cmpsb
jp
inc
nop
stos
addb
add
das
mov
icebp
jle
daa
test
lods
jnp
dec
adc
or
sub
scas
dec
pop
xor
aaa
pop
cmp
mov
dec
mov
test
push
iret
push
nop
stos
into
out
imul
mov
push
xor
dec
loope,pn
dec
inc
jne
sub
mov
adc
mov
mov
hlt
inc
push
push
lds
or
jle
icebp
lcall
std
pop
roll
call
pop
in
notl
cmp
inc
lret
add
test
dec
insl
sub
repz
stos
dec
cmp
popa
mov
add
push
ficoms
je
insb
or
subb
add
les
xorl
jno
orb
das
dec
jbe
and
cmpsl
pusha
les
mov
pop
push
out
jle
mov
enter
pop
pushf
dec
fsubp
xchg
inc
imull
mov
in
addr16
mov
mov
xchg
lret
xchg
sub
clc
call
ja
call
pop
and
pop
sbb
cli
push
xor
xchg
push
mov
cli
add
lcall
or
dec
or
cmc
ljmp
push
aam
js
add
push
pop
dec
into
lcall
test
adc
jne
mov
ljmp
pop
jl
fisttps
shl
push
clc
cmpsl
stos
mov
cwtl
jl
mov
leave
stc
cmpsb
nopl
dec
xor
hlt
jb
ja
jmp
push
adc
test
test
fdivp
cld
sarl
add
shl
jne
sbb
idivl
and
and
leave
pushf
and
bound
clc
in
inc
adc
and
push
clc
sub
dec
rcrl
or
test
enter
ljmp
in
mov
push
pop
jb
adc
out
dec
sti
fldenv
add
pop
push
inc
lods
xchg
jecxz
xor
sbbb
jmp
lcall
popa
out
jns
pop
jecxz
or
push
mov
adc
aaa
inc
mov
scas
ds
lds
movsb
fs
nop
fs
imul
iret
sbb
or
lods
lock
or
icebp
cmp
lahf
sub
lock
fcomi
addr16
xchg
and
andb
cmp
clc
mov
lods
jns
stos
insb
add
sbb
aas
mov
push
pop
dec
dec
dec
sbbl
xchg
mov
xchg
jl
ret
mov
or
cli
adc
mov
mov
xchg
or
lods
pop
sub
xchg
and
jae
xor
jp
jp
fdivl
movsl
adc
sub
into
push
ljmp
in
xchg
dec
test
sbbl
jl
stos
inc
inc
sbb
cmpsl
mov
bound
mov
pop
mov
mov
hlt
imul
inc
push
or
mov
cmp
jb
push
test
movsb
gs
in
mov
shl
dec
add
push
pop
scas
add
jmp
push
test
jnp
das
movsl
repz
push
xor
jl
push
xchg
xchg
mov
fildl
jg
adc
insb
stos
sar
das
lret
ja
sarl
cmp
dec
cltd
adc
sbb
pop
aad
add
cld
imul
mov
pop
mov
pop
inc
and
test
inc
fsubrl
mov
or
mov
cmc
push
jnp
mov
loope
xor
les
cld
add
cli
outsl
jle
dec
adc
repnz
jecxz
sbb
lcall
subl
pop
mov
mov
sub
xor
lahf
fcmovb
nop
cmpsb
iret
jae
notb
lcall
aam
ja
mov
sub
cmp
mov
fwait
test
jg
aas
int
mov
test
addb
repnz
sub
fldl2e
idiv
in
lahf
aad
ret
rcrl
movb
aam
cmpsl
mov
add
or
jne
push
pushf
or
popa
inc
mov
cmp
xchg
popa
aas
xor
mov
test
mov
ret
ss
stc
sar
addl
push
rorl
xchg
jnp
or
mov
hlt
sub
dec
and
cmpsb
sbb
cltd
in
push
jp
fst
lcall
arpl
in
lcall
cmpsb
push
pop
out
push
subl
jae
jae
or
adcb
or
mov
xchg
jg
push
aaa
mov
jae
or
mov
inc
das
and
mov
lock
jge
aam
jecxz
dec
icebp
xchg
cmp
call
repnz
push
pop
js
push
insl
mov
adc
aas
daa
cltd
pop
inc
pushf
adc
dec
inc
shl
pop
enter
xchg
and
push
xor
insl
sbb
lea
pop
push
xlat
jg
pop
retw
jbe
leave
in
pop
jmp
push
sbb
loop
cmp
ds
in
addr16
jmp
and
jae
shl
call
mov
fsubp
mov
popf
sub
mov
notl
push
and
xorb
mov
mov
lea
cmp
mov
pop
pop
mov
sbbb
imul
lret
mov
mov
popa
js
out
adc
push
loopne
push
into
dec
push
subl
jne
sbb
repnz
dec
xchg
cmp
push
pop
cmp
inc
adc
jp
pop
pop
xchg
es
push
pop
push
mov
leave
adc
ds
xchg
add
cltd
dec
push
movsb
ja
repnz
lods
jns
mov
repz
xor
xchg
pushf
jecxz
sub
sti
repz
je
jmp
int3
xchg
stc
xchg
scas
ljmp
xor
pop
outsl
pop
shrb
lret
xor
das
pop
mov
cs
jo
sti
pop
mov
cmc
mov
in
pop
lret
mov
mov
pop
lea
mov
dec
or
and
aam
add
mov
or
mov
add
xchg
jno
fcomip
add
shlb
mov
pop
fwait
cmp
mov
sub
jle
icebp
add
push
ljmp
lock
popa
jae
fwait
jo
fcom
and
into
push
adc
cwtl
or
jl
lds
js
jo
xor
cld
insl
and
and
dec
inc
mov
fbld
xchg
dec
adc
pushf
lods
aad
fisubl
jbe
data16
push
add
testb
lock
mov
fistps
into
fwait
push
test
xchg
ljmp
adc
pop
cmpsl
jo
jecxz
dec
lret
pop
jb
sbb
stos
lcall
and
js
movsl
push
outsb
and
test
out
bswap
sbb
dec
fimuls
or
add
pop
loope
leave
int
push
xor
pop
push
jo
xor
dec
dec
mov
push
pop
outsb
out
in
ds
pushf
imul
enter
clc
jns
xchg
loop
sub
pop
out
stc
push
and
push
push
dec
loopne
decl
gs
ss
pop
adc
or
ficompl
sub
test
or
lds
adcl
mov
mov
mov
aas
push
mov
sub
outsb
jo
add
scas
data16
cmp
sub
xor
jae
cmp
inc
int
jns
cmpsb
lcall
mov
fdivrp
pop
sbb
outsl
sub
sub
mov
dec
pushf
add
test
cwtl
aaa
and
aam
pop
or
mov
mov
xchg
popf
xor
dec
mov
mov
dec
push
sbb
add
int3
jmp
sbb
mov
mov
fwait
pop
mov
jbe
and
mov
cwtl
jo
add
jne
negl
jb
ficomps
sbb
mov
ret
test
bound
sbb
add
js
jae
es
pop
addr16
mov
addr16
lcall
sbb
push
pop
cmp
icebp
add
icebp
jecxz
sbb
sarl
xchg
mov
sbb
push
mov
xlat
mov
sti
sbb
outsl
jbe
jg
cmp
cmc
mov
jl
sub
jmp
add
movsb
pop
jns
cmpsl
sbb
xor
add
pop
rolb
movsl
jge
aas
mov
dec
jmp
add
xor
stos
jmp
movsl
mov
popf
cmp
pop
pusha
add
out
stos
in
mov
sbb
mov
lret
addb
in
adcb
inc
jp
push
flds
xorl
push
push
pop
push
fiaddl
mov
sbb
sub
and
pop
daa
mov
rolb
insl
loope
icebp
xchg
xchg
rolw
pop
or
into
pop
je
adc
mov
sbb
test
lahf
cmp
add
rol
xorl
mov
mov
leave
mov
nop
movsl
mov
inc
adc
mov
cs
cs
mov
mov
pop
cmp
sub
adc
mov
ss
sub
je
negl
in
and
mov
lret
int
into
repnz
sbb
dec
push
sbbb
enter
inc
stc
enter
adc
sahf
pop
pusha
shlb
push
jne
movl
int3
shrl
mov
out
pop
dec
lds
sahf
dec
mov
jp
fildl
xchg
inc
xchg
mov
jb
and
push
push
dec
orb
ds
jnp
xchg
in
or
les
outsb
xor
cmpsl
jle
ret
add
inc
js
xor
fwait
and
sub
mov
stos
jle
aas
rclb
test
faddp
inc
xchg
imul
out
pop
shrl
stos
xchg
or
loopne
add
dec
push
std
loope
std
xlat
dec
lock
and
and
movsb
cltd
xchg
fldcw
pop
push
ja
mov
pop
mov
mov
lcall
pushf
pop
rcr
sub
in
fcmovnu
out
hlt
push
fdivs
sub
add
js
sub
daa
inc
or
mov
or
sub
fmuls
sti
dec
mov
push
inc
sti
iret
stos
outsb
pop
clc
stos
les
pushf
add
and
jle
cmc
pop
sbb
cmc
int3
xor
and
into
or
dec
fists
push
xchg
int3
loopne
ja
cmp
pop
std
mov
outsl
lds
gs
mov
xchg
in
cli
stos
pop
or
jns
jge
mov
fs
fsubs
jmp
inc
sub
ja
jno
out
iret
jnp
mov
scas
cmp
add
xchg
ja
cltd
jbe
es
leave
add
jne
jp
cmp
dec
xchg
fs
leave
movsl
and
lret
sbb
inc
pop
xor
dec
aad
sub
insl
dec
push
cs
pop
cs
or
mov
jns,pn
stos
scas
sbb
imul
mov
inc
out
jo
test
adc
pop
sub
push
lock
push
adc
jle
fldz
mov
mov
in
xor
mov
jo
stos
sub
ds
xchg
int
cmpsl
lods
outsl
cmp
mov
dec
push
adc
out
inc
push
test
inc
jp
and
fdivl
clc
cmp
xlat
dec
mov
inc
add
xor
xrelease
aad
incb
loopne
sbb
xchg
jl
lahf
add
inc
pop
call
jecxz
pop
and
fstpt
in
pushf
aaa
mov
aam
sub
lock
into
dec
inc
idivb
add
sbb
jno
inc
sbb
sbb
cmp
xchg
push
shl
loopne
add
leave
int3
call
dec
fnstcw
ds
stos
or
and
pop
dec
icebp
and
xchg
sub
inc
nop
and
scas
cmp
push
repnz
std
cmp
sahf
rol
push
sub
rorl
dec
js
cs
xchg
in
push
push
ja
gs
mov
jle
xor
nop
add
cld
gs
imul
and
fcmovu
push
cmc
andl
cwtl
aas
push
mov
imul
rcll
jb
mov
stos
ds
push
sbb
aad
subl
imul
stc
aam
xor
adc
out
jmp
inc
mov
jge
or
mov
arpl
mov
and
xchg
mov
xchg
cmp
lcall
fwait
sub
cmp
out
push
add
mov
mov
in
cwtl
adc
in
idivl
leave
mov
and
dec
jnp
mov
hlt
push
dec
mov
and
scas
das
jp
cli
int3
faddl
inc
cmp
lods
add
push
out
js
push
daa
jbe
pushf
push
push
and
ficomps
cmovle
push
cli
jmp
xchg
jo
mov
inc
mov
cmc
sub
pop
pop
xchg
sti
test
dec
cs
lcall
mov
aad
stos
sahf
pushf
or
and
xor
outsl
jge
hlt
or
popf
mov
mov
push
je
sbb
call
movsb
mov
cmp
add
jae
hlt
sub
outsl
inc
inc
adc
repz
xor
xchg
mov
mov
mov
add
fwait
icebp
cld
dec
out
pop
cmp
scas
push
jo
addr16
ror
jmp
bound
add
jb
ss
or
mov
imul
sbb
jmp
inc
cmp
mov
xor
arpl
add
mov
pop
dec
mov
push
sbb
mov
cmpb
sub
mov
bound
jo
rcl
stos
test
shl
pop
arpl
fnstcw
sti
push
xchg
inc
in
fcomps
xor
dec
mov
repz
rorl
jg
sbb
pop
push
lock
add
mov
sub
pop
or
nop
int
out
notb
gs
hlt
popf
or
lret
ljmp
out
jne
add
jo
fs
cld
dec
aas
movsb
inc
fiadds
lcall
sub
jle
or
movsb
and
mov
arpl
cli
xchg
ds
adc
fcmovnb
xchg
push
adc
jae
fistpl
mov
cmc
xchg
xor
mov
nop
testl
in
xor
dec
mov
test
mulb
or
or
pmaxsw
push
push
mov
addl
xchg
fimull
jmp
stos
mov
scas
mov
dec
loopne
xor
push
das
xchg
lock
leave
or
adc
xchg
div
fwait
xor
jnp
inc
pop
xor
cmp
insb
daa
adc
mov
adc
xchg
xchg
in
jo
in
mov
in
sub
adc
or
pop
sub
test
or
jp
aam
xchg
lods
and
ret
stc
push
cli
adc
sbb
lret
sarb
insb
mov
test
hlt
xchg
ja
push
test
ret
fnstenv
clc
popf
pop
or
inc
cmp
mov
or
repnz
rcrb
sub
and
inc
sub
jnp
test
push
inc
pop
pop
std
push
push
mov
js
repnz
daa
sbb
sub
xchg
cmp
lock
sbb
adc
std
lock
sub
jmp
sbb
mov
lcall
ficompl
inc
or
xor
push
popa
or
add
out
pop
mull
outsl
rolb
xchg
sub
add
iret
lock
dec
enter
aas
ret
push
mov
dec
movsb
stc
stc
jne
inc
subl
cmc
cmp
jbe
popf
and
mov
xchg
shrl
xlat
and
mov
add
adc
sub
fiadds
jbe
pop
adc
loope
mov
cmp
in
mov
inc
les
fnstsw
dec
cs
mov
pop
lahf
cmp
cmp
push
or
push
dec
push
aaa
mov
mov
jle
push
fld
sbb
push
mov
and
cmp
scas
into
call
sti
xor
dec
out
sbb
jmp
or
xchg
inc
pop
fs
mov
pop
and
mov
and
clc
mov
in
sbb
subl
std
enter
fidivrl
mov
push
lret
popa
pop
mov
clc
inc
test
out
inc
or
mov
fldt
outsb
addr16
push
out
pop
xlat
mov
out
mov
mov
lret
push
lret
push
xchg
test
push
or
inc
int3
sub
jle
push
push
and
dec
test
mov
push
cmpsb
aam
cmpsb
js
add
mov
clc
ficompl
test
dec
pop
hlt
stc
jnp
sbb
xor
sbbl
cwtl
sbb
ficoms
es
enter
jb
mov
je
lds
cmp
call
fsubrs
inc
cmp
cmp
push
sbb
xchg
xchg
sbb
push
inc
lea
aaa
jge
jns
outsb
frstor
pop
xchg
pop
pop
pop
push
jl
xor
fucom
pop
jle
mov
mov
add
inc
push
popa
ficoml
mov
ret
ror
mov
and
mov
inc
xor
inc
mov
mov
add
xor
shll
sarb
jmp
jns
jmp
in
xor
or
mov
movb
mov
decb
and
fdivr
out
out
mov
popa
xchg
inc
cli
lock
xchg
fwait
mov
stc
sbb
loope
jns
loop
pop
xor
stos
xor
scas
or
out
mov
inc
mov
xor
xchg
and
insb
mov
mov
dec
jnp
cmp
mov
daa
dec
mov
int
inc
push
shlb
xchg
pop
cltd
add
scas
aaa
out
scas
cmpsl
cmp
fldt
dec
and
or
or
mov
arpl
and
xchg
in
rol
fistps
push
inc
nop
testl
xchg
push
inc
push
add
jno
jp
sarl
sbb
cmc
ror
dec
mov
loop
xchg
mov
cmp
dec
stos
dec
int
loop
out
and
inc
imul
jae
xor
cmp
repnz
js
je
pop
fucom
inc
movsl
lea
test
dec
and
push
pop
hlt
jb
sarb
add
cld
or
xor
dec
lods
clc
fs
ficoml
mov
lahf
nop
cld
or
xor
dec
je
mov
mov
stos
fs
fcmovnb
negb
sbb
xor
dec
push
push
rolb
add
stos
xorl
cmp
stos
test
push
push
cmp
sahf
ret
mov
cmp
in
sbb
test
lea
stos
leave
leave
and
popa
js
out
adc
mov
repnz
es
in
das
mov
lods
inc
scas
xlat
cmp
mov
shr
push
fcoml
jmp
mov
inc
std
test
xor
repnz
clc
push
int
pop
cwtl
pop
cmp
cmp
jge
and
pop
jle
cmc
gs
push
out
push
inc
popf
outsl
push
insb
jno
popf
xchg
pop
pop
adc
sahf
aad
pop
mov
sahf
sbb
cmp
cwtl
xlat
xchg
push
dec
cmp
in
jg
mov
icebp
enter
insl
mov
jge
bound
fiadds
sbb
cmc
xor
leave
mov
mov
mov
out
push
dec
push
pop
push
aam
pop
cltd
xchg
cvttpd2dq
test
inc
gs
imul
jne
addps
arpl
cmp
push
call
mov
jo
fmulp
mull
faddl
push
jnp
and
jg
rolb
fidivs
cmp
in
mov
adc
sbb
daa
lcall
and
pop
aaa
cmp
xchg
rcrb
xor
lds
lret
mov
mov
lcall
scas
int3
jbe
xchg
sbb
aaa
lret
std
out
pop
sub
shrl
inc
lds
das
stc
dec
pusha
mov
xchg
imul
inc
test
push
jge
in
push
jne
bound
xor
lret
sub
adc
push
scas
adc
and
mov
adc
mov
idivb
bnd
aad
mov
out
pop
pop
repz
xor
and
popa
imul
or
das
mov
push
cmp
std
mov
cs
adcb
push
xchg
xor
aad
fmul
mov
cmpsb
movsb
into
xchg
fbld
mov
sbb
and
cmc
es
xor
xor
rcr
sbb
je
push
std
out
add
jecxz
sbb
sub
xchg
sti
mov
xchg
ficoml
push
inc
jle
pop
es
jne
test
inc
adc
aas
loop
adc
push
xor
add
jge
lods
jle
out
in
insb
push
aad
and
mov
fmuls
ds
js
hlt
cli
inc
fcoms
call
and
inc
pushf
or
sbb
pop
add
std
stc
es
dec
mov
cwtl
repnz
pop
fidivl
loop
mov
packsswb
push
loopne
outsb
cmp
dec
and
sbb
pop
xor
or
repnz
repnz
inc
popf
inc
dec
add
fadd
aam
fadds
or
mov
mov
cltd
xor
ret
out
pop
imul
dec
jne
mov
loopne
mov
jnp
inc
sub
sbb
leave
movsl
add
das
push
fs
inc
ds
div
arpl
lcall
sbb
jl
jae
sub
mov
push
dec
inc
xchg
cli
push
and
ja
jno
cmpsl
mov
test
lret
jle
cmp
movsl
or
enter
pop
repz
mov
and
mov
imul
fs
pop
cwtl
fs
dec
ffreep
icebp
sbb
es
jae
and
imul
xlat
test
add
inc
mov
stc
inc
mov
inc
xchg
lahf
push
rcrb
mov
into
mov
fs
flds
ss
push
push
insb
popa
jg
adc
stos
lret
outsb
lods
cld
pop
in
sbb
faddl
fiaddl
fsubrs
pop
cmp
bound
mov
lock
lret
int
jnp,pn
and
lea
loopne
imul
cmpb
cmc
daa
movsb
push
outsl
cli
mov
pop
xor
mov
loopne
movsb
adc
pop
fcmovnb
pop
mov
or
out
pop
jns
test
je
push
movsl
stos
cwtl
push
lods
xor
push
fwait
mov
popf
or
dec
mov
test
or
mov
xor
pop
xor
inc
fldenv
add
mov
lds
cmp
ds
fcompl
inc
pop
je
andb
pop
aad
lahf
pop
cmp
push
push
fsubrl
or
js
shrb
xor
ja
lods
shlb
out
hlt
push
test
cmp
or
inc
dec
das
xchg
mov
xchg
insl
mov
xchg
sti
mov
jno
setl
mov
adc
int
push
dec
jb
enter
arpl
out
cmp
ret
mov
jo
aam
add
fistpl
movsl
dec
repnz
mov
jmp
pop
out
loop
pop
xor
adc
dec
xor
sub
push
jp
and
cmpsl
jmp
cmp
es
push
mov
inc
mov
fldl
xchg
inc
faddl
dec
sub
jg
addb
mov
xor
lea
fs
sub
xor
mov
lods
call
adcb
pop
xor
lea
cmpl
bound
pop
out
dec
aas
js
push
inc
mov
lods
shll
and
adc
or
and
lock
inc
mov
cmp
loope
andl
lahf
sti
sti
aaa
xchg
pop
inc
mov
int3
pushl
movb
cwtl
jb
cmp
fnstsw
sbbl
lret
add
adc
adcb
lods
mov
int
loope
fs
loopne
mov
lds
aaa
add
movsl
xor
dec
data16
psrlq
xor
leave
add
jo
adc
outsb
xor
adc
mov
push
stos
fptan
sbb
or
mul
idivb
sbb
stc
mov
xchg
cmp
xchg
pop
mov
add
sub
aaa
ja
popf
and
pop
arpl
cwtl
arpl
sub
addr16
repnz
fwait
dec
cmc
ror
mov
sub
repnz
test
push
mov
sub
or
cmp
fidivl
lret
mov
ds
mov
fldcw
sub
cmp
xor
mov
das
push
adc
cmp
outsb
sbbb
push
outsb
lcall
mov
dec
into
adc
in
xchg
clc
loopne
daa
mov
xlat
inc
mov
jne
mov
call
add
mov
mov
inc
jg
sahf
mov
xchg
jge
sub
aas
mov
mov
scas
jae
xor
sub
lock
xor
pop
jle
fldpi
xor
inc
adc
sub
outsb
cmp
or
cltd
mov
jbe
jne
dec
cmp
ljmp
fsts
mov
xor
ljmp
js
repz
cmpsb
outsl
mov
lods
lret
and
inc
cld
rcrl
cmpsb
jbe
rcll
mov
sub
movsl
cmp
imul
xchg
iret
aam
pop
push
mov
movsb
push
or
loop
lret
fsubr
add
inc
xor
jb
lea
sbb
xchg
jle
sahf
push
jnp
aas
les
mov
and
mov
cmp
or
stos
scas
leave
lods
shl
xchg
dec
cmp
cmpsb
out
ds
movsb
push
mov
xor
jg
or
fs
xor
imul
es
mov
and
mov
fldt
je
sbb
aad
add
xchg
add
rolb
adc
pop
std
cmp
mov
mov
ficoml
daa
or
insb
xchg
fdivp
jo
int
dec
addr16
icebp
aam
push
jno
aad
sub
and
aaa
lret
imul
sbb
sbb
test
mov
mov
ds
adc
pop
popa
jmp
xor
or
out
push
mov
xchg
inc
inc
sub
cltd
stos
shll
sahf
mov
mov
sahf
cmc
dec
cmp
jno
jl
js
mov
mov
push
mov
mov
sbb
aam
lret
loop
xchg
mov
enter
and
inc
bound
aam
aas
mov
popl
mov
xor
loopne,pt
sahf
clc
mov
imul
inc
popa
inc
in
aam
add
jnp
lods
sbb
lods
or
and
jp
int
je
add
cltd
addb
jl
int
xor
imul
dec
or
orl
mov
mov
fwait
cmpsl
arpl
jb
fimull
rcll
push
out
pushf
data16
scas
jge
pop
cmc
lods
jmp
outsb
push
and
pop
add
outsl
add
sbb
int
pusha
mov
clc
mov
jmp
dec
sarl
pop
pop
add
fsubr
xchg
mov
ljmp
sbb
out
mov
jae
imul
hlt
cs
sbb
scas
push
xchg
xor
pop
out
enter
roll
fdivrp
js
adc
mov
das
push
aam
imul
out
testb
mov
mov
sti
pushf
adc
repnz
hlt
call
sbb
xor
sub
mov
cs
xchg
xchg
fisubrl
mov
add
sub
lods
loop
and
inc
ja
sbb
cmc
imul
adc
outsb
push
add
inc
lahf
mov
push
sub
cmp
xchg
sbb
jo
mov
push
sub
in
test
sub
lcall
jl
sbb
add
dec
std
cmp
and
out
add
mov
inc
mov
outsl
mov
mov
jno
jmp
int3
mov
inc
sbb
jle
pop
jnp
mov
cld
scas
enter
test
fbstp
call
mov
clc
fdivrl
fs
ljmp
mov
sbb
mov
jecxz
pop
sub
dec
sub
sarb
mov
mov
xchg
pop
out
and
cs
nop
ss
hlt
adc
cmp
pop
adc
fs
and
pop
dec
popf
popa
aaa
cmp
bound
xor
inc
lahf
dec
jo
scas
mov
or
pop
jnp
dec
xchg
or
test
sub
or
testl
push
push
push
in
mov
mov
cmp
adc
mov
dec
or
jne
xor
out
dec
idivl
pop
mov
lods
jg
xchg
fidivrl
sub
loopne
push
jmp
mov
lahf
xor
fcompl
jecxz
pushf
inc
mov
or
or
push
cli
xchg
lret
out
push
push
mov
out
push
mov
mov
xor
push
xor
lds
add
add
rcrl
xchg
fcoml
mov
jp
add
add
push
fimuls
push
mov
jge
or
stos
pop
ret
pushf
or
mov
cmpsb
push
stc
aad
xchg
jecxz
dec
pop
sbb
arpl
rcl
pop
sub
and
xchg
adc
and
cmpb
test
addb
dec
iret
loop
inc
add
inc
outsl
adc
dec
popf
jmp
int
push
cmp
mov
sbb
insb
popf
stc
cmpsb
push
push
lahf
pop
jbe
les
or
add
fldt
fisubrs
fidivl
push
and
gs
test
cmpsl
lret
mull
mov
call
lcall
inc
ror
dec
jmp
mov
cmp
rorb
pop
out
scas
mov
xor
loop
faddl
cmp
sbb
mov
xchg
push
mov
jg
xchg
outsl
inc
xor
sbb
mov
mov
ret
mov
mov
mov
nop
scas
nop
fildl
add
sbb
imul
push
mov
inc
sarb
imul
aaa
cmc
imul
add
mov
das
aam
bound
fstl
sarl
lea
ficoml
imulb
divb
and
out
inc
shl
mov
pop
jae
pop
loop,pn
rcrb
daa
test
leave
mov
sub
dec
jle
cld
cltd
or
into
scas
push
sbb
mov
roll
mov
jmp
push
ja
xchg
mov
mov
fisttps
mov
lret
inc
push
stc
sbb
stos
outsb
cmpsb
mov
mov
sub
mov
int3
imul
cs
sti
movl
or
shrl
jg
push
mov
adc
push
sarb
mov
jo
sub
or
mov
mov
inc
loope
in
adc
push
cld
je
sbb
imul
ds
cmp
iretw
bnd
iret
loope
push
jae
scas
and
jns
mov
inc
or
xor
insl
or
sub
daa
pop
adc
inc
adc
cmp
xchg
xor
fldcw
add
and
test
orl
pop
and
jnp
adc
adc
setg
push
outsl
xor
mov
jg
fwait
cli
inc
pop
arpl
fwait
xlat
sbb
ret
mov
inc
add
mov
pop
lds
shl
out
sar
jo
hlt
fisubrl
jo
fadds
rcll
mov
mov
ss
insl
jecxz
out
push
insl
and
adc
jbe
mov
lods
mov
sub
mov
sbb
test
in
add
mov
sbb
mov
cmp
mov
add
rcrl
pop
xor
or
cmp
adc
sbb
aaa
scas
xor
mov
add
mov
sar
stos
mov
pop
out
loop
sarb
xchg
pusha
add
imul
mov
mov
sub
adc
ljmp
cmpsl
push
mov
test
push
cmc
out
lock
xchg
mov
nop
test
and
fs
gs
call
inc
fsts
fidivrl
enter
xor
mov
inc
cmp
sahf
xor
adcl
subb
test
sahf
mov
push
adc
fildl
test
jmp
adc
fldcw
cli
pop
ror
lods
imul
push
jmp
jl
mov
mov
inc
fs
fs
or
repz
sbb
mov
inc
lret
or
out
loopne
push
fcmovnbe
dec
mov
mov
pop
xor
pop
pop
xchg
push
xchg
stos
sub
dec
xor
add
iret
and
lahf
stos
lret
jae
data16
xchg
mov
mov
pop
add
sbb
inc
jmp
xor
xchg
adc
fxch
in
cltd
dec
inc
idivl
or
jno
int
xchg
add
int
xchg
mov
push
push
in
inc
aaa
xchg
cld
mov
mov
js
inc
icebp
sahf
push
mov
inc
and
jmp
inc
orl
lret
or
push
ret
stc
das
mov
jp
adcl
mov
inc
mov
cmp
and
cmpsl
fdivrl
addr16
cmpsl
call
mov
xchg
sub
idivl
sub
js
jns
push
sbb
ss
jg
cmpsl
test
mov
xchg
sbb
pusha
cmp
aaa
xchg
sahf
inc
hlt
sub
pop
jbe
orl
or
enter
popa
mov
pop
push
push
idivl
jecxz
sbbb
or
sbb
mov
cld
sbb
inc
push
dec
das
or
ss
imul
dec
sub
inc
jnp
mov
mov
ja
addr16
adc
pop
xchg
cli
jae
daa
outsl
fdivr
pop
lcall
mov
das
pop
sbb
inc
out
mov
push
pop
fs
mov
xor
jecxz
pop
andl
aad
stc
data16
xchg
and
stc
lock
ss
aas
mov
sub
sub
pop
loop
inc
mov
hlt
xchg
negl
push
push
xchg
cltd
cmp
and
inc
in
sub
rorl
sub
call
adc
xor
fisttpll
cmpsl
or
shrl
insb
popa
push
adcb
ljmp
jle
mov
adc
adc
dec
or
mov
iret
add
dec
test
push
jle
bound
bswap
sub
pusha
popa
and
test
std
pop
fsubl
cmp
rol
es
lcall
push
addr16
fs
or
int3
aaa
jno
xlat
pushf
imul
inc
xlat
inc
pop
xor
xlat
adc
pusha
imull
fdivr
std
bswap
out
push
xor
dec
dec
mov
dec
mov
push
cmpsb
and
stc
jo
fnsave
adc
mov
sbb
inc
movsb
test
or
cs
int3
xchg
mov
jmp
push
jge
inc
inc
scas
inc
xor
inc
test
js
xchg
dec
or
clc
adc
mov
loopne
orb
inc
xor
xor
sti
ja
nop
inc
adc
aas
stc
lret
jecxz
xor
cmpsb
adc
clc
fwait
sti
mov
aas
pop
fs
sbb
xor
lock
mov
push
add
mov
ror
movsb
js
xor
dec
mov
outsl
fisttps
sbb
insl
cmpsb
push
xorb
outsb
or
shlb
orb
jle
loop
int
pop
fs
fxch
and
das
scas
push
enter
rdmsr
lods
adc
push
push
repz
aas
inc
in
push
ljmp
or
leave
adc
adc
inc
ja
in
xchg
jo
or
call
out
add
or
push
divb
lret
insl
and
lds
fstl
add
in
lea
adc
popf
mov
dec
mov
mov
adc
aam
pushf
hlt
jns
mov
or
mov
and
lret
in
adc
loope
pop
pop
lods
movsb
jge
sub
inc
xchg
imulb
cltd
insl
movsb
in
arpl
inc
ffreep
not
push
inc
lods
fld
adc
sub
jmp
sbbb
adc
das
daa
xchg
xlat
or
add
pop
xchg
sahf
jbe
insl
shr
mov
inc
lret
fdivl
les
popa
mov
lock
int
inc
mov
out
cmp
in
dec
ljmp
sub
invd
inc
std
xor
test
stc
inc
ret
mov
bound
mov
and
lods
and
push
shr
sarb
cmp
push
xchg
mov
adc
xor
stos
adc
divl
repnz
push
lahf
aas
jae
out
or
stos
jo
xlat
mov
dec
inc
or
mov
cmp
aam
or
pop
jae
adc
popa
js
test
roll
arpl
orb
sub
mov
mov
push
test
or
notl
pop
mov
mov
mov
and
repz
stos
shll
sbb
cmp
or
rol
popa
adc
pop
les
add
mov
xor
lock
dec
in
ficompl
fbld
lods
mov
test
sub
mov
loop
cmc
int3
icebp
in
xchg
mov
filds
inc
xchg
sbbl
mov
pop
jnp
xor
add
mov
insb
mov
cmp
mov
mov
leave
inc
repnz
inc
pushf
xchg
mov
mov
dec
mov
dec
pop
add
mov
pop
add
or
test
orb
pusha
inc
push
mov
stc
cmp
dec
mov
adc
cmpsl
push
or
mov
shll
ja
cmc
int3
into
aad
mov
jmp
loopne
arpl
mov
jge
dec
aaa
das
sti
cmp
fists
les
jge
dec
push
fisubs
mov
sbb
sahf
cltd
xchg
jns
sar
or
int3
jmp
in
push
fwait
pop
or
je
sub
out
push
mov
fstl
dec
pusha
inc
pushf
ja
pop
mov
lea
add
inc
out
jnp
shlb
mov
jae
repnz
int
lds
je
mov
adcl
xchg
sahf
xor
sbb
cli
orb
lods
fdivs
adcl
jbe
pop
and
xor
int
and
lret
rcl
inc
lea
xchg
sbbb
push
aaa
ss
lret
or
pop
cmp
ds
bound
jo
ds
cs
ficoms
push
sub
and
inc
lea
adc
mov
aam
out
and
mov
mov
sarl
aam
in
push
push
or
mov
jne
sarl
stc
push
inc
lock
inc
cmp
pslld
cmp
push
pushf
scas
dec
shll
mov
nop
frstor
movsb
mov
or
inc
cmc
outsl
jecxz
dec
pusha
or
jp
adc
rclb
mov
fnstsw
or
fists
xor
jo
pop
pop
mov
jne
popa
shl
pop
push
or
ja
jge
jb
push
imul
inc
push
cld
mov
and
jmp
dec
xchg
pushf
aam
and
mov
sti
mov
ret
outsl
inc
leave
leave
scas
test
sub
jmp
sub
push
or
dec
sbb
xor
add
jl
mov
mov
inc
pop
mov
call
scas
xorb
in
cli
les
jmp
xor
repnz
jne
stos
mov
cmp
lock
jne
cmpsb
cmpsl
orl
ds
ficoms
insl
jmp
cmp
xchg
xchg
aam
cmpl
test
adc
cmp
data16
lea
sbb
lret
or
loopne
les
fistpll
jle
xor
daa
pop
out
ja
jge
or
jnp
rcl
stc
rorb
cmc
push
ret
xor
pop
cmp
cmpsb
in
mov
das
xor
sar
shrb
rcrb
icebp
xor
inc
push
xchg
push
sub
mov
push
sbb
dec
pop
aas
aad
test
fcoml
hlt
cmp
enter
jecxz
outsl
pop
and
nop
outsl
jle
sahf
adc
shl
cmp
stos
call
jns
sub
ss
in
nop
mov
scas
jle
inc
icebp
sbb
nop
rclb
xor
jl
popa
rcrb
jb
xor
inc
sti
dec
notl
or
push
push
rclb
rorb
push
js
push
inc
mov
ret
test
dec
mov
push
and
cmc
sub
adc
in
xor
sbb
mov
sbb
add
mov
bound
jg
imul
cs
sbbl
iret
mov
push
icebp
xchg
icebp
sbbl
aam
icebp
lahf
xlat
mov
sbb
cmp
stos
repnz
push
lods
sbb
inc
das
lea
pop
pushf
subl
dec
mov
cli
mov
cmp
sbb
or
add
jle
and
dec
clc
repnz
sbb
mov
and
xchg
push
xor
fiaddl
subl
xor
mov
xchg
scas
shll
mov
cmp
or
fdivl
cli
jmp
movsl
pop
stos
sub
sbb
pop
bound
shl
jle
dec
and
mov
shl
mov
or
outsb
mov
ljmp
ja
dec
xchg
subps
sbbb
mov
jns
mov
push
xchg
je
mov
dec
jnp
ljmp
pop
push
inc
sub
or
inc
loopne
pop
js
lea
cs
divb
mov
fldl
repnz
mov
mov
fsts
or
push
sub
daa
pop
lods
ds
arpl
cmc
fmull
test
xchg
mov
lds
clc
idivl
imulb
loop
repz
mov
andl
xchg
in
inc
inc
lahf
jge
into
add
inc
xchg
adc
aad
dec
add
jp
stos
and
aaa
and
mov
jnp
xor
jbe
xor
pop
jo
xlat
call
test
xor
cmp
popa
jne
loop
scas
or
jle
cmp
js
and
repz
mov
sub
leave
int3
lcall
adc
insl
xchg
inc
mov
mov
jb
add
push
pavgb
mul
mov
inc
sbb
sub
inc
xor
ss
jg
int
dec
test
jno
into
aam
outsl
mov
stc
jnp
hlt
pop
cltd
mov
das
adc
adc
adcb
movl
ljmp
repz
popa
fisttpl
mov
mov
clc
jl
sub
je
inc
aaa
push
and
aad
xlat
push
movsl
cltd
mov
imul
or
mov
js
xor
xor
push
push
sbb
mov
ss
adc
loope
inc
fildll
push
cmp
enter
xor
xchg
aas
jo
dec
loop
outsb
stos
rolb
out
inc
repz
test
call
clc
adc
or
mov
mov
sub
jg
push
inc
mov
pop
das
mov
mov
mov
xchg
out
adc
adc
js
mov
outsl
jbe
loopne
adc
dec
fs
in
test
mov
pop
pop
mov
lcall
mov
mov
clc
xorl
cs
sbb
dec
lcall
mov
cmc
daa
ja
je
mov
neg
mov
or
out
lds
add
movsb
fldl
rcrl
imul
int3
jnp
adc
add
xchg
movsl
xchg
and
pop
mov
ficoml
xchg
sbb
and
adc
mov
sbb
hlt
int
test
mov
xchg
jae
call
repz
add
std
jns
add
mov
inc
push
push
fs
cld
mov
enter
mov
or
mov
scas
icebp
mov
pop
add
push
cmpsb
or
aad
stos
mov
sbb
lret
dec
xchg
cwtl
sub
jno
mov
stos
inc
xchg
sub
and
lods
or
cmp
or
cmpsl
dec
repz
cld
sub
xchg
or
sub
jle
scas
ss
cmp
adc
scas
leave
addl
add
pop
mov
xlat
sbb
loop
stos
pop
inc
inc
jl
dec
pop
add
xlat
mov
test
cs
lret
cmp
out
icebp
insb
icebp
cmpsl
sub
dec
test
nop
rcrb
bound
in
jge
pop
or
sub
and
xor
rolb
mov
aas
adc
pusha
bnd
mov
repnz
jmp
negl
mov
repnz
sbb
inc
jbe
in
jo
xchg
loopne
shrb
fistpl
jne
push
cmp
shlb
mov
sub
jns
jp
cmp
movsb
sub
mov
subb
ds
stos
mov
pop
scas
int3
mov
pop
xchg
mov
mov
mov
aas
popf
mov
sbb
mov
stos
mov
cwtl
out
cmpb
pop
cmc
pushl
scas
int3
in
jle
dec
mov
rorl
and
inc
jae
xchg
cli
mov
and
mov
cmp
outsb
mov
es
xchg
clc
test
test
into
scas
xchg
mov
mov
jge
xor
dec
or
pop
out
cli
sbb
sub
int3
dec
jnp
lahf
cmpsl
xchg
sbb
dec
imul
inc
stc
push
fbstp
xor
cmp
cltd
mov
mov
mov
out
stos
push
jl
cwtl
rcrb
and
outsl
dec
adc
jns
fst
cmp
xchg
rcrl
xor
sub
mov
sarb
js
and
mov
cs
hlt
test
faddl
adc
cld
pusha
out
add
idivb
push
int3
hlt
test
sub
test
push
push
xchg
popf
stos
add
xorl
cmp
es
mov
shl
mov
cwtl
into
mov
pushw
insl
ss
and
arpl
lods
cmc
mov
xor
xchg
out
clc
idiv
fmul
inc
mov
int
push
sub
inc
mov
pop
cmpsb
lahf
fcmove
xor
mov
pop
imul
dec
cli
cld
or
mov
xchg
cmp
repz
pop
lret
sbb
xlat
pop
repnz
mov
shrb
pop
int
aam
repnz
nop
gs
stos
std
and
mov
int3
push
ret
rclb
xchg
aad
jp
aaa
fstl
pusha
jae
lods
je
jb
pushf
push
test
mov
jp
jmp
enter
stc
inc
frstor
mov
out
imul
lods
add
dec
jb
mov
add
mov
xchg
xor
pusha
scas
aas
in
decb
and
push
stc
cmc
sub
or
push
test
sub
push
test
mov
push
cmp
mov
mov
and
cmp
sbb
pop
cmp
sbb
and
test
inc
sub
addb
dec
hlt
lock
nop
push
ret
cmp
test
lret
pop
adc
sbb
das
mov
ja
pop
out
imul
dec
mov
mov
aad
les
test
adc
pop
ljmp
sbb
repnz
jae
je
outsb
or
mov
dec
sbb
sub
dec
je
mul
mov
xchg
cmp
mov
insl
repz
pop
jnp
in
and
call
mov
in
jne
inc
jnp
lods
jge
rcr
inc
xchg
loop
adc
clc
mov
repz
mulb
and
adc
inc
cmp
fxch
mov
ret
popa
dec
mov
shrl
out
inc
sbb
fidivs
and
xor
shlb
xchg
or
out
sub
aas
and
bound
gs
test
pop
movsb
mov
nop
int
cmp
sbb
sbb
das
loopne
pushf
movaps
ret
and
movsbl
ret
ljmp
roll
cmp
out
loope
mov
adc
mov
lods
xor
mov
add
cmpsb
sbb
push
movl
or
sub
xlat
cld
je
insb
shrl
lock
adc
in
std
xorl
xor
or
repz
mov
push
inc
mov
mov
lcall
das
test
xlat
push
shl
stc
sbb
lcall
push
mov
xor
xchg
cmp
cmp
cmp
lock
les
push
stos
add
mov
mov
add
adc
cmpb
jbe
push
insb
cmp
in
dec
fnstenv
pop
xchg
lods
popf
jo
xlat
mov
cmpsl
dec
fcoms
inc
nop
repnz
fistpl
stc
into
imul
mov
push
cs
xor
call
jb
push
mov
sbb
fwait
pop
sbb
cltd
pop
push
xchg
sub
push
dec
add
mov
push
mov
dec
call
xchg
xor
push
add
inc
cmc
mov
cmc
pusha
lcall
pop
loop
movsl
int
mov
ljmp
shlb
leave
aad
test
clc
sub
stos
ret
mov
xor
xchg
ja
push
mov
stos
shlb
mov
out
and
sbb
jb
sbb
and
and
cmp
pop
lds
test
adc
filds
mov
dec
jb
hlt
fstpt
fs
mov
jl
inc
shlb
lds
or
sub
mov
mov
jl
xchg
shll
mov
add
int3
inc
pop
subl
mov
cs
xchg
cmpsb
in
lods
imul
lahf
out
ss
cmpsb
lsl
loopne
icebp
scas
cmpsb
test
repz
mov
call
inc
pop
fldenv
int3
int
lock
sarl
jo
lret
lods
movsl
inc
fisttps
inc
mov
and
mov
int3
insl
sbb
adc
mov
adc
mov
push
into
pop
sbb
cmp
mov
bound
data16
mov
cmpsb
enter
pop
insb
lods
filds
data16
cltd
mov
mov
xlat
push
mov
test
dec
test
shrb
xchg
movsb
xor
mov
pop
rorl
pop
test
sub
cli
fwait
movb
lret
jbe
outsl
push
adcb
imul
cmp
push
aad
in
mov
push
pop
sub
aad
jne
bound
adc
mov
push
aas
les
jne
es
cltd
inc
movsl
jbe
mov
movb
rolb
xchg
cmpsl
nop
add
sbb
sti
pop
sub
sbb
mov
push
mov
mov
or
xor
xor
or
xchg
lods
sbb
push
cli
inc
cli
mov
jb
mov
loopne
mov
push
dec
fisttpll
repnz
sbb
or
imul
sbb
in
cmp
in
add
cmp
shll
cmpsl
pop
add
xchg
add
sub
test
mov
dec
push
add
jno
mov
aad
arpl
add
jo
out
mov
mov
clc
std
lea
inc
xchg
xor
jl
pop
jmp
and
stc
arpl
push
mov
xchg
dec
mov
lahf
sub
repz
and
dec
mov
data16
ds
cmc
cli
imul
dec
insl
gs
jl
jg
dec
lds
idiv
mov
push
sbbb
ret
push
repz
fcos
xchg
cmp
mov
inc
cli
loop
lock
adc
cmpsb
pop
lret
mov
pop
jp
push
xor
cmovp
mov
into
cwtl
hlt
test
out
fisubrs
fcomps
or
fnstenv
enter
cmpsl
sbb
call
and
js
popa
divl
scas
movsb
jbe
shrl
jmp
imul
test
sbb
pop
dec
mov
adc
xchg
scas
sbb
es
inc
adc
xorb
dec
int
fidivl
adcl
sahf
xchg
sti
popf
mov
mov
pusha
sti
or
ret
addr16
cltd
pop
stos
fwait
sbb
out
or
pushf
repz
sahf
mov
movsl
lds
mov
cltd
push
adc
sti
movsb
dec
dec
arpl
neg
inc
or
mov
fwait
hlt
sbb
add
push
loope
fdivl
aad
xchg
or
adc
push
sub
cmc
xor
popa
jle
gs
scas
jo
sub
arpl
xor
inc
iret
inc
mov
mov
ds
mov
out
push
jecxz
sti
inc
popf
push
jge
subl
push
push
daa
aaa
dec
stos
mov
call
xchg
hlt
scas
roll
imul
aaa
loope
cmp
in
inc
ja
mov
mov
inc
popa
insl
jp
mov
repnz
add
mov
jmp
nop
fistl
into
repz
shlb
cmp
jnp,pn
pop
and
pop
gs
inc
enter
jp
repz
hlt
ffreep
xchg
fs
push
jg
cwtl
lods
pop
dec
sub
ror
cmp
ret
push
aad
pop
mov
mov
sub
int3
inc
nop
bound
sbb
imul
inc
nop
xor
into
jmp
mov
push
jge
arpl
mov
shlb
fidivl
out
repz
xor
jne
sbb
jbe
and
sub
scas
fistpl
mov
xor
push
add
add
add
movsl
pop
pop
std
lods
and
jp
sbb
lock
adcb
cmp
es
xor
add
adc
cmpsb
xor
sub
adc
and
sub
cmp
stos
aaa
push
data16
push
popl
and
cmp
jb
pop
fwait
sub
out
sbb
mov
mov
in
imul
jne
and
out
pop
mov
jnp
lds
test
xchg
xchg
jno
ds
outsb
add
roll
jl
ja
sub
mov
add
cs
pop
jnp
addl
in
out
repnz
sbb
push
xorb
inc
clc
enter
mov
out
jecxz
nop
mov
cmpsb
dec
and
repz
add
into
lds
call
in
or
xchg
nop
aam
mov
mov
lods
add
dec
or
movsb
pop
ss
cwtl
add
jp
cmpsl
scas
stos
mov
xor
ljmp
or
mov
and
sub
leave
and
lods
popf
ja
sub
ljmp
adc
ja
sub
fdivl
cmpsb
pop
icebp
xchg
add
out
jmp
push
push
mov
je
ljmp
hlt
push
mov
jnp
ss
add
stos
out
dec
scas
push
inc
rcrl
lret
cli
inc
mov
shl
mov
mov
push
adc
clc
popa
mov
xor
scas
pop
gs
loop
pop
leave
leave
mov
adc
es
outsl
inc
mov
test
sbb
lret
es
add
test
jne
loopne
mov
aaa
sbb
stos
inc
sbb
pop
mov
jo
adc
xchg
inc
adc
icebp
aaa
and
mov
fs
or
dec
or
add
push
or
mov
mov
lcall
xchg
ds
fstps
out
or
loop
je
sarl
int3
repnz
pop
lahf
mov
pop
push
mov
adc
stc
mov
int3
push
jle
lea
movb
and
mov
repz
cld
stos
mov
mov
dec
pop
stos
push
ljmp
js
fndisi(8087
sbb
mov
mov
sbb
pop
mov
xchg
push
pop
lock
std
push
js
mov
push
repnz
xchg
stc
jae
or
in
inc
push
mov
cmp
or
pusha
repnz
ljmp
mov
leave
call
pop
cmpsl
aas
je
xchg
scas
sub
mov
test
push
sbb
add
movsb
je
push
or
jecxz
cmp
mov
inc
inc
and
lods
pushf
iret
and
daa
cmpsb
dec
movsb
pop
arpl
pop
xchg
mov
dec
lcall
xchg
das
push
jp
push
sub
jp
cld
jne
cld
aam
stos
xchg
mov
sub
push
out
push
inc
fcompl
mov
insb
mov
imul
inc
inc
out
push
sbb
xchg
repnz
and
fwait
sti
mov
test
xchg
cmpb
push
pushf
les
aaa
or
scas
mov
cmp
and
fimuls
push
mov
inc
rcr
popf
sub
mov
cld
mov
dec
cmp
or
lcall
jb
cli
lds
adc
in
mov
and
adc
jge
sbb
jno
lret
nop
sti
and
pop
or
loopne
sarl
lods
xchg
das
cmp
sub
push
adc
scas
mov
jno
and
fisubrs
aaa
inc
mov
push
int3
pop
mov
cmp
fidivrs
cld
pop
or
mov
dec
mov
wrmsr
add
subl
inc
stc
sub
mov
scas
dec
pushf
push
popa
pop
jnp
aas
aam
dec
aad
or
sub
into
into
mov
loope
or
adc
clc
jmp
std
pop
push
jecxz
push
or
stos
lds
sub
adc
push
cmpsb
cwtl
repnz
sbb
jnp
or
push
or
adc
jmp
pop
push
adc
mov
iret
push
mov
daa
adc
xor
shlb
jp
add
test
pop
push
push
leave
jg
pop
in
mov
dec
dec
adc
dec
pop
xchg
fwait
lock
xor
inc
and
xorb
mov
fs
loope
mov
dec
pop
dec
adc
pop
scas
sbb
sbb
idivl
dec
lods
xor
sti
xor
std
ljmp
jnp
cmp
lahf
idivl
imulb
lock
lds
and
cltd
dec
adc
outsl
mov
iret
andl
cltd
aas
rcl
testb
loopne
leave
add
divl
shr
sbb
jmp
adc
lds
xchg
test
mov
jg
fiadds
push
sbb
xchg
imul
scas
lods
adc
movsl
or
cmp
push
mov
outsb
xor
fmulp
fwait
cmp
inc
cmc
pop
repz
mov
jl
ja
dec
daa
fists
jmp
fwait
repz
jl
adc
clc
lea
out
pop
xor
and
jle
mov
iret
frstor
ss
lods
loopne
add
stc
xchg
jl
mov
ret
jne
loop
fnstcw
lret
sbbl
sbb
adc
or
stos
insl
in
mov
push
sbb
mov
xchg
test
stc
pop
sti
adc
loop
sahf
divb
mov
mov
jecxz
cmpsl
cmp
sub
decl
int3
movsl
fdivrp
enter
cmpsb
addl
loopne
out
push
or
mov
jecxz
sbb
dec
scas
test
mov
shll
imul
testb
or
pusha
inc
test
into
out
es
in
ror
rcl
add
sub
sub
imul
mov
mov
xchg
out
std
test
inc
dec
mov
fstpt
xchg
je
mov
out
push
into
adc
pop
out
xlat
js
iret
jno
imul
push
outsl
aaa
inc
dec
fadd
sub
lea
rcll
or
xor
xchg
sub
ljmp
repnz
mov
jg
mov
std
xor
gs
rolb
push
addl
movsb
mov
enter
add
add
sbb
sub
and
xor
mov
sub
inc
inc
outsb
movsb
leave
je
aaa
inc
xchg
stc
loope
adc
sti
int
fcomp
sub
cmp
mov
mov
jmp
mov
jbe
jl
cltd
ret
out
or
mov
cmp
xchg
adc
sub
xlat
and
and
in
lret
jno
pop
cmp
pop
enter
test
stos
push
pop
fimull
jbe
shll
xor
loopne
daa
int
jae
xor
mov
sub
mov
ljmp
mov
ljmp
andl
xor
lret
pushf
dec
call
mov
add
fs
push
fildl
inc
adc
dec
inc
mov
and
popa
rcrl
iret
bound
js
js
movsl
adc
xchg
lods
pop
push
push
cmpsb
je
or
jo
push
sub
shll
aas
push
jns
loopne
adc
ss
xor
arpl
dec
lret
popf
and
out
lcall
sub
jge
jae
jge
cmp
mov
sbb
fwait
ds
psubusw
fcomps
fwait
imul
js
lds
sarb
xchg
sub
aam
movsb
jmp
enter
push
xor
jbe
adc
push
pop
pushl
loopne
push
and
sub
cmp
pushf
push
and
jp
add
mov
lret
ds
popa
push
xchg
inc
xchg
and
rolb
std
out
mov
jecxz
sarb
jle
sbb
pop
addr16
cltd
xchg
imul
xchg
cs
jecxz
scas
jae,pn
cmpsb
fs
adc
jmp
sub
adc
sub
hlt
nop
cmc
imul
stos
jle
add
data16
jle
inc
cli
lcall
mov
aas
xor
and
push
pushf
pop
int3
cltd
or
jp
sbb
pop
sub
fsubs
xor
insb
push
push
adc
jg
dec
push
push
mov
xchg
popa
scas
jae
popa
cld
cmp
inc
pop
jnp
pusha
lcall
outsb
mov
xor
xlat
cmp
xchg
adc
fwait
hlt
ja
mov
or
jl
lock
adc
inc
adc
movsl
mov
adc
aaa
pop
mul
sti
mov
fistl
cmp
test
sub
xor
jmp
add
push
xor
pop
fistpll
add
mov
push
out
and
int
push
xchg
adc
jge
test
mov
inc
inc
add
repz
shl
sub
jge
dec
ds
gs
sbb
in
push
inc
icebp
mov
shr
iret
in
loope
jl
ljmp
xchg
mov
jnp
movsl
pop
ja
stos
dec
clc
movsl
dec
sbb
shrl
sbb
and
in
jo
xchg
add
lods
daa
insb
add
push
push
mov
jns
sub
in
test
movsl
sub
xchg
mov
mov
stos
push
xchg
fadd
mov
inc
imul
mov
mov
mov
jo
ljmp
sti
pop
in
ror
mov
add
vmovaps
mov
xor
dec
pop
imul
push
loopne
sub
out
out
push
popf
cmp
adc
imul
mov
push
sbb
out
call
add
mov
jb
pop
test
mov
xor
and
aas
sahf
jmp
sub
imul
ret
cwtl
inc
and
ja
cmpsl
dec
movsl
or
stc
int
pop
data16
mov
sub
das
shl
das
mov
mov
or
sar
mov
repz
dec
mov
xchg
push
ret
stc
insl
inc
cltd
mov
inc
push
xchg
xchg
mov
je
sub
fwait
dec
jo
xor
in
add
aaa
and
scas
and
sub
xor
test
loop
scas
std
std
and
xor
mov
inc
rcrb
js
or
lret
scas
test
cltd
ss
sbb
test
mov
loop
call
rcrb
sbb
pop
out
dec
jmp
mov
jne
jbe
mov
pop
pushf
test
cmp
push
jnp
mov
fbstp
repz
sub
and
xor
in
mov
xchg
in
lock
nop
fxch
ss
xlat
inc
scas
cld
jns
mov
imul
xchg
es
mov
jmp
gs
xchg
inc
sbb
pop
jb
lea
int
pushf
cmpsb
cmp
test
adc
enter
inc
push
cltd
xor
out
mov
pusha
mov
pusha
add
dec
aaa
enter
orl
mov
cmc
xchg
shll
push
push
lcall
jns
insb
add
pop
mov
shl
int3
xor
addr16
push
jae
adc
push
cmp
sahf
fsubrs
addl
jb
icebp
aas
int3
xchg
mov
push
shrb
cs
ljmp
mov
inc
xlat
adc
cli
fucomp
jo
andb
and
jge
mov
subl
or
adc
xor
movsl
inc
push
pop
add
loopne
cwtl
int
push
cmpsb
repnz
xchg
jno
lret
cmp
pop
fmul
jge
movsl
add
lods
lahf
sbb
int
mov
mov
into
loopne
jns
arpl
and
lret
iret
mov
lods
push
push
adc
cmp
jg
dec
inc
add
adc
push
jl
cmp
or
jge
mov
dec
cmpsl
mov
mov
push
in
xchg
in
add
setne
inc
repnz
into
test
xchg
test
sarl
js
push
cs
pop
into
push
sub
fwait
in
sbb
pop
jge
imul
fbstp
inc
scas
dec
or
add
dec
push
daa
and
aaa
icebp
jg
or
dec
push
jnp
daa
push
mov
pop
out
jl
sbb
gs
mov
je
adc
lock
out
repnz
add
xchg
icebp
popa
or
pop
mov
rcll
jne
mov
sarl
sbb
mov
bswap
or
fimull
sbb
mov
inc
in
mov
pop
fnstcw
ret
or
movsl
push
or
into
test
out
sub
xchg
push
push
and
fstpt
roll
leave
push
add
jns
outsl
fsts
fisubs
iret
out
sti
mov
in
ja
mov
ja
add
mov
jp
push
aad
out
ret
nop
scas
jae
xchg
mov
inc
aam
sub
xor
cmp
xor
pop
insl
outsl
rcrb
cltd
cmpb
cmp
ja
pushf
data16
mov
int
dec
cmp
sub
xor
jo
xor
mov
xor
mov
sub
cmp
cmp
inc
add
mov
ret
inc
das
jns
push
popa
inc
push
fsub
dec
xchg
push
sbb
outsb
mov
inc
adc
jnp
rcrl
outsb
bound
lds
xlat
jmp
repnz
ja
push
gs
pop
loopne
loope
xor
jge
enter
pop
das
jmp
mov
scas
xor
sahf
jae
roll
jno
add
dec
xorl
jnp
les
fdivs
xor
jmp
push
push
test
adc
fstpl
lret
sub
pop
out
hlt
dec
sub
sub
jecxz
push
mov
cmpsl
paddd
jns
addr16
dec
lock
ficoms
lds
imul
inc
imulb
push
lret
push
int
loop
aad
jo
fistl
sbb
push
cmpsb
mov
mov
pusha
fcmovb
aad
shll
and
adcb
outsl
mov
add
and
sub
xchg
imul
xchg
cld
cmpsb
cmp
popa
sbb
pop
xchg
cld
in
inc
push
popa
pusha
push
push
aaa
scas
sub
ret
fdivr
imul
sbb
cltd
test
cld
notb
mov
push
jg
cmp
push
dec
subb
and
sub
sub
lcall
repnz
push
jg
in
movsb
call
sbb
shr
pushl
xor
cmp
dec
repz
sti
ret
push
adc
icebp
insb
mov
sub
jo
cltd
mov
loopne
ret
sub
out
fscale
out
push
iret
in
scas
cs
pop
dec
sbb
jns
ret
add
add
lods
sti
pop
cmp
shl
cmc
out
sub
jl
pushl
pop
mov
mov
std
outsb
xor
out
je
pmuludq
mov
jb
insl
sub
xor
add
cli
test
cmp
jl
fildl
push
roll
and
nop
popf
pop
cmp
inc
dec
mov
ret
std
or
test
jno
pusha
fnstenv
sub
stos
adc
xorb
cwtl
fiaddl
xchg
clc
cmp
mov
ret
sarb
and
into
outsl
sbb
push
loop
scas
push
sub
incl
cmp
repz
enter
arpl
jmp
add
repnz
cmp
outsl
cmp
sbb
sbb
and
cmp
mov
data16
xchg
dec
mov
es
pop
jge
rcll
and
mov
lcall
adc
lock
test
lahf
xchg
aas
movsl
mov
out
pusha
lret
xchg
jl
out
xchg
decb
sbb
les
cmp
cmp
add
ds
and
fmull
mov
xor
cli
ret
push
xchg
cmpsb
cmp
test
add
dec
or
out
fcoms
add
adc
jp
test
int
or
popf
loopne
clc
jbe
adc
jnp
sub
add
aaa
push
xchg
sbbb
int
dec
imul
dec
jae
sar
and
scas
je
stc
pop
lret
pop
pop
cs
pop
je
jb
in
lds
mov
cli
cmp
push
mov
inc
dec
adc
sahf
add
push
add
push
sbb
add
pop
out
je
push
ja
outsl
jbe
xchg
ret
mov
data16
sbb
lds
and
push
jno
jp
xor
mov
push
loope
jp
addr16
xchg
aam
out
mov
cmc
add
out
out
fwait
cmp
push
xchg
gs
iret
insb
mov
xchg
iret
rorb
xor
lahf
aam
sub
push
mov
rol
shrb
push
repz
mov
push
outsl
xchg
xor
or
and
int
push
lods
jmp
inc
ret
push
mov
fbstp
inc
out
ret
data16
roll
inc
adc
or
or
sbb
lahf
sbb
decl
repz
mov
notl
aaa
mov
and
loope
fstpt
mov
mov
cmpb
mov
pushf
mov
sub
leave
mov
cmp
lods
or
xchg
out
adc
inc
xchg
test
int3
push
cltd
xor
push
jns
js
mov
sub
lret
test
mov
xchg
jo
js
xor
aad
std
lea
or
loope
add
cmp
mov
int
push
aad
sub
std
jb
xchg
loop
iret
and
aam
mov
dec
fdivl
lods
or
int
jbe
sub
pop
pop
test
pop
cmpsl
shrl
add
sub
xor
jnp
add
and
js
into
pushf
ficompl
cmpsl
daa
mov
push
or
shl
sbb
iret
xchg
fs
sub
jecxz
ror
fwait
es
lahf
sub
lods
push
xchg
mov
js
ljmp
and
inc
lds
shll
push
cmc
sbb
push
sbb
cmc
movsb
lods
fldt
dec
ficomps
jle
es
sbb
adc
hlt
shlb
adc
sbb
stos
out
push
sbbb
ljmp
push
push
cwtl
iret
int3
scas
pop
clc
cmp
adc
stos
lret
pop
mov
sbb
xor
ss
mov
in
push
xchg
sbb
mov
inc
add
dec
leave
xor
mov
pop
push
xchg
mov
add
xchg
test
inc
pop
add
in
cli
lea
jl
mov
in
lcall
sub
andb
lret
fistps
and
pop
pop
fdivl
lods
jmp
aam
mov
xor
subl
cwtl
je
je
mov
popa
inc
cmc
lods
and
mov
cs
test
into
mov
pop
sahf
aas
mov
dec
sbb
fs
pop
sub
xorl
mov
jae
add
aas
inc
repnz
adc
mov
rcrb
pop
xchg
flds
and
and
mov
loope
sti
pop
cmp
jno
xchg
and
mov
scas
aam
mov
lods
ret
in
lods
ffreep
dec
mov
clc
fldcw
lock
pop
out
mov
and
xchg
das
inc
fs
outsl
xlat
mov
pop
into
out
jnp
lret
mov
mov
push
push
flds
test
mov
daa
cwtl
mov
fildl
inc
leave
and
cmpsb
push
hlt
mov
dec
mov
or
xor
mov
and
popa
jb
sub
mov
mov
out
cmp
adc
inc
cmc
or
movsb
gs
jg
dec
lods
test
push
and
js
push
pop
pop
dec
int3
rcrb
cmp
push
mov
in
aas
sub
and
add
addl
mov
sbb
pop
mov
and
rclb
arpl
pop
adc
mov
ror
ret
and
mov
add
sub
push
inc
aaa
push
pop
lret
bound
rorb
xor
testl
cmpb
or
int
out
adc
jge
dec
dec
adc
and
adc
aas
outsl
mov
xor
bound
mov
mov
push
popf
into
je
dec
aas
jbe
and
xchg
popf
mov
cs
movsl
xchg
ja
test
and
or
cltd
lret
push
mov
lea
ja
stos
mov
push
ret
cld
xchg
filds
bnd
mov
adc
movsl
jp
into
mov
pop
ljmp
dec
test
das
int
jmp
lcall
jle
int3
repnz
scas
jb
pop
push
inc
jbe
mov
outsb
pusha
mov
pop
xchg
sbb
shll
cmc
mov
jecxz
adc
les
sub
pop
mov
push
jmp
xchg
and
std
mov
movsb
mov
or
into
out
mov
dec
push
inc
jnp
movsl
mov
adc
pop
push
pushf
mov
mov
jb
jmp
mov
and
add
rcrb
sbb
jbe
fisubl
cmp
daa
mov
bound
mov
dec
jmp
sub
xlat
cltd
dec
xor
outsb
call
xor
cwtl
lcall
js
xlat
imul
lahf
add
cwtd
jle
mov
and
adc
sbb
adc
jne
ficompl
mov
subb
mov
test
ret
adc
lock
sub
jp
sbb
mov
push
xchg
mov
outsb
sub
pop
mov
or
adc
add
bound
stc
sbb
xchg
or
mov
jge
push
xor
mov
push
pop
adc
sti
mov
jne,pt
out
idivb
and
dec
sub
pop
cmpsl
insl
xchg
flds
add
mov
push
ffreep
mov
push
pop
xor
or
jb
and
xchg
push
jae
jo
mov
sbbb
rorb
pop
jmp
cmpsl
cltd
fisubrs
pop
mov
xor
cmc
ret
int3
std
pusha
cltd
adc
das
fcompl
pop
sbb
fistpl
outsb
out
mov
fsubl
adc
lods
pop
or
fs
cli
insl
loopne
movsl
repnz
stos
pop
wrmsr
add
inc
ljmp
incb
test
sub
mov
xchg
push
adc
ret
mov
push
xchg
sub
das
inc
cmp
daa
xchg
icebp
cmpsl
mov
out
adc
mov
sahf
in
add
out
inc
lret
lahf
jg
negb
outsb
fmull
sub
sti
out
cltd
dec
inc
jl
in
pop
popf
xor
push
dec
and
imul
push
and
daa
stos
inc
push
pop
les
xlat
mov
adc
xchg
push
in
jge
or
mov
inc
stc
and
xchg
push
jmp
lahf
sub
dec
loopne
fs
lods
cmp
sbb
and
xchg
xchg
push
es
aam
mov
push
out
imul
in
mov
dec
or
jle
setnp
mov
xchg
sti
stos
mov
sahf
adc
adc
mov
sub
lods
mov
sub
mov
push
push
adcl
mov
arpl
and
jg
arpl
test
push
mov
cmp
push
mov
sub
testb
aam
icebp
test
addr16
jae
lret
pop
adc
jae
push
mov
xchg
mov
por
lret
mov
inc
sbb
fs
lret
shrb
scas
adc
pop
jg
sarb
mov
scas
sub
int
cmp
leave
inc
inc
xchg
or
dec
inc
addl
notl
mov
out
cmpsl
mov
fists
loop
jle
adcb
mov
jle
xor
aad
rclb
jl
dec
adc
xchg
insl
dec
inc
lea
pop
push
or
and
testl
fiaddl
dec
rolb
dec
jl
data16
cmp
inc
jle
push
out
and
pop
pusha
aam
aad
push
lods
dec
sub
pop
add
pop
in
jge
cmp
mov
cmp
inc
pop
adcl
mov
lcall
push
mov
xlat
mov
push
rorl
call
adc
cwtl
push
mov
lds
loope
adc
add
adc
loopne
hlt
push
int
dec
add
cld
pop
es
xchg
jge
adc
and
nop
mov
ret
jbe
and
inc
jecxz
in
mov
scas
inc
mov
sbb
ret
ss
scas
in
call
and
into
mov
pop
add
lahf
jbe
add
adc
aam
sub
insl
scas
xlat
or
inc
inc
push
inc
adc
adc
into
repnz
insb
hlt
push
addb
pop
pop
mov
lea
adc
jg
sbb
or
in
pop
xchg
mov
mov
bound
clc
dec
dec
cmp
adc
gs
in
sbb
xor
popa
push
sbb
shrl
mov
push
daa
test
imul
sbbw
incl
jo
xchg
inc
movb
subl
aam
repz
inc
sbb
or
add
mov
out
dec
pop
aas
mov
and
mov
pop
mov
lock
rorl
aas
push
jp
mov
push
pop
and
int
jae
push
mov
jne
fiaddl
mov
pop
test
test
push
in
add
push
mov
jae
out
int3
mov
fstpl
mov
cli
test
dec
dec
hlt
sbb
dec
ror
test
inc
test
pop
xchg
jae
pop
lods
cltd
ss
jbe
cmp
test
xchg
mov
sti
and
cmp
dec
inc
sub
mov
push
subb
js
sbb
mov
jne
imul
and
sbb
mov
pop
cwtl
jb
add
mov
cmp
sti
mov
adc
and
cmp
nop
xchg
adc
add
add
add
or
mov
xchg
lcall
test
stc
cmp
fnstsw
fstl
cmp
lcall
shll
cmpsl
fdivrl
aam
sub
ret
int3
jne
out
push
sub
out
loope
xchg
nop
rol
outsl
daa
sub
xchg
cs
in
and
imul
popf
push
std
jmp
in
mov
jo
scas
mov
pusha
mov
test
jb
adc
insb
and
mov
and
xchg
in
rorl
movsl
and
ret
jne
popa
mov
in
and
jbe
insl
or
lret
cmp
adc
jns
adc
cmp
clc
add
jae
in
inc
movsb
and
mov
add
lret
push
xlat
stc
enter
mov
lret
test
sbb
add
push
mov
xchg
in
rolb
adc
mov
ljmp
jp
mov
fiaddl
adcb
into
cmp
mov
mov
in
ds
aam
pandn
or
mov
subl
push
inc
sub
popf
or
insl
push
std
pop
rclb
arpl
pushf
add
sarl
pop
aas
out
rcrb
cmp
push
cs
mov
push
and
sahf
push
call
icebp
cmp
dec
fsub
repnz
out
mov
xor
nop
jg
insl
xchg
enter
xlat
mov
push
pop
add
lret
aas
ret
ss
stc
ret
sahf
sub
sahf
dec
addr16
insb
into
rorl
push
cmpl
push
in
mov
adc
fs
icebp
out
cmp
mov
add
scas
pusha
jge
and
push
sbb
dec
xor
cmpsb
mov
pop
rcrb
call
dec
fdivr
jbe
dec
adc
add
xchg
fistps
ret
mov
andl
out
xchg
test
mov
mov
jae
fs
push
add
or
pop
aad
call
cmp
push
nop
xchg
ds
in
testl
add
dec
jae
sbb
inc
jbe
cmp
jmp
loop
mov
int3
pop
jmp
xchg
rcl
mov
lahf
insl
mov
add
ror
popf
push
or
mov
lret
adc
xchg
sub
xchg
insb
insb
pop
pop
sub
dec
outsb
movsl
imul
ret
push
jns
jge
aam
and
out
add
sbb
add
xor
or
jmp
xchg
mov
ja
cmp
in
nop
imul
pop
mov
pop
lcall
adc
enter
xor
aad
pxor
lcall
sub
xchg
neg
aad
mov
dec
xor
mov
lret
lea
les
add
inc
adc
mov
cmp
mov
into
mov
push
cmpsb
sub
ljmp
lret
xchg
cld
mov
and
int
scas
scas
addr16
sbb
sahf
push
filds
cld
into
xor
jmp
xor
cmpsb
arpl
or
inc
cld
aad
jo
rolb
bound
js
outsb
sub
pop
or
cltd
insl
ljmp
iret
cld
repz
je
ret
cld
rcrb
inc
cmpsb
in
sahf
cmpsl
xor
or
popa
cmp
jmp
mov
rorb
out
rorl
pusha
ficompl
in
in
in
pmuludq
js
xchg
or
loop
sbb
mov
cmp
add
daa
dec
push
xchg
sbb
sub
aam
std
std
mov
ret
bound
int
pop
outsl
daa
rcrl
cmp
mov
pop
pop
push
shll
enter
iret
cmp
xor
push
mov
cmp
daa
movntq
xchg
add
test
iret
insb
shrl
mov
dec
xor
pop
sbb
pusha
gs
pop
daa
jmp
into
int3
mov
and
pop
hlt
xchg
in
fistl
cmc
and
stos
in
xchg
dec
pop
and
jbe
push
fs
mov
into
sbb
scas
je
add
xor
and
fdiv
int
mov
cmp
sbb
jecxz
mov
into
repz
std
cwtl
fdiv
imul
or
push
bound
rcrb
xchg
and
push
mov
testb
xchg
fs
or
in
test
lret
scas
movsb
fucomip
in
repnz
stos
adc
push
out
fisubrs
xor
inc
push
enter
rcr
mov
cwtl
out
add
les
ret
sub
lock
out
sbb
mov
out
call
pop
fidivl
sub
aam
imul
add
es
jnp
icebp
pusha
xor
sub
jbe
inc
and
loop
out
push
adc
pop
adc
lret
outsl
fcompl
dec
in
xchg
cs
cwtl
std
pop
adc
adcl
insb
daa
out
push
jo
ret
dec
mov
sbb
or
push
mov
mov
popa
loop
mov
push
sbb
daa
mov
pusha
inc
scas
mov
adc
add
test
jno
push
loope
jno
sti
nop
sbb
nop
inc
fsubs
jae
pop
test
cld
aaa
jb
scas
js
inc
dec
das
dec
add
dec
push
sub
cs
repnz
es
sub
sub
jo
pop
out
clc
rcrb
jae
out
add
pushf
sti
pop
ja
sub
sahf
push
stc
xchg
ds
inc
mov
or
cltd
les
mov
and
and
or
std
mov
leave
int
xor
out
jo
xor
fistpl
add
rcr
adc
pop
ja
pop
loope
cmc
aas
pop
and
cld
cmp
lret
inc
rorb
stos
shll
cwtl
sub
loopne
sub
jge
jb
movsl
lea
dec
mov
fs
xor
ss
shll
mov
mov
adc
and
xchg
loope
aam
fcmovnbe
dec
enter
sbb
inc
mov
pop
sti
push
push
in
xchg
add
xchg
mov
push
lret
sub
rorb
pop
dec
xchg
pop
mov
xor
sbb
dec
mov
mov
aam
enter
imul
mov
adcl
cmpsb
cli
mov
inc
mov
aam
orl
ret
call
inc
fnstenv
aas
imul
push
jno
fnstcw
add
dec
fisubrl
mov
and
mov
and
cwtl
adc
loope
data16
in
sub
push
stc
fildll
lret
incb
cltd
outsl
test
cmpsl
in
popa
in
pop
aas
imul
pusha
jns
out
xor
jns
xlat
jl
std
adc
cltd
mov
cmc
loopne
aaa
push
mov
xchg
test
xor
es
cmp
mov
iret
imul
int
ret
mov
data16
popf
in
ret
fcomi
mov
mov
cmc
mov
lret
mov
push
sub
aas
out
inc
out
arpl
mov
and
pusha
cmp
test
push
push
mulb
mov
lret
lcall
push
mov
testb
cmp
push
popa
pop
rorb
adc
xor
fs
arpl
push
cmp
test
pop
mov
mov
pushf
inc
or
sbb
and
clc
sub
hlt
fdivr
fcom
outsl
daa
and
mov
sahf
iret
dec
leave
mov
push
out
leave
ljmp
jae
inc
or
rol
dec
subl
repnz
int3
cmp
xchg
addr16
test
cmp
popa
mov
gs
dec
ret
cmp
mov
inc
fsubl
and
in
inc
inc
mov
adc
and
cli
stos
or
lcall
test
jb
ret
sbb
lock
movsb
iret
mov
jg
stc
push
xchg
xchg
popa
cmp
ficomps
push
pop
sbb
in
add
scas
in
loopne
punpckhbw
out
inc
add
mov
xchg
ja
mov
and
mov
pop
loope
pop
and
sbb
mov
mov
jae
out
int3
mov
fsub
lret
mov
push
adc
push
incl
xchg
imul
mov
lea
sub
and
cmp
fwait
mov
rcrb
sbb
test
pop
xor
and
add
out
add
pop
xchg
jb
mov
aad
add
pop
pop
add
call
sbb
mov
pop
insb
adc
pop
or
movl
sub
insb
or
pop
rolb
call
pop
jo
call
js
mov
arpl
mov
jg
into
push
mov
xadd
pop
adc
cwtl
sti
rorl
mov
fs
mov
jecxz
jae
pop
push
test
sbb
or
iret
dec
mov
cmp
add
leave
fidivl
loopne
jb
pop
aaa
xor
fbstp
es
fdivp
lcall
and
adc
fdivs
xlat
dec
test
jecxz
mov
cmpsb
sub
cmp
pushf
sbb
imul
xor
scas
inc
jge
mov
cwtl
les
xor
cmp
jp
dec
pop
inc
aas
xchg
mov
cld
flds
popf
lcall
stos
fisttpll
cli
jbe
in
repz
xor
clc
jbe
sbb
jp
mov
clc
and
jg
fwait
mov
cmp
push
pusha
js
xchg
negb
es
cltd
adc
mov
in
jae
xchg
sub
xor
dec
shrl
mov
fnstenv
aad
loope
pop
test
testb
xchg
sub
in
mov
jb
clc
and
cmp
popf
or
and
cmpsl
dec
ljmp
cvtpi2ps
dec
enter
gs
dec
or
xchg
mov
fwait
subl
hlt
int
or
adc
movsb
push
lcall
add
les
testl
jecxz
cmp
aas
fwait
loopne
cmp
scas
push
xlat
adc
out
mov
jle
mov
stos
out
test
nop
imul
sub
jno
pop
cmp
lods
push
cmpsb
stos
adc
inc
xor
adc
pop
pop
sub
iret
sbb
mov
loope
inc
xchg
mov
ja
int
jb
imul
adc
mov
jne
int
add
jne
xor
xchg
dec
jae
dec
dec
pop
add
mul
and
cmpsl
inc
ret
sbb
xor
sub
cmp
mov
xchg
jecxz
gs
pop
mov
popa
and
loope
xchg
and
sbb
dec
xchg
sahf
adc
push
scas
ljmp
fstps
lret
ret
les
cmpsb
enter
xor
xor
jp
dec
mov
pop
ds
xor
jnp
and
fldcw
fbld
jp
popf
xor
repnz
dec
les
cltd
fisttps
movl
mov
pop
sub
jl
mov
sarl
mov
adc
dec
xor
cwtl
or
inc
daa
dec
pusha
lods
sbb
not
outsl
mov
jnp
nop
jno
pop
sbb
xchg
fs
inc
icebp
fldenv
mov
scas
mov
mov
popf
loopne
scas
jae
mov
and
in
mov
inc
sbb
aas
jl
add
cld
jnp
pop
xlat
imul
add
push
jge
pop
jge
insl
movsl
or
je
sub
leave
add
pop
mov
lahf
xor
sub
add
inc
cld
shll
cmpsb
sahf
inc
cmpsl
stos
iret
inc
xor
in
decb
movsl
inc
adc
call
jns
mov
inc
sub
cmpsl
or
sti
xorl
nop
sti
andb
pop
cs
movsb
imul
movsb
push
movsb
cmp
int3
faddp
push
lods
test
cmpsl
sbb
fyl2x
xor
dec
fmull
test
leave
lods
movsl
imul
pop
sbb
enter
ds
or
jecxz
pop
cmp
xchg
jb
mov
mov
or
cmpsb
aam
or
fsubs
loop
int3
and
xchg
pop
and
insl
dec
adc
daa
xor
ret
into
jl
lcall
mov
fdivs
loopne
ss
jno
push
daa
mov
push
pop
inc
sub
orl
fdivrl
popf
dec
out
js
in
sbb
mov
ds
sahf
ret
jns
dec
insb
jnp
fstpt
sbbl
leave
imul
subl
mov
std
mov
pop
sbb
cmp
pop
add
aad
jmp
ss
dec
out
sub
lret
insb
xchg
xchg
lcall
mov
pop
stos
lret
stos
outsl
rcll
adc
push
jmp
dec
jbe
imul
sbb
jne,pn
or
inc
mov
mov
fmull
cmp
inc
dec
jns
pop
adc
pop
stos
mov
xor
testl
insb
imul
inc
sbb
add
xlat
aam
gs
cmc
push
ret
or
icebp
fcmovne
jg
pop
adcl
bnd
insl
push
sahf
push
pop
fistpl
mov
cmp
xchg
xor
mov
xchg
adc
pop
movsl
and
fs
jmp
add
adc
adc
and
xchg
jns
mov
movsl
pop
jb
sub
push
sbb
into
push
lods
test
jl
rcrb
and
adc
pop
enter
cmpl
cmp
adc
outsb
push
lds
dec
stos
test
aaa
rep
out
push
push
xchg
jg
jno
sub
cmp
movsb
xchg
adc
push
int
rcr
inc
sub
mov
enter
cmp
stc
sub
and
lcall
add
je
ficomps
mov
insb
sahf
imul
sub
loop
mov
es
mov
xchg
jmp
cmp
lret
xor
out
and
dec
add
xorl
jo
adc
jecxz
test
mov
nop
lds
daa
push
mov
call
adc
inc
insb
cmc
push
xor
lret
fbld
fsubl
cs
pop
mov
insb
push
aam
cmpsb
leave
getsec
add
in
aam
arpl
fcmove
adc
into
mov
lret
or
mov
adc
inc
cmp
xor
jmp
add
xor
cmc
pusha
mov
pop
inc
fdiv
stc
ret
or
mov
insl
pop
mov
cltd
clc
les
aas
mov
out
pop
in
cmc
adc
rclb
push
lcall
inc
movsb
pushf
push
dec
adc
cli
ja
push
lea
stos
stos
and
movsb
cmpsl
incl
dec
xor
xor
jl
in
cli
pop
push
jo
mov
hlt
mov
insb
jne
bound
push
and
sbb
cmp
pop
sti
sbb
mov
sti
dec
test
fsub
out
sub
sub
mov
mov
xor
mov
push
lods
jecxz
pop
dec
sbbb
xchg
addr16
add
aad
xchg
sub
loope
xchg
es
in
add
xchg
mov
push
cs
es
in
test
xchg
imul
mov
inc
mov
sub
cmp
adc
mov
add
xchg
je
call
icebp
cmpl
xchg
popf
test
sub
xor
inc
stos
and
mov
fadd
push
fdivr
xchg
std
mov
lods
xchg
shr
fiaddl
lods
cmpsb
js
adc
out
push
fdiv
mov
out
movsl
jb
fs
and
fldl
jbe
mov
add
je
shll
mov
jmp
xchg
gs
push
and
inc
add
jno
les
dec
jne
decl
mov
push
push
cmpsl
mov
arpl
test
mov
shlb
add
xchg
cli
xchg
mov
fcomps
in
xchg
xchg
mov
nop
xchg
loope
popf
or
cmp
add
or
jecxz
and
sub
mov
push
sbb
xchg
xchg
hlt
and
sbb
jmp
cmpsl
mov
fdivrl
out
pop
xor
out
cmp
mov
pop
jmp
adc
fbld
adc
pushf
inc
int3
jbe
xor
aam
jno
inc
inc
xchg
cmp
pop
stc
call
sub
sub
into
notl
sti
iret
sbb
adc
push
stos
ljmp
mov
lock
inc
leave
ds
hlt
xchg
pop
dec
int3
out
push
mov
xor
das
loope
int
insl
mov
out
jnp
mov
push
inc
repz
dec
inc
lret
lahf
out
xchg
jb
adc
mov
test
pop
mov
add
fidivs
mov
sub
adc
cmp
es
jne
cmp
sub
xor
and
or
push
stos
lods
sub
inc
leave
sub
test
das
mov
push
leave
in
test
dec
daa
repnz
inc
scas
adc
lods
shrl
shll
ss
or
fistpll
cwtl
or
cmp
arpl
push
pop
bound
movnti
jmp
arpl
test
inc
jb
in
push
sub
ret
adc
mov
dec
loop
or
jno
leave
cmp
je
testl
mov
cmp
sub
loope
jg
fnstenv
push
xor
add
dec
andl
or
std
icebp
sti
lcall
inc
inc
dec
inc
mov
or
ficoml
cmpsb
sub
mov
fistpl
mov
mov
mov
sahf
iret
inc
lods
sub
in
pand
fidivrl
ss
push
dec
mov
sub
mov
jmp
cmp
or
imul
pop
inc
enter
idivl
mov
pushf
clc
addr16
dec
jae
push
loop
cmp
inc
stc
jo
jge
cwtl
add
pop
push
lock
xor
jp
dec
stc
aas
subb
out
adc
ret
fs
inc
cmp
sub
mov
shrb
test
pop
mov
xchg
pop
insb
cmp
sbbl
xor
test
lcall
xlat
push
dec
jns
call
fdivrs
iret
jnp
ss
out
imulb
out
mov
fildll
adc
push
jge
popf
sbb
ds
popf
cs
mov
mov
xchg
pop
mov
xchg
or
sbb
cmp
stc
adc
mulb
jge
icebp
in
dec
leave
mov
in
sub
aad
into
xor
mov
sub
cmpsl
push
ficomps
clc
sbb
out
mov
mov
cmp
insb
mov
push
add
xchg
sbb
insl
adc
adc
dec
push
sbb
stos
add
ret
adc
lds
xchg
mov
aad
gs
fisubrl
das
shlb
push
jnp
xlat
out
orl
out
jg
lea
out
roll
sbb
adc
jo
pop
pusha
or
stos
es
sbb
push
add
mov
lods
shll
dec
in
jmp
loope
xor
xor
cmp
subl
jns
stos
mov
adc
cltd
lds
jl
aad
aaa
imul
and
push
cmp
sbb
arpl
rcrb
in
mov
loop
mov
int3
fistpl
scas
cmp
pop
inc
inc
icebp
ficoms
pop
cmp
jnp
pusha
subb
cmp
mov
xchg
lock
pop
sbb
mov
xlat
pop
xor
mull
and
mov
adc
add
bound
and
lock
jns
iret
mov
mov
xor
inc
mov
cmp
mov
addr16
or
fcmovbe
cwtl
cmp
push
data16
cwtl
push
lock
fbstp
imul
fstps
pop
cld
repnz
cld
push
xlat
mov
and
repz
xchg
into
adc
addr16
enter
jae
or
cmp
out
dec
dec
sbb
and
jmp
lret
in
adcl
xchg
aam
clc
fs
add
cwtl
cld
sub
movsb
jle
dec
push
dec
jmp
daa
or
pop
mov
pop
jg
lret
sahf
mov
jno
xor
sahf
bound
int3
adc
fstps
ds
cmp
movsl
and
lods
iret
mov
notb
mov
pop
cmpl
sub
shlb
dec
add
cli
lds
jecxz
xor
outsb
mov
inc
mov
pushf
jo
lcall
sbb
aad
jo
je
pop
mov
cld
xchg
shl
repnz
insl
push
add
out
push
imul
or
rcrb
loope
jns
push
and
in
insb
add
idivb
in
sbb
adc
or
movsl
sbb
adc
imul
jecxz
xchg
ret
outsb
lret
dec
mov
repz
enter
mov
sbb
mov
ret
jno
ss
dec
pop
or
pop
out
and
xchg
sub
push
mov
xchg
inc
pop
hlt
inc
rcrb
hlt
and
mov
add
push
cmpsl
je
js
push
jg
stc
xchg
jno
pop
mov
mov
push
addr16
jnp
pushf
out
rcll
orb
lahf
cmc
cmp
and
pop
jmp
addr16
pop
mov
sub
shl
push
out
sub
shll
inc
sbb
adc
dec
push
xchg
and
and
arpl
incb
cmp
mov
lea
xchg
cmp
xor
mov
jae
and
pop
cmp
repz
je
repz
jno
fadds
sub
cs
bound
inc
mov
andb
test
or
xor
dec
push
cmp
pop
int3
mov
cmp
inc
nop
push
icebp
xchg
xchg
movsb
and
lret
inc
rcrb
stc
out
in
pop
adc
add
cmp
jno
out
jmp
adcl
aas
test
cmpsl
pop
jge
adc
and
dec
mov
icebp
xchg
pop
jl
negl
sbb
mov
pop
xchg
adcb
hlt
push
mov
and
add
xchg
sbb
cmp
movsb
push
jo
outsb
add
pop
push
cmpsb
bound
mov
loop
clc
faddl
addb
sub
ja
cmp
adc
nop
stos
jb
fstp
or
imul
rclb
negb
dec
jae
dec
and
test
xchg
mov
dec
loopne
lods
out
lods
inc
pop
mov
scas
inc
lcall
sub
xchg
std
dec
cwtl
and
cmpsb
pop
sub
outsl
inc
addb
lret
je
push
fisttpll
sti
out
add
adc
xchg
jnp
leave
lock
stos
sbb
inc
fwait
mov
mov
bound
inc
jne
xchg
fldcw
or
popf
incl
imul
sub
orb
or
add
repz
pop
sub
jns
mov
jbe
lea
and
sbb
jne
iret
and
aas
sahf
out
je
das
mov
rcll
insb
aaa
out
dec
mov
cs
stos
insb
jb
add
cltd
lret
cmpsl
xor
jo
stc
jmp
jns
inc
insb
or
jg
idivl
lods
jl
scas
mov
sub
mov
dec
or
xchg
jmp
jnp
inc
nop
int
ret
and
jecxz
sub
notl
addr16
mov
cwtl
adc
and
enter
push
cmc
loop
or
sbb
jae,pt
adc
iret
pop
xor
lcall
fisubs
pushl
aaa
scas
gs
lods
add
jp
pop
les
dec
xchg
std
inc
sbb
pop
mov
dec
or
lahf
xor
lods
add
nop
fnstenv
data16
jp
dec
sbb
push
mov
rcl
jo
mov
scas
push
cli
dec
sub
loopne
aad
out
pop
mov
dec
inc
cmp
dec
adc
add
lock
insl
cmc
lahf
sub
in
jne
jne
sbb
sbb
dec
ss
pop
push
iret
push
or
dec
das
adc
fs
sub
or
out
push
push
negl
push
adc
xchg
cmpsb
fadd
addr16
xlat
nop
push
or
mov
icebp
lahf
cli
jns
push
jl
xchg
cld
jnp
adc
lahf
mov
xchg
pop
push
test
neg
mov
out
sub
scas
cmp
push
scas
js
jno
scas
es
sbb
add
jno
mov
shll
incb
loop
dec
fidivl
mov
add
mov
fsubrs
cmpsl
pop
int
or
lods
test
sbb
clc
sahf
pop
lea
test
sti
ja
loopne
insl
loopne
test
and
pop
xor
xorl
es
pushl
sub
std
jno
xor
jns
dec
les
jg
daa
repz
mov
in
push
xchg
test
adc
sub
loope
cli
lock
mov
sbb
das
xor
das
leave
xchg
pop
repnz
fdivrl
in
test
sbb
xchg
out
xor
jmp
mov
xchg
mov
loopne
mov
fldenv
sub
test
stc
outsb
fs
lret
cld
mov
mov
cltd
outsl
ret
popf
mov
movsb
ljmp
pop
out
or
and
pop
or
mov
cmp
cltd
pop
xchg
xchg
rcll
lods
xlat
cs
xchg
adc
mov
mov
adc
push
xor
mov
or
push
loope
lods
pop
pushl
xchg
push
lds
out
mov
bound
subl
jb
jle
hlt
cmpsl
fisttps
and
cmp
pop
aad
sbb
dec
gs
fdivl
loopne
mov
jecxz
jae
mov
lahf
sbb
adc
push
scas
shlb
fnstsw
sbb
jns
movb
inc
mov
inc
mov
test
daa
adc
ret
adc
inc
iret
pop
icebp
pusha
inc
pop
sarl
adc
jecxz
dec
stos
movsb
repnz
nop
inc
cmp
divb
sub
or
rclb
test
daa
pop
cmp
add
ss
sbb
ret
negb
jae
movsl
inc
push
pusha
dec
insl
mov
xchg
and
sub
mov
mov
aad
fisttpl
int3
xchg
movsl
mov
imul
cmp
cmp
sbb
outsl
xchg
mov
adc
jno
roll
cmp
cmc
fs
cltd
stos
int3
and
addr16
cmpsl
jae
mov
push
ljmp
ljmp
mov
jg
enter
mov
xchg
negb
xor
les
pop
into
lcall
fisttpl
movsl
or
jmp
sub
lret
inc
or
fistpl
mov
mov
dec
loopne
cmp
in
dec
inc
or
fs
add
subb
adc
test
popa
sub
adc
gs
cmp
nop
sbb
push
xchg
push
shll
or
xchg
iret
inc
aad
jmp
xorb
or
mov
or
int3
stos
lods
sub
sahf
cmp
ja
push
dec
push
mov
and
sbb
pushf
daa
sub
xchg
stc
xor
sub
ret
lret
lods
out
adc
aad
mov
mov
adc
add
jo
je
jge
mov
and
lods
cmp
push
add
xor
mov
mov
mov
mov
aas
jp
adc
cmp
adc
and
mov
jns
xchg
pop
js
push
pop
popl
clc
xorl
jbe
push
pop
movaps
push
imulb
call
mov
mov
fistl
idivb
stc
testb
jg
je
sub
fidivs
push
sbb
or
pop
outsl
push
xor
hlt
rcrl
mov
enter
fistpll
or
ja
lret
cmp
in
out
jno
push
in
imul
lds
sub
mov
jmp
lahf
sbb
xor
cmp
dec
adc
mov
inc
xor
xchg
pushf
loope
movsb
mov
dec
std
es
call
push
and
or
pop
and
mov
push
enter
andl
std
xchg
mov
fwait
cmpsb
ds
sub
push
cld
mov
rclb
mov
adc
or
inc
mov
dec
mov
aad
imul
mov
test
jl
mov
dec
lds
and
push
push
pusha
sbb
popf
test
jne
inc
sbb
cmp
dec
add
xchg
orb
cmp
xor
lret
in
mov
imul
das
cltd
jae
or
mov
aas
mov
adc
dec
sub
fwait
push
pop
inc
xchg
adc
sub
adc
mov
sbb
mov
push
mov
push
into
or
les
lods
xchg
jnp
mov
inc
sbb
and
mov
push
pop
cwtl
adc
out
subl
jo
dec
and
pop
arpl
icebp
int3
xor
lock
xor
sbb
and
test
int3
lahf
mov
and
jns
cltd
lods
adc
cli
mov
dec
adc
outsl
mov
rclb
data16
das
jge
mov
jmp
pop
repz
hlt
sbb
mull
push
stc
jns
cld
leave
movsl
flds
pop
andl
mov
movsl
and
rclb
test
rcr
shll
repnz
mov
sbb
sub
xchg
cmp
sbb
or
xor
imul
test
outsl
dec
cmpsb
xor
andb
loop
jp
int
cmp
sbb
cli
sub
jo
mov
ret
mov
inc
lret
push
xor
sub
xchg
mov
stos
arpl
sub
fsubr
and
leavew
pop
fadd
ror
fsubrl
jns
sub
stos
mov
das
lods
or
or
mov
pop
nop
add
ds
push
rcrb
les
bound
rclb
add
call
mov
xchg
inc
add
mov
xlat
es
scas
lcall
push
jmp
cmp
fsubrl
fwait
and
pop
cmp
in
sahf
sub
testl
pop
sbb
xor
stos
xchg
mov
add
rcrb
or
jge
daa
int
cs
aaa
lret
dec
jmp
add
jbe
scas
loopne
push
dec
lods
scas
sub
xor
mov
push
iret
dec
cmpsl
ret
les
lds
xor
cmp
mov
jbe
xchg
lret
and
lods
or
push
mov
pop
sub
das
inc
xchg
mov
and
jbe
or
aam
mov
sbb
push
test
lret
or
xchg
dec
out
mov
aaa
mov
incl
cmpsl
imul
in
test
sub
call
cmp
and
cli
sbb
cld
iret
pop
xor
mov
xor
fwait
dec
add
dec
mov
data16
cmp
cmp
das
das
test
sahf
mov
jno
ljmp
clc
lods
iret
and
xor
xor
mov
cli
movsb
lret
cmpb
cmp
mov
int
fwait
stc
sets
mov
icebp
sbb
and
test
cwtl
cwtl
in
in
dec
ret
jno
in
dec
lahf
jno
dec
pushf
cmp
jmp
adc
aas
cli
popf
je
arpl
ret
jnp
pop
lds
push
out
roll
add
push
sub
and
push
mov
cmp
mov
in
das
hlt
push
ss
lds
lcall
movsl
inc
imul
or
insl
loopne
mov
test
sbb
jo
and
decb
push
push
and
push
lcall
xchg
cmp
or
scas
dec
ds
aad
ds
push
pop
sub
dec
xchg
ljmp
jne
cmp
add
pop
cmp
fsub
jb
mov
cwtl
lret
cld
clc
lea
in
ss
pop
xor
arpl
add
scas
pusha
test
fwait
xor
xlat
lret
jbe
ret
push
mov
imul
out
mov
movsl
push
and
das
sub
inc
jo
orb
xchg
mov
testb
sti
dec
fildll
out
out
push
push
sbb
dec
push
adc
popf
pop
ja
cmpsb
ljmp
out
push
daa
or
add
sbb
iret
or
int
daa
mov
xor
es
dec
cmp
sahf
stos
les
fwait
negl
mov
fsubrl
scas
inc
lahf
repz
int3
cltd
sbb
mov
and
push
int
rcrl
nop
faddl
test
add
sub
xchg
daa
jne
lea
jl
insb
xor
jp
mov
adc
mov
jp
mov
sbb
adc
mov
outsb
cmc
shlb
aas
in
jge
jge
xchg
jnp
cmp
mov
fmuls
or
repnz
mov
pop
jg
lret
loope
loope
stos
xor
mov
adc
js
push
push
pop
xchg
lock
fnsave
fcoml
out
mov
test
movsb
stos
cmp
xor
inc
out
popf
pop
mov
addr16
push
dec
xchg
movsl
sbb
jmp
pop
jnp
imul
loope
xor
js
cmc
or
push
call
mov
popa
mov
popa
mov
pop
rclb
dec
xchg
pusha
or
mov
or
pop
stc
sahf
xchg
scas
stos
ficomps
arpl
and
dec
pushf
shlb
hlt
fidivrl
jmp
pop
push
push
mov
push
ficompl
popf
dec
mov
jl
cld
mov
sub
nop
leave
fiadds
mov
lahf
outsl
dec
lods
sub
mov
pop
cwtl
testl
hlt
aam
jne
inc
mov
cmc
or
mov
xor
mov
aas
in
mov
xchg
jge
sbb
lds
int
scas
lods
daa
gs
scas
daa
cmp
adc
inc
andb
mov
add
jbe
in
ret
xchg
fsts
cmp
lods
add
ss
push
xlat
push
jae
jns
add
push
pop
sti
es
shrb
mov
imul
in
cmpsb
sbbb
jno
or
pop
lcall
push
inc
in
std
rcl
jbe
shl
icebp
cmova
and
mov
aam
sub
mov
or
shrl
xchg
leave
lds
mov
jns
add
xor
mov
aas
add
xchg
jo
xchg
jecxz
mov
fdivr
mov
and
shl
add
cmp
mov
mov
ret
call
cmp
lret
idivb
jecxz
pusha
sbb
cmp
push
jb
jmp
data16
mov
jp
adc
pop
imul
jno
xchg
pop
mov
sub
insb
enter
cmp
pop
dec
cmp
and
rclb
shl
adc
pop
sub
lock
jecxz
xchg
cltd
insl
ds
faddl
mov
jmp
cmp
pusha
inc
les
stos
int
and
je
cmp
xor
xchg
fs
mov
inc
fdivrl
adc
jle
lcall
jo
fnstenv
xchg
in
jo
add
mov
xorps
shll
or
inc
xchg
repz
adc
into
addb
or
xchg
jbe
in
stos
int3
rcll
loopne
bound
sub
sub
outsb
das
loopne
dec
mov
loop
in
adc
es
je
dec
scas
sti
ret
outsb
push
out
mov
adc
jb
inc
push
add
inc
ret
jae
pushf
jle
loop
adc
imul
or
test
dec
ja
nop
cs
push
add
sub
das
push
cli
push
pop
push
jp
xchg
mov
mov
mov
arpl
mov
cs
xor
cmc
lock
adc
int
movsb
inc
aam
insb
arpl
mov
mov
inc
mov
scas
cmp
shlb
jae
shlb
jb
out
xor
int
cmp
insl
sahf
push
sub
dec
dec
push
movsl
fsub
dec
push
push
int3
outsl
mov
loop
in
jae
fsub
xchg
test
sub
jno
mov
mov
outsb
pop
stos
mov
pop
out
pusha
sti
sbb
mov
popf
fdiv
das
negb
xchg
popa
in
idivl
jo
add
aam
dec
fisubrs
testb
or
xor
outsb
jp
sahf
leave
adc
iret
xchg
xchg
xchg
lahf
and
stc
inc
sti
aam
mov
push
xchg
xchg
outsl
int3
rolb
outsl
add
mov
pop
sub
in
sbb
add
jmp
aas
adc
push
sbb
test
mov
call
dec
xor
out
adc
cmp
insl
out
pop
enter
pop
ret
sbb
sbb
push
cltd
mov
daa
cmp
sub
data16
test
repnz
jp
and
cld
push
inc
mov
popa
loope
loope
xchg
fwait
push
mov
das
adc
movsb
dec
mov
jb
pusha
cmc
add
inc
mov
lods
cmp
sbb
movsb
jge
xchg
xchg
insb
add
cli
in
push
mov
orl
cmc
scas
cmc
pop
mov
test
std
push
aas
adc
adc
repnz
jne
mov
iret
push
dec
mov
or
cmp
push
icebp
pop
out
repz
xor
push
shll
lds
jp
inc
stc
lds
std
jb
int3
mov
bnd
fnstcw
sub
loopne
mov
icebp
mov
push
jle
into
repz
push
je
mov
mov
xor
movsl
jno
test
aam
adc
ficoms
fidivl
or
xor
aaa
pop
pop
add
xchg
mov
dec
inc
sub
daa
mov
test
xor
sahf
xchg
jmp
mov
jg
adc
movsl
enter
sbb
jmp
mov
jo
in
test
pop
out
imul
mov
or
pop
lahf
add
loope
sbb
jne
shl
jb
cli
pop
cmc
ljmp
mov
adc
icebp
mov
push
mov
fstp
scas
out
jge
stc
sbb
shrl
fistl
dec
jp
xor
jp
push
or
mov
inc
addr16
in
ja
aam
je
xchg
pop
mov
testl
les
mov
outsl
ja
pop
cltd
gs
scas
cmpsb
fsubrs
lods
subb
mov
out
fdivrl
jbe
into
xchg
js
notl
das
add
sbb
orb
rolb
and
and
push
in
and
stos
cmpsb
xchg
into
mov
jmp
dec
scas
adc
fmull
into
or
in
test
cmpsl
pop
or
and
das
push
js
loopne
std
stos
leave
iret
mov
jno
and
add
jnp
jle
xchg
sbb
pop
push
test
andl
xor
arpl
arpl
add
jge
in
push
enter
scas
push
mov
cmpb
stc
xchg
dec
push
fidivrs
call
add
adcl
daa
and
sbb
mov
mov
fdivrl
inc
push
lods
xchg
mov
push
test
dec
or
adc
xchg
pop
dec
pop
stos
pusha
add
pop
xor
in
idiv
add
fwait
test
test
imul
mov
sub
mov
cli
dec
outsl
movsl
repz
mov
pop
scas
inc
xor
jmp
lret
cmp
inc
inc
xchg
test
lods
stc
sti
out
cmp
pop
jns
inc
mov
mov
xchg
repnz
push
cmpb
cmpsb
fmuls
mov
mov
ret
lahf
fwait
jl
mov
sub
push
jnp
dec
call
mov
fisubs
inc
xchg
mov
adc
stc
or
jmp
ds
orps
sub
lea
out
cltd
xor
mov
mov
push
pop
adc
sub
fwait
popa
andl
pop
jb
test
std
aam
sub
int3
in
imul
mov
insl
xor
dec
dec
stos
or
adc
mov
mov
out
sti
push
repnz
dec
lret
push
xor
xchg
xor
lret
adc
xor
lods
shl
lahf
jns
push
cli
repnz
test
fwait
in
pop
repz
addl
repnz
fidivrl
divb
sub
jmp
sbbl
inc
mov
lcall
jno
dec
scas
faddl
push
mov
xchg
mov
gs
pop
add
xchg
pop
sub
xchg
outsb
stc
jb
scas
dec
xor
stos
jl
dec
mov
sub
sbb
push
js
test
lret
addr16
cli
cmp
xchg
pop
jge
adc
sub
xchg
das
pop
cmp
mov
lock
fcomp
and
les
bound
xchg
mov
leave
inc
fucomip
dec
jmp
xor
jns
lods
rcll
rorl
xlat
inc
pop
pop
bound
mov
mov
cmp
stos
pop
test
cwtl
out
push
ljmp
lea
pop
icebp
pop
test
inc
mov
inc
das
mov
push
adc
push
mov
pop
movsb
ljmp
push
enter
jp
test
test
xor
rcll
inc
xchg
cmp
mov
incl
mov
mov
xchg
xchg
dec
sysexit
mov
push
push
pop
sub
or
xlat
movsb
cmp
lods
push
data16
sbbl
cli
sbb
mov
fistps
inc
jp
inc
mov
aas
push
inc
rep
mov
rcrl
adc
push
inc
mov
out
cmp
out
fistpll
js
push
lahf
out
ss
stos
or
xchg
subb
and
push
ss
call
inc
ret
inc
mov
ja
sub
or
mov
ja
imul
pop
mov
iret
pop
xorl
push
xor
jecxz
cmp
push
aam
mov
cwtl
aam
repz
test
mov
mov
jno
orl
inc
sbb
xor
loop
cmp
ds
fldenv
fmul
mov
sahf
cmc
out
jmp
xchg
add
lcall
cmc
dec
adc
stos
sbb
add
in
pusha
cmp
shrb
loopne
pop
lret
sub
mov
jns
inc
or
push
cmp
mov
cmp
sar
movsb
or
arpl
cmp
stc
in
out
xchg
adc
push
cmp
cmpsl
test
xlat
aam
es
pushl
test
pop
es
xchg
jbe
into
lret
inc
data16
mov
lods
push
test
push
lds
int3
cmp
lock
and
and
icebp
adc
jns
ss
cmc
insb
lods
shl
call
xchg
out
and
sub
mov
add
xorl
cmpsb
shrb
loope
ljmp
xchg
inc
dec
dec
loop
jmp
push
lea
mov
clc
sub
mov
mov
dec
pushf
xor
push
ss
and
ret
sbb
jae
jae
jbe
dec
cmp
inc
cmc
je
and
push
loopne
movsl
pop
cli
lock
dec
std
sub
stc
xor
inc
add
loopne
into
mov
mov
hlt
cmp
add
pushw
push
scas
mov
cmp
popf
add
daa
nop
push
add
cli
xchg
or
fimuls
aas
cmp
andb
push
sti
add
xchg
adc
into
dec
fdivrp
jmp
cld
movsl
xor
xchg
fnstcw
mov
nop
mov
push
ret
ljmp
or
fs
outsl
loope
es
in
shrb
movsl
push
xor
sbb
adc
push
mov
xor
push
jnp
lcall
mov
cmp
ret
xor
fcomps
pop
enter
fsub
js
loop
mov
inc
pop
dec
dec
mov
test
call
jno
add
pop
mov
cwtl
push
clc
imul
mov
add
adc
jmp
les
cli
xchg
jp
mov
add
imull
in
sub
inc
fstpt
cmp
cli
loopne
and
xor
test
out
fmuls
and
adc
push
dec
in
cmp
pop
ja
test
ss
or
jae
xor
bound
shlb
mov
jns
jns
pop
cmpsb
or
out
mov
popf
mov
push
sub
sbb
jle
stc
add
rcll
cmp
fistpll
fstpl
mov
mov
pop
fdivl
ljmp
cli
jo
cmp
in
push
je
and
fidivrl
sarb
ss
in
cs
insl
mov
jne
mov
aas
mov
cld
jle
loope
lret
jmp
xchg
and
inc
dec
xlat
cmc
xchg
sub
mov
pusha
sbb
jmp
mov
rorb
jmp
dec
cmp
into
aad
and
cli
mov
add
sub
xlat
inc
test
dec
xor
in
stc
jns
inc
aaa
cmp
xor
andb
push
cmp
loop
pop
negl
jae
hlt
cltd
dec
shrl
push
mov
and
insb
aaa
nop
cmp
repnz
sahf
insl
call
cmp
repz
stos
inc
adc
addr16
idiv
push
and
mov
mov
fst
std
ljmp
loope
dec
mov
push
aad
mov
popf
movsb
mov
xchg
into
jecxz
jmp
jmp
not
xor
cmp
out
fs
stos
jns
adc
push
jg
iret
ja
popa
aas
xor
fimull
ds
mov
out
mov
push
xchg
adc
push
into
push
lret
mov
mov
xchg
outsb
notb
lea
jae
push
cli
xor
lret
and
mov
xor
fsubrs
aam
mov
data16
jg
adc
in
out
lds
mov
cwtl
movsl
pop
aaa
shrb
leave
sbb
das
mov
std
sbb
jp
data16
stos
xchg
mov
out
pop
mov
jl
sti
imul
dec
add
mov
popa
dec
xor
and
inc
sbb
testl
imulb
sbb
out
sahf
sbb
fs
fmull
mov
jo
pop
sub
les
test
adc
faddp
and
cmp
xchg
in
shll
lahf
stos
mov
pop
push
leave
mov
stc
fstl
imul
cs
cwtl
pop
add
dec
daa
push
repnz
cmc
push
repnz
cmc
and
xchg
arpl
bound
movsl
ret
fsubrp
cmpl
adcb
je
std
fwait
push
jle
inc
rcrb
fldcw
insb
adc
test
cmp
fsubrs
or
sbb
push
push
int3
loopne
push
ret
pop
jb
dec
jae
lea
xor
repz
lods
insl
jns
xchg
dec
mov
push
insb
sub
mov
aas
imul
hlt
dec
push
cwtl
mov
push
pop
stos
fisubrl
or
xchg
andl
ljmp
pop
out
jnp
jge
testl
xchg
and
sbb
lea
xor
xchg
adc
add
imul
push
outsl
mov
push
out
fidivs
sbb
shll
lods
jmp
mov
ret
mov
xor
pusha
pop
fisttps
dec
jl
scas
test
rclb
push
or
mov
sub
sbb
mov
fcomi
xchg
sub
mov
jl
sub
sbbl
mov
inc
pop
icebp
push
mov
scas
out
pop
shll
pop
jno
dec
into
inc
and
nop
pop
int
out
loopne
push
data16
or
push
test
adc
add
push
add
cmpsl
dec
xlat
pop
push
call
ficoml
xchg
fs
aaa
ljmp
jne
push
push
ret
test
es
push
repz
data16
gs
lods
ret
icebp
add
fs
hlt
enter
add
insb
and
lock
pop
add
rorl
push
fimull
inc
cmp
and
lds
aam
je
scas
fnstsw
push
dec
xor
mov
mov
jae
cmp
pop
push
adc
push
je
ja
fnstsw
mov
addb
mov
shlb
and
cli
out
dec
mov
daa
popa
inc
adc
cs
es
add
fmul
pop
push
sbb
xchg
idiv
sub
add
out
popa
fstpl
test
mov
in
jmp
loop
cli
movsb
test
push
add
sbb
and
fisubrs
cli
mov
rcrl
pop
ret
pop
jne
pop
cmp
pop
test
xor
int
bound
sub
data16
ss
sar
sbb
push
mov
stc
mov
push
test
into
lea
xchg
in
pop
cmpsl
fwait
ja
sti
mov
and
mov
bnd
insl
fldl
jg
dec
in
push
lahf
xchg
test
insb
push
pop
int
mov
mov
or
adc
and
fsubl
lods
data16
jle
scas
jp
lods
jge
jl
cmp
mov
inc
pop
data16
sub
xchg
pop
sbb
stos
add
cmp
adc
arpl
jb
in
stos
pop
cmp
dec
xchg
jl
pop
mov
or
push
push
jne
cld
dec
mov
repnz
sub
iret
xor
aam
subl
bnd
and
xchg
out
icebp
mov
jne
movsl
sub
mov
sbb
les
and
mov
xchg
pop
cld
fwait
push
js
adc
out
mov
xchg
xor
js
mov
add
inc
and
pop
mov
dec
sub
and
sbb
jno
jno
gs
cwtl
adc
roll
aad
aas
cwtl
inc
aam
xor
mov
jb
outsb
adc
outsb
rolb
addb
pop
mov
mov
push
repz
daa
orl
pop
inc
mov
jg
test
dec
push
sub
sbb
fs
xchg
inc
xor
push
sbb
or
and
pushf
xchg
pushf
xchg
dec
stos
cmp
outsb
adc
test
and
cs
lods
jecxz
cmpsb
dec
shll
loopne
in
xor
jl
sub
ficoms
lock
dec
dec
aam
adc
xor
adc
mov
cmc
sub
mov
xor
jecxz
or
call
in
dec
je
test
pop
incl
orl
in
ret
mov
push
xchg
add
jb
inc
dec
into
fnstcw
push
out
pop
inc
cmp
push
pop
cltd
jmp
icebp
push
movsb
aas
push
push
jmp
rclb
ret
dec
loope
xchg
and
or
mov
cmpsb
sub
insl
in
test
cmp
rol
add
push
jg
idivl
test
out
into
mov
jo
adc
push
push
icebp
xor
pop
fbld
xor
mov
and
sbb
mov
ret
pop
fimuls
add
xor
mov
adc
mov
inc
scas
xor
test
mov
xchg
inc
sub
loop
test
popa
mov
adc
shrb
jb
xchg
test
aad
sbb
adc
mov
loop
pop
jno
pop
sbb
mov
pop
mov
dec
stc
push
out
xchg
jo
fdivrl
in
dec
pop
mov
lods
pop
push
adc
cmpsl
pop
fnstsw
and
loopne
xchg
cli
xor
mov
pop
leave
sub
jp
or
jne
iret
dec
sbb
push
enter
sbb
je
xchg
and
popa
les
mov
xchg
daa
repnz
or
outsl
dec
sahf
pop
push
jecxz
rcll
fisttps
mov
lret
mov
mov
xor
sbb
mov
xor
rcl
sbb
repz
cmp
xlat
lds
jecxz
add
cld
mov
mov
dec
mov
dec
push
add
lret
mov
jg
les
movsl
push
pop
sbb
test
insb
movsl
push
pusha
into
xchg
dec
adc
xchg
jnp
fisttps
mov
nop
xchg
aad
insl
repnz
jae
in
jecxz
out
test
jge
mov
in
out
pop
xchg
pop
into
stos
inc
cmp
mov
and
or
xchg
sti
fmull
sub
fisubl
push
cmp
pop
inc
push
pop
jge
inc
mov
call
sti
mov
insb
fcompl
data16
adc
inc
cli
fildl
pop
xchg
imul
cmc
sarl
jmp
dec
repz
aam
push
and
inc
test
movsb
push
cmp
daa
dec
jmp
iret
outsl
jmp
ret
sub
enter
imul
scas
sub
inc
push
pop
pop
xchg
das
stc
daa
pop
or
jl
xchg
sti
cmpl
inc
data16
mov
mov
loopne
repz
sbb
insl
mov
xchg
mov
add
icebp
xorl
pushf
push
ljmp
outsb
inc
adc
pop
movsb
cmp
cmpsl
inc
sbb
or
adc
dec
lea
mov
inc
test
pop
add
aaa
inc
jge
and
jp
add
jne
cmc
mov
call
fwait
sbb
call
jge
outsl
ds
test
loope
push
bound
outsb
xor
mov
std
cmc
dec
rclb
mov
test
shrl
int3
outsl
inc
or
fdivrl
jmp
jns
mov
out
test
add
ljmp
ja
mov
es
add
xlat
xchg
int
add
in
cmp
ljmp
xor
push
int
pop
xchg
mov
or
stos
out
mov
dec
sbb
dec
mov
mov
pop
mov
lea
mov
stc
mov
fucomi
sti
faddp
mov
pop
pop
cmp
dec
add
loop
xor
and
popf
shlb
xlat
and
lea
mov
movsb
xor
pop
in
pop
mov
push
data16
add
mov
inc
ror
repz
jmp
cld
call
pop
ret
xor
loopne
xchg
ret
arpl
xor
aaa
push
xchg
dec
shrb
adc
int3
sahf
mov
js
les
dec
dec
mov
xchg
aam
rolb
adcl
mov
test
adc
sbb
or
cmpl
clc
sbb
shll
jg
cwtd
adc
adc
ret
mov
mov
push
mov
mov
cli
cltd
jbe
cmp
gs
fidivl
inc
jp
sti
push
or
loope
dec
xor
sub
fdivrl
outsl
nop
pop
lahf
movsb
ret
sbb
es
mov
push
mov
add
cmc
and
dec
mov
mov
mov
sub
js
nop
xchg
and
lcall
stos
lcall
ret
stc
or
jle
pop
hlt
daa
pop
mov
int
push
repz
and
call
repz
or
movsb
mov
sahf
and
pop
lcall
int3
jle
dec
fistps
push
mov
je
shrb
xchg
fwait
icebp
xchg
cmp
cs
jg
jns
pop
clc
loope
jl
ja
sbb
lock
lds
test
add
cmp
ds
xor
pushf
dec
lods
xlat
mov
pop
push
inc
lea
xor
jp
idivl
int
fs
out
cmpl
cmp
lret
cmp
xchg
push
sub
add
fnstenv
add
dec
mov
or
ljmp
in
enter
and
lar
in
lock
push
into
test
into
incl
xchg
scas
jnp
jle
jno
mov
xor
es
jno
fucomi
rcrl
cmp
sarb
fs
push
pop
popf
and
pxor
sub
daa
mov
push
bound
push
pop
and
testb
pop
in
mov
jno
je
inc
dec
xchg
cmc
dec
je
cld
and
sub
gs
cmc
xor
pop
mov
adc
sub
js
inc
sti
jne
rclb
jbe
js
ljmp
push
test
mov
sahf
jo
or
push
ficompl
in
fimuls
mov
pop
std
in
mov
sub
cmpl
mov
fcmovne
add
adc
mov
pop
pop
outsb
mov
test
and
mov
jb
decl
sub
xchg
xchg
mov
imul
mov
dec
cmp
out
stc
das
or
sub
xchg
out
xchg
popf
nop
sbb
or
adc
adc
mov
lods
cwtl
nop
xchg
cmp
inc
or
fistpl
push
mov
or
pop
xchg
push
fdivs
cmp
aam
adcl
cld
dec
mov
xchg
add
lahf
xchg
enter
jns
cmp
xchg
into
sbb
scas
mov
out
jno
push
in
fildll
bound
icebp
stos
or
ja
cmpsb
les
mov
dec
fisttps
mov
pop
mov
mov
hlt
mov
sub
and
add
jp
cmpb
arpl
movsb
lret
data16
arpl
jge
sbb
adc
mov
pop
in
shll
or
pop
lods
stc
mov
leave
fiaddl
xchg
dec
mov
dec
in
popa
cmp
lret
addr16
roll
xor
and
lret
outsl
pop
mov
mov
mov
push
inc
sbb
cmp
ljmp
lock
push
insl
into
std
inc
icebp
inc
pop
addl
xor
mov
popa
mov
cmc
out
add
and
lret
je
ja
pop
leave
stos
add
pop
and
lds
jne
inc
das
inc
jae
or
xor
push
jnp
movb
out
adc
rol
les
test
mov
lret
mov
dec
cmp
out
inc
sahf
pop
xchg
cmc
cmp
lock
cmp
xchg
mov
pop
pop
jns
mov
jne
pop
cmpb
arpl
nop
lods
and
js
mul
mov
mov
dec
sub
adc
or
dec
xor
sbb
insb
ds
int
lea
adc
xchg
mov
in
push
jge
and
test
js
xlat
or
sub
in
fcoml
mov
inc
and
fstps
jge
movsb
orb
cmp
pop
pusha
mov
clc
adc
inc
imul
je
ret
add
pop
jl
test
aaa
sbb
mov
popf
inc
clc
fbld
aad
je
sbb
jmp
mov
xchg
movsl
cmc
and
lock
adc
or
sahf
cs
out
lock
adc
ret
push
inc
jmp
divl
lcall
adc
inc
lret
rcrl
aas
add
mov
mov
sub
cltd
sbb
adc
push
repnz
push
icebp
lds
jne
mov
insb
ds
iret
sbb
int
sub
loopne
push
je
mov
mov
cmp
adc
jnp
dec
xchg
sub
mov
outsl
ret
pop
inc
popa
in
dec
pusha
std
xor
call
in
adc
push
fcoms
xchg
pop
push
arpl
ret
daa
test
aam
decb
push
ss
loop
and
xchg
stc
mov
xlat
testl
sub
rcrl
add
sub
leave
insb
xchg
cmp
mov
int3
jecxz
xlat
add
sahf
xorl
push
fisttpl
jecxz
test
inc
pusha
and
cmp
bnd
popf
and
fdivs
or
mov
sahf
xchg
xlat
and
push
inc
sahf
mov
cmp
lret
cli
and
sbb
lods
lods
popa
lret
or
ja
xor
mov
jbe
inc
or
mov
js
add
inc
add
insb
sub
insl
out
pop
shlw
or
mov
xorb
shrb
push
sbb
scas
rclb
cld
imul
push
push
cmp
gs
adc
cwtl
pop
dec
sub
add
adc
test
call
add
daa
in
lods
lahf
popa
roll
fldt
jge
sbb
add
in
bound
outsl
jnp
push
adcb
bound
push
outsb
mov
cmp
test
into
sub
dec
mov
das
pusha
jae
pop
pop
sub
and
ja
data16
inc
aaa
mov
notb
cmp
addl
jl
pop
ljmp
and
mov
mov
orl
mov
scas
xchg
gs
rorl
lock
pop
mov
orb
or
and
rcll
xchg
adc
cmp
xorl
in
enter
inc
shlb
loopne
cmc
adc
mov
push
mov
lods
repnz
xor
cmc
fcoms
lds
addr16
and
jns
xchg
jno
stc
imul
adc
test
mov
mov
add
lds
mov
jns
adc
rolb
mov
int3
xchg
cs
andb
push
mov
jge
ret
movsb
lret
mov
aam
adc
sahf
push
repz
je
dec
jnp
and
aam
jecxz
fstpl
inc
or
pop
ficoml
jns
int3
or
jae
cwtl
lcall
je
pop
and
inc
jne
cli
insl
pop
sub
shlb
add
test
pop
xchg
fadd
inc
fistl
std
add
push
fcoml
lods
mov
arpl
mov
or
inc
and
cmp
fnstenv
loopne
popa
mov
adc
sbb
adc
or
mov
xor
test
jg
sub
std
imull
jl
dec
push
sub
rcr
out
lcall
pop
jae
sub
cmpsl
testb
in
mov
xor
xchg
daa
xchg
fwait
adc
inc
push
fisubs
ret
pop
lcall
mov
hlt
sbb
gs
pushf
xchg
pop
cmp
das
add
xchg
in
pop
enter
inc
jmp
cli
mov
js
sbb
push
push
test
imul
adc
adc
divb
sbb
jmp
inc
adc
and
test
je
adc
out
push
push
mov
cmpsl
dec
mov
jp
jp
sbb
sarl
cltd
outsb
ljmp
inc
xchg
inc
cld
int3
inc
mov
dec
xor
adc
loop
fcoml
int
mov
jns
push
pop
jne
insl
arpl
mov
cmpsl
mov
test
mov
imul
out
or
push
test
jae
sbb
loopne
xor
das
mov
imul
jmp
mov
iret
dec
and
stos
xor
popf
mov
dec
mov
das
rolb
popa
movsl
dec
divb
pushf
push
outsl
xor
fdivrs
inc
xor
mov
addr16
xchg
dec
addr16
push
ds
in
xor
mov
cltd
loope
jo
or
cli
stos
out
iret
sbb
into
std
fnstcw
addr16
add
adc
push
xor
pop
in
pop
stc
hlt
pop
test
mov
inc
or
mov
push
and
iret
clc
adc
xor
dec
inc
mov
xchg
sbb
and
mov
pop
popa
pop
sarl
mov
adcl
in
sub
inc
lret
aas
dec
jb
inc
int3
xor
add
xchg
inc
ljmp
push
sub
imul
lret
icebp
mov
sub
sub
ficompl
add
ret
pop
and
icebp
sbb
push
les
adc
jmp
repnz
lods
sub
mov
cwtl
inc
rcrb
jge
xchg
xchg
jg
inc
mov
mov
ljmp
std
aas
mov
mov
push
cmp
jle
xchg
sub
cmp
mov
cwtl
fcoml
enter
outsw
jmp
jge
push
sti
aaa
daa
cmpsl
sahf
or
jmp
cwtl
adcl
scas
shlb
addl
push
lods
fmull
push
mov
ljmp
call
fistpl
stc
jp
sub
xor
filds
push
in
mov
mov
jns
lea
cmp
pop
add
pusha
add
cmc
popa
clc
fistl
cmp
cmovno
and
ret
loopne
jo
lods
incb
and
repz
divl
sub
mov
cld
jb
push
aaa
ds
xor
addr16
mov
jge
fldcw
adc
or
insb
sbb
jmp
mov
sub
cmp
out
xor
enter
cmp
mov
inc
push
jg
inc
popw
adc
inc
lret
mov
jecxz
xchg
jle
out
lods
pop
push
imul
cmp
jp
jnp
out
aas
push
mov
add
lcall
mov
loope
jno
sar
and
cs
aam
cmpsl
gs
mov
pop
or
enter
mov
add
xor
aaa
imull
inc
mov
cwtl
or
lock
xor
xor
sbbb
push
clc
mov
adc
mov
out
sbb
ret
cmpb
adc
test
lret
mov
mov
testl
push
pusha
push
jl
lods
inc
and
test
add
adc
in
addb
lods
arpl
add
inc
adc
cmp
mov
fsts
movsl
pop
scas
mul
mov
ss
xchg
inc
int3
rorl
jne
cltd
mov
jnp
jnp
xor
pushf
addr16
lcall
add
sub
rorb
in
out
lea
jne
pop
mov
test
add
push
and
cmc
dec
pop
mov
sbb
xor
loop
adc
jl
inc
mov
jmp
pop
mov
jne
mov
xor
pop
rcll
test
add
jge
insl
jle
inc
subl
fldt
sbb
cwtl
mov
les
or
lods
or
pop
popa
orl
xchg
adcl
xchg
enter
jne
pop
push
rcll
ret
jb
outsb
sub
xorb
push
jg
dec
mov
inc
daa
dec
hlt
add
rorb
clc
cltd
bound
adc
jl
std
fcomps
jnp
outsb
aam
jl
cltd
idivb
cmp
ficoms
xchg
mov
sbb
mov
adc
mov
cwtl
xor
movsb
movsb
sahf
xor
dec
enter
jg
lea
int
sub
popa
push
imul
dec
outsl
mov
push
repnz
jo
fsubl
cmp
sti
sbb
jo
and
leave
adc
cwtl
push
jmp
repz
test
movsb
fsubrl
subl
adc
pushf
jp
pop
hlt
mov
aam
mov
rcl
push
cs
jg
push
arpl
cmp
cmp
inc
xchg
aas
xchg
pop
loope
imul
lock
mov
xchg
pusha
cmp
das
mov
negl
cmp
mov
adc
int3
xchg
xchg
mov
stos
aam
leave
inc
pop
mov
adc
cmpsl
xchg
mov
cmc
xor
xchg
jne
lea
cld
mov
rcrl
enter
out
lahf
xor
add
cltd
adc
fbld
push
pop
fs
adc
sub
xlat
int
push
lret
dec
sbb
jno
popa
sbb
add
mov
outsl
adc
std
xor
xor
xlat
loop
xchg
push
mov
mov
mov
movsb
push
sbb
push
push
xchg
pop
pop
fimuls
or
in
lock
pop
sub
jmp
outsl
cmpl
popf
popa
mov
clc
mov
dec
sub
push
jp
cltd
jp
push
inc
aas
ss
cmp
insb
mov
cltd
lods
jp
pushf
andl
sbb
punpckhwd
xchg
loop
and
pop
cmp
add
insb
add
xor
jo
fildl
lods
xchg
sub
in
or
shl
pop
mov
or
jmp
mov
filds
mov
xor
addr16
nop
pop
aas
push
jno
cmpsb
dec
data16
mov
insb
movl
push
adc
xorb
and
test
mov
cmp
dec
idiv
sub
enter
push
or
mov
inc
int
outsb
out
jno
cmova
sbbb
jge
adc
xchg
mov
dec
insl
pop
imul
dec
lcall
pop
mov
jmp
mov
fsubrl
cmpb
add
nop
push
xchg
outsb
lret
or
xor
mov
fnstenv
mov
jmp
aam
lock
filds
fs
movsb
es
enter
cs
rol
loopne
shrb
sahf
cltd
stos
xor
in
mov
mov
cmp
sbb
mov
or
call
insl
mov
dec
lcall
add
clc
pop
push
rcrl
mov
lea
pop
jl
xlat
or
jbe
mov
dec
insl
out
fimuls
cmpsb
push
xor
push
and
imul
cs
out
mov
lret
arpl
in
jb
lock
js
push
push
negl
rolb
mov
inc
addr16
pop
xchg
and
lods
sub
dec
rclb
dec
lds
cwtl
adc
fdiv
clc
cltd
dec
mov
jne
ljmp
das
xchg
jecxz
sub
and
jecxz
jl
and
divl
loope
sub
inc
rorb
imul
loopne
je
xlat
push
mov
iret
cmp
mov
mov
cwtl
add
sbb
bound
xchg
dec
les
mov
sbb
sub
lret
icebp
call
mov
int3
cmpsb
mov
mov
lock
sbb
xor
inc
shr
jae
push
mov
mov
lds
es
test
add
insb
aaa
cld
jo
or
xlat
rcl
jge
jmp
test
flds
mov
push
shlb
sub
add
loopne
push
js
mov
in
hlt
xchg
cli
jge
fbld
pop
mov
or
mov
mov
popa
pop
add
mov
xchg
mov
jne
es
xor
out
push
mov
xchg
fistpll
xchg
pop
jbe
outsb
inc
mov
cmp
pop
cmp
aad
pop
mov
int
push
pusha
xor
rcll
xchg
stc
stc
push
out
fcoms
or
push
pop
sub
cld
mov
xchg
dec
fwait
rcr
push
cs
xchg
mov
or
sub
outsb
es
enter
inc
mov
or
icebp
or
jmp
jmp
inc
push
adc
mov
dec
cmp
cs
jns
rcll
xorl
xchg
in
aad
addr16
or
push
mov
xchg
aas
pop
xor
mov
int
decl
mov
jecxz
pop
adc
sarl
outsl
inc
cmpsb
cmpsb
mov
push
ret
dec
gs
inc
lret
js
mov
xchg
ffreep
mov
dec
cmpsb
xchg
test
mov
adc
mov
fdivrs
imul
int3
mov
push
call
add
sbb
out
loopne
daa
das
daa
cmc
lcall
mov
fs
iret
and
loope
into
sub
xor
sub
mov
roll
addb
loope
jae
fsubr
add
pusha
adc
jnp
jae
into
push
in
sub
ret
push
sub
xchg
aad
cli
pop
cs
out
pop
xlat
lds
xor
insb
ret
dec
lea
mov
xor
and
out
in
or
pop
xor
arpl
sub
adc
cmc
dec
fwait
jbe
jo
leave
into
and
xchg
inc
popf
call
out
outsb
in
fisubl
xchg
inc
mov
imul
clc
sidtl
push
xchg
movsl
jb
lea
arpl
xor
xchg
cmp
mov
aam
pop
mov
int
add
mov
inc
xorb
cmp
xor
and
or
dec
adc
xor
xor
xor
xchg
push
xchg
dec
cmp
pusha
lods
xor
inc
jb
lods
and
mov
jbe
shll
int3
sub
mov
popa
lahf
and
idiv
ret
xchg
jecxz
mov
movsl
pop
mov
inc
in
adc
push
movsl
xor
aaa
ljmp
sbb
clc
pop
and
cwtl
cmp
lret
xorb
sub
ret
mov
mov
mov
push
or
jge
and
flds
or
in
mov
out
jecxz
je
loope
or
sub
dec
sub
std
jnp
hlt
in
jl
dec
clc
pusha
fidivrs
fcomps
mov
scas
es
push
jecxz
inc
pushf
in
jnp
scas
push
in
aaa
xchg
sbb
jg
push
pop
cwtl
and
sahf
mov
addr16
ds
xchg
pop
and
mov
std
xchg
bnd
scas
in
fisttps
mov
pop
mov
jbe
xor
leave
scas
jae
mov
and
mov
stos
sub
addr16
mull
movsb
pop
stos
mov
adc
lcall
iret
imul
mov
mov
lret
or
adc
mov
pop
andl
stos
in
inc
or
repz
repnz
ss
push
out
dec
leave
jge
cmp
push
clc
or
xchg
lods
adc
mov
js
vunpcklps
inc
and
scas
mov
mov
xor
das
sub
insb
xchg
mul
enter
inc
lcall
inc
push
test
test
fs
lret
icebp
nop
addr16
xor
adc
popa
and
jnp
sub
repz
adc
mov
call
push
inc
mov
cmp
sbb
jg
out
inc
out
sub
push
cs
push
push
lds
jnp
mov
ficoml
push
add
mov
sahf
leave
cltd
inc
mov
mov
bound
out
jecxz
mov
clc
dec
and
xchg
add
mov
rorl
or
lds
cmp
jb
negb
les
inc
or
xchg
and
imul
cmpsl
push
adc
jg
xor
imul
jb
cmp
insl
stos
or
pop
fstpt
movsl
push
mov
or
adc
sub
fldl
test
pop
stos
outsl
cmp
dec
or
stc
push
and
sub
popf
push
mov
andl
mov
pop
xor
add
test
cmp
jns
clc
mov
call
or
and
xor
inc
cmp
pop
idiv
idivb
push
test
dec
insl
iret
jne
pop
fdiv
mov
loopne
aam
repz
in
pushf
mov
push
jb
mov
push
cs
ja
cwtl
push
mov
jle
fwait
push
adc
cs
rcr
xorl
xor
sub
cmpsb
xor
and
jp
lahf
cmp
pop
push
push
nop
ja
mov
sbb
xor
xchg
clc
xor
out
xchg
pop
fists
push
xchg
inc
dec
sarl
cs
fsts
adc
rcll
xor
outsl
xor
sahf
mov
psubq
mov
dec
sbb
mov
pop
xor
hlt
sub
sub
inc
cli
rol
int3
into
outsl
jbe
nop
movsb
xor
enter
xor
mov
lret
xchg
lock
into
loop
pushf
or
cltd
inc
or
cmp
iret
ljmp
mov
mov
clc
scas
inc
xchg
andl
mov
inc
punpckhbw
push
or
icebp
dec
xchg
pop
mov
test
stos
sbb
jne
pop
dec
cmp
cmp
lds
nop
or
mov
add
jb
lret
or
testb
inc
xchg
push
push
mov
movsl
ljmp
lcall
clc
xchg
arpl
leave
add
adc
lret
xor
inc
push
jae
cmpsl
mov
pop
jecxz
repnz
or
add
iret
mov
fcmovbe
adc
jg
in
sbb
pop
xchg
pop
fisubrl
lods
into
cmp
xchg
rorb
jne
fistpll
mov
or
pop
push
xor
pop
rcrl
popa
iret
lods
into
fsubrs
sahf
js
fisubrs
xor
imull
xchg
shlb
js
pop
pop
cmc
push
rclb
jbe
sub
gs
dec
cmp
cmpsl
push
enter
roll
inc
dec
push
fistpll
or
or
xchg
sbb
dec
addr16
aaa
jo
cmp
push
push
mov
cmp
and
das
cs
out
nop
xchg
fidivl
add
xor
fstps
scas
out
addl
jmp
int
jg
lods
push
test
cmpb
sahf
ja
sub
ret
mov
push
gs
repz
es
je
dec
pop
push
sub
pop
test
nop
les
js
pusha
testb
jns
or
loop
mov
inc
arpl
fwait
adc
add
jnp
sbb
adc
cmp
arpl
inc
lahf
inc
lcall
xchg
push
adc
sbb
jle
cwtl
shl
mov
push
mov
cmpsb
inc
mov
cmp
mov
push
popf
cmp
int
ja
nop
in
in
or
push
mov
push
adc
push
lods
push
xor
cmpsl
sbb
adc
mov
and
pop
cld
lcall
iret
jl
loop
in
ja
clc
int3
jno
inc
mov
push
sbb
inc
and
or
xor
mov
rorl
pop
dec
and
rolb
cltd
repz
dec
sub
push
mov
pop
sbb
je
inc
sub
rcrl
ljmp
call
hlt
push
loopne
outsl
ficoms
push
pop
push
xchg
mov
and
cmpsl
mov
leave
jo
scas
test
subl
imul
popa
in
sbb
fimull
loopne
pop
mov
out
inc
inc
cmp
xor
daa
mov
sub
sub
and
rcll
xchg
cld
hlt
jb,pn
pop
or
add
cmp
inc
cld
pop
cmc
je
sbb
or
xchg
js
pop
ds
lods
fisubrs
xor
cmc
xor
dec
daa
sbb
enter
das
mov
out
stos
addr16
outsl
mov
pop
cltd
dec
sub
lea
and
movsb
or
xlat
mov
shrl
popf
dec
out
iret
sub
lock
sbb
test
sub
sub
es
out
push
icebp
push
inc
test
lock
movsl
pop
or
jno
fcmovb
add
adc
add
lret
data16
push
rcl
ljmp
dec
movsl
outsl
mov
xor
daa
movsl
les
js
and
leave
stos
scas
mov
lock
adc
nop
sbb
je
jb
into
cmc
leave
fstpt
fisubl
sbb
cli
in
mov
pop
pop
mov
das
dec
mov
mov
lcall
push
mov
fs
mov
ficoml
push
in
xchg
mov
mov
sbb
scas
jb
or
imul
hlt
fwait
cmpsb
jb
call
gs
mov
cmp
iret
scas
jge
pushf
or
inc
aam
mov
fsub
es
mov
imul
in
test
lds
imul
and
sub
pop
xchg
sub
mov
push
xchg
xor
leave
pushf
dec
je
scas
xor
adc
pop
sbb
mov
in
je
ror
xchg
lods
lock
adc
std
jge
xor
ds
outsb
dec
sub
gs
clc
lods
cmp
xor
xor
mov
mov
inc
adc
pop
or
popf
mov
mov
scas
mov
loopne
mov
std
cli
pop
lea
mov
sub
xor
hlt
cmp
loopne
jp
add
enterw
pandn
pop
pop
add
cmp
add
and
pop
xor
jge
and
int
fcomp
nop
mov
xchg
mov
mov
push
push
out
addr16
or
or
sub
add
rcll
mov
daa
lea
repz
ret
aad
imul
outsl
xchg
addr16
xor
mov
fldcw
pop
mov
leave
sbb
cmpsl
fcoml
add
and
push
leave
stos
xchg
sbb
push
xchg
fs
jecxz
lods
mov
inc
dec
les
inc
cmp
sub
jmp
xchg
pop
lods
and
push
jb
add
jnp
repnz
test
push
mov
mov
sahf
or
inc
fiaddl
int
imul
mov
es
jp
mov
or
jmp
push
inc
addl
ds
or
mov
lods
ds
shr
sbb
fdiv
push
fsubl
jae
pop
or
mov
out
or
out
mov
cmp
jb
xor
fistpl
movsl
pop
es
xor
jbe
out
mov
testl
push
or
pop
jg
insb
mov
add
stc
cmc
mull
inc
ds
fucomp
xor
jbe
pop
in
mov
ds
jbe
pop
xor
push
icebp
and
mov
arpl
js
shlb
adcl
fs
int
out
inc
call
call
xchg
push
inc
or
orl
iret
ret
fwait
jg
sub
mov
sub
nop
rcr
pop
pop
repnz
mov
mov
cmp
cmp
andl
push
xchg
jo
push
xor
dec
stc
mov
sbb
sbb
out
ljmp
xorl
jb
mov
and
jbe
int3
adc
lcall
push
scas
xchg
std
sbb
inc
cld
outsb
sub
fs
mov
jl
sub
xchg
inc
cmp
in
in
adc
fbld
adc
push
cmp
jmp
and
mov
repnz
addr16
mov
jl
adc
fdivrs
popa
pushf
jecxz
inc
push
jnp
hlt
xlat
jnp
and
scas
mov
std
sub
pop
ds
daa
mov
inc
add
mov
cmc
adc
or
cltd
imul
mov
inc
call
mov
xor
insb
ds
lock
mov
jl
jmp
sub
sbb
jp
dec
or
gs
stos
sbb
xor
pop
lock
cwtl
aad
nop
push
jns
or
and
push
nop
cmp
fimuls
jecxz
and
cmpsl
shrl
pop
push
lahf
jo
imul
cmp
dec
out
loope
lods
lods
sbb
loop,pt
inc
aam
dec
xchg
stos
xchg
dec
push
orl
mov
repz
aaa
xchg
icebp
arpl
push
push
xchg
jg
dec
push
pop
xchg
popf
aas
in
ret
movsb
int3
filds
sbb
in
out
enter
push
cwtl
test
repz
jns
imul
dec
add
sti
push
inc
outsb
ss
and
adc
adc
adc
jnp
xor
lock
inc
xchg
decl
mov
inc
sub
sti
push
cmp
push
xchg
jmp
xchg
int
mov
orl
mov
cmp
ljmp
mov
mov
xchg
aad
mov
jo
fsubrp
mov
data16
add
lcall
cmp
jno
pop
sar
cmc
xor
andb
dec
dec
popa
add
push
inc
mov
aas
pop
imul
adc
mov
stos
inc
cmp
push
dec
mov
mov
neg
jecxz
pop
pop
cmp
xor
dec
daa
lds
xchg
aas
adcl
sbb
pushf
mov
scas
push
xchg
leave
shl
xchg
sub
dec
push
sbb
and
mov
dec
add
mov
mov
xchg
arpl
mov
cmp
sub
inc
movsl
add
push
sub
lahf
inc
mov
loop
sbb
enter
aas
arpl
fsubl
shll
loope
adcl
out
iret
mov
imulb
mov
jl
out
int3
int
xchg
lods
push
ds
xchg
call
shrl
sub
or
shll
pop
xor
dec
in
lock
test
inc
shl
popa
and
popf
fwait
adc
xchg
aas
adc
xor
push
icebp
and
stos
dec
mov
subl
ficoml
sbb
sbb
stos
aaa
sbb
dec
lcall
mov
adc
es
jmp
call
push
or
mulb
xchg
test
cmp
test
loopne
push
pop
dec
xlat
movsb
add
xor
pop
fs
inc
in
cmp
mov
xor
aas
scas
and
jle
je
es
insb
ret
shll
or
mov
xchg
push
mov
mov
xlat
mov
das
mov
dec
push
jmp
in
mov
mov
scas
fsubrs
enter
xorl
mov
xchg
jbe
adc
ds
mov
mov
ret
les
call
shrb
shlb
mov
inc
je
or
rolb
lds
sbb
pusha
in
pop
mov
xchg
lcall
pushf
int3
out
mov
inc
or
push
icebp
and
cmpsb
aam
xor
test
xor
outsb
xor
xor
xor
mov
andl
mov
jns
scas
xchg
out
mov
fcoms
and
pop
jns
push
mov
adc
mov
rcrl
cmpsl
popa
inc
mov
add
and
stos
mov
popa
sahf
in
mov
in
mov
sub
bound
pop
mov
mov
push
subb
push
sbb
or
fdivl
out
add
mov
fnstenv
sbb
pop
mov
push
loopne
jg
push
stos
sbb
divb
roll
xor
stos
sbb
push
arpl
loope
cmpsl
adc
in
fiadds
outsl
push
mov
addl
jle
sti
xchg
bsr
std
subb
int3
jo
adcl
mov
shrl
test
lea
push
js
scas
outsl
add
in
inc
pop
pushf
mov
sti
xchg
ret
xlat
roll
sbb
movsl
and
inc
sub
mov
andl
ljmp
pop
pop
das
push
push
xchg
outsl
std
inc
stos
scas
adc
jge
ror
ljmp
test
movl
cmpsb
shrb
clc
enter
push
test
or
inc
repz
call
xchg
cmp
xor
add
test
pop
lret
imul
push
mov
stc
xchg
cmp
imul
in
lods
jle
mov
mov
stc
in
out
fcoml
push
cmc
pop
xor
in
mov
ret
or
in
jge
notl
loope
jnp
scas
pusha
mov
xchg
fcmovbe
adc
gs
lahf
cld
cltd
lds
or
test
pop
xchg
imul
rolb
sarb
popf
outsl
or
sar
jne
jne
test
adc
jecxz
jo
add
xchg
cmp
and
into
xchg
in
repz
ret
fstps
test
mov
pop
lods
mov
test
sbb
mov
subl
mov
pop
mov
imul
push
sub
lahf
stos
movsb
clc
add
ror
push
xor
daa
pop
pop
popa
cwtl
int3
mov
and
sti
repnz
xchg
xchg
sub
aad
and
test
push
push
mov
dec
adc
jae
shll
jo
and
xor
inc
adc
jae
pop
iret
mov
mov
inc
popa
in
push
jnp
inc
mov
fimuls
aaa
sbbb
clc
adc
and
adc
xor
mov
jae
xchg
cmpl
push
insb
pop
mov
repnz
jg
push
outsl
fstpt
cmpsl
pop
popf
pushf
mov
dec
lods
pop
hlt
or
nop
push
stos
cmp
dec
pop
jecxz
jb
mov
or
inc
xchg
inc
jne
subb
sbb
mov
sub
push
sbb
out
adc
stos
adc
dec
lods
decl
in
lds
jb
scas
xchg
adc
ja
loope
push
loope
xchg
fbstp
sar
aad
fisubs
pop
xor
add
cli
stos
in
movsl
add
add
inc
sub
dec
sub
test
xor
out
lret
pop
sarb
addb
and
xor
or
adc
mov
out
sub
les
inc
xchg
popf
hlt
les
mov
jmp
and
sub
xchg
sub
ds
dec
outsl
push
xor
fisubs
addr16
test
mov
adc
fidivrl
out
insl
outsl
cwtl
aad
aam
orb
cli
pop
stc
add
mov
aaa
int3
and
jo
pop
cmp
pop
fldt
gs
popa
mov
jp,pt
negb
sub
into
cli
test
shl
pop
xlat
outsb
pop
mov
shll
adc
pop
push
fs
mov
xchg
lea
test
repnz
mov
pop
int3
enter
mov
push
adc
lods
adcb
cli
cli
iret
mov
mov
ret
pop
scas
push
aas
iret
xchg
push
inc
daa
popa
jmp
bndstx
xchg
test
test
adc
stc
shrb
cmp
or
aam
xchg
ret
mov
xchg
fsts
movsl
mov
insw
imul
cmp
mov
hlt
les
icebp
or
and
pop
pop
mov
ss
es
sbb
jecxz
in
pop
nop
sbbl
jmp
jno
push
stc
push
stc
mov
push
rcl
mov
sbb
into
xlat
jo
mov
mov
rol
stc
mov
sbb
ret
cmp
pushf
pop
jae
out
mov
cmp
ss
adc
cmp
arpl
jmp
sub
shll
sub
fcompl
in
sarl
sbb
and
les
in
clc
add
in
jmp
add
xchg
push
fwait
push
lret
mov
js
test
or
bound
shlb
ret
or
pusha
add
xchg
add
lock
insl
push
aam
sbb
stos
aad
es
imul
jb
mov
mov
jmp
jl
fnstenv
ljmp
push
sbb
xor
leave
jmp
popf
in
fadd
test
mov
sbb
std
cli
xor
mov
jle
test
lods
jg
mov
mov
push
ljmp
insb
push
and
pusha
ja
addb
cli
sahf
sbb
repz
mov
cltd
nop
fmuls
div
dec
mov
lcall
cmpsb
fldl
insb
scas
rclb
add
or
jns
lcall
sub
push
or
jg
nop
add
iret
lahf
dec
jns
rcll
cmpsl
push
daa
shll
pop
inc
cmp
push
mov
adc
fcompl
int3
fldl
enter
xor
jns
mov
push
xchg
loop
je
cmp
in
in
pop
repz
rclb
test
xor
and
in
or
out
sahf
sbb
lock
cs
jae
ss
repnz
in
adc
adc
js
dec
dec
jg
cltd
cmpsb
or
xchg
shrb
add
rcll
pop
in
ja
sub
xor
ja
xchg
das
shlb
gs
and
rcrl
inc
sub
pop
fwait
jns
jne
rcrb
push
jne
pop
xor
sbb
ss
test
outsb
sbb
pop
mov
mov
sbbl
das
mov
loope
stos
push
inc
jnp
fadd
mov
into
ret
ja
repz
push
loope
orl
outsl
or
data16
jmp
dec
cwtl
aad
fs
arpl
jp
stc
test
lret
popf
push
jb
xchg
fwait
pop
inc
xchg
out
push
enter
push
inc
rcl
xor
scas
dec
sub
and
cmpsl
in
pop
orb
out
add
rorl
in
xchg
jmp
fstpl
push
stc
gs
cmp
gs
pop
jecxz
push
cltd
lods
mov
out
pop
mov
aam
inc
lock
cs
orb
subl
add
int
sbb
jnp
dec
cwtl
mov
xchg
fs
sti
iret
in
cmpsb
idivl
cmc
fistpll
adc
repz
in
mov
cmp
mov
ja
iret
add
bound
mov
xchg
ficoms
mov
mov
lea
adc
mov
ja
push
loopne
addb
lret
inc
pop
leave
pop
mov
ror
push
push
mov
sarb
insl
adc
pop
pop
inc
repnz
adc
cld
add
cmp
dec
fs
jl
pushf
popf
xor
dec
xor
orb
in
cld
insb
mov
aam
lret
scas
push
mov
idivl
xchg
mov
push
or
sarl
pusha
xor
mov
dec
mov
add
nop
js
gs
int3
push
xchg
clc
out
xor
mov
push
or
and
jns
scas
adc
pop
pop
mov
out
cmpl
mov
dec
shrb
sub
pop
lcall
jl
popa
adcl
adc
sti
mov
or
push
bound
or
xor
nop
mov
dec
sbb
mov
dec
lock
cs
mov
mov
xor
sbb
xor
push
cs
push
dec
mov
xchg
lret
xor
jae
inc
mov
xor
lods
mov
push
mov
outsl
loope
sbb
outsb
xor
lret
cmp
je
es
jmp
add
ljmp
fistpll
sub
sti
cmpsb
mov
push
ljmp
outsb
addr16
inc
rcrl
pop
lret
cmp
adc
ds
ds
in
repz
daa
sub
jp
inc
hlt
lret
fbstp
lret
or
ror
add
lods
roll
or
bound
and
rcrl
adc
push
sbb
mov
popf
aas
rcll
insl
dec
inc
cld
push
xor
sbb
cwtl
fmul
sub
sti
popl
and
test
jl,pt
mov
or
lods
mov
pop
lcall
mov
dec
mov
les
dec
es
ret
jl
pop
cmp
and
or
push
es
repz
push
pop
cmc
sub
cmpsl
addb
xchg
push
push
popf
lds
pop
mov
cmp
xchg
push
sub
jae
popf
ja
xchg
jge
pop
pushw
mov
and
sub
clc
add
push
mov
pop
lret
lods
and
lods
add
stos
enter
or
mov
jne
fistpll
movsb
sub
push
or
jge
jge,pn
cmp
or
or
insl
scas
ljmp
xchg
sbb
adc
repnz
push
mov
add
pop
popf
mov
dec
cmpsb
dec
push
pop
or
push
mov
fmuls
sub
in
lcall
aad
cltd
cmpsl
repz
psllq
shlb
notl
sub
sub
sti
xor
repnz
pop
lahf
inc
adc
rcr
ljmp
push
jns
jg
shr
ds
xchg
imul
iret
ret
pop
push
dec
es
xlat
repnz
add
xchg
cmp
gs
into
xor
mov
cmc
dec
stos
repz
lret
loopne
das
inc
cmp
sbb
pop
add
jmp
fs
divb
lcall
jl
aaa
rorb
leave
jns
add
xchg
lock
arpl
sbb
pop
pop
push
mov
hlt
jns
addr16
rcrb
repnz
inc
daa
in
fwait
loopne
nop
inc
cmp
insb
xchg
and
lods
bound
dec
and
push
andl
out
push
mov
pop
inc
cmp
or
mov
dec
movsb
or
stos
fdivrl
xor
jns
gs
call
pop
or
cmp
adc
fstpl
xlat
sti
xchg
stos
push
cmp
add
jp
pop
and
push
push
icebp
push
xchg
insl
js
xchg
adc
outsl
into
and
dec
or
pusha
fs
push
inc
cmc
movups
dec
mov
or
pusha
add
push
sbbl
enter
cmpsl
popa
mov
pop
fisubrl
arpl
lea
sbb
cmp
fistps
mov
pop
leave
push
mov
jle
loope
xchg
xor
mov
xchg
cmpsb
sub
mov
push
jno
mov
ja
lods
push
mov
int3
js
test
test
js
push
adc
call
adc
add
inc
movsb
xchg
pop
fs
push
shlb
mov
mov
xchg
cmp
std
inc
and
scas
test
pop
movsl
outsb
out
sub
rol
outsb
mov
adc
mov
aam
adc
arpl
mov
mov
out
push
js
hlt
xor
out
fmull
fs
les
je
mov
xor
fwait
mov
pop
inc
jb
rolb
xchg
es
imul
inc
and
lcall
push
cmp
shll
sbb
std
outsl
add
stc
mov
imul
popa
or
repz
test
sbb
xchg
shr
popf
clc
add
jle
xchg
lock
stc
xchg
inc
xchg
xor
xchg
and
push
aad
sub
iret
and
mov
push
rcll
or
inc
and
imul
movsb
fisubs
cli
mov
scas
sub
push
xor
mov
sahf
cmp
mov
push
or
orb
push
hlt
data16
mov
xor
imul
jno
xchg
xchg
cmp
add
push
popa
mov
fucomip
mov
cmp
mov
pop
fsubl
lcall
and
jge
enter
fisubs
mov
xchg
ret
inc
mov
xchg
mov
js
xor
cmp
cmp
sahf
pop
orb
mov
es
ret
adc
test
jle
cmpsl
leave
pop
inc
insb
jge
pop
adc
mov
scas
les
enter
ds
stc
adcl
dec
out
and
stc
nop
sbb
rorl
fisubs
stc
jnp
shrb
movsb
cwtl
pop
xor
mov
insl
movb
gs
aam
hlt
xchg
push
movsb
aam
mov
daa
push
fistpll
cmp
dec
or
test
xchg
in
in
sbb
fwait
sbb
xorl
mov
fldt
push
dec
mov
adc
outsb
idivb
ljmp
mov
pop
rcrb
inc
and
fadd
and
xor
or
fwait
and
sub
dec
movsl
mov
int
enter
andl
aad
mov
lods
lods
shrl
ret
adc
mov
push
and
in
mov
sub
pop
lahf
leave
stos
mov
outsl
repz
mov
cmpsb
cmc
push
out
inc
popa
out
or
loop
data16
mov
push
cmp
mov
mov
mov
popa
pop
sbb
test
cwtl
mov
inc
adc
push
int3
test
or
out
jns
jle
mov
loope
aas
mov
pop
cwtl
jb
jp
and
scas
loope
xchg
mov
or
mov
push
mov
in
fucomip
arpl
xor
push
mov
rcrl
stos
inc
jmp
xchg
cmp
out
in
in
notl
and
cmp
movl
loope
mov
jb
pop
mov
jge
cmp
inc
out
shl
sbbl
push
lds
clc
fcomp
jmp
andl
push
les
aaa
int
jmp
mov
pushf
ljmp
cmp
ret
mov
lcall
iret
push
addb
adc
push
idivb
adc
arpl
sbb
sub
repnz
cmp
dec
jle
inc
insb
xchg
iret
push
lods
scas
cli
add
adc
movsb
movsb
les
sub
insl
push
cltd
int3
subb
and
pushf
and
shr
xor
add
pop
mov
cmp
out
xor
cmc
sub
ret
jl
shlb
insl
sub
jbe
or
jg
jle
push
bound
fcmove
mov
jmp
pop
mov
sub
test
movsl
dec
in
test
fwait
xor
jge
adc
outsb
fiaddl
fisubrl
in
int
jmp
add
imul
sub
lods
adc
scas
mov
aam
push
int
insl
out
loope
sub
pop
sbb
pusha
mov
ljmp
push
daa
sbbl
dec
repnz
rcrb
dec
jne
out
cmp
ja
in
bound
ret
pop
repnz
loope
mov
lds
pusha
out
mov
mov
inc
or
cltd
and
ja
movsl
and
incl
ds
psraw
data16
ja
fs
stc
je
in
add
in
jb
ss
add
jmp
cmp
and
sbb
mov
inc
lods
ds
push
mov
cmc
dec
orb
ss
inc
addl
xchg
push
xchg
sub
lock
cmp
jp
les
rcll
fnstenv
lret
push
dec
or
dec
mov
lahf
out
xor
sub
add
cmp
mov
inc
imul
fbld
xchg
out
jns
imul
lcall
in
jmp
cmpsb
sub
out
shl
push
jno
mov
outsl
sub
testb
push
mov
or
out
push
popf
cmp
inc
loope
adc
jne
fdivl
jo
sub
arpl
into
xor
dec
adc
xlat
les
sti
in
add
shll
cmp
mov
xchg
scas
sbb
scas
inc
clc
pop
push
sarb
push
loopne
call
andb
mov
ljmp
sub
xchg
insb
nop
sub
xchg
add
in
out
adc
rorb
dec
mov
ret
and
dec
cmp
add
push
nop
add
dec
mov
nop
lahf
insb
sbb
outsb
daa
mov
push
out
mov
xchg
xor
insb
cwtl
loopne
jbe
or
dec
mov
loopne
int3
dec
add
sbb
lds
leave
cmpl
pop
jb
fisubrs
sbb
js
and
pop
jne
gs
cwtl
call
sub
out
addr16
repnz
adc
mov
cmp
inc
addl
hlt
pushf
mov
mov
fwait
pop
adc
test
mov
dec
dec
ret
and
outsl
xor
jp
pop
imul
jne
stos
ljmp
mov
mov
lea
fsubr
jne
decb
cltd
push
inc
loopne
mov
fidivrl
push
mov
nop
leave
test
pop
mov
in
popa
pop
push
aam
xor
sbb
pushf
cmp
outsb
je
mov
xlat
popa
cmp
stc
fucomip
loopne,pt
ljmp
push
and
and
pop
es
or
loop
and
std
ret
je
gs
mov
xchg
loop
and
adc
sbb
in
jge
clc
mov
stc
push
pop
mov
stos
xor
fists
arpl
mov
gs
mov
js
cmc
lcall
std
out
jmp
popf
and
ljmp
sbb
test
mov
push
movsb
jle
je
imul
or
mov
rcrl
call
subl
mov
add
movsl
pop
mov
icebp
mov
mov
sbb
insl
pusha
imul
dec
mov
lock
mov
lods
jle
lret
and
and
xorl
and
add
pushf
jecxz,pt
loope
adc
mov
lds
das
loope
inc
stos
add
rcrb
and
pushf
mov
loope
and
ds
lahf
jg
das
dec
daa
dec
dec
mov
inc
cmp
xchg
sub
icebp
dec
and
dec
outsl
or
es
mov
inc
pop
xchg
repnz
cld
pusha
inc
xchg
jo
popf
popa
push
ljmp
and
rol
aaa
push
push
pop
or
jl
xor
xchg
xor
jae
fstps
rclb
push
add
mov
pushf
inc
iret
fisubrl
daa
fbld
ds
mov
inc
cmp
shrb
ret
leave
mov
xchg
femms
inc
pusha
call
ret
leave
lret
fs
idivb
loopne
imull
int3
mov
xchg
or
imul
cs
cmpsb
mov
out
push
loop
inc
mov
gs
xlat
leave
add
xchg
add
jp
mov
aam
cmp
sti
pushf
add
insl
sahf
mov
imul
sub
adc
xor
out
mov
ficoml
enter
bound
sbb
scas
and
ja
mov
andl
or
sub
xor
pop
push
add
mov
mov
mov
daa
sarl
pop
call
push
xchg
cmp
xor
out
pop
push
outsb
fisttpl
mov
lret
xchg
imul
jmp
call
cmpsl
inc
xchg
adc
inc
test
lret
ss
rorb
xchg
je
sbb
shr
adc
in
imul
push
jne
mov
pop
push
test
iret
enter
dec
push
sub
adcl
in
mov
icebp
mov
icebp
mov
nop
imul
push
or
xor
fsub
arpl
mov
jb
or
loope
mov
setbe
lods
lahf
aas
mov
pop
jno
imul
into
fs
in
inc
sbb
outsb
push
sbb
int
jno
aam
into
out
dec
hlt
fsub
lods
popa
in
sti
enter
sbbb
and
sbb
mov
jae
cmc
stos
pop
rcll
daa
mov
mov
stc
and
cmp
cmp
dec
adc
sbb
jmp
pushf
mov
fisttpll
or
ljmp
insb
mov
mov
pushf
lds
mov
xchg
adc
cmp
jbe
mov
and
push
insb
sti
js
int3
jle
faddl
scas
notl
ja
lods
xchg
adc
scas
xor
or
mov
adcb
fistpl
mov
jbe
test
ret
pop
enter
adc
fsubl
loop
repz
mov
cmc
sub
jl
iret
rorb
mov
lods
rcrl
adc
mov
sbb
xchg
push
loope
pop
into
xchg
cmp
or
mov
dec
test
add
sub
jne
pop
or
push
mov
xorb
pop
cmp
cmp
mov
xchg
sub
inc
testb
mov
pop
adcb
adc
xor
jg
pop
push
test
popl
mov
pop
and
ljmp
aam
jle
jge
data16
in
movups
adc
mov
mov
xor
xor
ss
pop
push
xorb
test
xchg
test
or
jecxz
das
imul
ds
iret
aam
iret
xchg
xchg
addl
mov
test
and
loop
pop
pop
add
loop
push
test
fneni(8087
pop
jge,pt
dec
mov
push
or
pushf
push
outsb
test
or
xchg
data16
lcall
dec
imul
cmp
outsb
add
gs
jle
jno
out
fldt
in
xchg
data16
int
mov
std
cmpsb
pop
popf
aas
mov
ret
add
mov
xchg
test
push
data16
out
mov
adc
mov
ja
add
mov
lea
sbb
sub
xchg
xchg
pop
lret
fsubrs
ficoml
lods
test
sti
movsb
cmp
push
sbb
das
cwtl
xor
pushf
inc
loop
test
jmp
out
xlat
mov
out
int3
mov
jp
out
je
test
push
push
mov
push
sbb
xchg
mov
dec
adc
xor
repnz
xchg
jmp
lods
data16
and
xchg
add
cmp
ja,pn
cli
rcl
dec
inc
jg
xchg
arpl
orl
inc
scas
loop
or
mov
aaa
subl
sub
dec
pop
mov
fcoms
in
xor
cmp
lods
outsb
popa
loopne
mov
cmpsl
dec
mov
inc
mov
out
mov
shl
push
mov
scas
or
push
push
cld
and
adc
jae
sbb
popf
nop
jp
cmpsl
das
jbe
outsl
jbe
or
add
int3
sbb
out
cli
in
push
mov
cli
and
push
jecxz
jmp
mov
into
pop
fs
xlat
cmp
pop
mov
adc
lock
xchg
jae
and
sbbb
add
cmp
add
outsl
jb
dec
in
js
inc
daa
mov
fsubrl
or
mov
divl
pushf
mov
sahf
cmp
add
pop
mov
lods
and
inc
add
lds
inc
push
push
scas
addl
or
ret
dec
mov
loope
jmp
and
and
inc
incl
fwait
adcb
add
call
and
pusha
repnz
or
in
push
cmp
jle
in
push
subl
and
imul
iret
jne
inc
rol
push
push
and
stos
and
pop
push
xor
das
sub
mov
push
and
pop
insb
insl
cmp
shlb
xchg
loopne
ss
mov
aad
or
stc
mov
pop
lret
stc
and
lock
cli
add
or
pop
sbb
aas
out
mov
std
cmc
jae
mov
bound
shlb
cmp
sbb
add
ljmp
cmpsb
addr16
pop
sbb
or
push
filds
mov
out
sahf
roll
out
pushf
movsb
jbe
mov
sbb
stos
aad
xlat
shrl
or
fidivrl
leave
xlat
mov
push
push
push
mov
adc
scas
popf
ficoml
add
arpl
leave
xor
and
jne
or
dec
and
out
stos
hlt
mov
mov
fwait
rorl
jg
sub
sbb
js
aad
or
outsb
cmp
ss
adc
push
mov
jbe
pop
test
arpl
dec
inc
mov
cli
xchg
aaa
add
testl
lret
cmpsl
bound
sbb
sti
mov
js
bound
or
jp
inc
insl
jae
mov
or
adc
out
push
bnd
adc
loope
subl
mov
das
and
das
pushf
aam
icebp
fsts
aam
cmpb
sub
mov
push
bound
pop
leave
stos
ds
xor
jne
dec
gs
pop
push
stc
popa
ds
push
mov
ror
es
xorb
cwtl
cmc
fistps
and
aam
nopl
std
lods
dec
and
inc
sbb
test
pop
loopne
mov
imul
jnp
adc
cwtl
cmc
mov
push
lret
arpl
test
jns
hlt
mov
mov
mov
mov
dec
jns
loopne
adc
stos
mov
pop
repz
jae
call
push
push
inc
out
shlb
push
pop
pushf
fstps
mov
sub
cmp
stc
xlat
mov
sub
cmp
mov
jno
add
rclb
inc
loop
adc
std
rorl
mov
dec
lds
scas
cwtl
nop
mov
push
push
repz
cmpsb
mov
jbe
xchg
lea
jb
dec
jbe
dec
adc
sub
mov
push
jbe
push
stc
add
add
xchg
lods
in
or
popf
push
push
sahf
scas
lock
and
cmc
jl
frstor
jl
jmp
jo
lods
je
fdivrp
push
xchg
bnd
xchg
pop
enter
and
adc
sbb
and
in
or
dec
mov
mov
xchg
rcr
fsubrs
push
shll
or
in
mov
pushf
inc
imul
mov
into
ljmp
popf
mov
mov
xor
add
inc
or
pop
inc
shl
sbb
out
adc
adc
add
and
fistps
sti
mov
aaa
xor
dec
mov
xor
clc
std
insb
arpl
lcall
adc
test
xchg
push
ss
sub
sub
cmp
sub
jecxz
sbb
mov
dec
test
mov
xchg
ss
neg
mov
imul
test
pop
dec
adc
jns
les
or
imull
push
sahf
iret
mov
dec
popf
idivb
fsubp
mov
repnz
add
xchg
ja
in
add
repnz
std
dec
pop
cmp
stos
add
insl
mov
lahf
gs
xchg
push
and
sti
js
mov
iret
cwtl
cmp
iret
sub
fdivs
ja
in
filds
pop
ja
sbb
ljmp
int3
inc
add
cmpsl
aaa
jo
or
xchg
popf
fnstcw
ds
sub
in
or
inc
sbb
pop
mov
inc
inc
xchg
movsl
jle
push
scas
add
adc
sbb
and
fucomip
sbb
push
mov
repnz
lock
or
push
dec
sub
xor
dec
xchg
cmp
and
and
repz
out
mov
add
and
mov
xchg
shl
pop
movsl
ljmp
pushf
or
les
dec
jecxz
mov
mov
add
lret
xor
ss
mov
jbe
mov
adc
addr16
cwtl
es
inc
enter
cmpsb
bound
mov
test
jp
or
loopne
adcl
ret
cltd
or
aam
adc
lock
push
leave
inc
sub
xchg
call
sahf
loop
xor
mov
scas
dec
cmp
nop
jle
in
xchg
js
das
ds
jo
pushf
jb
rcrb
jbe
adc
fldt
leave
jne
dec
mov
pop
repz
mov
inc
add
ja
aad
mov
pop
add
mov
or
pop
rolb
in
and
fwait
or
jae
out
icebp
inc
and
mov
cltd
mov
push
shlb
lret
xor
fiaddl
mov
add
jne
and
out
icebp
mov
mov
push
xchg
sub
sbb
es
jl
or
aam
dec
lret
mov
mov
inc
dec
arpl
pop
loop
ret
inc
hlt
xchg
cmpsb
xchg
inc
cmp
cmp
pop
mov
dec
add
jb
push
arpl
negb
inc
shll
scas
test
stos
cmp
fsubp
std
xor
stos
inc
add
add
pop
xchg
cld
xor
shrl
jecxz
sub
lods
or
lock
js
sbb
ljmp
xchg
cltd
lock
jmp
push
lret
and
scas
lds
cli
push
add
repz
jge
sbb
leave
push
rcl
in
mov
sbb
ds
ret
call
mov
daa
or
push
rcrl
subb
cmp
adc
push
mov
gs
sub
cmp
mov
add
std
enter
sub
sbb
xchg
leave
pop
inc
jmp
testl
aaa
loop
das
xchg
sub
adcl
and
sbb
dec
push
loop
rorl
sbb
xor
cmp
adc
cmp
cmc
cmp
pushf
dec
xchg
xor
fisubs
lods
pop
cmp
jb
dec
sahf
in
fwait
adc
sub
sbb
pop
inc
dec
pop
jp
adc
mov
cltd
addr16
mov
in
mov
and
into
mov
pop
push
cmp
and
mov
dec
sbb
jp
dec
add
mull
jg
xchg
mov
push
in
xchg
mov
add
push
arpl
mov
shlb
enter
jmp
lcall
out
cmpsb
cmp
insl
dec
hlt
pop
fsubrl
cmp
testl
xchg
into
stos
scas
pop
mov
jp
pop
pushf
into
jmp
sbb
arpl
out
cmp
jg
ds
mov
in
dec
push
lcall
gs
cmovae
adc
das
push
ljmp
cld
jecxz
gs
jecxz
add
mov
inc
out
and
fistl
fsubl
fwait
loope
inc
and
and
loope
ret
shll
outsb
sub
mov
push
xor
jmp
jmp
cli
adc
mov
push
or
sbbl
xchg
mov
insl
xchg
out
test
sarb
sub
fs
mov
mov
out
push
jge
pusha
orl
pop
mov
xor
outsb
mov
out
loope
cli
aas
subl
mov
int
shll
mov
ds
jne
jno
jg
movsl
jge
out
jmp
push
mov
cli
subb
jbe
call
and
orb
test
shll
lret
or
push
push
dec
xchg
xor
adc
xlat
mov
lret
cmp
insl
jl
loopne
imul
in
pop
aaa
sbb
nop
iret
mov
inc
pushf
sub
mov
mov
adc
out
pusha
inc
jb
jno
mov
jbe
dec
js
ljmp
pop
cmp
fsubl
cmc
sub
loopne
add
aaa
sub
xor
xchg
mov
bound
lcall
jl
imul
mov
cs
pop
xchg
bound
or
cmpsb
icebp
insl
iret
into
mov
test
popa
repz
jle
iret
pop
xor
sbb
adc
pop
xchg
enter
das
sbb
and
inc
shrl
sub
dec
adc
jb
add
mov
sahf
bound
fucomp
stos
sub
mov
shl
mov
test
pop
adc
stc
outsl
mov
insl
adc
mov
mov
loopne
mov
sub
mov
loop
out
xchg
cltd
pop
or
jne
inc
aas
jmp
je
pop
or
push
sbb
fstpl
out
ds
jl
int3
xor
mov
jle
push
mov
sub
mov
cmp
fnstcw
add
cmp
aas
out
add
stos
test
jno
frstor
push
and
daa
and
jg
inc
sub
add
or
push
jmp
dec
mov
sar
lahf
bound
popf
jg
movsl
and
dec
add
inc
and
cli
fstp
xor
popa
inc
mov
push
dec
and
repnz
jo
push
jp
mov
mov
xchg
jns
sub
push
cmpsl
out
fisubrs
xchg
push
loope
in
add
cmp
inc
mov
xchg
sahf
cmpsl
sti
popf
cltd
push
mov
mov
ja
std
stc
adc
loop
dec
mov
pushf
out
out
mov
or
divb
lea
adc
and
daa
add
pop
push
mov
pop
sbb
pop
inc
int3
fildll
mov
testb
pop
repnz
pop
push
lods
add
in
push
hlt
call
shll
push
ret
daa
inc
sbb
push
mov
addr16
add
ret
dec
inc
or
dec
jnp
lea
pop
sub
sahf
add
pop
movsl
xor
mov
stos
or
push
pop
cmp
cmp
jecxz
mov
sbb
aad
pushfw
mov
movl
or
mov
scas
outsl
inc
fwait
xchg
adc
push
or
xor
fstl
or
fcom
popf
stc
push
lahf
mov
shr
or
mov
repnz
xor
ret
mov
mov
or
test
and
dec
test
es
pslld
push
adc
cwtl
inc
xchg
jne
add
ss
sbb
daa
pop
pop
gs
add
mov
and
cmp
int3
push
icebp
xchg
pop
es
mull
out
jne
jg
roll
jle
repnz
sbb
push
push
or
shlb
icebp
loope
incb
jmp
mov
fcompl
mov
aam
aas
or
dec
jle
js
jg
rcll
jo
adc
mov
pop
push
lret
sub
in
leave
fimuls
addr16
adc
fists
jecxz
mov
pop
das
mov
rcrl
ds
xor
xchg
das
or
or
and
cmp
inc
aam
ds
cs
andl
jle
mov
pop
ja
out
mov
arpl
inc
enter
sti
add
orb
outsb
les
pop
aaa
sbb
call
test
lcall
xchg
jmp
andb
push
xchg
sub
push
jns
xchg
push
shrb
xor
dec
cmp
cmovno
fiadds
xchg
lea
scas
loop
rorl
cs
pop
pop
js
shrl
enter
and
cmp
cmp
in
in
pop
aam
xor
xchg
rolb
sbb
jne
xchg
xchg
mov
leave
mov
jp
js
jp
and
test
sarb
loopne
call
cmpsl
lret
dec
icebp
rclb
jg
in
and
in
cs
push
mov
xchg
sub
mov
cmpl
mov
dec
hlt
mov
imul
ja
lds
mov
xor
mov
jmp
enter
aam
mov
or
sub
ja
bound
and
icebp
push
mov
js
sysenter
mov
xchg
inc
jg
nop
cmc
pusha
aad
je
popl
mov
jecxz
mov
push
mov
mov
clc
push
jge
mov
inc
pop
loopne
cmp
in
and
push
adc
fnsave
jle
in
stos
fsubrs
notb
popa
aaa
or
test
int3
orb
hlt
inc
fcompl
dec
pop
test
lods
out
or
xchg
inc
cmp
ret
daa
shr
cmp
in
loopne
std
andl
int3
lods
insb
sub
push
inc
sbb
in
cmpl
xchg
mov
test
xlat
or
insb
pusha
add
ss
adc
mov
mov
fisttps
jmp
movsb
cltd
rolb
mov
clc
push
cwtl
arpl
insl
lahf
xchg
and
mov
imul
mov
push
inc
or
out
hlt
rorl
or
xor
hlt
out
xchg
jae
ja
push
mov
lods
ljmp
push
jl
mov
jg
cmp
add
adc
insl
mov
fcompp
dec
ret
and
push
adc
jns
or
mov
push
mov
shlb
push
sti
mov
xchg
sbb
fwait
cmp
sbb
icebp
adc
es
cs
mulb
jne
into
inc
bound
pop
inc
jno
cmc
in
mov
push
xor
xor
popa
cmp
sub
cltd
mov
jle
dec
xchg
lods
hlt
inc
jl
ds
mov
add
dec
and
fisubs
je
xor
sbb
inc
inc
mov
xchg
pop
insl
xchg
add
mov
xchg
adc
cmp
lods
pop
mov
sub
dec
mov
repz
cmpsl
rcrl
aaa
xchg
lods
or
or
xchg
cmp
sbb
lods
sub
cwtl
xchg
adc
add
xchg
loop
mov
fimull
mov
test
jle
icebp
jbe
push
xor
das
repnz
jae
inc
pop
and
xchg
xchg
lea
inc
mov
cli
lret
sbb
xor
les
jb
dec
jns
std
mov
scas
add
adc
iret
or
icebp
in
fnstenv
mov
lock
fistpll
out
cltd
cmpsl
stc
push
push
sub
sub
mov
adc
popa
hlt
inc
aaa
in
dec
mov
test
push
adc
push
shrb
ljmp
repz
inc
jp
in
and
push
jno
xor
es
mov
aaa
jg,pt
insl
scas
push
mov
ret
add
ja
out
stos
je
inc
push
fidivrl
loopne
xor
or
add
test
rorb
pop
sbb
mov
mov
mov
lock
icebp
cmc
and
or
sbb
or
add
adc
cwtl
test
jp
xor
daa
scas
loopne
mov
mov
cmpsl
lret
xorl
add
dec
sub
jnp
mov
xchg
dec
and
xchg
nop
push
nop
movsl
mov
mov
out
das
ljmp
fldl
nop
out
sbb
pop
dec
std
jno
cwtl
jle
sbb
out
fidivl
inc
pop
mov
xor
clc
cmp
jg
sahf
jl
and
dec
mov
insl
jg
xacquire
sub
fbld
cmpsb
dec
mov
or
sahf
lea
lret
insb
dec
shr
rorb
jg
add
sub
nop
add
test
fcoml
dec
inc
jmp
jo
mov
ja
or
adc
mov
dec
mov
sbb
call
xlat
movsl
mov
mov
imull
ja
push
mov
pop
lret
repz
or
loop
xor
popa
mov
xchg
aaa
xor
cmp
lock
ss
fstp
xchg
in
xchg
loopne
cmpsb
bound
cmpsl
lods
lods
subb
xchg
fidivl
movsb
mov
and
ret
xchg
roll
dec
jbe
cmc
rorb
iret
push
pop
sbb
iret
daa
sub
mov
movsb
lock
jp
sbb
xor
fsts
dec
or
stos
push
jbe
adc
dec
push
jne
lret
cmp
aam
movsl
add
xor
lret
dec
sbb
loopne
adc
inc
dec
fwait
push
test
xorl
push
add
lret
pop
mov
jmp
xchg
xchg
out
insb
rcl
mov
jae
sbb
jo
mov
inc
pop
add
lock
push
daa
jmp
mov
mov
into
je
dec
notb
dec
jl
push
imul
pop
sbb
jmp
push
movsl
adc
in
clc
ret
test
jecxz
and
mov
or
cmpsl
insl
inc
dec
test
inc
test
fidivrl
cmp
jp
adc
add
sarl
jbe
rcrb
and
faddl
lahf
enter
mov
mov
jge
pop
ffree
ficoms
add
xchg
jmp
mov
add
filds
in
stos
cmpsb
add
or
rcr
sahf
adc
jnp
fcmovnu
int
sbb
ret
push
lret
sub
mov
fiaddl
sbb
bound
sub
lods
fwait
dec
adc
leave
adc
sbb
sbb
mov
shlb
xor
call
pop
je
ret
stos
push
jbe
das
mov
push
push
xchg
popf
inc
popf
stc
aaa
mov
dec
lock
fwait
lods
mov
lcall
push
popf
out
pusha
or
es
xor
and
mov
pop
cwtl
xchg
inc
xchg
pop
insl
popa
pop
mov
or
jle
mov
daa
lcall
dec
mov
iret
dec
pop
adc
test
adcl
push
inc
and
or
mov
dec
pop
mov
add
iret
lcall
mov
jb
jae
sub
pusha
inc
cmpsl
lahf
mov
movsb
mov
popf
fildll
lret
cmp
dec
lea
dec
inc
clc
or
mov
xchg
adc
fbld
mov
stos
sub
insl
ror
js
mov
sti
test
shlb
jp
xor
or
inc
jae
push
lahf
ret
add
fmuls
xchg
cmp
fs
push
ljmp
es
jb
stos
repnz
or
out
inc
mov
sbb
nop
jb
jmp
lock
jmp
aaa
inc
jl
mov
xor
call
popa
push
push
dec
adc
push
insb
data16
add
call
jl
inc
mov
cmc
inc
les
jno
ret
add
adc
insb
mov
xchg
inc
xor
and
addl
xor
ss
add
sahf
mov
xchg
and
inc
clc
ror
cmp
jo
xor
push
dec
add
pop
add
fidivrs
daa
inc
in
notl
les
xchg
xor
call
call
mov
xchg
loopne
mov
add
movsb
or
movsb
cli
pop
pop
fsubrl
mul
lcall
push
cmp
in
sub
popf
movsl
push
mov
pop
xor
adc
sahf
movsl
dec
mov
stc
das
les
cwtl
dec
push
or
aad
gs
movl
dec
and
iret
xchg
jle
enter
and
jns
es
mov
into
fsts
repz
jno
push
inc
cmpl
lods
mov
cmp
popa
mov
jae
test
cmp
pop
pop
or
adc
enter
testl
push
inc
push
out
testb
test
lret
jae
mov
cmp
sbb
mov
push
je
out
je
or
mov
pop
dec
aaa
iret
jns
inc
xor
inc
sbb
subl
xchg
and
nop
push
int
jb
xchg
xor
adc
in
lret
sbb
pop
cld
nop
and
push
int3
clc
fldt
mov
cli
and
add
jne
rcll
clc
shll
out
shrb
lea
mov
mov
inc
jl
out
pop
push
sbb
pop
jbe
ja
pop
and
lret
jmp
jns
pushf
icebp
aam
fs
stc
inc
adc
push
test
lret
push
stos
les
dec
add
call
shrd
dec
inc
mov
icebp
sbb
and
in
sahf
fildl
jo
jp
push
mov
out
rcrb
jg
xchg
jl
push
pop
inc
cmpsb
jp
and
sub
std
mov
mov
movsb
or
pushf
pop
test
jne
aam
add
sub
jns
sub
pop
and
adc
and
jg
mov
icebp
int3
and
pop
shl
inc
push
sbb
xchg
mov
stos
test
je
sub
lret
sub
jecxz
jb
dec
mov
pop
sbb
aad
addr16
push
jne
push
test
movsl
jno
sub
lds
push
push
dec
xchg
xor
sub
test
sub
xor
sbb
or
dec
mov
push
movb
outsb
ds
lods
jae
aad
or
adc
add
fcoml
fstpl
cmp
add
dec
inc
pop
jp
inc
sbb
lock
repnz
sub
jp
sub
dec
sub
inc
or
pusha
nop
ret
mov
dec
aad
inc
outsb
mov
mov
mov
xchg
jae
mov
pop
push
into
rorl
and
fs
mov
bound
repz
adc
out
add
xchg
pop
mov
lret
adc
mov
jb
ss
sahf
movsb
repnz
cs
dec
add
sbb
aas
movsbl
movsl
sub
xor
imul
mov
pop
sarl
movsl
jnp
cmp
sub
int
adc
push
mov
and
or
sbb
loope
jb
cmp
xchg
mov
loopne
mov
ret
fmul
and
stc
fucomip
lods
mov
dec
pop
xchg
mov
imul
jb
insb
fldt
xchg
and
xor
gs
adc
adc
jge
jle
cld
dec
pop
aam
jbe
subb
repnz
sti
sbb
and
sub
jp
shll
jne
call
pop
mov
xor
xor
stos
add
lea
je
sbb
iret
inc
inc
shl
cmp
aaa
in
add
repnz
sub
adc
and
push
into
sbb
add
jg
push
insl
popf
out
push
pop
out
xchg
push
mov
push
jl
sub
lds
lret
xchg
jmp
idiv
push
shl
mov
std
shrb
pop
mov
xchg
add
pop
push
test
xchg
fists
sahf
or
xlat
jbe
pop
sarl
mov
cmc
push
pusha
lods
and
pop
mov
je
adc
dec
js
jle
jecxz
hlt
mov
dec
xor
or
or
decb
scas
cmp
out
fs
sbb
insb
push
and
mov
pop
inc
xor
jo
add
pop
imul
or
cmp
xor
fimuls
fwait
mov
mov
adc
push
cs
popa
fsubrp
arpl
pusha
sbb
sbb
cmp
push
mov
and
mov
rcl
lcall
pop
xchg
stos
mov
pop
rorb
ja
push
jns
jle
pusha
xorb
mov
push
fiaddl
cmp
enter
jae
js
testb
sbb
aas
and
sbb
add
in
or
dec
jecxz
movsb
test
ja
adc
loope
add
fcompl
push
and
cmp
mov
in
mov
adcb
pop
imul
cwtl
cmp
fisttpl
cmp
push
in
imul
sbb
jl
lret
xor
and
or
xor
mov
leave
sub
adc
ljmp
stc
xlat
les
rolb
insl
adc
jp
mov
outsb
into
nop
mov
xorl
mov
fidivrl
daa
out
sti
je
cwtl
and
pop
les
cmp
mov
outsl
cmp
daa
and
mov
cs
aas
lret
ret
mov
fnstcw
sbb
leave
cmp
daa
pop
mov
cmp
or
xor
ljmp
fprem
adc
flds
mov
inc
push
or
xchg
cli
push
cmpl
bound
mov
roll
ret
mov
or
inc
idivb
ss
add
and
adc
sub
ds
cmpsl
leave
sub
sub
mov
xchg
add
push
daa
inc
stos
ret
mov
jnp
in
mov
subb
xchg
xor
leave
out
enter
scas
pop
jae
adc
jnp
mov
mov
xchg
or
push
imul
test
shlb
daa
ret
addb
out
or
or
pop
adc
stos
sbb
lret
lds
lds
xchg
enter
lods
cmp
sahf
mov
mov
mov
add
out
daa
sbb
xor
xchg
out
inc
aaa
and
cltd
loopne
nop
sbb
inc
out
mov
xor
jnp
cld
cmpsl
xchg
xchg
mov
jecxz
cmpsl
es
pusha
xor
add
sahf
mov
dec
add
sbb
dec
lds
xchg
js
inc
pop
xchg
mov
lcall
mov
inc
mov
and
inc
fsubs
fisubl
sub
mov
xorb
cmp
addr16
aad
in
mov
ret
jnp
setne
clc
adc
ja
or
dec
in
add
fs
add
cmpsb
sub
push
mov
cli
nop
insb
or
lods
xor
jecxz
adc
jbe
cmpsl
pop
pop
rcl
rcl
pusha
mov
rcrb
add
gs
mov
fiaddl
push
fists
inc
scas
fs
aam
rcrb
cltd
repnz
jne
nop
adc
xor
int3
bound
add
xor
fdivs
fdivl
stos
jle
fidivs
jno
sub
jecxz
arpl
scas
das
or
xchg
jbe
roll
imul
inc
mov
cmp
xchg
xchg
ds
fwait
cltd
test
pop
repnz
mov
mov
out
inc
cmpsb
mov
pop
mov
add
and
icebp
out
xchg
pop
out
out
outsw
jns
add
push
jne
add
sbb
lretw
lods
mov
cmp
inc
mov
xchg
imul
xchg
sbb
sub
xlat
push
dec
pop
pop
jne
or
lds
mov
push
mov
imul
call
jle
pop
xchg
push
out
add
out
add
and
mov
punpcklwd
dec
mov
sbb
adc
xchg
sbb
pusha
dec
lods
dec
sub
cmpsl
jae
das
mov
lret
mov
daa
mov
push
add
mov
or
int3
insb
adc
sbb
and
imul
mov
loopne
dec
push
dec
cs
pop
inc
les
pop
mov
fisubs
dec
push
mov
insb
jne
lods
inc
or
xorl
adc
sbb
shlw
and
stos
push
pop
rdmsr
mov
out
movsb
push
fstpl
pop
les
cmc
mov
inc
jns
in
sub
xchg
xchg
add
push
mov
jno
loopne
pop
dec
out
sahf
mov
stc
repz
inc
ret
idiv
arpl
push
outsb
cwtl
es
sub
aaa
ja
add
mov
push
sbb
jb
fld1
and
ja
pop
cltd
push
imul
pop
fstps
cmc
repz
jb
test
daa
inc
jns
jne
cmpsb
jge
mov
cmp
jne
loop
fisttpll
aaa
cmc
shr
pop
les
js
add
fwait
mov
dec
xchg
dec
shl
push
inc
negl
popa
aaa
pop
xchg
pop
jnp
xor
jbe
adc
push
arpl
popf
cmpsb
add
inc
lods
inc
xor
jns
mov
mov
in
test
push
bswap
pushl
pop
mov
mov
jg
sahf
cli
mov
xchg
push
mov
leave
sub
mov
test
out
jb
mov
std
imul
and
mov
movsb
mov
stos
pop
add
adc
sarb
pushl
je
push
mov
movsb
aam
cs
mov
aad
or
or
sub
mov
pop
leave
insb
inc
sti
clc
push
jge
pushf
aas
mov
loope,pn
xchg
sahf
dec
testb
gs
xor
fldcw
jle
jnp
loope
sahf
or
mov
xor
ficomps
jp
add
aad
or
xchg
ficoms
pop
dec
add
xor
mov
daa
scas
sahf
sbb
repz
xchg
shlb
xlat
enter
sbb
shrl
stc
out
lcall
sahf
shlb
sub
and
mov
divl
ret
add
cmpsb
mov
jp
subb
pop
loopne
mov
cltd
int3
pop
and
enter
xchg
dec
inc
xorb
inc
fs
es
lock
jbe
jno,pt
xor
insl
and
int3
jmp
arpl
or
or
in
loopne
int
or
movsb
lock
iret
das
aaa
ret
sub
add
add
push
xchg
insb
cmp
test
mov
ret
enter
xor
pop
mov
mov
adc
jnp
push
add
fdivrl
xchg
adc
pop
lcall
scas
xchg
lock
sub
and
jne
sub
ds
cltd
or
or
insl
jg
shll
ja
sbb
movsl
xlat
rol
rcrb
daa
xchg
mov
das
les
sub
mov
fisttps
jne
data16
int3
rorl
inc
arpl
and
scas
repnz
and
sub
stos
call
mov
dec
push
mov
cmp
lcall
rorl
insb
nop
adc
push
cmp
pop
xor
fistl
cvttps2pi
js
push
int
aad
pop
movsb
xlat
sbb
daa
xor
mov
xor
jnp
inc
cld
rcrl
inc
pop
lret
cmp
pop
adc
sub
inc
call
addr16
sbb
push
cld
mov
scas
out
js
pop
lds
push
mov
fldl
out
aaa
adc
xchg
punpckhdq
fcompl
jmp
lret
les
push
daa
mov
xchg
enter
lods
dec
jno
jg
sbb
or
inc
jno
movsl
aad
pop
shl
and
jmp
lods
stc
insl
push
movsl
mov
leave
rcll
shll
dec
sub
les
cmp
repnz
mov
mov
sar
adc
daa
inc
addr16
push
jo
xor
jp
jp,pn
ret
jns
add
mov
mov
arpl
test
inc
add
push
push
arpl
repnz
pop
mov
push
xchg
repz
cmp
xor
fisubrs
sub
cs
and
add
adc
repnz
add
jecxz
sbb
push
cmp
leave
mov
xor
fistps
lcall
sub
lret
ja
cmp
dec
adc
insl
fwait
std
xchg
scas
xlat
loope
adc
add
mov
inc
cli
stos
add
xchg
inc
out
sbb
insl
sub
dec
push
mov
jp
cld
or
jbe
popf
loope
fcompl
in
test
dec
jae
out
andl
sbb
mov
or
and
sub
vmovaps
stos
call
jo
sbb
sub
sbb
xchg
cmpsb
dec
dec
or
data16
enter
ljmp
cmp
jnp
iret
cli
xchg
pop
aam
mov
add
xlat
shlb
add
add
out
push
fsubl
jge
dec
mov
lret
xchg
out
dec
orb
dec
into
jp
xchg
inc
push
lahf
inc
lret
pop
pop
sbb
je
out
jecxz
and
mov
sbb
inc
push
repz
xchg
inc
stos
ret
mov
sbb
xor
cmp
pop
fdivp
test
add
repnz
push
mov
jne
loopne
push
addr16
pop
mov
jne
test
xchg
xor
lods
adc
push
jp
aaa
insl
push
cvtps2pi
add
enter
es
call
loopne
xchg
loope
inc
enter
subb
pop
subl
in
enter
push
dec
out
insb
xor
nop
sarl
mov
push
fldcw
mov
addr16
push
push
shll
cmp
jne
mov
aas
push
sbb
or
insb
out
mov
dec
mov
nop
sahf
mov
jg
mov
ljmp
shlb
mov
xor
lcall
mov
cli
js
cltd
adc
jl
sbb
fwait
mov
stos
ss
push
popa
imul
in
shlb
jp
push
cwtl
lahf
into
sbb
test
js
inc
xchg
dec
in
jecxz
test
jbe
inc
xor
hlt
inc
std
movsl
call
add
mov
clc
leave
cmc
aaa
sub
mov
jbe
rcrb
inc
add
pop
scas
jnp
loopne
jmp
jmp
jle
nop
int
pop
mov
xchg
adcl
repz
xchg
pop
cmp
pop
xlat
icebp
lret
daa
inc
jns
add
sbb
cld
pop
and
dec
lret
out
add
or
hlt
pop
mov
pop
mull
scas
add
or
jbe
out
and
push
popf
add
mov
push
test
pop
in
or
cmpsl
mov
pop
dec
jg
or
push
push
push
loop
jae
xor
fnsave
mov
dec
sub
fs
lcall
outsl
xor
xchg
lods
cmpsb
adc
in
rcrl
dec
lods
repnz
fisttpll
pop
outsb
dec
orl
add
aad
andb
push
mov
mov
pop
aas
scas
jp
jge
stos
jge
push
mov
add
cs
pop
dec
inc
or
lods
mov
mov
jl
repz
ffree
fwait
push
mov
nop
adc
jbe
mov
add
mov
xchg
loop
mov
pusha
adc
mov
mov
lds
cmovno
aam
fcmovnb
test
or
sbb
ss
mov
lock
add
xchg
sbb
ja
sub
stos
sbb
mov
xor
test
cmp
int
jno
xlat
ljmp
lea
add
add
lds
mov
lret
test
add
repz
push
jno
jecxz
or
mov
push
add
sbb
divb
mov
add
and
pushf
push
or
shlb
fidivrl
iret
dec
std
inc
push
outsl
pop
dec
enter
push
mov
call
aaa
pop
ret
sbb
ficoms
cmc
sbb
lods
xlat
repnz
int3
jb
push
mov
pop
inc
aas
xchg
fidivs
bound
dec
and
call
je
ret
iret
or
icebp
lds
pop
cltd
sti
aas
push
or
dec
out
mov
int3
js
cmp
jl
jp
jno
cmp
or
outsb
mov
pop
in
jo
iret
enter
pop
sub
aaa
xchg
lock
jne
dec
pop
stc
mov
clc
fldt
adc
mov
or
enter
in
pop
ljmp
xchg
inc
lcall
pusha
mov
mov
das
loope
or
lcall
or
lret
stc
and
out
inc
nop
xlat
push
cmp
inc
dec
scas
xchg
push
mov
mov
jecxz
pop
mov
sub
stos
or
mov
mov
cmp
push
xor
fwait
rep
dec
xchg
les
add
cmp
divl
cmp
into
cmpsb
aam
pop
pop
lret
jmp
jecxz
sbb
mov
mov
aad
scas
push
and
icebp
ja
shlb
mov
xlat
pop
outsb
mov
andb
xor
inc
in
sbb
inc
cmp
loope
in
mov
jbe
in
fcmovnb
out
cmp
in
andb
ret
in
ret
andb
sbb
lods
dec
shrl
push
testb
inc
int3
inc
dec
sahf
xor
mov
or
pop
sub
jne
pop
dec
in
mov
push
into
push
and
rcrl
loopne
adc
addr16
cmp
mov
test
add
jnp
pop
jl
dec
pop
ret
or
mov
mov
fcmovne
test
ljmp
cmp
cmp
push
pop
adc
jle
insl
andl
or
sti
loope
and
movsb
xchg
jo
adc
cmp
inc
scas
inc
cwtl
jmp
sub
iret
dec
adc
test
add
mov
orb
dec
imul
adc
cmpsl
xchg
cmp
jp
mov
lcall
mov
lods
pop
xchg
sub
inc
addr16
shlb
mov
dec
push
jae
scas
sbb
into
in
and
cmp
xchg
add
push
xchg
jne
aas
adc
lock
loope
lret
inc
add
inc
std
mov
mov
pop
mov
adc
arpl
popa
inc
ret
dec
int3
jbe,pn
stc
aaa
xchg
sbbb
xor
jmp
dec
add
mov
jne
inc
rcll
mov
sub
cs
xor
ret
cmp
pop
mov
and
or
add
mov
data16
xor
and
jp
cmp
clc
ss
mov
add
ret
cmp
loope
cmp
nop
arpl
int3
adc
cmp
xchg
and
nop
push
es
sahf
jo
push
xchg
sub
mov
movsb
sahf
nop
cwtl
or
fwait
repz
repnz
in
ret
int
add
or
pop
imul
mov
addl
daa
cmpsb
add
and
or
negl
gs
dec
xchg
outsl
test
sahf
outsb
lods
es
cmp
jnp
aam
jne
das
scas
insb
and
sbb
or
fucomi
inc
fistpl
mov
dec
in
ret
dec
or
iret
and
loope
pop
jle
pushf
sub
pop
or
pop
iret
aad
addr16
adc
pop
jae
dec
xor
test
into
cs
or
pop
sub
sub
inc
push
stos
cwtl
xor
mov
adc
pop
dec
xchg
sub
cmp
mov
jb
mov
pop
xchg
jae
dec
aaa
scas
pusha
mov
orb
xor
ret
add
es
ds
fcmovne
jnp
neg
xchg
lods
cmp
mov
mov
pop
push
cmp
inc
sub
arpl
ljmp
xchg
icebp
pushf
fwait
cltd
bts
jle
data16
notb
mov
cwtl
repnz
movsl
add
js
mov
pop
mov
les
fidivs
adc
adc
push
imulb
cmp
sbb
gs
stos
loop
jnp
mov
mov
jecxz
sub
adc
hlt
xor
lcall
ficoms
fmull
jne
out
xchg
push
out
and
and
sbb
jae
outsb
pushl
mov
ret
mov
jno
int
jb
mov
jbe
sbb
push
in
test
lods
push
cmp
cmovge
mov
arpl
clc
or
dec
push
add
das
fwait
xchg
aam
or
xor
jp
jg
in
dec
sub
out
in
fsubrl
movb
jnp
nop
out
repnz
fldt
js
jo
xchg
ja
stc
mov
pop
pushf
aam
jb
sar
pop
pop
jb
call
or
out
lods
dec
dec
fdivs
sub
xor
out
jmp
push
mov
dec
out
sahf
xor
or
jnp
jecxz
cmp
xor
fisttpl
je
and
fneni(8087
push
mov
adc
dec
cmp
popa
push
mov
mov
pop
pop
lahf
xor
loopne
jg
jb
test
mov
fdivrs
mov
jle
insl
sub
push
dec
jmp
mov
movsb
mov
lret
in
movsb
pop
mov
cmp
or
shlb
vmovss
adc
xor
pop
cli
lahf
jecxz
mov
inc
ja
mov
sub
outsl
xchg
lret
xor
adc
jbe
adc
repnz
xchg
mov
inc
xor
add
sarl
xor
jns
sar
testl
inc
fmul
or
fnsave
pop
cmp
cmpsb
push
and
mov
mov
jnp
mov
xor
gs
nop
js
bound
jge
dec
cmpsl
test
sbb
dec
idivb
push
lock
aaa
mov
sub
sub
data16
sbb
movsl
sbb
test
out
inc
xchg
insb
fimuls
cmp
in
pavgw
data16
addr16
sub
sti
lods
sti
in
jmp
add
mov
pop
fs
ds
mov
pop
popf
dec
imulb
clc
idivb
xchg
into
mov
cmc
sti
sbb
lods
xchg
cmp
vsqrtpd
flds
push
stos
lea
fstpt
mov
out
inc
mov
lcall
insl
mov
out
inc
mov
aaa
add
push
out
mov
fsubp
negb
xlat
lock
cmovs
xlat
movsl
aad
and
in
orb
mov
and
inc
ret
jmp
add
cmp
mov
add
jecxz
je
push
ret
and
sub
adc
cmp
sub
ret
mov
mov
or
adc
inc
lods
test
jmp
pop
aam
mov
cs
fucomip
aaa
scas
jmp
sbb
push
ss
imul
push
cmp
sub
sub
fistps
sbb
push
lock
mov
fwait
push
pop
out
rclb
inc
test
aas
bound
lock
pop
sti
push
cwtl
cmpsl
test
cmc
xor
cmp
or
dec
and
jp
in
aaa
xor
sbb
xchg
pop
int3
lahf
jle
sti
in
pushf
pop
add
xchg
sbb
ficomps
out
sub
xchg
cmp
adc
pushf
outsb
sbb
pop
std
popf
sub
xchg
stos
movsb
pop
cmp
mov
and
pop
je
aaa
adc
jg
out
loope
iret
cltd
out
xchg
or
xor
ss
roll
xor
in
pop
xchg
mov
pop
fnsave
jnp
iret
push
inc
jg
sti
outsb
xor
je
sub
repz
cs
jne
push
std
pop
xchg
flds
jo
lcall
shlb
add
aas
fldt
jne
addl
xlat
add
lea
push
xchg
popl
and
jno
insb
lcall
aam
cmp
sbb
xor
outsb
and
ja
in
arpl
add
jae
repz
lock
rorl
push
enter
insb
filds
xchg
mov
mov
in
xchg
mov
add
decb
fwait
add
adcl
ja
add
test
ret
dec
mov
fdivl
inc
and
in
xor
lahf
push
push
jae
sub
test
pop
rorl
push
stos
imul
cmp
cmpsl
lock
test
dec
sbbl
inc
rcrb
push
repz
mov
in
fmuls
fsubrl
addr16
movsl
out
inc
adc
and
rolb
repz
imul
fs
popf
mov
push
aas
popa
leave
xchg
call
cwtl
push
pop
cmp
push
sub
bound
idivl
ret
xchg
ss
test
mov
into
sbb
cmp
xor
inc
lea
test
call
pop
repnz
xchg
and
fldenv
ret
mov
iret
stc
and
adcl
mov
jmp
push
inc
pusha
cmpsl
hlt
outsb
stos
mov
idiv
lods
cwtl
adcb
dec
leave
js
lds
rcll
scas
lds
and
and
js
je
stc
jmp
insl
sub
roll
push
shll
fnstsw
in
insl
and
pop
cmpsl
lahf
aad
jle
aad
xor
sbb
call
in
xor
ds
mov
incl
xchg
mov
lcall
push
adcb
fnstsw
inc
mov
mov
ljmp
or
sub
adc
neg
mov
jl
adc
lcall
into
or
lea
int
js
loopne
out
arpl
mov
cmp
add
and
pusha
insb
xchg
emms
xchg
sbb
addr16
punpckhwd
inc
int3
decl
daa
mov
lret
pop
das
push
mov
xor
jle
ja
adc
in
test
out
jne
sub
fisubrs
cmpsb
push
or
add
into
out
xor
jge
sub
mov
test
adc
insl
dec
pop
test
insb
fisttpll
push
mov
xchg
cmp
aas
mov
mov
mov
bound
dec
pop
out
out
jge
leave
xchg
in
jo
testl
addr16
fildl
insl
popf
test
cwtl
adc
push
mov
addl
cmp
xor
pop
pop
mov
cmp
fneni(8087
xchg
lcall
push
into
mov
imul
push
mov
in
ljmp
push
jg
sbb
sub
jbe
in
sti
xchg
adc
and
pop
fldl
pop
push
adc
inc
jg
in
xor
sbb
sub
sbb
xor
jp
ror
rolb
cmpsb
mov
bound
cwtl
jbe
push
ljmp
in
stc
paddusb
aad
shrl
outsb
in
inc
scas
or
pusha
rcll
enter
test
ret
scas
aam
add
ret
adcl
or
cmp
nop
nop
inc
mov
push
gs
cwtl
inc
inc
or
dec
push
stos
stc
subl
test
mov
sub
out
fnsave
pushf
jecxz
sbb
lahf
mov
cmp
idivl
sub
in
lock
out
adc
mov
in
int3
leave
xchg
mov
ret
push
shl
push
xor
out
sbb
or
mov
leave
xor
cltd
xlat
mov
dec
call
cld
stos
stc
mov
xchg
aas
lcall
inc
xchg
jmp
mov
push
ror
fidivrs
mov
hlt
xor
jns
adc
clc
mov
clc
push
adc
ds
push
mov
out
pop
pop
xor
jmp
lods
inc
xchg
push
or
fadd
es
or
shrl
call
xchg
iret
sbb
pop
xchg
fs
cmp
gs
fs
sahf
imul
sub
test
test
sub
rclb
or
ss
fwait
push
xchg
push
mov
into
ljmp
lahf
sbb
mov
call
outsl
popf
out
jge
imul
mov
mov
push
pop
push
adc
or
inc
nop
ss
mov
xor
jle
and
lret
test
in
dec
pop
in
cmc
xchg
insb
outsl
scas
enter
lahf
cli
loope
stos
xchg
cmp
mov
std
ret
dec
jbe
xchg
dec
push
mov
pop
mov
inc
or
js
aaa
lcall
fwait
jno
xlat
mov
es
and
dec
stc
pop
orl
cmp
fisubs
les
fdivrl
je
push
add
pop
loopne
mov
ret
cmpsb
xchg
pop
add
push
fistl
cmpsl
dec
push
mov
lods
add
xor
subl
into
lret
negb
jg
inc
je
popf
in
pop
popf
in
dec
sbb
out
int
lcall
pop
aad
dec
adc
movsb
ss
std
hlt
aas
lods
jbe
fmul
fdivl
push
pusha
mov
sub
jmp
adc
in
mov
push
test
lods
call
leave
outsb
cmpsb
push
jo
popf
out
jmp
jbe
jmp
out
jmp
scas
xor
sbb
and
xchg
sub
lea
adcb
js
pop
push
pop
pop
and
fsub
icebp
xchg
in
and
add
xchg
stc
repz
sub
sahf
cmp
dec
lcall
mov
push
cltd
push
jno
cmp
xchg
xchg
mov
sar
stos
sbb
cmpsl
dec
push
or
mov
add
push
es
pop
inc
push
xor
adc
ret
out
ret
sbbb
or
push
pushf
add
jmp
xchg
lods
jg
into
cld
scas
mov
aaa
sub
xchg
data16
rcrb
jo
lret
daa
lods
mov
out
idivl
aam
stc
add
inc
popf
bound
adc
nop
iret
fdivr
lods
rclb
data16
inc
loop
lahf
sbb
and
fstl
repnz
test
sbb
test
jne
aaa
and
js
jp
clc
jge
scas
dec
in
dec
inc
xor
aas
mull
inc
popa
jmp
adc
adc
or
das
jb
sbbb
dec
inc
aad
adc
mov
pop
lcall
mov
stos
scas
sub
aaa
or
xor
out
xchg
fs
xchg
inc
cmpl
mov
sbb
push
pop
loopne
xor
fwait
test
dec
and
cmp
clc
mov
mov
aam
stc
mov
inc
pop
test
aas
aas
mov
nop
gs
stos
in
jb
sbb
pop
cmp
dec
push
and
adc
stc
sbb
inc
dec
push
lods
pop
add
incb
jno
cs
jne
mov
sahf
mov
int
push
negl
lds
and
nop
cmp
mov
push
fcmovnb
divl
add
je
mulb
fsts
xchg
and
mov
in
sub
and
mov
rep
add
jl
cmp
icebp
int3
loop
mov
scas
lcall
test
out
inc
fistpl
dec
lea
fdivrl
mov
xlat
insl
out
lcall
fneni(8087
and
fisttps
out
pop
testb
fisubrl
push
push
lock
mov
movsb
inc
cmpsb
pop
adc
shl
jmp
testb
lret
call
inc
inc
sub
bound
xorb
popa
xor
push
test
clc
and
or
das
or
in
or
pop
notb
iret
lret
jmp
loopne
mov
out
or
and
call
cld
pushf
lods
arpl
aad
aad
andb
inc
fidivrl
out
mov
add
enter
mov
ss
stos
sub
jnp
lret
xchg
add
sbb
mov
or
push
ss
scas
jno
jbe
push
outsb
cs
pushf
aad
insl
imull
mov
mov
cmp
push
ficompl
pop
pop
or
push
stos
mov
mov
dec
bound
lcall
repnz
addl
pop
push
push
in
int3
dec
push
xor
shrb
inc
push
inc
sub
sub
pop
arpl
xor
pop
rcrl
stc
add
repz
out
push
clc
adc
fnstsw
jo
mov
xchg
je
adc
mov
sbb
lret
mov
xor
test
loopne
call
mov
popa
dec
outsb
rolb
add
sub
push
dec
pop
lret
inc
data16
adc
outsb
jb
jge
cmpsb
fwait
pop
or
dec
es
jle
pop
call
push
pop
mov
add
mov
scas
inc
inc
repz
loopne
jbe
leave
or
xchg
pop
cmp
dec
or
mov
xbegin
popf
daa
out
adc
ret
jmp
neg
xor
fwait
mov
push
js
popa
ja
jp
lret
xorl
add
dec
or
pop
mov
mov
shrl
rolb
ss
movsb
or
inc
jge
inc
movl
js
push
jo
je
orb
sub
jge
mov
ja
enter
adc
jno
sar
push
push
mov
stc
pop
test
je
mov
or
hlt
pushf
cs
mov
xchg
pop
mov
aaa
cmp
mov
aam
push
adc
ret
mov
adc
int
push
cld
mov
mov
aad
std
xor
add
dec
xor
scas
pop
mov
stc
daa
mov
push
and
push
inc
pusha
hlt
push
stos
lock
adc
sub
mov
xor
ffreep
dec
add
mul
mov
mov
out
out
orl
lcall
and
and
or
hlt
adc
xchg
cmp
inc
daa
dec
adc
orl
addr16
cmpsb
lret
xchg
lret
cld
or
xor
data16
into
das
xchg
add
stos
sbb
jb
cs
cmp
jge
sar
sahf
shll
sbb
movsl
jp
adc
lahf
je
inc
in
testb
jmp
stos
dec
in
mov
lds
leave
adc
data16
icebp
mov
cwtl
dec
xor
cmp
and
or
out
mov
or
push
pop
or
push
sbb
cmp
enter
xor
insb
in
pop
out
leave
aam
or
mov
scas
inc
pop
jae
in
leave
sti
dec
cwtl
push
mov
ret
inc
add
and
sbb
push
sahf
add
sub
shr
pop
xchg
sarb
mov
into
lock
push
or
test
mov
sub
in
adc
fisubrs
cmpsb
cmpsb
arpl
cmp
pop
stos
jbe
mov
ret
or
sbb
outsl
inc
push
loopne
addr16
cs
ss
mov
fcoms
or
mov
jmp
incb
scas
ret
or
cmpsl
ret
cmpsl
hlt
stc
iret
sub
fisttpl
or
cltd
xor
xor
icebp
inc
ret
inc
dec
out
popf
or
add
adc
add
mov
mov
xchg
adc
pop
inc
stos
lods
push
out
jne
js
sub
jne
cmp
xchg
sub
xchg
movsb
xor
cmp
adc
xorb
add
pop
pop
and
iret
lret
js
jge
je
jnp
xor
pop
loopne
xchg
pop
daa
pusha
into
scas
in
mov
rol
test
sti
pop
out
add
int3
pop
cld
pop
inc
hlt
fimuls
sbb
in
mov
jp
jge
popf
aas
mov
sbb
push
leave
movsb
pop
fidivrs
cmp
inc
cs
lahf
adc
scas
std
lods
dec
xchg
pop
test
add
pusha
fucomip
mov
push
xor
push
jecxz
jae
je
sbb
xchg
lods
loopne
icebp
xchg
jnp
mov
nop
add
xor
insl
mov
in
inc
iret
sub
scas
cltd
js
je
test
xchg
mov
das
rcll
data16
or
out
push
mov
jae
adc
jmp
pop
jo
mov
shll
sbb
inc
in
into
andl
scas
or
test
in
push
das
jns
cwtl
push
jmp
mov
add
js
mov
mov
shrl
push
push
sbb
and
dec
es
jge
mov
inc
dec
dec
add
add
mov
andb
inc
sbb
cmp
mov
sti
fcmove
outsb
push
mov
sarb
mov
jge
loope
hlt
paddb
enter
mov
xchg
inc
jns
mov
es
cld
sahf
clc
jg
mov
fld
sub
mov
or
and
pop
mov
pop
xchg
mov
subl
or
pop
punpckhwd
sbb
clc
dec
test
into
mov
jg
ss
jne
loopne
int
fsubp
sarl
mov
sub
jg
int3
repz
pop
leave
and
xor
add
rcrb
push
mov
gs
imul
and
std
or
mov
adc
shrb
rclb
rolb
jmp
icebp
dec
push
out
lods
mov
mov
mov
or
jle
cmp
in
dec
in
sub
mov
and
pop
andb
mov
push
ds
sub
and
push
orl
mov
mov
stos
jnp
clc
movsb
cs
addr16
push
ret
adc
sub
dec
adc
push
outsb
gs
push
cmp
xchg
popa
mov
hlt
adc
and
mov
lcall
mov
adc
ljmp
jnp
jmp
push
ret
adc
cwtl
mov
movsl
xchg
mov
loopne
or
pop
push
andb
mov
loope
push
into
add
lods
adc
mov
dec
lahf
testl
sub
pop
push
push
cmpsl
shr
xlat
mov
fnstcw
dec
pop
mov
adc
inc
xorl
xor
outsb
nop
push
jmp
push
cmp
add
mov
insb
pushf
adc
fisttpl
or
sub
in
and
pop
loopne
cmp
xchg
sub
imul
pushf
stc
loope
sbb
je
in
xor
loope
sub
xchg
mov
push
mov
aas
mov
prefetch
pop
inc
push
fstl
in
incb
iret
imul
mov
out
bound
xorb
in
icebp
lods
pushf
rorl
lcall
sbbl
cmp
bnd
add
push
pop
test
sbb
xchg
pop
sub
mov
dec
xor
add
cmc
ficoml
dec
call
push
cmpsb
daa
cmc
xor
sbb
jg
cmp
mov
sahf
mov
ds
int3
das
jp
pop
rcll
repz
sahf
cmp
inc
jo
popf
cmpsl
sub
sbb
jbe
mov
mov
pop
mov
xchg
adc
clc
inc
mov
xor
lcall
into
cltd
and
xchg
leave
sbb
add
xchg
cs
incl
and
mov
dec
sub
lods
inc
popa
cmp
mov
lret
pop
into
mov
jecxz
scas
xchg
sub
enter
std
sbb
mov
push
adc
insl
icebp
xor
cmp
out
gs
outsb
push
inc
jnp
add
les
test
xchg
jbe
pop
add
ret
mov
test
inc
push
sbb
inc
push
int3
in
aaa
daa
icebp
dec
pop
adc
pop
insb
andb
push
pop
fcomi
mov
insl
lock
pop
inc
sub
ret
imul
jbe
xchg
mov
mov
movsb
cmp
lret
push
lret
jae
fcoms
adc
dec
mov
and
xlat
push
push
xorl
fwait
mov
cmp
sarl
sbb
rcll
dec
sub
cld
pop
jp
push
mov
movsb
shl
jmp
mov
push
jb
add
sub
cmp
clc
enter
lcall
jae
cmp
sub
inc
jge
fwait
xor
sarl
dec
into
and
aam
stos
dec
pusha
mov
lret
cmpsl
imul
jl
xchg
mov
jl
cmp
mov
xor
add
pop
pop
jns
mov
inc
jo
pop
adc
push
mov
test
movsl
inc
sbb
jl
daa
and
mov
and
scas
rcrl
out
js
mov
fisubl
insb
ret
jl
xchg
mov
cwtl
out
test
mov
data16
mov
push
sbb
xor
add
mov
dec
jmp
push
pop
mov
fidivl
add
or
mov
add
fcmovne
mov
dec
xchg
int3
pop
hlt
mov
add
inc
pop
movsb
cmp
imul
and
cld
lea
sub
mov
xchg
cs
aam
pop
jge
cmpl
fcoms
cwtl
cmpsl
lods
cwtl
xchg
aam
xor
push
push
nop
xor
popf
jecxz
js
sbb
enter
pop
clc
int
in
shlb
leave
pop
imul
sub
dec
jg
sub
imul
adc
pop
sbb
push
dec
or
jp
jmp
mov
adc
call
stos
cmp
mov
mov
inc
jle
jae
add
xor
cld
xor
stos
icebp
mov
push
push
pop
cli
jp
fwait
adc
test
inc
xchg
aad
pop
sbb
mov
stc
push
mull
sub
rclb
sahf
mov
inc
or
aam
roll
mov
push
in
push
jl
xchg
mull
in
push
into
ficoml
inc
pop
xlat
movsb
push
addr16
push
iret
and
push
movsb
stc
push
sbb
mov
inc
xor
pop
lods
daa
ljmp
sub
push
adc
pop
lds
mov
and
or
xchg
mov
lods
mov
outsl
stc
outsl
jne
lods
pop
cmp
loope
mov
inc
and
out
fwait
sahf
in
pop
jns
push
nop
xor
dec
test
sbb
cmp
lcall
movsb
js
jmp
movsb
out
sbbl
add
lea
enter
adc
movsb
xor
mov
cs
fstpt
call
cmp
pop
test
lea
sub
mov
dec
lea
aaa
jns
lret
inc
aaa
scas
mov
pop
add
add
adc
jnp
mov
sub
aaa
mov
out
loope
xchg
in
test
sub
push
dec
xor
fnstenv
imul
shrb
addr16
clc
out
mov
into
in
mov
rorl
mov
mov
punpckhwd
xchg
bswap
rolb
fwait
mov
sub
pushf
test
dec
rcrb
out
test
in
out
mov
cmc
push
sub
sbb
push
es
lcall
push
cltd
fwait
sbb
out
pop
add
mov
push
xchg
in
xchg
out
lcall
mov
loop
shrb
imul
out
pop
mov
xorb
mov
mov
loop
cmp
insb
dec
mov
ljmp
lcall
mov
shrb
adc
jo
push
xchg
insb
rcrl
subl
xchg
dec
jle
push
jg
lahf
inc
adc
addb
cmpsb
cmp
push
xlat
je
fcmovnu
es
inc
icebp
inc
or
dec
daa
stos
idivb
mov
jno
cmc
lahf
loop
jno
mov
jae
or
xor
fadds
jb
lods
lcall
add
enter
push
mov
add
push
jp
adc
inc
mov
out
arpl
pop
int3
ss
and
and
xchg
mov
test
pop
push
pop
dec
inc
adc
daa
fcomps
out
sub
cmc
lods
cld
cmp
jl
shrb
add
cs
mov
mov
movsb
nop
outsl
inc
outsl
js
add
int
sbb
mov
std
dec
jb
jbe
popf
addr16
addb
popa
in
sbb
mov
and
test
xchg
in
cmp
lcall
cld
inc
test
pusha
pop
sbb
lds
call
aam
imul
xor
mov
loop
in
mov
mov
andb
cmp
add
dec
divl
scas
loope
dec
dec
xor
push
dec
out
dec
mov
and
push
pop
push
and
mov
or
mov
pop
pop
mov
pop
int
popf
out
sbb
mov
push
add
push
mov
jp
xchg
pop
push
push
fadds
xor
mov
shll
or
adc
inc
outsb
xor
cmp
push
sub
in
test
sahf
pop
xchg
fistpl
dec
pop
xchg
jl
xlat
insl
sub
loope
arpl
jp
pop
fs
jo
nop
pop
adc
cld
add
js
push
push
mov
fisubs
fdivrs
lahf
mov
xor
or
ljmp
and
fistl
icebp
icebp
pushf
xchg
stos
outsb
shll
cmp
sbb
in
imul
sub
fsubrl
nop
test
mov
pop
jae
stos
inc
xchg
dec
push
scas
sbb
adc
repnz
mov
sbb
pop
lea
subps
rcpps
xchg
inc
pop
and
jne
and
dec
xchg
lea
push
push
lea
shlb
adc
ret
and
das
movb
loopne
xchg
pop
dec
pop
divb
popa
and
xchg
dec
pop
mov
lret
mov
xchg
fcmove
mov
leave
iret
xor
stos
lea
pop
pop
cld
or
mov
pop
sub
fcmovu
pop
in
ror
stc
mov
test
or
cmp
loope
sbb
dec
outsl
clc
jne
pop
adc
sti
xchg
stc
and
dec
sub
pop
jnp
mov
mov
pushf
pop
fs
ret
addr16
repz
seta
mov
scas
sbb
dec
out
cmp
mov
add
cmpsl
outsl
imul
mov
repz
dec
fwait
mov
jmp
xchg
mov
cmpsl
or
mov
and
negl
adc
lahf
icebp
mov
notb
out
jg
xchg
and
aaa
cwtl
mov
jbe
stc
fsts
or
aam
out
inc
and
mov
add
cmp
jo
cli
push
xor
adc
mov
fsubl
inc
pop
push
sub
dec
into
stc
add
hlt
xchg
leave
lret
ss
sbb
shll
inc
lods
stos
test
out
pusha
jl
mov
mov
mov
and
pusha
and
cs
popf
pop
call
pop
out
data16
test
frndint
dec
adc
pop
movsb
push
add
call
fisttpl
push
movaps
xchg
add
pop
aam
inc
fcmovnb
or
push
fs
lret
push
push
add
aas
mov
int
adc
inc
into
cltd
flds
jb
cmp
inc
stc
popa
mov
mov
push
movsl
mov
cmc
enter
repz
add
push
fsub
dec
xchg
mov
dec
xchg
mov
scas
inc
push
rclb
inc
sub
bnd
call
mov
cld
out
popa
lret
test
xchg
push
lret
out
add
outsl
mov
sbb
add
shlb
sbb
jbe
mov
shl
mov
aaa
cli
push
mov
ficompl
les
bound
jbe
call
push
lods
sbb
pop
mov
in
cmp
repz
fs
jge
fcomi
mov
pop
out
mov
mov
and
ret
daa
mov
adc
sbb
or
out
jle
aad
out
xchg
popl
jle
and
cmpb
cmpsl
and
lret
pop
jg
dec
jne
insl
shr
mov
mov
fidivrs
sub
mov
or
xchg
movsb
mov
jno
aad
mov
or
jecxz
fsubrp
js
pop
xchg
xchg
sbb
fs
std
mov
psadbw
lahf
xor
test
xlat
mov
inc
out
adc
jge
iret
mov
call
jbe
jl
and
jns
sbb
out
pop
sbb
es
xlat
orb
ss
loop
mov
cs
cmpsb
mov
roll
lahf
mov
xchg
jb
sahf
enter
and
pop
push
rorb
ret
xor
push
gs
aas
out
push
inc
and
das
sub
loope
pop
add
push
mov
lods
sub
in
sub
jb
shll
pop
sarb
xchg
pop
lock
adc
aad
sub
cwtl
mov
xchg
repz
dec
movsb
imul
sub
jns
mov
pop
jecxz
in
jno
dec
mov
push
dec
jmp
std
pop
inc
into
loop
stos
leave
imul
pop
cmp
fsubr
sbb
mov
jmp
ss
sub
dec
daa
xchg
pop
rol
cltd
jmp
or
and
or
dec
xor
movsb
sbb
jns
push
cmp
stc
shll
push
sub
fadd
adc
jecxz
pop
pop
cmpsb
in
es
fstps
addr16
pop
jle
and
mov
fsts
pop
enter
movsl
xchg
cmp
jp
mov
cmp
inc
cli
out
jo
jb
je
sub
adc
sbb
test
dec
incb
jo
repnz
sub
das
push
les
sub
sbb
xchg
pusha
or
mov
fs
fmul
jp
das
int3
fcompl
jp
mov
in
inc
scas
pop
jl
jbe
repz
loopne
push
int
mov
cmp
adc
scas
sbb
testl
inc
mov
icebp
fwait
mov
push
pushf
cmp
jne
test
jge
je
aam
pop
cld
addl
push
sub
pop
clc
xchg
lock
sub
loopne
push
ret
push
bound
sub
and
lods
mov
mov
in
data16
frstor
mov
loope
outsl
add
arpl
add
cmpsl
inc
adc
inc
xor
sbb
loope
dec
push
cli
push
adc
or
adc
in
test
pop
mov
sahf
lahf
dec
ret
iret
xchg
and
jno
push
jge
rorb
mov
stos
out
xchg
daa
inc
test
pop
inc
pop
push
div
lds
and
roll
push
xor
pop
bound
ret
fists
push
xchg
shll
sarb
cmp
push
gs
fwait
out
in
pop
mov
adc
mov
mov
dec
imul
mov
pop
test
push
rorb
shll
mov
das
loope
scas
mov
insb
sub
fmull
mov
addr16
add
mov
stos
sbb
outsl
aas
and
in
scas
int
repz
push
scas
or
mov
mov
mov
fidivl
sub
pop
sub
push
sbb
lahf
cmp
or
jnp
and
lret
in
repz
movsl
orb
mov
ret
lret
fildll
es
mov
xor
je
and
jmp
sbb
sbb
test
loop
and
jbe
inc
addb
cmc
cmp
xchg
or
cmp
movq
push
out
xor
mov
lds
mov
push
pop
mov
mov
out
and
movsb
jg
xchg
imul
adc
scas
add
inc
xchg
jmp
cltd
sbb
mov
lea
popa
roll
mov
push
mov
mov
es
sbb
mov
bound
pop
dec
scas
or
xchg
andb
das
xchg
shll
or
jmp
jp
sub
dec
xchg
arpl
jnp
cltd
sub
xlat
out
mov
adc
into
cmp
push
dec
inc
jno
lahf
mov
xchg
fimuls
ljmp
dec
push
push
test
pusha
pop
dec
adc
mov
pop
push
and
mov
hlt
push
jecxz
or
jge
stos
int
cmp
push
out
outsl
push
lods
rolb
xor
repz
notb
test
cwtl
cwtl
mov
push
test
push
pop
popf
mov
ds
ficoms
pop
aaa
cmp
pop
cmp
push
adc
jmp
cmc
pop
or
mov
jbe
and
sahf
in
sbb
or
or
dec
push
jnp
movsl
cmpsl
xchg
pop
incl
outsl
in
mov
or
sub
push
xchg
mov
sub
dec
cmpb
gs
stos
outsl
sbb
cmpsb
notb
mov
push
shrl
loopne
fsubrl
sahf
adc
xchg
sub
jae
aam
jg
cmp
jmp
int3
inc
mov
fcoms
popf
ss
enter
inc
adc
stos
mov
xchg
arpl
int3
lods
mov
jecxz
mov
sub
sub
push
sbb
cmp
ja
imul
sti
adc
pop
jb
roll
loopne
fwait
xor
dec
faddl
sub
das
mov
inc
ss
adc
xchg
test
cmpl
push
clc
inc
sub
aam
aaa
imul
pushf
add
das
fcomi
mov
mov
shrl
fdivrl
adc
jbe
stos
pop
jl
mov
lret
aad
jb
dec
sub
or
aad
decl
jge
sub
jecxz
cltd
xor
push
mov
xchg
pop
std
insb
jne
repz
mov
cmp
inc
xor
sbb
test
shl
cmp
cmp
mov
arpl
sub
fs
adc
imul
daa
loopne
pop
out
push
jmp
ja
leave
push
les
stos
mov
out
mov
sti
xchg
fs
xchg
cmp
xchg
test
out
int3
jno
cmp
mov
cmp
iret
sub
mov
cmp
jo
push
cmp
repz
or
mov
pop
repz
mov
or
lock
aaa
outsb
leave
cmpsl
shlb
or
dec
xchg
outsb
test
and
bound
xchg
in
adc
xchg
cwtl
sbb
or
test
int
scas
cli
adc
jp
sbb
mov
lret
popa
std
subl
sti
dec
call
push
push
aas
aas
idivl
hlt
dec
and
lods
sbbb
loop
loop
xor
pop
shll
and
mov
fldl
dec
sub
jbe
lret
adc
mov
cmp
xor
js
cmp
push
sub
push
sbb
and
call
adc
movsl
jnp
out
mov
push
stos
xchg
into
jmp
mov
pop
lock
sti
das
dec
aas
push
mov
inc
jge
andl
xchg
les
cmc
push
jae
iret
xchg
mov
pop
mov
mov
bound
mov
pop
cmp
sbb
popf
mov
adc
push
sbb
sbb
stos
popa
push
rcrl
cltd
mov
test
mov
xor
and
js
sbb
dec
aaa
test
pop
jecxz
sbb
jge
xlat
icebp
out
xor
ja
mov
cmp
push
xor
mov
aaa
dec
cmpsw
inc
shll
xor
mov
cld
inc
jecxz
out
mov
xor
dec
inc
push
cmp
ss
les
xor
dec
xor
cmp
test
outsb
xchg
push
mov
test
loop
lods
daa
aas
add
test
pop
push
pop
xor
push
adc
imul
shll
hlt
adc
dec
dec
dec
or
adc
cs
dec
sti
xor
aaa
pop
jo
and
cmpb
inc
sbb
mov
iret
in
cmc
lock
jnp
imul
stc
inc
dec
push
xorps
int
sub
cmpsb
xchg
inc
nop
push
mov
or
jnp
inc
or
push
dec
movl
scas
jecxz
cmpsl
aad
sub
xor
push
stos
cs
inc
pop
testl
mov
push
fsubp
pop
mov
pop
lock
int3
sub
or
pop
scas
xor
mov
and
shl
mov
test
add
jmp
cs
insl
cmpsl
jmp
adc
icebp
xchg
inc
sahf
mov
in
pushl
sub
ds
in
xor
arpl
mov
lret
fld
mov
or
fldl
cmp
daa
mov
ret
sar
rcr
int3
sbb
inc
arpl
xchg
int
inc
or
xlat
ret
mov
dec
popa
fwait
lahf
sahf
or
or
ss
sbb
movsb
inc
data16
sbb
in
cmp
sahf
mov
and
mov
pop
es
nop
pop
pop
dec
test
inc
enter
jo
mov
xor
clc
jne
and
out
movsl
xchg
pop
fwait
rorl
fadds
sbb
sub
and
repz
lret
repz
loopne
lcall
fadds
sarb
cmp
repz
dec
mov
cwtl
pop
push
fnstenv
addr16
sti
push
mov
mov
jbe
orl
push
push
loopne
call
arpl
ds
xchg
jp
lds
push
mov
lds
enter
movsb
jmp
xchg
jmp
push
int
jge
inc
outsl
and
cmp
xchg
das
pop
fcomps
xor
aad
mov
mov
pop
xor
xor
and
or
jle
xor
std
mov
jmp
movsl
out
ds
ss
mov
ja
and
fldl
and
iret
jmp
adcl
cltd
sub
fcomi
daa
mov
fs
xchg
or
loopne
pop
xchg
xchg
add
push
mov
dec
dec
xchg
jge
lea
jae
pop
fwait
dec
mov
cmp
cmc
pushf
aaa
loopne
gs
mov
out
inc
scas
in
mov
mov
int
cmp
xor
adc
dec
mov
xchg
mov
bound
data16
imul
daa
rolb
push
das
push
jl
cwtl
sbb
popa
je
es
loopne
jl
push
push
aam
mov
push
sub
test
test
add
in
ja
ds
xchg
data16
xchg
and
clc
filds
ja
xor
adc
nop
jmp
test
outsl
xchg
mov
adc
cmc
repnz
pusha
je
outsl
add
fs
pushf
movsl
sbb
sub
int3
test
repnz
jp
rolb
ja
loope
jg
pop
lock
les
push
sbb
push
jno
popa
add
sarl
xor
xor
lods
inc
je
pushl
sbb
dec
std
cmpl
pop
jg
pop
imul
mov
shll
in
jle
rorb
jge
jnp
xchg
test
jecxz
or
adc
mov
cmpl
or
adc
pop
mov
scas
aam
sbb
pop
in
addr16
jmp
mov
out
push
cmc
jg
mov
add
jns
and
cs
pop
sbb
shl
pop
lock
adc
outsb
lds
pop
loop
iret
mov
inc
push
loop
adcl
pop
add
cmp
pusha
imull
add
clc
inc
fistpll
cltd
cmpsl
adc
ja
fidivrs
gs
inc
fcompl
mov
pop
push
push
adc
addr16
shrb
cltd
ret
xchg
mov
sahf
addr16
insl
pop
add
pop
or
jg
mov
insl
jne
mov
imul
mov
pop
or
popf
out
into
rol
enter
lahf
loopne
adc
dec
mov
imul
xchg
jno
ja
push
ret
cld
mov
incl
jbe
int
pop
jbe
lret
fstl
mov
sbb
push
mov
xchg
test
hlt
outsb
shlb
xchg
push
mov
inc
movsb
rcr
std
push
sbb
pop
adc
xor
and
mov
fldt
xor
mov
push
mov
jle
fsubs
in
aaa
sbb
push
or
inc
repnz
out
neg
fcmovnb
cld
dec
mov
or
pusha
dec
xorb
push
std
bound
mov
push
loope
aad
in
sub
scas
pop
inc
sbb
and
ja
xor
mov
pop
cltd
aam
mov
push
inc
cwtl
inc
arpl
imul
adc
popf
insl
lahf
mov
dec
daa
hlt
jns
jmp
stos
cmp
mov
inc
mov
stc
fiadds
lock
ret
insb
adc
ficomps
loopne
pop
jne
mov
or
push
jecxz
pushl
xchg
push
fdivl
ja
in
or
cld
xchg
lcall
adc
cltd
shll
xchg
and
lret
addr16
add
fldl
adc
loopne
jmp
pop
mov
jae
loopne
mov
dec
out
sub
stos
daa
dec
fwait
std
dec
jbe
or
jb
mov
fidivrl
aas
xchg
mov
sahf
mov
push
add
push
inc
dec
push
movl
mov
sub
ss
push
adc
mov
js
cmpsb
addr16
fisttpl
fwait
pop
xchg
inc
jmp
sub
push
popf
cmp
adc
add
xor
cwtl
lret
inc
sbb
cwtl
sub
out
xchg
xchg
add
shrl
lock
and
cmp
rcll
and
xchg
adc
add
xchg
push
mov
lods
int
mov
ljmp
sub
xchg
int
icebp
push
insb
cmp
icebp
loop
or
int3
out
repnz
mov
test
mov
mov
cmp
gs
divl
andb
pop
jl
cmp
mov
mov
repz
nop
jge
adc
aaa
xor
popf
mov
xchg
test
lahf
fmuls
jmp
fidivl
stos
xchg
mov
aad
and
je
shlb
mov
scas
sub
push
rcl
cltd
xor
mov
daa
mov
xor
mov
movsb
sti
push
test
mov
stos
aaa
fcomps
push
or
aam
mov
and
stos
mov
adc
adc
sbb
into
mov
xchg
movsl
fbld
sub
mov
pop
inc
xor
int
rolb
pop
iret
pop
cmp
jmp
xchg
and
or
repnz
jmp
enter
and
stos
mov
push
push
shlb
dec
mov
loope
cmp
int3
dec
mov
out
adc
jb
sar
sahf
andl
dec
adc
sahf
push
push
shrb
popa
aaa
pusha
or
xor
jb
push
out
clc
daa
lds
mov
and
mov
add
adc
inc
jb
cmc
add
sbb
pop
push
pop
imulb
popa
lea
popf
inc
jns
adc
xor
ror
cwtl
iret
fildll
fstp
pushl
mov
out
xchg
push
mov
shrb
and
aas
cmp
adcb
jns
aas
shr
out
xchg
mov
notb
inc
ljmp
adc
pop
push
daa
cmc
fs
pop
mov
xlat
push
cmp
mov
sub
scas
adc
push
ret
pop
push
mov
mov
xlat
mov
pop
pusha
push
sub
xchg
aad
cwtl
mov
and
mov
das
aaa
mov
adc
pop
push
icebp
adc
std
out
lcall
push
jnp
out
cmp
dec
subl
int3
dec
insl
pusha
outsl
loop
push
clc
push
mov
cmc
insb
or
cld
xor
push
mov
ret
jle
add
div
test
bound
aaa
lret
cwtl
mov
push
xor
rolb
cmp
fisubrl
mov
mov
sbb
or
clc
pop
ds
aaa
fadds
push
jg
dec
or
or
enter
xor
push
pop
mov
jmp
xchg
jge
xlat
cmp
pushw
iret
imul
pop
mov
imul
sahf
add
mov
in
ret
jge
lea
lahf
dec
mov
xor
arpl
pop
pop
push
fdivrs
sahf
inc
xor
outsb
dec
pop
into
gs
cli
inc
inc
jge
push
mov
cltd
cmpsb
push
fisubrs
lea
movq
stos
cmp
mov
and
push
push
xor
and
sub
jns
pop
in
sub
les
xorl
pop
pop
or
pop
adc
out
xor
clc
outsb
sub
sub
out
jne
xchg
je
and
ret
mov
mov
cmp
les
push
cltd
lods
aam
dec
cmp
cmp
xchg
mov
fldt
out
pop
andb
jge
mov
push
leave
movsl
cs
pop
sbb
xor
sub
or
cwtl
pushf
dec
xchg
mov
mov
cmp
lcall
stc
ja
andb
jb
loopne
outsb
idiv
adc
or
sahf
mov
pop
setbe
dec
mov
aaa
or
out
movsl
ds
in
push
test
ja
lds
test
ja
push
xor
fnstcw
icebp
jnp
call
sub
sub
cwtl
addr16
inc
jnp
jne
idivb
loopne
filds
xchg
aas
in
xor
test
stos
adc
mov
pop
lock
jge
sub
mov
sub
sbb
pusha
aaa
xlat
push
scas
mov
xchg
push
and
das
outsl
ret
es
cmp
dec
ss
lahf
xchg
sbb
out
jg
mov
mov
cmp
mov
mov
xchg
movsl
pop
dec
pop
dec
mov
sahf
loope
xchg
insl
repz
lret
imul
stos
sub
icebp
mov
xor
adc
loopne
pop
or
mov
or
test
or
mov
pop
mov
xchg
aas
jle
pushf
outsl
pop
lock
inc
ss
shll
add
xchg
das
mov
mov
adc
jbe
xor
adc
sub
xchg
cmp
popa
cmpsl
or
mov
subb
inc
in
cmpsl
xchg
xchg
ss
out
xchg
stos
insb
mov
push
xchg
mov
mov
push
and
mov
out
ljmp
add
cmpsb
adc
cmpsl
js
je
lods
hlt
xchg
bound
movsb
pop
in
cmp
and
cmpsb
std
dec
int3
or
popf
push
shrl
fdivrl
in
ds
jb
imul
insl
mov
mov
mov
outsl
stos
push
sub
aad
icebp
movsl
push
pop
and
cmp
fsubrl
sti
hlt
push
test
data16
adc
test
aad
mov
bound
add
movsl
ficoms
cmpsb
jmp
pop
xor
push
popf
and
inc
arpl
pop
sub
or
add
icebp
dec
jo
fiaddl
std
and
push
push
push
mov
add
jne
jne
sqrtps
adc
xchg
shr
jne
enter
jl
mov
pop
mov
filds
dec
rcl
idiv
dec
adc
xchg
jmp
and
js
pop
sbb
ret
mov
xor
ror
and
jne
adc
xchg
fnstsw
and
stc
cmc
fcoml
gs
mov
mov
and
inc
sahf
jns
int3
lret
and
push
sub
ds
mov
arpl
daa
mov
push
in
xchg
leave
fldcw
adc
jp
jmp
push
dec
adc
or
lods
xchg
test
adc
test
dec
call
mov
and
pop
jmp
inc
jnp
movsl
iret
aam
jnp
imul
sub
mov
inc
mov
xchg
leave
ficoml
cld
test
lcall
mov
in
in
pusha
jno
push
into
adc
pop
or
cld
gs
les
cmp
jle
cmc
add
cmpsl
shrb
mov
push
xor
lahf
push
inc
clc
jne
rcrl
push
cmp
in
lds
mov
mov
mov
cmpsl
les
orl
push
jl
pushf
jns
pushf
je
cwtl
jno
xor
in
or
jbe
arpl
inc
cmp
int
decl
ja
push
fcoml
mov
inc
jp
or
jo
push
mov
sbb
xlat
add
dec
dec
pusha
jl
adc
xor
sub
dec
shr
mov
mov
out
cmc
mov
es
std
enter
cli
lods
jno
sub
adc
rolb
fidivs
out
sbb
cmp
fmuls
das
xchg
ss
pop
rcrl
js
pop
and
mov
or
push
hlt
pop
in
inc
loope
xchg
movsb
push
sbb
xchg
add
adc
sbb
loopne
aad
sti
push
cmp
jecxz
gs
xchg
shl
mov
shr
xor
cmp
aad
ljmp
adc
dec
rorl
jle
mov
shrb
push
decb
pop
mov
nop
pop
mov
jl
or
push
xor
movsl
icebp
xchg
mov
mov
fxch
aaa
aad
sub
pop
gs
call
lock
call
test
shl
xor
cld
lods
iret
dec
jnp
push
adc
ror
adc
mov
mov
mov
and
xor
imul
test
mov
mov
pop
jge
cwtl
push
ds
inc
in
std
cmpsb
dec
cwtl
repnz
lods
inc
sbb
push
and
or
xchg
shrb
fdivl
xor
inc
outsb
nop
arpl
lret
xchg
int
sarl
stos
rol
test
xlat
push
loop
sub
in
and
sub
dec
test
in
repnz
inc
cmc
adc
push
pop
jae
and
cli
lret
jnp
shrb
cmp
push
sbb
fldenv
sub
loopne
daa
cmp
negb
sti
mov
arpl
pop
or
xchg
lret
in
js
mov
cmpsl
mov
rolb
dec
jnp
out
fwait
ljmp
lret
dec
jg
or
ds
sbbl
or
dec
outsl
insl
and
fisttpll
jb
roll
sub
repz
cmc
dec
add
mov
dec
mov
push
xlat
je
bound
adc
push
lea
inc
fsubs
pop
out
jbe
xlat
jno
xor
testl
aaa
sti
xchg
and
jmp
pop
sub
xor
and
popa
mov
enter
mov
lret
mov
adc
jbe
es
adc
rcrb
int
out
xor
dec
mov
negb
adc
outsb
fiadds
mov
pop
mov
jno
pop
in
push
lods
adc
nop
inc
and
xor
or
mov
movsb
cmpsb
mov
stos
cmp
roll
enter
mov
dec
sahf
test
lret
jl
mov
jmp
jmp
subb
sub
push
push
or
out
sub
jg
pop
lret
sbb
cwtl
pop
and
sbb
imul
or
test
test
push
leave
bound
fdivl
insl
aad
mov
orl
jmp
lds
sub
sub
or
jecxz
jmp
jl
sub
outsb
ljmp
inc
add
aas
ret
enter
inc
pop
lods
les
jbe
lods
test
inc
dec
xchg
cmpsb
orb
insb
mov
mov
int
sbb
lcall
sub
fbstp
dec
jmp
lods
loop
and
xchg
lods
xchg
lea
pop
mov
dec
std
push
cmp
ret
adc
mov
sarb
push
xor
lahf
dec
xor
cmpsb
call
mov
scas
cli
test
nop
lahf
rep
addb
and
sbb
stos
pop
xor
adc
jae
cmp
mov
dec
add
xor
das
lods
pop
dec
push
pushf
add
jle
in
dec
push
jp
mov
movsb
xor
sbb
lods
push
fucomp
repz
cmp
mov
mov
add
popa
add
popa
insb
rcrl
adc
imul
mov
dec
lret
dec
jmp
pop
xor
fs
testl
imul
sahf
jns
pop
jno
aam
orb
mov
pop
sbb
mov
cmp
dec
ss
pop
xor
pop
adc
xor
inc
dec
push
adc
ja
jle
ret
pop
mov
test
adcb
cld
xchg
imul
mov
imul
dec
subb
or
push
cmc
pop
xchg
sbb
sbbb
outsb
or
jae
mov
xchg
or
mov
push
inc
sub
scas
mov
cmp
andl
lods
in
leave
mov
add
add
jbe
adc
test
jbe
xor
hlt
and
lods
push
shll
dec
lea
mov
push
jmp
pop
js
fmulp
mov
sahf
xor
add
and
aaa
cmp
icebp
in
cmp
pop
outsb
xchg
dec
test
push
jbe
add
fwait
out
data16
dec
mov
fnstenv
fcmovnb
adc
repz
sub
test
and
je
movsb
stc
mov
adc
pop
and
test
shll
ret
fsubl
inc
movsl
leave
pushf
repz
cs
int3
daa
dec
test
cmpsl
pop
mov
cmc
dec
loope
fisttpll
pop
xor
and
and
sub
xchg
insl
cmp
cmp
ds
stc
test
popf
mov
mov
sarl
nop
xor
mov
scas
mov
leave
addr16
push
dec
test
mov
adc
push
jp
shrl
xchg
cmp
xchg
inc
scas
push
push
sbb
xchg
lods
or
stos
shl
mov
jno
xchg
cmp
push
out
mov
pop
mov
pushf
mov
lea
ficoms
sub
xchg
int
mov
adc
jge
jmp
sub
lock
cmp
and
std
das
test
sub
xchg
sbb
xor
sub
aam
sbb
sbb
xchg
ds
xor
popa
mov
call
push
mov
frstor
cmp
mov
mov
in
cltd
subl
jno
mov
add
sbb
popf
pop
dec
mov
jg
cmp
gs
lret
xchg
pop
sahf
cmp
mov
dec
push
dec
pusha
add
clc
mov
jp
out
sub
int3
popa
lods
pop
jle
outsl
aaa
addl
movsb
adc
push
xor
push
mov
add
mov
cmp
and
lods
sbb
adc
add
std
mov
ret
pop
dec
adc
mov
mov
ss
dec
imul
fstpt
ficoms
cmp
leave
or
adc
push
inc
jle
sbb
jecxz
dec
sahf
iret
into
fiadds
hlt
dec
jbe
inc
mov
loop
cmpsb
rolb
aas
imull
mov
fdivrl
scas
sub
fsubl
pop
aas
mov
mov
imul
rcll
nop
cmp
cwtl
sub
pop
in
nop
enter
es
mov
pop
cmpsb
aad
mov
mov
xor
sub
inc
arpl
push
add
imul
nop
arpl
dec
lcall
scas
jp
xchg
mov
adc
cmpsb
mov
inc
mov
test
into
mov
enter
gs
sti
out
or
int3
andl
stos
mov
mov
mov
mov
pushf
pop
push
push
jne
adc
xor
adc
ljmp
push
stos
fxch
xor
outsl
mov
pusha
push
push
dec
sub
scas
dec
mov
cmp
enter
adc
icebp
pop
lcall
sbb
add
cltd
dec
dec
or
dec
mov
inc
dec
xchg
lock
das
adc
mov
and
repz
xor
in
sbb
gs
push
movsl
and
and
out
push
xor
lea
icebp
aaa
dec
fsubrl
add
jl
vshufpd
mov
ds
lea
dec
pop
sbb
data16
mov
and
into
and
lret
ret
into
enter
sbbl
dec
scas
jae
add
adc
inc
stos
in
and
int
sbbl
loop
in
inc
sub
push
sbb
cwtl
mov
inc
pop
cmp
pushf
scas
in
dec
jg
ffree
shl
pop
add
jae
ljmp
mov
aas
incb
push
cmp
sbb
pusha
and
or
pop
push
stos
xchg
dec
ljmp
es
push
sbb
iret
xor
mov
in
or
jmp
cwtl
add
pop
and
fcmovb
mov
xchg
lahf
mov
movsl
jbe
pushf
mov
mov
mov
test
int
xchg
int
aaa
daa
sub
sub
imul
mov
xchg
pop
loope
mov
subl
imul
sub
or
hlt
adc
ja
inc
or
xorb
sub
negb
idivl
xor
mov
inc
add
or
xor
mov
sti
adc
xor
mov
test
scas
aaa
push
pop
outsb
pop
pop
jp
jae
movsl
and
rcr
imul
retw
jno
push
push
sub
out
pop
clc
mov
sbb
xchg
jbe
cmp
inc
xor
jne
sbb
jbe
pop
je
sti
icebp
cmp
arpl
ss
cmp
sbb
jle
adc
jnp
or
jg
notl
ss
sbb
and
cmp
xor
adc
cmp
ja
jl
cmp
aam
int3
sti
in
mov
outsb
mov
in
xchg
inc
cli
and
push
adc
xlat
inc
inc
mov
lds
daa
das
sbb
cwtl
outsb
push
movsl
or
add
pop
inc
fisttpll
lea
jmp
jmp
cmp
cltd
mov
popf
aad
stos
mov
pop
out
cmpsb
fimuls
mov
int3
das
rorl
add
test
ret
stos
dec
and
mov
imul
nop
stc
js
adc
repz
jb
pop
or
pop
sub
cltd
xor
int3
ficoml
gs
jmp
push
xchg
lods
jb
xchg
or
sub
cmp
lock
out
mov
push
test
es
push
push
mov
pop
dec
jno
loop
lea
call
jo
cmp
in
imul
lcall
fdivrp
xchg
jae
jle
cs
xchg
repnz
and
mov
in
sub
pop
rorb
testb
in
xchg
test
and
leave
shll
repnz
stos
push
aaa
xchg
jecxz
inc
flds
les
nop
cld
inc
jp
pop
jo
mov
push
cwtl
jno
mov
lds
fbld
scas
test
cltd
mov
fbld
std
addr16
fs
cmp
fcmovne
xchg
movsl
sub
les
add
cwtl
sub
pop
xchg
or
sub
jge
ljmp
stos
add
mov
add
shll
mov
add
pusha
xchg
inc
jnp
rcrb
leave
int3
mov
lret
sti
add
shl
sbb
movsl
sub
call
mov
or
cmpsl
jmp
lret
dec
adc
sub
cltd
or
or
cmp
add
xor
xor
adc
inc
test
inc
mov
sbbb
mov
insb
mov
mov
mov
push
mov
call
xor
clc
sarl
jg
cmp
push
incb
ret
fndisi(8087
enter
lret
loop,pt
scas
push
inc
in
pop
sahf
adc
or
push
jne
inc
pop
sub
nop
add
ret
fsub
stos
xlat
daa
aad
into
lret
leave
sahf
push
mov
xor
gs
imul
xchg
cmp
popf
and
or
lea
data16
pop
ja
mov
sahf
pop
push
ret
pop
xlat
daa
add
push
js
hlt
cmp
ja
imul
rolb
out
sub
mov
add
and
lods
sti
mov
cmpsl
push
fdiv
dec
inc
cltd
popa
fadds
jmp
pop
mov
mov
inc
rorl
in
or
pop
sub
adc
mov
gs
inc
adc
sub
add
pop
inc
in
aam
scas
xor
testb
cmp
or
mov
sub
enter
mov
cmp
lods
insl
inc
push
repnz
pop
jge
hlt
push
shrb
and
mov
jo
scas
sti
ret
hlt
cmp
push
icebp
fs
inc
mov
mov
push
add
stos
sub
or
adc
mov
fidivs
mov
cmp
xchg
pusha
jmp
mov
lahf
sbb
mov
lcall
in
test
into
mov
inc
cmp
cwtl
jno,pn
sbb
push
or
hlt
inc
hlt
bound
movsb
jp
jp
push
sbb
test
imul
out
dec
xchg
inc
or
mov
pop
mov
lods
cmp
pop
xor
dec
lret
sti
insl
xchg
mov
xchg
fnsave
inc
movsb
and
imul
mov
in
pop
pop
imul
imul
xchg
xor
cmp
cmp
or
out
push
imul
lret
or
mov
pop
dec
mov
push
ret
rolb
jmp
mov
dec
lods
notl
xchg
adc
test
repz
mov
movsb
iret
imul
push
rorl
xchg
and
ret
testb
inc
arpl
cmp
lret
mov
loope
adc
push
inc
pop
fcoml
or
push
push
inc
mov
aas
push
mov
call
mov
mov
and
out
ja
fwait
dec
outsl
call
inc
or
test
add
lds
test
inc
je
jo
jbe
insb
idivb
lret
jno
lret
or
push
fwait
sub
push
repz
mov
lret
mov
xchg
fcmove
ret
cmc
loop
add
insl
mov
mov
jb
cmc
or
and
data16
gs
mov
xchg
bound
jne
lods
neg
sbb
inc
es
cmp
daa
push
xchg
sub
xchg
sub
fisubs
das
mov
cmp
test
loopne
cli
out
mov
jl
std
mov
or
dec
ficomps
negb
add
daa
mov
lock
ret
inc
lcall
cmpsl
xchg
scas
cmpsb
ljmp
test
mov
pop
dec
popf
sub
xor
cmp
xor
test
push
and
cmp
inc
dec
sbb
xor
ss
cmp
leave
inc
stos
or
lock
sub
and
call
sbb
imull
and
int3
daa
lret
xchg
cld
movsl
in
push
inc
icebp
xchg
and
out
fsubrs
push
mov
out
cmpsl
mov
sahf
ret
push
dec
imul
adc
xchg
xor
cmp
sub
xchg
cmpl
mul
pop
call
add
push
jnp
dec
movsb
cld
cmp
cmp
lahf
jb
cmc
push
push
mov
insb
jmp
imul
cmp
cmp
sub
adc
xorb
aad
xlat
pop
jno
cwtl
sub
in
adc
sti
mov
sarl
dec
pop
out
test
ret
pop
or
incl
push
and
scas
xchg
mov
cld
pop
mov
sub
add
xor
lcall
mov
mov
int3
inc
bound
push
fs
arpl
movsb
mov
aas
lahf
jmp
es
sbb
xchg
orl
ds
pushf
add
out
mov
sti
mov
pop
sub
in
xor
pushf
outsl
sbb
loope
je
mov
pop
out
jmp
xor
sbbb
sub
cmp
cltd
cmpsb
jecxz
push
fstpt
inc
loopne
ftst
pop
pop
test
inc
cmp
mov
pop
xchg
add
fcmovbe
sbb
xor
and
push
add
sub
mov
scas
jg
or
in
movsb
ds
xchg
hlt
or
movsl
cmp
shrb
sub
ret
xor
mov
sbb
xor
mov
push
notl
jne
dec
inc
mov
movsl
adc
and
dec
imul
adc
enter
add
mov
add
insl
ret
or
xor
xchg
pop
and
sahf
mov
jbe
pop
dec
inc
mov
fldcw
and
add
repnz
jno,pn
ret
subl
test
xor
add
add
test
stc
add
mov
clc
pop
push
mov
cld
lods
call
push
stos
in
out
dec
push
in
in
test
jmp
in
hlt
adc
jp
push
stos
rcr
xor
mov
lcall
inc
xchg
test
mov
js
repnz
inc
mov
sub
rolb
sbb
jg
in
std
lea
push
jno
leave
repz
inc
in
cmpsl
jl
inc
inc
out
jle
les
orl
out
rorb
mov
sar
sbb
sub
lcall
cld
or
in
out
fnstcw
sbb
or
push
or
mov
xchg
out
popa
mov
daa
sarb
jbe
xor
rorb
nop
arpl
gs
jl
cmp
mov
push
shrd
nop
icebp
test
push
and
mov
mov
mov
out
mov
mov
jl
mov
and
bound
push
mov
movsb
cmp
jg
adc
aaa
xchg
xor
cltd
cltd
lea
and
or
jne
mov
enter
dec
xchg
fdivp
push
mov
mov
mov
jb
cltd
sbbl
jle
rcrl
dec
sahf
sbb
icebp
and
sub
hlt
pop
mov
popf
jl
push
bound
dec
adc
sti
mov
dec
cmp
lds
fdivl
jecxz
rcrl
outsb
pop
movsl
push
and
jp
push
std
dec
jge
movsb
in
and
ret
fcmove
out
stos
add
mov
mov
cmp
rcrl
insb
js
pop
add
in
jp
push
popa
or
and
addr16
push
movsl
mov
out
mov
push
xchg
loop
lahf
pop
mov
daa
testb
out
inc
sbb
cmp
lock
mov
bound
mov
inc
cli
mov
xchg
pop
sti
sbb
push
pusha
or
xchg
call
or
pslld
aaa
cwtl
jbe
xchg
orb
sub
sub
mulb
dec
xchg
lret
or
pusha
insl
pop
add
bound
mov
mov
cmc
bswap
sub
inc
fimull
call
inc
out
pop
push
fdivrs
mov
adc
cltd
in
sti
pop
pop
mov
dec
jmp
repz
jmp
andb
xchg
aaa
in
scas
push
or
imul
sbb
inc
movsl
mov
sti
xor
lret
or
andl
cli
inc
gs
cwtl
push
or
mov
dec
sti
sub
jne
insl
imul
adcb
scas
jb
and
lods
xor
leave
or
mov
sbb
add
adc
and
jg
adc
and
push
or
adc
lds
out
pop
xchg
stos
and
sbb
inc
cli
rcll
mov
inc
adc
xchg
or
sub
imul
aaa
adc
push
xor
stos
xlat
mov
pop
dec
or
xchg
les
jg
js
out
mov
cwtl
jne
or
add
mov
into
loopne
nop
cmp
mov
fidivrs
pop
cmp
xor
inc
popf
sub
cmp
leave
icebp
rorb
sub
sub
inc
nop
cli
insb
or
inc
out
filds
imul
dec
sub
xchg
test
xchg
stos
xchg
js
mov
inc
and
movsl
loop
dec
sub
inc
dec
shll
mov
dec
sbb
out
mov
call
addl
nop
push
pushf
pop
pop
mov
int
add
in
stos
xchg
cmc
mov
aad
in
mov
push
cld
and
stos
or
test
or
sbb
fdivp
sbb
mov
mov
test
pop
and
sbb
or
lods
xchg
mov
jbe
icebp
mov
mov
or
out
inc
xchg
adc
cmpsb
mov
push
dec
pop
das
pop
imul
mov
es
mov
fcomps
sub
jg
cmc
gs
or
arpl
push
mov
mov
lock
inc
call
rcrb
and
loop
subb
mov
insb
lock
mov
jnp
dec
andl
adc
mov
mov
enter
imul
mov
pop
inc
gs
subb
iret
or
insl
push
push
jmp
lock
fldl
and
and
inc
scas
mov
dec
xchg
xlat
adc
cmpsl
dec
push
and
add
pop
push
xor
dec
pop
fmull
xor
add
bound
add
cwtl
in
jne
add
aad
aam
cli
lock
jo
dec
out
fsubrl
dec
push
enter
lods
cmp
ss
pop
imul
subb
pushf
lock
or
rcrl
xchg
jbe
or
mov
in
std
mov
andb
test
add
push
imul
dec
mov
or
xchg
pop
popl
addr16
aas
in
or
cmp
mov
outsb
mov
mov
cmp
out
jecxz
inc
aam
push
add
jne
push
dec
dec
inc
mov
out
xchg
mov
subl
dec
and
push
dec
push
and
jne
mov
mov
cmp
or
pop
push
push
fwait
ret
push
ja
test
filds
push
mov
xchg
les
lods
mov
sbb
lock
test
sub
loopne
movsb
mov
push
xchg
scas
pcmpgtb
test
mov
xchg
cmp
mov
je
shl
and
in
mov
mov
lret
cmp
mov
ja
movsb
ja
sbb
lea
jbe
iret
jnp
xlat
xlat
push
mov
jae
clc
mov
sbb
push
jo
not
ss
clc
js
xor
mov
and
sbb
rorl
and
addr16
or
scas
add
pop
xchg
movsl
cmp
out
push
cmp
mov
es
mov
jne
push
loopne
push
cmpsl
rcrb
mov
push
into
das
pop
jmp
je
sbb
pop
stc
ltr
jbe
pop
push
hlt
or
mov
out
iret
and
xchg
lock
or
aaa
cld
lahf
repz
inc
jle
sub
les
sub
fstp
lahf
aad
jmp
jmp
mov
insb
dec
daa
jmp
jmp
add
pop
push
loope
jns
pop
mov
lcall
mov
push
push
out
add
pop
xor
das
insb
and
movsl
jle
cmc
imul
insl
xor
mov
adc
mov
repz
mov
mov
push
xor
fsubrs
mov
clc
add
or
or
sbb
xor
inc
lret
jp
adc
test
sub
cmp
bound
scas
dec
mov
pop
inc
dec
repnz
jb
jl
push
jne
inc
push
fldcw
outsl
inc
out
pminsw
jg
sarb
in
add
outsl
and
inc
pop
jge
xor
in
cmpsb
out
and
inc
lret
ljmp
jge
cli
jo
outsb
test
scas
stos
cld
mov
test
iret
fstpl
mov
sbb
inc
test
es
sub
and
xacquire
adc
int
fwait
stos
fcoms
adc
inc
out
pusha
sub
fld
stc
mov
cld
stos
push
pusha
jle
test
pop
mov
repnz
cmpsb
insb
and
adc
stc
lock
dec
das
mov
lahf
jbe
pop
filds
mov
loop
push
js
in
mov
pop
pop
xor
out
xor
xchg
in
lcall
sahf
inc
cltd
fiadds
push
les
jbe
jne
xchg
and
aas
sbb
xchg
dec
xchg
mov
nop
insb
xchg
xlat
cld
and
test
pusha
inc
xchg
out
mov
jge
or
dec
imul
data16
dec
xchg
hlt
fstps
fucom
ficoml
lods
add
inc
sub
sahf
repz
xchg
and
aam
sub
jno
mov
sbb
ret
out
mov
push
fisubl
adc
or
dec
jge
mov
lret
push
adc
jo
fisttps
inc
sbb
push
mov
inc
xchg
dec
jle
clc
mov
shlb
hlt
test
hlt
fdivrs
mov
mov
in
cmp
fneni(8087
fdivrl
icebp
lret
repz
jg
out
outsl
xor
jno
fs
adc
jge
push
scas
jae
negl
push
daa
in
jae
daa
xlat
dec
fwait
sbb
mov
adc
jbe
and
and
testl
jne
movsb
cmp
dec
and
push
jge
aas
es
addb
inc
lea
leave
and
xor
test
jno
jno
sub
mov
fsubrl
or
pop
decb
lret
add
pop
pop
cmp
movsb
dec
jae
shl
xchg
mov
out
scas
repz
and
mov
aaa
inc
dec
jg
jp
jmp
push
ss
scas
scas
pop
xchg
pushf
into
sbb
cli
xor
iret
js
xchg
mov
je
mov
push
push
jg
jl
leave
out
test
imul
inc
xor
testb
jg
xchg
lods
jns
and
sbb
mov
pop
in
hlt
mov
sbb
cmpsl
and
mull
mov
mov
pop
push
mov
jmp
jl
lea
inc
push
jns
enter
sbb
pusha
lahf
fsubrs
cld
cmp
lods
sub
sbb
pop
test
mov
jne
out
dec
jecxz
cmp
clc
add
das
cwtl
lods
adc
xor
mov
mov
fs
sbb
mov
push
dec
add
xor
inc
cmpsl
mov
iret
push
es
in
fs
xacquire
mov
pop
or
push
inc
mov
cltd
aaa
pop
movsb
xchg
ret
fadds
fwait
hlt
out
xchg
sub
mov
mov
imul
lds
in
sub
clc
lods
sub
cld
and
cmp
xchg
nop
cmp
push
dec
lea
out
leave
out
push
cmp
push
cmp
xchg
pop
jno
cmpsb
or
xor
xchg
sahf
and
fistl
icebp
or
mov
lock
into
add
dec
and
bound
mov
xor
shl
jl
add
inc
xlat
and
cs
mov
sbb
movl
add
faddl
inc
psrld
inc
idivl
ret
and
xchg
ja
or
push
jp
pop
xchg
es
test
ret
pop
in
jge
sbb
and
les
inc
imul
scas
pop
mov
mov
push
andl
jmp
xor
int3
incb
or
mov
xchg
cmpsl
mov
aaa
iret
adc
out
and
aaa
nop
xor
push
mov
mov
into
sub
lret
das
mov
ficomps
repz
jl
and
xchg
mov
loopne
cmp
sub
mov
push
push
movsl
loope
fnstenv
dec
sahf
push
ds
dec
inc
xchg
je
lds
mov
dec
jo
lock
push
stos
roll
sbb
bound
inc
add
mov
or
addb
stc
add
shl
out
mov
push
jb
stos
sbb
and
aad
cmp
cs
mov
sti
mov
and
gs
out
add
cltd
sub
adc
sbb
sbb
xor
inc
mov
pop
daa
lret
push
fwait
out
outsl
pusha
add
jl
sbb
xor
mov
aas
xchg
aad
dec
in
mov
fmull
sti
lods
sbb
test
stc
inc
sbb
mov
pop
mov
push
pop
sbb
pusha
fcomps
test
or
lock
out
inc
fs
sub
leave
jp
mov
adc
jecxz
push
lret
imul
repnz
mov
int
fstps
arpl
test
or
dec
mov
mov
daa
insl
mov
int3
out
pop
icebp
pop
mov
daa
mov
int3
inc
mov
les
jle
test
lahf
pop
inc
stos
jns
insb
inc
nop
sub
mov
xchg
inc
fldt
icebp
mov
cmpl
dec
push
push
out
mov
test
out
pop
sbb
and
xor
cli
fld
mov
shlb
ljmp
push
cwtl
pop
fwait
or
mov
sbb
fbstp
jmp
mov
dec
adc
cs
pop
adc
icebp
adc
sbb
je
dec
lcall
fidivl
add
adc
addr16
mov
sti
out
jae
pop
fwait
out
fnsave
loopne
dec
xor
inc
adcl
fs
call
inc
xor
fsubs
inc
xor
mov
fwait
jbe
int3
push
inc
outsb
push
add
add
xor
out
add
or
xchg
out
push
mov
jl
test
mov
adc
test
xchg
cmpsb
pop
mov
dec
mov
fidivs
xchg
push
sbb
inc
xor
jmp
push
adc
mov
inc
shrl
dec
imul
and
punpckldq
cmp
loope
dec
jge
aad
sub
mov
fmuls
loopne
jmp
xchg
test
sti
push
fidivs
mov
sbb
dec
fnstenv
push
mov
xor
push
in
jge
dec
out
jmp
cmp
sub
dec
pop
mov
inc
or
sahf
dec
jge
mov
xorl
jae
mov
jge
movsl
push
sub
mov
int
dec
iret
adc
lret
dec
mov
aam
sbb
xchg
lock
adc
mov
insb
push
xor
ds
cmp
xor
int3
jno
cmc
sub
dec
insb
xor
loop
and
lock
adc
repz
jmp
scas
dec
sti
push
mov
xchg
cmp
lds
into
clc
sub
xchg
mov
out
dec
test
or
test
loopne
push
and
call
addr16
push
mov
in
mov
and
xlat
dec
lea
sub
mov
iret
aas
out
inc
addr16
inc
and
aaa
cmp
adc
cmc
test
fwait
addr16
xchg
and
cli
fidivrs
push
pop
xor
push
hlt
sub
add
push
in
cs
add
xchg
sbb
jnp
mov
loopne
imul
out
push
push
mov
xchg
ret
popf
scas
sbbl
jbe
cmp
lods
adc
sarb
cmp
fwait
push
test
jle
je
imul
sub
daa
test
and
decl
fstl
jmp
inc
ds
sub
jecxz
sub
cmp
push
mov
jbe
imul
scas
bts
imul
push
nop
jmp
jecxz
pop
fisubrl
sub
roll
ds
stc
dec
stc
add
add
inc
sbb
cmp
fcomi
sbb
out
test
je
ljmp
and
out
pop
stos
pop
iret
jl
cmpsb
inc
stos
shrl
xlat
xchg
sbb
and
xor
in
je
mov
rclb
jo
stos
xchg
xor
cmpsb
ss
addr16
mov
xor
pushf
mov
ret
aaa
xchg
push
leave
rolb
mov
sti
call
add
jno
jo
and
or
lods
and
jo
scas
dec
imul
xchg
and
enter
in
outsb
pushl
adc
ror
jnp
push
flds
jmp
dec
sub
clc
xchg
loopne
in
pop
test
arpl
mov
ret
mov
std
xchg
jecxz
movsb
push
es
daa
fdivl
dec
sbb
sahf
fdiv
nop
dec
pusha
push
rcll
sbb
mov
xor
ret
das
lcall
sbb
int
fistpll
dec
leave
imul
scas
pop
ret
sbbb
mov
test
leave
subb
leave
inc
int
xchg
inc
lods
adc
dec
nop
stos
cmpsl
jo
jge
sub
mov
xor
ja
stos
fidivrl
insl
arpl
dec
push
jmp
cmc
arpl
jb
inc
daa
or
jo
push
in
cwtl
fistpll
arpl
push
dec
in
es
aad
lret
cmpsb
cs
ret
jmp
outsb
fwait
xor
xlat
sbb
int3
mov
cmpsl
cli
sub
xor
loope
jnp
sub
jnp
mov
add
push
add
bound
lds
sub
dec
nop
jae
cmp
std
sti
add
mov
pop
dec
stos
jecxz
xchg
bound
jle
int3
xor
and
insb
scas
push
fbstp
push
mov
loop
dec
imul
mov
shrl
dec
cmp
gs
pop
mov
adc
mov
adc
dec
xchg
enter
push
sub
cmp
sti
outsb
or
jp
imul
sub
inc
jg
pop
imul
jge
cmc
popa
mov
in
fmul
xchg
push
mov
repz
or
sahf
aaa
loopne
adc
stc
jmp
aad
in
iret
movsb
out
fwait
push
scas
pop
movsl
and
or
stos
mov
in
mov
inc
cmp
dec
les
popf
fcmovu
les
data16
push
sbb
mov
pop
inc
mov
xchg
out
loopne
sarl
mov
cmpsb
call
mov
out
insl
mov
fisttpl
xor
aas
cmp
in
scas
ljmp
sub
cmp
jno
and
cmc
inc
pushf
lods
aaa
xor
xchg
push
cs
dec
jp
mov
cwtl
adc
xor
xchg
stc
out
lret
popf
pop
xchg
add
jmp
inc
fstl
out
movsb
jne
pushf
jp
aaa
dec
popa
mov
les
mov
xchg
test
sbb
scas
xor
ss
gs
jb
jnp
fwait
aam
and
in
dec
repz
inc
js
pop
testb
push
lret
add
mov
pop
mov
inc
jne
fcoml
sbb
fistpll
pop
int
sbb
leave
pop
in
out
xchg
lret
pop
popf
sub
jb
sbb
int3
frstor
mov
xchg
leave
stc
and
push
sbb
aad
or
shlb
push
mov
pop
sbb
dec
mov
leave
sbb
sub
or
icebp
push
cltd
sub
push
hlt
jl
push
lds
aad
hlt
sbb
dec
pop
movsl
loope
mul
pop
stc
xchg
and
jmp
frstor
aas
add
rorl
les
inc
or
mov
enter
mov
adc
xor
insb
out
out
or
addr16
js
std
xor
sub
inc
xchg
cmp
jo
imul
arpl
jb
or
jmp
add
cmp
or
and
pop
pop
lock
adc
in
jge
call
push
pop
cmp
mov
mulb
aas
sub
xchg
mov
jg
jno
push
pop
xchg
mov
in
imul
mov
movsl
fnstsw
push
mov
pop
add
iret
and
mov
cmc
fsts
xchg
or
addr16
loopne
loop
leave
out
mov
loope
in
into
add
outsl
nop
and
mov
enter
push
jnp
xchg
xor
lret
inc
out
add
xor
sub
xchg
sarb
daa
push
mov
stos
push
aam
pop
repz
iret
jmp
ljmp
mov
cltd
mov
jle
call
aas
adc
lret
sbb
lock
xlat
xor
sahf
out
jp
jno
jg
ret
cmp
sub
outsl
shrb
movsb
jae
xchg
mov
fldl
sbb
stc
add
inc
mov
jle
insl
out
lds
mov
mov
loop
inc
je
les
dec
sub
mov
outsl
int3
cmp
aas
mov
shll
sub
xor
xor
inc
fs
push
sub
es
pusha
mov
mov
fistpl
fisttps
sbb
cltd
fisttpl
ss
cwtl
jg
arpl
shll
cmpb
mov
aas
pavgb
fadds
xchg
mov
mov
pop
mov
fisttps
out
pop
out
cmpsb
iret
je
movsl
xchg
int3
or
sbb
jnp
aam
lods
push
or
mov
adc
bound
scas
nop
jl
add
mov
rcll
out
in
add
ja
xlat
sbb
int
mov
push
mov
insl
inc
jmp
shrb
jb
xor
pushf
shrd
adc
pushf
xchg
ja
xchg
ret
mov
push
push
lods
pop
xchg
mov
insl
sbb
pop
out
xchg
addr16
mov
ds
mov
mov
adc
sarb
lods
pop
test
jl
outsl
dec
pop
lcall
and
mov
xchg
movsb
fs
mov
push
test
jmp
adc
lcall
cmc
dec
dec
add
dec
roll
lahf
xchg
jge
sub
stos
and
leave
mov
dec
test
and
jae
jmp
enter
fwait
les
out
testb
je
cwtl
dec
cmp
push
jae
andb
lods
dec
mov
mov
mov
mov
popf
popf
fnclex
mov
inc
push
shrb
mov
pop
in
push
add
xchg
into
in
in
ja
mov
push
xchg
out
or
out
lret
dec
stos
push
sarl
bound
push
mov
in
imul
mov
xor
rcll
das
and
sub
pop
lds
or
nop
scas
pop
lock
mov
inc
inc
dec
xchg
jns
pop
jno
pop
dec
pushf
lahf
scas
and
add
lret
push
mov
rol
test
outsb
dec
pop
fwait
dec
push
arpl
pushf
test
daa
add
loope
in
test
jge
stos
test
pop
adc
enter
fstl
mov
jae
lods
mov
les
idiv
dec
lea
jmp
jne
dec
xchg
jne
in
mov
add
xor
adc
stc
push
inc
cmp
lds
cli
pop
rcll
xchg
clc
inc
insb
mov
pop
popf
lret
fnsave
xor
cli
mov
jmp
inc
mov
loop
add
jo
adc
pop
jge
and
rolb
dec
cltd
xlat
push
jae
ret
jmp
cli
enter
push
cmpsl
dec
xchg
push
lock
mov
aaa
xchg
inc
ror
nop
and
adc
mov
data16
out
clc
pop
repnz
dec
push
xchg
inc
mov
imul
sub
dec
cmpsl
mov
mov
ficoms
mov
mov
mov
cld
jo
icebp
mov
mov
or
mov
add
pushf
push
cmp
xchg
popa
jb
scas
sbbb
test
fldt
addb
mov
inc
xchg
test
hlt
xor
faddl
lret
pop
int3
pop
in
adc
sub
and
and
arpl
fnstcw
mov
js
pop
dec
xchg
or
out
fwait
clc
insl
sbb
adc
dec
mov
insb
sbb
pop
xchg
pop
dec
lahf
or
or
push
pop
outsl
xchg
fwait
dec
inc
xor
push
into
fstpl
jge
loope
cld
sbb
std
into
in
dec
and
clc
hlt
insl
inc
negl
push
std
pop
ret
mov
push
lds
out
xor
mov
fsubl
jb
pusha
hlt
lods
jno
sti
mov
inc
dec
inc
in
out
inc
sahf
jb
jno
adc
ljmp
bound
jg
in
pop
adc
ret
or
sub
in
cld
std
rcrl
pop
fdivrs
shlb
idivb
cmp
or
jl
jecxz
addb
adc
push
or
mov
mov
xor
repnz
push
jecxz
aam
loopne
test
int
test
out
lds
daa
adc
xchg
pop
adc
f2xm1
fsubrl
lret
and
mov
sub
mov
movsb
cmc
mov
jo
inc
es
ja
cmp
daa
js
xchg
add
add
movsb
mov
inc
xchg
cmp
stc
pop
mov
mov
mov
and
rclb
out
inc
mov
dec
mov
pop
cwtl
rorb
adc
and
cmp
mov
outsb
xchg
push
sbbb
fcomps
dec
pusha
inc
mov
jb
mov
mov
xchg
push
cmc
popf
jg
iret
add
pop
daa
cltd
or
adc
aam
adc
mov
mov
jge
pop
mov
lods
sub
sbbb
fildll
inc
pop
loopne
jge
jge
pushf
dec
ja
sbb
cmp
dec
shrl
mov
sahf
addr16
lahf
lods
shrb
aas
inc
inc
dec
cld
jge
pop
xlat
mov
loopne
cmp
lods
leave
push
adc
lds
mov
fldenv
rclb
xchg
or
inc
sbb
inc
bound
mov
push
adc
mov
dec
fbld
mov
adc
pusha
cmpb
ja
xor
mov
ja
fldenv
mov
jl
out
and
inc
neg
stc
lcall
xchg
mov
insl
in
popf
mov
movsl
pop
adc
ss
mov
inc
lds
mov
mov
mov
and
stos
xchg
mov
push
mov
mov
mov
pop
ret
dec
or
xchg
xchg
out
mov
fcompl
pop
insl
cmp
mov
addr16
jg
cmp
into
filds
daa
jmp
cmp
into
cmp
ds
mov
out
push
daa
mov
mov
ret
mov
inc
in
test
xor
sub
jecxz
jle
shl
test
lret
cmp
push
inc
sub
mov
push
jp
cmp
or
imul
push
scas
cs
xor
pop
stc
or
imul
movsb
das
mov
inc
movsl
pop
movsl
sbb
or
inc
mov
dec
in
or
test
mov
xor
sub
inc
inc
xor
cmp
push
xchg
push
addl
call
cmpsb
rorl
sub
lcall
imul
mov
mov
adc
inc
lret
jbe
xchg
cld
push
iret
hlt
or
sub
aaa
and
adc
and
jp
dec
inc
dec
inc
cli
sub
push
in
bound
or
mov
jnp
loop
inc
int3
add
ds
xor
clc
test
lret
xlat
and
inc
ret
cmp
jmp
js
dec
int
loop
xor
xchg
movsb
psrlw
xor
hlt
insl
mov
jns
jp
cltd
ja
jnp
movl
fwait
orl
fprem1
ret
in
sbb
push
jnp
push
push
add
shlb
fcmove
cwtl
jae
fcoms
repnz
scas
test
iret
xchg
mov
xchg
add
call
movsl
push
je
test
iret
push
sti
rcll
in
stos
js
rcrl
lods
add
jo
ret
clc
and
fisubs
cmc
pop
fstps
fsubs
ret
lea
aad
movsl
mov
mov
add
sti
fs
stos
xchg
popa
js
loopne
aaa
and
or
das
pop
mov
addr16
xchg
hlt
aaa
call
inc
subl
or
cs
test
xchg
das
jge
fcoml
jmp
or
mov
test
ss
idivl
orl
inc
sti
pusha
fs
cld
mov
and
daa
ds
ljmp
adc
xchg
clc
jno
out
lock
sub
mov
in
and
orl
loope
adc
int3
test
dec
pushf
out
pop
test
subb
add
lret
sub
add
test
rclb
test
gs
xor
movsb
shr
subb
mov
fldenv
shlb
gs
fistl
lret
js
leave
sbb
mov
sub
imul
lahf
pop
cmp
pop
cmp
push
sub
add
jge
ss
mov
adc
pushf
call
movsl
cmp
cs
leave
popf
mov
gs
push
mov
pop
or
insl
scas
mov
jecxz
sar
hlt
stos
ret
mov
mov
jge
fisubrl
std
xchg
and
push
pop
cli
scas
inc
and
data16
popa
cs
jge
adc
lock
inc
in
in
imul
mov
imul
lret
call
pop
sbb
cmp
les
lret
repz
mov
xchg
and
lret
sarl
add
sbb
repz
mov
lahf
out
xor
jmp
push
mov
mov
pop
push
pop
add
xchg
das
or
jp
push
mov
fnstcw
les
pop
mov
rclb
aad
inc
push
ljmp
loopne
loop
dec
and
jbe
or
cltd
popa
jecxz
lret
add
cmpb
mov
jmp
test
loop
shlb
sub
lea
into
jae
mov
xchg
cmp
push
iret
lock
mov
pop
rorl
push
inc
cmpsb
repnz
add
jnp
mov
popf
divl
inc
les
dec
lahf
imul
mov
insl
sbb
sbb
push
out
dec
std
jne
push
ret
pop
and
or
lds
xlat
jp
xchg
and
shrl
scas
scas
pop
inc
insb
mov
push
into
pop
cwtl
fiaddl
pushf
cmp
or
inc
push
mov
inc
mov
jns
rcrb
lret
xor
xchg
js
orb
mov
mov
push
mov
push
add
in
add
insl
xchg
popa
popf
add
adcl
cli
pop
jo
inc
lcall
ss
add
add
sahf
sub
mov
sbbb
insw
aam
loopne
imul
jle
insb
mov
lods
inc
mov
loope
or
sbb
int
fucomp
mov
adc
inc
jmp
das
mov
scas
jns
std
jp
sbb
sahf
push
repnz
inc
mov
or
lods
xchg
mov
xchg
jne
xchg
lds
and
or
mov
cmpsl
pop
mov
ret
inc
xlat
inc
loopne
rolb
mov
mov
jmp
out
call
dec
test
or
cwtl
fdivl
lods
mov
push
leave
pop
lods
mov
inc
pusha
cmp
in
xchg
arpl
in
cmpsb
hlt
lret
loopne
scas
daa
sbb
mov
mov
test
stos
shr
cwtl
pushf
and
xchg
dec
jle
movsl
add
out
mov
in
sar
test
xor
movsl
and
outsb
imul
ljmp
test
mov
dec
mov
or
rorb
fs
jge
push
out
icebp
out
xlat
fldcw
cld
add
push
insl
add
xchg
outsl
inc
insl
push
ja
movsl
sub
mov
cwtl
or
fidivl
cmpsb
hlt
das
into
sbb
push
xor
cltd
imul
aaa
adc
inc
lcall
sub
sub
xchg
test
scas
inc
pop
std
pop
mov
int
dec
cld
cmp
nop
and
loope
inc
lock
jns
add
sbb
cmp
int3
mov
mov
pushf
pop
dec
pop
jmp
lret
in
and
inc
out
insb
cmp
cwtl
leave
xchg
iret
mov
repz
mov
outsl
push
xchg
ds
adc
add
pop
push
std
ficoms
pop
hlt
pushf
inc
jmp
cmp
mov
xor
test
fucomip
adc
cltd
shr
aas
je
push
insl
lock
enter
pop
lahf
stos
mov
adc
test
test
dec
iret
rcr
adc
outsb
jo
push
sti
cwtl
pop
and
scas
add
call
je
mov
nop
loop
mov
lods
sbbb
es
aaa
ja
mov
arpl
push
cmpsl
and
inc
jmp
mov
xor
enter
in
lds
nop
adc
loope
loopne
out
loop
mov
test
mov
jmp
enter
push
mov
les
leave
cmpsl
xchg
int
mov
sahf
fsubl
mov
out
add
lods
mov
xchg
lcall
popf
xchg
add
mov
jnp
ss
idivb
sbb
pop
add
adc
popa
and
inc
out
sbbl
insl
sbb
jne
add
loop
fs
fld
icebp
shr
dec
ret
out
pop
pop
cmp
sbb
xor
lret
push
push
push
and
cmp
cmc
jmp
shll
cmp
mov
js
xchg
mov
addr16
jmp
cmp
jb
push
xchg
push
cmp
outsb
fldcw
and
jnp
imul
sub
scas
add
data16
dec
hlt
ss
int3
js
sbb
pop
mov
gs
mov
je
cmpsl
loope
xchg
dec
add
sbbb
shrl
neg
and
adc
ja
inc
jne
outsb
dec
push
pop
iret
fldenv
stc
imull
aas
jmp
frstor
jb
or
mov
jnp
fwait
scas
jae
in
cwtl
mov
sub
aam
daa
mov
les
data16
push
and
ficoms
iret
mov
lea
add
pop
add
outsb
push
jbe
push
mov
mov
mov
cmc
push
xor
ss
jb
or
mov
outsl
inc
pop
and
adc
test
adc
shll
push
in
adc
jmp
inc
cwtl
cmpsl
adc
pop
add
dec
or
xchg
fsubrl
push
and
xlat
and
push
scas
sub
aas
call
jle
mov
pop
imulb
add
insb
pop
loop
sub
cmp
icebp
inc
sbb
add
stos
addr16
std
xorb
test
pusha
dec
cmpsb
dec
or
rcll
push
pop
js
gs
pop
mov
lahf
lret
mov
jl
pop
sub
cmp
fcompl
sahf
mov
cmpsl
aaa
jbe
lock
addr16
lahf
lret
xor
adc
pop
shrl
push
add
or
pushf
mov
mov
clc
enter
adc
cs
xchg
fisttpl
out
stos
add
adc
mov
push
push
test
cmp
aam
inc
sub
pop
sub
lods
mov
xor
and
and
sub
movsl
popa
movsb
jbe
iret
cmp
sbb
jp
push
jp
xchg
pop
fwait
mov
jb
add
xor
add
dec
out
sbb
scas
mov
mov
mov
and
inc
push
lret
inc
fildl
stos
pop
dec
add
jg
mov
mov
aad
jbe
mov
or
out
aam
push
fcoml
jnp
push
dec
xor
mov
xchg
fnstcw
jg
xor
mov
pop
into
in
test
push
cmp
sahf
ret
test
add
push
pop
cwtl
pop
pop
sub
mov
mov
test
xchg
in
and
xlat
popf
into
test
fsubs
inc
lret
sbb
rcrb
xabort
stos
imul
outsb
adc
pop
xchg
push
jmp
out
addr16
fs
insl
sahf
mov
mov
into
rorb
xor
in
call
insb
push
inc
mov
or
mov
in
sti
jb
push
lock
in
inc
sub
std
inc
mov
mov
ljmp
mov
shr
leave
inc
int3
mov
imul
sub
dec
rorl
repnz
push
adc
loop
or
xchg
rolb
fidivrl
out
jo
enter
imul
cwtl
in
or
das
cmp
or
bnd
fadds
mov
mov
stos
or
addr16
sbb
add
jmp
repnz
movsl
out
cmp
mov
cmp
out
xor
cmp
adc
stc
lcall
jmp
push
loopne
cltd
xchg
or
in
inc
ss
mov
ljmp
inc
in
incb
adc
mov
sarl
jle
xlat
mov
insl
or
xorl
fstps
ror
mov
sbb
enter
je
xchg
fst
cmp
mov
daa
dec
scas
jne
sub
inc
lds
and
repz
mov
in
fstp
pop
cmpsl
ret
jae
aaa
xor
pop
cmpsb
jns
adc
mov
add
xor
dec
loope
xor
sub
adc
jle
outsl
ret
xchg
add
cli
sti
adc
dec
in
mov
jg
imul
push
cli
mov
sarb
pop
and
inc
in
andb
xchg
xchg
jno
jmp
push
cmc
or
or
in
mov
pop
cmp
jg
in
push
sub
jne
mov
mov
add
dec
movsb
push
and
sahf
addr16
test
add
mov
in
rcr
leave
lds
pop
mov
int3
adc
mov
andl
mov
jns
mov
lcall
pusha
xchg
pop
nop
lcall
or
mov
sub
pop
push
jp
roll
sub
inc
xor
imul
test
test
xchg
clc
cmp
jle
cmc
pop
jl
and
cld
mov
nop
sbb
cli
in
mov
mov
mov
jg
and
movsl
jp
sub
mov
add
mov
aad
xchg
mov
mov
jae
cmp
gs
lret
ret
xchg
fs
mov
cwtl
mov
pop
push
in
test
dec
hlt
jge
pop
xor
sbb
lea
push
shl
ret
mov
or
xchg
mov
cli
mov
mov
adc
inc
aam
cmc
cmp
fmul
xor
inc
mov
notl
xchg
cwtl
cltd
int
or
int
scas
sub
pop
ret
inc
movsb
stos
push
dec
loope
jne
std
dec
adc
jb
and
xor
mov
addl
adc
outsb
icebp
mov
adc
inc
sub
push
fcoms
jg
in
pop
mov
dec
inc
pop
xchg
aad
ljmp
jl
push
xchg
xor
push
pop
mov
pusha
outsb
pop
out
mov
aaa
shlb
scas
cmp
out
pushf
shlb
inc
mov
inc
dec
xchg
fcoml
fwait
imul
xchg
sahf
adc
stos
and
cmp
sahf
out
inc
sbb
push
fmuls
pop
dec
aad
fistpl
jmp
data16
xchg
or
xchg
sub
ss
icebp
in
mov
push
xchg
mov
cmc
sub
dec
lock
leave
cltd
and
sbb
pop
in
in
cmp
or
mov
pop
push
imul
not
repz
shlb
inc
inc
shrl
jp,pt
stc
in
mov
ret
push
sahf
inc
pop
popa
cmpsl
bound
inc
shr
push
push
addr16
jno
inc
movsb
hlt
mov
cmc
ret
inc
mov
push
xchg
jg
pop
pop
adc
xchg
xchg
in
cmp
mov
ljmp
pushl
xor
into
cltd
xchg
cld
nop
mov
dec
add
js
int
outsl
js
aad
repnz
popf
mov
popf
cld
dec
sbb
mov
dec
roll
sahf
cmp
or
imul
repnz
mov
test
fmul
jnp
push
jg
xor
imul
mov
and
dec
mov
lock
je
orb
inc
movsb
pop
rol
push
popf
cld
outsl
dec
iret
cltd
scas
lahf
lahf
ljmp
fstps
mov
push
aad
mov
or
xor
mov
dec
stc
pop
inc
daa
ljmp
mov
out
outsl
imul
fs
jg
mov
lock
stc
shll
fwait
and
push
jne
sub
into
fcomi
pop
lods
in
jno
adc
test
int
mov
sbb
fsubs
iret
js
out
enter
or
in
roll
popa
stos
xlat
pop
pop
cmc
mov
or
adc
cmp
jle
lock
hlt
fistps
std
outsl
mov
mov
int3
add
sub
stos
rcll
into
or
pop
dec
cmpsl
or
pop
add
popa
ss
repz
imul
pop
lcall
xchg
pop
aaa
xchg
in
pop
jge
push
insl
mov
jne
call
lret
mov
sub
cmp
adc
inc
xor
test
xor
adc
add
cli
and
clc
daa
lods
cmp
xor
in
fs
sbb
mov
shlb
xchg
mov
mov
fmuls
iret
cmp
lret
mov
ljmp
test
mov
xor
pusha
hlt
cmp
sbbb
cmp
jne
cwtl
mov
push
daa
addr16
stos
popf
mov
mov
mov
jl
leave
dec
pop
jmp
and
mov
insb
adc
sbb
sub
outsl
dec
push
jo
imul
xor
inc
push
in
out
inc
stc
or
mov
xor
in
call
pop
rolb
inc
xchg
out
xlat
ljmp
cwtl
or
imul
mov
xchg
fsubp
sahf
or
and
insb
andb
add
in
nop
and
sti
lret
mov
pop
movsl
lods
sub
jp
sub
pop
inc
push
das
stos
gs
pusha
aas
mov
jecxz
das
loop
pop
adc
or
push
xchg
cwtl
inc
lds
and
movsl
test
xor
pushf
pop
shlb
test
lcall
inc
push
xchg
cwtl
nop
das
lret
cld
loope
inc
or
popf
dec
dec
mov
cmpsb
mov
repz
and
inc
jmp
int
out
jl
sbb
inc
stos
cmp
movsb
inc
jle
cmp
jb
or
aad
cmp
or
std
into
fmuls
jns
xor
add
and
cltd
loope
and
push
insb
gs
push
cmp
sbb
sub
fwait
mov
shl
mov
push
imul
add
jp
sbb
add
jbe
lea
imul
sbb
sarl
mov
inc
in
mov
sarb
pop
push
in
lods
inc
aad
or
aam
mov
fdivrl
es
pop
add
popf
add
or
ret
jmp
xchg
insl
js
jno
xchg
scas
addr16
xor
adc
out
xor
mov
ljmp
int
rolb
push
sti
dec
pop
mov
mov
xchg
cmpb
cltd
adc
inc
pop
decb
jl
int
lods
xor
adc
repz
mov
mov
push
loope
push
pop
mov
adc
dec
shl
movsl
repnz
dec
push
mov
insl
mov
dec
aad
loopne
lcall
mov
movsb
out
xor
pop
dec
pop
out
or
adc
inc
scas
push
sahf
ret
and
cmp
test
std
mov
cmpsl
fsubr
jmp
inc
addr16
mov
push
les
lcall
jno
or
xor
adc
sbb
sbb
mov
aad
fistps
jle
dec
out
or
push
sub
mov
sub
dec
sub
sbb
mov
pop
xor
pop
jle
push
dec
test
xchg
dec
int3
movsb
data16
std
or
sbb
mov
mov
andb
nop
mov
out
lods
cmc
cli
lock
fstpt
ss
lock
imul
arpl
jg
pop
test
jo
outsl
xchg
mov
jne
or
addr16
mov
aaa
popf
lahf
clc
jecxz
dec
mov
xor
pop
push
lea
sbb
xor
fidivl
lock
fcmove
jp
hlt
sti
push
aam
fwait
jno
sub
sbb
add
jo
mov
jecxz
out
xchg
mov
movsb
rcl
out
push
daa
add
push
mov
shl
cmp
and
shrb
into
jnp
leave
lods
xchg
adc
cmc
inc
and
les
mov
repz
cmp
ss
test
sub
scas
mov
cmp
les
mov
and
and
popa
inc
js
adc
in
scas
mov
push
into
and
testb
push
jl
outsl
adc
aaa
jg
xorb
cmp
aas
and
stos
sub
addl
mov
jne
stos
pop
lret
xchg
sar
xchg
aaa
mov
xchg
jmp
daa
push
xchg
out
mov
lahf
or
pop
push
dec
in
rcrl
xor
and
iret
pop
adc
fmuls
cli
aas
mov
cmp
out
mov
mov
xchg
or
and
es
xor
sub
divb
setge
call
int
ficompl
mov
xchg
imul
inc
fnstcw
dec
mov
or
imul
dec
push
loope
jnp
jg
xchg
cmpsl
sti
and
popa
mov
rcll
jecxz
jg
sti
iret
inc
int
and
repz
jbe
repnz
adc
sbb
jbe
adc
fisubl
lahf
insb
cmpsl
decb
test
icebp
jl
jecxz
pop
enter
inc
rolb
mov
mov
pushf
outsl
rolb
test
movsl
push
shlb
jno
fcoms
mov
arpl
lods
lcall
or
adcl
movsb
cli
pusha
data16
lock
sub
pop
js
scas
xchg
es
mov
cmpsb
mov
out
nop
stos
shr
into
mov
cmpsb
xor
mov
enter
add
sahf
clc
and
sub
inc
push
out
ret
aaa
popa
xor
add
or
jae
xlat
lock
std
shll
xor
push
pop
iret
xor
sbb
dec
and
mov
add
fcmovbe
sahf
aaa
sub
cmp
jnp
pop
mov
aaa
jge
popf
push
xor
jo
cmp
xchg
loope
mov
enter
lods
in
or
and
dec
mov
ja
add
fsubr
xor
jae
popa
jecxz
sti
arpl
popa
add
cmp
out
mov
push
stos
decb
stos
clc
bound
enter
test
pop
and
cmp
add
jbe
and
or
add
sti
dec
push
in
call
scas
xor
std
fmuls
xchg
fwait
cmp
jno
cmc
adc
mov
push
icebp
cs
repz
test
sahf
clc
stc
sbb
xlat
repnz
idivl
sbb
mov
push
mov
imul
sub
lods
mov
adc
in
mov
out
sbb
mov
movb
adc
xor
ds
fdivr
push
insl
out
jle
outsl
ss
dec
pop
addr16
in
out
xor
int3
repnz
inc
push
xchg
add
xor
push
sbbb
add
mov
xchg
repnz
dec
mov
lods
add
cmp
jne
repnz
mov
sub
or
int3
mov
mov
mov
test
lea
xor
aaa
inc
push
jno
and
add
mov
fwait
dec
adc
sbb
lds
into
push
sbb
out
and
ds
inc
mov
inc
jae
adc
aam
jnp
add
xor
jns
xlat
das
mov
pop
in
testb
in
movsl
inc
popf
mov
sbb
dec
ljmp
xchg
in
xchg
cmc
rcrl
and
jmp
rcl
inc
into
xor
in
icebp
loopne
inc
or
inc
xor
push
in
pop
mov
std
popl
pop
jno
ficoms
add
and
push
mov
int
out
imul
mov
pop
test
xor
cmp
rolb
lea
mov
push
out
mov
xorb
fcomi
ljmp
sbb
dec
mov
dec
xchg
add
sti
mov
mov
pop
mov
xchg
xor
cmpsl
jmp
dec
aam
xchg
xchg
sub
cwtl
pop
movsl
aaa
jb
cmp
jnp
push
jae
pop
fdivs
jge
jne
dec
or
into
cmp
gs
xchg
cli
iret
sub
je
sbb
add
mov
cmp
push
fisubrl
rdmsr
outsb
or
mov
bnd
xchg
add
scas
sub
push
std
add
or
or
pusha
std
push
lret
sub
mov
das
push
aad
mov
aam
test
sub
shlb
dec
mov
xchg
cli
rolb
fcmovnbe
frstor
pop
iret
mov
push
pop
fwait
scas
push
testb
rclb
fisubs
aas
shr
lods
push
cwtl
out
lretw
and
add
ljmp
pop
xchg
int
lods
inc
clc
xchg
mov
int
pop
btc
jmp
add
stc
add
cmpsl
mov
aam
inc
pushl
in
cmpsb
cmc
fcmovu
js
cmpsb
xchg
jle
stos
push
addr16
push
outsb
cmp
pop
xchg
jae
mov
push
jecxz
push
data16
inc
or
rorb
andl
jp
loope
dec
or
xchg
les
jl
mov
jnp
sbb
pop
stos
mov
push
dec
outsl
test
sbb
adc
lcall
dec
fildll
test
mul
cld
lods
mov
push
mov
ja
dec
shlb
mov
or
bound
aam
mov
scas
int3
adc
stos
inc
repz
fstpt
xchg
fsubr
mov
cld
dec
inc
arpl
push
push
dec
pop
addr16
pop
and
lock
inc
fld1
xchg
dec
mov
divb
sub
repnz
fnstenv
mov
mov
mov
add
shlb
dec
inc
test
fistpl
dec
jne
xlat
aaa
arpl
movsl
repz
add
arpl
scas
dec
fisubrs
ss
or
pusha
mov
cmp
stc
mov
std
out
xchg
cltd
test
mov
or
ja
xlat
pop
pop
hlt
and
lahf
ds
cmp
in
stc
stos
cmp
jge
dec
faddl
scas
fldl
pop
rorb
insb
ja
fbld
repnz
or
sub
fisttpll
out
test
insl
fistpl
cmc
out
mov
add
cli
mov
mov
or
and
or
in
pushf
jle
xor
fxch
xor
dec
add
mov
mov
adcl
xor
mov
push
dec
push
jbe
push
fwait
pop
dec
mov
jecxz
leave
icebp
int3
xor
lods
pop
xchg
xchg
or
jp
inc
aaa
arpl
push
or
cwtl
test
ja
fwait
pushf
add
cltd
les
sub
inc
cwtl
pop
out
fadds
jecxz
push
mov
jl
jne
sbb
mov
add
mov
xchg
fdivs
popa
push
pop
xor
adc
fmuls
jmp
fcmovb
cmc
bnd
add
data16
je
fwait
iret
nop
mov
inc
mov
cmp
jae
inc
mov
in
cli
insl
xor
clc
mov
cwtl
es
inc
xchg
out
adc
pop
inc
jl
mov
xchg
xchg
mov
xchg
int
and
xor
xchg
sbb
or
sbb
push
pop
cmp
mov
lret
ds
gs
pusha
mov
pop
or
ret
mov
mov
ljmp
push
xchg
stc
mov
in
pop
and
jb
mov
and
push
lret
push
add
push
push
testb
cli
imul
les
sbb
push
mov
inc
xor
xor
xchg
repnz
push
leave
ret
sub
fstps
out
lret
filds
push
cmp
mov
vmovups
pandn
fisttpll
adc
out
xchg
aam
jmp
adc
xchg
fadds
mov
mov
sbb
or
sub
test
out
cwtl
adc
out
loope
test
xor
int
iret
rcr
shlb
scas
push
jmp
sub
outsb
stos
dec
and
xchg
lds
and
fdivl
adc
and
aad
push
pop
fwait
dec
or
mov
sbb
xchg
sub
adc
xchg
data16
dec
mov
mov
sbb
mov
inc
sbb
or
dec
push
adc
cmp
xchg
cld
xchg
in
jb
xchg
sahf
sub
pop
lods
ljmp
dec
insl
cmpsl
fstpl
mov
mov
mov
jae
xchg
mov
inc
xor
and
xchg
xor
aam
push
fisttpll
je
and
sub
in
and
inc
xchg
lahf
and
mov
xor
push
inc
enter
jb
xor
ret
mov
sub
jmp
pop
sub
pop
fcmove
scas
dec
lock
jnp
psubusw
xor
test
rorl
pushf
popl
inc
shr
pop
popf
dec
out
outsb
jne
xor
push
mov
mov
xchg
cmp
cmp
pop
jbe
push
mov
ds
movsl
and
add
mov
push
adc
pop
stc
lret
adc
push
test
inc
push
push
mov
arpl
pop
hlt
int3
shrb
sub
fnstsw
mov
andb
test
mov
xor
movaps
popa
inc
mov
jmp
jecxz
fdivrs
daa
xchg
call
cltd
stos
xchg
dec
lret
mov
sbb
cmp
and
les
lcall
lcall
sub
xchg
out
push
mov
push
sbbl
jbe
mov
inc
pusha
pop
push
sbb
sbbl
pop
adc
mov
insl
movsl
push
cli
in
push
adc
outsl
out
jns
test
mov
cmp
cmp
inc
and
icebp
sub
rcr
add
rol
rcrb
adc
aam
stc
in
push
push
inc
and
hlt
xchg
in
lret
sub
cmpsl
adc
out
xchg
testl
je
adc
push
leave
dec
sub
stc
pop
and
js
or
cmp
dec
iret
inc
out
scas
mov
ss
and
dec
dec
popf
cld
mov
and
dec
push
push
xchg
aad
sub
or
test
inc
std
mov
pop
popf
xchg
mov
xor
jns
cltd
sbb
add
into
rclb
push
scas
scas
lret
outsl
jle
add
jns
aam
or
cmc
mov
test
divb
pop
push
jecxz
les
jmp
test
and
xor
movsl
testb
mov
pusha
ret
push
ror
imul
mov
jle
movsl
insl
mov
xchg
mov
daa
mov
and
aas
cwtl
loope
sbb
xchg
xor
dec
sbb
jmp
add
mov
orb
dec
rcll
cs
std
cmp
mov
and
jb
sbb
enter
cmp
leave
mov
or
js
jne
outsl
aad
xor
and
push
lahf
fiadds
repz
add
xchg
popa
in
mov
mov
int
les
push
fbld
jl
jl
js
adc
pop
inc
xor
adc
jns
inc
cmp
mov
andb
std
sub
mov
jae
sbb
xchg
repnz
sub
dec
inc
and
sarb
pop
pop
jl
lea
outsl
mov
fsubrl
int3
mov
mov
loope
clc
sbb
inc
push
mov
mov
sub
das
pop
xor
pop
dec
inc
test
out
dec
clc
inc
cld
popfw
and
mov
sti
in
dec
aam
bound
xor
add
mov
aam
lea
mov
shrl
aad
rorb
je
and
dec
fsts
mov
popa
jge
cmp
imul
mov
movsb
or
add
lods
xor
or
sbb
xchg
inc
fisubs
adcb
fsubrl
pop
xor
mov
push
push
ja
mov
mov
and
xlat
jae
inc
hlt
inc
push
insb
mov
jle
fwait
cmp
pop
rolb
out
mov
sbb
lods
das
mov
fbld
or
mov
jno
jle
stos
mov
jg,pt
iret
jae
pop
jge
imul
mov
shr
mov
shrb
dec
stos
dec
cltd
stos
jp
test
mov
shlb
mov
or
adc
sub
dec
cs
clc
fcompl
cmc
das
cmpsb
inc
push
cmp
xchg
loope
out
ret
jp
or
dec
dec
add
pushl
dec
xchg
jp
fldl
inc
adc
dec
dec
lds
jp
or
push
sub
mov
or
ret
jno
hlt
add
imul
mov
dec
dec
cmp
jle
xchg
sub
mov
lods
mov
fwait
clc
stos
outsb
cmp
push
shll
push
xor
ljmp
imul
cmpb
in
cmp
adc
loop
jbe
add
mov
pop
popf
shrl
cmp
jl
jecxz
into
xchg
out
jmp
jmp
mov
adc
test
or
mov
js
xchg
mov
xchg
xchg
mov
js
aaa
pop
ja
sbb
daa
fimuls
mov
nop
and
negl
pusha
adc
sbb
dec
push
sbb
pop
push
sub
sahf
xorl
xor
bound
call
pop
ret
add
cli
pop
mov
xor
jg
jb
dec
pop
sbb
xlat
mov
and
fstps
mov
in
or
mov
cmc
sbb
adc
shl
fdivrp
xchg
insb
xchg
subb
jge
mov
loope
mov
cmc
mov
sbb
fcoml
push
pop
jo
in
aas
enter
in
popf
into
enter
jg
dec
xchg
movsl
test
lds
test
lcall
dec
mov
aaa
sti
loop
mov
pushf
ja
test
sub
push
loope
add
pop
or
sub
add
push
arpl
adc
cld
divps
mov
adc
imul
fisubrs
pusha
xchg
call
add
cmp
sub
pop
in
scas
sub
test
pop
cmp
mov
jg
push
add
das
or
pop
inc
mov
mov
cmp
ror
inc
ljmp
sar
outsb
cmc
iret
mov
shlb
xchg
jmp
cmp
sbbl
xchg
mov
pop
mov
push
sahf
shl
xor
and
sbb
mov
mov
inc
les
rorl
insb
sub
jne
add
push
idivb
push
add
or
push
andb
sahf
sti
ret
mov
add
xor
xchg
and
sar
cwtl
sbb
icebp
imul
sti
jg
pop
dec
rcll
xchg
jmp
add
cmp
pop
ficoms
adc
dec
fwait
or
push
idiv
sub
dec
add
jmp
mov
out
inc
pop
imul
add
ljmp
sub
push
movsb
popw
aam
dec
enter
jmp
sub
rcrb
mov
fsts
jg
push
adc
mov
lods
mov
sub
gs
stc
jecxz
movsl
pop
sbb
clc
mov
push
xchg
div
fwait
ret
daa
lret
inc
mov
lret
jno
je
repz
sbb
stos
fcmovnbe
mov
lahf
pop
pushf
jns
cmp
mov
outsl
movsb
pop
inc
add
fisubl
push
repnz
movsl
nop
leave
xchg
pop
push
push
mov
into
and
lods
lock
lahf
cmpsl
dec
dec
std
bound
sbb
and
push
clc
mov
inc
adc
test
and
shlb
insb
lahf
fcompl
aaa
push
adc
jbe
das
test
or
jbe
out
pop
pop
sbb
adc
sub
dec
lret
loopne
push
and
andl
or
pop
pop
add
andl
adc
lahf
imul
gs
inc
jnp
xchg
rclb
pusha
pop
jo
das
jp
jae
sbb
inc
in
aam
dec
jbe
dec
or
jg
in
cmp
and
inc
add
lods
push
rcll
mov
dec
and
jo
aad
pop
std
sbb
add
ret
push
xchg
sub
push
push
cmc
aaa
cmc
pop
xorb
mov
lahf
fwait
add
dec
sbb
pop
adc
jle
int3
inc
fidivl
cmpsb
and
xchg
sub
lret
pop
push
aas
pop
ret
shrb
mov
pop
xchg
mov
in
popf
mov
clc
push
scas
aad
mov
lret
pop
in
inc
loope
mov
xor
sbb
cmpsl
lret
incb
add
jae
ficoms
out
aas
push
sub
fnstsw
push
pusha
mov
fnstenv
sbb
xlat
cmp
test
add
fs
loop
xchg
nop
mulb
push
ret
ret
mov
fmuls
adc
sbb
clc
in
call
lret
push
scas
mov
lcall
pusha
mov
xchg
sti
and
and
cmp
jg
and
enter
add
test
or
loop
push
stos
mov
popa
cmpsl
pusha
dec
arpl
add
jmp
out
jno
aam
loope
xor
mov
mov
push
inc
shl
out
nop
mov
jmp
jge
cmc
lods
sub
scas
daa
or
mov
fwait
dec
lds
movsb
adc
ss
and
mov
js
xor
movsl
fdivr
pop
enter
std
mov
repz
mov
test
sti
add
xchg
push
push
cmp
push
mov
push
adc
jne
mov
loopne
mov
push
out
fldenv
sbb
inc
sti
dec
and
add
in
sahf
inc
adc
fdiv
sbb
repz
pop
add
ss
pop
aas
adc
or
call
rorl
leave
icebp
js
pop
sbb
xor
call
iret
dec
repz
ljmp
and
dec
push
test
xchg
int
icebp
dec
in
xchg
sbb
mov
sarl
fnstsw
jae
add
xchg
loopne
lret
lret
jg
pop
sub
popl
or
sub
mov
sbb
imul
out
mov
cld
fiaddl
in
faddl
out
loopne
sub
pop
leave
and
inc
inc
pop
pop
jbe
mov
jns
jmp
add
inc
pop
and
mov
jne
pop
lret
jle
dec
mov
repnz
push
dec
inc
push
push
cmovl
mov
push
loope
cmpsb
mov
sbb
mov
std
jl
add
jnp
sbb
mov
popf
push
lds
push
ja
sbb
loope
jle
sahf
dec
fcmovnbe
sbb
jg
mov
sbb
mov
nop
clc
mov
xchg
lds
test
mov
mov
mov
xor
inc
stos
in
dec
lods
mov
or
push
cmp
shlb
sbb
inc
and
loopne
push
test
push
adc
xchg
repnz
loopne
test
cwtl
mov
or
loope
ficoml
add
fincstp
mov
das
ret
adc
or
test
xchg
stos
cltd
sbb
repnz
pop
stos
sti
popa
cmp
push
ss
inc
negb
jae
loope
xchg
jge
out
jns
and
mov
xor
daa
push
xchg
xor
push
adc
loop
fstps
lea
adc
mov
cs
arpl
in
mov
divl
or
mov
mov
lods
lret
mov
and
loop
dec
in
and
cli
call
adc
xchg
test
push
sub
push
shrl
pop
jp
call
push
dec
dec
and
add
push
xchg
jp
loop
sti
in
mov
ret
or
lods
scas
nop
or
test
cld
push
inc
cli
jnp
jg
insb
xor
mov
pop
mov
xchg
int
in
xlat
subb
cmp
ss
cltd
lret
insl
jmp
pop
push
inc
push
shll
lock
aad
dec
loopne
sbb
icebp
cld
mov
xchg
fisubl
imulb
sbb
dec
jo
mov
fcom
dec
test
dec
or
xchg
jns
jge
mov
sub
pop
mov
out
xchg
push
pop
roll
sarb
movl
imul
pop
stc
gs
cmp
lds
xchg
mov
lahf
outsb
dec
loop
mov
cmpsb
stos
ja
inc
popa
arpl
ret
mov
pop
pop
xchg
add
lcall
ljmp
out
les
and
push
addl
mov
mov
push
lods
pop
jg
dec
xchg
cmp
sarl
pop
call
jo
repnz
lahf
jecxz
es
sbb
cli
inc
mov
jle
jns
test
imulb
shlb
xchg
aam
push
xchg
dec
pop
add
daa
xchg
jl
jge
and
mov
and
dec
sbb
and
mul
adc
call
fnsave
in
push
and
mov
cmc
aaa
inc
xorl
leave
cmpb
cld
loop
imul
icebp
sbb
pop
loope
icebp
sbb
and
add
adc
daa
movsl
pop
xchg
xchg
mov
add
pusha
lret
sub
mov
mov
add
mulb
outsb
call
xchg
mov
pop
imul
adc
outsl
dec
fcoms
jmp
jnp
mov
nop
pop
cmpsb
cltd
add
pop
mov
jbe
or
mov
test
stc
call
inc
pusha
pop
addr16
daa
mov
ljmp
ret
stc
rorb
pop
fists
adc
mov
lock
dec
push
out
sub
sbb
jl
mov
sub
cmpsb
mov
mov
xchg
stos
xor
and
pop
sub
aas
fdiv
sbb
stc
fidivs
jmp
clc
addr16
pop
inc
repz
push
in
and
pop
cmpsb
xor
fildll
mov
inc
iret
rorb
int
fwait
push
add
cmpsb
xor
je
adc
in
hlt
adc
int3
fwait
sub
mov
mov
xchg
mov
loope
inc
test
pop
adc
lcall
test
cmp
push
mov
test
pop
loopne
xor
push
cmp
mov
jmp
or
cmp
andl
das
jp
jp
lods
adc
nop
dec
testl
push
mov
sbb
inc
cmpsb
jecxz
int
xchg
fmull
pop
mov
cmp
cmp
call
aad
xchg
xlat
gs
inc
and
pop
repnz
push
fdivrp
jo
push
cmp
dec
push
popa
scas
cs
rcll
out
cld
dec
lea
push
arpl
fstps
in
xor
mov
repnz
sbb
sbb
lods
push
imul
sub
shlb
jo
cli
jb
testb
ja
popa
stc
or
inc
std
xor
sbb
ljmp
inc
adc
inc
jg
mov
jae
ja
xchg
xchg
adc
adc
xor
xchg
test
imul
sbb
add
int3
sub
inc
or
dec
out
pop
add
clc
xchg
sub
mov
xor
repz
jbe
cmc
outsl
test
lea
imul
cmp
scas
or
mov
push
sbb
ret
xchg
xor
sub
sbb
inc
insl
cmp
and
int
sbb
sbb
dec
pop
jle
sahf
xchg
sahf
xor
push
loopne
cmp
fmul
and
push
mov
xchg
in
mov
mov
jl
pop
js
jb
stos
out
nop
push
xchg
mov
mov
adc
das
lods
mov
js
adc
incb
pop
cli
fs
cmp
inc
or
ret
popf
jne
stos
outsb
jnp,pt
je
cwtl
repz
mov
loope
mov
jle
test
xor
loopne
jno
inc
int
inc
add
scas
imul
push
adcl
ror
adc
dec
test
cmpsb
push
ffree
push
push
stos
std
pop
mov
mov
fisttps
test
shll
lea
or
jle
pop
mov
mov
scas
jmp
jne
xor
les
xor
cmp
jb
cmp
icebp
add
cld
stc
adc
or
loop
pop
push
dec
jns
out
iret
or
pop
cld
mov
mov
xchg
repz
xchg
sub
hlt
cmova
mov
xchg
add
sbb
clc
out
icebp
push
movsb
xchg
movsb
jge
add
out
mov
jbe
mov
loope
mov
xchg
jecxz
push
cltd
xor
push
jl
push
sub
sbb
jle
xor
das
push
loope
mov
xlat
outsl
out
mov
sbb
jo
mov
add
mov
xchg
ss
cmp
int3
xor
rclb
push
dec
cld
mov
andl
cmp
cmpsl
jp
adc
inc
pusha
mov
lcall
sub
test
inc
lea
stos
fistpl
clc
push
pop
arpl
push
add
inc
add
mov
sbbl
inc
jnp
ja
fisttps
mov
mov
pop
mov
pusha
into
sti
mov
sub
pop
pop
cmp
shlb
push
push
adc
jb
pusha
js
rolb
inc
mov
or
pop
or
mov
mov
imul
jmp
arpl
popf
cmp
iret
sub
dec
ljmp
xchg
cmpsl
out
mov
jp
movsl
add
jns
or
and
and
adc
pop
pushf
xor
dec
les
test
sub
inc
nop
inc
lea
and
mov
std
push
sbb
mov
and
lahf
and
pop
int3
xor
fistl
int
js
mov
addr16
jmp
push
add
gs
pop
sbb
rcrl
jb
cmp
test
movsb
imul
pop
bts
xchg
jnp
out
xchg
or
in
mov
jbe
cmp
xchg
fisttpl
inc
mov
cmpl
mov
negb
or
iret
pop
jmp
pop
sbbl
sbb
mov
pop
sub
and
adc
lcall
jmp
fadd
and
adc
push
cmp
ret
sbb
push
xor
mov
xor
adc
jecxz
add
jl
or
push
aas
jno
jb
and
sbb
lret
dec
fcompl
xor
adc
sub
xchg
pop
std
ss
jnp
stc
sub
dec
rolb
cwtl
scas
inc
jg
or
aas
xor
inc
stos
insb
adc
gs
icebp
and
xchg
data16
jno
push
sub
call
iret
jge
sub
push
cmpl
inc
pop
add
iret
aad
fldenv
mov
push
push
jb
mov
lds
dec
addr16
push
aad
repnz
arpl
loopne
stos
push
cmpsb
mov
mov
push
pushf
xchg
insl
sub
movsb
scas
jns
cmpb
and
clc
bound
fsts
data16
or
imul
loopne
js
repnz
ljmp
inc
hlt
pusha
out
xchg
test
jne
aas
push
dec
movsb
mov
push
inc
cmpsb
out
lahf
pop
inc
mov
jns
mov
jo
out
imul
pop
in
ret
jl
sub
dec
push
fistpl
stc
jnp
ljmp
jae
aam
addr16
in
pop
sbb
mov
pop
std
sub
cs
stc
aam
addr16
ljmp
push
lahf
or
loop
jg
adc
scas
in
jbe
fcomi
cmp
subl
xchg
sbb
jg
jns
rcrb
cltd
and
cltd
inc
xor
push
shlb
pop
stos
out
das
and
imul
divl
inc
lahf
sbb
inc
cmp
test
shufps
sub
inc
or
pop
xchg
mov
in
out
cmp
in
add
mov
mov
outsl
sbb
and
adc
or
pop
cmp
imul
adc
lcall
iret
scas
add
mov
mov
adc
loopne
pop
repnz
push
aas
das
fcmovu
dec
lret
cs
js
mov
cmp
enter
arpl
fildl
mov
pop
dec
add
dec
iret
lea
xor
dec
sub
popfw
clc
popa
mov
sub
in
mov
test
xchg
jb
mov
adc
fcomps
xor
dec
inc
push
andb
cmpsl
mov
pop
mov
cwtl
or
mov
xor
int3
std
sbb
push
adc
jnp
out
inc
inc
aas
cld
outsb
clc
sub
inc
es
je
aam
fwait
pop
aam
aas
fists
shrb
push
xor
in
test
or
lret
test
popl
enter
in
aas
or
mov
into
and
jmp
es
fidivrl
xchg
insl
subb
mov
mov
xor
sbb
xchg
mov
mov
mov
movsb
mov
mov
adc
fistl
add
push
rcll
aaa
rclb
sar
imul
outsb
fildl
lods
sub
sbb
xor
out
lea
out
lods
loope
scas
mov
in
mov
test
push
out
jp
imul
xor
cmp
or
lret
or
mov
aas
xchg
xchg
jno
inc
mov
mov
icebp
pop
cmpsb
mov
ficoml
into
insb
jg
mov
adc
repz
sub
pop
cmpsl
jnp
in
cmp
xchg
cld
std
mov
mov
adc
stos
gs
rcl
es
xchg
pushf
inc
dec
out
mov
insl
or
push
pop
call
pop
lret
arpl
pusha
mov
inc
testb
lahf
mov
push
lret
sbb
add
in
aam
lds
xor
insl
xor
and
mov
imul
cli
push
aad
out
adc
pop
cli
mov
sub
mov
mov
rcrl
mov
bnd
incb
enter
jl
xadd
xor
popf
or
jbe
mov
push
bound
add
fcomp
xchg
and
mov
fldenv
jp
sub
outsb
fs
sbb
mov
pop
jne
dec
mov
stos
jmp
outsb
jl
fistpl
jo
push
pushf
loope
clc
cwtl
fsubrs
js
push
jmp
mov
cmp
mov
or
fdivl
repz
js
mov
jo
cmp
daa
fs
jle
cmp
popa
mov
xchg
pop
cmp
int
orb
nop
dec
out
fistps
add
push
lret
subb
dec
mov
push
je
sbb
dec
xchg
add
dec
xlat
fcmovu
roll
into
fidivrl
jno
mov
mov
sbb
push
mov
pop
leave
call
or
xor
test
aaa
rorl
sub
out
out
inc
movsb
les
lds
dec
xor
cmc
sbb
imul
bound
cld
inc
mov
test
jae
inc
outsl
pop
negl
aam
ljmp
push
xchg
test
jns
test
push
ljmp
shl
es
or
in
cli
sub
icebp
shrb
adc
lock
out
cld
sar
sbb
push
call
and
outsl
jnp
mov
ss
in
xor
push
inc
jne
jecxz
xchg
xchg
jge
adc
adc
jmp
xor
push
loop
push
mov
mov
dec
cli
mov
push
pop
scas
sahf
sub
mov
or
test
or
xorl
inc
out
daa
hlt
imull
outsl
fstpt
or
mov
loope
insb
fmull
fbstp
xchg
enter
je
mov
out
fadds
mov
xor
movsb
in
ss
repz
xchg
fwait
in
lds
stos
in
addr16
cmc
cmc
fistl
out
cld
fistps
push
or
or
sbb
shl
sti
cwtl
sbb
stos
test
mov
fwait
add
push
pushf
and
dec
pop
aas
addr16
push
push
pusha
mov
dec
popa
sti
sbb
pusha
or
and
test
adc
push
jno
idivl
xor
nop
mov
lock
push
pop
jbe
call
sub
ret
scas
mov
rorl
jns
push
jbe
sbb
mov
fwait
dec
outsl
pop
pop
call
pop
mov
inc
jl
andl
sub
sub
or
mov
mov
sub
dec
lret
mov
cmp
mov
into
pop
lods
mov
xlat
sub
pop
pop
movl
fstpt
mov
xchg
jo
insb
lret
adc
xchg
xchg
cs
in
sbb
mov
dec
inc
jo
cli
bound
sarb
popa
push
cmp
jbe
outsb
scas
add
add
sub
mov
adc
pop
repz
cmp
shrb
and
push
xchg
xchg
xchg
daa
mov
ds
dec
hlt
add
pop
js
imul
mov
mov
xchg
orb
xchg
jb
push
mov
sub
xor
cli
fs
pusha
sbb
hlt
ljmp
je
jbe
shrl
mov
sub
xchg
fs
jmp
xor
adc
pusha
push
inc
insb
and
sub
arpl
push
insb
lret
pushf
jns
push
test
lods
jle
xchg
xor
std
ljmp
fstpt
mov
jl
xlat
cmpsl
adc
add
mov
xor
repnz
pop
jg
cmpb
push
jno
fidivrl
out
loop
push
shrb
adc
push
mov
ret
in
in
or
test
icebp
mov
in
pop
inc
sub
mov
pop
xor
and
in
sub
xchg
fimuls
fs
sbbb
sahf
shlb
dec
fwait
mov
rolb
addb
mov
and
pop
push
sub
sub
sbb
adcl
pop
lahf
dec
insl
cld
std
cmp
je
mov
mov
mov
or
sbb
int3
stc
lret
sub
adcl
pop
and
fs
int
out
mov
and
es
arpl
xor
idivb
or
xlat
test
ss
jbe
negl
push
dec
les
leave
push
repz
out
cmp
scas
pop
lahf
gs
es
jg
lret
lock
imul
ljmp
popf
int3
aad
mov
pop
stc
cmp
nop
inc
lea
pop
pop
push
icebp
inc
sub
mov
mov
cltd
cld
jg
mov
push
sub
mov
loope
jmp
pop
rcll
lcall
sub
xchg
in
das
jne
mov
xchg
mov
cmp
int
and
adc
out
imul
data16
xchg
imul
push
lds
out
xchg
sbb
bnd
mov
lret
mull
fnstenv
push
push
sub
lret
xchg
andl
cmc
inc
mov
hlt
mov
inc
push
mov
lret
mov
pop
xchg
pusha
mov
stos
mov
outsb
xchg
pop
lret
in
push
into
sbb
paddd
or
mov
sahf
push
frstor
mov
out
inc
shlb
inc
fcomps
lods
cmc
mov
xlat
pop
inc
movsb
nop
cmp
into
lods
jle
push
rep
pop
out
pop
xor
scas
pop
js
and
lock
push
jmp
insl
jb
jb
in
mov
nop
inc
mov
jne
mov
pusha
mov
or
cmc
popl
icebp
mov
xor
iret
ja
outsl
inc
stos
xor
test
push
out
mov
cmp
push
sub
adc
mov
std
ljmp
pushf
icebp
shl
push
pop
and
sub
add
mov
insl
mov
sahf
pop
push
icebp
es
adc
cwtl
test
mov
push
add
add
xchg
xor
pusha
dec
pop
jg
in
mov
and
les
repz
jnp
scas
stos
xchg
insb
push
push
arpl
and
push
pusha
push
mov
pop
scas
or
push
jnp
lds
sahf
and
lods
clc
mov
lods
addr16
jns
sti
stos
aaa
cld
adc
cmc
push
inc
mov
sbb
adc
mov
jno
pop
mov
and
pushf
stos
sbb
adc
push
cmp
sub
dec
add
insb
jle
push
xchg
cmc
data16
xor
push
xor
pop
add
pop
xchg
fsubl
addr16
bound
and
rcll
mov
shr
in
jns
push
aaa
mov
shr
and
dec
fcomps
mov
scas
sbb
add
xchg
push
lret
ja
mov
std
or
out
xor
mov
mov
add
testb
cli
out
in
outsb
xchg
outsb
jne
les
dec
pop
out
sti
leave
inc
je
cmp
xor
mov
js
push
jg
lock
cltd
iret
movsl
cld
push
add
sbb
push
push
ss
orb
inc
fdivl
je
jmp
cs
fiadds
push
mov
ret
lds
pop
jl
and
jg
add
jge
test
ret
rolb
sbbb
js
cmp
dec
loopne
jne
mov
jg
lds
jmp
add
mov
dec
pop
adc
aad
ficoml
rcl
inc
in
mov
mov
mov
leave
int
pop
adc
fstpt
jo
lret
les
adc
lahf
fsubl
inc
mov
cmp
jae
jmp
inc
inc
imul
cmp
and
sbb
mov
cld
push
push
push
jp
inc
push
loop
sbb
pusha
xor
stc
in
xchg
xor
xchg
pushf
adc
cmp
xor
dec
adc
push
cmp
scas
insb
mov
jg
enter
mov
out
and
loope
xor
sub
push
sarb
sarl
fists
outsb
adc
mov
mov
jb
mov
sbb
push
cmc
push
pop
test
pop
test
call
jl
icebp
mov
or
jmp
adc
neg
push
shll
jbe
scas
shlb
cmc
fisttps
or
push
pop
cld
shr
les
pop
sahf
inc
das
jmp
mov
stos
pop
mov
push
aas
xor
adc
lds
dec
push
or
pop
out
cs
pop
bnd
sbb
mov
mov
or
sub
movsb
cmp
sub
xor
out
in
inc
scas
xchg
pop
adc
jbe
dec
fcmovu
es
hlt
adc
ja
rorl
insb
xchg
xor
loopne
xor
xor
mov
out
call
cmpsl
xchg
mov
and
push
push
fcoms
mov
leave
inc
cmpsb
push
cmp
xor
xorb
mov
mov
fstpt
sbb
inc
push
push
sti
push
dec
stos
repnz
xor
loope
xchg
int3
mov
and
push
ret
inc
mov
sbb
pop
pop
int3
lret
xor
test
cmpsb
stos
mov
bound
loop
addr16
adc
or
push
repz
insb
jbe
jge
movsb
sub
dec
adc
mov
fcoms
mov
fwait
inc
xlat
mov
add
jl
cmpsl
rcr
test
mov
pop
sub
aad
ja
imul
lock
pop
sbb
jo
mov
lcall
pop
inc
cmp
aam
mov
push
leave
pop
inc
sbb
lret
and
xchg
sub
test
mov
mov
inc
les
sub
dec
or
inc
mov
add
scas
jb
adc
push
xchg
lods
push
icebp
int
pop
test
sti
in
cltd
into
popa
sarb
cmp
das
out
push
pop
lods
out
fcmovne
fidivs
rorl
stos
lods
xchg
add
mov
add
xchg
push
or
pushf
sbb
mov
fsubrl
test
jge
inc
push
dec
sub
lock
outsl
pushf
rolb
es
repnz
in
sarb
pop
or
inc
xchg
jne
movsl
add
rorb
icebp
cmc
mov
es
fdivs
lcall
aas
push
jno
dec
sub
jne
movl
xchg
loopne
dec
loop
xchg
jmp
push
test
adc
lock
pop
and
fs
xchg
pop
xor
xchg
jge
loop
sti
push
out
dec
adc
rolb
loope
scas
popf
out
test
push
mov
js
mov
data16
xchg
push
mov
pop
lea
sarl
jmp
rclb
sbb
sbb
insb
mov
subb
sub
and
popa
orl
pop
cld
and
data16
xchg
popa
sub
jnp
xchg
aad
xor
scas
mov
mov
ljmp
aam
sub
inc
test
sbb
or
cmp
out
stc
mov
stos
inc
out
add
std
xchg
mov
lds
sbb
jle
sub
fisubrs
inc
add
rcrb
xchg
xchg
xor
rdmsr
xor
mov
mov
ss
cmpsb
cs
sahf
mov
mov
dec
sbb
cmp
adc
mov
jmp
out
mov
pop
movsb
or
movsl
fs
jg
scas
fldenv
adcb
ret
xor
cmp
pop
lds
mov
lods
push
dec
cltd
push
cmp
xchg
lock
xor
adc
mov
jb
into
and
xchg
pop
xor
mov
or
lods
pop
out
inc
clc
cli
dec
pop
push
mov
movsl
sub
inc
dec
push
int3
xor
mov
pop
mov
xchg
mov
pop
sbb
sbb
mov
aas
and
push
mov
push
stos
cmpsl
pop
xor
mov
add
rorl
cmp
push
xor
pop
cmp
scas
int3
inc
cmp
push
and
pop
stc
int
movsl
les
mov
cwtl
fs
sbb
or
xor
clc
push
cltd
dec
pop
iret
push
imul
test
and
cs
ljmp
xor
addr16
js
dec
jmp
or
adc
mov
out
inc
stc
jno
out
test
loopne
mov
and
push
sar
or
enter
add
cmpsb
ss
or
mov
subb
push
movsb
fldt
cmp
push
jns
mov
andb
fidivs
ret
jae
add
push
push
cmp
jp
adc
add
xor
fimuls
insb
in
mov
inc
add
xor
mov
imul
cmc
les
es
jmp
mov
mov
push
sub
enter
stos
ret
or
lock
xchg
xor
sub
imul
mov
cmc
cmp
pop
mov
jno
addr16
dec
cwtl
mov
mov
or
push
dec
xor
inc
xor
mov
fldl
adc
sti
insb
pusha
cmpb
or
outsl
pop
mov
rcl
pop
pop
dec
sbb
into
mov
mov
fisubrs
xor
pop
call
dec
jl
in
mov
dec
popf
fdivrs
push
jl
jae
jb
sbb
or
es
xor
add
push
cmp
and
mov
pop
jmp
dec
ret
xchg
add
mov
add
pop
jl
aaa
pop
pop
lods
lret
roll
jbe
fldcw
loope
sbb
or
mov
mov
xchg
arpl
fstl
fwait
stos
stos
fldcw
test
add
push
dec
icebp
fdivl
cli
add
pushf
std
sub
push
or
out
hlt
jle
cmp
out
enter
js
xor
or
popf
mov
jb
mov
cmp
pop
mov
popl
fstl
dec
inc
adc
out
inc
sbb
hlt
lock
xor
sbb
mov
faddp
test
lret
mov
mov
das
push
jle
push
shll
pop
in
test
out
xor
jo
call
bound
or
push
push
dec
push
jp
orb
and
sub
lret
out
jmp
lret
mov
ret
pop
and
rcrl
outsb
and
es
inc
adc
rcrb
scas
lea
loop
push
push
mov
fs
xchg
sub
ret
repz
das
in
push
mov
xor
insb
int3
shrb
sbb
sti
xchg
jp
les
dec
sbb
sbb
cmp
sub
xor
imul
sub
adc
fdivrp
cmc
test
add
cltd
movsb
xlat
cmc
cmpsb
sahf
add
mov
sbb
dec
adc
pushf
test
xchg
cmp
in
fnstsw
push
int3
sbb
cmp
and
sub
in
xchg
in
or
lods
pop
sbb
jno
movb
cmc
cmp
hlt
inc
jo
xor
mov
jnp
lahf
sub
mov
fimuls
loop
icebp
dec
xor
lret
adc
fdivrp
ror
rcrl
pop
cwtl
aas
push
push
push
fwait
cwtl
ds
or
adc
repz
or
fldl2t
lret
mov
adc
and
sub
push
int
mov
add
shl
jge
dec
push
cmc
mov
mov
sbb
fidivrl
inc
in
nop
mov
inc
inc
sbb
cli
inc
dec
cmp
cltd
insl
and
inc
pop
aas
test
stos
out
outsl
jno,pt
push
inc
pop
shr
mov
cmpsl
les
adc
popa
aam
test
ficoml
iret
out
lcall
adc
les
mov
fs
mov
filds
add
push
xchg
imul
in
sbb
fisubs
out
dec
hlt
popa
mov
add
lret
icebp
rorl
xor
lcall
mov
cmp
iret
jno
mov
loopne
popf
cld
clc
xchg
or
pop
dec
mov
jae
mov
enter
int3
mov
out
sbb
fcmovbe
inc
addb
clc
sub
rol
jle
sub
ss
xchg
jbe
popa
cmp
and
mov
fmull
jg
mov
in
jmp
sarl
ret
out
pop
push
repnz
jns
mov
insb
push
cmp
inc
arpl
push
fcoml
mov
jecxz
enter
imull
cmp
int
sbb
rorl
clc
push
sbb
mov
ret
das
mov
and
mov
push
jg
rcrb
jo
add
pop
into
dec
pop
xchg
imul
or
enter
mov
and
ret
cwtl
leave
imul
jnp
lea
sub
fcmovnu
inc
int
mov
xchg
mov
pop
std
inc
insl
lret
xchg
xchg
and
cs
add
lock
leave
xor
dec
xchg
push
scas
push
inc
mov
adc
pop
pop
jge
stc
cmp
cmc
pop
cmc
in
ficomps
lea
pop
mov
loop
cmp
xchg
mov
mov
stc
jmp
bound
sbb
or
fnstsw
pop
icebp
inc
xchg
push
out
jmp
push
or
enter
cmpsb
xor
rolb
test
stos
mov
jae
loopne
or
mov
mov
stos
pop
sub
je
in
sahf
fwait
decl
push
xchg
lock
out
out
cmp
rclb
cmpsl
rolb
outsb
xchg
mov
in
dec
mov
popf
xor
or
clc
inc
jmp
shlb
fadds
pop
sbb
cmp
es
pop
push
dec
clc
pop
mov
mov
adc
sbb
popf
sbb
mov
xor
sar
fnstenv
sub
or
insw
fistl
sub
inc
mov
addl
ja
and
out
mov
in
sbb
addl
or
shr
fwait
rol
in
cmpsb
jl
push
inc
inc
cmp
aaa
dec
cmc
jnp
add
inc
out
ret
mov
lea
sbb
cmp
or
and
loop
and
sahf
sarl
outsl
mov
outsl
mov
rcrb
inc
ret
repnz
loope
pop
dec
mov
mov
sahf
mov
sub
dec
inc
jno
addr16
inc
fisttpll
test
shlb
adc
jne
inc
into
or
xor
add
lods
sub
fmull
mov
xchg
sbb
lods
aas
inc
xchg
test
and
or
xchg
fwait
rclb
aaa
test
lcall
out
xchg
int
fnstenv
xchg
out
jb
push
and
mov
pop
pushf
pop
xor
pop
mov
imull
mov
ret
or
aam
les
ds
mov
mov
lret
jmp
lds
adc
adcb
push
scas
push
test
popf
stos
mov
fcmovnb
cmpsb
mov
ja
add
out
fld
sbb
dec
rcrb
mov
ds
push
push
adc
lods
pop
js,pn
mov
in
popa
and
cmp
bnd
rcr
in
sub
xchg
in
and
bound
stos
ja
je
cs
or
sub
sbb
mov
movsl
repnz
sti
xchg
jo
roll
adc
pushf
adc
jae
dec
push
notb
in
xor
push
xor
mov
push
sub
pop
imul
jecxz
in
inc
cmp
jbe
mov
mov
mov
adc
lods
fnstcw
xor
sahf
cli
popf
or
lods
out
mov
pop
pop
xchg
mov
pop
mov
cld
jmp
fisubrs
xor
movsb
jns
rcr
enter
out
mov
dec
mov
push
xchg
scas
daa
mull
jne
cmp
out
sbbb
in
into
mov
dec
add
or
cmp
jecxz
add
mov
pop
int
push
jmp
push
stc
and
push
int3
sub
dec
xlat
sub
xor
sub
push
jle
pop
push
imul
adc
addr16
inc
sbb
aas
subb
or
orb
and
lret
add
setae
clc
movsb
stc
data16
cmp
dec
mov
popa
arpl
sub
inc
icebp
jnp
test
aas
mov
xlat
add
mov
jmp
cmpsl
lock
into
fs
dec
std
in
pop
andl
dec
mov
scas
xchg
adc
outsl
sub
cmc
test
jg
ja
mov
cmpsb
sub
adc
mov
dec
imul
pop
aaa
outsl
nop
enter
fmuls
popf
dec
or
push
repnz
xorl
mov
jg
sbbb
sub
xchg
addb
sbb
fisubrl
aam
xor
movq
test
pop
xchg
inc
js
cmpb
das
and
pop
in
dec
adc
aad
xor
dec
data16
xchg
mov
dec
imul
mov
fldcw
mov
stos
push
push
jbe
xorb
in
cwtl
cmp
pusha
aaa
sbb
sbb
push
and
inc
mov
mov
in
push
and
mov
cltd
loopne
cmp
push
fstpl
fcomps
sub
sbb
bound
jo
or
popf
push
xlat
cwtl
inc
or
dec
stos
jmp
xchg
mov
inc
inc
adc
xchg
dec
rcrl
push
mov
aaa
inc
jmp
sahf
push
dec
ds
in
or
out
int3
push
xchg
inc
adc
mov
std
cmpsb
ss
lods
out
lahf
in
pusha
outsb
push
mov
ljmp
call
and
or
std
or
mov
pop
mov
shrb
je
sbb
sub
add
roll
push
mov
jp
lcall
movsb
or
xchg
dec
aas
push
cmp
pusha
inc
push
fcmovb
cld
cmp
cmp
mov
cmp
xor
mov
xchg
nop
jl
mov
adc
std
sub
jb
pusha
mov
lods
int
xor
jg
lret
mov
jecxz
ret
adc
fs
in
pop
lcall
xchg
imul
shrb
pushf
mov
lret
jge
repnz
clc
mov
pop
jmp
xchg
adc
cmpsl
push
push
and
in
fisttpl
and
cmp
or
lock
das
std
or
lods
xchg
stos
ss
add
mov
dec
and
mov
push
mov
push
add
popf
dec
ret
push
xchg
mov
leave
mov
es
mov
mov
mov
jmp
add
js
call
les
clc
dec
cmp
mov
in
loope
ficoms
scas
stos
loopne
and
ja
in
shrb
scas
ljmp
cmp
movsl
mov
mov
test
sbb
hlt
ss
cmp
movb
ffreep
mov
int
xor
call
inc
add
jbe
ror
add
mov
ret
mov
or
clc
ffreep
leave
mov
stos
lods
lods
mov
mov
add
cwtl
fisubl
add
sub
mov
dec
leave
add
sbb
int3
adcb
out
hlt
addr16
fnstcw
cmp
addr16
cmp
add
popf
xor
xchg
icebp
pop
clc
addr16
xchg
mov
pop
cmp
pop
aas
int3
pop
cmpsb
push
sbb
adc
xor
dec
cld
call
mov
loop
jo
mov
push
repz
adc
push
xor
leave
and
sti
xor
movsl
mov
jecxz
in
cmp
repnz
mov
and
xchg
xor
loope
mov
dec
iret
xchg
mov
sub
arpl
int3
dec
mov
mov
inc
add
popa
insl
push
shlb
cmp
aad
sbb
inc
movsb
cwtl
pop
mov
cld
mov
fisttpl
cmp
jmp
cli
pop
aad
cmc
shld
xchg
mov
std
ss
repnz
notb
fcoms
xchg
sbb
sub
mov
add
xchg
addr16
push
hlt
mov
imul
lret
cmp
adc
mov
jno
push
pop
mov
dec
sti
imul
cmpl
andl
in
ss
negb
mov
aas
out
fnstenv
stos
movsl
jnp
mov
std
cmp
loope
cmp
insl
cs
ds
stos
push
xchg
idivl
ss
js
cmp
mov
sahf
mov
rclb
cmp
fidivrs
test
fwait
pop
ljmp
cwtl
call
outsl
mov
repz
push
jns
ss
dec
jbe
and
and
ds
sbbb
sti
and
mov
dec
mov
imul
mov
leave
sbb
scas
stos
int3
xor
sub
jp
lret
inc
fcmovnbe
fsub
jecxz
mov
mov
cmp
and
mov
cmpsl
sub
sub
es
mov
pop
cmp
cmp
std
xor
pop
push
inc
mov
sbb
sbb
lahf
mov
add
aam
arpl
inc
pop
ss
out
loopne
pop
sub
call
mov
out
popf
outsb
or
shll
dec
jns
sysret
add
fwait
int3
call
inc
ja
jno
xor
icebp
popa
subl
jns
mov
mov
ret
and
fisttpll
mov
mov
ja
shr
add
rorb
pusha
adc
inc
loop
push
in
jne
xlat
sbb
jne
jmp
rcll
cld
or
lcall
or
pushf
mov
jg
clc
adc
xchg
xchg
cmp
ficompl
cmpsb
scas
jns
in
push
mov
cmc
mov
xchg
jb
jge
out
arpl
lods
dec
dec
pop
mov
testl
mov
test
jecxz
int
dec
outsl
or
loop
cmc
or
aaa
sbb
push
sub
xchg
and
cmc
jno
inc
add
inc
jl
adc
bound
sub
or
jp
mov
dec
mov
daa
lods
or
cwtl
mulb
cmp
fcompl
cli
in
xchg
sub
fldenv
push
mov
adc
push
inc
movsb
inc
and
bound
lods
neg
hlt
pop
fisttpl
ljmp
mov
jns
in
cmp
loope
sub
loope
outsb
lods
ret
push
sub
jg
in
mov
inc
pushf
mov
push
in
push
lahf
mov
push
and
std
lret
ficomps
int3
jp
into
jno
mov
dec
fs
mov
adc
bound
rorb
fnstenv
jp
cmp
rol
sub
iret
jle
popf
aam
add
push
cli
fstpt
adc
out
aaa
sahf
fbstp
dec
push
test
comiss
push
sbb
jno
jle
and
mov
cs
popf
cmc
lods
jno,pt
test
icebp
ja
mov
sub
fstpt
jecxz
loope
mov
mov
xor
test
out
iret
rcl
add
mov
dec
cmp
out
fiaddl
push
call
pop
add
or
mov
rorl
cmp
pop
ret
cmpb
jnp
xchg
testl
out
in
js
loopne
sbb
pop
es
jecxz
sbb
imul
jne
rorl
sub
push
jg
sub
push
es
mov
jge
cmp
xchg
pop
add
sub
cli
dec
js
xchg
dec
mov
inc
or
cmpsl
lcall
sub
lock
push
outsl
sti
imull
fdivrp
push
dec
in
mov
clc
popa
and
inc
div
or
cld
out
mov
jo
in
shll
adc
fldcw
xchg
test
movsb
dec
jle
push
sbb
sub
push
jne
mov
sbb
scas
scas
sbb
add
scas
mov
aas
push
stos
int
adc
ret
dec
shl
pop
inc
subl
adc
xchg
pop
into
repz
in
push
xor
aaa
cld
xchg
and
bound
and
enter
jbe
lods
loope
dec
out
add
adc
pminsw
dec
bound
aaa
mov
cmp
call
pop
dec
loope
jns
push
push
ficompl
cli
faddp
sub
out
test
fimull
adc
and
cmpsb
xor
popf
and
xchg
insl
jle
test
enter
xchg
imul
cli
add
jmp
xchg
dec
negb
data16
sahf
ror
mov
lret
cmp
das
mov
sbb
jecxz
jl
fcoml
inc
inc
test
decl
mov
aam
cmp
fwait
jb
push
nop
jecxz
je
add
push
mov
lcall
daa
out
inc
in
movsb
popa
push
jl
jecxz
mov
push
xchg
xchg
test
gs
imul
adc
icebp
mov
ficoms
dec
inc
ja
fbstp
sbb
mov
adc
cmp
mov
testb
fcoml
pop
jecxz
pop
bswap
call
iret
fcmovb
ja
and
or
adc
push
outsb
ja
cmp
xor
mov
mov
inc
int3
and
int3
sub
xor
mov
push
dec
adc
sbb
sbb
jbe
or
test
loope
jo
pop
jle
repz
aas
cmp
repz
loope
push
push
pop
mov
or
cmp
mov
xchg
jge
xchg
into
lcall
imul
jg
dec
adc
imul
xor
out
add
inc
enter
add
enter
js
icebp
pop
jmp
jge
mov
outsl
xor
push
js
mov
and
lods
into
fdivrs
popf
xlat
dec
cli
loop
lret
add
or
lock
out
mov
ljmp
pop
or
test
cmp
sub
cs
into
outsb
movsb
repz
mov
xchg
movsb
inc
out
jno
int
rorl
xchg
mov
and
sbb
das
fstpt
scas
ds
mov
xlat
xchg
cs
sbb
inc
xchg
jne
sbb
inc
test
scas
test
sbb
dec
and
bound
cmp
cmpsl
mov
lods
ret
fiaddl
in
mov
insl
icebp
jl
mov
mov
mov
push
lahf
mov
jo
arpl
inc
mov
xchg
pop
sarb
push
popfw
mov
adc
out
cmp
stos
adc
pop
pop
sub
lret
fisubl
xor
add
inc
cmp
pop
sbb
dec
mov
sti
add
sub
cwtl
pushf
xchg
dec
mov
adc
mov
lcall
data16
cmpsb
aad
insb
adc
out
ja
push
out
push
rcll
pop
loop
cli
xchg
insb
sub
test
inc
and
add
test
pop
xchg
or
dec
push
add
mov
test
mov
jmp
push
push
dec
dec
sub
xchg
inc
fidivrs
mov
rolb
mov
daa
inc
js
add
mov
xchg
jae
jmp
dec
add
push
dec
inc
xor
lret
xchg
out
adc
mov
mov
lds
xlat
dec
jle
idivl
pop
adc
stos
mov
insb
xor
adc
insb
leave
shrb
and
adc
fisttps
cmc
sub
sbb
fwait
add
jnp
or
pop
sbb
pop
movsb
add
jle
mov
test
aam
xor
cmp
in
sub
push
ljmp
pop
pop
icebp
inc
jecxz
bound
insl
gs
ss
push
lods
test
ljmp
lea
daa
pop
xlat
shrb
iret
jb
push
es
xor
sbb
xor
fdivrs
mov
stc
bswap
xlat
mov
jge
mov
jle
pop
fisubrs
mov
xchg
sbb
sbb
test
test
movsl
lahf
mov
out
jl
inc
aaa
ljmp
into
bound
pop
test
sub
fwait
sahf
stos
in
shlb
mov
test
xor
lcall
shl
arpl
insl
data16
mov
mov
mov
cmc
in
add
add
mov
iret
ss
dec
xchg
inc
sarb
cmc
aam
pop
in
arpl
push
xor
test
push
aam
cwtl
inc
jge
push
int
test
adc
mov
cmp
push
mov
notb
and
stos
xchg
jne
ss
inc
iret
and
inc
push
inc
xor
stos
sbb
inc
pusha
mov
lret
xor
lods
idivb
sub
incb
mov
sbb
cmpsl
orb
loope
aaa
outsb
shll
scas
xchg
int
mov
inc
mov
stc
test
push
cmc
pop
xchg
out
idivl
inc
pop
adc
arpl
popf
pusha
nop
push
inc
dec
jmp
adc
sub
mov
adc
stos
jae
sub
in
push
push
outsb
pop
or
icebp
out
popf
or
jbe
fwait
and
mov
and
cmc
xchg
mov
jmp
dec
popf
inc
fimull
testl
mov
push
ljmp
std
test
jbe
out
nop
rol
jns
test
push
bound
dec
fs
push
test
pop
lret
mov
popf
jp
push
fisttpll
lods
icebp
lock
dec
shll
inc
out
mov
repz
sub
loope
lea
sub
mov
push
call
xchg
mov
and
std
scas
out
daa
pop
stos
ucomiss
enter
cltd
hlt
mov
cmc
sar
xchg
push
insl
popa
ficomps
scas
cld
xor
mov
mov
xor
cltd
in
cmp
scas
call
mov
out
cli
xchg
clc
or
push
ret
rolb
outsb
std
inc
cmc
push
fwait
lahf
in
or
push
jge
test
ret
iret
inc
xchg
je
xchg
ss
subl
mov
inc
add
pusha
pop
mov
stos
add
mov
ljmp
pop
shll
or
repz
cli
jb
cmp
mov
xchg
orb
or
jbe
jae
mov
add
or
data16
mov
xchg
shrl
scas
int
fwait
pushf
push
scas
das
sbb
and
mov
loop
repnz
cmpsb
insl
mov
cmpsb
lods
mov
rolb
or
sti
les
mov
cwtd
jns
or
repz
cmp
int
push
mov
call
fdivl
xor
lret
leave
cmp
insb
and
or
xchg
roll
addr16
out
fwait
xor
ljmp
push
addr16
fists
iret
cmc
ds
add
xchg
or
inc
xchg
ja
cmc
pop
xlat
test
fidivrs
cmpsl
jg
inc
rorb
dec
mov
out
fnstcw
dec
pop
out
mov
sti
addr16
btr
shl
ret
xchg
stc
out
mov
push
aaa
sbb
loopne
insb
ja
push
pop
push
and
and
lods
or
mov
push
cmpsb
in
jne
iret
lods
aad
add
mov
js
jg
jo
pop
and
inc
loope
sbb
fcmove
aad
clc
fdiv
repnz
fcmovnu
mov
jns
inc
dec
xchg
sub
nop
mov
sbb
push
test
insl
pop
arpl
je
pop
sbb
sbb
pop
pop
jmp
sbb
mov
sbb
stos
in
mov
jo
cmpsb
divl
mov
mov
cli
jmp
ffree
and
and
fidivrl
xor
mov
sub
dec
xor
fists
dec
outsl
imul
add
fwait
mov
in
daa
fcoml
dec
or
addl
loop
push
push
adc
mov
xchg
js
push
adc
mull
push
push
inc
jo
mov
test
pop
add
push
mov
int3
push
daa
or
xchg
popa
push
mov
sarb
and
xlat
pop
or
adc
dec
mov
adc
or
insb
sub
mov
xor
mov
pop
insb
daa
xchg
dec
mov
cmpsb
in
fs
pop
mov
cmp
xor
ja
lods
ja
dec
adc
push
pop
jns
mov
push
or
fsub
test
in
vpsrlw
addr16
fbstp
movsl
adc
call
inc
pop
sub
and
inc
dec
push
data16
shlb
and
jge
das
inc
movsb
out
in
and
cld
mov
and
push
enter
fwait
cmp
push
movsb
js
sub
out
je
mov
test
scas
stc
cwtl
lods
mov
ficoml
add
adc
push
mov
pop
jns
cmpl
xlat
fnstsw
inc
movsl
push
arpl
cmc
jle
imul
dec
and
pop
imul
and
lods
lahf
mov
psubusw
push
imul
jne
repz
push
and
mov
xchg
test
leave
popa
ljmp
xchg
sbbl
out
mov
dec
sbb
add
cvtdq2ps
adc
dec
test
or
xorb
mov
or
gs
inc
jno
xchg
pop
xchg
mov
test
push
push
adc
sub
jmp
push
in
adc
mov
and
mov
push
pop
inc
mov
push
das
sbbl
inc
jge
push
dec
in
adc
adc
sarl
add
loop
dec
stos
inc
dec
mov
fdivrl
add
bound
aas
inc
push
dec
in
dec
das
jb
ljmp
jmp
dec
and
pop
add
and
in
loop
and
inc
cld
xchg
enter
rcr
lret
int3
in
ja
jbe
cltd
adc
push
mov
and
xchg
add
mov
cli
mov
xchg
pop
dec
cmp
dec
cmpb
inc
bound
xor
sbb
push
pop
js
sub
lock
push
pop
cwtl
jae
rol
rolb
push
push
and
mov
insl
and
cmp
mov
aad
sbb
out
shrb
add
loope
lret
push
add
das
fidivrs
inc
dec
inc
jne
int3
mov
repz
mov
fstpl
xor
sub
rorb
mov
enter
ret
jg
gs
sbb
outsb
or
xchg
out
aam
bound
pop
pop
add
sbb
push
fdivl
shl
and
jmp
mov
push
push
mov
outsl
out
aas
inc
mov
xor
divb
shrb
sub
mov
mov
pop
pop
das
loop
jne
ss
adc
ret
fdivs
sbb
adc
push
xor
pop
mov
leave
jmp
bound
hlt
mov
mov
fistps
mov
popa
dec
aaa
adcb
pop
push
mov
and
clc
mov
cmc
adc
ficoml
cmpsb
fiaddl
loop
adc
fidivrl
pop
inc
lock
mov
ja
test
arpl
pusha
test
mov
ss
push
into
repz
call
mov
inc
int3
cmp
dec
xor
fidivl
mov
enter
push
clc
cwtl
scas
jnp
test
mov
rorb
cmp
mov
orl
sbb
mov
cmp
fs
frstor
sub
and
jne
imul
leave
stos
xorb
dec
dec
xor
imul
loopne
jl
popa
in
loope
leave
mov
mov
pop
xchg
imul
lock
inc
ret
ret
sub
loope
sbb
imul
pusha
mov
dec
mov
mov
fbld
test
cmc
jge
mov
cs
adc
test
sub
push
icebp
daa
lds
and
repnz
lret
or
or
imul
cmp
inc
rorb
hlt
jb
pop
outsl
mov
loop
jae
lcall
daa
insl
addr16
jmp
lods
cmp
movsl
push
cmp
cli
aas
xchg
xor
jae
jno
xlat
mov
frstor
mov
adc
sbb
push
pop
mov
push
js
cld
xor
ja
mov
scas
dec
pop
sub
hlt
jmp
xchg
xor
push
adc
dec
aam
sbb
int
test
xor
fs
inc
mov
rclb
scas
push
test
fisubl
in
scas
mov
fsubl
pushf
and
cmc
pop
add
or
push
pop
push
xor
mov
jmp
loope
mov
xchg
repnz
cmp
fwait
jne
test
sti
xor
mov
lcall
jb
clc
push
mov
mov
sub
int
inc
adc
add
popa
jbe
mov
adc
das
cld
cmpsb
sahf
xchg
stc
and
pusha
repnz
mov
incl
jb
dec
adc
inc
jmp
mov
jbe
cmp
ret
jmp
in
jne
inc
repz
add
lcall
or
popf
lea
xor
xor
adc
adc
dec
fucomip
push
or
ja
xchg
insl
pop
popf
std
fs
mov
pop
repz
push
nop
mov
into
push
mov
test
lahf
and
jo
push
or
shll
rclb
jbe
test
mov
aaa
or
adc
mov
and
jg
jl
data16
xor
jg
push
push
add
ja
push
je
push
push
shr
inc
push
sub
xchg
mov
xlat
or
in
movsb
popf
in
lea
icebp
iret
jo
adc
icebp
xchg
dec
push
add
jbe
into
jp
cmc
xor
inc
lods
add
xchg
mov
or
mov
je
add
pushf
gs
push
call
xchg
scas
pop
add
movsb
push
aas
aaa
icebp
or
aaa
je
push
adc
inc
test
or
adc
jo
sub
lret
push
push
pop
loop
je
js
pop
pop
ret
aas
dec
pop
jo
adc
leave
push
xchg
lret
outsb
test
inc
popl
ljmp
fnstcw
and
js
cltd
xchg
shll
sub
test
push
sub
push
pop
mov
and
in
aaa
and
inc
add
int
add
sub
sbb
push
movsb
adc
or
stos
inc
xchg
into
pop
in
out
mov
jnp
mov
ret
in
sub
pop
jbe
aad
repz
nop
and
daa
int
cmc
insl
xor
cltd
jmp
cmpsb
cmp
mov
jp
push
mov
dec
lods
inc
cwtl
jmp
fistps
flds
xlat
inc
cli
inc
jbe
jae
sbb
fidivrs
mov
cmpsb
aaa
and
jnp
adc
sbb
sbb
xor
adc
push
je
mov
and
fs
in
pop
adc
fwait
mov
dec
out
sbb
sub
addr16
mov
mov
into
cmp
clc
adc
in
out
pushf
jg
and
fiaddl
repnz
cltd
loope
xor
cmc
and
mov
cs
inc
pop
mov
out
adc
ss
pop
push
cmpb
sub
in
in
aas
lods
lret
cs
cwtl
je
mov
mov
cltd
data16
xchg
test
orb
lods
push
mov
hlt
inc
jo,pt
pop
mov
push
fwait
xor
inc
sti
push
sub
imul
xchg
pop
mov
lcall
mov
dec
das
jecxz
sub
sub
rcll
ds
daa
lock
out
test
push
cwtl
mov
lods
push
fcomi
lahf
rcr
inc
mov
mov
jns
pop
mov
mov
repz
sti
mov
int3
nop
pusha
mov
movd
cmp
imul
jecxz
insl
inc
mov
mov
mov
addl
into
mov
gs
jae
adc
dec
dec
data16
adc
stos
repz
pop
out
xor
pop
xchg
mov
gs
jno
mov
fidivs
dec
jae
leave
xor
cmp
pop
or
xor
mov
notb
ficoms
or
pop
pop
mov
adc
rcrb
and
add
xchg
cmp
fcompl
pop
test
sub
jmp
mov
movl
push
lods
pop
std
fwait
push
or
je
arpl
stos
adc
insl
cmp
outsl
jmp
xchg
mov
cmp
sub
loop
inc
pop
mov
jnp
cld
xchg
arpl
push
cltd
enter
cwtl
call
inc
subb
pop
pop
ss
cmc
pop
pop
jp
ret
lcall
mov
and
and
pop
xor
adc
pop
mov
insl
push
xor
aam
stos
xchg
std
jle
js
stos
lret
outsb
aaa
jae
into
mov
lock
test
jns
cmp
cmp
jp,pt
push
faddp
xchg
out
jle
jnp
xor
xor
ret
and
inc
pushf
arpl
pop
testb
out
lcall
mov
cmp
push
mov
add
cmp
push
mov
call
push
adc
push
dec
and
lret
cmp
js
jecxz
or
lea
inc
fbstp
ss
or
int3
imul
cmp
xor
mov
sub
push
ljmp
stos
pop
outsb
xchg
out
push
sbb
enter
test
inc
shll
cmovne
pop
push
pop
lea
int3
add
mov
xor
repnz
jl
pop
aad
jne
cmp
mov
jo
cli
xchg
iret
lds
jo
loope
lsl
out
addr16
pusha
das
fimull
repnz
es
jmp
inc
in
cld
jbe
lret
dec
shr
ficompl
lret
inc
ds
test
fwait
inc
aas
dec
aad
dec
lock
std
push
pop
add
xor
imul
sub
cld
jo
aad
inc
push
cmp
mov
inc
mov
push
sbb
mov
aas
push
es
jle
adc
inc
sub
dec
stos
or
mov
sbb
cmpsb
dec
jg
nop
lcall
mov
stos
add
mov
insl
mov
fistl
lret
lcall
xchg
cmp
adcl
fdivl
repnz
shrl
aam
enter
int3
jl
sahf
xchg
pop
dec
lcall
jbe
xchg
into
packsswb
in
cmp
int
stos
sti
inc
repnz
pop
jo
testl
int
add
add
negl
icebp
aam
cmp
das
lods
jle
push
inc
stc
lret
dec
or
adc
mov
cmp
lods
or
adc
xchg
mov
fadds
inc
mov
bound
pop
mov
out
movsb
test
add
xor
cwtl
push
xchg
in
inc
dec
mov
dec
adc
das
mov
xlat
adc
push
jle
and
out
dec
fcoms
test
stos
shrb
cmpsl
adc
add
add
dec
lock
adc
push
mov
jno
and
dec
jle
aad
cmp
add
gs
gs
test
inc
inc
mov
xchg
xchg
push
orb
push
ja
fistps
push
inc
jns
pop
sbb
jns
add
adc
lcall
mov
in
popf
xor
add
xor
mov
mulb
cmc
in
lock
in
addr16
and
shll
int
mov
andb
adc
mov
fsubrs
xchg
sbb
stos
stos
dec
outsl
clc
pop
add
fmul
lds
iret
sub
js
out
jmp
xor
insl
loop
jne
das
daa
xchg
scas
mov
inc
sti
jo
test
xor
pop
clc
lods
adc
inc
add
and
push
out
cmpl
sub
mov
mov
mov
adc
push
add
cmc
dec
xor
fisubrl
imul
cld
and
ret
shlb
lea
cltd
das
inc
movsb
notb
jo
daa
repz
fcmovbe
loope
popa
dec
lds
inc
jmp
insl
or
lea
or
inc
inc
xor
cmp
push
mov
xlat
inc
repnz
sub
mov
or
in
mov
xchg
aas
and
cmp
mov
pusha
mov
cmp
fidivrs
cmpsb
push
cmp
pop
popf
iret
jbe
jge
or
ds
lcall
push
xchg
adc
mov
ds
mov
bound
pop
imul
lods
lahf
iret
mov
cmp
and
and
cwtl
popa
push
and
lcall
hlt
in
fistps
xchg
sub
mov
movsl
or
push
fcomps
ss
jb
mov
loope
xchg
inc
call
test
div
sub
rcrb
pop
enter
and
imul
xor
addr16
loop
mov
push
outsb
cmp
xchg
sub
aas
jbe
xchg
adc
ret
dec
sti
or
sub
sub
scas
mov
pop
mov
ficoms
push
mul
js
xlat
cmp
jb
jmp
mov
call
subb
xchg
out
and
mov
xchg
cmp
cmp
pop
jne
mov
mov
faddp
repz
sub
xchg
and
add
xchg
adc
test
mov
or
in
sti
fistpl
inc
mov
shrl
mov
mov
es
xorl
testb
or
sbb
xchg
addr16
iret
js
lods
imul
cmc
dec
xor
add
pusha
int3
out
mov
mov
inc
push
fucomip
pop
mov
lret
push
movsb
sbb
inc
mov
rclb
xor
fldcw
test
mov
shll
xchg
xor
jo
fisubrs
sbb
sbb
cld
mov
repnz
cmp
push
into
mull
and
xchg
add
sbb
jecxz
xor
xor
fisubs
cwtl
push
ret
shl
mov
mov
daa
js
push
lea
ret
not
xchg
test
addr16
jg
loope
test
insl
int3
inc
cs
movsl
sub
std
dec
mov
push
cmc
and
ret
xchg
or
jns
repnz
lock
bound
inc
cmp
push
cmp
xchg
dec
scas
xchg
pop
mov
lret
outsl
dec
scas
or
mov
cmp
xchg
pop
jle
arpl
add
adc
inc
push
xchg
mov
call
ja
jecxz
cmpsl
pop
pop
adc
sbb
pop
fdivr
outsl
jo
in
int3
jo
sti
sub
jnp
add
jnp
shrb
nop
xor
cmp
adc
mov
or
push
and
cmc
xchg
cld
add
inc
cmpsb
sbb
xlat
jp
lock
inc
push
test
push
subb
push
sub
lods
jl
rcrb
cltd
out
bnd
pop
mov
mov
inc
imul
push
movsb
push
adc
or
negl
shl
jne
xchg
and
cmp
aam
addr16
sahf
add
jne
cmpsl
mov
divl
ljmp
imul
mov
iret
mov
push
xor
iret
aam
inc
ja
sub
rcll
jno
daa
adc
clc
aas
fidivs
movsl
shrb
fs
pop
mull
inc
in
fildll
pop
push
enter
loopne
mov
gs
cli
xchg
je
shll
xor
dec
jl
xchg
mov
out
jp
sbb
lds
mov
test
aas
jbe
xor
xchg
ret
push
call
pop
out
test
in
mov
mov
into
or
adc
ljmp
adc
add
rcll
leave
mov
stc
in
ja
aas
adc
adc
or
cmpsb
push
addr16
ret
test
outsb
shlb
jb
ret
add
aaa
xchg
hlt
lret
push
inc
std
subb
add
scas
iret
out
mov
add
mov
aad
pop
ja
mov
shl
addr16
pop
mov
push
cli
sub
mov
mov
dec
mov
rclb
sbbb
inc
jge
inc
icebp
addr16
mov
xor
loop
cmp
mov
stos
and
sub
adc
test
in
imul
hlt
rolb
jae
sar
cmpsl
add
ficomps
daa
xor
ret
inc
rcrb
ljmp
cmp
mov
lods
jo
rcrl
les
repnz
mov
insb
inc
inc
adc
mov
data16
std
push
das
inc
push
rorb
xor
push
popa
cmp
inc
jle
xchg
mov
lahf
aas
jns
lods
pop
and
pop
mov
inc
push
ljmp
jb
cld
test
cmp
inc
lret
mov
jle
push
adc
dec
xchg
add
adc
repz
xor
and
loope
shr
and
push
and
adc
aaa
sbb
pop
pop
pushf
xchg
outsb
xchg
lret
push
dec
adc
dec
push
fdivrl
fsubs
dec
stos
je
inc
add
cli
mov
lods
push
movsl
out
and
push
fwait
cli
xchg
cmp
cmpsl
mov
insl
lock
dec
cmp
sub
mov
test
out
imul
mov
inc
jl
in
or
xlat
fisttps
imul
jge
loopne
or
cltd
and
inc
lahf
imul
dec
push
sub
mov
and
movsl
popl
mov
std
pop
cmpsl
dec
aaa
jnp
cmpl
lods
pusha
dec
outsb
xchg
adc
cmpsb
pushf
enter
cmc
leave
or
fstl
iret
and
mov
out
adc
rclb
lret
jle
xchg
pop
repnz
mov
or
dec
push
push
xlat
roll
insb
mov
sbb
pop
fsubp
popa
test
pop
xchg
xor
sub
dec
jno
div
in
ss
mov
cmp
test
movsl
rcrl
daa
mov
adc
arpl
arpl
loope
sub
dec
and
dec
insb
lods
lds
push
fisttpll
nop
pushf
pushf
fisttpll
in
cwtl
nop
sbb
out
jo
insb
scas
or
xchg
jl
std
xchg
adc
inc
out
imul
xor
in
shll
pushf
xor
and
insb
scas
mov
cmpsb
inc
ja
iret
dec
adc
xchg
jecxz
mov
and
pusha
inc
jp
xor
dec
mov
push
adc
cmpsl
mov
cs
lock
test
popf
imul
cmpsb
and
lds
inc
mov
ljmp
stos
shlb
int3
cld
dec
xchg
xlat
fsub
mov
jns
cmp
mov
dec
push
lods
xchg
cmpsb
push
out
out
and
add
data16
jle
test
cli
imull
std
fiadds
inc
shlb
aaa
movsl
fwait
push
jecxz
xchg
mov
mov
push
push
xchg
scas
push
roll
inc
lock
std
sub
loope
into
dec
addl
sbbb
clc
imul
or
dec
cld
add
cs
dec
dec
adc
popa
out
mov
sub
mov
fwait
xchg
pop
fwait
aas
xlat
cwtl
and
jmp
dec
and
mov
adc
pusha
fdivl
in
scas
mov
popa
mov
or
mov
addl
int
lock
test
stos
inc
ds
ljmp
fldenv
into
shlb
push
pop
dec
cmc
fld
insl
ss
les
loope
lret
loopne
sbb
dec
hlt
hlt
push
das
std
shrb
mov
cs
jge
and
or
ja
mov
mov
fidivl
bound
cmp
ja
data16
jmp
dec
or
pop
inc
cmp
push
pushf
pop
adc
xchg
xchg
js
jmp
jae
xchg
cmp
add
imul
dec
add
xorl
lahf
aam
mov
dec
aad
and
insl
imul
lret
inc
inc
xchg
mov
or
jl
add
dec
push
enter
push
insb
jg
xorl
pop
cmp
sbb
mov
sarb
mov
insl
inc
mov
jmp
call
lods
dec
dec
aad
mov
pop
js
inc
xchg
flds
sub
and
sub
jp
jae
pop
inc
sub
xor
jge
jns
push
shlb
popa
lods
lds
pop
push
enter
iret
sub
dec
popa
fmul
cmp
int3
aas
fnsave
mov
push
dec
mov
fnstcw
lcall
lret
dec
stos
xchg
test
xchg
pop
push
cmc
bound
jge
in
ljmp
imul
lret
pushf
sarb
fiadds
jne
xchg
add
pop
lret
sub
add
sbb
fcoms
xor
add
mov
out
stos
lahf
mov
test
movsl
aam
imul
or
cmc
in
mov
mov
iret
mov
cli
cmp
or
mov
dec
movsb
movsb
sbb
xor
inc
repnz
pop
repnz
add
rorl
das
adc
jmp
and
xor
js
sbb
sub
sub
add
pop
stos
or
push
in
std
lret
jbe
mov
out
pusha
mov
fs
cmp
jle
adcl
xchg
jge
in
pop
adc
shll
sub
lock
or
loop
adc
inc
rclb
xchg
push
addr16
adc
pusha
pop
das
or
mov
out
and
mov
rol
push
push
aam
jb
cmpsl
mov
mov
stc
jge
dec
mov
fisttpl
subb
mov
shl
lret
mov
stos
in
filds
aam
ja
call
fistps
fstpt
jge
sbb
adc
stos
inc
add
loope
mov
pop
stc
inc
dec
mov
push
aas
xchg
rclb
loopne
inc
icebp
mov
dec
sub
mov
add
jnp
sub
iret
pop
cmc
movsl
popf
cmp
je
test
arpl
xchg
sbb
mov
add
ljmp
insl
in
sahf
loop
imul
popa
in
sbb
ja
lret
xor
fs
and
lahf
lea
add
jp
sbb
mov
test
xchg
shl
inc
and
pusha
iret
jns
jno
dec
aas
jae
mov
cmpsb
fidivrs
repz
rorb
and
mov
pop
fnstcw
or
cmp
cli
jg
dec
lods
dec
ret
mov
or
mov
and
lea
sbbl
add
cltd
dec
sahf
jne
loope
mov
sub
loope
aad
daa
push
fisubl
sub
pop
out
mov
jb
notl
push
ds
aam
mov
xlat
dec
outsb
sbb
xchg
mov
or
xor
dec
arpl
inc
dec
push
xchg
mov
mov
jns
push
decb
repnz
xor
out
sub
xchg
cmp
fwait
mov
sti
cltd
and
inc
stc
push
pop
and
stc
xchg
dec
inc
fnstcw
in
outsb
sbb
fcompl
fwait
rolb
or
dec
lea
cmp
xchg
xchg
outsl
pop
jo
aas
int
push
lods
lcall
or
nop
mov
sahf
mov
jo
push
adc
fs
push
mov
inc
xchg
pusha
add
in
ja
dec
push
addr16
repz
sub
lods
add
jmp
pop
cwtl
jle
mov
dec
xchg
int3
pop
cs
enter
loop
mov
xlat
sub
stos
xchg
out
jo
jo
push
popa
or
lock
clc
and
inc
cwtl
sbb
push
inc
mov
daa
mov
aaa
shl
shlb
mov
mov
sbb
sub
outsb
fcoms
mov
int3
hlt
jl
dec
mov
popa
add
mov
lock
roll
jge
movsb
mov
push
sub
push
jo
and
jo
decl
add
shr
cld
ret
mov
cwtl
gs
mov
loopne
out
inc
pop
and
xlat
fidivrs
push
and
gs
cli
inc
dec
sub
add
shll
test
xchg
xor
xor
xlat
or
div
fnstcw
dec
pop
cwtl
sub
out
pop
cmp
or
cld
jnp
adc
outsb
ds
flds
popl
sub
fldt
test
mov
popa
jecxz
and
sbbl
test
xor
int3
imul
mov
scas
test
dec
aad
or
push
sub
lahf
or
xchg
loopne
popa
shrl
stos
es
jne
aas
jo
jmp
mov
mov
mov
dec
enter
mov
sbb
and
ror
dec
mov
add
iret
jbe
dec
stc
push
leave
mov
inc
cmpsl
mov
rcrl
mov
repz
in
sahf
pop
mov
movsl
cmp
mov
jge
mov
repz
mov
sbb
outsl
mov
loopne
cmpsb
push
mov
lret
fadds
or
out
stos
mov
int3
jle
jbe
pop
nopl
jmp
mov
adc
mov
loopne
test
out
dec
outsb
adc
loop
xchg
or
lahf
insb
sub
iret
push
popl
or
mov
xchg
mov
lahf
out
mov
jne
xlat
in
inc
ds
imul
mov
adc
les
incb
push
adc
mov
fdivrs
mov
mov
aaa
mov
fistpll
inc
cmp
mov
fdivl
add
and
inc
ud2
lret
push
pop
jns
sahf
notb
jnp
mov
movsb
lahf
and
jp
push
mov
fisubs
fsubr
jo
mov
push
int3
add
mov
mov
je
push
and
sarl
fldl
fldt
and
scas
dec
cmpsl
cmp
inc
fidivs
jge
cmpsl
or
mov
shll
add
insb
mov
test
cmpsb
cmp
pop
sahf
lret
push
mov
add
adc
and
push
jmp
sahf
lock
inc
xor
push
mov
lahf
xor
cmp
jmp
cld
call
sbbb
iret
out
add
adc
xchg
xchg
out
jo
mov
lock
nop
push
sub
xchg
std
mov
in
push
lods
jne
cwtl
sbb
shlb
add
pusha
movd
mov
sti
push
aam
outsb
cs
cmc
jb
and
mov
rcrb
lods
test
jmp
inc
out
sahf
xchg
push
lss
fdivrp
jg
mov
fs
pop
shlb
outsl
cmp
push
push
popa
push
push
sbb
and
dec
sbb
xchg
jl
jge
cs
or
ds
add
fdivs
data16
mov
and
aad
add
in
pop
push
insb
xchg
mov
mov
jmp
mov
cmp
xchg
fwait
cltd
jmp
mov
xchg
mov
adc
push
or
or
xor
test
and
std
ret
adc
adc
and
cli
inc
add
jne
fs
std
enter
and
or
mov
lret
ja
or
fildl
lret
filds
sub
jns
test
sub
sbb
sub
mov
in
popa
repz
adc
inc
pop
loop
xor
sbb
nop
mov
movsl
sub
sub
das
jns
pop
pushf
outsl
mov
dec
fs
into
mov
sbb
push
sbb
stos
mov
les
std
inc
cld
sub
adc
ljmp
popf
push
clc
sub
cmpsl
test
adc
bound
mov
pop
adc
into
mov
sbbl
repnz
js
pusha
adc
test
scas
out
push
xchg
xchg
lret
jl
cli
push
out
jae
sub
ja
inc
sub
push
or
test
jno
jo
jae
rclb
movsl
gs
xchg
sub
aad
xchg
xor
mov
add
xor
xchg
jne
adc
mull
dec
stos
popa
push
sub
mov
adc
das
pop
daa
jns
push
fdivl
cld
mov
shl
subl
lret
shrl
xlat
fldenv
sbb
lcall
imulb
xchg
pop
cmp
jl
jmp
arpl
movsl
arpl
in
push
mov
out
cwtl
push
pusha
and
jb
popf
ss
scas
int
leave
sbb
lret
cltd
lock
mov
cld
outsl
and
sbb
rclb
imul
inc
mov
fdivrl
dec
repnz
jl
pop
mov
dec
lods
push
shl
popf
popa
fwait
add
pop
test
ss
ss
lods
jmp
cld
mov
scas
add
arpl
jns
lock
mov
in
shll
xchg
mov
mov
mov
int
add
dec
call
movsl
jnp
cmc
in
and
popa
jne
add
push
ret
lcall
mov
and
shll
bound
jmp
cmp
inc
sbb
lret
jl
push
out
jnp
xor
mov
andl
movsl
std
mov
mov
cmp
insl
xchg
aam
xor
test
mov
xchg
jle
jbe
in
jle
dec
aad
xor
pop
movl
popf
inc
rcrb
inc
ror
inc
cltd
or
loope
call
pop
cmp
mov
das
aaa
aam
xor
scas
push
leave
aas
cmp
daa
filds
lds
mov
and
sub
sbb
loop
push
ret
fists
scas
std
lcall
or
daa
cmp
xlat
mov
sub
xchg
test
or
fs
lahf
push
push
or
ficoml
inc
int3
fs
pop
jne
inc
std
vcmpsd
pop
push
mov
xchg
dec
int3
lahf
fs
lea
cmpb
pop
mov
push
xor
rorl
insl
mov
adc
sub
lock
js
and
mov
mov
insl
std
add
lds
cmc
jb
adc
mov
addl
xor
into
cmp
scas
testl
mov
lcall
add
out
mov
mov
ret
int3
cltd
bnd
lock
fwait
add
or
aam
fimuls
aad
jae
xchg
cmp
pop
and
int3
lods
mov
imul
mov
insb
jo
add
cmc
je
lret
mov
jae
insl
bound
nop
arpl
push
stos
loopne
enter
lret
xchg
or
push
movzwl
sar
pop
dec
bound
testb
in
mov
push
sbb
cmp
push
or
jno
lods
xor
jmp
data16
jb,pt
mov
ffreep
call
inc
jne
nop
cmpb
add
pop
fiaddl
in
mov
aas
dec
jne
es
fxch
imul
imul
fwait
push
inc
adc
in
sbb
out
adc
je
ljmp
sbb
dec
ljmp
jle
pusha
push
or
test
sbb
cmp
mov
mov
fcoms
xor
aaa
push
shll
cld
rorl
mov
xor
addb
js
or
or
andb
popa
mov
sti
xor
add
push
pushf
xlat
push
pop
jle
inc
imul
sub
je
mov
les
ja
xchg
mov
jmp
xor
jns
sbb
mov
mov
movsb
loopne
push
outsl
inc
stc
add
xchg
jnp
or
add
fwait
mov
in
push
mov
pop
sbb
pushf
and
divb
sarl
inc
loop
loope
mov
and
xchg
pop
sar
push
cli
data16
fisubl
push
add
imul
sbb
rorb
fiadds
and
cmc
mov
mov
push
push
in
aaa
in
rcr
ret
sahf
and
cmp
push
push
and
in
fmul
repnz
mov
cmp
mov
mov
push
mov
enter
imul
inc
dec
push
sbb
movsl
and
cmpsb
cmpsl
loopne
mov
or
xchg
xor
stos
pop
shrl
jno
xchg
ss
sbb
leave
and
out
or
mov
sarl
xchg
rcr
inc
sti
mov
cmp
pushf
int
pop
mov
fstl
and
aam
pop
out
add
pop
adc
xor
shlb
mov
ficoml
xor
daa
lea
das
jne
sub
and
cmp
or
adc
js
movsl
loope
or
fidivrl
mov
ljmp
movsb
cltd
roll
int3
dec
sbbb
fsubp
sbbl
xor
mov
xor
mul
lds
out
jbe
xor
push
cld
clc
iret
xchg
mov
sbb
cmp
cmp
jae
add
mov
out
outsl
mov
pop
outsb
fs
stos
and
enter
cmpsl
push
xlat
dec
fisttpl
rorb
out
lods
pop
ret
outsl
lock
sbb
pop
movl
out
sub
push
push
arpl
lea
lahf
push
mulb
js
jl
cmp
ds
mov
xchg
lret
jl
or
lret
clc
pop
cli
nop
mov
inc
jne
pop
mov
iret
mov
push
inc
mov
xor
push
sarb
cmp
out
popa
push
fbstp
mov
aaa
sbb
loope
mov
dec
fisubl
mov
add
lds
xchg
test
or
loopne
adc
aad
mov
repnz
int
je
adc
popf
call
sub
test
mov
fldenv
ss
stos
push
and
lahf
test
and
jns
in
paddw
fidivrs
sbb
lods
sbb
ss
ds
pop
aad
addr16
jae
xor
sbb
and
data16
call
pop
call
jns
sub
and
xor
nop
dec
jg
inc
out
test
jnp
lods
flds
and
aaa
adc
sahf
or
xchg
popf
or
int3
add
in
rcrb
stos
and
cmp
roll
stos
fldcw
pop
xchg
jle
sbb
mov
mov
nop
push
xor
pop
test
sub
decl
ss
les
cmp
fcmovu
sub
gs
popa
xchg
mov
push
scas
dec
sub
and
aad
dec
loop
sub
xor
lods
cmpsb
push
cmp
sub
push
lea
sahf
mov
lahf
xor
push
lods
gs
sarb
cmp
pop
push
xor
xor
xchg
ljmp
dec
aaa
ja
cmp
and
outsl
mov
pusha
popf
sbb
xchg
push
mov
sbb
ret
clc
mov
cld
out
jecxz
in
js
cmp
mov
enter
fisttpl
sti
shl
dec
rol
jns
ds
pop
add
mov
cmp
mov
scas
outsl
sub
jnp
insl
shll
push
inc
xor
rolb
test
jns
cmpsb
sbb
add
sub
mov
test
mov
xor
xchg
loope
inc
push
fiadds
push
push
jbe
push
cmc
jl
and
imul
jno
orl
pop
pavgw
xor
popa
pop
sbb
dec
xchg
pop
fistl
jns
xchg
push
mov
mov
mov
mov
xchg
shl
sub
or
jge
fnsave
fstpl
mov
sar
daa
das
dec
jnp
insb
xor
lods
adc
lds
cmp
jmp
xchg
xchg
ss
leave
jl
gs
adc
dec
push
loop
fcomip
push
mov
adc
lea
push
sti
lods
mov
shll
cmpsl
xchg
xchg
inc
mov
pop
out
pop
repz
xchg
push
xchg
and
adc
test
stos
into
xor
mov
je
mov
insb
cwtl
je
mov
ret
mov
std
mov
dec
aaa
scas
clc
ret
call
pop
sub
rclb
std
mov
mov
loop
sub
pop
cwtl
adc
ljmp
inc
pop
xchg
in
mov
add
add
fwait
cmp
sarl
adcb
ds
sbb
scas
mov
repnz
jp
mov
movsb
xchg
pop
cmp
inc
xchg
out
ja
push
ss
or
cmp
pop
call
ja
out
cmpsl
enter
mov
adc
std
or
pop
lcall
jl
mov
lret
jbe
xor
pusha
sub
lahf
cli
inc
push
icebp
dec
mov
std
xchg
repnz
push
ror
push
cmpsl
cmc
stc
inc
add
adc
leave
shl
adc
jge
lods
sahf
xor
push
mov
test
adc
nop
lock
adc
mov
or
cmpsl
mov
addr16
les
clc
adc
pushf
sub
cmp
test
mov
mov
cmp
xlat
push
sbb
pusha
pop
push
xor
inc
jns
push
push
xor
mov
outsb
lcall
jmp
dec
mov
into
jl
test
sub
and
cmc
ret
sarb
xchg
and
and
pop
push
push
repz
aaa
mov
in
add
xor
in
rorb
mov
mov
sub
ss
mov
mov
lea
fs
arpl
scas
pop
setle
fistl
repz
mov
iret
mov
mov
pop
std
and
fcom
les
pop
ljmp
sub
js
ds
xchg
pop
negl
pushf
jmp
lcall
cmpsl
sub
int3
xor
jne
fadds
loop
sbb
ja
cwtl
subb
mov
pop
idiv
and
jb
stos
and
pusha
adc
shlb
jne
inc
sbbb
mov
adc
inc
mov
cmp
adc
les
mov
aam
mov
pusha
pop
arpl
mov
or
dec
push
push
lcall
sbb
cmc
pop
cmp
dec
outsb
clc
inc
mov
or
or
fnstsw
pop
dec
outsb
repz
inc
out
out
jno
or
jle
pop
pop
sub
daa
dec
outsb
jnp
scas
and
roll
push
mov
fidivrl
sub
mov
cmp
sarl
js
inc
loope
push
push
daa
add
dec
pop
cvtdq2ps
push
add
push
ror
rorb
cli
hlt
shl
sub
lods
inc
pop
std
insb
sub
and
jl
mov
inc
icebp
fnstsw
es
jno
out
leave
xorl
pop
mov
ss
pop
stos
sub
adc
xchg
fs
xor
and
sbb
xchg
pop
sub
je
xchg
arpl
mov
ljmp
aam
push
xor
test
dec
pushf
psrad
jne
outsl
stos
popa
jne
or
mov
mov
or
lea
jmp
dec
dec
xor
cs
jge
cmp
in
cs
movl
das
sahf
hlt
scas
out
test
pop
mov
in
frstor
loopne
jge
daa
xlat
sub
dec
xor
nop
sbb
sbb
call
div
hlt
pusha
sbb
push
push
jg
test
sub
cmp
popa
in
loopne
pop
and
xchg
xchg
shlb
cmc
adc
and
adc
inc
mov
sbb
sbb
je
test
adc
popf
repnz
add
shrl
fcmovb
xchg
ljmp
inc
ror
testb
aam
gs
daa
dec
push
xchg
sub
dec
loop
xchg
or
rcr
inc
cmp
sbb
push
sbbl
mov
xlat
dec
bound
in
cmpsb
sub
dec
add
inc
outsl
idiv
mov
pop
lods
popa
ljmp
mov
aas
cmc
aaa
push
shll
jne
lcall
orb
dec
jmp
fcomip
and
aam
je
mov
cmpsb
sbb
mov
mov
cmp
idiv
iret
mov
or
lret
aas
ret
pop
and
cld
movsl
lock
das
jmp
cmp
jns
pop
xor
adc
inc
call
add
cmp
and
fisubrs
dec
cltd
add
sbb
imul
outsl
jbe
mov
dec
rcrl
cmp
xchg
cmp
scas
and
clc
inc
loop
jo
dec
pop
movsb
sub
mov
das
mov
in
daa
mov
push
aam
sub
push
lds
xor
add
mov
orl
stc
xor
mov
mov
xchg
and
call
mov
mov
int
dec
mov
mov
dec
hlt
pusha
leave
push
adc
mov
stos
adc
test
dec
mov
jbe
mov
jo
mov
jp
pop
call
dec
cmp
std
je
ret
xchg
mov
ret
add
outsl
cwtl
mov
add
sub
rcrb
shrb
pop
loop
xor
insb
neg
add
idivl
jg
xchg
push
xlat
mov
stos
cld
sbbl
add
insl
iret
test
inc
movsl
push
mov
cmpsb
out
rolb
vpsubsw
push
push
mov
lock
pop
jno
and
mov
or
clc
sbb
jo
pop
dec
sbb
adc
mov
sar
das
pop
dec
pop
movsb
jp
aaa
dec
mov
pop
lds
shrb
xor
imul
testl
jb
outsl
mov
and
xchg
mov
repz
ret
mov
cmpsl
xchg
and
test
cmp
jb
notl
out
pop
cmp
cs
mov
push
syscall
loop
fsin
mov
or
jae
lahf
cmp
icebp
dec
leave
scas
mov
pop
shlb
fidivs
cld
icebp
out
or
cmp
in
repz
mov
hlt
adc
mov
iret
jmp
sub
dec
jo
fldenv
aas
inc
mov
fdivrl
nop
jae
pop
inc
sub
xchg
mov
add
jnp
cmp
mov
movl
add
loope
popf
sbb
xor
aas
adc
data16
stos
mov
outsl
insl
pop
stos
pop
in
xchg
jbe
cmp
pop
and
sbb
cltd
adc
push
cmpsl
sub
mov
xchg
lock
rorl
cltd
movsb
lea
xor
and
mov
popf
add
lret
call
mov
cli
inc
js
jp
jle
sbb
lcall
scas
xor
ffree
jbe
jge
adcl
adc
shlb
aaa
aad
gs
pop
aaa
sarl
ret
dec
cmpsl
and
add
adc
call
mov
movsl
adc
jl
adc
push
repnz
sahf
xchg
roll
adc
cwtl
or
data16
xor
cmpsb
jl
aad
add
xor
or
jb
pop
add
jge
scas
push
imul
mov
cmpsl
pop
xlat
cld
or
fsubs
adc
repnz
and
mov
jl
repnz
int3
mov
aas
mov
dec
cld
mov
xlat
and
mov
xchg
lods
nop
repz
mov
cs
sbb
out
aas
cmp
arpl
outsl
pop
div
or
sarl
jl
jecxz
dec
cmp
pop
sbb
pop
xlat
mov
into
cmp
out
dec
outsb
add
lds
jae
dec
fnstenv
dec
iret
push
lods
jl
stc
pop
mov
mov
ret
dec
sub
into
sbb
ss
pop
hlt
sub
scas
adc
sub
out
inc
pop
jne
shlb
rclb
imul
das
outsb
mov
cmc
or
repnz
xor
add
lret
lods
dec
movsl
cs
hlt
sub
mov
jmp
xchg
mov
xor
xor
mov
out
cmp
or
data16
idivl
push
pop
fcoms
incl
push
inc
dec
in
push
dec
outsl
clc
out
xor
rcl
cmc
sbb
mov
cli
dec
fmuls
mov
and
lock
in
pushf
jecxz
cmp
test
aaa
repz
mov
imul
jg
xor
or
and
push
repnz
and
xor
push
and
fnstenv
testb
rorl
xor
or
and
dec
and
movsl
jecxz
enter
gs
or
cmp
xor
push
std
push
xor
push
enter
popa
ss
mov
mov
pop
cmpsb
xor
and
xchg
jnp
cmp
cli
call
xchg
sahf
fisttpll
insl
sahf
xor
fistl
mov
mov
inc
push
dec
daa
int
xor
dec
xor
stos
jbe
in
jbe
std
call
jg
mov
pop
mov
mov
nop
pop
sub
and
lret
and
inc
fwait
aaa
jb
push
sub
jle
cmp
xor
inc
or
rclb
rol
fmull
sbb
jae
pop
adc
cmp
cld
lock
xchg
inc
je
roll
test
sub
xchg
lcall
or
xchg
fstl
dec
jp
outsb
mov
inc
push
and
out
inc
and
mov
pusha
mov
pop
mov
jge
sub
fimull
mov
test
ret
and
es
cli
push
adc
aas
sbb
push
jge
popf
fistps
movsl
jge
mov
mov
or
cltd
dec
sahf
imull
push
ret
cmp
push
sbb
and
icebp
mov
mov
push
aam
mov
cmp
sub
test
pop
gs
add
and
cltd
hlt
scas
pusha
cs
mov
mov
test
cmp
mov
xor
movl
and
push
and
rcrb
pusha
xchg
daa
andl
add
pop
mov
mov
nop
mov
cs
popa
add
stos
cmpsl
ret
jp
je
mov
or
inc
hlt
fstl
and
jecxz
mov
pop
in
push
jae
cs
dec
movsb
cmpsl
mov
repnz
inc
ss
gs
popa
out
lods
int3
js
in
out
adc
aas
hlt
aad
sub
mov
adc
add
clc
sbb
sub
xchg
in
push
adc
pop
pop
mov
cmp
mov
jp
not
movsl
outsl
sub
mov
jo
cltd
data16
fimuls
cltd
loope
add
sub
pop
mov
mov
scas
inc
aaa
adc
push
jecxz
xchg
sbb
and
gs
xchg
cmp
dec
mov
stos
in
mov
xchg
mov
push
popw
cmpsl
addr16
xor
pushf
add
mov
jo
outsl
cmp
push
mov
call
mull
pusha
ret
out
inc
mov
fnstenv
xchg
fwait
push
add
mov
pusha
data16
stos
test
push
mov
mov
rolb
push
stc
sub
insb
mov
in
or
mov
test
inc
je
sbb
iret
inc
iret
sahf
lods
push
sbb
rol
pop
in
shrl
loopne
xchg
cld
ret
add
push
out
mov
xchg
movsl
dec
scas
iret
inc
and
or
and
shl
push
mov
rorl
dec
and
out
ja
add
mov
push
mov
xchg
cmpb
jnp
imul
rdtsc
jbe
pop
dec
dec
jecxz
push
push
and
sti
mov
out
fwait
lret
adc
in
mov
lds
out
daa
jge
cmp
vmovq
cmp
cli
pop
shrb
sub
sub
push
pop
fnstcw
add
xor
lds
push
imull
push
scas
pushf
shl
sar
add
sbb
lret
mov
popf
lret
pop
sbb
lods
cmc
push
sbb
inc
jns
mov
mov
cmc
xchg
mov
ja
push
jae
push
stos
mov
push
push
mov
xor
int
call
pushf
sub
cwtl
and
loope
jmp
xorl
sbb
xchg
or
ret
shlb
cmp
aas
jmp
sbb
mov
mov
jg
ljmp
dec
xor
out
inc
fidivs
or
bound
mov
sub
fs
mov
jge
sti
leave
lods
cs
stos
xchg
or
adc
in
xchg
cwtl
mov
push
push
gs
ficoml
or
and
dec
dec
mov
sub
jl
push
push
arpl
iretw
jl
shl
dec
mov
xor
mov
sub
jg
faddl
cmp
test
hlt
sub
xchg
push
outsb
out
addr16
shlb
xor
mov
loope
ds
out
and
mov
in
xor
adcl
xor
cmp
sub
out
mov
test
xor
movsb
cli
mov
insl
xchg
adc
lock
or
fildll
aad
loope
leave
inc
pop
fld
push
mov
lcall
mov
push
adc
push
cmp
imul
jbe
scas
add
adc
icebp
sbb
cli
lcall
outsl
incl
sub
mov
incb
xchg
pop
std
cwtl
cltd
mov
stos
scas
cmp
nop
outsl
inc
daa
push
dec
insl
sub
aam
ss
insb
pop
push
ss
jmp
jns
dec
pop
xor
imul
adcb
popf
rorl
into
pop
repz
jg
lea
mov
mov
shr
jp
mov
sub
xlat
adc
repnz
lahf
or
mov
fcmovnb
xor
mov
dec
mov
subb
or
dec
cmpsl
out
ljmp
push
push
leave
pop
push
xor
xchg
dec
jg
fwait
sbb
cwtl
aas
add
pop
sub
dec
out
cmp
push
jmp
ret
sub
pop
ja
shlb
mov
insl
push
loop
cmc
inc
lret
idiv
subb
add
test
mov
repz
inc
insl
les
add
pop
xchg
addr16
xor
ret
adc
imull
push
and
test
and
repnz
or
xchg
les
orl
jge
int
cltd
cmp
xor
rorb
mov
loope
out
js
inc
stos
inc
adc
stos
sub
cmpsl
fsubrl
fistpll
sub
or
fidivrl
add
js
add
pop
adc
cmp
pusha
and
mov
gs
cmpl
xor
inc
adc
ret
mov
mov
adc
xchg
dec
mov
jle
in
icebp
sti
imul
iret
jecxz
imul
adc
lock
add
shr
repnz
das
in
ficoml
mov
cmp
in
loopne
ds
mov
xor
push
cmpsl
xor
dec
jb
pop
or
dec
aas
push
int3
ljmp
mov
sbb
enter
push
xchg
daa
clc
mov
ffree
sbbl
push
lcall
inc
fstpt
mov
add
add
mov
xor
scas
xchg
mov
pop
repnz
mov
or
add
ret
jb
daa
inc
adc
cmpb
outsl
mov
sbb
mov
pop
cmp
sub
shll
aad
loop
sahf
pop
mov
pop
popa
cmp
adc
aad
push
lcall
add
inc
fists
mov
xchg
insb
das
or
adc
jmp
lret
roll
push
dec
ret
adc
xchg
mov
sbb
sbb
lds
es
aad
pop
outsb
hlt
lret
outsb
cld
and
fnstcw
pop
cs
popa
push
sub
pop
xor
sti
cmp
out
ds
shr
cmp
jecxz
fsubrs
movsb
add
xor
push
or
fisubs
dec
jne
dec
jl
push
cmp
push
lods
popf
pop
lret
jl
adc
xchg
setl
shll
fsubs
dec
into
stos
decl
xchg
xchg
add
mov
movlps
cltd
xchg
ficomps
cmp
and
in
nop
mov
in
or
cmp
pop
jp
cli
pop
hlt
leave
mov
test
pop
push
lahf
and
ljmp
int3
push
fldt
fistl
xor
sub
mov
loop
jbe
repnz
push
out
push
imul
outsb
mov
roll
in
mov
cmc
movl
inc
daa
jmp
xchg
and
sti
divb
pop
inc
icebp
inc
and
stos
adc
sub
roll
jnp
sub
nop
jge
cmc
pop
test
psraw
sahf
jl
movsl
mov
mov
sbb
aad
xchg
nop
inc
dec
mov
xor
or
jbe
cmp
scas
aam
aam
je
mov
sub
mov
test
testb
fstl
jp
pusha
ja
scas
fcomps
inc
shlb
jle
or
data16
push
pop
push
mov
jae
test
mov
mov
add
push
inc
cmp
fwait
enter
jl
ja
xor
push
repnz
cmp
loope
adc
mov
cmpsl
call
push
or
pushf
pop
push
icebp
mov
cmp
jno
popf
jae
int3
in
cmp
shlb
out
pop
in
push
xchg
das
jno
outsb
mov
pop
ds
xor
push
in
push
pop
out
insl
or
lods
aam
popf
outsl
ror
mov
mov
jne
cli
pop
leave
jbe
push
jbe
nop
mov
mov
cmp
xchg
adc
call
xor
es
or
cmp
dec
mov
mov
push
stos
call
or
outsl
jge
iret
xor
dec
xchg
cli
inc
dec
add
xor
fnstcw
adc
cmp
ret
inc
mov
inc
lea
cmp
jnp
lods
les
dec
inc
cld
lods
lret
sub
xchg
jp
mov
lcall
addr16
and
test
add
push
adc
dec
mov
mov
push
ja
lahf
ret
aad
pushf
push
fld
insl
out
and
fsts
in
stc
call
out
push
sti
xor
adc
pusha
out
lods
xor
add
pop
aad
push
sub
and
subl
mov
es
stos
cmp
mov
test
mov
es
mov
aad
insb
rcr
dec
mov
shrl
jmp
shrl
mov
cmpsb
fwait
scas
xchg
mov
aaa
cmpsl
scas
sbb
out
pop
push
adc
mov
pop
dec
xchg
push
mov
lods
xor
out
out
mov
push
xchg
cltd
ds
inc
jno
adc
jne
movsb
divl
xor
ret
in
loopne
in
outsb
cmp
pop
in
cmp
pop
sbb
rorl
out
cltd
mov
or
adc
pop
fdivrl
adcb
sahf
cmpsl
das
sbb
cs
cmp
jo,pn
jmp
dec
popf
dec
ret
enter
subl
adc
jge
in
add
or
cwtl
out
pop
out
xchg
and
mov
add
mov
jns
mov
imulb
rcrl
adc
mov
roll
outsl
addr16
and
pop
lsl
xchg
imul
in
mov
ja
cwtl
cmp
jbe
sub
xor
mov
add
arpl
push
pusha
sahf
jo
outsl
loop
cmp
jne
cs
outsl
jae
mov
ja
xchg
cmp
xor
scas
imul
lods
aad
inc
jae
sahf
adc
or
xor
mov
std
inc
add
in
xlat
add
mov
xchg
cltd
jl
and
push
leave
out
nop
and
clc
daa
add
js
jmp
in
ret
and
adc
push
and
adc
xchg
pop
fmulp
cmp
mov
xchg
pop
imul
rorl
repz
jg
inc
aam
dec
rolb
cmp
jecxz
inc
fcmovnb
les
in
push
scas
adc
call
mov
add
push
sub
pop
add
pop
cs
in
imul
les
add
imul
jo
adc
rolb
inc
jae
jo
mov
pop
push
or
in
imul
adc
ja
pop
xchg
loope
enter
or
ret
dec
cmc
cmp
pop
sub
ret
xchg
pop
sbb
jnp
stos
push
test
cmp
dec
shll
pop
cmp
fisubrs
pop
and
jg
ljmp
and
xchg
insl
lock
in
xchg
les
leave
les
out
ja
cmp
sub
adcb
lahf
fcoml
lods
sub
imul
mov
mov
sti
mov
in
mov
dec
sahf
mov
test
movsl
jns
push
xchg
xor
je
inc
sbb
stos
cmp
movsl
iret
fidivrl
aam
loopne
fwait
scas
sub
int
insl
fmulp
dec
mov
xlat
adc
data16
xchg
cmpsl
out
sbb
repz
test
mov
jae
mov
ljmp
mov
out
push
imul
add
icebp
or
xor
fsubrl
hlt
out
stos
dec
scas
imul
mov
sarl
shl
in
test
jle
inc
inc
jb
and
scas
imul
movsl
aad
inc
cmp
loop
push
not
int3
pop
sbbb
in
xor
nop
std
xchg
add
mov
pop
or
les
cmpsl
cwtl
xchg
push
aas
or
or
mov
pop
cli
pushf
shl
jge
inc
jnp
add
aas
loope
js
fwait
sub
inc
adc
dec
jl
jb
xchg
sub
lods
sub
insb
mov
and
aad
rclb
mov
cmp
fdivrs
sbb
jnp
inc
xor
in
test
and
loop
rcrl
push
lret
stc
jns
and
dec
push
out
ret
add
ret
stos
lods
inc
leave
add
and
fnstsw
in
scas
sbb
out
scas
loopne
aad
cmpsb
lret
add
sbb
inc
orl
and
aad
repnz
sbb
sahf
xor
pop
aam
inc
mov
and
cli
dec
mov
aam
fistpl
test
cmp
scas
addb
fiadds
lds
xor
pop
jl
lret
andl
push
pop
test
pop
iret
cli
mov
mov
or
test
imul
lods
xchg
adc
xor
sub
out
test
xchg
adc
jbe
filds
and
push
cmc
xor
ret
shll
mov
xor
imul
lret
ret
fsts
sahf
mov
add
adc
adc
sub
aam
cmp
dec
pop
xchg
mov
sti
fs
or
shll
inc
pop
or
lods
xorb
in
stos
popa
adc
mov
dec
jmp
enter
adc
cmpb
jno
adc
add
or
test
adc
js
dec
mov
sarb
adc
add
movsb
aaa
movsl
or
mov
sub
mov
ret
repnz
fcoms
ds
enter
imull
dec
jnp
push
pop
cmp
cmp
sarb
jb
xor
das
push
icebp
inc
jnp
into
jg
call
test
out
push
int
sbb
mov
test
pop
mov
ds
mov
movsb
dec
mov
cmpsb
xor
xlat
out
mov
repnz
imul
xor
jmp
xchg
dec
sbb
hlt
fiaddl
cmpsb
loop
xor
incl
cmp
add
sbb
call
clc
xchg
cmp
push
pop
adc
inc
fs
pushf
sahf
dec
arpl
push
aaa
or
mov
push
call
insl
divb
mov
loope
inc
jno
and
inc
cmp
mov
jb
fdivl
sahf
xor
cmp
fwait
sbb
cli
sub
daa
inc
xorl
cmpb
jae
push
into
popf
pop
movaps
mov
mov
pop
ds
pushf
int
sar
faddl
loopne
out
lock
in
pop
lock
push
fs
or
push
and
xchg
repnz
lds
adc
repnz
sbbb
push
insl
aam
adc
push
pop
xor
and
dec
xchg
stos
sub
pop
inc
imul
inc
mov
outsb
enter
out
and
dec
mov
pop
imul
fidivl
sarl
hlt
int3
mov
fstp
xchg
hlt
dec
je
fidivrl
into
repnz
add
dec
mov
popa
cwtl
jle
adc
sbb
push
pop
or
xor
fstpl
inc
sahf
loopne
fiaddl
stos
cmp
jmp
dec
push
ds
xor
xchg
rcl
ds
or
xchg
fldt
pop
pcmpeqd
adc
int3
adc
lds
pop
push
xchg
add
fnstsw
xchg
dec
call
iret
popf
dec
fwait
and
xchg
popa
cltd
outsb
hlt
inc
test
mov
insl
ss
ds
cmp
dec
mov
dec
cs
adc
xchg
jb
or
test
movsb
out
and
shll
jb
jmp
mov
xor
cld
xor
xor
push
push
out
push
xchg
jecxz
sbb
sub
fsubl
dec
mov
rcl
jmp
mov
sub
cmp
and
in
call
cmp
ret
or
ljmp
outsb
xor
lods
push
dec
lcall
dec
cmpsl
push
mov
sbb
stos
push
push
jecxz
popa
dec
cmpsb
xor
pop
dec
jno
jg
adc
das
inc
mov
pop
mov
sub
or
loopne
es
popf
cld
sbb
push
push
jb
push
fwait
mov
sub
add
xor
in
std
mov
fsubrs
jae
in
ja
mov
xchg
push
mov
movsb
inc
jecxz
pop
lahf
leave
mov
daa
test
shl
frstor
fs
add
cmp
rcrl
xchg
rol
xchg
sbb
adc
sbb
inc
sbb
lahf
daa
cs
mov
popf
or
sbb
rcl
pop
fldenv
aam
gs
sub
pop
mov
fs
aad
jg
lcall
faddp
push
and
popa
fstps
sbb
dec
es
pushf
mov
icebp
push
dec
and
sub
sub
push
test
call
mov
dec
sub
push
imul
push
sbb
pop
out
dec
in
mov
mov
cwtl
mov
jle
mov
xor
cmpsb
lahf
or
push
sbbb
push
inc
divb
jmp
aad
pop
outsb
mov
dec
xor
arpl
jae
mov
mov
pop
es
dec
mov
mov
or
cmpsb
mov
push
repz
adc
add
scas
fdivrl
mov
sbbb
ret
adc
xor
mov
jl
hlt
mov
je
in
les
aas
adcb
jp
pop
sub
cmp
scas
mov
cmp
in
std
jns
or
push
mov
mov
cmp
or
loop
movsb
mov
push
lds
and
inc
fwait
movsb
pop
js
adc
movsl
push
dec
movsl
jecxz
jmp
fs
cs
push
jmp
sub
push
mov
into
js
outsl
push
inc
aaa
test
jmp
lret
pop
iret
movsl
push
test
cmp
push
fidivl
ja
and
imul
push
fnstcw
loope
ss
out
loopne
flds
pushl
add
mov
daa
dec
ja
int3
push
lds
lds
enter
addr16
mov
call
inc
in
sahf
jns
and
ja
pop
sub
test
cmp
aaa
mov
rcrl
sahf
inc
imul
pop
push
adc
lahf
iret
push
sbb
lods
adc
xor
aad
std
fstl
xor
mov
mov
pop
in
aam
pop
pusha
pop
cmp
or
mov
in
sbb
into
xor
aaa
xchg
jp
jp
jmp
sub
lods
dec
cmp
lock
push
imul
jmp
inc
rol
notl
mov
cmpsb
inc
repnz
jp
mov
push
lret
or
push
sbb
leave
arpl
sbb
pop
inc
gs
stc
into
or
pop
adc
icebp
pop
insb
mov
jns
and
lea
lods
sbb
pop
jl
or
dec
movsl
dec
fcmovnu
or
test
adc
sbb
pop
lahf
addr16
jg
and
inc
out
xor
gs
fsts
int
dec
add
mov
sahf
rol
lahf
sbb
push
and
xchg
adc
jecxz
mov
dec
jmp
xor
mov
sub
popf
arpl
stc
xor
mov
push
in
cmp
pop
mov
in
dec
in
sub
or
stos
fsubrl
dec
js
call
dec
in
ret
xchg
and
icebp
mov
push
pop
jmp
gs
sarl
dec
es
mov
push
je
cltd
pop
xor
in
or
cmpsb
add
enter
sahf
lret
rclb
ret
movsb
addr16
cmpsl
push
lock
or
xchg
aam
sbb
push
scas
xchg
fs
imul
outsw
mov
mov
jmp
sub
es
popa
sti
mov
loop
es
mov
mov
stos
out
sub
fwait
imul
stc
out
adc
push
popf
int3
mov
lods
mov
sub
push
sbb
push
pushf
xlat
in
inc
outsb
mov
call
xchg
in
jecxz
push
push
dec
out
push
mov
mov
dec
test
dec
mov
ror
push
push
shrb
mov
aas
push
les
add
in
and
outsb
loop
mov
xchg
adc
fs
mov
inc
sub
dec
cwtl
or
adc
iret
leave
mov
lods
fsubrp
xlat
icebp
add
nop
iret
push
inc
xchg
mov
xchg
mov
push
mov
mov
xor
mov
xchg
insb
and
or
jmp
sub
and
xor
scas
or
push
or
sahf
jp
add
pop
push
das
out
jno
fwait
stos
inc
mov
xchg
setge
insb
data16
dec
and
mov
mov
int
push
popa
ljmp
jge
inc
adc
in
xchg
pop
roll
cmpl
in
mov
or
mov
add
pop
or
es
enter
rclb
push
mov
push
and
test
divl
jge
dec
shrl
mov
xchg
dec
jbe
cli
mov
std
cmp
pop
dec
push
aam
or
bound
orl
roll
dec
movsb
jbe
add
iret
jge
cwtl
cld
jmp
mov
icebp
add
hlt
enter
gs
cmp
sbb
out
cmpsl
mov
fucomp
mov
and
hlt
cmpsb
push
push
sub
fsubrs
pop
push
xor
inc
inc
aaa
repnz
push
mov
lcall
and
mov
pop
xor
inc
pusha
mov
insl
test
push
out
sub
xchg
inc
inc
push
psrlw
les
and
addl
pop
fidivrs
and
mov
loop
adc
or
repz
lret
inc
xor
lret
add
add
fcoms
lea
sbb
cmpsl
push
xor
ja
mov
ja
jecxz
es
pop
pop
ds
imul
and
pop
mov
adc
cmc
sbb
fsubrl
jmp
loopne
jns
cmpsb
imul
out
addr16
jl
das
pop
sbb
xchg
fisubrs
jle
xchg
mov
or
imul
enter
int3
stc
inc
push
pop
pop
push
mov
test
cmp
and
adc
cs
xor
repz
aad
shlb
outsl
dec
mov
push
pop
int
pop
hlt
das
cmc
in
aam
or
pop
push
mov
ja
mov
loope
and
stos
jns
popa
sbb
negb
lds
imul
in
rorb
fmull
fdivl
in
pop
push
les
inc
adc
ljmp
add
adc
movsl
jb
xchg
fs
inc
pop
add
es
push
lock
fsubs
sub
jo
aam
lret
mov
mov
rorb
cmp
push
in
xor
loopne
setge
jle
jb
push
inc
lea
mov
mov
sbb
pop
xchg
iret
cmpsl
pop
fistpll
push
not
test
imul
ja
arpl
pop
inc
sbb
adc
and
cltd
dec
cmp
adc
rclb
stc
xor
or
mov
clc
jb
mov
inc
or
arpl
in
fmul
dec
sbb
enter
out
and
add
cmpsb
testl
pop
scas
inc
push
or
imul
mov
and
movsb
mov
fsubl
dec
cmp
cmp
test
sub
inc
leave
sbb
in
sub
and
loop
cmp
imulb
mov
loope
mov
sbb
lahf
mov
ret
push
fstps
jns
sbb
loop
cmpsl
xchg
inc
outsb
jne
adc
lret
out
scas
jnp
or
dec
or
clc
aas
fwait
test
and
mov
test
out
ret
nop
xchg
stos
jb
jo
out
cmc
sub
xchg
fidivrl
mov
xchg
sbb
int
push
or
punpckhwd
pushf
push
mov
inc
ficomps
sbb
out
lea
jnp
scas
imul
fdivr
nop
insl
xchg
movsb
es
std
push
sub
movsl
mov
sbb
sbb
pop
mov
push
mov
xorl
inc
cld
negb
pop
aas
cld
mov
push
shll
add
in
mov
stos
push
dec
mov
or
hlt
xchg
jg
pop
pop
mov
shll
imul
fbld
pop
mov
call
mov
enter
xor
mov
cltd
ret
pop
stos
mov
shrl
shrl
jge
add
mov
data16
dec
push
mov
push
and
call
repz
imul
cmc
rcll
xor
cltd
sbb
xor
out
add
sbb
stos
cwtl
xchg
xorl
add
fsts
xor
shlb
sub
inc
add
sub
jo
jno
adc
xchg
mov
xor
adc
in
aas
cwtl
incl
insl
xchg
aad
fiadds
dec
ret
dec
aad
enter
lahf
sar
dec
in
xorl
inc
xor
pop
jbe
push
dec
jb
add
aad
stos
imul
mov
pushl
xchg
cmp
imul
fisttps
mov
push
imul
or
mov
mov
test
xchg
push
in
lcall
stos
xor
cmp
ret
cmpsb
jle
xchg
stos
scas
or
push
fld
jge
inc
and
jle
insb
mov
or
add
test
and
stos
inc
inc
fwait
hlt
hlt
or
repnz
jmp
pop
inc
xor
addr16
scas
mov
rorb
pop
xchg
xchg
cmc
cmp
mov
adc
mov
rep
add
incl
popa
xor
shll
add
jmp
cli
out
adc
sbb
out
pop
dec
inc
bound
jle
test
mov
out
sbb
sti
lods
ss
mov
push
mov
addr16
dec
mov
xchg
fcompp
movsb
xor
rorb
xchg
lcall
imul
insb
and
testb
mov
jg
movsl
jge
jns
sarb
sbb
sahf
mov
jl
fdivp
out
ja
test
icebp
fsub
imul
iret
out
sbb
sbb
add
push
mov
clc
and
call
daa
in
sbb
jle
aam
pop
sub
inc
jp
mov
les
xlat
rcrb
fwait
and
pop
push
orl
das
movsl
ja
gs
xor
add
or
divl
aad
mov
gs
filds
mov
js
int
dec
mov
xor
movsb
adc
push
push
cmpsl
lods
hlt
sub
les
int
cmpsl
popa
pusha
sbb
and
push
out
xchg
stos
mov
add
jbe
fidivrs
addr16
mov
insb
scas
dec
out
jle
dec
inc
add
xchg
aad
sbb
or
ja
cltd
inc
fiaddl
push
lret
mov
cmc
adc
aas
and
and
xor
fwait
mov
or
mov
test
out
sbb
cmp
nop
sarb
rorb
xchg
and
mov
rclb
cmp
cmpsb
mov
cmp
xchg
aam
lahf
add
out
nop
push
jae
test
repz
mov
push
jne
lock
mov
xchg
and
jb
sub
popf
mov
mov
jnp
cmp
nop
adc
add
mov
ljmp
sarl
int
int3
js
pop
pop
shll
rcrl
dec
add
scas
add
test
mov
and
dec
adc
jns
shrl
xlat
push
push
gs
outsb
cltd
imul
pop
fs
mulb
stos
jmp
cmc
mov
adc
repz
fadd
mov
sbb
jns
cmp
xchg
cmp
sub
xor
bound
movsl
jae
pop
sbb
cmpsb
dec
std
je
or
in
pop
cli
shlb
jo
or
out
sbb
lods
stos
xchg
pop
jp
xchg
call
shlb
loope
inc
cmc
shrb
mov
push
out
xor
call
leave
outsb
sahf
ficoms
pop
insl
or
push
dec
fldt
xor
inc
cld
push
jge
cld
mov
pop
jmp
arpl
stos
xor
frstor
add
shrl
stos
in
lds
or
xchg
or
sub
mov
loop
add
jle
stos
stc
out
ret
push
inc
cmp
pop
enter
into
lock
cmp
mov
fbld
movsb
xchg
aam
jo
lods
push
jg
or
addr16
andb
jno
or
movl
or
int3
clc
mov
ret
int3
shll
xchg
cmp
cmp
cmpsl
test
pop
sub
mov
jo,pn
stos
in
xchg
jecxz
inc
adc
sbb
inc
sbb
mov
jmp
inc
fwait
mov
cwtl
inc
inc
das
inc
iret
mov
push
and
xchg
inc
ret
push
int
fwait
pop
in
add
adc
icebp
lods
jp
or
adcb
cmpb
mov
dec
iret
and
mov
arpl
sub
pusha
pop
jno
push
mov
cmp
ds
adc
fildll
bound
push
frstor
xor
into
xchg
cwtl
ljmp
and
xor
pop
rcrl
sbb
push
add
cltd
orb
mov
cvtdq2ps
dec
adc
inc
outsb
mov
xchg
aas
je
cmp
dec
iret
and
xorb
xchg
cwtl
xchg
stos
imul
pop
inc
in
dec
lret
popf
fwait
push
pusha
mov
xor
inc
jae
int3
xchg
repz
inc
fdivs
or
and
sbb
ljmp
add
out
push
mov
mov
cwtl
fstpl
pusha
and
roll
push
or
pop
ret
out
outsl
xchg
imulb
jle
adc
xor
orl
out
jecxz
gs
sbb
ffreep
test
repnz
addr16
adc
xor
add
sbbb
mov
or
push
mov
jno
test
sbb
dec
lds
dec
pop
shrl
loopne
or
ror
mov
ljmp
push
pop
mov
mov
ja
dec
jno
and
and
sub
out
and
mov
ficompl
popf
scas
jg
mov
jb
mov
xchg
clc
aad
mov
inc
je
adc
adc
sbb
cmc
pop
mov
inc
fcomps
push
rcl
xor
jecxz
icebp
jp
xor
xor
fnstsw
jecxz
push
lcall
xchg
fildll
xor
jp
outsb
lods
int3
push
xor
outsb
add
movsl
inc
push
mov
out
cmc
inc
mov
lcall
mov
daa
inc
xlat
decl
sub
aam
adc
jmp
rcll
add
add
out
ss
fwait
or
and
add
jo
movsl
lahf
dec
sbb
pop
and
pop
hlt
push
lock
mov
subb
movsb
cwtl
int
hlt
fadds
xchg
jle
sahf
adc
or
mov
mov
out
mov
or
cmp
push
cld
test
ljmp
adc
mov
lock
les
addr16
mov
jne
stos
imul
sbb
stc
add
orb
pop
mov
add
ds
sbb
sub
push
mov
js
add
mov
arpl
fsubl
lahf
mov
in
jns
push
jnp
cmpsl
test
in
push
jge
rcl
mov
adc
rorl
or
jle
xchg
mov
jg
sbbl
mov
mov
pop
and
jno
fs
mov
lods
into
in
sub
mov
popf
jp
and
hlt
fmul
rcl
mov
mov
mov
mov
xchg
das
jg
mov
int3
pop
jns
shl
xchg
or
xchg
pop
rorl
mov
ss
or
roll
adc
xlat
ss
movsb
ds
mov
and
sub
jecxz
sbb
lret
adc
and
pop
fcoms
xor
xchg
mov
popf
sti
clc
jbe
cltd
nop
shlb
stc
mov
out
fisubl
or
cli
xchg
push
test
xor
ja
pop
shlb
aas
push
into
cmp
jg
or
bound
aaa
push
adcl
iret
ds
jp
jge
cmp
and
push
gs
xchg
loope
dec
dec
dec
ret
sbb
jge
mov
dec
test
mov
inc
lods
pop
push
cmp
lock
enter
push
adc
push
lahf
lds
jmp
hlt
mov
icebp
imul
js
and
aad
ja
loopne
mov
jmp
leave
push
mov
sbb
mov
pop
cmc
jb
dec
xor
movb
adc
dec
sub
mov
clc
push
subl
bound
sub
lcall
test
fcoml
aaa
fwait
lret
mov
adc
xor
sbb
jo
jmp
pop
inc
jb
daa
out
push
or
lahf
imul
and
inc
movsl
mov
ret
fwait
or
aaa
sbb
stos
inc
or
shrl
sahf
sbb
mov
push
cmpsl
jo
aas
mov
add
mov
and
add
mov
in
adc
jle
movsb
outsl
cwtl
mov
dec
sbb
pop
ss
sahf
xor
jae
mov
hlt
and
out
jbe
adc
leave
mov
push
notl
hlt
sub
dec
push
lcall
mov
nop
xrelease
mov
mov
loop
fstps
cmp
decl
mov
xchg
sub
in
cmp
jle
movsb
mov
pop
inc
outsb
sub
cld
push
push
shrb
inc
lds
cmp
out
sbb
movsb
xchg
shl
mov
jbe
sbb
inc
cs
int3
dec
aaa
loope
ss
mov
es
adc
mov
mov
andl
out
ja
ljmp
rorl
mov
fwait
shr
push
mov
adc
xchg
inc
mov
xor
mov
clc
shr
mov
ds
mov
add
addr16
add
lea
inc
mov
jns
mov
jns
and
pop
das
aad
mov
sbb
pop
stos
imul
and
xor
stc
mov
add
adc
push
push
in
or
aad
mov
fisttps
lods
inc
push
roll
pushf
addr16
aas
xchg
mov
ss
lds
dec
scas
lret
sbb
pop
mov
mov
pop
insl
mov
ss
inc
js
mov
sbb
mov
xchg
dec
jno
pop
xchg
mov
xchg
xchg
ljmp
es
cltd
outsb
mov
stos
sbbb
pop
sub
aaa
push
sets
adc
enter
pmulhuw
fwait
mov
mov
push
fs
xchg
ficompl
dec
push
lds
xchg
cld
inc
faddl
pop
sbb
and
test
fs
inc
aas
xchg
mov
aas
cmp
adc
pusha
int3
mov
rcr
cltd
sahf
push
loope
divb
imul
loope
fwait
inc
and
add
stc
mov
dec
outsb
fistps
push
mov
lahf
out
xlat
es
jae
out
and
into
js
dec
jo
inc
add
xchg
push
mov
aas
mov
scas
nop
xor
pop
cmp
push
xchg
fadd
das
aam
mov
adc
xor
clc
mov
mov
and
mov
mov
mov
pushf
movsb
and
mov
mov
aaa
shrl
jl
pop
es
add
jae
stc
es
adc
or
mov
bound
sbb
aad
cmp
das
lret
mov
add
hlt
fs
sarb
push
iret
fistps
and
das
pop
inc
mov
ds
mov
int3
cmp
ret
sbb
jbe
push
mov
cmp
ret
in
mov
mov
leave
sbb
leave
pop
jne
imul
pop
int
mov
inc
stc
rcl
push
sbb
dec
xchg
xor
js
test
stos
lods
jns
mov
and
sub
sbbl
mov
ss
cmc
ret
loop
xor
pop
rcll
mov
test
outsl
xchg
lea
std
shl
test
pop
adc
in
jae
cmp
into
popa
lods
xor
pop
pop
je
fildll
and
and
push
rolb
jp
sub
pop
ret
cmp
mov
mov
dec
aaa
lret
pop
pusha
call
inc
mov
lret
test
pop
ret
cwtl
data16
daa
mov
dec
pop
and
data16
nop
out
push
lcall
loopne
sub
sub
sub
test
jo
jge
hlt
adc
stc
cwtl
jg
add
add
sbb
mov
inc
sbb
and
bnd
shr
cmp
je
pop
jns
push
in
push
mov
jmp
sub
xchg
in
sub
flds
mov
mov
aam
mov
ret
imull
sti
paddusw
fs
mov
shl
popa
mov
movsb
push
and
subl
or
in
adc
inc
cltd
push
cmp
imul
ret
rol
pop
bound
cld
out
loope
push
pop
icebp
push
push
out
rclb
enter
cmc
repz
adc
popf
outsl
lods
mov
jg
cli
jne
lds
inc
adc
test
loope
mov
push
fidivs
sbb
lret
jnp
jle
dec
in
aaa
out
push
loope
mov
cli
call
fcmovnu
push
pop
mov
mov
xor
push
add
in
ss
dec
jno
insl
ja
jno
cmp
pusha
imul
sbb
or
mov
push
add
add
cmp
loop
jmp
or
and
and
sub
movhps
pop
aad
sub
and
out
and
jmp
dec
or
imul
mov
arpl
sub
jmp
call
test
fldenv
and
aam
pushf
add
jecxz
add
insb
addb
and
in
notl
cld
sub
adc
ret
loope
cwtl
or
daa
or
push
inc
test
pop
cld
jno
imul
push
ficoms
aad
popa
adc
xlat
hlt
fnstcw
xchg
inc
pop
bnd
pop
dec
or
mov
push
rcrb
int3
mov
sub
push
add
daa
or
jb
ss
jne
adcb
insb
pop
push
xor
les
push
lahf
cwtl
sub
mov
jne
mov
hlt
cmp
cmp
nop
sahf
jb
xor
mov
add
rcr
mov
stc
into
push
xchg
pusha
add
inc
out
ja
pop
xchg
loopne
jns
aas
fcmovbe
and
mov
mov
jns
into
sub
dec
inc
mov
xchg
push
nop
lods
dec
sub
mov
fs
dec
xor
mov
sub
jle
cmp
dec
sub
jb,pn
and
xor
sub
xor
dec
pop
stc
and
xchg
int3
push
lcall
xchg
sbb
sub
aas
sub
pop
lret
xchg
decb
jnp
cli
imul
jae
mov
mov
movsl
aad
add
jge
int3
iretw
pusha
push
inc
push
loopne
jo
bound
jg
nop
sbb
sbb
cltd
cwtl
dec
fisubl
push
dec
lea
and
sbb
jne
mov
pop
in
or
aam
xchg
cmp
aam
adc
mov
cmp
in
rorb
bound
notl
and
movsl
stos
pop
sbb
test
popf
sar
or
scas
clc
and
gs
push
lahf
pusha
jle
push
push
adc
lcall
imul
pop
gs
repnz
incb
popa
mov
out
aaa
gs
lock
daa
leave
mov
mov
es
pop
imul
push
sbb
cmpsb
cmpl
in
adc
addr16
out
xchg
out
pusha
rorl
decl
into
xchg
cli
xchg
std
mov
jmp
cli
mov
jns
in
xchg
pop
leave
cs
iret
ljmp
jmp
and
jg
insb
repz
iret
bts
pop
cmp
inc
stos
add
or
mov
and
ds
or
add
cmp
adc
inc
mov
daa
push
sbb
push
sbb
lahf
mov
dec
lods
push
int3
in
inc
or
jge
jbe
cmpsb
fnstsw
dec
hlt
mov
and
aad
imul
add
sbb
mov
mov
shll
ds
pusha
ficompl
and
pop
lock
inc
mov
cwtl
loopne
inc
loope
cltd
and
les
orb
cmp
pop
jecxz
dec
adc
pop
sbb
pop
push
pop
mov
shrl
andb
sub
fwait
leave
sbb
mov
xor
test
mov
jbe
ds
add
je
popa
push
mov
or
sub
shr
xchg
adc
pusha
push
popa
ret
sub
pop
mov
fsubs
dec
mov
adc
sub
mov
in
std
call
push
gs
adc
push
or
pop
and
xlat
dec
icebp
inc
xchg
out
pop
imul
dec
and
and
add
movsl
and
add
outsb
mov
xchg
add
cwtl
call
mov
popf
pop
mov
cmp
xchg
jns
das
cmpsb
push
sub
push
mov
scas
sbbb
cli
sub
lds
stos
mov
aas
das
jecxz
cmp
jl
sub
outsb
fisttpl
ljmp
mov
sub
ficompl
sti
inc
pop
dec
insb
or
xor
and
mov
push
sub
cmc
pop
add
movsl
mov
sub
adc
loopne
sahf
mov
in
sahf
les
mov
ret
std
fadds
mov
dec
inc
cmp
insl
dec
mov
cmpsb
sub
cmpsb
xor
sub
jg
and
cli
xchg
mov
inc
enter
mov
imul
adc
push
js
xchg
je
jg
insl
jbe
insl
sti
push
jne
dec
scas
aad
cmp
jbe
int3
fldl2e
xchg
leave
clc
push
aad
cmp
in
cmp
mov
or
rcrb
mov
mov
mov
and
and
mov
cmp
fiaddl
int3
mov
dec
sub
adc
pop
mov
push
fimuls
add
mov
popf
fsubrs
imul
mov
sub
dec
and
popa
in
fwait
ss
pop
iret
into
call
outsl
jbe
aas
lcall
iret
cmp
push
sbb
mov
adc
aas
popl
xor
testl
in
pop
sub
xlat
xchg
lret
xlat
out
ljmp
orb
or
fisttpll
lret
dec
xor
std
loop
add
hlt
js
xchg
inc
mov
mov
mov
cmpsb
scas
jae
and
cmpsb
mov
mov
lods
xor
cmpsb
jb
xchg
mov
fcmovnbe
test
enter
imul
aad
lock
in
arpl
repz
mov
repnz
sahf
and
aas
dec
fdivl
lods
adc
mov
lcall
jno
xor
loopne
mov
lock
out
or
iret
add
dec
rep
mov
xor
add
cs
pop
dec
in
pop
aad
outsb
sub
mov
das
dec
cmp
add
test
insl
pop
push
ss
inc
mov
push
fimull
jge
in
mov
shll
sarl
in
xchg
sti
or
inc
mov
rcr
push
fldl
hlt
or
nop
cwtl
jmp
fidivrl
jg
fs
sahf
adc
xor
push
sahf
inc
addb
ret
nop
nop
jo
mov
xchg
mov
jl
mov
push
loope
push
dec
cmp
or
cmpsb
jns
xchg
mov
sbb
inc
mov
xor
mov
mov
adc
sbb
hlt
mov
out
and
mov
add
aad
or
gs
xchg
dec
fldenv
shr
call
add
pop
cltd
mov
nop
pop
fwait
and
aad
addr16
pop
ljmp
push
or
adc
mov
mov
mov
xchg
pop
add
fs
dec
cld
jg
inc
sti
test
nop
mov
jno
dec
sub
ja
testl
pop
inc
dec
aam
sbb
insb
inc
mov
mov
sub
jae
dec
push
sub
xchg
iret
fiadds
inc
add
out
pop
jns
adc
fwait
or
sti
in
sub
fs
cmc
jg
int3
adc
xchg
into
jo
pushf
in
mov
xchg
int3
out
xlat
push
mov
sbb
outsb
scas
das
mov
loopne
lahf
pushf
xchg
xchg
mov
xchg
dec
cmp
int
shrb
mov
test
push
test
in
inc
cmp
pop
pop
jb
adc
inc
icebp
mov
jno
test
ja
or
scas
xchg
cmp
in
aaa
and
test
into
fisubrs
cmp
fsubl
es
lds
mov
xor
popa
xchg
outsb
mov
xlat
popf
out
fisubrs
scas
sbb
and
clc
cmpsb
xchg
xor
repz
out
jmp
and
jl
pop
or
and
inc
add
inc
add
nop
jmp
stos
sbb
pop
gs
mov
int
loopne
sbb
roll
sahf
push
cli
lcall
mov
aam
in
cmpsb
jb
repnz
mov
and
xor
mulb
xchg
sub
push
cmpsb
xchg
xchg
jecxz
cmpsb
stos
fstp
aas
add
adc
jne
ljmp
mov
mov
pop
jnp
loope
ret
cwtl
add
mov
aad
xchg
aas
mov
cltd
xor
push
imul
jmp
lret
push
ficomps
inc
mov
mov
inc
xchg
jg
mov
gs
imul
xor
mov
or
jl
test
push
mull
in
je
in
loope
ds
sub
mov
dec
jno
cmc
sbb
into
les
dec
jns
outsb
push
movsl
outsl
mov
loopne
fs
add
dec
lods
sub
adc
jae
data16
sub
mov
test
mov
adc
or
sarb
lods
gs
mov
mov
mov
sbb
lret
inc
scas
subb
push
imul
cmpsl
sbb
mov
xchg
mov
mov
sbb
fs
dec
push
xchg
test
add
add
dec
shll
mov
sub
sub
or
lods
or
test
mov
mov
in
adc
adc
lret
pusha
fisubrs
ja
jno
sti
adc
pop
pop
in
add
mov
sbb
mov
sub
xchg
pop
mov
or
dec
movl
jo
inc
pushf
mov
xchg
mov
jb
add
mov
sub
sbb
es
sub
dec
mov
mov
push
jg
and
aaa
outsb
push
lods
int
push
and
data16
xchg
adc
hlt
ficomps
das
pop
mov
push
loop
push
les
sbb
adc
mov
mov
dec
add
xor
test
imulb
cmp
mov
cmp
aaa
and
pop
sbb
outsl
shlb
loopne
ja
and
xor
inc
inc
push
mov
pop
add
pop
cmp
ljmp
jle
jl
lret
push
arpl
int
imul
adc
or
jl
inc
xchg
adc
xchg
xchg
or
jle
dec
add
pop
ret
mov
inc
fldcw
add
test
ret
imul
sbb
sbb
shufps
lret
clc
addb
clc
xor
aas
mov
pop
test
and
rcr
sub
pop
loope
lret
sub
or
mov
push
push
cltd
xor
hlt
ret
in
cmp
mov
adc
sbb
aaa
ss
pop
test
clc
sbb
insl
std
in
pop
daa
or
or
mov
mov
mov
insb
xor
stc
pop
out
jmp
xchg
lea
inc
sub
pushf
mov
stos
push
xor
ss
test
clc
push
pop
pop
mov
pop
dec
lock
jo
sub
sub
insb
mov
les
jle
aaa
int
aam
popl
movsl
push
cmp
jb
scas
sub
mov
shrl
mov
xchg
mov
aam
and
insl
ss
lret
inc
imul
mov
mov
ficompl
fmuls
add
psrad
mov
addw
mov
cs
scas
in
lock
dec
loop
lcall
xchg
pop
jl
sub
and
mov
dec
lret
fs
or
pop
les
pop
pop
xchg
pop
dec
sbb
jge
pop
pop
jp
stos
jp
inc
and
pop
push
repnz
movsl
mov
add
sub
andb
and
shrb
inc
sub
lock
lahf
icebp
sbb
adc
jo
in
or
jle
sub
aam
lret
adcl
cmp
push
in
fists
pop
lret
dec
cmp
call
mov
push
mov
ret
fidivrs
icebp
push
lea
cwtl
xor
push
dec
fbld
jp
in
outsl
mov
push
std
orb
idivb
sub
aas
mov
js
add
in
cli
enter
nop
test
lahf
xor
fwait
push
fcmovnu
imul
mov
push
mov
cmp
jl
jno
dec
nop
mov
ror
bound
xor
inc
mov
pop
add
and
xor
push
add
sbb
inc
adc
cmp
pop
mov
scas
mov
aad
and
into
mov
and
adc
mov
out
and
dec
push
pop
inc
and
aad
ret
xchg
popf
or
scas
das
cmp
stc
jle
fdivr
pushf
mov
inc
inc
mov
sbb
pop
rcr
cmpsl
pop
cmp
adc
dec
out
pop
adc
into
cmpb
jl
cmpl
mov
cmc
popa
and
in
jecxz
dec
inc
into
cmp
push
or
xor
push
xor
cwtl
mov
pop
push
sbb
nop
cmp
push
xchg
orb
hlt
xchg
pop
push
in
arpl
test
stos
jl
call
push
xchg
shll
in
addl
pop
ret
xor
out
iret
pop
cs
sub
adc
test
pop
nop
imul
sub
add
add
dec
adc
aaa
out
add
inc
cli
push
iret
ja
ret
jp
push
mov
cmp
inc
leave
inc
int
push
in
aas
cmp
iret
dec
scas
scas
imul
sbb
je
mov
gs
add
rcll
pushf
sti
loop
ret
in
xor
pop
std
cs
lahf
cltd
out
fiaddl
mov
popa
adcl
andb
and
es
in
daa
jl
push
xchg
out
or
fwait
lahf
jnp
jl
mov
popf
xor
pop
roll
lds
sahf
add
outsb
and
mov
jno
xor
outsb
xchg
mov
push
test
out
jmp
jns
inc
cld
mov
loopne
hlt
sar
jno
mov
outsl
sub
pop
sbb
mov
repnz
popa
popl
push
adc
add
int
inc
xor
inc
call
sub
shrb
pop
sub
lret
mov
imul
stos
and
mov
loope
inc
push
push
cmp
ret
int
jecxz
jns
pop
popf
dec
add
fnstcw
pop
adc
push
mov
cwtl
pop
loop
insb
and
jl
in
and
loop
dec
pop
sahf
data16
mov
mov
rdtsc
sahf
movsl
fbstp
jecxz
xchg
pop
cwtl
dec
dec
arpl
pop
shlb
jp
enter
adc
push
sub
dec
jns
and
push
int3
mov
cmpl
lahf
repnz
pop
aam
ss
leave
mov
sub
push
addr16
and
mov
daa
inc
push
mov
rol
sub
mov
repz
push
mov
cmp
jg
and
out
fildl
pop
jg
cwtl
push
dec
arpl
dec
mov
adc
lods
ret
shll
fidivrs
dec
fbstp
inc
inc
pop
dec
jmp
scas
outsb
loopne
push
or
mov
jl
leave
movsl
fldt
add
jb
ds
add
arpl
push
add
shll
xor
in
push
les
shrl
dec
lods
sub
inc
add
call
mov
mov
idivl
lds
or
jl
cmp
mov
pop
cmp
jno
cmpsl
xor
insb
outsb
cs
scas
in
cmc
push
dec
sbbl
push
in
in
mov
in
das
cmp
pop
cmp
jnp
out
fbld
adc
popf
jmp
iret
mov
adc
add
pop
insl
test
scas
roll
sub
dec
je
int3
and
stc
cld
pushf
shll
fnstcw
or
or
and
aaa
and
sti
push
out
cwtl
xlat
sub
mov
cltd
out
inc
pop
push
movsb
mov
inc
in
int
test
in
stos
movsl
jmp
popa
movsl
push
in
sbb
push
mov
push
mul
lock
jmp
and
inc
sbb
xchg
sbb
cwtl
push
jp
ds
sti
ds
in
cs
repz
popf
ds
mov
dec
xor
jmp
imul
shr
ret
inc
inc
in
roll
mov
mov
mulb
xchg
rcll
pop
pusha
std
lret
mov
mov
fnstenv
pop
fmul
xor
addr16
aaa
xor
lods
cmpsb
cli
pusha
outsb
or
cmpsb
xchg
xlat
addr16
decl
dec
sbbb
push
sub
cmp
pop
hlt
sbb
gs
sub
dec
mov
loope
mov
sbb
or
sbb
xchg
mov
add
jmp
ret
mov
xor
dec
sbb
xlat
dec
add
lret
mov
mov
roll
outsl
xchg
or
mov
push
repz
out
adc
jnp
cmp
fisttpl
scas
inc
mov
and
cmp
in
lahf
into
dec
mov
popf
shll
shlb
mov
add
shl
dec
sbb
shlb
popa
cld
pop
mov
daa
sub
rorl
into
pusha
adc
or
mov
add
jp
xchg
iret
dec
cs
scas
icebp
pop
mov
imul
mov
data16
mov
ret
ficoms
stos
pop
orl
scas
mov
subl
cmp
adc
popf
lahf
mov
adc
sub
mov
mov
or
aam
or
leave
aaa
inc
mov
jb
into
fstpt
sahf
aam
out
pop
mov
push
xchg
xor
or
jg
ss
and
jmp
jbe
jne
rorl
popa
and
iret
xchg
inc
cltd
pop
dec
jbe
cmp
xchg
jecxz
jo
shlb
lock
adc
stos
test
cwtl
pop
adc
pop
insb
xchg
mov
aad
inc
adc
int3
push
pop
sub
icebp
shrb
cmp
cmc
mov
bound
xor
dec
pushf
dec
sbb
mov
aas
jbe
bound
scas
and
add
aam
test
lods
cmpsb
push
jge
dec
stc
xor
roll
and
sub
push
stos
dec
adc
mov
push
mov
dec
push
cmp
imul
jns
push
in
stc
leave
fiadds
adc
fdivl
repz
pop
repz
iret
aaa
bound
pop
popf
xchg
jnp
sbb
movsl
jb
sub
push
mov
dec
stos
std
fcomip
ljmp
rolb
lahf
push
test
stc
fwait
pushl
sub
ljmp
mov
repz
inc
je
mov
push
jns
jle
movsl
jbe
jge
sub
dec
imul
pop
jp
inc
aaa
jo
lahf
aas
xchg
sbb
push
imul
dec
dec
xchg
jo
jmp
xchg
js
sti
cmp
lahf
or
mov
xor
in
test
pop
sti
push
adc
mov
imulb
mov
cs
es
mov
jle
sub
cmp
int3
int3
repnz
mov
in
push
aaa
push
add
jnp
cs
push
inc
imul
shrl
pop
pop
push
sbb
outsl
mov
ret
imul
xchg
push
hlt
leave
cmp
je
imul
lcall
mov
add
enter
mov
out
fsub
sti
ret
push
mov
daa
sti
inc
outsl
imul
xlat
fwait
loop
xchg
ss
jb
mov
cmc
outsb
repnz
gs
addr16
dec
add
sbb
push
pop
xchg
fwait
stos
cli
xchg
movsw
cmp
jle
mov
jae
inc
cmp
add
js
cmp
mov
hlt
fcomps
sahf
add
add
jae
test
imul
gs
cli
in
js
xchg
xchg
push
cmp
int
out
xor
jecxz
movl
mov
mov
fdivs
clc
jnp
sbb
int3
in
aam
xchg
test
jnp
mov
push
xchg
xor
xor
pop
out
and
imul
aad
dec
adc
xlat
sub
imul
xchg
mov
das
xor
pop
pop
or
imul
mov
mov
jmp
mov
push
arpl
addl
out
loop
mov
in
push
pop
sub
imul
jl
xchg
scas
movsl
xchg
sahf
hlt
push
xlat
mov
pusha
imul
lcall
repz
inc
fsubs
pushf
stc
test
inc
mov
mov
loop
xor
lock
data16
repnz
mov
in
and
mov
mov
inc
jp
pop
pushf
jns
adc
sbb
jno
jae
xorb
cmp
xchg
in
ljmp
stc
shrl
push
icebp
dec
cmc
jp
jns
or
or
icebp
adc
retw
push
mov
jecxz
jno
jns
cmp
pop
adc
dec
inc
or
fnsave
push
pop
stos
pop
or
sbb
jb
jle
subl
xor
inc
xor
xor
in
add
push
pusha
dec
sbb
jmp
push
das
lahf
icebp
xchg
inc
call
xor
test
scas
lret
test
cmp
repz
mov
sub
je
testb
enter
rclb
inc
xchg
xchg
int
and
les
and
push
sub
and
stc
in
in
sbb
sti
push
insl
and
push
shr
iret
cwtl
lock
sub
inc
pop
mov
and
decl
sarb
dec
inc
sarb
aaa
mov
imul
sbb
mov
std
cmp
dec
shll
data16
ret
hlt
pop
push
mov
pushf
and
out
int
repnz
sbb
pop
cwtl
and
fwait
inc
popf
test
push
and
sbb
lods
sub
mov
and
jae
xchg
movl
push
dec
mov
mov
ss
loopne
dec
std
clc
push
lahf
jne
cltd
movsl
xchg
fisubl
cs
sub
sbb
dec
mov
in
lcall
sub
cwtl
cs
inc
shr
cmp
and
adc
scas
outsb
and
add
and
push
mov
subl
adc
adc
int3
and
imul
inc
scas
mov
gs
push
or
and
pop
mov
and
stc
loop
mov
dec
dec
sbb
scas
mov
mov
imul
es
push
xchg
clc
cmc
xchg
or
push
pop
addr16
lea
addr16
xchg
adc
jno
ret
scas
xor
fnstsw
fistpll
daa
or
movsl
jo
pop
mov
movsb
fs
inc
push
aad
loope
rclb
dec
pop
adc
fistps
fstps
adc
dec
leave
cs
and
inc
cmpsl
repnz
pop
xchg
lea
adc
mov
and
pop
inc
lock
xchg
fs
leave
cld
xlat
aad
pop
les
notl
out
jp
push
mov
add
push
sti
cmpsl
push
sub
inc
insl
rcll
fs
add
das
lods
lods
rorb
jecxz
pop
sbbb
stos
cmp
and
add
pop
test
mov
dec
jp
and
mov
dec
cld
and
ficompl
mov
push
jmp
inc
mov
pop
insl
rclb
lods
xchg
in
mov
or
aad
and
bound
inc
into
negb
and
call
and
push
je
adc
faddl
jbe
sbb
test
mov
dec
sbb
or
xchg
in
fstps
popf
or
sbb
test
xchg
stos
and
jbe
jae
in
fwait
mov
xchg
xor
inc
lahf
add
pop
ljmp
call
mov
rcrl
je
lahf
popa
sub
pop
xor
dec
cli
jnp
push
aaa
mov
dec
and
stos
in
aad
sbb
sbb
push
push
push
loopne
jnp
pop
lods
xlat
mov
cmpsb
mov
xchg
and
xlat
outsl
mov
lcall
inc
xor
pop
je
push
shrd
sbb
lea
dec
cmp
movsb
jl
in
ret
xchg
lret
mov
outsb
xor
dec
je
out
mov
dec
or
ret
enter
rcll
das
dec
pop
ja
js
jl
fsubrl
daa
popf
mov
push
loope
cmp
xchg
sti
lods
ffree
sub
mov
mov
dec
popa
push
and
addr16
mov
pusha
jae
je
in
dec
mov
imull
int
sub
xor
mov
jne
mov
mov
icebp
xchg
mov
mov
test
std
jecxz
push
pop
xchg
jl
sub
push
bound
push
jmp
call
mov
leave
mov
dec
and
repz
cmpb
icebp
sbb
mov
fs
mov
dec
push
xor
stos
sub
xor
cmp
xchg
adc
adc
repz
xchg
add
jnp
test
push
push
add
lea
inc
sub
xor
mov
dec
fimuls
daa
cmpsl
stos
xchg
ja
test
mov
xchg
jge
jmp
dec
sub
loop
daa
or
xor
mov
gs
mov
push
cmpsb
cmp
stos
ss
sbb
or
movsb
push
sbb
xchg
dec
xor
out
mov
sbb
sbb
or
xchg
xchg
jg
int
lret
jns
jbe
inc
push
mov
cwtl
mov
adc
pop
pop
jb
aaa
xchg
mov
mov
cmpsb
xor
lock
leave
movsl
arpl
mov
sub
jecxz
out
fisubrl
cmp
xor
aas
xchg
lcall
mov
and
and
jb
enter
mov
sbb
loopne
lret
inc
shlb
filds
js
out
pop
fs
scas
xchg
mov
and
cld
or
mov
add
pop
xchg
fmuls
pop
jg
bound
pop
mov
mov
out
mov
icebp
jmp
cwtl
cmp
pop
test
mov
sbb
fpatan
cmp
mov
or
mov
mov
jo
neg
iret
int3
jns
mov
pusha
sub
adc
frstpm(287
push
jo
addl
aaa
cmpsb
or
push
mov
jo
popa
icebp
das
lcall
jae
js
rcrb
lcall
scas
fiaddl
inc
sahf
xchg
mov
cmp
dec
je
insb
pop
lods
adc
movsl
inc
movsl
outsl
into
pop
ja
fdivrp
popf
in
loopne
fwait
jne
stos
add
shlb
mov
fnsave
xlat
add
push
int3
rol
and
xchg
xchg
mov
jno
mov
cmovs
lock
jl
jo
stos
mov
adc
cs
pop
arpl
rcl
sub
push
inc
push
into
dec
push
fsubl
dec
mov
movsb
jo
push
pop
sbb
push
mov
xchg
pushf
push
clc
mov
cmp
in
and
sbb
pop
ja
scas
test
fwait
or
mov
push
es
aaa
fwait
inc
clc
cmp
cmpl
jp
or
xchg
jmp
out
mov
jbe
movsb
jmp
fwait
ljmp
cmp
test
sub
push
push
mov
pop
add
mov
push
ja
into
aaa
cmp
push
xchg
and
mov
inc
and
lcall
stos
lods
rol
jno
mov
inc
sbb
fcomip
mov
adcl
xchg
call
dec
or
xor
dec
cld
int
sub
loope
inc
leave
imul
mov
lcall
push
cmp
lock
arpl
sub
ljmp
rolb
in
fisubl
xor
mov
ds
add
adc
push
inc
jg
fwait
call
out
fcoms
imul
nop
ja
xchg
dec
int3
int3
fiaddl
xor
insl
out
mov
call
push
fcmovnu
mov
or
dec
imul
stos
cmp
ss
mov
aaa
mov
daa
mov
xchg
mov
loop
call
cmp
shlb
xor
cmpl
nop
jg
or
jnp
push
daa
fildll
outsl
ds
xchg
loopne
nop
les
mov
xor
xor
mov
mov
fisttpl
test
in
and
idivb
jg
push
push
dec
sub
test
lret
cmpsb
out
pusha
xchg
sbb
add
mov
jg
ret
adc
fs
push
sub
mov
clc
lret
cmp
enter
xchg
mov
out
push
scas
push
loope
lods
sbbl
sbb
add
out
adc
decb
popl
mov
neg
vmovups
push
lods
js
sbb
mov
or
pop
scas
popa
adc
xchg
push
loope
js
ret
push
out
and
mov
xchg
or
jmp
inc
mov
mov
mov
push
inc
das
scas
ret
sub
xchg
js
jns
mov
in
jmp
add
stos
cltd
mov
push
adc
enter
mov
addl
sbb
stc
cmp
ljmp
fimull
jb
sub
pop
fucomi
add
sbbb
repz
jle
fs
sbb
out
test
je
mov
inc
hlt
xlat
inc
xchg
pop
adc
mov
dec
out
in
or
outsb
pop
adc
sahf
outsl
daa
fstl
sbb
fcompl
outsl
xor
dec
sbb
inc
xchg
fsubrl
mov
cmp
jecxz
inc
leave
sbb
rclb
or
dec
rolb
movl
adc
enter
jns
jns
adc
xor
dec
inc
mov
cmp
lret
sub
bound
enter
adc
stos
mov
mov
int
sub
or
hlt
out
out
enter
int
jno
push
ret
aaa
jg
xor
cmp
dec
insb
scas
addb
faddl
pop
mov
push
jnp
je
or
sub
test
idivb
jmp
pop
dec
outsl
jne
adc
xchg
mov
shrb
dec
cmp
ljmp
sbb
adc
sti
mov
stc
xor
int3
shl
test
out
push
call
and
lcall
in
scas
sbb
sub
dec
xor
lret
lds
mov
dec
jge
add
jne
sbb
sbb
aam
fsubs
maxps
cmp
ret
clc
adc
mov
and
lret
test
inc
outsl
add
add
insb
jne
inc
adc
adc
jns
push
pop
in
push
stos
jnp
adc
pushf
outsb
mov
stc
ret
mov
mov
xchg
pop
rorb
daa
push
lret
mov
loop
sbb
rcr
les
addr16
mov
ja
xchg
xor
lahf
push
jbe
dec
sbb
shll
jp
mov
lahf
jae
psubd
sub
mov
rolb
loop
xor
aaa
sub
fnstenv
jl
fucomp
lock
mov
hlt
outsb
pusha
test
jp
out
xchg
ljmp
push
mov
pop
cli
in
push
faddp
mov
sub
ja
popa
pop
idivb
outsb
pop
imul
add
sbb
cmpb
lods
mov
sahf
jo
lods
sahf
gs
insb
hlt
jno
dec
roll
mov
aas
js
sbb
push
enter
imul
sbb
frstor
cs
and
adc
push
and
test
sub
cmp
sbbl
es
cld
or
jb
ds
daa
iret
gs
pop
ret
ror
repnz
scas
inc
xchg
repz
movsb
adc
lods
pop
fstps
and
or
call
xchg
jp
hlt
push
mov
sub
jmp
cwtl
xchg
ret
cwtl
sahf
lcall
push
or
xchg
cmp
into
push
xchg
bound
add
rorl
cmc
sbb
push
shlb
mov
shll
xor
mov
mov
pop
dec
mov
hlt
mov
ret
inc
adc
out
gs
push
sbb
inc
filds
mov
cmp
scas
clc
mov
fmull
mov
or
lds
sub
repnz
jns
and
adc
cmp
rolb
add
es
xchg
sub
mov
adc
mov
decb
xor
mov
xchg
or
lock
testb
xor
pop
mov
mov
cmp
push
cmpsb
dec
xor
pop
iret
cltd
aaa
loop
stos
xchg
or
mov
push
shll
les
outsb
hlt
fstps
gs
ljmp
out
or
test
je
mov
fists
imull
lods
ljmp
mov
test
lsl
shl
pop
loop
inc
iret
cli
test
xchg
arpl
lods
in
mov
scas
scas
inc
dec
sub
imul
dec
jge
jg
mov
subb
insb
flds
ljmp
insl
gs
aam
dec
sub
or
add
push
lock
adc
cld
mov
clc
cmp
cmpsb
mov
lcall
icebp
aad
add
insb
adc
and
sub
mov
in
dec
lcall
fstl
lock
ret
mov
cmp
les
mov
add
sbb
test
add
jg
pop
test
mov
hlt
sbb
movsb
lahf
in
jmp
mov
sbb
push
sub
dec
dec
push
cmp
lea
or
add
mov
scas
sbbl
inc
mov
xor
mov
sub
mov
inc
mov
sbb
mov
pop
push
andb
push
cmpsb
add
dec
loopne
mov
decl
sub
dec
sub
scas
mov
ficompl
jecxz
xor
pop
sarl
push
cmp
loopne
testl
push
mov
pop
sbb
sbb
cwtl
ljmp
inc
or
xlat
jge
fisubs
mov
imul
das
dec
pop
or
std
cld
lret
daa
lret
daa
or
cmp
cltd
pushw
mov
and
dec
or
outsl
lea
adc
in
mov
lds
repnz
out
mov
mov
sbb
roll
jecxz
pop
lds
test
pop
bound
and
mov
xor
push
subb
pop
arpl
xorl
push
jbe
sub
or
fptan
and
or
lret
add
push
push
mov
xor
lcall
push
pop
xchg
add
add
push
addr16
mov
lret
lcall
push
pusha
xor
adc
xor
shr
xlat
dec
pop
imul
sbb
nop
js
mov
lock
inc
std
daa
out
data16
fmul
or
call
pop
xchg
inc
lock
lds
notl
lods
xor
dec
icebp
jmp
test
pop
mov
sahf
adc
cmc
xor
frstor
mov
clc
push
jno
xor
cmpl
ja
cmp
jle
call
push
dec
std
scas
xchg
add
leave
mov
ljmp
andl
xor
fnstsw
xor
les
hlt
and
test
mov
inc
dec
rolb
mov
std
shrb
call
popf
sbb
fsubrs
push
in
dec
jmp
test
xlat
mov
cmp
stos
mov
popa
adc
push
sub
pop
push
or
imul
dec
punpcklbw
ss
stos
pusha
dec
add
int3
outsl
into
add
sub
and
cmc
push
fucomip
pusha
scas
insb
sbb
push
test
imul
lahf
das
mov
adc
xlat
faddl
dec
arpl
sahf
pop
xchg
scas
test
lock
inc
xor
pop
mov
or
das
pop
push
jb
mov
loope
push
xchg
mov
mov
mov
ss
and
test
adc
shlb
popf
flds
and
or
cmpsb
in
jo
fistps
test
or
iret
pop
test
scas
pop
push
xchg
lods
pop
mov
xlat
lret
pop
dec
jb
dec
xor
xor
sub
stc
push
out
jle
sarb
cmc
and
std
loop
hlt
push
jo
xchg
cmpb
or
sbb
fisttps
lods
cmpsb
pushf
xor
mov
mov
lcall
hlt
repz
cmpsl
cmp
sbb
push
xchg
fnstenv
inc
les
cmpb
mov
imul
hlt
pop
xor
sarl
lock
orb
lea
inc
jo
neg
push
shlb
mov
push
gs
shlb
sub
xor
shll
in
insl
sub
mov
les
ret
jecxz
xchg
fsts
outsb
mov
push
jmp
xchg
pop
lahf
cmp
ss
stos
cmpsl
sbb
and
aaa
ljmp
xchg
pop
jl
sub
scas
arpl
outsb
es
in
fildl
int3
sbb
and
subb
sbb
out
fists
jle
cmp
cmp
jge
scas
mov
repnz
imul
clc
pop
shrb
lock
or
add
xchg
mov
das
xorb
xchg
jl
ja
push
adc
and
subb
pop
adc
fidivrs
scas
mov
fists
mov
aaa
hlt
mov
sbb
pop
ficompl
jb
sub
jo
aaa
pop
add
xchg
mov
lahf
mov
dec
jno
arpl
addr16
stc
cmpsl
test
insl
leave
in
pop
test
sub
or
xor
xchg
mov
call
mov
sub
hlt
sbb
repz
and
icebp
iret
mov
xchg
cmp
sub
fidivs
je
adc
repz
or
xchg
cmpl
insl
ja
sti
sub
pop
mov
xor
inc
cltd
pusha
stos
dec
cmp
fsub
scas
ss
mov
pop
lahf
jbe
insb
out
fucom
lret
loop
dec
mov
bound
lods
cld
shlb
loope
ret
in
gs
cmp
sti
sub
mov
je
cld
mov
test
scas
movsb
aaa
mov
mov
scas
jns
xchg
push
inc
pop
push
or
cld
xchg
cmc
js
inc
push
fistl
mov
add
stc
mov
push
cltd
pop
dec
stc
sbb
mov
fildll
sbb
pushf
loop
sarb
push
xchg
xchg
imul
loope
fwait
das
dec
or
cld
jno
or
jne
mov
xchg
pusha
mov
lea
jmp
jae
and
push
stos
lods
nop
jl
sbb
lock
stc
jecxz
xchg
pop
int
dec
fiadds
das
mov
jns
mov
jecxz
pop
out
xchg
mov
jle
insb
aam
adc
sub
lcall
mov
dec
push
inc
cs
lret
lods
and
sub
pop
and
and
cmp
call
add
dec
insl
push
mull
push
dec
cmp
in
xor
lret
xlat
mov
stos
mov
mov
mov
out
inc
mov
inc
mov
and
jp
push
mov
je
or
pop
call
push
fcoml
xlat
jle
negb
jle
cmp
jecxz
pushf
popa
iret
push
sbbb
aam
push
inc
mov
arpl
add
push
cwtl
or
sti
inc
inc
jecxz
mov
negl
jno
clc
loopne
fdivs
aas
cmc
fstl
sub
fnstsw
xor
ss
andb
cmp
inc
cmp
mov
mov
sbb
shll
adc
lahf
fnsave
xchg
pushf
jecxz
in
cld
movl
test
or
dec
in
or
or
sti
push
dec
mov
shl
push
xor
ret
mov
lcall
btr
std
ljmp
pop
test
cmp
ficomps
pop
adc
xchg
aaa
outsb
adcl
inc
dec
jmp
shll
jno
fwait
add
push
push
shrl
dec
pop
mov
adc
xor
push
addr16
daa
add
gs
add
fidivl
test
cmp
and
xchg
lds
mov
pop
hlt
or
aam
test
popf
mov
jb
inc
adc
push
xchg
add
in
dec
test
xchg
sbb
test
aaa
jns
stc
pushw
jecxz
inc
add
sbbb
mov
mov
jno
loop
rorl
loopne
icebp
jp
pusha
jge
sbb
rcrl
addr16
dec
sub
shrl
cltd
in
xchg
in
fstps
push
mov
pusha
pop
fwait
xchg
adc
sub
xchg
push
lock
fildll
int
dec
popf
or
xchg
enter
stos
ds
cmp
xchg
out
test
clc
push
mov
adcb
or
imul
cmpsb
out
lret
cltd
filds
cmp
xchg
incb
out
inc
cmpsl
cltd
lods
jno
xor
xor
inc
inc
jns
pop
lds
imul
dec
imul
sub
add
ja
scas
int
and
filds
mov
clc
dec
adc
sub
lret
icebp
xor
cmpsl
cld
pop
pusha
jne
mov
cmp
mov
out
mov
jb
aad
xor
jmp
push
dec
popa
orb
inc
mov
pop
mov
mov
inc
jle
mov
fdivrl
ss
sahf
mov
mov
sub
push
mov
mov
pop
xchg
add
dec
bnd
popf
pop
jg
test
repnz
jo
adc
or
lock
sbb
jg
fstpl
adc
adc
leave
pcmpgtb
and
and
jo
jbe
sbb
mov
dec
mov
mov
fidivrs
pop
mov
inc
and
and
xlat
sbb
ficoml
mov
fs
in
ja
mov
xchg
imul
int
test
sti
cs
mov
xor
inc
push
hlt
dec
adc
pusha
push
popf
mov
add
in
pop
daa
into
push
fdivr
inc
push
sti
or
adc
leave
cmpl
lods
lock
sub
fisubrs
cltd
jnp
jae
cmp
and
xchg
in
dec
pop
lret
stos
dec
inc
test
jmp
inc
ja
adc
mov
cmp
stos
loop
stos
clc
xchg
lahf
test
cltd
inc
xchg
jecxz
push
pop
xor
testl
in
sahf
enter
add
push
insl
push
sub
lahf
cmovo
ss
jnp
shr
push
mov
sbb
xor
inc
data16
sbb
aas
repz
jmp
int
ret
cmp
jge
sub
jns
hlt
mov
mov
rol
nop
xchg
cmp
insb
out
lods
inc
clc
add
js
std
aad
mov
or
push
daa
lret
push
inc
jle
xchg
xchg
test
aam
fldt
or
pop
pop
pop
add
out
data16
test
mov
inc
mov
rcrb
adc
pop
test
pushw
bound
push
loope
push
xchg
in
jmp
test
adc
cmp
mov
and
notl
pop
push
adc
and
jae
cmpsb
add
dec
and
hlt
rol
ret
dec
jne
bound
pop
int3
es
int3
sub
es
ljmp
jle
pop
mov
add
mov
mov
outsb
cmp
pop
loop
call
outsb
xchg
inc
in
movsb
cmpsb
or
rol
test
jb
mov
sub
std
out
imul
in
sub
test
pmullw
jno
lea
shll
pop
xchg
sbb
insl
fcomip
cmp
cmp
in
lcall
mov
repnz
cltd
mov
fistl
push
mov
pop
dec
cmp
push
outsb
mov
lock
stos
mov
aaa
and
outsl
mov
cvtps2pd
sbb
lock
pop
lret
cwtl
test
std
cmpsb
mov
mov
push
cwtl
push
cmp
mov
out
scas
xlat
sbb
or
adc
int3
popf
dec
dec
adc
xchg
pop
jae
aad
inc
pop
xchg
outsb
pop
pushf
jl
or
or
addl
in
cmpsb
cli
in
insl
sahf
and
mov
movsl
jo
pause
xchg
inc
lret
in
jno
cwtl
inc
test
and
dec
adc
popa
xor
ret
popf
xchg
ficoms
test
repz
mov
stos
in
scas
popf
jnp
xchg
movsl
xor
insb
arpl
add
push
jo
iret
fs
js
popa
xor
scas
aad
inc
mov
jnp
movsl
mov
jno
add
push
jno
sub
pop
in
movsb
push
dec
enter
je,pt
and
sbb
fcoms
xor
push
xchg
shll
jne
fld
fldenv
mov
rclb
cld
lcall
xor
pop
xor
mov
gs
inc
xchg
mov
daa
loopne
clc
es
sub
cld
repnz
mov
jg
push
out
pushaw
pop
add
mov
pop
ficompl
xchg
mov
mov
paddusw
cmpsl
or
lahf
lret
adc
ret
test
imul
sbb
dec
iret
test
mov
xchg
mov
add
les
adc
outsl
out
xchg
pop
push
stos
pop
inc
cli
mov
dec
subb
aam
adc
sbb
out
in
push
pusha
jne
int
xchg
mov
mov
mov
mov
adc
movsb
push
adc
fisubrs
dec
sbb
jb
sahf
arpl
in
aad
iret
stos
push
in
push
mov
and
jge
xor
adc
or
lock
repnz
aas
or
mov
xor
int3
fidivrl
cmpsl
and
add
sub
xor
icebp
xchg
jnp
dec
push
test
sbb
push
mov
and
icebp
xchg
leave
and
cwtl
incl
iret
popf
sbb
lahf
test
jns
jg
pcmpeqd
sub
subb
mov
mov
inc
adc
push
imul
mov
lds
std
repz
sbb
cltd
and
les
inc
les
pop
ror
call
nop
push
sbb
dec
cmpsb
inc
lret
test
mov
je
test
scas
pop
push
std
test
xor
or
bound
imul
cld
iret
fimull
fs
hlt
push
sahf
jnp
cld
push
aam
mov
loopne
inc
sub
inc
addb
scas
mov
dec
pop
add
jb
adcb
lods
dec
sbb
xchg
addr16
stos
sahf
pop
sarl
test
je
aad
xlat
scas
out
mov
lret
push
or
mov
cld
and
movsl
inc
xor
test
push
xor
cmp
fnstsw
sbb
or
mov
push
cwtl
add
jp
rcr
dec
loope
loope
add
call
xsha256
cmpsb
aad
out
pushl
inc
mov
addr16
dec
jg
das
aad
cltd
sbb
dec
mov
addr16
mov
dec
jl
push
dec
push
mov
ds
call
jg
or
pop
into
mov
lret
lods
sti
cmp
imul
inc
mov
push
scas
mov
cltd
cmp
out
cli
and
jecxz
rcrb
out
sub
dec
adc
pop
mov
ljmp
add
push
sub
shr
adc
ret
ss
push
adc
cmpsl
add
in
fstpl
hlt
mulb
outsb
test
loope
sti
sarl
push
sub
mov
ret
nop
xchg
ljmp
and
cmpsb
lcall
popa
cmpsl
cmp
or
stos
cmp
sub
mov
popa
fsubrl
ret
out
dec
lcall
fcmovnb
nop
pop
fidivl
fs
xlat
lcall
add
jnp
shll
and
lahf
mov
mov
xor
sub
cmc
insb
xchg
xchg
pushf
lds
aaa
cld
mov
pop
or
icebp
push
xchg
call
mov
inc
loope
mov
add
mov
aad
inc
cmpsb
mov
cmpsb
rcrl
pusha
stc
mov
xchg
call
int
lods
addr16
and
frstor
mov
sub
inc
std
pusha
jge
adc
fsubr
add
inc
addb
cmpsl
adc
cmp
test
push
aas
xor
push
add
cmc
mov
mov
into
fcoms
addr16
push
mov
mov
dec
jecxz
daa
adc
sub
mov
sarl
sub
or
test
xchg
push
bound
xor
pop
push
sub
cmp
mov
pop
out
insb
insl
mov
into
adc
jae,pn
sbb
imul
loop
jbe
mov
or
add
push
shrl
mov
inc
mov
hlt
jb
sbb
imul
sar
fwait
popa
sarl
mov
fwait
repnz
sub
cli
jns
fistl
popa
mov
jl
jns
in
fists
inc
xchg
loopne
lods
scas
pop
xor
mov
push
adc
dec
in
or
cmp
add
mov
add
add
cs
mov
sti
testb
pop
mov
mov
and
pop
inc
add
xchg
add
fs
es
fs
aam
out
ja
sahf
inc
push
sbb
add
push
arpl
xor
mov
jae
ret
in
jnp
insl
jns
in
addr16
inc
or
fld
xlat
mov
scas
in
and
movsb
test
mov
rcrb
pop
data16
pop
int
inc
insb
aad
or
repz
xchg
cmp
fidivrs
lea
xlat
addr16
or
or
mov
and
repz
push
push
pop
mov
orb
jecxz
sbb
jnp
test
or
mov
daa
sub
ja
sbb
outsb
pushf
push
out
sbb
cmpsb
or
mov
cs
imul
clc
cmc
mov
loopne
popf
movb
jp
incl
sub
outsb
fisttps
push
adc
adcl
xchg
imul
lret
icebp
call
lds
fnstsw
lahf
pop
mov
jecxz
cld
mov
cmp
fwait
sub
mov
or
repnz
lds
push
lahf
inc
mov
je
mov
or
push
inc
xor
push
or
andl
fs
repz
xor
add
push
inc
push
scas
pusha
dec
ja
fs
test
xlat
adc
xor
cmp
rorl
push
pop
pushf
sub
shl
fldenv
mov
push
popf
icebp
fwait
cmpsb
ja
in
mov
js
fstpt
dec
add
cmpsl
nop
stos
enter
out
or
pop
push
dec
icebp
pop
std
mulb
and
arpl
adc
pop
cmova
push
incb
xor
add
out
scas
inc
rorl
xor
sub
hlt
sbb
lods
ds
mov
fldt
dec
jmp
lods
insb
outsb
inc
imul
inc
pop
pop
xor
add
xlat
xchg
cmpb
ret
push
push
xchg
xchg
xor
and
and
xor
mov
test
or
jno
movl
fcmovu
pop
lret
xor
mov
push
jg
addr16
fbld
lret
or
scas
dec
sbb
notl
icebp
in
xor
mov
mov
inc
in
daa
rcrb
xor
dec
nop
lcall
xor
lods
mov
scas
idivl
add
or
sti
aaa
adcl
js
mov
pop
into
add
mov
add
popa
fsub
repnz
adc
jecxz
mov
ljmp
dec
pop
icebp
and
mov
mov
sub
psubb
xorl
fs
andl
mov
icebp
inc
adc
mov
out
out
xchg
decl
addb
fwait
mov
jb
mov
lcall
mov
lret
mov
je
xor
inc
mov
pushf
ficoms
add
add
xor
jl
popf
imul
xor
push
jle
mov
pop
push
pop
fwait
xor
ds
pop
xor
lret
jl
push
lahf
sbb
jne
xor
sti
loopne
cmp
mov
jg
les
mov
xor
out
aaa
out
mov
pop
push
movsb
into
or
and
and
test
push
ljmp
add
pandn
scas
mov
jnp
repz
mov
pop
inc
push
jp
stc
jg
jle
addr16
std
fistpll
stos
lds
lock
and
leave
lea
test
movsl
aad
pusha
and
dec
jmp
into
mov
movsl
enter
int3
and
out
cmpb
xchg
jp
and
lods
loop
xchg
dec
add
cmc
lds
out
push
mov
mov
lret
jg
fprem
test
cmp
xlat
repz
mov
xor
mov
pop
ret
cmc
inc
movsb
inc
cli
xor
negl
repnz
mov
sarb
jae
pop
xchg
xor
or
sub
pop
sbb
or
pop
inc
cmpsb
gs
sahf
cmp
jecxz
fmuls
ds
cs
outsl
and
je
mov
xor
push
ficoml
mov
jl
jg
or
mov
test
dec
pop
imul
bnd
rol
in
in
dec
cld
pushf
xchg
cmpsl
sbb
lock
fisubrl
rorb
cmpl
stos
mov
es
sub
jl
scas
jp
js
lds
mov
js
lods
push
andl
and
movsb
enter
stc
loop
jbe
add
idiv
sub
std
add
xchg
sub
das
lret
ss
xlat
push
dec
pop
fcompl
xorl
daa
insl
mov
fnstsw
pop
inc
nop
or
and
js
pushf
xlat
pop
mov
test
popf
add
cmpsb
pop
popf
push
mov
ss
mov
ficompl
fsubr
stc
mov
mov
add
mov
fmul
aaa
sbb
jns
xchg
lea
data16
xchg
mov
and
pop
mov
push
test
cmp
cwtl
jecxz
nop
aaa
stos
enter
jbe
in
test
or
aas
add
push
subl
or
pop
cmp
lret
cmp
lds
cmpsb
cmp
dec
repz
fistpll
xor
mov
xchg
in
cli
add
idivl
add
es
adc
int3
loop
or
ficomps
arpl
popa
sub
les
testl
fs
lret
sahf
cmp
fisttps
add
lcallw
cmpsl
movsb
or
push
call
fcoms
jnp
push
or
out
sti
lea
jne
push
subb
push
sub
outsl
and
push
pop
cmp
xchg
dec
sub
ds
jle
mov
inc
inc
cmp
bound
das
cmp
mov
mov
lea
dec
push
fnsave
dec
test
rclb
sbb
push
fnstenv
into
jb
cmp
xor
cld
sti
testb
je
fsubrs
jp
push
les
adc
clc
ljmp
shl
inc
mov
jecxz
int
jo
dec
sub
jns
and
ret
cmp
sub
or
or
dec
std
andb
call
or
adc
cmp
les
testb
shl
enter
jle
pop
lock
test
popa
cmp
movsl
popa
nop
ds
test
fwait
jg
pop
pop
add
jge
aam
rcll
pushf
jmp
jns
cwtl
insl
inc
mov
push
mov
ljmp
pop
lock
add
xor
mov
test
out
stc
out
out
mov
add
xchg
adc
mov
inc
jno
mov
sub
pop
faddl
push
sbb
xor
xlat
outsl
mov
sbb
mov
push
jg
xor
push
fdivs
pushf
aam
imul
xor
stos
insl
jecxz
stos
push
outsb
xchg
fimull
cmp
push
inc
sub
inc
mov
fcom
into
jns
sbb
cli
mov
nop
pushf
mov
mov
fldt
cli
adc
pop
cmp
inc
loop
jle
cmp
sbb
xor
call
js
js
jmp
inc
rcl
jle
inc
addr16
popf
adc
mov
pop
dec
mov
in
mov
or
push
data16
insl
push
jmp
fldcw
push
ret
jns
add
insl
rol
inc
push
mov
inc
out
and
or
pop
bound
jns
mov
jl
pop
adc
fstl
adc
lahf
cmp
ja
cmp
xchg
mov
mov
loop
push
dec
lds
push
xor
or
add
add
jmp
cmc
xchg
pushf
xorl
pop
dec
inc
mov
rorb
jmp
mov
adc
fwait
test
inc
dec
sub
adc
add
or
pop
shlb
adc
jl
sbb
subb
jge
cmp
fiadds
jns
sub
das
and
pop
mov
mov
add
pop
mov
fdivrp
gs
pop
sub
sbb
cwtl
dec
jne
xchg
stos
lcall
jns
dec
lahf
in
mov
adc
testl
out
imul
int
inc
pop
jmp
and
aaa
dec
push
int
out
mov
push
data16
jno
cmpsb
sub
adc
cmpsb
mov
mov
inc
mov
lcall
pop
xlat
push
insb
idivb
sbb
inc
and
jnp
loope
push
rclb
cmp
stos
vpmacsdql
iret
or
in
adc
repnz
in
jo
repnz
fiaddl
fbstp
fstpl
jbe
push
mov
fwait
je
xchg
jmp
cmp
out
stos
pop
lods
or
lods
cmpsb
test
lds
inc
sbb
jbe
and
mov
lcall
jb
into
xchg
xchg
fcomp
or
sbbl
adc
pushf
mov
pop
mov
or
mov
inc
hlt
lcall
sbb
out
adc
outsb
mov
xchg
sub
mov
mov
jle
xor
mov
mov
xchg
hlt
add
xlat
xlat
xchg
lock
dec
shlb
xor
or
enter
mov
ljmp
mov
insb
and
push
daa
sub
dec
incb
or
add
mov
addr16
push
hlt
inc
bound
push
ljmp
popa
cmpsb
test
icebp
inc
lds
notb
pop
inc
xor
loop
jb
inc
nop
movsb
sbb
xor
ja
ss
imul
lods
ds
shll
enter
dec
popl
add
jno
xor
in
xchg
sti
test
xchg
xchg
pop
ret
lods
iret
ljmp
xchg
rclb
lahf
int
shlb
daa
cli
sbb
jg
mov
jnp
scas
xor
and
fldcw
call
push
xorb
outsl
sbb
jns
and
mov
push
lock
push
lcall
push
push
bound
aaa
sub
imul
fsubs
jl
idiv
or
cmp
rcrl
cltd
enter
or
cli
xor
cwtl
outsl
pop
and
sub
adc
inc
stos
inc
ficomps
mov
sbb
pop
js
pop
mov
fs
inc
pushf
mov
push
xchg
add
cs
fisttps
out
adc
testl
psubd
dec
and
lods
xor
sbb
mov
jle
add
push
inc
test
fiadds
ljmp
adcl
cmp
in
pop
scas
jecxz
xor
add
sbb
aad
sbb
adc
mov
int
mov
scas
inc
push
in
shrl
push
scas
mov
jmp
imul
lcall
insb
cmpsl
std
jmp
pop
dec
js
adc
popf
push
fxtract
mov
pop
and
xchg
sbb
stos
add
das
ret
add
shl
enter
sti
dec
cmp
mov
xchg
cmpsb
dec
repnz
sarb
mov
repz
mov
aam
clc
mov
jmp
outsb
mov
inc
cmp
sahf
test
cwtl
icebp
cmp
int
and
cmpsl
mov
jle
xor
inc
inc
xor
rol
enter
fnstenv
movsl
rolb
imul
inc
xchg
sarl
add
and
mov
rcrb
or
or
aad
stc
or
mov
inc
dec
into
mov
lds
mov
mov
fs
shlb
mov
mov
shll
dec
push
xchg
aas
sti
movsl
fwait
dec
xchg
inc
insb
out
iret
dec
pop
outsb
inc
dec
or
push
sub
or
mov
push
scas
mov
jne
xchg
in
out
lods
incb
or
imul
test
subb
xchg
sbb
xchg
push
and
out
lret
sti
and
xlat
adc
rorl
jbe
loopne
push
rcrb
addr16
enter
ljmp
ror
push
push
hlt
lahf
lret
add
sub
xchg
daa
sbb
js
push
lcall
iret
sarb
notl
or
or
test
lret
mov
xchg
fs
pusha
ret
pusha
push
adc
adc
xchg
sarl
pop
pop
test
jo
call
cs
movsl
daa
lods
pop
cmp
jae
out
test
mov
mov
sbb
lcall
daa
adc
or
outsb
push
push
ret
stc
jmp
loop
movsb
mov
sbb
pop
rol
and
mov
cmp
sbb
adc
rcll
mov
outsb
stos
gs
and
outsb
add
mov
inc
imull
push
hlt
xor
nop
or
imul
fs
fimuls
data16
add
xor
mov
add
mov
mov
mov
pop
dec
sbb
loope
dec
add
ret
inc
psllq
fmuls
aas
xlat
dec
js
jp
and
sbbl
adc
sbb
mov
push
cmp
cmp
jle
nop
adc
xor
mov
jge
repnz
sub
aam
xchg
mov
sbbb
and
push
jbe
loopne
iret
adc
shll
jnp
scas
data16
or
aaa
stc
sub
loope
es
and
dec
fdivrs
mov
inc
jno
icebp
icebp
fmulp
xor
push
pop
fldenv
dec
cmpsb
dec
jns
es
mov
scas
iret
or
jns
adc
int3
pusha
mov
xchg
or
mov
jbe
sbb
mov
mov
mov
or
push
fs
rcll
jnp
inc
add
xor
mov
xchg
sub
loopne
std
mov
sbb
movsb
imul
movsl
mov
or
in
jns
cmp
out
add
push
push
stos
jg
mov
jo
fmuls
jo
xchg
vmaxss
mov
push
pop
jae
jo
dec
stc
xlat
add
cmp
jge
fs
lret
inc
and
cmc
push
and
jae
loopne
sbb
push
pop
push
arpl
jmp
jmp
js
jae
mov
pop
cmp
iret
int
shr
mov
push
and
test
inc
adc
mov
xchg
push
push
mov
nop
dec
movsb
jl
rol
sub
xchg
aas
loop
pop
pop
inc
pop
ss
lret
gs
add
lcall
push
inc
xor
mov
cmp
xchg
add
pop
ss
inc
daa
push
test
loopne
mov
jnp
push
mulps
stos
arpl
mov
fdivrs
test
mov
out
pop
xchg
gs
or
out
cwtl
sub
pop
sti
outsb
cmp
je
cmp
imul
or
xlat
out
dec
nop
sbb
lahf
or
dec
nop
imul
loope
incb
mov
out
sub
in
jl
lods
sbb
dec
test
gs
fincstp
sub
out
insb
outsl
jno
xchg
jno
stc
lret
dec
dec
jl
xchg
mov
jle
dec
jmp
cld
push
push
inc
sub
mov
leave
inc
scas
xchg
cmp
out
xchg
xchg
dec
xchg
fsubrl
lret
jmp
lahf
fmulp
or
dec
cltd
xchg
adc
fldl
inc
rclb
bnd
movsb
fists
mov
pop
fisttps
rcl
rolb
fistpl
shlb
push
std
push
popa
xor
and
in
cmp
ss
jo
mov
dec
jnp
dec
iret
push
loop
es
inc
divb
sub
adc
mov
sbb
mov
xchg
dec
cltd
les
cltd
sbb
iret
mov
sub
or
xor
lret
dec
inc
hlt
sbb
pushf
adc
pop
sbb
jmp
addr16
cltd
popf
and
dec
xor
xor
or
test
out
jecxz
jo
push
sub
pop
call
sub
adc
jl
daa
xor
ja
push
stos
dec
cwtl
out
ret
fdivrl
pop
movb
cmpsl
aaa
dec
aaa
fwait
pop
or
pop
mov
out
fistpll
jl
cmc
push
andl
movsl
xchg
mov
stos
ds
roll
jecxz
sbb
pop
ror
es
sti
pusha
dec
ljmp
push
lgs
xchg
mov
in
mov
adc
push
je
fs
fadd
dec
fsubr
filds
clc
pop
pop
in
int
jl
cmp
cmp
lcall
sub
cmp
cld
cmpsl
inc
lahf
jle
ss
stos
push
jo
adc
xchg
adc
inc
xlat
cmp
aas
push
pop
and
mov
pop
or
insl
imul
xchg
xchg
push
rcrb
jl
pop
test
jg
dec
cld
cltd
pop
popf
xor
int3
mov
add
enter
jecxz
mov
repnz
pop
popf
fistps
push
mov
xorb
lods
inc
cmpsl
sbbb
in
adc
jo
pop
sub
test
in
sub
mov
test
data16
dec
mov
push
push
sbb
inc
pop
outsb
daa
push
adc
cmp
outsl
jne
repnz
pop
cmp
and
cmpsb
icebp
xor
dec
mov
daa
in
xchg
sar
xchg
movsl
jne
subb
sub
add
into
cmp
sbb
out
dec
jnp
lods
pop
ds
imul
mov
idiv
lret
inc
adc
jl
xchg
fcoml
bnd
or
call
mov
or
arpl
xchg
lods
in
mov
mov
mov
and
add
pop
xor
inc
push
sti
push
xchg
loop
dec
gs
fmuls
sbb
jmp
sbb
test
movsb
dec
insb
bound
xchg
fs
mov
rolb
mov
fs
aad
jl
int
or
cmp
dec
jo
stos
outsl
or
sbb
sbbl
mov
push
jl
xchg
xor
or
lock
cwtl
dec
cmp
ss
rcrb
sub
mov
cmp
repz
sub
fiaddl
lcallw
pop
popa
mov
and
sbb
sbb
test
push
mov
in
mov
daa
mov
xchg
scas
xchg
enter
test
xchg
adc
or
jb
pop
xchg
pop
inc
fcmovnbe
adc
call
mov
xor
fists
ds
and
pop
lcall
in
xor
aas
std
xor
bound
into
xchg
inc
lods
xchg
mov
imul
push
cmp
mov
enter
aam
js
fwait
lret
shll
jne
loopne
mov
mov
daa
add
xor
cmc
out
pop
push
jge
push
xchg
xchg
insb
jp
stos
bnd
pop
sbbl
lret
data16
cmpsl
mov
sub
mull
or
dec
scas
xchg
push
cmp
aad
sbb
lods
aam
cmc
pop
pushf
cmpsl
xchg
stos
test
mov
dec
xchg
imull
push
out
pop
idivb
jae
jb
je
pop
out
xor
mov
xchg
lods
lock
push
jae
mov
cld
loopne
dec
in
and
push
sub
jmp
mov
jo
lods
xchg
adc
or
imul
xchg
mov
jl
imul
std
sub
and
mov
movsb
in
in
push
cmpsb
sbbb
xchg
in
scas
iret
sbb
pushw
icebp
daa
xor
out
hlt
add
adc
adc
mov
dec
inc
xchg
push
call
jp
or
jno
nop
loopne
pushf
sub
mov
cli
or
imull
dec
lret
pusha
and
inc
popa
jbe
jl
xchg
cmp
dec
das
shrl
test
mov
xorb
bound
and
mov
push
jmp
xor
adc
cmp
roll
cmpsb
inc
stc
dec
jb
sarl
mov
pop
mov
jge
clc
or
pushf
xchg
sar
lret
rclb
push
popf
push
sub
mov
test
test
mov
lock
data16
data16
int
lods
sbb
lods
jnp
scas
sbb
and
pop
aad
inc
inc
test
sbb
add
dec
aam
lcall
aam
orl
hlt
addr16
xchg
enter
mov
mov
ss
push
dec
xor
icebp
cmpl
sbb
in
xchg
jge
add
push
mov
pusha
fwait
mov
mov
add
and
pop
mov
repz
cmpsb
push
mov
in
imul
std
dec
jg
and
or
fnstenv
xchg
mov
mov
jnp
and
and
mov
inc
dec
adc
cmpsl
jecxz
pop
add
daa
mov
data16
mov
mov
add
pushf
mov
add
int3
cld
aas
cmp
push
pop
data16
loope
cwtl
mov
arpl
into
lock
push
lock
dec
ja
sub
stos
mov
mov
testb
xchg
sti
adcl
jb
stos
or
aas
rcll
add
cmpb
pop
fs
cli
out
fstpt
or
jp
lcall
jnp
iret
enter
lahf
jno
shrl
jp
cmp
ja
mov
vpminub
test
sbbb
shlb
sti
jmp
std
out
mov
add
shr
cmp
negb
pop
dec
and
xchg
cmpsb
push
pop
ret
add
test
jnp
fildl
push
hlt
fwait
out
pop
sub
mov
sbb
jl
xor
mov
jae
cmp
sahf
add
movsl
sub
das
notb
add
sti
cmpsb
cltd
fisubrs
sub
mov
movsb
jp
or
mov
fwait
sub
cltd
lret
cmp
mov
xor
dec
lock
push
das
addr16
xchg
pushf
out
mul
fs
mov
dec
aad
lods
push
xchg
fsub
pop
inc
popf
add
push
dec
aas
inc
decl
jl
hlt
xchg
iret
sbb
pop
lret
push
aas
pop
in
pusha
xor
mov
testl
cmp
add
outsl
push
rcrl
lcall
sbb
mov
stos
shrb
mov
addr16
cmc
mov
sbb
in
xor
fimull
jae
cs
scas
loope
or
or
stc
outsl
dec
bound
repnz
adc
jo
mov
rcl
mov
sub
add
es
cmp
add
in
xor
cli
sub
mov
cmp
js
imul
cmpsb
outsb
dec
das
cmp
negl
loopne
pop
cli
push
jge
xor
inc
cmp
xchg
cmpsb
lret
mov
roll
mov
mov
push
mov
xor
int
fsubrl
rcrb
pop
cld
adc
mov
popa
add
imull
or
mov
mov
and
push
out
or
int3
mov
stos
dec
inc
mov
push
inc
aas
mov
sbb
jg
stos
xchg
int3
inc
sbb
out
or
loop
aas
and
cmpsb
hlt
xchg
sub
in
jb
pushf
dec
jp
add
dec
mov
sub
orl
xchg
push
mov
jo
out
jl
pop
jnp
sahf
push
mov
fdivp
aas
sbb
lcall
es
test
mov
lret
dec
lret
test
shrb
dec
jb
dec
rcrb
sub
mov
adc
shlb
cmp
in
sub
roll
fsubrs
rcr
int3
sbb
mov
xchg
movsl
sbb
arpl
sti
test
int
pop
sbb
push
mov
and
adc
faddl
mov
add
leave
call
or
cmc
repz
and
adc
outsl
jbe
and
adc
add
lret
xchg
test
push
bound
and
jb
or
stos
orb
mov
xor
hlt
shrl
sbb
std
cmc
lea
in
mov
xchg
mov
or
stc
xchg
orl
cmp
pop
cmp
insb
test
mov
add
and
lahf
in
arpl
push
inc
rolb
xchg
loopne
push
mov
into
mov
xchg
and
mov
repnz
cltd
push
addr16
addb
sbb
push
adc
jnp
sbb
dec
jle
sbb
jp
mov
xchg
push
mov
lods
xchg
xor
ror
out
add
hlt
inc
insb
imul
inc
mov
push
push
outsl
mov
cmp
push
adc
ret
mov
mov
ja
mov
mov
pop
fmull
fidivs
cs
and
stos
cmp
pop
cmp
in
dec
out
cltd
push
jecxz
rolb
cmp
stc
int3
mov
push
ret
mov
cmpsl
xchg
jne
test
je
lret
pop
sbb
movsl
lcall
repnz
and
mov
xor
add
test
faddp
nop
into
je
add
es
mov
fwait
add
jno
flds
xchg
mov
pop
fwait
sub
movsl
sahf
inc
dec
aas
adc
sub
pop
cmpsl
push
lret
sbb
push
call
pop
arpl
mov
call
dec
or
mov
dec
push
ret
into
test
cmpsb
push
sbb
mov
mov
xlat
lds
repz
cs
or
pop
test
cmc
and
aaa
add
aad
mov
lock
inc
mov
dec
decl
cwtl
xchg
pushf
inc
mov
mov
das
jae
pop
mov
adc
cmp
cmp
fsubl
xor
dec
mov
mov
cs
pop
ss
ret
sub
push
lcall
movsl
adc
das
mov
cmp
mov
in
out
sub
pop
xchg
arpl
in
idivb
sbb
push
rcl
insb
mov
mov
mov
fs
hlt
push
xor
cmp
shlb
imul
mov
push
or
mov
sarl
nop
push
out
mov
imull
out
cmc
lods
mov
cmp
imul
push
xchg
or
fstpl
mov
repz
mov
scas
mov
mov
test
mov
lea
sub
add
dec
jecxz
ds
cmc
mov
mov
xor
xchg
mov
es
out
push
mov
jbe
push
out
push
hlt
xchg
push
xor
idivl
xor
in
mov
sar
adc
aad
or
dec
dec
and
xchg
shll
lods
lret
push
shlb
jbe
sub
test
push
enter
xchg
add
adc
sub
rolb
or
movsb
cltd
jo
or
or
mov
mov
out
mov
icebp
cmp
pop
pop
movsb
mov
ret
pop
cmpsb
sub
xor
fs
xchg
sarl
inc
jae
and
adc
addr16
fwait
cmp
fsincos
lret
add
xor
mov
iret
sub
push
lea
ret
dec
lret
mov
bound
into
push
or
in
and
push
mov
mov
push
pcmpgtw
push
xchg
xor
out
je
loopne
inc
sbb
inc
jns
mov
jnp
test
fnstsw
jp
fnstenv
mov
shr
lret
xchg
mov
mov
pusha
test
in
popa
pop
icebp
lock
js
or
jns
jecxz
daa
sbb
icebp
dec
shlb
pop
stc
out
stc
outsl
pop
popf
pop
cli
ja
stc
sub
bound
gs
pop
pop
add
mov
jp
subl
push
sub
movsb
push
xchg
ja
fcoms
jg
inc
lock
lcall
std
jne
sub
stos
mov
ss
popf
mov
fwait
or
jb
or
push
ficoms
pop
and
jbe
loop
in
insl
dec
mov
mov
push
jne
add
mov
lock
ljmp
lahf
pop
inc
std
mov
sbb
mov
sahf
jns
rolb
mov
xor
ss
orl
das
add
das
icebp
adc
aaa
add
je
pop
mov
mov
add
pop
test
push
xchg
in
mov
xor
popf
movsb
cmp
and
shl
jb
cmpsb
outsl
mov
xchg
mov
jbe
xor
pop
insl
mov
jne
loope
out
es
xlat
mov
sti
and
mov
test
arpl
pushf
lahf
dec
xchg
incl
adc
aaa
mov
push
jnp
pop
jp
faddl
or
popa
loope
sbb
fisttps
sbb
aas
mov
mov
cmpl
movsl
push
insl
pushf
test
dec
mov
aam
test
jg
scas
loope
fidivrs
shll
xchg
mov
into
xchg
jmp
xchg
ret
xchg
mov
jmp
jmp
lahf
mov
jne
push
xor
mov
repnz
sub
sbb
push
xor
mov
mov
mov
sub
icebp
xor
stos
outsb
adc
in
shrb
sub
scas
popl
ret
nop
repz
pop
pop
inc
mov
cmpsb
stc
stos
cmp
push
cmp
xor
push
out
pop
pop
add
pop
imul
and
add
ljmp
mov
inc
int3
cmp
std
adcb
and
adc
and
call
scas
xchg
outsb
dec
adcb
jle
adc
outsl
cli
sub
mov
sbb
adc
mov
das
popf
leave
fmuls
push
lret
add
push
out
push
dec
or
stc
cmp
mov
dec
test
mov
or
xchg
outsb
pop
in
lahf
nop
jae
push
dec
mov
xchg
mov
hlt
shl
mov
lcall
mov
inc
lods
stc
lods
add
pop
std
mov
scas
gs
mov
jbe
jge
call
add
in
mov
jnp
and
inc
cmovle
popa
aaa
test
xchg
aaa
cmpsb
xor
xlat
repz
mov
push
rorb
inc
sbb
fadds
inc
inc
push
rolb
jb
push
jne
push
mov
mov
stos
into
adc
popa
scas
xor
sub
sbb
aam
mov
or
out
and
pop
cmp
adc
add
clc
push
inc
roll
aam
into
cmp
xor
jmp
jae
fs
sti
sub
fcmovnu
jl
lcall
shlb
clc
sub
loopne
xchg
push
std
sarb
add
add
pop
cmp
cli
scas
xchg
popa
lock
icebp
xor
push
cmp
in
fiadds
cwtl
fwait
jmp
adc
shrb
push
mov
push
dec
mov
lds
or
and
cmc
push
cld
rcr
pop
cmc
pop
xor
xchg
xor
cmp
lods
pop
xchg
or
daa
xchg
xor
leave
jp
jae
xchg
sahf
insb
or
aad
add
mov
imul
mov
pop
in
lods
lea
fisubl
inc
jo
arpl
in
dec
dec
xchg
clc
lods
je
int3
push
int3
jecxz
pushf
xlat
flds
push
xor
in
pusha
pushf
adc
xor
mov
push
mov
xchg
andl
outsl
insl
mov
mov
or
mov
imul
sbb
aad
adc
dec
adc
push
addr16
lods
add
repnz
pop
lock
cltd
mov
sbb
sbb
jbe
ds
sbb
sub
jns
push
stc
dec
das
jl
stos
test
or
mov
mov
testl
sbb
jae
lds
push
sbb
dec
jae
fbld
pop
inc
inc
cmp
fsubl
mov
jle,pn
inc
int
adc
adc
mov
jb
sbb
jg
insb
pop
xchg
mov
mov
into
adc
jg
add
fidivrs
cmpsl
mov
fldt
subb
dec
xchg
out
jg
test
xchg
dec
push
and
and
repnz
pop
popa
inc
pop
xlat
es
sub
mov
jno
test
sbb
stos
dec
mov
mov
cmp
mov
pop
cwtl
mov
sbb
aaa
sbb
fst
mov
xchg
ljmp
popa
and
pop
cmp
into
loopne
lods
adc
shll
mov
test
mov
je
push
add
sub
sbb
jne
jno
aad
push
sti
mov
add
sub
bound
inc
xchg
jne
adc
cli
add
stos
cmp
sarb
pop
sahf
faddl
leave
std
xor
mov
push
sub
lock
pop
jns
xchg
les
jge
lea
mov
mov
mov
int3
dec
xor
sub
shlb
ja
xchg
mov
loope
inc
pop
inc
call
or
dec
add
dec
arpl
pop
bound
and
adc
adc
adc
adc
sti
movsl
in
stos
sbb
sub
fs
push
add
adc
roll
inc
popf
add
in
sub
jle
scas
insb
cmp
loop
addr16
adc
and
stos
or
cli
mov
mov
int
testl
xchg
adc
bound
sbb
clc
aad
jecxz
sub
arpl
loope
xchg
and
fstl
iret
push
and
adc
push
scas
stos
mov
test
in
mov
mov
jae
mov
pop
push
jg
dec
cmp
ret
and
sbb
mov
adc
mov
dec
test
test
lods
enter
and
inc
les
mov
pop
xor
cmp
arpl
fldcw
fdivrl
cmp
push
jno
incl
adc
aad
push
das
pop
cmp
imul
out
js
arpl
stos
mov
sbbb
and
fistl
pop
call
mov
jo
push
push
aas
jb
gs
arpl
adc
xlat
mov
pushf
sub
enter
ljmp
daa
mov
mov
cmp
shl
out
add
mov
xor
xor
popa
rcll
dec
cmp
mov
out
cmp
sub
repz
sbb
jecxz
jo
in
pop
sahf
stc
push
jecxz
inc
out
xchg
add
cmc
fwait
dec
lcall
mov
lock
bound
mov
cmp
scas
cmp
sub
xchg
mov
lret
ret
aas
insl
out
adc
push
or
mov
pop
pushf
bound
xor
sub
lods
cmpsb
ror
loopne
movsb
add
in
mov
adc
lock
out
add
data16
pop
out
fcmovnu
icebp
fnstenv
lods
bswap
fsubrl
mov
push
sbb
stc
repz
roll
mov
pusha
dec
adc
push
and
sarl
stos
inc
fs
int
and
xchg
fcompl
cwtl
mov
sub
iret
pop
fdivp
not
arpl
sbb
cmc
rol
cmp
jbe
dec
dec
mull
fisubrs
test
xor
das
out
test
bound
inc
lcall
aas
jbe
jl
scas
adc
pop
mov
sbb
mov
mov
jns
dec
cli
data16
inc
cmp
inc
or
les
fsubs
ficoms
psrad
mov
imul
sbb
iret
stos
and
test
std
lahf
and
sbb
das
mov
loop
negb
push
cmp
xor
sbb
sbb
addl
fistpl
sahf
iret
or
imul
adc
push
testb
dec
mov
xchg
fstpt
xchg
loopne
movsl
adc
sub
xchg
mov
adc
pop
in
testl
xor
xchg
sbb
adc
subb
adc
cs
cmp
or
jmp
out
pop
sbb
sbb
out
and
fiadds
adcl
xor
icebp
int3
in
int3
fucomip
test
xchg
xor
mov
orb
aaa
push
leave
and
mov
inc
jmp
sahf
mull
and
ljmp
or
push
add
and
xor
movsl
adc
les
adc
cmpsb
dec
mov
stc
sub
movsl
aad
cmp
mov
sti
inc
out
cmp
sbb
sbb
jbe
sbb
or
lahf
sbb
and
and
jle
cli
cmpsl
das
stos
pop
mov
leave
jecxz
aaa
jns
aas
out
adc
pop
mov
jne
mov
and
push
loopne
in
aas
xchg
pop
sbb
int
inc
inc
dec
cltd
mov
mov
aas
jmp
mov
mov
push
pushf
mov
cwtl
sahf
mov
aaa
xlat
fs
lret
lods
mov
dec
mov
jnp
clc
test
xlat
pop
inc
lods
orb
push
je
lret
lret
das
jns
or
adc
nop
push
adc
ret
movsb
push
inc
mov
aad
outsl
pop
addr16
sti
cmpsb
mov
jae
mov
psraw
int3
push
push
fidivl
icebp
fbstp
pop
stos
lcall
jo
sbb
arpl
mov
dec
inc
cld
push
test
in
xor
repz
fnstcw
inc
dec
inc
fistpl
jo
inc
sub
ret
aas
and
xchg
xchg
mov
pop
scas
inc
inc
out
std
fxtract
movsb
aaa
xor
xchg
mov
data16
test
pop
push
mov
cmp
shlb
fs
jb
scas
fdivrs
push
push
pusha
and
movsl
mov
arpl
mov
inc
or
mov
stc
mov
out
jno
jae
jnp
ljmp
sbb
sub
mov
aaa
out
fcom
fnstenv
mov
xlat
stc
bound
or
xchg
out
test
or
xlat
push
add
test
and
popa
mov
dec
shl
and
jmp
jb
mov
cmc
mov
and
push
inc
inc
insb
and
cmp
cwtl
adc
and
xchg
xchg
pusha
sbbl
jmp
jp
dec
jb
pop
or
lea
push
or
push
pmaddwd
stos
jno
movsb
fbld
and
jle
mov
shll
ret
lods
jle
mov
jle
mov
aad
rolb
pop
sahf
in
mov
pop
inc
and
das
xchg
push
nop
inc
je
dec
std
sbb
movsl
imul
xor
xchg
ss
dec
or
aaa
xor
fnstenv
cmp
jp
push
in
sub
mov
mov
fidivrs
gs
ret
jge
hlt
fdivrl
mov
popf
jnp
pop
into
xchg
pusha
loope
pop
jle
dec
push
mov
mov
scas
lods
test
cmpsl
add
dec
scas
inc
sti
mov
imul
and
orb
jle
jl
shr
addr16
movsb
push
push
xchg
idiv
pop
fucom
ret
leave
adc
popa
sbb
push
lret
iret
mov
mov
arpl
inc
inc
sub
xor
push
mov
push
mov
jmp
repnz
adc
leave
dec
icebp
adc
imul
std
adc
imul
or
ret
add
ds
add
mov
mov
jno
int3
stos
xchg
inc
jg
mov
movl
subb
ja
stc
testl
inc
cmpsl
mov
xor
lcall
cmpb
cltd
mov
push
cli
or
xchg
call
mov
lods
pusha
inc
testb
and
incl
xor
or
jp
lock
scas
loopne
push
cltd
pop
add
push
sbbb
inc
rorl
jecxz
loop
lods
push
dec
orb
enter
mov
or
push
push
dec
lret
inc
lock
pop
cmpb
fimull
xor
push
aam
pop
jmp
loopne
jae
ss
imul
fcoms
lock
int
mov
ds
pop
dec
add
jl
jne
outsb
sbb
mov
out
push
into
das
bnd
xchg
inc
or
sbb
scas
sbb
or
sbb
or
fnstsw
mov
jmp
push
sarb
inc
xchg
sar
enter
mov
xchg
sbb
or
gs
call
push
mov
movsl
jns
call
push
xchg
mov
sbb
imul
pushf
inc
inc
lret
roll
and
test
mov
stc
es
mov
or
mov
jle
cmp
rcrb
push
mov
pop
shrl
lret
xor
jbe
sti
leave
and
jle
aad
rorb
out
and
inc
mov
inc
mov
xchg
sub
pop
cwtl
dec
sbb
sub
lret
ret
cmp
jle
loope
in
js
mov
fdivrp
insl
fsubrp
movsb
xchg
rcrb
adc
aam
inc
xlat
repnz
and
enter
pop
scas
push
test
xor
push
cmp
aaa
inc
dec
inc
out
les
adc
or
mov
in
loope
ss
cmp
rolb
shll
stos
inc
cld
stos
jns
hlt
inc
sub
xor
aad
xchg
les
adc
adc
jbe
rorl
imulb
lock
mov
lcall
popf
xchg
lcall
pusha
dec
inc
dec
jnp
les
add
or
add
push
sbb
fbld
movntps
cs
pushf
shrb
mov
imul
push
jge
inc
mov
push
push
jne
fdivrp
jp
lret
lods
arpl
decb
in
jb
sbb
pop
sbb
xor
outsl
rorl
mov
xor
mov
xchg
imul
das
mov
pop
test
push
scas
xor
sub
lret
lcall
sbb
movl
clc
pop
fcomps
add
cmp
push
out
movb
andb
push
adcb
int
into
movsb
mov
mov
rcrb
cmp
sub
fdiv
and
mov
inc
adc
dec
and
lods
stc
and
push
aaa
cmp
test
inc
mov
jle
adc
mov
fildl
sbb
std
pop
scas
push
xor
jno
inc
clc
mov
in
mov
jle,pn
in
lcall
jno
rorl
pushf
imul
push
mov
and
mov
cmpsb
mov
aaa
inc
xor
pop
jo
cmp
adc
and
in
push
mov
cmp
dec
loopne
add
cmpsl
cwtl
adc
pushf
std
pop
cld
sub
inc
and
push
popa
xchg
ja
popa
sbb
mov
or
mov
sub
inc
fiadds
pop
icebp
pop
lock
xlat
movsb
sub
pusha
mov
mov
in
and
lods
inc
jp
sbb
out
jle
std
jecxz
es
mov
sarl
inc
es
cwtl
pop
test
jl
or
add
mov
xchg
mov
arpl
cmpsl
sbb
fstpt
repz
fildl
cmpsb
push
das
mov
adc
cmp
enter
and
leave
shll
cmp
out
push
loope
push
aas
stc
mov
in
popf
lcall
xchg
scas
out
jecxz
jae
pop
mov
jmp
sti
mov
jecxz
mov
push
jne
out
lcall
mov
xchg
mov
fwait
push
xchg
icebp
shlb
sub
pop
fdivrs
pop
js
dec
jnp
cltd
mov
shl
les
adc
outsb
xor
sbb
mov
mov
addl
popf
adc
xchg
push
mov
xchg
int
mov
sarl
mov
mov
insl
xchg
ja
pop
out
cmp
push
mov
cmpsb
xor
and
adc
sub
adc
int3
rol
rcrl
inc
dec
adc
into
cmp
push
cmp
mov
rcrb
aas
dec
xchg
xchg
mov
jo
add
fwait
cmp
jl
lods
xchg
sub
push
jnp
pop
movsb
push
testb
into
push
jle
jae
das
xchg
add
dec
pop
cwtl
sub
fs
jne
ss
in
mov
and
cmpsl
in
popa
stos
out
jnp
enter
push
subb
cmp
out
xchg
insb
loopne
dec
mov
leave
das
jo
mov
arpl
pop
imul
in
es
jecxz
push
enter
lret
and
jecxz
imul
sbb
lret
or
into
fs
dec
sbb
addl
into
lahf
lret
pop
xchg
dec
mov
testb
mov
pop
pop
out
xchg
jae
xor
fcoms
lds
icebp
xor
mov
xor
pop
fnstenv
cmp
daa
jmp
mov
sub
je
sbb
dec
xor
mov
in
cmp
rclb
ret
aam
outsl
test
or
mov
lahf
pop
jmp
mov
iret
dec
add
mov
ds
aaa
push
cmpsl
mov
rolb
ds
mov
scas
push
stos
xchg
sub
movsb
adc
test
jle
rorl
ja
icebp
mov
push
ds
pop
int
in
ficoml
ret
dec
dec
sbb
cmpsl
sbb
or
and
in
mov
mov
mov
mov
jge
cmp
stos
jne
mov
xor
mov
push
lock
daa
cmp
mov
add
mov
push
xor
mov
les
nop
in
sti
cld
leave
mov
rorl
movl
icebp
in
popf
or
jo
leave
sub
pop
sti
push
adc
and
push
test
fwait
aad
cmp
pop
pop
sbb
sahf
das
or
shlb
outsl
fwait
adc
ja
adc
roll
push
mov
xlat
push
xor
addr16
mov
jl
push
xor
inc
xor
inc
int
iret
decb
dec
jle
sbb
outsb
adc
xchg
mov
mov
cmp
xchg
mov
outsl
cmp
movsb
and
inc
cmp
dec
shl
sbb
lea
inc
outsl
mov
mov
mov
add
test
and
or
pusha
and
lcall
mov
mov
xor
xchg
arpl
in
dec
mov
imul
sbb
arpl
jnp
imul
mov
into
inc
pushf
xchg
mov
ds
mov
aaa
inc
out
inc
mov
pop
jl
aas
les
aaa
adc
or
add
sahf
call
pop
movsb
iret
aaa
xbegin
push
std
int3
pushf
mov
push
adc
gs
inc
rcll
sub
inc
push
mov
fistps
pop
lock
movsl
cld
or
jmp
jmp
movsb
adc
loopne
push
push
das
mov
aam
xchg
or
cmp
pop
aad
icebp
jne
push
aad
dec
xchg
dec
hlt
add
stos
call
into
xchg
aam
pop
pushf
mov
arpl
mov
cld
or
add
jbe
cmpsl
adc
mov
out
pop
ret
outsb
imul
cmp
jne
cs
std
push
sahf
shll
xor
xor
dec
movsb
sbb
xor
adc
out
and
sarl
adc
dec
push
lock
sub
dec
adc
dec
xchg
push
xor
jns
xchg
ficoml
mov
lods
lret
fimuls
add
adc
pop
popa
sbb
xchg
vpunpcklwd
sub
adc
sbb
cmc
dec
lret
push
add
lods
iret
or
cltd
aam
mov
pop
cmpsb
icebp
dec
lds
insl
lcall
push
pop
mov
mov
jecxz
js
mov
cltd
sub
mov
add
sbb
sbb
inc
push
cld
shll
sub
shl
cwtl
sti
lahf
cmp
dec
or
inc
push
mov
jne
xor
or
cmp
sahf
dec
fistps
lds
setge
imul
rorl
mov
lret
inc
dec
push
pop
rcr
shld
dec
shl
cmp
and
jno
les
add
in
and
mov
jns
call
cmc
dec
or
fdivl
jg
xchg
xchg
sbb
push
and
fistl
cwtl
ss
mov
jo
int
cmp
lock
dec
arpl
jecxz
mov
xor
pop
or
movsl
xor
jb
dec
add
cmp
sbb
mov
shrb
mov
lret
cmp
fistpl
cmp
loopne
pop
loop
and
out
jnp
mov
xchg
leave
mov
mov
mov
dec
push
sbb
out
aam
xor
scas
movsb
cld
xchg
loop
int
push
sbb
sbb
dec
imul
aaa
aaa
push
rcll
mov
call
movsl
iretw
mov
cmp
inc
sbb
idivb
xchg
xchg
add
enter
out
sub
xlat
or
clc
dec
cltd
inc
loopne
out
xor
pop
cli
iret
or
in
lret
cmp
stos
pop
out
inc
inc
das
pop
lea
adc
sub
xor
adc
mov
repz
lret
mov
pop
pushf
jge
daa
push
and
pop
lea
movlps
stos
inc
lds
rol
pop
mov
push
sub
sti
ficomps
jmp
fwait
pop
mov
in
cltd
lock
gs
cmpsl
and
test
psrlw
sub
imulb
lret
sub
lret
movl
in
inc
mov
sbb
imul
xlat
xchg
mov
bound
push
push
sub
mov
outsb
subl
mov
dec
aas
sub
cmp
or
enter
and
jno
xor
dec
sahf
scas
adc
scas
lret
xor
aaa
pop
xchg
or
lcall
jmp
inc
inc
lock
mov
jl
jle
ret
aam
or
jmp
stos
dec
out
out
xchg
test
xchg
and
ds
adc
outsl
pop
filds
bound
mov
out
std
inc
mov
incb
xlat
pop
decb
adc
popa
xchg
sahf
aad
data16
or
push
dec
hlt
in
xchg
leave
movsl
lret
das
push
adc
mov
aas
lods
sti
addr16
xchg
test
inc
mov
sub
loope
push
imul
cmp
insb
jb
push
div
divb
sub
cmp
dec
jle
outsb
mov
sub
pop
adc
ror
mov
cmp
xchg
xchg
lods
jl
dec
imulb
dec
or
sti
xor
cmp
call
shlb
mov
test
push
jns
xor
jno
testb
mov
inc
sbb
dec
xchg
jnp
mov
push
test
cmp
scas
mov
mov
mov
mov
xchg
outsb
je
aaa
pop
sub
clc
fwait
call
mov
fsubrl
subl
jno
or
adc
pop
and
cmc
xor
nop
stos
in
fidivrl
push
adc
aas
je
xor
adc
and
js
cmp
push
int
cmpb
xchg
mov
movsl
ret
cwtl
jmp
add
dec
out
in
icebp
sti
sarl
jle
sub
dec
mov
out
or
push
stos
jb
jae
jmp
jne
pop
or
adc
iret
std
arpl
pop
aad
mov
push
xchg
fiaddl
rorl
sub
xchg
in
cmp
add
es
shll
ret
dec
sub
pop
bound
sbb
lret
sub
lahf
cmp
cmp
sub
data16
mov
push
outsl
jnp
fidivrs
mov
dec
sbb
mov
adcb
pop
push
cli
imulb
dec
dec
and
nop
in
addb
fisubrs
mov
sar
fsubl
sbb
sub
fsts
les
or
loop
outsl
data16
sarb
xlat
xchg
inc
jge
in
and
test
aam
dec
xlat
or
cmp
cmp
mov
push
xor
sbb
xor
nop
les
push
jb
pop
mov
mov
mov
cmp
pop
insl
cli
dec
out
sbb
add
test
adc
es
mov
fucomp
adc
or
cmp
and
adc
pop
cwtl
pop
mov
inc
adc
add
ret
fidivrl
movsl
mov
das
pop
incb
mov
cmc
ret
jne
lods
add
xchg
loop
mov
inc
ja
and
inc
dec
pop
lret
push
inc
into
sub
push
gs
and
addr16
jmp
and
aad
adc
sub
daa
loope
lahf
add
stos
inc
inc
in
sbb
dec
push
jmp
add
inc
cmp
inc
test
pop
cmpsb
insb
mov
rorb
push
xor
iret
add
roll
idivl
rorb
push
jns
outsl
mov
je
fbld
sub
add
lods
mov
mov
adc
and
sub
xchg
repz
fsubs
rcrb
add
mov
mov
imul
mov
or
jbe
ljmp
mov
shl
jl
cltd
jne
or
int
cmp
push
mov
push
jp
inc
je
jne
adc
jmp
test
enter
cltd
fldl
add
jne
xchg
int3
popa
and
pop
xchg
push
aad
xor
aas
inc
popa
mov
and
stc
mov
lret
jg
mov
mov
push
fstpl
test
imul
lahf
jp
cmpb
xchg
adc
inc
repz
sbb
pusha
cld
sub
mov
adc
push
jns
test
aaa
bound
fwait
push
pop
xor
fdivl
pop
cmp
daa
xchg
cwtl
into
leave
push
pusha
dec
sbb
icebp
sahf
ret
pushf
outsb
jns
or
fisttps
xor
lret
addb
or
mov
cmp
sbb
or
int
loop
pop
push
adc
cmp
stc
pop
fsub
lahf
out
fs
stos
popf
or
xchg
adc
mov
mov
outsb
lods
mov
mov
hlt
lock
loope
popf
sub
dec
popa
out
sbb
lds
idiv
push
insb
pop
out
int3
cmp
adc
repnz
ror
jnp
adc
sarb
dec
bound
push
lds
aam
negb
popl
add
xchg
imul
xor
or
stos
pop
ds
mov
testb
inc
lret
dec
adc
leave
pop
lret
lret
dec
pop
pop
jge
or
incb
pop
and
stc
jae
mov
out
mov
dec
mov
mov
push
mov
nop
mov
mov
sbb
mov
adcb
add
lods
lods
arpl
shr
lds
inc
jbe
lock
adcl
iret
jl
andb
jae
adc
imul
mov
clc
mov
ds
stos
add
cmp
jl
sbb
ss
cmpsb
test
and
add
hlt
push
test
into
cltd
dec
mov
nop
xor
cmpl
add
pop
mov
pop
loope
pop
incb
xchg
decb
std
imul
insb
adc
and
ret
dec
nop
or
add
bound
mov
cld
push
repnz
scas
dec
pop
imul
and
movsl
fsubrl
mov
jg
andb
jp
xor
data16
pop
xchg
cli
das
pop
aad
mov
mov
ret
test
dec
mov
jb
pop
xlat
lods
scas
mov
mul
je
adc
sub
gs
imul
movsb
int3
pop
push
push
fcmovb
xlat
cmp
adc
rcll
std
or
sub
sbb
sahf
cli
add
mov
arpl
in
xchg
adc
jb
je
pop
pop
mov
in
jne
mov
mov
push
sbb
mov
sbb
insl
out
xor
pminsw
out
xchg
add
push
mov
lret
insb
loopne
sub
ds
xor
sarb
push
data16
repz
xorb
test
or
xchg
loopne
and
popf
push
stc
jb
in
repnz
xlat
and
addr16
or
shlb
pushf
sbb
jmp
cmp
rclb
push
push
push
jl
sub
call
int3
pop
out
cmp
je
out
push
int3
and
push
sub
add
xlat
add
jg
add
imul
gs
mov
lahf
pop
dec
jmp
jnp
lds
add
mov
jecxz
add
jmp
or
mov
add
ja
xchg
add
and
or
scas
in
lods
je
std
push
or
popa
les
roll
or
push
lock
jg
clc
jb
fcmovb
push
popa
out
inc
lcall
jnp
push
add
std
loope
push
cmp
mov
mov
cmp
into
gs
cmp
scas
cld
mov
mov
lcall
cmp
aas
out
jb
dec
andl
stc
adcb
pop
inc
adcb
mov
mov
xchg
cmpsl
loop
push
mov
add
pop
mov
dec
out
fs
daa
test
or
mov
mov
or
dec
pop
mov
mov
push
std
bound
sbb
adc
pop
hlt
sarb
ret
push
jae
mov
cmp
mov
inc
xchg
pop
or
xchg
mov
xchg
dec
lea
or
pop
adc
shrb
add
shrl
adc
data16
xchg
xor
and
pop
jns
aad
and
sbb
cltd
cmpb
addr16
dec
pop
mov
ds
scas
jnp
outsl
out
movsl
ljmp
js
inc
sbb
mov
add
push
inc
fnstsw
popa
ja
les
mov
lods
adc
mov
inc
inc
add
adc
push
dec
mov
les
inc
fiaddl
push
sub
inc
cld
jbe
pop
enter
bound
js
mov
pop
daa
into
icebp
xor
flds
in
daa
jl
arpl
and
jno
movsl
mov
jbe
out
dec
push
lret
jl
ret
lock
mov
pop
lea
add
imul
cld
pop
idivl
les
cmp
cli
in
jg
inc
dec
push
pop
orl
out
rclb
gs
ds
jne
fwait
mov
daa
inc
adc
addr16
fidivl
mov
dec
in
dec
sub
fcmovb
subb
add
dec
jae
adc
pop
inc
aam
xor
orb
out
popf
mov
outsb
mov
mov
add
inc
pop
stos
dec
enter
fmull
call
incb
aas
std
sbb
outsl
cmp
in
movsl
pop
fwait
add
sbb
insl
into
js
lret
fs
xor
mov
mov
or
mov
dec
mov
stc
fistps
mov
les
pop
out
push
in
adc
loope
incb
out
loopne
lcall
jle
ljmp
jb
jb
push
out
jmp
jle
ret
push
shlb
lock
add
cmp
and
mov
ss
mov
test
out
pop
jno
mov
pop
aam
jae
mov
addr16
loop
cltd
fwait
xchg
cmpsb
cwtl
cmp
mov
mov
cltd
pop
frstor
cmp
sahf
and
dec
xchg
sbb
mov
int3
and
dec
mov
idivb
dec
out
xchg
and
lock
xor
nop
inc
sbb
and
sbb
inc
push
ss
pop
add
xchg
mov
test
arpl
xchg
test
mov
aam
popf
mov
flds
mov
sub
shl
js
mov
in
into
cwtl
call
or
int3
loopne
xor
xor
insl
mov
das
sub
jns
insl
push
mov
push
les
or
and
xchg
imul
mov
inc
divl
dec
fsubl
fxrstor
and
es
aam
repnz
hlt
lea
aas
pop
push
ret
push
and
jo
sbb
sbb
or
je
jl
adc
idivb
fildll
jl
xorl
dec
pop
into
iret
addr16
jno
adc
sahf
in
cltd
cmp
xchg
pop
sarl
mov
and
jne
add
gs
push
mov
adc
pop
out
push
push
jg
push
jl
xorl
xor
xchg
js
addr16
inc
lahf
adc
js
mov
negl
pop
mov
repnz
add
mov
lret
mov
xchg
scas
lods
call
idivb
lahf
rorl
and
sub
xchg
out
jle
das
js
inc
pop
or
sbb
lds
jo
ret
sub
mov
aad
inc
fimull
sub
mov
repnz
dec
lcall
and
fldcw
mov
fsubs
inc
dec
and
fcmovnu
or
sbb
pop
dec
pushl
sub
sub
bound
sbb
xchg
rorb
fcoms
mov
xor
and
in
and
imul
sbb
and
sbb
mov
cmpsl
fcoms
xchg
or
lock
bound
and
and
or
jno
repz
ss
inc
or
or
and
in
jecxz
filds
add
pop
and
inc
cmp
xor
push
dec
test
push
jecxz
dec
mov
add
ss
gs
mov
outsl
mov
sub
lds
or
test
insl
popa
mov
ljmp
sub
cmp
scas
mov
dec
inc
xchg
jg
fbld
cmp
sbb
push
mov
push
sbb
ficoms
clc
sbb
cmp
pop
das
and
push
and
or
push
ljmp
fisubrs
cwtl
orl
or
xor
je
cmpsl
and
popl
shlb
das
xchg
add
mov
fnstsw
pop
sbb
cmpsl
call
mov
outsb
ljmp
sub
sbb
stos
and
stos
fidivs
cmpsl
xchg
xor
and
lahf
sbb
cli
push
cwtl
mov
adcl
or
inc
out
adc
push
aam
push
inc
fstpt
insl
data16
jge
sahf
xor
sbb
jbe
sub
negl
es
or
les
rorl
pop
aad
inc
lcall
sti
shl
fbstp
test
cmp
adc
jecxz
adc
emms
adc
ljmp
sub
cmp
lcall
shrl
mov
dec
cmpsl
out
je
mov
test
out
cmp
sbbb
add
lds
rclb
mov
add
lea
xchg
cmp
jns
shll
outsl
add
sub
ret
sub
inc
es
out
mov
and
xchg
outsb
fisttps
dec
push
mov
xlat
out
inc
sbb
gs
mov
xlat
hlt
cltd
icebp
cmp
andb
out
and
lcall
xchg
and
adc
xorb
jo
fwait
loopne
mov
repz
mov
ficoms
movsb
addr16
enter
outsb
es
inc
xchg
rcrb
mov
popa
xchg
push
push
nop
add
pop
adc
sti
jnp
test
inc
dec
repz
dec
popa
mov
scas
inc
insl
decl
jae
mov
nop
xchg
scas
ds
ret
cmpsb
ret
ficomps
sti
js
xor
rolb
sbb
movb
mov
jle
sbb
pop
adc
xchg
dec
or
loope
aaa
dec
lret
push
adc
out
nop
lea
sub
push
fnstenv
xchg
dec
push
jb
popl
lcall
sub
nop
mov
ja
test
push
mov
xor
pop
xchg
iret
aam
cmc
push
pop
enter
sahf
fstpl
sbb
test
mov
inc
mov
int
push
inc
and
int
mov
push
fwait
je
pop
pop
fdivrp
stos
mov
arpl
loope
test
sahf
pop
arpl
add
stos
push
popa
ljmp
inc
test
cmpl
adc
rorb
jl
mov
insb
das
cmp
ljmp
pop
ja
dec
jg
insb
and
xor
adc
xchg
jle
loopne
add
out
pop
lret
sahf
jne
mov
outsb
add
xchg
cmpb
stc
sahf
lcall
loope
roll
es
adc
test
jge
push
mov
and
sub
std
push
sub
mov
rorl
repnz
int
out
mov
pop
jns
cmp
aad
cmp
fbstp
pop
adc
addr16
aad
push
repnz
add
lret
stos
dec
fsubl
or
xchg
test
add
movb
inc
add
xchg
js
sar
push
inc
movsl
sub
cmp
addr16
mov
add
sub
inc
dec
not
mov
push
or
cmpsl
aad
xchg
pop
add
xor
jl
fwait
and
xchg
out
pop
loop
out
sbb
inc
cmp
pop
jecxz
lahf
imul
sub
sti
jnp
mov
fcomps
sub
repnz
mov
imul
in
sub
mov
adc
dec
mov
or
push
adc
mov
into
jbe
mov
mov
add
sbb
inc
add
inc
push
pop
jmp
or
jne
aad
xchg
push
in
cmp
inc
dec
iret
adc
pushf
adc
cmp
sahf
adc
std
enter
lahf
add
jp
jo
in
or
fwait
push
cmp
mov
loopne
or
xchg
test
push
mov
inc
popa
xorb
inc
lea
out
sar
mov
fcomps
adcl
pop
es
sbb
adc
jg
in
inc
xchg
mov
pop
mov
cwtl
test
stos
mov
cmpsl
adc
sub
push
xor
es
icebp
mov
jmp
mov
jge
cmp
push
sbb
sahf
loope
and
filds
scas
fisttpll
call
push
sbb
xor
and
sub
xchg
mov
data16
test
jne
es
pop
push
clc
shr
xor
sub
test
jp
addl
push
jmp
mov
fadds
in
sub
adc
fiaddl
rcrl
jno
sub
cmp
in
add
dec
loope
cmpsl
insb
outsb
jp
xchg
and
add
add
adc
or
jecxz
lods
adc
cmp
or
popf
imul
xor
pusha
movl
loope
std
push
mov
in
pop
out
aaa
xchg
pop
sub
xchg
popa
movsb
or
or
fldt
fiadds
lcall
mov
inc
dec
jne
sub
mov
loope
loopne
inc
out
stos
mov
sbb
inc
xor
ljmp
pop
ret
cmp
inc
movsl
aam
xchg
cmp
outsl
int3
sarb
jnp
mov
push
movsb
rcl
add
in
push
adc
aam
loope
dec
mov
in
sub
insb
jmp
jo
insl
fstpl
jae
shl
outsl
adc
inc
ret
nopl
pusha
cmp
rclb
loopne
inc
cmp
jbe,pn
adc
or
or
pop
sbb
dec
in
pinsrw
mov
movsb
cmp
mov
pop
push
lahf
or
or
fs
pop
jp
dec
sbb
xchg
jmp
les
shlb
xor
jg
xchg
push
sahf
or
and
sub
repz
imul
int
or
mov
js
js
jnp
iret
xchg
mul
loop
fiadds
jp
mov
in
or
mov
stos
mov
mov
jns
sbb
ret
lods
push
or
xchg
testb
sti
pop
xchg
pop
cmc
stc
sbb
jbe
leave
xor
andl
push
ljmp
xorb
loopne
push
push
fdivrl
aaa
scas
xor
push
loope
in
test
aas
pop
and
sub
sbb
push
pushf
addb
and
clc
imul
xchg
inc
gs
mov
imul
enter
cmc
lahf
pushf
adc
mov
push
ljmp
fs
int
orl
jecxz
xchg
jge
fsubrl
jo
push
test
mov
sbb
pop
pop
mov
add
fcomp
xchg
in
in
mov
rolb
in
pop
dec
dec
cli
mov
dec
mov
adc
cmp
cmpsl
lret
notl
popf
lcall
addb
fwait
out
add
adcl
jge
lock
pop
sub
add
leave
stc
sbb
adc
adc
mov
aad
je
adc
xchg
jecxz
xchg
icebp
add
sbb
push
test
jnp
jg
iret
pop
shlb
mov
int
sub
inc
adcl
push
iret
or
sub
in
cmp
iret
inc
sub
fdiv
mul
arpl
mov
inc
aaa
and
pop
out
add
and
enter
and
jl
mov
sub
fsubs
das
pop
in
inc
sti
pop
cltd
xor
decl
fldenv
loopne
sahf
sbb
mov
push
or
jnp
dec
push
pushf
iret
sbb
aad
pop
lock
cmc
scas
daa
aaa
loope
add
jb
mov
fucomp
cli
je
icebp
gs
xlat
xlat
or
xchg
mov
sub
flds
outsl
je
add
cmp
mov
and
inc
mov
xchg
cmpsl
push
cmp
push
push
push
icebp
popf
js
out
xchg
outsb
sub
outsb
push
or
adc
insl
mov
daa
mov
sub
add
xor
mov
gs
sub
rcrb
jbe
xchg
js
mov
scas
inc
xchg
mov
jnp
pop
or
jmp
mov
popf
ret
popa
test
movsb
pop
sbb
sbb
fldenv
cld
pop
sub
cmpsl
js
cmpsl
loope
test
inc
xchg
es
sub
loop
sub
push
mov
adc
rorb
jecxz
divl
cmp
add
scas
adc
int
jmp
dec
or
dec
jp
jp
imul
rcr
outsl
mov
sti
mov
clc
mov
dec
setnp
jecxz
xor
dec
lods
dec
mov
fsubrl
sbb
int
loop
dec
jns
outsb
ljmp
test
scas
cwtl
inc
mov
adc
ret
push
call
xor
addl
and
mov
repz
mov
adc
shll
addl
nop
mov
pop
ret
jb
clc
pop
test
mov
imul
and
xchg
in
push
outsl
mov
jo
fs
cmp
xor
cmp
ja
push
loop
mov
div
cmp
cmp
mov
lods
sub
dec
adc
xorb
nop
ret
mov
mov
mov
add
sbb
jecxz
pop
push
push
add
push
out
sub
outsb
lahf
stc
xor
cmpsb
sbb
cs
aam
lcall
or
test
imull
mov
push
loope
add
je
into
movsl
cmp
jno
test
ja
jl
es
xor
jl
dec
ss
call
add
adc
mov
roll
test
push
jecxz
loope
push
lds
sbb
lcall
out
ljmp
and
sahf
sbb
bound
iret
sbb
adc
mov
stc
jge
stos
gs
hlt
lret
add
leave
movsl
int3
bound
daa
insb
or
shlb
add
int
mov
fucomp
xor
xchg
and
dec
enter
fldenv
lahf
lahf
pop
push
lods
out
das
clc
scas
mov
sbb
sub
cmp
pop
loop
push
mov
xchg
xor
out
mov
inc
fcoml
and
xlat
das
les
xor
inc
mov
shlb
es
je
sub
sub
pop
fldenv
xchg
notl
lret
loope
push
pop
dec
loop
add
test
mov
mov
lret
daa
loop
add
push
mov
adc
dec
bound
imul
push
push
dec
xlat
js
dec
pop
stos
pop
cld
push
jo
nop
and
mov
dec
cmpsb
jo
push
repz
push
push
pop
push
je
pop
jne
xchg
or
adc
outsl
inc
lds
insl
mov
jbe
inc
jno
mov
push
pop
and
add
inc
xchg
add
xchg
and
dec
mov
sbb
repz
add
and
in
outsb
jbe
sbb
into
and
xchg
imul
adc
ret
test
sbb
cli
bound
enter
or
push
and
loope
in
push
lret
jp
mov
or
add
ret
sarb
fnstcw
cmp
data16
mov
fdivl
iret
xchg
cmovns
clc
mov
adc
sub
test
adc
dec
sti
sub
addl
test
cmp
dec
xor
sbb
mov
cmp
lock
pop
jnp
mov
hlt
ror
nop
cmpsl
mov
cmpsl
add
xchg
int3
sub
sahf
enter
push
clc
jge
jmp
push
bound
out
in
test
add
mov
pop
dec
adc
mov
mov
lea
sub
sub
dec
jecxz
imul
jg
movsl
jno
outsb
nop
test
mov
sbb
call
in
push
adc
dec
cmc
incb
pop
jb
scas
sub
cltd
adc
xor
sar
add
rcrl
jno,pt
popf
cmc
adc
lods
jb
call
movsb
mov
dec
inc
test
fldt
mov
or
idivb
dec
sub
in
lods
lea
mov
lret
push
mov
testl
sbb
ss
or
mov
xor
cmp
addl
insl
loop
lahf
das
daa
inc
pop
mov
pop
dec
mov
mov
mov
fldenv
pushfw
mov
shr
aad
push
xchg
jmp
sub
outsb
mov
inc
mov
loop
aad
ss
push
imul
pop
addr16
mov
outsl
pop
or
aaa
dec
arpl
xor
jp
push
imul
mov
idiv
mov
icebp
xor
push
loopne
daa
stos
mov
sbb
or
xchg
les
pop
pop
and
inc
adc
fisttps
lds
jmp
pop
pop
dec
cmp
jbe
adc
xrelease
iret
sbb
adc
cmpsl
in
cmp
inc
aad
inc
jmp
fistpll
adcl
inc
ret
jb
pop
dec
jge
xor
rcrb
xchg
xor
xor
pop
mov
ja
bound
sub
pop
test
mov
and
pop
push
cmp
xor
xchg
jecxz
push
xchg
daa
jmp
pop
fcompl
out
mov
and
cmp
jo
sub
mov
dec
xchg
xchg
bnd
jns
push
notl
jno
inc
popf
ja
push
jae
bnd
popf
mov
sti
mov
jae
mov
xor
pop
lcall
mov
arpl
nop
inc
loope
xchg
repz
cmp
notl
pop
out
add
mov
jg
pushf
mov
push
insb
lock
xchg
mov
loope
add
fsubr
or
pop
into
push
cltd
lods
outsl
sbbl
fimuls
inc
mov
mov
cmpsl
imul
ret
enter
cmp
mov
cli
and
cmpsl
in
sbb
into
int3
push
mov
jge
cmp
pop
je
ja
pop
xchg
movsb
daa
stos
xchg
mov
dec
jmp
enter
mov
and
sbb
pop
xchg
inc
mov
xor
and
xchg
jl,pt
subb
push
dec
mov
xor
mov
pop
add
adc
pop
and
pushf
adc
adc
scas
insb
pop
sub
insl
data16
adc
xchg
mov
or
cmc
mov
incl
mov
loop
insl
dec
mov
inc
cltd
mov
jbe
mov
pusha
push
push
inc
test
adc
into
jb
sbb
aaa
popf
dec
add
out
in
int3
adc
ficompl
xor
dec
and
leave
popw
test
icebp
outsl
mov
xchg
or
shlb
mov
or
pop
cmp
jle
hlt
xchg
repnz
ret
jmp
xchg
mov
pop
mov
push
sub
mov
mov
nop
xchg
out
sub
jg
stos
out
dec
ds
inc
call
mulb
mov
and
and
fldcw
push
iret
data16
stos
dec
cmp
test
jne
je
push
xor
mov
mov
sbb
mov
je
lret
fidivs
xchg
rolb
xchg
sbb
clc
addr16
outsb
pusha
shrl
and
xchg
daa
sbb
out
out
lock
xor
dec
cld
dec
and
popa
aaa
in
rcrb
test
ret
testb
repnz
dec
aad
mov
stos
aas
push
cli
cmpsl
or
cltd
je
mov
adc
stos
stos
repnz
push
enter
fucom
insb
shlb
js
mov
incb
cmpsw
inc
ret
mov
sahf
fsubrs
cmpsl
pop
lods
popf
adc
gs
cmp
pop
lret
in
test
ret
xor
cltd
mov
or
push
add
mov
icebp
in
xchg
cmp
push
cmpsl
jge
mov
jb
mov
or
data16
fistpl
and
ja
jns
push
cmp
into
mov
adc
pop
fwait
mov
adc
mov
rcr
pop
in
es
mov
fsubrs
arpl
sub
dec
jbe
out
add
lret
pushf
hlt
mov
xchg
xor
push
or
std
imul
jo
lret
aad
lcall
adc
fcmovnu
mov
add
cld
out
cs
ljmp
jns
popa
imul
sbb
sub
cli
repnz
es
sbb
cs
in
mov
lahf
jno
aas
xchg
call
pop
jne
imul
pushl
inc
loop
push
sub
out
cmp
lea
mov
stos
fsubs
xor
js
insb
incl
xor
cmpsl
push
mov
cmp
pusha
xor
fdivl
jg
mov
mov
inc
rorl
lret
dec
adc
inc
mov
mov
jno
loope
push
enter
fisubrl
pusha
adc
lcall
mov
aaa
mov
xor
cmp
xchg
jg
jp
xor
lret
stos
push
cmp
repnz
addl
pop
mov
inc
dec
mov
repz
mov
daa
xchg
into
sbb
cmp
add
repnz
xchg
push
inc
xchg
add
or
mov
pusha
je
in
push
cs
fnstsw
dec
xchg
lahf
sbb
pop
in
les
dec
daa
push
cmp
xor
pop
sub
add
dec
dec
les
mov
out
cmp
mov
stos
dec
adc
adc
cs
sub
xor
xchg
jp
inc
xchg
cmp
shlb
mov
rorl
dec
add
iret
xor
popf
insb
and
pop
mov
xchg
loope
popf
mov
mov
pop
repnz
jb
daa
jnp
dec
cmp
arpl
mov
mov
ret
mov
push
dec
aaa
jno
mov
mov
mov
sahf
jbe
cmp
add
into
fcomi
sub
jns
adc
cmpsl
xchg
repnz
sarl
push
in
add
adc
xor
call
outsl
cmpsl
lret
lcall
out
xlat
mov
in
mov
pop
popa
jns
decl
or
xor
jmp
pop
xchg
dec
iret
add
fwait
xchg
shlb
and
rcll
ficomps
dec
mov
xor
dec
mov
into
push
or
xchg
fidivs
aad
das
xlat
sahf
popf
jne
bound
rol
xor
fwait
xchg
fwait
jno
dec
les
xor
movsl
out
inc
fdivrs
and
ljmp
xchg
int
ss
aam
stos
xchg
ss
and
and
lods
and
mov
push
sub
push
xor
mov
sbb
mov
and
mov
fwait
xchg
enter
in
loopne
mov
xchg
mov
int
clc
cmc
insb
bound
sub
sub
xlat
mov
incb
dec
lds
test
cltd
bnd
and
popf
lret
pop
and
stos
sahf
mov
sqrtps
iret
or
rcrl
mov
jb
jle
lahf
sbb
xchg
dec
cwtl
scas
cmp
das
gs
enter
scas
push
repz
lods
outsl
jo
dec
xchg
dec
jb
mov
cmp
pop
dec
jo
mov
xchg
and
xchg
pop
fstps
sub
fnsave
or
aaa
mov
in
xor
aas
ds
sarb
fdivrs
inc
mov
cmpl
arpl
sub
or
aas
adc
sub
repnz
mov
pop
inc
jne
aad
or
xchg
shr
xor
movsb
dec
lahf
sbbb
rcrb
fs
lds
test
gs
pop
pop
and
hlt
jmp
jmp
into
scas
mov
scas
mov
stos
cli
inc
jle
xchg
ds
out
push
adc
dec
mov
cmpsb
dec
add
incl
rorl
push
pop
in
or
lcall
dec
push
jp
jo
cmpsl
xchg
sti
data16
push
mov
mov
cmp
inc
lods
push
idivb
add
jo
inc
je
test
mov
xor
call
in
xchg
jl
cmp
and
pusha
daa
xchg
mov
repz
fstl
jne
int
ds
pop
insl
js
jp
in
in
adc
inc
add
popa
rcll
push
mov
xchg
sti
push
inc
lods
and
ljmp
cli
pusha
inc
ja
into
cltd
scas
aas
leave
fstp
mov
rcl
sbb
xor
repnz
adcl
cmpsb
rorb
repz
cmp
adc
cmp
jnp
cmp
int3
jmp
ret
test
cmp
jmp
mov
stos
rorb
cmp
xchg
test
dec
and
ja
sbb
lods
inc
repz
in
inc
xchg
movsb
xor
inc
inc
mov
repz
pop
mov
cmp
inc
lea
xor
adc
lcall
imul
sub
push
sar
jecxz
stos
fidivrl
test
pop
jo
sbb
sub
jmp
cmp
mov
mov
int3
and
fsubp
sub
test
jno
cmpsl
shlb
mov
loope
mov
add
push
xorb
pavgw
scas
mov
stos
js
imul
jnp
adc
sub
lds
stos
jo
mov
stc
mov
adc
xchg
jno
jnp
xor
inc
aad
xor
mov
mov
adc
mov
movsl
or
mov
pop
pushl
les
out
int3
ds
lock
push
mov
cmp
xor
cld
aam
xor
fdivl
faddl
nop
out
test
xchg
adc
gs
int3
fisubl
sbb
sbb
sbb
and
daa
repnz
into
xor
js
or
add
sbb
xchg
sub
xchg
das
aas
jl
dec
mov
mov
push
push
mov
enter
and
test
inc
leave
jl
mov
icebp
xlat
fcomp
xor
or
pushf
xchg
sub
loopne
fmul
divps
adc
ret
pop
sub
sub
adc
scas
push
mov
sub
sub
push
push
and
icebp
jne
pop
fwait
or
and
inc
mov
stos
push
mov
repnz
xchg
mov
inc
pop
fiadds
sub
pop
add
cmc
xchg
jno
mov
inc
mov
xchg
pop
aas
mov
dec
mov
repnz
shlb
inc
cmp
sti
sbbb
cmp
lods
cmp
insl
jo
js
cmp
pop
pop
aam
mov
push
mov
jne
sbb
and
loope
sbb
repnz
cmc
xor
test
in
jns
xchg
in
and
divb
mov
cmc
dec
inc
mov
pop
push
pop
cmp
scas
in
mov
push
in
popa
and
inc
ss
int
sahf
sub
lret
je
sbb
out
sbb
aad
pop
stos
mov
aaa
addr16
mov
mov
lods
insb
pusha
insb
sbb
or
repnz
test
or
xor
sub
jge
ss
sbb
xor
shr
or
push
aas
mov
jae
mov
lret
repnz
lret
lock
push
adc
mov
or
in
inc
cltd
mov
sub
mov
out
xchg
sbb
loope
inc
out
mov
fbstp
arpl
adc
push
add
ffreep
push
filds
jb
dec
aad
adc
xor
fistpl
or
sbb
adcl
xchg
mov
mov
xorb
sbbb
jg
sahf
or
mov
das
and
es
cld
xor
or
xchg
jno
cmc
sub
les
xor
out
inc
and
out
or
cmpsb
add
fimull
aam
movsb
not
mov
scas
xor
mov
lret
sub
and
adc
xchg
les
loopne
push
xchg
cmp
and
xchg
or
fnsave
mov
or
stc
jmp
scas
addb
std
outsb
dec
and
ja
ror
push
lds
enter
lret
sarl
addb
gs
gs
pop
or
lret
icebp
dec
mov
rcll
cli
jb
out
in
popa
push
push
mov
es
dec
push
push
mov
stos
xchg
je
mov
jle
cwtl
sbb
loope
xchg
out
mov
lret
sub
pop
popf
add
cmp
sub
dec
jae
jg
out
das
adc
mov
dec
push
jp
inc
sub
loopne
add
inc
dec
jecxz
aad
shr
shrl
mov
jb
fbld
pop
sbb
pushf
sub
sti
pop
fistpl
push
jns
push
sbb
int3
out
insb
dec
in
xor
popa
movsl
js
cmp
ds
sbb
pop
fisubs
fs
loope
cmp
or
push
rcrl
je
cltd
stos
pop
inc
lods
lret
lods
outsl
sub
rcll
scas
sbb
mov
roll
test
mov
mov
fisttpl
inc
sub
cli
mov
enter
dec
xor
jmp
loopne
dec
bound
int3
xor
dec
adc
adc
lcall
inc
sti
or
inc
mov
popa
es
test
fidivrl
pop
sarb
and
iret
pop
leave
xchg
or
or
bound
mov
add
cmp
mull
add
pop
fbstp
xor
aaa
rcll
and
mov
jmp
pop
push
jnp
xor
mov
into
sti
or
push
into
mov
repz
inc
xchg
movsl
sub
push
repz
inc
mov
add
pop
pusha
push
loop
jnp
xchg
aad
jmp
sbb
scas
jo
mov
incb
pop
sub
fldt
stc
aam
das
mov
mov
inc
xorb
mov
xchg
sub
fst
inc
cs
jp
imul
push
pop
loop
sbb
adc
aam
sub
dec
pop
cmc
push
push
mov
and
fiaddl
add
jae
mov
loope
fistl
mov
ret
jmp
fs
mov
jg
or
mov
xlat
rorb
add
xchg
std
test
xchg
mov
ss
out
add
lods
add
add
dec
dec
mov
adc
clc
jns
add
xchg
pop
adc
pop
mov
popa
insl
stc
pop
roll
xchg
sbb
adc
fiadds
leave
mov
xchg
sbbl
sbb
sub
sub
je
dec
outsb
imul
xor
mov
jns
sbbb
repnz
adc
pop
or
sub
sub
call
add
icebp
sub
cmc
lea
test
in
outsl
fucomi
xor
pop
sahf
popa
insb
scas
cmp
test
pop
mov
add
add
mov
andl
mov
or
or
cmp
sbb
test
or
pop
push
es
dec
movsl
xchg
scas
push
je
xchg
pop
cmp
inc
add
push
pop
and
gs
sarl
adc
sub
jle
dec
or
push
pop
push
pop
add
push
inc
aaa
mov
inc
stos
insl
push
adc
and
or
movsb
mov
xor
shld
leave
test
test
jmp
gs
es
outsb
or
mov
jecxz
loopne
in
popa
inc
adc
int
pop
loop
push
add
dec
addl
in
sti
or
into
xchg
hlt
push
dec
inc
inc
mov
lahf
test
and
ret
jo
jg
add
mov
and
or
pop
mov
stc
xchg
into
push
lock
repnz
adc
mov
mov
xor
icebp
dec
inc
in
fisubrs
adc
xchg
imul
cmc
jp
cmp
pop
xor
ds
mov
aad
leave
imul
dec
xor
leave
pop
fldt
xchg
mov
cmp
in
fwait
jne
mov
leave
das
xor
decl
das
jcxz
mov
ljmp
push
mov
scas
mov
lds
xchg
xchg
fisttps
mov
dec
add
or
scas
lock
lds
cmp
push
mov
add
pop
push
xor
mov
mov
icebp
xchg
loop
pop
lods
mov
lahf
cli
adc
pop
xchg
xchg
scas
or
cs
pop
in
cmp
adc
repz
mov
sti
dec
in
add
push
andb
jnp
iret
mov
adc
imul
jne
shrb
mov
dec
push
subb
push
push
sub
dec
out
mov
mov
fld
and
jg
fiadds
xchg
jbe
xchg
inc
or
out
xchg
jno
xchg
mov
int
std
or
inc
and
gs
mov
push
dec
jg
popf
loop
ljmp
xor
insl
cmp
icebp
popa
lock
sub
cltd
sbb
imul
xchg
inc
cmpsb
fyl2x
sub
mull
xchg
cld
jge
rol
sub
push
add
rcll
mov
cmc
push
lock
jae
sub
mov
or
pop
movsl
das
aaa
xchg
fisubrl
push
cltd
xorl
jg
cmpl
adc
popa
call
jle
scas
push
dec
iret
shll
daa
jne
mov
mov
and
xchg
push
jp
jl
mov
jne
cmp
mov
shll
pop
test
push
cwtl
pop
add
stos
bnd
fadds
jge
jle
push
jg
jge
hlt
mov
nop
inc
pop
aad
aas
fxch
push
or
cmp
pushf
jo
mov
popf
bound
xchg
scas
or
js
lock
int
es
insb
cmp
sarl
add
data16
inc
cmp
lock
add
call
jae
mov
cmc
sbb
ss
jp
jbe
loope
pop
imul
outsb
pop
add
shlb
shr
mov
loop
cmp
mov
jnp
xchg
push
and
mov
loopne
call
jnp
dec
mov
dec
ljmp
jno
cltd
dec
cmp
enter
dec
lods
mov
test
sub
add
push
push
add
push
aam
jne
xorl
push
in
test
shrl
pop
dec
sub
js
mov
pop
push
push
in
fucomi
sarl
add
push
enter
fbld
adc
push
ss
call
xor
ss
or
xor
lods
loopne
or
jno
or
xchg
pop
js
cmc
xor
movsl
adc
cmp
jbe
sti
ja
mov
mov
lods
aaa
sub
sbb
ret
jnp
xor
mov
les
pop
mov
cwtl
lods
pop
inc
lock
cmp
popa
leave
push
fsts
inc
xchg
pop
iret
test
xchg
jmp
push
rolb
cmpsb
out
pop
lahf
imul
and
sub
or
jbe
jnp
loop
cmpl
jae
sub
add
outsl
sbb
push
xor
aas
addl
arpl
lret
and
mov
lea
fcmovu
pushf
in
adc
or
mov
movups
lea
and
push
dec
and
in
adc
or
loopne
shl
roll
jne
sbb
addb
xchg
mov
repnz
pushf
xchg
mov
sbb
es
jg
aas
cmp
rcl
lret
negl
and
sbb
popa
sbb
fwait
mov
jbe
jno
add
dec
mov
jbe
jle
dec
test
jmp
js
ret
testb
push
data16
adc
mov
mov
imul
scas
pushf
mov
xchg
dec
sub
arpl
adc
sbb
es
pop
movsl
mov
mov
jbe
movsb
xchg
jne
call
add
mov
xor
divl
cmpsb
insl
pop
push
jne
add
lock
or
or
jecxz
stos
hlt
leave
shrb
xchg
leave
mov
sbb
std
adc
push
and
shrl
xchg
and
pop
jle
sub
sub
pop
xchg
mov
sub
mov
test
stc
xchg
jecxz
sbb
xor
jno
mov
lea
cmpsl
pop
nop
dec
add
ret
mov
imul
push
adc
pop
les
fimull
lods
adc
ficompl
js
jp
sbb
jg
out
xchg
xor
cmp
cld
jne
inc
loopne
sub
js
out
js
data16
lea
das
fs
sub
cmp
inc
rcr
scas
add
fwait
ret
xchg
adcl
mov
jecxz
push
js
inc
cmp
or
cmp
adc
mov
sti
test
aad
sarl
dec
xchg
rsqrtps
jo
inc
jo
lods
imul
lock
aas
add
ret
xchg
or
sbb
mov
xor
aad
mov
lock
mov
add
rcll
pop
push
mov
ja
test
jae
outsb
jmp
clc
push
mov
dec
add
push
fbld
arpl
jecxz
cwtl
or
je
int3
mov
dec
xchg
lods
lret
rcll
sub
xor
rcr
or
add
leave
mov
jo
mov
js
add
add
icebp
ret
push
and
das
or
jp
hlt
movb
xchg
adc
ljmp
ret
jmp
xor
jns
sbbw
in
push
cltd
jne
add
cmp
add
ljmp
enter
fucomi
outsl
adc
aaa
mov
idivl
vmread
dec
in
push
adc
pop
xor
movsl
jae
push
jo
aad
in
les
inc
repz
out
outsb
push
sarl
xchg
mov
sub
sbb
movsl
push
std
pop
mov
sbb
mov
jne
dec
pushf
jno
inc
mov
mov
xchg
js
loopne
mov
fucomi
mov
dec
in
stos
mov
push
test
xchg
xchg
mov
popf
xor
pop
fnstsw
rorb
shll
pop
cmp
and
mov
cld
loopne
mov
clc
inc
sub
and
leave
adc
push
xor
mov
sbb
jno
jecxz
movb
ss
iret
stc
push
adcb
cmp
mov
xchg
out
or
jp
cmp
lock
fistpl
test
leave
bound
data16
mov
neg
mov
adc
lods
int
sub
fwait
sub
lahf
ljmp
adc
sahf
gs
inc
mov
test
cmpsl
stos
sbb
xor
imul
inc
std
inc
xor
out
pop
adc
mov
aas
shr
jnp
fs
gs
mov
cltd
adc
xchg
cwtl
sub
push
lds
cld
and
mov
lods
shlb
hlt
imul
mov
sub
xchg
adc
cmp
jbe
pusha
ljmp
pop
push
fldenv
xor
arpl
mov
out
xchg
js
mov
call
dec
pusha
xchg
adc
push
sub
ret
jecxz
lods
lcall
loope
add
adc
push
mov
mov
dec
inc
cltd
cli
or
sbbl
pop
out
pop
sahf
out
loope
jge
lret
sbb
shl
fwait
jge
jp
push
push
popa
fcompl
iret
icebp
lea
adc
repz
mov
and
dec
cltd
pop
loope
inc
rcrb
fcom
stc
fmulp
shlb
or
xor
cmp
mov
rcrb
les
outsb
fucomi
cmp
test
lea
dec
inc
imul
lcall
xlat
sbb
inc
adc
gs
ror
lcall
dec
cli
cmpsb
and
loop
jno
rclb
enter
sub
lahf
movsl
pminub
ljmp
pop
add
fs
lock
subb
dec
rcr
fistpll
sarl
jg
and
inc
xor
push
jg
movhps
lret
jge
cmpsb
jp
fs
push
add
mov
xchg
gs
nop
jnp
mulb
outsl
shl
xchg
fisttpl
push
mov
push
cmpsl
cmp
aam
mov
cmp
push
sbb
mov
xchg
test
jmp
rorb
xchg
inc
cmp
scas
lret
cli
hlt
int3
int3
mov
sub
or
call
std
xchg
ljmp
xor
aas
push
cmp
lcall
mov
divb
popf
inc
loop
cmc
test
pop
and
outsl
sbb
out
je
into
adc
ret
in
call
mov
dec
mov
jmp
xor
fnstcw
fidivl
pusha
sub
ds
pop
jbe
out
les
pop
dec
push
cli
jns
fs
enter
add
adc
negl
fs
add
loope
xor
xchg
lcall
imulb
clc
andb
in
mov
mov
ffreep
sub
lds
and
or
enter
mov
loope
push
sbb
les
mov
pop
mov
js
inc
ret
push
sbb
xor
inc
jg
mov
int
mov
mov
fbstp
push
xchg
fcmovbe
ret
repnz
das
shl
addr16
mov
and
mov
mov
scas
adc
popf
jp
sbb
cmp
jb
mov
loope
clc
adc
repnz
sub
in
mov
dec
mov
fcompl
sbb
dec
mov
sbb
mov
push
mov
sub
and
mov
out
sbb
dec
pop
aas
pop
popf
stos
fs
pop
pop
out
shll
mov
mov
lds
push
sahf
add
aad
pop
into
inc
call
syscall
in
shrl
and
push
cmp
mov
ret
cld
inc
repz
outsl
pop
mov
mov
fwait
pusha
jp
mov
int3
test
add
aad
or
dec
mov
add
iret
sbb
loopne
add
sub
out
inc
and
xchg
sub
aaa
sbb
xor
cmc
mov
aaa
sahf
pushf
sbb
mov
push
or
mov
es
cmp
mov
push
cmc
jle
lea
lods
outsl
faddp
lret
pop
xor
mov
and
js
ss
cld
fcmovnu
dec
movsb
mov
push
jae
push
push
inc
push
sbb
mov
ret
repnz
mov
icebp
add
repnz
pop
push
fs
lret
rorl
lds
lods
subb
mov
sub
mov
push
repz
daa
loop
add
mov
xor
js
cmpsb
jle
sub
cmpsl
int
and
xor
push
mov
outsb
dec
push
std
sbb
aam
push
into
and
push
push
jecxz
lock
sub
pusha
enter
insb
call
repnz
inc
inc
push
mov
sbb
dec
inc
jbe
cmc
jecxz
cmpl
or
cmp
aas
add
add
xchg
scas
fiadds
js
les
imul
aam
mov
and
dec
icebp
adc
cmp
mov
sbb
aas
xchg
add
xor
push
insb
mov
lcall
push
outsb
stc
pop
xor
lret
lret
cltd
jecxz
xchg
stc
cs
fistps
xchg
jmp
mov
add
and
push
cld
faddl
push
out
push
push
dec
fmull
dec
mov
arpl
push
fldt
cmp
adc
sbb
and
jne
jb
ficoms
outsl
adc
adc
sti
pusha
pop
pop
out
and
call
pop
loope
pushf
out
sub
adc
out
bound
je
jp
dec
cmp
and
xor
pusha
add
inc
add
pop
and
setne
fwait
or
mov
xchg
sbb
sub
jl
inc
inc
mov
movsl
daa
mov
aam
sub
rclb
out
add
pop
inc
xchg
repz
pop
sbb
mov
out
dec
das
mov
mov
iret
cmp
arpl
jbe
cmpl
and
sub
dec
mov
mov
and
nop
shrl
push
ds
dec
add
outsw
adc
imul
push
fbld
inc
in
adc
in
or
jmp
push
gs
rcll
cmp
jmp
mov
rorl
cmpsl
inc
and
cltd
cs
int3
fwait
cmp
sti
sbb
cmp
call
dec
sub
push
xchg
test
and
sbb
add
jno
push
mov
mov
inc
inc
and
repz
sub
mov
mov
or
loop
inc
pushf
sbb
mov
ja
sub
or
lods
outsb
pop
inc
mov
pop
cli
faddl
mov
data16
arpl
add
addr16
mov
adc
sbbl
xor
inc
scas
dec
es
jmp
or
and
and
hlt
test
daa
in
xchg
mov
pusha
pushl
mov
add
loop
repnz
sbb
cmpsb
mov
inc
cmp
in
xor
mov
sub
xchg
jbe
inc
and
call
xorb
mov
outsb
sub
mov
dec
pop
or
inc
xor
clc
mov
dec
inc
mov
push
sti
push
jge
push
lock
lock
addr16
push
pop
cmpsl
mov
in
incb
sbb
insl
adc
adc
movsl
or
cmpsl
jne
andl
idivb
xchg
jbe
hlt
xchg
idivl
fprem1
jne
gs
cmpsb
mov
add
pop
loopne
jecxz
iret
inc
mov
pushf
aad
loopne
ret
sbb
ja
and
cmp
stc
cmc
and
ss
shr
xchg
lret
dec
sbb
sub
je
cmp
sbb
pop
pop
xchg
xchg
xchg
pop
out
sub
mov
aad
arpl
aas
or
ja
push
xor
test
xchg
xchg
lcall
and
iret
jae
cli
insl
cmpsl
inc
hlt
sub
mov
rcrl
stos
add
out
es
loopne
mov
sub
ja
jnp
add
test
cs
dec
xor
loope
out
inc
add
cmp
xor
addr16
dec
cmp
test
aad
sti
push
cltd
and
ficoml
mov
pushf
in
decb
cwtl
lods
in
subb
insb
in
push
scas
ret
and
inc
icebp
and
jns
lock
inc
and
lods
cmp
daa
lds
cld
out
push
pop
jno
scas
imull
mov
sub
cmp
adc
shlb
and
hlt
mov
pop
sub
add
sahf
rorl
push
call
or
into
movsb
test
mov
inc
add
push
add
decb
insl
in
dec
inc
out
dec
inc
ja
jmp
imulb
pop
imul
push
add
lds
sub
push
push
sbb
mov
out
sbb
or
fdivl
add
fstpl
je
arpl
in
daa
stc
mov
sbb
loope
aam
pop
xor
dec
popf
leave
mov
jl
xor
jmp
in
pop
sub
stos
xchg
in
inc
cmp
lods
push
inc
sub
iret
xor
ds
out
dec
dec
dec
mov
jmp
cmp
icebp
les
dec
aas
push
outsl
jno
mov
mov
popf
inc
add
ljmp
jle
cmp
std
mov
into
jmp
xchg
pop
jp
adc
xchg
xchg
pushf
sub
sbb
mov
stos
add
dec
rcll
or
xchg
jns
mov
pop
aaa
call
pop
xchg
sti
mov
repnz
xchg
mov
das
call
notb
rol
inc
cs
roll
xor
ret
sbb
test
sti
nop
andb
test
stc
bound
xchg
nop
sahf
dec
dec
bound
pop
lret
lock
inc
icebp
imul
andl
movsl
sti
aas
out
mov
sub
adc
jl
loopne
aad
pop
lret
rolb
mov
pop
xlat
cmp
cwtl
adc
negl
cli
movl
sub
movsb
jge
loopne
push
xchg
stos
lret
xor
sar
lds
jg
pusha
je
popf
idivb
push
add
idivl
sub
sti
push
push
add
mov
pop
adcl
cli
in
add
nop
fildll
xor
adc
pop
data16
inc
inc
out
data16
sti
les
cmc
clc
pop
ret
jns
jg
std
inc
mov
push
lods
xlat
xchg
add
mov
mov
add
and
add
cli
cmp
sub
int
pop
add
cmp
testb
pusha
sarl
cld
cltd
rcl
test
cmp
xor
movsb
add
fnsave
negb
mov
cltd
inc
mov
jecxz
lahf
xchg
mov
bound
dec
xchg
gs
or
call
es
ret
lcall
rolb
push
jmp
ss
gs
inc
leave
xor
sbb
in
lock
rcrl
inc
clc
push
jne
daa
scas
and
shll
roll
jo
mov
int
dec
pusha
cmpsb
xor
aas
xchg
ret
sub
lahf
pushf
std
lret
insl
xchg
adcl
dec
mov
nop
jno
lahf
xchg
push
inc
dec
pop
lret
bnd
sub
pop
adc
not
cwtl
insb
pop
and
adc
and
xchg
loop
dec
sbb
add
xchg
pop
adc
into
bound
dec
inc
out
dec
sub
dec
cmpsb
jo
testb
call
xchg
enter
rorl
int3
cmpsl
jae
jle
dec
xchg
xor
outsl
push
mov
stc
scas
add
jo
out
inc
inc
loope
jns
push
shlb
test
negl
std
pop
lds
push
insb
push
jmp
xchg
ret
call
pop
lcall
and
aad
scas
xor
rorl
aas
xchg
cs
jge
xor
push
push
dec
adc
xchg
mov
cwtl
mov
iret
mov
clc
dec
mov
or
aaa
xor
cmpb
inc
xchg
cmp
cwtl
mov
negb
lods
lds
adc
dec
in
pop
xorl
xor
fstpl
adc
and
add
lods
pop
mov
scas
mov
inc
aam
lds
fidivs
xchg
pop
xchg
repnz
push
filds
dec
pop
xor
mov
rcr
fbld
mov
pusha
sub
pop
fsts
aam
ficoms
xor
xor
repz
cmp
sbb
imul
pop
xor
fbstp
out
xchg
and
repnz
xchg
and
nop
fsubrs
xchg
dec
pop
enter
out
test
add
and
mov
inc
frstor
xchg
xor
sub
test
cld
jmp
jae
or
xor
mov
popa
dec
popf
sbbb
lock
dec
dec
push
call
fimuls
das
xchg
out
imul
xchg
shll
push
in
out
add
push
testl
mov
ss
lea
mov
cmp
pop
lea
mov
cmpsl
aaa
test
or
loop
or
pop
and
jnp
out
jl
sbb
mov
decb
jbe
cmpsl
dec
fisubrl
outsl
out
mov
jg
js
mov
insl
sub
jl
sbb
adc
fst
cmp
repz
lret
rolb
daa
data16
dec
outsl
sub
inc
aam
stos
xor
mov
jmp
leave
mov
jp
and
seta
or
ss
das
sub
mov
dec
das
or
es
mov
outsb
dec
test
adc
rcr
fdivp
xchg
inc
inc
mov
jnp
std
xchg
push
repnz
cmp
bound
gs
mov
xchg
add
in
push
mov
mov
pusha
xor
push
mov
mov
ret
jbe
fisubl
stos
outsl
or
cmpsl
pop
in
enter
push
std
sub
dec
add
outsb
sub
ficoml
mov
je
mov
sbb
stos
outsl
xor
adc
and
cmp
dec
ljmp
mov
inc
pop
mov
inc
arpl
dec
call
imul
test
mov
imul
pop
lds
repz
push
cs
fsub
cld
pop
mov
icebp
cmp
cmp
sahf
out
pop
sahf
movsb
arpl
pop
clc
cmp
scas
push
ret
shrb
stos
lret
and
int
mov
inc
or
jle
push
sti
les
loope
or
int3
loop
xchg
dec
stc
mov
mov
gs
xchg
xchg
stos
das
xor
jno
push
ljmp
lods
js
jno
inc
outsl
sub
mov
loop
add
nop
faddl
fs
mov
jmp
fildl
jl
shlb
daa
sub
fwait
lcall
fiadds
push
adc
jg
mov
daa
push
xchg
mov
lahf
xchg
mov
stos
fistps
jb
in
call
jmp
cmp
sub
loop
sbb
popf
mov
add
nopl
or
sbb
xchg
leave
sub
push
shll
pop
sbb
cmp
nop
cmp
cltd
movsb
cs
arpl
out
pop
cltd
add
inc
xor
mov
fstp
stos
popf
pop
mov
push
rolb
add
repz
sub
jo
jmp
xchg
daa
dec
mov
jg
inc
rcr
sbb
mov
adc
bound
mov
lcall
push
mov
mov
ror
sar
jnp
mov
packsswb
cwtl
sahf
fldl
and
sub
mov
sub
xchg
push
push
sub
mov
mov
jge
adc
cli
out
je
xchg
jg
inc
aas
jae
jo
rorb
sti
mov
and
addr16
jo
lods
testb
push
add
pop
pop
jne
sbb
test
ss
or
cld
xlat
dec
ret
outsb
arpl
cmp
insl
push
pop
mov
outsb
pop
push
inc
hlt
int
outsl
sbb
adc
sub
and
mov
fdivrs
push
xor
pop
lea
lods
cli
mov
push
mov
jl
pop
and
xchg
adc
scas
pop
cvttps2pi
and
lods
insl
lods
pushf
gs
jnp
cmp
roll
push
adc
xchg
or
nop
push
xor
clc
adc
mov
mov
jb
insb
sbb
xchg
out
call
dec
xor
xor
flds
dec
imul
jo
or
dec
xor
inc
mov
or
lea
add
jl
outsl
call
hlt
jns
es
js
lret
jmp
pop
push
xchg
mov
dec
xchg
lods
fdivp
cmp
push
adc
add
aaa
into
sub
fcmovu
ror
imul
push
add
mov
jmp
loope
cltd
xor
push
mov
dec
daa
mov
pop
sub
aaa
lret
movsl
xchg
cld
mov
jns
pop
stos
inc
xor
aam
jmp
daa
aas
inc
sbb
into
or
sbb
fs
in
adc
pop
push
mov
leave
rolb
std
mov
rcrl
out
imul
jo
stc
pop
iret
xchg
es
sbb
mov
mov
and
adc
mov
xor
scas
pusha
add
pop
xor
imul
das
dec
iret
fcoml
loop
sbb
clc
jg
dec
in
ret
loopne
pop
and
lcall
shrb
jbe
mov
mov
es
inc
jbe
repnz
test
jle
mov
inc
adc
inc
xchg
arpl
roll
lret
mov
xchg
pop
adc
rol
outsl
out
fisubs
xchg
mov
std
xor
push
dec
pop
scas
shlb
push
add
notb
dec
std
cmp
movsl
dec
daa
mov
jb
fwait
ljmp
lret
jl
push
fdivp
xchg
sbb
push
cmpsb
fistl
xchg
or
xor
pop
in
cmp
cltd
lds
ret
jmp
cmp
popa
test
lods
xchg
les
in
or
test
test
dec
xchg
pushf
jl
nop
shrd
out
adc
out
or
cld
ljmp
cli
repz
sub
sbb
lahf
sub
mov
lods
pop
sub
and
mov
pop
pop
and
negl
movsl
mov
dec
or
push
sti
fdivl
mov
mov
push
aam
ret
push
push
jb
loop
jbe
in
std
lret
lahf
mov
loopne
adc
xor
adc
and
mov
cmc
pop
je
cmp
aam
pop
xor
adc
cs
loope
mov
pop
sarl
insl
aad
lret
imul
jno
jne
arpl
lock
xor
jae
lds
inc
dec
insl
xchg
pop
xchg
cmp
cltd
dec
loope
or
movsb
push
stos
pop
xor
xchg
addr16
xor
pop
jle
pop
mov
shrl
xor
fwait
pop
pop
jg
xorb
cwtl
loop
mov
xchg
push
jmp
stc
cmp
aas
mov
leavew
dec
xchg
push
jnp
pushf
cmp
ljmp
mov
cltd
pop
repz
out
pop
cmp
dec
cmp
or
cmp
cmp
les
mov
lahf
mov
out
dec
subb
pop
loop,pn
jl
mov
notb
subl
push
ret
fwait
das
cmp
rorb
dec
and
xchg
pop
dec
pop
xor
xchg
push
xchg
push
icebp
push
sub
xor
push
lcall
adc
outsl
mov
push
stc
wbinvd
rclb
sti
mov
ret
test
inc
xchg
jecxz
ja
xlat
mov
fisubs
lcall
cwtl
pop
or
inc
or
lea
orb
adc
jle
lods
cmp
fldl2t
es
sbb
loop
xor
repnz
sbb
pop
insl
fisttps
sub
je
stc
call
xor
cmp
in
ja
test
xchg
in
mov
sbb
xlat
sub
arpl
fisubs
ret
inc
pop
fwait
jmp
mov
pop
inc
xchg
pop
lahf
je
or
outsb
fcoms
mov
lds
incl
popa
push
cmp
mov
jmp
jp
jle
gs
mov
mov
rcr
sar
adc
push
pusha
and
movsl
mov
data16
jp
inc
mov
ds
pop
jp
push
sub
lods
aam
sub
jae
mov
push
xchg
into
push
jl
adc
adcl
sub
das
xchg
xchg
xchg
fisttps
mov
add
pop
inc
or
pop
mov
popa
int3
hlt
mov
jae
sub
ljmp
xchg
pop
push
sub
pop
sbb
cli
mov
push
rolb
ljmp
dec
lea
pop
sbb
je
out
xchg
test
nop
insw
enter
lods
fildl
pop
dec
testl
dec
pushf
push
aad
fwait
imul
aam
stos
pushf
sub
mov
mov
jne
std
int3
cmp
sub
cmp
enter
push
or
push
inc
xchg
xor
mov
dec
jbe
cmp
aam
addl
into
push
mov
test
mov
icebp
pop
push
mov
jae
sub
jno
sbb
inc
das
sbb
xchg
cmpsl
sbb
test
gs
mov
jp
adc
push
jl
shll
sbb
xlat
fimull
jge
mov
push
or
jle
sub
mov
fsubrs
fiaddl
or
cld
xlat
dec
int3
lock
sub
cmp
cltd
and
add
out
pop
lds
dec
lods
jae
cmp
imul
jo
arpl
xor
sub
addr16
lret
fisubrs
out
sub
xor
add
mov
lahf
sbb
dec
iret
out
aam
mov
in
js
or
jle
mov
dec
loopne
mov
sub
sub
dec
ret
mov
xchg
mov
das
loopne
mov
inc
mov
jl
leave
mov
and
sbb
and
sahf
mov
loop
repz
cmc
in
cmp
sbb
inc
movsb
xchg
scas
mov
popa
dec
adcb
shlb
push
loop
in
xchg
fcompl
outsl
inc
xchg
xorb
into
mov
mov
pop
xchg
xchg
xchg
push
incb
push
cld
out
dec
add
sbb
out
push
test
push
mov
jbe
or
push
mov
test
inc
stc
adc
mov
mov
mov
push
jae
repnz
xchg
jno
mov
mov
mov
and
clc
arpl
inc
cmp
mov
or
test
in
mov
mov
lods
sub
arpl
sub
int3
xchg
and
out
xlat
ror
or
aaa
mov
dec
andl
xor
dec
push
mov
ficomps
lahf
mov
push
lds
pop
inc
sub
jecxz
stos
mov
hlt
daa
sbb
mov
sub
in
inc
inc
iret
dec
fists
lret
mov
insb
dec
sbb
sub
cmpb
int3
dec
push
adc
inc
loop
xchg
or
inc
outsb
xchg
mov
js
cltd
lods
jae
pop
push
mov
das
inc
adc
test
mov
insl
dec
subb
or
xchg
js
push
lret
stc
icebp
out
stos
cmc
mov
rclb
gs
sub
and
repnz
imul
sbb
sarb
shl
aas
jae
cli
arpl
adc
cs
sti
push
and
pop
and
clc
or
stc
fs
leave
jne
out
bound
ror
fwait
sub
shrl
aam
lret
xor
fisubs
cmp
call
mov
mov
and
out
aaa
adc
sbbb
pop
mov
push
rorb
xchg
dec
addr16
mov
xor
ljmp
cmp
pop
sbb
lret
in
sbb
mov
or
dec
inc
imul
movsl
jp
mov
dec
push
pop
dec
cwtl
push
shlb
add
sti
mov
cmove
mov
push
dec
mov
pop
xchg
pop
aad
push
aas
mov
not
inc
cmp
xchg
mov
cmpsl
mov
sarb
inc
sbb
in
pusha
mov
lods
mov
pop
mov
xchg
stc
aam
jg
mov
stos
xor
stos
mov
sub
dec
cmpsb
push
push
in
xor
dec
pop
out
adc
fildll
pop
jecxz
test
aas
jecxz
pop
enter
jns
jo
pop
push
sub
xor
sbb
mov
leave
cmp
cli
push
jbe
inc
lock
cltd
clc
insl
jno
es
test
je
mov
insb
sub
repnz
aam
aas
and
cld
xchg
iret
xchg
cwtl
adc
gs
int3
aam
xor
xor
cmpsl
fidivs
jmp
push
pop
in
bound
jnp
lcall
ret
popf
mov
call
inc
pop
aas
outsb
cmpsb
mov
or
aam
enter
ja
fimull
sub
in
xor
push
dec
adc
push
dec
mov
inc
jae
fwait
jns
repz
testl
sar
or
jo
rorl
pop
and
jo
movsl
andb
insb
mov
push
loopne
inc
add
in
jmp
adc
mov
xor
dec
jnp
lcall
jbe
stc
sti
sbb
lret
cs
lock
repnz
insl
pop
pop
scas
xchg
ja,pt
into
cmp
movsb
or
jge
or
movsl
sub
shlb
rcl
mov
inc
sahf
lods
sbb
cltd
addb
jo
sub
xchg
fnstcw
movsb
imul
push
cwtl
out
dec
xor
sbb
mov
or
cmp
push
sbb
int3
pop
lahf
add
movsl
xchg
pushf
mov
in
mov
jmp
les
jecxz
inc
jnp
inc
scas
mov
jmp
les
rcl
scas
in
jb
orb
adc
inc
dec
xor
mov
pop
jmp
out
je
xchg
jl
inc
lret
fdivrs
out
mov
sbb
testb
mov
test
jmp
imul
mov
dec
sub
dec
mov
inc
iret
xor
ret
movsl
gs
arpl
jle
inc
in
adc
sbb
xchg
mov
sti
pop
into
xchg
data16
lcall
mov
sbb
cmp
jle
mov
jnp
sbb
push
mov
shlb
stc
sbb
orb
pop
xor
cmp
mov
test
xlat
aas
movsb
xlat
repnz
mov
testb
inc
xor
pop
pop
jge
mov
xchg
push
fsubp
sub
daa
imul
fimull
push
jo
cmpsl
lods
xchg
cmp
fcoml
roll
lret
add
ds
dec
inc
aad
xchg
repnz
aaa
xor
cmpsb
push
xchg
xor
sub
cld
pop
sub
test
jne
jge,pn
dec
jge
sub
push
les
sbb
leave
xchg
lcall
and
loop
popf
adc
sbb
push
mov
fninit
test
cmp
xchg
add
dec
pop
les
es
or
mov
xchg
cmpsb
shrb
and
xor
test
sbb
fistl
or
scas
pushl
aaa
cld
int3
shrb
popa
movsl
sbb
jp
cmp
jbe
arpl
nop
fisubrl
fcmovnbe
dec
lods
jl
pop
test
mov
push
dec
push
ja
sub
sub
jo
push
mov
inc
shrl
mov
ret
xor
stos
xor
xorb
mov
xchg
mov
or
mov
sub
jmp
gs
out
inc
sbb
movsb
push
lea
push
scas
loop
mov
mov
xchg
int3
or
jae
dec
push
pop
test
imul
shrb
lds
pushf
clc
cltd
xorl
mov
stos
std
rorl
pop
mov
dec
sub
enter
fdiv
dec
mov
mov
mov
popa
cmpsl
mov
aam
ret
push
aad
add
in
push
adc
insl
jae
push
jmp
push
add
sbb
pusha
js
and
jbe
jmp
mov
inc
imull
clc
popl
ss
inc
sarb
popa
adc
xchg
xchg
in
out
fwait
mov
test
dec
cmc
push
jg
pop
or
jns
je
push
mov
fwait
rorb
aas
sub
cmp
adc
sti
mov
jno
mov
and
push
jno
movsl
and
mov
add
popa
add
sbb
jmp
inc
xchg
cmpsl
lods
stos
jl
inc
mulb
pop
lds
rcll
or
xchg
pop
add
mov
gs
xor
idivl
out
std
dec
sahf
nop
and
lds
jl
push
push
and
jno
adc
cli
pop
call
add
mov
mov
scas
pop
jnp
xor
movsb
int
mov
jns
push
jbe
push
xor
pop
stos
cmpsb
stc
mov
sbb
jle
push
cmp
sbb
jno
imul
add
lock
push
sub
roll
jns
cmpsl
mov
mov
rcrl
jnp
push
or
sti
jecxz
sarb
pop
jno
dec
stos
cmp
sub
xchg
outsl
xchg
and
fsubr
cmpsl
xor
cmp
scas
movsb
xlat
mov
das
cmp
adcl
push
fldcw
sbb
fdivrl
ja
ljmp
shrl
pop
and
lret
jb
cmp
lock
pop
mov
inc
or
sbb
push
adc
lods
mov
mov
cmp
cmp
dec
lcall
mov
es
cwtl
cmc
mov
add
xor
out
dec
adc
idivb
test
cltd
movsl
cmpsl
xchg
fcompl
out
mov
fdivl
push
mov
bound
repz
adc
pop
push
mov
jae
pop
lret
fstpt
adc
stos
pop
loop
sub
stos
insl
fisubl
push
ss
ja
sub
insl
add
or
lods
xor
cltd
in
add
mov
in
pushf
enter
movsb
jb
rolb
sub
cmpsb
stos
pop
jb
jo
arpl
test
sbb
mov
jg
in
faddl
adc
cmp
fldl
fdivrs
mov
test
sub
add
xor
mov
inc
jecxz
ds
dec
ss
adc
cmp
jb
aaa
cmp
outsl
cmp
pop
inc
scas
mov
andb
test
dec
scas
aad
movsb
cli
shr
adc
adc
or
std
popa
jne
sbb
lods
xor
bound
insb
andb
fucompp
mov
subl
mov
and
pop
cmpsl
incl
or
mov
mov
cmc
decb
enter
gs
test
int3
mov
fs
cli
mov
mov
xorl
inc
cmc
cmp
aad
cli
push
mov
daa
mov
ljmp
sub
or
jl
shr
add
and
mov
push
push
ja
shlb
repz
jne
and
rcrb
fistps
and
lret
and
test
adc
aaa
repnz
pushf
sub
in
mov
pop
sbb
nop
push
jmp
jle
mov
lea
inc
xchg
loop
add
xor
xchg
add
cmpsb
mov
mulb
xor
fwait
and
push
cmp
les
or
pop
lea
mov
mov
stc
mov
inc
or
inc
mov
out
mov
hlt
clc
enter
in
inc
ret
pop
xor
pop
movsb
adc
cmp
xorb
push
andl
cmp
adc
and
inc
adcb
sub
loope
add
pop
js
pop
mov
dec
jg
xchg
icebp
mov
inc
seta
les
sbb
div
xor
push
ljmp
cld
add
mov
nop
imul
hlt
mov
push
push
sbb
and
push
sbb
test
rcrl
aaa
adc
shl
shlb
sub
outsb
pusha
xorl
test
mov
jb
push
sbb
mov
mov
pop
xchg
mov
add
sbb
mov
xchg
xchg
insb
ds
cmc
lret
mov
xor
push
jno
shl
jecxz
aad
repz
insb
push
pop
mov
insb
cli
jne
lods
pop
je
mov
jb
ror
mov
cs
ret
sti
dec
sub
jae
mov
inc
cmpsl
cmpsb
mov
mov
xchg
pop
ret
pop
mov
or
sub
xchg
loop
sub
jmp
jg
icebp
dec
in
call
ret
sub
or
out
dec
lcall
mov
mov
jge
ret
sbb
fistpl
cwtl
xchg
pop
jge
push
decb
mov
xchg
stc
mov
mov
push
cmpsl
out
andl
imul
jo
ss
or
loopne
xchg
xchg
jmp
addr16
mov
mov
hlt
dec
pop
call
lods
outsl
inc
xor
push
jmp
xchg
repnz
and
imul
cmpsl
jno
outsl
movsb
mov
stos
inc
pop
mov
mov
shrl
int
inc
rolb
outsb
push
shll
or
jp
aam
and
popa
pop
in
mov
pop
xor
cmp
mov
mov
mov
out
inc
mov
xor
sub
test
lcall
and
call
add
lret
jmp
hlt
pop
hlt
cmp
test
sub
loope
mov
inc
mov
add
jo
cmp
ljmp
sarl
cmpsl
loopne
in
mov
xchg
mov
cltd
inc
sbb
sahf
loopne
pushf
or
sbb
jb
mov
dec
jl
call
cwtl
jmp
push
add
push
into
xor
outsl
lds
push
movsb
sbb
sbb
mov
inc
dec
mov
fistpl
decb
cs
cmpsl
inc
shrl
inc
jbe
jle
cltd
popa
loop
scas
fisubs
addr16
gs
pop
push
pop
out
mov
stos
in
imul
pop
scas
mov
dec
add
addr16
cmp
shrl
aas
sbb
divb
mov
test
cmpsb
jp
lret
aam
mov
cmp
mov
mov
ss
movsb
addr16
mov
cmpsl
cmp
into
xchg
call
push
cwtl
add
mov
mov
sub
mov
mov
jp
push
stos
leave
je
rcr
add
loope
xchg
fsubrs
jns
jmp
xor
stc
ja
out
push
mov
mov
cmpxchg
mov
and
out
jb
dec
test
clc
add
popf
imul
bound
inc
jns
jns
xchg
out
sbb
jns
sbb
adc
lret
ficomps
mov
and
popa
test
jb
cmpsb
call
out
roll
push
rsm
mov
clc
repz
mov
jecxz
aam
cmpsl
jl
sarl
popf
jp
xchg
jnp
fdiv
cmpsl
dec
mov
jl
inc
data16
mov
cmpsb
icebp
adc
flds
xrelease
adc
and
arpl
int
scas
lahf
jmp
pop
out
loop
arpl
mov
lods
sarb
or
imul
add
jmp
idiv
sbb
sti
popa
inc
xchg
or
mov
mov
les
pop
cmp
fildl
stos
movsb
or
fmul
gs
jnp
dec
push
stos
fwait
dec
dec
adc
or
jb
push
testl
or
mov
outsl
std
out
dec
ud0
add
arpl
popa
mov
sub
sarb
rcr
pop
inc
xchg
sbb
je
and
pop
pushf
imul
faddl
add
mov
into
fidivl
test
lods
or
out
int
cmc
add
dec
adcl
nop
xor
shlb
sbb
inc
imul
mov
fisttpll
rcr
and
push
jae
inc
sub
icebp
lea
mov
xor
mov
shlb
mov
jle
xor
cmpsb
je
pop
out
push
rorb
mov
daa
repnz
cmp
push
push
and
mov
cmp
jle
in
movb
mov
cmp
push
sbb
arpl
ja
scas
dec
shlb
cmpsb
daa
jle
mov
inc
shll
imul
xchg
or
push
popa
mov
xchg
push
cmpsl
push
jo
and
enter
pusha
mov
pop
inc
jno
movzwl
xchg
daa
adc
jno
sub
lcall
or
jl
pop
xchg
pop
cmp
mov
adc
outsl
dec
or
adc
push
movsl
mov
sbbl
adc
dec
inc
lods
stos
pop
sub
test
mov
adcl
xor
cmp
shll
mov
jge
push
sarl
mov
ficomps
sti
push
xchg
js
shrl
pop
xor
sbb
sub
add
mov
add
jb
es
shlb
mov
jmp
inc
jl
dec
mov
sbb
fistl
aad
pop
and
dec
or
jecxz
jmp
int
jne
push
push
testl
ret
push
movsl
addr16
stos
movsb
xchg
add
mov
sbb
jg
push
das
bound
jnp
hlt
fistpl
pop
xor
add
cltd
and
insl
mov
cmp
pop
out
cmp
jmp
xchg
out
jo
adc
add
mov
mov
repz
scas
dec
jo
inc
xchg
jmp
push
adc
lds
xor
mov
xor
sub
inc
aad
shlb
xchg
jne
call
cwtl
imul
cmpsl
add
sbb
pusha
mov
adc
xor
push
repnz
xchg
push
dec
or
xchg
mov
cmc
iret
pop
and
mov
out
in
sbb
or
repz
stos
adc
and
cmp
das
into
mov
mov
mov
loopne
ljmp
xlat
scas
outsb
jp
mov
and
push
xor
jle
testb
aaa
cld
in
lcall
mov
add
movsl
lcall
pop
adcb
mov
mov
sbb
xor
xor
adc
adc
jb
inc
cmp
mov
and
xor
pusha
mov
arpl
mov
jmp
in
mov
dec
lds
and
pusha
xor
movsb
cmp
rorb
insl
jno
jg
lret
insb
cmpsl
lods
aam
loop
aad
movsl
mov
mov
mov
push
mull
aas
roll
rolb
sub
je
cld
push
call
mov
jg
xor
sub
lcall
sub
fcomip
push
mov
dec
lods
dec
xlat
dec
cmpb
mov
fmulp
xchg
les
addr16
ljmp
in
mov
mov
inc
push
dec
dec
jmp
push
inc
mov
test
or
xchg
sahf
push
jnp
scas
mov
xchg
jge
xor
push
mov
mov
sub
in
mov
xchg
movsl
xlat
pop
or
xor
inc
fadd
pop
add
hlt
push
cmp
pushf
jmp
cmp
out
pop
dec
xchg
jo
sbb
pop
in
dec
in
pop
repnz
in
jnp
shll
sbb
inc
pop
inc
push
insl
cmp
pop
dec
andb
stos
jb
repz
stos
addr16
xchg
adc
pop
pop
out
push
sub
dec
ja
mov
out
fnsave
add
lods
pushw
fcoml
xor
imulb
fsubrs
insl
jmp
vpunpcklqdq
in
insl
xor
adc
mov
stc
daa
sub
pop
popf
cmp
jno
aaa
inc
add
push
sub
nop
xor
jb
or
fdivl
sahf
adc
sti
cmp
jnp
inc
xchg
rcr
xchg
aad
loop
mov
movsb
test
lret
lock
loop
push
repnz
pop
addl
stos
dec
xor
movsb
sbb
push
cmovp
jle
xor
ljmp
dec
mov
fcmovnbe
int3
cs
rcrb
jmp
mov
in
and
cld
insl
sbb
xchg
fwait
movsl
pop
rorb
lock
dec
pop
sbb
jb
cmp
inc
mov
xor
shrl
dec
jg
pop
inc
fwait
inc
sbb
push
mov
imul
mov
push
mov
iret
lea
test
daa
ljmp
add
and
aas
je
leave
divb
jbe
mov
mov
cmpsb
mov
xor
inc
jge
and
xor
mov
dec
mov
xchg
fstpt
mov
lret
xchg
pop
iret
sbb
adc
mov
fists
sbb
fisubrs
lds
adc
cmp
fwait
adc
sahf
idivl
xchg
or
lea
mov
loopne
ficoml
es
ljmp
aad
leave
jecxz
call
cmpsl
lret
sti
pusha
js
and
mov
push
sti
jae
stc
inc
std
stc
cmp
je
push
call
mov
minps
pop
clc
test
and
and
out
inc
mov
push
jns
orl
sbb
dec
clc
ret
and
sbb
jp
jmp
in
fs
loope
stos
sub
int3
sbb
hlt
mov
clc
sub
decb
rolb
inc
pop
mov
xor
pop
xchg
sub
andb
aaa
mov
xchg
ret
cmc
xor
inc
jle
mov
fwait
inc
mov
iret
mov
sub
mov
jp
hlt
cs
jmp
dec
jle
lret
or
or
inc
dec
jg
in
rcrl
das
sub
js
dec
push
mov
mov
int3
push
mov
mov
movsl
aaa
iret
jecxz
int3
mov
cltd
std
daa
sub
push
aas
push
negl
dec
mov
movsb
and
int
fidivrs
repnz
mov
arpl
lahf
push
out
push
data16
insl
fdivl
loope
into
jno
lods
sub
cmpsl
cmp
jl
imul
pop
inc
sbb
inc
cs
jb
nop
mov
fwait
out
pop
cs
pop
outsb
imul
adcl
xor
ljmp
pushf
fldt
shr
cmc
sub
push
cmpsb
cmp
push
je
inc
loop
mov
stos
ss
in
outsb
lock
bnd
push
or
daa
daa
aam
xorl
mov
lahf
aas
cwtl
mov
lds
add
pop
lods
pop
jecxz
enter
sub
xchg
ret
hlt
mov
dec
lods
xchg
dec
jle,pt
mov
aad
in
loopne
rcr
insl
add
cmpsb
cmpsl
aad
jae
sub
out
mov
test
bound
push
pushw
repnz
mov
cwtl
test
cmp
dec
popa
data16
inc
xor
movsb
dec
int
jno
jnp
add
cmp
in
ss
loopne
sbb
pop
add
mov
int3
mov
dec
dec
jg
inc
add
fsub
in
mov
sbb
inc
sbb
rcrb
jnp
dec
test
sub
rcrl
mov
mov
push
loopne
pop
outsl
dec
test
and
sbb
or
dec
out
stc
inc
stc
adc
xor
ret
sub
pop
jle
sub
xor
jbe
ss
testb
fs
jo
add
xchg
xchg
inc
cmpsb
mov
cld
int3
aaa
cmpsb
insl
cmpl
xchg
xor
in
sahf
and
shll
pop
jo
in
push
jb
inc
lods
inc
pop
sbb
pmulhw
push
mov
adc
aas
outsl
cs
inc
mov
pushf
mov
into
int
push
xchg
or
jge
lret
adc
je
fidivs
push
sti
sbb
stos
push
je
mov
stos
out
xor
hlt
sub
fwait
loop
jno
imul
pushf
mov
dec
mov
iret
mov
and
xlat
or
mov
sbb
mov
movsl
adc
or
nop
cwtl
and
mov
outsl
adc
iret
out
sub
dec
jnp
mov
in
fidivl
sub
cmpsl
lea
xor
cli
lret
out
out
jp
pusha
mov
loop
lea
dec
insl
and
addr16
mov
mov
pop
iret
sub
pop
add
in
mov
jp
mov
jbe
lods
pop
mov
or
pop
jg
lahf
push
dec
lds
int3
jne
jbe
bound
push
nop
xlat
push
dec
in
mov
enter
push
sub
cmp
js
cmc
push
cwtl
push
xor
mov
in
stos
mov
dec
fistps
pop
inc
bound
rorl
cltd
pop
sbb
ret
ret
sti
add
aad
and
cltd
push
shrb
fstpl
xchg
pop
mov
pop
add
dec
mov
add
inc
stc
icebp
pop
mov
jne
jmp
dec
and
cmp
repnz
xchg
pop
dec
and
push
loop
imul
jbe
pop
fdivrl
and
xchg
push
dec
outsl
cmc
lds
pop
adc
negb
push
adc
or
clc
imul
lcall
frstor
scas
dec
pop
xorb
aas
aaa
add
imul
subl
cmp
imul
enter
rcr
and
dec
inc
jmp
jbe
sahf
popf
int3
push
ljmp
leave
push
pop
push
lock
aas
shll
loope
adc
cmp
xor
or
ja
jb
repz
sbb
stc
hlt
out
inc
xor
sbb
dec
mov
add
and
test
pusha
pop
lcall
lahf
or
pop
xor
adc
jle
mov
cmc
or
cmp
sti
mov
scas
add
adc
dec
pop
fists
inc
mov
rcll
pop
iret
adc
sbb
jne
xor
jge
or
rol
dec
sbb
neg
cmp
outsl
mov
mov
in
fwait
sbb
and
sbb
adc
or
fdivrl
push
mov
push
rorb
push
stc
xchg
mov
sarb
or
adc
sbb
gs
pop
enter
js
es
jge
xor
cmpsb
popw
xor
mov
inc
lret
cmpsl
js
idivb
pusha
mov
mov
and
rclb
sbb
js
pop
fildl
mov
ss
flds
mov
test
sbb
cmp
addr16
add
xchg
xor
xor
in
cmp
cmp
mov
push
inc
xchg
lcall
filds
cmp
push
and
xchg
hlt
or
push
add
insb
push
addr16
lock
mov
movsb
movsl
pop
out
insb
fsts
lods
fstps
sti
push
fcoml
jg
mov
fstl
faddl
cmp
jecxz
xor
loopnew
movb
pusha
jp
lcall
std
aaa
lahf
push
push
xchg
ja
rcll
xor
cmp
popf
in
sbb
mov
fwait
lcall
pusha
adc
bound
cmp
shll
outsl
push
nop
int3
jnp
imul
repz
pop
rolb
cmp
and
inc
cld
loop
add
leave
inc
xor
jb
xchg
pop
ret
jo
jns
sbb
sbb
std
add
popf
and
lods
into
push
mov
jo
addl
push
outsb
addl
dec
cmp
add
sub
decl
mov
sbb
dec
cld
cmp
push
scas
loope
mov
sarb
ds
addb
stos
loopne
es
and
mov
pop
in
mov
push
cmpsb
in
xchg
mov
jmp
out
cld
cmc
push
aas
nop
xorl
push
or
pusha
mov
sub
dec
xor
xor
or
and
sbb
pop
ret
xchg
fwait
cwtl
mov
insb
jle
xchg
push
adc
hlt
ja
pop
cmpsl
cmp
mov
cs
rorl
or
ror
inc
shll
call
je
mov
jge
pop
pop
popf
stc
xchg
mov
jp
and
sub
xchg
mov
mov
jae
vpunpcklqdq
and
push
repnz
pop
loopne
lea
ficoms
xchg
fcmovne
test
fmul
adc
xchg
jne
pop
fcompl
cmpsl
aad
out
xchg
sti
jmp
mov
push
ja
inc
jo
push
xchg
pcmpgtb
aaa
adc
popa
mov
pushf
dec
shll
cld
fldt
sbb
rol
insl
push
inc
xor
inc
scas
fldl
push
inc
pop
jb
mov
cltd
mov
clc
shll
test
cmpsl
cmp
pop
adc
aam
nop
in
jle
in
mov
mov
inc
test
les
cmpl
or
fiaddl
ret
stos
pop
adc
pop
cwtl
es
push
popf
sahf
adc
inc
scas
sbb
jge
loopne
push
mov
mov
mov
sbb
jno
aam
outsl
aam
ret
repnz
lret
movsb
or
pop
adc
jno
jns
push
adc
int
sti
and
shl
push
stc
and
dec
xchg
sbb
ja
xchg
test
xchg
adc
jae
shrb
js
out
jg
insl
imul
fwait
inc
push
inc
and
loop
imul
cmpsl
pop
in
and
push
aaa
dec
pop
lret
fistps
dec
jp
cli
loop
sub
pop
inc
sub
pop
in
cmp
pop
repnz
xchg
jmp
jns
mov
fldenv
lds
cmp
dec
or
daa
xor
push
xor
aam
xchg
lods
xor
dec
xchg
cmp
push
dec
mov
sub
ret
aas
mov
jmp
mov
mov
cld
dec
add
mov
scas
xor
cld
addr16
and
add
insl
mov
insb
mov
stos
aaa
jb
aam
jg
cwtl
sti
sub
mov
in
fninit
pop
cli
shll
xchg
xchg
out
popa
xor
push
mov
jge
mov
mov
mov
jp
jae
xor
popa
mov
jae
mov
fmuls
enter
inc
and
push
call
mov
incb
sti
inc
addl
outsl
push
pop
lret
jp
outsb
cmpsl
dec
cmp
cmp
lea
loop
mov
std
popa
mov
nop
mov
jne
loopne
int3
pop
jmp
mov
sbb
cmp
lahf
or
adc
js
outsl
lds
das
or
out
mov
cmpsl
data16
mov
fdivrl
bound
fucomip
jo
cmc
pusha
loop
mov
adc
sbb
or
and
bound
mov
mov
ljmp
mov
int3
cltd
or
sbbb
fwait
or
xor
pushf
lcall
mov
into
dec
xchg
insb
sti
stc
pop
dec
cli
mov
mov
popa
mov
mov
jl
mov
mov
lds
iret
cmp
or
test
adc
push
mov
orb
popf
lahf
sbb
addr16
sub
andb
and
into
imul
sarl
jecxz
hlt
test
ja
jno
xchg
dec
jo
mov
ja
dec
jl
jl
lods
bound
cmp
xor
xor
lea
scas
and
ds
aad
inc
repz
lcall
inc
sar
out
and
mov
xlat
dec
cmpsb
mov
cwtl
lods
mov
sbb
lret
inc
clc
sbbl
xchg
and
mov
xchg
loopne
fstpt
arpl
xor
gs
jo
jp
mov
mov
pop
inc
push
jl
popa
test
test
ret
mov
in
jl
jnp
ret
movsb
es
lods
adc
int3
dec
fwait
mov
inc
add
rcll
add
cmc
out
sub
cltd
rorb
push
test
movsl
cli
outsb
cmp
cmpb
leave
mov
xor
test
sub
or
mov
inc
add
insb
push
std
ja
loopne
pop
xchg
inc
jnp
in
inc
or
hlt
xor
adc
inc
insl
inc
dec
fiaddl
push
or
imul
sar
cltd
mov
dec
adc
fprem1
iret
jmp
mov
loope
cmp
das
cwtl
mov
fs
int3
sbb
pop
imul
jnp
test
push
dec
aas
ret
call
pop
add
aaa
cmp
dec
rolb
dec
adc
sub
jge
je
pop
sub
xchg
test
push
mov
ds
jmp
cmp
and
pop
adc
xchg
sbb
fsub
fnstcw
inc
xor
xchg
out
adc
lahf
mov
add
incl
pop
mov
mov
mov
ret
cld
adc
mov
fwait
cmp
lcall
lret
shrb
pop
mov
mov
bnd
xor
sub
popf
lods
loopne
push
cld
and
movsl
xor
push
insl
sub
xchg
sbb
push
push
insl
ja
rclb
adc
mov
into
cmp
adc
testb
xor
mov
stos
xchg
test
lods
xchg
int3
or
lcall
movsb
jge,pn
imul
stos
sub
cli
mov
ds
mov
loopne
test
es
repnz
in
push
and
sub
mov
or
pop
stos
dec
inc
mov
es
adc
jae
popf
rcrl
push
pop
int3
int3
aaa
aas
sahf
xor
push
mov
push
fcomip
divb
mov
hlt
mov
cmp
in
mov
jge
pop
loopne
mov
or
fisttpl
sub
push
imul
lcall
and
insb
jge
jo
aas
cli
mov
jo
stc
enter
lahf
cmp
enter
sub
add
aas
fsub
sub
out
xchg
mov
das
inc
mov
mov
stos
jno
jl
loope
lods
idiv
sbb
iret
pop
and
cmpsl
sub
mov
pop
mov
int3
mov
sbb
sbb
sbb
or
pop
das
cmp
xor
lahf
cmpsl
iret
fbld
or
imul
xor
dec
mov
insb
sbb
test
lret
mov
adc
test
ret
movsb
mov
insl
stos
push
lods
aad
and
mov
fadds
pop
enter
add
in
push
out
imul
into
mov
adc
sbb
jle
data16
aaa
jae
mov
push
push
je
repnz
inc
xor
insl
push
dec
addr16
push
jne
ret
stos
dec
stos
ffreep
dec
cwtl
pop
mov
mov
mov
mov
scas
push
jb
stos
jmp
fld
xchg
add
add
and
jmp
out
cmpsb
sbb
push
test
in
enter
sbb
pop
dec
cmp
fnsave
lret
or
aas
dec
hlt
cld
dec
jae
imul
jecxz
fwait
dec
push
idivl
sbb
push
xor
xchg
pop
inc
sbb
xor
mov
sti
adcl
mov
in
jns
shll
and
xor
mov
je
inc
hlt
and
push
punpckhbw
ficoml
push
fcomp
mov
call
pusha
gs
mov
mov
mov
inc
push
push
test
rolb
xor
out
fisttpll
fwait
mov
xchg
mov
sub
or
dec
mov
mov
pop
cmpb
out
iret
push
into
sbb
push
hlt
sub
adc
int3
and
das
cmp
sub
ror
movsb
xor
dec
or
scas
xchg
cmc
mov
add
jb
imul
pop
addb
sbb
dec
and
lret
cmp
or
out
mov
int
dec
mov
sub
ficoml
xchg
cmp
pop
sbb
push
mov
dec
jo
sbb
imul
xlat
test
jne
inc
stos
or
push
pop
mov
into
iret
std
and
cmpsl
mov
iret
aam
notl
add
out
in
lret
scas
cmp
je
add
cmp
negl
xor
mov
subl
or
dec
movsb
stc
les
lcall
or
int
push
dec
movsb
mov
nop
in
f2xm1
aad
pop
movsb
in
or
cmpsl
shll
push
lea
mov
negl
mov
sbb
out
inc
imul
xchg
xchg
jno
pop
das
jb
mov
lds
cmp
fwait
mov
es
cmp
movsl
pop
sub
mov
lods
and
mov
mov
cmp
mov
inc
pop
adc
sbb
popa
out
pop
pop
jne
pusha
cmp
sbb
mov
sbb
inc
cltd
or
jne
cmpb
bound
push
daa
inc
push
fsubl
outsb
es
nop
pusha
push
inc
aam
lahf
xchg
lods
xor
lretw
push
lret
jmp
je
xor
push
or
inc
and
lret
mov
mov
xlat
in
and
add
inc
lahf
stos
popf
xchg
cmpsl
xchg
aam
mov
mov
xchg
push
push
ror
pop
addr16
push
inc
sbb
push
push
mov
out
push
or
mov
addr16
test
or
adc
push
lds
xchg
dec
ret
fsub
xor
sub
sahf
shll
pop
loop
test
mov
adc
cmc
hlt
adc
loope
bound
jge
inc
mov
add
jle
fdivrs
icebp
ss
sbb
outsb
add
fdivrp
add
loop
loope
fwait
dec
adc
xchg
data16
call
mov
dec
add
dec
ret
in
es
push
push
ret
test
mov
mov
xchg
and
mov
aas
ret
jbe
inc
repz
xor
jbe
into
xor
and
mov
fisttps
adc
sti
shr
test
inc
cmp
mov
push
inc
jnp
mov
mov
bound
jae
add
enter
test
gs
fwait
sub
shl
pop
sti
hlt
xchg
out
push
push
mov
or
jmp
xor
pop
mov
and
sbb
lea
mov
mov
jno
js
out
aaa
push
sbb
inc
repnz
fwait
pop
jmp
rcrb
xchg
mov
mov
lcall
pop
and
mov
fcomps
daa
repz
subl
sbb
jl
sub
nop
and
out
sub
jg
add
pop
mov
clc
cmpsb
mov
sub
imul
test
push
int3
jo
jno
jb
xchg
sbb
cmpsl
dec
adc
stos
imul
push
sub
ret
cltd
jb
shrl
mov
ret
in
sub
add
int
push
mov
and
shrl
xor
int
pop
sbb
lods
cs
push
mov
pop
aam
add
rolb
pop
pop
inc
add
movsl
nop
pop
cmpl
scas
mov
not
mov
daa
icebp
mov
cld
inc
movsl
jb
cmpsb
lahf
mov
loop
jl
add
je
test
add
push
push
ret
sbb
js
jge
movntq
filds
jg
loop
fs
adc
enter
mov
sbb
mov
jg
dec
xchg
adc
mov
jmp
inc
fldcw
rcl
fimull
imul
fs
mov
fistl
add
rcll
cmp
mov
rcl
lods
filds
adc
push
xor
mov
hlt
push
jl
pop
arpl
push
fucom
rol
mov
fdiv
jb
test
adc
dec
xchg
mov
fcoms
cmpsl
test
enter
dec
mov
mov
mov
sbb
aad
jno
int
dec
imul
es
add
mov
pop
xor
sub
fs
out
fdivrs
addb
cmp
test
xchg
add
rol
mov
lods
and
inc
ja
mov
loop
movsb
adc
pop
add
pop
pop
dec
cmpsb
add
push
fldenv
jle
mov
mov
fisubrl
aam
mov
or
pushf
sti
pop
lret
and
inc
loope
lahf
push
push
inc
or
pop
test
repz
inc
xchg
nop
adc
movsb
add
xchg
ror
ret
dec
test
pop
pop
dec
dec
adc
repnz
inc
lea
stos
dec
jnp
stos
test
mov
cmc
frstor
bound
loop
inc
mov
mov
mov
jno
int
xor
push
stos
lcall
ret
test
mov
mov
rcrl
jae
or
mov
outsl
add
popa
faddp
jge
jo
loop
push
cwtl
and
xchg
lds
jle
push
sahf
fisubs
stc
or
inc
in
sub
mov
insl
js
rcrb
in
clc
mov
adc
int
lock
and
arpl
xor
mov
and
je
imul
aad
ficomps
dec
mov
push
inc
or
outsl
das
xchg
push
add
xchg
sbb
xor
xchg
aas
ss
sarl
mov
push
popf
loope
mov
rorl
cs
sub
mov
cmp
test
fildll
repz
cli
test
dec
jmp
outsb
and
or
xor
test
mov
push
push
cmp
icebp
xor
pop
int
cmc
mov
xor
fwait
push
fisubs
test
clc
jns
jecxz
outsb
xor
jge
jge
leave
or
test
inc
xchg
in
jge
dec
xor
inc
cmpsl
dec
lea
stos
and
sub
hlt
pop
jmp
or
mov
xchg
xor
jmp
mov
and
rcrb
outsl
inc
bound
jp
xor
fs
inc
mov
aaa
je
repz
out
clc
and
lret
jg
jl
out
in
idiv
call
out
stos
cmpsb
popf
sub
or
addl
cmpsl
mov
inc
push
xchg
jno
dec
lret
sub
mov
pop
shlb
or
fstl
pop
or
repz
mov
cmpsl
pop
cmp
stos
adc
sbb
cmp
pop
fs
sbb
sbb
jb
push
in
mov
and
mov
inc
sbb
push
add
xchg
xor
pop
push
data16
cmpsb
lcall
iret
repz
push
pop
movq
cmpb
pop
xchg
fcoml
inc
test
jo
rorl
data16
sub
int
test
clc
mov
das
xchg
pusha
out
and
movsb
jecxz
outsl
mov
dec
dec
fs
inc
pop
jmp
mov
lcall
lret
into
dec
or
dec
imul
push
and
cli
out
ja
fs
xlat
icebp
pop
data16
add
adc
jb
push
bound
inc
push
jmp
iret
adcl
xchg
ja
dec
mov
cmp
outsl
or
ja
sbb
jne
xchg
jnp
fisubs
hlt
add
mov
adc
movsl
jne
nop
push
dec
cmp
and
mov
push
mov
and
xchg
lea
mov
push
mov
fiaddl
or
decb
fwait
add
pop
cli
fmuls
mov
cmp
sbbl
subb
xchg
jg
mov
mov
roll
xchg
and
lods
jp
sub
lds
lret
cmpb
andl
mulb
aam
and
jecxz
or
loope
mov
fwait
jo
jp
insl
ljmp
outsb
icebp
cmc
imul
fstpt
fstl
sub
or
sbb
aaa
shr
jo
daa
ret
jle
aas
lcall
push
idivl
mov
adc
in
and
sahf
adcl
fwait
jb
pop
add
mov
iret
ja
pop
adc
sahf
add
dec
jno
ds
nop
into
pusha
mov
enter
rcrb
ljmp
enter
pop
out
mov
push
push
dec
adc
clc
in
xchg
sbb
or
mov
adc
push
add
mov
add
jmp
inc
outsl
jne
rol
scas
or
mov
ljmp
jge
ret
jmp
arpl
arpl
enter
fs
in
mov
xchg
in
fists
popl
lret
sub
loope
jg
ret
pop
lret
pushf
repnz
fmuls
dec
ja
cwtl
sti
sbb
sub
xchg
and
push
add
inc
inc
fwait
loop
arpl
push
push
lcall
nop
xor
sub
jmp
pop
fnsave
sbb
pop
in
dec
cmp
add
nop
pop
push
incl
in
mov
pop
jle
fadds
les
mov
fldcw
xchg
xor
mov
xlat
jnp
pop
es
inc
adc
in
mov
add
pop
mov
in
push
or
aaa
repnz
sbbl
std
fcmovnu
inc
sub
loopnew
pop
stos
push
jmp
sti
test
mov
sbb
lock
lret
cwtl
in
mov
shll
sub
sbb
jge
push
popf
imul
sub
and
push
adc
repnz
or
push
movsl
mov
aad
sbb
aad
pop
data16
inc
sarb
mov
sub
inc
mov
lret
push
jae
outsb
adc
bound
xchg
dec
ds
and
add
or
inc
jmp
ret
push
and
mov
jae
mov
int
dec
jnp
shlb
scas
mov
dec
test
ret
mov
and
pop
scas
xchg
call
ret
movsl
pushf
dec
xor
hlt
mulb
enter
cwtl
sbb
xchg
icebp
cli
xchg
mov
push
sbb
mov
sub
xchg
mov
inc
cmp
mov
pop
pop
lods
cmc
mov
ret
mov
jmp
xchg
push
mov
or
xor
dec
or
xchg
dec
mov
xchg
idivl
and
insl
sbb
push
xchg
inc
xor
fidivs
aaa
rcrb
std
out
sahf
dec
pop
mov
sahf
or
cli
lods
andb
dec
daa
gs
test
cmp
nop
and
icebp
mov
pushf
xchg
les
int
rorb
outsl
push
mov
mov
xchg
jge
inc
dec
xor
xor
mov
dec
inc
pop
cmp
inc
jg
fnsave
mov
xor
mov
loop
adc
jmp
popa
mov
cld
and
lods
notl
push
mov
push
xor
lret
mov
int3
insb
mov
push
pushf
loopne
mov
mov
pop
popa
add
cmp
cmp
pop
jb
sbb
bound
adc
jns
es
xor
in
iret
jmp
ds
and
iret
fistps
cmp
rolb
out
cmp
cmp
sub
ret
enter
movsb
ljmp
push
aas
leave
ret
test
fadds
mov
xchg
mov
adc
mull
xor
aaa
stos
cmp
xchg
dec
sahf
adc
mov
andb
xchg
mov
fcmovu
xor
push
lds
sbb
mov
adc
xchg
cli
xchg
movl
cmpsl
repnz
pop
inc
rorl
lock
jbe
sub
test
imul
mov
fcom
add
jp
es
iret
xchg
push
pop
push
xchg
add
ja,pt
frstor
mov
mov
sbb
mov
mov
enter
sub
lds
mov
divb
add
ja
jl
out
jo
sub
imul
nop
rorb
jne
xchg
jge
aad
sbb
mov
push
mov
fsubl
sbb
popf
pop
pop
std
test
pushf
dec
sub
sub
stc
cmp
lret
dec
popa
scas
das
jno
cli
out
leave
sub
rolb
fs
xchg
scas
ja
std
cmpsb
push
rcll
icebp
push
mov
in
adcb
mov
cli
or
mov
das
repnz
cs
push
mov
push
sbb
mov
loope
or
and
lds
cmc
sbb
push
loopne
hlt
and
cmpb
pop
lods
sbb
rcrl
jae
push
sub
mov
inc
and
add
push
xchg
pop
push
fsubrp
xchg
fidivrs
add
cmpsl
xchg
fdivrs
and
mov
inc
cmp
xor
pop
inc
faddl
shrl
test
dec
mov
adc
test
dec
xchg
mov
scas
mov
push
fnstcw
shlb
dec
retw
jl
push
dec
not
push
sbb
into
sub
decl
outsb
cwtl
push
popf
lods
aas
pop
ret
imul
mov
jbe
cmpsb
outsl
xor
xor
scas
xor
or
mov
push
scas
jbe
mov
xchg
add
adc
testb
sbb
push
test
and
xchg
ss
sub
sub
jns
mov
or
pusha
adc
add
addl
mov
mov
jnp
stos
and
es
cmpl
xchg
adc
mov
mov
xchg
call
imul
xor
xchg
jne
dec
aad
mov
inc
stos
repz
test
repnz
lds
sbb
loop
lods
sub
test
arpl
aas
adc
in
pop
lret
popf
popa
popl
imul
mov
insl
dec
mov
fwait
pop
hlt
pop
jmp
addl
ljmp
xchg
shll
mov
xchg
and
sub
out
sub
lret
sub
xor
push
rcl
rcrb
xor
cmc
fnstenv
fs
add
es
cmpsl
push
mov
fnstsw
add
jae
push
adc
es
out
sbb
adc
addl
or
sbb
inc
adc
pop
mov
ss
or
pop
push
fsubrs
lods
int
pushf
shl
pop
sbb
jg
sub
ja
ljmp
fldl
adc
xorb
cmpsl
or
ljmp
mov
and
sub
sbb
cmpsb
call
stc
xor
cmp
ss
shr
jmp
push
xor
xor
inc
popf
mov
inc
pop
mov
test
mov
jge
shrb
push
adc
sti
into
mov
stc
leave
dec
rcll
out
and
hlt
dec
lods
cmc
lret
bound
outsb
test
ds
stos
hlt
loope
cld
shl
push
add
xchg
jmp
mov
xchg
sbb
jae
or
loop
or
rolb
jl
mov
bound
jp
xchg
nop
decl
add
movsl
fbld
xor
dec
adc
scas
ficoml
and
arpl
lea
popf
sub
ret
and
inc
push
mov
ja
leave
hlt
daa
fldcw
pop
ss
rolb
shl
mov
pop
ljmp
mov
adc
adc
test
inc
scas
dec
dec
arpl
fwait
push
push
xor
mov
or
inc
xor
hlt
adc
pop
fcoms
into
mov
mov
cmp
fs
mov
adc
jge
icebp
sbb
xor
and
das
outsl
icebp
pushf
and
and
push
pusha
xlat
xchg
in
dec
cwtl
or
out
push
sub
mov
mov
mov
lret
xchg
push
xor
lret
push
outsb
pop
adc
push
loopne
jmp
test
ret
fcompl
mov
push
adc
ja
ss
aam
mov
bound
push
push
iret
shl
test
shrl
push
sub
out
fdiv
sti
xor
mov
ljmp
sub
mov
daa
dec
or
std
jns
push
aam
in
push
ret
cmp
iret
pmaxub
mov
sbb
mov
jb
into
sub
xor
adc
push
sbb
mov
jmp
push
xchg
movsb
lea
and
into
cli
int
ja,pn
xor
ret
jno
roll
jle
lret
jg
push
mov
xchg
outsb
lods
cmpsl
jmp
lods
xor
mov
ljmp
faddp
mov
mov
fs
jmp
or
fldenv
cltd
nop
and
hlt
mov
or
lret
rclb
aad
xor
aad
mov
movsl
test
push
pop
dec
jne
pop
mov
and
mov
mov
cmp
fs
xor
popa
inc
notl
lret
inc
add
movsl
stc
lods
cltd
pop
out
and
adc
pop
xchg
test
insb
cmp
or
jne
sbbl
pop
adcb
rolb
ret
sbb
mov
sub
mov
or
pop
fs
shll
jo
std
fisubrs
bound
and
mov
or
popf
push
push
cmp
and
popf
mov
push
ljmp
scas
outsl
mov
push
inc
clc
lret
cs
inc
into
fmulp
jbe
and
popa
or
mov
cmpl
movsb
das
jge
sti
call
jmp
mov
lock
cs
fcomi
pop
dec
cmp
mov
dec
xor
dec
daa
aas
mov
inc
ds
in
dec
jl
and
insl
cmp
clc
std
es
pop
inc
int3
mov
dec
inc
xchg
sbb
push
and
cmp
in
mov
jb
pextrw
cwtl
mov
push
inc
loop
jae
stos
pop
xlat
call
and
cltd
addr16
ror
lods
sahf
icebp
sbb
fisubs
into
pandn
sahf
movsl
jb
pop
xchg
mov
pop
xor
mov
xor
inc
aad
push
and
mov
mov
jbe
mov
movsb
and
push
xchg
mov
mov
faddl
mov
repnz
cs
out
add
mov
int
adc
push
jae
pusha
sti
dec
out
inc
pop
mov
outsb
movsl
lds
sahf
clc
pop
dec
fdivrl
fcompl
enter
out
shlb
lock
mov
push
scas
hlt
and
sbb
sbb
mov
push
jle
in
sbb
mov
into
clc
dec
rcll
insb
inc
cli
dec
in
mov
call
sub
adc
sub
adc
add
test
inc
and
pop
jecxz
inc
jle
sbb
sti
call
rcl
test
jbe
jmp
loopne
pop
scas
cmp
or
repnz
ds
into
outsl
cli
add
pusha
insb
pop
call
mov
mov
xchg
test
ss
mov
add
in
mov
xor
adc
loope
mov
sbb
incl
movsb
lock
jmp
cld
xlat
faddp
dec
out
cmp
xor
pusha
jno
aam
xchg
popa
cld
push
xchg
cmc
jmp
int3
mov
xchg
xor
xor
adc
inc
test
sbb
sub
jp
jle
enter
and
cmp
lahf
fisubl
jge
call
jmp
or
repz
sbb
ja
dec
inc
jle,pt
sbb
mov
je
test
pop
pusha
pusha
jg
and
fs
sub
xchg
jnp
fmull
leave
cwtl
iret
addl
jmp
cmp
adc
sbb
rcl
jge
movsb
and
std
add
scas
xlat
lea
push
xchg
filds
jp
insb
inc
insl
mov
sbb
fnstsw
push
enter
inc
or
sbb
stos
sbb
lcall
outsb
sbb
ja
sahf
pop
add
test
in
scas
cmp
data16
in
sbb
pop
test
pushf
cmp
mov
push
or
data16
loopne
cld
and
xchg
and
out
mov
fdivrs
and
sbb
cmc
pushf
sub
in
sbb
mov
outsb
js
push
rol
das
cmp
dec
sbbl
xor
sub
lret
pop
popf
ss
shll
jmp
test
fxch
sbb
xchg
cmp
lods
movsl
fwait
adcb
add
push
cwtl
call
mov
mov
rorl
mov
mov
and
cwtl
or
xchg
sbb
cli
nop
or
fistl
pushf
arpl
test
push
or
imul
neg
jl
stos
or
addr16
cmp
insb
cmp
arpl
es
pushf
in
ljmp
rolb
pushf
aad
push
jne
mov
ss
gs
ljmp
popa
push
inc
insb
pop
adc
sbb
rcll
pushf
test
insb
aad
inc
pop
icebp
mov
xchg
or
fcoml
sub
mov
or
jnp
daa
or
push
ret
out
xchg
jno
pop
and
mov
dec
add
in
mov
xorl
incb
sub
and
fisubrs
push
in
loope
insb
push
stc
fisubs
lock
push
sub
out
jbe
xchg
mov
js
mov
mov
loopne
add
repz
lock
push
inc
aam
in
addl
pushf
lahf
fs
cmpsb
or
sub
lcall
test
lea
ret
pop
dec
call
cmp
mov
in
mov
mov
mov
ss
push
leave
mov
xor
lds
mov
push
inc
mov
cmp
stc
push
jns
test
add
loopne
imul
test
int
cltd
jno
movsb
pop
adc
sub
mov
add
sbb
jns
xor
jle
movsb
pop
adc
mov
mov
pop
scas
adc
inc
mov
and
fildll
add
cmc
cwtl
push
jne
mov
pop
jge
loopne
sub
adc
subl
bound
cmc
lds
cmc
adc
pop
jg
mov
mov
divl
ss
xchg
fistpl
and
mov
cmpxchg
sub
ds
mov
push
lds
dec
enter
mov
aad
lret
cmovne
xchg
in
lock
orb
movsl
xchg
cmp
push
add
mov
addr16
pop
pop
mov
jge
mov
fldcw
ret
cmp
imul
movsb
test
mov
ficomps
xchg
push
test
cmp
daa
out
push
and
or
lea
or
dec
push
test
dec
cld
cmp
dec
int
jne
insb
xchg
popf
pop
cmp
icebp
jno
sub
inc
or
addr16
push
push
sbb
dec
add
dec
repnz
es
add
pop
mov
mov
cwtl
sub
mov
push
orl
fsubl
or
xor
cmc
mov
xchg
rclb
stos
scas
arpl
mov
jbe
fdivr
dec
orl
movl
xchg
fisttps
insb
sbb
xchg
mov
cmp
ss
dec
insl
mov
daa
xor
insb
sub
mov
pop
xor
push
loopne
iret
daa
pop
mov
jo
xlat
sbb
mov
fidivs
pushf
aam
push
xor
mov
mov
insl
and
dec
push
jle
inc
jl
pop
xchg
lret
xor
es
enter
xlat
mov
out
icebp
or
stos
cmp
pop
or
push
pop
mov
xchg
loopne
pop
push
pop
xchg
addr16
aas
jns
ror
dec
pop
add
mov
test
push
cld
popl
jecxz
jno
push
pop
inc
lds
mov
ljmp
xchg
jp
ja
xchg
cmp
xchg
add
int3
cmc
mov
mov
lock
xor
test
add
ljmp
mov
mov
je
adc
mov
leave
pop
pop
or
repz
add
js
ljmp
push
push
push
shrl
sti
jg
sahf
std
jle
imul
outsb
or
mov
f2xm1
adc
ds
leave
jns
xor
popf
imul
sub
or
call
dec
xor
dec
xor
enter
dec
je
arpl
lea
mov
mov
mov
mov
test
fcmovnbe
outsl
data16
or
clc
je
popf
enter
sbb
xchg
or
mov
inc
sub
sbb
test
cmp
addr16
mov
or
ljmp
scas
mov
or
loop
dec
xor
test
xchg
jge
cltd
mov
pop
fs
jmp
add
outsl
cmp
lock
pop
out
mov
xchg
and
jmp
adc
jo
add
inc
mov
push
mov
jge
ss
inc
les
adc
iret
pop
repz
ret
cmp
push
pop
ds
lahf
or
mov
push
push
gs
jb
or
into
adc
sbb
and
js
mov
pop
repnz
mov
mov
lret
test
loope
jne
jmp
inc
hlt
xchg
push
inc
xchg
cli
mov
xchg
popa
adc
sub
ds
out
leave
sub
and
push
ret
lret
and
dec
ffreep
mov
cwtl
mov
pop
mov
cmp
je
cwtl
pop
jge
hlt
in
mov
xchg
enter
xor
addl
enter
dec
cltd
subb
lds
mov
mov
in
dec
movsb
pop
inc
icebp
cmpsl
mov
test
inc
mov
mov
or
add
lahf
mov
mov
aam
aas
pop
xchg
mov
xor
ficompl
cwtl
fs
es
sub
imul
mov
shrl
bound
xchg
pusha
cmp
loopne
repz
mov
xchg
and
shrb
mov
test
mov
dec
sarl
jno
clc
mov
add
lock
mov
sub
jbe
cmpsb
test
out
mov
lret
xor
lods
add
lcall
ss
mov
movb
ds
pop
lods
mov
shr
aad
in
ret
mov
jl
inc
jge
mov
jno
scas
dec
hlt
repnz
pusha
inc
js
xor
mov
shll
inc
pop
fnstcw
cmp
mov
movsb
mov
xchg
xor
inc
ds
mov
xchg
xor
and
jl
xchg
arpl
pushf
jp
fwait
jmp
jb
mov
sbb
ja
sbb
xor
rorl
lock
sbb
repz
in
sbb
sbbl
pop
lods
add
mov
adc
push
out
add
nop
iret
aas
insb
inc
dec
outsb
mov
imul
outsl
inc
sub
dec
sub
loope
xchg
jns
jo
cwtl
sub
fs
mov
andl
roll
aas
stos
pushf
roll
xor
lret
cmpsl
test
dec
orl
movsb
ljmp
jl
in
leave
push
les
loope
xchg
std
lcall
mov
and
in
mov
cmp
fisttps
daa
test
lret
pop
sarl
test
xchg
mov
bound
in
jg
xor
pop
leave
je
in
xchg
sahf
sub
lret
mov
adc
adc
out
mov
fiadds
mov
push
push
aas
push
fsubs
cld
ret
mov
xchg
nop
xchg
fiadds
sbb
lret
outsb
sub
ss
hlt
shlb
fcmovnbe
xchg
aam
cmp
inc
in
mov
jg
fucom
jae
mov
ja
in
out
mov
addr16
push
jmp
pop
mov
test
push
mov
jg
or
in
jno
rclb
stos
xor
mov
jge
mov
push
subl
and
mov
lock
out
jl
ljmp
sti
dec
push
lahf
push
inc
and
dec
or
or
mov
xchg
cwtl
in
js
sbb
repnz
imul
cmpsb
loop
xor
clc
push
mov
outsl
test
mov
mov
adc
inc
push
pop
or
xor
rcl
xorb
mov
or
scas
out
add
xchg
cltd
push
add
dec
scas
cli
mov
mov
xchg
mov
jns
push
in
cmp
cwtl
fcompl
mov
les
cmp
std
cld
and
in
nop
std
push
mov
lea
xchg
inc
inc
add
aad
enter
out
in
in
sti
stos
dec
mov
outsb
loopnew
fs
sub
dec
mov
push
cmpsb
leave
mov
jg
out
fistps
sbb
loop
mov
xchg
mov
mov
cld
ret
xorl
lcall
mov
push
push
lahf
push
lcall
mov
test
mov
insb
mov
cmpsl
inc
pusha
clc
cmp
ljmp
daa
cmp
or
les
pushf
lret
stos
lret
fs
mov
outsl
inc
outsb
cmc
cmpsb
jl
divb
xchg
jp
test
imul
mov
mov
push
xchg
mov
pop
popf
inc
pop
jg
sub
jle
mov
dec
popa
push
ret
cmp
xchg
and
dec
cltd
mov
add
cltd
arpl
shll
sub
push
and
popa
adc
sbb
mov
jg
out
fisttpll
ret
xor
dec
leave
popa
pop
mov
clc
test
int3
les
cmp
inc
and
aad
cmpsb
adc
or
push
lods
aad
pop
dec
ds
push
sbb
ror
inc
rcrb
loope
addr16
sub
dec
adc
in
push
aam
jne
mov
mov
icebp
je
shrl
hlt
pop
jns
xchg
loopne
or
lods
test
subb
cmp
dec
loope
adc
cmp
dec
inc
jns
adc
insb
pcmpeqd
ss
sahf
mov
mov
pop
dec
cmp
ja
jmp
cmpsb
fbld
xor
sbb
dec
cmp
or
cmp
mov
jl
xor
xor
fisttps
fists
mov
jmp
orl
or
mov
or
decl
pushf
fwait
dec
mov
ret
cmp
data16
aas
and
ds
xchg
push
xor
jmp
sub
and
cli
leave
sbbl
pop
imul
mov
in
pop
push
fists
jno
pop
aad
ret
fldcw
fimuls
sbb
mov
shrl
sub
jno
dec
in
enter
int
aas
gs
xor
imul
xor
sbb
inc
shl
gs
adc
jb
cmp
and
or
push
out
lea
lock
xchg
sub
popa
push
adc
lods
ret
lea
std
sbb
mov
mov
push
dec
pusha
es
lds
clc
mov
das
sub
xchg
xlat
out
xor
push
adc
jp
cli
pop
lret
inc
dec
adc
pop
mov
push
xor
mov
push
jae
mov
ljmp
xchg
xor
mov
sub
test
stos
movsb
xor
and
inc
pop
sub
push
jbe
clc
cli
bound
jge
push
jecxz
sub
push
mov
jno
mov
jb
ss
cmp
mov
pop
xchg
xchg
pop
jnp
les
cmp
lret
ret
jp
imul
pop
test
test
xor
nop
shrb
dec
ret
dec
fldcw
call
in
jg
xchg
loopne
xchg
insl
pop
lock
mov
fwait
xchg
cmp
inc
jns
sbb
xchg
ja
push
mov
dec
mov
inc
in
in
lret
or
xor
fstl
mov
in
xchg
sub
out
cmp
lods
out
jae
push
out
dec
xor
gs
xchg
dec
jmp
inc
xchg
out
jle
inc
imul
push
push
fildll
jmp
imul
cs
daa
stc
lock
jp
sahf
push
data16
cmp
sahf
shll
std
xor
push
mov
arpl
ds
mov
es
push
jp
mov
movsb
sub
or
fsts
popf
outsl
cmp
jo
ret
jb
cwtl
mov
cmpsb
sbb
lds
cmpsb
pop
lahf
lods
or
in
pusha
and
sbb
mov
aad
fimuls
push
and
daa
mov
es
lcall
jns
mov
add
call
cmpsl
outsb
adc
inc
mov
pop
call
dec
jnp
pop
mov
mov
xor
xor
out
xor
push
ss
mulb
fimuls
mov
jno
or
add
jle
pop
aam
cmp
jle
inc
stc
gs
loop
pop
div
sbb
bound
cmp
pop
clc
lds
pop
outsb
ret
dec
and
push
das
sbb
add
scas
rol
outsl
pushf
test
push
cmp
fmul
dec
xor
or
xchg
rclb
je
cmpsl
subl
xchg
cmp
in
dec
push
xor
sbb
dec
cs
sub
ja
mov
inc
test
pop
push
fists
daa
xor
pop
or
mov
cmp
loopne
and
popf
xchg
mov
insl
jbe
pop
fisubl
fstpt
or
leave
sbb
push
xor
outsl
mov
jo
clc
loope
ds
scas
into
inc
cmp
inc
cmp
out
xor
sub
jo
and
push
rcrb
pop
test
jmp
add
mov
das
push
jmp
xchg
and
mov
add
cltd
lret
xlat
adc
lret
std
out
mulb
adc
jmp
xor
push
xchg
insl
arpl
scas
dec
lds
ja
jbe
dec
mov
sub
scas
ret
mov
bound
cmpl
and
rorl
adc
sbb
adc
imul
push
movb
mov
ret
jno
pop
movsl
or
xchg
pushf
xor
jmp
mov
je
repnz
bound
popa
sahf
xchg
add
aam
enter
xor
mov
insb
mov
in
mov
sub
fsubrs
push
fs
popf
fbstp
es
mov
aad
inc
inc
jg
mov
xchg
push
fstp
js
das
xchg
push
jae
mov
rcr
rcrb
lea
lret
es
lret
les
and
mov
rolb
data16
lsl
cltd
xor
sarb
jge
xor
mov
test
add
sub
inc
push
sti
out
out
sbb
xor
inc
scas
pop
pusha
mov
sbb
fwait
ret
lret
add
andb
clc
inc
mov
cmp
test
dec
mov
mov
lock
xchg
inc
loop
jp
mov
xchg
mov
mov
aas
add
pop
es
cld
push
loope
sub
scas
loope
inc
mov
jae
pop
sub
xor
push
and
pop
fldt
shrl
mov
pop
xchg
stc
xchg
push
sbb
in
and
xor
cmpsb
hlt
sub
loope
add
sti
xchg
mov
insb
pop
fnsave
sbb
inc
push
data16
in
popa
or
movsl
adc
std
pop
or
icebp
fcmovbe
f2xm1
out
jb
adc
inc
jo
and
fiaddl
xor
shl
stos
push
arpl
rclb
jb
scas
test
outsb
test
adc
cld
cmpsb
outsl
sbb
lock
mov
mov
in
sbb
test
bound
sbb
add
inc
sbb
mov
icebp
movsb
mov
xor
and
clc
push
sub
insb
push
call
adc
out
push
or
or
cmp
js
out
dec
pop
fnstsw
add
sti
and
cmc
jmp
dec
jge
cmp
stc
mov
call
lock
cmp
mov
popf
inc
or
fldl
in
pop
dec
xchg
ficoms
mov
mov
clc
xor
notl
pushf
sub
inc
jmp
ja
mov
imul
lcall
cmc
sub
jb
sub
mov
nop
repz
pushf
push
sbb
cmp
mov
sbb
imul
push
sbb
fsub
movsl
push
out
icebp
frstor
sub
icebp
mov
or
mov
ja
shr
fwait
pop
and
jns
jge
rorb
xchg
sub
mov
and
clc
pop
inc
push
add
mov
iret
inc
push
xor
pop
loope
mov
pop
inc
mov
xchg
jmp
iret
jecxz
jae
lods
jecxz
adc
push
xchg
aad
push
xchg
aam
ss
add
mov
sub
mov
in
jb
and
fldl
adc
jnp
mov
test
and
cmpb
pop
xchg
or
mov
inc
mov
pop
mov
loope
enter
dec
loopne
xchg
add
dec
sub
inc
int3
movhps
sub
pop
dec
and
jnp
cmp
mov
test
push
movsl
ret
pop
jecxz
cmp
aas
dec
invd
mov
cmpl
lock
out
cli
int3
call
xlat
iret
cmc
movsb
push
or
add
sbb
in
add
fimull
dec
mov
dec
xor
scas
push
xor
shll
sbb
fs
std
and
sbb
mov
mov
ja
add
scas
mov
es
xchg
js
outsl
leave
test
xchg
inc
pushf
pop
js
pushf
adc
or
xor
clc
jb
imull
or
sub
psllq
je
ds
shl
dec
sbb
sbb
mov
aas
lods
push
pop
pop
inc
pop
das
mov
cmp
enter
jl
adc
add
xlat
xchg
jo
inc
pop
loop
jno
push
stos
aas
and
pop
dec
and
xchg
sti
int
enter
cmp
inc
mov
jp
and
std
ljmp
or
sti
test
fidivrl
and
push
jno
mov
nop
cmp
mov
cmp
pop
and
jge
enter
rcll
pop
add
mov
mov
in
cltd
pop
mov
sub
clc
mov
pop
imul
hlt
mov
push
push
repnz
xchg
inc
mov
icebp
notb
inc
out
jb
mov
rorb
out
fsub
mov
imull
in
lock
xor
fs
aas
xchg
sti
imulb
fsubrp
push
sti
push
jmp
enter
pushf
xor
daa
lret
arpl
lret
hlt
cld
xlat
mov
add
sub
das
push
mov
in
cmp
cmp
or
push
pop
sti
scas
inc
push
popa
out
stc
lahf
mov
loope
sub
dec
mov
loopne
cli
dec
ljmp
stos
mov
fwait
ljmp
push
call
test
stc
into
scas
cmpsl
sbb
les
les
add
or
call
popa
mov
or
fildll
cmp
add
inc
ds
popa
jne
out
push
pop
and
shlb
leave
pop
ficoms
add
push
loope
xor
mov
mov
adc
push
pop
add
mov
aaa
push
cmp
repz
sarl
mov
xchg
and
sbb
jecxz
call
jle
sub
mov
dec
lods
out
call
shlb
repnz
inc
mov
sbb
aam
mov
push
popf
subl
push
and
test
idivb
or
aaa
push
sub
sbb
rcrb
xchg
or
push
cmp
jecxz
add
in
jne
push
dec
clc
push
or
out
jl
subl
aaa
mov
fdiv
enter
dec
xor
nop
lea
gs
add
pop
aaa
mov
mov
or
test
mov
ja
add
cmp
scas
adc
mov
es
fsubs
xchg
xchg
adc
out
inc
cmp
lods
add
xchg
push
adc
or
and
or
jg
inc
adc
imul
shlb
xchg
lods
pop
arpl
bound
out
mov
mov
jp
inc
js
orb
and
shl
in
lcall
outsl
fstps
insl
lret
pop
int
cmpsl
mov
or
push
pop
xorb
rep
out
jmp
in
pop
pushf
ljmp
ret
fidivs
sbb
mov
ss
adc
cli
fimull
repz
imul
pushf
xor
lods
aam
sbb
cmp
mov
mov
lcall
mov
bound
inc
shl
hlt
sub
out
rorl
sub
or
popf
or
cmpsl
jb
push
pop
roll
call
cmpsl
xchg
test
mov
xlat
lods
loopne
cli
test
or
cmpsb
loope
pusha
mov
mov
jge
dec
fwait
add
jg
mov
pop
jl
xchg
mov
mov
in
mov
adc
push
xchg
bound
dec
push
fwait
bound
pop
rclb
mov
pop
cmp
xchg
repz
std
loopne
dec
pop
in
xchg
enter
mov
mov
ret
lahf
inc
popa
test
inc
mov
sbb
inc
cs
in
jne
dec
xor
add
rorb
pop
dec
lcall
pop
or
insl
neg
jbe
ret
ret
std
mov
fldenv
ror
pusha
jae
loop
pop
in
jno
dec
pop
mov
cltd
mov
mov
loopne
sbb
adc
jb
inc
mov
cli
outsl
out
jbe
jo
outsl
stos
dec
roll
adc
lods
and
pop
inc
mov
mov
jae
dec
mov
fwait
pop
jmp
cmp
add
outsl
out
inc
jo
iret
dec
pushl
xor
add
leave
cmp
jo
xor
lea
fnsave
sub
mov
xchg
lahf
push
push
lahf
mov
cs
add
std
in
out
xchg
sbb
sub
cmp
fildll
lds
rcl
cli
cmpsl
dec
outsb
add
jno
sarb
lods
xchg
or
popa
movsl
push
shlb
cmp
in
movb
pop
stos
adc
test
sub
out
mov
pop
push
cmpsb
imul
loopne
xchg
aad
cmp
sbb
orb
mov
cltd
cld
test
sar
push
scas
sub
pusha
scas
sarl
cli
and
iret
xchg
mov
loop
and
idivl
lret
mov
subb
pop
sub
lret
arpl
adc
xchg
imul
adc
jl
and
pop
sbb
mov
adc
in
xor
aas
dec
pop
in
dec
mov
fsub
stos
lcall
mov
and
rolb
inc
sbb
sbb
stos
mov
xchg
push
xor
sub
mov
inc
scas
pop
scas
xchg
subl
dec
and
jg
stos
fstpt
mov
inc
stos
jle
pop
sbb
cvtdq2ps
jns
or
pop
fidivs
adc
adc
add
fidivs
pop
neg
push
jp
dec
mov
mov
in
dec
addb
xchg
aam
lahf
sbb
and
test
lock
cmp
mov
sub
sub
or
repz
mov
prefetch
lods
lcall
lods
movl
mov
test
fwait
or
mov
dec
mov
jl
mov
fsubs
jg
pop
pop
cmpsb
inc
leave
sub
aad
xchg
push
dec
mov
cmp
mov
iret
pop
jae
int3
lock
jnp
daa
add
fdivs
mov
das
fwait
mov
xchg
inc
dec
mov
bound
je
jae
xor
inc
xchg
inc
mov
mov
mov
add
addr16
sbb
fildl
out
test
or
jae
mov
jl
pop
mov
jg
arpl
xchg
cmpsl
imul
push
fcompl
icebp
adc
pop
dec
adc
fldl
mov
dec
scas
dec
lret
and
ja,pn
imul
mov
xchg
lods
in
sub
popa
xchg
call
leave
nop
fdivr
sub
in
or
jmp
or
pop
iret
mov
xchg
shll
test
loop
lods
sub
cmp
mov
ja
pop
jge
test
lea
ja
je
push
xchg
mov
leave
popf
xchg
orl
push
int
cmp
stc
mov
pop
lret
icebp
stos
fsub
or
xor
inc
xor
mov
fisubs
xor
mov
aad
shrb
mov
pop
pop
cwtl
sbb
or
mov
mov
mov
outsl
sarl
mov
jb
mov
int3
out
pop
int3
popa
pop
sbb
into
or
mov
movsl
icebp
sub
add
aad
push
push
inc
dec
sbb
lock
mulb
mov
and
sbb
cmp
mov
cmp
push
mov
mov
sub
lock
mov
repnz
sbb
in
inc
xchg
dec
out
insl
stc
out
mov
pop
push
sbbl
lahf
nop
insl
xchg
cmp
xchg
jmp
push
sahf
fmull
dec
push
ljmp
inc
je
xor
dec
addr16
aaa
mov
out
mov
lret
addl
cmp
mov
sbb
insl
and
pusha
jg
icebp
pop
out
or
movsb
jl
fdivp
repz
sub
cmpsb
sbb
daa
sbb
sub
enter
push
cwtl
jge
pop
pop
cli
xor
add
mov
out
aaa
adc
das
dec
cmc
int
dec
adc
addr16
cltd
sti
dec
mov
in
push
les
ds
jns
sti
loop
addb
push
aam
hlt
sbb
mov
push
xlat
leave
adc
movsb
aaa
test
iret
cmp
add
lods
aad
dec
scas
xchg
pop
cmp
roll
ljmp
stos
lcall
call
dec
out
cmpsb
cli
ret
pop
adc
sbb
jno
mov
lds
adc
pop
loope
movd
jp
ja
xor
dec
loop
sub
xor
cmp
jl
cmpsb
pop
and
sbb
fadds
inc
mov
jle
pop
data16
jnp
jb
test
pop
mov
ret
cmp
add
int
dec
inc
cmp
shl
icebp
pop
inc
cltd
and
xchg
call
and
aad
movsb
lods
jmp
call
cmp
sbb
jnp
mov
jl
jae
ffree
mov
sbb
inc
sbb
test
mov
sbb
stos
ss
lret
xchg
out
mov
xor
cmp
aam
lock
xchg
mov
jmp
mov
ss
inc
cltd
popf
lret
mov
xor
jbe
testb
movsb
mov
cmp
pop
xchg
ljmp
daa
incb
icebp
or
icebp
int
push
iret
mov
insb
cmc
jmp
je
scas
adc
add
inc
notb
mov
mov
dec
sbb
add
std
push
pop
inc
xchg
pop
fstps
hlt
stc
mov
cld
sbb
mov
pop
test
scas
mov
shlb
mov
dec
rcrb
pop
lret
xor
inc
mov
push
cmp
insl
hlt
mov
fdivp
dec
add
in
push
push
and
test
cmc
inc
xchg
testl
cwtl
icebp
add
xor
faddl
dec
cmpsb
pusha
jp
in
test
fmuls
jns
leave
adc
jb
or
mov
leave
inc
lods
int3
push
xor
in
outsl
movzwl
movsl
ret
adc
test
jae
inc
push
out
xchg
popa
add
mov
mov
fcoml
jmp
decb
push
fs
adc
mov
mov
pop
mov
xchg
inc
iret
ret
testb
jns
addl
in
je
mov
mov
mov
pop
xor
adc
lret
add
jle
test
out
fidivl
in
add
mov
xor
loop
inc
add
jg
js
and
out
push
and
mov
ljmp
jl
cs
mov
aam
xchg
lcall
or
inc
jmp
js
push
inc
mov
stc
mov
jg
std
lret
xchg
or
nop
loope
mov
cmpsb
out
xchg
xorb
mov
push
jbe
xchg
inc
adc
pop
inc
adc
push
xor
and
adc
pop
es
aas
nop
out
mov
jmp
sbb
pop
and
add
jp
stos
outsl
jg
loopne
ljmp
out
outsb
int3
cs
add
or
popf
out
xchg
push
jnp
push
add
out
push
adc
dec
sbb
jb
pop
jmp
int
shrb
add
out
sbb
mov
mov
inc
mov
dec
xor
pushw
jo
dec
js
cmp
pop
clc
imul
mov
add
or
lcall
inc
int
test
cwtl
pop
jl
xchg
ja
or
jno
push
xchg
sbbb
dec
aam
lcall
aas
adc
mov
out
xchg
jae
xchg
imul
mov
xlat
push
dec
int
xor
lods
jne
and
inc
dec
pop
and
or
push
add
aam
movl
sbb
mov
loop
das
mov
sahf
pop
pushf
pop
or
in
lcall
lds
sbb
mov
movsb
pop
subb
lds
fisubs
dec
adc
jl
mov
popa
lret
int3
fldl
repz
daa
aaa
adc
mov
sahf
imul
cmp
and
fs
adc
mov
pop
pop
jnp
dec
rol
adc
and
test
mov
sub
pop
or
push
aam
and
lcall
cli
pop
sub
mov
mov
repz
mov
stos
hlt
mov
bound
ss
jno
mov
pop
ss
mov
xor
rorb
data16
jae
loopne
movsb
xchg
loop
clc
aaa
jp
cmp
mov
sbb
lahf
push
or
jge
mov
mov
lea
std
xor
aas
ret
sbb
aaa
pop
out
cmp
rcrb
mov
dec
repnz
and
cmp
xlat
shlb
dec
iret
mov
aas
sub
loope
sub
cmpsl
dec
lea
icebp
lcall
jnp
dec
sub
es
cli
xor
xchg
jle
inc
xchg
cmp
sarb
cli
pop
dec
push
mov
cltd
int
cmp
jnp
and
hlt
pop
sti
xor
fs
jno
mov
aas
in
gs
mull
pop
mov
jb
insl
mov
sbb
sahf
lods
xor
movsl
jl
xor
adc
cmp
push
std
xchg
dec
adcl
cmp
mov
pop
lds
js
gs
sub
and
dec
or
lock
nop
jns
cmp
shl
in
push
jb
xor
cmpsb
jae
cmp
mov
xor
inc
push
cmp
dec
adc
pop
adc
loopne
int3
sub
das
sbb
ds
cmpb
lret
mov
ss
mov
test
mov
pop
imul
loope
ss
mov
jmp
sahf
fstpl
les
fnstsw
mov
pop
mov
adc
loope
stc
dec
cmc
adc
ret
mov
adc
sbb
xor
std
loope
out
pop
lock
cltd
push
mov
jecxz
jp
test
push
dec
sub
shr
adc
adc
ret
stc
flds
dec
data16
mov
cmp
test
xchg
incl
fstpt
mov
aad
push
cmp
inc
inc
dec
adc
inc
mov
insl
loop
mov
ja
mov
gs
clc
xor
mov
mov
pop
push
icebp
pop
ss
push
mov
lock
sbb
insl
pushf
sub
stc
pop
fwait
loope
inc
mov
jne
bound
pop
es
cmp
daa
iret
xlat
out
out
leave
enter
push
xor
adcb
in
push
adc
outsb
ds
loop
repnz
test
out
ficompl
lock
bound
xor
movsb
jmp
in
fisubs
insb
shrl
addr16
mov
stc
adc
cmpsl
cld
fdivr
sahf
cmp
pusha
or
mov
adc
outsb
lods
insb
stos
arpl
mov
jb
sub
adc
mov
xor
int3
xlat
and
dec
arpl
mov
xlat
jge
mov
fstpl
pop
jbe
mov
fsubl
mov
lea
popa
cmpsl
and
repnz
cmp
fldcw
inc
cmc
repnz
dec
fsub
jns
push
je
dec
arpl
mov
decb
sub
adc
cmc
lds
stos
mov
aad
sbb
outsb
rcll
pop
insb
xchg
xchg
leave
mov
lock
jae
dec
xchg
mov
fwait
inc
cmp
jbe
popa
pop
shll
mov
stos
xor
adc
adc
pop
jmp
mov
imul
ss
test
add
pavgw
lahf
incl
jne
stos
inc
jg
sahf
dec
mov
icebp
repnz
mov
lahf
rclb
mov
bswap
mov
jo
and
xor
push
in
sbb
pop
stos
mov
jno
loop
inc
mov
test
outsb
ret
jo
mov
shrl
mov
jns
add
adc
dec
jne
call
popa
fwait
ret
aaa
es
dec
jno
dec
leave
and
fisttps
jae
mov
add
cmpb
enter
jg
push
rcll
fildll
sub
std
sub
jge
jg
outsb
in
jns
fidivrl
and
inc
or
call
testb
in
paddusb
mov
pop
jns
repz
test
ds
pop
es
jge
adc
mov
negb
sbb
mov
pop
fmul
out
adc
lahf
inc
add
sub
pop
outsb
rclb
ret
aaa
push
pop
inc
fcoms
push
mov
mov
test
arpl
popf
xor
lods
dec
jge
push
dec
ljmp
call
and
loop
addr16
push
ljmp
and
jl
and
jae
fs
push
imul
xor
fldl
data16
push
or
scas
mov
fbld
data16
cld
xor
data16
lahf
ror
aas
lock
ret
cmp
sbb
test
xchg
dec
sub
ss
cwtl
andb
sub
cmpsl
pop
outsb
jmp
adc
xchg
sub
leave
popf
dec
shlb
cmp
add
notb
enter
pop
mov
mov
jbe
fmuls
sbb
insb
jecxz
pop
ja
aas
xchg
lods
iret
dec
or
pop
mov
mov
jmp
insb
mov
mov
out
mov
popl
inc
mull
outsb
dec
in
ret
mov
aad
sub
inc
scas
mov
inc
inc
mov
sbb
add
clc
cli
mov
push
ljmp
inc
mov
out
pop
fstps
sub
cmp
fadd
ds
xchg
out
rclb
lcall
cld
bound
xlat
test
cmpsl
mov
pop
xorb
xchg
nop
fbstp
icebp
ret
pop
mov
std
xor
addr16
inc
and
pop
xor
dec
sbb
in
sbb
adc
cmp
cli
out
lret
or
lods
shl
adc
nop
adc
inc
dec
sbb
popa
pop
cmp
push
cmp
rorb
aam
xchg
fmuls
sbb
out
lahf
in
mov
cmp
aas
add
cmpb
addb
and
cmp
gs
inc
pop
push
sbb
dec
stc
imul
shrb
repnz
adc
notl
xadd
or
lret
out
dec
sbb
sub
inc
push
int
arpl
jp
mov
in
cltd
jmp
mov
lods
gs
out
out
jle
add
inc
or
outsb
jl
rcrb
or
push
dec
push
sbb
data16
test
sar
sub
mov
add
pop
cmp
cmp
add
test
clc
push
xchg
stos
jmp
inc
lock
movsb
push
out
out
ret
xchg
jle
cmp
pop
mov
std
xor
jmp
addr16
hlt
xor
push
aam
pop
lods
dec
ja
inc
mov
jb
outsl
mov
fs
mov
mov
cmp
loope
xchg
ljmp
xchg
add
add
and
sahf
fucom
mov
loopne
dec
in
mov
mov
lcall
xchg
sbb
fmull
and
scas
stc
mov
xor
into
adc
fmul
pop
dec
jle
out
xor
rolb
sbb
pop
mov
mov
jne
in
jecxz
push
and
xor
vminps
or
xor
mov
dec
mull
leave
inc
shl
mov
lahf
and
inc
fmul
test
jae
xchg
rorb
add
hlt
jecxz
sbb
push
shll
cmpsb
xor
cltd
mov
jle
push
xor
sbb
aas
pop
out
mov
fwait
xchg
mov
hlt
test
xchg
sbb
jp
push
js
insb
inc
sub
or
push
inc
dec
push
stc
das
xchg
push
jnp
stc
les
jbe
mov
in
mov
sub
add
cmp
popa
add
test
jecxz
aam
les
mov
fdivp
or
les
repz
mov
sub
adc
adc
scas
fs
stc
fisubrs
and
xor
cmp
mov
add
or
push
lds
sub
mov
sahf
adc
imul
xor
push
xchg
je
dec
cwtl
push
mov
cmp
cmp
xchg
fstps
imul
sahf
aaa
mov
jno
dec
mov
sub
nop
aad
int
movsl
ss
lcall
aas
jge
cld
inc
clc
dec
notb
sbb
scas
or
pop
jne
imul
add
cwtl
jecxz
cmpsl
add
mov
nop
mov
adc
or
mov
out
sbb
das
and
lods
mov
mov
mov
adc
jne
or
sahf
mov
and
xor
icebp
ds
push
lahf
inc
outsb
jb
jb
es
xor
mov
shlb
setg
inc
mov
add
not
mov
xchg
ljmp
pop
cmp
fisttpll
rep
sub
aas
shrb
or
xor
aad
scas
ret
scas
dec
xchg
or
add
stc
negb
push
aaa
mov
add
push
pop
xor
jecxz
jl
in
xchg
inc
mov
add
subb
xor
lods
push
sub
outsl
fidivrl
push
int3
das
sbb
dec
xor
pop
ret
dec
addl
ja
popf
inc
cmp
xlat
push
lea
pushf
sbb
sbb
loope
and
subl
cmpsb
lock
push
xchg
in
bound
push
pop
rcl
fcomp
ljmp
ret
fxch
push
sub
lahf
mov
bound
dec
ljmp
mov
jb
sub
enter
adc
cmp
cltd
sahf
adc
pop
test
imul
jbe
cld
notl
stos
imul
pop
call
and
sti
xor
xchg
ss
outsl
xor
addb
jl
mov
loope
divb
leave
orb
inc
mov
mov
in
xor
iret
inc
mov
push
popf
or
stos
dec
pop
fnsave
iret
xor
jmp
sbb
xor
ss
and
jp
repnz
into
or
jnp
imul
insl
loope
fistpl
je
scas
sub
pop
inc
scas
iret
sbb
sbb
es
push
jne
sub
shl
jmp
sbb
sbb
mov
jmp
adcl
fsubrs
mov
mov
sbb
out
repnz
test
ret
mov
jbe
aas
mov
xchg
and
testb
mov
out
pop
cmp
jmp
sub
ja
fstl
mov
fs
rcr
test
pop
lret
cmp
push
jle,pt
js
pop
jecxz
sub
xor
xchg
iret
int
mov
sub
adc
scas
cmc
sub
daa
pop
pop
push
pop
ret
enter
push
sub
mov
mov
pop
mov
bound
mov
mov
js
cmovp
mov
sbb
or
adc
dec
ljmp
push
js
push
out
ljmp
test
fdivrs
pop
outsb
push
ror
repz
cli
mov
inc
cmpsb
mov
mov
ret
int
dec
add
icebp
cmp
test
lea
rcll
fcmovu
sbb
push
rolb
or
cwtl
mov
mov
pop
and
paddq
int3
sub
xor
aam
enter
add
cmp
xor
inc
test
arpl
dec
or
sub
stc
pop
fwait
adc
mov
clc
add
cli
fcomp
cmp
lret
add
ja
cmc
pusha
jl
mov
filds
fidivl
push
dec
cmpsb
ljmp
xor
pop
push
jo
dec
js,pn
pop
test
loop
enter
push
cld
xlat
add
or
movsb
or
and
test
xchg
adc
pop
or
addb
scas
add
pop
dec
sbb
cmp
fimuls
sbb
cmp
enter
ljmp
adc
cltd
cmp
cmp
mov
cwtl
test
ljmp
insl
ds
inc
pop
mov
dec
pop
hlt
or
adc
mov
repz
add
imul
or
mov
or
scas
lock
js
cwtl
adcb
jns
loopne
jle
bnd
jae
stos
gs
ret
rcll
push
jp
mov
rcr
pop
call
mov
mov
aaa
adc
mov
inc
fidivrl
and
xor
push
int
dec
in
jae
pop
jmp
mov
sbb
icebp
jne
inc
jne
push
cltd
subb
pop
stos
dec
fldt
hlt
mov
mov
adc
cmp
mov
cmp
pop
popf
cmp
mov
scas
fmuls
pop
mov
fdivp
mov
jmp
ret
xchg
push
shll
jecxz
fs
stos
jbe
movd
ljmp
repnz
repnz
imul
cmp
xchg
jge
mov
mov
adc
adc
test
inc
mov
cs
imul
dec
mov
dec
shll
insb
xlat
dec
lock
jmp
cmp
or
push
push
stc
lcall
sti
push
add
hlt
push
sub
dec
fdivrl
jmp
dec
xor
sbb
lods
add
xchg
enter
jp
jmp
pop
insb
mov
jge
mov
and
sub
inc
jns
lea
iret
jmp
jg
out
pop
movsb
aad
and
cmp
cmpsb
mov
push
loopne
and
es
mov
cmpb
fbstp
subb
jbe
insl
imul
add
repz
cs
sub
cmpsb
aam
mov
addb
enter
pop
sbb
test
lahf
dec
icebp
mov
orl
inc
xlat
icebp
dec
adcl
rcrb
mov
mov
jle
and
or
scas
pop
push
bnd
pop
arpl
push
push
mov
or
out
sub
test
xchg
dec
sbb
mov
rolb
pop
adc
mov
xor
and
or
cmp
jo
rolb
add
pop
cmpsl
inc
fildl
mov
scas
cmp
lds
fildl
or
dec
test
jo
jecxz
dec
sbb
bound
jecxz
ljmp
add
jge
sbb
bound
sub
rorl
jnp
in
sbb
mov
and
and
xchg
int
dec
int3
les
pop
jmp
scas
push
add
repnz
out
mov
push
jnp
mov
ja
cmp
arpl
or
sub
sahf
jns
sti
sub
jmp
sahf
mov
xchg
addr16
arpl
sub
push
loop
jmp
int3
jb
push
xchg
out
cld
jae
add
cmp
hlt
push
xchg
pop
mov
arpl
pushf
xchg
adc
sub
fadds
add
mov
fsubs
filds
mov
clc
dec
sahf
push
into
addb
gs
lahf
into
cwtl
icebp
lock
pop
mov
aaa
dec
or
rcr
ja
xchg
dec
jno
cmc
jp
sub
and
jb
int
cld
cltd
xor
sub
in
sbb
push
cwtl
pop
shlb
push
sub
jns
lahf
sti
push
xor
mov
add
and
mov
ljmp
push
pop
out
lock
adc
or
daa
xchg
sub
sbb
hlt
insl
pop
and
or
ret
pop
xchg
pop
shll
mov
xor
in
cmp
sbb
xor
outsb
sbb
fidivs
xchg
int
cmc
test
inc
pop
fsubs
jbe
icebp
shlb
xchg
or
movsl
fiadds
pop
shl
loop
imul
sbb
loop
loopne
aas
test
dec
inc
pop
ret
mov
cmp
repz
fwait
jmp
and
movsb
jae
mov
mov
xlat
cmp
add
cld
inc
xor
in
lock
push
cltd
mov
cmp
std
rorl
insb
orb
das
leave
bound
scas
dec
sbb
xchg
xor
pop
insl
and
jmp
rcr
add
out
mov
add
add
or
cmp
sbb
push
incb
js
adc
fisubl
sahf
outsl
mov
test
mov
pop
bnd
std
lods
nop
mov
aas
aas
xchg
mov
fldt
rcrl
imul
aad
cmpps
in
push
ja
jne
jmp
add
cmp
and
fisubl
cmp
cmp
push
mov
cmpb
mov
out
sar
adc
jg
jno
cli
dec
ds
push
std
cmp
mov
adc
jmp
adc
mov
jb
xchg
dec
clc
pushf
fwait
lods
inc
rorb
inc
jg
daa
pop
mov
fisubl
aaa
and
adcb
in
aam
je
add
repnz
outsb
sub
dec
sub
jne
jge
xchg
adc
mov
insl
int3
jg
jnp
lods
pop
add
pusha
push
xor
ss
cmp
mov
popf
jns
add
jp
out
test
xor
sub
aaa
popf
jae
xchg
ss
or
fldl
xchg
jae
add
fs
cli
mov
xchg
mov
sub
int
jbe
mov
jg
cmpsb
aaa
inc
ljmp
push
push
mov
add
test
shll
data16
mov
xor
mov
push
xchg
arpl
cmpsl
sub
mov
sub
adcl
imul
cmp
outsl
jp
cltd
ljmp
dec
loope
push
push
mov
rolb
imul
cs
aam
sub
jecxz
xor
aaa
or
add
pop
mov
gs
in
es
pushf
bswap
out
push
jecxz
jle
popf
lock
add
push
push
call
cmc
fdivp
test
sub
mov
mov
xchg
daa
mov
inc
inc
cmp
mov
mov
das
sub
push
add
iret
in
out
xor
stc
shlb
jns
push
stos
fwait
je
into
std
stos
mov
pop
adc
call
cmpsb
mov
push
xor
mov
jne
and
test
dec
cmpb
push
lock
aas
dec
jl
cmp
xchg
push
jl
mov
jae
iret
push
add
xor
dec
xor
pop
insb
aaa
jecxz
bound
shlb
xor
jns
add
test
sbb
addr16
mov
jecxz
jp
add
xor
mov
aam
sbb
dec
dec
daa
aas
popf
mov
movsb
gs
pop
or
sub
in
mov
inc
xor
or
push
insl
jae
add
pop
fbstp
xchg
or
or
mov
daa
xlat
das
test
int3
xchg
or
pop
xchg
insl
mov
aas
push
push
pop
aaa
mov
push
lahf
and
lret
adc
ret
hlt
ds
bound
hlt
pop
cmp
mov
aaa
roll
popf
test
fiaddl
mov
xchg
adc
dec
xor
cmpsb
xlat
push
xchg
mov
out
and
xchg
aas
js
fidivrl
sbb
xor
repnz
in
sahf
pop
or
scas
ds
mov
popf
mov
add
mov
fisttpll
mov
jge
inc
inc
clc
inc
push
mov
ljmp
xor
cmp
and
fisubrl
mov
arpl
adcb
xchg
out
pop
shlb
push
fidivs
je
adc
into
dec
add
aad
pop
push
pop
or
push
insl
mov
push
xchg
adc
sub
pop
fistps
fistps
lods
add
lcall
sub
iret
push
andb
movb
rolb
pusha
xchg
lods
loope
pop
adc
mov
push
lods
and
pop
and
sub
jecxz
jge
and
fisubl
xchg
data16
mov
fidivl
test
lea
inc
lcall
push
mov
add
test
xlat
pop
imul
mov
jb
cmc
outsb
push
or
mov
ss
aad
inc
ja
call
fiadds
sbb
xchg
insl
cmp
daa
inc
mov
scas
insb
inc
bound
pop
sbb
shll
js
fdivl
in
dec
out
mov
sahf
mov
lret
mov
lret
lods
jnp
dec
rol
mov
je
ficompl
sub
mov
out
loop
cmp
dec
mov
mov
int
xor
inc
adc
popa
call
xor
loopne
js
mov
xor
out
mov
mov
imul
jb
shl
add
jmp
popa
leave
outsl
add
shl
xor
jl
rorb
or
das
and
cmp
sarl
inc
icebp
add
xor
cmpsb
cld
lahf
mov
les
pop
inc
dec
jno
add
xchg
mov
dec
mov
push
cltd
inc
ja
daa
add
xchg
imull
or
and
fwait
dec
dec
in
xchg
mov
imul
mov
inc
push
jl
mov
scas
test
out
sti
in
mov
lea
shll
jns
test
jne
fcmovb
scas
mov
pop
je
test
jb
out
xchg
fwait
dec
xor
or
mov
inc
sub
push
lods
xchg
cmovne
inc
pushf
sub
xchg
ret
ljmp
mov
bound
inc
lods
xor
popf
sub
jp
mov
pushf
addr16
xlat
insb
das
out
add
add
int3
popa
ret
out
push
stos
adc
sub
stos
ds
nop
int3
lods
pushf
push
cmp
aam
notl
push
xchg
cmp
push
pop
movsl
push
loope
sbb
inc
adc
jo
lock
sbb
inc
pop
mov
xchg
sbb
mov
and
pop
push
inc
int
lods
sbb
dec
out
xchg
lock
sub
jo
cmp
jne
xchg
mov
sbb
sbb
lods
ret
stos
dec
mov
jmp
mov
int3
pop
mov
sbb
push
mulb
enter
dec
scas
push
inc
dec
jle
push
les
add
dec
pop
test
fwait
and
jnp
xor
lret
and
insb
adc
lock
push
frstor
scas
mov
lret
sub
xchg
cmp
xor
in
leave
cmpsl
loope
inc
xchg
adc
push
repz
aam
jg
jns
or
les
fwait
adc
dec
fimuls
adc
aad
test
enter
lods
cmpsl
mov
pop
in
xchg
icebp
dec
pop
stos
mov
xor
cmp
xlat
sbb
ret
std
jbe
and
mov
decl
icebp
inc
fcomps
sahf
outsl
subb
pop
popa
mov
ret
lock
popf
stos
dec
stos
xchg
out
into
rcr
dec
lock
repz
nop
xchg
in
jno
mov
xor
repz
cmp
mov
rclb
jmp
inc
cmp
sti
hlt
add
int3
fwait
ljmp
movsb
aaa
jge
mov
pop
outsb
scas
xor
adc
pop
sbb
mov
and
stos
or
adc
inc
pusha
sbb
lods
mov
adc
fs
jbe
aam
adc
push
dec
or
je
leave
add
push
ja
dec
mov
mov
xor
mov
jns
add
push
call
ss
pop
jg
jg
adc
sbb
in
test
mov
test
ja
out
push
and
into
mov
dec
push
leave
add
jle
mov
lods
movsl
lret
push
jge
push
and
fwait
lahf
subb
jne
jno
aas
repnz
mov
shll
fmuls
outsl
or
dec
and
jo
popa
cmpb
or
std
in
in
dec
roll
bound
lea
ja
sbb
adc
rcr
out
scas
stos
addr16
dec
sarl
icebp
mov
or
aas
les
or
adcb
pushw
xchg
sahf
imul
int
rolb
loope
int3
ret
test
push
popa
cltd
jno
ljmp
and
or
pop
mov
sbb
sbb
les
mov
jo
adc
jbe
out
pop
pop
adc
fistl
sti
out
rclb
jp
mov
int3
push
xchg
xchg
in
mov
test
movsb
push
gs
xor
adc
inc
lea
xchg
jnp
pop
or
ror
je
or
lods
iret
cli
mov
arpl
mov
jge
mov
mov
add
pop
mov
imul
mov
push
mov
test
dec
pop
jmp
aaa
into
sub
add
mov
jle
dec
jmp
push
adc
dec
inc
sbb
sub
repz
je
and
std
push
imul
sbb
mov
fwait
out
push
mov
and
int
fcomps
popa
pop
sub
dec
js
pop
jo
pop
mov
jp
sbb
add
jb
xchg
mov
dec
movsb
jnp
repz
sbb
jmp
fimull
ljmp
fwait
movsb
inc
jo
inc
jecxz
sarb
decb
mov
cmp
xchg
and
movsl
stos
or
xchg
sub
add
lds
mov
insl
push
pop
jbe
lret
int3
repz
leave
popa
imul
cmp
fwait
into
enter
ficoml
pop
out
js
arpl
add
inc
push
push
adc
xchg
push
loopne
jp
lds
lcall
xchg
sbb
add
or
mov
hlt
inc
mov
movsl
shrl
dec
bswap
or
test
andl
and
das
incb
mov
jmp
lret
push
je
out
cli
adc
xchg
add
lods
inc
cmp
sbb
xor
clc
mov
cld
jns
mov
sbb
mov
mov
ror
dec
sub
subb
xor
jecxz
pop
cld
pop
mov
xor
movsl
pop
outsl
pop
cmp
out
nop
cmpb
jle
iret
pop
adc
pop
dec
jmp
aad
mov
lahf
scas
in
push
jnp
sub
xchg
mov
and
xchg
data16
rol
dec
jo
scas
mov
dec
pop
mov
bound
cwtl
add
ss
push
lahf
cmpsb
mov
daa
xchg
loop
pop
xchg
jb
push
or
das
rol
sub
repz
fisubl
dec
and
sub
mov
pusha
mov
dec
push
in
push
popf
addb
or
fbstp
mov
sbb
inc
cmp
xor
push
lods
push
call
js
and
ss
fwait
add
add
rcrl
jl
jmp
clc
dec
push
in
sub
je
scas
or
push
lret
aaa
out
inc
cmp
or
sahf
clc
or
xorb
pop
xchg
xor
mov
scas
imul
push
ja
mov
jmp
divb
adc
sub
lret
imul
pop
enter
inc
add
mov
add
aad
ljmp
movsb
or
in
sbb
loop
fcmovne
adc
dec
xlat
cmp
adc
test
lock
add
and
mov
scas
ds
scas
jb
push
lahf
sbb
in
test
repz
xchg
mov
mov
cli
inc
stc
adc
mov
add
ljmp
out
xor
mov
sbb
bnd
jnp
pop
and
aaa
cli
jle
push
dec
mov
dec
xchg
jp
arpl
add
and
cmp
cs
mov
jl
jmp
cmp
push
movsb
push
xchg
push
add
inc
xchg
roll
jge
cs
adc
inc
xlat
sub
ss
pop
scas
cmp
cmp
repz
jl
fwait
mov
and
adc
push
cmp
push
jl
fs
cmp
jp
out
dec
cmp
cmp
add
cmp
stos
daa
fs
add
outsl
push
inc
push
add
mov
and
repnz
cmp
pop
scas
scas
popa
testb
enter
popa
push
ja
mov
shll
popa
shll
daa
es
and
jp
cli
cmp
pop
pop
add
out
aaa
jo
sarl
enter
or
loope
in
out
or
sarb
aas
and
sbb
loopne
push
lret
xlat
xor
push
loope
mov
daa
push
data16
push
add
pop
fmull
lock
fiaddl
cwtl
mov
jmp
adc
insl
pop
clc
out
rcrl
jo
lods
mov
push
das
push
sub
cmp
out
jbe
mov
stos
movsl
xor
stos
addr16
xor
pop
cmp
scas
sti
loop
and
movsb
aam
sub
push
pop
lock
clc
sbb
xchg
or
sub
mov
fmul
out
mov
in
je
daa
cmp
aam
mov
scas
out
cmp
cmp
push
fnstenv
adc
fisubrl
pop
mov
xchg
pop
icebp
cld
mov
leave
outsl
roll
pop
int3
shll
roll
inc
inc
mov
arpl
fsubs
and
movsl
xor
cmc
cmp
mov
sbb
aaa
jo
insb
dec
mov
ds
push
scas
out
mov
and
sbb
lods
in
jae
pop
mov
mov
lret
je
mov
in
cmp
bound
out
bound
call
jb
mov
test
jo
xchg
dec
or
sbb
inc
clc
int
out
fcmovnb
mov
or
fistpl
data16
mov
push
xchg
cwtl
les
pop
sbb
mov
leave
push
fld
push
pop
adc
adc
adcl
cmpsb
scas
or
xchg
dec
fwait
lahf
sbb
fsubrl
fst
mov
jle
ficoms
mov
rcl
add
push
repnz
and
pop
push
lea
adc
orl
call
inc
icebp
push
cmp
and
inc
dec
loope
adcb
ret
leave
inc
adc
in
into
int
dec
shrb
pop
stos
bound
mov
mov
stos
stos
jo
pop
shr
xchg
cmp
lods
mov
imul
arpl
pop
gs
pop
push
scas
flds
dec
stos
leave
and
push
in
lock
sub
inc
enter
mov
aaa
je
mov
and
push
xchg
in
movsb
xor
mov
scas
dec
cmpsb
jo
cmp
or
jmp
loopne
ss
mov
cmp
scas
inc
push
lods
and
mov
add
jae
sub
cmp
mov
cmp
or
xchg
in
or
push
adc
mov
into
imul
lods
hlt
sbb
mov
dec
out
pop
lds
jle
mov
imul
inc
in
gs
fnsetpm(287
sub
push
fimuls
std
push
out
out
std
mov
jmp
cmp
test
lock
in
data16
dec
js
fbld
sub
pop
pushf
inc
fldl
lods
cmp
push
push
into
dec
mov
pop
loop
mov
mov
xchg
subb
jbe
sbb
mov
outsb
repnz
inc
push
mov
lock
rcrl
inc
jl
mov
xchg
ja
loop
stc
sbb
push
and
xchg
jg
notl
mov
mov
or
sti
mov
sbb
pop
xlat
jp
cmp
adc
fisttpl
movsl
test
mov
rol
push
outsb
jge
lret
pop
sarb
mov
testb
mov
loopne
mov
hlt
xchg
in
sub
mov
inc
sbb
push
fistl
es
sahf
pushfw
movsb
sub
cli
in
iret
test
mov
js
shrl
std
repnz
pop
nop
enter
insb
add
stos
ja
cs
sub
jl
icebp
andl
xchg
int
adc
stos
popf
stc
fcomps
and
xor
mov
push
dec
xor
add
sub
sub
out
and
xor
test
push
aad
outsl
bound
mov
jo
jle
jnp
and
ja
lods
jg
inc
sbb
inc
fwait
and
lods
outsb
lds
imulb
int
aad
jns
stos
cmp
push
jp
cmpb
imul
cli
jae
mov
cmc
or
mov
sbb
mov
cld
neg
fsts
mov
sbb
sub
sbb
and
mov
fldl
xchg
inc
pop
jmp
and
xchg
mov
gs
add
js
cmc
je
push
enter
mov
inc
jl
popf
pop
mov
mov
mov
repz
fisubrs
daa
rcrb
js
add
pop
test
lret
shlb
xchg
jb
mov
xchg
jo
inc
int3
lret
fisubrs
pop
jae
dec
or
sub
jo
insb
mov
mov
data16
test
sbb
andl
addb
lods
pop
adc
or
cmpb
arpl
xchg
cli
stos
add
adc
and
arpl
mov
jle
out
jg
xor
movsb
into
into
fcmovnb
mov
mov
in
push
test
fwait
hlt
sbb
fcmovbe
mov
es
pushfw
mov
aaa
jb
or
mov
cmp
adc
fmuls
mov
mov
jnp
rorb
mov
popa
loopne
fisttpl
out
or
push
ffree
xchg
mov
mov
adc
fstpt
lcall
scas
daa
lods
pushf
rclb
adc
in
adc
bound
dec
jg
add
into
data16
sub
push
fsin
loopne
add
mov
xchg
daa
and
pop
out
add
cmpb
xlat
pop
xor
insb
lock
inc
push
xor
test
dec
in
mov
ljmp
or
loopne
cmpsl
mov
fistl
outsl
dec
sub
push
xor
loope
inc
cwtl
jo
pop
aas
rolb
sub
adc
lds
leave
cwtl
pop
je
and
subps
std
or
pop
mov
cmpl
fimuls
gs
shlb
movsb
movsl
testl
lahf
pusha
lods
adc
or
mov
pop
xchg
dec
push
arpl
imul
fs
mov
mov
notb
addr16
or
loope
pop
cmp
jno
imul
xor
roll
adc
mov
xor
mov
out
sarl
andl
xchg
lds
hlt
jp
cmp
sbbl
xchg
je
dec
lret
cwtl
sbb
imul
and
icebp
xchg
shlb
rcrb
add
add
xchg
xor
fs
ljmp
mov
inc
inc
xchg
cmpsl
es
and
adc
xchg
inc
inc
les
inc
mov
mov
dec
push
loope
push
lods
stos
cmp
rolb
mov
sub
dec
mov
xlat
ljmp
rol
dec
xor
push
popf
outsl
add
jbe
mov
cmp
loop
lock
in
mov
push
mov
add
mov
mov
fsubrs
popf
add
imul
sbb
xor
test
sbb
pop
mov
sub
mov
shrl
es
xchg
mov
xchg
ret
cmp
add
pop
push
sub
sub
int
das
mov
sub
jno
aas
mov
mov
cltd
mov
jnp
sub
adc
jmp
and
adc
inc
lock
mov
imul
loope
or
dec
xor
mov
movsb
arpl
sbbb
lds
repz
rol
pop
cld
sub
cmp
js
mov
inc
adc
mov
sub
cmp
sub
jecxz
pop
pop
lcall
adc
sbb
sbb
cmp
cmpsl
mov
mov
data16
daa
arpl
pop
push
sbb
shll
xor
ljmp
lret
cwtl
inc
push
xchg
adc
mov
fidivl
jg
pop
das
fsubrs
pushf
insb
ret
jae
xchg
jae
dec
in
add
mov
jmp
mulb
icebp
shl
cmpsb
repnz
sub
fwait
es
sbb
push
push
add
sub
pushf
testl
in
or
mov
sub
or
lret
pop
inc
ss
fldl
and
or
shrl
sbb
and
leave
popf
rcrb
fdivr
jns
ja
add
adc
push
cmp
mov
xchg
lcall
add
push
adc
fcomps
les
in
insl
lret
bound
jmp
inc
jle
jl
rol
js
fistps
lock
lods
je
jg
pop
aas
jecxz
xor
in
mov
rcl
mov
xor
pushf
sub
sarl
add
enter
lret
push
inc
stc
clc
inc
pop
rcrb
insl
das
dec
dec
lahf
adc
xchg
mov
gs
jmp
xor
xor
daa
jbe
data16
lock
jg
cmp
sub
mov
fidivrs
mov
mov
data16
mov
xor
or
aas
or
orl
sub
push
sub
sub
lret
dec
bnd
xchg
lds
es
or
xchg
push
dec
mov
out
ficompl
inc
movl
clc
roll
jp
test
pushf
pushl
repnz
cmp
aad
pushf
pop
adc
mov
cwtl
mov
xchg
lcall
cmp
inc
dec
lods
insl
aaa
dec
mov
insl
pop
dec
sub
repnz
cld
dec
je
cmpsl
pusha
mov
sub
fadds
push
in
ret
je
jo
out
and
or
mov
out
or
jbe,pt
stos
insl
cmp
in
stos
inc
pop
xchg
stos
add
insb
call
push
out
stos
inc
lods
lods
adc
or
mov
cmpsl
cld
and
jmp
add
std
jp
movsl
out
and
das
jmp
mov
pop
xchg
adc
dec
adc
xor
out
or
lcall
adc
mov
fwait
push
insb
push
daa
ds
mov
adc
movsl
mov
pop
imul
add
fstl
imul
push
scas
push
ret
ret
sbb
clc
jns
push
pop
adc
sbb
push
fists
mov
cwtl
outsb
cwtl
and
insb
test
pushf
pop
lds
dec
nop
adc
mov
popa
add
mov
aad
pop
fsubrs
inc
jnp
sub
sti
icebp
aas
decl
imul
or
movsl
xlat
into
lock
pushf
shll
int3
xor
add
jbe
jne
add
into
movsb
inc
inc
sbbl
dec
fsubp
push
faddl
push
incl
or
mov
dec
rcrl
jge
sti
mov
jg
icebp
mov
scas
imul
pop
inc
jp
mov
daa
idivl
pop
adc
test
imull
jno
mov
jnp
xchg
shrb
push
mov
jo
sub
xor
bound
popf
inc
dec
mov
xor
lcall
or
out
cmc
dec
imul
aam
xchg
cld
test
inc
out
sbb
fwait
and
cltd
mov
fstenv
aad
popf
rcrl
lret
mov
adc
es
jno
imul
dec
vpsrlw
shrl
mov
cmp
xchg
aam
pop
pushf
stos
hlt
js
push
fldt
pop
pop
lods
out
or
or
mov
sbb
fists
int3
repnz
pusha
out
jl
mov
sbb
push
sbb
jns
dec
sbb
xchg
dec
jne
mov
clc
jb
testb
mov
inc
cs
iret
sub
jno
mov
dec
das
fs
sub
sbb
inc
movsl
xor
mov
push
clc
jle
ja
mov
ds
aas
movsb
push
xor
and
cvtps2pd
daa
leave
ret
sbb
notb
icebp
iret
jno
daa
and
daa
test
es
mov
cmp
dec
push
cmpb
outsl
mov
or
rcl
outsb
stos
jmp
sbb
cmp
das
enter
addr16
out
clc
loop
std
dec
cmp
cmpsb
add
call
mov
add
adc
mov
divb
aam
mov
outsl
and
mov
dec
sub
xorb
pop
adc
xchg
cmc
fwait
mov
jno
lock
cmp
gs
mov
gs
insl
sub
js
imul
cwtl
popf
cmp
mov
test
lahf
add
bound
cmp
call
ret
imull
push
push
adc
leave
sbb
aaa
jp
pop
cmp
jge
xor
jg
push
xchg
inc
mov
jno
js
fdivs
lods
xchg
cmp
push
call
and
shrl
sbb
and
mov
jb
or
sti
clc
inc
pop
lret
xlat
pop
das
or
shl
ffreep
adc
enter
fndisi(8087
dec
icebp
inc
int3
mul
push
add
lcall
or
daa
addl
mov
cli
push
mov
movsb
int
push
int
xlat
cmpl
repz
setae
add
int3
pop
cmp
mov
xchg
cwtl
cmp
insl
xchg
ja
stos
imul
dec
popf
mov
dec
mov
mov
dec
fstpl
pop
or
shr
inc
lods
ret
adc
mov
imul
lods
add
pop
push
jl
jp
pmaxsw
sarb
lcall
add
jns
add
jnp
divl
mov
loopne
sti
loopne
rcl
xor
cmp
xchg
add
mov
inc
mov
xchg
mov
in
loope
in
insb
sbb
loopne
xchg
fs
dec
and
adc
enter
xchg
lock
scas
stc
push
mov
jmp
daa
call
testl
sbb
aad
and
jne
cmpsl
arpl
fwait
add
vpsubsb
mov
adc
jecxz
fucomip
sbb
lret
cmp
inc
sbb
xor
test
out
cmc
xchg
or
aad
ret
cltd
xchg
inc
sbb
pop
ftst
loope
xor
loopne
or
mov
add
dec
push
std
jb
pop
and
xchg
scas
stos
or
test
jae
add
cmp
aas
dec
aaa
mov
jg
test
insb
mov
lea
outsb
xchg
pop
sbb
pop
and
test
jns
ds
test
iret
mov
ljmp
inc
sarl
faddp
mov
mov
mov
cmp
xchg
xchg
mov
lods
das
mov
and
repnz
rcrl
jae
mov
test
sbb
fisttpl
mov
adc
push
cmpsl
jnp
push
ds
stos
push
and
iret
mov
or
js
mov
push
in
fmulp
jbe
dec
xor
sarb
test
add
dec
sbb
sbb
stc
push
aam
notb
xchg
call
inc
xor
in
int
mov
dec
sbb
mov
outsb
mov
pop
mov
jle
outsl
lock
or
or
or
fmull
or
daa
loop
cmp
fisubs
sti
or
mov
dec
test
jecxz
jmp
int3
push
mov
pop
mov
dec
rolb
into
pop
adc
cmp
dec
pop
std
sbb
sub
outsl
mov
cli
sub
test
jge
or
adc
push
and
ja
sub
ljmp
ljmp
leave
fst
inc
jae
inc
xor
dec
xchg
fbstp
ljmp
ja
aas
out
or
rorl
mov
in
mov
nop
scas
cld
inc
push
lds
into
or
les
push
cltd
and
dec
mov
and
leave
fistl
jg
or
jge
xchg
sub
push
or
ret
dec
sbb
fstpl
push
nop
fs
and
lcall
mov
nop
pop
std
iret
xor
sbb
enter
ss
xor
cmp
out
cmpsl
jmp
jp
mov
pop
bound
pop
mov
shll
and
mov
adc
mov
cli
aad
jmp
imul
mov
sub
sbb
push
pop
mov
push
jo
xchg
sti
xrelease
jmp
pusha
in
sarb
mov
fistpl
in
movsl
loope
icebp
sub
pop
jmp
push
movb
mov
and
cmp
outsb
aam
shll
movntq
push
lock
sbb
cld
cmpsb
mov
jo
push
es
std
adc
lock
iret
or
lods
or
call
movsl
cld
out
push
jge
mov
stos
mov
bound
push
xor
in
test
lea
cli
and
dec
adc
push
adc
cmp
cmp
or
fcompl
push
pop
insb
sbb
jns
xor
icebp
sti
pop
test
xchg
mov
dec
push
add
out
test
dec
push
int
inc
insl
lds
and
dec
hlt
jle
mov
nop
pushaw
mov
or
inc
xchg
adc
adc
pop
fwait
cwtl
sbb
dec
push
xor
xor
xchg
std
jns
mov
movsb
mov
addr16
xor
popf
pusha
dec
push
dec
test
and
iret
push
and
repnz
inc
jp
add
lcall
pop
popf
xchg
lock
daa
or
push
mov
movsb
and
inc
fcoml
int3
and
and
data16
sbb
repz
les
cmp
jl
jo
into
stos
movsl
loope
insl
mov
sbb
aad
dec
xchg
jle
or
jmp
and
hlt
fucom
aad
sbb
cmp
mov
dec
aad
or
in
mov
or
cli
inc
jp
insl
pop
scas
shrb
in
das
pop
sub
jnp
pusha
sbb
adc
dec
loopne
pop
jge
xchg
je
popa
xchg
ss
sbb
bound
cs
sub
xor
add
mov
mov
fsubrl
pop
daa
lea
or
in
insb
es
in
push
dec
int
push
add
mov
repz
rorl
push
push
jo
sar
loop
push
pop
out
in
loope
sbb
icebp
fwait
dec
inc
icebp
movsb
inc
xor
mov
jb
xor
push
leave
scas
and
push
mov
push
and
mov
sub
jbe
rorl
inc
inc
push
dec
cmp
std
nop
movsb
jno
or
xor
add
movsl
mov
push
mov
lret
dec
fwait
dec
bound
sbb
call
jmp
xor
xchg
insb
shrb
xor
lahf
scas
lcall
lret
int
or
test
cmpsb
lock
aam
push
inc
jmp
xchg
movl
dec
ljmp
loop
repnz
and
ja
fnstenv
lea
cmp
mov
daa
sets
data16
pop
or
mov
inc
sahf
and
and
mov
fistps
hlt
or
nop
add
mov
cmpsl
mov
mov
push
test
ficompl
xor
leave
sub
add
popf
loop
dec
push
loope
lcall
clc
pop
xor
inc
inc
push
repnz
test
add
jmp
adc
nop
cmp
test
imul
push
idivl
mov
lods
inc
sbb
mov
xor
sbb
cmpsb
jmp
lds
sbb
xor
sub
lods
sub
xor
dec
int3
mov
test
in
xor
jmp
mov
inc
xchg
pop
scas
idiv
fs
imul
arpl
mov
insl
jns
flds
outsb
mov
mov
shlb
mov
and
testl
cmpsb
and
cmp
push
cmp
xor
lcall
stos
shlb
scas
pop
movsd
add
jb
arpl
dec
xlat
out
adcb
ljmp
inc
sbb
xchg
cld
imul
unpcklps
std
sbb
addr16
push
xchg
imul
rcrl
cmp
sub
fadd
js
repnz
sub
mov
std
push
xchg
lret
decb
dec
cwtl
or
rolb
mov
rolb
sbbb
cmp
arpl
xchg
sti
in
cmp
pop
ret
xor
enter
add
push
or
pop
jl
cmpsb
hlt
cmp
mov
hlt
rcrb
push
xchg
lds
mov
push
sbb
mov
cs
jl
test
cmp
bound
aaa
lcall
scas
add
imul
sub
jecxz
push
movsb
arpl
lahf
or
insl
stc
into
pop
pop
pop
and
addr16
lods
out
popf
push
add
cmpb
mov
mov
std
leave
push
adc
ror
pop
cmpsb
nop
out
aad
clc
dec
lcall
xchg
sub
and
loope
in
mov
lcall
addl
fs
or
add
jbe
int
dec
xchg
lret
daa
shrl
leave
push
es
jmp
stos
clc
icebp
dec
pop
add
lods
xor
pushf
jne
xchg
sub
ficompl
sbb
mov
outsl
sarl
shr
loope
inc
bound
mov
out
ljmp
xor
rcl
mov
push
sbb
outsl
fwait
movsb
in
ja
adcl
imul
fcmovnb
je
sahf
ffree
ljmp
sub
loopne
xor
sahf
rcrb
xor
mov
sahf
or
lcall
fstp
imul
xchg
test
in
inc
sbb
xor
mov
cmp
loopne
adc
sbb
pop
and
cmp
stos
sti
pop
out
xor
add
inc
sbb
jmp
mov
or
mov
shrl
pushf
xchg
fisubl
dec
cli
mov
sbb
in
mov
es
add
mov
sub
mov
out
sub
pusha
xchg
dec
cmp
mov
pushf
inc
aad
and
das
decl
nop
xchg
sti
mov
sbb
mov
ljmp
or
or
fwait
jl
nop
and
sbb
mov
ja
nop
cli
cld
clc
out
cltd
sub
sub
xchg
int3
mov
sbb
rolb
or
jmp
ljmp
ffreep
add
mov
nop
mov
out
xor
mov
out
shr
mov
inc
or
test
mov
loopne
xor
fnstenv
mov
pop
ja
xor
xor
xor
xchg
ja
cmpsl
add
add
dec
enter
pop
dec
push
into
lcall
cmp
repnz
cmp
sbb
ja
shrb
and
int3
push
gs
dec
aam
sub
push
fldcw
jl
sub
dec
push
cmp
dec
adc
adc
xchg
pop
push
push
outsb
jle
cmp
push
sti
out
out
int3
addb
mov
jp
ja
inc
dec
mov
cld
test
addr16
sub
repz
jno
stos
je
fcomi
imul
and
mov
sub
addr16
adc
out
and
imul
cli
cmp
cmpsb
in
push
pop
cmp
test
sti
out
aaa
faddl
and
sbb
sub
lods
repnz
and
shrb
sti
pop
pop
call
fsubrs
sbb
dec
xchg
or
push
clc
lods
push
add
mov
lret
dec
lods
xchg
xchg
stos
xorb
dec
push
nop
insb
or
mov
lret
leave
fsubrs
sub
in
mov
stos
dec
mov
pop
sbb
jae
push
mov
insl
pop
int3
jg
mov
and
out
imul
cld
dec
iret
adc
cmc
xor
xchg
fdivrl
imul
movsb
mov
insl
inc
popf
xchg
mov
pop
sbb
dec
cmp
call
lods
mov
adc
cmp
sbb
jg
and
pushf
lret
fdivrs
xor
imul
in
xchg
mov
ja
sub
cld
mov
icebp
mov
pushl
lock
jecxz
mov
mov
or
mov
sub
mov
xchg
enter
or
dec
jae
out
inc
xchg
add
mov
test
sub
xchg
sub
and
and
xor
pop
inc
add
aad
cmp
jp
push
movsb
cmpsb
in
lret
xor
shlb
inc
push
scas
xchg
pop
inc
sbb
out
aas
pop
add
sbb
bound
and
aam
lret
xor
mov
jno
push
or
dec
sub
insl
sub
mov
xchg
aam
adc
js
cltd
xor
mov
pop
sti
mov
jle
lods
js
pop
gs
outsb
or
adc
dec
sbb
push
out
mov
add
xor
sbb
repnz
in
and
fnstcw
sbb
add
sti
lock
pop
fisttps
fstpt
mov
or
xor
push
push
dec
mov
pop
pusha
shll
add
mov
mov
xlat
sti
sbb
sti
flds
cmp
cmp
call
or
int3
sub
mov
dec
shlb
fs
jg
push
loope
scas
testb
data16
sub
loope
popf
add
fcoms
add
sbb
out
push
dec
stos
push
sbb
mov
fisubrs
loopne
test
fcompl
mov
pop
pusha
or
daa
mov
lcall
repz
cmp
jmp
in
pop
xlat
lds
inc
insb
mov
mov
in
push
or
shl
test
in
adc
mov
sbb
mov
lahf
je
mov
xchg
adc
imul
dec
mov
pop
lahf
stos
dec
in
adc
movsl
daa
push
movl
pop
pop
sbb
push
push
sarb
dec
dec
fsubs
jns
mov
add
jge
imul
std
lcall
decl
adc
push
scas
or
mov
out
test
pop
rcrb
fdivl
sqrtps
ret
imul
push
add
push
out
jmp
imul
jns
sahf
scas
fnstcw
mov
cmp
xor
dec
mov
popf
inc
mov
fmul
pop
and
xchg
inc
outsb
into
mov
sahf
or
imul
xor
dec
dec
dec
movsb
xchg
xchg
pop
or
jae
xchg
push
adc
into
test
ljmp
lahf
sub
add
cmc
test
and
cltd
jecxz
jmp
out
out
arpl
jp
adc
push
out
dec
imul
popf
pop
pop
addr16
daa
add
jae
shll
sub
xchg
cmpsl
xor
gs
fdivrs
mov
jmp
shll
fsts
jne
icebp
mov
cmpsb
inc
dec
or
sbb
push
cmp
and
push
div
lods
js
shrl
adc
mov
lock
loope
mov
andb
and
and
scas
push
cli
gs
dec
mov
addr16
push
popf
loop
mov
pop
jo
dec
movsb
lods
daa
sbb
movsl
mov
divl
mov
mov
or
mov
and
insl
mov
mov
mov
mov
sbb
xchg
call
rcl
inc
jbe
aad
repz
lea
and
clc
or
mov
sub
aas
fists
aaa
mov
std
sub
fstps
adc
lods
inc
push
ds
sub
in
cmp
adc
xor
test
leave
insb
jecxz
push
fnstcw
xor
into
popa
iret
cmp
add
dec
sub
data16
psrad
or
pop
notl
inc
hlt
sub
lods
stc
xchg
pop
hlt
push
mov
jmp
pusha
addr16
sub
adc
mov
dec
push
jne
push
imul
dec
stc
jo
mov
xorl
ss
xchg
pop
shrb
mov
mov
aam
pop
and
int
mov
nop
inc
xchg
cmpsl
orb
mov
mov
jl
xchg
mov
sub
push
data16
dec
push
outsb
ja
cmpl
jg
push
jle
pop
rolb
cmpsb
or
xchg
les
lahf
in
je
or
push
add
sbb
repnz
in
mov
adc
idivl
pop
cmpsl
fnstsw
dec
pop
inc
scas
inc
out
lret
jno
incl
xor
cld
jae
pop
cli
sbb
lretw
mov
jge
xchg
js
cmp
cmp
aam
xchg
testl
inc
sub
aam
in
cmp
mov
ja
mov
jmp
lock
pop
into
add
imul
fiaddl
sahf
idivl
in
aam
add
jne
lea
xchg
int3
popa
loopne
push
adc
outsb
lret
adc
insb
out
push
fldcw
mov
inc
jl
mov
xchg
and
jne
cmpsl
xor
and
imul
inc
out
cmp
jb
pop
sbb
or
fcompl
or
cmp
mov
add
cmp
ss
std
out
push
outsl
push
mov
adc
mov
xchg
roll
andl
mov
lea
loop
dec
pop
cmp
xor
and
stc
shr
shrd
pop
xor
or
xor
sbb
out
call
mull
fsubl
ljmp
in
cltd
jne
aad
adc
inc
dec
cmp
jge
loop
or
insl
push
add
jmp
sub
pushf
orl
push
pop
bound
or
pop
gs
sti
xchg
mov
mov
pusha
mov
aas
push
dec
std
ret
div
cmp
pop
or
lds
or
aaa
mov
xchg
push
in
test
cli
add
in
sbb
dec
and
xchg
push
out
mov
imul
mov
xor
aad
rcrl
or
std
dec
xor
sub
adc
pushf
pop
mov
adc
add
adc
call
add
mov
sub
enter
inc
call
mov
ja
jns
sub
andl
mov
int3
aam
mov
mov
mov
insl
fiadds
mov
pop
jecxz
add
sub
iret
stos
mov
test
inc
les
sahf
jle
cmpsl
lods
jno
xchg
jg
out
sub
je
mov
pop
iret
rol
sahf
adc
push
jl
jp
das
and
mov
push
loopne
hlt
sub
bts
add
outsl
or
adc
pop
xor
cmp
hlt
aam
idivl
aaa
ja
sti
in
push
mov
xchg
xor
icebp
scas
mov
sub
or
jl
in
ss
mov
push
dec
outsl
test
shlb
inc
push
es
xorl
pushf
xchg
add
lods
pop
and
xorb
push
jbe
push
dec
daa
int3
sbb
mov
popf
rolb
repz
jns
les
cmpsb
test
mov
loopne
pop
insl
xchg
add
mov
out
push
cltd
mov
scas
aas
xor
xor
sbb
out
repnz
jo
and
xor
nop
push
jmp
outsl
lahf
mov
in
mov
or
sub
outsl
inc
ss
addr16
cmp
mov
fistps
push
hlt
out
mov
xlat
add
ds
and
dec
mov
adc
pop
mov
xchg
sub
inc
testl
adc
mov
sbb
fists
pop
out
jae
filds
cmp
mov
fidivs
insb
shr
sub
mov
aas
stos
inc
inc
cmpb
add
loopne
sbb
aas
sbb
add
shl
xor
jp
cmp
into
inc
pusha
scas
sub
xor
pushf
or
fwait
fwait
mov
xchg
inc
and
out
cmp
or
jecxz
push
fdivrl
cmp
mulb
add
sti
sbb
or
pop
sub
pop
mov
test
aas
xor
insb
and
enter
adc
pop
jle
add
and
adc
lods
mov
repnz
jmp
std
out
call
xchg
jae,pt
aaa
daa
stos
sahf
pop
fcoml
mov
inc
iret
popa
daa
sub
cmpsb
mov
cmp
sub
dec
iret
push
rclb
fbstp
mov
mov
dec
shlb
scas
bound
sub
nop
loopne
dec
xor
sbb
jle
and
pop
iret
mov
sbb
out
nop
jle
loop
jecxz
sarb
pop
add
sub
jmp
mov
jmp
jl
fwait
push
mov
lret
or
inc
pop
cmp
push
jecxz
iret
imul
sbb
pop
cmc
add
ret
cmp
xor
data16
lods
jg
jo
jae
nop
loopne
shl
xchg
loop
jae
cld
push
movsb
and
jno
adc
xor
inc
outsb
sub
in
or
cs
xor
push
mov
mov
pop
push
inc
jb
inc
sub
fistps
ljmp
stos
into
lods
imul
loope
sbb
lock
aas
or
outsb
out
int3
push
mov
or
pushf
loop
jns
push
lret
jecxz
pop
pop
aam
jmp
stc
test
mov
dec
mov
dec
pop
push
outsb
into
cmc
pop
sub
push
jns
loopne
xlat
cmp
mov
cmp
loope
mov
mov
lahf
mov
icebp
xchg
xchg
lods
lret
mov
pop
ffree
push
aam
inc
jle
and
add
jmp
das
outsb
cmp
xor
or
cmc
cmp
aad
in
push
das
fstl
push
daa
adc
imul
mov
ja
pusha
rcrb
fidivrl
add
jg
es
loop
xor
pop
sar
mov
inc
push
push
pusha
pop
cmpsb
jl
xchg
inc
pop
repz
dec
aas
sbb
imul
mov
out
xchg
icebp
rcll
std
push
xchg
aas
dec
les
icebp
adc
fildl
cmp
xor
lock
mov
mov
in
mov
pop
adc
cmp
out
fldl
into
xor
push
jo
bound
mov
push
jle
xlat
sahf
imul
outsb
xchg
jo
mov
xor
xor
and
ror
mov
and
int3
inc
pop
shl
xor
push
and
push
cmp
lret
jns
pop
sbb
xor
ja
leave
idivb
aad
inc
jb
adc
add
jmp
mov
cltd
call
mov
fisubrl
and
inc
pop
cmp
inc
xchg
push
lret
icebp
mov
jno
test
lock
adc
sub
dec
popf
cld
add
sbb
rorl
pop
dec
push
jge
in
sub
xchg
inc
jp
data16
ljmp
loopne
sub
pop
jns
jo
mov
and
jecxz
add
jnp
out
loopne
aad
add
fldt
daa
add
cmp
dec
loopne
data16
jmp
in
cmp
mov
xorl
cmc
in
fistpll
xor
outsl
push
jle
sarb
mov
push
push
mov
stos
push
stos
fnsave
test
inc
into
cld
test
js
xor
scas
loope
xchg
jecxz
insl
push
mov
xchg
and
movsb
out
popf
mov
aas
stos
and
add
mov
movl
pop
inc
mov
adc
roll
out
cwtl
xchg
pop
xor
inc
in
xchg
sti
push
and
mov
addb
jo
pushf
lret
je
outsb
out
pop
roll
test
enter
scas
xor
out
loopne
xchg
std
add
sbb
mov
cmpsb
jb
aad
out
ja
leave
js
dec
imul
mov
idivb
out
outsl
or
adc
inc
jns
cmp
into
cmpsb
adc
nop
pop
xlat
add
enter
cwtl
clc
xchg
jle
test
stc
push
popf
mov
in
test
das
outsb
xchg
adc
and
dec
cmp
jne
mov
dec
cltd
sub
and
popf
sbb
lock
pop
call
movb
aam
mov
cmp
outsb
dec
xor
jae
je
push
int3
mov
adc
or
mov
out
cmp
mov
lret
push
arpl
es
loope
cmpsb
fdivl
and
push
push
sub
push
lcall
xchg
mov
mov
dec
and
inc
add
lcall
int3
dec
int3
cltd
aas
clc
mulb
cmp
add
test
sbb
movsb
pop
push
bound
into
movsb
mov
dec
ljmp
dec
stos
pop
nop
jne
push
xor
mov
addr16
push
or
outsl
aas
pslld
gs
cltd
aad
fnstenv
test
dec
cmpsb
sub
ficompl
push
and
pop
lock
aad
sub
cmp
xor
mov
out
push
mov
jg
xor
das
clc
push
jbe
lds
mov
inc
jb
jae
fs
add
cwtl
movsb
orb
subb
mov
insb
pop
in
push
xchg
and
mov
dec
or
jnp
sub
lods
xor
stos
lods
xchg
jmp
inc
das
xchg
js
idiv
xchg
bound
arpl
add
loopne
stc
ja
incl
xchg
mov
lahf
or
xchg
push
xchg
xor
pop
hlt
mov
lea
mov
mov
jb
imull
int3
mov
lds
push
adc
push
push
add
adc
jns
add
mov
xchg
outsl
xor
movsl
xchg
push
shlb
mov
xlat
mull
int3
adc
ret
movsb
mov
js
out
fcmovbe
jnp
mov
pop
push
add
mov
jmp
dec
pusha
cld
adc
xor
addb
push
add
sub
sbb
mov
idivl
into
push
fsubr
push
xchg
xor
call
push
pop
xor
and
shlb
or
movsl
mov
dec
mov
jae
cltd
cli
stc
sbb
mov
cmp
gs
sahf
push
int3
sbb
iret
add
mov
sub
stos
clc
push
xchg
add
ret
or
insb
adc
adc
aam
lea
mov
and
ss
lods
pop
pusha
xchg
and
shlb
mov
ss
push
fimull
xor
fnstsw
mov
cmp
cltd
ja
dec
fs
inc
xor
and
push
lret
fadd
pop
xor
stos
popa
imul
xchg
and
insb
addr16
test
jmp
or
shll
insb
mov
leave
jns
movsb
mov
dec
lea
mov
sub
stos
js
mov
lods
adc
mov
fcompl
or
stos
add
xor
movsl
lea
sarl
call
dec
push
es
xchg
lock
or
ret
jge
fsubrs
xorb
xchg
sbb
jnp
out
ror
lret
popa
pop
fidivrs
stc
popa
cli
shrl
test
adc
cli
in
mov
test
adc
xchg
std
mov
pop
nop
loope
in
mov
adc
outsb
pushf
lret
sbb
or
adc
mov
data16
push
pop
xor
sbbb
sbb
jl
loopne
repz
in
jno
mov
into
jmp
scas
data16
shll
test
or
mov
inc
add
cli
push
ljmp
adc
enter
sub
mov
icebp
shll
ds
bound
mov
xchg
inc
ja
fisttps
add
cwtl
cwtl
pop
cmp
in
cltd
sbb
adc
xlat
pop
pop
gs
js
and
in
adc
adc
addr16
inc
stos
inc
mov
dec
jns
mov
cwtl
adc
in
test
std
popa
cmpsb
xor
xor
insb
lcall
popa
sti
std
pcmpgtw
fwait
add
jmp
dec
ds
cmp
mov
jmp
scas
dec
data16
nop
mov
arpl
ljmp
inc
popa
cli
adc
jmp
cmp
cmp
sahf
jb
pop
jmp
add
inc
lahf
pop
aam
imul
dec
xchg
dec
push
xchg
mov
xor
rcrl
dec
outsb
test
mov
sub
pop
xchg
xchg
mov
inc
jecxz
outsl
popa
or
lcall
xor
mov
pop
punpckhbw
testb
inc
jp
push
inc
daa
or
mov
les
add
or
or
dec
mov
xchg
int3
push
push
mov
cltd
test
cmp
dec
es
lods
inc
jnp
dec
or
jo
into
push
xchg
mov
cld
dec
dec
adc
pusha
mov
ja
jne
dec
mov
push
rorb
aam
test
xchg
mov
out
jmp
jp
enter
cltd
enter
incb
dec
mov
pop
fistpll
push
mov
mov
ret
jmp
add
loopne
sbb
mov
sub
mov
xchg
jl
adc
testb
mov
mov
mov
jp
sub
shll
daa
ret
fldpi
lret
inc
adc
xor
js
lret
xor
or
aam
in
inc
enter
sub
or
sbb
movsl
xchg
add
shlb
adcl
pop
jp
cmp
ja
adc
insl
frstor
enter
add
pop
rorl
mov
iret
mov
xchg
fisttpl
jne
xchg
sbb
fs
out
movsl
lock
imul
jmp
lret
push
adc
jg
push
pop
add
sub
xor
int
push
test
imul
shrl
and
jp
or
outsl
stos
push
mov
xor
adc
insb
cmp
push
test
in
add
cmpsb
cwtl
in
sar
mov
mov
fidivs
movsl
push
ret
lods
add
pop
jae
jmp
dec
dec
jge
push
xor
pop
sub
push
xchg
pop
dec
pop
movsb
lret
outsb
jmp
sub
inc
into
fistpll
add
pop
sub
ljmp
jcxz
inc
aad
dec
pop
outsl
call
pop
inc
push
fstpl
sub
mov
xchg
sub
dec
dec
cmp
xor
push
subl
sub
xchg
push
and
jl
cmpsb
jbe
testb
and
mov
mov
push
mov
mov
push
inc
test
jo
pop
or
jecxz
dec
lock
movsb
les
leave
mov
data16
sahf
jne
aas
aam
loopne
ret
cmpsl
push
xchg
push
pop
dec
and
pop
push
dec
or
lods
xchg
pop
mov
ja
jp
push
adc
and
lret
ret
hlt
mov
sbb
add
mov
pop
dec
inc
movsb
pop
clc
inc
shl
aam
mov
test
pop
push
ficoml
mov
int3
ljmp
and
mov
rcl
mov
loopne
mov
cld
pop
and
push
neg
es
xchg
outsl
lret
out
sbb
mov
fnsaves
shll
inc
push
mov
mov
xchg
fwait
aas
test
stc
mov
push
add
xchg
je
out
aad
pop
push
pop
sti
rcr
mov
popf
inc
ss
pop
add
shl
scas
and
push
ja
divl
out
es
jb
test
and
cmc
xchg
push
out
push
jb
ficoml
mov
add
fisubrl
pop
in
aas
iret
cs
jae
mov
dec
dec
js
mov
sub
and
push
loope
ficoms
and
jp
adc
fdivs
sub
xor
scas
cmp
dec
xor
jo
push
lret
das
aaa
sahf
adc
mov
jecxz
adc
pop
jp
sub
mov
pop
sbb
loop
sbb
test
mov
enter
aaa
xchg
aas
cs
sbbb
xor
jg
xchg
fists
xor
pop
movl
pop
xchg
outsb
jge
pop
loop
mov
ja
enter
mov
addb
adcl
push
mov
mov
and
mulb
std
imul
sub
mov
cmp
mov
in
movsb
push
addl
mov
and
push
mov
mov
inc
jbe
gs
add
dec
clc
nop
adc
add
inc
enter
jnp
mov
pop
mov
ljmp
sub
cmc
imull
sub
dec
sub
jns
push
cmpsl
xlat
jmp
mov
jmp
in
xchg
ret
mov
or
pop
xchg
fs
push
lret
int
push
adc
ret
negl
mov
ljmp
xor
adcb
dec
bound
outsl
and
inc
xor
sub
sbb
test
cs
jmp
pop
imul
shll
sbb
movsl
pop
out
mov
shrb
push
add
in
lcall
lods
mov
cmp
bndstx
movsl
leave
cmp
push
cmp
push
aas
mov
xchg
add
xchg
dec
aaa
movsb
loop
xlat
aaa
bound
adcb
sahf
jge
adc
mov
stos
sub
sbb
mov
cs
arpl
fcomp
cld
out
fscale
inc
mov
loop
xchg
dec
movb
loopne
adc
cwtl
addl
hlt
stos
sbb
dec
inc
repnz
mov
fs
push
pushf
int3
dec
sub
jb
lret
push
mov
scas
lcall
and
mov
sbb
adc
push
les
or
push
dec
lea
or
push
test
push
jbe
lret
lea
push
inc
daa
add
cmp
cmc
mov
lahf
jns
mov
xor
or
outsl
fnstcw
mov
mov
rcl
data16
and
add
test
orb
add
and
inc
mov
fs
test
mov
aad
ret
jno
dec
xlat
add
mov
or
mov
js
orl
out
pop
ret
jne
inc
push
lret
xchg
add
sbb
jl
and
es
mov
or
out
int3
movl
mov
int
mov
jmp
in
fninit
cltd
mov
mov
inc
lds
push
out
int3
push
pop
gs
and
fcompl
lahf
cmc
cmp
lods
dec
sub
int3
lods
bound
lcall
inc
xor
movsl
jno
push
ss
inc
sbb
in
sbb
gs
xchg
cmc
mov
test
aas
and
push
cld
push
mov
clc
pusha
jmp
and
mov
repz
imul
loop
testl
das
mov
fistps
repz
dec
iret
jnp
dec
mov
lahf
sbb
repz
or
lret
das
sub
out
js
add
push
jl
ficoml
fistpl
imul
xchg
jno
outsl
popf
sbb
pusha
jl
jmp
je
mov
push
ret
jnp
out
ja
push
aad
das
mov
outsb
lahf
ljmp
inc
push
xor
push
dec
outsb
std
and
in
fst
in
nop
test
xchg
xor
mov
dec
ljmp
mov
mov
xchg
nop
shlb
rcl
sub
repz
into
je
xor
cmp
xlat
ja
cmp
push
lods
je
in
ss
jne
pop
fmulp
xchg
aaa
mov
aas
sahf
out
mov
aas
test
push
cld
in
data16
add
addr16
cmp
pop
pop
dec
pop
add
aas
fldt
push
cltd
lcall
cmc
mov
xchg
out
lds
xchg
jl
mov
jbe
rolb
or
push
stos
xor
es
pop
icebp
leave
cwtl
xor
jl
loop
sbb
cmp
mov
sub
mov
aad
lods
loopne
es
cmp
mov
push
push
mov
mov
sub
xchg
add
xor
call
scas
sub
pminub
aaa
nop
mov
sub
testl
xlat
xlat
cld
pop
outsb
cs
mov
dec
stos
sub
fisubs
cmp
cmpsl
mov
and
mov
mov
xchg
test
sahf
loop
testb
adc
dec
out
std
mov
outsb
mov
jl
sarb
icebp
icebp
and
push
or
aad
sarb
jl
in
enter
clc
sbb
data16
sub
cs
mov
nop
hlt
std
stc
das
fcmovnbe
pop
lods
cmc
int3
adc
popf
push
into
lock
mov
xchg
decl
cmp
and
cmp
lret
aaa
jle
rorb
in
clc
out
mov
push
adc
fsubs
je
inc
stos
mov
cmp
pop
push
xchg
dec
cmp
js
nop
sub
jp
jecxz
dec
mov
test
pushf
out
faddp
cmp
push
movsl
sub
and
lods
mov
icebp
inc
rorl
cmp
sbb
mov
jnp
add
jg
push
mov
aaa
iret
gs
mov
repnz
mov
fldt
sbbl
push
stos
push
sbb
xor
popa
outsl
sbb
adc
repnz
push
add
cmp
xor
mov
std
inc
fwait
xchg
rolb
push
int3
shrb
ret
jbe
pop
add
inc
or
xlat
repnz
xor
test
lods
fcomps
incl
sub
addr16
or
fidivl
xorl
dec
insb
pop
icebp
movsb
fcmovb
leave
inc
adc
sti
cltd
aam
jmp
or
pop
xchg
data16
xchg
aam
notl
clc
jo
push
dec
aaa
xchg
cmp
and
out
sub
pop
push
ret
jbe
scas
sbb
xchg
push
cmp
and
push
fistl
sbb
or
mov
mov
arpl
jnp
mull
dec
ret
stc
outsb
lahf
xchg
loope
jle
xchg
loope
dec
adc
pop
pop
fimuls
jmp
repz
rol
repz
mov
faddp
hlt
cmp
and
stos
and
mov
scas
test
ret
data16
insl
lcall
out
cmpsl
sub
inc
pop
pop
add
out
in
jo
xor
arpl
mov
js
call
js
notl
stc
out
mov
imul
dec
adc
dec
repz
shrl
mov
mov
testb
cmp
xor
lock
insl
lods
pushf
mov
cwtl
lret
mov
je
leave
enter
in
shl
dec
dec
aam
add
lock
ret
cltd
add
cmp
add
add
movsl
cld
jns
xlat
push
arpl
scas
mov
fcom
test
dec
sti
jo
ja
sarl
and
fistpll
or
push
xchg
jae
add
mov
lds
cld
jmp
imul
cmpsl
icebp
ret
inc
int3
push
loop
rorb
mov
jo
orb
add
mov
xor
jle
lcall
scas
cltd
iret
cmp
rcrb
lea
push
repnz
lock
jns
sub
outsl
add
in
mov
sbb
mov
cmpsb
dec
inc
push
setge
pop
push
mov
int
pop
inc
mov
and
sub
inc
sub
outsl
fnstenv
scas
sbb
pop
stos
add
imul
mov
ret
mov
cmc
jle
mov
daa
test
pushf
enter
inc
bound
mov
xchg
lcall
adc
mov
push
push
mov
out
xlat
jae
mov
inc
xchg
mov
push
je
mov
lock
es
inc
out
mov
cli
outsl
adc
fwait
mov
js
pop
in
add
imul
aam
loope
mov
repz
sbb
inc
push
inc
lods
or
bound
adc
mov
xchg
mov
stc
and
in
test
add
xor
ds
or
sub
scas
js
call
adc
stos
sbb
scas
xor
xchg
int3
rclb
addb
fs
js
pop
in
lret
xchg
mov
dec
iret
loopne
rolb
mov
jge
stos
jg
xchg
and
fadds
dec
push
rol
mulb
mov
xchg
sbb
sarb
je
imul
or
xchg
adc
adc
push
cmp
push
mov
lods
dec
inc
popf
mov
stc
test
xor
add
dec
xchg
pop
ja
adc
jg
mov
and
cmpsb
sub
fldln2
leave
enter
mov
cli
scas
fldz
xchg
xchg
jl
mov
xor
pop
jg
inc
xchg
addb
pusha
mov
sub
and
inc
jecxz
xor
cmp
mov
in
adc
out
cltd
pop
lds
inc
jl
arpl
mov
minps
push
in
fisubl
inc
inc
cmp
cmpsb
cmc
andb
push
xor
incl
xchg
or
sbb
xchg
pop
pop
clc
in
pop
stos
pop
insl
addr16
jg
inc
rorb
push
pop
lods
sub
sti
dec
add
leave
ds
aad
mov
sbb
and
loop
sub
pushf
negb
test
loopne
out
cli
xchg
dec
jnp
push
xor
sahf
lret
push
and
iret
adc
push
shlb
jg
mov
dec
fstpt
dec
mov
test
sub
sub
stc
mov
xchg
jp
xchg
jge
xor
jbe
lret
push
inc
xchg
scas
sti
pop
out
cwtl
push
fs
cld
jbe
pushf
jae
mov
nop
pop
cli
daa
imul
lcall
ljmp
or
movb
mov
cmp
ljmp
jbe
out
jp
push
into
push
gs
mov
xlat
mov
add
mov
push
pop
pushf
and
mov
mov
ds
in
jae
das
addr16
shrb
out
add
outsb
or
add
sti
mov
mov
add
jo
les
adc
daa
pop
mov
pop
mov
movsl
rol
shlb
fwait
push
hlt
add
push
cli
enter
rorl
testl
or
pushf
xor
imul
mov
test
ficompl
sbb
jno
add
iret
add
lea
enter
mov
inc
push
push
inc
sub
je
pop
xchg
cmc
jecxz
stos
xlat
test
jbe
push
xchg
xor
xor
jg
int3
pop
sbb
repnz
cmp
xchg
lcall
icebp
adc
or
std
je
fisubrs
pop
xor
add
add
mov
jle
mov
rclb
fnstcw
out
pop
dec
xchg
jp
sbb
cmpsl
ljmp
jbe
ror
out
dec
mov
aaa
push
mov
add
jae
in
movsw
xor
inc
pop
sbb
push
mov
push
or
adc
aad
xor
andb
xchg
pop
or
xor
mov
stos
inc
add
test
mov
pop
mov
imul
stos
and
xchg
mull
icebp
inc
add
das
fidivrl
jge
movsl
sbbb
in
sbb
std
daa
and
or
stos
mov
in
xchg
aaa
loopne
cmp
push
mov
pop
mov
sahf
push
add
mov
inc
loope
in
pop
lahf
dec
mov
fs
add
cld
jge
mov
xchg
test
sbbl
pop
push
cs
dec
sti
loopne
mov
cmp
adc
frstor
xchg
icebp
xchg
and
in
fs
mov
pop
add
pop
or
dec
call
call
push
imul
sub
push
fadds
in
fistpl
sbb
jge
pop
cli
xchg
test
cmp
and
sub
iret
mov
cltd
mov
lods
push
cmp
mov
aaa
adc
xlat
stos
push
xchg
scas
fs
pop
jge
adc
cli
movsl
jo
out
decb
mov
mov
fmul
or
je
mov
mov
or
adc
in
in
frstor
jp
adc
cmc
fnstsw
or
pop
aam
scas
mov
test
lods
cmp
divb
divb
cwtl
adc
stos
fwait
icebp
es
xchg
cmp
xchg
xor
shl
mov
mov
in
push
xchg
icebp
in
ret
jno
xlat
hlt
pop
and
cmp
shlb
add
mov
icebp
xor
shl
ret
jl
sbb
pop
pop
jl
cwtl
aam
sbb
cmp
jo
jp
daa
ja
mov
ljmp
cmpsb
leave
pop
pusha
cmp
je
mov
dec
rcrb
and
test
frstor
cmp
push
sub
adc
xchg
adc
pop
sub
hlt
add
push
ss
fiadds
dec
push
or
dec
shlb
pusha
jp
imul
mov
popl
inc
cmp
push
pop
adc
leave
aad
fs
stc
outsl
sbb
push
sbb
shrb
fwait
shl
jnp
push
sub
insl
fwait
aad
mov
dec
jge
inc
jb
add
out
nop
dec
aas
pushf
cmc
push
sub
mov
js
imulb
fwait
xchg
jb
dec
fxch
mov
fdivr
aad
scas
and
arpl
xchg
jmp
sbb
cmpsl
lahf
data16
scas
sbb
dec
js
inc
sub
call
lods
xor
in
xchg
ljmp
das
push
dec
ja
pop
repz
arpl
popa
mov
xchg
pop
iret
mov
jl
xchg
lea
dec
cli
repnz
fcmovnbe
mov
popa
push
in
bswap
int
aas
sti
xchg
mov
ss
fwait
jns
pop
mov
cs
test
fcom
push
and
rcr
aam
mov
mov
out
imul
fs
push
pop
test
les
cltd
inc
cmpsl
pop
dec
xlat
insb
arpl
lods
orl
idivl
mov
mov
andl
dec
xchg
cmpsb
xor
or
add
lods
push
xchg
pop
xchg
pushf
push
jbe
push
pop
mov
adc
incl
and
push
lahf
cli
cmp
ja
add
ss
cli
mov
jl
in
sub
testl
test
sub
cltd
pop
out
test
cltd
gs
cmpsb
jmp
sbb
cmp
mov
cmc
imul
mov
out
jg
je
sbb
mov
scas
sbb
lods
mov
xchg
mov
sub
sub
jae
mov
mov
add
loop,pt
imul
hlt
jnp
ret
jns
pop
into
cmp
adc
inc
cmp
fprem
mov
lcall
sub
popf
jne
sub
or
pop
inc
in
cmpsl
xchg
gs
mov
mov
xchg
repz
sub
jge
mov
icebp
mov
ret
test
inc
cwtl
lods
dec
pusha
jns
in
aad
cmpsb
mov
and
adc
and
sub
int3
xor
push
lret
into
insb
xlat
je
jmp
in
fstl
sti
inc
int
and
popf
push
dec
loope
popa
stos
aaa
pop
inc
xchg
scas
mov
fidivrs
ret
stos
mov
inc
cli
or
ljmp
in
stos
shll
sbb
mov
dec
cmp
clc
out
xchg
sarl
mov
ret
lds
out
push
lcall
cltd
fistps
sbb
ja
inc
cmpl
sbb
dec
outsb
inc
stos
pop
inc
inc
rcrb
bound
cmp
insb
jecxz
mov
adc
xchg
add
mov
int3
mov
js
jecxz
in
test
xchg
fbstp
fsubl
adc
adcb
mov
aas
je
mov
mov
sbb
and
sbb
cmp
add
xchg
push
jo
mov
cmp
test
inc
aas
loope
outsb
push
ljmp
dec
lods
sub
rorb
lret
iret
ret
add
scas
push
daa
cmpsl
pop
int
stos
inc
cmp
or
int
mov
mov
js
leave
mov
daa
pop
dec
inc
and
xchg
out
push
inc
faddl
cmpsl
andb
sarb
mov
and
dec
lock
bound
lret
adc
adc
mov
cmp
out
sbb
jo
xchg
mov
push
or
dec
nop
pop
int
into
cmpsl
adc
sub
pop
inc
mov
jle
xchg
es
dec
insb
daa
pop
std
xchg
adc
stc
inc
lcall
dec
mov
mov
and
mov
xor
inc
push
push
xchg
stos
jns
jb
xor
pop
mov
push
or
loopne
add
mov
xchg
outsl
xchg
lahf
add
loopne
fdivrs
jno
pop
mov
fldlg2
push
and
lahf
lods
cmc
int3
jno
loopne
cmp
pop
sahf
popa
stos
mov
mov
lods
and
shll
xchg
or
inc
push
and
pop
sti
lret
xchg
in
cmp
ljmp
push
dec
pop
pusha
in
int
xchg
cmpsl
pop
test
mulb
in
popf
xorb
sub
sub
add
out
mov
aas
mov
cmc
arpl
movaps
inc
je
std
xchg
mov
jl
bound
pop
cmp
xor
add
les
arpl
mov
mov
lahf
imull
sbb
mov
ss
add
pop
xchg
popa
fimull
loopne
add
test
pusha
lahf
and
push
mov
cmp
out
or
je
jecxz
xor
jp
icebp
rcl
dec
aas
les
test
pop
pop
sub
mov
sti
dec
or
pop
lret
out
inc
orl
xchg
inc
push
pop
dec
out
jb
jno
out
xchg
mov
iret
adc
enter
xchg
test
xchg
xor
arpl
pushf
cmpsl
push
push
mov
imul
stos
repnz
jno
mov
pop
dec
xchg
xor
lret
push
mulb
shlb
jle
sbb
mov
jo
jmp
sub
js
push
jne
ss
aam
das
pop
add
mov
lds
and
jecxz
jae
clc
pop
lahf
mov
int3
movsb
mov
jg
lahf
dec
push
lods
test
xor
push
test
cmp
cmp
cmp
stos
call
adc
mov
lret
repz
push
sub
sahf
out
out
shrl
cmp
loop
nop
xchg
testl
add
mov
pushw
adc
aaa
add
push
pop
hlt
xor
leave
pop
leave
adc
ds
pxor
adc
inc
pop
adc
inc
jl
lea
xchg
mov
sbbl
inc
leave
int
mov
aaa
lret
pop
fcmovu
add
movsl
mov
mov
sbb
push
mov
mov
mov
lret
mov
cmp
popa
push
xor
insb
and
adc
mov
push
jmp
into
fildl
std
test
aaa
out
dec
pop
add
xchg
mov
and
insl
aam
loopne
movsl
xchg
xor
sti
shlb
cld
popf
sbb
push
notl
push
ret
push
test
subl
or
dec
jmp
jge
mov
sbb
inc
cmp
push
jl
xchg
movsl
xlat
insl
mulb
and
lea
pop
cmp
adc
dec
jmp
jae
in
aas
jno
mov
push
cmpsb
in
inc
icebp
xor
ret
jb
push
int
inc
jb
mov
sbb
movsl
or
and
popf
cmpsb
daa
aas
dec
outsl
insb
ss
pushf
scas
aam
push
pop
and
out
xchg
mov
loop
inc
scas
dec
xchg
orl
enter
and
std
cmp
insl
sbb
mov
test
repnz
pop
sub
push
outsb
sub
pop
mov
inc
ds
push
xchg
push
roll
daa
enter
adc
pop
loopne
pop
fwait
jge
lds
push
and
inc
adc
lcall
xlat
sub
or
int
mov
push
add
sbb
sub
jo
xchg
ljmp
mov
jge
sbb
addl
mov
in
pushl
insb
shll
push
fs
xchg
movsl
out
xchg
add
inc
dec
movsl
pop
int3
pop
add
outsb
mov
roll
jmp
push
dec
xor
les
mov
xor
xor
test
mov
lcall
sub
push
icebp
jle
mov
ret
arpl
inc
lcall
pusha
movntq
xor
pop
fisubrs
jle
cmpsb
in
out
jnp
xchg
sbb
push
scas
cmpsb
push
aas
mov
sbb
into
mov
pop
xor
ljmp
std
inc
shll
leave
add
sub
add
dec
push
stc
enter
lds
pop
xchg
xchg
push
mov
cld
add
lods
jno
jne
sbb
cmp
or
push
fsubs
fisttpll
sub
popa
adc
pop
mov
adc
add
adc
incb
sub
push
sub
mov
out
dec
push
cld
inc
in
cltd
jnp
mov
jns
fcomip
dec
mov
inc
das
in
gs
push
cmc
jg
cmpsb
inc
inc
xadd
cmp
and
mov
ja
pop
inc
xchg
inc
rcrl
mov
ret
mov
fisubrl
scas
inc
adc
mov
and
and
jo
jmp
or
cmp
add
aam
push
sti
cmp
jp
fisttpl
inc
popf
push
dec
dec
adc
jge
jmp
in
cmp
mov
cmp
into
std
cmc
outsl
jg
pop
lret
shll
or
cld
push
seta
into
inc
repz
and
hlt
add
adcl
test
aaa
cmpsl
in
ja
adc
mov
mov
or
mov
mov
and
vcvtsd2si
sub
mov
jb
jmp
bound
in
in
insb
jle
and
adc
subl
push
jmp
jmp
or
pop
mov
int3
shll
repz
and
inc
iret
xchg
pop
pop
fcmovne
xchg
xor
stc
stc
push
repz
fimuls
popf
in
jle
pop
andl
mov
rcll
test
and
mov
dec
ja
ja
mov
daa
mov
mov
mov
jmp
add
inc
stc
adc
push
int3
loopne
jecxz
mov
rol
cltd
pop
int
fcmovbe
aam
aam
into
pop
test
xchg
call
mov
pop
add
push
lret
mov
sub
jmp
rcll
inc
aad
mov
xor
ljmp
mov
inc
xchg
add
rcr
pop
push
shll
rcrl
mov
je
mov
pop
and
adc
xchg
mov
shld
lock
in
pop
insb
add
out
xor
out
popf
sbb
lcall
test
pop
rcrb
in
sub
repnz
shrl
push
orb
or
sbb
sub
inc
lods
jbe
jbe
inc
fnsave
out
ficoms
xchg
push
cwtl
xchg
lahf
int
adc
cmp
add
movsl
inc
mov
arpl
sub
dec
jecxz
push
push
push
pop
mov
mov
mov
add
dec
push
or
mov
xchg
enter
into
aas
dec
lods
sarb
jle
in
adc
jae
outsl
mov
pop
adc
jmp
mov
mov
xchg
imul
fsubrl
movsb
xchg
mov
jmp
ds
std
cmp
stos
cmp
jo
inc
xchg
sbb
xor
xor
into
jne
cmp
arpl
test
mov
icebp
imul
addb
jg
pop
xor
sahf
jecxz
repnz
mov
cld
push
popf
pop
pop
cmp
inc
imul
pop
in
jne
lret
xchg
ss
mov
sub
mov
jp
dec
xchg
testl
ljmp
cmp
jns
mov
inc
in
movsb
and
dec
push
lods
or
fisubs
sbb
fsubp
call
cmpl
nop
mov
rclb
xchg
mov
cmp
inc
dec
add
cld
not
xor
iret
push
inc
stos
loop
add
imul
lcall
ret
inc
iret
cmp
xchg
fwait
inc
leave
and
stos
daa
andb
sub
pusha
jb
inc
insb
test
dec
scas
fisttpll
or
jno
push
aam
sbb
mov
pop
add
jbe
mov
lcall
add
daa
and
fwait
adc
dec
dec
add
sbb
cmpsl
xchg
jl
add
sub
nop
hlt
xchg
int
les
mov
insl
xor
mov
xlat
daa
jno
cmp
enter
jmp
scas
sbb
mov
mov
std
pop
dec
dec
and
aam
push
jmp
das
dec
fiaddl
mov
frstor
fs
xchg
fimuls
ret
fmuls
cld
mov
and
xor
je
pop
mov
enter
mov
popa
cmpsl
lock
add
mov
jb
xor
cmp
je
xor
leave
push
cmpsl
fistps
iret
adc
addl
lahf
popf
mov
mov
adcb
xor
inc
icebp
inc
cmpb
insb
adc
jo
fldl2e
jae
js
mov
aad
es
mov
fistps
pop
idivb
push
and
mov
inc
mov
xor
xor
neg
fsub
sub
stc
or
rclb
push
orl
add
sub
push
clc
sbb
mov
ret
cli
daa
lock
sub
pushf
cli
jne
push
add
sbb
push
inc
test
pop
mov
or
scas
push
mov
sub
jl
mov
mov
jno
xor
mov
mov
push
aas
repnz
add
das
icebp
or
mov
fcmovne
xor
lahf
mov
or
ljmp
or
dec
pop
xor
sub
out
pushf
and
es
test
mov
jnp
sbb
dec
adc
lock
xchg
out
es
cli
decl
mov
cmp
sbb
in
and
mov
cmpsl
inc
xor
scas
mov
adc
jns
mov
sub
lock
sub
ss
in
dec
nop
int
dec
insb
es
test
fiadds
adc
sar
aad
in
pop
mov
xor
stc
and
xlat
fxch
push
std
sub
fcomip
ss
jnp
cmp
hlt
xor
or
and
ljmp
in
loop
stc
sub
add
push
mov
and
inc
mov
shll
and
outsb
mov
and
je
cmp
fistl
sbb
jno
loopne
out
lea
mov
call
cmp
mov
sbb
fimull
and
inc
test
aaa
mov
cmc
leave
je
shrb
add
dec
and
mov
mov
add
dec
pop
mov
addr16
ja
test
and
xchg
push
ficoms
scas
add
pop
mov
lret
inc
add
aad
rolb
fcom
out
in
pop
add
inc
mov
scas
es
idivl
jne
adc
sti
mulb
adc
sub
dec
xchg
inc
or
insl
mov
xchg
xor
repz
das
xor
jecxz
outsb
adc
mov
aas
into
cmp
mov
pop
add
adc
in
scas
jnp
and
je
cmp
fs
and
in
mov
shll
sub
decl
into
dec
push
stc
xor
sbb
adc
adc
mov
xor
repnz
rol
lea
lret
push
imul
and
push
xor
ret
sbb
mov
sbb
push
in
cli
adc
out
sahf
ds
mov
sub
popa
in
insl
mov
movsl
cmc
or
ror
shlb
in
aam
nop
ret
adcl
jo
xor
ja
adc
in
aas
pop
add
movsl
movb
icebp
xor
lods
arpl
mov
pop
adc
popf
fisttpll
inc
out
sub
adc
cmp
cmpsl
cld
cmp
fwait
push
adc
xor
add
lods
pop
mov
mov
out
lds
mov
scas
xor
fnstenv
jb
mov
mov
cld
mov
icebp
jp
cmpsl
dec
jno
out
push
pushl
clc
lcall
pop
stos
lds
stos
xor
dec
jo
aam
xchg
push
fadds
pop
xchg
or
cmp
ds
xchg
xor
push
or
mov
jb
mov
cmp
pop
mov
ret
lret
mov
xchg
dec
or
decl
ja
mov
inc
mov
cmp
aad
push
aam
out
test
xor
cmc
shr
mov
std
adc
jl
jns
cwtl
jnp
out
in
into
push
inc
inc
movsb
std
xor
jmp
add
ds
pop
enter
pop
sarl
int
add
push
jne
mov
add
mov
push
and
in
ret
jo
inc
mov
xor
out
push
and
stos
in
pop
inc
sbb
and
movb
fwait
mov
inc
aad
xor
jge
dec
out
jmp
inc
arpl
movsb
fnsave
ret
xor
jo
dec
fcoms
mov
push
adc
push
or
test
push
dec
popf
mov
imul
mov
aad
sub
xor
mov
pop
stos
jmp
mov
test
in
pop
cmp
mov
adc
push
xlat
pop
jl
fidivrs
mov
adc
cmp
shr
xor
xchg
cwtl
loope
es
add
adc
xchg
cmp
daa
bnd
sbb
test
xor
scas
push
xchg
dec
adc
aaa
or
jns
xchg
into
xchg
push
lock
call
je
pop
pop
mov
lods
dec
lods
fnstsw
cmp
or
pop
inc
mov
cmpsb
in
lea
add
sub
xchg
mov
dec
pop
sbb
xor
or
dec
enter
leave
sbb
jae
icebp
pop
adc
pop
inc
int
and
xchg
sbb
sbb
push
inc
inc
adc
iret
aaa
clc
xchg
fs
cmp
nop
xor
mov
mov
cmp
in
test
mov
cmp
shll
std
sub
testb
and
jo
les
sub
or
fwait
dec
add
xor
xchg
clc
xlat
cmp
xchg
mov
loop
mov
int
mov
loop
and
iret
jle
sub
push
in
icebp
dec
mov
leave
shr
and
les
fisttpll
adc
sub
mov
sbb
pop
dec
xor
xchg
mov
daa
or
clc
add
jo
sbb
jne
hlt
ret
mov
flds
pushf
dec
dec
jecxz
jp
mov
mov
shll
stos
sub
inc
arpl
movsb
iret
mov
push
shl
cmp
jle
addr16
mov
push
fnstsw
xor
inc
xor
push
jne
fidivrl
fadd
sbb
lret
mov
adc
xor
dec
nop
mov
pop
lea
mov
mov
faddl
lods
mov
or
addl
jecxz
outsb
cltd
mov
rorb
pop
rcl
stos
sahf
sbb
fidivs
stos
sub
sbb
jae
dec
adcb
xchg
lahf
aas
inc
cmp
adcl
mov
ss
pop
gs
push
lock
lds
pop
pusha
out
cmp
loop
in
icebp
int3
shll
fdiv
xchg
pop
je
lahf
int
xchg
sbb
add
inc
gs
into
out
test
push
popf
lahf
and
sub
mov
stc
data16
repz
int3
je
xchg
xor
aam
mov
inc
out
or
sbb
mov
dec
outsb
loop
mov
jecxz
mov
mov
dec
and
divb
sbb
outsb
add
scas
insb
icebp
add
movsb
out
mov
or
sahf
hlt
js
movsb
daa
dec
lahf
xchg
fs
out
daa
out
in
addl
cmp
out
push
xchg
and
mov
push
scas
aas
mov
aas
mov
es
insb
push
add
mov
mov
insl
test
sbb
icebp
push
shll
adc
dec
xchg
js
mov
into
mov
lock
inc
lods
inc
cmp
mov
or
insl
add
pusha
cmc
add
jp
jb
sub
pop
inc
aad
stos
insl
cmp
push
push
pop
out
pop
xor
mov
cmc
aad
push
pop
mov
daa
jo
cli
cmpsb
mov
jmp
rcr
jg
imul
das
fdivl
sub
movsl
daa
push
int3
pop
mov
fcoml
mov
pop
mov
xchg
xchg
std
inc
fmul
jo
inc
push
cwtl
daa
inc
mov
push
fcomps
inc
push
pop
and
daa
dec
into
jle,pn
pop
and
xchg
insb
addr16
imul
xchg
adc
faddp
js
mov
jle
xor
add
dec
out
or
loopne
lea
scas
addl
aam
push
sarb
mov
mov
xchg
int3
mov
clc
fwait
mov
fisttps
cmp
das
into
stc
push
out
es
push
jl
lock
xlat
cmpl
dec
ljmp
mov
mov
pusha
insb
adc
adc
test
scas
sbb
push
cld
aam
incb
xchg
out
popa
shrl
xchg
les
xchg
imul
push
mov
push
aas
lea
fiadds
cmp
test
movsl
in
data16
int3
ret
jp
mov
stos
jecxz
inc
pop
dec
repz
xor
mov
je
bound
clc
sbb
ret
jge
lock
je
into
dec
cld
jg
xchg
popf
lahf
sub
xchg
jmp
lret
lret
and
inc
cmp
jne
mov
or
stc
fcmovnb
fs
inc
inc
mov
cmp
mov
orb
cmpsl
lcall
adcb
rsm
mov
and
adc
lcall
dec
sub
fwait
sbb
lcall
fwait
xchg
cmpsb
cmp
mov
scas
or
pop
add
mov
mov
sbb
mov
movsb
outsl
imul
nop
sub
scas
pop
or
mov
rorb
mov
or
out
xchg
mov
jg
nop
push
call
icebp
sub
outsl
and
sub
sub
clc
sub
gs
or
lds
push
enter
hlt
pop
push
fwait
mov
sbb
inc
mov
dec
xor
push
push
int
clc
push
les
cmpsb
and
and
sub
repnz
jb
shr
cmp
mov
push
xchg
pop
dec
int3
pop
xchg
outsb
mov
jecxz
mov
mov
int3
ret
xor
pop
add
shlb
clc
mov
pop
inc
adc
mov
or
stos
mov
mov
jg
or
add
mov
pop
sub
and
fs
xorl
cwtl
out
imul
mov
andb
out
mov
push
je
xchg
pop
loope
lods
ficompl
dec
sub
stos
lods
push
pop
jns
inc
mov
mov
shrb
aad
popa
std
inc
dec
xor
repz
out
add
xor
ss
push
sti
pop
rcrb
cmp
lods
lea
push
mov
or
pop
aas
cld
mov
mov
adc
adc
addb
mov
mov
jno
xchg
fldenv
lods
dec
push
xor
test
mov
popa
pop
adc
mov
fcompl
push
mov
sbb
xor
roll
inc
lahf
mov
ret
or
movsb
add
dec
jo
fstl
mov
jle
test
mov
fbld
lahf
pusha
and
mov
mov
xor
jge
mov
add
and
dec
mov
mov
test
adc
incb
sub
nop
dec
subps
mov
rclb
sbb
test
mov
adc
fs
adc
adc
insl
adc
inc
push
int
mov
shr
cmpsb
lods
mov
xlat
sbb
sarb
adcb
ret
nop
es
loope
in
out
aas
popf
jb
mov
stc
dec
sbb
xchg
mov
cmpsl
sbb
fisubs
jg
sti
lods
dec
mov
cmp
ror
cltd
sub
loop
es
enter
pop
add
hlt
mov
xchg
mov
or
fidivrs
mov
fisttpl
ret
inc
cmpsl
inc
movsl
cmp
xlat
xchg
pop
mov
or
xor
sbb
and
mov
mov
mov
ss
mov
cmc
adc
in
cwtl
jne
movsl
sti
into
scas
xor
jl
call
movsb
cwtl
movsl
mov
mov
ja
inc
dec
or
and
mov
jle
mov
hlt
or
addl
out
shrb
cmpb
sub
movl
add
dec
xchg
jb
sub
adc
lods
add
inc
add
mov
add
adc
sbb
pop
pop
fs
cmp
out
inc
cltd
mov
sbb
ret
ds
notl
or
inc
stos
jno
jno
mov
cmp
int3
fidivrs
mov
xchg
add
popf
push
hlt
call
jb,pn
xchg
pop
movsb
iret
test
xor
lock
stos
shll
xlat
fwait
inc
cmp
mov
jnp
dec
stos
sub
jmp
les
jnp
out
and
lods
in
xchg
cltd
jmp
pusha
jbe
mov
in
pop
cmp
cmc
cmpsb
push
inc
pop
bound
les
jl
sub
mov
sahf
jp
mov
js
add
loope
xchg
or
ret
or
and
inc
mov
enter
movsl
or
aaa
divb
enter
popa
push
cmp
shll
push
mov
pop
sub
jno
sbb
jo
inc
mov
sti
adc
jg
sahf
imul
hlt
and
test
xor
dec
lock
inc
inc
dec
lea
adcb
test
push
lods
jns
idivb
adc
mov
xorl
mov
movsb
cmp
push
jne
mov
sbb
dec
jbe
or
lds
xor
prefetchnta
and
push
repnz
xor
out
mov
or
mov
inc
lods
xorl
fistpll
pop
repnz
lds
inc
lods
jno
pushf
test
xchg
jnp
mov
stc
xchg
mov
addr16
lret
movsl
pushf
push
std
push
or
fs
cli
hlt
sub
or
cmp
cli
push
test
mov
negl
jnp
adc
shl
imul
jp
insl
push
dec
and
jo
aaa
popa
jg
js
mov
jbe
mov
add
sbb
jnp
sarb
insb
jle
int3
movsb
mov
das
lds
dec
adcl
xchg
aad
mov
or
sbb
test
and
out
stos
lock
hlt
push
outsb
loop
ljmp
xor
push
dec
imul
fdivrp
cs
xchg
mov
inc
lds
jnp
inc
pop
or
add
jo
insb
loopne
cmp
repz
test
imul
test
push
aad
jp
stc
mov
mov
imul
pop
ja
outsl
cmpsl
movsb
test
sti
jmp
sbb
stos
ss
jle
mov
fisubrs
out
cs
cltd
mov
loopne
cmp
popa
xlat
lods
sub
popa
rorl
in
lcall
fwait
push
repnz
cmp
add
lods
xchg
jnp
lcall
rcrl
xchg
fs
lods
xor
in
pop
jge,pn
out
and
in
xchg
mov
mov
das
imul
rcll
add
push
nop
xchg
jg
or
test
pop
bound
inc
aas
lods
fisubrs
sub
jnp
into
add
lahf
sarb
cmp
popf
mov
jns
shlb
xchg
add
cmp
adc
out
adcl
idivl
pop
push
push
insl
adc
popf
sahf
and
rcr
ljmp
cmp
mov
or
mov
ror
stos
mul
xor
xchg
jp
jmp
add
pop
out
cwtl
scas
sbb
maskmovq
mov
xchg
xor
mov
fstl
xlat
repnz
pop
dec
adc
test
ss
jnp
and
ljmp
mov
cmc
dec
jmp
lea
in
adc
dec
adc
mov
adc
dec
pop
cmp
sbb
in
popa
sbb
push
out
pop
orb
fidivl
dec
jp
aas
jecxz
aaa
sub
ja
push
mov
or
call
push
jg
sbb
jb
pop
push
outsb
add
adcb
cmp
out
xor
andb
rcrl
mov
sbb
mov
jne
shrb
mov
jl
cld
add
xor
sbb
pop
push
hlt
or
inc
loope
push
cmp
and
cmp
pop
adc
leave
and
fwait
pop
int
mov
mov
rorl
and
scas
push
cmpsl
into
bound
sub
sub
dec
cmpsb
inc
iret
fld
loopne
loopne
push
cli
rorl
loopne
dec
mov
loopne
sub
stos
xor
repnz
test
into
lcall
mov
cwtl
or
stos
addr16
add
loop
hlt
dec
jg
xchg
cmp
jae
movsb
inc
xchg
mov
in
adc
mov
push
xchg
mov
xor
stos
push
rcll
in
cmpsb
mov
cmp
aad
mov
pop
clc
mov
mov
mov
shr
inc
repz
test
shll
cmp
lock
mov
adc
cmp
xchg
test
add
sub
sub
test
scas
movsb
xchg
jno
jle
jl
xlat
dec
pop
mov
mov
adc
pop
mov
push
loopne
loop
pop
sub
inc
cmp
and
sahf
sbb
lea
xor
addr16
dec
mov
lea
push
mov
inc
ss
jb
adc
push
and
or
jbe
adc
mov
push
xor
adc
mov
pusha
filds
fldl
adc
mov
sub
mov
xchg
das
cli
add
add
es
mov
xchg
sbb
enter
mov
and
out
fs
jb
fldenv
mov
pushf
inc
sbb
loop
sbb
rclb
mov
jmp
bound
mov
inc
insb
sbb
mov
push
test
aas
repnz
lret
addr16
int
pop
cwtl
pop
xor
sbb
mov
jge
movsl
mov
imul
jb
jne
sub
mov
data16
popl
mov
mov
sbb
cmp
and
adc
add
push
das
push
push
dec
mov
lods
xchg
adc
hlt
lock
dec
test
mov
mov
sbb
adc
loope
imull
loop
inc
aam
xchg
sti
loop
mov
rorb
ret
insl
lcall
mov
push
in
xor
out
rcll
mov
xor
shl
movb
cmpb
adcl
jge
jno
aas
data16
loop
lahf
xor
stos
inc
loopne
repnz
mov
fs
ds
push
repz
or
aad
cmovs
popa
pop
dec
adc
mov
cs
adc
iret
out
push
adc
jmp
push
iret
outsb
push
ret
enter
fstl
mov
mov
xchg
add
push
data16
jge
dec
arpl
mov
stc
inc
mov
fidivrl
out
pop
cmp
push
add
scas
fistps
jle
add
jmp
mov
mov
mov
mov
fmull
inc
adc
mov
aas
in
push
test
xor
adc
xchg
bound
lods
mov
jo
pop
mov
push
xchg
and
dec
pushf
scas
out
sbb
rorl
lret
dec
outsl
cmp
add
jmp
lahf
subb
cmpsl
lret
or
or
mov
daa
inc
xor
sbb
out
test
ss
orb
mov
add
add
adc
pop
or
shrl
mov
decl
pop
jg
add
outsb
mov
xor
add
bound
lods
lret
dec
sahf
lds
mov
pop
imul
pop
cmp
pcmpeqw
mov
test
push
mov
jg
aas
hlt
sbb
xchg
mov
xchg
xchg
ror
shll
push
xchg
push
add
dec
mov
arpl
mov
push
xor
test
adc
ljmp
lea
dec
test
outsb
sbbb
pop
rcll
inc
push
ret
test
je
insb
cli
and
out
push
adc
imul
jns
jmp
xor
jmp
pop
fmull
bound
jns
gs
cltd
call
popf
mov
xchg
mov
push
mov
adc
pop
aaa
into
adc
js
scas
mov
mov
in
push
nop
or
int3
shlb
movsb
arpl
roll
scas
push
subb
daa
daa
pop
inc
sub
test
fwait
sti
iret
aaa
jo
outsb
jne
inc
sub
jns
pop
and
movsl
or
cld
push
xchg
adc
mov
lds
dec
scas
orb
xchg
and
add
aaa
jle
sbb
and
aas
fiaddl
mov
test
mov
shll
inc
and
out
mov
push
push
ja
mov
mov
mov
jecxz
inc
or
fsubrs
add
add
in
xchg
jo
push
idivb
push
pop
xchg
sbb
ret
fdivrs
xchg
push
fisubrl
stos
out
mov
test
ret
sahf
push
sahf
mov
mov
sti
nop
jle
adc
fcomps
movsb
dec
inc
xchg
mov
js
or
leave
xor
inc
mov
or
mov
or
popa
orl
xlat
jo
inc
roll
pushf
shll
cmc
arpl
pop
push
lds
xor
in
dec
mov
mov
insl
inc
mov
jns
imul
out
push
xchg
jge
xor
outsb
ljmp
out
js
lock
push
arpl
inc
jmp
mov
cltd
mov
popf
pop
outsl
dec
lret
mov
aas
jb
inc
ret
add
inc
icebp
xchg
and
push
int3
sub
bound
popf
xchg
mov
xor
mov
push
dec
dec
inc
repnz
sub
enter
ljmp
or
dec
pop
jle
sbb
mov
jp
stos
and
in
pop
bound
mov
iret
lret
dec
mov
jmp
or
sub
in
cvtps2pd
sbbb
in
jle
loope
lock
insb
jmp
loopne
test
xchg
xchg
popa
icebp
add
jns
dec
test
loop
pop
mov
fsave
enter
outsb
int
sub
pop
add
clc
add
pop
push
adc
sti
in
xor
sbb
mul
daa
outsl
sbb
jno
xchg
cld
push
arpl
add
xchg
mov
pop
pop
scas
clc
out
push
sbb
sub
ljmp
andl
jb
mov
es
sub
mov
push
pextrw
jp
inc
inc
or
pop
shll
sub
cmc
iret
mov
push
lahf
pop
test
sub
xchg
test
mov
ljmp
dec
dec
mov
jnp
sub
jno
lret
sbb
sbb
push
pop
jecxz
aad
dec
arpl
popf
cwtl
fsubl
insl
pop
and
xor
in
xor
xchg
fwait
leave
push
loopne
jo
and
stos
jne
stc
mov
scas
jnp
mov
data16
dec
jo
pop
ficomps
mov
ja
outsb
aam
ror
ret
xor
negl
inc
mov
shlb
xor
mov
hlt
repnz
sub
mov
jp
mov
filds
xor
adc
mov
pop
lret
cmp
popf
push
clc
sbb
and
mov
dec
enter
mov
sahf
cmp
dec
arpl
icebp
inc
popf
dec
rcrl
xor
mov
and
lret
rcll
lea
into
movsb
lds
xchg
xor
aas
loop
idiv
sub
into
nop
mov
mov
pop
movsl
and
fsts
xorl
das
out
scas
stos
out
sar
loopne
loope
jo
leave
or
insl
jno
mov
xlat
dec
add
xlat
test
lcall
shlb
push
cmp
aam
xchg
or
inc
push
nop
out
stos
mov
lods
loope
incl
int3
lds
xor
cmpsb
dec
pop
movsl
imulb
bnd
cltd
movb
mov
jnp
xchg
mov
adc
mov
adc
lds
mov
shlb
sbb
lret
xchg
mov
out
xchg
dec
xchg
cli
dec
xor
cmp
enter
adc
push
fdivl
fidivl
jmp
sbb
stc
imul
shrb
jno
push
mov
pop
testl
jb
in
outsl
push
lcall
out
roll
mov
aaa
js
mov
cwtl
int
jbe
pop
jns
gs
clc
test
pop
fisubrl
add
adc
out
jp
loope
fs
or
in
inc
fstpt
push
sbbb
jno
ds
fsubr
icebp
imul
jle
jns
leave
mov
add
aaa
cmpsb
and
inc
fsubs
sbb
cmp
push
mov
pop
xlat
sub
movsb
add
in
dec
cmp
dec
hlt
lahf
repnz
fnstenv
or
sbb
mov
movsl
lahf
hlt
jnp
sbb
xor
push
jo
sub
fnstcw
jbe
push
jl,pt
lret
push
movl
dec
aam
sbb
in
add
pop
inc
repnz
mov
pop
jg
pop
pop
sbb
lods
cmp
stc
arpl
cmp
inc
icebp
jl
iret
xchg
aaa
mov
or
loopne
dec
insl
clc
shll
xchg
pop
lock
fsubrl
imul
adc
stos
out
mov
lods
stos
aam
jae
push
repnz
cmp
insl
popf
mov
xor
test
icebp
add
dec
mov
jns
sub
or
fwait
jb
outsl
lahf
pop
mov
inc
data16
lock
xlat
mov
sub
mov
cmc
lock
jbe
test
roll
fdivs
in
lods
test
jb
xor
mov
inc
jecxz
cmp
roll
pop
lcall
out
stos
leave
mov
rolb
add
jbe
lods
aas
push
dec
arpl
hlt
xchg
repz
add
xchg
bound
adc
iret
out
mov
jecxz
aaa
lcall
mov
jns
cmc
inc
push
ja
cwtl
or
push
subl
cli
inc
lea
inc
jl
mov
cli
and
stos
or
and
shrl
pop
mov
test
hlt
or
jbe
mov
add
inc
sarb
arpl
push
into
movsb
inc
pop
dec
xchg
inc
push
push
jge
into
shr
lahf
mov
jle
das
mov
std
and
in
loop
nop
ret
mov
lds
push
inc
addb
int3
rcr
mov
lcall
cld
push
enter
dec
mov
out
aas
cmpsb
ds
sub
add
mov
scas
sar
lods
insb
adc
sbb
outsb
pop
fwait
mov
dec
add
cmpsb
fstl
stos
cltd
mov
mov
pop
lds
add
or
and
arpl
cld
data16
xorb
mov
inc
dec
jno
lret
pop
inc
daa
popa
sub
and
mov
jne
and
leave
pop
lock
nop
jmp
xor
pop
sbb
icebp
mov
push
dec
jle
xchg
jmp
data16
arpl
fwait
jo
adc
xchg
out
movsl
arpl
mov
lcall
add
inc
push
add
jecxz
pop
fs
mov
lods
addl
enter
cltd
inc
mov
sbb
sub
movsb
mov
les
mov
adc
xor
sarb
fcoms
mov
repz
mov
mov
inc
lcall
cmp
js
int3
repz
shll
add
adc
aas
xchg
call
ds
in
inc
inc
sbb
out
out
hlt
lret
cmp
and
aaa
push
aaa
sbb
cmc
cmp
push
lock
out
mov
jbe
cmpsl
dec
mov
adc
dec
aaa
dec
sub
std
push
aaa
outsb
lcall
shlb
adc
mov
xor
ds
loop
push
inc
adc
fwait
push
add
pop
js
daa
loopne
in
or
xchg
mov
push
and
and
add
sti
sub
adc
mov
dec
fwait
nopl
arpl
out
sub
cs
lock
sub
xor
fnsave
int3
cld
jne
ds
loope
push
add
fistps
outsl
pusha
loop
je
ljmp
loope
aam
aaa
sub
sbb
jecxz
mov
div
add
dec
ret
mov
jmp
dec
in
lcall
jo
jno
int3
inc
mov
mov
adc
cmp
jle
adc
fisubrl
push
push
xlat
maskmovq
notl
mov
xor
dec
mov
enter
decb
leave
imul
lds
cld
push
cs
test
out
lea
fimuls
cmp
xor
addr16
xor
push
pop
ret
test
in
in
fstps
pop
fdivrs
dec
pop
fwait
outsb
xchg
mov
sbb
add
sub
push
mov
addr16
aam
cmp
mov
sbb
push
inc
dec
sbb
repnz
pusha
mov
push
xchg
sub
jno
test
outsb
das
hlt
sbb
push
scas
insl
rorl
jnp
dec
inc
js
pop
ds
jnp
jl
sbb
sbbl
sahf
sbb
fiadds
arpl
and
test
frstor
stos
sub
aad
and
mov
clc
je
aaa
xor
cltd
pop
add
dec
in
aam
jl
xor
mov
pop
and
int
outsl
aad
imul
movsb
inc
push
in
push
mov
iret
or
out
fildll
push
jb
sti
popf
ret
int
dec
jl
imul
bound
daa
or
out
cmp
in
sbb
push
push
outsb
imul
adc
xchg
clc
sub
sub
inc
sbb
out
jl
or
cli
mov
pop
les
and
test
enter
push
out
fisttpll
call
in
mov
dec
loope
iret
lods
dec
mov
sahf
mov
fnsave
in
mov
pop
rorl
xchg
sub
rcrb
jmp
aad
fildl
fst
cld
imul
ret
pop
test
or
lea
or
adc
dec
push
ljmp
repz
fisubrs
inc
push
lds
shrl
in
or
inc
jbe
outsl
sbb
movsl
pop
mov
test
movsl
movsb
mov
lock
jge
and
xor
int3
lret
sbb
mov
dec
dec
mov
push
jmp
dec
inc
lahf
dec
and
test
mov
xchg
fwait
arpl
mov
cmpsb
int3
mov
lods
push
jmp
pushf
push
out
inc
sub
faddp
or
adc
mov
sub
pop
push
sub
push
ret
or
or
fs
sbb
cli
inc
aam
lock
lock
lods
jmp
test
sbb
cmc
sbb
andl
add
mov
ljmp
and
in
xchg
push
mov
push
pusha
imul
mov
test
subl
loope
mov
dec
sbb
cmp
outsl
xor
jmp
push
insl
cmp
or
inc
mov
and
add
adc
popf
gs
push
cs
sub
and
mov
inc
pop
pop
addr16
hlt
mov
aas
fistps
es
sbb
xchg
outsb
mov
inc
clc
sbb
and
cmp
inc
push
movsb
js
xorb
pop
in
mov
mov
mov
repz
pop
xchg
or
push
cltd
add
xchg
int
inc
sub
mov
mov
fistps
cwtl
pop
pop
ja
sub
cmp
dec
fwait
in
test
cmp
cmpsl
mov
in
adc
xchg
pop
outsl
pop
rcll
shrb
or
and
cmpb
sahf
push
jae
xchg
in
xorl
mov
fdivrl
mov
sub
sub
fcoms
xor
dec
repnz
sbbl
add
push
clc
push
imul
aas
xor
into
xor
pop
and
sub
mov
lods
movsl
cmp
dec
sub
inc
stc
stos
xor
movsb
push
cmpsl
loope
lea
adc
insl
or
bound
add
clc
inc
mov
mov
lret
lods
mov
lock
xchg
mov
cmp
lcall
and
push
in
cwtl
inc
sub
bound
mov
inc
mov
sub
outsl
scas
nop
xchg
mov
repz
pop
mov
mov
lcall
jno
add
scas
cmp
jae
or
mov
xchg
rcll
mov
pop
jnp
pop
rcrl
out
jle
xorl
push
pushf
dec
adc
ret
lds
sbb
push
int3
push
imul
fisubs
xchg
pop
aas
jg
gs
sbb
sahf
adc
push
inc
pop
outsl
and
insb
jge
scas
cmp
jmp
fwait
out
inc
cmp
xchg
std
or
fiaddl
test
xchg
subb
push
add
jl
jle
insb
inc
jae
test
ret
lahf
dec
push
test
pop
movsl
rcrl
bound
adc
xor
and
sub
lcall
stc
in
sbb
xchg
rolb
shrl
sahf
addr16
xor
lods
xor
push
fwait
mov
dec
sbb
dec
mov
ficompl
inc
and
and
mov
sub
xor
mov
mov
movsl
jp
xchg
loop
adc
inc
loopne
jp
jp
divb
inc
dec
nop
dec
pop
and
xlat
test
and
cmp
insl
jge
or
nop
mov
lcall
ficomps
lock
cli
stc
jp
pop
xchg
pop
repnz
adc
ret
push
mov
lret
cmp
sbbl
icebp
les
mov
aaa
mov
repz
int
call
sbb
xchg
push
pop
and
mov
xchg
pop
ljmp
stc
jne
pushf
cmp
cmp
xchg
xor
xor
ljmp
push
cwtl
imul
loopne
fmull
jecxz
pop
mov
cltd
stc
imul
lds
inc
and
mov
lock
xor
scas
inc
adc
push
jecxz
lods
sub
mov
in
out
push
sbb
popf
push
push
sbb
cmp
cmpsl
shl
xchg
test
imul
and
int3
add
push
aaa
and
out
and
repnz
jno
adc
ret
repnz
pop
fistpl
shlb
sub
ret
mov
xchg
cmp
sub
jp
ds
shlb
cmp
push
notl
pop
in
sub
cs
xor
sub
in
jl
test
cli
aaa
movsl
and
movd
lock
jecxz
xchg
das
std
add
in
jae
pusha
pop
outsb
dec
sahf
lods
mov
cmp
xchg
cmp
insl
inc
pop
mov
push
clc
scas
mov
pop
mov
ss
pop
mov
rcrl
addl
int3
outsl
sbb
sub
push
sub
cwtl
cld
add
addr16
mov
loop
jns
ret
addr16
nop
into
rorb
push
rorl
test
xor
add
mov
pop
sahf
cli
mov
ljmp
in
stc
xchg
lret
push
mov
mov
mov
loope
sbb
scas
call
movlhps
rol
icebp
mov
call
dec
jnp
inc
or
in
ds
pop
rcr
sbb
dec
insl
hlt
data16
cwtl
lahf
pop
cmp
test
out
mov
imul
mov
sub
sbbb
mov
outsl
sub
lret
icebp
idivb
push
mov
loopne
outsl
mov
and
push
push
lea
cmp
sub
repz
add
push
loop
push
adc
int
cmp
pop
inc
pop
movsb
xor
shlb
xchg
xchg
cmc
mov
cmp
mov
pushf
and
add
mov
jae
out
and
adc
jne
movsl
cmpsb
rol
and
inc
adc
mov
pop
jle
testl
and
pop
inc
ja
xchg
nop
sarb
ficoms
push
xchg
pop
adc
inc
in
shll
loope
loope
insb
cmp
sub
sti
pop
adc
insb
jnp
xchg
pop
xor
push
lds
pop
lds
sbb
shlb
sbb
shrb
or
lods
aaa
test
xor
inc
xchg
shrl
lods
pop
loope
jae
dec
ja
mov
std
bound
stos
pushf
movsb
shrl
pop
jge
mov
imul
cmp
mov
popa
jnp
pop
dec
das
inc
ja
sbb
push
js
cmc
in
xor
sbb
add
dec
rol
scas
scas
mov
fsts
dec
mov
and
adc
dec
add
rcrb
mov
xchg
or
notb
das
dec
cmpb
jp
fld
pop
cmp
sti
mov
sbb
popl
adc
gs
or
push
adc
data16
dec
lcall
or
add
movq
test
inc
push
mov
push
daa
mov
hlt
xor
arpl
xchg
data16
loopne
adc
into
sbb
jns
aam
lods
fsubrl
jnp
sbb
pusha
in
push
sub
jo
in
mov
push
add
pop
xor
movsb
outsb
js
mov
or
hlt
and
cmp
inc
movsb
sti
and
or
jl
xor
xchg
mov
xchg
pusha
xchg
mov
jne
mov
in
mov
repz
mov
stos
add
fistl
lea
aas
mov
xchg
test
sbb
push
addr16
cmc
pop
leave
jns
cmpsl
mov
jne
lcall
xor
gs
push
and
pop
jg
test
sub
mov
push
and
dec
pusha
repnz
cmp
xchg
stc
jmp
pop
fwait
out
clc
inc
lret
lods
andb
mov
jle
scas
lahf
repnz
pop
inc
shll
aas
sub
out
aam
and
scas
adc
push
sbb
scas
xor
push
pushf
inc
add
dec
mov
mov
push
shll
jnp
aam
jg
xchg
data16
ret
fcmovu
xlat
cwtl
jg
aas
and
push
fneni(8087
jge
or
iret
or
dec
xlat
sub
in
mov
outsb
negl
pop
sub
pop
test
push
xchg
xchg
xor
adc
add
cmpsl
loope
testb
aad
data16
fldl
mov
push
out
dec
xchg
in
cmpsb
clc
sub
jp
je
iret
bound
subb
fs
aad
vpmaxub
mov
push
jl
in
mov
adc
fldl
or
fdivl
jecxz
mov
and
push
adc
jecxz
cwtl
push
mov
leave
mov
ret
addr16
icebp
pop
shl
and
sbb
out
sub
das
loope
push
pop
nopl
cwtl
xor
fistps
mov
or
int
cmp
movsb
jle
mov
cli
push
inc
inc
movsb
dec
inc
ret
call
mov
cmp
adc
jl
cmpsl
or
and
sarl
daa
inc
jnp
das
sbb
fimuls
pop
mov
lds
test
inc
fcmove
fdivrs
xchg
jg
mov
mov
jge
loop
push
jno
sbb
and
iret
pop
lods
ret
loopne
cmp
sbb
mov
iret
aad
mov
das
add
jbe
mov
mov
stos
cli
add
inc
stc
mov
mov
xor
out
mov
dec
and
fnstcw
shrb
outsl
loop
pop
xlat
mov
repnz
mov
sti
fbld
push
ret
and
sub
and
jg
insb
dec
cli
fldln2
rorl
push
push
iret
cs
mov
loop
inc
and
and
outsl
jb
sti
cmpsl
or
mov
lea
mov
gs
mulb
jno
dec
popf
orb
inc
leave
push
lods
inc
movups
cmpsl
xlat
dec
add
loopne
std
dec
push
fwait
pop
add
dec
mov
or
xchg
jl
pop
add
das
mov
cmp
xchg
ds
in
jl
imul
lock
push
xor
mov
out
ljmp
mov
shlb
jle
pushf
xchg
cld
inc
mov
in
lcall
jbe
pop
outsb
lods
mov
push
mov
mov
jmp
sub
int3
push
add
mov
mov
add
and
mov
cld
aas
fs
sbb
mov
dec
cmpsl
mov
push
sbb
icebp
sub
push
push
in
pop
mov
xchg
mov
je
iret
inc
call
aas
mov
inc
sti
outsb
lcall
mov
push
test
lea
sbb
push
pop
addr16
hlt
fs
mov
add
dec
mov
fldl
addb
in
mov
dec
or
and
mov
es
cmp
in
repz
lcall
add
test
push
sbb
push
sbb
push
lea
les
daa
pop
mov
mov
in
sub
jae
data16
pusha
lods
sbb
lea
dec
push
push
imul
andw
or
pop
sub
xchg
adc
aam
pop
js
mov
or
hlt
mov
xchg
andb
dec
call
loopne
stc
cmc
sub
push
les
cmp
movsb
xor
fistpll
mov
sub
cmpsl
das
fisttps
mov
mov
push
pop
imul
repnz
arpl
clc
test
jns
mov
rorl
mov
add
fsubrs
js
into
mov
clc
lcall
inc
loop
xchg
cmp
add
pop
push
in
nop
loopne
pusha
push
test
lret
or
lgs
loope
cmp
sbbb
shll
xor
push
popa
je
mov
pop
mov
dec
sub
and
lret
jnp
leave
jns
xlat
dec
jl
out
das
push
aam
inc
pop
in
inc
js
clc
mov
cmc
sarb
cmp
scas
xchg
adc
aad
or
mov
fnclex
push
mov
out
jne
mov
push
push
ljmp
in
sbb
and
xlat
jecxz
movsb
push
faddl
cltd
outsl
ljmp
pop
loope
xchg
dec
mov
mov
mov
dec
cmp
or
mov
inc
and
adc
lcall
cmpsb
jle
cmp
nop
es
outsb
jmp
lea
sub
add
sbb
lods
dec
push
mov
mov
sbb
fildl
and
test
jmp
push
cli
dec
adc
sub
cld
fists
or
jecxz
mov
pushf
filds
adc
mov
dec
pusha
inc
cld
xchg
dec
add
and
out
push
pop
fcmovnu
inc
test
mov
jecxz
mov
inc
and
int3
jle
gs
xchg
fdivrs
sub
push
xchg
mov
je
out
sub
or
mov
outsb
testb
out
xor
fiadds
repz
daa
icebp
bound
lcall
xchg
xchg
in
add
push
xor
repnz
shll
add
mov
scas
push
push
movsl
mov
xor
mov
sar
fwait
addr16
repnz
sbb
xor
cmp
mov
mov
ljmp
pop
mov
lock
cld
xchg
push
popf
cmpsl
mulb
sub
in
bound
loope
xor
dec
shr
or
fsubrp
push
mov
movsb
loope
jb
mov
sahf
xchg
adc
test
lcall
enter
js
xchg
and
inc
dec
mov
out
out
xor
xor
mov
adcl
sub
cmc
mov
mov
ljmp
push
inc
push
or
fcomip
call
mov
movsb
imulb
cmp
cmp
cld
sbb
lret
xor
out
jp
lods
push
mov
mov
xchg
stc
dec
push
dec
cmp
cmp
cwtl
out
mov
in
dec
lret
xchg
jnp
daa
sar
loop
jmp
ljmp
pop
lea
push
cmc
push
xchg
lret
or
push
nop
in
adc
aas
xchg
adc
test
jmp
out
pusha
test
fs
xlat
cmp
cli
jne
fcoml
test
scas
xchg
and
btr
jnp
xor
pop
nop
jp
add
lea
sar
mov
jecxz
dec
mov
stc
ds
jle
testl
pusha
repz
mov
aam
xchg
mov
or
shl
cli
cmc
ljmp
in
sub
scas
push
jno
fsubl
ret
es
imul
pop
cmp
loopne
fs
mov
jnp
nop
cmpsb
shrl
data16
popa
jnp
xor
mov
jbe
cmp
push
jmp
adc
aas
mov
fidivrl
lret
loope
mov
pop
mov
push
imul
or
jp
in
fs
xchg
cmp
sbb
adc
fstpl
xor
mov
xchg
mov
popf
mov
dec
cmp
test
sbb
inc
idivb
fidivl
ret
mov
mov
test
or
jge
pusha
repz
movsb
ret
int3
jno
mov
sub
dec
mov
std
jl
push
push
enter
fisttps
jbe
lods
imul
pop
mov
cmpsl
mov
push
push
lds
and
into
aaa
aam
cmp
addr16
xchg
aad
fistpll
mov
pop
pop
pop
cmp
push
ja
inc
pop
aad
xchg
out
ja
push
add
jo
cmp
mov
stos
lock
mov
xchg
cmp
fmulp
mov
cmp
push
cli
stos
clc
into
bound
add
shl
inc
pop
insl
xlat
ljmp
aas
jecxz
and
sarb
dec
sub
filds
inc
pop
push
shl
fwait
dec
xor
dec
add
jnp
add
movsb
cld
pop
and
or
mov
push
outsl
lea
xchg
lret
pop
inc
push
pop
inc
jmp
sub
inc
dec
pop
out
cmp
arpl
mov
mov
xchg
xorl
addr16
jmp
lods
mov
rorl
mov
jns
push
and
add
loope
push
sbb
xchg
lds
cmpl
pop
fbstp
dec
ror
int3
popl
jb
push
mov
xor
scas
xor
xor
lret
dec
push
es
out
idivl
dec
cmc
mov
dec
cwtl
xor
lds
sbb
pop
cmp
xchg
popf
adc
ljmp
push
clc
dec
pusha
mov
sbb
ja
jmp
mov
jg
incl
add
pop
inc
mov
pop
mov
mov
sarb
jbe
mov
rcrl
mov
pop
cmc
pop
sub
inc
std
outsl
int
push
push
dec
mov
dec
xchg
inc
xchg
int
cli
movsl
jno
lods
call
shlb
shrb
enter
out
mov
out
lea
push
dec
sub
and
sbb
xor
pop
inc
ja
xor
inc
jecxz
rol
jge
in
inc
mov
mov
pop
cwtl
mov
iret
mov
jae
call
cld
and
mov
stc
in
mov
cmp
mov
out
add
jbe
sbb
imul
jo
or
adc
mov
and
dec
adc
mov
mov
out
pop
xchg
mov
ret
outsl
mov
push
fisubrs
xor
popa
bound
xor
jmp
jg
dec
xchg
bound
sub
dec
xor
test
ror
out
call
mov
sahf
in
mov
dec
push
push
push
lock
mov
push
mov
aas
xor
lods
add
jecxz
mov
and
push
sub
cli
xchg
nop
loop
sub
sbb
loopne
dec
je
clc
mov
movsl
mov
shlb
icebp
in
jl
leave
xchg
cs
lock
inc
gs
mov
and
cmp
daa
out
imul
hlt
adc
mov
push
movsl
jge
jmp
scas
hlt
test
sub
mov
inc
popf
les
scas
xlat
xor
stos
filds
gs
push
inc
pop
mov
test
and
fisubs
xchg
sub
lds
dec
imul
cmp
xor
mov
sub
test
xor
leave
xchg
fwait
xchg
mov
hlt
add
dec
lds
cmp
lock
mov
into
in
mov
int
add
sbb
ljmp
jno
ljmp
fdivrl
fadds
nop
push
adc
ret
sbb
sbb
cli
sub
leave
jg
fbstp
or
sti
loopne
icebp
stc
mov
add
enter
adc
mov
out
pop
mov
xor
jo
jns
cmp
dec
lea
xchg
mov
jle
cmc
mov
bound
cmp
pop
ljmp
cmpsl
xchg
icebp
sub
addb
jne
push
sub
jg
adc
sar
mov
into
cmp
adc
and
or
enter
aaa
xor
adc
sbb
pop
int3
sbb
int3
rorb
loop
scas
dec
sub
inc
cld
in
mov
mov
push
sub
popa
test
jns
je
loope
dec
xor
mov
fstl
cmp
ljmp
adc
popa
add
cs
andb
dec
push
mov
pop
fwait
inc
out
adc
sbb
dec
fnstcw
mov
nop
xchg
jp
in
lea
pusha
add
sahf
seta
inc
js
pop
mov
mov
outsb
lds
and
shlb
fnstenv
jg
pop
test
rol
add
and
or
push
push
mov
mov
push
jl
cltd
mov
push
push
mov
je,pt
enter
jl
xchg
mov
fnsetpm(287
incb
mov
repnz
in
adc
mov
es
and
jmp
out
in
lods
lods
adc
test
test
or
jmp
push
lods
lret
shll
mov
add
test
hlt
iret
mov
scas
lret
mov
ljmp
pop
fisttps
jne
idiv
and
inc
stos
jbe
xchg
jb
std
jno
adc
pop
adc
movsl
hlt
mov
lods
pusha
push
xchg
dec
bnd
sub
push
rcrb
mov
cmp
add
jg
insl
adc
cmp
add
xor
dec
jmp
fstpt
mov
mov
pop
dec
inc
pusha
cs
lret
roll
aam
inc
dec
xchg
fisubrs
cmp
mov
outsb
aaa
clc
mov
test
sar
sbb
cli
std
xor
mov
push
lcall
mov
addr16
mov
add
int3
std
lods
fwait
sahf
cmc
mov
adc
or
aam
inc
ds
jbe
jl
mov
pop
push
int3
int3
mov
pop
lcall
dec
add
loop
inc
or
rcrl
and
in
push
push
stos
cmpsl
fsubr
mov
arpl
sbb
aad
pushl
jns
cmpsl
leave
mov
adc
cmp
iret
pop
stos
xchg
fxch
mov
push
push
push
stc
lea
out
scas
ljmp
test
push
jae
ss
dec
mov
call
mov
sbb
inc
les
das
push
add
add
jno
insl
in
push
dec
mov
sbb
sub
xchg
xchg
jp
push
sbb
xchg
push
out
push
enter
jae
fwait
rcrl
dec
jnp
jns
jb
or
cmpsb
and
shrl
xchg
in
xor
dec
je,pn
aas
jbe
cmp
jns
mov
push
xor
es
jmp
in
or
mov
imul
hlt
rcll
mov
dec
iret
add
sti
clc
xor
ja
jp
or
hlt
adc
out
fnstcw
or
jge
push
sti
pushf
arpl
stos
inc
pushf
mov
ret
dec
and
outsb
and
mov
loope
fisttps
fistps
push
add
das
adc
scas
dec
gs
scas
int
jg
nop
int
shll
jmp
nop
dec
push
xchg
adc
sbb
mov
and
dec
cli
icebp
pop
jg
xor
and
stos
pop
rcr
lret
adc
jno
int3
xchg
jo
jmp
cmpsl
adc
stc
jns
aas
mov
pop
stc
inc
jmp
cmp
cmp
js
icebp
ds
dec
cltd
imull
xchg
aaa
data16
sbb
mov
insb
fildl
push
jmp
mov
and
in
out
dec
imul
movsl
pop
jge
aad
and
pop
imul
lret
movsl
xlat
out
jbe
arpl
xchg
das
push
rcr
arpl
insl
test
mov
push
mov
jle
xlat
adc
push
idivb
ret
or
mov
push
imul
dec
jb
pop
aaa
adc
or
dec
fldcw
xor
nop
push
add
jns
loopne,pn
dec
add
enter
sub
sub
push
cmp
push
filds
cmpsb
mov
stos
shlb
jns
inc
lcall
mov
repz
loopne
pop
hlt
int
adc
std
sbb
in
ljmp
dec
and
and
and
data16
sub
out
mov
int
jne
ljmp
mov
adc
rolb
or
imul
sub
movsl
xchg
or
dec
icebp
xchg
or
ja
pop
jb
mov
lea
stos
cmp
into
mov
pop
iret
xchg
sub
lds
outsl
lret
popf
in
jecxz
mov
xor
adc
out
sub
std
repz
xor
pop
inc
inc
rcrl
decl
push
jle
outsb
cs
fs
cmpsb
pop
xchg
cld
mov
xor
mov
or
dec
cmpsl
addr16
test
push
pop
leave
xchg
pop
ss
sbb
out
ljmp
mov
mov
icebp
out
test
cmpsl
sub
jecxz
push
jp
inc
mov
outsl
jb
lods
adc
xor
movsb
pop
sarb
or
cmp
add
push
daa
xor
ret
sbbb
ret
cmpsb
js
notl
pop
in
icebp
cmp
jge
stos
stos
xchg
sarl
push
stos
xlat
mov
cmp
mov
jge
inc
cmpl
es
jns
push
push
inc
fildll
xchg
mov
mov
std
push
aad
icebp
cmp
fwait
add
xchg
mov
lret
xchg
repz
and
lret
aam
icebp
pop
push
icebp
addr16
jge
push
dec
or
fcoms
cld
imul
inc
out
jae
test
pop
scas
test
push
rorl
lods
cmpl
mov
pop
xchg
adc
loop
sub
mov
xchg
outsb
pop
xor
add
xchg
or
pop
push
mov
push
fucomip
adcb
xchg
push
lar
sbb
jnp
ja
jmp
dec
out
shr
pop
dec
xchg
iret
pop
xor
pop
xlat
cld
and
out
bound
movsb
mov
in
xchg
dec
push
sub
mov
test
rorl
repnz
ljmp
mov
imul
cmc
cmc
lahf
cmp
push
test
inc
fucomp
lcall
repnz
push
sbb
mov
iret
fwait
push
inc
xor
xchg
stos
js
addr16
adc
fs
add
ficompl
xor
shr
shll
mov
fstpl
lods
sub
outsb
test
add
leave
jmp
sub
mov
push
test
dec
jle
in
idivb
mov
pop
or
jb
iret
inc
pop
std
fxtract
call
push
pushf
dec
xor
dec
lahf
cld
jno
or
and
addb
add
mov
adc
es
pop
stos
mov
shr
xchg
test
sar
mov
sbb
push
xchg
push
push
mov
inc
mov
imul
test
gs
mov
repnz
pop
pop
mov
ret
and
cld
xchg
lahf
int
imul
shrb
into
adc
ss
adc
ja
sub
and
rcl
mov
inc
jecxz
test
sbb
add
jle
outsl
sub
adc
lods
mov
popa
out
push
inc
dec
add
cld
lds
jnp
popa
jnp
and
inc
scas
pop
dec
jg
xchg
ss
xchg
repnz
or
adc
scas
sahf
xor
sub
aaa
xor
lret
lea
hlt
test
pop
and
aad
push
call
repz
xchg
mov
aas
mov
sarb
lret
lcall
dec
testl
cmp
rorl
mov
mov
xor
push
aam
aam
xchg
iret
xchg
or
mov
jo
in
into
addr16
jns
imul
pop
lock
pop
fstpl
or
clc
cwtl
jne
or
pop
in
lret
stos
mov
dec
push
sub
test
arpl
iret
fs
xchg
pop
jle
mov
fstl
sub
das
imul
adc
int
out
push
mov
mov
jb
mov
cmp
lods
pop
inc
stc
sub
movb
das
xchg
in
in
test
popf
lock
dec
ret
fdivrs
in
xchg
lea
adcb
add
das
clc
repnz
and
femms
loop
cs
ss
add
hlt
jnp
jae
outsl
out
rorb
xor
and
stos
cmp
pop
clc
dec
dec
mov
xchg
lock
call
dec
lock
into
push
mov
add
lea
jo
cmp
xchg
push
aad
scas
cltd
test
aaa
sub
mov
arpl
push
in
add
mov
pusha
mov
add
imul
push
cmp
std
movsl
mov
pushf
out
sbb
jnp
mul
je
ljmp
imul
jge
leave
es
sub
fsubrs
cld
and
and
push
out
lret
aas
cmp
outsb
xchg
sub
pushf
imul
push
nop
inc
fiadds
jae
nop
mov
roll
es
fwait
jno
mov
xor
je
incb
push
mov
cmp
aas
pop
push
xor
inc
out
pop
and
jbe
shlb
int3
add
pop
sub
mov
mov
movsl
hlt
adc
cmp
in
cli
inc
out
push
imul
call
push
int3
sub
mov
sbb
dec
lcall
scas
pop
mov
xchg
adc
orl
test
sti
add
xchg
jecxz
je
fstpt
loopne
incb
sarl
pop
sbb
negl
scas
xor
les
sbb
in
jne
out
sub
rorb
or
notl
lret
sbb
insb
mov
cmc
das
ja
add
cld
stos
dec
mov
cs
mov
jg
loop
jae
das
sub
es
stc
cmp
into
int
mov
adc
fwait
jne
stos
cltd
arpl
mov
leave
scas
and
addr16
aaa
cltd
scas
sahf
lods
lret
mov
xchg
in
push
fcoms
nop
imul
jae
jns
notb
cmp
push
fdivs
sbb
fcomps
jb
inc
pop
cltd
gs
ret
andl
xor
pop
icebp
lods
jnp
leave
popf
dec
loope
xor
lret
mov
out
fdivrs
call
mov
mov
mov
adc
mov
add
push
xchg
sub
sbb
movsb
jg
mov
push
orl
rcrl
test
add
xor
push
inc
arpl
mov
inc
mov
fcmovu
add
leave
cmp
xor
dec
sbbb
lcall
test
cli
or
shrb
inc
mov
clc
or
mov
gs
sbbb
inc
push
push
add
xor
imul
push
stos
add
pop
cmp
lods
dec
adc
jmp
shlb
inc
xchg
fs
rcrb
cmp
xor
scas
mov
fdivl
sbb
ljmp
inc
and
negl
clc
insl
cmp
imul
mov
and
sub
or
pop
pop
or
mov
fcoml
sbb
lahf
cmpsb
xchg
movsb
popf
xchg
outsl
fwait
mov
add
inc
cli
adc
loop
das
pop
les
adc
ds
lods
test
and
loop
dec
cmp
nop
rcll
cmpl
mov
test
cltd
imul
dec
sbb
cmp
mov
pop
xchg
fxch
add
push
xor
lock
outsb
ljmp
or
cwtl
mov
outsb
sti
dec
in
sbb
xor
pop
popf
sbb
enter
jmp
aas
cmpsl
jmp
push
stos
mov
jmpw
jge
jb
imul
lret
rorl
sub
jg
les
enter
mov
ja
fdivrl
mov
dec
fdivrl
mov
push
pop
hlt
stc
sbb
and
add
jo
es
leave
lret
pop
int3
jl
dec
ss
pop
jns
out
daa
xor
pop
mov
outsb
jae
or
hlt
ja
mov
xor
dec
scas
int
aas
loop
cmp
out
leave
jne
dec
loope
divl
pop
cltd
xor
adc
call
or
cmp
cmpsb
shr
pop
out
inc
xchg
pop
repnz
sub
push
ficompl
mov
pop
push
orb
shl
jmp
ret
jnp
cmp
adc
mov
scas
mov
es
leave
mov
mov
mov
add
fiaddl
cli
ja
test
pushf
dec
push
loop
or
pop
xchg
pop
mov
mov
std
adc
jmp
mov
xlat
adc
pop
out
test
xor
fcomp
jp
add
push
out
scas
popa
mov
mov
fdivr
icebp
in
shr
sarb
ud2
addr16
test
frstor
mov
ftst
rorb
mov
mov
lcall
adc
pushf
or
ficompl
fmuls
fcompl
ss
inc
addr16
sbb
sbb
add
inc
adc
test
lds
jno
cmpsl
fisttps
jg
movsl
and
push
int
ljmp
aam
jne
in
push
es
ret
fidivl
mul
jae
jle
addb
and
or
push
outsl
inc
mov
dec
int3
mov
mov
adc
mov
shrd
fsubl
jge
jmp
pop
or
icebp
insl
fwait
or
inc
cmpl
imul
loope
inc
sub
pop
sub
aas
mov
inc
fcoml
fs
lock
adc
push
xor
aaa
das
xchg
sbb
lret
lods
add
mov
andl
cmpsb
leave
add
cmp
loopne
mov
ret
xor
pusha
pop
scas
loop
sub
add
cli
sub
inc
lcall
js
pusha
sarl
fistps
pushf
aam
je
out
pop
pop
call
dec
das
push
jmp
mov
jmp
push
or
xchg
pushl
lods
fistl
dec
pushf
mov
or
nop
and
movsb
lret
sbb
das
lea
shlb
xorl
jge
or
movsl
dec
adc
inc
cmp
mov
inc
lret
push
orl
cmc
sar
mov
ds
xor
add
lods
loope
sbb
adc
fsubs
insb
pop
mov
fldl
push
xor
push
rorb
jbe
stc
testl
and
nop
ret
cwtl
fsubs
mov
and
stc
sbb
pusha
je
pop
imul
mov
cltd
jp
pop
repnz
mov
cmp
adc
insl
pop
jae
insb
into
sub
enter
das
popf
in
sbb
xchg
adcb
adc
addr16
fisubrl
aas
test
dec
push
ds
adc
cmp
push
cmp
jae
ficompl
cmp
scas
mov
pop
push
sub
jnp
movsb
in
sub
or
inc
aaa
sbb
pop
mov
and
xchg
jl
test
cld
sbb
sub
dec
addps
pop
fs
lods
fistps
jl
lods
incb
push
js
insl
fcoml
icebp
and
fwait
sub
jmp
mov
xor
push
push
fiadds
xchg
inc
inc
clc
adc
ljmp
mov
dec
sarb
arpl
mov
outsl
dec
pushf
xlat
add
mov
cs
out
mov
aaa
nop
rorb
test
aad
cmp
jge
jmp
push
icebp
add
std
outsl
dec
mov
or
int3
cmp
mov
sbb
setae
out
popf
and
mov
pop
xchg
xchg
cmp
or
mov
in
sti
jecxz
les
movsb
sti
lods
xchg
ljmp
movb
xor
sbb
pop
ljmp
xchg
clc
xchg
jl
scas
addl
mov
jg
mov
and
push
mov
lret
mov
mov
jno
cmc
adc
or
push
push
mov
inc
enter
aas
jg
mov
sbb
cmp
jmp
and
shrl
and
jmp
pop
ret
jge
mov
xchg
mov
push
pushl
mov
ret
jnp
pushf
and
movsb
mov
jb
mov
fimull
in
pop
cwtl
std
dec
fisubs
xchg
rcrb
xorl
ja
dec
test
sub
enter
jo
pop
jns
aas
sub
addr16
int
push
dec
mov
fldcw
mov
adc
or
mov
xchg
insb
lods
jmp
mov
lock
cwtl
mov
mov
pop
cmc
js
bound
dec
iret
sub
pushf
pop
std
jbe
je
jg
mov
in
rorb
push
cmpsb
xchg
mov
lods
mov
cmp
int
insb
add
in
sub
xchg
fisttpl
cld
jp
inc
and
and
inc
mov
js
sbb
nop
shrb
cs
bound
push
cltd
fmull
fnstcw
adc
pop
test
adc
jnp
leave
in
adc
push
rcrb
insb
fdivr
xor
addr16
aam
mov
lds
adc
adc
adc
ja
or
mov
adcl
dec
fcoml
not
pop
loop,pn
push
sub
lods
sub
push
sahf
ret
faddp
sbb
adc
add
jle
mov
adc
pop
and
mul
sub
arpl
inc
jp
faddl
data16
mov
test
cmp
into
inc
sbb
aas
xchg
pop
xchg
in
fiaddl
add
mov
loopne
lret
push
push
negl
mov
jmp
or
xchg
call
lock
addr16
push
push
std
inc
push
jbe
imul
inc
and
rclb
sub
xor
mov
push
xchg
mov
cmpsl
scas
or
std
cld
pop
lahf
sbb
xor
mov
shlb
inc
mov
ss
mov
orb
sbb
out
in
jmp
mov
jns
add
enter
pop
mov
aam
repz
addr16
mov
aad
and
sbb
add
or
pop
jl
ljmp
or
enter
push
push
mov
push
mov
cmpsb
mov
data16
adc
lods
xchg
jge
mov
popf
sbb
loope
xchg
mov
xchg
mov
scas
popl
lods
or
pop
int
orl
lods
dec
adc
mov
movsb
out
xor
cld
push
mov
pop
fdivrp
int3
int3
jmp
xor
insb
test
jle
sbb
mov
sub
sub
mov
and
cmp
lret
fmuls
cmp
rorl
cld
bound
das
ss
fstps
sub
mov
stos
lods
add
xchg
loopne
xor
pop
dec
sub
mov
inc
cmp
int
jecxz
inc
jl
jo
mov
jns
fs
or
lds
or
out
and
jae
jge
mov
xchg
lahf
ss
insl
loopne
sub
xchg
add
xchg
sarl
out
ds
cltd
rcl
cmp
and
and
mov
int3
cli
ljmp
jecxz
fidivrl
inc
xchg
ret
out
mov
out
rcr
add
fmull
jo
repz
cmp
out
and
aas
pusha
mov
inc
push
push
mov
cmp
push
fildl
popa
pop
dec
mov
jecxz
imul
in
cld
pop
xchg
sub
push
adc
leave
jecxz
add
es
dec
inc
xlat
loop
cwtl
cltd
mov
dec
jl
outsl
aas
jg
add
ret
jecxz
sbb
sub
sahf
jp
and
xchg
push
inc
rcrl
and
popf
lret
xchg
je
and
iret
lea
lods
mov
loopne
pop
xchg
push
jae
ja
test
xchg
inc
shrb
push
fstpl
mov
push
lahf
push
movsl
outsb
loop
aaa
shr
ret
mov
cmp
sbb
sbb
into
jbe
adc
aad
push
cmpsl
leave
and
dec
xchg
sbb
scas
adc
data16
push
sahf
dec
push
xchg
pop
xor
cmp
jno
mov
mov
out
and
test
insl
out
andb
mov
fstp
pop
scas
add
popf
or
hlt
sbb
std
cmp
push
and
mov
out
lret
mov
test
push
mov
ds
jg
xchg
std
ss
push
sarl
adc
jl
out
bnd
in
mov
dec
fmull
adc
pop
pop
jo
aad
inc
inc
stos
das
or
scas
gs
addl
mov
or
adc
loopne
lret
push
les
imul
xchg
adc
mov
jg
inc
or
pop
or
sbb
shll
add
cmp
cmpsl
inc
inc
and
fisubrl
ror
loope
cmp
mov
mov
popf
xor
adc
std
shll
loop
out
subb
fistps
lret
ret
fisttpll
cmp
pop
daa
sbb
xor
stos
add
stos
mov
add
xor
mov
out
fldl
rclb
xchg
pop
sbb
cmp
fwait
addr16
pmovmskb
and
push
out
fistpll
fcomps
mov
jl
push
pop
clc
mov
in
push
mov
rclb
pop
icebp
push
mov
in
ror
xchg
push
popl
std
pop
dec
mov
mov
mov
pop
mov
mov
or
negl
xchg
fidivs
rclb
inc
insb
and
mov
lret
inc
mov
jle
mov
push
lock
pop
inc
hlt
adc
or
dec
loop
sahf
jecxz
inc
ljmp
xor
mov
movsl
inc
adc
fs
ret
cmpsb
cmp
jno
jl
cmp
sub
iret
dec
daa
inc
jae,pt
pop
cmp
imul
and
push
adc
cmc
mov
in
test
imul
cmp
ljmp
jle,pt
push
inc
movsb
push
xchg
ja
xorl
dec
fs
add
mov
aam
leave
add
clc
aas
js
jnp
xchg
ja
pmuludq
pop
bswap
sbb
jns
mov
insb
rcr
and
pop
or
mov
push
lock
rcr
popf
mov
jl
mov
and
adc
movsb
mov
js
xor
adc
mov
pop
movsb
leave
insb
aad
movsb
cmpsl
cmp
or
addr16
sbb
mov
jnp
cltd
call
frstor
jmp
mov
pop
addr16
adc
cmp
in
xchg
testb
push
mov
in
addr16
dec
stos
stos
cmp
int3
ret
jae
xor
lds
push
jo
idiv
cmp
sub
or
jge
dec
sub
or
int
dec
out
mov
scas
mov
flds
test
inc
push
push
inc
clc
ljmp
add
sbbb
dec
rolb
cmpsb
dec
pop
addr16
or
push
jbe
mov
and
push
ret
movsl
out
gs
notw
xchg
js
mov
xchg
jmp
ret
sub
mov
in
mov
and
unpcklps
xor
ret
inc
and
push
or
adc
jmp
out
mov
pop
jno
ljmp
sbb
fistps
jecxz
xor
mov
das
mov
js
loop
cld
lock
fimuls
mov
dec
push
sbb
push
jnp
out
mov
inc
push
rsm
add
sbb
scas
aas
push
cmp
enter
out
dec
inc
or
cli
loop
and
add
mov
int3
repz
enter
jne
adc
in
sbb
or
out
push
xor
push
insb
sub
bound
loopne
daa
sahf
int
jge
lea
push
mov
and
scas
int
xor
cmp
sub
pop
mov
inc
in
mov
les
mov
mov
push
and
aas
out
outsl
dec
sub
bnd
fcoml
dec
and
push
fmull
shrl
mov
les
xor
aas
jo
lcall
cmpl
adc
getsec
pushf
aam
enter
lock
mov
xchg
jo
movsb
push
jno
in
dec
push
sbb
dec
add
mov
pop
add
lea
call
scas
push
or
movsl
add
stc
pop
fsubl
xchg
je
pop
xor
repz
ljmp
out
lahf
outsl
popf
lods
repz
push
inc
sub
or
cmpsl
pushf
int
into
in
cmp
mov
mov
inc
stc
insl
rol
adc
mov
xor
gs
jb
int
loop
jb
pop
xorb
fisttpll
aam
mov
xchg
mov
lea
nop
pop
fildll
lahf
fistl
fiadds
inc
sbb
and
xor
mov
nop
sub
xchg
lahf
inc
lods
mov
pop
cltd
pushf
xor
icebp
jle
out
or
or
ja
jge
jle
lcall
outsb
vpcomb
jns
push
pop
std
jae
cmp
xchg
stos
inc
test
ret
jne
out
add
mov
mov
mov
dec
pop
lret
adc
cwtl
insl
test
mov
cmpsb
fcmovu
push
sbb
push
repz
xor
cmp
or
cmp
scas
and
mov
add
cmp
aas
and
cmp
leave
xchg
aaa
pop
les
mov
aaa
fwait
les
fstpt
or
clc
data16
scas
test
sahf
fnstcw
xorb
rorb
mov
jne
xchg
mov
aas
es
andb
mov
stos
xor
repnz
js
inc
mov
aas
push
test
jmp
ret
mov
mov
jne
fwait
iret
sbb
in
push
xchg
mov
lea
dec
imul
clc
test
add
inc
jmp
push
xchg
lds
repz
jbe
test
imul
adc
cwtl
mov
and
and
xor
insl
out
out
lahf
and
outsl
popf
sub
in
or
jp
stos
xor
xor
in
dec
xchg
xchg
test
fisubrl
orl
jbe
lret
mov
pop
int3
pop
daa
nop
rcl
cmp
out
bound
loope
inc
or
es
andb
push
mov
mov
enter
insb
dec
movsl
mov
shll
mov
hlt
xlat
fisttps
ds
xchg
aad
or
cmpl
jle
jbe
lock
dec
lret
xor
scas
les
sbb
sub
cltd
js
sub
cld
cli
repnz
aad
out
repnz
stos
adc
dec
leave
add
rcrb
sbb
add
in
fld
mov
je
repnz
mov
cs
sbb
ret
xchg
mov
push
cmc
and
cmp
pop
mov
sub
scas
mov
ror
fcoml
lea
inc
mov
rol
adc
loop
or
pop
ret
call
adc
lea
adc
rcl
pop
enter
xor
out
sub
lcall
push
pusha
pop
cmc
out
dec
xchg
dec
shll
mov
jl
out
push
mov
out
jno
ds
bound
out
inc
dec
fsubs
popf
dec
add
sbb
jecxz
mov
imul
jb
pop
pop
sub
xchg
rcll
add
add
stc
inc
stos
cmpsl
pop
dec
cmp
and
cli
fisubrs
stos
mov
push
lcall
inc
call
out
daa
fcom
sub
stos
cmpsb
add
add
jecxz
insl
adc
ds
popa
dec
clc
sub
fdiv
repz
in
inc
xor
clc
inc
cltd
mov
sub
inc
jl
pop
stos
and
imul
out
mov
adc
push
sbb
gs
shlb
inc
mov
clts
pushl
pop
add
sbb
xchg
arpl
lret
or
mov
ret
xor
mov
stos
out
popa
xor
jb
mov
mov
movsb
mov
mov
jb
cmp
add
jnp
int
jb
jne
ror
adc
or
jle
mov
or
adc
mov
test
rcrb
push
jmp
xchg
icebp
lret
sub
loope
nop
push
clc
push
icebp
xchg
adc
pop
mov
sti
xor
xlat
and
js
lods
jl
lods
int
shrb
test
popf
cmc
mov
sub
cltd
out
pop
push
pop
sub
test
dec
jo
adc
sub
sbb
out
mov
dec
jne
in
call
cltd
pop
lcall
jle
aaa
push
clc
xchg
pop
fimuls
lret
mov
mov
pop
mov
mov
call
sub
push
iret
popf
mov
or
jg
mov
xchg
cmp
repnz
mov
orl
lds
add
sahf
es
jae
or
push
xchg
ss
xchg
mov
mov
pushl
mov
or
pop
jge
jle
arpl
vmread
popf
push
es
xchg
outsl
jo
mov
in
rcrb
sub
sarb
fs
icebp
pop
adc
daa
and
rorl
xchg
shrl
pop
rol
test
movsl
iret
imul
daa
push
fwait
push
adc
pop
call
call
outsl
add
ds
push
in
xchg
push
mov
push
jbe
xor
add
loope
nop
push
mov
xchg
fcmove
xor
shlb
or
add
xlat
pop
inc
jmp
sub
jnp
js
jmp
add
ret
mov
call
pop
sti
js
sbb
mov
dec
pop
mov
popa
pop
inc
mov
leave
mov
add
imull
mov
outsb
or
lods
aam
fs
jbe
push
or
mul
mov
stos
roll
movw
mov
insb
fsts
insl
scas
cwtl
adc
nop
ret
jb
push
loop
push
push
push
xor
mov
jl
push
test
sbb
jno
lock
xchg
fnstsw
int3
mov
xor
mov
test
adc
into
lahf
lahf
scas
das
pop
adc
push
push
xlat
push
push
pop
jecxz
imulb
stc
or
jg
cmc
divb
or
enter
daa
or
and
testb
insl
adc
cmc
fs
loope
mov
je
mov
cs
outsb
mov
inc
xchg
pop
add
jae
sbb
jo
jne
sub
adcb
xchg
dec
jl
pop
mov
mov
xor
pop
adc
stos
cmp
mov
cmp
jp
stc
or
mov
stos
jmp
add
mov
ja
dec
push
push
add
xchg
or
push
or
cli
loope
fisttpl
push
cmpsb
add
xchg
dec
xchg
popa
mov
cmpsl
pop
leave
mov
and
inc
pop
in
scas
clc
in
jne
lods
nop
cltd
lods
mov
pop
jns
dec
cmc
aad
mov
dec
xor
sbb
aaa
sub
pusha
clc
jno
pop
push
dec
inc
inc
mov
addl
xchg
adc
push
pop
jb
inc
out
inc
mov
mov
jg
xor
icebp
jnp
or
scas
add
jb
push
add
and
lea
fidivs
jp
pop
cli
ret
jo
test
and
jns
testl
bound
adc
push
xor
dec
adc
push
movsl
jnp
ljmp
lock
add
out
ljmp
jbe
popl
inc
add
fdivrs
mov
xchg
mov
adc
push
fsts
subb
pop
loop
out
sbb
xor
rcr
pop
aad
mov
pop
rcl
jae
stos
cmp
or
mov
fninit
lahf
mov
outsb
dec
cmp
lahf
jg
inc
stos
je
dec
fs
sub
xchg
fucomp
pop
push
loopne
in
insb
pop
dec
in
push
sbb
pop
inc
mov
sbb
push
jb
hlt
pop
add
mov
mov
test
les
cltd
and
cmp
push
aaa
pop
lods
push
mov
inc
out
cmpsl
cmpl
push
out
loopne
mov
sub
dec
sbb
xlat
push
adc
cs
xor
test
adc
lock
jg
xor
dec
sarl
add
sub
adc
imul
pop
sbb
sbb
inc
jns
mov
out
adc
into
out
out
cmp
ja
sbbl
sub
mov
mov
int3
adc
imul
sti
stos
ds
push
add
icebp
sub
add
dec
add
cli
bound
sub
inc
cmp
loop
fcoms
out
movsl
xor
and
nop
cmc
pop
dec
icebp
or
ljmp
sbb
push
jg
js
insb
xchg
cmp
jmp
ret
jb
mov
push
fnstcw
jge
mov
mov
jge
data16
xchg
sub
int3
jnp
daa
or
sub
rol
cltd
mov
jp
jle
movsl
push
jmp
xchg
pop
cmc
add
jnp
pop
mov
enter
lea
test
lods
pushf
daa
aam
jne
outsl
inc
push
mov
push
repnz
cmp
addr16
testl
xor
dec
cmp
push
lret
rcr
mov
sarl
icebp
inc
jae
sbb
aam
cmp
stos
and
pop
ds
sub
test
push
adc
sti
aad
sub
pop
add
rcr
cld
sbb
inc
pop
test
jecxz
cmp
jge
or
cld
test
clc
fsubs
fdivrs
ds
and
dec
cmpsb
adc
adc
pop
test
test
sarl
dec
movsl
xchg
mov
scas
mov
aad
popf
loop
mov
cmp
ds
into
insl
or
xchg
test
int
sbb
inc
cmp
sub
ds
cmp
movsl
xchg
cwtl
adc
add
xor
dec
es
xor
or
dec
cmpsb
popa
pop
jns
es
xchg
sub
xor
insb
push
or
mov
das
stc
add
cltd
fs
enter
sti
cltd
notl
cmc
pop
cmp
jne
mov
xor
mov
mov
mov
mov
dec
jns
and
inc
xor
mov
lahf
mov
fisttpll
aad
mov
cmp
movsl
push
int3
ret
jmp
popf
inc
mov
cmp
mov
int
iret
dec
mov
lods
pushf
aad
jmp
movsl
adc
cmp
cmpsl
jne
mov
pop
sub
sub
mov
ret
xchg
outsl
xchg
xchg
add
test
bound
in
lods
mov
xor
and
roll
pusha
mov
mov
jl
lea
cld
cmp
ja
pop
popa
push
jmp
or
adc
aam
aad
push
cmpsb
cltd
cltd
lcall
shrb
pop
std
adc
push
pop
jmp
jg
or
and
data16
push
mov
push
fldt
xor
pop
mov
fwait
mov
xor
test
mov
jg
out
sub
push
jge
adc
adc
sub
or
pop
lret
arpl
jge
sbb
dec
imul
adc
hlt
lods
cwtl
pop
mov
das
fildll
aam
mov
fisubrl
jmp
mov
fsubr
pop
aaa
or
cmp
out
cltd
jns
std
ss
int
into
xchg
jp
outsb
call
jle
lcall
rcll
lock
jno
xor
jmp
or
push
xlat
popf
cmc
xor
and
push
fdivrl
cld
adc
test
das
xchg
push
lods
xchg
pop
mov
data16
jecxz
mov
push
and
fucomp
lahf
std
leave
ficoml
fistpl
sub
or
xchg
mov
mov
mov
inc
pop
in
aas
pop
movsb
xor
inc
stos
in
add
loope
xor
dec
stc
cmp
sub
fisubrl
mov
shr
nop
ret
and
xchg
dec
pop
mov
and
outsl
cmpsb
or
gs
push
daa
mov
add
cs
add
shlb
stos
rol
movsl
lds
push
data16
jbe
lds
jno
fcmovnbe
ss
loope
scas
pop
adc
add
mov
xorb
loope
cli
inc
dec
out
jo
xor
xchg
push
sti
cmp
xor
bound
shlb
in
pop
leave
pusha
mov
or
mov
mov
mov
or
sbb
out
jp
aas
sbbl
sbb
sub
push
mov
out
pop
in
ret
aam
xor
lcall
movsb
cwtl
dec
add
push
inc
push
das
es
mov
pop
loop
imul
inc
out
add
xor
mov
dec
mov
pop
fimuls
xor
dec
jns
out
mov
xor
into
mov
stos
in
test
frstor
xlat
dec
cmp
inc
les
mov
lcall
mov
out
xor
lret
lods
rolb
aaa
xchg
jmp
das
inc
or
adc
lods
int3
fldenv
popl
push
jg
push
pop
add
xor
aad
rolb
in
sub
sub
mov
mov
add
lods
scas
mov
or
lea
sarb
gs
fwait
lahf
push
inc
sub
mov
mov
cmpsl
sbb
imul
mov
push
mov
jne
test
insb
cwtl
jns
mov
outsl
bound
pusha
ret
add
jb
ss
mov
fcomps
pushf
cmp
mov
jge
inc
mov
push
mov
add
pop
cmp
cltd
sarl
aas
int3
dec
movsb
in
mov
out
inc
and
fsubr
out
sub
and
xchg
sbb
outsl
fcoml
inc
or
xor
fcompl
nop
pop
mov
mov
outsl
dec
xlat
cld
sub
out
jns
mov
xor
lods
ret
test
xchg
jne
sub
sub
mov
and
lahf
cmp
inc
dec
xor
or
push
pop
jmp
mov
and
fildl
xchg
mov
fisubrl
adc
cwtl
pop
rcr
fcmovnbe
sahf
aaa
pusha
xchg
mov
jnp
mov
daa
int3
or
cmp
addr16
sbb
out
cmpb
sub
inc
fcom
aas
and
fwait
or
jl
mov
movsbl
mov
pop
or
push
xchg
std
fstl
mov
dec
sub
dec
dec
and
xchg
int3
std
loop
cmp
sbb
loop
ja
jl
lea
push
in
mov
mov
in
add
jp
pop
push
popa
lds
push
sbb
rcrl
sub
xchg
sbb
sbb
loopne
cld
mov
adc
test
mov
add
inc
jae
inc
push
testb
icebp
xchg
stc
les
xchg
into
adc
fprem1
das
xchg
push
inc
ret
movsb
dec
pop
mov
sbb
adc
cmp
je
btc
call
dec
hlt
xchg
mov
pavgb
pushl
bound
mov
es
mov
hlt
or
and
lods
add
gs
sbb
outsb
push
out
fsub
or
pop
test
mov
xor
sar
bound
push
loopne
xchg
add
cwtl
cmp
stc
int3
add
test
dec
pushf
fs
mov
in
sub
aam
lcall
loopne
mov
pop
bound
nop
adc
ret
cmpb
pop
cltd
popa
cmp
xor
or
mov
pushf
in
dec
stos
and
test
test
xchg
cmpsb
nop
jg
pusha
aam
sub
dec
cmc
scas
mov
aaa
mov
cmp
sbb
or
ret
out
adc
or
pop
aam
ss
add
lea
add
shrl
xchg
push
pop
mov
cli
mov
cmp
testb
or
add
push
jge
ret
aad
fidivrl
sbb
dec
ds
int3
ficompl
xchg
pop
push
addl
cld
sbb
inc
and
xor
lret
mov
and
addl
cmpsb
int3
push
int3
mov
leave
loopne
in
arpl
xchg
push
mov
test
lahf
ss
cwtl
inc
mov
rcr
push
and
mov
xchg
lods
mov
jl
add
xchg
mov
rolb
mov
xchg
jg
int
jge
incb
mov
pop
pushf
mov
or
enter
insb
ret
shll
int
adc
inc
imul
dec
sub
cmpsl
sti
pop
push
adc
jae
sbb
ljmp
lea
data16
and
inc
dec
aam
pop
and
mov
xchg
call
cs
push
jl
add
dec
clc
push
ror
jge
das
jne
and
pop
flds
jne
pop
fwait
mov
outsb
mov
push
int
push
push
sub
cmc
dec
lds
inc
cmp
xchg
repnz
push
sbb
orl
lock
mov
aas
pop
hlt
sub
jo
jo
cmpsb
pop
inc
xor
stos
adc
pop
cmp
sub
leave
lcall
aam
gs
int3
fwait
or
mov
sub
mov
xor
mov
cld
cmc
dec
jecxz
into
pop
mov
mov
outsl
aas
pop
sub
sub
cmpsl
xor
mov
cmp
mov
imul
fldt
sub
lret
mov
mov
pop
sbb
decl
pushf
outsl
or
jae
and
mov
xor
or
adc
xchg
icebp
mov
sbb
adc
push
fcom
sub
sbb
out
dec
add
or
je
in
mov
test
jb
lcall
fwait
inc
repz
into
and
add
fisttps
adc
fbld
or
inc
call
adc
pop
dec
fildl
shlb
jmp
or
jns
rclb
daa
fwait
inc
jmp
or
popf
ja
mov
and
outsb
xor
push
pop
mov
add
jp
in
cmp
dec
ds
or
outsl
sub
std
popf
insl
mov
pop
fnstsw
mov
sahf
and
ds
mov
lock
les
loope
nop
movsl
jo
popf
cmpsl
out
xchg
ja
icebp
cmp
xor
dec
fisubrl
push
mov
jecxz
cmpb
xchg
gs
cmp
cmpsb
fisttpll
mov
sub
movsl
or
out
int3
test
ds
cmp
out
outsb
xor
pop
out
movsb
mov
pop
sbb
cmp
repz
add
add
popf
pop
lahf
in
stos
cmp
bound
stos
test
dec
and
mov
movsb
lret
test
fwait
call
add
insb
verr
jno
xor
xlat
jnp
fiadds
testl
cmp
fisubrl
add
into
das
adc
sbb
outsl
mov
adc
out
or
sub
es
aam
sbb
push
jg
mov
pop
xchg
mov
push
dec
popf
scas
dec
lods
mov
and
in
imul
pop
add
sbb
jp
pop
in
out
sub
repnz
jo
or
jmp
in
popf
imul
jno
popf
and
cli
xchg
add
and
mov
adc
insl
movb
ds
pop
dec
inc
stos
push
jp
and
pop
mov
out
stos
outsl
jl
mov
je
scas
mov
stc
clc
sbb
sub
orl
add
popf
ss
lahf
movsb
icebp
mov
sbb
xorl
xorl
sarb
and
inc
out
es
imul
fcoml
call
or
cmovg
int3
mov
outsl
repz
push
fbstp
iret
in
test
mov
cmpsb
ds
inc
in
or
out
pop
in
mov
mov
pop
jb
push
jno
or
mov
xor
add
in
pop
cmpsl
mov
popa
shlb
popf
sbb
xchg
or
sbb
mov
dec
jge
push
sbbl
adc
add
std
aad
ljmp
inc
test
add
push
jnp
pop
push
and
add
int
cmp
jne
mov
inc
loop
int
jne
leave
mov
iret
push
xchg
mov
in
inc
mov
test
getsec
push
movsl
mov
std
test
aad
lods
or
out
in
icebp
das
cmp
movsb
add
rcrb
push
inc
xchg
fistps
push
imul
lea
loope
std
out
dec
adc
jge
stos
dec
add
into
je
or
adc
sub
push
pop
into
jg
mov
push
cmp
cmp
mov
pop
ljmp
imul
bound
sbbb
test
cmp
popa
mov
cmpsb
sahf
and
dec
icebp
add
loopne
call
pop
repz
in
or
ljmp
cmp
sbb
pop
clc
out
sub
dec
push
xorb
adc
jecxz
push
or
popf
jp
sub
jle
js
or
adc
pop
mov
cltd
aam
jno
fnsave
jnp
xchg
cs
mov
hlt
adc
sub
pop
out
push
lock
sub
sbb
unpcklps
and
push
movsb
jecxz
push
pop
xor
xchg
aas
outsl
scas
adc
xchg
icebp
cs
push
jle
mov
in
mov
xor
int
test
decb
shl
psraw
adc
inc
push
push
fsubrl
jl
fmul
adc
clc
xor
push
inc
pop
dec
and
test
inc
bound
pop
push
push
adc
cmp
fdivrl
daa
nop
out
and
fs
mov
shll
jl
and
adc
xchg
add
ljmp
out
stc
dec
jecxz
aam
mov
and
cld
cmp
js
and
sarb
pop
sbb
mov
mov
inc
jp
jle
jle
cli
xchg
and
outsb
sub
stc
lret
adc
clc
lods
jmp
ret
rcrl
and
pushf
xchg
sub
call
insl
dec
sti
mov
clc
lret
insb
add
mov
ljmp
and
mov
push
jmp
lahf
scas
int3
jmp
jno
ss
insb
insl
pop
data16
jl
dec
rep
cld
jge
out
jo
xor
ret
sub
loop
push
dec
stos
mov
aam
and
stos
and
aaa
ds
pop
popf
jl
jne
pusha
mov
jmp
inc
add
jno
addb
pop
pop
pusha
xor
sbbb
and
mov
push
mov
cmpsl
jle
test
sbb
push
or
xchg
scas
lock
dec
sarb
jae
xchg
xor
dec
xor
lock
gs
xchg
sub
das
or
and
divb
or
iret
pmullw
and
xor
push
pop
loope
rcll
jl
sti
es
fs
sbb
push
dec
inc
inc
cwtl
cmp
pop
mov
loopne
jo
mull
sbb
lock
push
fiaddl
scas
mov
test
incb
fwait
push
dec
enter
repnz
cltd
iret
fcoms
mov
jp
sbb
add
pop
lods
or
sub
inc
loopne
mov
mov
sbb
push
imul
outsl
mov
aad
je
cld
mov
or
inc
xchg
iret
push
add
jns
lcall
push
xor
in
outsb
mov
jno
xchg
mov
jne
hlt
xor
mov
push
lcall
xchg
stos
sti
in
push
jl
inc
cmp
jg
or
or
mov
mov
cs
pusha
mov
or
mov
mov
testl
inc
dec
jl
movsl
inc
and
mov
sbb
int
decl
mov
and
fiaddl
sub
cmp
xchg
mov
shl
push
outsb
lcall
sub
lds
ja
loopne
pop
dec
popa
mov
divb
mov
test
mov
in
mov
pop
cs
sub
test
jae
pushf
and
xchg
insl
lcall
mov
arpl
mov
test
insb
push
pop
pop
dec
jp
mov
push
dec
and
rol
js
mov
nop
scas
repnz
test
out
inc
pop
inc
stos
loope
pop
lret
xlat
cmc
outsb
mov
vmovsd
dec
mov
sub
mov
ficoms
sub
cmp
xor
popf
js
js
orb
imul
cmp
push
sbb
hlt
jo
add
and
lcall
hlt
mov
push
cli
lock
pusha
push
inc
dec
sbb
push
das
jp
js
fdivrs
dec
jbe
gs
lret
loope
mov
mov
ja
imul
inc
loope
adc
das
shrb
xlat
inc
push
lahf
pop
popf
or
movsl
dec
jno
out
add
xchg
addr16
clc
jp
dec
mov
mov
out
call
mov
or
scas
mov
icebp
sbb
out
flds
rorl
mov
or
shll
xchg
addr16
popl
xchg
fisubl
fldcw
jnp
call
in
cmp
mov
mov
shlb
push
dec
call
lret
test
push
sbb
out
sub
jp
mov
inc
inc
repz
jno
pop
into
enter
inc
jns
ljmp
and
add
es
mov
mov
mov
jmp
aam
mov
mov
jmp
xchg
push
fbstp
ja
cmp
jecxz
sbbl
nop
sbb
xchg
jmp
rcll
scas
les
add
outsb
dec
push
add
jmp
pop
xchg
jmp
dec
dec
enter
mov
stc
push
and
xchg
inc
fcomp
push
dec
scas
ljmp
mov
out
mov
xchg
inc
push
fucomp
push
dec
inc
stos
ret
cmpsl
mov
xlat
jo
sahf
lds
and
jmp
inc
lcall
push
push
gs
xlat
mov
scas
jnp
leave
inc
push
rolb
adc
inc
test
jne
or
hlt
or
lods
mov
loopne
clc
out
sti
stc
and
es
sub
cmp
jnp
pusha
xor
pop
in
sub
sub
sub
and
lahf
inc
mov
popf
xchg
out
loop
push
sahf
loopne
mov
cltd
add
repz
sub
int3
fwait
mov
xchg
sub
bound
mov
dec
sbb
enter
loop
adc
fiadds
inc
mov
loopne
push
jb
daa
iret
xchg
add
test
in
cmp
cmp
movups
lea
cmp
icebp
int3
imul
ja
or
cmp
or
fimull
aas
push
gs
and
xchg
sbb
les
mov
pcmpeqw
hlt
rorl
cld
imul
pop
icebp
lods
andl
pop
adc
in
in
jmp
inc
xor
imul
fiaddl
xorl
popa
nop
negb
mov
or
xchg
jnp
mov
and
push
dec
clc
xor
push
cmp
aaa
jmp
hlt
orl
push
out
hlt
call
xchg
jmp
stos
xorl
rcl
repnz
xor
aas
xchg
xchg
dec
xchg
sarb
cmc
jb
out
mov
adc
add
and
push
mov
push
je
push
inc
ss
mov
pop
aaa
xchg
adc
mov
arpl
ret
add
out
in
sub
imul
mov
or
js
pop
jae
pop
insb
imul
jp
fcoms
pushf
push
outsl
xor
add
inc
dec
xchg
ror
hlt
jp
ljmp
icebp
es
hlt
jge
cmpsb
sbb
lods
mov
pushf
sub
and
dec
scas
jmp
rclb
fidivrs
xlat
mov
lods
or
scas
add
xor
cmp
xchg
aaa
pop
xor
sbb
mov
add
cmp
fcmovne
loop
xchg
leave
addr16
cwtl
js
ss
push
xchg
inc
xchg
xor
push
lods
decl
sbb
xor
xor
push
sbb
cmpsl
cwtl
mov
data16
jge
and
unpcklps
and
int3
mov
jnp
xor
movsb
mov
mov
push
sarl
mulb
icebp
push
cmpsb
enter
push
mov
lahf
test
push
enter
repz
shlb
add
adc
xor
adc
stos
mov
paddusb
repz
xlat
lods
cmp
stc
jmp
push
fwait
jle
fwait
and
test
sub
xor
in
mov
push
daa
loopne
jle
mov
mov
add
mov
mov
xlat
sub
cmc
jnp
insb
or
cs
mov
pop
popf
jge
rol
scas
dec
addb
inc
lret
je
outsb
shrl
neg
mov
add
std
jne
insl
cli
andl
sub
xor
inc
scas
mov
sbb
and
push
jnp
ja
outsl
in
rorb
sbb
push
fld
push
roll
xor
insl
mov
not
push
or
lods
adc
add
jg
lahf
and
shrl
mov
in
js
add
push
push
daa
into
icebp
sub
iret
xchg
pushf
out
push
sub
jne
call
mov
dec
mov
or
jecxz
push
add
shr
xchg
sub
pop
push
xor
sbb
mov
insb
jne
shlb
sahf
mov
rol
pop
pop
out
lds
inc
adc
push
mov
jecxz
mov
xchg
xor
iret
mov
repz
es
jl
in
fmuls
and
jb
mov
popf
mov
inc
notb
add
inc
outsl
and
jge
scas
stos
jb
clc
scas
dec
in
add
jp
push
stos
test
test
lds
mov
loopne
outsl
add
cmpsb
popf
mov
push
xchg
push
xor
dec
inc
cltd
cmp
xor
xchg
jmp
xchg
ljmp
je
pop
mov
inc
jno
sub
je
push
add
je
inc
stc
es
cmpsl
jmp
jg
insb
mov
movsl
iret
sbb
sahf
cs
nop
xchg
push
cltd
cld
cmpsl
jle
inc
mov
jle
add
mov
push
mov
inc
or
cmp
test
mov
hlt
test
mov
aad
cmp
inc
mov
stos
jp
fidivrl
xchg
push
daa
add
ja,pt
pop
and
cmpsb
cmc
adc
jp
mov
rclb
mov
mov
jns
cwtl
scas
addr16
xchg
call
push
sub
inc
or
scas
pop
insl
xor
iret
rcrl
das
inc
jnp
jo
push
xor
jmp
imul
jle
xorl
faddl
call
fdivrs
adc
or
xchg
pop
lret
push
fs
mov
mov
sbbb
sub
fisubl
mov
test
mov
xor
pushf
dec
mov
and
sbb
pushf
add
inc
add
movsl
pop
loop
xchg
fldcw
je
cmp
lods
inc
shlb
mov
stos
lods
js
jae
aas
js
popa
sub
jge
sbb
ja
inc
fisttpll
inc
xor
mov
int
out
adc
jne
mov
fdecstp
xchg
rclb
fstl
xor
push
fldenv
push
sbbb
aad
aam
call
mov
or
rorb
jl
cld
lds
sub
add
scas
shll
leave
mov
push
mov
stc
cmpb
xchg
sbb
fst
icebp
add
loop
fisttpll
cmp
dec
lcall
loope
outsb
loopne
cwtl
sbb
insb
sbb
rclb
add
mov
xchg
data16
lahf
lret
cmp
dec
in
pop
and
rol
inc
cmp
test
xor
call
notl
jle
or
push
mov
enter
mov
addr16
add
mov
fbld
xor
shlb
fsubrl
sub
pop
fstpt
adc
sub
add
pop
into
psubsb
in
in
imul
aad
jmp
push
pop
or
pusha
lods
adc
dec
fwait
out
or
mov
insl
push
fs
popa
rcll
insb
fsubrs
mov
mov
inc
push
pop
sahf
popf
clc
mov
stc
or
or
sub
hlt
pop
mov
push
or
loopne
enter
pushf
imul
inc
ror
push
in
out
ss
mov
jge
pop
inc
push
mov
add
lret
sbb
push
dec
push
xor
ja
mov
cld
mov
push
sbb
jl
xor
movsl
rcl
rcll
cmp
clc
ror
fimuls
cli
mov
js
idivl
or
jg
push
rolb
pop
aam
xchg
lock
add
mov
movsl
les
mov
pop
int
js
test
inc
sub
movsb
or
mov
push
inc
inc
xchg
cmp
sbb
cmc
ja
popa
jae
jb
shl
sbb
add
movsb
jno
dec
adc
sti
frstor
jmp
pop
xchg
sub
ja
test
xchg
add
scas
fsub
push
hlt
pop
scas
xchg
divb
loope
rol
rol
sti
add
cmp
fst
mov
mov
pop
mov
mov
dec
es
shrb
iret
jo
mov
mov
roll
push
pop
xchg
hlt
aaa
jns
add
cwtl
xadd
sub
iret
or
outsl
mov
rcrb
mov
cld
sub
cmc
mov
call
test
les
addr16
xor
arpl
aam
sbb
les
push
rcl
add
mov
insl
fistpll
xchg
mov
push
xchg
xchg
ss
sbb
sub
or
xchg
push
sub
mov
inc
iret
pop
icebp
lock
cld
fwait
or
and
push
xchg
sub
pop
or
loop
es
add
ds
bound
mov
push
xchg
or
push
cs
fistpl
cmp
nop
test
sub
and
rclb
test
fxch
lock
xor
pushf
decl
adc
xchg
jge
icebp
out
sub
loop
jae
mov
add
xchg
ret
ss
add
shrb
xor
aas
imul
push
mov
jne
outsb
scas
and
cwtl
dec
adc
mov
stos
fisttpl
in
mov
cmp
jecxz
movsl
add
fisubrs
idivb
xchg
jae
cwtl
sub
aad
stos
pusha
lods
xor
jb
mov
push
mov
lods
rcrb
call
lock
inc
scas
xchg
push
sbb
and
mov
or
xchg
xor
ja
jnp
lea
pop
inc
in
call
xchg
dec
iret
add
imul
jnp
aaa
lret
orl
sbb
icebp
mov
aad
fistpll
mov
xlat
xlat
xor
xlat
adcb
mov
loop
stos
fs
jp
mov
orb
sub
cli
movsb
mov
sbb
push
andb
sub
push
dec
cmp
clc
push
lods
and
mov
jl
lea
fnstsw
xchg
mov
js
mov
add
dec
test
pop
mov
pop
imul
mull
mov
shlb
pop
add
jb
ret
les
jmp
fs
and
push
lahf
pop
out
lods
shl
in
ret
pusha
push
and
and
dec
lret
xor
jl
pusha
lahf
add
fsubs
stos
mov
mov
es
sbb
xchg
popf
inc
loopne
ud1
fldenv
repnz
xchg
xor
ss
add
pop
hlt
icebp
jmp
lahf
fistps
xor
dec
lahf
aaa
push
dec
enter
shr
mov
or
test
popf
int3
in
mov
push
or
std
push
sub
xchg
xchg
inc
je
ds
push
sbb
or
mov
mov
add
in
jecxz
mov
cmc
dec
push
imul
icebp
sub
dec
repz
leave
push
xchg
std
jmp
mov
inc
hlt
decb
ficoms
lods
jle
push
imul
mov
lds
sub
movsl
dec
sub
pop
mov
inc
or
les
sahf
or
aaa
idivl
inc
jb
aad
mov
repnz
into
fsubrs
movsb
inc
roll
test
xchg
popf
lods
pusha
mov
pop
jecxz
jb
or
fucomip
add
hlt
jmp
outsb
push
inc
imul
aas
pop
imul
loopne
add
push
push
test
out
fwait
mov
out
imul
test
push
mov
jbe
lcall
mov
sti
jl
in
mov
and
jno
push
push
fwait
xor
pop
adc
not
sbb
aaa
adc
out
incl
iret
cmp
aas
shld
xchg
test
mov
lret
and
in
push
push
sub
mov
mov
hlt
jne
inc
pop
sbb
lock
ret
repnz
xchg
pusha
xor
je
dec
in
test
popf
mov
push
stos
idivl
and
push
cld
lods
and
mov
mov
sti
xchg
mov
andl
cmpb
mov
jp
pusha
addl
nop
scas
rep
into
sbbl
dec
idiv
inc
pusha
sarl
push
in
pop
call
paddb
xor
or
clc
push
jge
iret
lret
outsl
dec
add
mov
hlt
mov
mov
jns
dec
or
pop
add
inc
jae
push
inc
lock
dec
mov
cld
push
sbb
add
pop
movsb
pop
daa
mov
aad
sbb
mov
jns
enter
add
jle
push
fbstp
shlb
stc
addr16
nop
push
jl
fidivrl
fistpll
mov
imul
dec
loop
or
movsl
add
pop
xchg
sub
mov
adc
pusha
sbb
and
or
repnz
pop
pcmpgtw
pop
ja
ror
jmp
jae
test
xchg
in
xchg
fimull
sbb
sbb
xlat
mov
out
push
cmpsl
push
dec
rcrl
mov
fs
fucomp
jb
dec
es
add
push
gs
inc
movsb
xor
and
adc
jmp
pop
hlt
mov
mov
jge
sub
inc
mov
ds
pop
sbb
rcl
dec
iret
ljmp
ljmp
orl
pop
notb
ret
dec
and
movsb
sbb
addr16
jl
xor
movsl
test
jns
aam
inc
sbb
pop
in
xchg
add
int3
fnsave
dec
mov
cmp
add
mov
xor
mov
sbb
mov
bound
aaa
test
jnp
or
lock
cs
push
inc
and
xchg
lods
mov
push
xlat
inc
fs
insl
dec
mov
push
inc
pop
cmp
stos
ror
ret
stc
mov
pop
ret
aaa
idivl
cmpsb
ret
les
jle
or
lods
push
mov
repnz
test
and
loopne
push
dec
cmpsl
lcall
test
dec
gs
sbb
lods
cmp
enter
loope
out
pop
sbb
rcl
inc
test
cmpsb
mov
movsl
cmp
and
dec
aaa
rcrl
int
mov
mov
pusha
inc
xchg
insl
pop
push
pop
cs
mov
out
outsb
icebp
xchg
or
outsb
dec
sub
sbbb
xor
out
fbld
popa
pop
xchg
jg
mov
and
lret
cli
sbb
mov
push
inc
xor
xchg
adc
dec
or
xchg
adc
inc
mov
jmp
xchg
ss
sbb
and
stos
jae
jmp
push
cs
xor
jecxz
in
push
jl
icebp
sub
test
mov
leave
mov
movsl
sbb
pop
xchg
push
sbb
test
add
int
xchg
movsl
jo
lods
inc
hlt
imul
int3
xor
jmp
orb
shll
mov
add
bound
insb
dec
shll
mov
imul
shl
jecxz
int3
cmp
dec
lret
xor
xor
push
xcrypt-ofb
cmpsl
scas
cmp
faddl
sbb
imul
add
mov
orb
jg
insl
or
outsl
sub
data16
adc
and
or
in
or
movsb
mov
and
push
outsb
ret
cmp
mov
test
xor
js
dec
jl
ret
cmp
dec
mov
xchg
repz
mov
pusha
mov
xor
pop
das
arpl
lock
and
mov
je
popf
inc
ds
sbb
sub
stc
sub
mov
repnz
out
xor
outsb
xchg
pop
imul
sahf
outsl
mov
scas
enter
addr16
nop
sahf
cmp
xchg
or
out
push
inc
in
out
lods
pop
mov
jnp
shrb
and
mov
int3
mov
movsb
cmp
ljmp
sahf
imul
es
mov
movb
ja
and
testb
and
mov
test
faddl
pushf
loope
cmc
cmc
std
mov
and
jge
sub
cwtl
aad
cmp
js
pop
test
and
and
cs
xor
fdecstp
pushf
rcrb
push
iret
cmpsl
pop
nop
out
or
push
sub
pop
adc
mov
sbb
pop
and
popf
lcall
loopne
sti
sbb
cmc
xor
mov
ja
lods
xor
cmp
inc
imul
and
fisubrs
push
ficoms
dec
shrl
ret
loop
sbb
cltd
or
and
jno
add
push
loop
mov
mov
xchg
mov
cmp
hlt
dec
xor
or
mov
fbstp
jl
sub
mov
stc
inc
mov
ret
inc
bound
inc
sub
xchg
push
sub
shrl
inc
or
aad
cmp
leave
mov
add
outsl
add
jb
fstl
inc
gs
add
aaa
test
xchg
jne
jmp
inc
push
in
pop
add
outsl
or
ret
test
sahf
push
fimull
jg
mov
push
push
pop
sub
and
shlb
aas
fs
sbb
movsl
inc
mov
adc
pop
inc
gs
cmp
loope
data16
hlt
jp
fldcw
lret
out
cmc
mov
sub
inc
cltd
dec
fsubrl
cmp
outsb
mov
or
loopne
lods
adc
mov
mov
adc
ret
repz
cmovns
mov
adc
cmpsb
mov
cmpsl
mov
sub
movsb
adc
xchg
dec
das
cmc
test
push
ret
test
jg
and
cmp
sbbl
mov
adc
ljmp
ds
ja
addr16
in
jmp
sbb
mov
jmp
clc
mov
or
fidivrs
fldt
jae
add
loope
loop
mov
pop
dec
addb
js
mov
mov
les
out
pop
push
mov
nop
dec
mov
repz
mov
scas
fs
mov
je
pop
mov
add
addr16
jle
dec
pop
bound
or
jbe
push
xor
jmp
and
fidivs
ds
xor
notl
add
fcmovb
xor
repz
fistps
ljmp
jns
std
xchg
lods
xor
repnz
sbb
push
sbb
mov
mov
fmuls
ljmp
imul
xchg
sbb
movsl
dec
stos
fisubl
xchg
mull
insb
cs
pop
xchg
movsl
popf
push
gs
mov
inc
adc
in
lret
sbb
xchg
or
cmp
cmp
cmc
fwait
sub
aas
pop
mov
lret
stos
mov
and
jno
in
jnp
inc
dec
xor
xor
dec
dec
xor
jge
into
mov
mov
insb
movsl
adc
jns
sti
mov
lea
out
test
sub
push
das
mov
les
push
mov
decb
lcall
xchg
or
or
cld
add
push
sub
adc
mov
popf
or
fistpl
dec
rorl
xchg
push
cmp
stc
push
cs
sbb
ficoml
jp
mov
mov
cltd
rol
pop
outsl
pop
in
xor
lahf
js
iret
popa
sarb
shrl
out
div
hlt
jg
orb
stc
mov
scas
ret
pop
mov
inc
out
ret
sub
or
imul
out
jle
xor
stos
dec
sub
push
outsl
xchg
adc
cld
cmp
gs
mov
mov
push
ret
es
or
or
push
mov
sub
fwait
sti
stos
aad
push
repnz
xchg
xchg
sbb
adc
cmpsb
ja
subl
bnd
push
repz
adc
mov
pop
push
stos
xlat
push
mov
push
mov
cmp
jmp
push
jnp
lahf
movsb
xor
out
lock
sub
xchg
mov
test
and
push
ja
mov
popf
inc
sub
lods
mov
cmpsl
into
mov
dec
jmp
test
movsl
xchg
outsl
mov
out
lret
push
sahf
sbb
dec
fmulp
xchg
dec
mov
addr16
jp
fsubl
fisubl
mov
and
fdivrs
shlb
xor
sbb
movsb
into
xchg
dec
cmp
mov
xchg
xor
rolb
fcom
sbb
sti
mov
shl
test
or
lods
mov
notb
rolb
push
ret
xor
outsl
inc
and
cld
loop
push
pop
sub
lahf
loopne
dec
lahf
jo
push
fisubrl
int
sahf
dec
cs
imull
pop
xchg
out
in
push
push
mov
in
jmp
cmpsl
cmp
jp
cmp
push
and
insb
daa
sbb
call
sub
ss
inc
rol
push
sbb
mov
xchg
rcrl
std
push
sarl
pop
ret
icebp
mov
decl
out
fisttpl
push
shlb
sbb
andl
fnsave
xchg
bound
ljmp
lock
das
mov
fsubl
adc
cmp
das
pop
out
pop
sub
mov
es
outsl
push
pop
inc
mov
pop
shrl
jbe
popw
shrb
int
mov
in
push
stos
mov
sti
lods
pop
pushf
repz
adcl
mov
or
cmpsb
mov
pop
je
stc
mov
mov
inc
mov
dec
rcr
cmp
stc
inc
jecxz
ret
xor
dec
data16
lea
addr16
sub
cli
adc
cmp
call
movsb
push
int3
loope
test
xchg
aad
and
lahf
int3
insl
repz
mov
iret
and
xchg
jecxz
daa
sbb
cld
and
out
push
pop
iret
jl
mov
sarl
xchg
in
jne
xor
je
hlt
push
pop
pop
mov
inc
mov
push
push
lods
mov
mov
dec
adc
cmc
ret
in
cmpb
sub
pop
sbb
sub
jns
mov
inc
inc
pop
jb
lret
inc
xchg
xor
sub
mov
call
nopl
cmp
pop
cmpsb
mov
lods
dec
lcall
mov
lods
dec
cmp
lret
pop
sub
ror
fmul
je
add
inc
jo
outsl
mov
jnp
loop
add
addb
in
mov
std
dec
sbb
push
dec
add
and
cmc
sbb
imul
lock
add
mov
mov
aam
in
das
sbb
and
sbb
dec
adc
insb
push
sub
cwtl
or
lock
dec
dec
sbb
mov
mov
out
inc
or
test
movsl
les
test
dec
ficompl
xchg
sbb
out
test
inc
cmc
js
xor
div
adc
lahf
push
cmc
pop
fdivrl
rcrl
mov
cltd
mov
sub
test
pop
xchg
movl
fs
mov
mov
test
push
xor
xor
xchg
mov
in
loopne
jo
and
sub
mov
push
push
jg
fistps
in
pop
cltd
in
cltd
pop
push
orb
lret
std
xchg
sub
or
sub
sub
arpl
pop
fdivrl
loope
sub
push
sub
mov
jnp
pop
mov
mov
mov
sbb
sub
xchg
xchg
jge
fwait
cmp
inc
sbb
repz
notl
push
fcomip
jmp
fisubs
rolb
add
jecxz
cmp
push
dec
insl
mov
jge
clc
testl
pusha
or
dec
imul
scas
imul
mov
inc
shl
xchg
mov
cmp
aaa
sbb
data16
es
imul
xor
cmp
icebp
mov
out
cs
cmp
leave
mov
push
sub
leave
pop
xor
iret
scas
mov
lock
fistps
pop
push
and
add
inc
lds
adc
sar
xchg
cmp
add
filds
inc
jae
das
mov
push
lahf
aas
out
xor
popa
loop
in
arpl
lods
or
lret
ljmp
in
js
test
loop
out
leave
adc
cmp
sbb
dec
int
sbb
xor
repz
sub
cmp
les
mov
sbb
sub
ja
nop
outsl
xchg
mov
fwait
loop
sub
idivb
mov
loop
push
pop
stc
orb
rcll
cmp
mov
inc
cwtl
push
int
push
sbb
das
push
nop
inc
popf
adc
daa
mov
out
ss
imul
js
jmp
cmp
lds
inc
ss
mov
testb
cmpsl
lock
fwait
lea
fisubrl
das
xor
je
lods
or
jp
ficompl
fsubrl
outsl
cmp
lcall
and
add
pop
push
push
arpl
jle
std
and
aas
iret
nop
std
and
lcall
xchg
pop
and
mov
push
inc
and
out
adc
jmp
cmpsb
sub
test
pop
dec
jae
popf
mov
or
scas
cwtl
sahf
fs
xor
cmp
in
xor
and
lods
dec
fwait
cli
push
mov
pusha
add
inc
daa
repz
jnp
and
sub
add
imulb
int3
pop
inc
repnz
movsl
inc
fdiv
inc
out
push
inc
addr16
movsl
sub
mov
lahf
vpaddsb
pusha
jbe
push
addl
aaa
call
outsb
mov
jecxz
cmc
in
sti
or
ficoml
andb
mov
xor
sub
out
outsl
pop
les
mov
lret
and
inc
add
jl
mov
pop
imul
lret
in
add
pop
dec
cmp
int3
mov
jecxz
lods
out
aad
xchg
dec
jno
sti
stos
addl
insb
loopne
or
xor
sub
pop
sbb
out
std
int3
pop
mov
mov
outsl
and
lret
aad
lods
sti
xchg
sub
int
cmp
pop
in
sahf
out
mov
icebp
or
push
pop
cmp
pop
mov
mov
insb
mov
push
or
push
xor
loop
arpl
es
jbe
sbb
mov
jg
movsb
pop
test
cs
and
add
push
jmp
sub
lahf
and
fcmovb
cmpxchg
repnz
fstl
and
jae
cmc
aaa
test
and
scas
into
rolb
xchg
bound
pop
push
lcall
mov
xchg
jmp
mov
mov
jecxz
inc
stc
inc
ljmp
fildll
clc
jno
xchg
pop
gs
sub
shl
pop
in
test
sub
lock
into
push
push
out
jae
xlat
and
fcmovnb
lret
xchg
pavgw
or
dec
fmull
and
push
sbb
shll
mov
notl
adc
lock
xchg
das
jp
and
push
mov
in
jmp
xchg
aaa
add
mov
int3
fsubl
andl
push
cmc
push
xchg
fldl2t
jmp
loop
xor
fsubs
ja
mov
cmpsb
stos
xorb
xchg
testb
xor
in
pop
ret
cs
or
jae
in
call
xchg
enter
sub
in
sarl
into
call
cmpl
imul
inc
out
mov
roll
inc
int3
shld
rcl
outsb
js
sub
pushf
sub
int
gs
cmp
jae
gs
in
lods
add
mov
pop
imul
inc
inc
scas
dec
je
push
push
or
lock
mov
out
mov
fs
outsl
dec
pop
rcrb
jae
lret
cmp
movsb
mov
pusha
fwait
cmp
popf
int
push
ja
inc
ljmp
jne
popf
cwtl
mov
in
repz
shrb
leave
jp
pop
sbb
pop
push
dec
fildl
addl
jl
sbb
cmp
lods
push
xlat
int
adc
cli
cmp
and
dec
clc
add
mov
xor
fdivrs
dec
ret
fincstp
pushf
add
mov
inc
out
or
pop
jecxz
int
gs
dec
sti
shlb
daa
out
cmpl
fists
xor
out
out
into
addr16
xchg
or
xor
sbb
cmp
imul
inc
mov
push
enter
movsb
dec
add
and
out
push
dec
repz
inc
fs
dec
out
out
or
inc
mov
lahf
incl
leave
jg
imul
arpl
jns
lret
mov
imul
cmpsb
inc
insl
xchg
and
mov
pop
repnz
pop
outsl
inc
xchg
nop
loopne
jmp
or
movl
push
outsl
ds
cld
fwait
jg
das
shlb
xor
pop
adc
sarb
jp
cs
mov
test
or
fcoms
mov
inc
subb
orl
fidivs
dec
push
lea
jle
fcomps
mov
push
lcall
iret
lds
adc
push
aaa
dec
jl
add
push
jp
inc
in
add
stos
mov
adcl
negl
loop
sub
daa
fs
mov
jl
fstps
shrl
out
ds
fsubl
imul
fisubrl
or
sub
and
pop
inc
push
xchg
in
ds
push
add
push
addr16
test
mov
or
xchg
pusha
icebp
pusha
sarl
aas
cmpsl
jnp
loopne
das
in
xor
mov
mov
or
mov
lods
loopne
inc
mov
cmc
adc
divl
out
out
ds
aaa
inc
pushf
add
mov
outsl
fwait
loop
adc
jno
push
aad
sbb
sbb
push
cmpsb
and
push
sbb
testb
bound
pop
pop
dec
cmp
sbb
add
dec
pop
lods
roll
pop
dec
sbb
pop
adc
shl
and
mov
mov
mov
addl
adc
std
and
enter
xor
pop
int
movsl
cmp
movsb
addr16
ss
in
stos
int3
cmpsl
fcomps
pop
mov
adc
nop
sbb
pop
scas
inc
es
rcll
or
cmp
lds
fstpt
dec
jmp
mov
add
sbb
gs
stos
mov
imul
push
cvtps2pd
cmp
mov
pop
jne
jne
cmp
divl
ss
sub
inc
mov
cli
and
in
add
push
sub
mov
or
jbe
sub
adc
pop
xchg
xchg
jge
ficoml
repnz
leave
add
aam
mov
jae
push
push
cmp
jge
dec
adc
aaa
xor
xor
mov
pushf
lcall
xor
es
call
cwtl
cmp
add
xchg
andnps
aaa
mov
sar
frstor
mov
mov
add
sbb
or
mov
push
xor
rorl
jge
jl
mov
inc
cmc
add
pop
sbbl
clc
mov
mov
dec
test
fimull
subb
mov
adc
scas
fs
mov
cmp
sub
cwtl
jae
aaa
xorl
jnp
dec
inc
movl
sarb
push
das
sub
cmp
in
int
shll
xor
pop
and
stc
jne
leave
add
sbb
push
mov
fsubl
push
sbb
inc
jg
push
pop
shlb
stc
lods
pushf
sbb
push
and
xchg
push
lahf
popf
lods
jg
imul
and
and
andl
bound
lock
mov
loopne
cmp
inc
lret
loop
outsb
filds
adc
adc
cmc
int3
cmp
scas
pop
repz
mov
jb
push
adc
push
loope
and
cltd
inc
pop
andl
sahf
testl
sbb
inc
scas
in
mov
sub
sahf
adc
xchg
cmp
inc
jge
xor
dec
fbstp
in
and
inc
or
iret
or
lahf
lods
pop
stos
lea
xchg
or
jnp
rol
mov
pop
cmpb
mov
test
xor
xchg
xchg
inc
xchg
mov
mov
push
xchg
push
icebp
faddl
test
pop
sbb
fsub
pushf
jnp
sbb
dec
bound
mov
mov
mov
xchg
cmpsb
aaa
add
imul
shrb
daa
adc
icebp
mov
into
fldl
or
push
fdivr
test
data16
pop
pop
jmp
or
dec
xor
jmp
adc
into
push
int3
movsl
xor
lods
push
stos
ljmp
popf
in
scas
adc
mov
ffree
cmc
lea
test
or
xorb
mov
xchg
cmpsl
dec
int
mov
sub
fsts
jno
fnstsw
icebp
inc
xor
das
mov
lods
inc
aad
es
stos
sbb
test
mov
mov
les
aad
sub
mov
fsub
cmp
push
pop
push
sub
mov
cmp
push
add
sarl
cli
xchg
shld
mov
jo
test
cmp
sahf
jecxz
into
in
push
arpl
test
loop
pop
lods
jbe
and
xor
jne
sbb
fistpll
or
adc
jmp
cmp
jo
fiadds
popf
jp
pushl
xchg
lahf
xchg
xor
rcrl
loopne
adc
test
xor
sub
js
adc
push
mov
das
fists
dec
ljmp
mov
sti
sahf
xchg
or
and
gs
inc
mov
add
or
mov
cmp
lds
add
mov
pop
and
cs
fistpll
push
sti
in
mov
cmp
leave
and
or
ja
lahf
mov
inc
xchg
and
out
push
aaa
subb
push
bound
inc
out
add
out
test
mov
mov
scas
cmpsb
ficoms
fistpll
aaa
and
outsl
xchg
or
icebp
jle
jbe
cs
pop
and
push
pusha
icebp
jbe
and
fmull
jb
ss
xorb
inc
push
call
inc
mov
dec
loope
dec
pop
sub
int3
xor
cmp
or
cltd
push
aas
scas
xchg
push
outsb
mov
icebp
cmpsb
mov
push
aam
scas
adc
adc
clc
sbb
cmp
push
cmpsl
scas
popf
fsubrs
lret
mov
dec
dec
mov
xchg
sub
leave
outsl
int
inc
fs
into
aaa
pop
mov
sti
jecxz
sub
in
clc
int
in
sbbl
shll
movsl
sarl
test
movsb
mov
xor
sbb
fisttps
dec
jno
adc
scas
jno
idivb
cmp
sub
sahf
pop
or
adc
movzwl
and
sbb
pop
jb
out
ljmp
pop
aas
lahf
dec
mov
xor
cmc
aaa
repz
in
pusha
lock
fmuls
xchg
push
jl
inc
rcll
push
xor
outsl
and
stos
jecxz
cwtl
push
rep
sub
cmp
int3
fildl
xor
cmc
ret
fs
popf
filds
stc
bound
xchg
jbe
and
daa
leave
decb
xchg
aaa
mov
rcll
hlt
push
loope
mov
or
xchg
mov
lahf
mov
mov
pop
mov
xlat
cmovnp
jge
lea
mov
jg
dec
and
in
cmp
jle
fwait
imul
ss
cmc
xlat
lock
jg
push
ret
stos
sbb
xor
ficompl
call
add
xchg
pop
popaw
sbb
aaa
dec
imul
mov
movsb
lcall
loop
pop
or
pushf
popa
outsb
adc
fisttpl
leave
add
pop
mov
xor
lock
inc
out
aad
adc
scas
pop
das
jl
mov
movsb
pop
out
adc
in
and
pop
shll
push
nop
push
cmp
ret
popa
mov
cwtl
add
inc
push
push
xor
xchg
movsb
stc
xchg
je
sbb
mov
push
std
sbbl
add
pop
xor
xor
mov
push
int3
mov
lods
stos
adc
push
aad
js
push
jge
inc
jmp
stc
xor
add
lods
repz
push
mov
int
sub
jle
insb
movsb
mov
jnp
jp
inc
cmp
sbb
into
adc
sti
aam
notl
push
cmpsb
test
push
les
add
jnp
es
dec
test
dec
mov
repz
push
stos
movsb
out
jl
sti
clc
mov
mov
xchg
sub
mov
ds
jno
dec
fsubrs
cmp
sbb
mov
testb
insb
popa
shlb
add
dec
sub
jg
shrl
jne
or
sub
and
pusha
dec
cltd
mov
das
pop
cmpl
or
inc
rclb
mov
inc
aad
xchg
fldcw
add
dec
jbe
fs
andb
jo
lea
cmpsb
mov
scas
mov
sub
adc
cwtl
sub
cmc
loopne
orb
iret
loopne
cmc
test
rcl
xchg
cmp
jp
add
dec
cmp
fs
jge
xchg
xor
aam
xor
test
gs
nop
mov
push
xor
sub
cmp
mov
lea
jl
test
jecxz
xor
popa
sub
out
stos
mov
jmp
imul
inc
dec
or
scas
xor
cmp
mov
test
mov
aam
stos
pop
dec
dec
mov
std
push
jbe
mov
mov
xor
cmp
incl
push
outsl
stos
nop
enter
jo
lcall
cld
xchg
jg
mov
cld
and
in
push
pop
sub
in
lock
out
int3
adc
sahf
inc
mov
mov
push
enter
ficoml
cwtl
add
sbb
and
addb
in
mov
ds
dec
or
cmp
mov
push
inc
es
lods
fsubs
sbb
std
js
push
push
insb
sub
in
add
cmp
push
iret
orl
pop
and
mov
xor
xchg
pop
ss
iret
mov
out
or
pop
repnz
adc
jecxz
mov
push
cld
dec
adc
add
jnp
sbb
scas
jle
dec
mov
xor
loope
sbb
out
imul
pusha
dec
jmp
rolb
rcrl
sub
sub
pop
movl
rcll
pop
mov
insb
sub
mov
sbb
mov
movsb
out
insb
dec
into
les
imul
aam
sbb
push
lret
xchg
or
cmpsl
and
sahf
dec
xchg
cmc
xor
push
add
out
std
xchg
adc
mov
jecxz
jns
out
out
outsl
mov
and
je
and
inc
fwait
sbb
das
xor
dec
fwait
xchg
das
dec
addr16
and
adc
sbb
mov
sbb
pop
cld
ror
jno
sub
mov
cltd
cmpsb
jb
mov
pop
lret
adc
repz
xchg
xor
sub
add
push
shll
dec
insb
add
mov
mov
cmp
push
adc
lods
push
mov
fmul
push
sahf
hlt
dec
xor
mov
push
dec
sbb
push
js
mov
rorl
push
inc
pop
inc
ss
jp
cli
bound
lock
in
mov
mov
out
and
loopne
movsb
hlt
lds
mov
sarl
jmp
jne
jmp
lret
cmc
stos
leave
sbb
jecxz
sahf
arpl
cmpsb
aas
rorb
mov
jb
clc
loop
sbb
mov
leave
sbbl
sbb
add
push
sbb
inc
cs
sub
pop
adc
mull
xor
repz
lcall
push
cmp
mov
sub
cmpsl
into
lods
xchg
insl
push
sub
movsb
xor
xor
fsubrl
aas
loop
int
ljmp
cmp
faddl
adc
in
ljmp
test
push
pop
pop
fs
jb
jp
sarb
jne
mov
cwtl
dec
ljmp
add
mov
jmp
outsl
fstps
adc
jno
pop
cmpsb
test
jmp
inc
hlt
shl
fs
adc
inc
add
dec
or
aas
inc
movsb
sbbl
cwtl
xor
pop
pop
jl
pusha
scas
mov
pop
andb
xor
hlt
xlat
cltd
inc
mov
mov
or
xchg
pop
in
mov
js
mov
push
and
popa
xchg
add
out
mov
addl
jge
sub
rolb
push
sub
inc
daa
in
sbb
push
out
jno
push
call
sbb
pop
mov
pusha
jecxz
mov
mov
and
loope
cmp
ss
mov
je
inc
xor
fbstp
pop
push
cld
adc
jb
and
loopne
push
or
jnp
inc
cmp
inc
jp
stos
incb
jb
lret
cmp
es
jns
mov
mov
ficompl
les
adc
xchg
adc
mov
jnp
insl
pop
xchg
enter
rorb
in
cmpsb
lds
cmc
aas
clc
push
and
add
fwait
sbb
mov
out
rcr
andb
test
out
xchg
icebp
loopne
mov
test
adc
rcrb
cmpsl
leave
rcrb
xchg
int
mov
xchg
mov
mov
mov
add
jecxz
cltd
sbb
cmp
movsl
mov
push
sbb
push
mov
jb
sub
cmp
xchg
push
scas
mov
js
nop
add
dec
inc
ror
test
jmp
mov
add
cmp
fs
insb
mov
insb
pop
push
sahf
repz
scas
addr16
lods
add
mov
mov
add
das
stos
push
adc
pop
jb
jp
ss
and
arpl
ds
ljmp
dec
aad
insb
out
pop
sahf
or
sbb
xchg
jo
dec
sub
insl
xchg
mov
mov
in
push
mov
mull
xchg
cli
outsb
cmp
sub
test
or
jecxz
les
xrelease
scas
loop
mov
movl
mov
push
inc
ja
movsl
lock
xchg
push
sub
xchg
mov
and
sub
into
adc
xor
loop
cmp
pop
data16
cltd
shll
aam
or
jg
xor
iret
push
outsl
add
data16
inc
push
iret
jmp
push
cmp
shl
fnsave
out
sarb
dec
test
mov
gs
ja
daa
jg
lea
js
iret
mov
cmp
data16
mov
adc
xorb
rclb
mov
ds
bound
and
ret
mov
xor
andb
mov
adc
push
je
jmp
adc
lahf
xor
lods
cld
jg
cmpsb
or
jecxz
push
push
testb
xchg
xchg
jo
xchg
adc
cli
out
mov
cld
xor
adc
cmp
sub
adc
imulb
in
aas
jge
sti
ljmp
ss
mov
push
fldt
jp
in
mov
mov
xchg
pop
sub
and
dec
mov
jl
pop
push
leave
jle
icebp
dec
cmp
data16
arpl
sbb
das
lods
ss
repnz
psraw
pop
nop
pop
inc
add
lcall
aas
xor
rorl
sbb
icebp
fdiv
mov
jl
add
dec
inc
in
jle
sbb
popa
enter
push
into
lret
jae
lcall
loop
dec
adc
out
js
test
aas
add
andb
cmp
test
pop
pusha
fwait
pop
clc
sbb
xchg
inc
xor
jg
mov
push
insl
cmp
popf
insl
add
fdiv
jae
sbb
jp
sbb
adc
loop
fwait
mov
push
sub
or
jmp
push
add
jb
scas
mov
mov
mov
pusha
and
sub
shl
and
pop
inc
frstor
inc
xchg
sbb
mov
jbe
cmp
or
jecxz
pop
fdivrl
pop
mov
mov
je
insb
mov
sbb
adc
xchg
sbb
mov
pop
and
xchg
xchg
xor
dec
pop
lea
lea
adc
scas
sbb
out
stos
clc
mov
cmp
insb
or
adc
sub
push
xlat
push
int3
insb
or
dec
das
out
fcompl
es
mov
cmc
enter
bound
testl
pop
inc
fidivrs
inc
sbb
jmp
lret
imul
int
pop
lret
and
shll
sbb
xor
jle
insl
dec
sbb
shlb
jmp
scas
aam
jno
ljmp
inc
mov
jle
pop
insl
or
in
stos
test
idivl
lret
cmp
bound
or
xchg
les
into
stos
ret
cmp
pop
test
out
jo
cwtl
xor
cmp
sbb
add
xor
test
sti
jbe
mov
add
nop
enter
pop
lods
and
mov
insl
mov
sbb
addb
xor
clc
jno
cld
add
sbb
inc
ja
jecxz
sarb
fisubs
mov
mov
leave
flds
aam
push
jg
repnz
pop
stc
into
mov
aam
xor
movsl
shld
xlat
inc
mov
test
test
sub
call
mov
and
dec
pusha
mov
mov
test
int
scas
lock
leave
cld
mov
pop
adc
out
mov
xor
les
cmp
pop
push
jg
mov
mov
mov
fisttpll
push
push
pop
addw
clc
movsb
std
mov
cld
inc
adc
push
sub
mov
xor
mov
hlt
lret
test
test
scas
or
cmp
ret
pop
xor
hlt
in
or
mov
arpl
jecxz
jae
stos
cmp
in
mov
ja
sub
mov
mov
adc
je
inc
cli
aas
nop
in
jne
ret
mov
popl
mov
test
mov
out
fwait
dec
rcr
and
adc
mov
mov
inc
test
xor
adc
leave
jge
scas
pminub
loop
sbb
popf
push
fisubrl
popf
dec
int3
fdivp
xchg
lahf
add
jle
mov
fadds
lock
addr16
jne
fdiv
test
aad
xchg
pop
dec
in
xorb
add
stc
adc
jg
in
push
scas
shrl
fs
inc
imul
out
cmp
push
pop
jmp
pop
lret
cmp
mov
insb
clc
jnp
or
sahf
leave
aad
bound
enter
xchg
stos
adc
out
pop
push
cmc
push
stos
inc
mov
imul
inc
pop
roll
in
or
jg
in
lcall
popa
in
std
stos
push
int3
sub
sbb
xchg
inc
mov
stc
insl
push
ret
inc
cs
xor
pop
das
push
inc
imul
ljmp
std
stc
mov
jl
sub
sub
cmp
jnp
int3
roll
out
pop
jns
daa
out
cmpsb
mov
and
daa
cmp
aas
adc
mov
loop
sbb
sub
inc
xchg
fs
sbb
mov
insb
adc
addr16
xchg
adc
notb
pusha
mov
in
clc
jle
jno,pn
inc
cmc
mov
mov
addr16
inc
adc
xchg
movsl
xchg
test
loope
iret
aam
shrb
xchg
add
dec
sbb
pop
push
sub
mov
into
adc
cmp
test
mov
subb
popf
lods
int
pop
lods
aas
jecxz
sub
lret
cmpsl
and
in
aas
test
mov
mov
divb
cmpsb
mov
xchg
pop
xlat
aas
ret
xchg
dec
lds
nop
addr16
outsl
and
jnp
sbb
ret
das
enter
adcb
fistpll
or
adc
cmpl
and
or
stc
or
gs
xchg
in
stc
out
cmp
lea
mov
cmpsb
mov
jne
mov
lret
mov
or
imul
ret
mov
pop
mov
les
push
lock
or
pusha
pop
jg
ficompl
lret
jp
pop
push
rorw
add
mov
sbb
iret
sarl
mov
imul
test
sbb
cmpsb
outsb
dec
lds
xor
aaa
lret
and
inc
stos
shrl
loopne
inc
movsb
push
xlat
adc
mov
and
sbb
daa
cmpsl
xor
pop
mov
mov
andb
iret
jecxz
popf
jo
icebp
add
jp
lds
fdivp
pop
cmp
push
cmp
out
mov
jno
std
pop
dec
cs
xchg
add
cld
dec
jge
mov
cmp
mov
sub
mov
xchg
xchg
or
and
push
out
cmpsb
push
mov
aaa
adc
fstcw
push
scas
cmp
lret
inc
mov
pop
add
mov
popf
lock
or
jns
lret
ljmp
aaa
push
mov
and
mov
lcall
mov
push
or
into
push
loope
ja
push
cmpsb
movsb
rcrl
mov
ss
mov
sbb
adc
cwtl
mov
inc
mov
dec
mov
sahf
stc
mov
and
repz
cwtl
push
lret
imul
inc
xor
gs
lret
sbb
inc
sbb
pop
out
jl
test
test
add
fisubrs
outsl
sub
test
adc
inc
ficomps
jb
lock
jmp
push
xor
add
mov
xor
xor
adc
push
insb
mov
xchg
mov
test
xlat
pop
js
call
jb
and
jmp
fidivs
dec
cli
call
mov
addr16
and
xchg
push
ret
ds
aas
gs
int
and
add
push
test
push
xor
pop
xor
shr
adc
xlat
dec
jmp
sbb
push
pop
mov
xor
fdivrs
jae
jp
adc
push
imul
push
imul
pushf
sbb
ja
mov
or
add
lret
mov
popf
scas
hlt
outsl
mov
out
jp
call
pop
lahf
mov
jnp
scas
mov
loopne
sahf
ja
sub
adc
cmp
rcrl
ss
xor
fs
cs
mov
xor
push
aaa
push
mov
mov
movsb
push
xchg
sbb
adc
scas
adc
sub
push
add
sub
scas
cmp
fidivl
cmp
adc
xor
mov
in
insl
lea
ret
in
fmul
cmp
es
or
jle
jge
orb
pop
sub
fwait
cmp
enter
addr16
jge
lods
mov
and
icebp
movsl
fninit
push
test
mov
or
scas
xor
clc
sbb
push
dec
fdivs
inc
or
xorb
filds
loope
adc
daa
mov
dec
jp
pop
or
jmp
test
dec
push
sub
lret
in
cmp
fs
loopne
adc
faddl
ret
test
push
data16
jmp
lods
fldenv
xchg
adc
test
sti
mov
push
mov
fmull
dec
cmp
sbbb
cmp
dec
ja
fwait
mov
mov
pushf
icebp
ds
sub
sbb
dec
jns
nop
insb
xchg
xor
or
aad
roll
dec
mov
mov
rorl
shr
sub
and
jp
cltd
push
lock
push
pop
ret
neg
out
xchg
mov
js
mov
pusha
fwait
hlt
and
and
scas
mov
jo
or
lods
popf
jb
or
sub
or
mov
fdivs
call
out
sub
insb
imul
out
add
leave
mov
mov
inc
js
or
push
adc
ret
pop
pop
jo
xor
or
nop
aad
xor
cmpsl
pushf
mov
mov
xlat
add
dec
sbb
mov
sbb
jo
imull
icebp
inc
pop
fcos
inc
adc
mov
push
addl
adc
sub
shll
or
cli
push
cmc
cmp
scas
ja
int3
mov
scas
cmp
inc
fstpl
push
dec
jg
mov
jne
dec
xor
mov
clc
add
cld
mov
repnz
adc
test
dec
push
or
pop
fldl
cmp
mov
jo
scas
int3
jmp
or
mov
push
add
int3
cs
pop
jg
jnp
mov
xchg
push
jg
and
ret
sub
sub
shrl
dec
and
jo
mov
pop
mov
inc
cmp
or
aas
dec
and
inc
lahf
pop
std
sbb
add
fwait
and
xchg
xor
fdivrl
cwtd
pop
sbb
ss
mov
push
dec
outsl
adc
iret
mov
jl
push
fidivl
adc
imul
mov
sbb
sub
xchg
jno
aam
stos
pusha
inc
clc
mov
add
and
jno
repnz
mov
mov
rorl
shrl
xchg
push
leave
jg
icebp
ret
rcr
fcmovnb
inc
jge
pop
jae
sub
sub
jne
je
cwtl
xor
test
cld
in
loopne
cltd
sbb
mov
mov
jmp
lock
test
dec
in
adc
push
pop
js
mov
fsubrl
mov
mov
ss
inc
mov
das
sub
inc
add
int3
add
pop
xor
fcmovne
mov
mov
addr16
mov
pop
xchg
mov
repz
repz
shrb
dec
adc
gs
xchg
sub
push
call
sbb
cltd
and
pop
add
stos
sub
pop
xchg
cs
leave
or
mov
mov
sbb
push
out
imul
or
aaa
testl
adc
cmp
xor
lcall
pop
add
insl
jg
or
jns
inc
pop
push
cmp
in
or
add
jp
push
pop
lds
popa
cmp
inc
jb
push
xchg
add
or
jg
int3
sub
sub
xchg
movsl
repnz
and
cmc
push
jle
incb
fbstp
push
jnp
pop
cmpsb
xor
je
adc
push
jne
mov
jg
jl
repz
lods
icebp
adc
add
push
loope
leave
jb
lds
loope
sub
add
xchg
daa
and
inc
xchg
data16
xor
adc
pop
xlat
enter
sbb
push
cmp
xchg
jge
outsl
fisttpll
cs
mov
xlat
iret
ljmp
and
jl
add
ret
pop
mov
sti
cmp
adc
dec
shrb
inc
xchg
or
and
fildll
xor
es
push
push
xor
cmpsl
mov
out
and
cld
aaa
mov
in
adcl
cmp
sub
sub
call
cmc
xor
xor
sub
and
pusha
pop
gs
enter
test
fs
pop
xor
adc
adcl
imul
pushf
push
add
or
and
jle
pushf
dec
cmp
ljmp
push
jge
rolb
xor
filds
jb
test
or
jmp
imul
popf
jle
pop
xor
insl
xorb
ljmp
xchg
in
lret
or
dec
mov
movntq
out
and
mov
fnstsw
mov
jg
int3
lods
lods
pop
faddl
das
add
jg
or
in
xchg
cs
adc
adc
inc
fwait
add
in
jecxz
fsubrs
sbb
jp
jmp
cmp
inc
mov
cmp
cmp
jl
push
pop
and
aaa
cs
xchg
adc
xchg
mov
mov
testb
add
jl
mov
jl
mov
call
jae
mov
sub
add
mov
icebp
cs
and
clc
test
pop
mov
xor
lea
ja
xor
fdiv
jge
pop
cmp
scas
cmp
std
ud0
jl
icebp
notl
stos
mov
cmp
jns
pop
mov
mov
pop
aaa
int
pop
sub
test
jp
pop
je
sbb
mov
daa
addr16
js
jl
pop
xchg
jl
mov
bound
xor
xchg
or
xor
enter
cmp
dec
aam
push
dec
cmp
jae
aam
movsl
mov
inc
loopne
jle
jne
dec
push
ret
jmp
dec
xor
cmp
fdiv
out
push
aas
jb
hlt
jae
in
mov
subl
lock
ja
orl
xor
pop
mov
int3
and
jl
fidivrl
cmpsl
push
jbe
sub
xchg
jg
fdivs
inc
in
lret
mov
add
jge
add
leave
and
push
movb
add
in
xchg
pop
lds
out
fildll
andb
pushf
jg
dec
mov
test
inc
jne
popf
pop
cmp
dec
aaa
sub
repz
ret
pop
lds
push
loop
sbb
imul
and
inc
fwait
es
xchg
gs
jb
push
insl
imul
adc
cmp
hlt
jle
daa
pop
scas
jo
out
js
daa
xchg
pop
cmp
shrl
dec
imul
mov
lods
and
cmp
push
loopne
jno
mov
scas
fidivrl
fsubrs
adc
mov
dec
inc
int3
pop
xor
int3
mov
pop
lds
xor
jb
jle
es
xchg
test
ret
lods
mov
jl
cwtl
dec
fcmovnbe
mov
outsb
add
xchg
jo
fisubl
inc
js
out
stc
xor
cld
push
push
pushf
frstor
aaa
xor
xchg
movsl
cmc
add
lcall
lret
xor
jae
cli
or
pop
sub
gs
mov
cmp
hlt
xchg
mov
nop
push
add
fcoml
leave
jno
js
int3
jnp
mov
lret
xor
mov
shl
mov
sbb
and
std
pop
aas
jmp
mov
lcall
movl
movsl
sub
cmpsb
mov
data16
jle
rorb
sub
leave
das
out
inc
and
sbb
popf
loopne
push
addb
lret
pop
mov
pop
push
mov
add
incb
pop
int3
scas
sbb
cli
push
cmpsb
into
ret
jns
xor
lcall
xorl
cmp
adc
inc
lahf
insb
jp
fdivrl
push
inc
dec
ja
xchg
outsb
xor
arpl
jmp
ss
lret
cmp
mov
and
lret
pop
cmp
bound
in
mov
rorl
cmp
xchg
shrb
int3
sarl
lods
mov
mov
mov
pop
popa
jno
daa
out
andl
push
ss
pop
out
cmp
cmp
cmp
fiadds
jns
out
mov
fwait
sbb
in
or
sub
push
push
lahf
inc
xchg
xor
loopne
scas
sub
push
mov
add
mov
ror
cwtl
mov
sbb
dec
int3
sub
cmp
xchg
js
dec
rcll
inc
pop
gs
cmp
mov
into
and
add
ret
xor
repz
and
lahf
fwait
fwait
leave
push
shrl
lcall
clc
xchg
fdivs
dec
lcall
push
lea
bound
mov
mov
mov
sbb
push
and
push
out
mulb
mov
sahf
xchg
bound
movsl
adc
sbb
or
jns
mov
xchg
add
shrl
dec
mov
gs
lods
mov
jmp
mov
xchg
int
or
out
mov
sbb
pop
sub
fisubl
and
aas
cmp
dec
dec
fildll
pop
adc
rorl
stos
inc
popf
dec
test
mov
inc
jmp
lahf
push
push
mov
add
xchg
cmc
or
push
js
inc
je
cli
insl
in
imul
ja
inc
fmuls
cli
lods
ja
nop
adc
cmpsb
xchg
or
out
push
adc
iret
ljmp
and
mov
arpl
arpl
rol
test
add
jle
xor
and
mov
mov
test
and
pop
cwtl
mov
loopne
and
cmpsl
mov
adc
mov
loop
int3
inc
sbb
mov
jo
pushl
push
xchg
jmp
fisttpll
mov
mov
out
mov
xchg
test
or
into
ret
push
adc
test
pop
movsb
jae
std
sbb
xor
in
xchg
fst
push
inc
adc
fiaddl
mov
sbb
mov
repz
fmul
out
jl
mov
mov
adc
in
in
cmpsl
gs
cli
loope
movsb
mov
out
aam
rcrb
dec
daa
mov
mov
iret
pushf
fiadds
imul
add
rorl
popf
mov
adc
shrd
jge
pop
call
hlt
mov
adc
lret
dec
lea
jge
adc
add
jb
dec
and
push
adc
lret
push
les
cld
lods
out
fidivrs
fwait
push
pop
lcall
inc
and
dec
pop
cmp
sti
mov
mov
mov
imull
lret
jns
in
in
ret
cwtl
mov
xor
sub
repnz
push
fnstenv
arpl
push
sbb
adc
out
jae
call
cmp
lea
sbb
das
divb
push
mov
push
test
jno
mov
daa
in
jl
pop
xchg
push
jnp
dec
rclb
mov
stos
inc
mov
outsb
inc
ffreep
cmc
daa
inc
xor
rcll
mov
push
xchg
pop
sahf
jns
cld
and
adc
inc
ds
lods
xchg
sub
in
shr
lock
icebp
jmp
xlat
movsl
push
lcall
insl
mov
fistps
fistpl
dec
loopne
cmp
ljmp
sbb
add
test
incb
mov
pop
add
add
add
sub
aas
sub
jle
cwtl
test
negb
push
or
in
prefetch
rclb
xor
jne
xorl
mov
outsb
hlt
cmp
lret
mov
fimuls
pop
in
jne
mov
pusha
adc
imul
cs
jge
jne
popa
push
jmp
in
push
push
fwait
jb
mov
sbb
mov
stc
mov
movsb
pop
aaa
push
lret
jo
sbb
mov
shll
add
fmul
std
and
pop
adc
xor
jge
lods
icebp
push
lret
pop
neg
in
adc
push
pop
dec
mov
sbb
fwait
adc
push
insb
xorb
filds
mov
addr16
rcll
mov
inc
hlt
xor
test
lods
pop
negb
bound
add
sbb
xchg
mov
clc
push
cmp
lret
sbb
jb
jp
mov
push
in
sar
gs
test
mov
cmp
scas
inc
cs
fsubrp
popa
pop
sbb
lods
stc
sbb
in
dec
ret
add
push
jmp
mov
popa
int3
jge
or
hlt
sub
lret
sub
mov
xor
mov
push
aas
out
repnz
jge
repz
mov
test
shl
xchg
mov
and
ret
dec
pushf
ds
nop
sbb
lcall
pop
in
outsl
nop
or
cwtl
cwtl
add
call
push
lcall
pop
jle
mov
cmp
cmp
sbb
out
xor
call
mov
js
xchg
in
cwtl
aam
push
pusha
shr
lcall
stos
inc
and
dec
fcompl
dec
mov
push
or
movsb
mov
into
cmp
js
add
sbb
fbld
cmp
and
mov
push
and
fnstenv
sbb
push
xchg
aas
dec
mov
sti
adc
ljmp
outsl
repz
mov
mov
sub
mov
insl
idivl
out
mov
push
mov
in
pop
mov
push
inc
or
das
stos
in
or
test
mov
mov
popa
loope
mov
push
adc
movsb
pop
sub
mov
outsl
and
or
lret
popf
pop
rcr
test
shrb
leave
adc
or
movl
fcomp
mov
fnstenv
mov
xchg
or
das
ljmp
mov
les
mov
mov
add
and
and
popf
jg
sti
xor
pxor
cli
lahf
rolb
std
test
out
inc
outsb
scas
jl
push
scas
mov
jmp
imul
mov
fdivrl
test
in
stos
ret
rolb
hlt
movsb
rcrl
shl
lea
mov
outsb
lock
cmp
sarl
adc
inc
xor
pop
sbb
dec
sub
pushf
inc
cli
pop
cmp
xchg
into
stc
inc
stc
cltd
xchg
flds
lea
lret
lcall
sbb
aam
mov
sub
out
mov
inc
cmc
pop
loopne
mov
sarb
mov
popf
dec
lea
stc
or
pop
arpl
mov
cvtdq2ps
fimuls
mov
inc
cwtl
repz
repnz
cmp
mov
jle
aad
xor
out
cmp
xchg
fldenv
aas
pop
xor
push
data16
pop
decl
inc
pushf
out
and
ja
lret
sti
imul
sub
ret
nop
add
mov
scas
push
test
rcll
cmp
nop
idiv
fisttpll
addr16
inc
mov
pop
dec
fisubs
mov
out
mov
sbb
and
xor
dec
fdivl
rorb
jae
mov
rcrl
cmp
pusha
arpl
popf
xlat
inc
imul
and
jmp
jle
xchg
ret
das
push
mov
mov
sub
lahf
nop
aas
jbe
xor
pop
movsl
leave
and
movsl
push
or
mov
dec
popa
dec
outsl
mov
popa
xor
jl
nop
and
or
outsl
inc
adc
cmp
fcmovbe
and
add
or
pop
cmp
or
enter
add
mov
pop
mov
and
sub
sub
jno
mov
sub
fnstcw
jl,pt
inc
cmp
cmp
dec
aad
jmp
push
xchg
and
lods
xor
js
ds
call
std
or
lods
pop
shl
jae
mov
mov
pop
out
and
xchg
aas
cwtl
icebp
sbb
lcall
xchg
shrl
mov
adc
and
scas
outsb
add
into
lahf
movsl
fimull
loope
xchg
in
sub
lret
sub
jle
xor
sbb
jnp
pop
jo
neg
adc
pop
gs
pop
fs
cmp
mov
lea
cs
lea
cmc
insb
dec
adc
jle
adc
imul
psubusb
pop
xlat
test
dec
stos
mov
mov
daa
test
jnp
or
repnz
stc
cmp
adc
out
das
ret
clc
mov
dec
fimull
addr16
xchg
aas
scas
jmp
cmp
test
pop
add
stc
fdivrl
sub
jmp
cmc
push
mov
sarl
sub
dec
out
mov
insl
and
push
lock
leave
scas
iret
jno
lods
shll
dec
sub
add
subl
mov
pop
stos
push
xor
fadd
dec
daa
pop
rcll
pop
and
loope,pt
and
fldenv
mov
cwtl
xor
sub
push
mov
sub
stc
lea
adc
bound
sti
imul
imul
shrl
mov
cmpsl
xorb
push
xchg
shrb
bnd
pusha
arpl
mov
scas
ret
int3
lock
data16
sbb
sbb
loop
fistl
mov
mov
jmp
enter
jg
add
lods
shrb
xchg
and
int
jbe
mov
negb
pop
push
mull
popa
data16
cmc
mov
flds
insb
fldt
test
neg
lret
lret
or
dec
cmp
test
lock
xchg
rcrb
jg
andb
lods
out
cs
inc
lea
push
sbb
inc
mov
pusha
cmc
sub
dec
jno
pusha
loopne
xchg
lock
xor
push
cmp
rcrb
enter
fstl
enter
sbb
jmp
test
fcoml
pusha
xlat
fcoms
into
fsubs
cmp
push
sahf
sbb
enter
scas
push
cmpsb
pop
pop
shll
dec
pop
movsl
cmpsl
divb
fisubrs
mov
outsl
mov
jb
and
pop
pop
inc
into
lea
shlb
ljmp
out
push
inc
ss
add
fmuls
loope
icebp
test
and
add
ss
pop
xchg
and
push
push
jge
jp
outsb
lds
daa
movsb
push
sub
imul
dec
jb
lea
add
xor
pushf
loop
mov
cmp
roll
pop
and
adcb
pop
scas
test
pop
fsubrl
xor
xchg
inc
int3
mov
ljmp
cmpsl
mov
enter
push
out
lods
in
loope
sbb
and
je
cwtl
jo
pop
adc
lahf
mov
sub
loop
faddl
cltd
lock
jmp
stos
outsb
pusha
dec
mov
xor
pop
outsb
add
inc
jno
lret
or
aaa
leave
out
pop
mov
sbb
inc
cmp
insl
pop
leave
sub
dec
pop
xchg
sub
sub
mov
jmp
push
cmp
cmp
movsb
push
into
and
leave
jmp
js
int3
testb
popfw
fadds
mov
ds
subb
pop
rclb
pop
ljmp
lock
push
loop
add
xchg
cmp
sbb
mov
in
mov
jmp
mov
pop
cli
cmp
test
idivb
xchg
push
xlat
dec
push
mov
cmpb
inc
ljmp
les
jge
lret
add
inc
addr16
insb
xchg
or
imul
sub
xchg
push
das
mov
fstp
push
clc
ret
inc
popa
je
pop
cmp
mov
pop
jl
xchg
mov
sbb
aas
setno
movsl
ss
aam
repz
dec
jb
sbb
pop
cmp
icebp
mov
adc
ret
jle
xchg
dec
test
adc
or
lods
fbstp
mov
adc
xlat
notl
gs
mov
stos
popa
stc
sti
ja
and
sbb
mov
movsb
mov
cmp
cmp
loope
push
adc
adc
inc
push
stos
adc
enter
sub
imul
loopne
adcl
pop
sub
mov
push
xchg
push
lret
mov
or
sub
add
mov
mov
into
pusha
icebp
jmp
pop
fildl
push
sub
out
cltd
mov
inc
jecxz
int3
fisubrl
in
call
andb
cld
dec
pushf
hlt
mov
into
add
add
mov
xchg
lods
cmp
jge
les
add
daa
xchg
pop
push
xorl
lods
xchg
mov
call
insl
pushf
arpl
ja
push
sub
pop
imul
adc
sub
ljmp
mov
sub
rcrl
iret
imul
mov
lahf
fnstsw
sbb
push
push
insl
pop
enter
aad
mov
mov
ret
mov
xor
outsl
popa
sarb
push
fisubs
push
loope
fimull
pushf
xor
sar
scas
hlt
mov
xchg
xchg
repnz
pop
dec
dec
jl
sti
xchg
lods
or
js
in
in
adc
add
imul
inc
stos
or
cmpsb
leave
lock
nop
pop
lods
outsb
xchg
js
and
sbb
cmc
mov
cmc
insb
mov
out
out
orl
jp
stos
in
push
dec
test
out
fwait
mov
sahf
pusha
sub
es
mov
cltd
in
cmp
and
loop
xlat
int3
dec
xchg
mov
loope
jl
test
push
cwtl
lods
sbbb
cs
movsl
mov
mov
lods
fcmovne
arpl
lret
xchg
dec
pop
icebp
les
sub
push
cld
iret
lea
jne
test
rcr
fcompl
jp
imul
rorl
mov
dec
into
loopne
outsb
pop
inc
inc
xchg
inc
jno
arpl
xor
xchg
int
movsb
fscale
pop
cmp
cmpsb
inc
dec
adc
fwait
cs
sahf
int
in
repnz
icebp
aad
dec
mov
jae
es
mov
xor
and
jnp
mov
loope
push
mov
dec
lds
cmp
mov
sbb
out
xchg
jne
inc
adc
insl
mov
iret
in
sbb
sbb
jmp
pop
insb
jg,pn
call
outsb
xor
ds
mov
sbb
sub
ret
mov
ja
cmpsb
cmc
xchg
add
add
add
loopne
or
repnz
shl
adc
dec
loope
xchg
into
ror
add
adcl
push
movsb
in
out
pop
mov
lock
ljmp
mov
roll
cmc
add
push
xor
sub
gs
stos
std
push
cmpsl
or
iret
inc
test
testb
mov
add
ss
aam
fwait
mov
or
sbb
mov
cmp
faddl
mov
in
sahf
xchg
mov
xchg
cmc
sbb
inc
in
lock
fsub
out
and
fninit
shlb
mov
jecxz
scas
cmp
push
ror
cltd
push
jecxz
add
mov
xchg
loopne
aad
das
push
xchg
loopne
and
jbe
cmp
int3
enter
cmp
sbb
add
loop
sub
lcall
cs
add
fcmovnb
pop
jne
mov
push
into
inc
movsb
imul
sub
out
jl
rclb
dec
or
lret
imul
and
xor
lcall
es
sbb
jae
jp
fiadds
scas
adc
fdivrs
push
dec
push
push
cmpsl
push
fwait
inc
jle
cmpsl
lods
repz
into
imul
cli
lods
lcall
cmp
jne
push
add
pop
inc
popa
ss
jnp
aaa
pushf
out
into
jae
pop
xor
test
dec
orb
bsr
jge
mov
jl
push
stc
mov
mov
movsb
gs
or
ds
mov
gs
int3
jecxz
clc
ljmp
imul
cltd
loop
jl
xor
hlt
mov
outsl
pop
aad
and
lahf
cmpsl
loop
in
xor
adc
adc
mov
insb
jae
add
push
les
push
shlb
loope
std
mov
add
shl
xchg
jns
pop
inc
test
insl
sub
dec
adc
arpl
adc
loope
and
ss
or
movsb
jg
dec
decb
std
inc
mov
xchg
mov
fidivl
jo
addr16
fsub
pop
pop
push
mov
sbb
shlb
leave
xchg
inc
scas
popa
sub
iret
out
lahf
pop
xor
adc
out
cmp
icebp
sub
insl
adc
jl
insb
leave
mov
popa
xor
scas
daa
pop
ss
das
mov
pop
sub
xchg
jle
shlb
cmp
jb
mov
lret
pop
sbb
lret
ja
dec
xchg
push
pop
stos
std
fcoms
out
pop
jae
jmp
jmp
adc
inc
jp
cmpsb
jle
addb
pop
mov
rcr
lods
mov
repz
sahf
movsl
pop
lret
pop
dec
xor
movsb
js
sub
mov
pop
aas
mov
mov
pop
mov
push
xor
jg
mov
adc
into
mov
lods
in
and
movsb
outsl
int
mov
popa
adc
pop
aas
movsb
in
pop
jmp
mov
xchg
std
enter
ss
dec
aas
push
mov
jge
ss
xor
fdivp
ficoml
clc
ficoms
cmp
fdivrl
cmpsb
mov
add
jno
jnp
cmp
fidivs
jns
in
xor
sub
call
xor
outsl
xchg
fucomip
clc
aaa
jmp
xchg
push
loop
mov
jp
movsl
sarl
dec
mov
inc
bound
mov
int3
in
cltd
lret
mov
mov
xlat
jg
shlb
cmpsl
xchg
xchg
adc
mov
pop
jae
jl
push
out
jnp
xor
es
in
movsb
mov
sub
mov
mov
lret
mov
lret
addr16
shll
jo
fcoml
push
mov
std
mov
femms
addr16
fwait
push
push
or
jg
in
out
aaa
push
inc
xor
dec
fdivrl
cmpsl
jns
test
aad
scas
mov
inc
leave
cmp
fwait
test
cmp
scas
push
or
shrl
pop
push
xor
pop
jecxz
adc
fwait
and
jae
jnp
or
xchg
out
xor
nop
sub
fsubl
in
iret
iret
inc
xchg
cmc
mov
xlat
insb
jno
pop
pop
add
lahf
pop
push
jmp
jg
sub
in
jp
pop
adc
xchg
out
lock
test
xor
insl
jns
push
lea
test
sub
mov
sub
mov
sub
xor
xor
xor
or
cli
test
jg
cmp
leave
mov
xchg
jns
or
mov
bound
and
pop
push
ss
push
mov
push
xor
pop
sub
xlat
icebp
pop
out
or
movsl
jge
add
in
xorb
or
insb
or
ss
ja
or
xor
jne
jnp
lods
push
pop
clc
pop
es
mov
dec
in
loop
dec
js
inc
dec
mov
xor
faddl
pop
adc
lea
mulb
xchg
sub
rclb
xchg
push
sub
enter
mov
mov
inc
jo
lret
jbe
fnstenv
int
lock
add
imul
xchg
or
ja
test
out
test
loop
sub
das
mov
arpl
out
pop
sbb
dec
jge
or
mov
mov
pusha
mov
mov
dec
sub
fldt
add
movsb
scas
xchg
stc
scas
test
jle
outsl
xor
mov
push
mov
cmp
enter
daa
rol
out
rcll
jo
inc
pop
jp
or
mov
fwait
sahf
xchg
les
push
das
add
adc
in
pop
jl
jl
data16
mov
or
aaa
jnp
lahf
inc
xor
scas
lss
pushf
int3
sti
jecxz
or
insb
xchg
in
mulb
imul
sbb
scas
inc
sbb
cwtl
insb
pop
push
fbstp
cwtl
testb
fstpl
push
add
xchg
ds
scas
mov
addr16
lcall
lods
arpl
mov
xor
mov
cli
cmc
dec
and
test
je
inc
jle
push
gs
loopne
in
fmuls
stc
xor
pop
pop
enter
adc
int
in
and
lahf
clc
cmp
fwait
xor
jmp
jae
mov
or
or
push
rcrb
jge
fdivs
in
cmpsl
mov
xchg
push
cmc
ror
loopne
dec
xlat
mov
push
insl
loope
pop
shl
data16
rclb
and
jae
pop
lds
mov
mov
daa
stc
push
call
ret
jmp
test
notb
mov
xchg
jne
in
call
fldl
cli
in
xchg
lcall
adc
add
xor
jae
movsl
xor
jbe
test
mov
lods
stc
repnz
xchg
jbe
in
jle
or
mov
adc
sarb
pop
or
pop
in
sbb
popa
mov
mov
lret
mov
pusha
jle
outsl
mov
sub
xor
mov
pushf
je
test
je
or
cvttps2pi
mov
cs
int
add
add
sbbb
test
cmp
aam
push
dec
out
addr16
and
jmp
jg
ds
cmpsb
loop
sub
imul
adc
jno
inc
dec
stos
fwait
xchg
add
ljmp
cli
mov
sbb
stc
je
imul
inc
jne
jae
nopl
sbb
dec
sbb
lock
or
push
push
inc
lods
out
test
lock
pop
jne
sahf
shrb
mov
push
cmp
pop
cmpsl
cmc
xchg
lret
clc
pop
cmp
and
add
nop
xor
out
fidivrs
outsl
push
movsb
lock
aam
fwait
inc
xchg
in
mov
lahf
out
xchg
mov
xor
sbb
or
fnsave
ljmp
mov
arpl
jle
mov
dec
mov
push
scas
gs
sahf
inc
mov
js
adc
cmp
imul
in
jne
outsl
fdivrl
repnz
jnp
mov
movl
or
ljmp
pop
fbstp
pop
arpl
pop
pop
or
sub
pop
bound
bnd
ficoml
xor
sub
cmp
mov
dec
ljmp
xor
jl
xor
xchg
arpl
mov
pop
scas
movsl
lock
imul
xchg
shlb
inc
jb
movsb
mov
lcall
flds
test
stos
and
adcl
jecxz
clc
inc
mov
and
adc
dec
mov
lahf
jae
push
sbb
lahf
xor
ja
stos
mov
mull
push
repnz
sahf
xchg
pusha
sub
outsl
push
loop,pn
or
dec
cmp
mulb
dec
pop
lcall
mov
arpl
jbe
xchg
xor
and
mov
xor
pusha
inc
inc
cmp
push
jecxz
popa
xchg
cmp
lret
add
rep
jg
sbbb
pop
dec
bound
mov
xchg
rcll
adc
xor
xchg
sub
xor
xchg
jecxz
pop
adc
daa
mov
xor
push
movsl
pusha
xchg
add
push
xchg
adcl
xchg
out
adc
cltd
jo
xor
loopne
xchg
inc
mov
dec
jle
dec
adc
xchg
aam
or
pop
outsb
insl
xor
adc
ret
xor
in
aas
in
mov
in
jl
repz
mov
push
lock
outsb
mov
sbb
js
js
movd
mov
sti
cmp
pop
mov
cmc
lock
cmp
adc
cld
adc
jnp
rclb
pop
repz
sub
jg
subb
movl
mov
xor
loop
int
test
stos
lret
inc
fcomp
cmp
dec
lods
in
push
mov
test
lret
mov
test
es
shl
scas
push
vmwrite
loopne
jle
mov
fcoms
or
jle
into
xchg
andl
cmpsl
popa
or
fwait
add
xchg
dec
push
es
into
pop
mov
push
and
insl
adc
mov
pushf
mov
cmpsl
jae
mov
and
pop
pop
enter
mov
xchg
dec
jbe
lods
pop
jmp
imul
hlt
ret
inc
shr
xchg
jge
sub
cmp
nop
orl
lock
pop
push
mov
jo
ret
jo
out
dec
sbb
sbb
adc
pushf
inc
dec
jge
xchg
incb
mov
arpl
adc
out
outsl
or
fimull
pop
hlt
sbb
cs
insb
out
lock
loopne
xchg
xlat
add
ss
adc
add
mov
xlat
sub
and
xchg
stc
cli
aam
fdivl
push
fbld
imul
ret
lret
mov
push
or
and
lock
xchg
sub
add
leave
dec
cmp
loope
ds
stos
add
cmp
pop
std
mov
inc
jmp
in
mov
jb
jno
insb
mov
cwtl
pop
mov
pop
rcrl
lds
push
mov
jbe
or
pop
cs
xor
pop
pop
adc
mov
jne
iret
push
not
mov
cmp
xchg
or
cmc
or
lds
or
adc
shrl
shl
bnd
dec
jb
jmp
pushf
fiadds
lret
jo
sbb
rclb
loop
pop
mov
dec
out
inc
mov
rcr
xor
mov
sti
mov
dec
mov
popa
push
dec
cmp
lods
mov
xchg
mov
insl
push
in
cmp
mov
cld
aam
das
lods
mov
movsb
push
stos
sub
mov
or
mov
push
mov
adc
pop
ficomps
lcall
adc
pop
dec
inc
xor
xorl
incl
dec
movsb
inc
dec
ret
fiadds
jg
xchg
lahf
lods
loop
iret
iret
loop
imul
int3
sbb
leave
repz
fsubs
jmp
mov
fcmovnbe
lea
pushf
loop
sbbb
dec
and
pop
xchg
outsb
out
nop
sahf
xchg
hlt
sti
mov
fdivs
fwait
push
mov
dec
mov
push
push
push
jle
test
inc
rorb
mov
movsl
scas
shll
cwtl
incl
or
fbstp
xor
xor
cmp
imul
outsl
xor
sub
dec
dec
out
dec
call
pop
add
loope
add
in
adc
or
xchg
sub
movsb
aaa
aaa
adc
cmpsb
cmpsb
and
int
mov
mov
imul
stos
out
lods
add
stos
and
cwtl
pop
fbstp
stos
xor
xor
fstl
cmpsb
in
mov
mov
sub
loop
push
push
and
sarl
mov
adc
add
add
xchg
inc
jns
hlt
add
popf
push
cs
in
leave
dec
pop
cmp
lahf
es
arpl
pop
popa
add
cmp
enter
add
xchg
cmp
cs
mov
add
int3
adc
insb
loopne
mov
sub
test
ja
pop
test
and
clc
lret
pop
and
daa
ret
mov
mov
mov
test
push
ret
xlat
push
sub
jmp
xor
mov
fdivrs
cmp
fcom
cwtl
dec
les
pop
lcall
imul
xorb
add
or
cmpb
pop
dec
inc
mov
xor
shrl
mov
push
mov
push
mov
aam
lds
loop
cwtl
jle
test
cmp
dec
repnz
sbb
lret
sbb
scas
gs
mov
push
push
hlt
adc
aad
or
fisttpl
jnp
cmp
notb
sarb
jge
cmp
fwait
mov
jmp
mov
sbb
dec
addb
push
xchg
shlb
and
inc
push
fnstcw
aas
add
test
js
inc
fdivp
sahf
push
lcall
outsl
or
sub
xchg
push
movsl
and
mov
pop
ficompl
mov
pop
cmp
push
shl
js
out
std
lods
inc
addr16
mov
call
int
fs
fimuls
lds
mov
cmc
mov
mov
pop
mull
es
nop
clc
fsubrs
mov
sub
sbb
rol
js
cmp
movsl
lock
inc
xor
cltd
sub
or
out
les
xor
stc
or
incl
popa
sub
cmpsl
xor
xor
nop
xchg
sub
xchg
test
or
imul
cmp
lcall
jle
mov
sub
mov
xchg
jo
arpl
movsb
mov
sub
mov
dec
pop
loopne
sbb
xlat
jecxz
xchg
push
mov
inc
adcl
push
jae
aas
sub
mov
jp
ds
movsb
test
or
xor
push
jecxz,pn
inc
icebp
sub
pusha
stos
ds
into
imul
cmc
sahf
pop
outsl
and
ljmp
daa
jbe
jmp
and
adc
hlt
xchg
inc
lret
sbb
xor
fildl
lcall
or
fwait
pop
mov
cmp
in
push
syscall
loopne
out
jb
sahf
es
fdivrs
dec
push
xor
and
jo
insl
mov
iret
enter
dec
mov
stc
stos
jo
cmovno
sbb
xorl
repnz
and
clc
push
std
stc
fildl
xor
cmp
lret
lods
sbb
shl
sbb
or
rcl
fistps
test
daa
or
mov
lds
mov
loop
xor
dec
je
cmc
aad
cmpl
mov
sub
subl
sar
stos
lret
repz
imul
popf
or
sub
xor
xchg
inc
repnz
cmpsl
mov
sahf
mov
movsb
sbb
lcall
adc
cmpl
inc
aad
jnp
cmpsb
adc
and
xor
sbb
loop
rcr
pushf
lret
xchg
lock
sbb
shrl
in
cs
xor
mov
mov
cmc
into
mov
pop
arpl
pop
sub
xor
pop
rol
sub
dec
cmpsl
or
cmp
popf
pop
add
xor
stos
xor
ds
out
cmp
popa
jae
sbb
adc
dec
sbb
mov
mov
push
out
inc
xchg
xor
fnstsw
dec
outsl
addr16
push
lret
mov
lret
lds
push
inc
adc
and
xor
nop
mov
mov
aaa
in
shl
push
ja
sub
push
sub
in
test
dec
or
cmpsl
mov
test
fs
push
xchg
xchg
mov
rclb
dec
xchg
xchg
jb
mov
repz
fcmovnu
mov
jo
repz
stc
stc
repz
pop
mov
movsl
scas
loope
hlt
test
sub
addb
pop
pop
cmpsb
out
mov
or
push
cmp
fisttpl
add
mov
hlt
mov
and
push
movsl
pop
mov
call
orl
mov
std
loopne
cmpsl
cli
das
in
test
imul
in
int3
lahf
fs
sti
xchg
shlb
mov
sub
adc
inc
pop
shrl
sbb
hlt
push
insl
mov
pop
xor
adc
ret
push
cmp
lret
mov
loop
pop
inc
push
add
sti
gs
cmc
pop
mov
push
imul
addr16
and
xchg
xlat
xor
mov
into
push
mov
add
out
jbe
notl
aaa
aam
ja
add
jae
inc
xchg
daa
test
xor
mov
shrl
pusha
mov
stos
aaa
fnstenv
push
push
movsb
adcl
enter
out
cmp
mov
sbb
dec
sbb
test
es
addr16
aas
scas
dec
sbb
pusha
xor
pop
lea
faddl
shrl
xchg
insb
in
or
test
mov
fnsave
daa
mov
cli
mov
test
aaa
dec
mov
sbb
mov
loop
sbbl
fisttps
sub
pop
mov
pusha
in
clc
and
dec
bound
or
push
dec
and
ljmp
jno
gs
xor
mov
adc
jb
mov
and
fldenv
sbb
aad
jge
setg
jg
xchg
test
mov
icebp
das
mov
fisttps
imul
mov
mov
mov
dec
push
mov
fxch
add
sub
lods
sub
fistps
lods
mov
pushf
iret
cmpsb
mov
and
pop
pop
sub
inc
inc
dec
fstpt
and
add
aas
xchg
and
pop
ljmp
aas
pop
cmp
add
inc
jae
lcall
or
aad
pop
push
je
pop
pop
fcoml
cwtl
fisttpll
add
push
or
in
pop
outsl
daa
mov
pop
add
nop
popa
xor
pop
ja
jbe
jp
rcr
inc
push
jp
in
jmp
jg
dec
fimull
add
ljmp
repnz
xor
xlat
pop
ljmp
add
jno
arpl
sub
or
sbb
mov
in
add
in
cmp
or
shl
cmp
enter
shlb
jmp
adc
popf
mov
jns
mov
fldcw
decl
add
push
sbb
out
jbe
dec
and
mov
pop
jno
mov
lret
mov
frstor
mov
add
test
xchg
push
push
rcll
ja
mov
inc
dec
xlat
xor
mov
xor
and
icebp
idiv
fwait
lods
or
int3
popf
xchg
popa
sub
sbb
fstl
popa
btr
mov
or
mov
xchg
movl
sbb
gs
stos
push
pop
adc
sahf
xor
jnp
sbb
ret
push
outsl
hlt
xor
lahf
clc
hlt
fsubrs
jg
js
push
or
mov
call
jp
mov
jmp
sbb
mov
sbb
addr16
add
xor
inc
outsb
sbb
sub
popa
mov
mov
int
shll
lods
int3
imul
inc
mov
mov
pushl
dec
add
js
cmp
pop
fidivrs
pusha
test
ficomps
js
outsl
jl
adc
xorb
mulb
xorb
int3
bound
enter
fdiv
cwtl
mov
and
pop
sbb
sti
pop
and
jo
mov
lret
mov
xchg
fists
out
fwait
addr16
lods
cwtl
dec
pop
in
add
mov
mov
adc
cmp
fcomi
andl
ds
jl
mov
jle
inc
adc
jle
push
int3
and
adc
xchg
ret
imul
dec
sbb
mov
or
je
dec
xor
fcoml
test
mul
movsl
push
aas
xchg
dec
stc
jb
int3
dec
rclb
xchg
cwtl
int3
xlat
jb
rorb
xchg
mov
dec
jge
setns
ret
sbb
pop
jb
mov
lret
mov
outsl
std
imul
fsub
mov
call
daa
sahf
test
mov
pop
rcrb
in
add
repz
in
adc
jl
into
pop
pop
icebp
mov
ljmp
and
enter
fld
cmp
lods
and
sbb
push
xlat
aad
clc
mov
adc
ds
push
sti
mov
hlt
and
cli
lock
lock
mov
mov
add
cmpsb
xor
lds
or
les
daa
mov
out
inc
inc
jns
ret
fmull
ficomps
cmp
stc
cmp
xchg
cltd
mov
mov
orb
pop
and
ds
dec
lea
mov
test
add
push
pop
stos
adc
loopne
and
stc
adc
ret
mov
sub
decl
push
sbb
push
mov
pop
cmp
sbb
out
xor
pop
pop
ret
popf
xchg
sub
fwait
leave
add
out
xchg
sub
pop
sub
adc
cs
in
inc
cli
jo
pusha
ss
add
mov
push
outsl
xor
adc
push
jb
lea
ret
cmp
adc
in
test
test
ficoml
outsl
aaa
gs
mov
jno
xchg
push
jmp
and
jb
inc
inc
pop
jne
outsb
scas
imul
or
lret
addb
xchg
lahf
and
test
arpl
ss
or
test
je
cmp
mov
pop
leave
mov
ljmp
cs
inc
das
aas
inc
test
xchg
mov
lret
mov
xor
out
movsb
add
inc
mov
and
fisubrl
xchg
add
nop
cmp
cmpsl
xchg
out
jns
jbe
cmp
xchg
rcl
hlt
stc
mov
mov
fdiv
sub
jmp
repnz
adc
mov
rcrl
stos
xchg
push
dec
pop
fmul
xchg
and
fadds
rolb
mov
inc
mov
sub
lcall
ja
cmp
fstpt
lahf
stos
and
scas
and
mov
push
aad
fistps
fldl
hlt
add
mov
mov
jo
xchg
shlb
push
aaa
out
fdivs
enter
test
push
sbb
repz
inc
jb
out
pop
xor
jmp
add
pop
enter
ja
loop
insl
mov
filds
cltd
xor
push
sti
push
mov
lret
jg
push
mov
stos
sarb
add
add
int
es
sub
add
daa
fnstcw
sbb
or
mov
cmc
adc
lds
repnz
xor
dec
push
jne
and
shll
cmp
in
call
flds
bound
mov
mov
jp
daa
push
ja
dec
cmp
aaa
or
mov
add
scas
shlb
rorl
out
fdivrs
mov
gs
cmpsb
les
xor
int
mov
jo
xorb
push
pop
or
mov
add
cmp
je
dec
test
cmpsb
nop
mov
pop
ficompl
push
enter
xchg
push
bound
push
xchg
add
test
test
gs
roll
add
test
mov
pop
repnz
and
mov
push
and
test
inc
testl
pop
add
je
inc
lea
icebp
enter
repz
add
fs
outsb
arpl
adc
subb
add
jno
scas
pushf
push
lcall
or
in
dec
dec
pop
clc
or
jno
ficomps
pop
addr16
jle
fisubl
insb
orl
add
cmp
cmp
jmp
scas
popf
sahf
adc
aaa
cmc
roll
xchg
xor
mov
lds
sbb
inc
scas
sub
shl
sbb
push
cmp
mov
adc
out
lds
pop
pop
mov
ss
push
cmp
xor
inc
nop
jmp
frstor
xor
fistpll
dec
jno
les
fs
outsl
mov
xchg
push
ficomps
mov
out
in
xor
sub
mov
add
xchg
les
xor
test
call
mov
imul
dec
mov
mov
pop
sti
push
stos
mov
cmp
cli
rorl
and
popa
ds
out
movsl
lcall
shr
xchg
lods
mov
pop
mov
int
and
pop
in
lock
into
jo
push
jae
jno
push
fstpl
sbb
je
loopne
insb
dec
fldt
insb
sbb
aas
es
mov
jo
push
daa
jle
sbb
sbb
fwait
nop
pop
or
rol
sbb
jbe
out
jae
add
pop
loopne
dec
out
push
nop
insl
in
xor
out
scas
and
push
mov
mov
lods
mov
aad
jb
hlt
lock
ja
test
int3
push
das
pop
fldt
inc
mov
je
fs
adc
mov
jmp
je
aad
pop
mov
hlt
cmp
leave
mov
ret
jnp
cwtl
or
fimuls
test
fadd
lret
add
jno
cld
push
mov
sub
fsubrs
xchg
push
inc
push
fsts
push
aaa
pop
fisttpl
jnp
jg
cli
jge
call
sub
push
daa
inc
mov
sbb
pop
cmp
outsb
fstl
push
xor
pop
jecxz
xchg
xchg
jl
jmp
cmc
into
mov
cwtl
jb
mov
xor
imul
roll
scas
lods
mov
add
rcrl
aaa
mov
push
push
add
jecxz
mul
mov
mov
ret
lods
xchg
mov
lcall
in
fdivs
xchg
and
inc
xchg
and
pop
fidivs
scas
lods
inc
repz
xor
sti
add
mov
repz
sub
nop
movl
dec
sbb
dec
cmp
mov
loope
and
clc
out
in
xor
xchg
pop
ja
jp
aas
sbb
iretw
jle
jno
mov
mov
out
test
lea
pop
dec
xor
ja
push
pop
xor
mov
push
push
jmp
jge
imul
xor
or
push
xchg
dec
scas
test
add
ret
jmp
fiadds
xor
mov
jnp
cmp
cld
cmp
adc
int
sub
and
shrb
and
and
inc
add
clc
xchg
inc
mov
ja
push
ss
lods
mov
out
mov
sbb
cmpsl
insb
nop
les
movsl
or
fdivl
mov
lret
mov
icebp
jne,pt
xchg
add
mov
pop
push
pop
cld
jno
popa
xchg
dec
sahf
js
fwait
push
repz
fistpll
xor
xchg
cmc
ret
sahf
loop
pop
and
jge
add
jns
mov
fnstenv
test
gs
xchg
inc
call
xorl
jge
lods
ds
stos
loopne
pop
and
pop
adc
xchg
xchg
cmpsb
enter
jp
xchg
xor
or
fbstp
fstpl
and
insl
pushf
xor
shl
not
mov
mov
mov
dec
or
fstl
fsubl
divb
loope
or
setne
xor
cmp
mov
pop
fstpl
loope
out
call
stos
clc
js
mov
into
das
pop
push
in
jo
loop
xor
add
pop
jmp
pop
xor
add
outsl
xchg
inc
add
pop
jne
insb
std
cmp
mov
add
xlat
hlt
ss
pop
cld
cmp
dec
push
dec
jns
lea
repz
repnz
push
push
or
sbb
mov
mov
ds
xor
push
mov
outsl
mov
dec
adc
push
les
pop
mov
sbb
add
ret
sub
xchg
repz
mov
stc
adcl
xchg
out
negl
cli
or
cmp
jne
add
inc
mov
push
or
out
pop
inc
and
mov
mov
fildll
mov
sub
mov
or
mov
bnd
pushf
jle
loop
jbe
ljmp
lcall
and
xchg
mov
inc
into
jns
idiv
push
stos
mov
aas
push
cmp
xchg
push
daa
enter
aaa
pop
fs
mov
fwait
or
test
push
push
mov
mov
dec
xchg
pop
fistpll
add
mov
inc
mov
pusha
sbb
sbb
push
adc
pop
fwait
mov
xor
aaa
shrb
jp
xor
imul
loop
fiaddl
ror
pop
pop
or
jecxz
xor
fnsave
xchg
repz
sbb
pop
loop
lcall
adc
mov
test
out
inc
cld
icebp
cmc
fstp
jo
sbb
jge
cmp
jns
or
push
or
sbb
dec
or
ja
stc
push
xchg
mov
pop
orps
mov
js
sbb
lcall
paddq
sub
mov
add
ret
loope
xchg
sbb
mov
shlb
imul
leave
and
test
out
jg
xchg
sbb
das
push
lock
frstor
test
push
sahf
xchg
and
arpl
iret
mov
insb
stos
aad
ja
lahf
lahf
outsl
xchg
sub
or
das
ja
mov
and
and
popa
mov
aaa
xor
cmpsb
or
out
idivl
sti
dec
add
aas
test
sub
mov
jo
shrb
stc
in
cli
mov
xor
in
rcrl
pusha
pop
push
add
gs
les
add
push
sbb
mov
daa
adc
imull
xor
loope
sub
ds
out
add
sub
ficomps
insl
cmp
push
stc
sub
aas
stos
test
test
pop
popa
outsl
pop
cmp
clc
and
loopne
push
ret
pop
leave
pushf
mov
ja
lcall
mov
xchg
sahf
jle
mov
cmc
xor
int
movsl
xchg
sub
or
enter
iret
or
mov
jp
popa
ja
je
mov
gs
arpl
fs
or
lods
hlt
mov
or
repnz
mov
lds
mov
and
pop
es
sub
data16
inc
lret
sub
clc
insl
sub
inc
jns
bound
cmp
imul
xchg
push
add
popl
pop
xchg
sub
data16
xchg
jae
test
pop
mov
push
jg
pushf
sub
adc
or
js
test
dec
cwtl
mov
lret
add
dec
pop
call
and
inc
stos
jnp
jb
or
leave
movsb
stos
xor
icebp
stc
sbb
mov
pop
jmp
out
lcall
dec
sub
xorl
push
mov
cmp
jp
in
push
mov
adc
cmp
dec
sbb
idivl
push
scas
roll
cli
mov
aas
or
mov
pcmpeqw
adc
cli
jp
mov
add
pop
adcl
dec
push
test
mov
push
jne
mov
pop
lea
add
rcr
ficoml
and
mov
icebp
inc
cmp
add
sub
in
and
insl
xor
popf
inc
in
mov
out
ret
xchg
in
pop
jp
adc
test
stos
out
aad
dec
fsubl
lods
aas
xchg
frstor
bound
in
rcl
sbb
fdivs
daa
fstpl
push
pop
movsb
mov
lret
mov
inc
sbb
bound
repnz
cmc
inc
daa
and
aam
pushf
leave
adc
movsl
jl
mov
mov
xlat
mov
add
bswap
outsb
in
lret
pop
xor
sbb
mov
pushf
stos
push
add
mov
jb
add
jp
scas
cltd
xor
adc
out
lods
cwtl
clc
xor
stc
push
jb
test
jno
clc
sbb
dec
enter
pop
xor
or
mov
pop
fldl
pop
xor
cmp
sbb
dec
ds
adc
mov
xchg
mov
pushf
into
test
push
scas
sbb
shlb
int
and
outsl
sub
push
jne
sbb
xlat
loopne
inc
shr
lcall
pop
and
xchg
psadbw
dec
push
aaa
ficomps
cmp
pop
in
mov
dec
sbb
int3
sub
xchg
loopne
loope
jnp
mov
xor
pop
mov
push
sub
push
push
imul
jmp
and
xchg
pop
into
fildl
push
dec
cmp
imul
xor
adc
fs
scas
jae
xchg
dec
fwait
int3
pushf
mov
or
or
inc
mov
jmp
data16
imul
xor
test
pop
in
loop
sub
loopne
popf
in
cmpsl
aam
inc
int
imul
add
loopne
mov
sbb
sub
test
pop
add
clc
xchg
shr
xchg
or
pop
mov
mov
push
stos
or
adc
or
aad
cli
addr16
daa
stos
les
dec
icebp
xlat
das
pop
sbb
stos
std
jnp
push
pop
and
and
or
mov
add
cli
arpl
sbb
test
mov
mov
add
jnp
inc
cld
jmp
cli
subl
out
mov
pusha
push
or
cli
dec
and
jecxz
xchg
inc
sub
mov
push
sub
push
stos
mov
cld
xchg
ljmp
outsl
or
xchg
push
xlat
stos
xchg
enter
push
cld
in
fldcw
into
cmp
rcll
jle
int3
fistpl
jg
aad
aad
cmc
fisttpl
rolb
add
push
in
int3
leave
jecxz
cwtl
call
loop
add
enter
mov
stc
jge
dec
gs
dec
cmp
jno
xchg
jnp
fcmovnb
inc
xchg
or
mov
in
adc
fidivs
mov
pop
mov
lea
lahf
push
xlat
adc
xchg
dec
sub
into
lea
imul
jno
ret
insb
testb
movsl
adc
fsubrl
pop
loope
repz
cmp
shrb
orb
push
and
ljmp
outsl
stos
push
das
fisttpll
xor
jmp
mov
jmp
pop
sub
aas
shll
cmp
xchg
and
mov
cmpsb
out
jae
cltd
mov
and
push
push
out
negl
popa
sti
andl
add
outsl
repz
adc
mov
test
stos
sbb
push
jg
roll
and
adc
gs
push
imul
sub
out
bound
mov
repnz
adc
insb
movsb
add
xchg
inc
sbb
mov
shlb
sbb
mov
mov
inc
mov
ds
mov
dec
enter
sbb
jmp
ja
popa
sub
dec
scas
ret
repnz
orb
stc
jecxz
fisttpll
xor
lret
insb
push
jg
mov
aam
cmpl
adc
movl
add
repnz
mov
icebp
xor
add
out
fcomip
fisubl
dec
xchg
in
and
hlt
push
push
cwtl
pop
pop
lret
repnz
xor
rclb
js
bound
adc
push
idiv
loopne
jl
mov
call
mov
jecxz
bnd
pop
dec
or
fists
mov
out
les
into
xchg
cmc
jnp
arpl
mov
inc
lahf
shrl
test
inc
inc
data16
lea
and
inc
pop
mov
cwtl
mov
xchg
pop
cmp
push
shl
mov
in
push
xchg
cs
enter
shlb
mov
lds
pushf
in
fiaddl
inc
cmpsl
sti
aad
xchg
mov
xor
scas
push
mov
cmp
sbb
adc
or
popf
mov
popf
in
dec
fcoms
adc
int
xchg
fwait
jg
add
xor
adc
rcrl
dec
in
rclb
out
xor
mov
fisttpl
pmulhw
or
mov
scas
stc
out
gs
xchg
jge
pushw
mov
ffreep
pop
fisubrl
int3
dec
jl
shrb
jl
fdivr
or
sbb
decl
repnz
xor
cli
mov
push
pop
push
imul
out
fs
subb
out
lahf
xchg
xchg
xchg
jl
push
push
and
adc
enter
cmc
add
jbe
roll
add
mov
lds
and
inc
das
push
sete
jns
or
iret
int3
pop
scas
in
aaa
popa
cmp
icebp
or
loopne
mov
push
dec
imul
enter
add
or
sbb
das
push
pop
aaa
in
inc
pop
fmul
pop
fs
fisubs
adc
rcrl
lahf
xchg
gs
push
clc
test
adc
add
adc
iret
out
cmp
nop
cli
scas
cs
xor
sbbl
lcall
push
mov
insb
decl
push
jle
or
and
cmp
std
pop
dec
cld
jp
inc
xchg
sub
push
push
aas
cmpsl
sbb
dec
int3
add
fcoml
es
iret
xchg
outsl
lods
dec
pop
lods
in
cld
push
push
cmc
dec
xchg
lods
lds
jmp
andl
xchg
add
ret
xchg
enter
sbb
ret
push
sbb
pop
xchg
dec
out
mov
fistpll
cld
jno
dec
test
pop
adc
jmp
arpl
mov
dec
push
jo
js
sub
and
add
mov
cmp
fnsave
sub
popf
call
dec
pusha
mov
icebp
fimuls
out
adc
mov
clc
mov
test
mov
cwtl
mov
sbb
xorl
mov
insl
mov
lods
imul
xchg
iret
mov
pop
clc
and
fisttps
and
cmc
mov
xor
push
jno
sub
je
xchg
and
push
xor
jle
mov
jp
pop
outsl
push
sbb
pop
sbbb
loopne
sub
cld
les
or
ja
push
scas
repz
add
pop
mov
jo
in
xor
or
call
inc
sarb
push
lcall
les
jg
fisubrl
cmpb
ret
shrb
cmpsl
dec
aad
inc
mov
out
pop
push
xchg
mov
hlt
bnd
icebp
cmp
pusha
lret
out
out
dec
mov
push
sbb
pop
jae
push
pusha
aad
mov
cwtl
or
xor
jae
dec
sahf
xchg
and
add
jle
cmp
je
leave
shrl
sbb
scas
cld
femms
dec
pop
in
clc
push
in
and
into
test
cld
xchg
roll
push
rolb
mov
cltd
xor
rolb
rorb
or
movsb
iret
std
cmpsb
mov
fisttpll
lds
out
inc
pop
ret
in
into
sub
imul
push
popf
jp
jl
loop
shlb
adc
push
shrl
hlt
mov
imul
ja
es
cmp
int3
hlt
dec
imul
jp
das
jb
pop
sub
cld
mov
or
outsb
outsl
ljmpw
aad
repnz
push
inc
mov
cmpsl
and
sub
add
jnp
cwtl
inc
pop
iret
sub
sub
adc
dec
add
jo
inc
pusha
gs
xchg
pop
lret
sub
jb
daa
xchg
aad
xchg
hlt
or
jp
fists
inc
insl
fstpt
lcall
cmp
out
or
adc
add
pop
int3
mov
push
or
adc
shl
xor
add
div
jmp
out
mov
leave
popf
cld
es
clc
lods
lds
pushf
insb
xchg
jl
mov
cmp
repz
sbb
insb
lret
nop
pusha
fwait
das
mov
scas
leave
xchg
icebp
adc
jmp
xchg
nop
mov
xchg
xor
sbb
shll
sub
out
and
push
mov
inc
pop
lock
cltd
jb
cmp
lods
push
pop
andb
xor
add
push
xchg
inc
pop
mov
or
dec
icebp
mov
mov
dec
jo
shl
imul
out
cmp
shll
xchg
mov
or
std
ljmp
nop
out
test
push
cltd
add
mov
dec
mov
jmp
insl
out
js
shr
push
push
add
push
adc
jcxz
outsl
xchg
mov
pop
mov
mov
insb
filds
mov
les
daa
cwtl
xchg
sub
inc
leave
push
mov
add
jb
push
cwtl
jmp
scas
loope
pop
andb
ret
lock
xchg
mov
movsl
xchg
jb
cwtl
mov
adc
lret
outsb
mov
mov
das
iret
or
add
test
jo
inc
stos
mov
mov
leave
cmpsb
in
in
push
ds
outsl
xor
sbbb
nop
out
jae
mov
cmp
in
sbb
jnp
lret
ffreep
mov
jl
test
aad
lods
aas
push
imul
and
adc
sbb
lea
aas
cmp
add
inc
and
cmp
fmulp
cmp
cmp
sbb
mov
stc
les
std
rorl
rolb
rolb
sahf
fnstenv
sahf
sub
stos
xchg
pop
repnz
bound
lret
push
out
push
out
sbb
or
push
push
shr
cmp
ds
and
stc
movsl
cmp
mov
call
mov
insb
das
push
fwait
sub
xorb
sub
lahf
mov
sbb
pop
mov
mov
out
popa
pop
fnstsw
movsl
push
andb
cli
cmc
xor
imul
push
mov
ret
push
mov
xchg
mov
add
stos
addr16
xor
push
xchg
push
jnp
imul
scas
or
out
jno
loope
loop
mov
or
add
adc
insl
mov
add
je
fldcw
sbb
shlb
icebp
out
sarb
in
iret
lock
or
fs
ljmp
jecxz
pushl
sub
mov
ds
mov
js
dec
xor
jmp
dec
in
daa
pop
or
jo
aas
mov
xchg
mov
aas
adc
mov
and
cmp
inc
mov
scas
mov
ret
enter
add
xchg
inc
adc
inc
and
cltd
xchg
test
add
or
and
or
adc
add
adc
out
js
inc
xchg
bound
mov
fidivl
push
nop
xor
mov
dec
xchg
xchg
dec
lcall
cmp
ja
mov
into
mov
pop
mov
mov
es
mov
out
sbb
dec
idivb
ljmp
xchg
jecxz
lods
lods
push
ds
mov
mov
mov
cmp
adc
or
cmp
add
adc
das
enter
and
pop
into
fldenvs
or
adc
and
adc
sbb
in
rol
fadds
rcll
mov
movsl
in
or
dec
or
repnz
cvttps2pi
pop
cs
repz
mov
jecxz
pop
fsts
mov
hlt
cld
mov
and
popa
and
test
xchg
cmp
push
adc
cmpsl
loope
sbb
sbb
push
cltd
ficoml
push
in
ljmp
add
lods
jp
rcll
jecxz
and
xor
test
sub
inc
stos
loopne
mov
imul
and
add
or
mov
jne
cmp
out
push
shll
mov
jmp
test
ret
push
cmp
lea
mov
leave
imul
jns
jp
or
jle
sub
mov
iret
cmp
sbb
or
push
pop
mov
mov
and
push
les
out
jno
cld
fucomi
call
jns
je
aad
dec
jno
jg
sarb
push
scas
cmc
lret
sub
push
nop
sahf
xor
mov
adc
or
mov
pushw
cs
mov
xchg
pop
repz
inc
xchg
xchg
inc
mov
imul
jb
out
mov
nop
or
js
test
mov
dec
cmc
out
hlt
jns
dec
cmpsb
jmp
jg
xorb
dec
mov
push
jp
and
cli
mov
mov
jmp
adc
nop
ljmp
test
or
ss
aam
xchg
mov
pop
mov
jno
and
adc
les
sub
arpl
inc
lods
arpl
cwtl
add
inc
loop
inc
inc
out
scas
icebp
push
rcl
mov
jecxz
test
cmp
add
mov
outsb
xor
push
push
xchg
inc
pushf
icebp
xor
test
add
orb
fcmovb
jae
xchg
inc
sbb
push
push
jle
repz
adc
and
push
in
dec
lods
pop
enter
xor
inc
lea
out
jle
mov
bound
cli
jecxz
ror
lods
jb,pn
mov
fs
pop
mov
mov
test
mov
adc
rol
repnz
pop
pop
stos
cmpsb
push
ljmp
test
xchg
lock
bound
xchg
xor
sbb
hlt
addr16
sahf
inc
fstps
cltd
mov
imul
rclb
lds
push
jp
fwait
stos
pop
mov
loopne
inc
mov
jmp
adc
mov
add
adc
inc
insb
pop
and
mov
push
je
inc
shl
pop
dec
sar
sbb
mov
jge
jg
lahf
inc
pop
rclb
pop
adc
aad
and
sar
test
mov
jecxz
push
jp
or
lahf
arpl
sub
pop
popa
mov
mov
xor
and
fldt
and
rclb
inc
outsl
outsl
imul
negl
out
and
loopne
mov
or
or
mov
cwtl
push
mov
xchg
xor
push
jmp
or
fisubs
xchg
lods
mov
in
arpl
jl
mov
aaa
jle
ljmp
xorl
pop
in
mov
in
scas
xchg
lcall
rep
xchg
loop
ss
lods
hlt
leave
xchg
lret
dec
mov
inc
fwait
xchg
std
cmp
xchg
aad
add
cmc
mov
not
movsb
ret
push
pop
rcll
fdivs
adc
test
cltd
data16
outsl
xor
adc
cmp
cwtl
mov
ds
out
sahf
mov
mov
andb
push
sub
push
mov
in
inc
rolb
hlt
jge
mov
xor
mov
inc
cmpsl
sbb
jp
pop
jne
sti
icebp
jle
in
jg
ss
jp
std
pop
add
mov
lods
fildl
sbb
fdivrs
test
sbb
rcrb
subb
mov
int3
cmpsb
pop
jno
and
or
push
cmp
push
lods
gs
lret
insl
aad
add
mov
add
pop
adc
pop
mov
stc
mov
frstor
lea
or
push
pop
sbb
out
jae
cmc
mov
xlat
push
or
imul
or
xchg
int3
mov
inc
repz
xor
push
and
jnp
pop
sbb
jge
xchg
mov
push
aad
dec
into
lods
xchg
and
add
mov
cmp
aaa
xor
js
mov
repnz
in
rolb
mov
mov
pop
call
fistl
add
test
mov
and
sbb
push
push
jmp
popa
mov
faddl
inc
push
and
pop
and
cld
lret
push
jmp
dec
jns
lcall
mov
dec
jbe
cltd
repz
push
sbb
shl
aam
add
and
lea
pop
imul
dec
jp
and
dec
jle
or
dec
lds
outsl
dec
popa
pop
adc
out
cmp
aaa
or
mov
dec
rcll
sbb
stc
fmulp
fisttpl
adc
pop
pop
push
inc
in
push
and
arpl
xchg
xor
xchg
pop
outsb
inc
sahf
iret
icebp
test
sub
push
and
std
dec
or
divl
sbb
inc
jnp
add
icebp
test
pop
jne
mov
sub
inc
and
jmp
movsl
in
ja
sbb
dec
lea
cltd
ljmp
loopne
sub
and
sbb
loop
cmp
pushf
push
jae
push
jge
mov
jb
xchg
or
aas
aad
pop
xor
scas
or
and
dec
in
xchg
dec
movsl
cmpb
daa
xchg
insl
movsl
popa
ret
adc
imul
and
loop
jb
lea
adc
sub
mov
es
adc
jb
in
iret
cli
stc
mov
outsb
movntq
push
and
or
cmpb
insl
inc
xlat
jo
movsb
mov
out
xor
cld
rcrb
test
push
in
xlat
inc
push
dec
cltd
cmpsl
and
sub
aaa
in
lahf
mov
inc
leave
dec
lret
inc
push
push
cltd
sahf
shlb
dec
mov
dec
scas
repnz
mov
inc
out
mov
inc
push
dec
mov
push
inc
ja
pop
or
aaa
insb
hlt
sahf
cmc
dec
data16
sub
out
cmp
sub
jmp
mov
stos
bound
ds
or
mov
mov
cmpsb
das
aas
test
in
call
js
ret
push
mov
out
adc
testb
lock
test
sahf
cmpsl
mov
fdivrl
inc
in
jb
inc
sub
jbe
or
dec
sub
and
mov
fisubl
xchg
and
pop
cmpb
or
imul
mov
push
mov
in
cmp
pop
sbb
sbb
lock
es
into
andb
lahf
adc
xchg
dec
push
xor
pop
fldl
add
divb
push
and
jbe
cltd
inc
rcrb
inc
int3
xchg
or
push
jge
add
lds
inc
scas
pop
push
hlt
ret
mov
pop
lods
xor
call
push
aad
xor
inc
xchg
xchg
ret
ja
or
ret
sti
add
pop
ja
jne
arpl
dec
jg
in
push
mov
clc
mov
outsl
cmpsb
push
adc
mov
loop
mov
cmp
push
mov
xchg
and
mov
insl
mov
das
sub
jns
test
mov
jecxz
fildl
lret
sbb
movsl
fsub
inc
bound
fadds
jnp
cmc
lods
sub
insl
xchg
repz
mov
or
or
cmpb
call
test
adc
icebp
sub
jb
clc
dec
les
cmovo
pushf
mov
inc
addr16
mov
cmp
adc
xor
pop
enter
frstor
les
or
cmp
fiadds
jmp
repnz
adc
jmp
mov
adc
or
aaa
and
fstpl
aad
call
hlt
sbb
movsl
sub
mov
scas
jle
je
push
cmp
add
dec
or
push
adc
js
sbb
jmp
and
lods
nop
mov
in
pushf
push
cmc
push
mov
hlt
aad
imul
lcall
add
es
cmpsb
lcall
sub
mov
xchg
add
pop
rorl
mov
mov
mov
and
repnz
jns
xchg
pop
adc
dec
aas
dec
sbb
pop
test
rcrl
mov
jb
xchg
pop
sbb
rorb
sahf
adc
and
filds
or
mov
movsl
in
cmp
xchg
cmp
xchg
mov
fldl
mov
cmp
lods
enter
ret
popf
mov
imul
push
dec
ljmp
xchg
push
mov
cli
lods
push
shrl
mov
mov
andb
mov
xor
add
cmp
mov
sub
push
loop
push
notl
and
inc
lods
pusha
mov
int
ret
dec
or
test
ja
lret
sahf
add
repz
push
pop
outsb
sti
add
jae
enter
stos
shll
and
and
push
mov
dec
cltd
scas
mov
or
jecxz
mov
cmp
and
shlb
lds
xchg
aad
xchg
xor
fmul
loopne
pop
adc
arpl
and
nop
addr16
mov
inc
push
loope
jbe
jnp
int3
filds
sub
add
sub
and
aad
dec
loop
xchg
in
cmpsl
pusha
loopne
mov
mov
out
dec
outsb
sub
in
lock
pop
mov
and
sbbb
jno
pusha
cld
movsb
push
insl
and
ljmp
ret
jmp
push
aam
aaa
int
notl
lret
dec
or
pop
mov
push
std
ss
push
aaa
imulb
cmp
mov
xchg
lcall
or
and
or
push
fwait
cmp
mov
dec
adc
jmp
aad
sti
mov
cmc
imul
icebp
bnd
aad
loop
mov
sub
and
sar
rcrl
jmp
push
scas
addl
jns
inc
mov
out
std
mov
adc
sarl
sbb
iret
push
mov
push
jg
cs
mov
stc
rcrb
or
push
mov
add
fmull
mov
imul
mov
dec
pop
sbb
pop
hlt
pop
adc
pushw
xchg
jne
push
shll
hlt
popf
xchg
dec
xchg
jb
ret
xor
push
or
dec
dec
mov
and
hlt
adc
xchg
ret
mov
dec
dec
ret
or
test
arpl
leave
mov
addr16
dec
movsl
xchg
dec
add
sti
push
test
or
das
add
jl
fisubl
add
push
sub
push
xor
lds
xor
cmp
repnz
and
mov
inc
imulb
movsb
push
add
sub
adc
xchg
xor
test
pop
adc
aas
xchg
cli
xor
rclb
xchg
cmc
sub
or
andl
cmc
shlb
push
mov
cmp
int
out
cmp
and
aas
or
xor
xchg
jmp
pop
in
xor
je
into
xor
dec
sbb
jbe
cmp
cmpsb
in
rep
sbb
cli
xor
xchg
and
xor
xchg
in
cmp
jnp
xor
sub
clc
jne
fldt
ljmp
push
fists
ljmp
cld
enter
jmp
imul
mov
sti
add
push
inc
in
fildl
sbb
in
pop
mov
pushf
fwait
std
js
iret
mov
fimuls
icebp
andb
popa
out
jg
push
jns
mov
in
push
push
push
mov
popf
lods
pop
jae
imul
push
mov
cmp
adc
cltd
or
test
sbbl
sbb
mov
and
and
mov
iret
outsb
fwait
insb
xor
enter
fs
ljmp
into
test
out
xchg
fisubs
jmp
push
dec
std
scas
sub
sbb
cmp
cld
test
cmp
pop
shrb
cmp
jge
inc
and
aam
cmp
xor
sub
jp
cmp
in
pop
sahf
int3
xchg
xchg
ja
push
pop
lds
mov
dec
fcmovne
movsl
aaa
adc
sbb
xchg
imull
mov
outsb
pop
mov
insl
mov
push
jns
mov
cmp
outsb
or
add
mov
loope
pop
mov
cld
shll
cmp
pop
mov
push
ja
das
mov
jb
das
or
or
fcoms
ljmp
add
rcl
int3
fwait
or
fdivrs
mov
sub
mov
xchg
mov
aas
in
or
sbb
push
mov
and
add
and
aaa
ret
mov
mov
mov
jp
dec
jle
icebp
xorb
dec
push
jns
xchg
in
addl
mov
sbbl
jecxz
imul
sahf
arpl
je
or
xor
jb
push
leave
mov
mov
imul
out
xchg
rcr
popa
inc
inc
mov
in
adc
jle
rorb
jecxz
add
xchg
cmp
stc
out
popw
aaa
mov
fsubl
syscall
fs
in
jbe
pop
sub
mov
mov
loopne
and
xor
push
sbb
ds
inc
xchg
mov
mov
push
inc
and
pop
push
lcall
cmpsb
test
jmp
insb
scas
data16
popf
and
lret
xchg
or
xlat
mov
push
mov
jmp
cltd
and
scas
jno
pushf
lahf
fwait
jl
loopne
clc
push
or
rcrb
jb
loope
lods
dec
inc
dec
add
push
or
ds
cmp
in
and
fidivs
pop
fildll
js
rolb
cmpsb
inc
not
push
lods
xor
add
ret
xor
cltd
inc
inc
and
mov
test
popf
sub
icebp
xchg
xchg
inc
lods
fmul
aaa
cld
pop
inc
push
aas
cmp
add
add
out
mov
jl
pusha
in
cmpsb
pop
fstl
pop
call
mov
jae
push
into
stc
adcl
cmpsl
xchg
adc
mov
xchg
aas
sarl
dec
xor
inc
movsl
push
lcall
loopne
jo
sbb
xor
rclb
lcall
pop
in
rcrl
xchg
xchg
out
mov
jae
inc
pop
imul
insl
sbb
or
pop
cmp
cmp
sbb
cmp
fdivl
dec
into
jge
sub
pop
mov
xor
inc
mov
cli
movsl
dec
push
enter
push
into
pop
xchg
loope
iret
cmp
xor
outsb
mov
fdivl
add
aas
mov
cld
int3
es
sub
es
fnstsw
add
jb
pop
sbb
xor
fistl
dec
xor
pusha
cltd
mov
cmc
mov
in
ja
int3
mov
pop
lret
test
cmp
in
out
push
std
sbb
jecxz
lret
or
hlt
stos
imul
pop
cs
int
mov
cmp
adc
xchg
inc
js
int3
cmpsl
ljmp
mov
push
push
into
mov
pusha
inc
or
fs
pushf
fs
xchg
sub
enter
cli
mov
push
pop
push
ds
jne
fsubrs
popf
jne
lods
data16
push
cs
jae
sbb
and
rcll
je
xchg
lret
mov
jle
outsl
cmc
into
lret
xor
fidivl
sbb
jp
dec
pop
mov
add
ss
cmp
es
mov
gs
xor
in
repnz
sti
das
push
imul
jb
add
test
mov
mov
dec
mov
push
dec
jbe
lcall
cwtl
sub
ret
mov
fdivrl
js
mov
je
roll
shlb
mov
cli
cmp
rcrb
enter
lret
push
rcr
in
aam
test
and
lods
bound
aaa
daa
cmp
leave
jb
xchg
push
call
out
dec
push
mov
jae
dec
outsb
in
and
imul
sbb
aad
jnp
lret
push
push
in
mov
xlat
push
es
inc
mov
nop
cmp
xor
xchg
pop
jl
rcl
mov
mov
xchg
test
mov
in
fnstsw
adc
dec
test
lcall
inc
xor
fidivl
pusha
iret
sub
sub
notl
cmp
push
or
inc
or
jl
mov
adc
jle
mul
out
cs
pop
dec
lock
pop
decb
mov
mov
jo
inc
sbb
pushf
xchg
pop
xchg
xchg
adc
or
or
push
scas
std
or
popf
mov
xchg
jno
mov
je
or
or
push
fdivrp
call
orl
shll
nop
rclb
mov
leave
mov
out
imul
arpl
vmovups
push
ss
mov
jbe
lahf
inc
mov
jnp
movsb
mov
and
pop
jg
xor
dec
push
jecxz
fisubrs
repnz
inc
and
int
aas
mov
mov
pop
jg
lahf
jge
mov
repnz
mov
dec
push
xchg
sub
daa
outsl
push
leave
pop
dec
jge
addb
es
add
sub
xorb
sbb
sahf
idivl
adc
mov
pop
mov
mov
negl
stc
adc
ljmp
cmp
sbb
jecxz
mov
jmp
mov
mov
adcl
insl
xlat
add
movsb
filds
lret
add
sub
and
push
out
test
jae
lret
loope
rol
imul
rorb
je
addr16
ret
push
popa
into
adc
cli
sti
into
mov
cmpsb
mov
mov
cmpsl
out
xor
mov
jns
push
sbb
ds
mov
fistl
arpl
push
in
test
sbb
cmp
test
add
sbb
mov
add
fisubl
sub
xchg
mov
mov
int3
arpl
push
lcall
icebp
sub
ror
leave
std
nop
mov
sub
leave
fmul
test
mov
xchg
rcrb
aad
pop
stos
fwait
inc
mov
lods
mov
es
shl
cmp
xor
mov
jbe
jbe
aam
aaa
je
xor
xchg
int3
xor
jmp
cltd
test
cmp
ds
hlt
add
dec
and
inc
and
push
pop
jne
mov
ss
mov
inc
inc
cwtl
daa
pop
xchg
jl
add
add
mov
mov
push
jmp
pop
pop
xchg
dec
int
lock
push
loopne
xor
das
out
dec
adc
pop
lods
sub
js
leave
bnd
in
pop
leave
sub
ja
mov
or
mov
and
pop
leave
lock
push
fwait
sbb
sar
cmpsb
add
add
xchg
mov
and
or
xchg
inc
or
sub
scas
pop
lods
jnp
sub
xchg
pop
pop
mov
cmpsb
xchg
mov
jmp
cmp
andb
in
mov
lret
cs
adc
icebp
sarl
adc
pop
cmp
sbb
sbb
loopne
decl
ds
scas
push
cmp
push
out
or
test
pusha
cmpb
adc
or
data16
and
inc
loopne
iret
cmp
xlat
iret
lods
fadds
and
dec
xor
pop
mov
in
dec
test
in
xchg
inc
xor
aas
add
xorl
pop
fs
into
int3
nop
aas
ljmp
cmpb
daa
lock
jae
xor
cmp
lret
pop
test
dec
jmp
fcomps
mov
inc
add
adc
and
cli
divb
lea
mov
jnp
in
inc
inc
lcall
icebp
xor
aam
std
mov
into
cli
pop
scas
ret
bnd
pop
mov
je
ljmp
testb
mov
lea
dec
jns
mov
fisubs
shll
lods
add
ja
or
leave
mov
xor
jmp
mov
mov
pop
dec
inc
outsb
pop
pusha
or
std
mov
mov
cmpsb
sub
rcl
mov
cmp
stos
dec
je
sbb
loopne
iret
push
cmp
lods
scas
mov
add
inc
mov
and
inc
sub
movsb
andl
es
insb
xrelease
push
outsl
add
mov
xchg
loopne
push
fwait
push
mov
inc
je
std
mov
ss
jns
pusha
and
xchg
in
mov
inc
aaa
jp
xchg
mov
sbb
adc
xchg
lods
lds
jecxz
mov
mov
mov
loopne
pop
nop
fwait
jb
aaa
pop
cmp
popfw
dec
mov
lcall
test
xorl
leave
scas
test
cmp
sub
jo
add
sub
popf
sbbb
loopne
dec
push
dec
aad
int
rcrl
cmp
je
cwtl
xchg
sbb
scas
or
fs
adc
push
lahf
sub
adc
daa
andb
popa
mov
ret
lret
inc
push
or
cmpsl
xchg
mov
cmc
sbb
rolb
lea
lods
and
dec
scas
lret
xchg
int3
repnz
push
roll
mov
push
adc
inc
flds
xor
push
clc
test
lahf
imul
cltd
lods
mov
popa
enter
ja
rorb
cli
in
adc
add
das
in
mov
or
aas
sbb
aam
outsl
mov
mov
lea
push
pop
std
mov
jmp
cmp
push
xor
addb
mov
imul
test
cs
or
cltd
pop
icebp
dec
outsb
adc
sub
stos
jbe
sbb
mov
in
movsl
js
push
loopne
loop
push
mov
xchg
xor
add
adc
nop
push
sti
arpl
out
sbb
sbb
ret
jns
jg
xchg
pop
mov
in
xorl
sbb
xchg
in
push
mov
xor
pop
pusha
mov
sbb
mov
filds
sub
sti
dec
push
push
and
iret
adc
cmc
cmp
sbb
pop
xor
jnp
cmp
cmp
mov
push
xchg
addr16
jge
dec
out
lcall
cmpsb
mov
test
in
cmc
stos
aas
jle
xor
dec
repnz
andb
decl
push
pop
push
lahf
daa
icebp
cmp
hlt
and
xlat
or
cmp
jnp
addl
jmp
and
lret
mov
insb
pop
popf
lahf
enter
inc
sbb
adcl
sub
mov
mov
in
call
push
popf
push
subb
inc
sti
add
fisubrs
sub
mov
adc
adc
cmp
test
loop
pop
sub
bound
lods
in
rcrl
add
pop
xlat
rclb
outsb
into
ret
sbb
stc
outsl
dec
fcomps
loopne
rcrl
inc
loop
gs
int3
jecxz
jo
jg
les
or
sti
xor
jo
pop
jp
int3
jecxz
adc
pushf
ret
lret
add
mov
xchg
or
mov
sub
out
fwait
jne
int3
sbb
mov
push
in
push
fsts
dec
jns
sti
into
xchg
out
mov
idivb
adc
iret
andb
hlt
daa
inc
xchg
pop
mov
jmp
into
flds
inc
cmp
mov
mov
sarb
push
push
inc
pop
cmp
jp
dec
xor
sbb
jno
mov
or
push
stos
movsb
push
xchg
xchg
popf
fwait
bound
cs
mov
xchg
cmp
lods
addl
mov
scas
insb
inc
add
pop
cmp
jge
enter
mov
mov
loop
fldpi
int
sub
out
hlt
push
adc
push
cmp
jne
pop
jbe
pop
dec
jnp
test
mov
or
push
addr16
and
and
cmp
fucom
or
mov
cmp
mov
idiv
push
sarl
stc
jns
mov
sub
ja
icebp
push
and
xchg
adc
inc
xor
movsb
rorb
js
push
mov
xlat
shlb
xor
xor
dec
retw
add
mov
jge
lret
testb
scas
mov
divl
loopne
in
mov
pusha
and
push
bound
cwtl
mov
in
cmp
popa
sub
cltd
push
xchg
add
xchg
or
jbe
in
mov
fimull
adc
pop
mov
cltd
aas
sbb
sti
sub
loope
xchg
mov
mov
mov
fidivrl
test
mov
inc
xchg
push
mov
arpl
sub
mov
pop
mov
pop
mov
mov
repz
cmpsb
leave
xor
ss
mov
ret
jmp
sub
push
and
inc
sbb
mov
mov
jg
js
jecxz
and
mov
mov
xor
push
pushf
jnp
fldl
sub
adc
xchg
xor
je
cmp
loope
in
dec
clc
mov
js
dec
dec
cli
sbb
mov
add
jl
cmp
push
int
clc
pushf
sub
pushf
inc
sti
dec
xlat
in
push
stc
xchg
sbb
andb
out
cmp
jl
sub
or
hlt
out
lods
cmpsl
dec
fistpll
enter
mov
add
das
sub
push
cmc
pushf
in
mov
fnstsw
mov
cmpsb
lods
mov
sarb
fstpl
inc
lahf
fst
aad
cwtl
mov
aad
jnp
pop
lock
fimuls
push
shrb
dec
lret
xor
fdivr
dec
pop
pusha
dec
dec
sbb
sbb
and
clc
orl
pop
xor
aad
pop
lcall
iret
icebp
frstor
xchg
addr16
pop
push
call
je
xchg
loope
xchg
pop
or
fnstsw
sub
cmovae
xchg
testl
add
notb
xchg
add
dec
or
mov
mov
inc
scas
mov
cmp
adc
add
cmp
xor
fistps
push
inc
ret
divl
repz
dec
rcrb
adc
adc
push
sbb
cmc
xor
loopne
stos
mov
and
cmpsb
cmp
movsb
dec
and
mov
scas
scas
push
das
rcrb
mov
out
sub
popa
xchg
mov
mov
cmpsb
ja
jo
pop
pop
jmp
mov
out
out
inc
bound
push
pop
in
insl
cmpl
mov
jb
fwait
movsb
notl
clc
pop
fisubrl
pusha
xor
popa
sbb
xchg
pop
mov
cmpb
lods
scas
push
add
push
mov
repnz
cmpsl
or
sbb
mov
fadds
lahf
dec
add
int
fscale
mov
cmp
in
jnp
fnstcw
xor
pop
inc
dec
cwtl
ljmp
sub
pop
bound
adc
mov
cmpsl
xor
ret
sbb
ret
flds
cmc
rcr
inc
aam
fldl
mov
aam
insb
enter
mov
mov
xchg
cwtl
das
addr16
cltd
jne
clc
test
inc
test
sub
es
or
addr16
nop
xlat
mov
dec
fidivs
ss
jle
rcrl
add
sbb
popf
and
cmc
test
test
aaa
mov
mov
and
jle
ror
movsb
arpl
or
xlat
popf
xchg
bound
add
or
xor
pop
and
add
test
or
mov
xchg
sub
jmp
popa
xchg
push
dec
jno
movsb
ja
out
mov
push
xchg
ret
push
dec
dec
mull
cmp
iret
aas
fdivrs
jg
cmpl
cmpsl
insb
mov
mov
js
push
mov
stc
adc
adc
xor
stos
out
xor
test
xorb
lea
into
std
out
dec
jmp
cmp
add
add
pushf
in
scas
js
add
sbb
add
iret
bound
stc
movsl
daa
mov
es
add
shlb
loope
imul
and
pop
popa
movsb
and
jl
pop
imul
in
or
arpl
sbb
mov
cmp
mov
mov
pop
jl
mov
cwtl
xchg
and
scas
ja
leave
loop
xor
mov
orl
das
adc
scas
push
push
xchg
notl
or
or
in
jg
xor
pop
fisttpll
cli
mov
nop
dec
or
arpl
push
pop
ds
and
nop
or
movsl
aam
cltd
fs
loop
xchg
pusha
inc
add
jle
cmp
sub
leave
push
jns
mov
stos
fwait
inc
sti
xor
xchg
sub
sti
hlt
fildl
pushf
mov
call
sbb
mov
jb
in
add
xchg
data16
xor
jae
lods
lcall
mov
xchg
call
push
jae
inc
dec
shll
xor
or
sub
fyl2x
pop
or
xchg
sbb
xor
lret
sti
repz
in
ds
sarl
mov
add
mov
dec
out
xor
jl
xchg
and
pop
jo
rorb
dec
out
fs
pop
sbb
daa
pop
neg
or
jge
xor
lcall
in
sahf
lods
adc
cmp
mov
mov
sub
xchg
fimull
push
mov
mov
std
xchg
outsb
inc
or
push
pop
cmp
sub
and
adc
aas
adc
movsb
dec
dec
dec
daa
add
in
push
or
mov
add
dec
aad
push
ficoms
mov
into
jmp
jmp
loope
int3
sub
cpuid
aaa
lret
xor
mov
xchg
fiadds
in
cmp
xorb
imul
cli
add
cltd
mov
push
lret
xchg
lea
je
aas
mov
mov
mov
add
inc
lcall
push
lods
idivl
les
arpl
cltd
mov
cli
ds
lcall
lahf
ret
push
adc
jl
shll
test
pop
bnd
xchg
cmp
push
xor
xor
inc
test
in
jg
mov
dec
dec
and
fs
imul
test
lods
dec
sbb
adcl
xchg
idivl
sahf
push
xor
fwait
mov
sahf
in
test
cld
adc
mov
dec
push
jbe
mov
cmp
mov
aam
mov
insl
mov
jp
cmp
and
andb
mov
and
push
in
ja
jle
int3
mov
ljmp
adc
out
push
pop
icebp
adc
addr16
lcall
xor
js
fdivl
jmp
adc
les
rclb
and
insb
testl
in
cmp
testl
enter
add
xchg
jb
out
mov
add
adc
pop
imul
mov
dec
jmp
jmp
xor
lock
call
fsts
sub
pop
scas
sbb
rorb
faddp
mov
dec
push
ret
js
mov
pop
rclb
pop
dec
mov
mov
fisttps
cmc
ficoml
cltd
rcll
je
jb
inc
lds
in
jns
or
jp
jg
mov
and
dec
lods
movsl
out
and
mov
das
into
rorl
das
inc
adc
xor
insl
push
ja
or
dec
cmp
fwait
jle
pop
add
push
jp
pop
mov
mov
mov
ss
out
pop
mov
push
or
sbb
mov
mov
ja
das
mov
ss
add
inc
jne
movsl
mov
call
mov
rcl
inc
and
jae
in
subb
dec
xchg
push
xchg
ret
and
data16
arpl
adc
inc
cli
fwait
dec
jg
idivl
shll
lcall
mov
or
and
rcll
dec
lods
lcall
jno
in
and
jle
sub
arpl
hlt
popa
cmp
loope
repz
nop
clc
daa
cmpsl
cwtl
ret
fnstsw
cli
jmp
mov
and
in
pop
push
das
or
ret
xchg
test
xor
les
xchg
cltd
scas
out
push
inc
jo
imulb
sahf
jecxz
dec
xchg
cmpsl
outsb
out
addr16
ds
insl
sbb
lahf
shr
jbe
xchg
leave
popa
add
mov
add
outsb
ror
faddl
out
or
push
push
mov
pusha
sub
xlat
imul
or
movsb
lock
fs
cmpsb
inc
inc
test
push
negl
shrb
repz
scas
adc
fbld
push
sub
jns
jo
pop
jge
cmp
lea
and
or
or
mov
ret
jo
xchg
sub
std
cmpsb
cmc
sub
push
mov
cli
fwait
sbb
lds
fcmovnb
xorl
pushf
sub
sub
mov
fiaddl
loop
xchg
fwait
inc
mov
out
sub
inc
dec
popa
jae
sub
sub
mov
sub
rorl
mov
into
sarb
sub
adc
jl
test
add
mov
xchg
add
sub
cmp
lea
dec
std
cld
xor
jp
push
jecxz
addr16
and
sub
cmp
xchg
mov
iret
int3
xor
and
lcall
das
adc
aad
add
push
push
nop
std
jno
push
loop
jno
inc
dec
enter
std
shll
push
test
xchg
xor
xor
imul
fs
or
rclb
mov
cmpsl
pop
mov
aad
pop
hlt
lret
movsl
inc
cmpsb
aad
shl
fmuls
mov
dec
test
repnz
cmpsl
or
hlt
ret
dec
dec
xlat
inc
inc
inc
ret
jecxz
not
sti
or
divl
xor
sar
clc
xlat
lds
or
into
mov
sarb
mov
push
lahf
dec
daa
add
addb
jno
jmp
xchg
push
adc
xorb
dec
sbb
jns
sbb
lods
shl
jecxz
jp
subl
bswap
test
dec
sub
cmpsb
mov
xlat
repnz
jle
mov
xchg
fcomps
lret
gs
loope
fisubs
in
je
xchg
es
pop
mov
push
dec
mov
out
stc
pop
out
pop
sbb
scas
cwtl
xchg
fninit
sarb
xor
cmpsb
adc
jbe
ja
push
jg
movss
jno
mov
mov
or
push
cs
pop
sub
icebp
les
cmp
xchg
xchg
aad
xor
into
pop
xchg
incb
ret
movsl
pusha
jno
pop
ljmp
repz
inc
pop
cmp
les
repz
out
xlat
pop
cwtl
adc
je
cmp
int3
icebp
inc
dec
jp
mov
jae
icebp
lds
xlat
mov
sub
jg
je
cmp
cmp
roll
pop
hlt
add
jno
push
mov
stos
mov
jbe
xor
ds
and
out
fs
loopne
cli
xor
out
cld
out
jae
pop
xchg
sbb
stos
add
rcrb
ss
aam
scas
aam
or
das
lret
out
dec
pop
sti
sarl
xor
mov
add
stc
push
adc
negb
mov
mov
imul
inc
pop
xlat
sbb
inc
xchg
stos
inc
aam
or
sti
add
xchg
add
xchg
jecxz
add
rclb
fistpll
lret
stos
mov
imul
std
pop
mov
ss
scas
daa
pop
paddw
ja
test
push
sub
repnz
fcmovne
push
outsl
inc
out
dec
jg
pop
xchg
loopne
lods
xchg
mov
inc
inc
test
adc
and
add
sbb
ficompl
clc
push
pop
movsb
adc
pusha
pop
flds
jmp
push
dec
push
sbb
icebp
imul
xchg
jae
lea
pop
dec
adc
dec
repz
add
aas
inc
and
pop
aad
xchg
pushf
xor
pop
lcall
dec
jmp
and
iret
clc
lock
negl
pop
sbb
dec
sbb
sahf
cltd
in
jmp
lds
cmp
test
rcrb
pop
int3
fbld
loope
sbb
and
jmp
xor
and
xchg
inc
sub
out
lea
push
gs
in
loope
and
mov
and
fcomip
cmp
pop
cmp
pop
imulb
cmp
or
fnstcw
mov
test
inc
sub
pop
xchg
shr
rcll
xchg
mov
xor
enter
ret
lea
inc
cltd
push
hlt
push
cmp
nop
push
sbb
jnp
gs
sti
cmc
clc
addl
push
add
dec
aam
pop
mov
add
xchg
cmp
mov
pop
mull
mov
mov
and
fcom
mov
cwtl
lock
iret
or
mov
lea
pop
sbb
xchg
sub
ret
push
adc
loopne
ficoml
push
adc
inc
mov
mov
orb
sub
dec
loope
ret
push
lods
leave
cmp
aaa
push
divb
jge
jbe
and
jo
iret
pop
out
push
out
out
sarb
lea
xor
dec
mov
mov
pusha
int
jge
cwtl
adc
cld
jl
loope
repz
out
push
mov
rcll
lret
mov
scas
fcmove
stos
out
testl
js
jmp
jae
jg
jne
out
ret
divb
test
xchg
jns
mov
inc
fcomps
xchg
nop
cmp
lds
icebp
xor
push
sub
in
add
add
cli
dec
mov
movups
cmp
cmp
xchg
sahf
inc
pop
mov
cmp
rcrb
xor
test
jbe
mov
rcll
lcall
mov
jns
lahf
roll
pop
mov
cld
popl
inc
ja
fwait
xor
clc
push
dec
pop
mov
fdivs
fnstsw
je
aam
push
loopne
rcll
aam
or
mov
inc
inc
inc
add
and
sbb
das
cwtl
mov
push
jge
out
call
xchg
imul
aas
pop
aaa
pop
inc
xor
mov
mov
test
in
insl
sahf
rcr
push
sub
xor
outsb
dec
cmp
repz
sub
adc
mov
cmp
sub
sub
and
sbb
push
bound
imul
jmp
add
enter
inc
sbb
pop
fcoms
mov
enter
inc
mov
adc
mov
push
dec
lock
push
push
stc
dec
xor
pusha
push
mov
fs
sub
jge
sbb
loop
sbb
sub
xor
inc
pop
rcl
cmpsb
ja
std
icebp
test
insb
cli
push
xor
push
push
jp
ds
pusha
nop
xor
loopne
adc
addr16
jae
addr16
cltd
mulb
leave
mov
addb
mov
test
rclb
cmp
arpl
mov
idivl
xchg
add
xor
xchg
pop
mov
xchg
int3
inc
adc
sub
out
aam
mov
jae
pop
cmpsl
mov
or
cmp
lods
dec
std
loope
jle
jae
mov
mov
xchg
imul
lock
fwait
and
xchg
inc
jmp
or
mov
pop
je
pop
das
inc
pusha
arpl
or
and
dec
dec
clc
mov
mov
js
and
divb
loop
sahf
in
je
inc
pop
lcall
les
add
outsb
int
cli
mov
push
jno
cmp
fs
jmp
mov
inc
xchg
sar
jne
mov
repnz
and
ljmp
sub
jns
in
sbb
jmp
mov
int3
arpl
jmp
push
jp
jo
ret
pop
orl
mov
or
xor
les
out
pop
dec
sbb
pop
mov
lcall
ljmp
cwtl
mov
pop
daa
out
stc
mov
push
and
jecxz
sub
mov
sarb
fwait
cwtl
cmp
ljmp
push
enter
arpl
inc
dec
sahf
out
in
decl
aas
int3
mov
into
xor
stc
test
fidivrs
mov
sub
push
jno
push
fdivrp
int3
mov
aad
lods
xchg
loopne
imul
cmpb
into
sbb
push
int3
adc
dec
daa
jno,pt
scas
adc
in
xchg
xchg
push
mov
ljmp
dec
jne
and
jmp
inc
aas
jecxz
pop
mov
and
in
in
aaa
aaa
pop
imul
rorl
fists
das
pushw
mov
mov
fsubs
rorb
adc
xchg
push
lds
daa
sbb
arpl
daa
dec
add
lods
push
ret
ret
xor
mov
fstps
pop
jno
pop
push
aad
adc
push
cmp
pusha
sub
leave
pop
incl
sub
aas
ljmp
cli
add
push
add
fbstp
call
pop
insl
cmpsb
aad
push
mov
pop
jae
addb
xchg
lock
pop
and
add
fst
cmp
pop
loop
pop
xchg
icebp
jbe
sub
enter
mov
out
int3
xor
push
jg
pop
mov
imul
ljmp
imulb
aaa
dec
std
or
inc
inc
mov
dec
nop
mov
or
icebp
mov
xchg
cwtl
enter
cld
mov
jno
ret
and
and
mov
dec
or
aas
stos
dec
jmp
test
arpl
lods
out
lds
outsb
stos
dec
jnp
inc
jno
and
add
add
outsl
cli
popf
mov
ret
jb
es
fcoms
sti
sub
and
push
push
add
insb
rol
scas
test
jecxz
push
sbb
xor
sub
loope
add
pop
xchg
xchg
adc
jae
xchg
push
aas
pop
sub
cmpl
lods
adc
add
aad
mov
aam
cmp
xlat
ret
fsubr
pop
cmpl
fadd
mov
ljmp
cs
movsb
adc
jp
les
push
test
lahf
jge
cmp
mov
push
lods
test
rclb
xchg
outsl
dec
push
loopne
js
inc
jg
je
and
std
dec
rcr
xchg
dec
dec
jo
mov
movsl
xchg
sub
clc
sub
xchg
outsb
aad
aam
and
imulb
jmp
mov
lea
or
inc
data16
push
lea
mov
jbe
dec
stc
hlt
push
mov
xor
mov
imul
test
sub
mov
mov
gs
jbe
pop
push
fwait
xchg
fucomp
mov
cwtl
xchg
push
add
mov
stos
addr16
clc
mov
popf
push
je
pop
sbb
mov
call
xlat
dec
xchg
jbe
add
in
jle
jecxz
mov
fisttps
inc
mov
sbb
jp
lods
daa
es
sub
out
mov
das
repnz
mov
xchg
mov
and
stos
sub
fcmovb
sub
in
push
inc
sarb
push
andb
or
je
loop
cmpsb
js
lods
xor
inc
or
pop
sbb
jp
pusha
es
dec
mov
arpl
xchg
mov
das
inc
or
add
dec
inc
push
insl
sub
movsl
popf
pop
push
jp
ret
inc
adc
jno
sub
add
mov
mov
dec
jg
aad
cli
data16
clc
xchg
xchg
ficoms
pop
jae
mov
mov
arpl
mov
mov
add
mov
data16
cmpsb
mov
mov
pop
add
push
mov
xor
xchg
scas
xchg
outsb
push
cmp
push
imul
cmp
inc
adc
movsb
bound
movsl
or
xlat
ljmp
fidivrs
sbb
imul
rcrb
push
aad
jecxz
out
cli
jecxz
inc
mov
push
test
out
cmp
into
int3
cmpsb
xchg
cmp
and
lods
mov
xchg
test
popa
mov
pusha
jae
pop
push
test
pop
mov
cmp
mov
ds
hlt
mov
mov
out
and
inc
xchg
xchg
mov
test
cwtl
jnp
imul
iret
and
and
or
jp
lods
xchg
mov
out
push
in
ja
lahf
mov
lret
cmp
xchg
adc
int3
push
inc
scas
stc
and
roll
ljmp
loopne
mov
mov
mov
jp
jle
sub
nop
inc
sub
popf
xchg
and
or
insb
cs
fnstcw
mov
gs
fnstcw
adc
repnz
cli
push
fimuls
inc
fwait
adc
jno
sar
pop
mov
jmp
fmulp
pop
jp
nop
sbb
sbb
sub
mov
movsl
aas
mov
push
sub
lcall
push
inc
scas
mov
mov
movsb
aas
add
int
ret
daa
xor
xchg
mov
rcrl
and
fdivrs
lods
adc
ret
mov
lret
out
in
jge
sub
sbbl
insb
and
push
jle
add
mov
cmp
mov
bound
and
lds
xchg
js
sub
xchg
pop
cmc
xchg
pop
movsb
andl
push
sub
push
ret
cs
ja
mov
ret
frstor
mov
cmpsl
pop
out
jp
cmp
pop
in
imul
jo
or
daa
xor
xchg
mov
xchg
int
into
xor
mov
cwtl
pusha
pushf
or
cmp
pop
push
mov
loop
lods
out
sbb
mov
push
jnp
mov
hlt
psrlq
jmp
je
dec
scas
cmp
lock
mov
adc
fstps
mov
jbe
and
xor
loop
mov
popa
lods
mov
cmc
mov
pop
mov
adc
push
mov
pop
xor
imul
cmp
addr16
mov
jnp
jae
call
inc
mov
xor
adc
fdivrp
inc
outsl
outsb
mov
fsubl
movl
or
cmp
jecxz
mov
std
and
addr16
lret
movsl
jg
dec
pop
popa
xchg
push
or
sbb
vpaddb
cmp
mov
fcmove
xor
call
scas
push
adc
mov
cmp
addb
adc
and
cld
icebp
add
sti
data16
adc
adc
loope
imul
dec
mov
and
stos
fxch
mov
inc
xorl
and
push
les
mov
fisttps
out
rcrb
int3
add
leave
adc
shlb
pop
std
stc
fisubl
insl
lock
push
adc
jae
in
mov
mov
cs
push
push
mov
dec
aam
mov
cmp
inc
fadds
jnp
jge
add
lock
hlt
and
xor
arpl
iret
sbb
ds
lds
outsl
cmp
adc
enter
imull
sub
movsb
or
xchg
inc
bnd
loope
mov
dec
fisttpl
sahf
xor
bound
sarb
xor
mov
add
mov
inc
inc
fwait
mov
fcmovnu
lock
imul
jb
inc
xor
aaa
mov
loope
jmp
leave
add
mov
cltd
fstpt
xor
test
fdiv
dec
dec
leave
pop
jae
into
sbb
mov
jl
lea
in
cwtl
daa
sub
xchg
add
jge
outsb
shlb
mov
or
dec
jne
sub
lret
adc
cmp
push
mov
stos
push
das
xchg
xchg
and
fs
mov
popa
loopne
ss
iret
mov
lods
inc
mov
adc
rcll
mov
pop
test
pop
arpl
insl
cmpsb
jl
scas
jmp
jp
add
push
shrl
popf
jae
subb
mov
inc
mov
pusha
dec
add
xchg
fstl
push
in
hlt
xor
data16
inc
adc
cmp
push
popa
pop
adc
and
shll
aad
fmull
lahf
mov
loop
jmp
and
cmp
test
sahf
pop
push
imul
jb
stc
aam
cmpl
sti
fisubrl
mov
mov
or
sti
cmp
cwtl
xchg
xor
add
rcl
mov
jle
sbb
scas
sbb
cmc
mov
icebp
inc
cmp
or
sbb
jg
or
mov
add
jecxz
popa
and
iret
xchg
mov
mov
dec
sbb
lret
loopne
daa
fistl
jns
adcb
loop
rorl
ja
pop
jecxz
mov
mov
mov
jmp
scas
fs
fistpl
ljmp
dec
insl
xor
std
mov
das
lea
addr16
xchg
leave
xor
int3
rclb
push
cmpsb
or
cmpsb
imul
push
popa
fistps
push
mov
cwtl
out
sti
jae
stc
xchg
test
stos
fldl
or
xor
in
sbb
adc
mov
fisttps
adc
lods
jb
mov
shll
add
adc
sbb
mov
orb
jecxz
cmp
xchg
in
add
xor
mov
mov
mov
push
add
dec
arpl
xor
cmp
and
pusha
push
lret
add
stos
sub
xor
adc
sbb
pop
cmc
lahf
mov
mov
xchg
lds
fisttps
push
js
cmp
sbb
out
sbb
outsl
push
add
mov
add
sbb
rcr
testl
mov
pop
add
in
aam
pop
jbe
add
mov
int
mov
repz
sahf
adc
sbb
cmpsl
mov
mov
shr
push
mov
pop
inc
int
into
lock
rol
mov
mov
adc
mov
adc
pop
or
inc
sbbb
jge
push
cmc
inc
fld1
or
loopne
js
push
iret
push
push
gs
outsb
pop
fs
xchg
jbe
sub
inc
cmp
xchg
std
lock
test
fbstp
std
sub
sbb
cli
xor
mov
out
movsl
dec
xchg
pushl
scas
loop
insl
lock
mov
sar
or
add
mov
repz
or
ljmp
iret
test
dec
dec
jo
out
jnp
push
jno
jge
xchg
aad
sub
aad
and
cmc
and
in
inc
xor
js
repz
and
adc
dec
aad
jb
push
out
cli
lods
mov
sti
jnp
std
add
outsb
mov
ja
mov
sub
and
fmuls
add
aam
dec
ffreep
jge
or
mov
movsl
jne
xchg
inc
out
lods
mov
jmp
mov
jmp
mov
das
jg
loope
sbb
out
lock
push
push
insl
dec
jge
scas
hlt
sub
leave
xlat
add
repz
lds
div
rolb
add
push
inc
jge
push
pop
mov
and
sub
sbb
pushf
ljmp
sbb
sahf
notl
cmpb
movsb
es
jg
pop
js
mov
mov
pop
jo
ja
inc
mov
push
outsb
add
add
repnz
loopne
xchg
adc
mov
dec
dec
hlt
xchg
add
cld
sub
mov
repnz
fdivrs
pop
sub
dec
imul
inc
mov
and
rcrl
fistpl
or
shl
and
push
in
aam
mov
dec
fwait
dec
xor
les
mov
test
xchg
inc
pop
xchg
jne
lock
out
inc
repz
jae
or
fwait
imul
clc
out
mov
mov
or
mov
arpl
mov
adc
or
fwait
lret
push
push
add
mov
mov
out
push
ret
bnd
faddl
lahf
lods
jl
jmp
lcall
fists
and
insl
loopne
sbb
push
in
cli
mov
dec
add
sbb
inc
pop
popf
std
cmp
jo
pusha
aas
rorb
sbb
inc
sbb
cmc
inc
orb
pusha
jmp
sbb
data16
ret
lods
jge
push
leave
sbb
scas
sbb
inc
xchg
imul
mov
repz
cs
pop
jne
test
xor
xchg
imul
adc
test
nop
scas
cmpsb
xchg
popa
test
push
fcomip
icebp
pusha
mov
je
and
lods
outsl
enter
insb
xor
pop
fiadds
mov
jns
loopne
lret
mov
inc
mov
loope,pt
push
jb
pushf
lahf
out
test
sbb
dec
adcb
outsb
cmpsb
data16
or
sub
xchg
ja
adc
jns
inc
jnp
fdivs
inc
pop
sub
and
lcall
dec
jno
mov
xchg
jae
or
jg
xchg
hlt
pop
and
data16
movsb
icebp
adc
lock
jg
loope
add
mov
and
ret
push
je
inc
sub
sbb
dec
jle
cmp
loopne
gs
jl
mov
int
adc
or
movsl
add
or
lret
xorl
outsl
decb
mov
fs
adc
and
ja
sub
pop
movsl
mov
test
int
ffreep
pop
or
push
jne
loope
stc
in
fstpl
movsl
ljmp
sbb
pop
stc
and
bnd
mov
jmp
stos
lahf
pop
push
xor
out
push
mov
cmpsb
inc
dec
cli
icebp
jle
cltd
stos
flds
pop
and
lea
cmp
xchg
sbbl
pop
push
mov
pop
or
fsubs
push
sbb
add
mov
dec
pushf
ss
dec
in
or
or
xchg
jnp
repnz
les
push
dec
ds
and
sub
jns
xlat
out
jg
sbb
lret
dec
jg
xor
mov
xlat
sub
xchg
add
sbb
aad
mov
repnz
lea
mov
js
call
push
inc
loopne
imul
clc
push
in
mov
pop
mov
mov
dec
scas
nop
inc
or
andl
xor
lods
push
lods
cld
mov
dec
fdivrs
cld
xchg
sbb
mov
xlat
popf
loopne
test
cmpl
adc
add
jno
push
xor
sub
rcl
sbb
pop
xor
and
imul
mov
xchg
ja
imul
roll
sahf
pop
and
jp
faddl
lea
push
sbb
scas
ret
aam
jne
andl
push
jecxz
icebp
jno
mov
orb
mov
leave
sbb
adc
fcmove
cld
dec
jnp
in
lahf
jmp
adcb
in
and
or
sbb
rcll
imul
mov
cmp
xchg
or
out
push
adc
movsb
rolb
adc
mov
xor
mov
les
jae
pop
nop
ljmp
mov
loope
mov
stos
stos
inc
xor
add
sub
xchg
cmpb
loopne
xor
mov
or
jg
outsl
je
pop
sbb
jmp
fisttps
divb
js
xor
int3
adc
adc
ret
imul
sbb
pop
icebp
xchg
mov
push
jae
arpl
sbb
lds
mov
mov
sub
dec
std
mov
int3
xor
push
inc
jmp
lret
cmpsl
popf
mov
lcall
xor
adc
addl
sbb
outsb
pusha
int
cmp
inc
dec
sbb
sub
or
fyl2x
pusha
in
shlb
jne
iret
pusha
movsb
sbb
repz
jmp
pusha
sub
mov
mov
jl
push
sbb
gs
fists
inc
lds
in
add
sbb
loopne
xchg
fs
lds
inc
add
jmp
stos
or
decl
aas
xchg
mov
pop
jno
add
and
lahf
inc
xchg
xchg
xchg
or
push
fwait
mov
inc
dec
rcll
insl
pop
leave
lods
in
and
xor
dec
fiadds
lret
inc
sarb
push
adc
pop
mov
aam
cld
or
jb
ret
push
push
push
out
sub
gs
in
sbb
inc
fs
sub
mov
cmpsb
lods
int
test
inc
mov
test
add
inc
jp
adc
dec
stc
popl
btr
stc
jnp
xchg
push
ret
in
jno
sub
dec
std
mov
xchg
jmp
stos
dec
push
or
jo,pn
out
arpl
pusha
cmpsl
xor
xchg
cmc
stos
adc
push
jecxz
repnz
jmp
sub
push
fldenv
inc
and
insb
test
mov
push
xor
push
arpl
add
ret
aam
je
das
xchg
pop
cwtl
jns
jmp
ljmp
into
xchg
enter
hlt
in
call
movsb
sbb
pop
loop
std
dec
or
aaa
adc
mov
pop
aas
xor
pop
icebp
pop
fldt
stos
jae
lcall
inc
out
xor
in
cmc
mov
ret
mov
aas
and
outsb
push
scas
je
dec
and
sti
gs
dec
lahf
cmp
lcall
xor
jb
xorl
jl
dec
mov
arpl
and
jmp
outsb
mov
cwtl
pop
mov
xor
ja
lcall
ljmp
insb
push
xor
mov
xchg
mov
xlat
and
sbb
sbb
div
in
jle
je
rcll
xor
push
pop
pop
cmpsl
mov
add
push
push
adc
imul
test
sar
mov
testl
push
jns
aad
std
jo
dec
std
fs
into
or
insl
stos
insl
loope
and
and
cmp
inc
gs
adc
inc
xorl
push
sahf
addb
outsl
shlb
xor
jge
popa
mov
cmc
and
test
arpl
sub
in
in
inc
cs
insb
aam
inc
mov
dec
fisubrl
adc
cmpsb
mul
adc
jno
aaa
shl
test
aas
sbb
aam
call
mov
xor
and
inc
stc
and
pop
inc
pop
cmp
sub
inc
mov
jbe
in
xchg
fistpl
test
mov
push
adc
fs
out
cmp
scas
xchg
call
scas
std
loope
pushf
push
es
mov
mov
dec
lret
out
add
repnz
lods
mov
sub
and
cmp
and
daa
sub
sahf
mov
push
mov
push
jge
pop
fldl
aaa
rcll
adc
shlb
ror
adc
scas
cmp
mov
pop
imul
mov
into
lods
sbb
ja
adc
adc
add
mov
stc
test
cmpb
add
xchg
test
cmp
jge
adc
sub
stos
xlat
in
out
pop
mov
sarb
sbb
pushf
sbb
out
fwait
jae
ja
mov
push
xor
xchg
add
cwtl
or
cmp
gs
xor
out
jg
ja
jp
les
xor
gs
les
xchg
jbe
addr16
dec
flds
ja
add
popa
cmp
inc
movl
xlat
ljmp
cmp
jae
and
jbe
addr16
mov
ror
mov
leave
movsl
sarl
sbb
rol
push
push
loop
sub
fdivrs
and
mov
ss
mov
int3
mov
std
nop
pop
das
lock
or
fisubrl
lahf
add
pop
jecxz
sti
in
popa
xchg
dec
clc
mov
stos
mov
xlat
push
ss
aad
pushl
xchg
fs
mov
jns
dec
xchg
hlt
pop
outsb
sbb
sub
mov
mov
mov
loop
xchg
cmp
or
adc
aas
sub
shr
rcrb
and
push
cmp
push
mov
dec
int3
pop
inc
sbb
mov
push
in
push
frstor
sti
sub
or
sub
xor
pop
jb
nop
sar
xchg
arpl
xor
cmp
fsubr
add
mov
fcomps
inc
mov
insl
sar
mov
xchg
push
sbb
ss
aam
push
loope
push
mov
pop
test
lds
fmull
insb
push
sbbl
sub
xchg
stos
in
inc
ror
imul
fstl
in
movl
jg
mov
popa
negl
out
rorl
ja
jg
push
jne
or
dec
repz
mov
jecxz
inc
test
bound
xlat
enter
adc
jp
fbld
ret
stos
pusha
inc
add
dec
dec
or
push
xchg
dec
cli
push
add
mov
iret
in
add
enter
sub
pop
mov
pop
arpl
orl
jle
mov
jg
push
out
cld
and
insb
repz
jg
mov
mov
sub
pop
lahf
inc
cmp
jnp
rcpps
add
xrelease
sub
test
dec
adc
cld
pushf
aam
aad
xchg
sbb
lods
out
movsl
and
pop
fs
inc
aam
sbbl
dec
cltd
in
xor
in
jecxz,pt
scas
dec
pop
push
mov
jno
lods
xor
lret
outsl
add
movsb
out
mov
test
pop
cld
push
mov
cmpsl
bound
add
add
in
pop
jmp
mov
sbb
lock
in
loopne
or
push
pop
and
add
rcrb
xchg
rep
lock
out
add
cmp
int3
inc
inc
add
xchg
imul
push
push
jmp
sarb
mov
inc
data16
cli
movsb
insl
inc
adc
mov
mov
dec
cltd
divl
jecxz
pop
rcl
mov
add
sub
call
ljmp
jg
in
imul
test
xor
arpl
into
adc
fstps
imul
push
mov
dec
mov
in
jo
cmc
cmp
in
movsb
mov
adc
fcoms
jno
fs
mov
mov
dec
inc
jl
rclb
pop
xchg
xchg
and
dec
mov
imul
pop
or
mov
movsb
add
fisubrl
ljmp
subl
pop
mov
pop
nop
in
xchg
jnp
int3
or
es
in
or
jnp
out
bnd
lahf
outsl
std
test
push
push
push
pop
lret
inc
mov
jno
scas
mov
test
std
inc
shll
jge
ljmp
push
cmp
mov
fmull
setp
sbb
fxam
sub
ja
mov
lret
decb
push
inc
mov
pusha
cmp
mov
repnz
out
cmpsb
jmp
cmc
lock
sub
xlat
xchg
loopne
out
inc
mov
in
rcl
sbb
cmc
jno
pusha
mov
push
lods
inc
pop
mov
and
shll
add
ja
shrl
mov
xchg
add
divb
repnz
cli
ss
mov
repnz
or
xor
inc
push
arpl
push
push
repnz
rcll
int
dec
stos
popa
rclb
pop
cld
hlt
subb
sub
push
mov
sbbl
int3
in
mov
int
push
inc
jge
sub
mov
fs
mov
fiadds
leave
mov
sub
mov
xor
lcall
mov
ljmp
jns
jns
daa
popf
fsubrl
dec
jne
enter
fbld
dec
in
xchg
in
loop
stc
inc
push
jnp
dec
sahf
out
ljmp
push
cwtl
aas
jo
mov
mov
int3
mov
sbb
fsubrl
les
mov
mov
xchg
ss
push
les
mov
inc
ficomps
mov
push
pop
adc
sub
inc
popf
jb
and
pop
outsb
out
xor
mov
int3
jne
adc
adc
push
mov
adc
mov
xor
mov
mov
dec
insl
add
sahf
lret
jmp
push
cwtl
add
dec
stos
mov
inc
ja
gs
inc
and
icebp
adc
sbb
fidivrl
clc
pop
jmp
sbb
or
loopne
ret
lret
inc
repnz
rclb
mov
push
iret
xchg
xlat
rcrl
jns
popf
sub
inc
leave
in
pushf
jmp
dec
pop
jl
push
fadd
loope
in
xchg
xchg
push
xor
imul
mov
mov
push
dec
dec
rorl
mov
push
scas
add
jle
cltd
in
mov
and
inc
mov
int
dec
pop
xchg
sbb
mov
jg
lahf
cmp
dec
popa
xchg
or
repnz
sbb
adc
pop
lock
fs
mov
fucom
ds
lods
jg
repnz
imul
testl
push
rcrl
cmp
je
daa
or
daa
dec
daa
mov
js
icebp
jl
or
lret
jg
lret
fisttps
adc
aam
sti
xchg
sbb
icebp
xlat
adc
dec
outsl
gs
sub
femms
pusha
lahf
stos
mov
mov
add
repz
mov
or
outsb
xchg
pop
jmp
lea
sbb
inc
stos
and
jp
xchg
mov
stc
lret
mov
mov
add
rcr
add
jecxz
mov
jbe
push
add
sbb
push
mov
and
pop
or
pop
sbbl
adc
cmp
and
mov
dec
cli
push
aaa
shll
lret
mov
dec
pop
push
add
add
push
nop
or
xchg
mov
pusha
pop
nop
jbe
mov
das
sarb
out
and
pop
call
inc
dec
shll
fdivrp
sbb
mov
sbb
inc
cmp
ljmp
and
mov
and
scas
fcmovbe
lcall
jo
lret
sub
push
dec
jns
adc
mov
xchg
mov
cmpsb
ljmp
out
scas
fbstp
cmpsl
pushf
ficoml
cmpsl
jl
jg
adcl
xchg
je
pop
ljmp
sti
stos
sbb
mov
mov
mov
pop
stc
clc
sub
cmp
add
dec
pop
add
push
jnp
out
xlat
inc
fisubrl
sub
jl
cmc
or
leave
shrb
aam
fwait
ss
add
cmc
pop
inc
andb
data16
lahf
loope
nop
push
push
adc
sbb
negl
sub
adc
fmuls
jne
pop
xchg
xchg
sarb
fs
jg
mov
or
call
xchg
lret
loopne
push
mov
xor
out
ljmp
lcall
ficoms
or
es
iret
dec
jb
jp
sub
dec
cmp
rcr
push
dec
iret
repz
idiv
dec
xchg
xchg
lods
push
add
cmp
rcr
dec
shll
or
jp
cmp
imul
fcoml
insb
mov
adc
pop
bound
push
js
pop
gs
sub
push
add
sti
lea
nop
in
subb
and
pop
mov
mov
or
xor
inc
and
xchg
cmpsb
mov
aas
out
jge
ds
es
and
testl
loope
int
lahf
stos
inc
mov
pop
js
and
sbbl
call
clc
cld
jecxz
sti
ficompl
sbb
adc
or
mov
loop
add
shll
inc
and
push
sti
and
fdivr
fimuls
pop
jge,pn
bound
xchg
pop
push
sub
imul
cmp
pop
mov
add
xchg
loope
push
das
bound
mov
in
outsl
cmpl
int3
scas
pop
lods
inc
mov
jge
scas
xor
imul
shrb
call
adc
call
ret
jle
cmp
int3
pop
nop
push
adc
mov
mov
out
or
movsb
pusha
notb
jecxz
push
in
adc
cmp
sbb
cmc
sahf
pop
jle
fiadds
sbb
xchg
mov
jne
aad
icebp
cmp
ret
mov
or
rolb
aaa
lret
dec
in
xor
das
adc
cmp
sarb
mov
and
xor
adc
out
mov
loopne
add
xor
pop
stos
adc
mov
xor
jno
fimuls
sub
xor
lods
pusha
add
cmp
rcrl
jns
dec
jle
rcrb
scas
sbbb
mov
pusha
xchg
pop
int
inc
adc
mov
pop
inc
mov
xor
and
sub
sbb
xor
adc
or
rol
inc
mov
shr
aam
xchg
xchg
movsb
loop
mov
push
dec
push
jmp
mov
fs
sarl
pop
inc
mov
mov
fcompl
push
cwtl
mov
stc
jl
jle
shlb
xchg
adc
mov
dec
add
cmp
in
js
movsbl
cltd
aad
pop
xchg
push
mov
or
mov
pop
push
aaa
and
fwait
int3
cli
pop
sbb
xchg
aas
jl
repz
in
out
mov
aam
mov
mov
outsb
jae
out
fnsave
dec
andb
dec
adc
lret
mov
push
xchg
mov
sub
and
mov
xor
mov
pop
pop
jmp
scas
scas
roll
mov
cmp
mov
leave
sbb
cmpb
sar
lcall
out
sbb
stos
inc
mov
pop
cwtl
jno
in
sbb
dec
repz
es
and
movsl
jno
addl
daa
js
movsb
mov
aaa
sub
insb
or
adc
jge
push
mov
push
fisubrs
cmpb
mov
sahf
jbe
jmp
adc
xor
inc
sbb
in
sbb
out
ret
shlb
out
mov
xchg
icebp
movsb
dec
lret
and
dec
and
xor
into
pushf
scas
sahf
jecxz
mov
push
xchg
out
and
sarl
mov
add
lret
pop
mov
fsubs
add
add
jle
mov
push
stos
mov
lock
cltd
nop
jecxz
pop
ljmp
inc
push
push
push
les
mov
sub
testb
cmp
arpl
mov
xorl
jg
xchg
inc
dec
pop
shrl
icebp
cwtl
popf
dec
hlt
cmp
jns
mov
mov
cmc
imul
adc
movsb
sub
sahf
xor
leave
sbb
add
dec
jmp
enter
lret
and
adc
ljmp
and
mov
or
dec
sub
cltd
adc
fimuls
cs
testb
inc
sub
loope
adc
enter
cmp
and
imul
repnz
xor
push
mov
jecxz
arpl
push
mov
sbb
sbb
adc
outsl
das
jne
outsb
mov
cli
sbb
and
and
div
mov
cmpsl
enter
jmp
pop
leave
cmpsl
dec
xor
pop
pop
stc
ljmp
push
sub
mov
ljmp
cmc
popf
outsl
xchg
repz
sahf
dec
fnstenv
add
push
cmpsb
jge
sarl
cmp
mov
and
and
mov
call
test
cmp
arpl
out
test
daa
push
pop
mov
imul
test
hlt
jmp
cwtl
hlt
adc
jnp
sbb
outsb
mov
or
mov
aam
sbb
xchg
pop
pop
mov
aas
jp
shrb
push
lret
inc
sub
inc
frstor
push
inc
inc
sub
loopne
push
push
mov
cltd
add
inc
add
pop
push
ds
bnd
xchg
fdivrs
test
rcll
jge
mov
jle
pop
popf
outsl
jns,pn
dec
xchg
jne
stc
sub
jmp
push
mov
dec
nop
pusha
pushf
int
pop
xor
ds
fdiv
shrb
jnp
pop
jp
movsl
mov
fisubl
imulb
push
aaa
dec
call
in
inc
push
lds
or
sbb
xchg
push
jg
int
inc
js
xor
cmpsl
cmp
je
bnd
pop
loopne
test
mov
lcall
test
das
inc
sub
inc
bndldx
mov
inc
push
cmp
out
ror
sub
ss
mov
ret
mov
sbbb
or
jg
or
xorb
adc
jmp
pop
ds
in
jle
jge
cmp
loopne
arpl
inc
pop
adc
dec
rcll
pusha
inc
aaa
add
pop
test
push
es
test
mov
dec
sbb
std
pop
arpl
incl
add
mov
xchg
pusha
in
jne
push
xchg
leave
cld
dec
pop
or
shll
sbb
dec
ja
mov
int3
mov
mov
pop
aaa
mov
mov
aam
lret
mov
aas
roll
outsb
scas
rcll
lahf
cli
pop
jmp
adc
mov
daa
jo
push
push
aam
adcb
mov
mov
pop
das
loopne
mov
mov
jecxz
dec
andb
arpl
lahf
mov
xchg
xor
and
aas
sub
loop
xchg
xlat
cmpsl
fwait
in
sbb
or
cmpl
push
aaa
adc
add
orb
sar
in
mov
push
cmp
lods
push
pop
mov
es
xchg
notb
cmpb
test
add
jmp
lea
popf
addr16
loopne
inc
adc
xor
or
adc
xor
cmpsb
mov
shufps
inc
dec
cmp
sub
inc
popa
xor
cmp
fsubr
lcall
push
jns
dec
dec
add
mov
cld
in
rorl
push
repnz
mov
aaa
lcall
jb
push
in
lcall
gs
dec
xor
xchg
stc
xchg
cmp
mov
pop
scas
cmpsl
dec
movsb
scas
lret
popl
lahf
and
gs
cmpsb
adc
in
outsl
mov
fstp
xchg
ret
lret
cmpl
imul
pop
inc
fildl
mov
push
fcmovb
sbbl
cmp
cs
leave
popa
cmp
mov
cmp
pop
les
loopne
fbld
sbb
mov
or
pop
lcall
push
dec
sub
jae
loop
xor
push
aam
mov
rorl
out
lahf
inc
cmp
pusha
sub
add
roll
scas
jg
sbb
lret
xor
xor
mov
movsl
xorb
xchg
cmp
jmp
sbb
stos
mov
inc
cli
aam
push
pop
lahf
insb
imul
mov
push
push
ret
out
or
fcoml
or
push
adc
subb
sbb
cmp
jns
inc
cmc
add
add
xor
jbe
shll
fs
and
cmp
xchg
cmpsb
jb
mov
outsl
int
test
sub
faddl
ret
sbbb
sub
outsl
push
jl
nop
in
movsb
int3
loope
inc
ss
shlb
cmp
push
bound
sbb
xor
pop
sbb
adc
movsl
sub
cmp
xor
add
adc
dec
popa
pop
cmp
cs
mov
push
sub
int3
cwtl
adc
mov
cmp
das
and
aas
add
push
push
cmp
push
xchg
cmpsl
ljmp
pop
jle
xchg
mov
lret
push
in
mov
mov
shll
inc
stc
mov
popf
nop
lcall
sbb
dec
repz
fbld
jbe
aam
jg
sbb
pushf
mov
pushf
bound
outsb
ror
mov
mov
pop
movsl
xchg
addr16
es
lds
mov
enter
push
push
mov
int3
lock
xchg
fsubs
popa
aam
mov
loop
sti
cli
fstps
cld
js
addb
push
sarb
xchg
insb
push
test
filds
xchg
lods
fwait
test
fnsave
cmp
or
push
dec
sub
aad
bound
and
stos
and
mov
sbb
fcompl
nop
add
mov
lret
sbb
ret
shll
mov
dec
aas
push
cmp
dec
cmpsl
xorb
out
notl
test
mov
mov
inc
bound
inc
out
jmp
sar
cmp
or
mov
dec
icebp
imul
xchg
insl
xchg
popa
lods
ja
fsubp
aad
dec
testl
hlt
rcrb
pop
dec
mov
pushf
aaa
arpl
adc
push
lcall
out
jp
dec
fldcw
test
cmp
push
adc
cwtl
pop
dec
mov
xchg
rorb
xchg
xchg
int3
jne
mov
jle
sbb
shll
push
cmp
mov
flds
ja
xor
sub
sbb
pop
jo
add
add
movsb
add
dec
cmc
cs
ficomps
outsl
roll
inc
push
xor
or
bound
vhaddpd
push
jge
jne
enterw
test
cli
mov
inc
and
sub
icebp
cltd
xor
adc
adc
cmp
aad
scas
jecxz
add
orl
lea
in
push
jo
jne
cmp
jl
insl
inc
std
jge
sbb
cmp
les
or
lock
in
sub
shlb
and
jae
sti
movsb
xchg
in
inc
lock
mov
imul
push
lahf
stos
cmp
xchg
jle
dec
mov
sbb
pop
cmc
and
lock
and
ljmp
lcall
mov
mov
aad
xor
scas
or
cmp
push
fstl
mov
dec
push
lods
mov
lcall
insl
mov
push
iret
push
enter
mov
inc
push
and
xchg
xchg
lcall
lret
std
or
mov
lock
aam
out
mov
xchg
cwtl
xchg
pop
xlat
fucom
add
mov
adc
subl
loope
cs
xor
jno
or
nop
aam
adc
pop
cmp
xchg
or
xor
in
adc
ja
pop
push
cld
imul
mov
push
int3
ljmp
dec
in
inc
pop
xchg
lods
pusha
mov
into
cmp
sbb
ljmp
pop
rol
int3
lock
iret
xchg
xchg
push
scas
stc
xchg
dec
popa
fsubr
aaa
dec
mov
mov
mov
xchg
subb
or
mov
xor
sbb
inc
or
mov
cmp
fmulp
mov
dec
pushf
pop
sahf
pop
rcr
jo
out
mov
icebp
add
and
dec
sub
xchg
push
repz
popf
inc
mov
push
out
clc
dec
and
popf
lods
mov
nop
pop
pop
push
or
adc
or
aad
cmpsl
iret
mov
mov
cmp
sti
int
leave
jne
xor
addr16
mov
nop
pop
loop
insl
roll
imul
cmp
sub
sub
jb
shrb
pop
ljmp
imul
gs
test
jae
and
rorb
mov
in
sbb
jb
or
jecxz
scas
mov
pushf
loopne
rcl
dec
push
sbb
mov
lods
and
jno
mov
lods
inc
sub
stos
adc
ret
and
test
push
jns
or
cwtl
jg
outsl
icebp
xor
insb
repz
scas
daa
inc
addr16
push
sub
ret
push
cmp
mov
mov
rcrb
cmp
dec
icebp
clc
mov
clc
mov
shrb
out
or
inc
cmpsb
outsb
dec
push
adc
jo
mov
fadds
dec
jb
pop
lds
lret
jne
sbb
dec
arpl
mov
cwtl
dec
and
xchg
cltd
mov
mov
jmp
mov
ret
fwait
inc
rcrb
imul
mov
inc
adc
mov
stos
xchg
je
adc
mov
insl
je
and
incl
std
popa
cltd
mov
fmulp
in
jne
pusha
fcmovb
lahf
pop
inc
xchg
push
add
dec
lahf
test
js
cli
adc
jno
mov
xchg
push
sarb
jae
inc
mov
test
push
popa
clc
std
add
ja
mov
daa
push
aad
js
xor
xor
rcrl
pop
xlat
mov
inc
cli
test
mov
sbb
call
xor
test
sub
cld
fdivrs
pop
bound
dec
cmp
mov
push
or
test
sti
cmp
mov
adc
and
dec
and
mov
jns
push
xchg
loope
icebp
pop
int3
jle
xor
shlb
stos
or
imul
out
cs
ss
mov
push
jb
pop
mov
mov
cmp
aaa
inc
fsubrl
lock
pop
xlat
insl
sbb
leave
out
sub
jge
add
mov
xor
movsb
stos
ljmp
inc
aam
movsl
add
jge
sub
add
in
mov
cmp
out
jnp
pop
mov
xor
movsb
aaa
cmpsl
fsub
shll
xchg
pop
cmc
mov
mov
xor
xor
sbb
xor
jb
jecxz
xchg
dec
ds
es
jne
pusha
add
sub
or
inc
cmp
ljmp
test
jnp
test
lcall
cmpsb
test
loopne
out
jae
inc
pop
add
shlb
mov
imul
pop
out
add
sar
adc
sub
lods
mov
pop
pop
push
xor
insl
test
add
add
mov
rorl
movsb
aas
inc
mov
les
push
inc
addr16
fsubl
subb
mov
jecxz
fisttpl
sbb
add
sbbl
adc
xor
mov
js
and
fs
int3
cmpb
and
inc
imul
loop
mov
inc
lds
jbe
cld
mov
inc
dec
sbb
dec
arpl
mov
lods
sbb
xchg
add
fisttps
mov
add
xor
sub
in
sub
xor
outsb
test
push
cmp
cmp
addl
imul
sbb
es
xchg
pop
adc
dec
mov
imul
xor
mov
mov
enter
sub
hlt
iret
cmp
test
adc
adc
xor
nop
dec
push
cmc
cmp
adc
mov
cmp
pop
leave
sub
enter
nopl
sti
pop
sub
lahf
stos
sbb
int3
sbb
sub
aam
sub
mov
add
xor
xchg
dec
ficompl
mulb
mov
cmp
stc
mov
shrl
and
sbb
adc
test
cmp
icebp
xchg
mov
pop
jo
sbb
mov
sub
aaa
push
dec
in
inc
push
fistl
or
fcmovnu
sbb
xchg
jg
pop
dec
fmul
aaa
adc
hlt
dec
xchg
dec
movsb
repnz
scas
mov
push
push
loop
js
or
mov
test
mov
jb
sub
dec
pop
cltd
rcll
data16
insl
pop
pop
aad
sti
push
xchg
add
sub
cmp
and
and
sbb
int3
arpl
jne
sub
imul
jbe
fucomi
cld
push
ret
ljmp
out
fdiv
fdiv
xchg
subl
xor
jb
mov
sti
lahf
loop
push
sbb
and
adc
xlat
xchg
loopne
mov
xchg
jo
mov
pop
cs
add
push
xorb
sub
sarl
scas
ljmp
mov
cmp
repz
inc
or
mov
xchg
rcrl
jge
call
sbb
ljmp
jecxz
out
mov
or
sub
test
xchg
and
jae
daa
mov
cld
mov
sti
add
cli
dec
daa
outsb
jns
jge
sub
xor
loopne
dec
dec
pop
dec
adc
mov
subb
xlat
sub
push
push
jmp
js
mov
shrb
les
or
jecxz
clc
aaa
mov
cmp
faddl
out
pop
push
cmp
in
mov
dec
cmp
inc
jnp
iret
sbb
insb
pop
ret
cmp
pop
test
cmpsb
xlat
xchg
movsl
scas
sbb
filds
adc
mov
lret
push
or
push
popa
js
add
repnz
nop
divb
in
xchg
int3
mov
cmpsb
xchg
mov
ja
or
mov
sbbl
mov
loop
aaa
inc
jo
pop
test
push
dec
push
mov
mov
filds
mov
sahf
xor
scas
or
arpl
cmpsb
push
call
xor
mov
inc
jp
faddp
cmp
movsl
dec
mov
jmp
out
cs
adc
insl
mov
mov
add
sbb
data16
jle
fimull
nop
popf
and
adc
mov
call
add
mov
xchg
fprem
jle
lret
xor
xchg
insb
mov
clc
add
pop
insl
std
lods
mov
sbb
les
dec
mov
jns
xchg
sub
xor
xchg
lcall
out
xchg
in
pop
shll
push
mov
push
in
jne
push
sub
fincstp
pop
stos
mov
loopne
jmp
pop
pop
jne
pop
sub
ljmp
fdivrl
add
inc
test
fstps
insb
sub
mov
jmp
cltd
ss
out
sbb
dec
pop
lods
xchg
outsb
dec
and
insl
in
dec
fimull
mov
push
sub
xchg
add
cmp
int
fwait
sub
xor
lret
jl
push
mov
push
hlt
mov
sbb
fimull
dec
xchg
add
push
adc
xchg
sub
adc
outsl
mov
out
pop
pop
inc
fnstsw
adc
test
cmp
mov
into
lret
ljmp
xchg
jb
js
jo
nop
adc
inc
fstps
aad
cltd
pop
into
push
out
sub
xchg
cmp
bswap
mov
movsb
cmp
push
addl
cmp
scas
lret
fcompl
dec
pop
jl
out
pop
sbb
push
call
adc
inc
ljmp
rcrl
or
or
xor
ss
xor
out
push
and
xchg
fildll
out
or
sub
pop
add
dec
inc
push
insl
repnz
push
pop
push
loop
movsl
in
lahf
pop
adc
xchg
out
xor
fs
hlt
insb
jmp
ret
mov
daa
sbb
int
and
add
add
popa
rorl
mov
pop
rol
pop
pushf
aam
je
mov
dec
stos
mov
push
repz
xchg
lcall
mov
ficompl
push
stos
cmpsb
addb
cli
out
mov
push
xchg
push
sub
mov
jge
gs
jnp
into
repnz
jg
repz
sub
mov
call
or
movsl
out
jle
test
outsl
sbb
fldt
xor
xor
test
push
mov
and
sbb
adc
and
push
xor
cltd
icebp
lea
into
in
mov
or
aaa
sbb
es
fcoms
je
daa
sbb
push
scas
out
sub
fld1
jl
xor
cmp
cmp
inc
cmp
fcomp
into
arpl
push
sub
pop
push
fisubrs
test
inc
mov
icebp
cmp
push
insb
mov
sub
inc
ucomiss
mov
xchg
add
or
out
xchg
movsl
mov
hlt
paddb
lock
test
sbb
add
out
add
cmc
pop
adc
bnd
add
and
xor
inc
movsl
data16
popa
in
jmp
mov
aam
cmp
mull
jg
ret
fistps
inc
adc
mov
shll
push
adc
sub
add
cmp
lahf
mov
out
sti
jle
and
mov
xchg
dec
xchg
lods
lahf
pop
add
and
data16
inc
adc
mov
mov
leave
xchg
lahf
jle
aad
cmp
push
dec
xor
push
push
dec
cs
pusha
jnp
fs
xchg
add
arpl
in
ret
push
and
sub
or
mov
cmc
aas
ret
stos
scas
push
jo
dec
dec
add
pop
out
sbb
pop
pop
push
ss
sbb
cmp
xchg
mov
jne
jge
out
outsb
test
push
sti
addr16
jge
mov
add
pushf
add
cmp
lret
outsl
aad
in
cmp
or
or
add
scas
mov
das
cwtl
cmpsl
test
fadds
or
jmp
out
out
js
ret
sbb
push
and
jle
out
mov
sbbl
imull
push
fistpll
or
sub
jmp
adc
jp
shll
lret
out
jmp
js
sbb
ljmp
jns
popa
int
in
fimuls
pushf
jl
pushf
jno
dec
add
mov
scas
testb
jns
in
cmpsb
or
mov
out
push
push
sbb
jmp
pop
or
sbb
scas
push
bound
and
inc
out
pop
sbb
push
dec
xchg
xchg
fwait
add
fnstenv
jno
call
adcb
push
cwtl
push
fidivs
sub
loopne
sbb
mov
loopne
xor
in
pushf
enter
and
in
jge
stos
dec
and
mov
lea
lock
lcall
dec
xchg
cli
jmp
and
mov
sbb
movsl
mov
cmp
xchg
pop
bound
sbb
les
inc
in
push
cltd
pop
adc
imul
notb
pop
call
fsubp
scas
xor
xchg
orl
dec
cmp
add
cltd
sub
shrb
sti
pop
xchg
lea
xchg
sub
cli
jnp
xor
test
push
sub
mov
or
scas
les
dec
jle
mov
cli
out
subb
sub
jmp
outsl
mov
jno
inc
or
cmc
cld
daa
jns
add
jp
jp
je
popa
dec
test
jmp
or
dec
or
aaa
and
ficoml
xor
in
add
pop
sahf
push
insl
bound
cmp
or
out
scas
push
aaa
dec
fwait
es
rorl
clc
iret
push
add
mov
xlat
mov
inc
adc
in
cmp
mov
insb
call
and
xchg
das
or
push
sub
cmc
in
xor
lahf
xlat
ss
ret
pop
or
test
mov
mov
imul
jecxz
inc
iret
in
iret
fsubrp
test
pop
mov
jno
sub
je
push
dec
adcl
arpl
adc
mov
int3
pop
push
cmpsb
inc
std
test
lahf
insl
mov
jp
incb
addl
sub
adc
push
cmc
cwtl
imul
test
xor
xchg
adc
rorb
sti
dec
shlb
push
xchg
insl
mov
mov
add
out
xor
cwtl
inc
push
mov
mov
or
mov
adc
test
mov
inc
fisttpl
inc
lds
jp
sub
nop
add
iret
pop
pop
push
fdivrl
int
adc
jmp
pushf
mov
xchg
and
jae
dec
adc
stos
push
fcoml
in
sub
imul
inc
mov
xorps
lds
data16
cli
aam
push
cmp
fadd
int
imul
and
mov
dec
clc
das
int3
loopne
jns
jno
add
push
add
push
cmp
jo
ret
fs
sub
aaa
sub
outsb
cmp
or
pop
aaa
movsb
movsb
jp
xor
dec
adc
pop
dec
test
xor
inc
mov
mov
arpl
adc
outsl
inc
jno
dec
adc
int3
enter
or
inc
jmp
and
call
mov
ret
or
sub
int3
push
repz
mov
cmp
mov
addr16
jae
pop
and
inc
stos
cmp
clc
adc
and
addr16
adc
insb
test
xor
sbbb
inc
sarl
pop
lahf
pop
xchg
xchg
data16
sub
cmp
sub
push
cmp
das
adc
mov
dec
mov
aam
mov
mov
dec
and
xchg
lahf
pop
jns
hlt
out
inc
out
xchg
mov
inc
and
fcoms
sarb
jmp
sub
jb
adc
sub
sahf
mov
mov
mov
adc
and
xlat
lret
push
jl
std
jns
aad
xchg
mov
push
into
lds
loop
push
out
xlat
push
pop
out
jno
loop
lahf
push
pop
sbb
sbb
jle
into
mov
add
mov
addb
xor
cli
sub
add
ss
push
jmp
cmp
inc
imull
xor
push
mov
sbb
js
lret
mov
push
xchg
jp
mov
and
icebp
pop
sub
lahf
mov
sbb
test
xchg
bound
add
add
xor
in
sub
push
xchg
jl
pop
sbb
lds
movsl
jecxz
or
push
test
mov
push
icebp
xchg
push
movsb
arpl
xor
jp
mov
push
push
xor
cmpsl
lret
mov
inc
sbb
add
fcoms
add
insl
fld
test
xchg
mov
mov
fsts
js
aam
ds
inc
xlat
push
or
add
pop
dec
sbbl
lods
mov
leave
popa
adc
push
lahf
mov
mov
jle
add
aas
shlb
adc
lcall
sub
or
pushf
add
jne
iret
jnp
rorl
dec
gs
fcomps
fdivl
movsl
enter
aaa
pop
xor
out
xchg
cmpsl
daa
int
mov
push
and
mov
adc
jle
sub
sbb
adc
add
push
mov
nop
mov
sub
and
js
aam
pop
jmp
in
add
lahf
test
clc
sub
add
data16
jne
dec
jge
mov
in
out
dec
add
js
in
xor
pop
lds
mov
jmp
mov
push
mov
cmp
dec
dec
jns
sub
loop
clc
shlb
cltd
bound
imul
mov
jo
gs
adc
mov
shr
fwait
push
enter
jno
sahf
cmp
adc
cs
pop
test
fistl
cwtl
pushf
dec
mov
shlb
mov
test
pop
pop
test
outsb
xor
xchg
inc
mov
pop
and
mov
xlat
sbb
out
sub
idivl
mov
and
mov
int3
test
xchg
xor
fistps
mov
ret
xchg
push
and
or
xchg
imul
add
jmp
mov
ss
out
and
sbb
jg
and
mov
in
shrb
add
sbb
int
in
movsl
out
and
mov
lock
mov
pop
in
shl
mov
dec
cli
dec
rol
jp
outsb
adc
cmp
fdivs
pop
fidivl
or
push
loopne
sub
adc
call
xor
out
cltd
pushf
in
nop
call
xchg
enter
add
mulb
push
mov
pop
sbb
adc
fistpl
and
div
in
sub
sarl
subb
pop
fcoms
add
test
pop
mov
cmp
dec
inc
fmull
imulb
lock
pop
js
je
clc
or
lret
lret
fisttpll
lret
stos
popa
mov
dec
mov
lds
add
or
ljmp
and
jne
iret
add
jle
xor
xchg
push
out
push
sti
pop
mov
pop
jge
xchg
jl
ret
mov
mov
inc
sbb
add
mov
jl
inc
inc
cmp
mov
push
push
lret
fldt
and
and
mov
or
mov
lahf
adc
dec
lea
jne
data16
lods
clc
mov
sbb
dec
pop
pop
into
out
jno
push
scas
push
cmp
or
mov
stos
hlt
movl
das
mov
mov
push
outsl
dec
mov
lret
pop
jb
notl
int3
and
add
xchg
xor
push
xchg
push
adcl
dec
push
and
movsl
adc
mov
out
enter
pop
pop
mov
repnz
and
inc
or
cmp
mov
mov
mov
arpl
xchg
outsb
std
push
je
add
rolb
xchg
popf
adc
rolb
xor
push
les
push
mov
mov
sub
xchg
pop
cltd
jne
xchg
inc
aas
mov
fdivr
ror
fs
adc
add
sub
adc
dec
push
xor
js
add
outsl
push
dec
add
imul
call
mov
dec
or
inc
fsubrp
jp
cmp
sbb
jecxz
sahf
sub
jbe
pop
dec
scas
int3
xchg
cmpsl
pushf
fstl
push
jl
jo
pushf
cmpsb
sbb
shrb
adc
lret
mov
arpl
lods
fscale
mov
ss
jbe
lods
clc
xchg
adcb
cmp
pop
int
outsl
stos
movsb
jmp
sbb
jnp
or
es
push
adc
xchg
xor
ret
ficoms
aad
out
in
imul
nop
jbe
addb
xor
leave
js
gs
sub
js
mov
out
sti
sub
aaa
stc
sub
xorl
pop
push
jecxz
mov
add
and
push
mov
sbb
movsl
cltd
xor
jo
mov
out
test
push
sahf
cli
xchg
stos
test
jmp
iret
or
jg
das
stc
cs
cmpsb
xchg
sbb
sub
jmp
adc
lcall
mov
dec
cmc
dec
dec
inc
out
rcrl
jp
out
les
mov
adc
out
mov
flds
dec
in
push
xchg
fs
jno
adc
adc
pop
and
push
repz
dec
faddl
push
in
icebp
cli
ds
int3
test
inc
pop
shll
mov
mov
gs
jecxz
push
cmpsl
mov
cmp
fnsave
push
ljmp
ja
hlt
or
xchg
into
mov
mov
mov
pop
mov
mov
jne
mov
ss
ds
mov
shl
gs
lds
mov
inc
inc
inc
pop
shlb
hlt
loop
xchg
mov
xor
inc
mov
icebp
adc
mov
dec
push
adc
add
mov
mov
dec
outsl
xor
and
dec
mov
or
loope
inc
pop
push
outsl
lods
fmulp
dec
add
jg
lret
fdivr
inc
fsubp
mov
ds
sub
outsl
jns
fdivrs
or
test
inc
addr16
int
cli
aas
cmpl
enter
cmp
lahf
imul
xchg
test
fstpl
dec
xchg
mov
repnz
sbb
addb
pop
shlb
neg
gs
shrl
add
cld
out
xor
jno
in
leave
test
cli
fmulp
je
testl
push
xchg
mov
loop
mov
cld
mov
fidivrl
or
xor
adc
pop
scas
jmp
ds
testb
sub
mov
test
es
mov
xchg
adc
inc
rcrl
adc
aaa
pop
pop
inc
aaa
adc
cmpsb
in
sub
mov
cltd
xchg
es
lcall
push
add
and
addr16
adc
fwait
xor
in
out
add
data16
add
inc
sbb
gs
loope
and
inc
xchg
jbe
into
sbb
mov
mov
xchg
out
push
mov
inc
mov
dec
or
add
fwait
sub
pop
stc
or
repnz
xchg
cmp
lods
movsl
push
mov
imull
icebp
mov
add
pushf
mov
je
sbb
fiadds
cmp
ret
sbb
or
adc
addr16
cmp
pop
outsl
pop
sbb
dec
sbbl
scas
sahf
sub
xor
xchg
push
inc
sub
fcomip
cld
cmp
sahf
in
jle
or
outsl
incl
leave
ljmp
and
gs
inc
jnp
lock
leave
data16
jp
xchg
mov
pop
subl
sahf
or
mov
das
pop
inc
or
out
mov
gs
add
imul
jo
out
in
aad
mov
jbe
sub
fists
pop
push
dec
adc
sub
ret
jle
rolb
push
inc
jg
sub
sub
xchg
flds
xor
push
imul
int
sub
loope
add
jl
imul
inc
sub
stos
out
dec
push
jle
fcmovnu
into
mov
sbb
cs
stos
jae
cmp
rcrb
mov
jmp
push
mov
das
inc
and
dec
push
push
mov
dec
jp
cmp
out
jne
sahf
and
mov
ret
loopne
jg
inc
jne
sti
loopne
xorl
fdivs
outsl
or
movsl
mov
pushf
mov
sti
push
mov
repnz
popf
ss
jno
mov
sbb
mov
and
mov
out
mov
out
out
sbb
addr16
jo
adc
es
insl
sahf
xor
inc
clc
dec
sbb
icebp
jae
inc
test
or
or
decb
adc
xor
xchg
test
loop
scas
push
pop
fstpt
sbb
aad
sbb
aad
jns
push
loop
cwtl
lea
scas
sub
mov
mov
aam
lret
movsl
sbb
shll
sub
push
jno
dec
xchg
fmull
mov
push
jno
jle
xor
ja
mulb
cmpsb
mov
sbb
test
loope
inc
loopne
mov
pop
rcrb
fcoms
ret
mov
nop
adc
lods
jge
bound
push
mov
adc
cltd
xchg
mov
iret
aad
add
fidivrl
cmc
and
inc
notl
fisubrs
data16
shr
inc
js
cmp
dec
pop
sub
hlt
lret
out
arpl
fistps
in
add
insl
mov
in
mov
ret
push
movsb
pop
and
and
insl
xchg
sbb
jb
scas
popa
cwtl
lret
shll
xchg
ds
addl
shr
ljmp
mov
fdiv
ret
std
adc
mov
cmp
nop
in
inc
push
iret
fstps
repnz
outsb
loop
xchg
ror
pop
dec
pop
mov
adc
mov
in
jno
sub
daa
sub
imull
das
lods
jg
in
or
dec
fisubs
ret
adc
sti
mov
and
or
pop
fst
mov
jno
imul
out
popa
daa
mov
lret
mov
jg
imul
out
adc
sarb
movsb
jmp
or
sar
or
cld
adc
ja
xchg
test
outsb
imulb
xchg
aas
pop
jecxz
bound
xor
test
lods
add
scas
cmp
jno
ljmp
mov
mov
fistps
mov
adc
xchg
in
shlb
hlt
data16
das
jne
ljmp
xchg
push
jge
fdivr
clc
dec
sbb
mov
ret
enter
inc
inc
outsl
sahf
ljmp
fxch
or
pop
cmpsl
and
nop
cld
icebp
mov
jo
jb
mov
mov
mov
adc
incb
jns
mov
push
lretw
mov
cmp
xor
es
jns
or
cmp
sar
xor
divl
fstpl
ret
popa
scas
jne
jge
inc
add
xchg
cmp
shrb
js
push
cmp
ret
in
testl
mov
ret
xchg
je
int
xor
mov
orl
ja
sub
and
adc
inc
cmp
dec
sub
outsl
call
popf
xchg
mov
mov
jg
hlt
xor
das
insl
sbb
fwait
jp
push
es
insb
mov
inc
les
push
test
jb
lea
inc
cwtl
mov
cmp
fwait
ret
shll
in
cmp
imul
dec
test
movsl
lods
sub
jl
das
mov
rorb
addr16
ss
test
das
cltd
cwtl
xor
sub
test
aaa
adc
push
jo
in
xor
les
or
das
loop
daa
mov
mov
fstl
adc
cmp
ja
adc
popa
pop
mul
popf
fisubrs
shlb
std
inc
inc
mov
jbe
test
cli
pop
jmp
fistl
aam
int3
ljmp
mov
aam
dec
inc
lahf
ja
cmc
out
sub
xor
mov
dec
xlat
stc
mov
jne
pop
out
xor
jg
subl
dec
jle
leave
sub
mov
shr
and
popf
lcall
xor
mov
pop
ljmp
xor
daa
popa
xchg
add
les
mov
pop
aam
pop
push
out
inc
out
in
fwait
add
dec
les
xchg
mov
inc
pop
cmp
xchg
mov
dec
add
inc
cmp
inc
xorl
test
repz
jo
daa
in
enter
and
dec
dec
loop
jo
push
ficoms
mov
shrl
add
jge
pushf
call
mov
fiaddl
mov
xor
pop
xchg
jle
dec
insb
insb
inc
mov
cmp
mov
fistpl
adc
in
cld
cmp
add
xchg
stc
xor
stos
add
scas
xchg
mov
xor
test
xchg
stos
pop
push
ja
mov
fs
push
filds
xchg
push
lods
lock
jae
pushl
lea
and
inc
inc
cmpsb
xor
or
idivb
fstps
sbb
sub
dec
or
mov
or
pop
mov
loopne
fists
outsb
lods
lock
out
xor
adc
mov
stos
add
push
fsts
xchg
jle
call
adc
sbb
sbb
adc
xor
sahf
mov
inc
out
cld
cmp
inc
sub
cmpsb
int3
fldt
or
lcall
adc
and
jno
xor
jbe
mov
push
xchg
ss
push
lds
in
call
sub
cmp
mull
mov
and
test
loope
mov
or
stos
jge
mov
jp
xor
inc
shrl
addr16
or
adcb
fisubl
imul
xchg
or
scas
mov
lret
bound
mov
loop
mov
insb
into
adcl
adc
jl
int3
lds
mov
cli
xor
sub
mov
jle
into
sarl
sbb
xchg
fucom
les
push
ss
push
or
neg
loopne
fiadds
into
add
icebp
push
adc
jge
inc
rcl
jae
inc
imul
int3
mov
mov
popa
xchg
dec
into
dec
xlat
dec
sub
and
adc
sbb
mov
in
dec
push
xorb
jno
pop
mov
ror
mov
jbe
int
add
mov
out
add
jl
push
insl
push
dec
loopne
ljmp
loopne
bnd
lds
or
mov
jle
cmp
dec
fsubrl
or
inc
orl
call
mov
sub
sbb
addr16
add
fsubr
inc
sbb
cmp
lock
imul
ficompl
mov
mov
cmp
test
int
mov
nop
out
inc
jb
sahf
sbb
cld
or
ss
lods
popa
movsb
xchg
jle
xor
shl
ljmp
sub
adc
out
push
or
sbb
xchg
notl
pop
jle
mov
outsb
cltd
cmpl
pop
push
add
xchg
or
fisubrl
lock
loop
je
push
mov
cltd
add
inc
xor
adc
fadd
mov
mov
lock
mov
cld
pop
sbb
xchg
mov
test
movsl
fdivrl
xchg
fnsave
arpl
jp
addb
lock
xor
adc
push
adc
push
push
int
push
mov
adc
mov
xor
mov
jne
pop
out
or
push
repz
push
fldcw
dec
mov
sub
jecxz
lahf
mov
pop
push
xchg
int3
xlat
test
aad
jge
test
inc
aas
cmpb
lds
xor
xchg
add
xchg
or
mov
scas
push
mulb
repz
xchg
pushf
into
adc
mov
mov
push
out
dec
mov
std
fsubl
mov
cmp
sti
stc
xor
icebp
movsl
repz
aad
outsl
jge
xor
aas
inc
add
xor
pmullw
imul
into
or
outsl
mov
sbb
jl
jecxz
cmp
mov
mov
mov
lahf
outsl
fxtract
call
jo
je
xchg
loop
in
or
popa
into
inc
push
nop
lea
addb
xchg
push
test
add
lods
test
lahf
mov
cmpsb
jle
mov
cmc
in
nop
imul
jae
push
add
inc
xchg
jb
fisttps
push
xor
mov
mov
or
xor
enter
je
inc
rcrb
lret
mov
cld
jp
mov
das
outsl
pop
addl
in
sub
in
inc
inc
dec
inc
dec
imul
jecxz
insl
in
pop
mov
paddw
sbb
cmp
outsb
cwtl
mov
sbb
loopne
push
xor
mov
mov
ficoml
dec
add
push
icebp
adc
les
dec
xchg
fdivs
jmp
movsb
jno
jmp
enter
scas
pop
mov
inc
mov
mov
mov
mov
push
xor
pop
push
ficompl
movsb
bound
jecxz
push
bound
pop
mov
pushf
sbb
out
or
pop
add
outsb
ja
ja
xor
mov
xchg
adc
or
rolb
push
dec
or
jl
lock
int3
ljmp
adc
sub
adcl
pop
mov
sahf
ret
and
cmpsb
mov
in
push
aam
mov
rcr
lock
repz
mov
jg
lock
and
mov
push
out
mul
stos
leave
cmp
push
add
out
dec
lahf
adc
xchg
pop
lock
lea
lds
test
setb
sub
mov
push
mov
lcall
roll
inc
dec
add
pushf
fnsave
mov
popf
int3
insb
mov
cld
add
adc
int
push
mov
cmpl
push
xorl
sbb
dec
xchg
adc
mov
fmuls
mov
and
lods
mov
xor
sub
add
stc
fcmovnb
icebp
sub
cmp
ss
sub
iret
lret
daa
ljmp
xchg
or
insl
xchg
inc
and
lock
xchg
pop
pushf
jp
pop
in
cmpsl
bound
push
sti
jle
nop
mov
xchg
jl
aam
pop
inc
fcomps
xchg
sbb
addl
push
push
adc
stos
lahf
cli
pop
add
lret
jb
ljmp
lods
out
sbb
add
and
sbb
nop
xchg
and
lret
sahf
gs
pop
xchg
mov
xor
pop
mov
jmp
mov
pop
test
negb
inc
cltd
or
movsb
jb
repz
push
and
mov
pushf
mov
lock
or
gs
bound
call
ljmp
and
dec
imul
xlat
stc
stos
cmc
ss
imul
leave
and
mov
arpl
cmc
test
popa
pop
andb
orl
rclb
sbb
jns
in
arpl
adc
subl
shrl
addr16
mov
test
mov
popf
push
inc
or
cmp
mov
mov
and
pop
add
sub
inc
out
cld
ficompl
sub
insb
xchg
leave
in
jl
sti
mov
inc
popa
ds
fmul
add
les
or
dec
mov
adc
adc
push
mov
sub
inc
lcall
rorb
addl
pushf
mov
clc
out
in
xor
test
rorl
fmuls
mov
dec
icebp
jno
fdivl
xor
daa
xchg
mov
push
adc
pop
lcall
jle
mov
test
int
mov
insb
xchg
jne
lea
hlt
aad
popf
push
jg
or
pop
adc
lods
daa
movsb
mov
add
aas
xchg
or
dec
addr16
push
jecxz
pop
mov
outsb
jnp
out
inc
pop
lea
xchg
or
lods
arpl
dec
dec
gs
das
sbb
sbb
call
lds
dec
ret
inc
mov
add
leave
les
jle
dec
in
ja
rcr
jne
lock
mov
insl
in
frstor
lock
outsl
dec
loopne
push
jle
inc
pushf
mov
jecxz
rolb
or
in
bound
cmp
mov
stc
or
pop
pop
fisubrl
loopne
mov
arpl
test
cmpb
dec
jne
std
cmpb
cwtl
pop
fistpl
jge
movsb
in
insl
sub
pop
sarl
xchg
and
inc
and
outsl
lods
mov
lods
pop
jo
outsl
xchg
fsubrl
out
mov
sbb
mov
xchg
icebp
rcr
stos
mov
sub
call
jno
dec
ss
andl
out
mov
mov
push
jnp
mov
xchg
add
dec
mov
cmp
movsl
nop
mov
lahf
sti
pop
xor
or
mov
xor
lods
outsl
sbb
test
shl
testl
dec
dec
imul
rcrl
aad
push
test
mov
pop
into
sub
mov
mov
or
cs
cld
in
fists
cmp
in
ss
inc
lea
out
push
adc
or
ss
mov
dec
ja
fsts
xchg
in
jl
sub
sarb
mov
mov
aad
add
mov
imul
shr
movsl
cmpsl
mov
movsl
insl
xchg
leave
es
xchg
ds
outsb
andl
pushf
gs
xlat
stos
adc
rcr
jbe
test
jle
cld
shlb
sbb
das
xor
lahf
push
arpl
and
or
mov
xchg
decb
fs
pop
push
cli
stc
mov
test
iret
or
fdivr
rorl
imul
jecxz
dec
cmp
fsts
repz
into
mov
sbb
and
lods
mov
fidivrl
push
in
adc
fwait
movl
mov
and
dec
out
in
mov
adc
lret
lods
dec
pop
adc
repz
mov
sub
dec
pop
in
iret
jp
bound
cwtl
mov
lret
inc
xor
nop
loope
push
dec
dec
add
loopne
inc
cmp
fildll
jge
mov
add
xlat
add
in
lret
shl
lock
jmp
pop
sbb
mov
mov
cmpsb
icebp
mov
pop
xchg
ds
cmp
xor
or
sbb
push
add
xor
stos
pop
push
movsb
sbb
jo
out
cmp
pop
cmc
cmp
movsb
and
fld
inc
shr
imul
jns
and
mov
imull
fidivrl
pop
frstor
mov
and
and
and
in
incb
sar
in
mov
mov
orb
inc
mov
sbb
dec
jmp
mov
mov
lret
adc
fcompl
dec
push
repz
lock
mov
xchg
mov
add
sahf
inc
mov
test
mov
mov
shrb
xchg
clc
cs
shll
test
mov
das
rcrb
out
in
fnstcw
xor
jns
xor
das
cmpb
cld
inc
xor
arpl
xchg
cmp
or
mov
mov
hlt
add
imul
stc
dec
iret
stos
push
imul
or
hlt
push
cmp
mov
mov
imul
adc
pushf
pop
inc
mov
pop
fwait
add
mov
fcoml
push
mov
ja
in
jp
pushf
cmpb
jb
lret
mov
mov
addr16
sarb
cmpsl
mov
popl
xchg
dec
mov
ret
or
bnd
es
lret
fstl
sbb
xor
stos
in
jne
push
test
imul
inc
sbb
jmp
movsb
pop
xchg
movsl
mov
les
xchg
es
push
sub
daa
xchg
mov
mov
stos
int
aad
pop
lea
lods
push
jns
movb
jmp
sub
orl
mov
pop
sbb
adc
jb
jo
test
cmc
adc
fisubrl
popa
sub
jo
jmp
add
shlb
cmp
lcall
ret
mov
imul
imul
test
les
into
out
in
pop
cmc
dec
push
or
dec
mov
out
push
pmaddwd
and
cltd
xchg
cmp
andl
std
insb
pop
mov
pop
mov
cmp
sub
ret
lahf
adc
in
jmp
dec
test
mov
movsl
push
test
sbb
sub
std
lret
adc
sub
pop
sub
imul
mov
sbb
cli
mov
mov
and
jl
mov
push
clc
mov
dec
xor
ja
rorb
cltd
scas
or
xor
mov
mov
out
lods
pop
nop
push
arpl
rorb
lods
in
incb
cmp
out
shll
test
test
add
inc
clc
cmpsb
push
dec
dec
js
sti
mov
cmp
sar
push
jle
jle
int
out
pusha
cmp
mov
dec
jmp
jbe
sbb
loop
loope
das
call
and
lds
xchg
xchg
movsl
jnp
ficomps
sahf
lds
out
shlb
dec
pop
mov
adc
push
xchg
lret
add
test
mov
loope
lret
cli
cltd
push
xorb
pop
je
jmpw
mov
insl
rcrb
lret
sbb
xchg
lret
dec
cmp
pop
iret
jecxz
adc
movsl
cmp
push
lds
cmc
mov
or
shll
push
and
loopne
or
jne
mov
mov
insl
add
mov
fldcw
dec
out
loopne
test
push
adc
adc
inc
fisubl
push
jno
imul
dec
stos
jae
mov
add
dec
inc
fwait
loopne
mov
add
test
adc
xchg
les
push
push
xlat
lock
outsb
lcall
sbb
mov
roll
add
mov
pop
lods
sahf
push
add
push
out
dec
jge
jg
push
loope
cmp
ret
mov
mov
sub
in
push
mov
push
rolb
cmpsb
pusha
shlb
cltd
in
ret
mov
out
pusha
test
stos
xor
or
aas
inc
jo
mov
mov
jle
jmp
and
xor
scas
mov
outsl
aad
cmp
fs
hlt
loope
jno
sbb
sti
stos
cmp
stos
mov
mov
aas
aas
ja
ljmp
dec
test
cmp
dec
pop
hlt
mov
in
mov
or
dec
xchg
xchg
push
add
xchg
outsb
movsl
in
jp
pushf
sbb
mov
mov
addr16
or
xchg
xor
mov
and
dec
daa
jl
push
sbb
int
mov
mov
ja
ror
add
cwtl
dec
notb
shlb
shl
or
push
cmpsl
push
cmc
cld
mov
mov
jmp
clc
push
mull
cmpsb
aam
lods
stos
xchg
and
and
lret
dec
inc
orl
mov
and
cld
sub
xchg
sbb
xor
fisubrs
push
jne
xchg
pop
test
dec
shr
ja
mov
movsl
and
cmpsl
push
sarl
int
js
das
sbb
add
push
jp
inc
push
imulb
testb
sbb
adcl
sbb
jno
mov
icebp
adc
jge
mov
cmp
cltd
sub
push
adc
fdiv
adc
mov
inc
sub
or
or
dec
xor
or
jnp
aaa
pop
xchg
add
lods
outsb
adc
mov
loope
sub
sbb
xor
ljmp
or
pop
inc
sbb
or
mov
sub
dec
ljmp
add
and
out
fidivs
sbb
mov
or
mov
mov
mov
sub
cmp
fsubrl
daa
aad
xchg
mov
pop
jl
and
dec
mov
aaa
cmp
pop
cmpsl
adc
mov
mov
sub
xchg
and
mov
xor
push
stos
insl
sub
add
xor
rol
mov
xor
adc
dec
popw
int
lret
enter
xchg
and
cwtl
mov
adc
mov
aad
push
in
sbb
pop
lret
and
je
push
mov
ss
or
loop
jb
sbb
sub
mov
test
stos
jle
ficompl
std
adc
xor
lcall
push
cmp
fwait
push
jne
lock
dec
int3
not
xchg
pop
adc
sbb
cmp
es
out
jno
pop
into
mov
mov
push
jmp
jo
push
lret
aad
inc
cmc
inc
icebp
mov
adcl
inc
sub
loope
or
xor
retw
out
ljmp
and
jmp
mov
jb
jmp
mov
jbe
sub
sbb
dec
sarb
insb
push
jne
push
adc
test
lret
push
std
data16
pop
movsl
fnstenv
mov
aaa
xchg
pushl
iret
cld
or
mov
repz
and
inc
fistps
lret
ja
es
add
mov
fistl
push
inc
jns
xchg
fcompl
decl
mov
mov
push
cmp
shrb
andl
das
ljmp
xchg
pop
jg
pop
and
cmc
xchg
stos
xchg
mov
jo
mov
or
out
daa
insl
insb
push
jne
stc
jle
dec
xchg
inc
cmpsl
mov
outsb
repnz
das
inc
mov
fcmove
int3
push
enter
sub
adc
sarb
lods
add
add
jge
cmpsb
imul
mov
outsb
into
inc
cmp
jl,pn
fidivrs
mov
push
cmp
inc
adc
or
mov
stos
push
pushf
outsb
lcall
xor
cmpsb
daa
sub
test
cmp
insl
stos
repnz
pop
add
inc
aas
mov
pop
jne
in
lock
outsl
es
dec
in
sti
fildl
push
add
mov
cmpsb
movsb
test
sbb
adc
mov
clc
add
movsl
out
outsl
sar
cmp
pushf
dec
movsb
dec
adc
fucom
sbb
xchg
xchg
popa
movsl
insl
push
out
mov
cmpsb
into
shlb
sub
test
test
xchg
je
jp
insl
decl
mov
insl
mov
or
test
je
scas
inc
add
xor
shr
or
fs
cmc
jle
sub
mov
clc
mov
sti
mov
cmp
movl
leave
jb
fiadds
sub
sbb
fsubrs
outsl
in
xor
dec
andl
dec
and
adc
shl
lock
int
aaa
or
and
push
dec
adc
cmp
push
sub
push
xchg
or
push
sub
insl
mov
sub
in
push
mov
jmp
pop
pop
ljmp
push
mov
inc
mov
mov
xlat
cld
jp
cltd
sbb
fildl
pop
xchg
adcl
mov
pop
sub
xor
shll
sbb
and
bound
xor
mov
ret
xlat
dec
push
iret
cli
sarb
pop
sti
mov
add
push
addr16
pop
sbb
xchg
fsubrs
daa
dec
insb
je
out
inc
jno
xchg
sub
xchg
into
sub
aas
mov
mov
inc
jno
mov
out
cmp
lods
add
das
xchg
fisttpl
or
or
inc
pop
dec
cmp
in
push
fisubs
jne
je
icebp
movsl
scas
push
jae
jns
mov
test
inc
orb
cmp
rclb
ja
dec
sub
nop
xlat
daa
add
or
mov
pop
scas
icebp
sbb
loope
sbb
repz
xor
icebp
into
popa
mov
cmp
fdivs
adc
fstl
shll
std
dec
sub
out
push
pop
xchg
adc
lcall
adc
imul
add
adc
sbb
sahf
ljmpw
into
xor
int3
xor
sub
scas
fnstenv
gs
cltd
inc
icebp
fisubl
add
arpl
imul
xchg
enter
and
stc
xor
sarb
js
xor
loope
ljmp
mov
jg
pop
pop
shlb
gs
xlat
push
int3
arpl
jnp
fadds
inc
fcoms
lea
dec
arpl
or
jmp
mulb
ret
jmp
xchg
add
imulb
cmp
mov
mov
femms
stc
xchg
aad
ja
pushl
icebp
in
inc
push
ret
jne
adc
lds
leave
inc
pusha
cmp
dec
test
mov
test
add
add
mov
adc
jbe
stc
push
jge
aaa
mov
push
push
sub
xchg
and
xchg
mov
lcall
cmp
cld
pop
cs
outsb
mov
push
clc
mov
std
jge
jl
lock
mov
out
cmpl
jo
sti
sub
adc
xchg
pop
cmpsl
scas
in
adc
mov
xchg
mov
mov
cmpsb
es
data16
mov
jmp
divb
jb
push
dec
addr16
sub
insb
lods
std
rcl
pop
clc
rorb
pusha
mov
add
sbb
sbb
pop
fistpl
adc
xlat
mov
sbb
mov
mov
and
jo
fdivl
cmc
sub
imul
mov
imul
mov
aam
std
movsl
fimuls
jae
push
test
xlat
ljmp
xchg
fadd
dec
cs
push
hlt
dec
stc
les
sbb
daa
sbb
sub
mov
dec
mulb
jbe
and
aam
push
ret
data16
subb
inc
mov
aaa
ljmp
out
repnz
or
mov
push
cmpsb
jge
or
mov
cld
daa
pushf
negl
push
out
cs
fnstenv
dec
std
pushf
dec
int
dec
loop
test
jl
gs
in
decb
mov
das
cmp
adcb
lret
addr16
or
mov
test
out
push
loop
std
daa
push
aaa
jge
cld
imul
subb
jo
out
scas
mov
repz
push
cmc
je
pop
int3
jae
cltd
iret
xor
inc
lods
dec
jnp
fisttpl
mov
outsl
add
scas
out
daa
stos
cmp
pop
jg
scas
dec
dec
lahf
test
in
and
les
fidivrl
mov
divl
out
mov
push
pop
push
dec
inc
cmp
and
clc
ljmp
add
enter
clc
and
mov
pop
and
outsb
mov
leave
std
inc
cld
mov
jp
dec
mov
sti
push
mov
jp
cmp
push
jns
xchg
cmp
pop
push
fbld
jmp
loope
dec
ret
ljmp
and
jo
cwtl
inc
dec
in
loop
inc
sbb
fiaddl
pop
shrl
subl
push
cmc
aad
fidivrs
xchg
jns
mov
or
fstps
mov
in
out
xchg
data16
leave
dec
jnp
jae
fdivl
mov
inc
xchg
fsts
imul
mov
sete
sbb
jge
dec
movsl
push
in
adc
inc
lock
add
pop
stos
mov
fisubl
mov
mov
dec
cmp
inc
lret
jecxz
fcmovbe
mov
in
add
xchg
mov
adcl
stc
lods
vcvtsi2ssl
jne
cltd
roll
mov
orb
mov
mov
xor
pushf
outsl
dec
lock
lret
test
xor
xor
jle
fldt
jg
inc
movl
arpl
xchg
xlat
sahf
xchg
pop
xor
sbb
test
or
clc
pop
adc
loopne
orb
pop
add
bound
adc
loope
cmc
lds
mov
insb
sub
and
lahf
sahf
sbb
push
push
test
mov
sbb
subb
pop
loop
sub
scas
inc
enter
ja
rcr
add
out
pop
fimull
in
adc
inc
insl
in
scas
mov
push
xchg
icebp
pop
jo
repz
lods
imulb
aam
add
pop
shll
aam
repz
fildll
insb
jns
cmc
xor
adc
jns
cmp
andl
sub
fidivl
jmp
sbb
adc
sub
xor
pushf
stos
movsl
mov
and
fimull
mov
in
push
jo
push
mov
or
out
rcr
out
aaa
movsl
cmp
loop
push
push
outsl
jle
clc
into
jnp
insb
or
xchg
fwait
call
sub
outsl
mov
xchg
out
data16
mov
xchg
lods
call
cmc
ss
push
and
xor
int3
mov
jge
fdivrs
sub
sub
cmpsb
pop
jb
imul
adc
daa
int
cmp
mov
jo
pop
loopne
xlat
pop
sbb
xchg
jns
aam
sub
mov
ds
lea
stos
mov
pop
lods
inc
push
call
jne
loopne
add
adc
pop
nop
sub
push
cmp
inc
xlat
fsubr
mov
out
pusha
nop
xchg
mov
inc
incl
enter
mov
es
jns
or
xchg
into
lret
cli
sub
lods
ds
jb
pop
add
sarl
inc
push
sbb
nop
adcb
jle
in
lds
les
and
call
cmc
mov
adc
aam
frstor
lods
xchg
mov
xchg
fists
movsl
fucomip
mov
xor
inc
les
jle
fnstsw
mov
and
mov
imul
inc
ret
sbb
sub
insl
mov
xor
jb
ret
cli
add
dec
movsb
and
sbb
pop
jbe
fwait
xchg
jmp
push
push
in
lea
push
mov
pop
inc
pop
lcall
push
ja
sbb
xchg
and
lea
xor
mov
out
lods
ljmp
loope
sbb
add
fwait
dec
inc
lods
dec
pop
sub
lret
xor
dec
add
addr16
cmp
mov
in
cwtl
xor
enter
sbb
mov
ret
lods
sarl
mov
pop
sub
scas
xchg
push
push
push
inc
mov
inc
sarl
mov
pop
sbb
movsb
and
fnstcw
iret
xchg
xchg
test
xchg
bound
cmpb
sbb
mov
mov
adc
jb
cld
xor
hlt
pop
aam
mov
out
andl
punpckldq
cmp
push
notl
add
mov
pop
cmc
out
cwtl
cld
rorl
mov
fiaddl
push
mov
enter
lret
adc
dec
adc
inc
jns
fsts
add
stos
or
mov
xorb
and
mov
dec
and
fsts
insb
popf
ss
int
cmp
sub
icebp
inc
in
and
mov
dec
int
scas
call
push
or
sbb
push
pop
or
push
sbb
negl
loop
cmp
loopne
psubw
test
jmp
push
fimull
pop
lea
out
sbb
fsts
cltd
mov
xor
imul
pop
dec
mov
les
lods
leave
scas
jae
pop
in
stos
mov
test
push
xor
dec
pusha
movsl
test
push
stos
das
into
stc
push
iret
pop
push
mov
add
stc
stc
mov
cmp
mov
or
mov
enter
inc
or
movsb
ret
add
dec
rcrl
mov
cltd
in
mov
ljmp
mov
cmpb
mov
mov
pop
pusha
mov
loope
jmp
push
xor
xchg
lahf
andl
iret
je
imul
shl
dec
mov
sarb
fcmovb
cwtl
cmpsl
jbe
mov
mov
cmp
in
jb
out
sbb
lods
pop
xor
lahf
cmc
mov
sbb
inc
inc
cmp
fwait
jp
push
inc
inc
rcr
add
std
shll
aas
pop
arpl
mov
adc
xlat
mov
push
sahf
adc
adc
flds
movsl
loopne
das
sar
leave
sbbb
rcl
inc
pop
cmpsb
jge
sbbl
loope
mov
fbld
adc
mov
out
jp
and
iretw
sub
outsb
insl
push
dec
fidivs
cwtl
fs
xchg
cmpsl
xchg
fstpl
jp
sbb
cmp
mov
addr16
or
add
mov
or
bound
out
adc
out
add
mov
sbb
push
inc
mov
imul
xor
scas
xlat
icebp
cmp
fdivl
ja,pn
mov
cmp
mov
cmp
mov
mov
mov
jo
mov
push
dec
in
add
cli
xchg
in
mov
dec
push
sbb
imul
jge
mov
out
bound
insl
cmp
lock
in
mov
clc
popa
jae
push
adc
and
dec
inc
test
dec
fcoms
repnz
inc
imul
jno
aaa
pop
xor
cmp
mov
inc
xchg
xchg
imul
push
cmpsl
and
inc
mov
xor
or
cli
xor
cld
dec
sub
push
push
mov
outsl
fdivr
sub
enter
inc
jl
es
lods
imul
push
gs
xchg
lahf
sbb
stos
cmp
lahf
test
movsb
iret
jge
cmp
xchg
mov
rol
iret
jnp
xchg
jns
xchg
pop
cmp
fsubrl
cmp
or
ja
pop
cwtl
out
adc
aas
stos
or
jmp
add
pusha
out
push
loop
inc
cltd
mov
jl
insl
xchg
mov
popa
or
mov
gs
inc
sbb
adc
mov
loopne
adc
or
mov
pop
push
xor
sahf
bswap
cmp
ds
repz
pop
fsubr
jmp
mov
outsl
or
cmp
idiv
daa
xchg
adcl
sbb
add
rorb
pop
and
push
shlb
ss
xor
xor
cmp
test
bound
pop
pop
fistpl
ja
daa
cli
adc
sub
mov
dec
mov
xor
mov
adc
mov
inc
mov
and
lahf
das
or
pop
add
repz
pusha
aad
fdivr
mov
xor
cmpsb
mov
aam
dec
aad
inc
push
int
mov
fldenv
adc
lcall
int3
repz
push
jg
testb
lods
into
cmp
adc
lock
and
lods
push
and
sub
or
nop
push
sahf
mov
or
mov
push
lock
pop
adcl
xchg
out
aad
into
stos
cmpsl
subl
cld
dec
imul
mov
popl
loop
mov
pop
cmp
icebp
mov
cld
cmp
fidivs
adc
add
ret
into
mov
rcrl
nop
mov
or
fwait
test
test
adc
fidivrs
leave
fldcw
addb
mov
mov
into
ds
xchg
dec
inc
xchg
dec
xor
aad
jae
mov
aad
andl
jmp
xchg
add
rorl
adc
xor
mov
pop
sub
mov
xlat
inc
gs
jno
adc
loope
das
dec
arpl
cmpsb
addr16
enter
mov
xor
stc
jnp
mov
repz
mov
test
out
pop
loopne
mov
pop
rorl
icebp
fs
cmc
leave
mov
scas
pop
adcl
or
xchg
dec
dec
push
std
pop
add
mov
jne
ds
stos
daa
sahf
sub
outsb
or
into
fucomp
cmc
je
sub
mov
inc
iret
test
fwait
inc
and
xor
xchg
lea
clc
xchg
sub
mov
dec
outsl
scas
push
dec
js
cld
orl
sbb
lret
and
gs
std
enter
out
push
sub
rorb
cwtl
jge
loopne
pop
mov
dec
push
mov
push
das
fwait
push
mov
rcll
aaa
inc
sbb
sbb
cli
fmull
leave
dec
aaa
or
in
rcl
sahf
or
fisubrs
sbb
xchg
push
into
out
ss
mov
das
mov
out
mov
pushf
pop
iret
outsl
ficompl
jbe
or
fwait
xchg
cmp
xor
inc
cmp
enterw
fistpll
and
jbe
xor
rorl
dec
xor
aaa
and
shlb
jmp
pusha
pop
lahf
and
jbe
mov
or
loopne
ljmp
cmc
pop
mov
sti
inc
out
decb
mov
and
mov
fisttps
lret
stc
call
stc
scas
cmpsl
push
sbb
in
jg
jae
in
fsubl
dec
dec
sbb
lock
arpl
pop
mov
cmp
andb
leave
sub
push
scas
mov
shll
sahf
mov
int
cmp
iret
xchg
icebp
and
cltd
cmp
inc
inc
popa
fistl
push
in
xchg
enter
xchg
insl
pop
jae
lods
sub
negl
loope
sub
int
sub
jl
or
imul
dec
xor
lret
push
lds
or
jno
clc
jno
jb
inc
sub
mov
stc
daa
and
pop
call
xchg
mov
mov
jae
lcall
adc
je
push
sub
cld
cltd
mov
cmp
mov
shrl
stos
mov
pop
mov
das
sub
dec
push
sbbb
xchg
sbb
lock
loopne
lcall
dec
push
mov
or
test
sarb
and
mov
pop
push
mov
adc
jo
arpl
inc
push
std
and
xor
cs
es
into
pop
movl
sub
fcoms
mov
aaa
scas
pushf
push
pop
add
cmp
sub
sub
lret
out
mov
repnz
jne
test
sbb
add
out
pop
ja
push
adc
jns
sub
jmp
inc
icebp
sti
xchg
cmpsl
inc
fucomi
movsl
push
cwtl
jle
push
jns
and
ljmp
test
or
cwtl
xor
test
adc
or
adc
jbe
movsl
rep
cli
imul
sub
push
ret
sbb
fwait
jno
pop
pop
mov
ss
ret
iret
adc
adc
dec
jae
mov
jb
lahf
mov
xchg
and
or
sub
jb
stos
jnp
gs
mov
aas
popa
xor
nop
mov
subl
lret
mov
dec
jo
cmp
pop
stc
sub
xchg
pushf
jne
xor
hlt
test
xlat
push
pop
sar
icebp
je
je
cmp
cmpsb
mov
rcll
dec
cmp
call
cmpsb
jmp
or
push
outsb
rcrl
lret
movsl
mov
jmp
addr16
sbb
or
orb
fstpt
cs
adc
ret
jecxz
call
push
push
pop
sbb
enter
in
xor
ds
loopne
mov
jp
test
jae
inc
in
int3
sbb
xorl
jnp
xchg
movl
loop
mov
jae
shrl
pushf
mov
xor
cltd
mov
xor
sarl
test
or
fsubrs
int3
jbe
push
in
ret
sub
in
push
sbb
shll
dec
loope
mov
mov
xor
cvttps2pi
popa
ret
mov
pop
mov
scas
push
ret
inc
add
ljmp
cs
lcall
jg
aaa
cmp
repz
cld
add
mov
out
dec
adc
push
mov
icebp
xor
mov
mov
fs
int3
jo
jecxz
shll
das
add
test
xor
push
shll
lods
push
arpl
adc
repnz
fdiv
mov
push
cmp
shll
fninit
push
inc
xchg
and
xchg
sub
dec
and
push
lods
dec
stos
loop
inc
in
jne
imul
out
xchg
sti
mov
and
shlb
insb
sbb
xor
pushl
into
jp
in
insb
repnz
mov
mov
mov
mov
and
xor
out
jecxz
pop
lock
mov
sbb
daa
fiadds
add
sub
rcl
dec
leave
mov
xlat
in
fstpt
xchg
mov
scas
fstl
mov
lcall
mov
cmp
push
mov
cmp
addr16
mov
jne
fildll
inc
imul
lea
sub
adcb
sbb
sbb
rcrb
push
lahf
pop
jg
mov
sysexit
sub
mov
inc
sbb
stc
xor
jb
xchg
testb
add
pop
push
jecxz
push
ret
imul
cld
mov
xchg
repz
out
popa
push
pop
jne
add
int3
or
push
enter
and
mov
and
aam
repz
xchg
add
xchg
popf
lahf
pop
dec
lcall
lea
flds
test
fwait
aad
imul
cmp
imul
hlt
dec
ds
cmpsb
and
dec
cmp
ret
xchg
std
mov
jmp
push
in
xor
popa
repnz
fstpl
clc
pop
inc
sbb
lahf
es
mov
or
out
dec
sub
jnp
scas
das
sub
ljmp
shl
sbb
movsl
pop
scas
xor
faddl
adc
cmp
roll
sub
mov
arpl
cs
test
add
jo
arpl
clc
daa
lock
or
push
and
adc
ffreep
pop
dec
push
sbb
or
cs
fldcw
jle
push
push
xor
xor
mov
and
dec
stos
sub
ret
push
loope
popf
mov
fnstenv
aad
leave
dec
nop
out
fimuls
xchg
pop
ror
stos
test
rol
mov
loop
push
lret
cli
jns
divb
test
inc
dec
ja
push
mov
sahf
jns
imul
dec
xchg
ds
sar
or
addb
flds
or
ja
into
jo
lea
push
mov
xlat
xor
call
xchg
jb
push
stc
cmp
jecxz
mul
out
and
push
dec
pop
mov
ds
push
or
pusha
out
push
ljmp
lret
dec
outsl
sub
xchg
pop
pop
xchg
xlat
mov
ret
dec
push
xor
mov
jns
pop
in
mov
cmpsl
add
and
leave
sbb
andl
out
lret
mov
scas
push
push
scas
rcll
scas
xor
adc
jnp
enter
daa
mov
pop
push
mov
inc
adc
shl
fstl
lods
ret
sbb
sysexit
iret
loopne
mov
rcl
movl
cmpsb
outsl
hlt
mov
push
fmulp
xor
out
scas
mov
outsb
add
hlt
adc
out
sub
mov
out
add
mov
xor
call
aas
xchg
in
daa
cltd
cmp
outsl
shrl
mov
dec
jmp
dec
xchg
xchg
inc
mov
fidivl
and
xchg
test
aaa
sbb
jmp
mov
imul
sahf
lods
outsb
fnstsw
lods
cs
adcb
add
or
add
movsb
aad
in
xchg
push
dec
addl
mov
lea
aam
cli
push
outsb
imul
rcr
loopne
mov
outsb
inc
push
jp
xchg
dec
mov
stos
or
inc
movsl
mov
sbb
stc
testb
je
jne
stos
out
push
mov
in
iret
bnd
mov
add
popa
xor
sub
rcrl
fisubrl
inc
cmp
lods
faddl
push
jecxz
sub
out
push
add
dec
adc
pop
ret
ss
jbe
sbb
aas
fnstcw
push
adc
xchg
lret
and
adc
mov
xor
test
and
xor
fcmovu
xchg
inc
rorb
cld
push
mov
cmp
hlt
pushw
mov
fstp
lret
pop
nop
js
jecxz
rolb
sub
jnp
in
xchg
stos
xor
xor
fcompl
mov
dec
or
movsb
jmp
inc
adc
call
outsb
mov
shrl
out
test
dec
test
inc
lods
inc
push
cmc
push
pusha
repz
movsb
std
arpl
mov
rorb
mov
cmpsl
or
mov
cwtl
aas
dec
ret
in
dec
outsb
adc
mov
ffreep
sahf
jl
pop
xchg
loopne
data16
daa
lods
adc
jp
jp
push
int
stc
push
bound
movsl
jl
xor
inc
dec
mov
sub
xor
or
push
cmp
imul
in
fsub
add
call
mov
in
scas
sahf
movsl
xchg
dec
pop
push
into
pop
lea
jmp
insb
cmp
imul
and
inc
imul
pop
sub
push
hlt
loopne
clc
push
xor
rcrl
adc
xchg
rorl
xchg
mov
jno
js,pt
and
xchg
test
lds
mov
mov
test
pop
dec
stos
push
push
and
push
xchg
cmp
cltd
sti
add
leave
addl
fwait
adc
gs
fldt
jbe
dec
lds
aad
jne
test
mov
outsl
mov
jae
sub
sarl
aaa
fucomi
les
jmp
mov
pop
pop
lock
out
adc
sub
ja
dec
ja
push
out
mov
mov
sahf
test
lcall
mov
xchg
ds
cltd
test
fists
pop
jmp
push
jns
and
or
add
sub
cmp
mov
sub
mov
psrlw
call
pop
xchg
push
add
out
mov
mov
xor
sbb
nop
test
outsb
orl
inc
in
es
adc
adc
dec
jnp
push
mov
jg
out
dec
cwtl
and
sbb
cmp
ss
aam
sbb
xor
scas
jp
ret
inc
dec
addr16
push
mov
insl
ljmp
inc
jle
aad
mov
xchg
hlt
xor
mov
cs
leave
shll
cmp
and
mov
into
pop
push
add
rol
lds
jg
out
add
or
add
or
push
pushf
ret
insl
or
cld
push
pop
sub
mov
mov
mov
xchg
and
sbb
sbbl
push
pushf
aad
adc
cmpsb
mov
insl
cld
pop
loop
enter
sahf
xchg
push
clc
loopne
in
cmpl
ja
lahf
leave
dec
rorl
out
cmp
cmpb
push
outsl
out
outsl
pop
adc
test
push
movsb
add
sbb
mov
rolb
in
mov
jno
sbb
gs
lds
push
imul
pop
rolb
dec
test
jbe
add
repz
mov
xchg
stc
clc
int
ljmp
xchg
repz
jns
and
mov
cmp
mov
dec
mov
sti
mov
je
adc
cld
fwait
mov
push
xchg
call
popf
pushf
mov
mov
pop
push
jno
popf
arpl
inc
ret
mov
inc
push
add
stos
repz
xchg
out
mov
fistps
xor
scas
pop
sbb
xchg
add
xchg
loop
lds
enter
ss
mov
iret
mov
inc
jo
ret
loopne
enter
mov
pop
jp
mov
dec
xchg
jl
push
stos
pop
clc
sbb
add
popa
mov
adc
push
call
mov
dec
imul
movsl
cmp
or
ret
frstor
aas
sti
fisubl
xchg
les
fs
daa
lcall
push
in
icebp
rcll
idivl
mov
sub
mov
popaw
fstpt
xor
jbe
ret
or
sbb
ss
jecxz
mov
inc
es
jge
mov
adc
sbb
pop
and
aam
sbb
jbe
push
mov
push
pextrw
adc
rorl
sub
add
sub
pusha
stos
mov
add
stc
mov
and
mov
and
adc
roll
add
out
add
cmpb
sar
ror
xchg
pop
xor
xchg
les
mov
xchg
mov
int
or
pop
ss
out
outsl
scas
test
or
and
lret
test
jle
sub
sub
insl
inc
fldt
mov
pushf
lcall
adc
int3
and
and
lcall
inc
lret
mov
imul
inc
xor
jmp
jae
mov
mov
jg
scas
mov
mov
out
iret
dec
adc
mov
lds
dec
movsb
inc
adc
mov
mov
pop
in
sbb
fld
call
seta
adc
ss
mov
sar
pop
and
sbb
bnd
push
or
push
xor
adc
addr16
push
rcrb
mov
push
mov
push
mov
dec
add
xor
push
add
push
mov
adc
out
imul
jmp
and
scas
add
mov
cmpsb
cmpsb
mov
cmc
jb
adc
insb
insb
add
push
jnp
jge
pusha
fnsave
and
cmp
inc
jecxz
and
add
push
popa
lret
add
mov
lods
loope
and
dec
mov
ja
add
dec
sub
xor
test
add
adc
data16
movsb
xor
mov
sbb
lcall
icebp
push
movsl
fildl
nop
mov
enter
mov
sbb
xor
cltd
xchg
lcall
sbb
scas
in
rorl
mov
arpl
pop
mov
xor
call
movsb
lahf
outsb
cmp
sbb
pusha
mov
or
jp
das
inc
insl
push
cmpsb
je
or
add
xchg
divl
xorl
lods
dec
add
daa
test
enter
mov
out
gs
jno
inc
lcall
mov
aaa
sub
jbe
rcll
insl
sub
out
ss
mov
mov
inc
dec
mov
lods
inc
add
mov
xchg
mov
call
sub
das
mov
lret
mov
imul
in
jno
inc
movsl
xchg
mov
testl
sbb
nop
xor
cmp
xorl
adc
xchg
mov
xor
sub
js
hlt
in
and
mov
sbb
sub
mov
pop
pop
pop
xor
dec
pusha
add
pop
cmp
repnz
hlt
push
sbb
push
jnp
icebp
jl
push
sbb
inc
ljmp
inc
mov
incl
inc
stos
inc
fwait
ljmp
lcall
xchg
test
jne
xor
push
mov
dec
out
pop
jmp
fimull
bound
call
inc
dec
adc
iret
aam
sbb
adc
test
loop
icebp
xchg
mov
pop
pop
sbb
cmpb
and
jp
leave
or
leave
mov
jle
out
push
cli
and
cwtl
xor
fbstp
loopne
mov
adc
add
push
lea
mov
add
mov
inc
xchg
fbld
popa
and
xor
cmp
aaa
inc
jno
stos
mov
out
call
mov
dec
add
int3
clc
or
dec
xchg
dec
shlb
mov
addr16
xorb
stc
std
or
xchg
mov
mov
daa
and
in
jmp
mov
loope
or
imul
mov
or
or
sbb
fbstp
int
test
rolb
xrelease
lods
sbb
mov
fidivrs
or
push
fwait
sbb
andl
sub
xchg
cmp
fdivp
dec
aas
and
outsl
inc
adc
pop
repz
push
pop
mov
ds
ret
sub
inc
jo
call
aam
sub
rorl
sbb
and
inc
pop
mov
test
jle
dec
test
and
add
cmp
dec
into
inc
add
sbb
add
ret
or
insb
xchg
lock
mov
fcmovnbe
rol
fistl
ds
push
in
mov
nop
mov
fcompl
daa
jo
repz
jle
and
mov
jecxz
and
scas
inc
lahf
adc
push
push
dec
sub
fnstcw
sub
inc
mov
dec
jecxz
push
push
push
push
mov
inc
sbb
adc
cmp
mov
fwait
xchg
fdivrl
push
pop
addr16
loop
fsubrs
arpl
cmp
mov
xchg
inc
bound
out
pop
pushf
xchg
int
sub
movlps
sbb
pop
xor
dec
or
flds
jb
jae
out
stc
push
stos
add
sbb
ret
mov
jmp
sbb
mov
pop
mov
sbb
dec
idiv
out
out
sbb
loop
jge
lcall
inc
std
dec
mov
shlb
jge
andl
data16
popf
mov
cmp
dec
sbb
or
pop
mov
or
or
push
imul
pop
stc
out
cli
jl
fildll
sbb
ror
mov
bound
out
test
xchg
test
leave
add
inc
push
cmp
dec
xchg
pop
xchg
jmp
lcall
addb
ja
in
pop
xchg
jnp
cmp
cmpsl
or
jp
ljmp
jecxz
stc
pop
ljmp
es
adc
add
lcall
add
xchg
jnp
mov
in
pop
mov
pop
std
dec
sub
iret
cmp
jl
xor
or
inc
sbb
adc
inc
cmp
add
xor
sarb
out
inc
testl
sub
jl
orl
inc
insl
stos
cpuid
sub
lds
jp
or
out
lock
sbb
xchg
popa
jg
rcrl
mov
std
cmp
shl
test
scas
cmpsb
aad
push
mov
add
and
fwait
clc
into
jnp
int
jmp
and
popa
int
mov
mov
mov
mov
jne
addr16
hlt
sub
cmpsl
das
jnp
mov
mov
out
enter
hlt
or
outsb
stos
add
xor
dec
fdivrs
pop
mov
decb
sbb
xor
fmull
fiaddl
or
sub
das
mov
mov
and
jecxz
mov
cmp
push
fdivr
mov
lds
repz
mov
adc
mov
xor
push
xchg
pop
sub
and
sub
iret
mov
iret
std
mov
call
pop
sti
jae
negl
imul
xchg
mov
popa
popa
lock
and
push
sbb
push
stos
sub
mov
stc
mov
cltd
call
out
jns
pop
das
mov
and
and
mov
fsubrs
mov
dec
jns
ret
dec
pop
cmp
popa
lret
sbb
jbe
pop
mov
push
fstpl
lock
add
negl
cmpsl
adc
imul
jecxz
mov
cmp
out
sub
sbb
pushf
pusha
lcall
cmp
popf
out
cs
aad
sub
push
push
lahf
into
stos
in
loopne
inc
inc
sbb
test
notb
xor
xor
in
push
aaa
cmpsb
aas
mov
xor
cmp
push
ljmp
outsl
push
add
into
js
jl
lcall
push
pop
subl
mov
push
xor
xor
adc
lods
in
mov
mov
cmp
inc
loop
cld
adc
lods
jbe
addl
idivb
cld
sub
popa
fistl
and
pop
pop
iret
rcrl
clc
xor
popa
je
int3
adcl
pushf
cld
hlt
and
xor
xchg
decl
push
jb
cmpsl
or
fwait
je
into
inc
popf
bnd
push
aad
lds
sub
jecxz
iret
jbe
loop
sbb
pop
xchg
mov
or
xor
sub
jbe
in
xchg
leave
fsincos
xchg
iret
adc
movsl
inc
pop
mov
out
and
jecxz
jo
mov
std
fsub
add
pop
inc
dec
cmpsl
out
cmp
sbb
push
das
dec
xchg
xchg
xor
lds
loop
int
jmp
roll
sbb
mov
insb
andl
xchg
sub
fnsave
sub
pop
xchg
mov
test
xchg
aas
js
sahf
int
inc
sub
dec
mov
rolb
aas
and
and
jecxz
mov
repnz
ret
xor
outsb
fwait
mov
into
fnstcw
js
sbb
in
dec
sub
outsb
sbbl
mov
pop
loope
xor
mov
mov
popa
cwtl
mov
fwait
lahf
cmp
xor
das
fsubl
push
movsb
aad
addr16
inc
jbe
dec
xlat
loope
std
loopne
jns
mov
je
pop
in
inc
out
mov
push
push
cmp
xchg
push
jge
call
aaa
add
ss
ljmp
jl
push
sbb
or
shll
test
jl
faddl
lock
push
js
je
mov
lock
mov
cld
pop
mov
jl
mov
cmp
lahf
cmc
add
out
shll
not
jecxz
in
xlat
mov
cmp
lea
sub
divl
call
les
fistpll
or
sub
pop
sub
cltd
xor
aam
sub
jle
ret
dec
push
sahf
adc
xor
push
test
ret
dec
push
shl
lock
out
xchg
movl
int3
mov
adc
xor
jbe
sbb
dec
cmp
mov
addr16
shll
mov
fwait
jp
fsubl
aam
popf
fwait
in
test
cld
cmpsl
jl
es
data16
mov
insb
jb
cmp
or
out
and
xor
push
shl
push
in
popf
pop
sub
bts
and
adc
cmp
shrl
jl
je
dec
sub
lea
mov
pop
jge
fcoml
lret
cmp
call
in
mov
xchg
ds
adc
aaa
test
mov
mov
aas
cmp
rcrl
xor
ret
loope
dec
jne
in
mov
dec
loopne
repnz
clc
scas
test
jmp
in
dec
jnp
enter
dec
data16
sahf
sbb
add
jmp
call
ret
pop
es
jnp
jp
call
addr16
jbe
ret
mov
inc
or
adc
repnz
xlat
xchg
in
or
pop
push
icebp
sahf
fidivrl
in
data16
test
jge
ret
fstpl
jae
lods
into
push
gs
out
outsb
bound
jle
fstl
stc
push
mov
shrb
jnp
subl
mov
out
call
daa
or
lods
out
mov
out
fldcw
lds
push
add
or
mov
scas
sub
loopne
cld
mov
dec
and
fisubs
in
adc
dec
outsb
inc
mov
cmp
sub
fisttpll
and
dec
push
adc
stos
dec
hlt
aad
and
dec
outsl
int3
mov
shll
pop
jge
jmp
mov
or
sbb
enter
andb
dec
mov
xchg
out
jns
pop
adc
in
and
xchg
mov
bound
ljmp
lea
fimull
hlt
push
mov
fwait
sub
sahf
xchg
outsl
setl
jl
iret
out
ret
push
out
cmp
mov
aas
fstps
das
push
and
imul
inc
lret
orb
cltd
pop
sbb
fildll
lahf
cmp
jge
shrb
sbb
testb
out
sbb
daa
dec
sub
push
adc
jns
adc
test
cmp
into
jns
test
jae
cmp
mov
mov
test
pop
pushw
adc
sbb
xchg
jmp
pushf
push
mov
fidivs
insb
pushf
lret
cltd
lea
outsl
sbb
sarl
into
cmp
pop
push
in
xor
subl
fs
nop
std
outsl
jne
aam
in
ret
mov
into
bound
xchg
mov
hlt
lahf
adc
out
add
ret
into
jg
jb
cmp
pop
in
dec
cwtl
mov
ret
and
xchg
cmpsl
xchg
inc
jmp
mov
nop
shlb
inc
sbb
ljmp
int3
or
shll
out
push
add
xor
aad
mov
shlb
ja
cltd
or
cmp
arpl
test
push
inc
pop
jecxz
mov
ljmp
int
test
sbbb
jle
add
jno
arpl
mov
mov
loop
mov
in
es
xor
adc
cmpsl
std
adc
rcrl
cmp
out
sub
add
movsb
mov
int3
cmp
rcrb
sbb
push
mov
inc
cmpb
xchg
ret
dec
add
sahf
in
mov
jb
enter
lds
lods
into
adcb
mov
cli
pop
stos
add
mov
jnp
fmul
pop
idivl
pop
into
jnp
sti
jo
mov
ss
into
sarb
push
and
mov
xchg
jnp
mov
ja
xor
loop
into
and
jo
lds
imul
sub
and
pop
lret
xchg
lods
clc
aaa
insl
mov
sbb
push
jmp
out
mov
sarl
mov
or
js
xlat
xchg
fists
imul
push
shl
hlt
sbb
cmp
fs
icebp
jmp
inc
push
cltd
dec
fsubs
xchg
fwait
xchg
test
add
stos
sbb
pop
loop
and
cmpsl
outsb
rclb
movsb
es
bnd
repnz
pop
mov
xchg
inc
add
lock
loop
cmpsb
insb
sbb
cmp
add
push
inc
sbb
orl
jns
pop
jg
movsl
mov
stos
push
scas
mov
test
xchg
pop
and
xor
jne
mov
stos
xor
jb
and
js
jp
jnp
jp
cmp
movsb
push
mov
sbb
lods
sarb
mov
pop
sub
dec
xor
or
xor
or
rorb
push
popa
iret
jae
dec
imul
lcall
mov
icebp
and
aad
sbb
fcomip
pop
sti
xchg
shlb
jmp
lahf
jnp
mov
in
mov
insl
sbb
xchg
xchg
add
in
movsb
xchg
inc
xchg
mov
cmp
dec
mov
adc
mov
sub
out
pop
xlat
sub
subb
sub
jp
pusha
adc
lods
ret
iret
icebp
xor
cld
je
pop
pop
lahf
daa
push
xor
xor
cmpsb
cltd
bound
dec
loopne
dec
ljmp
sbb
cmp
orl
xchg
imul
dec
or
xchg
inc
in
cli
adc
mov
hlt
iret
testb
fdivs
push
dec
push
pop
lea
and
jecxz
and
inc
hlt
shrb
cmpsl
add
and
inc
lea
ljmp
jge
movsb
test
mov
jne
cmp
jmp
daa
je
subb
dec
mov
into
xor
add
leave
call
in
fmuls
push
lahf
ficoms
jle
add
pusha
mov
jge
mov
mov
das
add
push
enter
adc
in
pop
xor
jno
cs
cmc
jo
mov
push
mov
ss
enter
add
aas
movsb
cld
or
js
or
cltd
loopne
je
negb
xorps
call
cmp
mov
add
cmp
xchg
jae
and
and
jae
rolb
aad
or
out
mov
insb
hlt
idivb
push
ja
insb
xor
fcoml
adc
cmp
jp
or
jl
lods
pop
dec
push
mov
and
xchg
push
sbb
popl
add
dec
out
popa
sub
mov
adc
xchg
xchg
aam
loope
iret
or
push
push
ja
jge
rep
xor
push
in
pop
ud1
mov
js
into
das
inc
push
scas
lds
movsb
subl
data16
cs
cltd
sub
add
and
into
mov
dec
or
jne
out
lcall
je
lds
jne
dec
jecxz
aad
lock
mov
cld
lods
xchg
xor
mov
mov
jnp
call
stc
mov
enter
cmpsb
ficompl
pop
repz
xchg
push
arpl
mov
jmp
scas
xchg
xchg
cmp
test
or
adc
pop
mov
leave
rcrl
mov
leave
mov
dec
rcrb
std
sub
mov
xor
sub
cwtl
or
mov
jno
in
imull
adc
arpl
test
repnz
mov
adc
adc
ret
dec
test
inc
mov
repnz
push
dec
rorb
add
push
outsb
mov
aad
iret
lret
jmp
add
ljmp
aad
xchg
test
icebp
inc
repz
mov
mov
mov
mov
mov
out
adc
push
std
lds
sti
jne
or
icebp
add
sbbl
loopne
xor
sbb
mov
pusha
sub
loop
pop
rorb
cmc
lock
divb
mov
xchg
test
stc
je
sbb
filds
lea
adc
sahf
mov
test
adc
jb
loop
mov
cwtl
ficomps
jl
hlt
adc
sbb
and
lahf
lock
xor
les
sub
rorb
xor
call
leave
xchg
cmp
mov
cmp
lret
or
xchg
in
gs
xchg
psrad
push
and
lock
xchg
testb
sbb
inc
mov
int3
pshufw
iret
adc
test
data16
int
lea
outsb
mov
dec
clts
push
pushf
fnstsw
sub
mov
ja
pushf
dec
ljmp
js
cs
cmp
loope
adc
xlat
outsb
xor
fidivrl
inc
int
cmpsl
jo
push
sbb
test
lcall
jns
add
test
hlt
lret
clc
scas
sbb
ja
add
cmovnp
fsubrs
fsubrs
and
and
push
lock
cld
push
lret
std
lods
mov
pop
jmp
inc
push
lret
pop
cmpsl
dec
pop
xchg
sub
and
shll
sub
sub
cli
jle
mov
jmp
iret
push
mov
imull
mov
dec
ret
xchg
leave
jp
mov
out
push
int3
push
mov
insb
mov
test
aas
mov
lds
in
mov
push
xchg
or
repz
test
mov
arpl
sbb
gs
mov
call
pop
xchg
repnz
cmp
test
fstps
aas
data16
ja
jecxz
aad
jmp
xchg
adc
jecxz
nop
movsl
aaa
cmp
fdivrp
push
test
jns
push
out
fisubrl
scas
push
cltd
pop
bound
gs
xchg
daa
fwait
mov
inc
lock
lock
pop
loop
xlat
scas
fcoml
or
enter
jg
arpl
jl
xchg
daa
inc
aas
repnz
mulb
cmp
mov
pop
pop
mov
add
and
mov
cmpsl
jmp
add
dec
bound
dec
rclb
imul
in
cmp
sahf
and
jnp
xlat
fistpll
sub
fwait
xor
or
cli
mov
adc
fsub
arpl
sub
popa
inc
aas
lcall
sub
cmp
xor
add
sarb
push
mov
inc
xor
mov
sub
adc
dec
sbb
stc
repnz
cmp
inc
xchg
into
sub
sub
push
xlat
dec
fwait
call
fisttps
cmp
cmc
push
or
jno
in
and
js
pushf
dec
add
enter
push
jg
pop
fs
loope
loop
sahf
pop
sbb
add
inc
mov
lds
or
icebp
test
jp
pusha
mov
and
pop
lock
scas
xlat
push
mov
sub
ljmp
mov
andl
dec
stos
cmp
and
lock
addr16
and
divb
mov
icebp
push
push
mov
cmc
popa
cmp
imul
cs
je
cmp
fimuls
adc
adc
pusha
sub
xchg
fsts
inc
sbb
xor
rcrb
adc
or
xchg
fs
mov
stc
shlb
or
inc
xlat
push
icebp
or
daa
or
mov
aas
ret
push
and
repnz
inc
and
dec
inc
andl
mul
xchg
dec
mov
les
lock
rcrb
popa
and
in
cltd
pop
jnp
cmpb
xchg
ror
jmp
xor
lea
add
fstpt
sub
int3
dec
int3
out
in
mov
xacquire
fiadds
fbstp
lret
lret
jno
imul
lcall
add
xor
jp
lods
cmp
xchg
mov
lds
shll
rclb
inc
nop
xchg
out
stos
into
xchg
push
push
cmp
pop
pop
sub
jns
sbb
adc
xchg
arpl
in
test
jl
push
mov
repnz
fwait
xlat
hlt
or
call
adc
fidivrs
arpl
imul
sbb
cmp
cmp
repz
repnz
mov
sub
jecxz
hlt
add
arpl
sub
fsts
outsb
add
mov
loope
and
in
pop
sbb
lods
out
and
dec
aad
adc
dec
xchg
pop
leave
mov
mov
rcrb
aam
dec
js
stos
adc
sub
lahf
sub
call
aad
push
xor
js
sbb
out
mov
cmc
addr16
push
gs
sbb
pop
mov
adc
pop
stos
pop
xor
sahf
stc
xor
test
repz
iret
mov
adc
pop
rcl
sti
mov
mov
stos
adc
jnp
bound
jecxz
mov
push
into
mov
cmc
fadds
xchg
in
and
or
jmp
pop
clc
jno
lcall
hlt
scas
cmc
test
add
popa
push
out
adc
and
movsl
mov
cltd
lcall
out
xchg
cmc
push
push
push
add
jns
loopne
cmp
leave
dec
sub
clc
mov
xor
pushf
pop
hlt
fcmovnbe
mov
xor
jge
xor
gs
mov
xor
addl
mov
enter
addr16
jg
xchg
mov
sbb
repnz
xchg
xor
jo
notl
pop
popf
lods
ret
in
or
xchg
jno
jg
insb
loope
popf
pusha
or
jae
inc
or
rcrb
inc
adc
mov
stos
inc
popa
pushf
decl
adc
xchg
aad
aam
jnp
sarl
rorb
or
pop
scas
repz
cmp
popa
dec
das
lret
insb
mov
imul
and
fcompl
shll
mov
push
mov
mov
fwait
push
sub
mov
xor
dec
push
cwtl
pusha
idivl
inc
pusha
enter
push
jecxz
repnz
sbb
xchg
out
jl
sahf
in
leave
aam
out
xchg
lds
lods
rclb
daa
ljmp
push
movsl
fiaddl
fdivrp
xchg
xor
mov
cmovs
andl
int3
dec
mov
dec
pop
pop
gs
push
testb
sbb
xchg
pop
mov
dec
adc
imul
imul
test
aad
das
mov
out
ret
sub
add
push
sbb
js
xor
jno
mov
xchg
gs
mov
mov
negl
hlt
xchg
shlb
push
mov
js
add
dec
mov
sub
jnp
and
inc
lcall
mov
mov
pop
aad
bound
mov
cmp
add
pop
jo
stos
mov
xchg
pop
lret
add
jae
outsb
pop
or
mov
push
add
inc
inc
sahf
mov
outsb
std
data16
test
fsubl
inc
sarl
jle
pop
or
mov
pop
or
push
pop
shll
push
xchg
sub
repnz
mov
cmp
stc
mov
mov
lcall
sbb
pop
or
lock
and
addr16
cmp
or
jne
or
sbb
ja
mov
add
cwtl
mov
inc
sbb
xchg
and
ret
inc
sbb
mov
adc
pop
out
and
inc
inc
pop
out
inc
and
sub
dec
inc
adc
repz
mov
aaa
xchg
hlt
stos
mov
bound
and
cmc
mov
out
lahf
pushf
fstpl
adc
iret
dec
ficompl
sub
xchg
addr16
sub
roll
lahf
cld
js
fnstcw
ret
stos
and
rsqrtps
mov
and
fldcw
xor
daa
inc
sbb
fists
xchg
lods
pop
inc
push
ljmp
lods
inc
decl
mov
sub
dec
fstsw
mov
push
inc
xor
stc
mov
push
in
std
pop
cmpsl
adc
or
lahf
call
xor
add
mov
cltd
jbe
rcrb
outsl
xchg
jp
loope
push
xchg
dec
fistps
push
sti
mov
push
outsl
mov
push
dec
in
push
fisttpll
rorb
jo
je
or
or
sbb
repz
pop
xchg
jo
out
les
adc
sbb
sub
add
repz
add
mov
popf
mov
daa
imul
mov
repnz
in
bound
mov
adc
jae
inc
cltd
push
inc
sub
enter
pop
insl
mov
and
enter
test
pop
and
out
imul
pusha
pushf
mov
pop
pop
sbb
cmp
add
std
jb
xchg
arpl
sbb
repnz
pop
adc
cmp
jnp
xlat
push
pop
outsb
ret
addl
adc
imul
xlat
in
sbb
dec
push
call
fcom
jge
jno
lds
out
int3
js
decb
mov
arpl
out
mov
int3
test
movb
jp
sbb
dec
imul
stc
cmovge
pop
sar
je
jno
mov
test
fistl
push
shlb
or
mov
push
fwait
in
jg
lods
xchg
mov
push
adc
xchg
xor
movsb
cmc
dec
repnz
push
mov
rolb
int3
jge
mov
push
in
fisubl
dec
add
sub
test
inc
sub
movsb
mov
adc
xchg
jge
shlb
rorb
sbb
cmp
ss
aas
jo
cmpsl
xor
imul
and
shrb
or
jne
and
jecxz
pop
insb
fadds
popf
lcall
mov
sub
cmpsl
dec
sbb
shll
fwait
pop
cmp
or
mov
imul
jb
mov
pop
xor
inc
fwait
in
inc
xchg
adc
pop
pop
dec
dec
mov
enter
lods
jne
and
xor
popl
pop
test
pop
mov
jp
jp
jne
mov
pop
mov
lds
adc
mov
pop
cli
loop
adc
fimuls
add
das
ss
mov
dec
repnz
or
mov
pop
mov
add
hlt
sub
jmp
in
ficompl
loopne
inc
mov
push
sbb
je
das
daa
mov
cwtl
adc
cmp
jl
lock
push
pop
pushf
xchg
icebp
rcrb
ljmp
fdivrl
lret
test
imul
mov
and
pop
repz
das
xchg
aad
dec
cltd
lock
dec
andb
mov
hlt
in
sub
mov
adc
push
negl
lret
dec
push
and
mov
lret
aam
add
fadds
aaa
ror
mov
shl
lret
aad
shll
int3
loop
call
insb
pop
mov
xor
push
cltd
push
xor
xchg
sub
mov
or
xor
movb
mov
js
cmp
and
pop
push
jmp
lods
enter
mov
fstps
sub
ror
adc
imul
sbb
insl
mov
add
add
jecxz,pt
scas
adc
mov
mov
push
shrb
loope
mov
call
push
pop
mov
sbb
sbb
or
add
int
mov
cwtl
inc
std
cltd
push
push
pop
jle
mov
leave
adc
sub
int
adc
into
mov
mov
cmpsb
sub
sub
in
test
cmp
mov
sub
unpckhps
sbb
push
cmp
stos
aad
jns
xchg
cmp
sbb
pop
inc
fildll
jo
push
adc
jge
mov
push
jle
repz
out
jnp
cld
andl
mov
xchg
nop
push
les
enter
int
jle
ret
cs
daa
stos
out
pop
movsb
loopne
fwait
push
sbb
cwtl
aad
jbe,pt
mov
xchg
mov
scas
iret
addr16
rolb
pop
mov
push
lret
sbb
and
and
sub
jno
jns
imul
mov
ret
cmp
xor
test
jge
pop
imul
jns
lahf
fcomi
jae
test
aam
push
add
js
out
nop
xor
push
jne
push
pop
mov
stos
loope
xlat
pop
daa
or
and
sbb
mov
iret
imul
mov
stos
inc
imul
in
pusha
push
push
sbb
mov
cmp
fists
mov
sbb
adc
repz
bound
movsl
negb
movq
xchg
insl
insb
movb
popl
mov
mov
cmpl
cld
es
or
xchg
lea
and
test
sti
insb
ja
int3
jb
cmp
ret
out
je
into
popa
outsb
dec
adc
inc
test
sub
jb
xchg
push
faddl
push
jmp
mov
sbb
mov
insl
jmp
cwtl
arpl
xor
ret
nop
das
push
xchg
dec
mov
jg
xor
inc
push
or
stc
in
ja
push
inc
insb
test
pop
testl
fiadds
cmpl
mov
out
push
push
clc
xor
jae
push
add
pop
and
sbb
and
addr16
fldz
mov
loop
add
fadds
sub
add
pop
lret
dec
dec
lock
clc
iret
ret
ret
jl
xor
xchg
test
icebp
hlt
shll
push
cmpsl
and
lret
dec
loopne
pushl
fnstenv
adc
mov
or
push
adc
cmp
sub
stos
ffree
mov
add
sbb
push
nop
imul
push
int
push
mov
add
test
dec
ss
xor
popf
imul
fidivl
xchg
xchg
ret
cld
push
xor
mov
cld
jne
aas
sbb
shr
jg
adc
inc
popa
test
sub
xlat
xor
call
pop
jo
adc
lock
and
sbb
mov
pop
popa
dec
fs
pop
push
ss
push
cs
out
dec
jns
gs
lcall
fcmovu
sbb
cmp
dec
aaa
inc
add
mov
stos
add
mov
push
daa
cmc
mov
movsl
outsb
nop
push
sub
lock
jne
jb
movlps
jecxz
xor
mov
mov
mov
test
inc
js
and
popa
push
in
jbe
fidivl
push
shlb
sub
sub
jns
mov
lock
cwtl
out
insl
fcmovne
stos
adc
test
js
popa
ret
mov
sub
add
add
cld
dec
sbb
aas
sub
mov
mov
test
repz
xor
mov
aad
test
movsb
ss
rcl
xchg
adc
sub
or
gs
rol
sub
out
jnp
mov
cmp
arpl
mov
cmp
pop
mov
pop
je
push
insb
arpl
shld
cltd
daa
das
fiadds
jnp
dec
jbe,pt
dec
mov
pushf
or
ja
xchg
pop
int3
add
mov
add
push
push
cld
mov
pop
stos
jbe
jp
mov
sar
mov
mov
shlb
sub
push
addl
scas
dec
fidivl
dec
cld
push
divb
movsb
mov
cmp
xchg
jmp
mov
imul
icebp
fbstp
lret
or
adc
popa
pop
jno,pn
cli
push
cltd
pop
sbb
aas
and
dec
push
sub
mov
shll
dec
xchg
mov
stc
repz
fldt
xchg
loopne
mov
mov
cmpsb
scas
add
into
rorl
rorb
pop
inc
addr16
popf
mov
out
aas
outsb
loop
enter
xor
cltd
adc
ljmp
and
in
cmpsl
add
pop
or
add
fstl
sahf
or
cmp
mov
dec
mov
int3
jo
outsb
stos
xchg
pop
sbb
into
pop
inc
xchg
sub
jp
addr16
xor
sbb
lret
jp
std
mov
ror
sbb
mov
xchg
testl
pop
inc
aas
add
mov
loope
in
xchg
jmp
and
mov
pop
scas
les
aaa
push
ljmp
mov
movsb
sub
stos
sub
mov
push
sar
loopne
je
cmpsb
sbb
pop
inc
sbb
sub
mov
xor
pop
pop
scas
aad
rcrl
ret
and
lcall
cld
pop
or
cs
sti
btr
fs
sub
dec
fnstcw
cs
aaa
push
cwtl
pop
dec
out
addr16
adc
icebp
add
in
mov
in
push
jne
lds
adc
mov
jb
lcall
aad
adc
inc
scas
insl
and
popl
mov
push
push
and
in
fwait
ja
add
xchg
adc
cmpsl
iret
es
push
fdivs
sub
ret
test
and
nop
push
pop
shlb
insl
add
lret
pusha
aad
xor
dec
lock
adc
stos
inc
sarb
xor
inc
outsb
pop
pusha
jge
scas
lret
pop
vpmaddwd
dec
or
mov
pop
movsb
orb
or
push
daa
and
jg
inc
or
or
gs
and
test
arpl
ljmp
jge
insl
shl
jge
fldcw
push
cmp
xchg
fs
xchg
pusha
movl
insl
enter
test
sub
repz
and
ss
dec
xchg
mov
dec
imul
lcall
mov
cmp
mov
mov
daa
movsl
or
addb
xchg
sbb
dec
add
pop
in
aas
xchg
rclb
mov
ret
dec
jo
test
jo
test
imul
cmpsl
or
mov
mov
jl
cmp
jno
in
inc
pop
enter
mov
data16
insb
bound
jno
mov
popa
shlb
sub
mov
lods
ljmp
mov
fs
imul
xor
jne
xor
movsb
sub
cli
es
push
test
mov
lcall
das
push
lock
das
mov
dec
sbb
outsl
add
adc
mov
rcll
fs
jnp
lea
mov
repz
sub
or
stos
stc
in
outsb
mov
jns
ret
lea
enter
xchg
popa
mov
insl
inc
das
mov
addb
adc
mov
sbbl
ret
add
std
pop
push
add
mov
js
and
inc
and
xlat
cmpsb
mov
jns
xor
mov
movsl
addl
jmp
push
jo
pop
int3
out
cmpsb
inc
in
enter
out
inc
adcl
inc
mov
xor
cltd
out
push
ret
outsb
outsb
or
add
jnp
sar
push
adc
int
je
adc
xchg
mov
mov
mov
iret
sub
xor
inc
adc
push
aas
pop
jmp
andl
pop
push
js
mov
inc
mov
sub
repnz
and
jbe
fsubrl
push
cmp
cmp
pop
daa
xor
out
ds
mov
aad
jge
les
rep
sub
jb
mov
imul
add
ret
mov
in
ffree
jb
adc
cmc
insl
sub
push
mov
adc
mov
pop
pop
mov
pushf
lahf
int3
push
outsl
add
xchg
cmpsl
mov
loopne
das
daa
jbe
shlb
xor
cmp
mov
gs
sub
jns
loope
cs
nop
xor
aam
cmp
sbb
aas
ljmp
cmp
in
push
jno
mov
cmp
add
imul
lret
xor
xchg
into
pop
out
int
inc
mov
xchg
sti
into
in
or
ret
xor
sbbb
dec
sahf
pop
and
jns
dec
ss
mov
aas
sahf
gs
shlb
test
xchg
movsl
mov
movsb
sar
int3
fadds
int3
xchg
xchg
add
orb
cmp
mov
sub
gs
repz
xchg
rcr
push
inc
and
movsb
popf
scas
sahf
rol
and
int3
pop
push
jns
xor
mov
pop
mov
sbb
int3
loop
mov
inc
dec
add
mov
shrb
dec
icebp
iret
std
push
in
inc
das
push
into
cmp
xor
xadd
dec
inc
loope
mov
xchg
and
dec
adc
xchg
test
pop
adc
cltd
sbb
into
mov
mov
leave
jnp
out
jle
sbb
mov
cmc
dec
adc
inc
divb
xor
cld
stos
into
andb
push
paddb
test
push
shl
xor
mov
xor
dec
cs
pop
stc
xor
mov
nop
dec
push
mov
inc
popf
push
adc
scas
aaa
push
mov
dec
cmp
cmp
dec
rol
sbbb
leave
dec
rorl
dec
add
inc
xor
mov
push
push
cmc
adc
sbb
cltd
mov
shrb
sbb
jnp
sbb
bound
dec
adc
mov
push
adc
jge
sub
mov
push
pop
iret
pop
sbb
sbb
rcr
das
sbb
sti
mov
cmp
push
lods
mov
fildl
ss
ret
adc
mov
stos
in
push
lcall
ret
jle
xor
push
mulb
mov
test
push
inc
das
mov
shr
icebp
inc
repz
jbe
xchg
ja
lods
mov
mov
inc
jmp
sub
sub
and
xchg
les
leave
test
shr
mov
jbe
push
mov
sub
jae
bound
add
repnz
mov
jns
stos
inc
jg
mov
xchg
push
cltd
xchg
cs
sbb
adcb
sbb
pop
jno
mov
sub
mov
adc
nop
enter
fucomi
arpl
je
or
and
les
cwtl
fisttpll
xchg
sub
iret
add
cmp
or
and
lock
bound
xlat
dec
decb
rclb
pop
inc
iret
sbb
cmp
sbbb
mov
and
sbb
fists
into
pop
das
ss
cltd
mov
int
int3
add
pop
es
push
in
cmc
and
outsl
loop
mov
cmp
fs
push
cli
stos
or
sub
dec
sti
scas
lahf
push
js
xchg
sub
sbb
insl
mov
sub
enter
push
imul
xor
mov
mov
pushf
jo
imul
leave
inc
push
and
dec
lret
inc
cwtl
xor
xchg
or
js
repnz
xlat
aam
es
stos
push
int3
mov
aad
mov
aam
cs
sbb
xlat
mov
push
test
pop
scas
adc
adc
je
je
cmp
data16
sahf
imul
ss
scas
xchg
push
arpl
scas
push
pop
and
dec
pop
mov
sbb
cmpb
pop
cltd
es
imul
or
push
nop
repnz
sbb
cld
mov
rorb
sahf
ds
mov
imul
sub
jmp
mov
inc
cmpl
idivl
pop
push
scas
ds
out
sub
or
stos
leave
ljmp
sbb
cltd
xor
pop
inc
lods
sbb
cmc
cmpsl
dec
and
add
fiaddl
jb
jecxz
in
fs
and
mov
mov
cmp
jbe
xchg
vphadddq
in
adc
inc
repnz
loop
ja
rcr
fldl
leave
ret
out
xorb
out
iret
push
cmpsb
and
xchg
popa
dec
jle
xor
popa
xchg
sbb
mov
jecxz
or
and
inc
int3
sub
addl
aam
adc
ljmp
jb
inc
adc
adc
pop
iret
adc
out
pop
shl
cmc
inc
and
inc
jl
pop
mov
jns
sub
xchg
hlt
ret
das
pop
jne
rcll
andl
shll
sbb
cltd
push
insb
cmpb
shlb
jne
test
inc
mov
andb
andb
jmp
fcomp
loope
sbb
push
or
fwait
push
fs
out
fisttpl
pop
out
pop
lret
adc
push
mov
mov
imul
test
daa
out
xor
add
xor
ret
pop
ds
adc
sbb
cmp
and
ret
icebp
and
add
dec
adc
fildll
in
pop
int3
mov
pop
data16
or
les
nop
js
repz
mov
and
and
push
cmp
pop
jbe
sub
orl
and
mov
sub
mov
sbb
dec
std
idivb
pop
es
xlat
push
xchg
in
dec
aaa
and
mov
scas
lcall
fdiv
mov
aas
or
add
mov
aad
and
pop
je
mov
fisttpll
jo
insb
jne,pt
sbb
mov
mov
in
jle
mov
ds
dec
rcll
es
mov
xor
bound
psrad
push
xlat
test
push
pop
pop
push
gs
out
scas
lock
sub
mov
in
add
lar
inc
mov
ljmp
jno
lcall
dec
mov
pop
int
les
je
in
jl
cwtl
or
pextrw
and
idivb
imul
and
xchg
fldcw
fwait
inc
out
arpl
movsb
stos
scas
dec
leave
das
mov
ficomps
mov
xchg
xchg
add
iret
orb
sub
fadd
mov
loop
mov
dec
or
je
jp
out
inc
rol
dec
andb
repnz
or
sub
mov
inc
les
xor
or
xor
xchg
cs
mov
push
fnstsw
dec
dec
inc
mov
xchg
sahf
jne
mov
cmp
scas
inc
or
dec
sbb
movsb
push
mov
dec
cli
dec
mov
sahf
adc
jb
stos
cmc
sarl
loopew
aad
movb
mov
mov
push
adc
jns
rolb
jb
adc
push
sbb
inc
out
and
push
test
fldt
and
shlb
in
int3
pop
cmp
push
ljmp
cs
and
loop
xchg
inc
icebp
ret
or
mov
sbb
dec
push
mov
xor
ret
je
lods
callw
cmp
pusha
jne
mov
insb
cmp
repz
xlat
cmp
push
xchg
xchg
in
clc
std
loope
mov
jns
lahf
mov
or
in
mov
subl
push
mov
mov
dec
inc
jne
or
int3
push
ret
gs
iret
rcll
mov
bound
loope
cmpb
iret
cmpsl
fisubl
mov
fdivs
test
jbe
mov
ja
xor
incl
pushf
jns
pushf
sub
cmp
popa
lds
xchg
loop
or
ret
fsubs
ljmp
and
sti
pop
clc
ja
inc
sbb
stos
sub
dec
xlat
pop
xchg
mov
and
movsb
add
xor
jb
sub
jno
repz
cmp
adc
in
inc
fidivl
das
xchg
and
aad
mov
pop
rcll
repz
fsubp
add
push
xchg
mov
je
inc
leave
and
shll
mov
or
xlat
leave
inc
repz
xor
loop
cmc
les
nop
cwtl
lahf
dec
out
mov
xchg
dec
clc
xor
ljmp
jl
outsb
mov
sti
add
pop
cwtl
pusha
dec
mov
shrb
es
xchg
cmp
inc
xor
add
int3
bound
ret
cmc
push
pushf
push
mov
mov
das
sarb
mov
cmovo
repnz
stos
dec
push
sub
jae
leave
inc
fdivrl
enter
add
into
cltd
shrb
aam
or
or
into
push
jl
in
jmp
pop
mov
outsb
inc
mov
jns
mov
or
inc
jmp
jecxz
dec
mov
imul
repz
xchg
aaa
and
lods
or
lret
insl
imul
mov
addr16
xchg
aad
push
insl
inc
cmp
sbb
dec
or
mov
fsubl
in
repnz
data16
dec
xor
dec
hlt
incl
dec
mov
adcb
or
push
mov
or
scas
inc
in
jbe
nop
popf
add
js
push
mov
jb
and
ljmp
push
xchg
aam
sbb
dec
pop
ds
pop
push
dec
sbb
xor
jb
insl
addl
bound
icebp
add
mull
mov
fwait
dec
xchg
and
xchg
call
rcl
je
sub
inc
or
push
arpl
jge
push
xchg
and
out
ficoms
jl
sbb
adc
aas
dec
pcmpeqb
push
adc
mov
mov
lods
and
test
aas
loopne
fwait
movsl
lcall
dec
enter
push
fnstcw
aad
sahf
sbb
movsl
idivb
cmp
mov
fistpl
and
mov
lds
out
push
cmp
jb
addb
dec
mov
mov
test
or
inc
pusha
sub
mov
dec
cmpsb
cmpb
lds
in
jbe
es
xlat
scas
js
movb
dec
cmpsb
sarl
lret
sbb
cli
xchg
and
ret
push
mov
jo
popf
popf
inc
enter
xchg
dec
loope
mov
cs
fwait
imul
inc
xchg
xchg
sbb
mov
or
push
pushf
inc
sti
pop
or
xor
sbb
loop
fcoml
in
inc
pushf
cmp
cmp
push
test
jae
mov
dec
fdivr
add
add
call
notl
fstl
popa
mov
pop
or
daa
pop
push
jle
jg
sti
rclb
dec
or
mov
pop
push
and
pop
dec
xor
daa
out
dec
ljmp
fsubrs
xor
mov
sti
shrl
xor
jo
inc
int3
out
dec
inc
test
insl
mov
stos
inc
cmc
pop
and
xchg
mov
or
dec
and
lahf
xor
sahf
cmpsl
mov
adc
shlb
or
fcomip
add
outsb
dec
addl
xor
ja
sub
mov
jo,pn
stos
addr16
fldcw
jp
mov
xchg
and
sbb
xlat
jle
inc
mov
stos
in
stc
daa
or
insl
push
jae
scas
adc
push
shl
mov
in
gs
push
adc
scas
cmc
sbbb
cmc
outsb
arpl
movsl
repz
and
ret
xchg
mov
inc
sbb
rcrl
xchg
repnz
rcll
mull
sub
clc
jo
outsb
rolb
sub
jno
arpl
and
xor
fimuls
or
into
mov
dec
mov
or
fwait
add
shlb
stos
out
ds
js
push
idivl
xor
sbb
xchg
pop
or
mov
or
enter
and
mov
push
lahf
push
out
xor
imul
xchg
mov
cmp
add
or
lock
push
mov
mov
xchg
mov
insl
subb
mov
and
cld
mov
push
pusha
jo
jmp
mov
scas
iret
jne
dec
xchg
aaa
dec
or
xchg
mov
dec
pop
bound
cmp
and
jle
cmp
mov
insb
mov
inc
mov
mov
xchg
jnp
cmp
push
lahf
fmuls
mov
cld
fcoms
xor
jmp
das
rorb
mov
icebp
and
add
cs
fldl
mov
int
fst
adc
pop
cmpsl
mov
lret
mov
mov
popf
mov
movsb
xchg
cwtl
out
in
sbb
push
mov
fs
dec
fbstp
xchg
lcall
je
repz
lret
ret
adc
pop
icebp
sbbb
sbb
clc
iret
dec
adc
or
scas
mov
ds
cld
daa
jp
dec
icebp
sbb
call
insl
pop
dec
sub
and
cmp
xchg
push
push
mov
gs
jmp
jmp
mov
fiaddl
mov
mov
add
mov
adcb
shlb
imul
bound
loop
test
and
fisttpl
xlat
push
cmp
outsl
iret
dec
stos
jae
sub
or
movb
push
dec
adc
mov
shrl
cs
loop
nop
ret
idivl
or
and
adc
jne
xchg
push
test
in
es
dec
jbe
lahf
dec
test
cmc
jae
rcl
ljmp
mov
or
push
lea
ret
outsl
fidivrl
arpl
in
sbbl
fstl
mov
fwait
mov
ficoms
ret
shr
dec
mov
mov
sub
cwtl
sub
adc
push
inc
icebp
sar
sub
stos
mov
rcll
push
xchg
lret
stc
xchg
adc
fldl
jbe
dec
clc
pusha
xor
push
data16
scas
sbb
cld
or
pop
ljmp
or
inc
or
mov
jmp
mov
testl
ja
and
lret
fwait
mov
shll
int3
and
mov
mov
push
fsubr
push
mov
rcr
ja
shrb
lcall
xchg
notl
dec
fldenv
movsl
or
hlt
push
mov
gs
inc
push
or
popa
and
sahf
aam
pop
int3
dec
add
push
sti
xchg
pop
push
xchg
jmp
cli
jecxz
fwait
inc
mov
jo
data16
out
xor
fmuls
mov
push
inc
and
cli
xor
inc
dec
add
mov
sub
jp
cmc
xlat
scas
add
lret
add
cmp
and
aam
jp
sbb
mov
inc
jno
push
outsb
lods
subb
pop
adc
push
vmovsd
adc
adc
push
or
or
mov
test
xchg
call
popf
cld
leave
cs
sub
pop
adc
lea
pop
lods
subb
inc
js
mov
fists
inc
cmp
sub
mov
jnp
inc
sarb
xchg
pop
push
xchg
pushf
add
leave
pop
fs
ss
mov
and
icebp
test
mov
mov
jbe
stos
subb
enter
add
xchg
mov
mov
popf
adc
mov
scas
imul
cmpsb
mov
repnz
pop
into
pop
rorl
ret
push
jb
jecxz
aam
or
mov
dec
add
cmpsb
push
fists
in
imul
cmpsb
je
xchg
rcrl
cmp
push
xchg
iret
data16
or
and
arpl
out
mov
sub
xor
xor
fld
inc
push
data16
push
mov
lock
sub
lds
test
lret
fdivrl
test
loopne
scas
add
pushf
repnz
repnz
xchg
mov
arpl
push
lcall
sahf
js
cltd
sbb
flds
push
mov
push
enter
dec
mov
adc
pop
mov
cwtl
add
lret
push
aas
mov
xor
jle
xchg
jo
mov
dec
popa
sub
and
pop
sbb
and
scas
jg
cmc
in
jns
mov
int3
testl
test
pop
cmp
mov
jg
or
andl
les
adc
push
sbb
dec
xchg
lock
stc
pop
cmpsb
scas
xchg
sbb
mov
xorb
mov
mov
js
lret
cld
cmpsb
and
cmpb
jnp
dec
movl
mov
addr16
enter
inc
fsubrs
mov
and
sbb
ljmp
xor
pop
lahf
xor
or
popa
divl
sub
sub
cmp
and
pop
imul
mov
sahf
xlat
stos
sarb
aam
addr16
lcall
jae
xchg
cmc
out
add
xor
jecxz
in
jmp
push
inc
fwait
leave
repnz
addb
jbe
sbb
jae
or
rorb
mov
js
adc
mov
jge
dec
push
ds
fdivrs
xchg
fnstsw
cltd
out
icebp
inc
jbe
xlat
mov
push
dec
push
jmp
pop
clc
mov
je
fiadds
sahf
aad
mov
sbb
sbb
sub
add
jle
add
shr
scas
mov
jge
mov
sti
jae
call
push
and
imul
mov
pop
insl
or
scas
std
sbb
cmc
inc
adc
adc
cmpsb
jle
xor
insb
scas
cwtl
jb
in
push
xor
out
mov
inc
adc
inc
insl
mov
cld
movsb
cltd
loope
dec
add
or
jbe
imul
hlt
dec
imul
imul
ja
jbe
ss
jbe
cmpsl
pop
loopne
xor
pop
xchg
psrlq
adcl
or
and
out
cwtl
adc
std
pop
or
insl
push
xchg
dec
xor
test
in
dec
inc
mov
not
fldenv
jnp
xchg
and
mov
sub
inc
mov
gs
jno
pop
inc
loopne
mov
mov
rcrl
dec
ds
xchg
gs
sub
ss
mov
mov
lahf
out
in
adc
mov
je
and
sub
push
shrb
xchg
sahf
dec
movsl
mov
sbb
xchg
pop
add
std
push
and
rsm
pop
das
mov
mov
jne
push
jle
cmp
jbe
mov
xor
adc
dec
mov
out
and
push
insl
popa
sub
cmp
cmp
mov
insl
mov
in
xchg
sahf
pop
add
jl
and
repnz
loopne
xor
adc
stos
dec
ds
push
mov
mov
and
adc
in
mov
mov
adc
jae
jp
popa
xor
push
ss
push
sub
fnstenv
ret
orl
mov
pop
add
imul
and
mov
sub
jns
scas
aam
pop
pop
movsl
pop
jmp
aad
pushf
mov
sub
mov
jl
dec
outsb
mov
in
inc
mov
xor
mov
aam
adc
mov
inc
add
and
loopne
scas
cmp
lret
push
jmp
push
jo
dec
sub
xchg
lret
xchg
in
xchg
and
push
insl
std
xchg
push
push
add
mov
jae
inc
stos
push
dec
mov
sub
shr
push
repnz
add
or
and
pushf
scas
dec
lcall
nop
stc
mov
mov
hlt
dec
jg
sub
lret
popf
insl
or
xlat
repz
push
enter
dec
aaa
mov
lock
or
fiadds
cli
inc
adc
xchg
orl
out
jg
mov
xchg
lods
es
test
aaa
outsb
pop
jae
jbe
pop
sahf
add
xorl
popa
mov
add
rorl
jl
dec
mov
xchg
ss
and
dec
aam
mov
xchg
out
jns
enter
pop
pop
sbb
loope
jle
xor
insb
mov
push
jb
and
push
out
or
lret
inc
fidivrs
adc
xchg
jo
mov
inc
pop
and
mov
or
inc
test
inc
sub
adcl
call
loope
outsl
loope
fucomp
cmp
jo
adc
xor
loopne
dec
jp
xchg
adc
test
js
les
lahf
cmp
cmp
push
and
outsl
nop
outsb
sarb
into
jle
sbb
cmp
cmc
cmp
cs
enter
xor
lret
test
inc
std
pop
dec
xlat
ret
addr16
xchg
xchg
js
out
mov
cltd
pop
inc
imul
and
push
fs
call
push
imul
pusha
and
pushf
jo
mov
int
xchg
loope
lods
stos
add
mov
jo
push
sarb
sti
mov
xchg
lods
pop
xchg
aam
mov
mov
leave
fidivrs
ss
and
pop
xchg
imul
inc
sbb
mov
mov
scas
pop
xchg
insb
bnd
pop
pop
cmp
leave
jmp
push
adc
jl
sub
lock
or
inc
imul
sbb
callw
ret
push
inc
mov
into
push
jns
leave
js
or
loopne
scas
aad
inc
jns
push
inc
shl
jo
in
push
push
movsl
sbb
or
adc
lds
sub
dec
cmp
aaa
xchg
orl
sbb
cmp
or
add
rcll
ja
ret
jl
adc
inc
imul
mov
cmp
fs
lahf
fstl
loop
hlt
pop
sahf
and
pop
push
cwtl
push
in
daa
xchg
arpl
test
lods
daa
push
idivb
pop
and
stos
ja
outsl
sub
mov
cmpsb
xor
popf
add
xor
fcomps
out
stos
mov
stos
divl
pusha
test
int
scas
rcl
sub
lea
pushf
repnz
nop
test
mov
xchg
adcb
nop
stc
lods
int3
aam
or
mov
scas
sti
pop
xor
and
add
shlb
mov
lret
data16
sbb
lods
push
imul
xchg
add
orl
out
stos
xchg
mov
lahf
push
jno
push
xchg
mov
iret
in
icebp
out
xor
std
sub
and
cmpsb
inc
xchg
cwtl
xor
cmp
ds
loopne
sahf
loope
adcb
pop
lcall
ss
pop
push
lock
pop
test
sahf
dec
dec
cmp
and
mov
faddl
mov
ljmp
dec
push
add
mov
dec
lds
adc
dec
push
mov
mov
outsb
dec
add
or
cmp
sub
add
pusha
mov
lock
jecxz
cmpsb
dec
sbb
or
jge
xchg
inc
leave
mov
pop
jo
dec
dec
and
jo
push
jge
fwait
mov
push
int
cmpsb
lods
je
out
xor
rorb
cmp
fwait
sbb
aad
popf
rolb
fcoms
lods
es
aam
mov
push
pop
in
cwtl
mulb
ja
xor
cld
and
test
call
mov
or
jp
out
imul
dec
leave
dec
xchg
cmp
pop
daa
fiaddl
push
je
jne
outsl
push
je
jo
call
jbe
ljmp
pop
mov
push
mov
and
sub
pop
incl
cmpsl
and
test
iret
or
paddb
imul
in
fwait
pop
das
or
movmskps
and
xchg
stos
inc
pop
mov
jp
xor
pop
pop
stos
in
cmp
push
jmp
lods
ffree
repnz
arpl
out
or
xor
test
pop
sbb
mov
inc
cmp
inc
adc
mov
jp
pop
out
mov
enter
les
loop
adc
push
jne
outsb
popa
popl
lret
xor
or
les
jecxz
sub
aas
push
fiaddl
push
pusha
ret
push
divl
das
mov
std
dec
adc
xor
mov
mov
pop
stc
mov
xchg
sbb
jmp
mov
lods
push
jne
roll
sbb
jecxz
pop
xchg
es
std
jns
ficoml
sbb
mov
addr16
sub
std
js
sub
sbb
xlat
fs
adc
stos
mov
mov
in
jmp
cmc
lock
sbb
add
fucomi
fcomip
jno
jne
out
push
dec
call
pusha
mov
mov
and
popa
ss
xchg
ds
in
scas
cld
xor
iret
loop
testb
movsb
aas
icebp
cmc
aad
aas
test
insb
test
jne
mov
ds
call
aaa
and
jp
jge
das
std
inc
adc
jne
and
insl
imul
sub
fiadds
or
movsl
mov
dec
pop
iret
adc
xlat
shll
pop
lds
fistps
mov
scas
or
xor
movsb
ficomps
jno
bound
cmp
aas
enter
insl
or
test
dec
pop
or
push
add
or
inc
sub
push
mov
shll
cmpsl
pushl
mov
ja
adc
push
fdivr
data16
dec
hlt
testb
fimull
sbb
cmpsl
sub
and
sub
clc
xchg
iret
mov
xor
jecxz
add
cld
ror
hlt
cmpsl
fsubs
es
add
adc
jp
jne
sbb
rcll
push
sub
daa
sbb
inc
mov
arpl
mov
mov
dec
and
andb
adc
mov
stos
jbe
lds
push
bnd
dec
popf
sbb
leave
arpl
mov
xchg
lret
testb
mov
lods
or
jl
test
int
cmp
loope
add
fs
sub
andb
xor
lods
dec
or
pushf
fdivrl
outsb
cmp
test
sahf
mov
xchg
int
hlt
adc
into
fidivrl
xchg
insl
dec
lret
dec
adc
pusha
pop
push
out
jecxz
jae
leave
ffreep
and
sahf
or
icebp
dec
faddl
negl
add
fimuls
or
mov
mov
in
xor
push
lcall
std
mov
lret
fdivrs
jae
mov
adc
es
repz
mov
lea
sbb
lahf
daa
fmull
pop
mov
xchg
movsb
call
adc
fs
in
pop
pop
pushf
andl
loope
inc
add
dec
jg
lock
and
aas
sub
les
xor
dec
mov
iret
in
js
inc
ret
clc
mov
xchg
xor
xor
into
movb
lea
sahf
cmp
jl
jae
insb
mov
test
push
rcrl
addr16
es
cmp
fimuls
add
sbb
add
dec
and
pop
inc
push
or
out
cld
pop
ret
adc
jle
ffree
jg
sahf
sbb
inc
ret
bound
push
mov
dec
fidivl
adc
mov
sarl
add
sub
mov
mov
std
stos
xchg
scas
sahf
inc
ret
daa
push
push
jp
mov
inc
jmp
ret
out
sahf
leave
call
test
cmp
andb
movsl
push
loop
test
jnp
xchg
xchg
daa
bound
js
jmp
mov
mov
or
mov
cwtl
aad
jge
mov
popa
pop
bound
mov
adc
sub
lea
les
cmp
sub
fmull
adc
add
dec
jl
jo
push
and
lcall
mov
cmp
insl
or
pop
movsb
lcall
mov
adc
lock
cld
jno
bound
jmp
mov
in
xchg
or
sub
mov
dec
lods
pop
addr16
or
sbb
jg
adc
in
pop
adc
pop
and
pushf
and
cmp
jns
mov
std
dec
inc
mov
test
and
out
cmp
aam
sti
cmp
sbb
mov
fcoms
adc
rol
xchg
cmp
sarl
insb
insb
push
inc
adc
pop
mov
add
or
lea
xor
ja
and
cmpsb
ja
jne
inc
xor
sub
pop
popf
aaa
cmpsb
sub
mov
push
or
mov
mov
jb
aad
lret
push
iret
or
jno
and
mov
jns
cli
mov
fsubs
jge
test
jmp
call
adc
cmc
jl
and
mov
les
mov
push
adc
std
sti
sbb
inc
sbb
fists
loope
inc
xor
scas
lea
and
and
inc
shll
fnstsw
pop
or
adcb
dec
xchg
cmpsb
cmp
ret
movsl
pop
lea
pop
sbb
lods
xchg
mov
mov
cmp
cmp
clc
in
sbb
out
xor
mov
cli
pop
mov
push
cmc
xor
inc
pop
push
mov
cmc
mov
cmp
out
es
fdiv
aam
sbb
bound
pop
adc
ds
fs
inc
lods
add
jbe
xchg
daa
in
adc
adc
or
jbe
jp
xchg
clc
cs
sbb
inc
and
mov
fs
sub
jbe
test
adc
movsb
aaa
icebp
dec
jno
int3
test
mov
paddw
bnd
cmc
push
insb
mov
or
cmp
xchg
mov
stos
lods
mov
test
call
sub
stc
jo
sbb
lahf
movsb
mov
xchg
ficoms
push
sbb
mov
repz
or
inc
andl
mov
sbbl
push
or
push
fstps
bound
inc
inc
sahf
mov
pop
sti
xor
fsubrl
imul
cmp
sub
imul
push
lcall
insb
dec
push
stos
arpl
adc
fcoms
leave
xchg
mov
sbb
shrb
sbb
into
repz
push
shl
movsl
cmp
adcl
and
call
scas
sub
push
sbb
lock
movsl
out
iret
cmc
lcall
adc
loope
pop
sbb
in
jg
jle
jno
addr16
cwtl
idiv
shrb
rdmsr
dec
xor
pop
xor
mov
test
pop
pop
cmpsb
or
and
notl
push
xor
add
test
dec
fisttps
jmp
pop
fwait
dec
add
sbb
push
xchg
fsubrl
or
mov
add
inc
pop
mov
in
push
pusha
repnz
cmpsl
aad
mov
int
mov
xchg
int3
adc
loope
jecxz
jmp
cmp
test
sbb
sub
cmp
les
cmp
dec
lds
inc
pusha
stc
cmpsb
push
mov
jp
lcall
xchg
decl
ror
scas
or
ret
test
subl
pop
push
loop
mov
cmp
nop
lret
andl
adc
sbb
aaa
es
mov
rolb
lcall
mov
mov
jae
cmp
xchg
lods
ss
jne
icebp
inc
jg
dec
sub
push
call
dec
xlat
sbb
bound
add
and
lret
jb
push
jnp
mov
cmc
pop
fildll
mov
mov
pusha
cli
pop
rcr
push
xchg
cmp
in
jb
rorb
sub
and
xchg
mov
jo
mov
loop
xor
sbb
cmp
dec
sub
outsl
cs
das
dec
cmp
mov
iret
mov
movsb
dec
xchg
cwtl
pop
aas
fwait
push
adc
insl
pop
xor
adc
in
and
lock
adc
int
jmp
cld
sbb
pop
add
adc
fnstsw
add
dec
imul
orl
stc
xor
add
jmp
ret
aaa
stos
gs
add
jl
cli
lock
dec
sub
push
jg
inc
jbe
mov
mov
and
cmpsl
adc
add
sub
jg
xchg
dec
xchg
movl
jmp
jbe,pn
push
rorb
add
call
xor
or
mov
xchg
ret
add
jae
cmp
xor
pusha
outsb
mov
push
sbb
inc
or
jle
iret
push
mov
inc
outsl
movsb
rorb
in
bound
je
clc
add
rclb
in
stos
sub
div
les
jmp
inc
jmp
les
add
jmp
or
add
add
lea
adc
pop
sbb
mov
test
mov
adc
and
adc
mov
insl
cli
mov
fadds
ss
or
add
and
leave
sub
push
mov
push
stc
popf
je
stc
adc
test
lret
inc
clc
ja
pop
int
mov
adc
sbb
xchg
mov
dec
fildll
jle
pusha
add
lret
cmp
out
loopne
test
sahf
popa
xchg
enter
and
popf
sbb
clc
enter
test
in
or
addr16
ss
add
js
data16
test
outsl
sarl
sbb
sub
out
jecxz
xlat
push
and
ret
adc
in
adc
cmpsl
lahf
cld
fisttps
cmp
pop
imul
lods
out
test
jecxz
dec
popa
sub
mov
icebp
mov
leave
jmp
push
movsb
scas
and
mov
aas
vpaddsb
mov
repz
dec
jne
inc
lods
ret
out
xor
fnsave
sub
inc
mov
in
test
popa
ljmp
arpl
add
sub
les
cltd
lock
cmp
gs
cli
orb
inc
cwtl
sahf
arpl
mov
and
mov
cmp
mov
jge
call
fsubs
xor
popa
cmp
add
push
add
lret
sub
mov
rclb
mov
jmp
adc
repnz
mov
sti
call
mov
fcomp
and
add
mov
int3
xchg
imul
cs
cltd
or
add
ret
sbb
sub
xchg
dec
push
rdpmc
jge
jb
adc
lods
sub
ljmp
lret
lcall
push
cmp
outsb
icebp
mov
jo
data16
cmp
push
xlat
push
cmp
inc
push
pop
inc
stc
sub
sub
ret
mov
adc
out
cld
inc
rolb
mov
push
clc
pop
fldenv
sub
mov
popf
repnz
insl
mov
mov
inc
push
mov
incb
mov
adc
cmpsb
push
adcb
push
sub
cmp
xor
fnstenv
push
outsb
jge
add
pushf
pop
sub
or
aas
pushf
dec
sub
jmp
stos
subl
into
test
jae
out
mov
dec
jg
sahf
data16
test
es
add
jmp
add
mov
add
dec
lret
jle
filds
pop
dec
jne
inc
jb
and
mov
sbb
dec
xchg
xlat
cli
inc
jbe
outsb
push
dec
dec
push
movsl
inc
xor
fbld
aaa
test
sbb
rcl
popa
lds
cs
push
std
fbstp
sbb
add
cld
cmpb
icebp
pop
and
mov
xchg
xchg
mov
fs
add
jge
fildl
andl
mov
aad
mov
icebp
daa
or
lea
cmp
adc
repnz
mov
or
insl
mov
cmp
xor
mov
sbb
stc
cld
jmp
push
orb
call
in
lahf
sahf
dec
mov
imul
clc
xchg
loopne
imul
pop
fistl
add
in
and
adc
and
jg
xor
decl
imul
out
mov
ds
or
xor
daa
fdivrl
sbb
jmp
mov
test
and
sbb
into
or
push
aam
rolb
mov
test
add
lock
jle
lcall
pusha
adc
or
or
testb
add
push
mov
ficompl
stos
pop
popa
jge
sub
mov
xchg
fs
mov
imul
call
test
adc
dec
mov
jmp
jne
lahf
cmp
rcr
jle
inc
mov
sbb
insl
repnz
push
cmp
add
dec
stc
mov
das
xchg
jecxz
jae
enter
or
stos
ss
push
enter
mov
lods
js
out
jnp
inc
xchg
pop
divl
iret
insb
mov
outsl
je
cltd
dec
pop
pop
dec
adcb
mov
sub
repnz
jno
test
in
inc
mov
xorl
movsl
ss
cli
aas
push
push
adc
lods
fistpll
xlat
repz
lds
into
clc
popa
pushf
popa
cmp
mov
add
sbb
fs
fwait
adc
sti
adc
in
xor
dec
out
jnp
cmp
out
adc
jp
mov
out
lcall
push
nop
mov
jge
dec
mov
shll
dec
sub
and
out
addr16
inc
push
pusha
or
cmp
into
arpl
fs
sbb
inc
out
dec
pop
cmc
jg
and
inc
cld
lcall
mov
mov
cmp
xor
jbe
sub
sahf
addl
loop
and
shll
faddp
mov
adc
pop
adc
and
out
dec
push
jns
icebp
and
ss
jb
lods
or
push
das
push
mov
xlat
xor
leave
insl
mov
mov
and
subl
and
lock
aam
adc
mov
push
jle
cmp
outsb
sbbb
rcll
inc
mov
sbb
mov
inc
into
popa
out
dec
sahf
and
test
dec
pop
enter
dec
movsl
add
mov
out
xchg
inc
mov
sub
mov
push
or
push
xor
adc
or
mov
sub
shll
fldl
cmp
lea
fcompl
dec
add
ja
pushf
jge
sarl
aam
adc
js
jnp
jnp
jbe
xchg
and
pop
pop
mov
in
das
cmpsb
inc
imul
cld
inc
nop
cmp
jge
adc
pop
lods
mov
xchg
loope
cmpsl
movsb
push
aas
test
fstpt
stc
sub
inc
adc
sbb
rcll
scas
pop
shlb
push
pop
fwait
or
out
imul
xchg
and
cmp
bound
xorl
cmc
jg
xchg
stos
xchg
jne
mov
popf
shrb
and
dec
icebp
jmp
addr16
sub
je
ret
stos
inc
or
pop
gs
xchg
dec
dec
enter
jno
sbb
cmpsl
jne
std
cli
xor
push
sbb
mov
lock
scas
call
jecxz
data16
jo
cwtl
cmp
movsl
mov
out
mov
sub
pop
pop
xchg
sti
mov
push
int3
xor
bnd
hlt
push
xorl
mov
std
adc
data16
outsl
inc
xor
push
add
flds
pushf
mov
dec
jg
mov
ret
sarl
cltd
or
lcall
cmpsl
push
push
xchg
or
ret
into
mov
dec
mov
cli
push
je
xchg
jb
cmpb
dec
dec
ficomps
push
icebp
push
mov
ljmp
inc
jne
lret
out
shlb
dec
sbb
fwait
das
push
mov
int
xlat
aad
int
fcmove
mov
lods
and
fsubs
add
js
cmpsb
pusha
vminsd
insl
test
out
cli
push
stos
shl
popf
cmp
es
sbb
aas
cli
aaa
cmp
push
lea
mov
push
outsl
push
mov
lods
es
stos
and
push
cwtl
or
xchg
add
popa
adc
jno
cmp
insl
out
bnd
push
stc
shlb
mov
jmp
cmp
arpl
hlt
adc
or
dec
sub
mov
mov
bound
test
inc
push
jne
dec
mov
cld
jnp
fcoms
sbb
rcrb
sbb
fwait
loopne
xor
andl
inc
addr16
or
push
sti
pushf
popa
inc
fstps
jne
fwait
and
fsubp
xchg
or
repz
push
push
mov
pop
jmp
xor
xor
add
mov
jne
aaa
lret
mov
or
sbb
xchg
sarl
sbb
imul
mov
push
out
popa
inc
cmpsb
xchg
lret
scas
sbb
pushf
xchg
pop
jecxz
jge
sbb
push
je
push
into
jbe
xchg
lret
and
lea
cld
int
mov
sbb
pop
xor
fmulp
pop
fwait
in
mov
aaa
xlat
ficompl
in
pushl
jecxz
lret
or
pop
ja
inc
dec
out
fs
jo
jns
jl
mov
dec
push
push
pop
iret
sub
mov
mov
mov
shrl
ja
or
ret
popf
jmp
cmc
sub
cmpsb
loop
sti
outsl
sub
leave
mov
jp
lahf
rcll
std
sbb
aad
mov
sub
fs
lret
add
loope
xor
insl
adc
scas
sbb
cld
insl
mulb
jb
mov
pop
mov
inc
les
int
lret
xor
out
fs
arpl
add
ds
or
jl
fxch
fdivr
cmp
or
addr16
sbb
testl
fs
or
std
dec
add
cwtl
mov
dec
cltd
push
sbb
jge
xchg
xchg
loop
add
adc
add
hlt
jo
in
jp
mov
mov
push
cmp
imul
mov
inc
pop
shlb
test
jle
push
or
sahf
add
xchg
fldt
nop
mov
push
int
subb
dec
pop
in
lock
fcmovnb
jno
ds
xchg
into
negl
shrb
iret
mov
or
mov
jmp
idivl
andl
cmp
mov
sub
mov
push
enter
js
push
lret
cmc
mov
fsub
add
and
mov
ljmp
icebp
addr16
in
inc
scas
and
pushf
sub
adc
dec
jb
into
sbb
les
jmp
leave
mov
push
imul
and
adc
mov
sbb
dec
push
push
jne
leave
jns
adc
test
xor
inc
sub
mov
popf
es
sub
mov
push
mov
xchg
mov
mov
sbb
cld
inc
jbe
std
dec
repnz
adc
mov
nop
repnz
mov
dec
inc
nop
fldcw
shlb
aad
mov
mov
push
mov
mov
adc
xchg
jle
or
dec
pushf
gs
or
or
ret
pop
fcoml
lods
test
mov
stc
imul
inc
daa
pop
daa
or
scas
in
push
adc
ja
rcll
jnp
push
test
pop
mov
or
push
and
mov
push
pop
inc
dec
jnp
dec
push
stos
jne
lods
clc
jg
push
pop
pop
shrb
loop
mov
fnstcw
xlat
fldl
push
add
movsl
adc
fmull
or
loope
and
iret
imull
push
mov
and
jl
ret
cmp
cmp
fsubrs
test
adc
stos
sbb
xor
addr16
xchg
xor
add
sbb
mov
mov
pop
repz
dec
ss
ds
xor
mov
dec
pop
adc
mov
movl
mov
xchg
in
sar
dec
sub
daa
pushf
stc
sti
push
out
xor
loopne
popa
pop
bound
pushf
scas
test
out
pusha
test
jg
lret
ljmp
cmc
sub
addb
and
bswap
jp
or
jnp
push
xlat
fidivrl
dec
outsb
int
out
xchg
mov
cli
out
lea
mov
les
xor
xchg
pushf
fisubrl
pop
sbb
mov
ljmp
jp
addr16
dec
sbb
push
sub
ljmp
xchg
inc
mov
cmp
xchg
pop
lods
pop
out
mov
jp
popf
outsl
and
imul
cmp
push
je
pop
xor
dec
stc
mov
lret
out
scas
in
jle
inc
out
mov
lods
cmp
icebp
push
lock
cmp
test
inc
hlt
pop
lds
cmpsb
inc
push
inc
adc
call
xchg
inc
and
bound
push
adc
adc
adc
adc
xorb
repz
adc
adc
jp
mov
in
sahf
mov
lcall
lahf
pop
mov
or
xor
jno
imul
push
cmp
mov
push
mov
insb
aaa
inc
insl
imul
popa
mov
inc
test
int
cmp
xchg
inc
sub
xor
mov
sbb
jne
movl
add
and
mov
mov
xchg
out
out
push
mov
sets
fstl
add
jne
nop
pop
push
mov
orb
jb
xchg
xor
jge
outsl
rcrl
cs
push
jmp
jne
xchg
roll
test
into
repz
xchg
fldcw
jl
pop
jno
fs
scas
jnp
ljmp
sbb
mov
fbstp
addr16
ret
ljmp
xor
xorl
pop
les
aas
insl
in
rorl
fs
or
nop
data16
movsl
in
in
mov
and
mov
jl
sbb
xchg
dec
and
sbb
fmull
jb
mov
or
ljmp
xor
adc
xchg
arpl
outsb
dec
mov
lds
sub
out
push
dec
dec
insl
jae
mov
cmp
stc
mov
fsubrl
mov
sbb
jnp
lods
lahf
mov
ret
push
sahf
cmc
out
ret
cmpsl
jp
sbb
repnz
iret
mov
cmp
ret
pop
shl
mov
push
hlt
sbb
insb
mov
aad
dec
inc
add
pop
adc
aam
rcr
sub
push
js
cmpsb
cmp
pop
insl
push
fisttps
dec
push
out
mov
xchg
iret
pusha
int
xor
push
insb
decl
lds
jp
jns
sbb
xchg
out
and
popf
lock
pop
jecxz
xchg
jo
fstpl
scas
sbb
xchg
fistpl
or
loopne,pn
jns
mov
jo
mov
mov
or
or
dec
and
sub
fadds
mov
add
fiaddl
enter
ss
sbb
lret
mov
insb
sbb
xchg
add
sbb
mov
outsl
xchg
pop
lock
fcoms
jns
pushf
fwait
orb
or
ja
stos
cmp
test
mov
mov
xor
or
add
fwait
or
xor
fbld
push
dec
mov
jl
pushf
scas
add
jmp
xchg
sbb
ljmp
ret
mov
adc
imul
ret
cs
pop
test
xchg
mov
cmc
xchg
push
pop
lods
pop
pop
repnz
stos
dec
iret
cmpsl
push
jno
pop
jl
xchg
and
push
cltd
jl
out
inc
cmp
mov
enter
mov
addb
insb
mov
out
pop
jne
pop
lods
jae
ss
add
lret
jne
cmp
mov
cld
jg
fdivrl
push
mov
lret
test
shrb
lahf
es
adc
mov
jmp
mov
or
dec
pop
enter
adc
enter
pminsw
incl
outsb
jmp
cmpsl
jmp
mov
dec
jg
inc
es
inc
xor
rolb
or
inc
jle
imul
mov
lret
int3
les
subl
xchg
repz
lret
std
scas
and
daa
sbb
xor
arpl
fnstsw
cs
rolb
data16
or
jne
mov
push
fdivl
and
xor
loop
int3
and
jae
ss
xor
jo
pop
fidivrl
dec
sbb
sbb
sub
leave
inc
and
adc
js
add
jg
push
cmp
aad
fdivrp
jmp
xchg
sarl
mov
rclb
cmp
ja
push
push
xor
sub
push
fdivs
mov
into
pop
gs
in
mov
js
test
or
stos
pusha
and
addb
ret
pushf
sbb
jle
fsub
in
pop
and
pop
mov
outsb
loop
cmpb
dec
sbbb
mov
jg
push
loope
mov
mov
jae
jno
dec
mov
ret
adc
pop
dec
xchg
cmp
call
ret
ds
jp
aad
lock
xor
adc
fnstenv
push
push
adc
dec
add
out
jnp
ljmp
ret
jge
jmp
jp
test
add
mov
add
and
xor
jmp
test
xchg
gs
fists
push
push
scas
xor
mov
lock
pop
mov
bound
fidivrl
test
and
shrl
jns
pop
aam
insl
dec
scas
sahf
xor
daa
mov
jecxz
mov
sahf
cmp
mov
xor
outsl
push
cltd
xor
aam
enter
loop
xchg
cld
test
cltd
inc
xor
repnz
sub
loope
and
adc
push
jae
jns
or
scas
into
cmp
imul
jno
test
or
push
pop
pop
mov
negb
lret
lds
inc
mov
enter
and
xchg
popa
leave
in
jge
and
cmp
cmc
pop
mov
test
mov
lahf
test
mov
and
xchg
das
out
push
enter
fildl
fcoml
add
add
mov
pusha
cmp
stos
int
or
inc
je
mov
and
test
inc
gs
add
mov
loop
pushl
inc
mov
inc
jle
mov
dec
int3
jne
icebp
adc
lret
fs
xor
adc
adc
dec
fwait
or
mov
pop
aas
imul
sub
movsb
gs
add
addl
push
inc
mov
mov
movsl
jns
lods
lcall
mov
or
ljmp
adc
dec
repz
clc
pop
pop
xchg
cwtl
out
jge
loope
xor
ror
jl
pop
and
int3
decb
mov
sub
or
repnz
fdivl
mov
dec
mov
and
and
xchg
rcl
aas
and
push
leave
xlat
in
and
and
and
jb
lods
lock
inc
in
ljmp
jbe
rcl
dec
sub
sbb
jmp
jl
hlt
bound
stos
fstps
fwait
jb
and
or
test
cmc
ja
and
sbb
js
xorl
movsl
adc
mov
cwtl
clc
dec
adc
jle
push
adc
xchg
movsl
in
enter
adc
cmpsl
ljmp
sbb
addr16
sub
aam
inc
in
xchg
fsubs
mov
fwait
xor
jmp
inc
nop
xor
fimuls
push
push
pop
cmp
test
add
sbb
daa
iret
and
mov
adc
adc
cmp
pushf
in
lcall
aaa
xchg
mov
mov
dec
dec
fwait
rcl
outsl
lret
out
into
fs
jmp
bound
outsb
and
mov
inc
fwait
cmpsl
loopne
cs
scas
xchg
clc
das
fiadds
push
icebp
lahf
jl
arpl
jmp
ret
xor
in
flds
mov
dec
stos
push
test
dec
push
pop
jno
xchg
or
sub
call
sbb
or
xchg
mov
mov
jmp
xor
inc
mov
adc
test
daa
cmp
int
xchg
jne
jl
lods
mov
cwtl
push
bound
mov
cmp
cli
pop
call
adc
jl
neg
mov
jp
mov
cmpsb
xchg
sub
sub
cld
mov
ret
jbe
pop
ret
out
or
adc
jmp
sub
lods
mov
ret
cmp
push
mov
clc
mov
mov
dec
sub
dec
inc
movsb
cmpsl
pop
mov
mov
fs
sbb
mov
jp
mov
cmp
ljmp
pop
xlat
scas
movsb
stos
ss
jge
inc
inc
inc
mov
adc
adc
push
aam
jl
pop
mov
pop
sub
push
push
dec
aaa
add
nop
adc
aam
sbb
mov
dec
sub
mov
pushf
lock
mov
movsb
cmp
nop
jno
ja
xorl
jle
fisubrs
aaa
dec
pop
adc
xchg
pop
rclb
cmp
ret
add
ja
mov
orl
pop
push
lret
icebp
or
sarb
jmp
sub
pop
dec
push
icebp
or
outsb
outsb
pop
push
test
sub
xchg
je
xor
push
out
xchg
xchg
push
pop
lods
rcr
std
mov
mov
stc
sarl
mov
mov
stc
gs
js
mov
xor
or
test
in
xchg
out
in
mov
push
push
addl
or
sbb
sub
jp
inc
push
mov
dec
les
dec
dec
ja
add
pop
mov
leave
cmc
cs
in
les
icebp
cmp
lock
inc
add
adc
pushf
adc
pop
xor
pop
sub
push
das
mov
negb
cmpsb
pop
mov
scas
stos
rcrl
daa
cmp
pop
test
ljmp
fldl
sbb
cmp
dec
inc
sbb
jnp
or
mov
push
xchg
outsl
fsubrs
int
std
pushf
neg
cltd
adc
out
sbb
imul
adc
mov
sbb
jl
cmp
rorb
fdivp
adc
mov
cwtl
loop
std
cmp
or
lods
xor
cmp
xchg
sub
xchg
sub
outsb
xchg
push
pop
xor
or
imul
mov
outsb
mov
inc
dec
movsb
pushf
addl
mov
inc
lods
std
xchg
cwtl
add
loop
insl
xchg
stc
cmp
in
push
scas
mov
lds
mov
lock
sti
or
or
sbb
pusha
fildl
sbb
mov
dec
cmp
aas
pushf
xorl
and
and
cs
lret
pop
inc
and
cli
cmc
mov
jle
js
mov
xorb
loopne
aad
insl
fisubs
adc
out
push
cmp
lret
daa
push
out
dec
sbb
cmp
subb
cmp
es
mov
sub
dec
fisubl
pusha
hlt
dec
jl
xchg
adc
mov
ljmp
lds
mov
pushf
mov
shl
or
sub
pop
out
fs
push
loop
mov
lods
test
aad
int
jecxz
sbb
test
cli
rclb
cmp
mov
adc
sbb
push
repnz
andb
xor
sub
ljmp
aad
push
loopne
pop
icebp
jnp
inc
jnp
push
jnp
xchg
xchg
out
mov
fnstenv
adc
mov
or
mov
mov
pop
gs
scas
jae
addr16
mov
lds
pop
mov
les
lock
sbb
cmp
pop
call
jp
fwait
repnz
and
lahf
jmp
lock
lds
mov
js
mov
es
inc
lcall
mov
int
xor
inc
sub
repz
lock
data16
notb
mov
in
or
pop
xchg
lret
les
jle
mov
jp
adc
outsl
inc
scas
and
repz
inc
leave
or
outsb
add
imul
in
repz
push
adc
push
dec
sbb
je
cmp
fsubl
adc
jno
or
call
pop
inc
ljmp
cmp
pop
scas
adc
add
adcl
inc
not
in
imul
leave
xchg
mov
cmp
pop
ljmp
loop
or
or
or
mov
mov
lret
pop
sbb
xor
inc
mov
les
add
lods
shrb
push
fstps
push
adc
adc
in
popa
mov
testl
sti
repnz
loop
push
popa
fs
invd
gs
mov
mov
inc
pop
int
addb
jecxz
cmpsb
pop
adc
jne
repnz
cmp
jae
xor
bound
sub
inc
pop
pop
imul
int3
mov
mov
push
icebp
sbbl
inc
xor
xor
cmp
fldcw
inc
inc
adc
pop
das
lret
ret
push
cmpsb
out
dec
adc
int3
pushf
aaa
pop
cmp
rorb
sti
dec
jge
push
sti
inc
jp
or
xorl
jmp
push
push
subl
inc
jnp
out
mov
inc
cmp
cmpsl
je
jmp
lret
imul
gs
push
push
push
icebp
das
outsl
xchg
jo
lret
dec
ljmp
pop
adc
push
stc
sub
cmp
insb
xlat
xchg
movsb
sbb
ret
outsb
cmpsl
mov
out
fucomp
orb
jp
hlt
pop
stc
call
call
stos
mov
adc
bound
aaa
frstor
fldt
jecxz
aas
mov
mov
shr
jecxz
pop
cmpsl
push
pop
jmp
pop
adc
xor
and
sub
pop
push
repnz
push
mov
add
mov
call
in
mov
mov
pop
test
cltd
push
mov
lds
fcompl
add
fcomps
movsb
add
mov
or
jle
pop
in
dec
inc
add
push
and
jne
ret
imulb
jne
ficoms
sub
imul
pop
idiv
pop
cmp
xlat
imul
negl
sbb
in
or
push
rcr
cli
stos
and
jmp
cltd
push
adc
mov
xor
lock
push
cwtl
dec
lcall
adc
gs
jbe
fs
or
bnd
inc
inc
adcb
popl
cmc
and
mov
or
fisubrs
rcl
in
xchg
pop
xchg
test
lods
sbb
push
dec
movsb
jnp
bound
out
add
cld
xchg
sub
sbb
push
es
sub
cmp
push
mov
jb
push
mov
push
cmpb
int3
test
imul
jecxz
push
mov
cli
cmpsb
adc
xor
pushl
mov
mov
sub
push
aas
out
gs
push
or
lret
push
mov
pop
dec
testl
and
jge
sbb
pop
fadds
addr16
cmp
mov
addl
inc
adc
scas
shll
in
dec
dec
aaa
mov
cmp
xor
cvtpi2ps
sbb
shll
call
out
les
dec
pop
dec
popf
decl
inc
pop
pushf
and
sbb
iret
lret
xchg
dec
imul
mov
mov
adc
adc
insl
sahf
sti
sub
mov
movsl
add
movl
xchg
inc
cmpsb
dec
add
push
mov
das
cld
addl
or
popa
repnz
dec
mov
xchg
jle
mov
sub
inc
lods
and
adc
dec
inc
lcall
jmp
add
aaa
or
f2xm1
enter
adc
dec
sbb
pop
ss
cli
inc
orl
pop
lret
ljmp
out
mov
pop
sbb
xlat
mov
or
gs
or
fbld
imull
pusha
pop
jne
push
loop
fidivs
fs
and
inc
cmp
movsl
dec
adc
sub
sbbl
divl
loopne
and
lahf
xchg
addr16
test
shrb
addr16
pop
push
cld
add
fs
negb
inc
notb
out
sub
cmp
dec
xchg
in
aam
lahf
pop
fistpl
cs
cld
stc
pop
pop
and
aam
adc
and
ficoms
and
jb
mov
imul
cli
sub
jp
pop
cwtl
and
rol
push
mov
in
loope
stc
in
lahf
mov
decb
es
mov
mulb
roll
shrl
in
std
pop
stos
outsb
adc
or
ret
arpl
adc
inc
das
push
mov
cmpsl
aam
mov
repnz
popa
adc
add
cltd
popf
push
and
in
arpl
sarl
or
and
cld
dec
adc
nop
push
push
mov
loopne
cli
xchg
xchg
pushf
lret
mov
dec
shlb
pop
je
faddp
jmp
xchg
pop
inc
mov
mov
add
jns
mov
out
ficompl
mov
into
jge
aaa
mov
xchg
and
imul
inc
fisubrs
xchg
lret
std
imul
lods
es
pop
mov
sbb
notl
jmp
out
es
test
push
or
and
and
stos
sbb
jecxz
sbb
inc
mov
add
xor
iret
div
andb
mov
cs
scas
push
cmpsl
add
add
repz
sub
pusha
jp
ret
mov
hlt
je
lahf
mov
add
push
push
fwait
or
imul
add
repz
inc
dec
arpl
mov
mov
insl
add
add
and
add
adc
cmp
jp
shrb
inc
and
sub
dec
cmp
sub
loopne
pop
int3
or
mov
aad
sbb
fmull
jns
sub
mov
in
lcall
adc
sub
cwtl
push
sbb
in
in
inc
movsl
adc
aad
fildll
cmp
mov
jbe
add
inc
js
cmp
cli
nop
stos
mov
mov
fidivl
bound
iret
cmp
sbb
sub
dec
jb
fadds
popa
mov
lea
xchg
mov
pusha
lods
pop
cmp
movsl
sbb
mov
push
and
into
jno
jbe
aad
movsl
mov
jl
mov
or
sub
cmpsb
xor
cmc
pushl
je
stos
xor
cmpsb
sub
bnd
inc
jb
push
mov
xchg
fdivl
in
pop
jbe
xchg
pusha
xchg
dec
stc
insl
addl
fwait
mov
mov
aad
imul
adc
loop
xchg
sub
fwait
push
inc
or
inc
mov
loopne
and
test
shrb
add
test
sub
jbe
js
dec
add
and
mov
push
mov
dec
mov
popf
or
add
lret
jns
flds
in
outsb
push
mov
sub
les
or
stos
pop
fldt
enter
fstps
ja
inc
dec
xchg
roll
fisubs
jge
and
les
stos
jmp
incl
repnz
insl
cmpsb
lret
cwtl
mov
fs
sub
cmpsb
mov
aas
cmpsb
aam
fistpll
popl
dec
in
pop
in
ds
dec
lret
mov
cmp
loop
cmp
ss
arpl
ret
sarb
dec
xchg
repz
add
js
daa
rolb
push
jnp
in
sub
js
lret
add
out
lock
int
sbb
int
and
scas
pop
inc
mov
xchg
cltd
xchg
not
adc
movsb
fisubs
pop
jl
scas
sahf
mov
and
cltd
pop
stos
in
mov
mov
pop
push
lds
scas
movntps
cmp
push
test
jno
cwtl
in
pop
mov
call
xchg
and
mov
dec
ret
mov
dec
loopne
cmp
data16
test
add
fldl
shr
jg
insb
or
xchg
mov
add
outsl
mov
rol
in
mov
adc
iret
xchg
insl
push
clc
jmp
mov
cmp
cld
inc
jb
push
cmp
jp
mov
aad
cmpsb
into
aam
movsb
roll
inc
je
jmp
xchg
mov
loope
jo
or
mov
enter
mov
filds
mov
out
int
inc
test
div
xor
jecxz
pop
shlb
sub
and
lret
sub
call
test
sbbl
sbb
and
xchg
cli
pop
pushf
mov
pop
test
sbb
jmp
pop
std
out
icebp
mov
push
loope
xchg
xchg
repnz
pop
incl
lds
hlt
mov
push
lock
sub
push
jg
cmp
jo
dec
mov
dec
jne
ja
mov
sbb
icebp
clc
add
jmp
and
aaa
fwait
stos
enter
popa
push
movsb
push
std
or
mov
orl
leave
inc
push
mov
mov
or
data16
push
adc
sbb
sti
stc
mov
xchg
adc
pop
ror
jo
ret
or
dec
in
dec
xorb
repz
loopne
xchg
jae
hlt
mov
add
mov
push
shll
lock
jmp
jp
xchg
mov
xchg
sbb
sbb
cmp
out
sub
pushl
outsb
cmpsl
jo
rcr
xchg
fsub
outsl
mov
inc
adc
inc
xor
cmp
ja
ret
sub
dec
inc
fsts
push
pushl
inc
jnp
scas
test
cld
or
xor
or
xor
cld
rclb
lret
dec
xlat
mov
mov
js
ja
adc
fisttpl
or
jbe
cwtl
push
xlat
push
roll
sub
in
lods
rclb
and
jle
cwtl
and
stos
or
and
cmp
jge
and
in
jbe
fstpl
mov
int3
pop
fistpl
das
cli
mov
ja
mov
and
cmp
pop
les
mov
mov
jge
pop
sub
dec
fs
add
mov
push
jno
lock
push
xor
aad
sti
cwtl
adc
mov
leave
cmp
cld
mov
push
inc
pop
in
pop
enter
mov
xchg
xchg
inc
mov
jb
mov
cmp
dec
out
jns
fbld
and
cli
les
cli
or
into
dec
xchg
mov
dec
xchg
outsb
loope
sahf
stos
xchg
pop
push
mov
pop
repnz
mov
imul
repnz
push
mov
mov
pop
es
and
sub
inc
out
dec
ljmp
ljmp
inc
lds
mov
daa
data16
add
dec
add
jecxz
mov
mov
sub
data16
adcl
lret
ja
es
jl
clc
lcall
daa
xor
sub
cli
test
add
andb
lods
xchg
mov
rclb
ficompl
dec
xchg
and
inc
cmpsb
mov
xchg
loope
mov
js
or
cmp
cwtl
lods
nop
push
mov
imul
push
stc
insb
push
xchg
in
jae
outsl
mov
into
pusha
lods
lods
mov
jns
gs
dec
test
decl
faddl
lds
scas
sub
fnsave
aam
std
gs
jae
in
sub
mov
ljmp
add
mov
mov
jb
push
fwait
pop
shlb
add
in
jb
pop
push
push
mov
inc
push
jns
pop
sahf
mov
cmp
jbe,pn
mov
inc
sbb
push
jbe
std
cmp
imul
rcrb
lret
push
shl
gs
lds
mov
call
or
dec
aas
mov
mov
stos
andb
mov
dec
loopne
inc
push
ja
ljmp
cmp
rclb
pushf
mov
pop
xor
cmp
jg
xchg
xchg
stc
test
add
sbb
xchg
xchg
dec
xor
add
jmp
dec
mov
pop
addr16
jo
sbb
dec
jnp
das
insl
lret
sub
mov
icebp
mov
fchs
movsl
out
pop
psubd
stos
pop
insb
sbb
adc
lea
add
lods
and
xchg
subb
jbe
std
push
jge
popa
dec
pop
rclb
mov
aam
xchg
mov
inc
out
int3
mov
dec
rol
outsl
notb
xchg
nop
imul
add
inc
inc
clc
ja
mov
movsl
js
xchg
leave
sete
jge
in
xchg
insl
add
inc
outsb
xchg
repz
out
xor
pusha
hlt
sahf
repnz
shll
int3
adc
mov
cmp
sbb
je
mov
push
lahf
jmp
jle
loopne
popa
mov
or
mov
pop
mov
adcb
add
daa
jb
sbbl
mov
mov
or
stc
xor
jl
out
or
pop
pop
test
push
dec
test
xor
xor
add
inc
push
adc
xchg
mov
shlb
add
push
and
fsubl
mov
nop
sub
lret
xor
shlb
lahf
outsb
add
push
int3
push
cmc
sbb
call
aaa
sbb
lods
lret
adc
cmp
inc
push
pop
sbb
cmpsb
out
ja
hlt
int3
test
jne
push
cmp
push
int3
add
mov
repz
movsb
cwtl
loope
sti
cmp
sar
clc
cmp
mov
out
or
lods
pop
mov
add
lret
lock
sbb
out
push
xor
cs
push
mov
sub
int3
repnz
xchg
data16
add
cmp
adc
aaa
enter
push
out
cs
repnz
adc
sbb
pusha
icebp
aad
aad
int
or
shrl
mov
push
mov
mov
pusha
cs
mov
in
imul
scas
popa
repz
pop
pop
adc
inc
push
cwtl
or
mov
cmc
add
cltd
fstps
lods
dec
ja
cmpl
bound
xor
fsubrl
nop
mov
xor
xchg
pop
add
insl
cmp
sub
add
cmp
dec
sbb
pop
mov
pushf
mov
add
scas
imul
iret
pop
adc
jl
test
pop
mov
jecxz
sbb
xchg
mov
orl
mov
scas
cltd
push
cmc
mov
aaa
loope
sarb
push
mov
ljmp
loop
push
xor
mov
push
xor
lret
inc
mov
xor
lds
outsb
add
stc
jge
les
jb
ret
mov
or
lock
ficoml
pop
mov
jge
pop
ja
dec
push
sub
adc
add
jecxz
push
and
sarb
pop
aad
cmp
inc
jae
mov
enter
add
popf
cmpsl
and
jns
int3
push
mov
xchg
test
jnp
out
xor
mov
mov
icebp
and
sbb
push
pop
dec
xchg
pop
sbb
sub
and
lock
jle
es
sbb
orb
popa
push
mov
loop
push
and
xchg
sub
subl
ss
adcb
adc
in
pop
mov
dec
add
out
shlb
shrl
xchg
repnz
pop
out
testb
mov
cmp
push
daa
insl
aas
xor
ret
inc
insb
lods
mov
sbb
mov
inc
test
int
mov
imul
scas
sbb
or
sar
decb
insb
or
andb
xchg
jae
fdivp
leave
jp
sbb
or
adc
ret
lret
shld
or
stos
dec
xchg
push
and
sub
fldl2e
ljmp
lock
sysexit
push
mov
inc
pop
ficomps
lds
xchg
push
mov
test
lretw
inc
xchg
mov
or
in
je
addl
pop
pop
clc
pop
pushl
sbb
mov
insl
das
jae
iret
add
fdivs
lea
mov
leave
pop
mov
add
jnp
or
ds
ja
insb
aad
rcrb
sbb
imul
pop
sub
stos
and
jae
sbb
push
int
pop
sub
adc
mov
mov
negl
cmp
js
enter
sbb
and
dec
in
test
lods
out
lret
mov
std
aas
dec
dec
or
shrb
data16
mov
insb
mov
jg
add
loopne
add
ja
pop
push
lahf
outsl
int
mov
push
cmc
mov
mov
andl
sbb
jecxz
push
cltd
movsb
push
xchg
and
xchg
shlb
rcll
insb
sbb
cmp
pop
out
or
mov
mov
mov
enter
jno
push
icebp
shrb
mov
jns
insb
paddusb
lahf
out
fadds
in
pop
cmpsl
dec
adc
dec
dec
es
mov
test
mov
jecxz
cmp
pop
insb
add
mov
inc
pop
xchg
xchg
inc
rolb
test
addb
pop
inc
xchg
dec
ja
cs
jne
rcr
std
adc
sahf
fisttpl
andb
pop
inc
stos
add
jle
dec
adcl
fldt
jnp
mov
leave
jns
xor
mov
push
lcall
push
aad
inc
mov
push
ficomps
mov
mov
popf
addr16
xchg
sbb
js
or
mov
jae
sub
add
outsl
cmpsl
adc
adc
mov
mov
in
and
gs
push
or
je
inc
mov
mov
pop
pop
inc
push
xor
jne
and
xchg
aad
add
lahf
mov
or
in
jmp
and
int3
cmp
gs
bound
mov
ret
shll
xacquire
push
les
mov
xchg
bound
push
loope
insb
mov
adc
and
es
mov
mov
call
imul
ja
int3
sbb
adc
lods
cs
test
mov
mov
daa
int3
jp
enter
mov
xor
jae
loopne
mov
imul
inc
ljmp
pop
adc
sub
add
mov
mov
lods
jle
adcb
xchg
mov
subl
sti
mov
mov
addr16
movsb
loope
mov
and
popf
dec
std
nop
mov
jnp
lock
sub
jmp
scas
or
nop
push
icebp
mov
dec
adc
cmp
mov
or
and
inc
movsl
out
or
clc
imul
out
add
sbbb
out
add
push
addl
dec
mov
xor
jge
pop
sbb
cli
mov
cmp
push
in
dec
jns
adc
std
sbb
sub
arpl
cmp
pop
sbb
adc
mov
adc
adc
int
int3
add
into
shrb
aaa
movsb
hlt
push
inc
ret
lret
mov
cltd
cmc
sti
and
mov
mov
xorb
outsb
xchg
scas
test
cmp
cmp
xlat
jp
scas
sbbb
sub
inc
andb
repnz
mov
sub
test
cmp
dec
rcr
push
mov
xor
lds
cmpsl
cmp
xchg
filds
pop
movsl
sub
cltd
mov
pop
leave
push
fs
shlb
push
xlat
je
fisttpl
cs
xor
cmp
shlb
push
mov
xor
scas
sti
mov
decl
xchg
adc
pop
movsl
inc
ficompl
int
insl
cld
lcall
addr16
sub
jl
gs
lcall
sti
push
xchg
and
aad
push
or
into
pushf
jno
sti
js
pop
dec
sti
mov
gs
pop
push
mov
inc
push
ror
mov
das
insl
or
enter
adc
jecxz
sbb
mov
mov
or
lret
push
push
out
add
imul
or
mov
hlt
push
lahf
lahf
or
mov
cmp
adc
mov
icebp
xchg
push
add
and
sbb
push
pop
shll
cmpsl
leave
pop
test
mov
popa
cmpsl
dec
sub
jl
out
mov
jns
dec
adc
mov
mov
mov
int3
mov
inc
loope
mov
cmp
mov
add
mov
jbe
mov
dec
mov
sub
insl
dec
sti
cli
scas
or
test
add
les
fdivrl
inc
and
icebp
pop
bound
cmp
mov
or
loop
andl
mov
fs
cmp
dec
lret
icebp
mov
je
adc
pusha
pop
loopne
adc
jg
pushf
adcl
add
and
test
mov
in
xchg
pop
pushw
movsb
jnp
xchg
mov
mov
sbb
ja
idiv
cmc
ja
add
add
sub
pop
jle
mov
outsb
dec
or
jl
jb
in
imull
out
ret
icebp
adc
sub
xchg
xlat
push
jle
insb
fldenv
test
mov
lods
in
xchg
push
xchg
inc
sbb
fld1
xchg
mov
popf
mov
cmp
mov
into
arpl
mov
mov
out
aaa
je
stc
or
pop
outsl
mov
out
gs
fwait
adc
xchg
xchg
pop
pop
test
mov
aas
pushf
adc
jg
jl
fisttpl
call
arpl
fbld
xchg
mov
cmp
jo
leave
cmp
ss
es
jmp
js
and
das
mov
add
mov
sub
imul
lea
loope
ja
imulb
jae
sub
pop
dec
mov
pop
xchg
xor
xor
les
pop
sbb
sahf
fdivl
xchg
inc
scas
mov
jnp
movsl
cmp
mov
cmpsl
inc
cmpsl
cmp
xchg
out
mull
xchg
clc
dec
lock
sub
inc
sbb
imul
sbb
sbb
aad
ret
test
push
mov
orl
xchg
movsl
das
aad
mov
or
popa
cmp
mov
cmp
mov
push
mov
xor
loopne
das
aas
das
add
adc
mov
push
jnp
mov
arpl
cmp
sbb
hlt
gs
bound
xor
bound
pop
inc
pop
jmp
les
insl
lret
inc
sub
fisttps
adc
mov
inc
cmc
ficoms
pop
lods
push
outsl
ret
popf
sbb
adc
movsl
inc
out
mov
out
rolb
jb
xlat
xchg
push
mov
sub
and
xor
call
push
pop
mov
sarl
cli
scas
dec
lcall
mov
cwtl
shl
test
lcall
fldcw
jne
or
ficoml
js
cmc
mov
mov
xchg
insb
incb
add
mov
add
shlb
aam
mov
out
sub
adc
lods
fs
out
je
aas
lret
cwtl
xor
mov
ja
mov
inc
mov
jnp
fdivrl
xchg
xor
jmp
push
jl
push
xchg
pop
push
xor
and
inc
inc
sub
cmp
dec
nop
dec
push
lahf
push
mov
push
jg
jp
jb
lods
mov
cli
pop
or
mov
arpl
ljmp
mov
xchg
xchg
and
popa
inc
ret
aaa
sub
aas
push
mov
jno
adc
lea
inc
int3
pop
jge
shr
xor
int3
imul
test
mov
stos
loop
pop
mov
insb
imul
jle
mov
call
jl
xchg
mov
fs
lret
fisubrs
mov
cmpsl
mov
mov
popl
jl
clc
xor
sub
sub
push
ficoml
mov
outsl
int3
xchg
add
ljmp
jp
sub
or
lea
lods
push
mov
stos
test
mov
addr16
out
mov
movsb
sbb
clc
mov
cmpsl
inc
xchg
ja
jle
stos
sbb
enter
push
sarl
test
pop
shr
sbbb
mov
xor
das
nop
adc
leave
cmp
xchg
add
movsb
push
lcall
or
mov
in
xchg
mov
xchg
xor
lods
lock
fidivs
xchg
cmpsl
xchg
mov
sbb
push
repz
loope,pn
push
int
push
add
repnz
daa
mov
out
push
pop
adc
ds
dec
je
cmpb
fsubs
jl
fsubl
les
and
jns
fdivr
sbb
pop
sbb
outsl
sahf
shlb
mov
aam
adc
fiaddl
xchg
cmp
mov
or
dec
imul
jp
sbb
xchg
cmp
cwtl
icebp
jecxz
and
lods
ss
cmp
int3
xor
cmp
femms
mov
xor
out
std
push
pop
test
inc
mov
in
dec
sbb
adcl
jge
aas
mov
inc
dec
mov
jp
add
add
fs
sbb
or
lahf
mov
cmp
ljmp
pop
call
or
fs
rcrb
mov
mov
push
in
jns
scas
lret
sub
mov
mov
lcall
data16
test
pop
or
pop
repnz
sub
rclb
and
ljmp
add
dec
inc
repnz
mov
popf
mov
xor
and
pop
in
xchg
je
adc
daa
imul
aas
or
loope
push
aas
imul
bound
out
and
jmp
inc
xor
test
sub
sbb
mov
add
sub
adc
inc
in
popf
jl
mov
jnp
daa
cltd
and
mov
fsubrl
lcall
stos
cmp
mov
enter
xchg
push
add
sub
iret
sbb
pop
jg
andl
and
test
sub
cmp
iret
add
pop
and
nop
in
mov
cltd
mov
lcall
addl
js
push
les
sub
icebp
lock
das
mov
xchg
push
stos
cmpsl
movsb
out
push
adc
pop
xchg
aas
in
jp
mov
mov
sbb
lods
mov
sub
imul
in
cmp
nop
in
test
fildl
lret
mov
xchg
out
mov
popa
pop
leave
fisubrl
loopne
adc
bound
jno
test
mov
enter
jmp
adc
jae
push
push
inc
leave
mov
test
jns
mov
inc
mov
dec
cwtl
jg
add
sbb
imul
inc
or
pusha
mov
inc
dec
dec
ret
mov
cmp
hlt
push
dec
push
and
out
inc
testb
insb
and
adc
lret
and
fdivl
call
sti
imul
ss
addps
mov
hlt
mov
jno
loopne
xchg
mov
in
mov
pop
xor
push
mov
cltd
mov
inc
scas
outsl
clc
sahf
loope
les
pop
out
mov
movsl
in
sbb
out
int3
lods
lret
pop
pop
dec
mov
int3
test
test
jns
push
pop
scas
addl
movsl
and
mov
icebp
dec
aam
mov
fcomps
mov
sbb
out
mov
mov
andl
out
mov
inc
mov
xlat
cmp
xor
fsubrl
inc
lret
or
sbb
andb
iret
xor
fistpl
stos
xlat
push
mov
inc
xchg
jb
and
mov
jmp
lahf
fdivrs
cmpsl
rcrl
or
jl
or
mov
jns
add
loop
stc
fsubrs
xchg
ss
data16
mov
std
popf
lods
jno
mov
fs
and
cmc
adc
test
enter
sahf
xor
add
ds
clc
or
repnz
xchg
insb
sbb
fnstcw
push
rorb
xor
jl
enter
stos
lock
push
push
jb
mov
xchg
mov
repz
inc
inc
call
push
jno
popf
popa
loop
icebp
inc
fwait
mov
mov
ret
cwtl
movsb
leave
lahf
and
push
xchg
fsubs
and
xlat
mov
lret
add
jg
fldenv
inc
push
cld
xchg
es
mov
stos
xchg
mov
cwtl
jmp
cmp
fwait
inc
test
insb
xchg
push
sub
rolb
inc
arpl
sub
add
pop
fsubrl
in
push
shl
mov
es
and
and
xor
xor
scas
mov
lea
cltd
xor
xlat
pop
cmpsb
aaa
push
push
aaa
pop
dec
jbe
cltd
or
pop
push
jo
sti
xchg
sub
bound
cmc
stos
push
mov
lods
js
nop
ror
xchg
adc
loope
xchg
jle
mov
cmp
dec
cli
inc
inc
push
push
icebp
aaa
xchg
dec
cltd
out
jnp
cmp
loope
lods
leave
inc
enter
xchg
xchg
movsl
or
add
jg
push
xchg
movsb
jl
aad
dec
push
xorb
lret
or
dec
sub
jno
es
cmp
shlb
xor
fimull
jecxz
das
push
push
sahf
mov
add
imul
mov
jae
std
mov
ljmp
in
and
jne
inc
sbb
ror
mov
adc
inc
mov
mov
in
pushf
orb
aaa
xlat
jb
sub
xchg
cld
lock
push
dec
lcall
rolb
xorb
jbe
fldt
mov
outsl
lea
lret
jecxz
sahf
sub
shlb
sbb
xor
and
and
lods
and
and
nop
sar
adc
xchg
dec
push
popa
data16
hlt
repz
fisubrl
add
sbb
test
mov
lods
data16
sbb
push
push
fwait
inc
mov
sbb
scas
sbb
incl
insb
cltd
push
xchg
dec
xor
addr16
mov
sub
fnstenv
dec
outsb
push
inc
imul
aad
lea
mov
lock
adc
fidivrl
pop
daa
mov
inc
test
or
fwait
sbb
ds
cmp
jmp
ret
inc
mov
add
xor
xchg
push
mov
xchg
std
dec
xorb
xor
mov
mov
in
gs
enter
pop
mov
push
ss
jo
pop
cmp
xchg
out
sbb
mov
mov
xchg
sub
stc
jae
fwait
ljmp
dec
call
and
xchg
lea
cmp
mov
xlat
lock
push
xor
cmpsl
sti
test
mov
jo
push
inc
rclb
repz
scas
sbbb
mov
dec
rcrb
add
sub
jge
pop
fadd
push
nop
ja
jo
pop
fldcw
xchg
push
mov
sahf
ror
mov
addr16
test
mov
jne
dec
test
enter
mov
cld
sbb
jns
xchg
mov
dec
scas
mov
ret
jae
loop
or
bound
mov
add
lods
outsb
and
enter
outsb
jle
jns
das
lret
mov
aam
call
xchg
in
jnp
adc
and
xchg
cmp
jo
bound
dec
inc
add
jbe
xor
outsb
jbe
pop
leave
incb
pop
dec
bswap
jbe
movnti
stos
loope
or
xlat
shrl
lock
adc
gs
and
pop
aam
movsb
adc
shl
jge
xor
call
loope
sub
push
sbb
mov
ret
adc
mov
inc
subb
sub
das
insb
inc
out
repnz
fs
pop
pop
sbb
add
bound
push
mov
pusha
aam
loope
shl
mov
mov
xor
mov
ja,pt
inc
mov
or
out
xlat
sub
jb
test
mov
loopne
pop
aad
dec
icebp
outsl
add
loope
push
in
xor
jmp
mov
push
arpl
inc
iret
jle
jno
jb
bound
pop
or
jno
pop
inc
call
iret
andb
mov
insl
mov
std
mov
lret
ljmp
sbb
sub
movsb
sub
lods
enter
inc
and
cli
lods
mov
out
jge
ds
adc
inc
filds
push
or
outsl
mov
push
sbb
push
rorl
xor
push
sbb
inc
mov
and
out
sub
lods
jmp
add
movsl
xchg
xchg
push
loope
xchg
out
in
cmp
clc
pop
mov
and
mov
pop
mov
pushf
fdivs
adc
shr
xchg
leave
lock
push
xchg
pop
mov
test
call
fs
adc
je
je
cmp
mov
jno
push
inc
std
and
jl
imul
ret
int3
and
shrb
jle
das
inc
fldt
or
sub
icebp
push
out
adc
leave
mov
or
mov
aam
inc
cmp
or
mov
xor
clc
int
popf
test
fld
lods
push
mov
or
aaa
fiadds
adc
icebp
push
mov
ds
jae
xlat
test
nop
testl
sbbb
js
dec
cmpl
mov
mov
adc
add
mov
xchg
dec
mov
aaa
inc
mov
add
daa
cltd
ret
and
hlt
jb
lcall
ret
popf
inc
mov
cmp
cmp
sub
idivb
and
jno
jbe
ret
mov
sti
mov
clc
es
sub
movsb
cld
mov
jne
mov
and
dec
jg
jb
pop
in
dec
fadds
jo
rol
outsb
inc
outsl
je
push
lods
lock
xor
pusha
adc
xchg
mov
lretw
xchg
test
popa
cmp
sbb
sub
fstpl
add
es
add
and
mov
mov
dec
test
dec
je
sbb
scas
adc
mov
cs
sbb
and
and
mov
xchg
das
pop
cs
add
pop
popa
mov
es
lret
xchg
test
and
divb
jno
pop
mov
push
inc
fstpl
scas
sub
mov
lret
add
xor
pop
mov
xchg
mov
or
or
push
das
outsb
adc
nop
in
lock
in
dec
push
pop
incb
fidivl
xorb
dec
and
jnp
mov
inc
jns
popa
arpl
pop
mov
jnp
std
cltd
adc
push
push
test
mov
pop
sti
and
mov
sbb
push
fisubs
push
adc
adc
mov
call
xchg
insl
es
push
pop
dec
xchg
test
sbb
stos
dec
stos
bound
jl
mov
mov
pop
iret
stos
loop
jle
mov
dec
jb
adc
mov
loope
ret
or
lods
test
insb
xchg
xor
dec
lret
stos
test
dec
xchg
data16
jmp
int3
sbb
xchg
push
cmp
cltd
pop
xchg
fisttpl
jecxz
xchg
push
scas
lahf
and
push
jns
adc
adc
lret
mov
sub
pushf
cmp
je
push
bound
nop
cwtl
push
dec
test
mov
inc
push
ds
mov
stc
jle
xlat
fidivrs
lret
shlb
test
mov
clc
test
mov
stc
out
lods
popa
test
mov
pop
push
push
fmulp
or
fstps
in
subb
flds
or
xchg
into
fildll
shrl
add
pop
xchg
ss
mov
push
incl
cmc
push
lods
inc
push
pop
mov
jecxz
mov
and
dec
xor
pop
lods
jno
or
lock
jo
stos
cmp
fwait
nop
jmp
add
mov
mov
sbb
stos
sbbl
nop
incl
sahf
out
dec
repz
test
jbe
cmp
inc
push
aam
lahf
xchg
and
pop
shlb
movsb
cmpb
inc
add
cmpsl
lds
push
lret
cld
xchg
mov
mov
add
xchg
loop
pusha
xchg
pusha
cmp
lods
out
adc
mov
pop
jl
jno
in
dec
js,pn
fs
int3
pop
jns
mov
jno
jle
pop
inc
push
js
pop
ja
jb
adc
movsb
fnstenv
xchg
addl
sub
nop
or
xor
scas
sub
fwait
jae
call
dec
sbb
jbe
xlat
cld
lods
add
bound
scas
jns
cmp
dec
cltd
add
mov
mov
pop
stc
and
xchg
mov
hlt
clc
mov
aam
mov
jbe
out
sub
addl
jae
add
cld
pop
jns
mov
lods
xor
mov
mov
pop
mov
mov
dec
cmp
lods
addb
arpl
push
xchg
sub
fwait
out
or
jg
sub
jp
xor
out
jp
fidivl
std
mov
imul
cli
xor
xchg
sti
push
roll
mov
mov
jns
cmpsb
xchg
sub
and
cmp
fwait
xor
movsl
jnp
pushf
out
aas
test
mov
mov
sbb
jo
call
dec
scas
test
fwait
insl
mov
icebp
xchg
data16
fwait
jo
xchg
cmc
mov
adc
lds
cmp
std
adc
push
add
outsl
or
mov
pop
mov
stos
and
stos
je
pop
push
insb
xchg
push
push
mov
or
popa
sub
mov
rcll
in
insb
xor
setno
fbstp
imull
jg
shlb
lret
sbb
out
outsb
push
outsb
aad
mov
pop
ljmp
and
js
fstpt
and
push
add
int3
jo
mov
and
out
or
or
fnsave
mov
xchg
scas
iret
add
jo
mov
scas
jle
pop
lsl
lahf
mov
mov
pop
and
or
cmp
mov
dec
xchg
lcall
cmp
in
xchg
lea
mov
mov
aam
cld
movsl
imul
mov
lods
mov
das
lods
sahf
push
push
sbb
jae
call
mov
push
mov
in
lods
xchg
icebp
leave
cli
pop
sti
sub
add
in
outsl
push
add
add
push
mov
mov
add
jmp
mov
or
jg
bnd
repnz
lret
and
dec
sahf
cmpsl
clc
inc
int
cli
scas
mov
mov
daa
mov
stos
xorb
pop
pop
popa
in
pushl
sub
add
cltd
dec
cltd
pand
call
aas
add
mov
loopne
dec
scas
or
in
fsts
loope
mov
xchg
lock
push
out
jnp
push
cmpsb
or
les
push
in
sbb
xor
push
cmp
addl
shr
or
decb
incl
test
rclb
in
and
mov
and
imul
popf
jo
mov
xorl
popf
out
in
shll
mov
and
cli
clc
and
and
add
popa
gs
scas
stc
les
push
mov
and
out
movsb
mov
mov
xor
scas
mov
cs
popa
mov
pushf
out
fiaddl
je
js
push
aam
movsb
mov
push
and
xchg
sub
fs
aad
xchg
mov
movsl
and
lods
mov
mov
and
adcl
mov
xchg
cmp
out
push
push
in
adc
xor
dec
sub
shrl
inc
mov
add
xor
out
int
enter
in
dec
cmp
fidivrl
mov
cmp
mov
aam
adc
cmc
enter
sbb
outsl
out
jp
in
test
sbb
mov
leave
andb
loopne
iret
lock
jmp
cmpsl
mov
adcb
push
or
cwtl
ret
and
push
jle
jo
mov
or
out
pop
imul
xchg
repz
adc
mov
pop
out
rcll
shl
adc
sarb
and
std
mov
sbb
outsb
jns
les
fildl
dec
jno
sbb
jecxz
int
or
mulb
in
adc
jmp
ds
cmpsl
lods
mov
adc
ret
scas
jnp
cmpl
decb
inc
cld
rol
sbb
mov
jne
enter
pop
test
xor
xchg
mov
jmp
in
lret
cmp
mov
in
add
jge
inc
xchg
jle
add
xorl
outsl
jbe
aas
or
ret
movsl
sub
aas
and
outsl
ret
mov
jnp
adc
shll
mov
inc
mov
and
xchg
aas
in
lea
xor
ss
sbb
pushf
arpl
fsubp
xlat
push
imul
adc
loope
mov
mov
adcb
xlat
add
fcom
mov
insb
movsl
xor
pop
xchg
and
or
cmp
ljmp
nop
int3
popa
cs
inc
adc
ljmp
cmp
cmp
dec
rcll
push
or
xchg
adc
cmpsl
clc
jo
push
jns
outsb
fst
into
loop
xchg
fwait
outsl
pushf
mov
test
leave
fwait
mov
mov
pop
adc
ud2
and
push
ret
arpl
add
cmp
xor
cmp
test
pop
push
adc
or
enter
pop
or
insb
mov
in
addr16
cmpsl
add
loope
sbb
mov
into
rcr
push
cmp
lock
dec
push
pushf
gs
mov
in
lock
xor
ss
pop
jo
push
imul
pop
movsb
cmp
and
inc
leave
repnz
sti
jp
cmpsl
push
xchg
mov
pushl
ds
add
clc
jns
inc
lret
jmp
mov
ss
adc
repnz
lock
negb
push
jns
ss
ja
sub
rorl
sbb
in
cli
sub
fucomip
cmp
jno
push
push
ljmp
imul
inc
push
das
mov
fiadds
mov
jecxz
or
call
cmp
leave
add
add
cmp
cmpsl
xor
push
shrb
jle
inc
fs
mov
cmpsl
xchg
mov
cli
xchg
repnz
and
xchg
push
pop
mov
inc
repz
mov
adc
jmp
fs
jge
cmpsl
in
icebp
test
xchg
push
or
inc
add
aaa
out
cmpsb
jo
sub
cmp
aam
xchg
jecxz
sub
into
pop
mov
cltd
and
rcrl
mov
and
inc
sub
rorb
aas
jg
lahf
and
shlb
xchg
sahf
push
mov
cli
mov
mov
addl
or
xor
movsb
jp
das
mov
mov
and
fsubs
imul
addb
rorb
push
out
pop
sahf
call
outsl
mov
xchg
test
aam
jmp
mov
mov
lds
mov
daa
imul
sub
xchg
jecxz
push
cwtl
cmc
adc
or
mov
inc
rorl
vcvtss2si
mov
or
outsb
rcrl
ret
icebp
jecxz
pop
int3
enter
mov
adc
daa
pop
in
pop
mov
or
fcomps
scas
imul
cmp
decl
jp
xchg
inc
or
shr
jecxz
xor
movl
jne
pop
insl
ret
add
push
pusha
enter
sbb
add
xlat
test
xor
loop
fldt
adcb
pop
inc
incb
mov
cltd
cmp
mov
fdivl
lock
inc
lods
insb
push
push
xchg
lds
pop
pop
adc
rclb
xorl
mov
ret
add
cmp
fsubrs
push
cli
cmp
dec
jge
js
popa
lret
pop
leave
push
mov
xchg
and
movsb
insb
sbb
jmp
adc
ss
mov
lahf
sbb
lds
dec
fsubs
mov
shll
jae
lahf
mov
push
ds
cwtl
and
mov
nop
test
lock
call
jbe
pop
lds
popa
fsubs
cmpsb
mov
mov
inc
and
push
pop
in
inc
sbb
ja
inc
cmpsb
dec
and
pop
andl
ss
imul
adc
lahf
lcall
cmp
mov
dec
pop
adc
mov
inc
clc
xchg
sbb
dec
ljmp
enter
add
pop
into
test
aas
aam
lock
inc
ljmp
jmp
pop
jmp
in
nop
pop
outsl
rol
xchg
xor
fwait
movsl
jnp
fldenv
push
jle
xchg
mov
xchg
inc
mov
incb
aam
pop
or
cs
mov
push
fldenv
push
mov
mov
pop
push
test
leave
or
je
pop
scas
stos
mov
psubusw
shll
lock
mov
cmp
sub
pop
std
jmp
xchg
clc
dec
fsubrl
mov
push
mov
lds
xchg
sub
xlat
add
push
cmpsl
sbb
sbb
imul
imul
inc
das
addr16
insb
repnz
aaa
in
scas
stc
dec
lea
andb
mov
jb
mov
jge
mov
std
sbb
jb
jle
cwtl
ja
push
lret
ret
fcomp
dec
ret
js
in
cltd
insb
sbb
ficoml
fidivrl
int
inc
js
adc
pop
mov
xor
pop
sarb
outsl
pusha
sub
xor
jno
or
decb
sarb
dec
data16
repz
mov
enter
mov
mov
ret
and
sbb
dec
popa
cmp
repnz
or
lods
les
xchg
das
dec
fwait
adc
or
cmp
dec
bound
hlt
in
cltd
mov
jnp
pop
sbb
aas
or
imul
dec
lods
ljmp
je
adc
clc
clc
cltd
dec
loope
pop
push
icebp
inc
test
push
enter
xorl
or
xchg
dec
xchg
push
pop
aas
rol
jno
cmp
lahf
lods
js
push
in
mov
mov
mov
jl
lds
hlt
pop
lcall
icebp
cmp
mov
mov
xor
add
inc
cmp
cmp
push
pop
enter
daa
pusha
xchg
fwait
lret
es
sbb
jp
test
mov
cmp
xchg
or
add
cmpsl
mov
ds
pop
and
fstpl
cld
xchg
cmp
xchg
fcmovnu
adc
rorl
call
jne
xor
leave
push
xchg
loop
test
jae
xchg
aaa
imul
mov
mov
je
sub
sub
fdivrl
mov
fsubrl
sbb
dec
or
cmp
add
jb
out
xor
xchg
jl
test
insl
pop
add
pop
lahf
stc
mov
xor
xchg
pop
sub
es
test
testl
push
mov
and
mov
scas
add
fidivrl
out
shl
push
dec
push
xchg
jbe
fisubrs
mov
into
test
jmp
jle
cld
sbb
xor
xor
in
xchg
lds
loope
sbb
push
cmp
mov
mov
pop
icebp
cwtl
mov
mov
loop
mov
sbb
ljmp
xchg
jle
cs
inc
in
int
mov
out
sbb
test
inc
scas
or
dec
adc
mov
cmpsb
push
fcoml
inc
jo
ss
jl
je
mov
sbb
xor
cmp
daa
adc
pop
nop
xor
mov
insb
or
xchg
aad
shlb
js
add
fisubs
push
daa
ror
cwtl
sbb
shll
divb
jle
popf
test
or
inc
movsb
movsb
pop
rcrl
pop
invd
dec
mov
std
dec
jle
ljmp
xchg
sub
mov
ds
add
loop
ret
mov
mov
pop
dec
lods
add
cmc
ret
mov
rcrl
mov
fs
mov
mov
or
in
ljmp
xor
push
cld
mov
jns
loope
mov
lods
lret
xor
or
scas
imul
cs
jne
fistl
mulb
cmp
pop
mov
inc
mov
nop
addb
in
scas
stc
es
std
into
cmp
sbb
insb
insl
mov
and
test
aam
cld
notb
sub
mov
pop
movsl
gs
xor
push
shrb
je
pusha
push
inc
jnp
add
pop
shrb
iret
out
popf
and
xor
lods
dec
cmpsl
jbe
in
adc
inc
out
enter
sahf
mov
dec
push
dec
pop
inc
cltd
jge
adc
repnz
movsl
mov
ret
es
add
std
push
or
ja
push
sub
sbb
sub
mov
pop
movsb
jg,pt
cli
or
add
scas
mov
mov
in
scas
jno
shlb
sub
ss
cld
inc
adc
cwtl
test
adc
sbb
popf
in
jle
lcall
bt
rolb
stos
add
roll
lea
invd
movsl
mov
scas
shrb
mov
loop
cs
cld
mov
mov
or
push
imulb
push
scas
sar
jb
ds
xor
xchg
inc
or
in
aad
aas
test
adc
xchg
ja
popf
les
sahf
out
xchg
test
aaa
jb
add
hlt
das
aaa
mov
shrl
cs
test
rcrb
xor
and
aas
and
ret
loopne
aam
clc
mov
pusha
jmp
shll
mov
lcall
mov
adc
mov
jae
cmc
mov
pop
lret
and
inc
pop
push
sbb
adc
fiaddl
pusha
push
dec
pop
or
and
mov
sub
push
xor
lods
mov
and
das
pop
push
push
mov
cmp
add
hlt
sub
test
ss
repnz
xor
or
push
dec
fld
xchg
cmpb
sub
and
int
cmp
mov
xor
mov
mov
iret
sbb
or
nop
aas
add
ja
scas
push
mov
stos
dec
loope
pop
nop
xchg
repz
sbb
mov
add
xchg
sti
push
xchg
es
rcrl
cmp
mov
into
mov
rcrb
xor
mov
enter
cmp
fdivrl
mov
or
fldl
in
jbe
arpl
in
add
inc
adc
outsb
int3
aas
cmc
and
jle
mov
xorb
movsb
idivl
mov
je
arpl
lcall
adc
xchg
test
ljmp
and
dec
pop
cld
dec
rcrl
ror
inc
add
pop
xchg
cmp
aam
mov
push
and
out
cmpsl
or
scas
ficompl
sti
pop
out
fidivrs
movsl
in
enter
sbb
mov
adc
movsl
cwtl
cmp
mov
inc
xchg
or
xchg
fcomps
fstp
or
push
xlat
xor
stos
add
pop
dec
or
cld
push
mov
test
jmp
subb
pusha
popf
jns
jecxz
test
nop
sub
jo
sbb
xor
inc
loope
sub
jnp
int
popa
inc
test
jnp
pushf
sti
sbb
subl
out
pop
inc
pushl
xor
test
cmp
push
or
test
add
ds
xor
push
outsb
add
sbb
mov
add
insb
lret
fimuls
push
movsb
daa
mov
push
push
loope
xchg
inc
dec
pop
cmp
test
mov
loope
mov
lcall
insb
mov
fistpll
enter
cmc
mov
mov
dec
mov
add
pop
pop
or
repz
mov
arpl
pusha
sub
add
jecxz
inc
hlt
push
xchg
jecxz
push
sbb
cmp
fisttps
dec
mov
mov
cmp
je
loope
sbb
jae
sub
jge
xor
jo
aam
fwait
mov
lret
push
icebp
mov
push
xchg
add
mov
pop
gs
sti
and
mov
adc
rcrb
pop
adc
lahf
idivl
aad
pop
aas
lea
jg
loope
shrb
dec
xchg
inc
movsl
hlt
dec
jl
jns
push
pushf
adc
mov
sbb
mov
xchg
add
inc
fcmovne
jae
aad
xor
into
push
adc
fiaddl
bsf
lret
cmpsb
inc
ja
and
push
mov
rcll
iret
ja
loop
inc
jne
dec
cs
or
dec
pop
cmp
gs
and
subl
adcl
fimull
xor
sub
mov
sti
int
addr16
pop
mov
mov
repz
test
jp
sbb
pop
mov
fimuls
loopne
mov
jbe
nop
outsb
xor
adc
add
inc
cli
stc
mov
cmc
insl
js
sub
and
imul
test
sbb
push
mov
add
lret
mov
adc
xor
dec
xchg
xchg
lahf
add
and
sub
out
adc
inc
stc
jge
nop
xor
fsubs
icebp
inc
xor
pop
cltd
mov
test
jge
cmpsb
inc
jns
push
lret
arpl
call
xchg
inc
jecxz
inc
cld
repz
nop
outsb
xchg
das
fstpl
mov
push
popf
das
cltd
imulb
pop
iret
mov
jl
mov
ljmp
es
aas
adc
mov
lock
cld
push
cmp
call
popf
pop
stos
mov
popa
xlat
cmp
pop
sbbl
xor
testb
hlt
mov
jle
adc
pop
js
dec
push
mov
sarl
adc
or
dec
inc
lods
lahf
mov
lcall
adc
push
cli
push
sub
dec
mov
mov
pop
loope
push
dec
or
lea
push
or
in
adc
int
out
xor
pop
jmp
cmp
pushf
fldt
fwait
pop
or
xor
mov
int3
js
mov
mov
insl
add
stc
cmp
scas
dec
lods
insb
imulb
jb
cltd
ds
sbbl
subb
addr16
lret
aas
dec
mov
int3
push
xor
shll
les
cltd
insl
loope
sahf
lock
sti
mov
jecxz
cmp
ror
outsb
mov
sbb
inc
fwait
idiv
aad
pop
dec
stos
or
adc
push
inc
and
pop
out
adc
jb
xor
stc
aam
sub
repnz
repnz
scas
fs
adc
lods
cli
and
adc
and
dec
leave
leave
fwait
and
jo
mov
adc
cmp
int3
add
push
stos
push
je
cwtl
fidivs
xchg
inc
cmpsl
pop
xorb
enter
xchg
cmpsl
push
add
inc
jb
iret
push
cmp
icebp
subl
xchg
xorl
out
sub
adc
loope
xor
in
lahf
rolb
nop
into
movhlps
outsb
out
lcall
xchg
xchg
shlb
push
mov
data16
clc
outsl
dec
lea
lods
adc
jnp
sti
jno
stos
push
fistl
cmp
inc
cld
dec
push
adc
in
vmovdqa
popf
cmp
jle
jns
pop
pop
jae
cli
mov
or
push
aas
or
xchg
mov
or
shrb
xor
fstl
sub
jbe
mov
sarl
pop
xchg
psubw
fisttps
lds
cmp
xchg
cmp
rolb
xor
insl
gs
or
dec
int
fsubrs
sbb
inc
add
dec
push
ficoms
mov
jl
cmp
jns
movsl
adc
dec
push
inc
mov
mov
in
daa
pop
mov
adc
add
push
lret
data16
mov
pushf
xor
movsl
aad
inc
nop
push
movsl
fimull
sub
out
and
xchg
pop
in
xor
test
fisubrl
pop
sub
xchg
lock
loope
and
dec
xor
jl
fnstenv
int
test
daa
call
adc
cld
mov
dec
outsl
add
call
xor
aas
je
dec
pop
mov
je
inc
lock
lods
xor
xchg
rorb
movsl
scas
mov
daa
inc
lock
adc
xchg
inc
xor
aaa
shl
ja
cs
adcb
pop
sbb
push
test
xor
repnz
jno
push
add
and
pop
xor
mov
cmp
inc
push
repz
pop
clc
cmpsl
pop
sbb
int3
cmp
inc
pop
pop
and
stos
xchg
sbb
cmp
es
xor
jbe
out
in
push
xor
dec
push
xadd
es
pushf
push
dec
push
pop
std
mov
cmp
movsl
loopne
aas
daa
inc
dec
mov
mov
xor
mov
push
mov
stos
ror
ljmp
or
test
cmp
sub
dec
in
mov
filds
xlat
push
movsb
jo
mov
pop
nop
mov
dec
jle
mov
aam
jp
sbb
pop
mov
repz
push
sti
pop
stc
inc
jecxz
adc
cmp
jnp
in
fisttpl
shl
inc
xchg
movsl
xchg
lds
es
test
daa
in
jp
inc
ficomps
jbe
and
gs
and
lea
aaa
daa
mov
pop
push
insl
mov
dec
xorl
imul
jae
xchg
push
cltd
ja
test
sbb
adc
mov
mov
push
scas
addr16
rolb
or
xor
loopne
fcompl
clc
sbb
xor
int
hlt
xor
push
pop
loope
cltd
push
push
ds
insl
adc
inc
adc
and
daa
sub
jns
test
lods
add
in
or
jns
ficompl
dec
pop
enter
rcr
jl
dec
jl
push
sbbl
cmc
cwtl
aam
dec
xor
push
bound
mov
push
fbstp
sbb
bound
xchg
pop
frstor
or
and
cli
mov
jns
push
push
pop
mov
aaa
popa
cld
out
sbb
sub
sti
cmp
adc
jnp
test
push
pop
pop
das
push
jge
sub
in
and
sub
je
lret
fnstsw
fistps
imul
push
in
xor
in
in
ss
cmp
add
cmp
sbb
movsb
and
dec
push
ljmp
jecxz
sbb
lea
jbe
data16
outsb
sbb
shr
or
rolb
dec
dec
sbb
hlt
and
test
mov
push
or
jecxz
out
mov
xchg
inc
dec
aam
mov
aam
notb
jmp
mov
mov
xor
mov
push
inc
xchg
in
rcr
shl
scas
insl
inc
int3
xchg
imul
loop
mov
pop
test
cmp
je
popa
test
ljmp
pushf
shlb
jae
popa
sti
and
adc
aad
repnz
stos
or
movl
mov
inc
adc
nop
inc
push
xor
add
mov
xchg
jge
or
push
push
dec
leave
jae
ret
or
adc
mov
sarb
mov
fldl
popa
and
jne
sbb
jne
ret
xchg
ss
dec
mov
ficoml
or
cmpsb
xchg
popf
ja
adc
adc
sbb
pop
sahf
mov
jae
jbe
jge
jmp
cltd
jo
jae
push
or
jnp
js
pop
mov
or
sbbb
pop
out
xchg
pop
sbb
gs
add
daa
in
push
out
push
xchg
inc
insl
je
imul
xchg
sub
xor
imul
sbb
aaa
je
sbbb
mov
aaa
and
imul
push
jle
ret
idivl
jnp
out
xchg
icebp
cmp
lods
ret
sub
les
jnp
jne
adc
rorb
cmp
jbe
ret
or
sbb
dec
fadd
jo
lret
in
sub
js
je
push
xchg
outsl
jp
sub
sbb
ss
xchg
test
enter
loopne
dec
or
mov
adc
out
mov
inc
pop
dec
lret
and
inc
fwait
sbb
pop
push
outsb
or
shr
push
jmp
fimuls
aas
or
adc
push
jp
out
push
aam
add
adc
mov
push
mov
in
lea
mov
mov
sub
push
into
sub
in
xchg
loop
sbb
xchg
testl
pop
movsl
add
scas
sub
repnz
repnz
mov
gs
shrb
mov
setg
or
aas
jae
cmpsl
mov
fwait
sbb
ss
inc
xor
pop
loope
popa
cli
ret
iret
push
pop
or
stc
ret
loop
addr16
mov
mov
sub
outsl
mov
ss
loopne
rcll
push
jp
out
cwtl
imul
jle
test
pushf
inc
push
fidivl
pop
enter
adc
leave
jp
movsl
sbb
out
andps
and
xchg
popf
test
imul
flds
jns
repz
inc
mov
dec
push
pusha
loope
push
scas
xchg
wbinvd
iret
cwtl
adc
sub
push
ja
out
rcll
mov
pop
repz
adc
fsubrl
dec
push
pop
ss
icebp
repz
rolb
out
and
xchg
in
aas
pop
fistpll
or
dec
notl
ficoml
in
scas
sti
pushf
push
aas
mov
mov
pop
lock
mov
xor
jge
arpl
push
adc
gs
lea
pop
fldenv
xor
jp
and
lahf
pusha
jle
jp
adc
xlat
adc
mov
iret
xor
inc
or
push
mov
dec
popa
jnp
xchg
int
push
pop
pop
inc
inc
add
std
in
cmp
sysexit
xchg
repnz
movsl
sub
enter
mov
push
push
xlat
mov
inc
jbe
cmp
add
icebp
mov
mov
add
mov
fisubs
gs
and
lcall
repz
shll
jg
stos
cli
enter
adc
lahf
jecxz
and
sbb
mov
ss
push
push
jns
fstpt
pop
jne
ss
jecxz
push
fildl
imul
sub
sbb
pop
mov
pop
enter
ds
sahf
pop
icebp
mov
jl
mov
push
clc
adc
cmp
lcall
jnp
mov
test
add
js
dec
and
scas
and
mov
movsb
cmp
fsubrp
mov
cmpsb
repz
fisubs
psubusw
shrb
push
ljmp
nop
and
and
sub
mov
jns
dec
ss
pop
cld
push
mov
inc
or
and
jmp
push
popa
jg
inc
mov
add
and
add
adcl
push
mov
fwait
sbb
popa
loop
xor
pop
daa
shl
pusha
in
cmp
add
xorb
inc
mov
adc
jno
or
lock
add
pop
fildll
lret
imul
ret
cs
stos
sub
push
icebp
mov
js
sub
push
lea
mov
mov
pop
push
cmp
inc
es
call
and
sub
out
mov
inc
lock
or
rol
pop
pop
inc
inc
sub
xor
pop
push
cs
xchg
pop
add
inc
cli
stos
test
dec
pop
dec
or
out
data16
fdivrl
sbb
mov
lahf
mov
lock
push
jns
stos
sbb
fists
dec
and
mov
add
dec
pop
test
mov
aam
aaa
adc
repnz
movsb
and
ljmp
icebp
addl
and
push
cmp
jl
mov
imul
mov
test
stos
mov
cmp
mov
pop
lods
daa
xchg
xor
mov
xor
xchg
lock
and
arpl
mov
jmp
cmp
push
cmp
fiaddl
ret
mov
mov
xchg
mov
cmp
push
dec
sub
jge
adc
loopne
out
jne
das
enter
mov
inc
aaa
fiadds
mov
jl
ret
push
and
cmp
mov
imul
mov
imul
outsl
data16
jle
push
adc
sub
mov
sub
into
xchg
stc
inc
adc
add
sbb
in
xchg
cld
adc
mov
pop
mov
mov
out
jge
mov
xor
push
daa
lea
inc
mov
out
leave
xchg
lods
push
test
es
adc
shll
xor
sti
lods
repnz
outsb
jnp
push
mov
mov
mov
cmpsb
mull
loope
mov
pop
sub
daa
cli
cmp
dec
dec
jb
iret
iret
mov
jns
in
cmpsb
repz
es
lea
sbb
stos
es
xchg
cmp
cmp
mov
mov
pop
pop
sahf
out
mov
jge
sbb
xchg
fmulp
cmc
std
in
sbbl
jno
js
add
imul
xor
cmp
xchg
arpl
jp
push
xor
je
adc
jge
or
stc
mov
pop
or
xor
push
or
mov
mov
adc
lea
in
es
xor
nop
cmp
test
or
adc
xchg
add
cmpsl
and
cld
mov
push
scas
fstpl
sbb
cmp
inc
and
mov
imul
jns
loopne
dec
dec
cmpsb
jecxz
icebp
sbbb
push
xor
xchg
mov
cmp
sub
xor
xchg
and
jno
mull
aam
les
adc
out
sub
jp
shll
mov
add
shlb
lock
cmc
or
sbb
mulb
cmpsl
jecxz
sbb
data16
ficomps
xchg
adc
fdivs
push
mov
mov
or
xor
mov
cmp
dec
mov
add
aam
xchg
xchg
xor
and
fwait
aam
inc
cmpsl
add
inc
int
mov
xlat
add
pusha
dec
in
mov
xor
ja
add
push
mov
pop
jnp
push
xchg
fsubrl
or
fldenv
or
sbb
inc
clc
aam
cmpsl
addb
dec
dec
jecxz
sub
movsb
sti
lahf
push
add
add
or
jle
and
and
das
dec
test
jl
shl
dec
mov
cmc
inc
andl
adc
or
xchg
sub
pop
les
inc
sbb
cli
movsl
mov
push
dec
mov
scas
push
cmp
mov
mov
mov
or
sub
lods
sbb
gs
mov
fistl
jnp
inc
mov
jg
hlt
xchg
xchg
cli
fwait
mov
jnp
pop
outsl
js
cmc
movsb
mov
ja
inc
adc
mov
out
and
mov
call
fwait
out
shlb
jl
imul
fstps
push
xchg
and
into
xchg
xlat
aaa
out
lods
sub
in
push
test
cltd
xchg
mov
sub
fdivr
mov
insl
fwait
sarb
stos
ret
push
and
fdivrl
mov
les
pop
xor
cmp
mov
cmp
adc
adc
push
scas
mov
cld
es
inc
in
adc
or
loopne
subl
push
mov
mov
js
pop
xchg
dec
inc
mov
pop
js
xor
inc
hlt
push
test
aaa
mov
add
mov
or
sete
aas
cli
sub
lret
psubusb
leave
iret
hlt
out
and
sbb
out
jb,pn
xchg
test
outsb
cmp
lcall
add
cmp
adc
dec
jg
mov
mov
cmp
test
daa
int3
sbb
rolb
mov
jp
lods
cld
leave
xchg
push
xor
call
out
push
test
lcall
lock
mov
and
aad
outsl
stos
fwait
xor
xchg
movsl
sbb
sub
sahf
divb
test
and
dec
jno
jnp
and
add
or
sub
push
mov
push
sti
jle
xchg
xchg
xor
imul
in
mov
mov
dec
add
ret
hlt
push
jp
std
adc
and
popf
frstor
mov
add
lret
popf
fdivrl
pop
jns
and
push
dec
test
xchg
cmp
ljmp
bound
add
xchg
or
gs
out
add
push
mov
leave
fdivs
xchg
out
cmp
scas
xor
sub
add
stc
data16
mov
jecxz
jp
loop
dec
mov
push
sti
out
sar
imul
jno
or
sarb
add
mov
out
popa
or
cwtl
dec
orl
sub
iret
nop
mov
sub
pop
rcrl
push
adc
xchg
adc
dec
popf
sbb
mov
sub
lret
inc
dec
xchg
std
xchg
lahf
jp
xchg
daa
pop
xchg
lock
and
sbb
or
dec
xchg
cmp
rcll
cmp
ret
push
push
daa
push
iret
leave
mov
out
dec
and
pop
jns
lock
add
xchg
pop
lods
adc
rol
mov
sub
dec
adc
xor
jle
xor
push
jns
ds
aad
rcrb
sub
test
and
xchg
mov
mov
mov
mov
jg
sub
and
dec
mov
in
sub
je
xchg
cmp
pop
mov
cmpsl
adc
dec
pop
repnz
mov
andl
sub
push
sbb
sbb
pop
xlat
unpckhps
cs
ss
sti
repz
mov
push
stc
leave
pop
addr16
inc
dec
push
notl
es
or
data16
dec
sarl
icebp
jl
push
mov
and
cmp
fmul
sub
jo
imul
adc
mov
push
or
addr16
lock
dec
jne
mov
pop
mov
lahf
jl
aam
xor
push
mov
fisubrl
mov
push
out
push
jae
ds
add
mov
mov
outsl
sbb
sbbb
test
hlt
lods
sahf
adc
test
shrl
ja
or
int3
jae
hlt
mov
lock
mov
outsl
int
xchg
in
fcoms
xor
or
das
or
cmpsl
sbb
cmp
loopne
sbb
pop
push
cmp
hlt
jne
lcall
mov
icebp
scas
mov
xchg
inc
insb
cmp
or
xchg
xchg
sub
sahf
mov
cmp
jmp
jns
arpl
fimull
push
xor
cmp
jno
fiaddl
xchg
cmpsl
mov
mov
in
cmpsl
push
cmpsl
inc
orl
ret
cmp
int
xchg
mov
xchg
xchg
sti
inc
and
sbbl
pop
push
pusha
movsl
fwait
clc
das
xchg
daa
stos
mov
push
push
pusha
xor
mov
cmc
imul
xor
mov
and
inc
decl
sbb
mov
xchg
scas
rorl
lahf
add
enter
pop
mov
xor
pop
les
lods
mov
ret
sub
shl
jp,pt
cld
ss
dec
sti
cwtl
xchg
or
sahf
in
mov
mov
cwtl
aam
sub
jge
push
shrl
test
and
cmp
cmc
fmuls
mov
clc
testb
jb
push
es
mov
jle
shlb
fstpt
adc
or
pusha
mov
push
pop
cmp
mov
and
mov
inc
pop
mov
jo
xchg
sub
in
xchg
movsb
ss
inc
daa
cmp
sbb
fnstcw
mov
ret
xlat
int
cmp
lahf
xchg
jne
pop
cmc
xor
jbe
pop
in
push
and
js
jle
adc
sub
xchg
out
or
stos
int3
sahf
ljmp
or
mov
sbb
outsb
inc
test
pop
xor
scas
cmpsl
dec
mov
fbstp
jb
or
or
push
test
xlat
pop
xor
adc
dec
aas
push
or
imul
movsb
shll
mov
adc
es
sahf
notl
leave
aam
aas
push
pop
jmp
mov
imul
jge
bound
mov
mov
andb
mov
rorb
mov
add
lahf
outsl
mov
popf
mov
icebp
sbb
inc
xchg
adc
xchg
or
mov
repz
fiaddl
or
loop
ljmp
arpl
cmp
xor
shrb
push
mov
repnz
mov
outsl
or
out
cmp
or
cli
and
loope
push
orl
fincstp
adcw
sub
cltd
scas
pop
in
sub
jo
mov
inc
xor
add
stc
es
xchg
xchg
rcl
add
mov
sti
ret
lea
jno
frstor
outsb
jne
shlb
sub
fisubl
hlt
push
inc
std
xor
jp
or
pop
push
sbb
jae
subl
lret
dec
test
jne
mov
xor
dec
dec
neg
mov
stc
mov
inc
dec
hlt
jnp
lcall
lods
mov
mov
repnz
inc
daa
adc
push
lods
sub
rolb
les
lods
push
pop
adc
jo
xchg
test
mov
adc
xor
andb
sbb
dec
xchg
cmc
and
push
outsl
std
jg
push
repz
mov
popf
sbb
ja
xor
mov
jl
mov
cmp
dec
xchg
xor
xor
in
icebp
push
lods
dec
ret
out
insb
adc
popa
int
inc
fstps
out
or
push
jae
gs
xor
and
cmp
not
call
push
arpl
pop
mov
rorl
int3
push
lock
repnz
cmpsb
lcall
dec
pop
dec
inc
sbb
movsb
test
pop
or
negl
or
popf
sti
aaa
in
jb
pop
mov
jmp
sbb
mov
push
cmpsl
mov
pop
cmp
scas
jne
sub
pop
cs
dec
mov
js
adc
insb
cmc
ds
das
sub
sbb
iret
subps
inc
xor
ret
jl
cld
jge
movsb
push
shl
mov
ret
adc
xor
arpl
xor
xor
cmpb
mov
ret
ret
lods
repnz
push
or
jp
cmp
dec
jbe
ret
add
in
mov
and
xchg
xor
rolb
ret
add
or
lock
jne
push
lds
inc
lahf
in
iret
pop
sub
mov
in
sbb
test
xchg
inc
shll
out
jge
fs
push
ja
jne
mov
adc
andl
in
sub
inc
subl
gs
mov
jp
pop
sub
sbb
roll
in
out
gs
inc
sbb
and
sbb
scas
dec
imul
pop
xor
orl
xor
jmp
jle
lea
xchg
lock
pop
gs
mov
scas
add
loopne
popa
add
add
and
or
sti
xchg
push
icebp
mov
std
decl
test
pop
fwait
shl
call
ss
sub
nop
stos
or
dec
aad
outsl
sbb
nop
scas
lret
mov
insb
or
stos
fcmovnb
int
sar
orb
add
mov
jno
xchg
pop
xor
ret
mov
aas
adc
adc
div
sub
into
and
mov
push
cmp
ret
inc
les
and
ds
xchg
repz
out
mov
sub
cmc
imul
ja
cld
popa
jle
xor
and
insl
shll
cmp
or
push
push
or
testb
push
xor
dec
mov
jecxz
aad
lea
cmp
test
xchg
ds
jecxz
aad
loopne
scas
push
jle
sub
adc
xchg
repnz
enter
push
sub
jbe
mov
and
push
sub
repnz
pop
push
jge
ret
sti
ret
mov
and
or
aas
adc
xchg
push
rclb
arpl
or
icebp
popa
lds
clc
ljmp
cld
or
jmp
sub
cld
jg
inc
pop
orb
inc
or
movsb
dec
jecxz
or
cmpsl
and
fiadds
mov
and
bound
sub
stc
dec
cwtl
adc
cmc
icebp
pusha
pop
repnz
lret
xchg
dec
jg
adc
xor
aam
cmp
or
sbb
add
push
jbe
cmpsb
pushl
ret
idiv
xchg
in
and
mov
cltd
inc
aaa
dec
rcrl
and
pop
ret
popf
ja
bound
leave
test
dec
lods
xchg
leave
mov
push
into
stos
inc
or
pop
mov
mov
sbb
rclb
mov
divb
cmp
insl
dec
jbe
scas
fisubrl
arpl
pop
enter
xchg
inc
mov
push
xchg
dec
sub
rcrl
jnp
mov
test
and
xor
cs
jmp
inc
icebp
outsb
mov
stc
sbb
sbb
cs
mov
jb
jp
popa
insl
pop
adc
sbb
jecxz
rol
xchg
insl
mov
out
mov
repz
jge
dec
mov
addr16
jge
or
dec
out
decb
decb
dec
popa
insl
in
call
jbe
repz
mov
in
pop
movsl
push
mov
sarb
mov
ss
mov
fmul
aaa
addb
jmp
into
adc
mov
lret
sar
mulb
push
aad
outsl
sahf
and
mov
scas
pop
adc
push
inc
and
addb
gs
mov
inc
cmp
or
orl
mov
and
cwtl
add
in
repnz
je
mov
cld
por
jbe
imul
jns
xlat
repnz
es
sbb
mov
cmp
lods
ret
xchg
lods
xchg
cwtl
dec
mov
clc
pusha
iret
loop
xchg
pop
xlat
add
lods
stos
xor
fs
xchg
fs
lods
bnd
jne
pop
js
or
lods
fisttpll
push
mov
movsl
mov
pop
mov
pushf
call
sub
int3
mov
repnz
or
mov
xchg
movsl
shr
jge
mov
mov
es
mov
jne
push
xchg
cltd
sub
pop
std
lret
dec
pop
dec
jp
dec
rcl
aaa
pushf
jae
lret
push
pushf
jge
repnz
ret
cmp
stos
or
addl
add
inc
inc
push
mov
leave
mov
fcoml
jo
rolb
add
and
adcl
mov
push
mov
sbb
js
sbb
mov
fs
push
cmp
outsl
or
add
insb
popa
push
in
lret
mov
clc
mov
punpckhdq
cmp
movsl
sub
mov
loopne
sub
sbb
mov
movsl
sbb
push
in
popa
int
push
inc
mov
or
and
push
push
mov
push
je
adc
nop
cltd
stos
outsl
dec
je
add
lds
iret
xchg
mov
andb
fdivs
in
sub
or
cmp
sahf
adc
xorl
repnz
xor
in
pop
sub
aaa
adc
notb
dec
lea
icebp
dec
pop
shrl
xchg
mov
daa
negl
mov
inc
jb
push
push
adc
sbb
inc
or
inc
movsl
mov
pop
rclb
popa
sbb
and
sub
bound
pusha
push
andb
std
inc
mov
push
movsb
or
xor
es
add
jae
loope
mov
jg
out
cltd
icebp
imul
sub
call
pusha
ja
popf
pushf
movsb
testl
fwait
cmp
jne
xor
popf
xchg
and
aaa
cli
sti
cmpsb
add
sbb
call
pop
mull
fs
cmovl
pop
pop
and
fldl
pushf
stc
adc
inc
stos
push
daa
and
loop
xchg
push
jo
sbb
inc
mov
out
scas
loopne
push
pop
and
fimull
out
mov
mov
in
sub
mov
adc
stos
test
push
clc
fwait
pop
hlt
into
ja
dec
push
les
mov
faddl
pop
mov
subb
and
cmp
adc
out
push
loope
or
sbb
loop
sbb
test
add
xchg
xor
xlat
cmc
int
out
inc
jecxz
rcrl
push
stc
imulb
inc
aaa
mov
je
mov
movsl
jle
cltd
jb
xchg
xchg
leave
jmp
pop
adc
pop
push
lcall
stos
rorb
xor
aas
jp
push
shl
jmp
mov
cmp
sub
pusha
pmaxub
mov
mov
nop
daa
inc
jecxz
stos
in
daa
mov
sbb
cmc
int3
push
out
inc
jbe
push
mov
out
in
ds
dec
jns
dec
cmp
inc
push
xchg
inc
jg
jnp
popf
push
js
or
and
lods
dec
mov
es
mov
cmp
insb
mov
into
jecxz
repz
adc
outsb
xor
cli
xchg
xor
jbe
lret
mov
cmp
repnz
inc
dec
push
jg
movsb
add
inc
scas
push
jb
push
jmp
out
dec
sbb
mov
xchg
not
mov
sub
ret
mov
jp
xor
es
fsts
push
dec
jbe
jns
jo
idivl
jmp
lcall
jg
test
bound
lret
mov
cmp
inc
xor
jns
push
xor
inc
jne
ret
or
sub
sub
scas
pop
cmp
xor
lods
cltd
pop
cli
jl
jge
cmp
pop
loop
mov
xor
add
push
bound
inc
cs
sbb
cmp
mov
cs
mov
mov
mov
sbbb
ds
icebp
push
xchg
std
mov
test
pop
rclb
mov
mov
xchg
inc
mov
test
ja
dec
in
push
and
jo
inc
sub
mov
pop
jbe
or
gs
stos
xlat
xchg
insl
push
test
in
jb
lds
push
ror
popa
inc
adc
pop
mov
addr16
and
sub
adc
in
sub
pop
pop
mov
jbe
arpl
fwait
lahf
jle
cmpsb
in
loop
push
and
mov
mov
inc
in
push
sbb
xor
icebp
push
sahf
int
fcmove
fwait
mov
pop
jmp
pop
rorl
pop
or
imul
jae
addr16
mov
cmp
and
mov
roll
mov
dec
out
dec
aad
fbstp
sbb
fdiv
shr
mov
out
adc
pop
pop
cmc
jg
lock
es
mov
cmpsl
inc
movsb
repnz
cltd
and
mov
mov
in
es
cli
gs
out
sbb
add
mov
mov
clc
jns
sarb
jmp
es
imul
pop
cltd
into
pop
inc
jg
int3
in
repnz
stc
imul
inc
hlt
cmc
sbb
sbb
lahf
pop
out
mov
rcr
aas
ds
ja
mov
or
push
dec
cwtl
gs
dec
dec
fs
mov
aam
icebp
mov
loope
sub
imul
push
in
fnsetpm(287
andb
out
scas
and
std
jno
in
adc
pop
shrb
enter
inc
sub
or
jnp
add
scas
adc
sub
int3
scas
mov
popf
sub
dec
sub
fbld
push
xchg
dec
insb
cmp
push
xorb
cmpsl
das
jl
ja
adc
bound
sbb
cmp
stos
outsb
imul
and
jge
leave
or
dec
sbb
iret
pop
cmp
inc
sub
cmp
call
aam
mov
mov
sub
insb
daa
int3
sbb
inc
xchg
mov
hlt
sti
xchg
inc
cltd
jns
dec
mov
fisubrs
and
nop
insl
clc
lret
movsb
and
dec
sbb
jg
mov
cmp
cmp
fstpt
iret
dec
lock
or
xlat
or
sbb
lret
cmp
sbb
fiaddl
aas
stos
pop
mov
push
out
pop
dec
add
push
cmpsb
lret
dec
xchg
jnp
mov
or
les
adc
lcall
std
out
movsl
ret
test
xor
sbb
test
dec
jecxz
mov
popa
mov
cmp
insl
ds
dec
test
andb
ja
mov
mov
push
jb
cltd
mov
ret
test
jno
pop
inc
nop
notl
xchg
or
sbb
xchg
sti
inc
fcoml
push
mov
jp
frstor
shll
xchg
jl
adc
fbstp
push
jp
sbb
mov
int
push
mov
jb
insl
jno
mov
jo
xchg
cmp
inc
push
mov
std
icebp
out
mov
jmp
out
lods
int3
out
cmc
scas
aas
not
icebp
stc
push
xchg
loopne
pop
mov
sbb
dec
fwait
iret
fmull
dec
mov
les
and
adc
arpl
dec
sbb
outsl
dec
xor
jmp
pop
sub
jmp
insb
lock
mov
mov
sbb
nop
mov
sti
cltd
mov
push
and
sbb
aam
xchg
loopne
loopne
mov
mov
pop
ds
mov
aad
xchg
fucomip
push
out
dec
mov
adc
push
out
xchg
idivb
jmp
jo
jbe
inc
push
aas
xor
aad
jae
cld
mov
outsb
fwait
sahf
dec
int
or
or
notl
mov
mov
jnp
ljmp
out
scas
pushf
fistps
jmp
enter
sahf
sbb
mov
adc
push
aad
sbb
arpl
pop
loop
rorb
js
push
push
mov
out
push
lods
sahf
rol
lds
inc
ss
mov
inc
repz
push
sti
push
addb
mov
push
xor
imul
mov
iret
add
pop
mov
lahf
sub
adc
sbb
aad
push
es
shll
test
insb
ret
xor
xor
addr16
mov
dec
rclb
in
imul
shll
push
mov
in
and
sub
push
sbb
roll
inc
push
xor
pushf
ret
push
and
mov
pop
cmpsl
cli
push
pop
xchg
outsl
mov
es
ja
xchg
lret
out
and
mov
lret
mov
ficoml
lret
xor
dec
stos
or
jbe
push
pop
add
jl
aad
sub
push
mov
ds
jbe
aam
aas
adc
mov
cltd
shlb
fcoms
xor
jnp
cmp
ret
dec
inc
inc
in
fwait
inc
insb
jmp
inc
inc
push
mov
add
jmp
sti
ret
mull
popa
inc
cmpsl
add
inc
adc
insb
dec
fsts
push
xor
clc
out
jle
mov
push
mov
loop
lock
jg
imul
mov
lds
popa
shlb
fisttpl
mov
add
fcoms
or
adc
addr16
clc
adc
int3
movsb
daa
xor
into
xchg
test
mov
subb
or
inc
xchg
insb
sub
mov
cmp
ror
in
mov
icebp
cwtl
mov
lock
sub
stos
jg
jmp
iret
cmpsl
mov
mov
lods
jge
sahf
sahf
aad
lret
push
push
mov
adc
xchg
aad
insl
add
jbe
push
pop
mov
sbb
pop
ret
lahf
mov
scas
jp
rorl
push
xlat
mov
and
repz
mov
repz
inc
aas
stos
add
sub
mov
in
push
pop
leave
pop
ficompl
push
cmp
orl
xchg
stos
jae
jge
out
jge
xor
sbb
cmp
call
cmpsb
jns,pt
inc
aaa
sub
iret
movhps
or
or
add
sbb
push
adc
and
push
in
cmpsl
lahf
sub
outsl
fcoml
fisubs
xor
push
ret
scas
aam
mov
scas
cmp
test
out
cmc
xor
sahf
insb
out
inc
sbb
dec
or
cltd
in
adc
mov
enter
icebp
xor
mov
mov
repnz
dec
dec
loopne
test
adc
frstor
nop
stos
adc
sbb
mov
gs
sti
popa
mov
sub
adc
addr16
mov
push
xorl
sbb
movsb
xorb
dec
fnsetpm(287
cld
push
cli
test
mov
jl
lock
xor
jbe
outsb
inc
les
test
push
inc
push
sub
jp
call
or
push
mov
jle
mov
dec
push
stc
pop
dec
imul
push
push
push
mov
mov
pop
cmc
in
mov
mov
xchg
mov
test
push
mov
pushf
iret
insb
dec
aas
adc
cmp
jo
imul
jmp
dec
and
dec
scas
mov
pushf
call
jl
push
jg
xchg
mov
cmp
mov
cmpsl
sub
fs
leave
rcrb
xchg
xor
fldl
test
jns
and
xlat
les
aad
ss
and
in
xchg
xchg
cmpsb
in
adc
popf
enter
adc
jecxz
sub
cmp
test
and
pop
sub
jmp
xor
pavgw
jecxz
adc
pop
mov
jns
adc
bound
push
push
add
sbb
aas
rcrb
mov
loop
cmp
jbe
mov
cmp
repz
sub
roll
orl
stc
outsl
adc
fisttpll
les
test
pop
sub
outsl
aam
jnp
movsb
push
pop
pop
popa
xchg
dec
cmc
and
cmp
xchg
fidivrl
jle
mov
sub
lods
ja
mov
mov
addr16
insl
ss
push
xor
inc
jmp
pop
test
cmp
mov
ret
jmp
pop
into
lahf
hlt
enter
pusha
popf
push
jo
xchg
cwtl
adc
pushf
jnp
sahf
cld
sbb
scas
xchg
fs
cmc
icebp
sbb
xor
fcoml
call
or
push
mov
mov
gs
inc
pop
out
rcrl
out
push
mov
pop
iret
add
dec
das
daa
mov
cmpsl
xor
mov
sbb
adc
sbb
push
sub
aaa
adc
pop
cmp
pop
lea
mov
sbb
xchg
out
cmc
sbb
dec
std
pop
xchg
int
mov
sub
test
inc
sahf
mov
in
iret
adc
push
sub
push
mov
xor
inc
pop
psrlq
mov
shrl
xchg
iret
stc
jl
out
and
call
clc
ror
xchg
xlat
dec
jl
call
in
jns
adc
and
inc
mov
mov
jo
divb
fildl
sbb
pushf
insb
insb
sbb
mov
stos
fsubrs
adcl
fs
gs
aad
pop
cmp
xchg
mov
adc
hlt
adc
xchg
rcrl
jne
cmp
dec
xchg
cmp
inc
mov
ljmp
movsb
fistpll
fmulp
mov
shlb
test
out
sub
pop
inc
sub
xchg
dec
shll
mov
jnp
jne
xor
mov
test
test
mov
cmp
xlat
arpl
sub
sahf
push
lret
mov
sbb
and
into
xchg
daa
scas
adc
add
pop
ss
xchg
addb
dec
aad
inc
mov
call
movsb
ja
or
or
jmp
inc
shrd
aam
xchg
pop
mov
xchg
mov
mov
repz
fnsave
into
adc
sti
mull
lds
inc
mov
iret
and
enter
pop
inc
mov
sub
cmp
in
mov
adc
dec
mov
sbb
push
ret
shlb
popa
movb
mov
jne
push
fists
test
dec
rcrb
cmp
test
leave
mov
xchg
test
aad
popf
shlb
stos
and
fs
sbb
aam
rcll
xlat
outsl
fcmovu
popa
cmpsb
scas
subb
adc
mov
xor
sbb
mov
and
in
shlb
fs
cs
jle
das
rcr
jle
or
and
outsl
stos
inc
jl
xchg
sub
adc
xchg
inc
int
push
dec
lods
xlat
mov
jns
inc
push
lods
shlb
test
xor
dec
mov
imul
stos
or
pop
mov
xchg
nop
add
jmp
in
pop
sbb
pop
xchg
gs
or
nop
xchg
pop
jae
fmull
cmp
cmc
mov
adc
jne
mov
loope
aam
jb
pusha
xchg
jo
mov
xchg
cmc
mov
out
stos
mov
push
les
nop
subb
or
push
push
stos
daa
popa
fldcw
xchg
pushf
xor
stos
dec
sbb
aad
pop
hlt
adc
pop
jbe
push
jbe
scas
pop
mov
test
push
shlb
or
fsub
mov
daa
dec
sub
pusha
adc
adc
push
les
adc
stc
cwtl
lods
xchg
clc
out
dec
dec
sub
lcall
loopne
inc
sub
mov
inc
fisttpll
inc
movsl
dec
mov
mov
pop
jo
fisubl
aaa
or
jb
cmp
push
xchg
cmp
mov
mov
fldcw
cmp
shlb
mov
test
es
push
xchg
daa
mov
stos
aaa
pop
cs
add
stc
sub
loopne
mov
arpl
add
xchg
sub
xchg
or
test
sbb
mov
mov
ljmp
add
jbe
or
stc
cwtl
pop
inc
add
fwait
out
scas
int3
movsb
lods
add
adc
pop
xchg
xchg
cmpsb
or
es
cmp
xchg
jne
rorl
jbe
in
mov
mov
add
inc
cmp
mov
or
out
shll
xor
stos
lea
xor
inc
lods
fdivs
insb
sbb
bound
lcall
add
cmpsb
mov
and
mov
inc
cwtl
mov
imull
shll
xchg
fistpl
jo
pop
lahf
sbb
je,pt
dec
mov
out
xor
adc
scas
loopne
inc
pop
cltd
cltd
or
hlt
mul
mov
inc
mov
adc
xor
aaa
xor
push
ds
push
lret
das
adc
mov
jg
insb
xchg
outsb
shlb
arpl
popl
xchg
daa
sbb
icebp
jb
jbe
pop
push
jnp
test
jbe
rcrb
leave
and
testl
lods
rclb
sbb
xlat
xchg
clc
and
pop
add
rorb
mov
pop
or
or
in
or
into
imul
sbb
push
data16
cli
mov
out
sub
add
adc
sub
pop
xchg
mov
test
sbb
xchg
leave
frstor
hlt
cs
push
jne
add
inc
out
add
imul
aas
and
imul
adc
inc
jl
adc
je
pop
pop
push
cmp
pop
popf
flds
test
je
jbe
arpl
add
mov
pop
lcall
iret
sub
adc
stos
test
sarb
inc
ja
cmp
pop
push
push
mov
enter
mov
inc
or
pop
jle
xlat
repz
iret
aam
call
les
add
xchg
add
jmp
push
sub
sbb
jmp
mov
mov
cli
jp
negl
xchg
stc
mov
dec
aaa
mov
imul
mov
scas
fwait
dec
movsl
dec
jo
add
adc
mov
lret
dec
push
cmpsl
cmp
sbb
sub
jno
fidivl
icebp
lahf
and
ja
outsb
frstor
pop
sbb
in
jb
sub
xlat
dec
xchg
xor
mov
jnp
mov
cld
out
add
out
mov
in
lock
push
lret
or
fnstenv
psrad
js
in
cltd
cmpsl
mov
fisubl
cwtl
jnp
or
push
pop
test
cltd
mov
ss
gs
in
rcrl
icebp
nop
add
jno
add
mov
and
adc
mov
aad
sahf
scas
fidivrs
or
xlat
add
sub
mov
mov
dec
cmc
jg
jl
or
add
xchg
push
xchg
fildll
mov
jb
sbb
xor
loop
repz
add
call
orb
cmp
cmp
clc
jmp
mov
cmp
mov
mov
mov
lods
popf
int
outsb
mov
not
int3
push
call
mov
fwait
imul
push
adc
xor
aaa
aaa
jg
inc
lret
dec
movsb
or
pop
mov
xchg
test
mov
xchg
jne
and
ror
outsb
leave
pop
pusha
testl
add
mov
add
enter
fildll
push
add
aam
lds
pushf
jge
mov
addb
cmp
mov
mov
enter
arpl
aaa
jne
scas
or
mov
mov
fildl
xlat
lret
push
mov
ljmp
xchg
xor
xor
and
add
jle
out
push
xor
jno
je
dec
mov
in
leave
dec
xor
or
mov
xor
ret
icebp
sub
cld
lahf
add
pop
dec
ret
sub
and
popf
add
mov
sub
lret
mov
push
stos
xor
nop
pusha
jg
adc
jge
or
test
stc
add
push
iret
inc
enter
push
mov
repnz
cli
in
notl
dec
pushf
aad
dec
pop
fwait
mov
or
add
lcall
ljmp
testl
std
loope
pop
jg
inc
mov
xor
xlat
sub
xchg
xchg
jecxz
lea
or
push
push
shll
icebp
ret
inc
xchg
adc
xchg
mov
stc
jno
dec
not
mov
push
xor
xchg
out
ficomps
aam
stos
and
jp
sti
mov
cmp
dec
and
dec
or
xchg
xchg
or
sbb
orl
pop
roll
test
nop
xchg
mov
test
into
movsb
aad
insl
add
xlat
dec
inc
jns
add
xorb
je
xor
stos
mov
cmp
insb
shll
outsb
xor
dec
mov
add
sbbl
cmpsb
adc
enter
xchg
fmuls
mov
mov
ds
pop
ljmp
cmc
inc
cmp
mov
jecxz
int3
mov
notl
andb
aas
sub
mov
mov
or
inc
mov
jge
push
imul
jae
xchg
aas
jmp
lods
dec
cmp
xchg
cltd
in
dec
mov
insb
push
and
and
jge
dec
mov
adc
jo
clc
jecxz
fwait
add
or
bound
movsb
lcall
or
nop
sahf
les
mov
and
fdivp
xchg
and
sub
lret
mov
jnp
fnstsw
outsl
rcr
inc
mov
lea
stos
mov
mov
clc
jecxz
imul
fldenv
fwait
test
rclb
cld
popf
pop
xor
mov
push
ja
push
cwtl
rclb
cmc
ljmp
fldcw
outsl
gs
rolb
fidivrl
or
jp
xchg
imul
mov
or
std
ss
jl
pop
insb
or
loopne
sub
pop
adc
movsl
out
imul
test
mov
rcrl
sub
add
cmp
daa
and
addr16
and
xor
xor
pop
iret
rcr
adc
xchg
mov
add
cld
add
mov
adc
mov
stos
add
lret
jnp
pusha
inc
lock
sbb
lcall
xchg
in
dec
and
mov
sti
insl
jmp
inc
xlat
cmp
mov
out
mov
or
pushf
push
loopne
popa
jmp
mov
lea
xor
test
dec
jle
test
mov
mov
and
add
lret
daa
fcmovnu
pop
cltd
getsec
cmpl
mov
mov
sbbl
dec
jl
test
rcl
mov
mov
and
push
stc
addl
aad
or
cmp
jg
cld
fisubrs
xchg
scas
mov
aas
movsb
lcall
popa
adc
test
repnz
pop
pop
xchg
clc
pop
inc
rcl
sbb
inc
mov
test
into
sbb
mov
out
ret
jp
cwtl
jmp
jno
mov
fs
sarb
push
sbb
repnz
cmp
push
pop
mov
dec
jb
mov
xor
jae
mov
sahf
jno
mov
test
loop
sarl
cmp
ja
roll
frstor
adc
out
sti
or
push
pop
stc
add
and
lock
mov
rorb
mov
dec
mov
sbb
es
stc
outsb
frstor
pop
xor
xor
mov
mov
jns
cwtl
inc
push
dec
outsl
sub
shll
dec
dec
xchg
mov
pop
jns
loop
shll
xchg
and
loop
xchg
test
sbb
lock
xor
pop
subb
out
jno
sarl
inc
lret
bound
pusha
mov
je
test
decb
test
cmpl
xor
sub
pushl
shll
mov
repnz
push
pop
inc
scas
bound
fstpt
adc
pop
jns
mov
jecxz
and
daa
dec
xor
mov
fsubrl
test
xchg
ret
mov
cmp
adc
xchg
lcall
push
aas
hlt
xorl
mov
sub
ret
mov
and
adc
fwait
mov
decb
rcrl
xor
inc
xchg
sarl
mov
xchg
out
pop
in
rcrb
adc
cmpsl
es
jg
fcompl
imul
lods
lods
dec
push
scas
push
hlt
arpl
dec
adc
fisubs
inc
xor
insb
loope
sbb
lret
cwtl
push
hlt
imul
nop
or
xchg
aam
xor
push
sub
ss
xchg
dec
out
scas
shlb
std
dec
add
int
ja
push
xlat
loop
lds
mov
inc
sbb
fdivs
orb
mov
in
nop
cvtps2pi
fdivrs
rcr
adcb
popa
ret
cli
mov
loopne
and
jg
roll
outsl
push
fndisi(8087
adc
jae
lods
inc
mov
shll
dec
fwait
mov
cs
push
imul
push
adc
pop
pop
test
pushl
jg
je
xchg
push
fdivrl
sub
mov
jno
and
in
into
lret
inc
pushf
cmp
pop
add
insl
mov
imul
push
les
xor
push
or
inc
testb
addr16
fs
adc
or
stc
jns
sbb
mov
sub
sub
dec
xor
bound
test
popa
sahf
dec
mov
je
or
insl
jmp
cld
js
les
ljmp
out
cmpsl
mov
lock
aaa
cli
lret
and
jp
add
sub
loopne
test
int
scas
inc
faddl
xchg
outsl
enter
inc
lock
ss
inc
cmp
mov
and
adc
and
sbb
outsl
jp
cmp
xchg
xchg
popa
xchg
mov
rcl
lock
jb
rorl
pusha
push
push
enter
fcmovb
fimuls
js
dec
movsb
dec
sbb
je
lock
jle
sbb
call
je
dec
fs
arpl
cmp
int3
adc
sub
lret
sbb
mov
push
jge
push
outsb
lahf
in
pop
ficoms
lahf
pop
cmp
movsb
sbb
lea
inc
mov
and
mov
call
mov
data16
out
and
testl
cmc
subps
mov
gs
inc
test
out
or
pop
lret
xchg
test
mov
xchg
ja
adc
add
and
ret
gs
inc
test
adc
cmp
pop
in
mov
mov
adc
add
inc
dec
push
loope
jae
fldcw
sbb
jne
add
mov
add
nop
mov
pop
loop
scas
or
dec
fists
or
mov
jbe
xchg
cmp
or
mov
imul
mov
outsl
mov
scas
xor
out
push
adc
mov
xchg
or
cltd
sbb
mov
add
or
inc
insl
mov
jb
in
scas
or
lock
sti
sbb
cld
aaa
dec
push
lcall
rolb
jg
dec
adc
pop
sub
pop
hlt
hlt
cmp
cli
mov
jo
inc
loope
push
out
clc
push
lds
sbb
jbe
loope
cmp
pop
inc
jg
int3
cmp
lret
adcb
pushf
push
inc
mov
mov
movsb
push
aas
int3
mov
mov
sbb
in
movsb
aaa
stos
jg
outsl
lret
repnz
lahf
movsl
in
inc
add
sub
jae
pop
pop
or
pop
dec
mov
xchg
fsts
lcall
xorl
int
mov
andl
ficoml
cs
insl
push
mov
or
pop
cmp
fucomi
add
cmpsb
pop
pusha
add
in
pop
mov
cli
in
sub
cmpsl
int3
jmp
mov
dec
rolb
rcr
push
xor
adc
pop
xchg
add
xor
in
out
stos
sbb
and
inc
int3
outsb
push
jp
cmp
mov
mov
lret
lcall
add
jle
cmp
jae
mov
mov
pusha
inc
mov
mov
mov
mov
inc
insl
pop
sub
scas
sub
in
lahf
mov
in
jmp
rcrb
jg
pop
xor
jp
and
daa
mov
addr16
test
enter
fildll
mov
xchg
pusha
mov
fsub
mov
xchg
scas
sub
cmp
insl
ja
and
jl
xchg
xlat
fsubs
cli
pop
dec
das
sub
outsb
cltd
scas
lods
add
mov
push
call
or
xor
cmp
sahf
fdiv
xchg
xor
decl
push
nop
dec
fistpll
mov
into
clc
and
jle
jno
mov
mov
iret
mov
sbb
dec
mov
addr16
lcall
outsl
aas
sti
xor
push
scas
pop
aas
dec
nop
fwait
push
fadds
jecxz
outsb
cmpb
xor
jae
or
in
loope
mov
push
mov
push
scas
jne
sub
fstl
mov
std
push
mov
incl
mov
ficompl
sbb
pop
sbb
addr16
imul
add
es
cmp
icebp
loop
jnp
xchg
inc
or
scas
mov
insb
mov
daa
jo
lods
xor
lret
mov
pop
enter
jne
cltd
addb
push
add
fdivl
pop
sub
sub
test
push
mul
dec
pop
aaa
jns
lret
xchg
fldcw
jbe
push
fildll
out
je
push
jg
insb
mov
ret
adc
popa
sar
jg
adc
fistpl
div
pop
push
icebp
xchg
hlt
pop
and
cld
loop,pt
sbb
repnz
jl
fs
push
lfs
and
cmp
int3
jl
dec
push
scas
cmp
aas
daa
pushl
mov
mov
call
mov
fs
fisttpll
pop
and
rolb
stos
inc
mov
adc
push
pop
icebp
call
xchg
cld
jae
and
test
cmp
call
xchg
dec
sbb
cmp
and
bts
and
xor
sbb
out
mov
cli
pop
fstpl
lret
xchg
jg,pn
enter
xchg
jne
sub
mov
xchg
cmpsb
shl
sbb
clc
adc
sbb
pop
aas
adc
push
xchg
and
push
xchg
loop
inc
nop
rcrl
aas
sbb
mov
scas
data16
jbe
out
incb
out
xchg
pop
shlb
dec
xor
data16
jbe
mov
ljmp
or
ficoml
mov
and
sahf
dec
add
mov
push
cmp
fsts
outsb
cmc
adc
in
imull
scas
or
and
addr16
inc
xchg
les
mov
xchg
aad
mov
leave
ljmp
aam
rol
enter
sarb
loop
daa
jae
push
mov
pop
push
sub
repz
sti
out
push
in
in
mov
push
int3
or
mov
jp
ret
push
xchg
push
movsl
mov
or
inc
out
std
aaa
insl
mov
mov
lret
aaa
pop
xor
mov
in
movsb
icebp
cld
cmp
aaa
and
fwait
js
mov
and
mov
mov
sub
js
dec
ss
aaa
mov
adc
pop
movsl
daa
dec
adc
gs
lods
lret
mov
pop
aad
inc
faddl
inc
or
xor
loop
cmpsb
pusha
imul
imul
test
xlat
shlb
shlb
push
and
adcb
scas
sarl
sar
out
adc
insb
in
or
adcb
leave
pop
in
int
jne
add
push
mov
ja
xchg
icebp
fs
imul
or
pop
in
dec
lahf
movsl
lods
add
xor
dec
and
xor
pop
dec
popa
jbe
dec
fs
jbe
sti
pop
xchg
lret
pop
pop
dec
gs
cld
pop
push
pop
sbb
xchg
mov
cli
xchg
push
bnd
aas
fisubrl
sarb
mov
test
lret
dec
test
dec
addr16
jmp
jbe
repz
shrl
jle
or
cmp
aas
insl
test
cmp
xchg
ss
out
dec
cmp
add
xor
movsl
push
mov
mov
cmp
inc
shrb
inc
dec
cli
test
sub
subl
aad
cmp
scas
lds
cmp
mov
inc
pusha
stos
dec
fsts
inc
inc
and
mov
jle
in
sbbl
mov
pop
or
pop
cs
frstor
call
sbb
jg
roll
xor
es
push
xchg
cmpsl
push
rcr
dec
sbb
push
ror
sahf
fisubrl
push
das
or
out
mov
mov
dec
inc
push
mov
push
insl
imul
popf
stc
fisttpl
cli
jecxz
hlt
int3
out
sub
out
or
sbb
and
mov
fistpl
test
mov
sub
jae
subb
fwait
cmp
sarb
cmc
xchg
sub
pop
enter
xchg
lds
mov
mov
jl
xlat
adc
fwait
insl
and
or
adc
out
mov
jnp
dec
mov
push
mov
adc
xor
ja
cmp
daa
or
pop
inc
jnp
sub
jp
ja
inc
lret
push
jb
jne
lcall
int3
pop
ret
test
scas
loope
sti
data16
or
js
mov
sbb
xor
sub
test
cmp
cmp
aaa
add
fs
cwtl
cmp
scas
jp
cmp
fstpt
loopne
cli
clc
jge
les
data16
mov
jns
sub
ret
fdiv
mov
cmp
dec
int
cmp
jl
sbb
mov
les
cmp
pop
xor
or
or
adc
inc
mov
mov
jp
or
dec
adc
xchg
fisttpl
sbb
mov
dec
sbb
loope
or
loop
scas
cs
cli
mov
and
imul
ret
fdivl
test
sbb
dec
lds
jb
dec
inc
push
pop
filds
jnp
jb
mov
inc
hlt
inc
loopne
outsl
sti
es
loopne
mov
sbbl
subl
xchg
dec
mov
mov
clc
jo
or
push
xor
or
sbb
sub
add
sub
mov
push
mov
sub
sbb
popa
js
fimull
lret
ret
push
sub
sub
inc
push
pop
xor
mov
fistps
mov
mov
xor
idiv
outsb
outsl
jo
jg
rcr
dec
lods
push
ljmp
add
lds
add
pop
push
lods
fimuls
adc
pop
stos
xchg
loop
or
mov
in
jae
sbb
pushf
data16
mov
dec
sbb
push
popf
sbb
mov
jns
dec
sub
dec
sub
into
cmp
sbb
popf
mov
je
lret
in
xchg
enter
mov
call
cmpsb
cmp
ret
add
xchg
out
pop
mov
cmp
push
daa
aaa
idivb
arpl
pushl
mov
andb
inc
push
pop
mov
data16
pop
jae
inc
or
int3
lahf
pop
aaa
bound
sbb
xchg
jno
or
jp
repz
imul
add
mov
adc
sub
rorb
inc
mulb
mov
or
arpl
cs
std
cmp
add
es
pop
or
stos
loope
jge
jecxz
hlt
jmp
mov
fwait
fwait
mov
pop
icebp
std
jo
js
mov
sarb
aad
imul
mov
stos
test
leave
test
ret
sbb
inc
stos
push
sbb
outsl
rorl
shrb
cli
jge
mov
pop
insb
push
pop
es
push
xor
add
sbb
idivb
loope
pop
inc
rcrb
out
cmp
jmp
negl
pop
inc
xchg
xchg
pop
das
jno
call
pop
mov
fwait
dec
out
aaa
outsl
add
adc
lods
or
ja
pop
mov
push
pop
add
xlat
js
adc
in
xchg
add
dec
add
push
sbb
imul
cmp
mov
cmp
neg
fs
dec
add
cltd
das
and
ja
loopne
popf
aas
iret
mov
mov
inc
fs
dec
hlt
push
jp
cs
arpl
mov
sbb
jb
sub
dec
loope
sbb
mov
dec
std
add
pop
out
adc
xor
data16
xchg
mov
movsb
or
stos
ja
adc
mov
out
push
cmp
enter
cltd
jmp
ljmp
mov
xchg
or
add
xorl
lcall
push
sarb
scas
inc
add
xchg
pop
or
inc
pop
outsb
fcomps
xor
arpl
popf
add
pop
addb
sub
push
jge
inc
cld
jb
insb
inc
sti
gs
lea
inc
in
insl
mov
cltd
mov
pushw
pushf
jle
xor
xchg
es
ljmp
in
dec
outsb
cmp
clc
push
lea
addb
bswap
in
fidivrs
jns
sub
dec
rorb
xchg
cli
xor
es
inc
addb
dec
inc
out
xchg
or
clc
jmp
rdtsc
cld
or
pop
int3
and
pop
push
movsl
mov
sbb
arpl
into
adc
in
in
aam
les
popa
xor
add
or
rolw
je
pop
std
mov
in
test
test
sub
adc
mov
aam
call
pop
lods
int
push
test
inc
stos
mov
pop
cmpsb
fucomip
rol
movsl
push
cli
pop
pop
add
cli
mov
fcmovnbe
dec
idivl
xchg
pop
popa
inc
push
scas
ljmp
test
stc
cs
dec
fimuls
es
or
inc
push
mov
cmp
fucomp
int
aas
es
lods
mov
into
rcr
mov
or
pop
js
mov
lock
inc
pop
and
adcb
adc
or
gs
cmp
insb
popf
js
xchg
pop
or
loop
shll
sbb
push
fwait
and
movsb
xor
clc
xchg
sbb
xor
int
xchg
mov
mov
inc
pop
push
jo
ficomps
pop
inc
fstpl
or
cmpl
mov
fldenv
xchg
data16
hlt
test
xchg
dec
adcb
or
aad
jl
iret
dec
call
loop
or
mov
aaa
pop
and
push
insb
inc
mov
clc
dec
cmp
jae
fcmovu
cmp
mov
mov
sub
pop
ljmp
mov
stos
sbb
adc
daa
fsubl
loope
mov
testl
cmp
jbe
arpl
or
xor
cmpb
leave
rcrl
mov
xor
pop
dec
and
mov
mov
outsb
gs
cmpsb
pushf
stos
gs
in
sbb
cltd
fisttpll
mov
aam
mov
xor
es
test
push
sbb
pop
xor
mov
testb
imull
jecxz
inc
insl
or
sbb
ss
add
xor
cmc
das
adc
sti
aaa
lahf
outsb
insl
jg
xor
dec
inc
arpl
lods
pop
push
popf
inc
cwtl
imul
pop
mov
push
or
mov
bound
movsl
jnp
cmp
rcll
data16
push
cld
xchg
sub
jae
fidivl
or
sub
jmp
lods
jb
add
fsubs
cmpsl
ficoml
mov
jb
or
mov
into
xchg
scas
lds
lret
fisttpl
or
dec
push
dec
shl
aas
dec
or
inc
divb
jbe
push
or
aas
and
rorb
push
call
xchg
ss
lret
inc
mov
sarl
jp
testb
pusha
push
bound
icebp
int3
cmp
cli
mov
mov
fistpll
cmp
adc
dec
outsl
mov
pop
lods
xchg
pop
sub
pop
movsl
lods
push
mov
xor
out
in
inc
mov
fistpll
in
iret
popf
fistpll
icebp
cs
adc
pop
cld
shl
imul
xchg
inc
xchg
xor
and
add
insb
dec
ffreep
mov
xor
nop
or
mov
out
and
test
dec
das
fcmovnbe
push
call
fdivl
mov
movsl
std
mov
pop
jbe
mov
int
addr16
cli
jbe
rclb
les
sbb
jle
cmp
jb
inc
fwait
test
jae
xchg
xorb
icebp
bound
adc
push
xchg
sub
mov
imul
sub
hlt
xchg
out
xchg
or
into
cmp
push
sbb
scas
sub
imul
cmp
insl
int
add
lock
ja
jle
jo
dec
mov
imul
test
cmpb
add
int
sub
cld
cmpsb
cmp
xchg
mov
mov
push
inc
xchg
shlb
sbb
add
fabs
pop
inc
adc
jmp
sub
and
pusha
pop
decl
push
fstpt
sti
bound
dec
ret
pop
sar
mov
sti
lods
adc
lret
xor
ljmp
sbb
dec
jbe
and
cli
jo
outsl
xchg
sbb
mov
fstpt
stc
and
movsl
jnp
jg
xlat
mov
add
rcll
imul
pop
cmp
cmpsl
mov
inc
insl
cld
mov
jae
pop
sbb
scas
js
or
cltd
dec
cs
xor
jecxz
addr16
xlat
mov
mov
pop
ss
mov
mov
stos
mov
sub
add
jne
sti
shll
movsl
bound
mov
scas
mov
push
push
inc
cwtl
jp
lock
xchg
xor
inc
jg
jo
nop
cltd
sub
fiadds
jns
lea
shll
xchg
insb
push
aad
push
cmp
sbb
repz
fistps
adc
dec
sbb
repnz
jecxz
sbb
orb
repz
dec
movsl
out
stos
lods
dec
xor
into
js
outsl
sarb
cmp
mov
pop
dec
test
clc
repz
rcll
inc
cmp
pop
jns
mov
push
sbb
inc
fnstenv
call
sub
mov
add
lods
fistpll
cltd
movsb
add
outsl
int
push
cmpsb
fmuls
stos
loop
enter
dec
pop
les
mov
divb
out
in
leave
mov
cltd
push
cmpl
sbb
push
adc
add
js
inc
and
cmpsl
aas
jle
jmp
mov
xor
insl
xchg
in
push
mov
dec
aad
xor
popa
cmpsb
jg
and
lods
out
popf
andb
jmp
jo
mov
dec
add
inc
dec
mov
adc
sbb
iret
mov
mov
shrd
dec
das
test
pop
rolb
cmp
into
lea
repz
mov
or
dec
and
push
stos
fs
fmul
add
pop
push
cmp
sbb
inc
test
mov
jge
cmp
jbe
ret
or
push
inc
mov
or
push
xchg
or
jo
test
leave
sub
outsb
dec
cmp
mov
in
hlt
imul
mov
mov
jmp
cwtl
rcll
std
pusha
stc
ljmp
mov
insl
icebp
aas
rcrl
lds
mov
dec
popa
and
jle
scas
ja
and
xor
cmpsb
mov
loopne
lahf
imul
test
sub
inc
xor
sbb
xor
fadds
pop
and
pop
movsl
pop
out
adc
addb
lcall
jmp
or
add
out
lods
test
pop
dec
mov
scas
rep
mov
add
rcr
lds
xor
sahf
fcoml
dec
mov
xchg
sbb
pop
dec
dec
add
sbb
mov
sub
mov
jp
leave
shr
aaa
xchg
adc
add
cld
push
lret
xor
std
cmp
out
push
mov
jecxz
mov
stos
negb
push
test
sub
loopne
or
add
or
in
mov
repz
lcall
cli
adc
pop
fsubrl
jo
shll
dec
push
add
pop
mov
add
insl
and
insw
stos
or
mov
and
cmp
adc
clc
push
sahf
pop
aam
clc
pusha
je
sub
xchg
and
shll
pop
pusha
pop
pop
movsl
mov
jae
jae
adc
ret
lods
sbb
mov
cmc
inc
insl
mov
ds
or
repz
loopne
fcomps
xor
lcall
js
xchg
scas
addr16
sbb
xor
popa
dec
faddp
mov
sub
xchg
test
fxch
dec
jne
lods
inc
push
aaa
pop
pop
mov
mov
js
sub
int
das
or
xchg
push
mov
jmp
in
add
lret
gs
mov
shrb
sbb
jle
stos
sub
cmp
lahf
dec
loopne
pop
dec
and
cmpsb
mov
jae
inc
pushf
shl
ret
mov
imul
jae
sub
jo
rclb
daa
xor
shr
cmp
jecxz
leave
jp
adc
stos
and
in
daa
mov
sub
in
cli
mov
xor
jb
cmp
movsb
repz
dec
push
xchg
ljmp
call
push
cmp
or
sbb
push
movsb
push
jl
dec
xchg
push
sub
push
push
mov
xor
shlb
into
sub
shrl
js
fidivrs
jo
add
insb
xchg
push
mov
mulb
notl
ret
jb
lock
imul
fwait
lock
test
lcall
xchg
jne
sbbb
pop
fmuls
fdecstp
int3
push
xchg
cmp
cmp
mov
cmp
bound
aas
shr
in
sub
inc
xchg
fidivl
jnp
fs
fildll
add
shl
fdiv
jl
jb
lds
aas
inc
push
jno
and
sar
mov
mov
sbb
iret
daa
xchg
jnp
mov
xor
cmc
sbb
outsl
js
sub
loopne
fcomip
dec
sub
addr16
push
sub
stc
xchg
je
pop
sub
out
jle
loopne
ret
ret
mov
jno
gs
xchg
cmc
sub
pop
iret
jmp
dec
inc
popa
and
lock
imul
mov
jb
ds
add
pop
call
cmp
repnz
movsb
xchg
mov
xorb
xchg
int3
mov
arpl
lods
lods
mov
xchg
add
or
iret
mov
fisttpll
pushf
mov
jae
xor
adc
sub
pop
mov
cmp
jle
jecxz
ja
imul
or
adc
add
adc
imul
clc
or
or
or
dec
ss
cmc
jmp
jmp
pushl
inc
clc
dec
inc
loope
xor
push
cld
add
pop
sub
shll
xor
in
push
subl
mov
xor
out
dec
gs
sbb
sbb
movl
mov
add
inc
push
int
orl
xor
and
or
jne
xchg
pop
scas
sbb
sub
repnz
cld
cmpsl
jbe
pop
enter
dec
aam
mov
adc
fwait
push
jg
enter
add
push
mov
fadd
lea
xchg
jge
stc
lods
xor
xchg
lcall
xor
loopne
aaa
stos
cmp
mov
mov
pusha
jo
dec
sbb
sub
cmp
pop
bswap
in
scas
nop
inc
cmp
pop
xchg
and
ja
aad
sbb
outsl
or
or
lcall
aaa
mov
dec
push
push
mov
or
stos
inc
xchg
sahf
fdivrl
jne
mov
pop
cmp
or
mov
dec
mov
inc
push
inc
and
mov
in
loop
jb
ja
dec
mov
push
aam
rdtsc
insb
mov
or
fidivrs
push
or
xchg
insl
jecxz
out
inc
out
sub
pop
add
lock
addl
es
or
addl
dec
push
jne
js
notb
popw
push
mov
pop
rorl
cmp
jbe
test
lcall
lods
scas
fdivrp
daa
sub
and
lods
inc
mov
mov
inc
das
cld
inc
sbb
popf
pop
aad
dec
pop
dec
or
pop
loop
jmp
fmuls
rcrb
add
inc
pop
fxch
pusha
movsl
loopne
inc
notb
cmp
loope
xlat
jl
rclb
stc
adc
sub
int
jae
sbbl
mov
cmp
test
dec
xchg
adc
cmpsb
lods
mov
inc
rorb
scas
test
adc
cmp
dec
imul
into
xchg
mov
rcrl
out
pop
in
ficomps
pop
hlt
sbbb
daa
es
lods
mov
push
mov
mov
mov
hlt
xor
adc
sub
push
sub
scas
lcall
fwait
call
sarb
dec
pop
mov
cmpsl
mov
std
daa
inc
ds
jmp
adcl
pusha
dec
aad
es
jnp
xor
fs
sbb
and
jbe
test
aas
xchg
xor
cmc
lods
sub
mov
adc
pop
mov
in
and
scas
xor
in
inc
fdivrl
sub
insl
mov
dec
movsl
and
xor
pop
ja
xchg
aad
and
mov
mov
jg
pop
in
xchg
push
cmpsl
sbb
es
fmul
stos
push
dec
mov
das
mov
ja
inc
mov
push
push
inc
test
adc
jnp
jecxz
cmp
sub
mov
in
in
lcall
fimull
jb
arpl
dec
mov
mov
pushf
ret
lret
out
or
inc
xor
popa
jl
int
out
call
sbb
jp
push
cmp
adc
adc
mov
dec
cmpsb
insb
push
mov
pop
or
xor
push
fildl
inc
push
jl
cmpsl
imul
sub
insl
out
xchg
out
xor
sbb
loop
or
scas
jge
cmpsl
and
push
cmpsl
jb
inc
pop
nop
dec
inc
in
push
dec
push
xor
lock
adc
ret
loopne
dec
push
pop
mov
ljmp
aad
call
out
in
loopne
cmp
clc
sub
movsbl
rclb
in
push
inc
inc
sbb
sbb
sub
cmc
out
xor
call
xchg
cmpsb
ja
sbb
fnstenv
push
cmp
push
out
or
xor
out
inc
xchg
jle
push
out
jo
pop
aad
add
dec
rorl
sti
dec
or
mov
lret
lea
filds
mov
andb
loop
cmc
data16
jo
push
mov
jp
lds
fs
jno
cmp
or
pop
cwtl
in
addr16
mov
loope
js
mov
rcr
lea
repz
out
jg
jnp
cltd
mov
test
insb
and
out
push
cmpsl
mov
dec
popf
and
fwait
in
and
mov
int3
jne
fcmovnbe
scas
pop
mov
cmp
xor
add
add
stos
icebp
mov
xor
insl
cltd
movsl
jl
xchg
mov
rclb
cmp
push
into
fwait
mov
std
push
adc
sbb
adc
ja,pn
push
jbe
sahf
ret
std
inc
xor
aam
sbb
mov
dec
test
add
xor
or
insb
mov
es
test
sbb
push
insl
inc
repz
icebp
in
nop
aaa
pop
fbstp
jecxz
sti
sbb
xchg
rorb
movsb
sbb
add
inc
in
movsb
jp
hlt
test
pusha
out
push
push
arpl
mov
enter
inc
mov
xchg
leave
loopne
mov
add
mov
loop
mov
jb
aas
mov
xor
add
jle
mov
dec
mov
repnz
iret
and
sub
ds
cmp
inc
jno
ds
mov
xchg
cmc
je
roll
fs
pop
sbbl
mov
je
mov
sbb
les
in
enter
leave
aam
movsb
rcl
int
scas
pop
sub
pop
mov
cmp
inc
or
cmpsl
jecxz
inc
xchg
jae
rcll
mov
pop
in
outsb
mov
aam
aas
xor
sub
movsb
jbe
sbb
xchg
cmp
popa
jge
neg
jp
invlpg
mov
dec
pusha
adc
in
es
xchg
aas
sbb
pop
adc
push
adc
mov
lea
stos
push
jb
hlt
repz
fcmovnbe
repnz
jbe
out
js
pop
xor
insl
mov
add
jl
popa
mov
in
adc
pop
fwait
cmova
notl
xor
pop
mov
inc
enter
aam
jnp
insl
mov
and
jg
iret
lahf
outsl
iret
popa
push
stos
fcmovnu
mov
shlb
call
mov
inc
xor
or
inc
cmp
leave
mov
cmpl
pop
dec
xchg
xchg
adc
dec
and
jp
xor
test
xor
add
lock
dec
xchg
aam
movsb
lahf
shrl
inc
add
insb
imul
fwait
xchg
cmp
es
in
les
iret
subb
sar
push
jns
adc
icebp
add
mov
xor
sbb
mov
stos
pop
mov
jbe
out
out
aad
pop
ja
sahf
pop
sbb
cltd
insl
or
stos
and
and
arpl
fisubrs
iret
lcall
sub
mov
out
arpl
lret
jmp
jb
add
scas
sbb
iret
sti
scas
dec
cmpl
mov
inc
sbb
cmp
xchg
cmp
movsl
sahf
xor
cmp
adc
jmp
incl
dec
test
jmp
in
lock
cmc
outsb
pop
hlt
mov
sub
fs
int3
sub
cli
mov
pop
adc
xor
xor
sbb
pop
sub
or
ret
push
add
aad
adc
inc
cmpsl
xchg
cltd
jge
inc
jno
push
popf
daa
divb
push
int3
sub
cmp
sub
leave
mov
push
lret
popa
inc
cmp
scas
push
dec
popf
adc
test
push
je
mov
stc
out
les
rol
inc
iret
xchg
mov
dec
les
data16
xor
decl
sub
adc
sbb
lods
nop
loopne
jle
mov
and
sub
sbb
cmp
stc
ja
sub
cmp
adc
mov
xchg
push
rcll
pop
aad
xchg
xor
into
mov
or
pop
sub
jg
jo
jae
jb
sahf
fcmovne
xchg
push
pop
data16
pop
lock
mov
cmovnp
pop
dec
stc
dec
adc
push
lcall
jns
sub
push
fdivrp
push
aam
test
push
push
mov
jmp
movsl
mov
jnp
je
add
jne
xor
pop
mov
lret
shll
icebp
shlb
cli
data16
daa
jecxz
dec
cmp
out
scas
dec
inc
ja
jbe
mov
iret
dec
jmp
mov
push
aas
jecxz
scas
xor
mov
repnz
xor
sub
stos
decl
mov
outsb
loop
dec
push
mov
push
sbb
adc
dec
popf
sub
popa
movsb
cltd
inc
cld
sbb
lods
faddl
jmp
shll
inc
dec
aas
and
mov
mov
pop
mov
pop
repz
mov
mov
repnz
push
lea
je
das
lret
pop
sub
insl
push
xchg
fists
pop
push
xor
jbe
dec
mov
xchg
mov
lret
and
movsb
les
mov
push
cmpsb
or
mov
xchg
popa
and
mov
mov
dec
adc
xchg
and
mov
imul
lea
mov
test
xchg
test
mov
jmp
in
xchg
xlat
mov
test
mov
jmp
xchg
addl
in
push
in
sub
xrelease
rolb
xor
gs
inc
out
cmpsl
xchg
shlb
divl
mov
sbb
lret
scas
mov
enter
mov
js
mov
jae
mov
mov
or
mov
or
jb
test
and
pushf
mov
mov
rcr
inc
and
ficomps
cmp
inc
push
pop
pushf
push
aad
or
jle
stc
mov
pop
dec
sbb
scas
ds
adc
jo
ret
das
orb
pop
je
stos
movsb
out
fdivrs
xchg
dec
lret
imul
push
cmp
mov
inc
mov
cmp
fstl
and
cmpsl
invd
mov
sbb
ljmp
lahf
movsl
shlb
andb
into
cs
loop
dec
lea
cld
dec
cltd
cmp
cmp
and
loopne
and
cli
lret
dec
and
in
inc
push
cmp
inc
fcmovb
sbbl
jo
jle
sbb
mov
cmpps
or
enter
lods
xchg
push
enter
inc
sbb
es
lock
mov
jbe
ljmp
test
pushf
or
mov
xor
adcl
pop
mov
push
arpl
jge
add
loope
sbb
and
mov
lcall
fbstp
into
lahf
mov
mov
push
jge
cmpsb
push
stos
cld
in
pop
shrl
and
jl
cltd
mov
adc
push
popf
lret
in
loopnew
mov
xchg
call
sbb
out
addr16
int
lods
shlb
inc
xor
adc
frstor
das
lods
sbb
jp
xchg
jnp
adc
enter
je
nop
xchg
sbb
and
in
and
fsts
iret
sbb
lret
jmp
or
int3
jg
loopne
sti
test
mov
pop
mov
add
hlt
cld
xchg
adc
pusha
xchg
add
rol
adc
fidivrl
out
lcall
sbb
sbb
xchg
movsb
repz
xlat
jmp
lcall
xorb
pop
mov
outsl
int
pop
in
fcmovnbe
xchg
and
jle
fs
jbe
les
or
add
repnz
repnz
mov
push
cltd
movsl
mov
sbb
push
or
mov
lock
xchg
iret
mov
xchg
push
negb
test
add
ret
iret
mov
mov
push
sub
rol
lahf
incb
je
nop
and
and
fs
xor
repz
add
hlt
cmc
mov
cmpsl
dec
xor
push
xchg
jmp
shll
inc
inc
mov
and
and
inc
pop
add
fimuls
mov
fwait
add
push
shrb
faddl
aas
test
mov
adc
and
icebp
jl
ljmp
xlat
lods
xchg
rcl
movsb
dec
popf
push
cmp
stos
mov
sarl
out
xchg
and
dec
test
sub
cmpsl
std
out
bound
lcall
sbb
js
lods
or
cmc
cmc
lcall
cmp
ss
pop
xchg
inc
mov
xor
sarb
lret
stos
daa
in
push
inc
sub
cmc
es
stos
inc
xchg
shlb
loopne
out
pop
test
sti
mov
sbb
jp
cmp
mov
mov
mov
push
fnstsw
mov
hlt
repnz
xor
inc
jnp,pt
mov
pop
jl
push
shll
in
fisubrl
jnp
mov
or
inc
cli
mov
jge
sub
fmuls
mov
or
fs
pop
xorl
stc
shlb
out
cmc
mov
test
mov
adc
lods
rcrl
sbbb
ficoms
sbb
sub
popa
and
daa
pop
push
inc
sub
leave
loop
pop
lcall
into
imul
ret
and
jo
mov
cmpsl
cli
stos
and
aas
testb
inc
into
pop
sub
into
scas
int3
jnp
sbb
scas
mov
pop
jg
cmc
sub
ficomps
push
pop
aam
mov
xchg
je
test
adc
jns
dec
pop
les
scas
pop
add
push
sub
dec
add
and
call
xchg
out
ja
dec
enter
dec
dec
lahf
xchg
mov
imul
jle
scas
ret
stos
and
adc
stc
mov
stos
add
pop
and
stos
mov
leave
jb
mov
push
outsb
xchg
insb
cld
sti
imul
push
pop
pop
cmp
xlat
out
mov
xlat
pop
cli
or
mov
inc
xchg
and
ljmp
stc
movsb
cmp
out
jb
popf
ja
test
adc
or
int
cltd
mov
dec
lock
pop
mov
and
push
dec
sub
loopne
inc
shll
push
test
in
insb
std
cmc
lret
xorb
shrb
or
or
js
push
sbb
mov
addr16
or
and
sar
pop
mov
mov
inc
xor
and
pop
pushl
jae
jne
out
fsubl
jecxz
ficoml
lods
cmp
xchg
cmc
sahf
jbe
xchg
call
and
xchg
test
push
in
outsb
cs
or
fcmove
inc
fidivl
xchg
pop
filds
jnp
lret
in
cmpsl
jmp
cmp
jmp
push
push
dec
mov
push
nop
repnz
mov
es
mov
jne
in
dec
loopne
xor
add
push
jne
adc
push
gs
cmp
aad
or
daa
pop
cs
dec
cli
cmp
loop
jns
iret
fstpl
add
pop
mov
push
xor
pop
icebp
xor
add
cwtl
jae
push
les
xchg
js
xchg
push
mov
movnti
pop
cmp
out
inc
lock
and
push
out
xchg
stos
test
out
jne
pop
clc
hlt
sub
sub
movsl
pop
nop
sbb
pusha
test
cmpsl
aaa
rorb
lret
mov
cmp
xorl
aad
inc
fwait
imull
test
xchg
ffreep
jle
lret
add
dec
sbb
add
add
cltd
in
pop
mov
pop
std
enter
outsb
and
loop
xchg
mov
inc
mov
dec
insl
jecxz
stc
jbe
loopne
inc
inc
mov
push
pop
call
mov
pop
hlt
dec
push
mov
dec
ds
lods
inc
je
push
in
andl
xchg
popa
cmp
out
and
pop
dec
xchg
jg
push
add
in
ja
cmpsb
lods
ret
push
lret
and
lea
xchg
movsl
pop
sbb
sbb
imul
lock
push
and
cs
lcall
mov
fistpl
aam
push
mov
mov
sub
and
mov
shr
push
data16
dec
loopne
nop
xchg
flds
pop
push
xor
cs
scas
lahf
mov
mov
mov
fimull
shlb
arpl
ja
or
shll
popa
fildl
mov
xlat
rclb
js
push
or
add
jnp
fisttps
cld
mov
fwait
mov
daa
cltd
jo
jle
lods
jle
mov
and
pop
dec
es
push
or
test
testl
add
mov
in
and
jns
pushf
aam
dec
icebp
xchg
jae
clc
mov
xchg
and
sarl
add
test
xor
mov
adc
dec
movsb
mov
push
add
mov
cmp
cmpsl
pop
in
sub
mov
ror
push
mov
add
movsb
push
cmp
pop
imul
in
inc
push
jge
jb
cmpsb
adc
and
add
mov
adc
outsl
fadds
test
jns
mov
adc
and
jmp
mov
jae
out
push
shlb
insb
mov
xchg
popl
pop
inc
adc
mov
mul
sarb
shll
mov
xor
inc
inc
mov
loopne
imul
testl
iret
jb
js
repz
mov
nop
xchg
xchg
jbe
mov
pop
cmp
push
dec
ror
inc
popa
mov
ret
gs
fidivrs
bound
fdivs
push
out
cwtl
pop
xchg
sub
call
xchg
push
and
xor
outsl
lcall
cmp
inc
scas
mov
jbe
push
xor
mov
cwtl
sbb
xlat
lds
pusha
adc
and
pop
repz
fisubrs
push
inc
dec
pop
popa
push
pop
cmp
lcall
mov
jno
jmp
inc
pop
sub
js
pop
enter
ret
fistpl
mov
sahf
xor
pop
jae
in
cmc
es
test
xchg
pop
aad
or
inc
push
iret
push
mov
imul
imul
andb
jl
pushf
inc
pop
insb
daa
roll
mov
sbb
jl
fisttpl
loopne
pop
dec
or
int
jmp
xchg
sub
xchg
mov
jle
shll
jecxz
mov
add
insl
or
jnp
fnstsw
ljmp
push
dec
aad
cmc
mov
xchg
jae
icebp
daa
xchg
rolb
jge
stos
xchg
ljmp
or
xor
repnz
ljmp
daa
dec
insb
stos
lret
adc
dec
cltd
mov
or
scas
lcall
mov
dec
inc
out
cmp
popf
dec
sub
mov
addr16
adc
push
hlt
dec
fdivrp
ljmp
jmp
test
xor
fimull
rcl
int
xchg
add
adc
pop
xchg
mov
inc
lret
push
int
inc
pop
xor
bound
bound
jge
scas
jbe
inc
mov
and
rolb
xorb
dec
insb
loopne
dec
rorl
mov
or
addr16
push
jl
jo
and
xor
into
rclb
sub
out
mov
mov
scas
mov
mov
dec
out
out
cmp
in
out
loope
jnp
hlt
bound
mov
notl
sahf
push
jl
icebp
cmpsl
xchg
mov
jl
sbb
inc
lds
out
fistps
xor
xor
dec
fnstsw
shrl
imul
cmpsb
pop
dec
roll
aas
hlt
dec
dec
xchg
fs
out
stc
fwait
mov
clc
cmpsl
fs
stc
out
insl
lea
sub
aam
pop
ds
mov
test
aaa
aad
push
shlb
in
leave
nop
lcall
ja
pop
sub
push
or
add
and
push
out
repnz
and
arpl
xchg
stc
ror
xor
ss
xchg
inc
jmp
cmp
pop
adc
xchg
mov
cmp
xor
push
mov
sub
wrmsr
cli
imull
lods
mov
cs
push
jno
mov
fs
xchg
and
push
xor
or
int
rorl
aad
and
sub
fnstenv
pushf
mov
jg
or
ss
int3
addb
loopne
subb
inc
icebp
sbb
loop
adc
enter
add
push
push
lods
sbbb
add
dec
dec
jne
sti
push
sub
adc
dec
ficompl
pop
add
add
out
jg
cmp
xchg
push
pushf
in
loopne
dec
xor
shl
xchg
cmc
sub
jp
ror
lcall
movsl
push
push
adc
cmpsb
call
mov
bound
dec
xchg
sub
xchg
loop
imul
add
pop
push
scas
and
mov
mov
xchg
lods
mov
or
xlat
mov
daa
imul
xorl
ljmp
jle
mov
jmp
shll
lods
jp
xchg
dec
fs
ljmp
cld
inc
jns
lret
pop
fstps
mov
repz
ja
mov
xchg
imul
mov
ret
sub
push
pop
sysenter
push
xor
adc
sbb
fidivrl
pushl
jge
data16
notl
fsubl
int3
adc
hlt
shl
faddl
xchg
int
nop
outsl
dec
lds
xor
or
repz
fsubr
add
mov
mov
dec
imul
sub
jne
dec
js
je
rclb
ljmp
lods
mov
clc
or
jb
mov
ds
cmp
cmp
sub
add
dec
iret
pop
sbb
and
das
cmp
int3
or
adc
lods
frstor
leave
or
dec
hlt
lret
dec
mov
adcb
lret
divl
jno
dec
fists
jbe
xchg
adc
mov
pop
notl
mov
cmp
popa
test
test
pop
add
shll
jg
mov
xor
aam
repz
fucomi
or
frstor
fwait
sbb
movsb
mov
xchg
or
movsl
pusha
push
cmp
inc
dec
sub
mov
pop
jae
push
mov
jne
pop
jle
or
xchg
aaa
and
imul
xor
mov
movl
cmpsb
mov
pop
je
pushf
ficoms
lea
mov
xchg
in
repz
push
push
mov
inc
lret
or
adc
mov
rolb
jge
loopne
adc
sub
and
in
inc
js
adcb
sub
sbb
dec
nop
mov
dec
jae
mov
aaa
or
dec
adc
push
lret
adc
push
push
das
sti
inc
jnp
lcall
scas
and
out
out
xor
mov
int
mov
and
insl
lods
push
shr
lods
divb
loope
out
mov
js
sub
adc
sub
mov
jb
sahf
sub
nop
sub
cmp
shll
push
fdivr
shl
sub
fucomip
shr
jnp
mull
aaa
jge
stos
xlat
xchg
cmp
sbb
jp
dec
adcl
and
movsb
fcompl
divb
mov
inc
rorb
sbb
fs
mov
push
mov
dec
sahf
mov
add
add
and
bound
push
cwtl
push
or
sbb
lods
cmp
pushf
mov
or
fwait
inc
mov
fisttpl
out
adcl
scas
fdivs
pop
dec
xor
cmp
es
cltd
lret
insl
loopne
rcll
fdivrl
mov
add
pop
and
fists
lds
xchg
pop
lret
push
dec
xchg
cld
sub
inc
addr16
push
push
cmp
sahf
inc
into
or
xorb
sub
addl
cli
out
sahf
mov
lea
pop
mov
or
jb
fwait
jo
vmread
movb
movb
shr
sti
xor
in
test
subl
or
and
outsb
cmp
add
aad
xor
inc
es
pop
sbb
cmc
xorb
icebp
movsl
loopne
fstl
mov
sub
mov
lahf
pop
mov
dec
pop
fwait
popf
inc
xchg
aaa
cltd
xchg
pop
jecxz
or
call
ljmp
aaa
hlt
add
jnp
jbe
andl
sti
jbe
xchg
sbb
fs
idivb
sbb
push
stos
movsb
lock
xchg
push
in
push
add
pusha
mov
call
pushf
lret
in
sbb
fistl
out
jne
je
adcl
lea
or
pop
mov
xor
and
jnp
fbld
jnp
dec
inc
cmpsb
movups
xchg
cli
mov
push
scas
stc
enter
and
ja
es
or
add
dec
inc
scas
imul
sarb
movsb
pop
jnp
bound
out
mov
lahf
mov
data16
xor
dec
fcoms
lods
rclb
into
ret
add
xchg
ja
mov
pop
out
cmpsb
xor
icebp
loopne
lock
lea
sbb
add
subl
stc
leave
mov
push
mov
and
cs
mov
mov
jl
mov
xchg
movsb
hlt
imull
lret
fs
jnp
sbb
shlb
lea
jo
xchg
jo
inc
ror
mov
lods
adc
push
inc
stc
das
test
lcall
inc
dec
test
push
inc
pushf
mov
fdivp
and
pushf
add
scas
addr16
aad
enter
xor
inc
pushf
ret
push
and
lret
mov
fwait
xchg
mov
or
repnz
loope
push
aaa
test
enter
dec
push
jb
sub
cmp
lcall
push
dec
mov
jbe
inc
xor
rolb
pop
leave
clc
mov
cli
int
in
lock
pop
pop
push
jp
dec
push
div
and
outsb
insb
das
dec
out
mov
adc
add
into
xchg
xchg
xorl
xchg
xchg
lods
push
xchg
test
std
mov
arpl
out
sbb
inc
sub
jl
divl
adcl
jmp
idivl
loopne
mov
pop
add
sub
ljmp
mov
inc
sbb
es
dec
add
push
test
out
and
pusha
rclb
ljmp
popa
loope
jne
cmp
sarb
sbb
and
jl
jmp
shlb
lea
in
out
jb
mov
icebp
fldenv
sbb
xchg
fdivr
jle
push
xor
jmp
popa
scas
inc
in
mov
xor
xchg
jl
stos
insl
mulb
mov
inc
ljmp
cmp
outsb
jbe
lcall
pop
jnp
pop
xlat
pop
dec
out
sub
mov
add
ds
add
jo
lea
outsl
jp
cmp
xlat
cld
jle
cmp
ret
imul
xchg
push
shl
arpl
aad
aad
cmp
jmp
mov
or
pop
dec
and
or
iret
pop
mov
stos
gs
jmp
nop
mov
popf
test
mov
mov
movsl
fisttpl
push
push
dec
scas
sti
push
scas
dec
pushf
insb
push
mov
inc
movsb
mov
or
and
pop
pop
test
mull
ss
jb
mov
popf
sbb
fs
jl
outsl
cmp
add
lahf
and
xchg
xlat
xchg
add
fists
insl
or
sbb
or
inc
add
or
dec
xchg
xor
notb
ja
mov
cmc
mov
fsubrs
sub
xor
frstor
and
popa
fsubl
mov
lock
jo
adc
cmpsl
adc
scas
mov
cmp
mov
and
xor
inc
or
lahf
loope
out
lea
mov
shr
sub
jbe
xor
xchg
and
lahf
jg
fnstsw
popf
inc
fs
cmp
sub
loopne
and
loopne
or
sbb
and
adc
into
stos
inc
jp
jge
xor
jnp
pop
fsubs
sti
jae
scas
repnz
push
mov
jae
inc
sbb
cmp
mov
dec
fwait
mov
mov
add
in
and
cmp
mov
stos
and
cmp
enter
out
lahf
mov
jecxz
repz
jns
jecxz
fsub
roll
mov
mov
mov
mov
mov
ret
dec
test
cmpsl
ret
icebp
fidivrl
iret
adc
testb
xchg
mov
dec
imul
lret
dec
adc
xchg
icebp
jp
cli
pop
adc
into
push
lret
inc
and
mov
aas
sub
cld
out
popl
cmpsl
inc
inc
iret
xchg
addr16
pop
xchg
mov
inc
dec
xchg
pop
inc
stc
mov
sbb
inc
test
jg
in
or
in
out
stc
add
xor
sbb
sub
clc
jl
lods
in
push
cmc
xchg
stos
adc
or
popa
aad
mov
scas
dec
pop
scas
push
cwtl
out
push
jae
mov
pop
mov
dec
push
bound
aas
cmp
pushw
inc
shrb
cmpl
xlat
push
ja
sub
stos
mov
fmulp
or
or
loopne,pt
outsb
orl
out
fstl
fimuls
iret
stc
push
movsb
xchg
hlt
sub
and
push
mov
mov
das
dec
and
cmp
pusha
inc
lds
pop
das
test
fsts
cli
push
mov
mov
xchg
xor
movsl
fstpt
inc
enter
mov
cmp
inc
adc
xchg
loopne
jnp
in
fstl
mov
movsb
push
pop
stos
adc
xchg
jnp
xorb
pop
pop
fsts
mov
leave
adc
dec
xchg
in
mov
or
mov
cwtl
fcmovb
add
ret
into
pop
ds
jno
pusha
ficomps
fistpll
cltd
scas
xorl
dec
sub
jne
aam
push
insl
bound
bound
jbe
out
adc
fwait
mov
sbb
dec
dec
sbb
mov
sbb
add
xor
or
in
into
dec
push
rcr
or
and
ljmp
shrl
js
pop
jbe
ja
add
mov
fcmovu
dec
dec
add
popa
sub
fdivrs
sub
in
cli
dec
mov
ljmp
in
pop
out
cmp
data16
inc
lock
adc
aas
cmpsb
adc
dec
push
out
push
push
lods
mov
jg
adc
xchg
scas
cs
or
int3
fmuls
pop
pop
xor
insl
jae
les
divl
mov
jb
ds
adc
push
shrl
ljmp
loop
cmp
dec
fstps
jge
jl
inc
sub
loopne
sete
stos
iret
lea
das
data16
xor
pushf
pop
pop
cltd
push
push
pop
dec
outsb
pop
lods
lock
or
dec
xchg
push
call
adc
fisttps
fcmovu
dec
mov
jns
stc
insl
cltd
pcmpgtd
ja
adc
sub
scas
or
mull
aaa
outsl
push
mov
xchg
enter
xchg
xor
mov
int3
jl
test
sti
sbb
inc
jns
inc
insl
fmull
xor
shrb
inc
mov
mov
inc
mov
ret
adc
pop
out
adc
jecxz
and
pop
fisttpl
push
lret
pop
rcr
sbb
xorb
and
push
in
cltd
rep
idivl
daa
jae
mov
pushf
mov
mov
cmpsl
test
test
inc
jmp
xor
stos
pop
scas
les
fwait
adc
push
mov
ret
add
dec
stc
or
xor
int
sub
lahf
and
mov
sbb
in
fadd
roll
nop
push
add
ret
xor
pop
test
xor
jmp
mov
mov
ja
xchg
or
nop
sbb
xlat
lock
mov
pmulhw
and
xlat
movb
cmp
adc
das
mov
cmp
cwtl
test
pusha
sub
les
pop
xor
cs
xor
sbb
and
adc
mov
dec
lret
fidivl
rcll
jae
push
push
or
and
std
mov
fmul
mov
gs
xchg
repz
je
mov
loopne
out
insl
stos
sbb
push
aas
mov
test
aaa
icebp
mov
lcall
or
fildll
out
add
test
fxch
dec
mov
pop
stos
nop
lock
div
stos
nop
daa
mov
cli
add
push
cmc
xor
int
xchg
and
scas
pushf
adcb
test
sbb
dec
cmp
mov
xchg
inc
add
shl
stc
push
push
and
iret
int
mov
in
test
jns
mov
enter
xor
int
testb
inc
or
mov
sub
cld
in
mov
andb
jp
pop
mov
cmpsl
add
adc
daa
pop
cmp
insl
popf
dec
jl
dec
fdivs
add
pop
icebp
inc
nop
inc
fisubl
mov
test
test
nop
lret
icebp
mov
data16
or
xchg
jp
jb
sar
or
sub
sbbl
into
push
cmp
push
lret
xchg
xchg
cmp
aaa
xchg
xchg
xor
test
cmp
pop
mov
mov
sub
xor
pop
ss
pop
xchg
jae
jl
cmp
mov
inc
cmpl
test
jnp
sahf
sbb
dec
jnp
lret
fdivrs
sbb
jg
lret
push
testb
adc
in
and
add
add
daa
cmpsb
pop
aaa
testb
or
mov
shlb
xorb
popf
fdivl
cld
mov
jo
into
lock
lcall
pop
cmp
lret
mov
or
vpcmpeqd
sti
stc
mov
jns
mov
jg
loopw
cwtl
fcmovb
aad
lret
ret
ficomps
dec
inc
mov
xor
out
in
push
dec
jge
jl
rorl
imul
push
jmp
aas
fwait
adc
sub
or
in
inc
jmp
fnstenv
inc
dec
je
xor
arpl
shlb
inc
xor
out
jge
mov
sbb
mov
xchg
mov
in
push
pop
rclb
stc
in
jo
xchg
daa
out
das
add
fiadds
hlt
mov
push
das
xor
fcmovu
js
int3
pop
fsubrs
imul
add
cmp
mov
fldenv
in
fcmovu
mov
or
leave
in
pushf
fsubrl
std
cli
daa
in
push
mov
push
cmc
cmpsb
sub
shl
push
adc
sbb
mov
mov
in
dec
call
push
cmp
mov
into
jo
cmp
cmc
loope
or
fwait
cmp
sbbb
dec
cli
je
dec
inc
mov
outsb
adc
push
popf
push
jmp
mov
cwtl
mov
inc
mov
fsts
dec
pop
shrb
out
repnz
xor
in
ds
inc
or
push
mov
in
jbe
mov
mov
or
sbb
pop
and
repnz
rclb
lea
push
jg
adc
sbb
add
adc
lret
js
and
push
daa
sbb
mov
dec
fdivrs
add
xchg
mov
rclb
push
out
test
js
xor
push
insl
lret
jecxz
outsb
jae
enter
pop
outsb
lcall
jns
jg
push
movsl
imul
test
push
notb
dec
or
ljmp
js
xchg
cmpsb
in
xor
add
bound
jmp
clc
loope
mov
jge,pn
aas
mov
cwtl
mov
jnp
sub
out
decl
and
repz
into
gs
test
dec
cmp
mov
test
lahf
mov
fnstsw
das
or
movsl
ss
xchg
or
adc
or
or
sbb
xor
sub
xor
add
jbe
stc
aam
mov
mov
enter
cmp
pop
inc
add
xor
imul
mov
inc
mov
push
cs
ljmp
adc
nop
xor
jp
inc
mov
sub
rolb
inc
or
addr16
hlt
lcall
fstps
lret
scas
insl
push
mov
sub
mov
push
rorl
hlt
lods
xlat
mov
movsl
cmp
add
aad
insb
mov
arpl
pusha
popa
sbb
fnstsw
cwtl
js
popf
add
in
sahf
jb
add
hlt
lret
mov
xchg
jmp
push
out
outsb
xchg
jecxz
insl
push
jnp
lods
jo
mov
adc
bound
cmp
pop
xor
int3
sbb
stc
sub
push
xor
fdiv
xor
stc
cmp
enter
jns
xor
int3
shrb
fdivl
loopne
loope
xchg
mov
inc
sbb
mov
adc
pop
fdiv
pushf
and
jo
jb
mov
icebp
xchg
bound
pop
fs
out
dec
iret
imul
movsb
and
mov
fwait
les
inc
sbb
das
sti
add
jnp
mov
shr
jecxz
dec
inc
mov
xchg
pushl
clc
std
enter
lods
cltd
mov
outsb
inc
push
ret
fwait
mov
imul
mov
fsubrp
mov
sbb
jno
push
les
or
rcrb
bswap
or
sbb
shll
mov
lods
int3
cmpsb
add
hlt
pop
into
filds
les
sbb
stos
add
cmp
pop
int
out
bound
sbb
lds
mov
xchg
xchg
inc
sbb
fmuls
ficoms
loopne
sub
adc
pop
icebp
lcall
dec
int
dec
inc
insb
adc
cmc
out
xchg
scas
cmp
inc
cli
pop
sarl
xchg
arpl
xor
cmp
les
mov
push
stos
pushf
scas
cltd
add
xor
jno
jp
aad
xor
push
dec
out
and
faddp
inc
popa
mov
sub
xchg
and
fidivl
cltd
loopne
ja
fcompp
into
mov
sbb
sbb
adc
cmp
sub
mov
mov
add
mov
dec
test
xchg
jl
jg
adc
push
jmp
jo
sbb
push
repz
stos
push
mov
mov
std
pop
sub
popa
inc
roll
pop
ds
cmp
pop
notb
dec
roll
jo
pop
in
jno
mov
ss
mov
pop
inc
test
nop
sub
rcll
jl
in
mov
icebp
stos
xchg
stos
jns
mov
aam
mov
inc
ficomps
cmp
pop
fstpt
sbb
cmp
shrb
add
cmpxchg
jp
pop
push
cmp
rclb
nop
icebp
ja
mov
popf
and
xchg
jp
shl
shlb
xor
in
cmp
ret
cs
add
insb
dec
add
insl
rorl
jmp
push
fistl
addb
pop
int3
bound
pop
stc
xlat
xchg
cs
iret
test
and
cltd
cli
cs
mov
jge
subl
adc
mov
ljmp
xchg
xchg
dec
xor
test
xor
sbb
pop
cmp
push
out
fistpl
inc
movsb
cmpsl
jp
inc
popf
test
lods
out
jbe
jno
xlat
outsb
xchg
notl
out
out
fnstcw
pusha
movsl
xor
enter
gs
imul
lds
pop
xorl
scas
pop
fdivl
xor
adc
add
push
cld
fwait
mov
pop
jl
cmp
xor
or
jmp
push
js
std
or
push
pusha
xor
mov
inc
push
notl
push
repz
jp
lock
add
sbb
and
call
mov
movq
xor
frstor
pop
cmp
push
inc
or
pop
pop
jge
subl
and
and
insb
mov
sbb
insb
daa
pop
push
pop
dec
and
adc
push
in
test
xor
dec
push
mov
push
cli
adcb
das
inc
xlat
out
movsb
sarb
loope
ret
pop
jecxz
pop
sbb
mov
cmp
sub
int
adc
imul
arpl
jae
sub
pop
int3
aas
add
ret
fisttpll
jle
add
mov
cmpl
andl
and
xor
xor
lcall
xor
clc
mov
jecxz
lock
js
add
inc
push
inc
xchg
ret
fs
sub
popa
jecxz
dec
inc
fidivrs
add
push
sub
mov
cmp
cmpb
or
sbb
dec
dec
mov
ret
adc
negl
jns
inc
mov
cmp
loopne
inc
aas
addl
std
xchg
lret
std
hlt
test
lret
loop
xor
stos
popa
sbb
mov
fidivrl
and
int
push
cmp
adc
dec
rcrl
xchg
adc
dec
sub
jecxz
mov
xchg
cmc
sarl
cmp
mov
jae
cltd
jbe
pop
imul
add
xorl
and
lret
sti
dec
jg
mov
or
sub
sti
out
test
mov
insl
inc
ret
xchg
std
jp
xor
dec
cld
xchg
ror
xor
lcall
rolb
push
push
das
pop
and
mov
fnstenv
inc
inc
adc
push
movsl
imul
inc
les
roll
sahf
sahf
test
shr
pushl
pop
cmp
lock
mov
add
scas
push
gs
push
mov
pop
divb
rcll
and
loop
jmp
sti
jl
sti
repnz
out
mov
and
mov
movsb
leave
mov
pop
xchg
xor
pop
gs
cmc
mov
lods
mov
mov
jno
inc
frstor
inc
ljmp
cmp
out
popl
xchg
pop
mov
jmp
jge
xchg
sahf
cmc
mov
fbld
fdiv
jo
test
pop
in
lret
jb
jg
clc
arpl
cmpsb
push
push
add
pusha
jp
neg
cltd
dec
rcrb
dec
mov
mov
cmp
roll
imul
mov
aam
data16
fnstsw
xchg
imul
pop
and
scas
mov
ret
aaa
and
aam
es
fistpl
pop
leave
daa
xchg
lret
aas
inc
jns
add
cmp
fdivrl
lods
push
cmp
aad
sti
dec
sbb
mov
aam
pop
adc
loope
push
cwtl
fcomps
fidivrl
sbb
sti
rolb
pushw
scas
pop
add
mov
ljmp
xchg
jge
and
sahf
icebp
in
push
mov
pop
sahf
sbb
or
fstpt
int3
sbb
xchg
cwtl
addr16
cmp
ss
or
mov
inc
fmull
insb
cmp
les
xlat
in
xchg
sbb
imul
mov
mov
dec
mov
mov
movsb
rorb
xchg
push
mov
and
sub
js
cltd
jns
cmpsb
ja
addr16
jb
push
xchg
stc
rcr
sahf
mov
loopne
lret
outsb
adc
movsl
jbe
jno
cwtl
add
xchg
cmc
pushf
std
in
xlat
movb
mov
push
sbb
arpl
repnz
pushl
repz
repz
cmp
mov
jbe
leave
rol
subl
int
mov
push
xchg
hlt
arpl
outsb
and
mov
or
push
fistl
fcmovb
fildll
sahf
cld
ds
push
or
pushf
fcom
cmc
sub
sahf
lods
push
je
push
shlb
cwtl
bound
dec
inc
aas
add
jbe
negb
mov
push
jle
inc
sub
or
inc
or
loope
push
shrl
adc
idivb
dec
rcl
xlat
xchg
mov
mov
addl
loope
gs
stc
cld
negl
cs
pushf
leave
inc
mov
mov
cs
pop
insl
push
mov
nop
or
add
pop
repnz
stos
jge
movsl
mov
or
lret
fbld
push
push
mov
js
aam
pop
xchg
push
adc
mov
or
jge
adc
pusha
in
dec
je
mov
div
movsb
int
mov
push
jb
push
repz
xchg
int3
hlt
adc
nop
xchg
sbb
push
ss
int
xor
imul
out
dec
jge
mov
cli
scas
add
or
mov
xor
rorl
push
stos
xlat
ret
push
jecxz
or
xor
addb
scas
xor
outsb
outsl
jns
je
xor
call
add
gs
in
addr16
push
dec
pop
rorb
mov
enter
popf
nop
lahf
xor
mov
or
inc
jae
xor
sbb
and
cmp
sub
rcr
sti
push
and
pop
pop
jl
or
pop
cmpsb
aas
mov
pop
mov
or
sub
push
cld
stos
lret
ja
mov
pop
mulps
hlt
in
cltd
jmp
mov
sbb
and
inc
outsl
js
pop
test
mov
or
lret
dec
loop
gs
insl
add
inc
lods
arpl
mov
insl
ljmp
out
mov
dec
push
inc
mov
jl
lock
data16
fwait
add
adc
jno
leave
fisttps
mov
dec
or
andl
aaa
mov
icebp
and
cli
mov
sar
inc
shrb
jne
insl
nop
es
hlt
mov
or
add
jnp
push
pop
mov
in
pop
pop
daa
and
xor
adcl
sbb
inc
je
jns
xor
push
std
cmp
pop
inc
lods
scas
lret
gs
cli
lds
jne
call
pop
mov
sahf
jne
pop
and
data16
dec
test
jae
sbb
decl
lock
fsts
sub
jecxz
cmp
js
inc
xchg
mov
imul
lods
inc
and
ret
idivl
mov
cmp
in
mov
aam
adc
out
sahf
gs
lods
stos
js
fwait
xor
aas
out
je
mov
cmc
jbe
xchg
enter
fnstsw
popa
notl
jb
jbe
scas
or
pop
insb
add
mov
mov
jecxz
shrl
cmp
nop
out
ret
stc
cltd
lea
jb
icebp
pop
sub
lea
loope
jmp
pop
adc
cmp
or
xchg
pusha
and
cli
push
test
fdivrs
sub
inc
lret
daa
adc
sbbl
xchg
xor
push
loope
xchg
xorb
mov
xor
sbb
and
inc
add
stos
mov
call
daa
sahf
sub
fs
jge
cli
pusha
cmp
jnp
add
subl
inc
jno
lret
jns
xchg
pop
insb
cwtl
xor
push
inc
cwtl
sbb
mov
sub
add
mov
and
mov
add
faddp
pop
fwait
mov
add
pusha
pop
ss
jmp
outsl
jns
jle
sub
mov
out
repz
sub
mov
inc
inc
jp
push
ficomps
test
cmpsl
and
shlb
ror
dec
add
idivb
lret
fsubrp
pop
in
push
mov
lods
testl
fwait
cmp
mov
in
cmp
jg
les
adc
xchg
lret
mov
inc
sbb
lret
pop
sbb
and
fists
mov
pop
insl
clc
dec
sub
inc
andb
out
ss
aas
leave
mulb
nop
lds
loopne
sbb
pop
mov
inc
fistpll
jo
jl
and
mov
cmpsb
sahf
rcrl
push
push
insl
jg
scas
or
popa
enter
outsl
in
out
push
loopne
cmp
out
sarb
mov
fsubl
enter
xor
stos
jnp
sti
and
inc
sub
ja
test
xchg
ret
pop
pusha
shrb
inc
lcall
lahf
mov
mov
test
insb
je
inc
aam
adc
jo
sbb
pushf
shll
mov
outsb
insl
outsl
pushf
into
roll
imul
cmp
cli
adc
pop
fcmove
clc
lods
mov
mov
or
xchg
and
ret
aad
xchg
xor
addb
dec
mov
push
ds
mov
lock
aas
leave
sarb
jmp
inc
adc
sahf
hlt
dec
test
data16
adc
and
jge
mov
pop
xor
dec
lcall
xchg
jne
stos
outsl
imul
push
ja
xchg
punpckldq
mov
sbb
adc
cmp
leave
sub
push
fisubs
lret
lahf
adc
fstps
jae
sbb
lds
test
push
dec
add
jnp
mov
in
sub
and
jbe
jl
test
mov
std
pop
pusha
sahf
into
jecxz
push
insb
cmp
lods
mov
xchg
sub
xor
sub
clc
xchg
xchg
or
lds
or
xlat
sbb
pop
fldenv
bound
cld
pushf
pop
push
popf
mov
cmp
xchg
and
xor
imul
shrl
xor
add
pop
xor
pop
push
dec
inc
or
enter
fisubrl
enter
call
je
xor
cmp
stos
sub
add
push
mov
nop
mov
nop
push
lock
xchg
cmc
cmp
jns
mov
adc
aas
cwtl
xchg
xor
in
popf
sar
popf
inc
and
push
xchg
sub
cmpsl
out
lock
mov
mov
sub
enter
and
enter
cli
aaa
pop
aad
rcll
jne
inc
xchg
in
test
int3
xor
sub
cmp
arpl
push
vdivsd
rolb
push
iret
iret
push
int3
add
roll
mov
movsb
xchg
mov
xlat
fisubl
fsubrs
addl
mov
out
or
or
out
and
aas
fsubl
sub
mov
sub
xchg
rdtsc
movsl
in
inc
mov
sti
xor
stc
inc
or
jp
dec
stos
ss
rol
repz
push
and
mov
aad
ss
xchg
mov
aam
popa
enter
pop
push
popa
jae
jae
sbb
addr16
test
push
or
dec
dec
outsl
stos
xlat
sbb
sbb
inc
cld
add
inc
shrb
sub
fstpl
and
icebp
pop
xchg
add
subl
je
ds
or
sti
fmull
adc
xchg
dec
je
sub
or
mov
lahf
mov
aad
mov
mov
out
inc
jg
dec
mov
mov
out
ret
push
pop
jb
push
cmp
mov
stos
mov
insl
aad
push
sbb
inc
lret
xor
aaa
and
xchg
orl
clc
int
addr16
push
push
insl
shlb
push
push
sub
push
int
pop
adcl
adc
mov
mov
icebp
addr16
and
jae
adc
xchg
or
xor
sub
repnz
bound
les
cs
mov
in
clc
adc
pushf
inc
jle
loope
pusha
jmp
into
lahf
pop
pusha
mov
scas
mov
pushf
sbb
pop
roll
push
or
pop
mov
pop
xor
pop
pop
mov
sbb
test
fcomps
cltd
lock
xor
pushf
stos
or
std
lods
divl
insl
cli
inc
pop
xlat
sbb
sar
inc
scas
mov
clc
mov
cltd
test
stc
insl
push
arpl
nop
xchg
dec
jge
pushf
outsb
jo
cmpsb
xor
adcb
xor
outsb
shr
ds
xor
fsubrs
mov
out
push
cmc
jle
mov
mov
test
jg
imul
add
or
mov
cmc
mov
fnsave
add
xlat
mov
add
pop
adc
xchg
add
jl
add
outsb
cltd
icebp
clc
sub
cmp
iret
flds
cld
adc
or
or
and
sbb
in
iret
pop
sub
in
pop
cld
mov
sub
outsl
adc
xor
icebp
dec
sub
sahf
push
or
mov
popl
andb
imul
cwtl
adcb
loopne
clc
out
in
or
mov
jecxz
pop
inc
cmpb
iret
jbe
inc
dec
iret
popa
jle
mov
shlb
xor
add
mov
out
test
xor
outsl
ret
fisttpl
rcrl
shrl
and
push
pop
pop
and
mov
in
in
push
imul
lock
hlt
aam
sub
mov
fisubs
divl
shll
fcompl
sahf
adc
aam
jo
into
cmp
mov
cmp
test
mov
mov
lds
mov
imul
dec
cmp
adc
mov
test
mov
push
jns
push
lahf
nop
aas
jecxz
loopne
les
mov
mov
rolb
popf
out
loope
jne
in
rorb
cmp
push
add
cmpb
mov
mov
repz
aam
dec
mov
pop
or
jecxz
subl
fs
cwtl
rol
jmp
daa
in
or
cwtl
mov
sbb
xchg
movsl
sbb
das
inc
sub
dec
mov
sub
mov
enterw
push
sbb
jbe
sub
lcall
mov
leave
repz
out
jmp
jp
pushf
and
add
xor
test
pop
cltd
pushf
sbb
push
arpl
fwait
push
or
mov
mov
inc
pushf
lahf
dec
outsb
or
and
jmp
in
imul
xchg
insl
loopne
into
test
call
jecxz
xchg
push
pop
cmpsb
inc
mov
add
xchg
xor
das
mov
ja
fstps
cmp
dec
add
add
inc
xchg
jg
idivb
cmp
cltd
addb
lahf
sarl
enter
fs
jae
and
icebp
push
loop
in
out
add
jnp
cmp
mov
lock
mov
push
fld
xor
adc
and
ficoms
ljmp
sbb
adc
arpl
xchg
and
adc
inc
sbb
jg
aas
push
arpl
xor
shll
and
imul
es
imul
addr16
xor
dec
pushf
shl
cli
loope
push
std
sbb
fbld
push
and
push
insb
inc
xchg
sarl
mov
movsl
in
les
push
gs
jns
cmp
aas
or
pop
xchg
mov
imul
jp
dec
es
add
xchg
jge
mov
aad
stos
xor
cmp
push
shll
fadd
push
adc
sahf
pop
iret
push
or
mov
scas
in
push
dec
adc
xchg
inc
loop
xchg
jb
icebp
add
fsubrs
fisubrs
inc
lcall
out
mov
pop
insb
adc
sarl
inc
jb
popa
sub
and
jecxz
dec
sbb
sti
stos
mov
add
lret
dec
adc
pop
lock
dec
mov
mov
mov
xor
jbe
fisubrl
in
add
cmp
sub
gs
or
insl
movsl
aad
imul
jecxz
push
je
push
pop
sbb
pop
dec
in
shlb
pop
jnp
mov
adc
movsb
mov
enter
push
mov
dec
sub
shrl
sarb
add
dec
and
mov
inc
mov
orl
push
add
mov
mov
popa
push
mov
push
repz
ds
aam
repz
ljmp
and
jns
mov
jnp
lods
add
rcrl
std
push
mov
inc
lds
lret
shrl
and
out
pop
inc
test
lods
jge
and
gs
cld
push
sahf
xor
js
inc
js
lods
inc
iret
pop
push
ret
neg
or
mov
adcb
ret
adc
dec
inc
neg
pushf
int
stc
push
add
cwtl
mov
adc
mov
pop
js
sub
pop
xchg
xchg
loopne
outsb
add
push
xchg
cmp
sar
xor
push
dec
dec
pop
push
xchg
lock
mov
jns
xchg
enter
inc
xchg
je
adc
sti
fsts
fistpl
call
mov
jp
mov
or
pusha
sub
cltd
stos
cld
test
in
aad
repnz
adcl
xor
sbb
out
dec
or
lret
jbe
ja
cmc
jo
mov
dec
lods
add
pop
cs
rorl
nop
bound
jae
jne
leave
ret
and
mov
xor
test
push
push
add
mov
popf
adc
pusha
js
pop
aad
cs
sbb
test
jmp
adc
enter
mov
adc
and
into
sub
xor
push
ffree
and
mov
xor
ret
pushf
insb
jnp
fldl
hlt
ret
sbbl
push
and
mov
test
arpl
sub
das
pushf
sub
add
stos
jae
pop
push
xchg
lahf
movsl
mov
sbb
frstor
sub
pushf
push
jb
push
inc
xchg
cltd
imull
adc
mov
sbb
outsl
or
sub
fisubl
and
xor
add
or
mov
scas
or
outsb
daa
jo
jnp
xchg
mov
in
push
daa
cmp
repz
adc
testb
div
stos
push
pop
stos
lds
and
fbld
jp
mov
add
xor
inc
leave
cmp
push
or
int3
test
ret
xchg
shrb
pop
stos
scas
lods
call
movsb
rcrl
andl
mov
mov
adc
ficoms
iret
sub
lods
popf
pop
jns
jp
int3
into
aam
cmp
and
xchg
fbld
lock
pop
dec
dec
inc
or
push
je
pop
nop
lret
out
lods
mov
mov
xor
add
fisttpll
cmp
negl
and
hlt
push
aaa
jno
sub
push
imul
mov
sub
rorl
sbb
xor
push
scas
movsl
sub
repnz
test
jae
mov
inc
popa
cli
jo
sub
repnz
dec
loope
jbe
add
add
mov
pusha
mov
mov
add
rorl
loopne
mov
push
rclb
mov
addr16
pop
popf
scas
cli
push
cld
sbb
jmp
pop
mov
pop
pop
in
cmpsl
out
jns
lret
mov
mov
emms
push
sbb
xchg
sbb
add
movsl
mov
mov
imul
mov
mov
out
in
pop
scas
dec
std
push
pop
aas
pusha
mov
fsubl
mov
add
jle
dec
jo
push
and
inc
mov
sbb
xchg
mov
adc
push
test
aaa
inc
mov
mov
lcall
add
fmuls
daa
mov
movsl
mov
jnp
push
out
or
lret
in
mov
mov
addl
dec
xchg
or
aad
jge
sarl
stos
mov
lock
je
push
sub
mov
int3
scas
nop
pop
push
test
jbe
add
mov
sbb
fwait
mov
sub
call
aas
out
sbbl
repnz
mov
pop
pop
xor
dec
push
ret
or
lods
cmp
and
push
jne
fcoms
sbb
adc
inc
fiaddl
stos
sub
inc
push
in
jno
dec
dec
push
mov
xor
cltd
shl
aam
jo
push
das
mov
ds
dec
cltd
and
add
loop
cmp
sarl
mov
pop
mov
shll
xor
faddp
ja
dec
sahf
xor
jg
jmp
hlt
stos
dec
pushf
push
and
out
repnz
lock
jmp
ret
rcr
sbb
mov
cmp
fsts
sub
mov
data16
scas
aas
push
push
mov
inc
in
pop
xchg
xor
sbb
cmp
push
add
inc
test
xchg
popa
test
in
push
out
adc
imul
rorb
sub
in
jnp
cmp
or
roll
inc
aam
mov
outsb
pop
int3
xor
sub
ds
in
imul
xor
xor
aaa
mov
dec
not
push
pop
inc
add
sarb
mov
sarl
xor
daa
je
sub
loopne
jp
fstl
mov
pop
dec
enter
scas
dec
out
xor
inc
xchg
clc
xchg
outsb
fiadds
add
ds
ja
jne
and
popf
lea
pop
dec
pop
loop
pop
xchg
cmpsb
pushf
outsl
jl
pop
mov
mov
jae
cmp
icebp
test
mov
cltd
xchg
pop
imull
jnp
test
xchg
lods
fisubrl
jg
jmp
inc
addr16
clc
popf
inc
mov
aas
pusha
xchg
js
jae
cmp
repnz
or
cmc
jae
pop
pop
icebp
and
js
cmp
dec
sbb
fbld
lods
dec
shrl
adc
pop
mov
jmp
push
push
fdivrl
out
cmpsl
mov
mov
inc
call
fbld
pop
jmp
sbb
mov
in
adc
sub
stos
es
jbe
inc
mov
adc
dec
aaa
xchg
mov
jge
inc
or
into
fsubs
cltd
arpl
and
movsl
pop
mov
mov
xlat
rcrl
xchg
push
jecxz
dec
sub
inc
pop
sub
mov
jae
fwait
cli
add
adc
push
add
lret
cmpsb
out
mov
sbb
out
cmc
push
or
je
or
sar
sbb
dec
daa
lock
sti
or
aas
jo
jl
mov
icebp
leave
pop
adc
iret
adc
insb
pop
repnz
lods
cmp
jmp
push
lcall
lahf
push
jbe
enter
adc
jb
andl
pop
sub
int3
mov
push
push
sub
mov
repnz
sbb
or
dec
xor
loopne
in
push
sarl
mov
mov
sbb
xor
push
add
dec
mov
mov
pop
mov
repnz
and
out
pop
fdiv
outsb
ret
mov
add
scas
inc
stos
xor
lock
push
mov
rcrl
mov
jl
sbb
jmp
push
lods
pop
or
enter
mov
pop
or
jnp
jmp
sahf
cmp
in
xor
sbb
mov
stos
jb
or
es
fwait
mov
mov
mov
loop
jmp
cli
out
dec
mov
mov
insb
movsb
es
adc
or
stos
cmp
pop
mov
sub
jl
sub
jb
fxch
testb
aas
sarb
jne
pop
andl
cwtl
outsl
push
adc
mov
in
cmp
pop
or
jle
adc
or
inc
aad
mov
imul
mov
test
popf
shrl
out
sbb
std
ljmp
mov
outsl
cs
cli
sbb
scas
cmp
nop
adc
fs
xchg
cld
addr16
sbb
sub
jp
dec
clc
lcall
jne
dec
out
pop
std
ja
sub
pop
adcl
insl
test
push
stos
mov
repz
movsl
cmpsb
lea
decb
pop
push
stos
fisttps
mov
xchg
repnz
int3
adc
sub
jb
cltd
pop
dec
das
daa
in
pusha
scas
ret
cmp
aam
lret
fdivrs
xchg
xchg
pop
stos
jp
add
xchg
lds
and
sti
and
dec
push
addr16
xchg
outsb
mov
mov
rcl
mov
das
pop
addr16
add
das
add
dec
and
lahf
les
pusha
lahf
xor
jb
stos
or
dec
inc
mov
or
or
jp
xchg
out
mov
sbb
mov
lea
or
addr16
data16
arpl
inc
and
mov
mov
cmc
or
call
push
cmp
xchg
sbb
xchg
inc
push
mov
hlt
lahf
addr16
jb
rorl
loopne
lret
and
and
push
lods
or
mov
jge
mov
movsl
sti
cmp
and
or
insb
hlt
jle
or
insl
into
rcl
xchg
fwait
inc
pop
cmpsb
or
cltd
movl
aam
loopne
mov
ds
mov
jne
lahf
mov
aaa
add
enter
push
and
push
lea
mov
ret
mov
scas
mov
add
pop
jle
inc
popf
sbb
insl
aam
xchg
pop
or
sub
cmpb
decl
or
add
mov
xorl
std
clc
sbb
xor
pop
pop
mov
mov
sbb
mov
cwtl
les
sti
out
f2xm1
push
inc
pop
ret
cmpsb
xor
pop
sti
xchg
xor
and
repz
xchg
and
insl
xor
movl
push
cmp
ljmp
es
and
packssdw
sbb
mul
mov
mov
push
sbbl
mull
out
xlat
xchg
and
pop
pop
dec
inc
xchg
sarb
stos
aam
leave
into
pushf
test
mov
in
push
xor
iret
adc
popf
dec
lods
mov
add
mov
pusha
pop
loop
sbb
or
fsubrs
mov
mov
sysenter
xor
dec
adc
jb
add
popa
and
pop
mov
jp
sub
ljmp
fiaddl
loopne
test
mov
cs
sub
iret
dec
add
and
std
push
adc
aas
mov
fnstsw
push
outsl
xchg
pop
out
addr16
add
jo
xchg
sbb
stos
mov
mov
sbb
fucom
cmp
dec
mov
xchg
out
pop
in
dec
icebp
test
inc
cmp
pop
sub
rorl
in
adc
jmp
data16
stos
sbb
pop
push
sub
das
cli
cwtl
enter
or
xchg
add
loopne
imul
mov
push
add
clc
sub
into
jb
jo
pop
sub
cwtl
xor
jl
pop
ds
cmp
imul
in
add
xor
aad
call
mov
fs
or
outsb
int
call
sbb
insl
data16
xchg
mov
arpl
cltd
jp
mov
jne
leave
mov
dec
jecxz
lds
inc
add
xchg
sbb
out
and
cld
je
mov
pop
mov
adc
mov
mov
ljmp
cmpb
pop
out
ficoml
mov
std
xchg
inc
in
push
arpl
mov
lock
sub
fsubrs
and
cld
sub
mov
push
mov
out
sar
jae
push
add
out
out
mov
dec
out
or
cmp
lods
aad
xchg
mov
push
pushf
xchg
jnp
aas
mov
cmp
cld
dec
xchg
shlb
or
icebp
pusha
inc
mov
inc
mov
loopne
jg
xchg
add
mov
jbe
aaa
mov
pop
out
gs
cmp
dec
fstpl
int3
mov
idivl
cmpsb
clc
subb
in
push
inc
fistl
sbb
sub
gs
push
cmpsl
outsb
fwait
jo
std
mov
mov
pushl
cmp
push
cwtl
int3
fsubrl
cmpsl
mov
xor
rcrb
sbb
ss
inc
loopne
xchg
mov
cs
gs
mov
and
test
pop
andl
stos
les
jbe
xchg
jmp
lahf
rcrb
push
fs
cltd
test
mov
fs
test
sub
dec
mov
addr16
push
loope
fwait
pop
arpl
js
inc
pushf
mov
push
xlat
stos
ja
cmpb
popa
insl
jl
mov
bound
arpl
mov
loope
scas
std
cld
inc
ja
push
and
sub
xor
inc
fstps
outsl
mov
adc
mov
xchg
mov
jo
pop
jne
push
imul
or
ror
adc
ss
decb
lods
xlat
pop
ret
les
add
das
enter
push
sarb
mov
aas
pusha
insl
test
cs
mov
xchg
rclb
sti
sahf
push
sub
cmpl
test
mov
push
inc
pop
mov
in
mov
push
push
xor
je
insl
pop
mov
je
add
outsl
pop
ds
adc
dec
and
push
fptan
push
bound
xor
add
or
out
mov
pushf
jg
lea
pop
add
imul
inc
sbb
inc
adc
loop
in
pop
test
ret
scas
fmuls
cmp
imul
test
mov
xchg
add
sub
dec
inc
and
popf
inc
dec
out
dec
add
and
jle
das
stos
imul
ljmp
insb
daa
pmaxub
push
dec
push
shl
into
mov
aaa
push
xchg
or
push
ret
xor
decb
mov
movsb
xor
xor
icebp
push
sbb
das
inc
out
gs
dec
int3
pop
insb
and
roll
mov
in
daa
je
push
call
test
es
xor
push
pop
add
jl
mov
lds
aas
insb
dec
in
ret
add
pop
int3
repz
or
adc
int
mov
cmovae
shrb
pusha
inc
mov
clc
xchg
arpl
or
add
push
es
add
out
mov
xlat
mov
leave
popf
adc
scas
cmp
dec
push
shrb
out
bound
lea
sub
fisttpll
adc
jg
mov
aam
or
in
aad
pop
mov
adcl
add
daa
xor
test
sub
arpl
pop
fdivrl
and
and
fsubrs
and
repz
pop
xor
mov
aas
mov
jg
ljmp
stos
mov
popf
dec
ds
lock
fists
sub
mov
xor
lahf
out
push
cltd
cli
mov
mov
rol
mov
icebp
xor
mov
xchg
lods
jle
gs
dec
pushf
rcrl
dec
push
sub
hlt
mov
lods
negb
jg
adcb
mov
dec
push
ret
icebp
test
jmp
xchg
std
inc
jmp
or
xor
clc
dec
mov
call
xchg
repz
and
cs
in
mov
sbb
shr
mov
pop
call
and
dec
xor
gs
dec
add
xchg
jae
mov
leave
cmp
popf
mov
scas
jp
test
fldl
popa
orl
mov
arpl
scas
dec
pop
lahf
sbb
push
adc
movsb
test
fwait
sbb
repz
out
mov
out
aas
out
push
nop
sbbl
test
jp
and
cmpl
jae
outsb
mov
jge
in
sbb
ret
addr16
dec
xor
das
test
or
fistl
bound
push
les
out
sub
test
hlt
sbb
push
adcb
xor
arpl
pusha
sbb
rcll
cmpb
jbe
pop
or
scas
jbe
cmp
out
push
inc
shlb
imul
adc
or
sub
inc
add
aas
lock
fdivrl
loopew
jo
test
std
cmp
mov
push
call
jnp
out
xor
inc
mov
out
adc
rcrb
rolb
mov
lret
push
or
lcall
ret
or
push
bswap
fcom
and
fmuls
push
leave
push
lods
test
mov
call
test
jnp
mov
adc
inc
nop
das
lahf
pop
rorl
pop
adc
xchg
rcr
add
jns
jne
inc
into
mov
sub
test
or
mov
xor
cmp
fisubl
mov
sar
dec
xor
dec
mov
fsub
xchg
jp
sub
mov
fisubrs
test
dec
aam
mov
lods
jecxz
test
xchg
push
push
xor
mov
out
cmp
shl
cmp
dec
repnz
fmull
cmp
sbb
arpl
push
fiaddl
rcrb
jae
mov
adc
or
stc
xchg
sbb
dec
and
dec
in
adc
inc
leave
and
pop
sub
out
sar
aaa
inc
adc
dec
in
sbb
leave
pop
lds
add
xchg
loopne
mov
jg
inc
fildll
add
in
stos
pop
stos
fsts
es
and
cli
ret
mov
and
ds
movsb
or
sub
lahf
cmc
or
xchg
insl
scas
pop
enter
cmp
xchg
je
gs
lcall
fsubrl
loop
push
pushf
sub
dec
pop
cld
adc
notl
cmp
add
jge
jne
jne
dec
or
inc
and
xchg
adc
cmpsb
xchg
add
fmuls
sub
push
sbb
fs
xor
lret
adc
test
inc
jmp
roll
sti
ret
cmp
mov
jmp
push
fcmovnu
sti
fstpl
imul
adc
lods
scas
pop
mov
mov
test
es
xchg
cmp
dec
outsb
pop
insb
pop
pop
sub
cmp
clc
xchg
enter
mov
or
cmp
xor
sub
mov
aad
mov
push
in
out
out
testl
js
clc
inc
out
testb
xchg
sarl
push
dec
mov
push
sbbl
cltd
idivb
jge
out
sub
jae
clc
mov
push
repz
mov
cmpsb
scas
int3
inc
into
cli
add
adc
inc
cmp
fdiv
mov
xor
out
repnz
sbb
test
mov
adc
cmpsb
jae
aaa
cmp
lods
out
cmpsl
in
adc
jns
sub
rorb
sahf
mov
pop
sbb
loop
clc
push
fadd
insl
pop
mov
dec
mov
mov
loope
mov
dec
addr16
xchg
repnz
cmp
mov
inc
stos
mov
push
pop
pop
divb
dec
sbb
out
cmpsl
rcr
pop
jo
ud0
outsb
pop
xor
fcmovb
and
pop
ss
fisubs
je
aam
mov
call
lret
dec
cmc
cld
jns
fildl
fldl
movsl
nop
into
xor
loop
xchg
mov
out
shr
cmp
hlt
mov
gs
fnstenv
and
cmp
ljmp
lret
fcoms
sub
dec
pusha
movsl
aaa
adc
icebp
or
add
enter
xchg
adc
ret
mov
xchg
xor
push
frstor
push
inc
cmp
repnz
std
je
inc
leave
inc
mov
push
rclb
inc
mov
testl
mov
xchg
sahf
jne
and
ds
call
in
mov
or
orl
xchg
cmc
mov
outsb
jbe
and
xchg
lods
pop
sub
lods
das
sbbl
lds
mov
push
and
int
add
out
das
popa
sub
in
outsl
xchg
push
jmp
daa
cmp
add
aam
add
movsl
pop
pop
adc
cmp
sub
jp
cmc
inc
add
adc
xchg
sbb
shlb
push
mov
sub
dec
pop
mov
pop
lds
adc
dec
add
push
or
add
fcmove
mov
xor
js
xchg
fdivrp
or
cmpsl
lods
in
or
cmpsl
pushf
gs
push
repz
mov
cmpsb
out
movsb
fsubl
xlat
imul
js
shrb
push
xorl
xorb
loope
sti
adc
pop
ret
into
mov
add
loop
inc
mov
test
pop
neg
daa
xchg
xchg
aad
stos
or
mov
and
daa
or
imul
in
push
aas
jb
cmp
and
dec
xchg
pop
adc
sub
daa
or
mov
aaa
push
mov
insb
push
mov
inc
cmp
push
push
cwtl
pop
stc
loop
mov
push
dec
out
mov
inc
pop
mov
pop
cli
xlat
in
pusha
xchg
inc
outsl
fmulp
dec
adc
xchg
std
movb
push
sbb
lcall
psubq
daa
notl
push
sbb
rolb
sbb
in
icebp
cld
pop
pop
mov
data16
add
cld
or
sbb
dec
std
pop
cmp
iret
rcrb
adc
push
lds
loope
lcall
inc
lret
pop
inc
mov
jge
lds
std
mov
imul
fistl
mov
inc
and
bound
inc
or
cmp
testl
jbe
testl
jecxz
pop
dec
xor
fdivrs
adc
lcall
cmp
call
jecxz
sbb
jmp
data16
xorb
dec
and
test
cmpsb
or
pushf
fcomp
xor
adc
ds
imul
or
in
xchg
leave
lahf
cltd
pop
iret
or
orl
mov
aaa
inc
add
adc
adc
push
hlt
or
popa
push
pop
pop
dec
pop
out
in
push
pusha
lods
rclb
jecxz
mov
lcall
jmp
sub
mov
into
out
je
jnp,pn
pop
into
or
xor
into
mov
movsb
repz
push
pop
xchg
xchg
leave
xor
imul
push
mov
inc
lds
dec
pop
mov
pop
shrb
loopw
and
push
push
std
push
mov
aam
sbb
or
cmp
sbb
cmp
je
aam
movsb
hlt
xchg
stc
orl
pusha
dec
shll
imul
or
xchg
decb
cmp
insb
aas
gs
sub
mov
hlt
fstps
rcrl
and
out
jecxz
stc
xor
dec
sbb
jns
jge
inc
jno
repnz
lds
sbb
mov
add
fs
rorl
add
repnz
cmp
das
repz
lods
rcrb
jb
adc
cmp
cwtl
loope
cmp
test
push
lock
push
mov
and
xchg
lods
jmp
out
or
dec
imul
xorb
xor
push
push
ret
xchg
rclb
shrb
cmp
arpl
punpcklbw
add
mov
aad
cld
xchg
pop
sbb
imull
scas
mov
dec
mov
sbb
inc
or
and
mov
or
lock
pop
jecxz
lahf
and
jmp
push
push
and
mov
enter
mov
daa
sbb
cmp
test
push
in
or
and
push
jne
jg
cmp
aad
dec
and
pushf
js
mov
stos
sub
jno
cli
cwtl
xor
scas
mov
repz
mov
nop
in
sbbl
dec
push
bound
fs
shrd
inc
test
inc
fsub
out
in
jp
sbb
push
add
clc
inc
std
leave
xor
lret
and
mov
mov
repz
xchg
mov
inc
push
jbe
mov
lcall
jmp
out
mov
bound
push
sar
push
mov
aam
jns
add
xor
inc
stc
add
dec
add
loope
push
inc
jb
neg
mov
dec
cli
xchg
xor
jg
lock
jno
dec
in
aam
clc
pop
sbb
add
test
cltd
jns
outsb
jg
cld
cmp
xor
mov
cmp
inc
cltd
mov
mov
inc
mov
jae
fisttpl
nop
pop
arpl
inc
std
xchg
sbb
add
inc
mov
and
js
repnz
push
pop
push
loop
out
adc
arpl
inc
push
xchg
imul
sub
mov
cmp
icebp
xchg
test
and
lret
rclb
incl
fldcw
pop
shrb
pop
lcall
jl
mov
fwait
inc
mov
xlat
mov
dec
pop
adc
icebp
cmp
adc
or
push
sub
fsubrl
iret
jo
add
mov
inc
pop
pop
cmp
sub
fwait
insl
sub
loop
mov
and
loope
push
push
jo
sbb
and
leave
stos
pop
add
movl
rcrb
pop
and
push
sbb
and
xchg
add
shll
inc
pushl
push
mov
arpl
in
and
sbb
jae
mov
jl
orl
add
scas
movl
add
mov
loop
fucomip
es
stos
fimull
test
lcall
push
mov
loop
ss
movsb
sub
dec
cltd
sub
pushf
dec
and
jg
decb
mov
les
lods
test
jg
orl
push
aaa
jmp
sbb
push
lcall
mov
xor
mov
push
mov
std
bound
sahf
repnz
cmpsb
nop
ficoml
lahf
imul
pop
xchg
jl
xchg
add
icebp
xor
out
and
repz
popa
fidivrs
inc
cmp
hlt
icebp
push
and
and
mov
out
mov
mov
add
add
lret
xchg
push
lea
push
mov
adc
jp
mov
sbbl
jne
inc
dec
rcll
sub
sub
movsl
ss
cmp
in
insl
or
aad
iret
add
cmp
cmp
mov
or
rorb
jmp
push
inc
repz
pop
push
data16
test
pop
or
clc
mov
sbb
popf
adc
rolb
imul
sbb
dec
ss
testb
xor
stos
push
test
icebp
jns
rorb
or
adc
daa
push
in
dec
mov
or
ds
or
xor
add
out
adc
testb
nop
push
in
loopne,pt
mov
mov
add
mov
lds
or
xor
sbbl
mov
add
push
fcomip
cwtl
scas
orb
sub
stos
stos
jle
shll
jmp
rcll
jae
mov
sar
es
adc
lea
add
jae
sbb
leave
in
pop
push
shll
dec
mov
add
test
notl
sbb
or
inc
xorb
mov
push
pop
ds
popl
mov
aam
jl
and
divl
push
adc
jle
push
cmc
js
add
pop
mov
scas
fs
popa
inc
dec
push
mov
dec
xchg
mov
test
mov
insb
js
push
aam
lret
lock
jo
lock
push
fisubrs
cmp
jp
sbb
leave
pusha
pop
mov
popf
aad
push
repnz
popf
fidivs
jne
loope
aad
fsubs
pop
cwtl
adc
jbe
data16
cmp
cmpsl
xchg
test
mov
cmp
ret
test
mov
iret
aaa
xchg
xchg
pop
out
sbb
fldcw
sbb
push
popf
in
sbb
adc
in
mov
and
cmpsl
ret
adc
sub
cs
mov
ficompl
jb
mov
push
fwait
cmp
xor
adc
imul
sub
push
xor
ds
in
test
sub
daa
sahf
dec
pusha
inc
lock
and
test
inc
fisubl
call
inc
inc
xchg
xchg
dec
shl
xchg
out
shlb
sbb
popa
add
es
scas
sub
lds
add
mov
outsb
addr16
adc
or
mov
inc
and
fptan
jns
sbb
push
lahf
nop
pop
test
ds
icebp
lods
sbb
divb
sub
add
cmpsl
fnstcw
mov
mov
ljmp
adc
test
les
jbe
sbb
repnz
nop
sbb
push
and
clc
inc
les
sbbl
cltd
add
gs
lret
mov
sbb
ret
lahf
icebp
mov
inc
cmp
test
pop
icebp
xchg
xchg
xchg
hlt
pop
mov
and
sbb
sahf
ljmp
xchg
fcoms
lcall
mov
mov
mov
rclb
aaa
das
mov
repnz
arpl
std
jo
pop
push
sbb
sbb
mov
jae
jge
ljmp
and
lcall
mov
cmp
stos
cmp
lcall
movsl
sahf
jle
pop
pop
mov
xchg
push
into
aaa
int3
xchg
lcall
int
mov
pop
dec
outsl
pop
lcall
jle
mov
cs
call
stc
fucomip
adc
dec
mov
test
scas
pop
lahf
jecxz
jg
in
xor
shrb
lret
std
je
mov
fs
cwtl
daa
jnp
ja
xor
imul
testl
xchg
rcrl
daa
pop
pop
jno
mov
mov
insl
pusha
sub
mov
test
ficomps
mov
cwtl
data16
or
arpl
andl
cmp
jns
cmpsb
pop
outsl
adc
and
mov
mov
jae
jge
push
pop
fidivl
sub
test
pop
lret
dec
fstpl
es
jp
jmp
mov
hlt
fucomp
xor
mov
ss
cwtl
sbb
inc
out
call
negb
dec
out
and
push
dec
je
mov
imul
movsl
mov
mov
je
or
cmp
fimull
mov
sub
ljmp
mov
xchg
stos
mov
out
fstps
xchg
clc
pop
shl
addb
mov
mov
xchg
cmc
cmp
mov
sub
xor
out
ds
jmp
add
jns,pn
es
xchg
cmpl
jbe
add
inc
dec
rcl
rorl
xchg
pop
xchg
xchg
in
dec
std
push
scas
or
adc
push
jle
jne
xchg
fstps
xchg
js
imul
fcoml
fisttps
push
push
add
iret
push
xchg
xor
mov
inc
lea
andb
inc
fwait
into
hlt
pusha
adc
pop
fld
inc
test
repz
dec
xchg
mov
adc
std
xchg
cmp
jmp
mov
hlt
orl
dec
jmp
jo
xor
lahf
sbb
dec
jno
ficoms
pop
mov
adc
mov
pop
test
cmp
mov
adc
lods
mov
dec
dec
push
mov
iret
cmpsb
add
lods
mov
cmp
push
addr16
pop
repnz
repnz
and
cwtl
subb
inc
popf
test
cmc
repnz
push
mov
popl
pop
or
loopne
mov
test
inc
aas
fbstp
jbe
adc
jle
cmp
lods
pop
fbstp
sub
roll
ret
loop
pusha
dec
jge
adc
aam
js
addr16
hlt
test
scas
cmpsl
inc
mov
sub
into
ret
adc
adcb
cmp
imul
sub
iret
xchg
ss
repnz
repnz
mov
lds
outsb
push
add
sbb
adcl
adc
das
jno
test
push
sbb
lret
or
rorl
pop
push
xchg
add
mov
push
pop
mov
dec
mov
sbb
pop
jne
xcrypt-ofb
cmpsl
imul
test
mov
daa
or
mov
mov
scas
pop
lcall
aas
dec
ret
aaa
mov
imul
and
lods
jp
lock
lcall
sti
out
sbb
out
xlat
cmp
push
mov
fldt
jle
jb
or
sbb
adc
xor
xchg
xlat
hlt
jbe
jp
aad
mov
outsb
xor
pop
dec
xor
insl
imul
movsl
daa
shlb
outsb
cwtl
test
daa
imul
mov
scas
rcl
call
in
push
addr16
dec
dec
or
cmp
test
fstl
sbb
sub
pop
jb
fdiv
push
mov
lds
and
dec
std
and
mov
mov
clc
push
sbb
mov
pusha
inc
mov
jge
or
hlt
es
adc
push
pop
jnp
je
pop
out
std
or
sub
jecxz
jl
bnd
and
idivb
inc
popa
xlat
sub
ror
call
or
sti
add
test
int
jmp
dec
sbb
cld
fwait
in
mov
mov
shrl
ret
xchg
mov
ljmp
and
fdivr
xchg
mov
sub
sub
adc
sub
data16
rcrb
xor
or
cmp
cmp
popa
cwtl
push
outsb
jo
lods
mov
outsl
arpl
jge
sub
sahf
sub
push
lret
lods
mov
adc
les
lret
mov
mov
push
lahf
lock
jae
test
lret
adc
pop
cwtl
test
or
ss
cld
mov
mov
das
out
jne
rcrl
sti
mov
pop
jne
shrb
jp
xchg
out
shll
lea
sub
xor
cmpsl
sbb
add
adc
mov
outsb
ss
mov
scas
iret
cs
jp
mov
faddl
or
aam
inc
and
xor
jbe
add
andb
inc
add
cmpsl
pop
lods
sub
int3
mov
mov
fisttpll
aad
and
cmc
in
cli
pop
imul
mov
inc
push
and
iret
lahf
nop
pop
adc
xor
pop
ss
jmp
add
sarl
cmp
mov
repnz
sub
jp
repnz
jmp
cmp
mov
addr16
ds
inc
loop
mov
mov
rcrb
enter
and
daa
push
pop
mov
mov
fsubrs
push
mov
push
push
and
jnp
sub
pop
idivl
cmp
lea
insl
das
or
lcall
int3
adc
std
rcrb
mov
je
sub
arpl
iret
mov
or
xchg
data16
mov
jle
inc
add
mov
mov
incb
sbb
outsl
or
aad
fistpll
std
dec
xchg
inc
pop
fimuls
mov
push
push
xchg
nop
add
fidivrs
pop
adc
cwtl
pop
ficompl
cld
push
test
out
movsb
or
sub
aas
xor
shrb
push
mov
xchg
xor
sbb
push
or
ret
lcall
sbb
adc
icebp
jl
scas
ljmp
inc
lret
sub
xor
add
sub
mov
inc
or
into
mov
lret
add
outsb
pop
imul
cmp
out
jo
xlat
mov
icebp
loopne
cmp
and
insl
and
clc
pushf
shll
and
xchg
sarb
pusha
jmp
jne
loope
enter
iret
xlat
fistl
cmp
pop
mov
and
jnp
inc
mov
cmpb
push
mov
jle
xchg
add
outsb
and
or
rcrb
sbb
into
jns
jp
int
adc
and
add
test
adc
jge
mov
lds
into
adc
ftst
push
cmpsb
addr16
shll
push
dec
aam
aaa
dec
call
in
adc
sub
sbb
aas
push
cwtl
jns
loopne
decl
inc
push
cli
fdivrp
inc
xchg
add
leave
outsl
and
fwait
scas
mov
mov
sbb
mov
mov
adc
and
fwait
adc
adc
fldenv
popa
nop
dec
sbb
inc
aad
push
jo
es
mov
mov
lods
or
lock
add
es
mov
sub
lret
push
in
pop
sub
mov
cmp
call
cwtl
xchg
pusha
jo
dec
bsf
mov
or
movsl
je
adcb
daa
pop
and
pop
cmpsb
mov
or
adc
ror
es
stc
pop
push
dec
fnstcw
movsl
call
mov
inc
pop
popa
pop
pop
add
into
testl
add
push
negl
push
mov
pop
jecxz
adc
xlat
das
mov
mov
add
jp
mov
loop
and
mov
push
loope
int3
aam
pop
mov
mov
or
inc
popa
sbbl
mov
mov
pushf
push
sbb
jo
data16
out
sbb
sti
mov
push
scas
or
jns
inc
xorb
sbb
xchg
push
repnz
addb
adc
xchg
sbb
in
jecxz
push
out
dec
xchg
xchg
pop
push
data16
jecxz
jmp
bound
arpl
aaa
push
lahf
aad
pop
push
add
in
shlb
clc
std
mov
push
repnz
cld
lcall
sub
push
test
orb
sti
xchg
int
adc
pop
in
or
or
jmp
js
paddd
pop
mov
in
mov
jp
push
cmp
inc
push
pop
or
les
xor
push
xchg
shl
lds
bound
xor
mov
inc
push
mov
mov
mov
jg
xor
lods
loopne
inc
mov
xchg
ret
or
mov
cltd
iret
mov
sub
xchg
xor
push
sbb
jmp
pop
mov
pop
lods
iret
inc
iret
adc
inc
lcall
ljmp
or
inc
imul
xor
or
roll
dec
adc
lfs
adc
pusha
nop
jg
test
aaa
ss
mov
inc
pop
mov
hlt
out
cmpsb
fmul
fisubrl
aad
inc
ja
xchg
mov
in
pop
sub
scas
jp
and
pop
and
push
pop
testl
ljmp
pop
stc
mov
push
mov
test
aad
hlt
lea
sub
mov
pop
adc
or
ljmp
or
sbb
in
adcb
pusha
loopne
addr16
out
aas
inc
lret
ja
test
fsubs
push
test
into
dec
mov
sub
adc
pop
ljmp
mov
out
push
test
fmuls
mov
mov
sub
push
leave
jmp
or
popa
mov
dec
add
mov
mov
lock
daa
dec
sub
loopne
faddl
mov
mov
xlat
in
lret
int
add
push
xchg
fld
outsb
ds
in
xor
sbb
test
adc
fstl
jb
jae
iret
imul
cmp
insb
adc
loopne
pop
cld
stos
pop
loopne
fldl
pop
fcmovnb
sbb
leave
mov
push
push
mov
push
cltd
xorl
scas
lret
fadds
das
sbb
dec
dec
dec
push
and
or
lahf
dec
fildll
push
int3
int3
mov
iret
cs
lea
inc
pop
test
fwait
mov
sbb
insb
lahf
leave
and
mov
sbbb
push
sbb
popf
ds
inc
add
cli
int3
xchg
and
mov
lea
mov
pop
out
jo
pop
mov
stos
inc
mov
pop
iret
sbb
imul
int
movsl
loope
inc
enter
rorl
pop
in
loop
xchg
sub
cld
dec
push
jmp
adc
adc
xchg
rcll
imul
shll
decl
dec
in
seto
jb
out
dec
and
xor
mov
lods
dec
cs
xchg
mov
cwtl
imull
inc
jnp
add
jbe
lret
or
mov
mov
mov
jg
mov
sarb
test
jnp
pop
in
jl
push
pushl
inc
imul
loope
call
xchg
mov
mov
or
stos
pushw
lret
jl
enter
call
xor
sbb
movsl
std
add
stos
ret
mov
pop
sbb
iretw
ret
add
aaa
leave
xchg
cmpl
mov
outsl
roll
or
jb
push
popa
mov
jne
pop
mov
iret
inc
int
xor
push
sbb
outsl
into
mov
cmp
enter
scas
int3
xchg
jb
scas
imul
outsl
push
jno
inc
inc
dec
push
cmp
jnp
inc
pop
test
aam
xchg
cwtl
add
stos
cmp
push
pop
or
out
push
in
shl
imulb
fistpl
and
dec
subl
outsb
jnp
pop
adc
fwait
push
jp
scas
nop
loopne
sti
cmpsl
jg
push
or
mov
pusha
cltd
cmp
stc
mov
push
sbb
ret
inc
mov
stos
ljmp
inc
movsb
cli
test
scas
add
cmp
xchg
fists
les
and
fldcw
cmp
leave
stos
mov
sbb
ljmp
mov
lods
idiv
cmpsb
dec
xchg
dec
jecxz
idivb
repz
push
movsb
pop
int3
xor
loope
add
or
mov
lock
mov
ja
mov
addl
ja
movsb
jl
add
js
adc
out
mov
in
push
cli
lret
or
addr16
xor
xchg
inc
lcall
je
mov
daa
push
and
les
leave
cs
fldt
in
popf
outsb
sbb
addr16
outsb
push
xchg
in
dec
jb
sti
call
or
cltd
bound
push
idivl
arpl
shll
out
sti
push
push
inc
aam
ja
subb
sbb
push
xor
sub
fcmovu
sahf
add
rolb
add
mov
add
scas
std
enter
jne
mov
push
push
hlt
cmpsl
jns
loope
sbb
inc
mov
popa
das
push
lret
or
repnz
leave
mov
xchg
test
jmp
xor
or
lret
pusha
mov
notb
adc
adc
pushf
arpl
dec
push
fiaddl
nop
xor
mov
xorl
mov
xor
cmp
faddl
arpl
push
push
popf
and
jl
or
lahf
out
jp
int
cmp
out
ljmp
mov
mov
lods
dec
dec
cmp
push
iret
arpl
sahf
ljmp
push
aaa
xor
adc
incl
inc
xor
jecxz
repz
fwait
mov
les
sbb
cmp
divl
sub
imul
and
dec
je
jo
and
std
insb
xchg
jae
dec
adc
je
push
mov
xor
jp
cmc
sub
and
cwtl
loopne
nop
adcb
clc
add
xchg
int3
rcl
lea
dec
and
pop
pop
jmp
es
sbb
gs
xchg
cmp
stos
adc
or
mov
xlat
add
out
and
sub
ljmp
xor
sub
addl
push
cmp
sbb
and
imul
arpl
pop
lods
xor
adc
aas
into
addr16
mov
mov
shlb
adc
sbb
push
xchg
jb
pushf
loope
jno
adc
scas
jo,pn
clc
or
ret
sbb
mov
mov
or
leave
test
cld
inc
out
mov
adcb
adc
sbb
and
ljmp
daa
mov
adc
push
enter
mov
orl
repnz
xchg
subl
movsb
mov
nop
dec
sti
mov
out
sbb
xchg
pop
cmp
outsb
sub
pop
inc
insl
call
or
or
loope
jecxz
mov
addps
jge
dec
ret
mov
pushf
inc
icebp
sbb
cs
push
bound
cmpsb
dec
repz
push
fs
and
stos
lds
pop
es
pusha
fisubrs
scas
sub
mov
pop
jge
jp
cmp
push
or
shlb
or
aad
stos
xor
mov
jne
fs
adc
mov
or
xor
aaa
fstpl
lea
mov
mov
push
inc
push
je
mov
inc
dec
hlt
cmpl
test
jge
dec
mov
cli
cld
dec
into
es
jp
cmp
pop
add
aaa
icebp
and
or
inc
ss
or
lea
je
cmp
sbbl
fnstcw
bound
sub
scas
mov
insb
jo
lahf
jae
stos
mov
adc
movsl
lock
sub
vxorps
sub
call
popa
test
xor
sub
fidivrs
cwtl
data16
mov
sbb
repnz
mov
lds
inc
fldl
jnp
loopew
add
and
sbb
push
push
pop
insb
add
sub
push
out
repnz
cld
addr16
es
push
push
pop
mov
fsubs
jns
cs
cld
mov
sbb
cmp
xchg
arpl
js
sub
cmp
ss
aam
push
and
mov
lock
and
xchg
rclb
jno
in
test
inc
jno
pop
mov
jecxz
addl
mov
popa
pop
roll
or
cwtl
repnz
stc
fisubl
and
mov
enter
clc
push
sub
fistl
mov
outsl
or
jle
push
addr16
aad
iret
pop
add
mov
fists
adc
adc
cld
lds
mov
jle
adc
mov
sti
repz
dec
xchg
popa
xchg
inc
shlb
xchg
push
and
jmp
adc
cmp
adc
mov
leave
or
adc
push
rcl
iret
sbb
xorl
mov
ss
bound
in
out
cmp
lock
push
sub
cmp
or
fisubl
fidivrs
fistpll
inc
mov
or
or
enter
cwtl
fs
push
frstor
insl
add
icebp
xor
ss
ja
mov
mov
out
xor
rorl
push
inc
sub
scas
fidivl
lcall
adc
mov
and
cmp
push
cmp
cld
icebp
ret
adc
sbb
add
and
jge
inc
jne
xchg
or
loop
jns
and
popf
jg
test
cmc
imul
andl
dec
jmp
adc
sub
sub
cltd
in
jg
jecxz
mov
sar
xor
popa
inc
xor
movl
push
inc
test
sbb
xchg
je
cmp
das
or
xchg
fidivl
push
push
aaa
pop
icebp
cwtl
jg
xor
jl
movsl
jae
add
in
das
mov
mov
sahf
jg
cltd
test
mov
insl
ds
mov
jbe
mov
bound
cmpsb
fsubp
jbe
cld
pop
pop
cmpb
out
enter
xor
jl
ret
mov
aas
mov
jbe
outsl
mov
add
dec
adc
ljmp
ja
rorb
push
or
jge
pop
inc
arpl
test
pop
clc
push
call
mov
mov
mov
push
loopne
xchg
dec
testb
pop
push
divb
jnp
fcomi
ljmp
out
adcl
pop
gs
inc
mov
movsb
sahf
pop
daa
mov
and
sbb
and
xchg
dec
stc
call
aam
xchg
mov
mov
lret
cmpsb
sahf
test
xchg
movsl
fwait
into
xchg
adc
xor
cmp
icebp
xlat
mov
sbbb
in
lea
lret
sbb
icebp
mov
daa
jecxz
mov
test
addr16
mov
jnp
clc
or
add
mov
cmpl
aad
xor
loope
mov
stos
scas
fwait
cmp
cmpl
scas
pop
testb
jg
lret
jne
inc
rcrb
cld
js
arpl
outsb
adc
ja
lret
jbe
lods
mov
and
lds
andl
cmpsl
aaa
arpl
add
xchg
add
xchg
lock
pop
jb
pop
cmp
xorb
data16
loop
cmpsl
push
lahf
fisttpl
popa
adc
or
xor
andl
sbb
je
mov
int
xorb
aaa
xlat
stos
aas
outsb
loopne
inc
repnz
pop
nop
mov
xchg
pop
inc
nop
lds
push
push
inc
pop
or
mov
jle
mov
test
sub
pusha
jp
sbbl
test
out
mov
sahf
cmp
repnz
out
divb
push
in
xor
roll
mov
push
pop
inc
mov
inc
mov
in
sub
inc
idiv
sub
stos
push
jmp
frstor
outsl
inc
insl
jnp
mov
inc
inc
push
insb
sbb
ret
jns
shrl
push
orl
jae
xchg
out
or
dec
cmpl
add
jmp
add
gs
fiaddl
lcall
mov
insb
stc
add
xor
jmp
out
xchg
stc
scas
push
notl
sub
inc
mov
sar
mov
je
lods
pop
mov
jg
xor
in
cwtl
test
dec
mov
aaa
aam
inc
in
sahf
sbb
repnz
add
mov
iret
add
sti
cmp
cld
sub
ljmp
mov
hlt
in
idivb
mov
pop
sbb
lret
xchg
lea
orl
pop
cmpsl
xor
mov
sub
in
mov
inc
andb
sub
xchg
popl
and
in
decb
ljmp
or
mov
mov
adc
ret
ret
and
sub
into
sbb
aas
jle
into
adc
push
mov
sbb
push
sub
cmpsb
lods
ret
incl
icebp
es
popf
and
daa
adc
cmp
in
jnp
fisubrl
push
int3
movl
sub
dec
xorb
fidivs
xchg
jle
cmp
push
mov
lock
pop
gs
dec
bnd
mov
cmp
push
dec
sbb
push
pop
cld
sub
jne
inc
insl
loope
std
sbb
out
sbbl
enter
push
movsb
dec
sub
adc
rcrl
roll
xor
and
rorl
popf
shrb
enter
adc
out
cld
mov
mov
mov
movsb
sbb
and
and
mov
cwtl
push
stc
push
outsl
or
xor
xor
jg
ja
adc
cli
insl
fisubrl
and
out
pop
pop
ret
sbb
sub
ljmp
loop
divl
xor
or
jo
sbb
mov
repz
arpl
push
and
rcr
lret
loopne
cltd
push
in
les
mov
fcomip
inc
cmp
mov
ljmp
sub
cmpsb
mov
sbb
dec
dec
imul
adc
inc
mov
dec
jns
into
pop
sub
pop
jle
gs
push
outsb
jae
loope
dec
iret
mov
int
popf
pop
stc
mov
incl
cwtl
cld
in
leave
mov
and
lock
pop
jp
jg
push
cmpsb
outsl
or
mov
mov
fcmove
sub
dec
add
jo
sti
mov
jp
sub
cmp
icebp
pop
adc
fstl
lret
xor
mov
xor
adc
fs
or
adc
fsubrs
repnz
mov
mov
pop
xchg
imul
imul
fistpl
adc
and
sarb
pop
xchg
adc
dec
sub
push
sub
xor
loopne
ror
fs
cmp
aad
rcl
loope
stos
test
cmp
mov
sub
in
dec
mov
add
sub
and
test
dec
rolb
fimull
pop
roll
loopne
push
test
jo
jmp
or
test
cmpsl
pushf
sbb
jb
cs
ljmp
mov
fwait
add
das
adc
mov
fadd
jp
cmp
movsl
lahf
add
repnz
jo
dec
loop
pop
mov
xor
dec
loop
sub
xchg
orl
gs
inc
and
lods
adc
flds
mov
test
inc
pop
loopne
mov
pop
ss
mov
int
loopne
negb
out
adc
xor
xchg
clc
adc
ret
lret
jo
cmpsb
hlt
inc
pushf
loopne
sbb
pop
faddl
adc
int
hlt
mov
xchg
cmp
ljmp
mov
sbb
xchg
cmp
cmp
jmp
or
xor
stos
push
xchg
sub
cmpb
movsl
cmp
les
pushf
test
dec
or
sub
js
into
sbb
xor
dec
shlb
in
fwait
psadbw
dec
sti
ficomps
add
push
mov
les
or
ret
jns
inc
aaa
sbb
cmc
out
mov
sub
add
or
fdivrl
lretw
sbb
mov
inc
pop
adc
fldl
push
sub
fdivrl
int
mov
std
dec
das
ja
addl
cmp
jmp
outsb
les
loop
pop
aas
outsb
sti
cmp
adc
jno
jecxz
mov
jb
testl
mov
and
jns
xor
cmpl
xchg
subb
jnp
loop
sbb
stc
pop
lret
jns
lods
enter
sbb
ficomps
pusha
dec
fwait
test
mov
out
into
pop
insl
andb
gs
out
add
cs
xchg
sbb
outsb
push
lods
pop
or
ret
dec
fcoms
pop
xchg
nop
mov
or
out
mov
mov
ljmp
stc
roll
push
je
mov
push
test
in
adcl
aas
cltd
lods
dec
shr
ds
jge
imul
add
push
push
mov
and
fwait
lret
test
hlt
fidivl
cmpsb
push
pop
aam
pop
lcall
pop
and
cs
push
aas
push
ja
mov
flds
jb
jns
icebp
jl
xchg
xlat
push
test
sbb
mov
loope
mov
outsl
call
fmul
rcll
inc
mov
jae
sbb
shrl
shr
imul
mov
mov
mov
push
ljmp
pop
and
jbe
in
je
in
outsl
in
jle
sbb
add
xchg
int3
adc
push
fdivrl
cmp
cld
inc
int
inc
cwtl
jge
daa
mov
stos
jp
dec
je
rclb
sbb
push
sahf
pop
ljmp
popa
daa
pop
mov
push
cmp
inc
pop
and
mov
loopne
loopne
jge
cli
adc
rcll
pop
jo
lods
mov
add
or
stos
fs
inc
lock
mov
addr16
jle
mov
out
sbb
sub
hlt
loop
imul
leave
xor
push
lahf
inc
jge
in
jecxz
add
notl
jbe
cmp
mov
pop
testl
mov
jae
mov
lds
std
out
mov
stos
fmuls
xor
pop
push
or
movsl
rorl
pop
mov
sbb
fistps
lea
jno
pop
rolb
push
divl
lods
mov
mov
mov
nop
sub
push
cmpb
pop
jmp
sub
or
cmc
dec
jo
adc
add
mov
sub
fldl
ja
pop
push
cmpl
addr16
xchg
cmp
or
add
pop
jecxz
imul
mov
mov
add
xchg
mov
cmp
add
cltd
push
mov
mov
insb
gs
lcall
movsl
mov
lret
cmp
mov
add
add
out
movsl
inc
fnsave
pop
lret
and
sar
sub
mov
push
add
fldl
sub
cmp
lret
xlat
sbbl
mov
and
jne
mov
repz
mov
push
lods
fadd
push
cs
inc
push
lret
psllq
popl
jnp
jmp
in
out
testl
iret
hlt
push
rcrl
aad
loop
and
push
loopne
dec
loope
sub
lret
rol
out
cmpsb
add
xor
icebp
jl
dec
pop
pop
xlat
pop
jo
call
divb
movsb
inc
and
lret
movsl
dec
inc
add
lods
dec
push
fistl
pushf
fimull
jge
repz
xchg
adc
pop
inc
mov
add
sub
mov
int
jg
pusha
arpl
adc
test
jae
jge
out
jnp
xchg
insl
rol
fs
pop
jbe
stos
jecxz
insl
mov
or
push
rcll
leave
jne
dec
xor
and
adc
push
pop
pop
pop
or
jns
aad
xchg
and
loope
adc
dec
sub
out
pop
rdtsc
cmp
push
push
mov
adc
mov
xchg
jb
push
leave
mov
iret
pop
insb
int
dec
shrl
pop
cld
aas
add
ja
adc
mov
push
jle
inc
jno
mov
in
shr
lret
in
enter
mov
cmp
jecxz
sbb
mov
rcr
jne
inc
jl
and
jle
mov
push
cmpsl
push
mov
lods
sub
lods
adc
stc
iret
mov
jns
das
sahf
fcomps
stc
xor
inc
lahf
cmpsl
inc
sub
xchg
pop
pusha
repnz
mov
iret
inc
sub
call
das
mov
sub
insl
mov
or
mov
inc
xchg
ljmp
cld
jecxz
mov
pop
pop
dec
lods
adc
and
test
sbb
add
and
sbb
les
or
aaa
pop
mov
int3
je
mov
push
mov
addr16
dec
dec
lds
cwtl
stos
subb
jo
or
jo
aaa
scas
xor
lock
cmp
xor
test
gs
and
xor
gs
pop
insl
xchg
fwait
imul
sub
mov
gs
out
and
mov
inc
push
dec
daa
mov
in
lea
xor
sar
flds
in
xchg
adc
xchg
add
call
pushf
mov
in
dec
mov
xchg
push
in
cmpsl
lcall
ds
rorb
xor
rcrb
jnp
jae
out
sub
add
dec
lcall
jnp
cpuid
pop
xor
fsubs
and
les
jne
shlb
dec
loope
xlat
lret
and
pusha
push
cmp
or
repnz
pushf
add
mov
int3
pop
xchg
dec
inc
ljmp
push
mov
aam
or
js
xor
sarb
cwtl
sbb
ret
jmp
or
jb
jmp
sbb
push
cmp
fidivrl
enter
cld
test
xchg
and
mov
xchg
xor
xor
shll
xchg
in
push
hlt
ss
mov
sub
push
test
pop
xor
imul
jg
shl
stos
inc
sbb
mov
sub
divb
adc
mov
mov
sbb
mov
outsl
sbb
ljmp
or
outsl
into
fildl
cmpsl
out
add
aas
sub
imul
por
subb
imul
sbb
adc
nop
jno
sub
mov
xlat
inc
imul
xchg
cltd
push
stos
adc
xor
inc
and
push
inc
or
cmpsl
movsl
fstpl
out
cwtl
add
ds
jb
loope
stos
jge
sahf
or
jbe
aad
push
mov
sub
xlat
add
inc
test
mov
and
stos
test
int3
push
jne
ffree
cs
or
mov
lret
adc
adc
test
seto
popa
adc
add
push
pop
sub
mov
pop
ret
or
imulb
xor
push
repz
mov
je
dec
mov
sarl
pop
or
xchg
in
sahf
lock
and
pop
cmp
in
sti
test
and
int
cmp
push
push
pop
popl
lds
je
icebp
and
or
daa
std
and
sub
iret
mov
lcall
and
sub
or
and
sahf
xorl
pop
add
fcmovb
jecxz
jmp
xchg
sti
lret
orb
incl
or
mov
xchg
sub
sysexit
pushf
pop
in
push
jl
mov
cmp
arpl
add
cmpsb
into
cltd
mov
xchg
popa
orb
xlat
cmp
cli
push
ss
fdivrs
adc
jae
jmp
xchg
jg
pushf
enter
insl
dec
push
test
inc
lret
jb
and
or
pop
mov
add
push
loop
lahf
jbe
sub
sub
jae
mov
test
and
mov
push
inc
aad
in
sbb
and
lock
out
nop
jmp
push
mov
inc
cmp
fs
sbb
fidivs
bound
cmc
fidivs
push
into
jno
dec
in
push
mov
or
into
pushf
add
enter
cmp
popa
cmp
push
and
popa
pop
sarl
xchg
inc
adc
out
cmp
and
mov
pop
cli
sbb
pop
adc
movsb
mov
andb
mov
dec
inc
rcrl
outsl
pop
repnz
pop
les
es
testb
and
cltd
sbb
in
mov
imul
scas
mov
sbb
dec
std
xchg
push
jl
push
sub
fistps
pusha
adc
rolb
mov
mov
call
push
xchg
cmp
jle
push
xchg
orl
test
aaa
and
push
enter
int
sti
add
xlat
and
adc
or
mov
jbe
ljmp
lea
ret
dec
mov
jle
or
push
jb
mov
data16
inc
lds
fisubrs
jnp
lds
xchg
mov
in
push
mov
mov
cmp
mov
pusha
negl
or
data16
inc
mov
fistpll
mov
lods
add
orl
fwait
sbb
and
mov
cmp
xchg
ja
add
stc
test
add
mov
mov
leave
inc
cmp
xor
popa
sbb
push
and
mov
jge
loope
scas
aam
lods
jmp
dec
ja
rolb
fidivrl
fdivrs
mov
mov
stos
loopne
aaa
push
pop
inc
mov
dec
mov
pop
cmp
and
adc
imulb
mov
insb
aam
stos
lods
insb
dec
sarb
out
pop
mov
fsubrs
mov
andb
mov
or
pop
sub
sbb
add
add
mov
sub
jecxz
icebp
stos
mov
cmpl
push
and
loop
dec
mov
sbb
mov
mov
inc
adcb
bound
ja
add
cmpsb
push
pop
adc
push
mov
ljmp
xlat
imul
push
mov
pop
sbb
xor
cli
ret
outsb
jbe
test
xchg
pop
cltd
lcall
jge
lea
inc
hlt
in
movsb
pop
inc
push
movsb
push
mov
lods
test
inc
std
or
sti
push
cmp
xchg
fisttpll
sbb
inc
gs
or
xor
jle
jge
mov
out
ret
jge
mov
das
iret
pop
jmp
aam
add
mov
inc
pop
jmp
cmc
sbb
or
and
xlat
adc
jns
adcb
les
adc
divb
and
or
cltd
dec
out
jle
jge
int
push
xor
cmc
sbb
jns
in
andb
ljmp
ds
xorb
stos
das
sub
testl
push
xchg
push
int
xlat
cmp
xchg
jae
addb
outsl
divl
icebp
insb
lock
aas
imul
adc
enter
popa
lret
rcrb
dec
mov
mov
scas
in
mov
pop
icebp
xchg
mov
hlt
dec
loope
sahf
mov
andb
ds
or
test
test
xlat
xchg
or
pop
sub
push
repz
iret
mov
pop
sbb
pop
je
sub
repnz
pop
std
jg
inc
push
int3
jp
and
movsb
sarb
movntq
push
inc
pop
shlb
add
xor
add
lea
stos
es
into
adc
lret
xchg
out
lds
mov
and
stc
dec
mov
cld
aaa
leave
fldenv
jns
push
leave
loop
aas
clc
incb
cwtl
push
enter
pop
test
mov
mov
repnz
fdivl
cmp
loop
lahf
dec
or
pop
inc
inc
push
popa
jecxz
clc
fdivrl
add
fldl
fmull
inc
stos
sarl
push
jbe
push
int
loopne
or
sbbl
mov
cmp
xchg
mov
cmp
mov
inc
inc
or
add
mov
insl
shrb
mov
xlat
mov
push
xlat
dec
ss
roll
mov
loope
mov
jo
sub
or
je
add
adc
jo
jp
stos
jo
outsl
in
mov
dec
ret
xor
adc
cmpsb
add
pop
dec
js
ljmp
pop
ror
enter
test
inc
popa
fs
cmp
mov
inc
push
stos
leave
push
pop
sbb
int
mov
mov
xor
lods
aaa
bound
shrl
or
jb
sahf
pop
rolb
inc
pop
and
ror
push
jmp
shl
jb
sbb
sbb
inc
mov
mov
and
cld
call
pop
shlb
int3
push
nop
test
fucomp
xchg
outsl
insl
mov
lret
cmc
incl
test
jecxz
xchg
popf
dec
jns
inc
dec
mov
aam
jge
jne
cltd
cmpsb
sbb
inc
int3
cmp
push
shll
mov
leave
test
int
xchg
xchg
ja
cmp
rol
pop
cmc
loop
insb
cmpb
sbb
hlt
imul
xorl
push
test
cld
xlat
fistpll
pop
into
addr16
xchg
loop
push
xchg
jae
dec
ja
mov
les
xchg
leave
cld
fs
scas
mov
adc
jl
fucomp
jae
pop
dec
mov
cmpsb
cmp
push
int
jl
adc
pop
js
mov
mov
rcl
daa
repnz
adc
lret
inc
mov
adc
pop
stc
out
stos
xchg
lods
xor
in
popa
test
cld
mov
sub
or
and
inc
pop
clc
mov
stc
push
pop
ret
and
loope
lds
imul
sub
mov
add
arpl
fstp
lds
jp
sub
push
nop
inc
sarl
or
sbb
and
xor
pop
bound
lds
loop
es
stc
inc
popa
sti
cmp
in
js
ret
mov
fdivrl
push
lock
add
sub
or
sti
insl
in
sbb
sub
pushf
or
fists
fnstcw
popa
fucomp
and
mov
hlt
xor
xchg
hlt
cmp
imul
or
add
cld
popf
add
mov
or
mov
cs
das
adc
lds
sub
cmp
mov
repnz
dec
xchg
in
mov
push
push
out
sbb
sub
inc
xchg
out
adc
sbb
insb
aam
dec
lret
mov
mov
fnsave
sbb
fisubl
sub
jno
stos
mov
mov
lret
dec
sub
out
mov
mov
inc
scas
adc
jns
test
inc
add
inc
push
stos
cmc
inc
lds
shll
addb
outsl
jg
inc
das
fsubrl
adc
fprem1
fisubrs
sbb
xchg
adc
mov
dec
and
lcall
mov
sarb
push
mov
add
test
xchg
test
out
inc
call
stc
jns
push
pop
pop
data16
adc
aad
xchg
mov
pop
sbbl
hlt
in
ds
cmc
loopne
add
data16
adc
daa
imul
xchg
test
adc
gs
add
mov
enter
add
pop
faddl
inc
aas
out
inc
push
pop
xor
loopne
mov
jmp
sbb
cmp
fwait
push
jae
jg
test
pop
enter
pop
jecxz
stos
leave
loop
les
insl
outsb
pop
jnp
add
or
sbb
rcrl
fcomps
inc
scas
lock
ds
push
test
adc
jae
push
lods
rclb
and
stos
pop
orb
and
jmp
test
sbb
sub
sahf
jg
js
and
sbb
xchg
xchg
imul
je
cmp
dec
loope
js
jg
ja
pop
add
xchg
or
mov
fildll
das
mov
cwtl
in
outsl
sub
scas
or
loopne
push
iret
sti
daa
pop
xor
dec
lret
enter
lods
adc
aam
inc
cmp
lods
andb
out
stc
shlb
pop
and
add
dec
icebp
xchg
adc
lds
rol
jns
rorb
repz
pop
jecxz
jb
sub
or
mov
inc
push
adc
add
push
and
sti
add
outsl
sbb
outsl
cmp
xchg
pop
add
xor
mov
sub
pop
pop
push
pop
xchg
arpl
mov
rcrl
mov
or
cmp
in
push
push
gs
jmp
cmp
and
inc
jp
rorl
sub
gs
pop
mov
push
fiaddl
movsb
adc
mov
jle
push
outsb
icebp
movsb
fdivrs
pop
mov
arpl
repnz
repz
loop
and
addl
sub
fucomp
jne
repz
jl
cmp
jmp
inc
arpl
test
pop
jecxz
jmp
jo,pn
push
xor
es
and
sbb
fldenv
int
jecxz
and
ja
and
pop
push
cmpsb
xchg
lcall
mov
xorl
popf
push
inc
or
lds
jo
pop
mov
out
ss
mov
test
and
adc
pusha
mov
leave
sbb
push
ja
enter
jg
dec
jmp
loopne
inc
repnz
pop
jns
and
test
pushf
cmp
push
xor
cli
xlat
sahf
out
mov
out
das
inc
dec
xchg
mov
test
or
add
jmp
dec
inc
inc
adc
pop
orl
fsubl
push
xor
out
or
dec
adc
out
inc
pop
dec
mov
in
in
ja
add
call
das
adc
xlat
mov
mov
sub
sbb
jbe
push
xchg
xlat
cmp
jne
clc
xlat
mov
repnz
inc
shlb
add
dec
mov
jbe
inc
popa
and
jge
mov
sub
movsl
inc
sbb
shll
nop
decb
mov
jg
ret
cmp
mov
mov
imul
cmp
inc
in
adc
pop
shr
sbb
and
cmpl
push
and
rcrl
sbb
aad
cmpsl
cli
lock
push
mov
es
das
dec
jle
mov
mov
push
imul
push
jno
out
mov
pop
pop
inc
mov
fidivrl
loopne
sub
push
jne
mov
insl
lea
push
xor
es
xor
add
mov
aas
inc
dec
or
movsb
daa
dec
and
sbb
sub
xor
fwait
nop
test
mov
lock
fildl
fildll
and
cmc
shrl
xor
lods
bound
aas
or
dec
sbb
mov
cmp
repnz
dec
xchg
mov
in
jae
cmp
daa
psubd
pop
arpl
adc
and
adc
test
push
movsl
hlt
jecxz
scas
lcall
dec
int
sbb
in
icebp
xchg
jae
mov
and
sub
addl
rcr
inc
mov
cwtl
js
sbb
repnz
ds
loop
sub
pop
mov
test
inc
mov
orb
enter
loope
push
test
fdivrs
inc
mov
mov
sbb
call
gs
mov
outsw
fidivs
mov
insl
cmp
dec
mov
push
loop
pop
lret
jecxz
jns
adcb
cwtl
js
aad
cmp
insb
jne
lret
jns
fsubrs
gs
add
sahf
std
lds
dec
sub
sti
add
mov
pusha
imul
jge
mov
dec
cli
jb
pop
xor
int3
push
ret
push
sbb
loopne
fnstsw
outsl
cmp
xor
popf
mov
test
dec
mov
out
mov
sub
cltd
inc
push
jmp
or
push
inc
into
sbb
dec
jb
xchg
scas
dec
inc
or
cmp
insb
jmp
or
adc
sub
nop
jge
test
movsb
rclb
adc
mov
inc
lods
mov
lahf
bound
imul
fsubrl
lcall
bnd
xchg
cmpsl
outsb
lock
fistps
or
mov
add
out
dec
cli
subb
std
insl
xor
dec
push
and
mov
jbe
dec
jmp
dec
fcomps
xor
les
gs
lods
and
mov
test
or
aas
cmp
into
sub
cwtl
dec
or
or
test
sbb
shl
pop
movsl
testl
mov
cmp
push
cmpsb
and
adc
inc
insb
cmp
es
xor
sub
adc
inc
orb
aaa
lahf
dec
and
jae
imul
sub
fisttpll
cmpsl
test
icebp
idivl
shrb
dec
fdivp
scas
fadds
jo
and
and
or
and
lock
push
pop
cmp
loope
jmp
add
push
inc
xchg
sbb
sahf
mov
pop
cmp
insl
mov
mov
loope
xchg
sar
adc
fnstsw
mov
cltd
std
or
cltd
insb
dec
push
out
cli
mov
xchg
push
lret
sbb
lea
pusha
pop
xlat
add
es
push
jg
out
jl
dec
lds
xlat
jb
hlt
and
xor
out
mov
mov
cmp
xor
ldmxcsr
or
test
out
push
mov
fnsave
dec
mov
mov
sub
fsts
sub
xchg
adc
jne
pop
or
or
xchg
scas
pop
aad
adc
add
sub
mov
xchg
xor
add
sbb
mov
xor
push
dec
jl
jae
daa
imul
shlb
pop
filds
testl
clc
adc
push
and
popf
and
outsl
mov
pop
and
adc
rcl
and
scas
in
gs
sbb
push
in
pop
rorb
push
inc
outsl
lea
sbb
or
xlat
dec
jns
sti
pushf
insl
bound
add
push
call
sbb
pusha
pop
cld
les
mov
nop
rorb
ret
btr
loop
add
movsb
xchg
and
out
xchg
or
mov
enter
jno
call
mov
test
sbb
jl
call
fimuls
mov
lds
jp
aas
mov
mov
xchg
push
aas
mov
xchg
sti
push
adc
push
lea
push
or
sub
fsubrl
jge
orl
push
lcall
mov
adc
stos
lods
js
gs
push
sbb
cmp
mov
in
sub
mov
push
xchg
xchg
jge
push
sarl
fcmovb
outsb
insb
jne
std
test
add
dec
jo
inc
ljmp
pusha
dec
xchg
icebp
cmpb
cmp
sub
xchg
js
fldl
or
dec
mov
jbe
inc
stos
cwtl
lret
arpl
pop
pop
test
or
mov
sbb
jle
inc
sbb
pop
xchg
test
push
jmp
push
iret
daa
bound
fimuls
inc
fnstsw
out
inc
mov
or
jge
mov
xorb
movb
shlb
fs
jge
outsl
or
adc
jne
mov
mov
or
dec
je
jl
xchg
adc
xor
fucomip
mov
dec
jmp
xor
jae
and
ret
jg
push
daa
mov
lret
xor
or
add
xchg
mov
mov
lret
sub
mov
xor
or
cmpsb
outsb
xchg
dec
dec
and
jae
jnp
jp
xor
test
stos
push
adc
pop
add
pop
aaa
insl
daa
repnz
or
adc
dec
imul
les
ds
mov
xchg
ja
xchg
mov
xchg
xchg
iret
mov
dec
cli
gs
out
and
jbe
cwtl
jp
stos
xchg
sarl
jnp
ljmp
jbe
cmp
std
mov
mov
xchg
xor
cmpsb
sbb
pop
outsl
xchg
aad
icebp
icebp
rorl
in
repnz
ljmp
stos
sub
int3
jecxz
outsl
cs
or
test
loope
outsb
push
pop
add
push
jno
mov
inc
cltd
dec
pop
and
dec
std
sub
stos
or
aas
adc
jle,pn
mov
ljmp
sbb
scas
pop
adc
adc
aaa
sub
cmp
push
xor
cmc
outsb
ret
mov
push
stos
dec
mov
cmp
cmpl
dec
jge
xor
xchg
sub
outsl
lds
xchg
jbe
fstpt
push
ja
cmpb
pop
lret
adc
ds
lods
aas
mov
sbb
negb
imull
xor
add
addr16
fdiv
mov
and
sbb
xor
mov
icebp
jp
xor
das
repz
or
call
sub
ss
inc
mov
imul
dec
clc
out
push
sbb
or
xchg
lock
jp,pn
scas
add
ljmp
cmpsb
les
shlb
test
movsl
xchg
scas
jl
cltd
adc
xchg
cmp
mov
mov
or
inc
insb
add
xchg
pop
push
cmc
xchg
lds
push
shlb
nop
pop
ja
push
cmpsb
mov
enter
mov
sbb
xchg
mov
lret
fdiv
cwtl
pop
sub
test
notl
int3
cmp
jecxz
add
loop
adc
and
adc
lea
cmp
xchg
mov
lea
jo
adc
cltd
sub
fucomi
nop
les
and
dec
jl,pn
adc
adc
add
leave
adc
test
fnstsw
stc
mov
lahf
xorb
push
mov
inc
push
lcall
adc
pop
inc
movsl
in
in
repz
aaa
jl
push
mov
test
sub
call
rep
lods
mov
or
data16
push
rcrl
sbb
iret
add
jmp
pop
xor
leave
popf
add
loop
cwtl
loop
push
inc
ret
and
mov
and
xor
rclb
push
mov
mov
cmpl
or
ja
sbb
xor
push
cmpsl
add
jmp
lock
push
mov
pushf
jl
clc
sub
add
inc
test
adc
hlt
lock
mov
fs
fnsave
aam
iret
js
xor
cld
test
pop
stc
mov
mov
rol
imul
mov
add
loop
push
orb
mov
mov
es
cmpsl
movsb
mov
mov
fstpt
sub
mov
and
sbb
aaa
scas
cmc
sti
lds
fdivrs
outsb
mov
pop
leave
test
push
xchg
mulb
cmp
push
mov
rcl
jl
adc
pushf
testl
mov
sahf
sub
fwait
jp
push
pop
neg
push
adc
pusha
addr16
jge
das
icebp
lret
into
jg
xchg
pop
aaa
sahf
inc
aaa
jnp
adc
dec
into
repnz
dec
jge
lret
in
leave
pminub
cmp
lret
push
mov
xchg
aam
mov
iret
loopne
sarb
lds
pop
negl
sbb
lds
je
cmp
les
lahf
push
into
sbb
sbb
shr
cmp
and
jb
or
arpl
imul
or
out
andb
dec
nop
into
test
xchg
movsl
scas
aam
mov
push
push
pusha
dec
shrl
mov
repz
mov
clc
lods
sarl
jns
testl
mov
scas
cli
test
sub
and
inc
inc
imul
dec
inc
add
jae
test
daa
lret
imul
nop
out
xlat
shlb
cmp
jns
faddl
add
int3
pop
out
dec
stos
pop
jnp
pushl
insl
push
sahf
xorb
mov
scas
das
sbb
and
xlat
adc
or
push
in
in
push
icebp
incb
xlat
pop
and
push
dec
and
mov
mov
adc
mov
xor
jmp
push
and
push
adc
mov
sbb
cmp
loopne
out
mov
inc
sbb
xor
sbb
xchg
fists
push
orb
pop
std
sti
lods
ds
mov
ljmp
mov
cmp
ljmp
mov
popf
ret
mov
fdivr
cwtl
in
jp
jbe
and
sub
or
jg
pop
jmp
cltd
out
or
hlt
shl
xchg
std
sub
pop
ja
int3
adc
mov
xor
inc
loop
push
pop
adc
js
aam
pop
cld
inc
mov
negl
jge
repz
mov
push
jecxz
scas
and
xchg
inc
popf
enter
scas
ret
and
call
andl
or
sbb
cmp
cmpsl
pop
jp
fstps
lcall
cmp
inc
mov
or
mov
daa
add
lds
mov
add
shll
lods
sbb
push
push
int
out
jbe
cmpl
pop
sahf
imul
sahf
add
lock
insl
jmp
push
pop
ficoml
pop
test
arpl
lret
js
mov
pusha
dec
rorb
loope
pushf
xor
dec
inc
push
out
mov
or
arpl
push
push
sbb
inc
push
and
cwtl
xor
and
sub
inc
call
int
int
push
test
sub
repz
mov
jl
cmp
cmc
jg
pop
fcompl
iret
cmp
jno
ret
out
clc
mov
sub
xor
jecxz
push
lods
lcall
repz
loope
and
repz
sub
adc
cmc
test
mov
sbb
or
xchg
fwait
mov
push
aaa
nop
roll
je
xlat
gs
push
sub
xchg
aam
loopne
dec
lret
sbb
inc
andl
ljmp
jg
test
dec
test
jp
cmp
and
mov
jnp
sbb
jbe
daa
ja
cmc
hlt
fstl
push
outsb
mov
std
lret
leave
ror
xor
or
shrl
in
test
addb
push
xchg
xchg
cmp
cltd
jae
popa
repz
mov
movb
push
lcall
mov
xor
imul
push
mov
scas
pop
mov
addr16
fdivr
hlt
xor
les
push
xor
and
pop
push
fsubl
pop
lret
fidivl
dec
pop
sbb
test
inc
std
arpl
cwtl
xor
xor
push
cwtl
cli
mov
gs
mov
xchg
sbb
dec
into
sbb
add
mov
pop
je
mov
or
dec
das
jno
mov
sub
mov
sbb
push
testl
lahf
or
cmpsb
fwait
mov
cmpsl
add
jmp
mov
andb
call
in
inc
jl
notb
stos
mov
xor
add
jmp
jo
arpl
inc
mov
push
fwait
bound
pop
add
mov
pop
inc
pop
and
out
push
movsl
test
and
pop
and
add
sub
xchg
movsl
sbb
iret
int3
sbb
cwtl
cmc
nop
scas
pop
test
insb
fsubl
mov
jecxz
pop
pop
xor
fs
dec
add
push
and
adc
rclb
mov
dec
sbb
mov
fwait
adc
adc
mov
out
cs
push
loop
clc
arpl
xor
insl
out
insl
adc
jno
mov
xchg
inc
cmp
ss
pop
mov
xor
fcomps
nop
es
data16
das
movsl
cmp
sub
cmc
shlb
pop
into
in
xlat
das
dec
stc
ljmp
lods
stos
mov
mov
sar
test
sbb
or
adcl
pop
jmp
cmp
mov
ret
lret
dec
mov
je
pop
and
push
mov
and
iret
cltd
shll
cwtl
xchg
ljmp
popf
hlt
xchg
ja
mov
sub
mov
adc
es
jbe
and
jb
popa
int
in
push
jno
adc
ljmp
in
pop
or
pop
push
sub
imul
incb
push
ret
dec
js
mov
std
adc
das
ds
dec
or
xorb
sub
test
jb
popa
mov
mov
sub
ret
push
incb
mov
nop
sub
repz
arpl
imul
mov
cmpl
mov
jo
bound
add
loope
gs
loopne
cmp
movsb
cmp
rclb
inc
push
add
aam
popa
out
adc
sub
aaa
negb
inc
mov
arpl
xor
movsl
mov
push
lock
add
dec
pop
faddp
mov
dec
xchg
idiv
shr
bound
sbb
jnp
sti
pushf
js
mov
cltd
inc
dec
or
fisttpl
mov
mov
clc
inc
enter
pop
push
dec
push
cli
push
inc
xor
repnz
out
arpl
test
rorb
mov
cmp
ss
xor
xchg
js
arpl
popa
mov
imul
packsswb
xchg
adc
lea
lahf
mov
adcl
xor
cld
shrl
pop
in
mov
ret
fmull
sub
jae
nop
leave
xlat
dec
ja
dec
sub
test
mov
movsl
loope
sbb
pop
cmpsl
mov
lods
inc
or
mov
jno
movsb
mov
shll
sub
jno
xchg
xor
pop
and
xor
jecxz
filds
pushf
mov
or
stos
shlb
idivl
push
cmp
das
pusha
xor
pop
cmpsl
pop
out
cld
addr16
and
jne
cwtl
mov
scas
xchg
fists
outsl
cs
cmp
es
sbb
and
sahf
imul
mov
js
loop
jge
dec
sbbl
cli
or
mov
xor
ds
roll
jbe
lea
loopne
in
and
gs
mov
into
push
push
mov
cmp
fwait
movsl
sbb
leave
pop
sbb
or
cmc
pop
add
cmpsb
lea
pop
fucom
jmp
dec
lea
iret
xchg
int3
jno
fdiv
addr16
jg
out
bound
popf
je
mov
cmp
jmp
xchg
jl
push
inc
mull
push
fists
ljmp
addl
jo
add
sahf
movsb
test
mov
in
mov
mov
push
pop
iret
int3
movsl
jge
daa
push
stc
in
and
and
jne
push
hlt
mov
jp
mov
push
mov
in
hlt
sub
mov
loop
nop
jge
lcall
or
hlt
daa
arpl
cld
lret
in
sub
das
sub
push
mov
sbb
mov
imul
das
mov
mov
icebp
pop
arpl
nop
out
fistpl
sub
push
pop
aaa
xor
mov
jg
int
xor
inc
in
pop
mov
flds
cmp
mov
lret
outsb
repnz
fisubs
rcrl
xchg
mov
xchg
pop
lea
jecxz
cmc
sub
fsubrs
add
in
pushl
adcl
push
out
outsl
test
push
out
pop
and
mov
inc
clc
pop
xor
mov
jge
popf
mov
mov
cmp
dec
in
inc
sarb
mov
aas
cltd
xchg
imul
cmp
ret
jae
addr16
mov
push
xchg
ret
jmp
inc
and
sbb
mov
pusha
clc
add
int
pop
push
lahf
push
pop
adc
add
xchg
push
cli
xlat
rorb
cmc
jl
pop
or
test
pop
or
push
mov
into
push
fcomps
or
fwait
and
mov
jecxz
in
lods
xchg
mov
imull
pop
push
jmp
scas
imul
arpl
fwait
in
mov
mov
iret
sarb
or
dec
bound
ficoms
add
cmpsl
cmc
and
inc
and
cmp
xchg
clc
fcmovnb
pop
loope
lods
push
aas
mov
sbb
dec
cwtl
loope
push
enter
imul
and
cwtl
and
or
aaa
jle
and
rorb
mov
pop
repnz
stc
out
mov
pop
cmp
lea
jmp
ret
std
addr16
mov
movsb
push
jg
stc
cmc
stos
sbb
cmc
stos
push
mov
gs
inc
mov
addr16
jno
sbb
arpl
test
jmp
xchg
cmp
out
sub
add
push
sbb
shrb
push
dec
mov
ret
bound
popf
mov
in
loop
or
mov
iret
test
jecxz
push
addr16
mov
mov
add
ja
add
pop
sub
aaa
pop
jne
mov
aad
dec
jno
mov
cmp
mov
ret
enter
xor
ss
rcl
int3
fildl
int
cmp
sub
pop
insb
mov
add
sti
xchg
insl
lcall
xor
cwtl
sahf
mov
mov
add
jp
adc
inc
or
imul
xor
into
cld
mov
arpl
sarb
stc
or
mov
and
xor
and
sarb
pop
inc
jp
icebp
cmp
rcll
add
jae
rcll
cmp
popf
fstpl
leave
js
sub
mov
movsb
sub
and
call
cmp
mov
jno
mov
mov
xchg
xchg
mov
lea
mov
dec
xchg
sub
inc
call
dec
scas
pop
rcrb
movsb
mov
push
add
jae
push
inc
flds
movsb
lods
sbb
stos
jmp
xchg
stos
or
xchg
cmp
pop
sti
pop
cmc
lcall
mov
enter
repnz
push
dec
mov
les
mov
fstpt
or
push
jbe
or
xchg
icebp
mov
test
lret
fwait
shrb
mov
movsb
adc
xlat
cmp
push
fidivl
and
dec
ja
clc
mov
xchg
in
xor
aaa
sbb
mov
rol
cmpsb
callw
adcl
push
sub
fcoml
mov
push
mov
xor
out
xchg
dec
incl
out
adc
stc
pop
mov
ficompl
repnz
lcall
jae
mov
mov
adc
insl
push
ret
jnp
scas
fsubp
out
lahf
leave
sbbl
int
adc
test
mov
iret
dec
cltd
mov
imul
push
mov
and
sub
insb
pop
orb
cltd
and
cmp
mov
xor
mov
jns
xchg
dec
call
cmpsb
push
push
inc
xchg
test
and
in
pop
loopne
loopne
mov
mov
scas
cmp
pop
ret
subl
sub
adc
out
sbb
cmp
lods
push
xchg
ror
popa
out
scas
dec
pop
nop
pop
mov
push
fdivrs
jle
stos
mov
inc
pop
data16
loopne
and
or
inc
xor
mov
out
fs
and
orb
decb
pop
adc
aaa
sub
inc
rclb
fs
adc
mov
cld
shlb
mov
outsb
je
sub
or
jb
iret
or
pop
stos
fnstenv
mov
jo
jmp
lret
dec
push
cmpsb
dec
add
gs
adc
inc
fdivl
or
addr16
mov
xchg
pusha
mov
jae
inc
add
push
adc
jg
out
mov
jle
lret
mov
xchg
lock
mov
jnp
jo
xchg
mov
sbb
imul
pop
push
xchg
iret
int3
je
out
cwtl
add
mov
rclb
xor
inc
pop
cmp
jl
or
push
push
insl
pusha
add
push
or
je
scas
inc
int
outsl
out
push
dec
out
mov
in
cmp
push
jbe
ljmp
loope
loop
push
or
movsl
inc
shr
loopne
sbb
mov
loopne
les
xchg
ds
fisubl
mov
fs
dec
adc
xchg
les
fwait
xor
and
sarb
das
sbb
pop
inc
add
add
pop
adc
xor
cmc
cld
mov
bswap
and
roll
daa
enter
mov
cld
push
or
sbb
sbb
mov
cwtl
dec
in
add
outsl
mov
test
cmp
loope
stc
loopne
shll
popa
in
daa
mov
and
adc
mov
add
push
and
ja
xor
pop
int3
sarl
mov
mov
aad
jle
cmp
int3
mov
notl
jbe
lcall
xor
lahf
jle
mov
and
mov
mov
sub
sarl
rorb
daa
jle
cwtl
adc
fincstp
fldl
out
imul
in
dec
add
push
mov
mov
rcrl
in
jae
es
fdivrs
out
lret
cmpsb
int
add
pop
int
cld
or
jno
outsb
sbb
outsl
hlt
stos
jb
and
es
mov
je
lock
jmp
add
nop
scas
sub
dec
xor
gs
sbb
ljmp
fwait
test
push
fcoml
xor
lcall
std
or
xor
popa
or
jge
pop
sti
and
jle
jecxz
xchg
xor
repz
xchg
sub
sub
inc
jno
xchg
pusha
xchg
shrb
push
mov
sti
xchg
fisubrl
xor
enter
xlat
in
push
ret
jl
nop
xor
dec
jns
cli
pushf
cld
or
xchg
mov
lcall
dec
xchg
nop
mov
loop
insl
sbbb
pop
and
scas
cmpsl
test
leave
call
sbb
xor
cmp
xchg
mov
add
loop
add
leave
sbb
sbb
mov
cmpsb
mov
pusha
enter
inc
shlb
ds
out
push
sub
insb
add
dec
ja
pop
jmp
mov
notb
mov
shlb
push
push
dec
push
and
icebp
adc
lahf
fistps
ljmp
daa
pop
dec
lock
xchg
orb
popf
add
es
aas
mov
xchg
add
mov
pop
popf
sub
int3
jno
cld
daa
mov
loopne
ja
cmpsb
ret
icebp
andl
movsb
jge
test
mov
cltd
andb
cld
sub
jle
adc
addr16
movups
pop
fld
pop
sbb
sub
fs
dec
sub
sahf
sti
add
sbb
lahf
and
movsb
mov
sbb
or
ficoms
lahf
sbb
xor
enter
xlat
lods
nop
add
in
testl
js
push
mov
sbb
xchg
lret
dec
xchg
out
mov
sbb
mov
les
shrb
fdivs
xchg
into
outsl
push
shrl
sahf
push
iret
xor
insb
dec
mov
shll
or
in
xchg
inc
and
mov
pop
lahf
pop
xor
std
xchg
ljmp
push
pop
rcr
mov
outsb
fsubrl
out
xchg
dec
clc
pop
xchg
and
xchg
xor
mov
std
lods
xchg
jecxz
xchg
jnp
out
frstor
incb
aad
call
push
mov
pop
dec
and
or
scas
aaa
cs
outsl
mov
cli
add
js
lahf
jb
cmp
push
jne
dec
jne
cmp
pop
cwtl
sub
jns
sti
mov
ljmp
popf
mov
and
shlb
test
xchg
mov
inc
fstps
lret
add
hlt
lods
icebp
adc
and
gs
icebp
out
mov
pop
sbb
sbb
pusha
xchg
stos
loop
sub
sub
cmc
sbb
mov
je
mov
mov
ret
mov
jle
iret
pop
lods
jae
inc
adc
leave
sarl
mov
pop
test
mov
pop
fcomps
inc
sub
fisttpll
dec
in
jmp
fwait
xchg
icebp
xor
xor
push
mov
and
sub
jmp
rorb
stc
test
mov
aas
inc
imull
lret
pusha
shrb
lret
jg
and
cmc
aad
jbe
insl
movsb
int3
push
dec
or
jne
cmp
mov
cmp
pop
xchg
adc
sbb
pop
mov
mov
cs
loopne
add
movsl
mov
enter
jl
cmp
adc
sbb
push
jg
inc
iret
cmp
out
jne
clc
lahf
je
push
psadbw
sbb
cmpsb
pop
jmp
repnz
pushf
inc
jp
ja
lea
fisubl
movsb
inc
cmp
cmpsl
jge
roll
dec
mov
add
pop
jmp
testl
outsb
pushl
stos
gs
or
jns
movsl
lret
push
repnz
dec
jge
xor
jno
repnz
push
xchg
fisttpll
dec
push
iret
je
push
adc
divl
in
cmp
inc
inc
sub
hlt
cmp
mov
out
lods
insb
inc
push
gs
leave
loope
sarl
lock
jg
push
push
xchg
xchg
cld
jne
stos
mov
adc
inc
cmpsb
nop
mov
shl
mov
sbb
mov
add
clc
rorl
cld
push
orl
pop
cmp
out
mov
movsl
popf
xor
mov
lret
les
icebp
clc
lods
dec
jbe
xlat
push
sbb
inc
addr16
sti
push
xchg
jg
enter
jp
in
lret
inc
and
cmp
dec
sub
stc
jecxz
xor
test
adc
xchg
pop
mov
ja
add
adc
jg
jo
dec
xor
sub
xchg
push
mov
jns
jmp
mov
loope
inc
je
sbb
mull
cmp
in
adc
fsts
sbb
pop
mov
popf
and
cmpl
jmp
dec
and
adcl
stos
outsb
xchg
inc
or
inc
mov
std
inc
mov
and
inc
jae
mov
and
xchg
jo
mov
sbb
in
push
ret
repnz
and
stc
xchg
cwtl
jp
pusha
lods
lds
inc
ljmp
push
imul
xor
sub
in
sub
push
inc
pusha
mov
stos
repnz
jp
arpl
jb
mov
jnp
popf
imul
push
aam
aam
push
pop
or
xchg
les
xor
sahf
mov
aaa
inc
cmp
jne
ret
xor
mov
and
lret
cmp
movsl
stos
int3
cli
adc
nop
insl
cmp
mov
mov
lods
sti
aad
enter
cmpsl
xchg
push
insl
lret
jne
xchg
or
jecxz,pt
and
inc
xchg
and
jg
into
and
xchg
pop
mov
or
leave
ss
sbb
jp
xchg
and
xorl
pop
xchg
inc
xchg
or
or
gs
int3
flds
fimull
xchg
sub
loopne
pop
pushf
inc
pop
jmp
cmp
inc
push
and
movsb
or
clc
leave
xchg
add
les
sub
aad
add
cmpsb
stos
js
fst
inc
mov
pusha
sbb
gs
dec
inc
cmp
push
jecxz
jl
jnp
icebp
mov
movl
jecxz
les
ja
mov
add
ret
aad
sbb
test
dec
fwait
test
inc
repz
and
rclb
pop
les
xchg
in
cmpsl
xor
insl
mov
xchg
insb
int3
fidivrl
in
dec
into
jg
and
inc
out
fdivrs
dec
icebp
pop
mov
call
xor
xchg
das
ror
or
fstl
jne
lret
xor
test
subl
shrl
or
dec
sub
inc
pop
mov
repnz
ret
cmp
imul
ss
push
fiaddl
out
dec
wrmsr
popf
cli
fwait
movl
sbb
or
popf
sbb
out
movsb
pop
xlat
fcomps
adcl
dec
sub
or
xor
adc
in
xchg
div
lret
mov
inc
sbb
adc
lods
cmpsl
ljmp
dec
out
loop
mov
sbb
movsb
cli
mov
xchg
inc
xor
pusha
aam
ljmp
imul
push
mov
jmp
in
out
xchg
xchg
ret
js
dec
and
adc
or
adc
cs
imul
cmp
shlb
rcr
mov
jle
pop
sub
push
int
mov
fildl
pop
ret
and
lods
mov
xchg
mov
inc
jle
sub
mov
xchg
outsl
in
loop
dec
xor
nop
sbb
andb
cs
sbb
out
jle
xchg
inc
jl
in
xor
dec
xor
and
ret
sbb
xor
fwait
jnp
fisttps
and
push
outsl
lret
jns
aas
cwtl
jns
stos
mov
cmp
shr
in
int3
xor
es
sub
lock
rcrb
adc
dec
test
out
mov
sub
or
xor
mov
testl
pushf
inc
lcall
xor
inc
push
mov
mov
decb
push
jmp
pop
mov
cmp
pop
stos
mov
and
sub
push
data16
pusha
inc
push
mov
loope
scas
mov
sbb
adc
push
pusha
repz
pop
mov
mov
sbb
adc
inc
jmp
xchg
pop
repz
aam
cs
call
imul
cmpsl
push
mov
pop
jae
and
fs
cmp
in
cmp
cmpsl
cmp
lahf
fwait
or
js
pusha
ds
jl
dec
test
aam
pop
repnz
pop
inc
pop
push
ljmp
inc
popa
in
daa
fwait
mov
insl
push
ficompl
call
hlt
mov
xchg
jne
pop
iret
fwait
dec
push
das
arpl
push
sub
sub
push
xor
inc
push
pop
int3
sahf
push
popf
movsl
sarb
add
out
push
daa
test
dec
push
idivl
push
and
cltd
and
lahf
cmp
dec
cmp
cmp
sbb
and
call
xchg
cmp
in
inc
std
push
adc
add
mov
push
or
rorb
xor
inc
cmc
jnp
inc
std
cmp
or
in
arpl
aam
add
xchg
fdivrs
xor
pop
pop
fmull
xchg
adc
add
test
xchg
lea
nop
xor
xor
dec
pop
mov
add
clc
xchg
mov
jecxz
inc
pop
iret
push
and
insl
shll
outsb
sub
fcmovnu
out
xor
dec
jbe
pop
inc
cmp
lock
mov
push
mov
sub
test
addr16
mov
push
pop
insl
addr16
movsl
adcl
int
or
push
fimull
xor
adc
or
popa
jg
pop
sub
cli
cmp
xchg
mov
pop
out
lock
or
int3
sarl
and
insb
xor
and
rcrb
xor
sub
or
or
ja
adc
push
mov
xor
adc
mov
rcll
adc
movsb
aam
pop
xchg
insb
xor
xchg
mov
push
xchg
mov
or
outsb
lods
inc
rcll
leave
fsubp
pop
loope
push
lcall
scas
loop
mov
ret
pop
lea
mov
pusha
push
cli
cld
xchg
ljmp
rcrl
jo
or
out
mov
das
xchg
in
adc
hlt
sub
mov
and
jo
or
leave
ror
outsl
andb
jae
outsb
lods
lods
pushw
dec
sbb
test
shll
stos
mov
dec
dec
sub
stc
mov
sti
lock
xor
aas
ficomps
sbb
stos
mov
rcrb
aas
jmp
add
pushf
add
pusha
xchg
roll
xchg
xor
mov
xor
dec
lret
je
and
gs
mov
fisubrs
aas
add
icebp
stos
repz
mov
dec
dec
mov
jne
fs
dec
sti
push
cmpl
mov
aam
xchg
mull
addr16
pop
xchg
cltd
cmp
out
push
mov
adc
in
mov
pop
mov
lds
dec
notb
int
lret
shlb
push
jl
mov
pop
in
and
sbb
test
test
roll
stos
iret
cs
adc
or
xor
push
add
add
outsl
mov
iret
jnp
subb
and
mov
pop
xor
das
xchg
jns
mov
std
pop
add
fs
ficoml
xchg
cltd
lea
xlat
or
adc
outsb
jmp
ja
cltd
pusha
ja
push
out
xchg
jge
ljmp
std
push
mov
nop
call
dec
sub
shr
dec
mov
fistpl
xor
leave
inc
mov
daa
js
xor
mov
adc
sbbl
sub
push
cmpsb
inc
jne
dec
fdivrl
cltd
mov
push
cwtl
sbb
mov
push
pop
mov
test
cmp
inc
jl
call
fistps
mov
js
mov
data16
std
inc
leave
xor
pushf
into
dec
repz
pop
xor
lods
lahf
adc
jle
pop
and
es
dec
mov
dec
inc
gs
repz
lds
mov
sbb
loopne
xchg
ljmp
dec
adc
add
inc
push
insl
xchg
in
int
fsubs
mov
add
ret
xor
dec
test
push
jp
cmc
pop
pop
or
and
jnp
int3
rol
dec
test
cmp
sti
mov
out
inc
cmp
lcall
lcall
imul
push
stos
outsb
pop
mov
pusha
data16
movsb
aas
sbb
stc
stc
pusha
inc
push
outsl
les
lock
xchg
adc
in
ja
or
dec
idivb
fwait
push
mov
loop
pop
mov
mulb
in
aad
xchg
mov
fstl
or
test
mov
adc
les
inc
mov
rcrl
movsl
sbb
dec
dec
xchg
rorl
sub
mull
add
and
lret
movsl
fs
loopne
mov
jo
sub
cmp
mov
sub
push
pop
xchg
ljmp
call
mov
adc
pop
dec
cmc
pop
inc
repnz
cmpsb
push
outsb
xchg
ds
dec
xchg
dec
dec
sub
mov
and
imul
pop
pop
imul
int
xor
call
enter
xor
dec
sub
or
sub
inc
out
add
push
sbb
fsubs
sub
xor
outsl
inc
clc
xchg
xchg
cltd
xchg
insl
pop
rolb
in
mov
or
pop
sub
inc
xchg
jecxz
shrb
inc
stc
leave
push
cmpsb
leave
fbld
and
repnz
into
push
loope
add
cmp
and
dec
jg
mov
xchg
test
fmull
cmp
cltd
lods
shlb
dec
push
inc
mov
cmp
call
movsl
sub
outsl
dec
lahf
and
scas
fcoms
cli
pushf
sti
xor
rol
inc
xchg
fisttps
cmpsl
mov
inc
and
xor
mov
hlt
iret
fucomi
xor
je
out
aad
out
aam
movsb
sbb
ss
mov
test
mov
loop
mov
mov
pop
fisttps
add
xchg
or
sub
sub
xor
mov
mov
and
aam
pusha
sbb
imul
cmp
jo
aas
pop
scas
sbb
mov
mov
dec
out
in
jl
pop
and
jns
out
xchg
and
jo
sbb
in
mov
in
cmp
jecxz
mov
push
xchg
fs
lret
lods
sbb
inc
push
dec
outsl
dec
pop
xor
pop
mov
pop
jno
incb
aam
mov
xor
xor
push
jns
into
inc
mov
push
mov
sarb
mov
aas
dec
xchg
dec
sub
les
ljmp
cli
add
jmp
shl
inc
rol
adc
sub
fsts
xor
lret
mov
or
clc
and
pop
lds
out
inc
out
pushf
in
cmp
add
cmpsl
pop
orl
adc
pop
rcll
xlat
stos
add
inc
es
xchg
add
xchg
jno
xchg
into
push
mov
xor
cltd
xchg
ja
ret
out
cwtl
lods
and
jmp
cwtl
fs
xchg
mov
or
pusha
mov
jecxz
ror
data16
jecxz
test
lret
jle
aas
sbb
pop
sub
mov
clc
ficompl
repnz
idivl
daa
mov
push
push
insl
dec
fidivrl
mov
imul
and
xor
xor
sub
or
or
jecxz
jno
das
hlt
xchg
mov
in
dec
add
cmp
mov
sub
jns
lea
pop
push
jne
cmc
sbb
xor
sub
inc
out
add
pop
orl
dec
sub
rcll
mov
lods
test
lahf
leave
cmp
jne
jecxz
mov
xchg
outsb
pop
jnp
ret
fwait
adc
or
adc
xchg
xchg
cmp
std
push
mov
lods
mov
mov
int3
or
icebp
stc
test
stos
pop
sbb
mov
inc
sub
pop
ret
dec
adc
test
lock
insb
test
aas
pushf
xchg
mov
js
dec
and
leave
or
xchg
pop
movsb
jmp
repnz
mov
sbb
and
stos
lret
adc
stos
and
movsb
or
or
pushf
movsb
rcrb
lods
in
xor
rclb
xor
sbb
sbb
cmp
mov
sti
imul
cmp
insl
sub
in
lock
lods
pushf
push
test
jae
cmp
lahf
and
inc
clc
pop
stos
jl
xor
int
mov
or
push
sub
daa
or
mov
test
sbb
or
jns
mov
xor
je
lret
lds
push
jecxz
aad
pop
mov
jge
push
mov
xor
sub
jns
inc
xor
popa
mov
sub
or
idiv
mov
jg
arpl
ljmp
xor
or
sub
jno
mov
cli
repz
and
push
xchg
or
cmpsl
cmp
adc
mov
jnp
xor
fwait
or
arpl
and
ret
in
xlat
scas
mov
int
jae
adc
scas
stos
cld
lret
adc
sub
test
xor
jmp
in
xchg
movsl
sbb
or
call
sub
repnz
es
add
mov
data16
xchg
pop
ret
nop
dec
fcoml
rcll
pushf
and
jae
lcall
gs
xor
shr
pop
inc
daa
dec
mov
inc
push
aaa
mov
xor
xor
cs
ds
rolb
movsb
in
imul
add
sub
add
push
outsl
xchg
jbe
dec
xchg
mov
stc
pushf
in
xor
xchg
fiadds
sub
call
imul
jg
xor
aaa
mov
adc
test
add
xchg
push
in
fcmovnb
and
rorb
sub
stos
or
xchg
popf
lcall
out
ss
gs
jb
lcall
imul
in
inc
clc
inc
movsl
fisubl
aam
cli
mov
out
sbb
cmpsb
ffree
sub
shrl
stc
mov
ror
inc
inc
jns
in
mov
fld
aas
cmc
test
lds
fisttpl
mov
mov
repnz
subb
into
insb
inc
mov
popl
mov
arpl
cmp
jl
jmp
stc
add
mov
mov
loopne
scas
ja
scas
ja
std
mov
mov
shll
mov
punpckhwd
push
aaa
test
dec
jl
xor
loop
test
sbb
cmpsb
mov
pushw
push
mov
ja
daa
push
sbb
push
pop
cli
push
arpl
sbb
andl
and
jnp
int
pop
pop
test
push
pop
push
insb
sbb
xor
fdivl
mov
mov
in
inc
pop
xchg
adc
push
xorb
fsubrl
cmp
test
push
test
push
jns
xchg
call
push
ja
push
and
mov
jbe
cmpsl
mov
pop
out
lds
pop
into
shll
stos
stos
push
push
popf
filds
sub
shlb
mov
inc
fdivrl
push
daa
data16
sbb
push
dec
ds
jmp
push
fdivr
int
or
loopne
mov
mov
ret
sbb
stos
lcall
pop
outsb
fs
aad
mov
sub
xor
leave
inc
andb
push
enter
sub
js
dec
out
xorl
fcmovnu
inc
test
popa
ja
fstps
xchg
mov
enter
addr16
out
inc
notl
or
shrl
stc
data16
out
scas
lds
js
iret
test
pop
cmp
sbb
lods
jns,pn
cld
jmp
sub
test
mov
or
cmc
mov
xor
shll
pop
dec
push
lahf
rorl
jmp
cwtl
insl
cltd
nop
and
cmp
dec
xchg
mov
cmpsl
pop
pop
mov
sbb
cli
out
pop
orl
push
lcall
pop
pop
lds
shl
cmp
adc
inc
xchg
sbb
cmp
dec
les
jge
mov
and
jns
cli
outsl
out
cwtl
push
pushf
cli
push
adc
aas
xchg
mov
jg
xor
pop
adc
xchg
lcall
and
je
xchg
xlat
js
pop
out
mov
ret
in
jle
gs
sub
aas
hlt
cwtl
jns
push
lret
js
mov
mov
inc
out
lock
inc
and
cli
xchg
xchg
popa
push
pop
call
add
jle
in
imul
sbb
pop
jmp
xor
dec
mov
adc
jecxz
paddusw
ljmp
xchg
arpl
enter
mov
sub
mov
cmp
mov
in
aad
jne
cmpsl
sbb
push
sub
inc
arpl
cmp
xchg
test
fwait
mov
inc
jb
jl
iret
mov
data16
fwait
das
cmp
push
or
xchg
jl
fldcw
cmp
jecxz
jne
jns
pop
nop
mov
mov
subb
out
cmpsb
test
xor
imul
xchg
testb
jp
inc
jae
imul
add
and
adc
fisubrl
aad
fstl
add
pop
lahf
ret
mov
sbb
aas
adc
cltd
jb
stos
jns
cmc
cmp
cmp
in
sbb
pusha
loopne
mov
cmovg
mov
add
enter
int
push
sub
sub
mov
mov
xchg
lods
shr
scas
fsubl
rcll
mov
sahf
sub
and
inc
mov
sbb
and
neg
dec
jmp
mov
fcoms
es
fucomi
in
int
push
or
adc
mov
lock
push
inc
test
mov
add
repnz
and
push
in
iret
outsl
stos
push
mov
ficoml
push
divb
fisttpl
mov
mov
hlt
loope
fnstenv
ss
or
inc
pop
and
das
push
ret
ret
inc
jae
pop
add
mov
shrl
or
pop
or
adc
clc
and
xor
psubsb
ss
push
jl
fadds
xchg
push
int
mov
repnz
lret
mov
idivl
inc
sub
inc
lds
push
imul
lods
notb
fadd
jmp
cmp
cmc
push
out
fcmovne
jne
imul
xor
push
scas
mov
enter
cld
repz
dec
js
into
sub
jmp
das
xlat
mov
xchg
cmp
ret
xor
mov
and
sub
jb
mov
fstpl
sar
movsb
and
jbe
leave
push
movsl
add
in
adc
cmp
leave
add
pop
lds
ja
je
gs
or
dec
pop
inc
shlb
in
inc
inc
add
jae
in
xor
adc
fisubl
pusha
test
fcomps
lods
adc
add
sbb
inc
daa
dec
jae
push
and
mov
pop
stos
and
test
mov
add
push
xchg
fists
pop
xchg
sbb
jnp
mov
roll
dec
sahf
push
sub
movsb
adc
pop
orl
inc
dec
lret
mov
out
hlt
add
jmp
add
xor
mov
aaa
dec
push
mov
mov
sqrtps
jnp
pusha
shlb
int3
test
bound
mov
gs
icebp
loopne
dec
rcl
adc
or
lods
cmp
test
cwtl
xor
fnstcw
xchg
mov
push
mov
enter
int3
pop
xchg
push
cmp
pop
int3
cmp
hlt
push
mov
push
inc
push
push
push
loope
cli
adc
outsb
cmp
mov
add
xor
mov
enter
add
add
jo
imul
movsb
fdivl
aaa
outsl
mov
adc
dec
xor
pop
push
das
sbb
sub
scas
imul
in
xor
inc
aad
xchg
data16
add
sub
jmp
scas
js
dec
mov
add
cmc
popa
das
cmpsb
popf
jle
pop
xchg
scas
pop
fimull
sahf
ret
or
jl
sbb
xchg
or
fimull
sub
das
push
pusha
xor
cld
xor
cmp
pop
mov
xor
movsb
imul
mov
cmp
vpsraw
mov
fistl
sub
push
push
xor
shlb
xor
mov
sbb
gs
jp
cmp
xor
lock
xchg
movsb
push
mov
scas
xlat
les
cmp
xchg
fwait
cli
mov
inc
cmp
rcll
xchg
dec
hlt
pop
dec
mov
out
jnp
push
dec
nop
mov
xchg
mov
pushf
jmp
xor
jp
test
stc
shll
xor
loope
pop
fsts
cltd
and
inc
mov
mov
push
insl
dec
mov
ja
fwait
jg
ljmp
shlb
loope
fmul
scas
xchg
adc
adc
lock
inc
push
ljmp
outsl
dec
shlb
xchg
xlat
sub
xchg
jne
push
ss
mov
sbb
pop
jl
adc
ss
push
cs
dec
pop
je
insl
jnp
mov
aad
nop
repnz
les
icebp
fbstp
or
ret
les
rorb
xor
lods
mov
inc
iret
cwtl
xor
dec
pop
mov
cwtl
out
hlt
lahf
mov
iret
xor
popa
xchg
notb
and
fiadds
adc
xor
xor
movsl
mov
scas
push
outsl
hlt
ja
pushf
jns
in
mov
push
lar
cwtl
test
out
daa
call
mov
clc
mov
jl
cli
add
xor
xor
push
adc
xchg
loopne
in
js
or
stos
sub
in
xchg
rcrl
sahf
int
testl
dec
hlt
mov
mov
and
loopne
das
cs
mov
fnstcw
sub
and
cmp
daa
push
int
push
xor
pop
mov
shl
xor
imul
jbe
arpl
into
aas
mov
xor
dec
call
rolb
ja
aas
scas
xchg
lret
jmp
cs
pop
jo
jne
mov
fnstsw
shrl
testl
imull
cwtl
fldcw
enter
jecxz
lcall
negl
mov
in
outsl
xchg
jnp
gs
test
inc
and
mov
xor
xchg
imul
lcall
jo
ret
and
add
jge
xor
pop
or
and
scas
test
jl
mov
pop
jl
xchg
xchg
or
js
sarb
test
popf
pop
imul
call
jnp
inc
cmpw
enter
cmc
andl
stos
daa
js
inc
push
bound
movsb
mov
pop
or
cmc
xchg
orl
in
cs
imul
fldt
sbb
pusha
push
or
push
mov
pop
lret
add
jp
inc
imul
aaa
aaa
sub
insl
in
imul
fldcw
mov
lret
int3
notb
mov
jle
xchg
mov
cmp
xor
ss
push
adc
xchg
outsl
in
pusha
add
shlb
insb
cmp
daa
jmp
rorb
movsb
jecxz
mov
jmp
shrb
mov
gs
add
or
mov
mov
daa
hlt
bound
cmp
out
subl
out
lret
sub
aad
dec
mov
mov
adc
adc
outsb
adc
xchg
ret
sbb
bound
jno
sbb
add
xchg
mov
fiadds
nop
lcall
popf
cli
nop
mov
xor
lock
cmp
cmp
xor
cs
in
jle,pt
outsl
push
adc
bound
loop
mov
aaa
sbb
insl
test
stc
aaa
shll
int
test
or
int
divl
jmp
jl
and
js
cmpsb
sarl
and
sahf
jge
jmp
pop
inc
cs
lea
imul
dec
in
adc
inc
fisttps
movsb
divb
add
mov
pop
xchg
outsl
pusha
cs
pop
sbb
add
popa
push
rorb
sub
add
sbb
aam
cmpsb
adc
insb
movsl
mov
in
mov
mov
pop
jle
sbb
pusha
js,pt
push
and
xchg
fmul
xchg
aaa
cmp
lcall
adc
mov
xchg
adc
outsb
leave
mov
loope
jns
pop
dec
add
push
pop
sbb
les
mov
inc
mov
lret
enter
sbb
cmp
jb
ficompl
outsb
jb
mov
fnstenv
cld
mov
jnp
sahf
jae
test
jnp
inc
mov
call
sub
mov
das
add
in
mov
cld
lock
cmp
frstor
cwtl
lea
sbb
and
cmp
loopne
sbb
mov
popl
popf
mov
cmp
dec
aas
aam
insl
push
js
jmp
not
out
popa
movsl
sahf
rorl
repz
bound
leave
imul
mov
pop
pop
cmp
idivb
stos
mov
in
enter
aas
inc
test
inc
js
inc
jmp
scas
mov
imul
mov
in
lock
push
push
lahf
pop
and
xchg
sbb
ret
loop
push
inc
and
pop
or
clc
pop
sub
hlt
inc
jg
cmp
test
sub
mov
ss
inc
jb
sub
and
sbb
adc
mov
mov
pop
es
hlt
dec
jne
icebp
jmp
out
fwait
imul
mov
sbb
cli
pop
cmp
leave
and
pushf
xor
cmpl
call
inc
cmc
inc
ljmp
add
sub
in
lcall
xchg
in
fmul
xchg
and
or
negl
jo
adc
rcrl
sbb
add
and
mov
adc
mull
addr16
lods
inc
and
test
lea
test
push
pop
cmp
dec
adc
jmp
xor
push
into
hlt
jbe
xchg
sbb
jmp
sbb
adc
cmc
add
cmp
es
jbe
cmp
pxor
cmp
jns,pn
push
into
pop
cmp
and
leave
push
sti
lock
rolb
inc
pop
mov
es
fs
or
lods
aad
idivl
or
sub
sbb
dec
in
in
or
rorl
out
fidivl
icebp
pop
fcomps
aam
mov
add
mov
jmp
int3
jge
lock
lahf
lea
addr16
shlb
and
das
das
popa
jns
sbb
subb
push
or
ja
arpl
das
push
add
leave
aam
rcr
addb
pushf
push
loop
sub
std
pop
lods
popa
sbb
pop
cmp
aad
lea
mov
push
inc
inc
lret
xchg
outsb
cltd
pop
scas
fisttpl
addl
movzbl
fsubr
inc
add
inc
xchg
sub
scas
fs
fstl
jmp
and
ror
aas
out
jb
jns
fcoml
fsub
lahf
faddl
cmp
cmp
stos
jge
inc
subl
inc
imul
and
lahf
pop
fidivrs
mov
or
add
fdivs
sbb
ja
fcmovnu
bound
pop
cmp
orb
pop
xchg
xchg
sahf
xor
cmp
dec
inc
jp
push
mov
jbe
lds
das
cltd
xor
mov
push
pop
push
jecxz
mov
xchg
add
repnz
lods
mov
dec
push
lods
hlt
repnz
aad
pop
subb
bound
mov
aad
mov
sub
mov
dec
int3
lret
xchg
add
stos
mov
xor
test
and
jns
roll
ficompl
sarb
or
gs
lea
arpl
les
in
add
mov
daa
mov
shll
lea
xchg
lret
mov
pop
call
stc
lahf
mov
nop
jg
inc
sbb
mov
lock
cmp
rclb
mov
push
pop
pop
inc
sbb
popl
xchg
cmp
idivl
lret
add
pop
inc
in
sbb
add
fadds
inc
mov
scas
xor
mov
and
sahf
mov
stos
loop
aam
lret
stos
inc
xor
xor
cs
hlt
adc
sbb
mov
popf
outsl
in
rorb
jo
adc
les
bound
jmp
dec
fptan
or
std
add
test
sub
inc
jl
mov
outsl
in
hlt
dec
sub
push
das
fcomps
xor
arpl
mov
xor
mov
cli
xchg
mov
imul
fs
out
mov
shll
mov
cmp
lcall
push
rorl
test
xchg
hlt
sahf
popf
dec
or
cltd
in
das
jo
xchg
xlat
leave
out
sub
sti
push
xchg
fsubrl
lahf
clc
pop
jne
shr
lret
xchg
icebp
dec
mov
adc
fdiv
add
lahf
insl
cmc
aam
sbb
pop
fcmovbe
std
xchg
cmp
mov
scas
pushf
in
mov
cld
stos
sahf
push
cld
push
mov
movsb
xor
int3
or
fsubl
inc
push
outsl
cmc
push
shll
xchg
dec
test
cmpsl
int
in
mov
inc
dec
icebp
movsb
jmp
cmp
cmp
sub
inc
cmp
std
xchg
jl
out
cmpsb
jmp
les
mov
js
and
dec
mov
into
pop
ret
jl
push
ljmp
test
cmc
dec
movsl
jecxz
aad
sub
subl
icebp
les
rorl
push
js
push
ljmp
adc
repz
and
in
fmuls
sub
jae
aam
fdivs
inc
jbe
movsl
mov
ljmp
ja
xor
mov
and
rolb
push
popa
nop
pmaxsw
or
loope
gs
jb
ret
pop
mov
test
mov
pop
std
subb
adc
xorb
test
sub
ljmp
push
out
movsl
push
mov
arpl
and
mov
cli
inc
aaa
jnp
gs
push
pop
push
mov
xchg
lret
fucomip
push
shrl
mov
out
lods
fildl
sub
outsl
sar
cmp
mov
push
push
stc
adc
cli
clc
push
insl
outsl
aam
in
adc
xchg
lods
xchg
pop
and
xchg
lret
push
lret
xlat
mov
add
mov
cmp
pop
test
movsl
sbb
pop
shll
dec
and
lods
or
ret
push
sarb
jg
jb
push
and
pop
sbb
insl
push
mov
mov
ljmp
adc
sbb
out
sbb
jae
and
fdivr
adc
push
lods
sbb
mov
adc
mov
sti
pop
dec
pop
sub
add
mov
dec
test
pop
mov
dec
mov
xchg
or
mov
jg
lcall
es
xchg
jmp
jb
or
mov
jge
mov
sbb
adcl
adc
push
add
xchg
nop
or
addr16
mov
pop
call
ja
ss
ret
ffree
mov
add
mov
xlat
leavew
pop
adc
ja
daa
lret
sti
sbb
push
and
mov
cs
lods
sbb
push
dec
in
adc
mov
add
dec
mov
mov
in
inc
into
fcoml
mov
sub
les
fwait
mov
and
or
add
jnp
push
jb
aad
ds
lahf
xor
push
jmp
inc
pop
arpl
nop
shrl
mov
shll
int
ds
mov
leave
dec
sub
xchg
adc
push
scas
cltd
mov
scas
fisttpll
or
popa
test
pusha
pushf
lahf
sub
aad
add
add
call
inc
add
dec
ja
jno
or
xchg
push
fiaddl
movsl
test
jbe
mov
or
lahf
adc
pop
popf
pop
out
adc
add
mov
outsb
and
stos
and
ret
sbb
jecxz
mov
lods
or
hlt
pop
inc
out
leave
xor
mov
fucomi
repnz
outsb
mov
xor
es
fldl
xor
xchg
aaa
cmc
fcmovb
rcrb
jle
int
lahf
lods
xor
arpl
mov
repz
add
nop
adc
jo
testl
jg
mov
fstpt
jecxz
xchg
in
dec
push
xor
ljmp
push
pop
or
sbb
jg
mov
xchg
data16
hlt
sub
and
stos
out
sbbb
add
push
and
cmp
or
subb
loop
jecxz
dec
add
push
mov
sbb
cltd
fs
adc
call
mov
dec
les
mov
adc
ds
or
shll
sti
fs
push
add
in
stos
je
out
cmp
push
and
fldenv
cmp
sub
js
fnstsw
jp
jge
cwtl
movsl
mov
xorl
adc
push
pop
out
mov
dec
pop
xchg
scas
sbb
sti
or
in
dec
add
lods
pop
dec
movsb
mov
sbbb
fstps
push
ja
push
cld
iret
or
nop
bound
mov
leave
mov
cmc
ret
cmp
mov
cs
push
sahf
dec
jno
nop
lret
insl
and
pop
push
mov
cwtl
inc
mov
push
rorb
adc
sub
sub
xor
aam
mov
ret
inc
lahf
or
push
clc
jle
mov
jmp
dec
ficomps
arpl
mov
cmpsl
jp
das
xchg
cmp
out
mov
arpl
jp
pop
add
and
xchg
cmp
mov
cmp
lret
dec
stos
pop
fs
add
mov
ja
sub
lea
dec
mov
movhps
mov
add
insb
fistpl
mov
loope
dec
pop
call
push
push
mov
shrb
jne
pusha
rcll
cmp
sub
jmp
pop
les
je
inc
stc
lock
push
sbbl
push
jbe
jle
or
jns
mov
xor
jecxz
call
pop
shlb
test
in
stos
jnp
shll
data16
out
push
out
cmp
cs
xor
dec
jne
cwtl
jno
popa
push
jg
sub
adc
pop
repnz
dec
inc
mov
cli
stc
sub
push
push
xchg
or
bound
mov
mov
adc
dec
into
push
ret
inc
xchg
sbb
adc
fucomp
jl
stos
xor
jns
xor
aas
and
push
pop
test
ja
js
test
mov
add
out
lcall
imul
cmpsl
int
xchg
pop
or
sub
push
dec
inc
cmc
mov
inc
or
mov
mov
cli
pop
sbbb
scas
mov
lods
mov
mov
mov
push
and
repz
lock
push
or
ss
push
in
out
bound
xor
das
pop
insb
cmp
std
int3
mov
pop
nop
aam
mov
xor
inc
subl
fmul
or
dec
inc
test
imulb
xchg
jb
sti
push
dec
or
negl
jo
imul
jle
jge
sub
sub
xor
mov
push
push
inc
xor
mov
sbb
icebp
aas
pop
jbe
push
mov
push
mov
int3
repz
ret
loop
stc
stos
and
outsl
inc
data16
jg
push
inc
out
cmp
movsb
dec
ss
add
cli
sbb
mov
dec
fiaddl
push
in
jo
filds
cmp
je
lea
sub
dec
push
pop
cmpb
movsb
xchg
sub
addr16
lock
push
mov
push
rcrl
sbb
jl
mov
cmpl
pop
xlat
cmp
adc
fs
add
aam
into
daa
cmp
shll
or
mov
push
push
in
add
test
mov
popa
cmp
enter
sbb
call
cld
or
jecxz
std
loopne
xchg
mov
inc
jecxz
mov
outsb
add
sub
leave
out
pusha
adc
int
pushf
in
adc
dec
push
fistpl
inc
pop
jl
lods
mov
mov
jnp
lea
xor
lock
inc
das
mov
jb
dec
daa
in
or
or
jb
jl
pop
xorl
shr
les
mov
mov
test
int3
into
das
or
inc
mov
jmp
test
and
adc
in
fsts
pop
test
out
sahf
push
out
stos
fisubrl
sub
aam
fwait
pop
and
fdivrs
add
and
mov
fdivrp
les
dec
inc
mov
daa
ret
or
jno
fwait
mov
dec
dec
inc
sub
roll
jl
out
imul
addb
cmp
push
popa
sub
dec
jle
stos
cld
ficoml
inc
std
lea
sti
inc
add
push
jl
sbb
js
xor
sbb
inc
pop
cmp
sbb
or
jp
xchg
stos
mov
xor
int3
mov
pop
sbb
inc
sbb
fisubrl
cmp
fstpl
cs
adc
cld
in
jecxz
popf
fists
jecxz
fisttpll
cmp
insl
lods
fisubs
mov
push
int3
xchg
rcll
xor
popf
jg
pop
shlb
btr
or
xchg
and
dec
dec
xchg
mov
push
popf
inc
or
ret
sub
mov
cmpb
loop
adc
sbb
push
leave
pusha
hlt
lret
dec
insl
inc
dec
sti
loope
or
push
ss
pop
and
sub
out
imul
jns
imul
stos
loopne
xchg
decl
mov
scas
or
inc
cmp
sub
push
gs
mov
xlat
rol
nop
decl
aaa
push
push
dec
pop
add
popf
dec
mov
xchg
and
add
pop
pop
movsl
out
or
xchg
ja
outsl
or
push
in
lea
mov
lds
xlat
add
sbb
ficompl
mov
xchg
mov
loopne
and
repnz
mov
imul
fisttps
idiv
push
mov
inc
adc
xchg
lock
gs
ss
stos
daa
xlat
xchg
mov
es
rorb
icebp
sub
mov
sub
jbe
mov
sub
pop
sar
scas
loop
jne
add
pop
mov
cmpsl
dec
gs
in
pop
ljmp
mov
mov
or
int
inc
repz
sahf
mov
dec
mov
es
int
cld
mov
lret
sub
fidivrs
ret
test
dec
test
xchg
les
out
gs
inc
sbb
aas
insb
adc
sbb
pop
sub
cmp
mov
pushl
lea
fcompl
insb
mov
or
lods
fbld
push
test
mov
sub
imul
adc
lds
sub
pop
sbb
popa
dec
sbb
push
loope
adc
insb
and
fstl
mov
cmp
cmpl
leave
int3
fcomps
or
fs
cmp
mov
push
stc
inc
clc
cmp
xchg
pop
sub
push
inc
popa
lret
mov
or
inc
push
out
jmp
push
xchg
cli
into
push
add
cs
adc
mov
or
push
add
xor
fldt
pop
insl
xor
add
mov
std
fdivr
aam
loop
inc
aam
icebp
pop
xorb
sub
andl
das
jp,pn
ret
jne
push
adc
push
in
jb
ret
lods
in
call
stos
mov
sub
push
mov
sarl
jb
cs
stos
jle
shlb
fimull
push
sbb
rorl
dec
out
or
pop
nop
mull
mov
adc
push
scas
shrl
mov
aad
jbe
mov
movsb
aas
pop
push
jnp
jecxz
push
push
xor
xchg
popf
sbbb
leave
jmp
nop
ljmp
out
dec
mov
xor
sbb
pop
daa
mov
mov
jle
push
lods
aaa
jmp
lods
lds
sub
cmp
lock
fs
repz
in
mov
push
data16
xorl
out
jmp
test
loopne
and
mov
xchg
sub
add
jo
dec
push
inc
xor
xchg
push
or
repnz
dec
lods
jle
jmp
mov
shrb
movsb
sbb
xlat
mov
push
push
sbb
or
or
push
out
xor
jnp
push
mov
or
sub
mov
mov
rcr
int3
dec
push
and
xor
int
add
ja
ds
xchg
cmp
sub
adc
lret
popf
js
test
xor
sbb
xor
cmc
add
ror
pop
leave
mov
xlat
mov
scas
imul
mov
imul
sahf
lea
push
xchg
inc
xor
std
int
mov
mov
xchg
adc
das
mov
sub
sbb
fs
scas
fidivl
sbb
nop
loopne
sbb
xchg
add
add
sub
inc
aas
mov
imul
inc
or
repnz
inc
add
push
subl
into
add
rorb
aad
adc
mov
in
into
test
pushf
dec
pop
fistpll
adc
xchg
xchg
mov
repz
inc
sbb
jg
adc
sbb
mov
jg
inc
ja
or
lock
pop
and
repz
pop
sbbb
int3
inc
dec
dec
pop
cmp
cs
and
mov
fucomp
add
and
mov
jno
adc
stc
movsb
out
and
mov
sub
rol
xor
mov
test
dec
and
lods
cwtl
jp
lods
popa
dec
jno
outsl
shlb
xchg
ret
pushf
jo
mov
mov
adc
out
xchg
fiaddl
insb
push
dec
or
mov
and
repnz
pushf
cli
or
inc
pushf
fidivrl
sub
mov
inc
cltd
movsl
in
jecxz
jmp
pop
gs
roll
jecxz
jle
push
or
cmp
repz
and
pushf
das
nop
cld
add
cs
je
repnz
add
dec
sbb
sbb
mov
ror
icebp
xor
int
xchg
mov
loopne
gs
and
cld
and
shll
mov
je
movaps
cmpsl
shlb
fwait
adc
insb
or
andl
out
xchg
add
lods
adc
mov
push
shll
out
int
pop
mov
cwtl
pop
mov
or
push
add
nop
mov
xor
aam
data16
jecxz
sbb
outsb
cmp
pushf
js
notb
sti
mov
aas
push
adc
rolb
or
cmp
xchg
or
nop
dec
or
push
outsl
adc
insl
cs
push
out
pop
add
loopne
in
lcall
adc
or
test
xchg
jnp
pop
cmc
push
inc
or
das
loope
push
test
test
bound
push
dec
pop
gs
pop
pop
mov
mov
into
and
mov
push
mov
xchg
mov
scas
rcrb
ljmp
pushl
js
push
xor
pusha
aam
mov
es
aad
inc
pusha
in
push
lds
push
lahf
lret
xchg
dec
movsl
mov
rclb
aad
fdivs
in
std
jnp
pop
pop
hlt
and
insl
cmp
xchg
inc
out
cwtl
push
test
sbb
pop
pusha
fcmovnbe
test
stos
imul
mov
dec
mov
insb
mov
push
push
or
mov
cmp
xlat
mov
mov
mov
mov
adc
jmp
or
xlat
inc
pop
test
int
negl
pop
decb
ret
adc
jmp
mov
iret
std
mov
icebp
pop
sarl
push
lcall
repz
fidivrl
or
sub
inc
repz
sti
pop
mov
loopne
or
pop
push
dec
push
fildl
jp
addb
sub
dec
aaa
ljmp
cmp
jne
pop
popa
mov
jg
pop
dec
xor
rcl
jl
out
xlat
int3
hlt
aas
and
dec
cmp
mov
arpl
fsubr
inc
push
ret
cmpsl
inc
or
jecxz
fsubrp
mov
add
hlt
jae
or
dec
pop
sti
xorl
ja
lods
sub
dec
insl
inc
pop
fcomp
shll
fmul
cli
pop
jne
sub
jmp
aaa
lcall
lds
idivl
loopne
ja
dec
test
or
lea
xchg
dec
enter
mov
inc
ss
add
out
lds
aam
mov
int
jae
dec
push
mov
mov
stos
xchg
inc
push
xchg
inc
dec
lahf
fisubrs
repz
adc
popf
mov
test
sbb
dec
leave
mov
jp
inc
stos
fdivrl
add
pop
mov
icebp
fcoml
clc
lahf
in
jnp
cs
push
jg
add
xchg
mov
jne
mov
aas
movsl
repz
aaa
push
adcl
xchg
negl
jnp
push
mov
xchg
lock
mov
cmpsl
mov
add
cmp
out
aas
test
aam
lahf
xchg
daa
in
cwtl
in
pop
das
rcrb
jne
loope
daa
sbb
mov
xor
mov
pushf
icebp
loop
stc
jecxz
xor
js
out
push
inc
fnsetpm(287
dec
fs
std
push
dec
mov
or
mov
andb
rolb
adc
das
sbb
sarl
push
iret
xor
cli
cli
mov
shll
push
push
jns
adc
test
movsb
sub
cli
sub
int3
fisttpll
rorb
fwait
es
adc
sarb
fwait
or
mov
and
jmp
movb
sbb
pop
outsl
cs
call
out
adc
dec
jo
fisubrs
cs
call
cmp
sbb
add
mov
push
push
cmp
ss
cltd
push
jmp
add
rol
js
out
push
xchg
jecxz
cli
and
xchg
mov
mov
scas
iret
jmp
jmp
mov
cltd
push
lock
test
int
scas
insb
aam
cmp
pop
mov
lea
cmc
and
imulb
xchg
inc
into
sbb
out
call
mov
mov
lahf
and
mov
mov
rolb
sub
or
pop
jge
ss
not
loope
in
or
or
iret
sbb
sbb
xchg
add
lea
shll
cmp
jmp
sbb
imul
addr16
jecxz
mov
cmp
add
push
pop
dec
push
arpl
mov
sub
lds
leave
xchg
add
es
push
insb
cmpl
cmpsb
sahf
and
inc
insl
pushw
int
pop
push
data16
arpl
cli
aad
daa
ja
mov
jae
fcmove
aas
adc
jecxz
adc
pop
or
jg
repnz
inc
mov
jg
out
lcall
repnz
mov
lds
das
mov
adc
stc
and
stos
stos
pop
test
pop
adc
xchg
insl
pop
pop
sbb
divb
fisubrl
aad
or
lret
aas
pop
iret
cs
mov
adc
mov
or
hlt
pop
push
xchg
pop
mov
and
push
add
jbe
sahf
xor
pop
push
cmpl
dec
ret
sbb
sbb
mov
cmpsl
ja
sbb
dec
push
or
enter
sbb
fwait
push
xor
les
mov
test
pop
mov
popa
jecxz
in
mov
push
mov
iret
mov
aas
sbb
push
add
push
inc
cmp
push
mov
lock
rcr
in
out
das
out
fdivrs
jge
push
sahf
pop
or
icebp
cmp
mov
popf
dec
mov
imul
adc
movsl
cs
sbb
inc
in
pop
mov
lea
cmp
es
sarl
sub
mov
xchg
test
cld
out
jl
cmp
hlt
mov
scas
aad
cmpsl
push
jo
ja
push
ds
mov
or
fdivrs
cmc
in
cmp
mov
or
push
push
xlat
in
push
int3
pop
dec
jae
sub
xchg
adc
mov
sbb
imul
mov
rolb
divb
mov
xchg
fs
fcomip
dec
mov
mov
jb
call
cmp
jl
or
fcomip
fidivl
dec
push
aam
xchg
mov
mov
ret
or
icebp
and
cmc
and
jmp
mov
ss
push
mov
pop
icebp
cmpsb
dec
mov
and
ds
jbe
jp
mov
xchg
mull
dec
loope
cmp
js
test
shll
es
leave
mov
xor
dec
loop
stc
sbb
outsb
into
cmpsl
mov
aad
jg
adc
stos
adc
adc
sti
loopne
sarb
cltd
xor
loope
mov
int
dec
jp
lock
dec
mov
imul
sub
and
imul
mov
aam
mov
add
or
sbb
adc
sbb
ss
popf
mov
movsb
dec
ret
int
in
mov
into
adc
add
inc
sbb
andb
mov
push
in
inc
dec
jl
xor
mov
loope
shrl
mov
ss
jnp
bound
les
dec
aas
mov
sbb
daa
sbb
enter
das
jbe
lea
fwait
add
sti
xchg
mov
add
dec
and
inc
filds
push
dec
and
adc
and
lds
lcall
loope
cs
mov
push
imul
inc
adc
in
insb
aaa
je
and
jno
iret
jne
cmp
push
or
shll
out
sbb
decl
imull
xchg
iret
push
cmp
xchg
jmp
lahf
xchg
aas
insl
insb
cmp
in
xchg
je
fnstsw
jno
stos
sbb
or
lods
mov
fldcw
xchg
or
stos
js
pop
cmc
or
iret
mov
push
push
mov
out
jmp
inc
int3
mov
fsubrl
push
inc
mov
fstps
mov
push
loope
pop
addr16
jl
xorb
subl
adc
mov
ret
xchg
mov
popa
and
das
pop
in
in
xchg
in
lods
jnp
test
dec
or
std
and
push
push
add
and
push
dec
sahf
lea
jbe
adc
cwtl
sahf
mov
sbb
xchg
and
add
mov
mov
icebp
cmp
aas
insb
out
es
xchg
pop
loop
outsb
and
cli
sbb
lret
aas
stos
inc
inc
add
call
pop
jge
jge
jge
rorl
popa
fcomps
fcoms
sub
xor
popa
loope
push
cmc
xchg
fwait
test
xor
xor
imul
or
fcmovb
add
lods
sar
jnp
loope
push
pop
inc
scas
xchg
push
mov
out
sbb
lahf
adc
ficoml
or
pop
xchg
mov
pop
in
leave
fsubr
sub
inc
cmp
ds
push
sub
mov
pop
popa
out
out
ljmp
jle
ret
jo
aaa
push
push
hlt
cmpb
xor
inc
sub
inc
jg
outsl
dec
or
push
fwait
cwtl
push
sub
pusha
clc
adc
jb
fwait
imul
stos
push
dec
repnz
rcrl
mov
push
or
icebp
repz
repnz
xor
jo
push
xor
push
jbe
ds
xlat
sbb
xchg
aam
adc
jne
dec
test
pop
dec
fadds
outsl
in
mov
push
jae
cli
mov
outsl
das
xchg
add
push
jae
popa
pop
iret
scas
rolb
or
push
gs
mov
jae
jecxz
inc
sub
cmpsb
pop
pop
jp
add
lret
xor
test
and
mov
ljmp
cltd
sbbb
rclb
das
jae
jge
sub
mov
hlt
loope
daa
cmp
mov
xlat
dec
xor
xchg
mov
cld
add
jmp
sarl
imul
pop
mov
and
or
mov
inc
rclb
jmp
jnp
mov
cwtl
cli
in
scas
inc
cmp
addr16
adc
jae
xchg
dec
setl
push
outsl
lsl
xor
pop
jno
addl
mov
inc
inc
das
sbb
sbb
mov
and
xor
jb
jo
jmp
jno
sub
insb
arpl
push
scas
loop
in
jnp
in
popa
add
sub
push
lock
add
xchg
or
xor
cmp
iret
push
sbb
adc
incb
dec
int
and
shlb
jmp
xor
ret
cmp
call
es
fisubs
shl
inc
jp
dec
aad
push
add
enter
push
lods
sub
cmp
movsb
push
xchg
push
mov
or
xchg
jp
jge
jo
lahf
out
sbb
out
mov
mov
sbbb
sbb
mov
dec
clc
cmpsl
mov
jg
daa
test
cmp
cld
les
push
xchg
in
scas
xor
in
leave
loopne
pop
test
dec
loope
xchg
push
dec
es
mov
fisubrs
cmp
jne
sub
add
pop
jmp
sbb
in
and
sub
call
xchg
mov
in
jmp
sbb
por
hlt
inc
sub
xlat
insb
mov
dec
rorb
lcall
pushf
lods
rcrl
in
sub
das
mov
lcall
dec
nop
cmc
lahf
fwait
cmpsb
jle
pop
pusha
cli
fwait
jno
cmp
cwtl
push
repnz
cmp
jne
and
push
mov
xor
scas
push
xchg
push
xor
push
pop
jle
push
mov
loop
sahf
and
iret
cmp
imul
push
sbb
jg
pop
movsl
push
push
jb
fists
xchg
or
xor
push
jne
mov
outsl
test
dec
cmc
sbb
stos
jp
pushf
idivb
adc
xchg
cld
pop
mov
pop
push
cwtl
jne
in
les
pusha
imull
sub
std
sub
leave
out
mov
shr
sahf
jbe
aaa
push
jbe
fidivrl
ret
push
je
mov
test
lock
ret
in
push
push
jle
sub
mov
ret
flds
enter
sbbl
in
testl
pop
ret
xor
out
mov
test
cmp
adcl
or
idivl
aaa
jo
xor
popf
mov
pop
jl
mov
out
sub
mov
ret
out
ret
incl
pop
stos
test
add
or
pushf
add
mov
lods
test
sti
faddl
pop
or
jle
or
dec
jmp
push
imul
filds
ja
sbb
leave
mov
stc
lock
pop
ret
ret
fisubs
fstl
cmpsl
add
ja
xor
mov
loopne
fidivl
push
sbb
xchg
pop
push
jno
sub
or
std
add
movsb
and
out
push
mov
push
push
inc
sbb
shll
cs
xchg
aam
cmovns
dec
mov
mov
dec
cmp
or
fwait
aaa
rorl
cmp
lahf
dec
push
dec
ljmp
cmp
xchg
imul
jl
pop
or
push
push
mov
inc
shl
fwait
arpl
inc
jno
sbb
pop
or
in
pusha
lea
lcall
mov
pop
xchg
shrb
xchg
repz
inc
mov
jae
pop
jg
sti
dec
fisttpl
sub
cmp
or
lods
lret
das
in
sbb
pushf
mov
cmp
scas
pop
ds
or
scas
rcll
lock
enter
cltd
dec
arpl
inc
add
sar
out
push
andw
test
push
popl
mov
out
cmp
subb
icebp
lock
js
cmp
fstp
cwtl
sub
std
test
pusha
mov
mov
addr16
icebp
xchg
pop
mov
lds
sbb
inc
lahf
add
dec
int
pop
fidivrl
shr
xchg
in
cmpsb
dec
aad
mov
adc
mov
adc
or
rolb
int
push
inc
loop
outsl
or
decb
jecxz
jnp
popa
inc
mov
clc
mov
dec
gs
fistl
ret
fsubl
mov
and
push
popw
jge
and
push
fdivl
sub
addr16
jmp
repz
ss
inc
int
pop
popa
pushf
dec
add
jne
mov
stos
out
cmp
mov
and
call
sbb
dec
int
and
out
dec
push
and
push
sbb
xchg
test
sub
mov
subl
cmp
jecxz
aam
add
add
mov
int3
aas
sbb
das
inc
imul
push
repnz
call
ficoml
dec
enter
roll
cli
xor
pop
adc
cwtl
add
xor
dec
mov
add
mov
icebp
cmp
pop
push
lods
mov
gs
add
test
aam
loopne
ficoms
inc
jle
push
jbe
pushf
mov
mov
push
incl
lea
jb
inc
stc
int3
mov
sbb
sahf
dec
sbb
mov
sbb
jns
fisttpll
mov
in
cmp
dec
adc
jmp
adc
fs
xor
mov
pop
push
xor
adc
mov
filds
sbb
and
ds
push
mov
and
pop
or
out
cwtl
aas
hlt
mov
sub
jp
sub
add
aaa
int
cmp
adc
cltd
adc
push
adc
xor
fwait
iret
pop
add
sub
adc
mov
mov
push
adc
push
imul
insb
pop
fs
xor
lods
lods
and
and
test
iret
daa
outsb
xor
or
test
stos
pop
rorb
xchg
jb
ret
mov
rorb
das
cwtl
iret
add
dec
cs
imul
pop
dec
or
push
mov
lret
ds
insb
int3
pop
mov
daa
mov
imul
scas
stc
jb
dec
mov
std
adc
imul
mov
sbb
je
lret
jge
ja
insb
xchg
mov
stc
insb
and
dec
es
jae
cmp
jg
adc
insb
mov
rorb
mov
cld
shlb
clc
movaps
add
call
in
adc
xchg
or
mov
add
add
repnz
scas
adc
std
and
mov
and
lret
ficompl
fiaddl
sub
mov
mov
xor
cltd
dec
xor
mov
dec
jge
mov
push
out
int
jno
cmpsl
shr
push
adc
push
inc
pop
test
sub
pushf
mov
add
mov
sub
cmp
loop
xacquire
xchg
mov
fmuls
lods
jno
pop
in
ja
out
adc
pop
push
xorb
rolb
mov
xchg
mov
pushf
jne
or
pop
loopne
cld
pop
pushf
cmp
int3
mov
pop
inc
add
mov
jl
loop
xchg
pusha
or
dec
mov
cmp
pop
mov
mov
jge
fsub
sahf
popf
filds
es
adc
divb
mov
jb
xorb
rclb
lds
push
xchg
push
pusha
int
pop
mull
stc
ss
pop
sub
cld
adc
sbb
ja
lods
and
dec
idiv
mov
call
inc
outsb
or
test
insb
inc
push
or
iret
cld
mov
and
mov
loopne
jo
push
push
pushf
int3
adc
inc
mov
cmp
mov
mov
mov
pusha
sub
jle
clc
xchg
cmp
mov
inc
in
loopne
xchg
shl
cmc
pop
popa
adc
fidivl
add
imul
dec
xor
js
xor
sbb
xchg
inc
popf
aam
mov
mov
jnp
add
std
jl
or
jnp
sbb
lahf
mov
repz
call
ja
inc
push
leave
cwtl
inc
dec
xchg
inc
inc
insb
mov
adc
mov
jbe
imul
sarl
push
xchg
lds
daa
inc
and
sbb
loopne
int3
add
fcoml
rclb
repnz
push
xor
addr16
add
mov
inc
mov
and
ret
mov
iret
mov
mov
mov
lds
jne
push
std
push
dec
dec
pop
cmp
arpl
sbb
arpl
testl
fsubl
mov
fdivs
jae
in
arpl
ja
add
dec
repz
stc
xor
inc
and
jg
add
cs
in
sub
and
lret
push
xor
push
iret
lea
test
outsb
cmp
pop
add
js
sbb
adc
pop
add
adc
shr
mov
call
lea
scas
loope
das
mov
aaa
cmc
lods
jno
clc
aam
dec
inc
insb
and
jg
lods
adc
and
rorb
fwait
imul
mov
cmc
sbb
loope
daa
or
shrl
pop
cmp
pop
leave
lods
adc
pop
xchg
pop
sbb
and
jmp
popa
pop
inc
cmp
outsl
repz
stc
sarl
xchg
xchg
test
xchg
ret
mov
in
fs
sbb
mov
cmpb
rclb
test
cmc
cmp
lea
add
rolb
mov
fisttpll
mov
int3
ret
pusha
push
cmp
mov
mov
repz
aaa
rclb
ret
movsl
pop
mov
bound
adc
sahf
push
outsb
xor
and
xchg
popf
daa
lahf
lods
push
int3
movsl
adcl
cmp
sub
andl
and
jmp
adcb
mov
repz
xchg
mov
inc
in
sarb
pusha
sbb
sub
mov
add
cltd
call
pop
dec
push
cwtl
addr16
push
cmp
xor
push
mov
aas
jp
mov
shrb
jo
adc
jnp
mov
sub
loopne
dec
sub
push
mov
push
pop
jl
inc
icebp
into
sub
jmp
test
push
and
les
jecxz
mov
pop
inc
cmp
mov
iret
enter
int3
cld
movb
shrb
sti
adc
xchg
movb
out
mov
test
add
das
repnz
daa
in
push
mov
jns
sub
shrl
xor
adc
fcmovnb
les
mov
jmp
inc
mov
jns
jge
mov
icebp
arpl
call
pop
inc
je
gs
adc
mov
repnz
pop
dec
mov
xchg
sbb
jl
shl
pop
popa
xor
insb
sti
out
lcall
shrl
fistpll
xchg
sbb
pop
jp
mov
cmp
imul
push
mov
cltd
jge
stc
fiaddl
cmp
aaa
clc
movsb
xlat
outsb
lods
mov
scas
jno
dec
add
jno
or
ljmp
test
sbb
mov
sub
push
ja
xor
lret
lock
je
cmpsl
loop
and
pop
gs
bound
or
mov
adc
mov
cmp
daa
and
lds
add
int3
cltd
dec
inc
xor
lea
lahf
sti
sub
test
fcom
jo
or
sub
xchg
mov
inc
dec
popf
movsl
or
xchg
jnp
or
dec
gs
mov
scas
sub
sti
stos
sbbl
pushf
sub
mov
or
sbb
outsl
jne
push
aaa
jle
int3
xchg
cld
ja
add
pop
jmp
pop
imul
push
out
test
movsb
mov
imul
inc
push
sti
and
mov
fsubrl
sahf
xchg
jbe
hlt
outsb
xor
add
aaa
lock
push
sub
lahf
insb
cmp
cltd
iret
test
mov
mov
mov
pop
cmpsl
xlat
or
dec
into
lret
jmp
sub
xor
pop
arpl
lret
inc
aas
cs
bt
repz
dec
sbbb
pushf
mov
in
mov
push
aam
and
les
or
cwtl
inc
aaa
sub
jmp
outsl
xchg
jo
pop
mov
cltd
mov
aam
sar
inc
out
leave
jne
xchg
add
out
shlb
icebp
imul
jns
shrb
cmp
jne
cmc
loopne
adc
ret
iret
xor
sbb
fldl
je
jmp
lods
xchg
sbb
dec
push
sahf
test
popf
xchg
push
add
stos
popf
xchg
jg
or
xchg
mov
jbe
adc
add
mov
pop
rcr
dec
cmp
mov
sti
je
jge
in
push
and
ret
push
mov
pop
xlat
lock
imul
mov
arpl
out
cmp
es
push
js
aam
cwtl
xchg
femms
cmpsl
scas
jg
repnz
pop
pop
jns
dec
aaa
daa
push
gs
xchg
push
pop
out
inc
inc
daa
push
dec
xlat
addl
or
xor
mov
lods
jmp
cmp
aas
xchg
mov
insb
mov
rorb
mov
pop
in
mov
xor
out
std
inc
sahf
dec
in
leave
in
push
push
mov
mov
mov
in
rorl
mov
fidivl
imul
leave
or
adc
ds
jne
ficoms
notl
inc
cmp
mov
mov
jge
push
mov
imul
mov
mov
push
and
cmp
and
faddl
sahf
adc
imul
cwtl
cld
and
jecxz
mov
in
push
test
test
sbb
and
in
and
or
dec
outsl
sti
pushw
arpl
mov
fimull
mov
mov
loopne
cmp
adc
sub
sub
outsb
xchg
ficompl
inc
jp
or
movb
cmp
cmp
jnp
pushf
dec
sub
cmc
fsubrs
cltd
fnsave
rorl
inc
xchg
and
arpl
mov
aas
push
sbb
mov
lock
testl
leave
icebp
fwait
jg
or
sbb
insb
cltd
inc
test
fsubrs
sub
rcl
clc
adc
ljmp
cli
in
pop
fwait
aad
add
ret
push
push
pop
in
mov
arpl
js
push
cld
icebp
jb
arpl
sahf
popf
fwait
loope
push
xchg
mov
xorb
iret
out
test
push
movsl
jg
lock
loop
mov
cmp
mov
aas
jecxz
mov
lret
iret
inc
cmp
lods
scas
lods
cld
mov
jl
xchg
mov
pop
push
out
clc
stos
ljmp
cmpsl
mov
jmp
gs
iret
dec
jae
cltd
push
fistl
addr16
add
xor
cmp
andl
clc
icebp
xlat
scas
and
push
xchg
movsl
icebp
insl
or
xor
mov
mov
leave
in
jecxz
cmp
dec
push
divb
popf
nop
dec
lret
insl
push
push
push
push
jb
add
adc
sub
pop
addr16
add
inc
mov
aad
gs
or
mov
jge
pop
and
add
je
xchg
and
push
pop
call
outsl
inc
ja
lock
xchg
xchg
mov
aaa
cmpsb
sti
cmc
addr16
bswap
mov
test
in
les
adc
mov
js
mov
fwait
je
scas
cmp
pop
popf
xchg
cmovle
shll
ljmp
imul
jae
and
xchg
sbbb
arpl
xor
push
pop
lcall
add
add
sbb
mov
adc
jecxz
lods
adc
ja,pt
test
push
sub
pop
lock
icebp
out
and
out
fcmovnb
mov
dec
addr16
xor
jmp
aam
mov
push
jno
sbbb
ljmp
cmpsb
jbe
icebp
push
not
lcall
or
loope
adc
dec
mov
pop
jmp
pop
lods
scas
sub
ljmp
sub
sub
jmp
xchg
enter
repnz
pop
push
fdivrl
lret
jle
dec
gs
inc
loope
in
sub
or
arpl
adc
pop
lahf
jb
lds
jb
test
pop
xlat
sbb
sbb
xchg
loopne
push
push
call
fldenv
dec
inc
add
fisubrs
cmc
or
jo
movsl
xlat
repz
inc
add
shrb
test
jno
leave
hlt
out
push
clc
shlb
pop
mov
enter
imul
cmp
push
adc
jmp
stos
rclb
rcr
fwait
lods
or
orb
ficomps
inc
add
pop
pop
dec
leave
inc
adc
fwait
mov
xchg
xor
mov
cmpsl
test
inc
lods
std
je
lds
adc
stos
mov
dec
aad
leave
push
push
fidivrl
out
push
ja
jne
cmpsb
pop
jb
fwait
push
mov
inc
pop
push
ds
cmpsl
lahf
loop
push
cmp
psubsw
sub
roll
out
test
scas
adcb
jbe
sbb
jge
lds
or
inc
xchg
mov
and
sbb
pop
jns
popf
xchg
cmp
pop
add
out
fsubr
and
dec
pop
pushf
fldcw
pop
jmp
jle
and
push
mov
fsub
adc
leave
das
fistpl
mov
icebp
dec
inc
ljmp
scas
dec
adc
lds
repnz
sti
int3
ficoms
in
mov
stos
mov
fucomi
push
mov
lret
and
add
pop
xchg
mov
jnp
add
insb
jae
movsl
jp
roll
hlt
testb
xchg
addr16
fstpt
adc
es
insl
jg
lock
push
jno
nop
out
sbb
adc
fwait
inc
lea
jp
jge
lds
fsubl
jnp
sarb
lcall
push
add
sub
mov
cmp
cli
add
in
mov
lcall
or
or
mov
or
sbb
mov
dec
andb
jmp
sub
mov
cmp
roll
xchg
out
dec
jbe
sarb
adc
xchg
mov
dec
dec
adc
push
pop
mov
lds
hlt
out
jno
sub
pop
insb
shl
movsl
pop
pop
sbb
mov
and
jmp
sbb
inc
hlt
aam
dec
addr16
daa
or
mov
stos
outsb
add
inc
jg
or
shl
iret
mov
jbe
and
inc
shr
popa
hlt
das
push
dec
je
fstl
dec
jno
lods
mov
mov
stc
nop
xor
pop
cmp
pop
add
sub
jb
or
mov
xor
cmpsb
and
fadd
jne,pn
pop
mov
jg
sarb
scas
xchg
push
mov
jecxz
addb
mov
stos
jbe
insb
shll
lret
sbb
pop
subb
dec
or
out
daa
lret
and
mov
jle
sub
mov
mov
test
in
inc
test
insl
jmp
cmp
cmp
xorb
xlat
int3
imul
pop
rcll
and
xchg
cld
xchg
or
dec
loope
push
inc
mov
pop
jb
sbb
pop
sub
clc
std
mov
mov
add
and
lcall
push
and
sbb
ret
cmp
mov
dec
or
inc
out
test
xor
jle
xchg
and
aad
push
xchg
add
sub
sti
outsb
sub
test
cmc
sarb
dec
or
aaa
push
mov
in
mov
fmulp
or
pop
imul
jno
cmc
cs
add
dec
fmull
cmp
mov
cvtps2pi
mull
lcall
xchg
daa
jns,pt
or
cltd
ljmp
clc
mov
fisubl
loop
add
push
lock
mov
aam
jbe
sbb
gs
clc
ror
clc
bound
pop
push
aam
xor
or
mov
andl
push
mov
or
xchg
add
jle
sub
mov
mov
sub
call
push
pop
sub
sahf
ja
inc
dec
std
ljmp
mov
scas
bound
xor
push
stc
push
daa
scas
in
into
push
ret
mov
icebp
dec
mov
and
or
gs
adc
mov
stos
std
mov
push
dec
inc
sarl
jo
lock
std
push
fmull
cmpsb
dec
fists
pop
std
outsl
inc
test
int3
mov
sub
scas
adc
iret
rcrl
push
cltd
popl
loopne
mov
scas
xlat
jge
out
add
jb
dec
outsl
inc
inc
jns
or
mov
adc
jecxz
or
xor
ffreep
pop
popf
test
adc
pop
cld
scas
jge
and
inc
fs
hlt
sub
or
push
ljmp
pop
out
inc
shll
lahf
fsubrs
gs
mov
cld
cmp
push
das
insb
scas
fwait
daa
das
mov
cmp
push
pop
or
cmp
mov
daa
inc
out
cmc
test
scas
inc
add
jne
mov
jl
pop
push
outsl
mov
pop
in
pop
and
xor
inc
aaa
dec
xchg
jecxz
dec
aad
std
cmp
mov
cltd
dec
mov
jns
lea
sub
lock
inc
jnp
lds
or
xchg
adc
jp
push
and
cltd
clc
add
stc
fmuls
in
nop
xchg
xlat
scas
outsl
in
mov
mov
aad
and
aam
and
mov
jnp
repz
cltd
loop
repz
mov
sbb
jge
adc
xor
data16
fdivrp
popa
cmp
testb
aad
jnp
and
cmp
jns
mov
imul
pop
sub
xchg
sub
pop
fstl
xchg
push
jne
pop
pushf
imul
out
push
aam
nop
add
mov
xchg
jae
or
push
pop
sub
add
or
shl
pop
inc
fnstcw
mov
xor
pop
rorl
movsb
add
sub
mov
loope
mov
pop
xorl
js
ljmp
cmp
ss
out
push
or
xchg
xchg
retw
dec
mov
push
xchg
add
les
add
mov
mov
and
out
in
jo
jnp
leave
inc
subb
pop
insb
jnp
fmull
add
arpl
dec
adc
push
loopne
call
or
push
mov
mov
inc
push
sub
cmp
je
shl
push
cmp
jmp
dec
push
adc
sub
add
loopne
xor
lods
leave
jbe
jecxz
mov
bnd
inc
xor
addr16
push
and
mov
push
mov
pop
es
out
jnp
bound
shlb
fistpl
cmovg
fbld
sub
inc
test
cmp
xchg
xor
jp
in
push
cmp
insb
jmp
mov
outsb
lods
test
nop
jo
xchg
movntps
pushf
jl
stos
xchg
clc
inc
aas
inc
sbb
cmpsl
inc
push
xor
mov
icebp
repz
imul
jbe
push
leave
mov
orl
dec
insl
sbb
xchg
jae
sbb
sub
sbb
jns
ret
in
pop
push
es
mov
or
mov
ljmp
shlb
mov
mov
movsb
cmpsl
fistpl
jecxz
sub
dec
fwait
or
sbb
or
les
xchg
ja
aaa
and
lds
jg
aam
mov
mov
test
cwtl
das
dec
pop
sub
das
mov
incb
or
dec
frstor
xchg
push
andb
xor
add
and
add
sbb
pop
in
jbe
lret
popa
adc
push
sbb
sysenter
lea
push
les
xchg
test
pop
das
dec
mov
inc
pop
adc
jne
dec
sub
popa
lods
lods
in
and
jp
stos
dec
outsb
push
lahf
fsubrs
mov
pop
xorb
das
cli
outsl
bound
loop
inc
iret
xchg
xor
pop
lea
mov
lds
int
sbb
pusha
sub
lret
jbe
leave
mov
pusha
pop
in
adc
jl
ret
nop
sbb
cmc
and
stos
nop
add
adc
loop
orb
mov
mov
mov
sbb
xchg
movsl
call
aad
adc
cmpsb
test
inc
data16
fld
repz
jns
and
cmpsb
subb
xlat
mov
dec
cmp
ja
int3
stc
xorl
pushl
mov
aam
dec
ret
sbb
in
out
cmp
push
lods
xorl
es
push
or
out
ja
xchg
jne
outsl
ja
negl
jns
push
cmc
cmp
mov
inc
syscall
pop
aad
xchg
mov
xchg
jae
pop
loope
out
mov
int3
mov
jge
push
rol
js
xchg
or
cmp
and
add
out
fs
xor
sarb
jnp
lods
popf
adc
popa
pop
jo
sub
pop
cltd
pop
push
xchg
rcrl
mov
cmp
out
jno
sub
ljmp
mov
aad
sbb
add
mov
ret
nop
add
iret
in
in
imul
leave
jno
lods
push
and
icebp
sub
repnz
pop
sub
pop
mov
pop
imul
scas
aam
inc
mov
jae
push
jne
inc
mov
sbb
fcompp
inc
xor
mov
insb
outsw
ficomps
jecxz
jb
scas
adc
jl
jo
pusha
jnp
xchg
jle
push
int
jne
inc
xchg
inc
call
add
iret
loope
inc
jle
daa
mov
pop
adc
mov
pop
imul
inc
adc
sbb
sbb
mov
pushf
push
call
inc
or
arpl
push
test
ds
stos
push
inc
in
stos
push
lods
xor
pop
sti
jg
loope
loope
jge
test
in
or
mov
in
sbb
pop
push
or
shlb
js
xor
mov
fildl
mov
and
icebp
jge
loope
xchg
dec
shll
jmp
ffreep
add
add
int
mov
jno
cmp
insl
cltd
decb
imul
xchg
mov
dec
lock
lret
in
dec
cwtl
mov
or
inc
hlt
add
mov
mov
lret
add
sub
jp
sub
aas
sub
imul
bnd
aad
pop
call
cld
jns
in
fistl
mov
push
pushf
add
mov
pusha
xchg
xor
jmp
cmpsl
or
or
mull
lret
adc
js
push
test
or
add
imul
push
xchg
icebp
outsb
test
cmp
push
pop
ljmp
push
pop
xor
sbb
dec
stos
adc
testl
nop
dec
sub
call
sbb
pop
insb
sbb
cmp
jg
pop
xchg
aad
sar
fmull
pop
loopne
cwtl
push
sbb
and
cmp
lods
cmc
insl
addl
cmp
pop
pusha
movsl
shr
sub
std
xor
add
xchg
loope
push
mov
fldcw
fidivs
inc
mov
popa
jo
call
sbb
xlat
xchg
into
mov
push
mov
repz
ja
push
and
fidivs
xchg
stos
sbb
sbb
or
pop
mov
loope
jle
adc
mov
xor
out
xor
pop
cs
xchg
cwtl
jae
and
xchg
cld
or
pop
std
mov
or
cmp
xchg
pushf
jl
rcr
movsb
push
jmp
sbb
push
stos
into
lret
mov
bnd
jmp
fisubrl
enter
xlat
stc
inc
mov
push
aam
cs
jnp
cmp
mov
gs
add
aad
ret
in
push
push
jbe
mov
xlat
or
and
adc
test
or
lret
inc
mov
pop
sbb
cmpb
fdivr
outsl
popf
int
fucom
orl
dec
push
lods
mov
mov
iret
xor
mov
andl
lcall
rolb
or
int3
pop
enter
gs
mov
jmp
pop
pushf
ljmp
inc
ret
add
inc
mov
jns
push
pop
push
xlat
leave
xchg
mov
sbb
jne
fidivs
repz
ss
jp
inc
push
xchg
or
jnp
inc
add
mov
into
xchg
out
inc
addb
push
jp
adc
pusha
adc
and
or
js
je
add
sbb
jne
jl
inc
and
mov
cmp
cmp
les
outsl
imul
lods
enter
imull
fisubrs
std
stc
mov
movsb
xor
push
or
jg
or
push
lahf
jns
ret
xchg
in
and
pop
dec
pop
fwait
jbe
int3
mov
push
add
mov
cmpb
adc
sahf
fisttpl
xchg
mov
notb
fmulp
test
popf
mov
add
jnp
xor
mov
jmp
add
popf
jp
roll
scas
sub
cltd
ss
xlat
dec
xchg
pop
mov
aam
jo
jl
repnz
je
icebp
hlt
in
pop
jp
daa
xchg
xor
mov
mov
inc
xchg
into
xchg
and
jmp
es
fnstcw
jae
fldt
pop
insb
rcll
mov
or
sahf
cmp
clc
or
cmp
repz
arpl
insl
xchg
jnp
rorb
jge
mov
pop
repz
inc
xchg
fstpt
loopne
pop
and
push
cmp
inc
sbb
push
int
sahf
adc
mov
adc
mov
ficomps
pop
fwait
mov
das
or
xchg
mov
imul
in
xchg
sahf
or
sub
les
lret
mov
loopne
test
fbstp
jmp
cmovno
or
mov
leave
insb
or
ficomps
pop
adc
add
sahf
divl
vmwrite
mov
bound
jmp
in
dec
jo
or
xchg
cwtl
jge
imul
adc
or
dec
or
pop
sbb
cmp
fwait
jecxz
lods
hlt
push
push
outsl
sub
cmc
inc
dec
pop
addb
roll
ds
dec
stc
xorb
out
xchg
sahf
cmp
xchg
scas
popf
stos
inc
xor
sub
popf
mov
fstl
in
pusha
jno
dec
stos
pop
jns
das
sbb
adc
mov
jecxz
es
mov
xor
lcall
fimull
push
fcompl
test
xor
or
push
movsl
mov
ss
xchg
decl
sub
aam
mov
gs
sbb
xchg
lahf
pushf
sub
mov
or
sbb
add
jae
or
push
adc
or
imul
cmp
xchg
sti
lcall
outsl
push
popf
sub
cmp
scas
xlat
lret
mov
push
sub
push
lods
or
enter
jo
stos
sbbb
adc
fs
xor
push
jle
ret
sbb
sub
clc
and
and
into
cmp
cld
ret
pop
xchg
sbb
push
jns
enter
sbbb
adc
in
jmp
mov
jle
ficoml
out
xchg
lret
movsb
shlb
es
in
cmp
je
pop
mov
pop
js
xor
aaa
jmp
mov
mov
xor
stos
and
dec
adc
or
hlt
dec
dec
and
in
test
rcll
cmp
jnp
xor
xor
mov
sbb
enter
clc
add
dec
lods
sub
loope
jns
and
inc
popf
xor
out
sahf
mov
nop
jp
mov
repz
dec
sub
test
push
push
cltd
pop
cmc
lcall
add
jnp
inc
inc
mov
mov
mov
jb
or
outsl
inc
pop
mov
lea
pop
jmp
daa
addb
sahf
js
xchg
in
je
test
jmp
xor
bound
sub
imul
lret
dec
cmp
xor
sti
out
ljmp
notb
mov
xchg
dec
sbbl
lahf
xchg
pop
popf
into
xor
push
sub
inc
sub
es
mov
in
dec
imul
es
in
fwait
jo
adcl
mov
mov
div
cmp
pushf
adcb
aad
pop
push
mov
in
push
cmp
dec
mov
dec
orb
bound
jo
inc
movl
js
add
out
pusha
lret
jecxz
mov
and
test
mov
call
mov
push
mov
iret
cmp
pop
mov
in
mov
inc
cmc
arpl
gs
stc
leave
shl
fildll
sar
pop
xchg
add
leave
out
jmp
outsl
or
inc
and
mov
fcmovnb
int
cmc
stc
mov
inc
cmpsl
sub
mov
and
dec
adc
fiadds
mov
loop
lret
ds
sub
enter
jo
addr16
aaa
sbb
test
dec
push
ljmp
pop
sbb
dec
data16
or
adc
jbe
les
jno
out
dec
sbb
mov
divb
int3
cwtl
aam
jge
sahf
push
xchg
ret
and
push
dec
je
xor
std
dec
fstpt
push
add
pop
stc
mov
jno
test
sbb
ja,pt
in
dec
js
sahf
or
test
out
in
lcall
popa
cmp
out
pop
pop
sbb
sbb
shlb
in
xchg
cmp
mov
and
mov
add
in
mov
push
jo
stos
fadds
outsl
push
lcall
imulb
inc
sbb
movsb
sbbl
cmp
adc
jle
xor
idivb
fs
xchg
lods
int
pop
cmp
insb
adc
mov
adc
push
pop
pusha
cmp
pushf
and
or
xchg
aad
xor
or
xchg
jb
scas
mov
pop
adcl
add
xchg
rcl
frstor
shl
xchg
sarl
cli
repz
in
xor
scas
aam
adc
xor
scas
popa
and
aaa
movsl
roll
fwait
ret
mov
or
lret
sbbl
inc
out
push
addr16
xor
inc
dec
or
call
and
test
out
xchg
ud1
clc
pop
inc
shrb
sub
scas
cmp
xchg
xchg
jmp
cld
aad
and
dec
xchg
out
dec
enter
mov
add
in
pop
nop
ficoms
mov
insb
pop
mov
popf
sbb
mov
sub
pop
inc
xchg
mov
push
scas
xor
lods
push
inc
xchg
lret
xchg
icebp
sub
out
adcb
lcall
fistl
cmp
lds
or
push
mov
lcallw
inc
daa
sarl
jno
shrl
in
or
lds
mov
mov
mov
lock
xor
pushf
sbb
mov
pop
sub
inc
xchg
cs
stos
mov
sub
sub
and
loop
ja
add
cli
mov
popf
add
out
lock
sbb
sbb
sub
mov
mov
dec
sti
fbld
and
push
mov
lock
push
scas
imul
and
mov
mov
add
inc
inc
xchg
pop
mov
sub
es
imull
outsl
rcrl
rclb
cwtl
subb
aaa
jae
adc
ds
out
xor
out
and
adc
jl
adc
mov
and
mov
sub
sub
and
int3
jecxz
mov
arpl
popa
js
out
mov
jmp
adc
fildll
fucomp
cmp
cwtl
cmc
adc
fldl
lock
mov
in
aam
clc
sbb
push
ljmp
adc
outsl
mov
jmp
aas
cmp
mov
mov
ffreep
test
aas
dec
lods
test
adc
ds
or
jp
pop
rcll
adc
ss
jo
adc
xchg
cltd
jo
xchg
sub
dec
lcall
cli
push
push
cmp
mov
test
push
mov
cmp
and
sar
xor
push
add
or
int3
mov
push
cmp
pushf
bnd
fidivrs
aam
mov
fmuls
push
aaa
xor
sbb
add
rcll
mov
test
fidivrs
movsb
mov
cld
int3
jb,pn
sub
scas
pop
shlb
adc
test
mov
fadds
mov
add
mov
xchg
cmpsb
enter
testl
inc
pop
fisttpl
arpl
xor
fbstp
shl
out
in
xor
popf
mov
les
and
sbb
ficoms
mov
adc
insb
mov
xchg
pop
push
jmp
or
pusha
push
fildll
faddl
push
adc
xchg
into
dec
dec
enter
les
sbb
push
push
imull
xchg
es
mov
adc
fsubs
and
xor
cmc
cli
out
addr16
inc
cld
pusha
shlb
lahf
jmp
hlt
add
cmp
std
fcmovb
push
aas
push
sbb
gs
in
lock
test
inc
arpl
dec
dec
in
enter
and
aas
les
lcall
jnp
and
testl
cmpsb
and
shl
imul
sahf
ret
xor
test
cwtl
inc
add
lea
leave
test
mov
push
je
lahf
movsl
fwait
ljmp
ja
pop
mov
mov
mov
push
adc
imul
sbb
add
push
adc
xchg
or
rclb
jp
rorb
loopne
sarl
xor
jg
push
lds
ljmp
stos
test
jge
inc
test
jne
out
ficoml
xchg
jns
dec
fs
pop
cwtl
mov
push
loop
push
sbb
jne
xchg
loopne
daa
push
lret
add
lea
jmp
push
adcl
cli
lahf
mov
sub
inc
push
fcoms
and
stos
lret
adc
and
sub
fyl2xp1
subl
adc
mov
inc
aam
lods
jle
bound
icebp
inc
push
pop
mov
mov
test
xchg
ds
inc
jg
fs
addr16
xchg
inc
and
mov
pop
das
rclb
sbb
fisttps
les
jae
mov
cmp
in
lret
gs
mov
pop
push
xor
shll
mov
pop
jne
stc
sbb
sbb
add
ljmp
sbb
xchg
mov
loope
inc
mov
dec
xchg
insl
mov
cmp
xor
inc
lret
rorl
jg
cmp
adc
jo
mov
xchg
ljmp
imul
imul
js
insl
dec
xchg
lea
lock
mov
add
loope
bound
cmp
and
sbb
leave
arpl
gs
in
dec
fbld
inc
push
fsubrl
inc
add
cld
xorb
push
lods
jg
add
mov
inc
cmpsb
push
xor
xor
fidivl
mov
dec
mov
fdivr
insl
test
and
aas
lods
cmp
sub
pop
push
mov
pusha
jl
cmc
bound
cmpsb
or
mov
pop
mov
add
lods
dec
aas
testb
or
movl
and
jno
mov
push
inc
rolb
aad
or
xor
mov
mov
add
mov
sbb
sub
aam
je
clc
dec
sub
mov
or
out
mov
sub
mov
bound
or
xor
mov
mov
cltd
imul
fbstp
rcr
xlat
dec
xchg
xchg
pop
mov
dec
lret
cmpsb
mov
ljmp
cmc
inc
cmp
and
jne
int3
push
das
scas
insl
inc
sbb
inc
inc
inc
pop
lcall
and
addb
scas
push
sbb
push
out
and
lock
sti
insl
mov
cltd
sahf
jno
test
call
inc
fwait
pop
xor
ds
sub
out
add
mov
insl
aas
cmp
das
xor
mov
jge
out
dec
sahf
xrelease
fidivrl
mov
and
sbb
sar
dec
sub
dec
ret
loop
cmp
popa
sbb
dec
jmp
mov
in
cmp
test
add
cwtl
add
dec
push
mov
popf
cli
or
pop
jb
push
push
scas
dec
inc
cmpsb
lcall
stos
std
push
xchg
cltd
clc
push
mov
jno
push
xrelease
mov
pop
stos
push
and
push
cmpl
call
data16
ffreep
jbe
test
fwait
cltd
loope
adc
mov
inc
push
fdivrl
add
out
xchg
mov
sub
in
push
loop
push
in
jno
pop
jmp
inc
jo
gs
and
pop
daa
movsl
pop
cmc
sbb
adc
xchg
push
pop
testb
popl
jbe
mov
mov
cmpl
sbb
iret
pop
lahf
push
mov
pop
lcall
add
push
or
lods
scas
cmp
mov
inc
pop
adc
dec
iret
iret
jp
iret
cmc
cmp
or
mov
xchg
mov
loop
test
mov
in
outsl
outsb
loope
inc
jne
imul
imul
add
xchg
inc
sub
xor
sarl
sahf
pop
mov
and
xor
jnp
lock
lods
cli
pop
loop
mov
push
push
or
scas
rorl
repnz
or
pop
insb
test
mov
sbb
pop
push
stc
adc
jle
mov
je
jle
sti
mov
cwtl
xchg
call
xchg
mov
cs
xor
lea
sbb
lock
cmpsb
add
cli
cmp
enter
cmp
cmp
sbb
rcll
es
daa
sbb
aad
icebp
fcomi
xchg
jg
sub
gs
add
aam
mov
dec
adc
inc
mov
xlat
push
int3
les
mov
dec
and
dec
or
enter
pop
scas
cmc
movsb
mov
sbb
mov
imul
push
std
lahf
mov
inc
cli
movsb
fildll
xor
icebp
rcrl
in
jl
outsl
push
sbb
add
inc
cs
scas
fbld
add
or
sub
mov
out
cli
jns
cmp
jecxz
cmp
push
and
adc
dec
pop
stc
dec
in
xchg
sti
cmpsb
xlat
shl
push
inc
addr16
out
mov
fs
inc
jb
cmp
popf
push
insb
push
push
add
cli
jecxz
aaa
jne
cmp
cwtl
cs
test
ret
dec
movsb
mov
sarl
cmp
xor
pop
arpl
sub
add
dec
inc
xchg
jae
cmc
out
mov
and
mov
ret
into
outsb
divb
test
lock
xlat
mov
cmpsl
std
pop
pop
add
ja
dec
lcall
xchg
xor
dec
mov
pushl
outsl
mov
data16
out
outsl
jns
jl
push
push
arpl
push
fldl
mov
or
in
mov
imul
xchg
pop
mov
lret
inc
shl
xchg
jb
jns
je
jbe
jb
cmpsl
stos
addr16
outsl
mov
jns
loope
add
adc
sbb
sar
loopne
pushf
or
lods
imul
inc
mov
cmpsl
and
pop
cs
push
adc
ds
xchg
sub
add
xor
stc
ficompl
mov
das
movsb
cmp
popf
add
or
jmp
sub
pop
cmp
or
stos
dec
cs
push
inc
push
mov
lcall
scas
push
pop
mov
or
test
adc
stc
and
cmp
pop
pop
jecxz
jle
dec
loopne
loopne
cmp
nop
mov
and
mov
leave
fwait
cmp
jns
pop
in
sti
dec
fimull
inc
push
mov
addl
inc
mov
xor
jge
pop
inc
push
sahf
xor
pop
in
push
out
lods
not
ret
mov
repz
outsb
pop
daa
aad
xchg
adc
das
fs
int
pop
cmp
popf
loope
mov
fwait
pop
addr16
inc
xor
loope
std
nop
inc
pop
aaa
arpl
push
outsb
push
adc
mov
fistpl
or
hlt
jbe
testb
bound
push
test
push
jecxz
jo
mov
lds
jb
ds
repnz
outsl
cmp
sbb
push
push
adc
add
or
cmpsb
jecxz,pn
ficompl
fimull
arpl
xchg
jl
dec
pop
and
or
loop
testl
cmpl
movsl
fs
lods
insl
mov
rolb
js
into
mov
mov
movsb
xchg
fisttps
enter
xchg
testl
aaa
cmc
aaa
lods
daa
sub
add
mov
jns
adc
pop
shlb
xlat
arpl
call
lcall
jmp
fnstsw
shr
pop
daa
lret
and
mov
loop
stos
add
sub
dec
dec
and
sarl
mov
jns
sbb
push
mov
inc
push
hlt
and
mov
add
nop
lea
adc
outsb
push
push
xchg
sbb
add
aas
inc
mov
arpl
add
xchg
xor
adc
in
mov
fiadds
loop
push
jne
jmp
leave
lods
adc
cmpsb
data16
jb
xchg
cli
jo
sbb
add
in
jae
cmpsl
push
cmp
mov
mov
jecxz
daa
cmpsl
or
lods
mov
xlat
dec
js
shlb
ljmp
xchg
dec
add
push
out
sbb
sub
push
das
mov
dec
inc
cmp
mov
push
dec
fidivrl
rolb
inc
es
test
in
test
dec
in
cmp
dec
popf
lea
and
jo
adc
ret
test
jg
jnp
bound
clc
add
clc
fisubrs
add
je
xchg
shll
pop
cli
int
inc
out
insb
repz
ja
push
push
sub
daa
xchg
sbb
xchg
rorb
or
dec
imul
inc
iret
inc
sbb
xor
stos
jl
jae
ficomps
rcr
sub
stc
sbb
lds
and
jl
test
sahf
inc
pop
jl
sub
pushf
call
ret
outsl
mov
in
push
jl
in
xlat
or
and
push
jg
mov
jne
std
pop
adc
lret
xor
mov
out
addr16
add
inc
fidivl
mov
push
xchg
movsl
repz
rcll
mov
fsubrs
mov
pusha
xor
in
in
stos
nop
xor
pop
dec
lret
xor
sahf
and
fbstp
lret
inc
fldcw
mov
jb
or
adc
cmpsl
scas
shll
cld
es
jge
mov
out
ret
insl
outsb
std
addl
into
sub
sbb
repz
mov
or
or
push
ja
cmpsl
lock
mov
inc
mov
sbb
ret
stc
outsl
xor
mov
jmp
les
mov
add
and
jl
adc
adc
add
outsl
orps
in
xchg
push
mov
movhps
mov
or
insb
adc
mov
dec
mov
fs
rorl
in
sbb
lahf
aad
dec
mov
pusha
popf
imul
cmc
fidivs
lahf
and
jg
pop
call
mov
mov
pop
pushf
arpl
sbb
or
xchg
stc
mov
stos
dec
jne
add
mov
xchg
and
or
push
lds
xchg
xchg
jns
adc
addb
pop
out
xchg
mov
jmp
xor
imul
add
jno
adc
add
dec
daa
ret
inc
andb
clc
cmp
jmp
cwtl
nop
jg
pop
jb
pop
popf
pop
hlt
lock
sbb
push
mov
inc
jmp
or
lea
jl
cmp
cmp
lahf
mov
jmp
inc
pop
mov
sbb
dec
jle
and
adc
into
loope
addr16
out
cmc
jae
mov
pop
pop
cwtl
push
jge
pop
add
pop
insl
and
ret
jno
or
repnz
or
dec
std
push
xchg
adc
add
lods
subb
sub
dec
mov
out
ret
mov
inc
aas
rcrl
adcl
mov
repnz
ds
subb
ss
fnstsw
popa
mov
andl
lock
xchg
add
inc
xor
cmp
or
xor
or
arpl
push
and
push
xor
xor
stos
cli
pop
imul
lods
out
mov
jae
mov
sub
test
nop
and
cld
fwait
dec
subb
sbb
data16
rcpps
outsb
popf
stc
daa
pop
cmc
and
pop
bound
rcll
stc
sbb
mov
or
jbe
gs
inc
in
push
daa
int3
xor
mov
rclb
vmulsd
popa
lcall
lea
ds
sub
cmp
clc
roll
fwait
cmpb
push
iret
push
sbb
lock
cmpsl
popl
loope
mov
subb
dec
xlat
in
mov
pop
add
pop
xlat
icebp
or
je
cmp
ljmp
movsb
mov
add
pop
aam
jnp
aad
jl
inc
xchg
ficoms
or
or
mov
gs
mov
add
push
movsl
mov
jo
pop
lret
mov
aad
jmp
add
mov
lock
js
daa
bound
fidivs
mov
xor
lret
divl
pop
mov
add
test
ja
int
or
xlat
jp
push
xor
movl
push
adc
ja
xchg
mov
sbb
cmp
jmp
stc
lds
repz
iret
xor
movsb
add
fadds
mov
xchg
lcall
xor
icebp
call
push
scas
inc
dec
out
loopne
es
push
out
imul
hlt
mov
pusha
mov
sub
nop
loopne
sbb
out
jp
popa
adc
mov
mov
es
pushf
loope
cmp
cmp
dec
addr16
jmp
sbb
inc
repz
mov
scas
fwait
out
bound
sub
testl
jg
aaa
or
nopl
xchg
xor
jb
negl
mov
lods
fistpl
or
dec
jg
push
pop
mov
push
adc
in
xor
pop
xchg
xchg
sbb
push
adc
xchg
pop
jecxz
cwtl
add
jmp
fcmovb
fsubs
jae
pop
sbb
or
cmpsb
decl
in
mov
mov
pop
daa
flds
js
cmp
sub
popf
sub
dec
insb
inc
pusha
stc
sbb
iret
stos
ljmp
data16
mov
aad
jnp
mov
mov
ret
and
mov
pop
jae
jp
dec
fstps
lret
pop
xlat
and
fldcw
shr
cmpsl
leave
imul
xchg
or
sub
jg
lods
jne
cmp
mov
and
lcall
lcall
test
imul
outsl
shll
xchg
or
add
mov
mov
clc
call
push
dec
jne
jecxz
jno
fisubrl
mov
stc
test
sub
add
dec
lret
fucomip
mov
push
jle
jg
pushf
pop
dec
test
pop
fistpl
hlt
adc
icebp
xchg
pop
ss
cli
mov
mov
push
loopne
fstl
sbb
push
mov
cmp
cmp
push
xor
movsb
inc
test
xor
mov
mov
stc
cmp
pop
mov
in
lahf
xor
jl
subb
xor
idivl
xchg
pop
inc
sbb
fisttpl
mov
mov
xor
dec
subl
pop
jp
mulw
jmp
adc
loopne
inc
dec
push
fdivl
mov
push
lds
inc
xchg
clc
mov
in
das
cmp
mov
testb
sbb
int
inc
add
xor
ret
decb
pop
dec
and
fadds
arpl
jmp
xchg
lcall
sbb
add
ret
jb
and
cmp
inc
push
aad
in
out
jb
testb
mov
rorl
vpmullw
push
dec
cmpsl
jne
mov
outsb
mov
sub
cli
inc
add
dec
sub
mov
add
adc
or
rol
sbb
filds
dec
or
enter
push
push
mov
inc
out
je
mov
inc
push
rorl
jo
in
mov
xchg
xchg
fsubl
mov
mov
cwtl
addl
cltd
outsb
jns
in
jge
movsl
mov
and
jl
roll
pushf
cmc
pop
and
int
cli
test
sub
mov
cmp
insb
push
jns
mov
or
adc
xchg
shll
repnz
mov
scas
sbb
push
push
add
dec
faddl
mov
sub
cmp
xorb
xor
pop
adc
mov
and
cmp
xorb
mov
pop
dec
mov
fistpll
and
daa
and
pop
stc
or
or
outsb
xor
mov
pop
jp
or
sub
add
fcoms
mov
inc
fdivs
aaa
push
adc
push
divb
adc
cmp
mov
outsl
push
sbbb
inc
enter
scas
push
sbb
arpl
mov
sub
test
and
bound
xor
mov
jg
fldenv
or
cmpsl
cmpsl
mov
movsl
xchg
cmp
std
lods
jl
mov
or
cmpsb
sbbl
out
das
daa
in
sbb
out
push
dec
lods
mov
or
fldenv
or
and
loope
mov
loope
jp
jno
sbb
shlb
mov
mov
jg
xorb
popl
aam
cmp
fcoms
das
cmpsb
jg
mov
cmpsb
pop
pop
ffree
dec
pop
sbb
xlat
pusha
mov
stc
scas
popa
adc
or
clc
xchg
pop
sbb
enter
add
push
lret
ds
outsl
in
enter
cmpsl
xor
cld
xchg
cmovs
mov
jecxz
fs
mov
movsb
aad
xchg
nop
fcoms
add
sbb
and
outsl
xor
inc
push
push
fnsave
call
lds
jnp
and
js
add
stos
mov
rcl
addr16
mov
imul
stos
shlb
sahf
mov
fs
dec
ds
xchg
jl
loop
fstpt
test
rcrl
add
icebp
loopne
mov
mov
movsb
pop
dec
arpl
stos
mov
cmpsl
dec
push
mov
mov
orl
sub
mov
adcb
aad
jns
xchg
cmp
jmp
lods
sbb
jl
lods
dec
add
add
pop
jns
push
into
inc
dec
push
xor
repz
test
xchg
mov
and
mov
sbbl
dec
jns
push
xlat
pusha
popf
mov
mov
loop
pusha
jo
mov
push
fwait
xchg
jne
sub
sahf
cmpsb
xchg
lahf
movsb
jnp
xchg
jmp
and
cs
test
jp
cmpsl
jecxz
jg
or
ss
cmp
xchg
pop
mov
dec
addr16
roll
xchg
pop
cmp
xchg
jp,pt
and
dec
dec
xor
sub
out
addb
jle
je
cltd
adc
sub
xchg
pop
jno
je
or
mov
or
inc
mov
sbb
sti
dec
adc
mov
add
pop
or
inc
jl
push
mov
adc
test
repz
or
mov
adc
mov
sub
or
mov
xor
aad
cmp
dec
mov
or
lods
ret
cmp
ror
negb
inc
fstpt
pop
jmp
push
add
xchg
dec
hlt
test
cwtl
cmp
jle
cmp
shll
enter
pushf
or
inc
lock
iret
push
xchg
pop
les
push
mov
dec
xchg
out
sbb
inc
mov
sbbl
sbb
loope
mov
gs
jnp
ja
mov
cmpsl
gs
jecxz
in
movsb
or
in
outsb
sbb
adc
or
fstpt
cltd
sahf
lea
mov
out
add
jl
push
shlb
enter
push
mov
out
fsubl
dec
hlt
jle
insb
scas
fsubl
dec
pop
jle
adcb
cmpb
lods
cltd
push
in
das
popa
iret
inc
jl
xchg
or
sarb
cltd
sub
pop
fs
mov
adc
jge
and
push
aam
stc
je
adc
jge
fwait
icebp
fiaddl
lods
insl
push
insl
xor
stc
out
loopne
cmp
cmc
mov
lds
adc
xchg
mov
pop
in
sti
xchg
push
movsl
in
mov
or
icebp
gs
sbb
icebp
repnz
adc
cmc
push
or
lods
adc
ja
xchg
das
sub
arpl
xor
push
mov
mov
add
imulb
push
pop
inc
aaa
jbe
stos
and
pushf
gs
jb
icebp
mov
daa
push
or
mov
xchg
xlat
icebp
xchg
jmp
sbb
mov
int
pop
in
jl
xor
hlt
jge
cmp
dec
stc
lret
je
push
addr16
xchg
sub
jmp
gs
outsl
xor
xchg
and
sbb
out
xchg
fs
popf
hlt
in
pushf
mov
xchg
cmp
sub
shlb
and
mov
inc
adc
add
push
adc
mov
mov
push
sbb
jnp
mov
mov
cld
jge
or
call
cmc
mov
jo
mov
into
mov
jnp
cld
dec
push
push
adc
cwtl
adc
xchg
add
insb
jno
dec
pop
and
sarb
or
lret
xchg
addb
mov
icebp
test
xchg
in
push
imul
adc
pop
jne
shlb
mov
inc
ror
lods
ret
and
and
or
mov
test
jmp
mov
inc
push
cmpl
sbb
xchg
or
repnz
dec
jl
push
jns
jns
jmp
cmpsl
sbb
sti
lods
hlt
cmp
testb
outsb
popa
rol
mov
cmpsb
or
xchg
fs
jg
scas
shl
jns
stos
insl
xchg
dec
mov
dec
xor
js
mov
mov
adc
jbe
xchg
inc
pop
imul
push
mov
xchg
jb
mov
sub
ja
rcrb
mov
into
les
es
inc
rolb
bound
ljmp
icebp
in
aam
pop
jne
movsl
popf
mov
push
push
pop
xchg
mov
addr16
dec
or
adc
dec
ret
mov
mov
das
jg
cs
scas
jb
aaa
pushf
pop
in
mov
sahf
mov
adc
imul
sti
popa
push
repz
sbb
mov
dec
jo
adc
inc
arpl
or
inc
ljmp
and
ret
push
int
push
out
jle
mov
mov
nop
cmc
ret
mov
sbb
jne
sbb
push
sti
call
outsl
mov
mov
push
jmp
mov
mov
inc
lods
mov
pop
cs
pop
scas
lea
push
cmp
loop
push
push
loop
add
jmp
dec
orl
jnp
aaa
ja
pushf
push
rol
or
insl
into
lock
xchg
cmp
xchg
pusha
jg
xchg
jg
jns
mov
lret
inc
mov
arpl
pop
push
imul
mov
mov
or
jo
int3
cmp
and
add
mov
sti
inc
fisubrl
cld
fstps
push
or
imul
in
xor
xor
jp
push
fs
add
int
xchg
fdivrl
outsb
orb
lods
fwait
enter
sbb
cs
pop
mov
add
scas
pop
addl
pop
sbb
jecxz
pop
repz
or
mov
ret
cmpsl
jle
frstor
test
mov
fdivrs
lock
lcall
xor
popf
xor
cld
clc
xchg
push
cmpsb
jno
xor
mov
notl
jo
shlb
mov
movsb
fs
cmp
imul
int3
jno
std
scas
jmp
pop
mov
fidivrl
inc
outsb
fdivs
dec
or
add
mov
or
inc
xchg
inc
loop
jecxz
lea
sub
out
inc
xor
and
cmpsl
lock
inc
mov
inc
test
jg
push
push
shld
pushf
xchg
fisttpll
fisubs
shrb
push
cmpsl
cmpsl
dec
std
sub
xor
scas
mov
aad
hlt
pop
rcll
lret
popa
inc
das
or
push
imul
insl
es
fisttpll
bound
sbbb
cmp
inc
int3
das
mov
leave
jbe
fimuls
mov
xchg
leave
into
enter
add
xor
push
movsb
idivb
mov
and
sbb
pop
out
xchg
lret
cmp
iret
lret
popa
and
enter
mov
fdivrs
aad
xchg
jnp
hlt
gs
mov
or
popa
sahf
push
orb
mov
pop
mov
decl
les
add
dec
loopne
fldl
mov
lea
dec
shll
icebp
jp
xchg
rcrl
and
cmp
jge
test
loopne
js
dec
jo
mov
jmp
or
sub
pop
outsb
sbb
mov
jp
sub
addr16
xorl
and
mull
addr16
lret
mov
adc
mov
pop
scas
mov
sbb
sub
mov
xchg
je
pop
das
push
mov
and
add
pop
dec
negl
dec
scas
mov
insb
cli
xchg
test
jbe
push
xor
je
cmpl
pop
repz
arpl
sbb
mov
mov
add
loop
arpl
or
icebp
push
inc
scas
push
je
mov
sbb
jl
push
mov
mov
xchg
cmp
pop
xchg
dec
cmpsb
cmp
dec
in
xchg
out
test
add
fcomip
out
sub
jmp
and
add
adc
or
lret
lret
out
xor
pop
xor
sbb
sub
enter
idivl
aam
cmp
sub
enter
or
in
repnz
push
ljmp
insl
je
addr16
in
jle
nop
in
pop
lea
push
loopne
int3
push
jns
adc
out
mov
add
dec
lea
cmpsb
fiaddl
pusha
mov
mov
pop
bound
shl
mov
jbe
popa
xor
rol
sub
mov
cmp
cld
shlb
cltd
sbb
push
ja
movsb
js
shrb
push
add
popa
sarl
dec
push
xchg
addr16
pop
lret
xchg
and
stos
add
outsl
sbb
popa
enter
mov
sub
jp
sbb
xor
xchg
mov
jne
and
je
sub
dec
push
or
cmpsl
or
xlat
xlat
add
push
nop
xor
jle
push
sub
mov
cmc
std
jb
aam
int
or
hlt
call
cmp
lea
push
popf
jp
xor
test
pop
jno
movb
and
cmp
mov
icebp
mov
cmpsb
in
outsl
or
mov
mov
stc
mov
sbb
inc
repz
pop
sub
std
inc
and
jae
push
pop
out
ljmp
push
data16
mov
pop
mov
push
nop
pushf
inc
sub
inc
cli
into
or
insb
testl
sub
or
dec
or
xchg
jp
adc
icebp
adc
out
nop
and
test
pop
dec
lods
rorl
inc
outsb
in
dec
xchg
mov
adc
jnp
iret
xchg
lret
mov
fs
add
fwait
int3
inc
mov
dec
mov
movsl
loope
imul
mov
pop
outsb
lea
mov
xor
movsb
inc
and
pop
rorb
pop
pushf
test
lret
adc
mov
out
call
ds
xor
loopne
stc
stos
or
xchg
adc
add
pop
jo
punpcklwd
mov
roll
mov
aam
dec
dec
push
ja
jnp
cwtl
lds
adc
arpl
dec
push
xor
sbb
xchg
jge
fisttpll
sti
inc
sbbl
loopne
mov
pop
repnz
fwait
imul
jo
push
leave
mov
les
out
lret
push
pop
pusha
xor
addr16
es
mov
inc
and
mov
scas
cmp
push
add
stos
jns
jge
mov
or
lret
mov
subb
sbb
shl
aad
pop
shlb
test
icebp
mov
jns
jge,pn
inc
xorl
add
cld
push
cmpb
int3
push
scas
imul
jne
cli
sbb
lahf
subl
pop
movl
sahf
popf
out
cmp
jbe
out
xor
pop
call
es
shlb
neg
js,pt
out
jg
fcompl
repz
shrl
xchg
sar
inc
mov
leave
popa
into
outsl
stos
ljmp
sub
sub
adc
movsl
sbb
outsl
outsb
int
in
push
icebp
or
xor
arpl
push
call
push
pop
repz
arpl
rolb
sbb
ds
fnsave
adcl
jmp
idivl
insl
test
xor
fists
int
outsl
test
sbb
loopne
pusha
mov
cmp
lods
mov
ja
mov
mov
stc
or
je
adc
xchg
mov
add
mov
mov
mov
dec
xor
iret
xor
pushf
mov
in
sti
aam
iret
mov
or
or
mov
jg
test
into
movsb
loop
scas
aas
push
sbb
pusha
mov
dec
in
cmpl
xlat
mov
jecxz
cli
mov
push
lcall
popf
xchg
cltd
mov
ljmp
test
jle
push
stc
aad
testb
sbb
in
rcll
fsub
inc
mov
jle
push
cmp
sub
cmc
push
js
mov
push
movsl
in
ja
push
inc
xchg
inc
decb
out
pop
pop
leave
sbbb
test
rorl
mov
shlb
lret
pop
scas
cli
mov
pop
mov
decb
inc
push
cs
mov
out
je
adc
add
pusha
sbb
push
xor
fs
and
addr16
dec
dec
inc
psrld
sbbb
push
xchg
push
cmpsl
push
jmp
icebp
push
jne
dec
sub
or
push
xor
nop
add
ret
icebp
lods
fsts
repz
and
mov
imul
loop
mov
xchg
out
or
negb
out
sub
push
and
test
jl
inc
sbb
push
jl
dec
mov
jnp
mov
loope
xchg
pop
xor
jno
data16
mov
sar
mov
pop
mov
and
shr
adc
jge
and
hlt
jb
addl
or
test
inc
icebp
pop
dec
rcll
rcrl
jmp
sub
loope
es
add
negl
xchg
inc
xor
ja
das
or
daa
mov
dec
in
clc
push
gs
mov
mov
call
pop
out
out
les
xchg
jno
sbb
in
cmp
subb
jbe
bound
addr16
and
loope
mov
adc
ret
lret
enter
pop
xor
es
mov
push
rcl
push
xchg
negl
sbb
dec
adc
rep
insl
nop
jbe
scas
or
pavgw
mov
fs
aaa
xchg
popa
and
inc
inc
out
ret
inc
mov
rorl
movsb
bound
push
sti
adc
lock
pop
leave
mov
mov
inc
mov
ret
fistl
jmp
xor
into
scas
adc
jmp
jmp
mov
insb
int
ficomps
mov
aas
jno
jae
test
nop
pop
xor
dec
hlt
mov
jae
outsb
or
test
mov
add
xchg
mov
movsl
lret
mov
jae
adc
pop
jecxz
push
lock
or
jnp
mov
or
inc
sbb
hlt
xlat
insl
or
sarb
les
xor
sbb
mov
pop
dec
pop
pop
dec
outsb
adc
push
aaa
xchg
or
iret
or
cmpsl
mov
popa
sub
mov
movsl
sub
xlat
in
push
sub
add
or
test
adc
mov
cmp
pop
jne
xor
jne
add
ficoms
es
add
shll
mov
add
jmp
cmp
xchg
test
out
test
cmp
push
jo
sub
inc
fsubl
jns
mov
aad
cmc
lcall
stos
mov
jl
sub
mull
adc
cmp
mov
adc
aaa
mov
mov
dec
inc
add
jmp
pop
bound
xorb
es
push
sahf
jno
xchg
popa
scas
mov
gs
aaa
movsb
jp
in
popa
and
push
test
adc
mov
dec
add
ret
mov
pop
aas
movsb
adc
push
lea
test
ljmp
insb
push
mov
mov
vaddpd
gs
sbb
int3
bound
repnz
dec
mov
xchg
jl
and
cli
sarl
rcll
fisubrs
push
std
mov
cmp
subl
dec
jnp
add
aaa
movsl
sbb
mov
xchg
scas
adc
mov
hlt
test
push
push
cmp
ljmp
sub
dec
addr16
aad
or
clc
clc
sub
int
leave
mov
fcmovb
xor
dec
lahf
clc
inc
hlt
pop
ljmp
pop
sti
sar
hlt
jle
mov
aad
cmpsl
sbb
cmp
es
pop
xor
push
jns
mov
out
leave
xor
imul
xor
jo
push
mov
rol
mov
in
add
push
loope
or
adc
stos
and
xorl
lret
adc
out
outsl
jle
arpl
push
ret
fiaddl
aas
test
in
cli
jl
aas
xor
jne
mov
xchg
xchg
das
insl
mov
icebp
add
dec
pop
pushf
dec
scas
movsb
lods
cmpsl
test
sub
add
or
xchg
fdivrs
rorb
dec
leave
fimuls
jns
xchg
cmp
add
je
clc
pop
mov
lahf
adc
pop
push
addb
mov
cmp
cmp
mov
jb
jp
loop
jnp
or
adc
loop
mov
or
mov
adc
add
jne
test
cmp
test
sbb
lock
dec
jae
cmp
push
insl
es
xchg
pop
push
insb
jnp
out
dec
lods
jp
imul
jbe
rorb
lea
adcb
mov
push
xor
cwtl
scas
jo
jmp
adc
jne
xchg
jnp
jbe
sbb
and
ds
loope
inc
sahf
pop
imul
pop
inc
es
mov
leave
or
rorb
jb
push
out
jae
cmp
xor
push
rclb
jne
sbb
scas
fadds
push
adc
cwtl
addr16
xor
mov
sub
pop
lea
pop
movsl
ljmp
daa
js
cmp
or
outsl
out
shll
insl
popa
popf
stc
add
sbb
mov
into
mov
lods
cmp
jne
out
aam
xor
add
dec
ficoml
lret
lds
mov
bound
call
jle
mov
mov
adc
adc
push
mov
mov
mov
jmp
cmp
mov
push
add
mov
repz
test
push
ret
sub
enter
inc
inc
insl
cmp
pop
lds
in
inc
pop
sbb
fnstenv
ret
rorl
push
or
jne
inc
loopne
lock
mov
sub
pop
aaa
push
sbbb
into
xchg
stos
jns
inc
mov
jb
movsb
sarb
dec
sub
cmpsl
mov
cmpb
cwtl
xlat
mov
adc
movl
add
pop
push
sub
gs
gs
jns
inc
xchg
lds
arpl
xor
in
scas
sbb
mov
jnp
mov
jecxz
jae
xchg
les
fiaddl
pop
pusha
lds
shl
ret
movsb
add
jg
mov
jp
aaa
mov
push
mov
jnp
ds
sub
or
push
fisubrl
out
jbe
pop
xchg
cmc
jle
movsb
and
aas
xchg
sub
mov
mov
hlt
mov
lret
addl
ds
cs
adc
cmp
pop
xor
into
xchg
out
addr16
jmp
mov
xchg
pop
and
and
sbb
xchg
xlat
mov
arpl
jmp
pop
push
dec
jecxz
mov
add
loope
xchg
mov
pop
push
subl
outsb
mov
mov
xchg
insb
mov
xchg
and
notb
xor
add
mov
xchg
mov
mov
shl
dec
add
mov
sub
daa
xchg
and
mov
fcoml
jbe
sti
xchg
cmp
fsubrs
mov
cmpsl
cmp
sub
cmpsl
mov
cmp
push
frstor
push
and
lods
lods
and
adc
sub
mov
xor
or
negl
lods
mov
out
insl
dec
scas
testb
and
cld
xchg
sub
jmp
frstor
notl
xor
fninit
fisttpll
pusha
imul
mov
xor
daa
cli
sub
imul
sbb
pop
pusha
in
mov
bound
mov
in
dec
incl
out
mov
std
mov
in
sbb
movsl
add
pop
jae
dec
mov
stos
jmp
mov
inc
repnz
ret
or
pop
adc
shlb
push
sbb
loop
pop
inc
xor
data16
sub
pusha
mov
or
pop
jae
rcrb
je
ret
negb
jmp
mov
neg
in
rolb
and
add
notb
fidivs
pop
lret
cltd
adc
stc
sub
or
sbb
mov
mov
in
les
out
pop
imulb
mov
dec
jne
sub
and
inc
enter
loop
adc
sti
xor
dec
cmp
rorb
sti
push
lds
mov
pushf
mov
lods
mov
insl
jb
mov
and
cmp
ljmp
fnsaves
mov
bound
jp
addr16
sahf
cltd
inc
int3
dec
fsubrp
add
cmp
pop
fwait
sub
mov
sahf
icebp
or
negb
cmpsb
out
ror
or
loope
stc
sub
fildl
in
sub
addl
into
int
stc
lea
push
xchg
loop
add
dec
adc
test
add
sub
cmp
xchg
add
outsb
pop
pop
and
movsb
sbb
decb
mov
out
dec
dec
out
pop
insl
add
pop
lahf
notb
icebp
lret
lods
loope
add
lock
lret
jb
bswap
loope
push
sbb
pop
std
pusha
std
in
outsl
sub
lret
aam
xchg
cs
sbb
mov
sub
and
or
test
icebp
movsl
push
test
sub
fldcw
movsl
pop
sub
or
mov
in
or
lret
adc
flds
rcl
pusha
push
stc
lret
pop
ret
mov
jp
inc
rolb
sub
add
popa
cs
adc
orb
sub
push
ds
xor
repz
fwait
sbb
jae
daa
mov
mov
adc
pop
xor
negb
push
pop
fistl
shl
out
inc
jb
xor
xor
push
pop
loope
add
inc
ja
jbe
and
iret
clc
fstps
cs
pushf
int
mov
outsl
push
xchg
std
decl
xchg
es
push
lahf
cmpl
lods
lock
lret
add
repz
cs
dec
lock
lea
or
and
test
sbb
mov
jge
add
test
es
aam
sub
push
mov
mov
in
mov
js
jl
insl
mov
mov
cmp
and
icebp
jp
push
dec
dec
and
imul
pop
outsl
mov
loope
jbe
leave
adc
fldenv
xlat
icebp
xor
pushf
das
pop
into
adc
mov
xchg
dec
jp
mov
clc
xchg
cli
xor
fstl
lahf
nop
out
mov
fwait
xor
dec
xor
repnz
cmp
sbb
les
jae
pop
lock
je
sti
jecxz
sub
test
pop
xchg
pop
xchg
dec
sbb
inc
xchg
adcb
sbb
std
arpl
stc
mov
repz
mov
push
lock
movsb
in
push
inc
jne
nop
jp
je
in
pop
fwait
loop
and
loopne
je
addr16
xor
inc
clc
jp
pop
pop
cmp
movsl
lods
inc
pop
cltd
add
lret
jb
push
fucomip
lods
jne
neg
pushf
or
sbb
inc
out
imull
enter
arpl
icebp
mov
iret
fwait
jge
sub
jecxz
add
sub
pop
rclb
in
adc
imul
cwtl
sbb
pop
fisttps
pop
cmp
pop
clc
divl
jno
iret
push
ret
or
lods
roll
loopne
xor
loope
int
and
fsubrp
or
imul
enter
and
push
lods
sbb
xor
insl
inc
xchg
clc
fcoms
lock
cmp
repz
outsb
xchg
lods
push
mov
in
dec
adc
adc
xor
lret
push
inc
popf
mov
sub
and
add
fidivl
pop
cmp
push
in
mov
les
sub
xchg
cmpb
popf
mov
dec
add
mov
sbb
aam
dec
cltd
pop
lds
cmpsl
stos
and
imul
in
add
add
push
add
add
push
in
mov
shll
dec
lock
lcall
mov
mov
jne
mov
xchg
iret
js
ret
mov
fs
mov
push
xlat
movsl
loope
sub
push
xchg
jg
sbb
add
cs
stos
add
jp
jno
xchg
js
inc
add
inc
fcomi
aaa
lods
mov
push
sub
loop
shl
mov
bound
push
repz
xor
jno
mov
xchg
outsb
subb
dec
fdivrs
rol
rorl
fldcw
es
jmp
stc
push
roll
out
inc
mov
push
dec
shrb
lds
mov
enter
xchg
push
insl
std
push
jb
loop
inc
or
mov
add
mov
and
loope
jbe
pop
add
lahf
sbb
and
out
fstps
ss
jge
sahf
loope
or
jp
lcall
sbb
pop
sbb
adc
fcmovnbe
sahf
dec
in
jbe
test
xor
jb
lock
cmp
sbb
cld
ss
stos
aam
inc
rol
xor
enter
jns
push
inc
hlt
aad
push
add
les
push
sbb
mov
ss
xor
lea
xchg
imul
pushf
xor
push
mov
jp
mov
insl
jbe
sbb
or
xor
cmp
out
lds
mov
je
mov
adc
mov
rorl
je
insl
loopne
mov
push
decl
imul
dec
cmp
jecxz
imul
sti
mov
mov
aam
std
cmp
jbe
lcall
inc
les
shrl
or
mov
mov
arpl
stos
lods
xor
adc
inc
sub
mov
add
dec
sub
outsl
xor
jmp
outsb
and
add
lret
out
jl
add
icebp
repz
pop
mov
inc
and
mov
add
mov
in
lods
push
inc
ret
in
push
and
xchg
jle
mov
aas
push
test
imul
decl
subb
xchg
mov
pop
dec
adc
push
mov
test
and
sbb
add
jb
cltd
push
push
mov
xor
mov
shl
dec
iret
sub
sbb
pop
pop
mov
bswap
pushf
inc
imul
les
push
int3
inc
dec
pop
inc
flds
lds
arpl
test
cmc
jp
pop
mov
mov
add
fldenv
mov
testb
inc
jp
imul
jo
pop
std
jne
jo
scas
sti
lcall
imul
fwait
and
pop
mov
jbe
xchg
inc
xchg
xor
fst
imul
mov
xchg
mov
mov
cltd
inc
and
adc
fwait
mov
push
repnz
cmp
aas
mov
out
jge
cltd
arpl
push
ljmp
xor
imul
dec
mov
or
cmp
dec
sub
mov
mov
add
jno
xor
pop
xor
xchg
mov
into
arpl
test
add
test
icebp
rdtsc
js
jae
loope
adc
jg
xchg
and
inc
cmpsb
push
adc
mov
jae
push
popf
pop
in
xlat
and
stos
mov
int3
out
push
adc
outsl
lods
cmp
je
xchg
je
int3
pop
cmovle
clc
ljmp
xlat
loop
arpl
sub
push
std
or
dec
pushf
mov
pushf
jno
xchg
mov
hlt
add
mov
push
cs
jp
cmc
iret
cmp
stc
xor
ja
sub
jne
test
xor
sbb
inc
cmc
and
in
jmp
or
xchg
mov
movsb
hlt
popf
dec
push
push
jle
js
xchg
outsl
push
jmp
ds
pop
jmp
stos
lods
push
mov
cld
mov
xchg
loop
dec
inc
popa
lcall
pop
loopne
cmpsb
out
clc
jbe
pop
loope
mov
adc
jns
jp
sub
jl
movsb
stc
out
ss
fcoms
mov
push
popa
add
loopne
out
xor
jnp
sub
aaa
das
mov
aad
in
mov
fcmovb
loop
cwtl
and
fptan
mov
subb
stc
xchg
popf
test
xchg
hlt
out
cli
mov
pop
aam
out
cmp
add
sub
out
xchg
push
mov
out
pop
push
das
push
stc
inc
or
pop
popf
aaa
jae
or
dec
or
cmp
push
test
mov
xor
xlat
movsb
push
jns
or
stos
addr16
ret
cltd
inc
je
test
jo
cmp
add
cmp
lods
adc
mov
clc
add
and
call
mov
mov
ljmp
sahf
lret
adc
or
ja
dec
sbb
ret
mov
arpl
and
mov
add
aam
or
dec
mov
int
xchg
mov
pop
pop
mov
inc
pop
out
jecxz
xor
fistpll
jl
xchg
add
maxps
iret
adc
mov
cmc
in
lahf
push
push
clc
add
cs
pop
addb
adc
sarb
sti
out
pop
mov
adcb
xor
push
loopne
int3
insb
in
push
js
bound
cmpsb
cmp
pusha
hlt
jns
nop
lock
dec
xchg
adc
dec
pop
lock
addr16
nop
xlat
jge
dec
mov
fs
jns
clc
lods
pop
mov
aas
icebp
ds
gs
decb
dec
or
or
aam
sahf
inc
icebp
sub
xor
filds
push
cmp
add
out
into
pop
aaa
jl
jnp
lcall
bound
inc
mov
push
repnz
in
push
shlb
test
lahf
cmp
cmpsb
outsb
sub
pop
push
dec
jne
xchg
outsl
aad
xor
and
jns
jle
nop
daa
dec
lods
pop
sbb
repz
pop
cs
cmpsb
xchg
mov
xor
and
add
out
testl
add
sbb
das
stos
ss
les
sbb
hlt
test
sub
rcrb
dec
adc
dec
adc
push
aas
aam
leave
rcll
xchg
xchg
jo
mov
cmpl
loope
test
cmp
fisubrs
addb
loope
loop
mov
mov
jb
movntq
call
je
leave
fisubs
push
xchg
jge
or
daa
ljmp
repz
sarb
fwait
push
inc
mov
in
int
loope
mov
repnz
outsl
jne
push
enter
and
pop
ret
jle
mov
ja
sbb
sbb
push
mov
dec
outsb
popf
or
cmp
or
test
pop
add
or
outsb
cwtl
push
adc
lods
ret
push
or
mov
sbb
sub
imul
aam
stc
cmc
cmp
into
add
out
xor
jmp
fistpl
arpl
loopne
sbb
shrb
aaa
dec
jbe
push
sub
push
lods
movsb
xor
sbb
bnd
test
jge
sub
or
fnstenv
mov
xchg
scas
lock
fnstcw
push
jnp
pop
incb
outsl
xchg
add
pushf
adc
fistpl
mov
add
xor
fidivrs
dec
pop
jbe
int
call
add
pop
mov
cmc
or
inc
push
xchg
mov
jecxz
fistpl
stos
xchg
das
mov
push
cld
in
fsubrs
ret
jb
insl
enter
push
in
cmpsl
into
ds
jne
add
cmc
int
js
pusha
push
nop
and
inc
andl
jl
mov
mov
outsb
xor
aas
test
andb
or
scas
mov
push
push
add
repnz
test
imul
and
mov
test
out
sbb
push
data16
movsb
add
mov
out
push
inc
aas
loope
pop
pop
call
adc
loopne
mov
pop
ret
jg
hlt
andl
sbb
stc
lods
pusha
mov
xchg
lods
shrl
aad
mov
les
dec
add
mov
ss
xchg
adc
lock
aas
mov
jnp
push
mov
and
sbb
xchg
arpl
scas
out
xlat
inc
pop
xchg
add
push
or
push
xchg
push
stos
xor
jmp
stos
pop
lret
cmpl
inc
fidivrl
add
pop
mov
sbbl
jp
cmp
jae
sub
mov
mov
jp
sbb
lock
out
pop
inc
fwait
aad
push
and
jge
push
dec
mov
sub
iret
divb
dec
lret
mov
imul
out
mov
jle
or
lea
bound
pop
jg
inc
xchg
sbb
into
push
mov
mov
lods
pop
and
add
xor
cmp
outsb
mov
lahf
adc
mov
mov
lods
nop
pop
iret
xor
push
push
das
pop
sarb
dec
stc
cld
cmp
dec
pop
dec
out
jne
out
out
insl
or
rclb
mov
pushf
mov
xor
cltd
mov
inc
stos
xor
fs
mov
ret
mov
mov
push
mov
imul
xor
fmull
mov
aam
xor
ss
fisttpll
enter
jno
or
sub
pusha
jno
and
mov
jmp
cmp
or
iret
push
inc
sbb
sub
jl
sub
imul
add
loopne
aad
cmp
rcpps
in
lret
sub
imul
mov
mov
je
add
les
test
stc
imulb
in
ret
cmp
stos
int
and
jge
es
sub
sbb
cmp
mov
lock
jns
and
dec
sub
push
sarb
fldl
sub
adc
push
mov
inc
movsb
mov
sbbb
jp
out
pop
lahf
mov
and
fstpt
mov
or
xchg
dec
push
rcl
stos
cmc
mov
mov
shlb
sub
mov
xchg
roll
mov
lock
xchg
sbb
pop
inc
stc
xor
mov
pop
or
jmp
imul
inc
addr16
push
sbbb
pop
inc
jns
adc
mov
pop
popa
jo
cwtl
gs
scas
mov
testl
pop
mov
gs
pop
lcall
popl
sbb
adc
test
xchg
push
mov
mov
cltd
rorl
test
and
cmpsl
movsl
sbb
add
repnz
out
inc
add
jbe
out
sbb
cwtl
loopne
xchg
aas
xor
jnp
xor
data16
sahf
and
lret
das
popf
or
jae
cmpsb
mov
ja
xor
mov
push
push
out
or
arpl
insl
aas
pop
push
repnz
subb
mov
xchg
mov
dec
fimull
push
push
pop
lods
movl
push
inc
dec
lfs
mov
test
sbb
mov
mov
sub
jae
jb
lahf
push
pop
addr16
push
out
nop
sub
fiaddl
andl
lcall
lea
jo
sub
and
sub
cmpsb
loop
sbb
push
scas
sbb
outsl
daa
std
les
shl
jne
adc
add
pusha
ljmp
mov
inc
fs
sti
loope
int
push
lea
mull
add
xlat
pop
xorb
mov
push
push
fimuls
inc
cmpsl
jle
push
add
cli
xchg
or
and
icebp
out
sbbb
in
movsb
pushf
add
cmp
push
notl
cs
mov
fnsave
addl
jns
jge
mov
mov
movsb
mov
aaa
dec
addr16
inc
clc
push
push
sbb
sbb
repnz
push
clc
xchg
stc
dec
mov
jns
aam
out
out
imul
xchg
call
pop
cmp
jmp
inc
jnp
aaa
adc
fsub
jo
cmc
inc
rcll
fidivrs
jle
aaa
sarl
push
aaa
sub
sub
xchg
mov
in
push
sar
mov
jle
test
mov
mov
aaa
aam
fldt
lds
mov
dec
xchg
sahf
pop
das
outsb
mov
sbb
mov
into
inc
adcb
loopne
or
scas
roll
jl
cmp
lods
push
or
inc
lods
pop
lcall
or
mov
mov
add
adc
xchg
jne
daa
adc
rcll
mov
shlb
enter
ret
fcmovne
jnp
aaa
arpl
dec
inc
mov
into
fwait
or
shrl
verw
in
lret
sub
adc
cli
je
xor
lret
insb
fs
xchg
xor
pop
pop
lods
icebp
mov
dec
imul
mov
stos
dec
addr16
jmp
js
cmp
fwait
out
push
in
rclb
in
rcr
andl
loop
push
aaa
push
push
icebp
add
cmpl
dec
repnz
dec
push
stc
adc
int3
fidivrs
push
das
lret
sub
add
outsb
jb
add
sbb
pop
pop
inc
out
lahf
jnp
and
dec
xor
daa
add
ret
pushl
sbb
sti
stos
adcb
dec
lock
fadds
mov
xchg
divb
adc
pop
rorl
cld
adc
jp
out
xchg
or
cltd
out
mov
data16
pop
and
fisttpl
push
scas
xor
aam
data16
jmp
push
loop
outsl
inc
jecxz
mov
jle
mov
pop
jmp
cmp
pop
mov
ss
sub
popa
stc
cmp
daa
or
aad
fs
fsubrs
cmp
cmp
pop
cmp
dec
sub
popf
rorl
pusha
shrl
out
test
mov
stos
sbbb
arpl
test
add
addr16
shlb
mov
mov
loopne
imul
cmp
push
xlat
add
and
pop
repz
xchg
cmp
dec
pop
adc
lock
ret
rclb
jne
fdivr
scas
movsb
sub
jmp
mov
int3
push
mov
fdiv
xor
cmp
test
and
sub
rol
in
jo
daa
mov
xchg
ljmp
sub
mov
lret
orl
or
mov
push
fistps
in
lock
test
mov
repz
push
mov
pop
filds
xor
add
xchg
outsb
xchg
push
cmp
daa
adc
int3
push
ret
fiadds
mov
in
cmp
sbb
fs
cld
popa
pop
lods
lock
ljmp
cmovae
push
mov
pop
jg
jne
sahf
xor
sub
push
sub
test
sub
sti
mov
das
ljmp
push
inc
std
mov
add
lret
addr16
fsts
inc
dec
orb
imul
push
jnp
iret
xorl
gs
fdivrl
mov
mov
add
insb
cmc
not
movsb
subb
xor
jle
andnps
cmp
mov
aaa
das
stc
dec
rorb
xlat
push
dec
sub
je
sbbb
gs
lret
jp
adc
sbb
flds
in
addl
addr16
dec
ljmp
aad
adc
stos
ficomps
and
ja
xor
mov
push
mov
bound
int
and
dec
out
mov
mov
stos
jnp
push
imul
dec
mov
xchg
push
jnp
aas
inc
and
cmpsb
and
shrb
daa
cmp
mov
lods
arpl
xor
clc
and
jno
xlat
xchg
loopne
pop
dec
sbb
jo
cmp
paddusw
decb
cwtl
mov
and
ljmp
sub
test
insb
adc
jg
fisubl
in
cmpsb
daa
inc
lods
jbe
add
in
mov
je
mull
add
mov
xor
loopne
out
sbb
in
out
lea
push
add
sub
sbb
mov
push
xor
xchg
cmp
lods
lret
int3
push
fwait
mov
cmc
lds
loop
fs
inc
jnp
addl
mov
daa
imul
aam
cmp
cmc
pop
push
out
lods
in
addr16
push
cmpsl
mov
mov
mov
xchg
inc
cmp
add
testl
dec
insb
adcl
jbe
cwtl
int
dec
orl
cmp
or
loope
adc
pop
push
adc
aad
addb
dec
mov
insb
cmpsb
pop
leave
cmp
add
pop
jae
push
enter
sub
pop
cmpsl
cltd
pop
mov
xchg
data16
adc
cmc
int3
adc
lock
xor
sbb
insl
and
sbb
faddl
push
fsubrp
sbb
mov
mov
cmp
js
jle
lcall
enter
gs
pop
sbb
insb
jmp
sarb
gs
add
and
jae
add
xor
fimull
jbe
dec
mov
pop
push
sbbl
add
xchg
jp
sbb
sub
or
cltd
popa
push
or
add
add
sbb
mov
pop
mov
lcall
and
ja
enter
popf
pusha
jg
insb
sub
movsb
mov
adc
add
test
mov
xor
adc
gs
xchg
add
mov
lods
sub
fmuls
lret
dec
mov
leave
and
rorl
jae
mov
pop
adc
mov
out
add
push
dec
fwait
insb
lods
js
cmp
jae
push
lret
inc
jle
cld
addr16
dec
test
jl
xorb
add
and
movsb
aam
sbb
mov
sub
out
jno
push
loopne
sbb
cltd
jg
test
sub
and
out
orb
sub
sbb
xor
pop
sbb
mov
cmp
jecxz
outsl
jb
dec
addr16
push
aas
push
adc
add
adc
cmp
inc
lock
jl
sbb
loop
inc
scas
in
fistl
mov
jb
cmp
adc
jno
das
js
mov
inc
iret
je
dec
mov
ljmp
jno
or
imul
cs
ret
inc
lret
sarb
mull
pop
xchg
adc
sahf
movsb
fildll
xchg
imul
pop
mov
xor
repz
lds
and
and
shrb
xor
hlt
jne
mov
jno
sbb
cmp
mov
into
cmpsl
and
jge
sbb
fsincos
xor
iret
pushf
push
and
jle
cltd
or
jle
hlt
dec
mov
add
add
aam
push
adc
mov
imul
jecxz
sub
or
cli
dec
xchg
test
push
mov
mov
push
xlat
scas
filds
sbb
mov
sbb
fs
ror
mov
pop
push
es
out
pop
fldl
jno
pop
leave
jp
xchg
hlt
and
out
shlb
and
pop
xor
loope
push
roll
mov
mov
fsubrl
mov
mov
arpl
inc
push
jge
xor
lods
icebp
sub
dec
jb
lea
sbb
sbb
sbb
in
fistpll
mov
pop
lods
cmp
mov
jo
or
dec
sbb
popf
jg
lods
repnz
pop
test
jae
in
fisttps
or
or
inc
jne
pop
mov
cmpsb
jns
movsl
gs
jmp
pop
push
pop
adc
pcmpgtb
sbb
dec
push
pop
sbb
mov
shll
dec
pop
push
mov
mov
mov
repz
or
mov
or
cld
popa
test
cltd
pop
das
mov
sub
lret
pop
xor
pop
andb
xchg
mov
fimuls
adc
aam
scas
add
xchg
jl
sahf
std
sub
ja
call
mov
push
adc
add
pop
or
sbb
cltd
mov
sub
sbb
xchg
xor
imul
mov
or
dec
sbb
inc
xlat
ljmp
push
in
sbb
fsubrp
pop
push
pop
insl
xchg
test
push
shrb
jl
mov
rcl
and
xor
push
mov
pop
shrl
xor
cmpsb
imul
adc
fsubs
sub
movsb
popf
aad
pop
inc
cltd
mov
jo
adc
das
lock
xchg
aam
dec
inc
fidivrl
fwait
pop
inc
stc
data16
adc
fldl
jno
cmp
insb
stos
orb
push
loopne
sarb
sbb
daa
mov
inc
dec
test
mov
mov
in
insb
insb
enter
push
add
mov
push
xlat
sahf
adc
adc
inc
stos
out
insb
lahf
mov
push
stc
loopne
add
push
sti
mov
shlb
pop
fdivrs
adc
stc
andb
mov
cs
inc
push
out
movsb
push
mov
repz
std
mov
adc
jmp
es
jge
icebp
out
mov
jb
adc
jmp
sbb
add
fwait
sub
dec
jne
inc
mov
jo
bound
adc
jg
sbb
test
xor
stos
popf
sbb
or
push
mov
mov
addl
pop
pushf
mov
pop
fs
daa
adc
clc
hlt
mov
sub
fwait
call
cmp
dec
sbbb
or
test
bound
lods
pop
adc
mov
jnp
xchg
lret
or
jnp
cmp
jp
inc
scas
or
outsl
and
sbb
clc
arpl
fst
lret
add
mov
lea
insl
gs
cmc
and
aaa
rcr
xchg
data16
mov
scas
bound
aas
fldt
push
dec
sbbl
mov
cmp
shl
icebp
rclb
or
dec
mov
in
mov
dec
pop
cli
ret
or
mov
inc
cld
test
and
dec
push
call
cld
fwait
inc
sbb
aaa
out
xchg
jno
push
dec
fs
sbb
and
in
mov
mov
xor
adc
xchg
lret
and
xchg
jle
divl
jbe
ficompl
out
lods
popa
sub
xor
test
xor
pmovmskb
jle
bound
adc
push
cs
jo
outsb
iret
cwtl
push
mov
mov
inc
dec
jne
fs
insl
dec
push
or
sarb
xor
jg
mov
je
icebp
mov
out
lea
mov
mov
mov
xchg
adc
scas
push
adc
push
shl
daa
push
stos
jb
sub
mov
lahf
aam
jnp
push
push
arpl
mov
shr
push
out
out
cmp
in
imul
lahf
stos
ja
push
in
sbb
hlt
lcall
movsl
negb
into
push
xor
rorl
ret
orl
jno
pop
mov
add
testb
jle
cs
aad
in
cld
push
sub
sbb
cmpsl
loop
add
cmpsl
cmpsl
movsb
popf
fidivl
lahf
adc
jmp
cwtl
ja
nop
xor
or
push
cmpl
jmp
cmp
lahf
mov
lcall
push
rorl
jl
popa
popa
xor
int3
into
or
js
sub
es
add
popl
push
cld
lahf
cmp
jl
inc
xlat
sbb
stos
xor
push
shl
dec
mov
fwait
mov
int3
mov
sbb
inc
ds
adc
xchg
sub
insl
xchg
cld
add
sub
testl
xchg
or
fldenv
xor
push
popf
ss
out
fisubrs
xor
add
dec
outsl
insl
idivl
sbb
sbb
movl
and
push
shrb
add
sub
test
xchg
fcoml
fwait
pop
mov
icebp
fisubrs
sti
sti
std
mov
pop
pop
inc
shlb
lret
push
xor
pop
push
pop
mov
sub
mov
mov
adc
and
jo
popa
sbb
xchg
aad
xor
unpcklps
popa
mov
adc
test
pop
inc
jle
insb
into
lea
inc
jo
jp
ret
lea
sete
cli
add
stos
test
roll
pop
inc
mov
inc
and
push
imul
repz
scas
sbb
xor
cmpsb
test
inc
scas
outsb
sbb
test
test
int
arpl
mov
jmp
mov
jmp
push
cmp
and
scas
mulb
mov
cwtl
dec
mov
sub
not
and
mov
out
xchg
out
gs
inc
cli
pop
je
xchg
ja
clc
lods
inc
pop
add
push
lret
ja
dec
outsb
std
and
xor
out
fbstp
dec
cltd
cmp
ss
mov
popa
nop
cmp
fidivl
bound
movsl
mov
andb
xlat
mov
lea
movsb
fisttps
movsb
xchg
movsb
cs
cs
xchg
sub
mov
push
in
div
test
mov
orb
xchg
aaa
out
lods
icebp
jle
inc
push
or
adc
dec
dec
popf
imul
cwtl
pop
push
imul
xchg
fistpl
hlt
push
cmc
cld
pusha
les
cmp
repnz
test
shl
dec
sub
mov
fstps
jmp
ja
hlt
rcrb
lock
stc
add
mov
pop
add
rcr
lret
testl
fcomi
iret
cmpsb
push
pop
cmp
iret
movsl
xor
ds
sub
pop
xor
cmp
xor
xlat
push
stc
int
add
iret
out
sti
adc
push
outsb
adc
popa
sbb
adc
mov
mov
ja
fldt
add
jg
aas
mov
jne
xchg
mov
mov
and
add
test
hlt
mov
daa
inc
je
insl
cmpsl
lds
stc
lods
cld
jecxz
outsb
mov
cltd
mov
xchg
pop
pop
sub
pop
sbb
fistpl
fistpl
fwait
subl
xor
es
lods
add
hlt
cld
sub
add
jns
mov
lea
data16
call
push
call
xor
or
xchg
inc
jle
xor
test
mov
adc
jg
cmp
push
sub
cwtl
cmpsl
sbb
add
fildll
sahf
js
fdivrp
jb
mov
xor
xchg
add
mov
cmpsb
xchg
loop
scas
push
mov
fsts
inc
jmp
stc
cmc
shrb
iret
adc
sub
sahf
js
mov
fwait
jno
daa
in
sub
test
daa
lcall
xlat
shlb
shll
jb
mov
jecxz
inc
int3
pusha
and
testl
notl
push
jge
xchg
pushf
sbb
movsb
mov
xor
or
xchg
arpl
fdivl
jg
repnz
stos
icebp
mov
mov
push
mov
inc
jge
sarb
icebp
jbe
int3
dec
lcall
and
fidivrs
push
cmp
decb
dec
pop
js
fxch
repnz
mov
add
shrb
aad
inc
lret
fadd
nop
in
stos
mov
mov
pop
and
jae
sbb
dec
jl
and
pop
or
mov
mov
mov
xchg
pop
pop
imul
ljmp
nop
data16
std
pushf
sbb
rcl
mov
add
dec
out
jbe
mov
out
je
mov
jg
xor
push
mov
cmp
mov
push
inc
outsl
bound
xor
insl
cmp
subb
mov
jle
cmpsl
cld
mov
mov
fld
into
push
pop
arpl
sub
ret
jo
and
push
lds
loope
and
int
aam
ja
pop
outsb
mov
push
orl
je
add
outsb
popl
scas
repz
sti
fidivrl
test
mov
push
dec
xchg
ret
sbb
mov
insl
in
lds
fcomi
adc
sub
push
inc
cld
mov
sub
loope
xor
xchg
sbb
and
leave
sbb
out
xor
test
iret
in
int
out
push
cmp
push
aas
cmc
dec
sub
insl
addb
add
adc
dec
stos
daa
mov
repz
inc
cmp
dec
mov
push
std
dec
fcoms
stc
inc
dec
popa
cmp
mov
sub
cmp
jnp
loopne
imul
arpl
outsl
push
testl
mov
mov
add
fs
popl
xchg
dec
outsb
dec
test
imul
mov
mulb
popl
xchg
or
out
push
rolb
add
add
adc
scas
adc
adc
jecxz
xchg
fbld
out
mov
sbb
cmp
inc
not
out
leave
and
mov
push
fwait
inc
ds
lret
xchg
lods
xchg
fstpl
cltd
bound
xor
das
dec
sbb
inc
sbb
and
pop
test
sub
pop
adc
dec
mov
inc
je
scas
out
jo
stc
push
shrl
mov
jne
divb
mov
sbb
pop
sub
push
aaa
push
out
mov
ficoml
xchg
nop
mov
nop
xchg
pop
jle
in
sub
push
mov
push
orl
sbb
pop
push
paddw
out
es
jnp
xor
mov
dec
fcmovnb
test
push
outsb
cltd
fsubl
jg
out
fdiv
xchg
and
pop
cmpsb
cmp
loope
loopne
pop
gs
int3
in
sbb
xor
enter
xchg
fsub
leave
mov
int
mov
sbb
or
or
int3
out
add
cwtl
dec
sti
hlt
sbb
sub
outsl
xchg
cmp
leave
imul
outsb
in
pop
and
aaa
cmc
sub
sbb
sub
jb
push
pop
jno
mov
lock
lahf
lods
in
and
out
and
adc
pop
inc
in
bound
dec
push
mov
ljmp
push
out
in
movsb
popa
push
cmp
out
xchg
jmp
aam
mov
push
dec
sahf
sbb
aaa
sub
cmp
xchg
movb
adc
inc
fs
out
cmp
inc
dec
jl
jns
mov
subb
xor
lock
cwtl
arpl
test
mov
adc
ds
xor
out
mov
cmp
fs
mov
push
repz
ljmp
ljmp
xchg
pop
or
add
movl
pop
cmp
adc
sub
mov
arpl
ss
dec
mov
insl
push
cmp
in
lea
loopne
pusha
push
outsb
mov
inc
mov
lea
cmpsl
pop
das
add
data16
sahf
push
cli
clc
adc
test
outsb
dec
jns
fldt
adc
mov
test
inc
add
inc
add
and
push
lret
icebp
jnp
scas
divl
cmp
std
sbb
aam
mov
sub
adc
fidivrl
repnz
and
pop
mov
adc
or
dec
or
call
push
cmp
push
into
popf
dec
aas
mov
xchg
inc
push
lods
popf
das
ljmp
xchg
mov
js
scas
out
xchg
and
mov
inc
pop
or
push
clc
lock
fmulp
jmp
sbb
jmp
js
bound
test
mov
sub
and
pop
call
jae
sbb
dec
pop
mov
mov
fs
sbb
adc
add
push
repnz
push
fs
add
lods
jmp
roll
cmp
pop
sarb
repz
push
lods
mov
mull
pop
sub
or
ss
scas
xor
mov
in
xchg
xchg
sbb
and
cmp
pop
inc
inc
inc
adc
cmpb
popa
cltd
pop
or
inc
call
addl
push
dec
aas
or
loope
dec
mov
inc
ficoml
popf
and
jl
cltd
stos
int
popa
inc
mov
movsl
scas
fistpll
add
jns
push
test
aam
sub
adc
xor
xorb
sub
in
out
jecxz
mov
push
lods
pusha
scas
pop
mov
xor
lahf
addr16
push
push
inc
imul
testl
out
lods
in
xorb
das
int
arpl
add
mov
jb,pn
repz
inc
ja
lods
mov
sub
pushf
scas
int3
stos
lock
push
mov
or
jbe
test
call
push
inc
test
pop
or
sub
test
ret
push
clc
lahf
xlat
jge
push
push
xor
int3
popa
and
imul
rcll
inc
pop
mov
xor
jl
pop
cmpsb
and
jae
fisttpll
and
sbb
mov
fcoms
xor
xor
mov
jbe
lods
movsl
insl
add
fstl
jmp
test
mov
and
outsl
shrl
lock
test
or
mov
inc
lods
and
cmpsl
arpl
pop
xchg
pusha
or
fcmovnb
hlt
adc
sbb
or
mov
push
and
addr16
in
out
test
dec
pop
jno
xor
shll
jmp
ds
adc
cmp
daa
adc
push
lcall
ds
scas
loop
clc
push
aam
add
xor
sub
cmp
cs
xchg
lret
add
xchg
mov
pusha
or
ret
jns
add
jo
jle
mov
xchg
or
add
test
js
popa
jns
fwait
insl
enter
adc
push
cmp
je
insl
adc
rcr
jnp
js
mov
test
fsubrl
mov
mov
insl
das
jno
cmp
sub
dec
loopne
mov
mov
push
xchg
jns
sub
dec
repz
out
movsb
out
xchg
fcmovu
ja
and
es
dec
sbb
cmp
and
sub
loope
cwtl
adc
push
shlb
xchg
sbb
loop
je
or
push
stos
out
fsubrl
sahf
dec
stos
aas
cwtl
inc
mov
enter
scas
out
adc
aas
aas
fnsave
and
xchg
jae
cli
mov
or
ret
ljmp
fwait
mov
leave
sub
nop
sub
movsb
sbb
mov
xchg
push
shlw
adc
jae
insb
fsubl
xchg
mov
loopne
jle
add
mov
jae
icebp
in
push
xor
aaa
jb
loope
sub
or
in
xor
imul
ljmp
out
sbb
sbbb
test
imul
hlt
or
outsb
add
jae
push
sbb
add
mov
mov
test
mov
and
mov
dec
mov
xchg
cmp
aad
cmc
jge
popf
fsubr
es
sub
inc
push
fdivrs
ljmp
aad
or
loope
pop
dec
xor
and
mov
aad
fdivrs
xlat
cmc
and
jg
add
mov
push
jge
mov
push
cmp
shlb
imul
es
fnstcw
call
jg
test
pop
sbb
mov
push
cmp
push
sbb
adc
je
adcb
pusha
loope
cmp
mov
inc
adc
xor
mov
sbb
fcompl
mov
bound
pop
pop
dec
repnz
lcall
call
jle,pt
cmpsb
xor
je
test
cmp
inc
pop
xor
bound
adc
push
pop
faddl
cmpsb
imul
add
in
pop
stos
push
mov
ret
sti
cli
addr16
cmp
call
mov
jle
cmp
imul
mov
dec
pushf
stos
cmpl
mov
ljmp
and
push
stos
mov
scas
mov
out
push
jg
jbe
jmp
test
push
mov
mov
and
or
dec
aas
xchg
xor
es
mov
sbb
xchg
icebp
jno
mov
imul
or
ficompl
cmp
xor
je
jecxz
loopne
push
adc
out
lea
stos
in
pop
mov
lret
push
lahf
cmp
fisttpl
mov
aam
inc
lock
dec
or
sub
sub
mov
or
out
stos
aad
out
xchg
push
dec
and
jns
mov
mov
arpl
into
repnz
repnz
ss
ja
and
add
cmp
cmpsb
lea
sbb
lret
inc
xchg
mov
imul
stos
in
test
jecxz
mov
fimuls
popa
leave
xchg
xchg
dec
sub
fsubrl
cli
ljmp
cmc
es
dec
stos
or
movl
inc
mov
sarl
xchg
scas
xchg
push
inc
fisubrs
fsubr
imul
call
fsubl
mov
mov
and
push
mov
sub
pop
lahf
jo
adc
xor
adc
mov
das
pop
jp
bnd
nop
mov
fnstcw
arpl
pop
xorb
shrb
jnp
nop
imul
sbbl
add
dec
xchg
pop
fisttps
pop
popf
lahf
adc
iret
movsl
jg
decl
or
push
aam
leave
jo
out
enter
int3
mov
addr16
add
xlat
add
inc
mov
fisttps
push
in
jmp
cmc
add
fdivrl
or
add
cltd
lcall
sub
leave
push
je
into
dec
adc
cmp
sbb
leave
cmp
add
inc
adc
add
mov
pop
arpl
movsb
add
adc
ss
mov
lea
xor
adc
movsl
add
lret
xchg
loop
xor
lods
outsl
mov
addr16
sar
push
rorl
adc
pop
add
gs
pusha
faddl
gs
mov
sub
pop
mov
sbb
xor
iret
mov
dec
jmp
repz
ret
es
jns
sbb
je
pop
mov
sub
adc
lods
pop
sbb
outsb
dec
jg
dec
inc
test
orl
jecxz
push
xchg
int3
nop
jno
xor
shlb
mov
jnp
cmp
mov
xchg
and
call
in
inc
call
movl
mov
xchg
xor
pusha
mov
loopne
or
ror
rcrb
sbb
int
addb
sub
mov
pop
mov
dec
aaa
and
jo
xor
xor
or
cmp
mov
xchg
aam
dec
out
mov
iret
rol
inc
shrl
hlt
xchg
push
sbb
xchg
arpl
lahf
jo
stc
in
cwtl
jl
lret
cmpsb
enter
dec
addr16
in
ja
arpl
es
lock
push
and
mov
jnp
sti
lcall
lahf
lods
xchg
xchg
xchg
push
lea
jp
sub
jge
push
mov
outsl
lret
push
or
inc
add
jg
jp
call
pop
jge
out
and
xchg
outsl
dec
pop
mov
xchg
or
out
outsb
bound
fisubrl
outsb
jb
dec
mov
lret
xor
jle
cld
loope
out
mov
push
inc
ljmp
lods
dec
outsl
lahf
add
xorl
adc
mov
test
jle
push
mov
or
push
lods
pop
out
or
sbb
scas
clc
fsubr
xchg
and
enter
daa
inc
or
push
cmp
xchg
or
xchg
enter
push
inc
movsl
inc
andb
mov
or
in
lods
push
popl
push
or
in
sub
cwtl
sbb
in
lea
shlb
pushf
testb
cld
aam
xor
push
pop
adc
shrl
mov
icebp
daa
mov
push
test
cmc
sti
pop
inc
xchg
je
push
mov
test
and
xchg
test
add
cltd
sti
roll
xchg
insb
in
scas
pusha
arpl
scas
jbe
pop
jae
sub
or
fimull
jle
cmp
add
cmp
or
pop
push
mov
stos
mov
adc
or
mov
iret
test
lret
sbb
leave
rcr
addr16
pop
and
cmpsb
push
in
mov
cmp
negb
and
enter
sti
std
fdivl
and
movsb
jnp
pop
repz
and
pop
mov
inc
cltd
into
pop
and
aaa
jo
mov
jo
fsub
xchg
sti
mov
xchg
pushf
dec
test
testl
or
test
cmp
push
dec
lret
xor
pop
push
cld
lahf
fs
pop
pop
sbb
into
xchg
or
push
cmp
enter
push
jle
push
and
xchg
inc
push
and
fwait
add
shrb
adc
mov
or
cmp
push
outsl
aad
adc
sbb
xchg
sub
stc
cmp
push
pop
lds
dec
cmp
mov
in
inc
scas
inc
pushf
push
mov
add
sbb
ljmp
mov
dec
push
lods
testb
aam
and
jge
sub
add
push
addl
xchg
int
repnz
add
jbe
shrb
xlat
mov
outsl
flds
les
push
pop
push
mov
imul
xchg
das
shrl
jb
pushf
stc
out
jg
mov
push
pop
fildl
ss
xor
jl
dec
sahf
push
add
cmp
inc
clc
popa
in
jno
loop
and
pop
int
and
mov
test
data16
leave
pop
xor
mov
insb
jecxz
cmp
adc
add
pop
iret
mov
clc
inc
enter
xlat
jmp
and
repnz
xor
movaps
pop
leave
fistl
push
mov
rcrl
out
mul
dec
lods
xchg
sub
sbb
cmp
mov
push
cmc
jb
fldl
js
xchg
mov
aam
subb
repnz
aad
sub
inc
mov
cwtl
xor
lods
and
pop
rcrb
jg
dec
sub
dec
lods
stos
mov
orb
mov
pop
push
lcall
pop
addb
add
fcmovnu
push
xchg
push
sbb
into
stos
xor
mov
sbb
rcll
enter
iret
xchg
or
mov
in
jne
cmpsb
cmp
rorl
inc
xchg
push
adc
pop
out
pop
clc
divb
jne
xchg
icebp
jecxz
lcall
jecxz
pop
sbbb
lods
inc
push
mov
imul
mov
ljmp
mov
mov
and
push
ret
pop
stos
je
aas
xor
jl
cs
or
mov
fsubl
xchg
xchg
jnp
xchg
lret
fucomi
scas
xor
mov
sub
adc
and
shrb
jb
pop
lret
insb
test
aaa
cwtl
iret
mov
mov
mov
sti
pop
movsl
push
dec
dec
mov
inc
inc
inc
daa
jg
outsl
inc
jae
cmp
mov
adc
sbb
jne
test
fwait
dec
dec
mov
inc
add
clc
jne
outsl
cli
push
ljmp
xchg
insb
mov
push
mov
jmp
cmp
jnp
not
adc
cmpsb
push
incb
out
mov
outsb
insb
add
psrad
psrlq
cmpsl
imulb
std
aas
lahf
mov
cmp
cltd
inc
push
xchg
push
mov
mov
mov
lods
xor
sbb
push
push
aad
cmc
shl
ret
sbb
push
cmp
jnp
out
add
nop
xchg
add
ret
fcos
add
pop
push
scas
mov
push
outsb
shlb
subl
fdivrp
mov
adc
sbbb
scas
and
repnz
cmpsl
ds
outsb
inc
lds
dec
mov
xor
js
jns
pop
mov
pop
mov
and
and
sub
ret
adc
scas
imul
add
dec
cmpps
arpl
in
cmc
sbb
pusha
in
in
outsl
mov
aad
hlt
cmpsb
push
repnz
leave
push
loop
sub
aas
fs
ljmp
dec
mov
stos
jecxz
mov
dec
add
movsb
test
lods
int
lock
pop
std
cld
push
int3
xor
jno
cmp
test
add
xor
hlt
jl
and
movsb
out
mov
arpl
pop
loope
fs
cmp
pop
push
mov
cmp
call
mov
fcmovb
push
mov
ret
jno
mov
xor
ss
movsb
xor
xchg
icebp
pop
push
aas
jg
push
repnz
aam
mov
adc
shlb
les
gs
mov
enter
pause
sbb
ss
fisttpl
roll
mov
mov
jb
add
fwait
addr16
cmp
cltd
pushf
pushf
xor
xor
xchg
pop
sbb
out
test
mov
mov
ret
imul
jmp
sub
sahf
mov
mov
test
fnstsw
adc
sub
xor
test
sbb
lret
push
out
neg
lret
inc
lcall
outsb
mov
jle
sbb
pop
jmp
adc
lret
xor
stos
lcall
out
iret
bound
lods
xor
lock
xor
cmp
sbb
mov
xlat
mov
sub
mov
hlt
dec
xor
push
cmp
push
and
xor
cmp
jne
jns
fcomi
add
cmp
popl
xor
pop
sbb
pushf
adc
or
aaa
ret
fldcw
jb
rorb
dec
xchg
filds
push
mov
into
test
pop
imul
loopne
xchg
sbb
or
dec
sub
sbb
inc
mov
out
cmc
mov
xchg
and
into
xchg
cmp
cmp
ret
je
mov
scas
xchg
stos
icebp
mov
out
roll
mov
insb
in
out
in
xor
adc
loopne
sub
shl
ss
mov
outsl
mov
aaa
add
cmpb
pop
jbe
push
push
xlat
decl
sahf
loopne
dec
mov
ja
adc
or
dec
jle
out
mov
pop
sub
mov
addr16
idivl
repnz
stos
dec
or
jmp
xchg
fs
test
mov
out
aaa
mov
aas
dec
out
push
cltd
int
cmp
out
jle
dec
jmp
mov
and
ds
aam
jb
xchg
mov
jge
enter
push
sub
pop
push
cmpsl
dec
pop
add
pop
cmpsl
iret
addr16
mov
iret
and
pop
xchg
lds
loope
lea
inc
push
sub
test
arpl
icebp
imul
fiaddl
test
lods
aaa
popw
lea
cmovle
test
mov
rclb
push
cmpsb
shr
mov
and
test
pop
push
jns
cmp
mov
inc
add
loope
jo
sub
test
sar
pop
jno
xchg
xor
mov
or
mov
pop
scas
xor
cmp
jmp
test
sbb
adc
js
in
cmpsb
pusha
and
or
sbb
gs
testb
jb
mov
fidivl
mov
adcl
popf
inc
leave
xor
adc
cli
imul
xor
add
push
xchg
sbb
dec
cmpsl
fiadds
loope
cmp
xchg
loope
push
jbe
mov
pop
pop
push
test
jne
mov
jns
jb
mov
cmp
imul
mov
jl
adc
or
cmp
data16
sub
sbb
mov
imul
dec
xor
xchg
sbb
mov
mov
push
cmp
push
and
jae
push
pusha
pop
sahf
inc
adc
push
lea
sub
sbb
dec
or
scas
jnp
sbb
imul
bound
mov
push
mov
mov
adc
mov
ja
nop
std
out
pop
in
rcrl
pop
xchg
hlt
out
repz
xorb
cmp
subl
sbb
jle
inc
cmp
pop
mov
xor
pop
rcr
adc
add
or
mov
adc
dec
mov
js
push
xchg
mov
xorb
stos
pop
cmp
pushf
adc
push
xor
aad
mov
fcmovu
xchg
dec
jb
xchg
pop
rol
cmc
lods
push
rorl
jb
imul
sub
dec
test
je
inc
cmp
fcoml
sbb
or
dec
lock
xor
jo
add
gs
push
or
cmp
std
or
dec
out
sub
aaa
xlat
pop
inc
push
sub
and
and
repnz
loopne
test
imul
hlt
fdivs
sub
adc
fcoms
cmp
adc
xor
lea
jne
cmp
xor
test
sar
adc
jle
loop
pop
sti
jge,pn
scas
ret
arpl
inc
pop
shrl
das
leave
xchg
test
outsl
xchg
test
and
mov
cwtl
call
test
and
pop
leave
xor
shlb
dec
dec
cmpsb
add
push
scas
inc
stc
movsb
ja
add
xchg
movsl
or
sahf
ss
inc
mov
jg
and
outsb
push
test
test
cmp
dec
mov
mov
xor
out
cld
mov
mov
or
scas
cltd
in
pop
add
inc
test
mov
mov
aam
aad
repnz
movsl
pop
pop
xchg
dec
aas
jmp
dec
push
lret
adc
clc
sub
pushf
and
scas
subb
sti
jp
data16
jg
push
and
int
clc
jb
push
push
neg
faddl
jnp
pushf
mov
mov
shll
ds
or
iret
xchg
inc
sub
jno
scas
lea
mov
push
dec
pop
mov
loopne
fistps
in
mov
leave
jne
icebp
sbb
dec
lahf
and
cmp
mov
jmp
pop
and
sub
push
inc
sar
bound
xor
ficoml
cmc
loop
fwait
pushf
out
lods
nop
inc
pushf
sub
xchg
jecxz
add
stos
in
rorl
cmp
push
xor
mov
or
loopne
aas
add
or
jno
int3
loop
cmp
mov
xchg
insl
mov
dec
push
add
sti
add
iret
sar
xor
sahf
cmpsb
push
ficoms
cmpsb
lcall
fwait
lret
cmc
jbe
dec
in
xor
xchg
inc
loopne
or
sahf
out
push
fucomp
call
xchg
xchg
cmp
fwait
pop
dec
adcb
sbb
out
inc
mov
xor
rcrl
adc
inc
lods
inc
out
mov
jne
imul
outsl
das
cmc
sarb
lret
outsb
cmp
xor
push
rcrb
push
aam
pop
in
jbe
mov
lret
inc
insl
jne
hlt
cmp
xchg
cmpsl
aas
std
jmp
mov
pop
sbb
and
in
mov
jmp
fstps
and
cwtl
jmp
pop
mov
pop
aaa
mov
pop
popw
push
push
and
cld
and
pop
mov
push
cmc
outsb
and
and
gs
jno
test
jmp
mov
jno
mov
adc
pop
aaa
pop
stos
rcl
pop
cli
test
dec
pop
jl
rcl
lods
test
pop
orl
outsb
mov
or
inc
in
mov
popa
pop
sbb
stos
jecxz
mov
push
out
sbb
movsl
push
adc
sub
pop
scas
test
xor
mov
mov
movsb
xchg
lods
sbb
jle
mov
stos
add
gs
hlt
fcomi
inc
insl
sub
arpl
mov
mull
loopne
in
popa
test
and
fwait
callw
lahf
push
adc
jg
movsb
inc
arpl
mov
add
test
negb
hlt
xchg
jmp
mov
dec
in
loop
mov
add
add
and
adc
inc
je
jno
cmp
pxor
icebp
movsl
cmp
cltd
xor
cmp
lea
mov
jmp
mov
mov
mov
mov
and
adcl
or
leave
out
mov
fmull
cmp
call
lret
lods
dec
mov
mov
xchg
das
cwtl
jmp
xchg
pop
pop
int
push
jle
clc
sub
jae
pusha
sub
mov
insl
int3
fisttps
sub
cld
sbb
repz
pop
sub
pop
jle
mov
jmp
sub
stos
push
outsb
int3
das
mov
lahf
sarl
repz
push
lods
mov
call
sahf
int
push
iret
mov
popa
outsb
push
cmp
xchg
loopne
ds
mov
call
aaa
adc
cmp
sub
shl
pop
jge
int3
push
xor
jno
fdivrs
add
aad
bound
jae
push
mov
sbb
xorb
sahf
pop
cld
or
pop
adc
push
dec
or
popf
sbb
enter
sbb
sbb
call
adc
lret
cmp
jbe
jbe
outsl
mov
mov
mov
fcomps
sbb
jnp
inc
cmpsl
cmp
mov
sbb
movsb
jecxz
out
add
rcl
movsl
pop
xchg
ret
pop
mov
imul
adc
loop
push
dec
movsl
xchg
aam
dec
popf
adcb
sbb
adc
iret
es
mov
push
out
shrl
dec
and
outsb
xor
jmp
jbe
mov
jb
inc
jb
xor
out
sbb
ljmp
jns
popa
aaa
js
out
gs
pop
sbb
popf
pop
jge
outsl
xchg
sarl
push
loopne
icebp
mov
inc
cld
test
or
dec
inc
shlb
jg
clc
mov
mov
js
sub
adc
inc
xchg
xchg
ret
and
pop
outsb
insb
or
push
push
pushf
mov
pushf
ret
sahf
lods
fists
or
inc
pop
in
lock
xchg
int
mov
push
sub
jmp
push
testl
shlb
imul
and
mov
dec
mov
out
js
mov
inc
cmpsl
leave
lea
push
jge
cmp
movsl
cltd
lock
pop
out
dec
mov
lcall
cmp
into
inc
mov
and
or
and
mov
sahf
in
jge
insl
cmc
push
pop
stos
fnstcw
loope
dec
fstpl
jae
mov
sarl
mov
ror
jle
mov
adc
sub
jge,pn
aam
add
push
or
das
roll
xchg
mulb
out
enter
rcrl
loope
cwtl
pop
enter
ja
mov
loope
fistpl
lret
clc
push
and
notl
and
adc
inc
shrb
in
je
or
jbe
xor
pushl
and
jg
xchg
bound
xor
les
in
mov
sub
inc
sbb
adc
imul
call
jae
cltd
ret
int3
mov
sbb
nop
push
divps
clc
js
inc
test
pop
xchg
inc
ret
fcomp
push
mov
sub
or
aaa
sub
inc
nop
int
scas
lea
leave
mov
jp
jl
bound
sbb
into
cmc
movsb
sub
cmp
adc
jb
jb
jmp
pushf
aam
add
fcoml
xchg
push
push
sbb
cmp
pusha
fsts
in
fistps
adc
xlat
sarb
or
rolb
sub
test
dec
dec
or
imul
pop
fbstp
xchg
int3
xchg
sbb
xchg
out
adc
jp
dec
sub
cmc
or
std
mov
mov
push
xchg
int
sbb
inc
int
jae
and
insl
mov
mov
sbb
sub
stos
ficomps
dec
xchg
jl
mov
jb
test
cmc
add
xor
popf
push
cli
es
aaa
pusha
loope
movb
stos
jge
xor
aaa
aam
mov
xor
xlat
mov
cwtl
push
out
dec
sub
mov
sbb
emms
hlt
outsl
test
adc
mov
xchg
sbb
push
pop
jns
inc
jge
jnp
jmp
inc
pop
mov
pop
jle
xor
dec
loope
jns
jl
inc
lret
mov
fbstp
or
xchg
adc
fs
pop
test
jg
loop
lret
pop
jmp
jmp
pushf
rclb
mov
outsl
jns
adc
pusha
adc
mov
pop
js
sti
dec
adc
into
pop
int
popf
pushl
lcall
aad
xor
pop
jle
or
cmp
cmp
dec
daa
popa
xchg
mov
jbe
push
addl
jmp
sbb
or
push
jo
pop
jbe
out
pop
sub
fisttpll
jno
into
push
test
mov
cmp
sbb
jecxz
frstpm(287
push
dec
cmp
nop
dec
or
jle
ljmp
mov
int3
xor
add
outsl
test
adc
sbb
fiadds
sbb
sbb
cwtl
mov
jo
xchg
cmp
mov
or
add
scas
cmp
and
mov
out
pop
div
xchg
xchg
cmp
add
mov
sahf
add
mov
and
out
pop
xlat
adc
sub
jne
or
sbb
mov
push
and
adc
dec
and
mov
jl
mov
adc
xchg
mov
jae
aam
inc
sub
xchg
out
pop
inc
mov
icebp
dec
jecxz
popf
mov
xor
and
jae
adc
lods
es
addr16
stos
fs
and
sbb
push
jmp
data16
lea
xchg
dec
inc
jp
inc
mov
cli
adc
dec
pushf
je
dec
add
inc
icebp
insb
adc
lret
xor
mov
mov
sti
cmpsl
pop
mov
jo
push
add
cli
std
loopne
inc
push
mov
sbb
std
jbe
lcall
or
lcall
ret
adc
into
test
lds
pop
dec
jnp
pop
inc
aad
aaa
andb
push
ret
loope
adc
daa
xchg
lods
jno
lret
xorb
pop
jne
cmp
cmp
mov
mov
or
mov
mov
cmp
xor
pop
pop
hlt
arpl
xchg
jge
add
lret
rcrl
fs
or
in
mov
cmpsl
inc
mov
or
or
enter
rcrb
fnsave
sub
scas
sub
dec
fmull
bound
mov
pop
pop
mov
push
in
ss
into
ret
or
outsb
iret
inc
dec
scas
sub
cmp
int3
mov
jae
shrl
cli
lret
enter
inc
test
pop
faddl
fdivrl
mov
subb
orl
mov
addl
add
sbb
dec
xor
dec
fsubr
nop
cmp
push
push
or
ss
push
push
cltd
cmp
mov
out
mov
jb
add
je
xchg
ret
cmpsl
test
push
dec
js
mov
push
ja
icebp
mov
mov
mov
jmp
insl
mov
jmp
rorb
addr16
or
push
cltd
pop
lret
out
cwtl
notl
cmp
jp
fwait
xlat
xor
shlb
sti
aas
flds
sbb
lock
js
xchg
rclb
mov
mov
sub
pop
push
adc
je
jmp
stos
cld
fucomi
mov
xor
dec
lahf
inc
mov
movsb
dec
inc
das
fcomps
cmp
fistps
xor
movsl
dec
or
xchg
inc
inc
std
popf
std
inc
jbe
lods
xor
mov
aam
popw
sub
or
jg
sbb
rcll
mov
add
fildll
xor
nop
add
adc
int
lret
pop
dec
ror
mov
mov
dec
int3
mov
adc
repnz
push
rclb
fildl
xchg
pop
out
jecxz
xchg
fistpll
sub
adc
sbb
bound
std
es
mov
out
stos
cmp
loopne
xor
mov
fsubrl
js
in
std
inc
addr16
add
xchg
xchg
mov
jecxz
lret
in
ret
ljmp
cmp
mov
fwait
bound
inc
dec
dec
in
and
pop
cmpsb
cli
sbb
dec
ds
movsb
into
cmc
sar
ficoms
cmpsb
aaa
xor
mov
push
gs
xor
jmp
or
sahf
imul
testl
and
pop
movsb
lods
mov
iret
push
sub
out
jno
rclb
push
stc
aaa
rclb
xchg
inc
or
pusha
sbb
push
dec
movsb
ljmp
mov
dec
xchg
xchg
add
std
mov
pop
lret
adc
sarb
arpl
pushf
mov
lock
mov
aad
xchg
or
fcomps
dec
or
xor
movswl
push
icebp
fwait
sbb
mov
push
cmpsb
push
cmp
xor
lods
ja
push
or
and
test
lock
adc
aad
shlb
jae
iret
addl
loop
scas
adc
enter
mov
jae
sbb
mov
mov
stos
sbb
lea
les
mov
jg
lock
mov
int3
xor
jmp
and
pop
or
in
sub
int3
es
je
mov
pop
movsb
push
sub
adc
arpl
push
pop
lea
xor
jge
xchg
xchg
mov
jo
sbb
loope
sarb
rolb
cmp
cltd
outsb
or
or
dec
mov
xorb
xchg
leave
aad
movsb
and
jecxz
int3
pop
xor
cmp
fwait
aad
stos
sub
jnp
xor
js
cld
sub
adc
add
cwtl
dec
jmp
jle
test
and
test
adc
mov
sti
lods
sti
fildl
aad
push
mov
sub
dec
push
push
adc
adc
jge
inc
sub
xchg
ss
xorl
add
add
jle
stos
mov
mov
cs
and
cmpsl
jne
aas
mov
xor
idivl
and
sbb
idivb
repnz
jae
add
ss
repnz
cmp
pop
js
sub
arpl
aas
mov
fcmovnu
in
xchg
mov
cmp
pop
rol
sarb
repz
outsb
sub
pop
mov
orb
mov
add
in
test
mov
add
std
out
or
mov
pop
mov
cmp
cmp
fbstp
sahf
mov
sub
test
inc
jo
daa
pop
jp
inc
jmp
inc
jmp
imul
ss
gs
dec
insb
pop
std
mov
leave
loop
mov
clc
mov
fldenv
sub
aas
mov
fisttps
dec
jno
loop
cmp
push
mov
enter
push
xchg
popa
sbb
mov
mov
insb
dec
and
mov
mov
outsl
pop
dec
adc
mul
dec
stos
push
mov
xchg
add
and
mov
inc
pop
add
fsub
mov
cmp
pusha
je
push
ficoms
pushf
cs
pop
lea
daa
cmp
mov
int
or
lahf
push
xor
push
jnp
in
pop
lcall
lods
mov
push
and
mov
pop
popa
adc
divb
pusha
mov
cmp
pusha
mov
ss
or
cmp
pop
fsubr
jg
stc
mov
sbb
into
jbe
out
push
jno
test
imul
xor
lds
int
cmp
add
mov
cltd
sub
test
or
jl
or
ret
fldenv
pop
roll
call
or
dec
lcall
es
int3
hlt
repnz
adc
ljmp
pop
fmull
pop
ret
aad
repz
adc
lods
lret
inc
repz
push
or
xchg
les
lcall
adc
insb
iret
cwtl
sbb
jle
out
inc
hlt
jbe
pop
xchg
sub
mov
imul
stos
add
cmp
rdmsr
mov
aad
nop
in
orl
loopne
lret
ds
jb
cmc
dec
js
stc
sahf
cs
pop
cmc
mov
popf
xor
push
aas
sbb
push
loope
dec
xchg
mov
ja
jp
movsb
movb
push
push
jle
inc
mov
arpl
aas
cs
std
sarb
shrl
jmp
cmpsl
xor
xchg
mov
xchg
sub
shl
loopne
jl
test
jns
inc
es
cltd
mov
cmp
or
dec
in
pop
pop
and
xchg
sub
jp
add
mov
cwtl
notb
addr16
cmpsb
mov
sbb
outsb
mov
stc
insb
pushf
stos
dec
pop
fsubp
add
xor
sti
xchg
movsb
in
adc
xor
adc
pusha
dec
cli
xor
test
in
sbb
dec
sbbl
jp,pt
test
cltd
jo
xchg
ds
jle
aam
out
loopne
loopne
lods
xor
mov
dec
ret
fldcw
movsb
mov
loope
aad
pushl
fistps
data16
ret
adc
mov
jecxz
pop
es
cmpsl
fistps
sub
ss
pop
mov
hlt
adc
mov
cmp
fisubs
add
add
out
adc
xchg
loop
adc
incb
inc
sarb
lods
cmpsl
adc
dec
fistps
jb
cmp
and
js
jno
xchg
loope
push
out
pop
sbb
sbb
xchg
inc
movsl
and
insl
push
lea
les
jmp
mov
inc
inc
iret
fidivl
out
daa
mov
pushf
add
addb
popf
inc
sub
mov
cmc
clc
mov
mov
call
out
cmp
ret
leave
mov
lret
adc
loope
outsb
andb
inc
xchg
lcall
cwtl
pop
addr16
fildll
orb
fidivl
repz
jb
dec
fdivrs
xor
cmp
xlat
add
xchg
mov
neg
adc
call
roll
lds
insl
test
packuswb
decb
jmp
inc
dec
jno
imul
call
sbb
push
scas
or
sbbb
sarl
int3
aad
mov
lods
data16
mov
sub
fwait
insl
pop
arpl
and
stc
es
cmp
xor
les
xchg
stc
cmc
orb
idivb
mov
ret
pop
fwait
mov
pop
test
mov
mov
cmpsl
push
fcoms
out
inc
xor
imul
leave
mov
sbb
sub
lret
pop
pop
inc
or
mov
xorl
sbb
mov
sub
dec
fldenv
or
rorl
and
add
adc
xchg
loopne
lock
pop
push
out
cmp
dec
icebp
mov
and
xchg
addr16
mov
loop
imul
push
cmpl
aas
popf
adc
xchg
xchg
mov
testb
imul
and
out
push
sbb
pop
js
in
test
push
insb
mov
pop
mov
cmp
les
mov
adc
adc
scas
xchg
insl
insl
lahf
and
and
loop
mov
js
stos
cmp
dec
cmp
in
je
xor
cs
lea
cld
lret
aam
xlat
popf
or
jno
popa
rorb
sbb
cmpsb
adc
xchg
out
fwait
neg
adc
push
push
cs
pusha
ja
xchg
aaa
shlb
sbb
xchg
fdivp
daa
aad
int3
loope
ret
mull
arpl
cmc
repnz
ret
xchg
lock
dec
mov
pop
mov
push
add
iret
cltd
in
push
pop
adc
mov
cli
aaa
sbb
and
ss
icebp
rorb
sub
cmp
mov
icebp
push
repnz
pop
loop
scas
pop
add
outsb
aaa
push
dec
out
bound
lock
jmp
adc
or
push
popa
mov
imul
sub
xchg
lret
movsl
test
push
in
mov
sbb
lret
push
mov
out
xchg
mov
inc
and
jg
mov
in
push
sti
mov
mov
divl
scas
jge
inc
pusha
inc
push
add
jmp
mov
push
cwtl
fimull
aad
mov
fldl
into
push
jmp
adc
push
in
fildll
sbb
cld
mov
testb
scas
jns
aas
lock
lods
mov
enter
outsb
cmpsb
icebp
pop
xor
jmp
sub
inc
stos
fcoms
test
add
scas
or
das
push
loop
movsb
push
sbb
mov
cmpb
mov
out
movsl
sti
sub
mov
jns
lahf
out
cld
aam
testb
xchg
dec
int3
ljmp
mov
mov
pop
loop
mov
lods
loop
mov
aam
push
xor
and
out
repz
mov
xor
sub
jne
std
sarl
mov
push
push
sbb
out
sar
xchg
push
dec
je
mov
inc
and
loop
dec
jb
mov
aad
xor
lods
in
or
shr
les
mov
jb
aam
fisttpl
pop
jmp
add
pop
or
pushf
je
push
push
bound
test
xor
fwait
or
es
in
dec
and
push
adc
icebp
xor
adc
iret
in
mov
dec
loope
mov
fisttpll
sbb
aas
rcrb
cltd
decl
and
sbbl
mov
rcll
inc
outsl
jp
inc
jge
bound
shr
sahf
cmp
adc
test
or
es
mov
cwtl
mov
hlt
testb
mov
fcompl
jae
dec
and
into
jbe
lret
pop
pushf
pop
mov
movsb
es
and
mov
pop
add
aad
jecxz
jmp
sahf
add
lcall
mov
push
mov
xchg
dec
pop
std
adc
leave
fs
push
ret
lods
mov
loopne
ja
aam
int
hlt
pop
mov
cmp
mov
fsubs
mov
cmp
mov
adc
repnz
ljmp
pop
mov
dec
jmp
fimull
jns
lret
je
xor
adc
and
add
sbb
sbb
inc
test
jb
in
aas
jle
push
mov
in
mov
ret
stos
stos
pop
in
or
jge
jno
add
jb
not
sbb
imul
xlat
lcall
es
loope
insl
mov
fmull
or
mov
loopne
cld
gs
fcoms
jb
jge
and
notb
push
inc
movsl
in
insb
and
add
xorl
into
or
outsl
insb
and
mov
pop
int
mov
sbb
jge
std
or
leave
inc
and
jne
mov
pop
push
mov
lret
in
movsb
rorl
push
mov
or
push
pop
dec
out
fwait
test
xlat
pop
ljmp
ret
outsl
inc
ficomps
cmp
cmp
adc
js
lcall
inc
mov
clc
xchg
pop
fstpt
add
push
shlb
movsl
push
in
mov
ret
enter
js
test
data16
call
inc
call
inc
mov
out
adc
fnsave
sahf
ret
sbb
xor
jb
outsl
cmp
lds
adcl
jnp
div
jo
inc
mov
sahf
jp
inc
jns
dec
xor
cmp
xor
push
daa
jecxz
out
jmp
out
xor
dec
adc
cld
rclb
dec
orb
test
daa
lahf
sbb
push
xor
xor
jbe
adc
mov
pop
xchg
jo
and
and
mov
xor
iret
xchg
out
out
movsl
pop
pop
sbb
int3
test
pop
lods
gs
pop
jl
aas
push
loopne
mov
stc
mov
fistl
push
shlb
mov
xlat
dec
out
xor
add
cld
lods
sti
stos
mov
sub
pop
in
jb
mov
movsb
and
jp
les
hlt
adc
js
push
aad
int3
stos
xchg
jo
frstor
dec
cmp
and
out
push
or
sbbb
test
pop
lea
push
cmp
or
movsl
gs
hlt
mov
xor
repnz
ljmp
bound
daa
mov
in
inc
mov
xchg
lods
je
ds
pop
stc
xor
fwait
pop
pusha
push
lret
out
jp
loope
push
pop
xchg
mov
pusha
sbb
push
adc
call
add
push
cmp
push
rcrl
cli
call
jnp
sub
test
bound
mov
xor
sbb
stos
std
pop
fsubrs
rcrb
ljmp
frstor
aam
lret
push
dec
pop
and
push
xchg
push
push
pop
cmp
mov
sbb
std
andb
bound
sti
aad
in
push
ljmp
xor
xchg
jmp
imul
lret
ss
ret
mov
push
data16
jp
loopne
enter
lret
ds
jbe
lock
dec
mov
and
push
xchg
sbb
sub
xor
inc
xor
jg
mov
xchg
jg
repnz
xchg
add
push
push
test
and
mov
cld
inc
dec
push
cmp
nop
fidivs
stos
jp
sbb
loop
adc
mov
xorb
shll
inc
push
mov
aaa
sbb
fs
mov
xor
pop
xchg
loope
pop
inc
and
shlb
sar
and
and
sbb
mov
lret
imul
hlt
movb
cmc
xchg
icebp
aas
inc
jl
fisttpl
sbb
push
pushf
lods
arpl
mov
fwait
inc
out
pop
gs
stc
xchg
pop
jp
jp
fldl
cmp
adc
sbb
sbb
outsl
scas
outsl
or
stos
jns
inc
jns
loope
jmp
es
mov
or
inc
jecxz
jo
sbb
repnz
jnp
sbb
addr16
jmp
push
inc
add
mov
push
dec
ja
jb
fidivrs
add
popf
push
fldl
loopne
adc
xor
ret
out
push
dec
jno
jno,pt
mov
repnz
inc
ret
lahf
aaa
dec
xchg
out
psrlw
fnstcw
scas
fs
jno
xor
mov
dec
lret
cmp
iret
pop
lcall
repz
cs
imul
insl
lods
pop
xchg
push
xor
out
in
push
jns
pop
cmp
in
fcomps
mov
nop
je
cltd
sbb
sub
loop
cmpsl
xchg
pushf
sub
push
outsl
push
and
fwait
pop
scas
and
nop
lock
mov
fsubl
and
push
lret
jp
leave
xchg
xlat
sub
ret
jmp
pop
push
std
or
sbb
cs
test
mov
dec
add
jg
cmp
mov
mov
sbb
mov
jmp
mov
jecxz
push
popa
xchg
je
mov
shl
mul
inc
outsl
out
mov
rcll
loop
and
xchg
out
mov
push
xchg
iret
stos
fwait
aad
outsb
rcll
sub
sbb
sahf
push
mov
aam
or
cmp
aaa
push
or
jg
xor
jl
and
jb
push
mov
xor
jl
lea
xor
push
mov
add
mov
mov
pop
out
aam
add
fisttps
push
push
pop
push
cltd
pop
and
push
clc
mov
aam
jnp
cmp
pop
adc
ss
ficompl
jl
inc
cmp
xchg
xchg
cmp
jg
inc
dec
push
data16
leave
sbb
mov
imul
daa
loopne
dec
pusha
lds
inc
mov
iret
mov
pushf
cld
out
sbb
pop
pusha
and
fwait
cltd
arpl
bound
push
fwait
sti
cmp
aas
sub
aad
fbld
jmp
push
nop
xchg
cwtl
jo
and
fbstp
leave
push
sbb
xchg
outsl
loope
push
jmp
sub
and
sti
mov
outsl
mov
xchg
push
test
jle
mul
fmull
cs
cmp
xchg
rorb
fwait
mov
mov
out
mov
xor
push
push
sub
daa
loopne
push
lahf
popf
inc
enter
sbb
leave
scas
cmp
dec
push
in
es
insl
pop
mov
fdivl
enter
gs
sub
push
into
pushf
cltd
sarb
int
mov
hlt
lds
ds
dec
int
pushl
add
les
cmp
shlb
fisubrl
push
mov
sub
dec
jmp
xchg
mov
adc
stos
xchg
dec
pop
inc
cld
inc
sub
push
js
ret
xchg
sub
xchg
test
adc
mov
aam
fimuls
aaa
out
push
les
fstpl
not
aad
test
sub
in
divl
imul
dec
fistpll
xor
or
fwait
xchg
in
aas
sti
in
stos
push
push
popf
sub
clc
mov
and
and
sbb
adc
fsubs
mov
jae
push
enter
sbb
cld
pop
insb
sbb
mov
scas
adc
xchg
sahf
leave
lock
jb
int
out
fldenvs
jge
jge
aaa
imul
xor
loopne
dec
cmpsb
pop
leave
xchg
add
into
dec
sahf
imul
daa
orb
fucomp
repz
bound
getsec
addb
rcl
es
xchg
inc
ret
xchg
pop
add
xchg
mov
inc
dec
sbb
mov
scas
pusha
cmp
and
pop
or
imul
mov
cmc
push
mov
push
jmp
std
dec
mov
in
imul
inc
cwtl
les
movsl
push
sub
and
sbb
jbe
out
pop
ss
cld
push
cmc
sbb
cmp
pushf
xor
subb
mov
sub
cltd
mov
out
xor
icebp
es
mov
inc
imul
cmp
call
pop
jle
gs
in
aas
mov
mov
lods
jp
in
fldz
out
inc
mov
movsb
loope
push
inc
adc
xchg
mov
sub
in
push
adc
outsl
push
stos
stos
leave
pop
daa
mov
sbb
sarw
pop
inc
movsb
mov
xchg
mov
jbe
sub
push
mov
mov
or
test
cmpsb
lret
ficompl
mov
aas
add
pop
lcall
aas
jae
push
imul
bound
pop
mov
jno
leave
or
xchg
mov
rdpmc
mov
pop
cld
fdivrl
push
gs
lods
mov
mov
mov
imul
dec
das
xchg
orl
addr16
call
adcl
pop
or
je
decl
aaa
sbb
lahf
pop
jmp
pushf
xor
ja
inc
or
push
icebp
push
lods
lahf
mov
test
xor
sub
sbb
mov
fnstcw
pusha
movl
xor
and
jno
rep
or
out
rorb
inc
cli
or
fcmovb
js
ret
iret
divl
sub
mov
cli
decl
jg
mov
and
inc
fcmovne
lcall
xor
xor
addr16
sub
movb
sbb
arpl
loopne
cmc
mov
adc
in
mov
shlb
push
shrl
nop
dec
cmp
lea
jecxz
pop
and
sbb
pop
jmp
sub
pop
loopne
repnz
ret
test
mov
sub
adc
sub
fsubl
mov
dec
push
shll
cmp
jecxz
fiaddl
addr16
sbb
xor
je
mov
sbb
mov
idivl
jb
out
fstps
test
xchg
push
inc
inc
data16
inc
adc
lret
stos
pop
cmp
clc
fistps
leave
test
pop
clc
adc
dec
jg
xor
arpl
lret
push
dec
movsl
iret
jge
push
adc
xor
sbb
mov
sbb
fldt
and
xor
pushf
mov
jg
nop
test
jb
mov
or
daa
data16
push
xor
inc
clc
ficoms
scas
push
xor
mov
pop
cmp
inc
pop
js
push
mov
dec
mov
add
stos
stos
jl
xchg
lea
int3
cmpsl
loope
pusha
divb
clc
and
sub
mov
cmp
popa
les
xchg
xorl
test
inc
and
inc
cmp
cmp
popf
lea
mov
sub
fistpll
xlat
aas
pop
pop
int3
jl
insl
fs
push
or
scas
scas
xchg
pop
shrl
lods
dec
cltd
cmp
push
addr16
in
xchg
pop
les
ss
neg
out
sbb
push
fiadds
icebp
adc
mov
mov
and
pop
mov
xchg
sub
mov
xchg
cmp
xor
mov
fdivrs
icebp
fs
push
pop
cwtl
lret
push
cltd
mov
insl
mov
lret
dec
add
inc
xchg
sub
pop
or
addr16
shl
mov
push
je
xchg
sbb
gs
push
add
xchg
fs
xchg
clc
fwait
sub
les
xchg
cmpsb
inc
out
inc
ds
test
mov
or
jl
sti
stc
sarl
int3
mulb
jg
lds
fcoms
jno
mov
je
add
daa
lock
inc
insb
or
mov
pop
xchg
fidivl
sarl
adc
clc
pop
xchg
aaa
push
fwait
mov
mov
sbb
jne
rcr
mov
call
sub
leave
lock
inc
inc
push
decb
xor
int3
mov
dec
dec
rcrb
imul
dec
ljmp
xchg
loop
mov
fisubrs
pop
lods
cmp
lea
pop
add
adc
enter
addr16
or
shl
movsl
xchg
ss
mov
das
negl
pop
in
addl
loopne
or
int
adc
pcmpeqw
adc
test
push
mov
dec
pushf
mov
cmp
je
inc
dec
add
mov
cmp
xchg
inc
add
jae
push
mov
call
mov
fmul
outsl
pop
aam
mov
jg
test
xor
mov
inc
shr
ret
xor
cmp
pop
inc
mov
sub
inc
mov
aad
clc
stos
mov
flds
cmp
mov
cmp
inc
sbb
icebp
test
stos
pop
jno
push
pop
sbb
daa
adc
dec
sahf
cmpl
or
std
ror
xlat
pop
lahf
xor
pop
repnz
mov
jg
hlt
jmp
inc
lahf
sbbl
fimuls
leave
or
rcrb
stos
das
push
pop
cwtl
fwait
test
hlt
dec
mov
addr16
sub
imul
or
idivl
nop
push
xchg
je
test
sub
rorb
in
int3
stos
pop
ds
jl
dec
cmpsl
addr16
pop
gs
popf
xor
mov
inc
ret
jnp
or
pop
xchg
loopne
mov
loope
sbb
xchg
and
and
inc
mov
push
movsb
xchg
pop
and
fdivl
add
xlat
and
fimuls
les
es
dec
push
add
cmc
pop
clc
das
and
push
sbb
shrl
insl
mov
mov
or
cwtl
xorl
xorb
std
mov
daa
movsl
test
icebp
scas
jmp
jl
jl
jne
mov
pusha
sbb
inc
call
outsl
inc
pop
dec
or
loopne
jmp
pop
cmp
inc
dec
sbb
mov
xor
dec
inc
xor
ret
pop
adcl
inc
outsl
repz
sbb
sbb
lods
lahf
mov
add
mov
inc
iret
popf
mov
xchg
imul
xchg
inc
shlb
dec
in
pop
and
lahf
popa
xchg
push
test
cmp
sub
dec
loop
mov
aas
maskmovq
idivl
adc
pop
and
leave
xchg
jne
les
sbb
or
pop
pop
xchg
fwait
adc
ret
mov
ljmp
rcl
inc
aad
ja
and
jb
and
jecxz
fistps
daa
mov
stos
aaa
hlt
sub
jns
mov
mov
lods
clc
cmc
test
sub
pop
sti
pop
aaa
test
cli
cmp
aaa
iret
mov
xchg
flds
and
push
mov
shrl
push
stos
inc
mov
cmpsl
xor
incl
movsb
jmp
popf
in
test
mov
mov
lcall
stos
daa
or
pop
mov
jp
push
ret
xchg
daa
jbe
test
xchg
adc
cmp
or
out
rcll
fldt
inc
dec
jae
pop
addb
imul
or
imul
icebp
xchg
push
js
inc
gs
fbld
int
inc
sbb
mov
lret
lahf
mov
in
stc
dec
cmpsl
mov
cmc
loope
sarl
ss
out
dec
dec
pop
pop
data16
dec
ret
sti
xchg
test
sub
dec
aas
enter
xor
iret
out
orl
jle
ss
add
xor
and
xchg
xor
fbstp
jo
je
filds
aad
ss
adc
add
popa
enter
movsl
bound
mov
mov
cmpsl
xchg
push
add
scas
jp
mov
pop
inc
rolb
push
jne
add
xor
push
add
sti
shrl
aam
std
cltd
dec
xchg
sub
xor
shlb
jle
insb
in
sbb
add
xchg
pusha
jecxz
lea
mov
inc
test
addr16
dec
std
or
shll
or
mov
jp
sbb
daa
insb
mov
inc
jge
loope
insb
dec
pushf
inc
xchg
je
mov
mov
adc
sub
aam
lret
popa
sub
roll
mov
fsub
jbe
sbb
cmc
jno
outsl
xchg
int3
in
xlat
stc
mov
pusha
mov
sub
push
and
mov
jmp
std
shll
roll
stos
insl
add
mov
dec
data16
pop
sbb
shlb
test
jl
mov
xor
push
mov
mov
xor
xor
out
jle
xlat
inc
xchg
pushf
cld
mov
inc
leave
arpl
rcll
ret
ret
mov
mov
les
nop
jecxz
testb
xor
popa
or
adc
or
mov
jecxz
cli
icebp
mov
lcall
mov
mov
push
push
ja
outsb
mov
mov
outsl
push
jl
nop
jns
pop
jp
shrb
xchg
icebp
les
leave
lea
push
mov
jae
lret
popa
xchg
mov
cwtl
adc
adc
into
aad
or
fsub
push
lds
popa
test
scas
jl
mov
xor
int
jae
sub
dec
xchg
add
pop
stos
inc
ficompl
and
mov
xchg
xchg
ret
push
movsb
push
cld
les
pusha
mov
lcall
mov
mov
lock
stos
shrb
std
shll
inc
push
clc
sbb
cmc
stos
je
pushl
lds
or
pop
pop
mov
ss
and
jae
pop
cmp
repz
pop
jmp
loope
cmp
mov
dec
push
inc
lock
mull
push
adc
mov
push
cmpsl
out
ds
icebp
and
insb
lods
mov
fisubrs
mov
rcrb
inc
sbb
insb
test
nop
pop
iret
je
adc
enter
jl
mov
js
les
inc
shrb
mov
mov
inc
fisubrs
lock
jge
push
fcomip
rolb
sbb
repnz
mov
std
dec
test
aam
sbb
fst
mov
andb
lds
aad
inc
lea
loopne
jb
mov
jnp
and
sbb
cmpsb
lods
add
adc
test
adc
pop
je
je
pop
push
or
shr
inc
mov
pushf
in
mov
push
jle
adc
out
arpl
push
pop
ret
test
push
and
and
leave
ja
cmpsb
mov
cmpsl
dec
std
adc
xchg
popf
jns
inc
push
fcompl
pop
push
mov
orl
push
push
pop
mov
aas
jg
in
and
sbb
jecxz
fdivp
cmp
lds
jne
push
cmp
push
test
lahf
or
cwtl
adc
xor
mov
xor
sub
cld
in
mov
mov
test
aas
mov
cs
mov
or
popa
mov
mov
movsl
je
int3
dec
pop
jnp
add
shlb
inc
sahf
mov
push
in
test
xor
mov
sub
pusha
xor
scas
sbbl
les
or
mov
lahf
stc
adc
inc
mov
nop
loope
js
out
jecxz
cmpsl
arpl
xchg
push
pop
shlb
pop
cwtl
in
mov
hlt
insb
subl
jo
mov
jge
popa
jns
sub
pop
dec
fwait
mov
mov
push
xor
xor
mov
js
insl
mov
leave
jns
cmp
test
imul
jge
jnp
adc
jae
or
js
test
cmc
and
pop
cmp
outsl
jno
mov
mov
roll
sarb
pop
scas
data16
stos
dec
cmp
or
shr
subb
mov
insb
cmpsl
into
or
loope
sub
dec
lods
inc
xor
out
popa
and
imul
sti
mov
sahf
inc
xor
xchg
adc
repz
in
or
cli
scas
adc
pop
jo
or
adc
leave
sub
mov
icebp
lcallw
mov
mov
mov
cmpsl
popa
std
and
xchg
and
xacquire
cmp
add
das
inc
mov
movsl
jg
movsl
nop
sub
fsubrp
in
sbb
cld
pop
jge
es
sub
inc
bound
sub
sub
mov
xchg
xchg
insb
repz
xor
mov
xchg
adc
lods
jbe
mov
dec
inc
loopne
and
jns
sahf
fcompp
inc
sub
xchg
cs
jecxz
ds
test
xchg
push
sub
dec
mov
sub
ret
outsl
arpl
jns
shrl
dec
jns
loope
or
sbb
mov
mov
cli
mov
sub
push
fmul
aaa
adc
fcomps
jecxz
mov
push
aas
cmpsb
sub
inc
pop
pop
shrl
jae
inc
imul
movsb
adcl
cwtl
sbb
or
cmpsl
inc
or
cmp
je
and
rcrl
adc
cmpsl
ds
sti
out
mov
jbe
aam
sub
in
lret
cmp
jl
xchg
cmp
push
lock
call
lea
sub
push
sbb
sbb
jl
inc
cmpsb
rclb
clc
lods
mov
nop
add
in
addb
insl
sub
lret
cwtl
sahf
xor
aas
mov
xor
fwait
xchg
movsb
in
sub
mov
lods
into
ret
cmp
fwait
lcall
mov
inc
cmp
pop
sub
cmc
xchg
and
call
jb
bound
jno
mov
arpl
inc
or
pop
mov
pop
je
popf
mov
movsl
mov
mov
fnstenv
movsb
daa
inc
xchg
dec
sub
xor
test
jg
cli
cmpsb
push
rolb
cmc
adc
jg
movsl
lea
adc
test
mov
test
sub
loope
mov
push
mov
aam
test
add
jns
sbb
cmp
sbb
add
dec
mov
icebp
xor
jno
or
mov
dec
shlb
das
clc
rolb
repz
xlat
xchg
outsl
loope
sarb
ljmp
xor
call
and
jns
jno
insb
fistpl
test
push
repz
lahf
cwtl
cmp
sbb
xchg
orl
addl
nop
lds
lea
dec
jp
xor
rcrb
imul
pop
scas
sbb
test
lods
push
jmp
nop
mov
pop
push
mov
je
stc
sbb
jl
into
scas
sbb
out
and
nop
out
and
mov
js
xor
pop
mov
mov
int3
sbb
jnp
addr16
push
fwait
fs
mov
sbb
loop
add
outsb
sbb
inc
nop
and
dec
or
int
add
mov
sahf
pop
jge
sahf
dec
mov
jae
icebp
pushf
inc
or
or
scas
f2xm1
mov
mov
cltd
ds
subb
in
cmc
xor
cmc
cs
loop
xor
jg
mov
jb
add
xchg
loope
fwait
jl
inc
daa
dec
jle
push
cmp
jnp
and
mov
push
jp
dec
in
dec
mov
cmp
push
insl
dec
mov
dec
sbb
lahf
fcom
xor
ret
push
dec
xchg
jae
cmp
out
mov
cltd
pop
xchg
fstp
sti
cs
lock
fs
inc
hlt
xchg
mov
jl
or
popf
xlat
daa
dec
push
clc
inc
loopne
aas
adcb
lret
sbb
fstpt
adc
fdivrs
fldenv
xchg
push
inc
into
pop
or
jp
sahf
and
pop
loopne
shr
mov
je
dec
lret
aas
lds
push
sbbl
mov
sahf
push
mov
and
sbbl
dec
pop
mov
push
fwait
add
xchg
repnz
fcmovbe
xlat
or
insl
in
cltd
add
sti
mov
cli
ljmp
out
mov
sti
outsl
fwait
into
jl
push
lock
in
lahf
nop
aas
inc
sub
mov
cmpsb
or
xchg
push
aas
out
xchg
sub
mov
jecxz
mov
shlb
ficoms
dec
orl
scas
adc
pop
add
loop,pn
push
mov
xchg
jg
push
xchg
test
js
pop
mov
lcall
cltd
push
shrl
icebp
out
pop
mov
pop
mov
pop
pop
sbb
mov
shl
mov
cmc
inc
mov
mov
pop
mov
ds
repnz
xor
movsb
test
rorb
jnp
push
mov
sub
rol
jae
mov
jmp
mov
sub
out
xor
les
mov
push
push
mov
pop
mull
sub
or
mov
cwtl
inc
std
jo
xchg
jno
cld
adc
mov
fcmovb
jne
or
addr16
pop
test
insl
nop
xor
pusha
or
sbb
jmp
shrl
out
mov
sti
inc
dec
jp
mov
sbb
fcomip
icebp
ror
popa
mov
mov
loop
cmpl
dec
mov
jge
jnp
inc
aas
in
fidivs
adc
inc
adc
addl
testl
outsl
dec
push
pushf
push
mov
mov
push
push
sbb
add
ja
add
add
mov
jg
adc
lock
mov
pop
jge
sub
ljmp
fstpt
inc
jbe
jecxz
mov
enter
mov
or
jno
outsb
sbb
pushl
sbb
iret
mov
arpl
xor
jo
repnz
in
add
ss
ja
mov
mov
mov
mov
shlb
add
sbb
repz
insb
das
cli
dec
rclb
xchg
and
mov
ror
push
dec
add
call
and
jb
arpl
outsb
push
cmpsl
int
sbb
xchg
mov
mov
jge
sbb
xchg
add
pop
sbb
jmp
push
mov
pop
into
xchg
dec
pop
push
mov
test
or
jl
mov
iret
inc
out
fdivrl
sub
ss
push
pop
xchg
ds
xchg
clc
rolb
mov
dec
and
popf
scas
jl
mov
xchg
insl
push
dec
jl
sub
es
xchg
push
and
inc
dec
mov
xor
arpl
jecxz
jle
sbb
pop
xchg
and
inc
cmp
sbb
mov
test
pop
and
std
dec
popa
jg
negb
aam
insl
mov
jmp
and
ret
and
pop
rcrb
inc
and
dec
inc
int
movsl
test
stc
loope
adc
or
xchg
xchg
fdivp
dec
arpl
cmpb
cmpsl
mov
push
dec
inc
scas
jmp
fldl
xchg
mov
dec
push
dec
enter
xchg
push
pop
ds
xchg
iret
jne
jge
negb
leave
les
jp
sbb
imul
pusha
and
mov
adc
jno
and
cmp
icebp
sub
lahf
leave
ljmp
movsb
outsb
jns
inc
mov
xor
in
cmovbe
dec
and
rcrl
gs
push
cmpsb
pop
or
mov
pop
aaa
cld
aas
jp
jp
xlat
jne
sub
mov
inc
aad
pop
jle
cs
shll
lcall
outsb
sub
ret
bnd
jl
jmp
fwait
inc
fs
and
cld
out
loopne
dec
outsl
cltd
andb
xchg
xor
loop
and
fistps
es
or
sbb
clc
int
lret
mov
cwtl
push
nop
mov
adc
sub
ds
mov
adc
mov
loopne
jb
out
pop
sub
jp
pop
movsb
cwtl
add
sub
adc
jae
sbb
gs
shlb
and
push
push
sbb
sub
sahf
insb
and
jle
lods
iret
sahf
std
lods
rorb
mov
xor
xor
aam
in
aam
loop
sbb
std
repnz
mov
mov
mov
in
cmc
into
fnstenv
xchg
dec
xor
divb
jmp
pop
sbb
jl
or
ja
cmp
jmp
cmpsb
or
ret
jle
cmp
or
sbb
mov
and
xor
mov
or
inc
inc
cwtl
pop
or
loope
into
push
inc
dec
jg
mov
out
ret
cmpsb
sub
mov
or
lcall
jle
in
jp
sbb
sbb
mov
xchg
and
jns
mov
sbb
aas
call
pushf
xor
divb
aas
inc
pop
fwait
or
sti
mov
xchg
and
mov
lcall
jle
jo,pn
orb
pop
outsb
jg
jmp
and
mov
push
cmpsb
dec
inc
adc
mov
inc
das
shll
dec
mov
mov
add
fidivrs
push
cs
jmp
push
out
nop
sarl
arpl
add
xchg
ficoms
daa
cmp
stc
test
imul
ljmp
and
loope
repz
aas
cmp
and
inc
sub
fistpll
ds
cmpsb
adc
mov
sbbl
sbb
jno
inc
fs
in
xor
in
sub
jecxz
sbb
pop
sbb
add
fsubrp
cmp
jne
inc
aaa
test
mov
sub
cld
dec
les
jecxz
ret
mov
fs
js
pop
xchg
xchg
xchg
fwait
in
clc
pop
and
daa
scas
fmuls
push
pushf
test
push
inc
fdivrs
mov
inc
out
xor
pop
push
cmpsl
pop
sub
mov
cwtl
rcrl
push
lods
inc
mov
lahf
cmp
shrb
mov
scas
rcrl
and
mov
jle
imul
sbb
insb
outsl
imulb
pop
sbb
mov
xor
rol
mov
inc
pushf
xchg
movsb
cs
jo
hlt
insl
mov
push
les
repz
push
add
cld
cmp
mov
cmp
clc
sub
mov
loopne
lods
lahf
out
adc
loop
arpl
subb
outsl
mov
dec
sbb
sub
xor
sbb
sub
mov
pop
mov
loope
jmp
push
in
mov
dec
loop
and
rcll
icebp
push
int3
dec
and
test
push
divl
or
dec
stos
mov
stos
call
fld
inc
nop
sub
popa
jge
insl
dec
fdivrs
or
dec
jge
and
dec
andl
lcall
jl
and
push
cmpsb
lods
sub
movsb
leave
int3
fs
and
mov
pop
xchg
popa
and
out
rorl
xchg
jb
loop
mov
stos
cltd
jns
adc
add
call
pop
sub
les
mov
push
inc
mov
inc
imul
adc
mov
xchg
stos
fidivrs
mov
mov
mov
addr16
mov
call
mov
testl
es
jl
cmp
fmul
cmpb
pop
jg
lock
es
push
mov
sub
add
pop
iret
or
mov
jno
jb
and
jbe
add
lahf
outsl
xchg
push
and
in
mov
xor
inc
stos
pop
jp
adc
sub
sub
icebp
enter
inc
das
test
pop
aaa
lods
or
inc
xor
pop
out
jns
inc
cltd
js
push
fs
aaa
jnp
pop
mov
out
ret
bnd
fdivrs
scas
ss
push
mov
or
fcomps
lods
or
pop
fdivrp
xorl
fwait
adc
repz
lods
fwait
mov
stc
or
or
xor
adc
shll
xchg
fcom
or
arpl
in
fadds
mov
push
fsubs
push
mov
cld
mov
mov
adc
sub
in
pop
dec
mov
test
imul
push
jbe
cltd
xchg
dec
jbe
fsts
ss
in
jle
add
push
adc
jo
das
repz
dec
push
call
xchg
scas
outsb
xchg
imul
pop
clc
cmc
push
mov
cli
adc
mov
pushl
lcall
mov
jb
in
xor
cs
cmp
adc
shl
or
inc
jb
lret
mov
lock
fcos
mov
inc
out
push
push
shrl
adc
mov
out
in
into
mov
add
jl
inc
clc
movl
cmpsl
insl
outsl
xchg
sub
mov
xlat
std
test
and
out
xchg
stc
cmpsb
adc
cmp
inc
lods
int3
shrb
leave
loope
dec
xchg
mov
or
pop
mov
mov
mov
xchg
mov
lods
pop
push
aam
sub
popf
cwtl
int
cmp
lahf
dec
dec
mov
popf
dec
outsb
pop
and
or
xor
scas
mov
lret
pop
xor
repnz
lcall
adcb
xchg
mov
cmp
mov
notb
hlt
and
cmp
push
popf
push
int
mov
cwtl
adcl
in
cwtl
das
ret
xchg
lds
mov
arpl
fucomi
icebp
mov
out
shll
dec
aaa
push
adc
mov
add
enter
push
cmp
push
cmp
adc
lock
inc
andl
aam
xchg
fwait
and
repz
in
mov
cli
mov
xor
mov
cmpl
push
jecxz
dec
push
add
test
adc
xor
stc
out
jns
fwait
mov
imul
popf
jno
xchg
dec
jns
sbb
adc
cmc
into
shll
jle
xor
sbb
pop
push
mov
mov
ds
mov
fcmovu
or
xchg
enter
add
mov
xchg
je
add
insl
imul
test
and
jmp
mov
fisttpll
sbbb
inc
xchg
rcrb
loope,pn
and
aaa
xor
add
or
test
lahf
pop
mov
jmp
bound
xchg
clc
xor
lcall
xor
orl
fnstcw
fsubl
scas
inc
cmpl
movsl
sbb
out
mov
ljmp
inc
xchg
outsl
loopne
es
cmpl
inc
icebp
int3
ss
sbb
xchg
cmpsb
lret
jg
pop
xor
movsl
mov
test
notl
or
cltd
xchg
mov
ret
loope
stos
notl
sub
jae
sub
xchg
into
daa
inc
addb
insl
lea
fdiv
xchg
inc
fwait
and
xor
mov
jno
pop
subl
imul
add
xor
mov
pop
pop
jo
sub
lods
stc
imul
and
jmp
aad
add
dec
adc
icebp
repnz
inc
cld
nop
testl
mov
aaa
inc
dec
mov
push
mov
test
iret
add
bound
lret
std
cmc
jnp
cmp
and
inc
inc
push
lcall
mov
cwtl
xchg
ss
jno
data16
repz
jbe
mov
sub
shrb
pop
bound
lret
jne
rcl
jo
dec
jb
cmpsb
inc
xorl
mov
movl
push
fisttpl
push
cmc
mov
std
shrb
jle
jge
iret
sbb
adc
add
xchg
pop
ficoms
dec
mov
lret
imul
xchg
je
jns
mov
mov
lods
push
cmp
mov
mov
ret
andb
fiaddl
daa
inc
mov
inc
mov
iret
outsl
fdiv
mov
pop
cld
test
jle
push
inc
add
cmpsb
push
cs
adc
ss
lahf
cmp
sbb
cmc
int3
pop
pop
roll
sbb
enter
mov
sbb
fadd
mov
repz
pushf
mov
and
idivb
and
scas
addr16
repnz
xor
out
push
sti
lcall
int3
ss
adc
xor
dec
repz
push
push
hlt
xor
inc
dec
mov
push
std
jno
pop
jns
or
cmp
dec
lcall
lret
loopne
jo
push
sbb
sub
jge
jge
mov
dec
popa
ja
jmp
test
fwait
cmp
nop
cmp
enter
pop
jmp
fcoml
int3
shrb
add
fdiv
insl
or
pop
mov
mov
or
call
fisubl
pop
sub
outsb
mov
push
cmp
mov
jge
xchg
ret
add
stos
mov
adc
js
or
sahf
ficompl
sbb
out
pop
jp
imul
mov
push
sub
push
push
out
mov
push
addb
lcall
push
mov
sbb
jmp
xor
sub
rolb
or
imul
mov
clc
fisubl
push
pop
pop
inc
sub
push
les
mov
jnp
and
push
aaa
xorl
add
push
inc
jecxz
or
jge
cmc
pop
dec
notl
mov
imul
fs
mov
rcrl
jns
xchg
pop
pop
jbe
xchg
add
dec
dec
imul
or
negl
push
cwtl
mov
and
bound
xor
lret
xor
xor
shlb
mov
push
sbb
hlt
inc
and
je
jmp
negb
fnstenv
rcll
sbb
fs
jnp
stos
adc
into
lahf
sub
cli
adc
repz
aam
loope
xchg
orl
fldcw
lahf
aas
lods
orb
mulb
outsb
leave
adc
mov
xor
mov
mov
outsl
xlat
push
add
pop
push
and
data16
repnz
mov
sti
jnp
fsubrs
adc
insb
sarb
test
arpl
lahf
inc
xchg
aam
or
pop
les
lahf
aas
push
jecxz
or
fistpll
xchg
lret
insb
push
and
lret
fdivrs
and
dec
push
push
xchg
sbb
incb
mov
dec
jne
xchg
mov
mov
adc
dec
nop
dec
lock
lock
jne
lock
aad
sbb
mov
outsb
mov
dec
imul
xor
adc
dec
sarb
jp
inc
adc
int3
or
andl
jge
ja
lods
jnp
scas
dec
cmc
cmp
dec
jge
cmc
sti
lock
jb
aaa
sarb
cmp
jmp
inc
mov
out
out
pop
in
idivl
pushf
aad
sahf
dec
fisubrl
add
int3
sar
push
pusha
inc
sbb
stos
rclb
jp
inc
dec
shlb
fsubr
loopne
shll
cli
xchg
adc
in
cmpsb
fldcw
xchg
enter
movb
out
aaa
jge
lret
stos
mov
or
xchg
mov
jno
stc
mov
int3
ret
scas
or
push
and
add
mov
mov
inc
das
pusha
fcoml
repnz
loope
push
pop
inc
xchg
or
sbb
cs
xor
push
std
fistpll
add
fsubrp
push
popa
ret
fidivs
push
mov
pop
or
mov
add
xor
mov
sbb
loop
mov
jle
test
inc
enter
les
leave
and
test
inc
int3
xor
imul
pop
hlt
xchg
pop
xchg
scas
push
gs
xlat
adc
inc
jg
jb
pushf
mov
and
and
movsl
dec
enter
gs
or
gs
sbb
aaa
arpl
cmp
daa
scas
xchg
and
lods
rorl
outsl
imul
scas
fisubs
pop
sbb
push
fucomip
jnp
popf
fninit
cmp
rorl
enter
push
xchg
jle
xchg
xor
out
movsl
in
cmovns
pop
sub
mov
nop
mov
or
xchg
enter
je
les
sub
push
mov
jle
adc
mov
nop
out
into
inc
and
xchg
icebp
addb
ret
pop
xchg
mov
sbb
stos
or
add
imul
ds
popf
jge
adc
cmpb
cmp
add
push
iret
insb
negl
fldenv
lods
cltd
imul
gs
outsb
cli
orl
dec
push
push
xchg
std
gs
add
jmp
lret
cmpsl
inc
js
insl
adc
mov
in
or
inc
mov
and
jge
cwtl
push
std
jnp
add
out
inc
jp
loop
icebp
jge
or
jecxz
iret
dec
hlt
jnp
icebp
int
cmp
js
int
and
and
inc
inc
stos
pop
or
adc
cmp
ds
xchg
gs
mov
test
and
add
dec
mov
subb
cs
sbb
lret
push
jne
lock
div
or
movsl
testb
jmp
add
iret
fidivrs
rorl
pop
xor
fsts
fdivrs
fstl
daa
andb
xor
mov
std
dec
clc
or
jecxz
ds
pop
jbe
test
sbb
es
inc
push
das
mov
xor
loope
inc
sahf
call
cld
icebp
pop
or
pop
xchg
inc
push
add
mov
pop
and
inc
sarl
xchg
or
clc
loopne
xchg
adc
psubb
pop
ret
incb
mov
jbe
out
dec
jg
lcall
pop
mov
dec
std
pop
pushf
ss
lcall
mov
mov
sbb
test
sub
ljmp
ficoml
aaa
iret
sahf
shrl
push
gs
lahf
int3
repnz
call
lds
dec
dec
popf
pusha
jle
iret
lahf
in
es
and
test
call
cmp
fisubrl
loope
add
jmp
mov
mov
pop
xor
inc
aaa
call
mov
mov
sbb
mov
aaa
nop
ss
sub
sub
pop
push
into
push
mov
xor
adc
test
enter
inc
and
pop
cld
mov
jo
inc
into
adc
lahf
dec
mov
lcall
pop
adc
lods
push
xchg
decb
in
mov
das
dec
add
jae
std
mov
repnz
jl
dec
adc
xor
or
jo
sbb
push
mov
pop
mov
mov
xor
jmp
pop
sarb
movsl
mov
sub
cs
add
lcall
lods
add
and
rolb
jae
in
push
cmpsl
mov
xchg
dec
insb
or
andb
std
cmpsl
ficomps
popf
sbb
lock
or
or
or
loope
push
lea
in
or
popa
pop
and
jae
subb
outsb
adc
jo
pushf
adc
in
hlt
jne
insl
adc
mov
add
pusha
loop
icebp
nop
fsincos
stc
repz
iret
ret
pop
sbb
ret
lods
std
adc
push
repnz
cmc
jl
lcall
cmp
in
cld
out
loop
in
push
repnz
int3
adc
add
jnp
pop
add
xchg
pop
aam
pop
inc
inc
fcompl
jecxz
xorl
std
scas
push
mov
fnstsw
outsb
adc
ja
or
cmpl
dec
xor
ret
imul
pop
xor
shlb
out
daa
jg
scas
dec
aad
add
and
sbb
mov
pusha
lret
out
int
push
or
or
test
mov
xchg
leave
mov
add
or
test
out
mov
fcomps
mov
ficoms
mov
loope
test
mov
mov
cmpb
pop
es
leave
mov
and
aad
pop
cmc
push
call
jl
xor
sbb
cmp
jl
mov
dec
stc
popf
push
push
psadbw
pushf
repnz
mov
lret
js
pop
or
mulb
lds
jle
into
dec
xorb
out
adc
inc
xchg
xor
push
mov
sahf
sbb
repz
push
cs
xlat
sub
ret
lret
add
cmp
rcr
sbb
and
xchg
sub
jp
sbb
fidivrs
shrb
cmpsb
sahf
dec
cmp
adc
loope
and
out
cmpsb
or
je
nop
mov
fldt
ljmp
dec
outsl
lods
push
xor
inc
rcll
sahf
add
into
mov
negl
pop
xlat
adc
stc
xor
push
ljmp
and
mov
daa
test
ljmp
inc
fabs
mov
fwait
sbb
push
outsb
popf
cmp
push
jge
ja
fmulp
jle
or
cmp
clc
sub
sbb
adc
aad
test
test
movsl
fsubrp
fiadds
or
or
mov
mov
mov
push
rclb
mov
cmp
adc
adc
lea
movsl
xchg
adc
sub
xchg
jno
xchg
adc
add
mov
cmpb
pop
inc
xchg
inc
out
jno
inc
sti
out
add
or
add
and
sbb
in
mov
lret
mov
mov
int
testl
jmp
adc
pop
int3
jbe
pop
push
sbb
lea
mov
ja
and
jne
dec
jnp
out
repnz
je
mov
cmp
pop
in
cmc
pop
cwtl
fildl
mov
sti
fsubrl
lods
in
fs
push
sub
je
aaa
push
in
bnd
stos
and
xor
pushl
dec
xor
inc
dec
cmc
cmpsb
mov
mov
movsb
push
scas
dec
mov
dec
cmp
repz
lret
aas
ror
bswap
icebp
mov
shrl
repz
and
sbb
dec
pop
lret
mov
adc
bound
pop
imul
hlt
and
rcll
inc
or
insl
fucompp
dec
stc
movsb
mov
test
mov
jge
adcl
aas
bound
add
pop
xchg
cmc
pusha
dec
pop
aad
cmp
xchg
jo
ret
das
mov
dec
pop
sbb
sbb
jb
data16
sbb
rclb
inc
mov
pop
xchg
gs
fists
mov
push
mov
cwtl
ja
out
sti
push
popa
fnsave
mov
shll
icebp
sbb
inc
inc
add
push
loopne
adc
loopne
std
enter
fs
mov
jge
or
and
cli
xchg
mov
jb
push
dec
mov
adc
ljmp
cmpsl
dec
push
ja
cmpsb
cltd
add
xchg
popa
data16
insl
pop
les
sub
inc
jmp
fsubs
repz
mov
and
mov
and
push
mull
pop
in
jo
xor
xchg
es
adc
iret
movsb
push
or
in
push
ret
jo
lea
xlat
push
push
mull
inc
push
lcall
popf
dec
cwtl
push
notb
pushf
cli
xchg
or
cmp
lea
dec
imul
mov
popa
mov
mov
push
test
addr16
ret
add
sub
push
jp
or
lahf
and
out
jne
jns
and
repz
movsl
in
lret
and
stc
sub
add
push
add
xchg
cs
inc
jge
mov
dec
xchg
add
mov
lods
js
and
add
fsubrs
jmp
xchg
pop
pop
hlt
aam
aaa
outsb
ffree
cld
sub
dec
mov
repnz
rcrl
shll
orl
es
pusha
mov
mov
and
jecxz
aas
add
aas
enter
popa
or
insb
pop
rcrb
ja
xor
outsl
jge
mov
or
cli
data16
out
xor
addr16
xor
addb
dec
pop
jnp
adc
mov
mov
fmull
scas
mov
rolb
jecxz
lea
mov
inc
cmc
testb
mov
jo
sbb
bound
leave
scas
pop
sbb
out
add
cmpsb
mov
dec
jne
xor
shld
and
inc
mov
dec
jg
push
adc
stos
jns
dec
lahf
shl
xor
adc
add
insl
loope
bound
out
outsl
inc
pop
lock
int
dec
pushf
jb
mov
lahf
fsubrl
jle
and
fmull
pop
or
sub
pop
cmp
add
mov
fadd
fistps
pop
jb
sub
fbstp
aas
insb
jmp
sub
jecxz
pop
dec
add
iret
pop
sbb
add
mov
or
aad
add
inc
in
repnz
rcl
adc
and
mov
xor
loop
mov
pop
mov
cli
pushf
jae
movsb
outsb
mov
sbb
push
mov
jnp
pop
fildll
sbb
pop
call
lret
out
ret
inc
mov
scas
je
inc
out
mov
fsubl
movsl
repz
lods
pop
mov
fbstp
xor
and
loop
sti
insb
ss
mov
jecxz
fistpll
insl
pushf
fidivrl
jno
divl
dec
jl
sub
add
jge
icebp
pop
es
add
test
mov
sarb
aas
test
fsubp
add
lret
loop
shrl
mov
and
popa
add
cs
sub
andl
mov
fs
adc
mov
aaa
andl
shrl
sbb
and
sbb
xor
push
push
jle
pop
pop
mov
hlt
xor
aaa
fildll
or
testb
in
sahf
pop
aam
cmp
not
pop
add
outsl
ficomps
jmp
dec
dec
mov
fbld
insb
repz
mov
fcmove
lret
int3
cmp
xorb
adc
fsubrs
lahf
loopne
shlw
les
movsb
out
addb
orb
mov
ret
fildll
inc
or
scas
popa
xor
cmp
popf
xor
dec
mov
je
mov
out
ja
loop
cli
push
xchg
and
pop
fnstsw
sub
inc
je
movsb
aas
xor
aad
pop
setge
hlt
insb
jp
lods
lret
mov
fs
or
cwtl
dec
ret
insb
push
gs
leave
scas
incl
adc
inc
jle
push
pushf
mov
push
or
addr16
and
cltd
ret
mov
pushf
fidivrl
add
movsb
jp
dec
pop
pop
mov
lods
out
mov
pop
ret
xor
push
sbb
or
data16
cmpsb
ja
cmp
es
jmp
mov
inc
loope
or
mov
mov
mov
xchg
adc
or
add
lret
fyl2x
and
dec
adc
push
shrb
cmp
mov
push
das
icebp
mov
out
adc
rcr
sbb
clc
das
inc
adc
dec
push
or
xchg
cmpsb
and
divl
jo
lahf
inc
in
push
repnz
mov
cmp
lds
adc
hlt
divl
xor
ljmp
dec
push
data16
iret
and
sbb
fs
add
mov
mov
sub
out
mov
pop
cmp
dec
addr16
shll
cld
and
faddl
mov
cld
scas
cli
lods
popl
cmp
ss
fsubrl
xchg
pop
pop
cltd
lcall
sbbb
or
and
push
pop
rcrb
sarb
jae
or
jge
aas
xchg
xlat
mov
stc
insb
lret
test
jno
jne
sbb
pop
es
mov
mov
mov
xchg
js
loope
xor
or
mov
lret
jne
mov
mov
inc
mov
xor
jo
jo
ret
les
add
pop
outsb
dec
mov
mov
cmc
xlat
push
dec
inc
test
mov
repnz
pop
xor
das
fldl
pop
and
mov
and
pushf
in
push
or
lcall
sub
shl
clc
mov
aad
cmpsl
repnz
out
cmp
inc
js
pop
in
mov
outsb
jae
imul
mov
cmp
mov
cltd
mov
fstl
addr16
ret
stos
stos
and
int3
bswap
or
fnstcw
mov
mov
fidivs
mov
insl
inc
xor
pop
bound
xchg
jae
or
xor
push
aaa
sbb
adc
cmp
gs
and
ljmp
xor
xor
mov
fnsave
mov
sub
mov
mov
sarl
shrl
dec
jb
sbb
arpl
loopne
jnp
mov
inc
cli
sub
lcall
xor
test
lea
out
les
enter
sbb
adc
push
test
cmp
shll
hlt
shll
fsubs
enter
test
sub
xchg
xor
outsb
dec
stc
stc
fisubrl
sahf
into
xchg
faddl
adc
add
xchg
mov
hlt
fsub
jl
dec
loope
jbe
lods
lretw
data16
xor
rcrl
dec
imulb
and
lret
mov
push
lret
inc
push
jb
inc
cmp
aam
xor
out
jns
dec
pop
pop
mov
movsl
lcall
movsb
out
mov
lret
je
mov
pushf
sti
std
test
mov
out
pop
test
xor
rcrl
rcr
fwait
imul
push
aam
fwait
dec
pop
in
out
mov
and
mov
in
add
add
sti
xchg
fs
xchg
push
or
rclb
subl
mov
stc
stos
sub
adc
lea
cmp
decl
push
mov
or
cli
mov
or
outsb
idivb
clc
pop
cwtl
and
sub
in
fcmovnb
inc
adc
or
lock
push
push
add
pop
aam
mov
sub
je
decl
cld
inc
repnz
lret
xor
cmp
popf
cmp
shrb
push
or
dec
inc
and
inc
mov
rcrb
push
mov
dec
and
xchg
and
sti
jb
punpckhwd
mov
dec
aas
mov
add
dec
mov
add
xchg
cmpsb
sbb
xlat
mov
pop
out
pushf
pop
andb
jmp
arpl
mov
and
add
mov
or
movsb
js
push
push
cmp
mov
sub
jle
mov
vmovaps
adc
cmc
fdivr
in
and
into
mov
mov
sub
aad
sahf
stos
cs
stos
aaa
or
xchg
sub
mov
clc
xor
xchg
pop
mov
shrl
sarb
pop
repz
aas
push
mov
mov
adc
jmp
loope
cmp
xchg
sub
mov
pop
xor
ljmp
fildl
cmpsl
cmp
insb
movl
out
cmp
shr
jp
jno
aaa
and
mov
inc
pop
jno
es
sti
pusha
add
and
mov
mov
adc
cmp
jge
pushf
loope
out
push
mov
sbb
fidivrs
jmp
stos
divl
lea
out
push
aam
sub
enter
mov
or
and
mov
pop
or
int
xlat
cld
iret
inc
sbb
adc
mov
mov
pop
movsb
hlt
sbb
push
sbbl
cmp
dec
inc
mov
xchg
sbb
jle
notb
pop
inc
movsb
lahf
stos
mov
sub
xor
jl
push
lret
dec
xchg
es
das
out
test
fbstp
loope
sar
add
inc
in
mov
xor
jno
mov
mov
and
add
mov
out
sbb
add
add
ret
add
sbb
jb
pop
xchg
or
fwait
ss
outsl
pop
cmp
dec
cmp
push
inc
dec
jae
mov
repnz
xlat
out
addr16
and
mov
sti
sub
inc
dec
arpl
dec
push
inc
pop
and
das
jns
mov
aad
mov
push
sbb
add
movsb
push
mov
rcl
insb
add
gs
rclb
mov
cmp
outsb
int3
out
pop
mov
push
or
imul
scas
sbb
std
mov
inc
lock
mov
jle
mov
cltd
adc
outsl
aaa
mov
and
lret
lea
out
int3
ret
cli
mov
mov
mov
cmp
pop
call
push
in
js
fisubl
xchg
pushf
and
cltd
test
and
inc
cmp
insb
mov
mov
or
dec
adc
addr16
dec
outsl
inc
js
rcrl
ret
jecxz
or
pusha
int3
rcrl
pop
xchg
subb
adc
cwtl
jmp
jp
ja
cmpsl
mov
gs
cltd
sbb
cld
cmp
pop
js
push
hlt
mov
inc
cmp
mov
xor
dec
aad
outsl
popl
les
fdivrl
out
mov
xchg
fsubl
pop
lcall
lods
push
xchg
test
add
add
sbb
push
int3
or
popf
lcall
insl
mov
push
subl
mov
addr16
add
cmp
xchg
cmp
mov
add
movsl
sarb
pop
popa
xchg
push
mov
cltd
rorl
cmpsb
sub
dec
push
xchg
out
mov
pop
stc
imul
icebp
pushf
sub
adc
cmc
notl
push
orb
pmaxsw
mov
rolb
mov
fucomp
cltd
stos
sbb
fstps
stc
ljmp
or
mov
test
cmc
in
adc
xor
inc
jmp
loope
pushf
or
or
sbb
and
outsl
movsl
aam
push
orl
cli
mov
pop
dec
jae
je
jnp
and
loope
into
ret
pop
push
mov
inc
rcr
popa
adc
jae
fs
push
inc
pop
add
test
into
inc
popa
shll
push
push
push
xor
pop
cltd
jbe
adc
arpl
or
orb
lret
pop
xchg
or
arpl
cld
pop
subl
sub
lds
bound
pop
jl
add
fidivl
adc
add
aam
shl
in
and
pushf
lock
sbb
ljmp
pop
fildll
pop
push
sub
mov
outsb
jae
std
inc
scas
or
jnp
ret
xor
mov
and
gs
push
pop
stc
xchg
loop
inc
jmp
icebp
movb
mov
cmc
xor
shl
dec
gs
mov
jmp
adc
cmpsb
fwait
jbe
mov
jg
mov
rol
xor
stos
ret
int3
cwtl
cmp
popf
stos
add
faddl
cmp
negb
and
in
mov
pop
push
sub
mov
or
xor
pop
shlb
xchg
xchg
shll
dec
out
pop
shrl
cli
xchg
int
sbb
pop
out
movsb
pop
lea
cli
shl
fbstp
je
std
mov
test
cmp
cmp
jge
push
lds
inc
xorb
xchg
fwait
stos
jecxz
dec
xlat
ss
add
in
mov
mov
clc
and
xchg
outsb
push
outsb
out
rol
xchg
sub
or
sbb
pop
ds
loope
or
dec
popf
ja
nop
mov
jbe
hlt
std
fnstenv
add
repnz
cs
mov
mov
push
scas
cwtl
in
sbb
pop
and
jbe
xor
xchg
shll
aam
lahf
xchg
dec
xchg
push
neg
sbb
fld1
outsl
pop
sub
mov
into
mov
sti
dec
jge
or
popf
inc
or
mov
inc
inc
mov
sbb
add
aas
loope
push
rolb
loopne
test
aam
loop
pop
das
enter
adc
mov
fnstcw
sub
and
push
or
and
data16
aas
and
cmpl
jns
jae
xchg
xchg
xchg
mov
pop
sahf
xchg
mov
mov
xchg
in
sub
fs
jne
lods
xlat
sub
dec
cmp
jl
bound
repnz
jle
mov
pop
mov
unpcklps
rorl
jb
ffreep
movl
testb
movsb
pop
jo
lret
xor
xor
gs
int3
out
inc
mov
push
inc
fiaddl
mov
pop
mov
les
sub
ficoms
and
inc
enter
call
sub
jg
inc
mov
xor
loopne
mov
adc
jl
lahf
dec
ja
push
dec
es
pop
mov
fldt
into
sbb
shrb
in
lret
pop
xor
inc
test
ja
mov
ss
jb
pop
pop
xchg
cmp
mov
push
pop
inc
cmp
inc
int
or
jns
pop
mov
stos
dec
mov
xor
jae
pop
dec
pushf
lea
test
add
mov
aam
in
ja
repz
mov
clc
out
and
leave
pop
mov
jmp
push
mov
ljmp
icebp
cmp
inc
dec
loopne
pop
pop
jbe
out
cltd
lods
sub
in
jge
cs
popf
jp
insb
popa
mov
stc
dec
mov
test
mov
leave
lahf
stc
add
sub
in
stc
cmp
movsb
xchg
or
repnz
add
xor
je
insl
fidivrs
inc
xchg
leave
sub
and
inc
enter
data16
lock
add
cmc
xchg
bound
loopne
test
push
xchg
fldenv
jp
lahf
lret
or
add
lods
mov
das
lods
int
aam
icebp
dec
out
mov
neg
mov
ret
jle
jg
mov
sub
pop
and
fwait
adc
sti
fwait
aad
shl
fldenv
and
dec
shrb
adc
into
dec
clc
sub
fsubrl
mov
out
mov
xchg
imul
nop
les
and
push
fdivrl
mov
pop
fstl
pop
stos
push
jae
mov
mov
inc
push
jne
mov
jo
icebp
cmp
dec
testb
inc
cs
outsb
or
cs
es
mov
sbb
aam
jp
std
xlat
mov
xor
xchg
xchg
sbb
daa
inc
pop
aas
jl
and
jge
jns
fstpl
inc
adc
push
addr16
pop
cmp
cli
jae
fwait
lcall
xchg
scas
cmpsb
cmp
out
push
mov
jge
push
rcl
stos
sbb
mov
mov
xchg
divl
pop
pop
popa
arpl
mov
cld
outsb
mov
add
or
cmp
pusha
cmp
enter
xchg
jl
pop
push
pop
in
mov
aad
cmp
aas
sbb
out
mov
inc
pop
push
push
dec
mov
sbb
ss
inc
inc
inc
lock
outsl
movsb
or
fwait
adc
pop
push
hlt
and
add
inc
popf
das
dec
divb
jl
mov
jle
test
and
xchg
jae
mov
rolb
jecxz
dec
adc
mov
rcr
lret
pop
scas
scas
in
les
push
jo
or
es
or
dec
fisttpl
lea
out
push
repz
push
inc
std
mov
gs
jo
lcall
xor
fcmovb
jecxz
pop
outsl
mov
xchg
mov
mov
pop
aam
mov
inc
pop
fstpl
mov
imul
cmp
lea
xor
data16
popa
push
push
jecxz
push
aad
loope
mov
inc
pop
aaa
xor
ret
cmpsb
pop
mov
lds
mov
push
sub
lahf
leave
pop
aam
xchg
mov
xor
lret
jle
inc
in
jp
and
push
rclb
jae
push
mov
ss
inc
mov
in
int3
out
fistpll
push
or
in
push
sbb
and
adc
xchg
xor
or
add
pop
push
and
dec
addr16
inc
and
in
arpl
mov
stos
call
add
push
pop
iret
sahf
inc
or
dec
mov
cmp
mov
or
push
addb
ret
cli
scas
mov
push
jmp
in
ss
leave
xchg
dec
pop
fst
xchg
stos
sub
popa
je
xlat
je
lods
loopne
mov
or
fisubrs
int
jmp
push
xor
mov
mov
xlat
mov
xchg
mov
pusha
xchg
aas
ret
negl
mov
mov
jge
cmp
mov
inc
stc
mov
mov
inc
fnstenv
pop
cltd
xchg
aas
jno
jmp
lcall
push
sbb
mulb
daa
pusha
je
jmp
sub
fwait
xor
cmpsb
test
jmp
repnz
int3
add
pop
dec
xchg
adc
cmp
add
sbb
das
loop
inc
iret
aam
pop
fmul
mov
adc
pop
mov
cmp
pop
int
inc
push
dec
adcb
xchg
push
int
lea
add
lods
in
mov
in
std
push
test
mov
xchg
jo
shl
js
sub
dec
dec
roll
xchg
ret
mov
cmp
adc
subb
inc
sbb
scas
sbb
push
mov
push
cmc
xchg
hlt
fwait
insb
outsl
mov
mov
mov
sub
pushl
sub
mov
cs
addr16
sarb
xor
xor
bound
daa
and
pop
and
jno
xlat
push
sbb
mov
push
lds
mov
out
and
xchg
test
loop
or
cmp
add
fdivp
lahf
push
jns
sti
dec
aaa
sub
arpl
loopne
ret
shlb
imul
aam
aad
inc
int3
insb
mov
xor
fmulp
fbld
imul
mov
xor
sbb
into
xor
pushf
out
pushf
push
jmp
ljmp
xchg
pop
sbb
pop
xor
xor
cmp
mov
jg
pop
dec
jbe
mov
cli
cmp
sahf
jb
cs
ljmp
inc
or
test
out
jb
stos
rcrl
dec
adc
insb
in
aam
pop
and
dec
dec
stos
or
mov
scas
je
push
add
test
pushf
push
es
fisttpll
aaa
or
fdivl
mov
pop
sub
xchg
cmc
dec
leave
inc
and
pop
aam
loopne
sti
and
xor
mov
push
rolb
daa
jmp
mov
or
insb
stc
fs
cmc
gs
cmp
mov
xchg
xchg
bound
inc
push
mov
inc
jp
inc
jp
repnz
out
or
aaa
sub
lds
xbegin
negb
xchg
data16
xchg
inc
out
mov
hlt
out
iret
cmpsb
and
jl
shll
or
mov
sub
shlb
add
mov
mov
jo
aad
sar
dec
xor
adc
sbb
bound
sbb
fidivrs
xor
jle
in
xchg
cmp
xor
mov
addl
sti
mov
mov
pop
pop
stos
lret
mov
aaa
pop
add
adc
stos
cvtdq2ps
dec
pop
loopne
loop
xor
xor
xchg
jecxz
pop
lret
mov
cli
loop
adc
adcl
outsb
or
ljmp
shrb
rorl
cld
pop
lods
mov
mov
cmp
pop
lock
fs
inc
into
lds
js
cmp
xchg
push
or
pmaxsw
pop
or
push
outsl
test
rcll
push
sar
inc
mov
push
dec
daa
jae
iret
adc
je
ja
cmp
pop
sub
pop
aad
sub
or
add
push
pop
les
and
and
pop
add
imul
hlt
repnz
test
test
pop
stc
sbb
xchg
inc
xchg
mov
cwtl
std
data16
fbstp
mov
loop
inc
test
mov
inc
jg
jg,pt
addr16
lret
cmc
test
mov
xchg
fisubrs
stos
dec
sbb
fdivl
mov
loope,pn
xor
push
mov
out
das
or
mov
jo
add
cmp
sub
xchg
testb
mov
outsl
push
movb
aad
adc
inc
cmp
iret
xor
xchg
addr16
inc
insb
in
xchg
sub
xor
hlt
fnstsw
shlb
push
pop
lods
dec
test
inc
lods
push
push
les
mov
cmp
mov
add
lret
jecxz
pusha
call
jmp
out
xchg
movl
mov
cmp
lcall
mov
ret
jge
es
lcall
cs
jae
xor
sub
mov
add
cltd
imul
cmp
rcl
mov
pop
push
and
and
repz
and
in
in
xor
sahf
lahf
leave
or
pop
dec
cmp
push
cmp
sbb
and
subb
int3
inc
mov
mov
pop
xchg
mov
pop
aam
mov
or
idivb
xlat
roll
pop
into
outsl
lods
andb
idivb
xor
xchg
mov
inc
fsubl
imul
jbe
dec
push
pop
and
jae
test
cmpsb
cld
loopne
mov
push
mov
pop
sbb
pop
inc
sub
iret
cmp
mov
aad
lods
inc
mul
lods
mov
add
or
or
push
jae
punpckldq
mov
rcrb
hlt
adc
insb
adcl
jle
or
cmp
cmc
push
cmpsb
stos
popl
jnp
xchg
out
add
cltd
int3
out
add
push
out
push
and
out
sti
cmp
inc
cmc
add
shrl
push
push
mov
push
clc
aas
jg
pop
cmp
and
xor
stc
in
xorb
jb
lds
jno,pn
pop
and
sbb
jecxz
iret
jo
test
mov
xor
mov
ss
pop
mov
sti
sub
push
add
mov
loope
pop
mov
popa
stos
sbb
push
iret
mov
ret
inc
cli
mov
andl
cmp
jns
mov
inc
push
sarb
xchg
or
inc
push
jnp
imull
ror
mov
je
rcl
leave
fs
mov
test
mov
xor
int3
mov
enter
enter
fcomps
pop
pop
adc
outsl
les
or
dec
pop
sar
cmp
fwait
inc
repz
or
pop
movsb
cld
loopne
aaa
iret
je
inc
divb
in
mov
in
add
pop
cmp
or
adc
cmp
js
scas
mov
out
jg
fnsave
icebp
or
in
inc
xchg
xchg
jecxz
scas
or
std
cmp
push
nop
adc
leave
insl
daa
mov
pop
pusha
cli
ss
in
push
and
inc
xorl
iret
rcrl
push
jecxz
mov
int3
push
aam
fmuls
je
stos
jp
fcompl
jae
je
pop
and
je
xchg
lods
loopne
mov
fistpl
stos
nop
xchg
pop
sbb
mov
test
cli
push
jns
xor
in
mov
add
in
add
add
add
xchg
ret
and
fsubl
aam
mov
mov
mov
ja
insl
into
cmp
mov
and
mov
rclb
or
loop
icebp
jae
iret
ret
xchg
cmpl
movsl
outsb
mov
inc
stos
cmpsl
dec
add
xchg
cmp
arpl
test
ret
dec
outsl
aas
pop
in
mov
push
pop
pop
cmp
lahf
lods
test
push
repz
mov
lea
mov
xchg
cmc
xchg
inc
scas
in
xor
pop
pop
add
jae
xchg
sbb
scas
add
xlat
inc
jns
mov
push
mov
test
sbb
mov
lcall
inc
in
in
loopne
xlat
xchg
inc
pop
out
shll
pop
push
xchg
cmp
leave
stos
sbb
out
xor
inc
andl
outsb
jns
icebp
xchg
sbb
rorb
jg
xor
out
pop
inc
adc
jne
dec
push
jnp
dec
bound
mov
test
mov
iret
lock
sahf
pminsw
lds
cmp
push
or
or
addl
shlb
icebp
mov
inc
stc
aas
int3
popa
or
sbb
sub
mov
pop
jo
adc
mov
cmp
push
xor
lods
loop
adc
or
fs
arpl
or
roll
popf
enter
iret
dec
andl
and
enter
imul
and
repz
aam
decl
stos
addr16
cmpsb
push
xchg
mov
test
and
shlb
push
in
pop
lcall
cmpsl
mov
lods
xchg
push
mov
mov
shlb
mov
rcrb
in
xchg
inc
sahf
lds
sahf
bound
sbb
jo
dec
push
jl
jbe
clc
or
push
das
mov
cmc
fcompl
xchg
pop
enter
fdivrl
mov
in
add
icebp
in
out
xor
repz
ljmp
nop
lret
push
sub
mov
inc
xor
imul
add
int
popf
add
imul
lret
xor
subl
fstl
adc
xor
xchg
repz
mov
cmp
or
push
dec
xchg
or
push
shll
push
addr16
sbb
rcrb
aad
adc
int
and
scas
xchg
add
cli
or
addr16
jg
mov
inc
into
xchg
outsb
cmp
xor
loope
sar
mov
lcall
xor
jns
jge
push
mov
pushf
pop
mov
fninit
adc
in
movsl
sbb
dec
mov
pop
arpl
and
imul
ja
fcoml
insb
cmpb
outsl
adc
adc
fildl
shlb
mov
rorl
sub
and
pusha
int
jp
lret
dec
push
les
and
xchg
inc
and
push
repnz
insl
mov
loopne,pt
lds
fs
popf
add
fs
xchg
stc
aaa
pop
push
mov
or
iret
pop
mov
sub
mov
fidivrl
jmp
fildll
xchg
or
adc
xchg
xchg
adc
ds
test
dec
popf
out
mov
xchg
xor
xor
int3
sub
mov
pop
mov
mov
movsl
push
dec
mov
dec
lcall
mov
inc
push
mov
sbb
in
pushf
ficompl
fidivrs
cli
xchg
push
sub
out
stc
jo
mov
nop
xchg
and
and
mov
jmp
stos
repz
and
shl
xchg
rolb
fldenv
dec
sbb
cmp
mov
inc
insb
push
test
add
roll
dec
jae
dec
cmovns
jge
repz
dec
in
inc
push
in
ror
sub
js
sti
adc
and
incl
aas
mov
sbb
xchg
pop
dec
mov
xchg
gs
lcall
and
inc
adcb
sahf
sub
push
adc
mov
or
test
lds
xor
push
push
sbb
loope
jp
jecxz
hlt
inc
lahf
fistpl
push
mov
pop
pop
mov
ret
fdiv
inc
fadds
cld
inc
xor
mov
in
mov
sbb
mov
dec
aam
xchg
push
cltd
gs
push
adc
jl
nop
xchg
call
bound
add
pop
repnz
adc
bound
stos
clc
dec
inc
xor
iret
leave
into
sbb
or
mov
sbb
jno
fdivrl
pusha
xchg
out
fst
inc
sbb
or
dec
inc
mov
mov
mov
mov
sbb
pusha
cli
cmpsl
movsl
xor
test
mov
dec
sbb
lods
push
cmpsl
scas
cmpsb
sub
pop
pop
cmp
add
dec
popf
imul
mov
and
or
xor
stos
data16
adc
mov
pop
jo
ret
push
stc
or
mov
sbb
mul
sbb
xor
call
inc
dec
andb
adc
adc
sbb
dec
test
pop
mov
push
insb
outsl
cmc
clc
jae
pop
push
bound
push
xor
xchg
inc
fists
lods
andb
xor
negb
out
insb
lret
ljmp
xchg
dec
sub
sub
xor
mov
popf
cmpsb
sahf
mov
mov
movsb
push
xchg
jle
lahf
mov
dec
pop
jbe
mov
mov
icebp
dec
adc
arpl
decl
movsl
outsb
push
mov
ret
jge
mov
lret
sub
shr
popa
or
call
adc
sub
mov
adcb
push
mov
jl
fcoms
cmpsl
popf
ror
xchg
aas
cltd
jmp
out
add
mov
dec
ja
pop
xlat
sti
andb
xchg
sub
clc
lahf
std
les
fs
pop
test
fs
add
push
out
add
or
push
stc
push
stos
cwtl
sub
dec
inc
pop
pop
mov
movsl
jo
loop
pavgw
int3
push
cs
fwait
lock
daa
lahf
fisubs
loope
iret
stc
pop
incl
xor
and
push
xor
in
xor
clc
mov
and
ljmp
and
daa
into
add
mov
movsb
jecxz
call
shll
add
fwait
inc
pushf
inc
mov
js
lea
pushf
out
inc
xor
inc
adc
push
enter
push
mov
mov
inc
pusha
fisubrs
jmp
push
loop
inc
leave
push
mov
adc
outsb
ficoms
cmp
fdivrl
push
aas
mov
jne
in
pop
sub
out
add
test
cmp
icebp
outsb
movsb
out
cmpsb
mov
mov
lahf
or
push
out
and
mov
mov
adc
inc
outsb
sbb
test
dec
bound
inc
push
mov
in
in
loope
sub
insb
aad
mov
mov
or
xchg
xchg
in
insl
xchg
out
pop
sbb
dec
sahf
lods
out
inc
lret
lcall
mov
push
es
fbstp
shlb
decl
xchg
push
sahf
test
pop
es
lea
push
jle
push
xchg
mov
mov
mov
push
cmp
mov
cmp
sbb
mov
pop
lcall
sbb
and
mov
jne
push
arpl
xor
pop
add
imul
xor
inc
mov
cmp
lahf
push
es
insb
push
imul
inc
mov
xor
and
lcall
mov
rorb
mov
add
orl
push
pop
or
mov
enter
add
int
xchg
out
sar
jne
out
and
insb
cmp
ja
jl
mov
jb
es
cli
stos
pop
jns
imul
push
test
and
repnz
pushf
cmp
push
loopne
xchg
add
inc
pop
xchg
push
aad
jmp
ret
loopne
sbbb
jle
addr16
mov
clc
sarl
insl
inc
or
pop
popa
xchg
and
push
push
xor
rorl
xor
sub
inc
dec
mov
addr16
push
aam
pop
lahf
inc
pop
mov
gs
dec
inc
ret
mov
test
inc
popf
xchg
call
fistps
out
icebp
pop
inc
pushf
ret
mov
stos
cmp
or
enter
sti
lds
loope
cmp
in
stos
pop
in
mov
push
xlat
dec
xchg
shrb
das
inc
push
xchg
insl
cwtl
xor
jl
or
fmuls
icebp
cmp
push
cmp
popf
outsb
sbb
mov
pop
mov
gs
jo
cmp
jb
jmp
and
inc
inc
shll
loope
mov
push
mov
xchg
sbb
lods
sarb
cld
dec
dec
in
flds
stos
lock
dec
mov
pop
and
ret
fcmovnb
testl
xchg
mov
call
into
cmp
aam
int3
fimuls
dec
pop
sbb
mov
xchg
imul
sbb
xchg
and
pop
cltd
cmp
xor
call
faddp
add
fsubrl
loop
gs
adc
adc
mov
out
mov
mov
sahf
push
lods
ljmp
push
xor
cmpsl
jae
mov
popf
es
inc
outsl
sbb
in
push
pop
insl
fisttps
push
fs
jmp
pop
mov
pop
cmpsb
sar
insb
xchg
jb
les
and
fwait
lds
je
add
pop
mov
leave
push
mov
popf
cmpsl
mov
xor
add
dec
jne
ret
or
dec
addl
dec
movsb
adcl
mov
lods
pop
jecxz
xchg
jp
xchg
xlat
stos
in
shlb
sbb
outsl
add
push
sbb
push
dec
lcall
dec
and
inc
lret
add
add
ds
jecxz
push
and
inc
add
mov
clc
sti
inc
add
and
loop
loope
or
pusha
lahf
sbb
pop
mov
outsb
mov
xor
call
xlat
test
scas
iret
imul
or
xor
fstpl
inc
pop
mov
pop
sub
adc
std
push
lea
sbb
repnz
lcall
xor
arpl
shlb
mov
aaa
mov
dec
xchg
adc
xchg
enter
lock
xchg
test
sbb
sub
sbb
push
sub
and
jg
aam
loop
xchg
jp
in
jnp
mov
sarl
bound
jmp
lock
inc
or
mov
jmp
test
cmp
and
dec
ret
cmp
jbe
faddl
add
hlt
xchg
mov
lcall
aad
add
loopne
iret
mov
ja
test
aad
push
cmp
sti
std
aaa
test
add
sbb
call
pop
and
ja
xchg
jmp
push
negb
repnz
xor
cmpsb
pop
js
mov
push
jnp
test
and
jnp
sbb
push
movsl
push
add
inc
sub
mov
lds
lods
adc
lods
push
dec
xchg
adc
mov
xchg
loope
cmp
lock
cmp
shr
jo
add
das
lea
push
dec
cmp
popf
push
sub
in
xor
iret
xor
je
inc
pop
fbld
loope
lock
test
add
dec
xor
mov
inc
mov
scas
loope
sub
jbe
inc
iret
push
out
gs
ret
punpckhbw
inc
add
subl
mov
mov
inc
xchg
dec
fstl
xor
sub
xlat
sarb
jno
and
test
aad
out
mov
das
loope
jle
fnstsw
mov
punpckhwd
sub
inc
dec
pop
mov
ljmp
mov
push
decl
js
lcall
pushf
dec
or
dec
add
inc
incb
sbb
mov
dec
mov
std
xor
xor
push
aas
push
cmp
and
je
ret
adc
ret
and
imul
xchg
and
and
xchg
add
das
out
mov
xor
dec
dec
lcall
push
xchg
hlt
mov
fbld
scas
jmp
nop
add
cmp
nop
int3
add
ret
lret
out
popa
mov
cmp
bound
cmp
pop
jb
sbb
xor
aas
aad
inc
sbb
or
stos
add
pop
sbb
int3
fadd
add
subb
sahf
adc
jmp
and
add
mov
jmp
pushf
mov
sbb
test
std
test
jne
add
xchg
mov
popf
bound
cs
xlat
cld
mov
test
into
cmp
sub
repz
cs
sahf
pop
loopne
xchg
imul
xchg
pop
mov
mov
leave
inc
popf
shrb
xchg
mov
addl
cwtl
push
cld
xorb
pusha
push
nop
popa
stos
mov
or
mov
lods
int3
pusha
mov
outsl
push
or
stc
fs
scas
and
fsub
inc
test
sub
jp
pop
mov
pop
push
add
cmpl
out
adc
mov
and
xchg
xor
in
int
js
insl
insb
dec
aad
mov
ret
dec
dec
mov
jmp
lahf
push
pop
jg
cli
loopne
inc
cltd
push
in
jmp
mov
faddl
push
sub
xor
es
mov
sub
dec
shlb
push
nop
push
lret
loope
push
movsb
js
ret
aam
sub
or
push
and
push
ret
rcll
insl
sti
sub
cwtl
mov
das
js
xchg
pop
push
pop
je
js
mov
fwait
push
mov
in
in
cmpsl
pop
mov
scas
dec
cli
push
push
cld
cmc
es
pushf
inc
and
add
push
inc
adc
sub
in
roll
mov
or
into
adc
mov
sbbl
dec
mov
dec
xor
mov
into
pusha
xchg
dec
xchg
dec
jns
ds
lea
jae
mov
pop
pause
add
jo
or
int
xchg
mov
mov
adc
add
outsl
jne
adc
and
inc
out
mov
movsl
idivb
aaa
dec
or
cmc
orl
arpl
mov
pop
insl
stos
push
ss
ficomps
scas
xor
mov
mov
mov
jne
cmc
jmp
cmp
rol
cs
data16
repnz
jl
mov
inc
fisubrl
ljmp
int3
or
popf
je
fwait
cltd
stos
xchg
add
jmp
call
ss
jae
mov
dec
sti
pop
jne
lods
nop
sub
push
subb
lret
lea
cmp
sbb
sub
stos
dec
movsl
or
imul
out
xchg
mov
dec
jl
sub
jg
inc
stc
mov
das
mov
push
mov
fistps
andl
andl
push
std
mov
movsb
into
cld
data16
jl
sub
add
ss
scas
or
and
adc
insl
ficoms
xor
xor
or
pop
jge
adc
jp
pop
push
and
daa
add
mov
mov
enter
loop
iret
pop
fisubs
testl
aad
mov
adc
out
loopne
sub
pop
lds
js
aaa
sbb
ss
int
sub
pop
xor
lret
leave
ret
push
sub
movsb
fcompl
clc
adc
mov
cld
xchg
popa
cmpsl
cmp
shrl
or
stc
cmp
xor
fdivrs
fmuls
iret
sbb
loopne
mov
loopne
xchg
idivb
into
jns
push
xlat
lods
mov
fistpll
in
jbe
jno
pop
negl
dec
daa
lock
cwtl
sbbl
fstpt
fsincos
inc
adc
rcrb
js
sbb
idivl
xor
mov
shlb
sub
aaa
iret
iret
aam
fs
inc
fcoml
dec
clc
es
sub
addr16
mov
gs
sub
lds
mov
sbb
fs
out
cmp
add
iret
lret
leave
push
cmp
inc
add
movsl
cmc
sbb
jae
add
mov
inc
pop
imul
and
into
push
daa
or
gs
pop
sub
or
int
out
push
sbb
stc
decb
aas
cld
cmp
jg
filds
fmuls
rcrl
and
dec
push
jnp
rcr
adc
pop
push
mov
sub
cmp
mov
loope
dec
mov
adc
je
addr16
lods
fcos
rol
rcrl
mov
pop
hlt
cs
test
add
outsl
or
stos
lcall
sti
or
dec
pop
test
lods
inc
insb
shrl
pop
and
mov
and
mov
rcrb
fdiv
sahf
out
aad
insl
enter
roll
push
pop
xor
xchg
pop
test
jle
lcall
push
jl
sbbb
dec
jo
push
adc
jl
stos
insl
or
jmp
je
outsl
xor
adcb
les
xor
jge,pn
mov
and
dec
in
jae
mov
rorl
cmp
jmp
in
out
mov
stos
adc
sbb
scas
adc
and
leave
packssdw
stos
pop
fdivrl
not
test
pushf
sahf
mov
shrl
push
sub
mov
sbb
test
sub
jae
ret
adc
ror
je
insl
in
mov
addr16
dec
and
outsb
push
mov
in
nop
xchg
rcrl
lret
pop
ret
int
cmpsb
imul
mov
ror
insl
sbb
enter
sbb
icebp
dec
push
cmp
sahf
repz
xor
push
dec
lcall
mov
add
gs
in
fcomi
xor
push
and
das
pop
push
adc
cmp
jbe
jecxz
adc
pop
inc
mov
xor
inc
xchg
les
or
or
into
xorl
xorb
jne
fdivl
imul
leave
cmpb
mov
pusha
aaa
add
pop
dec
ret
cmpb
lods
jnp
dec
movsb
cwtl
lret
fsubs
je
or
jge
sub
mov
stc
xchg
push
push
repz
aas
jp
jbe
mov
adc
stos
enter
stc
xor
in
call
push
mov
cmp
loope
insl
lock
insb
jg
xorb
fcoml
jbe
movsl
pop
lcall
mov
pop
es
ss
cmp
rolb
mov
cwtl
and
push
pusha
icebp
xchg
add
les
cwtl
xchg
pop
loop
jns
sub
leave
subb
inc
xor
ljmp
xchg
lock
xchg
push
in
adc
mov
xchg
ja
mov
push
sarl
addr16
mov
mov
mov
aad
mov
mov
mov
clc
prefetchw
mov
cli
push
int3
push
stc
fs
fwait
in
and
lret
lds
in
dec
mov
mov
mov
out
pop
push
fldl
sub
sbb
push
cmpsb
mov
in
faddp
outsl
add
push
push
stos
rcl
lods
mov
and
gs
int
scas
popf
and
cltd
fmuls
mov
outsl
jl
icebp
movsl
loop
push
sub
push
jb
adc
mov
push
push
adc
push
dec
cmp
add
adc
cmp
dec
les
push
stc
mov
rcrl
push
scas
jmp
jge
iret
in
mov
es
dec
cltd
inc
mov
notl
pop
lods
jae
sub
jge
pop
xor
fidivs
inc
psubd
repz
loope
jo
lcall
js
xor
push
sub
push
shlb
jmp
dec
cmpsl
sbb
mov
mov
mov
sti
push
sub
cmp
xor
orl
and
pop
or
xlat
rcll
cmp
jbe
cmpl
shll
mov
push
mov
insb
xchg
mov
dec
add
cmp
ficompl
mov
shr
and
in
aaa
outsb
in
mov
mov
sub
add
cmp
aad
pop
jnp
adc
pop
push
shlb
shrl
cmp
push
in
loop
add
fistpll
cmpsb
stos
lea
xchg
mov
shll
adcl
or
daa
cmp
ds
xor
sub
lods
fldl
jbe
cmp
cmp
mov
sub
or
adc
int
pop
dec
push
pop
sbb
push
xor
or
inc
sbb
and
divb
movsb
inc
mov
addr16
clc
xor
stc
cmp
inc
dec
loope
lahf
loop
notb
mov
es
and
fidivrs
sub
in
pop
pop
aad
arpl
mov
add
cmpsb
stc
in
push
ficomps
dec
hlt
repnz
xor
in
mov
fcompl
test
fbld
mov
or
call
gs
sarb
cmc
jg
push
xor
shl
andl
in
lds
movsb
mov
push
dec
hlt
push
and
lods
push
js
inc
adc
mov
mov
jnp
mov
in
sbb
data16
mov
or
addr16
xor
push
popa
fwait
rorl
jnp
inc
mov
cmp
cmpsb
jbe
xchg
fldt
lock
cmp
aad
repnz
fwait
hlt
adc
push
or
jb
jmp
sbb
cmp
inc
and
iret
add
cmp
in
jecxz
ss
or
ficomps
loopne
fldt
dec
xlat
sbb
inc
cltd
shll
mov
rorb
sbb
outsl
xor
mov
stc
aas
dec
sbb
mov
sub
scas
in
mov
xchg
ret
cmp
dec
in
lds
jo
inc
insb
dec
cmp
fbld
testl
cltd
xor
clc
xor
xchg
mov
push
stc
cmpsl
aaa
and
mov
mov
sbb
lds
and
es
hlt
pop
sub
leave
pop
cmp
negb
mov
mov
mov
jne
loope
aaa
and
lods
fstpl
cwtl
repnz
mov
dec
pusha
iret
adc
scas
lds
and
push
sub
xlat
lret
mov
fadd
sahf
clc
push
cs
js
gs
cmpsl
mov
cmp
fwait
bound
push
mov
sub
ljmp
sub
xchg
ucomiss
and
in
push
fdivs
sub
jo
fidivrl
jb
rorb
mov
test
out
filds
nop
push
les
push
movsb
loopne
dec
xchg
push
jecxz
loop
test
sub
cwtl
sub
sarb
xor
sbb
lods
xchg
imul
lods
mov
in
in
lods
push
push
push
and
mov
loope
or
iret
call
adc
pop
lea
testl
ljmp
sbb
jnp
xchg
mov
jns
xchg
lock
sub
jl
pusha
arpl
dec
call
or
sbbb
call
stos
std
repz
stos
mov
jo
stos
fiaddl
cmp
stos
aaa
scas
and
out
cmpsb
nop
nop
push
sub
dec
push
je
pop
mov
lock
mov
ret
inc
xor
adc
stos
push
insb
jno
adc
cmpsb
popf
push
sbb
jmp
insb
lock
lret
add
jg
mov
mov
imul
daa
fimuls
inc
cmpsb
int3
das
jae
xor
sub
xchg
and
nop
pop
popf
int3
cmc
adc
adc
mov
push
das
fcoms
dec
nop
xorb
mov
lods
mov
mov
cmpsb
lret
cmp
cmpsl
mov
clc
dec
das
lret
pop
lds
cli
add
xor
aas
sub
pop
test
mov
sti
ss
add
daa
cmp
ret
mov
xchg
mov
jb
fnstenv
mov
ss
int
add
cmp
and
jne
or
dec
out
ret
mov
adc
cli
arpl
out
iret
add
rcrb
cld
scas
sar
movsl
inc
cmp
push
jmp
xsave
mov
dec
mov
add
sub
hlt
mov
movsl
or
jae
ljmp
sbb
and
loopne
dec
cmc
add
jo
dec
xchg
sbb
mov
scas
js
mov
in
mov
out
js
sbb
or
xchg
shlb
xchg
or
adc
adc
ljmp
jge
push
out
or
icebp
mov
out
cli
inc
add
push
and
push
out
lock
jecxz
call
add
cltd
test
sti
or
bound
inc
fsub
jge
cmp
inc
inc
notb
push
cli
ret
outsb
jnp
sub
mov
hlt
push
mov
cmp
sub
dec
aaa
pop
xlat
jo
popa
in
movsb
sti
mov
push
in
cmpsb
add
mov
xchg
shlb
add
lret
movsb
rorl
mov
add
pop
jae
test
lahf
pop
add
cli
push
daa
mov
bound
das
push
jmp
cmp
subl
mov
push
inc
sub
jl
sub
enter
lods
dec
jo
sbb
cmpsl
pop
dec
xor
pop
ss
and
xchg
aaa
in
mov
xor
pusha
adc
fisttpl
pop
sbb
cli
pusha
xlat
xchg
push
mov
mov
nop
push
jp
fcomps
jnp
sti
sbb
sub
pop
jno
jle
add
xor
rclb
mov
xchg
stc
xor
std
cli
dec
dec
mov
push
lea
sti
and
hlt
sahf
insb
sub
call
mov
sbb
flds
and
out
mov
push
btc
inc
add
bound
push
xchg
adc
sbb
mov
xor
pop
xor
push
adcb
xchg
aaa
sub
sub
cwtl
xlat
frstor
in
cmp
in
ja
and
rorb
jge
xor
cld
js
fsubrs
push
jmp
cmp
or
xlat
adc
imul
outsl
or
ret
mov
out
dec
data16
outsl
and
ds
sbb
arpl
sub
mov
out
sbb
dec
mov
in
and
mov
push
call
inc
jecxz
jmp
xor
xor
mov
dec
outsl
adc
cmp
mov
jbe
xchg
cmp
outsb
xchg
dec
ficoms
cwtl
popf
mov
daa
repz
xor
jb
mov
inc
pop
shrb
inc
gs
mov
push
js
or
push
push
scas
mov
orl
xchg
mov
arpl
and
dec
add
lods
pop
iret
or
loope
xchg
pop
cs
pop
fwait
mov
xchg
out
mov
testb
fsubl
adc
jmp
in
mov
test
stc
daa
push
or
inc
jns
cmp
mov
cmp
sub
mov
and
xchg
dec
ss
and
shlb
jb
sub
dec
xchg
push
jl
jp
sbbl
bound
mov
inc
pop
loop
pop
mov
and
into
leave
data16
mov
leave
jae
lcall
pop
xor
inc
or
adc
movb
adc
jb
cs
adc
insl
cmp
xchg
pop
xor
xor
data16
xchg
or
or
adc
pop
xchg
jb
pop
cmpsb
in
es
jbe
push
in
or
aad
int3
push
add
dec
or
fsts
and
sysenter
stos
jmp
test
mov
push
sbb
and
test
mov
mov
aam
dec
pop
xchg
mov
add
or
push
mov
pop
es
sub
push
scas
sbb
int3
ret
sub
lea
mov
inc
dec
fxch
inc
out
inc
leave
xor
xchg
ss
add
jg
daa
test
push
xchg
ret
pop
fimuls
test
push
and
bound
cli
clc
mov
add
add
fsts
ss
repnz
push
push
pusha
fdivrs
add
pop
cmp
nop
mov
adc
movsl
push
adc
test
jb
xchg
pop
add
aas
icebp
and
mov
mov
loopne
xor
les
sbb
dec
sbb
or
test
repz
jno
pop
jne
out
arpl
shlb
and
mov
loop
repnz
imul
dec
add
add
push
hlt
mov
push
xchg
mov
jnp
cltd
sub
jecxz
cmpl
les
vorps
jecxz
mov
mov
cli
or
push
outsl
enter
out
push
cmpsb
dec
aad
nop
push
inc
enter
stos
push
mov
mov
rorb
xchg
sub
iret
imul
ret
xlat
push
pop
bound
xchg
jno
clc
in
je
sub
dec
xchg
fwait
mov
lds
jp
repnz
and
shlb
jno
push
pop
add
test
push
and
outsl
xor
lret
stos
jmp
sub
push
pushf
adc
jp
cwtl
xor
jg
jp
xor
out
int3
fidivs
inc
ss
or
shrb
cmpb
ljmp
mov
xor
mov
inc
adc
int3
rol
mov
push
mov
test
repz
inc
push
fistpll
xchg
repnz
cmpsl
lcall
dec
int
sub
dec
or
mov
and
mov
fnstcw
mov
mov
and
imul
lcall
test
push
xor
movsl
dec
enter
inc
nop
sbb
cwtl
popf
jae
pop
dec
mov
adc
test
fwait
in
xor
nop
pop
fstpt
xchg
js
cmp
aaa
in
lret
push
mov
mov
sub
mov
in
aaa
leave
or
stos
fisubrl
and
addr16
jp
cmp
dec
sbbl
cmc
pop
mov
cs
cs
test
hlt
lret
add
xchg
or
stc
push
adc
pusha
daa
je
sbb
insb
inc
in
insl
cmp
mov
pop
mov
cld
stos
fists
stos
push
fstps
mov
in
das
lret
scas
loopne
push
gs
xlat
fmull
add
jno
xor
das
cmpsb
jno
dec
out
push
jecxz
cmp
nop
repz
lods
enter
sub
mov
add
aas
stos
inc
cmp
in
fwait
enter
add
das
sub
ljmp
adc
xchg
pop
ss
mov
jge
fldenv
mov
lret
divb
mov
pop
sarb
push
sub
adc
adc
push
push
dec
mov
sub
pop
loopne
fistpll
fists
stc
nop
fstl
cmp
inc
push
fs
out
loope
sub
test
fildll
add
jg
fisttpl
or
pop
jb
ja
in
into
inc
cmp
mov
jp
cmp
cmpsl
sub
insl
sahf
fdivl
arpl
sti
icebp
loope
fldl
ret
lcall
fcmovnu
cld
data16
adc
inc
xorl
add
jecxz
rcl
aad
adc
xchg
pop
dec
sbb
jge
test
icebp
das
lea
xchg
add
pop
mov
mov
gs
mov
fistps
ljmp
jecxz
jmp
and
push
jmp
and
jge
push
addr16
sbb
enter
xchg
fcoml
faddp
mov
mov
sarl
jo
dec
or
cli
pop
xchg
mov
jmp
push
or
jp
stos
es
stc
into
jecxz
es
sbb
cmp
mov
pop
mov
adcl
popa
sub
xor
cmp
jp
subl
stc
or
fld
in
mov
or
or
xor
jne
xlat
fs
fidivrs
out
mov
sub
ljmp
jno
lcall
ss
mov
adc
adc
pop
das
mov
roll
push
xchg
push
dec
sti
fdivs
leave
int3
pusha
mov
or
dec
lods
pop
sub
pusha
mov
enter
je
insl
inc
fidivrs
repnz
jnp
mov
jge
cmc
sbb
xlat
daa
push
or
je
push
fadds
push
or
adc
mov
sbb
loopne
jbe
or
data16
lods
xor
testl
out
fimull
jo
fldl2e
mov
mov
inc
div
cmp
xor
dec
jl
ds
test
mov
inc
dec
adc
fldenv
dec
fs
insl
ret
mov
cli
xchg
jbe
in
les
stos
imul
push
pop
iret
dec
dec
fs
push
xchg
pop
rol
jae
pop
xchg
cwtl
popf
imul
add
pop
xlat
pop
jp
mov
stos
add
sbb
xchg
xchg
cli
adc
pop
xor
adc
push
jns
push
sbb
rorl
fst
mov
repnz
cmp
jb
dec
inc
add
push
jns
repnz
jg
bound
dec
sbb
push
out
push
sti
mov
repnz
add
sub
xchg
mov
or
movsb
std
cmp
in
mov
pop
jmp
pushf
cmpsb
adc
notl
cltd
clc
cmp
fdivrs
or
outsl
sbb
and
cs
xor
jb
ds
add
sbb
xchg
std
lret
fbld
cmp
cltd
stos
dec
aam
jmp
jl
idivl
mov
cmpsl
mov
clc
push
in
dec
ret
xchg
and
in
in
xchg
in
lret
and
dec
leave
mov
sub
pop
ret
mov
xor
ret
adcb
out
or
int3
repz
push
lea
xchg
scas
sub
or
mov
jbe
lock
cmpsl
movsb
pop
pop
test
mov
movsl
mov
lods
mov
fnstcw
or
lea
mov
rolb
push
rolb
ret
mov
js
jae
addr16
stc
ljmp
sbb
mov
mov
in
adc
push
mov
out
shl
and
cld
pop
or
fucomi
mov
pop
popf
movd
jae
outsl
mov
push
shlb
jle
leave
dec
sti
jle
lock
dec
lret
jae
add
jno
xorl
xchg
jnp
adc
mov
ret
mov
jmp
jb
xor
les
sbb
std
mov
pop
rcll
out
or
mov
push
lock
js
sti
or
cmc
call
mov
adc
add
fwait
sub
pop
call
out
mov
sbb
dec
dec
mov
mov
jle
jg
xchg
orb
leave
adc
loopne
in
adc
out
rorb
sub
pop
push
clc
sbb
xchg
hlt
jae
inc
jne
push
daa
popf
aam
rcr
cmc
mov
daa
sbb
ret
test
push
cli
ss
jbe
jns
inc
andl
or
pop
mov
sbb
loop
xchg
dec
dec
enter
sbb
ret
jae
out
mov
hlt
xor
adc
mov
je
adc
push
sbb
or
xchg
pop
insb
arpl
cltd
mov
fmuls
mulb
pop
and
sahf
jo
std
je
imul
imul
aaa
das
rcll
orl
repnz
icebp
test
in
loope
js
mov
data16
and
push
enter
lods
scas
and
cltd
icebp
lahf
inc
cmp
mov
enter
and
dec
shlb
cwtl
mov
xor
sub
pop
push
dec
dec
inc
dec
cltd
scas
sti
jmp
ret
out
ret
cmc
push
outsb
cwtl
popa
inc
push
arpl
mov
ds
stos
out
inc
insl
xor
mov
dec
xor
dec
test
or
iret
sbb
xchg
push
adc
push
dec
popa
mov
push
add
in
das
lcall
push
imul
adc
cltd
sahf
cmpsb
enter
dec
test
pop
leave
xchg
push
jno
mov
dec
mov
lahf
fistpl
or
sbb
mov
lret
repz
and
repnz
mov
pusha
lcall
mov
inc
or
mov
push
push
movsb
cli
and
es
testl
mov
mov
and
and
or
mov
inc
sbb
cmp
xchg
push
mov
test
push
call
fnclex
xlat
scas
dec
test
lods
jno
ret
sub
ja
xor
ficompl
push
insl
inc
lcall
xchg
ficoml
insb
fisttps
sub
add
les
ret
mov
sti
inc
pop
jle
mov
scas
sbb
mov
sub
mov
or
pop
in
shrl
push
xorb
int
jmp
pop
sub
mov
sub
jmp
aas
stos
xchg
dec
imul
dec
shr
test
sbb
cli
ja
ret
inc
jbe
imul
cmpb
lea
lods
nop
xchg
mov
cwtl
mov
xor
pop
and
mov
mov
adc
nop
push
inc
add
mov
dec
clc
mov
add
mov
jbe
iret
sbb
neg
fistpl
dec
mov
mov
test
divb
mov
pop
xchg
out
inc
mov
add
xchg
push
mov
outsb
loope
pop
call
sarl
lcall
mov
add
xor
dec
inc
sub
stc
jp
push
mov
mov
in
loopne
cmpsb
inc
jae
jmp
into
mov
push
adc
or
lahf
idivb
cmp
call
push
cmp
les
in
push
movsb
les
sub
in
or
dec
dec
pop
cmp
insb
test
or
and
mov
mov
jl
xchg
andb
jo
cmpsb
sub
mov
pop
jbe
aam
xchg
dec
sbb
add
push
in
push
mov
xchg
mov
inc
jmp
xchg
dec
fs
add
dec
lcall
data16
cmp
xor
sahf
adc
lahf
or
dec
jge
in
push
fwait
es
push
push
in
push
push
cli
mov
add
mov
push
mov
and
mov
adc
repz
loope
pop
inc
pop
loopne
sub
cmovbe
mov
and
cmp
cld
cmp
pop
cltd
cltd
inc
orl
sub
sbb
pop
jnp
xchg
clc
cli
xorb
mov
mov
pushf
daa
outsb
clc
mov
popf
in
cmp
jl
scas
test
dec
jl
xor
mov
stc
jmp
and
mov
cwtl
jge
popa
xchg
daa
mov
in
adc
stos
push
testl
outsb
and
adc
les
push
push
sbbb
jp
push
nop
xchg
sbb
es
stos
push
jnp
or
das
cmp
jmp
push
xor
sub
fstp
mov
adc
xor
push
into
mov
stc
push
rcll
js
mov
xor
shr
arpl
xchg
lock
push
out
sub
or
cmpl
mov
cmp
inc
rcrl
in
jb
in
lea
xlat
push
cwtl
sti
mov
dec
or
inc
adc
push
int3
sbb
popf
pop
jae
rol
jae
test
shlb
aas
aaa
xchg
inc
pop
mov
sbb
insb
dec
mov
xor
add
inc
or
leave
out
sub
dec
inc
subb
cmp
dec
jnp
or
mov
and
and
xchg
pop
int3
xor
ret
add
test
pop
cmp
jge
cmp
mov
pop
or
jo
fcoml
lods
mov
je
aad
iret
and
xor
loope
test
pop
mov
and
mov
mov
mov
mov
popa
cmp
xor
insb
xlat
lods
lahf
mov
sub
fs
mov
pop
lea
out
stos
call
fdivrl
add
test
push
fs
jle
cmp
mov
sbb
sub
and
fcoml
mov
mov
xchg
mov
popf
sbb
adc
out
or
dec
adc
or
in
ffreep
pusha
mov
out
mov
stos
ret
add
push
cmpsl
cmc
cmp
mov
js
test
out
xchg
jae
fisubrs
decl
aad
pop
popf
inc
adc
sti
xor
push
stc
jno
push
sahf
cltd
push
sti
cmc
xor
fsubrs
cwtl
add
call
and
and
pop
inc
lods
mov
outsb
inc
js
aam
movsl
in
icebp
outsb
pop
in
or
and
lahf
jns
or
fwait
cmp
sub
mov
mov
pop
bound
push
xorb
sub
cmp
enter
mov
mov
test
cmp
jns
jns
ret
lret
mov
or
push
sbb
and
subb
xchg
xchg
sub
sbb
ljmp
jmp
imul
jno
cmpsl
loop
pusha
cwtl
ja
sub
cmp
mov
jl
sub
mov
loopne
inc
push
sbb
mov
mov
mov
sub
inc
imul
push
push
or
xor
lret
add
cmpsl
fwait
ss
scas
mov
in
jle
mov
xchg
jne
sbb
jns
nop
aam
repz
dec
hlt
cwtl
in
call
jge
pop
xor
outsl
daa
inc
push
mov
mov
nopl
lea
mov
aas
mov
mov
lds
icebp
sbb
xchg
mov
add
xlat
mov
outsb
sbb
in
cs
andb
mov
lods
sbb
les
jg
clc
idivl
adc
in
xchg
mov
sub
push
inc
cmp
cmp
adc
or
push
andl
lcall
movsb
fucom
cltd
pushf
lret
or
roll
rclb
inc
push
call
stos
inc
ret
fsubrl
cmp
call
mov
pushw
xchg
lods
sub
adc
mov
inc
pop
call
dec
or
repnz
mov
cmp
add
ss
pusha
loopne
push
cmpl
cs
dec
inc
rep
and
rol
push
outsb
push
lcall
jno
stos
mov
or
sub
push
mov
lds
cmp
pusha
jecxz
push
mov
in
stos
in
sarb
jl
mov
pop
cmp
push
fnstenv
mov
mov
inc
icebp
jbe
mov
ljmp
in
andb
jne
or
cld
mov
or
lods
pop
lret
add
daa
jmp
je
test
fidivrl
pop
bound
push
xor
cmpsb
mov
sarl
jmp
pop
lods
mov
stc
sbb
data16
pushf
ljmp
adc
mov
dec
int
mov
cmp
mov
loop
cmp
dec
js
mov
fdecstp
mov
sbb
mov
lahf
les
jmp
mov
sub
lds
jle
mov
sub
dec
and
outsl
adc
movsb
test
and
movsb
cmp
lcall
add
lods
mov
jmp
add
inc
call
dec
mov
cmp
jecxz
fnstenv
adc
dec
jne
pop
push
das
and
xlat
in
jbe
mov
cmc
cmp
and
xchg
lods
std
push
push
or
std
orb
pop
and
addr16
popa
out
xlat
inc
ret
push
push
xchg
je
cmpsb
repz
xchg
mov
movsl
jo
jg
subl
shlb
scas
dec
aas
pop
or
gs
out
push
or
aam
inc
adc
mov
iret
adc
imul
cmp
hlt
aam
les
xor
shl
add
push
sahf
push
cmp
icebp
dec
and
mov
clc
loope
stos
into
and
lods
xor
addr16
adc
movsb
cmp
adc
mov
pop
or
and
das
sbb
movb
clc
xor
out
fcomp
jne
pop
sti
test
xchg
mov
push
adc
leave
in
pop
icebp
xchg
popa
dec
pop
pop
rcll
aaa
ds
mull
or
push
dec
xchg
mov
pop
jnp
lahf
lea
lea
aad
bound
xchg
xor
xchg
inc
jp
jecxz
bound
sub
int3
jge
jmp
cmc
mov
sbb
repnz
loop
and
fcoms
adc
fcomip
and
in
fnstsw
xchg
pusha
sbb
fstl
cmp
xchg
jno
push
mov
mov
inc
pop
int
in
push
sub
sub
jno
std
into
mov
inc
add
inc
popa
mov
mov
js
or
mov
mov
imul
push
sti
and
cwtl
cltd
dec
mov
mov
mulb
out
jo
loopne
or
xor
push
imul
pop
cs
hlt
mov
sbb
sbb
pop
fnstenv
mov
scas
rcll
sbb
fiaddl
push
sbb
pop
mov
adc
les
out
aam
mov
lock
fdivs
mov
adc
mov
imul
xor
sub
in
jne
out
jns
mov
in
in
orb
inc
cmp
dec
jecxz
in
ja
pop
data16
mov
out
int3
gs
shrb
cmpsl
mov
push
push
hlt
movsl
shlb
sti
rolb
out
rcrb
push
dec
fmuls
pop
xchg
test
or
filds
mov
push
xchg
inc
adcl
fcomps
xor
jb
xchg
xor
xor
test
stc
cmp
push
add
fs
aam
ret
push
rcrl
cli
inc
inc
cmp
test
sbbb
cld
int
rolb
addl
pop
repnz
pop
mov
push
pushf
fnstsw
dec
mov
daa
ss
dec
repz
ja
pop
nop
mov
ja
out
inc
in
gs
mov
pop
cmp
lea
ret
mov
add
lods
lds
add
rcrb
stos
cmpsb
popf
jmp
lds
inc
lods
xor
int
push
pop
add
aam
cltd
inc
add
push
inc
add
xchg
aaa
movsl
addb
lret
lret
movsl
pop
inc
inc
sbb
xchg
lret
stc
sbb
imul
orl
pop
lahf
dec
leave
roll
sub
in
aas
iret
dec
scas
add
xchg
les
and
inc
cs
xchg
and
push
inc
jecxz
push
sub
mov
pop
cmpsb
clc
cmc
loope
mov
sbb
sbb
pop
test
es
push
hlt
pop
pop
inc
sahf
dec
dec
int
pop
mov
popa
inc
incl
mov
rorl
mov
out
or
xchg
xor
pushf
inc
std
ss
enter
test
push
add
fdivp
rol
cltd
pop
fidivl
les
xchg
mov
mov
sub
scas
mov
sub
outsb
adc
push
mov
dec
jnp
icebp
in
jb
std
push
insl
loopne
test
push
and
iret
push
mov
lret
and
mov
jle
inc
mov
cmp
pop
mov
pushf
es
gs
repnz
mov
jae
jo
hlt
aam
mov
dec
inc
jp
arpl
inc
mov
test
fcmovnb
std
or
adc
lcall
mov
addr16
fs
fs
movsl
push
gs
push
cmp
mov
push
repz
not
jl
jb
mov
mov
pop
andb
xor
jbe
fldl
mov
push
push
fldenv
mov
popf
fcoml
jno
les
push
pusha
xchg
xchg
sub
test
inc
pushf
js
or
sub
adc
pop
cmpsb
mov
inc
add
movsb
adc
or
sbb
adc
in
jmp
rcl
lahf
mov
std
mov
into
out
lcall
jmp
orb
jge
mov
push
inc
sahf
dec
fistpl
push
pushl
sbb
add
andl
xor
and
cmp
in
push
int3
sub
lods
or
jno
insl
ffree
cs
mov
cmp
sub
aas
in
or
lods
push
or
cmpsl
pop
cld
xor
adc
pop
add
repnz
pop
rorl
xor
lds
sahf
jb
mov
fadds
xor
sbb
fwait
jbe
movsb
push
in
ja
jle
aaa
gs
and
lods
popa
fistpll
xchg
pop
dec
cmpb
data16
fmul
sub
adc
int3
sub
mov
sbb
inc
pop
in
add
inc
loopne
sub
test
nop
dec
and
mov
push
cltd
sub
mov
mov
sbb
mov
lods
in
std
int3
mov
es
jg
xchg
sub
sti
sub
mov
mov
jp
sbb
pop
leave
mov
std
pop
stos
js
out
xchg
std
mov
add
leave
movsb
mov
addb
pop
aaa
sbb
sub
stos
pop
mov
insb
test
adc
int3
stc
fucomp
push
mov
lahf
xchg
movsb
data16
sbb
imul
inc
das
dec
testb
sbb
jb
aas
mov
les
stc
pop
cmpsl
xor
das
inc
ja
fnstenv
cs
pop
loop
test
lret
sbbl
outsl
sub
cmpsb
dec
push
popa
cmpsb
pusha
mov
ret
fdivp
add
mov
cmp
sub
mov
in
in
rolb
imul
push
mov
insl
repnz
ficoml
lods
imul
and
lret
sub
sub
ds
out
bound
insl
mov
sbb
sbb
and
cli
sarb
into
stos
add
dec
lret
mov
mov
push
shll
and
es
jg
repnz
lods
aas
inc
pop
fmulp
xor
push
fcomps
mov
pop
out
movsb
cli
mov
dec
add
xor
ret
fldcw
sub
imul
push
xchg
inc
lret
sahf
mov
insl
mov
push
add
stos
push
xchg
jl
xor
lods
stos
adc
sub
lock
push
imul
and
mov
ss
ljmp
into
insb
ljmp
data16
push
xchg
or
data16
and
aas
movb
jp
add
aad
mov
andl
dec
mov
jp
icebp
out
xor
arpl
ret
scas
out
xorb
inc
add
cmp
cmp
cmp
aaa
outsb
ja
ja
pop
and
sbb
dec
loopne
push
jge
pop
or
mov
test
jbe
repnz
push
dec
negb
jbe
add
rcr
cltd
inc
pop
and
xchg
dec
cmp
mov
xchg
adc
mov
mov
dec
xor
mov
sbb
cmc
sub
cmp
das
push
pop
aam
imulb
movsb
xor
out
and
mov
addb
cmpsb
lock
dec
and
in
jbe
xchg
cwtl
dec
xchg
in
fwait
add
jb
scas
and
nop
xor
mov
out
sbb
leave
cld
xor
cmp
test
mov
mov
imul
cwtl
mov
int3
decl
mov
xlat
or
lahf
mov
daa
push
adc
rolb
mov
mov
sarb
sbb
inc
loop
lahf
xchg
mov
into
into
or
loopne
insl
dec
gs
xchg
cs
outsl
outsb
or
testb
sub
dec
and
dec
adc
repz
arpl
adc
shl
loop
jb
pop
jnp
stos
sbb
int3
test
stc
out
fldl
push
inc
clc
push
adc
push
outsl
cmpl
out
mov
push
repnz
xchg
hlt
popa
aad
stos
aam
push
addl
pop
mov
and
enter
repnz
stc
mov
aam
cmp
je
pop
dec
mov
stos
and
insb
shrb
xchg
mov
jecxz
or
lods
push
faddl
cmp
stos
inc
fimuls
repz
fsubr
cli
outsl
fs
xor
inc
repnz
cmpsl
dec
gs
fmulp
inc
rcll
cmp
jecxz
pop
xchg
in
add
jmp
into
test
mov
fdiv
scas
mov
sbb
mov
cmc
js
sbb
adc
pop
add
popf
push
fdivrl
out
subl
fsubs
mov
outsb
inc
xchg
aad
sub
repz
and
fidivrs
push
sbb
jge
aaa
dec
jae
sbb
lahf
xchg
bound
cmp
mov
outsl
insl
mov
into
mov
sub
pop
outsb
mov
sbb
push
jmp
lock
adc
xlat
pop
and
add
outsl
or
xchg
test
jns
jne
mov
stos
dec
jnp
inc
lea
or
gs
pop
jo
loope
or
jo
popa
insl
test
adc
in
loop
enter
orb
mov
adc
xchg
ficomps
fwait
mov
int3
aad
lea
shll
cmp
orl
or
rorb
loop
mov
push
test
add
fisubl
jecxz
aam
or
add
push
addr16
push
fildl
sbb
repnz
addl
cli
xchg
hlt
xchg
xchg
push
push
mov
add
pop
or
inc
sbb
lea
adc
repnz
loope
cmpsl
sub
push
push
enter
dec
sub
xchg
shll
ss
pop
push
sbb
push
sbbb
push
aaa
scas
lret
push
hlt
push
cs
popf
iret
imul
in
loop
rclb
xchg
jns
mov
lods
push
sbb
aaa
arpl
lock
cmp
add
stos
repnz
dec
and
loopne
ret
aas
addr16
xchg
sub
mov
adc
subb
nop
mov
subb
push
test
sub
jns
sub
lock
subl
mov
inc
mov
lcall
adc
jnp
or
das
add
stc
or
repnz
arpl
cmc
xchg
int3
addr16
inc
outsl
lret
movsl
insb
sahf
rcrb
idivb
sti
jmp
inc
jge
loopne
jb
aaa
popf
push
cmp
dec
xor
dec
xchg
mov
insb
aad
mov
mov
mov
out
cmp
dec
push
lds
cmpb
adc
out
neg
jae
outsb
aaa
fwait
iretw
imul
jmp
sub
inc
add
cwtl
lahf
cmpsb
lds
add
inc
jge
fwait
aad
das
xchg
dec
xor
loope
sbb
popf
andl
mov
cmc
push
es
fisttpll
sbb
mov
js
mov
mov
out
jge
jns
mov
ret
dec
mov
imul
adc
xor
or
sahf
ss
sbb
push
ljmp
stc
cltd
sbbl
fisubrs
fs
popf
pop
subl
test
pop
clc
js
test
mov
mov
jmp
outsb
pcmpeqw
pop
das
mov
jb
push
push
sub
popa
ret
inc
shl
sbb
pop
test
ret
cmp
sub
not
scas
test
gs
mov
pusha
stos
jl
dec
dec
imul
scas
sbb
pop
sbb
cwtl
cmpb
xchg
imul
insb
lods
hlt
adc
scas
mov
or
aaa
scas
out
jae
aaa
push
pushf
fwait
jb
test
inc
cmpsb
pop
inc
insl
cltd
pop
pop
in
cld
push
adc
fisttps
shl
and
adc
mov
stos
and
xchg
mov
lahf
subb
jbe
inc
jecxz
lods
mov
push
mov
pop
mov
ficoml
repz
push
test
xchg
out
mov
xchg
arpl
jns
sub
cmp
jno
jae
jbe
ds
xchg
xor
cwtl
fisubrl
dec
mov
int3
xor
xor
xor
mov
sahf
les
lods
out
popf
dec
pop
and
shl
insl
leave
sub
xchg
nop
repz
shrl
inc
ficompl
add
pushf
scas
bound
in
sbb
dec
popa
adc
jns
and
add
inc
add
push
jnp
inc
les
and
inc
xor
movsb
cmp
aas
fldcw
fs
bound
cld
xchg
loop
fs
xchg
daa
mov
cmp
mov
addr16
xor
out
dec
cs
adc
ds
addr16
pop
in
or
add
icebp
hlt
pop
dec
or
outsl
mov
jns
dec
pop
push
pop
pop
fisubrl
in
scas
mov
test
add
cmp
das
movsl
clc
mov
psubsw
mov
xor
sub
xchg
fdivl
inc
jo
hlt
mov
lods
imul
das
or
sbb
fcompl
cmp
pop
inc
mov
xchg
add
test
daa
sub
and
aaa
inc
js
or
dec
mov
mov
leave
aas
dec
insl
sub
add
lods
jnp
mov
jecxz
divl
push
sub
and
imul
jnp
jecxz
sbbb
xor
popf
mov
and
fwait
dec
cmp
cmp
aam
orb
jge
pop
mov
test
test
dec
scas
mov
ficoms
clc
adc
xchg
adc
xlat
testl
je
scas
and
loopne
loop
addr16
dec
mov
bound
mov
sbb
in
mov
lcall
fimuls
dec
mov
add
pusha
mov
xchg
pushf
lds
popa
mov
mov
xor
ja
cmp
add
xchg
mov
out
push
sarl
mov
in
jmp
popl
pop
mov
jp
out
cmp
mov
fstl
mov
push
sub
bound
cmc
jae
cmp
mov
dec
sub
mov
mov
mov
dec
test
xchg
dec
rcrl
and
xor
jg
je
imulb
or
adcb
mul
stos
lods
jne,pt
dec
out
pop
scas
or
push
ss
and
ss
cmpl
das
repnz
mov
sub
jno
repnz
lock
mov
sahf
test
adc
sbb
or
in
jo
adc
ja
mov
jmp
js
inc
test
mov
mov
push
mov
insl
aaa
jo
lock
adc
jg
scas
cmp
insb
add
arpl
mov
cld
fistps
cmp
xchg
iret
inc
scas
aas
out
rdtsc
cmp
push
pushf
xchg
mov
cwtl
rcll
xchg
imul
pop
fmull
add
xchg
xchg
sbb
lcall
mov
and
jnp
inc
push
outsl
sbb
push
icebp
fidivl
hlt
mov
mov
jns
pusha
js
or
sbb
hlt
cmp
mov
lock
jmp
rorl
sub
add
jae
and
ss
pop
inc
mov
jp
xor
dec
lods
xor
js
rolb
cld
push
ja
loopne
jbe
data16
testb
cmp
or
repz
int
idivb
repz
and
cmp
insb
pop
mov
sub
clc
movsl
and
ljmp
pop
jge
lea
sbb
cwtl
mov
pop
icebp
out
or
push
cmp
mov
shll
scas
lock
add
or
pop
dec
pushf
stc
jns
fbld
push
sbb
cmpsb
adc
lcall
lock
push
fcomi
fisubs
xor
ret
push
cmpsl
xor
or
jl
mov
jno
ja
xlat
xchg
cmpl
hlt
fs
mov
pop
out
es
stos
jl
mov
xchg
sbb
jne
xor
popf
ja
fnstcw
xor
jmp
packuswb
mov
int
jmp
mov
loope
jne
inc
xchg
int3
pusha
mov
movsb
pop
fisttpl
cmp
push
ds
es
pop
into
jno
subl
xor
push
and
fnstcw
push
shll
call
imul
loopne
sbb
les
mov
lret
sbb
sti
xchg
fcmovbe
mov
mov
cmp
stc
mov
or
mov
hlt
in
and
movsl
dec
aaa
pop
mov
rolb
js
push
arpl
data16
sahf
mov
push
sub
pop
aas
sub
cmp
or
icebp
movsb
add
push
and
aad
out
sbb
xchg
and
mov
sti
insb
or
sbb
sbb
mov
iret
jb
dec
mov
push
mov
push
cmp
push
sub
xlat
les
dec
mov
in
in
es
push
insb
push
xchg
cwtl
movsl
int
mov
sbb
popf
cmpsb
add
stos
int
aam
outsl
ret
lods
stos
not
into
xlat
adc
push
lret
jns
add
sub
sub
push
dec
mov
sbb
outsb
adc
je
and
or
js
lods
cmp
loope
and
mov
jno
mov
hlt
push
sarl
pop
mov
xor
sbb
jb
aaa
shlb
ret
or
inc
inc
sub
jne
repz
mov
pop
movsb
mov
adc
in
cwtl
xchg
push
pop
into
roll
xor
push
sub
sahf
cmc
push
or
pop
mov
cmpsb
pop
pushf
lret
cmc
pop
psubsw
cmp
jo
insb
lods
mov
js
lods
mov
rcrl
test
sub
xchg
bnd
dec
sub
inc
daa
fistps
pop
scas
or
push
imul
rol
rolb
fs
or
mov
mov
fcmovne
mov
mov
xchg
inc
faddl
leave
mov
xor
das
jnp
lock
cmpsb
inc
lods
add
out
repnz
mov
lods
movl
mov
add
pop
sub
mov
inc
sub
out
sti
mov
cmpsb
mov
iret
mulb
mov
mov
inc
cltd
leave
ror
add
out
icebp
or
loop
xchg
loopne
or
xor
out
int3
gs
pop
mov
stos
and
jne
repnz
andb
outsl
int3
dec
popa
mov
cmpsl
pop
sub
fwait
cmp
dec
inc
ljmp
push
jno
mov
call
leave
fxch
push
jnp
loop
dec
add
push
cmp
pop
lods
stos
test
add
hlt
jecxz
lcall
jge
clc
je
ds
ret
or
enter
inc
rorb
cmp
nop
mov
jo
repnz
mov
pop
mov
test
cmp
sbbb
std
scas
adc
add
stos
mov
dec
jl
xor
push
sbb
dec
cld
sub
icebp
in
push
add
in
lahf
call
xchg
dec
inc
add
xchg
les
sub
sar
xlat
pop
sbb
dec
sbb
mov
and
mov
pop
nop
stos
or
jnp
fists
jae,pn
jbe
jge
mov
pop
add
jg
mov
ret
adc
adc
imul
ror
in
add
sti
in
push
mov
arpl
aam
sub
lds
cmpl
sub
mov
jo
jne
gs
lret
andl
xchg
adc
repnz
push
movsb
shlb
loopne
dec
test
pop
lahf
ja
daa
pop
xlat
jg
push
xor
lcall
cwtl
shll
lock
xor
mov
popf
stc
fmulp
in
in
and
mov
out
cmc
push
adc
or
shrb
or
jl
scas
lret
and
pushf
xchg
call
jle
das
push
dec
addl
out
mov
stc
in
bound
loopne
add
xchg
xchg
fimuls
int
xchg
xchg
loop
nop
add
mov
enter
pop
add
in
inc
scas
andl
jae
jp
jne
dec
mov
pop
mov
gs
cmp
mov
mov
and
cmpsb
lret
jg
pop
sahf
fstpl
and
call
insl
sbb
stos
lret
movsl
dec
je
dec
adc
xor
lea
jae
add
pusha
mov
jne
popf
pop
add
mov
adc
push
push
adc
outsl
jo
rolb
lods
push
jl
popa
push
jae
sarl
jl
jg
out
js
lods
sbb
daa
icebp
cmp
dec
push
xor
rorb
outsl
mov
pop
and
repnz
and
pop
in
cltd
adc
outsb
imul
rol
mov
lcall
xor
pop
cmp
or
inc
insb
aaa
jle
mov
imul
pushf
cli
mov
lods
jg
mov
clc
cld
stc
xlat
jp
inc
add
push
je
xchg
jge
cmpb
outsl
sahf
pop
ret
loopne
pop
pop
fwait
lock
mov
leave
or
mov
inc
push
insl
sbb
outsb
je
cwtl
test
jbe
cmp
fiadds
pop
fwait
mov
aad
or
pop
stos
adc
mov
fcomps
ret
push
pop
inc
out
dec
xor
sub
repnz
es
pushl
xor
jmp
xor
xor
cmp
cmp
dec
int3
xor
neg
xor
ja
adc
mov
inc
pop
cmp
xchg
enter
f2xm1
mov
jo
cltd
xchg
jp
int
ficomps
jbe
jnp
xchg
xor
ret
pushf
mov
icebp
and
ud2
cmpsl
pop
pop
push
add
cmc
push
in
frstor
xchg
out
or
push
adc
pusha
inc
fcomip
jge
imul
test
insl
and
push
pushf
pop
mov
clc
sbb
add
je
mov
lock
rcrb
and
adc
fildll
in
xchg
inc
adc
lock
inc
sar
aaa
xchg
push
nop
addr16
cli
mov
dec
sahf
int
ds
adc
mov
xchg
mov
mov
sub
scas
push
inc
mov
std
mov
xchg
and
pop
mov
aas
aad
push
adcb
jns
jnp
enter
inc
jp
les
dec
lock
outsb
mov
and
push
jp
jl
adc
arpl
in
xchg
push
sahf
cli
mov
lods
pop
jno
ss
pop
aaa
mov
les
mov
in
sub
mov
sub
pop
lret
mov
cmp
mov
inc
xor
xorl
lret
mov
and
inc
xor
dec
jo
popl
idivl
loop
std
jmp
addr16
mov
roll
sub
jecxz
lcall
mov
add
lcall
mov
fidivrl
and
xor
imul
pop
jns
xchg
add
outsb
xchg
cld
js
dec
mov
mov
fistl
mov
neg
std
sub
fs
inc
lea
adc
hlt
inc
loope
fcoms
test
pop
push
sbb
inc
js
int3
add
popf
mov
dec
mov
lock
mov
faddl
mov
push
movsb
test
dec
pop
mov
mov
push
sbb
push
xor
or
cmp
push
enter
sbb
sub
stos
orb
or
push
ret
push
fwait
jmp
xchg
dec
outsb
add
inc
dec
pop
fnstenv
fnsave
or
xlat
cmpsb
push
sahf
and
repz
mov
repz
add
out
fisttpll
out
jl
push
repz
iret
cmp
rorb
dec
xchg
lods
push
pop
dec
mov
in
movsl
sbb
insl
jns
int
test
push
lods
push
rcl
or
xchg
and
pusha
push
clc
push
leave
add
xor
mov
inc
scas
sahf
sahf
add
mov
push
or
cmp
in
imul
jnp
lods
out
test
adc
push
mov
pop
testb
jl
leave
mov
gs
lret
inc
out
jns
xor
cmpsb
mov
cmpsl
jge
xchg
lods
mov
push
xchg
sbb
ja
sub
out
sbb
dec
xor
enter
mov
cmp
and
arpl
adc
and
inc
mov
movsl
imul
fcmovbe
mov
test
and
push
mov
jns
dec
lahf
jmp
push
sub
xchg
jne
jnp
lods
lods
std
data16
lahf
mov
mov
push
cmp
out
pop
pop
sbb
cmpsl
xlat
lds
cmp
sbb
jmp
movsl
dec
and
mov
mov
lea
xchg
outsb
lcall
jp
jno
or
movsb
popa
aas
pop
push
enter
and
outsb
dec
push
jne
inc
mov
xchg
lods
int
or
ds
dec
inc
gs
cltd
ljmp
incb
in
inc
loopne
push
adc
mov
dec
ljmp
adc
jne
xor
daa
and
mov
popl
pop
add
lret
outsl
or
sub
fwait
and
ljmp
jbe
inc
ret
xchg
jmp
daa
mov
cmp
adc
mov
jns
mov
push
dec
inc
push
dec
lahf
adc
mov
test
xchg
cwtl
xor
or
aam
mov
jo
cmp
sbb
inc
or
pop
mov
popf
insl
loopne
jns
ljmp
nop
dec
xchg
add
mov
jnp
dec
shll
insl
int3
sbb
or
call
out
in
dec
jle
mov
add
and
mov
mov
insb
leave
imul
jno
insl
and
push
xlat
dec
cmp
mov
jl
lahf
ljmp
dec
enter
adc
lcall
pop
cmp
mov
adc
pop
mov
andb
lret
inc
or
iret
jno
or
scas
sub
sbb
jge
fdivs
mov
add
insl
sub
enter
dec
int3
jb
lods
xchg
cmc
loope
fwait
data16
sbbl
lahf
iret
fadds
dec
inc
mov
out
loop
ret
or
pop
insl
cmp
pop
adc
sub
push
pop
incb
cmp
inc
mov
out
fs
shlb
subl
out
lods
and
loope
rorb
push
add
in
shr
shl
lret
cmpb
js
repnz
cmpsl
subb
notl
jecxz
mov
push
mov
mov
adc
fs
dec
xchg
push
pusha
jnp
not
lods
aam
mov
pop
mov
mov
test
in
lret
add
xchg
adc
jno
mov
jns
jge
hlt
mov
mov
or
ss
sbb
sub
shrb
cli
scas
push
xchg
pop
dec
popa
int3
inc
sbb
mov
test
mov
push
hlt
mov
movsl
jp
test
pop
ret
roll
adc
lds
cmpb
dec
imul
inc
scas
aam
add
jge
shll
mov
xor
stos
scas
xor
jle
in
xor
hlt
pusha
ja
cli
inc
jo
mov
lcall
outsb
adc
mov
pop
scas
add
outsl
cli
and
arpl
roll
shr
sub
dec
push
and
bound
ljmp
stos
sub
scas
pop
in
mov
pop
or
into
rolb
sub
xchg
adc
xchg
mov
ljmp
jb
xchg
outsl
jmp
sahf
daa
pusha
cs
mov
sbb
pop
aam
arpl
out
inc
xor
lods
das
sbb
jo,pt
jns
scas
mov
movsl
int3
dec
stos
mov
andl
or
inc
leave
jle
or
loop
xchg
mov
cltd
lahf
jge
shlb
mov
int
clc
xchg
cmc
add
push
nop
pop
ss
push
pop
or
dec
add
and
cmp
out
mov
outsl
sub
sbb
add
cmpb
mov
pusha
push
pop
jbe
sbb
lock
pusha
mov
mov
nop
cli
popa
pop
ds
mov
or
out
mov
adc
or
xchg
test
jl
js
sbbl
jge
mov
in
pop
inc
insl
jo
adc
adc
in
inc
push
cmc
data16
je
popf
add
push
sub
pop
jno
ljmp
nop
sbb
out
push
es
ret
inc
sbb
mov
ret
add
sbb
and
xchg
mov
clc
jb
mov
scas
decl
arpl
subb
mov
repz
imul
pop
inc
push
sbb
mov
sbb
jno
push
data16
out
mov
adc
sahf
mov
add
out
insl
lret
repz
adcl
or
scas
and
shr
aaa
jnp
cwtl
mov
push
fildll
jp
adc
push
jmp
mov
shll
xchg
pop
pusha
pop
xchg
sarl
scas
xor
mov
icebp
sbb
insl
push
cmpl
pop
sub
pusha
and
loop
inc
mul
adc
lods
lret
jo
pop
add
jp
inc
mov
xor
cmp
mov
pop
push
sub
movsl
lea
repnz
inc
mov
cmpsl
outsb
jp
cmp
fs
mov
lcall
mov
mov
inc
dec
nop
fs
es
lcall
test
push
andl
incl
testb
stos
std
enter
mov
aam
sub
mov
pop
lret
ret
mulb
inc
clc
lea
repnz
in
sub
sub
inc
jae
insl
mov
cmpsb
xchg
mov
mov
xor
in
lcall
xlat
mov
xchg
cmpl
test
sub
into
or
mov
jp
sbb
sbbl
adc
dec
sub
push
out
sub
cmp
lret
movsl
add
cltd
xor
mov
inc
lcall
lcall
sbb
out
cs
ret
test
pop
push
outsb
icebp
addl
cmp
fldcw
inc
pop
lcall
pop
repz
sbb
test
enter
movsb
pop
cmpsb
push
cmpsl
push
sub
xchg
add
enter
fxch
jle
jne
push
mov
cmp
mov
pop
clc
sbb
ja
inc
outsl
scas
jns
in
jg
incb
mov
inc
pop
roll
and
mov
data16
hlt
iret
rcr
adc
lds
fwait
xor
repz
fsubrs
add
jle
inc
in
popa
scas
xchg
jge
dec
fwait
push
xchg
sub
in
mov
sub
pop
rcl
mov
repz
jbe
out
mov
test
push
daa
mov
dec
add
sub
mov
aas
adc
lods
mov
pusha
sub
out
js
inc
inc
xor
inc
ret
scas
loopne
push
aad
push
lods
lahf
adc
xor
in
notl
out
sbb
xchg
push
sbb
mov
jnp
sbb
pop
pop
mov
clc
mov
aad
je
mulb
arpl
pop
and
or
mov
push
pop
pop
xchg
xor
and
jecxz,pn
dec
cmp
imulb
shl
xor
scas
cmc
sbb
mov
mov
ja
js
or
pop
sbb
mov
pushf
test
test
cmpsl
jp
xchg
xchg
sub
push
cmp
xor
mov
bnd
mov
cmp
push
mov
inc
xor
or
mov
and
or
adc
cltd
add
repz
jbe
daa
ss
fsubrs
clc
popa
and
adc
fisubs
sahf
mov
insb
sahf
or
cs
cli
jge,pt
out
fs
stc
jno
cmc
mov
cli
mov
mov
lds
popf
dec
leave
ljmp
ja
loopne
xchg
push
mov
fcoms
ljmp
call
xor
out
xchg
rorb
mov
mov
lock
test
lock
sbb
dec
stos
inc
add
xlat
dec
adc
adc
dec
cli
shlb
hlt
and
movsl
pop
pop
cmp
xorb
adc
mov
cmp
xor
pop
pop
sub
pop
lret
sbbb
iret
mov
outsb
scas
lods
movsl
out
or
sbb
inc
mov
mov
ret
or
mov
xchg
in
stc
cld
xchg
rol
mov
mov
adc
andb
out
dec
xlat
dec
mov
adc
dec
sbb
inc
cmpsb
xchg
daa
lcall
cmc
xor
fdiv
icebp
scas
dec
mov
and
push
mov
adc
sbb
js
cmp
in
xor
push
inc
andb
test
push
imul
in
shrb
testl
in
xchg
adc
xorb
sti
cmp
mov
push
sbb
in
popa
and
add
or
cli
jmp
aam
test
adc
mov
jae
add
add
sbb
inc
sbb
jae
hlt
mov
cmp
inc
inc
out
pusha
mov
jno
cmp
lods
aad
cwtl
dec
lock
loopne
fptan
test
ds
pop
mov
ljmp
jnp
jg
push
js
xor
stos
lret
lods
cmpsb
sahf
addb
pop
and
popf
add
jl
mov
push
test
daa
pop
cmp
and
jp
cmp
mov
imul
push
gs
adc
cmp
mov
jns
lret
int3
cli
jl
scas
aam
sub
fcomps
fisubrl
and
pop
daa
cmpl
xchg
lret
and
sub
push
sub
and
or
clc
cld
in
jl
xchg
addr16
in
xor
xchg
repnz
add
loope
hlt
sbb
push
pop
stos
mov
push
sub
mov
popf
jge
in
jae
iret
lret
les
xchg
out
or
xchg
outsb
repnz
ljmp
inc
hlt
lret
pop
pop
sub
inc
fsubp
xchg
ja
int3
lret
and
push
cld
pop
jbe
xor
lods
test
xlat
sub
lcall
std
imul
lock
cmp
push
add
clc
xlat
adc
sub
xchg
aam
dec
sti
inc
rol
and
sahf
popa
aas
data16
std
dec
push
fisttpl
sub
repz
inc
mov
test
subl
outsb
xchg
aad
and
ss
pop
and
jo
dec
movsb
mov
and
int3
test
les
pop
sub
xor
jle
fnstcw
in
inc
jecxz
or
in
jne
cs
jns
stos
icebp
mov
and
push
mov
repnz
test
fwait
add
add
sub
outsl
lds
pop
or
cs
xor
stc
adc
scas
xor
mov
mov
daa
sub
xchg
push
xchg
cltd
sbb
aaa
mov
mov
outsl
fwait
or
roll
and
sub
in
int3
nop
outsl
in
arpl
xor
clc
sbbl
subl
andl
shll
lods
fisubl
cltd
cs
jnp
outsl
cmpsb
andl
stc
xchg
enter
pop
insb
sbb
rcrb
push
jbe
push
push
or
xchg
fisubs
xchg
dec
and
inc
pop
jo
clc
dec
mov
push
push
stos
sbb
sbb
mov
outsb
mov
aaa
xor
leave
add
mov
repz
arpl
shlb
sub
mov
mov
insb
mov
jmp
mov
xor
lds
jne
mov
push
xchg
mov
push
sub
shl
mov
push
lcall
cld
push
ljmp
leave
cmp
pop
dec
cld
inc
lahf
dec
inc
mov
xor
xor
push
push
hlt
jne
fwait
adc
jmp
or
dec
push
pop
stc
ss
clc
mov
cmp
movsb
ror
pop
pusha
pop
clc
icebp
xor
xchg
cmp
mov
xchg
and
mov
out
push
pop
and
adc
mov
cmpsl
pop
cwtl
dec
cltd
pop
aad
inc
pop
in
xor
and
pop
ja
cmpsb
mov
call
sbb
iret
sub
es
mov
arpl
insl
jecxz
test
bound
pop
cltd
movsl
arpl
xchg
loop
push
cmp
in
or
stos
cmp
lahf
lea
dec
mov
add
mov
aaa
shrl
sahf
aad
jl
aas
push
es
out
pusha
jmp
out
jge
addr16
roll
in
stc
daa
lods
cmc
pop
sahf
xlat
or
out
add
fidivrl
pop
push
adc
jnp
xor
mov
or
test
in
push
inc
push
add
lret
stos
movsl
sbb
mov
adc
rclb
or
in
ror
mov
push
add
dec
in
mov
lret
repnz
js
outsb
cmp
inc
out
ds
or
scas
cmp
sbb
arpl
shl
cltd
ds
lret
cmp
shlb
scas
les
frstor
std
sub
dec
jge
cmp
out
call
clc
push
rolb
fimuls
jne
pop
cmpb
cwtl
insb
loop
sub
inc
sub
or
scas
and
das
in
shll
adc
and
cli
pop
popf
sub
stos
mov
mov
call
clc
mov
cmp
push
pushf
repnz
movl
jno
lcall
and
lock
pop
push
push
mov
xor
ficompl
dec
sub
xchg
jge
xlat
jp
seta
in
pushf
imul
inc
mov
daa
cmp
fisubrs
dec
xor
sarl
scas
fnstcw
mov
push
test
dec
jae
jp
adc
cli
cmpsb
pop
xor
in
mov
xchg
inc
push
test
dec
jb
int
in
aam
sti
add
push
insb
fiaddl
mov
sub
xchg
inc
in
push
sub
in
aaa
sar
sub
out
mov
fistpll
addr16
mov
fucom
cs
jp
idivb
cmp
push
scas
dec
repz
xchg
sbb
xor
mov
push
outsb
mov
push
fstps
ja
out
cs
xor
xor
outsb
sub
fld
pop
push
ret
mov
mov
mov
mov
push
inc
aad
and
test
sub
xchg
sub
sbb
xlat
jae
and
inc
sub
aam
out
shrb
sbb
hlt
adc
rclb
icebp
xchg
out
push
dec
rorb
sbb
dec
data16
xor
mov
divl
jnp
mov
push
lods
in
dec
cmp
sub
test
mov
push
test
xorl
mov
or
push
pop
cmp
push
lret
sarb
movsl
lods
lea
add
inc
sub
scas
arpl
push
data16
mov
stos
insb
push
add
lock
fsubs
push
mov
ret
orl
mov
sarb
pop
pop
xlat
dec
and
adc
pusha
xor
ror
sarb
fwait
jle
repz
push
xchg
sub
push
mov
fcmovnb
cmp
mov
jne
in
iret
outsb
mov
dec
dec
xor
sub
cmp
mov
cmc
loop
cld
xor
inc
call
orb
mov
ja
jno
subl
push
dec
aas
leave
sbb
cmp
sub
scas
imul
cmp
js
add
shl
fs
popf
jae
mov
into
stos
jecxz
test
sahf
push
add
add
push
mov
ljmp
pop
sbb
cmp
jnp
imul
in
push
mov
mov
in
xlat
adc
punpckhdq
sbb
pop
testb
xor
cmpsb
popf
repz
cwtl
popf
cmpsb
dec
push
push
jle
mov
push
jo
loop
sub
scas
mov
nop
out
mov
xor
adc
shl
icebp
xchg
fs
std
adc
in
into
aad
lret
sbb
push
and
xchg
pop
inc
pop
mov
mov
addr16
pop
outsb
pop
mov
push
aaa
mov
out
js
scas
outsl
ss
bound
mov
jb
lret
jmp
jnp
cld
call
push
in
lret
decl
mov
mov
cli
adc
jge
lret
xor
xchg
adc
adc
int
inc
cwtl
inc
das
lret
mov
push
inc
stc
xor
mov
addl
les
pushf
dec
add
inc
gs
mov
fwait
loop
jle
adc
add
dec
leave
cmpsb
cmp
xchg
iret
mov
scas
xchg
lods
sub
jge
insl
cmp
cltd
je
mov
cmp
pop
insb
push
or
int
cmpsb
dec
incl
pusha
xorb
inc
bound
out
inc
xchg
adc
cmp
add
ror
lahf
cmp
mov
push
fcoml
lods
nop
mov
inc
cwtl
loop
add
jg
mov
add
mov
popf
mov
test
jg
lcall
js
jbe
or
mov
sbb
dec
cmp
xorl
out
mov
js
setle
pop
hlt
mov
cmpsb
inc
add
out
cmc
cmp
push
cwtl
mov
jp
dec
mov
out
sbb
pop
xlat
jns
andb
lock
aaa
scas
adc
enter
push
mov
ret
and
mov
push
sub
shrl
in
sub
cmp
aam
out
pop
pop
mov
lret
test
cmpsl
scas
scas
lret
cmpl
jmp
sbb
sbb
xchg
sbb
add
xor
mov
pop
mov
mov
mov
cmp
push
hlt
sbb
dec
call
cmp
and
pop
inc
sti
cli
sahf
mov
mov
negl
mov
sbb
cmp
bnd
jl
and
fidivrs
xor
xor
arpl
ret
or
or
ja
repnz
pop
xchg
cmpsl
std
outsl
jb
fwait
call
jmp
xchg
cmp
clc
or
xchg
jmp
sti
aad
mov
and
cmp
jnp
popf
dec
mov
gs
push
sub
push
pop
xor
inc
roll
flds
pop
in
mov
pop
outsb
mov
xchg
mov
int
cmp
ss
mov
cmpsl
xchg
in
das
lret
mov
sub
or
es
arpl
movsb
jg
popa
scas
jp
scas
adc
ja
rorl
mov
aad
push
int
imul
sub
fidivs
out
in
divb
inc
hlt
nop
sbb
cwtl
mov
iret
leave
add
mov
arpl
add
outsl
inc
cmc
sub
mov
int3
repnz
bound
addr16
pop
fdivrs
dec
dec
or
jg
inc
mov
testb
or
sahf
dec
test
jo
or
xor
sub
ljmp
adc
lods
pop
data16
mov
cmp
addr16
ret
xorb
jmp
xchg
ds
cld
psubusb
enter
mov
fimull
clc
dec
gs
mov
dec
inc
jns
clc
ss
cmp
inc
aas
in
or
add
std
xor
mov
sub
movsl
sbb
sub
dec
cwtl
ret
cwtl
sub
add
testb
or
mov
lods
inc
cmp
repz
insb
inc
cmp
mov
fisubs
outsl
mov
dec
fsubs
xor
cmp
dec
pop
outsl
mov
lret
push
sbb
mov
pop
dec
out
push
jb
popa
cmc
shrl
sbb
outsl
mov
inc
insb
insl
cli
cmpsb
ret
aad
ret
jb
jle
or
out
gs
jnp
popf
jl
jb
inc
add
dec
rclb
lea
pop
cld
mov
cli
stos
jp
leavew
scas
inc
shll
cmp
adc
xchg
cmp
sahf
push
xchg
adc
test
xor
xlat
mov
loope
outsb
mov
jb
push
sub
mov
cmp
jae
orl
in
cmp
fbld
adc
push
dec
aaa
lret
out
add
pop
aad
cld
mov
imul
mov
or
call
and
movsb
pop
cmp
ja
pop
cmp
push
lahf
in
dec
cwtl
mov
jge
in
insb
sbb
aas
data16
mov
and
out
lahf
pop
arpl
aad
sub
leave
lds
shl
out
add
push
and
pop
xchg
add
push
imul
add
jo
clc
insl
sub
leave
flds
lds
fldcw
orl
mov
cwtl
lock
pop
adc
xor
or
mov
out
in
lret
outsb
fnstcw
cmp
or
sub
stos
cs
push
mov
adc
mov
sbb
pop
sub
lcall
addr16
gs
cs
stos
ljmp
jno
xchg
jnp
xor
mov
pop
in
jle
movsl
jecxz
inc
pushf
xchg
fsubr
repz
jae
movsl
xchg
aas
dec
xchg
clc
cmp
pushf
lods
or
pusha
hlt
pushf
loope
stos
dec
pop
stc
pop
jle
push
loopne
and
dec
mov
cmp
sbb
sub
imul
data16
inc
pop
xchg
push
stc
es
inc
mov
aad
cmp
enter
sahf
pop
xor
lea
inc
cld
aad
push
xchg
and
mov
outsl
in
lret
int
gs
and
add
or
sahf
fnstsw
insb
or
mov
xor
int
xor
stos
push
pushl
or
scas
mov
or
iret
iret
int3
ficomps
insb
xchg
lret
mov
lahf
loope
pop
inc
insb
out
outsb
xchg
sub
pop
push
adc
pusha
and
adc
fwait
cmp
scas
jne
mov
pop
mov
dec
sbb
sub
xor
jp
insb
stos
jne
pop
inc
pop
lods
je
lea
int
ret
movsb
in
adc
dec
jns
mov
pop
pop
cmp
sub
stc
mov
jb
xor
cs
clc
cmp
fsubr
shlb
xchg
push
inc
jb
orb
scas
shll
push
xchg
mov
testb
fcmovnbe
dec
inc
jecxz
aam
cmpsl
scas
xor
popa
out
sbb
add
in
dec
insl
xor
push
fisubrl
push
jo
dec
cmp
xor
sbb
ljmp
mov
sti
sar
adc
scas
shll
rol
scas
cmp
inc
gs
test
or
mov
ret
test
out
mov
je
push
mov
inc
imul
rol
sahf
lock
push
test
cmp
in
jbe
addb
jle
and
mov
aad
fistpll
movsl
mov
js
pop
sti
push
out
insl
or
cli
jbe
mov
xchg
and
cmp
jp
sub
push
pop
sar
ret
movsl
jle
mov
sbb
xor
out
in
lds
mov
push
mov
add
movb
dec
push
imul
push
dec
adc
out
std
jmp
adc
ret
adc
mov
fxch
jp
xchg
insl
test
scas
inc
in
pushf
adcl
push
or
cmp
adc
jle
or
mov
pop
adc
std
inc
fdivs
jne
lods
mov
cli
mov
dec
push
xchg
adc
mov
mov
pop
mov
and
test
dec
fs
nop
popa
inc
fcomps
push
movb
pop
sbb
fnstsw
cs
sbb
ljmp
push
and
jae
sbb
lea
xchg
xor
mov
frndint
out
xor
out
and
mov
jg
mov
sbbl
test
jae
mov
mov
jecxz
mov
push
mov
add
add
sbb
xchg
shrl
sbb
jb
subl
insb
mov
cmp
mov
fmull
sbb
jb
sub
out
push
sbb
shlb
jae
lods
sti
cmp
insl
in
lret
sub
mov
pusha
sarl
icebp
aad
test
ret
push
push
mov
fcompl
xchg
push
mov
pop
in
popa
pop
cmp
cld
es
jae
and
dec
insl
in
or
pushf
rorb
adcl
shlb
mov
mov
shrb
imul
xor
mov
push
scas
rclb
and
lcall
adc
insl
xor
cmp
and
pop
push
inc
out
dec
push
mov
pusha
dec
cmp
test
lds
jle
ret
aas
adc
sub
out
out
xlat
mov
je
xor
add
int
lock
push
addr16
pop
ss
ss
inc
repnz
pop
aam
fcoml
lret
sti
fsubrs
sbbb
xchg
xor
and
cmp
pop
imul
sbb
sbb
popa
or
jp
rcrb
aam
clc
popf
mov
bound
lahf
movsb
negb
xor
les
shll
cltd
sbb
sbb
cmp
into
into
int
pushl
incl
jp
inc
add
ficomps
or
sbb
mov
lods
cmc
lock
jbe
scas
ret
fistpll
sbb
sbb
add
push
mov
in
ljmp
xorb
mov
xchg
add
iret
lds
pop
xrelease
loope
and
popf
or
jecxz
sti
jp
stos
popf
adc
in
movsl
mov
sti
mov
addb
repnz
pop
test
and
add
imul
js
adc
ret
xchg
outsl
or
and
jbe
icebp
lds
jle
push
mov
pop
je
xorps
lods
test
mov
popf
aad
jecxz
daa
lds
sub
mov
cld
adc
shlb
sti
bound
test
int3
movsb
icebp
imul
cltd
sahf
add
pop
mov
testl
mull
ss
add
mov
inc
cs
mov
pop
push
icebp
inc
test
into
addr16
push
fldl
ljmp
jle
lret
jl
aas
inc
mov
rep
fisttps
adc
lock
fcos
add
xor
and
mov
stos
loope
rclb
jae
shlb
push
sahf
pand
in
roll
inc
inc
shlb
mov
adc
rcll
rorb
jg
lcall
mov
fadds
or
jp
popa
or
and
and
xchg
cmp
xor
pop
jne
and
mov
mov
and
jp
dec
pop
jbe
stc
push
lea
mov
push
and
dec
pop
add
dec
mov
insb
and
jp
aas
shll
loope
jo
push
orb
cmp
clc
jmp
mov
cld
mov
jmp
imul
daa
and
ljmp
les
sub
xchg
cmp
push
pop
lods
mov
mov
adc
xchg
lcall
clc
jl
lcall
dec
out
mov
outsb
dec
push
jle
outsb
das
out
shl
pop
dec
push
fimuls
inc
xchg
fisttps
xor
hlt
loop
inc
sbb
sbb
and
jle
daa
push
sub
fwait
jne
in
push
sbb
sub
nop
pop
negl
xchg
jnp
xor
jmp
movsl
push
lods
mov
inc
sahf
into
rclb
cmpsb
es
decl
ret
call
icebp
in
inc
and
popf
repz
out
adc
and
into
rcrb
call
decl
imul
inc
sub
sub
and
dec
mov
push
xadd
dec
jle
out
add
dec
lret
rcr
lcall
mov
mov
addr16
sar
pop
xchg
int3
sub
outsl
xlat
dec
add
xor
xor
sti
in
cld
movsb
dec
imul
sbb
mov
sub
arpl
into
in
dec
jecxz
gs
add
mov
pop
mov
push
add
lcall
jne
push
pop
dec
dec
jns
pop
mov
lock
sbb
add
xor
orb
mov
lds
bound
or
mov
sahf
out
pop
mov
in
add
push
mov
inc
fbld
or
jnp
sbb
mov
jecxz
jle
xor
sarb
scas
xlat
cmp
std
stos
test
cld
loop
cli
std
inc
mov
xchg
pop
lret
cmpsb
jnp
sub
sub
orl
inc
cmp
push
add
or
outsb
and
cmp
into
test
rcr
jmp
or
orl
icebp
inc
pop
mov
mov
mov
push
mov
hlt
jp
testb
popl
add
sbb
mov
inc
adc
fldenv
xor
shll
adc
inc
pop
dec
cmp
cld
inc
adc
movsl
xchg
or
mov
sub
pop
aaa
and
mov
in
dec
mov
movsb
cmp
aas
xchg
adc
enter
jae
lret
mov
dec
ljmp
inc
mov
ds
in
sub
daa
das
adc
mov
add
inc
std
mov
jmp
or
mov
shl
movsb
mov
dec
and
jne
pop
jge
jns
add
fs
push
popf
inc
pop
push
and
imull
iret
jno
int
dec
mov
ret
xorl
test
fdivrl
cmp
mov
or
paddd
sarl
dec
pop
push
loop
mov
imull
xchg
repnz
psrad
addl
sbb
into
aaa
pop
jl
cmp
cmp
rcl
mov
pop
ret
inc
shll
lds
push
lcall
or
arpl
add
mov
in
lods
fidivs
js
test
xor
mull
inc
add
popa
xor
adc
outsl
jp
sbb
scas
dec
stc
enter
nop
jns
nop
scas
das
dec
std
dec
repnz
xlat
cmp
jne
lods
cli
mov
pop
imul
sbb
data16
jns
or
push
invd
pop
mov
jno
cld
mov
mov
pop
out
push
jo
or
in
nop
inc
sbb
dec
and
cmp
cli
sbb
hlt
and
mov
icebp
js
pop
scas
in
mov
cmp
sub
mov
ja
sub
pop
add
fsubrl
lods
in
mov
xchg
mov
pop
adc
idiv
and
push
sub
in
out
js
ljmp
pop
sbb
or
movsb
cmc
sarb
mov
hlt
cmovns
add
jb
bound
jp
adcl
jecxz
dec
mov
or
mov
xchg
and
pop
out
xchg
sbb
sub
outsb
jno
cmp
mov
repnz
leave
xchg
test
outsl
mov
add
mov
sbb
and
sbb
imul
pop
scas
inc
lods
mov
into
out
and
mov
scas
mov
add
popa
push
xchg
push
xor
clc
jns
roll
pop
or
jmp
cli
or
movsb
scas
xlat
ss
popl
push
aad
iret
or
inc
shll
and
sar
mov
mov
lret
adc
outsb
cmp
loopne
clc
popa
xor
stos
dec
dec
cmp
inc
cltd
lock
imul
shl
iret
aaa
sbb
mov
fadds
xor
sbb
movzbl
sbb
xor
dec
inc
iret
repnz
push
cmpb
inc
mov
lods
xchg
cwtl
xchg
add
repnz
mull
xchg
mov
ja
outsl
add
jmp
rcrl
repnz
fisttpll
sub
jne
push
les
cmp
pop
cld
cmp
add
mov
je
pop
popa
in
daa
or
loope
add
push
pop
out
jmp
cli
inc
sbbb
jmp
adc
push
fistpll
fistpl
lods
xchg
das
sbb
cmp
sbb
int
adc
mov
idivb
push
in
fwait
add
cmpxchg
rcrb
and
mov
inc
stc
jmp
out
in
out
inc
mov
shrd
sbb
enter
jne
imul
in
inc
fisttpl
sub
adc
mov
scas
dec
and
mov
pop
cmc
xchg
out
mov
nop
inc
mov
mov
push
jo
repz
lock
daa
btc
xchg
stc
pop
jo
pop
push
repz
xor
pop
frstor
int3
xchg
inc
mov
scas
nop
mov
cmc
int3
stc
imul
adc
sub
out
scas
les
nop
aad
in
pop
inc
xchg
sub
pop
mov
mov
jbe
fwait
cmp
pop
mov
sbb
rcll
rorl
enter
aad
dec
push
add
xchg
jns
sub
mov
cmp
jnp
ds
sbbl
sar
lret
sub
sub
lret
arpl
jp
jg
jno
and
fs
shll
xorl
mov
lock
jle
sub
jbe
adc
and
jge
cmp
xor
icebp
inc
inc
push
xchg
jmp
mov
lods
repz
in
push
lea
mov
push
nop
dec
repnz
sbb
xorb
sub
or
inc
push
xchg
mov
int3
notb
aad
fs
pop
inc
jge
jge
cmpl
xor
cmp
ljmp
sbb
and
xchg
mov
imul
pop
adc
push
push
and
lahf
lret
mov
sahf
inc
rorb
mov
lods
jb
dec
dec
xorb
mov
aaa
fincstp
inc
mov
push
sbb
pop
outsl
rcrb
xor
ljmp
jl
xchg
inc
lret
mov
push
sub
dec
pushf
bswap
dec
cmpsb
andl
ljmp
iret
rcrl
jecxz
push
shll
cmp
pop
outsl
pop
push
cmc
jnp
pop
pop
mov
mov
shlb
mov
push
xor
idivl
movsb
mov
popf
mov
aad
outsl
cmp
mov
arpl
std
dec
inc
addr16
repz
clc
call
jae
pop
lahf
xor
jb
mov
mov
leave
cmp
jle
in
xchg
mov
mov
ds
sarl
jae
sbb
test
jl
insb
jo
mov
adc
loop
fldenv
mov
add
pushf
test
add
fs
out
jnp
jmp
sbbb
or
ficompl
dec
push
pop
sbb
lcall
out
jp
pop
push
fcomi
mov
addl
and
movsl
push
ret
push
mov
jle
sub
mov
jecxz
nop
xor
cwtl
stc
out
push
scas
or
cmc
in
mov
inc
ja
lcall
inc
push
mov
movl
or
fdivs
daa
les
pushf
mov
out
cwtl
xchg
mov
push
mov
movsl
cmp
mov
add
out
shr
dec
adcl
jecxz
dec
notl
inc
js
popa
inc
imul
mov
imulb
pop
out
xchg
sar
mov
fimull
push
inc
leave
test
jl
mov
icebp
cs
adc
adc
mov
je
test
test
test
and
fisttps
incb
or
je
inc
les
push
jns
test
fisubl
notb
pop
cmp
xlat
int
and
jae
int
shlb
clc
lret
out
mov
outsl
in
repz
jno
pop
and
hlt
out
push
push
pop
adc
sbb
mov
adc
mov
fstpt
xchg
xchg
add
roll
outsb
movsb
cmp
mov
fisttpll
mov
or
in
movsl
and
and
push
sbb
ljmp
jecxz
dec
xchg
rorb
push
push
lahf
add
sahf
add
mov
outsb
dec
ljmp
dec
jmp
fisubl
pop
inc
cmp
cmp
xor
jns
or
dec
sbb
call
jne
out
sbb
iret
out
xor
xchg
pop
ret
leave
fisubrs
push
push
dec
xchg
mov
data16
xor
aam
push
aad
popa
lret
inc
leave
adc
outsl
push
mov
ljmpw
ficomps
aam
fcomp
jae
xchg
pop
push
lahf
orb
enter
mov
aas
sbb
adc
mov
adc
sbb
xor
xor
push
js
or
dec
andb
rcrl
dec
mov
sbb
out
inc
repnz
divl
mov
insl
out
mov
subl
xlat
sahf
jne
jo
and
mov
insb
xor
jle
loope
scas
out
sub
pop
push
movups
pop
cmp
enter
sbb
lods
pushf
sub
mov
fstl
push
sahf
negl
stos
pusha
or
fiaddl
or
pop
imul
mov
xchg
xchg
pop
test
data16
cmpsl
in
mov
xchg
cwtl
mov
pop
cmp
ret
sbb
inc
ss
push
test
arpl
repnz
adc
jnp
mov
dec
inc
and
bound
scas
sbb
out
je
cmp
cltd
movb
jecxz
popa
hlt
into
outsl
push
push
popf
cmc
rcrb
inc
test
push
xor
lods
imul
xchg
rcl
push
mov
fimull
vmovupd
dec
and
fcmovnu
pop
mov
arpl
std
scas
dec
xchg
shll
jp
push
fbstp
into
jb
call
inc
mov
testb
cmpsl
mov
ror
fldenv
pop
inc
xchg
mov
xchg
cli
sahf
push
cmp
gs
js
lds
lods
sub
xchg
ret
paddusb
or
mov
lret
add
mov
in
roll
aaa
sub
dec
imul
inc
mov
aas
mov
push
xor
adc
aaa
clc
popf
or
aaa
ds
test
fidivs
popl
lret
push
sahf
test
rclb
jg
out
jge
shr
outsb
cmpsl
mov
int3
mov
add
add
loope
push
dec
or
add
aas
and
xchg
push
imul
int3
mov
pop
ds
xchg
adc
incb
stos
loope
mov
iret
popl
or
sub
sahf
mov
repz
xor
push
pop
popa
icebp
cmp
mov
push
nop
popa
cmp
cvtps2pi
addr16
or
xchg
sub
jmp
or
stos
pop
sarb
push
adc
js
loope
xchg
inc
mov
jb
fnstenv
jge
leave
sti
pop
iret
cmp
repz
and
pop
jp
lret
and
xchg
adc
int
scas
hlt
push
lods
fbld
pop
jmp
xchg
fs
data16
int3
into
repz
test
jmp
negl
pop
or
movsl
ror
outsl
mov
add
int
add
loopne
rcll
call
dec
sbb
jbe
ret
scas
sub
outsl
scas
adc
mov
or
enter
daa
cmp
icebp
aad
es
jo
cmp
lahf
arpl
scas
inc
jmp
in
dec
and
movsl
cmp
push
or
pop
fsubrs
or
jp
mov
in
cmp
outsb
add
imul
mov
cli
cmpsl
push
add
out
int3
sahf
mov
pop
ret
aam
shl
add
insb
ret
hlt
or
push
in
push
daa
mul
fidivs
xor
push
push
arpl
cmpsb
xchg
push
xor
mov
cmp
movsb
sbbl
adc
ds
push
sub
sbb
outsb
out
sahf
aas
push
stos
das
icebp
dec
ficompl
jnp
inc
repnz
js
dec
popf
pop
in
arpl
sub
aad
push
in
cltd
rcrl
or
mov
lea
adc
sub
ficompl
and
not
out
pop
or
adc
rcrb
adcb
sub
push
xor
es
push
pop
adc
int3
inc
or
jno
stos
and
jae
push
imul
rorb
jo
sbb
cmpsb
xchg
lock
test
dec
mov
fimuls
shl
stc
fldl
or
xchg
ljmp
icebp
pop
leave
mov
loope
lret
mov
pop
add
inc
xor
sar
shll
std
or
mov
or
mov
or
in
ljmp
push
push
pusha
mov
inc
fldenv
pop
dec
push
xchg
mov
jb
insl
push
sub
and
xlat
jmp
nop
aad
fnstcw
xchg
add
xor
je
or
pop
push
adc
js
and
mov
mov
inc
mov
lret
ds
in
lea
ljmp
lret
mov
sbb
scas
push
pop
fnstenv
mov
push
xchg
mov
jmp
xchg
push
mov
nop
or
xlat
xchg
cltd
lcall
mov
gs
test
jge
xchg
das
leave
sbbb
pop
mov
push
daa
push
ja
cmpsl
mov
loopne
mov
cs
int
lcall
mov
inc
cs
lods
lods
xchg
insl
stos
lock
jmp
cmp
repz
popa
or
mov
lods
arpl
icebp
or
movsb
ss
inc
cwtl
xchg
mov
fwait
repz
xchg
push
mov
adc
ss
jg
inc
xchg
pop
dec
cmp
in
jp
jo
testb
mov
ret
jae
shlb
ja
xchg
mov
cs
test
adc
hlt
sbb
cltd
add
and
cmpsb
jo
sar
in
shlb
call
mov
xchg
shr
dec
movsl
mov
int
clc
movsb
mov
xor
pop
leave
pop
push
adc
dec
enter
or
push
sbb
push
adc
mov
xor
cmpsl
jno
sub
cmp
leave
or
filds
lcall
sub
negl
sahf
add
dec
sbbl
add
xchg
shll
nop
pop
lock
stc
ret
cltd
loop
sub
or
dec
icebp
lahf
pusha
push
sbb
pusha
cmpsl
pop
sub
popf
fwait
mov
mov
popf
inc
or
mov
cmp
pop
mov
push
jl
add
aad
xchg
out
mov
mov
inc
lcall
inc
mov
cmpsb
mov
test
ss
leave
push
mov
shl
scas
push
and
cli
push
jne
mov
sbb
shlb
ret
xchg
test
lret
fcom
adc
xchg
adc
test
rorb
arpl
or
push
rorb
mov
sub
hlt
out
jne
sub
dec
or
fwait
das
cmpsl
mov
inc
lahf
rorb
jp
inc
stc
xchg
adc
test
ss
scas
movsb
push
ja
cmpsl
jge
push
mov
jae
push
mov
mov
mov
pop
shr
lock
jmp
jge
dec
pop
rcrl
xchg
cli
adc
lds
in
aaa
arpl
ljmp
ficompl
adc
jb
sbb
dec
xor
mov
fs
dec
outsb
jmp
add
dec
hlt
testb
fnstenv
cmp
roll
and
hlt
mov
pop
sbb
pop
mov
cmpsb
lods
inc
stos
test
hlt
xor
dec
sub
sub
cli
add
cmp
outsb
ret
sbb
shll
loope
mov
cmp
cli
cli
testl
test
out
dec
gs
mov
push
movsb
leave
mov
push
mov
shll
push
push
arpl
loop
jnp
fwait
into
cmp
or
mov
clc
fsubrs
fbld
xor
push
adc
fnstsw
jne
pushf
inc
jb
jbe
xchg
shrb
mov
cmpsb
and
fcompl
jge
lock
in
lods
cmp
ret
test
xchg
sti
arpl
push
jnp
sub
xchg
loop
in
jmp
cltd
inc
xchg
add
cmpsb
push
mov
rcrl
adc
xchg
imul
cmpsl
cmp
repnz
fidivrs
sub
lcall
jmp
push
movsl
mov
add
ret
outsl
xchg
outsl
mov
repnz
jno
dec
mov
jg
loope
fisubrs
push
jl
adc
dec
div
mov
add
fstl
and
cmp
push
and
rcrb
in
icebp
xchg
adc
and
ret
lret
jecxz
adc
adc
mov
mov
sub
xchg
push
fisubs
pop
jmp
fcomp
insl
scas
outsb
cwtl
out
data16
add
xchg
cmp
ljmp
and
or
dec
les
cmpb
jmp
loop
fwait
and
push
jnp
jns
daa
xlat
xor
xchg
cmpsb
nop
jl
push
dec
out
xchg
sti
out
scas
dec
lods
movsb
xchg
aad
and
lret
add
jbe
or
add
xchg
lock
mov
fsubl
mov
push
pop
xchg
test
es
xor
xchg
loope
enter
aam
pcmpgtd
inc
out
or
pusha
jp
cmp
pop
jecxz
lock
push
lret
out
scas
push
daa
jle
sub
idivl
lea
lcall
add
divl
incb
pop
cmp
outsl
mov
cli
push
mov
out
push
iret
xchg
sbb
hlt
jns
movsl
lret
fldl
fsubrl
pushf
cmp
and
cmp
icebp
dec
ljmp
orb
adc
mov
add
cmc
add
subb
dec
xchg
cld
mov
gs
push
ret
jo
mov
jmp
or
inc
out
sbb
outsb
push
dec
hlt
pop
fiadds
gs
push
sub
mov
cltd
dec
fildl
lods
adc
xor
inc
fidivs
in
dec
iret
mov
pop
xchg
arpl
inc
inc
scas
xchg
dec
mov
movsl
arpl
cmpl
ret
or
pusha
mov
roll
scas
cmpl
icebp
pop
cmp
jg
mov
jo
roll
jno
into
push
shl
enter
fsts
mov
sbb
push
out
add
mov
xor
push
mov
aad
adc
in
xlat
adc
push
fsts
mov
out
cmp
cwtl
imul
lret
fdivs
std
jb
cmpsb
jae
ja
notl
pusha
sub
test
push
imulw
dec
rclb
and
ss
jge,pt
jae
aad
add
sub
sbb
iret
ss
pop
xchg
inc
or
daa
jmp
mov
cmpsb
addr16
xor
jns
mov
cld
mov
cmp
xchg
jae
or
pop
in
lret
arpl
mov
mov
fisubs
pusha
fildll
int3
dec
adc
xor
and
adc
adc
xchg
fcmovne
xchg
in
inc
pop
enter
jge
fwait
push
pop
in
cli
xchg
inc
inc
jmp
jnp
lahf
mov
jl
jecxz
jnp
cmpsb
push
add
lahf
jecxz
dec
gs
cmc
mov
lahf
cmc
push
pop
popa
std
sbb
fidivs
sub
mov
or
dec
push
mov
sub
sub
dec
cmp
jge
ljmp
iret
out
je
dec
push
das
aad
and
outsl
mov
ljmp
xor
cld
flds
cmpl
ljmp
fucomip
xchg
aaa
or
addb
or
mov
push
ror
mov
outsl
dec
ja
pop
mov
call
xchg
jge
dec
das
and
lock
xchg
mov
fadds
call
push
jns
insb
sbb
inc
jne
shrb
pop
mov
sbb
pop
mov
lds
popa
cltd
lret
pop
mov
adc
cmp
cmp
xchg
daa
dec
enter
in
dec
sbb
sbb
lea
sub
jg
ljmp
shrl
lods
loop
fisubrl
dec
jmp
je
dec
iret
mov
ret
shrl
in
aad
mov
push
nop
sub
imul
pusha
adc
cli
xlat
mov
test
test
nop
xor
jbe
xchg
jl
jge
nop
mov
and
mov
lods
cmp
push
fs
dec
cmp
jmp
fchs
mov
sbb
sub
std
cmp
mov
push
rolb
gs
mov
sub
scas
sub
jne
xor
ror
nop
xor
cmpsb
std
mov
mov
sbb
adc
sbb
and
rcl
mov
or
out
arpl
mov
cmp
pop
mov
movsl
sub
clc
or
adc
push
call
adc
push
pushf
fsubs
xchg
fdivrs
imul
je
movsl
push
mov
lds
sarl
xchg
pop
ja
stos
cmpsb
push
dec
mov
push
fdivs
cmp
aas
repz
mov
jno
imul
faddl
cmp
or
cmpsl
aad
inc
popa
ret
jno
divl
inc
push
push
aad
jbe
shr
mov
sti
cld
fs
cltd
xchg
in
lahf
push
add
push
jns
mov
push
dec
daa
mov
mov
pop
shll
sbb
mov
or
les
add
inc
cld
inc
adc
pop
lret
sub
xchg
imul
ret
into
jae
mov
shrl
cltd
mov
mov
dec
in
mov
fwait
lods
lock
push
and
testb
stos
xchg
adc
and
aaa
mov
addr16
inc
je
lods
pop
mov
mov
cmp
out
sub
push
enter
push
fcmove
rcrl
xlat
sub
jecxz
fcoml
fmull
dec
aas
xchg
xor
mov
mov
lock
dec
pushf
mov
ret
inc
xchg
pop
stos
sbb
out
aad
mov
dec
imul
jo
mov
imul
pop
inc
mov
test
add
popa
fucomi
insl
lds
mov
dec
inc
xchg
dec
dec
mov
out
xchg
push
fsubs
fwait
xor
dec
gs
mov
and
push
pushf
add
stos
out
push
cs
push
xchg
pop
in
and
xchg
inc
popa
mov
add
or
mov
xchg
ljmp
or
jns
and
shrl
lahf
fnstenv
js
mov
or
out
int
les
add
cmp
stos
gs
fidivrs
test
push
and
cmp
xor
push
scas
repz
test
push
xlat
add
sub
sbb
jne
aaa
out
sub
fsubs
pop
mov
ss
cmc
jb
out
gs
dec
movsbl
sbb
sbb
adc
out
and
ret
mov
stc
pop
and
pop
rorb
repnz
int3
xlat
mov
mov
dec
jns
mov
sbb
mov
dec
iret
adc
mov
jo
clc
mov
cmpsl
stc
xchg
fs
jecxz
out
xchg
fst
mov
imul
lock
add
push
daa
sti
mov
jge
sbb
loopne
iret
in
lret
aas
pop
or
or
sti
push
out
ja
out
into
negl
into
inc
cwtl
rol
xor
cmp
sti
dec
mov
ret
push
int3
icebp
fcmovnb
cmpsb
sub
xchg
in
iret
pop
push
cmc
mov
pop
js
std
ret
jl
xor
out
xor
inc
jbe
pop
icebp
jae
dec
shrl
out
jmp
shrb
xchg
test
sub
adc
sbb
xchg
xor
ljmp
dec
pop
inc
mov
and
in
outsb
inc
dec
in
movsb
cmpsl
dec
push
or
daa
paddd
adc
stos
test
jle
or
cmpsb
sbb
xchg
scas
sbb
clc
xchg
pop
sbb
add
mov
cmc
test
aam
int
jl,pn
xchg
cs
cmp
push
inc
and
sbbb
mov
movsb
js
mov
repz
xchg
outsl
and
outsb
jns
and
out
jae
mov
sbb
imul
mov
adcl
ret
pop
test
lock
fimuls
loope
lods
nop
inc
push
out
pop
es
inc
loope
jnp
outsb
sbb
inc
stc
dec
subl
xor
xor
in
sub
mov
movsb
push
int
mov
cmpsl
jmp
movsb
scas
sbb
aaa
jmp
mov
lea
sbb
pop
sub
xchg
es
pop
lods
xor
lods
add
ret
fsubl
in
cmp
aam
adc
push
cmp
popf
mull
inc
adc
daa
jnp
mov
es
cmpsl
push
sub
js
inc
adc
enter
inc
xchg
push
lds
sub
dec
sbb
add
xchg
loopne
arpl
or
dec
inc
fnsave
xchg
outsb
mov
push
mov
jp
xor
jl
fcoml
mov
cmpsl
sub
and
pop
adc
pop
leave
mov
insb
repnz
xor
fdivrl
and
cmpsl
xchg
jo
outsl
and
mov
iret
idiv
mov
adcb
pop
jbe
sub
xchg
fwait
jae
movsb
jb
pop
movsl
add
push
lea
sahf
inc
add
inc
push
imul
inc
and
iret
inc
jne
stos
fistps
mov
shrb
sti
jns
pop
lahf
test
testb
ret
or
lret
js
xor
call
or
fstpt
gs
scas
ja
mov
lret
and
pusha
out
push
popf
sbb
fadd
xchg
and
iret
cltd
cli
sub
sub
mov
ss
mov
ret
cmpsl
clc
mov
pop
mov
insb
lcall
sub
xlat
mov
and
inc
sarb
in
scas
adc
dec
dec
cmpsl
jnp
loop
jbe
add
xor
out
js
pop
adc
xor
cmpsl
xor
push
mov
shrl
nop
push
jmp
js
mov
inc
cli
xchg
push
sub
bnd
mov
test
test
ja
daa
jmp
data16
test
jae
pop
shlb
int3
xlat
fisttpll
test
inc
push
in
inc
push
push
push
push
jg
mov
adc
mov
xor
iret
cmp
mov
jbe
std
ret
sbb
mov
mov
rclb
imul
inc
cli
add
rcll
push
xchg
aam
sub
cmc
pusha
addr16
cli
mov
xchg
sbb
test
fstpl
lret
int
mov
stos
mov
xchg
sahf
fwait
sbb
jp
mov
pop
mov
jg
pusha
and
push
in
ds
and
push
push
mov
loop
test
sub
mov
aas
out
sub
dec
pop
insl
mov
fldt
jo
and
jg
data16
mov
xor
iret
cmc
mov
cwtl
mov
jecxz
mov
sub
mov
in
fidivs
shlb
pop
add
mov
pop
into
jecxz
push
in
mov
jo
cmpsl
cmc
fstl
mov
add
cmp
jl
in
fstpt
xchg
cmpsl
mov
cs
sbb
add
fimull
sub
mov
fiadds
ja
add
mov
aas
pcmpeqd
dec
pop
lock
fnstsw
pop
mov
bound
in
mov
test
dec
xor
jae
js
shlb
xchg
lods
insl
adc
insb
inc
es
scas
push
and
mov
cwtl
pop
inc
sub
jecxz
inc
mov
test
push
push
mov
xchg
inc
add
sahf
add
orl
xlat
cltd
push
mov
daa
jmp
mov
mov
pop
arpl
xchg
sbb
nop
icebp
mov
mov
nop
repz
cmp
ret
xchg
sub
fmulp
adc
dec
or
pop
jg
mov
adc
int
mov
adc
xor
sbb
int
jae
xor
pop
imul
push
jno
rcr
out
imul
pop
jle
mov
pop
inc
or
loop
adc
xchg
mov
pop
pop
push
dec
jo
sbb
cmpsb
sub
loope
xchg
xlat
cli
mov
lods
sahf
pop
push
inc
cs
cmpsb
and
mov
sar
out
arpl
mov
push
or
xchg
push
js
ljmp
mov
shr
dec
repz
ja
imul
cmp
aad
add
in
cwtl
ret
jl
or
stos
repnz
xor
cmc
inc
loopne
inc
rclb
mov
es
add
lods
subl
push
cmp
pop
jp
mov
jl
sbb
xchg
sub
gs
ja
scas
nop
addr16
in
pop
aaa
pop
js
cmp
push
dec
rol
into
imul
xor
fistpll
inc
jp
inc
aad
cmp
and
fdivrs
xchg
jl
test
jb
mov
in
les
sbb
rolb
cmp
ds
data16
xchg
movsl
cmpsl
lahf
test
lret
jl
inc
leave
and
adc
xchg
mov
inc
adc
stc
les
insb
arpl
pop
leave
in
push
pop
mov
mov
cld
adc
mov
mov
xchg
ja
fisubrs
ja
popw
xlat
xor
scas
xor
mov
cmpsl
out
mov
daa
loop
mov
and
lahf
jmp
ret
pop
jp
jnp
mov
arpl
sbb
rcrl
call
sub
xor
pop
mov
push
dec
mov
fbld
adc
out
mov
push
dec
dec
loopne
in
cmp
jge
xor
insb
and
push
fsts
pusha
ret
imul
movsb
xchg
and
ret
inc
sbb
mov
cmp
pop
mov
xchg
jno
dec
inc
cmp
ds
aad
imull
sbb
arpl
push
loopne
fwait
clc
push
inc
sarl
xchg
repnz
jo
scas
cmpb
mov
push
out
pop
insb
lea
lcall
mov
xchg
push
push
add
mov
mov
dec
or
adc
xchg
ret
decl
aas
int
cmp
aaa
repnz
cmp
test
mov
xchg
mov
or
sub
lret
mov
cmc
lret
jmp
aas
xchg
sti
xor
arpl
cmp
dec
aad
sbb
pop
push
or
repnz
adc
or
pop
xlat
mov
mov
inc
adcb
pop
and
inc
mov
lods
lret
pushf
adc
icebp
ja
loope
loopne
adc
xor
jle
jb
push
or
pop
cmp
mov
fsubrs
add
imul
test
stos
int
jp
leave
cmp
iret
pop
push
mov
je
mov
shr
cmp
addr16
adc
mulps
push
xchg
pop
pop
fcmovu
add
xor
inc
stos
into
scas
stc
loop
cmp
jmp
lock
ret
andl
pop
pop
cmp
sbb
repz
into
or
movsl
dec
add
sub
adc
imul
ret
ret
ret
dec
fldcw
sbb
rcl
push
push
cli
jmp
ret
adcb
pop
xchg
iret
callw
in
stos
lcall
aam
aaa
pop
adc
sbb
in
mov
jg
cmp
jae
xor
adc
divl
xor
in
stos
adc
mov
std
negb
mov
cmp
push
cmp
stc
or
mov
mov
les
daa
and
outsb
and
add
addr16
dec
push
mov
sahf
iret
mov
cmpsb
push
pop
gs
pop
int
scas
inc
outsb
jne
mov
adc
je
decl
xor
xor
mov
ds
add
ret
mov
sbb
ficoml
pop
jg
into
xchg
cmp
pop
testl
xor
sub
pushf
push
iret
aad
popa
enter
leave
gs
mov
loope
or
testl
xchg
sub
mov
sub
and
mov
push
jmp
icebp
xchg
sbb
fsub
and
sbb
and
movsl
pop
cmpsb
jg
jnp
mov
mov
adc
sbb
lea
arpl
insb
xor
pcmpgtw
pop
mov
movsl
les
adc
add
or
iret
dec
jnp
mov
loop
inc
test
add
xlat
call
fdivrl
xchg
stc
push
cmc
inc
xor
out
rorl
jl
repz
daa
dec
loope
push
xor
sbb
pop
xor
jle
xchg
jg
scas
iret
in
flds
outsl
je
cmp
xor
adc
mov
scas
mov
push
mov
xchg
ja
inc
into
push
pop
inc
xchg
testb
lret
mov
jmp
gs
arpl
out
jp
push
pop
shll
cmp
loop
dec
push
push
or
frstor
pop
jne
popf
jge
call
pop
mov
add
addr16
add
cmp
int
add
dec
cmp
test
enter
pop
ljmp
ja
movsb
add
cmp
and
jg
sbb
jge
out
mov
dec
movl
ljmp
push
test
push
inc
xor
xchg
js
inc
int3
popf
pushf
lock
pop
mov
data16
pusha
daa
mov
in
gs
loopne
stos
xchg
jp
stos
mov
jge
jg
fwait
orb
arpl
or
adc
dec
and
gs
mov
les
or
inc
add
in
pop
sbb
lods
sub
loopne
testl
daa
inc
cltd
push
or
cwtl
pop
in
test
lock
je
sbb
cmp
arpl
ficoms
stos
jb
shrl
leave
dec
imul
cmp
mov
inc
cmp
gs
fstps
loopne
lahf
sub
mov
adc
in
add
pop
icebp
mov
pusha
enter
adc
cmpsb
mov
fadds
outsl
clc
je
cld
scas
sub
iret
adcb
int
xor
aam
pop
jne
ficoms
test
out
dec
cmp
mov
xor
pop
inc
jns
xchg
xchg
cmp
or
xchg
out
stos
push
insb
jp
xchg
int
mov
stos
das
je
sbb
sarl
lcall
std
and
xchg
nop
mov
jns
mov
sub
int
leave
lcall
jbe
jp
inc
sbb
xor
xor
int
mull
push
mov
jne
es
sbb
aaa
dec
inc
xor
gs
ja
inc
push
jmp
adc
cmp
cwtl
jno
rol
pop
sbb
bswap
in
subl
ror
pop
pop
push
xchg
or
mov
dec
or
int3
lcall
cld
xchg
icebp
or
xlat
out
jp
dec
push
jo
sbb
in
xchg
add
outsl
inc
in
xchg
or
lcall
lods
cmc
pushf
shrb
orb
push
mov
add
pop
dec
inc
dec
push
idivb
or
dec
push
mov
into
sbb
sub
mov
repz
pop
pop
sti
out
xor
or
popa
cmc
pop
jle
cmovl
loope
cld
xchg
rolb
sub
nop
testl
cmpsl
out
leave
stc
add
lret
sub
fidivs
push
int3
fsubr
daa
mov
pop
pop
pop
push
mov
cmp
enter
xchg
pop
xor
std
push
push
test
push
inc
je
fisttpl
pop
stc
adc
sti
mov
lret
and
cld
pop
pop
cs
fmuls
inc
inc
xor
les
adc
sub
pop
lock
or
stos
or
jmp
repz
into
and
mov
ret
pop
cmpsl
or
lds
add
xor
loope
xor
shr
js
int
fsts
mov
std
ja
or
cmpsb
addb
pop
aad
sub
xchg
xor
cmpsb
fsub
fsubp
jge
jmp
lea
insb
repnz
icebp
out
incl
xchg
insl
lock
nop
scas
dec
inc
in
outsl
or
sarb
xchg
das
je
gs
mov
jle
and
mov
inc
pop
cs
jo
pop
jle
lret
pop
cmpsb
add
test
jb
push
fnstenv
sbb
sub
mov
hlt
aas
es
inc
mov
xchg
aaa
stc
cmc
jmp
jo
xor
add
mov
ljmp
adc
xchg
xchg
pop
cmpsb
pop
outsl
pop
add
movsb
mov
mov
lea
es
test
xor
test
dec
add
push
or
test
dec
inc
push
sarb
clc
and
dec
out
adc
push
mov
js
xchg
ds
mov
lret
jo
push
add
testb
or
leave
stos
mov
cmpsl
jae
outsb
sub
and
call
in
les
adc
mov
das
xorl
mov
stc
clc
fwait
dec
xchg
xchg
fcoml
sbb
pop
nop
or
sbb
stc
jo
sbb
cmp
clc
xchg
imul
mov
mov
inc
repnz
ljmp
hlt
stos
ds
repnz
mov
out
pop
dec
push
cld
dec
push
lcall
xor
mov
divb
and
cmpsb
jle
sahf
loop
jecxz
push
xchg
ficoml
fistl
das
loop
mov
fs
cs
add
xor
out
imul
pusha
popf
sbb
jp
dec
fistpl
jle
fisubrs
ja
imul
push
dec
fcomps
mov
xchg
inc
roll
xor
sub
adc
and
in
ss
or
dec
push
lahf
sub
jne
stos
ficoms
mov
mov
add
push
or
shl
stos
aad
or
mov
or
scas
mov
gs
push
add
gs
pop
adc
pop
lds
jge
insb
fs
or
scas
xor
cwtl
jns
jg
sub
sub
inc
push
xchg
movsl
popf
adc
mov
lcall
xor
cs
pop
sub
movsb
jge
test
outsl
mov
mov
in
repnz
cmp
dec
decb
into
mov
leave
jle
pop
mov
sbb
lods
or
enter
testb
out
push
dec
or
jge
add
shl
int
xlat
aas
cmp
jecxz
imul
pusha
jp
test
out
inc
sub
mov
push
jl
pop
sbb
seta
mov
ret
inc
fidivrs
push
sbb
inc
jno
push
push
outsb
cmp
insb
push
popa
iret
jp
pop
int3
pop
mov
sarb
add
test
push
data16
or
out
test
xchg
xchg
aas
lcall
cmp
daa
repz
stc
test
std
adc
xchg
pop
divl
push
dec
dec
insl
xor
loop
dec
push
mov
push
sbb
dec
inc
pop
lcall
mov
add
adc
aaa
ja
popa
aam
cs
cmp
xorl
mov
in
mov
mov
xchg
cmc
lods
pusha
roll
pop
dec
leave
xor
pop
jmp
daa
fimuls
addr16
fisttps
in
movsl
cmp
and
fiadds
jno
je
xchg
push
je
int3
js
lret
out
jmp
sub
or
push
aad
jecxz
iret
xor
cmpsb
sub
xchg
xchg
fdivrp
xor
xlat
nop
add
mov
sub
push
and
fadd
repz
notb
aas
ljmp
pushf
shll
outsl
fists
xorl
out
das
jo
adc
pop
xchg
fstp
outsl
rorb
sub
sub
sub
xchg
sub
mov
xchg
jl
jae
or
adc
sarl
mov
dec
mov
inc
push
inc
dec
sub
add
scas
dec
loope
adc
jo
lea
fldt
push
js
dec
inc
in
jmp
jp
cmp
jp
cmp
mov
inc
xor
movsl
mov
and
icebp
dec
jge
hlt
sbb
rcrl
pop
stos
pop
mov
lahf
add
fwait
loope
jb
mov
pop
je
imul
inc
movsb
cmp
and
hlt
push
mov
xor
and
jmp
out
jb
push
cmpsb
movsb
mov
mov
subb
pop
loopne
popa
fdivs
cmc
sub
push
out
xor
enter
xor
and
fld1
js
icebp
scas
xchg
aad
inc
xchg
push
int
loope
sub
mov
jnp
in
pop
add
test
pop
jno
and
movsb
cmovle
sti
lock
add
dec
pusha
xchg
push
mov
in
movsl
mov
dec
popf
jle
clc
minps
xchg
cltd
in
je
mov
in
lahf
fdiv
into
pushf
inc
hlt
sbb
int
adc
mov
filds
scas
or
adc
mov
push
mov
ret
es
cmp
push
dec
pop
dec
mov
stc
push
int
out
cmp
arpl
test
sub
push
jbe
push
dec
sahf
sub
or
mov
xchg
mov
push
hlt
add
sbb
sar
cmc
xor
ror
sub
or
cmp
aas
inc
pop
jb
adc
xor
and
test
push
sbb
jp
cwtl
fbstp
in
ljmp
pop
loop
adc
dec
lock
lods
xchg
inc
inc
lds
or
les
and
in
shl
mov
mov
push
dec
jbe
xchg
stc
add
pushf
in
inc
aad
lret
lods
imul
jmp
jp
das
pop
fdivrs
in
ja
decl
sub
jecxz
enter
or
lahf
dec
notb
xchg
arpl
cmp
ljmp
add
rorb
and
aad
int
lahf
add
das
pushf
jns
jae
adc
adc
je
ja
mov
arpl
orl
and
fs
push
fsubrs
push
pop
pop
insb
cltd
adc
xchg
sub
lea
shrb
mov
and
outsb
xor
dec
cs
inc
cmp
sbb
push
cmp
arpl
pop
add
add
insl
xchg
inc
ret
pop
cmp
cmp
push
rcrb
rcrb
jl
pop
rcll
xchg
adc
or
mov
mov
subb
pushf
xor
push
pop
mov
xor
stos
lahf
enter
arpl
pop
out
int3
add
loopne
std
jmp
cmp
add
outsb
jbe
sbb
aas
jecxz
daa
cmpsl
pop
pop
clc
mov
push
ret
out
or
push
clc
movsl
dec
test
and
cltd
mov
rolb
add
xor
ffree
out
insb
jae
cmp
mov
xchg
xchg
mov
adc
test
rorb
out
fisttps
mov
inc
rclb
mov
sbb
cmpsl
and
fst
and
lret
mov
xor
ds
mov
mov
int3
jns
dec
mov
bswap
lret
jmp
adc
stos
out
shlb
scas
push
mov
mov
rclb
mov
jae
lds
les
push
loop
int
sub
std
mov
sbb
cmp
dec
mov
push
mov
les
cmp
enter
mov
jbe
call
or
jae
test
and
cmp
mov
push
test
shl
addr16
jg
cmc
dec
repz
jmp
xor
sbb
mov
or
stos
mov
cld
das
sbb
pop
js
and
push
addr16
xchg
minps
xchg
inc
sarl
cmp
out
aad
jmp
or
in
inc
xorb
andb
sub
pop
decl
sbb
inc
loopne
sub
pop
jo
adc
out
dec
sub
mov
mov
jle
xorb
cmp
int
adcl
into
je
enter
mov
sbb
enter
sarl
mov
cltd
stc
jle
push
xchg
mov
add
sbb
xor
into
leave
idiv
dec
inc
mov
cmpl
jge
push
cmpsl
adc
mov
inc
xchg
mov
mov
adc
shr
les
lcall
dec
das
test
push
and
pop
pop
inc
push
sbb
or
bound
cld
shrb
cmpsl
mov
rcrl
jnp
pop
into
push
repnz
lahf
andl
jno
pop
dec
scas
loope
add
adc
mov
aaa
mov
push
leave
fisubrs
sbb
xor
pop
and
sbb
or
cmpsb
in
add
xchg
mov
std
je
out
mov
jge
push
stos
scas
cld
fildl
jno
repz
xlat
sub
jb
add
push
mov
mov
dec
repz
adc
cmp
enter
lds
mov
ss
sti
mov
dec
push
fnstcw
repnz
mov
xchg
or
ds
je
hlt
dec
cmp
aad
inc
dec
movsb
cld
rcrl
imul
xor
add
sbb
popf
sbb
movsl
xor
enter
add
xor
test
ret
lcall
add
jecxz,pt
inc
push
outsb
movsb
mov
enter
mov
pop
pop
pop
xchg
sub
pop
inc
inc
mov
adc
cltd
aam
rol
push
data16
mov
add
mov
sbb
data16
ret
pop
lahf
out
xlat
push
repz
rorb
pop
sbb
fs
imul
pop
aas
sub
ret
inc
stos
inc
and
jge
ds
add
lods
ljmp
mov
enter
subb
mov
cmp
decl
xchg
sbb
add
sbb
lods
gs
add
push
in
scas
xlat
and
fdivl
and
sbb
pushf
or
jecxz
in
daa
out
pop
cmp
sti
mov
mov
es
push
dec
iret
bswap
rol
mov
xor
mov
es
xor
push
pop
jecxz
adc
sub
pushl
push
movl
push
or
pop
and
xchg
mov
ja
xor
adc
push
shr
xor
pop
test
xchg
xchg
xchg
push
es
xor
repnz
mov
cmc
mov
fcoml
iret
cmp
or
and
mov
popa
mov
mov
loope
fsubs
dec
sbb
push
mov
push
lds
push
loop
leave
mov
scas
sub
cmc
fidivrl
ja
hlt
mov
xor
test
cmp
mov
lods
clc
mov
sbb
adc
cld
mov
mov
mov
std
fcoms
test
stc
or
adc
mov
push
jge
int
sbb
test
stos
fwait
test
mov
sub
mov
mov
in
sbb
push
fisubrl
adc
adc
add
leave
mov
xchg
mov
pushf
fldt
jg
pop
mov
xor
cwtl
mov
js
test
lcall
or
movsl
xor
xor
cli
int
and
outsb
inc
cmp
cltd
repnz
aad
sub
test
out
clc
jb
ficoml
mov
mov
test
push
imul
pusha
les
movsl
jecxz
sbb
jp
and
push
ljmp
mov
mov
shrl
xchg
xchg
xor
pop
ss
mov
push
call
insl
cmp
or
lret
iret
inc
jae
push
jnp
push
lret
push
adc
cwtl
add
jns
fstpl
dec
add
xchg
repnz
sti
arpl
dec
dec
icebp
xchg
mov
dec
imul
test
dec
sbb
aas
push
scas
test
mov
dec
xor
out
pop
lods
jno
sbb
into
jns
loop
lret
or
pop
jle
and
mov
or
pop
ficoml
dec
daa
jnp
loopne
push
enter
mov
inc
or
sbb
ret
xchg
repz
loop
cli
outsb
ljmp
aad
movsb
notb
jb
pop
arpl
mov
cmc
bound
pop
and
add
clc
xchg
dec
xor
scas
cmpsb
mov
xor
loopne
lcall
loop
mov
ss
mov
cmp
pop
add
lcall
mov
aam
fisubl
pop
inc
xor
stos
out
shlb
lds
mov
add
in
mov
xchg
dec
pop
pop
sbb
stc
out
fcoms
repz
mov
pop
movsb
cmp
inc
outsb
jecxz
rcrb
stos
jnp
dec
mov
movsb
flds
sahf
jbe
xchg
scas
movsl
push
mov
cmpsb
nop
push
fistpl
orl
iret
mov
in
sti
mov
mov
jp
pop
insl
jb
mulb
in
add
ret
sub
out
cwtl
sbb
xor
or
pop
sub
hlt
mov
out
xchg
lcall
mov
pop
push
outsl
fnstenv
in
xor
into
das
sub
fcoms
loopne
aad
sbb
cmp
or
imul
je
idivb
add
in
jno
call
arpl
mov
les
negb
xrelease
fiaddl
pop
stos
int
adc
imul
fldenv
inc
mov
out
push
dec
xchg
and
pusha
gs
addb
jmp
je
push
mov
aas
cli
xor
cmp
sti
inc
mul
or
testb
push
lret
xchg
inc
sub
sub
add
fcoml
leave
jecxz
mov
and
out
jne
mov
ja
cli
lahf
fwait
pop
gs
xchg
ret
call
lea
jb
or
cwtl
pop
inc
or
mov
movsl
pop
mov
sbb
jle
dec
and
imul
dec
or
xchg
aad
mov
and
mov
insb
add
shrb
pop
lods
lcall
pusha
mov
mov
sub
call
inc
mov
push
or
ja
xchg
and
pop
xchg
pusha
inc
inc
mov
hlt
ds
or
xorb
icebp
xchg
jne
push
daa
into
add
jmp
xchg
repz
lcall
inc
cmpsb
outsb
and
and
testb
movsb
or
sarb
push
inc
movsb
lods
mov
fadds
lret
iret
pop
test
fdivp
fdiv
ret
push
mov
cmp
roll
pop
cmpsb
fs
cld
and
mov
xcrypt-ctr
cmpsl
pop
cmpb
add
push
adc
outsl
and
sahf
or
dec
test
mov
mov
sbb
push
add
and
stos
inc
jp
push
mov
add
stos
mov
imul
enter
sbb
bound
inc
movsb
sti
lahf
lds
push
jecxz
mov
bound
mov
pop
and
mov
mov
jo
enter
adc
jne
jmp
negb
jg
pmulhw
fs
outsl
xchg
jmp
mov
cmp
xlat
mov
add
clc
lret
iret
jle
hlt
push
inc
lahf
sarb
sub
mov
js
sbb
decb
paddd
add
ja
xor
in
mov
xor
and
mulb
out
nop
nop
ret
push
mov
int3
push
sbb
cmpsb
ds
cmc
and
jecxz
popf
mov
pmullw
out
cmpsb
mov
add
mov
jo
inc
push
dec
ret
pop
leave
ret
dec
lcall
bound
js
mov
pop
push
movb
std
sub
outsb
push
mov
inc
pop
xchg
mov
or
mov
or
mov
sbb
dec
fstl
fwait
orl
inc
aaa
mov
sub
mov
ds
sub
fwait
push
test
inc
push
add
imul
sub
xor
cwtl
cmp
push
sarb
lock
adc
or
mov
push
xor
fmul
xor
mov
jmp
mov
adc
std
or
dec
pusha
pop
iret
xor
jg
xor
xchg
jecxz
mov
loop
jns
outsl
cmpsb
cltd
mov
mov
push
fnstcw
or
xor
mov
inc
rep
adc
sub
inc
seto
and
add
out
rol
pop
dec
aaa
dec
or
ret
pop
inc
sbb
inc
jecxz
jo
imul
imul
test
mov
addl
dec
cmc
notb
icebp
test
jnp
mov
mov
jbe
repz
scas
add
adc
jae
stos
fcomps
ret
mov
sub
sbb
mov
scas
and
and
pop
shrb
jo
pop
jbe
pop
lock
jle
mov
sub
loop
sub
or
jle
test
int
cld
cmpsl
cmpsb
popf
push
xchg
push
sub
push
xor
mov
mov
inc
push
loopne
sbb
movsl
jg
dec
lods
mov
sbb
cwtl
in
test
pusha
mov
sti
cmovge
rorb
pop
xchg
and
mov
inc
lcall
mov
dec
adc
push
fwait
dec
or
bound
aas
add
xlat
jne
lods
mov
inc
cmc
aam
loop
jecxz
std
fucomip
iret
or
je
jbe
insb
push
xor
xorl
inc
js
xchg
sub
push
pop
dec
mov
cs
imul
xchg
outsb
or
push
outsb
xchg
cwtl
dec
lods
jmp
mov
out
xchg
dec
or
adc
ljmp
adc
adc
pop
fldenv
xchg
add
stc
popf
int
test
sbbb
cmp
mov
mov
sub
iret
jmp
into
dec
dec
adc
data16
xchg
xchg
jbe
inc
inc
sbb
xor
mov
adc
pop
inc
sbb
rorb
jb
jmp
mov
sub
push
mov
jne
mov
repz
cwtl
mov
mov
mov
jb
pop
mov
or
pop
pop
sbb
mov
pop
ret
dec
mov
jae
lcall
adc
jp
nop
jmp
adc
adc
sti
insl
and
and
stos
jg
test
lock
xor
sarb
dec
jb
sub
mov
xchg
faddl
jns
cmp
mov
add
into
dec
inc
enter
das
mov
imul
out
scas
nop
mov
sub
rep
rclb
pop
jg
lahf
out
addl
nop
push
xchg
aas
or
stos
sbb
sub
jg
jg
ja
mov
or
shrl
loop
pushf
imul
repz
push
xchg
shrl
mov
dec
enter
out
inc
pop
pop
cltd
inc
jno
imul
or
add
jge
cld
fwait
xchg
or
adc
mov
or
jb
leave
pop
clc
fcomip
sub
icebp
mov
and
push
cs
push
xchg
add
sbb
shrl
or
fistpl
mov
ficoml
dec
push
jp
push
mov
popa
xchg
push
cmp
mov
push
sbb
mov
xchg
push
jg
ficoml
outsb
clc
fnsave
xchg
mov
or
enter
jnp
xchg
push
push
adc
xchg
stc
push
adc
iret
je
pop
repnz
bswap
dec
xchg
cmc
dec
jge
lds
xor
js
mov
xor
xor
mov
and
out
add
sub
mov
shrl
lret
mov
or
dec
push
movsb
mov
test
or
pushl
outsl
jge
mov
cmp
add
inc
repz
lret
mov
data16
xor
lret
inc
ja
push
fucomi
sbb
cmp
mov
iret
sub
stc
pop
mov
jg
leave
jnp
fsubs
loope
add
lret
mov
jl
das
fidivrs
dec
inc
mov
pushf
sti
shr
adc
mov
call
in
mov
bound
daa
out
rcl
push
cmp
cmpsb
push
addb
or
out
xchg
inc
pop
push
mov
in
pop
aaa
push
rol
mov
push
jnp
mov
imul
jne
cmp
sub
dec
lret
pop
loop
arpl
mov
imulb
pop
cmpl
pop
sbbb
mov
push
xchg
cmp
mov
jnp
mov
gs
frstor
dec
mov
lret
push
or
jo
pop
add
mov
or
andl
push
sub
aaa
es
aas
mov
pop
mov
jge
mov
popf
jb
mov
mov
and
cmp
add
push
fwait
xchg
shrl
or
or
repz
test
mov
cli
and
mov
ljmp
ret
mov
jne
or
int3
fs
pop
lods
iret
xor
lock
fisttpl
int
sbb
xor
stos
pop
data16
jmp
lock
es
sbb
add
mov
addr16
mov
loope
in
icebp
movsl
repnz
ficoml
popa
aad
push
rol
pop
jns
jg
xor
imul
lods
fmull
out
add
fwait
mov
gs
jecxz,pt
sub
negl
mov
jae
scas
mov
fs
push
push
bound
jo
fdivl
pop
iret
add
sub
outsb
dec
jecxz
add
mov
das
mov
xchg
jge
stc
and
jnp
push
mov
lret
or
cmp
es
mov
sbb
xchg
stos
sub
pop
pop
std
insl
xchg
add
stos
fimull
mov
ffree
cmp
cmp
in
aas
int
or
daa
lret
bound
int
cltd
ja
mov
xchg
out
sub
adc
test
pop
imull
sahf
test
cmp
ljmp
push
std
pop
xor
or
inc
idivb
and
adc
aas
add
mov
sub
cmp
pop
adc
das
imul
fsubl
fmuls
fs
movsb
push
test
sub
cld
push
adc
ljmp
test
rolb
dec
imul
mov
or
repz
jle
out
sbb
or
or
stos
shl
mov
adc
xchg
ds
ficoml
add
sbb
mov
gs
adc
push
push
pop
mov
mov
sub
add
push
push
push
xor
mov
lahf
sahf
jg
jb
call
mov
dec
xor
std
xchg
imul
pop
mulb
cwtl
mov
sbb
add
sbb
jno
and
and
test
adc
xlat
mov
lock
mov
push
pop
add
int
divl
mov
cmpsl
sti
test
jp
mov
test
mov
fsubs
bts
push
fistps
add
mov
mov
add
lret
add
icebp
scas
aas
adc
inc
cwtl
scas
cli
mov
sub
sbb
stos
mov
and
cmp
dec
adc
or
cmp
add
loop
loope
leave
pushw
adc
ret
inc
pop
or
fists
jp
fwait
mov
insl
dec
psrlw
insb
push
xor
mov
inc
mov
and
dec
mov
jo
sbb
pop
jl
inc
mov
jge
testb
cs
loop
or
in
and
xchg
clc
mov
loope
push
xchg
mov
adc
call
ss
sub
lahf
mov
hlt
push
push
ret
xchg
repnz
sbb
or
iret
mov
scas
add
adc
test
xchg
sbb
or
stos
mov
sbb
test
mov
stos
cmp
aad
ljmp
mov
scas
and
ror
pop
xchg
and
ss
pop
imul
cwtl
ja
dec
jns
push
cmp
or
test
loop
pushf
mov
jns
mov
outsb
lock
mov
movsl
imul
push
adc
ret
adc
andb
lock
hlt
cmp
divb
sahf
cltd
adc
add
lret
add
adc
pop
xchg
or
add
add
xchg
mov
sbb
adc
xor
add
rolb
imul
insl
cmpl
dec
sbb
insb
clc
inc
cli
push
aam
push
pop
sub
jg
or
xchg
arpl
add
sbb
insl
inc
cltd
aaa
jno
and
pop
loop
subl
dec
or
add
gs
xor
pop
sar
sbb
adc
dec
loopne
out
jmp
test
dec
mov
cld
dec
ret
cmp
mov
lahf
jge
mov
add
call
test
xchg
xor
stos
fucomp
push
iret
orl
dec
add
cmp
ret
addr16
sbb
push
stos
sub
loope
push
inc
ja
adc
icebp
test
jb
jno
fmuls
popf
ss
push
lret
enter
dec
stos
mov
insl
subb
mov
out
das
enter
jmp
in
and
data16
jb
es
arpl
cwtl
adc
test
mov
xorl
push
mov
icebp
xchg
or
imul
or
mov
cli
mov
inc
push
dec
pop
or
sub
mov
fwait
mov
jg
jge
mov
add
mov
mov
push
out
adc
insl
sbb
mov
dec
insb
loop
inc
pop
add
dec
outsb
sbb
aas
cmp
loopne
lea
fsubl
sub
subb
sti
or
insl
daa
lcall
ret
push
test
cmp
fisttps
dec
lds
loop
dec
leave
leave
repnz
and
mov
inc
or
add
ficomps
or
shlb
or
loop
dec
adcb
mov
stos
addr16
adc
test
inc
xor
movsb
jg
outsb
popa
and
jae
sahf
inc
sbb
in
stos
add
add
test
add
out
fcoms
cltd
sub
scas
push
jp
mov
mov
arpl
adc
in
cmp
sub
in
mov
repz
stc
sbb
inc
jge
jb
cmpsl
daa
xchg
movsl
pop
and
xchg
pop
je
mov
xor
xor
leave
xchg
cmpsl
outsb
pop
sub
and
adc
sbb
jne
jge
orl
sub
adc
push
loope
int
mov
adc
add
daa
inc
ret
iret
mov
add
insl
mov
dec
xchg
cmp
push
imul
out
adc
sbb
jb
stos
lret
insb
jb
enter
pop
pop
cmpsb
xchg
shlb
bound
mov
nop
xchg
fildl
push
or
push
xchg
dec
and
enter
and
push
inc
and
popf
in
xlat
mov
pop
xor
push
jl,pt
lret
sar
add
dec
and
cmp
icebp
cmp
mov
inc
mulb
mov
sub
sbb
testl
mov
inc
sub
mov
adc
ss
call
hlt
rorb
scas
enter
dec
inc
mov
and
push
ds
outsb
lock
add
pop
hlt
cltd
sahf
xor
adcl
sbb
mov
lock
dec
xorl
jb
cmp
push
pop
pop
jle
out
dec
test
mov
es
or
sbb
lds
mov
xchg
mov
cltd
bound
push
cmp
cmp
lock
fcompl
pop
inc
subl
enter
insl
xchg
into
rcrb
mov
or
push
or
pop
lcall
je
scas
mov
dec
daa
sub
xchg
sbb
jmp
mov
xor
movsb
lea
adc
out
daa
ror
scas
dec
adc
scas
cmc
jnp
push
mov
sbb
rcl
loope
aas
inc
mov
sub
fnstenv
aam
or
push
push
push
or
xor
sbb
nop
mov
add
popf
rclb
pop
test
pop
xchg
inc
cmp
lahf
stc
adc
iret
jp
mov
rcrb
sbb
insb
push
sub
insl
icebp
mov
mov
lods
xchg
or
push
jns
in
sub
lea
and
add
addl
dec
nop
xchg
nop
insl
mov
inc
out
call
xchg
cmp
sub
scas
jb
stos
negb
mov
in
push
pop
dec
sbb
lahf
xlat
add
fsubrl
adc
stc
insl
dec
inc
push
sub
or
xchg
repz
pop
or
insb
sti
jge
pop
jbe
xchg
mov
sti
out
loope
mov
orb
mov
and
mov
mov
imul
or
popa
sahf
jl
ret
insl
add
outsb
xor
xchg
add
and
loope
imul
push
loop
out
jecxz
cmpsl
inc
mov
cli
mov
dec
inc
rclb
xor
push
push
addr16
enter
xchg
loop
loopne
or
push
popl
push
std
xor
outsl
mov
les
pushl
cmp
or
rcrl
aad
jne
jmp
xor
push
mov
sti
push
push
xor
xchg
sub
sbb
aaa
repnz
cltd
pop
imul
mov
repnz
dec
fidivs
or
insb
mov
rcl
pop
inc
gs
pop
jmp
jbe
xor
pop
jle
insb
xlat
fs
sbbb
hlt
mov
int
cmpsl
imul
popa
scas
or
fisttpl
movsb
int3
sti
mov
lods
xchg
jecxz
push
mov
roll
cmpsl
iret
jg
dec
sbb
movsl
mov
imul
ret
jae
test
pop
mov
ja
jno
jns
in
xchg
sbb
int
push
cmc
mov
mov
mov
sbb
push
inc
mov
pop
out
incb
lds
int3
es
cs
insb
ret
sub
icebp
insl
aad
xchg
imul
xchg
insl
mov
lcall
xchg
in
mov
ljmp
inc
push
in
ret
sarl
sar
nop
insl
push
push
xchg
sub
mov
add
xlat
in
mov
inc
jmp
push
scas
faddl
enter
fists
dec
loop
iret
xlat
int3
bound
inc
mov
and
push
inc
out
fidivl
cmp
inc
and
out
xchg
sub
mov
insb
xor
les
or
xchg
push
loop
push
pop
aaa
jl
rcrb
int3
int3
cmpsb
inc
fiaddl
arpl
iret
add
fwait
data16
sahf
jl
sbb
sub
xor
int3
jnp
imul
mov
ret
jecxz
inc
and
mov
repnz
mov
sbb
incl
dec
into
fildl
call
inc
xchg
aam
xchg
das
out
std
ja
dec
dec
push
aas
xchg
dec
xchg
addr16
rcl
aas
movsb
sarl
in
inc
xchg
xchg
lret
adc
cli
mov
dec
push
cld
dec
xchg
cmp
movsl
ss
cmpsb
imul
sti
cmpsl
and
mov
lods
call
fildl
push
adc
inc
mov
pop
push
mov
mov
jle,pt
mov
inc
xlat
clc
sbb
cli
mov
jb
aam
fildl
mov
and
push
cli
into
or
or
test
test
pushf
outsl
aaa
cmp
mov
jge
arpl
rcrb
out
out
repnz
jns
cmp
outsl
mov
pop
cmpsb
popa
sbb
inc
pop
xchg
out
in
je
ds
add
loope
jae
pushf
add
mov
into
scas
les
xor
jbe
cwtl
mov
sub
cmpsb
mov
scas
jp
pop
lods
jnp
movsb
cmp
cltd
bound
push
ficomps
xlat
mov
push
xlat
xor
mov
push
cs
pop
pop
aas
add
test
pop
or
xchg
pop
and
mov
out
sub
sbbl
jmp
mov
aas
xor
sbb
inc
cs
jge
and
inc
sbb
xlat
mov
in
comiss
dec
mov
adcl
sbb
and
jge
xor
ja
dec
sub
dec
jp
repnz
mov
lahf
add
dec
data16
repz
mov
mov
roll
push
int3
inc
outsl
cmc
loope
add
push
test
insl
js
cwtl
es
cmp
pop
in
in
mov
mov
dec
fdivrl
cli
jmp
out
cwtl
loop
jge
movsb
mov
jl
jecxz
clc
dec
loopne
xor
jmp
out
or
filds
cmp
xchg
les
in
and
pop
sub
mov
aam
mov
lds
jns
imul
add
jno
inc
cmp
cmp
sbb
xchg
mov
cwtl
push
fimull
sub
cmpsb
cli
fsts
inc
fadds
lahf
jae
or
pop
scas
or
popf
cmp
inc
ds
popa
xor
shll
cli
inc
adc
sbb
mov
mov
jae
int3
and
repnz
adc
sarl
fstl
cmpsl
loopne
jp
jnp
mov
movsb
push
sti
adc
std
insb
adc
inc
jp
repz
in
in
mov
and
stos
iret
dec
adc
ss
outsl
xchg
call
jno
sub
dec
js
aam
call
and
xor
ret
mov
mov
add
mov
add
dec
push
cmp
leave
std
xor
xor
xorl
cmp
or
push
jo
imul
sub
pop
mov
xor
gs
adc
and
loope
adc
aas
rcl
shll
test
and
pop
fs
pushf
sub
mov
out
test
and
xchg
cltd
movsb
inc
mov
sti
push
call
in
in
not
popa
jmp
adc
lock
je
jnp
xchg
aad
sbb
or
push
add
data16
lahf
dec
xor
fucom
sub
or
ret
mov
adc
inc
repz
xorb
lods
das
lahf
and
test
xlat
adc
std
mov
mov
decb
cmp
xchg
mov
cld
and
in
int3
adc
inc
sbbb
sub
test
mov
ror
call
lcall
dec
aas
or
iret
and
cmp
dec
lock
pop
mov
subb
insl
mov
orb
xchg
loopne
pop
ret
xchg
stos
or
out
bound
mov
outsl
sbb
sbb
jnp
jg
pop
xchg
adc
and
mov
call
notl
mov
leave
and
pop
jmp
and
popa
ds
ret
cmp
push
pop
xor
lret
stc
pop
cmp
and
sub
and
lds
nop
das
movsl
out
xchg
pusha
jp
into
sub
adc
push
push
pop
xchg
out
adc
push
sbb
arpl
shrl
mov
pmullw
push
rol
mov
pop
dec
pop
lcall
insl
push
sub
jno
jecxz
inc
xor
inc
dec
jg
pusha
push
in
sahf
push
pop
push
ficomps
adc
push
push
push
mov
int
and
stos
aaa
icebp
arpl
je
das
pop
ja
add
adc
xchg
sbb
xchg
mov
jo
nop
aas
arpl
fistl
scas
cld
adc
nop
mov
aas
and
fmulp
jg
inc
add
or
jmp
scas
arpl
in
xchg
jmp
mov
mov
dec
out
inc
lahf
cmpsl
pushf
das
push
lods
jbe
and
addb
scas
popf
cltd
into
dec
ss
fsubr
push
stos
std
or
jge
subl
push
sbb
mov
push
mov
mov
push
in
sub
lods
std
jl
xor
jle
mov
push
rcrl
insl
jno
pusha
dec
mov
sbb
cmp
jb
fidivrs
lods
mov
cmp
sub
pop
adc
or
mov
cmc
jo
cmc
dec
pop
sbb
fmuls
and
inc
ja
jg
rorl
jle
aam
mov
mov
mov
js
daa
add
sbb
mov
adc
rorl
sbb
filds
jmp
fs
jne
ret
aas
sbb
cltd
aam
jle
mov
cs
in
in
mov
cmp
cwtl
mov
imul
icebp
loope
jmp
sbb
hlt
adc
push
stos
ja
add
repnz
sbb
sub
lea
bnd
mov
jo
pop
add
ss
push
jbe,pn
cmp
sbb
out
sbb
data16
ljmp
insb
push
cltd
out
cmp
add
subb
dec
sub
xorl
imul
cmp
inc
fbstp
cli
ficoml
mov
pop
shll
jecxz
ffreep
std
jecxz
push
out
sub
dec
sbb
dec
push
hlt
gs
decl
inc
adc
or
or
xchg
inc
popa
or
testb
stos
mov
mov
xchg
popf
jae
in
sbb
and
sub
and
aad
cli
jl
cltd
adc
inc
ljmp
pushf
pop
data16
cld
stos
insb
adc
pop
adcb
ret
xchg
sti
jbe
cltd
cmpsb
aaa
sub
cld
sbb
mov
jo
push
in
getsec
sarb
or
mov
push
mov
pop
adc
push
scas
xchg
enter
mov
shlb
lods
pop
fs
jl
imul
push
ret
inc
mov
fisubl
scas
shrl
jne
push
fstl
lret
data16
in
add
dec
sub
mov
aaa
aad
fidivrs
mov
mov
inc
movl
ja
into
inc
push
sub
jmp
add
subb
lock
shrl
pop
insb
notb
loopne
nop
pop
mov
push
outsb
idivb
ja
push
es
jmp
out
mov
movsl
loopne
mov
xlat
cmpsb
negl
sub
test
push
aas
pop
or
mov
insb
stos
test
mov
jle
sub
popf
jle
repnz
cmp
lahf
xorl
frstor
call
fcoms
cli
pop
cld
dec
data16
mov
notb
mov
ja
movsl
in
mov
cmpsl
mov
aas
jnp
dec
mov
cmc
add
fmuls
js
mov
xchg
inc
or
divl
js
sub
mov
stc
dec
ss
xchg
jno
xor
cmp
ja
lcall
pop
xorb
and
jl
inc
popl
add
fnsave
nop
out
test
dec
fcompp
insb
or
mov
xchg
cmp
mov
mov
mov
pop
pushf
adc
gs
jmp
sbb
push
lahf
imul
in
mov
jle
adc
jo
or
loop
pop
ljmp
mov
stos
in
mov
mov
lds
dec
je
or
lock
frstor
mov
inc
sub
xor
mov
iret
pop
lret
bound
fwait
cmp
cs
in
fninit
lret
mov
repnz
imul
mov
outsb
xchg
icebp
popf
scas
xor
pop
or
and
push
les
sub
insl
test
sub
sar
sbbb
dec
ret
or
call
sub
in
sbb
shrl
xlat
and
pop
xor
adc
inc
push
stos
adc
scas
adc
mov
jmp
and
xor
jnp
mov
pop
mov
ss
push
dec
test
cmp
xor
aaa
cmpsl
adc
jbe
and
cmp
sub
clc
shl
nop
in
jae
testb
mov
je
icebp
jmp
push
jecxz
insl
out
test
push
mov
sbb
and
xor
push
insb
dec
pop
leave
sub
sub
adc
andl
es
and
jecxz
dec
jg
lret
into
es
jmp
inc
push
cltd
test
cmp
sub
mov
jbe
stos
imul
ljmp
mov
or
cwtl
mov
cmpsb
mov
fsubrs
mov
sub
pop
xchg
adc
pop
fucomip
nop
mov
inc
roll
fwait
pushf
inc
outsb
insb
jmp
xlat
mov
dec
out
cmpsl
mov
xor
sub
jae
push
cli
and
cmp
push
arpl
sbb
mov
push
xchg
xor
fisttpl
cmp
jbe
ja
push
lea
iret
jp
cmp
sub
fldl
js
sbb
nop
mov
sbb
and
mov
inc
push
mov
sbb
lea
jg
lods
xor
nop
jl
scas
cmp
frstor
mov
adc
mov
dec
loop
cld
imul
lret
outsb
mov
pop
push
sbb
outsl
sbb
mov
arpl
addr16
jmp
pop
jecxz
xchg
jp
pop
arpl
ret
mov
and
and
or
sbb
inc
jp
lret
sub
cmpsb
pop
add
icebp
call
sub
jge
mov
inc
and
outsl
lahf
rolb
cmp
jmp
ljmp
dec
mov
roll
jo
jae
lcall
mov
or
adc
mov
notb
push
or
mov
inc
dec
gs
mov
shll
dec
lods
jmp
cli
test
xor
dec
add
or
inc
push
inc
movsl
sbb
out
sbb
or
mov
ss
adc
pop
lock
mov
out
ret
mov
movsb
or
cwtl
xor
cmp
jbe
sub
or
xchg
jle
fcmovnbe
jo
jno
call
fs
or
push
in
pop
mull
sti
inc
cmp
mov
fcmovbe
mov
jns
gs
mov
test
push
rcl
lea
xor
je
outsl
mov
mov
or
cwtl
cmp
imul
nop
in
cltd
jmp
sub
outsb
xchg
push
push
xor
and
scas
iret
movsl
dec
sti
out
xor
jb
sbb
pop
jns
hlt
mov
and
aad
xchg
std
cmp
stc
shl
inc
outsl
lret
mov
inc
mov
out
push
pop
cmp
pop
ja
adc
and
fcmovnb
push
jg
iret
inc
dec
lret
incl
or
imul
xlat
outsb
push
push
cltd
xchg
and
mov
jg
pop
push
and
ret
imul
xchg
adc
ret
and
fisttpll
clc
sbb
dec
mov
stos
dec
and
mov
jl
mov
loopne
mov
scas
es
hlt
mov
int3
int3
cmpsb
fs
mov
sub
or
fisubs
cmp
sti
ljmp
ds
push
ss
int
and
aas
mov
and
inc
je
rcrb
aaa
pop
jp
adc
push
mov
xorl
xor
cmc
fstpl
push
subl
movsl
mov
xchg
or
mov
add
pusha
inc
sbb
cmp
mov
scas
lret
adc
push
rcrl
mov
inc
mov
mov
std
cmp
ds
adc
pop
jae
mov
ret
inc
jae
pop
icebp
in
xor
call
or
jge
pop
lea
add
mov
or
adc
lods
jl
loop
lds
std
cli
and
adc
insb
or
lcall
test
popa
adc
dec
xlat
pushf
aas
out
pop
popf
push
sub
inc
sub
push
xchg
in
sub
adc
xor
ret
rcrl
adc
mov
divb
sbb
jmp
mov
add
or
jns,pt
fs
push
cmp
cmp
iret
fs
cli
pushf
aas
bound
pusha
xlat
xchg
push
js
data16
mov
test
fdivrs
mov
pop
jae
inc
and
mov
and
mov
stos
test
lds
xchg
jno
inc
rorb
sub
add
aaa
das
loope
mov
jnp
push
pop
xor
cmpsb
mov
stc
mov
dec
mov
inc
or
scas
std
push
arpl
mov
mov
xchg
hlt
mov
loope
inc
in
addr16
pop
bound
lahf
scas
xchg
or
or
enter
in
push
sbb
add
add
repz
push
inc
inc
jmp
or
add
fcmovnb
mov
mov
mov
add
mov
hlt
fistpll
xor
lods
and
dec
sbb
mov
or
in
mov
push
lss
inc
mov
sbb
mov
std
lock
pop
mov
fdivrl
jge,pn
dec
push
fimull
movsb
pop
jo
nop
ret
or
dec
pop
fists
pusha
shll
aam
mov
mov
pop
push
into
push
cmpsb
icebp
mov
popf
add
aaa
pop
xor
push
int
bound
orl
in
fcompl
xor
xchg
scas
stc
cmp
ficoms
inc
sarb
and
fsub
mov
cmp
dec
aaa
out
lea
out
and
jns
aaa
push
xor
and
xchg
push
test
dec
xor
insb
cmp
jae
and
jb
and
adc
push
cmp
push
mov
addl
in
pusha
test
das
mov
lock
pop
pop
push
enterw
push
pop
fimull
aam
sbb
addb
scas
xchg
jmp
fidivs
jne
repz
push
or
lret
adc
nop
pop
out
mov
xchg
mov
jle
mov
out
jg
neg
mov
mov
das
pop
inc
sbb
pop
popf
testl
dec
movsb
xor
adc
nop
or
and
pop
hlt
cmp
sub
sub
ficompl
sub
mov
jmp
sbb
xor
sub
fdivr
pusha
dec
in
dec
sbb
sbb
mov
mov
lock
and
xchg
xor
pushf
adc
sbb
stos
incl
dec
daa
test
addr16
bound
mov
in
aad
ja
lods
lret
pop
adc
repz
sub
test
dec
call
testb
nop
pop
iret
mov
bound
inc
js
imul
jae
pushl
dec
test
adc
inc
xor
add
mov
fistl
pop
push
xor
int3
out
xor
arpl
fsubrs
into
in
adc
inc
cmp
in
pop
cmc
insl
dec
xchg
dec
adc
dec
mov
adc
mov
dec
sub
sbb
lods
pop
leave
movsb
outsb
insb
rcrl
inc
jns
jecxz
and
cmp
mov
std
jp
mov
outsl
std
icebp
fstp
cld
rolb
dec
in
inc
out
xor
add
psubusw
cmp
push
pop
idivl
mov
jmp
sarl
or
sub
loop
stos
in
xor
xchg
xor
iret
or
icebp
mov
or
or
lds
and
cltd
mov
xchg
call
xor
cmp
in
ss
bound
push
mov
std
and
iret
daa
mov
mov
mov
push
lds
int
jge
imul
dec
call
push
or
fisubl
inc
or
dec
iret
fs
dec
or
lcall
ds
cmpxchg
adc
xor
sbb
mov
fnstcw
xor
inc
xchg
sub
pop
cmp
add
push
rclb
jg
imul
adc
xchg
les
stc
or
dec
shrl
and
add
and
jl
sbb
add
sbb
lock
adcl
pop
jmp
jmp
push
xor
or
xor
inc
push
fcoms
sbb
aam
mov
sti
loop,pn
dec
test
mov
in
imul
sbb
scas
stos
inc
or
mov
sbb
fimull
iret
mov
xchg
es
cmp
pop
pop
jae
lods
lret
push
and
xchg
jns
push
pop
mov
sbb
mov
popa
push
fdivs
daa
cmpsl
push
sahf
out
adc
dec
xor
sub
cmp
dec
ja
mov
pop
mov
in
ficoms
and
sbb
imulb
mov
hlt
or
jbe
push
pop
and
push
jmp
popf
adc
test
add
mov
adc
adc
jns
mov
mov
jns
and
in
loope
int
imul
adc
or
lea
rcll
sti
and
mov
pop
cltd
cmp
xchg
ja,pt
cmp
popl
movsl
mov
lret
adc
cmp
pop
mov
ja
in
dec
mov
movsb
mov
pop
xor
pop
xchg
pop
out
pop
call
jmp
push
push
out
imulb
js
pop
dec
mov
sub
dec
mov
add
push
mov
sti
xor
loop
mov
jne
and
cmp
xchg
and
ret
sbb
jl
xor
dec
mov
pop
inc
adc
gs
lret
pusha
clc
outsl
xchg
stc
jae
dec
rcrl
pop
or
das
test
jmp
xchg
int
ja
fnsave
mov
inc
rcr
imul
icebp
insb
inc
negb
and
std
mov
mov
mov
dec
push
aam
aas
mov
xchg
jp
bound
movsl
push
jbe
push
aam
movsl
icebp
pop
sub
inc
sbb
sub
mov
pop
insb
cmpsl
fiadds
or
xorl
pop
and
out
pushf
das
stos
inc
pop
aad
call
insb
inc
mov
inc
cli
mov
push
add
lcall
xor
ss
stc
inc
pop
outsl
cld
rolb
pop
xor
jecxz
push
mov
out
lods
inc
popf
cmp
ljmp
es
cli
xchg
pop
dec
imul
stc
mov
bound
or
lahf
leave
adc
addr16
loope
push
mov
mov
popf
lds
int3
sarl
nop
pop
push
xchg
push
adcl
mov
mov
loope
cmp
xchg
push
pop
xchg
mov
sbb
ror
pop
xor
cwtl
dec
rclb
in
and
inc
mov
mov
xchg
das
or
add
mov
enter
and
shlb
sub
arpl
repnz
cld
xor
inc
rcrl
xchg
outsb
pushf
cld
jp
movsl
lock
mov
jg
sahf
pop
ljmp
loop
xchg
je
jnp
aam
mov
mov
pop
pop
incb
cmp
int
test
loope
pop
adc
call
aad
rcrb
inc
or
sbb
adc
insl
lret
mov
iret
push
pop
mov
or
xlat
xchg
movsb
insb
imul
ljmp
mov
std
dec
or
les
imul
ljmp
test
push
std
adc
add
xchg
lcall
fisttps
pop
outsb
pusha
jo
adc
cwtl
movsb
inc
cmc
dec
je
lea
fdivl
ja
or
test
and
jae
mov
sub
hlt
dec
adc
stos
push
and
jns
sbb
pushf
cltd
xchg
rcrl
roll
jns
shl
decl
ss
mov
aam
dec
repz
cmp
call
movl
adc
cld
cmp
out
inc
pop
insb
mov
or
bound
js
aad
mov
sti
xchg
je
mov
daa
mov
mov
movsb
dec
ljmp
and
cmp
insl
imul
jb
das
xor
cmpsb
jae
cld
adc
call
mov
pop
js
movsl
out
add
subb
mov
in
imul
and
push
lret
data16
xorl
pop
pop
sub
sub
sahf
and
bound
lock
addr16
fdivl
cmc
sbb
jecxz
and
clc
addr16
jno
sub
fdivs
add
mov
and
cmp
sbb
pop
jl
fisubrs
out
test
das
jne
rcll
js
inc
in
xor
xchg
jno
add
cmpsb
out
jg
test
das
mov
xchg
sbb
pop
in
mov
shlb
sub
insb
jl
mov
push
push
mov
and
sbb
jp
push
inc
cmp
xchg
shlb
add
jle
rol
rclb
mov
jmp
mov
add
xchg
sub
mov
mov
loop
fistpl
shlb
rcrb
fpatan
sbb
cs
sub
jl
pop
jno
mov
pushf
iret
push
sub
and
adc
arpl
sbb
pop
imul
repz
push
test
pop
push
mov
pop
inc
xchg
ja
ja
sarl
rorl
pusha
xchg
lock
in
insl
sbb
cmovs
xor
cmpb
add
jge
pop
stc
pop
imul
pop
adc
dec
shll
pop
mov
xor
lret
mov
hlt
adc
loop
pushl
dec
mov
cmp
fwait
xor
movsb
add
cld
lods
jno
mov
pop
mov
xchg
add
or
icebp
or
fiadds
add
xor
inc
and
sub
xchg
sub
ljmp
xchg
xchg
rcrl
test
pop
pushf
inc
inc
or
outsb
sub
xorb
or
rcrb
adc
adc
cmp
imul
push
mov
lret
leave
mov
std
pushf
aam
push
dec
in
xchg
jo
mov
test
xor
je
sahf
mov
jge
movsl
jge
test
fucomi
int
pushf
pop
pop
sbb
inc
xchg
push
jecxz
les
lret
jne
neg
imul
or
hlt
lds
push
jle
jge
mov
stos
data16
mov
inc
mov
ljmp
in
push
testb
push
and
shl
dec
xchg
push
shlb
jle
xchg
fsubs
popa
or
jl
lds
notl
push
cwtl
popf
cmp
jbe
jno
adc
sar
repz
dec
cltd
test
dec
dec
mov
rcrl
es
cmc
mov
fs
mov
sub
js
mov
adc
rolb
daa
fsubrp
js
cli
enter
cmp
imul
mov
hlt
and
rolb
adc
pop
add
mov
xchg
ret
mov
inc
push
mov
xchg
pop
jle
add
push
push
inc
cmp
add
mov
ds
add
or
sub
daa
and
insl
sbb
cmp
cmp
and
pop
jbe
lock
sub
int3
add
cmp
stc
repnz
cs
stos
xchg
inc
add
sbb
repz
movsb
jae
ja
rcl
out
sub
jbe
js
or
mulb
xchg
inc
push
lods
xchg
cmp
jge
xor
loope
cmp
stos
pop
adc
adc
sub
lcall
sbb
outsl
mov
cmp
cmpsb
sub
push
addb
sbb
cld
mov
push
sub
mov
pop
imul
je
adc
lret
xchg
sub
fs
jmp
xor
push
popa
sarl
aaa
mov
jnp
and
movnti
popa
test
dec
jmp
mov
dec
pop
faddl
and
xchg
in
stc
scas
cmpsl
adc
xchg
cltd
dec
mov
lret
dec
lret
insb
fists
mov
data16
or
subb
xchg
dec
pushf
mov
ljmp
jge,pn
mov
je,pt
xor
je
mov
pushf
ja
pop
jb
sbb
out
mov
or
stc
or
or
xor
lods
loop
jno
xchg
scas
xchg
push
inc
aaa
lea
aaa
or
or
ret
cmp
sbb
aad
jae
out
sub
pop
test
out
lods
and
pop
add
inc
sub
mov
mov
pop
fdivrl
fistl
xchg
loopne
push
lods
loope
into
jecxz
add
inc
or
jmp
std
push
inc
or
xchg
pop
ljmp
sub
iret
inc
push
outsl
or
cli
and
scas
mov
mov
push
mov
int
push
xchg
out
inc
les
lret
mov
sti
insw
jns
not
gs
jnp
test
call
les
and
dec
fadds
je
xchg
popa
xchg
iret
lcall
test
adc
xor
jns
jno
pop
push
insl
push
pop
pop
mov
push
orw
ret
movsl
push
dec
fldenv
pop
pop
lea
mov
insb
jne
dec
pop
push
lahf
pop
jo
pop
sbb
mov
addr16
idivb
mov
mov
je
stos
out
cmc
lcall
mov
scas
push
addr16
cmp
and
xchg
pop
add
mov
popa
mov
stos
xchg
mov
mov
into
sbb
clc
sub
mov
sahf
out
push
mov
cld
cltd
xor
js
lret
xchg
push
pop
mov
std
sahf
enter
pop
inc
call
mov
stos
call
jns
lock
or
cmp
sahf
addr16
pop
mov
dec
inc
adc
cmp
cmp
jle
aas
ljmp
push
mov
test
push
shlb
bound
push
add
sub
call
xor
loop
sub
add
repz
call
dec
jns
rorb
sbb
inc
xor
sub
xor
xchg
cli
repnz
shll
or
test
mov
pop
test
scas
ds
inc
mov
aaa
dec
cmp
addr16
sbb
setge
mov
call
shl
cmp
mov
or
ds
xor
xorl
pushf
bound
dec
out
and
in
and
pop
sub
nop
add
adc
add
loope
jg
cmp
movsb
jle
js
lea
mov
test
js
cmp
sbb
pop
sbb
xor
sub
cmp
mov
cmp
scas
bound
pop
mov
jne
aaa
cmc
cmp
jbe
nop
lock
adc
and
add
ret
dec
adc
call
mov
sarb
sbb
daa
xchg
sbb
mov
push
out
jg
cmpsb
push
adc
int3
push
dec
stos
wrmsr
xor
cmp
push
pusha
mov
inc
imul
loop
lret
sub
xor
lret
and
push
pop
pop
es
scas
push
jb
inc
and
inc
pushf
test
pop
cmp
into
mov
test
es
into
fldenv
movsl
sti
push
cwtl
into
sub
insl
or
jae
addl
hlt
nop
les
lock
in
adcb
cld
jg
pop
popf
and
fdivl
and
xchg
sbb
jg
mov
shrl
ljmp
adc
xor
inc
fpatan
cmp
cmp
lods
sti
aad
lock
outsb
sbb
push
filds
in
lret
push
aas
add
jns
ljmp
lret
outsb
xor
dec
mov
mov
or
sbb
dec
cmpsl
xchg
mov
lret
pop
or
cmc
mov
dec
je
jns
jno
jae
stc
loop
adc
cltd
mov
inc
mov
jns
push
xchg
pop
cmp
cmp
jae
cmp
aas
xchg
mov
idiv
or
jnp
test
dec
lods
dec
out
loop
lcall
stc
orl
pop
pop
hlt
and
mov
jb
cmpsl
xchg
cld
popf
cwtl
sub
aaa
jmp
ret
sub
lahf
shll
mov
jge
rcll
std
mov
mov
lods
jecxz
hlt
out
adcb
aas
cwtl
lcall
aas
aad
pop
mov
lea
test
andl
mov
leave
inc
call
inc
mov
testl
xchg
test
dec
je
mov
mov
xor
and
out
aam
add
mov
outsl
and
push
in
out
xchg
dec
clc
push
inc
loopne
add
sub
mov
out
sbb
test
lret
test
adcb
mov
xor
jne
movsl
idivl
aam
mov
jb
mov
stos
ds
xlat
addl
sbb
xchg
push
or
sbb
lock
int
arpl
or
cmp
inc
test
jo
inc
out
cmp
jp
xchg
fstpt
shrl
mov
adc
test
xchg
mov
xor
pop
call
sbb
enter
dec
xor
lock
test
daa
fidivrl
fwait
fwait
sti
fmul
js
adc
mov
js
aaa
int3
mov
inc
or
movsb
fcmove
mov
mov
out
xchg
pop
scas
hlt
xlat
cmp
repz
call
andl
fs
lahf
add
arpl
sahf
jo
adc
inc
and
pop
clc
push
arpl
inc
bound
pop
inc
xchg
test
adc
insl
movsl
inc
ret
ss
pop
xlat
dec
test
adc
sub
in
add
insl
lcall
xchg
mov
leave
aaa
sbb
out
pop
cmp
les
xchg
xlat
inc
mov
or
mov
xchg
inc
sti
sahf
dec
and
dec
jno
cmpb
inc
xchg
xor
mov
sbb
sti
mov
mov
inc
bound
ljmp
mov
xor
fsubrs
je
idiv
jp
sbb
inc
xor
out
jns
movsb
inc
out
push
xlat
push
mov
into
cmpsl
pop
add
pop
cld
mov
lods
clc
pop
mov
lds
mov
sub
mov
pop
push
jl
popf
jecxz
inc
arpl
pop
loope
pop
dec
in
mov
inc
mov
mov
xor
test
mov
dec
fsts
jne
insb
jns
icebp
add
subl
movsb
es
shrl
pop
cmpsb
in
ret
ficoml
cmp
push
cmpsb
movsb
loope
outsb
sbb
mov
int
adc
sbb
fs
insl
mov
dec
push
sub
xchg
mov
dec
js
pop
loop
in
cwtl
inc
dec
repz
xchg
mov
fistl
adc
push
imul
movsl
lods
lahf
out
ja
fstps
incb
xorb
neg
cltd
js
xchg
mov
pop
sub
repz
repz
ja
pop
loope
mov
xchg
cs
dec
mov
push
sarb
addr16
out
or
lahf
jbe
fsubrs
call
and
jnp
jle
xchg
lret
push
xchg
jae
mov
cmp
jns
lcall
lret
jns
bound
rclb
mov
scas
lret
insb
inc
cmpsb
jg
out
mov
xchg
push
mov
mov
lea
fnstcw
push
pop
insl
lret
cld
mov
stc
mov
mov
add
ret
cmpsl
dec
inc
and
test
lahf
ljmp
mov
and
js
sbbl
insl
inc
push
lret
add
jge
subb
adc
mov
lods
xor
lcall
adc
orl
jl
and
xor
loop
mov
jl
bound
jbe
or
test
popa
cmp
or
sub
mov
xor
xor
test
add
into
xor
xchg
xchg
mov
mov
sbb
scas
adc
or
sarb
mov
xchg
sarl
xchg
cmpsb
icebp
mov
cmp
and
add
xlat
loopne
and
inc
push
push
lods
pop
inc
jmp
movsl
imul
popa
push
insb
fldenv
loop
cmc
push
cmp
mov
and
ljmp
push
lds
push
add
cmc
aaa
fstl
scas
test
sbb
ret
out
jo
or
sbb
in
adc
pop
sbb
add
arpl
sub
mov
sbb
sub
xchg
pop
out
push
cmp
inc
mov
sbb
fs
std
ffreep
mov
xacquire
outsl
popf
dec
pop
or
addb
push
mov
test
lods
rclb
inc
lds
rcl
int
jo
mov
es
dec
ror
and
mov
mov
jp
sub
in
pop
cmp
jmp
daa
dec
jl
mov
sub
inc
fucomi
pop
adc
or
outsb
adc
ret
sbb
sbb
es
jne
leave
pusha
in
int
insb
stc
cmp
pop
dec
fnstcw
mov
int
fsub
jns
dec
aam
int
loop
push
repnz
push
out
sarl
out
into
push
loop
cmp
fiaddl
sub
insl
out
test
subb
push
cmp
or
jae
cmp
jbe
stos
dec
icebp
scas
fisttps
lods
lock
jl
or
daa
xor
or
mov
dec
mov
pop
sub
push
dec
mov
lods
mov
and
lea
pop
inc
push
mov
adc
cmc
jmp
pop
mov
into
rcrl
test
push
and
mov
push
out
push
lods
shll
in
loop
add
xchg
cli
addr16
int3
inc
mov
xlat
mov
fwait
rol
out
loope
popf
rcl
mov
sub
adc
mov
xor
push
mov
shl
push
dec
sub
mov
inc
mov
orb
in
in
stc
repz
jb
cmpsl
xchg
lret
inc
adc
rorl
ret
sub
pop
out
and
xchg
int3
sarl
inc
jbe
push
lock
movl
lock
inc
test
cltd
mov
cmpsb
cltd
sbb
jge
xchg
pop
in
mov
idiv
imul
adc
mov
setno
xorb
icebp
pextrw
sbb
sub
inc
jl
fisttps
push
insl
adc
pop
jg
push
push
push
mov
mov
lahf
or
push
sti
jecxz
pop
es
and
movmskps
dec
push
dec
jns
in
mov
nop
push
mov
in
std
cmp
jp
push
loope
mov
pop
cli
add
pop
loop
test
sbb
mov
or
push
adc
fldt
pop
sbb
dec
mov
loopne
pushf
test
push
daa
fdivr
sahf
shl
jo
leave
inc
and
cld
inc
mov
fcomip
adc
bound
cmp
in
lret
xor
imul
outsb
mov
pusha
pop
hlt
aas
inc
leave
xchg
lcall
leave
mov
add
and
adc
sbb
mov
add
fstps
xor
inc
lock
mov
mov
xchg
movsl
push
ret
enter
roll
fisubrs
xchg
mov
pop
cli
add
jae
add
jp
mov
testl
popa
and
sbb
sar
pop
or
cld
or
mov
mov
cltd
sub
in
inc
out
xchg
cmpsl
xchg
cmp
dec
vandnpd
fscale
and
pop
test
sbb
jbe
sbb
inc
jg
ret
outsl
mov
sub
adc
mov
into
push
test
fldl
test
in
insb
xor
xchg
fisttps
ss
adc
mov
insb
xor
mov
sahf
cmp
test
jnp
cmp
lret
mov
decb
mov
rclb
xchg
icebp
xchg
cmp
mov
cmp
mov
rcll
add
jb
mov
cs
lea
sbb
bound
adc
xor
xchg
jg
jb
sub
mov
pop
rcrb
into
adc
pop
test
fiadds
pop
inc
pop
mov
lods
and
cmpsl
cmc
jns
lahf
fisubs
loope
xchg
iret
iret
popf
sbb
or
call
andb
inc
stos
cmc
mov
push
adc
and
or
popa
mov
xor
push
mov
dec
xchg
dec
shr
ficompl
xchg
jecxz
mov
sbb
or
sahf
push
and
sarb
stc
icebp
movsb
inc
aad
sub
jecxz
cmp
pop
add
jmp
xor
les
sub
enter
jmp
mov
push
test
mov
and
outsb
push
push
bts
jmp
inc
cmc
cmp
mov
cmp
mov
and
dec
push
pop
push
in
sbb
push
jle
or
and
and
cmp
mov
adc
dec
jnp
pushl
or
and
popa
xchg
inc
mov
lock
and
lret
mov
popl
out
push
push
dec
test
sub
inc
pop
out
movsb
ret
mov
add
outsb
and
mov
cmp
repz
fidivrl
loop
mov
cmp
stos
dec
inc
mov
pushf
fimull
movsb
cltd
sbb
mov
dec
call
lahf
jmp
and
pop
movsb
lea
push
aas
test
jnp
inc
xor
jno
push
repnz
jmp
lret
jbe
out
jmp
mov
imul
test
ljmp
imul
pop
mov
xchg
pusha
sub
cltd
mov
mov
pop
das
pop
pusha
sub
filds
mov
lret
ds
cmovne
aad
out
cmp
in
ficoml
inc
mov
cld
inc
push
pop
stc
xor
inc
andb
mov
pop
ljmp
scas
mov
ja
int
xchg
mov
iret
xchg
jb
xchg
pop
clc
jp
jo
fidivrs
sbb
fwait
sbb
mov
push
cmp
imul
mov
dec
nop
divl
jecxz
or
pop
adc
loop
mov
or
stos
mov
xor
mov
into
push
xchg
add
push
push
mov
repz
cmc
fsubs
test
lods
xorl
pop
sub
cld
sbb
push
mov
js
xchg
cltd
ljmp
pop
and
sbb
popa
mov
lahf
loope
fdiv
clc
jl
lock
push
xchg
jp
sbb
cmp
fsub
pop
idivb
inc
dec
or
mov
insb
mov
lods
cmc
lea
and
mov
xchg
mov
data16
lahf
pop
mov
or
popf
int3
dec
scas
ja
mov
and
gs
fxch
or
std
pop
pop
jae
out
sbb
ret
in
call
cmpsb
imul
in
sub
pop
jns
mov
or
push
out
mov
jbe
or
jo
xchg
sub
out
jmp
jge
cs
mov
scas
loop
or
dec
fs
lahf
jb
adc
mov
int3
dec
xchg
xor
fistpl
push
test
aas
outsb
inc
aaa
pushf
loopne
lret
pop
push
sahf
in
sbb
stos
test
mov
popf
cwtl
movsb
out
xchg
push
hlt
pushw
lret
push
add
sbb
movsl
inc
cld
cmp
daa
inc
add
sub
sub
lea
aaa
push
or
popf
sub
imul
movsb
xchg
and
leave
add
inc
js
aam
arpl
int
mov
in
dec
inc
pop
das
std
test
xor
xchg
push
lahf
aas
sub
ja
adc
in
sti
sar
in
cmpsl
or
call
mov
aam
cmpsb
arpl
pop
test
adc
sarb
in
jge
in
mov
filds
push
sub
insb
aam
sub
cmpsl
push
fidivrl
jnp
sbb
mov
rcl
fs
jecxz
jne
xchg
subl
negb
add
push
rcrl
pop
cmp
cli
adc
daa
imul
sub
mov
int3
cmp
stc
mov
movsl
sbb
or
outsb
jns
es
inc
iret
jmp
mov
jge
add
mov
icebp
ret
mov
lock
xor
mov
add
mov
and
and
adc
repz
adc
in
ss
sbb
mov
push
jno
jae
add
pushf
stc
pop
add
sub
mov
hlt
scas
cwtl
sbb
gs
test
xor
into
or
inc
dec
and
sub
inc
enter
outsb
mov
push
rcll
sahf
pop
stos
jae
adc
repnz
subl
mov
and
mov
or
ret
sub
sbb
and
push
mov
les
jmp
int3
insl
sub
loop
cmp
dec
xor
repz
mov
into
enter
popl
loopne
hlt
in
aad
and
jp
shll
fs
and
push
jne
insb
sbb
imul
inc
sti
je
iret
add
ds
mov
dec
adc
inc
leave
mov
ja
or
xchg
icebp
cmp
xchg
add
fnstenv
lcall
sbbl
push
dec
in
mov
int
rcrl
xlat
mov
ds
push
or
mov
stc
lds
or
xchg
test
inc
add
popa
sub
outsl
in
mov
shlb
les
mov
mov
sbb
subl
leave
ret
mov
and
jbe
mov
mov
int
mov
sahf
imull
pop
pop
leave
inc
and
push
sub
sbb
mov
jl
and
jnp
mov
sahf
icebp
shlb
pop
stos
popf
dec
mov
inc
sub
stos
mov
mov
adc
in
mov
xchg
cmpsl
testb
sbb
nop
jo
ljmp
stos
sbbb
aaa
mull
pop
cltd
stos
xchg
sub
jg
sub
outsb
mov
insb
inc
push
xchg
inc
sub
mov
add
xor
fdivr
fcmove
add
jmp
add
fisubrs
mov
pop
and
pop
shll
cld
rcll
pusha
les
sub
fdivs
enter
js
jl
cmp
mov
outsb
xor
mov
shrl
or
or
lock
fs
push
iret
mov
dec
movsb
jp
jb
dec
sarb
or
repz
aam
push
cltd
inc
mov
xor
lahf
mov
xchg
bound
enter
push
mov
fnstenv
mov
push
sbb
test
push
test
jae
or
or
sti
ds
jnp
enter
cmp
ret
adc
jnp
insb
sahf
pop
lret
clc
sbb
std
xchg
dec
cmpsl
cmpsb
ss
popa
scas
jae
dec
pop
pop
sbb
push
mov
pop
psrad
data16
loopne
cmpsl
jo
xor
je
dec
xor
cmc
sub
cmc
test
pop
and
xchg
push
add
push
sbb
or
lock
xor
dec
iret
out
push
jae
jb
dec
or
jbe
into
fsub
popf
lock
mov
sub
push
outsb
imul
iret
out
sub
dec
xor
cmp
sub
dec
cs
insb
std
and
scas
aam
nop/reserved
xchg
xor
in
adc
inc
sub
xchg
filds
imul
or
in
insb
sbb
push
aas
dec
pushf
lods
mov
sub
fs
aam
pop
loopne
ja
xchg
adc
fdivrl
imul
fldl
or
push
gs
lret
sbb
insl
mov
hlt
xlat
sub
ljmp
rcrb
xchg
in
fdivl
adc
or
push
sti
scas
mov
je
test
popa
cmp
lods
mov
mov
xlat
jp
repz
cmpsl
mov
adc
stos
movhps
dec
out
clc
or
lock
or
in
add
out
adc
pop
dec
cltd
add
or
js
xor
xchg
arpl
imul
stc
sub
outsb
xchg
cli
fcmovb
push
test
lret
adc
mov
add
xchg
repz
sti
incl
dec
shl
xor
mov
lods
sbb
es
inc
or
test
pop
insb
adc
xchg
lods
inc
data16
push
jge
clc
out
sarl
pop
add
aaa
mov
neg
and
pop
sbb
pop
lcall
push
shlb
cmc
mov
push
mov
movsb
pop
out
push
push
shl
stos
pusha
pop
adc
outsl
add
xchg
ret
mov
add
or
dec
ljmp
mov
out
int3
fnstsw
das
jge
xchg
mov
inc
js
inc
addr16
xor
orb
cmp
aaa
stos
sub
jl
jle
out
add
push
ds
xchg
xchg
adc
pop
shlb
xor
dec
ljmp
ficoms
xor
xchg
leave
xchg
xchg
pop
and
sahf
ret
popa
out
shrl
movsl
sub
pop
xor
or
aad
lahf
ljmp
lea
imul
sahf
cmc
lea
movsl
or
xchg
mov
xchg
mov
add
into
call
pop
mov
leave
data16
xor
xlat
in
test
mov
call
jg
movsb
out
jb
test
loopne
sbb
jae
cmpsl
inc
repz
cmp
mov
ss
cs
sbb
notl
xchg
jge
fisubrl
andl
test
outsb
or
int
rorl
and
dec
addr16
shr
add
mul
pop
and
xor
push
movsb
fidivl
or
dec
fidivl
out
testb
aas
sbb
outsb
sbb
push
mov
sub
xchg
inc
fistps
or
in
add
lret
bound
lret
mov
push
lret
or
nop
insl
popf
psllw
push
ljmp
inc
les
xchg
mov
jns
dec
jnp
fistpl
subl
faddp
mov
inc
inc
jmp
dec
out
inc
movhps
dec
mov
incb
hlt
cmp
sbb
adc
xchg
pminsw
shl
lds
sti
ret
pop
out
adc
daa
test
fists
addb
inc
lret
or
push
mov
int3
sub
pop
add
fbld
sti
and
outsl
mul
dec
xor
repz
into
dec
xchg
adc
mov
scas
lock
jbe
xor
lods
mov
cs
int3
cmp
sub
mov
add
stos
jle
mov
mov
mov
loope
ljmp
mov
add
ss
xor
shrl
cld
jl
xor
cs
xchg
in
ss
in
xlat
xchg
xor
push
pusha
mov
adc
sbb
pop
nop
push
sbb
enter
notl
test
movl
mov
int
out
aaa
sbb
dec
mov
sti
pop
adc
or
test
aam
mulb
mov
jb
rolb
out
loope
hlt
add
repz
and
scas
jb
dec
mov
out
fiaddl
sti
sarl
and
outsb
xor
add
pushf
pop
mov
and
insl
jle
fistl
xchg
xchg
and
mull
cwtl
in
jne
xchg
pop
inc
fdiv
sub
pop
mov
sub
inc
jge
xor
lahf
mov
shll
outsl
sub
daa
test
inc
lahf
nop
cmpsb
arpl
rcl
in
jle
dec
inc
cld
jecxz
mov
mov
js
pushf
mov
daa
push
loope
inc
xor
push
dec
gs
call
jmp
xchg
xor
xor
jmp
push
mov
or
sub
imul
leave
lds
repnz
jmp
dec
data16
sahf
dec
jg
mov
out
sbb
dec
xchg
jb
loopne
ss
lods
pop
rcll
push
add
loop
mov
out
mov
sarl
jp
xor
adcb
adc
jmp
cmc
lock
dec
xor
scas
mov
stc
insl
push
dec
scas
cltd
aas
and
mov
jo
xchg
pop
cs
mov
push
jecxz
mov
scas
add
mov
and
mov
lcall
loope
dec
mov
lods
push
push
mov
xor
mov
sbb
mov
mov
pop
lea
push
sub
loope
mov
outsl
pop
push
push
shrb
ljmp
jmp
aam
ja
ljmp
push
mov
das
gs
xchg
mov
jns
mov
mov
add
push
fisttps
and
dec
enter
insb
popf
xchg
jnp
fistpll
es
sub
cli
sbbb
cmc
add
fwait
pop
fmull
int
xchg
jnp
sub
daa
add
push
and
js
push
cmp
jl
xchg
notl
insl
add
pop
mulw
imul
ret
stc
sahf
iret
push
pushf
imul
pop
adcl
mov
inc
mov
fsubl
aaa
outsb
fbstp
push
lea
lahf
gs
aam
push
jo
xchg
sub
or
hlt
xchg
lret
mov
rcrb
sub
inc
es
mov
xor
gs
add
mov
lods
divl
int
adc
fistpl
xchg
out
outsb
push
dec
sub
insb
out
dec
pop
mov
iret
sarb
sub
mov
or
pop
adc
sbb
cmp
inc
and
idivl
into
dec
ljmp
sub
cli
bound
or
xor
lret
fs
push
mov
adc
cltd
clc
xlat
or
jae
add
cmp
lcall
dec
sub
iret
fistps
pushf
push
inc
das
jbe
es
iret
lods
out
out
mov
mov
xchg
lret
jb
fildll
cld
mov
loopne
les
in
call
and
mov
mov
dec
dec
sahf
push
fisubrl
mov
shll
sub
or
pop
scas
add
xor
inc
dec
cmp
punpckldq
js
decl
adc
sbb
and
jge
ss
dec
in
pop
add
lock
cmpsb
mov
sub
icebp
xorb
and
or
and
inc
imulb
adc
adc
ret
sbb
mov
and
cmp
dec
hlt
inc
lret
in
adc
loope,pt
es
addr16
fimull
fisubl
ffree
fs
fiadds
xor
cmp
sub
push
xchg
hlt
inc
aaa
loop
mov
stc
cwtl
push
ret
lock
dec
push
fsub
call
cmp
xchg
sbb
mov
int
pop
jbe
jo
loopne
sbb
xchg
cmpsb
cmpsl
stos
in
in
jl
pushf
mov
aad
scas
sbb
add
push
adc
pop
dec
and
push
sub
fdiv
sbb
sqrtps
mov
loopne
pop
lock
and
xchg
push
push
lds
adc
notl
das
movb
sub
push
loope
sbb
enter
sbb
popl
push
ja
ljmp
xor
push
ret
push
jle
ja
icebp
inc
mov
add
sub
add
test
bound
push
sbb
repnz
jmp
mov
pop
ret
cwtl
clc
lahf
xor
dec
fucomp
stos
jnp
aaa
scas
and
sahf
ljmp
jno
mov
je
shrl
ret
adc
ret
insb
push
lahf
jo
sub
jae
nop
add
cmpsb
push
test
pop
cmp
sbb
cli
mov
lods
pop
jne
das
popa
cmpsb
add
push
sub
stos
adc
fisubl
std
cmp
call
jns
outsl
ja
cmp
xor
inc
das
bound
push
aas
mov
adc
clc
out
loop
addr16
push
dec
lea
sbb
inc
push
lahf
mov
addr16
fwait
jl
inc
fcoml
xchg
mov
xor
aam
mov
mov
push
cmpsb
addr16
and
jl
ja
push
nop
inc
clc
pop
fistpll
data16
sbb
pusha
xlat
test
add
stos
xchg
adc
hlt
faddl
movsb
jl
pop
popf
mov
rcrl
or
cmp
xchg
lods
cmp
xchg
inc
xor
xlat
jno
add
lea
mov
push
mov
inc
mov
popa
pop
sbb
out
inc
jbe
stos
iret
movsb
mov
nop
dec
daa
adc
adc
cmp
push
jmp
fisttpl
out
xchg
cmp
mov
jecxz
cmp
cmp
pop
or
test
lods
jns
jno
adc
imul
stc
imul
rolb
xor
std
bound
pop
in
daa
mov
dec
out
mov
or
dec
rorb
or
push
sub
ds
add
dec
jbe
sub
orb
or
or
jnp
sub
movsb
mov
stc
adc
popa
sub
call
add
push
ja
hlt
sbb
xchg
or
xor
mov
mov
push
inc
insb
lret
mov
push
mov
mov
mov
cmp
cwtl
adc
xchg
and
repnz
fcoml
mov
jg
add
neg
mov
sarb
adc
xchg
fldenv
jl
les
cmpsl
sub
pop
out
mov
ret
das
pusha
lods
or
rorl
fs
add
cmp
arpl
jecxz
stos
iret
jl
movsl
jmp
ret
pusha
sahf
add
lods
ror
int
mov
test
fiaddl
lods
pop
push
ret
mov
pop
into
sti
jmp
or
or
fidivrs
and
sub
sub
shll
and
out
push
stc
sbb
jge
stos
stos
popf
sub
sbb
mov
fidivrs
pop
mov
popa
movsl
mov
jo
pushf
test
mov
xchg
xor
test
push
out
jns
test
shrl
pop
je
int
in
xchg
mov
outsb
cmp
daa
pop
cli
push
cltd
rol
repz
movsl
leave
pop
cmpsb
call
inc
jle
xorb
imul
xchg
mov
sbb
in
mov
inc
or
lcall
lds
cmp
jle
xchg
jmp
mov
adc
sub
lret
pusha
sbb
cli
sub
xor
add
jnp
insl
pushf
ds
or
jl
inc
lock
push
daa
xchg
pop
cs
sarl
xorl
push
stc
adc
cmp
mov
mov
sbb
push
xchg
inc
adc
inc
push
outsb
lcall
arpl
mov
loop
in
cltd
jl
inc
hlt
testb
cmp
outsb
and
popf
mov
mov
cmovnp
xchg
cmpsb
pop
out
mov
xor
stc
mov
jmp
adc
les
sub
lea
stc
xchg
cmp
sbb
lret
mov
add
ljmp
jp
jnp
inc
lcall
cmp
incl
xlat
sbb
mov
push
lds
dec
ficomps
test
adc
push
dec
inc
fisubrs
shlb
jne
lock
je
dec
cwtl
sub
xor
lret
rolb
js
lods
pop
pop
and
sti
push
jmp
scas
push
or
pusha
push
cmc
bound
add
mov
mov
ret
jb
repnz
mul
fsubrl
inc
sti
es
in
cmp
add
add
stos
xchg
sahf
fincstp
jmp
and
lret
shrb
mov
and
mov
daa
push
ss
leave
fnsetpm(287
scas
cmp
pop
shr
fldenv
fadds
inc
push
or
fsts
pusha
cmpsb
add
xor
mov
es
push
cmpsl
add
add
add
int
inc
dec
out
cli
mov
push
sti
mov
enter
push
stos
mov
popa
fistps
add
cmp
xchg
mov
repz
inc
lcall
ljmp
xor
jecxz
leave
mov
into
and
pop
lods
jecxz
and
in
fstps
mov
aam
sub
mov
mov
movsl
aad
pusha
aad
jmp
call
ds
call
out
adc
mov
fnstsw
in
popf
das
mov
fildll
mov
shll
mov
ja
sub
mov
or
stos
cmpsl
jne
imul
cmp
imul
cmp
repz
nop
jle
cmp
add
in
std
dec
mov
jmp
adc
push
mov
repz
call
outsl
movsl
push
inc
push
push
aas
lret
in
jno
dec
lock
imul
scas
and
fnstcw
out
adc
fwait
inc
out
call
mov
test
push
jp
inc
sbb
pushf
fsub
inc
lcall
test
or
stos
cmp
lahf
pop
repnz
push
xchg
push
add
mov
jg
adc
test
sub
jg
ja
leave
cmp
dec
je
mov
popf
aas
dec
inc
std
loope
loope
ret
movsl
into
out
lds
jbe
inc
call
popa
xchg
sti
lahf
sbb
nop
fnstenv
and
or
mov
adc
add
in
xor
mov
hlt
or
das
push
lock
mov
mov
pop
jae
xor
enter
cmp
in
fsubr
in
push
add
or
add
mov
sub
xchg
loope
pop
out
jne
push
pop
jb
ds
or
mov
cmp
inc
push
outsl
add
outsb
fnstenv
arpl
aam
fsubrl
loopne
inc
dec
add
movsl
int3
clc
cmc
pushl
add
cmp
push
cltd
mov
aaa
imull
adc
fucom
std
sbb
mov
fstl
sub
add
jae
inc
rolb
push
sub
out
out
out
xorl
xor
inc
add
cmovne
adc
pop
call
lahf
movsb
sbb
adc
inc
lods
mov
fs
push
stos
ljmp
mov
adc
rorb
mov
and
pusha
rclb
push
hlt
jno
fneni(8087
pushl
and
repnz
xlat
inc
in
push
daa
in
sbb
test
mov
arpl
rorb
lcall
je
cmp
push
push
push
int3
int3
add
loopne
mov
outsl
sti
fimull
sbb
or
sub
daa
data16
bound
jno
outsl
and
pop
out
adc
ja
or
mull
pop
jg
mull
lcall
sarl
shll
and
cmp
dec
xchg
mov
or
scas
sbb
insl
push
lds
in
in
push
mov
cmpsb
test
enter
dec
push
mov
mov
xlat
xchg
sbb
mov
add
fidivrs
test
jno
movsl
jle
cmpsl
jmp
xchg
adc
pop
aam
jl
add
adc
xor
clc
dec
mov
xlat
cmpsb
or
testb
mov
adc
lahf
dec
imul
pop
push
sub
aad
mov
push
mov
pop
dec
or
adc
roll
ja
dec
mov
repz
sub
lret
movsl
xchg
test
stos
scas
stc
or
stos
xchg
dec
and
push
lods
inc
jp
mov
push
sbb
hlt
out
jmp
adcl
cmp
or
add
xor
cmp
fdivrs
add
jecxz
divl
and
movsl
or
add
sub
fmulp
ljmp
popf
in
int3
aam
sbb
push
cmp
dec
ljmp
sub
mov
es
mov
cld
lcall
leave
or
cmpsl
xchg
add
aad
xor
or
mov
mov
sub
pop
imul
lcall
pop
insb
jg
jb
out
sti
stos
pop
xchg
jecxz
sub
sahf
xchg
jecxz
testb
push
sub
xor
iret
sbb
add
mov
cmp
lcall
out
mov
add
push
setb
mov
inc
gs
call
inc
ss
and
mov
push
arpl
inc
test
cmpsl
or
lods
mov
ds
push
inc
jp
xor
shlb
dec
or
sbb
push
mov
int
test
mov
sbb
ret
sub
jnp
stc
mov
imul
sub
les
in
cmp
jo
push
imul
pop
mov
pushl
cmp
push
pop
cwtl
int3
call
push
xor
test
mov
stc
add
fwait
inc
dec
movsl
adc
lods
push
cmp
fldln2
inc
fstpt
in
mov
mov
and
jae
inc
mov
enter
cmp
mov
adc
mov
mov
xor
push
and
dec
lock
fisttps
xorb
inc
cmp
dec
gs
outsb
mov
adc
sbb
mov
jae
add
push
pop
stos
cld
nop
enter
jns
xlat
sti
cwtl
push
pop
xchg
cmp
addl
testb
repnz
aaa
nop
adc
pop
jmp
cmp
rorl
out
inc
rorb
icebp
xchg
dec
notb
popf
out
dec
mov
dec
inc
jmp
stc
insl
and
in
jmp
push
dec
xor
xchg
fists
sti
inc
pop
sahf
das
sbb
inc
mov
jmp
fwait
or
adc
xchg
scas
ja
mov
ja
mov
faddl
and
sub
xchg
xor
ljmp
inc
das
adc
cmp
ret
sub
jo
mov
popf
fs
in
cmp
mov
shr
into
test
sub
iret
pop
xchg
dec
ljmp
xor
fcmovb
xor
pop
push
dec
xchg
rcrl
out
and
stos
adc
cmp
dec
adc
stos
bound
imul
popa
add
or
test
dec
lret
std
sub
stc
test
sbb
out
adcl
inc
aas
js
ljmp
ljmp
or
dec
pop
xor
mov
add
lods
dec
cmp
cmp
mov
ss
popf
iret
in
mov
mov
in
into
pinsrw
mov
xor
pop
loop
idivb
push
push
pop
pop
out
icebp
sub
int
rorl
jmp
out
dec
mov
out
stos
fldenv
std
mov
les
out
jns
mov
push
ss
xchg
int
outsl
out
cmp
es
test
in
xchg
jbe
mov
and
dec
outsb
pop
xchg
jns
jl
lock
or
cmpl
xchg
xchg
pop
xchg
dec
dec
bswap
push
xchg
outsb
jae
cld
insl
test
cltd
adc
fcomip
cmc
xor
sbb
mov
fmuls
push
nop
xor
cmpsl
imul
xchg
adc
loop
enter
fisubrl
or
adc
daa
adc
mov
dec
lea
mov
mov
or
lea
cmp
mov
xchg
repnz
mov
jecxz
cmp
jno
mov
aam
push
mov
data16
fiadds
xchg
fsubrs
cli
mov
mov
in
fmull
inc
or
pop
negb
mov
stc
pcmpeqw
dec
sbb
pop
mov
jge
push
xor
push
jno
mov
int3
mov
cmpsl
bound
fisubs
xchg
test
mov
cmp
push
mov
shr
pop
inc
mov
mov
or
xor
mov
addb
pop
mov
dec
sub
inc
add
int
xorb
pop
jb
loop
mov
cmpsb
stos
rolb
in
mov
inc
dec
pop
jns
jg
ucomiss
aaa
mov
mov
ds
adc
mov
sahf
jbe
out
add
fistps
out
shll
sbb
and
inc
sub
inc
cmp
lret
mov
std
repnz
dec
fimull
adc
push
push
stos
test
push
lcall
add
daa
sub
ja
xrelease
shll
loope
jns
pop
mov
ds
xorl
mov
ja
mov
js
xchg
cmp
ljmp
addr16
fldenv
fs
js
mov
lds
loope
and
test
push
cmc
lret
cmp
xchg
jno
daa
lret
dec
jmp
in
in
or
imul
jns
dec
es
pop
je
lea
testb
iret
cmpsb
jmp
inc
xchg
sbb
dec
push
mov
notb
and
cli
or
enter
push
test
jp
pusha
cmpsl
mov
mov
add
xor
into
add
sbb
pop
inc
adc
bound
inc
out
mov
stos
enter
mov
dec
jl
sub
call
in
and
les
daa
sti
insb
mov
inc
sbb
jno
xchg
sahf
inc
or
mov
lahf
jle
je
sbb
nop
inc
testb
divb
nop
cmpsl
xlat
test
inc
push
push
or
xchg
fbstp
jne
sbb
jbe
or
adc
cs
xlat
sti
fs
or
fcomi
or
shl
mov
in
or
int3
sub
cmp
jle
jae
inc
pop
daa
clc
sub
cmpsl
jne
jl
std
hlt
mov
call
jne
mov
aam
scas
add
adc
sahf
cli
rcll
push
dec
gs
mov
test
jge
xchg
mov
cltd
inc
scas
aas
ret
in
enter
into
pop
in
sub
lret
insl
lahf
cmp
les
mov
hlt
pshufw
inc
xchg
push
addb
cmc
les
mov
fisubl
stos
push
jmp
pop
inc
in
cmp
pop
icebp
outsl
push
or
in
sbb
jae
fisubl
and
inc
in
movsb
imul
out
add
adc
pushf
loope
fwait
ja
adc
inc
loope
pop
cs
cltd
jg
imulb
pop
xchg
cmpsl
push
and
cmp
out
mov
aam
mov
les
pushf
into
cmp
add
aas
fwait
jbe
sbb
shrl
add
inc
xchg
mov
and
xlat
mov
jbe
in
push
or
mov
cwtl
push
mov
in
jae
and
inc
sub
inc
clc
push
nop
popf
movsl
mov
das
adc
cmc
out
sbb
in
enter
sbb
pop
inc
lock
add
lret
cmpsl
sub
les
jl
fisubrs
cmpsl
adc
test
mov
mov
sbb
hlt
repz
xchg
xor
iret
mulb
sub
sbb
js
adc
daa
popa
mov
inc
aam
mov
pop
ret
daa
push
or
xor
or
aaa
popl
mov
fsubs
stc
adc
shrl
int
xor
pop
rcrl
jmp
mov
sti
test
outsb
jbe
repnz
mov
sbb
inc
xchg
mov
cmpsb
xchg
dec
loopne
nop
out
les
add
mov
add
into
sub
sbb
int
pop
test
add
ret
push
inc
sbb
cld
xchg
adc
add
pusha
jl
das
push
icebp
inc
in
mov
cmc
das
rcl
jle
xor
aas
lcall
imul
aaa
ret
lcall
mov
push
cmp
sub
xchg
add
dec
fwait
cs
pop
push
pusha
fbstp
loope
test
or
aad
shlb
mov
clc
jns
sub
idivl
lret
sbb
loop
addr16
xor
rcr
mov
aas
movsl
mov
cmp
imul
sbb
sub
xchg
mov
jo
mov
jnp
lds
xor
push
pushf
in
cltd
stc
gs
stc
pop
out
movsl
jo
test
pop
and
rol
jae
mov
push
loope
jnp
mov
sub
jns
pop
mov
addr16
push
nop
dec
jl
xchg
jns,pn
sub
fnsave
mov
xor
stos
test
es
mov
adc
jmp
xchg
cmpl
push
pop
loope
enter
push
lock
test
adc
loopne
data16
mov
arpl
sbb
pop
decl
xor
lret
in
es
mov
dec
fs
jo
mov
mov
cmpsl
cmp
sub
das
and
clc
push
in
inc
in
popa
jae
dec
or
push
jmp
scas
adc
sub
arpl
add
inc
add
test
dec
add
faddl
adc
insb
sbbb
mov
sbb
xlat
std
fiadds
cli
mov
hlt
bound
add
mov
hlt
lret
bound
fs
popa
out
pop
outsl
in
or
jp
lods
loop
pop
outsl
mov
test
sti
xor
push
call
pop
push
mov
dec
mov
xor
or
xchg
ds
cli
jbe
aad
arpl
and
or
xor
gs
insb
sbb
mov
inc
in
sbb
pop
push
fisttps
mul
lock
inc
jo
push
sub
shl
outsb
pop
mov
inc
add
dec
fcmovbe
jl
push
cld
mov
cmc
fldenv
divl
cmp
mov
test
jmp
jb
ds
dec
int
shrl
roll
adcb
int3
filds
movsl
cmp
stc
notl
xor
scas
xchg
pop
adc
adc
pop
inc
jg
mov
mov
mov
js
scas
fwait
out
jmp
xchg
inc
lods
nop
outsl
stos
es
fwait
or
lret
or
fcompl
adc
call
and
inc
mov
gs
lds
cmp
ret
out
rorl
adc
mov
out
sub
mov
movsl
adc
sbb
inc
lock
adc
ss
aas
pusha
mov
mov
xor
sahf
scas
scas
loop
mov
out
xor
lods
shl
das
sub
inc
repnz
push
add
fs
xor
lods
xlat
fs
insl
in
stos
stc
gs
cmp
lret
cld
push
pop
cmc
fstpl
sbb
scas
inc
jl
popf
test
or
int3
dec
cmp
dec
js
enter
add
sub
rolb
imul
push
fucomip
mov
xor
lcall
and
adc
dec
mov
movsb
gs
shrl
dec
lahf
mov
inc
mov
popa
jbe
jo
out
jmp
jb
jg
mov
fidivrl
add
push
jge
cmp
add
jns
out
sub
xlat
pop
shrl
stc
add
push
mov
ss
push
lahf
into
and
sbb
add
add
daa
xor
ja
dec
rorl
lret
mov
test
sub
mov
xlat
push
mov
and
dec
and
xorl
das
xlat
das
xor
insl
fnstenv
lret
inc
mov
mov
lret
adc
call
xchg
or
data16
jb
mov
out
pop
mov
enter
fwait
aaa
scas
test
sarl
jnp
dec
or
leave
repz
push
inc
and
adc
test
mov
movsb
adcb
inc
in
push
cmpsl
adc
mov
rol
pxor
mov
pop
dec
sub
inc
xor
scas
jb
les
loop
pop
pop
cli
inc
pop
jnp
xor
sbb
xchg
ret
mov
push
pop
daa
std
shlb
loop
jecxz
jo
xchg
mulb
or
imulb
aaa
daa
pushf
push
lret
cltd
in
aas
repz
mov
inc
inc
out
addl
sub
jg
xchg
mov
inc
cmp
daa
inc
mov
mov
cmp
int
pop
push
sub
jmp
and
repnz
inc
rol
lea
test
cwtl
or
xor
add
call
xor
in
inc
cmpsl
daa
cmp
pop
or
into
dec
pop
jg
cmp
jp
jmp
je
out
inc
testb
and
fisubs
les
in
mov
sub
mov
cli
daa
jmp
ljmp
cmp
out
in
das
jp
mov
loope
xchg
test
jb
mov
imul
inc
int
iret
cmp
or
or
sahf
leave
subb
lock
leave
xor
xchg
or
mov
dec
inc
push
scas
sar
pop
movsl
xor
add
test
add
int3
xor
les
orl
out
inc
mov
aad
stos
fisttpll
push
push
test
std
inc
fcom
push
in
scas
outsl
pop
push
jbe
aaa
cli
or
xchg
mov
dec
mov
dec
mov
fstpt
add
jbe
sub
dec
sub
aas
xchg
sub
test
inc
imul
push
movb
or
out
inc
cmp
sub
jae
dec
lods
aaa
jbe
aad
mov
icebp
cmc
and
fsubl
and
dec
jmp
test
jns
andb
rol
pop
jg
adc
cli
mov
hlt
inc
mov
lret
pop
push
mov
cld
push
rolb
inc
imulb
jle
sti
cmp
lret
pop
pop
sbb
insb
inc
ret
mov
adc
mov
adc
xchg
nop
movl
addl
jle
std
outsl
jo
xor
mov
movzwl
je
out
in
lcall
cmp
dec
es
andb
pop
inc
pop
outsl
cs
ret
leave
sub
dec
cmp
notl
sub
dec
insb
push
jg
inc
mov
test
inc
xor
repnz
and
js
push
scas
dec
pop
cmp
xchg
add
push
imul
push
fisttpll
outsl
inc
push
jmp
mov
xor
ja
cmp
sbb
test
aas
out
aam
popf
repz
shrl
push
lods
push
push
xchg
nop
inc
and
sub
jb
and
aad
gs
xchg
mov
add
or
and
jo
push
mov
ret
mov
or
lods
stos
pushl
cld
adc
push
xor
rolb
lret
leave
dec
and
aam
mov
into
in
movb
adc
popf
add
mov
mov
fisubrs
stc
inc
mov
movsb
push
dec
mov
dec
xor
add
inc
shrb
or
pop
mov
sub
fcom
out
mov
add
jle
divb
das
sarl
mov
fimull
xchg
add
movsb
outsl
jg
inc
inc
push
add
js
jge
add
pop
jge
mov
pop
xchg
das
arpl
cltd
mov
shll
enter
nop
nop
add
sbb
pop
xchg
xchg
mov
into
clc
mov
dec
push
cmp
stc
cmp
out
inc
arpl
stos
mov
inc
fsubr
push
daa
cmp
or
cmp
cmp
cmpb
insb
mov
push
mov
mov
jnp
fstps
icebp
mov
stos
fildl
movsb
xchg
jl
sub
daa
xchg
jle
inc
cld
mov
mov
sti
out
std
ss
cmp
int3
push
out
hlt
mov
aam
lea
and
in
movq
lahf
and
in
into
inc
inc
sahf
mov
out
movl
sbbb
mov
sub
es
cmp
rclb
and
aam
sbb
jle
mov
addl
push
pop
inc
add
adc
test
fwait
insb
ret
lcall
scas
in
jecxz
inc
sbb
lret
outsb
mov
push
push
repz
rclb
push
cmp
add
and
ss
sbb
sub
pop
mov
pusha
cld
mov
xor
adc
mov
push
mov
push
ds
iret
bnd
iret
lret
jns
pusha
pop
or
cmpsl
dec
mov
xor
inc
add
mov
loope
jne
gs
add
jecxz
adc
xchg
xor
mov
les
pop
loope
xor
mov
loop
mov
xchg
mov
sbb
mov
fsubrs
dec
mov
sbbb
adc
lret
lea
movsb
xor
insb
cld
jp
mov
inc
mov
fldl
lcall
or
mov
adc
jge
sbb
push
jo
addr16
das
xchg
ss
out
insb
sbb
fists
sbb
cmp
add
insb
xchg
mov
jo
xchg
pop
in
lea
sahf
push
aaa
pop
outsl
jmp
xor
test
imul
adcb
jns
dec
add
xor
jle
out
daa
add
hlt
mov
inc
js
lcall
pop
aas
mov
out
push
adc
inc
push
pop
xchg
xchg
cmp
add
adc
jecxz
and
sbb
das
mov
xchg
push
sbb
push
dec
leave
in
sbb
repz
mov
in
ljmp
data16
adc
and
gs
dec
ret
pop
into
mov
mov
cmp
in
ss
or
out
pushl
push
xor
pop
es
cld
je
stos
inc
es
push
and
cmp
call
mov
sub
gs
rclb
cltd
ret
dec
push
pop
popa
pop
jnp
pop
insl
lcall
mov
inc
cmc
add
cltd
int
test
adc
icebp
mov
pop
mov
dec
rol
xor
pop
jae
sub
cbtw
inc
xchg
in
lods
xchg
jl
mov
loope
scas
sub
lahf
in
test
fisubrl
lods
pop
negb
pop
cmp
int
setg
cli
push
inc
out
fucomip
cmp
jp
mov
pop
sarl
push
adc
lock
movsl
lods
insb
addr16
in
add
fsubs
sub
iret
adc
lock
stos
pop
dec
lds
ret
and
addr16
lods
cmp
pop
mov
cmp
mov
mov
das
sbb
and
sub
dec
out
and
jge
mulb
and
jnp
and
inc
jl
cmp
test
xor
inc
sub
dec
mov
sbb
dec
pop
jns,pn
mov
jnp
mov
mov
outsb
ds
mov
aad
insb
mov
xchg
xchg
push
adc
shlb
sub
jmp
data16
test
dec
push
daa
xor
cmp
int3
outsl
adc
sub
sti
pop
test
add
xor
sub
jae
cmp
sub
aam
push
lods
rcrb
rorb
iret
in
pop
xor
insl
sub
lcall
jmp
adc
pop
dec
dec
fcompl
xchg
and
dec
and
hlt
mov
enter
jne
cmc
int3
in
pop
imul
inc
xor
test
mov
aas
xchg
stos
lds
aam
adc
or
adc
in
icebp
pop
and
push
stos
loopne
lcall
mov
daa
es
push
and
and
lods
pop
inc
mov
scas
psrld
inc
add
outsl
fstp
neg
pop
sbb
test
or
test
jmp
cmp
mov
add
or
jne
sbb
cmpsl
pop
or
pop
loop
mov
inc
jne
xor
adc
andl
add
xchg
pop
nop
scas
mov
push
add
enter
sub
push
mov
jno
sub
stc
mov
xchg
dec
adc
pusha
mov
sub
dec
negb
xchg
imul
inc
push
xchg
test
cmpsl
in
stc
repz
daa
inc
push
mov
popf
jg
push
sbb
jmp
addr16
jecxz
outsl
fstpt
and
clc
icebp
and
lods
mov
mov
scas
aas
test
mov
arpl
mov
inc
insl
in
jne
mov
into
sti
iret
push
inc
jmp
movsb
sbb
std
cli
mov
mov
ret
call
sub
dec
aam
insb
in
lock
shlb
push
in
rcr
movsb
cmp
add
mov
aas
std
imul
or
mov
adc
or
mov
or
sti
push
idivl
insl
arpl
inc
push
int
push
xor
sbb
test
dec
inc
xor
mov
loope
mov
insl
adc
fidivl
testl
pushf
lcall
jg
adc
ljmp
mov
sbb
mov
inc
nop
mov
mov
dec
add
mov
xor
scas
inc
xchg
mov
dec
ss
enter
add
xchg
mov
mov
adc
les
jl
pop
or
mov
xor
pop
ds
and
push
cwtl
call
and
aaa
test
std
hlt
push
inc
push
push
loopne
les
sbb
jmp
mov
insl
repnz
leave
xor
or
int3
test
mov
out
ja
out
pop
loopne
xchg
jmp
shrl
sbb
push
test
mov
cmpsl
adc
cs
fwait
sub
loop
add
int
movsl
iret
jl
xchg
lcall
scas
outsb
les
xchg
cmp
jle
or
lret
sub
inc
inc
sarb
cmp
push
jmp
xchg
inc
xchg
push
jp
outsb
lods
dec
adc
popw
mov
xchg
add
pop
subb
sub
sbb
xchg
push
push
rcl
and
negl
out
js
mov
push
jmp
popf
lret
sbb
sbb
lret
scas
mov
rcrl
jecxz
mov
mov
gs
mov
pop
mov
lret
loop
cmpsl
scas
imul
mov
mov
andl
out
pop
mov
loop
and
bsf
or
mov
sub
fstpt
imul
mov
mov
dec
mov
jl
mov
repnz
pop
aad
mov
flds
sar
mov
popa
cwtl
movsb
mov
decb
cmp
inc
jnp
jge
enter
inc
add
dec
sahf
push
fstps
mov
sbb
pop
or
inc
out
add
and
jno
dec
in
mov
xorb
daa
sbb
adc
xor
adcb
lea
sub
insl
add
int3
adc
cli
sub
jge
call
jmp
stos
jp
lds
adc
and
jp
jl
cmp
je
lock
ret
fmuls
dec
popa
ret
dec
xchg
sub
rcl
mov
mov
aas
inc
adc
sub
sbb
push
in
and
mov
cld
sbb
inc
fdivrs
add
orb
cmpsb
out
sbbb
in
sub
push
add
jbe
lds
test
mov
outsb
fnstsw
xchg
lahf
ljmp
inc
pop
push
aaa
mov
or
cli
pop
mov
mov
xchg
xchg
lcall
sahf
jp
adc
dec
and
cli
xor
push
inc
jmp
repz
push
sbb
xor
fisubrl
aad
pusha
fcmovnu
cmp
xor
jp
pop
loopne
push
mov
nop
jno
xchg
nop
in
out
adc
xorl
lret
mov
pop
jnp
inc
mov
mov
sbb
stos
xchg
xor
dec
in
incl
xor
cmp
or
iret
fbstp
test
and
and
pop
shl
mov
jecxz
mov
icebp
lcall
stos
sub
ret
mov
push
arpl
add
sbb
daa
or
sub
mov
mov
mov
popa
pusha
scas
icebp
aaa
insl
push
jl
push
pusha
mov
xchg
sahf
jb
xchg
cmp
stc
pop
fidivrl
or
mov
push
and
aaa
gs
cmpsb
leave
dec
pop
xor
adc
hlt
xor
idivl
lock
xchg
pop
loopne
ret
inc
sub
adc
addr16
mov
cli
jmp
mov
and
scas
inc
ret
inc
fcomi
inc
push
push
in
cmpsb
pusha
ret
push
js
ss
inc
movsl
in
shl
arpl
call
push
daa
aad
and
cmc
adc
daa
sub
push
cs
repz
jge
popf
sbb
ja
xchg
sbb
sarb
jl
les
loop
ret
ds
es
cmc
shll
jae
mov
loop
cld
push
fistps
mov
addr16
pop
push
cmp
aam
xchg
out
inc
pusha
out
ss
je
mov
jmp
out
lods
vorps
push
jno
add
push
cld
or
arpl
jae
pop
adc
inc
aaa
leave
adc
fcomp
imul
aad
sbb
lock
jl
jnp
jno
pop
ficompl
cmp
aad
bound
mov
daa
push
and
pop
mov
sub
cwtl
in
in
jo
cmp
bound
in
leave
dec
scas
push
mov
adc
test
xor
imul
enter
bound
push
push
push
mov
les
inc
shll
or
out
imul
mov
faddl
mov
std
inc
sub
add
leave
aad
movsb
ret
cmp
inc
out
ficoms
push
rcrl
or
mov
loop
jnp
shlb
fidivrl
sub
lods
cmc
aam
in
into
pop
pop
push
cmc
xchg
xor
daa
pop
mov
call
loopne
xor
mov
xchg
mov
jecxz
push
xlat
loopne
jle
andl
xchg
imul
aaa
jg
sti
or
pusha
fcmovnbe
pop
push
add
test
inc
jo
adc
dec
inc
push
mov
hlt
xor
pop
sub
sub
rolb
mov
sti
xchg
pushw
cld
mov
out
xchg
fisubrl
lret
add
pop
jno
loopne
mov
jae
into
mov
inc
mov
dec
leave
inc
sub
sbb
adc
scas
pop
les
shll
lret
fildll
push
fadd
ret
dec
stos
add
pop
enterw
and
sub
jmp
testl
imul
push
lods
inc
xor
cmp
dec
add
adc
es
je
push
xor
movsl
xchg
test
adc
pop
cmp
cmp
ds
mov
xor
call
loop
xchg
mov
loop
int
pop
jge
outsb
repnz
jne
xor
int3
lods
xor
jl
ret
icebp
je
ss
fistps
lret
test
stos
popf
sbb
add
div
mov
cli
xlat
pop
add
jbe
inc
xor
adc
push
movsl
insb
adc
in
scas
fdivl
daa
lahf
inc
adc
ja
ds
pop
hlt
push
push
das
push
jb
lcall
fucomip
push
aaa
ljmp
add
lahf
push
in
sbb
jl
inc
adc
push
add
cmp
xor
dec
jo
push
aaa
movsb
nop
sub
aad
pop
dec
xchg
xchg
xchg
and
dec
pop
or
dec
repnz
pop
jmp
inc
adc
sbb
movsl
dec
cltd
cmpsl
out
scas
jmp
repnz
inc
mov
mov
jbe
add
pop
mov
incl
lods
and
mov
xor
cmp
cwtl
fs
sarb
mov
jecxz
sub
mov
arpl
jo
push
pusha
dec
jl
cltd
iret
es
jge
rcrl
jle
push
sub
push
push
movsl
push
dec
jg
hlt
es
sbb
daa
add
jne
std
sti
movsl
push
mov
fsubrs
jo
jg
lahf
int3
push
adc
repnz
cmc
inc
mov
jle
cmp
aaa
test
js
out
orb
sub
fwait
outsl
pop
bnd
cltd
ret
or
rcll
int
arpl
push
jbe
out
xchg
mov
xchg
pop
mov
ss
pushl
call
xchg
ja
xor
sub
lcall
adcl
dec
fsubrl
mov
jb
dec
inc
out
popa
sbbb
mov
mov
test
mov
shrb
daa
xor
pop
add
into
sub
xor
push
cli
icebp
and
xchg
mov
push
rorb
push
sub
sub
rorb
adc
xchg
cmp
add
add
jb
adc
cmc
jne
out
and
in
cld
std
mov
add
xor
inc
mov
mov
js
mov
mov
xchg
ret
adc
es
je
push
jge
mov
pop
sub
test
adc
bound
add
sub
std
pop
bound
orl
cs
and
mov
imul
fiadds
mov
or
mov
cmp
cmp
jo
mov
insl
inc
sbb
lds
sub
mov
mov
inc
push
in
iret
sahf
scas
pusha
cmp
shld
iret
sbb
pop
dec
dec
mov
jecxz
xchg
jno
popa
test
imul
sbb
cmp
push
mov
mov
out
std
mov
dec
add
jae
mov
int
scas
fwait
xor
aam
inc
xor
je
inc
pop
lea
int
nop
mov
xchg
inc
and
mov
loope
or
enter
push
dec
pop
cltd
iret
dec
push
clc
rorb
int
ss
pop
mov
jae
cld
push
sbb
add
test
adc
orb
jge
pop
subl
adc
out
hlt
mov
pop
je
xor
inc
and
inc
dec
in
in
add
push
lea
pop
cld
movsb
mov
pop
sub
pop
add
pop
scas
lods
push
xlat
or
gs
mov
pusha
mov
jae
jmp
adc
cli
je
jge
push
ret
in
negl
sbb
sbb
jge
notl
es
loope
add
mov
aad
sti
loope
xor
rcl
push
cmp
mov
filds
fsts
mov
xor
in
sbb
popa
aad
aam
mov
push
push
pop
pop
pop
shl
add
fnstcw
and
or
mov
mov
fs
out
ficoml
out
xlat
push
xor
js
add
fnstenv
or
ljmp
jg
inc
lret
cmp
mov
dec
rcl
cmpsb
sbb
and
mov
lods
ljmp
test
push
fcomi
inc
mov
mov
fwait
add
aas
jb
test
jmp
dec
pushf
dec
mov
mov
je
ret
sub
jge
rcl
cmc
out
popf
and
imul
fbld
sti
and
xchg
lods
push
in
pusha
rcl
rol
push
rcll
idivl
mov
xor
push
jne
mov
push
scas
jmp
arpl
sbb
mov
aas
sahf
in
aam
sbb
mov
movntq
sub
or
fstpt
push
cmc
mov
inc
loop
dec
mov
and
aas
jne
mov
rcll
sub
jl
testb
fs
addr16
sarb
mov
jne
in
jne
mov
in
cmp
shrl
pop
shlb
adc
in
repnz
xchg
gs
sub
inc
enter
mov
filds
xchg
pop
mov
xlat
es
pop
cli
fcoml
pop
pop
sub
add
or
jp
cwtl
out
dec
jb
push
lods
cmpsb
xor
ret
arpl
push
addb
icebp
fstpl
in
mov
sahf
xor
fidivs
pop
dec
push
out
dec
mov
xchg
pop
mov
inc
pop
mov
mov
add
xchg
fs
outsb
adc
dec
repnz
add
push
pop
mov
dec
sti
pop
jle
inc
mov
mov
jae
jnp
pop
pop
jmp
dec
cmpsb
cmpsb
cld
add
repnz
repz
test
out
add
out
and
mov
fdivp
push
pop
iret
aam
xchg
mov
enter
jmp
push
sarb
and
rolb
idiv
shr
scas
ret
mov
std
push
lods
into
dec
aas
das
std
push
dec
xor
sub
in
push
lret
push
sub
push
jge
jp
fwait
outsb
dec
mov
loopne
mov
iret
jns
cli
out
jmp
dec
adcl
inc
cmp
mov
addr16
xor
addr16
mov
lahf
jno
sbb
adc
mov
insl
sub
adc
shrb
xchg
xchg
xchg
movsb
movsl
ror
and
add
idiv
arpl
sahf
or
jae
loope
inc
fs
dec
mov
xor
mov
test
inc
mov
push
loopne
push
add
cmp
call
cmpsb
cmpb
jns
call
xor
and
pcmpgtw
je
stos
jbe
daa
or
test
icebp
repnz
shl
call
pop
icebp
push
loop
sbb
int3
sub
rorb
pop
cmpsb
mov
push
adc
push
fisubs
dec
je
adc
and
lahf
aas
or
and
mov
nop
daa
xlat
jmp
cmp
lahf
cmp
clc
jns
pop
mov
pop
enter
mov
sbb
dec
mov
add
mov
mov
imul
shr
jg,pn
mov
pop
out
dec
paddw
shlb
sbb
out
or
mov
xlat
mov
mov
cmp
aaa
imul
and
push
iret
outsl
sub
mov
and
das
jg
fwait
jmp
mov
push
pop
or
lods
dec
or
xlat
nopl
repz
cwtl
fs
fnsave
hlt
xor
cmp
clc
jns
fcomi
cld
popf
dec
push
jae
pop
cmp
ljmp
jb
rorl
jae
pushf
aaa
or
mov
push
popf
lret
sbb
jle
push
push
add
hlt
fstl
cmp
jns
out
jns
jb
movsb
and
ds
push
adc
pop
adc
loope
les
jbe
stos
test
psubusb
pop
clc
lahf
pop
aad
ret
push
stos
xor
test
ss
push
mov
call
xchg
xchg
mov
cmp
mov
cmp
cmp
addr16
arpl
adc
fildl
bound
aad
lret
pushf
mov
sbb
aam
mov
pop
mov
jns
stos
push
cmp
jecxz
fs
dec
leave
cltd
lock
fadds
clc
nop
in
lds
inc
mov
mov
inc
cmp
outsl
shlb
xchg
loop
lock
adc
gs
push
leave
adc
push
fdivrl
push
jns
or
arpl
xchg
out
aaa
mov
subb
xor
in
adc
pop
dec
rcl
pop
xor
fimull
aad
out
cwtl
lods
loope
and
adc
xchg
and
fldcw
pusha
xchg
push
jns
lods
out
add
push
mov
pop
jg
push
mov
iret
adc
mov
sub
or
pop
je
xchg
dec
sarl
xor
out
xchg
imul
lods
mov
sar
push
push
push
jmp
pusha
xchg
repz
pop
incb
xchg
enter
sbb
ret
imul
loopne
out
jno
mov
cmp
jmp
fcomi
pop
xchg
adc
xor
xlat
push
gs
mov
and
into
mov
jo
cmpsl
mov
nop
push
pop
call
bndstx
mov
push
aam
ljmp
sub
sbb
into
or
movsb
inc
repnz
adc
sbb
out
loope
mov
in
pop
stc
maxps
in
stos
ficomps
roll
and
cmp
loopne
sub
outsb
mov
lods
dec
pop
negl
adc
and
sbb
sbb
mov
cmp
loopne
pop
jmp
xor
das
xchg
jae
aaa
fcoml
jle
push
js
arpl
sub
sahf
sub
dec
sahf
jmp
jecxz
xchg
lahf
mov
dec
mov
incl
mov
sbb
clc
in
inc
rorb
xor
mov
insl
xor
push
lods
push
mov
lods
inc
pop
ficoml
stos
je
xchg
out
jne
es
hlt
shlb
or
cmp
std
lea
inc
rorl
shlb
mov
fdivs
fwait
mov
leave
out
mov
add
icebp
mov
mov
incl
shlb
call
dec
call
inc
mov
scas
or
sar
or
jnp
orb
cmc
popa
jae
jg
fisubl
dec
lea
aad
mov
push
ss
adc
stos
aaa
pop
leave
das
stc
jecxz
sub
enter
adc
fstps
outsl
mov
jnp
jae
pop
stos
lock
sti
lahf
mov
lock
inc
in
mov
fsubl
xor
sub
stc
xor
sbb
dec
int3
in
mov
addb
jecxz
jb
cmp
dec
xor
int3
bound
test
jb
outsb
mov
jg
add
ss
xchg
mov
iret
loope
popf
lea
and
out
or
sbb
sbb
mov
dec
imulb
test
in
out
or
add
fadds
sub
mov
jge
pop
es
add
sahf
ljmp
scas
sbb
ja
movsl
sbb
sub
lret
fs
subl
add
loope
sbb
xchg
push
idiv
out
fs
cmc
xor
mov
popfw
pusha
in
pop
dec
or
push
push
js
inc
lds
into
xor
ja
faddl
stc
jns
mov
fcmovbe
adc
pcmpeqb
xchg
pop
imul
lahf
xlat
sub
dec
dec
nop
add
jg
dec
test
xor
or
pop
push
pop
iret
push
insl
inc
into
ss
pop
sbb
cwtl
clc
pop
fsubrs
and
xor
ret
push
adc
push
or
jmp
sub
lret
mov
nop
ja
or
aad
lcall
adc
in
sbb
gs
insb
mov
push
sti
jle
mov
adc
mov
orps
adc
loope
and
adc
sbb
xlat
dec
dec
sbb
test
jge
in
std
sti
add
push
testl
add
inc
mov
ror
dec
cld
jns
sbbb
stos
xchg
rolb
addr16
repnz
cld
das
test
push
addr16
and
fidivrs
and
popf
dec
add
inc
aaa
dec
pop
xchg
addb
cwtl
push
movsb
aad
and
int3
or
int3
out
xor
jno
stos
insl
cltd
test
popa
xchg
ss
adc
les
inc
mov
daa
addr16
into
pop
repnz
add
inc
ficoml
cmp
mov
inc
mov
int
outsl
xchg
dec
jnp
and
mov
lods
insb
lcall
push
fidivrs
jne
leave
inc
enter
jnp
ror
loop
or
mov
xchg
scas
xchg
xchg
cli
pop
movsb
mov
call
push
mov
pushf
les
loope
gs
test
test
pop
nop
lods
jge
bound
dec
adc
cs
aam
movsl
jno
mov
mov
call
sbb
arpl
add
imul
sti
mov
lods
sub
push
pushl
and
fwait
in
adc
repnz
xor
mov
sbb
rorl
sbb
fcmovnb
notb
rcl
xchg
aaa
push
mov
loopne
inc
mov
int3
lcall
xchg
movsl
mov
push
cmp
cmp
push
pop
pushf
fcmovbe
scas
cli
xchg
sbb
pop
mov
jecxz
aam
lock
lret
push
push
daa
std
inc
jge
scas
and
inc
mov
popa
aam
mov
mov
pusha
ret
mov
add
sub
pop
js
sbb
xchg
fstpt
leave
push
or
mov
in
arpl
add
sub
jl
repz
add
or
mov
enter
push
ds
adc
cwtl
dec
mov
aaa
hlt
repnz
cltd
mov
pop
stc
fldt
pop
je
dec
mov
subl
fcmovnb
lods
mov
cli
sahf
icebp
push
je
test
pushf
cmp
inc
push
push
nop
adc
pop
js
flds
and
cld
imul
add
or
mov
fs
fwait
clc
xlat
sahf
mov
sbb
mov
cmp
in
mov
movsl
jno
mov
or
inc
jo
test
mov
xor
jp
jmp
sar
ret
xor
cmpsl
fistl
rcrb
lods
pop
jb
jno
lret
pop
test
es
jo
lea
test
test
test
jae
jae
ja
mov
dec
push
jne
mov
adc
fcomi
and
arpl
and
inc
sarb
icebp
stos
data16
out
fs
ret
adc
lcall
andl
gs
pop
in
test
int3
imul
push
insl
and
sub
push
cmp
loop
jne
cmpsb
lret
xor
push
sub
mov
sub
imul
cmp
sahf
and
sbb
jb
enter
arpl
pop
add
xor
push
lds
rol
pop
lcall
test
cmpl
jne
ljmp
arpl
mov
mov
cmp
mov
cli
jg
pop
das
dec
lea
fwait
adc
xor
inc
xchg
and
mov
pop
loop
dec
inc
out
inc
stos
xlat
fcoml
in
fs
xor
sbb
aam
and
dec
out
fisttps
es
rorb
mov
push
out
push
and
int3
stc
jg
rcll
gs
adc
or
mov
mov
add
aad
add
adcb
sbb
cmp
or
add
rcrl
push
mov
and
sub
mov
or
leave
imull
inc
je
push
repz
js,pt
movsl
in
lods
add
jl
pop
in
mov
jmp
jecxz
xor
stc
or
lods
inc
scas
sahf
shl
adc
inc
fisubl
repnz
inc
dec
dec
arpl
sbb
cmp
xchg
shrb
mov
frndint
inc
sbb
xchg
mov
fdivrs
add
dec
xchg
les
adc
pushf
or
es
sbb
pushf
movsb
rorb
fucomip
sub
mov
or
mov
inc
cli
daa
gs
pop
sbb
mov
adcl
xor
add
add
loopne
adc
andb
mov
lret
sbb
faddl
jg
push
ss
arpl
std
clc
pop
ds
mov
js
das
jno
pop
fnstsw
lret
cmp
jne
mov
dec
test
imul
push
ret
add
repnz
loope
xchg
fmuls
or
mov
adc
sub
movsl
ljmp
cli
jg
mov
or
mov
inc
sbb
sub
loop
cmc
mov
loop
leave
and
stos
repnz
outsl
lock
ret
mov
sub
or
lret
sub
cmc
push
pop
xchg
xchg
jb
lock
js
ret
dec
jmp
test
fidivl
ds
in
repnz
mulb
xchg
cltd
add
and
push
sub
test
jno
scas
xor
shll
leave
jns
nop
push
xor
mov
ret
jnp
into
arpl
arpl
out
orl
xor
push
roll
pop
outsl
inc
dec
lods
cld
in
or
les
mov
xchg
adc
xchg
ja
aad
jg
ret
add
mov
je
cmp
xchg
cld
std
add
lods
std
dec
fisubrs
jmp
xchg
popa
nop
mov
sti
mov
repz
cmp
stos
push
adc
jg
sti
jbe
dec
lret
cli
add
popf
cltd
cld
xor
xchg
fs
jnp
aam
sarl
mov
negb
out
dec
mov
stos
out
add
mov
mov
test
pushfw
test
lret
cld
in
fstps
xor
mov
xchg
test
jge
or
mov
add
mov
push
jnp
das
cmpsb
sarb
ds
and
push
insl
xor
mov
or
dec
ja
jg
xor
in
xchg
inc
mov
xor
lock
jb
test
imul
jle
popa
dec
cs
xor
aaa
loope
lock
cmp
dec
mov
arpl
mov
xchg
push
cmp
sbb
and
mov
or
pop
jge
dec
mov
mov
or
cmp
cmp
add
in
cli
mov
sub
in
cmpsl
mov
andl
lea
mov
leave
shrb
out
mov
cmp
insl
lcall
xchg
iret
push
cmp
mov
ficoml
jno
add
cwtl
ficompl
sbb
jmp
mov
or
test
sub
mov
sbb
js
pop
jo
and
hlt
leave
setne
jge
fsubr
dec
leave
scas
mov
mov
add
jmp
adc
or
in
rcl
orb
xchg
fsubs
xor
mov
add
sbb
negb
lea
test
add
mov
les
push
push
xor
orl
fwait
and
out
lret
mov
mov
fdivrp
mov
mov
and
into
out
aaa
jae
xchg
or
jae
mov
mov
mov
xchg
adc
daa
inc
addb
push
out
sub
push
pop
pop
lds
or
out
xor
push
push
mov
mov
and
gs
arpl
mov
sub
inc
push
mov
mov
mov
add
mov
hlt
sarl
jne
jo
mov
xchg
xchg
dec
and
repnz
mov
adc
sbb
fdivr
rcr
jl
adc
pop
xor
call
cld
les
or
or
ret
or
and
sub
inc
mov
sbb
mov
push
pop
push
xchg
sub
inc
lods
imul
mov
inc
js
sbb
mov
adc
loope
mov
and
mov
shlb
inc
movsl
jmp
adc
push
mov
jne
mov
loope
adc
pop
cmp
lods
test
mov
jl
mov
addl
add
jne
xor
in
das
push
push
and
ja
lahf
rol
inc
testb
pop
mov
cmpsb
pop
and
mov
loop
fidivs
xchg
push
jno
inc
ja
pop
dec
cmp
cld
lret
mov
mov
jge
sbb
inc
mov
mov
pushf
and
inc
aad
jmp
mov
aam
fmuls
mov
pop
stos
pop
test
fcmovb
lret
sbb
jp
or
addr16
push
cmc
lret
sub
ss
outsb
or
jne
fldl
pop
es
xlat
stos
data16
jge
fnsave
aas
cld
daa
dec
mov
mov
loop
add
lahf
mov
adc
dec
out
mov
and
sar
int3
mov
push
push
into
jbe
mov
mov
mov
pop
sti
mov
mov
dec
fmul
pop
and
mov
filds
sub
loop
addb
stos
ds
and
mov
jmp
ficoml
xchg
movsl
mov
cwtl
enter
mov
xor
stos
roll
jae
das
stos
cmc
jae
mov
pop
arpl
or
fmulp
js
aas
push
mov
xchg
sub
and
cmc
movsl
ret
out
loop
dec
and
push
sub
lret
scas
pop
sbb
xlat
aad
mov
rclb
jl
aam
mov
pop
faddl
les
push
push
mov
cmp
leave
in
loop
adc
clc
dec
xchg
scas
push
sub
movsb
mov
dec
mov
xor
push
mov
sub
aaa
mov
jmp
mull
mov
daa
or
xor
xchg
jp
ret
mov
mov
mov
mov
jbe
sbb
jecxz
rcrb
sbb
out
mov
sub
jnp
and
sbb
add
sbb
mov
shlb
cmp
xor
fsubs
out
pop
sbb
mov
fwait
je
jnp
mov
and
push
jb
sub
cmp
jnp
jno
or
or
pop
data16
jb
in
mov
or
stos
add
dec
out
incb
aaa
sub
cmovnp
insb
jbe
or
ds
imul
xchg
sbb
popf
add
hlt
cld
fs
inc
cs
adc
aas
insb
imul
test
dec
loopne
jne
mov
inc
and
dec
mov
and
pop
dec
push
sti
fstpl
lret
lea
fadd
jge
mov
mov
fiadds
dec
mov
dec
ja
shlb
out
cmp
cwtl
cli
test
jecxz
and
jo
mov
mov
int3
inc
mov
pop
ficoms
jp
sbb
sub
mov
test
xor
into
popa
stos
pop
lods
push
mov
out
mov
or
or
mov
inc
test
pop
xor
mov
push
hlt
cmc
pop
cmp
pop
pop
mov
leave
mov
jno
jl
test
pop
sti
jae
jbe
fnstsw
jno
popf
pop
xchg
push
xchg
xchg
mov
sbb
push
and
sbb
jp
test
sbb
or
jnp
mov
hlt
mov
pop
int
into
dec
loopne
call
lret
xor
jg
cld
cmovae
mov
stos
cli
test
mov
adc
dec
out
pop
cmp
repnz
push
jge
push
int
ret
adc
dec
cmc
push
loopne
and
push
inc
sbb
clc
fimuls
sub
dec
jb
shrl
fdivp
fsubs
cmp
mov
mov
not
dec
int3
mov
push
mov
xchg
inc
inc
xchg
stos
gs
sti
outsb
jmp
adc
daa
mov
and
cltd
cwtl
repz
dec
imul
jecxz
pop
cmp
ret
push
bound
jl
outsb
jns
jp
fisubrs
orb
mov
es
sub
xchg
iret
leave
test
gs
repz
or
mov
xor
dec
fisubl
mov
cmp
xchg
shl
dec
dec
and
lds
xchg
xchg
mov
push
insl
stc
xchg
or
pop
jg
xor
xor
adc
cmp
mov
dec
aaa
out
jp
add
lea
cltd
jo
js
test
push
mov
mov
add
mov
dec
jl
repnz
xor
xor
sahf
xchg
int
mov
stos
sub
xchg
pop
mov
jecxz
test
jo
in
sbb
in
in
mov
movsb
mov
pop
mov
int3
std
das
scas
mov
orl
xchg
lahf
jmp
sub
lahf
and
stc
mulb
mov
sbb
es
aam
mov
xchg
aaa
sbb
dec
ret
call
loopne
dec
addr16
sbb
or
lcall
add
add
cli
mov
je
cmp
or
aam
mov
or
mov
loop
or
push
movsl
push
push
test
rcrb
jae
les
inc
imul
inc
sub
mov
ret
das
mov
fstpt
push
push
pusha
iret
add
jns
push
pop
fs
mov
arpl
mov
icebp
cli
jg
cmp
sbb
pop
push
notl
scas
pop
mov
in
imul
push
push
sbb
popf
dec
cmp
ror
mov
mov
push
sub
cwtl
inc
push
xchg
pop
dec
dec
jnp
dec
js
popf
aad
adc
cmp
push
clc
pop
mov
out
or
or
dec
in
hlt
cli
jg
fmull
jg
push
in
int
or
leave
lea
cmp
dec
mov
lock
xchg
hlt
enter
lret
jle
shlb
data16
sub
push
dec
into
push
adc
jb
inc
mov
aad
andb
test
sbb
and
in
mov
sub
enter
dec
xchg
add
jmp
mov
jb
add
push
fsubp
xor
jae
cmpsl
popl
dec
dec
clc
mov
cltd
xlat
xchg
outsl
lods
mov
inc
sbb
dec
outsb
mov
mov
addr16
or
jg
ja
lds
inc
mov
add
jg
fists
mov
imul
jge
mov
jnp
and
xchg
xchg
scas
in
sub
mov
sbb
cmp
lock
les
add
fisttpll
lds
xor
lret
insb
ret
outsl
repnz
sbb
stos
sti
cmpsl
adc
and
and
in
jae
lods
mov
add
lret
inc
mov
jne
mov
addb
lret
cmp
test
rcrb
fwait
inc
xor
out
cmp
dec
jg
xor
lds
in
inc
mov
add
mov
or
inc
fimuls
sub
mov
xor
stc
loop
test
inc
rorb
xlat
test
add
sub
arpl
xor
sbb
xor
inc
pop
jnp
lret
imull
arpl
mov
das
xor
movsb
mov
mov
or
pop
ficoml
jbe
test
lods
js
movl
add
popf
jae
inc
pop
out
ja
sahf
in
fwait
sbb
add
inc
xchg
aaa
outsb
iret
lock
and
repz
mov
jg
add
and
cs
fstl
out
ds
lds
push
fisttpl
in
movd
dec
in
mov
push
leave
and
jl
or
lods
in
jnp
fdivrl
mov
xchg
out
or
xchg
fdivl
xchg
aas
pop
dec
int3
mov
fstpl
shlb
add
bound
inc
clc
sub
push
xlat
out
jns
inc
std
es
lret
jmp
mov
sbb
lahf
xchg
xchg
stos
pop
xchg
cmp
out
xchg
ja
imul
mov
cmp
ss
pop
mov
mov
mov
test
leave
div
mov
push
xorb
adc
mov
lea
xchg
mov
and
scas
xchg
or
popf
fnsave
es
push
jno
cmp
lcall
or
lods
and
mov
pop
dec
ds
xor
stc
mov
mov
xchg
jo
in
in
int3
xchg
and
mov
lea
xor
inc
mov
enter
out
fstpt
scas
add
enter
mov
cld
fwait
mov
rep
jl
pop
das
mov
scas
jl
or
insl
popw
push
inc
push
daa
addl
rorl
adc
out
add
cmp
inc
inc
ljmp
ret
cmp
sbb
dec
addr16
cmp
lock
mov
ret
add
or
jp
test
lods
cwtl
pop
sub
pushf
sti
dec
sbb
xchg
cltd
xor
adc
jg
mov
insl
stc
xchg
sbb
and
add
es
xchg
cld
mov
push
leave
mov
mov
loope
cs
fcomp
mov
cwtl
cs
push
mov
inc
xchg
inc
imul
mov
sbb
xchg
ficomps
sub
and
push
sub
rol
inc
sbb
push
add
sbb
cmp
daa
dec
dec
imul
iret
sub
aad
add
lret
icebp
lcall
push
movq
push
sti
lcall
popa
clc
int3
cli
mov
popw
loopne
mov
fldenv
push
lcall
and
shl
mov
pop
fists
pop
jb
and
sbb
iret
lock
pusha
and
leave
pushf
mov
inc
test
nop
fwait
sub
and
daa
enter
into
movsb
jne
add
stos
xor
in
fisubrl
fnsave
pop
xor
mov
nop
out
push
pop
shll
sbb
push
call
out
cwtl
icebp
sbb
test
fidivrs
cmpl
fwait
mov
xor
lods
dec
push
daa
sub
cmp
adc
or
mov
in
idivl
xchg
adc
imul
mov
push
fucompp
popf
out
cmp
lods
cmpsl
aaa
jg
stos
jl
imul
sub
jp
add
lea
cwtl
sbb
scas
mov
notb
xor
outsb
dec
je
mov
mov
sbb
dec
sti
and
addl
inc
xor
sbb
sbb
stos
sbb
jne
scas
pop
and
inc
js
fstl
ret
add
aaa
sbb
aad
das
sbb
int
sub
pusha
xchg
sbb
and
add
mov
mov
cltd
movsb
cmc
add
lcall
xchg
stc
push
roll
pop
sub
jg
push
jmp
cmp
stos
push
decl
fldenv
xor
icebp
push
xchg
add
pop
aaa
sub
cmp
push
push
cs
mov
shl
mov
sbb
cli
bt
or
lods
adc
jno
add
dec
or
mov
mov
enter
cmp
push
mov
in
jmp
jne
jae
or
xor
pop
repnz
test
sbb
pop
imul
pop
xor
sub
dec
xor
xchg
cltd
or
sbb
out
cmp
nop
fdivrl
jecxz
push
mov
inc
adc
stos
cmc
insl
ljmp
loop
or
push
cld
fcompl
pusha
cld
mov
jmp
mov
push
les
xor
aas
fists
bound
and
movsl
push
out
int3
jnp
inc
addr16
mov
stos
dec
and
sub
sbb
push
xor
sahf
faddl
cld
jnp
mov
cmp
mov
xchg
insb
xchg
add
dec
inc
addl
out
cmp
icebp
jmp
mov
sub
dec
inc
inc
daa
out
push
lret
push
pop
icebp
je
stos
stos
into
dec
sbb
aas
es
mov
pop
andl
mov
hlt
pop
push
in
or
int
fidivrs
bound
pop
popa
adc
daa
sub
and
iret
std
pop
faddl
mov
cmp
pop
sub
mov
mov
or
jnp
aaa
push
sbb
cmp
dec
cmp
mov
sbb
adc
jmp
or
fdivl
mov
cli
js
repz
test
mov
cmp
push
ss
jl
iret
push
lods
xor
into
movd
mov
aad
cmc
mov
dec
pushf
loope
jbe
add
cmpsb
rcll
daa
cld
push
cmp
push
arpl
pop
sbb
aad
mov
mov
dec
aad
add
and
or
add
and
sub
lcall
repnz
push
jno
fsubrs
test
rcl
pop
or
adc
fstpt
gs
mov
pop
mov
mov
js
xlat
xorl
rorb
ret
mov
mov
fisubrs
xrelease
xchg
insl
mov
cmp
jp
test
scas
mov
sbb
adc
dec
xor
leave
addb
mov
xchg
aad
mov
fcoms
pop
add
mov
mov
std
pop
sarb
xchg
mov
mov
mov
sub
addl
sbb
mov
add
das
scas
pop
mov
add
loope
cmp
mov
jbe
rcll
cmp
jecxz
jb
and
mov
stos
cmp
cmp
cs
and
xchg
adc
pop
addb
cltd
jg
cs
clc
inc
fwait
loop
aaa
test
cs
cmp
xchg
sub
push
mov
mov
scas
stos
dec
out
mov
iret
jge
fadds
daa
adc
test
mov
sahf
mov
dec
dec
jg
lock
push
or
push
push
pop
xchg
repz
sbb
mov
dec
das
pop
mov
mov
outsl
xchg
sub
aas
cmp
outsl
ret
inc
test
mov
mov
or
mov
mov
adc
outsl
pusha
call
push
shl
pop
xchg
clc
sbbl
xchg
fwait
hlt
sbb
cli
jno,pn
push
outsb
pop
push
dec
lods
movsl
pop
andl
mov
cld
xor
pop
inc
pop
jae
mov
or
sbb
ljmp
xorl
mov
cmpsl
ret
jl
mov
xchg
fs
add
fbld
push
mov
repz
xchg
adc
cmpsb
pcmpgtd
dec
push
stc
orb
aaa
adc
or
or
dec
adc
fmull
and
cli
dec
xchg
dec
loope
push
push
cwtl
pop
add
sub
adc
popf
ljmp
xchg
lret
test
mov
aad
shll
insb
scas
xlat
std
neg
add
xchg
loope
and
mov
fidivrs
jp
movsl
sbbl
imul
jl
inc
int3
imul
or
pusha
push
xor
sbbb
ja
lods
jle
jg
mov
adc
dec
xchg
scas
into
sahf
fcoms
mov
testb
pop
mov
xchg
pop
lret
aaa
xor
ss
jnp
lods
cmp
shrb
mov
cmpsb
das
jle
cmp
cmp
neg
pop
test
pop
sahf
mov
sub
inc
out
xor
push
aaa
push
add
or
jae
mov
mov
jecxz
mov
xchg
pop
push
push
movsl
xor
pop
mul
dec
ljmp
add
repz
cmpsl
cmp
aaa
cmpsb
dec
pop
cmp
sbb
mov
les
mov
xchg
cmp
ss
and
mov
lret
jl
mov
ljmp
andl
jge
xchg
hlt
shlb
repz
adc
dec
fstl
daa
inc
into
mov
push
push
dec
cwtl
xchg
mov
pop
fsubp
xor
sub
mov
cmp
sub
dec
out
jne
xchg
inc
cs
sub
insb
repnz
arpl
cmpsl
gs
mov
imul
ret
sbb
out
das
test
fmuls
or
or
push
mov
mov
icebp
mov
pop
out
push
mov
inc
pop
fld
add
test
movsl
xor
dec
shrb
popa
inc
in
fdivrl
imul
add
ret
push
jp
xor
idivl
scas
test
fsts
sahf
dec
push
dec
push
sub
pop
pop
or
shlb
cmp
pop
xchg
and
add
mov
popf
mov
adc
push
jmp
dec
popa
fs
xchg
pusha
addr16
lods
mov
xchg
lock
pop
inc
clc
mov
pusha
pusha
lods
dec
inc
iret
xchg
std
inc
into
lock
fwait
aam
aam
cwtl
rcrb
inc
add
fisubrl
ret
inc
test
leave
sub
push
js
dec
es
daa
cmp
xchg
ds
cmp
jmp
fsubl
data16
pop
xchg
jne
rclb
pop
rolb
cmp
adc
pusha
sub
adc
cli
imul
jecxz
lds
adc
lahf
inc
mov
mov
jne
lods
push
and
dec
mov
jmp
and
and
sarb
jle
rcr
xchg
xor
mov
dec
push
xchg
cmp
push
mov
fidivrl
cs
jmp
pop
sub
inc
outsl
push
ljmp
jns
add
jns
cmp
enter
sbb
fwait
rcr
inc
push
jne
sbb
push
cltd
cmp
mov
shrb
call
add
lcall
inc
cmp
jmp
call
es
fsubs
or
decb
dec
icebp
test
jmp
add
add
shll
pushl
rolb
mov
in
mov
pop
arpl
js
loope
and
sti
sbb
dec
insl
mov
out
xchg
insb
rcl
adc
mov
cmp
scas
cmp
mov
mov
fldcw
sbb
lahf
lret
or
outsb
jl
movsb
xchg
and
int3
aam
mov
sahf
and
cmp
pop
and
xchg
cltd
imul
enter
sbb
in
loop
loopne
inc
push
pop
sub
out
sbb
shrl
push
sub
sbb
jae
mov
pop
inc
das
sub
adc
cs
dec
out
das
mov
xor
cmp
mov
sbb
dec
push
outsb
dec
in
push
movsl
add
sbb
sbb
xchg
mov
push
enter
stc
insl
xor
jg
leave
ljmp
cmp
pop
pop
popf
cltd
repnz
mov
mov
sub
mov
mov
cmpb
call
xor
mov
sti
fidivrl
leave
inc
test
arpl
aam
xchg
mov
add
psubsb
sahf
xor
negl
cwtl
cmp
sbb
jno
stos
xchg
push
fidivrs
in
out
or
mov
push
sahf
dec
and
orl
jge
andb
test
push
icebp
adc
and
cwtl
cmc
and
outsl
out
mov
enter
mov
mov
lret
lcall
add
xor
dec
sub
in
js
std
ficomps
mov
dec
xor
add
xor
int3
mov
out
push
adc
mov
sub
cmpsl
lea
adc
test
and
icebp
test
jecxz
cmp
icebp
jae
mov
cmpsl
loope
shrb
xchg
mov
ja
xchg
xchg
leave
jb
cmp
aaa
sti
fs
adc
std
xchg
lods
mov
sbb
nop
lock
lods
hlt
mov
sbb
neg
test
aam
sub
xchg
dec
std
loope
mov
lea
sbb
lds
in
or
jo
dec
sub
clc
xor
fwait
inc
leave
data16
jnp
in
repnz
lcall
clc
sub
and
cmp
dec
inc
xchg
pop
push
pop
mov
jp
jno
popa
jbe
mov
ficomps
push
rolb
mov
sbb
shlb
sub
pop
loope
outsb
or
sbb
movsl
cmp
jmp
xor
sbb
ljmp
mov
push
jmp
push
pop
loope
fwait
sbbb
and
inc
pop
cli
cwtl
push
mov
subl
sahf
dec
mov
mov
sub
pop
mov
lahf
je
mov
aam
cs
cmc
pop
mov
cwtl
orl
sbb
cmp
jae
dec
das
out
cwtl
sbb
mov
leave
mov
push
ljmp
lret
pusha
sub
sub
dec
and
and
ficoml
xchg
pop
adc
js
jb
mov
add
ret
adc
test
sti
nop
cmpsb
mov
test
movsl
xor
jl
pop
jl
inc
add
ss
and
xchg
fildll
clc
insb
or
cmp
xor
pop
cld
insb
xor
inc
mov
ja
loopne
cs
push
or
mov
push
cmpsl
inc
ja
jo
mov
and
sub
repz
pop
idivb
lods
std
scas
cmpsb
xchg
push
pop
mov
std
xchg
das
in
sti
add
jno
mov
mov
xchg
notl
dec
sbbb
adc
adcl
xor
andl
pop
bound
cmpsb
dec
jae
push
pop
arpl
out
stos
insl
adc
jbe
mov
or
loopne
cmc
adc
push
mov
aad
imul
jl
mov
aas
inc
stos
jne
jge
sti
lret
adc
mov
cmp
repnz
leave
or
lods
stos
or
pop
add
jns
xchg
lock
pushf
xchg
dec
push
bound
iret
shr
mov
jo
jns
popa
fdivrs
ja
push
shlb
dec
pop
adcb
pop
scas
mov
jo
test
mov
jb
push
adc
mov
xlat
lahf
sbb
gs
sub
std
sub
and
mov
movsl
fisubl
hlt
lock
jo
jns
dec
or
out
jg
mov
int
mov
push
scas
sbb
pusha
test
cld
sub
push
cmp
sub
call
inc
movsb
jmp
test
mov
ret
scas
test
test
in
mov
out
scas
mov
mov
jae
add
mov
inc
aad
sarb
adc
insb
pop
lret
add
jbe
lcall
int
mov
dec
xor
scas
lret
adc
xor
jge
inc
dec
into
insl
ret
data16
int3
sub
shl
fidivs
mov
bnd
rclb
add
nop
ffree
xchg
sbb
push
jo
and
push
xlat
pusha
sub
enter
push
xor
les
adc
imul
and
packssdw
subb
jmp
loop
es
enter
inc
cli
pop
mov
push
xchg
movsb
push
mov
scas
jae
add
clc
mov
mov
repz
xor
mov
mov
repnz
lretw
jle
push
inc
pop
xor
jno
and
mov
cmp
cmp
andb
add
pop
lods
xor
cmp
cmpsb
pop
fidivrs
xchg
loopne
ss
sahf
fs
add
fmull
ja
cmp
jge
fdivl
adc
mov
adcb
or
cmp
outsb
mov
adc
add
pop
push
std
xlat
mov
movsb
cmpsl
mov
adc
inc
jge
mov
mov
js
leave
mov
mov
aaa
lock
mov
sbb
mov
andl
or
les
xor
and
sbbl
addr16
dec
clc
xchg
sbb
mov
mov
ficompl
and
xchg
rcll
inc
sbb
fsub
or
inc
cmp
fwait
jbe
pop
popa
scas
cmp
jle
xchg
lock
jns
sbb
add
xor
mov
pop
or
es
inc
mov
loope
insb
ds
sbb
xor
mov
cmp
add
pop
pop
sub
xorl
xchg
daa
popf
pop
sbb
int3
imul
inc
rcr
sub
icebp
push
sub
in
mov
movsb
rorl
icebp
sbb
jp
insl
scas
push
mov
and
and
mov
or
sbb
lds
sub
xor
jne
sbb
hlt
daa
ret
cltd
or
pop
mov
in
mov
cmp
loope
pop
xchg
cld
xor
mov
pop
mov
jns
xor
or
fistpll
lcall
sbb
add
pop
mov
pop
out
sub
mov
sbb
fstpl
ret
push
mov
cli
enter
mov
cmc
pop
es
add
outsb
lock
and
fstps
les
xlat
nop
xor
mov
aam
add
push
int
das
add
add
pop
jns
jbe
adc
enter
and
fs
int
sbb
mov
mov
into
cmc
stc
mov
mov
push
insl
es
inc
push
outsb
fldenv
add
nop
jae
inc
scas
in
cmpsl
pusha
push
xchg
inc
mov
inc
lock
cmpsl
loopne
dec
idivl
pop
add
xchg
mov
aas
aaa
inc
jae
mov
pop
lcall
loope
scas
inc
adc
fisttpl
push
jge
sbb
pop
rcrb
and
inc
out
mov
push
pop
or
xchg
inc
add
stos
mov
cwtl
fbstp
clc
stos
mov
rcr
sbb
lret
inc
popa
call
adcl
fcoml
mov
push
xor
ss
insl
lret
in
xchg
mov
icebp
push
dec
in
popf
fucomi
push
pop
dec
sub
jle
ret
dec
jmp
pusha
dec
into
icebp
pop
xchg
in
test
arpl
sbb
pop
das
inc
mov
jl
repnz
cmp
mov
popa
adc
dec
xchg
mov
and
sbb
cmp
inc
das
insl
sub
gs
xor
cmpsl
test
out
sbb
push
mov
insb
shlb
cs
lret
loop
jge
inc
add
xchg
and
test
repz
jnp
cmc
mov
sub
lock
fwait
xchg
sub
pusha
lods
out
xor
adc
test
pop
out
or
inc
fcompl
lock
rcll
shrb
mov
push
scas
xor
out
push
or
xchg
stc
pop
mov
js
inc
lret
test
jnp
sub
lret
pushf
mull
adc
mov
jae
jecxz
ret
loopne
rcll
gs
adc
mov
call
push
testb
mov
xchg
dec
mov
jl
xor
repnz
pop
sahf
jg
mov
nop
dec
or
or
push
jge
sbb
dec
loop
sbb
add
pop
dec
jns
mov
loope
push
aad
inc
add
inc
leave
pop
inc
das
mov
pushf
mov
int3
or
stos
inc
push
repz
addl
mov
pop
fdivrl
lods
ds
loop
out
mov
test
xlat
lds
enter
roll
mov
mov
rolb
ret
sub
mov
jl
mov
xor
mov
cltd
adcb
fsubp
pop
jnp
popa
dec
icebp
adc
or
test
lods
xor
das
ret
loope,pn
mov
xchg
mov
xlat
push
dec
lahf
arpl
xor
inc
mov
jge
mov
inc
dec
rclb
mov
icebp
push
negl
pop
sahf
outsl
pop
lret
inc
jle
sbb
mov
mov
cmp
into
ljmp
sti
mov
sti
inc
mov
shl
imul
shl
pop
sti
mov
lock
xchg
adc
lock
cmp
das
push
rcrb
scas
push
mov
test
shl
es
inc
xor
xchg
xchg
pusha
cltd
xchg
in
call
mov
fnstsw
push
das
xchg
pop
sti
and
pop
xchg
jmp
stc
icebp
lods
lret
imul
or
push
js
mov
sub
insl
pop
repz
cmp
test
push
das
lods
ficoml
lret
mov
insb
cmp
jne
mov
mov
jmp
sub
pop
gs
push
into
inc
les
fldenv
sbbl
ja
pusha
mov
hlt
and
int
lock
data16
or
push
and
repnz
add
sbb
or
dec
jbe
jne
xbegin
or
in
push
jl
jmp
push
iret
xor
sbb
dec
cmc
loopne
hlt
test
xchg
jmp
sub
int
mov
in
or
push
loope
lcall
push
sub
jp
jns
dec
sub
das
jl
jo
std
std
mov
xchg
push
nop
pop
imul
lods
mov
clc
mov
xchg
sub
in
mov
cld
andb
mov
fs
movsl
lcall
insl
cwtl
loopne
push
jg
imul
or
pop
movsb
popa
and
cmpsb
push
sub
push
js
jle
sub
fdivrs
lret
mov
and
inc
and
fcmovu
xchg
jmp
mov
push
mull
loop
aad
mov
shl
jmp
sub
mov
test
xchg
roll
fnsave
pop
pop
cmp
mov
mov
xor
lret
mov
movb
imul
pop
inc
cmp
dec
pop
pushl
pop
xchg
mov
out
das
cltd
xchg
xchg
mov
insb
dec
loopne
rolb
xor
sub
sub
in
fs
push
in
bound
and
push
leave
std
aad
adc
adc
jno
jp
or
leave
adc
sub
add
imul
or
shl
pop
xchg
mov
inc
xor
popa
addr16
or
lods
adc
js
aad
fldcw
ljmp
repnz
stos
dec
rcl
pop
outsb
mov
mov
dec
fldt
outsl
inc
in
xsha256
cmpsb
shlb
sub
ret
and
lods
data16
cwtl
aad
daa
mov
pop
lahf
mov
cmpsb
loope
or
jmp
jle
movsb
les
and
inc
arpl
mov
cmp
dec
sbb
lods
cld
jbe
fstl
dec
cmp
cmc
or
fnsave
mov
lcall
in
aad
loopne
pop
mov
stc
cmp
jae
fidivl
mov
and
mov
sub
lcall
dec
sbb
scas
lea
mov
add
and
lock
jbe
fimuls
jne
fwait
push
mov
imulb
das
mov
push
cmpsl
ja
pop
cwtl
fs
aam
iret
adc
adc
xor
or
inc
xor
stos
xor
pop
jp
fimuls
jno
push
sbb
repnz
outsb
ss
add
mov
popf
outsl
sahf
sub
push
jge
jle
fistps
xchg
fdivrp
test
or
pop
sbb
xchg
xor
decb
lods
mov
cmpsl
ret
and
shlb
cmp
mov
jb
in
in
pusha
pop
arpl
mov
and
lret
push
pop
pop
jne
outsl
in
stos
cmp
or
sub
out
popf
int3
xchg
pop
or
and
ljmp
and
or
out
imul
pop
mov
sub
pop
in
or
dec
rcrb
adc
jl,pt
mov
fimull
testb
xchg
xchg
mov
repz
lds
sbb
pop
int3
je
pop
push
or
push
jae
sti
jge
in
add
sbb
inc
cmp
jno
enter
into
and
pop
push
and
imul
pop
test
inc
scas
aad
push
push
pop
dec
in
loopne
out
loope
adc
and
bound
mov
stc
push
out
xor
gs
scas
cmp
cmp
andl
imul
in
sub
inc
inc
enter
jge
dec
xor
cmp
jno
cmpsb
sbb
mov
enterw
adc
andb
lods
mov
or
mov
js
push
shrl
xchg
fiadds
dec
cmp
sbb
call
dec
mov
add
mov
push
fsubrl
xchg
mov
adc
std
xchg
jb
mov
out
mov
rol
cmp
shl
and
lock
lods
jbe
inc
xchg
mov
outsb
inc
sbb
bswap
fcmove
adc
ja
movswl
pop
pop
popf
cmpl
xchg
or
jb
pop
mov
sub
mov
imul
xor
jl
test
mov
test
inc
or
mov
pop
jl
enter
push
call
arpl
icebp
pop
idivb
pop
jp
xchg
adc
add
and
pop
pop
fdivs
out
ds
test
cli
xor
shl
sbb
fmuls
mov
repz
cmp
push
lret
and
lds
bound
xchg
sub
push
loopne
mov
mov
leave
or
cld
xchg
xchg
mov
dec
fbld
inc
pop
loope
mov
leave
adcl
pushf
sub
leave
mov
xchg
xchg
test
mov
push
xor
movsl
imul
sbb
lods
scas
leave
and
in
mov
mov
loope
mov
sti
clc
cmove
addl
adc
jns
out
sub
gs
aam
loopne
fwait
add
fistpl
jbe
incb
icebp
popa
test
sbbb
adcl
out
aaa
dec
repz
dec
roll
and
xor
mov
xor
pusha
adc
ljmp
test
test
jg
addr16
ret
inc
mov
cmpsl
pop
adc
sbb
inc
out
jne
out
push
mov
test
jp
mov
xchg
cwtl
pop
pop
sub
ret
lahf
mov
lret
int
push
xor
fwait
in
cld
push
mov
cmpsl
add
sub
jae
fcoms
mov
jle
add
pop
lds
jl
in
outsb
cli
mov
xlat
pop
insl
fs
mov
into
sbb
shl
subl
xchg
jge
aad
or
or
mov
push
mov
inc
ljmp
dec
sub
das
ljmp
mov
bound
push
imul
cltd
sbb
mov
mov
add
shll
test
ljmp
push
jo
sahf
mov
loopne
lds
mov
cmp
mov
jne
rorl
and
lret
negb
leave
cmpsl
fnstenv
jp
insb
inc
jmp
push
xchg
cmp
push
fs
lret
rcrl
sti
or
rol
and
push
pop
jnp
pop
aad
leave
adc
movsl
add
inc
lock
rolb
jae
clc
pop
mov
ret
sub
dec
push
xor
mov
mov
mov
lock
fsubl
xor
and
sub
icebp
jae
icebp
pop
pusha
ret
cmc
popa
fwait
cmp
dec
jns
imul
mov
mul
or
inc
lret
ljmp
ret
jnp
sub
ret
cs
out
addr16
aas
dec
xor
sub
sbb
mov
sbb
pop
sub
imul
lods
lea
cmpsl
insl
je
int
add
iret
int3
xchg
scas
mov
sarb
push
seta
ret
or
dec
pop
adc
jg
jg
fwait
jp
lea
out
mov
or
pop
cltd
mov
mov
pop
or
mov
inc
xchg
mov
mov
lds
rorl
pop
mov
xchg
in
sub
push
mov
or
mov
cmc
mov
in
ds
sti
adc
jo
ficoms
imul
test
loop
sbbb
in
addl
movsl
mov
jns
mov
dec
test
push
mov
lock
jmp
subb
and
or
imul
aas
dec
push
imul
cmp
shrl
test
dec
out
pop
or
jae
in
dec
stos
xchg
cs
data16
cmp
push
and
stos
rolb
into
xchg
dec
sbb
and
xchg
jle
add
sub
lret
mov
aad
std
shll
shll
ret
push
jbe
mov
sbb
mov
xor
imulb
insl
xchg
xchg
xchg
cmpsl
repz
mov
cmpsb
cmp
or
fstpt
mov
inc
push
pop
adc
sub
and
adc
clc
pop
cs
test
lock
jo
test
inc
adc
shll
test
sbb
jbe
dec
xchg
ds
cmp
push
push
push
shlb
push
mov
addb
jae
nop
inc
dec
xor
sbb
push
pop
test
adc
pop
xchg
in
push
scas
xchg
jno
jno
adc
pop
pop
jle
hlt
pop
fisubrl
sbb
mov
inc
int
outsl
sub
mov
inc
movsb
push
popa
xchg
push
and
sbb
jae
fbld
mov
mov
daa
cs
mov
decl
frstor
lret
and
push
xor
xor
movsl
scas
out
aad
mov
adc
aaa
xor
push
push
push
pop
sbb
lcall
sub
xchg
cltd
in
arpl
insb
inc
faddl
movsb
mov
dec
fisttpl
pop
int3
cmp
inc
cmp
jmp
push
rorl
cmp
pop
cmp
test
lock
sub
lcall
arpl
cmpsb
push
cmpsb
repnz
cmpsb
jmp
jb
divl
jbe
imul
imul
mov
shlw
iret
sbb
cmp
xor
insl
add
dec
add
or
cli
jecxz
sbb
mov
inc
cltd
xor
in
mov
call
cmp
xchg
dec
cwtl
jbe
add
mov
int3
cli
dec
pop
mov
rorb
sbb
dec
inc
pop
sbb
std
das
std
sbb
insl
lret
xor
adc
push
jb
cltd
dec
or
pop
jb
dec
lret
jle
das
sub
sbb
loopne
scas
dec
mov
push
cwtl
or
sbbb
jno
clc
add
js
xchg
les
and
ficomps
sub
addr16
sbb
stos
sub
dec
retw
jae
push
js
cmp
cmp
push
mov
das
test
jmp
push
xchg
mov
test
scas
aad
or
cmpsl
sub
push
adc
mov
add
jns
or
shlb
mov
sub
out
loope
xor
hlt
add
push
sub
mov
sub
sbb
xlat
inc
mov
mov
jnp
arpl
pop
rcrl
sbb
mov
lahf
add
repz
hlt
rolb
lea
push
mov
jno
xor
sbb
fimuls
sbb
mov
lods
mov
subb
insb
jecxz
mov
cmc
xlat
adc
inc
adc
mov
xor
test
xor
inc
loope
pop
sub
adc
jmpw
pushl
mov
pop
adc
shll
sub
push
bound
push
jg
or
mov
and
dec
jne
je
push
xchg
shlb
cli
dec
js
test
fmulp
jl
cs
xor
cltd
dec
gs
jne
xchg
mov
adc
rolb
sbb
imul
ljmp
in
push
xlat
sub
shlb
pop
loop
pusha
and
outsl
mov
inc
shlb
imul
sahf
imul
pushf
nop
es
test
or
lcall
jae
idivl
pop
or
mov
outsb
push
loope
pop
into
cmpsl
outsb
sub
in
adc
or
sar
pop
aad
loope
out
jle
push
cli
mov
jp
in
xor
imul
jae
or
xor
int3
sahf
jnp
ficomps
cmp
dec
mov
mov
pop
filds
mov
insb
fistl
sbb
sub
sbb
cmpsb
loope
hlt
push
pop
mov
inc
pop
imul
push
sti
lods
cltd
test
sbb
mov
vmovntps
push
inc
das
add
pop
test
pop
leave
sbb
adc
cmc
in
insb
mov
dec
xchg
fsubrs
mov
js
push
sbb
lret
fdivr
popa
pop
sbb
sub
adc
push
xor
jo
pop
out
jb
xadd
mov
cmc
pop
pop
adc
notb
xchg
movsl
mov
and
push
popa
or
mov
lock
jo
mov
shlb
ljmp
cli
mov
lods
rolb
cmp
cmc
add
pop
arpl
jge
cmp
and
lods
inc
lock
arpl
push
ljmp
loop
xchg
and
nop
or
je
xchg
cs
and
cli
jmp
movsl
sbb
push
push
int3
daa
xchg
jge
jns
shll
xor
adcl
inc
stc
mov
outsb
sub
test
or
pushf
mov
sub
test
and
ret
add
pop
mov
mov
lea
shll
fstpl
test
hlt
pop
int3
push
icebp
pusha
out
mov
movsl
mov
lret
cwtl
fsubrs
jno
into
mov
pop
push
mov
xor
scas
fs
mov
lret
cmpsl
fucomip
lret
xchg
mov
pop
test
in
setns
sbb
and
clc
ljmp
repz
lock
clc
int3
xor
mov
enter
mov
cmp
lahf
push
xchg
mov
movsl
push
push
inc
xor
sti
test
in
or
xchg
jae
shrb
jns
sub
inc
and
test
or
add
mov
mov
lds
lds
ret
mov
cmpb
fcoml
stc
sub
xor
inc
or
inc
mov
test
jns
pop
aad
pop
inc
fstpl
notl
adc
mov
imul
sbb
cli
pop
stos
mov
add
and
jnp
xor
lret
aaa
mov
popf
dec
dec
jno
sbb
and
ja
mov
dec
mov
mov
jo
or
dec
mov
jmp
pushl
dec
jae
mov
push
add
mov
movsb
popa
out
sti
mov
pop
jmp
sbbb
cmp
fdivrl
ja
call
sub
cmp
mov
mov
out
mov
mov
lock
mov
rcr
daa
in
adc
jnp
jno
xchg
pop
jle
adc
and
sbb
jno
xor
xchg
lea
inc
cmp
sub
fisubs
fistpll
push
mov
xor
fcom
ljmp
add
pop
gs
insl
repnz
out
cmp
jbe
push
mov
fcoms
or
bnd
lret
xor
and
adc
ljmp
fistpl
add
and
dec
stos
adc
into
push
int
cmpsl
or
pop
loope
or
nop
inc
adc
pop
lcall
mov
mov
jnp
cmovae
add
inc
and
in
imul
popf
into
repz
sub
and
jecxz
fcompl
inc
gs
scas
push
pop
daa
stos
fs
fildll
scas
adc
std
push
mov
pop
and
in
dec
lock
popw
ja
jbe
xchg
jb
icebp
mov
in
data16
mov
insb
pop
aas
xchg
inc
inc
jnp
enter
pop
push
scas
sub
rcrl
movzwl
push
mov
bound
je
fsubs
pop
sub
xor
lock
js
jns
lahf
add
xor
lahf
dec
in
cmc
hlt
repnz
dec
popa
loopne
mov
xor
mov
lcall
add
add
rcrl
xchg
sbb
jb
inc
mov
stc
dec
repnz
add
and
mov
cmpsw
xchg
insl
inc
int
lock
addb
xor
dec
xor
mov
pop
fsubl
out
lods
inc
test
sub
dec
cmp
sbb
xchg
out
push
cmpsb
inc
mov
sbb
jne
adc
dec
xchg
cmp
divb
mov
leave
ljmp
pop
pop
lret
andb
sub
cmp
adc
mov
bound
dec
and
or
not
das
adc
pop
mov
sub
pop
scas
pop
daa
sub
mov
add
repnz
pop
nop
add
pusha
shlb
xchg
pop
cmp
xchg
ss
and
jbe
les
lea
pushf
aad
pushf
loop
fildll
dec
pop
xchg
les
push
inc
aam
sti
cmp
sub
hlt
sbb
mov
int3
int
cli
popf
mov
test
ret
fstps
outsl
sahf
mov
and
cli
rcl
stos
or
sub
arpl
and
scas
stc
das
sbb
testl
sbb
ss
pop
fnsave
add
cwtl
add
push
sub
scas
and
fcoml
lock
addr16
lret
call
push
imul
fsubrp
and
xchg
cmpsl
mov
cmp
jl
aaa
pop
mov
fists
sub
cld
mov
hlt
pop
or
ret
mov
mov
dec
add
inc
into
pushl
jne
pop
dec
sbb
cli
push
sbb
in
pop
in
ss
repz
add
mov
out
fwait
loop
jl
rcll
inc
mov
mov
or
scas
cmc
das
data16
dec
mov
xchg
inc
pop
arpl
loope
scas
xor
sahf
fbstp
and
pop
xchg
repnz
xorl
add
xchg
and
call
pop
mov
out
add
out
add
adc
jae
jmp
fnstenv
das
jae
dec
and
pusha
inc
stos
mov
and
ror
dec
dec
xchg
dec
jns
outsb
ss
sub
daa
or
and
lcall
mov
or
xchg
hlt
add
add
jge
lret
xchg
mov
inc
adc
movsb
sti
movb
test
inc
cld
mov
mov
sub
sbb
sub
and
in
pop
test
cmp
nop
mov
idivl
jp
scas
into
jbe
cld
jnp
sub
push
xor
push
jns
ret
pushf
sbb
int3
and
or
daa
cmp
je
insl
outsl
insl
xchg
stos
cmp
pop
mov
sub
shrl
sbb
shl
mov
in
lret
inc
ja
add
popa
adc
sub
sbb
jo
xchg
push
mov
xlat
mov
or
lds
lret
sub
xchg
mov
inc
out
push
mov
or
movsb
xchg
leave
aas
cltd
in
pop
in
adc
jge
fidivrl
movsb
stos
adc
ss
mov
repnz
pop
ds
mov
ret
dec
out
jg
cltd
adc
jle
aam
lods
xchg
ljmp
jb
imul
jb
jno
loope
ret
inc
jae
cmp
sarl
pop
xchg
rolb
js
jns
loope
jle
add
loope
loopne
imul
sbb
aaa
nop
ja
or
adc
xor
dec
std
jge
negl
mov
mov
test
sub
push
imul
ret
jg
xor
pop
imul
mov
jb
insb
and
pushf
pop
ja
xchg
jge
ljmp
jnp
sub
insb
or
pop
test
cli
xchg
fcoml
xchg
arpl
das
sbb
jo
dec
lods
sub
repnz
push
ret
cmpsb
jecxz
cmpsb
lods
push
insb
mov
ror
clc
xchg
xor
jo
cs
sbb
aaa
ss
mov
cli
inc
stos
je
mov
lods
dec
dec
mov
mov
fwait
adc
scas
cwtl
and
aam
lea
call
aad
jbe
mov
jns
jns
pop
adc
cmp
out
arpl
fistps
xor
adc
mov
into
jns
mov
out
pop
jne
cs
fcomp
push
aad
and
inc
ret
in
dec
sbb
and
stos
xchg
sub
adc
mov
fidivrl
cli
fwait
int3
nop
mov
orb
pop
ret
stos
mov
lcall
cmpsb
test
or
push
leave
pop
mov
cmpb
fcompl
mov
mov
cmp
pop
or
cmp
sub
sub
andl
or
cmp
sbb
rclb
push
movsb
xor
jnp
cli
and
xchg
jmp
sarb
testl
fdivrl
in
cmp
test
int3
or
pop
ret
pop
and
loopne
insl
out
adc
cmp
cld
lret
daa
push
imul
mov
mov
xchg
jmp
mov
or
test
pop
fldt
addb
movsl
scas
pop
mov
in
mov
cmc
cmpsl
in
fists
inc
jge
adc
lret
mov
mov
int3
inc
cltd
jp
mov
popf
mov
loope
inc
sbb
mov
out
outsb
shlb
in
sbb
lcall
xchg
dec
jmp
sbb
cmpsb
add
insl
mov
push
stos
int3
dec
dec
scas
lock
into
lea
push
inc
and
sahf
ljmp
add
push
cld
jae
pop
fld
or
nop
cs
mov
sub
daa
ss
roll
cmc
inc
gs
mov
shrl
mov
in
lahf
enter
lock
sti
adc
insl
sub
add
cld
pop
lahf
sub
cmp
inc
mov
pop
mov
lcall
jnp
pop
ds
mov
clc
es
or
add
xor
xchg
outsl
mov
arpl
mov
sub
fsubs
xlat
and
sbb
push
add
mov
std
dec
mov
sti
daa
jl
xchg
inc
and
lods
push
idivb
iret
jb
push
sub
dec
push
cmp
jo
cs
sar
imull
add
jecxz
outsl
mov
push
adc
jns
bound
sbb
cs
dec
adc
fsubl
mov
push
cmpsb
cmp
cli
rorl
int
aad
ss
js
add
mov
lret
shlb
mov
push
dec
or
and
cld
xor
lahf
mov
xorl
and
out
jmp
fwait
or
das
in
fs
bound
add
or
sub
dec
dec
cld
adcl
mov
pop
and
xor
dec
sub
mov
cmpsb
mov
mov
or
sti
mov
sarl
call
fidivrl
or
leave
repz
shrb
jle
or
out
xlat
xchg
fsubrl
les
in
jmp
push
mov
pinsrw
mov
jbe
adc
ret
adc
test
cmpsb
andl
stos
cwtl
mov
sbb
mov
out
jo
jns
cmpsw
ljmp
sub
inc
mov
dec
cmp
push
test
pusha
lds
aaa
xor
dec
pushf
mov
pop
adc
sbb
or
fs
jmp
add
fcoml
push
adc
sbb
xchg
push
shr
fsubp
nop
inc
jnp
xchg
shll
mov
jge
aaa
mov
ret
xor
inc
or
in
test
out
call
outsb
jecxz
in
das
mov
jne
lret
pop
lret
popa
bound
mov
dec
lea
and
mov
lods
jl,pn
cmp
xchg
inc
xchg
outsb
int3
js
in
movb
sbb
int
std
push
push
jno
dec
adc
jbe
mov
lcall
push
outsb
mov
mov
sti
fadd
in
xchg
xchg
ret
inc
jno
scas
fsubl
mov
push
ret
xor
leave
cltd
lock
aad
dec
sub
push
push
in
pop
cmp
into
xchg
dec
leave
leave
jmp
dec
idivl
rclb
iret
inc
dec
sbb
fdivrl
lds
test
cmp
roll
dec
jp
add
adc
xchg
outsb
lret
adc
dec
xor
popa
dec
jg
imul
lret
push
std
nop
mov
and
jecxz
pop
pop
das
shl
rcll
nop
cmp
adcl
idivl
dec
loopne
mov
icebp
xchg
xor
xor
inc
xchg
mov
out
int3
cld
fcos
sbb
fcoms
inc
or
pop
lcall
pop
push
add
cwtl
out
ret
mov
mov
push
scas
mov
mov
out
fcmovb
mov
mov
lock
ret
sub
faddl
jno
jo
imul
ss
adc
outsb
pop
add
pop
or
sbb
and
or
cwtl
movsl
mov
adc
xor
pushf
sbb
cmc
mov
test
mov
popa
jne
loope
ljmp
int3
mov
sahf
bound
adc
xchg
aad
hlt
fwait
mov
idivl
push
jb
aas
mov
sbb
push
js
ljmp
adc
dec
popf
push
aas
mov
clc
sahf
xor
adc
or
pop
int
sbb
imul
mov
mov
cmp
and
cmpsl
ljmp
adc
out
out
lods
loopne
push
push
dec
in
push
adc
sarl
push
sub
leave
mov
dec
adc
adc
jo
scas
movsb
in
mov
fwait
shlb
outsb
adc
dec
adc
test
test
cmp
and
xchg
outsb
andb
cs
scas
cld
test
nop
out
lock
movsb
jmp
inc
stos
jge
adc
loopne
inc
sbb
sbbl
testb
adc
mov
xchg
sbb
ret
testl
mov
sbb
aas
loopne
inc
insl
ret
mov
mov
xchg
jge
jnp
push
scas
jl
mov
test
ss
adc
ljmp
lds
and
cs
xor
lahf
mov
jne
jb
sub
jb
mov
push
sub
add
jl
int
cmp
in
popf
push
inc
sbb
jb
sbb
push
and
std
xchg
call
fldl
cltd
iret
std
jecxz
jecxz
movb
imul
lcall
and
or
lahf
das
push
scas
adc
jp
adc
sbb
sbb
arpl
mov
das
lock
lret
cmpsb
add
movsl
js
xor
inc
stos
icebp
aam
cmp
push
xor
push
fnstsw
or
shrl
aaa
jl
rcl
or
inc
lock
cld
and
ret
add
pop
fsubrl
mov
inc
das
lahf
add
nop
fwait
addl
addr16
addr16
push
or
jae
or
jle
pop
sub
push
hlt
mov
mov
and
adc
rclb
stos
sbb
jno
aam
fldt
lock
push
arpl
stos
mov
lods
inc
lret
xchg
and
push
sbb
push
lcall
addl
sbb
shlb
mov
inc
fsts
into
dec
push
xor
punpckhbw
cmpsl
scas
cmp
xchg
cmp
or
lock
push
daa
nop
dec
int3
mov
ret
cmovb
and
dec
jecxz
push
in
addr16
cltd
cmp
pop
sub
xchg
movsl
ljmp
xor
ja
xor
rorb
int
insb
test
loop
movsb
dec
ja
or
lcall
mov
cli
push
out
shrl
xchg
aaa
lret
xchg
mov
aam
popa
andb
mov
rcrl
push
push
sub
aas
mov
push
je
mov
dec
sub
pop
xlat
xchg
xchg
mov
addr16
loopne
adc
rcll
mov
xrelease
mov
rcrl
stos
fwait
jbe
xchg
movsb
push
push
cmp
add
scas
sbb
adcl
jge
mov
add
xchg
lock
adc
cmpl
add
xor
mov
fsubrs
rcll
jmp
fadd
aad
jo
negb
push
pushf
or
dec
hlt
aaa
lahf
lods
or
js
int3
test
mov
or
adc
cld
and
int3
mov
xchg
insb
mov
ljmp
mov
mov
cwtl
int
lahf
cmc
xor
mov
sbb
jno
cmp
lret
imul
inc
and
cmp
jns
aas
pusha
inc
fwait
out
adc
divb
push
into
js
repz
movsb
jmp
fwait
jae
setl
popa
stos
adc
mov
push
and
adc
push
and
sahf
in
pop
ret
inc
or
cmp
mov
stc
pop
lock
xchg
lea
in
add
mov
inc
mov
out
sahf
lcall
sahf
or
lcall
daa
imul
adc
xchg
mov
push
sub
xor
mov
mov
out
fisubs
mov
out
xchg
sub
pushf
xchg
add
inc
inc
pushf
xchg
jecxz
lock
and
cld
movsl
mov
inc
cmc
mov
fdivrp
adc
ficompl
jo
rcrl
dec
mov
add
bound
xor
in
inc
cmp
ds
jg
mov
loop
push
sbb
je
shrl
xor
xorl
push
movsb
fcomi
cmp
shll
movsl
xorb
sbb
stc
cltd
insl
fldl
hlt
fsubrl
gs
jmp
cmpb
jb
stos
int
imul
pop
dec
pop
scas
ja
or
pop
les
dec
mov
mov
cltd
add
in
jp
out
dec
sahf
lds
pop
jmp
enter
mov
pushf
ljmp
daa
enter
sbb
xor
inc
jmp
fs
dec
ss
and
nop
aaa
jl
push
dec
popl
push
cltd
pop
sbb
mov
std
mov
pop
push
pop
ss
bound
jle
inc
pop
xor
dec
sub
jmp
push
sti
mov
sti
xor
sbb
xchg
jp
xchg
lods
out
sbb
push
in
cwtl
decl
cmpsb
mov
add
popa
stos
mov
lock
cmp
das
rcrl
pop
push
push
test
xor
inc
add
inc
adc
mov
dec
shll
es
and
imul
lock
dec
or
jnp,pt
mov
and
xorl
inc
outsl
jb
mov
fsubs
push
xchg
sub
and
cmpsb
and
movsbl
mov
cmpsl
fsubp
inc
and
jb
add
dec
dec
cltd
test
test
enter
insl
jl
insl
out
cmpsb
lea
xchg
loop
push
hlt
adc
mov
aas
iret
imul
subb
sub
and
fistps
mov
mov
push
dec
sbb
xor
stos
mov
aad
mov
add
inc
mov
adc
aaa
sbbb
fucomip
mov
incb
ficompl
mov
mov
jae
xchg
lcall
test
xchg
ja
repz
xlat
aam
sti
cmpsb
sbb
mov
rcrb
mov
sub
inc
mov
pop
and
das
dec
dec
or
push
call
jle
xor
lods
xor
in
add
scas
mov
push
enter
test
mov
lea
cmp
pop
cmpsl
mov
stos
jmp
iret
jecxz
lods
or
nop
fistps
sbb
imul
lret
test
test
or
sbb
cmp
adc
inc
int
dec
andl
cltd
inc
adc
aad
xchg
push
pop
cltd
movsb
loop
mov
xor
scas
xchg
insl
lahf
or
sub
pop
and
out
or
ror
adc
fcoml
cs
xor
add
cmp
test
sub
sbb
inc
cmp
out
cmpsl
addr16
in
mov
pop
pop
data16
xchg
orb
sub
gs
popf
adc
xchg
lret
lds
sub
pop
lcall
cli
mov
mov
addl
inc
cwtl
lods
loopne
adc
mov
jl
ss
and
mov
jg,pt
jno
cmp
add
movsl
scas
jo
test
enter
xchg
ds
inc
dec
cmpsb
cmp
out
mov
scas
popf
cmp
or
dec
adc
out
addb
es
dec
xor
push
orb
popa
cs
inc
add
in
outsb
and
xlat
sub
bound
cmpsb
mov
rcl
fildl
das
dec
push
xor
jle
pop
push
repnz
outsl
arpl
xchg
mov
loop
push
adc
xchg
leave
adc
loop
out
movsb
imull
repz
repnz
xchg
xchg
in
repnz
xchg
outsb
push
cmc
inc
mov
pop
add
loope
xchg
cmp
cmp
mov
sbb
dec
inc
mov
insl
pushf
push
ljmp
push
in
bound
push
ret
rcr
jp
mov
inc
ja
jo
xchg
add
xchg
jmp
imul
insb
outsl
in
fldl
inc
decb
ficomps
in
insb
int3
and
fnstcw
aad
imul
adc
or
test
xchg
jge
dec
mov
or
adc
jnp
fimull
cltd
dec
push
sti
jno
push
xchg
iret
ds
int3
outsl
mov
dec
fs
dec
xor
jle
and
adc
xor
jp
pushl
repz
scas
lcall
mov
adc
lock
pusha
and
xor
xor
dec
mov
sarl
jbe
sti
adc
and
jge
sub
mov
pop
leave
sub
js
jle
xchg
arpl
pop
inc
clc
aaa
std
call
iret
or
aaa
dec
sbb
ja
jo
push
pop
jmp
out
push
addr16
mov
lods
lahf
lret
pop
fidivl
and
faddl
jmp
push
dec
rcll
clc
pop
stc
xchg
lret
cmp
and
mov
sbbb
dec
imul
call
movsb
and
je
cmp
cmp
jb
mov
int
push
and
mov
jae
mov
add
testl
cmc
aaa
adc
dec
sbb
jns
mov
add
addl
pop
lds
xchg
mov
push
inc
repnz
xor
jb
mov
sub
lret
daa
stc
mov
cs
dec
dec
add
icebp
mov
push
adc
shll
aas
lahf
xor
sbb
xor
out
cltd
aas
dec
xlat
or
scas
dec
inc
iret
cmp
xchg
lods
enter
ss
les
add
push
push
pusha
loop
dec
movsb
inc
cld
ficoms
sub
cltd
mov
test
adc
push
testb
pop
jp
mov
mov
dec
adc
dec
xchg
fxch
and
lahf
insb
push
dec
or
jnp
jae
aas
shrb
jno
add
mov
jne
xlat
imul
adc
dec
cmp
flds
out
fisttpl
cmp
roll
fbstp
mov
xchg
insl
and
iret
dec
lret
xlat
mov
mov
subl
mov
int
sub
aam
push
scas
daa
cwtl
jmp
fsts
fbstp
jnp
sub
nop
mov
push
out
repz
xchg
jmp
nop
popa
pop
push
xlat
stos
add
xor
jp
rorb
mov
add
jae
fdivs
shlb
xchg
pop
mov
mov
adc
inc
cltd
in
push
icebp
mov
or
fcompl
sub
inc
cmpb
adc
pop
dec
sbb
xchg
les
xchg
movsl
nop
dec
std
mov
cmc
rcrb
jno
in
arpl
sbb
into
or
add
cmpsl
inc
call
lds
popf
scas
push
addl
adc
sub
inc
orb
popa
in
jl
lods
repz
clc
pop
loopne
push
mov
fidivrs
dec
mov
scas
push
cwtl
pop
and
stos
das
shlb
dec
push
insl
lods
mov
movsl
or
loope
adc
push
inc
and
repz
mov
xchg
in
xchg
jno
push
inc
sti
arpl
adc
test
test
out
jns
scas
mov
mov
shr
sbb
in
aaa
mov
arpl
push
add
push
sti
popf
lea
sub
ljmp
adc
xor
stos
jns
iret
xor
scas
call
cmp
push
push
arpl
jo
ret
movl
dec
ret
nop
xchg
sbb
enter
cmp
je
mov
mov
add
outsl
insl
mov
cmp
stos
inc
fidivl
scas
or
dec
add
sbb
insl
test
les
and
push
es
push
stc
inc
pop
movsl
movsl
adc
sbb
js
sub
mov
rcrb
sbb
xor
subl
xchg
stc
into
mov
pinsrw
xchg
mov
cli
aam
mov
icebp
jnp
pushf
std
ror
add
movsb
xchg
idiv
orb
cmp
les
dec
sbb
pop
or
pop
out
mov
add
ret
es
imul
and
mov
ss
out
push
inc
jns
push
mov
dec
sub
cmp
outsl
scas
xchg
and
outsb
jne
push
ss
pmaxsw
sub
sbbb
outsl
xor
adc
push
mov
ficomps
dec
shl
or
mov
dec
incl
fsubrl
out
idivl
mov
jl
jo
push
cmp
fldt
xchg
pop
cli
mov
adc
out
push
pop
sbb
test
sbb
dec
arpl
loop
iret
clc
in
movsl
fsubp
mov
test
pop
ret
and
cli
sti
push
and
rol
je
adc
ficoml
mov
jle
jno
fcomps
xchg
push
test
or
lret
jmp
push
xchg
push
pop
inc
rcll
xor
popf
xchg
test
ja
pop
scas
inc
jbe
mov
into
testb
ss
add
insb
push
mov
lret
add
movsb
mov
jo
or
pop
sub
in
icebp
fisttps
mov
xchg
sti
pop
mov
xor
sbb
pop
inc
mov
out
jb
lahf
push
mov
cmc
gs
cmpsl
adc
repz
scas
or
pop
lea
outsl
dec
mov
es
imul
out
cmp
int3
push
lock
jnp
and
mov
or
xor
scas
mov
pop
mov
push
mov
inc
outsl
repz
loop
iret
push
push
adc
loopne
push
mov
leave
mov
xor
mov
scas
fs
sub
xor
mov
xor
mov
push
sub
sub
sub
enter
mov
mov
sbb
mov
sahf
mov
pushf
stc
lods
hlt
or
inc
push
pop
adc
adc
add
add
iret
xchg
sub
pop
lods
or
adcb
add
test
test
cmp
out
dec
in
push
pop
mov
insb
lcall
mov
test
push
pop
imul
jbe
sbb
mov
dec
sub
cmp
adc
jge
jbe
dec
lds
mov
repnz
adc
sbb
int
pop
mov
cmp
lods
fadds
mov
xor
scas
and
or
outsb
gs
mov
iret
push
stos
xlat
mov
and
mov
loopne
test
add
mov
mov
cmpsb
pop
dec
jae
dec
and
mulb
add
or
out
adc
add
shr
mov
ret
jno
adc
jmp
loop
sub
inc
fisubl
push
fdivs
fwait
mov
sub
mov
mov
icebp
es
sar
arpl
cmp
insl
std
sti
rcrl
jae
aad
push
scas
push
arpl
mov
aaa
lods
mul
sahf
pop
js
sti
jl
movb
sbb
daa
mov
pop
push
cmc
or
or
out
inc
and
popa
testb
inc
sub
fadds
mov
punpckldq
cmp
mov
dec
mov
push
fsubs
lcall
cltd
ss
in
push
xchg
mov
cwtl
outsl
aam
fsubs
sahf
js
jnp
jmp
lods
or
lret
aam
mov
rorb
dec
jae
and
int3
xchg
cmp
xor
cld
mov
lahf
and
jae
inc
pusha
in
jbe
inc
push
jns
xchg
imul
call
mov
mov
daa
xchg
dec
mov
dec
mov
repnz
inc
mov
mov
push
xchg
add
cmp
out
mov
sub
lds
clc
push
sub
or
sbb
int3
inc
out
hlt
andb
dec
stos
ljmp
xor
icebp
and
cmc
pushl
sub
mov
mov
js
imul
adc
mov
sbb
mov
ja
jne
or
cmc
pop
push
aas
sbb
pop
ucomiss
in
dec
or
push
popa
push
popa
xorb
roll
ret
dec
sbb
in
repz
adc
stos
loopne
stc
xchg
lods
ja
call
mov
mov
xchg
mov
roll
icebp
jnp
icebp
roll
xor
cmp
and
mov
mov
in
fadds
cmp
movsb
mov
jmp
imul
xchg
notb
push
or
cwtl
inc
mov
dec
imul
jo
popa
icebp
inc
nop
pop
xchg
mov
adc
inc
jge
pop
pop
cmp
call
xchg
addr16
aaa
mov
mov
in
insb
sarb
mov
xlat
pop
js
and
clc
push
ret
push
and
ficoml
sbb
inc
hlt
scas
out
sbb
clc
mov
push
fiaddl
xor
jle
pop
mov
jecxz
fisubl
lds
ret
xchg
dec
fcoml
xchg
dec
pop
arpl
xchg
or
ds
in
lea
out
lock
xchg
pop
push
aas
xchg
mov
out
lret
jl
ja
insl
inc
andb
popa
pusha
rcrl
in
or
mov
andps
mov
push
imul
fsubl
mov
ret
xchg
cmpsb
xchg
imul
call
loopne
int3
inc
scas
xchg
dec
ret
pusha
je
cli
lods
mov
pop
xor
stc
add
mov
aaa
xchg
mov
mov
into
aaa
int
mov
adc
xchg
outsb
addr16
fisubl
adc
loopne
out
or
daa
lea
mov
mov
mov
pop
inc
push
jns
lods
ljmp
cmpsb
into
jp
daa
mov
outsb
in
sti
dec
fisubrs
mov
adc
fistpl
cwtl
lods
push
inc
int3
add
movsl
out
lods
stos
inc
dec
push
sbb
inc
xchg
pop
sub
jl
push
push
out
cmp
fmul
call
mov
mov
ja
mov
jmp
movsb
movsb
xchg
push
pop
mov
or
push
sbb
unpckhps
push
les
inc
dec
imul
dec
mov
fistl
sub
mov
stc
inc
add
adc
add
mov
fiaddl
cld
icebp
faddp
stos
lock
js
push
insb
cmpsl
lea
add
leave
cmpsl
iret
xor
shll
mov
sbb
dec
xchg
lcall
ja
jmp
in
aas
fisubrl
fildll
sahf
mov
daa
inc
mov
cmpsl
push
insb
xor
repz
sub
pusha
jnp
mov
int
mov
jns
dec
dec
lahf
les
movsl
mov
push
xchg
push
push
dec
jmp
lods
add
fwait
mov
and
popa
test
push
insl
mov
rcrl
pushf
fdivrl
pop
icebp
adc
inc
mov
mov
lea
push
rolb
insl
test
adc
pop
xor
lahf
sbb
arpl
add
ja
mov
xchg
shrl
jecxz
fmuls
rol
aas
push
stos
cmp
adc
mov
movsb
cld
sub
stos
dec
scas
cs
hlt
dec
lahf
pop
je
add
jo
and
and
add
lock
sarl
ss
inc
add
push
jg
int
inc
repz
pop
dec
imul
mov
and
fildl
push
adc
or
je
cmp
xor
inc
popa
popf
adc
mov
lds
out
rorl
out
rorl
scas
xor
jns
fdivrl
outsl
insl
ret
inc
aas
xchg
daa
dec
stos
add
mov
mov
mov
pop
push
js
test
adc
mov
ljmp
das
push
fcomps
daa
add
xchg
daa
xchg
xor
enter
or
and
mov
jge
jo
pop
stos
call
popa
ljmp
dec
shlb
mov
and
xor
add
sub
xchg
dec
sbb
into
cmp
add
cmpsl
jo
out
scas
pushw
sub
fcmovu
cmp
call
mov
xchg
ficoml
or
xchg
lea
icebp
xchg
lods
lea
xchg
mov
cld
cmpl
out
cld
movl
jmp
pop
leave
adc
into
sbb
and
or
stc
dec
rcrl
mov
cmp
nop
and
and
push
cmpsl
clc
mov
sbb
aad
cmp
fsubr
pusha
mov
ja
or
ret
test
inc
pop
jle
jle
mov
cmp
xor
data16
and
sub
push
or
frstor
sbb
mov
xchg
pop
cmc
stos
sbb
lea
js
cli
std
dec
or
aaa
lcall
lahf
push
inc
xchg
mov
lahf
xor
and
mov
pusha
rcrb
gs
xchg
mov
mov
in
ret
xchg
je
js
out
add
mov
pop
mov
movsl
outsl
pop
or
and
popa
pop
jmp
scas
fldln2
fiadds
cmp
ja
dec
scas
and
insb
mov
scas
push
inc
sbb
pop
sbb
push
sbb
in
sbb
out
and
inc
inc
xchg
push
rorl
mov
add
or
inc
mov
xchg
loopne
jmp
pop
hlt
loope
les
adc
or
ss
adc
loopne
cmp
imul
bound
jg
jnp
out
gs
iret
push
pop
jne
ljmp
inc
leave
cmp
jne
mov
lcall
shlb
sbbb
lahf
mov
jb
pop
das
inc
mov
mov
or
push
jp
pushf
pushf
mov
fdivl
mov
nop
inc
ds
fsts
stos
xchg
popf
into
xor
cmc
xor
outsl
pusha
or
xchg
aas
pop
pushf
lods
push
mov
ja
repz
ret
lret
mov
adc
xor
inc
aaa
push
xchg
or
sub
or
outsb
js
outsb
mov
icebp
push
xor
sub
inc
add
push
ds
out
dec
outsl
cmp
movsl
inc
subl
dec
popa
out
pop
xchg
lock
sub
pushf
icebp
movsl
mov
test
and
pop
push
and
roll
mov
add
sbb
packssdw
jl,pt
and
cmpsb
jp
shlb
push
jns
movsl
into
pushf
sbb
and
test
mov
fimull
dec
decl
outsb
xlat
imul
sub
std
lahf
scas
fiadds
fistpll
jo
mov
add
sub
lret
inc
hlt
fisubrl
ret
xchg
jae
cmp
popf
mov
lds
cmpb
fists
jno
mov
cmp
out
rorb
fcmovb
bound
xchg
int3
psrlq
das
dec
adc
mov
push
mov
cwtl
push
mov
fdiv
rol
jae
sub
nop
sbb
cwtl
push
mov
stc
call
icebp
xchg
out
xchg
mov
jle
fwait
lock
rcrb
enter
mov
je
jp
mov
mov
jmp
out
inc
or
and
loopne
ret
pop
pop
aaa
repnz
jl
rorl
out
hlt
out
push
pinsrw
add
and
test
cmp
xchg
out
or
or
inc
push
dec
jge
cmc
push
addl
fdivr
mov
cmp
jg
cli
or
in
mov
adc
cmp
jno
xor
add
andl
sbb
jg
mov
or
je
inc
pop
into
pop
call
jo
scas
repnz
outsb
hlt
cmpsl
cmpsb
jp
mov
test
or
or
inc
testb
les
sbbb
xchg
orb
mov
hlt
bound
mov
or
pop
xlat
rclb
arpl
pop
fsubp
ss
push
insb
inc
jg
leave
test
cld
shl
jecxz
fs
xor
xor
loope
roll
push
pop
fdivrs
push
pushfw
inc
outsb
jmp
arpl
movsb
data16
fidivrs
push
xor
daa
inc
or
test
shlb
in
adc
test
mov
dec
cltd
dec
ja
xchg
test
es
lret
push
jns
repz
and
mov
sahf
addb
sarb
pusha
add
cmp
stos
jmp
xor
repz
push
lcall
js
ljmp
mov
cmp
mov
xchg
pop
push
push
shll
lret
mov
jb
xchg
mov
dec
sbb
jae
pop
dec
xor
mov
out
adc
shrl
jno
popa
pop
mov
cwtl
and
xor
mov
notl
es
outsb
idivb
xchg
xchg
push
dec
adc
push
jmp
add
cmp
sti
jno
xchg
xchg
add
jns
lock
mov
dec
out
repnz
shr
lret
pop
xchg
js
dec
and
mov
add
leave
cmc
divb
and
cmp
xor
mov
fisttpl
cmc
cltd
cmp
nop
sub
test
int3
cmp
push
xor
xchg
mov
fwait
loopne
xchg
add
setbe
insl
or
not
jge
out
lcall
sti
jmp
fdivr
pop
pop
dec
xchg
cmpsb
stc
push
jl
push
je
into
lret
insb
xchg
xor
lods
mov
jo
lret
or
xor
daa
mov
mov
cmc
int3
xor
pop
rcrl
push
int
jno
sbb
pop
dec
or
sbb
add
rcrb
lods
pop
andl
cmc
lods
cli
adcl
jecxz
mov
inc
pusha
int3
dec
pop
mov
jle
int
push
sti
fxtract
jmp
mov
xchg
mov
jbe
fdivrs
lods
fsubr
xchg
subb
xor
inc
outsl
push
mov
adc
push
fbstp
push
dec
mov
aam
ljmp
cmc
inc
cmp
inc
pop
push
xchg
and
inc
pop
sti
cmp
lock
pop
push
pushf
sbb
mov
stos
negl
dec
xchg
ss
mov
push
test
icebp
cmp
mov
cs
pusha
daa
stos
out
sbb
shlb
jb
sub
cs
ja,pt
mov
mov
or
mov
ds
adc
lret
xor
mov
cmp
pop
sub
pop
and
jmp
lret
cmp
test
pop
jmp
cs
jbe
mov
daa
pushf
cwtl
xchg
xchg
inc
dec
pushl
rcrl
sbb
lahf
scas
xchg
aas
xchg
movsb
push
sub
in
daa
sub
hlt
outsb
or
push
xlat
sub
inc
push
cmp
inc
int3
rorb
std
push
add
mov
sub
shrl
cmp
repnz
imul
xchg
or
xor
test
inc
jecxz
fldcw
insl
mov
pop
mov
and
sub
mov
lock
imul
test
adcl
test
les
add
push
mov
xchg
sub
sbb
push
scas
movsb
addr16
mov
es
test
xchg
or
inc
push
dec
adc
xchg
sub
adc
pushf
jl
xchg
aad
aad
push
cmc
sbb
add
inc
cmp
jnp
ds
mov
cmpb
sbbl
push
mov
sub
icebp
or
mov
push
insb
push
ficompl
pusha
push
jb
lret
cmp
mov
and
pusha
xlat
push
pop
xor
xchg
les
pop
add
movsl
je
add
lcall
or
enterw
lods
add
or
jmp
sbb
data16
adc
and
outsb
outsb
xchg
ret
xchg
pop
cmp
movl
in
mov
addr16
repnz
xchg
xor
iret
pusha
xchg
cli
cmp
push
inc
or
push
cmp
cmc
movsb
push
mov
lds
add
push
addr16
xor
aam
out
dec
mov
clc
xchg
cmp
adc
mov
out
and
clc
sub
xchg
stos
dec
adc
fcmovb
mov
xor
xor
jl
test
popf
inc
out
mov
decb
add
add
iret
lock
mov
ljmp
adc
fsubrl
lds
inc
cmp
ret
jge
cld
loope
pop
lahf
xchg
adc
out
in
adc
push
aam
add
xor
push
shll
rolb
cwtl
push
cmpsb
mov
ftst
insb
int
out
sub
xchg
popf
inc
sbb
mov
mov
nop
push
or
lahf
sbbb
outsl
dec
js
js
test
outsb
jl
and
cmp
cmp
push
into
jne
jo
push
pop
scas
daa
in
mov
stos
fdivs
xor
fs
mov
in
pop
loopne
adc
push
or
movsb
scas
xchg
roll
mov
mov
dec
cmp
stos
jl
mov
push
add
mov
mov
int
mov
and
dec
mov
dec
into
and
cld
andl
out
ljmp
pop
sti
push
sbb
adc
adc
repnz
cmp
xchg
hlt
xor
shrl
jb
scas
pop
fiadds
xor
out
xor
sbbb
sub
std
adc
jmp
hlt
jecxz
test
fstpt
std
cltd
sarl
movsb
lea
das
repz
xchg
stos
loop
or
sbb
pop
aaa
hlt
push
gs
fcmovb
cld
pop
imul
ss
stos
out
ljmp
xchg
lods
xchg
jnp
mov
jae
or
and
je
sbbb
jmp
daa
mov
cmpsb
bound
enter
xchg
pushf
cltd
xor
imul
rcr
sub
ds
in
idivb
aam
sbb
jmp
or
cmc
mov
lcall
or
int
adc
mov
mov
xor
adc
aas
aas
or
je
lock
leave
inc
fisubl
mov
insl
pop
loope
out
imul
or
cmp
cli
pop
mov
out
xchg
jbe
insl
aad
jb
mov
lock
ja
test
lea
xchg
mov
sbb
mov
and
cld
les
add
jg
test
sbb
loope
xor
pop
data16
jno
pushf
data16
outsb
push
pop
lret
dec
cld
rcll
aad
stos
adc
pop
scas
mov
mov
push
subb
cli
ret
repnz
mov
adc
ds
ret
loopne
pop
jl
push
mov
sub
addr16
cwtl
lea
int3
xlat
in
stos
outsb
ret
outsb
push
outsb
jae
out
mov
divl
lds
repnz
stc
xchg
lret
push
inc
add
mov
adc
and
int
bts
xor
shlb
jnp
jo
sti
xchg
scas
dec
cli
and
in
mov
ret
xor
js
loop
inc
xlat
popf
aad
pop
push
loop
stc
sub
hlt
shr
maxps
data16
pop
aam
mov
shr
sub
nop
testl
xchg
sub
jp
call
shrb
mov
stos
fiaddl
dec
jmp
dec
push
or
sbbl
pop
pop
dec
jle
js
test
adc
pop
push
into
sub
faddl
in
or
aam
sbb
dec
xor
xchg
insl
xor
jge
scas
mov
mov
adc
mov
and
stos
mov
shrb
lahf
sub
testl
mov
cmpb
loop
hlt
cs
in
mov
scas
pop
xchg
daa
loope
mov
jg
test
bound
nop
mov
cwtl
arpl
sub
pop
xchg
sub
fistpl
lret
repz
jmp
test
pop
sub
push
setb
ret
loop
rorb
adc
xchg
loop
ss
mov
mov
inc
dec
xchg
or
mov
leave
gs
mov
stos
int3
dec
add
sbb
push
fdivl
arpl
out
dec
inc
repnz
mov
fsubrl
xchg
push
cmp
mov
dec
leave
push
shlb
rcr
or
mov
int3
pop
jle
sahf
inc
jb
lock
bound
or
cltd
outsl
xor
daa
push
cs
in
mov
add
scas
loop
jae
stos
dec
movsb
mov
jne
dec
adc
repnz
lcall
cmp
repz
mov
push
fisttpll
shr
adc
and
dec
or
lea
mov
imul
outsb
arpl
dec
dec
insb
test
mov
jecxz
jnp
jmp
push
or
out
mov
testb
jp
pop
inc
jno
fisubrl
rorb
movsb
mov
jae
push
scas
cmp
cmp
pop
pop
loop
sub
xor
ret
in
xchg
cmp
stc
loop
cmp
cmp
xor
add
repnz
mov
push
xor
dec
stos
ret
sub
cmp
adc
lret
xor
push
add
jno
mov
aas
or
mov
sti
icebp
pop
ljmp
jmp
sbb
dec
movsl
jge
mov
jmp
lcall
xchg
lret
inc
repnz
ds
pop
add
flds
into
mov
imul
xchg
in
sbb
inc
mov
call
sub
loopne
lds
bound
ret
pushf
or
lods
cmp
shl
sahf
inc
aad
dec
cmpsl
outsb
sbb
jo
ja
sub
jg
sbb
push
outsb
loope
push
ljmp
lods
data16
mov
or
or
and
inc
mov
fiaddl
jp
test
int3
and
mov
inc
mov
rolb
push
inc
insl
and
scas
push
mov
fildll
sub
inc
xchg
loopne
les
inc
imul
fists
add
or
inc
mov
dec
mov
jnp
gs
jb
mov
insb
pusha
pop
popf
inc
fcomip
inc
sub
nop
cs
je
push
out
aaa
bound
out
data16
fcmovu
or
fxch
stc
push
xorb
xor
jmp
popf
ja
xchg
aas
arpl
roll
xchg
lahf
cmpsl
and
pop
ljmp
push
cltd
xchg
sbb
incl
mov
fs
mov
mov
inc
adc
mov
test
pushf
orb
in
fcompl
adc
lcall
or
sbb
push
mov
inc
dec
int
fdiv
mov
sbb
push
ds
mov
push
mov
cmpsb
mov
inc
add
stos
cmp
sub
cmp
mov
clc
outsl
pushf
mov
jmp
push
jo
jl
pop
mov
jbe
sbbl
cld
imul
out
jbe
add
cld
or
or
pushf
scas
negl
push
es
clc
cli
subl
push
add
into
inc
cmpsb
mov
test
enter
or
icebp
cmp
outsb
test
mull
xchg
cmpl
sbb
pop
push
aaa
ds
jp
jg
les
dec
mov
setle
mov
arpl
lock
mov
cli
pop
stos
imul
and
cwtl
outsb
add
out
mov
xor
dec
fstps
imul
pushf
inc
fcmovnu
cmp
pop
push
mov
cmc
outsl
addr16
mov
or
loop
incl
lock
mov
mov
lods
aaa
mov
cmp
notb
mov
popa
subb
sbb
popa
mov
shrl
test
and
in
xor
pop
adc
add
jo
sub
shll
push
mov
mov
dec
ja
sbb
lock
repz
stos
mov
sbb
adc
push
icebp
rcrl
ss
pop
jp
inc
push
adc
iret
mov
lock
adc
fidivrl
jno
push
cmpsl
xor
test
sbb
fisttpll
adc
ja
adc
mov
popf
adc
adc
mov
rolb
xor
out
js
cli
mov
flds
inc
sbb
jae
cmpsl
lods
adc
dec
mov
scas
imul
adc
or
inc
bound
aad
cltd
int3
imul
gs
xchg
iret
add
mov
mov
cmp
add
ds
insb
add
inc
pop
cmp
stos
out
cmpl
and
call
mov
sub
jno
fucomp
aas
test
sarl
pop
fldt
hlt
jle
shll
dec
lret
pop
or
push
push
ja
mov
mov
and
jmp
add
stos
subl
stos
dec
lret
adc
loopne
xchg
andb
mov
call
xlat
xor
adc
xchg
leave
sub
mov
cmp
rcrl
mov
add
pop
popa
adcl
mov
adc
dec
sub
push
jno
sub
mov
xchg
shll
hlt
not
jle
ret
out
js
cs
jbe
pushf
in
mov
jo
or
lret
mov
or
cmp
mov
cmp
lcall
outsb
mov
and
ds
sbb
or
pop
sub
and
inc
dec
and
shr
test
xchg
loope
push
aaa
cmp
sahf
add
sbb
leave
cmp
jl
cmpsb
je
sahf
mov
inc
or
out
dec
rcll
rolb
popa
dec
lcall
adc
pop
sbb
push
sub
scas
test
cs
push
push
pop
outsb
pop
jns
xor
stos
add
fadd
mov
push
mov
jne
loop
sahf
icebp
pop
dec
mov
or
add
into
test
jle
mov
movsbl
add
cmp
imul
add
je
loope,pt
frstor
push
test
popf
adc
xor
or
mov
rol
pop
fdivl
sub
imul
xchg
scas
xor
in
xchg
test
cs
mov
fwait
arpl
jp
jno
outsb
xor
adc
stc
jbe
or
repnz
in
and
cmp
add
leave
subl
ffreep
mov
je,pt
mov
in
sarl
mov
mov
cmp
pusha
cli
adc
aad
mov
fcmovne
sub
mov
out
jae
push
cmp
inc
cmc
test
mov
test
shll
push
iret
js
push
sbb
and
imul
adc
notb
sbb
ficompl
int3
std
mov
and
mov
inc
stos
cli
mov
push
stos
jge
jg
pusha
scas
mov
cmp
popa
mov
sub
push
lds
ffreep
cmp
movsl
sbb
xor
fldt
cmp
popf
ss
add
out
inc
outsb
jae
jb
push
sbb
xchg
jge
dec
lcall
addb
push
cmp
mov
fistpll
iret
pop
cmp
loop
xchg
dec
sub
add
fdivrl
mov
cld
sub
leave
into
test
inc
cmpsl
push
mov
mov
loop
jg
sub
push
xor
cmp
push
lock
or
mov
inc
mov
dec
ja
cmpsb
out
and
insl
stos
adc
xchg
xor
jecxz
and
cli
sbbb
sub
mov
jmp
cli
hlt
les
cld
notb
call
jne
fadd
adc
jo
lea
adc
in
clc
aad
pop
pop
or
ret
mov
cmp
push
mov
xor
decl
adc
out
lods
sub
sub
cmp
loopne
jno
push
inc
in
sub
aas
add
xchg
hlt
xchg
and
add
mov
push
jmp
inc
push
mov
and
loope
pop
mov
add
cmp
xor
jl
addb
dec
mov
mov
cld
movsb
pop
cmp
push
enter
add
mov
std
or
xor
je,pt
mov
pop
in
jnp
lea
dec
jbe
js
jecxz
mov
inc
jo
or
pop
mov
push
mov
lret
out
fnstenv
jl
mov
pop
jp
pop
je
cli
sbb
popa
test
mov
imul
mov
int
xor
jmp
push
adc
mov
mov
shlb
mov
sub
mov
pop
jp
testl
in
das
jmp
pop
dec
mov
imul
push
jmp
std
push
gs
out
ret
out
cmpsb
int3
cmp
xchg
add
jae
cmp
scas
mov
push
insl
push
jns
add
push
test
mov
cmp
movsl
popa
outsb
enter
in
fdivr
and
sti
adc
jne
cmpsb
sub
push
stos
imul
iret
inc
arpl
add
mov
daa
imul
xchg
mov
lds
insl
mov
cmpsl
cmp
push
fisttpl
arpl
jl
call
push
push
xchg
sbb
jns
arpl
bound
mov
adc
xor
xchg
sbb
cmp
pop
jge
imul
xor
test
les
sbb
stc
fwait
and
cmp
pop
add
lock
lea
leave
mov
jmp
push
pop
lea
add
inc
shl
repnz
adc
and
dec
adc
lock
inc
test
clc
movsl
out
push
dec
lock
push
adc
pop
pop
loopne
daa
dec
cld
cmc
cld
pop
pop
sbb
sub
inc
sbbb
neg
jge
sbb
dec
sbb
xchg
scas
mov
popf
scas
aaa
or
bound
dec
sbb
cltd
inc
aam
and
in
mov
ret
cs
test
test
sahf
jne
repnz
push
sbb
push
rorw
shrb
gs
pop
repz
push
jp
inc
jle
sbb
leave
lret
enter
mov
es
or
push
add
mov
and
and
arpl
jecxz
arpl
sub
push
arpl
je
les
daa
stos
sub
inc
pop
or
lods
test
push
mov
adc
xor
inc
out
xor
popf
cmp
stos
cmpsb
mov
ljmp
pop
add
repnz
popa
push
or
orl
xchg
mov
push
pop
sub
add
mov
iret
out
pop
inc
fidivl
shll
and
and
xchg
mov
lock
and
ds
in
lea
nop
scas
jmp
fmuls
pop
rcll
idivl
andb
fidivs
mov
mov
enter
es
rcl
push
push
add
push
pop
out
cmp
xor
cltd
scas
lock
cmp
mov
push
lds
imul
cld
sbb
nop
dec
dec
push
jmp
outsl
shrl
lret
or
jnp
cmpsl
pop
outsb
sub
decl
jbe
ja
mov
fucomp
adc
dec
sbb
repnz
stos
adc
pop
out
xchg
leave
ficoms
shll
shl
mov
dec
add
pop
add
sbb
aaa
xor
inc
outsb
push
jnp
les
lcall
popa
sub
sub
add
outsl
out
or
pop
pop
test
mov
das
lods
repz
shll
dec
push
jae
jb
cmp
pop
dec
push
ficoms
testb
mov
leave
push
scas
int
add
push
inc
fldenv
mov
pop
sbb
dec
icebp
sub
push
push
sahf
push
pop
or
jl
cmp
movsb
cli
insl
add
sub
out
mov
or
adc
xlat
out
aam
negb
mov
or
cmp
scas
xchg
mov
lock
pop
or
call
pop
lret
subl
mov
mov
jb,pt
sbb
scas
mov
scas
out
jne
fwait
lret
ret
adc
cwtl
adc
jnp
nop
inc
mov
cmp
mov
xor
rolb
add
je
sub
call
cmp
add
jmp
dec
stos
outsl
out
stos
add
ss
xchg
in
lret
mov
adc
cmpsl
inc
xor
wrmsr
fcmovnbe
aas
mov
nop
nop
lahf
repnz
mov
dec
addr16
mov
push
sub
mov
repnz
sub
aas
push
sahf
insb
push
pusha
cmpsl
inc
es
loop
lahf
imul
cld
cwtl
pop
cmp
call
or
inc
imul
xor
and
loopne
pop
int3
cmp
loopne
xor
ds
negl
xlat
loop
mov
pop
filds
aaa
sti
int
stos
arpl
or
iret
fs
pop
imul
fisttps
cmp
push
cli
jge
cmp
pop
int
test
mov
imul
push
imulb
fimull
arpl
movsb
sub
lods
dec
hlt
scas
pop
or
and
les
xlat
addr16
xchg
repnz
push
pop
fcomps
outsb
test
dec
inc
cmp
jp
imul
push
xchg
js
cmp
cmp
jmp
mov
test
arpl
add
test
lock
push
sub
push
loopne
xchg
push
add
jns
jo
rcll
or
fbld
push
aad
movsl
dec
in
aad
xchg
sub
dec
cs
mov
jno
and
push
loop
cld
sar
jno
inc
pusha
dec
pop
mov
aas
cmp
sbb
cs
fs
inc
sub
lret
test
pop
ljmp
cmp
orl
repz
lods
idivl
xchg
lcall
insb
testl
out
ss
lods
xchg
jl
sub
sub
hlt
push
js
jo
outsl
or
or
in
out
sbb
mov
dec
add
inc
out
push
adc
rorl
mov
sub
inc
rcl
xchg
mov
pop
cltd
xor
push
test
xor
das
cwtl
nopl
pop
orb
xchg
jecxz
std
mov
popf
xchg
adc
leave
ss
cmp
dec
xchg
insl
adc
popf
inc
sbb
pop
hlt
nop
pop
push
jle
xor
movsb
or
pushf
jno
shrl
adc
ljmp
das
arpl
sbb
or
fstpl
js
add
mov
faddl
dec
cld
dec
js
int
add
adc
aam
imul
jnp
aas
hlt
jnp
adc
scas
add
mov
adc
mov
xor
loopne
es
ljmp
jecxz
mov
or
push
adc
and
mov
xchg
mov
sbb
xor
xor
sub
mov
xchg
stc
pop
insb
fadds
mov
cltd
lods
and
sbb
das
bound
lret
inc
jnp
call
fidivl
lahf
cmp
in
pop
mov
pause
ret
cmp
jne
sub
fimull
push
or
lret
ficomps
add
arpl
add
pop
leave
sarb
cli
jp
lret
inc
mov
dec
or
fcmovnb
jne
mov
push
fsubl
push
push
push
jns
rcll
add
mov
addb
aas
mov
test
xchg
les
xchg
popf
sub
das
jbe
push
push
and
fwait
jo
imul
cmp
or
outsl
out
mov
pop
jns
inc
mov
pop
test
jle
sbb
rcr
dec
int
stos
jmp
jo
pusha
cmp
mov
data16
push
push
mov
inc
push
fwait
aas
pop
push
mov
popf
push
in
inc
and
pop
arpl
fcomi
fsubrs
ret
sub
frstor
cwtl
push
dec
loop
add
ret
aad
inc
lods
add
or
xchg
clc
inc
inc
cmp
inc
cmp
ds
jae
adc
xchg
repnz
lods
inc
adc
dec
mov
sub
cmp
int3
lds
or
fildll
test
leave
mov
es
je
and
mov
dec
out
test
or
or
sahf
push
sti
in
sbb
insl
sub
loope
mov
gs
lods
pop
jge
fcom
xchg
jne
jg
jmp
repnz
mov
and
jne
rolb
mov
jg
xorl
fwait
pop
and
jl
and
sub
jbe
add
mov
mov
aaa
push
adc
add
push
out
imul
lahf
or
sbb
xor
pop
jg
add
frstor
jns
or
int3
lcall
data16
jmp
dec
xchg
icebp
and
adc
sti
ret
es
pop
cwtl
push
cmp
cwtl
cmp
jne
data16
pop
push
test
int3
into
cmpsl
pushf
dec
movsb
ret
jg
mov
je
and
mov
mov
mov
mov
push
push
sub
test
and
loopne
ljmp
or
push
push
xor
outsl
jg
in
lock
je
aaa
push
arpl
in
in
or
ja
ret
or
cmp
mov
cmp
mov
lea
push
mov
dec
add
loopne
push
and
fisubrl
shlb
xchg
fimull
pop
icebp
repnz
ret
shl
hlt
sub
lods
je
jb
sub
in
sub
push
aam
mov
jnp
mov
push
mov
rolb
dec
mov
ret
jl
insl
test
outsl
leave
popl
and
imul
jg
sbb
dec
jecxz
testb
flds
cmp
mov
or
lret
setp
push
sub
mov
out
leave
arpl
and
add
push
outsl
ja
xchg
add
std
and
sub
lds
fisttpl
cmc
xchg
movsb
adc
inc
shl
push
lcall
push
push
daa
cli
mov
pushf
pop
call
outsb
leave
sub
or
fsubrs
xchg
je
loopne
cwtl
cmp
dec
testb
mov
je
pop
outsb
xor
gs
mov
shlb
inc
out
push
mov
sub
push
gs
dec
call
mov
mov
and
lret
pop
movsb
jp
sbb
cmp
add
aaa
leave
mov
jecxz
lea
pop
sub
fbstp
test
mov
out
xchg
xchg
push
aam
aam
inc
fwait
and
mov
sbb
xchg
pop
and
ds
mov
adc
push
out
xchg
enter
scas
lahf
mov
aaa
add
mov
mov
xchg
lods
shrb
lods
jle
loopne
mov
js
adc
jo
mov
sbb
lcall
in
lods
sub
xchg
ljmp
lods
lcall
lods
add
daa
cmc
adc
test
push
mov
mov
ret
shlb
mov
js
fnsave
psadbw
cmp
movb
inc
sub
rorb
movsb
pop
mov
sub
xor
xchg
mov
and
fsubs
push
ljmp
push
xor
dec
stc
jg
inc
jno
lret
pusha
adc
ss
mov
jl
out
cld
sbb
pop
fisubrs
mov
out
icebp
push
cltd
add
rolb
mov
cs
push
add
cwtl
cmp
jmp
xchg
fbstp
push
jp
clc
or
test
je
out
cmp
mov
ds
cmpsl
sub
mov
bound
pop
xchg
add
test
cltd
int3
adc
push
dec
mov
test
dec
pop
fisttpll
cmc
inc
iret
shr
les
inc
dec
outsb
pop
icebp
enter
aam
hlt
lds
jg
or
xchg
lea
mov
minps
roll
sub
sbb
pop
add
test
inc
and
lock
fs
movsl
mov
in
or
mov
push
and
movsb
sbb
xlat
jg
shll
mov
sbb
mov
adc
mov
jns
mov
in
xor
inc
addr16
pop
xor
sub
xor
jns
mov
add
cmp
xor
fidivl
jne
and
roll
cmpsl
cmp
icebp
sarl
xor
pushf
sub
sbb
push
xchg
cmp
lcall
xor
enter
cmpsb
imul
inc
pushf
outsl
push
xchg
cmpl
cltd
inc
cli
out
ja
mov
je
cltd
pop
call
adc
adc
popa
cmpsl
pop
sub
push
dec
fidivrl
repnz
and
pop
inc
imul
inc
hlt
push
jo
out
adc
test
dec
push
repz
dec
adc
fcoms
bound
stos
aam
jge
inc
or
sti
hlt
push
mov
adc
sbb
xchg
mov
adc
dec
fldl
xor
xchg
je
inc
int
fucomi
cmp
mov
add
mov
xchg
aad
cmp
cmp
cltd
lret
adc
mov
push
or
mov
lds
lcall
mov
jecxz
rclb
leave
mov
std
inc
aad
sub
mov
push
hlt
into
dec
sbb
pop
xchg
push
cld
push
les
xor
push
lret
and
pop
out
jecxz
cltd
push
rdmsr
adc
inc
push
pusha
mov
cld
mov
pop
pop
lret
or
and
mov
xchg
sti
lods
cmp
sbb
pop
sbb
loope
lock
push
xchg
data16
into
jo
sbb
cmp
in
add
push
or
ret
or
nop
faddl
js
pop
mov
sub
cmp
pop
mov
push
lods
divl
jle
and
push
jle
xor
mov
loope
in
lahf
int
lret
jl
popf
cmp
xchg
jmp
jns
xchg
imulb
cmp
int3
aam
dec
add
push
in
std
aas
mov
int
sbb
scas
or
mov
inc
repz
push
outsl
addr16
add
shll
rcrl
xchg
inc
add
pop
das
rorl
jecxz
insb
out
mov
stc
inc
or
rol
pop
filds
sbb
lock
adc
push
lret
xchg
inc
sahf
cmpb
out
dec
cwtl
sti
std
jge
std
test
xor
sti
outsb
popa
and
xor
imul
sbb
pop
jne
das
daa
test
and
dec
test
mov
sbb
jp
xor
popa
xchg
mov
loope
aaa
push
xor
adc
fsubrl
xor
mov
inc
push
aad
jge
jecxz
ss
jg,pt
pop
or
mov
cs
std
mov
popa
mov
dec
pop
sbb
and
mov
push
inc
pop
add
adc
adc
in
xchg
out
mov
into
push
movl
pop
xor
aas
shlb
or
cmp
dec
clc
mul
inc
inc
in
push
dec
jns
jno
pop
mov
push
data16
cs
adc
xchg
or
icebp
xchg
cmp
dec
and
adc
pop
sarb
data16
dec
cwtl
pop
es
push
xchg
cmc
daa
xchg
fs
and
adc
push
inc
mov
cltd
inc
in
sbb
test
sbb
lcall
mov
int
jne
cmpsb
mov
pop
rol
ret
pop
in
sub
mov
xchg
cwtl
mov
mov
cltd
addr16
sub
int
jmp
mov
jg
xchg
push
and
insl
mov
es
mov
ds
and
mov
mov
outsl
imul
mov
inc
mov
data16
test
push
inc
orb
jb
out
incl
cmc
mov
xor
dec
pop
xor
aam
mov
xorb
mov
jmp
xchg
cs
add
pop
in
mov
xchg
cmp
mov
testb
fsubp
xor
cmp
cmp
loopne
fidivl
inc
adc
dec
push
and
sarb
rolb
cli
cwtl
jbe
rclb
in
leave
lods
sbb
or
movsl
lahf
or
dec
xchg
lcall
pop
push
int3
imul
int
adc
enter
mul
pop
cmp
aaa
leave
inc
adc
mov
movsb
mov
test
pop
jnp
mov
jbe
adc
repnz
pop
mov
je
adcb
lret
push
dec
leave
and
and
insb
dec
inc
add
in
xchg
not
cli
daa
mov
lret
sbb
jns
vxorps
scas
lock
fwait
cli
xor
adc
sub
sti
in
loope
fbstp
outsl
xor
fwait
adc
lcall
aas
xor
test
movsl
push
cli
inc
shlb
out
cmp
rol
cmp
lcall
xor
mov
inc
in
mov
mov
sub
sbb
lahf
push
jb
sbb
out
add
xor
fwait
cltd
lret
xchg
pushf
mov
jge
sahf
xchg
les
adc
mov
cmc
jnp
xchg
lods
cmp
lea
mov
mov
or
sarb
sub
add
jns
fucomip
das
fucom
aam
and
cmpsl
aam
mov
vcvttpd2dq
aas
adc
clc
subb
mov
sub
mov
insl
and
insl
shl
pop
fs
mov
adcb
insl
fld
cmp
daa
rorb
mov
rcl
out
cmpsb
int
sbb
adc
xchg
mov
push
xor
mov
ss
movsl
ljmp
int3
mov
jmp
pushf
cltd
dec
sbb
mull
scas
movsl
adc
ljmp
mov
scas
push
and
sbb
movsb
and
jo
inc
push
gs
out
or
lods
in
xchg
clc
mov
ret
jne
shll
test
decb
mov
aaa
lahf
cmpsl
xchg
or
fdivrl
cmp
mov
out
xor
loope
loope
test
dec
rcrb
add
dec
inc
gs
cmpsb
jge
pop
hlt
push
and
dec
out
mov
pop
repz
adc
pop
jecxz
imul
xor
in
add
aas
push
je
into
pop
cmp
je
lods
and
push
pop
xor
pop
loope
pop
rol
ret
repz
sbb
bound
xor
fisubl
mov
fxam
add
ja
sub
loopne
repz
fwait
xchg
inc
jl
scas
cli
sub
add
dec
cmp
sub
and
gs
xor
aam
or
lret
fidivs
in
dec
mov
mov
repnz
jbe
inc
insb
xlat
mov
dec
mov
mov
sbb
aad
imul
cmp
repnz
ficoms
xor
push
test
or
xchg
test
es
add
cmpsb
dec
adc
loop
shll
fdivrl
mov
sub
roll
ss
sub
imul
je
stc
sub
sub
sub
push
pusha
int3
push
jge
sub
pop
adc
jno
sbb
cmpsb
sbb
mov
aam
dec
test
rorb
pop
and
lret
inc
adc
addr16
xchg
xchg
sbb
test
xchg
lock
dec
push
out
mov
in
out
test
fcompl
cmp
xor
inc
pop
scas
dec
sahf
xchg
bound
stos
mov
push
andl
hlt
ret
xchg
pop
inc
imul
sub
aaa
add
rcr
sub
js
sub
sub
add
cltd
xor
mov
dec
inc
push
mov
lahf
rcl
pusha
push
dec
adc
sub
dec
bound
addr16
pushf
inc
fs
xchg
mov
push
bound
sub
es
xor
or
fwait
addb
jnp
mov
adcb
ficoms
icebp
add
inc
test
sbb
mov
dec
jl
push
dec
dec
xchg
pop
popf
jecxz
push
cmp
xchg
inc
inc
xchg
pop
lret
mov
je
sub
sub
hlt
and
adc
jecxz
dec
out
jae
cmp
lret
out
mov
or
decb
jecxz
leave
lahf
jo
movsl
jp
pusha
imul
pop
or
sahf
insb
jbe
fistps
and
incb
mov
test
lea
mov
hlt
cmp
dec
jg
jns
mov
jnp
ret
mov
popf
and
stc
jmp
adc
push
jp
pop
inc
jmp
mov
sub
sbb
jmp
lret
xor
jp
xchg
lret
sub
shl
mov
cmpsl
add
in
mov
mov
push
cwtl
insb
add
arpl
sub
imul
dec
sbb
mov
loopne
std
rcrl
pop
scas
ja
cmp
and
mov
push
ss
xchg
pop
dec
mov
sti
fcomps
lock
daa
push
push
mov
cmpsl
bndldx
in
push
insl
data16
mov
add
std
pop
cwtl
shrb
insl
cmc
adc
scas
pusha
sbb
mov
fimuls
in
sbb
test
jp,pt
lods
subb
lret
xor
jge
lret
jl
pop
xor
add
push
sub
les
int3
or
sti
cmp
icebp
stos
inc
adc
iret
out
pcmpeqw
push
mov
aaa
mov
iret
call
add
arpl
mov
in
mov
gs
adc
or
ljmp
les
nop
sub
xor
inc
and
ret
std
dec
lahf
or
pop
add
add
in
xor
lds
mov
sbb
push
fsts
insb
mov
rcll
xchg
jmp
std
daa
add
pop
jl
mov
movsl
icebp
cmp
mov
dec
sbb
xchg
and
sbb
aas
pop
jne
jmp
pop
mov
xchg
outsl
or
std
or
cmpsl
test
mov
xchg
jo
inc
in
pop
xchg
cmp
jge
jns
loopne
popf
bndstx
adc
sbbb
jle
mov
sub
in
pop
or
cmp
loopne
aas
fcmovnb
aad
pop
daa
cmp
sbb
mov
or
std
sbb
dec
sub
lods
xchg
xchg
mov
xor
fsubl
and
rcll
shlb
mov
cmpsl
pop
fcomi
popa
xor
ret
fadds
cwtl
push
dec
inc
xchg
add
ljmp
inc
popl
xor
popa
gs
fnstenv
or
loop
mov
stos
fstpt
test
jg
lahf
and
push
mov
and
or
pop
fs
pop
lret
lods
lahf
cs
xor
jp
jno
popf
aam
pop
inc
repnz
or
out
lahf
outsl
mov
xor
cmp
pop
dec
xor
jo
lcall
mov
mov
and
mov
push
out
sbb
mov
cmp
pusha
cmp
das
adc
jge
daa
mov
sti
test
pop
pop
filds
mov
int
jecxz
icebp
pop
nop
or
push
aaa
jbe
sti
pop
push
in
movsl
inc
ss
mov
roll
daa
cmpsl
dec
and
fcompl
rcrl
add
jecxz
rcrl
cli
push
push
sub
mov
mov
inc
push
mov
fcoml
mov
arpl
pop
xchg
inc
jno,pn
push
ds
data16
cld
mov
sub
push
test
lret
ret
push
mov
sahf
enter
jge
popf
arpl
mov
push
rcrb
sub
push
jne
cmp
jmp
dec
lea
lret
popf
jae
mov
subb
jecxz
xchg
mov
sub
arpl
push
lahf
push
jo
fnop
jnp
je
xor
jg
test
nop
jnp
mov
outsl
pop
fimuls
pushf
ret
mov
addl
decl
inc
mov
mov
loope,pn
or
loop
push
mov
int
push
pop
inc
or
adc
outsl
xchg
mov
or
imul
loopne
inc
cmpl
push
pop
sub
jle
shr
pop
mov
xchg
repz
mov
into
mov
mov
arpl
pop
mulb
shlb
add
jae
sahf
xor
cmpl
push
push
or
fs
nop
cmpsl
lods
jg
fwait
call
mov
mov
cltd
pop
mov
loope
in
addb
repnz
xor
or
sbb
mov
popa
clc
fiaddl
lds
adc
repz
stc
add
and
inc
decl
repz
fcompl
adc
lods
je
stos
in
repz
lcall
cmp
xlat
inc
out
xor
mov
inc
and
stos
cs
adc
mov
dec
mov
cmp
xchg
ss
pop
loopne
add
dec
imul
push
and
test
push
movlps
mov
xchg
std
ljmp
data16
scas
sub
xchg
das
pop
push
jp
add
mov
pop
mov
push
stos
fcmovb
cmpsb
sub
fistpl
mov
or
dec
jmp
add
and
test
xor
fldcw
adc
dec
scas
cld
inc
mov
lods
bound
inc
mov
adc
or
add
sbb
mov
test
adc
lret
cmp
and
scas
nop
test
std
dec
shlb
lds
int3
outsb
fwait
sbb
dec
pushw
inc
pop
divb
dec
insl
push
data16
loopne
cmp
inc
fs
lret
pusha
dec
push
inc
sub
data16
dec
mov
ss
lds
les
mov
imul
mov
dec
xchg
testl
mov
mov
das
mov
movsb
push
sub
push
inc
inc
cli
pop
lahf
inc
cmpsb
mov
dec
cmp
shll
pop
ficoms
leave
xchg
cmpsb
fstps
mov
aam
pop
fwait
mov
cltd
inc
repz
sub
mov
ja
int
add
sub
push
out
cmp
xchg
lahf
add
xor
mov
mov
dec
inc
fcompl
outsb
aas
pushf
dec
xchg
sbb
lods
or
sbb
insl
mov
in
mov
mov
and
stos
sbb
jne
out
icebp
data16
mov
or
in
sti
or
out
or
dec
dec
jecxz
outsl
mov
add
xor
dec
push
xor
loopne
dec
aaa
aaa
add
push
sahf
mov
sbb
fwait
add
stos
xor
not
and
fwait
into
mov
sbb
test
insl
push
pop
test
add
adc
repz
data16
or
or
cmp
hlt
cld
int3
ds
inc
js
xor
popa
adc
mov
ds
push
test
mov
arpl
int
inc
push
dec
cmc
rep
inc
inc
movsb
xor
fucomi
mov
add
adc
pop
std
shll
lods
xchg
mov
negl
inc
ds
lret
repz
mov
cli
icebp
jnp
mov
inc
cmp
jne
mov
mov
je
pop
push
mov
adc
pusha
cmp
outsb
aad
mov
in
push
in
mov
pusha
mov
mov
iret
mov
xor
js
in
aam
in
mov
mov
scas
xchg
fdivrl
pop
sbb
stos
mov
push
popa
push
jne
pop
gs
lret
mov
jb
mov
xchg
xchg
xor
shlb
das
mov
fs
xchg
jns
xchg
inc
movsb
js
lea
mov
das
add
cli
inc
xchg
lods
xchg
push
mov
out
push
adc
rorl
sub
xchg
mov
inc
movsl
pop
or
pushf
pop
aaa
stc
std
cs
gs
imul
neg
arpl
xchg
lahf
add
das
sbb
xchg
xchg
pop
inc
arpl
fs
push
inc
pop
sbb
mov
fnsave
sbb
into
mov
adc
xor
mov
mov
insb
fisttps
mov
pop
pop
push
jae
push
imul
sbbl
inc
ja
int3
push
outsb
pop
out
mov
clc
mov
xchg
mov
dec
js
ja
pop
cmp
push
cld
cmc
scas
repz
push
sub
movaps
je
lret
out
jecxz
out
push
loopne
push
hlt
test
clc
add
adc
imul
arpl
and
sub
jnp
add
mov
or
iret
inc
sub
outsl
adc
jns
push
xchg
into
inc
hlt
lgs
rep
outsb
add
sub
fwait
lods
pop
add
mov
scas
xor
xlat
lret
sbb
loope
test
or
mov
fs
je
mov
jo
int
xor
jecxz
or
test
adc
adc
das
xchg
and
inc
outsb
push
cmc
xchg
jmp
insl
shrb
outsl
jmp
jecxz
mov
xchg
ss
insl
into
scas
inc
insl
movsb
and
push
fsubl
pop
addb
sbb
rcr
sbb
rolb
dec
mov
mov
sbb
inc
sarl
ljmp
ljmp
popa
aaa
out
or
sub
jb
dec
sub
in
and
dec
popf
jecxz
sub
inc
jns
inc
jmp
cli
sbb
mov
sub
div
mov
fiaddl
or
ret
mov
pop
es
mov
dec
aam
xlat
jno
pop
in
jmp
sbb
mov
mov
pop
ficompl
mov
sarb
lcall
daa
ljmp
enter
pop
insb
cmp
adc
mul
mov
pop
inc
lcall
iret
repnz
push
rorl
jne
adcl
jno
or
and
cmc
mov
mov
stos
popf
shrb
aad
in
mov
daa
sti
mov
sbb
loop
pop
jmp
dec
lds
lods
repz
pop
sbb
inc
int3
imul
add
test
cs
dec
pop
mov
std
xor
mov
and
shl
lds
mov
inc
add
inc
sub
push
aaa
cmpsb
ds
sbb
xlat
xchg
fiadds
sub
fs
jno
mov
mov
iret
pop
scas
arpl
outsb
push
mov
ljmp
out
sub
mov
fwait
mov
pushf
add
fistpll
or
imul
push
push
pop
popa
cmpsb
pop
pop
lret
xchg
mov
cmp
xorb
cli
mov
jnp
inc
push
data16
adc
dec
add
pop
popa
pop
cmc
gs
ror
push
mov
fsub
and
xchg
fwait
out
mov
jno
shlb
fwait
nop
pop
aad
push
loop
icebp
pop
adc
loopne
and
sbbb
pop
aas
outsb
aaa
sbb
push
repnz
lcall
outsl
aad
and
ljmp
orl
cmp
scas
sbb
fstl
pop
dec
pop
aaa
gs
cltd
xchg
xchg
cld
dec
adc
pop
adc
outsl
pushf
adc
lds
lods
out
mov
lahf
pop
imul
dec
adc
or
iret
shll
xor
lahf
lcall
and
push
stos
dec
add
sub
pushl
xchg
adc
pop
mov
cltd
inc
fsub
dec
inc
xorb
cld
sub
out
loopne
mov
shrb
mov
sbb
xchg
xor
push
or
aam
test
shr
or
push
jmp
daa
mov
filds
inc
cli
cwtl
pop
push
orl
aas
or
or
insl
cmp
xor
mov
jns
mov
and
insb
pop
pop
incl
jae
pop
xor
cmp
xchg
sub
cmp
aam
clc
pop
cwtl
pop
sahf
std
jnp
mov
xchg
jl
mov
adc
leave
cmp
pop
pop
lahf
test
bound
fcmovbe
pop
ss
and
adcb
cmp
add
or
jae
mov
inc
lret
nop
dec
or
adc
cmp
sub
add
cmp
xchg
adc
imul
push
es
mov
mov
and
jl
mov
das
jmp
mov
jmp
jl
mov
xor
lods
jns
rorl
sarb
sub
push
das
in
or
jnp
fwait
in
jl
aad
test
ret
pop
int
xor
rolb
ret
out
adc
andb
push
fwait
add
loope
mov
mov
movsl
mov
enter
pushf
lods
aam
mov
lahf
add
sbb
sbb
mov
mov
test
jmp
stc
test
inc
xchg
gs
cltd
cmp
jb
fwait
in
push
fstl
imul
push
sbb
push
sahf
jmp
movsb
fiadds
fiaddl
cltd
popf
xchg
lret
adc
jnp
int
cmp
jl
sarb
addl
mov
push
cmp
xor
mov
stos
dec
add
ljmp
sbb
les
je
popa
cmp
xchg
out
mov
out
jg
stc
leave
mov
sub
dec
push
dec
sahf
mov
jmp
mov
jae
xor
xchg
mov
jo
cltd
adc
or
fdivl
pop
subb
icebp
inc
pushf
in
popf
xchg
lret
into
push
jl
test
repnz
add
in
shrl
adc
mov
xchg
pop
inc
xchg
adc
jle
leave
stos
xchg
mov
mov
push
mov
call
and
jp
or
imul
xor
and
loopne
addb
fsubs
addb
insb
in
mov
mov
lea
loopne
testb
scas
repnz
iret
cltd
or
cmp
pop
or
push
lock
lds
push
cwtl
sub
pusha
sub
jp
test
push
ret
int3
das
daa
sbb
cmp
sub
daa
inc
in
adcb
or
mov
or
dec
ljmp
test
pop
ds
rclb
add
stos
jecxz
xchg
dec
mov
sti
aad
and
xchg
ret
and
test
adcl
mov
and
xor
xor
lock
aad
ror
insb
inc
cli
jns
stc
sbb
pop
mov
cmp
pop
sarl
rclb
nop
jo
movl
fisttpll
sbb
xchg
cmc
xchg
data16
ret
dec
lock
in
xchg
mov
jno
int3
in
mov
notl
lock
fdivrs
push
mov
aam
fdivl
or
cmp
mov
mov
xlat
test
or
imul
int
sbb
frstpm(287
add
mov
jns
adc
lcall
adc
int
cld
pop
push
mov
xor
xor
fabs
xchg
shrb
ss
jbe
fdivs
push
lret
negb
lea
fdivrs
lds
mov
jg
pop
mov
sti
ss
ds
sti
repz
pop
xchg
pop
fsqrt
sti
or
sbb
dec
in
call
mov
xchg
jo
or
je
pop
pop
hlt
adc
mov
outsl
jle
inc
and
mov
sbb
sbb
shrb
pop
mov
jns
dec
dec
xor
mov
mov
and
cmp
xchg
in
pop
out
popa
popa
jecxz
mov
je
lret
cmp
fwait
sub
out
mov
cmp
aas
adc
jge
mov
adc
js
and
mov
jmp
pop
add
call
in
inc
rclb
dec
and
xlat
aaa
loop
xor
or
test
adc
add
and
jns
mov
adc
sbb
pop
xor
dec
add
gs
push
call
mov
xchg
popa
movl
cld
std
add
loop
dec
leave
sub
xor
daa
test
sarl
xchg
cmp
cmp
lods
and
inc
outsl
mov
shlb
dec
imul
popf
or
add
pop
fnstenv
add
mov
inc
std
shlb
sbb
icebp
das
in
mov
xor
loop
push
and
xor
adc
loope
sub
aam
lahf
or
pop
movsl
add
das
mov
test
jmp
out
ret
mov
sbb
pop
sub
sub
mov
cmp
mov
fisubs
es
mov
lock
insl
into
sahf
jl
je
or
out
adc
mov
shll
stos
push
cld
dec
mov
push
push
out
in
hlt
jge
pop
in
repnz
cwtl
fistpl
and
movsl
xchg
mov
sub
rcl
imulb
gs
mov
daa
pop
cmpl
mov
insb
xchg
cld
lods
bound
or
push
mov
jnp
xorb
es
lea
ss
or
shrl
and
sub
adcl
shlb
and
mov
sbbl
sub
jle
mov
stc
sub
cmp
test
or
aam
mov
or
cltd
mov
adc
sub
leave
roll
jg
add
fwait
hlt
frstor
mov
into
enter
filds
inc
imul
fcompl
lret
mov
push
stos
scas
leave
mov
add
add
mov
std
sub
xchg
xlat
push
sbb
aaa
outsb
cmpsl
dec
arpl
ljmp
pop
push
fsubrs
mov
add
xor
mov
sarb
out
add
xor
fnsave
mov
sbb
mov
jg
mov
add
push
xchg
xchg
sarb
xchg
jl
cmp
pop
jno
sub
mov
mov
and
xor
dec
sahf
loopne
rcll
cmp
xor
sbb
jge
pop
mov
shrb
xchg
add
pushf
mov
pop
imul
aad
mov
and
mov
add
outsb
pop
cmp
xor
pop
int
or
outsl
stc
adc
jmp
mov
ret
test
mov
or
and
inc
sub
ss
mov
push
aaa
and
xor
push
mov
scas
cmp
push
and
ret
mov
push
bound
mov
inc
arpl
imul
xor
out
adc
sub
or
xor
loop
xlat
push
lock
pop
ja
xlat
aas
adc
dec
into
shlb
hlt
xor
out
mov
into
fsubrp
pop
popf
jns
xchg
pusha
ret
jp
fs
stos
sub
jl
sbbb
mov
mov
bound
push
outsb
or
mov
rorb
add
xchg
popf
sahf
adc
cli
xlat
mov
dec
pop
mov
arpl
xchg
sti
jnp
add
xor
aas
rol
and
mov
inc
and
cwtl
pop
jns
xor
or
hlt
int3
cld
sbb
push
jecxz
shlb
cwtl
mov
xlat
sub
cmp
or
int
or
xor
lret
popa
bound
flds
repz
add
in
fsub
adc
jmp
test
mov
push
and
jnp
shl
imull
pop
rclb
jge
outsl
fisubrl
popf
scas
insb
int
pop
jbe
ja
or
pop
aad
insb
xor
xor
mov
data16
add
cmp
push
arpl
scas
sub
rolb
cltd
fisubl
add
jle
dec
in
pop
dec
push
popa
sub
push
mov
push
test
xchg
cmp
js
add
test
mov
sub
add
int
push
and
push
inc
cmp
jmp
out
dec
inc
aas
cmp
add
xchg
scas
jns
jnp
sub
xlat
or
pop
add
scas
stos
sahf
ja
jnp
and
jmp
adc
inc
cltd
in
cmp
aas
or
call
push
nop
cmp
lret
dec
loope
push
mov
dec
pop
divl
push
xor
inc
jmp
xor
nop
std
inc
ret
dec
cltd
stos
call
imul
xchg
ret
pop
add
xchg
lock
jge
test
jp
leave
fnstenv
call
dec
cwtl
sub
div
data16
mov
jge
mov
nopl
dec
mov
lds
nop
push
or
ret
pop
mov
data16
imul
outsl
fbld
mov
or
mov
arpl
dec
cmp
jno
rcrb
xchg
and
test
lods
cmc
sub
insb
mov
call
mov
dec
cmc
add
cli
aam
ljmp
aaa
xor
mov
into
lret
ror
push
mov
adc
jno
xor
loopne
lods
xchg
dec
adc
ljmp
jne
call
popa
inc
dec
mov
mov
in
and
pop
pushf
mov
idivl
cmpsb
mov
mov
cli
pop
scas
dec
mov
cli
cmp
je
shll
pop
inc
out
pop
loop
cmp
sbb
adc
jle
in
fs
popf
dec
sub
popf
jo
push
xchg
mov
xchg
sub
mov
dec
dec
sub
jae
subl
lock
das
mov
pop
ljmp
push
aas
mov
shll
and
sbb
cli
mov
repnz
insl
dec
shll
cwtl
jp
lahf
push
push
dec
or
jmp
faddl
cmp
jge
mov
xor
imulb
adc
push
sbb
push
xchg
jp
xor
xor
bound
enter
dec
pop
and
and
sarb
jg
adc
ret
ret
in
mov
popf
jp
xchg
repz
mov
mov
xor
dec
or
sti
repnz
and
lcall
inc
push
in
loopne
lret
cmp
push
scas
lea
subb
inc
push
jbe
int
jne
cmpsb
mov
cwtl
jg
push
int3
mov
daa
js
mov
vpand
xor
rcl
popa
xlat
leave
dec
mov
jle
mov
ret
xor
inc
dec
add
mov
and
sti
addl
and
repz
sbb
cmc
dec
jl
decb
insl
add
inc
arpl
adc
jmp
andl
sub
fdivrs
add
add
popf
in
cmp
std
xchg
cmp
in
sub
insb
ret
lret
cs
and
push
xorl
jae
adc
lcall
adc
scas
jno
or
mov
lret
cmp
fldenv
es
out
pushf
cvtps2pi
add
call
jp
cltd
mov
fimull
push
mov
into
xor
xor
jmp
or
and
sahf
sbb
mov
push
jmp
pusha
popa
daa
add
cmpsb
cli
arpl
jns
inc
outsl
aad
sti
dec
stos
int
jge
xchg
fistpl
mov
dec
push
adcl
cwtl
xor
mov
stos
enter
jb
push
mov
cmc
sub
jb
imul
fcmovu
pop
xchg
sub
or
push
mov
jg
test
pop
cmp
in
enter
popf
xlat
mov
mov
inc
std
xchg
mov
sub
aaa
cmp
ret
push
bound
push
fistl
xchg
dec
push
sub
and
pop
sbb
sbb
mov
inc
pushf
insl
lahf
jmp
cmp
cwtl
iret
sbb
cmc
push
cmp
ljmp
dec
std
xor
cmc
int
rcrl
push
inc
repnz
jmp
inc
sub
lea
mov
das
dec
mov
push
jns
xlat
sbb
xchg
mov
push
insb
inc
adc
adc
pushf
pop
xor
imul
inc
shrb
scas
outsl
jmp
pop
mov
add
push
js
adc
stos
jbe
jge
cmp
pop
pop
scas
xchg
cvtps2pd
sti
clc
mov
int3
cmp
fwait
mov
dec
es
and
addr16
adc
ret
xchg
xchg
cltd
push
xchg
push
adc
mov
xor
cmc
rcl
xor
or
push
or
push
inc
pop
adc
push
sub
sub
mov
adc
cmc
ficomps
shrb
jmp
sub
sub
inc
fcomps
fildl
pushf
cmp
sub
sub
pushf
into
or
call
mov
out
es
into
std
and
jae
stc
sbb
mov
out
push
into
xchg
hlt
sti
cmpsb
ja
cmp
push
dec
mov
lcall
push
sub
inc
sbb
add
cmp
in
aam
fbld
mov
inc
lret
jo
es
data16
sbb
insl
xor
gs
jmp
icebp
loope
lea
jns
sbb
sbb
fcmovne
out
cmp
ret
mov
cmp
data16
loopne
lods
pop
and
push
sbb
pop
pusha
dec
bound
test
xchg
insb
es
test
insl
gs
in
add
cmp
nop
out
and
adc
mov
cs
scas
xchg
jae
adc
scas
js
xor
push
dec
popf
test
out
and
push
in
sbb
cmp
pop
or
cmp
inc
push
push
mov
aad
cmpsl
stos
fsts
incb
lcall
sahf
mov
int
push
push
inc
testb
add
add
mov
lods
mov
mov
test
iret
push
clc
dec
add
and
out
push
inc
inc
push
dec
mov
mov
clc
loope
pop
jg
or
mov
idivl
add
sahf
xchg
out
mulb
gs
pop
jno
ret
push
adc
jecxz
je
dec
inc
aam
ljmp
inc
jmp
and
xchg
xchg
jb
sbb
imul
fsubs
shlb
shlb
jmp
mov
jne
sub
jecxz
out
jp
inc
or
and
out
mov
inc
push
ficomps
dec
mov
movsl
jbe
mov
xor
mov
and
sub
jg
fists
fstl
adc
negb
out
ret
add
leave
adc
test
rcrb
lcall
pop
es
loope
xchg
ret
imulb
inc
nop
xchg
stc
mov
mov
mov
addr16
je
sbb
outsb
mov
xor
mov
fldl
into
dec
shr
xchg
or
insb
cli
das
ror
jmp
adc
mov
mov
lds
loopne
adc
fsts
in
scas
out
and
inc
adc
add
or
hlt
int
inc
dec
aad
jmp
les
ds
popf
das
lock
sub
insb
pop
mov
mov
or
loop
push
outsl
fdiv
xor
insl
dec
les
mov
mov
ficoml
jg
mov
jl
mov
cmpsb
or
jne
es
ror
ljmp
cmp
adc
jnp
sarb
aam
mov
lcall
pop
xchg
lcall
fmull
fwait
add
mov
aad
xchg
jnp
imulb
ret
pusha
jne
leave
pusha
push
inc
push
test
pop
test
mov
and
test
adc
mov
mov
in
push
pop
inc
jae
in
jae
xlat
xchg
fimuls
mov
aad
ljmp
fbstp
xor
mov
loop
fcmovnb
stc
mov
es
xor
repnz
nop
mov
jo
dec
pop
scas
scas
pop
lods
stos
stos
lock
or
jge
fdivrl
inc
inc
push
clc
push
push
nop
add
ja
pushf
pop
xchg
or
popf
je
in
gs
inc
jo
insb
or
mov
pop
popa
dec
scas
test
inc
movsl
jp
jno
sbb
bound
mov
and
jnp
mov
data16
ret
jo
aas
dec
std
repnz
pop
xorl
inc
sarl
xor
nop
bound
mov
je
cmpsb
or
ss
inc
or
test
mov
js
jecxz
cmp
or
add
fwait
sbb
or
mov
dec
int3
lcall
mov
mov
adc
cmc
mov
ficoml
test
mov
sub
fs
insb
add
xor
ja
mov
mov
iret
dec
jns
xor
ficomps
or
cmp
cmp
test
xlat
push
pop
sub
clc
in
push
inc
fnstenv
mov
mov
adc
das
adc
push
mov
fdiv
lret
fwait
push
movsb
lcall
out
push
ror
push
aas
push
xor
movsb
stc
fcomps
outsl
adc
or
mov
adc
sub
into
push
mov
pop
ret
push
mov
xchg
dec
cmp
sub
lahf
clc
xchg
test
pusha
std
mov
pop
dec
orb
mov
sub
shlb
push
mov
inc
jge
notb
mov
sub
ds
pop
ss
sbb
xor
push
or
loopne
fcoml
add
jl
daa
dec
lds
sahf
jae
pop
push
mov
jecxz
xor
sti
xchg
in
xchg
pop
shlb
sub
shll
mov
cmpsb
pop
imul
inc
std
fld
pop
or
imul
lcall
scas
pop
push
shll
fadds
mov
cmp
pushf
dec
shlb
mov
jp
pop
pop
add
fisubrs
shr
cmpsb
cmp
sbb
mov
pop
dec
mov
sbb
push
inc
push
fmull
iret
mov
daa
pushl
adc
sub
repz
test
lret
cmp
jecxz
mov
pop
mov
jle
inc
jg
push
dec
adc
mov
add
mov
into
jecxz
and
xchg
fisubs
jl
and
mov
jp
fisttpl
jmp
stos
inc
sub
into
mov
cmc
lea
adc
mov
dec
or
sti
cs
pop
aas
clc
aaa
mov
cmpsb
pop
push
xchg
pop
fisubrs
mov
xor
in
shl
mov
fs
adc
dec
int3
movsb
sbb
ror
ret
adc
adc
sub
outsb
fucomi
inc
ja
sbb
aaa
cmpsl
test
mov
push
xor
loope
mulps
xor
jle
adc
mov
das
inc
out
imul
xorb
repz
loop
leave
or
xlat
xchg
lret
add
cmp
lret
leave
pop
jge
mov
mull
fiadds
mov
fdivl
icebp
mov
cld
fistps
mov
push
jbe
cwtl
or
data16
mov
xchg
nop
cmpsb
les
in
or
aam
insb
xor
adc
cwtl
sub
mov
lock
rclb
mov
imulb
out
mov
cmp
xchg
adc
loopne
lods
in
mov
rorb
insb
cmp
testl
mov
cmc
adc
xchg
sub
stos
cli
mov
test
adcl
inc
mov
sti
xlat
mov
push
mov
cwtl
bound
adc
jno
scas
inc
popa
out
jge
data16
jae
shrl
mov
dec
test
out
xor
les
out
mov
jge
jle
fucom
addr16
cmpsb
clc
mov
lret
scas
mov
pop
mov
lods
lds
icebp
xor
and
xchg
add
mov
test
dec
add
pushf
stos
sub
push
clc
dec
cld
dec
or
mov
test
pushf
add
sbbb
mov
sbb
push
sbb
and
jnp
aas
mov
iret
xchg
push
sub
push
les
cmc
cmpsl
jge
mov
xor
cmp
sub
fdiv
jns
jg
popf
add
lret
push
cmp
push
lods
cmc
push
inc
mov
test
pop
out
call
xchg
or
push
xchg
nop
mov
out
aam
arpl
jge
in
rorb
out
movb
in
outsb
lahf
negb
xchg
pop
dec
push
push
repz
pop
add
bound
mov
push
push
sub
popf
sarl
outsb
hlt
jns
lods
xor
mov
aad
xor
lahf
adc
adc
sub
mov
test
sub
or
jno
pop
xchg
fs
enter
or
push
push
aas
jb
mov
dec
pinsrw
push
mov
xchg
cmpsl
scas
subb
xlat
sbb
sub
dec
sti
and
xchg
push
mov
xor
xchg
movsl
pop
add
cs
filds
push
sub
test
in
int
jae
imul
cmp
jp
or
test
mov
cmc
cmp
test
push
in
pop
fwait
and
lahf
mov
test
lock
sbb
faddp
push
push
push
ljmp
xchg
aad
sub
cltd
sbb
and
sbb
cmpsl
insl
data16
sbb
mov
push
daa
add
and
mov
pop
sti
lahf
dec
xchg
inc
repz
lods
clc
jmp
xchg
outsb
int
enter
or
mov
std
xor
push
lahf
push
xlat
mov
or
in
push
sti
stc
inc
shl
xor
and
out
out
add
push
in
sbb
iret
shll
lret
mov
jecxz
out
repz
testb
or
repz
in
lea
lret
jae
mov
movsl
mov
lret
xor
xor
jo
popa
lea
rcl
bound
xchg
xchg
jo
xchg
lret
mov
clc
adc
movsl
insl
in
cltd
aaa
mov
and
or
loope
jg
ret
push
fistl
pop
jecxz
arpl
ret
adc
mov
les
and
add
out
roll
in
data16
sbb
sbbb
push
xor
jmp
dec
rol
ljmp
pushf
add
or
leave
mov
in
mov
sbb
xor
lret
mov
mov
out
sub
push
jno
jecxz
lcall
pushf
xor
push
push
daa
out
loopnew
mov
sti
pushf
cmp
and
sbb
jecxz
rorb
subl
es
pop
ss
adc
stc
jmp
mov
jno
mov
shrb
cmpsl
add
in
shlb
fildl
aam
xchg
pushf
cli
lods
pushf
pop
jl
and
xchg
cli
fldcw
lret
outsl
sub
bnd
push
push
add
dec
bound
or
mov
adc
int3
cmp
push
dec
test
cmp
icebp
jmp
adc
xchg
fstp
mov
adc
movsl
adc
mov
push
adc
invd
mov
popf
jmp
loop
xchg
inc
stc
lret
push
sbb
xor
xchg
fbld
imul
and
mov
cmp
add
outsl
fistpll
xor
jg
mov
cwtl
lods
push
push
push
xchg
jmp
js
push
sarb
jl
dec
mov
mov
sbb
xchg
fisubl
int3
cmp
scas
sbb
adc
mov
ja
icebp
movsl
popa
xor
fildl
cmp
cld
sbb
loopne
out
jne
imul
test
in
adc
pusha
idiv
popf
xor
pushl
into
lret
in
cmpsb
mov
pop
cwtl
dec
pop
dec
ja
mov
es
out
in
cmpsl
enter
stc
mov
dec
pop
call
shl
cmp
movsl
adc
jp
mov
sub
sar
clc
xor
pop
shlb
in
out
push
sbb
stos
fisubrl
test
arpl
movsb
notb
fld
in
iret
mov
mov
xor
sti
enter
out
es
dec
data16
add
sahf
cwtl
movl
cltd
jle
pop
andb
cmpsl
jle
ret
in
xchg
adc
sahf
or
std
mov
xchg
iret
pop
leave
mov
sbbb
movsb
bound
stos
lret
xchg
mov
inc
push
or
add
xor
mov
inc
jl
idivb
movsb
sub
mov
add
inc
cli
sbb
arpl
mov
or
push
mov
int3
and
xor
inc
mov
jbe,pn
lds
adc
cld
push
fsubl
mov
test
lahf
stos
enter
mov
sbb
andl
jle
imul
mov
sub
add
push
mov
jecxz
iret
fisubs
bound
jno
xor
fstps
adc
ret
mov
and
sbbl
lock
mov
jne
movsl
popa
cmp
mov
xchg
out
cmp
jmp
movsb
sbb
jp
lret
lahf
cmp
or
cmp
pop
mov
adc
xchg
xor
pop
jg
cmp
stc
ljmp
mov
jg
aad
and
les
daa
loopnew
nop
test
lods
xchg
add
popl
adc
push
into
cmp
test
jb
inc
add
lods
in
lcall
lcall
or
mov
adc
and
iret
or
fldl
popa
sbb
pop
adc
cmpsl
mov
mov
push
and
insl
push
cmpsb
sbb
aam
mov
cmp
sbb
xor
inc
out
sbb
scas
pusha
sub
popa
and
sbb
imul
pop
imul
xchg
dec
mov
testl
and
aaa
je
scas
sarl
outsb
and
es
pushf
push
inc
mov
imul
jle
or
jo
es
dec
aas
dec
inc
ljmp
xor
add
add
xlat
pop
loopne
lahf
stc
int3
or
push
sub
fists
pop
insl
insb
dec
int
dec
int
popf
rol
addl
test
pop
jnp
push
mov
nop
das
andps
push
adc
loope
jmp
or
xchg
mov
negb
fisttps
mov
flds
in
jmp
test
inc
xchg
xchg
cmc
xchg
cmc
mov
sbb
dec
mov
pop
loopne
fistl
fcmovu
or
lock
mov
or
or
data16
cmpl
scas
push
loope
xor
jl
ds
cmpl
mov
test
stos
pop
stc
flds
decb
dec
out
sbb
pop
in
imul
in
xor
std
sub
xor
push
imul
test
mov
jecxz
push
das
or
mul
and
fcomi
imul
out
add
jns
mov
aas
dec
sbb
and
fcmovb
lock
pop
popf
add
cmp
pop
fcmove
aaa
lods
push
mov
mov
add
sub
mov
cwtl
mov
jnp
cltd
cs
sbb
or
mov
dec
fisttpl
loopne
mov
cmp
jno
xor
xchg
stc
or
out
dec
dec
or
add
xlat
mov
inc
repnz
cmpsb
sbb
mov
and
adc
in
das
fimull
outsl
test
cmc
bound
and
push
dec
xor
fstp
out
into
cli
scas
pop
push
out
add
stc
les
mov
daa
adc
or
insb
sbb
loop
outsb
cmpsb
bound
in
mov
dec
in
lods
xchg
popa
inc
mull
lcall
xor
and
push
sti
cmp
jl
fsubl
sbb
sub
insb
pop
mov
mov
jle
inc
mov
mov
and
sbb
enter
mov
jl
push
iret
lret
bound
mov
jb
imul
inc
pop
push
lods
inc
pop
in
jns
mov
push
sub
jp
outsb
lods
push
xchg
out
ja
push
jg
sahf
mov
dec
dec
mov
es
iret
add
mov
mov
in
aaa
jno
mov
cmpl
fwait
push
inc
mov
bound
xchg
test
lock
lods
pop
jmp
sub
lds
push
fstps
cli
mov
lcall
push
bound
aam
mov
out
push
hlt
adc
cmp
faddl
push
pop
inc
and
loope
js
call
jb
loope
sub
xchg
jle
nop
jecxz
push
jg
adc
push
pop
stos
jecxz
mov
pop
lret
dec
out
pushf
call
aad
stos
arpl
jmp
cmp
mov
daa
jp
sub
out
mov
xchg
xchg
adc
sub
add
push
stos
rol
xor
inc
fwait
es
mov
pop
dec
enter
fwait
and
bound
outsl
fldenv
fsubrl
xor
out
push
nop
push
inc
dec
mov
inc
mov
cmp
cld
or
rclb
imul
pop
mov
outsb
out
fsubr
test
sarb
into
xor
popf
xchg
sbb
or
lea
xchg
ror
insb
add
out
mov
insb
jns
push
aas
popa
xchg
jp
repnz
cld
aad
and
ficompl
fsubl
fisttps
add
xchg
insb
vmovddup
sub
dec
push
mov
push
xchg
lcall
daa
shl
sub
mov
lret
repz
test
push
inc
mov
sub
rorl
add
leave
int3
aam
and
jge
sub
pop
mov
push
pop
jmp
cli
ja
or
mov
test
outsb
mov
cmp
lods
daa
push
out
std
enter
sbb
imul
dec
or
mov
push
in
fs
shll
inc
popf
cmp
lock
mov
mov
dec
fwait
cltd
mov
jnp
ljmp
jb
adc
sbb
dec
pop
fsubrs
push
movsl
jns
mov
xor
jl
movl
jmp
cmp
inc
out
mov
mov
pop
pop
push
aaa
push
or
push
push
fsubl
popa
adc
mov
push
add
jge
test
out
mov
mov
cmpsb
sbb
inc
fnsave
push
xor
dec
imul
jmp
push
ja
popa
push
pop
jmp
lcall
sbb
enter
int
idiv
loop
sub
jns
lods
inc
mov
outsb
pop
xor
xchg
xchg
pusha
jnp
ss
sub
scas
inc
out
pslld
ret
in
inc
lret
mov
popf
add
dec
mov
ja
lcall
mov
fbld
mov
adc
cmc
or
out
or
int
push
dec
std
jl
pusha
cmp
sbb
push
out
cld
jne
test
jge
imul
mov
add
std
ja
add
mov
or
int3
out
pusha
cld
sbbb
mov
xor
sbb
inc
push
add
sub
and
mov
lret
push
mov
xor
int3
jns
fcom
and
sbb
mov
and
xlat
xor
push
jae
xchg
push
scas
divl
arpl
cwtl
adc
push
lahf
fdivrs
or
xchg
jns
ds
sub
xor
fiadds
add
sbb
push
aam
jp
pop
lods
pop
push
mov
pop
mov
ret
inc
xchg
sub
inc
jl
dec
add
dec
outsb
ljmp
pusha
or
or
dec
movsl
xor
sti
pusha
js
repz
xlat
or
sti
sbb
rclb
cltd
repnz
dec
cwtl
bound
jecxz
cmp
shrl
add
insl
and
sub
fwait
pusha
div
rorl
add
hlt
stos
xchg
inc
scas
cwtl
or
jae
sub
push
sub
int3
inc
push
bound
cmp
test
pusha
push
fisubl
imul
adc
cmc
mov
jns
dec
insl
jecxz
pusha
std
lock
loop,pn
add
mov
repz
adc
adc
or
sub
cli
lods
imul
push
push
cmpsb
jmp
xor
pop
stc
mov
mov
into
sub
fldenv
or
xor
lods
pop
adc
into
rclb
scas
pop
push
and
dec
pushfw
addr16
sub
imul
dec
fwait
inc
cmc
fcmove
not
mov
lock
cmpsb
push
sub
pop
push
xor
scas
gs
push
aas
icebp
call
jmp
pop
aaa
sbb
pop
fnstenv
push
xor
cmp
jge
and
and
cmp
lods
stos
nop
icebp
adc
or
cmpps
mov
enter
addr16
jo
sbb
xchg
add
in
stos
es
push
jne
cmpsb
test
cmpsb
adc
andl
scas
adc
mov
or
insb
xor
or
and
mov
mov
insl
notl
data16
jge
cmp
mov
mov
lds
aad
cs
mov
cli
jecxz
xchg
push
mov
and
fsubrl
dec
push
sub
insl
jge
cmp
leave
movsl
cmpsl
je
jbe
hlt
xchg
mov
add
hlt
fildl
roll
add
pop
aam
ret
jae
andnps
repnz
in
loop
or
shll
pop
daa
test
dec
scas
lcall
data16
mov
test
and
and
xorb
stc
and
inc
mov
sub
lods
and
mov
call
mov
dec
pop
sbb
cltd
jge
lcall
movsb
pushf
lea
fwait
push
cmpsl
dec
stc
aad
enter
icebp
sbb
xchg
mov
insb
add
jo
sbb
inc
mov
stos
dec
dec
mov
or
dec
sub
lahf
jb
lock
dec
aas
cmp
mov
inc
mov
cmp
inc
fwait
xchg
lcall
pop
arpl
sbb
aad
fstps
xor
xchg
scas
jne
fwait
popf
mov
xor
in
dec
movsl
or
or
jg
je
push
jb
lret
ss
popf
es
mov
sub
xchg
jp
cwtl
pop
jbe
push
xor
insl
outsb
stos
stos
xor
mov
jo
lahf
push
add
jnp
outsb
pop
ljmp
cmp
icebp
mov
push
push
jb
cmpsl
jne
dec
std
jp
push
repnz
ds
jmp
repz
jno
inc
push
jno
lds
adc
pop
mov
and
bound
dec
addb
jae
orb
push
mov
mov
pop
add
push
and
xor
cmc
mov
sub
rcrb
push
lahf
out
shlb
sti
fs
inc
pcmpgtd
subb
jo
jne
xchg
out
sub
pop
cld
push
popf
das
push
pop
ret
adc
push
rcll
daa
push
aad
sbb
ss
jle
inc
popa
pop
stos
mov
jecxz
sbb
insl
cmc
push
pusha
repnz
pop
mov
add
xchg
cmp
fadd
xor
aaa
in
stos
addr16
jae
mov
lret
call
fistpl
xchg
std
iret
and
xor
xor
inc
stos
jae
push
jp
enter
lea
std
lods
fcomps
xchg
mov
cli
fiadds
stos
stos
into
inc
add
dec
inc
push
out
pop
jecxz
mov
pop
xchg
mov
mov
ljmp
decl
lock
cmp
dec
aam
lret
push
sbb
cmp
arpl
and
mov
fcoms
dec
sbb
inc
mov
and
sbb
jae
mov
nop
dec
push
and
std
ret
lea
inc
sub
adc
iret
add
aad
jecxz
mov
inc
loopne
add
lods
xor
jp
mov
mov
les
inc
fsubp
hlt
movsb
adc
cwtl
or
in
xchg
add
xor
add
inc
sub
sub
scas
cmp
jno
pop
jnp
mov
sbb
leave
xchg
mov
sarb
mov
xor
fists
movsl
push
das
ss
mov
pushf
mov
lock
push
adcl
jp
or
add
ja
stos
out
inc
jmp
scas
aaa
scas
inc
movsl
pop
push
adc
add
lret
insb
repnz
pusha
jl
je
lods
pop
sub
xlat
dec
dec
stc
jo
mov
inc
mov
lahf
into
subb
mov
cwtl
repnz
dec
jbe
mov
push
add
ljmp
enter
adc
jb
filds
cmc
cmp
jo
mov
fidivs
aam
cmp
xchg
imul
jg
fcmovnu
xchg
dec
mov
xor
cmp
movsl
movsl
stos
pop
repnz
enter
fstpt
dec
loop
bound
add
xchg
mov
ret
fwait
iret
inc
cli
pop
pop
push
out
xchg
cmpsl
xchg
jne
mov
add
inc
mov
inc
fisubl
insb
icebp
test
mov
sub
stc
pop
ljmp
dec
in
push
repnz
dec
mov
mov
je
pop
or
movsl
daa
ret
cmp
scas
inc
pop
lock
jno
sbb
push
subb
xchg
andb
dec
push
movsl
lret
shrb
leave
jle,pn
adc
jmp
std
jmp
xchg
mov
xor
sbb
roll
movsb
nop
out
sahf
sub
fisttpl
pop
mov
aas
clc
gs
fildl
adc
dec
das
push
cmpsl
arpl
pop
out
inc
xchg
int
adc
add
jns
sti
cmp
pop
mov
inc
sub
add
cmpsb
mov
pushfw
fmull
and
notb
or
xchg
scas
adc
mov
adc
jp
xchg
pop
jo
fs
gs
lahf
fs
mov
fldz
lods
int
sub
mov
int3
cmpsl
pop
push
fidivrl
adc
push
test
stos
adc
repnz
or
push
test
sub
rorb
imul
test
jns
imul
imul
cmp
ret
jnp
mov
and
or
sbb
add
mov
mov
jnp
add
mov
outsb
iret
add
jle
fnstsw
outsb
mov
mov
cmp
adc
and
inc
and
cmp
lahf
lock
pop
adc
int3
lret
mov
lock
cli
jbe
test
mov
pop
scas
mov
insb
movsb
dec
lret
out
dec
mov
stos
pop
insl
in
daa
test
cltd
les
insl
mov
mov
ss
ja
mov
icebp
cltd
lea
xchg
mov
in
jne
jnp
test
test
imul
sbb
xchg
adc
jecxz
movsb
mov
cmc
das
or
fs
sbb
mov
pusha
into
and
jae
cwtl
in
cwtl
cli
fstl
in
pop
push
lret
scas
fwait
pop
stc
xchg
inc
loop
xlat
mov
lahf
push
aam
or
leave
mov
dec
rorb
pop
outsl
ret
imul
push
mov
outsb
push
mov
xlat
popf
in
stc
sub
jo
add
fnsave
mov
hlt
and
imul
aas
and
lock
mov
cmp
jno
les
mov
mov
sub
outsl
adc
divl
sbb
repnz
cmp
cwtl
outsb
fistpll
nop
inc
in
mov
jbe
out
xor
fisubs
iret
addr16
mov
inc
xchg
cmp
or
sub
push
iret
xlat
gs
cwtl
movhps
dec
lret
inc
out
pop
add
ja
insl
out
enter
push
sbb
call
imul
popa
dec
push
mov
sarl
add
cli
sbb
inc
mov
mov
sub
dec
sub
jns
cwtl
dec
fiadds
sub
mov
xchg
shrb
sbb
ss
pusha
jnp
imull
loopne
sbb
jnp
pop
add
jo
and
in
or
or
lods
arpl
rcll
repnz
pop
orb
sti
lea
sbb
popa
sbb
dec
inc
movsbl
mov
xchg
mov
mov
fsubrs
sub
repz
xchg
nop
xor
inc
repnz
into
pushf
mov
adc
aad
jbe
jg
cmpb
pop
and
negl
adc
fimuls
out
in
dec
fnsave
and
loopne
test
mov
adc
sbb
push
dec
mov
aas
fistpl
add
pop
cmp
xor
popa
mov
cmp
or
sbb
sbb
and
aam
push
xor
les
ficoml
cwtl
xor
sarl
test
jno
mov
js
ficomps
adc
frstor
inc
loope
add
leave
adc
icebp
sub
repnz
daa
bound
cmp
nop
scas
xchg
lcall
xchg
jl
sub
or
sbb
rclb
jle
dec
rcl
pop
or
out
cmp
xchg
lock
pop
lret
push
adc
push
loopne
lret
inc
jns
jecxz
out
or
inc
xchg
jbe
sub
dec
adc
inc
mov
add
xor
je
push
insl
out
int3
push
add
add
xchg
aas
shlb
push
lds
mov
dec
pop
jbe
push
inc
int
jge
push
into
sub
add
sbb
pop
daa
push
imul
lods
data16
pop
fnsave
adc
push
inc
push
iret
aad
xor
fmulp
sbb
repz
imul
jge
mov
sub
sub
mov
test
sub
fldl
shll
push
add
jo
mov
sub
cwtl
sub
jmp
loopne
test
or
popa
jge
fisttpll
mov
bound
daa
lea
push
mov
mov
xchg
out
into
mov
aad
sub
push
adc
js
and
pushl
std
idivb
pusha
pushf
int
jbe
outsb
jp
push
add
push
mov
mov
mov
fidivrs
ret
xchg
push
lcall
push
pop
push
cwtl
das
pop
xor
hlt
push
aam
loope
pop
repz
shll
cwtl
jge
add
repz
push
outsb
xchg
fmuls
out
fwait
inc
ret
rorl
cli
scas
aas
jo
xchg
cmp
ljmp
mov
into
fstp
test
and
repz
shll
mov
jb
push
int3
sub
push
adc
sub
sub
or
lret
inc
std
stc
out
and
add
idiv
bsr
adc
jp
jl
adc
stos
cltd
jns
mov
sbb
lret
je
and
cmp
fs
test
push
xor
das
movsb
and
pop
mov
outsb
aad
out
push
inc
movsb
mov
sub
xor
mov
mov
lahf
loop
scas
jmp
jge,pt
adc
je
mov
sbb
shrl
jge
pushf
jo
dec
out
xor
push
loopne
in
out
push
cmc
jp
arpl
iret
movsl
sub
test
xor
loop,pn
add
cltd
stc
out
daa
int
jecxz
mov
or
mov
pop
fcomp
aad
cwtl
sub
aaa
jmp
sbb
push
inc
pop
aaa
cmp
leave
scas
and
xchg
in
or
adc
or
test
scas
shll
jno
and
push
arpl
loop
and
mov
cmc
ss
std
mov
or
dec
dec
out
mov
in
pop
fucomi
scas
sbb
lods
rcl
and
cmpsb
lods
dec
loope
mov
mov
pop
imulb
icebp
dec
imul
rcl
outsl
push
and
test
jg
inc
push
addl
xchg
pop
adc
add
mov
cs
and
jmp
pop
fbld
mov
add
es
outsl
mov
inc
sarb
shr
rcrb
xchg
inc
xchg
adc
mov
mov
out
fmuls
and
loope
xchg
inc
push
cltd
xchg
mov
repz
je
in
xchg
out
ret
mov
adc
popf
ret
mov
dec
mov
sub
or
adcl
repz
pop
mov
insl
jp
mov
pop
cmp
xchg
inc
sbb
insl
and
jmp
shr
scas
xor
dec
mov
pop
adc
sbb
test
loopne
xor
jb
sahf
outsl
add
push
xchg
idivl
popa
es
scas
rorl
cmp
pop
mov
push
xlat
dec
push
test
xchg
les
lock
out
cmp
das
jp
enter
push
out
lahf
outsb
push
jns
and
push
insb
pop
rcrl
mov
fisttpll
xor
xor
sub
mov
lret
add
sbb
xchg
hlt
sbb
fdivs
xchg
add
add
idivl
jo
scas
pop
arpl
sbb
and
addr16
mov
sbb
ficomps
shl
cmpsb
out
mov
xlat
sub
xchg
shl
mov
jmp
pop
xchg
lods
dec
aas
popa
test
scas
pop
xor
add
out
xchg
push
cli
jge
sub
jno
lds
cmc
inc
test
loope
pop
ja
pop
jnp
scas
ss
inc
add
cwtl
mov
pop
out
mov
bound
mov
scas
popf
lahf
push
in
out
fucomp
sub
into
test
mulb
fnsave
cmp
xor
xchg
xchg
fwait
sets
daa
jns
adc
shl
test
fisubrl
pushf
jo
into
ss
sahf
push
xor
rcrl
or
dec
or
arpl
dec
ljmp
dec
or
pushf
out
das
cpuid
jns
icebp
push
jno
test
shl
cld
shrb
cmp
sbb
lods
lahf
cmpsb
mov
or
push
rcll
and
xchg
out
pop
enter
int
pop
dec
jbe
nop
insb
cmp
scas
inc
lods
and
sub
push
pushf
mov
movsl
fnop
push
aam
stos
or
test
arpl
test
dec
lahf
int3
fs
inc
nop
arpl
scas
mov
lret
mov
xchg
int
sub
push
jo
js
lret
push
fisubs
pushf
add
test
dec
dec
push
xchg
and
sbb
ja
cmp
or
jecxz
adc
pop
aas
mov
inc
cmp
ds
push
dec
or
xor
or
sahf
push
cltd
fcoml
pop
test
sbb
test
cmp
imul
call
inc
pop
inc
addr16
push
xchg
xchg
xlat
adc
js
push
loope
add
in
jnp
sbb
test
nop
mov
das
popa
xchg
sbb
sarb
adc
and
loope
sbb
js
rorb
adc
or
dec
xchg
in
jge
int
ret
aas
mov
fadds
sub
push
mov
dec
xchg
pop
fsubs
lods
ud1
inc
sbb
or
fdivs
mov
int
push
inc
into
jp
insb
out
clc
and
mov
in
mov
mov
xor
push
mov
inc
addr16
in
dec
pop
fists
dec
adc
pop
xlat
or
iret
out
jne
xor
pop
jmp
lcall
pop
add
pop
sahf
fiadds
std
push
lea
or
mov
pop
in
in
stc
hlt
sbb
mov
mov
inc
mov
notb
lods
inc
fsubrp
push
roll
inc
outsb
in
aam
mov
pop
jnp
outsb
daa
sbb
cmp
mov
shrb
mov
pop
inc
insb
loopne
and
push
mov
loope
leave
xchg
dec
sarl
push
lret
aad
cmpsb
lret
cmc
adc
lret
xchg
in
fs
or
inc
js
xlat
add
imulb
dec
cwtl
lods
mov
jae
adc
mov
or
add
loopne
add
cmpsl
mov
clc
jb
xor
sahf
arpl
outsb
mov
dec
inc
test
mov
rol
inc
mov
and
dec
sbb
test
ljmp
or
cmp
test
mov
inc
jbe
add
xchg
mov
sahf
rorl
jb
xor
jo
xor
and
bound
adc
cmpsl
js
mov
mov
pop
popa
call
sub
inc
pop
cmp
inc
clc
sub
add
push
dec
sbb
jbe
adcl
imul
imul
cmp
les
jno
out
das
add
rcll
mov
filds
pop
or
and
push
and
pop
and
loopne
xlat
call
ficoms
jmp
cmc
mov
sbb
int3
jnp
push
ja
mov
insb
add
mov
test
xchg
mov
mov
add
stos
mov
add
jmp
push
mov
js
xchg
fs
sahf
jmp
mov
mov
repnz
ljmp
in
lods
sti
push
into
cmpsl
sbb
ljmp
subl
neg
add
jecxz
cld
fimuls
fistpl
and
icebp
pop
fcmovnb
fmul
scas
fs
mov
decl
lods
cltd
imul
shrb
sbb
sti
mov
hlt
pop
push
fidivs
out
or
cld
orb
sub
shrb
push
out
stos
ss
fidivs
call
repnz
xlat
movsb
sbb
xchg
cs
push
xchg
sub
mov
and
out
dec
xchg
or
les
push
mov
pop
jl
std
aad
and
xor
dec
shll
sbb
dec
mov
mov
inc
sub
je
dec
inc
scas
push
call
lcall
orb
jns
cmpsl
jle
in
cmp
push
sbb
sbb
xchg
cmp
sub
jbe
and
jle
iret
add
jno
test
test
data16
je
movsl
leave
inc
cmpsb
mov
repz
int3
loop
lret
pop
aaa
sbb
sbb
call
mov
jge
jl
outsb
mov
in
out
xchg
sahf
and
xchg
lret
sub
push
cmpsl
shll
or
inc
jmp
pop
insb
cmpsb
mov
and
cmp
xchg
sbb
inc
push
cld
movsb
adc
jb
mov
sub
mov
iret
pop
pop
mov
and
neg
std
pop
push
pusha
mov
cmp
cmp
sub
jns
lods
stc
lods
adc
aaa
xor
call
scas
outsb
xlat
dec
addr16
test
stos
std
mov
xchg
jbe
mov
xchg
mov
xchg
dec
mov
fs
imul
jp
aas
or
push
dec
lods
rcrl
out
std
mov
mov
lea
outsb
movsl
out
nop
xor
mov
inc
inc
inc
and
dec
add
or
clc
clc
adc
jnp
and
scas
ds
cmc
stos
rorl
and
sbb
out
push
icebp
ja
and
cmp
jne
pop
jp
test
jb
sar
outsb
je
pushf
cld
clc
test
out
ja
imul
mov
dec
sbb
scas
and
pop
mov
sub
mov
cmp
out
scas
fcomi
or
jb
add
movsl
stos
dec
xor
mov
mov
jbe
jno
adc
cmp
xor
popa
scas
call
stc
leave
cmp
and
xchg
ss
mov
mov
mov
pop
test
cmp
xor
ja
cmp
call
add
adc
mov
fbstp
stc
cs
adc
xchg
ret
movsb
test
rcll
dec
push
std
lods
inc
int
mov
movsl
popa
or
xchg
rcrl
rcr
pop
in
in
push
test
lods
lds
insl
and
iret
shlb
pop
adc
mov
into
cmp
inc
cmp
shrl
push
cmpsb
push
outsl
pop
jae
arpl
jnp
push
pop
sbb
ret
mov
rolb
aas
xlat
lods
add
add
inc
mov
mov
das
or
lds
inc
fimull
lds
gs
sarl
xchg
jae
fisubs
dec
xor
sar
cmpl
std
leave
ret
pop
pusha
mov
loopne
xor
pushf
imul
aaa
enter
call
mov
pusha
mov
pop
inc
leave
adc
pop
hlt
sbb
adc
cs
clc
cmp
mov
scas
in
ja
add
push
insl
jle
in
push
addr16
inc
and
cwtl
sub
add
daa
rcrb
or
and
shrb
in
cli
outsb
mov
sbb
test
adc
aaa
inc
xor
add
add
faddp
bound
dec
jae
mov
enter
dec
and
mov
mov
int
inc
rorb
sub
pusha
mov
add
add
mov
mov
into
and
mov
jnp
repnz
dec
mov
test
jne
mov
xchg
xor
lods
or
lret
xchg
ss
xor
subl
sbb
fcmovnbe
dec
adc
shlb
push
xchg
and
pop
test
insl
out
cmp
mov
imul
hlt
jl
mov
mov
lea
cltd
push
add
and
movsb
repz
dec
dec
push
jns
mov
shrl
outsl
jge
add
mov
sbb
pop
or
in
imulb
pop
xchg
loop
push
cmp
jb
jbe
xchg
arpl
xor
repz
xor
adc
shrl
out
push
aad
push
push
insb
pop
shll
aaa
shll
in
mov
xor
bound
rclb
fprem1
push
adc
inc
jne
xchg
add
out
icebp
dec
in
loopne
jbe
xchg
mov
out
hlt
jp
icebp
push
adc
mov
cli
mov
imul
cmc
mov
add
push
push
and
das
loopne
imul
rcll
ds
inc
jecxz
add
cmp
into
push
idiv
cmp
xchg
cmpsb
push
inc
jp
push
dec
xchg
repz
jae
out
in
int
cmpsb
dec
rorb
out
mov
cmp
inc
add
cmp
leave
jecxz
xchg
popa
sbb
sbb
xchg
fdivl
in
int
jmp
mov
out
dec
pop
jns
rcrl
add
insb
pushf
xor
jns
mov
test
adc
cmp
mov
ja
test
shrl
aad
sub
pop
imul
and
lods
add
push
arpl
sarb
aaa
or
or
mov
icebp
add
fcom
xchg
xlat
mov
sub
jl
jmp
arpl
inc
mov
and
pushf
inc
or
pop
sub
mov
rcrb
jb
add
inc
movsb
imul
scas
out
std
and
jle
xchg
xor
inc
mov
in
jle
pop
mov
ss
add
mov
iret
scas
lahf
movsl
lock
xchg
enter
push
jnp
movsl
cmpsl
add
mov
shl
stc
je
setns
in
jo
sti
cmp
push
add
mov
in
pop
mov
stos
push
sub
cmp
sbb
and
xchg
adc
xor
push
and
outsb
jp
das
push
ja
fnstenv
xlat
push
stc
mov
popf
std
sbb
imul
cmpsl
fldt
rcr
fs
jle
pop
sbb
aam
aam
popa
nop
dec
test
sub
daa
or
rolb
repz
icebp
andb
jns
imul
dec
sub
mov
add
data16
push
call
or
in
nop
pop
jbe
enter
mov
ljmp
push
cmp
mov
clc
cmp
sti
jmp
cmpsb
cmc
fnsave
dec
mov
sbb
fsubrl
aaa
int
icebp
xchg
jno
sbbl
repz
jae
sub
inc
adc
loope
ja
push
ljmp
jg
cld
int
sti
shlb
adc
cmp
add
mov
mov
addr16
mov
das
addr16
jns
loopne
cltd
and
dec
push
aad
call
int3
loope
shrl
add
jnp
push
push
and
cli
jns
xchg
cli
cltd
or
pusha
out
mov
imul
cli
inc
xor
cli
or
sarb
lea
jae
nop
stos
add
or
ret
ret
sub
jne
adcl
gs
pop
les
jo
xor
test
cmp
stc
jbe
inc
fmul
xor
dec
mov
or
sahf
cwtl
mov
aas
call
and
mov
push
test
push
fsts
mov
dec
dec
mov
adc
mov
lahf
fnstenv
or
and
or
sbb
ja
mov
push
mov
sub
js
test
jecxz
mov
enter
pop
ljmp
movsb
sbb
insl
ljmp
xor
inc
mov
fldl2t
stos
insb
shrl
mov
testb
xchg
dec
popa
jle
les
pop
mov
std
cmp
mov
sub
int
jp
jg
mov
xchg
push
pop
jo
adc
repz
sar
add
sbb
jo
inc
dec
stos
in
jb
cwtl
arpl
push
mov
pusha
and
sahf
jbe
inc
sbb
or
push
mov
pusha
or
stos
pop
mov
add
les
adc
frstor
mov
nop
jbe
xchg
mov
xchg
dec
rclb
xor
mov
stos
mov
jns
xor
xor
ficoml
or
jp
push
pop
out
outsl
shrb
arpl
cmc
mov
pop
jns
ja
sub
xor
mov
pop
or
sbb
or
xchg
out
mov
lea
or
mov
cmc
push
mov
sti
mov
shrb
cmp
cli
pop
fistpl
cmc
mov
cli
pusha
inc
in
stos
sub
out
mov
jae
jl
dec
cmp
std
sbb
icebp
jmp
insl
cltd
sti
xchg
es
adc
repz
push
xor
push
push
cld
xor
sub
dec
mov
lahf
or
mov
js
mov
jnp
ret
leave
movsl
xchg
dec
mov
xchg
fisttpll
adc
insl
adc
scas
sbb
dec
pop
pop
cwtl
adc
ss
adc
mov
int
fidivl
sahf
and
leave
mov
imul
ljmp
mov
cmp
das
jno
lods
cmp
adcl
loope
sbb
xor
or
xor
and
arpl
das
xor
adc
dec
rclb
sub
sbb
mov
mov
arpl
pop
call
outsl
out
jb
jp
and
loope
sbb
inc
ret
out
neg
aad
fs
iret
sub
mov
and
repnz
hlt
inc
jb
push
stos
pop
dec
add
xchg
lods
xchg
loope
adc
aaa
and
pop
jge
divl
hlt
js
lea
jbe
lcall
jno
les
push
mov
ficomps
popf
loop
mov
insl
sub
sbb
sti
roll
or
push
call
push
dec
addr16
jo
data16
cwtl
imul
lods
mov
add
lods
mov
sub
adc
imul
arpl
sub
cli
daa
ret
xor
mov
test
jl
stc
movsl
inc
shlb
pop
pop
ret
fnstenv
lods
mov
scas
insl
shrb
imul
ds
push
test
icebp
sub
mov
pop
push
jne
ss
stos
pop
add
add
mov
and
add
sub
loop
add
add
or
test
cli
rolb
ljmp
dec
jnp
lret
negl
add
ds
add
lcall
sbb
jle
test
loopne
iret
adc
pop
inc
add
sbb
ret
lods
mov
pop
pop
lret
filds
dec
das
lcall
jp
sub
hlt
arpl
enter
add
push
js
rorl
rorl
dec
sub
out
hlt
mov
push
mov
cmp
pop
testl
std
js
push
shrl
out
test
xchg
dec
daa
xor
lock
int3
adc
in
mov
in
aam
insl
in
xchg
add
jbe
insl
ret
jmp
ret
das
mov
int3
test
fucom
cmp
das
mov
jp
inc
repnz
mov
sub
lahf
lods
or
jns
adc
ds
outsb
mov
cmpsb
pop
adcl
int
outsl
je
shrb
pop
lods
ja
add
xlat
mov
push
xor
dec
jae
sub
in
dec
inc
jp
fsubrs
notb
mov
jge
xor
addr16
or
icebp
fcoms
out
pushf
cvttsd2si
fdivr
mov
dec
imul
mov
enter
adc
inc
test
inc
xor
in
das
xor
ljmp
pop
sbb
movsl
movsb
icebp
in
inc
aam
out
ret
cmpsb
and
jb
pushf
jbe
xchg
flds
ret
adc
xchg
mov
xchg
jo
inc
lahf
adc
repnz
push
out
in
mov
xlat
rorb
mov
stc
sub
jle
or
into
cmp
fcmovu
cmp
mov
pop
push
mov
add
jg
jne
movsb
aad
shrl
push
push
in
xor
dec
fiadds
push
cmpsb
movsl
leave
arpl
adc
jns
dec
xor
adc
ljmp
push
fmull
dec
fnstcw
aam
test
mov
lahf
and
mov
jbe
aad
jg
mov
push
add
xor
pop
jg
repz
arpl
mov
xchg
push
dec
scas
mov
cs
add
add
loop
stc
aam
xchg
lret
mov
jmp
dec
loop
nop
dec
repz
adc
fists
cld
fwait
xor
outsb
int3
out
lcall
mov
adc
push
daa
rcl
inc
jle
or
jae
imul
mov
shrl
mov
mov
jmp
icebp
push
lods
push
std
adc
mov
cmp
rolb
and
pop
mov
xor
xchg
outsb
cmp
sbb
call
outsb
xchg
cmc
push
shlb
mov
lods
mov
cwtl
jno
add
stc
jmp
xchg
iret
xchg
cmp
jbe
clc
inc
xor
lahf
dec
out
jno
xchg
pop
out
jecxz
dec
jae
lret
ret
clc
aam
xchg
insb
out
add
fs
mov
mov
or
jmp
jb
xor
jge
push
xchg
mov
shlb
icebp
inc
xlat
pop
mov
inc
mov
sub
pop
icebp
mov
out
xchg
sahf
mov
xor
fwait
into
cmp
dec
out
jecxz
orb
aam
cmc
xchg
test
mov
pop
and
lret
jne
and
and
lods
ljmp
push
int3
jl
fiaddl
ja
jl
scas
shrb
sti
mov
mov
ds
mov
adc
push
jl
dec
loopne
ror
xor
rolb
dec
pop
pop
in
aas
out
les
sbb
push
mov
push
dec
pop
cmp
push
inc
aad
mov
cmp
cmc
test
rcrl
adc
cli
movsl
sar
subl
mov
mov
sahf
inc
or
lock
mov
sbbb
pop
jo
xor
repnz
xchg
or
outsl
push
lods
inc
push
mov
mov
rcll
nopl
jno
or
mov
dec
sbb
fisttpll
dec
iret
lret
push
add
xor
loopne
cmp
inc
jns
outsb
jg
sub
add
cmp
pop
shll
repz
in
arpl
and
sbb
test
cwtl
xlat
aad
push
arpl
cmp
pop
push
push
cmp
das
loope
insb
stos
daa
insl
cs
movsl
jge
sbb
js
adc
mov
cli
adc
cli
pushf
xchg
cmpsb
xchg
insb
popa
loop
lcall
ficoms
pop
faddl
cld
mov
pop
sti
xor
lea
popa
out
mov
aas
shlb
iret
imul
call
sub
push
inc
test
lret
adc
or
jmp
lret
pop
add
jne
adc
jbe
scas
mov
mov
mov
xchg
jo
and
sub
shlb
loopne
jns
leave
push
es
xor
mov
fdivs
sub
inc
pop
call
popf
sub
inc
loope
push
push
sbb
inc
add
mov
icebp
je
or
or
cmpsl
lret
outsl
sub
shll
inc
fs
cwtl
or
mov
sahf
mov
mov
push
ficoms
jae
popf
fsubl
dec
sbb
and
and
cwtl
aad
pusha
jae
and
push
sbb
addb
mov
shll
jmp
mov
jp
repz
cli
add
xchg
xor
pop
xchg
lret
lret
fs
orb
ss
mov
mov
popf
or
push
adc
fcoms
mov
into
test
inc
adc
rcrb
sti
inc
pusha
scas
push
mov
cmp
sub
pop
dec
testl
jmp
or
or
add
inc
cmc
fs
ret
mov
jmp
test
sub
out
js
dec
cmp
fiadds
xor
push
les
xor
mov
fisubrl
mov
sbb
push
test
pop
in
dec
adc
aam
je
pop
pusha
popa
out
gs
repnz
sub
dec
idivl
insb
gs
imul
fidivl
fsubrl
aam
lret
test
in
ja
fnstenv
es
pop
jmp
xchg
outsb
les
pop
jns
icebp
lret
xchg
cmp
dec
dec
sub
xor
dec
lahf
fmull
xchg
lock
sbb
cmp
push
addb
push
fcompl
in
dec
enter
jecxz
adc
fcomip
add
and
pop
inc
dec
pop
add
ljmp
out
xorl
leave
jne
std
sub
aad
and
popf
jnp
lock
pushf
popf
mov
outsb
push
loopne
lahf
dec
cli
sub
popf
mov
inc
repz
cmpl
mov
stos
sbb
int
fisubrs
push
pop
xor
sti
mov
mov
in
les
repnz
movsl
leave
lahf
sub
cltd
enter
jecxz
push
test
jb
aam
xchg
test
xchg
les
cmp
jne
rorl
scas
sbb
jecxz
dec
shrb
sbb
add
sub
xor
push
leave
leave
and
jnp
outsl
roll
out
jge
or
adc
cmpsl
movsb
pusha
lret
iret
aaa
xor
mov
aas
push
lock
cmp
pop
fwait
inc
loop
out
fstpl
pop
arpl
movsb
sahf
stos
and
test
aad
dec
test
add
sbb
std
js
jmp
dec
mov
mov
mov
mov
cmp
repz
push
ret
xchg
or
cli
subl
faddp
and
lcall
leave
repnz
pop
rcrb
dec
or
cld
mov
dec
test
pop
test
aaa
ffreep
push
decl
mov
jbe
iret
pop
cmp
jns
insb
cmc
lods
xchg
mov
add
sub
sbb
adc
das
sub
xchg
sbb
adc
lcall
std
movsl
inc
mov
test
lods
jecxz
xchg
jo
sar
dec
rorb
clc
xchg
xchg
jmp
andl
sub
mov
xchg
popf
ss
lret
fucom
fisttpl
jmp
fwait
jge
outsl
iret
fdiv
orb
xchg
in
add
out
aaa
jns
mov
or
sub
loop
subb
shll
push
sub
fmuls
push
xchg
jno
or
push
jb
sub
sbb
and
andb
in
xor
or
xor
push
sub
and
pop
out
sub
jno
add
cmp
and
xlat
cmp
and
imul
add
push
popf
mov
cwtl
inc
int3
and
add
aaa
push
jmp
cmp
out
push
sbb
and
sarl
jg
ret
xchg
dec
or
xchg
shrl
cwtl
mov
cmc
aas
mov
cmp
push
test
lods
add
les
mov
fs
int
fs
pusha
pop
repnz
jge
mov
or
movl
lret
push
sub
out
mov
and
sub
sub
popf
jb
mov
mov
gs
xor
and
cwtl
sahf
mov
jo
clc
push
adc
aas
imul
push
xchg
push
push
xchg
in
pop
stos
in
sub
cltd
dec
nop
mov
enter
mov
cmp
dec
outsb
sti
aas
mov
adc
add
pop
test
imul
rclb
cmp
sti
and
mov
inc
fistpl
test
mov
cs
jg
push
orb
cmc
shrl
andb
jecxz
push
cmp
lcall
pop
xchg
xor
rol
call
mov
sbb
adc
ljmp
cs
ret
dec
shll
roll
dec
xchg
lock
in
jge
in
xchg
pop
and
push
jl
mov
ret
xchg
mov
sub
lds
mov
adc
test
pop
lret
icebp
in
rorb
or
or
pop
lods
dec
bound
popf
sbb
int3
pop
clc
mov
out
sahf
cmp
inc
fsubr
ss
lock
lret
bound
mov
pushf
lcall
jno
push
mov
into
loopne
mov
ss
test
push
out
hlt
dec
mov
xor
dec
lods
cmp
int
push
pushf
sti
call
stc
jne
sub
test
add
xor
bound
stos
add
inc
mov
xchg
jmp
inc
push
test
pop
loope
ss
or
push
stos
loop
aad
es
ret
mov
js
mov
inc
repnz
cmpsb
inc
adc
out
mov
cmp
xchg
and
rcrl
rolb
adc
add
xor
mov
imul
in
push
decb
pmulhuw
mov
xchg
fs
movsb
cmp
inc
add
roll
stos
dec
mov
stos
rorl
movsl
ss
enter
push
jge
int3
fdivp
push
mov
aad
nop
xchg
sbb
lahf
push
inc
fstl
push
and
sti
into
jge
mov
mov
xchg
jnp
aad
imul
adc
jns
adc
in
imul
cmp
stos
inc
dec
mov
or
sbb
frstor
xor
push
aam
push
popa
bound
dec
lret
fnstsw
mov
cmp
push
push
idiv
neg
stos
jp
push
push
rcrl
cmp
stos
out
jns
arpl
test
mov
push
leave
mov
pop
clc
inc
enter
jae
aam
imul
xchg
test
std
mov
xor
xchg
xchg
icebp
and
popf
sti
add
data16
pop
add
dec
enter
cmp
outsl
rcrb
mov
push
and
jae
inc
cld
xchg
dec
mov
add
test
mov
inc
cld
or
test
outsb
dec
loopne
and
mov
loop
xchg
and
ljmp
les
stc
out
das
icebp
out
adc
sar
shlb
lods
fisubl
add
mov
mov
pop
jo
xchg
popf
lret
cld
pop
in
fwait
mov
in
cmpsl
aad
ret
and
mov
call
std
pop
lcall
in
mov
xor
lods
imul
add
push
mov
ss
pop
cltd
mov
shl
mov
jae
inc
jle
jb
aad
mov
lea
xchg
add
cmp
shrl
adc
xchg
mov
mov
loopne
rorb
jge
ljmp
lods
fsub
cmpsl
pop
xchg
cmp
cmp
into
in
sbb
sub
repnz
inc
pusha
pop
jno
lods
fdivrs
cmp
cltd
std
push
jle
push
stc
cmp
aas
cmp
lods
movsb
fs
dec
gs
stc
in
pusha
mov
xor
rolb
fisubrl
jae
add
pop
pop
jmp
sbb
or
inc
in
push
aad
aas
lods
lds
jb
mov
xchg
dec
inc
and
cli
add
jmp
stos
ljmp
dec
inc
les
cwtl
mov
cmp
cmp
sbb
cmp
xor
ror
xchg
mov
push
and
pop
mov
sub
test
jo
popf
add
add
adc
stos
jp
lahf
xor
and
cmp
fdivrp
pop
mov
add
push
lods
imul
cmp
xor
in
xor
dec
repz
sub
cmp
rol
lcall
pop
scas
or
pop
adc
add
xor
into
cmpsl
mov
aad
nop
lahf
hlt
int3
fnstsw
push
mov
out
push
pop
jnp
xchg
iret
and
push
push
mov
mov
fs
mov
push
outsl
sbbl
test
pusha
mov
inc
loope
inc
daa
push
xorl
adc
mov
jne
mov
sbb
in
insl
pusha
dec
negb
xchg
movsb
cmp
inc
sbb
inc
icebp
out
test
test
repz
sbb
out
mov
das
in
mov
sub
lahf
or
loopne
insb
test
inc
call
loope
imul
shl
mov
jb
ljmp
sub
stos
sbb
adc
pop
sub
mov
lock
stc
call
lds
jg
push
xor
add
mov
je
fcmovnu
or
xchg
dec
test
lea
inc
cmpsl
ja
clc
test
leave
jle
lcall
adc
daa
mov
and
xchg
mov
adc
test
popf
mov
lret
cmp
and
mov
cmp
push
cmp
push
adc
fisttpll
ja
sub
aaa
xchg
jnp
cmpps
sbb
cmp
mov
cmp
mov
mov
call
stos
mov
popa
or
loope
out
cmp
fwait
push
mov
cmp
adc
pop
pop
cmp
inc
and
aad
pushf
push
rcrb
mov
adc
movups
out
sbb
pop
push
inc
push
hlt
push
pushf
push
nop
out
aas
mov
lock
ljmp
adc
fs
and
mov
stos
adc
and
lcall
push
and
js
outsl
pop
jmp
dec
aas
pusha
push
cmc
mov
or
adc
rclb
xor
stos
mov
fdivl
jle
dec
inc
push
jecxz
cmpsl
mov
addl
icebp
popa
nop
cmc
and
sub
sbb
sub
aas
es
xor
imul
mov
mov
mov
mov
comiss
mov
pop
push
leave
sbb
push
dec
fimull
jp
pop
test
mov
xchg
andl
and
jle
pop
or
or
cmp
out
jo
push
mov
inc
cld
push
push
and
test
imul
jmp
cmpsl
scas
aam
mov
popf
xchg
jbe
cwtl
movsl
out
xchg
mov
addr16
lret
iret
mov
out
ds
mov
xor
ja
lcall
imul
pop
std
inc
mov
cmp
lods
lret
insb
lahf
int
ljmp
or
jbe
sti
mov
and
xor
insb
and
scas
cmpsl
xor
dec
mov
jle
sahf
add
lods
mov
je
pop
aaa
mov
xor
scas
add
add
test
data16
mov
sti
andb
sub
iret
test
fistpl
lods
js
daa
addr16
xor
pop
daa
inc
push
push
mov
imul
cmpsb
dec
enter
fst
jb
inc
cmp
mov
out
rclb
and
xor
sub
push
repnz
xchg
inc
xor
and
push
int
dec
jnp
or
mov
adc
cmp
in
xchg
popf
pushf
test
imull
mov
cmp
scas
or
aas
adc
xorl
inc
inc
pop
pop
add
jae
popf
xchg
pop
addr16
jne
imul
iret
jp
loope
cmpsb
dec
fwait
inc
xor
ja
fwait
jp
dec
addr16
push
push
pop
push
and
insb
xor
mov
cmovs
cwtl
or
aaa
mov
mov
dec
ds
lds
outsl
inc
pusha
pop
pop
frstor
adc
inc
roll
stc
jmp
sub
push
sbb
and
jno
mov
xor
adc
adc
or
out
mov
mov
fcoml
push
das
out
or
jb
push
aas
mov
pop
add
stc
pop
jmp
outsb
cmpsb
lds
cmp
adc
xor
imul
cld
aas
cmp
cmp
cwtl
mov
insl
mov
xchg
fcompl
mov
dec
and
pop
adc
cs
or
sub
stc
mov
mov
popf
call
dec
mov
imul
test
imul
lods
sub
mov
mov
pop
fcomip
or
adc
inc
das
pushf
cmp
xchg
mov
adc
leave
imul
test
pop
cmp
mov
pop
je
jo
lods
cmp
or
adc
and
mov
mov
dec
les
mov
mov
pop
adc
js
stos
mov
cli
mov
in
mov
fchs
les
mov
adc
push
fcoml
cltd
inc
mov
stos
push
lahf
mov
test
lds
cmp
and
sub
push
cli
repnz
add
sbb
cmp
xorl
arpl
jmp
icebp
sbb
dec
pop
xchg
fwait
ss
jp
mov
ljmp
pop
aam
pusha
xor
push
push
push
pop
fs
xor
jns
pop
lds
pop
jecxz
inc
mov
and
call
xor
mov
bound
jg
mov
test
cmp
scas
sub
addr16
rolb
inc
inc
movsl
mov
enter
xor
mov
push
jns
xor
mov
outsl
add
jo
add
jmp
pushf
cmc
adc
lds
pushf
inc
pushl
xor
push
iret
push
pop
sbb
lea
xor
xchg
inc
jg
adc
stos
mov
inc
or
adc
xchg
mov
jmp
mov
and
jle
clc
popf
push
mov
dec
sbbl
in
mov
sbbb
jmp
mov
repnz
in
mov
out
xchg
dec
pop
adc
push
ret
pop
aad
sub
scas
sub
jle
outsl
stc
sub
mov
cltd
call
push
loopne
and
jo
push
cmc
lcall
mov
push
fsubrp
scas
mov
lret
pop
int3
sub
jne
pop
mov
pusha
mov
pop
sub
leave
mov
xor
and
popa
add
push
ja
dec
out
ja
mov
stos
dec
xchg
jo
loopne
adc
cmp
repnz
cmp
lcall
stos
push
fadd
cmp
push
pushl
xchg
push
xchg
out
or
cltd
repz
int3
jp
clc
out
mov
dec
iret
push
xor
cmp
js
xchg
jnp
push
mov
push
sub
xor
icebp
sub
sub
jp
push
fisubl
push
fisubrl
sahf
push
or
ret
jne
mov
sub
push
negb
dec
pop
push
pop
fisttpll
fimuls
es
les
pop
xlat
fistpll
lods
pop
sub
lret
sarb
test
pop
outsl
das
fisubrs
add
loope
xchg
stos
push
addr16
cmp
int
stos
push
mov
mov
sbb
inc
mov
addr16
push
jno
lcall
and
sub
add
inc
lret
cld
sahf
scas
xchg
sbb
fisubrl
lds
aaa
xchg
aas
xchg
jbe
js
insl
repz
cli
enter
lds
pop
test
push
xchg
fcoms
mov
cmp
fwait
pcmpeqw
mov
pop
lret
fmull
xchg
out
je
movsb
fstl
pop
cmpsb
add
fsubs
or
cmp
aad
pop
inc
xlat
dec
dec
cld
daa
pop
xorb
mov
inc
xchg
divb
mov
and
gs
ret
std
cmp
shrb
or
and
test
icebp
mov
mov
popw
mov
cwtl
sub
pop
and
nop
subb
leave
imul
jmp
int
loopne
mov
out
js
cmp
pop
push
pop
stos
inc
xorb
sub
fs
aad
aam
dec
outsb
cwtl
nop
xchg
cli
or
scas
dec
and
pop
js
rcl
mov
mov
pop
repnz
pop
outsb
hlt
aaa
gs
mov
addl
adc
and
in
sbb
dec
imul
aaa
faddl
mov
pop
adc
test
jo
pop
insb
jge
cmpsb
jno
fstl
rcll
mov
pop
dec
gs
nop
loope
jle
pop
scas
and
inc
dec
sbb
rorl
push
jg
adc
adc
nop
sbb
scas
arpl
dec
movsb
push
mov
mov
push
push
pop
pop
fsts
fcompp
mov
xor
sarl
inc
aaa
lock
icebp
nop
repnz
lret
mov
stc
rcll
clc
mov
ljmp
inc
repnz
test
repz
and
mull
add
movsl
inc
imul
push
xor
or
sbb
mov
xchg
pusha
jge
push
pop
and
sub
test
inc
fisubs
cmp
adcb
pop
ret
mov
xor
and
jmp
into
push
jecxz
cmp
jb
xor
loopne
ds
movsl
add
sbb
aam
or
xchg
mov
les
repnz
sbb
stos
and
icebp
add
popa
mov
sbb
mov
xor
in
jnp
iret
pop
xchg
inc
cmp
cmp
xchg
sub
inc
sahf
out
jmp
cmp
dec
cmp
mov
bound
adc
fnstsw
in
negl
fs
xchg
mov
push
and
sbb
jl
ss
shll
inc
ja
adc
dec
insl
lea
jnp
add
or
xchg
cld
mov
or
pop
jecxz
loopne
scas
ja
inc
push
int
and
inc
rorb
fildll
les
aaa
pop
xor
push
mov
add
inc
clc
imul
jmp
mov
jle
push
inc
dec
popf
xor
int3
mov
push
mov
mov
pop
js
cli
push
dec
and
cltd
in
loope
imul
loopne
cs
pop
ret
aam
aas
fwait
test
lret
fwait
pop
dec
dec
sbb
mov
mov
js
or
insb
loope
inc
push
lods
sub
in
jg
scas
mov
mov
test
test
nop
pop
and
adc
movb
push
repnz
icebp
mov
daa
jns
movsl
imul
add
sbb
stc
sbb
mov
in
add
jbe
xchg
sbb
inc
ss
push
in
lret
xchg
xor
adcl
push
lods
dec
lahf
sub
les
cmp
push
cs
mov
xor
mov
iret
mov
add
stc
xchg
jecxz
gs
or
movsb
inc
jne
mov
pop
fmulp
dec
lods
sti
movsb
stc
jb
inc
gs
pop
js
xchg
jnp
sub
aam
mov
mov
fldcw
jno
pop
and
cs
push
sbb
iret
gs
fcmove
cmp
nop
pop
jecxz
imul
lds
pop
push
gs
mov
movsl
flds
out
pop
arpl
ret
lods
int3
cmp
push
push
xchg
inc
cltd
aas
inc
dec
fmuls
pop
lgs
and
jle
mov
insb
xor
ja
push
dec
dec
adc
scas
filds
push
cmp
or
testb
jno
lods
in
pop
adc
cmc
mov
mov
mov
lods
jne
rep
cmp
movsl
cltd
inc
fistps
aad
and
jnp
jbe
pop
lret
adc
jmp
addr16
cmpl
mov
popf
pop
adc
or
aaa
dec
imul
fnsave
xlat
aas
xchg
daa
js
add
xor
push
mov
push
aaa
js
push
out
stos
in
data16
int3
fsub
cmp
out
int
sti
insl
adc
movsl
dec
push
inc
aaa
mov
repz
jns
push
lds
pop
sub
mov
fnsave
pop
cmp
sub
push
jg
cmp
pop
aad
pop
and
jns
or
sbb
and
xchg
push
or
and
mov
lret
or
fwait
lods
sbb
rcrl
dec
mov
outsl
push
add
mov
test
decb
jecxz
pop
mov
lcall
fnstcw
sbb
pushf
pop
inc
ret
ret
mov
add
dec
iret
xchg
sub
imul
xor
nop
adc
mov
pop
sbb
sbb
out
pop
sub
or
mov
jp
nop
cmp
adc
dec
xchg
stc
jns
aas
mov
popa
mov
daa
rolb
clc
cli
clc
das
pop
mov
in
cmp
xchg
sti
mov
and
push
shrb
pusha
add
pop
sub
popa
pop
inc
arpl
ret
repz
pushf
sub
popf
arpl
mov
hlt
fbld
jle
cltd
outsl
sub
push
sti
arpl
push
loope
jle
lods
dec
add
stos
das
pop
in
cwtl
std
fs
mov
push
in
aas
scas
pop
cmp
jmp
scas
or
sahf
pop
imul
mov
push
mov
mov
lret
pop
fs
jnp
push
test
ret
jbe
loope
dec
and
pop
out
sbb
or
pop
mov
cmc
dec
xor
leave
movsb
dec
push
aas
shll
movsb
out
xchg
out
xchg
mov
andb
add
bound
ljmp
sbbl
sbb
pop
sahf
xor
jecxz
mov
fstl
jecxz
ds
test
sahf
into
ss
cmp
aas
orl
sub
mov
pop
aaa
ret
mov
ja
ret
lret
inc
movsb
repz
dec
inc
movsb
pop
gs
bndstx
fiadds
add
adc
add
cmc
imul
lret
out
mov
jne
lods
pushf
xor
and
pop
incb
inc
add
push
lcall
mov
insb
out
orl
outsl
imul
rorb
lods
xchg
cmp
mov
ds
insl
iret
mov
push
inc
rorl
std
pop
xchg
scas
mov
mov
xchg
mov
fidivs
cmp
mov
jge
mov
sti
xor
xor
add
loop
mov
or
mov
test
cmpsl
dec
add
sarl
push
or
mov
mov
xor
mov
mov
scas
xchg
add
in
push
negb
inc
ds
dec
stos
jmp
push
ret
ja
push
insb
std
imul
jp
dec
lret
mov
cld
int
or
jb
mov
or
or
ret
mov
and
outsb
hlt
add
ret
mov
icebp
mov
cmc
jnp
or
and
scas
xchg
cmp
adc
ficomps
dec
xor
cmc
mov
jno
pusha
cmp
xchg
mov
cmp
pop
xor
xchg
mov
jb
and
dec
dec
dec
das
adc
jecxz
popa
pop
mov
jb
stos
dec
sub
popa
test
in
lahf
adc
mov
add
lret
sub
fsubs
ljmp
mull
in
adc
call
out
sbb
sahf
sbbl
in
in
lods
push
push
jnp
lret
outsl
mov
out
clc
push
mov
mov
fcomps
adc
mov
dec
fwait
and
push
xor
data16
fwait
adc
sbb
dec
sbb
cmp
inc
fdivs
loopne
test
mov
dec
int
pop
dec
mov
adc
cld
jnp
adc
inc
jp
pop
icebp
scas
push
scas
insl
add
pop
and
jne
into
cmp
lds
push
inc
cmp
shr
repnz
sbb
dec
dec
jecxz
addr16
shlb
dec
sub
jge
dec
fcoml
in
nop
test
test
xor
ret
pop
xor
mov
je
movsb
jne
pavgb
outsb
shl
bsr
cli
push
push
dec
push
ljmp
push
pop
mov
imul
pop
aad
mov
push
aad
dec
or
lret
movsb
inc
lahf
stos
dec
imul
je
inc
xchg
fisubrl
jns
in
pop
enter
lret
xchg
push
xchg
push
movsb
iret
stos
mov
mov
loopne
mov
lahf
mov
lods
push
jbe
mov
data16
push
in
mov
cmp
test
sub
rcrl
cmp
rorb
jno
lahf
rorb
loopne
xchg
jns
loope
pop
cld
int3
inc
fists
lret
push
aaa
or
mov
pop
fistps
sbb
pop
testl
sub
pop
lods
sbbl
inc
mov
jb
sti
out
cli
hlt
popl
adc
js
and
jns
bound
mov
cwtl
fcom
ljmp
xchg
addb
mov
sahf
adcb
test
pop
shrb
push
cld
insl
push
push
popf
addr16
lcall
push
push
sub
nop
push
xchg
or
pushf
xorl
jbe
sub
repnz
and
mov
stos
and
jne
push
mov
pushf
pop
fwait
xchg
icebp
dec
iret
mov
andb
inc
add
mov
cs
decl
shll
mov
cmp
daa
inc
pop
ss
jne
sub
sbb
mov
test
cmp
je
dec
mov
dec
pop
cltd
push
push
gs
shlb
pop
or
pop
adc
orl
out
pop
fnstcw
rol
addl
mov
lods
shrl
xchg
mov
xchg
pushf
imul
xchg
inc
jbe
xor
mov
lcall
pop
push
mov
mov
jo
daa
cmc
sub
data16
mov
jecxz
mov
loope
push
mov
cwtl
sbb
mov
cmp
add
lret
cmp
mov
nop
icebp
loope
add
mov
into
popf
push
jnp
add
das
or
leave
sub
mov
ljmp
sbb
mov
les
or
dec
cwtl
fsubl
mov
sbbl
jnp
mov
stc
add
daa
or
mov
push
xchg
dec
popl
sub
jae
push
imul
sub
mulb
cwtl
lahf
mov
xor
adc
mov
push
outsb
mov
cmp
fadds
bound
jo
xchg
jecxz
rcrl
scas
xlat
pop
jae
pusha
and
pop
loop
in
cmp
shlb
in
wrmsr
jmp
test
jbe
scas
dec
dec
push
mov
mov
dec
shlb
loopne
dec
pusha
xor
jge
pop
in
shl
lahf
test
imul
mov
and
or
add
jl
xchg
push
xchg
mov
jne
int3
test
xor
call
cmc
inc
orl
popa
xor
mov
inc
add
or
sbb
loope
push
aas
jmp
push
es
adc
sahf
out
bound
sbb
mov
loope
loope
adc
push
imul
inc
sub
aaa
out
prefetch
fadds
shl
jnp
xor
push
xchg
popf
pop
mov
add
incb
mov
lret
movsb
mov
cmpsb
das
imul
fadds
aaa
pop
xchg
mov
lods
pop
ja
stos
push
or
push
popf
jne
int3
push
add
loope
cmp
leave
insb
fwait
into
xchg
fcmovb
loope
clc
sbb
mov
mul
sbb
mov
xchg
adc
inc
enter
adc
dec
sbb
subb
and
movsb
pop
ds
push
repz
or
ret
ror
lock
in
cmp
adc
pop
cld
jb
pusha
jp
add
lods
mov
push
mov
pop
jae
jne
jbe
cmp
push
cmp
and
xchg
repz
add
fdivrl
sub
pushf
add
cmpsl
xchg
out
xchg
sbb
sub
add
movsb
sahf
cmp
mov
aas
mov
int
dec
loop
or
jns
mov
jl
les
mov
adc
lds
inc
mov
mov
leave
dec
cmp
push
aas
dec
and
jo
mov
stos
xor
int
add
add
dec
sarl
inc
mov
or
cmpb
mov
mov
push
adc
inc
jl
jg
std
mov
je
movsl
loope
sti
dec
and
imul
loop
jge
mulb
xchg
push
xor
inc
mov
mov
sahf
test
pop
mov
mov
je
icebp
aas
out
stos
pop
push
mov
cmp
int
pushf
popa
popl
or
loop
jae
dec
stc
xchg
test
outsl
ds
mov
cmpb
repnz
scas
daa
stc
shlb
mov
ret
pop
jle
dec
or
repnz
sahf
lock
sub
push
pop
cmp
inc
outsb
sarb
decb
popa
dec
xor
mov
mov
ficompl
test
cld
xchg
repz
je
inc
nop
xor
mov
shlb
lods
mov
xlat
nop
adc
ja
insl
stc
xor
pop
loop
push
pop
jl
stos
aaa
adc
and
ja
pop
mov
insb
and
out
mov
lret
xor
out
adc
cmp
loopne
cmpsl
mov
loop
mov
hlt
arpl
call
je
lret
xor
jnp
mov
data16
inc
jp
loopne
ja
jno
dec
add
mov
jmp
and
int
jp
sub
fxch
jmp
outsb
lods
sbb
jo
mov
sbb
cmpsb
addr16
and
imul
scas
pusha
in
repz
pushf
mov
ja
and
test
fadds
inc
insl
fbld
mov
dec
fwait
lcall
inc
daa
test
pop
pop
stos
mov
mov
xchg
int
test
rorb
movsb
icebp
mov
idiv
test
dec
bound
movsb
shrb
mov
fistpl
inc
sub
add
out
daa
mov
aas
adc
stc
sti
jecxz
adc
jae
dec
mov
ffree
push
loope
lods
push
arpl
stos
dec
add
sub
mov
in
mull
cmp
rcrl
and
add
les
movsb
stc
cmpsl
jo
out
jg
xchg
popf
adc
xlat
jnp
es
sub
push
loopne
pop
mov
jle
add
test
dec
jno
sti
cs
fstps
adc
mov
scas
xchg
push
sbb
sarl
pop
sbb
jg
fistpl
fxch
lret
fisttpl
pop
cmp
outsl
std
jle
lods
mov
movsb
jl
xor
bound
sub
jg
push
xchg
pop
aam
xchg
fldenv
rcrb
ret
int3
lods
adc
or
cmp
lods
sbb
inc
sbb
or
fidivl
dec
sbb
outsb
ss
mov
jle
push
mov
xor
mov
shlb
xchg
jl
adc
sbbb
test
pop
fdivrs
out
aas
xor
sbb
dec
sti
xchg
pop
pop
jo
sbb
dec
out
lret
pop
pop
jle
inc
jl
mov
in
les
out
iret
movsb
or
lcall
push
ret
cmp
jmp
inc
lcall
mov
jo
int
push
and
adc
mov
jg
sbb
sbb
rorl
cmp
ja
mov
mov
sbb
push
pop
push
ja
jg
mov
stos
jmp
in
sub
mov
adc
lods
xchg
sarl
fwait
xchg
xchg
mov
add
lods
pusha
add
sub
addr16
sub
xchg
leave
sti
mov
or
add
mov
ds
inc
stos
dec
sub
push
sahf
in
addb
add
lea
xlat
gs
movsl
fistpll
or
cmp
add
dec
pushf
cld
jno
aad
push
popf
pop
das
or
add
push
inc
sub
fnsave
jecxz
fistl
movsb
sbb
ret
rorl
js
mov
nop
call
mov
mov
mov
cld
mov
sub
mov
push
and
pop
push
lods
aad
mov
inc
data16
and
popf
ss
cs
stos
adc
inc
push
cmpsb
jmp
mov
jnp
push
daa
adc
sar
jne
adc
je
push
jecxz
incb
stc
rcrb
dec
mov
xchg
cmp
rcrb
dec
mov
inc
jo
popf
xchg
adc
sub
mov
mov
cld
sbb
mov
fld
cwtl
xchg
mov
enter
loop
mov
aam
scas
xor
inc
pop
lea
add
lock
bound
adc
pop
out
lcall
clc
aad
ds
dec
mov
inc
je
enter
sbb
sub
jne
pop
aaa
mov
sarb
cmp
cmpsl
jno
cli
mov
pop
adc
xor
lds
mov
add
loop
repz
jnp
roll
lods
adcb
lods
xor
insl
jge
jg
push
push
dec
sub
out
pusha
mov
insl
push
mov
imul
jne
sub
mov
push
nop
fsts
push
cmp
mov
mov
push
mov
mov
cmp
movswl
push
and
inc
mov
call
icebp
xor
xor
sbb
pop
or
arpl
add
out
mov
jl
out
scas
xchg
mov
and
and
xchg
mov
jecxz
add
or
cmpsb
xor
sbb
cmp
jg
push
pop
clc
sbb
mov
pop
jecxz
inc
insb
sbb
into
lods
data16
jne
jge
inc
or
and
arpl
sbb
and
mov
clc
sub
xchg
mov
in
push
movsl
je
and
jp
daa
and
adc
ficoml
pusha
xorl
out
aaa
ds
in
orl
inc
dec
movsl
pop
mov
xor
xlat
mov
insb
aas
mov
push
xchg
mov
mov
sahf
inc
out
mov
outsb
mov
dec
popf
into
xchg
add
jp
mov
adc
jnp
ret
daa
gs
inc
or
pop
mov
pop
inc
ss
icebp
fcom
lcall
adc
into
cmpb
mov
mov
xor
sbb
imul
es
mov
pop
push
add
sbbb
add
sbb
sbb
adc
or
mov
bound
fstpl
repz
dec
cmp
cmp
lahf
xor
xchg
jno
scas
mov
lods
push
dec
bnd
mov
adc
and
cs
jmp
fmulp
in
inc
dec
popa
mov
negb
cmp
int
ret
in
push
jl
xor
adc
jae
ret
sub
movsb
scas
xlat
lds
jecxz
mov
push
outsb
cmc
bound
dec
jno
push
mov
lret
jne
push
out
fnstcw
sub
mov
mov
sub
pop
addr16
add
hlt
filds
sahf
test
fcomps
ja
imul
ja
add
xor
popf
pop
lret
push
loop
imul
push
popf
ja
ja
das
and
or
fsubrs
or
cmp
adc
push
dec
push
icebp
jl
and
pop
shrb
pop
pop
mov
push
inc
cmpsb
sub
arpl
icebp
mov
pop
test
mov
mov
and
bound
pop
popf
ss
sub
mov
mov
mov
add
xor
mov
add
mov
fdivl
int
push
sub
shrl
xchg
adc
idiv
pop
push
gs
mov
mov
push
movsb
mov
lods
xchg
dec
aas
adc
push
ljmp
orb
fnstenv
jmp
clc
add
pop
fnstsw
imul
shr
addr16
sbb
pop
lock
int
inc
fsub
call
les
and
out
das
test
mov
rclb
pop
mov
push
push
shrw
popa
daa
mov
mov
push
sbb
loopne
ljmp
rorl
xchg
fnsave
out
add
lods
add
pop
adc
fcmove
xor
je
testb
clc
ljmp
sbb
test
int3
leave
dec
imul
sub
test
xlat
fnstsw
repnz
push
dec
xchg
push
push
or
cmp
enter
repz
out
shlb
mov
cmp
jg
push
xor
sbb
inc
xor
cmp
lcall
movl
sub
push
jnp
mov
decl
and
lods
push
loope
shlb
ret
push
cmpsb
ljmp
out
mov
loope
and
hlt
push
ret
sub
adc
in
ljmp
xor
test
imul
loope
scas
enter
xchg
mov
dec
xor
std
or
call
hlt
cmp
xchg
mov
enter
inc
scas
scas
mov
gs
inc
sub
cmp
pushf
imul
mov
stc
aas
les
mov
fdivs
mov
jle
fildll
lods
pop
lock
jmp
cmp
mov
add
sbb
icebp
out
add
inc
lea
and
adc
add
popa
add
fmuls
push
rclb
lret
xchg
data16
fcoms
mov
jl
ds
adc
mov
nop
test
mov
push
dec
mov
es
outsl
jmp
data16
cmp
fistpll
cmc
jo
das
cwtl
mov
cltd
mov
mov
out
out
imul
pop
push
pushf
and
mov
ljmp
gs
in
cmpsb
pop
out
push
dec
push
add
popa
cs
cmpsl
adc
add
mov
adc
dec
or
mov
in
lahf
out
xchg
pop
lds
xchg
sahf
lcall
pop
mov
and
outsb
test
test
dec
mov
push
int3
in
in
push
cmp
loope
pop
mov
into
add
test
mov
sahf
add
push
clc
mov
shld
mov
jns
out
inc
push
mov
push
pop
pop
repnz
ret
mov
cmc
jp,pn
or
jl
std
into
call
das
filds
fucomi
testl
push
and
std
push
test
or
cltd
repnz
in
insl
or
ret
addl
cs
pop
sti
outsl
rcr
mov
outsb
outsb
sub
pusha
vcvttpd2dqx
push
mov
outsb
dec
cmpsl
push
jns
dec
jmp
jbe
test
push
hlt
lds
lock
xor
pop
leave
and
push
xchg
jnp
in
xchg
mov
in
out
mov
mov
leave
adc
andl
icebp
and
mov
loop
dec
mov
movsl
add
sub
sub
jae
sbb
lcall
adc
int3
pusha
dec
cmc
stos
pop
imul
out
cmp
inc
les
sahf
loopne
lahf
push
mov
adc
sub
in
test
aam
pop
xchg
dec
bound
cld
inc
sbb
mov
mov
add
test
inc
jae
mov
scas
add
movl
cmp
xchg
pop
adc
push
or
ret
and
or
cmp
cmp
or
add
incb
ret
dec
mov
aas
andb
mov
mov
cmp
or
mov
sbb
mov
fistpll
sahf
mov
jp
pop
pop
lret
fnsave
push
sarb
push
and
mov
scas
inc
jmp
mov
loop
sbb
aaa
mov
fmul
cld
das
adc
fmul
out
inc
adc
bound
loop
sub
xchg
mov
add
rclb
and
dec
int
inc
mov
fwait
lcall
xchg
cmp
aam
xchg
out
mov
sbb
xor
into
push
test
inc
jnp
lcall
hlt
notl
out
jge
in
cmp
jne
mov
push
dec
and
cmp
imul
ret
out
imul
mov
testl
shufps
or
imul
lods
and
dec
out
out
mov
inc
mov
call
loop
clc
xchg
xor
pop
enter
shll
pop
mov
shlb
add
scas
cli
jno
lock
stc
sbbb
outsl
jmp
cmp
call
das
pop
xor
aas
push
sbb
test
orb
adc
sub
inc
sbb
jne
sahf
gs
mov
bswap
xchg
pop
in
mov
mov
sbb
inc
lds
test
dec
inc
lahf
out
jp
lcall
out
loop
fwait
addr16
mov
rclb
imul
loope
mov
mov
xchg
xor
sub
movsb
xchg
mov
stc
or
pop
push
aad
mov
ds
daa
fistl
repz
test
cmp
pushf
aam
sub
xor
nop
aam
jecxz
jecxz
and
sub
pop
repz
jae
mov
push
lcall
jns
lcall
hlt
push
adc
xor
cmpsb
mov
jecxz
pop
mov
out
xchg
icebp
sub
dec
xor
stos
mov
stos
xchg
sahf
xorb
orl
mov
xacquire
dec
and
cmpsb
sub
idivb
xor
idiv
jne
adc
xor
push
mov
data16
cmp
aam
mov
lds
loope
stos
es
aam
or
lahf
outsb
adc
adc
add
sti
rcrl
mov
and
lcall
xor
cmp
pop
aaa
and
mov
out
pop
ljmp
or
pop
subb
ljmp
vcvtsd2ss
imul
push
gs
jge
stc
jo
mov
std
and
in
pop
loope
dec
mov
lcall
inc
mov
or
xor
cmp
mov
mov
jno
jecxz
xor
mov
mov
mov
dec
ret
mov
cmp
cmp
jo
xchg
ffreep
dec
fcom
jmp
das
fiadds
pop
dec
jno
hlt
xchg
mov
outsl
sub
dec
dec
gs
xchg
push
add
mov
scas
adc
cli
dec
mov
adcb
fcoms
pop
enter
int
cmp
mov
sbb
xor
fsin
add
xor
xor
push
dec
stc
cld
inc
fs
testl
lods
jae
inc
mov
loopne
pop
ds
notl
sub
mov
pop
jbe
cmovnp
push
inc
in
push
insl
cmp
jge
jae
clc
sub
inc
in
inc
clc
xor
push
fs
or
outsb
cs
lods
into
lods
ficoml
das
fldcw
scas
iret
or
pop
out
movsb
cwtl
dec
jg
add
jl
xchg
push
lods
push
cmp
scas
pop
dec
lret
and
cwtl
pop
scas
mov
stos
xchg
loope
cmpsb
pop
mov
push
stc
pop
push
ljmp
rcrb
dec
mov
or
shl
das
pop
cmp
push
inc
sub
sarb
inc
cmp
daa
mov
in
adc
push
lods
mov
test
pop
in
mov
jne
lods
rcrl
jns
jge
mov
shrb
add
outsl
mov
shl
icebp
mov
mov
and
cwtl
xchg
out
inc
mov
xor
and
ss
xor
pop
int3
outsb
push
inc
sbb
stos
cltd
adc
dec
out
ret
pop
dec
sbb
lahf
cs
jne
xor
mov
nop
aas
mov
shrl
dec
sbb
jnp
fstps
adcl
add
in
adc
adc
lahf
and
pushf
xlat
xchg
jg
or
rcrb
stos
push
stos
mov
mov
fwait
loop
add
rcl
and
enter
jae
cmp
xchg
or
jbe
push
dec
das
repnz
sbb
out
inc
loopne
popf
call
and
lea
sbb
push
mov
or
pop
fisubrs
lods
popa
lods
cmp
push
jmp
sub
test
xchg
movsl
xchg
shlb
xchg
sbb
int
in
mov
mov
mov
in
lods
arpl
loop
jnp
sbb
push
std
pusha
rcl
gs
shrb
sbb
into
mov
sbb
cwtl
mov
adc
mov
lods
mov
dec
pop
jecxz
xlat
jnp
shlb
nop
test
xor
adc
mov
movsl
add
push
xchg
and
xor
xor
mov
fdiv
and
jmp
mov
js
inc
inc
jmp
pushf
fsubrs
cmp
dec
in
cmp
push
lret
lock
outsl
out
cwtl
push
add
imul
jb
vpor
outsb
dec
adc
ss
cmp
pop
fidivrl
push
cmpsl
cs
shll
or
mov
aam
ja
es
and
mov
mov
jo
lock
push
jecxz
push
out
scas
inc
dec
jmp
mov
cmp
and
dec
test
imul
inc
sbb
repnz
jg
xor
movl
insl
sub
bound
sahf
pop
or
pop
mov
es
inc
in
mov
cmp
ret
stos
dec
xchg
and
add
push
cmp
jl
adcb
xor
out
pop
jge
mov
dec
pushf
fidivl
or
xor
add
mov
jno
fisttps
rol
pop
jnp
ja
or
rcl
and
push
inc
mov
popa
popa
push
xchg
roll
jl
fwait
mov
sub
or
sub
inc
add
bound
mov
lret
cmp
andps
or
cmp
mov
inc
mov
xor
orl
jb
mov
lahf
or
pop
push
push
jle,pt
aad
popa
or
jmp
jb
orl
repz
pop
andl
jb
cmpsl
mov
mov
jmp
lds
arpl
cmp
push
add
jns
lods
insl
mov
push
pop
mov
pop
adc
sbb
mov
sbb
orl
inc
add
dec
scas
cwtl
inc
pop
mov
add
xchg
jns
and
mov
mov
ja
xor
sbb
nop
pop
aad
flds
jo
mov
or
lret
gs
ficoml
adc
cld
push
rorl
xor
fsubrs
pusha
jne
loope
or
pop
jo
mov
jb
xor
inc
sbb
inc
mov
stos
jae
test
adc
ss
or
fnstsw
in
jle
jmp
repz
addr16
push
mov
out
fmull
test
pop
icebp
mov
dec
shlb
pop
cmp
je
sub
cmp
inc
xor
xlat
dec
pop
mov
movsb
data16
lock
loope
xchg
mov
mov
cli
jno
and
and
adc
out
xlat
dec
int
int3
and
icebp
add
pop
mov
rcl
adc
add
lret
aas
fisttps
stc
xchg
push
pop
add
mov
jb
ljmp
prefetcht1
cltd
adc
sbb
imul
mov
call
into
iret
sub
inc
scas
es
fs
mov
jecxz
mov
into
cmc
mov
cmc
je
mov
icebp
add
mov
mov
stos
icebp
fistpll
orl
addr16
ficoml
out
leave
push
iret
mov
shrb
pop
insl
pop
xlat
aam
vminpd
fstpl
lcall
add
push
mov
push
fsubrs
movsb
lahf
shll
xchg
pushf
pop
sbb
sbb
xorb
sub
jmp
clc
aas
sub
xor
push
movsb
xchg
sub
mov
xorb
rcll
inc
jge
xchg
jnp
xchg
cmpl
leave
shll
sbb
sub
xchg
sbb
pop
lahf
or
ss
lret
int3
or
and
sub
cmc
scas
add
cmp
pop
add
cmpsb
aas
ljmp
lret
mov
mov
or
gs
lret
jge
popa
mov
pop
xchg
in
loope
dec
ret
fstpl
aad
outsl
mov
shrb
mov
test
sub
outsb
add
cmp
pusha
inc
loope
pushf
sar
inc
sbb
stos
ret
mov
ja
push
sarb
stos
push
cmp
mov
in
mov
arpl
ja
daa
pushf
cld
pop
cmp
popl
insl
pop
rcll
divb
dec
sahf
jnp
jmp
pop
pop
adc
inc
or
loope
lahf
mov
ret
sbb
jne
and
movsl
cmpsb
lret
pushf
xor
xchg
mov
cmp
pop
imul
ljmp
in
js
in
sub
cmp
fwait
lcall
lock
movsb
mov
sub
dec
jae
adc
mov
stos
mov
xchg
lock
or
in
cld
fmul
stc
lret
inc
test
aad
leave
and
fwait
aad
sahf
mov
mov
adc
daa
pusha
mov
in
out
push
adc
lret
xchg
jnp
pop
mov
jbe
mov
shrb
adc
xchg
int3
popf
sbb
inc
cmp
jl
mov
std
mov
dec
sub
push
jle
test
jo
ja
jl
sbb
add
mov
mov
je
inc
rol
icebp
fcmovu
les
pop
dec
mov
push
loopne
or
in
mov
bound
bound
sub
int3
push
xchg
adc
and
ljmp
shrl
add
fstl
in
movsl
out
test
sbb
push
inc
mov
mov
fmull
popa
js
xchg
mov
pop
cmp
fyl2x
repnz
or
ficoms
arpl
int3
push
int3
jl
cmp
cmp
or
xor
hlt
add
xlat
jg
lcall
pop
rclb
js
jns
cmp
stos
cmpsb
xchg
movsb
lret
int3
sub
pop
push
pusha
and
lods
inc
call
in
repz
aad
push
push
ss
mov
imulb
clc
cmpsb
movsb
int
inc
mov
scas
mov
lcall
lock
and
out
fimuls
mov
repnz
orb
adc
mov
fcoms
push
enter
je
xchg
mov
cltd
and
lock
ja
jb
xor
andb
fists
aaa
push
lock
pop
mov
fs
push
sub
cs
leave
mov
data16
pop
js
sbb
nop
mov
ret
pop
mov
pop
mov
xchg
divl
inc
sbb
add
test
xlat
inc
enter
outsl
jp
mov
cmp
xchg
mov
push
loop
inc
and
sub
rolb
mov
ja
loope
xor
dec
sbb
enter
pop
mov
repnz
clc
jecxz
outsb
jmp
dec
ret
into
dec
out
mov
ljmp
mov
mov
xchg
pavgw
mov
bound
sub
lods
xchg
cs
adc
xchg
mov
dec
mov
cmc
lock
sub
daa
mov
int3
repz
push
cmp
pusha
xchg
out
jo
cmp
inc
lods
jnp
fadds
repnz
xchg
shrl
faddl
pop
lods
lds
shlb
adc
jnp
adc
jnp
mov
or
cli
fistps
cmp
and
leave
add
push
mov
mov
std
nop
addb
mov
pcmpeqb
push
sub
jl
scas
test
mov
rclb
ds
pop
add
inc
pop
lea
jmp
jb
enter
adc
imul
xchg
adc
es
hlt
mov
mov
ljmp
pop
not
daa
es
xor
push
in
adcl
movsb
adc
push
jnp
dec
mov
pop
pop
push
stos
adc
pop
push
xchg
xchg
jg
dec
bound
mov
sbb
stos
into
pop
ret
dec
jne
pushl
stos
xor
int
push
dec
fstl
repnz
or
pusha
int3
xchg
aaa
in
inc
ret
daa
jae
add
cmp
es
cmpsl
xor
mov
or
loopne
push
pop
push
leave
stos
or
push
jno
es
jnp
dec
pop
jo
xchg
subb
std
add
popf
fs
out
pop
lds
add
cmp
std
mov
orl
push
pop
pop
mov
loop
ljmp
int3
repz
insl
lea
fdivrs
fs
sub
mov
or
adc
mov
ret
fwait
pusha
shlb
push
test
push
popa
mov
popf
pop
call
test
push
popa
data16
dec
mov
popf
jl
fidivl
mov
stos
pusha
cld
stc
sub
cmc
xchg
sub
push
pop
mov
add
mov
adc
push
fidivs
adc
movsb
lods
push
jns
xchg
sti
mov
jp
out
outsl
in
dec
xorb
add
lret
sbb
hlt
mov
repnz
aad
inc
fnstcw
mov
testl
loopne
mov
je
xchg
sub
cmp
orl
dec
stc
cwtl
loopne
stc
arpl
loope
pop
mov
ret
gs
bound
sub
xlat
lods
cmp
adc
mov
loope
cmc
aam
subb
xchg
dec
sbb
or
pop
scas
popa
lret
in
pop
push
lahf
cmp
call
sti
stos
add
mov
test
xor
sbb
xor
test
in
ljmp
push
out
cmp
inc
jne
cwtl
and
or
mov
in
push
mov
clc
rcrl
popa
add
push
and
fst
push
and
test
aam
in
mov
dec
out
mov
or
sbb
ret
inc
push
cs
leave
dec
int3
add
les
sbb
sub
xchg
dec
dec
leave
mov
shl
lret
dec
pushf
ja
pop
pop
aad
hlt
aas
fcmovnb
push
mov
sub
js
cli
adc
adc
jmp
mov
lret
mov
mov
jns
adc
ja
enter
jl
jo
sahf
lret
xor
inc
pop
ret
jp
xor
pop
add
dec
xchg
fisubl
aam
add
or
adc
repnz
and
insl
pop
pop
ljmp
testl
enter
xor
ret
mov
mov
repnz
mov
xchg
cmc
leave
jb
mov
pop
jle
fnsave
sar
push
push
enter
mov
jne
jae
popf
sub
rcll
icebp
pop
mov
mov
rolb
push
sub
cmpsl
pop
in
fnsave
pop
lret
mov
imul
xchg
and
cmp
scas
adc
add
mov
adc
sbb
mov
loope
fdivp
outsb
dec
push
rcrb
rclb
pusha
scas
xchg
test
sbb
mov
mov
je
cwtl
push
dec
dec
mov
das
mov
pop
and
repz
cli
lods
add
insb
inc
push
jne
lock
scas
int
sahf
push
dec
or
jno
addr16
shl
sbb
push
fwait
les
dec
or
cwtl
pop
dec
xor
mov
dec
dec
je
jg
cmp
mov
jno
movsb
xchg
dec
mov
adc
imul
cmpsb
gs
pop
out
push
jmp
mov
xchg
shrb
pop
jbe
aad
push
pusha
shlb
mull
rcr
test
xchg
adc
repz
and
cmp
out
adc
std
xor
pop
mov
int
int3
in
cmp
stos
fcoml
stos
pop
jge
fdivrs
mov
rcll
or
pop
jg
scas
int3
push
data16
clc
outsb
lret
shlb
mov
out
std
mov
dec
movsl
sub
fucomip
jo
jecxz
jge
push
jbe
ret
lret
inc
inc
je
ret
int
jge
and
das
mov
xchg
fists
idivl
pop
sub
movb
in
sub
dec
dec
and
lahf
or
mov
pop
push
pop
in
xorb
ret
or
xor
and
out
imul
imul
jne
hlt
aad
mov
xlat
test
jl
add
cmp
mov
lds
push
icebp
or
out
decb
sbbb
scas
adc
out
jns
xlat
jb
lea
repz
sbb
mov
push
test
aam
test
jge
pop
out
and
js
aaa
push
popf
mov
mov
divl
in
xchg
ljmp
or
dec
adc
imul
out
pushf
and
jno
inc
pop
mov
adc
xchg
pop
jg
cmp
xchg
mov
js
popf
sub
push
insl
mov
repz
jge
lods
out
fnsave
aad
sti
in
push
xchg
mov
jo
xor
aam
push
inc
mov
loopne
mov
cmp
dec
outsl
cmp
lock
push
pop
fcoml
lock
dec
adc
cmc
or
xchg
cmp
adc
xchg
xchg
arpl
sub
xchg
scas
mov
mov
dec
lds
jnp
test
and
dec
adc
outsb
mov
insl
xlat
jbe
sub
or
lcall
jne
adc
xor
push
inc
jns
adc
xor
fdivrs
xchg
and
icebp
lods
jns
imul
sbb
inc
jnp
jmp
xchg
mov
ljmp
stos
xchg
popa
xchg
mov
popa
in
or
or
aaa
adc
fidivrs
stos
mov
push
mov
into
test
dec
pop
push
enter
inc
rolb
and
pusha
cmp
push
cmpl
test
xorb
and
push
popf
in
mov
xchg
jns
ret
mov
stos
scas
test
fwait
cmp
rcrl
stos
sbb
push
aaa
inc
adc
shll
cmpl
out
sbb
jl
xchg
dec
outsb
imul
sbb
mov
jge
pop
mov
pusha
jp
mov
lret
sub
int
cmpl
pop
out
sbb
mov
and
ljmp
ds
push
sbb
rolb
iret
fdivs
inc
es
jo
ljmp
jmp
sbb
adc
mov
das
rclb
cmc
rcll
mov
push
popf
lods
jae
add
out
add
pop
xchg
pop
mov
jae
inc
pop
ljmp
cmp
mov
jb
popf
clc
and
pop
inc
in
add
fs
lcall
sub
mov
and
dec
bound
push
dec
push
pop
shll
fstl
pop
jg
add
or
sbb
int3
jmp
je
repnz
lock
outsb
xchg
add
jne
xchg
jl
cmpsl
testl
jne
aas
xor
add
sahf
sub
xchg
popa
sahf
or
mov
xchg
push
cmp
scas
test
out
test
fisttps
cmpsb
push
fmull
and
lret
xchg
adc
sbb
incl
jnp
jmp
dec
xchg
fucom
push
loope
out
add
push
mov
in
les
sahf
fs
cwtl
les
lret
dec
test
lret
inc
sbb
es
bnd
push
xorb
mov
sbb
leave
ficomps
or
frstor
lods
mov
stos
xchg
fstl
or
adc
es
cltd
lock
mov
dec
rolb
pop
or
mov
lods
ss
pop
push
outsl
insl
out
sub
xchg
xlat
add
jae
inc
jecxz
mov
adcl
icebp
sub
imul
mov
xchg
in
xchg
jno
aam
ds
insb
xor
sub
outsb
sbb
pop
sahf
ljmp
pop
adc
lret
mov
dec
or
sbb
ror
jmp
stos
cmc
into
cltd
arpl
mov
pop
cmp
lcall
in
fisttps
adc
jb
push
cs
inc
jb
fwait
pop
xchg
jne
push
inc
ret
test
clc
fwait
movsl
insl
and
fildll
adc
add
popf
xlat
and
js
mov
push
stc
lret
ret
jno
xchg
movsl
mov
adc
mov
out
loope
cmp
sbb
int3
sbb
push
jnp
sbb
push
jle
js
lods
dec
mov
popa
rcll
push
je
cmp
mov
sub
xor
and
dec
jne
add
and
into
addr16
inc
ja
loope
pop
lea
jp
mov
imul
stos
inc
popa
inc
push
iret
sub
cltd
mov
push
dec
sti
xchg
and
mov
ss
popf
clc
fisttps
add
lret
mov
cmp
pusha
sbb
popa
mov
out
and
jg
mov
adc
and
shr
mov
fwait
shlb
pop
stos
insb
movsb
shlb
push
sbb
xor
test
into
out
stc
clc
mov
in
lret
and
cs
xchg
jnp
iret
sub
add
mov
fdivl
or
sub
pop
arpl
sbb
enter
xchg
fisubrl
jb
xchg
sub
les
add
loop
ret
dec
sub
ss
pushf
or
xchg
gs
xor
and
adc
adc
mov
out
sub
push
pushl
pop
cli
dec
cmp
andl
sub
out
shrb
repnz
mov
inc
and
sbb
outsb
xchg
mov
repz
ret
xchg
cmp
es
loope
loopne
cmp
mov
and
pop
pop
adc
imul
push
dec
pop
jb
lret
push
mov
mov
mull
shll
je
loopne
sub
ds
sti
aaa
xchg
jg
ret
jp
test
or
add
jae
inc
mov
in
sub
push
je
xchg
lahf
andb
adc
fdivp
pusha
jecxz
and
rclb
fs
movsl
mov
loop
movsb
sbb
mov
xor
cmp
add
cmp
add
sbb
push
jne
lcall
push
lea
mov
cs
dec
mov
in
pop
rcr
inc
test
xor
mov
push
pop
pop
or
or
push
mov
sbb
daa
add
jecxz
movq
pop
faddl
jge
loope
sub
jge
cvtpi2ps
idivb
or
imul
addr16
push
fisubs
dec
and
mov
test
pop
jo
sub
test
or
das
adcb
or
sbb
xchg
lds
dec
cltd
mull
cld
xchg
sbb
push
sub
js
insb
insb
pop
dec
rol
jo
adc
out
jns
nop
fisttpl
and
xchg
adc
leave
outsl
jmp
jnp
sub
in
xchg
imul
add
insb
push
loopne
data16
mov
mov
cmp
loopne
in
shlb
testb
cmp
dec
push
jns
into
repz
rorl
icebp
push
mov
std
cs
addl
ds
dec
jo
xor
loop
xchg
xchg
fisubrl
push
decb
inc
arpl
xchg
mov
imull
faddl
mov
call
out
mov
mov
bound
add
in
out
xchg
mov
adc
out
xor
sbb
xchg
leave
sbb
lcall
loopne
insl
pop
inc
xlat
mov
sbb
decb
pushf
insb
cli
cltd
xchg
mov
push
xchg
jbe
jge
je
pop
rcl
jb
mov
les
or
out
adc
bound
cmp
or
pop
xchg
cwtl
pop
mov
sbb
sbb
sub
push
hlt
lret
xchg
jns
cmp
dec
mov
test
sbb
out
inc
lea
jnp
pop
cmc
jae
mov
orl
ss
data16
lret
sub
mov
in
push
mov
add
pop
sub
push
mov
int
scas
push
ljmp
or
mov
stos
int3
in
add
adc
aaa
xchg
icebp
cli
and
mov
idivb
xchg
scas
icebp
push
xchg
ja
ret
inc
icebp
add
jnp
cwtl
filds
aam
jmp
adc
cs
push
rcll
inc
add
push
fstpt
fadds
mov
sbb
cwtl
jl
call
add
lret
cmp
bound
aam
xchg
jge
lock
test
iret
rorl
inc
iret
pop
cmp
out
mov
in
and
adc
push
sub
or
popl
dec
dec
pop
jmp
fdivr
mull
mov
push
ljmp
xchg
les
sahf
jbe
adc
dec
mov
enter
inc
mov
sarb
nop
nop
movsl
pop
lea
or
push
fucom
je
repnz
rcr
inc
add
sahf
insb
dec
sub
or
loope
mov
and
mov
xor
mov
hlt
xchg
mov
hlt
test
dec
mov
push
mov
arpl
adc
jecxz
call
xor
arpl
cmp
les
cmp
xor
arpl
push
mov
push
dec
push
notl
adc
out
or
out
xchg
testl
ror
sar
cmpsb
jg
adc
mov
add
cli
xor
pop
push
roll
jmp
mul
push
and
and
pop
cmpsl
push
insl
mov
or
cmp
mov
mov
mov
cld
imul
sub
out
sub
imul
subl
pop
jmp
push
push
addr16
pop
std
cmp
jmp
push
test
lcall
into
shlb
scas
nop
stos
popf
jmp
push
shlb
or
xor
lods
jb
mov
outsb
into
mov
lret
out
adc
mov
out
call
xor
cli
and
in
and
aad
shlb
fnsave
cmc
scas
ret
push
test
test
imull
xor
fs
xchg
lods
mov
xor
mov
sti
fs
cmp
test
adc
jmp
xchg
cmpsl
jnp
test
mov
data16
sahf
cli
and
into
mov
sbb
subl
orb
fimuls
inc
sub
pop
pop
cmp
or
fisttpll
daa
mov
pop
repz
mov
xor
mov
stos
mov
add
insl
and
mul
mov
cwtl
sbbl
mov
cmp
test
pusha
push
xor
cld
push
mov
movsb
mov
fstl
dec
add
push
push
jnp
sub
lods
pop
in
test
int
lods
fs
je
movsb
or
jge
or
iret
adc
outsb
mov
nop
push
add
sbb
test
mov
mull
mov
pop
mov
push
jns
mov
fcomi
test
jns
mov
out
push
dec
data16
push
cli
add
out
lcall
mov
lret
xor
xor
bound
jecxz
push
xchg
xor
push
cmpl
mov
movsb
adc
ds
bnd
ja
popf
mov
insb
pusha
mov
mov
jae
nop
stc
mov
mov
inc
jecxz
int
sbb
pop
push
mov
fnstenv
cmc
lods
sub
cltd
xor
shl
dec
push
mov
xlat
enter
cmp
cmpsb
jg
pop
jb
mov
jno
ret
push
jbe
insl
sub
push
inc
or
add
add
lret
cmp
mov
shlb
lahf
addb
push
fsubr
mov
fprem
or
ret
pop
jl
loope
mov
out
fwait
add
sahf
xor
leave
mov
push
lahf
dec
fidivs
enter
inc
add
inc
das
push
jmp
in
lret
lret
jg
sub
insl
push
int3
adc
int
je
movsb
mov
cmp
fists
pop
add
fld
push
cs
faddl
daa
in
pop
daa
cmpsb
enter
jge
cmc
sbb
dec
sarb
inc
pop
jb
sub
rolb
cld
push
sbb
mov
lock
out
fs
xchg
cmp
adc
popf
inc
popa
mov
sbb
inc
mov
js
ja
int3
dec
mov
into
aad
xchg
mov
sbb
lahf
fwait
int3
nop
lds
hlt
inc
iret
stos
popf
or
sub
out
test
stc
and
adcb
adc
popa
sbb
sub
xchg
pop
inc
mov
add
arpl
cmp
jle
or
hlt
loop
cmp
sbb
aaa
out
test
mov
jo
mov
nop
divl
push
jmp
in
inc
mov
jbe
cmc
lcall
pop
mov
jmp
dec
fdivrs
sub
pusha
ds
and
inc
daa
sub
addr16
xchg
std
outsl
enter
mov
push
inc
lea
arpl
sahf
jle
mov
in
es
mov
fsts
xchg
ds
inc
push
std
out
in
movsb
adc
imul
xor
xor
movsb
sti
and
push
xlat
jne
call
orl
mov
ja
stos
mov
xchg
int3
or
jbe
dec
mov
ret
xchg
jle
or
inc
cwtl
fists
test
adc
out
jnp
sbb
jecxz
cmp
push
xlat
sbb
jne
or
mov
insl
mov
push
mov
into
rcl
xor
leave
sub
shll
mov
mov
bound
or
push
and
sbb
lods
adc
ret
pusha
mov
out
les
int3
pop
cmp
lds
dec
lcall
xor
jo
pop
andb
xchg
insb
xor
jl
cltd
repz
xor
xlat
inc
mov
pop
outsl
xor
pushf
mov
sbb
push
lods
jge
xchg
adc
fadds
enter
sub
std
ja
xlat
push
int3
in
scas
mov
xchg
adcb
fildll
ss
push
mov
add
sahf
insl
mov
shlb
rclb
pop
push
cmpsb
shlb
pop
pop
push
xchg
dec
cmpsl
cld
and
js
js
pop
dec
pop
mov
testb
mov
test
mov
ss
pusha
movsl
mov
decb
xchg
mov
subl
dec
faddl
jno
pop
dec
lds
fstp
fisttpll
pop
sbb
and
fisttpl
sarb
mov
mov
repnz
es
xor
subl
push
pushf
lock
xchg
pop
movsb
fiadds
lods
xchg
push
and
mov
imul
xchg
fistpl
jmp
test
aaa
inc
stos
jg
jbe
cmp
jge
loope
or
and
pop
cld
sub
in
mov
pushf
aam
in
jmp
push
jbe
imul
xchg
aas
adc
adc
jb
sbb
cmpsl
xor
dec
or
lods
jle
scas
cmp
xor
xor
xor
out
sti
mov
cs
stos
loope
and
jne
xchg
bound
xor
pop
and
lds
xchg
jmp
xor
and
jp
jae
push
push
popa
lahf
push
cmp
rcl
negb
pop
mov
mov
adc
inc
sub
notb
push
andl
les
fisubrs
lods
mov
xchg
or
mov
adc
pop
mov
scas
adc
sti
cmp
pop
or
out
xchg
push
mov
jo
iret
rclb
pop
ss
jb
cwtl
testb
int3
leave
sub
xchg
mov
cmp
mov
xor
jns
pop
push
lcall
fdivrl
xor
push
mov
jle
cltd
xchg
lea
ljmp
xchg
das
cmp
adc
scas
jns
lods
aaa
aam
fnstenv
std
test
out
popf
xor
cmp
enter
sub
dec
jnp
out
and
and
xor
insl
mov
int
cmp
mov
xchg
ds
in
dec
sbb
ret
sub
sbb
rcrb
je
scas
cmpsl
popf
cmp
jne
loop
out
jns
movb
pushl
loope
js
or
sub
test
mov
cli
mov
xchg
ret
inc
and
enter
divl
fstpl
jb
repnz
lahf
xchg
repz
push
sub
popa
mov
fildll
scas
fidivrs
dec
insb
insb
mov
sbb
xor
mov
push
xlat
fsubl
xor
xorb
mov
jno
call
mov
mov
adc
add
lock
mov
mov
lret
or
pop
movb
jle
fcoms
xor
cs
fisubs
mov
xchg
je
mov
leave
cmp
and
clc
dec
ljmp
test
add
stc
mov
inc
sub
mov
imul
icebp
dec
das
loopne
stc
xor
stos
pushf
jmp
mov
inc
jl
loop
into
fidivrs
aad
nop
dec
mov
out
inc
rcrl
cli
lock
inc
push
les
and
aam
mov
outsb
adc
pop
neg
cld
int
imul
xchg
inc
pop
fs
mov
pop
or
or
in
nop
adc
jl
cs
out
sahf
adc
jl
push
rolb
cmp
dec
sahf
xor
lods
jae
daa
addr16
xchg
je
cmp
dec
and
jbe
push
dec
pop
ljmp
icebp
fsts
mov
dec
not
repz
data16
xor
pop
mov
sub
sub
cli
in
icebp
jle
pop
popa
push
popf
popf
mov
xchg
movsl
push
daa
jae
out
mov
pop
inc
jnp
pop
inc
pop
daa
js
out
fincstp
xchg
test
dec
lock
mov
xor
out
xor
push
pop
push
xchg
dec
mov
sub
shl
or
add
hlt
cmpsl
push
xor
jns
fstps
rcr
xchg
imul
or
mov
mov
sub
add
pop
and
jo
loope
rcll
pop
mov
insl
mov
jmp
jb
enter
xchg
ucomiss
or
and
in
ret
mov
sub
cs
mov
push
scas
jae
push
or
lret
popf
out
dec
repz
cmp
push
je
push
sbb
jno
adc
jge
sub
hlt
xchg
out
je
call
push
cmp
paddw
repz
cmc
cli
shl
pavgw
cmp
cli
inc
aad
out
xor
jecxz
pop
cmp
inc
cld
xchg
jno
in
push
push
call
and
cwtl
pop
jo
sahf
push
add
or
or
push
push
jmp
sub
lret
inc
push
icebp
xor
fiaddl
dec
lahf
xchg
sbb
inc
loop
sbb
and
jecxz
jmp
mov
sub
push
add
pop
cmpsb
xchg
test
pop
sbb
daa
inc
and
mov
adc
push
add
aaa
outsl
xor
mov
popf
popa
fst
rcrl
lea
xlat
jbe
out
sbb
inc
lock
mov
pushf
push
push
cmp
mov
out
pop
sub
jns
out
stos
pop
inc
pushf
lock
lahf
les
sub
push
mov
mov
iret
mov
push
jmp
dec
incl
sti
jge
cmp
shrb
or
fs
xor
js
cwtl
sub
adc
and
imul
shlb
shl
ret
dec
or
dec
lds
mov
pop
je
mov
push
mov
add
pop
sahf
mov
pop
lahf
xchg
sub
xor
out
aaa
movsl
jo
lock
add
daa
mov
dec
mov
push
pop
subl
cmp
stc
mov
and
mov
test
sub
pushf
mov
cli
lds
mov
inc
jo
mov
jmp
pushf
jp
ds
scas
enter
mov
mov
sbb
cmp
cmp
aad
pushf
iret
ljmp
imul
test
sbb
pop
mov
sub
int3
pop
movsl
push
repz
cmp
pop
mov
arpl
xor
cmp
lcall
jge
into
call
xchg
sbb
or
jmp
inc
pop
mov
dec
sub
int
outsb
lahf
inc
push
mov
in
adc
push
jne
cmpsl
lret
ljmp
subb
enter
pop
pop
leave
pop
incb
cs
mov
fxch
push
and
repz
cmpsl
xor
mov
inc
loopne
xor
pop
dec
sub
lock
popa
mov
adc
mov
jne
push
out
xor
jp
sbb
or
cmp
seto
mov
xor
lcall
pop
push
xlat
rcr
adc
lret
mov
insb
outsl
pusha
testb
sbbl
aam
fmulp
test
push
add
xor
add
and
xor
ljmp
push
xor
xchg
loope
inc
dec
jbe
cmp
mov
aas
add
add
lret
lahf
ljmp
sbb
por
addl
fldcw
or
shl
lock
mov
and
add
adc
xor
cmp
enter
inc
sbb
dec
dec
pop
lcall
add
mov
dec
sbb
jae
sbb
mov
push
mov
movsl
out
and
loopne
pop
cltd
add
sbb
hlt
cmc
mov
or
aaa
pushf
mov
push
repz
fcoml
fadd
and
mov
cmp
imul
cmpsb
jo
jmp
dec
lods
pop
out
and
mov
fidivrs
loopne
ja
xchg
rorb
add
fsubl
or
pusha
mov
mov
adc
mov
clc
inc
aaa
cmp
add
cmp
cltd
mov
pusha
mov
jecxz
test
insb
inc
xchg
fisubl
movsb
xchg
mov
insl
inc
inc
jl
xor
mov
aas
decb
pop
aad
or
mov
icebp
sbb
and
inc
mov
es
jno
repz
mov
sub
push
lods
and
popf
cmp
loopne
push
scas
fadd
dec
sahf
cmpsl
addr16
stos
lods
jle
xchg
sbb
repnz
sub
test
pop
dec
add
int3
out
in
or
xor
mull
scas
sbb
jae
jbe
jbe,pn
mov
and
push
enter
out
jno
popf
adc
mov
gs
sahf
or
sub
dec
cmp
inc
cld
sbb
xchg
sub
stos
cmp
std
inc
inc
mov
pop
cld
adc
scas
test
stos
lahf
and
dec
outsl
mov
dec
sub
jecxz
negb
push
lret
ficoml
mov
and
sahf
stos
jns
roll
int
roll
ss
ret
fbld
mov
push
imul
int
jg
xor
imul
icebp
add
mov
or
add
dec
loope
stos
sbb
test
sbb
cli
ss
or
jno
test
orl
xchg
outsb
jecxz
lods
notb
mov
cltd
icebp
and
sti
fidivl
pop
fwait
pop
lret
lcall
aaa
fcompl
stos
push
insl
sbb
adcl
jmp
jb
xchg
or
cs
lcall
add
daa
xor
cmp
jg
movsl
dec
into
sbb
sub
xchg
xchg
out
test
hlt
push
pop
into
cld
fnstsw
adc
test
gs
iret
sub
inc
jno
fstpt
or
lods
pop
lods
dec
cmpsl
loopne
and
aas
lds
mov
sub
fsubr
imul
sti
add
adc
ret
inc
cmp
stos
mov
jg,pn
mov
cmpsb
fisttpl
cli
sub
in
hlt
add
imul
xchg
int3
push
mov
adc
aad
jbe
pop
mov
xchg
push
or
jmp
jmp
sahf
mov
mov
imul
rcrl
mov
loope
mov
pop
mov
scas
pop
pushf
mov
cmp
or
push
inc
dec
enter
xchg
mov
int3
stos
and
cli
fistps
xor
jecxz
fidivl
insb
mov
loopne
out
aaa
sub
fldl
cmpsl
mov
mov
loope
add
xchg
push
aam
xchg
fcmovu
or
scas
dec
aam
add
nop
and
push
dec
mov
jbe
add
mov
jg
cmpsb
pop
imul
roll
test
pop
cmp
jmp
std
pop
mov
fisubrs
je
das
sub
in
fimuls
adc
sub
add
jmp
js
jl
sub
fwait
sub
xor
insl
lret
jno
push
mov
sub
cmp
mov
nop
mov
xlat
enter
xchg
sbb
sub
pop
jg
jle
mov
push
mull
repnz
pop
mov
xor
add
mov
xchg
xchg
stos
xor
fidivrs
push
jge
fs
stos
mov
out
cmc
sub
xor
lcall
or
call
lods
loop
xchg
lods
outsb
insb
test
jno
push
push
movsb
pop
jnp
nop
push
pop
or
push
sahf
push
or
test
shrw
cli
or
cmp
sbb
icebp
lea
test
outsb
push
sbb
push
and
mov
pop
mov
xor
fistpl
jecxz,pt
inc
jbe
push
mov
cltd
cmp
ja,pt
cmp
into
sub
cmp
jbe
push
jg
mov
lahf
stos
rorb
movsl
pop
or
cmp
dec
sbb
xchg
mov
cmpsb
aam
mov
fmull
shll
adc
lea
xlat
ljmp
adc
push
js
ss
mov
inc
ja
fnstsw
pop
inc
mov
lods
add
mov
adc
arpl
sub
and
mov
rcrb
adc
bound
mov
cmp
mov
movsb
pop
xchg
sbbl
or
pop
pop
jge
mov
or
ja
in
dec
fmull
or
mov
shlb
sbb
iret
pop
adc
dec
jge
inc
jg
cmp
and
and
fmull
imul
dec
cli
cli
sub
adc
in
xlat
lds
pop
mov
and
fcmovb
insl
orl
jp
pop
fstps
xchg
incb
sub
das
inc
aaa
inc
sbb
and
sbb
pop
scas
cltd
repz
sar
push
push
sub
push
lods
mov
push
pop
stos
cltd
xchg
test
repz
push
stos
push
xor
mov
xchg
jae
ret
mov
jo
iret
shll
add
mov
jne
sbb
mov
mov
mov
xchg
js
xor
pop
xchg
and
inc
jp
cmpsb
xor
rol
and
cwtl
imul
ret
and
sarl
faddp
sub
cmpb
jnp
popf
stos
dec
mov
pop
cmp
lds
fs
iret
jle
add
mov
mov
xor
and
call
out
dec
xchg
orl
jne
lret
inc
lret
jae
cli
cltd
ljmp
js
cmp
mov
xor
ret
scas
cmp
sub
lret
cmpsb
push
or
and
xor
jmp
mov
mov
bound
subl
xchg
ds
in
cmp
mov
cmp
mov
roll
loopne
das
pop
pop
sub
push
push
or
daa
add
lods
scas
xchg
pop
sub
nop
ficompl
enter
dec
scas
jge
cmp
fisttps
pop
insb
fucomi
daa
mov
dec
les
fistpll
dec
xchg
jl
aad
out
fs
fxch
cmp
test
or
fildll
shr
xchg
and
data16
pop
or
xchg
cmp
cmp
icebp
imul
sahf
and
stc
movsb
jnp
cwtl
int3
pop
and
lods
add
aad
aas
dec
jb
push
cmp
cli
mov
sub
fildl
mov
dec
and
sbb
or
sbb
push
mov
pop
cmp
xchg
insl
pop
add
lahf
int
scas
inc
push
dec
out
fadds
cmp
push
xor
jmp
in
add
mov
push
sub
adc
je
sub
jp
loope
or
aad
xor
mulb
movsl
in
in
mov
repz
dec
sbb
adc
sbb
rorb
add
inc
fcoml
xchg
mov
hlt
push
xchg
insb
jo
fildll
jbe
pop
adc
xor
vmwrite
cmp
clc
jecxz
andl
cli
xchg
sub
fmul
insb
jo
mov
inc
and
xorb
divps
push
pop
roll
mov
stc
fstpl
adc
jmp
lds
aaa
sub
jl
pop
add
imul
icebp
cmpl
pop
pusha
stos
add
addr16
cmc
mov
cmpsb
sub
aad
mov
mov
addl
aas
pop
jns
xchg
popa
pop
mov
das
pop
in
insl
stc
aad
sbb
les
or
mov
jae
lcall
lret
sub
jno
data16
jl
and
popf
push
push
push
fisubrl
in
pop
push
mov
push
inc
jae
lea
sti
and
adc
lods
sbbb
sbb
fidivs
jno
test
push
mov
out
push
lahf
xor
cs
sub
in
inc
shrl
dec
rolb
mov
fwait
push
jmp
add
xchg
inc
adc
daa
xchg
fstps
add
popa
outsl
cmp
es
les
std
add
pushf
cld
into
inc
pushf
aam
pop
ret
push
or
fsubl
jg
or
adc
enter
js
cmp
xchg
dec
rcll
dec
xchg
shll
mov
pushf
cmc
push
jge
pop
push
cmp
mov
andl
icebp
sub
sbb
jg
lock
pop
cmp
add
pushf
sub
push
fildll
clc
pop
push
andl
pop
in
clc
clc
fs
dec
loope
arpl
and
hlt
lds
push
and
cmp
int
xor
frstor
nop
adc
shl
sahf
lods
hlt
repz
sbb
adc
daa
pusha
jg
xchg
js
pop
scas
or
repnz
sti
mov
add
push
lds
ja
adc
aad
mov
xchg
mov
sbb
pop
in
lcall
aad
insb
adc
xchg
rolb
aam
pop
inc
pop
lods
dec
cmp
mov
add
jb
xor
movsl
mov
movsb
jbe
out
sub
popf
in
add
sub
inc
pop
enter
sub
insb
pop
jne
add
into
dec
js
cmpsb
or
dec
nop
or
jle
loope
lea
loopne
fistpl
int
rcrl
adc
sarb
push
lock
adc
aam
mov
pusha
aam
into
mov
imul
fnstcw
sub
inc
dec
lret
loop
jbe
add
dec
pusha
mov
mov
js
dec
push
test
nop
pop
pop
repnz
mov
xor
pop
or
in
cmp
nop
add
mov
imul
bound
lods
loopne
or
add
cmpb
ret
xchg
fs
stc
and
lea
dec
ds
mov
test
rclb
lahf
stc
lret
mov
xlat
mov
xchg
icebp
mov
mov
sbbl
in
jae
lds
cmp
jp
repz
jno
dec
dec
popa
push
or
outsb
jmp
or
inc
subb
inc
mov
adc
cmp
xor
fisttpl
ss
sbb
cmp
mov
pop
aad
mov
jl
iret
ja
std
jbe
sti
xlat
sbb
movaps
fwait
sub
das
fsubrl
gs
pop
sbb
arpl
stc
aas
mov
mov
mov
ss
pop
mov
mov
inc
sub
jp
mov
pop
les
xor
fldenv
sub
negl
jmp
lock
dec
shrb
adc
aam
ja
in
lcall
xor
aad
js
xchg
mov
push
int3
cmp
mov
cmpsl
mov
pop
cmp
mov
ret
ss
push
imul
aaa
popf
cmpsb
shlb
fiaddl
xor
out
cmp
sbb
push
ljmp
mov
push
and
adc
push
les
mov
out
lds
cmc
push
les
faddl
negl
cli
or
inc
aas
out
mov
insl
xlat
enter
mov
arpl
jmp
daa
nop
daa
pop
out
shl
push
or
jbe
subb
icebp
mov
leave
sbb
je
jge
sub
lea
dec
cmpsb
stc
cmp
movsl
dec
fldt
ret
repz
das
push
adc
mov
fcmovnbe
fs
fstpl
arpl
push
pop
pop
adc
roll
mov
push
pusha
or
jae
xchg
xchg
pop
fwait
insb
adc
mov
iret
xor
movb
clc
xchg
jns
jne
cs
fwait
addr16
fwait
cmc
sbb
add
test
stos
push
insb
and
adc
mov
xchg
outsl
and
dec
push
in
push
aam
pxor
out
test
hlt
sub
ljmp
jp
dec
shlb
fwait
popa
adc
data16
popa
sub
add
jl
mulb
dec
mov
add
xchg
pop
mov
in
repnz
sahf
push
xchg
mov
xor
dec
pmuludq
pushf
out
sbbl
repnz
mov
cli
push
sbb
push
cmp
out
nop
rorb
jb
mov
and
dec
push
jecxz
ds
jns
push
fdivrs
cwtl
xlat
xor
push
mov
xchg
rcll
imul
push
sahf
add
enter
into
subl
mov
sub
xchg
dec
push
out
fistpl
push
jb
dec
mov
ljmp
lock
push
insl
sbb
mov
cmpsl
orb
je
xchg
jg
lods
push
sub
int3
mov
sub
jne
adc
stos
in
jg
xchg
mov
repnz
es
bound
jg
enter
sahf
add
push
adc
js
and
mov
inc
push
rol
dec
pop
mov
fptan
arpl
cs
sub
repz
ljmp
jecxz
xor
dec
out
add
ds
push
sbb
or
test
stc
xchg
int
xor
pop
jnp
test
inc
cld
fsubr
pusha
fadds
xor
stos
or
insb
in
cmp
pop
mov
decl
pop
stc
hlt
cmp
sbb
lds
xchg
sahf
jge
mov
loopne
ljmp
xchg
dec
jmp
cltd
fcomp
roll
adc
in
dec
mov
subb
cmp
pushl
call
mov
push
and
jg
jmp
push
fwait
clc
inc
push
out
cmp
mov
dec
mov
lock
nop
imul
sbb
dec
sbb
jg
xchg
adc
repz
call
iret
xor
push
test
mov
pop
push
sarl
subl
les
mov
cwtl
icebp
std
cmp
sti
cld
insl
clc
ret
ja
fwait
movsl
add
cmp
fstp
jp
jae
fidivs
aas
mov
call
jae
loop
dec
popf
pop
movsb
stos
lcall
in
xchg
xor
or
lcall
stc
fcmovu
lret
lock
stos
cmp
push
jg
mulb
movsb
aad
dec
ja
into
sbb
sahf
and
xor
xchg
sub
cmpsb
aas
cmpsb
sbb
aas
jo
iret
dec
out
jo
push
pop
hlt
xorb
sbb
movsl
fsubl
inc
sbb
or
adcb
and
outsb
pop
aad
nop
mov
push
mov
iret
xchg
in
imul
jmp
mov
push
mov
adc
push
mov
jne
aam
mov
push
sti
pusha
shlb
adc
mov
call
mov
mov
mov
push
dec
or
adc
mov
jle
rcll
ret
adc
mov
and
push
pop
stos
aam
xlat
push
mov
and
push
xor
push
shlb
sub
insl
jne
xor
negl
or
adc
sub
sbb
in
inc
nop
mov
insl
cld
int
loopne
es
test
mov
test
cmc
inc
je
arpl
fs
adc
scas
ss
sti
push
test
jmp
mov
cmp
mov
jl
dec
lock
or
movsb
dec
in
divl
out
std
xor
int3
mov
ljmp
and
stc
sub
xlat
mov
call
push
es
mov
add
cmp
popf
jo
lahf
push
mov
lret
iret
mov
pop
cmp
sub
cmp
cwtl
inc
sub
into
mov
shll
sti
xor
pop
xchg
inc
in
xchg
push
clc
rcl
adc
jno
out
mov
jg
or
xchg
cs
lock
jnp
pop
cmp
incb
orb
mov
jbe
xchg
aad
dec
repnz
sbb
push
dec
ljmp
push
enter
push
jns
lahf
aas
mov
mov
aaa
sbb
daa
outsb
xchg
sub
out
push
jecxz
inc
xorb
or
popf
lods
jl
ja
es
mov
jbe
loop
inc
adc
cmp
pop
and
repnz
cmpsb
or
inc
add
insl
adcb
sbb
cmp
xor
cmpsl
mov
pop
sar
imul
and
cmp
fistps
jno
test
cli
mov
movl
fcoml
psadbw
mov
inc
mov
je
lods
push
dec
cmp
loope
jno
cmp
adc
dec
dec
fs
cmp
cmp
call
pop
mov
xlat
aaa
and
mov
cli
dec
fcmove
mov
or
mov
ret
pushf
sub
dec
inc
shlb
mov
sbbl
scas
sbb
inc
lahf
or
mov
pop
jmp
pop
adc
pop
and
cmpsb
xchg
nop
jb
arpl
insb
xor
mov
pop
push
es
and
imul
mov
aad
aaa
add
pushf
arpl
rolb
pop
push
mov
xchg
fistpl
jns
cli
js
shrl
fiadds
inc
cmp
mov
jecxz
cmp
pop
mov
mov
pop
mov
or
out
jmp
imul
popa
movsb
fwait
cmpsb
mov
or
je
enter
ret
jl
and
cmpsl
push
push
xchg
sbb
shlb
pop
jno
add
xchg
push
cmp
push
call
push
mov
push
cmp
mov
add
clc
or
add
mov
es
sti
xor
pop
in
inc
sub
adc
pop
cmp
mov
add
int3
pop
arpl
mov
dec
mov
mov
jne
cmp
pushf
lahf
mov
in
sahf
addr16
sbbl
inc
jecxz
pop
or
js
xchg
inc
mov
pop
push
andb
pusha
sub
sbb
mov
xlat
repnz
shrl
cmp
dec
pusha
test
push
fs
dec
mov
jmp
or
lods
lret
lcall
movsb
jns
cmp
sbb
mov
rep
or
xchg
repnz
jl
and
sbb
jg
add
or
mov
mov
xchg
lahf
xor
jne
hlt
in
paddw
inc
insb
add
roll
xor
gs
fadds
xor
lcall
fwait
ret
adc
lods
inc
fildll
pop
shrb
movsl
flds
jae
std
jecxz
cs
lds
jbe
cs
scas
sbb
jecxz
and
and
in
mov
pop
or
fucom
fimuls
cmpsb
sarb
out
pushf
mov
nopl
into
lret
inc
xor
clc
jbe
push
mov
cmpsl
xchg
lret
push
cmp
sti
push
xchg
push
inc
cwtl
sub
inc
inc
xchg
sub
movsl
and
lea
cld
jle
lret
jnp
movsb
fmuls
cmp
mov
ljmp
xchg
cli
int3
lret
jmp
sub
ret
cli
in
adc
and
mov
les
add
lahf
xchg
mov
push
fildl
and
aaa
cmc
lret
adc
cwtl
dec
sbb
xor
mov
xchg
aas
ss
or
sub
imulb
fsubrp
pop
fwait
in
das
stos
push
imul
or
lcall
push
sbb
js
addb
push
xor
adc
jl
aad
adcl
fimuls
or
leave
lock
fldcw
imul
shr
js
fsubs
pop
out
push
inc
adc
xchg
scas
adc
data16
icebp
pusha
xchg
jo
jl
sbb
stos
insl
xor
mov
push
and
imul
in
clc
popl
inc
or
xor
mov
push
cs
inc
xorb
and
pop
mov
xor
jb
jbe
jno
into
popa
movsl
and
mov
push
inc
mov
aam
aad
mov
cltd
fbstp
shlb
or
pop
mov
push
xor
xchg
sti
dec
pop
push
sbbl
jnp
xor
cmp
dec
repnz
and
mov
fs
pusha
jg
popa
repnz
sub
aam
sbb
test
cmp
push
push
sub
pop
rcrb
push
aam
sbb
inc
cli
add
jne
xchg
stc
jb
cmc
lods
and
cmp
sub
mov
cmp
sub
mov
sti
dec
sbb
jmp
cmp
int
jns
lcall
ret
into
xor
test
sbb
mov
jo
stos
mov
inc
jb
stc
lahf
les
push
pop
scas
mov
ja
mov
push
push
dec
sub
cld
pop
add
mov
in
xchg
in
stos
jg
divw
push
and
ljmp
aas
daa
dec
mul
lahf
mov
leave
outsl
cmc
sub
sti
ret
iret
das
inc
xchg
add
pop
rorl
or
ss
ret
cli
fmulp
cmp
jae
popa
mov
fisubrl
jge
clc
lret
jnp
mov
loopne
jae
test
pop
sub
repz
mov
xchg
jbe
xor
dec
es
lods
pop
popf
out
leave
fiaddl
daa
inc
xor
fbld
fwait
adc
cmp
dec
inc
scas
cwtl
icebp
pop
dec
mov
jecxz
das
sub
sbb
mov
ficoml
push
push
fistpll
adc
mov
cmp
cs
test
add
out
jmp
inc
mov
mov
stos
adc
mov
scas
je
cmp
sahf
pop
ret
sbb
xor
loop
out
push
insb
movsb
fbld
lret
mov
addr16
push
ud2
xchg
jp
in
hlt
pop
push
es
dec
addr16
cmpsl
mov
clc
sbb
jmp
pop
mov
pop
shrb
outsl
test
in
or
xchg
dec
inc
outsl
and
call
in
dec
idivl
mov
fwait
call
push
jl,pn
mov
pop
out
scas
jge
push
add
xor
sub
in
mov
aam
jmp
push
adc
push
pop
out
push
xchg
pop
fadd
in
xlat
cmp
jl
fsub
inc
ret
data16
push
sub
xchg
or
push
xchg
orl
lret
xchg
int
fldcw
mov
jne
push
lds
mov
cmp
leave
cli
xor
mov
std
inc
pop
popf
popf
add
out
test
sub
fsubs
sbb
cmp
lcall
movsb
les
add
adc
inc
adc
mov
dec
sbb
dec
mov
popf
in
add
cmp
cmp
jecxz
cmp
lcall
push
jl
movaps
loop
movb
aad
inc
clc
jl
push
rolb
pop
xchg
push
push
mov
jb
mov
inc
pop
dec
sub
mov
sti
jnp
rep
lahf
jae
inc
mov
pop
outsl
dec
dec
ds
add
imul
sub
imul
cmp
lds
xchg
mov
lret
xchg
cld
push
push
out
aas
cmp
and
sar
subb
ss
in
xor
cmpsl
jle
popf
add
sbb
cli
testb
imul
test
test
sub
pop
into
outsb
or
stc
andl
pop
leave
dec
xchg
push
fsubr
inc
out
das
lock
xchg
dec
dec
push
cmp
data16
nop
jecxz
mov
cmp
je
iret
lret
stos
pop
loop
lret
or
aas
xor
xor
push
gs
pop
xchg
mulps
outsl
out
jnp
push
les
mov
aas
addb
aas
repz
aam
ljmp
push
pusha
inc
scas
mov
mov
cmp
fnstenv
jle
jl
pop
mov
mov
jo
xor
fdivl
or
cmp
fmull
dec
fmulp
pop
jno
test
loopne
std
mov
inc
int3
cmp
sub
cmc
adc
les
data16
decl
rclb
sahf
fcmovnb
xor
sbb
xchg
pushf
repnz
cmpsl
mov
dec
scas
rclb
repnz
xor
bound
pop
call
add
scas
cwtl
out
loope
mov
cltd
std
lret
ret
pop
mov
or
jno
inc
mov
imul
jl
cmp
cltd
push
lods
sbb
mov
pop
xor
xchg
cld
notb
push
addr16
daa
cmc
sarl
and
andl
fcoml
popa
jb
orps
fiaddl
test
and
mov
and
or
sbb
ja
ljmp
sbb
shlb
int3
nop
mov
inc
cmp
xchg
sub
and
leave
push
call
outsl
incb
clc
lret
xor
cs
jno
dec
mov
inc
and
adc
clc
dec
push
insb
aam
fsubp
pop
mov
and
adcl
je
push
pop
or
xchg
inc
cli
xchg
testl
push
aaa
cmp
pop
imul
imul
iret
inc
jo
into
test
add
or
or
cmp
clc
sbb
and
push
es
jle
aam
stc
push
sbb
adc
inc
xor
bound
cmp
popa
dec
repz
out
sbb
push
add
mov
psubd
je
xor
add
int3
icebp
out
in
ret
mov
popa
cmpl
pop
mov
sub
sub
push
pop
sub
mov
leave
add
adc
mov
jbe
repnz
dec
mov
icebp
push
mov
and
and
std
adc
das
in
xchg
addr16
or
ficoml
jns
xchg
mov
mov
addr16
stos
test
inc
or
rcl
or
sub
push
imul
adc
and
mov
sub
in
mov
stos
ljmp
rorl
xor
mov
mov
lret
test
fldl
fcoms
push
push
in
sub
sbb
mov
lret
iret
call
dec
inc
cmpl
inc
xchg
cmp
dec
sub
inc
mov
mov
mov
mov
rcr
inc
fisubrs
insb
mov
inc
bnd
flds
mov
call
dec
loopne
rolb
and
adc
fsubs
nop
bnd
imul
gs
dec
test
and
leave
xchg
push
push
cmp
je
adc
cmpl
ljmp
adc
push
and
testl
loope
adc
bound
jo
insl
js
mov
sbb
sub
mov
xor
adc
mov
or
jge
adcl
fdivrl
addr16
push
mov
mov
aaa
divb
inc
js
sub
mov
lock
push
pop
test
out
lret
pop
lea
xchg
mov
out
das
cld
stc
arpl
ret
push
in
jl
mov
rcrb
mov
jge
pop
addr16
inc
loope
adc
and
rcrl
scas
fdivs
pushf
shlb
idivl
movsb
xchg
movsb
xchg
or
fs
or
ss
and
pop
lret
dec
dec
int3
pop
lret
jg
fcompl
xchg
mov
stos
mov
jne
mov
repz
add
daa
xchg
repz
pop
insl
lods
cmpsl
fs
or
pusha
push
into
sbb
ljmp
xchg
jmp
xor
js
enter
sbb
cmpl
or
fistl
or
shrb
push
add
shl
mov
jg
pop
add
lahf
pop
fists
cmp
clc
inc
push
dec
sbb
mov
xchg
sbb
mov
loopne
enter
cmp
mov
xor
out
xor
addb
test
daa
adc
fs
xchg
cmp
bound
mov
or
test
xchg
inc
fdivs
sub
leave
scas
shrb
adc
cltd
adc
sub
out
clc
cmpsl
hlt
jo
and
mov
je
push
loopne
mov
scas
mov
mov
cmpsb
adc
xchg
and
push
je
cmpsb
fimull
fucomp
and
sub
dec
enter
cmpsl
jmp
xor
clc
mov
lods
mov
xor
sub
jge
xchg
pop
je
fildl
xor
enter
out
mov
loopne
push
cmp
mov
lock
mov
jnp
mov
and
adc
dec
les
fnstcw
icebp
mov
cmp
lret
pop
xor
je
pusha
lcall
cmp
cs
nop
in
sub
dec
roll
fs
clc
icebp
jno
mov
cmp
mov
das
into
jnp
sarl
pop
movd
shrb
add
lahf
ljmp
xchg
jle
cmpsb
sbb
aad
ljmp
jmp
jp
je
xor
stc
adc
nop
sbb
subb
xor
mov
xor
dec
add
out
cmp
push
scas
mov
scas
inc
jg
shll
lret
repz
ret
aad
inc
jle
loop
push
or
hlt
fldlg2
xchg
lock
loop
cld
ficoml
xor
pop
and
push
mov
leave
cltd
xor
mov
daa
add
cmp
ljmp
scas
in
dec
dec
pop
inc
push
jns
push
ds
or
pop
cmc
xor
push
sub
lock
sbb
movsb
xchg
xchg
jne
rcl
add
mov
cwtl
and
pop
jge
add
lods
mov
rorb
imul
and
push
jmp
sti
call
jl
ds
add
enter
rcrl
rol
jg
popf
add
mov
mov
fsubs
lods
cmp
rcrl
cmpsb
jbe
lods
adc
jne
lret
xchg
xchg
into
sub
jb
xchg
mov
ret
adc
rcrl
mov
dec
mov
clc
push
sahf
or
sbb
pop
mov
out
rol
pop
loope
inc
dec
addr16
in
bound
sub
push
dec
rcrl
jp
sbb
mov
mov
in
xchg
ja
add
mov
cmp
dec
or
mov
scas
mov
push
add
hlt
jae
xlat
xor
push
mov
loope
lods
pop
roll
sbbl
cld
mov
imul
fsubrl
lods
ja
shll
push
mov
int
xlat
add
sbb
pop
cli
mov
jno
insl
ds
cmp
jl
fsubl
mov
pop
inc
aam
xchg
dec
outsb
lds
push
xchg
ret
cmovp
aam
cwtl
scas
mov
dec
cmp
mov
mov
inc
sarl
jo
sti
jl
push
and
pop
and
in
sti
outsl
adc
aam
lock
repnz
icebp
inc
xlat
loopne
ds
sub
out
orl
mov
into
fimuls
sub
xchg
mov
push
call
cmc
add
xchg
sbb
ret
fdivrs
ja
xorb
mov
pusha
inc
into
bound
push
sbb
jp
movsl
mov
sbb
shrb
ret
push
mov
movsl
or
push
push
mov
add
pushf
and
inc
mov
cmp
popa
cmp
sti
push
inc
mov
fcompl
bound
or
in
mov
and
enter
iret
sqrtps
and
in
dec
sub
push
pause
jl
adc
sbb
cmp
mov
mov
inc
nopl
mov
sarl
cli
mov
adc
sub
lret
lret
mov
xchg
sbb
xchg
or
and
jmp
fwait
dec
jecxz
cli
fidivrl
add
incl
xor
add
jle
mov
fsubp
pushf
adc
push
push
push
faddl
popa
xchg
cmp
fcmovne
cmp
mov
xchg
daa
jp
jae
sbb
loop
xor
mov
popa
push
mov
lahf
mov
cmp
lea
fs
pop
jp
sbb
push
scas
mov
shrl
add
sbb
jl
fdiv
xchg
inc
sti
inc
leave
push
aas
and
adc
ss
xchg
cmc
aas
mov
add
xor
pop
jnp
rcr
or
filds
ja
or
jb
mov
adc
xchg
movsl
xor
mov
adc
dec
cmc
cmc
push
mov
jecxz
adc
jo
mov
adc
adc
repz
notl
push
imul
adc
add
mov
into
fcomp
mov
add
add
mov
xchg
add
je
sbb
pop
sub
jl
insb
lods
xchg
adc
inc
pushf
arpl
pop
test
or
pop
aad
cmp
fdivs
push
fstpt
sub
sbb
cmc
jno
xchg
scas
pop
hlt
fmuls
sub
mov
inc
inc
test
sti
cmp
les
jmp
ja
mov
or
mov
icebp
js
inc
jbe
mov
stc
jnp
pop
out
dec
xchg
and
cmc
push
add
or
xor
addr16
inc
add
loop
ds
movsb
mov
dec
and
lcall
xchg
shrb
stos
adc
pop
add
dec
cmp
sbb
push
leave
aam
jmp
ret
lcall
cmc
jns
lock
dec
xchg
lret
iret
mov
fbld
mov
jle
mov
int3
jmp
iret
pop
mov
mov
pop
sbb
imul
cmp
push
insl
sti
mov
jecxz
inc
jnp
cmpsb
and
push
cmp
push
test
pop
adc
inc
outsl
xchg
xlat
in
push
ret
mov
cmpsb
and
add
outsb
push
ds
inc
sar
sbb
jae
xchg
nop
mov
test
jnp
mov
add
cmp
jl
adc
dec
out
lods
jge
insl
jb
jbe
pop
mov
popa
lock
clc
xchg
or
xor
jle
frstor
cmp
pushf
jge
pop
sub
movsb
pop
outsl
ucomiss
mov
inc
sarl
test
sbb
cmp
lods
int
inc
jl
mov
aad
loopne
ficoml
iret
xor
push
xor
xchg
jl
mov
loope
scas
sub
push
int
pop
and
daa
dec
hlt
pusha
std
stos
pop
arpl
jne
xabort
push
scas
je
jae
in
lea
cmp
orl
nop
mov
andb
dec
adcl
mov
xor
mov
sub
mov
dec
aad
sub
test
repnz
jle
sbb
xor
test
hlt
andb
inc
fs
mov
ss
insl
das
aas
dec
jbe
mov
shlb
int3
aam
inc
mov
insl
testl
arpl
lods
into
cmp
push
sbb
xchg
jg
jnp
fiaddl
ret
imul
jmp
mov
xchg
std
repnz
sarb
dec
cmpsb
mov
push
inc
popf
addr16
add
mov
adc
push
push
inc
add
mov
sub
xlat
outsb
xchg
or
jle
push
test
lahf
sub
push
dec
push
xchg
das
rcl
ret
mov
fistpll
repz
pop
mov
jns
mov
sahf
aam
xor
add
inc
aam
mov
stc
mov
rcrl
xor
pop
xlat
or
loope
pop
inc
push
in
in
fnstenv
scas
xchg
inc
pop
cmpl
xchg
jns
push
adc
adc
out
adc
mov
cli
testl
xor
push
vucomisd
dec
andb
imull
add
fs
test
dec
dec
jnp
out
xor
lods
ljmp
fisttps
ljmp
cs
insb
shlb
xlat
ss
xlat
rorl
repz
dec
ja
inc
out
aaa
adc
cmp
inc
fistl
mov
adc
sarl
sti
idivb
inc
adc
fwait
pop
cmpsl
cmp
ret
call
popf
cmp
mov
sub
sub
aam
out
xor
sarl
adc
pop
lret
fmull
cmp
add
in
loope
or
in
scas
xchg
dec
mov
mov
fsubs
xor
and
int3
pcmpgtd
or
fldcw
inc
xchg
pushf
cmp
ret
xchg
test
mov
jno
outsl
outsb
and
or
inc
incb
sub
insb
jp
inc
xchg
inc
pop
push
sbb
mov
sbb
sub
xchg
cltd
aaa
frstor
imul
movsl
popf
data16
mov
adc
sti
and
cltd
outsb
stos
push
fstpl
adc
push
dec
insl
jp
xor
or
lcall
add
cmc
inc
dec
out
arpl
test
cmc
pop
shr
push
repnz
orl
psubusb
pop
push
inc
lret
fnstenv
mov
and
jg
inc
push
pop
jb
dec
outsb
loopne
loopne
add
loop
aaa
dec
dec
ljmp
push
or
mov
stc
out
mov
pop
int3
xchg
sbb
mov
mov
movsb
and
int3
ret
push
xor
repz
jnp
sbb
jle
inc
movsl
sub
and
into
sbb
pop
inc
inc
mov
cmpsl
xchg
cld
mov
push
jge
int3
test
scas
lcall
ret
cld
and
inc
arpl
or
pop
push
xor
movsb
mov
das
pop
inc
adc
nop
pop
push
sbb
mov
mov
mulb
rorl
or
mov
je
int3
loop
dec
mov
mull
mov
xchg
mov
in
pushf
pop
adc
lret
and
stc
imul
sub
gs
push
pop
sub
popf
jbe
jecxz
xchg
xor
scas
leave
ljmp
push
outsl
stc
jb
sub
inc
push
jo
pop
sbb
cmpsb
subb
and
shrb
mov
movsl
mov
cmp
enter
ja
cld
loopne
xor
fcomi
mov
inc
mov
sbb
or
adc
out
shrl
xor
xor
jge
xchg
fildll
loop
dec
into
mov
adc
jns
nop
xor
aad
xor
xchg
rclb
mov
addl
jge
mov
sub
outsb
mov
push
fwait
notb
loop
cmp
push
fidivs
sub
dec
sub
pop
jecxz
sbb
mov
sbb
test
arpl
mov
imull
movsb
adc
or
icebp
adc
setl
fs
pusha
and
pop
cmpb
inc
or
lcall
gs
shrb
inc
push
sbb
jge
leave
in
pop
xchg
fists
fwait
jnp
popa
xchg
popa
sub
xchg
fmull
sub
addl
test
mov
and
cmpsb
nop
sub
mov
xor
fcmovne
fistpll
outsb
pop
repnz
arpl
lods
stos
xchg
insl
add
repz
data16
xcrypt-ecb
cmpsl
dec
shll
mov
adc
jae
push
data16
mov
xchg
mov
fwait
ret
cmp
adc
pop
pop
push
jmp
adc
mov
mov
ret
or
dec
clc
aam
inc
mov
mov
repnz
mov
push
sahf
jne
jb
push
imul
stos
stos
lret
aas
lea
stos
xlat
or
rol
push
jo
imul
mov
cltd
push
leave
add
lea
xchg
cli
insl
xchg
push
pop
add
jmp
pop
int
ficompl
mov
add
inc
jnp
cmpl
adc
mov
adc
repnz
pop
pushf
add
dec
sarl
push
out
adc
inc
inc
or
mov
arpl
and
xchg
push
add
pop
sbb
mov
mov
lea
gs
bound
sahf
lods
inc
arpl
sub
push
push
inc
jne
in
mov
stc
lea
scas
mov
push
lods
dec
pop
dec
sti
scas
push
cld
add
sahf
scas
ja
test
add
mov
jb
dec
shlb
ljmp
bound
fwait
lretw
sbb
enter
outsl
mov
push
pop
add
popf
shl
js
sbb
stos
daa
movsl
sub
sbb
je
pop
inc
aaa
pop
cmc
add
adc
mov
scas
xlat
sub
cmp
mov
mov
push
sub
add
push
or
mov
aas
dec
in
lahf
pop
cmpsl
adc
and
dec
jecxz
insb
lcall
and
xchg
mov
lret
test
pop
and
adc
mov
repz
fwait
or
xchg
pop
pop
fiadds
sbb
sbb
imul
jecxz
sbb
std
loop
xchg
movntps
dec
jg
or
dec
xor
jnp
in
add
rcl
cli
sar
sub
dec
lock
add
xchg
std
mov
fistps
mov
gs
mov
cltd
rol
in
pusha
jae
pushfw
pop
fwait
out
data16
insb
aaa
pop
sarl
inc
xchg
mov
and
xor
add
adc
add
mov
mov
arpl
dec
mov
daa
inc
out
movsl
sbb
push
in
sub
jl
pop
mov
rcrl
cwtl
inc
and
jle
cmpsb
call
adc
sbb
or
inc
sub
jl
cmp
xchg
rcrb
mov
cwtl
cmp
adc
aas
adc
fisttpl
add
and
call
mov
mov
mov
lds
fucomip
sbb
push
push
xchg
xor
push
fwait
in
rcrb
inc
sub
xor
jae
cmp
in
push
ss
adc
pushf
gs
int3
jle
mov
pop
hlt
push
jp
fnstcw
mov
inc
pop
sar
adc
sbb
lret
dec
pop
data16
cmp
pop
cmp
orl
lods
jb
and
mov
ljmp
lds
sbb
rclb
sahf
adc
lcall
ja
mov
stos
cmp
mov
loop
push
fdivrp
out
mov
inc
test
sbb
mov
mov
in
pop
movsl
push
cwtl
insb
mov
ret
inc
aad
inc
jl
xor
or
bound
rorb
scas
fistps
cmpsb
xor
mov
jle
pop
mov
sbb
mov
cs
pop
outsb
movsl
add
and
mov
aas
out
lcall
popl
fs
ljmp
mov
daa
in
add
stc
fwait
sbb
sub
mov
pop
add
sub
and
jmp
addr16
imul
jmp
or
pop
testb
push
pop
xor
cmpl
jns
xchg
lret
sub
out
insb
lret
xchg
xchg
in
iret
maxps
mov
jp
jb
fdivl
cmp
adc
aam
fmuls
into
jo
or
sti
and
add
jnp
add
or
mov
lods
nop
fs
add
pop
jne
dec
rclb
cmc
xchg
mov
jae
mov
rorb
xor
push
jnp
lods
scas
dec
mov
roll
xor
and
rcrl
sub
sbb
mov
lcall
push
mov
xor
xchg
cmp
mov
test
nop
leave
pop
rcll
jge
aam
xchg
std
inc
mov
cmp
add
or
imul
inc
inc
int3
sti
pop
cmp
cs
ret
jo
test
cli
hlt
aas
jno
loopne
mov
popa
icebp
and
jmp
fstpt
mov
cwtl
iret
mov
js
mov
in
mov
cmp
or
pop
leave
lds
mov
pop
shlb
mov
lahf
leave
stc
sub
inc
push
xlat
xor
add
mov
cmp
inc
push
loope
jp
nop
cmp
add
rcr
pop
ret
fmuls
stos
push
mov
or
sub
das
push
cmpsl
out
add
mov
aad
mov
out
lea
dec
adcb
in
cmp
pop
idivl
xor
mov
adc
loope
shrl
ja
dec
pop
jnp
jge
fs
jbe
bound
aas
xor
inc
sub
sbb
je
fbstp
sbb
mov
xor
jle
repz
jbe
cmc
test
cmp
repnz
xchg
mov
and
sbb
dec
fdivr
mov
loopne
cmpsl
dec
sub
and
imul
dec
push
mov
sti
jnp
xor
add
and
push
push
mov
mov
mov
push
xor
ficoms
cmp
lahf
cmp
subl
inc
sbb
mov
mov
mov
movsl
jl
call
cmc
cmp
cli
and
bound
xor
or
adc
hlt
sar
add
testb
or
sbb
jo
ljmp
sbb
test
movsb
push
xor
les
stc
outsl
aam
ljmp
cs
push
xchg
xchg
stos
and
jnp
inc
mov
iret
das
add
jl
mov
add
mov
fdivs
and
pop
xchg
nop
mov
mov
int3
sarb
dec
fnstenv
push
imul
fiaddl
lcall
ljmp
mov
ret
xchg
jae
sti
shrb
jb
and
xchg
daa
fsub
enter
and
xchg
push
movsb
stos
add
arpl
push
pop
fs
adc
jg
loopne
or
ret
scas
scas
movsl
out
cmpsb
mov
arpl
aas
and
sbb
xchg
push
xor
jmp
jg
add
scas
mov
mov
xor
mov
cmpb
dec
cmc
outsl
pop
lahf
ret
mov
jb
mov
xchg
fcoms
mov
loope
test
fdivs
xchg
aam
pop
xchg
clc
mov
pop
ret
push
imul
sub
adc
sbb
fistl
push
ss
std
lea
sub
dec
les
xor
mov
pop
pop
xchg
mov
xor
fsubrs
daa
lahf
rorb
and
test
xchg
addl
fs
or
in
aad
stc
cmp
lcall
int3
loop
ret
push
dec
jp
mov
add
repz
jo
mov
movsb
in
dec
push
outsl
pusha
jbe
mov
lret
les
adc
popa
and
pop
push
push
xlat
xor
push
adc
cmpsb
das
jecxz
imul
hlt
jne
hlt
in
dec
sti
lret
and
insb
subl
ss
xchg
mov
sub
mov
adc
xor
and
jo
rdmsr
and
sub
fxch
sti
cmp
and
in
fnstcw
inc
shll
dec
jns
lcall
sub
sarl
jno
adc
movsl
sti
dec
int3
aam
sub
jmp
cmp
mov
dec
jno
sbb
fisubl
xchg
xchg
xor
add
cmp
test
dec
xchg
into
pop
dec
and
cwtl
sti
jmp
dec
push
aaa
sbb
fisttpl
std
fwait
sbb
push
mov
loope
and
cs
das
mov
cltd
fucomp
push
mov
out
push
jo
mov
push
ret
sbb
ret
sahf
addr16
xor
adc
pushfw
push
je
cmp
ret
jmp
inc
cmp
sub
jge
mov
and
jnp
or
mov
in
mov
dec
cmpsl
or
sub
jmp
push
jno
stc
imul
popf
and
sub
gs
push
cmp
es
pop
ds
std
mov
xchg
jae
clc
clc
mov
sub
aaa
lock
jbe
pop
int
jno
int
in
insb
adc
mov
pop
push
sub
aad
sbb
push
push
pusha
sbb
push
hlt
in
add
inc
xor
scas
out
adc
xchg
jb
pop
dec
iret
pop
cmp
jmp
not
push
andl
mov
mov
xor
jecxz
add
mov
mov
and
push
out
lahf
inc
out
in
sbb
mov
sub
addb
js
pop
in
shrd
add
xchg
lea
leave
stos
xor
mov
mov
ret
pop
ret
xchg
xchg
xchg
scas
shlb
mov
pop
xor
xchg
jo
sti
pop
aam
call
push
add
dec
out
dec
or
jb
add
push
rclb
ret
or
movsb
hlt
pop
jne
clc
ret
xchg
sbb
mov
out
fsubr
je
call
sti
shrl
cmp
insb
add
hlt
cwtl
dec
and
xchg
jl
test
mov
xchg
stc
addr16
in
fsubrl
pop
in
mov
movl
inc
pop
mov
loop
dec
or
or
push
clc
outsb
aas
sbb
dec
sbb
push
leave
dec
jp
test
sub
lods
xor
pop
pop
jae
into
xchg
ja
lods
repz
xor
push
fisttpll
imul
dec
rclb
repz
push
pop
mov
je
movsl
mov
fcmovbe
jbe
mov
add
sub
pop
jg
sub
aas
bswap
push
xor
pop
sbb
icebp
ret
pop
out
mov
dec
mov
inc
aam
fcompl
add
pop
arpl
and
mov
orl
add
jecxz
outsl
iret
mov
push
pop
inc
in
push
movsb
or
lret
popa
scas
test
pcmpeqd
mov
outsb
outsl
push
iret
clc
lcall
sub
and
stc
inc
mov
cmp
inc
scas
faddl
adc
xchg
and
lods
inc
outsl
xor
mov
sahf
cmp
push
fistl
fisttpl
mull
jnp
and
jae
jns
call
movsb
cmp
fmuls
dec
arpl
lret
nop
xlat
push
xor
push
mov
fdivrl
cmp
aas
clc
out
int3
push
imul
movsb
inc
mov
or
mov
rcrb
add
inc
and
or
jnp
jmp
fwait
xchg
rolb
cmp
jae
into
xchg
push
xchg
or
and
sub
and
xor
add
mov
stos
stos
pop
pop
arpl
push
int3
push
std
xchg
arpl
into
jae
xchg
push
adc
push
pop
sti
mov
shrb
adc
out
cmc
test
std
ficomps
inc
adc
gs
cli
outsl
and
out
add
fstpl
lea
inc
mov
xchg
aad
test
shl
repnz
rolb
adc
shrl
sub
ret
cld
cmp
pop
push
push
test
mov
das
fsubrs
ds
xchg
hlt
mov
sub
inc
int
sub
call
push
sti
sub
sub
or
popf
movsl
movsb
cmpsb
push
out
cmpsl
aam
push
adc
jle
in
mov
or
shll
lods
leave
sub
je
test
adc
lods
stc
aas
and
push
hlt
int3
sub
andl
ljmp
int3
push
inc
call
lcall
stos
fstpl
fs
sub
cmc
or
adc
push
iret
lods
add
jg
add
jg
or
loope
sbb
pop
pop
xchg
xor
shrb
idivb
sbb
popf
xor
das
adc
out
xor
call
xor
xchg
mov
mov
inc
push
scas
mov
cltd
inc
adc
cmp
sbb
add
dec
popa
lods
push
mov
mov
int
gs
xor
jmp
fbstp
xchg
add
push
enter
mov
pop
xchg
xorl
mov
lods
fxam
sub
stos
xor
int
loopne
mov
mov
aaa
push
pop
stc
ljmp
adc
sbb
outsb
dec
cltd
test
pop
push
daa
or
adc
sbb
pusha
in
int
mov
into
cmp
arpl
jnp
mov
mov
cltd
sub
scas
push
mov
sub
int3
sbb
xor
jno
mov
lret
setge
push
mov
push
mov
dec
fwait
pop
in
divb
lcall
ds
fdivl
cmp
mov
pop
inc
sub
and
lea
fstp
insb
jle
adc
sbb
insb
bound
bound
rorl
sub
shrl
sub
xchg
popf
shlb
aad
loope
cmp
jb
dec
es
popa
jne
xor
xchg
xchg
mov
cmpsl
jecxz
cmc
lock
cmp
daa
rcrb
push
add
cmpsb
push
stc
adc
push
xor
mov
lahf
mov
jne
out
lcall
stc
inc
cmp
fwait
jl
push
and
push
push
cwtl
adc
sub
mov
mov
cmp
xor
movsb
mov
sbb
loopne
dec
pop
jge
or
fs
pop
fnstenv
add
in
inc
add
push
lock
sub
dec
into
xor
sbb
jns
out
ljmp
and
cmp
adc
andb
rcrl
js
aaa
enter
mov
iret
mov
roll
data16
leave
cs
and
stos
cmp
jmp
inc
ljmp
add
jns
fldl
aad
adc
push
loop
in
scas
jge
dec
xchg
sbb
pusha
xchg
daa
inc
mov
int
dec
fstpt
xchg
push
das
daa
arpl
adc
pop
xchg
cmp
dec
test
outsb
mov
stos
and
sarb
inc
jnp
sbb
push
insl
push
mov
shrl
pop
jns
data16
mov
fnstcw
jecxz
xor
enter
sub
out
iret
ror
and
cmp
and
imull
pushf
imul
jb
jns
add
sbb
fistpll
jb
sbb
inc
ss
add
or
loope
cwtl
pushf
dec
cmp
loopne
ljmp
bound
into
loop
repz
dec
mov
jno
adc
arpl
mov
out
stos
pop
dec
fistpll
or
mov
fisttpl
add
testb
loopne
mov
dec
push
ror
pop
inc
lcall
addb
push
push
jbe
push
pop
sti
push
in
ror
pop
and
sbb
mov
insb
xchg
gs
mov
add
icebp
lret
lret
enter
mov
imul
sbb
jne
and
fcoms
mov
mov
test
pop
mov
and
sbb
push
dec
mov
andl
outsb
cmpsl
into
leave
or
lea
test
aad
xor
mov
ss
xchg
and
sbb
popa
xchg
and
mov
xchg
push
rorb
inc
add
sub
cmpb
jecxz
push
mov
jno
mov
jo
mov
dec
or
aaa
mov
xor
pop
mov
inc
out
sbb
mov
xchg
sbb
cmp
dec
mov
mov
push
stos
and
ret
dec
iret
cmpsb
loope
add
sbb
mov
cmp
ret
push
sub
int
jne
mov
sub
mov
addr16
inc
xchg
mov
pop
insl
notl
xchg
and
inc
lds
push
je
loop
loop
xor
std
fucomip
outsl
xchg
dec
mov
ljmp
ss
xchg
xor
int3
mov
imull
addr16
in
adc
mov
jb,pt
pop
pop
test
inc
pop
push
add
enter
jb
in
mov
fstps
pop
xchg
cmpsl
rcrl
mov
jo
push
loop
mov
push
jecxz
push
aad
out
fidivrl
push
outsb
sbb
ss
sbb
sti
jnp
imul
rep
aas
ret
xchg
push
cmpsl
mov
or
push
push
mov
dec
mov
fs
out
cld
call
stc
xchg
jmp
addr16
mov
add
add
and
test
insl
pop
adc
adc
xchg
sbb
fsubrs
in
lock
inc
dec
inc
int
out
and
lea
movsb
movsb
jne
lret
fwait
pop
stos
mov
lret
insb
push
jno
pop
mov
nop
pop
jecxz
mov
sub
cltd
addr16
arpl
call
dec
xchg
loop
pop
clc
xchg
arpl
lods
fistpl
stos
xchg
pop
icebp
rolb
jg
out
or
push
in
dec
mov
movsl
xor
gs
leave
and
imul
sub
je
aas
jl
jno
inc
or
pop
adc
or
sbb
loop
outsb
jo
push
mov
and
push
sub
sbb
loopne
movsl
mov
jl
fstps
lock
aad
jne
pop
push
popf
inc
cltd
add
xchg
push
sub
jns
mov
testl
imul
std
push
mov
mov
stos
cmp
outsl
aaa
jle
inc
mov
jne
add
insb
inc
cld
jle
dec
aas
jp
jns
and
stos
ret
add
sbbw
pop
out
pop
sbb
pop
es
dec
mov
push
or
pusha
ret
inc
pusha
adc
mov
sbbl
or
sub
cmp
hlt
popf
adc
call
les
arpl
inc
cmpsb
and
mov
pop
mov
cmp
push
sbb
jno
ficompl
leave
mov
xchg
cmp
mov
jmp
out
mov
insb
mov
jae
push
sarb
icebp
ljmp
or
xchg
xchg
jmp
sub
int3
xchg
insl
adc
lret
xor
out
clc
out
xchg
shlb
push
xor
test
lahf
fbstp
and
xor
push
inc
repz
sub
xchg
aas
or
add
add
inc
ficoml
hlt
cltd
stos
repnz
ret
add
jno
jl
xlat
fcmovb
inc
scas
xchg
lahf
sub
test
fwait
rolb
xchg
and
inc
out
dec
or
sbb
lds
and
int3
mov
or
cmp
cmpl
pop
pusha
cmp
pusha
std
xchg
sbb
xchg
lahf
rcrb
and
movsl
jne
aas
cltd
jno
addb
cld
std
fucom
scas
push
divl
pop
insl
mov
int3
aam
out
lds
push
xchg
mov
lea
stc
out
mov
push
divl
inc
aaa
icebp
sbbb
cld
lahf
push
jo
mov
adc
pop
and
pop
xchg
push
adc
stos
rorl
lcall
shrl
ds
aaa
jne
mov
mov
jecxz
sbb
xchg
pop
jle
repnz
pop
movsb
jbe
or
or
xchg
clc
inc
cmp
movsl
xchg
mov
inc
dec
xor
cmp
movsl
jo
test
add
fdivr
aad
pop
ja
add
out
aad
and
aad
es
push
ja
jle
lods
mov
push
pusha
sbb
cli
jge
pop
scas
pushl
dec
fwait
adc
add
jne
out
gs
call
pop
push
jno
pop
adc
fnstenv
jbe
cmpsl
dec
pop
mov
jno
inc
sbb
rorb
ljmp
jns
sbb
xlat
dec
addr16
out
push
inc
jl
and
cld
mov
shlb
fdivrs
cld
cmp
cs
dec
out
push
cmp
pop
cmc
nop
mov
inc
dec
add
mov
and
mov
lds
hlt
mov
sbb
mov
adc
xor
dec
test
mov
ds
jp
sbb
aad
das
jns
test
out
in
mov
xchg
pop
mov
insl
mov
mov
test
sub
xor
rclb
jge
lds
lcall
cltd
cli
jecxz
push
leave
push
std
iret
aam
call
nop
aas
pop
fsubrp
xadd
and
cltd
xchg
leave
hlt
adc
loop
xor
and
mov
pop
mov
pop
jge
sbb
cltd
xor
jmp
dec
inc
das
mov
jno
push
xchg
mov
and
insb
push
pop
dec
fisttps
cmpsl
mov
lea
or
pop
inc
push
xchg
pop
mov
mov
daa
inc
rorb
mov
bound
jo
xchg
mov
jae
and
outsb
loope
lods
inc
sub
sub
mov
xor
adc
xchg
js
or
call
out
cwtl
inc
or
lret
loope
int
ffreep
xor
mov
sub
mov
adc
push
xor
add
lahf
mov
shll
and
pop
pop
cld
dec
jns
mov
insl
fwait
pop
cld
or
jmp
mov
cmpsl
das
adcl
flds
mov
xchg
push
push
ret
cmc
dec
push
or
cmp
pop
dec
xchg
arpl
test
sbb
pop
in
add
and
inc
jecxz
ret
out
mov
sbb
les
cmp
arpl
mov
scas
mov
or
insl
enter
sti
pop
pop
ja
jmp
mov
adc
mov
and
aad
mov
pop
ret
popa
es
and
ds
xchg
in
fs
xchg
sbb
mov
out
daa
in
push
xor
push
cmp
ret
lret
arpl
in
mov
scas
jno
xchg
mov
push
pop
inc
xor
lahf
or
mov
mov
mov
loopne
cmc
shrl
stos
xor
cmpsl
sbb
mov
pop
ror
mov
or
or
and
sub
sbb
mov
div
cmc
aaa
mov
push
cwtl
cmp
mov
xlat
pop
rorl
mov
fbstp
dec
mov
cmp
inc
sbb
les
pop
aam
lea
xor
inc
repnz
lock
mov
lret
mov
andb
jg
inc
push
lea
pop
xchg
mov
dec
inc
mov
in
test
mov
in
fisttpl
push
and
cwtl
mov
dec
out
out
inc
xchg
add
outsb
push
loopne
mov
dec
sbb
mov
jg
lods
pusha
inc
xchg
das
fwait
or
mov
cli
aam
push
sbb
mov
jecxz
mov
in
cli
push
cltd
lret
push
inc
push
sub
jns
jmp
xchg
xor
call
mov
xchg
outsb
rcrb
xor
xchg
in
push
mov
jl
dec
test
inc
sub
cmp
sub
aad
shlb
out
adc
push
add
jge
inc
ds
int
in
ljmp
in
sub
xor
jle
fwait
or
cmp
dec
cmp
adc
test
inc
mov
add
fcmovbe
jne
or
lds
lods
int
inc
and
and
cmpsl
les
mov
inc
nop
iret
es
inc
or
sub
mov
adc
fsubrl
cmp
imul
jbe
loop
mov
xchg
inc
and
lods
data16
mov
ja
mov
cmpsl
cmpsl
or
cwtl
xlat
mov
rclb
aam
sub
pop
jbe
ljmp
and
lds
fists
pop
push
movsl
icebp
sub
jb
sarb
pop
pop
in
jb
pop
pop
xor
dec
cmp
xlat
cli
popa
jns
loopne
cmp
nop
xor
fldl
sti
sub
das
mov
fcmovnbe
in
push
shll
lods
int
mov
xor
stos
sub
mov
push
sbb
lods
scas
fwait
cmp
fidivl
or
pushf
sbb
xchg
dec
adc
outsl
pop
icebp
jno
pop
mov
pop
das
sbb
mov
sti
ds
les
lahf
lds
xor
ljmp
or
jecxz
xor
add
cmp
imul
shr
and
aam
jle
aad
ljmp
xchg
pushf
shrl
in
jnp
daa
xor
push
pop
sub
adc
xlat
lods
dec
inc
push
dec
je
jmp
adc
fld
gs
mov
insl
repz
stos
cmp
imulb
or
aam
adc
mov
dec
or
push
aam
mov
sbb
shll
dec
cmp
pop
push
and
stos
popa
mov
fmull
daa
leave
rorb
cmp
data16
inc
xor
mov
sub
stos
or
loope
pusha
aas
idivb
dec
lods
ret
jg
addr16
scas
inc
sbb
bound
jns
leave
bound
outsb
ljmp
xlat
cmp
adc
repnz
iret
inc
inc
lret
sub
int
cmpb
lods
jbe
and
and
or
mov
repz
xchg
sbb
pop
les
cmpsb
repz
dec
fcomps
add
repz
popa
mov
es
sahf
shr
jg
imul
imul
mov
jmp
cmp
dec
adc
jne
emms
xchg
sub
or
dec
bound
sbb
push
add
xchg
aam
test
jno
sbb
int3
xchg
aas
dec
in
loop
lock
jbe
imul
orl
push
cmp
mov
call
mov
dec
or
int3
and
decb
jg
pop
rcl
fistl
scas
add
loopne
xchg
lahf
mov
ss
mov
sub
loop
pop
out
jle
pop
or
movsl
fidivs
mov
adc
pop
mov
test
push
mov
xchg
dec
xchg
cltd
rcr
loope
or
cli
cmp
sub
mov
test
shlb
push
add
dec
jnp
sahf
sub
pusha
ret
dec
pop
cli
es
fistps
rcl
push
call
shrb
xchg
add
cltd
je
daa
bnd
sub
pop
popf
sarl
mov
xchg
jl
cmp
in
loop
arpl
pop
push
dec
pushf
lods
leave
sub
add
daa
or
repz
test
insb
popf
push
sti
add
dec
pop
mov
aam
cwtl
sub
push
pop
fiaddl
into
ds
in
cmp
pop
jg
les
cwtl
mov
scas
mov
rolb
in
pusha
push
jbe
shl
sbb
pop
scas
pminub
jb
or
lret
jge
jg
or
mov
jg
inc
jno
lret
es
popa
mov
jmp
mov
push
xchg
jae
sahf
and
cmpsb
adc
mov
mov
pop
out
push
pop
icebp
testb
addb
stos
push
cwtl
ljmp
fstl
aad
enter
mov
adc
adc
adc
push
aam
dec
mov
pop
xchg
inc
cmc
in
mov
mov
sbbb
in
cmp
pop
jle
jno
mov
cld
out
pop
test
cmpb
es
adc
lahf
mov
jecxz
aas
inc
out
mov
daa
mov
inc
xor
data16
jge
inc
mov
std
fdiv
shlb
jmp
lods
push
aas
sbb
xor
dec
push
outsl
popa
loope
push
cli
and
test
ret
add
iret
mov
mov
or
std
or
lods
mov
cmp
cmp
aas
dec
pop
xchg
insb
jo
push
test
push
or
cld
adc
push
pusha
push
mov
scas
lahf
or
pop
dec
std
repnz
cmpsb
and
and
decl
dec
dec
mov
cmp
jbe
daa
fisubrs
fisubs
pop
jb
pop
test
xchg
cltd
xor
ja
or
cwtl
push
jae
jbe
pop
lods
push
stos
inc
fsubs
mov
push
rolb
mov
ja
call
jge
add
jnp
pop
ja
cwtl
das
add
enter
inc
popa
push
add
pop
mov
jo
mov
repnz
mov
call
jb
out
movsl
and
ret
in
pop
mov
out
aam
sbb
dec
mov
mov
cmc
in
scas
rorl
mov
pop
add
cmp
xor
pop
push
fst
dec
ja
adc
dec
loop
aas
add
out
xor
push
mov
adc
sbb
fcmovnb
movsl
xchg
cmc
add
adc
push
aas
or
cltd
fnsave
pushf
cltd
sbb
leave
cmp
stos
fiaddl
add
imul
pop
in
ficoms
mov
xorl
sbb
in
cmpsl
js
outsl
fldl
aaa
pusha
fcompp
sbb
mov
loope
push
cwtl
mov
mov
in
fmul
sbb
cs
push
pop
push
pop
rcl
or
inc
in
adc
stc
pop
xchg
adc
dec
fcmovnu
jmp
sub
cmpb
and
lock
pop
jae
jmp
mov
or
cmp
adc
sub
pushf
xor
push
inc
adc
out
adc
jnp
jmp
lret
xor
dec
fwait
cwtl
xchg
xor
push
jno
push
mov
icebp
lea
jg
adc
add
mov
in
dec
cli
enter
jmp
jno
in
imul
idivb
xor
push
pop
popa
sbb
jbe
cmp
inc
pop
cltd
in
notl
sbb
add
pop
xor
xor
push
imul
jo
push
sbb
xchg
int3
inc
xor
push
int3
ljmp
fcmovb
aas
cmp
lcall
iret
cmp
add
adc
fucomi
pop
inc
gs
or
daa
and
lods
jae
mov
pusha
repnz
lock
dec
xchg
and
lret
cltd
lock
fwait
cmp
add
addr16
sbb
push
push
jle
jns
xor
int
sub
cmp
xchg
mov
aas
cmp
push
jmp
dec
pushf
cmp
jne
pop
adc
ret
iret
inc
fdivl
shlb
sub
and
mov
mov
dec
push
repz
repz
cmpsl
int
iret
jg
je
repnz
jg
shll
outsl
and
jo
xchg
ret
popf
icebp
fimuls
aas
imul
dec
mov
cwtl
sub
gs
flds
xor
popf
loopne
sbb
jo,pt
jo
aaa
jns
ret
sub
bound
pop
jne
inc
pop
mov
xchg
add
shr
lods
jecxz
sbb
jno
jo
bound
in
mov
ljmp
cltd
rcrb
add
repnz
nop
jns
mov
sbb
xor
mov
jecxz
nop
inc
fimuls
adc
cmpsl
or
xchg
stc
sub
inc
lret
outsb
mov
mov
stc
lock
cmc
pusha
mov
xchg
cli
clc
cli
adc
or
cmp
inc
inc
and
cld
mov
mov
pushf
or
lcall
push
add
jne
or
lods
sti
jmp
and
jbe
pop
cli
jg
sub
cmp
ret
ficoms
rcll
mov
out
pop
lret
daa
add
lods
inc
mov
sbb
repz
jno
inc
bound
cmp
mov
cmc
adcb
test
fcoml
imul
cmp
out
jecxz
mov
inc
xchg
adc
xorl
pop
loopne
sarl
adc
sbb
jmp
push
xchg
sbb
sbb
sub
jne
loopne
insb
leave
cli
xor
rcl
fs
movsl
out
rol
xchg
into
xlat
xchg
mov
jb
mov
scas
js
sbb
insl
sub
inc
popa
inc
add
fs
pop
insl
xorl
data16
xor
adc
aam
lods
xorl
fiadds
or
ret
push
and
jecxz
mov
std
arpl
and
lds
ret
imul
xchg
xchg
movsb
flds
cmpb
mov
or
das
jle
sarl
ja
mov
or
lret
pusha
je
repz
mov
mov
push
jb
popa
bound
xchg
jno
test
fs
fisubl
imul
iret
mov
mov
push
loopne
pop
repnz
imul
stc
pop
aaa
jae
push
add
fildl
and
push
test
pushf
test
and
or
cmp
not
pop
mov
jne
jecxz
push
movsb
je
repz
mov
or
test
lods
rcrl
fldl2e
aam
pop
and
mov
xchg
das
out
adcb
aam
imul
sub
ret
pop
nop
sbb
cmp
cmp
or
addr16
pushf
rcll
sbb
jnp
repz
push
in
pcmpgtb
mov
sbb
in
in
sahf
adc
xchg
mov
sub
loopne
pop
je
dec
scas
stos
and
or
and
xlat
mov
pop
xchg
push
bound
xchg
jle
stc
sti
leave
mov
call
idivl
adc
pop
cmp
push
leave
jp
in
xor
xchg
test
ret
add
dec
dec
adc
mov
mov
test
scas
lods
imul
adc
cmp
les
mov
ds
ror
mov
movsl
xchg
fwait
and
cmp
or
adc
sahf
mov
negb
jl
enter
shll
mov
shlb
sbb
cmp
out
adc
sub
push
mov
lahf
sti
cmp
cmp
cwtl
fwait
push
dec
test
test
adc
out
jae
inc
insb
test
repz
ljmp
sbb
adc
and
push
fiadds
rolb
xchg
popf
orl
cmp
inc
inc
mov
mov
sub
icebp
or
and
movsb
ss
push
xchg
jo
pop
mov
mov
pop
insb
imul
xor
jns
aad
stos
ja
into
jecxz
aam
cld
sbb
pop
push
jmp
sbb
mov
repnz
outsl
xor
cmp
add
xor
xchg
in
inc
adc
and
jg
dec
sbb
jbe
xor
es
out
jecxz
jb
test
sbb
pop
cmc
add
lods
insl
cli
mov
adc
cmc
inc
mov
pop
lret
out
xorl
test
or
xor
fisubl
push
enter
fldt
ss
add
mov
in
inc
lcall
sub
mov
icebp
rol
jae
and
out
popa
and
sbb
and
divl
jno
fnstcw
gs
movsl
push
int
divl
sbb
or
sub
fldcw
fwait
in
fstpt
lcall
jno
jle
or
mov
sub
dec
dec
jb
dec
sarl
add
popf
leave
vpmacsswd
xor
mov
lods
mov
mov
aad
cmp
add
testl
stos
call
mov
popf
jbe
sub
dec
jmp
sub
pop
in
xchg
cmc
outsb
nop
ret
dec
inc
aam
imul
popl
xor
movsb
add
mov
pop
sbb
cmpsb
pop
xor
and
lret
dec
or
int3
inc
or
ljmp
scas
xchg
sbb
shlb
in
add
ds
lods
lods
addb
shlb
cmc
daa
imul
sbb
std
adc
inc
pop
fisttps
out
mov
mov
movsl
lods
pop
out
sub
loop
cmc
ds
loop
inc
mov
mov
das
jb
out
test
push
mov
xor
xchg
test
mov
pushf
fsub
sub
pop
insb
mov
add
sbb
pop
cmp
adc
and
push
cmc
loop
lret
mov
xchg
call
and
stos
mov
xchg
jmp
insl
lods
jnp
enter
mov
xchg
inc
fwait
mov
dec
loop
add
add
pop
enter
cs
and
pop
pop
pop
hlt
cmp
mov
ss
loopne
in
je
jno
jp
mov
push
or
jns
xchg
negb
mov
in
jp
pop
or
mov
cld
rolb
mov
add
cmp
and
or
inc
pop
cmp
out
aam
mov
fwait
jl
aad
scas
fcmovu
mov
adc
ret
shlb
rcrl
sub
xchg
les
sub
and
cmp
pop
push
and
addr16
lods
rorb
or
and
adc
and
scas
gs
jg
xor
push
frstor
shll
dec
aas
push
cmpsb
arpl
dec
adc
mov
rcll
loopne
add
fdivrl
fdivrs
scas
lahf
push
sarl
fldcw
aas
arpl
jae
mov
lds
lea
outsb
pop
ljmp
or
jnp
xor
push
and
js
xchg
push
aad
mov
js
or
dec
inc
sub
outsl
into
xor
idivl
and
mov
out
aas
fyl2x
popa
xchg
pop
pusha
aaa
push
scas
sub
cs
int3
insb
fldt
jecxz
call
in
loope
dec
aad
das
mov
jmp
mov
popa
loope
ret
or
pop
pop
jl
mov
test
ja
es
dec
add
orl
or
mov
enter
insl
aad
cmc
and
test
pop
cmp
enter
das
adc
pop
cmc
mov
xor
not
pop
cmpsb
es
jp
inc
pushf
inc
dec
orb
hlt
es
daa
cmp
xchg
xor
out
push
jmp
mov
sub
push
jecxz
ret
add
or
ss
jae
outsl
mov
cs
adc
xor
push
sub
inc
popf
lcall
mov
lahf
mov
out
mov
jb
add
rcrb
or
repnz
push
divl
add
mov
pop
add
sbb
inc
loopne
pop
mov
movb
or
stos
aam
in
daa
or
mov
mov
cmpsl
cmp
mov
punpckldq
sbb
out
test
movsl
sbb
mov
xor
in
sub
call
in
cli
rolb
cmp
pop
jmp
mov
int
mul
daa
xchg
repz
popa
bound
imul
mull
inc
loope
pop
dec
sti
jmp
cmc
jb
faddl
sub
pop
jl
xchg
mov
sub
add
mov
out
and
adc
dec
sbb
sub
lea
in
push
mov
stc
and
iret
fcomps
aam
pop
mov
dec
sub
loope
sbbb
fistpll
aam
ds
hlt
pop
fsubl
testl
push
in
sarb
sti
sbb
jg
xor
xchg
pushf
mov
mov
add
cmpsl
daa
call
mov
add
addr16
or
mov
mov
jge
cmpsl
leave
push
pop
mov
aas
and
adc
xchg
daa
insl
popa
push
stos
sbb
jns
fcmovbe
push
and
js
sub
mov
shrb
sbb
xchg
xchg
jmp
cwtl
cmp
fbld
int3
cmpsl
shl
cs
cmp
sahf
js
pop
loope
daa
push
jo
sbb
or
mov
fmull
cmpsl
mov
add
call
jmp
lds
xchg
loop
int
and
pop
xchg
imul
push
cltd
lods
add
pop
xor
icebp
stos
pop
cli
and
sbb
test
sub
add
lahf
insb
aaa
shrl
aam
adc
push
adc
mov
std
adc
repz
fucomip
lret
addr16
add
sbb
stos
imull
incb
mov
loope
icebp
adc
mov
and
icebp
ja
in
ret
fwait
mov
inc
ret
adc
lock
jno
inc
fs
mov
mov
cmc
cli
push
pusha
jmp
mov
fs
pop
js
lcall
lcall
stc
and
repnz
enter
dec
popa
out
push
or
sbb
mov
cwtl
mov
call
mov
lock
lods
stos
sbb
mov
and
push
xchg
dec
movsb
cwtl
inc
sar
mov
test
pop
xchg
int
push
xchg
xor
add
mov
xchg
mov
sub
push
mov
jnp
loope
and
dec
mov
ret
add
jbe
and
loop
ds
lret
sti
or
repz
dec
aam
xor
enter
pop
cmc
xor
xchg
out
arpl
sub
ret
xchg
test
xor
and
jmp
cmpsb
hlt
or
mov
mov
in
iret
and
sub
add
push
mov
and
outsl
icebp
jnp
repz
or
push
stos
and
out
les
push
repz
add
cmp
shlb
lock
inc
mov
mov
and
sarb
fbld
lds
leave
sub
insb
push
mov
lock
or
cli
pop
mov
and
test
push
jg
mov
iret
ds
lret
xchg
xchg
sbb
cli
cmpsb
nop
jg
mov
call
push
shrb
sahf
adc
sti
inc
cmp
inc
ret
adc
loopne
push
mov
sbb
mov
in
push
fldt
lea
jmp
cmc
sbb
shlb
aad
cltd
push
test
add
and
mov
mov
aam
faddl
mov
test
mov
fdivl
jbe
movaps
pop
xchg
dec
push
mov
pop
mov
pusha
mov
mov
leave
and
xor
cmp
pop
add
ficomps
popf
movsb
lods
and
xlat
rcll
xor
sub
lret
sarl
out
sahf
cmp
and
outsb
in
test
mov
xchg
adc
jl
sub
lcall
push
lods
xor
jne
lock
sti
insl
out
inc
jb
push
xchg
adc
dec
jecxz
mov
mov
lds
int3
cs
ljmp
int3
sbb
jecxz
push
out
fisubrl
aas
inc
lods
test
out
movsl
add
mov
test
fbld
notb
lock
rol
hlt
cs
mov
adc
lcall
test
mov
insb
or
fisubrs
adc
imul
xor
gs
dec
aad
pop
out
loope
cmp
cmc
outsb
dec
in
fisubl
xchg
push
mov
mov
and
fs
mov
jecxz
push
cmp
push
mov
and
stc
push
mov
movsb
sbb
js
sbb
fcomi
jnp
inc
stos
jge
push
cmpsl
and
test
addb
and
adc
or
mov
lods
push
or
mov
and
adcb
sahf
xor
fs
adc
adc
pop
and
insb
roll
adc
jae
hlt
mov
push
cmp
or
mov
xchg
pop
dec
aas
sti
cs
pop
push
pusha
faddl
out
cld
jno
jl
mov
or
jle
cmpl
int
inc
out
ret
movsb
ss
cld
scas
add
rcll
ss
loop
inc
bound
jb
inc
adc
pop
fadds
cmpsb
or
hlt
test
clc
xchg
neg
lahf
cltd
mov
add
ds
inc
rcrl
outsb
pop
inc
cmp
je
jmp
push
lea
leave
pop
jle
fimull
shrl
loope
adc
add
outsb
pop
scas
cmp
sbb
pop
leave
pop
popf
mov
outsb
fwait
pop
cmp
dec
mov
faddp
cmp
stos
lret
cmp
and
inc
mov
add
jnp
add
dec
notl
js
lods
or
cwtl
scas
ljmp
out
call
push
dec
sbb
sbb
mov
icebp
in
sbb
imul
sti
dec
and
cmc
sbb
dec
add
push
dec
repz
cmc
gs
inc
inc
sub
cmp
fidivrs
aaa
cmp
mov
daa
mov
add
push
aaa
in
aam
bound
inc
push
cmc
xchg
out
jle
in
sbb
adc
sti
pop
push
repnz
xchg
fs
ljmp
pop
mov
and
subb
dec
jbe
add
pushf
fcmovne
xchg
sbb
xor
repnz
adc
bt
stos
sbb
cmpb
int3
ds
xlat
cmp
mov
mov
sbb
rcrb
into
fistpll
add
xor
jb
pop
in
xorl
cmc
cmp
mov
test
push
jae
scas
or
mov
cld
mov
pop
fidivl
pusha
xchg
push
shrl
cwtl
ficompl
xor
int3
push
or
cmp
and
ljmp
dec
out
call
push
mov
and
fmull
dec
les
shll
loopne
xor
jno
test
xchg
fwait
decl
and
xor
fs
xchg
imul
stos
add
push
lahf
pop
lret
cltd
jae
dec
mov
dec
shlb
stos
cmp
cltd
push
mov
stos
in
mov
xchg
rolb
popf
push
xor
and
out
es
fiaddl
cs
push
jnp
cmp
loopne
sarl
mov
sub
pop
jl
pop
mov
mov
stos
gs
jge
mov
fs
in
addl
call
cmpsb
jmp
pop
mov
lret
mov
and
push
inc
fwait
or
inc
mov
sub
or
jns
frstor
cmc
jne
mov
popf
inc
and
cmp
cmp
mov
in
dec
or
sub
cmp
adc
pop
sub
rclb
add
cli
jle
mov
stc
out
mov
and
mov
xchg
xchg
adc
cmp
jmp
and
insb
mov
sbb
xchg
push
outsb
inc
addl
cmp
adc
add
xchg
mov
push
push
mov
jb
inc
mov
lahf
enter
xor
into
pusha
call
mov
into
xchg
pop
cli
xor
insb
dec
frstor
pop
addb
inc
stc
cmp
adc
push
ds
push
pusha
jae
mov
xchg
adc
push
clc
orb
push
js
out
xorl
enter
call
push
inc
mov
add
frstor
orb
lcall
sbb
push
dec
cld
repz
mov
lret
mov
cmp
ret
xchg
xor
xor
sbb
pop
and
sub
inc
jne
xchg
sub
lods
lds
scas
pop
xor
scas
jbe
out
adc
cld
xchg
es
jle
lea
pop
adc
cmp
and
inc
shl
outsb
mov
fnstcw
dec
out
stos
sahf
xor
and
mov
mov
stc
ljmp
cmp
pop
push
xchg
ljmp
int
sub
inc
in
or
push
mov
fbld
int3
adc
xchg
and
add
es
mov
imul
xchg
repnz
sub
jg
cmpsb
xlat
loopne
test
inc
pop
or
dec
dec
xor
sbb
aad
dec
cmpsb
jns
mov
pop
dec
pop
test
stc
push
pop
sub
cmpsl
jnp
mov
loope
or
cmp
xor
arpl
lock
inc
mov
mov
xor
add
xchg
cmp
add
mov
push
jae
adcb
cmp
scas
pop
jp,pn
ret
adc
stos
loopne
pop
fisubl
icebp
decl
jmp
pop
cltd
bound
and
subb
or
lods
dec
inc
add
outsb
or
aam
add
in
or
out
cld
mov
sbb
dec
mov
push
jne
mov
cmp
fbld
je
jne
mov
inc
add
or
sarb
add
push
es
lods
shl
out
xchg
ja
sahf
dec
pop
xchg
inc
jo
repnz
sbbb
loopne
jne
push
mov
add
jne
mov
or
xchg
cmp
pop
shrl
loope
pop
dec
mov
sbb
inc
into
jnp
imul
add
je
mov
jno
lcall
inc
mov
test
xor
cmp
lods
pop
in
es
mov
adc
xor
and
fdivs
or
cmp
push
push
inc
shll
lret
lret
dec
in
mov
cmc
test
into
aad
dec
cmpsl
mov
arpl
xchg
xlat
dec
es
dec
sti
enter
in
lcall
sub
push
fldenv
or
lret
mov
js
xlat
adc
sub
cmpsl
add
aaa
out
call
push
leave
push
inc
sub
pop
adc
mov
stos
jae
push
mov
push
aam
and
rcrl
cmp
sti
adc
mov
leave
push
add
inc
cmp
cltd
jl
sub
mov
int3
ret
add
pop
and
jge
loopne
mov
push
lret
lods
cmp
dec
dec
fsubrp
flds
gs
jb
lock
test
js
pop
mov
mov
jbe
mov
xchg
push
mov
cwtl
cmpl
fxch
sbb
pop
mov
mov
adc
int
aad
adc
dec
mov
test
xchg
daa
out
cmpsb
outsb
push
jp
mov
faddl
dec
pop
js
xchg
xchg
ss
cs
jae
int3
xchg
imul
add
and
sbb
fsubrl
repnz
sbb
mov
xchg
ja
lock
xchg
insb
cmp
push
outsl
jg
mov
xor
pop
popa
cmp
and
jp
add
stos
fs
mov
push
lea
jns
filds
mov
int3
inc
cltd
lret
jo
push
ficomps
inc
push
and
lods
lock
sbb
fnstsw
jmp
loop
stos
je
dec
pusha
adc
inc
ret
adc
adc
ss
js
pop
aaa
imul
sbb
sbb
in
pop
sub
leave
sbb
mov
pop
sub
arpl
or
xor
cmp
pop
hlt
sbb
jo
roll
dec
testl
mov
sbb
sbb
mov
scas
mov
mov
mov
repnz
lds
jno
sahf
outsb
rcr
inc
es
mov
sub
sarb
inc
stc
imul
test
jecxz
es
pop
or
cmp
ss
lahf
and
fcomps
fwait
jns
jge
js
daa
pop
cmc
int3
cmpb
or
mov
popf
pop
mov
mov
stos
jecxz
add
notl
mov
and
popa
cli
outsl
in
adc
aas
fisttps
movsl
loopne
sbb
add
pop
sub
lahf
adc
or
and
sti
adc
cld
dec
mov
pushf
jo
push
cmp
pop
je
aam
or
scas
pop
mov
add
mov
int
and
pop
push
mov
inc
out
pop
sbbl
mov
xor
sub
and
popf
loopne
xchg
bound
xchg
cmpsl
pushf
mov
pop
aas
push
push
je
xor
dec
bound
leave
in
lret
push
cmc
or
pop
scas
repz
pop
es
and
outsl
in
cltd
xor
bound
sbb
mov
pop
push
lahf
mov
or
xchg
mov
scas
sbb
std
cs
xchg
mov
mov
shr
jae
dec
mov
pop
adc
jmp
jl
repz
js
pushf
movsb
push
cwtl
jae
inc
dec
xor
mov
adc
out
jno
lret
stos
or
call
loope
inc
jb
mov
lret
pop
aas
jmp
jmp
sub
adc
fdivl
dec
mov
cmp
outsb
push
sub
outsb
fistps
shlb
pop
or
sbb
jge
adc
xchg
xor
hlt
adc
cmp
push
stos
cmp
fwait
sahf
loope
in
mov
and
mov
dec
lahf
aad
cmp
inc
sbb
adc
clc
lods
aaa
stos
sti
sub
pop
mov
xor
inc
popa
and
adc
bound
adc
ror
and
pop
jmp
js
fldenv
mov
mov
fstpl
repz
cmp
add
push
in
lret
or
ret
fsubl
mov
sbb
js
test
jmp
jp
lcall
test
les
jl
push
jno
xchg
les
aad
cld
jb
inc
repnz
lods
gs
stos
addr16
xor
push
outsb
push
dec
imul
fdivl
xchg
dec
pusha
xchg
add
fmuls
test
jb
test
insb
pusha
xor
fidivs
jo
movsb
insl
add
xlat
xchg
pop
das
mov
aam
adcl
imul
imul
cmpsl
imull
iret
popf
cmpb
frstor
gs
dec
pop
imul
das
test
popf
push
les
sti
cltd
addr16
xchg
int3
fisubrs
int3
ljmp
add
adc
pop
cmc
mov
push
xor
in
lock
movsl
mov
xor
push
adc
mov
pop
ja
mov
mov
ss
es
inc
movsb
popf
lds
xchg
mov
or
add
and
mov
cs
jecxz
in
jg
push
and
jb
jb
xchg
data16
push
mov
scas
xor
push
cmpsl
fstpl
bsf
mov
mov
pop
dec
xchg
int
add
xor
jns
repz
push
jno
dec
das
imul
mov
lahf
cmpsb
popf
mov
jae
into
push
frstor
add
ret
fildll
stos
scas
ja
ss
rol
push
cmp
jb
leave
dec
sub
xchg
arpl
xchg
in
xchg
mov
push
sub
sahf
pop
xor
cmpsb
addr16
insl
inc
dec
stc
stos
pop
leave
mov
insb
mov
cmpsl
jp
jg
fildl
xor
mov
xor
fdivs
lahf
adc
jb
aaa
sarb
push
das
add
jnp
call
push
cmp
dec
sbb
stos
stc
test
dec
mov
lea
add
insl
fs
popaw
ret
lods
fisttps
fwait
or
push
push
cltd
ror
es
fucomip
mov
clc
je
inc
and
mov
rcrl
add
ds
xor
sbbb
cmpl
in
std
call
jp
mov
pop
jne
sbb
ret
push
dec
xchg
ss
scas
dec
js
pop
aaa
imul
and
dec
repnz
adc
test
xchg
aam
rorb
mov
mov
xchg
loop
push
sbb
xchg
cmpsl
mov
pop
xchg
out
cmp
in
in
orb
cli
in
jmp
mov
cmp
and
and
out
jl
cmc
xor
push
sub
lds
sbb
test
dec
das
xor
movsl
push
mov
mov
es
and
push
cld
xchg
pop
cmpsb
js
add
fwait
je
inc
xor
in
and
popf
lea
out
push
bnd
test
push
popf
ret
dec
jnp
sbb
cmpl
and
mov
loope
dec
imul
dec
rcll
add
mov
cmp
or
or
add
pop
lahf
push
push
sahf
pop
jp
fcom
cmp
adc
je
mov
xor
dec
cmc
nop
sbb
push
iret
loop
lahf
sarl
test
mul
mov
sbb
mov
xlat
arpl
lds
xchg
xchg
add
test
test
test
jns
test
cmpsl
add
fiadds
clc
jecxz
shll
fisubs
mov
ss
mov
insl
push
xor
das
sti
sub
adc
mov
jge
xlat
pop
lahf
push
and
enter
push
arpl
inc
roll
ljmp
adc
cmp
out
stos
dec
dec
push
push
mov
in
fisttps
daa
lahf
movsl
cmp
inc
cmpsb
hlt
outsb
inc
pop
sbb
sub
push
sbbb
mov
mov
xor
or
sahf
inc
cmp
rcrb
adc
cmpsl
data16
rorl
les
je
sbb
aam
sbb
push
std
inc
mov
out
cmp
and
sub
fisubs
mov
pop
mov
orl
test
out
stos
inc
cmp
cmp
fnstsw
jge
orb
push
inc
cwtl
fimuls
leave
adc
hlt
jl
add
stc
rolb
jo
mov
mov
mov
cmp
cmp
js
sbbl
test
cmp
xlat
subb
jne
aam
and
adc
mov
ljmp
in
ret
mov
mov
ret
loop
pop
in
jbe
pop
cmp
movsb
xlat
inc
in
jp
mov
push
subb
ljmp
mov
pop
test
sub
cmc
jae
testb
jmp
jp
jecxz
mov
outsb
mov
xlat
pop
stos
sub
movsl
fdivs
jle
or
loopne
xchg
lock
add
dec
push
stos
cmpsb
lret
cltd
fistps
popf
inc
aas
adc
dec
xor
je
xchg
adc
fwait
and
bound
fisubl
std
inc
cmp
inc
rcrb
pop
testb
sub
adc
adc
in
push
sar
fmuls
mov
js
adc
enter
and
sub
leave
ret
inc
lods
pop
lock
adc
cmp
adc
shrb
or
je
inc
push
rolb
adc
jp
inc
gs
adc
pusha
adc
loop
inc
in
sub
push
jbe
xor
fcoml
pop
ss
std
aad
sub
test
push
sub
jl
in
mov
loope
inc
insb
cmp
inc
mov
mov
pushf
insl
mov
jp
divb
jge
dec
mov
adc
xchg
in
inc
and
loop
mov
outsl
mov
xchg
jg
lods
mov
mov
mov
mov
cmp
mov
icebp
inc
addb
pop
hlt
test
cltd
pusha
mov
pop
xchg
xor
and
cmpsl
subl
call
sbb
ret
in
adc
xor
cmpsl
decb
mov
xchg
mov
dec
dec
push
cmp
mov
and
dec
sbb
xchg
mov
pop
inc
out
dec
inc
and
repnz
ficompl
mov
and
or
shrb
xchg
mov
mov
repz
cmp
mov
pslld
mov
sahf
gs
hlt
push
pop
lahf
popf
push
fmulp
test
stos
std
ss
ret
pop
sbb
lods
in
add
xchg
icebp
fcom
mov
mov
inc
mov
andb
js
add
xchg
xchg
cltd
pop
dec
dec
sbb
nop
ss
pop
xor
cld
out
mov
xacquire
dec
cs
xchg
jne
cmpsb
lods
mov
aas
jg
fsubl
add
addr16
jmp
cmc
xor
xchg
pop
sbb
and
cli
fnstcw
xorl
lahf
jge
jne
xor
jns
mov
xchg
lods
push
imul
stos
add
int3
jo
les
mov
dec
jno
xlat
mov
fiadds
loopne
pop
std
inc
or
jno
push
shrb
add
sbb
test
ds
in
enter
cmpsl
insl
loope
int3
dec
movl
sub
sbb
mov
addr16
dec
stos
and
and
cmp
xor
aaa
sbb
je
hlt
mov
test
mov
or
fucomp
sahf
dec
into
push
jnp
add
clc
or
fistpll
movsb
sbb
mov
out
nop
cs
add
cwtl
inc
adc
ficomps
jne
mov
mov
pop
inc
movsl
les
push
cmp
lods
inc
xor
push
shrl
or
xor
subl
add
xor
pop
testb
aas
aaa
inc
hlt
loope
addb
jno
or
test
xor
cs
lea
clc
outsb
and
jmp
xchg
mov
popf
xchg
data16
or
fnstcw
inc
scas
pop
adc
jecxz
jecxz
jecxz
stos
cs
and
sbb
push
sbb
ret
popl
inc
aaa
xchg
and
out
xor
push
mov
jbe
or
xor
xor
popf
jnp
and
sbb
push
in
insl
add
pop
mov
mov
out
and
adc
loope
push
into
cmp
dec
sti
loope
or
dec
dec
jg
lret
mov
in
push
sbb
lcall
sub
sbb
filds
adc
in
das
sysexit
or
mov
add
jmp
out
orb
sbb
imul
push
sbb
roll
push
jmp
sarl
fnsave
pop
pop
fwait
push
test
push
push
dec
out
orl
jmp
popl
xchg
push
xor
pop
sub
inc
js
push
add
idiv
call
add
adc
xchg
pop
imul
xor
cmp
stos
les
clc
push
sbb
int
or
mov
adc
and
lods
scas
mov
bound
push
insb
xor
cmp
mov
push
cmp
xchg
insb
adc
adcl
or
or
jmp
inc
xorb
call
adc
or
faddl
or
pop
hlt
add
inc
pop
xchg
push
inc
aas
fsubrs
jg
jbe
push
mov
fcompl
lret
shrb
rcl
iret
push
sub
fcompl
jge
push
test
mov
pop
xlat
cs
mov
ss
int
loop
je
aam
insl
ret
ss
aaa
aas
and
or
sarl
inc
mov
cmp
shrl
mov
call
cmp
push
fs
jp
sub
push
mov
jge
cs
pop
jns
fdiv
gs
add
jmp
adc
popf
ficoml
pop
inc
push
mov
inc
cmp
sbb
aas
xor
xor
cmpsl
adc
arpl
and
mov
lock
jo
push
inc
mov
lret
mov
or
int
adc
das
add
inc
sub
lea
mov
insl
mov
or
lret
lods
aam
popf
jb
outsl
mov
cmc
dec
jp
mov
bound
das
cld
dec
data16
pusha
xchg
and
inc
mov
add
mov
popf
sub
rcl
cmp
and
push
insl
push
outsb
fnstcw
sub
imul
outsl
cmp
inc
xchg
movsl
iret
outsl
std
or
push
cmp
pushf
addr16
ret
sub
ror
xchg
pushf
inc
inc
jge
aam
jae
mov
xchg
xor
push
adc
inc
or
cmpl
xor
ret
sub
clc
ds
push
mov
adc
inc
xor
in
jecxz
mov
inc
pushf
adc
ljmp
out
pop
sahf
test
and
sbb
jp
sti
mov
sub
movsl
pop
call
and
mov
addr16
dec
sub
mov
mov
adc
mov
adc
notl
fs
jl
stos
pop
push
sub
test
jg
imul
fsubrl
fidivl
ret
xor
lods
mov
inc
xchg
push
roll
mov
repnz
push
add
fstpt
jle
add
dec
adc
add
mov
mov
out
movsl
ret
pop
or
push
shlb
dec
negb
jmp
in
stc
pushf
jo
push
sub
das
mov
push
insl
data16
inc
or
leave
mov
push
mov
sbb
push
mov
pushf
fwait
sti
inc
fdivs
dec
vpaddusw
or
add
hlt
pop
push
jno
jb
cmp
xor
ljmp
pop
cmpsl
lds
or
jge
sbb
pop
push
dec
push
inc
cs
ja
shrl
jb
inc
imul
stos
iret
dec
mov
sbb
aad
aam
lock
add
repz
call
je
f2xm1
imulb
stos
sub
pop
addr16
add
cmp
pop
arpl
pusha
xorl
cli
mov
xchg
out
addr16
mov
pop
pop
pop
lock
mov
ja
vpmacssdql
std
sub
je
or
data16
push
xchg
jns
mov
inc
cli
jo
inc
std
fcoms
sbb
sub
or
call
mov
mov
and
mov
mov
enter
push
aam
shll
fisttpll
sub
jle
push
pop
push
mov
aam
jmp
in
popa
cld
push
andb
insb
xor
xchg
dec
shrb
jo
dec
das
push
aaa
push
mov
dec
push
jge
sub
imul
adc
xor
xor
cmc
out
jge
sub
sti
imul
call
das
push
mov
mov
out
and
xor
jb
hlt
adc
jl
je
jg
icebp
repnz
xorb
mov
mov
rorb
jl
jo
in
mov
imul
lret
fwait
pop
fcompl
popa
push
jne
fsubs
test
sahf
ljmp
in
std
and
rcrl
bsf
insl
xor
test
cwtl
rol
pop
cmpsb
xlat
lret
fisubrs
sbb
nop
sti
insl
int
stos
sar
pop
cmp
xchg
cmp
stc
sub
sub
sti
xor
std
push
aam
arpl
subb
ss
std
push
adc
cmp
push
push
hlt
cmp
int
call
movsb
mov
xchg
mulb
test
adc
repz
mov
stos
repz
fwait
and
mov
cmp
jg
ljmp
fldenv
sub
add
pop
aaa
mov
mov
add
mov
out
adc
dec
jmp
daa
cli
ss
pop
int
or
pusha
jl
xchg
dec
out
pop
pop
cmpsb
jmp
nop
out
jns
pop
mov
mov
ja
push
test
jo
push
andb
or
mov
popa
dec
cmc
test
cmpsl
mov
mov
push
jle
pop
lods
push
sbb
jae
sub
fdivl
pop
push
jmp
es
cmpsl
ljmp
stos
ja
jmp
jo
sahf
push
cmpb
test
stos
lahf
ficoml
pusha
fbld
lock
in
sbb
cmp
inc
jae
adc
pop
xor
adc
xlat
xor
scas
repz
jmp
decb
mov
jecxz
iret
enter
std
jae
and
xchg
inc
stos
outsb
iret
adc
push
data16
dec
push
mov
push
and
mov
cmp
pop
xlat
daa
pushf
adc
scas
aad
flds
sarb
clc
mov
loope
dec
dec
int3
sarb
sbb
movsl
cmpsl
dec
pop
sbb
push
lret
jne
mov
in
xchg
movsb
push
insl
xor
notl
inc
repnz
inc
popa
rcrb
add
sub
cmc
mov
lods
xchg
loope
add
mov
jno
stos
adc
out
pushf
lret
push
mov
das
jbe
out
pushf
mov
adc
mov
and
or
xchg
push
stos
push
out
fimull
aas
push
loopne
repnz
adc
jb
mov
jb
mov
lahf
pop
dec
call
mov
sbb
insl
fcoml
enter
pop
fucomip
sbb
xchg
add
push
fsubs
arpl
push
lcall
inc
sub
mov
xor
cmpsl
mov
stc
mov
jg
push
mov
ret
enter
loop
pop
dec
out
add
fisttps
test
dec
enter
loop
cltd
pushl
xor
inc
xor
pop
loopne
fwait
xchg
inc
cltd
jl
jecxz
dec
cmp
push
adc
aas
xchg
sti
nop
adc
test
mov
int3
lock
dec
js
dec
je
imul
dec
outsl
cmp
mov
adc
lahf
loop
xchg
int
scas
xor
gs
fdiv
insb
clc
loope
shl
imul
int3
adc
popf
inc
in
add
aad
jb
leave
enter
aas
dec
loope
iret
mov
fdiv
icebp
mov
in
loop
je
add
addr16
dec
xchg
int3
jb
into
xor
lcall
test
pop
add
mov
into
scas
inc
xchg
nop
cltd
push
bound
imull
stos
pop
dec
fdivl
jmp
cmp
and
cs
and
loope
mov
cmp
sub
aad
aas
mov
shrb
into
adc
sub
xor
mov
xchg
sarb
adc
xor
mov
pusha
mulb
push
cmp
jl
jl
dec
jecxz
test
loope
mov
jg
imul
xchg
or
inc
jl
das
pop
mov
mov
or
in
and
xor
dec
jp
ret
cli
dec
xor
inc
mov
xchg
call
dec
push
adc
jl
mov
fcomip
and
and
fldcw
test
loop
push
xor
jb
sbb
inc
add
js
pop
call
notl
jg
cmp
xchg
roll
loope,pt
and
in
std
fdivrl
inc
mov
sub
dec
fisttpl
xchg
inc
xor
mov
xchg
jg
jg
xor
pop
xchg
pop
out
inc
data16
jb
sub
cmp
fsub
cmpsb
mov
cmp
adc
inc
sub
leave
cmc
cmp
aas
push
lds
and
imul
ret
add
push
xor
addr16
and
stc
ds
int3
pusha
jl
inc
out
sbb
jnp
lods
ss
mov
stc
imul
imul
push
insb
or
cwtl
xor
mov
sub
mov
lret
insl
lret
iret
mov
inc
ljmp
inc
pop
incb
sub
in
sub
stc
pop
out
cs
sub
sbb
mov
cltd
push
pushf
and
jne
mov
mov
xor
pop
cli
int3
mov
add
insl
pop
imul
sbb
insl
fadd
hlt
enter
bound
fisubl
or
push
es
xchg
sub
lds
nop
lahf
sub
sub
mov
ret
bound
jp
lret
repz
lcall
fwait
jge
ja
mov
mov
mov
outsl
icebp
out
jb
movb
insb
test
sub
inc
imul
inc
push
out
push
stos
mov
dec
push
je
imul
loop
inc
push
push
sti
pop
js
cltd
das
xorb
cmp
mov
movsb
jle
je
push
pushf
loopne
mov
push
jl
call
dec
pop
loope
fwait
add
arpl
add
into
mov
pop
idivb
jg
or
push
mov
add
icebp
mov
inc
mov
sbb
arpl
xor
lahf
or
push
xor
ljmp
pop
xchg
push
int
pop
mov
outsl
out
cmp
push
add
dec
or
inc
xchg
sti
and
stos
lea
xchg
lods
adc
enter
jno
fisubrs
and
xor
stc
jae
push
lahf
loop
xchg
inc
dec
jl
lods
dec
ja
lock
pop
ljmp
add
movsb
ss
shrb
jg
sub
sub
mov
rcrb
mov
xor
and
dec
lds
fisttpl
xchg
and
push
dec
jnp
mov
loop
aad
and
xchg
int
in
in
dec
jge
rcll
ffreep
xchg
mov
lahf
mov
cmp
testb
in
jae
jg
lret
and
pop
std
dec
xchg
out
pop
push
out
dec
jmp
pop
loope
cmp
dec
pop
repnz
mov
push
ljmp
es
dec
cmp
mov
xchg
adc
lcall
stos
cli
pop
aas
jg
sbb
sub
lods
cld
sub
xchg
mov
mov
mov
addr16
sub
pop
clc
gs
sub
jp
lret
ss
dec
testl
pop
mov
lds
int
sub
jo
add
je
mov
mov
bound
inc
jnp
test
xchg
sbbl
stos
imul
add
sub
imul
dec
cmpsb
xchg
testb
xor
addr16
insb
clc
dec
jp
cmc
dec
add
add
jle
inc
add
cli
inc
sub
outsb
pop
and
cmc
subl
sub
jo
xor
stos
scas
pop
mov
jle
cmp
cmpsl
icebp
out
test
pushf
xchg
and
mov
lods
int
rolb
pop
ja
dec
ja
nop
push
sbb
jns
lea
cs
scas
outsl
rclb
xor
sub
out
add
or
imul
out
pop
mov
cmpsb
incl
mov
in
xor
xchg
insl
iret
aad
cwtl
xlat
dec
insb
rcll
jb
pop
int
loop
scas
mov
ja
les
push
mov
gs
loopne
testl
inc
lret
insl
in
sahf
mov
xor
ss
mov
dec
mov
call
in
das
cwtl
sahf
je
movsb
sub
cli
adc
cltd
sub
push
mov
mov
insb
or
mov
xchg
and
sbb
out
add
sbb
pop
sbb
push
add
sti
inc
arpl
and
pusha
sbb
scas
pop
mov
je
mov
testl
adc
fidivrs
jbe
jno
push
cmp
pop
pusha
and
mov
dec
outsl
les
jl
mov
jae
inc
adc
in
loop
aam
xchg
or
jb
mov
pusha
jp
pop
pusha
subl
push
loop
fiadds
daa
jle
adcb
dec
fucomp
test
pop
mov
test
fdivrp
fwait
repz
mov
mov
cli
mov
mov
inc
pusha
in
fsts
mov
fdivrp
shr
or
sbb
icebp
mov
mov
pushf
push
arpl
std
rol
int3
sbb
jmp
ljmp
xchg
daa
out
lock
adc
and
adc
sbb
and
cmpsl
rorb
iret
mov
push
pop
sub
cld
jae
xchg
les
xor
popf
cli
fs
nop
insl
pop
pop
fisubl
dec
pop
jl
mov
out
sarl
lds
xor
stc
arpl
int3
clc
inc
ja
jnp
loope
jno
fscale
test
cmp
dec
cmp
test
sbb
mov
push
in
sub
xchg
popf
lret
mov
leave
lods
addr16
out
add
sti
push
pop
push
negb
xor
loope
sbb
and
sbb
cmpsb
xor
adc
xor
lods
lods
movsl
add
jnp
nop
sarb
sbb
sub
outsb
add
neg
push
cmp
mov
cmp
xor
inc
gs
sbb
dec
jmp
dec
out
jo
pusha
or
pop
cmc
mov
cld
adc
lret
cltd
mov
mov
fildl
orb
add
pop
les
add
or
cmpsl
mov
push
orl
pop
bound
loopne
popa
xor
movsb
scas
xor
dec
xor
in
imul
jb
test
jae
daa
pop
int
fnstcw
cli
cwtl
mov
sbb
imul
or
call
dec
xchg
add
push
xchg
fists
incl
int3
xlat
fisubrl
push
xor
lea
inc
into
cmp
int
pusha
imul
mov
inc
aaa
sti
mov
lock
xor
arpl
fisubs
mov
mov
inc
js
xor
out
jo
sub
mov
iret
fldl
popa
lods
imul
pop
mov
dec
adc
cs
out
aam
jg
fisttpll
mov
je
jnp
lds
out
insb
mov
inc
rol
mov
pushw
repz
mov
xor
loop
jae
lcall
push
in
push
nop
xor
jl
mov
mov
mov
jl
xchg
fistpl
mov
push
pushf
jp
call
inc
xchg
mov
sub
cmc
sysexit
hlt
test
scas
push
inc
sbb
or
or
cmp
stos
lds
lds
or
in
stc
sbb
or
xchg
dec
push
insb
repnz
sbb
loope
xlat
jae
xlat
stos
push
ljmp
or
stc
mov
test
push
xchg
lea
ss
jp
clc
mov
and
ja
or
jns
out
mov
imul
hlt
or
cmp
inc
or
pushl
std
lods
rcrl
stos
cwtl
push
sub
dec
and
sbb
lds
fidivrl
pop
xchg
push
dec
jg
mov
dec
xchg
rcl
dec
incb
stos
xor
pop
ja
jb
xchg
mov
xor
and
sti
mov
jl
in
gs
pop
lret
daa
cmp
or
cmpsl
push
push
ja
flds
cld
sarb
popf
cmpsb
in
push
mov
pop
lret
sar
cmp
movsb
movsl
in
and
xor
adc
mov
pop
sti
xor
push
cli
lret
cli
fidivrl
jmp
mov
jae
clc
adc
repz
arpl
stc
add
movups
mov
icebp
ficomps
dec
mov
fs
cli
add
dec
rolb
pushf
mov
and
das
xchg
out
cmp
lcall
shlb
add
fildl
push
sbb
in
sbb
shrb
dec
nop
pop
pop
jl
xchg
out
and
sbb
push
cli
pop
test
sub
mov
shll
cmp
movsb
jl
xchg
pop
dec
cmp
push
inc
inc
stos
sbb
xchg
cli
imul
cwtl
hlt
push
ds
sbb
cmp
popa
cld
jb
mov
or
jmp
mov
js
fcompl
in
xchg
test
fstpl
push
test
cwtl
pop
mov
into
popf
cwtl
inc
clc
out
push
or
js
das
xor
shl
sbb
outsb
pop
into
in
push
adc
out
std
add
test
push
jns
mov
sbb
adc
and
int
push
jbe
xchg
addl
mov
loope
das
aas
ds
mov
div
mov
aam
shlb
shl
ret
ret
mov
cmp
sbb
push
add
push
lahf
inc
inc
out
jle
pop
test
fs
sub
xor
pushf
sbb
xchg
jne
mov
cmpsl
push
pop
mov
sub
mov
push
repz
cltd
mov
mov
cltd
cwtl
mov
inc
shrb
adc
jnp
xlat
or
lahf
mov
daa
xchg
repz
loope
imul
push
xchg
mov
pop
lds
pushf
add
push
mov
add
mov
sub
pop
and
mov
cmp
repz
adc
leave
cli
in
xor
stc
mov
in
inc
scas
outsl
dec
dec
shlb
jle
jmp
aam
fsub
pop
fs
inc
xchg
arpl
mov
popa
cmpsb
mov
add
cmp
xchg
or
andl
push
xlat
xchg
xlat
ret
outsl
imul
add
cmp
dec
inc
bound
inc
lods
pusha
std
or
fisubrl
dec
mov
push
adc
cmp
xor
dec
imul
test
jae
jle
lret
mov
inc
xor
or
mov
adc
insl
inc
dec
push
loopne
xor
lea
cmpsl
add
or
pusha
sahf
cli
pop
aas
xor
stos
push
mov
jmp
jbe
xor
push
data16
pop
call
filds
jb
xor
out
pop
cmpsb
jno
xor
or
ds
dec
cs
orb
push
loop
sub
xchg
stos
push
ds
test
shlb
jnp
sbb
mov
test
push
shrl
movsl
gs
dec
mov
arpl
repnz
inc
push
rcrl
mov
mov
jge
xchg
movsb
mov
int3
sub
mov
cmp
lahf
jne
and
mov
push
cs
fidivl
cmpl
and
rolb
pop
sahf
mov
outsb
lahf
das
and
push
add
cwtl
stos
xchg
stos
cmp
xorb
js
das
sub
fmull
rcrb
jno
add
cmp
jle
iret
fidivl
ret
add
add
mov
leave
inc
lahf
adc
sub
fisttps
pop
sbb
cli
xor
xchg
je
add
cmp
imul
enter
jns
xorl
scas
nop
pop
outsl
jns
sub
sub
mov
out
or
mov
xor
and
or
mov
addr16
outsb
imul
inc
jp
fcmove
cmp
rorb
shl
cmp
push
popa
je
imul
and
sub
fsubs
xor
pop
cmc
ds
imul
push
cmp
flds
jb
adc
hlt
cs
mov
mov
out
dec
xor
nop
sub
in
rcrl
mov
sub
movsl
negb
ds
sar
push
les
int
rcrl
addr16
push
mov
jns
mov
jnp
xchg
popa
pop
or
jbe
cmp
dec
dec
pusha
mov
push
mov
test
xchg
inc
scas
cs
jns
sbb
fcomps
fstpl
mov
xchg
scas
xorl
out
arpl
jae
decl
repnz
jl
out
shlb
xor
and
fldcw
xchg
jl
scas
mov
add
sbb
mov
push
cwtl
or
and
in
aad
inc
or
fsubp
out
sbb
faddl
mov
hlt
pushf
mov
sub
mov
push
dec
rolb
dec
orl
es
or
inc
bound
push
xchg
rcll
iret
inc
mov
jecxz
dec
and
inc
pop
mov
cmp
xor
xrelease
add
adc
pop
xor
mov
loope
mov
adc
pop
xchg
ljmp
lcall
scas
push
lods
mov
imul
or
jg
nop
inc
pop
gs
mov
mov
mov
xor
mov
fisubs
shll
push
mov
or
cwtl
dec
pop
mov
add
lods
or
jo
push
jb
mov
int3
xchg
or
xchg
ds
out
mov
dec
dec
and
lods
lahf
xchg
rcl
sbb
nop
push
sbb
sub
pop
push
mov
lret
jge
sbb
movsb
stos
les
or
and
pushf
pop
push
xor
shr
xor
fwait
or
stos
repz
xchg
adc
loope
jbe
ror
push
mov
xor
ja
sahf
mov
mov
ljmp
fwait
mov
inc
fmuls
cld
call
push
mov
mov
lahf
and
mov
loope
add
pop
lock
testb
sub
pop
stc
popa
adc
pop
adc
ljmp
sbb
lds
mov
jp
push
iret
pop
mov
dec
ret
cmpsl
imul
lds
lahf
das
mov
pop
cli
movsl
imulb
adc
inc
in
push
mov
iret
addr16
jb
movsl
fnstcw
icebp
xchg
dec
jl
mov
mov
jmp
adc
adc
and
push
adc
push
sahf
xchg
shl
inc
loop
cmp
xor
add
lret
pop
xchg
cmpb
pop
add
xchg
fcoml
pushl
and
xor
popf
test
add
bound
clc
jge
mov
push
sbb
test
cltd
mov
rorl
jmp
sub
leave
sub
cwtl
push
sbb
inc
fwait
cltd
adc
sbb
inc
stc
ss
pop
mov
lcall
or
jp
sub
mov
aaa
stos
push
xchg
cmp
imul
or
ds
xchg
out
mov
repz
sbb
mov
stc
mov
mov
pop
jmp
push
sub
xor
bound
xlat
ja
push
push
icebp
xor
mov
cmp
int3
jmp
mov
mov
icebp
popf
imul
jae
cli
push
cmp
cmp
popa
test
and
or
push
das
xchg
xchg
in
or
inc
sbb
sbb
cltd
xlat
cli
ljmp
testl
or
cmpsb
in
into
insl
dec
cltd
cmp
xchg
iret
xor
sti
inc
mov
stc
out
mov
in
mov
cmc
test
in
ret
icebp
cmp
dec
or
scas
xchg
and
cmc
into
mov
and
idivb
xchg
cwtl
insb
dec
mov
loop
xor
int3
sarb
jnp
inc
mov
pop
mov
dec
lock
out
pop
push
mov
sti
inc
lods
and
sub
mov
je
mov
bnd
dec
jne
and
mov
inc
pop
cs
xchg
add
sbb
cmp
mov
mov
inc
xor
addr16
cld
ret
push
lahf
aaa
std
sub
inc
repnz
insb
sbb
cmc
mov
sbb
push
jns
pop
rcr
cmp
sub
sbb
xchg
sub
pop
add
out
in
xchg
mov
enter
fidivrs
mov
test
mov
mov
cmpl
dec
cs
mov
xchg
lds
insb
das
inc
sbb
daa
jbe
fistpll
push
jnp
lret
inc
jnp
inc
inc
xchg
movsl
xor
les
push
rorb
pop
inc
scas
cmp
jg
popa
mov
adc
mov
jae
sbb
and
lahf
scas
es
addr16
rcrl
dec
sahf
ret
dec
pushf
pop
cwtl
pop
shrl
sbb
hlt
xor
out
sbb
std
push
sub
sbb
and
dec
loopne
cld
jecxz
jns
into
jae
mov
mov
fst
ss
fistpl
movsb
jns
mov
jle
stos
lret
and
sub
or
sarl
imul
ret
xchg
divl
inc
insb
fimuls
jnp
incl
movsb
sbb
lret
cmp
push
mov
fimuls
jae
mov
lds
inc
jmp
xchg
cmpsb
ds
icebp
mov
xor
movsb
mov
jge
mov
scas
test
iret
jl
call
les
jl
xor
mov
xchg
cmp
pop
sti
jg
and
push
sub
mov
xor
out
testl
xor
jecxz
mov
xchg
dec
pop
cs
lods
xchg
inc
push
push
jb
int
in
es
scas
mov
sbb
push
dec
push
sti
sar
inc
call
dec
divb
sahf
cmpsb
add
ret
push
mov
sub
addr16
sahf
test
sub
stos
in
into
add
sbb
ret
mov
leave
adc
xchg
fisttps
fld
or
addr16
lea
mov
sbb
into
dec
in
sbb
push
stos
mov
mov
pop
loop
add
push
jecxz
mov
fadds
adc
out
jecxz
daa
iret
pop
in
in
adc
push
cltd
or
div
add
xchg
jno
fs
enter
call
xchg
sbb
pop
es
insb
mov
leave
daa
xor
pop
stc
inc
sub
push
mov
cmc
fs
std
cmp
cmpl
cmp
mov
lods
loope
mov
data16
push
nop
jbe
repz
clc
lock
jl
int3
add
or
add
sbb
mov
outsl
inc
cmp
mov
push
lret
mov
lret
pop
iret
cmpsb
fs
mov
xchg
push
cltd
imul
adc
pusha
xchg
ds
jg
xor
jmp
pop
cmp
add
pop
push
shrl
xchg
test
ss
add
jp
push
inc
mov
sbb
rcll
or
sub
sbb
mov
add
and
push
mov
lahf
pusha
addr16
fidivrs
hlt
adc
pop
push
arpl
popa
inc
inc
pop
dec
pop
ror
ja
cmp
mov
sub
stos
loopne
sub
hlt
int3
clc
or
mov
pop
push
popa
pop
pop
mov
xchg
sub
sahf
das
pusha
fnstenv
scas
aas
sarl
push
mov
jmp
es
jg
inc
mov
repz
xchg
push
xchg
xlat
jle
inc
fcoms
push
or
cmpsl
fimull
sbb
cmp
shrl
popa
pop
not
adcb
scas
cmp
rcr
sti
in
loopne
xchg
int
xor
mov
add
add
call
xchg
scas
inc
and
xor
jo
aad
xchg
mov
inc
push
push
nopl
pop
inc
or
adc
xchg
mov
push
and
sarb
aaa
loop
push
pushf
sub
out
iret
test
inc
in
or
fsubrl
mov
sbb
mov
fidivl
cld
sti
xor
sub
mov
mov
je
das
pop
push
push
imul
push
fs
xchg
lret
adc
add
jmp
jbe
pop
stos
pop
add
inc
mov
in
push
sbb
jge
pop
inc
mov
inc
push
test
stc
call
out
sbb
mov
or
imul
sahf
leave
bound
lea
xchg
add
xor
aad
test
or
nop
aad
mov
mov
push
ja
jmp
push
lods
movsl
or
or
cltd
jmp
dec
sbb
or
daa
cmpsl
mov
dec
sbb
je
hlt
mov
mov
adc
leave
jecxz
rorl
lock
and
xor
xchg
or
incl
xor
jnp
push
stos
sbb
sbb
sub
adc
repnz
inc
jmp
or
jb
rorb
sub
shlb
ficoms
jns
rcrl
adc
shl
into
cld
inc
push
rolb
ljmp
nop
mov
sub
xchg
rcll
add
mov
push
mov
inc
mov
xchg
sbb
clc
jnp
and
jg
shrl
sub
stos
stc
pop
sub
jecxz
xchg
cltd
hlt
add
push
xchg
fwait
and
arpl
lds
test
jnp
faddl
cmpsb
ljmp
sub
sbb
adc
jmp
jp
ds
mov
xchg
iret
xchg
lods
daa
jg
sbb
adc
xchg
clc
mov
ja
movups
rorl
subl
xor
inc
sub
sub
iret
jb
jb
daa
arpl
orl
inc
sbb
inc
hlt
add
jle
add
inc
aas
testb
xor
and
leave
cmpb
xchg
int3
imul
and
cmc
mov
stc
in
jae
divb
into
and
iret
sub
iret
dec
cmovo
mov
aaa
xor
lods
ja
cmc
jne
rolb
and
into
mov
and
inc
xchg
dec
jle
cmpsb
out
sarl
xchg
mov
and
mov
adc
lahf
pushf
mov
inc
sbb
push
repz
out
js
push
jl
lret
call
sbb
dec
xchg
sbb
ds
mov
sti
rcrb
jg
into
lods
and
pop
arpl
adc
das
mov
out
ficoml
rcl
pop
cmp
je
decl
mov
loopne
sbb
jmp
ljmp
loope
pop
neg
inc
and
dec
insl
scas
and
pop
xor
mov
mov
insl
sub
mov
and
popa
lret
test
sti
imul
out
push
out
repnz
mov
pop
fdivs
xchg
test
lds
lcall
imul
sbb
sub
xlat
inc
imul
jecxz
sub
loopne
out
sti
inc
fcompl
cmp
aaa
and
test
rolb
cmp
sbb
mov
mov
outsl
out
mov
jecxz
pushf
or
outsb
dec
push
and
addr16
xchg
jbe
insb
pop
fstps
xor
fnstsw
loope
sub
mov
cwtl
lock
pusha
fstpl
hlt
adc
xor
lcall
adc
cmc
mov
into
movhps
cmp
cmp
adc
cmpl
jbe
push
shrl
or
and
mov
or
sbb
add
lcall
adc
ds
imul
fdivr
push
mov
sub
gs
inc
cmpb
repnz
int
pop
shlb
fidivl
rorb
xchg
cmp
outsl
mov
xor
inc
add
movsl
mov
add
out
lods
mov
pop
mov
fwait
jns
daa
imul
mov
add
in
mov
arpl
xchg
lds
mov
jae
ret
in
sub
add
nop
jbe
xorb
cmp
repz
inc
idivb
lea
mov
xchg
js
into
testb
add
lcall
call
or
mov
movsb
push
les
shlb
test
ror
push
add
jno
fstps
popa
lret
es
pop
xchg
call
outsb
mov
arpl
jno
sti
jae
repnz
aaa
sub
xlat
int3
out
clc
mov
lock
mov
adc
push
xchg
jae
sbb
in
ja
xorb
pop
pop
push
or
aaa
aam
imul
dec
outsb
fidivl
jns
std
pop
or
test
stos
lds
xchg
xor
sahf
add
push
pop
in
jmp
sbb
lea
or
mov
jge
fsubp
not
ror
add
push
scas
cmpsb
add
xchg
jle
imul
cmp
xor
sub
std
add
sub
mov
sub
pusha
cmp
cli
popa
icebp
outsb
or
nop
sahf
cld
pop
adc
mov
pop
jecxz
in
sub
mov
inc
inc
xor
loopne
ret
cld
call
call
cmp
mov
ljmp
inc
and
adc
cmp
jge
pop
and
int
jecxz
in
xchg
mov
push
dec
into
loope
inc
xor
icebp
ror
inc
popf
es
or
jb
out
repnz
push
push
mov
jp
nop
pop
imul
mov
lahf
xchg
int
fnstsw
lcall
rclb
ljmp
loop
jne
dec
mov
cmp
out
aas
std
popf
shlb
aas
dec
xor
xor
adc
mov
mov
and
sub
xor
fmull
mov
xor
idivb
mov
inc
mov
mov
icebp
in
pop
sub
cmp
fstpl
mov
roll
push
pop
jno
bound
jmp
jbe
or
jno
and
xchg
es
jl
clc
ds
add
icebp
cs
cmp
cmp
jnp
adc
cmpb
or
out
in
mov
push
xor
sti
dec
ret
mov
xchg
mov
scas
mov
dec
mov
popa
xlat
push
xchg
aas
jecxz
mov
mov
sbb
cmpsb
sahf
aam
inc
inc
sbb
jge
inc
in
cmpsb
mov
and
jo
push
xchg
dec
inc
call
scas
call
xor
cld
test
repnz
loopne
popf
jae
pop
pop
pusha
jl
jecxz
and
xchg
mov
psadbw
push
inc
cltd
leave
aas
ss
mov
push
movb
insl
or
xchg
adc
lahf
adc
adc
mov
jp
das
cmp
mov
fisubrl
shlb
stc
cmc
cmp
popf
mov
push
gs
pop
aad
cld
stos
adc
scas
repnz
cmp
push
push
imul
jb
jb
mov
mov
sbb
sbb
add
bound
insl
aaa
jo
imul
jg
mov
repz
jle
pop
daa
popa
loopne
nop
adc
addr16
add
idivb
cmp
outsl
sbb
mov
sahf
inc
aam
jb
fsub
sub
fmull
mov
fstpl
loopne
mov
sub
xor
out
sub
sbb
repz
popa
jmp
sub
movsl
scas
xchg
mov
cltd
add
rcrb
mov
push
mov
les
or
fwait
leave
lret
and
push
pop
lea
loop
imul
es
loop
in
loopne
gs
div
lods
inc
sbb
sti
lods
popf
dec
data16
sbb
jns
ljmp
sbb
hlt
sbb
fstl
inc
cltd
xchg
mov
shlb
cmp
cli
out
mov
sub
shl
fcmovb
mov
or
or
and
mov
adc
dec
cmp
inc
sahf
call
dec
xchg
popa
mov
sub
call
enter
dec
jb
data16
xchg
fidivs
and
add
xor
loope
inc
xor
cmp
icebp
hlt
out
push
ljmp
cmpsl
scas
je
loopne
mov
xor
pop
lret
test
lahf
sub
and
or
sub
repz
mov
ret
loopne
jl
pop
imul
subb
gs
jl
repz
pusha
sarb
adc
das
sub
or
pop
jne
cmc
movsl
xchg
fwait
xchg
inc
stos
std
popf
fwait
insl
or
jl,pt
jmp
psrlq
std
xor
pop
test
mov
sub
cmp
mov
adc
mov
jae
fcoms
sarb
sbb
mov
pop
cmpsl
cmp
xor
mov
cmc
enter
adc
arpl
inc
dec
arpl
rol
sbb
out
pop
mov
cmpsl
hlt
js
inc
and
mov
push
mov
jo
dec
sub
pop
loope
pop
xor
dec
imul
xchg
jp
imul
lods
addr16
xchg
sarb
fsts
sbb
push
jne
test
mov
stos
xchg
pop
jae
clc
jae
filds
test
xchg
stc
pop
push
xchg
cld
andl
mov
rclb
sbb
sbb
lods
aas
ds
xchg
addb
testb
lret
imull
xor
scas
mov
and
fnstenv
sbb
adc
jb
push
lock
mov
mov
push
mov
int3
jecxz
js
sub
xchg
ljmp
jns
ss
jp
cmpsl
inc
orb
rcl
std
gs
inc
sub
test
mov
sbb
mov
lahf
xchg
cmpsb
in
push
clc
dec
mov
pop
sbb
imul
jbe,pt
scas
fs
inc
out
and
jno
xchg
bound
and
sbb
ficoml
mov
addr16
andb
jmp
xchg
sub
out
jno
mov
ret
outsl
dec
out
mov
push
sbb
scas
int
adc
pop
das
add
outsb
cmp
in
pop
lcall
jns
out
dec
xchg
xchg
add
ss
xor
mov
std
dec
gs
sbb
xchg
lret
insl
dec
aad
data16
mov
in
into
pushf
add
mov
dec
out
mov
adc
imul
mov
call
pop
icebp
lahf
jmp
dec
xchg
or
dec
cmpsb
mov
pop
xor
adc
inc
ror
push
sbb
repz
ds
pop
xchg
mov
cmp
sub
pop
jecxz
push
inc
iret
dec
sub
jge
pop
aam
out
xor
daa
out
xchg
sbb
movsl
in
scas
and
inc
sbbl
out
arpl
mov
hlt
std
lods
fsub
dec
push
sbb
ffree
out
or
jmp
mov
ret
cmp
pop
mov
daa
out
dec
pop
jmp
mov
mov
inc
or
push
inc
add
mov
std
out
loopne
inc
data16
add
lret
outsl
mov
xchg
repnz
xchg
sub
in
fdivl
je
sub
dec
adc
xchg
mov
lds
gs
stos
sub
insb
loope
inc
pop
jae
add
mov
mov
mov
hlt
loop
idivb
fwait
cmp
ja
mov
push
movsl
test
xchg
mov
mov
jb
jle
inc
in
inc
mov
push
cli
push
cwtl
mov
dec
mov
cltd
mov
inc
cmp
fsubs
test
daa
mov
sbb
ficompl
jo
adc
mov
fnstenv
sub
mov
testl
add
xor
xchg
push
xchg
repz
cwtl
mov
into
push
push
pop
mov
lret
rcrb
dec
aad
pop
movsl
mov
add
pop
add
mov
xchg
mov
push
dec
mov
mov
mov
adc
add
jnp
punpcklbw
jb
xchg
shll
test
in
and
mov
pop
aaa
pop
push
mov
cltd
movsl
enter
pushf
xor
jmp
inc
insb
xor
sahf
pop
mov
jbe
adc
aam
dec
inc
test
std
cmp
jl
inc
or
shlb
aam
adc
call
xlat
notl
or
mov
lds
mov
scas
sub
or
jo
pop
leave
dec
mov
aam
jecxz
rsm
xlat
adc
lcall
push
and
fiadds
xchg
and
rcrl
test
loop
inc
les
jmp
adc
in
shlb
fwait
roll
mov
in
das
loope
call
cmp
mov
in
pop
cld
lds
aas
pop
out
inc
iret
fsubrl
stos
mov
leave
nop
and
je
repnz
out
dec
scas
clc
icebp
out
push
ljmp
pop
mov
dec
insl
cli
dec
mov
inc
jl
adcl
push
adc
int
aam
loopne
clc
pop
js
nop
scas
stos
xchg
adc
sub
adc
dec
mov
mov
loop
add
fnstcw
and
cmp
out
xor
rcr
popf
div
mov
jnp,pt
ret
pushf
jno
sbb
clc
shrl
insl
jb
push
push
inc
icebp
testl
adc
out
inc
dec
cmc
dec
pusha
mov
push
rclb
mov
js
push
aas
push
aaa
jge
dec
adc
add
jg
mov
jae
mov
mov
sub
dec
mov
mov
sbb
lcall
xchg
pop
dec
in
cltd
mov
or
nop
jbe
push
mov
xlat
sbb
xchg
test
push
int3
dec
dec
inc
inc
jne
xor
dec
mov
inc
cmpsb
aas
pop
jge
adc
xor
inc
sbb
push
sbb
cld
sub
sti
cmp
mov
fidivs
je
jp
or
jecxz
add
fmull
cmp
rcll
sbb
mov
arpl
shll
ret
movd
jb
std
stos
xchg
sbb
pop
ljmp
sbb
jne
fnstenv
xchg
mov
cmpsb
mov
jmp
hlt
rcll
add
jo
cmpsb
ja
aaa
xor
pusha
jne
jns
jmp
ss
leave
mov
xor
loopne
jg
mov
mov
rclb
inc
jp
pop
add
jbe
sub
mov
xchg
xor
sub
aas
dec
mov
imulb
imul
jecxz
jbe
popa
je
arpl
push
mov
mov
std
or
xchg
xorb
sub
pop
repz
les
dec
aad
mov
cmp
addr16
push
mov
xor
jl
outsl
mov
cmp
adc
out
xchg
mov
int3
xchg
pop
stos
mov
enter
popa
push
dec
aad
lahf
in
stos
sub
rcll
testl
push
push
add
or
cpuid
inc
daa
jge
lret
mov
ja
and
addb
sbbl
cmp
pop
sub
pushf
xchg
mov
adc
dec
ja
ret
xchg
mov
jp
imul
xchg
fcmovne
adc
push
or
inc
lods
xor
mov
jl
or
add
sub
mov
pop
fistl
pop
addl
hlt
imul
add
sub
push
jne
hlt
mov
test
xchg
mov
das
jmp
jne
out
into
xlat
pop
adc
push
sbb
lea
sub
jmp
iret
call
inc
push
cli
pop
icebp
adc
test
jbe
mov
stos
push
mov
fs
enter
mov
popa
add
jp
insl
icebp
cs
sti
xor
xor
nop
loopne
stos
or
bnd
mov
fdiv
ret
dec
jbe
and
mov
push
test
jp
ret
ss
out
sub
mov
nop
mov
pusha
inc
rcrl
out
xchg
mov
sbb
inc
std
outsl
test
push
cmp
mov
xor
inc
push
xchg
ja
ficoml
inc
pop
and
je
push
fcoml
cmpsb
pusha
repnz
adc
xchg
lds
pop
mov
imul
test
gs
cli
into
out
jae
incb
mov
sub
jmp
ljmp
sarl
xchg
jmp
aad
xchg
pop
stc
mov
movsl
jmp
lcall
lods
xor
jmp
pop
arpl
les
outsl
scas
inc
xor
das
jb
pushf
outsl
jno
push
ret
mov
pop
push
sub
adc
and
mov
push
repz
inc
js
sub
jp
stos
mov
cmp
push
je
cmp
add
dec
sub
ja
mov
xchg
int3
dec
rcll
mov
jmp
sub
add
fidivs
mov
or
mov
mov
fbstp
ds
addr16
or
xlat
pop
sbb
loopne
sub
pop
mov
inc
sarl
push
pop
daa
jl
pop
add
mov
adc
stos
test
movsb
or
mov
xchg
push
mov
inc
push
cmp
pop
sub
xchg
lret
or
stos
pop
jno
ficomps
xor
divb
jecxz
insl
test
scas
adc
adc
addr16
rcll
inc
push
xchg
push
in
and
std
or
xor
ret
imul
je
add
icebp
loopne
xchg
mov
adc
push
mov
inc
adc
lret
mov
pop
ds
xchg
fistl
mov
pop
dec
xlat
pusha
xchg
jne
jp
jg
jae
adc
loope
sub
fwait
jno
inc
mov
out
xchg
mov
and
in
inc
adc
lcall
dec
add
push
std
jae
pop
add
stos
stos
lods
loop
add
lahf
pop
adc
add
call
mov
dec
pop
fbld
les
mov
fnstsw
add
mov
cmpsb
bound
xchg
enter
inc
lods
out
dec
push
ljmp
dec
sahf
aas
pop
inc
jp
adc
enter
movsb
jae
out
movsl
push
lds
inc
lock
cmp
scas
imul
div
iret
xor
jg
xchg
jae
es
dec
cltd
xchg
jnp
xchg
daa
popf
sub
pop
enter
enter
jae
pushf
adc
loope
sub
xor
in
mov
cli
push
or
xchg
pop
add
adc
sub
pop
aam
lea
vphadduwq
or
or
aaa
rcl
shlb
inc
repz
and
dec
lds
aas
setb
cld
in
pushf
fstl
fbld
mov
pop
sub
xlat
iret
push
loopne
cmpsb
push
fs
jne
pop
out
imul
xchg
sti
jne
inc
jo
pop
dec
in
xor
adc
adc
aas
pop
jecxz
mov
add
mov
jno
stos
into
jg
cmp
lret
sbb
pop
inc
mov
out
and
cmpsb
add
sub
add
lea
into
cmp
sub
repz
dec
ret
jnp
sub
push
pop
lret
fmuls
ficomps
stos
in
imul
xor
imull
jnp
dec
mov
in
add
mov
call
lods
roll
mov
dec
std
inc
nop
jne
adc
in
mov
xor
scas
ret
sub
sub
leave
and
mov
mov
sti
rcll
push
mov
dec
or
or
mov
stc
dec
repz
loope
hlt
shrl
xor
in
ss
jns
loope
pop
imul
jl
mov
out
cmp
addr16
loop
sub
ljmp
mov
adc
out
insl
adc
in
jno
jmp
push
fnsave
fsts
pop
sub
cmpsl
gs
inc
sub
jo
arpl
inc
and
mov
dec
mov
add
hlt
mov
jecxz
testb
clc
mov
xor
loop
idivb
dec
scas
int3
inc
scas
cmp
test
scas
mov
jle
leave
cli
xchg
adc
cli
jge
into
inc
shlb
and
adc
pop
sub
aas
imul
xchg
push
movsl
repnz
pop
jne
cwtl
ja
or
cmp
adc
mov
inc
vphaddbq
push
mov
jns
pop
jg
or
jne
les
pusha
testb
repz
mov
sub
mov
pop
sbb
and
mov
xchg
inc
aam
inc
fdivl
test
loopne
test
insl
pop
pop
add
sub
fwait
jp
repnz
mov
mov
and
mov
pop
incb
cli
jno
repz
lods
dec
fxch
mov
xchg
mov
lret
cmp
fisubs
loopne
adc
jns
popl
push
mov
jg
sub
pop
add
push
or
or
lds
test
add
jge
cmp
imul
or
xor
cmp
cs
iret
sub
xor
jne
je
lock
sub
cli
or
lahf
mov
push
inc
je
sbb
add
add
sbb
adc
cmp
adc
push
push
mov
xor
enter
popf
xor
add
push
std
push
imul
mov
add
inc
jge
fucomi
test
push
outsl
mov
mov
or
jg
ret
int3
and
inc
sub
in
ss
outsl
push
shrl
test
popf
inc
mov
jg
data16
mov
jge
dec
mov
xchg
repnz
xorb
jp
notb
push
inc
dec
mov
test
mov
dec
ljmp
cmp
call
mov
fistpll
lods
in
mov
ss
mov
add
stc
sarl
jb
and
rcll
sbb
pop
scas
gs
into
jb
lock
imul
adc
push
mov
mov
jmp
xor
dec
sub
mov
xchg
jne
jne
hlt
out
xor
cmp
cli
enter
push
dec
sbb
pusha
stos
bnd
xchg
jmp
or
mov
jns
xor
mov
into
mov
fcmovb
sbb
push
cltd
dec
jmp
das
in
andb
jno
pop
les
mov
mov
hlt
inc
sahf
push
add
mov
and
roll
aaa
add
addl
xor
std
aad
out
add
dec
inc
pop
adc
jge
add
inc
in
cmpsl
sub
ljmp
sub
lea
push
inc
adc
cmp
sahf
pop
push
adc
sub
outsb
ret
mov
fdiv
xor
cmp
xor
jo
xor
test
mov
out
repnz
popf
lock
jecxz
jb
mov
hlt
orb
mov
or
inc
test
or
xor
les
add
sbb
pusha
cmp
xor
daa
mov
js
fisubrs
pop
into
testb
mov
pop
paddusb
and
mov
setb
or
int
xor
cli
rcl
repnz
pusha
leave
popa
jl
push
xchg
sub
push
xchg
mov
rcrb
mov
mov
out
jge
dec
xchg
dec
shrb
jns
es
ret
mov
pop
ljmp
mov
sbb
mov
rorb
mov
mov
cmp
arpl
add
and
fs
adc
inc
clc
jns
test
imul
jp
sbb
jecxz
int
inc
mov
mov
mov
repnz
jno
ret
adc
or
lods
pop
mul
es
mov
mov
ja
xchg
outsl
ds
cmc
aas
jge
jbe
or
dec
sahf
dec
loop
push
xchg
add
push
loope
push
adc
dec
loopne
xchg
pushf
mov
add
inc
ret
sarb
mov
pop
sub
lea
fistpl
add
sbb
lret
data16
push
adc
test
rcrl
movsb
cmp
lahf
call
mov
lret
sub
mov
adc
les
lods
or
or
icebp
jae
arpl
aam
mov
scas
aas
data16
arpl
and
xor
add
aas
out
adc
out
add
lds
popf
and
pop
ret
push
inc
je
push
int3
cmpsl
mov
sub
into
sbb
stc
std
xor
stc
xor
mov
lret
insl
cmc
cmp
mov
mov
orl
jbe
dec
sub
arpl
mov
push
xchg
cmp
sub
jne
shlb
cld
push
je
ret
and
or
in
insl
das
mov
mov
mov
add
fsub
mov
xchg
and
mov
int3
rcr
int
push
popa
lcall
out
and
xchg
sarb
jp
xchg
cmp
sar
pop
jbe
xchg
sbb
aas
pusha
ret
call
mov
jl
inc
int
and
push
pop
or
inc
ret
popa
xor
mov
dec
mov
mov
in
out
shlb
mov
mov
cli
iret
in
push
mov
push
jmp
xor
mov
sub
outsb
sub
xchg
insl
xchg
test
es
and
inc
imul
and
mov
rcll
ds
out
xor
andb
sti
call
dec
pop
cmp
jl
jmp
xchg
and
jp
ror
xor
dec
je
push
sti
adc
ds
sub
cltd
xchg
pop
cwtl
jge
or
push
xchg
nop
jb
bound
adc
jecxz
mov
and
scas
js
ja
mov
mov
cmp
lahf
dec
xchg
stos
insb
push
jle
imul
jae,pn
jne
scas
cltd
xor
push
mov
scas
sbb
mov
cmp
xchg
sub
lret
notl
push
hlt
add
hlt
and
out
movsb
dec
jmp
mov
nop
jl
mov
call
push
leave
pop
das
jno
adc
add
sub
mov
push
in
scas
into
xor
xor
dec
leave
or
out
insb
fildl
aad
scas
fldt
mov
rcrl
aaa
push
xor
pop
ficoms
outsb
jo
mov
int
xor
cmp
aas
sub
xchg
sub
mov
inc
enter
daa
push
mov
js
pop
aas
xor
ffree
sbb
aaa
loope
movsl
push
loope
fidivrl
or
mov
mov
cmpsl
adc
enter
xchg
andb
notb
mov
xchg
nop
rclb
xchg
loopne
daa
push
testl
dec
rcrb
scas
cmpsb
pop
jp
dec
jb
mov
add
flds
mov
jbe
mov
ret
mov
push
mov
mov
out
aas
jb
dec
push
inc
cmp
jns
xor
rcrl
xchg
test
jb
enter
cmp
jnp
sbbl
cmp
xor
mov
push
sub
outsb
mov
cld
int
sbb
xorb
hlt
sbb
out
mov
pop
pop
jae
call
out
xchg
js
or
negb
adc
and
mov
jbe
sub
das
mov
cld
data16
push
mov
jmp
jae
pop
mov
imul
icebp
adc
aam
cmp
cmpsb
push
lcall
popf
jmp
cli
fs
mov
mov
adc
lahf
ss
ret
xor
not
ret
icebp
frstor
cmp
push
xchg
addl
andl
cmc
adc
mov
xchg
dec
inc
lea
ret
push
dec
sub
arpl
roll
xor
clc
cmpsl
add
outsl
test
inc
pop
es
mov
lea
xchg
inc
fstpl
mulb
movsb
in
roll
ret
lret
fstps
sub
cmpsl
dec
pop
bound
push
jge
test
int3
dec
dec
lods
scas
adc
add
pop
cmpsb
pop
in
and
hlt
push
push
cmp
mov
jo
daa
adc
pushf
add
sbb
lret
lret
mov
xor
cmc
ret
roll
lods
adc
push
decb
mov
sbb
inc
fistpll
scas
ds
sub
sbb
cmpsl
jb
imul
xlat
stos
in
lret
cmp
in
cltd
mov
mov
jg
ja
je
sbb
inc
jle
mov
jne
jge
int3
fildll
mov
cmpps
das
pusha
or
aad
and
cmpsb
mov
jecxz
push
out
in
inc
aad
mov
adc
out
imul
fdivrl
mov
mov
push
into
xor
inc
lret
dec
subl
push
std
cld
repz
xchg
rcrb
loopne
dec
xchg
dec
push
xor
inc
cmpsb
lahf
xor
mov
push
ret
push
popa
sbbb
push
jmp
call
dec
cld
lahf
arpl
or
adc
pop
daa
push
addb
mov
pop
loop
pop
aas
test
and
pop
pop
jo
pop
jno
jmp
aad
xchg
insl
pop
aas
insl
stos
leave
test
mov
js
adc
stos
jno
mov
inc
sub
inc
popf
mov
outsl
jne
and
push
adc
mov
es
outsl
mov
and
lock
insl
daa
mov
jl
mov
sub
xchg
xchg
movsb
insb
sbb
or
fbstp
pop
inc
aas
or
lods
jae
int
into
add
rcpps
jl
jecxz
mov
repnz
stc
xor
repnz
mov
jp
in
mov
sub
out
test
jl
int3
bound
rep
mov
push
insb
xor
sbb
and
jmp
cmp
stos
fldcw
add
mov
mov
mov
in
out
cs
and
jne
sub
leave
imul
xor
or
add
sbb
inc
pop
push
rolb
in
pop
jl
lods
mov
lea
sbb
jl
cwtl
add
fcoml
rcr
or
dec
or
stos
test
orb
lahf
dec
imul
int
mov
push
add
sub
mov
imul
pop
pop
xor
call
add
dec
xor
mov
out
imul
sub
or
test
push
rcrl
movsb
xor
ljmp
repz
xchg
add
test
mov
stos
cs
test
and
dec
mov
cmpsl
hlt
repnz
sub
aam
sub
push
inc
iret
dec
mov
ja
loope
dec
lret
jbe
lods
scas
loop
xlat
out
adc
xchg
leave
xchg
popf
inc
negl
push
mov
jp
adc
cmc
sub
imul
xchg
outsb
jp
rorb
or
loope
xchg
cmp
into
pop
call
test
stos
outsb
fwait
mov
or
iret
aam
and
cmpsl
popa
add
hlt
dec
jns
jns
dec
mov
roll
inc
cmp
pop
xor
lcall
jmp
pop
jns
jge
nop
jno
mov
ja
cmpsl
movsl
imul
lret
xor
dec
pop
xchg
push
add
fisubs
std
jg
sahf
hlt
test
lahf
fsubrs
std
clc
mov
stos
mov
jo
push
popa
test
xlat
loope
lret
and
sub
mov
push
push
push
stos
stos
sub
repz
xlat
mov
scas
cmp
mov
fdivr
jnp
in
jmp
inc
add
xchg
ficompl
pop
inc
mov
adcl
xchg
pop
outsb
mov
test
stos
add
imul
dec
fidivl
inc
and
dec
xor
popf
or
pop
aas
mov
insl
xorl
pop
jne
or
cmpsl
out
push
cmpsl
fisubrs
loope
je
loope
out
andl
push
push
je
ss
stos
dec
jnp
aam
repz
ja
stc
bound
xlat
or
and
scas
inc
jle
add
adc
pop
adc
jo
lea
or
jge
pop
inc
out
add
pop
jae
jge
int
filds
fwait
cmp
add
addb
push
sti
stos
ss
mov
and
jge
ljmp
xchg
call
sahf
insl
mov
mov
add
mov
mov
arpl
mov
pushfw
outsb
pop
mov
adc
jg
dec
mov
test
cmp
mov
sbb
pop
cli
loopne
xor
cld
jg
lahf
pop
jnp
and
icebp
mov
cs
call
and
cmp
or
mov
mov
ss
inc
or
add
icebp
jne
jecxz
pop
mov
mov
dec
orb
mov
nop
cltd
aaa
cli
jbe
popf
jbe
fisubs
lret
fcoml
and
mov
imul
fwait
sbb
mov
out
mov
mov
inc
shrb
sahf
inc
mov
cld
push
mov
pop
xor
outsb
pop
jle
aas
pop
lret
sub
adc
xor
mov
lds
cltd
mov
mov
shrl
packuswb
sub
cmp
push
mov
test
stos
inc
divb
std
pop
and
lahf
jecxz
je
ja
push
inc
or
fxch
mov
stos
lods
loop
aam
dec
rol
cs
lcall
fcoml
mov
rolb
and
pusha
mov
jnp
shlb
pop
xchg
enter
dec
pop
sti
fcompl
mov
addr16
mov
pop
xchg
aam
fidivs
pop
ret
pop
rorb
pop
idivb
pop
mov
shlb
dec
push
out
sub
enter
pop
jmp
xchg
daa
into
or
jbe
outsb
xor
fnsave
nop
xchg
add
xor
xlat
jns
mov
imul
adc
mov
lret
adcb
out
int
pop
jae
int3
cmp
movsl
sarl
test
mov
js
jmp
jbe
test
jmp
lods
mov
test
push
orl
xor
inc
cmpsb
xchg
lcall
leave
adc
pop
pop
aaa
mov
sbb
loopne
ljmp
add
xor
pop
pop
xor
jl
sti
lea
in
pop
lret
dec
sbb
lret
jnp
fiaddl
lods
aad
dec
add
in
cmp
int3
jno,pt
jge
xchg
dec
and
ds
ret
lret
jnp
dec
arpl
mov
orl
xor
xchg
or
push
sub
scas
inc
in
dec
adc
or
scas
loopne
sahf
insb
sbb
cmp
pushf
int
loopne
ljmp
jbe
inc
jmp
adc
sub
loopne
in
sub
mov
add
push
aam
adc
lods
jb
jo
xchg
shlb
bnd
test
push
fsubl
add
enter
ss
mov
adc
mov
xchg
inc
add
mov
or
out
sbb
cmp
cmp
or
aas
cmpl
xor
push
xor
mov
nop
or
mov
xor
in
jle
mov
sub
push
mov
jmp
out
movsb
cmove
inc
adc
hlt
pushf
mov
ljmp
mov
and
jno
cmp
inc
or
add
aam
scas
jnp
mov
mov
mov
sbbl
pop
hlt
out
mov
push
test
mov
xchg
test
insb
or
lret
sub
cmp
sub
pop
jge
sbb
cmp
and
dec
pop
pop
std
nop
insb
adc
adc
pop
add
out
push
sub
fwait
push
mov
xor
leave
sub
push
inc
inc
or
sbb
aas
call
inc
stos
xchg
or
xchg
bound
mov
scas
and
insl
rcll
je
lds
inc
or
xchg
push
and
sub
mov
inc
and
push
mov
cmpb
leave
push
pop
push
jle
push
mov
or
into
dec
mov
fadds
jp
lods
dec
push
lock
in
or
mov
mov
inc
dec
dec
mov
push
popa
setle
out
xorb
mov
lcall
clc
add
repnz
xor
sbb
subl
pushf
jmp
dec
es
out
push
mov
dec
dec
dec
pusha
or
bound
aam
push
repz
ficoml
xor
adc
stos
mov
mov
mov
xor
mov
sbb
fs
inc
sbb
mov
sub
idivl
mov
jb
stos
jl
mov
mov
mov
mov
and
mov
rorb
add
sub
inc
mov
lods
mov
fcmovnbe
inc
pop
push
outsb
in
sub
aad
movsl
insl
sbb
pop
and
and
pop
mov
daa
divb
fucomi
leave
pop
jl
mov
fwait
push
aad
push
mov
xchg
popf
jge
mov
sahf
inc
in
xor
aaa
cmp
vpcmpeqb
test
mov
inc
push
push
push
insb
mov
insb
in
push
adc
push
fdivr
dec
cmp
pop
cld
inc
dec
loop
movsb
loope
lahf
mov
cwtl
jp
popa
lahf
stos
cmp
mov
add
dec
int
jnp
mov
out
sub
and
test
gs
xchg
les
push
lret
popf
cmc
hlt
shlb
fchs
jl
pop
cmp
repz
inc
pop
mov
cmp
pusha
arpl
or
stos
xchg
movsl
mov
inc
mov
mov
pushf
int
cmpsl
pop
sub
sub
outsb
mov
inc
int
adc
add
stos
test
push
cwtl
pop
stos
inc
jecxz
xchg
fsubrl
jle
push
xlat
outsb
lret
test
push
mov
push
dec
adc
fidivs
cld
pop
jmp
or
test
in
test
aam
cmpsb
sub
jle
subl
xchg
add
mov
inc
pop
cmp
xchg
hlt
int
mov
lret
clc
or
loope
sbb
mov
mov
cmp
pop
xor
imul
jecxz
subb
out
scas
rorb
lock
jge
test
aam
daa
popl
adc
push
pop
add
lds
lcall
sbb
es
ret
sub
loope
mov
insl
jmp
stos
test
scas
int3
push
jl
push
mov
arpl
mov
or
inc
out
in
dec
pop
dec
mov
mov
repnz
repnz
jns
out
in
xor
sti
push
or
insl
dec
fwait
push
stos
cmpsl
jecxz
mov
jbe
movsl
stos
inc
sarl
add
movsb
lcall
es
jmp
sbb
setb
xchg
lock
iret
mov
ficomps
pop
cmpsb
push
push
aas
dec
or
cwtl
in
xchg
xor
inc
fistpll
push
xchg
jae
pop
icebp
and
fbld
push
jl
xor
rcrl
sub
pop
rcrl
fsubrs
loop
roll
and
sbb
leave
iret
mov
es
dec
jge
xchg
and
lahf
jl
mov
loop,pn
sub
ret
dec
lcall
cmp
sbb
xor
pop
lock
mov
iret
mov
mov
add
and
leave
mov
mov
xchg
rcrb
enter
std
dec
mov
push
in
inc
lods
in
adc
jg
lea
scas
sbb
xor
xchg
jo
push
aam
mov
jo
movsl
jns
mov
pop
adc
mov
pushl
push
push
loopne
and
inc
jo
test
cmp
mov
cmp
loopne
out
movsb
or
in
adc
adc
and
subb
xor
xchg
dec
addr16
sbb
in
std
lahf
cwtl
dec
sbb
sti
sarb
push
pop
out
push
jp
inc
paddq
jmp
push
mov
push
jge
dec
stos
pop
add
in
xchg
inc
mov
inc
or
subb
jl
mov
sub
int3
push
iret
mov
pop
lods
mov
mov
in
inc
mov
sbb
cmp
or
jg
push
ret
or
lock
mulb
jp
push
hlt
or
xor
fadds
nop
fidivs
or
jl
fimull
jb
mov
imul
jle
push
inc
int
fildl
inc
std
mov
test
sbb
adc
pop
or
mov
imul
pop
inc
cmp
shll
fiadds
mov
or
mov
cwtl
jp
add
mov
xor
cli
gs
ds
fisubl
int3
nop
xchg
stc
pushf
ja
enter
insl
cltd
jle
inc
dec
add
xor
xchg
mov
fisubrl
test
pop
movsb
sub
test
into
mov
cmpsb
mov
cmp
addr16
xor
cmp
imulb
fdivs
jp
icebp
loope
push
sbb
cmp
arpl
cmp
sub
and
mov
hlt
pop
push
push
xchg
into
jp
adc
xchg
test
jne
pusha
push
cwtl
ja
inc
adc
nop
outsl
push
frstor
pop
push
shlb
es
push
fwait
xor
ret
push
jmp
adc
repz
pop
push
shll
pop
ret
out
cld
insl
insb
dec
test
push
adc
jb
mov
rolb
add
pop
xchg
inc
jae
test
mov
or
push
pop
lods
add
mov
xor
inc
mov
mov
bound
lahf
or
cwtl
cltd
xchg
mov
dec
enter
roll
dec
sub
mov
leave
xor
add
mov
jp
je
fldenv
ret
add
es
mov
dec
xlat
mov
pop
lcall
test
rorb
push
cltd
mov
jb
mov
push
loopne
inc
pusha
in
int
stos
cwtl
popf
jae
or
cmpsb
or
fnstenv
in
sub
xchg
lds
xchg
scas
ja
nop
push
pop
jle
pop
fadd
lahf
cmp
dec
sbb
je
test
cmpsl
or
pop
sbb
cmp
adc
fidivrs
addr16
jg
xor
test
aam
sbb
mov
and
lret
addl
add
test
fbstp
sub
push
enter
pushf
dec
mov
imul
cli
mov
jns
adc
testb
cmp
je
movl
pusha
popa
cmpsl
mov
incl
lret
or
ds
mov
repz
lods
hlt
ds
pop
sbb
mov
rcl
lods
mov
addr16
push
out
addb
data16
stc
int3
lcall
push
das
mov
lret
push
or
xor
add
pop
popl
cli
repnz
aas
pop
leave
sbb
push
rorl
sbb
fidivl
loope
lods
movsb
adc
or
cmp
add
decb
pop
fcoms
stos
push
ja
das
data16
ja
int
mov
jne
out
int3
inc
scas
dec
in
dec
xchg
sub
out
in
cmp
mov
in
js
nop
or
in
clc
lret
mov
aaa
add
inc
sbb
jne
scas
shrb
inc
pop
mov
pop
out
or
loopne
mov
mov
call
mov
fbld
movsb
or
cmp
push
mov
movsb
std
mov
xlat
and
xlat
js
scas
lea
rol
out
or
push
push
xchg
pop
cmpl
bswap
dec
lret
dec
jbe
les
testb
stos
pop
movsl
subw
shr
add
xchg
data16
and
movsl
nop
inc
popf
jmp
dec
outsb
pop
bound
mov
in
daa
mov
mov
ljmp
or
xchg
in
dec
xchg
sar
add
enter
inc
out
incl
pop
sahf
repz
fistps
xchg
mov
dec
cmp
mov
out
jne
aam
add
jecxz
jb
sbbl
or
sub
mov
icebp
cmc
call
pop
les
push
enter
mov
aam
pop
or
out
rol
mov
mov
sub
add
das
pop
mov
push
inc
dec
xor
mov
jecxz
std
jmp
or
iret
jnp
sbb
cmp
sahf
pushf
mov
shl
lret
fwait
add
movsb
div
rcrb
ja
shrb
lcall
sbb
fisubs
dec
daa
adc
mov
addr16
mov
and
sti
mov
inc
test
lahf
dec
xchg
stos
xor
popf
sbb
dec
add
pop
incb
xor
imul
movsb
inc
ret
test
jmp
lret
test
push
jns
mov
enter
nop
je
adc
or
inc
das
in
fildl
mov
sub
daa
imul
arpl
mov
dec
dec
or
fsubrs
imul
cli
scas
pushf
xchg
mov
add
cmp
call
pusha
ficoml
adcl
jno
xchg
les
adc
ds
popa
aas
adc
jb
sarl
xchg
std
clc
jecxz
mov
arpl
mov
int3
push
dec
pop
mov
ss
jp
xor
movlps
stos
and
xor
inc
pop
cli
rolb
hlt
test
jp
test
movsl
fucom
mov
outsb
jecxz
sbb
mov
idivb
cltd
jle
sub
mov
mov
sti
loop
or
rcr
sti
movsb
sub
mov
leave
xor
popa
rcrb
test
shr
inc
mov
add
sbb
loop
adc
mov
mov
dec
popf
xchg
push
lock
jmp
mov
or
std
jno
and
and
push
loop
mov
mov
ret
xchg
lea
inc
pop
push
imul
sub
cmp
push
xor
mov
movsb
adc
jl
fs
xchg
fildl
xor
mov
sti
jp
scas
jg
sbbl
mov
jbe
int
dec
jne
cmp
adc
dec
push
in
lcall
push
adc
test
cmc
inc
jnp
xor
test
js
out
mov
jns
fcmovnb
and
mov
sbb
jns
popa
inc
call
sbb
mov
adc
int
sub
dec
mov
xor
nop
mov
lahf
nop
cwtl
add
jecxz
mov
mov
push
aaa
adc
sub
ret
fwait
or
push
nop
mov
or
add
dec
repz
push
insl
imulb
add
sbb
hlt
push
cmp
xchg
inc
xor
stos
iret
lret
shl
pop
cmp
repnz
clc
insb
jp
xchg
insb
aad
mov
inc
mov
jl
or
dec
sbb
icebp
push
dec
add
inc
jb
ds
aam
out
xor
aaa
repz
stc
addr16
outsb
sti
popa
and
sub
leave
or
sbb
jg
lock
idivl
mov
addr16
lahf
jne
insb
popa
movsb
mov
sbb
scas
sub
dec
pushw
scas
inc
mov
xor
js
push
or
mov
rol
fwait
lds
dec
sbb
xor
mov
add
dec
jne
cltd
push
hlt
pop
idivl
jge
repnz
sbb
cmp
dec
cli
ds
mov
mov
loopne
inc
mov
mov
and
and
mov
xchg
mull
addb
mov
jmp
jp
jge
ret
adc
popf
mov
mov
fst
adc
dec
loopne
push
cmp
xchg
xchg
cld
repnz
test
or
push
sbb
gs
andl
fwait
leave
fs
xor
lea
lea
sub
call
enter
mov
movsb
mov
sti
jmp
xchg
cmpsl
pop
xor
nop
fisubrs
adc
les
testb
jge
jge
movsl
loop
mov
loopne
push
sbb
adc
xor
jg
xchg
xor
and
xchg
mov
and
aaa
daa
pop
jo
iret
or
in
mov
or
pop
mov
mov
push
sub
mov
push
pop
mov
rorb
in
repnz
bound
int
mov
test
lock
div
sti
jo
mov
cmpb
jecxz
adc
pop
stos
stos
addr16
adc
ffreep
imul
jns
in
out
adc
and
cmp
sbb
push
pop
add
pop
sarl
ret
fadd
inc
xchg
dec
insb
movsb
jl
xchg
lahf
lret
push
icebp
push
lret
dec
fistpll
addl
push
sub
mov
sbb
push
fnstenv
lret
sahf
xchg
inc
fisubrl
adc
adc
mov
mov
insl
sbb
sbb
das
iret
xlat
int3
movsb
cmp
cltd
mov
mov
bound
das
out
pxor
in
loopne
insl
inc
or
mov
xor
dec
sub
sarb
pop
ffree
loopne
mov
cmp
sti
adc
out
inc
and
movsl
fcmovu
aaa
rcrb
push
jl
fs
mov
gs
iret
sbb
nop
out
push
xchg
mov
mov
iret
std
int3
adc
iret
pop
sbb
mov
dec
pop
into
adc
ds
repnz
rclb
data16
jae
mov
xchg
subl
call
pop
inc
add
push
sahf
inc
sbb
sbb
js
push
pop
int
frstor
push
rorb
cmp
mov
mov
lret
inc
aam
aam
lock
into
xor
enter
sbb
push
push
iret
fildl
cs
push
frstor
testl
and
mov
mov
xor
out
xlat
lods
arpl
jnp
inc
xchg
mov
mov
inc
imul
divl
insb
scas
int
pop
test
mov
dec
addl
icebp
mov
in
or
into
loop
mov
les
lcall
mov
clc
push
mov
mov
sarl
cwtl
mov
shll
cmp
adc
shrb
mov
or
pop
dec
inc
popa
insb
push
push
repnz
mov
in
popf
stc
xchg
es
andl
add
ss
iret
dec
mov
shl
or
sbb
xchg
push
pop
pushf
mov
not
jp
add
pop
adc
pop
stos
loopne
into
loope
cmp
xor
pop
movsl
call
aad
cmpsl
stos
aas
negl
jl
vmwrite
pop
shlb
add
jg
call
in
int
or
push
pop
cmpsl
dec
jne
rcr
pop
adc
jl
push
popf
testb
sarl
mov
push
mov
push
inc
jne
sti
enter
and
loop
sub
cmp
dec
xchg
iret
mov
xor
mov
jecxz
das
push
xchg
loope
dec
in
imul
fldl
xorb
cmpsb
repnz
je
jle
dec
lcall
out
mov
mov
imul
pop
shl
xor
jbe
fldcw
lret
xor
pushf
insl
movsl
xor
popf
movsb
enter
aad
scas
add
jne
xor
sbb
mov
lds
push
mov
push
ficompl
push
push
cmp
aas
aas
arpl
aad
dec
pop
jge
in
jnp
aad
insl
divb
mov
jp
dec
scas
pushl
sbb
add
mov
cmp
add
flds
lret
cmp
ljmp
std
jae
and
push
lret
aad
pop
lds
movl
cmp
in
and
rol
fldt
and
mov
push
loop
mov
dec
sbb
inc
push
pop
ret
sbb
cmp
ljmp
push
xor
frstor
in
xchg
jae
pop
mov
pop
testb
shlb
inc
imul
inc
sub
shr
fmuls
sarl
cs
adc
xor
adc
cmpb
jge
ljmp
or
xchg
pop
fisubs
add
enter
dec
ja
mov
fcompl
daa
daa
imul
jae
pusha
test
push
inc
mov
and
xor
and
arpl
push
cld
cltd
or
add
jbe
xchg
shlb
cmp
pop
aam
mov
ret
rcrb
xchg
dec
cwtl
sub
pop
lcall
mov
lahf
out
mov
mov
sub
push
es
dec
aaa
or
xor
dec
scas
jg
rcr
add
addr16
mov
ljmp
dec
cmpl
mov
inc
xchg
mov
cld
and
lods
mov
dec
mov
data16
or
inc
fs
mov
and
out
rcrb
movsl
adc
and
cld
xchg
sbb
push
inc
enter
mov
bound
and
hlt
jne
ficompl
inc
jnp
sti
mov
and
adc
and
mov
rorb
or
xor
ljmp
test
in
and
cmpl
fisttpl
popf
xlat
test
testb
pop
lcall
pop
repz
jl
orb
cmp
das
push
cli
lock
aas
into
push
sbb
leave
cmp
xorl
addb
mov
std
pop
cld
cmpsl
inc
jno
cli
jno
sbb
sarl
movsb
xorb
and
push
jle
bound
mov
cld
sti
jno
add
or
nop
sti
les
mov
cmp
pop
fstpl
mov
jmp
and
rclb
fimuls
test
call
push
sbbb
loopne
jmp
dec
movsl
ds
fstl
fimuls
fsubrp
pop
xchg
push
pop
test
mov
cmpsl
pop
add
and
movsb
xchg
adc
addb
dec
xchg
adc
xchg
add
roll
jmp
add
mov
ja
and
pop
mov
sti
mov
icebp
test
out
cmc
mov
mov
stos
call
push
int3
pop
adc
icebp
dec
xor
push
inc
test
clc
mov
mov
inc
cmp
divb
sbb
or
xchg
fimuls
sbb
mov
es
and
lret
mov
or
xchg
out
mov
flds
aad
mov
push
cmpsl
in
jo
lock
mov
xor
xchg
int3
adc
je
xchg
push
xchg
xor
dec
insl
data16
push
mov
hlt
xchg
icebp
cmpsl
or
in
sbb
shrl
or
out
clc
pop
and
xor
or
mov
in
xchg
jecxz
mov
bnd
std
out
ja
cmp
sub
fdivrs
jnp
push
pop
sub
xlat
sarb
and
shlb
in
sub
fwait
insb
adc
out
cmp
mov
mov
fidivl
iret
add
and
mov
mov
das
int3
shll
jge
xor
sti
mov
dec
inc
pop
stos
insb
lea
push
in
lcall
pop
stos
lds
mov
test
and
pop
sub
mov
adc
sbb
lock
in
jl
loope
xchg
in
mov
or
cmp
scas
sbb
mov
insb
sbb
push
testl
sub
in
ds
aas
dec
pop
pusha
int3
bound
mov
clc
adcb
and
mov
add
ficompl
mov
fildll
sub
sbb
xor
push
jp
aas
jnp
ds
movsl
mov
cmpsb
inc
sub
adc
data16
jle
lea
fwait
rcl
nop
aad
test
xor
push
lcall
xchg
jecxz
xchg
cmp
mov
loope
cmp
inc
pop
jno
lret
mov
mov
addr16
insl
scas
stc
stos
lods
or
js
movl
xor
cmp
in
cmpsb
or
mov
outsb
repz
pop
mov
mov
in
add
pop
sub
shrl
or
orb
sub
push
jo
fiaddl
adc
or
les
ret
repnz
inc
inc
push
cmp
push
jae
mov
fwait
fwait
jge
adc
mov
sbb
jg
ret
mov
push
push
mull
out
stos
in
add
xor
sub
jnp
test
pop
mov
mov
add
into
pop
xor
pop
dec
mov
jae
sub
pusha
mov
inc
into
cmp
ret
ja
mov
pusha
out
call
addr16
imul
cld
pusha
adc
sub
stos
subb
and
out
xor
sar
int
jl
pop
push
bound
pop
out
es
mov
mov
leave
rorl
cmp
or
xor
xchg
mov
add
add
scas
sbb
mulb
les
sbb
mov
dec
add
pushf
pop
cmc
out
mov
push
add
jbe
movsl
cwtl
clc
pushf
aas
fsts
bound
sti
pushl
xlat
adc
add
mov
mov
push
shl
dec
cvtdq2ps
gs
mov
push
mov
inc
mov
aam
jbe
cmpsl
call
out
add
mov
je
push
mov
out
and
mov
xor
test
inc
adc
fisttpll
or
pop
mov
and
add
pop
jnp
pop
dec
cld
inc
or
scas
repnz
subb
or
sub
aam
mov
movsb
inc
push
or
out
jno
inc
lret
or
jecxz
xor
lods
cmc
sbb
fldl
mov
negb
xchg
sbb
loopne
jmp
and
sub
stos
addr16
dec
mov
sub
inc
sbb
jno
ss
test
bound
lret
sti
jecxz
shlb
subb
pop
adc
sub
pop
push
movb
add
cmp
sar
cltd
imull
addl
data16
jecxz
shll
cs
pop
out
xchg
push
int3
testl
mov
nop
pushl
ss
repnz
fidivl
lock
mov
or
pop
push
out
mov
fstpl
addl
push
adc
pop
and
stos
js
les
out
xor
insb
xchg
mov
insb
ljmp
jae
mov
sub
out
jl
sub
sub
push
imul
sub
cmp
mov
xor
xchg
std
or
cmc
incl
dec
leave
iret
into
pop
loop
repz
test
mov
cmp
dec
stos
lock
daa
cmp
jge
mov
lret
dec
xchg
mov
sub
cmp
jle
push
imul
fsubrl
pop
cmc
les
xchg
subb
loope,pt
jmp
mov
mov
movsl
movsb
movsl
daa
divl
addr16
push
arpl
and
scas
ret
cmpsb
dec
je
cmp
rorb
leave
and
outsb
mov
mov
lcall
lret
mov
cltd
rol
adc
sbb
push
jg
pop
or
mov
test
mov
mov
add
jbe
sbb
cmp
call
or
bound
je
cmpsb
loopne
jge
mov
fwait
inc
and
dec
enter
lods
call
jb
out
fsubr
xor
sub
mov
mov
leave
lock
push
push
push
push
data16
cmp
movsb
jl
sti
xchg
mov
cli
cs
fcoms
sbb
rorl
cmc
push
in
scas
sub
test
lock
push
je
pop
das
xchg
inc
pop
jge
push
jecxz
rorb
lret
cmp
shl
cmp
cld
xchg
xchg
je
stos
loope
in
add
psllw
pop
ja
push
pop
das
jb
out
icebp
cs
lahf
flds
or
add
dec
pop
out
aas
ljmp
cmp
daa
fstl
sub
outsl
fs
dec
push
faddl
jns
loope
jmp
xchg
sahf
arpl
repz
icebp
rol
cmc
jmp
or
mov
cli
mov
mov
mov
aas
test
dec
xor
sub
sti
out
imul
mov
jb
xorl
add
lret
repnz
sub
jp
inc
xchg
filds
pop
cmp
outsl
fwait
std
insl
mov
std
sbb
mov
inc
jno
pop
cmp
bsr
jge
fidivs
cmp
je
pop
stc
adc
jle
data16
pop
inc
mov
or
movsl
push
movsl
cli
pop
mov
lea
loopne
mov
jno
xor
out
idivb
mov
jge
lods
pop
sub
sbb
pushf
push
nop
mov
cwtl
test
push
and
push
aad
add
test
icebp
mov
cld
cwtl
cld
xor
mov
mov
in
ret
jge
adc
cmp
lods
lcall
xchg
loop
dec
scas
push
jl
pop
jae
push
scas
and
jb
mov
test
mov
and
mov
popa
adc
inc
add
rolb
fdivs
mov
arpl
pop
in
add
mov
inc
mov
inc
jecxz
das
fdivrl
ret
aas
inc
jmp
frstor
sbb
jbe
inc
mov
mov
mov
mov
xchg
or
push
aam
cmpsl
pushf
jp
into
shll
cmpsb
push
scas
push
xchg
movsb
xor
and
mov
pop
push
cmp
adc
or
scas
stc
xor
nop
lods
jb
push
pop
mov
cmpsl
call
mov
lock
fdivr
fcom
stos
fstpl
mov
or
pop
stos
scas
or
testl
stos
inc
es
lret
cli
push
mov
add
xchg
outsl
xor
clc
push
mov
push
repnz
add
movsb
repnz
leave
lahf
xor
stc
xchg
nop
sbbl
lods
xchg
inc
mov
inc
cwtl
stos
outsb
out
push
stos
mov
lcall
inc
jmp
loopne
mov
aam
xorl
and
cltd
pop
mov
jecxz
into
pusha
es
xor
xchg
mov
ficoml
push
adc
test
sub
mov
pop
pusha
jg
jmp
lea
xor
pop
stos
cld
sbb
loop
ror
adc
int
fldl
mov
aas
add
mov
jp
ja
movsl
fcoml
repnz
fldenv
mov
cs
hlt
or
pop
out
loope
xor
cmp
mov
out
stos
pop
lcall
push
add
mov
loope
mov
add
mov
out
xor
xor
or
pusha
xchg
jp
jno
dec
jle
jno
inc
sub
adc
jnp
lcall
pushf
hlt
cmp
mov
stos
xor
push
call
xlat
xchg
cmp
mov
jmp
or
mov
jl
enter
push
push
cltd
adc
sub
pop
iret
jp
rcrb
push
sub
dec
movsl
fstps
add
and
adc
add
aam
pop
fstl
fwait
nop
ja
jg
aad
inc
out
ret
xor
pop
inc
mov
pop
mov
adc
inc
jbe
sub
adc
dec
loope
sbbb
les
ss
data16
and
test
mov
inc
out
lods
sbbb
adc
shl
mov
jae
mov
sbb
punpckhwd
adc
pop
std
je
cmc
sub
incl
xchg
xchg
xchg
mov
mov
mov
jge
pop
daa
xor
pop
fsubrs
leave
fistl
sbb
sbb
cvttps2pi
mov
mov
in
test
push
jae
push
or
xchg
push
aad
push
jle
xchg
in
and
jge
nop
xchg
je
dec
push
jno
lret
add
insb
sahf
mov
add
sahf
shl
xorb
adc
sub
xchg
pop
jae,pt
daa
inc
das
mov
pop
fistl
add
ret
arpl
xor
lahf
cmp
xor
sarb
adc
sbb
ret
testb
xchg
call
mov
popa
ja
in
rcrl
sub
fcoml
sbb
inc
add
mov
cmp
ds
lea
adc
daa
and
pop
fnsave
pop
inc
mov
jmp
in
div
jno
sbb
ret
or
pop
mov
int
push
mov
int
jnp
sti
nop
jl
pushl
stos
mov
sub
xchg
fcoml
rcrb
mov
jge
lret
fnstsw
adc
inc
loop
dec
out
ss
arpl
das
dec
rcrb
cwtl
push
sub
stc
or
dec
mov
fs
and
pop
aas
aad
lret
or
loope
jp
sbb
jl
gs
adc
pop
lcall
je
jno
pop
jge
sub
xor
pusha
xor
jmp
xorb
inc
inc
cmp
ljmp
mov
or
sub
imul
ret
cltd
cmpsb
jecxz
sub
idivl
jmp
cmp
jnp
or
icebp
cwtl
shl
inc
dec
add
push
stos
sub
or
or
inc
jbe
neg
jnp
pusha
das
or
push
and
insl
push
push
rcrl
push
cmpsb
push
push
es
mov
adc
loope
pop
push
test
imull
shl
aam
jns
and
inc
or
sbb
and
mov
outsl
mov
fildl
jecxz
mov
mov
test
fbld
out
jns
dec
push
sbb
cmp
sub
pushf
push
mov
sti
add
inc
jnp
mov
mov
leave
or
insl
pop
not
sub
mov
inc
ja
push
repz
arpl
xchg
jo
lret
rcr
sbb
xor
mov
mov
mov
xor
mov
cld
mov
imul
jmp
rclb
push
jb
ja
sbb
movsb
out
in
in
mov
and
sbb
xor
std
push
in
cmp
jl
sub
sub
incb
mov
adc
je
and
out
rcl
jle
mov
jge
cld
lea
mov
adc
dec
push
mov
shrb
das
push
inc
lcall
xchg
ja
jge
mov
and
ficompl
dec
imul
cmp
loope
dec
adc
push
es
lret
dec
cmc
pop
aas
push
daa
inc
jecxz
enter
and
filds
xor
lahf
aam
outsb
dec
add
sbb
and
out
mov
sub
mov
shrl
jo
cmp
lcall
and
iret
push
adc
jp
rclb
mov
cmp
insl
mov
scas
insb
mov
adc
dec
jge
adc
mov
or
out
in
pop
xor
jp
pop
sub
or
pop
xchg
fbld
je
and
cmp
mov
dec
sbb
out
fsubl
sub
mov
push
test
or
dec
push
ljmp
bound
or
xor
test
out
lds
push
insb
inc
cmpb
mov
pop
lret
sub
stos
mov
push
stc
sar
je
or
or
sarb
cmp
jno
mov
xchg
int3
pminsw
sahf
ja
sbbb
dec
or
testb
lahf
fsts
ret
jo
dec
adc
adc
cld
sbb
decb
adc
xor
and
in
sbb
push
js
cmpsl
mov
mov
cmp
out
pushf
cld
dec
aaa
pop
xchg
aam
cmp
sbb
and
adc
add
pop
xchg
pop
adc
and
adc
lret
mov
es
mov
fdivs
fisubs
hlt
xor
testl
daa
mov
xchg
add
sub
add
int
jo
and
fisttpll
jp
mov
sbb
or
dec
insb
xchg
int
dec
popf
push
lahf
adc
dec
out
pushf
paddd
inc
mov
outsl
xchg
hlt
stos
mov
dec
xor
testb
stc
mov
mov
das
mov
in
pop
mov
js
clc
jg
gs
xchg
pop
adc
lahf
dec
mov
dec
insl
cld
and
sbb
or
into
dec
pop
jp
or
push
jl
adc
int3
pop
lds
dec
in
push
push
nop
or
lock
xchg
out
sub
push
dec
sbbl
fmull
fnstsw
in
or
pop
rcrl
xor
dec
pop
jp
int3
dec
and
pop
pusha
imul
inc
add
cld
cmc
cmp
push
xchg
xorl
scas
popa
repnz
setno
and
pop
mov
and
idiv
gs
mov
test
mov
push
sahf
rol
shll
inc
sahf
fbstp
fnsave
or
dec
stc
rolb
fisttpl
sbb
pop
test
dec
jae
stos
cmp
ficomps
mov
adc
xorl
cmovo
jge
adc
cld
in
add
push
sbb
adc
sbb
pop
mov
cmc
pop
adc
pusha
mull
insl
add
movsl
imul
jecxz
insb
xchg
popa
xchg
stos
cmp
test
push
sbb
outsl
or
jb
es
movsl
dec
cmp
fst
popf
nop
loop
ds
test
dec
ffreep
xor
outsb
scas
jle
nop
jo
lcall
pop
mov
mov
rolb
outsb
xchg
pop
imul
xor
mov
test
call
pop
dec
or
ja
push
out
pop
lret
xor
insl
xchg
or
sub
mov
fdivs
jge
test
cmpb
call
mov
shll
or
add
inc
and
add
cltd
xor
lret
lds
lret
adc
fwait
mov
out
icebp
cltd
or
push
pop
rorb
shll
jno
add
inc
insb
jecxz
pop
mov
fsubl
pop
adc
sbb
cmp
dec
popa
push
pop
jbe
sarb
push
cmc
mov
dec
jb
ljmp
jge
ljmp
fdivl
sar
xchg
mov
popf
repnz
and
fwait
inc
mov
adc
push
or
enter
outsl
rcrb
jne
dec
data16
jp
push
es
jecxz
cmp
jmp
sarb
push
xchg
mov
cwtl
mov
js
flds
sub
mov
mov
and
xchg
or
xchg
js
mov
repz
cwtl
nop
jne
push
dec
lods
pop
int
lds
loopne
xor
push
repnz
xor
inc
sbb
aam
icebp
pop
xlat
enter
lret
out
fsubl
je
sub
lods
mov
sbb
leave
push
les
mov
lret
dec
jecxz
jb
dec
add
xchg
and
in
lcall
fcomps
inc
push
mov
mov
pop
sbb
mov
add
sub
fcoml
jnp
and
fwait
xor
push
xor
xor
add
divb
aad
shrl
push
dec
pop
or
xchg
ss
and
mov
sarl
test
mov
inc
push
pop
inc
jge
addr16
fcomp
mov
shll
scas
dec
add
adcb
dec
inc
call
fiadds
and
mov
inc
out
cmp
je
xor
add
shlb
in
xor
pop
in
and
inc
aas
xchg
add
sub
sbbb
test
and
jb
inc
aad
sbb
imul
mov
insb
orl
inc
popf
in
dec
add
les
sti
cwtl
cwtl
pop
mov
add
xchg
pop
inc
pop
cltd
aaa
mov
fcmove
jne
inc
fs
xchg
xchg
cmpsl
cs
outsb
bound
xchg
xor
loope
pop
ja
push
shrb
imul
arpl
ss
adc
xor
in
lea
xchg
inc
scas
fnstenv
int3
sbb
mov
mov
adc
outsl
mov
or
jae
mov
dec
out
orl
cwtl
out
insl
mov
movsl
scas
mov
in
dec
push
adcl
mov
sbb
dec
mov
repz
xchg
mov
jecxz
stos
fwait
sub
sbb
ljmp
andb
push
loopne
inc
sahf
out
add
jnp
bound
ljmp
cmp
jg
scas
sub
popa
pushf
mov
mov
shll
jg
mov
pop
cli
mov
ds
pop
pop
popa
and
and
scas
dec
jmp
lods
adc
mov
sbb
xchg
cmp
fcomps
mov
mov
xchg
dec
add
pop
cmp
mov
mov
stc
add
and
sub
call
fmul
cwtl
xor
xchg
divl
dec
bnd
fmull
cmp
fbld
stos
sti
flds
lea
sbb
pop
inc
sbb
jmp
bound
popa
or
dec
mov
incl
shrl
int
jge
and
roll
push
ret
gs
xor
xor
rcr
sbb
inc
enter
sub
adc
loope
mov
movsb
mov
scas
into
pop
xlat
dec
ret
xor
dec
or
mov
stc
mov
sub
sub
inc
adcl
imul
in
mov
dec
outsb
mov
or
fidivl
cltd
int3
xchg
dec
mov
lods
shrb
or
testl
out
aas
in
inc
data16
and
inc
mov
std
mov
mov
jmp
adc
cmp
out
xor
lds
scas
imul
ja
sub
adc
sub
repz
fs
rclb
notl
call
das
mov
adc
lahf
mov
lcall
iret
push
clc
sti
in
adc
cmp
data16
push
aaa
adc
movsl
scas
scas
mov
pop
xchg
lret
dec
push
pop
sbb
fstps
add
lret
ljmp
cmp
sbb
mov
jnp
sub
das
bound
test
shr
xor
hlt
test
mov
or
ret
hlt
adc
int3
xchg
add
xor
js
sub
stc
xchg
or
les
mov
into
xchg
call
xchg
insb
in
and
mov
in
mov
sbb
or
or
jle
enter
fistpl
push
xor
les
xor
hlt
andb
mov
popl
fld
fnstenv
int3
add
cmc
xlat
ret
sbb
lods
out
jb
or
shl
pop
sbb
or
mov
sub
or
sub
adc
push
test
scas
push
jp
dec
mov
out
in
inc
orl
call
in
mov
inc
loop
pop
cmp
das
xor
xor
push
mov
mov
jbe
jbe
xchg
inc
dec
jmp
jae
and
cmpsl
into
idivb
pop
mov
mov
inc
call
adc
stos
mov
aaa
ljmp
iret
ljmp
in
mov
xlat
sbb
jbe
mov
in
cmpsl
sbb
cli
jp
fisubl
clc
jp
out
jne
popa
rclb
les
das
test
dec
imul
jb
pop
rcll
inc
xor
mov
daa
mov
gs
movsl
dec
aam
stc
enter
rol
fcoms
jg
fstpt
fisubrl
lahf
or
cwtl
lret
xor
loopne
push
lds
add
pop
adc
jmp
vmovupd
xchg
or
add
lea
dec
test
add
mov
in
xor
ficomps
lcall
sub
andl
mov
jge
fldcw
mov
lea
cmc
xchg
jb
push
jmp
mov
pmulhw
js
lret
arpl
imulb
insl
addr16
pop
call
les
test
and
cmp
rep
mov
cmp
frstor
mov
mov
mov
xor
pop
imul
pop
sti
outsl
scas
sub
jns
shll
fmuls
sub
loope
sbb
jnp
mov
orb
and
out
flds
push
js
cmc
sahf
mov
jecxz
push
jnp
xor
nop
add
js
push
sub
cmp
vpunpckhqdq
sbb
pop
inc
pop
jnp
jae
loop
lret
pop
mov
mov
test
xchg
dec
xchg
lahf
cmpsl
paddw
xor
test
in
jecxz
jns
jne
cmpsb
movsl
xchg
mov
cmp
addr16
push
xchg
call
repnz
inc
mov
add
dec
addr16
sbb
adc
dec
lds
or
xor
mov
mov
shlb
sbb
das
adc
xor
in
cmc
lods
push
daa
cli
outsl
add
fnsave
sbb
mov
sbb
jecxz
jnp
jns
xor
subb
mov
pop
mov
mov
es
sub
pop
das
dec
lds
test
out
cs
out
adc
out
inc
ja
arpl
push
inc
adc
adc
insl
add
les
jnp
jmp
insb
js
cmc
dec
jno
in
dec
out
loope
data16
cld
cmp
mov
repnz
sbb
xorb
xchg
inc
stos
jmp
aaa
mov
xor
and
sbb
inc
ret
jmp
mov
fisubrl
imul
lods
popa
mov
sarb
xor
xor
lahf
pushf
lds
imul
fsubs
pop
dec
sbb
pop
sbb
mov
ret
mov
sbb
and
push
cld
mov
cmpsb
jno
icebp
inc
faddp
ja
aaa
xchg
lea
mov
int
mov
jbe
mov
inc
xlat
insl
add
mov
in
jecxz
fists
mov
testl
cmp
nop
pop
push
sbb
push
add
ja
mov
arpl
mov
inc
push
push
or
cmp
loopne
imul
or
scas
add
push
mov
rcrl
aas
cmp
sbb
popa
insl
dec
inc
adc
xor
pop
repnz
popa
test
push
je
xchg
inc
out
jo
shll
adc
or
sti
std
in
pop
cmp
mov
stc
sub
pop
jns
pop
test
cmp
icebp
aaa
fldenv
dec
in
add
shll
loopne
pop
pushf
imul
pop
ljmp
and
and
sbb
and
dec
jno
mov
dec
adc
mov
and
pop
clc
push
or
lock
notl
int
mov
xchg
insl
inc
mov
leave
or
mov
and
ja
std
data16
int3
push
scas
out
push
xchg
jmp
clc
push
rcr
subl
dec
inc
movsb
cmp
mov
out
xor
sub
mov
mov
sbb
jp
lods
xor
gs
loop
rcll
push
adc
mov
mov
iret
js
xchg
push
rorb
dec
or
enter
adc
sub
icebp
mov
lods
push
xor
out
or
fmuls
jmp
fistpll
int3
fdivrl
jno
push
sub
mov
bound
xchg
lea
mov
push
outsl
and
cmp
test
int
call
and
push
mov
xor
clc
call
pop
push
add
cmpsb
push
ret
stos
ret
hlt
inc
jno
pop
out
xor
and
cwtl
xor
pop
pushf
sub
ds
test
in
daa
stos
in
out
mov
insl
inc
xor
daa
and
pop
outsl
insb
out
inc
sub
addr16
nop
mov
repz
pop
push
push
fsub
mov
setl
sahf
ljmp
dec
or
shr
mov
enter
jmp
test
shlb
sbb
mov
enter
dec
sbb
sbb
mov
std
jb
arpl
xchg
push
pop
cmp
sbb
xchg
daa
xor
dec
dec
shrb
mov
aas
inc
mov
into
sti
mov
mov
mov
ljmp
and
push
nop
faddl
ljmp
jp
cvtps2pi
in
push
jne
pop
sbb
push
imulb
into
dec
sbb
call
cmp
stos
sbb
push
into
aam
inc
jne
sbb
iret
lds
mov
lods
bound
cmp
jbe
dec
xlat
das
xor
xchg
lea
pusha
cli
xchg
pop
xor
test
hlt
push
and
sti
mov
xor
mov
xor
fcoms
add
mov
sbb
inc
imul
pushf
push
jne
jle
pop
jle
ficoms
movsl
out
mov
push
call
add
aad
jae
dec
mov
inc
mov
iret
test
or
pop
lea
in
jno
jnp
imul
xor
enter
inc
loope
xor
sub
push
mov
lret
cld
cmc
inc
jbe
mov
cltd
fstps
aaa
jae
jo
popa
mov
jnp
mov
xor
or
adc
iret
sbb
aam
xlat
xor
repz
leave
lock
je
lea
into
mov
jno
addb
loope
or
mov
push
sbb
les
in
xchg
push
or
sbb
repnz
bound
js
mov
mov
movsl
inc
std
sub
mov
cltd
aas
add
add
sub
aas
stos
das
es
iret
inc
jae
insl
pop
outsl
cmp
aam
out
insb
jge
movsl
push
cwtl
gs
xchg
mov
add
rolb
outsl
cmp
or
or
pop
rcl
sub
test
xchg
or
loope
xchg
mov
iret
scas
and
jae
repnz
fst
jge
sahf
call
mov
xlat
call
ret
cmp
or
pop
loop
scas
pusha
push
or
mov
arpl
inc
cmp
mov
std
mov
movb
es
sbb
aaa
add
out
xchg
in
add
lods
sbb
adc
xchg
stos
jge
das
push
mov
into
push
pop
and
lds
loop
xchg
sarb
aad
add
xor
lahf
lcall
stos
insl
xor
and
push
push
ret
inc
cli
mov
pop
scas
sahf
in
mov
xorl
mov
mov
pop
pop
call
or
mov
pusha
mov
into
mov
dec
push
cmp
call
xchg
mov
jle
rcrl
mov
jnp
cmpsl
add
imul
int
cli
mov
cs
sahf
adc
stos
test
cmp
movsl
jecxz
pop
push
and
mov
jb
pop
jge
jle
cmp
push
in
adc
outsl
cmp
xor
jnp
arpl
jl
sub
popa
pop
insb
cmp
ret
and
sti
mov
jb
aaa
enter
lcall
repz
out
pop
mov
pushf
movsl
push
sbb
sbb
mov
jno
jmp
scas
jae
aas
xor
lahf
lret
dec
out
es
xchg
jl
loopne
rorb
int
and
jle
and
sbb
pop
mov
popa
repnz
lock
adc
imul
frstor
sub
cmp
add
xor
imul
pop
inc
fbld
aad
fninit
jb
add
jmp
inc
mov
jnp
push
adc
mov
xchg
stc
lcall
cld
dec
mov
or
clc
adc
adc
sub
and
scas
pop
mov
fs
mov
hlt
and
sub
in
out
ja
lods
faddl
cltd
ljmp
iret
mov
std
test
push
cmp
jle
stos
push
or
mov
ljmp
pop
adc
movsb
cmp
push
das
fnstcw
bnd
and
lret
xchg
lea
mov
dec
js
dec
or
inc
bound
push
inc
adc
mov
push
sub
aas
subl
ja
nop
push
sti
sahf
jns
mov
loop
lds
or
data16
mov
sub
sub
scas
xor
cmc
cli
pop
ss
test
mov
lahf
xor
mov
int3
in
jo
push
stos
mov
mov
mov
mov
jbe
dec
xchg
push
cmp
sahf
mov
popf
stos
dec
inc
adc
out
les
jne
add
addb
ja
aas
lock
push
xchg
std
insl
test
push
mov
mov
mov
test
repz
mov
dec
sbb
xchg
mov
xchg
lods
push
out
rcrl
and
cmpsl
sub
out
pop
jmp
pop
hlt
and
xor
push
dec
andb
and
fwait
enter
movsb
dec
loop
pop
xchg
cltd
clc
add
xchg
push
ret
fdivrl
xor
loopne
adc
cwtl
pop
pop
rcrl
daa
mov
mov
jbe
dec
scas
hlt
mov
scas
inc
add
mov
data16
rolb
push
inc
addr16
daa
xor
jmp
testl
push
xor
stos
push
int
adc
stc
dec
data16
mov
mov
adc
or
inc
dec
cld
rolb
mov
jge
imul
cmp
inc
mov
cltd
push
mov
mov
iret
push
mov
adc
in
sbb
mov
add
sub
push
gs
push
mov
lret
fsubrp
jb
add
push
inc
mov
add
in
xchg
lret
ds
push
mov
mov
mov
push
add
cld
jmp
sub
dec
clc
fwait
mov
loope
or
fsubrp
xor
testl
xchg
in
clc
cmp
push
inc
add
loopne
loop
xchg
test
imull
stos
fcomi
enter
enter
repz
fldl
popa
and
in
or
gs
fidivl
hlt
in
xchg
fisttpll
cmp
notl
test
xchg
call
rcl
cli
add
adcb
dec
fnstsw
jmp
cmc
arpl
sub
pop
fdivl
test
mov
dec
add
sub
mov
cltd
push
fisttpll
cmpsl
inc
xlat
fcoml
mov
cltd
jnp
lea
movsl
shlb
lods
scas
push
cwtl
cmp
aas
sbb
sub
xor
mov
fs
ljmp
cmp
xchg
or
sub
mov
push
xor
testl
in
mov
mov
lods
mov
dec
xchg
ja
and
int
push
test
push
sub
jmp
in
cli
xchg
or
cmp
fistps
icebp
aaa
rcrb
out
mov
xchg
sarl
aad
mov
jno
mov
in
dec
aad
add
mov
sbb
rorl
test
stos
rcl
mov
cmpsl
push
sub
lds
push
xchg
notl
mov
imul
or
fdivr
lea
pop
negl
mov
fstpl
test
mov
dec
iret
fs
push
aam
inc
push
jge
xlat
mov
xchg
xor
adc
pop
ss
add
and
lret
mov
insl
out
sbb
mov
pop
xor
sbb
aad
rcrb
mov
das
lret
imul
push
mov
ret
jge
js
rorb
inc
rcrb
bound
insl
iret
xchg
and
sbb
cmpsb
mov
andb
test
test
fwait
push
lahf
outsl
sahf
cmp
sub
add
sbb
fstl
les
xchg
sub
xchg
mov
sbb
or
xchg
cltd
jge
add
or
sub
push
leave
mov
mov
sahf
jne
fmull
popf
leave
mov
sub
pmaddwd
xchg
mov
mov
push
inc
dec
outsb
gs
gs
pop
lea
mov
test
dec
clc
fcmovbe
fwait
repz
mov
in
mov
test
sbb
adc
cltd
ja
or
lods
lods
testl
jp
sub
sub
repz
outsl
hlt
xchg
xchg
jo
dec
mul
jno
and
int
cld
lods
push
in
mov
lds
fbld
xor
loop
xchg
or
dec
sbb
push
lea
jb
bound
lcall
jnp
and
push
mov
and
iret
xchg
hlt
aam
outsl
inc
jbe
lret
pop
dec
xchg
or
dec
wbinvd
test
ljmp
insb
cwtl
dec
push
push
add
shl
inc
ja
cs
jmp
jle
mov
adc
mov
icebp
bound
aaa
orb
mov
aaa
bound
jnp
mov
das
in
cli
mov
sti
mov
mov
pop
insl
mov
int
mov
push
dec
loope
mov
sub
in
mov
mov
jno
insb
xor
pop
push
xlat
int3
out
movsb
stos
lock
out
into
or
xor
daa
test
xchg
mov
scas
sbb
mov
pushf
clc
push
jg
jno
test
or
pop
add
enter
decl
jge
jl
jp
arpl
mov
push
pop
cmp
movsl
fistps
push
decl
xor
fisubs
pop
or
mov
xchg
fisttps
adc
xchg
jge
shrl
xchg
mov
xor
mov
das
into
ss
jnp
and
pop
rorb
push
mov
in
mov
lods
jmp
jns
scas
inc
jle
mov
sbb
dec
pop
int3
ljmp
cmp
ja
fisttps
scas
out
pop
jp
pop
out
pop
clc
mov
cmp
iret
cmp
shrl
nop
push
out
mov
into
pop
ljmp
sub
and
cld
or
and
mov
hlt
iret
push
cmp
dec
stc
negl
out
fdiv
ffreep
jo
mov
shl
inc
test
cwtl
std
adc
icebp
sbb
jg
fwait
dec
or
dec
dec
adc
test
adc
sahf
mov
out
stos
cmpsb
je
jecxz
lods
xchg
dec
arpl
cmp
repz
stos
xchg
unpckhps
aaa
mov
into
loope
mull
repnz
push
test
lea
fcmovne
pop
inc
enter
jbe
loope
pop
or
push
js
loope
clc
std
cwtl
sub
pop
add
subl
inc
pusha
jecxz
cltd
xchg
ljmp
fdiv
je
hlt
fwait
and
push
mov
and
test
scas
pop
je
or
lea
insl
mov
cld
das
mov
lret
adcl
inc
fs
aad
push
or
mov
xchg
xchg
cmp
iret
add
movsb
push
and
das
mov
mov
mov
xchg
sub
repz
sbb
mov
and
or
and
xchg
das
inc
mov
adc
push
ret
jmp
xchg
test
push
in
stc
jmp
inc
or
cmc
addr16
pop
ja
dec
mov
push
aam
adc
inc
sub
and
js
fisubrs
jmp
in
jne
test
arpl
inc
lret
arpl
cmp
repnz
repnz
jbe
out
cs
mov
decb
push
jne
sub
stos
into
pop
xchg
jp
in
rolb
lock
std
jns
iret
in
scas
sbb
inc
jl
mov
lods
push
dec
adc
jno
lods
cmp
and
xchg
imull
rorl
lahf
adc
pop
push
xlat
cmc
test
in
mov
push
or
into
shrb
jbe
cmpl
push
and
xchg
loop
mov
sbb
lds
inc
arpl
push
loope
int3
pandn
addr16
lret
xor
sub
sahf
cmp
cwtl
mov
push
nop
lock
push
enter
and
add
push
mov
call
fisttpl
sbb
push
es
mov
pop
xchg
push
cli
popf
imul
cld
fnstsw
fistpll
movsb
xchg
jno
xchg
jns
mov
test
subl
dec
les
enter
rcll
xlat
and
mov
jno
hlt
test
mov
mov
mov
pop
jno
cld
dec
imul
or
fdiv
imul
mov
pop
test
push
cmpsb
mov
mov
xchg
xor
ss
sbb
into
mov
add
movsb
insb
ret
ret
fdivrl
sarb
cwtl
out
dec
add
dec
cmp
push
aad
daa
mov
inc
insl
inc
addb
mov
cmp
das
mov
std
sti
sti
in
sub
or
mov
out
mov
out
and
andb
dec
aas
nop
inc
sti
push
clc
jp
dec
jno
jp
mov
imul
out
mov
xchg
mov
and
out
rorb
mov
outsb
jbe
xchg
inc
addr16
xchg
xchg
and
sti
jmp
ret
mov
fisttpl
lahf
sub
and
mov
sahf
mov
fisubl
fwait
xor
imul
jmp
repnz
lahf
xchg
cmp
fdivrp
test
out
stos
inc
pop
imul
jle
add
sbb
cmp
pop
push
dec
gs
lea
scas
jae
pop
xchg
mov
jb
xchg
movsb
nop
mov
iret
pusha
inc
push
mov
ja
or
add
dec
les
pop
in
push
imul
xchg
jns
loope
aaa
lret
mov
aam
or
in
pop
addr16
fstl
cmp
lret
pop
push
scas
xchg
sahf
aaa
mov
or
xchg
mov
mov
or
cmpsl
fisttps
mov
push
jl
pop
pop
aaa
loop
inc
call
aad
ror
inc
mov
and
daa
rorl
jge
cli
cmp
stos
cmp
repz
push
dec
inc
mov
dec
xor
and
pop
sti
pop
pop
into
ja
repnz
xchg
rolb
xchg
stc
ss
cli
cmp
push
stos
fisttpll
push
inc
shll
mov
push
inc
or
popa
add
sbb
in
xor
jecxz
popa
test
int3
mov
cmp
cld
roll
jmp
shrl
dec
ds
dec
mov
clc
ljmp
add
xor
sub
or
and
ret
cmp
add
mov
lock
and
mov
jae
std
xchg
movsl
scas
outsb
fisubl
mov
mov
adc
negl
sub
dec
sub
popa
mulb
sbb
fs
sahf
mov
hlt
push
or
popf
test
clc
lea
popa
push
mov
test
sub
pop
inc
xchg
sub
or
lods
inc
xor
xchg
hlt
jb
xor
lock
pop
int
cli
add
push
test
stos
mov
mov
cld
push
iret
mov
mov
aad
jg
pop
mov
sbb
sbb
pop
or
gs
mov
sbb
lahf
hlt
pop
rcll
sub
test
or
lahf
dec
xchg
gs
xor
sbb
imul
sbb
and
add
jecxz
pop
pop
dec
cmpsl
popf
popa
jbe
cmp
xor
push
popa
repz
js
sub
jno
pop
sbb
mov
stos
les
inc
hlt
in
push
xchg
call
shr
sbb
mov
addr16
sbb
jmp
insl
add
popa
sbb
lret
or
pop
in
cmpsl
imul
shll
mov
loopne
lret
jnp
push
push
pop
loope
pop
or
int
adc
mov
mov
sub
mov
pop
mov
iret
pop
lea
in
nop
movsb
outsl
and
repz
jl
lea
xor
pop
add
daa
or
enter
add
stc
dec
or
mov
cmc
shrb
add
ss
aad
cmp
adc
push
adc
out
add
dec
cs
lahf
aam
inc
sub
rclb
outsl
mov
mov
sarb
stos
jnp
mov
pop
sbb
xchg
cmp
xchg
pop
dec
lock
jns
cmp
mov
jns
cmp
dec
aad
mov
xor
xchg
rdtsc
cld
das
rorb
incb
pop
sub
shlb
mov
into
cli
cltd
push
sbb
popa
xchg
int3
fiaddl
jbe
call
lahf
es
hlt
fstpt
out
dec
fistpll
or
leave
sub
je
test
pop
mov
push
in
xlat
add
push
cwtl
mov
cs
mov
xchg
xchg
daa
inc
xchg
idivb
insl
xor
mov
xchg
arpl
movsb
scas
data16
push
cmp
hlt
clc
pavgw
or
mov
daa
outsl
outsl
adc
push
mov
and
not
or
pop
push
pusha
mov
mov
jecxz
mov
lock
fst
mov
or
jno
jp
jmp
cmp
mov
repz
mov
aaa
jbe
jle
adc
push
outsl
xchg
aad
cmpb
out
dec
mov
cmp
mov
push
movsl
cmove
jmp
xchg
jo
out
and
inc
cs
mov
jb
xchg
jle
jp
fdivrs
movsb
enter
sbb
stc
push
and
dec
pop
jb
or
inc
and
sbb
fldl
enter
dec
pop
mov
add
inc
dec
int3
mov
scas
pushl
pop
bnd
xchg
in
aam
add
push
jo
or
dec
jae
std
sarb
sbb
mov
std
push
idivl
sbb
sbb
out
and
xchg
fxch
sbb
jbe
sahf
fsubrl
jl
pop
negl
jg
loop
sti
lret
cmp
add
out
icebp
test
inc
sub
pop
dec
imul
push
popa
sub
or
ret
inc
hlt
push
push
jbe
aaa
add
imul
inc
jge
jno
out
pop
mov
scas
adc
xor
repz
push
mov
jne
or
jmp
dec
das
iret
cltd
adc
sbb
fucom
mov
lahf
add
sub
repz
pop
push
divb
stos
mov
pop
dec
dec
push
xor
jmp
mov
mov
add
inc
in
lds
mov
mov
push
jns
shll
inc
data16
lret
out
cmp
sub
data16
shll
mov
aad
scas
scas
in
cli
lods
and
aaa
or
push
into
pop
jmp
jecxz
fiadds
xchg
cmp
mov
jmp
add
adcb
stos
cmp
jns
roll
movsl
inc
in
mov
jno
add
xor
mov
fs
dec
or
daa
out
add
xlat
push
dec
mov
pop
rcrl
adc
imul
pop
sbb
xchg
and
movsl
sub
inc
out
xor
xor
sub
jecxz
pop
loope
fidivs
in
fcomps
test
xchg
mov
mov
insl
lea
loope
in
inc
ret
popa
dec
mov
rep
add
mov
cmp
mov
stos
xchg
cmp
xlat
mov
inc
mov
pop
ret
daa
ja
gs
adc
sar
pusha
insl
ret
jnp
int
sti
shll
icebp
stc
call
pop
mov
mov
movsl
or
xchg
pop
jnp
fcoml
pusha
dec
push
rcl
xchg
jnp
pop
in
jo
fpatan
in
dec
push
into
movsl
js
std
mov
adc
lret
xor
es
cli
iret
push
adcl
mov
js
pop
nop
dec
insb
mov
mov
scas
pop
aad
xchg
data16
add
lcall
mov
xor
push
mov
bound
push
orl
dec
ret
lds
ja
mov
and
cmc
push
pop
call
pop
sti
adc
js
loope
push
pop
enter
cmp
std
add
test
xchg
inc
xor
dec
jbe
fistpll
add
out
push
and
pop
xor
inc
aam
cmpsl
ss
push
xchg
xchg
pushf
out
pop
mov
scas
jmp
or
negb
sub
mov
dec
cmp
addr16
mull
sbb
mov
pop
xlat
pop
mov
push
jae
in
xchg
mov
ja
push
xchg
sub
jo
jne
dec
psllq
xchg
sti
ficomps
xor
mov
inc
andb
into
stos
xlat
mov
cwtl
push
xchg
sarb
stos
pop
es
ja
inc
repz
hlt
loope
or
cmp
sub
inc
push
lds
add
bound
add
movsl
aaa
ljmp
and
jle
xor
and
jbe
popa
lcall
out
add
and
call
xchg
sbb
jo
push
inc
pop
daa
faddl
push
xchg
mov
xchg
pusha
lock
xchg
imul
adc
stc
icebp
jns
mov
and
push
mov
mov
push
add
inc
mov
add
das
and
inc
loopne
in
adc
lret
jecxz
call
cli
das
scas
pop
cmc
mov
arpl
js
mov
and
jge
add
sub
cld
xchg
and
or
add
dec
lret
pop
movsl
clc
dec
adc
cltd
lret
imull
xchg
mov
xor
in
add
cmpsl
xchg
push
or
jns
xchg
imull
ja
rcl
inc
gs
hlt
pop
jnp
jle
testb
sub
push
cmp
push
ds
mov
fsubl
aas
adc
loope
scas
scas
jbe
mov
test
sub
push
jge
in
testl
lods
lock
jae
or
cwtl
or
aam
rolb
push
dec
rcrl
xchg
popf
lahf
jo
insb
xchg
or
movsb
push
sub
shlb
sub
jns
cli
subb
enter
mov
adc
test
sar
pop
xchg
ss
sysret
int
mov
outsl
int
xor
popf
push
scas
addl
pop
in
loop
call
mov
ficompl
pop
lock
jmp
jg
addl
dec
scas
dec
das
push
mov
cmp
adc
cwtl
xor
stc
mov
fnstenv
popf
xor
xchg
pop
cmpl
pop
cli
and
push
stos
dec
sbb
leave
ret
sbbl
dec
mov
push
mov
jae
stos
mov
popf
iret
push
out
stc
ret
aad
or
fstp
jle
insb
cmp
into
repnz
jle
shl
ret
or
jns
orb
ljmp
xchg
fnsave
imul
or
xor
xchg
pop
dec
dec
fistps
jne
lds
and
mov
filds
sbb
iret
dec
jbe
mov
aas
icebp
xor
gs
push
mov
decl
stc
mov
mov
xchg
cltd
adc
shlb
into
xchg
dec
and
loope
dec
iret
xchg
push
fists
and
mov
inc
adc
test
arpl
imulb
js
cmp
mov
out
xor
mov
mov
jo
push
mov
imul
in
adc
imul
ret
sbb
das
jne
das
iret
push
sbb
cld
mov
dec
pushf
add
fdivrs
or
shl
dec
pusha
mov
mov
fsubl
mov
ret
mov
jp
test
and
loop
push
call
sarl
mov
orl
test
out
add
aaa
cwtl
cli
les
subl
dec
push
add
orb
or
jecxz
pushf
cmp
aas
pushf
xchg
jns
aad
xchg
push
shrb
sbb
andl
xchg
mov
adc
loopne
jg
pop
ds
cmpl
in
hlt
out
xor
imul
xchg
dec
aad
ret
movsl
clc
sub
or
inc
lds
and
adc
sub
xchg
cli
cmp
pop
imulb
out
mov
cmpl
mov
cs
fnsave
jmp
ret
fiadds
add
aas
push
pop
shll
add
mov
jae
xchg
clc
jne
inc
loop
std
sbb
es
es
jo
push
cmpsl
and
mov
es
cmpsl
cmp
addb
xchg
jo
pop
stc
adc
mov
inc
mov
lods
call
mov
jle
imul
inc
incl
push
int
sub
in
je
pop
dec
clc
stos
test
sbb
cmp
sub
mov
ret
mov
sbb
andl
push
ret
push
lds
hlt
xchg
test
cli
iret
mov
xor
sub
cmp
dec
mov
cmpsb
pushf
inc
in
pop
lock
mov
sti
lahf
outsl
ja
mov
gs
cmp
xchg
rclb
adc
inc
fs
or
xor
dec
mov
jge
jge
shlb
sub
insb
mov
cli
cmc
sub
cmpl
movsb
mov
sbb
add
andb
gs
lret
or
fdivrs
jg
mov
push
inc
aaa
jbe
divl
dec
mov
or
and
gs
dec
aaa
push
pop
push
lods
push
ret
sub
jp
stc
in
repnz
test
repnz
fidivrs
xlat
loopne
shrb
sarl
inc
jbe
add
into
js
jmp
mov
and
fdivr
mov
orb
inc
test
dec
test
cld
or
dec
mov
sbb
pop
add
cmc
imul
xor
and
jb
and
cmpsl
sub
fmull
cmp
mov
mov
aas
pop
add
in
jl
es
orb
repnz
scas
clc
adcl
mov
pop
xor
data16
sub
pop
enter
pop
mov
mov
adc
daa
add
movsb
out
cmp
aaa
ljmp
scas
pop
sub
mov
inc
jne
jbe
repnz
lea
jnp
or
test
push
in
push
sarl
js
mov
aad
xchg
shl
ja
jbe
inc
adc
sbb
stos
cmp
pop
imul
and
sbb
mov
mov
mov
bound
outsb
in
stc
xor
sarl
xchg
int3
xchg
pop
movsb
push
mov
pop
and
test
cmpl
push
add
es
pop
cld
jbe
push
mov
orl
pop
aam
cmp
sub
cmp
mov
js
xchg
ja
test
pop
enter
sbb
cld
adc
cmp
inc
sbb
dec
mov
cld
cmp
adc
inc
xchg
inc
or
das
aaa
dec
inc
cmpsb
pop
scas
jb
xor
sub
pop
in
and
mov
pop
inc
rolb
mov
subb
and
push
jg
or
push
out
lods
sub
cld
pushl
lcall
jne
add
jne,pt
pop
dec
adc
loope
rcr
nop
and
xchg
sub
dec
lods
addr16
out
dec
movsb
mov
lock
mov
in
pushf
sbb
xchg
das
adc
xor
push
xor
out
inc
movsb
mov
int3
cli
dec
xchg
testl
dec
lods
cmp
dec
xor
cld
mov
jecxz
mov
addr16
dec
imul
fistps
jp
xchg
lea
mov
pop
fimuls
dec
add
pop
sub
cmp
cmp
add
leave
dec
clc
xchg
imul
rorb
xchg
sahf
hlt
jae
popf
sbb
test
push
dec
mov
nop
mov
mov
push
jnp
jl
push
xor
imul
ficomps
je
stc
add
leave
idivl
mov
pop
outsl
jl
push
mov
mov
adcb
push
dec
fsub
ret
pop
rcl
dec
fs
pop
fstl
nop
sub
xchg
sub
jnp
fistpl
mov
sub
add
pop
adc
cmp
dec
inc
ljmp
pop
and
push
mov
out
cli
out
shlb
popf
xorb
or
push
cmp
dec
shll
pop
dec
jns
mov
xchg
adc
jmp
jnp
sbb
jno
sbb
sub
jno
gs
mov
pop
popf
dec
test
ljmp
jae
cmc
jl
outsl
shll
cmc
test
cli
xchg
ret
xor
dec
mov
add
jmp
popf
iret
frstor
dec
push
add
ljmp
mov
out
clc
stc
adc
rol
pop
sbb
dec
mov
xor
and
inc
mov
push
cmp
xor
jl
loopne
cmp
add
scas
sub
icebp
scas
jp
sbb
adc
sbb
ss
jne
dec
popa
lods
mov
cmpsb
fwait
mov
cmpsb
movsb
loop
mov
xchg
push
sti
popa
or
mov
xor
xchg
icebp
adc
testl
pop
push
or
add
lods
mov
jp
jno
push
fimull
sbb
js
aam
std
xor
gs
int3
mov
xchg
cmc
mov
lahf
cltd
rcl
push
fwait
inc
cmp
sub
push
test
jmp
aas
push
sbb
movsb
ret
iret
and
sbb
push
mov
pop
cmp
and
or
add
push
nop
movsb
lret
jnp
sti
ret
rclb
aam
loop
fcomp
xorl
push
les
mov
pop
dec
push
ffreep
or
adc
int3
sub
out
ror
idiv
fmull
push
rcrb
adc
test
insb
faddl
jo
lods
into
or
sub
fidivs
cltd
push
mov
cmpsl
mov
adc
shlb
ret
xor
sbb
mov
jecxz
cld
inc
mov
sub
push
cmp
gs
je
inc
jo
sub
mov
leave
mov
xchg
or
and
cwtl
add
mov
cltd
flds
pop
pop
dec
and
les
push
sub
lea
dec
scas
sahf
loop
test
sub
ficoml
xor
ljmp
inc
inc
or
addb
dec
cmp
daa
arpl
dec
push
daa
cmp
ficoml
in
push
mulb
sbb
mov
sub
addr16
jo
pop
mov
ss
popa
sbb
push
mov
jl
pop
out
cld
hlt
ss
mov
xor
mov
pop
inc
out
pushf
in
push
loop
sbb
sbb
xchg
pop
lock
pop
xor
xchg
outsl
popa
scas
sbb
mov
sbb
js
movsb
std
dec
xchg
aaa
nop
repnz
jne
sbb
inc
or
shlb
xchg
in
test
stos
fldenv
and
jne,pn
push
cmp
inc
shlb
mov
shrl
pop
lods
or
mov
jg
repz
cltd
incl
cmp
xchg
ds
shl
jle
and
xchg
stos
enter
xor
clc
sub
paddusw
adc
mov
sbb
or
popa
xor
dec
sub
dec
sub
jg
sbb
iret
sub
push
movsb
cs
or
cmp
mov
xorb
in
loopne
iret
inc
stos
in
xchg
iret
xor
testl
data16
clc
pop
push
mov
mov
mov
pop
test
gs
xor
push
sarl
aam
hlt
xchg
rdtsc
rorb
xorl
xor
mov
sub
hlt
stc
mov
pop
ljmp
popf
pop
adc
fsubl
cmp
dec
das
sub
jae
pusha
fidivrs
iret
scas
lret
xor
notl
add
sub
jecxz
flds
je
xchg
aam
inc
xchg
rorl
movsl
div
inc
outsb
ds
subb
pop
dec
rsm
mov
cmc
xor
xchg
and
inc
scas
jbe
xchg
lcall
fimuls
rolb
sbbb
sub
mov
aam
push
std
pop
sahf
adc
or
jmp
aad
jns
loope
sbb
es
scas
rol
gs
lret
mov
sbb
jle
sub
push
jno
xor
pusha
push
bound
divb
jno
lret
cmpsl
lret
pcmpeqd
es
push
add
out
and
out
xchg
mov
adc
scas
fimuls
test
sahf
test
outsb
stc
or
xchg
sbb
pop
dec
inc
pop
pop
es
cs
push
sbb
sub
outsl
mov
fisubl
popf
pop
es
sarl
imul
mov
pop
sub
movsb
fistpll
jnp
into
adc
push
jbe
das
sub
scas
adc
inc
mov
push
lock
mov
testb
xor
pop
cmp
dec
cmpsb
aam
adc
aam
arpl
adc
bound
lds
shll
lods
inc
push
push
cmpsb
aad
out
push
mov
sub
fistl
sbb
mov
dec
cmp
jno
xor
sbb
xchg
or
test
mov
xchg
adc
xchg
stos
or
out
lret
popf
add
or
pop
cwtl
out
and
dec
cmp
mov
fs
in
or
jns
xchg
xor
out
jne
fsts
and
xor
lods
or
fiaddl
lahf
pop
adc
divl
mov
lea
xor
xorb
cwtl
out
pop
adc
lock
test
js
std
or
push
gs
jbe
data16
mov
mov
test
mov
std
xchg
add
push
scas
pop
mov
inc
xchg
xchg
xchg
add
pop
lds
mov
xchg
xchg
push
call
in
jg
ffree
test
fimull
stc
stc
inc
add
fnsave
add
mov
add
sub
sub
cmp
cwtl
jb
cmp
lret
add
push
ss
cli
inc
in
push
ret
pop
mov
inc
or
xor
xor
add
sbb
lods
lret
push
jae
pusha
inc
js
sub
sub
ret
rorl
call
xchg
jbe
jmp
hlt
mov
sti
mov
gs
out
lahf
popa
xchg
add
fiadds
cmp
push
shlb
mov
shll
xchg
cmp
lea
das
fnsave
test
insb
sbb
jae
les
or
int
mov
and
jno
sub
inc
adc
xchg
adc
sub
dec
notb
mov
in
pop
sub
inc
pop
sub
repz
repz
subl
pop
sahf
test
sbb
cltd
dec
into
cmp
dec
xchg
sbb
data16
push
mov
mov
mov
outsl
pop
adc
cltd
mov
mov
out
dec
inc
sub
stos
mov
and
mov
mov
lock
in
into
sbb
lret
xor
inc
lds
jp
sub
push
imul
lcall
lret
and
cmp
paddusw
jmp
cmp
jnp
roll
and
repnz
movsl
loopne
lcall
sbb
scas
and
push
or
adc
adc
js
xchg
daa
movsl
push
inc
or
daa
and
inc
add
punpckldq
sub
sub
mov
fwait
lods
call
insl
stos
cmp
sbb
sbb
fiaddl
icebp
or
mov
in
and
pop
mov
xchg
nop
xchg
mov
sub
mulb
mov
subb
xchg
sbb
push
adc
push
mov
mov
cmp
pop
jmp
xchg
sbb
xchg
ret
mov
push
jmp
aad
push
inc
pop
lock
push
mov
dec
xchg
jp
mul
in
cmp
stos
stc
out
dec
insb
ljmp
aad
pop
ds
ja
popf
movsl
fxch
shl
cmp
aad
mov
bound
ret
shll
mov
dec
mov
pop
pop
sbb
and
lret
cli
in
fs
jmp
std
jnp
jp
cwtl
into
mov
test
decb
fiadds
cmp
push
add
push
out
pop
mov
in
pop
fwait
pop
and
std
lcall
imul
xchg
adcl
or
in
lcall
push
bnd
popf
inc
leave
insl
and
scas
in
pusha
lods
add
inc
movq
mov
mov
mov
sub
mov
out
inc
loop
dec
jns
mov
stc
shl
in
sbb
xor
pop
pop
dec
mov
je
mov
mov
movsl
call
mov
popf
in
loopne
lahf
add
fwait
rorl
dec
and
or
scas
mov
sub
jbe
pop
loopne
test
pop
xor
pushf
push
and
dec
dec
fsubs
mov
add
pop
or
or
push
es
sbbl
dec
push
ds
cmpsl
mov
ror
mov
leave
mov
mov
adc
aaa
lds
leave
adc
popf
jae
lods
les
scas
pop
sbb
mov
popf
dec
jno
int3
loope
iret
push
push
pop
lcall
lret
dec
sbb
fsub
insl
and
mov
push
add
fstpt
jae
jo
inc
ret
je
xor
mov
js
lock
lock
pop
movsl
add
xlat
call
pop
lahf
push
push
enter
ret
imul
cmc
inc
mov
mov
mov
insb
adc
bswap
scas
pusha
adc
cltd
inc
ja
and
sub
adc
in
push
xchg
sarl
negb
and
loop
mov
loopne
sbb
lods
inc
adcb
dec
pop
scas
sub
xchg
dec
jmp
jns
scas
or
xor
dec
gs
movsb
and
dec
jno
cmp
push
cltd
cmp
lds
je
jge
mov
insl
push
mov
arpl
icebp
mov
and
jl
ffreep
inc
inc
cmp
fimuls
xchg
mov
inc
and
cmpsl
std
inc
ja
mov
mov
xlat
mov
loop
adc
clc
dec
sbb
out
mov
dec
adc
stos
in
sbb
adc
out
sarb
sahf
fimuls
call
shr
outsl
repnz
jmp
loop
adc
jg
rcrl
scas
lea
inc
push
movsl
sub
add
loopne
or
sbb
dec
mov
mov
push
jl
adc
jo
dec
pop
cltd
jo
test
lds
mov
lahf
xor
daa
or
leave
roll
inc
pop
stc
or
js
in
or
rclb
push
and
or
mov
fcmove
fimuls
rclb
in
sub
or
mov
pop
adc
in
jl
or
push
iret
add
dec
pop
xor
imull
aad
cmp
insb
adc
insb
nop
fildll
shll
cmc
pop
jo
xchg
dec
loopne
xchg
lahf
push
movsb
sbb
arpl
shll
movsb
enter
pop
jno
mov
insl
pushf
adc
and
imull
mov
cltd
sbb
jecxz
es
fwait
test
dec
cmp
hlt
pusha
lods
lods
aas
cmp
fs
jnp
push
pusha
or
push
test
pop
cmc
jnp
out
out
lods
push
inc
addb
sahf
xchg
pop
pop
adc
or
lcall
les
ret
in
lock
aas
push
fisubl
repnz
cltd
imul
std
pusha
xlat
mov
and
and
jno
and
inc
jge
cmc
aad
xchg
sti
adc
bnd
sub
cs
and
js
fisttps
out
pop
sar
call
mov
inc
push
pop
js
in
cli
flds
or
xor
mov
mov
in
int3
pop
mov
mov
jne
add
stos
pop
jmp
test
repz
loopne
scas
dec
test
xchg
mov
pushf
imul
addb
add
call
iret
pushl
mov
enter
sub
jns
jnp
mov
jp
imul
push
sbb
das
int
lock
notl
stos
add
test
dec
mov
lds
out
jae
lcall
inc
push
loop
rclb
and
adc
xchg
mov
ja
inc
insl
lds
ret
jno
and
das
fdivrl
sub
xchg
pop
push
mov
xchg
jmp
test
imul
sub
repz
sarb
repz
pop
lcall
daa
popa
and
mov
inc
pop
fdivr
or
sub
cmp
jnp
sbb
xor
mov
adc
push
mov
xchg
jp
push
xorb
stos
bound
mov
out
out
dec
je
aam
xchg
mulb
cli
mov
cmpsl
fcomps
sti
inc
inc
inc
cmp
push
sahf
stc
mov
sti
push
rorb
push
ret
lock
aaa
ret
mov
push
out
test
adc
cmp
jl
aad
push
add
bound
aas
daa
dec
jmp
mov
cmp
mov
dec
repz
adc
ficoms
or
jge
push
jbe
inc
aam
pop
and
jle
push
imul
enter
inc
mov
cmp
lcall
mov
xor
daa
xchg
xor
nop
sarb
and
mov
add
jo
rcl
imul
in
rcl
push
std
jns
aaa
mov
pop
pop
aas
xchg
stos
aam
inc
xor
imul
in
lret
adc
inc
or
mov
push
into
ss
xor
inc
or
jmp
push
xor
dec
outsl
xor
in
mov
aam
inc
insb
insb
loopne
mov
es
fwait
cmp
and
fsubl
out
xor
loopne
ja
jmp
pop
jmp
sahf
into
mov
sti
imul
and
mov
icebp
fwait
pop
out
filds
or
loopne
mov
mulb
cmp
iret
scas
imul
fs
cs
add
out
nop
inc
popf
cmp
jl
repnz
xor
aaa
repnz
es
xchg
cmp
push
xchg
movsb
push
push
cli
add
inc
das
jl
xchg
dec
addl
lret
dec
sahf
push
popf
shll
imul
sub
ret
sub
sarb
sbb
dec
pushf
faddl
jb
xchg
adc
xlat
sarb
push
add
jb
shrd
test
sbb
mov
dec
mov
dec
sub
cwtl
rorb
jl
insl
scas
pop
xchg
xchg
lea
clc
and
aam
or
sbb
mov
mov
filds
data16
std
or
inc
in
xor
fisubs
xchg
leave
push
dec
add
pushf
int3
pop
in
out
dec
rcl
clc
or
adc
adc
test
addl
addr16
insb
outsb
mov
jle
or
aas
xor
adc
push
mov
ljmp
jmp
in
ret
xchg
adc
xchg
repz
push
pop
call
shrl
dec
xorl
cmc
out
pop
shlb
xchg
fcoms
ret
call
push
or
push
aam
cmc
xchg
ds
inc
and
nop
popa
adc
sbb
iret
pop
adc
jbe
out
inc
mov
push
out
notl
int3
in
lods
loope
testl
mov
int
js
call
ljmp
bound
lret
jne
lcall
pop
xchg
in
xor
ja
arpl
es
mov
stos
call
mov
push
ljmp
aas
pop
outsl
add
and
rolb
sub
adc
sub
or
insl
fwait
mov
push
lret
mov
arpl
mov
inc
jmp
or
inc
cmp
cld
insb
or
jl
inc
xlat
sbb
push
push
movsb
jle
jbe
or
mov
xchg
loop
sbb
nop
adc
scas
push
rcrl
jg
dec
sub
add
lcall
fnstenv
ffreep
inc
lock
aaa
repz
sub
rorl
jecxz
mov
xchg
mov
mov
xchg
stc
adc
out
dec
sarl
sbb
mov
je
mov
ds
jecxz
aam
mov
addr16
aaa
sbb
fs
xchg
clc
jae
sub
push
movnti
imul
mov
aam
and
pop
or
jo
repnz
in
dec
andb
xchg
mov
rcrl
iret
lea
lock
into
mov
mov
out
mov
pop
xlat
fs
roll
dec
stos
insb
daa
sahf
xchg
lret
lock
cmpsl
call
stos
incb
pushf
sub
mov
jle
mov
frstor
jae
fdivp
pop
mov
add
lds
in
xor
fcomps
ret
xor
aas
rcrb
dec
arpl
dec
mov
jns
mov
mov
out
insl
cmpsb
jno
add
inc
aas
lret
lcall
lds
jle
pusha
sub
ja
jp
xchg
pusha
pop
repnz
imul
movsl
jl
gs
cmp
sbb
test
addr16
imul
aad
cmp
ret
enter
inc
adc
psllw
inc
inc
sub
mov
jnp
adc
mov
std
rol
mov
mov
ret
fstpl
pop
inc
aad
add
test
sub
dec
ja
jb
stos
jecxz
rcll
mov
xor
pop
pop
mov
add
cwtl
ja
lahf
push
sti
sbb
clc
int3
pop
mov
inc
nop
xor
adc
mov
xor
xor
fs
jae
std
aaa
lret
sti
mov
adc
or
stc
pushf
mov
sti
sarb
jle
icebp
sub
adc
in
fxch
int
mov
imull
add
enter
sbb
icebp
int3
sahf
add
jne
lds
push
aam
cmpsl
ds
decb
idivl
push
test
fildl
mov
sbb
xor
testl
cs
lea
mov
dec
adc
dec
lods
ret
dec
and
sti
fs
adc
push
dec
into
jge
mov
mov
ret
mov
lea
add
inc
mov
xorb
cmp
mov
mov
cltd
xor
jg
ds
cli
add
sbb
and
rep
shr
lods
in
jmp
fs
pop
pushf
mov
cli
fs
incl
mov
pushf
xchg
bound
sub
pop
xchg
and
sbb
call
jmp
insb
dec
cltd
pop
sub
fcompl
pop
loop
add
push
dec
lret
les
and
pushf
test
sub
add
jb
lcall
aam
xchg
and
fdivr
daa
scas
pop
jo
mov
or
scas
fcompl
sub
ljmp
rclb
mov
or
mov
jnp
arpl
mov
bound
xchg
jbe
outsl
je
push
test
push
arpl
mov
popf
inc
jg
ljmp
ret
pop
lock
ljmp
inc
sbb
inc
test
lret
inc
ds
inc
ds
pop
jno
cmp
mov
jae
adcl
xchg
push
aas
cmp
mov
dec
xor
lahf
aas
dec
sbb
cmp
fcomps
mov
inc
dec
pop
iret
fdivs
inc
icebp
ljmp
insb
add
pop
pop
repnz
sbb
lea
adc
mov
xchg
popf
int
xor
jno
sahf
push
cld
ss
sbb
mov
xlat
fidivrl
test
js
mov
xchg
adc
and
xchg
scas
dec
mov
jmp
sbb
sbb
xchg
xlat
repnz
test
scas
xor
jecxz
xor
test
es
push
test
fsubr
test
pop
aam
mov
hlt
dec
hlt
fwait
add
jmp
scas
mov
mov
rol
xchg
ljmp
rorb
jmp
adc
or
lret
push
mulb
pop
mov
jecxz
loopne
xor
shlb
pusha
and
mov
test
aaa
mov
and
ljmp
scas
fldenv
jecxz
and
jne
xchg
fstpt
and
les
mov
imul
and
pop
fiadds
push
mov
xchg
insb
mov
fwait
lods
mov
repz
pop
sbb
test
addr16
or
je
outsb
scas
mov
inc
pop
fcomi
jbe
insb
add
mov
adc
pop
jns
inc
insb
testb
mov
orl
out
sub
add
jae
jne
lcall
inc
mov
pop
xchg
push
aad
cmp
or
mov
xchg
push
lret
rorb
mov
jp
mov
aad
mov
push
mov
shll
dec
push
stc
data16
ja
cmpsb
repz
mov
rcl
xchg
pop
xchg
fdivrs
inc
xchg
jle
mov
inc
lret
movsb
adc
jb
or
shlb
sbb
mov
cvttps2pi
aam
pop
scas
es
cltd
or
stos
lret
jno
outsl
mov
pop
add
pop
and
daa
cmpl
gs
aad
loope
sbb
leave
jge
mov
sarb
inc
mov
xor
enter
in
mov
fistpl
cwtl
push
pop
inc
in
or
xor
mov
push
sbb
push
stos
popa
push
xchg
adc
ror
lods
out
xorl
enter
aad
lahf
mov
and
loopne
inc
adc
sub
and
in
push
stc
loopne
test
ror
adc
jmp
out
ret
fdivrl
icebp
and
xchg
push
fidivrl
lds
ss
inc
mov
out
call
aad
inc
les
xchg
cmp
or
jmpw
and
push
xor
cwtl
cwtl
xchg
std
shr
movsl
xchg
nop
stc
cmpsl
mov
iret
decl
out
sbb
mov
rcl
lock
xchg
imul
fsubs
mov
cmp
sub
add
fs
mov
add
mov
ja
adc
sub
shr
and
ja
and
push
lret
inc
fsub
mov
sbb
lret
lret
cmp
outsb
rcrb
mov
bound
adc
xchg
xor
dec
data16
sub
mov
xchg
add
lret
push
jno
les
out
ja
push
mov
xlat
add
jge
das
xchg
mov
jge
lods
pop
outsb
add
idivl
mov
pop
sahf
push
xor
and
dec
push
jg
jb
sarb
js
dec
xor
xor
jae
adc
pop
lcall
jbe
jnp
xchg
outsl
and
orl
inc
inc
jp,pn
rorb
xor
and
cmp
pop
aaa
inc
dec
out
add
push
int
mov
add
push
xchg
roll
les
or
add
inc
mov
pop
imul
cmpsl
fidivrs
mov
in
fldt
call
jp
shlb
and
shr
shlb
jno
insl
mov
repz
ds
adc
push
lahf
ficomps
iret
or
xor
mov
cmp
adc
adc
popa
loope
inc
mov
push
xchg
inc
or
dec
mov
dec
xchg
jl
jmp
shll
pop
xchg
scas
cmp
sbb
xor
pop
out
je
addr16
in
outsb
push
pop
repnz
lock
push
outsb
xor
jnp
mov
adc
out
jno
std
imul
clc
mov
push
gs
fcompl
ds
mov
mov
pop
add
cmp
xchg
add
jb
push
aad
fcmovbe
pop
dec
sbb
and
push
dec
cmp
div
adc
and
stos
mov
int3
fwait
and
sub
cs
inc
roll
repz
mov
lock
mov
mov
mov
jo
aas
mov
faddl
lea
shl
lods
movsl
ja
aad
mov
jmp
dec
mov
pop
mov
outsb
pop
test
lahf
mov
xor
cmpsb
mov
cmpsl
scas
jge
jmp
jmp
into
ds
sub
dec
nop
or
or
fcmovnb
inc
lock
inc
notb
enter
test
pop
aas
imulb
push
pop
pop
outsb
cli
adc
jb
add
dec
aad
bound
aaa
mov
xor
addl
mov
xor
inc
in
jg
movsl
mov
fwait
in
ficoms
sbb
add
dec
std
and
test
lock
inc
pop
xchg
faddp
mulb
dec
adc
or
ret
pop
cmp
cmc
cmpsb
js
cltd
cmp
fwait
or
or
popf
xchg
xchg
enter
jnp
pop
add
and
in
and
xor
popf
sub
aaa
sbb
fucomp
fdivl
jb
mov
xor
daa
cmp
cli
mov
iret
jno
ret
loop
jmp
shl
loope,pt
mov
and
dec
xor
insl
mov
dec
jp
adc
pop
sub
pop
call
dec
xchg
in
pop
mov
imul
jo
imul
imul
dec
push
add
cmp
gs
xchg
mov
and
loope
lret
dec
sub
cmp
sub
sti
lcall
nop
mov
inc
add
sbb
mov
jns
pushf
push
jo
push
adc
outsl
adc
dec
mov
aad
out
sbb
xorl
inc
xchg
test
in
in
pop
mov
jecxz
nop
push
lods
ds
roll
js
cmp
aaa
scas
push
sbb
mov
sbb
leave
jg
inc
mov
xor
inc
inc
dec
or
jne
dec
ljmp
pop
push
popf
mov
loope
test
data16
jmp
push
shll
mov
and
outsl
mov
sbb
jmp
and
out
xor
cmp
lods
es
xchg
push
inc
sub
dec
sub
pusha
ret
pop
xor
mov
pushf
xor
iret
imul
lds
lds
jbe
test
les
push
pop
into
jnp
cmp
xchg
sub
call
lahf
inc
in
rcr
test
test
cli
dec
add
push
jb
fstpt
sbb
mov
mov
sbbb
mov
xor
pop
inc
mov
and
lret
push
jb
or
addr16
mov
or
jp
cltd
xchg
cmp
aam
inc
mov
xchg
popa
push
stos
cld
cmovbe
dec
mov
inc
adc
test
movsb
xor
dec
shlb
cmpsl
arpl
lods
cmp
repz
sbb
xchg
into
lcall
pop
arpl
movsb
and
or
jmp
shl
lret
sub
int3
hlt
inc
leave
and
neg
jge
dec
insl
mov
push
pop
fwait
lret
cmp
add
imul
arpl
out
mov
popf
adc
sub
jmp
pop
xchg
jo
cmp
rorb
adc
das
lods
inc
sbb
lea
out
push
pushf
xchg
sub
pop
adc
pop
xchg
jbe
popa
scas
add
jmp
clc
popa
and
dec
mov
xchg
mov
or
rclb
ljmp
jnp
sbb
stos
cld
aad
fmuls
or
call
jl
add
mov
or
sub
or
or
and
push
mov
xlat
add
iret
sbb
add
jno
das
pop
cld
iret
pop
repz
fs
mov
push
pmaddwd
repnz
mov
ljmp
test
pop
out
fwait
dec
dec
mov
js
icebp
leave
sub
lret
jl
jb
test
popf
das
jnp
bound
das
in
pop
fstpl
pushf
arpl
mov
outsb
push
xchg
cld
mov
sahf
notl
or
sti
out
pusha
mov
cmp
enter
mov
xor
pop
lods
pop
into
cmpb
dec
sub
lret
adc
pop
mov
cmpsl
bound
sti
dec
ficompl
jae
or
cld
inc
lds
sbb
cld
add
test
sbb
adcb
pop
inc
dec
cmpsb
dec
out
adc
jmp
push
ficomps
pop
test
addl
repnz
push
add
filds
add
rcrb
lea
int3
aas
out
push
push
mov
dec
xor
or
sbb
jle
lds
cmp
xor
cmp
xor
xchg
and
imul
sti
or
scas
mov
popf
imul
mov
and
ret
popa
and
test
addl
sbb
adc
pushf
stos
xor
mov
adcl
mov
inc
mov
cli
pop
ja
daa
mov
cmp
push
aaa
mov
push
jl
inc
iret
sub
out
mov
test
jnp
jmp
adcl
aaa
out
ret
inc
shll
xor
out
jmp
aam
sbb
inc
xor
imul
adcl
jnp
and
push
inc
inc
loope
ret
stos
mov
scas
mov
pop
test
dec
dec
test
or
ljmp
js
xchg
mov
ljmp
adc
or
ds
loope
cmpsl
out
aad
cmpsl
and
daa
mov
test
push
and
mov
mov
jo
loop
adc
lock
and
stos
int
push
pop
dec
sbb
movsb
sbb
ds
pop
push
inc
shlb
cmp
jl
popf
sub
push
sbb
push
xchg
nop
or
imul
loope
jl
mov
mov
lret
test
out
adc
repz
in
je
cltd
pop
mov
js
xchg
lret
shll
pop
es
dec
xchg
pop
nop
push
sub
fucom
or
fcmovnu
into
push
push
mov
jmp
push
fistl
xchg
test
int3
sub
pop
inc
jns
dec
lods
in
sub
jne
jbe
add
das
ss
shr
mov
dec
adc
push
sbb
nop
mov
notl
dec
ret
icebp
push
xor
or
in
int3
xlat
inc
or
out
fmuls
add
imul
pop
and
out
icebp
xor
jae
lret
mov
repnz
inc
jnp
mov
push
fisttpll
mov
ljmp
push
aas
mov
scas
mov
movsl
lods
dec
imul
xor
dec
sub
cld
jecxz
sahf
imul
in
add
dec
not
push
and
popa
sub
negl
stc
js
dec
lods
neg
push
andl
je
dec
jl
xor
cwtl
test
nop
std
arpl
xchg
add
sub
test
push
scas
fs
test
dec
pop
je
lahf
loopne
mov
jnp
xchg
subb
dec
cwtl
dec
push
in
test
addr16
jp
lret
scas
mov
lds
int
cli
sbb
aaa
adc
std
pop
pop
movsl
push
jp
mov
hlt
jne
rcll
mov
es
mov
sub
pusha
xchg
adc
fldl
rclb
pop
sub
cmp
sub
xchg
and
jle
sbb
lods
xchg
push
outsl
inc
inc
outsb
jne
jmp
push
scas
cltd
js
decl
jbe
push
popa
nop
test
xor
shrl
loopne
stc
push
xor
pop
mov
sub
cmc
xor
xchg
cmp
push
lcall
je
jmp
xchg
das
filds
push
loop
repz
pop
mov
clc
decb
and
hlt
pop
add
rcrl
push
inc
adc
sub
pop
ja
cmp
xchg
add
cmp
sub
jne
fst
sbb
xchg
mov
adc
pushf
scas
lods
adc
inc
push
addb
out
mov
sbb
add
cmp
test
data16
stc
xor
cltd
dec
mov
and
and
xor
mov
xchg
and
andb
pusha
or
sbb
les
cwtl
scas
mov
movzwl
aad
dec
sarb
pusha
mov
clc
xchg
inc
and
lods
fbld
sub
sub
and
aad
and
out
xchg
cmp
or
xchg
adc
pushf
and
inc
jno
xorl
pop
cmc
shrl
xchg
cmpsl
bnd
std
scas
fdivl
pop
dec
lahf
xchg
out
js
aaa
test
jno
int
add
lcall
xor
out
and
mov
out
push
push
jno
xchg
mov
shr
inc
movsl
outsl
sbb
incl
pop
sub
or
mull
push
push
bound
imul
cli
fidivrs
or
jb
fcomi
push
test
dec
arpl
inc
lea
shll
orl
test
test
pop
insb
mov
jecxz
pop
decb
inc
test
adc
test
sub
pop
sti
xchg
push
push
cmp
inc
imul
lahf
sti
xor
jp
test
das
mov
jle
stos
pop
xlat
scas
out
sub
or
xchg
ret
pushf
in
mov
push
or
cmp
out
pop
addr16
and
fcomps
push
fnsave
sbb
or
mov
test
cmp
jae
cmp
xchg
popf
in
xor
pop
adc
cmp
aad
push
fmull
xor
cmp
cmp
add
je
adc
test
sbb
nop
vmovdqa
xchg
movsl
cli
inc
xchg
testb
cmc
popl
and
sbb
js
add
sbb
xchg
cmpsl
pop
pop
arpl
pop
mov
int3
push
sub
ds
sbb
test
roll
clc
sar
rolb
sbb
imull
adc
fs
add
mov
push
addb
popa
mov
pop
jmp
clc
int3
int
xor
aaa
aas
push
xchg
xchg
rcr
push
jecxz
fs
pop
stos
and
insl
jae
fistpl
adc
movsl
xchg
outsb
sbb
pop
jne
mov
sti
scas
push
mov
jbe
imul
notb
xor
xor
stc
sbb
cwtl
dec
icebp
push
adc
push
es
mov
repnz
pop
add
and
test
std
push
lret
mov
loop
jae
scas
push
mov
xor
imul
pop
clc
icebp
jp
xor
xor
mov
add
push
cs
aas
fisubrs
jp
imul
jns
pop
repz
pusha
icebp
sbb
fdiv
mov
and
sbb
into
jp
jle
pop
xchg
add
xchg
xchg
rorb
mov
data16
sub
neg
mov
insb
pop
xor
dec
aad
fidivrl
loopne
pop
xchg
mov
mov
cld
js
insb
xor
sbb
xchg
iret
or
dec
jp
out
clts
sub
mov
pop
rorb
in
cld
or
mov
adc
pop
and
xchg
fnstenv
loope
mov
sub
icebp
addb
or
in
lea
movsb
lcall
xchg
cmp
pop
adc
push
divps
sbb
iret
or
cmp
shl
mov
aas
pop
jecxz
dec
test
adc
sub
inc
imul
mov
sbb
adc
inc
jl
add
loop
xor
and
mov
push
cmp
mov
xor
into
add
fsubrl
or
ljmp
or
outsb
leave
xor
adc
xchg
xor
add
scas
and
mov
push
aaa
mov
or
bound
push
adc
pop
xor
jbe
test
add
adc
mov
xlat
pop
pushf
mov
pop
dec
insb
xchg
jle
or
pop
and
add
cwtl
mov
sbb
mov
fcmovbe
roll
fs
dec
es
sub
test
jmp
sbb
ret
or
mov
jno
push
lods
adc
pop
push
mov
clc
cwtl
push
int
push
sbb
andb
js
mov
ljmp
pop
test
and
push
test
mov
add
ja
arpl
pop
sub
int
or
push
adc
sbb
jg
lret
push
dec
mov
insl
xchg
jns
xchg
or
xchg
xchg
test
in
sbb
test
mov
out
xchg
cmpsl
mov
jno
push
cld
cmpsb
mov
lods
jbe
pop
mov
test
pusha
stos
inc
inc
fldl
mov
add
inc
insl
push
js
mov
fdivs
je
dec
push
push
dec
test
negb
jge
xchg
loope
gs
jbe
int3
aad
test
mov
movsl
rcll
call
sti
cli
cli
repnz
adc
sbb
hlt
fsubr
jns
xchg
jecxz
fcmovnu
adc
cmc
test
pop
setno
jnp
sub
mov
bound
push
mov
cmp
int3
in
pop
stc
xchg
mov
mov
mov
dec
movsb
ljmp
cmp
mov
dec
mov
push
push
mov
jno
pop
sub
inc
sbb
xor
pushf
cwtl
icebp
jne
mov
or
pcmpeqw
shlb
testl
shlb
loopne
add
test
jno
or
xchg
je
jl
aaa
out
sub
xor
lods
or
fimull
pop
nop
and
stc
push
mov
outsl
jle
daa
rorb
je
mov
pop
mov
jne
hlt
test
mov
repnz
sbb
push
dec
pop
ja
int3
mov
out
xchg
stos
addl
stos
iret
stos
cmpsl
inc
outsb
add
loop
cmp
pop
or
or
xchg
sub
push
pushf
lcall
push
and
enter
adc
or
lods
sbb
notl
hlt
stos
pop
pop
repnz
jno
int3
scas
test
or
sub
sbbb
lret
leave
pop
leave
inc
addb
inc
mov
pop
xlat
aam
xchg
sbb
ss
mov
sbb
ja
popf
cmp
mov
scas
jns
rorl
mov
push
cmp
sbb
sbb
loop
lods
lcall
ds
inc
jg
dec
data16
leave
outsb
addr16
shld
dec
mov
sbb
mov
add
out
lcall
pop
cmp
xor
mov
enter
or
pop
fcomip
sub
cwtl
int
xchg
xchg
cmp
push
mov
jmp
fst
iret
xchg
fcomps
div
test
aam
icebp
mov
add
cmpsl
aad
ja
mov
test
dec
xlat
xorb
adc
mov
test
push
cltd
movsb
and
sbb
or
jle
pop
aad
or
int3
in
shlb
and
stc
fucomp
jno
inc
mov
insb
fsubs
lds
das
fsubs
shrl
in
out
clc
sbb
and
and
pop
pop
push
filds
mov
pop
das
push
cmc
dec
in
dec
jl
mov
sub
sub
sub
imul
mov
mov
mov
mov
daa
mov
cltd
movsl
cwtl
icebp
gs
xor
enter
out
sti
mov
xchg
pop
mov
leave
xor
sbb
xchg
mov
mov
cmp
cmc
int
xchg
in
int3
lock
pop
in
xchg
movl
pop
repnz
cmp
fisttpll
pop
das
dec
shll
lahf
imul
jne
or
test
sub
out
push
adc
popa
enter
in
ficomps
stc
xchg
fidivrl
push
cmc
add
pop
push
pop
mov
push
mov
sbbl
or
lret
je
int
leave
pop
adc
fldl
xchg
mov
loope
enter
int3
push
mov
push
mov
push
mov
adc
mov
mov
push
ret
ljmp
mov
into
dec
popa
inc
inc
adc
adc
lds
xchg
pop
pop
movsl
add
call
ss
arpl
stc
xchg
mov
xor
imul
mov
sbb
add
movsl
rolb
std
in
stos
jns
inc
pop
mov
add
arpl
clc
jae
inc
cmpsl
sbb
mov
ljmp
dec
dec
in
or
mov
repz
xchg
je
data16
push
adc
xchg
push
pop
cmp
ret
pop
ficompl
dec
mov
call
add
mov
gs
out
inc
insl
mov
pop
nop
aas
cmp
loope
adc
add
xchg
int
add
roll
clc
xchg
frstor
in
mov
lcall
test
sbb
push
les
pop
dec
add
jg
xor
outsl
repz
mov
enter
add
outsb
emms
ss
negb
xlat
sub
out
orl
or
push
mov
popf
dec
push
mov
xchg
pop
mull
ss
ja
outsl
mov
inc
cs
dec
out
xor
out
movsb
fsubl
mov
imul
and
push
jnp
push
es
jp
popa
jle
jp
pop
pop
ja
sbb
lahf
je
jecxz
mov
mov
popf
pop
fs
imul
ret
and
pop
iret
pop
faddl
mov
inc
inc
cld
scas
pop
cmc
fldenv
adc
push
std
jle
mov
and
clc
rolb
cmp
pop
xor
dec
mov
negb
mov
aas
adc
mov
or
cmp
mov
mov
mov
mov
mov
cld
push
test
jns
js
push
jle
imul
xchg
adc
sbb
pop
mov
xchg
mov
xchg
je
sbb
inc
or
stos
outsl
xchg
mov
mov
in
mov
add
xor
add
lahf
jmp
arpl
outsb
sbb
ss
or
popa
data16
out
cmpsl
aam
adc
mov
idiv
dec
xchg
in
and
xor
call
outsb
iret
loope
outsl
fsubs
push
cmp
push
scas
pop
out
mov
testl
ja
push
push
push
adc
stos
pop
xor
clc
and
add
rcrl
push
iret
rclb
fucom
movsb
dec
fmuls
jecxz
nop
fcoml
adc
inc
jge
dec
adc
add
std
lock
jmp
or
clc
mov
mov
cld
xor
mov
mov
std
pcmpgtb
adc
push
adc
sbb
push
rorl
mov
das
dec
adc
push
leave
inc
mov
xor
pop
push
adc
rclb
sarb
test
insb
insb
fwait
add
add
jmp
mov
stos
dec
and
test
jmp
pop
xor
popf
daa
pop
loop
fldcw
jg
mov
jo
mov
sbbl
loop
dec
cmc
mov
adc
xor
ds
cld
inc
imul
dec
incb
fneni(8087
jmp
xchg
test
cmp
repnz
cmp
or
dec
inc
fsub
push
pop
leave
push
xchg
shlb
sarb
add
pushf
jge
es
popa
out
adc
fidivrs
jnp
dec
adc
dec
adc
pop
lds
pop
cmpb
mov
bound
insl
xor
pushf
inc
lods
inc
mov
mov
incb
sbb
jbe
fdivl
cmpsl
and
cmp
dec
mov
cwtl
bound
ljmp
arpl
lret
lods
sbb
movsb
mov
inc
shll
jecxz
or
sbb
jne
mov
popa
iret
sbb
xchg
or
add
sbbl
scas
popf
add
inc
jge
xor
aaa
jbe
out
mov
loope
movsb
leave
adcb
xchg
xor
lods
sahf
rcrb
sbb
add
pop
adc
fisubrl
js
mov
repnz
or
fs
test
cmp
sbb
adc
scas
incb
pop
push
cmpsl
imul
cld
nop
push
jb
cli
jge
mov
imul
and
xchg
hlt
fidivrl
pop
push
call
lea
mov
cmp
stos
cld
and
jge
in
lods
fstl
mov
pop
push
orl
jecxz
push
lea
pushf
lods
or
fistl
xchg
xchg
hlt
inc
repz
out
jno
test
mov
mov
inc
jb
paddw
icebp
mov
es
xchg
in
jns
sbb
repz
stc
adc
lods
pop
ss
popf
les
sub
dec
xor
adc
bound
ret
dec
ret
roll
dec
mov
pop
xchg
xlat
mov
hlt
sbb
jl
dec
je
addb
push
lcall
movsl
iret
push
scas
vandps
sbb
add
mov
or
dec
xorb
cmp
mov
and
jne
add
incl
push
stos
sbb
add
inc
dec
mov
test
lret
lods
cmp
dec
jle
pop
hlt
sub
movsl
dec
xor
sub
and
test
cld
sbb
mov
sub
pop
scas
sarl
aaa
sbb
push
stos
mov
inc
xchg
notl
scas
hlt
lret
jg
pop
repz
sub
lods
or
push
dec
fsts
push
pushf
or
mov
push
lds
xchg
xchg
mov
outsb
stos
int
rolb
sahf
ret
jle
add
push
push
leave
dec
jne
jnp
lahf
jb
jo
cmpsl
cmc
inc
iret
lahf
scas
xor
ljmp
idiv
orl
jns
mov
add
rorl
outsb
xchg
loopne
addl
das
mov
jne
pop
insl
lods
test
ret
lods
pop
mov
mov
adc
mov
xor
lods
and
std
sub
xor
lret
pop
pushf
loop
cmp
jecxz
xchg
pop
popa
push
adc
pop
test
lods
rclb
cmp
test
cs
jo
in
pop
pop
sbb
mov
sub
out
movsb
pop
fwait
inc
fdivrs
out
out
and
outsl
in
test
stos
xchg
pop
mov
jecxz
leave
call
sbb
push
test
cmp
mov
rcll
fwait
ljmp
adc
stos
push
and
jmp
jne
jae
fdivrl
stos
ret
pop
and
nopl
cwtl
fcmovu
mov
into
lea
ret
pop
push
aaa
pop
mov
lods
ficomps
xorl
iret
dec
icebp
loopne
push
iret
mov
mov
icebp
filds
lods
icebp
arpl
pop
cmpsl
jecxz
xchg
inc
cmp
movl
add
cmpsb
cwtl
mov
add
pop
daa
lret
mov
or
and
out
add
xor
lds
sahf
pop
jmp
insl
adcl
movsb
cmpsb
test
loope
jo
pop
or
ret
jp
adc
pop
or
ret
pop
addr16
adc
imul
sbb
xchg
fs
mov
add
vmread
clc
rclb
jmp
icebp
xchg
lahf
jp
xchg
xor
ja
stos
fcmovne
sarl
lods
je
cmp
xchg
push
loopne
mov
cs
cmp
out
or
mov
jo
mov
cmp
mov
cwtl
movsb
shlb
shll
sub
xchg
xor
mov
sbb
cli
or
inc
aaa
ljmp
cmp
dec
or
inc
addl
repz
test
into
xchg
pushf
lock
mov
push
ficoml
sbb
aad
test
adc
cld
shlb
or
fstl
clc
stc
filds
jnp
push
xchg
movsl
jne
mov
pop
mov
pop
jge
lea
ficompl
call
add
outsl
push
jmp
in
das
rorb
andl
imul
xor
les
popf
daa
in
repnz
js
jg
mov
adc
cltd
fcmovnu
stos
arpl
sub
mov
into
sub
pushf
fcompl
ret
push
shlb
daa
out
jo
mov
pop
lock
adc
or
imul
dec
out
and
jmp
inc
inc
mov
dec
je
stos
mov
mov
aad
test
test
insl
pop
inc
dec
das
jmp
jp
ret
cmp
xorl
push
add
jmp
scas
mov
xchg
or
and
lcall
and
int
push
fadds
sub
fdivrp
daa
cmp
psrld
lcall
popf
shll
adc
lret
lods
shrl
push
sub
and
jne
ret
sti
sub
dec
mov
movsl
add
jle
dec
push
xchg
sbb
mov
call
add
movsl
pop
mov
add
mov
insl
mov
sbb
sub
popa
stos
enter
cmp
sarl
pop
imull
mov
dec
sbb
cmp
mov
push
lea
xchg
hlt
popa
fwait
mov
orl
jge
arpl
mov
nop
popf
ljmp
icebp
stc
pop
add
jmp
push
ss
add
rorl
mov
pop
inc
or
mov
or
ljmp
adc
loopne
jno
ret
push
ljmp
test
scas
call
mulb
pushf
sti
pop
sub
cmp
mov
nop
xor
ficompl
std
and
dec
sbb
rcr
rcrb
loope
mov
xchg
dec
push
mov
aas
sub
test
lcall
cmp
ljmp
hlt
sub
cmp
outsb
lea
mov
rclb
les
jo
aam
and
cld
inc
mov
lret
add
rolb
sub
repnz
or
leave
sbb
push
add
add
popa
jnp
push
xchg
push
rorl
or
aaa
jo
mov
mov
out
mov
cli
addb
cli
xchg
dec
imul
mov
hlt
lods
cmp
jno
popa
xchg
rcll
push
pusha
mov
int
cli
out
clc
pop
cmp
dec
mov
sub
mov
sahf
adc
adc
pop
nop
push
rorl
fcmovnb
mov
push
lods
pop
fisttpl
mov
xor
push
or
shl
or
mov
out
cmp
fisubrs
inc
fmuls
dec
sub
xchg
sahf
and
push
dec
mov
sbb
leave
cmpsb
xchg
push
and
je
bound
push
repz
pop
xchg
lods
cmpsb
pop
aam
xorb
das
xor
dec
cmp
outsb
mov
outsl
xor
enter
cmp
jne
xchg
in
addl
popa
cmc
std
pop
addr16
add
sub
fcoml
cmp
lds
add
sbb
jne
daa
ret
stos
aas
insb
push
test
pop
fsub
and
mov
lret
inc
xor
mov
cltd
stc
jb
outsb
pushw
gs
inc
das
int
jnp
push
lahf
xlat
test
frstor
inc
sub
movsl
loop
adc
mov
xchg
out
xor
outsb
adc
push
mov
adc
jno
sub
push
mov
insl
iret
outsb
push
sbb
lea
pop
outsl
push
shlb
mov
jp
movsb
jmp
in
lret
ja
test
fs
pop
push
movsl
push
aam
sbb
mov
sbb
shll
cld
mov
movsl
dec
insl
add
sub
fs
or
out
aam
ret
add
xchg
mov
add
adc
ss
adc
insb
pop
mov
movsb
stos
fwait
mov
cmp
inc
mov
fxam
inc
outsb
and
push
pushf
jle
fcomip
lock
int
pop
add
ds
mov
lret
mov
add
push
add
jns
fs
mov
sub
mov
or
je
inc
jle
jbe
sbb
dec
lods
sub
scas
pop
xlat
mov
addr16
cmp
div
cmp
inc
mov
shr
xchg
incl
mov
jno
fnstsw
inc
and
ss
mov
adc
push
jnp
or
mov
nop
cli
jge
cwtl
pusha
inc
call
push
int3
or
dec
sub
and
jo
add
jge
dec
add
int3
icebp
arpl
pushf
xchg
mov
leave
mov
push
lret
fidivrl
jp
xor
loopne
push
dec
mov
mov
aam
cmpsl
cltd
std
dec
jne
pop
sahf
pop
pushw
lods
fstpt
xor
stos
or
pop
cld
rcl
pop
mov
xchg
pop
sub
mov
mov
ret
pop
fistps
mov
mov
ret
loopne
lds
loop
repz
fs
mov
or
test
dec
fisttpll
in
pop
inc
mov
push
or
int
sbb
mov
imul
push
dec
call
out
push
stc
ficoml
cld
cmp
aam
xor
icebp
add
insl
dec
lret
cmpsb
inc
cld
add
mov
cmp
mov
adcb
scas
xchg
jmp
fcomp
or
xor
addr16
jmp
dec
addr16
inc
mov
jbe
or
imul
mov
push
bound
ja
push
cmp
mov
mov
test
rcl
hlt
pop
xor
add
test
pop
out
icebp
cli
addr16
xchg
scas
jb
dec
call
stc
subl
mov
xor
mov
push
sub
mov
das
jns
test
mov
xchg
dec
jl
and
fwait
sahf
sarb
adc
push
and
inc
xor
push
stos
jae
sbb
and
adc
loop
sbb
mov
mov
or
xchg
lret
jnp
pop
mov
sbb
sbb
mov
shll
les
adc
fstl
les
push
mov
into
test
sahf
out
out
iret
mov
or
adc
int3
js
nop
mov
dec
ret
pop
or
dec
inc
je
pop
sub
mov
xor
adcb
adc
test
and
jnp
xor
icebp
loope
inc
cltd
in
xor
stos
xor
shlb
inc
jno
mov
adc
pop
and
sub
jbe
lea
loopne
cmp
push
jg
xchg
ror
mov
sbb
jbe
std
lods
popf
adc
loope
fwait
xor
xor
push
pusha
mov
xchg
adc
or
scas
pop
sbb
xchg
or
adc
pop
adc
inc
pop
xchg
mov
mov
ret
push
loop
idivb
mov
fistps
cmp
mov
dec
cli
loopne
xchg
std
ljmp
repz
sbbl
jbe
push
mov
jle
sarb
sbb
ret
cmp
test
loopne
mov
fsubs
mov
fwait
mov
add
outsb
dec
dec
loope
mov
in
in
mov
ds
jno
jo
fsts
jg
fcmovb
stos
shll
insl
push
dec
popa
roll
stc
fs
sub
mov
jmp
stos
dec
push
mov
ficomps
xchg
mov
nop
inc
out
leave
roll
xchg
xlat
xchg
xchg
or
leave
fcomip
adc
mov
and
inc
jecxz
mov
xchg
push
mov
add
cltd
enter
inc
fstpl
sub
jl
and
loope
xlat
xor
out
mov
mov
mov
push
mov
push
scas
fs
stos
adc
xor
ss
es
cwtl
xchg
push
into
cmp
xor
push
addl
cmpsl
lea
mov
mov
push
jno
jmp
dec
mov
xchg
movsl
stos
sahf
mov
icebp
cs
into
sbb
popf
inc
dec
jle
xorl
mov
cwtl
xchg
push
or
lret
aas
into
jg
pop
ret
cld
sub
testb
mov
cld
push
loope
mov
cs
sub
lds
int
pop
jno
loop
bound
inc
or
pop
out
insb
add
dec
imul
ds
in
mov
mov
jno
cltd
adc
mov
repz
orl
jns
fisttpl
es
mov
in
gs
out
sti
notl
mov
lock
mov
pop
out
clc
push
data16
clc
ds
mov
into
dec
pop
orb
cmp
xchg
mov
adc
mov
ss
sbb
mov
mov
xor
mov
mov
xor
loop
aad
fs
and
cmpsl
ret
hlt
inc
and
mov
sbb
sbb
jp
dec
xor
mov
push
mov
pushf
xor
add
rcl
lret
inc
imul
movsb
or
addr16
and
cltd
je
fwait
jl
or
movsb
mov
push
flds
loopne
adc
int3
in
je
jle
out
dec
and
pop
call
mov
stos
pop
jns
sub
mov
sub
fadds
inc
push
pop
sbbl
test
repnz
sbb
xor
cmp
mov
xchg
and
mov
subb
imul
rclb
jb
mov
call
sbb
sub
pop
add
test
inc
mov
mov
push
sub
push
and
faddl
lret
jg
mov
out
aam
jmp
aad
jle
repnz
hlt
lods
mov
xchg
inc
cld
movzbl
xlat
int
aaa
xor
jb
popa
filds
fstpl
ja
cmp
dec
xor
cmp
inc
sub
and
int3
stos
add
into
cld
or
movsb
mov
stos
popa
ret
stos
shlb
fidivs
fldcw
xor
pop
sbb
push
or
mov
imul
push
adc
cmp
movsl
and
dec
add
loop
mov
movsl
in
xchg
cltd
scas
mov
fnstsw
jnp
lods
adc
cmp
outsb
cmpsb
shl
adcb
mov
mov
stos
push
sub
out
lret
in
mov
add
mov
xchg
mov
jmp
or
mov
sub
dec
stc
inc
test
fimull
inc
inc
and
dec
cli
pop
mov
iret
js
xor
xchg
pop
out
jne
push
dec
pusha
pop
or
push
sub
adc
pop
fwait
mov
xchg
in
sti
ljmp
movb
je
and
cld
push
jae
das
pop
imul
dec
push
xchg
push
shll
lcall
mov
xchg
cmp
sub
mov
ljmp
mov
lahf
sub
cmc
enter
xchg
fwait
test
fs
inc
mov
addr16
in
pop
imul
ljmp
mov
mov
ss
mov
rclb
mov
inc
dec
lea
jo
loopne
mov
mov
loopne
fnstenv
icebp
fdivl
jl
jno
lods
mov
sub
push
shl
pop
push
enter
loope
cmp
add
mov
dec
in
mov
cmpsb
inc
xorb
dec
ljmp
and
sti
in
jb
cwtl
mov
sbb
cmpsl
dec
dec
aam
mov
mov
stos
test
or
aaa
rorl
push
mov
pop
pop
inc
jns
adc
inc
ret
add
test
adc
loop
test
cmpsb
mulb
or
inc
adc
cltd
sbb
and
mov
shrb
std
repz
xchg
shrl
loopne
dec
add
das
mov
or
daa
mov
cmc
shlb
cld
scas
mov
leave
lret
das
fs
sahf
inc
adc
lret
mov
dec
lcall
insb
jp
loopne
xor
dec
cmpsb
lcall
test
cmc
stos
or
test
mov
clc
iret
int
add
rorl
sbb
daa
inc
dec
push
or
rcr
add
mov
pop
test
loope
or
sub
adc
push
test
cli
insb
out
in
sub
imul
xor
arpl
out
scas
cwtl
popa
inc
xchg
push
pusha
andl
inc
clc
jmp
mov
xchg
cmc
aas
lods
sbb
sbb
xchg
popa
es
dec
ja
mov
insl
and
rcrb
dec
sbb
xor
aad
insb
int
xor
dec
mov
iret
shrl
das
and
inc
mov
mov
stos
je
xlat
stos
or
mov
out
or
inc
and
mov
push
xchg
repnz
sbb
jmp
xchg
pop
or
sub
cs
or
adc
sahf
xor
push
fsubrs
xor
aad
xchg
shl
adc
shlb
adc
adcb
sbb
dec
ret
xchg
mov
and
out
mov
and
in
cmp
loop
dec
adc
or
xor
xor
push
aas
jne
jle
and
imul
testb
imul
inc
jo
sti
shlb
fcomp
lock
lods
push
cmp
add
and
dec
scas
and
sub
sbb
sarl
ficoms
inc
cld
sub
mov
push
push
leave
rcr
cmp
cmp
loope
mov
add
aad
and
jnp
pop
sbb
cmp
push
jge
shrb
and
imul
sti
push
mov
push
jae
inc
sbb
cmp
js
and
movsb
dec
pusha
mov
loopne
ss
xorb
cmp
adc
adc
xchg
dec
arpl
pop
push
outsb
in
push
mov
popa
adc
sarl
jb
pop
mov
mov
out
mov
and
xor
shl
sbb
into
adc
das
push
jg
mov
leave
sbb
xor
aas
test
inc
jecxz
xor
jnp
push
xchg
mov
imul
cli
jae
in
mov
cmpsl
push
sti
fsubrl
cmp
dec
sub
js
mov
cmp
jl
stc
out
mov
out
add
fisubrs
sbb
jnp
cmp
jge
jmp
sbb
pusha
mov
sub
ret
sbb
inc
push
xor
test
or
push
xor
test
or
mov
out
andl
xlat
pop
mov
sub
mov
xchg
add
xlat
add
and
cwtl
arpl
xlat
dec
ja
ss
push
xchg
pop
inc
lds
add
fcomps
fcmovnu
sar
movsl
pop
pushf
jmp
ja
nop
inc
adc
sub
iret
mov
mov
movsb
adc
push
data16
shl
lds
add
adc
xchg
jno
outsb
sub
adcb
test
rol
adc
dec
popa
out
test
mov
mov
aam
jecxz
je
mov
jbe
pusha
cmp
add
or
in
fldt
stc
adc
sub
lahf
sbb
xchg
in
mov
add
test
and
data16
std
xchg
sbb
outsl
bound
int
out
sub
cltd
xlat
test
and
add
push
in
ds
xor
inc
jns
iret
pop
and
adc
notb
pop
fcompl
sbb
sbb
sbb
sbb
mov
subb
jbe
push
or
mov
bound
xor
inc
xchg
pop
fwait
xchg
vrsqrtss
and
ja
movq
out
xor
cmpsb
arpl
aas
cmp
lret
pop
lock
inc
xchg
je
lret
fbstp
insb
jge
push
xor
fs
imul
sbb
push
add
pop
imul
xchg
sub
enter
xor
pop
and
cmp
mov
loopne
cmp
sub
imul
inc
pop
call
jle
adc
call
push
loopne
cmp
dec
je
fs
stc
mov
out
ret
icebp
addr16
cmp
gs
out
and
mov
lds
sbb
incl
mov
negb
mov
xchg
int
rclb
adc
mov
push
cmp
sub
repz
std
jge
leave
sub
mov
or
inc
adc
loopne
sub
xchg
adcl
outsb
push
xchg
out
aaa
mov
arpl
out
stos
dec
jnp
fwait
push
xchg
je
jecxz
sub
and
xchg
fsubr
mov
add
lret
int3
iret
inc
dec
cwtl
sar
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
and
push
imul
cmp
movsl
jecxz
andl
mov
push
jmp
imul
rolb
mov
dec
jge
ret
dec
push
jle
jmp
mov
and
jb
adc
adcb
mov
lods
cs
mov
popf
xchg
mov
cmp
sub
addr16
mov
xor
sub
sbb
pop
mov
mov
sahf
movsl
cmpsb
shrb
cltd
add
dec
mov
mov
sub
lea
stc
mov
add
stos
lods
pop
addl
push
ljmp
andl
out
push
mov
xchg
sbb
daa
incl
popa
outsl
xor
cwtl
jns
mov
call
pop
adc
bound
dec
mov
jno
adc
dec
cltd
iret
cmp
pop
pop
dec
sbb
leave
jg
push
cwtl
icebp
xchg
jl
sahf
testl
adc
cs
shlb
loopne
scas
std
pop
dec
push
pop
cli
or
cmp
in
push
shrb
jns
push
ss
lret
jg
xchg
jae
test
add
jo
mov
repz
sbb
mov
mov
bound
add
cmp
xor
int
mov
jnp
sbb
sub
test
cld
in
orb
mov
dec
int3
lea
and
nop
dec
add
pop
mov
stos
outsl
push
fidivrs
inc
fstpl
ja
pop
push
jg
cmp
mov
scas
adc
add
sub
aad
mov
je
dec
push
out
cmp
addr16
aad
and
push
sbb
loopne
daa
xor
aaa
cld
into
and
testl
lcall
mov
stc
push
mov
inc
sbb
ljmp
mov
xchg
loopne
mov
mov
cli
aam
fprem
cmp
sub
mov
test
pop
inc
mov
in
xchg
sbb
pop
out
push
std
das
aaa
out
setle
jmp
adc
inc
mov
pop
xchg
mov
push
icebp
cmc
sub
add
test
imul
mov
jp
adc
rcll
out
adc
sbb
mov
or
imul
mov
pop
jo
pushf
jo
cld
std
cmpl
in
and
and
mov
and
mov
icebp
mov
test
jp
or
cmp
mov
jecxz
jae
insl
adc
outsl
ret
sub
sub
faddl
and
cmpsb
mov
movsl
loop
outsb
mov
mov
testl
inc
repz
movsb
inc
leave
dec
test
dec
out
movsl
cmp
into
sbb
push
insb
add
test
loop
push
pop
jecxz
dec
ret
addb
jne
psrlw
dec
inc
lahf
xchg
inc
add
and
fidivs
mov
cltd
push
cmp
aaa
sub
jecxz
nop
pusha
outsl
xor
lahf
push
test
call
mov
mulb
imul
mov
imul
dec
push
xchg
pop
mov
push
add
jl
mov
jp
jns
sahf
dec
sub
daa
rorl
iret
imul
adc
out
pop
cld
lcall
je
in
mov
scas
hlt
add
and
jnp
lock
pop
jp
inc
xor
dec
dec
imul
mov
push
cmp
sub
or
pop
and
call
xchg
pop
sbbl
in
sbb
into
pop
in
or
sti
add
add
add
and
xor
jg
fnstsw
xor
push
fdivr
outsb
xchg
fisubrl
inc
hlt
mov
subb
mov
mov
jbe
rcr
shlb
mov
push
xor
int
and
and
leave
pmulhw
xchg
push
sub
ret
ja
js
dec
jle
xchg
push
mov
nop
stos
pusha
cmp
mov
daa
pop
ja
xchg
dec
add
sahf
cwtl
int
jl
pop
insb
test
dec
inc
jnp
popa
push
push
inc
flds
xchg
mov
nop
or
ret
out
pop
shll
xchg
mov
loop
inc
fiadds
cmp
adc
movsl
orb
add
xchg
or
cmpsl
clc
mov
xchg
sub
mov
jns
and
stc
inc
sarb
dec
fwait
sub
xchg
into
or
cmp
adc
daa
imul
jbe
fsts
sbb
push
clc
lock
test
push
sahf
imul
es
mov
mov
add
fmull
ja
dec
sbb
lret
jle
pop
cmc
pop
add
es
stc
shll
shlb
sbbb
mov
sub
ljmp
xlat
push
xchg
adc
lcall
jl
into
pop
movsl
aas
xor
mov
in
cmp
ds
lahf
adc
out
gs
push
test
add
inc
xor
or
sti
jb
inc
cmp
stos
pop
pop
xor
clc
and
stc
dec
xor
xlat
or
adc
bound
mov
jp
and
mov
call
adc
aas
nop
aam
fcoml
bound
push
cmp
mov
aaa
jb
and
xchg
push
ja
movsb
addr16
test
jle
jns
aaa
sbb
aaa
sub
adcb
jge
out
pop
pop
pop
xchg
cmp
sbb
mov
js
cmp
pop
lea
inc
ljmp
inc
pshufw
jl
jb
stc
pop
pop
in
add
ret
mov
add
and
out
scas
scas
iretw
pop
in
sbb
xchg
sbb
or
stc
aam
out
ret
arpl
je
push
adc
ret
out
mov
jno
stos
inc
out
or
rorb
shl
and
push
test
xor
arpl
jne
mov
push
repz
add
test
les
movsb
inc
popf
ss
mov
xchg
inc
jecxz
cli
aas
cwtl
xor
mov
in
aad
aas
cmc
and
sub
pop
mov
push
mov
or
aad
push
push
xorb
xlat
inc
pop
popa
inc
pop
jg
lcall
cld
sbb
jbe
pop
aaa
and
ss
call
cltd
shrl
jb
ud0
jg
ss
sbb
out
repnz
pop
jle
xchg
adc
jmp
mov
es
push
cmpsb
cmp
push
fisttpl
sub
fwait
jmp
mov
cmp
fdivp
insl
adc
fs
pop
cld
call
int3
or
xor
and
imul
ljmp
cmpsb
xor
dec
lahf
inc
xor
pop
subb
arpl
sbb
shr
xor
loopne
in
xchg
shl
fcomps
lret
pusha
sbb
adc
psraw
icebp
insb
aas
jle
pop
test
adc
subb
fcomps
xchg
mov
fcmovnu
xor
stos
inc
push
cmp
push
or
out
test
jne
and
in
jle
hlt
cmc
int
sub
mov
imul
sub
sub
mov
cwtl
in
pop
clc
das
or
notb
bound
push
enter
imul
bound
out
mov
test
test
dec
ljmp
nop
pop
shlb
rcr
jbe
jp
pushf
add
cmpsl
mov
pop
and
cli
cmp
outsl
mov
les
cmpsb
adc
das
movsb
aas
pop
and
cwtl
push
fmuls
sub
sub
sbb
stos
dec
ds
ffreep
inc
std
or
mov
setl
pop
lret
ret
cmp
mov
adcb
jp
fiadds
mov
jns
outsb
hlt
inc
xchg
jl
clc
mov
sub
sub
loop
cmpsl
add
jl
popf
shll
dec
imul
xchg
fwait
pop
inc
lds
shll
in
stos
dec
xchg
decb
push
mov
mov
mov
jbe
ss
and
xor
cltd
dec
xor
pop
je
jmp
js
mov
pop
jno
in
je
lods
cmpsb
add
popa
adc
push
nop
loope
adc
and
rcrl
and
inc
jge
push
int3
iret
xchg
lret
push
add
div
pop
in
cmp
inc
add
jge
inc
dec
sub
dec
cmp
add
mov
rorb
mov
add
lret
xchg
enter
jns
dec
pop
lods
pushf
lret
jmp
enter
test
xor
jmp
fildl
add
fs
adc
add
lcall
mov
fidivs
mov
lods
jns
xchg
pushf
mov
adc
insl
leave
daa
sub
jmp
inc
ror
scas
int3
add
aaa
and
mov
testb
call
gs
or
or
jb
repz
mov
xchg
mov
sub
addl
mov
lcall
or
int
addr16
mov
lcall
pop
mov
outsb
mov
movsb
lcall
pop
push
out
std
jne
mov
rorb
inc
scas
in
mov
lea
fs
mov
or
add
in
das
out
dec
dec
je
inc
repnz
inc
mov
mov
push
jecxz
dec
pop
adcb
mov
xlat
lods
mov
in
dec
movswl
stos
fnsave
pop
xor
cmc
jg
mov
xchg
mov
pop
cltd
movsl
xchg
shrl
scas
scas
mov
cs
int3
call
inc
loope
push
dec
push
fsubrl
xor
add
ss
dec
loop
dec
xor
sbb
nop
jnp
and
cwtl
hlt
stos
sub
xchg
or
and
jge
jbe
push
jno
int
push
rclb
xorb
dec
mov
lret
jns
and
or
ss
inc
jle
push
or
xchg
out
pop
and
xlat
icebp
test
mov
dec
add
sbb
inc
sbb
repnz
jbe
sub
push
mov
add
iret
fcoms
push
pop
loope
icebp
sub
xor
jecxz
mov
pop
sub
mov
js
popf
stos
sti
ljmp
cmpb
or
daa
movl
adc
pop
int
dec
lret
cld
test
sub
loopne
int
gs
inc
repz
aam
int
jge
push
in
push
arpl
jno
das
aad
and
push
xchg
add
call
mov
adc
in
shr
mov
xor
pop
repnz
fdivrl
lret
aas
lahf
rcll
das
mov
movsl
lret
jae
dec
push
jp
iret
aaa
lock
xchg
and
mov
outsl
movsl
mov
pop
xor
gs
and
and
call
push
push
or
cmc
mov
inc
push
xor
cmp
inc
loopne
sub
or
notb
sub
gs
insl
jle
push
insb
xchg
push
adc
push
hlt
push
repnz
push
es
test
push
aam
sub
or
loop
lea
imul
jle
xchg
icebp
cli
mov
cwtl
bound
mov
cmp
mov
aaa
icebp
dec
sub
imul
mov
jp,pn
add
sub
or
inc
dec
mov
adc
lret
addl
in
push
xchg
into
arpl
jge
in
cmp
shll
jle
lock
push
pop
pop
jge
mov
outsl
gs
mov
sbb
sbb
add
sub
lods
dec
and
pushf
inc
sub
xchg
int
push
inc
sti
fwait
add
shlb
ds
out
sahf
and
mov
sarl
gs
shl
xor
dec
xlat
adc
lret
and
test
mov
cmp
shl
sub
mov
mov
ss
jle
sbb
scas
pop
ficomps
jae
sbb
jo
ficoml
jg
scas
xchg
aad
and
jns
jmp
movsl
in
pop
negl
out
jg
cmp
mov
lahf
push
add
or
ffreep
and
pop
dec
inc
add
add
mov
rcr
push
mov
push
ret
outsb
nop
incb
in
push
xchg
cli
fdivs
fimull
in
push
mov
add
inc
mov
fwait
cmp
fwait
repz
and
push
lods
out
rolb
cltd
sti
stos
movb
mov
test
imul
cwtl
outsl
xchg
sub
and
mov
popa
into
ljmp
pop
mov
js
jg
loop
movsl
das
sub
lahf
sbb
out
out
arpl
xchg
xor
sbb
out
bound
sub
mov
or
xor
jmp
inc
mov
push
or
cmpsb
inc
in
shl
inc
testb
cmp
pushl
dec
mov
enter
sbb
shr
out
push
pop
gs
push
sbb
imul
daa
pushf
mov
or
push
xor
sbb
sbb
cltd
stc
jge
fists
add
fidivs
mov
repz
ret
sbb
mov
leave
mov
jg
mov
cmp
cmp
iret
push
add
inc
pop
subl
push
sub
testl
idivl
fsubs
sahf
push
aam
ret
out
and
inc
lds
iret
orb
inc
xchg
imul
xlat
orl
stc
cld
jns
sarl
mov
sub
fs
fs
call
push
in
cmpsl
fiadds
ja
jp
sub
jle
adcl
mov
mov
push
sbb
into
add
sub
pop
aad
stos
roll
into
push
scas
into
cmp
in
pop
ljmp
in
lods
sbb
jbe
inc
pop
loopne
sbbb
cmc
jns
add
push
das
jp
aad
nop
mov
stos
out
pop
mov
lock
fwait
push
mov
mov
and
inc
cld
fidivl
outsl
rcr
adc
cmp
sub
out
xor
push
notb
sub
adc
inc
fwait
dec
jne
and
or
repz
cmc
mov
addr16
stc
in
into
pop
fwait
mov
push
xorl
add
popa
adc
pop
int
mov
pop
lret
lahf
iret
inc
dec
loope
outsb
cmp
jle
add
in
cmp
movsl
mov
std
cwtl
jmp
loop
push
pop
fstl
sub
sahf
lret
lods
outsb
sti
xchg
jmp
xchg
fs
fcomps
popf
imul
jae
jmp
test
adc
bound
jle
inc
mov
xchg
sti
mov
pop
rcrl
sub
jb
adc
mov
xchg
add
and
test
sbb
popa
aad
test
repnz
mov
nop
repnz
or
sbb
mov
dec
lods
cs
xchg
add
loopne
adc
xchg
cmp
test
push
clc
or
mov
push
movsl
push
sub
xchg
add
and
inc
in
in
inc
stos
jmp
je
shrb
dec
scas
aam
in
push
data16
sub
xchg
xchg
rcll
jnp
jmp
xor
xchg
jo
into
fwait
in
shll
call
hlt
sub
jle
push
data16
jle
decb
sub
iret
int3
es
jl
adc
inc
loop
aas
ds
ljmp
cmc
outsl
addr16
xor
pop
ret
push
jmp
sub
add
movsb
dec
mov
das
sub
cmp
xor
shrb
adc
sub
or
push
inc
lahf
mov
jae
imull
scas
push
fiaddl
fidivrs
in
hlt
push
lock
in
mov
push
call
mov
pushf
jno
popa
sub
or
mov
lea
jl
mov
push
fldpi
iret
ljmp
bswap
adc
xchg
xor
push
negl
stos
pusha
mov
fcmovnu
mov
jmp
pop
jle
or
xchg
dec
das
stc
inc
dec
sti
xorl
mov
push
cmp
mov
sbb
or
in
push
inc
sbb
cmp
mov
cmp
rcrl
insl
xchg
mov
pop
xor
orl
cmp
iret
xchg
out
or
add
push
mov
jbe
mov
int3
push
dec
jl
jb
sbb
inc
test
lahf
xchg
mov
jnp
add
mov
scas
mov
push
sub
fdivs
jl
sbb
loop
fnstsw
pusha
sub
mov
push
inc
mov
in
sti
pop
lods
insb
inc
or
sub
adcl
xchg
or
jno
pop
mov
sbb
popa
pop
dec
js
hlt
inc
ret
mov
jg
dec
outsb
and
push
in
adc
push
xor
xchg
ret
out
add
add
fwait
stc
out
xchg
jo
cld
or
les
test
lahf
mov
rol
sub
gs
jmp
lock
pushf
jnp
and
and
sub
bound
jmp
sbb
or
es
cmp
cwtl
loopne
sub
loopne
rorb
push
pop
sarb
adc
scas
inc
inc
leave
enter
js
xchg
cmp
test
xor
add
mov
or
in
push
jl
gs
dec
push
lcall
xchg
mov
add
stos
stc
mov
xor
ficompl
rcrl
movl
pop
dec
cmp
and
xor
dec
test
ss
xchg
jnp
mov
mov
dec
dec
jp
hlt
dec
xchg
mov
pop
adc
cwtl
shrl
mov
js
loop
sbb
or
or
cli
inc
xor
ret
out
pop
fidivl
lds
gs
dec
and
add
nop
stos
jp
jmp
dec
lods
add
mov
jns
sbb
mov
int3
push
sbb
mov
daa
ljmp
sbbb
adc
imul
loope
or
stos
sbb
xchg
mov
xor
stos
leave
stos
hlt
aad
icebp
xchg
shrl
xchg
adc
pusha
out
pop
mov
push
mov
jge
in
lods
sub
jmp
shlb
sbb
out
cmc
xchg
ljmp
sbb
push
or
pop
lahf
in
into
lods
xchg
sub
sub
mov
mov
cli
in
scas
stos
xchg
xor
insb
popf
movntps
push
iret
xor
sbb
pushf
mov
dec
mov
adc
jmp
pmulhuw
cmpsb
fmul
movsb
gs
aad
mov
cmp
xor
xchg
pop
gs
cmp
jmp
fwait
popf
pusha
repz
lods
sti
inc
inc
pop
shrl
leave
push
lods
push
clc
mov
jne
mov
push
jl
mov
jl
cmp
inc
inc
inc
sbb
test
addl
nop
ret
xor
inc
data16
loope
mov
shrl
add
or
mov
adc
andb
jns
fcoms
push
mov
movsb
int
mov
cmpsl
xor
cs
dec
out
gs
addr16
adc
xchg
dec
fwait
sub
mov
andl
test
and
popl
cli
out
dec
lea
pop
std
adc
data16
push
and
mov
lahf
sahf
mov
ja
in
jl
mov
sar
lret
ret
pop
lcall
jmp
aas
sub
movsl
test
fildl
adc
stos
adc
lahf
es
mov
ret
lret
xchg
sbbb
jmp
push
ja
in
jmp
or
pop
jmp
pop
popf
push
push
xchg
dec
add
std
xor
mov
mov
and
outsl
or
cmp
cmp
add
mov
mov
shlb
out
mov
mov
jl
aaa
push
mov
aad
cld
lock
mov
dec
mov
rcrl
lret
ljmp
arpl
add
inc
fsubr
inc
aad
rcrl
sub
movsb
push
andl
enter
push
sbb
fstpl
mov
js
pop
jno
sub
test
cld
clc
loope
aaa
dec
aaa
out
xchg
loopne
aas
orl
cwtl
stos
pop
pushf
add
data16
push
mov
xchg
shlb
sarb
xor
jl
mov
jmp
mov
mov
daa
pop
dec
das
xchg
push
stc
hlt
movsb
roll
add
xchg
cmp
int
les
inc
mov
mov
enter
mov
lret
repz
gs
popa
stos
aam
inc
jl
mulps
push
inc
dec
mov
sub
adc
leave
cmp
mov
daa
add
dec
xor
jle
mov
movsl
adc
les
enter
push
push
xor
cld
imul
mov
sub
push
mov
sbb
test
pop
pop
jae
popa
jecxz
mov
xchg
stc
mov
ljmp
jb
pop
pop
sub
sbb
cmp
fsubrl
pop
xchg
bound
aam
jae
stc
cwtl
xchg
cli
jecxz
mov
ret
out
insb
inc
aad
icebp
stos
inc
sbb
push
out
rorl
mov
xchg
pop
sub
out
pop
ret
icebp
mov
push
scas
cli
repnz
aaa
fisubs
add
inc
insb
test
jmp
xor
add
sub
push
lds
insl
jo
xor
repnz
cmp
fisttps
cwtl
mov
inc
inc
popa
iret
mov
outsb
f2xm1
sbb
mov
push
fstpt
ljmpw
and
pop
inc
hlt
cmp
in
pop
pop
aas
inc
and
imul
sub
stos
mov
xchg
out
cli
clc
xchg
sahf
mov
ret
xor
xor
sub
mov
popf
insb
popf
das
pop
cmpsl
js
test
xchg
in
add
xor
xor
mov
mov
sbb
sarl
aad
mov
in
xor
cmpsb
push
pop
sub
jecxz
dec
stc
cmp
pop
jmp
ja
sub
ljmp
push
push
in
xor
popf
and
and
decb
dec
mov
fidivrl
adc
sbb
fmuls
dec
test
fucomip
daa
or
je
imul
mov
sub
cmp
push
repz
arpl
push
int3
adc
push
fucomi
push
fs
out
jmp
mov
jl
cmp
push
nop
addr16
or
mov
mov
push
push
fstp
xchg
push
ljmp
jecxz
test
or
pop
lea
loopne
xchg
or
cwtl
je
pusha
mov
scas
iret
fildll
mov
ljmp
mov
cmp
out
mov
sub
xor
push
test
sub
icebp
scas
mov
inc
push
data16
aas
sbb
sbb
addr16
insl
push
stc
imul
jns
jne
push
ret
rcrb
dec
popa
inc
xor
loope
jg
adc
js
aas
test
daa
and
inc
xlat
inc
loop
or
aaa
arpl
flds
inc
push
mov
lock
movsb
repnz
push
push
sub
subb
jmp
adc
sbb
rol
xchg
addr16
orl
in
xchg
adc
not
out
sub
pop
mov
test
push
ljmp
fisubrs
jb
ret
jnp
cmpsl
or
rcr
loopne
faddl
int
int3
scas
outsb
xchg
and
or
fs
inc
sub
ljmp
and
movsb
sub
or
scas
loopne,pn
lcall
jnp
xorl
stos
or
loopne
xchg
cld
cltd
es
xor
push
inc
iret
dec
xor
jb
cli
inc
xlat
stos
loopne
fidivrs
or
negb
push
ds
iret
sub
adc
mov
imul
cs
outsl
jge
je
sarl
pop
imul
push
fdivrp
cmpsb
insl
inc
pop
mov
loopne
inc
dec
inc
add
out
push
nop
xlat
ficompl
dec
daa
dec
mov
fstps
dec
push
pop
into
mov
jle
xchg
faddp
and
sbb
push
adc
sbb
xlat
lcall
pop
fidivl
lods
and
imul
adc
out
into
nop
cs
es
test
popa
push
adc
repz
or
test
inc
mov
in
pop
cmp
jns
dec
mov
fldl
xor
xlat
in
pusha
out
and
out
cli
mov
lret
cmpsb
xchg
insb
xchg
outsl
or
inc
jmp
pop
test
mov
ret
ret
push
jle
xchg
repz
testl
xchg
into
jmp
mov
jo
add
mov
xor
mov
or
sbb
adc
adc
sub
stos
sub
inc
xor
fstpt
cmpsb
push
pop
inc
cld
jb
mov
dec
mov
mov
scas
movl
and
dec
test
jbe
jg
sbb
dec
inc
movsb
add
push
arpl
or
icebp
insb
jge
cmpsl
push
repnz
ret
sub
fcomip
sub
out
jl
xchg
popf
outsl
mulb
data16
aaa
xor
inc
repnz
xorl
push
loope
mov
sub
push
add
mov
xor
cmp
sbbb
test
shlb
subl
out
dec
sub
daa
imul
sub
iret
in
sub
ret
mov
ss
sub
cmp
push
mulb
push
ljmp
std
jnp
enter
cltd
dec
fsubrl
nop
frstor
xor
cmp
or
mov
mov
sahf
mov
or
test
jno
ja
dec
cli
sbb
test
jb
int
inc
and
ss
ret
inc
aad
dec
xchg
mov
jp
pushf
or
xor
in
xchg
adc
mov
imul
push
movsl
lock
inc
and
mov
add
add
data16
inc
xchg
xor
jle
pop
adcb
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jne
js
jne
