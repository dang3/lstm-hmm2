adc
add
roll
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
in
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
jb
inc
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
mov
inc
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
and
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
fldl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
adc
inc
add
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
pusha
push
call
mov
loopne
mov
mov
mov
add
jmp
sti
add
add
add
jne
lock
mov
add
push
push
push
push
lea
push
push
push
push
push
push
call
fs
fdivs
add
mov
pop
add
jbe
add
add
mov
loop
into
add
sti
add
pusha
iret
les
aam
sub
fwait
add
shlb
add
add
add
in
sub
pop
popl
push
push
call
add
mov
out
add
xchg
xlat
jb
mov
leave
xchg
push
lds
cmc
xchg
testb
add
pop
add
cld
xchg
testb
add
add
fyl2x
add
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
call
mov
jnp
add
add
add
cli
pop
jmp
add
mov
rolb
lods
in
lret
jl
mov
push
loope
xchg
xchg
rolb
movsl
lds
add
insb
add
subb
mov
sub
pop
push
push
push
push
push
lea
push
call
test
push
pop
jl
jmp
add
xchg
fadds
fadds
add
enter
add
sbb
les
test
out
push
mov
loopne
push
add
add
imul
cli
push
gs
jno
movsb
jno
jbe
add
test
add
mov
loop
add
fst
in
jne
in
lock
push
call
push
lea
push
call
mov
mov
add
mov
mov
mov
add
in
std
add
fiadds
jmp
in
add
add
js
in
xchg
xchg
xchg
hlt
add
nop
pushf
add
add
pop
jbe
fwait
pop
mov
mov
add
lcall
dec
add
add
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
pop
cld
add
jle
add
mov
flds
lods
mov
add
fst
add
add
jne
add
int3
loop
add
imul
xchg
add
add
ret
pop
add
push
push
push
call
add
outsl
add
add
test
add
add
jl
add
out
ret
jns
nop
add
nop
fadds
imul
mull
add
pop
pop
pop
mov
pusha
scas
stos
pop
fisubl
add
scas
xchg
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
call
in
add
jp
mov
lea
push
add
leave
icebp
add
add
ret
out
mov
add
out
add
add
xlat
mov
jge
add
jnp
push
xchg
add
push
aad
add
add
enter
fistpl
std
lcall
data16
xchg
xchg
add
add
popa
sub
pop
ret
push
push
push
push
lea
push
push
call
add
jmp
fisttpll
xchg
add
add
add
add
testl
data16
pop
add
add
pop
mov
push
push
push
lea
push
lea
push
call
aam
fistps
mov
loope
leave
pop
lock
lahf
mov
mov
add
lret
add
leave
add
shlb
pop
shll
imul
add
pop
faddl
movl
sbb
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
mov
xchg
add
mov
xchg
js
mov
add
lret
incb
add
add
stos
lods
test
push
add
addr16
mov
out
enter
add
out
add
jecxz
in
popl
mov
xchg
fdivr
lcall
pop
in
push
lea
push
push
push
push
push
push
call
push
cld
nop
fldt
arpl
fadd
add
add
cmpsb
stc
flds
add
repnz
add
add
pop
add
mov
add
add
jb
add
mov
pop
insb
lea
mov
mov
mov
out
add
add
lcall
ret
add
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
sahf
icebp
add
jnp
add
shll
mov
addr16
xchg
add
frndint
std
leave
fildl
in
pop
jns
jge
add
push
sti
xchg
loope
add
add
cmp
add
xchg
add
subb
add
mov
faddl
add
ret
cmp
add
mov
xor
push
push
add
not
ror
inc
push
or
not
add
sub
sub
inc
pop
dec
lea
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
sahf
add
push
add
jb
scas
add
loop
add
rcl
test
fs
sbb
mov
scas
add
add
add
ja
in
fdivr
lcall
jne
push
push
push
push
push
push
lea
push
call
mov
add
add
add
add
lods
add
add
lahf
xchg
xchg
enter
add
xchg
stc
popa
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
call
add
pusha
add
roll
out
cltd
push
jl
add
add
scas
je
pop
popl
add
lods
xchg
add
add
add
cli
add
mov
movsl
add
ror
add
leave
add
add
mov
in
lea
add
lcall
inc
lock
push
push
push
push
push
push
call
test
add
xlat
rcll
addl
mov
outsl
pop
mov
les
xlat
roll
mov
mov
call
jo
repnz
ret
sub
pop
lea
push
push
call
xlat
cmc
mov
add
add
data16
push
mov
mov
add
hlt
xchg
add
filds
add
int3
add
pop
xchg
mov
add
frstor
shll
lcall
jne
add
mov
fs
sti
imul
in
clc
pop
push
push
push
lea
push
push
push
push
push
call
cli
ljmp
pop
int
add
bound
add
mov
fistpll
add
subb
push
add
push
out
add
mov
add
add
iret
add
add
add
jmp
jo
mov
add
test
ret
add
fidivrs
pushl
push
push
push
push
push
push
push
call
ja
rolb
add
add
add
pop
repnz
add
add
in
lock
mov
jb
adcb
mov
les
add
jne
push
lea
push
push
call
add
add
add
add
add
les
nop
add
mov
add
mov
add
add
add
add
xchg
add
outsl
add
mov
call
add
add
insb
add
idivl
add
add
mov
pop
lds
add
pop
add
loope
aad
in
hlt
lcall
repz
add
lea
push
push
push
push
push
lea
push
push
push
call
push
add
push
xchg
jb
arpl
add
imul
hlt
aam
add
add
add
add
shr
add
flds
nop
add
add
call
loope
mov
xchg
fdivr
lcall
jne
pushl
push
push
push
push
push
push
lea
push
call
movsl
xchg
add
add
jbe
lds
add
test
int
push
xchg
mov
mov
movb
mov
and
add
jp
lahf
push
xchg
add
add
in
in
call
push
push
sub
ror
push
and
add
lea
sub
xor
rol
ror
pop
add
sub
lea
inc
pop
push
push
call
mov
add
add
add
pop
xchg
mov
je
add
cltd
xchg
add
cli
mov
xchg
xchg
roll
repnz
add
add
jmp
fldl
add
lret
pop
add
add
icebp
testb
faddl
mov
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
je
add
add
int
mov
mov
test
mov
jns
fsubp
int
add
add
xchg
xchg
outsl
add
out
add
add
js
mov
imul
loopne
in
mov
add
iret
pop
in
rolb
cltd
add
cli
add
add
sub
pop
call
push
push
push
call
add
lds
add
add
add
add
frstor
pop
popa
add
js
fs
lret
hlt
lcall
inc
push
push
shl
sub
lea
xor
push
or
inc
add
inc
sub
add
rol
sub
pop
inc
lea
shr
shl
pop
push
push
push
push
push
push
push
push
lea
push
call
cmpsl
subb
add
add
in
std
xchg
add
mov
add
add
add
faddl
cwtl
pop
add
mov
lcall
push
push
push
push
lea
push
push
push
push
push
call
xchg
pop
add
add
int3
imul
jns
mov
pushf
push
add
xchg
add
add
stos
add
pusha
add
out
add
mov
leave
fwait
mov
repnz
lahf
lret
lret
add
mov
mov
add
lock
rcrl
add
jo
add
pop
add
addb
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
test
in
xchg
leave
cmpsb
out
mov
add
jbe
mov
add
roll
stos
add
add
add
cwtl
fdivl
js
lock
add
mov
jl
insb
lods
push
add
jno
in
fcomps
rorb
scas
rcll
push
push
call
js
jb
mov
hlt
jmp
in
imulb
lea
cmpsb
popa
add
movb
arpl
add
add
push
push
push
push
call
pop
sahf
hlt
cld
test
mov
mov
sar
pop
fisttpll
add
mov
add
popa
add
arpl
pop
push
mov
in
add
icebp
add
add
out
faddl
nop
xchg
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
call
add
fs
mov
pop
jbe
out
sub
add
outsl
shl
fwait
mov
sahf
mov
mov
rcr
mov
imul
pop
ja
enter
orl
add
push
repnz
add
fdivrp
lods
add
iret
lret
add
loop
add
pop
in
push
push
push
push
call
cmpsl
mov
mov
lcall
add
out
xlat
jb
in
add
add
leave
xchg
add
add
iret
mov
movsb
add
add
fadds
add
in
lock
lcall
ret
add
add
push
push
push
push
lea
push
push
push
push
call
add
jne
xchg
add
add
add
imul
add
lock
in
add
mov
add
out
xchg
add
mov
add
add
xchg
and
jp
xchg
int3
clc
enter
insb
mov
add
add
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
movsb
jmp
push
add
xchg
add
js
add
pop
mov
scas
add
add
jo
mov
add
pop
add
ret
push
rolb
in
test
add
add
std
fiaddl
in
in
lcall
xor
adc
jl
out
push
call
jnp
push
into
add
jle
mov
add
add
add
hlt
add
jmp
xchg
add
fidivl
push
mov
add
lea
loopne
jp
jle
popa
stc
add
add
add
int3
lcall
scas
add
add
lcall
jne
push
push
lea
push
call
in
add
add
data16
mov
add
in
xchg
stc
add
mov
add
add
lds
nop
cld
xchg
add
add
add
mov
pop
add
push
push
push
lea
push
call
loopne
mov
mov
rcll
movb
add
mov
rolb
jae
fdivrl
js
add
loop
xlat
mov
add
stc
stos
mov
inc
or
jno
adc
call
add
lock
mov
ljmp
sti
fwait
jmp
add
add
imul
pop
add
in
xlat
add
mov
sub
pop
xor
push
push
push
push
call
js
cli
in
jno
add
pop
add
xchg
add
imul
faddl
add
call
roll
add
xchg
add
int3
faddl
add
add
xchg
add
add
enter
test
je
mov
mov
ficomps
push
add
bound
in
lock
lcall
les
push
push
lea
push
push
push
push
push
push
call
addb
sti
mov
add
loop
sub
mov
jp
jb
jmp
mov
add
mov
gs
andb
sub
pop
add
pop
push
push
call
add
bound
imul
add
test
add
fwait
add
xchg
add
add
sub
pop
mov
xor
push
push
push
call
cld
loope
mov
add
add
add
mov
icebp
mov
add
addl
cld
add
add
in
lret
add
add
jnp
add
mov
in
add
add
imul
mov
add
add
add
in
add
pop
add
lcall
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
bound
rolb
les
movsb
enter
cwtl
mov
add
add
int
lahf
jo
add
add
insb
add
add
add
mov
push
add
jmp
fs
mov
mov
add
imull
add
mov
mov
imul
or
jno
adc
push
push
push
push
push
push
call
cltd
leave
jne
cltd
icebp
faddl
mov
xchg
addl
jnp
jp
mov
lock
jle
add
int
sbbb
scas
add
mov
fldt
call
mov
xor
push
push
push
call
lret
popf
add
add
pop
add
cli
mov
add
add
mov
add
jecxz
add
add
mov
je
les
mov
sti
add
mov
xchg
mov
mov
add
add
test
fs
add
add
testb
add
cld
lods
mov
out
sub
pop
add
push
push
call
xchg
fs
add
into
pop
test
add
loopne
repnz
movsl
add
push
mov
add
push
in
mov
sub
pop
sub
pop
push
push
push
call
add
add
add
push
add
xchg
mov
jle
add
sarl
xchg
ljmp
in
stc
fcoml
sub
pop
rep
push
push
push
push
call
nop
add
jo
mov
add
pop
popa
rolb
cld
add
jo
add
pop
add
mov
movsl
lahf
lds
add
jnp
add
jb
xorb
mov
test
outsl
push
in
add
add
mov
mov
lock
pop
mov
push
lea
push
call
add
sti
iret
lahf
add
int3
add
jmp
movb
test
mov
add
in
push
add
lock
pop
add
push
lea
push
push
lea
push
lea
push
push
call
add
pop
add
add
mov
add
add
gs
add
ffree
add
in
out
aad
add
pop
add
add
add
add
lcall
ret
add
add
push
lea
push
lea
push
push
lea
push
lea
push
push
call
fstp
enter
in
push
test
xchg
aam
add
add
pusha
lret
xchg
repnz
clc
test
ljmp
add
add
insb
in
iret
int
lahf
stos
js
lds
mov
pop
rclb
mov
roll
add
sub
pop
add
push
lea
pop
mov
xor
push
rol
sub
pop
mov
push
push
push
push
lea
push
push
call
xchg
mov
add
test
call
add
mov
outsl
ljmp
lea
add
cld
imul
add
add
sub
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
lret
lods
jne
pusha
mov
xchg
xchg
out
xchg
in
mov
add
add
pop
pop
push
faddl
add
xchg
add
jmp
add
pushf
add
push
addl
int3
add
cmp
ret
push
movsb
out
add
cltd
test
add
pop
add
push
lea
push
push
lea
push
push
lea
push
call
add
int3
mov
mov
movsb
add
pusha
jns
add
push
jl
push
fmuls
bound
add
add
nop
push
add
jae
pop
fcomip
mov
out
in
push
fistl
add
sub
pop
mov
xor
push
inc
ror
pop
add
add
push
push
lea
push
call
mov
xchg
jle
mov
fcoms
movb
jo
add
add
mov
push
add
add
add
xchg
add
add
add
add
negb
mov
mov
fdivrs
add
sub
pop
mov
push
push
sub
push
push
pop
add
dec
sub
add
pop
ror
ror
rol
pop
push
push
push
push
push
push
push
push
push
call
out
js
add
mov
in
add
add
add
xchg
add
add
add
add
add
loop
movsl
aad
add
add
mov
mov
add
mov
add
pop
add
fiadds
pop
pushl
push
add
rol
add
pop
call
push
push
push
push
push
push
call
movsl
add
iret
add
outsl
add
popf
movsl
add
add
pop
jmp
jns
add
add
add
stc
adcb
jecxz
call
cmpsl
add
jmp
scas
scas
arpl
xchg
pop
lahf
add
test
add
push
push
push
sub
push
xor
add
shl
rol
ror
sub
sub
pop
add
lea
pop
push
xor
sub
pop
push
push
push
xor
inc
pop
call
push
rol
pop
mov
push
push
push
lea
push
push
call
jo
test
add
push
add
add
add
mov
test
pop
out
cmc
push
std
addb
data16
test
std
add
mov
mov
add
fidivrl
add
add
mov
add
push
push
add
add
add
fadds
add
mov
test
push
not
inc
pop
push
push
push
push
push
call
add
test
les
lcall
jmp
fsubrl
mov
jle
lock
test
mov
in
lock
mov
push
push
push
push
push
call
add
out
add
flds
xchg
xchg
mov
xchg
popl
fstpl
add
add
outsl
add
cmp
add
pop
add
lcall
pop
in
push
lea
xor
not
pop
add
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
rorb
mov
test
cmpb
movsl
add
add
fidivrl
xchg
mov
add
add
sti
jle
fwait
call
push
mov
lcall
jae
xor
push
not
lea
shr
pop
add
push
push
sub
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
out
mov
out
in
add
icebp
add
js
fildl
lahf
in
les
add
leave
add
jmp
jle
into
je
add
negl
mov
movb
push
mov
add
loop
add
outsl
add
mov
insb
call
add
mov
jno
sub
pop
add
push
pop
pop
push
push
call
add
add
mov
mov
shll
mov
fiadds
jbe
mov
pusha
pop
int3
imul
movb
add
mov
add
sub
pop
mov
xor
push
inc
shr
sub
pop
rep
push
push
push
push
push
push
lea
push
push
call
cmc
pushf
out
mov
add
lods
add
divb
into
jb
imul
add
add
add
scas
lahf
aad
add
add
add
xchg
push
out
int
jle
add
add
push
add
add
addr16
add
in
loopne
lcall
dec
and
xor
adc
mov
inc
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
fcmovne
in
mull
mov
mov
lock
lods
push
add
jge
jae
mov
add
add
in
lods
add
add
mov
std
loopne
data16
xchg
jno
mov
movsb
js
add
add
lea
add
add
or
push
push
lea
push
push
push
push
push
call
add
pop
lods
xchg
add
cmpsb
aam
add
mov
fdiv
add
jne
add
cmpsl
xchg
push
outsl
mov
add
lods
mov
add
add
pop
mov
mov
add
add
push
sub
not
ror
xor
pop
or
je
mov
xor
push
push
lea
push
lea
push
lea
push
push
push
push
call
stc
mov
scas
popa
jmp
add
scas
pop
add
out
xlat
jb
loope
leave
mov
in
add
lea
in
add
rcrl
pop
mov
xor
push
push
push
push
call
add
add
mov
add
movsl
add
add
gs
xchg
add
cli
add
mov
loop
mov
add
add
add
xchg
add
out
add
popl
mov
aam
add
iret
jno
test
add
flds
jno
lock
add
popf
mov
in
lock
lcall
repnz
push
push
push
push
lea
push
push
push
lea
push
call
cwtl
out
add
pop
rorb
data16
add
push
pop
mov
xchg
add
sub
pop
add
push
push
add
inc
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
je
loopne
add
add
cwtl
xchg
loop
fiaddl
cmc
add
mov
mov
add
jmp
pop
xchg
jmp
in
pop
enter
add
add
add
mov
jbe
push
sub
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
repnz
add
fstpt
jnp
add
add
pop
popa
add
not
lea
repnz
cld
mov
sub
pop
add
push
inc
shl
not
add
pop
add
push
push
push
lea
push
call
mov
add
icebp
add
add
test
jle
idivl
add
roll
iret
add
add
loopne
fiadds
add
add
add
add
mov
add
js
mov
cmpsb
addl
mov
popa
add
mov
fimull
shrl
sti
sub
pop
pop
rep
push
sub
pop
mov
xor
push
shl
pop
or
je
push
push
lea
push
lea
push
call
add
cwtl
mov
insb
add
jecxz
in
add
jbe
add
rol
or
int
add
jb
rcll
mov
add
cmpsl
std
push
pop
add
add
je
pop
add
add
out
in
popf
add
in
fadds
cltd
clc
sti
enter
add
sub
pop
mov
push
add
inc
inc
pop
add
push
push
call
add
cli
sahf
mov
add
mov
popa
mov
out
pop
add
popa
loope
add
jo
pop
xchg
push
in
add
test
xchg
push
add
add
add
in
add
sub
pop
add
rep
push
xor
pop
pop
push
push
shr
lea
add
push
or
inc
add
sub
sub
xor
pop
add
pop
push
push
lea
push
push
lea
push
push
push
push
call
xchg
add
add
pop
add
pop
add
popa
mov
add
push
movb
add
pop
add
fistpl
scas
addr16
xchg
mov
add
mov
mov
pop
add
add
add
add
jae
out
add
xchg
add
out
jb
xchg
sub
pop
pop
mov
push
lea
push
push
push
push
call
add
add
into
nop
add
add
xchg
shll
xchg
addr16
addb
cltd
js
mov
lcall
add
mov
mov
lcall
in
add
add
shl
jno
in
add
fildl
stc
fwait
std
pop
rcrl
lcall
insl
hlt
push
push
push
push
lea
push
push
push
push
push
push
call
in
in
add
std
iret
add
leave
hlt
add
out
add
mov
add
add
popf
shll
imul
add
addr16
shll
mov
push
add
lcall
inc
and
push
push
push
push
call
incb
add
mov
add
add
lock
jb
out
push
add
mov
out
cmpsb
icebp
add
add
lock
cmpsb
xlat
add
add
lock
lcall
loopne
sub
pop
push
push
not
shr
shl
pop
mov
push
dec
not
not
pop
add
push
add
pop
push
push
xor
not
pop
push
push
xor
pop
push
push
push
push
lea
push
lea
push
call
aad
jmp
in
stc
out
jnp
add
test
add
add
add
loope
jge
jno
push
add
add
xlat
push
add
jmp
iret
jne
add
xchg
add
add
mov
xchg
fildl
add
mov
cwtl
add
lods
add
in
lock
lcall
inc
cld
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
add
roll
add
iret
add
imul
add
in
add
test
mov
insb
add
xlat
xchg
jmp
out
mov
add
add
add
mov
jno
add
add
pop
js
add
sub
pop
pop
pop
push
add
sub
shl
pop
pop
push
push
push
call
jecxz
add
add
aad
add
mov
cld
add
add
pop
add
add
js
add
scas
out
mov
xchg
mov
lcall
push
shr
shr
sub
pop
ret
push
push
push
push
push
lea
push
push
push
push
call
cltd
xchg
xchg
xlat
add
fadds
lds
add
or
in
add
shlb
mov
push
add
jbe
fiaddl
in
add
test
add
into
add
add
in
add
add
mov
add
jb
icebp
add
mov
int
add
mov
cmpsb
add
add
sub
pop
mov
add
push
rol
add
sub
pop
push
push
push
dec
lea
xor
pop
push
push
push
lea
dec
lea
pop
movl
push
sub
pop
addl
push
sub
pop
test
je
push
push
push
push
push
push
push
push
push
push
call
testb
add
add
idivl
arpl
add
xchg
rolb
xchg
int
add
add
rol
cmpsb
shll
add
jnp
lahf
cmpsb
add
inc
or
sti
shl
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
loope
in
add
addb
in
add
lods
pop
add
out
add
add
add
bound
les
add
in
mov
add
data16
test
add
mov
pop
push
lea
lea
ror
inc
pop
pop
push
push
call
lret
add
add
add
testb
xchg
add
add
lock
pop
mov
lods
popa
faddl
sar
out
roll
outsl
xchg
jnp
rolb
add
add
add
aam
in
clc
lcall
push
push
call
mov
pushf
lods
add
lods
add
add
add
into
add
add
fwait
mov
addb
add
fwait
jb
push
roll
add
jmp
add
push
fcoml
movsb
add
pop
ret
push
not
pop
push
mov
push
dec
pop
add
push
ror
xor
pop
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
add
out
add
add
leave
add
ret
ficompl
add
lods
add
add
in
lcall
add
xchg
add
out
call
roll
add
data16
push
push
push
push
push
push
push
push
push
call
xchg
stc
mov
add
lods
into
push
sti
add
add
add
add
add
add
jecxz
ljmp
add
cmpsl
outsl
mov
add
add
ja
add
mov
add
mov
push
sub
pop
testl
push
lea
shl
pop
addl
push
dec
shr
pop
push
call
push
push
push
push
push
lea
push
push
call
mov
shlb
mov
add
in
push
add
add
mov
pop
add
js
push
mov
xlat
in
add
push
push
lods
mov
add
loopne
into
into
fdivr
movsl
pusha
movsl
loopne
fwait
add
add
push
add
cmc
mov
add
cmpsb
data16
xchg
ret
lods
add
lods
add
inc
cld
push
push
push
push
push
push
push
push
push
lea
push
call
ret
pop
rcl
imul
add
add
mov
mov
lods
jmp
add
add
add
push
lcall
add
add
je
aad
ja
add
cmpsb
jmp
lret
mov
sti
xchg
add
mov
divl
add
add
add
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
push
push
call
into
xchg
jle
add
add
imul
scas
out
add
mov
lahf
loope
mov
lahf
iret
ret
add
mov
jb
pop
mov
jecxz
add
icebp
add
mov
add
pop
into
test
sub
pop
push
push
lea
push
push
call
add
jae
mov
add
scas
add
pop
add
rolb
add
add
add
sarl
jno
fdiv
xchg
push
aad
test
fmul
add
add
add
add
add
add
add
scas
add
insb
add
stos
roll
rolb
add
mov
mov
add
add
push
stc
call
cmpl
jne
push
lea
push
push
call
cli
fldl
add
mov
mov
into
clc
popa
add
add
add
add
lds
lods
scas
cmp
test
add
push
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
call
aad
add
xchg
add
test
fwait
mov
add
add
jl
add
push
add
add
jl
add
out
jbe
mov
movsl
test
fwait
add
add
popl
out
fstp
jle
push
out
pop
sub
pop
pop
push
lea
push
push
lea
push
lea
push
call
in
push
div
lock
test
add
add
add
ja
xchg
loop
add
push
jnp
add
add
lods
add
pop
fstpl
mov
ljmp
mov
cltd
iret
add
add
jbe
add
leave
push
sub
add
xor
pop
ret
push
push
shr
not
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
xlat
add
xchg
stos
xchg
add
loope
stos
arpl
test
cltd
pop
repnz
lret
jns
mov
addb
test
sti
mov
addl
in
add
lods
add
add
pop
nop
add
popl
lcall
cld
push
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
push
movsl
pop
mov
add
out
pop
ja
mov
add
add
scas
bound
mov
add
add
xchg
add
clc
pop
add
lcall
push
push
push
push
push
push
push
push
call
sahf
stos
mov
stc
push
add
sar
enter
add
pushf
pop
push
cmpsb
pushf
ror
add
into
stos
jl
pushf
insb
push
add
roll
add
xchg
mov
add
cmpsb
xchg
add
std
ficoml
cwtl
add
add
fsubs
add
add
lcall
push
ror
rol
pop
movl
push
sub
ror
pop
push
push
pop
call
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
insb
add
push
rolb
enter
out
mov
mov
add
int3
enter
fildl
pop
push
push
push
push
push
push
call
into
cmc
lea
push
add
mov
roll
xchg
add
js
cmpsl
add
jae
sahf
add
movb
out
rclb
add
fildl
add
jbe
add
mov
out
fcmovbe
add
add
mov
in
pop
call
subl
push
xor
pop
cmpl
jne
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
loopne
add
icebp
add
shr
jns
add
mov
js
add
xchg
jl
cmp
add
addr16
nop
xchg
add
ffreep
cld
jp
lods
pop
mov
iret
add
add
add
sti
cltd
add
jo
add
out
add
rorb
in
add
xchg
data16
faddl
push
push
push
push
push
push
push
push
call
data16
add
add
int3
add
add
shl
hlt
add
add
push
lcall
out
jae
pop
add
rcl
negb
add
scas
mov
add
mov
add
add
jb
jbe
add
add
in
loopne
lcall
pop
push
push
push
push
lea
push
call
add
sti
pop
add
add
jge
addl
xchg
add
out
add
add
jmp
add
add
flds
add
imul
push
xor
sub
pop
ret
push
push
rol
pop
mov
push
ror
lea
pop
add
push
lea
not
pop
push
push
push
push
lea
push
push
lea
push
push
call
push
cltd
xlat
jno
rcr
shr
icebp
pop
les
add
add
add
mov
add
movsl
pop
add
xchg
push
mov
ficoms
rcrb
push
add
add
add
mov
jns
pushf
movsb
lret
add
lret
add
test
add
popf
mov
in
in
lcall
push
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
add
mov
mov
testl
jns
add
addb
bound
out
scas
add
jbe
fdivr
test
popa
add
flds
mov
mov
add
popa
popf
shl
fdivrl
bound
cmpsl
add
mov
mov
xchg
mov
add
add
sub
pop
push
push
ror
pop
mov
push
push
push
lea
push
push
call
cli
add
mov
mov
ficomps
mov
add
add
add
add
add
cmpsb
push
mov
add
js
icebp
add
jns
mov
iret
cwtl
mov
add
in
in
pop
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
aad
add
loop
sahf
push
mov
out
add
mov
push
add
sti
add
enter
jae
call
aad
add
mov
pop
add
popf
out
int
ret
xchg
add
pusha
add
sub
pop
sub
mov
push
push
push
push
lea
push
push
push
push
push
call
into
add
add
add
add
cld
fdivl
add
lods
add
idiv
add
mov
ja
mov
movsb
jecxz
add
add
aam
imul
mov
lcall
call
and
mov
call
pop
ja
xchg
in
add
add
idivl
ret
add
add
add
test
faddl
xchg
jnp
out
jns
cltd
add
add
pop
add
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
mov
negb
push
add
add
lret
add
aam
add
out
push
nop
push
mov
jae
addb
lea
mov
mov
add
in
pushf
scas
add
mov
pop
call
je
push
sti
lret
clc
jmp
add
add
stos
cltd
movl
mov
push
lea
push
push
push
push
push
push
call
add
add
iret
imul
ret
pop
mov
lea
add
mov
out
sti
ret
rcl
mov
clc
add
lret
add
stc
lods
popf
cli
popl
nop
add
cmc
add
add
lcall
inc
or
push
lea
push
push
push
push
push
push
call
add
popf
int3
in
ljmp
add
out
add
outsl
pop
add
cld
pop
add
mov
jecxz
pop
ret
add
jns
add
add
mov
add
add
add
add
mov
fadds
add
add
shlb
push
lea
push
push
push
lea
push
push
call
fisttpll
xchg
xor
jecxz
jns
add
add
icebp
mov
add
out
add
add
pop
jae
arpl
loopne
nop
mov
xchg
lahf
test
xchg
lods
add
jmp
fstpt
sub
pop
mov
push
lea
push
call
imul
into
push
jecxz
out
add
movsb
add
add
enter
add
add
shrb
jnp
add
add
ficoms
aad
xchg
fldl
out
iret
cmc
lret
faddl
add
xchg
cmpsb
repnz
add
add
iret
test
clc
lcall
nop
nop
nop
nop
push
dec
not
lea
xor
pop
cmp
jne
push
lea
push
push
push
call
add
add
push
jns
lock
jnp
data16
gs
add
add
hlt
add
add
add
aam
sbb
add
add
ret
add
cwtl
fadds
add
jne
push
shr
inc
ror
pop
mov
push
inc
xor
sub
pop
movl
push
shl
lea
pop
jmp
push
push
push
push
push
lea
push
call
shl
fiaddl
add
clc
jbe
insb
add
pop
add
add
push
mov
addl
loope
jo
add
add
mov
sub
pop
mov
push
push
call
mov
xchg
in
adc
add
add
cli
lods
add
add
mov
jp
test
nop
mov
test
add
imul
add
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
aad
lock
insb
leave
sbbb
mov
pop
add
add
add
add
mov
mov
pusha
fcmovnb
add
lret
fcmove
fs
push
push
enter
ljmp
sti
xlat
insb
push
pop
add
jbe
add
sub
pop
sub
jne
mov
push
push
lea
push
call
add
movb
jp
rolb
in
arpl
mov
push
jl
icebp
pop
push
jp
mov
gs
data16
add
add
call
cmc
add
add
call
add
mov
sub
pop
movl
push
add
pop
jmp
push
push
push
push
lea
push
call
les
fwait
mov
add
mov
mov
les
lret
add
add
mov
add
arpl
add
fldl
push
fildl
scas
xchg
mov
cwtl
shll
lcall
inc
cld
push
push
push
push
call
stc
mov
add
add
scas
add
jbe
add
xchg
add
lock
mov
movsl
push
jae
add
std
jl
int
iret
std
add
add
push
js
ljmp
jle
test
xchg
sub
pop
mov
push
lea
push
push
push
push
push
call
jmp
add
xorb
lds
xchg
add
scas
pop
add
nop
mov
mov
popa
stc
add
addl
lds
add
mov
add
call
cmp
jne
push
lea
push
push
push
push
call
xchg
add
mov
mov
add
jge
jecxz
mov
add
ljmp
add
add
add
pop
add
stc
xchg
fiaddl
add
roll
inc
adc
jmp
sub
pop
movl
push
xor
not
ror
pop
jmp
mov
push
add
inc
rol
pop
cmpw
jne
push
push
push
push
call
in
xchg
test
add
lds
fisubl
add
add
lds
add
xchg
jae
add
cld
mov
add
addb
lds
test
add
add
clc
popa
cld
mov
sub
pop
mov
push
xor
pop
movl
push
add
xor
add
pop
jmp
push
sub
rol
not
pop
pushl
push
lea
xor
sub
pop
pop
mov
push
add
pop
mov
push
push
push
lea
push
push
lea
push
push
call
iret
pusha
add
push
xchg
mov
add
add
imul
int3
jns
nop
pop
imul
xchg
add
add
addr16
cmc
frstor
lods
push
sub
pop
mov
push
push
sub
push
and
add
sub
inc
xor
sub
pop
inc
pop
push
sub
sub
rol
pop
push
call
push
xor
pop
cmpl
je
push
push
rol
push
xor
add
sub
ror
lea
dec
lea
pop
sub
pop
push
push
push
push
push
push
push
call
xchg
jecxz
mov
mov
fmul
add
add
jo
xorb
xlat
add
add
jae
add
push
mov
add
mov
lahf
jp
push
add
aad
jno
add
add
rcl
adcb
push
jp
orl
shrb
lcall
call
push
push
push
push
push
lea
push
push
push
call
out
rcrl
add
xchg
push
jno
ja
ret
mov
in
icebp
out
gs
aam
add
into
stos
movb
jne
fstpl
add
out
add
jle
xchg
mov
movb
add
push
aam
in
loopne
lcall
js
int3
fldz
ret
or
add
fiaddl
lds
push
or
inc
add
rol
sub
not
pop
lea
dec
dec
shl
pop
push
lea
push
lea
push
push
push
push
call
lcall
incb
add
add
pop
push
xchg
mov
cwtl
into
jno
add
roll
aam
jo
sub
pop
push
push
push
lea
push
push
call
movsl
add
lea
leave
add
add
add
fdivs
movsb
stc
add
add
add
loopne
add
mov
jge
fcomip
xchg
movsb
mov
add
add
push
ljmp
les
loopne
cwtl
push
into
pop
jle
jecxz
in
jne
add
add
popa
cmp
add
mov
dec
lea
push
lea
push
push
call
insb
push
add
add
lods
add
loope
push
add
flds
in
add
add
je
jae
add
shlb
cld
add
xchg
add
in
cmpsl
add
add
jmp
shlb
add
add
lcall
cmp
add
int3
je
push
push
shr
add
push
or
inc
add
not
dec
inc
sub
dec
inc
not
pop
add
not
pop
push
lea
push
lea
push
push
lea
push
lea
push
call
add
sti
mov
cltd
add
rcrb
mov
xchg
add
call
xlat
popa
jbe
add
add
jmp
js
jp
add
mov
add
in
call
push
push
add
inc
add
pop
call
push
push
push
push
push
call
loop
mov
mov
imul
lahf
jl
add
je
stc
fdivrs
add
add
mov
mov
lcall
in
in
pop
cmpl
je
push
push
rol
dec
ror
push
push
pop
add
xor
sub
rol
add
sub
add
ror
not
pop
pop
push
lea
push
call
leave
jne
out
add
add
mov
popa
pushf
add
push
add
cmpsb
loopne
add
add
pop
add
mov
add
nop
ja
add
pop
add
add
stos
add
std
add
xchg
in
sbbl
mov
in
sub
pop
push
push
pop
call
cmpl
je
push
push
xor
not
lea
push
sub
add
inc
inc
not
ror
sub
ror
ror
pop
dec
inc
shl
pop
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
pop
push
add
add
mov
in
testb
add
int
jl
jae
xchg
add
add
aad
pop
mov
add
sub
pop
push
call
push
push
call
add
arpl
add
xchg
add
add
add
lret
movsl
add
pop
cmc
out
add
mov
in
add
jo
add
add
add
add
add
add
pop
jmp
add
cmp
or
int3
je
push
push
xor
push
push
pop
add
sub
inc
shr
add
not
pop
shl
not
not
pop
push
push
push
push
push
push
call
mov
add
add
cmpsl
out
stos
data16
ret
add
mov
mov
add
lret
mov
fadds
add
aam
lods
add
xchg
xchg
add
add
mov
movsb
and
mov
scas
add
lock
icebp
popf
testl
pop
sti
pop
sub
pop
push
push
inc
sub
pop
call
push
inc
not
pop
cmpl
je
push
push
ror
lea
push
and
add
ror
sub
add
rol
not
not
pop
pop
push
push
call
int
add
sti
xabort
add
addl
add
stos
bound
mov
add
lret
fsubl
movsb
add
add
out
mov
lock
add
add
andb
mov
jecxz
faddl
pop
add
add
add
add
out
fwait
test
mul
in
push
in
clc
pop
push
push
push
call
xchg
insb
imul
aam
add
pop
add
xor
add
add
pushf
out
std
add
push
xchg
les
test
call
cmpl
je
push
push
push
or
inc
add
add
dec
sub
not
pop
sub
inc
rol
pop
push
xor
pop
push
push
sub
add
lea
pop
call
push
push
call
add
add
add
push
add
add
xchg
push
int
outsl
lods
jnp
mov
ljmp
mov
jbe
add
jl
stc
add
add
or
add
mov
add
add
mov
sub
pop
cmpl
je
push
push
sub
shl
shr
push
or
not
add
ror
sub
shr
add
inc
sub
pop
dec
rol
sub
pop
push
push
push
call
sahf
mov
pushf
test
lods
test
add
add
stc
lcall
add
add
mov
sub
pop
push
push
push
push
push
push
push
push
push
call
add
add
lods
xchg
add
add
mov
arpl
add
push
test
mov
add
filds
hlt
add
rolb
in
add
je
add
add
jo
jo
rorb
call
push
shl
sub
not
pop
cmpl
je
push
push
inc
shl
add
lea
push
or
not
add
xor
sub
pop
dec
shr
pop
push
shl
pop
push
call
push
sub
ror
pop
cmpl
je
push
push
add
sub
shr
push
or
inc
add
lea
dec
sub
rol
add
pop
rol
pop
push
push
call
mov
out
add
ja
add
lret
mov
mov
jb
mov
add
into
add
fidivs
fisubs
std
add
mov
movsb
lea
in
clc
pop
push
push
lea
push
push
push
push
lea
push
push
call
or
add
arpl
mov
int3
addr16
cmc
scas
scas
add
pop
mov
js
add
jne
aam
testl
lcall
fldenv
test
iret
add
fistps
add
mov
nop
movsl
in
idiv
loopne
add
add
sub
pop
call
cmpl
je
push
push
ror
shr
shr
push
push
pop
add
xor
sub
not
xor
pop
sub
pop
push
lea
push
lea
push
push
lea
push
push
push
call
movb
aad
add
les
test
lds
iret
test
aad
add
cmpb
popf
add
add
add
add
mov
add
loope
loopne
mov
mov
in
mov
add
sub
pop
push
push
sub
rol
add
pop
call
push
shl
pop
cmpl
jne
mov
push
add
pop
movl
push
push
lea
push
push
lea
push
call
jecxz
cmc
add
cwtl
add
roll
add
push
add
push
insb
jmp
add
add
mov
xchg
add
push
cmpsb
clc
mov
int3
add
fiadds
je
xchg
add
xchg
into
add
fcoml
cltd
add
add
sldt
add
into
mov
pop
xor
push
add
pop
pop
push
sub
ror
sub
dec
pop
pop
pop
push
ror
add
pop
pop
leave
push
push
lea
push
push
push
push
lea
push
call
xchg
sti
add
test
add
push
xchg
add
xchg
cli
movsl
add
mov
stos
add
cwtl
std
mov
add
add
mov
jmp
push
xchg
enter
add
sub
pop
ret
push
push
ror
pop
mov
push
rol
add
pop
add
push
rol
ror
sub
sub
pop
cmpl
jne
push
push
sub
rol
push
and
add
xor
lea
sub
pop
sub
sub
not
pop
push
push
push
call
add
pushf
add
add
lret
add
scas
add
in
jbe
leave
mov
loop
je
ficoml
pop
stos
arpl
add
hlt
lcall
jne
call
push
push
push
lea
push
call
add
xchg
pop
add
add
bound
aam
push
add
fadds
xchg
rolb
into
in
add
test
add
aad
add
lods
imulb
addl
in
lock
lcall
call
jl
mov
pop
push
push
push
push
call
test
add
xchg
add
je
js
popl
not
aam
jb
push
add
add
stc
mov
mov
lret
add
jno
xchg
sti
add
jmp
ror
add
xchg
rolb
xchg
std
add
lods
jecxz
sub
pop
call
push
dec
pop
jmp
cmpl
je
push
push
push
push
push
push
lea
push
push
push
call
mov
popa
jp
stos
mov
movl
aad
jae
rolb
mov
mov
add
not
jne
in
fdivr
lcall
jge
add
add
push
rol
sub
sub
pop
leave
push
ror
inc
pop
add
push
add
sub
pop
pop
pop
push
shr
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
ror
jb
addr16
movsl
mov
pop
pop
xchg
add
add
insb
add
fsts
lea
add
enter
add
jmp
jbe
add
jo
mov
sahf
jecxz
sub
pop
pop
push
push
lea
push
push
push
call
add
pop
add
nop
xchg
jmp
movsl
repnz
leave
add
add
add
xchg
add
mov
add
out
push
add
add
jo
loopne
pushf
sub
pop
leave
push
push
push
push
push
lea
push
lea
push
push
call
pop
push
rolb
add
loop
mov
xchg
add
jge
add
xchg
pop
push
mov
jle
fs
mov
add
sub
pop
add
push
pop
ret
push
shr
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
call
add
add
fadds
pop
add
push
int
push
add
mov
mov
push
add
push
add
mov
hlt
jno
sub
pop
cmpl
jne
push
push
shl
shr
add
push
or
inc
add
xor
add
inc
sub
inc
lea
pop
ror
pop
push
lea
xor
pop
pushl
push
push
push
push
push
call
in
mov
test
enter
xchg
lret
gs
lret
add
add
add
aam
ret
add
pushf
stos
call
xchg
loop
jne
add
add
add
fsubrl
add
push
lea
push
push
push
push
lea
push
push
call
mov
addl
add
xchg
push
jbe
ljmp
sarl
add
mov
push
add
add
xchg
add
push
pop
add
add
add
lret
push
pop
add
popa
add
in
add
lcall
add
rclb
ror
pop
jmp
push
push
lea
push
push
push
push
push
push
call
xchg
mov
push
add
test
icebp
hlt
addr16
add
add
lret
nop
scas
add
roll
add
js
addl
popf
add
outsl
je
cld
loope
leave
push
out
add
lcall
hlt
enter
sub
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
call
add
jne
pusha
test
add
lret
add
pusha
add
add
add
movsb
add
add
jmp
jge
add
add
stos
cwtl
imul
push
cmc
lret
mov
sub
pop
mov
push
add
dec
pop
mov
push
ror
inc
add
ror
pop
push
push
push
xor
push
and
add
sub
shr
ror
sub
lea
pop
shr
inc
add
pop
push
lea
push
call
mov
out
stc
add
add
mov
out
add
add
aad
mov
jl
add
mov
fldl
add
cmc
insb
iret
icebp
add
add
data16
lret
add
add
imul
iret
add
add
xchg
in
add
popa
jo
mov
cmpsl
sub
pop
pushl
call
push
push
push
push
call
add
loope
data16
jo
cli
mov
mov
mov
add
add
pop
add
add
add
add
sub
pop
call
push
push
sub
shr
push
push
pop
add
sub
lea
sub
add
pop
rol
lea
pop
push
dec
pop
pushl
call
push
lea
push
lea
push
push
push
call
add
fldl
mov
add
xchg
test
faddl
add
pop
loopne
shlb
sti
add
call
push
push
not
sub
lea
push
or
inc
add
dec
sub
sub
not
xor
pop
sub
pop
push
push
call
jmp
add
fnsave
loop
jnp
lods
add
cmc
add
add
aam
add
outsl
test
add
mov
mov
fucomp
add
add
push
add
push
add
imul
rcrl
add
push
add
fisttpl
xchg
add
add
mov
add
pushl
push
lea
pop
call
push
xor
inc
pop
call
push
push
add
ror
sub
push
push
pop
add
rol
sub
sub
sub
shr
shl
ror
pop
dec
shl
sub
rol
pop
push
push
push
push
call
add
add
add
xchg
call
mov
pop
add
imul
ja
mov
std
roll
fiadds
repnz
add
out
add
add
jne
call
push
sub
pop
call
push
push
add
push
push
pop
add
lea
sub
dec
pop
xor
inc
add
xor
pop
push
lea
push
push
push
push
lea
push
call
add
xchg
push
add
test
jnp
test
add
leave
loop
scas
mov
lds
add
add
add
add
in
ja
sbb
scas
insb
fildl
rcrb
add
push
add
add
mov
call
call
push
push
push
push
push
call
xchg
fiaddl
push
push
addr16
add
add
add
add
cmc
fildl
add
mov
add
jbe
nop
shr
js
add
movsb
jbe
xchg
lds
popa
sahf
shlb
hlt
add
in
lret
add
xchg
out
pop
mov
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
call
loope
mov
add
rorb
xchg
incb
stos
xchg
add
add
aam
test
add
add
push
in
add
add
add
mov
nop
add
aad
add
loopne
out
scas
add
in
sub
pop
call
push
push
sub
push
sub
add
rol
add
sub
ror
rol
pop
dec
rol
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
rolb
loope
lret
add
push
add
add
in
lea
add
repnz
lret
add
add
push
sub
pop
pushl
call
push
add
pop
call
push
push
lea
add
ror
ror
push
and
add
rol
sub
dec
sub
ror
pop
ror
pop
push
sub
pop
pushl
call
push
lea
push
push
push
push
lea
push
push
push
call
lret
add
push
icebp
enter
xchg
push
sahf
testl
add
in
add
incb
jnp
add
add
lret
add
jae
nop
add
mov
out
sub
pop
call
push
push
dec
push
or
not
add
shr
sub
lea
pop
sub
inc
shl
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
mov
int3
pop
xchg
lret
add
push
jno
mov
jnp
repnz
add
mov
aam
sarb
sub
pop
pushl
push
not
xor
pop
call
push
push
push
lea
push
call
test
lcall
stos
add
mov
add
aam
insb
add
sti
rcrb
add
lods
add
push
jmp
in
lock
lcall
shrb
inc
iret
or
rol
lea
dec
push
sub
add
shl
sub
sub
sub
add
rol
not
pop
inc
dec
pop
push
shr
inc
sub
pop
pushl
push
sub
not
pop
call
push
dec
rol
pop
call
push
push
inc
push
or
not
add
lea
ror
add
sub
not
xor
pop
xor
not
pop
push
shr
sub
pop
pushl
call
push
push
call
mov
bound
push
leave
mov
cld
out
mov
lea
push
add
data16
in
mov
add
add
add
js
popa
int3
jno
add
add
pop
scas
add
mov
add
pop
mov
add
pushf
and
call
rol
dec
sub
pop
call
push
push
add
ror
dec
push
sub
add
dec
sub
shl
rol
inc
add
pop
add
pop
push
shr
pop
pushl
push
lea
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
lods
insb
add
test
imul
movl
add
movsb
jecxz
pushf
add
add
pop
stos
test
out
fstpt
icebp
fwait
out
jae
add
mov
add
jge
mov
push
xorl
add
mov
lcall
jmp
pop
cli
mov
mov
shrb
adc
leave
mov
shr
sub
add
shl
ror
sub
shl
inc
lea
pop
lea
pop
push
shl
not
pop
pushl
call
push
push
lea
push
call
add
pop
add
mulb
xchg
enter
jp
mov
add
lods
testb
lret
add
mov
xchg
add
mov
jmp
pop
sti
into
push
repnz
add
mov
iret
jno
mov
add
les
add
lcall
shrb
adc
push
lea
push
or
not
add
add
rol
sub
ror
lea
pop
ror
inc
pop
push
ror
ror
sub
pop
pushl
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
mov
add
sti
add
add
add
push
add
jno
sarl
cmc
lea
add
push
in
stc
mov
add
add
add
int3
push
lds
imul
add
xchg
lock
out
fnstcw
lcall
rorb
ljmp
scas
mov
xchg
loopne
push
or
not
add
inc
add
sub
add
shl
pop
sub
dec
pop
push
push
push
push
call
mov
add
add
lret
add
add
add
add
add
les
stos
stc
add
add
add
addb
xchg
push
roll
mov
sub
pop
pushl
call
push
push
push
lea
push
call
add
add
int
jbe
add
push
scas
fimuls
jb
fwait
add
add
lret
mov
lret
imul
mov
add
lret
add
add
add
loope
mov
add
add
add
mov
sub
pop
push
push
add
shl
xor
rol
pop
call
push
push
add
push
xor
add
xor
sub
lea
inc
pop
inc
lea
pop
push
push
push
push
push
push
push
call
pop
fwait
addr16
mov
add
cmc
mov
cld
add
push
mov
mov
add
aam
jge
jp
int3
in
add
fmul
cmpsb
cli
add
add
add
add
pop
mov
add
add
loopne
jae
sahf
mov
add
lcall
jne
push
push
push
push
push
push
push
push
push
call
add
data16
add
test
add
add
add
add
add
jl
add
add
add
mov
movl
sub
pop
call
push
sub
add
ror
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
call
bound
add
add
jmp
add
ret
mov
add
add
jge
scas
clc
add
jp
incb
rolb
inc
cld
push
push
shr
push
sub
add
xor
shl
inc
xor
sub
add
add
dec
pop
sub
ror
pop
push
sub
pop
pushl
push
add
dec
sub
shr
pop
call
push
add
dec
pop
push
push
dec
add
not
pop
pushl
call
push
push
push
or
not
add
add
shl
sub
inc
pop
ror
lea
pop
push
add
ror
pop
pushl
call
push
push
add
push
push
pop
add
xor
sub
add
shr
ror
not
pop
inc
not
pop
push
push
add
push
or
not
add
shl
shr
sub
inc
pop
inc
lea
pop
push
sub
sub
add
pop
call
push
push
add
sub
not
ror
push
sub
add
ror
sub
rol
sub
not
pop
rol
pop
push
push
push
push
push
push
push
push
push
push
call
enter
fwait
insb
mov
popa
mov
add
jnp
mov
fwait
out
jns
add
mov
fcom
mov
jle
push
mov
lcall
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
add
cld
roll
ljmp
cwtl
mov
jbe
mov
add
imul
add
pop
add
mov
jl
andb
pop
call
push
add
pop
mov
push
push
push
push
push
push
call
add
fyl2x
les
add
add
fmulp
add
mov
test
mov
clc
loope
add
arpl
add
add
add
int3
add
mov
add
je
shrl
add
push
lds
add
std
mov
lcall
pushf
and
call
ja
lret
rcr
push
push
push
push
push
lea
push
call
jnp
fwait
xlat
scas
xchg
imul
loopne
nop
jecxz
xchg
mov
movsb
add
add
add
adcl
call
add
movsl
add
add
add
mov
in
fdivr
lcall
test
call
rorl
sbb
rol
leave
jl
push
push
push
rol
shl
pop
push
push
push
sub
shr
pop
push
push
push
sub
ror
pop
push
push
pop
push
pushl
push
push
push
push
push
push
push
call
push
ficoml
add
add
pop
add
add
jne
into
cmpsl
in
add
cmpsl
add
int
add
ja
add
add
mul
fcoml
data16
sar
sub
pop
push
call
push
push
rol
push
and
add
sub
add
rol
pop
shr
pop
push
not
add
pop
pushl
push
sub
add
sub
pop
call
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
bound
add
add
push
add
add
in
add
add
jge
lret
cwtl
hlt
out
mov
add
push
sub
pop
mov
push
sub
sub
dec
sub
pop
pop
dec
jne
push
lea
not
xor
pop
jmp
push
sub
pop
call
push
push
lea
push
and
add
shr
inc
sub
sub
pop
sub
lea
xor
pop
push
push
push
lea
push
lea
push
call
sarb
cltd
popf
in
cmc
les
jnp
pop
add
add
add
add
add
stos
add
enter
jns
add
js
add
lcall
lcall
jne
call
push
add
pop
push
call
push
xor
pop
mov
push
lea
sub
pop
lea
push
push
push
and
add
shl
xor
lea
sub
inc
pop
lea
pop
push
shl
pop
pushl
push
dec
pop
call
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
hlt
mov
sbbl
add
add
add
mov
add
add
jle
jmp
enter
outsl
lcall
add
mov
mov
add
scas
movsb
mov
int3
add
add
sub
pop
call
push
push
ror
ror
not
inc
push
or
not
add
lea
add
sub
dec
sub
lea
pop
sub
xor
shl
shr
pop
push
sub
pop
pushl
call
push
push
push
push
push
lea
push
push
push
lea
push
call
sti
scas
pusha
lods
movsb
call
mov
add
mov
add
addl
stos
add
add
add
cwtl
add
add
insb
add
add
lods
lret
add
lret
stc
add
xchg
add
xchg
xlat
mov
pop
call
mov
push
dec
dec
add
pop
lea
push
push
inc
sub
shr
push
or
not
add
dec
xor
lea
sub
shr
lea
dec
pop
dec
pop
push
push
push
push
push
push
lea
push
call
pushf
shr
mov
flds
fcomi
arpl
in
xchg
fiadds
mov
mov
xchg
add
int3
xchg
iret
mov
add
add
test
mov
xchg
cli
mov
xchg
add
jae
pop
call
in
lcall
jne
call
push
lea
push
call
add
add
jl
bound
pop
add
int
add
mov
lods
add
std
add
cwtl
mov
add
addr16
hlt
add
add
xchg
nop
nop
jge
jmp
push
mov
imul
cwtl
add
lock
scas
scas
add
sub
pop
lea
push
push
push
push
push
push
push
call
add
add
scas
push
out
jl
add
jecxz
cwtl
lds
push
test
add
add
loope
movsl
add
rclb
add
les
add
xchg
add
mov
addb
push
mov
cld
add
in
cltd
mov
add
loope
jle
sahf
sub
pop
push
push
push
push
lea
push
push
push
lea
push
call
clc
cmpsl
test
add
add
jmp
leave
add
popl
js
movsb
add
pop
ljmp
je
out
add
ret
in
add
add
loop
sub
pop
push
push
push
lea
pop
pushl
push
push
push
xor
add
sub
add
pop
sub
ror
shl
pop
push
shl
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
in
lahf
add
sbbl
add
cli
mov
add
mov
int
xchg
mov
add
sahf
cmpsb
mov
incb
aad
mov
pop
pop
push
sti
add
loope
add
mov
add
out
in
loop
int3
cld
pushf
sub
pop
call
push
push
rol
xor
push
and
add
add
dec
sub
shl
pop
add
shr
shr
pop
push
inc
dec
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
jno
icebp
jbe
lock
test
mov
ret
add
add
add
cld
call
mov
add
add
arpl
filds
jno
push
shrb
in
loopne
call
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
push
out
add
out
add
mov
out
jle
popf
in
push
add
enter
je
movl
mov
add
add
sub
pop
push
call
push
push
add
not
push
and
add
shr
rol
rol
dec
sub
sub
not
add
pop
xor
shl
add
sub
pop
push
dec
lea
inc
not
pop
pushl
push
xor
add
not
pop
call
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
loope
call
lcall
add
add
push
mov
fadds
into
xchg
jns
faddl
je
test
add
xchg
add
lcall
add
out
lcall
mov
stos
add
xchg
add
pop
add
jmp
pop
mov
mov
add
les
lcall
arpl
add
pushl
push
push
push
push
call
pop
add
arpl
add
add
add
int3
movb
int
add
add
fadds
add
test
clc
hlt
fwait
add
add
lahf
jmp
add
popl
add
jno
add
add
out
shll
add
add
fadds
add
js
outsl
pop
add
lcall
mov
push
inc
sub
pop
jmp
push
push
sub
xor
shr
push
and
add
sub
lea
rol
sub
add
pop
lea
inc
inc
pop
push
sub
shl
shl
pop
pushl
push
push
lea
push
call
add
test
push
lods
faddl
in
testl
negl
add
loope
add
sti
in
mov
add
pop
xchg
fldcw
faddl
push
out
enter
add
add
addl
imul
jns
add
arpl
out
mov
lcall
mov
add
push
sub
pop
push
push
push
push
call
add
add
mov
jbe
rcrl
lock
push
add
add
fbld
lret
imul
fildl
push
lahf
icebp
xchg
add
ja
jbe
in
hlt
lcall
shrb
jge
xlat
push
lea
rol
push
or
inc
add
not
add
sub
lea
xor
pop
add
pop
push
rol
inc
lea
pop
pushl
push
rol
sub
pop
call
push
sub
not
sub
pop
push
push
xor
shl
pop
call
push
push
lea
push
push
push
push
push
push
call
add
jae
lods
add
mov
cltd
add
xchg
add
in
popa
mov
push
in
jne
movsl
call
aad
xchg
cmpsb
mov
mov
shl
shlb
shlb
add
test
lds
loopne
leave
add
push
pop
pop
push
push
push
lea
push
push
push
push
call
lds
leave
leave
push
add
stos
add
insb
add
xchg
mov
bound
cltd
pop
add
popaw
out
loopne
jne
add
push
push
popf
faddl
add
mov
add
add
add
lahf
rcll
add
lcall
mov
js
add
out
add
sub
pop
pop
push
push
push
push
push
push
call
imul
pop
hlt
test
lods
aam
xchg
test
push
add
pop
pop
pushf
push
add
add
enter
in
imul
xchg
iret
add
add
jge
mov
sub
pop
pop
push
sub
rol
sub
pop
pop
push
sub
xor
pop
leave
add
push
rol
add
pop
ret
push
push
call
mov
rcrb
add
cli
add
mov
int3
mov
pop
pushf
add
jne
add
add
out
add
ret
subb
lret
add
add
fdivs
add
rorb
clc
lcall
ret
push
ror
ror
add
pop
push
push
not
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
jbe
add
add
cmpsb
faddl
jae
add
add
add
pop
add
mov
out
mov
int3
add
mov
filds
sub
pop
cmpl
jne
mov
push
lea
push
push
lea
push
push
push
push
push
call
faddl
js
add
add
add
test
ljmp
aam
push
add
add
mov
jo
stos
add
addb
push
lcall
jb
jmp
fstl
insb
add
aad
add
add
arpl
sub
pop
jmp
mov
push
push
push
call
movsl
xchg
bound
movsl
add
jle
xchg
add
cwtl
add
sahf
add
add
add
add
mov
mov
movsb
call
add
add
push
xchg
add
mul
lahf
add
push
sub
pop
and
push
push
push
push
lea
push
push
push
push
push
push
call
add
stc
in
out
add
test
add
mov
add
mov
add
add
jmp
jp
add
add
std
lahf
shlb
mov
add
add
pop
xor
push
add
shl
pop
xor
add
push
push
lea
push
lea
push
push
call
lahf
std
add
pop
add
jae
aad
add
xchg
pop
loope
add
cmpsl
add
add
jbe
test
mov
stc
xchg
add
xchg
add
add
std
movsl
add
add
add
lcall
dec
call
lret
ret
rcl
dec
push
push
lea
push
push
push
push
lea
push
call
add
jbe
add
loope
add
add
into
mov
add
insb
movsb
mov
add
xchg
add
push
add
push
iret
add
push
jge
xchg
xchg
add
std
movsb
pop
add
sub
pop
sub
push
push
push
call
add
in
out
in
stc
stos
in
jae
icebp
add
push
mov
int3
nop
add
add
add
in
add
add
add
push
push
call
mov
in
std
mov
filds
add
add
add
fs
add
ret
add
lcall
add
test
clc
pop
sub
push
push
push
call
add
cwtl
add
add
pop
add
test
add
add
imul
mov
add
add
add
lahf
xorb
in
hlt
lcall
xor
rorl
jecxz
pop
pop
push
push
push
push
push
call
gs
xchg
hlt
mov
mov
pop
add
mov
xchg
add
add
jns
stos
add
subb
imul
sar
add
adc
leave
pop
pop
popa
add
aam
add
in
pop
sub
push
add
inc
shl
dec
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
push
push
call
test
add
add
add
add
in
add
add
add
push
add
outsl
pop
lcall
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
movsl
mov
jge
lock
ja
push
pop
add
popl
add
add
add
add
add
pushf
add
add
jb
add
pop
mov
push
hlt
fisttpll
pop
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
pop
test
lods
push
xchg
mov
into
push
pop
outsl
add
mov
cmp
mov
add
jns
movsb
stos
add
xchg
add
insb
add
sub
pop
sub
push
push
push
push
call
fistl
adcl
xchg
add
scas
bound
add
push
add
fwait
add
push
in
imul
pop
mov
push
xor
shl
rol
pop
shr
push
push
push
push
push
push
lea
push
call
push
int3
cmc
fiaddl
jp
ljmp
in
ja
mov
xchg
add
add
mov
add
in
hlt
xchg
mov
sti
mov
add
loope
add
jno
add
icebp
cltd
out
add
clc
std
push
gs
lret
in
in
add
push
ror
pop
sub
push
push
push
push
push
lea
push
push
push
lea
push
push
call
pusha
test
test
mov
xchg
pop
jbe
je
add
js
jge
xchg
add
into
add
testl
push
add
add
add
pop
xchg
push
nop
add
add
jp
mov
in
mov
stos
rorb
push
movsb
jecxz
push
in
fcomps
xor
cmc
dec
shl
dec
pop
pop
shr
push
rol
xor
shl
pop
and
push
sub
pop
sub
push
shl
pop
cmp
jne
push
shl
add
pop
leave
push
push
push
push
lea
push
call
cmc
add
fadds
cmpb
push
add
mov
add
add
cld
mov
jo
add
add
fiaddl
out
fs
add
loopne
xchg
testb
push
icebp
cli
add
add
add
add
lcall
add
push
add
pop
push
push
lea
xor
pop
mov
push
rol
pop
add
push
push
push
push
push
push
call
ret
pop
xlat
js
mov
add
xorl
pop
fiadds
add
pop
add
mov
add
shrb
mov
add
fwait
in
jle
in
call
push
push
add
shl
inc
pop
push
push
push
push
push
push
lea
push
call
add
add
add
pop
sti
add
add
add
add
mov
add
jno
add
add
scas
mov
pop
stos
stos
add
lcall
mov
push
addl
add
jo
clc
in
in
pop
push
push
push
shr
inc
not
sub
pop
mov
push
shr
ror
pop
lea
push
shl
shr
pop
sub
push
dec
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
add
gs
fildl
cmc
add
fwait
and
out
add
add
cwtl
lods
aam
mov
out
movl
movsb
cmpl
add
jge
add
jno
pop
fadds
lret
fucomp
mov
push
ret
imull
add
xchg
sub
pop
shr
push
shl
pop
add
push
push
lea
push
push
call
in
jno
scas
pop
mov
add
add
add
add
add
mov
int3
add
pop
xchg
leave
data16
test
lcall
fwait
addb
add
mov
pop
or
inc
pop
das
push
push
push
call
add
call
add
lahf
sti
jp
lock
gs
jmp
add
into
add
enter
add
addb
adc
xchg
jb
add
fwait
xchg
rcr
lret
add
movb
or
push
push
push
lea
push
call
add
push
mov
add
add
lods
jnp
add
add
add
scas
add
add
imul
enter
test
loopne
in
mov
test
in
lcall
jge
push
sub
sub
pop
xor
mov
push
add
pop
and
rol
push
push
call
out
mov
subl
add
add
add
addl
add
xchg
loopne
mov
pop
movsb
xchg
jle
add
add
loop
add
add
jp
cli
add
out
call
add
add
mov
pop
rol
push
not
xor
sub
pop
xor
inc
push
dec
not
not
pop
cmpb
jne
add
push
push
call
add
add
outsl
mov
add
pop
add
je
add
add
stc
add
bound
pusha
mov
pop
jp
xchg
pop
in
mov
add
pop
leave
repnz
mov
fucomi
sub
pop
cmp
je
push
dec
pop
add
cmpl
jne
push
xor
pop
xor
push
ror
pop
pop
push
add
xor
inc
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
loopne
mov
movb
insb
add
add
stc
push
popl
lds
jecxz
pop
xchg
addb
lret
add
add
idivl
jge
jmp
jnp
movb
pop
lods
add
jecxz
add
add
leave
mov
cli
icebp
sub
pop
pop
pop
push
not
pop
pop
leave
push
lea
lea
pop
ret
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
jl
xchg
cmpsl
add
fildl
xchg
add
mov
add
sahf
xchg
add
add
add
fptan
add
add
mov
aad
cli
fisubrl
pop
fiadds
push
add
aam
xchg
aad
add
add
add
add
sub
pop
mov
push
push
lea
push
call
jmp
in
aad
jae
jmp
add
stos
add
pop
lcall
add
add
add
test
cld
add
add
lock
mov
add
jns
mov
add
add
mov
clc
jae
pop
jb
aam
ja
add
jb
scas
mov
aam
jae
add
push
mov
hlt
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
jle
add
add
lock
les
fadds
xchg
add
jno
add
mov
mov
push
in
add
add
pop
lods
mov
xchg
add
add
mov
add
add
lods
pop
add
mov
mov
add
cmpsl
cmpsl
add
add
add
add
pop
add
into
pop
pop
sub
pop
push
push
push
call
scas
stc
ljmp
pop
lret
add
movsb
popl
int3
mov
add
pusha
xlat
stc
add
ret
add
addb
add
add
sti
fwait
out
aam
in
xchg
add
add
add
xchg
add
add
pop
add
lods
js
roll
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
mov
add
jge
add
pushf
jnp
xlat
add
movsb
insb
bound
stos
add
mov
push
popl
mov
add
add
mov
leave
add
lock
clc
xchg
mov
loopne
add
push
not
xor
lea
pop
mov
push
push
push
push
push
lea
push
push
push
call
out
fstps
insb
mov
jnp
mov
mov
add
xchg
add
out
xchg
add
mov
add
add
add
xchg
sahf
loop
int
add
icebp
sub
pop
testw
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
mov
mov
add
sahf
cmpsb
add
rolb
add
loope
in
mov
out
pop
add
into
mov
add
add
add
mov
add
xchg
insb
nop
xchg
mov
mov
add
int
je
cmpsl
jecxz
out
aam
out
add
lahf
jb
in
mov
xchg
loopne
add
lcall
pop
push
add
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
push
call
faddl
add
sahf
fildl
mov
add
test
jp
add
repnz
cld
add
ficomps
add
bound
clc
pop
jmp
andl
add
add
mov
cltd
mov
add
add
fisubrs
mov
add
divb
add
lahf
scas
sub
pop
call
push
lea
push
push
push
push
lea
push
call
cltd
movsl
ja
add
lods
mov
add
add
add
xchg
cwtl
add
add
jb
add
je
add
xchg
mov
call
pop
push
push
push
push
call
add
add
imul
cmpsl
add
jno
addb
nop
add
ljmp
xchg
add
add
add
add
mov
and
popa
pusha
stos
mov
in
lock
pop
push
push
push
push
push
push
push
push
push
call
push
add
mul
add
push
add
lds
mov
xchg
add
add
add
add
in
out
sub
pop
pop
pop
push
lea
push
call
imul
add
push
nop
add
hlt
les
mov
xchg
xchg
add
test
cld
fs
mov
pop
add
xchg
add
add
add
loop
sub
pop
pop
push
push
call
out
jl
loopne
pop
add
js
and
add
ret
pushf
add
test
cmpsb
shlb
add
add
lret
lock
mov
mov
push
imul
add
popf
pop
nop
rolb
add
add
pop
fcmovnb
hlt
xchg
add
add
lret
fs
pop
leave
push
ror
pop
ret
push
push
lea
push
lea
push
push
call
mov
lahf
add
scas
push
popa
outsl
loope
add
xchg
sahf
data16
mov
add
mov
add
pop
add
add
mov
add
add
lcall
push
push
lea
push
push
call
add
xchg
mov
push
add
sub
add
imul
add
add
add
jo
adc
out
cmpsb
flds
add
xchg
clc
add
xchg
add
push
leave
push
lret
pop
addr16
mov
testl
lcall
in
add
push
ror
shl
pop
push
push
lea
push
call
add
cld
push
jno
testl
add
add
mov
bound
add
jp
movsb
add
imul
clc
lcall
push
inc
xor
xor
pop
push
push
push
push
push
call
add
std
jge
into
movsb
add
scas
mov
ljmp
jecxz
lock
mov
jle
pop
add
push
jecxz
imul
ljmp
inc
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
int
add
in
add
pop
lds
arpl
pop
out
scas
neg
jae
push
jns
add
add
add
in
jns
add
add
mov
add
test
add
add
jmp
push
add
push
add
stos
push
test
fcomps
push
push
push
push
push
push
push
lea
push
call
scas
add
movsl
insb
in
addr16
add
add
add
imul
and
add
jb
mov
popa
addb
in
pop
loopne
rcr
fwait
test
add
stos
jp
fwait
push
loopne
add
lea
push
cmp
shl
pop
sub
mov
push
ror
pop
shr
push
shl
pop
add
mov
push
push
push
lea
push
lea
push
push
call
add
add
add
jb
pop
mov
loope
clc
add
push
mov
add
lods
rclb
xchg
push
add
add
lods
jp
sti
pop
add
add
add
jno
push
sub
pop
add
pushl
push
lea
sub
sub
pop
popl
push
push
push
lea
push
lea
push
push
push
call
mov
add
xchg
xchg
lret
add
add
out
push
add
add
mov
add
xchg
imul
arpl
mov
add
add
add
add
scas
add
push
mov
jae
add
mov
sti
add
add
lcall
jnp
push
sub
rol
add
pop
add
push
inc
shl
add
add
pop
xor
lea
push
add
pop
mov
add
push
lea
pop
xor
rol
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
mov
movl
add
mov
add
add
add
mov
gs
sub
pop
nop
push
dec
shl
pop
nop
push
shl
sub
pop
xor
nop
push
lea
push
push
push
lea
push
push
push
lea
push
call
call
add
jns
sahf
addr16
out
add
add
pushf
int3
add
movsb
add
mov
add
filds
sub
pop
nop
inc
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
cld
push
add
pop
add
add
xchg
mov
push
add
add
push
pop
nop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
add
mov
add
mov
add
add
jp
push
add
add
add
push
mov
add
mov
add
jnp
add
filds
pop
pop
mov
in
adc
fcomps
cmp
jne
add
push
push
call
incb
add
add
add
xchg
add
add
sar
jle
add
int
into
incb
jmp
sbbl
popf
add
in
movsb
les
mov
add
add
aad
add
mov
jno
repnz
add
sti
icebp
add
fwait
sub
sub
pop
nop
nop
push
dec
pop
cmp
je
push
push
push
push
push
push
push
call
in
push
add
into
mov
add
add
xchg
out
mov
add
cmc
roll
lahf
mov
stos
leave
loopne
inc
js
push
add
add
lret
test
push
add
add
sub
pop
nop
push
ror
pop
nop
push
push
push
push
push
call
out
add
testb
jp
add
add
add
add
imul
pop
outsl
pop
popf
test
mov
add
loop
mov
xchg
add
nop
push
push
call
test
scas
add
lods
testb
xchg
mov
add
cli
popl
xlat
add
jnp
push
mov
hlt
pop
sahf
add
add
add
flds
enter
push
ljmp
add
add
mov
add
add
add
add
mov
jns
sub
pop
nop
cmp
jb
push
push
lea
push
push
push
push
push
push
lea
push
call
add
xchg
lea
add
cli
add
pop
xchg
in
out
add
push
add
into
scas
add
mov
in
fcompl
rclb
pop
jmp
mov
push
lea
push
push
lea
push
push
push
push
call
push
lods
add
jbe
add
jge
in
push
add
jp
mov
lock
add
add
js
add
in
ljmp
add
add
add
mov
movsb
add
push
adcl
add
in
sub
pop
add
push
sub
sub
rol
pop
movzwl
push
lea
push
push
push
push
call
push
add
mov
add
pushf
jmp
mov
add
loope
mov
iret
push
mov
add
jae
icebp
xchg
out
test
xchg
push
pop
imul
xchg
mov
aad
add
test
mov
add
add
inc
sbb
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
add
add
add
add
add
call
jecxz
fiadds
arpl
xchg
test
in
add
mov
add
loope
add
add
scas
mov
jb
xchg
int3
add
add
add
in
fcomps
rorl
adc
lea
push
call
lahf
fidivrs
clc
add
movb
cwtl
add
xchg
add
fnsave
jbe
mov
stc
jb
je
add
flds
add
xchg
sti
nop
add
roll
add
out
sub
pop
xor
push
lea
push
push
push
push
call
orl
hlt
mov
add
add
lret
mov
ja
jbe
out
mov
xchg
mov
add
jnp
lret
pop
pop
sub
pop
xor
push
not
xor
pop
shl
push
push
push
push
push
call
jno
imul
add
xchg
add
shlb
movsb
mov
cld
lock
add
add
rolb
add
mov
push
ret
pushf
filds
mov
data16
pusha
add
add
movsl
jo
fwait
add
std
add
in
jmp
add
jbe
jae
bound
lcall
dec
nop
add
rolb
push
pop
shl
push
rol
rol
pop
xor
shl
push
push
push
push
lea
push
push
push
push
push
call
cmc
add
fildl
fldl
add
add
cwtl
add
add
add
lahf
add
mov
fwait
int
add
add
mov
add
jle
lods
mov
fadds
mov
pushf
lret
add
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
call
add
ja
lcall
add
add
mov
add
add
mov
lahf
add
add
xchg
pop
add
jnp
add
add
hlt
jne
in
in
lcall
roll
hlt
push
add
inc
lea
not
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
xchg
jmp
push
test
bound
xchg
xchg
add
ja
out
add
test
xchg
mov
add
aad
ljmp
jo
mov
mov
add
mov
in
fdivr
lcall
pop
push
lea
push
push
call
add
add
add
rolb
mov
add
mov
outsl
add
cmpsl
add
add
scas
add
add
add
loopne
add
and
add
add
fadds
hlt
pop
pop
add
mov
xchg
mov
aad
mov
sub
pop
leave
push
push
push
push
push
call
scas
pusha
cmpsl
rolb
stos
add
gs
test
mov
jne
lcall
insb
push
leave
mov
fldl
add
fcmovb
addb
xor
add
add
mov
mov
cltd
add
add
add
hlt
lret
pop
push
lahf
icebp
clc
jno
add
mov
pushf
push
sub
pop
ret
push
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
jno
shlb
mov
push
add
add
add
mov
jb
out
out
add
mov
add
stos
test
arpl
mov
outsl
add
in
push
push
lea
push
lea
push
push
push
push
call
fsubrl
add
lock
fs
add
lcall
shlb
add
je
jmp
add
mov
add
out
mov
add
add
jl
add
add
mov
ret
fwait
push
hlt
mov
add
add
mov
lcall
push
inc
pop
push
push
dec
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
push
cmpsl
ja
add
add
lea
jns
cwtl
add
pop
xchg
pop
add
pop
jne
xchg
mov
xchg
mov
hlt
xchg
add
add
pop
std
add
push
scas
jmp
lahf
add
int3
stc
add
add
hlt
fcompl
add
add
call
jo
pushf
in
add
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
call
imul
push
fsubrs
add
mov
aad
add
add
push
addl
sarl
add
outsl
add
add
clc
mov
bound
add
add
xchg
xchg
incb
add
addr16
pop
filds
aam
movsb
add
add
mov
jecxz
aam
in
in
lcall
adc
int
jmp
je
push
lea
push
push
push
push
push
call
add
xchg
add
in
jbe
ret
out
movsb
mov
add
pop
add
addb
push
add
out
add
pop
add
lcall
jno
test
je
push
ror
rol
pop
mov
push
ror
shr
ror
ror
pop
mov
push
add
not
sub
rol
pop
mov
push
rol
xor
sub
add
pop
inc
push
push
lea
push
lea
push
push
lea
push
push
push
call
test
jae
add
add
add
push
add
imull
repnz
sar
push
popf
addl
out
lcall
add
in
loopne
cmp
je
push
rol
rol
shl
pop
test
je
push
push
push
call
in
add
mov
fldl
jne
push
loop
aad
ret
roll
jne
int
jbe
push
andl
add
jo
mov
mov
ljmp
data16
insb
pop
pop
add
hlt
pop
mov
push
lea
push
push
call
loop
loope
add
rolb
sar
add
jns
call
push
add
in
jne
nop
push
add
mov
mov
add
xchg
add
add
mov
add
add
xchg
mov
pop
loopne
push
std
in
jns
les
lret
add
sub
pop
inc
cmp
je
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
testb
out
rolb
mov
add
loopne
add
mov
xchg
loope
push
jge
movb
test
add
add
cmc
add
add
lcall
mov
mov
stos
add
out
nop
add
stos
add
enter
add
enter
hlt
sub
pop
test
jne
push
lea
push
push
push
call
add
pop
xchg
mov
add
add
xchg
fadds
stos
add
mov
add
fwait
mov
in
jl
add
add
sti
mov
sti
lea
add
fldl
test
lock
lcall
rclb
pushf
push
lea
push
lea
push
lea
push
call
mov
xchg
add
mov
pop
add
fldl
push
jne
add
add
clc
loope
fiaddl
add
lret
mov
add
aam
add
in
pop
push
not
inc
pop
pop
push
push
lea
push
push
push
push
call
add
add
out
cltd
mov
les
addb
add
add
push
mov
add
ror
lcall
add
cli
nop
add
out
fwait
rolb
add
idiv
xchg
jbe
out
jnp
sti
push
sub
pop
pop
push
lea
push
call
dec
fmul
mov
jae
sahf
add
int
add
add
add
cmpsl
jle
fidivrs
add
aam
xlat
loopne
mov
out
push
add
push
rolb
lcall
push
not
sub
shr
pop
leave
push
lea
push
call
mov
add
add
pop
add
add
add
add
test
add
pop
hlt
addb
jl
xlat
popl
add
lcall
add
pop
ret
push
add
xor
rol
pop
mov
push
push
push
push
push
push
push
push
call
add
add
add
push
mov
xchg
rolb
add
add
mov
lds
xchg
add
xchg
loop
push
into
lea
pop
inc
push
push
push
push
push
lea
push
push
push
push
push
call
addr16
xchg
add
add
add
add
ljmp
out
add
add
lcall
lock
lea
push
dec
xor
sub
pop
mov
test
je
push
push
push
push
push
push
push
push
call
push
add
jb
leave
add
lret
xchg
jne
xchg
add
jmp
flds
add
cmc
mov
push
add
std
mov
add
jae
add
add
add
xchg
add
pop
les
push
flds
add
add
int3
add
add
add
push
jns
in
loopne
lcall
push
push
sub
lea
ror
pop
add
push
rol
shr
rol
add
pop
cmp
jne
mov
push
push
push
lea
push
call
je
add
in
movsl
add
int3
mov
add
add
fiaddl
mov
test
mov
jmp
imul
pop
iret
fdivp
jp
mov
sub
pop
test
je
push
sub
add
ror
pop
mov
push
rol
lea
pop
add
push
add
shr
pop
cmp
je
push
lea
push
push
call
add
mov
add
stos
in
mov
jl
cmpsl
add
add
xchg
add
shll
add
push
pop
out
add
add
std
add
jo
add
add
cmpsl
add
cmpsl
pusha
mov
movsl
lret
lods
mov
xchg
add
in
call
lcall
jmp
call
jecxz
xor
ror
pop
xor
push
push
push
push
push
push
push
push
push
push
call
add
jmp
add
xchg
pop
ffreep
add
in
pop
pop
add
add
loopne
cld
scas
add
add
fs
in
add
in
fdivr
lcall
push
not
inc
not
pop
pop
push
sub
lea
pop
pop
push
push
push
call
push
add
loop
add
add
js
hlt
js
add
add
push
stos
jmp
stc
xchg
cltd
add
mov
fcoml
add
add
add
add
jne
loop
sti
lods
fiaddl
scas
mov
xchg
add
add
sarb
add
jns
shrb
add
nop
add
jge
add
push
push
push
push
push
push
push
push
call
addl
imul
jmp
shll
pop
rcl
add
add
add
out
js
add
ljmp
mov
xchg
fwait
add
out
mov
add
add
cmpsb
add
jno
xchg
loop
jmp
add
mov
add
lcall
ret
push
sub
add
pop
lea
push
push
push
push
push
push
push
call
pusha
add
add
shlb
pusha
std
jae
stos
pop
scas
mov
enter
ficomps
add
in
add
pushf
addl
int
bound
mov
out
pop
jnp
add
jl
leave
add
add
add
jne
mov
add
pop
push
push
push
lea
push
lea
push
push
push
call
out
mov
fidivl
arpl
add
pusha
loope
add
jmp
add
mov
clc
push
add
stos
add
add
add
add
rolb
add
pop
mov
jl
jno
add
mov
add
add
xchg
cltd
xchg
add
add
add
sub
pop
pop
pop
push
shl
not
xor
pop
leave
push
lea
push
push
push
push
push
push
call
insb
arpl
add
cwtl
add
pop
mov
imul
lret
add
mov
mov
int3
rolb
cmc
fldl
imul
add
add
add
add
fwait
rcrb
add
lcall
lcall
or
mov
push
sub
add
not
shl
pop
pop
push
sub
pop
pop
push
ror
pop
pop
push
xor
dec
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
cmc
add
rcll
leave
mov
add
imul
out
add
add
mov
add
roll
add
rorb
cmc
add
xchg
add
push
lret
mov
add
add
mov
add
insb
add
mov
add
add
lret
out
add
sub
pop
leave
push
push
push
push
push
push
call
faddl
shll
int
orl
popl
fsts
add
add
add
imul
add
mov
jbe
jae
jae
jmp
stc
add
call
call
ret
xor
cmp
jnp
cmp
xor
adc
and
adc
dec
cmp
jns
cmp
cmp
xor
adc
jb
adc
mov
add
loope
rclb
pop
dec
or
pmullw
out
and
and
or
iret
hlt
movsl
dec
and
shlb
pop
or
mov
mov
cs
cltd
fcmove
js
xchg
pop
js
aas
cmpsb
mov
mov
mov
ds
cmpsb
fidivrs
adc
and
loopne
jecxz
sub
lahf
add
outsl
pushf
push
push
jb
sbbb
sbb
gs
test
int
ret
dec
jno
clc
arpl
loope
mov
ljmp
sbb
or
mov
cmp
add
cltd
int
dec
in
and
data16
in
jns
pop
pop
sub
add
lcall
pop
or
call
mov
addr16
dec
movsl
mov
mov
or
lods
xor
mov
sbb
xchg
add
mov
sub
xorb
aam
ret
cmp
lods
xor
sub
push
jb
les
and
lods
sti
xchg
shll
jmp
decl
and
mov
add
pop
push
rorl
xchg
pop
lcall
fmull
insb
out
test
stos
mov
fwait
cmp
add
test
sub
xor
cwtl
inc
aaa
fisttpl
jns
sbb
mov
cli
ja
outsb
loop
sbb
mov
push
pop
test
decl
iret
dec
pop
mov
cmp
inc
pop
adc
loope
fstl
add
test
test
jno
adc
out
bnd
sbb
mov
adc
lea
repz
lods
push
push
stc
mov
jns
jbe
out
jae
outsb
dec
jb
shll
dec
or
pop
cmp
pop
loop
jl
jecxz
push
int3
addr16
pop
mov
aas
push
lods
inc
push
mov
cs
repnz
push
cld
lock
fistps
add
jge
sub
rol
sbb
in
inc
inc
add
xchg
push
inc
cwtl
add
subl
movsb
sti
xor
outsl
in
inc
inc
outsb
into
pop
or
push
push
lock
je
cmp
add
cmp
rorb
loopne
adc
sub
test
outsl
dec
out
lea
inc
loopne
test
outsl
xlat
sub
xor
test
and
cs
pop
jg
addr16
pushl
add
jb
xchg
and
inc
push
inc
lret
lahf
inc
int
in
ljmp
or
xchg
push
adc
pop
jmp
sub
pusha
mov
cmpsb
dec
loopne
xchg
jge
or
jbe
inc
rep
aad
adc
and
fnstcw
je
jnp
mov
inc
icebp
push
sub
stos
jnp
cmp
add
add
push
adc
add
jmp
push
push
push
or
dec
loop
push
mov
mov
sarb
pop
frstor
jb
xchg
fs
or
dec
ficompl
and
push
hlt
and
or
stc
in
xchg
arpl
mov
inc
lret
add
repz
jmp
push
add
push
xchg
lods
test
push
js
or
insb
dec
mov
rcr
loop
and
xchg
sbb
call
jno
fistps
push
mov
sbb
outsb
loopne
dec
sti
imull
mov
aaa
movsb
add
mov
inc
xchg
ffree
sub
iret
dec
aaa
xor
aam
and
mov
neg
mov
in
subb
push
repnz
hlt
pop
mov
in
es
lahf
pop
push
test
inc
pop
and
jmp
lret
push
negl
in
inc
sub
push
xchg
or
push
in
pop
fstps
xlat
dec
popf
cmpsl
push
or
xchg
out
out
out
stc
xchg
dec
sti
mov
int
inc
xor
xchg
insl
jnp
sub
fstpl
movsb
dec
inc
xlat
mov
mov
dec
loop
jmp
mov
test
lret
xor
inc
and
jecxz
push
sahf
mov
test
pop
sahf
add
scas
lret
xor
push
enter
mov
add
dec
xor
xor
sub
or
inc
jle
addr16
cmp
inc
inc
pusha
jne
mov
movsb
dec
or
loopne
jbe
enter
and
js
pop
pop
lcall
int3
movb
das
dec
mov
bound
ret
test
sbb
aaa
pop
mov
xlat
xchg
mov
xlat
test
test
inc
mov
cmp
sbb
fprem
mov
push
aam
repz
xor
pop
repz
lea
and
dec
xor
pop
div
lea
mov
addr16
insl
inc
enter
push
push
jp
xor
subb
xchg
jae
sbb
lods
add
and
bound
mov
xor
movzbl
lds
aad
pushf
jecxz
fld
mov
cs
xlat
mov
pop
cmp
mov
sub
and
dec
xor
test
orl
inc
ljmp
inc
xchg
loop
adc
pushf
lock
push
cmp
push
push
hlt
loope
xorl
xchg
sub
xor
sbb
loopne
mov
test
movsl
add
add
mov
mov
in
xchg
push
fsubp
iret
and
and
pop
or
repnz
jge
cwtl
push
enter
and
cmp
mov
xchg
pusha
push
or
mov
aam
rolb
xor
dec
add
mov
cli
sahf
pop
mov
fs
hlt
test
mov
repz
adc
mov
adc
add
sbb
pusha
rorb
sti
out
jo
mov
ret
add
lahf
sub
adc
jne
icebp
inc
into
add
push
sub
pop
adcb
rclb
jl
movsb
mov
mov
mov
add
addr16
xchg
mov
das
cmp
pop
mov
cmpsb
lret
pop
cmp
dec
push
push
pushf
add
mov
lcall
adc
testl
mov
xor
xor
xor
into
mov
mov
push
mov
mov
jle
jl
dec
sub
movsl
jae
adc
dec
push
pop
je
push
repz
mov
xchg
cmp
sti
sbb
and
mov
sbb
sub
rol
pop
ljmp
inc
add
adc
cld
ret
jp
push
xchg
loop
lock
fisubl
sbb
jl
stos
fnstsw
push
dec
sbb
dec
mov
or
repnz
fnstsw
fildll
xor
idiv
pop
xchg
push
add
xchg
outsb
jmp
add
hlt
mov
pop
cmp
ljmp
ret
jne
and
adc
clc
in
dec
scas
xor
outsl
bnd
sub
mov
xchg
or
lcall
outsl
test
nop
sbb
sub
rorb
mov
and
or
pop
cmp
push
push
jae
and
adc
into
cmp
shr
mov
pop
sbb
stc
loop
sbb
aaa
lret
xorb
fmull
pop
or
sub
and
dec
pop
test
loop
pop
in
mov
aaa
popf
lds
cltd
sub
cmp
cmp
fwait
inc
mov
out
push
popa
rorb
sub
lea
xor
cld
aas
bound
inc
push
cmp
push
imul
shll
pop
xor
mov
and
test
push
cld
xchg
and
add
and
fisubrl
sbb
mov
push
jo
or
jg
pop
cld
sbb
xchg
pushf
adc
sub
rcrb
xchg
cli
pop
jbe
mov
jnp
adc
out
dec
mov
inc
mov
ret
cmpsb
xchg
sub
jb
xchg
lret
nop
push
scas
mov
mov
pop
lods
cmp
std
or
cltd
popa
sbb
ret
sbb
add
adc
inc
frstor
mov
xchg
aam
cmpsb
push
fdivrp
pop
add
fld
add
sahf
scas
mov
dec
xchg
js
cltd
int
cmp
pushf
jmp
inc
fildll
gs
mov
aad
lret
sbb
pop
fcompl
je
out
ja
rcll
fimuls
in
mov
or
filds
xlat
adc
pop
add
outsb
xchg
sahf
xchg
pop
mov
mov
loopne
or
mov
mov
adcl
ss
cwtl
mov
pop
jnp
dec
loop
je
loope
aas
inc
addb
insb
mov
rorb
in
loope
sbbb
sarb
xchg
std
sahf
mov
sub
mov
lods
cmp
pop
movsb
fwait
mov
lret
hlt
mov
test
mov
or
lods
popf
xchg
adc
or
xor
lret
subl
cmp
and
int
jbe
sbb
mov
jp
fdivrs
cmp
and
orl
xchg
test
mov
lea
cmp
inc
cld
jnp
out
fldt
std
push
enter
lret
test
jg
sbb
mov
xchg
aam
jmp
shll
adc
adc
shr
fmull
divl
push
inc
test
roll
pop
lcall
inc
leave
cmp
fnstsw
sahf
fsts
jns
fstp
cmp
mov
cmp
into
sbb
lds
mov
sbb
mov
adc
push
xchg
rcr
test
pop
rorb
shrl
jo
sti
lods
and
xor
cwtl
mov
sub
subb
andl
mov
lahf
dec
xchg
inc
inc
rorb
push
or
push
dec
mov
push
in
bound
das
jl
out
jp
lea
cld
movzbl
hlt
mov
out
sub
movsb
nop
scas
scas
ja
or
fsubs
es
imul
jbe
xor
push
jne
mov
mov
cmp
pop
pop
cltd
add
sarb
dec
cmpsl
in
sbb
xchg
xchg
dec
mov
jbe
mov
mov
mov
dec
mov
mov
xchg
jecxz
sbbl
mov
push
fnsave
jmp
cmp
add
loope
and
dec
cmp
push
pop
dec
outsl
and
push
test
pop
pushf
and
dec
in
test
add
mov
filds
xor
cmpsl
addb
sub
ficompl
push
lcall
xor
stos
and
lods
xor
aaa
xor
imul
pop
dec
into
jecxz
repnz
adc
ja
enter
cmp
cmp
mov
test
push
add
aas
fwait
pop
movsl
cmp
mov
faddl
popf
adc
frstor
xchg
sub
incl
test
js
add
inc
imul
cmc
int
mov
jg
fldt
imul
mov
add
and
jge
mov
or
push
dec
cmc
mov
jb
cs
out
cmpsl
les
test
adc
mov
pop
into
cmovo
movsb
pop
es
cmpsl
adc
aam
pop
push
inc
shll
es
loopne
xchg
out
adc
jecxz
ss
rcrl
push
mov
mov
adc
adc
push
test
add
mov
aad
cs
mov
or
rol
mov
push
push
movsl
repnz
loope,pt
inc
sub
xchg
andb
gs
shrb
lds
jo
mov
jo
enter
adc
dec
out
sti
and
data16
pop
js
in
sub
sbb
inc
adc
push
lea
cmp
push
iret
add
cwtl
push
push
out
mov
movsb
or
pop
cmp
dec
stos
sti
inc
push
subl
add
mov
ds
mov
xor
into
mov
addr16
gs
jae
inc
sub
sbb
sub
fists
test
stos
mov
jne
sbb
pop
hlt
roll
aaa
sbb
and
xor
stos
in
sbb
xor
clc
add
or
movsl
cltd
in
cmpsl
adc
enter
push
or
clc
sbb
cltd
jne
or
out
test
or
cli
adc
xor
xchg
fsub
inc
and
in
out
repnz
xchg
sub
mov
mov
pop
or
cmpsl
mov
cmpsb
fs
adc
das
jmp
test
cmpb
lods
add
mov
or
cwtd
cmp
sbb
mov
out
xchg
aaa
lret
addr16
cwtl
loop
add
adc
stos
mull
push
decl
lret
mov
xchg
arpl
mov
jo
cld
cld
ss
pop
lea
push
push
rolb
cmpsl
jb
popa
in
dec
mov
pop
mov
inc
in
nop
add
cmp
xor
lods
fmuls
sahf
je
mov
arpl
lods
push
add
mov
inc
adc
ret
stc
cli
and
lret
unpckhps
sbbl
fwait
ss
ret
mov
mov
sti
sbbl
xor
popf
iret
jns
mov
mov
out
fists
fnstsw
rcr
nop
add
clc
jo
xor
push
fs
adc
insl
xchg
pop
popa
lods
cmp
add
or
sarl
add
aam
into
sbb
mov
xchg
loopne
adc
sarl
std
out
rorb
push
xor
lahf
outsb
jno
inc
dec
lea
fsts
stos
mov
push
add
js
push
addr16
inc
xchg
cli
inc
icebp
and
outsl
lds
mov
pop
sub
pushf
cmp
inc
rcll
stos
inc
mov
dec
lock
ljmp
adc
xor
rol
les
xchg
or
sbb
xor
lock
cmp
push
test
inc
movsb
inc
mov
adc
fadds
ja
and
push
sbb
ja
mov
sbb
lcall
mov
inc
rcrb
xchg
and
out
cmpsb
leave
movsl
push
xchg
aad
cmp
add
pop
jge
loope
xor
insb
aaa
sub
inc
mov
repnz
xchg
pop
jns
mov
ja
insb
xchg
pop
mov
mov
in
aam
adc
sbb
pop
jmp
testl
jne
pusha
pushf
mov
inc
push
mov
idivb
pop
pop
cmp
pop
xchg
hlt
movsb
aaa
out
mov
cmpsl
movsl
cmp
daa
push
ljmp
mov
fwait
scas
or
addb
out
pop
repz
ss
add
dec
into
jbe
lds
les
popf
fldt
pushf
cmp
mov
push
jecxz
clc
scas
shlb
sbb
sar
mov
mov
dec
out
add
int
mov
push
sbb
cmp
mov
movsb
fsubl
fmull
outsb
cli
inc
mov
aad
aaa
mov
out
xchg
mov
sbb
sbb
sub
shl
hlt
xchg
lods
das
rcrb
push
add
cltd
cmp
stc
dec
xor
jl
or
push
jnp
mov
aad
loope
test
ja
imul
xor
sub
jmp
jl
aad
imul
and
dec
fbld
lods
jmp
push
mov
repnz
call
fnsave
movsl
data16
pop
into
add
pop
adc
divl
jge
inc
lea
or
adc
and
ret
in
mov
adc
mov
xor
dec
mov
adc
pop
lahf
fcmovnb
and
pop
push
jnp
popa
jnp
js
in
jmp
orb
xlat
out
or
cli
or
rorl
jo
mov
inc
dec
mov
lock
xchg
sbb
dec
inc
cld
jl
fs
jno
xchg
int
cmp
je
das
out
lret
sbb
movsl
jo
pop
pop
inc
enter
mov
sti
xchg
mov
mov
shlb
inc
and
repnz
sub
adc
data16
mov
das
inc
xchg
mov
inc
notb
pop
loope
xor
jge,pn
mov
jmp
fcomps
cmp
mov
xlat
adc
subb
jmp
mov
call
jle
adc
mov
push
inc
and
ds
in
mov
xchg
repz
repnz
ss
mov
aaa
mov
jnp
dec
ljmp
out
scas
das
loopne
pushf
pop
je
enter
dec
cmp
repz
scas
push
into
int3
and
lret
cmp
pop
dec
xchg
push
pop
push
adc
movsb
cmp
push
imul
sub
daa
sub
cmc
arpl
movsl
jg
lcall
iret
loop
outsl
nop
lock
inc
mov
sbb
push
mov
lret
mov
inc
maxps
mov
cli
jb
decb
cmp
xchg
sbb
dec
cli
mov
xchg
in
pop
loop
pop
mov
stos
je
cs
pop
stc
add
movsl
fildl
mov
cltd
and
mov
popf
outsb
ss
ss
lahf
xor
mov
mov
push
pop
lahf
jecxz
test
movsl
cwtl
outsl
shll
push
fisubs
inc
ret
xchg
insb
loopne
push
mov
rcll
aaa
add
mov
lret
xchg
testl
pop
orb
repnz
add
outsb
dec
mov
xor
test
push
sub
loop
push
pushf
push
xchg
xor
stos
xor
iret
cmp
rcll
adc
xchg
out
pushf
mov
push
xor
movsb
loope
sub
jo
nop
lock
xor
adc
addr16
or
cltd
test
movsb
into
or
sbb
cmpsl
insl
leave
sarb
decb
cwtl
mov
rcll
inc
push
mov
cmp
out
jmp
fisttps
mov
scas
cmp
mov
aas
jle
mov
jge
xchg
jae
cmp
iret
pushl
fsub
lahf
dec
jmp
mov
cmpsb
push
sub
cwtl
dec
scas
jns
xlat
inc
add
adc
in
pop
mov
rorl
out
sub
sbb
out
pop
pop
iret
or
mov
out
neg
cmp
neg
jae
push
insl
jno
xchg
xor
mov
js
bound
add
stos
fwait
sub
mov
fs
enter
sahf
push
add
push
mov
inc
outsl
jl
test
je
adc
lods
mov
inc
jle
inc
aam
test
mov
push
in
in
push
popa
scas
aas
ss
inc
inc
dec
cs
dec
adc
and
inc
sub
xor
clc
clc
lret
cltd
xchg
or
in
int3
dec
loopne
popa
pushf
jg
lret
inc
int
int3
mov
or
and
pop
dec
lock
mov
ficoml
js
and
lret
dec
cmp
push
sub
sub
add
dec
mov
sbb
sbb
mov
clc
lahf
adc
in
jp
pop
jmp
pusha
mov
dec
sti
sbb
push
pushf
arpl
pop
hlt
insb
aaa
xchg
insb
cld
cmp
xor
popa
push
push
push
sbb
add
ljmp
pop
mov
popf
addb
add
cmp
pop
xchg
mov
add
stos
and
aas
jmp
aam
or
mov
mov
lahf
mov
jl
fdiv
pop
pop
pop
push
push
sbb
out
inc
scas
into
in
outsb
mov
repz
sbb
add
lahf
inc
pop
pop
or
or
cltd
inc
loope
push
mov
pop
js
and
loop
mov
popf
cmp
push
aaa
jle
push
jb
sub
mov
xor
rorl
dec
jno
stos
int
lods
jns
and
jbe
ret
pop
popf
dec
movsb
adc
xor
adc
and
out
and
cmp
lods
jmp
mov
jle
loopne
lea
jg
lods
imull
ss
lcall
push
dec
fidivl
cmc
test
xchg
es
push
xor
pop
dec
mov
loop
dec
cli
mov
aaa
xchg
insb
call
push
jl
jmp
dec
sbb
loope
xlat
repz
shrl
jnp
lret
test
xchg
int
daa
ja
or
into
leave
sub
mov
hlt
lret
pusha
sbb
into
push
pop
xchg
adc
pushf
jb
out
aas
cmp
outsl
data16
xchg
mov
hlt
inc
sti
jge
inc
call
dec
cwtl
mov
fwait
stos
jle
leave
fistpl
imul
std
into
cmpsl
test
pop
or
pushf
push
aaa
cmp
or
divb
push
pop
mov
or
jb
or
in
lret
sbb
lret
sbb
mov
sbb
mulb
imulb
inc
lods
mov
int
in
jne
mov
stos
pop
mov
mov
imul
dec
push
add
sbb
test
pushl
mov
adc
dec
adc
cmp
push
mov
adcl
jecxz
inc
js
mov
movb
lret
addr16
pop
in
fsubl
xor
loop
les
into
ja
add
icebp
lret
clc
adc
test
mov
mov
mov
dec
stos
dec
or
and
or
loope
cmc
mov
sahf
dec
lock
cmpsl
jne
movsb
jp
or
cltd
dec
fldt
int
lods
das
xchg
adc
icebp
mov
inc
clc
xor
movl
lcall
or
mov
loop
stos
mov
out
shr
pop
mov
imul
xorb
in
in
xchg
xor
dec
lods
sbb
dec
sub
jmp
addl
mov
mov
add
push
xchg
fimuls
xor
mov
cli
pop
nop
jne
adc
les
lds
addb
jle
flds
cmpsb
pushf
in
movsl
stc
ljmp
pop
hlt
sti
and
push
dec
cmp
push
fsubl
push
jbe
mov
mov
add
das
loop
adc
or
mov
test
sub
push
stos
imul
das
push
insl
push
and
mov
jp
or
out
stos
dec
int
add
filds
insl
clc
sbb
mov
mov
push
fiaddl
inc
lods
mov
fcoms
hlt
jg
jge
or
cmp
mov
dec
cmc
bound
dec
dec
mov
or
loope
inc
jmp
mov
or
mov
addr16
mov
mov
lds
jl
mov
jb
adc
mov
mov
xorb
fisubs
and
lods
xor
lods
and
fisubl
in
gs
adc
add
fstpl
aad
pop
adc
fcmove
daa
in
ret
jle
stos
outsb
imul
js
divl
push
pop
hlt
mov
nop
jle
insb
xchg
xchg
and
cs
mov
push
inc
push
inc
aam
sbb
jmp
mov
pop
or
roll
jnp
or
xchg
in
jbe
mov
lea
arpl
into
inc
scas
or
push
inc
and
xchg
ja
pop
icebp
adc
cmp
int3
push
dec
sbb
and
repnz
mov
movsb
jg
fcoms
push
repz
jns
js
mov
ficoml
mov
pop
out
cmp
loopne
rorb
inc
pop
ret
add
lods
add
adcb
or
sbb
pop
addr16
pushf
movsb
push
lods
in
mov
fildl
pop
add
push
stos
mov
idivb
fidivrs
out
call
enter
popa
dec
arpl
cmpsl
shlb
add
and
lret
push
and
fisttps
xchg
mov
push
push
cmp
sti
mov
sub
push
cmp
les
lcall
cld
fisttps
lahf
stc
scas
out
cmp
push
mov
xchg
jl
cmp
mov
sub
sbbb
push
dec
dec
inc
pop
push
adc
inc
sub
pushf
ja
xor
mov
mov
je
enter
pop
or
shlb
or
dec
cmc
jmp
outsb
sarl
xor
jge
outsb
shll
stc
xor
inc
push
out
scas
test
add
mov
fcomi
movsl
adc
das
pop
addb
cmpb
jns
inc
stos
nop
jbe
jbe
dec
push
nop
sbb
push
into
repnz
mov
pop
cmpsl
mov
jl
rcrl
mov
adc
scas
and
clc
jne
pop
sub
or
insl
dec
out
in
sbb
lea
xchg
push
lret
insb
or
stos
jnp
sti
movsb
out
adc
lret
movsl
std
adc
sbb
popa
sbb
cmc
fwait
xor
rorl
push
and
aad
jae
test
ljmp
and
repz
xchg
ds
pop
jnp
ret
std
jno
mov
dec
mov
les
add
arpl
das
and
or
sbb
xchg
mov
xchg
outsb
call
and
or
andb
push
out
or
fnstenv
or
cli
sbb
xchg
dec
loopne
mov
adc
xor
xor
xorb
leave
repnz
cmp
lea
lcall
add
lds
mov
adc
mov
or
dec
shll
pop
lock
imul
mov
add
shl
loop
popa
xchg
andb
mov
pop
ja
lret
xchg
sahf
add
lret
dec
fcompl
jb
add
mov
ljmp
jg
mov
js
sbb
sarb
aam
cmp
cmp
or
dec
mulb
pop
es
and
popa
add
std
cmp
adc
jno
xchg
insb
jae
xchg
mov
add
add
sbb
loop
jae
and
dec
cmp
mov
jle
call
mov
inc
popf
cmpsb
push
popa
ret
and
pop
test
adc
stc
lods
mov
cmp
shrl
stos
xlat
lahf
gs
and
xchg
outsb
test
insb
mov
sarb
or
sub
cltd
xor
sti
pop
cmp
fstpl
push
xchg
inc
inc
es
movsb
pop
jp
cmp
mov
mov
sbb
cmpsl
sub
les
jnp
add
aaa
jmp
or
dec
pushf
or
mov
mull
or
xor
mov
into
sti
and
mov
mov
add
mov
shr
lret
jecxz
push
fisttpl
movsl
movsb
ss
cmpsb
insb
xor
pop
cmp
insb
sub
add
fwait
jns
ret
jl
gs
orb
enter
push
push
push
or
jb
sti
sbb
outsl
xlat
dec
out
aad
lret
sub
mov
lods
dec
out
cmp
aas
or
jae
dec
mov
call
pop
pop
mov
xor
add
leave
aaa
lret
int3
inc
sub
enter
push
mov
pop
std
xchg
mov
lcall
and
gs
mov
scas
push
out
hlt
sahf
sub
xchg
std
mov
es
sti
mov
jmp
xchg
loop
mov
add
bound
mov
int3
jle
jae
dec
jmp
rclb
fistps
pop
xchg
fstps
xchg
sbb
lret
dec
mov
and
adc
pushf
adc
shrb
mov
fistpll
fcoms
push
test
shrl
xor
ficomps
test
lcall
mov
and
mov
mov
jge
xor
jno
std
mov
pushf
fcmove
leave
inc
or
addr16
push
fs
sbb
inc
das
andl
std
push
xor
pushf
jle
divb
pushl
sub
shll
jl
int3
push
fwait
mov
mov
xor
cmp
jae
xchg
push
adc
mov
rorl
sub
push
mov
fsubp
adcl
aam
aad
and
add
stos
and
pop
aad
addb
adc
imul
mov
push
inc
iret
inc
outsl
scas
cld
jg
loop
mov
cs
fdivs
rcrb
and
cmp
inc
xchg
xor
in
push
xchg
ficoms
jno
imul
imul
xor
mov
leave
mov
rolb
pop
pop
aam
jno
inc
push
loope
adc
shll
ret
pusha
cmp
or
push
inc
mov
inc
aas
pop
jecxz
adc
lret
or
cmp
pop
sub
das
mov
pop
jecxz
int3
hlt
pop
pop
imull
or
cmc
out
jg
jo
adc
sub
xor
or
mov
icebp
arpl
mov
xchg
pop
mulb
mov
les
into
mov
sbb
push
adc
movsb
bswap
int3
test
mov
bnd
aam
pop
lods
pushf
adc
adc
pop
test
dec
jecxz
push
fistpl
pop
ret
sub
rclb
push
insb
fs
decl
stos
lcall
fidivrs
inc
into
pop
mov
or
test
and
push
loop
push
sar
ret
aas
jmp
sub
or
push
in
addr16
notb
jae
test
push
mov
jl
inc
ja
add
fyl2xp1
std
loopne
push
pop
add
dec
mov
jno
scas
mov
data16
in
cmpsl
adc
jne
push
or
out
lods
mov
bound
ficoms
mov
movsb
mov
popf
pop
mov
das
jl
cmpsb
sbb
jbe
ljmp
sbb
cmp
rep
fistl
sbb
mov
sub
testl
mov
sbb
test
sub
xlat
mov
ficompl
inc
inc
icebp
or
sbb
push
lcall
mov
lret
divb
or
jl
jge
cltd
jmp
shl
imul
cmp
mov
push
fs
cltd
stc
xor
or
aaa
push
faddp
movsl
out
add
pusha
pop
lahf
fidivs
add
pop
pop
sarl
xor
push
fsubrs
sbb
jmp
and
pop
mov
call
stc
jle
fcoml
out
jb
dec
xor
pushf
cli
insb
jb
pop
push
adc
mov
daa
fldt
jge
sub
mov
mov
push
repz
mov
jae
aas
mov
adc
adc
xchg
call
cmp
scas
mov
loope
lret
in
sbb
or
xor
dec
orl
addb
loop
aas
les
scas
shrl
add
xchg
fidivl
xlat
jle
add
rcll
popa
mov
int3
xchg
and
imul
jle
cmpsl
pop
mov
adc
xchg
cmp
imul
pop
aas
faddp
ret
je
scas
fucomi
jne
jbe
sub
fnstenv
in
enter
dec
adc
mulb
pop
rcll
push
pop
aas
js
pop
add
inc
fsubrs
imul
cmp
pop
cmpsl
stc
mov
dec
out
sbb
out
sarl
scas
in
mov
js
adc
clc
lret
or
fstl
test
or
cmpsb
pushf
push
outsl
dec
int3
bound
sub
pop
cld
out
daa
test
xor
fidivs
xacquire
test
and
fisubs
ret
out
lahf
popf
and
jmp
fists
adc
fwait
addb
stos
jbe
enter
fldcw
lret
jp
inc
lea
mov
sbb
xchg
jecxz
je
add
or
xchg
inc
lret
mov
fs
lea
les
cmp
hlt
mov
cmpsl
pop
push
in
mov
out
scas
pop
add
inc
fldt
dec
cmc
ficoml
mov
sbb
jns
lock
ja
push
in
cli
test
mov
iret
mov
mov
js
cmpb
cmpsl
push
clc
xchg
incb
pop
pop
push
sahf
popf
inc
push
or
test
push
outsl
jne
xor
jo
pop
lods
cli
fdivrp
es
bnd
pop
sbbl
mov
or
xor
mov
pop
ja
lahf
mov
aad
add
xchg
or
daa
sbb
test
jo
jno
loopne
sub
repnz
mov
cmp
leave
int
jp
mov
testl
pop
add
cmp
call
add
xchg
or
scas
andb
push
push
and
pop
pop
loope
sub
enter
jp
push
fwait
inc
jnp
fdivrl
add
cmp
add
pushf
pop
mov
addr16
pop
or
aad
mov
pop
les
xor
repz
jge
adc
mov
imulb
leave
push
daa
lods
mov
jae
test
push
es
jae
into
inc
clc
clc
xchg
add
cmp
add
push
pop
pop
popf
lods
push
dec
je
leave
jae
pop
out
lret
repz
sbb
mov
pop
cmp
outsl
cmp
and
loop
sbb
in
add
sbb
adc
xchg
mov
mov
jp
inc
lret
xchg
scas
lret
dec
add
dec
jl
mov
pop
jb
xor
jl
idivl
xor
gs
push
push
aaa
sti
cmp
xor
pop
lahf
or
mov
mov
pop
sti
xchg
sub
sub
pushf
dec
push
xor
jo
je
ret
cmp
data16
push
loope
cmp
push
xchg
std
ljmp
cmpordps
ljmp
pushf
lods
mov
xchg
cmpsl
imul
daa
data16
add
dec
idivl
sti
sub
push
sub
xchg
cld
fwait
jmp
inc
out
cwtl
or
stos
pusha
push
dec
add
bound
or
pop
mov
jmp
xchg
mov
inc
inc
lods
dec
sub
fdivl
hlt
in
aaa
and
adc
mov
mov
jno
outsl
lods
fmull
mov
pop
fstps
sbb
sub
or
inc
loop
xchg
movsb
push
cld
jg
lret
movb
mov
pop
sub
xchg
push
aas
add
mov
test
cs
jge
mov
mov
mov
enter
jno
mov
incl
ja
sbb
adc
addl
ror
or
ja
mov
adc
std
movsb
push
cwtl
pusha
sbb
xchg
aad
in
repz
sub
and
repz
xchg
xor
dec
cmp
jns
xor
lea
mov
inc
int
icebp
enter
xchg
movsl
iret
mov
addb
pop
addb
clc
push
fiaddl
lock
dec
and
xchg
mov
int3
leave
imul
aas
mov
pop
cmc
clc
sahf
fildl
lods
sub
xchg
mov
push
add
jnp
and
in
jnp
add
mov
js
pop
adc
cmc
push
negl
iret
and
movsb
sbb
data16
movsb
mov
cmp
dec
scas
adc
or
dec
inc
ss
inc
psrad
aas
test
daa
xchg
cld
loope
out
daa
mov
xchg
jl
pushl
jle
divl
ja
ficoml
sbb
lods
popf
mov
dec
bound
mov
xchg
cmp
sbb
sbb
dec
mov
pop
xor
mov
adc
repz
pop
sub
jecxz
insb
movsb
xor
add
jo
aaa
adc
sysenter
ljmp
push
xchg
addb
dec
pop
push
int3
push
cs
jecxz
into
pop
daa
std
out
out
adc
lods
inc
loop
push
icebp
std
shll
and
data16
jbe
sarb
and
pop
out
popf
xor
in
mov
jle
xchg
das
mov
xchg
cmpsb
cli
jne
xor
push
xor
jmp
or
outsl
insl
and
rcr
cs
ljmp
jp
push
cltd
push
sbb
aas
fildll
popf
pop
gs
pop
or
cwtl
jg
and
cs
cltd
xor
pop
mov
outsl
cmp
in
stos
and
xorb
cltd
cli
push
push
cmpsl
fisubrl
push
cli
in
push
movsb
mov
add
pop
and
sub
aad
cmpsb
pop
add
mov
jnp
es
cld
xchg
cmp
fidivs
sti
inc
iret
clc
xchg
jecxz
rcll
inc
xor
into
mov
aad
push
aad
xchg
push
dec
xor
and
push
jo
lods
cmp
or
inc
fildl
sub
rolb
cmp
in
negl
mov
pop
sub
jne
sub
and
sbb
push
cmpsl
into
shrl
dec
insl
movb
test
inc
daa
push
lret
and
clc
sahf
jecxz
push
cmp
sub
jbe
out
jb
loopne
fmulp
div
xchg
pop
xchg
and
rolb
mov
outsl
loope
pop
adc
pushf
push
sti
in
adc
jo
lahf
loop
mov
inc
xchg
mov
cmp
mov
dec
cmpb
inc
push
jge
les
sub
pop
dec
test
sub
sub
mov
jmp
jbe
adc
or
sbb
out
push
mov
jae
aam
mov
pop
push
dec
xchg
xor
cld
mov
stos
mov
pop
adc
aas
test
xchg
pusha
push
jp
sahf
aad
in
add
test
xchg
dec
jl
lcall
mov
cmp
jb
cmp
mov
mov
int3
dec
stos
orb
mov
out
jns
aas
jb
test
movsb
adc
fnstsw
dec
xchg
lock
jl
xchg
jg
adc
cmpsl
stos
adc
sbb
mov
movsb
repz
lret
cmc
push
bound
or
mov
shr
or
pop
addr16
loope
or
and
add
aaa
xchg
and
lcall
aas
addb
in
dec
adc
idiv
sahf
mov
add
cmpsl
in
orb
shlb
pop
pop
nop
popf
dec
add
mov
fistpll
xor
pop
sbb
adc
jne
das
inc
ljmp
je
daa
loop
test
jecxz
fcompl
fsubl
push
mov
push
push
test
shl
xchg
and
mov
xor
addb
fidivl
popa
cmp
push
or
adc
cwtl
fisttpll
xor
cld
cld
jo
sbb
jge
mov
jmp
sbb
ret
cmc
stc
mov
pop
sub
scas
add
out
roll
sbb
lds
push
out
add
inc
adc
xor
sub
scas
or
inc
pop
mov
cmpsb
xchg
popa
flds
out
fstp
sbb
not
add
es
aam
and
cmpsb
push
dec
jl
dec
pop
or
mov
gs
dec
mov
out
test
std
and
test
mov
cmp
daa
repz
out
mov
daa
inc
cwtl
sahf
push
rorb
add
jg
add
inc
sub
xor
cwtl
pop
test
adcb
iret
push
mov
scas
dec
bound
fnsave
bound
dec
mov
cmpsl
add
lods
f2xm1
div
adc
movsl
pop
scas
jae
sar
cli
stc
cmpsl
lahf
shll
jb
xor
mov
mov
cmp
data16
nop
mov
faddl
add
je
fisttpl
fsubs
lods
dec
jo
pop
mov
xchg
jo
outsl
clc
sub
sub
out
sbb
faddp
loopne
cmp
mov
adc
incl
adc
and
je
and
mulb
movsb
inc
icebp
xor
sbb
insl
out
gs
fs
and
popa
dec
adc
stos
or
movsb
aaa
dec
dec
imul
leave
xor
sub
cli
push
repnz
arpl
pusha
adc
jge
and
adc
out
outsb
iret
or
cmp
repz
pop
and
adcb
mov
xchg
sbb
mov
cmpsb
add
enter
subl
das
fistpl
jns
dec
cmp
outsb
add
or
sub
les
inc
jo
mov
sbb
pop
aam
lds
push
sub
xchg
cmp
dec
add
stos
dec
arpl
jmp
or
sbb
dec
push
jno
outsl
cmpsl
sbb
mov
and
outsl
stos
lods
mov
xchg
pop
test
xchg
aam
daa
fsubrl
xchg
sub
movsl
ss
les
add
mov
add
push
mov
push
sahf
xchg
aad
cmp
nop
add
cmp
add
mov
call
cwtl
pushf
sbb
pop
adc
lds
pop
clc
out
pop
mov
ljmp
adc
es
in
pushf
pop
cmp
inc
push
dec
xchg
inc
out
xchg
fdivl
sbb
int
push
xor
push
lods
std
sbb
lds
pop
pop
mov
movsl
in
jno
adc
xchg
fucomip
cmpsl
sbb
pushf
mov
xor
or
dec
jo
cld
and
sbb
addb
sub
int
pushf
faddp
jp
and
and
fsubr
push
das
and
xor
scas
call
icebp
in
mov
sti
fisubrl
fldcw
out
das
jmp
xchg
or
inc
jbe
fnsave
data16
push
in
mov
add
and
dec
mov
xchg
xchg
jb
sahf
data16
push
adc
dec
mov
inc
adc
out
dec
add
xor
adc
cltd
and
lods
xor
test
dec
adc
rolb
clc
stos
fs
movsl
inc
cs
xor
in
clc
movsb
loope
bound
lock
das
cltd
inc
xor
xor
mov
test
cld
rclb
les
setg
aad
xlat
outsb
popa
inc
pop
adc
push
hlt
xor
sub
hlt
push
cmpsb
int3
lahf
es
cmp
cld
mov
jno
and
mov
imul
adc
cwtl
stc
into
mov
adc
outsb
xlat
dec
lret
hlt
stos
and
and
fcomps
in
or
daa
js
jmp
push
xchg
push
xorb
fildll
mov
inc
sbb
fidivrl
xchg
mov
pop
cmpsb
cltd
xchg
mov
into
and
movsl
daa
cmpsb
cltd
data16
jle
jmp
xchg
cmp
jl
daa
loope
popa
xchg
stc
add
ds
cmpsb
out
xchg
test
test
in
mov
ret
jno
mov
shl
or
loope
imul
add
and
jae
cwtl
xchg
lret
dec
int
aam
loop
cmp
int
mov
rolb
push
mov
fwait
in
inc
incl
pop
fld1
xchg
rolb
xchg
xor
inc
pop
mov
push
hlt
jae
jnp
mov
addl
cmp
xor
push
add
pop
sbb
adc
mov
test
pop
and
in
sbb
sub
cmc
jge
filds
shrl
pop
sbb
sub
int3
aaa
inc
sbb
cltd
pop
out
lret
mov
or
hlt
adc
mov
test
aam
shlb
and
lret
lock
dec
pushf
repnz
sahf
int3
xor
arpl
cmp
rorl
jne
dec
jae
pop
jns
cmp
clc
mov
xchg
mov
out
scas
push
push
lock
inc
inc
test
std
in
out
repz
or
mov
shlb
sbb
or
lcall
popa
cwtl
pop
aaa
stos
mov
ficomps
lea
rclb
idivb
mov
mov
jns
adc
outsl
out
inc
movsl
popa
insl
into
test
movsb
jl
mov
mov
adc
fsubp
mov
rcr
fldl
mov
inc
testb
js
xchg
test
fstpl
mov
mov
out
mov
mulb
jbe
loop
mov
sahf
loop
mov
push
outsl
imul
inc
mov
jl
or
fbld
sub
adc
in
inc
push
movsb
adc
or
lea
lock
ljmp
mov
ja
and
movsl
inc
push
inc
outsl
cmp
es
dec
pop
xor
mov
out
cmp
inc
dec
in
push
test
cmpsl
lret
aam
jne
add
xor
jae
scas
xchg
pop
xchg
in
cs
jecxz
jno
in
cmpsl
mov
incb
inc
movsl
fs
imul
int
fistl
shll
sahf
xchg
mov
pop
fwait
inc
mov
lret
sub
ficomps
jle
and
jle
jne
js
or
push
sub
sbbl
fwait
repz
flds
leave
outsl
pop
xchg
push
or
mov
xor
mov
push
mov
pop
add
daa
sbb
aad
lret
je
mov
sub
outsl
call
sub
std
cmpsb
leave
xor
sahf
cmc
out
outsb
ljmp
mov
fiaddl
pop
dec
and
pop
mov
lahf
inc
add
in
mov
push
and
push
cmp
jae
pop
out
lock
push
xor
test
push
adc
dec
iret
cmp
mov
pop
sti
adc
inc
div
insl
jns
cmc
popa
fimull
add
sub
arpl
or
mov
inc
and
cmp
mov
jae
pop
lret
mov
sub
rcl
push
icebp
fadds
sbb
mov
ret
dec
or
sbb
sbbl
lods
jne
dec
fwait
imulb
xchg
push
ret
into
jmp
sbb
mov
mov
adc
dec
test
inc
arpl
mov
xchg
loopne
stos
mov
xlat
push
sub
sbb
aaa
push
xchg
pop
int3
jb
repz
fstpl
shll
adc
in
pop
mov
aam
lds
subl
adc
mov
jmp
test
pop
pop
addb
pop
scas
sbb
data16
and
sbb
fwait
push
fadd
out
stc
idivl
pop
push
es
adc
jmp
loop
mov
imul
adc
and
sbb
ja
lock
addr16
mov
jp
xchg
xchg
and
fldcw
lock
pop
ljmp
aad
mov
push
xor
mov
test
and
mov
bnd
jb
or
subb
mov
xchg
lock
xlat
js
fimuls
hlt
pop
jl
pop
push
in
outsb
inc
pop
daa
es
insb
sbb
and
daa
fwait
jmp
and
or
std
andl
in
push
adc
xchg
pop
sbb
outsb
mov
add
icebp
cmp
sbb
sbb
hlt
jae
add
test
mov
mov
imulb
jns
fwait
in
xchg
push
dec
lods
cltd
pushf
fidivl
mov
push
and
cmpsl
mov
add
mov
les
dec
and
lret
aaa
pop
jp
fldl
add
imul
or
sbb
jb
fcomp
in
sub
lods
adc
aas
push
push
call
sbb
inc
movsb
mov
or
insl
cmovbe
mov
lds
lods
sub
cmp
adc
inc
cmp
rcrb
xchg
loop
xchg
inc
xlat
lcall
jb
out
inc
mov
or
lods
rcll
jne
mov
test
add
sbb
test
les
mov
stos
int
leave
sub
dec
pop
shll
add
pop
jb
xchg
clc
bnd
sub
orb
data16
insb
add
dec
data16
repz
mov
cmp
and
mov
mov
mov
cwtl
mov
in
xchg
loop
pushf
or
imull
test
out
jbe
jbe
xchg
sti
stos
out
cmpsb
jge
sbb
jge
mov
mov
popa
mov
mov
loope
xor
xor
mov
pushf
lds
or
hlt
push
push
lahf
lods
or
ja
pop
sub
mov
aas
or
icebp
mov
mov
sub
shll
inc
mov
adc
push
jno
popa
pminsw
fimull
push
iret
cltd
cmc
fwait
js
imul
stos
roll
push
js
scas
repnz
sub
dec
negl
mov
cwtl
popf
mov
or
data16
mov
cmpsb
push
adc
cwtl
inc
lea
and
fwait
call
mov
fstps
adc
mov
and
push
xor
inc
mov
stos
loopne
dec
out
mov
sbb
sub
fisubl
push
repnz
js
stos
pushf
xor
rcr
sub
cld
sub
or
xchg
ficoml
lret
and
jecxz
push
xor
dec
sub
movsb
in
nop
adc
inc
movsb
stos
outsl
fistps
mov
adc
jo
stos
dec
xor
sarl
aam
ret
lahf
faddl
ljmp
mov
mov
xor
pop
mov
pushf
cwtl
push
sub
fs
iret
xor
pop
shrl
inc
and
das
push
jne
in
in
fsubl
shrb
in
push
push
adc
loop
or
mov
sbb
iret
or
mov
and
cltd
aaa
push
push
sub
add
mov
ljmp
cmp
fistpll
inc
and
and
movb
icebp
test
gs
dec
fwait
lahf
int
fsubl
jl
int3
mov
adc
pusha
addr16
sti
divb
flds
and
stos
jp
int
xor
enter
in
aaa
xlat
sti
xchg
pop
loop
fcoml
mov
mov
cmp
das
insb
push
outsb
push
push
mov
sub
fwait
dec
jmp
cmpsl
xlat
sahf
push
ljmp
fisubs
shll
call
inc
push
les
mov
int
sub
mov
cmp
sub
or
popf
push
rol
in
jae
test
lock
mov
jmp
das
or
fdivrs
clc
and
mov
repnz
xchg
movsl
lock
stos
pop
cmp
aaa
push
or
bound
jno
dec
xchg
shrl
jp
or
or
cwtl
cmpsb
stos
mov
adc
insb
or
mov
in
dec
jnp
movsb
push
scas
adc
jb
mov
mov
or
mov
int3
xchg
mov
cmc
and
push
pop
sbb
add
or
adc
daa
xlat
cmpsb
push
es
adcl
jecxz
mov
fistpll
jecxz
xor
and
popf
pop
jnp
sbb
jb
pop
lods
inc
loop
les
stos
jo
or
pushf
stos
dec
inc
dec
js
mov
fcmove
out
clc
movsl
xchg
add
std
add
push
call
push
dec
push
push
les
shl
fwait
add
jno
imul
loop
lea
xor
jo
mov
movb
das
sbbb
popa
enter
inc
xor
sarl
dec
fsubr
ficompl
or
outsb
inc
mov
add
iret
jb
or
insb
and
fbstp
punpckhbw
push
push
cltd
xchg
test
scas
cmp
out
fnstcw
mov
stc
pop
dec
cmp
xchg
add
xchg
xchg
fisttpl
clc
jmp
pop
int
jg
mov
arpl
pop
and
adc
je
fnstcw
or
arpl
xor
push
aas
ret
data16
ret
stos
pop
xchg
sbb
pop
cmpsl
loope
mov
lods
jg
das
jmp
cwtl
cmp
sbb
inc
enter
dec
adc
fisubrl
or
fwait
testl
test
repnz
fstpl
sbb
stc
sahf
pop
in
push
jecxz
scas
push
jnp
in
xchg
test
adc
jp
pop
adc
dec
pop
push
jmp
and
or
cmpsl
xor
mov
xchg
outsb
or
sub
jge
in
test
mov
dec
pop
mov
stos
xchg
and
and
cltd
popa
push
rclb
sbb
jno
cmc
in
jge
dec
in
out
pop
arpl
cmpsl
pop
xor
fisubl
dec
mov
clc
dec
mov
or
repnz
jecxz
sbb
adc
and
cmc
xchg
sahf
xor
cmpsb
add
insl
inc
cmp
jmp
cwtl
stos
into
gs
xchg
mov
add
add
or
push
aaa
jb
lods
or
test
fmull
insb
mov
adc
insb
rorb
lds
mov
sub
mov
mov
in
bound
pop
add
cli
xchg
xchg
cld
imul
stc
and
mov
lods
or
push
mov
int
mov
arpl
and
fistl
in
test
xchg
xor
call
cmpsl
movsb
in
cmp
std
loopne
mov
into
cmp
out
aaa
stos
test
mov
daa
pop
push
mov
or
pop
xchg
jp
dec
das
loop
out
mov
mov
inc
leave
enter
lods
hlt
dec
xchg
lock
push
out
mov
in
push
popf
mov
push
loope
pop
pop
xchg
fbstp
jno
dec
or
jle
stos
mov
scas
or
test
jmp
add
aam
mov
or
mov
movsl
sbb
les
imul
inc
imul
hlt
test
mov
add
cmp
sbb
pop
cmp
xchg
or
mov
or
pop
fstps
dec
call
push
fcmovu
stos
push
cli
cs
sti
add
test
push
mov
cmp
enter
leave
cli
jle
jp
dec
ss
add
mov
jno
and
jnp
sub
add
add
out
frstor
test
dec
adc
add
icebp
clc
aam
cmc
jne
xchg
push
jb
pop
je
or
sti
mov
fnstsw
jne
sbb
pop
xchg
rcrl
sub
pop
sti
call
mov
loope
sbb
push
pop
adcl
inc
push
notl
in
cs
xor
popf
lods
dec
mov
jo
lahf
cmp
sti
sub
mulb
mov
inc
mov
insb
fsubr
xchg
jnp
out
mov
ret
mov
test
adc
jge
inc
push
ficoml
test
int
mov
jne
ss
popa
test
loopne
add
mov
out
cmpb
adc
test
mov
jp
dec
adc
inc
pop
icebp
cpuid
pop
inc
sub
repnz
js
xor
cmp
ret
test
push
das
inc
arpl
ljmp
scas
call
pop
cmpsb
jo
jne
jp
imul
xor
adc
cmp
into
mov
stos
bswap
inc
sbb
dec
mov
cmp
inc
pop
shl
xor
lods
cmp
inc
fdiv
push
cli
pop
inc
lods
add
pop
ss
dec
pop
dec
mov
mov
xorl
xor
rclb
mov
cmp
mov
xchg
cs
or
jnp
call
outsl
in
repz
push
jge
call
inc
decb
pop
test
cmc
push
inc
stc
jne
sub
jo
adcb
loopne
mov
lds
aaa
addr16
push
jl
sub
flds
fs
mov
or
je
arpl
pop
aaa
mov
jl
mov
call
inc
sbb
add
dec
xchg
push
push
mov
leave
pop
or
add
jp
shlb
inc
or
sbb
sbb
insb
inc
rolb
jb
lods
cmpsb
divb
das
and
jae
dec
dec
jl
sbb
lcall
sbb
jmp
mov
dec
out
dec
sti
push
add
stc
imul
stc
lods
cwtl
xchg
mov
mov
je
adc
jno
mov
xchg
sarb
icebp
adc
dec
xlat
ljmp
fnsave
negl
mov
ss
repnz
lea
jge
lea
inc
adc
test
lea
aaa
jecxz
daa
aad
adc
cmovs
mov
mov
inc
outsl
and
inc
cmpsb
inc
xchg
nop
test
jp
das
jle
pop
enter
xchg
pop
adc
je
xchg
fucomi
jne
fisttpll
push
scas
lret
xor
pop
mov
out
sbb
mov
addr16
icebp
fldt
or
mov
jae
int
xor
adc
out
xor
andb
push
pop
shrl
pop
and
hlt
cmc
pop
shll
and
jnp
ss
mov
dec
sub
or
xor
loop
sti
push
clc
add
jmp
in
mov
push
outsl
popa
dec
data16
fdivrs
mov
jno
rorb
jge
jmp
xchg
dec
ret
lds
clc
sbb
push
or
sti
icebp
dec
loop
loop
or
cmpsl
adcb
shr
push
mov
fcoml
pushf
mov
icebp
aam
int3
js
jecxz
sbb
cmpl
out
int3
popf
aaa
lock
movsl
mov
mov
leave
nop
repz
dec
push
pop
pop
or
mov
scas
idivl
jmp
jg
jnp
dec
pop
arpl
xor
popf
repnz
mov
test
imul
mov
aas
mov
dec
or
int3
xlat
bound
sbb
fwait
xor
pop
gs
jnp
add
dec
mov
and
dec
movsl
aas
out
add
sbb
in
sub
sub
sub
lret
add
or
movsb
add
cmc
push
addb
push
push
mov
fnstcw
loopne
xchg
into
add
in
pop
push
or
cmc
mov
jle
pop
cmp
mov
jne
cmpsl
inc
adc
sbb
add
xchg
xor
add
popa
mov
sahf
dec
outsb
int
jmp
dec
mov
mov
stc
xor
mov
mov
mov
ret
ja
sub
pop
inc
ret
adc
jmp
lock
movsb
xor
mov
mov
addb
icebp
jg
add
pushf
push
sbb
lret
xchg
push
mov
push
popa
jno
ja
mov
push
sarl
jae
fistpll
repnz
ljmp
and
cmpsl
call
mov
es
cwtl
mov
sub
push
inc
lcall
xor
pop
xlat
outsb
push
outsl
push
test
dec
inc
adc
fldenv
dec
xchg
adc
ficoms
mov
fcmovb
shlb
lahf
push
mov
xchg
adc
add
add
inc
je
sarb
in
pop
into
jb
jecxz
rcrl
mov
pop
sbb
sti
out
mov
bound
cs
ljmp
adc
add
pop
adc
scas
dec
testb
dec
dec
jns
cmp
lea
mov
add
jl
into
push
iret
and
sahf
jns
xor
cmpsl
mov
adc
mov
jae
lret
xor
add
push
and
fldt
pop
aad
sub
popf
mov
inc
cmc
dec
pop
xor
pop
sbb
out
divl
adc
ljmp
pop
xlat
jge
sbb
insl
pop
call
lret
dec
mov
mov
mov
adc
scas
cmc
and
fsubrl
jmp
cs
adc
sbb
dec
lcall
pop
adc
js
imul
sub
movsl
testb
mov
mov
add
hlt
sub
std
mov
cmp
and
mov
mov
adc
adc
int
push
xchg
mov
mov
mov
pop
pcmpgtd
push
bound
cmp
rorl
mov
in
leave
add
loopne
xor
xor
sub
jne
pop
clc
nop
pop
cmc
jp
lock
push
movsb
jle
out
outsl
and
xlat
xchg
push
add
es
mov
dec
enter
fmuls
inc
je
sti
push
sub
xor
push
add
push
push
sarb
jge
lcall
es
mov
iret
push
jecxz
out
and
dec
bound
push
cmp
insb
fisubl
aad
icebp
jg
sub
cmp
push
xor
dec
and
cmp
fs
or
ljmp
inc
loope
push
sub
lret
mov
jne
insb
mov
or
roll
lods
dec
xchg
mov
fmul
pop
les
cmpsl
outsb
fwait
jnp
outsl
insl
sarb
or
mov
sub
idivb
es
lret
and
push
mov
je
loop
mov
cmpsb
jecxz
sar
dec
cmp
cmp
mov
ds
test
in
pop
je
pop
mov
mov
sub
sub
shl
test
xchg
jmp
push
push
xchg
lds
lods
mov
add
sbb
das
inc
mov
popa
xchg
push
idivl
sti
andb
and
loop
add
mov
inc
lcall
arpl
fidivs
sbb
sbb
icebp
and
out
pop
rorb
cmp
es
adc
jne
movsl
jb
aad
mov
cmp
jp
jns
sahf
dec
adc
xchg
add
fs
test
jno
xchg
es
outsl
iret
jmp
xor
out
sbb
adc
loopne
or
sarl
sub
mul
jne
xchg
lahf
imul
push
adc
outsb
mov
stos
and
dec
fiaddl
push
mov
movsl
push
repnz
jp
out
scas
and
xor
pushf
rorl
cltd
dec
push
hlt
cmp
aad
lahf
out
lods
lea
cwtl
jno
xor
mov
test
subl
cmpsb
mov
mov
sub
jns
cmp
pop
pop
daa
jbe
ret
shrb
pop
fcompl
mov
sbb
shll
lods
aaa
sbb
push
test
add
inc
mov
out
popa
es
push
sahf
jmp
cmpb
mov
lods
cwtl
sbb
int3
loopne
push
bound
jo
fidivrs
movsb
xchg
dec
imul
sbb
fwait
xor
in
or
jecxz
or
sub
jecxz
leave
and
mov
sub
xchg
mov
xchg
or
mov
mov
test
jge
pop
aas
pop
out
sub
inc
sub
cmp
jb
mov
insb
or
lcall
cmp
rolb
xor
stos
jge
negl
sub
mov
inc
fisubl
or
mov
xchg
xlat
test
scas
ljmp
rolb
jmp
ds
mov
adc
mov
push
cmp
cmpb
rcll
mov
fdivp
lods
xchg
xchg
lret
push
fwait
mov
addr16
jge
jle
sub
mov
sub
xchg
mov
add
and
fistl
xor
fistl
sbb
dec
sbb
sub
pop
div
xchg
cli
mov
or
int
scas
sbb
sbb
mov
adc
lods
sbb
jb
test
js
pop
stos
mov
daa
cmp
andl
in
or
ret
pop
dec
fdivs
dec
fbld
scas
in
enter
push
andb
scas
jge
sub
lret
js
pop
mov
inc
jecxz
popa
sbb
add
ffreep
sbb
rclb
dec
or
cmp
sbb
mov
lock
test
pushf
int
and
xchg
leave
lahf
pop
mov
test
arpl
cmp
mov
fldt
nop
dec
adc
dec
xchg
adc
outsl
mov
ret
xchg
and
in
mov
lea
jo
or
mov
fists
sbb
in
and
add
sti
pusha
cmp
into
dec
add
add
add
sub
mov
ret
xchg
fcompl
add
jns
enter
fidivl
mov
inc
jecxz
sbbl
jge
fcompl
inc
push
pop
or
sbb
arpl
cmc
icebp
push
lods
push
sub
adcl
mov
mov
sarb
sti
add
xor
popa
aam
dec
mov
in
inc
das
sub
add
jns
ror
int
or
sbb
push
or
ss
frstor
outsl
ret
inc
aam
mov
lock
dec
popf
jb
ja
test
jmp
fwait
mov
jae
fnstcw
aad
testb
nop
xlat
cmp
lods
xchg
jmp
pop
push
inc
jp
je
subl
sub
imul
mov
sbb
sbb
ja
aas
sahf
hlt
cli
bnd
push
mov
mov
mov
push
xchg
dec
jne
shrl
nop
or
pop
fs
es
call
inc
mov
arpl
xchg
add
mov
je
sub
mov
dec
adc
jbe
fcoms
hlt
xchg
xchg
aas
jb
xchg
lahf
loopne
xor
mov
or
mov
out
cmp
ja
cmp
test
stos
mov
pusha
pop
mull
or
je
sbb
hlt
cmc
push
lea
add
mov
and
out
les
lahf
xchg
lock
xchg
out
lea
cwtl
repnz
and
jl
sbb
dec
or
pop
mov
jnp
push
clc
addr16
faddl
insb
aam
sub
push
and
pop
mov
daa
addr16
je
cltd
sbb
arpl
test
lock
sub
push
mov
or
popa
loop
cmp
fdivr
xor
and
ror
lods
inc
lods
xchg
mov
in
push
sti
dec
and
scas
or
pop
cmp
fidivl
and
lods
jmp
fdivrl
clc
js
pop
ja
mov
roll
push
pop
jne
mov
icebp
pop
sbb
jnp
test
jle
pop
mov
adc
in
add
xor
mov
out
lds
adc
xchg
and
jo
add
leave
xor
add
fimull
add
cmp
lret
dec
mov
jp
pop
lods
into
imul
lahf
cmp
push
sbb
adc
mov
pop
test
xchg
add
mov
jecxz
xor
leave
enter
movsl
dec
insb
xor
xor
xor
pop
lds
cmp
mov
dec
adc
mov
test
mov
xor
push
dec
inc
pop
arpl
mov
inc
mov
dec
xchg
xlat
sbb
cmp
dec
decb
pop
mov
add
sub
jo
fistpll
jge
mov
add
inc
xor
ficompl
gs
cmpl
sahf
lds
and
mov
ja
test
xchg
enter
xchg
xchg
or
out
jge
pop
sbb
outsl
xor
aas
push
mov
mov
daa
adc
push
mov
cmpsl
fstpl
inc
push
sbb
xor
mov
ud2
popf
in
mov
lea
sahf
fimuls
in
add
dec
push
mov
sbb
or
jne
and
xchg
movsl
add
hlt
mov
js
push
and
jbe
insb
pop
xchg
call
jp
std
stos
xor
movl
adc
xor
sub
test
or
push
mov
js
popf
or
test
inc
and
aaa
mov
jl
sbb
dec
and
inc
dec
push
test
ret
cmp
aam
jmp
adc
lea
lods
mov
xorl
jnp
pusha
adcb
push
xor
ljmp
enter
loop
pop
jecxz
dec
mov
rcrb
push
fisttps
push
outsl
call
xor
mov
or
das
les
fcompl
sbb
rorb
hlt
je
rcrl
fisubl
inc
lret
fs
cmp
push
mov
lds
add
lock
push
mov
lds
mov
lahf
jp
movb
push
out
xor
ja
push
inc
mov
jg
outsl
lds
xchg
sbb
inc
push
rcll
lds
ror
mov
test
out
xchg
cmpsl
lods
insl
cli
aaa
cmp
idivb
cmp
insl
adc
add
pop
jae
fimull
sub
mov
sbb
ja
adc
test
bound
and
or
sbb
popf
jmp
sahf
call
add
in
test
dec
scas
push
pop
dec
sbb
pop
mov
mov
and
add
incb
jbe
lahf
ss
mov
push
popf
test
cmpsl
fnstsw
bound
pop
xchg
fs
nop
addr16
sbb
sbbl
mov
inc
out
int
pop
scas
mov
lods
cmp
outsb
les
ret
and
data16
pop
add
dec
mov
rorl
aaa
jo
repnz
pop
test
idivb
sbb
mov
rcll
or
enter
sbb
push
jg
lea
jecxz
cmp
lcall
xchg
mov
add
mov
aas
mov
call
daa
jo
dec
add
dec
fistpll
lods
mov
mov
mov
sbb
mov
out
xlat
adcl
cmpxchg
push
es
mov
dec
mov
testl
jnp
push
sbb
mov
mov
cmpsb
jecxz
mov
xchg
mov
aad
dec
test
mov
dec
xchg
out
stc
aam
cltd
pop
sub
mov
lods
inc
mov
adc
cmpsb
incb
mov
dec
ret
sub
xor
push
sbbb
or
je
dec
std
hlt
mov
sbb
mov
adc
repnz
es
xchg
or
scas
xor
or
add
scas
mov
fs
sub
repnz
and
loop
push
repz
mov
leave
fwait
xlat
jbe
sub
popa
xchg
dec
sahf
orb
cltd
movsl
jecxz
cmp
js
sub
xlat
push
dec
jnp
inc
jge
fisubrs
fldt
cmp
pop
aas
ss
into
xchg
xchg
stos
cmp
push
mov
xchg
mov
inc
iret
clc
negl
lds
jne
inc
addb
int3
movsb
lret
mov
cltd
lret
push
fiadds
jmp
lret
pop
insb
jo
lret
insb
mov
mov
sbb
test
fsubr
ret
aad
ja
mov
dec
sahf
or
pop
inc
add
add
mov
out
push
daa
inc
and
ds
or
or
cmp
jl
pop
iret
aas
mov
mov
gs
clc
aas
jg
xor
xor
icebp
mov
iret
insb
test
outsl
or
outsl
addr16
testl
inc
inc
mov
mov
pushf
imull
jle
jle
mov
push
xchg
ss
leave
outsl
xor
mov
inc
test
int3
clc
shlb
mov
jge
fiaddl
mov
dec
clc
in
leave
cmp
sar
mov
xor
addb
test
cmp
icebp
cmpsl
adc
inc
push
icebp
arpl
test
in
mov
mov
xchg
jp
test
sub
fwait
xchg
jo
int
push
aad
cmpsb
and
jecxz
rclb
test
pop
mov
aam
xor
aad
mov
leave
mov
adc
pop
ds
test
pop
rclb
fidivrs
rcrl
dec
icebp
stos
test
mov
cmpsl
inc
inc
das
xchg
pop
xor
mov
sub
fildll
imul
mov
cmpsl
cs
jns
sbb
loop
sub
xor
inc
jnp
cmp
mov
ficoms
push
lret
pop
push
cmp
mov
and
jle
xor
idivb
pop
iret
int3
nop
inc
xchg
pop
xchg
xchg
add
stos
shll
jae
fldenv
outsb
mov
jnp
jo
cmp
jecxz
mov
mov
push
and
push
dec
mov
clc
cltd
pop
pop
lods
xchg
cmp
ljmp
data16
push
out
insb
shll
test
lds
iret
sbb
lret
aad
movsl
sub
pop
pop
dec
cmp
gs
popa
enter
rcl
ss
insb
jg
sbb
jl
dec
jnp
stos
enter
mov
jne
dec
dec
inc
mov
jle
sbb
les
in
pop
xor
xor
ljmp
incb
scas
inc
push
mov
lods
xchg
and
inc
cmc
cmp
jne
pop
cmpb
pop
loopne
jbe
aas
mov
dec
lock
mov
xchg
sbb
imul
cli
loopne
jle
inc
inc
sub
idivl
mov
mov
xor
popa
xchg
mov
iret
loope
outsb
add
mov
push
or
iret
bnd
scas
push
sbbb
or
std
cmpsb
xor
pushf
dec
cmc
icebp
pusha
or
xor
out
jle
enter
fcoms
lock
jo
fidivs
and
shll
pop
sarb
push
pop
or
dec
fxtract
xor
sbb
insl
push
sbb
pop
cs
jg
mov
loop
ficoms
sti
ss
push
jae
mov
xlat
dec
movsl
pop
ret
push
xor
or
in
out
in
addl
outsb
pop
or
popf
ud0
jmp
int3
pop
cmp
and
mov
test
sbb
sub
pop
cmp
fdiv
mov
imul
cwtl
int3
sub
ds
leave
out
stos
sub
js
insl
addb
rol
int3
subl
movl
xor
lock
mov
into
arpl
test
arpl
fwait
arpl
sub
jns
jp
sbb
pop
pop
lock
dec
in
pushf
sub
mov
fnstenv
dec
rol
arpl
imulb
enter
adc
add
or
mov
dec
sbb
xor
idivb
adc
pop
jo
mov
pop
loope
sbb
sub
lock
pop
hlt
cmpsb
js
jecxz
sbb
cmp
xor
xchg
mov
in
dec
in
subl
or
mov
inc
inc
scas
imul
cli
inc
clc
int
xchg
push
aam
and
xcrypt-ctr
cmpsl
lcall
out
jl
sbb
dec
jno
cmp
add
mov
mov
outsl
leave
cmp
cmp
push
ljmp
bound
cmp
and
sbb
mov
lret
jbe
push
clc
push
adc
mov
push
iret
lods
imul
lods
std
mov
into
cmp
fcoms
pop
add
add
insl
mov
dec
fwait
xor
add
push
mov
xchg
mov
sbb
pop
mov
sbb
mov
xchg
xchg
testl
stos
insl
ficoml
clc
and
pop
jmp
fadds
es
push
inc
inc
outsb
fs
scas
dec
xchg
jnp
add
sub
shlb
pop
jne
xchg
push
in
rorb
adc
imul
xlat
mov
flds
add
dec
aad
roll
and
rorb
int
sub
enter
jo
test
dec
ja
xor
psubw
out
adc
cli
push
ljmp
mov
mov
lea
xchg
adc
and
or
cld
scas
es
gs
adc
leave
cmc
jae
ret
inc
cs
xchg
std
xchg
scas
addr16
mov
shrb
es
dec
jp
daa
pop
push
gs
ja
arpl
insb
data16
cmp
mov
punpckhwd
sbb
add
test
and
xor
pop
xchg
scas
cltd
aam
or
push
repnz
dec
dec
fwait
lea
bnd
repz
jmp
mov
sbb
out
jle
sbb
orb
xchg
xchg
std
adc
and
push
fwait
mov
movsb
and
sub
xor
dec
lods
pop
and
push
and
ljmp
push
xchg
repz
stos
sbb
gs
adc
ljmp
je
cmp
fnsave
dec
cli
dec
outsl
sbb
insl
ljmp
rclb
test
push
scas
xchg
mov
jp
adc
jmp
adc
sbb
ret
sub
sti
movb
jbe
loope
cmp
loopne
xlat
cmpsl
sub
adc
pop
cmp
clc
rcl
mov
mov
rcrb
xchg
jp
pop
inc
cwtl
ljmp
jne
lahf
aas
push
mov
and
mov
inc
lods
lret
pop
stos
adc
dec
icebp
or
jno
andb
mov
or
mov
pop
mov
shlb
xor
pop
adc
sahf
outsb
push
daa
in
mov
mov
xchg
jge
mov
xchg
lcall
or
jle
loope
mov
jg
mov
test
popf
mov
lret
push
lret
push
pop
sub
mov
int
cmpsb
cli
in
int
xchg
bound
rol
mov
xor
xlat
xchg
dec
xor
imul
adc
lret
call
pop
out
xchg
cmp
outsl
pop
arpl
sub
in
ja
mov
or
xor
mov
cmp
jp
cmp
popf
pushf
push
mov
imul
pop
jbe
cli
dec
out
mov
cli
jp
lods
aad
mov
test
lock
mov
lods
testl
repz
fistps
cmp
mov
bound
imul
shrl
clc
add
adc
pop
dec
loope
sbb
inc
xorl
sub
addr16
dec
ds
cld
ja
mov
dec
fisttpll
mov
mov
sahf
or
loop
xchg
faddl
roll
rcrl
dec
sbb
jmp
lahf
adc
sub
mov
add
cmp
mov
repnz
stos
outsl
pop
les
cwtl
mov
outsb
cwtl
sbb
dec
data16
wrmsr
arpl
pop
push
xchg
xor
mov
fs
nop
pop
cwtl
mov
cmp
adc
ret
fisubrs
nop
and
cmc
imul
imul
ja
inc
hlt
jecxz,pn
ss
cmp
shlb
cmp
and
imul
rolb
jbe
dec
xchg
sbb
pop
xchg
sub
pop
loop
xchg
or
orb
fldenv
pop
in
popf
pop
and
sbb
mov
mov
jl
or
xchg
lret
test
out
xchg
sub
in
stc
sub
outsl
and
pushf
lcall
mov
inc
notl
iret
mov
cltd
mov
mov
jno
jl
fmull
push
mov
jmp
or
sub
movsl
faddp
hlt
cmp
xlat
dec
and
xchg
add
in
imul
xor
inc
push
orl
loope
dec
lods
jmp
pop
jg
jbe
das
jnp
mov
dec
adc
clc
fimuls
jbe
out
mov
fsts
dec
mov
push
inc
and
xrelease
jno
pop
fucomi
call
jmp
sub
mov
xor
lahf
pop
adc
pop
insl
rdmsr
enter
les
jne
or
inc
adc
pop
adc
jp
outsl
cld
mov
fld1
icebp
push
into
mov
popf
adcl
mov
dec
push
sbb
pop
inc
or
jmp
call
enter
rolb
cltd
or
sbb
cmp
sbb
push
sbb
shr
test
xchg
push
test
cmpsl
mov
xor
aam
aaa
or
or
and
es
push
push
xchg
and
mov
int
jp
sbb
cmp
jg
dec
cmp
mov
inc
idiv
inc
fucomp
nop
pop
enter
out
dec
jae
push
scas
or
adc
test
notl
adc
imul
es
xchg
hlt
nop
enter
or
adc
add
add
shrl
push
aad
in
shlb
add
lods
jns
vcvttss2si
inc
std
adc
out
jg
aaa
les
and
roll
or
loope
lea
add
cli
xor
sub
push
out
movsb
inc
or
repnz
sahf
shll
xchg
data16
jg
lock
push
lcall
push
mov
sub
test
repnz
mov
loopne
push
push
popa
lds
les
fadd
out
daa
lret
pop
out
rcrb
les
pop
pop
mov
cmp
js
xlat
enter
aam
mov
scas
stos
add
iret
push
call
xor
outsl
test
enter
lahf
add
shlb
popf
inc
jne
out
cwtl
add
push
adc
fbstp
mov
test
es
addl
sub
sbb
pop
xorb
lcall
sub
cld
jnp
or
clc
sub
and
movb
sub
sbbl
pop
jl
cltd
inc
aas
inc
orl
sahf
pop
nop
movd
jae
clc
pop
and
adc
cmp
sarl
lods
sub
mov
daa
test
cmpsl
icebp
cwtl
inc
in
push
mov
adc
push
xchg
dec
xor
shll
sbb
cmp
pusha
lret
and
inc
adc
mov
pop
xchg
jne
mov
fadd
out
mov
movsl
push
inc
add
add
mov
dec
enter
repnz
sbb
loopne
jle
aas
lds
fiaddl
add
test
xor
lods
jecxz
xor
mov
xor
punpckhwd
adc
pushf
psubd
lret
cld
mov
add
jno
mov
mov
in
add
inc
sbb
imul
push
xchg
loope
jg
call
lcall
fistpll
out
mov
in
pop
inc
mov
and
mov
push
push
les
dec
adc
fiaddl
lcall
cwtl
scas
loop
out
inc
xor
gs
adc
sub
sub
or
filds
dec
aaa
pop
dec
lret
sbb
fisubl
cwtl
ja
aas
push
mov
es
and
cmc
xchg
aaa
push
push
notl
or
lea
xor
das
sti
iret
cmp
xor
hlt
mov
xchg
cmp
sysret
int
pop
mov
mov
loopne
rolb
stc
pop
pop
mov
lods
or
call
adc
xchg
addr16
cmc
mov
das
out
cli
orl
nop
cmp
mov
ss
lock
call
pop
cmp
sub
dec
inc
scas
adc
fisubrl
lods
clc
in
jns
insb
imul
aam
fmull
movsl
jmp
or
movsb
dec
loop
orl
sub
iret
icebp
xor
push
xor
jo
jecxz
sbb
and
hlt
add
roll
pop
pop
ds
add
adc
fisubrl
mov
adc
shr
push
dec
mov
xchg
test
cmp
jle
mov
test
mov
js
jb
out
pop
sub
notl
mov
adc
cld
mov
or
daa
ljmp
pop
and
ret
rolb
shlb
jp
sub
outsl
lret
insl
mov
jae
repz
and
nop
sbb
rorb
aad
movsl
and
jo
push
pusha
push
iret
imul
leave
xchg
in
fmuls
sub
dec
fisubl
fidivrs
xchg
repz
out
in
aam
cmpsb
and
sbb
cltd
push
mov
daa
push
pop
dec
xorl
adc
hlt
xchg
popa
clc
jbe
inc
out
lcall
push
imul
popf
sub
aam
xor
mov
rclb
ss
pop
insl
mov
jno
or
sub
or
xorl
mov
loop
std
pop
push
loop
push
and
push
xchg
inc
movsb
inc
cmp
nop
aam
in
mov
je
jno
shll
test
and
sub
push
and
jle
dec
nop
cmp
pop
dec
mov
js
ret
mov
mov
inc
fidivl
nop
icebp
mov
sbbb
sub
icebp
movsl
out
or
dec
jnp
inc
icebp
xor
push
dec
cli
test
add
sbb
mov
jb
sarl
scas
call
cli
stos
mov
mov
subl
incb
imul
or
repnz
adc
das
stos
loopne
test
push
mov
xchg
mov
or
xchg
loope
stc
mov
imul
mov
mov
cmp
repz
filds
sub
stos
shrl
mov
stos
xor
ret
or
mov
pop
jle
mov
std
add
gs
popf
arpl
mov
sbb
cmp
out
xor
push
push
aas
hlt
cmpsb
dec
mov
push
out
xchg
fsubl
mov
fwait
dec
je
pop
lds
imul
add
xchg
push
pop
sub
mov
mov
fisttpl
rolb
dec
cmpl
fisttps
stos
sbb
dec
xchg
xchg
add
pop
es
das
rcll
daa
lcall
outsb
mov
out
ret
xlat
and
sub
sub
fldenv
daa
lods
ja
inc
popf
mov
test
fs
fxch
int
fiaddl
jae
idivl
mov
inc
cmp
lcall
push
cmp
gs
stos
mov
and
in
and
inc
xor
lahf
in
adc
pop
arpl
pushf
or
sbbl
push
sbb
adc
test
test
mov
data16
lea
cmpsb
outsb
jl
and
sub
cmp
sub
sub
jmp
nop
cmp
xchg
sbb
mov
imul
iret
fnstsw
add
xchg
pop
scas
ffree
outsb
pop
fsubrl
pop
and
fldenv
in
lahf
ret
hlt
dec
andb
loope
repnz
repnz
hlt
inc
push
dec
or
xlat
out
repz
pushf
jmp
mov
rcrb
inc
lret
or
neg
add
sti
sub
aam
adc
mov
sahf
mov
add
bound
inc
jb
push
xor
or
sbb
cld
call
inc
push
ss
pop
fistpl
pop
push
outsb
neg
es
xchg
xchg
add
scas
dec
mov
out
adc
cmp
addr16
xorb
popa
sbb
out
xlat
loop
dec
mov
mov
sub
inc
lahf
imul
pop
rol
test
add
call
vaddsubps
or
add
mov
dec
or
xchg
call
inc
les
cmp
sbbl
out
xor
shrb
cmp
in
insl
sub
jmp
sbb
aam
mov
cli
cmp
sbb
xor
out
test
rolb
cli
mov
jbe
inc
inc
cld
mov
test
add
cltd
mov
mov
ret
out
inc
mov
shll
out
lds
inc
inc
mov
aam
add
sub
cwtl
clc
inc
leave
lods
xor
or
xlat
mov
gs
push
push
stc
jecxz
cmc
lahf
andnps
mov
dec
movsl
arpl
push
mov
mov
mov
mov
jb
pop
push
loop
jb
pop
test
repnz
loop
jecxz
jne
adc
mov
in
and
jg
addb
mov
cmpsl
mov
and
das
mov
mov
fdivrl
je
xadd
sbb
cld
pop
test
cmp
bound
cmpsl
mov
pop
xor
fucomip
jae
inc
mov
roll
push
arpl
pop
push
lds
xchg
ss
push
test
pop
or
out
cmp
aas
scas
orb
xchg
in
stos
inc
cmp
mov
mov
mov
or
add
insb
out
inc
or
cmpsl
hlt
sbb
movsb
fnsave
jo
push
xchg
stos
fisttpl
pop
cmpsb
mov
call
jl
push
xchg
and
push
lcall
ds
lret
ret
je
fisubrl
int3
cmc
add
push
pop
xchg
cs
cwtl
xchg
bound
mov
outsl
popl
mov
jbe
pop
aas
fldl2t
adc
jb
sahf
imul
mul
es
movsl
out
sarl
mov
cmp
and
fstl
in
adc
rcll
cmp
or
mov
mov
fmuls
inc
add
lcall
hlt
dec
dec
lahf
push
lret
sub
push
cmc
fldcw
lods
or
mov
ja
push
adc
les
mov
loope
xor
push
in
fildll
jae
pop
cs
fistpll
or
cmpsl
sbb
repnz
jne
xor
std
adc
push
ss
adc
xor
pop
add
clc
icebp
ljmp
ja
mov
cmp
sbb
iret
mov
mov
fwait
daa
dec
push
mov
mov
imul
imul
pop
stc
adc
sub
xlat
es
mov
lret
in
test
push
xor
dec
fisubrl
aaa
pop
sahf
insb
add
cmp
xor
stc
push
pop
test
lds
push
jecxz
sub
arpl
add
mov
loope
adc
outsb
mov
mulb
inc
xchg
mov
pop
and
mov
and
jge
fadds
imul
sbb
push
xchg
dec
add
xor
outsl
mov
jp
fildl
pop
arpl
andb
jae
jg
mov
sti
outsb
xchg
sbb
mov
push
pushf
sbb
es
repz
and
jmp
mov
cmp
push
cmp
push
and
jb
rorb
test
mov
cmp
push
mov
out
jle
movsl
je
sti
iret
shlb
pop
popa
mov
xor
rolb
add
fistps
dec
sub
mov
inc
xor
mov
ret
dec
and
shlb
pop
push
pop
hlt
mov
jmp
in
push
lods
popa
hlt
adc
push
mov
dec
imul
cli
icebp
mov
mov
pop
loope
xchg
addl
jmp
sbbl
mov
dec
outsl
out
movsl
ja
inc
test
std
cmp
mov
test
movb
hlt
filds
push
jg
leave
hlt
cmpsl
mov
mov
mov
popf
insb
in
mov
mov
xchg
pop
loope
cltd
jle
shll
or
pop
int3
inc
cld
mov
jg
stos
imul
es
cmp
jne
popa
xchg
or
pop
pop
cmpb
pop
xchg
movq
fcomps
into
cmp
jecxz
shll
push
dec
mov
leave
imul
xor
aam
mov
and
insb
inc
jp
fcmovnu
or
fdivrl
sub
pop
cwtl
mov
addr16
inc
pop
mov
inc
sbb
pop
fnstenv
popa
cwtl
pop
imul
cmpsl
lds
mov
mov
daa
mov
sub
xor
pushf
adc
mov
mov
repnz
mov
adc
mov
je
out
jnp
mov
sti
ljmp
ffree
lods
fs
gs
cmp
lods
out
enter
dec
enter
psadbw
in
arpl
test
ljmp
mov
jecxz
or
loop
loopne
lret
std
jb
cli
sbb
push
ja
xchg
add
inc
push
les
popa
adc
jae
or
in
xor
push
pusha
mov
add
and
pop
testb
xor
pop
and
lret
xlat
repz
mov
cmp
addr16
hlt
out
mov
dec
das
insl
push
mov
inc
insl
xchg
mov
loopne
dec
iret
push
xlat
mulb
dec
fldenv
xor
aam
pop
dec
cmp
mov
xchg
cmp
pop
pop
fnstsw
jl
or
ret
cmp
cmc
jno
sub
xchg
push
mov
pop
xchg
pop
jbe
icebp
xchg
lret
mov
jl
inc
scas
jp
sub
outsl
jns
mov
std
and
imulb
aas
sub
aam
call
cs
sub
stos
mov
into
dec
xchg
inc
lds
ljmp
sub
adcl
in
subb
adc
inc
hlt
stos
push
ret
outsb
sbb
out
ss
mov
dec
jns
leave
dec
mov
sarb
add
fisttpl
sub
arpl
add
in
sub
pop
imul
lods
mov
sti
dec
sub
lds
out
pop
push
pop
out
loope
add
jmp
arpl
xchg
push
push
and
arpl
das
jnp
inc
out
in
test
dec
sub
adc
loop
mov
rolb
movsb
lret
jp
push
mov
stc
shrl
pop
mov
push
mov
hlt
xchg
xchg
push
ret
and
lds
in
call
push
fucom
mov
jae
lods
insl
jbe
out
fidivrs
fstpl
push
movsb
dec
jnp
scas
push
popf
loope
sub
notl
mov
outsb
pop
fmul
fiadds
and
je
jns
inc
in
in
sarl
pop
xchg
sub
cwtl
sbb
pusha
adc
xchg
inc
into
pop
in
addr16
in
adc
mov
inc
cmp
nop
pop
lcall
in
aaa
sbb
fwait
mov
leave
jge
xchg
data16
and
push
or
mov
push
or
pop
aam
xchg
aaa
sbb
cltd
adc
es
lret
add
sarb
loopne
leave
jecxz
push
inc
cmp
xchg
push
repnz
imul
popa
jo
jmp
icebp
fldl2e
cs
pop
lret
xchg
and
fsub
sbb
imul
bound
mov
xorl
out
aaa
pop
fcomi
jl
xchg
les
jg
loopne
into
jmp
xchg
mov
lahf
jns
push
cmpsb
add
aas
inc
mov
mov
pop
inc
pop
rcl
nop
push
scas
dec
lock
fistpll
popa
xchg
and
cmpb
add
push
dec
and
lcall
mov
scas
daa
out
sub
int3
sbb
sub
pop
mov
outsl
adcl
pop
mov
stc
je
pop
jo
rorl
cmp
dec
movsl
leave
push
je
inc
or
repz
out
mov
xor
or
mov
inc
enter
outsl
inc
cmp
add
pop
cmp
and
leave
cmp
rolb
cld
jge
popf
divb
adc
fwait
test
neg
or
cs
js
inc
sub
push
fcomps
fimuls
jmp
mov
in
jae
aad
push
arpl
gs
loope
fildl
add
push
mov
lret
cli
imul
rcrl
jle
aas
fcom
cli
call
outsl
pushf
rcr
mov
mov
cmpsb
aam
push
or
insl
pop
push
or
sbb
imul
xor
cmp
push
jne
ljmp
jmp
icebp
dec
cmpl
add
sbb
sub
daa
dec
scas
mov
insb
jbe
cli
fdivs
add
pop
imul
push
push
add
les
scas
push
nop
mov
out
stos
fiaddl
push
mov
lea
popf
ret
fisubs
inc
je
pop
movsb
bound
imul
lods
inc
or
shl
pop
test
bound
adc
lock
fsubl
xchg
cmp
sub
adc
sbb
or
nop
loop
ljmp
mov
push
dec
push
adc
mov
mov
inc
hlt
es
mov
dec
sahf
test
adc
and
dec
sbb
hlt
push
cmp
push
sub
cs
cmp
mov
iret
outsb
mov
push
xchg
mov
int
cmp
or
mov
jmp
shll
jbe
mov
cmpsl
jbe
xchg
mov
or
add
xchg
sarb
in
pusha
outsb
sbbb
sahf
andb
pop
pushf
addr16
shll
xor
mov
adc
adc
aad
pusha
push
cmp
sub
sub
fs
loopne
and
jge
mov
out
out
sbb
dec
inc
pop
fwait
ss
xor
in
outsl
xchg
jge
es
scas
mov
std
jl
inc
arpl
out
mov
lret
xor
cmp
imul
call
mov
outsl
mov
push
js
sbb
int
aam
add
iret
push
inc
mov
inc
mov
movsb
das
pop
xor
lock
mov
movsb
cmpsb
xor
xor
sbb
les
dec
push
pop
add
push
repnz
inc
shlb
fdivp
and
ljmp
mov
in
movsl
cmpsl
ds
inc
jge
clc
outsl
mov
shrb
lcall
lahf
ss
adc
mov
push
fistps
dec
sbb
xchg
pop
and
xchg
pop
adc
adc
or
xor
cltd
xor
decl
pop
dec
outsb
or
daa
jno
jne
out
dec
push
cwtl
lea
in
inc
dec
dec
insb
test
adc
adc
fmuls
mov
mov
js
or
adc
adc
pop
jb
int3
sub
call
jg
push
mov
or
lock
mov
scas
iret
addr16
xchg
mov
icebp
mov
jnp
cmp
cltd
cmp
mov
scas
bound
adc
test
xor
fadds
lcall
stc
cltd
lods
mov
mov
arpl
gs
xor
stc
xchg
jne
sbb
cmp
loopne
push
paddw
subl
cmc
daa
pushf
dec
add
adc
jp
jl
xor
mov
fld
fsubrs
dec
sarb
out
mov
fsubs
add
push
add
in
addr16
lea
leave
mov
stos
notb
inc
adc
cli
mov
imul
shrb
pop
cmp
xchg
repnz
cltd
sahf
dec
in
adc
and
repnz
push
popf
xchg
jbe
lahf
xor
call
mov
cmpsb
subb
cli
mov
inc
push
xorl
rorb
mov
fiadds
jg
insl
xchg
xorb
inc
fldenv
sub
movsb
lret
pop
pop
pop
je
hlt
push
jmp
ficoml
xchg
pushf
mov
imul
pushl
inc
cli
mov
jno
xor
jp
lahf
lcall
mov
aaa
mov
push
or
cmp
inc
cmp
push
mov
negl
cs
jmp
and
in
or
pusha
jb
loopne
jp
mov
mov
or
cmp
xchg
stos
pop
and
orl
xor
cmp
push
add
movsl
jno
movsb
jnp
cmp
movl
mov
test
sub
cwtl
push
iret
xchg
fadds
out
xchg
aam
xchg
out
dec
nop
push
mulb
push
inc
je
sub
test
xchg
and
pop
dec
clc
push
dec
push
push
mov
idivl
ljmp
fldenv
mov
mov
andl
pop
rorl
call
in
push
adc
xchg
xlat
pusha
fisubs
pop
int
inc
hlt
mov
mov
jns
mov
xchg
mov
or
jg
out
scas
lock
push
out
jnp
in
sbb
adc
sub
jle
and
fiadds
lret
mov
xor
jg
or
add
cmp
in
mov
mov
push
push
jge
or
cmp
push
xchg
mov
pop
and
and
lret
jo
loope
int3
jle
aam
mov
dec
cmp
and
fldt
adc
nop
ja
cmp
or
es
out
add
push
pop
lds
out
xor
push
push
pop
jg
sub
pop
fs
xor
loopne
dec
loope,pn
mov
loope
into
pop
movsb
pushf
mov
fwait
hlt
add
inc
jmp
xchg
lods
popf
or
sbb
cmc
rorb
cmp
rcrl
mov
and
xchg
sbb
pop
lret
pop
test
xchg
jp
scas
xorb
mov
fsub
shl
sub
ficoms
pop
lds
dec
movd
mov
stos
enter
jbe
mov
imul
sar
and
mov
sbb
imul
cltd
sti
call
sahf
fiaddl
jb
pushl
dec
xchg
test
int
mov
jno
jp
stc
adc
pand
call
xor
test
mov
pop
fistpl
cmc
daa
rolb
test
enter
movsb
test
mov
and
repz
mov
adc
into
ja
sub
movsl
js
inc
ja
xchg
and
or
adc
sbb
int3
std
pop
rorb
out
inc
ljmp
lret
lcall
xchg
dec
ja
push
mov
gs
test
or
mov
stos
jne
lret
aas
iret
cli
out
add
test
push
and
dec
sbb
or
adc
sub
fnsave
dec
clc
data16
testl
fwait
dec
cmp
cmp
fsubp
push
inc
sub
dec
add
lea
push
scas
daa
sbb
js
jmp
aaa
dec
mov
pop
arpl
mov
jge
shr
mov
lea
repz
call
push
or
test
inc
mov
je
icebp
inc
mov
inc
popa
and
pop
jp
cmc
nop
push
jno
aam
mov
xchg
lods
icebp
adc
fldl
jnp
sahf
imul
pop
scas
ret
fs
roll
movsl
inc
adc
rol
mov
shrb
or
or
int3
cmp
pusha
imul
cmpsl
loopne
inc
lods
out
cltd
pop
mov
sub
lods
lock
fimull
call
pop
imul
or
mov
ja
sbb
sbb
and
movsb
and
jnp
sub
iret
xor
add
xchg
mov
add
and
xchg
fldenv
inc
pop
xchg
shr
leave
movsl
fidivs
imul
cmp
add
and
ja
lahf
fcompl
pop
lret
in
repnz
push
mov
sbb
int3
or
scas
sbb
push
sarb
mov
inc
fsubrs
push
icebp
push
sbb
sub
xchg
mov
jno
sbb
pop
iret
push
mov
mov
pop
pop
aad
mov
cmp
outsb
das
mov
lret
test
fisubrl
nop
iret
insl
imul
mov
nop
rolb
orl
jle
lret
dec
adc
loop
pop
xor
outsl
inc
dec
insl
addr16
test
sbb
add
mull
outsb
nop
sti
or
jge
arpl
loope
mov
adc
js
add
mov
loope
xchg
test
loopne
cld
sbb
lret
insl
jmp
mov
mov
mov
pushf
xor
jge
push
inc
mov
ds
mov
ss
xor
push
stos
adc
and
xchg
idiv
insb
jo
sub
mov
jbe
add
xchg
jo
out
mov
or
add
stc
jge
cmp
sbb
insb
push
outsl
pop
inc
and
mov
int3
addr16
xor
xor
pusha
popa
cmp
cmp
in
pop
ja
mov
in
jae
in
pushf
jp
and
testb
cs
dec
int3
inc
in
out
jnp
add
fxch
aam
mov
push
sbb
or
pushf
pop
stos
lret
pop
dec
lret
adc
cmp
in
scas
aas
test
into
sub
add
cmc
or
push
mov
js
mov
jae
jecxz
mov
lods
lods
and
pop
mov
add
sbb
pop
and
push
std
mov
mov
in
xchg
mov
jae
sahf
mov
imul
dec
mov
inc
cmp
repz
dec
mov
nop
dec
xchg
add
mov
mov
jnp
ret
minps
cld
inc
add
lds
cld
frstor
insb
insb
fsubs
fiadds
arpl
loop
xchg
or
add
xchg
add
int3
or
nop
jnp
ret
dec
loope
mov
sbb
lcall
jo
push
sub
dec
pop
or
ds
jno
fcoml
fisubl
adc
add
ss
sub
vmovapd
sub
movsl
shlb
pop
mov
mov
testb
data16
ret
std
repnz
xor
xchg
imul
pop
push
rol
lods
shrb
xor
sub
icebp
push
or
inc
lods
enter
pop
inc
call
in
mov
in
push
std
sahf
push
repnz
dec
je
popa
aam
and
mov
lods
call
popf
out
mov
pop
in
lret
in
mov
cmp
cmpsl
gs
pop
aas
dec
movsb
mov
inc
jae
gs
into
sub
imulb
mov
add
pop
inc
jmp
aas
or
test
mov
push
xchg
jl
sbb
cmp
mov
mov
mov
mov
rcll
mov
mov
sarb
dec
jns
xor
sbb
add
mov
xor
pop
lret
dec
mov
es
js
ljmp
jg
cmp
add
add
gs
and
or
loop
inc
cmp
hlt
std
inc
sbb
jno
mov
ret
roll
test
outsl
test
shll
push
popa
icebp
add
adc
in
sub
jo
add
pusha
pushf
dec
dec
stc
inc
inc
dec
inc
inc
ljmp
ss
push
iret
lret
sti
add
decl
arpl
sub
mov
jge
test
vmread
scas
push
mov
clc
ss
mov
push
dec
gs
sub
pop
add
mov
out
add
aas
xchg
shrb
push
mov
or
cmp
nop
and
cmp
add
ljmp
jbe
sbb
stc
push
pop
or
pop
pop
pop
pop
xchg
out
mov
cmp
push
test
outsb
sbb
xor
push
inc
sbb
dec
cmp
adc
andb
mov
rol
sub
or
dec
and
jae
clc
dec
pop
fldcw
js
push
inc
lods
adc
xor
and
mov
add
pop
daa
cmp
xchg
inc
sbb
push
xor
xchg
orl
mov
xchg
fidivl
aaa
sub
sbb
cs
or
mov
cmp
jnp
push
add
fs
loop
xor
lret
xchg
cltd
scas
outsb
hlt
or
xor
rcrl
xor
outsl
sbb
and
xchg
xor
xlat
loop
cmpsb
in
leave
push
cli
jg
sub
mov
inc
call
cs
cmpsl
enter
mov
dec
rclb
jo
fwait
sbb
push
in
lods
cli
jo
inc
add
cmp
imul
ret
pusha
pusha
daa
imul
cmp
dec
jle
mov
and
push
cli
out
inc
leave
aas
mov
test
pop
fdivl
pop
test
or
or
test
pushf
cs
mov
sbbb
jb
and
daa
lea
popf
mov
sahf
mov
testb
je
push
mov
push
jb
arpl
lock
lock
mov
mov
cwtl
lret
push
enter
rorl
mov
dec
inc
idiv
add
ss
fisubs
pop
ret
lods
shl
mov
adc
pusha
ds
lret
jmp
lahf
adc
push
cmc
out
aas
enter
pop
je
mov
xchg
and
test
pop
out
in
dec
mov
sbb
inc
in
out
dec
jnp
and
gs
aas
popf
cld
sub
sbb
mov
mov
in
sbb
xchg
test
push
cmp
fstpl
js
ds
lret
and
ss
pusha
loope
mov
fldt
je
push
dec
enter
adc
test
push
arpl
mov
in
fsts
and
fistl
daa
je
aad
inc
lods
scas
aam
rorb
push
cmpsb
adc
ror
js
sbb
push
clc
mov
mov
lea
loop
jle
cmpsb
cmp
rorl
xlat
xchg
pop
cld
scas
jbe
sub
test
cs
mov
push
repz
sbb
jno
cltd
cmp
push
sti
fs
rcrb
mov
jmp
sub
inc
mov
push
mov
aas
adc
and
mov
insl
ljmp
add
mov
dec
or
out
jnp
test
xchg
hlt
jp
fistl
daa
int
cltd
or
push
insb
stc
movsb
sahf
stc
mov
cli
push
mov
sub
mov
xor
gs
aam
xchg
lret
mov
in
dec
call
dec
inc
jbe
pop
or
shrl
pop
jae
xorl
push
aam
adc
jno
ds
xchg
jecxz
jecxz
dec
pop
or
xchg
mov
mov
push
mov
loop
xor
dec
sub
outsl
cli
bound
sub
cmp
cs
lods
dec
add
movl
icebp
outsb
and
fisubrl
in
jns
mov
in
add
push
arpl
mov
das
jecxz
add
xor
mov
jne
push
pop
fs
cmp
adc
nop
outsb
mov
mov
jl
and
xchg
int
cmpb
sub
lcall
ljmp
mov
leave
pop
arpl
test
push
ds
sti
push
sahf
dec
aas
cltd
mov
cmp
scas
cmp
jnp
les
mov
fs
inc
scas
aad
push
inc
imul
pop
inc
cmpsb
mov
sbb
ja
ret
cwtl
imul
test
pop
sub
popf
and
negl
or
push
out
ror
sub
push
dec
ss
push
dec
xchg
insb
mov
clc
lret
jge
cmpsb
xor
ret
test
pop
mov
jle
stc
stos
sbb
pop
dec
sub
push
lods
loope
lcall
inc
hlt
fstpl
mov
or
inc
xor
in
insb
add
pop
xchg
ud2
mov
sub
mov
pop
loopne
pop
xor
cltd
xchg
rorl
nop
sub
test
inc
xchg
xor
cmpsl
dec
xorb
mov
mov
test
cmp
outsl
jecxz
test
push
lds
and
and
sbb
and
mov
orl
stos
jecxz
xchg
rcll
sub
lods
outsl
outsl
jns
stos
mov
movsb
cmp
jo
repnz
inc
fildl
ds
cld
push
scas
js
add
sarl
mov
xchg
mov
adc
out
xor
mov
outsb
or
or
stos
add
add
mull
stos
gs
into
flds
xchg
nop
lods
xor
ljmp
repnz
or
nop
mov
lret
jns
cwtl
or
sbb
jp
inc
mov
push
jmp
das
mov
test
or
cmp
add
xor
enter
xchg
pop
lea
xchg
or
push
out
fists
sarl
jmp
dec
sub
andb
add
adc
push
fnstcw
xor
loopne
jmp
bound
outsb
xor
xchg
xchg
or
jmp
inc
xchg
add
xor
or
xorb
adc
xchg
xor
scas
imull
rcll
mov
iret
mov
loop
inc
mov
mov
fcomps
fxch
bound
push
lea
pop
push
pop
dec
mov
stos
pop
adcb
mov
jle
or
leave
fbstp
je
pop
inc
lods
jb
push
xor
pop
gs
pop
jge
pushf
sbb
lea
daa
fisubrl
pop
pushf
out
push
je
sub
sti
xchg
popa
sub
sub
mov
int
xchg
mov
inc
mov
sbbl
inc
and
in
sbb
jp
into
int
mov
aam
add
pop
test
cmp
test
mov
jne
and
dec
jns
pop
cwtl
add
jp
adc
or
js
fisttps
and
and
jmp
arpl
repz
jge
xor
push
lret
xchg
mov
xchg
mov
xchg
jl
inc
inc
loopne
test
cmp
shlb
stc
sub
mov
push
dec
sbb
dec
std
loope
in
jb
aam
push
or
pop
sub
jecxz
aaa
cmc
cmpsl
sbb
add
mov
popf
fld
xor
leave
jbe
mov
shlb
out
fidivl
loop
out
test
jns
icebp
xchg
adc
adc
movsl
outsl
or
cld
icebp
push
repz
lds
xlat
inc
lret
das
pop
mov
xor
pop
mov
jb
int
cmpps
loopne
or
loope
jns
fwait
lods
add
sub
lods
jnp
cmp
xor
das
jmp
adc
mov
test
cmp
in
jp
sti
cli
hlt
dec
ret
jb
dec
stc
leave
xor
fwait
nop
mulb
pop
jbe
xlat
insb
xchg
xchg
cli
popf
jl
shrl
mov
js
add
andl
add
dec
sbb
pop
mov
jne
mov
scas
lea
cmp
cltd
or
push
aad
mov
and
inc
sub
inc
push
pop
cmp
cmp
jecxz
shrl
sbb
nop
mov
jmp
push
jae
pop
outsb
dec
pop
movsb
cmpsb
pusha
pop
mov
repz
xrelease
jbe
adc
fadd
jle
sbb
sbb
cmpsb
push
sbb
shrb
push
out
adc
fsubs
and
fwait
pop
push
jmp
mov
xchg
loope
mov
ljmp
xor
mov
aaa
cmp
shlb
xlat
lods
mov
dec
es
gs
jg
cmp
mov
insb
out
sahf
inc
pop
pop
es
sbb
das
push
mov
lods
mov
enter
daa
call
xor
mov
orl
icebp
push
scas
js
sahf
cs
mov
aad
pop
pop
sub
fcompl
push
adc
push
test
ss
aaa
inc
insb
jl
add
cmpsb
push
jle
jmp
lret
les
sbb
fsubs
addr16
enter
cmp
loop
sbb
inc
or
dec
push
int3
inc
in
outsl
cmc
and
mov
inc
add
fldenv
xchg
xchg
xchg
and
and
imul
clc
cmp
pop
jbe
jnp
inc
movsl
cmp
fimuls
mov
dec
add
adcb
inc
cmp
dec
push
cmp
jge
inc
mov
sahf
shl
jno
cs
test
popa
fwait
push
enter
push
mov
sbb
ja
cltd
jo
sahf
jg
insb
in
jne
push
aam
add
stos
pop
sub
roll
fistpll
outsb
lea
dec
cltd
xor
test
shrb
cmpl
jle
lahf
gs
ljmp
or
out
mov
lret
pop
test
rcrb
scas
jecxz
fstpt
insl
test
shlb
adc
test
in
fwait
pop
ja
push
mov
out
push
xor
jl
call
orl
jg
push
call
mov
add
fs
loope
cld
stos
cld
icebp
roll
and
push
and
ffreep
push
or
aad
dec
dec
rolb
cmp
pop
push
adc
xchg
push
scas
mov
push
pop
push
sub
loopne
test
cmp
fildl
pop
xchg
xchg
das
sti
cmp
mov
adc
pop
sbb
mov
leave
mov
mov
sbb
leave
lret
xor
stc
icebp
mov
cmp
lods
lcall
das
mov
jl
sbb
repnz
or
pushf
sub
popf
pop
fs
inc
push
pop
dec
xchg
repz
sbb
mov
das
pop
fsubr
inc
sbb
mov
out
xor
jo
ret
mov
inc
mov
adc
jb
subb
shrb
scas
mov
orb
arpl
sbb
daa
sub
inc
xor
shrb
pop
pop
push
lea
arpl
sahf
jp
cld
sti
mov
xchg
call
and
jo
xchg
call
rcll
jp
inc
push
add
sarb
sbb
aam
ror
movsl
and
dec
mov
sub
jl
jmp
mov
mov
popa
push
sbb
push
sub
out
pop
or
test
sbb
cltd
ss
pop
inc
jns
push
and
cltd
ja
arpl
stos
mov
imul
xchg
outsl
rol
add
mov
mov
cmp
inc
scas
rcrb
ja
or
xchg
leave
mov
int3
call
pop
pop
pop
or
mov
and
cmpsb
dec
pop
enter
or
add
jbe
cltd
jnp
in
jns
fdivl
sub
push
cli
xchg
lock
in
mov
push
and
sub
fldcw
mov
lods
mov
cmp
xchg
jmp
clc
shrb
lahf
push
clc
jl
outsl
xor
imul
scas
andl
lock
movsb
pop
test
jp
dec
imull
in
cs
or
push
cld
pop
push
lea
mov
dec
dec
jnp
fucomp
loopne
mov
movsl
mov
jb
stos
or
inc
or
pop
adc
loopne
mov
add
inc
mov
icebp
cmp
or
xchg
imul
push
xorb
shrb
mov
pop
dec
push
push
jne
pop
jecxz
mov
or
jecxz
test
push
xor
ja
and
mov
dec
mov
mov
mov
jmp
and
pop
jae
or
std
adc
jge
push
in
popa
jns
subl
rcrl
pop
gs
test
sbb
scas
pusha
les
lret
int
jge
clflush
popf
mov
xor
cmc
out
test
repnz
sbb
mov
push
cmp
dec
mov
sub
jns
adc
lret
add
sbb
xor
mov
pop
or
call
mov
int3
sub
xor
xor
dec
mov
push
mov
sbb
sbb
jge
dec
mov
ret
loop
push
jp
data16
jae
stos
movsl
xchg
in
sbb
aad
mov
sbb
ljmp
mov
clc
test
mov
hlt
push
cmpsb
inc
and
scas
shlb
dec
mov
pop
fdivrl
addr16
or
sub
mov
imulb
cs
xchg
jbe
test
mov
mov
and
ss
fiaddl
add
lcall
mov
sub
pop
popf
test
loopne
pop
xchg
out
sbb
push
cmp
imul
mov
ja
pop
sbb
fs
cmpl
setae
inc
dec
xlat
inc
mov
inc
sbb
les
adc
fildll
jl
push
pop
xchg
adc
test
xchg
xchg
xchg
sub
xchg
ret
pshufw
cmp
jmp
xorl
inc
push
fimuls
scas
shll
jecxz
push
xorl
pop
dec
sub
dec
jnp
mov
fistpll
aam
mov
pushf
enter
scas
push
fldt
sar
or
mov
push
faddl
adc
jle
cld
inc
pusha
cmp
push
sub
xchg
idivb
pop
jns
popa
enter
outsb
and
pop
sub
sar
lods
and
dec
mov
mulb
out
pop
mov
sub
subl
mov
out
cmp
ficoml
xchg
cmp
or
clc
push
sub
cmp
add
xchg
jl
fnsave
flds
xor
and
shl
adc
pop
and
pop
cmp
xchg
shll
inc
sarb
das
adc
push
jl
fs
adc
pop
adc
adc
negb
fisttpll
jle
dec
fwait
je
inc
scas
ret
rep
cs
sub
sahf
sbbb
adc
cmp
cmpl
inc
xor
or
cmp
repnz
inc
andb
hlt
rorl
inc
repnz
mov
dec
xchg
and
sbb
mov
stos
lahf
dec
and
lds
rcr
push
faddp
dec
inc
jbe
sbb
stc
xor
inc
push
mov
xchg
mov
push
iret
jnp
xchg
cli
push
ljmp
dec
dec
mov
es
push
pop
call
lods
sbb
mov
imulb
int
cmp
aaa
push
and
mov
sub
push
ljmp
pop
jo
sub
sarb
stos
adc
inc
push
xlat
pop
shl
popf
push
mov
inc
arpl
and
sahf
and
fwait
je
adc
mov
inc
mov
addl
std
inc
xor
jl
jmp
push
and
cwtl
add
pop
fs
pop
daa
and
es
ljmp
xchg
clc
aam
popa
jbe
or
loopne
add
xor
jne
cwtl
stos
push
pusha
or
jmp
out
sub
jae
cmp
std
repnz
push
insb
push
dec
push
add
xchg
mov
ret
iret
cmpsb
xor
mov
enter
stos
stos
xchg
mov
xor
pop
lcall
insb
add
lods
cmp
rcr
jecxz
mov
imul
out
cmp
dec
adc
xor
lds
iret
inc
gs
adc
inc
cmp
and
leave
xlat
inc
xchg
cmp
sub
sub
jecxz
shll
xorl
pop
sbb
adc
sub
mov
fistps
mov
mov
add
imul
std
mov
cmpl
hlt
mov
pop
mov
dec
cmpsl
lret
inc
pop
in
fiadds
aad
lcall
pop
mov
adc
mov
lds
outsl
call
xor
repnz
mov
mov
jmp
jg
mov
xor
or
xchg
addr16
mov
fwait
mov
insb
add
sub
jmp
stc
stc
or
mov
push
jbe
aas
xchg
fbstp
sbb
imul
jo
dec
pushf
sub
pop
test
sbb
dec
mov
cwtl
cmp
out
das
sbb
cmc
movsl
rcr
aas
dec
and
mov
xchg
mov
cmp
xchg
lods
cmp
xchg
add
nop
jmp
inc
out
into
add
adc
in
push
fisttpl
pop
jo
imul
testb
dec
push
xchg
sbb
push
jg
popa
inc
shl
enter
stc
fstl
cmp
iret
add
jne
xor
xchg
out
js
scas
jae
scas
pop
dec
pop
pop
js
cltd
outsb
jbe
je
xchg
xor
pop
aas
jbe
push
int3
jge
adc
cmp
mov
je
mov
xchg
add
stos
xchg
shr
pop
jmp
mov
pop
push
push
movsl
imul
sub
xor
aad
cmpsb
mov
mov
in
rolb
xor
cmp
mov
push
pop
inc
hlt
push
enter
xchg
int
lret
jg
imul
js
pop
sahf
out
outsb
pop
dec
dec
lods
pop
adc
mov
cmp
mov
add
cwtl
hlt
mov
jp
hlt
ret
fwait
rol
in
mov
cld
ja
insl
dec
push
xor
sar
mov
arpl
xchg
xchg
fbld
lock
dec
xchg
ret
and
xlat
in
jg
add
push
pushf
sub
sbb
mov
loope
movsl
int
jl
mov
dec
or
inc
xchg
mov
aad
popa
out
in
mov
xorb
and
and
inc
push
mov
sbbb
insb
and
cmp
sahf
sbb
in
cmp
pop
sub
adc
negb
in
shr
mov
aas
cmc
and
mov
or
pop
jecxz
adc
out
sub
ja
inc
stc
cmpsb
mov
mov
pop
pop
sbb
lret
test
ret
int3
mov
movsl
je
inc
cwtl
adc
sub
push
jmp
test
lods
mov
dec
dec
clc
mov
jae
hlt
shl
jle
jg
xchg
mov
mov
jle
std
arpl
in
loop
jae
pusha
or
inc
mov
mov
addl
mov
cs
lcall
call
cmpsb
lcall
lea
xor
cmp
mov
push
mov
divl
mov
xor
loope
sbb
adc
inc
aad
dec
adc
or
loopne
mov
adc
cmp
and
add
fs
and
push
orb
and
inc
push
imul
sub
mov
iret
cmpsl
stos
mov
in
popf
insb
dec
orl
xchg
fsubr
push
dec
mov
push
mov
iret
arpl
ficompl
pop
das
dec
push
push
rorb
pop
mov
je
inc
inc
and
imul
adc
cwtl
mov
and
movsl
fbstp
lock
leave
inc
mov
in
out
sub
leave
or
in
add
jg
fs
sbb
cmp
mov
jb
pop
mov
nop
pop
je
into
cmp
xor
stc
dec
pop
sbb
movsl
push
push
pusha
push
test
xor
pop
xor
mov
mov
and
push
jae
int3
dec
add
mov
push
sbb
cs
std
int
lcall
test
shll
fidivrl
shlb
stos
jae
push
test
inc
lcall
sbb
push
fwait
pop
jbe
insb
push
repnz
fidivs
xchg
cmp
mov
repnz
push
inc
and
mov
notb
sub
jb
xor
mov
sub
mov
add
loopne
sub
fisubrl
adc
lret
lret
jnp
jbe
repnz
mov
cltd
out
adc
stos
dec
pusha
jno
jmp
jmp
mov
pushf
cmp
and
xor
js
gs
add
leave
xchg
imul
dec
mov
ljmp
nop
and
dec
cmp
rol
cli
xchg
xor
test
jecxz
push
cmc
stc
cltd
fildll
lea
in
sbb
pop
in
imul
jns
clc
mov
fistps
addb
daa
test
mov
cs
or
dec
fcmove
arpl
xorb
jb
mov
or
or
ficompl
sbb
test
or
clc
push
lock
add
das
testb
mov
push
leave
mov
jmp
dec
jg
xor
fnstsw
or
mov
inc
js
cmp
test
mov
popf
data16
bound
xor
add
notl
test
mov
mov
push
mov
or
cmpsb
loopne
leave
nop
movsl
fndisi(8087
jmp
cmc
or
and
xchg
es
shl
pop
lcall
cmc
adc
pushf
xchg
cmp
fists
in
out
sbb
xor
lret
push
and
fdivrs
sbb
sbb
pop
and
stc
sub
inc
ds
cmp
mov
loop
inc
std
dec
mov
shlb
das
insl
xchg
mov
push
mov
mov
pop
scas
jge
or
andb
outsb
daa
sub
push
xor
jbe
sbb
xchg
mov
popa
pop
movsb
xchg
iret
clc
sub
jge
mov
clc
lret
jb
loope
nop
cmp
pop
hlt
xor
mov
jp
xor
movl
jge
pop
sbb
dec
dec
std
std
jno
stc
mov
fstps
xor
outsl
loope
add
or
or
push
add
shll
xchg
fistpl
loope
xchg
cwtl
ja
xchg
fsubl
add
dec
stc
push
ljmp
insl
aas
cmp
call
jmp
addr16
lods
imul
mov
cmp
arpl
ret
xlat
xchg
jecxz
rdtsc
xchg
loopne
xor
xor
sub
cwtl
shl
or
pop
loopne
mov
xchg
cmp
cs
or
cmpsl
push
ds
sbb
mov
or
sub
enter
sbb
mov
fimull
pop
rorb
push
insb
cmc
mov
xor
add
pop
int3
inc
daa
mov
sub
or
pusha
inc
push
cmp
cmp
clc
jl
ss
cmp
popf
pop
xor
int3
push
lods
fcoms
in
mov
cmp
cli
mov
xor
dec
shl
lock
loopne
loopne
add
pushf
int
scas
sub
loopne
jg
add
push
jnp
cmpsb
outsb
fwait
cmc
sbb
test
out
aaa
bound
stos
jp
sub
pop
adc
push
int3
or
js
addr16
lret
fstp
movsb
inc
aad
cmp
daa
or
adc
and
test
cmp
pusha
call
andl
subl
nop
addl
pop
ljmp
inc
into
push
push
cmp
inc
mov
sbb
adc
pop
cmpsl
and
stc
pop
sbb
inc
imul
or
sub
push
stc
shlb
xchg
mov
push
sbb
out
mov
push
outsb
dec
pop
cmp
mov
sbb
sbb
or
mov
inc
push
movsb
mov
repnz
adcl
mov
lcall
cmp
ja
jne
mov
cmp
inc
add
cmc
cld
inc
popf
pop
and
cmp
inc
in
sub
repz
shll
mov
dec
lcall
mov
into
das
rol
push
fiadds
ror
popf
mov
push
jecxz
movsl
mov
cmp
add
sbb
in
xchg
xchg
cmp
sbb
inc
ret
mov
sbb
add
jge
inc
and
mov
jae
scas
pop
in
imul
push
nop
xchg
xlat
es
jae
jno
cmp
xor
push
sub
lods
repnz
icebp
sbbl
sub
xchg
fmul
das
adc
ljmp
sti
testb
xor
or
xor
mov
fists
fsubs
jne
lcall
xorb
jnp
nop
mov
je
call
int
repz
mov
je
ffreep
push
xor
mov
sbb
dec
adc
icebp
add
mov
enter
pop
fmul
pop
jno
inc
lods
sbb
fsubl
jae
stos
nop
bound
shrl
scas
mov
adc
lahf
addb
leave
rclb
lcall
loop
popf
sub
aad
repz
lahf
mov
call
aam
push
add
jp
stos
dec
es
in
push
pop
in
pop
xchg
mul
jno
out
pop
mov
idivb
lahf
imul
in
mov
pop
sarb
fdivrs
jne
fiadds
adc
add
lock
sub
pop
and
dec
mov
insb
mov
and
cld
stos
stos
add
xor
out
stos
xor
push
int
out
das
imul
sub
lds
scas
js
sti
popf
movsb
jno
mov
mov
fidivs
daa
fs
out
mov
jb
adc
packssdw
pop
push
daa
jmp
or
lret
fbstp
xchg
push
cmp
cmp
xor
cld
andb
dec
fneni(8087
dec
or
fcmove
jle
or
data16
mov
rep
mov
repz
or
xchg
inc
and
push
xchg
sbb
shrb
jp
sbbb
xchg
adc
or
std
and
das
subl
dec
cmp
out
and
mov
clc
in
jns
pop
push
adc
lret
dec
pop
cmpsb
sbb
sbb
xlat
ja
jp
mov
aas
mov
movsb
mov
sbb
nop
pop
cmp
push
mov
xchg
das
lock
and
int
push
cld
ja
jmp
jle
stos
pop
lret
push
stos
dec
xchg
sub
push
iret
into
mov
daa
sub
jbe
in
mov
push
cmpb
sbb
in
aaa
jbe
dec
cmp
pop
xor
add
mov
dec
cmp
xlat
insl
mov
cmp
cmpsb
jge
fdivl
jp
jle
ds
aas
cwtl
mov
xor
xchg
mov
pop
cld
lods
push
arpl
int
mov
enter
and
jecxz
addr16
and
inc
setb
ds
pandn
test
aad
mov
repnz
mulb
mov
sub
and
fsubs
jmp
leave
push
out
cs
daa
int3
idivb
jecxz
or
inc
icebp
into
rolb
out
and
out
dec
push
repz
shlb
imul
or
shll
xchg
push
add
push
xchg
mov
fwait
add
or
pop
out
cltd
xchg
scas
das
push
fists
jge
xchg
add
jmp
andl
jecxz
pushf
xchg
mov
push
aad
fisttps
cmpsb
gs
in
into
jbe
adc
xchg
in
pop
sbb
dec
mov
dec
mov
repnz
outsb
daa
lret
out
inc
in
mov
lret
sbb
mov
nop
or
add
sbb
aas
outsb
fwait
inc
jno
sbb
mov
sti
dec
cli
xchg
test
mov
push
aaa
xchg
xor
push
scas
es
or
test
xchg
sbb
sub
mov
test
jecxz
fldenv
sbb
sub
idivb
rorb
inc
lret
call
mov
sti
int
test
mov
loopne
cmp
push
daa
pop
jle
imul
push
pusha
push
inc
xchg
bound
sub
fcoml
int
loopne
and
xchg
sbb
loop
ret
fldenv
ja
jle
mov
cmp
outsl
test
test
push
jge
cmc
imulb
mov
iret
test
pop
push
add
aas
cmp
lock
pop
push
sub
sbb
push
dec
mov
or
sub
jmp
xchg
xor
push
outsl
in
pop
lcall
xchg
jo
mov
cltd
int
cmpsl
je
jns
push
or
sbb
mov
repz
insb
test
lods
das
jecxz
dec
cwtl
xlat
pushf
out
shlb
mov
aaa
pop
pop
and
jno
ss
or
push
in
fcoms
cmp
inc
sbb
jo
shl
xchg
xchg
xor
adc
xchg
cltd
popa
shlb
xor
ds
shll
repz
nop
loope
xorl
movsb
out
ljmp
stos
arpl
xor
loope
fdivr
cmpsl
outsl
iret
test
pop
sub
cmp
pushf
inc
ss
inc
scas
es
stos
sbb
in
sub
jge
and
sub
addr16
fistpll
jb
arpl
mov
leave
xor
dec
das
xchg
enter
inc
jecxz
jecxz
cld
lret
jge
aaa
addr16
add
cmpsb
pop
sti
fsubl
jae
test
sub
jmp
xor
je
pop
xchg
aas
adc
pop
les
mov
mov
leave
lods
lret
cs
cmp
xorl
push
xlat
incl
insl
inc
in
mov
js
jg
sub
das
aaa
pop
sarl
ljmp
dec
aas
jnp
xor
mov
into
mov
cmp
xor
adc
dec
test
outsl
mov
mov
setge
scas
nop
repz
lea
push
push
mov
xor
mov
addr16
shrb
pop
jmp
xor
lds
clc
jo
and
cmp
push
int3
dec
std
cwtl
in
gs
sbb
sbb
adc
mov
xchg
jl
fwait
inc
sub
and
jns
xchg
lods
stc
xchg
ds
stos
dec
cs
neg
dec
imul
jmp
test
dec
pop
xor
sbb
mov
fidivrl
mov
sub
push
hlt
test
test
cwtl
std
mov
mov
test
hlt
ja
xchg
fnstcw
mov
mov
sarb
loop
mov
xor
int3
lods
jl
pop
mov
mov
jge
inc
mov
je
int
adc
pop
scas
shl
lods
mov
inc
and
in
je
test
shld
repnz
js
dec
lods
mov
mov
mov
inc
mov
xchg
pop
mov
push
dec
or
jecxz
vpacksswb
popf
bound
cld
das
pop
cmpsl
idivl
and
jo
lods
dec
push
fcoms
rorl
addr16
mov
call
xorl
outsb
jo
pop
cmp
and
ljmp
cltd
add
sbb
movsb
and
sub
sbb
push
les
in
popa
pop
fcoml
and
addr16
fsts
popf
mov
mov
adc
mov
adc
jae
push
push
or
ret
ss
dec
cmp
int3
out
mov
bound
fisttpll
xchg
loopne
push
mov
into
mov
sbbb
ja
push
mov
xor
inc
jmp
ja
enter
data16
sub
loope
jmp
popa
sbb
aaa
jp
mov
sbb
jg
nop
imul
sbb
js
ja
cs
and
addr16
out
in
sbb
and
cltd
mov
xchg
push
xor
push
mov
insb
cmp
or
sbb
insb
fstpl
jne
stos
scas
orb
sbb
into
pop
pop
push
and
push
inc
in
loope
pusha
lock
test
lods
and
mov
test
cmc
sar
push
lea
jp
shrb
push
int3
leave
mov
into
aas
xchg
scas
sub
in
mov
jbe
jae
lret
cld
je
jnp
push
pusha
and
cmpsb
jl
inc
and
mov
scas
push
sub
push
mov
adc
fwait
dec
jb
push
dec
ficompl
cmpsl
bound
mov
sti
loopne
popf
imul
adc
xchg
xchg
lcall
jnp
adc
dec
cmp
jp
push
or
hlt
mov
push
mov
int
sub
cmp
cwtl
or
dec
lods
mov
jg
in
inc
fcomps
shr
mov
js
push
es
jbe
jmp
test
daa
je
and
orl
fnsave
hlt
push
in
add
mov
mov
xor
mov
cmp
mov
or
stos
cli
adc
fimull
mov
inc
xchg
shlb
mov
mov
jecxz
inc
sbb
insb
test
hlt
orl
push
and
shl
inc
test
push
jbe
cmp
jno
fisubrl
std
pop
call
inc
dec
xchg
cmp
add
mov
xor
aas
les
or
push
jle
hlt
add
adc
andl
inc
mov
pusha
jl
jno
test
and
sbb
and
stos
in
jl
sahf
inc
xor
add
push
loopne
cmc
fcmovu
cmp
ss
popf
cld
dec
mov
mov
mov
addb
jne
sub
pop
xchg
mov
sub
pop
mov
loopne
fs
popa
sub
hlt
push
or
add
pop
inc
mov
fmuls
repz
fcoms
rorl
fdivrl
push
outsb
mov
jg
inc
jbe
push
cmpb
fdiv
nop
mov
jae
inc
push
jecxz
xchg
cmpsl
lds
mov
ds
fadds
jbe
mov
pop
push
and
xor
mov
pop
and
out
inc
dec
adc
xchg
in
jg
inc
pop
movsl
sbb
sub
outsb
sub
insl
push
xor
js
push
into
add
mov
push
pop
xor
mov
js
dec
mov
pushf
in
mov
leave
xor
roll
xor
cmp
jb
mov
bound
xchg
xchg
outsl
loop
sub
push
je
cld
lea
sar
cmp
pop
dec
lahf
sbb
lds
inc
add
cmp
mov
cmp
insl
inc
fsub
pop
push
add
les
incl
push
pop
mov
movsb
fcompl
mov
mov
jge
and
xor
add
and
cmc
dec
mov
mov
jl
push
arpl
aas
loope
bound
in
xor
adc
rorb
pop
or
jecxz
cmpsl
and
jno
adc
mov
setno
add
hlt
lea
je
push
bound
enter
push
pop
scas
xlat
xchg
push
and
les
pop
pushf
lods
push
shll
mov
scas
test
xchg
mov
imul
jle
fists
fwait
or
sahf
loop
lahf
addr16
stc
cmp
popa
jno
push
xchg
mov
adc
lahf
push
xchg
pop
cwtl
mov
shll
scas
fidivl
and
rol
lods
sbb
mov
ljmp
mov
ja
fdivs
mov
lret
std
or
and
sbb
xchg
sahf
mov
inc
pop
pop
outsb
inc
bound
dec
xchg
shl
xchg
lahf
stos
jle
fsubrl
leave
sti
mov
sbb
add
jmp
shrb
stos
pushf
inc
or
jle
pop
and
insl
ret
mov
imul
add
add
pop
mov
out
pop
subb
jo
inc
mov
les
fs
pop
mov
fbld
mov
pop
xchg
jno
adc
xor
nop
cmp
add
ljmp
mov
sub
jno
jmp
cli
imul
mov
pop
push
fldt
ljmp
mov
sbb
xor
xlat
cmp
in
rorl
mov
lods
in
gs
pop
repnz
jge
mov
dec
mov
scas
dec
js
inc
sarb
pop
out
pop
jp
sub
int
aaa
inc
addb
push
and
mov
clc
cmp
inc
pcmpeqw
cmc
add
add
push
lret
push
sti
sub
cmp
out
pop
movsb
push
or
mov
mov
sbb
push
loop
xchg
push
pop
and
inc
add
out
inc
cmp
inc
lea
push
jns
in
lods
loope
es
mov
lret
out
and
adc
adc
sbb
mov
ss
cmp
outsb
cltd
cltd
push
dec
fidivrl
sbb
rorl
test
sarb
addr16
mov
lds
cmp
pop
fildl
cmpb
push
fwait
js,pt
push
push
and
shlb
inc
loope
sub
dec
sbb
fcmovne
into
addr16
xchg
lods
negl
lods
shlb
adcb
arpl
hlt
loop
movsl
mov
cmpsb
inc
mov
add
test
into
fbld
frstor
cmpsb
fbld
outsl
inc
sub
outsl
pop
adc
sahf
adc
push
scas
shlb
cs
inc
cmp
dec
andb
cs
cmpsl
jg
lret
push
cmp
mov
or
fst
cs
push
jne
mov
mov
adc
popa
subb
lahf
out
mov
push
xchg
sub
imul
mov
cmp
xlat
pop
pop
in
jne,pn
iret
xor
jbe
mov
test
jle
dec
xor
and
dec
leave
xor
inc
mov
in
dec
aam
out
sbb
xor
push
cli
fisubrs
inc
sub
into
es
int
stos
or
mov
es
jns
jb
push
pop
sub
push
fstpt
jg,pn
push
xchg
cmpsb
xchg
and
in
bound
mov
inc
pop
das
push
pmuludq
aam
push
fsts
aad
cwtl
jnp
lret
mov
imul
mov
mull
out
xor
dec
inc
divl
daa
adc
push
mov
xchg
dec
sub
cwtl
loop
cmpsl
mov
fstl
pop
loope
push
aad
add
stc
inc
inc
iret
inc
bound
pop
fistpll
out
mov
dec
in
pop
sub
push
jnp
dec
out
or
adc
jge
cmp
dec
loope
cmp
out
jp
out
lret
xor
sub
out
por
inc
cmp
push
add
push
ljmp
mov
mov
fdivrl
incb
mov
adc
call
std
fs
sub
xchg
js
and
lock
push
fsubrs
mov
pushf
lahf
gs
cmpsl
repz
jp
ret
and
adc
push
stos
cld
mov
jnp
in
sub
jg
cmp
xchg
ficoml
cli
scas
dec
mov
inc
std
xchg
mov
mov
fdivl
cmc
fbstp
stos
idiv
cmp
and
mov
or
cmp
xor
mov
shlb
adc
cld
mov
mov
mov
sarl
add
daa
test
lds
popa
sti
mov
cmp
ficoms
fs
addl
or
jmp
das
mov
and
mov
jns
jl
add
sub
mov
xor
lcall
xor
orl
cs
into
test
fwait
mov
xor
jmp
xchg
add
insl
xchg
daa
xor
push
jo
pop
or
lret
pop
sub
mov
testl
xor
cwtl
call
mov
jl
negl
pop
jnp
or
fstpt
das
jle
es
pop
mov
jbe
test
dec
shl
out
clc
sbb
pop
sti
ds
cmpl
aam
push
in
mov
pop
lret
jb
cmovns
mov
cwtl
iret
or
aaa
and
ss
fiaddl
lock
fwait
add
ret
add
ljmp
out
cmp
rcll
imul
lock
sub
pop
lock
scas
loopne
inc
mov
lods
aad
gs
in
xor
test
xchg
mov
xor
pusha
and
js
pop
mov
dec
or
orb
sub
lods
mov
scas
fcomip
adc
out
push
cmp
and
dec
and
sub
dec
cwtl
xchg
push
pop
loop
sub
movsl
jg
cld
std
dec
fiadds
push
mov
incb
fstps
out
test
pop
add
movsb
add
lea
push
insl
popa
add
test
xchg
and
push
jb
fisttpll
pop
stos
push
pushf
cmpsl
test
mov
call
mov
mov
add
imul
sbb
mov
je
mov
fcmovne
movsl
inc
jg
cmp
and
shll
and
mov
jge
imul
fwait
pop
adc
sub
xor
push
movsl
aad
add
mov
jnp
jle
dec
jp
mov
xchg
out
jl
inc
dec
lock
cmp
jno
push
lcall
push
lods
enter
push
fwait
jno
inc
into
xchg
inc
sbb
mov
jle,pt
cmp
adc
mov
aas
mov
data16
in
xor
les
cmpsb
stos
and
pop
loop
pushl
xchg
adc
fnstsw
jle
insl
hlt
pop
cmp
sub
rcrl
or
add
adc
push
cwtl
pop
inc
add
nop
xor
mov
pop
xchg
pop
jg
enter
cmpsl
jno
das
test
sub
xor
lahf
ret
cmpsb
mov
mov
jle
cld
out
jmp
cmp
test
xor
leave
xor
fstl
cs
cli
test
cmc
insb
dec
sbb
xchg
push
push
lods
add
xor
mov
popa
stc
dec
pushf
das
jmp
jl
xchg
mov
inc
rol
ljmp
xor
mov
jne
lcall
stos
movsb
jb
or
pop
push
pusha
shr
inc
ficomps
lock
scas
pop
cltd
shlb
testb
fistpll
out
jne
adc
lahf
nop
fldenv
mov
test
xchg
mov
mov
xor
inc
inc
inc
ficoml
hlt
ljmp
xchg
lret
rorb
pop
insb
xlat
notb
pop
fdiv
push
sbb
out
scas
lahf
gs
icebp
pop
mov
inc
jnp
xor
dec
lds
add
insl
mov
icebp
in
icebp
mov
cld
mov
adc
add
fucomip
push
test
xchg
cs
mov
lea
nop
and
fadd
fs
pushf
push
scas
mov
pop
fisttpl
or
cld
notb
dec
cmp
sti
add
xor
int3
xor
fcoms
jle
fistl
jle
popf
shll
xor
es
lea
fisttpll
mov
addl
jno
sbb
enterw
scas
mov
lcall
mov
mov
mov
sub
sbb
cmp
ja
pop
gs
fsubrl
or
clc
xorb
out
cltd
xchg
rcl
inc
add
inc
push
push
jmp
imul
sahf
iret
js
push
bound
repz
jno
xor
or
ret
mov
sbb
out
in
pop
les
xor
push
and
fnsave
jmp
mov
mov
cs
cmp
mov
mov
push
fsubrl
mov
mov
xor
jmp
xchg
add
nop
pusha
sub
sbb
ret
lds
or
clc
push
ret
shll
push
aam
flds
jmp
mov
or
iret
inc
ss
out
gs
movsl
out
cmpsb
mov
das
mov
sbb
addr16
jae
pop
loop
cli
inc
inc
addl
das
mov
adc
std
movl
movsl
pop
cmp
sbb
push
pushf
loope
stos
out
sbb
and
jb
mov
cmp
sub
or
xchg
cmp
loop
cwtl
push
hlt
enter
jg
or
sub
aaa
mov
inc
dec
sarb
and
repnz
sub
mov
test
or
push
aaa
gs
frstor
mov
test
rolb
xchg
pop
jl
out
shrb
lock
fistpl
cwtl
xor
add
mov
daa
out
outsl
xchg
cmp
outsl
das
xor
pop
outsl
xchg
pop
sub
fisttps
cmp
cmp
mov
jbe
rorb
push
inc
fbld
push
jo
or
mov
cld
sti
xor
fisttps
pop
rcll
shlb
cmp
cmp
lahf
orb
filds
push
cld
add
jecxz
fidivrs
jle
repz
and
mov
pop
dec
mov
ss
dec
in
mov
mov
loope
fdivs
aas
and
lret
repz
dec
xchg
mov
xchg
inc
shrb
jae
daa
fildll
inc
xchg
arpl
xorb
mov
cmp
jp
in
das
adc
gs
lcallw
jle
fwait
push
dec
sbb
push
mov
sar
sub
sti
out
push
bound
dec
insl
fadd
pop
and
imul
inc
pop
shrb
andl
mov
pop
addr16
ret
iret
pop
insl
sub
add
loopne
or
test
dec
aaa
push
popa
xchg
rcr
push
xchg
test
mov
xlat
xchg
xor
pop
insl
jle
rolb
mov
int
add
inc
clc
pop
or
lock
jge
cmp
push
dec
xchg
xchg
shrl
int3
mov
ret
fsubrl
sub
cmp
adc
or
cs
sbb
loop
and
inc
jne
loop
icebp
cs
ret
push
mov
mov
xchg
mov
into
mov
jl
pop
cwtl
jp
or
mov
xchg
dec
iret
xchg
loopne
rol
mov
sub
fmuls
minps
div
fs
ss
mov
ror
dec
jmp
mov
arpl
push
sub
aaa
mov
jne
xor
xor
sbb
cmc
mov
mov
mov
stos
jecxz
lods
push
rcrl
push
stc
insl
sub
rolb
jnp
bound
ret
pop
mov
jmp
movsb
mov
cmpl
or
movsb
and
mov
adc
ss
fidivs
les
lcall
push
mov
hlt
xor
push
jae
arpl
inc
pop
mov
jecxz
inc
ud1
xchg
mov
in
ljmp
lea
or
jno
or
fimull
fsub
and
adc
fdivrp
add
mov
cmp
and
shrb
cmpsb
sub
xchg
xor
rcl
add
cmpsb
sti
aaa
cmp
test
mov
insb
fistpll
jmp
sbb
jo
in
inc
add
popf
lret
push
out
add
ret
push
push
pop
inc
aas
into
cmp
push
pop
sahf
push
mov
insl
and
adc
sarl
cmp
pop
cmp
ds
das
jg
or
fadd
fistps
or
ds
fbstp
xchg
adc
cmp
test
loop
mov
adcb
pop
js
dec
test
loopne
shrb
into
rclb
mov
clc
js
push
lret
popf
mov
sbb
insl
cmpsl
lods
xor
sbb
and
js
sub
test
jl
pop
cmc
ret
mov
dec
das
xchg
or
jp
xchg
mov
popf
adc
in
pop
jge
mov
das
xorb
xchg
and
push
pop
int3
push
vpunpckhqdq
aas
inc
je
lods
les
adc
rorl
mov
ret
aaa
inc
jne
cmp
push
or
filds
cmpsl
cmpsb
adc
xchg
dec
mov
ret
sbbl
inc
outsb
mov
out
mov
pushf
cmp
xor
and
or
test
xchg
push
cmp
lret
aad
pop
or
out
aam
mov
repz
cld
shll
addr16
aam
dec
scas
mov
ficoms
aad
xor
imul
jmp
dec
je
leave
or
sbb
jg
outsl
cmpsl
mov
mov
dec
cmpsl
mul
xor
mov
inc
jle
cltd
fdivr
cmp
test
sar
dec
mov
sub
push
je
sbb
repz
push
repz
aad
shlb
xlat
loopne
push
std
es
xor
jle
mov
mov
call
dec
mov
adc
incl
rolb
aas
push
mov
adc
fsubr
std
push
pop
xchg
mov
pop
imul
call
fnstenv
hlt
jne
and
outsb
cmc
fistps
ret
sbb
incl
cmc
jae
xchg
out
jle
fcoms
test
cmp
orl
push
xchg
pop
inc
out
mov
das
movsl
fidivs
loop
pop
ret
pushf
movsl
ja
mov
mov
inc
push
xor
mov
sbb
aad
repnz
daa
call
sub
mov
insl
out
or
test
sarb
inc
ror
jns
xchg
repnz
mov
fdivrs
push
add
xchg
xchg
je
cmp
mov
ljmp
enter
pop
pop
mov
pop
lods
mov
aas
lea
and
stos
inc
jge
test
rol
cli
xchg
jnp
xor
stc
pusha
or
or
cmp
dec
pushf
mov
pusha
sbb
mov
das
cmc
xor
notb
pop
xchg
adcb
std
and
adc
test
or
push
add
push
push
push
ret
adc
lock
aam
jb
into
aas
sub
int3
int
fisubrs
mov
xor
dec
jno
and
dec
push
inc
mov
inc
lcall
or
idivb
push
fimull
into
in
cs
scas
ret
arpl
fucom
or
cld
pop
sbb
call
bnd
lods
xchg
sbb
fwait
xor
stos
insb
jo
cwtl
jb
mov
dec
xor
sbbb
inc
xor
sub
xor
mov
imul
shl
call
sub
and
clc
push
and
repnz
in
and
in
movhps
dec
push
mov
mov
pop
jp
pop
mov
or
cld
and
push
fldt
pop
mov
pop
pop
ret
xchg
and
repnz
cld
dec
inc
xchg
jle
mov
sub
cmp
push
scas
or
mov
xor
fcmovnu
scas
popf
mull
sti
push
push
add
ret
jp
push
dec
sbb
lods
mov
in
dec
mull
mov
sbb
mov
inc
push
or
inc
pushf
dec
cmp
inc
into
cmpl
lret
js
cmpsb
and
sub
jbe
insb
js
adc
pop
pop
es
mov
fs
push
cs
cmp
shr
sbb
rcr
adc
mov
dec
jns
jbe
mov
in
insl
out
and
data16
push
mov
pusha
ljmp
shl
out
iret
inc
rdtsc
rclb
ret
fwait
pop
cli
jns
pop
cmp
rorl
and
imul
and
das
jecxz
jecxz
lret
outsb
mov
dec
out
cmpsb
inc
cwtl
add
xchg
incl
arpl
insb
push
xor
pop
std
push
dec
adc
push
lods
dec
movsl
dec
push
je
pusha
out
fadd
test
mov
outsb
sub
push
jb,pt
push
iret
leave
icebp
sahf
jecxz
cmpsb
inc
mov
mov
cwtl
sbb
pop
loopne
enter
imul
sub
mov
popf
je
fmull
jp
stos
pop
mov
int3
pop
in
scas
repnz
aam
stc
fldcw
ds
sbb
sub
test
test
popf
xchg
call
mov
loopne
out
pop
lret
push
mov
ja
mov
xor
cmp
stc
xor
out
in
scas
push
sahf
rolb
inc
cmpsl
idiv
shrl
rorl
xor
inc
adc
cs
lock
scas
and
cmp
push
loopne
pop
jp
jb
sbb
dec
mov
mov
or
ja
dec
daa
jg
repz
ret
xor
push
mov
int
jne
pop
jecxz
insl
out
mov
or
fiadds
dec
or
outsl
inc
push
fbld
pop
sbb
mov
shl
int3
js
push
dec
cmp
jno
sub
push
cld
test
cwtl
cmp
xchg
pop
sbb
leave
cmpl
adc
cwtl
push
aad
scas
pop
lahf
add
dec
incl
mov
scas
scas
push
sbb
xchg
or
inc
mull
stc
push
sarb
je
arpl
into
or
mov
pop
idiv
fistpl
pop
jnp
xchg
enter
jns
out
data16
stc
pushl
xorl
xor
mov
rolb
push
mov
ficoms
in
sub
pop
push
lock
jae
das
adc
push
push
sbb
push
popf
sar
stos
imul
jo
idivl
pop
add
lret
cmpsl
popa
inc
imul
iret
repnz
bound
aas
xchg
adc
mov
add
scas
add
xor
cmc
mov
push
jp
mov
push
sbbb
jnp
cmpsl
xchg
sar
adc
dec
mov
lods
push
and
sub
aas
jecxz,pt
push
pop
add
dec
xor
ljmp
cld
into
in
mov
cmp
stc
mov
fs
imul
push
daa
pop
je
inc
lcall
adc
push
imul
mov
pop
pop
out
sub
jle
cmp
inc
sahf
push
sbb
mov
inc
mov
dec
mov
lds
mov
jecxz
mov
xor
mov
aad
in
dec
push
icebp
fidivl
out
cmp
pop
add
sbb
push
insb
andl
jl
call
je
mov
popa
in
cwtl
push
cld
adc
jnp
jge
inc
adc
xchg
mov
mov
inc
push
call
je
popa
int
dec
and
and
incl
adc
les
scas
sub
mov
cmp
add
add
push
js
fldcw
mov
xor
cmp
std
push
inc
incl
inc
jns
dec
jmp
push
jno
xor
xor
inc
push
xchg
xchg
pop
movsl
push
out
lods
sti
sbb
in
cli
mov
cli
inc
pop
sub
das
test
mov
ljmp
repz
incb
shl
xorb
pop
in
jecxz
dec
aad
push
mov
movsl
or
ja
fstpl
jno
inc
mov
lods
aaa
adc
adcb
leave
mov
and
cli
gs
push
lods
lock
fnstsw
xchg
shll
lcall
mov
and
adc
push
fstps
ja
cmpsl
cmp
mov
ja
int3
test
outsl
lock
xor
es
jns
addr16
cmp
pop
inc
mov
jg
inc
add
clc
push
sbb
mov
fwait
iret
sub
jbe
xchg
add
leave
pop
cmpsl
inc
add
sub
push
jg
mov
cwtl
adc
inc
out
jo
jl
hlt
lods
ss
mov
in
lahf
cmpsb
das
mov
xor
add
push
xchg
or
bound
rorb
pop
scas
pop
mov
jae
push
adc
sbb
add
push
mov
xor
mov
popa
add
test
xchg
add
lret
jae
inc
or
dec
icebp
sbb
dec
hlt
nop
mov
xchg
inc
test
stos
adc
dec
sub
xor
btr
jbe
mov
lcall
mov
cmp
sti
aad
cmp
in
in
dec
jp
mov
call
jne
cmp
mov
fwait
pop
xchg
mov
xchg
popf
mov
out
aas
nop
addr16
push
movsb
sub
mov
jge
pop
dec
call
rclb
sub
popa
sbb
xlat
xor
mov
sbb
gs
dec
ret
xchg
addr16
stos
xchg
xlat
mov
push
cmpsl
xor
fnstsw
or
and
push
and
inc
xchg
fadds
and
popf
jne
xchg
pop
imul
sub
imul
insb
mov
idiv
jnp
push
jecxz
jge
jge
or
pmovmskb
cwtl
cmc
outsl
aaa
mov
add
pop
dec
add
pop
or
inc
inc
inc
stos
sbb
loopne
nop
sbb
add
jbe
dec
mov
sbb
push
rolb
dec
movsb
jno
lods
push
inc
xor
jle
dec
ja
add
or
icebp
fstpt
mov
jne
mov
fdivrs
aas
shlb
sbb
add
stc
or
repz
inc
jp
imul
push
insl
shr
out
push
lcall
inc
pop
pop
push
inc
rcrb
aad
jb
stos
or
loopne
or
xchg
jne
and
aaa
cmp
push
cli
lret
adc
or
and
mov
mov
mov
bound
xchg
add
mov
mov
push
push
and
push
sub
negb
jo
inc
adc
mov
sub
mov
xchg
and
movsl
scas
inc
dec
into
stos
jno
jne
inc
dec
push
dec
shll
mov
in
dec
pop
lahf
mov
cld
leave
mov
mov
inc
andb
fdivrs
stc
pop
cmp
sti
add
js
sbb
loop
scas
xor
int
int3
pop
mov
jle
rorb
sbb
out
mov
mov
mov
push
es
fwait
sub
ret
test
push
mov
mov
mov
clc
push
add
sbb
xor
jno
push
mov
add
into
pop
mov
pop
mov
test
or
add
mov
dec
cwtl
pop
add
add
js
ret
xchg
mov
sub
push
outsl
xor
ljmp
pusha
imul
cmp
clc
scas
je
mov
jno
inc
push
gs
loopne
cwtl
idivb
out
inc
in
jg
jae
mov
in
inc
jo
popf
sbb
mov
cmp
mov
lcall
push
xchg
jg
loopne
mov
ds
push
adc
jecxz
sub
mov
adc
jae
and
xchg
mov
xchg
pop
push
jp
shrl
jmp
shll
xor
call
shlb
inc
loope
xchg
arpl
mov
insb
push
rcrl
xchg
loop
sub
dec
imul
inc
pop
ret
data16
arpl
insb
xchg
adc
mov
or
pop
sti
clc
out
xor
clc
sub
xchg
sbb
mov
sub
jge
mov
aaa
lods
xor
jbe
js
add
lods
mov
shrl
jge
sub
decl
insb
sub
xchg
xor
out
call
inc
inc
aam
mov
push
dec
insb
pop
out
jnp
mov
mov
mov
std
sub
xorb
mov
popf
inc
stos
jno,pt
dec
xor
cmpsb
ljmp
mov
nop
pop
mov
insl
lods
scas
and
fdivrp
add
fdivp
lret
or
bound
sub
lret
lret
push
test
xchg
pop
push
mov
shlb
xchg
out
popa
xchg
dec
xchg
dec
mov
fcomps
sub
fstl
push
aaa
mov
cmpsb
mov
or
jp
repnz
daa
and
mov
xchg
repz
inc
push
adc
push
fistps
jge
stos
rcrb
xchg
fldl
out
mov
xrelease
inc
mov
add
jle
sbb
ljmp
movsl
xorb
shlb
dec
lcall
and
scas
xchg
add
in
mov
lock
inc
stos
mov
jmp
movsl
jbe
clc
pusha
and
hlt
lret
lret
adc
cmpl
ss
push
subl
xor
or
push
std
iret
leave
dec
sub
in
rorl
mov
inc
inc
pop
fisubs
mov
stos
cld
push
fwait
pop
aad
popa
fiaddl
hlt
sbb
pop
cmp
sub
xchg
pop
jb
or
mov
sub
stos
lret
inc
dec
mov
stc
test
adcl
push
icebp
inc
imul
shll
adc
in
push
fldenv
mov
pushf
repz
cs
cmp
inc
push
jge
popa
lea
int
cmp
xorb
scas
fs
cmp
cld
mov
cmp
mov
cs
in
mov
hlt
lcall
int3
inc
jns
movsl
push
push
shlb
neg
std
ret
mov
dec
into
je
add
mov
out
gs
pop
push
inc
adc
xor
cld
sbb
inc
sbb
fwait
mov
and
mov
and
xchg
pop
sti
sbb
out
int
adc
and
sti
mov
out
inc
fldt
mov
inc
adcl
daa
js
xchg
andb
lret
nop
jbe
adc
sbb
jecxz
lahf
movsl
xor
hlt
ret
jo
fstpt
lds
loop
inc
or
mov
adcl
mov
mov
push
ret
jns
arpl
flds
xor
jp
scas
nop
adc
jo
push
fsubrl
daa
aaa
pop
fildll
gs
sbb
jne
shll
mov
lahf
aam
stos
cmp
clc
cmp
outsl
data16
sbb
or
push
fs
arpl
ljmp
adc
xor
sub
daa
fst
outsb
cmp
sub
push
loop
sub
xchg
icebp
test
std
jae
scas
mov
push
gs
and
or
jne
ss
and
adc
jne,pn
data16
sub
mov
ficoms
popa
mov
cltd
pop
nop
lods
imul
sub
cmpsb
pusha
mov
and
dec
ja
mov
inc
lods
in
mov
lcall
xchg
sub
fisttps
adcl
push
leave
adc
seta
jg
sub
cmp
int3
add
inc
call
mov
cmp
outsb
and
ja
enter
inc
push
inc
stos
popf
mov
popa
hlt
fcomps
add
add
jo
and
mov
xchg
xchg
rolb
popf
ret
xchg
cs
test
mov
dec
mov
fcomp
andl
imul
lds
loop
mov
adc
jno
ljmp
call
or
cmp
rclb
sub
sbb
les
mov
mov
cmp
cli
imul
leave
cmp
push
repz
dec
popa
leave
push
movsb
push
popf
cmc
ret
shl
aas
sub
leave
or
out
cmpsb
pop
mov
dec
xchg
xor
push
adc
adc
shrl
scas
mov
in
mov
mov
je
sbb
mov
mov
imul
add
mov
in
cmpsl
push
shl
es
jb
leave
jbe
push
and
pop
sbb
movnti
lock
xchg
in
sbb
mov
push
push
sbb
push
fcoms
mov
mov
add
rcrl
push
add
pop
sbb
in
add
pop
xchg
push
into
inc
jmp
sbbb
mov
mov
hlt
inc
call
mov
jp
jg
inc
call
outsb
xor
mov
lds
or
sti
sbb
inc
das
pop
wbinvd
clc
fbstp
lret
xchg
mov
sbb
mov
sub
inc
enter
cmp
repz
sbb
hlt
cmp
inc
jle
enter
daa
cmp
mov
jmp
iret
aaa
cmp
movsb
xchg
in
push
rcrl
mov
sub
mov
stos
lods
js
out
mov
xor
cld
mov
lahf
andl
loope
dec
cmp
and
dec
ja
xchg
jp
jp
lahf
pop
xchg
push
dec
test
mov
xchg
xor
xor
xchg
dec
sti
push
jl
and
mov
and
in
xor
gs
and
sti
nop
fisttps
arpl
mov
scas
pop
insl
sahf
push
mov
jmp
mov
add
sub
mov
mov
arpl
xor
cltd
xchg
mov
js
or
inc
cmp
or
inc
push
ja
imul
inc
pusha
xchg
and
jle
or
loopne
cmp
adc
mov
fs
sub
jmp
das
mov
shlb
test
data16
popl
sahf
in
int
int
pop
add
shlb
xor
std
lds
pusha
dec
mov
stos
mov
xlat
lcall
rolb
fcoms
dec
repz
imul
add
sbb
push
popa
sub
ljmp
mov
mov
dec
jle
cld
icebp
mov
js
movl
int3
sub
popf
mov
adc
adc
std
rcrl
ret
loop
mov
adc
mov
outsl
andl
scas
aad
fisubrl
fs
outsb
cmp
inc
push
mov
inc
cmp
das
fstl
orb
xchg
sub
sahf
shlb
lea
rcl
in
fisttps
cli
mov
mov
cmp
pop
push
pop
xorb
aaa
popf
mov
fld
and
lods
je
pop
sbb
mov
add
add
or
push
cltd
lea
xchg
inc
or
int3
out
pusha
and
out
xchg
cmpsl
lret
popa
xor
dec
push
push
movsl
mov
push
repz
loopne
jae
in
or
jge
mov
test
mov
not
pop
outsl
adc
mov
sti
sar
mov
rcr
mov
movsb
cltd
cmp
inc
push
ror
enter
aad
int
jno
loope
hlt
bswap
lods
in
mov
mov
daa
repnz
mov
jbe
in
outsl
movsl
test
dec
lods
sbb
dec
fmul
push
mov
out
mov
sub
push
orl
ds
pop
push
repz
lahf
pop
outsb
sub
push
lock
cwtl
arpl
call
test
mov
lahf
jp,pn
xchg
and
and
push
xchg
mov
mov
loop
cli
inc
pmaddwd
repnz
loop
pop
add
fmuls
retw
xchg
jns
mov
int
fcomp
icebp
dec
aas
in
outsl
adc
jp
xor
mov
insb
int
into
aad
outsl
enter
jne
jle
inc
mov
cs
fs
mov
hlt
add
cmp
push
xor
or
pop
dec
mov
adc
fwait
inc
popf
rcr
movsb
xchg
cmp
add
aaa
push
bound
aas
and
sbb
cmp
lea
inc
mov
sub
fwait
es
fcom
fnsave
jg
cmc
insb
sub
and
sbb
mov
jbe
xchg
xchg
es
xor
cmp
rcl
jecxz
add
sub
loope
gs
adc
xor
lret
push
lcall
mov
adc
cli
fstl
cmpsb
bound
imul
inc
mov
xor
mov
inc
lahf
pop
sbb
xor
xchg
arpl
xchg
lock
repnz
dec
push
jp
es
negb
out
push
cwtl
add
pop
insl
cmc
cs
lcall
jge
lds
fsub
pop
fstl
dec
add
movsl
jecxz
xor
and
adc
leave
shrl
cltd
xor
push
fadd
loopne
mov
mov
test
cltd
mov
dec
mov
aas
ljmp
push
scas
sti
ljmp
scas
xor
daa
lretw
mov
xor
lods
xchg
cwtl
cmpsl
push
mov
mov
rolb
cmpsb
xor
xchg
or
cmp
addr16
rclb
flds
daa
inc
cmp
push
es
add
cltd
pusha
adc
jecxz
sbb
lock
and
cmp
clc
dec
mov
lods
hlt
jo
aas
movsl
ljmp
popa
mov
rcrl
in
fwait
xlat
hlt
push
imul
fsubrs
iret
ss
xchg
data16
mov
cld
xor
mov
xchg
aas
push
xor
in
iret
or
clc
inc
outsb
daa
shrb
mov
lea
data16
not
and
mov
add
dec
dec
mov
sti
mov
pop
dec
insb
pop
es
push
cmp
mov
arpl
out
enter
mov
adc
sbb
js
xor
test
sbb
sbb
push
nop
in
jp
mov
jge
decl
xchg
clc
add
pop
lahf
subl
fidivl
lods
jne
sbb
jmp
add
fld1
in
pop
cs
psubsb
leave
pop
adc
push
sbb
push
fdivrl
fisubrl
mov
lods
lods
sbb
sarb
int3
fildll
add
ljmp
icebp
push
inc
jb
add
jmp
iret
mov
cmpsb
loope
adc
sbb
in
mov
hlt
popf
adc
sub
pop
dec
and
fsubrp
das
roll
insb
and
mov
into
mov
loope
iret
sbb
push
hlt
cmp
fisttpl
jl
push
fwait
mov
nop
insb
push
rcrb
fcmovbe
ss
rcll
push
pop
fistps
int3
inc
mov
jo
scas
aad
jb
xchg
ret
rcl
xor
cmp
mov
inc
imul
sub
pop
push
aas
mov
inc
lea
nopl
test
jb
in
xor
popf
mov
ss
rol
jmp
sbb
ffreep
ljmp
inc
fs
or
ss
imul
xlat
xchg
xchg
jbe
sbb
fmuls
pop
insb
int
imul
aam
ds
fwait
mov
mov
mov
mov
jnp
lea
xchg
fldl
add
adc
mov
jbe
fisubs
outsl
mov
ret
and
or
mov
shlb
mov
aam
leave
xor
popf
enter
pop
jmp
popa
arpl
mov
loope
repnz
mov
pop
jp
stc
pop
xchg
nop
xchg
jecxz
nop
insb
xchg
daa
inc
push
scas
aad
or
push
or
push
xchg
mov
jns
out
fnstenv
lret
jnp
inc
jnp
inc
mov
push
jl
or
fisubrs
push
leave
clc
add
or
arpl
mov
xor
mov
jae
and
and
xor
xor
std
fsubl
jns
mov
push
out
sbb
push
xor
dec
nop
add
sub
outsb
lock
popa
lock
pop
pop
xlat
je
add
push
sbb
int
iret
add
inc
in
mov
hlt
sub
mov
lcall
popa
vpcmpgtw
sbb
popa
mov
and
bound
xor
adc
ds
test
pop
adc
xchg
mov
xor
hlt
and
cmpsl
sub
outsl
fsubrp
ret
add
fdivl
insl
xchg
dec
mov
insl
imul
les
int
mov
or
arpl
ret
inc
mov
jno
push
add
in
add
icebp
push
sub
adc
dec
outsl
push
xchg
mov
test
mov
xor
je
addr16
dec
data16
andb
push
inc
sbb
inc
jns
push
jmp
fs
enter
aas
xchg
scas
dec
mov
sbb
cmp
nop
jl
inc
hlt
fstpl
jmp
xchg
aad
daa
mov
cmp
push
in
pop
nop
pushf
jmp
imul
lahf
sub
stc
dec
iret
cmp
cwtl
in
xchg
xchg
shlb
or
ljmp
insl
jo
xchg
or
mov
dec
jae
cs
aad
jmp
repnz
pop
xor
es
xor
xor
and
mov
cmc
dec
jne
inc
add
push
mov
xchg
sub
test
and
in
leave
ja
or
push
cmp
stc
dec
add
mov
jmp
dec
lds
lahf
mov
icebp
mov
mov
das
scas
lds
inc
adc
ljmp
mov
stos
and
dec
scas
jbe
test
mov
jns
or
ja
dec
int3
inc
cmp
les
cmp
lds
dec
mov
xor
scas
fisttps
inc
rclb
or
movsl
add
leave
out
out
sub
dec
mov
mov
and
sub
jns
mov
test
out
adc
repnz
sti
popf
pop
cltd
xchg
ds
daa
inc
push
cmp
fistpll
rcrl
mov
enter
rorl
cmc
mov
pop
or
rcl
lock
jge
test
in
imul
arpl
outsb
or
es
mov
dec
int
jo
hlt
xor
repz
or
push
js
push
pop
xchg
cmp
jge
add
loopne
push
mov
dec
xchg
orb
sub
sub
decb
shlb
add
lods
iret
jp
outsb
testb
dec
adc
push
sbb
xchg
jne
imul
lcall
int3
and
mov
push
imul
inc
test
cmpsl
fildll
cmp
xchg
sahf
jbe
mov
ja
imul
sub
je
lcall
jl
loop
adc
adc
cld
aad
cmpsb
dec
inc
push
mov
mov
push
cld
mov
ds
mov
int
lret
mov
into
push
jb
jb
aad
loop
xor
sbb
push
sub
les
jno
push
cli
push
repnz
ror
fcomp
cmp
xorl
jno
push
and
xor
into
imul
mov
popa
mov
mov
add
push
xchg
into
push
mov
xor
push
xor
fidivrl
rclb
leave
mov
fimull
and
arpl
adc
leave
ljmp
pop
fisubrs
add
xchg
int
cmp
scas
dec
enter
test
addr16
jmp
fwait
xor
push
sub
bound
and
mov
push
ljmp
xchg
stc
pop
jbe
shl
adc
imul
lods
in
aaa
and
fimuls
xchg
arpl
jb
cmpsb
repnz
mov
div
jnp
xchg
or
and
fldcw
dec
xor
int3
push
jl
lods
and
stc
pop
roll
jle
adc
sub
insb
inc
sbb
outsb
jge
in
aaa
data16
mov
xor
cmp
ljmp
insb
lret
mov
adc
loopne
sub
rcll
mov
lret
pop
sbb
repnz
dec
out
lret
adc
jae
std
pusha
jmp
in
sub
push
inc
ljmp
into
xchg
inc
inc
mov
ds
dec
cmpsb
lret
cltd
test
inc
test
test
xchg
jno
mov
push
xchg
lods
dec
inc
flds
xor
movsl
and
push
and
push
shr
mov
aad
stos
inc
or
mov
jge
sub
in
push
leave
xor
data16
mov
aad
add
in
push
xor
push
dec
adc
lret
std
lret
adc
pop
xor
mov
sbbl
clc
cwtl
lock
lahf
fistpll
xor
rcrb
in
push
sub
imul
and
scas
cmpsb
mov
cmp
xchg
inc
or
push
jle
pop
jp
js
dec
or
mov
sahf
cli
mov
jecxz
push
ret
enter
je
or
fcomps
add
add
pop
mov
imul
or
fsubrl
xor
cltd
mov
std
jp
xchg
shl
iret
lea
mov
xchg
inc
scas
and
mov
lahf
movsb
lahf
repz
pushf
lea
inc
inc
pop
sub
mov
cmp
mov
aad
inc
mov
shl
adc
pushf
orl
cmp
inc
addr16
ja
sahf
int3
imul
xor
clc
outsl
fsub
xlat
inc
sbb
clc
xor
push
pop
pop
jecxz
mov
lock
in
leave
adc
lret
test
xor
outsl
pop
xchg
iret
jbe
pop
mov
xchg
inc
and
in
scas
adcb
cmpsl
or
jnp
nop
dec
rcr
push
and
cmpsb
jle
pop
das
into
cmpsb
mov
pop
pusha
adc
aad
lock
ds
push
jle
sub
dec
xor
movsb
inc
mov
cmpb
push
mov
sbb
add
mov
repz
mov
pusha
mov
push
rorb
or
cltd
push
jl
and
getsec
inc
mov
outsb
mov
and
call
ss
cld
add
test
adc
aas
fdivr
jno
pushf
adc
sbb
add
and
push
pushl
jno
mov
lret
push
push
xchg
mov
int
shrl
pop
xor
push
pop
lret
aad
jg
orb
mov
xchg
dec
loope
loope
cmc
into
repnz
out
cld
fildl
xor
push
xor
push
inc
inc
mov
mov
jmp
ret
mov
popa
push
pusha
jbe
icebp
jle
or
js
mov
dec
ljmp
cltd
push
fsubs
push
add
xor
and
sub
pop
push
dec
pop
fcmovnb
jecxz
test
xor
adc
subb
outsb
hlt
jns
leave
dec
iretw
jo
mov
push
repnz
sti
xchg
and
imul
int3
pop
mov
sahf
adc
xchg
add
inc
push
push
sub
lret
push
mov
jge
scas
mov
xchg
leave
cli
ficompl
cwtl
adc
add
mov
pop
in
addb
push
ss
jnp
jp
push
insb
into
outsl
aaa
or
test
dec
mov
loopne
hlt
test
push
pop
inc
in
repz
das
mov
aas
jb
shll
mov
mov
xor
rcrb
jge
aas
dec
cmp
sub
or
jmp
and
gs
lds
jnp
sti
jge
loop
fsub
aas
test
jne
in
push
xorl
inc
mov
cmc
fcmovne
push
adc
jg
daa
and
ffree
aam
mov
loop
push
inc
repnz
cmp
into
dec
mov
lcall
test
xchg
mov
cmpsb
pop
sti
int
outsl
cmc
inc
sub
out
add
push
fadd
push
addr16
pushf
push
fwait
inc
call
icebp
or
in
jns
lds
jne
out
xlat
scas
push
fcomip
arpl
mov
add
data16
sbb
jl
mov
mov
adc
and
adc
sbb
rcrb
mov
stos
mov
mov
adc
add
test
in
or
xorl
test
dec
ja
rorb
add
lods
lods
ljmp
pop
aam
push
pop
sahf
in
nop
dec
idivl
pop
movsb
cli
repnz
inc
sbbb
shl
cld
iret
mov
fistpll
test
adc
push
stos
dec
xor
mov
inc
pop
cmpsl
out
repz
jb
pop
push
xor
sub
mov
mov
hlt
adc
mov
int3
xchg
and
mov
test
stos
jb
dec
pop
rcll
repnz
sbb
test
pop
popf
in
das
loopne
dec
push
int
mov
xor
add
fwait
adc
inc
mov
aad
cmp
lret
jb
jp
adc
out
stc
shl
lock
xchg
cmpsl
orl
mov
ljmp
out
push
pop
aad
scas
sub
sbbl
pop
stc
add
cmpl
icebp
mov
xchg
call
dec
and
jb
xchg
push
aad
and
mov
lods
leave
sbb
std
mov
adcl
jno
adc
push
insl
loopne
push
mov
movb
and
xchg
adc
repnz
lahf
adc
out
sbb
dec
lret
add
hlt
leave
dec
mov
dec
dec
pop
mov
and
sbbb
nop
and
pop
jp
stos
add
outsb
dec
in
add
subl
cltd
fmul
std
cmpsl
mov
push
adc
sahf
hlt
inc
pop
aam
sbb
in
pop
xor
in
pop
movsl
icebp
int3
xor
jne
sub
sahf
fsub
test
mov
xchg
push
dec
rcl
or
xchg
shl
xor
push
int
mov
dec
test
fisubs
dec
xor
cmovne
fnstsw
push
lahf
lret
clc
mov
arpl
mov
cmp
inc
mov
enter
fcomip
sub
sub
push
mov
push
mov
and
xchg
or
pop
push
sbb
dec
popf
mov
popa
mov
rorb
aaa
sub
push
daa
decl
mov
adcb
mov
loopne
jle
jno
out
rcll
lock
aas
mov
add
test
add
ss
jge
stc
inc
xchg
cmp
fiadds
fdiv
test
sub
aad
lods
mov
jbe
xchg
sub
test
cmp
mov
pop
dec
cmpsl
inc
imul
sub
int
dec
jg
jp
hlt
sbb
cmpsb
rcrl
jne
imul
call
cmp
jmp
cmc
nop
mov
out
cmp
xor
cmpsl
dec
lret
cld
roll
push
fcmovu
roll
loope
sti
aas
inc
push
inc
in
mov
or
addb
inc
sbb
inc
mov
loopne
fs
aaa
js
push
xchg
push
movsl
sbb
sub
cmp
icebp
ret
divb
gs
cmp
das
jb
testl
mov
adcl
sub
in
xchg
inc
fcompl
xchg
int3
dec
pop
lods
ja
and
imul
insl
inc
pushf
clc
sets
xor
add
mov
std
mov
test
scas
sub
and
mov
push
ljmp
fisubl
sub
mov
popa
js
sbb
icebp
pop
push
lock
std
popa
pop
movsb
mov
les
or
or
adc
sarl
mov
lea
mov
pop
mov
sub
jmp
fcomi
mov
lcall
clc
dec
xlat
push
or
xchg
nop
scas
inc
jp
das
jb
pop
xchg
inc
or
mov
mov
xor
fdivrl
test
pop
mov
rorb
cmp
inc
sbb
or
cmpsl
mov
mov
pop
out
sbb
or
lret
mov
rcrb
adc
pusha
orb
mov
and
push
sub
pop
addr16
push
int
sbb
pop
fldt
sbb
cmp
cmp
ret
cmp
inc
cmp
cli
xor
sub
cmpsl
dec
pop
int
scas
movsb
sarb
and
xlat
icebp
cltd
dec
sahf
jne
xor
mov
sbb
fcoml
in
or
mov
pop
xchg
lea
push
ja
pop
vmaxpd
ret
inc
sub
mov
jb
popf
push
mov
jp
cld
das
pop
and
cmp
adc
cwtl
mov
or
rdtsc
xchg
sub
addl
aas
pop
int
or
and
dec
mov
ret
outsb
jge
and
sub
cli
pop
mov
in
sub
pusha
mov
xchg
or
mov
arpl
lret
fldt
inc
insb
push
repnz
sub
mov
sbb
fsts
out
cli
in
enter
and
stos
in
adc
dec
sbb
lock
lcall
lcall
loope
push
pop
int3
mov
xor
paddsw
repnz
arpl
lods
aas
lds
inc
push
jne
dec
mov
mov
lock
pop
xor
scas
cmp
ljmp
sub
loop
cld
imul
std
rclb
pop
pop
sub
cwtl
add
sub
add
pushf
cmp
loope
mov
push
mov
mov
adc
sbb
jge
or
xchg
jmp
cmp
les
mov
ret
or
pop
mov
out
addr16
dec
add
dec
aas
clc
jb
jecxz
jmp
out
icebp
fmull
push
xchg
in
shlb
xchg
mov
sub
jecxz
aam
push
mov
dec
fnstcw
sbb
test
icebp
sti
mov
outsb
aaa
cmp
rorb
mov
clc
aaa
movsb
cs
lods
push
outsl
jg
xor
xchg
add
call
pop
sub
aad
xchg
scas
daa
sbb
xor
xchg
sbb
cmpsb
mov
leave
mov
imul
and
cmpsl
and
jecxz
jecxz
int
stos
push
pop
mov
bound
mov
rcr
cld
push
push
and
xlat
fildll
push
and
jle
je
adc
pop
cli
bound
pop
sahf
fwait
mov
ret
xor
adc
push
inc
aad
inc
out
or
adc
out
mov
push
idiv
in
sbb
push
sub
mov
nop
inc
pop
mov
add
xor
pop
push
aaa
cs
sub
shr
push
and
enter
push
mov
push
leave
imul
mov
push
pop
xor
jne
dec
ss
mov
ljmp
push
mov
hlt
leave
jae
cmpsb
lods
out
stc
mov
jg
jae
and
out
dec
mov
push
js
xor
cwtl
pushf
push
cmp
or
cmp
push
notb
nop
pop
pop
mov
xchg
and
pusha
sbb
mov
std
es
insw
xor
shl
jbe
jb
cltd
ds
mov
fstps
lea
popl
addr16
jge
repnz
js
xchg
int
imul
xor
popa
push
into
pop
loopne
dec
shl
loope
out
cmp
jns
imul
jl
aaa
jle
xlat
shll
push
sub
mov
push
pop
xor
push
imul
mov
lds
push
jp
rolb
add
cmp
push
daa
cmp
sub
dec
push
imul
andl
iret
and
xchg
mov
repnz
adc
movsl
and
lret
xchg
rcll
fstps
in
sbb
mov
push
xor
pop
sbb
xchg
jns
push
push
sbb
sbb
lcall
push
jbe
mov
xchg
xchg
add
add
pushl
xchg
in
bound
jg
lods
fldt
mov
cmp
pcmpeqb
sti
push
dec
pop
dec
mov
fnsave
inc
jg
dec
lods
ffreep
adc
cltd
mov
cmp
cwtl
cli
jle
sub
dec
mov
pop
push
test
adc
or
stos
pop
and
bound
inc
xor
xor
gs
mov
std
pop
les
bound
xchg
jge
in
xchg
js
jae
movsl
aaa
push
sbb
pop
dec
fmul
imul
fdiv
xor
jge
xlat
mov
xor
in
adc
mov
insb
enter
mov
fdivl
jl
rclb
lods
daa
js,pt
test
jl
pop
popa
jae
dec
sub
ds
dec
call
std
and
mov
test
out
cmpl
xchg
not
cmp
cmp
int3
loope
inc
inc
das
pop
not
fadd
rep
clc
mov
jo
into
cmp
in
fadd
in
adc
ds
cmp
dec
pop
cmp
fimuls
mov
call
cmc
jg
sbb
dec
stc
inc
aad
insl
sub
or
cmp
cmpsb
ret
test
rclb
aam
notl
fstps
aaa
les
or
or
into
inc
rorl
dec
push
sbb
fisubrs
fmuls
xor
xlat
sub
lock
dec
or
mov
lods
loopne
adc
mov
add
jae
cmp
pop
out
and
xchg
dec
jg
ret
mov
test
test
inc
sar
xchg
lret
xor
in
and
cld
dec
cwtl
hlt
xchg
nop
out
add
cmp
jmp
inc
pop
push
lods
xchg
adc
push
test
data16
or
push
or
or
xchg
rol
cmp
cmc
not
add
sub
fiadds
mov
fsub
jge
cli
ret
mov
iret
pop
push
adc
in
jnp
leave
insb
leave
add
xchg
or
cli
lods
mov
clc
mov
ror
lods
xor
jae
and
leave
divb
jo
lods
insl
sarl
stc
jg
cmp
lcall
in
lods
lret
shrb
sti
loop
jo
shlb
adc
in
sahf
add
dec
in
mov
cmp
rcrl
xor
adc
and
push
rolb
out
pusha
or
js
rcrl
xor
insl
adc
inc
in
out
cmp
xchg
insl
and
dec
mov
movsl
rcrl
mov
movsb
bound
and
ret
fwait
or
xchg
pop
cbtw
adc
fildll
mov
jno
test
mov
lods
adc
xchg
in
push
pop
sub
push
pop
cli
fildll
inc
dec
cmp
repz
push
das
mov
mov
arpl
dec
mov
lods
jne
js
push
xor
cmpsb
adc
lahf
jecxz
and
pusha
hlt
lahf
movsl
xor
add
adc
mov
inc
sub
mov
cs
push
inc
sub
cltd
add
out
sbb
xchg
xor
aas
test
mov
mov
fisubs
sar
add
aaa
std
jg
add
jp
xchg
int
lock
lahf
cld
mov
mov
ficompl
mov
xrelease
mov
repnz
jecxz
xchg
jmp
in
xchg
int3
push
addr16
orb
sbb
add
in
popf
aad
imul
adc
sti
imul
jb
fmul
addb
xor
fbld
jb
or
jb
test
pop
lods
pusha
imul
aaa
lea
jl
mov
jl
ret
mov
xor
mov
pop
fsubrs
mov
aas
ss
hlt
ds
mov
cmp
cwtl
push
pusha
jnp
loope
xchg
adc
out
dec
or
fwait
call
fdivr
mov
jae
gs
xchg
std
cmpsb
adc
imul
pusha
xchg
ret
cmp
fsts
and
push
mov
cmc
mov
and
mov
sahf
and
pusha
mov
dec
test
mov
outsl
xchg
mov
rclb
xchg
cmp
inc
adcl
adc
push
or
test
into
adc
subb
in
das
test
enter
outsb
cmp
and
xchg
sbb
push
stc
cli
mov
mov
cmpsb
sarl
push
icebp
ffreep
imul
push
fidivrs
out
push
mov
mov
femms
or
adc
in
add
xchg
push
setp
pop
data16
ss
ret
stc
out
xchg
pop
iret
std
jne
and
test
outsb
pop
pushf
aaa
out
jg
loope
repnz
pop
and
rcrl
and
mov
lret
dec
and
dec
dec
mov
cmp
push
push
daa
mov
lods
hlt
mov
rorl
cmp
jb
sbb
pop
mov
mov
adc
iretw
adc
jbe
mov
adc
shlb
pop
pop
push
adc
jnp
cmp
push
dec
cwtl
push
inc
and
and
mov
push
daa
rol
or
add
mov
mov
dec
mov
push
jo
rcl
push
mov
pop
mov
sub
mov
mov
mov
bsr
inc
mov
ror
ret
xor
cli
iret
sahf
scas
movsl
add
aaa
inc
or
arpl
add
inc
pop
mov
xchg
inc
jns
mov
mov
or
inc
std
and
mov
adc
loope
out
fdivs
orl
jnp
sbb
insl
cmpl
cld
add
push
pop
out
js
fildl
loope
scas
add
inc
and
adcl
lret
pusha
fnstcw
and
dec
mov
cmp
sbb
mov
ja
push
xorb
fmull
lret
mov
insl
or
rcl
mov
cmp
andb
inc
test
dec
mov
pop
jne
arpl
les
inc
aad
scas
pusha
inc
pop
mov
int3
jge
adc
imul
inc
mov
daa
jecxz
add
mulb
outsb
xchg
or
cs
push
jae
cld
cmp
adc
fidivs
mov
push
fcmovbe
xchg
fdiv
or
cmp
je
mov
adc
xor
leave
insb
and
dec
sbb
xchg
call
mov
push
call
aaa
insb
inc
cmp
mov
pop
or
cld
sbb
loopne
popf
lcall
les
adc
lea
nop
xchg
dec
pop
pop
or
outsl
push
cld
ja
push
add
sub
jno
imul
lds
cmp
jp
mov
repz
mov
call
daa
xchg
addl
repnz
adc
mov
movsb
clc
inc
cmpsb
or
mov
jmp
push
out
push
pop
jnp
and
jle
sub
push
cltd
arpl
mov
add
mov
push
and
sbb
cmp
jo
push
mov
enter
roll
cli
popf
stos
scas
lcall
xchg
mov
mov
dec
xchg
into
jle
out
mov
int
rolb
scas
jo
jo
push
push
cwtl
popw
push
pushl
sbb
mov
cmp
out
mov
cmp
push
std
pop
jecxz
sbb
sub
jmp
jbe
int
std
mov
pop
push
mov
xchg
stos
xchg
les
cld
fidivrl
jo
in
es
loop
mov
lret
out
das
cmpsl
cmp
mov
jmp
aas
xchg
shrb
cmp
je
mov
in
sub
jae
sub
adc
sti
imul
fsub
aas
mov
outsb
or
dec
sbb
mov
std
adc
sub
pop
pop
sub
pop
or
aad
sbb
stos
cmpsl
jo
sbb
xor
xor
adcb
insb
sbb
scas
dec
pop
dec
cs
outsb
fisttps
pop
dec
jae
or
xor
out
lods
divl
mov
test
and
and
pop
pop
aam
pop
call
mov
pushf
psubw
das
inc
popf
scas
cld
iret
scas
and
adc
mov
xor
xor
sahf
sub
dec
ret
imul
mov
pop
aaa
dec
insb
cmpsb
setge
sub
mov
mov
xor
test
or
cmp
push
dec
cmp
xor
jp
sub
outsl
int
jmp
js
push
icebp
mov
sbb
lods
ret
lret
ja
je
pop
jmp
jg
fnstsw
cmpsb
sub
in
push
jne
mov
cmc
xchg
mov
xchg
pop
cmpsl
out
sub
addl
ret
add
xor
dec
int3
outsl
inc
push
sub
mov
jg
aas
xor
daa
sbb
cmpsl
insb
jb
push
and
xlat
insb
les
xor
cmp
mov
mov
mov
lock
out
testl
jne
negl
sbb
repz
in
push
mov
pop
mov
cmp
push
enter
icebp
iret
mov
jno
xor
lret
enter
xchg
dec
mov
cli
test
loope
test
or
mul
rcrb
fs
mov
fidivrl
repnz
mov
sahf
push
jge
popf
popa
aaa
rolb
jbe
jae
sbb
xchg
jnp
loop
and
and
lret
adc
add
je
icebp
mov
xchg
int3
outsb
das
loop
push
sub
sbb
movsl
inc
jb
mov
add
pop
jns
out
hlt
fistps
pushf
addb
mov
jo
mov
es
nop
fwait
push
push
push
mov
and
jns
and
adc
dec
pop
adc
ret
call
jle
push
adc
cld
out
sub
cs
popa
shlb
cmp
sar
leave
cmc
push
mov
pop
xchg
int3
sbb
push
pop
incl
out
cmp
fiadds
sub
push
pop
push
adc
in
jno
cmpsl
cwtl
jg
dec
in
jo
or
out
fcomi
adc
and
sbb
out
mov
mov
je
or
imul
imul
gs
xchg
mov
mov
cmpsb
pop
fdivl
or
push
in
out
xor
jbe
add
mov
in
add
arpl
pop
fcomps
fimull
sub
sbb
add
fbld
jns
nop
int
push
dec
mov
insb
mov
add
jo
pushf
push
push
loope
negl
or
test
pushl
mov
xor
in
pop
int
sbb
adc
stos
add
ss
in
call
fistl
adc
cmc
cmp
es
or
inc
inc
out
adc
adc
pop
loopne
movq
xchg
imul
jle
sar
dec
sub
jecxz
pop
iret
daa
sub
cmp
mov
pop
and
push
adc
push
adc
cmpsb
inc
inc
sub
imul
cmp
adc
in
cmp
and
pop
or
popa
js
scas
adc
gs
xlat
cwtl
jnp
mov
aad
mov
fwait
push
test
adc
inc
fstp
pop
imul
idivl
pop
jg
popl
test
popa
adc
insl
cmp
outsl
gs
mov
dec
sti
mov
flds
lret
aas
push
ret
mov
jg
mov
hlt
push
sbb
dec
pop
fwait
or
adc
jmp
popa
shll
mov
addr16
aam
into
cmp
xchg
cmp
mov
imul
xchg
pop
xchg
jle
lods
rol
popa
cmp
push
dec
outsb
adc
fs
or
jle
cld
rorb
movb
jns
rcrb
repz
inc
test
cltd
clc
lods
cs
stos
in
icebp
jp
ds
std
and
or
mov
cmp
dec
mov
xor
cwtl
add
inc
mov
dec
js
lea
mov
jo
adc
pop
sbb
addr16
out
dec
lods
cmp
loopne
es
mov
fwait
cmpsl
aam
popf
fdiv
pop
mov
das
inc
mov
outsb
pop
xor
lods
das
xor
mov
cs
lahf
sub
subb
mov
in
mov
rcl
ret
inc
sub
aas
bnd
data16
addr16
shlb
in
daa
jno
mov
lret
adc
lds
sub
test
insl
popf
dec
hlt
cbtw
aad
bswap
mov
cltd
jecxz
cmp
lcall
sbbl
scas
mov
ret
mov
cld
jnp
mov
mov
pop
mov
pop
push
cwtl
or
cltd
push
lods
cmp
add
mov
movsb
xchg
mov
sahf
sbb
notl
cmp
out
jle
jbe
xlat
pop
leave
and
mov
cld
fwait
mov
in
out
sahf
out
mov
int
popf
push
pop
inc
mov
or
shrl
in
or
movsb
cs
add
int3
jecxz
dec
std
push
push
push
mov
or
ror
ss
fsub
test
cmpsb
data16
adc
ss
rorl
movhps
imul
dec
xor
dec
mov
outsl
sahf
sub
mov
addr16
iret
push
cmp
or
ds
gs
add
jecxz
shrb
shlb
mov
pop
test
adc
icebp
or
push
lcall
pop
mov
jmp
xlat
fwait
shlb
in
add
ss
add
push
int
pop
or
repnz
sahf
cmp
in
ret
div
mov
in
or
lret
mov
sbb
push
jo
repz
inc
jo
xchg
xor
adc
aas
mov
popa
pop
stos
push
mov
in
pop
cli
pop
ds
xor
add
cmp
lea
mov
mov
scas
loop
push
jg
mov
sahf
inc
outsl
addr16
call
stos
lods
sub
xor
jmp
mov
mov
dec
jae
cmp
push
or
in
push
in
movsl
dec
pop
sti
mov
pushl
test
adc
jp
loope
test
movb
pop
add
add
iret
and
and
or
xlat
mov
mov
mov
push
mov
xchg
push
mov
sar
jnp
int
loopne
or
shrl
cli
mov
dec
shlb
icebp
mov
mov
aad
or
sbb
lret
int3
out
cmp
sbb
dec
inc
outsl
jns
xor
pusha
pop
insl
cvtdq2ps
icebp
fisttps
loop
flds
js
shll
setge
push
mov
addr16
mov
aas
push
je
les
loope
dec
jne
fs
mov
push
and
cmp
iret
lea
xor
xchg
addl
gs
ret
aas
adc
jle
pushf
inc
xchg
cmp
push
imulb
adc
xor
pop
pop
pop
sub
xchg
loope
icebp
jecxz
dec
pop
dec
jae
cltd
js
or
ds
mov
adc
in
fstpt
lret
dec
ss
test
push
add
jle
mov
in
fldenv
into
test
jmp
je
or
fnstenv
lret
pop
mov
dec
pop
outsb
int
push
cmp
jmp
jns
iret
mov
dec
add
loop
adc
pusha
imul
es
dec
mov
subl
pop
sub
outsb
loop
inc
lret
gs
sub
push
addr16
loop
xchg
add
or
mov
push
mov
imull
fiadds
jmp
in
dec
sarb
cmp
jne
jecxz
push
lret
add
fidivrs
je
push
xor
imulb
mov
sub
ljmp
jb
and
sti
push
test
loop
and
shrb
xor
popa
into
inc
jb
imull
mov
dec
jno
dec
ret
fwait
out
xchg
cmpb
sar
mov
pop
xor
orb
and
mov
popa
dec
pop
int3
aaa
pushf
push
lahf
xor
lcall
ja
addr16
lea
cmp
jno
rolb
aad
inc
sti
and
mov
sahf
inc
push
pop
sbb
ret
push
sbb
aas
xchg
aam
icebp
jns
adc
fsubrl
es
jl
mov
mov
jmp
ret
mov
jle
or
jo
or
mov
js
inc
mov
mov
sbb
shrb
fsubrl
es
cmp
push
repnz
fldcw
mov
xchg
mov
fisttpl
sbb
insb
ljmp
or
mov
dec
push
sti
fmul
cmp
inc
add
jne
int3
aad
xor
pusha
sahf
in
pop
pusha
xchg
pop
sub
pop
push
andl
ret
jns
dec
leave
xor
mov
sbb
sub
or
add
push
sub
jnp
push
jmp
sub
cld
push
jge
jno
scas
aaa
in
int
and
adc
push
xchg
ja
in
pop
mov
mov
fmull
bswap
xchg
cmpsl
xor
scas
xchg
pop
ret
ss
daa
xchg
out
popa
pop
scas
cmc
ja
lock
push
aaa
and
xchg
dec
xchg
adc
adc
xchg
aam
rorl
xchg
or
ret
and
imul
hlt
test
xchg
repz
fisubl
scas
add
inc
xor
and
lahf
call
rorl
xchg
or
ret
iret
cwtl
repz
bound
add
lds
in
dec
cmp
push
and
movsb
xor
jbe
sysret
std
test
add
pop
mov
lods
mov
mov
pop
mov
lea
mov
sbb
ljmp
lds
ljmp
cli
pand
lock
rcr
mov
pushf
jmp
or
sub
in
mov
push
mov
sti
xchg
adc
or
roll
mov
push
push
inc
int
mov
sbb
imul
imul
lods
in
mov
fs
push
adc
mov
clc
adc
repz
mov
fsubs
or
sub
mov
pop
pop
lret
mov
adcl
das
mov
add
adc
jge
popf
add
in
push
xor
push
dec
push
and
cwtl
fcmovne
inc
push
mov
ja
jnp
jne
jns
pop
xchg
pop
outsb
xor
cmpsl
scas
push
scas
sub
fwait
mov
jo
pop
adc
sbb
roll
arpl
std
in
pop
sbb
mov
loope
cmp
mov
fdivrl
enter
scas
lret
adc
cs
xchg
inc
pop
xchg
jno
pop
insb
testb
cmp
in
and
call
mov
mov
push
sub
bnd
push
jg
imul
jae
test
sbb
rcll
push
movsl
scas
xchg
pop
cmp
inc
cmpb
das
mov
arpl
dec
sub
je
pop
jmp
sub
aam
xor
add
js
dec
xlat
adcb
push
sub
push
mov
int3
jg
fidivrl
fisttps
imul
icebp
dec
xlat
push
or
out
push
mov
push
pop
lahf
sahf
xor
mov
push
out
mov
scas
lahf
ds
jbe
add
and
mov
pop
xlat
sbb
mov
daa
test
daa
adc
dec
push
mov
push
test
daa
jmp
js
xor
or
incl
data16
and
jp
fldcw
scas
cmp
mov
scas
mov
xor
in
jmp
les
cmovns
aad
stos
mov
pop
out
dec
in
mov
and
sti
shlb
in
jecxz
jbe
sti
or
mov
sub
popl
push
addr16
ret
mov
mov
shl
fadds
or
push
xor
fs
mov
test
iret
imul
push
rsqrtps
mov
fcomps
inc
shrb
xor
dec
inc
movsl
cmpsb
dec
aad
jae
dec
psubsb
add
or
xchg
jmp
int
sbbl
movzbl
loope
mov
in
pop
cli
sub
xchg
adc
mov
xor
add
xor
adc
fimuls
mov
push
enter
mov
add
mov
adc
repnz
je
jecxz
cwtl
and
ret
jl
pop
and
pop
mov
mov
or
add
mov
mov
in
sub
es
mov
xchg
shll
popa
push
jns
jmp
loopne
xor
mov
mov
lret
lock
scas
and
lahf
add
xor
inc
mov
cwtl
cs
xchg
test
xor
fcoml
cmpsl
dec
adc
mov
std
mov
or
pop
sbb
adc
outsl
jne
jae
cmp
sub
fldenv
xor
sub
pop
inc
pusha
mov
mov
inc
call
lods
jno
sub
pop
mov
adc
xchg
cwtl
xor
scas
inc
das
adc
lret
adc
xor
test
enter
push
clts
and
xor
xchg
inc
mov
ja
jbe
cmp
shl
enter
mov
fscale
mov
insl
pop
jmp
fdivs
push
mov
mov
cmp
dec
mov
cmp
out
dec
fwait
push
lahf
insb
add
jns
inc
cmp
mov
mov
cwtl
sub
jle
test
inc
sub
xor
pop
mov
jg
in
inc
jg
add
mov
adc
popl
xchg
lahf
or
ljmp
sub
in
lock
daa
pusha
inc
push
mov
or
adc
das
mov
mov
fcompl
dec
mov
rcrb
inc
mov
add
inc
lock
bnd
repnz
in
std
jge
repnz
and
pop
dec
pop
fsubrl
rcll
unpcklps
push
test
xorb
test
pusha
jbe
add
mov
push
mov
push
pop
shrl
pop
and
ss
rcrb
cs
aad
cmp
dec
inc
ss
leave
clc
arpl
fdivrl
out
mov
mov
jl
lret
test
loope
mov
fmuls
sub
sub
xchg
mov
lods
pusha
je
ljmp
ficoml
adc
movsl
xlat
jb
das
es
les
iret
dec
jmp
add
cmp
cmp
xchg
cmp
in
repnz
add
jge
dec
xor
push
or
inc
ffree
pop
xor
cli
jno
inc
add
push
push
cmp
xchg
dec
fdivr
outsl
lahf
int
jne
and
icebp
ds
mov
mov
and
mov
out
arpl
cmp
bound
andb
sarb
or
pop
cwtl
lret
or
push
daa
cld
push
pop
sbb
test
adc
add
cltd
jae
out
stc
push
out
xchg
fldenv
subl
lret
dec
inc
outsl
mov
xchg
xchg
pop
mov
lret
repnz
stos
mov
xchg
mov
xchg
mov
out
mov
inc
call
lods
mov
scas
add
faddl
dec
negl
outsb
lret
or
je
aad
test
cmc
int
ljmp
rcll
popf
ret
mov
sub
fxch
iret
inc
lds
call
pop
bound
mov
out
dec
sbb
lock
inc
push
xchg
add
xchg
shll
mov
iret
adc
mov
adc
arpl
rep
aas
imul
out
mov
and
pop
sbb
mov
cmpsb
and
enter
mov
cmp
pop
out
movsb
push
jg
pop
insl
cmpsl
xor
stos
daa
sub
cli
adc
cmp
xchg
pop
jmp
popa
scas
ss
clc
mov
or
je
jne
pop
nop
xor
daa
addr16
sbb
xor
mov
lods
mov
call
cmp
fwait
ret
jns
out
jge
push
sub
test
dec
jmp
das
bound
push
jmp
lea
dec
out
fistpl
fwait
andl
ds
pushf
roll
inc
pop
dec
loop
push
push
push
js
les
cmp
mov
fsubl
mov
mov
insb
hlt
mov
sbb
leave
mov
arpl
cmovl
cmpsl
loop
mov
test
or
fsubrs
sbb
mov
ret
es
addl
test
sub
aaa
push
dec
push
jg
scas
stos
adc
or
adc
cmc
dec
mov
movsl
daa
imul
out
mov
mov
jge
push
and
jbe
fisubl
lcall
pushf
mul
cmp
sbb
xchg
fists
lea
sub
loop
pop
mov
adc
aaa
adc
out
cmpsl
mov
test
in
pusha
inc
mov
push
sarb
mov
aaa
mov
data16
mov
jmp
loop
shll
mov
sar
mov
shr
add
xchg
mov
les
inc
mov
inc
call
jno
or
mov
outsb
insl
outsb
mov
dec
mov
int3
ficomps
xchg
sahf
fidivs
cmp
dec
inc
cmpsb
push
movsb
mov
inc
cltd
icebp
es
nop
push
inc
xor
shlb
fdivr
and
loop
xchg
or
daa
dec
cld
bound
pop
xor
or
add
in
test
pop
lock
js
mov
mov
sbb
pop
int
enter
in
mov
push
xor
jge
dec
mov
sbb
hlt
push
jl
pop
mov
mov
ret
xchg
repnz
cmpsb
mov
mov
jo
shrb
int3
pop
lcall
dec
sub
push
sbb
fnsave
aas
xchg
iret
add
xchg
arpl
xor
and
aam
or
adc
jb
xor
out
sub
mov
or
sbb
scas
push
mov
inc
mov
test
add
je
test
scas
sahf
fcmovnu
mov
and
mov
mov
cmp
or
push
and
cld
stos
aad
add
xor
inc
les
cmp
clc
pop
jae
repnz
ds
icebp
test
out
push
fwait
dec
adc
xchg
fst
lds
ffreep
pop
lds
bound
mov
sbb
jl
jmp
mov
mov
sti
push
cwtl
add
js
pusha
xchg
popf
fnsave
scas
sub
mov
or
add
movsb
clc
adc
cmp
and
ret
cmp
idivb
jg
in
sub
pop
mov
and
inc
cmpsl
ja
cs
xchg
cli
mov
mov
xchg
leave
in
sti
adc
xchg
xor
inc
call
lds
pusha
jecxz
loope
mov
jne
stc
sbb
mov
int
pop
shrl
jecxz
jae
or
test
cwtl
ja,pt
sete
push
mov
xor
pop
dec
lock
or
jae
aad
imul
inc
dec
dec
ret
jne
xor
jns
dec
addr16
mov
cmpsl
mov
movsb
mov
aam
sbb
repz
pusha
lcall
in
int3
and
pop
push
jnp
call
xor
sub
cmpsb
mov
sub
lea
pop
stos
xchg
push
jbe
pop
dec
xchg
xchg
pop
push
or
mov
rolb
out
jecxz
cltd
sub
rcl
xlat
stc
dec
inc
imul
adc
xlat
or
aas
cmp
xchg
fidivrs
fstpt
push
fldcw
inc
add
fwait
in
adc
leave
loope
jg
xchg
lea
outsl
pop
bound
cmpsb
sub
aam
std
mull
push
inc
xor
lcall
mov
xor
test
das
xor
cmpsl
stc
rclb
xchg
addb
enter
mov
bound
xchg
adc
pop
or
cmp
pop
adc
mov
addr16
iret
jo
pop
push
add
dec
inc
xor
jo
in
pop
les
add
outsl
and
test
movsb
rcll
cmp
cltd
jb
jecxz
inc
es
cmp
mov
dec
data16
movsb
jbe
push
cmp
incl
mov
mov
daa
or
fwait
mov
pop
sbb
mov
mov
aas
ss
dec
ret
dec
mov
repnz
dec
cmpl
jp
xchg
fs
cmp
sbb
out
add
stos
sub
ret
xor
mov
lret
add
gs
or
movntps
cld
inc
popa
lods
lret
ss
sbb
jne
xchg
test
popa
fisubl
aad
jl
cld
pop
mov
into
shr
sbb
cmp
push
push
repz
or
and
and
push
jg
mov
push
rcrb
mov
into
lret
cmp
mov
jns
inc
cwtl
icebp
arpl
stos
pop
adc
xor
sbb
fstl
out
insl
test
sub
cmpsl
push
pusha
popa
xchg
and
negb
adc
pop
stos
cwtl
xchg
add
xchg
or
mov
sub
aaa
mov
xchg
xchg
adcb
jo
dec
cmp
xor
push
cltd
cld
and
shlb
jb
push
cmp
mov
pop
fadds
mov
int
sub
cmc
xchg
pop
hlt
push
sbb
and
ret
mov
es
jb
in
jb
and
mov
jo
aam
dec
imul
popf
pop
adc
sbb
mov
mov
in
pop
push
loopne
cs
pop
cld
cmp
pop
pop
xchg
lock
xchg
fisubl
scas
ja
pop
addr16
adc
jbe
jno
bound
sub
or
xlat
mov
enter
mov
xchg
imul
in
call
pop
inc
insb
iret
int3
mov
push
cmp
gs
dec
mov
addb
mov
js
and
idivl
mov
xor
imul
jecxz
fbstp
iret
daa
jle
cmp
inc
and
icebp
das
push
xchg
lret
in
aaa
lret
fs
jae
xchg
pop
int
pop
cwtl
cmp
addr16
out
int
js
or
sub
xchg
lods
pushf
mov
cmp
inc
sub
shrl
jo
insl
pop
fstp
out
xchg
xor
aas
fnstenv
in
and
ret
clc
xchg
mov
jb
test
lret
sarl
sbb
inc
mov
testb
xor
hlt
ret
lods
movsl
arpl
add
add
or
mov
pushf
mov
icebp
xchg
jg
inc
or
and
and
and
push
mov
adc
dec
movsb
jnp
cmp
orb
addb
push
fimuls
nop
mov
inc
cwtl
inc
add
stos
inc
jge
repz
push
push
mov
out
addr16
adc
call
insl
fisttps
xor
cli
mov
push
jmp
cltd
push
aaa
stos
cmp
dec
sbb
dec
add
aam
mov
and
cmc
nop
adc
sbb
xchg
add
enter
das
sbb
daa
cmpsl
rcrb
jmp
fistpll
les
add
ljmp
dec
mov
adcl
sub
in
mulb
cmp
jl
pop
shll
scas
dec
push
sbb
jle
mov
sarb
xlat
sbb
test
movsl
pop
fstpl
push
lret
scas
add
test
push
ret
lcall
scas
test
jbe
pop
repz
adc
adc
xchg
xor
mov
xor
sub
sbb
sbb
dec
ret
cmc
jb
shl
scas
sbb
stos
push
out
adc
xor
outsl
cmp
lcall
dec
shlb
cmp
pop
mov
mov
movsl
mov
adc
jno
pop
pop
lret
mov
inc
out
pop
data16
push
cmp
out
sbb
test
jo
in
fsubrl
cwtl
mov
sbb
int3
test
xchg
push
clc
das
iret
add
pop
fs
js
daa
imul
push
push
cs
pop
xor
xor
fists
dec
mov
in
mov
mov
scas
lsl
xor
pmaddwd
divl
add
clc
add
mov
mov
nop
fidivl
cs
test
push
pop
xor
test
int
dec
and
aad
loopne
js
mov
orb
pop
imul
repz
sbb
shrb
mov
jbe
dec
mov
lods
adc
dec
scas
xor
xchg
push
nop
jecxz
sub
aas
sbb
xlat
adcb
cmpsl
repnz
arpl
xabort
xor
push
pop
jmpw
add
mov
jbe
out
dec
add
repz
sbb
leave
rcl
mov
roll
bound
dec
out
add
std
mov
sbbl
into
lock
das
dec
mov
xchg
clc
outsl
mov
cmpsl
inc
sub
mov
mov
cmp
dec
pop
ret
cwtl
mov
xchg
outsl
and
pusha
inc
in
aas
xchg
inc
imul
out
xor
fstp
sbb
int
int
rcrb
cmp
pop
cmpsb
icebp
sbb
push
in
fsubrl
out
sarb
adc
xor
xor
cs
mov
xchg
pop
out
xor
clc
fnsetpm(287
or
mov
sub
dec
mov
or
xor
mov
rorb
insb
xchg
mov
sbb
dec
scas
sbb
rol
push
enter
scas
cltd
movsb
push
leave
and
mov
mov
call
xchg
xchg
insl
pop
lock
push
fmul
add
xor
sub
mov
arpl
aaa
cmpsb
ret
xchg
out
scas
dec
mov
adc
mov
mov
mov
cmpl
jnp
pop
fidivrl
bnd
pop
jno
xchg
sbb
je
mov
dec
stos
in
xorl
out
pop
jp
pop
xchg
lahf
mov
pop
ror
mov
repnz
mulb
or
iret
loopne
inc
push
push
mov
pop
in
repz
jge
sbb
mov
add
insb
pop
test
add
cli
cmp
cs
mov
jl
inc
cli
sub
mov
ja
repz
push
sbb
and
push
mov
cltd
push
loop
scas
ss
adc
ja
fdivrs
outsl
mov
jb
push
add
xchg
push
stos
xor
loope
testb
les
mov
add
mov
add
lods
mov
xor
cli
fwait
mov
mov
aaa
insb
or
jle
adc
pop
enter
pusha
faddp
jge
test
xchg
jae
ds
movsl
in
and
cltd
xor
xor
or
out
lahf
xchg
insl
popa
orb
lds
adc
jnp
mov
add
jnp
addr16
or
fcom
mov
aas
jecxz
add
cmp
mov
rorl
push
ss
es
repnz
sbb
xchg
hlt
pop
mov
push
data16
mov
jecxz
jg
or
addr16
push
insb
pop
dec
int
nop
lret
insl
outsb
add
cmpsl
push
and
aad
out
add
cmp
in
dec
push
lahf
add
xchg
lods
std
out
xchg
icebp
cmp
fiaddl
inc
test
pusha
shll
aas
in
sbb
cmp
mov
push
add
addr16
stos
or
mov
push
push
jbe
shl
dec
fisubs
in
nop
xchg
mov
or
in
cwtl
ret
ljmp
cld
fsts
xchg
or
add
int3
sbb
call
pop
sbb
pop
pop
inc
les
movsb
add
mov
imul
aas
mov
sub
test
adc
sti
movsb
call
in
dec
ja
push
icebp
adc
inc
popa
jmp
lret
push
call
or
mov
cmpb
imul
adc
xor
test
sbb
fsubl
sub
gs
test
mov
ret
mov
mov
mov
mov
xor
cs
cmp
aam
lock
xor
adc
fcomps
insb
int3
cmp
mov
xchg
jno
mov
aam
les
xor
into
inc
and
test
and
jp
mov
or
inc
in
mov
add
dec
and
aam
jne
xchg
outsb
ds
lock
mov
inc
jae
or
cmp
push
int3
xorl
pop
jp
sub
cmp
loopne
aaa
cmp
daa
in
xchg
test
pop
jb
rcrl
xor
inc
sbb
nop
std
jo
sbb
test
cmc
xlat
gs
shlb
mov
sti
test
add
mov
fs
idivl
xchg
loope
lock
dec
stc
lea
push
jle
dec
movsl
prefetch
leave
and
cmp
xor
js
inc
dec
leave
sbb
bound
lret
ret
not
mov
mov
dec
out
loope
je
adc
pop
jmp
sbb
adc
cmp
lahf
inc
stos
ss
inc
mov
adc
jp
rol
sbb
js
cli
sbb
push
lods
movsl
jne
pop
and
cmpsl
mov
rorl
mov
pop
addr16
add
inc
inc
sbb
push
cmp
mov
fnstenv
pop
daa
jnp
xchg
push
inc
mov
xor
cltd
mov
arpl
and
xor
arpl
pushf
push
popf
pop
gs
jne
cmp
pop
sbb
adc
add
sarb
movsl
cmc
test
bound
mov
call
add
sbb
ret
sbb
mov
mov
cmp
repz
mov
negl
lock
adc
add
lods
xchg
and
std
popa
lahf
in
scas
or
and
jb
insl
inc
pop
or
inc
xor
cmp
or
popa
popa
in
aam
rolb
fldenv
out
push
add
cmpsb
push
cmp
or
pop
popf
cld
xor
inc
sti
scas
inc
mov
add
pop
imul
cltd
fmull
hlt
jle
sahf
mov
lret
xchg
mov
mov
jecxz
rorl
sbb
mov
push
dec
lods
icebp
in
andb
ret
jge
arpl
pop
icebp
and
push
or
clc
fcmovb
movsl
mov
dec
dec
push
and
insb
bound
daa
es
into
adc
icebp
mov
push
cltd
adc
push
and
mov
push
xchg
jnp
or
mov
sub
add
jae
pop
repz
test
dec
and
jne
mov
or
adc
shrb
inc
dec
adc
repz
les
loop
sbb
outsb
push
into
subb
mov
imul
jle
push
or
or
or
clc
aam
xlat
push
jl
cmp
cld
dec
pop
lods
jp
jo
xchg
jbe
xchg
inc
dec
in
test
lds
das
xchg
fbld
adc
lods
test
sbb
fdivs
ret
outsb
adc
push
xchg
dec
jns
shrl
fnstsw
and
test
cli
mov
lcall
sub
mov
sahf
pop
faddl
sahf
mov
xor
push
jle
insl
loope
in
jbe
jl
cs
mov
push
push
pop
data16
mov
jb
lret
jmp
pop
mov
mov
rorb
cmpl
cmp
fisttpl
jl
xor
repz
cmp
dec
fisttpll
test
mov
roll
xor
lret
pop
inc
add
mov
adc
outsb
imul
arpl
gs
add
and
sbb
fdiv
jns
sbb
jns
out
push
popa
in
in
call
mov
mov
and
adc
sub
push
mov
andl
lcall
lds
push
jp
dec
xor
jb
add
js
cmp
dec
decl
not
cmp
add
push
mov
or
lcall
test
jo
or
enter
xchg
push
push
jbe
stc
in
cmpsb
dec
push
sbb
fstpl
dec
outsb
ret
and
or
ljmp
repnz
out
xchg
cmc
mov
jne
add
sub
add
dec
lock
xchg
ret
out
inc
popa
mov
rclb
enter
out
dec
mov
call
sbb
push
jo
enter
dec
cwtl
fdivrl
movsl
inc
sbb
lea
clc
outsb
cmc
sbb
or
hlt
sbb
adc
lock
test
mov
dec
inc
shrl
insb
fsubr
fisubl
push
out
pop
jmp
ljmp
mov
mov
dec
mov
jp
ret
dec
out
repz
and
loop
mov
cmp
push
pop
cld
enter
pop
enter
mov
in
jno
mov
and
stos
jecxz
add
iret
ret
sahf
das
mov
add
sub
push
cltd
jle
cs
mov
lods
add
push
cs
insl
mov
and
movsb
pop
dec
push
mov
ret
int
cmpsb
lret
mov
pop
xor
insb
lret
xor
clc
int3
cmp
jle
bswap
push
repnz
rclb
enter
cmpsw
xor
les
mov
jae
jg
lds
jmp
es
mov
imul
cmpsb
push
add
sub
ret
jle
cmp
jp
fsts
ret
cmp
add
mov
cmpsb
mov
jle
pop
sub
in
or
jg
mov
mov
add
push
sbb
lods
popa
in
icebp
lret
and
test
insb
lcall
sub
incb
sub
out
adc
inc
movsl
inc
hlt
jno
cmpl
push
pusha
xchg
aam
in
hlt
and
sub
push
xchg
lcall
fldcw
jb
cmc
mov
lahf
mov
mov
mov
outsl
lret
jmp
sbb
ss
in
mov
rolb
dec
fistpl
popf
cmpsb
scas
sbb
outsb
ljmp
ficomps
jecxz
push
insb
and
push
pop
mov
mov
sub
mov
jecxz
leave
outsb
mov
sub
std
mov
mov
popf
sub
mov
pop
fs
adc
mov
cmp
xlat
mov
xor
jle
pop
pop
sbb
int
flds
inc
pop
pop
cld
roll
shlb
xchg
daa
stos
xor
cmp
rcll
mov
lock
jns
mov
mov
shll
xor
repz
lahf
into
in
fwait
movsl
repz
cmp
jle
cld
inc
ret
ret
fcoms
mov
roll
add
jnp
in
movb
and
cwtl
pop
aas
ljmp
neg
sub
dec
cmp
mov
inc
gs
stos
mov
popl
jb
fldl
mov
jbe
lea
arpl
push
andb
adc
push
aam
hlt
sahf
lock
ss
lcall
cmp
arpl
pop
mov
sub
mov
rep
pop
or
xor
ss
xor
dec
or
inc
leave
test
jne
or
xchg
rcll
push
fiadds
or
lods
out
movl
andl
daa
sub
jb
jl
jns
dec
pop
movsb
stc
repz
repnz
push
jb
or
ja
mov
mov
xlat
popf
jb
jns
out
cmp
in
inc
jo
mov
pop
inc
push
or
repz
mov
test
popa
test
sub
mov
pop
mov
call
fcmovnb
dec
jg
enter
inc
shr
popl
dec
repnz
dec
ja
testl
lret
jle
ret
xchg
add
test
cmp
adc
hlt
mov
cmp
dec
mov
cli
sub
xchg
push
imul
inc
popf
pop
push
ret
stos
test
int3
add
fnsave
mov
dec
jl
js
fsts
mov
ret
mov
push
gs
mov
jb
push
loopne
testb
cmp
iret
xor
or
jnp
xchg
sarl
or
push
jae
xchg
push
fidivrs
in
sub
outsl
inc
add
imul
adc
mov
adc
ja
hlt
lods
addb
icebp
test
push
sbb
jns
mov
outsb
sbb
ss
push
dec
pop
push
lea
add
leave
in
sti
stos
arpl
mov
mov
sub
mov
sub
dec
frstor
icebp
lcall
loopne
jnp
nop
js
movsb
xorl
mov
xor
inc
cmp
orb
jo
xorl
and
in
xchg
push
insb
inc
cmp
imul
add
dec
push
jg
cmp
jne
cmp
jp
push
xchg
pushf
push
pop
stc
stos
leave
fdivrp
xchg
sbb
enter
sub
inc
add
inc
pop
xor
pop
je
mov
xchg
mov
and
into
fbstp
xor
xchg
jno
roll
and
nop
adc
loopne
aad
insl
mov
sbb
mov
inc
mov
ss
pop
xchg
fidivrl
loop
loop
xor
sahf
pop
xor
in
jg
sbb
mov
cmp
pop
loope
inc
cwtl
sbb
divl
loopne
ds
lahf
xor
push
lret
xchg
adc
lret
rclb
js
lods
inc
inc
lcall
in
stc
add
xchg
arpl
lcall
ret
ss
jle
push
sbbl
lods
jne
pusha
push
pusha
fidivl
pop
lock
aam
aam
repnz
test
xchg
lock
hlt
inc
sub
test
addb
or
push
movsb
mov
and
xchg
add
xchg
shrl
xchg
inc
clc
mov
mov
incb
and
mov
pop
test
lahf
sub
outsl
movsl
xor
insl
pop
adc
and
adc
pop
mov
cld
jb
xchg
into
out
repz
int
cmp
ss
xchg
mov
lods
add
aam
out
and
call
int
jp
push
std
xor
cmp
jnp
ja
cltd
mov
inc
mov
lret
add
lea
add
xor
into
xchg
cli
aas
push
adc
out
jge
mov
mov
faddp
sub
out
movntq
ss
lret
icebp
jbe
inc
mov
mov
imul
pop
xor
push
mov
shrb
mov
insl
push
sbb
dec
cmp
adc
test
movsb
data16
movsl
lds
and
xchg
inc
decb
fcmovu
stos
mov
xor
dec
mov
call
jmp
imul
xor
inc
lahf
stos
dec
and
xchg
das
jle
movsb
push
lods
jno
subl
pop
sbb
cmp
mov
cltd
aad
push
adc
orb
jl
lret
imulb
out
sub
mov
push
fsubs
push
lds
fdivr
adc
push
test
dec
pop
cs
aaa
adc
pop
mov
and
movsb
and
ret
push
movsl
and
ret
push
jge
xchg
les
lods
xor
sbb
mov
test
and
dec
jb
mov
pop
mov
daa
dec
mov
lcall
rorb
mov
xor
pop
xor
inc
dec
cmp
lea
pop
leave
add
leave
adc
sti
or
stc
aas
sub
pusha
xchg
movsl
push
cmpsl
cld
repz
subb
popf
cmc
ret
jecxz
lret
rorb
in
push
inc
inc
cmpl
js
add
jb
sbb
or
sti
xor
mov
fcoml
out
xor
cmp
and
test
out
cli
fstpt
mov
out
mov
testb
fcom
fs
or
fisubl
loop
sbb
mov
or
sbb
pop
adc
repz
pop
pop
pushf
dec
lods
mov
mov
xor
shlb
push
out
nop
xor
and
add
roll
cs
andb
int3
mov
and
jge
roll
pop
out
jbe
sbb
dec
lods
ljmp
push
mov
fs
pop
add
arpl
outsl
and
mov
push
shll
insl
push
mov
push
xchg
fcomip
xchg
int
orl
outsl
jae
dec
jmp
fiadds
ficompl
leave
dec
ja
cmc
mov
test
insb
push
sahf
xchg
loope
mov
add
mov
dec
pop
or
test
ja
movsb
dec
sbb
jne
inc
je
cmpsb
dec
pusha
xchg
loopne
pop
test
aaa
stc
dec
adc
mov
cmp
cmp
cwtl
mov
insb
and
mov
adc
mov
in
dec
jns
push
in
inc
jge
mov
ja
icebp
xchg
xor
jle
mov
ljmp
insl
jl
hlt
mov
push
push
xlat
inc
mov
sbbl
je
lret
jb
and
into
aas
push
jo
push
jno
sub
jbe
mov
mov
sub
in
in
sti
xor
sbb
mov
jnp
mov
imul
pop
adc
loop
jmp
pop
xor
fidivs
xor
adc
movsl
cs
test
pop
aam
xchg
cmp
or
push
xchg
and
js
aam
jl
dec
orl
fbstp
xor
imul
jecxz
xlat
dec
test
push
inc
pop
jp
rolb
sbb
mov
aad
sti
sbb
adc
addr16
clc
xor
or
rorl
cli
mov
pop
xchg
sub
les
cmp
dec
lods
fdivs
fmul
movsb
jecxz
xor
xchg
shr
xchg
cmp
ds
inc
jnp
lods
pop
inc
mov
lods
jno
inc
in
xchg
jnp
cmpsl
pop
jbe
pop
loopne
sbb
mov
sub
pusha
sti
and
cs
dec
pop
int
adc
aad
xchg
out
dec
xlat
cmpsb
xor
scas
bnd
mov
or
push
pop
adc
mov
icebp
aam
fildl
addl
lret
insb
in
jo
push
mov
cmp
xor
popf
sub
push
fldl
je
aaa
push
add
mov
add
xor
xchg
and
arpl
out
jl
mov
xchg
in
mov
stos
add
inc
push
in
cmc
lahf
pushf
push
adc
ljmp
mov
cmp
sbb
xchg
sub
pop
cld
les
loopne,pn
imul
stc
pop
out
xchg
cmpsb
fwait
je
xchg
daa
test
xor
dec
lods
out
dec
sub
pop
xor
and
mov
arpl
lahf
cmp
fnsave
add
pop
sbb
lea
mov
mov
lret
cmp
int
or
xor
notb
outsb
mov
mov
dec
in
xor
movl
pop
sub
push
lret
and
mov
pop
gs
jl
or
test
mov
pop
je
push
insl
mov
fdiv
push
aam
repz
pop
es
cmp
rcrb
test
sbb
in
and
es
or
sub
incl
ljmp
dec
lret
repz
fs
mov
mov
ret
notb
mov
in
mov
mov
or
mov
adc
fcoml
xorl
push
mov
inc
add
outsb
scas
push
jmp
and
lds
cltd
cmp
jecxz
data16
cli
sub
test
pop
mov
ficomps
and
push
jnp
sbb
pop
fdivl
mov
in
inc
xchg
xchg
sub
fldl
mov
sbb
push
mov
mov
lods
test
je
mov
push
mov
sub
addr16
cltd
mov
push
dec
mov
cli
mov
data16
adc
dec
dec
cmp
std
mov
stos
les
sbb
fldt
xor
fmul
mov
jbe,pn
shlb
or
mov
or
sub
call
mov
mov
ficompl
repnz
xor
enter
mov
adc
movsl
repz
test
xlat
xchg
gs
lods
fsubr
mov
xlat
loopne
pop
rorl
push
pop
rcrb
xor
inc
push
loop
mov
aam
adc
sbb
pusha
fidivs
jp
lds
cmpsl
pop
inc
jmp
icebp
or
inc
stc
inc
lret
pop
shlb
inc
xchg
pop
pop
sub
or
push
in
xor
arpl
push
mov
addl
fwait
push
lock
testl
shrb
outsl
xchg
pusha
and
pop
xor
fwait
jmp
pop
mov
add
frstor
mov
les
stc
dec
sti
xchg
mov
jne
sbbl
in
out
aaa
jnp
jno
cli
xor
pop
movsl
int3
ret
pop
jle
xor
jmp
cmc
push
stos
dec
cmp
out
rorb
andb
imul
cmp
je
cmp
push
out
cli
push
inc
sbb
adc
pop
push
push
jns
push
sbb
sbb
pop
sbbb
out
mov
outsb
jae
lret
inc
ud0
cwtl
sahf
sbb
cmp
jecxz
jge
shr
mov
dec
test
aas
push
mov
jbe
addr16
sub
or
dec
leave
sub
mov
xor
iret
xchg
push
popf
mov
adc
and
mov
scas
cmp
data16
lret
sbb
add
cmpsl
dec
aaa
inc
gs
sbb
pop
jge
scas
enter
and
cmp
and
ljmp
jo
push
mov
lods
stos
adc
call
jno
push
and
jl
jecxz
jae
xchg
cmp
mov
mov
push
mov
aam
mov
repz
pusha
fs
xchg
out
push
fmuls
or
and
ljmp
mul
lea
and
push
cmp
sub
lcall
push
adc
xor
xor
xor
push
mov
inc
push
daa
push
sub
repz
xchg
test
jnp
das
pop
testl
dec
jno
ret
out
jbe
arpl
scas
adc
or
inc
je
push
int3
sbb
adc
mov
adc
iret
shl
rcrl
lods
xor
int
xchg
idivb
sarb
popa
out
scas
mov
sbb
pop
adc
push
xchg
arpl
and
cltd
push
cwtl
sub
aam
repz
test
mov
out
and
xor
jecxz
data16
xchg
fistpl
add
jb
in
mov
mov
lret
andl
sarl
xor
mov
push
inc
xlat
jmp
jmp
daa
mov
out
fwait
xchg
ds
repnz
fcomip
lcall
mov
jge
in
aad
outsb
mov
stc
arpl
imul
dec
ljmp
mov
mov
ja
fimuls
stc
pop
pop
iret
pop
adc
and
lahf
add
adc
inc
sbb
xlat
jl
in
jns
add
xor
fidivrs
into
push
cltd
nop
leave
es
pop
mov
sti
sbb
mov
pop
push
mov
xor
cmpsl
ret
or
fcomip
sbb
aaa
fmul
and
pop
data16
fadd
outsb
sbb
cs
loopne
aas
dec
mov
gs
mov
push
mov
lods
or
pop
push
jp
lcall
enter
mov
scas
fdivl
push
push
mov
cmp
cs
dec
or
nop
fmul
push
arpl
fcomps
xchg
sbb
sub
lret
pop
ja
cld
xor
inc
loop
or
pushf
add
mov
outsl
test
pop
les
dec
into
rolb
xor
push
pop
mov
push
cmp
imul
sbb
adc
fwait
ja
js
mov
fcoms
ficompl
and
popa
test
icebp
in
sub
jg
sub
cmpsb
movsl
pop
sub
repnz
hlt
and
js
jge
rolb
pop
inc
nop
icebp
arpl
push
sarl
lret
cmpsb
inc
aam
test
jg
rcr
xor
sbb
inc
test
jg
inc
outsl
sub
pop
xchg
xor
mov
lret
cmp
inc
ret
imul
dec
stos
jno
sub
outsb
mov
pop
cmp
jns
push
cmp
or
and
ficoml
mov
shl
aaa
cmp
jg
ds
popf
ja
dec
mov
dec
sbb
pop
add
sub
mov
hlt
mov
ror
dec
lds
stos
jns
repnz
push
sbbl
mov
mov
stos
mov
dec
outsl
mov
sbb
rolb
dec
mov
push
mov
std
sub
or
or
imul
pop
jp
sti
mov
xor
and
adc
mov
or
push
add
xchg
arpl
shll
pop
fisubrl
jmp
or
fidivrs
ret
jae,pt
xchg
cmova
dec
bound
lods
test
mov
mov
out
sbb
inc
mov
push
cmp
icebp
sahf
arpl
cmc
sub
cmpsb
mov
add
dec
cmpsb
add
fs
add
dec
hlt
scas
xchg
xchg
lds
lods
inc
jno
imul
out
lret
jno
add
mov
lods
mov
pop
mov
pop
add
sbb
pop
push
cmp
xchg
sub
mov
or
jnp
xchg
stos
cltd
xor
mov
in
divl
stos
rolb
shlb
test
sub
adc
xchg
mov
mov
pop
add
jne
movl
out
jl
es
scas
sahf
daa
or
insb
push
dec
outsb
repz
out
add
test
pop
dec
and
inc
mov
mov
nop
jmp
adc
imul
popf
rcrl
inc
xor
into
jl
ret
pop
xor
lods
jge
cmp
das
lds
int
rcrb
ss
jl
lods
mov
jl
adc
pushf
je
fsubrl
clc
cmpsl
movsb
lcall
stos
xor
pop
inc
clc
fnstcw
pop
inc
lods
xchg
ljmp
cmpsb
fstpt
lcallw
lret
sbb
mov
sub
in
jnp
jo
sbb
scas
pop
mov
jle
sub
push
xor
jmp
mov
jne
mov
cmp
arpl
dec
loopne
dec
fdivl
popa
jg
mov
rolb
fdivr
cwtl
cwtl
lods
dec
mov
jle
sti
int3
adcl
pop
std
xchg
aad
jb
push
pop
mov
jecxz
in
mov
outsb
xchg
aas
in
dec
xor
and
popf
adc
hlt
loopne
jecxz
mov
or
xor
adc
push
leave
adc
arpl
xor
stos
cmp
int
imulb
xchg
xchg
push
jno
mov
icebp
insb
xor
dec
mov
jl
adc
repnz
sarb
cmc
push
imul
mov
inc
stos
loopne
lds
cli
dec
lahf
mov
std
dec
mov
adc
sbb
test
notl
ljmp
in
or
sbb
cmp
inc
std
fwait
bound
pop
push
nop
fiaddl
sbb
shll
sahf
aaa
test
jae
and
mov
cmp
orb
mov
cmp
stc
in
cli
repz
mov
sbb
negl
icebp
daa
dec
pop
fcomps
aaa
mov
test
adc
dec
repz
pusha
sub
out
pop
int
pop
pop
sbb
lea
inc
or
mov
pop
adcb
bound
push
aas
or
cmc
sbb
cmp
mov
popa
jge
lods
pop
jecxz
cltd
push
sbb
arpl
jp
jl
scas
ret
ljmp
or
push
jo
subl
inc
loop
fcmovnb
outsb
cli
adc
mov
roll
int
lret
jbe
insl
adc
xor
shlb
sbb
sub
iret
pusha
arpl
mov
mov
push
sub
adc
enter
inc
xor
dec
mov
fsubs
pop
fs
repz
xor
gs
repz
or
dec
fld
pusha
jb
popa
sbb
icebp
xor
pop
add
xchg
push
pop
sub
cmp
aam
int
xchg
xchg
out
xor
mov
adc
stos
jo
push
call
pop
ret
das
push
lahf
ja,pn
and
push
outsl
lods
sbb
ja
fistl
pop
test
mov
rol
cmp
rcl
or
pop
imul
fisubrl
push
xor
mov
sbb
iret
mov
dec
jae
sahf
and
sti
dec
push
adc
ret
xlat
jae
sbb
fdivl
push
lea
clc
imul
ror
mov
insl
cmp
sbb
bound
and
cmp
sub
mov
das
lcall
in
or
clc
dec
and
jl
mov
ret
fsub
sub
push
sub
aaa
sbb
dec
pop
aas
and
jnp
cld
pop
aad
mov
cmp
lcall
inc
xor
int
ja
add
jge
mov
sbb
or
jo
js
std
dec
adc
into
cmp
and
out
jge
and
fmuls
push
cmp
adc
pop
adc
out
and
les
push
pop
adc
adc
loop
xor
adc
cli
sub
xchg
push
add
cmp
or
mov
das
scas
jbe
aas
stos
and
jo
outsb
mov
fidivs
pop
push
sbb
push
loope
clc
cmpsl
xor
inc
sub
cmp
or
sbb
gs
mov
cld
repz
dec
sub
repz
test
mov
sbb
jae
bound
cli
insl
mov
xor
jmp
sbb
push
aas
pop
or
in
loop
xor
nop
adc
rcll
orb
or
jbe
imul
mov
xchg
popa
or
push
repnz
nop
outsl
stos
fcoml
and
in
frstor
enter
test
repz
out
aad
pop
cmp
xchg
leave
pop
xor
les
or
mov
jne
sbb
repz
dec
add
pop
dec
add
cwtl
lods
sub
add
pmaddwd
pop
insb
loope
mov
inc
add
lahf
mov
xlat
addb
inc
mov
push
fdivl
adc
pop
jge
push
aas
adc
clc
push
add
imul
mov
scas
inc
xor
sub
adc
lods
and
push
xor
les
addr16
addr16
idivl
push
repnz
nop
mov
pop
or
jb
sbb
in
sbb
xchg
push
stc
xor
int3
push
sahf
xchg
push
push
xchg
mov
mov
pop
sti
mov
mov
nop
pop
xor
push
and
in
sub
clc
dec
incl
idivb
testl
rcrl
in
cmp
xchg
hlt
sbb
sbb
das
xchg
pop
fisubrs
cmp
mov
push
mov
cmc
jle
bound
dec
sub
push
mov
inc
add
ret
sub
cld
jbe
test
or
les
sbb
cltd
fcmovb
sbb
add
cmpl
pusha
mov
lea
cltd
insb
icebp
sbb
jge
sbb
pop
jge
mov
push
cmp
enter
lret
mov
gs
jp
mov
stos
faddl
mov
fisttps
jmp
in
jb
lea
push
mov
addr16
lret
dec
outsb
mov
daa
xchg
cmpb
sbb
mull
pop
repz
out
ret
shl
fisttps
scas
test
add
inc
inc
ret
and
sahf
add
insb
fists
mov
pop
out
cltd
enter
pop
cs
addb
inc
daa
xchg
adcl
fimull
mov
xchg
pop
push
bound
stc
pushl
aad
jns
mov
imul
cltd
jp
fstpt
cmpsb
add
loop
mov
ret
jmp
lds
dec
pop
ja
in
out
cmovb
push
xor
outsl
xchg
mov
sarl
dec
test
pop
imul
jg
arpl
pop
inc
cmp
test
pop
scas
mov
sbb
test
mov
fnstenv
aaa
icebp
adc
loopne
push
loop
push
popa
sbb
test
icebp
and
mov
sahf
arpl
out
push
jae
mov
dec
and
and
fcmovbe
mov
xor
test
sub
fwait
cs
jecxz
out
jbe
xchg
leave
fmulp
pop
iret
and
push
xchg
lcall
add
mov
lods
subb
idiv
es
adc
mov
nop
arpl
fstpt
scas
call
xor
mov
cmp
cmp
mov
popf
add
test
fistpll
mov
mov
ret
sbb
mov
inc
nop
std
jns
pop
and
fwait
cwtl
rclb
cld
sbb
jle
stos
sbb
ret
aad
in
aam
outsb
iret
filds
aaa
mov
inc
mov
in
repz
dec
jb
das
cmp
cmp
aad
mov
lret
xchg
xor
rorl
cmp
outsb
push
mov
daa
add
fisubrs
je
xchg
jmp
push
push
clc
out
test
lcall
mov
xchg
or
aam
daa
sub
or
xor
xchg
pop
inc
pop
scas
movsl
push
adc
test
jns
inc
inc
and
xor
cld
mov
popf
nop
push
sbb
iret
andb
stos
xchg
and
xor
inc
or
roll
dec
popf
mov
push
mov
jno
jl
mov
mov
imul
clc
jbe
arpl
cmp
or
xor
cwtl
fstps
test
sbb
or
mov
out
scas
rorl
sahf
and
sarl
std
push
out
cmp
notb
shufps
js
pop
clc
push
stos
mov
mov
push
ficoms
add
lock
icebp
xorl
sarb
mov
lret
mov
rclb
jmp
cwtl
insb
dec
xchg
mov
or
movb
int3
inc
cli
repz
adc
sbb
jl
loop
mov
popl
fsubrp
bound
ret
xorb
mov
je
stos
pop
test
sub
xor
mov
sub
or
xchg
push
push
mov
xchg
lea
add
nopl
cmp
sbbl
jecxz
mov
cmp
sub
out
jns
sbbb
das
xor
mov
sub
mov
daa
inc
test
std
pop
cli
sub
addr16
add
leave
mov
lahf
pusha
sar
push
repz
adc
jnp
notb
xchg
outsb
dec
lock
pop
adc
mov
dec
cmp
imul
mov
inc
ret
dec
pop
push
ud1
sti
inc
cwtl
js
pop
cmp
ss
call
imul
sub
in
movsb
leave
sub
loope
jb
daa
xchg
pop
adc
jae
dec
mov
pop
ds
cld
inc
jge
ret
imul
fs
xor
xor
xor
xchg
mov
cltd
xor
push
jmp
movsb
push
enter
aas
scas
fdivs
pop
inc
addr16
push
mov
shrl
sub
and
mov
push
hlt
sub
ret
cltd
cmove
loope
dec
jae
std
mov
jns
jo
mov
imul
jb
jg
jmp
js
sub
fldz
into
sbb
sti
push
or
daa
and
ja
add
jo
mov
ss
and
or
dec
call
scas
or
push
das
mov
mov
adc
icebp
inc
daa
and
inc
repnz
jb
fldcw
jecxz
inc
mov
shlb
fs
lcall
push
iret
sub
icebp
leave
add
psraw
jmp
push
lahf
loope
xchg
icebp
adcl
xchg
dec
push
sbb
mov
inc
inc
inc
movsl
aad
xchg
cmpsb
jb
mov
mov
adc
inc
lods
adc
cltd
xchg
fdivrl
push
or
pusha
jle
inc
xor
aad
jnp
jmp
mov
ljmp
inc
cmpsb
ret
or
mov
and
xchg
add
insb
sarb
insb
mov
mov
test
mov
lods
aaa
je
mov
xchg
xor
cmp
adc
popf
movsb
pusha
stos
ja
jge
es
adc
inc
popa
cmp
xlat
inc
sub
cmpl
cmpsb
inc
outsl
xchg
mulb
mov
lea
jae
aaa
or
mov
add
xor
in
pop
mov
cmp
iret
test
sbb
das
nop
fldt
lods
cmp
jb
pop
adcb
fwait
int3
lahf
dec
out
mov
ss
xlat
out
push
cmc
push
flds
mov
mov
adc
cmp
ljmp
sbb
bound
push
lods
dec
fldcw
addl
add
rcrb
test
or
sbb
xchg
mov
add
rcrl
daa
adc
pop
xchg
cltd
das
movsb
sub
mov
out
andl
or
std
mov
xchg
ret
pusha
jl
fstpt
out
movsl
mov
pop
and
jbe
sbb
loopne
mov
lock
adc
sbb
jne
mov
cltd
sub
out
lret
jno
mov
mov
add
sub
jns
nop
fwait
push
ljmp
cmp
imul
mov
mull
inc
testl
jne
xchg
jmp
xchg
mov
rcrl
dec
dec
push
test
adc
dec
mov
or
fsubp
jne
xchg
push
call
sbb
fcmovne
jo
orl
push
mov
xchg
push
push
jno
inc
cld
jg
push
push
jl
xchg
stos
pop
mov
xchg
je
sub
jne
dec
push
inc
cmpsb
mov
dec
dec
mov
jne
mov
push
cs
pop
sub
jge
xchg
xchg
in
mov
popf
arpl
inc
push
into
pusha
sub
test
inc
mov
or
setnp
loope
cwtl
or
mov
bound
cmpl
xchg
pushl
mov
int3
xchg
xchg
ds
lods
shl
lret
mov
push
iret
aam
dec
cltd
rcrl
cmp
xchg
and
scas
out
scas
shrb
ret
loope
in
sbb
inc
mov
mov
rclb
jg
pop
mov
call
mov
and
jnp
in
cs
sub
push
shl
push
fbstp
out
scas
daa
add
jbe
cmp
inc
and
jl
push
scas
sub
mov
xor
jbe
jg
pop
add
adc
popl
mov
jne
xor
inc
into
jl
repnz
addr16
dec
xchg
aam
xor
dec
pop
sti
fisttpl
sar
sub
popa
sbb
fsubr
fdivs
xchg
cli
inc
mov
pop
into
jg
ljmp
adc
test
dec
push
daa
mov
les
inc
sbb
or
push
adc
shr
pop
push
movsb
popf
vmovmskps
loopne
cmpsl
mov
jne
shll
sub
ds
or
cmpsb
mov
or
inc
xor
adc
loope
subl
cmpsb
or
stos
cltd
pop
mov
int
popf
pop
mov
loope
inc
test
mov
inc
xchg
sub
test
xchg
fwait
jno
pop
jo
in
jnp
dec
mov
into
sbb
repnz
sbbl
das
add
sbb
lcall
adc
dec
mov
lret
push
lea
mov
adc
sbb
in
movsl
ret
loope
movsb
roll
mov
adc
mov
pop
or
add
int
jbe
fwait
mov
cmpb
fidivrs
orb
in
mov
mov
fidivs
lea
push
aas
add
push
xchg
mov
lahf
imul
sti
rorl
mov
push
xchg
add
scas
xchg
mov
sbb
in
test
leave
jbe
xlat
sete
mov
mov
faddp
or
and
enter
cli
ret
add
cmpsl
xchg
popf
and
aas
fmulp
jns
push
dec
cs
and
inc
xor
add
push
test
fimull
add
jb
lahf
scas
loope
lea
fadds
sti
in
test
cmp
shl
cmp
enter
insb
cmpsl
clc
in
ja
or
xchg
negl
jg
sub
jne
mov
repnz
xor
jb
dec
cmp
pop
dec
push
andl
xlat
dec
das
loop
xor
shrl
or
ljmp
rolb
stos
mov
mov
fsubrs
pop
dec
mov
lock
js
mov
and
xor
jns
shll
cltd
test
stos
bound
jmp
mov
rorl
mov
out
divb
sarb
scas
adc
mov
lcall
sub
dec
call
or
ds
dec
mov
bound
mov
aad
pop
ds
sbb
inc
or
push
setg
mov
mov
or
sbb
jae
add
nop
notb
fmul
inc
pop
mov
jecxz
inc
pop
rol
ret
subl
pop
and
jecxz
dec
pop
aam
data16
push
sub
out
out
repz
add
and
xchg
mov
mov
sbb
adcl
dec
mov
dec
rolb
adc
push
test
roll
repz
add
leave
jb
push
lret
xchg
test
cli
lock
outsl
cmpsb
repz
xor
in
or
cwtl
insb
outsl
xor
idivl
xchg
push
jno
daa
ljmp
loop
jne
stc
movsb
inc
pop
sub
mov
ljmp
pop
sti
es
lods
popf
mov
or
jge
ljmp
or
js
mov
popa
mov
jle
inc
test
mov
popf
mov
and
xor
jnp
shr
test
les
int3
lds
jo
push
add
sub
pop
cwtl
call
cmpsl
push
daa
and
xorl
fcomip
or
pop
je
scas
mov
adc
or
rorl
push
lods
aam
add
xor
sub
xor
out
xor
cmp
cmp
movb
stos
test
cmp
mov
inc
cmp
sbb
jb
adc
push
or
fcmove
ja
adc
and
mov
fisttps
or
cmp
or
push
fldcw
mov
push
fisubl
and
cwtl
mov
jno
jbe
add
imul
jnp
and
mov
mov
std
les
insb
lret
inc
jb
js
lret
or
or
stos
shll
mov
int3
test
outsl
fldt
mov
cmc
push
stc
pop
or
cld
lret
mov
cmp
inc
sahf
in
dec
sbb
push
enter
push
imul
sbb
cmpsb
inc
rclb
or
sbb
fistpll
aas
in
and
inc
std
sbb
cli
std
popa
testb
xorb
add
in
dec
xchg
jbe
leave
rcll
lods
jns
mov
xchg
mov
pop
les
and
cmp
pop
bound
andb
push
jge
jecxz
fstpt
inc
push
mov
jne
or
out
inc
pop
ss
dec
xchg
xchg
mov
cs
sbb
mov
lds
dec
fcomps
inc
leave
out
popf
iret
lods
popa
pop
xlat
cmpsb
and
mov
mov
sbb
stos
xchg
loopne
rol
out
jne
pushf
lods
mov
jo
fists
cltd
jg
call
not
pop
roll
in
cltd
into
xchg
lret
out
fwait
cmc
stos
sbb
clc
xor
dec
rcr
push
les
xorl
xchg
inc
add
pop
icebp
movsl
movsl
enter
pop
outsb
adc
loop
ja
adc
test
dec
addr16
push
out
jae
mov
cmpl
bound
fdivl
lods
ret
xor
cmp
cmp
pop
and
lret
dec
iret
mov
jne
xor
dec
cmpsl
daa
mov
add
subb
pop
mov
push
into
sub
arpl
outsl
jmp
sbb
lret
call
lods
scas
push
mov
inc
repz
sub
jge
inc
or
sub
fdivs
arpl
fsub
pushf
lea
les
push
clc
dec
pop
pop
cs
dec
xchg
pop
imull
jne
mov
mov
pop
mov
ja
fwait
mov
rorb
inc
clc
jno
ja
push
imul
das
xor
insb
mov
out
mov
jb
add
adcl
mov
pop
lods
xchg
jge
imul
and
fcomip
pop
je
mov
inc
jge
xchg
mov
js
push
pop
addr16
jmp
adc
aas
and
adc
test
out
mov
xor
stos
subb
or
fimull
jp
mov
sub
or
decb
ljmp
jge
xor
dec
mov
mov
push
leave
rcr
gs
xchg
sub
in
scas
inc
aad
pop
xor
int
sbb
and
dec
jbe
add
ss
xchg
aam
jle
test
lock
or
and
fldcw
jnp
iret
iret
punpcklbw
cld
xchg
mov
lret
out
push
scas
sbb
ret
push
xor
in
mov
scas
cmp
mov
inc
push
cmp
mov
xlat
lods
test
jnp
daa
and
lods
mov
int3
mov
sub
jmp
sarb
out
in
inc
lods
sti
aas
movsb
and
mov
bound
push
sub
fs
nop
dec
stos
mulb
cld
dec
mov
cmpsb
rcrl
into
mov
movsl
mov
dec
out
jle
and
dec
bound
mov
lock
push
or
jmp
cmp
xchg
pop
aaa
mov
mov
add
add
gs
xor
ss
mov
sbb
loope
sbb
jmp
shll
lretw
loope
mull
pushf
cmp
mov
hlt
jge
cwtl
mov
lcall
loope
adc
mov
push
and
repz
sub
push
jg
pop
add
sbbb
movsb
movsb
xchg
jp
negl
xor
rolb
addl
and
fs
mov
bound
outsl
lahf
push
adc
std
loopne
out
ror
call
add
test
mov
hlt
push
leave
rorl
in
in
push
out
mov
scas
xor
jecxz
je
xchg
cs
jnp
repz
pop
pop
cltd
pusha
jmp
jmp
hlt
mov
cmp
mov
test
jg
es
rorb
jge
pushf
push
or
xor
test
mov
movsb
push
insb
xchg
push
add
xor
mov
insl
sub
mov
xchg
mov
add
mov
ficoms
shlb
popf
sbb
test
xchg
push
lods
outsb
es
add
adc
jmp
inc
jmp
cmp
addb
xchg
sub
daa
or
pop
leave
pop
sarl
ljmp
cld
jmp
push
or
popa
xor
bound
xchg
in
hlt
iret
sbb
xchg
push
or
ss
adc
mov
cmp
xor
fiaddl
push
adc
mov
rolb
pop
sahf
sarb
and
mov
cmc
adc
cmpsb
mov
sbb
push
adc
cmc
out
sbb
mov
add
or
xor
aaa
and
inc
ret
ret
insb
fsubp
add
push
push
scas
in
sbb
lcall
divl
mov
test
push
stos
mov
ds
push
insb
mov
sub
xchg
mov
or
mov
test
mov
repz
and
push
mov
mov
test
and
mov
mov
jmp
mov
std
js
jns
xchg
test
pop
cs
xor
sub
mov
pop
cld
fidivs
out
shll
sub
pop
cmpsl
imul
in
fnsave
pop
sti
cmp
mov
mov
inc
pusha
add
xor
sahf
sbb
jp
loopne
or
xor
aam
push
jo
jae
cmpl
insl
add
push
push
sub
dec
mul
dec
mov
push
cmp
jl
fisttpl
xor
loop
dec
enter
sbbb
mov
outsb
push
push
push
push
clc
in
xor
loope
pop
sahf
and
pushf
add
stc
jp
xor
cmpsb
sbb
push
out
aaa
jmp
push
das
call
sub
adc
lret
dec
pop
stos
call
stc
mov
outsl
iret
ret
pop
and
lods
lock
lods
fs
out
lret
neg
jl
xchg
pop
fbstp
sub
jmp
mov
mov
mov
add
popa
inc
push
mov
cmp
mov
dec
fadds
inc
push
lret
outsl
xchg
orb
cmp
call
scas
mov
ds
stos
jle
sahf
pop
mov
jmp
pop
lret
ret
sahf
add
push
cmp
adc
cld
sbb
mov
lods
push
cmp
mov
jo
jno
fs
pop
in
enter
lods
pushf
insl
lea
jbe
addr16
xorb
xchg
push
stos
adc
outsl
ljmp
mov
pop
jl
cmp
jg
cmc
lahf
mov
xchg
enter
pusha
mov
lock
daa
mov
fnstcw
out
push
xchg
adc
mov
aaa
xlat
jp
enter
and
and
push
and
fcompl
fcmovnb
ja
sub
data16
into
and
xor
push
adc
sahf
adc
jbe
shlb
sbb
xor
inc
fisttps
pop
mov
sub
cmovo
mov
sbb
outsl
xchg
sbb
or
cwtl
inc
pop
loope
cmpsl
inc
pop
adc
cs
push
mov
movsb
leave
lea
stos
push
dec
mov
ss
mov
int
mov
dec
jmp
and
rolb
test
mov
cmp
aam
or
scas
scas
popa
add
cmp
shll
mov
mov
aam
add
aad
mov
push
pop
nop
addl
sub
addb
inc
stos
cmpsl
cmc
mov
add
sbb
xchg
fdivrp
out
ss
dec
fs
push
imul
popl
pop
add
ljmp
je
in
or
xorb
mov
adc
inc
out
cmp
adc
and
push
in
adc
mov
pop
sti
les
push
fwait
jnp
dec
rorb
push
push
mov
pusha
jnp
inc
scas
push
adc
mov
shll
ljmp
ds
sar
lds
jl
push
cmp
jns
es
inc
xor
xor
xchg
ljmp
xor
or
add
pop
cmp
out
ds
bound
xchg
sti
fisubrs
mov
jno
mov
pop
or
mov
je
int3
scas
cmp
out
inc
inc
scas
idiv
neg
or
inc
sub
fisttps
lods
mov
ss
into
divb
mov
outsb
push
je
pop
sbb
cli
adc
movsb
das
shrl
sti
cmp
xchg
xchg
lahf
inc
sarl
mov
push
adc
stos
inc
jae
fcomi
xchg
mov
adc
ret
xchg
xor
dec
mov
and
jne
mov
or
pop
dec
cmp
adc
lods
out
lods
lcall
das
es
fdivl
add
rorb
fistpll
push
dec
in
shl
popf
push
pop
dec
mov
jmp
fxch
add
call
mov
mov
push
outsb
ffree
std
sahf
aad
arpl
int3
add
sub
jne
and
mov
out
jp
inc
cmp
or
imul
fbstp
test
mov
cli
mov
lods
xchg
aad
loope
push
loopne
jnp
fidivs
xchg
aam
subb
loopne
inc
cmp
inc
or
pop
xchg
in
adc
out
push
rcll
fsts
mov
mov
test
and
popf
cmp
das
fmuls
iret
pushf
push
fcomp
sahf
mov
rorl
div
outsb
inc
push
xlat
dec
or
clc
test
inc
cmp
mov
subb
sti
add
outsb
enter
jb
dec
sub
sbb
jnp
or
sub
lea
hlt
dec
mov
push
pop
inc
scas
das
mov
push
ret
xor
inc
gs
mov
pusha
mov
lret
push
push
push
call
sub
pop
in
mov
jno
fchs
sub
xlat
mov
scas
std
outsl
mov
popf
sub
adc
lret
test
fnstsw
addr16
cmp
xchg
inc
dec
scas
jbe
je
adc
test
popf
cltd
pop
mov
add
insb
jbe
push
jb
jb
cld
push
cmp
rorb
ss
pop
jnp
bound
ljmp
cmp
dec
mov
std
pusha
mov
adc
int3
dec
mov
sbb
fwait
mov
sub
xor
xchg
adc
mov
add
push
imul
adc
ficoml
cmpsl
push
sub
mov
push
stc
xor
mov
cmp
rcrl
lret
addr16
iret
push
cs
leave
popf
mov
or
pop
repz
adc
mov
add
in
out
movsb
imul
repnz
xchg
xchg
or
push
fsts
sub
push
add
or
inc
rolb
jle
sub
adc
mov
ror
pop
aad
pushf
adc
mov
fnstenv
movsb
and
outsl
pop
jne
and
fnstsw
pop
lret
das
xlat
mov
enter
or
cmp
pop
inc
sbb
inc
cmpsl
loop
add
sbb
xor
scas
lss
pop
imul
and
das
lret
cmpsl
mov
mov
repz
test
jns
mov
push
ret
sbb
data16
mov
mov
test
jl
aad
pusha
mov
fisttps
push
cmp
je
xlat
mov
jg
xor
daa
shr
loope
and
inc
push
in
imul
xchg
push
daa
jmp
push
dec
shll
in
jnp
xchg
push
adcb
jp
push
push
pusha
adc
sub
stos
mov
bound
add
outsl
adc
stos
outsb
inc
adc
sbb
daa
mov
jl
mov
push
ds
clc
fadds
outsb
jle
ja
shll
push
nop
xor
cli
cmp
dec
add
cli
leave
pushf
dec
mov
cmp
cmp
mov
sbb
dec
cs
pop
je
sub
je
lahf
jmp
lcall
idiv
add
insl
push
pop
test
pop
add
lds
lcall
cmp
pop
ljmp
cwtl
rclw
pop
in
leave
frstor
mov
cli
fstpl
xchg
jnp
jo
push
popa
jecxz
addl
or
or
jb
lods
add
xchg
adc
and
xchg
mov
jae
in
imul
inc
scas
in
mov
inc
mov
dec
jge
cmp
or
xlat
nop
mov
jns
pcmpgtb
mov
pusha
in
out
rcrb
imul
push
jne
loop
rclb
jo
mov
mov
popf
adc
adc
adc
divl
push
mov
sbb
push
mov
repz
cmp
fimuls
cmp
or
add
jmp
int3
scas
ljmp
adc
loop
cmpsl
int
std
mov
push
test
mov
inc
insb
mov
jl
dec
bound
pop
xchg
mov
xchg
adc
pop
clc
out
mov
aam
lds
jmp
dec
rcrb
repnz
mov
orl
fwait
and
sub
add
jp
mov
cmp
je
clc
int3
jmp
mov
xchg
lret
test
lret
shlb
loope
push
mov
add
jg
les
xchg
repnz
cwtl
cmc
adc
scas
mov
js
sbb
pusha
and
scas
test
je
in
fldenv
or
jg
or
mov
int
cli
daa
lcall
sub
or
fnstsw
in
xor
or
adcl
push
mov
jecxz
cmp
scas
jl
adc
xor
test
fldl
jp
cld
insl
iret
mov
adc
insb
pop
add
pop
mov
sub
test
inc
out
sbb
sub
mov
in
mov
js
pop
jg
btr
mov
or
pushf
jg
push
scas
sub
dec
mov
push
cmp
clc
jmp
out
les
sub
loopne
or
ret
imul
fsub
pop
sbbl
push
pop
jo
sbb
push
stos
pushf
ds
mov
mov
nop
addl
scas
sub
mov
pop
cmp
pusha
push
jmp
xlat
add
jnp
pop
repnz
mov
or
sub
out
inc
call
xor
sti
push
pusha
popf
sbb
mov
bound
adc
adc
adc
mov
push
xchg
pop
xchg
test
mov
xchg
dec
sbb
add
mov
int3
mov
sbb
push
jnp
jecxz
loope
pop
cmc
ficoms
loope
lahf
sub
sbb
pop
mov
outsb
lock
mov
push
dec
and
cmp
insb
test
xor
sub
cltd
loop
arpl
scas
pop
inc
addb
lods
pop
inc
adc
in
in
les
inc
inc
popa
pushf
jmp
mov
jmp
inc
add
jmp
bound
adc
add
std
pop
loop
push
shr
insb
das
pop
inc
and
arpl
inc
aas
sub
int
pop
push
clc
movsb
push
mov
repz
sbb
andb
into
add
js
daa
mov
jg
mov
cmc
mov
push
push
hlt
and
movsb
sbb
test
das
jp
cmc
push
push
adc
or
push
test
add
in
fs
popf
into
jmp
mov
jnp
idivl
adc
push
test
imul
mov
ss
push
adc
inc
xchg
into
daa
das
push
shrl
call
roll
pop
mov
mov
dec
pop
lret
imul
sbb
jo
out
and
push
loop
mov
and
xchg
xchg
pop
sub
call
test
inc
sarb
inc
add
leave
test
out
lret
adc
cmp
adc
mov
ljmp
lds
jmp
pop
jecxz
sbb
in
repz
cmpsb
xorl
imul
hlt
sahf
stos
xor
fldl
cmpsl
fucom
nop
add
insl
hlt
pop
jl
pop
xchg
lods
add
add
mov
mov
rcrl
push
mov
iret
xchg
sti
cwtl
aam
cvtpi2ps
inc
bound
xchg
mov
testb
icebp
push
adc
aad
jge
std
cli
dec
repz
mov
adc
shrb
adc
les
stos
cmp
lcall
push
pop
sbb
iret
add
sbb
mov
add
mov
dec
pop
mov
adc
cmp
daa
mov
or
pop
lret
lds
jecxz
jbe
adc
leave
scas
sub
pushf
inc
addl
ja
cmp
test
or
or
mov
jmp
cli
xchg
adc
or
inc
in
xor
je
icebp
push
mov
scas
pop
push
push
das
sub
sub
pop
xor
loopne
mov
mov
and
popf
ret
mov
inc
cs
scas
pop
addr16
loope
sub
push
jne
int
rorl
inc
jmp
xlat
push
into
in
lods
mov
push
out
dec
iret
push
cmp
dec
adcl
in
xchg
fsubrp
push
mov
pop
cmp
mov
fnstenv
es
test
jo
xchg
sub
mov
jb
scas
sub
pop
dec
ret
pop
gs
leave
dec
jmp
aad
cmpsl
mov
inc
inc
lods
mov
jb
inc
gs
addb
xor
or
test
jmp
cwtl
cli
or
insb
stc
loopne
int
cltd
nop
lea
jmp
mov
sub
stc
and
es
pop
xchg
lcall
adc
enter
aad
sarl
cltd
enter
cmc
jo
sub
push
testl
xor
or
jmp
lods
add
ret
inc
leave
inc
xchg
xchg
jbe
jl
int3
testl
xchg
jb
cmp
scas
aam
mov
mov
sbb
fsubs
jle
pusha
dec
imul
and
scas
pop
jmp
pop
stos
push
popa
mov
aaa
mov
rcrb
icebp
mov
adc
push
sbb
or
sti
inc
add
adc
jle
ficompl
jae
push
sub
idivb
xor
test
or
jp
xor
mov
dec
pop
std
push
test
inc
add
push
fwait
insb
fmuls
pop
add
shr
inc
pop
push
shr
loop
fsubl
fdivp
mov
push
pop
in
inc
mov
sarb
mov
push
cmpsb
mov
jnp
mov
mov
xor
je
imul
pop
adc
data16
insl
cmp
stc
adc
lds
or
lcall
hlt
sarl
xchg
xor
call
das
and
mov
ror
inc
lods
xor
mov
push
pop
and
or
xor
mov
outsl
movsl
in
jns
xor
push
push
jo
cmpsl
scas
movsb
test
or
imul
roll
or
mov
sti
pop
movsl
test
movsb
imul
js
test
stos
aaa
data16
push
into
pusha
pop
adc
cmpsl
jl
cwtl
loopne
sbb
outsl
xchg
leave
shrb
jmp
ret
out
mov
lods
inc
icebp
pusha
cld
xchg
cli
and
add
sbb
jp
ret
fisubl
xchg
testb
push
sbb
cmp
inc
out
jnp
pop
jle
repnz
cmp
sub
out
and
cltd
pop
inc
jae,pt
sub
cmp
mov
add
inc
and
fld
repnz
sbb
cmp
pop
pop
out
je
aaa
jmp
push
pop
in
inc
inc
or
sbb
sbb
xor
fs
jbe
xor
mov
cld
mov
cmp
lahf
mov
adc
add
fildll
into
and
imull
or
xchg
sahf
push
mov
dec
movsl
cmp
arpl
mov
mov
addr16
pop
dec
cmp
test
cli
push
mov
xor
cmp
adc
jne
jmp
addr16
scas
int3
call
cmp
movsb
push
pushf
popa
inc
or
aad
xor
add
mov
fsubrl
dec
sbb
andb
push
in
incl
xlat
popa
out
outsb
cmpsb
adc
adc
jge
jne
push
sarl
je
mov
cmpsb
roll
outsb
mov
xchg
mov
mov
int3
add
sbb
xchg
xchg
test
shll
pop
push
lods
cmpsb
sqrtps
nop
dec
or
adc
lcall
xlat
add
pop
sbbl
push
in
cwtl
stos
fwait
add
iret
push
cwtl
daa
inc
in
lods
mov
mov
and
imul
aas
test
call
je
push
pop
jno
cltd
testl
shll
xchg
leave
mov
arpl
jno
imul
imul
fisubl
popf
jne
cmp
lds
dec
sahf
je
shl
cmc
xchg
shl
imull
rclb
sbb
and
ret
xor
mov
lahf
pop
push
cmpsb
es
aad
in
mov
notb
cwtl
push
xor
test
mov
jbe
cmc
cmpsl
cmp
jle
test
bound
mov
jmp
into
mov
ds
test
and
push
mov
dec
faddl
add
jo
out
or
rolb
mov
loopne
mov
lahf
sti
imul
xchg
jecxz
pop
jne,pn
arpl
adc
in
arpl
xor
daa
push
xchg
inc
scas
jmp
out
push
decb
mov
mov
sbb
xchg
mov
xchg
xor
dec
pop
cmp
cmp
xor
dec
ljmp
xchg
xor
cs
dec
push
pop
movsl
cmpsl
push
lock
je
fwait
sbbb
mov
jle
pop
adc
pop
adc
add
mov
test
rcr
js
mov
mov
cmp
and
dec
inc
test
or
sahf
lods
jecxz
clc
push
rcll
repnz
cli
jbe
imul
fidivrs
inc
push
sarb
jb
jecxz
in
push
out
cwtl
fsubrs
dec
dec
mov
ret
or
add
mov
or
lret
fs
and
add
scas
bound
int
push
cmp
adc
pushf
je
dec
bound
stos
out
or
stos
mov
mov
lods
rcl
loopne
xchg
dec
sbb
jle
cli
and
js
cmpsl
adc
sbb
sub
push
xchg
add
lret
cmp
aam
mov
jae
sarl
sbb
push
push
cmp
jae
clc
mov
push
inc
loop
dec
and
pop
jbe
jl
push
push
inc
inc
scas
js
lret
lahf
mov
sahf
cmovo
fsubrl
ljmp
or
mov
bound
mov
jmp
jecxz
mov
jecxz
je
shr
cs
inc
into
in
int
sub
fistpll
jmp
jg
into
sub
sbb
lods
xchg
repz
cmc
inc
test
mov
xchg
ret
dec
cld
sbb
xchg
add
sbb
sti
fxch
mov
rcll
mov
fildll
fcmovne
push
outsl
mov
cwtl
push
push
js
lock
push
jnp
clc
lret
or
and
jo
inc
scas
cmp
push
or
add
jno
add
mov
repz
pop
dec
fadds
inc
push
add
or
or
pop
imul
mov
test
mov
scas
hlt
dec
and
mov
cld
push
fs
daa
jne
push
xchg
sbb
je
push
pop
xchg
jne
int
stos
lret
nop
cld
or
in
fwait
mov
xchg
outsb
xchg
xchg
cmc
jle
test
inc
sbb
jle
inc
add
jmp
sahf
sbb
adcl
imul
add
pop
push
inc
mov
loope
in
pop
arpl
push
push
gs
sti
bound
jno
arpl
repnz
ss
mov
cli
xchg
jle
and
cltd
jns
ljmp
push
shl
xor
mov
and
mov
test
add
xor
rclb
ss
insb
add
das
jno
das
jp
daa
add
mov
mov
and
pushf
movsl
add
pop
add
xor
and
xor
sub
mov
in
movq
push
jmp
mov
and
ret
xor
int3
xor
add
xchg
dec
test
push
std
pop
sub
xchg
inc
into
mov
aam
dec
cmc
jne
out
adc
dec
jecxz
pop
fmull
icebp
sub
int
or
clc
ja
mov
ja
jg
sbb
mov
lcall
leave
jg
stos
out
mov
loop
shlb
pop
mov
cmp
in
fldt
paddusw
adc
movl
cmp
add
cld
andnps
icebp
jge
pop
sahf
mov
bound
lea
movsb
add
fsubs
pop
cli
les
repnz
icebp
sub
pop
clc
inc
sub
js
adc
jge
pop
divl
inc
lea
rolb
cmp
pop
insl
insb
add
pop
mov
xchg
in
or
and
sub
inc
ret
adcb
xor
xchg
lds
and
mov
pop
mov
push
fldl
jg
adc
es
mov
push
inc
or
rcll
jle
and
aas
cmp
cld
pop
push
mov
and
inc
or
stc
nop
pop
and
push
jb
repz
xlat
push
push
jnp
out
inc
outsb
mov
mov
jbe
xchg
jo
testb
aaa
adc
test
inc
andb
sub
jp
or
in
mov
mov
jo
and
scas
jecxz
pop
iret
dec
adc
dec
jge
bound
mov
test
divl
loopne
fsubl
or
inc
roll
outsb
cmpsl
push
mov
int3
xor
mov
mov
ret
loope
mov
and
cmp
cmp
adc
jle
lcall
rcl
push
mov
or
rolb
lret
outsb
repnz
cmpsb
mov
cmp
sub
rcrb
sbb
sbb
xor
aad
ret
add
fdivs
adc
or
movaps
lock
sbb
push
out
popf
push
jne
mov
fimull
mov
hlt
jp
aaa
pusha
cmp
ret
xchg
mov
or
mov
push
jnp
je
mov
mov
pop
jp
cmp
test
cmc
adc
or
popf
jge
mov
sub
sti
jmp
adc
xchg
lahf
jbe
repz
andl
adc
jge
rcrb
add
popf
fwait
inc
sbb
mov
sub
sub
xor
push
sbbl
jge
nop
xor
test
cmp
in
sub
lret
push
inc
negl
aaa
shr
jne
out
stos
jbe
push
dec
shlb
pusha
jmp
jge
xor
push
ficoml
fldcw
or
push
xchg
out
adc
ss
jae
dec
ror
rcll
mov
fsub
sub
mov
loop,pt
cmp
test
cli
shl
cmpsl
jl
cmp
add
cmpsb
pop
test
or
push
notb
pop
pop
adc
dec
inc
or
push
xor
aam
popf
jmp
pop
dec
das
in
ljmp
imul
inc
mov
mov
sbb
push
mov
adc
and
rolb
xchg
sub
ret
test
xor
mov
pop
movsb
dec
int
dec
popl
mov
sub
in
jecxz
scas
mov
cmp
dec
push
es
adc
int
cmpsl
adc
insl
pop
jns
mov
leave
add
mov
orl
jp
cmpsl
mov
push
cmp
mov
mov
cltd
mov
jns
fs
stos
pushf
xor
jns
popa
mov
andb
ds
imul
cmpsb
std
jle
add
in
jbe
fcomps
inc
prefetch
fnstcw
inc
mov
push
ret
je,pt
pushf
adc
incl
or
inc
into
xor
push
mov
sbb
pop
aad
stos
inc
ds
dec
adc
and
sbb
sbb
insl
push
into
mov
jp
shl
sbb
mov
xor
js
dec
inc
pop
negb
les
popf
in
out
cld
xacquire
push
out
and
jecxz
cmpb
incb
adc
call
inc
aaa
lret
call
jb
sbb
lea
mov
xchg
icebp
je
pop
adc
xchg
inc
mov
fwait
scas
push
jmp
jmp
mov
shlb
stos
outsl
adc
stc
sbb
mov
sbb
pop
nop
loopne
stos
icebp
sti
adcb
je
mov
fisttps
cmp
xor
arpl
rolb
je
and
aas
imul
cmp
mov
mov
sbb
sbb
sahf
sbb
repnz
adc
in
push
push
cmp
jmp
in
stc
push
and
dec
fisubl
sbb
mov
mov
sahf
scas
popf
ljmp
cs
cwtl
out
xor
xchg
xor
adc
inc
jne
add
mov
jns
enter
or
gs
sub
mov
jb
ret
mov
adc
icebp
add
xlat
fs
sbb
jmp
mov
es
push
xor
ret
scas
ret
ss
imul
repz
or
out
jne
dec
test
sti
cmpsl
in
sbb
leave
mov
js
pushf
scas
jl
jnp
xchg
hlt
jecxz
enter
shrb
mov
nop
mov
or
sub
push
rcll
ret
jmp
das
pop
test
fldt
sbb
inc
iret
mulb
in
add
mov
dec
pusha
imul
je
inc
test
jnp
arpl
inc
mov
lcall
nop
sbb
push
aaa
loope
jp
fldt
test
test
mov
xchg
scas
lahf
cltd
aad
xor
push
in
ds
hlt
outsb
rol
or
xchg
mov
cmpsl
inc
push
out
dec
xor
cmp
push
repz
dec
fisttps
stc
movsl
data16
lahf
gs
xchg
test
call
xchg
adc
fmull
movsl
xchg
push
adc
sarb
jne
push
cli
mov
jle
lea
mov
daa
repnz
sbb
les
mov
pop
jg
icebp
sub
pop
loopne
popf
in
push
cli
dec
sub
pop
enter
pop
adc
cwtl
cmp
addb
int3
jmp
movsl
pop
or
mov
sbb
cli
push
and
out
addl
mov
subb
inc
add
push
clc
dec
cmp
mov
pop
into
dec
jo
popa
sarb
andb
lock
ljmp
mov
and
push
inc
ljmp
xchg
addr16
add
mov
insb
or
aas
outsb
xchg
push
and
dec
popa
mov
or
int3
jb
rcrl
loop
test
xor
lods
jmp
jl
rcrl
enter
dec
ss
add
test
sarb
adc
and
repz
int3
es
mov
xlat
out
xor
shlb
arpl
in
pop
rcr
xor
cmp
jmp
xor
jecxz
ljmp
mov
cmp
lods
fsubl
pop
test
jne
leave
clc
pop
aas
cmp
push
xchg
fwait
mov
xchg
pop
mov
imul
mov
mov
cltd
add
test
cmc
jl
or
push
xor
mov
sub
mov
mov
out
repnz
xor
out
jo
test
pop
popf
mov
jmp
push
push
cmp
pop
pop
push
pusha
scas
icebp
mov
das
insb
fstpl
push
inc
mov
xor
mov
mov
cmp
rorl
xchg
cmp
jae
decl
lock
mov
daa
pop
mov
outsb
popf
orl
iret
pop
movsb
fldcw
mov
adc
jecxz
mov
and
out
ds
dec
pop
mov
pop
loop
cmpsl
loopne
adc
xorb
inc
daa
jp
inc
cs
fwait
inc
sub
jmp
push
sub
jle
outsl
pop
lret
mov
xchg
sub
xor
jb
pop
data16
xchg
loop
gs
and
icebp
ja
pop
imul
data16
mov
sub
out
filds
insl
dec
jg
daa
fsubrl
inc
mov
pop
mov
movsl
in
jnp
or
add
or
sbb
call
add
push
sahf
adc
rol
test
aaa
cmpsb
and
xchg
repz
sbb
jno
outsb
in
push
adc
rcr
inc
jns
xchg
xlat
lods
fidivs
addl
leave
push
filds
mov
jb
inc
call
das
xchg
push
test
shrb
flds
cmp
add
hlt
cltd
lods
ja
adc
mov
icebp
mov
xchg
cld
in
sbb
push
xor
out
iret
dec
in
mov
imul
outsb
ss
fs
or
add
movsl
imull
jne
stos
outsb
or
rcll
lret
push
xlat
out
loop
pushf
pop
fcoms
les
iret
inc
lahf
into
sub
mov
roll
and
pop
sbb
pop
cli
shll
xchg
push
cmpl
fildll
sti
mov
add
loopne
jb
enter
imull
and
mov
or
mov
add
test
pop
outsb
aaa
cmc
into
lds
outsl
dec
jnp
sub
addb
sbb
push
nop
mov
jmp
mull
test
sti
xor
stc
adc
dec
mov
cmpsl
xor
and
test
movsl
pop
leave
push
popf
aam
jle
icebp
andb
cmpsl
xchg
push
in
xor
dec
fstps
cmp
movb
xchg
or
pusha
and
xchg
jecxz
test
cli
cs
cmp
nop
mov
adc
xchg
mov
pop
inc
or
dec
adc
inc
aas
inc
xchg
mov
imul
fisttpll
adcb
fildll
sbb
fsub
cmpsb
shr
les
pop
cmp
sbb
push
or
cmpb
lret
in
es
add
adc
shl
les
xchg
cmp
add
sub
sahf
cmc
mov
hlt
push
mov
loop
gs
pop
lods
push
mov
pop
call
sti
lahf
adc
mov
push
out
daa
imul
fwait
enter
movsl
xchg
cmpsb
faddl
cmpsb
mov
movsl
xor
nop
enter
sub
lcall
scas
in
cmp
inc
pop
mov
fisubl
dec
pop
pop
xlat
mov
xlat
xchg
xor
sub
in
inc
mov
ret
cmc
xor
std
cmp
mov
jbe
xor
dec
imulb
decb
inc
inc
add
repz
xchg
mov
in
mov
pop
adc
dec
cmp
mov
jno
dec
pop
sub
jae
incb
mov
cmpsb
out
scas
test
mov
es
mov
pop
pop
inc
cmp
xchg
inc
jae
popa
gs
push
sub
pusha
call
stos
lds
in
outsb
scas
lcall
sub
mov
pop
xor
std
mov
pushf
clc
fnstsw
mov
push
inc
add
add
adc
and
sbb
add
lcall
mov
cmpsl
or
xor
dec
scas
outsb
jbe
stos
stos
push
lcall
and
les
add
test
movsb
inc
sahf
push
xor
pop
fnstenv
test
ja
daa
test
and
xchg
popf
movsl
ss
cmp
push
rolb
clc
and
inc
std
xchg
fdivs
iret
cltd
mov
test
stos
movsb
mov
mov
nop
test
push
push
cmp
xor
adc
jbe
mov
scas
imul
mov
sub
xor
jle
pop
sub
enter
fmul
adc
sbb
dec
sub
fidivrs
jl
clc
js
lret
fstpt
fs
in
xchg
cld
mov
mov
es
loop
call
mov
sbb
shlb
add
ret
cmp
cs
fmul
jo
lods
jmp
in
into
sbb
popf
dec
or
mov
jae
pushf
mov
outsl
or
movsl
adc
sub
enter
adc
push
in
lret
out
adc
jg
lods
add
imul
lock
xchg
push
cmp
insl
lea
mov
popf
and
scas
call
imul
push
sub
out
mov
pop
mov
dec
int3
jecxz
sbb
inc
mov
jnp
mov
xchg
shlb
jg
xchg
aad
testl
cmpsl
mov
daa
scas
xchg
xor
incl
xchg
push
ret
lds
add
loop
xchg
fiadds
mov
stc
pop
adc
mov
out
dec
xchg
repnz
in
cmpb
nop
jge
je
out
xchg
daa
sub
mov
in
lret
add
subb
dec
lret
mov
mov
fwait
dec
xchg
push
mov
ds
or
lea
jecxz
outsb
adc
sti
mov
jecxz
xchg
ds
xchg
stos
xchg
xchg
jecxz
and
xchg
mov
addr16
or
adc
lret
xchg
daa
test
sub
inc
xor
lcall
lods
push
hlt
rcrb
adc
xor
and
pop
in
add
lods
ret
dec
mov
push
outsb
jb
add
scas
push
test
dec
arpl
decl
push
in
push
sub
cmp
and
inc
mov
js
and
xchg
mov
pop
sbb
test
lcall
mov
icebp
test
addb
xchg
xchg
sub
push
or
out
cmp
pop
xchg
fbstp
rclb
sub
inc
scas
dec
xchg
pop
xlat
arpl
outsl
xchg
loope
popa
jg
push
out
xor
jns
call
push
insb
cs
pop
fistps
lods
cltd
sub
and
int3
std
mov
jb
pop
dec
nop
push
cwtl
push
ja
sub
loopne
xchg
pop
rcll
and
jns
mov
xchg
scas
ljmp
xlat
test
push
add
cld
mov
mov
mov
add
pmulhuw
in
lea
mov
stc
rolb
into
mov
lret
cmpsb
cmp
cmp
cltd
xchg
sti
xchg
cmpsl
xchg
aam
inc
shrb
xor
int
je
mov
jmp
in
mov
fstpl
mov
push
fnstenv
cmp
xchg
ds
cmp
dec
cli
fmuls
jno
cmc
imul
sar
mov
cmp
or
mov
inc
mov
jmp
push
cmp
sub
xchg
pop
fiadds
pop
sub
addb
add
sub
int3
nop
mov
jle
push
loope
adc
dec
lret
xchg
dec
sbb
xchg
into
mov
inc
xchg
sbb
xchg
cmpsl
jp
pop
and
inc
dec
cltd
inc
out
ss
mov
dec
and
inc
dec
call
movsl
in
dec
pop
pop
mov
daa
ljmp
mov
fwait
emms
or
add
lcall
sbb
daa
stos
call
mov
stos
stc
adc
mov
add
xor
lret
pop
mov
enter
testl
xchg
aaa
mov
mov
xadd
lahf
aas
shr
xchg
aad
adc
stos
push
jb
inc
leave
out
or
xchg
outsb
sub
rcrb
pop
cltd
mov
push
dec
cmp
pop
clc
bnd
xor
push
inc
bswap
imul
ret
cmp
sub
imulb
lcall
sub
fnsetpm(287
mov
divl
clc
mov
in
int
ror
xchg
and
jne
dec
xchg
dec
divb
push
std
mov
rcrl
or
ja
popf
fimull
arpl
cwtl
sbb
loopne
mov
dec
inc
fwait
test
popf
push
stc
mov
sbb
rcrb
iret
lods
mov
mov
dec
inc
aas
cmpsl
jae
loopne
pop
and
dec
pop
mov
jnp
call
inc
mov
jns
and
jo
mov
jae
les
hlt
loope
jge
repnz
pop
push
dec
dec
ss
cmp
adc
push
push
mov
push
sub
inc
jl
mov
push
mov
xchg
fcom
pop
xchg
sarl
movsl
jne
jo
mov
push
xor
inc
gs
push
jge
dec
inc
jne
divl
adc
mov
pop
hlt
sub
push
ljmp
popf
sbb
mov
push
mov
scas
jg
fs
push
push
add
stos
mov
add
mov
add
jnp
outsl
dec
dec
cmp
popa
test
add
xorl
rcll
insb
mov
rolb
loope
fnstsw
mov
xor
outsb
lahf
lahf
int3
adc
jno
and
es
cmp
lods
cmp
ljmp
dec
or
fsub
lds
cmp
pop
cmpsl
icebp
mov
mov
lahf
stc
popa
inc
mov
dec
push
divb
sub
mov
xchg
inc
int3
jmp
jnp
push
mov
in
sti
je
dec
adc
cltd
ret
pop
imul
loopne
push
fwait
jbe
mov
dec
dec
leave
sahf
popa
xor
outsl
cmpsl
enter
pop
pop
addr16
popf
ja
outsb
xchg
flds
inc
push
and
pop
pop
push
pop
jge
incb
pop
rcr
cli
mov
test
jmp
mov
sbb
int3
lahf
add
inc
dec
in
add
pusha
mov
fdivrl
scas
outsb
out
sysexit
or
inc
aad
inc
pop
sub
ja
shl
fadd
inc
dec
movsl
out
pop
push
in
out
cmp
inc
jge
and
insb
outsb
stos
into
push
dec
clc
or
inc
cmp
repz
shll
or
mov
xchg
mov
pop
mov
xor
lcall
or
add
hlt
jmp
sub
inc
cmpsl
sub
sub
mov
mov
jno
add
inc
mov
inc
and
cmpsb
xchg
push
sbb
pop
mov
fstps
fdivs
mov
orb
sub
jge
adc
xor
aaa
pop
movsb
cmp
aaa
inc
cmp
subl
sti
cmp
push
daa
lret
jae
aad
gs
jl
movsb
ljmp
mov
aad
sti
in
lret
sub
inc
aad
comiss
xor
or
mov
pop
dec
cld
cmp
mov
mov
stos
lcall
mov
jb
push
rcl
push
mov
xor
or
push
shr
out
mov
fwait
mov
aaa
push
das
lods
or
loope
and
pop
adc
mov
mov
mov
mov
xor
push
jo
stos
lock
fisubl
popa
add
fnstenv
dec
test
push
pop
mov
fdivrs
sub
pushf
inc
out
mov
lret
out
jbe
fstpl
mov
enter
testb
cmp
mov
mull
mov
out
mov
in
popa
outsl
rclb
ljmp
out
pop
test
in
mov
hlt
jle
nop
notl
mov
cmp
inc
add
test
in
test
ret
cmp
outsb
cmp
jge
add
and
dec
das
mov
and
sub
fsubl
out
fadd
mov
pop
inc
mov
mov
daa
pushf
data16
sub
aad
mov
pop
imul
ja
out
hlt
hlt
test
xchg
out
lock
sbb
lcall
add
les
loopne
ja
jle
dec
cmp
pcmpeqw
lahf
or
dec
cmc
xchg
ret
and
xor
jge
orl
cltd
xor
jns
ret
sub
test
fs
jecxz
rorl
push
scas
scas
fldcw
dec
cmpl
lcall
dec
iret
ficomps
jl
cmp
jo
rorb
hlt
jmp
imul
push
add
sbb
cmp
sarl
xor
outsl
inc
pop
mov
in
lcall
sub
andl
cmp
pop
int3
cwtl
int
push
cmp
sub
mov
xor
jo
dec
xchg
dec
and
cwtl
insl
pushw
mov
inc
jbe
out
pop
stc
mov
pop
popa
test
loopne
fstpt
mov
pop
test
or
dec
pop
dec
sub
orl
dec
push
add
lret
pop
mov
add
sbb
jg
pop
xchg
aas
jl
cwtl
mov
inc
out
sbbb
in
pop
jp
std
xchg
adc
and
loop
femms
jb
cmp
insb
leave
jge
cmpsl
add
jmp
mov
cs
inc
dec
cli
cmp
imull
fs
sbb
push
fsubl
loope
cwtl
lea
xor
mov
mov
dec
mov
push
jmp
mov
push
mov
jg
jae
out
mov
test
es
int
jmp
std
pushf
lret
addr16
fiadds
arpl
ret
add
imul
pop
add
pop
ret
imul
sbb
rorl
xor
pop
mov
cld
cmp
mov
sub
sbb
loopne
and
xchg
loopne
lods
pop
mov
lods
inc
hlt
push
mov
add
xor
xchg
clc
mov
dec
and
dec
mov
xlat
icebp
cmpsl
sahf
dec
insb
or
rol
cmpsb
sti
jnp
pop
fcoml
cmp
notb
or
cmp
add
popa
outsl
push
xor
inc
push
pop
ds
xchg
test
nop
ss
pop
push
jo
pop
xor
fisttps
lods
rorl
push
in
leave
cmp
add
push
sbb
lock
call
imul
or
jno
xchg
loopne
movsb
fiadds
mov
push
icebp
mov
cwtl
xlat
jge
out
stos
cli
jl
mov
pop
stos
xchg
mov
lds
lods
ss
mov
mov
int3
jae
adc
imul
xor
cmpsl
imul
clc
out
int3
push
xor
push
mov
sbb
push
lahf
andb
outsl
mov
and
add
and
push
sbb
cmpsb
rolb
cmpsl
std
in
and
push
push
and
dec
fptan
sahf
xor
xchg
mov
les
mov
fdivr
loopne
mov
pop
popf
jl
lea
mov
mov
jge
ljmp
xchg
cmp
mov
repz
mov
add
out
sbb
lret
mov
dec
leave
mov
sbb
roll
aaa
loop
xchg
les
push
jno
stos
cmp
mov
cmpb
mov
mov
sbb
xchg
xor
movsb
mov
jb
bound
jge
push
add
adc
pop
cmp
aaa
add
test
psrlw
popf
lahf
cmp
push
and
insb
enter
sbb
sbb
outsl
cmpsl
fisubrl
rol
cmpsb
mov
lret
das
mov
lea
iret
mov
dec
push
mov
loopnew
cli
push
test
outsb
mov
outsb
aad
sbb
mov
int
ret
out
pop
outsb
or
stos
push
jge
or
inc
adc
stos
push
sbb
jmp
out
inc
xchg
adc
aad
cltd
xchg
call
xchg
xchg
mov
jae
sbbl
insb
out
or
cmp
ret
sbb
icebp
or
jecxz
call
adc
push
jnp
xchg
int3
adcb
jp
ret
jge
or
nop
add
addl
mov
mov
cli
addl
jae
les
sub
push
sub
push
ret
stos
cmp
rcrb
rolb
icebp
pop
in
mov
icebp
je
aam
lock
mov
sub
push
add
sbb
inc
test
or
pop
scas
out
mov
pusha
mov
into
mov
fcoml
icebp
leave
sub
leave
jecxz
pop
shlb
stc
sahf
mov
pop
idivb
cmpl
jp
mov
enter
push
push
cmp
mov
sub
mov
mov
sahf
bound
stos
pop
xor
mov
mov
cmp
enter
mov
jbe
std
fildl
dec
call
fwait
and
enter
insl
adc
incl
add
mov
test
lods
pop
push
adc
cwtl
lahf
cmpsl
push
jmp
mov
mov
out
fwait
cmp
mov
aas
faddl
mov
or
jno
lods
cltd
dec
je
push
cli
insb
mov
push
test
sbb
pop
dec
cmp
or
lahf
fldcw
mov
sti
dec
leave
icebp
push
fists
outsl
inc
and
test
add
xor
sub
xchg
mov
and
add
push
push
je
ss
adc
inc
cmp
out
inc
sub
hlt
add
dec
subl
mov
sub
push
lds
mov
mov
or
out
xchg
or
mov
in
push
test
loope
scas
sarl
lods
int3
cmp
xchg
idiv
lcall
gs
pop
dec
test
imul
mov
dec
lcall
es
arpl
movsb
add
xchg
pop
movsb
outsl
mov
cli
std
pushf
lcall
leave
and
fnstenv
lahf
cli
int3
push
ss
sub
insb
sbb
jb
inc
int3
mov
daa
call
mov
push
rcr
test
adc
cmp
xchg
mov
mov
mov
stc
or
rcr
cmp
and
cmpsb
pop
idivb
cli
sub
mov
sti
adc
ja
mov
orb
adc
in
mov
sub
jge
mov
hlt
xor
push
out
jae
int3
std
ret
or
dec
jns
lock
leave
icebp
jb
jl
sbb
cld
lret
lret
ja
inc
sub
in
rcpps
dec
in
mov
sti
pop
pop
xor
mov
xchg
push
ret
ljmp
xchg
push
dec
cld
stc
scas
push
inc
pop
in
lea
je
mov
mov
enter
repz
xchg
dec
cmpsb
cwtl
or
xchg
or
sahf
jmp
push
cmc
adc
clc
fbstp
lcall
mov
lret
cltd
pop
outsl
adc
inc
pop
or
in
mov
add
scas
sub
mov
in
int
mov
aaa
ljmp
jb
aas
stos
jle
cmpsb
jle
cmpsl
ja
stos
cmp
fbld
mov
or
cli
std
adc
add
cltd
fnstsw
sarl
adc
icebp
popf
bound
lods
pop
push
out
or
into
xor
or
dec
rcll
and
jbe
jae
fidivs
jo
cmpsb
mov
jecxz
in
das
movsl
mov
or
fwait
int3
in
fldcw
push
mov
add
pop
cmc
cmp
aaa
adc
repnz
pop
sub
call
push
fisubs
repz
or
mov
xchg
and
dec
jbe
icebp
inc
insl
adc
scas
xchg
shll
cs
mov
xchg
push
mov
iret
jnp
gs
lds
jl
push
clc
or
icebp
xor
fs
lcall
outsb
mov
aaa
mov
aas
loop
fists
mov
fmuls
xor
sbb
outsl
xchg
scas
mov
cmp
lret
ss
fstpl
addr16
daa
push
movsb
test
dec
int3
jp
popf
xor
inc
insl
pop
mov
sub
aas
pusha
fldl
fsubr
ja
fcoml
and
or
push
sti
ja
mov
sar
fsubrs
jecxz
mov
add
ret
cwtl
in
xchg
sub
jae
stos
ret
push
jo
dec
out
sub
stc
push
or
jne
xor
push
jae
sahf
stos
aaa
push
icebp
mov
movsl
inc
leave
adc
jg
es
sbb
stos
call
cmp
jcxz
cmp
fstp
add
lds
movsl
in
popf
mov
mov
out
rclb
cmc
jnp
je
and
pop
dec
mov
icebp
pusha
outsl
enter
fisubrs
ror
inc
xor
test
sti
gs
ja
inc
cmp
ja
test
adc
cld
push
and
insb
rclb
imul
aad
mov
inc
pop
cmpsl
xor
mov
mulb
inc
sub
push
adc
push
shl
outsl
sbb
push
roll
dec
xor
call
shlb
rcrb
loope
dec
stc
pop
jg
xchg
sahf
insb
or
mov
cmp
jae
div
mov
nop
arpl
xchg
jp
mov
mov
cwtl
js
outsb
xchg
outsb
sbb
cmp
roll
add
pop
jo
loopne
inc
out
mov
mov
jmp
jmp
cltd
andl
cmp
test
mov
lods
out
pop
mov
ljmp
inc
or
je
sbb
adcb
mov
push
push
test
ror
jo
lahf
inc
or
das
xchg
and
out
insb
out
sub
adc
mov
dec
xchg
xchg
and
movsl
add
fdiv
call
ret
aaa
stc
mov
popa
jmp
daa
dec
cmp
jno
insb
sbb
add
inc
and
adc
fidivrl
std
xchg
int
sub
xlat
and
shrl
jl
pushf
xor
mov
stos
std
test
mov
into
sub
shlb
fisubrl
mov
pop
leave
neg
mov
movsb
inc
xchg
insl
inc
cwtl
icebp
loope
lret
xchg
orb
in
sbb
inc
cmp
and
push
int
pop
xchg
sub
cmpsb
jecxz
cld
pop
in
jmp
add
lea
pop
jge
jecxz
xor
cmp
jb
stos
in
out
mov
push
stc
rclb
xchg
mov
sbb
nop
jl
xor
add
jecxz
loopne
xchg
xor
push
jmp
mov
icebp
das
scas
push
sub
addl
xchg
push
sbb
fistpll
inc
ror
dec
idiv
mov
lds
jae
dec
jbe
lock
aam
xor
dec
std
xchg
mov
mov
in
hlt
popf
mov
sub
cmpsl
dec
data16
and
and
xchg
out
movsb
push
inc
ret
cmpsl
cmc
xor
xor
and
mov
sti
loope
cmc
push
ja
popa
dec
jecxz
scas
fiadds
xor
xor
insb
xchg
fwait
lea
pop
lcall
push
sbb
mov
fwait
jecxz
push
push
repnz
int3
popa
lret
loope
aas
inc
movsl
and
xchg
cmc
mov
push
inc
out
jmp
cmp
sbb
cld
adc
or
mov
shrb
xchg
cld
leave
xchg
arpl
fwait
adc
xor
fs
jg
or
lea
mov
mov
call
scas
xor
iret
add
dec
jl
subl
test
pop
and
mov
push
xor
jae
shll
inc
stos
sub
xor
in
inc
ds
cmp
pop
cmp
push
les
push
jne
adc
pop
mov
sub
loop
fmull
xchg
sub
aaa
xor
and
iret
movb
sub
add
icebp
outsl
in
xchg
das
cmpsl
mov
mov
loope
ljmp
enter
push
xchg
rorb
std
jne
es
pop
jge
cs
and
and
int
inc
cmp
jae
jnp
xchg
xchg
or
imul
insb
cmp
sarl
imul
or
hlt
add
dec
ljmp
outsb
decb
ss
push
popf
cld
jge,pt
dec
add
sbb
xchg
stc
lea
mov
fwait
pop
mov
jl
cmp
int
and
xor
mov
mov
lea
pop
xchg
adc
jne
in
gs
mov
adc
out
repz
sbb
in
pop
jge
sub
pop
cmc
int
and
push
mov
in
dec
data16
test
push
cmp
mov
dec
out
les
arpl
mov
movsb
mov
loope
mov
repz
aas
mov
mov
lcall
adc
cmpsl
lds
rol
xchg
dec
daa
xor
clc
ret
mov
sbb
ficompl
rorb
mov
int
in
mov
pcmpgtw
pop
push
lds
lods
xchg
adc
lods
aas
sbb
pop
rclb
mov
fldenv
sar
mov
lcall
test
xchg
stos
inc
xchg
in
mov
xchg
xchg
jge
fimull
pop
push
sbb
inc
fistpll
cmp
sbb
xchg
xor
cmp
lcall
push
dec
add
push
adc
pusha
nop
dec
rolb
mov
popf
ljmp
mov
outsl
push
inc
xchg
int3
mov
cmp
adc
xchg
dec
or
fildll
test
je
inc
and
xchg
aaa
inc
push
cmc
jo
fdivl
push
add
push
or
mov
sub
and
loopne
dec
mov
nop
inc
stos
in
cli
insb
movsb
adc
cmpl
fidivs
jne
out
jmp
gs
les
xor
pop
imul
test
mov
mov
outsb
repnz
or
inc
dec
xor
addr16
stos
iret
inc
pop
mov
mov
mov
jmp
cmpsb
sbb
movlps
scas
push
out
je
add
inc
mov
push
jbe
dec
loope
mov
adc
sbb
pop
shlb
or
pop
adc
push
adc
dec
xor
adc
sbbl
push
imul
mov
xor
sub
dec
or
orl
jge
les
popf
jns
aad
jle
mov
daa
fs
mov
inc
xor
in
dec
jmp
sbb
and
mov
pop
mov
inc
in
call
loopne
daa
jne,pt
dec
pop
mov
mov
fisubrs
cmp
orb
sub
xchg
mov
jne
dec
pop
adc
lret
push
mov
jle
into
cld
out
add
enter
call
jle
add
cmc
out
into
inc
sbb
adc
adc
inc
test
sub
mov
pop
mov
ret
mov
push
inc
or
add
cmp
and
push
dec
aas
movsb
inc
pop
mov
add
inc
xchg
les
addr16
rcrl
imul
pop
adc
sarl
pop
push
ljmp
inc
pop
sbb
sub
or
xchg
jo
cmp
divb
pop
int
mov
mov
enter
adc
imul
imul
pusha
jp
cwtl
sub
xchg
arpl
mov
and
sub
pop
mov
fiadds
outsl
test
rcrb
inc
xchg
cmp
cmp
pop
push
push
jo
xchg
cli
pop
push
cmpsl
stos
inc
rorl
pushf
push
ficoml
ja
popa
dec
mov
sbb
xchg
insw
repz
cmp
lret
jg
loopne
movsl
lret
in
imul
loope
jbe
cmp
in
movsb
xor
push
pop
pop
into
rcrb
push
mov
das
pop
xor
push
push
jg
out
cmpl
ss
jae
mov
inc
and
sub
mov
vpor
addr16
push
jbe
jo
idiv
adc
in
cmpsb
cld
pop
shll
add
andb
adc
repnz
push
xchg
and
pop
adc
rcll
xchg
or
jge
adc
and
mov
push
popa
fwait
in
xlat
add
cmpsl
sbb
es
xchg
pop
xchg
outsb
jbe
in
out
add
add
mov
nop
std
push
out
mov
arpl
sbb
or
punpckldq
lret
cld
mov
dec
mov
xor
rcrb
fyl2x
ljmp
mov
push
lds
pop
sar
clc
lret
jmp
cmpsb
outsl
js
mov
sbb
or
cmp
push
popa
lea
and
enter
sbb
ss
fwait
mov
pop
jne
mov
mov
dec
xchg
fwait
pop
push
push
enter
xchg
test
test
cmc
mov
pop
mov
xor
aaa
mov
mov
pushf
scas
inc
mov
in
sub
pop
xor
int
xor
fs
sbb
mov
testb
in
cmc
movsl
jl
jle
ss
xor
mov
cltd
mov
push
inc
push
mov
stos
sub
arpl
push
or
inc
mov
jbe
mov
fildl
inc
cltd
add
pop
sub
mov
stos
sub
aam
ret
xchg
push
cwtl
add
ds
sbb
lds
testb
mov
dec
mov
pop
mov
mov
mov
mov
xor
shrl
push
aaa
sub
xchg
or
enter
negb
pop
fisttpll
mov
sbb
cmp
cmp
mov
xlat
xor
xchg
sti
cs
xor
mov
out
or
cmc
loopne
aas
outsb
jmp
ret
stos
outsl
pop
push
mov
push
mov
or
sbb
cmp
and
call
push
jnp
jle
mov
lods
lret
mov
shll
stc
lock
pushf
xchg
clc
mov
lea
dec
dec
sbbb
stos
sub
stc
pop
fcoms
xchg
sub
mov
inc
out
inc
js
test
rorb
push
mov
call
mov
mov
xchg
sub
icebp
or
shrl
mov
lret
fidivrl
shlb
xor
jnp
rcrb
pop
jb
arpl
mov
fwait
sbb
mov
adcl
mov
shrl
fnstcw
adc
je
gs
push
fistl
xorl
hlt
daa
test
or
pop
out
jns
push
je
dec
add
ds
push
mov
xchg
mov
mov
sahf
xchg
lods
leave
int3
cmpsl
lret
das
ja
dec
push
mov
aam
in
push
xchg
jb
jb
xchg
xor
mov
imul
mov
lret
mov
rcl
inc
iret
out
roll
jmp
xor
stos
inc
sbb
loop
mov
aam
stos
repz
fdivl
dec
jns
pop
adc
mov
bound
sub
das
add
popa
repz
lret
pop
and
mov
push
pop
push
inc
lea
adc
mov
jmp
or
xchg
xor
adc
je
xor
mov
push
es
cld
inc
adc
xor
and
ljmp
inc
jmp
or
xchg
les
lods
cmp
mov
push
cwtl
ret
xor
xorb
data16
lret
mov
cmpsb
insl
lret
inc
mov
mov
addb
xchg
mov
stos
xlat
lcall
into
sub
pop
stc
enter
jo
push
sbb
pop
lcall
pop
inc
movsb
xor
out
and
inc
in
push
push
cltd
dec
mov
jae
shll
and
pop
divl
mov
mov
iret
dec
add
nop
xor
jb
mov
pop
inc
insl
pusha
xchg
jge
xorl
xchg
sbb
jle
and
jns
pushl
push
loope
xor
imul
cld
mov
jnp
mov
mov
and
jb
popl
mov
push
fwait
in
repz
pop
pop
js
fists
jg
lods
das
jbe
xchg
leave
and
nop
jne
aas
xchg
xchg
jge
leave
inc
pop
shr
mov
jle
dec
je
bound
int3
jae
loope
lret
xchg
jbe
or
cmpsb
rcll
xor
sbb
dec
int
inc
rcl
lcall
pushl
xchg
mov
adc
dec
push
sti
push
shll
ss
push
and
icebp
mov
push
dec
and
cmp
imul
scas
cmp
pop
dec
imul
imul
or
add
test
int3
mov
push
mov
test
or
cmp
mov
sbb
mov
xchg
pop
shll
test
push
xor
sub
subl
sarb
ffreep
xlat
dec
ss
test
and
dec
mov
out
push
add
or
subl
sbb
jg
mov
movsl
add
mov
fstpl
mov
xor
iret
ja
inc
movsb
fwait
xchg
popa
jae
lods
inc
scas
fisubrl
jns
je
cmpsb
out
sub
dec
popa
mov
mov
mov
jl
jae
fbstp
xor
pop
push
mov
leave
sahf
andl
xchg
xor
cli
cltd
inc
dec
xchg
and
jg
popf
push
dec
dec
cmpsl
div
dec
test
jae
sbb
lods
jnp
movsb
mov
pop
jg
clc
dec
push
add
fsubr
call
add
roll
and
adc
insb
mov
mov
loopne
sahf
sahf
mov
je
cmp
rorl
cmpl
and
xor
inc
mov
je
push
cmpsb
jbe
push
mov
scas
mov
lock
lods
outsb
and
push
push
ds
fisubl
mov
ljmp
xor
inc
fldt
arpl
stos
lahf
rorb
xchg
test
push
lcall
outsl
adc
jecxz
push
sbb
test
fcompl
mov
and
imul
ja
lcall
jge
xchg
ret
jo
and
fsubr
xchg
and
jno
imul
add
lret
loope
fstps
cmp
loop
imul
popa
push
mov
std
mov
mov
xlat
aam
inc
sbb
inc
gs
cmp
int3
inc
inc
inc
cmp
push
cmpsb
scas
pop
or
jge
push
inc
stc
mov
jnp
data16
subl
mov
inc
sub
les
jne
mov
push
pop
or
test
cmpsb
lods
loope
add
xchg
lahf
stc
ret
in
imulb
add
sti
movb
pop
fcoml
lods
jl
pop
adc
pushf
dec
cmpsb
imul
push
inc
jne
lret
popf
cmpsb
pop
lods
push
jae
ljmp
and
mov
inc
das
xlat
mov
jbe
cmp
mov
movsb
addr16
push
nop
inc
add
into
push
testl
popl
arpl
xor
popf
jae
addr16
movsl
call
lds
aas
xor
jo
jae
and
rol
loopne
pop
lock
sub
inc
dec
scas
mov
xchg
mov
push
mov
test
pop
shrl
xor
scas
mov
adc
dec
repz
cmp
or
and
lcall
idivl
xchg
sbb
push
rorl
test
fcoml
stc
jb
and
out
cld
fwait
sub
lret
cld
lock
and
jbe
nop
movsb
xor
das
mov
pop
cmp
fucomip
iret
xor
aaa
add
push
rol
push
inc
xchg
inc
mov
aaa
lcall
loopne
es
loop
cwtl
inc
inc
imul
dec
lcall
push
jmp
andl
fnstsw
xchg
add
add
adc
in
mov
pop
fcmovne
ljmp
mov
inc
das
pop
adc
stos
mov
xor
mov
and
gs
pop
call
dec
dec
in
cmpl
push
xor
lock
jae
push
pushf
and
pop
lret
iret
jmp
int3
ljmp
aad
stos
sub
sbb
push
sbb
add
rcrb
jbe
jecxz
call
cli
xor
fadds
xlat
inc
and
xor
stos
ss
dec
push
pop
fisttpl
imul
adc
add
call
mov
mov
mulb
and
cld
inc
push
sbb
ret
shll
xor
push
out
push
jno
dec
xchg
or
and
sarb
cmp
imul
adc
push
sbb
roll
loopne
dec
ja
push
jmp
fs
jns
push
les
or
and
jbe
xchg
test
pop
addl
mov
jle
jns
mov
mov
dec
lds
scas
lods
testb
fcoms
push
adc
fstl
mov
pop
das
outsb
xchg
or
jecxz
and
fcmovnbe
inc
inc
lock
hlt
inc
jge
jge
lcall
sub
mov
push
enter
outsl
xchg
adc
jle
inc
scas
fcom
les
fisttpll
nop
out
repnz
sahf
sbb
pop
xor
jne
ror
mov
pushw
xor
lret
outsl
mov
lods
jl
pop
pop
add
testl
clc
add
jne
std
add
outsb
icebp
push
add
scas
lds
jo
cmpsl
lret
or
inc
mulb
sbbb
fwait
mov
pop
push
ds
sahf
mov
adc
xchg
nop
and
popf
mov
xchg
adc
fs
and
cwtl
insb
mov
mov
cwtl
in
enter
shrb
repz
jle
mov
fs
mov
cli
rorl
mul
adc
aas
xchg
aas
jecxz
pushf
jo
adc
pusha
dec
idivl
or
int3
es
inc
mov
cmp
cmp
into
cs
fsubrs
pop
or
cmc
mov
js
lahf
lods
into
sti
shl
xchg
cmpb
fmul
pop
xchg
sbb
test
xchg
outsb
shrb
movsb
cmpsl
inc
addr16
lcall
aas
dec
cmp
sub
mov
push
push
repz
mov
out
mov
or
out
lds
cmp
jbe
sub
push
push
int
loop
sbb
call
and
fildll
aas
cmpsl
cmp
push
mov
mov
jno
jl
test
jbe
cmp
rol
aas
notb
pop
repnz
lcall
xor
lcall
dec
inc
and
pop
popa
enter
lods
mov
sbb
aas
push
inc
dec
ljmp
mov
ss
xchg
mov
dec
insb
in
mov
sbb
shlb
dec
std
imul
xchg
sbb
sti
hlt
mov
inc
add
mov
xor
divl
xchg
jmp
inc
jp
popa
mov
pop
arpl
mov
negb
pop
dec
and
sub
jne
xlat
aam
sub
jae
xchg
sub
pop
mov
xor
and
sub
inc
clc
rorb
pop
daa
rcll
icebp
andl
test
sbb
js
lcall
aam
clc
xchg
negl
fisubl
mov
fbld
dec
ret
mov
sub
outsb
bswap
jge
push
arpl
cmp
andl
fucomi
jae
pop
mov
jecxz
rcr
push
or
fiadds
push
js
es
push
testb
push
cmp
loopne
shrb
dec
shrb
xor
sub
mov
pop
popa
jle
inc
adc
sub
repz
or
cwtl
add
jo
movsl
pushf
adc
shrl
push
les
xor
arpl
push
je
and
push
movsl
je
jno
mov
xchg
inc
insl
pop
cmp
gs
rorb
andb
and
push
aad
shrb
ja
cmpsl
test
push
jge
dec
ss
mov
loopne
mov
add
and
xchg
loop
inc
dec
push
mov
push
lods
mov
jne
mov
es
pop
lret
sub
mov
mov
sbb
ljmp
fcmovbe
in
and
iret
ljmp
sbb
icebp
sbb
mov
push
jb
mov
mov
rorb
inc
fiaddl
mov
fnstcw
sbbl
dec
or
neg
cli
dec
adc
sub
cmp
pushf
push
call
jmp
pop
xchg
in
xchg
test
sbb
in
into
sbb
push
dec
xor
bts
mov
mov
ret
sbb
add
adc
inc
pop
jns
xchg
sbb
mov
push
call
stc
cmp
loop
push
sbb
pushf
push
adc
xchg
xchg
sbb
pop
xchg
mov
outsb
loop
add
cli
adc
or
xor
jmp
cmp
int3
xor
out
lret
inc
mov
sbb
adc
jnp
xor
roll
jno
and
sti
adc
lahf
dec
add
bound
adc
mov
repnz
adc
js
dec
ffree
pop
dec
xchg
in
fisttpl
imulb
sti
jbe
push
dec
out
out
mov
push
lea
pop
push
pop
int3
xor
bound
mov
mov
aas
arpl
sbb
data16
add
popa
lret
cmpsb
nop
je
cmpsb
movsb
push
insl
fnsave
push
mov
and
rcr
pmaxub
fs
sub
jp
lcall
popf
lret
hlt
inc
popf
fsubs
sbb
fildl
in
mov
dec
test
pop
lods
push
sbb
js
out
pop
dec
push
mov
xchg
outsb
cli
sub
inc
pop
stos
sbb
aad
ljmp
mov
ljmp
je
pushf
movsb
pop
aaa
mov
repnz
push
mov
xchg
xchg
xchg
xchg
xchg
sbb
mov
mov
test
iret
mov
adc
or
mov
testl
sarl
out
stc
test
sub
outsb
add
sbb
cld
adc
xchg
adc
orl
iret
pop
pop
into
cmovnp
mov
xchg
repnz
mov
or
mov
ja
cmc
ds
inc
sarl
mov
das
icebp
ljmp
or
outsl
mov
xchg
insb
out
scas
mov
fstps
out
mov
loopne
cmpsb
in
mov
aaa
cmp
lock
ds
mov
cltd
repz
pop
sbb
into
aad
cmpb
sub
dec
or
xchg
mov
add
ja
dec
and
xor
nop
and
fwait
push
mov
adc
xchg
mov
lods
movsb
xor
mov
mov
mov
std
pavgb
push
adc
loop
testb
dec
es
imul
rorl
push
push
dec
and
inc
lea
xor
cmp
mov
cmpsb
pop
jecxz
loop
arpl
jge
mov
and
in
jg
ds
lcall
inc
push
mov
inc
outsl
xchg
out
mov
pop
add
jae
add
push
mov
je
mov
mov
push
and
and
mov
outsl
daa
jecxz
negl
int3
push
out
lcall
incb
popa
nop
int3
adc
rcrb
dec
jae
sti
or
lods
add
mov
gs
sbb
lods
push
pop
fincstp
out
mov
jle
sub
and
cmp
movsl
xchg
mov
or
sbb
lea
or
pop
fwait
pop
lahf
mov
dec
pop
xchg
jp
outsb
and
das
lea
cs
jnp
rcrl
or
jle
enter
sub
lds
popa
push
dec
cmp
or
add
hlt
mov
dec
movsl
mov
inc
push
enter
in
mov
and
and
pop
add
sti
cld
aaa
cld
in
mov
in
sbb
in
sbb
mov
mov
nop
es
mov
mov
mov
inc
dec
js
mov
fimull
movsb
jno
fistpll
jmp
add
cmp
pop
fistps
ss
or
les
nop
or
icebp
loop
xchg
dec
out
xor
in
cmpsb
add
and
jge
stos
add
les
dec
pop
mov
sbb
adc
decb
or
add
push
cli
cmpsb
sbb
bound
push
fadd
divl
vpcmpeqb
push
clc
testb
cld
imul
ss
pop
ljmp
adc
adc
sub
sbb
pop
mov
test
push
sbb
loope
mov
add
inc
lock
xlat
test
ss
add
xor
cmpsb
inc
mov
shll
gs
jbe
and
aad
shl
inc
and
mov
mov
popl
movsl
shll
pop
fiaddl
xchg
or
cmpsb
clc
or
xor
sbb
jp
fwait
and
shr
in
mov
lds
cwtl
je
daa
xchg
add
or
adcb
inc
push
pop
inc
cmp
xor
sbb
inc
or
shrd
adc
pop
call
inc
stc
mov
push
sub
push
sbb
rcrb
cmpb
push
insb
sbb
out
xchg
or
scas
out
xchg
jnp
inc
push
xchg
rcll
jne
cwtl
adcl
jbe
fdivl
call
xchg
mov
sub
mov
faddl
scas
fcomp
sub
in
test
and
mov
pop
lods
adc
pop
jns
adc
mov
mov
and
xchg
mov
loopne
adc
roll
mov
xchg
jl
clc
dec
mov
pop
loopne
inc
stos
repnz
mov
xor
cmpsb
sub
rcrb
clc
scas
fimull
lcall
clc
das
stc
in
or
mov
ss
xchg
das
dec
sti
lods
aas
mov
mov
leave
pop
push
adc
sbb
add
cmp
ja
or
xchg
pop
inc
xor
lds
push
aam
xor
mov
cmp
dec
aam
push
push
aad
mov
lods
mov
xchg
lret
xchg
pop
fs
pop
sub
xchg
movsl
shl
sahf
add
lds
or
loope
jge
jns
aas
lds
pusha
std
push
mov
leave
dec
jns
sbb
mov
enter
jl
push
hlt
clc
ret
cmp
fidivl
cmc
roll
test
push
push
and
movsb
shlb
sub
jb
sti
and
mov
sub
xchg
aam
inc
mov
cli
or
in
push
mulb
lea
imul
and
xlat
pop
sub
les
nop
cwtl
dec
outsb
daa
stc
pop
and
mov
mov
or
scas
adc
add
and
mov
xor
hlt
negl
cs
lock
xchg
cmp
icebp
cmpsb
hlt
scas
cmp
push
mov
adc
mov
das
and
mov
call
or
in
xor
scas
or
mov
mov
jns
inc
mov
xchg
or
sub
add
test
jbe
test
fdivs
push
in
inc
arpl
ss
scas
sub
in
out
popf
mov
sbb
push
inc
mov
mov
aaa
xchg
sti
hlt
imul
mov
mov
or
push
pop
enter
je
cmpb
jo
ret
cmc
mov
pop
sbb
cwtl
les
push
lock
rolb
adc
push
xchg
dec
fwait
sbb
sub
mov
lret
outsb
test
in
push
sub
push
ss
and
sbb
mov
daa
mov
test
push
mov
mov
test
and
push
push
mov
movsl
xor
test
ja
mov
push
ret
into
cmp
fwait
into
cs
jmp
xor
icebp
in
xor
jbe
aad
ljmp
jp
mov
cli
loopne
lea
leave
stos
cltd
cmpsl
sahf
jp
and
in
test
test
lock
mov
mov
mov
xor
data16
inc
ffreep
lea
data16
fdivs
inc
ljmp
xor
loope
pop
jnp
cmp
outsb
bound
rcrl
mov
pop
cmpsl
mov
cmpsb
mov
mov
aam
mov
fldl
loope
lahf
call
pop
jl
sahf
iret
push
xchg
idiv
xor
insl
cli
popf
rcrb
mov
add
mov
adc
lock
enter
movsl
add
adc
push
inc
xchg
xchg
add
orb
lret
mov
call
test
repnz
pushf
sbb
repnz
cmpsl
or
cltd
xor
cmp
push
xchg
test
xor
clc
lret
insb
mov
out
or
dec
sarl
scas
scas
int3
sub
shrl
test
or
xlat
nop
xchg
stos
xchg
sbb
mulb
je
arpl
and
setns
push
push
ffreep
and
mov
sub
xchg
sti
data16
inc
in
xor
jmp
mov
outsl
mov
dec
inc
xor
jbe
xchg
rcrl
inc
add
cmpsl
push
insb
gs
jns
lods
cwtl
and
inc
pop
stos
or
push
push
sbb
mov
jle
scas
sub
and
pop
sbb
pop
jp
cmp
nop
xchg
or
stos
dec
lock
lock
in
daa
xor
jne
jge
lds
xor
xlat
imul
leave
cwtl
nop
fsqrt
xor
inc
cmp
cmc
into
xchg
push
xchg
xor
cmp
dec
or
sbb
adc
push
dec
push
inc
jecxz
stc
nop
cmp
int
push
es
aam
int
mov
push
mov
and
push
and
pusha
push
out
aas
sbb
mov
filds
negl
and
push
std
test
add
stos
mov
ljmp
jno
mulb
and
movsb
jmp
cmp
mov
sbb
ljmp
push
inc
jmp
test
fcoms
xchg
mov
mov
jecxz
push
stos
cmp
jns
pop
and
inc
sub
push
jo
push
decb
fs
sub
xor
xlat
pop
leave
inc
in
mov
popf
sub
inc
aad
pop
mov
pop
ret
inc
and
push
loopne
mov
dec
jmp
mov
push
mov
add
fisttpl
or
add
xchg
ficoms
rol
mov
jmp
enter
pop
push
cmp
mov
fsubrs
stos
cld
push
dec
or
outsb
jo
xchg
lock
jg
or
xor
int3
adc
jp
add
sbb
aam
lea
sbb
lret
idivl
jb
aam
test
mov
inc
and
hlt
sub
inc
mov
mov
xchg
mov
imul
push
xor
int3
adc
ljmp
loope
mov
out
lock
and
aam
call
xchg
scas
pop
add
stos
cld
xor
cmpl
adc
add
xor
lock
mov
mov
call
rolb
mov
pop
cmp
inc
pusha
sbb
cmp
sub
mov
aam
outsl
sub
ret
sbb
add
insb
jne
int3
push
add
es
cs
sub
insl
push
adc
popf
adc
dec
stos
ss
adc
scas
shlb
dec
jo
dec
pop
or
lods
test
mov
pop
insb
aaa
jecxz
lea
xor
mov
test
push
out
test
mov
subl
in
xor
mov
ret
fisttpll
repz
lds
dec
and
aaa
sbb
push
mov
mov
dec
mov
outsb
and
insl
dec
pop
mov
dec
loop
lods
mov
sbb
in
repz
jmp
xor
adc
jbe
xor
imull
mov
pop
shl
lock
cmp
or
rorl
mov
test
push
out
xchg
loop
sub
hlt
add
add
clc
dec
call
sbb
cmp
addr16
push
je
mov
pop
lods
jmp
arpl
pop
dec
inc
loopne
orb
jbe
jecxz
jns
pop
adc
insb
flds
dec
push
fimuls
scas
push
jne
mov
xchg
cmpsb
mov
rcll
xor
popa
or
test
jp
dec
jns
rcll
daa
mov
mov
xchg
mov
jnp
dec
mov
int3
mov
scas
jo
call
xchg
and
daa
dec
sti
loop
xchg
das
loopne
leave
outsl
cmpsb
aam
xchg
mov
mov
cmp
fildll
sub
mov
add
or
jae
mov
ret
ret
pop
dec
push
leave
mov
mov
cld
int3
inc
and
push
and
dec
imul
mov
std
repz
popa
sahf
in
mov
repnz
mov
sub
and
loope
mov
into
xor
sbb
jmp
xor
or
jmp
jle
scas
cmp
cs
inc
adc
sbb
jge
cmp
lahf
ds
fcmovbe
mov
push
mov
mov
cld
rcll
cmovbe
xor
jb
mov
sub
cmp
mov
repnz
fs
insl
mov
bound
mov
in
pushf
outsl
pop
mov
enter
jo
sahf
outsl
test
sub
inc
pushf
cmpb
mov
test
out
or
mov
mov
mov
cmp
sti
jp
lea
ja
lahf
xchg
add
sbb
js
mov
jb
arpl
dec
paddusw
ret
xor
xchg
mov
jb
inc
dec
lods
xchg
rcrb
mov
push
sub
jecxz
push
ss
lret
inc
leave
cltd
je
add
xchg
and
ds
stos
movb
fs
jp
xor
and
fadds
aad
add
cmc
jae
dec
lret
xor
pop
sbb
mov
pop
ficomps
and
mov
aam
popa
icebp
sub
push
push
sub
test
repz
sbb
jmp
mov
adc
jb
xor
faddl
add
and
mov
or
cmp
xchg
inc
or
push
mov
inc
pop
xor
ret
xor
xor
mov
lea
mov
hlt
xor
inc
ljmp
fwait
mov
popf
jp
sbb
xchg
lcall
mov
ret
or
pop
adc
in
push
aaa
or
in
dec
lods
sub
nop
mov
pop
shrl
add
call
add
lock
clc
data16
shr
and
cmp
cmc
in
inc
pop
xchg
push
jp
push
fwait
movlps
out
popf
push
lret
cs
sbb
push
gs
ret
sbb
cmp
add
repz
inc
pop
mov
inc
rorl
dec
lods
in
or
pop
jl
hlt
push
loopne
fdivs
jmp
mov
int3
sub
add
push
dec
popa
sbb
out
shl
fistpll
xchg
pop
mov
xchg
mov
adc
mov
ret
mov
xchg
ss
mov
dec
fisttps
scas
in
mov
out
popf
cmp
mov
fchs
jge
dec
dec
pop
xchg
lock
and
in
xchg
or
pop
dec
lods
or
push
adc
push
aaa
dec
sbb
jns
cmp
sub
pop
pmulhuw
jp
sahf
push
int
adc
jge
jbe
leave
inc
sub
xor
push
repnz
jb
std
xchg
and
inc
cmp
rdmsr
xchg
ret
sbb
pushf
pop
in
dec
sub
sub
cmc
inc
inc
fsubs
mov
jg
jae
sub
cmc
cltd
adc
icebp
cmc
pop
or
sbb
inc
add
inc
or
and
mov
or
mov
sub
das
jg
cmc
jecxz
and
mov
pop
adc
pop
shll
out
and
es
aas
ret
fsub
push
fistps
and
xlat
in
pop
arpl
call
mov
enter
rolb
adc
pop
xchg
mov
repnz
mov
pop
add
push
cmpsl
jg
cmpsl
aad
testl
test
lret
mov
sbb
push
mov
add
scas
out
shll
inc
nop
push
adc
leave
pop
inc
test
sub
pop
sub
ss
bnd
mov
inc
pop
xchg
outsl
cmp
or
push
cmp
push
sar
sbb
mov
add
ljmp
out
addr16
sti
lds
and
mov
jns
pop
cmp
inc
ret
icebp
push
xchg
popa
mov
popf
push
inc
rorb
add
pusha
repz
sub
add
adc
pop
iret
nop
adc
mulb
lahf
or
xor
xchg
shl
pop
std
cs
jmp
into
lcall
xor
push
add
mov
jmp
in
sbb
pop
xor
pop
push
jns
in
int3
call
and
cmp
test
mov
dec
or
fisttps
mov
jge
daa
dec
jg
cmp
in
and
cmp
mov
testb
sub
add
push
xchg
mov
sub
stc
xchg
dec
mov
jmp
lret
cltd
xchg
adc
push
data16
repz
out
mov
push
dec
fsubl
into
out
dec
jg
aaa
and
or
cmp
mov
into
cwtl
lock
mov
sub
xchg
mov
push
std
add
push
test
inc
daa
mov
xchg
jae
mov
xor
lret
mov
loopne
lahf
ljmp
cmp
lret
pop
or
packsswb
push
cmp
jb
dec
lret
fcompl
popa
jbe
inc
xor
jmp
jno
jno
es
fisubrs
pop
jnp
jns
add
lds
or
jnp
pop
sbb
mov
jae
jg
pushf
push
mov
cmp
cs
dec
scas
push
or
sbb
lcall
mov
cmp
xchg
xchg
sub
fcoml
push
mov
out
sbb
jg
das
sub
push
leave
test
mov
test
leave
xchg
push
xor
pop
les
and
and
lea
push
adc
mov
daa
mov
js
das
push
ficompl
je
idivb
dec
ljmp
jl
inc
xor
out
push
fimull
hlt
inc
aas
enter
jp
insl
cwtd
mov
lahf
mov
mov
sarl
xchg
inc
lock
add
sbb
jmp
mov
popa
sbb
je
xchg
fisubrl
les
ret
popf
inc
or
add
add
out
xchg
cmp
sarb
cwtl
adc
loope
in
rolb
push
sbb
xchg
nop
test
loop
repnz
xlat
mov
stos
and
mov
fadds
nop
shl
adcb
xchg
je
clc
xchg
add
inc
mov
sti
jge
fsubr
dec
cwtl
lods
repz
sti
jae
jp
aas
fnstenv
sub
or
add
pop
cmp
scas
repz
imul
mov
adcb
xchg
loop
jmp
jbe
or
in
pop
stos
fisubrl
pop
push
push
lock
and
mov
sti
dec
adc
lcall
out
inc
into
test
sti
mov
les
rorl
lret
cmpsb
pop
mov
out
fdivs
enter
cmpsb
and
sbb
cmc
sbb
sub
mull
pop
int
outsb
test
jo
pshufw
pop
xchg
push
fistl
dec
popf
iret
mov
enter
lods
or
das
lahf
adc
mov
mov
movsb
lret
ret
push
jae
mov
clc
sub
dec
mov
dec
and
loopne,pt
pop
div
xor
int
fwait
in
pop
sahf
mov
int
cltd
xchg
nop
add
pusha
int
insl
ret
test
xor
in
xchg
sbb
mov
adc
sub
sub
dec
mov
outsb
xchg
jle
in
mov
push
fwait
fs
stos
adcl
xor
jp
lret
out
sti
test
test
bound
dec
xor
sub
jno
cmpsb
sahf
xlat
mov
xor
mov
orb
sbb
je
pop
xchg
notb
jae
popf
add
pop
dec
add
sub
push
lods
xor
inc
hlt
inc
adc
push
dec
and
and
sbb
stc
mov
inc
stc
pop
xchg
jl
fwait
mov
mov
test
jno
xor
push
pop
out
mov
repnz
aas
jb
cltd
mov
mov
das
mov
pop
out
sti
jle
jae
sub
jo
lds
inc
sarl
mov
push
or
rorb
mov
xlat
mov
xchg
or
mov
imull
inc
lods
dec
lret
jb
orb
repnz
pop
pop
lea
sub
je
jbe
push
and
pmaddwd
ret
inc
lock
mov
pop
or
jne
inc
xor
stos
pop
shrl
dec
in
fsubs
push
sub
add
test
mov
jle
and
mov
rorl
mov
in
mov
mov
ret
daa
sub
cmpsl
jmp
mov
adc
into
cld
lret
mov
in
xor
sar
add
rolb
ds
stc
fnstenv
subb
lods
test
int
jl
adc
or
xchg
movsl
add
push
iret
stos
outsb
icebp
push
in
pop
dec
test
xor
iret
int
inc
pop
leave
and
aad
dec
adc
xlat
mov
std
adc
dec
jae
push
jecxz
out
and
push
ss
pop
jle
mov
xor
mov
mov
or
mov
lock
pop
ss
aaa
add
mov
xchg
arpl
jge
push
rcrl
xor
pop
or
and
jl
outsl
call
imul
pusha
or
loop
sbb
loope
sti
cld
loop
sub
and
or
bound
sub
jae
insb
push
mov
or
pop
fimull
imul
lahf
lret
pop
test
inc
mov
mov
cld
jo
mov
pusha
pop
fildl
hlt
xlat
sbb
sbb
cwtl
adc
pop
insb
loopne
repnz
insl
aam
add
inc
or
xlat
arpl
fiadds
push
into
icebp
cmpsl
and
sub
out
aad
mov
int3
and
ret
xor
setb
dec
sbb
cmpsb
in
push
inc
out
cwtl
into
add
mov
std
in
adc
movsl
sbb
push
mov
cltd
aas
sbb
shlb
mov
dec
nop
mov
idivl
inc
mov
adc
and
sub
ret
call
out
into
inc
bound
fisubs
pusha
jg
pop
loopne
fwait
lcall
push
inc
repz
aam
mov
or
lods
cli
sub
loope
cmp
ja
or
fisttps
add
jne
cmpsl
popf
stos
add
adc
pop
adc
cmp
sub
nop
adc
imul
nop
sahf
aaa
cld
loopne
push
stos
mov
cmp
push
out
fisubrl
les
sub
jmp
sub
and
ss
mov
fidivs
pop
jo
es
insl
add
sbb
mov
sbb
mov
push
pcmpgtw
jmp
dec
lcall
push
adc
add
xchg
scas
pop
in
dec
scas
mov
ds
negb
cmp
push
sbb
cmc
jne
and
dec
xchg
mov
std
cld
mov
arpl
cmpsl
popa
lret
fnstsw
das
jl
push
mov
sarb
or
jae
nop
lahf
dec
push
dec
loop
sub
ret
in
dec
mov
mov
lds
sbbl
and
ja
jmp
in
cld
cltd
sbb
sbb
pop
or
pop
pop
addl
addr16
pusha
popl
jl
jp
ss
xchg
or
xchg
std
movsl
lcall
cmp
loopne
and
push
dec
scas
xchg
jp
int
fisubl
pop
gs
xor
sub
inc
sbb
aaa
xchg
lahf
adc
mov
xchg
lea
dec
cwtl
div
mov
xchg
push
cmp
cmp
cwtl
outsb
ficoml
das
pop
jge
stos
xchg
xor
mov
xchg
imul
mov
sbb
sub
xor
fs
mov
lods
sahf
sbb
jl
fldl
add
outsl
xor
pop
xchg
jecxz
inc
bound
jb
lds
xchg
int
pop
inc
add
push
test
das
sub
pop
ret
jl
sbb
jno
or
jl
jl
adc
fldl
sub
pop
jmp
aad
out
xchg
push
xchg
xchg
rolb
rcl
jmp
mov
push
cltd
ret
leave
mov
fmulp
xchg
dec
or
dec
push
cmp
loope
inc
in
pop
jl
icebp
or
int3
pushf
mov
and
push
mov
jb
add
je
mov
sub
and
xchg
and
pop
jmp
into
jae
pop
sbb
add
pop
and
and
scas
icebp
mov
mov
ljmp
fiadds
jo
imul
insb
out
cld
add
inc
push
stc
lds
add
jno
cltd
ljmp
pop
lahf
jl
aad
repnz
in
repnz
pop
clc
leave
xor
icebp
mov
mov
or
mov
cmpb
xchg
outsl
mov
aam
inc
jp
jp
aad
in
ljmp
dec
add
xchg
lcall
cmpsb
add
lret
ret
scas
sbb
xor
pop
adc
or
jb
pop
mov
aaa
lret
iret
mov
inc
call
cmp
loope
push
pop
xor
enter
push
mov
mov
pop
push
jl
mov
xor
roll
adc
xchg
cmp
fsubl
ret
or
sbb
scas
movsb
and
lods
xchg
inc
scas
xor
data16
cmc
aad
outsb
test
stos
sub
jecxz
sti
mov
out
xchg
xchg
sarl
loope
lcall
adc
orb
pusha
cmp
fisttps
mov
scas
xor
mov
mov
int
insl
cmc
or
dec
jmp
std
cwtl
cmp
and
dec
orl
cmp
addl
and
sub
xor
daa
es
mov
and
lret
movsb
aas
in
imul
lods
mov
aad
inc
cs
jbe
xor
fucom
adc
fwait
mov
inc
mov
movsb
sub
mov
bound
jno
mov
jl
rcl
repnz
test
push
ljmp
adc
jmp
mov
xchg
js
das
test
subb
xchg
fidivrs
cmp
ss
fwait
xchg
dec
ljmp
add
inc
jns
mov
and
imul
outsb
pop
inc
jnp
filds
inc
in
jmp
pop
xor
test
into
cmc
sbb
data16
inc
or
push
add
test
in
xor
arpl
push
pop
out
pop
xor
aaa
cmp
add
addr16
pop
push
add
inc
insl
in
jl
sbb
bound
jns
stos
dec
cltd
rcrb
mov
aaa
or
aad
mov
mov
xchg
ret
inc
int3
cmp
cmp
dec
pushf
mov
jge
je
js
push
xor
loope
xlat
pop
aas
push
mov
mov
push
daa
add
fdivl
xor
add
jnp
jle
jnp
sub
das
clc
or
call
loopne
or
or
or
mov
jbe
jns
out
jo
popa
cmp
insl
test
mov
gs
into
inc
adc
mov
lahf
and
push
orb
ds
mov
cwtl
jo
leave
add
sbb
jno
mov
jmp
sub
fwait
arpl
xor
jo
hlt
xchg
sub
add
mov
xchg
test
add
mov
iret
test
fcmovnu
mov
jne
cmc
dec
inc
mov
mov
rcl
enter
dec
das
loope
sub
ror
push
adc
mov
jp
insb
inc
ret
lret
sub
pop
lods
sti
out
or
lods
outsb
std
andb
mov
mov
repz
sbb
jle
dec
mov
fsts
pushf
out
in
rcl
into
push
shlb
outsb
mov
ss
aad
mov
push
bound
ret
cmp
xor
repz
xchg
or
ficoml
xorb
es
es
je
sbb
clc
sub
sbb
fidivl
pop
movsb
push
pop
scas
imul
dec
add
sub
xchg
es
movsl
cmc
inc
pop
sbb
insl
addl
insb
mov
repnz
loopne
test
shlb
dec
insb
xchg
stos
or
das
cmp
cmpb
orb
add
fld1
jmp
out
or
pop
jg
sub
into
not
push
adc
push
and
sbb
mov
push
test
ss
fmuls
mov
dec
fdivp
push
adc
push
icebp
stos
xor
push
push
jmp
pop
push
insb
mov
out
adc
loopne
sub
repnz
push
xchg
xchg
dec
sub
xor
in
imul
aam
or
cli
scas
or
lcall
push
sub
and
xor
xor
and
inc
mov
out
rolb
mov
test
scas
dec
rorl
mov
mov
xor
lret
sbb
ficoml
cltd
sub
push
push
push
pusha
cmp
push
push
add
loop
ljmp
mov
repnz
adc
jl
and
mov
lret
dec
jbe
mov
ja
add
repz
sbb
and
adc
and
incl
inc
ljmp
fidivl
mov
mov
fcomps
movsl
xor
imull
enter
xchg
mov
addl
sar
inc
xor
adc
stos
ds
std
mov
call
xchg
cmp
rorb
fldl
add
je
push
adc
test
and
xchg
pop
add
jmp
fstps
xchg
jae
lea
clc
push
test
jne
lods
in
pop
shrl
mov
scas
xchg
lahf
inc
into
cmp
call
xor
inc
mov
mov
pusha
pop
adc
xor
xchg
mov
lds
jle
push
not
rclb
out
fstpt
sub
adc
and
shll
add
add
fstp
aad
sbbb
test
movsl
pushf
gs
inc
jnp
les
fisubrl
orl
dec
cmp
cmp
inc
xor
stc
cmpsl
hlt
out
and
and
aad
addr16
lcall
jns
mov
add
and
push
mov
mov
sub
xor
enter
mov
push
int3
push
jmp
dec
loope
pop
in
aad
mov
repz
and
ljmp
xchg
iret
sbb
test
inc
lahf
push
out
push
out
rcrb
retw
pop
ret
pop
popf
cs
and
and
fildll
sbbb
divb
test
inc
insb
lret
das
mov
jae
xchg
sti
mov
ss
fcmovnu
inc
push
mov
mov
jge
jmp
sbb
clc
lock
mov
push
push
add
xchg
cmp
or
int3
in
dec
call
adcl
in
test
aas
mov
push
ss
filds
dec
dec
mov
cwtl
lcall
movsb
dec
and
data16
hlt
push
sub
les
pop
and
pop
rcrl
cmp
call
mov
pop
pop
adc
and
movsb
push
pop
inc
ss
stc
mov
adc
cmp
dec
shlb
xlat
xchg
dec
mov
mov
inc
xchg
pop
rcrl
xchg
mov
mov
mov
int3
mov
mov
mov
insl
mov
jb
push
sub
push
sbb
cltd
pushf
push
jge
dec
xor
bound
xchg
inc
push
mov
pushf
pop
inc
add
mov
pushf
push
das
cwtl
dec
add
xchg
lea
daa
hlt
pop
cmp
mov
jno
aaa
cmc
sbbl
inc
sub
sub
dec
mov
lods
in
leave
stos
ljmp
xorl
out
mov
mov
sbb
std
inc
scas
dec
bound
pop
sbb
adc
sub
push
scas
dec
jl
and
lret
push
addb
sbb
dec
sub
mov
les
cld
cmc
mov
mov
icebp
scas
dec
dec
mov
dec
jbe
mov
aam
xor
cmp
lret
mov
push
jg
xchg
mov
mov
jb
and
cmp
sub
lret
sbb
adc
dec
xlat
or
sbb
mov
insb
int3
mov
push
xor
into
adc
pushf
push
mov
cmp
cmpl
push
adc
push
mov
mov
cmp
hlt
mov
imul
lea
jbe
pop
movsl
inc
inc
dec
cmp
enter
dec
lcall
inc
insb
cmpsl
shlb
push
icebp
hlt
xor
ficompl
je
mov
int3
fdivs
scas
scas
repnz
idivb
jb
lahf
cmp
test
push
pop
mov
je
test
cs
rclb
push
in
jne
ljmp
pusha
andb
xor
int
cltd
sti
mov
leave
sbb
sbb
inc
js
and
cmp
inc
cli
sbb
into
jb
adcb
mov
push
insl
mov
sbb
pop
sbb
icebp
cmpsl
loope
sub
fisubl
and
xor
js
out
fdivr
movb
jmp
pop
lds
cli
scas
jne
or
cs
push
je
xlat
dec
pop
fistps
add
xor
cmp
mov
les
and
in
add
sbb
pop
mov
ljmp
lods
adc
sbb
mov
jle
fiadds
jae
jb
sbb
aad
jle
mov
fmuls
and
sbb
out
idiv
jmp
add
mov
jmp
sub
insl
lea
add
sub
fstpt
and
das
xchg
sti
pop
aam
mov
sbb
push
lret
in
ss
sub
call
aam
dec
in
xor
mov
or
or
insl
push
outsl
push
xor
idivl
aaa
adc
dec
or
test
test
out
movsl
leave
xor
lret
xlat
cmp
test
sahf
sub
xchg
push
sub
cmpsl
out
inc
mov
aad
or
ficomps
sub
mov
or
and
mov
sbbl
fcoml
lret
xor
shll
lds
jae
movsl
orl
fsubrl
and
pop
xchg
adc
xchg
pusha
xchg
adc
mov
in
sahf
ret
shrb
ss
ja
push
ljmp
jle
and
jae
push
cmp
sub
ds
test
icebp
mov
test
call
mov
outsb
mov
cld
xor
movsl
imul
mov
add
enter
pusha
adc
or
xor
out
mov
ss
add
mov
insb
xchg
and
fisubrs
std
ret
cmp
stc
sub
jnp
jle
push
leave
ret
mov
dec
mov
pop
addps
imul
and
xor
jl
push
fldcw
xor
daa
pop
cmp
mov
dec
push
xchg
mov
push
out
repnz
and
push
outsb
adc
dec
popf
mov
pop
mov
xorl
aaa
lods
movsb
rclb
sub
addl
cld
in
sub
pop
xchg
ss
or
or
pop
dec
mov
jbe
nop
orb
js
cmp
cmpsb
leave
push
push
lret
test
xchg
jge
push
push
sbb
adc
aaa
jmp
jno
fisttpll
hlt
jo
lahf
pop
push
xchg
jb
enter
push
push
adc
fcomi
add
shrb
ficoml
mov
xlat
adc
shlb
rcrl
mov
add
shl
in
jae
pop
int
add
inc
jno
mov
xor
cmp
in
clc
lea
ret
xchg
jo
popa
insb
sahf
ret
shl
adc
std
das
add
mov
dec
lods
mov
mov
cmc
andl
int
adc
cwtl
test
sub
mov
push
jbe
xchg
dec
das
mov
int
imul
in
out
xor
jns
in
and
sbb
notb
dec
aam
mov
mov
jecxz
xchg
mov
repz
movsb
in
xorb
aam
fcomi
push
movl
mov
adc
jns
mov
rcrl
mov
jo
push
cld
xchg
mov
or
lcall
inc
shlb
cwtl
sub
add
mov
push
push
in
lahf
and
stc
imul
pop
mov
cmp
cli
sbb
mov
sub
xchg
jle
test
cltd
cmp
adc
xor
lret
xor
cmp
jl
mov
sub
push
ret
sub
test
aaa
adc
or
rolb
aas
inc
sub
dec
jne
and
sti
rcr
mov
mov
repz
jne
cs
push
shl
call
cmp
pop
bound
sahf
mov
arpl
mov
pop
or
jbe
push
push
mov
push
sbb
cmpb
inc
add
add
nop
out
sbb
mov
pop
arpl
mov
ror
xchg
into
pushf
mov
xor
push
adc
mov
jnp
mov
test
dec
js
outsl
sbb
inc
icebp
xchg
in
scas
mov
sti
jo
xchg
cmp
dec
hlt
aas
cmpsl
in
lret
cmp
aaa
scas
cld
mov
lcall
js
scas
jmp
repz
xchg
add
in
jo
or
xchg
xchg
mov
insl
data16
push
or
add
jg
push
faddl
fsub
sahf
xor
mov
sbb
aad
fwait
push
sub
lcall
fadd
sub
das
xchg
bound
rolb
adc
shl
sbb
adc
inc
or
cmpb
mov
sub
outsb
lcall
subl
and
xchg
jge
outsb
pushw
dec
mov
dec
cs
add
aas
lahf
stos
push
int
dec
mov
decb
xchg
hlt
mov
sub
stos
push
ja
fdivr
imul
jmp
and
outsl
mov
pop
roll
jmp
shlb
in
movl
xor
dec
mov
mov
push
and
popa
stos
ret
icebp
push
outsb
dec
pop
mov
inc
add
dec
or
mov
push
stos
pop
cwtl
adc
icebp
mov
push
aas
arpl
adc
popf
jle
dec
cmp
cmp
negb
adc
mov
sub
mov
pop
in
dec
test
fldl2e
shlb
xchg
and
popa
pop
daa
sub
adc
sbb
sbb
mov
pop
mov
bound
rcrb
fnstsw
xor
pop
shlb
js
repnz
aam
lahf
int
sub
ljmp
xor
mov
out
mov
adc
inc
and
in
es
inc
jne
mov
xchg
mov
xor
sub
mov
ss
xor
je
cmp
out
fdivrl
pop
pop
imul
push
or
addr16
xchg
enter
cmp
loopne
cmpl
int3
adc
testl
pop
stos
adc
stos
adc
push
xchg
lds
testb
std
lret
sub
jp
movsl
aad
in
insl
jmp
test
roll
jbe
cmp
jb
insl
out
outsb
cmp
or
pop
imul
lahf
and
testl
cmp
scas
cmp
shl
in
pop
cli
jecxz
inc
xchg
clc
jp
or
mov
xchg
iret
int3
xor
xor
imul
xor
xchg
outsb
fdivl
out
sub
shll
xor
addr16
leave
into
cmpsb
mov
push
push
ret
ljmp
je
out
dec
cs
mov
fiadds
stc
out
call
mov
push
mov
adc
dec
lods
inc
mov
push
sbb
and
pop
cmc
ret
jmp
dec
popl
or
jb
or
icebp
mov
mov
popl
lods
mov
xchg
testb
aam
iret
push
mov
insb
xchg
loope
out
call
in
xchg
loopne
clc
pusha
fcmovb
jbe
sub
bnd
lret
test
mov
rol
into
pop
lcall
jbe
bound
xor
jp
mov
mov
sub
or
call
out
dec
push
jmp
in
shlb
sbb
pop
add
xor
repnz
xchg
andl
xor
fptan
push
int3
adc
adc
sti
cmp
movsl
fdivs
popa
mov
jp
push
cmpsl
ja
sub
jl
and
int
or
repz
push
sub
das
test
fidivrs
mov
call
outsb
pop
jmp
or
fs
mov
sbb
push
add
cli
shl
aam
adc
lods
jno
mov
in
leave
push
inc
inc
pop
loope
movsb
pop
jb
inc
aam
add
arpl
out
dec
mov
lds
aam
stos
ret
aas
cmp
in
test
aam
shrb
mov
aad
xor
test
in
mov
lahf
xor
scas
mov
jl
in
add
xchg
mov
ja
int
js
movsb
aas
test
cmpsl
test
jbe
hlt
mov
insl
out
sbb
movsb
sub
test
and
out
xchg
lret
inc
push
sbb
ja
pop
scas
dec
xor
jl
jmp
in
fidivs
adc
sahf
adc
push
in
mov
lds
gs
sbb
sbb
or
jae
enter
jns
out
test
mov
shll
inc
imul
or
sbb
cs
dec
and
add
push
clc
mov
ljmp
mov
es
mov
mov
jge
sub
rcrb
out
insl
sub
inc
ljmp
aas
mov
xlat
xor
jle
fwait
divb
bound
push
sbb
out
in
in
sbb
shl
mov
mov
lods
test
xchg
outsb
push
cmp
or
clc
xlat
xchg
xor
mov
pop
or
les
loopne
scas
int3
movl
cld
mov
and
outsb
loop
lret
call
xlat
pusha
jl
xchg
or
mov
jnp
fs
in
stc
jne
in
sbb
dec
xchg
mov
sbb
jl
sbb
adc
pop
sbb
rorb
daa
addr16
dec
push
inc
cs
test
aas
out
prefetchwt1
dec
ja
fistpl
pop
cwtl
addr16
mov
mov
xchg
push
jne
jns
and
outsl
stc
mov
scas
sub
inc
push
addr16
out
imul
inc
orl
adc
push
xchg
sub
das
xchg
pop
cs
cmp
test
fcomi
mov
jecxz
lds
cltd
sbb
xchg
pop
fistpll
int3
sbb
gs
jbe
and
rcll
adcl
jb
pop
pop
push
or
push
inc
mov
stos
shll
jns
sub
xchg
imul
jne
lahf
inc
push
cmp
jmp
pushf
inc
mov
lret
test
pop
jmp
push
call
outsl
pop
nop
into
cmp
mov
cltd
enter
inc
jmp
push
xchg
test
pop
dec
push
cmc
lcall
icebp
neg
dec
subb
imul
inc
cld
inc
sbb
cmp
adc
sbb
jp
mov
jmp
repz
popa
jns
xchg
cmp
dec
imul
scas
ja
adc
adc
imul
movsl
cmp
sub
inc
lahf
push
add
jno
insl
mov
cmc
ja
add
push
add
cmc
out
push
mov
test
xor
xlat
xor
jne
cmpb
push
ss
mov
sub
pop
sub
ds
xlat
push
fucomi
and
lcall
add
ss
shrl
mov
pop
fcomp
push
add
cmp
jle
sahf
xchg
clc
push
dec
sti
ret
or
outsb
add
or
or
out
sbb
arpl
cs
inc
jge
sub
sub
xor
mov
dec
jg
xchg
lcall
mov
out
adc
pusha
test
mov
call
or
repnz
in
ljmp
inc
fnstcw
push
hlt
subl
clc
add
decl
std
sub
sbb
xchg
leave
mov
mov
dec
adc
jns
loopne
arpl
mov
mov
add
clc
movsb
inc
add
sub
notl
pop
inc
lahf
mov
inc
cmpsb
inc
adc
xchg
push
and
and
fs
shll
mov
les
arpl
mull
ret
pop
scas
jg
cltd
jecxz
icebp
hlt
pop
pop
icebp
pop
ret
xchg
pop
cmp
test
pop
mov
sbbl
and
xchg
mov
add
or
pop
insl
mov
jmp
adcl
addr16
aaa
loop
sahf
int3
scas
lds
mov
shrl
rcll
test
or
adc
inc
xchg
sub
xor
aaa
push
mov
xchg
add
lret
cmp
adc
inc
dec
push
fimull
sub
sub
mov
jge
xlat
pop
fisubs
shll
cmp
sbb
loopne
pop
fistl
sbb
jle
push
aaa
std
sub
insb
mov
sbbl
vcomiss
xchg
mov
xchg
mov
aam
inc
sub
dec
popf
inc
lahf
xchg
aas
add
lods
rorb
or
jne
lcall
xlat
jbe
int
rcrl
add
cwtl
out
outsb
push
mov
popa
jne
cmp
add
xor
jp
in
iret
sti
aam
push
test
ret
xchg
lea
push
or
inc
out
movsl
xor
stos
xor
xor
cld
fwait
push
insl
jae
mov
cmp
and
jge
repnz
fisttpl
test
seto
lret
push
gs
adc
sub
pause
push
jmp
dec
inc
sub
mulb
ret
and
mov
js
data16
and
imul
mov
inc
push
mov
out
mov
mov
or
sub
popa
or
or
dec
lcall
mov
dec
push
inc
shl
pop
lods
lret
dec
sbb
icebp
loope
arpl
fs
dec
and
rol
mov
and
fidivrs
cli
xchg
push
jg
adc
add
inc
insl
pop
jg
inc
iret
js
gs
shl
sahf
push
add
push
mov
lret
cwtl
add
mov
jecxz
xchg
out
into
and
sub
in
or
in
and
pop
mov
inc
push
idiv
clc
mov
cld
xchg
rcll
jo
cmc
adc
cli
cmpsb
fisttps
notb
adc
js
and
mov
idivl
popa
jmp
test
out
lds
mov
fwait
lahf
fidivrl
cmpsl
insl
cs
mov
mov
fdivs
xchg
push
out
in
insl
fisubrl
lret
dec
movsl
dec
push
insl
fidivrl
xchg
es
pop
push
cmp
out
mov
sbb
cmp
lds
push
pop
cmc
cmp
jge
push
jge
cmp
pop
or
push
mov
je
sti
rcrb
xor
xor
test
and
and
cmc
mov
xchg
or
xchg
mov
and
sti
cs
mov
out
int
iret
ds
cld
stc
addr16
pop
inc
imul
lahf
test
scas
sub
aaa
sub
les
shl
in
ret
pop
jmp
push
pop
sub
fdivrs
push
fisttpll
pop
mov
jmp
inc
lods
sbb
stc
or
daa
out
popa
lcall
shlb
imul
mov
loop
lock
hlt
pop
and
mov
loope
cmp
test
pushf
push
ficomps
aas
add
sbb
inc
jle
iret
mov
cmp
arpl
jmp
popa
cmp
jno
sub
pop
rorl
das
daa
iret
inc
add
jle
jmp
sti
xchg
outsl
pop
notl
ret
sub
int3
bound
xchg
xchg
mov
notb
mov
mov
popa
jl
add
movb
fdiv
cld
mov
lcall
shrb
in
and
push
and
push
sbb
jmp
and
popf
and
leave
inc
pop
sahf
mov
sub
stos
and
lock
or
xor
xchg
fistps
scas
mov
shl
shlb
push
mov
adc
lock
daa
adc
cmp
cld
leave
movsl
mov
add
leave
jle
inc
mov
pop
mov
mov
pop
bound
stc
inc
mov
pop
in
es
mov
fisubl
ja
push
sub
and
or
pop
and
lock
xor
inc
repz
mov
cmpb
sbb
jecxz
adc
faddl
xor
xchg
arpl
stc
imul
sbb
cs
pop
popa
mov
out
addr16
insb
js
or
pusha
in
shlb
push
je
test
dec
test
pop
fsubl
xor
movsb
sub
jae
pop
sbb
push
in
pop
test
xchg
mov
sahf
xor
fcomps
cmp
xor
repnz
sub
ds
push
cmp
dec
push
fisttpll
mov
push
jae
dec
inc
jno
mov
clc
push
inc
dec
add
sti
sub
jo
push
xor
cmc
mov
pop
mov
sbb
add
push
mov
cmp
pushf
push
loopne
or
and
iret
cld
sbb
xchg
dec
test
or
inc
test
pop
pop
mov
ficompl
mov
cltd
or
xchg
jecxz
mov
sbb
loopne
pop
xor
movsb
pop
jle
push
push
inc
rclb
in
imulb
insb
cmp
adc
pop
cmc
pop
adc
mov
pop
pop
inc
scas
gs
in
mov
adc
cltd
imulb
xor
or
stos
test
stc
add
xchg
inc
sarl
dec
jmp
sub
lret
out
pop
rcrb
adc
mov
jb
xor
sbb
mov
call
jns
lods
cmc
mov
sub
js
lock
xchg
push
push
mov
cmp
imul
aam
cs
iret
pop
jge
sahf
sub
adc
xlat
jo
pop
dec
in
dec
dec
sbb
dec
or
jp
ret
insl
aas
bound
clc
pushf
scas
adc
jmp
das
adc
outsb
int
test
mov
int
scas
adcl
cld
push
popf
lock
sub
inc
xor
mov
mov
je
int
pop
loopne
popf
xor
sti
loope
jo
dec
mov
int
jp
aaa
and
xchg
mov
sbb
mov
dec
adc
outsb
mov
push
jo
or
sub
xchg
or
mul
pushf
mov
inc
adc
adc
ss
ret
gs
testl
sub
andb
and
std
xchg
dec
xchg
popa
adc
idiv
ja
fdivrs
mov
pcmpeqw
imul
aas
fldl
inc
lods
bound
xor
add
jmp
int
xor
xorb
add
testl
mov
add
nop
enter
sbb
and
mov
cli
sarb
movsl
adc
pop
xlat
jno
adc
dec
cmp
xchg
testl
cmp
dec
mov
jbe
push
loope
pop
int
adc
cmp
cmp
mov
and
cmp
test
iret
add
mov
cld
xchg
adc
or
loop
mov
mov
xlat
sti
in
mov
addr16
mov
or
popf
inc
sbbb
pop
imulb
cmp
lcall
jns
in
rcll
mov
les
inc
and
pop
scas
sub
xor
not
call
mov
mov
cli
mov
loope
xchg
aas
jmp
push
xchg
lahf
jge
std
xchg
pop
sbb
jp
loopne
or
mov
aad
test
mov
sub
movsl
aas
and
pop
pop
lcall
enter
add
inc
sub
das
loopne
dec
xchg
push
cmc
jb
rcl
or
cmpsl
jns
aad
pop
gs
dec
pop
into
hlt
xlat
jmp
leave
fnstsw
nop
gs
push
data16
mov
cmp
xchg
adc
addb
out
aas
imul
mov
jae
fdivl
add
mov
imul
mov
xor
clc
test
jne
mov
sbb
push
adc
push
or
push
add
test
xor
fmull
mov
leave
xor
gs
adc
mov
mov
sbb
sbb
mov
xchg
push
push
mov
cmpsl
xbegin
sbb
jbe
dec
subl
or
nop
imul
cmc
cld
mov
mov
stos
push
jp
and
mov
lds
outsl
xor
push
xor
xor
icebp
popa
dec
jge
in
mov
inc
mov
testb
cmpsb
sub
add
jns
aas
mov
sub
cmp
pushf
dec
outsb
mov
lcall
addr16
and
dec
jae
cmp
outsl
jmp
pop
and
mov
jmp
outsl
jno
in
or
test
jmp
int3
cs
push
inc
inc
rcl
cmpsb
pop
rcr
testl
loopne
hlt
mov
outsl
cmp
lock
push
push
mov
adc
std
inc
xchg
jg
lahf
jnp
mov
cmpsl
int
dec
adc
dec
mov
xchg
popf
push
sbb
pop
xchg
iret
push
movsl
cmp
mov
js
call
roll
jl,pt
aad
jb
push
and
testl
mov
out
decb
push
scas
es
cmp
cmp
xor
lods
sarb
push
out
fidivrl
add
add
or
cmp
rolb
xchg
ljmp
dec
cmp
test
pushf
dec
cltd
int
shr
cmpsl
mov
push
pusha
lods
iret
xor
int
call
ret
out
subb
mov
pop
shr
xor
xor
xorl
pushf
pop
mov
jns
int
mov
xor
mov
xor
push
cmp
and
mov
ds
lods
push
sub
out
mov
insb
loop
mov
pop
sbb
ss
wbinvd
push
pop
dec
mov
add
in
pop
out
adc
or
mov
sbb
aaa
ds
mov
pusha
sbb
test
pushf
jns
mov
jle
rcll
sub
test
add
mov
call
in
pop
popf
xchg
dec
mov
jo
xchg
cmpsb
push
mov
xor
dec
shlb
push
add
mov
mov
pop
fisubl
jl
lea
insb
or
mov
fisttpll
fsubs
outsl
or
test
cmp
arpl
pusha
pop
in
adc
lock
out
enter
mov
clc
fcoml
mov
push
mov
jge
out
pop
scas
and
pop
ja
xor
jecxz
movsb
push
clc
stos
pop
mov
xchg
cli
mov
rorb
repnz
mov
mov
data16
pop
mov
cli
mov
inc
lahf
pushf
fs
das
jo
stos
sbbb
inc
lock
das
pop
xor
sbb
in
mov
rolb
or
les
mov
lcall
and
dec
ret
int
and
out
pop
out
lods
int
sbb
pop
fcmovne
mov
rcl
bound
notb
int
inc
cmp
and
cltd
lret
outsb
dec
xlat
popf
gs
mov
mov
pop
call
sbb
xor
stos
loop
sub
rorb
dec
xor
ss
mov
movsb
and
shlb
test
stos
inc
in
mov
push
imul
pop
pusha
test
iret
lret
outsb
add
scas
idivb
ss
outsb
loopne
jnp
sub
scas
add
xchg
in
loop
xor
or
out
push
sahf
sub
lock
cld
push
cmp
retw
mov
xor
mov
mov
clc
mov
lods
pop
inc
mov
je
adc
nop
add
xorb
fs
loop
ret
inc
faddl
clc
xor
xchg
adc
fildll
cmp
xor
mov
in
jns
cmp
push
push
xchg
inc
add
in
push
addr16
stc
inc
mov
insl
or
dec
mov
cmpsl
cwtl
leave
xchg
push
push
push
xor
decb
inc
xchg
dec
clc
jge
cltd
inc
outsb
stc
and
out
inc
mov
lods
shl
lods
loopne
popa
insl
adc
sti
mov
outsb
mov
xor
mov
add
or
pop
sub
inc
dec
inc
dec
add
roll
cmp
dec
xchg
loopne
in
cwtl
sub
movsl
jmp
or
shll
push
or
push
bound
fisubrs
cwtl
xchg
xor
sbbb
sbb
xchg
loop
rorl
sbb
out
cmpsb
cmp
pop
rcrb
outsb
repz
mov
sbb
int
dec
adc
sarb
sbb
jg
mov
mov
clc
cmp
popa
dec
or
pop
test
nop
insl
push
mov
js
int
test
pop
movsl
xchg
sahf
add
rep
cltd
mov
jns
mov
cmp
lahf
and
fcmovbe
jmp
aas
pop
mov
int3
out
into
ja
enter
scas
push
loop
jne
xor
inc
or
mov
push
lods
fdivrl
pop
in
pop
cwtl
mov
jmp
sub
pop
xchg
mov
popa
test
dec
pop
sbb
and
sub
ds
sbb
into
add
out
mov
mov
dec
push
or
call
xor
mov
dec
push
adc
xor
into
addb
pop
mov
cmc
sbb
femms
xchg
mov
jno
arpl
mov
in
daa
cmp
adc
xor
out
arpl
pop
adc
pop
jecxz
dec
inc
scas
popa
jno
fsubrp
mov
loop
mov
add
and
mov
shlb
xchg
cli
fldt
mov
cmp
mov
in
ds
daa
sbb
mov
hlt
cmp
cmp
mov
pusha
dec
dec
inc
sbb
cmp
fnsave
push
xchg
les
mov
insl
aaa
popf
cli
add
and
inc
jmp
cmp
insb
shlb
xchg
addl
icebp
mov
sub
fistpll
mov
mov
das
adc
aaa
pop
ficompl
push
sbb
cmp
daa
lcall
fwait
sbb
sbb
jns
pop
js
das
sbb
xchg
inc
les
mov
mov
jge
sub
popf
aas
mov
mov
dec
xchg
add
sbb
mov
pop
imul
in
lcall
test
push
pop
jo
fidivl
push
rcrb
jg
adc
sbb
jbe
dec
inc
ljmp
pop
pop
xchg
test
test
xchg
in
cmpsb
mov
pop
push
scas
mov
pushf
insl
or
or
int3
xchg
test
sub
jne
dec
es
pop
xlat
pop
imul
xor
xor
out
jmp
sbb
or
xchg
cmpsb
lea
ret
minps
xlat
jge
int
and
es
xchg
pop
xchg
ss
shll
xor
mov
push
cmp
push
pushf
cmp
jge
mov
out
pop
sbb
lcall
mov
frstor
add
sbb
xchg
out
stc
and
push
xchg
pop
fmull
int3
adc
sub
ficompl
jbe
stos
cmpsb
push
in
inc
cmpsl
jl
sbb
js
xor
xchg
lret
dec
int
inc
adc
xlat
cwtl
xchg
mov
mov
jnp
sarl
jno
mov
cld
and
cwtl
leave
mov
adc
pop
mov
or
add
add
jo
jbe
and
cmp
xchg
pusha
inc
loop
int
ljmp
insb
jns
sbb
inc
sbb
xor
fsubs
packsswb
inc
add
push
pop
dec
stos
insb
jno
dec
mov
xchg
mov
fstps
scas
shll
push
mov
arpl
pop
jae
jb
lods
lahf
fwait
mov
rcrb
orl
bound
fwait
scas
scas
mov
iret
or
cmp
mov
into
jo
cwtl
xchg
adc
test
int3
mov
lahf
inc
les
rcl
adcl
sub
sbb
fstpl
lods
hlt
popa
pop
out
add
cs
test
adc
daa
cmp
dec
push
cmpsl
jl
fdivrs
lret
push
sbb
xor
das
mov
imul
mov
in
pop
mov
mov
mov
pop
adc
cmp
ds
jne
lret
pop
call
pop
xchg
push
out
fildl
mov
jp
xor
mov
push
js
jnp
pop
xchg
jno
in
cmp
stos
cmp
mov
dec
cmc
shrl
jno
cltd
push
enter
fldenv
adc
leave
mov
out
mov
jne
test
sub
or
mov
push
loopne
cmp
in
jmp
push
call
imul
push
jb
mov
dec
cmpb
cs
adc
sub
jg
sti
mull
sub
sub
mov
popa
in
add
sarl
push
cmp
enter
add
int
daa
cltd
mov
enter
inc
cmpsb
mov
mov
cmpsl
pop
dec
xchg
pusha
adcl
movaps
add
adc
loop
in
inc
add
mov
add
push
les
add
mov
divb
add
movsb
sub
loope
xchg
pop
scas
jmp
inc
cld
pusha
rcll
dec
mov
mov
jge
push
xlat
push
lds
push
aam
dec
ljmp
sbb
jns
fsub
aam
jge
dec
fsubrl
loope
cmpsl
fwait
lods
mov
movsl
mov
fsub
adc
repz
pop
mov
dec
sbb
mov
sbb
loope
test
jns
out
lcall
adc
push
loop
testb
mov
in
cmpsl
mov
out
das
mov
cltd
js
jnp
imull
push
ja
pop
lods
insb
aam
rcrb
mov
pop
ljmp
imul
insb
pop
and
outsb
mov
xchg
mov
pop
xlat
adc
leave
mov
dec
movsl
out
dec
dec
jl
lods
and
lock
mov
jle
dec
dec
movzbl
das
inc
jno
mov
mov
into
mov
fwait
lds
jb
out
and
cmc
jo
call
loop
mov
imul
jne
pop
mov
negb
fstpl
outsb
add
int
sbb
inc
adc
jecxz
xor
in
pop
loopne
mov
cmpsl
inc
sub
insb
shlb
push
dec
rolb
imul
xchg
mov
jo
cwtl
mov
fsubrl
mov
mov
jle
in
bound
xor
mov
hlt
cmp
ror
rclb
push
mulb
xorl
pop
mov
jnp
or
dec
add
dec
nop
lahf
dec
push
lret
dec
add
sbb
xchg
leave
dec
rclb
dec
and
fsts
push
decb
ret
cmp
xchg
and
xchg
mov
bound
mov
in
in
push
adc
out
fidivl
or
cmp
test
xchg
faddl
mov
xchg
adc
mov
pop
out
inc
xchg
push
lret
pop
jbe
inc
sbb
jnp
pop
insb
jg
lea
and
mov
repnz
test
rorb
mov
pushl
ds
jns
lret
adc
shlb
cmp
xchg
xchg
das
shlb
and
pop
stos
icebp
push
fidivs
loop
cmp
sbb
imul
fsubrs
cmpsb
fsubrs
pop
ss
out
hlt
sbb
pop
sub
roll
stos
fld1
iret
adc
cmp
pop
iret
mov
push
xor
aaa
and
in
pop
std
mov
push
and
sub
cwtl
adc
adc
push
mov
pop
mov
push
lea
lods
sbb
or
adc
roll
add
and
jb
cmpsl
push
lock
pushf
popf
push
fwait
loope
xchg
icebp
movsl
add
addr16
dec
jg
dec
mov
lods
mov
test
ljmp
fwait
test
push
adc
pushl
jg
shr
sbb
loope
mov
jle
loopne
push
lcall
aam
lods
jecxz
stos
jl
adcb
lock
rorb
loope
mov
aaa
add
xor
popf
ret
gs
cli
rorb
stos
into
lcall
sbbb
pushf
ret
fldenv
cmp
cmpsb
jge
ss
out
mov
jmp
out
ja
mov
and
and
aas
test
scas
mov
or
int
insb
sbb
mov
jnp
out
imul
popa
lock
into
or
mov
mov
ret
call
in
and
mov
faddl
pop
lock
dec
int
in
dec
mov
xor
sbbb
xor
lods
cmp
pusha
dec
daa
ljmp
pushf
jge
cmp
rcl
lret
xlat
and
ja
push
popf
pop
scas
enter
pop
mov
loop
add
jmp
popf
jns
or
cmpsb
scas
les
mov
xchg
les
sbb
and
test
cmp
fscale
test
hlt
inc
out
imul
inc
cmp
dec
mov
test
dec
es
cli
sbb
add
push
imul
je
or
inc
ja
add
sbb
lea
addr16
lea
inc
inc
mov
pop
add
mov
enter
jnp
sbb
insb
sbb
pop
pop
xchg
je
jmp
cltd
push
pop
adc
test
mov
gs
aaa
jg
dec
and
iret
sbb
xchg
mov
scas
or
in
add
or
jg
imul
sub
iret
imul
out
or
aaa
aas
inc
push
cs
adc
leave
fstpt
lock
pop
insb
mov
mov
mov
movsl
sbb
movntps
imul
xchg
or
div
hlt
repnz
lcall
gs
jb
cli
and
ja
stos
mov
pop
into
sbb
push
jge
mov
pop
mov
xchg
fimuls
dec
rorb
mov
push
xlat
negl
jb
sbb
int
mov
xchg
pop
cmpsb
push
sub
mov
das
adc
inc
jle
mov
xchg
fisubrs
cmp
ficompl
xor
adc
movsl
lea
and
iret
movsb
cmp
fistpl
mov
xchg
cmp
mov
xor
ja
or
int
pop
cmp
cmp
pop
fisubs
sbb
notl
sbb
ja
mov
xchg
or
mov
scas
cld
mov
jne
in
mov
mov
lea
inc
pop
sub
push
imul
mov
ljmp
push
xlat
dec
les
pop
inc
popf
sarl
mov
dec
leave
fcoml
pop
call
and
ficoml
js
in
pusha
mov
mov
int3
inc
in
fprem1
iret
mov
stos
inc
gs
out
pop
mov
xor
sub
test
nop
cmp
rcrl
fimuls
out
or
loope
xchg
pop
iret
fwait
dec
cmpb
xor
lcall
inc
mov
iret
add
xchg
inc
pop
and
inc
inc
jecxz
outsb
rcr
test
pusha
addl
sub
rolb
rcl
aas
stos
add
scas
push
dec
mov
pop
jno
or
jecxz
or
mov
test
mov
and
adc
mov
ljmp
shlb
lds
mov
xchg
sub
jns
pop
pop
jle
mov
push
pop
arpl
jns
add
cmp
dec
test
lock
vpaddusb
lea
xor
in
jb
test
scas
push
in
jp
fbld
out
fists
mov
pop
push
xchg
dec
stos
aad
push
xor
jno
xor
or
mov
hlt
movsl
mov
dec
aam
ljmp
lock
ret
loop
mov
or
sbb
adcl
mov
js
push
mov
fisubs
xor
or
nop
fldl
pop
mov
push
rorb
test
or
jmp
pop
push
mov
aad
mov
sbb
mov
orb
dec
inc
ficoms
mov
js
ja
dec
hlt
rol
into
movsb
data16
cvtdq2ps
ds
xchg
out
dec
inc
je
sarl
xor
dec
jae
xor
lods
push
hlt
push
mov
mov
mov
movsl
sub
mov
lock
aam
sbb
cmpb
cmpsb
inc
mov
popf
subl
add
xlat
lea
loope
inc
inc
add
hlt
xor
dec
stos
iret
cmpsl
and
cmpsl
fcoms
push
xchg
adc
notb
lret
xor
inc
mov
inc
test
popf
outsb
loop
clc
xchg
dec
js
xor
mulb
xchg
bound
push
in
pop
repz
mov
pop
xchg
jb
pop
or
test
push
divl
xor
sbb
and
push
add
add
dec
imul
sbb
cmpl
mov
int3
pop
fidivl
pop
add
add
pop
mov
imul
mov
push
add
cwtl
pop
xchg
mov
ret
xchg
in
test
add
popf
xchg
iret
cmp
repz
call
sub
js
hlt
mov
in
loopne
in
cmp
out
cmpsl
dec
out
lock
mov
jns
rcl
pop
ja
divl
pop
jmp
insl
outsl
sub
sbb
inc
mov
and
lods
lcall
or
aaa
dec
fsubrl
xor
mov
dec
cs
clc
sbb
les
pushw
in
scas
pop
jl
addr16
mov
pop
mov
gs
scas
icebp
xor
xor
mov
std
or
cmc
sub
jmp
divb
add
cmpl
mov
out
sbb
mov
out
sbb
add
add
cmpsb
js
call
je
adc
push
adc
je
cmp
das
push
rcll
les
and
shlb
lods
stos
scas
xchg
addr16
int3
dec
test
je
shlb
sub
or
xlat
iret
test
jp
fucomp
or
xor
dec
idivl
nop
std
xchg
sbb
xlat
inc
rorl
shr
mov
rorl
insl
add
push
and
push
divb
xchg
push
adcb
pop
mov
bound
mov
icebp
test
dec
sub
mov
sub
adc
push
add
xor
fwait
inc
dec
mov
vaddsubps
mov
out
jge
out
pusha
xchg
lcall
ret
and
dec
hlt
int3
popa
pop
gs
xorb
xor
cmp
add
jb
cld
testl
sbb
sbb
jbe
push
adc
push
pop
sbb
cmc
pop
push
gs
pop
mov
dec
pop
cmpsl
sbb
push
test
negb
mov
jns
loop
cs
jne
push
mov
les
sub
cmpsl
adc
pop
add
mov
push
jge
pusha
rclb
dec
fwait
into
mov
aaa
mov
jns
sti
out
pop
push
sarl
loopne
inc
daa
mov
cmp
xchg
and
aad
mov
xchg
xor
clc
jbe
lods
mov
xor
pusha
inc
push
push
fwait
int
in
leave
and
jg
and
and
lahf
mov
lret
jbe
sub
icebp
scas
mov
lock
or
inc
inc
fidivs
jp
push
stc
sub
stos
icebp
jne
push
enter
mov
movsl
gs
push
scas
lret
or
mov
cmp
and
add
or
mov
jle
aad
cmpsl
ds
xor
pushf
xor
pop
fmuls
cmpsl
ds
jmp
dec
push
cli
push
inc
imul
xchg
addr16
dec
jmp
out
mov
cmp
mov
cwtl
jo
push
cmc
movsl
int3
fbstp
push
push
fnstcw
mov
int
sub
push
mov
and
cmpsb
stos
mov
out
cltd
rcrb
jnp
mov
hlt
cmp
pop
rcll
xchg
das
mov
stos
lods
mov
rcrl
mov
and
mov
push
loop
mov
lcall
pop
mov
shl
nop
add
add
call
repnz
lods
xor
je
dec
push
push
push
lods
in
popf
and
jnp
inc
ror
dec
pop
pop
and
loop
xchg
fs
popa
adc
adc
fwait
call
loope
push
shrd
add
and
stos
sub
push
dec
xchg
mov
in
hlt
push
test
inc
mov
cld
inc
pop
sub
push
sbb
pop
bound
pop
adc
popf
mov
outsb
push
cwtl
test
sub
mov
aas
cmp
and
ret
jo
xchg
push
dec
cwtl
jg
mov
add
sub
adc
fsubrs
push
inc
adcb
inc
pusha
stos
cltd
or
popa
push
insb
and
je
fs
dec
push
rcrl
mov
lds
push
or
pop
fildl
mov
jns
shl
xor
mov
sub
js
mov
or
cs
or
inc
imul
xor
adc
xor
cld
jl
sub
outsl
mov
pop
rcl
mov
arpl
sub
divl
inc
sub
adc
repz
popf
call
adc
or
sub
pushf
ret
jle
imul
xchg
push
xor
jnp
cmpsb
js
mov
push
fs
mov
lcall
jmp
pop
sbb
or
pop
dec
decb
mov
mov
das
repnz
push
test
mov
jae
mov
sbb
leave
sbbl
inc
fildll
imul
mul
repnz
xchg
aas
push
adc
fimuls
lods
push
inc
jmp
cmp
pop
roll
push
in
ljmp
push
call
or
sub
or
jp
lret
sbb
xor
out
jae
xorb
sub
lahf
aad
mov
mov
pop
push
xor
bound
inc
outsl
enter
inc
push
leave
test
mov
js
pop
lret
in
aas
or
mov
call
mov
cltd
mov
pop
mov
cmc
clc
cmp
sub
xor
or
xchg
shlb
mov
loope
xchg
fs
pushl
xor
outsb
sub
and
out
inc
jo
aas
mov
cmpsb
imul
jp
loope
mov
adc
gs
pop
or
sbb
pop
movsb
int3
add
scas
sbb
mov
mov
in
inc
les
das
inc
inc
dec
push
enter
shlb
pop
jp
cli
or
lods
mov
jle
sbb
insl
mov
add
out
dec
pop
lock
xor
and
jb
add
dec
push
cmpsb
mov
cmpsl
sbb
pop
push
adc
jge
and
inc
icebp
push
or
jns
sti
cltd
mov
pop
enter
mov
mov
jbe
xchg
inc
into
pop
mov
dec
push
cli
out
jne
jp
scas
inc
sbb
push
out
jp
les
ret
mov
into
or
or
adc
sub
in
loope
pusha
xchg
mov
data16
cmp
xor
add
out
aad
jb
push
fwait
mov
pop
sub
mov
cmp
je
or
in
adcl
mov
push
add
xchg
cltd
inc
jle
jecxz
movsb
push
mov
test
pop
sarl
lods
movsl
mov
dec
call
add
call
ret
ret
sub
sbb
movb
pop
loopne
ljmp
iret
in
jmp
data16
test
inc
pop
mov
outsb
xchg
mov
adc
lds
xor
lahf
jg
push
and
sub
das
insb
outsb
dec
fistl
out
imul
cmovnp
iret
dec
push
ljmp
imul
fmuls
scas
or
fisttps
pop
adc
test
in
xchg
pop
inc
xchg
jo
std
add
xchg
push
popa
cmp
lods
cs
pop
mov
lahf
out
dec
and
mov
xchg
arpl
push
push
lret
popf
cs
arpl
jle
jno
xorl
out
loopne,pn
orl
cmpsb
mov
adcb
cmp
inc
sub
fs
push
lock
jecxz
xor
cmc
outsl
test
add
push
inc
xor
sbb
jecxz
mov
pusha
adc
cmp
ret
js
out
push
sbb
nop
xor
stc
and
rcrl
inc
ret
sub
mov
incl
ret
push
inc
sub
fstpt
mov
mov
mov
mov
mov
cmp
out
push
jbe
mov
imul
stos
cmp
jne
les
and
jmp
test
xor
xor
nop
cmp
jecxz
xor
lcall
popf
scas
imul
jbe
cmp
xor
sub
mov
push
dec
hlt
cltd
dec
add
ss
sbb
add
mov
inc
lods
mov
push
and
fnstsw
xor
test
push
pop
dec
inc
jno
pushf
int
or
cs
sti
pop
sbb
jne
fdivrs
xlat
mov
jno
int3
mov
into
dec
dec
sub
clc
jp
dec
call
mov
dec
and
sbb
adc
sahf
mov
sub
pushf
test
cs
repz
mov
and
push
jge
sub
inc
sub
push
xchg
mov
js
jp
fisubl
jae
sub
sahf
hlt
adc
xor
jp
sbb
sti
pop
mov
testl
jb
adc
decl
xorl
lods
out
subl
mov
adcb
les
sub
xchg
xchg
cmp
xchg
cmp
fwait
xor
adc
push
mov
and
fwait
cwtl
cmpsb
mov
ss
push
fimuls
iret
cli
in
or
pushf
dec
mov
dec
add
movsb
jo
out
xchg
mov
adc
mov
pop
sbb
imul
dec
or
mov
jne
mov
mov
int
aaa
push
mov
test
outsb
sub
inc
pop
mov
adc
lcall
ss
je
pop
incl
dec
scas
mov
inc
add
dec
jecxz
arpl
inc
js
and
mov
rcr
iret
outsl
loop
xchg
lret
push
cmp
dec
and
jne
adc
jp
mov
mov
faddl
or
pop
filds
int
and
aaa
fwait
hlt
xor
mov
mov
ret
mov
mov
fisttpl
xor
pop
push
jmp
sub
pop
jo
data16
orb
inc
sahf
jl
scas
and
ds
cld
fucomi
addl
sbb
xor
xchg
sbb
mov
in
or
js
xor
gs
iret
pop
in
sbb
inc
popf
adc
and
cmp
lock
je
vmovd
jns
xlat
inc
add
sub
add
pop
in
test
gs
sbb
push
lahf
mov
aas
push
xor
das
push
std
stos
mov
dec
sbb
lahf
sbbl
mov
jmp
lret
jb
mov
jbe
es
jmp
push
pop
mov
jp
or
xchg
in
add
mov
aaa
aas
push
int
or
enter
push
pop
dec
xchg
sbb
rclb
xor
jo
lahf
mov
jns
movsb
loope
cld
mov
push
xorl
lods
cmpl
and
fwait
inc
out
xor
mov
out
inc
sbb
leave
mov
pop
pop
and
dec
add
lock
xchg
enter
clc
lcall
mov
sub
bound
fidivl
jno
fiaddl
stos
pushf
and
inc
lcall
mov
jno
add
cmpsl
jb
rcrl
movsb
test
push
arpl
enter
fnsave
fldl
pop
xor
dec
mov
or
sbb
inc
lahf
xchg
sbb
inc
imul
int3
test
fdivrs
outsl
sub
jp
std
imulb
sahf
aas
mov
insb
jb
lods
jl
jecxz
pop
and
mov
or
jl
push
cld
icebp
push
or
test
addr16
lods
inc
jbe
ss
jge
popf
out
sbb
pushf
lds
push
xchg
loop
mov
ljmp
ret
adc
push
jb
xchg
das
mov
sub
dec
fnsave
testb
lods
clc
int3
xor
and
xor
or
shlb
jbe
stc
jb
push
jge
or
daa
cmp
pop
cmp
sub
mov
outsb
mov
xchg
nop
popf
int
mov
daa
pop
sbb
dec
adc
sub
mov
add
cmp
mov
pop
int3
rol
fmuls
push
bound
jl
pop
mov
mov
xchg
or
or
dec
add
dec
sub
push
imul
adc
push
aad
ja
sahf
sbbb
mov
and
loopne
repnz
cmp
inc
mov
or
std
lock
sub
and
mov
sbbl
cli
mov
add
decb
add
aad
lea
cwtl
adc
sbb
stc
scas
out
dec
pop
aad
int
ret
repz
fadds
inc
mov
inc
jg
ds
adc
add
lds
xchg
scas
imul
subb
daa
mov
mov
dec
push
cs
lret
out
out
pusha
xchg
xor
xchg
outsb
pop
jmp
lret
subl
xchg
inc
or
mov
call
icebp
cmp
add
lock
xchg
js
ljmp
jp
jmp
mov
imul
outsb
testl
aad
fst
add
aam
add
and
je
test
mov
jno
xchg
scas
scas
jmp
add
and
xchg
push
push
jne
dec
jmp
xchg
jbe
stos
test
dec
pop
in
lods
jp
and
call
aas
mov
cmpsl
pop
jo
mov
mov
pop
and
xor
mov
js
outsb
daa
adc
lods
mov
test
scas
nop
cmp
outsl
int
push
push
mov
stos
inc
pop
rolb
and
pushf
mov
jb
loopne
fisttpl
pop
xchg
scas
pop
xor
hlt
mov
xchg
pushf
sbb
or
nop
jl
stc
sbb
xor
jae
and
cltd
cmpsl
stc
subb
adc
inc
mov
into
sub
lock
fisttpll
iret
push
sbb
jbe
daa
mov
mov
jp
dec
pop
mov
ret
scas
push
test
lret
adc
dec
jg
cltd
xchg
stc
push
mov
int
maskmovq
idivl
call
iret
shrb
dec
add
imull
inc
std
or
or
iret
test
testb
es
mov
bsf
sti
lock
popa
pop
jp
fnstsw
inc
stos
pop
add
ja
imul
xchg
and
mov
add
jg
in
cli
scas
popl
cmp
mov
sahf
fisubrs
sahf
mov
and
push
sbb
adc
movsl
push
pop
clc
or
dec
ret
fs
or
mov
add
enter
cmc
shr
movsl
and
cmpsl
pop
fmull
out
loop
add
out
inc
mov
inc
xchg
push
stos
mov
addb
push
ret
cwtl
and
insl
in
pusha
test
call
loope
stos
out
push
mov
cld
cmp
dec
test
insb
dec
and
adc
mov
or
aam
sahf
cmp
mov
push
roll
inc
and
int
dec
pop
dec
mov
dec
inc
mov
pop
inc
aam
cmp
mov
pop
out
mov
out
mov
shlb
xor
ljmp
in
xor
aas
mov
dec
pop
adc
cmpsb
arpl
ret
lds
add
movlps
mov
add
sub
jle
mov
cmp
cmc
mov
rcl
mov
lret
notb
jge
add
push
inc
xchg
jbe
pop
dec
int3
push
sbb
xchg
test
xchg
je
test
mov
mov
jmp
mov
repnz
xor
popa
xchg
jge
push
rorl
outsb
clc
popl
add
xchg
dec
repnz
adcb
add
lock
enter
aaa
fcom
fbstp
sbb
adc
notrack
and
bound
mov
ds
aas
mov
xchg
int3
cs
data16
call
js
sahf
mov
add
cmp
xchg
xchg
or
ficoms
push
lret
fldl
dec
jg
fisubrl
jo
and
out
incl
adc
lret
xchg
int
aad
repz
bound
dec
pop
and
dec
push
mov
xchg
sbb
in
iret
insb
in
or
rolb
scas
push
stos
loope
xchg
dec
dec
pop
inc
push
int3
jl
mov
out
jl
dec
pop
aaa
movsb
add
pop
aad
push
rorb
push
push
dec
inc
push
outsl
pop
movsb
push
insb
and
push
xchg
scas
inc
lea
push
loopne
mov
lret
mov
push
fistps
jecxz
pop
dec
pop
pop
jns
adc
dec
out
cli
sahf
fcomps
cmp
in
lds
mov
leave
test
and
pop
fs
or
xor
scas
icebp
jl
push
aad
and
pushf
daa
aaa
jno
xchg
fwait
pop
push
jge
and
stos
insl
xchg
das
xchg
out
or
adc
xchg
jmp
int3
pop
add
leave
inc
jl
cmpsb
lock
hlt
mov
data16
sahf
xor
jg
cvtps2pi
dec
pop
fbstp
xchg
sahf
rcll
cli
xchg
push
jnp
je
js
rol
adc
es
inc
jbe
push
insl
push
jecxz
test
inc
ljmp
add
or
mov
sub
and
mov
cmp
xchg
sbb
stos
jno
mov
lock
insb
pop
and
das
and
int3
push
cmpsl
and
lea
mov
and
gs
ror
push
xchg
sbb
sti
jl
dec
test
push
lcall
fwait
and
bnd
iret
cmp
or
insb
out
xchg
jae
pop
pop
add
lods
and
jb
pop
xchg
test
test
fwait
test
add
mov
bound
xchg
xor
adc
push
mov
fstps
xchg
dec
test
rorb
jl
and
popl
out
push
mov
mov
dec
sub
inc
popa
cld
push
adc
movsl
push
insl
lea
scas
ds
xchg
rorb
repz
add
pop
pop
in
push
push
mov
cltd
sbb
mov
jl
xor
es
into
rorl
sub
stos
je
sbb
cmpsl
pop
rcrb
jecxz
popa
movsb
mov
stos
push
iret
cwtl
roll
sbb
pop
jl
stos
cmp
xchg
fwait
sub
imulb
hlt
stc
inc
xlat
test
dec
jb
cmp
mov
jbe
lahf
shrb
or
sti
push
jb
mov
mov
sbb
repnz
adc
pushf
repnz
lahf
push
jl
sbb
dec
ds
adc
mov
mov
dec
int3
push
dec
mov
push
xchg
loopne
mov
dec
mov
cmp
mov
popf
les
or
pop
bsf
sahf
add
push
mov
hlt
push
decb
lret
mov
mov
dec
cmp
out
sahf
test
and
xchg
cmp
sarb
push
sbb
int3
stc
push
in
test
xchg
ja
jle
cld
pop
pop
and
popa
pop
or
or
mov
je
jae
mov
cwtl
and
adc
dec
pop
test
pop
pop
jb
fsubr
cmpsl
mov
sbb
arpl
xchg
xchg
popl
lret
lahf
loopne
int3
dec
mov
xchg
pop
or
mov
mov
jp
les
jae
inc
mov
xchg
mov
add
xor
sbb
mov
mov
sub
pop
push
cli
jmp
cmpsl
stos
pop
jl
imul
push
popf
push
je
cmp
ljmp
mov
push
inc
push
popa
lcall
es
out
sub
out
pop
lds
add
adc
mov
cmp
add
pop
sbb
inc
jno
and
insl
mov
fisubrl
gs
cli
xor
pop
pop
jp
leave
pop
and
sub
in
cmp
adc
xchg
ret
les
mov
sub
movsl
and
test
hlt
dec
rcl
xchg
pop
inc
add
gs
ja
adc
lods
and
loop
mov
mov
mov
aam
or
or
dec
pop
sahf
ds
ja
loop
mov
adcb
leave
jno
call
xlat
jp
lret
jg
in
pop
pop
cmp
pop
xor
push
mov
dec
mull
xchg
xchg
repz
mov
xor
jmp
pop
adc
jns
in
cli
mov
and
cmpl
jle
and
test
sbb
loop
movsb
es
xor
add
mov
fisubrl
and
pushf
jns
mov
fldl
pop
sahf
insl
cltd
lret
and
and
sbb
mov
aas
stos
ficoml
enter
cmp
inc
aad
cltd
lds
push
mov
lea
jo
cmpsl
loopnew
fnstsw
dec
pop
subl
aaa
inc
cmp
xor
and
push
ja
data16
rcrl
or
cwtl
dec
xor
sbb
pushf
push
lds
mov
out
cmpsl
jg
cwtl
cli
mov
or
jno
push
and
rorb
popf
xor
mov
push
mov
lock
lock
dec
adc
add
dec
lret
pop
ja
push
daa
in
jg
jo
ja
xchg
aas
xlat
scas
movsb
data16
mov
jecxz,pn
lea
rolb
and
pop
dec
sbb
pop
popf
out
daa
dec
jno
xor
fwait
clc
push
jge
xor
mov
cwtl
lahf
cmpsb
movsb
mov
xchg
push
popf
aad
push
push
cmc
test
adc
int
sbb
int3
mov
rclb
sahf
xchg
outsb
cmp
jl
mov
fldt
xchg
add
push
adc
push
insl
iret
ja
aam
arpl
dec
movsl
in
stc
mov
jno
cwtl
jnp
imul
xor
cwtl
jecxz
out
mov
lods
xchg
leave
jl
arpl
jo
adcb
pushf
cmc
inc
mov
int3
add
vsqrtpd
mov
ret
mov
das
push
aas
sub
mov
int3
or
jae
jb
mov
push
adc
je
cmp
scas
adc
lahf
inc
mov
subb
sti
or
jns
hlt
xor
lret
mov
ja
insl
jmp
adc
dec
pop
add
outsl
cmp
inc
gs
in
imul
adc
data16
pop
mov
dec
lret
push
or
cltd
push
xchg
in
mov
in
js
xor
lods
push
imul
mov
addr16
cmp
mov
ja
sub
and
cli
rolb
sub
loopne
cmp
push
subb
mov
adc
inc
mov
mov
and
inc
cld
push
rcll
fsubrs
and
fmul
fwait
lret
pop
add
mov
ret
icebp
xchg
mov
jp
adc
sbb
sbb
js
mov
sbb
scas
js,pt
mov
inc
xor
xchg
repnz
xor
fwait
por
pop
ret
hlt
dec
stos
into
test
push
dec
dec
sahf
add
in
or
call
xor
int3
int
int3
sub
stos
or
fwait
lret
cltd
cld
mov
adcl
mov
pop
nop
inc
and
fidivs
test
and
addr16
mov
sarb
push
xchg
mov
or
jno
jno
add
lret
push
sub
pop
mov
pop
movsb
xchg
pop
mov
movsl
cmpl
mov
negl
outsb
popf
int
mov
push
inc
nop
pushf
clc
xorb
fisttpll
dec
xchg
inc
and
addr16
daa
push
xor
popf
xor
jbe
jle
in
cmp
push
je
fstps
das
sbb
pop
loop
and
cmp
jg
aam
subl
inc
cltd
xchg
xor
dec
rorb
in
mov
mov
out
adc
popf
jne
xor
nop
les
fldl2t
sub
cmpl
mov
es
js
xchg
sub
inc
call
jle
out
popf
jl
lds
mov
mov
lret
std
push
xorl
shll
push
sahf
add
cmp
call
mov
adc
cmpl
xor
fucom
cmpsl
ret
sub
hlt
ja
pop
jb
adc
cmp
out
sbb
or
inc
mov
fsub
sbb
repz
shll
pop
ljmp
cmc
xor
dec
mov
lods
js
jae
mov
push
sbb
mov
in
aas
add
cwtl
cmc
xchg
repnz
mov
jl
lods
in
jne
xchg
pop
sbb
ja
mov
lcall
push
jbe
lahf
inc
imul
notl
xlat
stos
sbb
das
movsl
outsb
loop
int3
adc
pop
jmp
pop
mov
mov
xchg
out
push
rol
fcomip
mov
jle
or
subl
inc
shll
sbb
dec
jl
in
es
fildl
jmp
pop
xchg
pop
xchg
ret
push
mov
out
mov
or
xor
stc
jnp
cmp
pop
jl,pn
test
dec
push
lret
dec
repz
ljmp
mov
inc
cmp
add
notl
jb
or
jno
add
stc
xchg
imul
mov
push
push
fwait
add
aam
sahf
mov
dec
shl
mov
lods
dec
fmuls
adc
inc
std
dec
mov
std
mov
xor
and
shll
popl
test
xchg
xchg
cmp
add
push
icebp
and
mov
lahf
cld
jg
jmp
imul
insb
daa
loope
sbb
push
jg
pop
pop
jb
or
xchg
adc
jg
inc
aad
dec
ja
sahf
aam
pushf
js
callw
cli
ficomps
jne
mov
jge
xchg
test
ret
jnp
dec
jbe
test
push
mov
and
into
xor
scas
xor
mov
les
addr16
daa
bnd
imul
inc
fsubrl
adc
add
loopne
add
andl
fdivl
out
aas
sub
adc
xchg
repnz
jp
shlb
insl
push
int
cld
dec
arpl
mov
push
loop
inc
into
mov
mov
out
adc
clc
mov
mov
adc
mov
add
or
ret
mov
mov
or
scas
inc
jne
pop
and
lret
mov
pop
cmp
cmp
and
jmp
movsb
popa
fdivs
ret
pop
push
out
out
sub
rolb
xlat
jmp
sbb
and
sub
decl
mov
lret
add
pusha
add
fsts
test
in
xchg
mov
rcl
test
pop
pushf
jns
mov
cmpsb
hlt
dec
jne
lods
ds
dec
dec
jns
negb
jp
sub
push
jp
lds
repnz
pop
xor
aad
hlt
xorb
shrb
sbb
in
loop
mov
xchg
aas
lret
cli
xchg
lods
and
das
test
pop
mov
flds
mov
mov
sahf
or
fcmovnb
cs
xchg
xchg
jb
imulb
fstpl
test
jae
or
mov
lods
stos
mov
dec
pusha
push
sbb
scas
mov
push
idivl
js
ss
push
or
jp
adc
lea
sub
popa
and
jg
insl
add
repnz
stos
mov
or
xor
jb
sbb
push
xlat
outsl
scas
rorl
jge
xor
cld
movsl
pop
jmp
rorl
or
in
repnz
lahf
sarb
mov
jl
mov
mov
dec
ljmp
inc
lock
or
cmpsl
imul
es
movsb
xchg
sbb
out
fidivrs
out
test
mov
lods
inc
lock
xlat
or
lret
ljmp
and
into
pop
add
adc
es
cltd
ljmp
jge
mov
cmp
inc
push
adc
out
jnp
jbe
push
cmpl
sub
and
push
or
dec
xchg
jae
gs
and
fisubrs
xchg
mov
into
sub
xor
jae
jg
xchg
adc
lock
cmpsl
xor
je
stos
jp
mov
movsb
jne
add
mov
or
cs
pop
or
pop
pop
cmc
adc
add
inc
mov
lds
push
push
or
insl
fsubp
mov
or
jno
js
std
push
rorl
and
sarl
and
sub
mov
dec
sbb
xchg
push
inc
test
xchg
xchg
mov
mov
push
in
mov
insl
push
adc
push
xor
fidivl
out
cmpsb
dec
sarl
cmp
stos
and
and
ljmp
pop
loop
add
add
jmp
mov
push
add
xlat
out
cli
loope
mov
jl
inc
add
lahf
pusha
cs
mov
or
ljmp
cmp
ds
mov
pop
dec
xlat
mov
sbb
mov
rcrb
outsb
jg
xchg
jae
mov
xor
push
and
icebp
mov
hlt
cmp
dec
mov
cmp
mov
sub
rcrb
mov
bound
push
iret
jo
xchg
cmp
xor
iret
stos
cli
cld
insb
pop
push
fsubp
sbb
sub
rcll
sub
xor
jle
dec
cmp
movsb
mov
mov
add
add
cmp
push
add
scas
jecxz
addr16
xor
repz
or
sub
xchg
mov
or
lgs
out
dec
insl
xor
mov
lock
or
xor
push
lret
sub
push
push
shr
cmp
outsb
xor
sub
pop
out
mov
outsb
bound
mov
pop
fdivr
cmpl
xor
adc
fcoms
xchg
jns
push
inc
jmp
lret
movsl
sub
inc
sbb
fstps
ljmp
sub
mov
xchg
or
nop
imul
pop
mov
jae
jno
adc
pushf
pop
push
jns
cmc
js
xchg
fmuls
jb
mov
repnz
lcall
not
bound
adc
ret
call
fdiv
frstor
stc
pop
xor
sub
in
mov
shll
sbb
push
mov
xlat
pop
ret
pop
icebp
aas
pop
add
sub
xor
mov
out
jb
xor
cmpsb
add
cwtl
mov
jmp
push
adc
cmp
idivl
sarb
xor
movsb
cltd
sub
dec
pop
cmp
inc
mov
inc
sbb
mov
lret
sbb
pop
sbb
gs
imul
and
push
sub
sahf
adc
jge
js
push
pop
cmp
and
subb
mov
sub
nop
lods
scas
mov
std
jmp
insl
das
pop
popa
xor
sahf
pop
mov
xchg
scas
cmp
inc
addr16
add
cmpl
fstpl
mov
xchg
add
push
cmp
adc
mov
dec
test
jb
dec
mov
es
in
add
mov
inc
jo
mov
ss
cmp
movsl
xchg
lods
sar
or
sub
mov
lock
xlat
jo
shlb
aas
adc
cli
inc
adc
cld
xchg
jecxz
js
inc
mov
dec
add
pop
jb
inc
stc
test
mov
leave
cltd
in
sub
dec
stos
mov
std
pop
add
outsb
repnz
movsb
jo
mov
iret
sahf
adc
push
push
inc
add
jg
cmp
fs
nop
std
dec
into
jnp
xor
fimull
pop
push
ds
loopne
mull
mov
shll
push
ret
xchg
jg
cmpl
add
jg
mov
and
lds
mov
push
mov
cmp
aam
adc
mov
lret
jp
xchg
jecxz
jne
mov
push
fwait
cmpsl
test
call
xor
mov
jge
rcl
adc
ss
das
push
in
xor
divl
shl
loop
imul
cmpsb
std
mov
push
and
fwait
subl
andb
mov
push
and
shll
fadds
dec
stos
ljmp
addl
data16
xchg
xchg
jbe
xor
std
inc
xchg
clc
pop
mov
sub
movsl
gs
lahf
adc
loop
dec
out
pop
xor
test
dec
pop
mov
test
mov
fcomps
jb
push
icebp
outsb
jne
push
arpl
movsl
mov
push
into
ja
adc
mov
iret
rcrb
add
push
pop
xor
jne
loopne
dec
or
jae
or
mov
ror
jmp
scas
cmpb
ss
adc
lahf
ja
dec
mov
aad
mov
insb
enter
jmp
add
xor
pop
xor
lock
cmc
stc
mov
imul
lock
lcall
imul
mov
or
cmpsl
jge
imul
pop
out
sarb
gs
and
mov
mov
aaa
mov
in
ja
ror
in
in
test
inc
mov
rorb
imul
xchg
loop
cwtl
inc
hlt
add
dec
loope
dec
and
jo
aas
sti
push
nop
int
cmp
inc
aas
and
inc
push
xorl
inc
mov
hlt
push
or
sbb
dec
xchg
out
flds
rcrl
aas
sbb
xor
lret
sti
lea
pop
bound
adc
test
in
cmc
add
and
stos
inc
ret
stos
mov
push
out
mov
call
cli
push
adc
push
mov
std
cli
mov
test
mov
movsb
movsl
out
cmp
push
mov
xor
mov
mov
nop
mov
mov
scas
or
out
push
js
push
cmpsb
and
orb
inc
es
sbb
outsl
pop
cmpsb
push
jp
jns
mov
les
xchg
repnz
rcll
pop
aaa
outsb
mov
movlps
jb
shll
mov
push
ret
lods
dec
ljmp
stos
mov
dec
xchg
lret
sar
adc
in
mov
jbe
enter
stos
jge
loop
das
push
scas
jecxz
jne
xchg
jle
or
test
subb
or
sub
xor
bound
sbb
xchg
pushf
push
jns
aad
shll
or
cmp
pusha
sub
dec
mov
mov
inc
mov
push
jmp
jbe
mov
rorb
stos
aad
inc
loop
shrl
inc
pop
add
into
cltd
loopne
adc
lcall
movsb
sub
jmp
and
cwtl
lahf
mov
xor
call
adc
mov
test
cld
shl
test
mov
push
aas
jbe
push
adc
add
flds
fsubrl
test
and
push
add
lret
mov
jns
jnp
mov
and
xor
cwtl
fstl
add
rorl
inc
fistl
adc
jecxz
dec
clc
out
sahf
add
pop
xor
aas
cmp
sub
cmp
pusha
shrb
nop
inc
xchg
lret
int
test
cld
add
std
movsb
inc
clc
shll
sbb
sub
fildll
shr
mov
pop
aaa
ret
cmpsb
and
push
pop
ljmp
shrb
jnp
sub
in
dec
cmp
lahf
cmp
roll
in
pushf
and
movsb
sbb
scas
jae
mov
aad
int3
clc
mov
loop
mov
mov
xlat
aam
or
or
lods
xor
xchg
cmp
in
fsubr
popa
pop
add
fdivrs
test
dec
mov
or
movsb
push
cmp
adc
pop
jge
mov
jo
popf
xlat
jle
push
rcr
outsl
xor
or
dec
xor
dec
stc
cmc
inc
xchg
and
mov
cld
pop
das
fwait
ds
orb
jb
xchg
sbb
sar
cs
add
cs
repnz
mov
fbstp
repnz
mov
sbb
fwait
push
mov
in
iret
adc
js
adc
psubusw
mov
or
insl
xchg
jbe
xor
inc
push
ret
aas
or
cmp
push
out
into
push
ljmp
pop
jg
add
mov
leave
jno
and
test
dec
jbe
adcl
add
imul
fstps
ror
icebp
rclb
inc
idivl
xor
xchg
stos
xchg
mov
vmread
fbstp
sub
sub
pushf
cmp
sahf
es
imul
push
iret
int
xlat
jae
pop
fwait
repz
inc
imull
sub
and
aam
dec
mov
faddl
fmuls
dec
cmpb
int
cltd
cmpb
mov
mov
push
or
test
and
imull
test
and
pop
es
and
xor
jnp
inc
push
fwait
or
cmp
adc
mov
push
pop
lret
inc
push
jnp
nop
pop
pop
xchg
in
fwait
add
arpl
insl
in
lock
testb
jns,pn
mov
test
push
jae
cwtl
push
adc
sub
inc
mov
xchg
or
ja
dec
sub
fidivs
lcall
lret
add
sub
in
pop
fistps
adc
mov
fidivs
and
mov
pop
mov
or
in
mov
jne
movb
inc
out
jne
dec
iret
pop
sti
sarl
pushf
fldt
lret
add
mov
scas
xchg
or
jle
pop
scas
sub
mov
xor
cltd
into
bnd
push
cmp
or
dec
inc
dec
inc
repz
pop
adc
hlt
xor
imull
lds
and
rorl
repz
stos
cmp
pop
rorb
cli
jg
mov
push
jmp
mov
icebp
sti
push
and
or
cmp
inc
aaa
das
inc
in
pop
pop
push
pop
aam
add
addr16
mov
cmp
pop
add
mov
loopne
jp
dec
sbb
and
addl
dec
sbb
sbb
fs
hlt
cwtl
fsubrl
addb
rcrl
stos
int3
fistpll
mov
hlt
push
lret
hlt
push
mov
fisubrs
mov
fdivrs
cmp
repz
mov
daa
and
jmp
ds
xchg
les
jmp
xor
xor
cmpsb
out
cwtl
ss
pop
arpl
repz
idivl
dec
sbb
or
in
xchg
ss
adcl
fcompl
xor
pop
xor
fdivl
jle
gs
icebp
push
add
lods
mov
test
ficompl
inc
loopne
xchg
loope
cmp
or
lcall
std
in
int3
xchg
inc
xchg
add
lcall
pushf
lock
inc
mov
lcall
and
mov
test
popf
cltd
lret
cmp
mov
in
shrb
cmp
cwtl
repz
call
jp
push
sub
outsb
pop
adc
xor
ss
popa
subl
dec
daa
mov
aad
dec
and
mov
outsb
dec
sbb
sbb
cmp
sti
mov
push
push
jp
fsubp
push
icebp
pop
incb
xor
jecxz
int3
cmp
shlb
inc
cmpl
enter
cmp
shll
leave
imul
cs
add
fucomip
ja
pop
pop
dec
adc
test
loope
test
negb
out
xor
sub
sub
loop
scas
lea
pop
icebp
fs
cmpl
xchg
es
or
das
inc
aad
and
cmpsl
aad
sbb
lock
into
jbe
insl
int
repnz
mov
push
pop
xchg
push
dec
test
lea
movsl
dec
jne
in
dec
js
movsl
cli
xchg
lds
sbb
popf
pop
or
shlb
add
or
jo
data16
jg
mov
aas
lods
lock
int
sub
jo
int
mov
in
out
pop
mov
and
and
cmp
arpl
dec
sbb
addb
loop
ljmp
fildl
xchg
mov
add
xor
leave
mov
mov
mov
push
int
rorb
fnstcw
and
mov
or
xchg
jo
das
mov
xchg
fprem
inc
cmp
repnz
repnz
cmp
push
or
mov
stos
add
dec
cmp
loop
xchg
aam
mov
xor
and
test
jl
jmp
inc
push
xor
jno
dec
mov
sub
lock
pop
repnz
frstor
push
mov
addb
fmul
xchg
ljmp
in
mov
mov
push
jb
js
mov
or
rcrb
movsb
sbb
aaa
popa
in
cld
shll
push
jbe
push
mov
imul
fwait
cs
sub
outsl
xchg
cmp
cmp
imul
pop
sti
in
pop
xor
jbe
xchg
pop
sub
imul
sbb
lock
jbe
out
fwait
mov
dec
dec
dec
gs
cmpsb
fwait
js
addr16
shlb
enter
test
xchg
dec
loop
xor
adc
xchg
sub
cmp
pusha
hlt
lret
inc
lods
into
les
in
testl
sbb
sub
push
add
mov
mov
xchg
repnz
into
xor
aam
repnz
subl
push
mov
mov
jno
sbb
clc
sbb
push
dec
fwait
adc
movsl
shlb
shlb
dec
std
mov
iret
scas
cmp
push
adc
jne
out
mov
jp
dec
mov
xchg
aas
sub
push
idivl
movsb
bnd
cmpsl
insl
cld
data16
pop
push
pusha
stos
aaa
ret
popa
sub
cmp
push
clc
call
sub
mov
jp
xor
pop
jecxz
inc
daa
cmp
xchg
mov
sahf
mov
pop
inc
add
mov
pop
adc
jno
aas
add
sub
js
mov
lcall
movsl
xchg
or
mov
arpl
imul
mov
inc
test
xchg
push
leave
imul
loope
mov
pop
fdivs
mov
into
xchg
jl
jns
cltd
cmp
lock
inc
jg
int3
jg
jg
mov
fadds
loope
xor
sbb
mov
stc
xor
jle
mov
jl
pop
outsb
add
mov
call
xchg
add
adc
nop
fldenv
mov
xchg
mov
cmp
pop
mov
xor
negl
cmpsb
push
pop
mov
jbe
jne
je
scas
aam
mov
sbb
je
push
cmp
add
rolb
fidivs
jp
in
ljmp
push
mov
jns
lea
popf
jno
adc
std
mov
sbb
mov
jo
or
out
dec
int3
add
or
push
stos
xchg
push
lock
arpl
loope
or
hlt
sub
push
hlt
repz
mov
inc
rcrb
loopne
out
xor
mov
push
in
ret
in
or
or
dec
dec
lcall
lcall
scas
popa
pop
mov
andb
cltd
ss
push
or
aad
sub
lock
outsl
add
mov
and
xchg
push
dec
lcall
jmp
jle
xchg
out
sbb
adc
sub
adc
das
pop
movsl
push
fbstp
push
insb
xchg
xor
cmpsb
mov
jbe
sub
fst
inc
ficoml
test
push
lea
jns
push
sbb
mov
fcoml
leave
cld
lea
mov
xor
outsb
sbb
das
or
mov
cmpsl
call
adc
xor
cmpsb
testl
ds
insl
addb
fisubl
jo
mov
or
or
lahf
pop
cli
test
gs
pop
and
jno
imul
gs
mov
stc
test
dec
mov
mov
jmp
andl
dec
test
bnd
cld
cld
std
add
pop
inc
push
mov
shl
int
inc
movsl
cs
add
loop
xor
stos
push
enter
mov
fcoms
stc
ljmp
mov
movsl
and
pop
adc
fsubrs
icebp
sti
pusha
pop
shll
lds
mov
stc
jmp
cmp
mov
mov
sub
test
jecxz
data16
sarb
mov
lds
arpl
out
outsl
mov
inc
xor
pop
insb
or
lret
sub
sub
mov
dec
shl
pop
repnz
lcall
in
mov
mov
push
and
shlb
jb
ret
es
pop
incl
push
loop
in
leave
shrb
fmulp
sub
pushf
fsubr
cmp
sti
xor
inc
iret
push
xchg
cmp
add
dec
das
pop
mov
pop
push
fdivrs
add
nop
arpl
bound
shlb
in
mov
and
mov
int
rcrb
mov
xor
fbld
leave
pop
into
or
psrlq
mov
test
add
inc
rcr
xor
mov
dec
mov
loopne
add
inc
mov
lret
sti
jp
fucomip
dec
xor
fnstsw
lods
dec
mov
movsl
push
mov
and
lods
and
roll
dec
lahf
pop
imull
mov
in
and
stos
scas
inc
das
adc
add
xchg
sub
ljmp
bound
dec
cwtl
mov
dec
dec
repz
inc
jo
outsb
jb
push
xor
push
or
leave
rolb
out
shrb
negb
sbb
fdiv
dec
repnz
dec
mov
jl
mov
movsb
sub
sahf
ret
lds
mov
mov
loope
insb
in
mov
jno
add
or
adc
test
add
xchg
lret
mov
mov
lret
sub
xor
mov
cmp
lret
xchg
pop
fstl
stc
and
push
and
out
mov
mov
mov
insl
pop
jns
pop
dec
fwait
andb
pop
les
mov
push
adc
lcall
fwait
inc
sarb
fs
or
int3
fdivs
pop
ret
cmp
in
jmp
ljmp
xchg
addr16
out
pushf
stos
sbb
in
out
cmp
ret
mov
cli
jmp
mov
sbb
inc
pusha
mov
pop
mov
mov
lea
and
outsb
or
dec
repz
mov
hlt
call
lods
pop
outsl
out
shll
push
scas
dec
lds
xchg
mov
int3
xchg
mov
mov
imul
hlt
pop
lods
or
cmpsl
movsb
jmp
in
inc
mov
sub
popa
inc
out
aas
scas
popf
cs
mov
sbb
push
pop
xor
inc
or
xor
fisttps
sbb
inc
mov
loope
fildll
xchg
ficoml
mov
andl
and
insl
push
lahf
sti
aaa
clc
jmp
fs
xchg
std
loopne
rcll
jae
outsl
jl
push
cmp
insl
inc
pusha
in
mov
mov
test
mov
jno
in
cmp
inc
outsl
out
addr16
int3
sub
arpl
jmp
sub
dec
shlb
push
addr16
sbb
and
out
sbb
adc
stos
or
or
jmp
mov
andl
orl
push
push
cli
fcmovnu
in
pushf
dec
xor
sti
xcrypt-cfb
cmpsl
out
push
mov
popf
xchg
push
mov
into
lds
inc
xchg
pop
mov
xchg
ljmp
push
push
jns
sahf
gs
push
xchg
push
loope
mov
nop
rcrb
jb
jp
inc
ljmp
movsb
test
jne
cmc
out
hlt
xchg
push
jle
mov
jo
jbe,pt
lret
mov
xorl
push
mov
adc
mov
mov
inc
popf
mov
cmp
dec
aad
or
mov
inc
leave
dec
inc
xchg
popf
fdivrs
sbb
aas
out
iret
sbb
sub
mov
test
add
pop
scas
cmp
sbb
movsl
add
inc
rcl
sbb
stos
xchg
dec
adc
mov
rorl
mov
repz
adc
int3
stc
aaa
int
jmp
jns
aaa
push
daa
cs
jns
in
or
push
out
hlt
pop
and
mov
sub
pusha
push
rolb
lods
dec
in
test
jo
popa
fimull
fcoms
adcl
andb
dec
into
ficomps
call
xor
aam
sbb
cmp
inc
leave
imulb
pop
cmpsl
ljmp
ficompl
xor
and
jmp
hlt
jns
xor
jbe
sti
cmc
je
xlat
repnz
ljmp
cmp
xchg
mov
sbb
int3
cli
push
sub
push
mov
es
inc
fst
and
push
das
lock
addl
adc
rcr
add
idivl
rcrl
daa
int3
pop
clc
insl
cmp
cmpb
leave
xor
xchg
mov
sbb
add
pop
or
xor
shlb
mov
pop
lods
shlb
and
xchg
dec
fidivrl
mov
vunpcklps
inc
imul
repnz
xchg
leave
adc
adc
cmpsb
adc
fisubrl
les
mov
lods
xchg
cmpsb
pop
stc
int3
jnp
data16
adc
xchg
repz
mov
xchg
pop
lods
add
arpl
sbb
adc
call
jp
pop
pop
lret
lahf
std
mov
arpl
es
sbb
mov
insl
dec
mov
mov
sbb
push
and
ret
out
lock
sti
std
and
mov
pop
xchg
adc
adc
cmc
jbe
mov
iret
dec
xor
adc
rclb
pop
daa
negl
clc
call
jecxz
das
mov
ja
inc
push
ljmp
pop
dec
sub
xchg
xor
cmp
push
in
daa
das
jnp
pop
aas
push
xor
lret
repnz
subb
dec
out
ror
call
sbb
cmc
mov
cmp
add
xor
and
ja
out
mov
pop
jns
es
in
stos
ja
xor
push
int3
mov
sub
adc
xchg
mov
cmp
cmpsb
sbb
push
sbb
stc
in
or
xlat
cmp
hlt
in
fsts
sbb
xlat
and
lahf
fldenv
mov
mov
xchg
cmp
lds
scas
mov
outsl
fwait
rcrl
aaa
mov
fsts
mov
les
ffreep
insl
popa
lods
xchg
loop
mov
fsubl
out
in
shrl
or
lea
in
aaa
add
call
jge
shrb
pusha
push
sub
jno
in
ljmp
pop
repnz
cld
pop
jp
shll
mov
sbb
test
xlat
inc
loopne
jae
xor
sub
push
adc
int
movsl
lea
xor
imul
dec
fistpll
xchg
popa
testb
gs
cld
jg
jns
xor
adc
dec
jecxz
cltd
outsb
fcoml
arpl
std
das
loopne
push
int
loop
mov
xchg
adc
ljmp
dec
mov
ret
lret
cmp
sub
js
xchg
mov
jle
adc
daa
adc
fisubl
mov
add
shl
xchg
lahf
sbbb
pusha
das
sbb
movsb
mov
movsb
out
clc
loope
clc
add
movsb
or
ja
test
popf
incb
je
rcll
and
fidivs
cltd
mov
pop
push
cmp
mov
xor
fisubs
cmp
pop
push
adc
jbe
hlt
adc
pop
inc
lods
notl
push
push
mov
push
cltd
xor
loopne
jno
arpl
sub
dec
jl
fmul
fadds
lods
jg
es
test
dec
scas
inc
fnstcw
cmpsl
aaa
cmpsb
aad
pop
push
push
cmc
call
jmp
mov
add
hlt
cmpsb
pop
fwait
xchg
mov
les
rolb
sub
push
fwait
pusha
test
div
and
aam
cmp
add
jg
and
test
out
das
xchg
mov
dec
rorl
data16
shl
fnclex
das
sub
sti
icebp
sub
push
imul
adc
push
pop
fbstp
pop
and
sbb
loop
and
jne
xchg
mov
aad
inc
cmp
and
popf
ja
adc
jecxz
hlt
jb
rclb
inc
int
clc
negl
ret
sub
push
vpsrld
divb
jecxz
xor
adc
add
mov
and
cmp
mov
in
fcmovnbe
pop
adc
adc
mov
daa
les
push
jns
push
add
adc
push
xchg
jg
mov
jo
out
sti
or
jae
andl
mov
enter
xor
fisttpl
fdivr
xor
push
lds
push
lret
insb
mov
fisubl
mov
rclb
jl
pop
ja
sti
ljmp
pop
push
pop
jno
stos
insl
in
lock
in
pop
rorb
add
loopne
cli
jns
dec
pop
xchg
xchg
or
jecxz
jnp
in
push
lods
insb
test
bound
bound
fisubs
cmp
mov
lret
es
clc
lcall
push
push
sbb
fcoms
jmp
xchg
mov
fcomps
repz
or
lret
in
mov
iret
sub
mov
lock
sysenter
mov
out
lret
out
inc
or
inc
mov
push
aaa
push
test
or
add
dec
insl
sub
sbb
mov
ss
xor
lods
jmp
repnz
fcoms
xchg
out
jl
loope
pop
es
repz
mov
rolb
add
cmpsb
repz
ljmp
xchg
test
sub
sbb
and
in
adc
pop
xchg
cwtl
xor
mov
dec
push
mov
dec
frstor
mov
shlb
adcl
hlt
icebp
loopne
cmpl
and
sub
sub
adc
jge
clc
and
addr16
rorl
xchg
popf
xor
int
xor
dec
outsb
lods
shrl
pop
push
fcomp
push
lahf
add
std
sti
rcll
push
mov
mov
jno
push
mov
cltd
push
lods
sbb
lea
fistpll
adc
inc
mov
popa
pop
or
mov
aad
packsswb
dec
xor
je
in
movsl
inc
add
push
lock
add
mov
mov
push
mov
gs
jbe
xchg
mov
mov
push
xchg
cmpsl
jle
ds
and
and
ds
inc
mov
inc
pop
in
rcrl
push
pinsrw
inc
jl
vhsubps
fsubrl
or
shr
push
stos
push
test
fstpl
xchg
sbb
inc
pop
cmp
call
sub
mov
mov
inc
push
inc
ljmp
mov
add
cli
and
jbe
and
xor
popf
lods
lods
in
jge
lds
xchg
in
jne
lds
cmpsb
dec
das
sbb
lds
mov
clc
call
inc
rdmsr
out
pop
sbb
insl
mov
enter
ret
arpl
in
jno
cmp
flds
add
ffreep
insb
add
sbbl
ret
push
mov
test
rcl
sti
sbbl
inc
xchg
test
das
and
mov
lock
adcl
mov
cmp
mov
dec
push
adc
adc
xchg
add
out
xchg
cmp
sub
stc
or
insb
sub
ds
js
into
scas
mov
dec
fdiv
hlt
jnp
fimuls
sbb
js
mov
or
sbb
inc
mov
iret
jb
mov
jae
ljmp
cmp
mov
ret
lock
jmp
icebp
or
das
xchg
cld
cmp
or
mov
pop
adc
shrl
push
pop
mov
test
lods
push
and
insl
fwait
insb
jbe
lcall
lret
inc
in
push
dec
pop
outsl
lea
je
mov
movb
pop
fcoml
or
mov
idivb
mov
jecxz
sbb
adc
data16
shrb
arpl
jmp
test
rcrl
mov
fsubl
aad
xchg
mov
call
and
adc
sub
push
les
xchg
pop
jl
add
adc
push
xchg
cmp
push
inc
pop
in
mov
loop
faddl
push
mov
push
cmpb
sbb
or
cmpsb
dec
icebp
mov
xchg
mov
mov
pushf
sbb
adc
inc
imul
xchg
or
inc
int
push
xchg
pop
and
push
ficoms
lcall
pop
sbb
jmp
sbb
shl
mov
mov
mov
mov
xchg
and
sbb
push
mov
loopne
push
test
jge
sbb
inc
out
xchg
dec
mov
or
sbb
daa
test
insb
rolb
pop
sbb
fsubrl
inc
pusha
jnp
sbb
dec
int3
fdivs
fidivrl
pop
inc
sti
pusha
jbe
fldt
push
sub
stc
fimull
inc
xor
cmpsl
loop
lods
ja
pop
push
push
push
fcos
and
xlat
aas
out
fs
mov
popf
inc
aas
int3
jecxz
popf
testb
shrl
call
scas
xor
dec
mov
jle
inc
add
imul
mov
test
repnz
inc
and
es
cmp
or
cwtl
fdivs
jg
jns
xchg
dec
adc
jb
dec
and
sahf
cmp
dec
inc
orl
or
faddp
cmc
enter
insb
add
rcl
notl
dec
add
push
into
rcl
lahf
xorb
lock
xchg
fidivl
mov
xchg
add
push
push
sti
ret
mov
aaa
pop
xorl
repz
icebp
int3
out
sub
out
push
push
jns
cmpsl
fwait
icebp
aad
mov
fnstenv
xchg
jae
outsb
mov
and
ffreep
cltd
xchg
pop
icebp
and
int
xchg
ret
sti
mov
add
mov
dec
mov
imul
dec
lods
jo
pop
xlat
cmovb
mul
aad
adcl
and
mov
fnstcw
loope
out
dec
push
mov
push
mov
push
repnz
or
test
adc
cmpsb
cmp
mov
mov
loopne
arpl
stos
cmc
and
aas
xchg
test
icebp
xchg
cmp
dec
cmp
xlat
fisubrl
push
fs
push
movsl
sbb
sub
xchg
push
jp
xor
cld
mov
dec
pop
aaa
addb
cmpsb
mov
inc
mov
sub
outsb
mov
clc
ja
mov
mov
pop
jg
rcll
cmp
ret
sub
push
mov
cli
push
orl
cmp
push
fsts
fmul
in
pop
jno
add
fld
cmp
dec
adc
jl
xchg
mov
lods
or
jecxz
push
pop
bound
les
mov
and
jbe
fisttpll
inc
pop
mov
pop
lea
cmpsb
add
out
aaa
cli
daa
fists
sti
sarl
cmpsb
jne
shrl
enter
ss
fimuls
out
insl
es
jge
aam
loope
bound
dec
jae
push
xchg
lahf
iret
jecxz
mov
jns
rcrb
pop
sub
adc
pop
movsl
push
pushf
mov
mov
mov
ret
sarb
pop
mov
sub
ret
mov
cmpsb
inc
add
rcl
rolb
pop
ss
into
repz
xchg
inc
push
add
dec
pushf
sbbb
sbb
popa
fisubrl
int3
xchg
in
xchg
and
fimuls
shr
lds
xchg
mov
stc
arpl
jnp
or
push
mov
adc
jecxz
fsts
or
cmc
mov
pop
push
movzbl
adc
aam
mov
inc
push
push
sub
scas
loop
negb
sbb
leave
scas
aad
mov
or
ds
test
cmp
outsb
sar
inc
mov
sarl
sti
push
stc
sub
or
shlb
test
mov
push
dec
and
fstl
arpl
mov
aam
jno
test
ret
add
adc
inc
mov
mov
lds
sbb
xchg
iret
xchg
dec
les
icebp
jae
jle
aad
repnz
or
loop
cltd
cmpsb
loop
sbb
bound
sub
ss
js
bound
pop
sbb
mov
inc
fwait
pusha
mov
sarl
stos
shrl
sub
push
inc
dec
mov
push
pop
addr16
mov
roll
cmpsb
out
cld
mov
push
mov
testb
inc
outsl
mov
xchg
pop
in
xchg
fdivrs
add
sbb
and
cltd
sbb
and
lock
xor
sub
xchg
fchs
adc
hlt
sahf
pop
inc
lahf
jno
les
inc
inc
aad
loope
mov
test
mov
xchg
mov
mov
bound
sti
inc
int3
lods
js
add
inc
fbstp
leave
aaa
dec
mov
pop
jecxz
jmp
arpl
cmpsl
xchg
mov
adc
xor
pop
add
xor
mov
adc
add
pop
pushf
inc
cmp
iret
pop
out
mov
xchg
scas
pop
mov
mov
sub
in
mov
fwait
sub
pop
fnstenv
vorpd
sbb
sahf
lea
inc
int
jl
gs
and
lret
mov
or
lds
push
inc
roll
arpl
cmp
fisttps
xor
in
js
lods
adcb
adc
mov
xor
fs
push
inc
into
cmp
dec
insb
push
xchg
mov
mov
cmp
rolb
aam
fxtract
outsb
sub
xchg
test
push
sbb
dec
mov
pop
push
hlt
xchg
std
pushf
or
and
adc
movb
loop
movsb
pushf
pop
adc
add
sub
xchg
mov
sub
and
inc
pop
add
cmp
outsb
mov
xor
dec
in
jg
cld
imul
sub
sub
enter
mov
outsl
inc
cmpsb
jmp
test
mov
cmp
cli
sub
inc
ljmp
test
inc
lods
cmp
popl
add
pop
stos
mov
jmp
cmc
adc
lahf
push
adc
jp
dec
sbb
clc
sar
cmp
jmp
les
and
out
jge
imul
cltd
xchg
or
lret
mov
fwait
add
sub
xchg
sbb
pushf
and
adc
js
movsb
ljmp
loope
mov
and
scas
and
mov
lret
cld
dec
add
mov
mov
mov
jg
xor
subb
xchg
jno
sbb
push
and
pop
movsl
mov
dec
incb
das
pop
aaa
inc
xchg
mov
add
jle
in
jge
mov
add
in
xchg
sahf
sti
outsl
sub
jge
jge
pusha
pop
add
xor
jns
inc
mov
pop
scas
sbb
arpl
fdivr
push
loope
pop
hlt
add
insl
add
mov
mov
push
getsec
dec
mov
sarb
sbb
movb
add
dec
sbb
push
lods
lods
pop
jle
push
fisttpll
xor
xchg
sbb
cld
sub
ja
mov
imul
dec
sub
mov
sub
stos
cwtl
sahf
mov
out
shr
and
inc
pop
mov
mov
movsb
mov
cmpl
mov
pop
and
loope
mov
dec
adcl
jg
popa
push
push
xor
outsb
imul
repnz
adc
mov
push
jb
jl
mov
scas
dec
or
pop
add
and
cmp
jno
ljmp
add
adc
fsubrs
pop
stos
sti
loope
xchg
sti
adc
inc
call
fidivl
inc
and
sbb
mov
xchg
js
call
jns
xor
mov
xchg
lea
rcrl
shr
cmc
mov
cli
push
stc
or
push
pop
push
gs
jbe
insb
dec
jb
cld
adc
pop
mov
jnp
icebp
in
xchg
mov
dec
cmp
mov
or
mov
enter
test
jnp
push
ficoml
loopne
pop
cltd
stos
push
cmpl
and
sbb
push
push
xlat
jnp
xchg
jno
hlt
xlat
ds
jb
jnp
xor
rcrb
cli
dec
fsubrs
out
stos
lret
and
je
or
sbb
and
push
cmp
add
bound
rcrb
jbe
mov
jne
xchg
shr
pop
or
dec
jl
mov
fsubl
call
sti
inc
mov
shll
pop
or
xchg
xchg
je
dec
dec
cwtl
popf
add
mov
scas
pop
cmc
icebp
clc
mov
loope
lds
lret
xchg
inc
push
xor
sub
pop
mov
or
ret
mov
daa
mov
pop
repz
or
std
lods
dec
adc
sub
andl
popf
es
movb
sub
cltd
lcall
push
cmp
ljmp
scas
mov
push
fsubr
sahf
loopne
xlat
xchg
lcall
sbb
fcmovb
pop
aas
in
in
and
dec
xchg
div
jb
and
hlt
popf
pop
jns
imul
outsb
push
mov
idivl
nop
mov
cld
push
adc
fildl
or
pop
movsb
push
adc
repz
inc
fwait
imul
rorl
cld
dec
xlat
cli
addl
lock
sub
mov
addr16
fwait
push
out
mov
lahf
lods
cmp
dec
pminub
cmp
dec
icebp
shl
ror
xchg
jl
loopne
sbb
mov
movsb
rorl
cmpb
xchg
pop
lock
fcmovnb
mov
xchg
shl
jge
lahf
push
popf
pop
add
ljmp
repz
into
insb
and
mov
add
or
or
nop
stc
arpl
outsl
sbb
andl
sub
xchg
push
jbe
mov
pop
cmpsl
insl
mov
cmp
jmp
je
mov
dec
clc
add
xor
dec
mov
lock
loope
sarl
mov
and
arpl
sub
add
inc
and
add
jg
fdivl
cld
xor
pop
clc
mov
dec
addr16
fnsave
jp
rol
and
enter
in
push
loope
or
mov
lret
adc
ror
std
push
mov
cltd
sti
imul
add
std
mov
and
test
hlt
mov
mov
out
les
jns
inc
adc
clc
pop
test
mov
jge
shlb
jg
xor
sub
mov
cmpsb
js
and
cmp
jg
cli
mov
imul
and
cld
dec
imul
fsubr
sub
sbb
xchg
test
lods
add
jae
fcomip
mov
and
hlt
lods
sub
push
dec
mov
sbbb
loop
pop
jno
orl
sub
pop
pusha
cld
adc
xchg
das
jg
imul
dec
mul
gs
xchg
mov
stos
es
shrl
repnz
fdivs
movsb
fidivrs
lods
stc
push
loop
and
sahf
cmp
ss
mov
dec
out
push
dec
and
sub
cld
push
dec
mov
sahf
xor
push
cmp
ret
test
aam
lea
cmp
push
push
fldcw
or
mov
mov
xor
inc
inc
and
inc
mov
imul
cld
pop
sub
movsl
int3
sti
fmuls
sub
lea
inc
sbb
hlt
xchg
inc
inc
repz
mov
arpl
adc
inc
pop
mov
xchg
scas
cs
aad
xchg
mov
push
decb
outsb
mov
sub
cmp
sub
pop
pop
push
and
or
mov
mov
lods
sub
dec
jns
cmc
shll
pop
cmp
mov
jb
imulb
loope
ds
stc
fimuls
xchg
lea
stos
sahf
cltd
fdivrs
inc
sub
adc
and
cmpl
fstpl
jne
cmovae
cmc
sub
jae
scas
jno
in
into
jp
mov
stc
pop
push
pop
mov
jmp
stos
aaa
jno
or
jecxz
or
repnz
jle
mov
add
pop
xor
movsl
outsb
shrl
cmp
sbb
popf
push
je
cmpsb
push
inc
fmuls
xor
mov
icebp
mov
cld
shlb
and
sti
imul
movsb
pop
pop
aad
std
mul
cmp
xchg
mov
pop
shll
je
in
adc
and
push
xchg
xchg
fbld
pop
not
xchg
sub
out
scas
ffree
adc
enter
aad
or
jl,pn
jecxz
lret
push
je
xchg
push
cmp
mov
push
inc
pop
je
mov
jp
xor
int
ljmp
ret
fcom
cli
cmpsl
ds
push
mov
sub
lock
dec
mov
cmp
enter
mov
cmpb
mov
fidivrl
mov
lret
push
jecxz
outsb
pop
dec
inc
push
mov
scas
insb
out
mov
leave
int3
lret
mov
pop
das
sbb
pop
mov
jge
xchg
leave
cmovg
sub
pusha
mov
and
dec
jns
sti
sbb
jbe
mov
mov
adc
lcall
das
dec
dec
icebp
xchg
jns
fs
imul
inc
call
int
sub
cltd
dec
andb
dec
sbb
stos
sbb
xchg
es
jno
shll
mov
shrl
add
push
out
lea
imul
js
mov
cmp
testb
ds
adc
dec
pop
ljmp
or
sbb
loop
imull
xlat
decb
mov
jno
pop
fs
sbb
pop
jbe
xchg
loope
adc
lcall
mov
mov
rcll
stos
jge
inc
push
sub
outsl
jecxz
dec
js
imul
fwait
ret
mov
movsb
push
insl
push
popf
pop
stc
or
enter
dec
ljmp
xor
xchg
in
jp
aas
clc
sbb
push
inc
repnz
cmpsl
jb
cmpsb
lret
inc
push
mov
mov
adc
lock
push
fdivr
mov
xchg
cmp
xchg
movsl
fldl
sbbl
pop
cmp
icebp
adc
dec
mov
into
cmp
not
adc
loop
call
pop
std
pop
mov
and
mov
dec
dec
mov
dec
push
in
jp,pt
mov
cmp
xor
addl
mov
ficoms
lods
push
std
shrl
mov
or
test
out
mov
cmp
xor
sbb
das
pop
cs
pop
cmpsl
mov
jno
adc
fnsave
push
scas
jmp
pop
popf
dec
clc
dec
icebp
xor
mov
sub
cwtl
cmc
add
add
cli
inc
dec
inc
dec
out
mov
jmp
jb
mov
clc
pop
pop
scas
cmp
cmpl
sbb
movl
pusha
and
mov
mov
mov
pop
dec
cmovp
inc
inc
mov
cld
fwait
inc
pop
xchg
mov
mov
jb
cs
and
dec
mov
fisubs
iret
mov
fdivrl
add
int3
js
loopne
add
shr
add
das
stos
popf
fldcw
mov
in
xchg
adc
mov
fdivl
mov
mov
cwtl
mov
cltd
lahf
push
fidivrl
dec
mov
push
or
pop
pop
in
mov
sti
xorl
fcmove
push
cs
cmc
mov
cmp
mov
pop
into
jmp
out
inc
ljmp
pop
mov
inc
pop
push
lods
in
push
daa
popf
push
aam
cltd
aas
loop
inc
in
xchg
lods
dec
sub
xor
dec
jns
pop
pusha
adc
sbb
lcall
mov
adc
mov
add
mov
addr16
stc
aas
cwtl
bound
lcall
repnz
cmp
ljmp
mov
imul
mov
stos
iret
jbe
arpl
jl
cli
stos
inc
inc
cs
pop
dec
sub
inc
mov
cli
jnp
jle
mov
loope
cmpsb
adc
mov
jp
pop
into
int
dec
repz
rcrb
xor
cmc
mov
cmpsl
add
sarb
lods
xor
frstor
in
nop/reserved
jle
mov
cli
outsl
mov
ret
scas
push
iret
fadds
or
mov
add
sub
pop
xchg
scas
sbbl
cmp
test
aaa
out
inc
push
adc
movsl
push
fdivl
loopne
jbe
push
inc
cmp
push
push
mov
cmpsb
dec
jae
xor
pop
jl
cmp
ret
and
jge
insb
aas
mulb
test
shll
mov
push
xchg
popa
movsb
adc
std
add
xor
dec
fdiv
repnz
and
push
out
mov
push
inc
std
shlb
pop
jae
dec
or
dec
xor
in
lea
push
in
mov
pop
shlb
xchg
or
int3
lods
jbe
jmp
insb
adc
cmp
cs
aaa
stc
jmp
mov
mov
fs
dec
fs
adc
inc
repnz
popf
bound
mov
sbb
sub
stc
mov
mov
push
mov
or
fcom
loop
push
add
mov
adc
imul
aas
lock
and
mov
fdivs
cmp
push
sbb
test
push
std
inc
sbb
jae
xchg
mov
scas
repz
ret
leave
fsub
ja
test
imul
push
pop
test
mov
push
xchg
in
mov
xchg
adc
clc
hlt
ret
pushf
jecxz
out
ja
das
adc
xor
cmp
add
sub
push
sti
or
jge
sub
test
push
sbb
movsl
lock
sbb
call
mov
insb
bound
add
mov
test
loope
or
dec
or
mov
in
adc
add
xchg
jle
cli
push
test
mov
mov
xchg
inc
loopne
jg
int3
pop
xchg
adc
lahf
xor
cwtl
outsl
repnz
lea
mov
cmp
cs
push
arpl
fisubrl
cmp
ret
pop
sub
dec
incb
movsb
int3
mov
xchg
cmpsb
xchg
rcrb
xchg
fldt
je
popa
mov
stc
jbe
mov
jae
out
bound
mov
push
jmp
aaa
out
xchg
std
fildl
inc
movsl
icebp
pavgb
sahf
data16
shl
mov
loope
sbb
shr
jge
push
ret
jl
xorl
pop
mov
imul
xor
add
jo
xor
iret
pop
scas
xchg
les
cmp
imulb
test
stos
in
xchg
outsl
hlt
or
and
cmc
in
and
insb
mov
sbb
mov
lcall
or
lds
das
xchg
je
arpl
dec
cmp
int3
jae
mov
pop
das
ficoml
les
stc
xor
xchg
xor
push
add
jo
jo
lret
push
sub
ljmp
lahf
mov
idivb
push
jnp
inc
mov
pop
xchg
mov
fcom
mov
testb
push
cmpsb
pop
cmpb
mov
lds
arpl
movsb
pop
in
pusha
cmp
pushf
cmpsb
repz
cli
mov
adc
repz
adc
jo
xor
in
lret
cmpsl
lret
mov
xchg
cmpsb
xor
cmp
lock
inc
test
out
mov
mov
stos
pop
mov
inc
pop
stos
xor
loope
fiaddl
push
in
xor
mov
lock
jmp
add
addr16
and
sub
jnp
cmp
popa
nop
push
jbe
dec
pop
inc
and
push
sti
imul
repz
shl
or
lods
das
xor
pop
dec
fcomps
insb
hlt
ret
cmp
cmp
sub
fstl
sub
ja
mov
inc
lods
in
sub
lahf
dec
mov
imul
inc
mov
dec
fcomps
shl
xchg
xchg
add
loop
test
daa
sar
cmpsb
inc
adc
xchg
adc
outsl
sbb
mov
xchg
out
imul
pop
dec
stc
sbb
cltd
xor
sahf
push
jp
popf
xor
xchg
leave
scas
add
clc
adc
repnz
lods
mov
sahf
cmp
icebp
test
xlat
add
sahf
xchg
mul
inc
in
aaa
movsb
jg
sub
shll
in
mov
lret
mov
pop
movsl
xchg
out
movsb
xor
mov
and
or
jnp
data16
jp
pop
pop
adc
pop
mov
mov
rorb
test
xchg
rcrb
push
mov
test
mov
push
mov
bound
pop
ret
adc
sahf
mov
sbb
xchg
pop
test
in
xor
cmpsb
cwtl
rol
cli
mov
out
mov
and
cmp
mov
loopne
rcrl
add
jne
rolb
add
incb
push
xor
or
pusha
or
sbb
mov
mov
and
fwait
outsb
xchg
aam
inc
mov
icebp
loop
stos
mov
and
inc
sahf
fwait
mov
outsb
subl
add
dec
pop
aam
cmp
leave
lods
jle
sbb
addr16
sbb
add
insl
and
es
and
push
or
jo
popa
sbb
cmp
les
in
outsb
sbb
rorb
mov
mov
and
mov
inc
mov
call
add
push
jle
sbb
repnz
pop
push
outsb
mov
jmp
add
fimull
jge
xchg
rol
loopne
cmpsb
jo
cmp
sub
jecxz
ret
jle
add
push
jo
sbbl
rclb
mov
sti
in
mov
adc
sbb
loope
sahf
pop
mov
mov
imul
mov
push
loop
inc
insb
cwtl
sarl
add
cmp
lods
xchg
cmc
mov
arpl
in
and
aaa
pushf
into
icebp
xchg
rclb
push
xor
shrb
stos
sahf
rcr
icebp
add
mov
test
cmp
inc
adc
sti
jbe
mov
iret
jnp
das
lods
xor
inc
repz
mov
jno
insb
jo
incb
int
jecxz
fisttps
xchg
jp
fidivs
mov
xor
mov
adc
movsl
xchg
in
insl
xor
and
rclb
in
popf
addr16
and
sub
fdivrl
jae
nop
xchg
mov
repz
lds
xor
addr16
es
mov
add
call
cmpsb
repnz
mov
jmp
jge
push
ja
nop
nop
push
adc
mov
ret
mov
jl
imul
pop
and
adc
mov
lea
idivl
lods
stos
dec
enter
mov
mov
dec
ret
jae
inc
sbb
popa
jl
jmp
cmp
stos
lock
pop
mov
jae
lea
cmp
mov
lods
jle
imul
adc
dec
in
mov
push
inc
pop
nop
sti
mov
es
push
outsl
fistpl
daa
xor
fdivl
movsb
mov
xor
and
call
jmp
test
fs
jne
sbb
add
andb
xchg
mov
lcall
test
out
std
outsl
pop
movsl
and
or
xor
xchg
scas
sbb
inc
cltd
inc
in
cld
cltd
and
out
xlat
mov
xchg
test
stc
cld
cmp
xor
rorl
popf
mov
std
leave
cmpsb
int3
and
and
or
call
push
scas
je
add
mov
test
leave
push
dec
jg
fs
fstl
scas
aaa
push
mov
mov
adc
rorl
or
sti
sub
cmpsl
inc
out
pop
cltd
sti
lret
xor
jle
mov
adc
cmp
insl
out
adc
pop
pop
sub
mov
jb
push
gs
sti
jmp
mov
mov
xlat
jmp
icebp
adc
sub
loopne
fcom
push
jp
inc
imul
fldl
mov
aad
cmpsl
ret
stc
mov
imul
inc
inc
and
rorl
push
jmp
test
ljmp
mov
mov
loopne
jecxz
out
shl
inc
out
scas
fwait
addr16
xor
icebp
lods
cmp
repz
sbb
push
ret
test
or
jle
mov
test
adc
xchg
into
adc
mov
pop
decb
test
subb
and
mov
pusha
repz
dec
rcrl
xchg
or
or
int
add
inc
lcall
into
mov
push
jg
bound
jbe
test
mov
call
lahf
dec
jg
or
pop
ficompl
or
lahf
mov
xor
mov
push
test
inc
ja
daa
mov
adc
js
pop
pop
xchg
xchg
out
xchg
inc
add
and
mov
outsl
pop
in
not
cwtl
lock
xor
pop
ja
dec
adc
bound
jbe
xchg
cli
jge
dec
mov
pop
push
jns
xlat
jmp
cltd
sub
popf
shlb
sbb
jns
dec
xor
ja
repnz
xor
sub
call
cltd
rorl
sbb
sbb
sbb
stc
fdivr
stc
sbb
mov
push
shlb
dec
leave
xorb
xchg
aaa
jns
jb
movsl
sarl
cmp
push
add
or
mov
jb
lods
movsb
xor
cmpb
imull
pushf
inc
mov
shl
mov
rorb
push
fcmovu
outsb
pop
pop
adc
adc
sbb
test
flds
aam
mov
in
sbb
dec
not
cmp
and
inc
in
lods
sub
loopne
or
jg
mov
sahf
jo
mov
inc
xchg
outsl
dec
bound
and
subb
xchg
push
push
mov
aaa
insb
jg
je
jg
sub
dec
cs
and
pop
imul
jnp
cmpsb
scas
xchg
mov
mov
sub
pop
pusha
jbe
pop
leave
cmp
imul
cmp
je
jb
mov
inc
outsb
ds
daa
xlat
or
jns
sub
mov
add
mov
icebp
out
loope
outsb
sbb
std
in
cmp
les
add
aas
adc
xchg
dec
lea
push
lods
jl
mov
lcall
dec
subl
rcrl
or
inc
and
or
icebp
push
inc
fnstcw
xchg
adc
movsl
sbb
push
dec
adc
or
in
push
xchg
xor
lret
mov
daa
xor
lods
and
cmc
clc
ret
and
nop
lahf
inc
jns
test
xor
and
and
and
add
mov
cmpsb
out
push
cli
cs
dec
mov
push
hlt
lahf
pusha
or
add
push
mov
ljmp
dec
popf
inc
and
loop
mov
in
cltd
les
clc
test
xchg
test
inc
nop
jbe
inc
mov
shll
add
xchg
jb,pt
and
mov
xor
push
pop
lret
loopne
cmp
mov
cli
xchg
sub
mov
fs
fldln2
call
cld
arpl
loop
pop
fisttpll
je
mov
xor
pop
cmpsl
lods
cmpsb
pop
les
fwait
pop
jns
imul
je
push
xchg
sub
cld
dec
and
in
sub
paddsw
adc
mov
push
pop
xchg
bound
into
lods
push
xchg
sbb
pop
dec
stos
pusha
sub
and
mov
vpsrlw
repnz
jge
sahf
pop
cmpsb
inc
mov
xor
clc
stos
cli
in
add
in
loop
les
lret
sub
cmp
call
dec
call
pop
dec
hlt
rcll
mov
mov
jge
cld
or
cmp
adc
xor
push
sub
pop
mov
mov
pushf
int
or
adc
jg
xchg
add
pusha
add
jb
pop
loopne
pop
sti
cli
dec
push
movsb
xor
jmp
dec
ljmp
adc
loop
imull
push
or
push
stc
mov
dec
jl
dec
jne
test
ja
mov
push
in
inc
cli
cltd
adc
sbb
out
icebp
inc
outsb
std
cwtl
imul
mov
inc
in
add
icebp
jecxz
jno
jo
mov
pop
test
daa
mov
push
sbb
xchg
sti
fisttpll
add
mov
pop
ret
cld
inc
xchg
jg
and
jmp
ds
mov
cli
sub
xor
addr16
repnz
adc
cs
stos
add
xor
arpl
scas
cmp
call
xchg
push
pop
ss
cmp
jecxz
shlb
lods
and
or
loope
lods
inc
leave
jo
mov
mov
adc
mov
pop
mov
cmp
add
sbb
xlat
mov
inc
adc
pop
imul
jmp
mov
push
int3
sub
cmpsl
mov
push
std
loope
jno
dec
inc
idiv
inc
stos
fidivrs
rclb
pop
outsl
cs
pop
push
mov
loop
mov
jne
cmp
fwait
sbb
add
es
push
push
xor
mov
icebp
jno
inc
mov
sub
xor
adc
faddl
ja
hlt
aaa
in
adc
orl
dec
ud1
cmp
xor
data16
nop
push
lcall
adc
and
cmpsl
push
xor
ret
bound
sbb
rolb
mov
or
push
out
aas
mov
pop
inc
dec
pop
iret
orb
mov
rol
sahf
xor
jbe
mov
add
fwait
lods
ss
inc
ficoms
fwait
in
push
in
stc
rcrb
and
sub
ret
lcall
pop
insb
daa
out
rorb
insb
mov
notb
pop
pop
ret
pop
mov
sbb
sub
jbe
cli
je
mov
push
xchg
hlt
xchg
sbb
push
scas
testb
fidivrl
int
push
xchg
mov
stc
sti
mov
ljmp
cld
or
push
mov
mov
mov
in
sub
data16
jns
fdivrs
jns
popa
mov
pop
int3
lods
pop
jecxz
scas
scas
sbb
jae
xor
add
inc
fwait
pushf
or
sub
inc
jbe
jbe
add
movb
cmp
push
sub
inc
cs
in
fstpl
lret
repz
jl
xor
cmpsl
sbb
or
into
gs
lds
sarl
dec
or
jge
sub
add
mov
xor
movsb
cltd
push
movsb
push
scas
js
lahf
mov
lcall
xchg
lret
mov
cmp
mov
mov
es
push
mov
loope
clc
sub
imul
and
ficomps
les
jb
out
and
fwait
push
mov
xor
insb
loopne
mov
and
out
aad
lds
jae
hlt
mov
xor
or
xchg
das
jno
pop
adc
outsb
add
pushf
jnp
imul
arpl
in
mov
or
aam
mov
cmpsl
pop
sahf
sar
pop
ficoms
cli
mov
daa
or
xor
adc
pop
rcl
divb
andb
inc
mov
lret
das
cld
in
js
xor
fcoms
lret
in
cmc
or
adc
call
xchg
pop
push
insl
adc
jno
dec
mov
in
iret
and
mov
test
mov
sbb
sbb
popf
adc
aas
and
adc
out
cmpsb
jecxz
mov
fs
or
in
or
clc
into
mov
xchg
adc
mov
out
aaa
jecxz,pt
and
outsl
stc
inc
aas
outsl
out
notl
shr
cld
adc
setg
mov
push
add
lahf
pop
movsb
ss
pop
jo
loop
lcall
mov
shrb
cmp
popa
xor
js
repz
int
xor
mov
inc
int3
fidivrl
pop
scas
dec
mov
mov
stos
cltd
xor
mov
scas
ljmp
adc
popa
pushf
push
dec
popf
jns
jecxz
push
add
gs
js
push
dec
test
jmp
cwtl
mov
ret
in
leave
pop
in
stc
shld
mov
xor
in
pop
dec
imul
gs
xchg
add
sbb
jp
jo
sbb
adc
stos
xor
cmp
fisubs
xchg
sbb
sbb
mov
push
enter
rdpmc
xchg
leave
pop
xor
or
push
cmp
mov
or
jnp
xor
sti
dec
mov
pushf
mov
out
and
cmp
dec
pop
jno
cld
push
xor
stos
dec
cmp
cmpsw
sarl
inc
push
test
data16
push
loope
jge
and
sbb
xchg
and
data16
or
enter
jg
mov
loope
pushf
ljmp
out
repz
scas
inc
sti
imul
leave
pop
movsl
mov
sbb
mov
add
repnz
jg
mov
pushf
adc
mov
push
in
mov
xchg
aas
and
lock
mov
jecxz
mov
mov
call
mov
test
xor
sbb
sbb
cmc
push
icebp
mov
hlt
mov
mov
jnp
lahf
lcall
pusha
cmp
es
pop
or
add
dec
shl
mov
xor
mov
lock
sub
cmp
clc
in
push
dec
push
dec
outsb
sbb
fucomp
push
imull
sti
shlb
loope
mov
and
std
xchg
xchg
and
adc
xor
leave
call
call
xchg
in
fldt
repnz
add
bound
and
xor
fiadds
push
jmp
les
mov
jecxz
in
mov
mov
or
add
loop
or
pop
add
sub
je
mov
push
adc
mov
fistpl
cmpsl
sub
sub
jmp
scas
pop
mov
xor
outsl
jo
cmpsb
imul
and
or
mov
mov
xchg
nop
loopne
jg
push
add
stc
das
cmpsl
rcrl
xchg
pop
pop
xchg
pop
inc
jmp
xchg
mov
push
sti
les
or
cmc
scas
out
ficomps
leave
mov
mov
lcall
data16
nop
sbb
fdiv
incl
mov
sbb
dec
dec
mov
lret
cmp
insl
subb
dec
mov
loop
aam
mov
cmp
es
mov
jle
mov
test
lret
outsl
pop
scas
roll
dec
mov
pushf
bound
jno
vorps
stc
sbb
and
dec
imul
ja
stos
test
das
retw
mov
pop
mov
scas
push
push
xchg
daa
sub
xchg
adc
jb
sub
cmp
and
xchg
imul
mov
into
push
and
or
fildll
pop
testl
sub
sbb
jbe
insl
popa
push
sahf
call
dec
pop
lods
push
lahf
mov
mov
adcb
jnp
pop
gs
add
sahf
aaa
xchg
fs
jno
mov
dec
js
dec
pop
hlt
mov
aad
pop
fnsave
call
stos
xchg
pop
dec
test
push
ja
lods
push
pop
inc
ds
cli
sbb
mov
adc
sahf
cmp
addl
faddl
dec
shl
data16
in
test
out
ret
test
cmpsl
loop
cltd
and
mov
xor
mov
imul
and
inc
in
lret
push
xor
push
xchg
mov
clc
jg
jp
pushf
xor
sbb
cwtl
mov
sub
mov
and
mov
and
cmp
and
mov
out
in
out
loope
ss
dec
push
push
push
aam
cmc
stc
xor
cmp
popa
push
mov
or
mov
or
adc
addr16
sub
mov
push
dec
ljmp
sbb
or
cmp
xchg
push
mov
jp
pop
push
fidivl
mov
mov
xchg
jae
leave
jns
sub
pop
pop
hlt
sbb
jno
fisubl
stos
into
xchg
adc
add
xor
ja
test
add
push
push
mov
imulb
test
scas
daa
mov
xchg
rorl
dec
inc
sub
sti
pop
in
jnp
push
orb
test
loopne
pop
cs
dec
adc
movsl
lcall
repnz
js
jg
inc
cmp
mov
cmpsb
xor
je
cmp
jp
imul
leave
lret
jecxz
xchg
jmp
pop
js
fisubs
jmp
mov
imul
mov
movsb
xor
jo
gs
divl
sub
or
push
jp
jg
add
jmp
dec
fcomps
jl
mov
lods
xchg
out
aaa
das
adc
cld
pop
pop
je
add
push
mov
jecxz
sub
dec
testl
call
cmp
jge
pop
jg
pop
push
inc
xchg
push
add
add
inc
pop
ds
popf
or
fidivrs
sub
and
scas
test
lahf
sbbb
mov
or
gs
cmc
xchg
sub
jl
in
out
scas
pop
stos
repz
lret
mov
cld
jmp
sbb
or
repz
push
xor
repnz
push
push
and
out
xor
pop
pop
sub
fs
lret
dec
jo
pop
jecxz
clc
adc
inc
jp
push
add
inc
jg
dec
loop
xchg
or
popa
enter
xor
mov
clc
jecxz
mov
jbe
adc
or
sub
pushl
inc
pusha
push
enter
add
jmp
mov
xchg
sub
fsubl
sub
cs
ds
mov
mov
scas
loopne
jg
mov
stos
adcl
rcll
xchg
lahf
inc
jge
imul
add
push
pop
jne
push
inc
mov
popf
in
xchg
std
jge
pop
push
dec
xchg
cwtl
xor
xorb
ja
addr16
stos
ja
cmp
fadds
cvtdq2ps
nop
pushf
push
adc
sahf
stos
cs
xchg
hlt
xchg
sub
dec
int
lods
pop
test
mov
icebp
jb
sarl
cmpsb
or
addl
inc
mov
inc
test
insl
ret
aaa
pop
push
mov
adc
int3
inc
pop
push
scas
jl
out
jge
lock
fmull
mov
ret
lcall
ret
adc
scas
enter
in
jb
jb
iret
hlt
or
inc
lods
pop
mov
lret
ja
fidivrs
arpl
addr16
mov
mov
xor
adc
or
jmp
fdivrp
cwtl
mov
and
int
in
mov
dec
xor
sbb
fstl
xchg
lahf
daa
enter
scas
push
sub
sti
outsb
stc
mov
xchg
cmp
das
notl
and
out
push
sub
push
arpl
test
in
pop
lret
into
dec
sbb
fcmovb
push
iret
dec
dec
std
pop
xchg
scas
dec
sub
sbb
or
add
lcall
mov
aaa
sarb
sarl
push
add
or
int
fistpl
arpl
stos
pop
pop
lea
mov
sub
std
dec
movsb
cs
loop
mov
mov
inc
push
cwtl
xchg
adc
aas
js
jg
test
call
dec
sbb
mov
xchg
cmp
push
cmpsl
mov
cli
fwait
mov
lea
int3
test
and
or
shll
and
push
jp
add
arpl
ret
mov
jg
pusha
dec
arpl
frstor
pop
inc
fildll
mov
cmp
cmpsl
and
std
jae
jle
sub
xchg
push
rcll
repnz
lods
icebp
in
adc
xorb
cmp
adc
arpl
fisttpll
shrl
mov
jecxz
xor
fnstsw
loope
test
mov
xor
data16
cmp
stc
mov
out
testb
lret
shrl
xor
xchg
mov
fwait
push
or
decb
sub
sub
dec
imul
fnstenv
pop
mov
icebp
jecxz
jne
rolb
pop
jno
sbb
jmp
mov
adcl
cmc
jns
mov
lock
mov
and
lods
cmp
push
insl
fnstsw
adc
xlat
scas
cmp
out
pop
leave
pop
push
mov
mov
loopne
or
loop
movsb
pop
mov
pop
jmp
sub
mov
movl
xchg
sub
adc
push
push
or
das
fucomp
cmp
push
sbb
out
xchg
mov
mov
mov
mov
gs
and
repnz
add
cld
imul
iret
sbb
inc
call
rolb
add
inc
shlb
mov
and
push
in
add
jns
pop
in
mov
outsl
ds
sub
daa
les
aad
stos
orl
hlt
in
pop
mov
push
shlb
ljmp
mov
sub
xorl
hlt
mov
lret
sub
sub
int3
ss
jno
test
imul
push
xchg
push
lods
movsb
stos
sbb
sbb
shll
rcll
adc
pop
dec
jns
push
iret
dec
add
inc
mov
cmp
mov
push
push
xchg
sub
iret
out
lods
adc
xor
lahf
jmp
out
outsl
mov
outsb
mov
popa
jecxz
cwtl
mov
sbb
popa
adc
inc
jmp
adc
mov
jae
std
jnp
jno
lahf
into
mov
cmc
add
jnp
or
lods
loope
cltd
xchg
sbb
mov
ret
jp
or
jne
jg
inc
mov
ljmp
aas
cmpsl
fdivs
jp
enter
test
aas
push
insl
jmp
jae
sbb
addb
loope
rorb
movsb
call
inc
xor
ret
sahf
in
sub
in
and
scas
cmpsl
scas
add
push
mov
in
pop
mov
adc
scas
les
cmp
lcall
daa
add
mov
pop
lea
inc
aaa
stos
or
sbb
mov
jg
jge
pop
adc
sti
or
inc
mov
sbb
cmp
gs
test
pop
xchg
test
test
mov
les
dec
pop
int3
push
cmp
adc
add
mov
xchg
lock
or
repnz
pop
cmp
leave
sbbb
lods
push
ljmp
adc
in
insl
cmp
push
out
cmpsb
lahf
push
out
out
push
or
jle
inc
xchg
xor
test
xchg
adc
dec
leave
cli
mov
adc
and
out
lahf
jmp
mov
inc
je
aaa
cli
addr16
mov
or
mov
out
xchg
xchg
ds
inc
dec
cmpsb
mov
xor
sbb
push
rcrl
test
pop
addb
test
adc
cltd
jo
dec
lahf
pop
popf
jae
cmp
ficoms
sub
xor
dec
gs
mov
push
cmpsl
jns
inc
push
xchg
in
out
scas
xchg
push
cmp
imul
inc
int3
mov
push
gs
mov
hlt
push
jnp
idiv
icebp
cmp
shlb
mov
xor
jle
cmp
mov
hlt
lods
addr16
stos
xor
xor
inc
sbb
adc
push
in
jmp
push
sub
mov
dec
xor
add
xchg
scas
dec
scas
push
pop
xorb
insl
dec
mov
push
popf
sarl
or
pop
mov
adc
sbbb
mov
stos
xor
arpl
fsubrl
push
pop
inc
mov
or
and
arpl
sti
mov
lret
pop
jo
xor
mov
dec
add
out
call
sti
xchg
enter
addr16
jb
ret
movsb
add
das
jmp
stc
ja
out
mov
xchg
outsb
rcrl
in
xchg
scas
and
jbe
add
and
shlb
outsb
cmp
dec
cmpsb
push
fwait
jl
mov
xor
inc
dec
inc
dec
lea
and
lcall
or
notb
fs
pop
les
sub
sarb
adc
jae
fnstcw
jns
loop
sub
lahf
adc
mov
pop
sub
xchg
aaa
or
mov
sbb
dec
scas
mov
mov
or
scas
lret
mov
dec
push
mov
insb
inc
mov
repnz
mov
push
cmp
push
or
mov
ja
pop
cs
xor
in
imull
sbb
out
inc
and
pop
insb
cltd
ficoms
push
sbb
dec
insl
shlb
mov
jmp
cwtl
in
dec
xor
push
sbb
sub
xchg
jnp
xor
pop
inc
icebp
mov
mov
sub
mov
fldt
push
das
in
inc
push
jg
sub
adc
dec
mov
cmp
or
je
xor
rolb
add
sbb
cltd
lcall
sub
shrl
cmpl
xchg
imul
jl
xor
push
adc
xchg
push
inc
mov
mov
mov
pusha
cmp
push
mov
sbbl
sti
mov
sub
popa
push
mov
mov
shll
mov
emms
out
stos
jge
mov
inc
hlt
rol
ret
jns
xor
cld
jp
jge
sub
dec
sbb
lea
adc
call
int
jmp
sbb
add
sub
adc
enter
inc
dec
pop
loope
pusha
dec
jne
sbb
inc
in
ret
into
inc
les
dec
jmp
inc
in
jmp
mov
pop
xchg
aaa
ds
mov
xor
jmp
repz
mov
jmp
fcmovb
insl
and
leave
dec
int3
and
sti
stc
sahf
mov
xor
les
test
ljmp
jne
pop
xor
sub
imull
into
fisubrs
int3
and
in
js
or
xchg
lods
daa
sbb
fs
pop
cmp
aaa
push
pop
cltd
mov
call
arpl
mov
mov
cmp
stc
int
lock
enter
je
int3
inc
inc
pop
add
dec
inc
push
inc
dec
adc
test
xlat
cs
ret
lea
pop
jmp
xor
sub
cltd
lods
cmp
xor
adc
cmp
imull
pop
push
jno
sub
or
adc
xchg
push
pop
mov
lock
sahf
mov
xchg
push
ljmp
fwait
shlb
push
imul
adc
aad
outsb
sub
push
dec
mov
pop
push
ret
out
jo
out
and
pop
sbb
testb
jo
cmp
mov
mov
fnsave
jne
jnp
lret
mov
faddl
out
jg
dec
ljmp
dec
adc
sub
pop
pop
sbb
fsubrs
push
in
adc
divl
xor
pop
push
lret
aas
or
mov
cmp
inc
dec
fcoms
sub
fcmovne
cld
cmp
jbe
je
sbb
xchg
push
mov
je
jbe
fxch
add
dec
lods
cltd
pusha
enter
scas
and
inc
loopne
imul
xorb
adc
add
stos
imul
bound
enter
jnp
add
je
es
push
mov
bound
lcall
enter
in
pop
dec
insb
movsb
mov
pop
aas
mov
push
stos
es
pop
sub
xchg
andl
bound
js
inc
aam
xor
inc
int3
jl
push
sbb
cwtl
sub
cmp
mov
mov
shlb
in
adc
loop
pop
xor
out
add
ss
mov
xchg
ret
inc
xchg
rcr
jmp
loope
sbb
inc
movsb
push
sarl
jmp
gs
ficoms
cmp
xchg
jno
je
out
js
fistps
clc
outsl
lea
cmc
cmp
mov
inc
adcl
push
fdivl
aam
xchg
cmp
xchg
leave
mov
out
adc
or
adc
push
adc
sub
dec
xor
cmc
add
add
pop
dec
add
ss
dec
mov
std
pop
cmp
xchg
lods
jmp
dec
add
mov
xchg
jae
add
sub
adc
or
push
mov
lret
sub
loop
sub
sub
mov
cld
mov
test
and
movsb
sahf
ds
jle
enter
repnz
int3
sub
scas
stos
in
add
mov
stos
lods
cs
int
outsl
xor
outsb
xor
stc
cmp
push
push
xchg
ljmp
mov
gs
xchg
out
ljmp
jg
dec
dec
lcall
xchg
enter
mov
daa
stos
fdivrs
xchg
int
in
sub
js
add
and
and
mov
in
ja
fsubrl
arpl
adc
and
jg
icebp
sbb
push
jge
pop
fiaddl
in
fcoms
push
fimull
pop
ja
leave
adc
pop
fistpl
aas
or
xchg
jle
mov
imul
aas
mov
pop
insb
insb
out
cltd
xor
push
repnz
mov
loopne
xchg
fmuls
insb
sbb
dec
into
neg
sahf
repnz
je
fistl
decl
and
push
mov
fisubs
jmp
push
sbb
fstl
scas
add
js
jle
repnz
addr16
test
ret
cmc
mov
and
cli
sahf
jg
dec
pop
aad
clc
movups
cltd
or
add
push
daa
ret
movsl
shlb
loop
xchg
xchg
notl
and
outsb
jmp
ja
mov
sbb
fnstenv
jns
lock
lods
fwait
in
xor
xor
jmp
js
cmp
cmp
mov
je
push
fidivrs
fucomi
out
cmp
shl
cld
cmp
ret
cmp
xorl
arpl
iret
imul
ds
inc
js
adc
push
leave
pop
movsb
pop
mov
push
stos
ret
scas
and
movsb
jp
cltd
stos
loope
or
jnp
fcomps
in
lods
pop
adc
loop
mov
adc
cld
mov
push
neg
xchg
lods
xchg
aas
loope
jae
loope
out
cmp
mov
adc
in
cmp
mov
and
push
mov
not
outsl
aad
popa
icebp
outsl
jmp
adc
stos
jns
clc
xor
cli
pop
jno
jp
fdivs
bound
stos
gs
pusha
sbb
push
xchg
pop
ror
xor
jp
inc
bound
test
xor
lret
ljmp
jo
ss
jmp
std
aam
lea
addl
add
hlt
or
mov
insl
sbb
mov
pop
mov
jb
clc
or
out
js
fisubrl
insb
lcall
add
in
adc
das
fisubrl
mov
pusha
xchg
push
enter
jno
jo
test
pop
gs
jp
pop
jecxz
cwtl
jb
mov
mov
dec
push
in
mov
sbb
ja
fmul
movsl
push
jb
scas
lea
jae
add
and
lahf
sub
pop
jno
icebp
les
and
ret
xchg
lcall
loopne
pop
call
push
add
mov
in
lods
cwtl
mov
pushf
jge
add
aaa
lods
pop
fnsave
jg
ss
stos
aam
into
in
leave
cmp
jnp
imul
mov
sahf
xor
mov
out
das
loop
jns
in
lahf
js
rorl
cmpsl
add
test
sub
lea
aam
arpl
aam
sub
mov
je
testb
pop
xchg
lret
fs
sub
sub
jl
mov
inc
add
mov
mov
cmp
cmc
and
lock
add
je
lock
mov
inc
mov
clc
xchg
sbb
daa
inc
lods
hlt
mov
cwtl
mov
adc
inc
ja
push
pop
adc
push
into
aad
popa
inc
sbb
inc
icebp
mov
popf
scas
cmp
cmc
aaa
dec
adc
in
cltd
ficoms
fistl
inc
jecxz
lret
jae
xor
inc
adc
les
mov
jle
mov
mov
insb
lds
sbb
xor
jo
mov
jmp
out
loope
subl
jle
loopne
jecxz
negb
insl
clc
sbb
int3
test
adc
js
icebp
je
in
mov
pop
add
pop
icebp
icebp
add
mov
add
mov
sbb
jb
xchg
fwait
or
cmp
jl
jno
mov
fdivs
test
sub
sub
rolb
or
stc
cmp
popf
jbe
fsubrl
outsb
mov
cmpsb
lret
rorb
jle
pop
mov
ret
push
test
sbb
loopne
and
pusha
leave
out
pop
xchg
jle
cwtl
cmpsb
xor
pop
arpl
jae
test
pop
repz
fwait
into
or
aas
movsb
popa
popf
or
lret
or
adc
stos
pop
dec
aad
into
nop
in
out
aas
mov
jmp
inc
test
inc
lahf
outsb
lds
dec
jecxz
test
mov
mov
outsb
gs
sbb
adc
insl
repnz
adc
aad
mov
fs
in
nopl
fdivs
js
sbb
bound
jl
adc
stc
movsl
lret
and
inc
sbb
and
pop
in
and
ret
stos
adc
or
outsb
out
aaa
jmp
pop
jg
push
movsb
cmp
and
popa
sti
xorl
fnstsw
xchg
push
xchg
mov
repz
sub
and
or
lods
ret
mov
mov
ret
pop
addb
inc
jmp
bnd
negl
xchg
lcall
mov
notb
idivb
pop
jb
cmpl
in
pop
nop
inc
adc
mov
cltd
insl
mov
repnz
push
fwait
mov
dec
jnp
call
test
test
jp
sti
out
inc
sub
loopne
jne
addl
or
mov
jecxz
jl
cmp
jmp
js
push
mov
or
clc
ret
sub
add
xchg
loop
out
mov
jmp
xlat
cmpsb
repz
rclb
push
lods
fs
incb
loope
cmpsb
and
pop
cmp
xor
nop
test
addr16
stos
jge
test
pop
les
adc
mov
sbb
pop
mov
jne
inc
in
jno
pop
xor
adc
rol
push
mov
add
lcall
add
pushf
test
cwtl
insb
mov
push
roll
push
add
hlt
cmc
mov
pop
add
mov
push
adc
add
jmp
loope
mov
rolb
push
inc
rcl
cmp
mov
pop
shlb
cmp
out
rcrl
mov
ficompl
push
inc
idivb
dec
push
pop
mov
sub
jb
pop
or
inc
and
sbb
cltd
inc
jno
cs
pop
fmuls
mov
xchg
fwait
shll
sahf
mov
push
imul
push
pop
out
cmc
dec
lcall
cwtl
jno
outsb
je
mov
sbb
xchg
cmpsl
sahf
cmc
rolb
sbb
mov
dec
aad
push
mov
mov
mov
add
repnz
rclb
jmp
pop
ss
pop
jns
nop
mov
inc
xchg
ja
jo
in
add
xlat
mov
xchg
insl
rcll
mov
daa
popf
pusha
jle
pop
popf
int
rcr
mov
jge
repz
push
adc
pop
ficoms
mov
jo
pop
stos
gs
popa
stos
inc
push
push
mov
ret
push
dec
xor
in
push
xor
cmp
aam
cmp
call
pop
mov
push
movsl
lret
sub
les
push
repz
ret
adc
mov
cmc
or
in
push
adc
bound
popa
mov
out
jae
mov
fs
push
stos
stos
iret
pop
push
movsl
pop
xchg
sbb
pop
and
pushf
pop
das
pop
es
push
int3
adc
daa
mov
dec
adcb
arpl
scas
push
dec
xchg
mov
pop
add
nop
stos
inc
sarl
xchg
push
fldt
jge
mov
xchg
inc
sbb
and
negl
ja
pop
fldl
adc
ret
jns
stos
sub
push
xchg
scas
stc
outsb
icebp
in
xor
xor
mov
inc
dec
rcrb
clc
mov
orb
shl
and
out
aaa
inc
jnp
shrb
push
ds
add
xor
mov
xchg
es
cmpsl
xor
or
outsb
loope
movl
popf
xchg
lcall
arpl
push
out
push
subb
enter
test
ja
cld
hlt
movsl
adc
pop
loope
sbb
and
pop
xchg
cmpb
cwtl
bound
es
jb
insl
jb
lock
jecxz
je
xchg
lahf
cld
adc
or
mov
sbb
mov
pushf
mov
scas
imul
or
repz
roll
lcall
xor
xchg
mov
xchg
in
stos
or
test
mov
xchg
js
loopne
add
sub
mov
mov
outsb
insb
icebp
sub
mul
fstpl
cmp
cli
xchg
es
out
aas
push
cltd
add
push
bnd
xor
data16
cli
and
mov
mov
inc
lods
mov
es
inc
dec
scas
add
clc
int
imul
leave
mov
clc
gs
hlt
cmpsl
jns
push
jmp
inc
push
or
movsb
mov
jns
orb
out
add
roll
test
dec
jb
cmp
rclb
mov
pushf
adc
mov
mov
popa
mov
stos
sarb
xor
jmp
jecxz
cmp
and
fldcw
roll
fiaddl
dec
dec
xor
pop
addr16
sbb
dec
xor
lret
adc
xchg
or
jmp
cmp
pop
pop
out
and
dec
dec
xor
xchg
cmpsl
adc
lods
mov
and
sub
stos
pop
mov
cwtl
xor
sbb
cld
out
aas
cmpl
addr16
rcll
sahf
sti
and
pop
push
inc
lds
cmp
dec
fdivl
cmpl
and
push
cmp
xchg
fwait
shll
ja
fdiv
daa
jo
stos
sti
sbb
shll
out
int3
pushf
sti
sub
movsb
and
add
jb
mov
stc
and
scas
pop
pop
adc
mov
std
sbb
stos
adc
pop
fwait
inc
daa
int
js
mov
clc
arpl
das
nop
repz
ucomiss
out
jge
mov
push
xchg
mov
mov
out
mov
mov
aas
lea
sbb
inc
xchg
rcll
jle
xor
pop
and
lds
mov
mov
stos
mov
cmpsl
les
test
into
stos
cltd
xor
mov
dec
divb
lcall
insb
or
fs
std
push
cmp
xchg
loope
adc
mov
or
mov
in
mov
pop
stos
mov
pcmpgtw
sarl
and
rcrb
pop
test
lcall
sub
sub
in
outsb
stos
sbb
xchg
cmp
push
aaa
push
jg
pop
les
sahf
dec
mov
inc
test
mov
lods
inc
shr
xchg
ljmp
sub
xchg
and
dec
stc
or
jno
and
push
out
out
or
gs
mov
xchg
adc
sbbb
mov
out
xchg
fwait
dec
cs
mov
dec
xchg
movsl
adc
gs
leave
pop
repz
pop
stos
mov
rolb
add
or
out
popa
jg
test
movsb
xchg
dec
addl
sahf
mov
sbb
ret
ljmp
mov
sahf
mov
pop
xchg
mov
mov
and
jle
adc
push
dec
loop
fildl
xchg
in
cltd
sahf
mov
cmp
adc
insb
cmp
or
decb
js
cmp
std
inc
jnp
dec
dec
adc
cld
push
mov
add
into
mov
dec
addb
hlt
es
jge
outsb
sbb
adc
or
mov
or
mulb
in
ja
cmp
dec
sub
dec
xor
je
clc
lret
test
adc
pop
mov
sub
jb
test
call
subb
sahf
mov
je
adc
sbb
jb
cltd
add
add
dec
sub
push
loope
imul
divl
or
imul
nop
adc
mov
imul
jns
repz
fidivrs
test
mov
imul
xchg
ja
cld
int
sbb
scas
xor
push
jle
loopne
insb
sbb
test
push
and
mov
jl
jp
adc
in
add
pop
fists
cmpsl
fdivrl
les
cmc
xchg
test
leave
sub
lahf
mov
test
adc
mov
scas
fisubs
ss
cmp
mov
or
adc
inc
daa
mov
cmp
push
fdivrs
push
clc
in
mov
rclb
mov
pop
cmp
mov
pop
adc
loopne
pop
mov
mov
inc
mov
or
xor
je
mov
lods
and
imul
pop
push
ss
mov
fisubl
xor
hlt
sub
fsubs
sub
sbb
push
mov
negb
in
push
imul
out
out
shrl
sbb
arpl
jae
sub
mov
jbe
mov
mov
push
sbb
pop
sub
and
adcb
push
adc
shll
js
or
xor
xchg
push
repz
mov
sbb
push
pusha
iret
cmc
mov
cmp
roll
adc
sub
sbb
inc
xlat
cmpsl
sbbb
pop
movsl
add
insl
and
jbe
daa
dec
inc
mov
mov
iret
gs
rorl
test
cmpsl
fistl
cmp
sbb
mov
adcl
cltd
sbb
jg
sti
push
sub
das
clc
mov
ret
in
lret
add
xor
sub
outsl
sub
mov
or
ljmp
cmp
dec
int
mov
mov
dec
into
je
push
inc
mov
or
jnp
iret
into
add
lahf
sub
scas
jns
scas
sbb
es
xchg
jp
xchg
shlb
aam
push
jp
out
inc
iret
xchg
popa
dec
clc
mov
roll
push
dec
add
sbb
pop
and
jne
cmp
mov
lods
cmp
pop
cltd
mov
imul
or
loope
cmpsl
inc
xchg
scas
xor
sub
xchg
mov
adc
loop
lret
mov
test
cli
xor
lods
xchg
mov
xchg
lret
fwait
jno
outsl
insl
pop
xor
repz
mov
lret
pop
ljmp
pop
sub
jle
pop
and
lods
sub
jle
loop
out
lahf
dec
into
lea
popf
pop
imul
sbb
addl
dec
das
lock
jne
ja
lcall
jno
mov
call
clc
ja
ds
inc
jmp
or
xchg
push
xor
int3
jge
addr16
xor
dec
insl
sbb
shl
cmp
es
and
in
push
ficomps
nop
xchg
stos
neg
mov
out
shrl
call
js
add
pop
xor
xchg
xlat
xor
mov
jbe
push
mov
incl
data16
cltd
push
cmpsl
insb
push
xlat
mov
test
clc
adc
orb
ja
idivb
cmp
lret
fmuls
adc
out
mov
mov
cmp
inc
dec
jmp
lcall
pop
push
jb
sbb
loopne
push
and
ja
mov
xor
ret
mov
cli
sbb
push
lret
insb
data16
test
xchg
push
dec
xchg
ret
mov
mov
orb
outsl
mov
jno
ja
mov
mov
sbb
pop
out
mov
jmp
mov
in
and
clc
stos
lds
cmpb
xor
lods
lret
mov
fisubs
dec
and
mov
xor
and
jmp
and
cmpsb
push
cld
push
push
pop
pop
lret
movsb
cmc
jmp
loopne
mov
xor
push
insl
xchg
jl
scas
daa
pop
sub
push
into
xchg
or
hlt
cmp
stos
cmpsl
mov
mov
shlb
add
inc
push
jns
or
and
mov
mov
out
mov
sub
sub
sahf
fcompl
insl
loope
xor
lret
mov
scas
pop
mov
cmp
sub
xchg
loope
loopne
sub
outsb
sub
xchg
lds
mov
push
or
adc
mov
and
scas
jecxz
dec
rcrb
inc
fildl
sub
mov
lret
push
sbb
dec
jb
test
out
test
xchg
scas
mov
mov
mov
jnp
jno
jecxz
lret
std
inc
xor
ja
test
inc
xchg
lds
in
push
out
ds
pushf
ss
jb
popa
dec
int3
pop
add
or
mov
mov
jb
sbb
push
inc
test
call
pushw
lods
insl
adc
jmp
repnz
mov
imul
xor
dec
in
loop
insb
jns
fsub
or
imul
les
mov
adcb
adc
mov
cmp
or
stos
pop
jmp
fdivrs
xchg
cs
es
mov
lcall
aad
loopne
mov
add
pop
pop
cmp
mov
movsb
adc
sub
lahf
sub
xchg
mov
sub
icebp
test
xchg
mov
push
ret
dec
mov
sbb
xor
pop
sub
sub
mov
push
popa
jnp
xor
cmp
in
pusha
dec
push
dec
into
adc
xchg
enter
fildl
add
push
cli
xchg
jecxz
test
push
mov
inc
andb
arpl
mov
lock
and
and
jge
fnsave
out
adc
bswap
dec
test
mov
leave
dec
cmp
add
inc
daa
jge
xchg
icebp
adc
or
sub
add
js,pn
or
inc
sbb
mov
nop
and
adc
test
test
push
adc
neg
jne
mov
pop
cmc
pop
ret
hlt
pop
mull
mov
shl
mov
dec
fmulp
test
loope
iret
int
push
jno
sbb
mov
xor
popa
sub
pop
aam
mov
jo
int3
mov
aam
push
sub
leave
fnstenv
mov
inc
out
rcll
jge
pop
mov
sbb
jo
mov
or
xchg
adc
add
jge
jecxz
or
cwtl
lods
or
sub
js
inc
xor
loop
mov
enter
dec
sbb
inc
stos
pushf
and
and
sub
fisttpll
cld
push
stc
mov
inc
jmp
adc
cmp
xchg
mov
nop
enter
dec
mov
ljmp
mov
xlat
call
dec
and
sub
mov
mov
inc
mov
jge
and
or
cltd
cmp
cmpsl
add
sarl
inc
andb
loop
leave
stos
pop
cmp
outsl
jecxz
dec
lods
movsb
ror
aam
mov
cmp
xchg
cld
mov
xor
adc
jmp
test
cmp
and
insl
add
mov
sar
adc
adc
jle
stc
sub
sbb
push
mov
outsb
dec
mov
mov
xchg
lods
int
jnp
and
push
out
int3
dec
cwtl
inc
xchg
mov
fwait
pop
jae
dec
jl
jmp
gs
jle
xchg
mov
and
and
xchg
pusha
and
icebp
or
jmp
sbb
mov
dec
mov
das
das
aas
scas
test
cwtl
push
mov
mov
mov
adc
add
shl
add
xchg
repnz
mov
lods
aaa
mov
andl
add
dec
push
mov
shll
or
cmp
scas
fldcw
lds
loope
sti
cwtl
xchg
gs
jae
leave
ds
xor
loope
mov
mov
subl
ljmp
cvtps2pi
mov
scas
es
mov
jle
repnz
mov
xchg
jle
repz
ljmp
clc
adc
mov
pusha
leave
mov
and
jp
repnz
mov
mov
push
and
xchg
stos
sbb
mov
fsubp
mov
inc
rcll
fcompl
lret
pop
loopne
fcmovb
dec
ljmp
mov
jb
xchg
nop
or
push
push
clc
push
lock
xchg
lods
shlb
adc
test
push
faddl
addr16
adc
mov
pushf
fs
jecxz
and
xchg
sahf
xlat
int3
mov
mov
inc
cmpl
pop
je
out
inc
insl
jbe
mov
jns
dec
loope
ljmp
cmp
dec
imul
jnp
or
stos
pop
cmpsb
push
lcall
mov
pop
dec
cmp
ss
test
pop
inc
sub
lods
fst
push
push
add
and
xor
data16
out
push
int
xchg
pop
sbb
push
xchg
iret
sbb
mov
push
sbb
push
sub
or
fs
aaa
xor
outsl
cmp
cmp
push
cmc
clc
cmp
addl
ret
stc
scas
out
repnz
mov
out
jo
push
pop
ljmp
dec
roll
cwtl
jle
pop
aad
lahf
aaa
movsb
or
mov
jae
pop
lea
mov
sbb
testl
mov
adc
jne
movsb
jo
or
xor
out
mov
ss
ficomps
cmp
aas
mov
pop
mov
pop
pop
test
outsb
test
push
sbb
push
jbe
repz
lock
pop
lods
push
mov
out
or
mov
sub
jae
pop
lods
add
xchg
loopne
popa
pushf
leave
call
rcl
mov
leave
xchg
mov
in
dec
lods
rorl
mov
call
out
es
in
adc
loope
mov
je
das
mov
or
push
add
rcll
je
xchg
pop
dec
mov
dec
jle
sahf
aaa
cmpsl
in
fadds
punpcklbw
jns
push
rcl
mov
or
ret
pop
and
arpl
test
std
dec
test
push
inc
leave
and
int
sub
pop
mov
test
sub
push
xchg
popf
into
mov
hlt
adc
fldcw
push
inc
loope
pop
rolb
mov
inc
mov
aam
in
test
sar
pop
xor
push
lea
aam
adc
mov
and
or
loope
popa
cmpsl
imul
or
stos
push
adc
fmul
aas
scas
jecxz
push
les
sti
pop
and
cwtl
ljmp
inc
xor
aad
les
inc
or
push
push
lcall
int3
bound
mov
test
and
addl
sub
xor
into
mov
pop
add
xor
xchg
fmull
adc
adc
sahf
popf
cmp
in
std
roll
cmp
cs
mov
jl
adc
insb
loop
mov
and
in
ret
pushf
idivl
xor
xor
data16
jnp
int3
jns
push
sub
push
in
and
sub
loopne
mov
adc
mov
lods
add
shr
stos
outsl
mov
xchg
adc
cmp
push
fmull
adc
xor
mov
cmpsb
and
mov
lock
pushf
pop
insb
aaa
call
push
scas
mov
add
sti
xor
mov
fs
repnz
adc
inc
loopne
xchg
jbe
sahf
leave
insb
push
out
ret
idivl
mov
lret
enter
insb
in
cmc
cmc
shl
push
xchg
cmpsb
lcall
out
out
rclb
test
push
jae
arpl
and
mov
add
pop
shrb
adc
ror
xchg
mov
or
xchg
sahf
arpl
mov
jnp
ss
ret
or
fwait
lods
sbb
mov
stos
sbb
pop
repnz
in
xchg
mov
mov
leave
jo
jno
dec
mov
pop
cmp
or
xor
inc
adc
push
pop
lods
xchg
shll
mov
pushf
and
aas
jb
jge
mov
push
pop
pop
or
inc
adc
xchg
out
mov
mov
sbb
add
bound
or
inc
and
xor
dec
pop
add
jl
pop
mov
insl
mov
cmp
rcll
imul
mov
adc
xchg
mov
or
movsl
push
pop
inc
pop
hlt
jp
push
out
inc
and
xchg
mov
and
fmuls
sbb
lret
and
cltd
ss
xchg
add
sub
jno
lds
das
mov
dec
jns
xchg
mov
push
push
xchg
outsb
ljmp
inc
xchg
adc
movsb
jecxz
sub
sahf
fs
xchg
pop
movsb
mov
inc
ljmp
out
dec
mov
push
mov
push
scas
add
pop
xchg
lock
aam
outsb
in
scas
sbb
xchg
pop
imull
scas
xor
cmpsl
fwait
pop
cmp
pop
push
inc
idivl
mov
daa
xchg
pop
pushf
adc
or
or
stos
icebp
push
mov
cmp
imul
xchg
in
push
lea
inc
dec
inc
pop
je
mov
enter
pop
xor
imul
aam
cmc
mov
sar
sub
arpl
ret
hlt
andb
fs
mov
mov
and
les
jo
push
pop
repz
in
cli
or
js
xor
ja
xchg
leave
push
push
mov
cmc
stos
inc
add
add
push
mov
and
lods
shlb
aad
ljmp
jnp
mov
sar
mov
lcall
sub
push
jg
pop
in
jle
or
mov
enter
xor
repz
js,pt
cvtpi2ps
sbb
add
jmp
push
mov
ret
ja
adc
sbb
mov
push
ret
cmc
sub
inc
and
ret
mov
mov
or
pop
mov
dec
cwtl
cld
pop
in
sete
cmp
out
and
popl
cmp
iret
in
pop
mov
out
jo
adc
pop
test
imul
subl
lock
aam
outsb
mov
and
xor
fildl
inc
jp
add
sub
sarb
aas
push
mov
fbstp
sub
or
in
sarl
push
in
rorl
pop
push
aam
cli
pop
sub
shrb
inc
cld
pop
adc
loope
xor
icebp
into
push
inc
inc
xor
dec
lea
movsb
xor
fs
popl
push
filds
and
fstps
mov
pop
sub
in
pop
inc
jns
lcall
cltd
fsts
mov
sbb
jge
dec
les
insb
fstpl
int3
sbb
cmp
hlt
sub
ret
call
or
test
dec
aad
push
mov
addr16
ret
push
push
pop
add
cs
jb
adc
mov
xor
out
add
mov
cld
std
mov
gs
xchg
xor
and
lods
int3
ret
sbb
pop
add
stos
lret
sub
xchg
and
fbld
mov
mov
push
mov
shll
mov
lods
inc
sub
dec
push
pop
jns
lock
mov
arpl
ret
ret
inc
in
xchg
dec
or
xor
pop
cwtl
mov
lock
pushf
clc
cmc
adc
inc
daa
and
mov
test
in
mov
repz
push
jb
cmp
bound
out
cmpb
pop
loopne
add
pop
xor
les
loope
push
ret
xchg
push
xchg
loope
inc
jns
mov
pushf
mov
mov
pop
lods
and
cli
fistpll
fnstsw
inc
add
insl
decl
inc
subl
fcomps
cmp
cmpsl
stos
mov
dec
lret
xchg
push
mov
test
movsl
aas
adc
push
jne
add
idivb
or
aam
fldt
dec
pop
push
fs
sub
in
mov
dec
mov
popf
inc
mov
mov
or
pop
cli
imul
pop
mov
mov
adc
push
outsl
imul
int
insl
dec
mov
mov
pusha
mov
repnz
mov
jno
and
inc
lea
andl
sub
inc
mov
xorl
adc
jg
pop
fmul
outsl
test
pop
cmp
fcoml
xlat
dec
sub
adc
dec
mov
je
mov
test
or
sahf
dec
gs
cmp
push
fisttpll
cmp
idiv
leave
mov
push
insl
dec
in
popa
sbb
mov
loope
fisttpl
fistpll
in
inc
scas
jno
jmp
repz
cmc
paddusw
jo
ljmp
jge
dec
mov
lock
mov
lret
shll
inc
mov
mov
loopne
hlt
or
dec
shl
enter
inc
clc
push
push
jg
rolb
dec
jnp
push
fwait
cwtl
xchg
dec
mov
mov
add
and
je
insl
jmp
xor
mov
sub
jne
test
fisttpll
outsb
adc
pushf
popf
into
add
mov
add
sbb
push
shr
rcrl
into
in
mov
cmp
pop
rolb
ds
sahf
lea
pop
fists
fmuls
outsl
sti
mov
repz
xchg
int
add
mov
dec
jl
mov
bound
lret
jecxz
jnp
xchg
adc
cwtl
push
aas
push
mov
test
xor
jo
in
xor
sub
sbb
shll
push
repnz
cld
jnp
mov
sahf
push
fcmovnb
fcomi
push
into
push
xchg
and
les
lret
lock
loopne
adc
cmpsb
dec
popf
pop
adc
roll
daa
fneni(8087
test
in
lock
and
xchg
int
sub
push
imul
jae
mov
inc
mov
jnp
sbb
jae
xchg
rcr
lods
aad
push
adc
mov
adcb
cltd
mov
fisubrs
imul
andb
in
mov
push
push
jns
imull
xchg
sub
es
add
negb
test
xchg
fwait
sbb
insl
cmp
popf
push
pop
inc
imulb
pop
imul
mov
cmp
sahf
mov
xlat
xchg
clc
cmpsl
dec
into
mov
xor
bound
int3
popa
sti
mov
xor
and
lock
in
roll
and
push
pop
out
fs
and
fmuls
and
inc
xchg
fstpt
jmp
jo
mov
lods
pop
addr16
and
push
jge
fsts
push
mov
rorl
cmc
pushf
add
iret
cmpsb
cmpsl
fdivrl
dec
lcall
test
popf
sub
sahf
popf
mov
add
stc
cmpsb
stos
jns
sbb
dec
insb
imul
fadd
insl
jp
jmp
push
leave
cwtl
lret
pop
push
inc
push
cmpb
and
cmp
cmp
aaa
inc
cmp
inc
enter
rcrb
addr16
sbb
inc
pop
or
mov
popf
leave
in
push
mov
ljmp
mov
fistpll
cltd
xor
sub
loop
pop
insl
loop
rcll
pop
push
lods
insb
inc
mov
dec
enter
lea
add
adc
inc
enter
jnp
pop
and
cltd
adc
mov
jno
rcrl
ret
aad
pop
xchg
push
imul
mov
sbb
ds
pop
cli
push
sarl
jbe
out
sub
cltd
xchg
rcll
push
and
test
fwait
or
or
inc
das
mov
clc
loop
pushf
test
cmp
stc
int
imul
dec
hlt
bswap
std
mov
stos
add
sub
mov
outsl
cs
push
push
repnz
mov
xor
push
add
movsl
pop
cmp
add
mov
arpl
faddp
test
dec
dec
add
lahf
dec
push
lods
flds
in
xchg
jg
push
mov
fmull
sarl
push
push
ss
cs
imul
pop
xorb
lret
mov
xchg
ds
ret
inc
sti
test
xor
dec
and
bound
push
xchg
mov
dec
je
sub
ds
addl
rorl
subl
mov
xor
jo
movsl
inc
xor
xor
sbb
dec
mov
adc
ficoms
mov
xor
push
mov
stos
or
or
jae
jmp
or
lahf
dec
or
add
int
xor
cmpsb
and
mov
int3
out
pop
adc
adc
fdivs
fdivp
pop
mov
pop
mov
sti
adc
sbb
ds
popf
inc
xor
push
xchg
mov
mov
testb
in
cli
aad
sub
jle
out
pushf
lods
inc
xchg
pop
cltd
sub
cmc
or
mov
test
push
push
ljmp
jns
dec
pop
xchg
std
and
push
and
iret
add
out
cmp
cmp
mov
mov
xor
fldt
popf
sub
test
repz
pop
jl
cmpsl
pop
push
fnstenv
inc
push
lods
pop
inc
push
aam
dec
dec
mov
xchg
xchg
daa
loop
inc
test
icebp
fs
sub
lahf
ret
icebp
ret
adc
add
push
pop
out
sub
pop
xchg
jp
mov
movsl
hlt
lcall
cmpsl
mov
fnstcw
cltd
cld
inc
jge
fwait
inc
mov
jp
or
sub
out
in
dec
rcrb
test
cmpsl
adc
dec
adc
fdivr
mov
fdivs
mov
push
sub
insb
jbe,pn
loope
into
int
xchg
xchg
int
pop
mov
sbb
mov
int
sbb
out
inc
or
mov
dec
dec
movsl
jge
mov
pop
popa
cmpb
add
xchg
popa
cmc
push
loope
xchg
ret
scas
out
mov
insl
outsb
sbb
xor
jbe
cmp
xchg
sub
in
sub
mov
pop
or
inc
out
pop
xlat
roll
xchg
cld
pop
mov
cwtl
mov
outsl
jmp
aaa
jne
dec
adc
repnz
repz
gs
icebp
xor
inc
jmp
mov
std
ja
push
outsl
sbb
cwtl
inc
cltd
xchg
sbb
adc
jmp
xchg
mov
add
fwait
and
pop
jle
inc
movsb
sti
jmp
rep
pop
iret
jae
pop
fcmovne
add
mov
sub
leave
or
pop
xor
or
loope
mov
js
loope
xlat
and
and
rclb
test
not
xchg
push
mov
mov
das
xchg
jge
mov
cltd
sbb
popf
sahf
add
adc
cmp
aas
insl
jae
xor
int
hlt
add
dec
cmp
sbb
inc
dec
imul
push
push
push
jecxz
leave
lcall
jae
xchg
ret
mov
js
nop
cmp
test
sahf
sbb
sar
rcrb
xor
pop
lret
dec
lret
lret
xchg
push
test
pop
push
add
lods
dec
jecxz
or
pop
sbb
push
or
scas
mov
stc
mov
xor
sbb
and
jmp
out
out
cmp
xchg
add
push
popa
push
cmpsl
jnp
mov
mov
sbbb
jge
push
subl
sbb
bnd
in
push
mov
and
xchg
mov
add
jmp
repz
cmp
ret
mov
orl
cld
jnp
shll
loop
out
popa
call
shrb
gs
push
mov
dec
movsb
loope
mov
inc
jg
popa
stos
mov
pop
in
mov
in
cmp
fsubrl
mov
out
inc
sbb
in
add
adc
jne
fsubr
and
dec
dec
sub
pop
xchg
pop
test
mov
adc
or
lret
xchg
sub
push
shl
adc
mov
dec
cmp
xchg
xor
fisubs
cmpl
or
fadd
pop
sahf
jns
xor
mov
sbb
push
rcr
imul
dec
cli
lcall
lods
loopne
mov
push
es
loop
xchg
pop
inc
dec
fsubs
rorb
aaa
sub
cmpsl
aam
jbe
mov
dec
lea
xor
scas
push
add
adc
dec
cmp
movl
out
mov
cmp
call
xorl
jl
mov
dec
clc
mov
lea
leave
ljmp
dec
mov
pop
cmp
mov
cmpb
sbb
mov
jno
mov
xor
lds
int
in
imul
clc
push
push
test
jl
adc
cs
scas
mov
shl
add
jae
arpl
in
add
adc
sahf
test
jae
or
add
ja
dec
mov
pop
fbld
aas
inc
aas
and
and
stos
outsb
add
repnz
jge
xchg
mov
dec
push
inc
int
shl
cmp
jle
jb
in
xchg
mov
inc
xchg
stos
push
lods
mov
push
push
sub
into
bt
jo
xchg
shrl
stc
gs
xchg
jo
popa
dec
push
sahf
xchg
aaa
sub
lret
dec
fmuls
sbb
xchg
add
mov
and
fidivrs
bound
inc
xchg
shl
adcl
clc
or
xchg
push
ficomps
sub
jb
test
push
insl
push
lret
xchg
xor
leave
jne
pop
in
push
imul
xor
xchg
pop
cmp
add
ss
push
push
fs
pop
push
cmp
jb
sub
iret
test
xchg
scas
adc
das
sub
jne
sub
ss
inc
jmp
jle
xchg
mov
frstor
mov
femms
jg
je
jmp
pop
or
jmp
lods
push
aad
push
or
out
cld
mov
outsb
sub
mov
cmp
mov
mov
int
fldt
icebp
scas
cmp
sahf
fwait
ds
pop
inc
jae
rcll
imul
mov
jo
add
stc
ja
int
cltd
fdivr
adc
pop
dec
inc
sbb
lret
out
xchg
mov
sub
and
lock
add
inc
pop
out
in
mov
jmp
ja
fldt
imul
leave
jb
add
sbb
jecxz
ud1
imul
jmp
out
mov
jbe
or
ja
inc
mov
insb
loope
mov
or
pop
pop
mov
mov
inc
clc
loopne
mov
rorb
mov
bnd
pop
lock
jmp
decb
xor
push
out
icebp
sbb
add
push
jno
and
dec
out
adc
aad
mov
cli
mov
mov
mov
mov
pop
shrl
rcll
xor
mov
ret
mov
sbb
pop
jns
fucomp
cmpsb
or
dec
leave
xchg
lret
add
mov
jmp
call
scas
mov
mov
pop
push
and
add
decl
adc
fisubrl
xchg
and
nop
lea
imul
ret
addl
ds
xor
add
pop
lcall
mulb
add
mov
pop
lcall
ret
sbb
mov
pop
cmc
xchg
sub
add
imul
pop
scas
sbb
xor
sub
push
sub
cmp
sub
std
into
scas
lods
sarl
lret
jge,pt
int
jmp
add
pop
dec
push
movntps
lock
mov
push
cmc
rorl
jmp
push
pop
dec
mov
popaw
sti
fmuls
lret
fcompl
lods
ss
push
xchg
pop
into
data16
sub
js
lock
and
shlb
gs
push
cwtl
sub
adc
push
push
movsb
out
gs
mov
cs
nop
xlat
add
sub
dec
pop
sub
fsts
mov
cmc
pop
and
into
push
sbb
and
adc
sub
rcpps
xchg
sbb
xor
jne
aam
stos
icebp
mov
imul
add
jno
xchg
out
cltd
mov
pop
icebp
sub
adc
jo
cld
add
lds
pop
loop
aad
cmp
add
push
mov
dec
outsl
and
gs
or
xor
jnp
xor
dec
cmp
mov
jecxz
pushf
mov
bnd
lods
fucomp
testb
loop
push
mov
mov
push
jl
rcrb
sbb
xchg
xchg
dec
xchg
es
and
pop
dec
insl
pop
inc
lea
dec
inc
fbstp
inc
mov
lret
mov
jb
fnstcw
mov
test
cs
aaa
add
pop
fdivrl
fdecstp
arpl
pop
ficompl
xlat
mov
loope
pop
cmp
int3
cli
add
and
jmp
jle
dec
cs
in
and
jne
test
xchg
aad
lods
jge
loope
fwait
lds
sub
fdivl
arpl
lahf
pop
mov
xchg
mov
xchg
jno
mov
in
push
jle
pusha
push
sub
pop
test
cli
daa
dec
mov
mov
imul
cwtl
lcall
lret
ljmp
push
dec
cmp
insl
inc
stos
sub
movsb
lret
pop
xchg
xchg
out
aad
and
mov
ljmp
ja
fcoms
outsb
fisubrl
loop
jecxz
pop
push
mov
inc
imull
into
fs
jae
mov
pop
testl
add
jecxz
int3
adc
sub
andb
aaa
mov
adc
imul
pusha
sbb
pop
jge
add
jno
pop
repnz
xchg
dec
inc
cli
xor
ret
jnp
mov
icebp
outsl
fdivs
pop
js
icebp
push
xor
mov
inc
mov
jae
test
and
push
add
pop
and
dec
jp
ja
shl
arpl
jbe
mov
sahf
pop
jo
js
cmp
mov
nop
jne
je
in
adc
push
cld
mov
push
mov
test
sbb
out
sub
xor
cmp
out
or
outsb
adc
jno
and
scas
add
add
jp
fwait
iret
xchg
cmp
fwait
hlt
cmp
iret
jns
js
sbb
xor
xchg
inc
push
dec
scas
mov
stc
jbe
sub
or
push
push
lds
dec
push
cmpl
adc
inc
rorb
ljmp
pop
lcall
dec
jle
daa
call
je
mov
sarb
arpl
jb
out
push
dec
xchg
outsb
test
repnz
call
push
sub
xchg
mov
les
or
and
repz
and
mov
cli
ret
call
mov
cld
dec
outsl
in
arpl
sub
sub
cwtl
pop
movb
mov
pusha
adc
sbb
aas
hlt
or
mov
cmpsl
stc
cmp
mov
iret
or
add
sub
in
xchg
mov
lods
cld
adc
mov
orb
lret
cmpsb
lods
jmp
xchg
lods
clc
xchg
push
xchg
xor
adc
and
lcall
lahf
leave
cmp
mov
cltd
enter
test
mov
sub
mov
pushf
cli
sub
sub
push
push
sub
add
inc
push
inc
inc
or
jmp
shr
hlt
jno
jnp
in
imul
cwtl
loopne
and
jne
cld
sbb
stc
enter
pop
lods
fwait
mov
hlt
dec
and
in
sar
sbb
jecxz
arpl
inc
outsb
sarb
and
insl
lcall
lea
loop
shrb
out
aas
test
mov
dec
sbb
stos
or
loop
fmull
scas
adc
xchg
in
pop
add
dec
lahf
inc
stos
pusha
mov
dec
push
in
inc
arpl
pop
pop
mov
lcall
inc
shll
push
dec
lahf
add
and
add
jl
out
sti
xchg
incl
jne
cmp
mul
call
leave
incb
mov
lret
mov
mov
fisubl
insl
or
mov
push
and
push
cmp
ret
xor
inc
in
js
imul
or
cmc
sbb
arpl
jle
push
outsb
adc
stc
mov
jb
repz
cmp
push
xchg
sub
push
or
mov
sbb
sub
dec
push
sbb
int3
cmp
xchg
mov
push
jecxz
and
daa
adc
push
xchg
in
dec
mov
inc
dec
and
out
jmp
mov
cmp
adc
imul
pusha
sbb
mov
loop
mov
cld
loope
ljmp
xor
imul
push
xchg
pop
rcrl
xchg
iret
jnp
jle
mov
testb
hlt
dec
incb
inc
insb
xor
scas
xchg
sti
lret
cmp
sahf
push
lods
push
xchg
sbb
xchg
add
pop
ficomps
or
mov
leave
cmp
or
sbbl
xchg
jnp
xor
push
jl
sbb
push
cmpsl
jbe
or
sbb
inc
insb
sub
xchg
nop
ss
daa
into
fildl
loop
and
push
call
insb
outsl
xchg
mov
test
mov
imull
mov
cltd
icebp
jl
cmp
outsb
and
into
push
inc
xchg
mov
iret
dec
cmpsb
mov
cmp
xchg
pop
out
std
bound
mov
add
or
jp
push
rcrl
sbb
repnz
mov
outsl
pop
and
icebp
mov
dec
jbe
jo
test
jb
fidivl
lds
dec
mov
call
dec
xchg
mov
xchg
adc
out
mov
xchg
stos
std
mov
scas
pop
loopne
test
in
out
xor
daa
xchg
out
orb
add
dec
lea
mov
rclb
inc
repnz
outsl
mov
cmp
aad
jae
cmc
inc
sub
scas
jne
xor
sbb
add
xchg
lds
pshufw
add
xchg
lea
xor
or
test
push
out
test
push
rorl
dec
ljmp
stos
push
xchg
or
ds
lds
subb
add
iret
jnp
mov
adc
out
push
repz
outsl
push
lock
ss
fbstp
pop
dec
cltd
mov
and
test
push
xchg
xor
rcrb
sbb
aad
cltd
or
sub
mov
jle
add
add
and
xor
xchg
popa
push
xor
mov
ja
dec
or
cmpsl
or
lods
dec
ret
int3
clc
repz
add
testb
adc
sbb
sbb
icebp
outsl
add
int3
sar
sbb
xor
jecxz
mov
sbb
popa
jno
sbb
xchg
mov
mov
jns
shr
mov
je
mov
dec
adc
mov
loop,pt
aam
cltd
sub
mov
cs
sbb
rcrl
add
out
insl
push
mov
mov
movsb
cltd
mov
adc
mov
sub
and
pop
fists
dec
cmp
nop
cwtl
in
cld
pop
ficoms
dec
lods
lock
shrl
and
aaa
jns
rol
sbb
push
sbb
cmpsl
jge
mov
rcrl
sti
xor
mov
push
int
xchg
lods
xor
fldt
int
mov
sbb
pop
std
push
std
test
jb
cmpb
out
js
and
pop
inc
xchg
dec
or
push
stos
or
adc
push
xchg
insl
repnz
out
clc
mov
inc
xchg
fcmovnu
and
xor
cwtl
xchg
cmp
dec
pop
jne
cvttps2pi
adc
mov
adc
mov
sub
cltd
mov
imul
jo
out
jle
je
outsl
xlat
shll
push
sahf
in
aas
push
pop
scas
mov
cmp
enter
mov
iret
out
and
int3
adcl
sub
or
test
or
into
lock
and
mov
xchg
lea
mov
adc
mov
cmp
push
sbb
pushf
imul
jge
aad
test
sbb
lods
pop
push
jnp
push
aam
int3
jg
mov
stos
in
loopne
pop
fs
ret
hlt
mov
repnz
push
xor
rcl
and
mov
xor
mov
xchg
xchg
xchg
pop
popf
dec
mov
dec
push
sub
jmp
adc
scas
inc
fsubs
bound
push
push
adc
mov
pop
pop
outsb
pop
imul
out
mov
adc
cmpsb
mov
mov
je
sub
cs
ja
outsl
dec
xchg
lcall
adc
inc
in
mov
insl
pop
aam
mov
iret
adc
mov
cmp
mov
loope
or
cmp
or
std
enter
das
lret
out
jo
jle
nop
sub
nop
inc
mov
aaa
adc
pop
sub
insb
hlt
push
cmp
mov
in
jle
stos
nop
fs
jl
jg
xor
mov
dec
je
jo
cwtl
in
jmp
pop
in
add
xchg
cmp
sbb
cmpsb
pop
inc
mov
stc
out
clc
add
dec
push
icebp
jge
adc
adc
ror
dec
jecxz
hlt
cwtl
jno
sub
adc
xchg
out
inc
jl
out
stos
push
popw
dec
rcrl
and
xchg
add
mov
cmp
push
inc
push
jns
xchg
push
icebp
push
xchg
repnz
pop
pusha
push
ret
adc
loope
dec
add
adc
dec
or
push
and
sbb
stos
ret
outsb
cmpsb
movntps
mov
push
pop
fiaddl
xchg
popf
data16
cwtl
jmp
or
dec
bound
leave
jae
adc
mov
mov
sbb
pushf
mov
pop
pop
outsb
inc
out
fs
jg
and
out
xor
repz
jbe
cmpsl
leave
mov
and
xor
inc
jle
lcall
insb
mov
cmc
ljmp
movsb
sbb
shrl
and
push
rolb
test
mov
bswap
in
xor
out
adc
pop
lock
adc
pop
sub
leave
fwait
lcall
cmp
adc
xor
nop
mov
call
sub
cmp
cmp
sti
jle
movsl
cmc
inc
out
pop
xchg
push
jg
sbb
fsubp
mov
into
push
lret
mov
mov
mov
push
repz
cmp
mov
and
or
dec
cmp
adc
rorb
or
sub
sbb
pop
jns
ds
dec
dec
aad
mov
pop
popf
push
in
xorl
inc
jle
jl
daa
sbb
rorl
divl
dec
out
lahf
jl
addb
fbstp
pop
stos
jno
sbb
and
movsb
mov
jne
mov
mov
jae
pop
fs
stos
dec
fidivl
mov
js
mov
insb
lods
mov
push
dec
mov
mov
adc
dec
stc
stc
adc
push
bnd
ja
jno
dec
jmp
mov
popa
int
lea
push
jle
pop
in
xor
dec
or
xor
test
nop
test
fists
adcl
mov
mov
out
je
arpl
mov
sbb
idiv
xlat
jbe
pop
push
jne
sub
cwtl
xchg
mov
jo
push
inc
inc
adc
imul
lea
sti
sub
inc
or
lods
xchg
push
fnstenv
in
and
jns
lea
sarb
ret
dec
push
and
xchg
scas
sbb
mov
xchg
popf
into
push
cmp
js
and
xor
cmc
pop
mov
mov
mov
mov
es
and
lock
cmc
mov
jge
mov
aas
sbb
push
sahf
or
addr16
cmc
ficomps
mov
lock
icebp
aaa
imul
dec
mov
jbe
mov
or
mov
loope
push
pop
lods
dec
add
cmc
dec
fstpt
or
inc
and
jae
dec
cmp
jnp
jl
dec
faddp
lea
addl
sub
das
pusha
rcl
jecxz
jae,pt
cmp
xor
lea
cmpsl
mov
xchg
mov
push
lret
je
and
outsl
sub
mov
jl
mov
mov
mov
mov
out
add
iret
sub
daa
inc
mov
xchg
mov
idivb
push
mov
sar
inc
jb
sbb
stc
dec
adc
sbb
cmp
cmp
xchg
jge
mov
mov
jle
in
sbb
jno
cmc
leave
fistpll
shlb
xchg
mov
mov
add
frstor
das
xchg
and
mov
dec
mov
rorl
bound
pop
cmc
icebp
shll
lahf
xor
and
dec
jb
out
mov
add
xchg
in
enter
icebp
arpl
ljmp
and
insb
pop
or
sbb
adc
dec
lods
adc
mov
imul
lret
jmp
jns
xor
popa
pop
jae
pushf
outsb
dec
das
sbb
fwait
mov
adc
orl
xchg
or
cmp
mov
pop
lahf
or
or
jbe
dec
in
mov
cmp
pushf
jp
pop
sub
mov
pop
inc
sbb
je
mov
cld
adc
test
add
ret
pop
fisubl
pop
push
outsl
scas
outsb
test
jae
xchg
and
addr16
repnz
jge
sti
jbe
and
cmp
add
mov
jmp
sub
xchg
in
and
mov
fistpll
push
jno
iret
test
mov
scas
fadd
add
test
dec
mov
int
cmc
sbb
ja
repz
xchg
jno
hlt
out
mov
es
sarb
push
push
mov
in
push
xor
mov
mov
sbb
loope
inc
mull
cld
mov
xorl
xor
jb
push
incb
fcmovu
and
cmpsb
jae
jbe
adc
dec
leave
loope
sahf
mov
repnz
lahf
and
std
pushf
mov
test
out
mov
xor
out
scas
test
jnp
dec
mov
mov
mov
cld
inc
sahf
jbe
sub
add
inc
fidivrl
or
imul
mov
es
fdivl
js
inc
mov
iret
pop
shll
outsb
cmc
mov
pop
mov
and
xchg
xor
int3
xchg
pop
pushl
push
xchg
push
adc
jl
cli
divb
shr
push
push
mov
push
enter
mov
stos
mov
cltd
or
cld
ret
lds
repz
insb
dec
inc
test
aam
push
mov
inc
jmp
scas
or
daa
mov
xor
pop
mov
icebp
pop
xchg
pop
sbb
out
and
ret
jp
enter
sbb
fidivrs
add
jbe
dec
movsb
xchg
mov
adc
and
iret
sbb
cmp
or
aam
lds
ffreep
mov
pop
adc
je
ds
dec
jo
adc
sbb
xlat
and
pop
enter
lret
sub
in
testl
add
dec
xchg
mov
jp
insb
pop
or
aas
mov
lods
push
xlat
cwtl
pop
lods
iret
mov
imulb
jno,pn
adc
or
jb
add
mov
push
fists
mov
adc
insb
jo
jno
mov
cltd
dec
xchg
mov
ja
lock
xlat
push
adc
fldt
cmp
push
dec
dec
add
repz
data16
mov
mov
jg
aad
add
faddl
sbb
in
scas
cmp
mov
add
leave
shrb
insl
pop
repnz
push
push
dec
inc
mov
cmp
push
cmc
mov
pop
dec
cmp
mov
xor
mov
and
dec
jp
pop
and
lods
sahf
cltd
fwait
inc
scas
fdivrp
sub
out
push
jo
cmc
jns
sub
stc
add
test
test
imul
sti
pop
dec
out
pop
in
mov
inc
sub
and
inc
cmc
pop
inc
repz
inc
and
loope
neg
lock
add
jo
sar
push
xor
or
dec
das
data16
sub
aas
xchg
or
mov
cli
popf
jno
popl
mov
pop
out
jmp
jo
inc
jl
pop
cmp
xor
cmp
inc
jge
das
fistl
xor
push
test
movsl
shl
add
jno
lret
sbbb
or
pop
mov
push
out
xchg
xor
insl
mov
cmpsb
hlt
sub
je
in
xlat
cwtd
aam
adc
lcall
cld
mov
test
jmp
inc
jnp
mov
es
imul
sub
or
lds
mov
pop
sbb
xor
scas
sbb
lock
int3
mov
test
pop
scas
enter
fstpl
xchg
or
cmp
dec
sub
lahf
push
aaa
sub
push
insb
loope
stc
cmpsb
stc
in
cmc
mov
add
pop
pop
sub
push
mov
xor
cmpsb
cmc
cmp
jae
mov
xor
dec
cltd
xchg
movsl
std
and
mov
and
out
cltd
dec
mov
inc
and
lods
cld
jl
sbb
cs
popf
out
insb
pop
icebp
sub
lea
sahf
adcb
aad
adc
xor
mov
dec
test
xchg
inc
leave
lahf
in
sbb
xchg
fwait
and
dec
xchg
or
mov
shr
cmp
lods
lcall
outsl
xchg
js,pn
adc
push
xor
popa
sahf
mov
sub
sub
test
fldt
outsb
cmp
rcll
jge
mov
inc
push
lret
mov
js
mov
imul
xchg
mov
mov
subb
mov
addr16
pop
push
add
or
psubsw
jo
imul
dec
adc
es
shrl
shlb
daa
jo
std
push
mov
mov
inc
insl
cmp
fsubs
cmp
inc
lods
scas
or
inc
jnp
enter
into
int3
mov
xorb
mov
xor
add
adc
in
and
push
inc
cmp
jns
inc
int3
adc
cwtl
je
movsb
push
addr16
aaa
nop
jo
and
fincstp
mov
and
cmpl
add
inc
mov
movsb
sbb
xor
mov
jns
hlt
movsb
ds
jecxz
clc
inc
mov
cwtl
mov
pop
and
scas
int3
mov
mulb
imul
xor
fsubl
dec
mov
jb
or
icebp
and
pop
or
mov
dec
adc
pop
pop
mov
cmp
mov
lea
xor
xchg
jg
cld
adc
rorl
jp
lods
pop
pushf
sbb
xor
cmpsl
jl
sbb
mov
push
je
paddsw
pop
sbbl
mov
jnp
and
adc
in
idivl
jne
fyl2x
mov
repnz
jns
pop
ret
fiadds
mov
lret
arpl
data16
dec
scas
out
ret
and
xlat
imul
es
dec
inc
sbb
dec
mov
cmp
mov
adc
xchg
sub
and
imul
xchg
xorb
mov
inc
mov
mov
cmp
mov
shrl
pop
dec
or
repz
push
cli
iret
sbb
mov
mov
mov
mov
sbb
repnz
mov
lock
jo
sbb
lods
mov
cltd
ljmp
inc
push
ss
nop
and
or
push
and
jo
imul
cmp
inc
add
cmpsb
insl
imul
daa
rorb
out
fst
outsl
dec
pop
js
mov
sbb
imul
jge
out
sbb
sub
mov
pop
dec
test
fidivs
jne
sbb
in
ret
xor
mov
push
mov
push
cmc
popa
mov
inc
cs
leave
sti
dec
or
outsl
test
sub
pop
fbld
inc
adc
xchg
mov
les
lea
inc
data16
pop
loope
cmp
push
jle
xor
or
jns
pop
fmull
add
ds
scas
std
pop
push
outsb
dec
test
ret
ds
pop
fsubrl
je
rcll
sub
dec
push
cmp
mov
mov
lods
popa
ret
sbb
ja
inc
nop
fisttps
push
lret
sub
imul
sti
popa
ret
pop
adc
dec
jbe
outsl
aad
arpl
or
xchg
sub
push
mov
push
aas
jecxz
adc
popa
pop
js
mov
sbb
int3
dec
xchg
fadd
sub
popf
mov
das
popa
outsb
imul
dec
dec
and
mov
add
loope
fsubrl
mov
lret
dec
push
cmp
xchg
or
ret
xchg
dec
cmp
loopne
fisubrl
xchg
pop
jne
into
scas
repz
mov
testb
mov
and
pop
and
rolb
xor
scas
xchg
sbb
xlat
movb
fistpll
inc
inc
push
xor
and
sti
mov
scas
leave
mov
movsl
addr16
fists
and
and
xchg
std
pop
ja
xlat
sbb
stos
add
jle
cmc
sbb
pop
dec
in
xchg
and
xor
and
jge
sub
xchg
mov
hlt
les
mov
inc
xchg
cltd
scas
aas
dec
stos
fldenv
pop
outsb
sub
xchg
aas
pop
sub
jbe
inc
mov
and
xchg
mov
repnz
push
in
xlat
pop
jp
mov
cmp
jmp
out
mov
mov
lock
sahf
or
inc
sbb
mov
cmp
sti
pslld
cli
loopne,pt
stc
das
in
dec
dec
mov
out
arpl
scas
aad
insb
adc
cmp
jne
mov
aas
dec
movsb
push
je
movsb
out
cmc
xchg
cltd
jnp
fisubs
test
sbb
push
dec
insl
pop
pop
cltd
sarl
imul
xor
out
loope
sub
mov
repnz
sti
enter
xchg
lret
inc
jle
bound
inc
mov
sub
cmp
in
push
lods
sbb
cmp
xlat
fs
jb
cs
xorb
call
mov
push
and
jbe
adc
or
insl
into
dec
sahf
subb
es
shlb
stos
and
ret
mov
popa
call
mov
aad
movsb
pop
mov
repnz
lds
mov
lods
adc
lret
js
mov
into
es
xor
fsubl
inc
lea
mov
rclb
movsl
aaa
mov
icebp
sti
push
aad
inc
sbb
xor
out
mov
in
dec
enter
cld
xor
imul
pop
out
cmp
insb
aaa
in
or
insb
loop
mov
cli
sbb
mov
daa
pop
mov
pop
xorb
jl
sub
push
lahf
inc
lock
pushf
cltd
inc
lcall
or
jno
in
dec
mov
dec
add
aad
cli
pop
enter
cmpb
into
pop
push
adc
icebp
pop
or
test
push
mov
mov
xchg
adc
add
mov
in
negl
push
std
xchg
mov
movsb
mov
movsb
movsb
jmp
xor
mov
dec
push
out
adc
std
lret
mov
inc
xchg
pop
jo
stos
xchg
out
out
lods
testb
lds
mov
or
sub
adc
xor
pop
scas
jmp
cmp
pop
and
ds
js
xchg
pop
xor
ja
vmcall
dec
cmp
jle
mov
adc
dec
pop
loopne
test
cmp
aam
jno
loope
aam
mov
pusha
xchg
testb
dec
xor
mov
push
popa
mov
adc
fs
stc
cmpsl
push
sbb
rcrb
fs
out
gs
pcmpgtw
cs
fildll
fldt
in
sti
sti
outsb
push
mov
movsb
cmpsb
or
mov
sbbl
sub
xor
es
add
and
pop
dec
out
xor
stc
pop
js
mov
mov
inc
out
in
adc
cli
mov
jae
xor
call
ljmp
cmp
int
test
jbe
in
in
lret
aaa
mov
je
xlat
jmp
xor
mov
inc
mov
cltd
repnz
jnp
pop
jb
or
lret
adc
rclb
fistpl
push
shlb
mov
xchg
xchg
loopne
push
sbb
ja
push
jnp
push
push
push
enter
pop
jns
cmp
daa
ds
sbb
mov
testb
mov
dec
adcl
je
pop
rolb
mov
fistpll
fistl
mov
movsb
es
rclb
add
push
mov
notb
mov
and
test
repz
push
insl
subl
lock
outsl
push
insb
mov
adc
testb
fldcw
loop
sti
add
enter
cwtl
fisttpll
xchg
stos
adc
shlb
lcall
cmc
xor
jmp
jl
mov
xchg
int
adc
adcb
out
repz
cmp
sub
push
sub
mov
imul
aas
inc
cmpl
out
xlat
sar
push
dec
xor
xchg
mov
js
sti
pop
in
scas
cmc
aas
ja
inc
ss
sbb
fadd
lods
lret
inc
fcomp
mov
sarb
fbld
push
mov
negl
std
adc
in
inc
cmp
popa
in
jp
pop
bound
out
dec
jne
sub
jo
sbb
and
add
clc
cmp
sub
mov
cli
cwtl
inc
add
add
xchg
negl
xor
cld
mov
lds
jle
xchg
xor
inc
pop
mov
add
pop
imul
stos
mov
xchg
cmp
jg
cli
dec
jo
jl
mov
lods
push
ret
jbe
les
pushf
test
das
jl
push
loop
enter
jbe
jnp
cli
loopne
mov
dec
push
fldl
fisubl
dec
stos
ret
sbb
pop
inc
mov
movsbl
js
in
xchg
push
jae
sbb
fwait
andb
and
imul
fwait
jae
mov
insl
in
in
adc
gs
sbb
pusha
lods
xlat
sub
mov
shl
jmp
inc
out
push
insl
or
adc
rorl
lret
cmpsb
xchg
push
sti
cld
or
lock
xor
inc
sub
push
mov
ds
cmpsl
xchg
adc
pop
mov
xchg
imul
lds
pop
insl
addr16
and
shrb
mov
inc
out
cld
cmc
inc
mov
xor
fcoms
lock
mov
mov
testl
rolb
mov
push
xor
push
negb
mov
sbb
test
sti
into
ficoms
sbb
xchg
xor
sbb
xor
shl
es
icebp
out
or
jns
das
dec
push
xchg
ljmp
ja
push
xchg
mov
into
xchg
dec
repz
stc
xor
sub
push
adc
fwait
stc
dec
sarl
insl
or
mov
mov
movsb
push
cmp
shrb
add
add
inc
out
notl
push
mov
aas
jo
pop
fisubs
icebp
jle
xchg
push
std
dec
sbb
aad
inc
in
sbb
adc
mov
lock
jmp
ret
adc
add
push
out
bound
mov
mov
jnp
lahf
mov
jno
xor
dec
stos
stos
jle
sub
cs
hlt
sub
mov
rcll
cmp
dec
nop
xchg
push
sub
pop
fcoms
mov
pop
jecxz
xor
popa
leave
ja
xor
mov
dec
cmp
mov
mov
xchg
popa
or
push
mov
sbb
leave
pop
adc
cmp
mov
xlat
jo
out
test
mov
cld
rcr
mov
les
dec
mov
push
sbbb
movsb
int
movsl
dec
ljmp
insl
push
fmuls
pop
jmp
jl
add
adc
jmp
xchg
jmp
jno
nop
idiv
gs
into
ret
sbb
mov
into
jl
or
jmp
xor
cmp
push
lahf
lds
cmc
add
imul
iret
jge
push
jns
addr16
push
ljmp
sub
icebp
fs
adc
in
cmp
xchg
stc
push
push
jo
pop
xchg
popa
xchg
push
arpl
icebp
sbb
sahf
pushl
ljmp
das
jae
inc
shll
xchg
jle
inc
xchg
loope
out
dec
movsb
dec
xchg
add
xchg
fstp
seta
jns
fcmovnbe
sub
push
push
icebp
in
mov
xor
repnz
out
stos
xchg
pop
ja
and
jp
pop
jo
test
in
pop
sbb
sti
ljmp
aam
loop
nop
push
mov
xor
jne
push
cmp
add
push
hlt
js
dec
sbbb
mov
add
add
pusha
cmp
or
pop
sbb
jmp
push
outsb
pop
aam
fldcw
pop
cmpsl
int3
or
je
in
lret
or
cwtl
jae
mov
and
sub
jl
and
clc
cli
aas
dec
jmp
pop
aam
cs
jecxz
ficomps
fisttpl
js
cld
jae
push
outsb
sub
clc
push
adc
iret
shll
fisubl
mov
out
jo
fadd
das
fs
out
mov
sbb
inc
mov
outsb
notl
sbb
hlt
test
dec
mov
in
pop
mov
mov
xlat
add
push
rsqrtps
lret
add
sbbl
push
or
xchg
mov
add
adc
imul
mov
cmpsl
popl
mov
cmpsb
pop
lret
scas
mov
inc
inc
xlat
mov
lea
xchg
cld
call
dec
mov
cs
jo
je
mov
or
cmp
lock
inc
push
dec
pop
dec
test
cs
nop
jge
pop
out
mov
jmp
enter
mov
movsl
subb
mov
add
idivl
inc
adc
sub
mov
push
pop
daa
cltd
test
popf
loope
cmp
mov
cs
adc
dec
pusha
jl
inc
jmp
mov
lea
ss
aam
dec
push
ffreep
xchg
adc
jns
mov
les
pop
pop
push
in
mov
jmp
add
mov
scas
add
cmp
hlt
mov
push
jae
jns
sbb
jb
xor
mov
dec
sub
jg
push
icebp
xchg
push
les
in
xor
fcompl
arpl
or
jne
test
outsl
jl
jge
push
in
pop
xor
lea
sahf
jle
push
push
ds
stc
popa
mov
xor
or
mov
shrb
cmpsl
aaa
daa
rcrl
lods
in
loope
add
jmp
and
jl
jmp
lds
push
lcall
adc
ret
jnp
mov
mov
ja
fs
push
xor
into
je
sbbb
test
inc
jb
sbb
xchg
jo
dec
mov
xor
mov
bound
add
mov
push
insb
out
mov
mov
sbb
xchg
jno
icebp
sub
push
into
shl
mov
cmpsl
cmp
push
je
mov
sub
aad
mov
ds
mov
mov
inc
dec
inc
mov
xchg
push
mov
ds
xchg
fdivrs
adc
xor
test
ds
pop
loope
xor
daa
push
out
incb
pop
fisubrs
cmp
or
add
lret
jae
outsb
stc
jp
mov
pop
cwtl
sbb
dec
sahf
sub
sti
andb
sbb
mov
or
xchg
sbb
jb
jl
jb
stc
stos
xchg
push
xor
sbb
and
lret
popa
push
sub
cli
mov
lods
bswap
clc
add
test
mov
mov
mov
sub
add
xor
lret
lods
or
sub
sahf
aaa
and
stc
jae
push
push
jo
inc
cmp
pop
dec
jb
int3
pop
mov
nop
scas
xor
mov
xchg
push
xor
push
sbb
dec
gs
enter
sbb
loope
dec
cmpsb
adc
jo
ss
repnz
adc
mov
mov
lret
hlt
sahf
cmp
jl
sti
popf
sbb
dec
jb
jge
sbb
lret
outsl
jb
lcall
cmpsl
test
jbe
inc
pop
jnp
mov
jg
adc
add
test
popa
cmc
adc
mov
leave
pop
ds
push
mov
daa
imul
inc
jle
mov
add
lods
fsubr
dec
push
out
jge
fadds
or
inc
pop
sub
xor
pop
adc
mov
jecxz
push
mov
inc
mov
xor
int
xor
add
in
fnstenv
push
mov
loopne
pop
jb
sub
sahf
xchg
jecxz
sbb
pop
shl
pop
addr16
cli
mov
stos
jp
sbb
shlb
pusha
and
aas
bound
loope
ss
mov
int
xchg
xchg
iret
jb
ja
mov
cs
std
pop
cmpsl
pop
negl
dec
mov
fwait
sbb
pushf
mov
in
cmp
fsts
xchg
sbb
mov
push
add
gs
sub
into
or
or
lods
adc
aam
mov
sbbb
xor
hlt
jmp
add
mov
lock
jmp
fsubrl
push
sbb
movsl
xlat
cmpsb
pop
pop
or
loope
jbe
test
mov
fwait
mov
jne
stos
lds
sub
daa
mov
adc
or
std
ret
mov
jg
fwait
pop
insb
leave
enter
mov
mov
xor
jmp
dec
push
adcl
cltd
pop
sbb
stos
inc
popl
cmp
pop
mov
xor
push
arpl
xchg
jnp
lret
fimull
push
sbb
dec
mov
idivb
sub
fistl
push
cltd
or
mov
jmp
mov
push
sub
pop
test
les
mov
sbb
rclb
sub
xchg
xchg
sbb
sbb
jl
fadd
lock
std
popf
or
push
scas
and
inc
ficoml
inc
cltd
shll
or
mov
mov
xchg
inc
stc
fistps
or
xor
adc
fsubrs
mov
outsl
xor
imul
xchg
mov
mov
clc
popa
sub
pop
and
inc
fiadds
in
lods
cmc
enter
fildl
inc
add
incl
cmp
adc
and
cli
stos
repz
pop
hlt
repz
jle
les
or
adc
sbb
sti
sti
push
sbb
lods
gs
push
pop
xchg
cmp
daa
stos
inc
add
cmp
enter
mov
dec
xchg
jbe
mov
mov
dec
jns
xlat
stc
sti
mov
cmpsb
fucomip
lods
adc
insb
gs
into
iret
push
inc
mov
jmp
dec
jp
push
jbe
fidivrl
sbb
sti
fldenv
fstpt
in
adc
xchg
mov
sub
ljmp
sbb
pop
jno
testb
addb
dec
jne
iret
shll
add
adc
daa
repnz
push
dec
les
lds
pop
ret
or
test
nop
sub
out
xor
mov
cmpsl
ret
sub
cwtl
jp
orb
sarb
cs
fs
in
inc
push
out
mov
xchg
fstpl
xor
movsb
sti
fwait
and
xor
in
gs
or
xchg
jne
pusha
sbb
cmp
test
add
roll
push
mov
xor
adcl
mov
test
jbe
int3
xlat
jp
pusha
in
mov
in
inc
cmpsl
cmp
xchg
std
jp
dec
insl
aaa
dec
andl
sbb
shrl
sub
lahf
es
mov
sbb
loope
cmp
js
push
arpl
jmp
cmpsb
cli
sub
push
push
iret
and
cmp
arpl
test
fdivs
movsb
sbb
push
out
cmp
jae
mov
sbbl
hlt
ffreep
popf
sahf
mov
push
stc
inc
cs
shrb
mov
add
pop
adc
xchg
add
pushf
mov
hlt
outsl
psrld
das
xchg
insl
lods
and
dec
out
dec
jl
testb
xlat
mov
push
idivl
add
push
je
mov
lea
cmp
lea
mov
sbb
fs
sub
fwait
in
push
rorl
xchg
in
sub
lds
sbb
push
aas
jne
rol
jp
dec
mov
mov
lcall
jle
in
movl
pushf
loop
pop
stc
jge
movl
in
push
int3
dec
testl
es
shl
mov
test
sub
push
lock
mov
jmp
lcall
fcoms
mov
sub
or
xor
aad
std
cwtl
mov
xor
addl
xor
fsubrs
hlt
sub
inc
test
inc
paddw
push
aam
mov
idivb
xchg
mov
mov
stos
push
mov
leave
and
xchg
int3
cmp
aam
jae
mov
shr
aas
cli
repz
test
jbe
cmp
xchg
mov
bound
xor
into
sub
nop
or
cld
leave
mov
cmc
hlt
roll
add
sub
into
js
sub
int
add
xor
adc
rorb
sar
pop
iret
outsb
cmp
add
adc
loop
test
adc
pop
test
add
pop
pushw
pop
pop
scas
mov
fwait
inc
rcll
sub
cltd
loope
popa
push
pushf
adc
test
aad
jmp
fs
or
cmc
shl
mov
cltd
test
rclb
std
mov
sbb
push
fstpt
mov
ror
sbb
adc
mov
pop
xor
pop
shl
adcl
sub
into
test
or
and
fsubrl
adc
jb
sti
shlb
imul
nop
fbld
push
adc
add
xor
jo
or
add
daa
rorl
sub
adcb
shrl
adc
and
xchg
mov
lods
pop
push
int
mov
cli
out
movsb
add
push
inc
xchg
or
or
leave
jne
imul
cmp
mov
lahf
aad
lds
cmp
mov
mov
pop
call
jae
xchg
cmp
jecxz
fcmovb
ror
adc
pop
in
daa
pushf
test
pop
fstps
out
jl
mov
arpl
in
push
cmp
add
test
not
mov
popf
clc
mov
scas
mov
sbb
pusha
or
adc
mov
dec
mov
insb
inc
fwait
pushf
cmp
add
repnz
test
lods
push
push
adc
cltd
sub
in
jbe
pop
push
pop
and
adc
cmp
push
movsb
aas
lcall
shll
adc
ss
push
js
xor
stos
mov
cs
cld
mov
int
sbb
and
data16
aaa
mov
xchg
test
xor
cmp
pusha
fdivs
sub
ret
int
jecxz
pop
sti
imul
xlat
dec
sbb
addl
adc
sbb
std
enter
pop
push
out
xchg
loopne
inc
data16
int
jmp
stos
loop
pop
cmpsb
xorb
push
sub
jno
or
or
test
adc
inc
and
in
cmp
inc
fdivs
xchg
sahf
mov
sahf
cwtl
jecxz
incb
jbe
xchg
jp
jmp
pop
test
imul
add
sbb
dec
scas
aad
arpl
dec
push
or
push
sub
mov
xor
ret
data16
fnsave
jnp
cmpsl
adc
xchg
add
stos
pop
xor
stc
je
fcoml
cmp
jmp
mov
dec
push
xchg
add
add
mov
mov
xor
and
push
adc
in
pop
sub
jle
pusha
ret
fidivs
roll
adc
ret
sbb
in
adc
inc
sbb
add
push
aam
xor
jecxz
lods
xchg
in
addb
pop
outsb
notb
jecxz
scas
or
or
mov
mov
adc
aad
test
repz
lods
ret
test
jle
js
ljmp
mov
fs
cmpsb
sub
sbb
loop
stos
call
repnz
pop
or
inc
jbe
popf
clc
inc
icebp
mov
sbb
jo
xor
jg
adc
cmpsl
pop
test
loop
inc
test
pusha
adc
xor
pop
paddsb
cmp
jp
loope
popf
cmc
adc
iret
test
into
pop
daa
mov
xchg
cli
mov
daa
out
sbb
addr16
incl
popa
fsts
decl
sub
loope
aas
and
int
sbb
ret
test
mov
lahf
cs
mov
mov
or
fdivrl
out
std
incb
cmp
pop
ja
out
in
dec
mov
xchg
dec
push
test
fs
xor
mov
sbb
loope
xchg
pusha
fs
dec
and
pop
mov
dec
sar
cwtl
xchg
nop
icebp
inc
fisttpl
ds
loopne
fwait
aam
aad
inc
sbb
and
sbbl
imul
cli
xchg
push
leave
cmp
loopne
xor
ret
subl
push
mov
fwait
sbb
stos
add
sar
mov
jae
ds
pop
orb
das
mov
or
pop
sti
pop
fs
inc
xor
mov
fistps
mov
jecxz
daa
ret
fidivl
pop
in
push
dec
aas
inc
mov
mov
out
xchg
xchg
lds
inc
arpl
add
adc
scas
lret
mov
shrb
int
data16
lcall
push
std
xchg
daa
aas
cwtl
cmc
and
sub
xor
and
imul
sub
call
xor
in
int3
repz
cmp
push
pop
push
repz
and
dec
loop
mov
push
sub
cmp
movb
movb
jmp
add
mov
dec
ds
shll
or
dec
repz
iret
shlb
sub
repz
insb
test
pop
into
sbb
jp
mov
and
mov
iret
pop
adc
into
push
mov
mov
push
std
or
pusha
gs
mov
call
popf
xor
call
mov
mov
dec
lahf
sbb
clc
int3
push
jno
push
out
add
dec
mov
jae
in
sub
cli
inc
pusha
ret
testl
pop
test
cmp
imul
daa
das
xor
xchg
or
dec
decl
push
mulb
jns
iret
jno
xor
nop
enter
test
pop
lods
jmp
lods
adc
js
adc
mov
test
adcb
pop
pop
cmp
sub
lods
push
cmc
mov
cmp
dec
leave
inc
add
arpl
into
cwtl
sbb
frstor
lahf
outsb
and
cmp
xchg
stc
pop
ret
and
xchg
jmp
sbb
ficomps
mov
or
dec
jbe
pop
jno
mov
pop
pusha
xchg
dec
xchg
repnz
popa
dec
adc
scas
xor
cmc
sub
mov
push
pushf
mov
movsb
push
jb
pop
arpl
shlb
pop
mov
imul
or
fdivrs
scas
fistpll
push
test
adc
je
jg
pop
dec
push
cwtl
jno
les
cmp
cmpsl
dec
cmp
jl
insl
pop
movsl
cwtl
cmp
loope
jmp
scas
std
in
data16
clc
nop
or
ljmp
or
fsubp
idivl
rcrb
pop
stos
xchg
dec
loope
adcb
push
sbb
fldl
outsb
xor
and
aam
je
ss
pop
and
out
lret
pop
icebp
and
xor
mov
push
mov
sub
push
out
leave
int3
sub
aaa
mov
push
mov
sub
lds
inc
fcmovne
sbb
data16
rcl
mov
or
jp
sarl
les
fistl
mov
push
int
or
cmp
in
mov
mov
and
xor
add
inc
icebp
adc
inc
add
inc
out
sub
xor
je
push
lret
inc
or
and
call
dec
xchg
aam
pop
cwtl
mov
outsl
lds
push
pop
add
mov
clc
xchg
inc
adc
nop
xlat
xor
xlat
ljmp
imul
sub
lds
loope
icebp
pop
mov
lcall
pop
jmp
jno
mov
subl
or
movsb
into
lock
lret
icebp
push
or
sub
ja
in
add
stos
stc
aas
or
xchg
movsl
fxch
xor
jle
adc
popf
aam
shl
mov
pop
inc
cmpsb
dec
xchg
stos
std
mov
jp
mov
push
xor
and
gs
xchg
rcl
and
jns
cmc
xor
mov
dec
cmpl
push
scas
jae
add
add
lds
fdiv
pop
push
in
xchg
in
in
xchg
mov
xor
pop
lahf
jnp
in
je,pt
loopne
jl
xchg
sbb
ds
push
mov
test
push
push
test
or
shlb
int3
pop
fnsave
cmp
push
imul
repz
mov
data16
popf
push
bound
testb
adc
maxps
lcall
mov
je
or
int3
cmpb
mov
fisttpll
sahf
imul
mov
push
in
pop
push
lods
adc
mov
decb
push
notl
pop
mov
jmp
add
in
mov
outsb
pop
fisttps
mov
mov
mov
sub
mov
ret
push
mov
fmuls
cmpb
cmp
testb
loope
xchg
lea
rcrb
pop
or
sbb
inc
push
lcall
iret
movl
call
jae
imulb
push
in
into
movsl
repz
mov
aad
dec
mov
in
push
adc
inc
and
shlb
sbb
insb
out
stos
pop
divb
dec
jb
push
mov
inc
aas
xrstor
out
mov
int3
popf
mov
fsubl
jl
inc
repnz
out
or
inc
sarl
insb
push
test
rcl
or
mov
subb
ficompl
adc
mov
lcall
pushf
add
sbb
ret
xchg
adc
mov
pop
test
bound
or
add
pop
test
movsb
ficompl
or
out
iret
aad
test
add
or
rcrl
pop
fcomi
idivb
loope
jl
in
pop
mov
jmp
fidivs
pop
inc
mov
mov
pop
dec
ljmp
aas
inc
int3
test
je
out
cwtl
inc
jo
push
dec
mov
pop
mov
cmpb
outsb
sub
mov
in
int3
and
push
adcb
std
data16
inc
in
xor
push
cwtl
xorl
out
mov
rcrl
xor
add
fildll
addr16
aaa
push
mov
push
pop
aam
pop
pop
cmp
aam
adc
pop
xchg
lock
out
insl
xor
insl
push
cwtl
jge
fimull
sti
push
mov
xlat
sbb
xchg
fsubrs
pop
pop
daa
aad
xor
out
lock
lret
outsb
dec
push
gs
and
xor
fwait
push
das
cmp
stos
rdpmc
mov
inc
imul
mov
add
mov
add
test
loopne
mov
out
frstor
aaa
lcall
push
divb
inc
push
fcoml
std
cvtpi2ps
fwait
xchg
mov
fbstp
mov
and
or
icebp
std
dec
lahf
xchg
call
cmp
cmp
rcl
insb
mov
stos
cmp
lods
ja
ljmp
jno
aas
xchg
push
sbb
aas
je
repz
jmp
lods
jg
mov
dec
das
mov
lret
cmp
adc
cmpsl
jl
dec
pop
mov
mov
jp
and
xor
cmp
pop
les
push
inc
pushf
stc
pop
aam
push
push
decl
ja
addb
sub
push
ljmp
sub
pop
jno
cmpsl
cmpsb
pushf
test
mov
js
out
push
mov
dec
jmp
lret
sbb
sarb
ljmp
push
daa
pop
mov
mov
dec
scas
aad
stos
xor
and
or
push
cltd
clc
add
icebp
mov
test
mov
xchg
not
arpl
sbb
push
cmc
push
loope
or
pushf
lods
gs
les
out
or
test
sarb
shlb
jns
aaa
jae
xchg
in
mov
mov
stos
jne
mov
loop
out
loop
push
inc
xchg
pop
inc
push
and
lcall
adc
push
lahf
mov
push
lods
das
leave
dec
and
dec
mov
inc
cmpsb
gs
iret
pop
mov
xchg
and
adc
mov
cwtl
pop
push
jno
jb
pop
addl
mov
inc
dec
js
adc
jb
adc
and
cmpsl
mov
or
push
aam
xor
aad
pop
cli
mov
pop
jnp
push
lret
cld
pop
fcmovbe
cmpsb
jmp
xor
pop
pop
movsl
xor
nop
shlb
data16
fcomp
flds
stos
add
sub
xor
and
aas
negb
ret
sbb
mov
lea
jl
push
xor
lea
jp
imul
xor
inc
dec
or
sbb
sbb
lock
stos
sub
jo
add
loopne
xchg
sbb
jno
and
pop
sbb
inc
push
mov
aam
mov
jb
movsb
xor
xor
fnstcw
dec
mov
js
jbe
ss
jmp
in
inc
dec
pop
mov
add
push
jo
ja
fwait
jns
xchg
fisubs
loope
pop
fadds
xchg
rclb
mov
sub
fwait
jne
lahf
lret
jae
mov
insb
adc
int3
push
cwtl
sub
xor
inc
dec
or
insl
dec
xor
xor
xlat
fbstp
jmp
pop
push
jmp
sbbb
mov
mov
cld
jo
sbb
add
subb
in
ror
lds
mov
jae
pop
mov
repnz
add
or
aad
push
add
xlat
sbb
add
mov
scas
xorl
test
fisttpll
shll
push
mov
mov
mov
rol
outsl
and
push
xor
jno
add
add
clc
repz
xchg
xchg
popf
pop
es
mov
bound
dec
pop
ds
cmp
in
fucomp
inc
fstps
ljmp
xchg
and
xchg
ljmp
inc
data16
xor
in
pop
and
mov
scas
mov
arpl
inc
mov
sahf
and
movsb
add
nop
in
repz
repnz
push
adc
adc
mov
mov
lds
xor
sti
mov
push
repz
mov
andl
mov
mov
lock
std
xchg
ja
subl
add
repnz
xchg
ds
jge
ss
aam
cwtl
fsubs
and
ja
shlb
jp
mov
sbb
int
xor
cltd
andl
jg
pop
jp
and
inc
xchg
jle
cmp
imul
mov
jmp
cmp
jne
daa
jecxz
mov
mov
adc
hlt
pop
jo
sbb
cmp
jle
mov
cmp
adc
cmp
arpl
push
mov
ror
stos
mov
xor
xchg
cmpl
fiadds
sub
jl
jecxz
jns
cwtl
xor
xor
stc
pushf
sub
xchg
inc
int3
xor
xor
fcomps
std
pop
jnp
mov
mov
lcall
add
jnp
push
sub
mov
mull
mov
test
out
ljmp
xor
pushl
add
add
mov
inc
sub
loopne
jg
sub
mov
sbb
and
fwait
ret
test
xchg
loopne
sbb
adc
negb
popf
lret
cmp
daa
push
cli
cwtl
inc
repz
div
push
pop
movsl
aaa
lods
cwtl
cmp
xchg
push
pop
sbb
out
outsl
nop
lds
mov
jl
or
fldl
inc
adc
sbbb
cli
jbe
int3
stc
mov
icebp
mov
inc
popf
or
sub
fiaddl
inc
rorb
cmp
cmpsl
xor
jp
inc
test
lahf
mov
in
or
adc
pushf
into
pushf
andb
mov
ret
add
inc
sub
loop
inc
ror
sbb
mov
adc
add
js
out
je
cmpl
enter
out
mov
push
cld
es
and
arpl
adc
jmp
cmp
mov
in
int3
je
imul
popa
push
insb
cmp
out
xor
pop
mov
cs
leave
cmpsb
idiv
daa
out
fsubs
xchg
lcall
aaa
xchg
pop
fnsave
hlt
in
xor
sub
mov
pop
xchg
dec
jge
mov
int
shrl
push
loopne
inc
mov
mov
pop
sbb
stos
shll
int
sbb
mov
cmp
xor
hlt
daa
cwtl
or
inc
aas
lock
test
int
xor
ret
add
pop
loopne
iret
fcomp
movsl
push
xlat
imul
sub
cs
testb
insl
insb
mov
sub
jae
fsubrl
in
fsub
lods
iret
xor
fcomi
xchg
rorb
lret
mov
aaa
mov
fucom
and
jbe
stc
xchg
add
lock
and
fsubr
cmpsl
sbb
and
out
cmp
adc
insb
rorb
iret
mov
push
xor
sbb
adc
jne
lock
pop
ljmp
lods
sbb
call
stos
dec
mov
push
mov
inc
mov
dec
dec
mov
cmp
notl
cmp
divl
movsb
inc
or
in
inc
push
cmp
dec
cld
cs
ret
imul
and
or
popa
mov
mov
ljmp
pusha
sahf
mov
cmp
xor
mov
sub
dec
and
pop
mov
jnp
les
movsl
sbb
ja
fldt
dec
in
push
xchg
clc
sub
loopne
cltd
fwait
pop
cmp
int
test
push
dec
mov
or
cmp
pop
repz
inc
fwait
push
stos
inc
ss
cmp
dec
es
popa
arpl
xchg
fstpt
pusha
mov
mov
mov
int3
push
push
dec
icebp
test
and
cmp
es
std
imul
xchg
sbb
mov
jb
movsl
aam
addr16
xchg
in
sub
pop
cmp
xchg
into
cmp
jno
pushf
hlt
test
mov
xchg
loop
outsb
iret
sub
sti
test
notl
jecxz
imul
add
sub
stos
push
jl
xor
push
pop
fmuls
mov
cmpsl
mov
push
or
dec
jg
movsl
sti
lcall
or
xchg
mov
push
sbbl
lods
adc
cmpsw
mov
cmp
jle
or
enter
mov
out
lahf
adc
icebp
das
ficoms
xor
fists
test
gs
xchg
pop
mov
fisubrs
adc
js
test
insb
push
adc
or
int3
add
cmp
sub
mov
sbb
fs
shlb
gs
out
add
push
fisttpll
add
cltd
cmp
xor
mov
movsb
sbb
pop
das
rclb
or
icebp
stos
pop
inc
jp
dec
fadds
dec
or
mov
pusha
leave
pop
lret
in
inc
ret
xchg
js
nop
inc
lock
pop
pop
js
mov
leave
addr16
test
movsl
jae
and
cmc
aas
push
inc
mov
push
xor
dec
jbe
testb
cmpsb
cmp
jb
in
daa
sti
dec
push
sbb
jecxz
cmpsl
add
xor
xor
push
es
test
out
pop
pop
mov
outsl
inc
cmp
mov
sub
sbb
insb
push
pop
stc
inc
enter
adc
xchg
mov
push
fyl2xp1
jbe
dec
movsl
pop
bnd
mov
dec
mov
popf
popa
rolb
jns
in
inc
dec
jmp
mov
xor
or
sub
inc
icebp
or
sbb
sarl
frstor
imul
cmp
mov
outsl
mov
cmp
add
roll
pop
insl
push
push
jae
sub
aas
jecxz
adc
das
shlb
jl
lds
aas
push
fisttpl
sub
jge
inc
dec
in
pop
push
roll
rcll
pop
cmp
and
mov
sbb
add
xchg
xchg
and
inc
out
jecxz
cmp
aam
int3
fistpll
mov
or
and
addr16
add
dec
push
movsb
mov
inc
mov
andl
fbld
jae
xchg
icebp
xchg
scas
adcl
xlat
jne
mov
testl
and
inc
cs
mov
add
in
and
xor
inc
adc
lea
jp
rcll
pop
sub
xchg
inc
pop
dec
shrb
faddl
mov
mov
in
push
sahf
inc
ret
les
mov
dec
sub
aam
adc
ret
out
dec
add
out
adc
imul
pop
icebp
sahf
bound
aad
jl
mov
pop
out
xchg
dec
arpl
sahf
fdivs
push
xor
push
shr
xchg
data16
mov
mov
add
mov
pop
js
ret
mov
dec
sbb
mov
nop
leave
lds
mov
nop
jecxz
cmp
rclb
lahf
sbb
sbb
outsb
sub
inc
mov
shrb
lahf
mov
cmp
inc
push
push
addr16
jno
lods
sarl
mov
lods
aaa
jl
cli
imul
mov
imul
in
aas
dec
scas
outsl
iret
cli
pop
inc
pushf
dec
ljmp
js
push
add
sbb
mov
outsl
call
lods
js
mov
xor
pop
movsb
loop
inc
adc
subb
lods
jle
iret
lret
mov
add
adc
shl
cltd
add
scas
cmp
rcrl
sbb
mov
pop
pop
xor
cmc
leave
mov
lahf
mov
loop
xchg
lahf
je
je
les
ss
ret
ljmp
aas
jb
pop
inc
aas
js
andl
push
adc
mov
int
xlat
stc
test
ret
ss
movsl
daa
ss
in
sbb
pop
sbb
rcll
push
out
or
stos
movsl
jbe
into
ljmp
shr
cmp
or
stos
lods
mov
daa
and
lods
push
fcoml
enter
xchg
mov
jmp
out
mov
inc
filds
es
es
cmpsl
push
mov
call
mov
pop
imulb
adc
pop
push
or
xchg
jecxz
mov
xchg
xchg
and
mov
cltd
xor
fnstsw
or
sti
negl
and
loop
or
inc
pop
sbb
mov
xchg
nop
sbb
fucomi
stos
cmpsb
insb
aas
push
repnz
scas
ja
jge
cmp
xchg
cmp
lods
mov
cmp
dec
loop
movsl
xchg
cmp
cmp
iret
mov
cmpsb
fsubs
ja
add
lock
dec
rorl
out
ljmp
loope
fdivrl
rorl
in
rolb
pop
adc
pushf
aaa
or
movsb
notb
pop
pop
sbb
push
push
pushf
lods
lds
mov
aaa
cmp
orl
pop
cmpsl
pop
pinsrw
or
pop
mov
movsb
ja
lock
imul
sahf
in
and
add
jmp
in
or
aas
add
cmp
cld
add
xor
push
movsl
push
pusha
pop
xor
mov
movl
and
add
aaa
movsb
pusha
sub
clc
mov
testl
aam
mov
mov
and
arpl
cmp
push
ret
push
fnstenv
cmp
adc
xor
mov
stos
in
test
js
je
cmc
mov
pop
lods
adc
loope
jmp
jne
sahf
or
and
cs
in
movsb
das
loop
sti
push
push
push
xchg
popa
rol
and
sbb
nop
stc
inc
mov
cmp
mov
je
ja
cmp
xorb
enter
loop
cwtl
in
gs
mov
mov
mov
xchg
mov
jecxz
xor
rcr
push
jbe
int
dec
divl
adc
nop
jb
xor
out
cmpsl
subl
ja
fldcw
ret
bnd
hlt
xchg
fistps
orl
jmp
sub
test
mov
cmc
and
pop
fistps
ljmp
movsl
sbb
xchg
enter
mov
out
addb
xchg
mov
jge
xchg
mov
cmp
pop
add
cmp
lods
int3
lea
std
stos
mull
ret
ljmp
xor
shll
pop
int3
sbb
pop
idivb
jb
cmpsb
xchg
je
stc
or
xchg
xor
sbb
pop
jle
adc
dec
cmp
cmp
test
rolb
adc
imul
lock
pushf
inc
xchg
data16
cmp
rorl
sub
out
mov
and
fwait
jmp
fbld
lret
mov
sub
xchg
imul
adc
lahf
sub
xchg
out
pop
xchg
bound
jb
addl
mov
xchg
rorl
mov
shufps
inc
add
in
lods
loope
mov
mov
mov
scas
test
xorb
sub
xchg
mov
sbb
pop
aam
dec
cmp
adc
or
jb
outsl
mov
popl
or
mov
inc
xlat
dec
xchg
lahf
mov
