sbb
add
mov
sbb
lock
adc
and
movsl
stos
xchg
inc
push
and
out
add
mov
and
push
cmpsl
push
cwtl
mov
imul
sub
dec
pusha
int
add
nop
stos
aaa
aas
scas
fcoms
test
dec
jg
and
jge
lahf
push
xchg
aad
xchg
push
iret
je
ret
sbb
xor
scas
xchg
push
aas
mov
imul
andb
and
pop
les
fwait
outsl
mov
mov
std
sub
jl
lret
sub
dec
dec
lods
push
xchg
cmp
rolb
std
jmp
inc
sbb
outsl
jge
or
movsl
movsb
scas
dec
jb
xor
insl
xor
fisubl
sahf
aam
cs
sub
in
adc
dec
fmull
adc
bt
stos
out
nop
out
adc
rcrl
orl
cmpsb
orb
pop
xchg
loope
shrb
ret
or
aam
cmp
test
jle
push
push
sbb
xor
mov
pop
or
loope
sub
cmc
clc
jg
sub
xor
pop
orl
push
iret
inc
aad
inc
mov
jg
ds
xchg
out
push
xchg
cwtl
push
jge
jg
mov
arpl
mov
mov
orl
pop
int
sbb
in
negb
cmpsb
or
and
mov
push
sti
push
mov
cmp
idivl
mov
sub
jbe
movsb
add
movsl
js
adc
sbb
add
test
imul
addb
hlt
mov
jge
pop
fs
add
inc
add
out
addl
mov
sbb
cmp
sbb
in
jecxz
or
add
inc
mov
lock
insb
dec
fsubl
xchg
in
xchg
out
lahf
jmp
in
mov
movsl
pusha
ss
cmp
int3
inc
lret
add
jb
outsb
xor
xchg
das
add
lods
and
cmp
orb
xor
pusha
mov
add
or
pop
push
sub
clc
fdivrp
mov
hlt
sbb
jl
push
ret
enter
aad
push
push
add
xor
sbb
stc
cmp
dec
adc
push
stos
push
mov
sbb
cmp
mov
mov
adc
pushl
in
adc
outsb
sub
popa
cmpsb
mov
sub
cld
xchg
xor
cld
cltd
pop
sbbb
or
adc
cwtl
rol
push
adc
movsl
or
aaa
adc
lods
mov
push
test
fsts
sub
aam
xor
pop
sub
cltd
loopne
xor
aaa
and
loop
mov
mov
mov
fldl
or
pop
pop
fwait
dec
push
mov
gs
pop
sbb
daa
sahf
fsub
xchg
cmp
mov
sub
cmpsl
dec
insl
sarb
mov
bound
dec
jmp
pop
mov
mov
pop
mov
mov
pushf
aaa
dec
lods
xor
call
jle
push
out
xor
xchg
imul
out
sub
mov
xchg
push
xchg
repnz
pop
je
sub
sbb
inc
mov
cmp
outsb
les
pcmpgtd
mov
mov
in
int
pop
dec
lock
dec
add
fmuls
xor
inc
aas
out
sub
xchg
aas
ja
mov
xchg
cs
shll
push
push
lahf
cmpsb
aad
sub
in
and
mov
pop
jp
sub
lds
jbe
shll
aam
pusha
mov
pop
gs
inc
pop
lock
fisubs
test
imul
ljmp
lods
xchg
xlat
mov
xor
gs
jbe
test
test
pusha
sub
cmp
push
rcrl
push
lret
popa
cmp
mov
cwtl
icebp
mov
pop
dec
dec
mov
nop
pop
cltd
add
dec
gs
pop
pusha
repnz
loopne
decl
inc
xchg
dec
iret
out
and
ss
lea
sub
inc
aaa
insl
mov
insl
addr16
pop
les
rcr
add
mov
adc
call
fistl
xchg
cld
stc
pop
dec
cld
scas
cmp
pop
pop
cmpsb
mov
cmp
cld
int3
in
sbb
lret
sti
pop
xor
xor
xchg
fwait
lcall
cmp
push
test
js
jbe
pop
in
mov
pop
cmpsl
cmp
adc
pop
xor
jb
mov
pop
call
xor
out
stos
loope
jns
and
mov
in
and
xor
inc
and
lods
arpl
test
in
ret
mov
pshufw
aas
jp
mov
aam
pop
jns
cmp
push
int
add
inc
aad
push
mov
decl
dec
dec
dec
cwtl
xchg
es
or
push
nop
fmull
movl
push
ss
cmpsb
cmp
sbb
repnz
pop
hlt
or
inc
fstpt
mov
popa
push
sub
xchg
push
mov
xchg
aam
icebp
insl
aam
aam
xchg
hlt
clc
in
inc
mov
xor
cmc
and
xor
js
lods
and
or
xlat
cmpsb
cs
in
jge
mov
insl
xchg
inc
cmp
sbbb
dec
loop
sbb
fisubl
movsb
jb
aaa
fnstcw
mov
call
push
arpl
xor
sbb
inc
bound
cld
mov
outsl
or
fwait
cmp
cmpsb
pop
gs
jl
lahf
pusha
es
in
xchg
adc
xor
cmpsb
stos
bound
popf
popl
insb
cmp
aam
pop
outsb
dec
idiv
jp
cs
int3
rol
adc
xchg
aam
lods
fcmovu
xor
pop
mov
cli
dec
jp
ja
je
andb
stc
push
cmp
push
dec
xchg
dec
in
add
dec
mov
stos
dec
jnp
test
cs
pop
mov
push
inc
add
dec
sahf
pop
int
loop
jo
or
xor
movsb
push
push
sbb
sbb
popl
rcrb
arpl
leave
shll
or
test
fnstsw
mov
shr
mov
div
pop
in
movsb
xor
cmp
fisubrs
or
mov
into
in
faddl
cltd
movsl
lcall
xor
inc
call
cmp
or
fs
daa
ljmp
dec
fisttps
pop
pop
les
jo
imul
lods
lret
call
or
inc
cmp
xor
sub
inc
dec
imul
push
sbb
inc
push
faddp
sahf
xor
leave
pop
fimuls
and
sti
insl
notb
popf
mov
mov
push
cli
and
mov
in
xchg
xchg
cs
lret
xchg
push
into
clc
repnz
icebp
loope
test
ret
loop
dec
sbb
lret
and
and
enter
xor
push
mov
das
nop
inc
mov
push
lahf
or
popa
shlb
push
fwait
insb
inc
lock
jg
inc
push
xchg
outsb
mov
sahf
dec
sti
add
push
scas
pop
pop
loopne
push
mov
adcl
ret
mov
test
gs
mov
repz
and
mov
gs
sbb
mov
cmp
jl
lcall
test
mov
xchg
mov
adc
stos
cmpsb
inc
mov
aas
fs
rcr
push
push
mov
clc
push
pop
icebp
in
cmp
fadds
sub
mov
scas
cs
aam
sub
push
pusha
push
insb
xlat
test
ficompl
lock
dec
push
icebp
mov
xchg
sub
pop
push
aaa
out
shl
pop
sub
sar
mov
xchg
adc
outsl
je
add
ss
rcrl
pop
pop
dec
adc
mov
add
xor
xor
adc
loop
mov
xor
mov
inc
mov
xchg
inc
sub
jno
pop
or
dec
ret
frstor
frstor
mov
int
xor
jp
inc
aad
mov
hlt
arpl
adcb
hlt
into
sbb
add
fs
push
rcrl
xor
pusha
inc
in
divb
mov
std
ficomps
adc
movsb
sar
or
mov
sti
data16
mov
sar
pop
and
movsl
sub
add
in
out
mov
je
sbb
mov
stos
mov
out
fiaddl
in
cld
dec
pop
push
dec
aad
clc
and
mov
outsb
sarl
lock
pop
out
or
sbb
or
xor
cmp
cmp
adc
pushf
mov
cmp
xor
cwtl
es
mov
mov
jmp
dec
out
sar
insl
mov
or
mov
notb
sub
les
sub
shlb
adc
lret
idiv
fwait
sub
aaa
add
ss
mov
sub
ds
mov
xor
xchg
fidivl
inc
or
pop
mov
sub
out
pop
sub
cmp
or
mov
dec
fisttpl
push
bound
in
mov
cld
mov
lret
in
js
add
inc
in
lea
lret
xor
addl
out
lds
add
jno
inc
push
test
ss
xor
pushf
dec
int
and
adc
dec
out
mov
pop
movsl
enter
clc
aad
jecxz
fstpt
stos
rorb
test
cmc
add
inc
mov
or
push
mov
in
mov
loopne
sbb
mov
aas
dec
add
xor
lock
mov
mov
movb
movsb
loopne
imul
test
mov
xor
ljmp
xchg
ss
sarl
gs
add
enter
ficoml
mov
shrb
js
out
sub
jb
xlat
dec
out
dec
jg
out
insl
imul
addr16
fistps
vphaddwq
sbb
leave
inc
inc
push
js
rcrb
movsl
cs
ror
idivb
das
xchg
loope
xor
std
sub
add
or
mov
add
data16
inc
xchg
push
out
je
mov
lahf
dec
enter
ljmp
fbstp
stos
ficoml
lea
jns
cmpsl
jecxz
mov
js
icebp
test
icebp
mov
cmp
lahf
dec
inc
aam
out
sbb
mov
jmp
jbe
jle
fmul
sbb
dec
inc
outsl
jno
mov
daa
mov
pushf
fimuls
mov
ljmp
add
repz
pop
xor
loopne
jbe
mov
pusha
clc
fmull
scas
sbb
xchg
icebp
mov
imul
outsl
fsubr
cmc
mov
ret
out
repz
mov
pop
push
orl
sbb
push
pop
inc
cmpsl
or
outsb
and
das
lahf
call
fildl
mov
jge
inc
or
cmp
fadds
or
jo
sbb
imul
jl
sbb
or
sbb
mov
lds
dec
mov
in
dec
xlat
out
mull
jg
insb
xor
imulb
test
pop
mov
pushf
sbb
insb
mov
roll
xor
xchg
push
ljmp
sarb
inc
idiv
jecxz
rclb
pop
dec
dec
repz
mov
mov
gs
cs
out
js
hlt
push
mov
cld
sub
jno
jmp
jge
or
push
jbe
in
push
mov
ss
jp
mov
add
out
leave
cli
mov
loop
scas
sbb
hlt
add
call
daa
iret
loope
sub
aam
iret
jp
xchg
ds
rcl
scas
mov
add
loopne
pusha
or
daa
xor
mov
inc
or
outsb
xor
andb
mov
jne
stc
mov
flds
adc
or
dec
into
jecxz
xor
sahf
imul
xchg
dec
lea
fisttpl
hlt
fsts
mov
pop
sbb
insb
popf
test
xor
aaa
pop
dec
cmc
jge
and
xlat
lret
dec
cs
stos
adc
mov
add
push
out
dec
xlat
ficompl
inc
sbb
jbe
or
movsl
inc
pop
or
mov
stos
mov
push
pop
das
loop
enter
cs
xor
xchg
xor
xchg
rol
pop
sbbb
loop
cmp
mov
push
lods
aad
mov
or
push
test
push
into
cmp
mov
dec
lods
inc
mov
mov
fstl
cmp
sub
imul
mov
rcrb
jl
jno
ret
dec
lret
mov
movsl
xor
stos
in
es
jg
scas
cmp
jg
mov
cmp
push
dec
test
adc
insb
frstor
lds
pop
psllw
xor
cld
lret
mov
add
mov
cmp
gs
or
jecxz
push
mov
add
repnz
ja
stos
xor
repnz
stc
dec
sub
dec
mov
je
repnz
jbe
mov
jg
iret
repnz
pop
sub
mov
pop
sbb
data16
sbb
jge
in
arpl
sti
cld
mov
leave
inc
lods
xchg
inc
shlb
int
fisubrs
aaa
ss
dec
inc
movsl
mov
mov
ficomps
lret
jbe
mov
mov
mov
add
test
jno
inc
xchg
mov
mov
push
dec
mov
mov
xlat
cmpsb
xor
mov
jg
jmp
ret
iret
push
clc
cmc
inc
xchg
dec
mov
mov
pop
or
ret
push
add
xor
imul
add
mov
fimuls
fmull
bound
les
dec
fiaddl
lcall
pop
clc
and
pop
test
push
push
inc
xor
stc
outsb
push
sbb
and
clc
adc
orps
cmp
fiadds
pusha
shll
out
popf
data16
xchg
cmpsb
shlb
sub
sub
or
mov
cld
push
push
adc
adc
test
shl
imul
sbb
ror
sahf
sbb
add
or
movsb
cmpsl
sub
nop
aad
mov
pushf
inc
into
mov
inc
stc
ljmp
xchg
clc
arpl
aam
addb
dec
mov
adc
cmp
xchg
sub
into
add
jle
fstp
xchg
push
dec
scas
jecxz
and
or
xchg
or
popa
cltd
sbb
sub
dec
sbb
lea
pop
shufps
roll
inc
push
or
adc
lcall
std
fists
idiv
popl
shr
pop
mov
lods
sbb
xchg
rorb
push
mov
stc
insl
aaa
iret
cwtl
inc
push
arpl
xchg
and
pushf
mov
inc
and
add
je
or
aaa
mov
xor
test
xor
adc
clc
lea
and
mov
pop
sub
outsb
jl
and
shll
or
or
jnp
adc
test
xor
das
push
call
mov
adc
and
daa
mov
sti
sbbl
icebp
push
mov
mov
fidivs
pop
outsb
jae
sub
xchg
test
es
arpl
sbb
fistps
in
xchg
mov
jp
push
pop
push
lods
cmpl
int3
cld
leave
push
in
lea
bound
movsl
jb
shrb
sarl
or
das
repz
jnp
push
add
test
push
inc
jno
ljmp
rcrl
mov
inc
push
cmpsb
xchg
pop
fadd
cmp
adc
jg
mov
jg
in
dec
decl
adc
jbe
lahf
testl
cmpsl
mov
pop
and
jbe
push
lcall
cltd
or
xchg
out
mov
stc
stc
test
jg
rorb
push
scas
jge
shrb
in
push
ds
xchg
sti
push
jmp
scas
ja
lret
push
sub
jb
lea
cmovp
sub
cltd
push
jmp
lods
outsl
shll
in
xchg
or
aad
xor
jne
push
out
lds
popf
sbb
xchg
pop
jge
dec
push
out
bndldx
in
loope
and
sbb
add
jo
pushf
jp
push
into
lea
pop
sub
outsl
or
add
shr
scas
dec
add
int3
sti
lret
loopne
lcall
mov
loopne,pn
aas
mov
or
pusha
xor
sbb
outsb
jne
add
add
outsb
mov
je
hlt
xchg
fsubrs
iret
pop
pop
into
nop
adc
cltd
push
push
stos
orb
insb
jno
ja
push
pop
int
in
cmc
repnz
cmp
icebp
and
mov
repz
lea
xchg
outsb
push
jge
jnp
test
push
sub
cmp
or
mov
imul
lret
xchg
sub
ds
push
into
mov
movq
enter
fs
sahf
adc
pusha
add
mov
dec
adc
leave
mov
test
daa
cmp
test
call
adc
push
jge
and
lock
ja
bound
xchg
jmp
cmp
xor
adc
pop
stos
sub
xchg
sub
xorl
cs
xor
shlb
loopne
push
inc
popf
adc
lock
hlt
ljmp
gs
cmp
jge
fiaddl
movsl
push
mov
ret
aas
shrl
ja
sahf
add
sbb
add
dec
push
or
ljmp
pop
bound
outsb
dec
inc
push
jns
lahf
or
add
jmp
pop
insb
lret
sbb
dec
xchg
movsb
dec
fistpl
push
dec
mov
out
mov
push
clc
pop
mov
movsb
jno,pt
fs
test
xchg
dec
jae
xor
inc
jg
mov
pop
pop
cmpsb
out
fsts
jle
xchg
jmp
inc
mov
or
daa
pop
gs
add
add
shrb
mov
push
push
shlb
in
sarl
jmp
lahf
clc
into
sbb
rcll
jbe
adc
movsl
xor
mov
pop
push
mov
repz
sub
sub
jae
aam
inc
mov
xor
movsb
push
push
addb
mov
push
xchg
pop
mov
jb
out
dec
and
iret
add
xor
lahf
loop
sbb
mov
mov
push
xchg
call
and
hlt
fwait
outsl
jmp
mov
xor
cmp
cmc
lea
adc
cld
ret
sbb
bound
ret
cld
dec
and
xor
add
pop
mov
jle
mov
add
lahf
imul
lock
jecxz
jb
pop
mov
pop
cmp
inc
aam
in
xchg
lret
inc
in
fistpl
mov
inc
daa
or
and
out
push
sbb
test
icebp
hlt
push
inc
sub
mov
mov
sub
cmp
mov
in
pop
mov
insb
cmc
mov
stc
inc
push
xchg
sub
jns
inc
adcl
mov
and
pop
dec
mov
xchg
aaa
inc
sub
fwait
and
movl
popa
cmp
in
add
rolb
jp
cmp
int
imul
pushl
out
jne
add
push
adc
lods
add
lea
inc
sub
and
out
mov
cld
fcmovb
cmp
inc
hlt
test
outsb
clc
lea
popa
jne
or
shlb
pop
pop
daa
sub
pusha
outsb
and
fdivrl
iret
insl
push
aas
stos
jle
mov
push
xchg
jae
mov
imul
dec
stos
in
push
xor
jns
test
pop
popf
ljmp
sub
mov
xchg
jbe
rorb
push
fstl
dec
lds
jp
mov
sti
cltd
mov
and
test
adc
addb
xchg
push
fs
xchg
lret
mov
dec
enter
pop
sub
out
repz
dec
ss
push
fwait
or
lret
dec
fldenv
or
pop
or
cmp
inc
inc
ja
stc
and
repz
mov
ret
pusha
test
aam
cmp
jle
xchg
mov
pop
test
push
xchg
sub
mov
pushf
fsubrs
unpckhps
mov
fbstp
pop
cmp
lea
inc
mov
leave
cmp
sub
mov
lret
sub
sbb
inc
jmp
pop
test
dec
and
jne
negl
cli
fs
mov
jecxz
mov
xor
sub
push
mov
jecxz
push
dec
xchg
gs
mov
pop
insb
lock
pop
fld
test
ds
jmp
mov
imul
hlt
xchg
xor
dec
jnp
sbb
or
xrstor
repz
sbb
and
pop
cwtl
pop
stos
test
mov
adcl
mov
shrb
clc
addr16
outsl
adc
js
cmp
fwait
mov
xchg
in
mov
in
mov
shlb
xchg
or
jge
jecxz
and
les
xchg
loop
hlt
insl
cs
mov
push
hlt
inc
xor
mov
lcall
sbb
dec
pop
sub
movb
mov
movsl
es
or
int
inc
dec
fnstcw
dec
jne
sub
fsub
mov
dec
shlb
xor
das
mov
jbe
lea
xor
sub
int
add
and
pop
pop
movsb
ja
xor
cwtl
fstpt
into
push
pop
jp
aas
repnz
or
sub
leave
ljmp
inc
adc
inc
fsubs
cmc
jge
das
push
repz
jecxz
test
sbb
movsb
lret
mov
xchg
cli
mov
sbb
fiadds
jl
aad
xor
fstpt
sbbb
icebp
sbb
cld
sub
hlt
mov
push
inc
arpl
mov
push
lods
and
out
repz
fmuls
cmp
sbb
inc
or
adc
in
stos
jns
jns,pn
imul
or
sub
popf
sub
scas
sbb
push
pop
xchg
jb
insb
jne
loope
cmc
pop
ja
mov
dec
mov
aam
push
fdivrl
insb
out
jae
and
cmp
sub
sub
xor
test
mov
dec
pop
cltd
ja
leave
fistpll
fildll
pop
pop
addr16
dec
inc
adc
sub
bound
movsl
sbb
icebp
negb
nop
insb
and
shl
adc
dec
mov
xchg
mov
lods
loope
mov
adc
mov
jne
scas
push
movsl
fnstcw
loop
cmp
sahf
cmpsl
sbb
rolb
dec
mov
push
or
inc
ljmp
xchg
xlat
dec
or
xchg
inc
adc
push
sbb
test
push
hlt
ja
mov
dec
mov
jns
in
push
loop
mov
into
lret
xor
xchg
daa
inc
xchg
fs
mov
das
lds
leave
jg
out
add
dec
leave
int
daa
cwtl
ret
lret
push
bound
rorb
ljmp
pop
in
and
pop
sbbb
jl
outsl
mov
gs
ja
push
ror
cli
stos
mov
xchg
dec
pop
lock
fildl
mov
nopl
inc
cmpsl
mov
xlat
movq
xchg
not
insl
imul
inc
add
pop
push
pop
testl
clc
mov
sahf
inc
mov
scas
repz
jae
test
xor
insb
rorl
imul
repz
adc
outsb
scas
pop
lahf
test
sbb
rcr
fildl
push
mov
dec
add
xor
pop
adcl
int3
aas
push
fwait
sub
test
mov
daa
jnp
lods
shll
cmp
scas
inc
and
jmp
frstor
mov
mov
mov
xchg
inc
scas
popa
cld
jbe
add
push
nop
jno
shll
mov
cmp
out
sub
or
mov
std
adc
jne
scas
repnz
sarb
push
bound
imulb
mov
aam
gs
scas
stos
pop
xor
hlt
and
xchg
push
cmp
cmc
xor
jecxz
sahf
dec
shlb
scas
pop
sbb
leave
mov
sti
lods
fnstcw
repnz
xchg
out
or
push
dec
lea
sbb
adcb
dec
cmp
ffreep
nop
pop
ja
push
sarb
jno
ds
fs
cld
sarl
faddl
add
idivb
cmp
in
push
cmp
dec
ret
aas
ss
out
test
pop
loope,pn
jnp
cmc
stc
clc
mov
ficomps
jp
mov
dec
adc
xchg
ljmp
adc
and
addb
mov
add
scas
push
jl
sub
out
rcll
or
dec
mov
xor
xchg
out
and
je
imul
lcall
movsl
cmp
cmp
repnz
fwait
push
mov
pop
in
nop
or
pop
pop
dec
jp
movsb
add
test
incl
pushf
xchg
fcompl
nop
sbb
pop
push
int
jns
int
int3
pop
mov
popf
adc
cli
mov
ja
adc
inc
push
sbbb
cmpsl
sbb
jne
test
adc
lret
add
inc
outsb
stos
into
sub
stc
outsl
xchg
dec
testb
rclb
push
fldcw
rorb
aaa
xor
into
push
sbb
mov
lahf
ljmp
addr16
fsts
or
fstl
flds
nop
mov
and
mov
or
dec
rcrl
or
pop
pop
lahf
pop
adc
pop
sbb
lods
call
xor
rorl
data16
loopne
clc
push
aaa
inc
push
gs
mov
dec
imul
pop
dec
cltd
cmpsl
xchg
adc
loopne
loope
pop
popa
test
mov
das
mov
mov
fwait
cmp
xor
fndisi(8087
outsl
or
sbb
adc
enter
fistpll
repz
push
orl
mov
inc
rol
sbbl
cwtl
aaa
and
fldcw
test
fcmovbe
lea
call
rcr
int3
shrb
add
mov
jg
stos
out
in
mov
aad
fnstsw
addr16
out
fists
pop
push
inc
insb
lret
subb
jb
test
cmpsl
cwtl
jae
cli
pop
mov
arpl
jno
cmc
mov
sti
mov
fbstp
cli
movsl
inc
es
fwait
dec
stos
std
add
out
ljmp
push
fmull
hlt
fbstp
or
xchg
rorb
push
inc
mov
pop
xchg
mov
pusha
fiadds
lods
push
inc
xor
xchg
sbb
sbb
in
nop
mov
dec
aas
mov
insl
data16
pop
testb
mov
aam
in
shrb
jge
jmp
inc
cmp
roll
or
inc
or
mov
in
out
je
xchg
fsubr
add
and
call
dec
push
xor
mov
and
std
adc
test
rcr
scas
out
mov
out
imul
or
cmpsb
push
sbb
gs
leave
imul
mov
push
dec
sub
jns
sbb
jno
mov
nop
push
xchg
xor
mov
mov
jno
les
or
fiaddl
repnz
sub
push
sbbl
cmc
insb
xchg
popl
or
adc
outsl
and
xchg
xchg
aam
pop
popf
inc
imul
cs
xor
jp
push
xchg
iret
ja
xor
mov
mov
imul
pop
repz
adc
or
and
imul
xor
hlt
and
cmpsl
xchg
enter
cld
or
es
ljmp
mov
add
int
loopne
or
outsb
mov
scas
push
pop
mov
inc
outsl
add
aam
and
sti
push
neg
jns
xchg
ja
push
dec
pop
pop
stc
negb
cmp
or
shll
jo
enter
es
mov
sbb
inc
xor
icebp
arpl
xor
cmp
imul
out
ret
mov
popf
pop
xchg
je
push
das
clc
mov
into
fwait
in
repnz
or
mov
enter
addl
loopne
push
push
ss
or
mov
rcr
rcrl
call
mov
xchg
cmp
or
mov
xor
mov
cld
mov
add
jne
bound
mov
adc
xor
jae
sbb
insl
or
inc
pop
fwait
insl
xchg
cmp
gs
sbb
xor
fnstsw
lret
dec
or
rcrb
jle
out
jnp
lcall
pop
xor
test
nop
arpl
daa
push
loop
push
adc
xchg
fidivrs
jmp
loope
daa
out
cli
xor
and
push
mov
sar
popa
lock
sub
sar
xchg
inc
xchg
jno
lds
cmpsb
imul
xchg
push
jno
jmp
icebp
dec
xlat
stos
stos
jmp
jmp
iret
sti
add
mov
mov
mov
sub
jecxz
arpl
fcmovnbe
jmp
push
xor
std
push
call
std
jmp
ljmp
jne
mov
pop
js
sub
in
jge
jae
rcrb
cmp
mov
sbb
popa
imul
lods
dec
jecxz
dec
dec
fisubrl
push
out
icebp
mov
mov
enter
ss
cs
xchg
stos
cmp
and
jmp
cltd
outsb
cmp
nop
mov
and
int3
sub
pop
fimuls
xor
les
inc
pop
sbb
add
fprem
int3
pushf
into
mov
mov
add
movsb
insb
mov
jmp
pop
mov
movsl
inc
jns
sub
cmp
or
push
xor
sub
call
and
cs
jecxz
fnsave
enter
add
mov
cmp
cli
or
clc
shll
pop
cli
mulb
les
inc
std
sub
ljmp
jecxz
mov
stos
pushf
push
fisubrs
mov
enter
insb
mov
repnz
out
cmp
mov
or
push
jo
jmp
sbb
or
shl
popa
push
and
cmp
and
out
popf
cmp
sahf
ret
xchg
movsb
push
lds
lcall
out
and
xorl
cmp
cmpsl
inc
xor
fcmovnb
arpl
pop
add
addl
and
data16
test
mov
mov
push
jns
lret
mov
ljmp
xchg
scas
pop
fbld
scas
cli
in
test
call
mov
jo
adc
aad
xor
sti
jb
jge
sub
mov
jmp
in
rcrb
pcmpeqw
or
or
sub
pusha
adc
fnstcw
mov
lds
outsl
insb
pop
xor
xchg
mov
lods
sub
inc
fs
ja
enter
xchg
pop
ljmp
xor
cmp
in
pop
add
adc
dec
roll
add
jo
clc
or
int
mov
xchg
or
icebp
jmp
and
shll
xorb
add
insb
jmp
dec
loope,pt
sub
ds
ret
mov
les
and
imul
out
jno
mov
mov
mov
cwtl
mov
pop
sub
loopne
push
adc
mul
inc
dec
cld
out
jle
push
dec
gs
adc
mov
pop
jns
cmpsl
push
scas
leave
loop
fstpt
repz
or
hlt
add
mov
jnp
enter
add
aaa
add
sub
aas
mov
sub
cmpsb
sti
or
adc
test
into
pop
and
push
scas
ss
je
add
and
pop
in
jp
cwtl
mov
clc
dec
pop
popf
inc
pop
jp
fnsave
outsl
movsb
mov
push
or
sub
ja
or
arpl
mov
pop
adc
mov
lea
or
add
or
xor
mov
mov
frstor
adc
into
mov
icebp
fs
dec
pop
or
mov
jns
sar
dec
and
mov
fwait
notl
mov
add
scas
dec
les
outsl
add
sub
jmp
incb
inc
insb
ds
sub
rcll
aaa
test
aam
pusha
out
push
popf
xchg
push
stos
mov
rcrb
jp
outsl
daa
pop
xor
sbb
mulb
psubsb
test
push
jge
and
xchg
pop
mov
jmp
stos
loope
xchg
add
sar
add
xor
add
mov
xor
daa
cld
xchg
or
push
enter
push
add
push
xchg
xchg
adc
add
and
or
loope
jecxz
mov
cltd
int3
xor
or
arpl
adc
sar
push
xchg
push
adc
mov
or
mov
jmp
adc
mov
pop
popa
sub
mov
movl
lret
fnstenvs
fisubrs
xor
mov
fdivl
mov
inc
stos
pop
cli
popf
dec
xchg
sbbb
jno
loope
ss
jmp
dec
popf
test
xchg
into
inc
mov
push
jae
and
fwait
das
xchg
out
xchg
dec
cmp
cwtl
cs
in
lds
js
lock
inc
aad
mov
or
adc
cmc
push
aad
test
das
outsb
jl
cmpsb
xchg
es
adc
jl
fmul
scas
ljmp
xchg
test
add
fdivrl
es
sti
and
dec
in
xchg
pop
cmpsl
pop
xchg
xchg
adc
orl
or
jmp
inc
pop
lods
push
pop
lea
mov
in
in
jae
sarb
bound
sub
jbe
jae
pop
xor
mov
sub
std
sbb
jbe
movsb
adc
jmp
cld
adc
xchg
or
adc
xorb
mov
js
or
mov
shld
xor
aad
subb
inc
aam
xlat
xchg
test
adc
or
repz
and
aam
iret
loope
add
addr16
ljmp
jle
sbb
xchg
add
push
or
mov
rclb
mov
dec
cmp
push
mov
dec
sbb
test
filds
or
mov
daa
sub
fldenv
addb
jle
rcr
in
push
movsl
and
xchg
into
call
imul
xor
call
and
outsb
dec
mov
sbb
push
loopne
rclb
xor
xor
dec
hlt
jecxz
cwtl
or
sbb
iret
mov
dec
ja
xchg
jecxz
fldl
icebp
inc
stc
mov
mov
das
add
push
or
rcr
cwtl
fcoml
cs
movsl
xor
test
push
mov
xor
cmp
sbb
rorb
xchg
aas
jg
push
les
xor
and
mov
lods
das
es
jmp
cli
or
dec
pushf
repz
push
adc
xor
idiv
dec
aam
lret
sbb
lea
aas
mov
add
sub
mov
pop
mov
stos
mov
leave
fiaddl
lds
std
jnp
cmpsl
fcompl
mov
jecxz
std
sbb
movsl
out
add
adc
notb
je
outsb
mov
sub
mov
xor
insb
fistpll
mov
push
push
je
dec
pop
fimull
movups
adc
dec
lods
cmp
test
pop
es
pop
adc
lea
in
mov
js
mov
xchg
inc
leave
ret
jmp
sti
mov
cld
leave
cmp
call
or
xchg
fs
jo
push
or
mov
pop
testb
or
shl
inc
dec
jmp
out
jecxz
nop
sbb
push
cmc
pop
jb
popf
cmp
pop
fwait
mov
out
xor
push
dec
sbb
adcl
mov
shr
pop
in
mov
data16
mov
cmpsl
fwait
jmp
mov
sub
hlt
shl
out
ds
mov
adc
cltd
addr16
daa
inc
mov
les
clc
inc
call
cmp
dec
inc
xorl
sbb
xchg
fildl
stos
ljmp
mov
repz
push
jecxz
mov
dec
sub
mov
lret
xor
negl
cwtl
nop
jnp
xor
pop
xor
and
scas
std
push
jge
sbb
push
fbld
cmp
in
xchg
sti
mov
cmp
pushf
mov
and
sahf
mov
dec
push
inc
sti
xchg
hlt
movsb
fdivp
adc
imul
mov
outsb
mov
sarb
dec
jnp
inc
mov
icebp
add
lds
in
mov
lock
sub
xor
sub
fwait
std
out
cmpsb
cmp
add
repnz
xchg
inc
xchg
xchg
int3
mov
outsb
jnp
cs
ds
mov
movsb
lret
fsubl
fiaddl
pop
lea
lods
clc
nopl
jmp
push
testl
lret
jbe
xor
aas
int3
ja
insl
testl
or
xchg
pop
out
jbe
cli
or
pop
dec
std
movsb
push
pop
push
push
or
mov
mov
jb
xor
sub
sub
in
xlat
pop
mov
jo
negl
adc
and
inc
mov
in
pop
pusha
repz
jg
push
xor
aaa
jecxz
mov
arpl
inc
lds
mov
or
popf
fidivrs
mov
and
mov
inc
pop
xchg
in
idiv
mov
test
xor
jle
shlb
cmp
lcall
jo
lea
popa
lock
xchg
into
pop
ret
inc
mov
insl
mov
mov
int
xor
jmp
pop
je
xor
orl
mov
aam
xor
lds
mov
out
lds
mov
push
rcl
inc
push
jecxz
dec
xlat
arpl
mov
int
sbb
fdiv
aas
cmc
fwait
repz
mov
mov
aaa
fs
mov
leave
jg
mov
or
mov
mov
cmp
dec
jle
mov
sub
hlt
and
xor
stos
add
ja
orb
out
imul
mov
mov
lahf
lret
rcll
add
inc
addl
mov
pop
push
sub
mov
xchg
lds
call
inc
arpl
lret
ljmp
jmp
out
lret
push
out
daa
push
pshufw
xchg
inc
data16
sbb
pop
sbb
je
inc
inc
sub
int3
sub
sbb
sbb
pusha
ss
scas
jp
inc
stc
or
and
cmpsl
add
icebp
addl
jg
add
rcrb
xchg
mov
pop
add
and
adc
rcrl
cld
pop
xor
jecxz
sub
out
loop
nop
push
sbb
aam
xchg
addr16
mov
jp
xchg
cmp
add
jo
xchg
mov
fisubrs
fdivs
les
mov
mul
scas
mov
das
daa
ret
pop
loope
inc
loope
xchg
cmp
ret
ljmp
loop
dec
push
mov
movzwl
add
pop
jo
push
pop
mov
jb
ret
push
sub
and
jne
cmp
adc
icebp
loop
fdivrs
repz
sub
sti
stos
sub
jg
pushf
and
inc
sub
movsl
out
push
cmp
push
mov
adc
xor
push
ja
and
cmp
cli
fadds
mov
add
add
inc
out
and
adc
xor
mov
lods
shll
push
cmp
add
sbb
xchg
into
divb
cmp
ret
jns
in
addb
cs
fdivs
stos
jmp
cs
rcll
iret
inc
loop
sbb
mov
fs
jne
mov
test
ds
lcall
rcrb
jae
xchg
ljmp
fcmovu
jno
lds
bound
ljmp
fcompl
and
aas
mov
imul
push
sbb
mov
mov
shrb
sub
jo
xor
push
imul
mov
push
stc
jp
xor
jle
nop
lods
fiaddl
fs
mov
pop
lds
aaa
xchg
popf
jl
imul
inc
pop
arpl
fcmovne
loopne
adc
in
imul
sbb
sub
mov
rclb
dec
or
xchg
mov
lds
xchg
rcr
pusha
xor
testl
call
nop
scas
push
mov
and
mov
pop
add
xchg
outsl
jnp
fldl
or
test
push
cmp
inc
nop
in
nop
je
cmp
xlat
jae
stos
rorb
sti
push
sbb
lcall
sbb
dec
push
push
insb
or
test
daa
repnz
pop
arpl
or
into
ficompl
imul
mov
inc
or
jle
mov
xor
fnstcw
out
sub
add
dec
xor
scas
xor
stos
mov
fstl
cmp
lods
and
xor
and
dec
je
cmc
inc
mov
das
and
pusha
in
cmp
std
cmp
adc
popa
movsl
inc
mov
push
xchg
xchg
or
xchg
daa
xor
pop
lret
mov
cmp
mov
mov
jp
pop
stos
mov
and
sub
clc
pop
scas
cmpb
push
inc
and
sbb
and
push
imull
in
into
jo
negl
stc
jecxz
xlat
les
std
pop
jg
mov
jge
xlat
cmc
push
std
add
mov
sti
mov
outsb
mov
shlb
mov
adc
iret
push
fists
jo
add
jge
xchg
sub
or
ljmp
mov
add
xchg
pushl
sub
pusha
sbb
mov
insb
dec
push
jb
jecxz
mov
push
xorl
sbb
outsl
clc
ret
scas
jg
hlt
iret
sahf
lds
cmp
out
push
cld
xchg
out
sbb
adc
ljmp
rorl
aas
sbb
push
lret
jbe
sub
push
ja
sti
xchg
ficoms
js
push
outsl
jle
inc
fs
ljmp
aam
into
cmp
lea
cmp
aas
hlt
mov
ret
in
sti
xrelease
pop
inc
icebp
movsl
pop
dec
push
sbb
jnp
daa
mov
or
loope
sbb
cmpsl
mov
push
lds
dec
fcoml
cmpsb
fs
jmp
mov
ds
push
xor
cmc
dec
cmc
dec
out
jp
pop
xor
pop
jg
ficomps
mov
aas
test
inc
pop
cmpsl
out
neg
push
mov
rolb
in
xchg
sbbl
lods
loope
clc
int3
mov
popl
cltd
and
insl
dec
mov
in
add
sbb
xchg
xchg
sbb
cmc
gs
scas
aad
add
push
sbb
cld
dec
decl
call
pusha
fldt
shll
cli
or
push
or
das
mov
jne
bound
xor
mov
and
or
jo
stc
int
jno
pop
out
shlb
jmp
pop
test
xchg
add
ss
cltd
mov
adc
pop
ss
ret
push
mov
add
lcall
scas
ds
pop
xchg
sub
push
iret
pop
cmp
dec
lret
sub
je
lods
push
jg
sbbb
mov
in
sub
mov
xchg
cmp
jle
pop
mov
xor
test
push
les
jmp
pop
and
clc
aam
sbb
pop
addr16
xchg
dec
mov
mov
popa
scas
mov
jo
movsb
lods
stos
in
jne
into
scas
xlat
pop
jb
js
pop
inc
mov
jns
xchg
jae
push
in
std
or
or
mov
add
test
inc
ds
dec
dec
lahf
or
fs
xlat
mov
gs
push
or
push
jno
xchg
rcrl
sub
cld
xor
push
mov
add
aad
cmovge
ss
insb
add
dec
test
cwtl
test
or
imul
packssdw
pop
ret
sbb
clc
incl
inc
mov
cld
pop
xchg
iret
shlb
mov
dec
sar
inc
cli
dec
std
push
inc
cli
push
push
outsb
imul
stos
sbb
inc
test
pop
xchg
insb
jo
mov
rcrl
or
ret
mov
cli
lret
and
mov
cmp
push
inc
mov
mov
pushf
test
xor
xchg
mov
mov
inc
xchg
add
mov
fwait
push
pop
and
in
shrl
int3
adc
daa
jmp
jo
jbe
adc
and
pop
or
scas
or
dec
in
test
loopne
and
pop
fsubrs
sbb
pop
mov
or
pop
dec
jne
push
mov
loop
push
in
clc
scas
jmp
jl
mov
iret
lods
xchg
dec
pop
subb
lret
insl
sub
dec
mov
add
decb
xlat
sti
dec
inc
call
es
rcll
mov
fsubp
mov
mov
cwtl
into
mov
pop
sbb
aam
and
stc
scas
orb
xchg
add
es
and
add
clc
jp
divl
and
popf
xchg
xchg
inc
sti
mov
fwait
adc
out
js
mov
adc
sarb
push
cmp
dec
rorl
das
pop
push
xor
mov
and
fistl
push
push
cmp
mull
movsb
sub
and
sub
lods
out
adc
pusha
jo
movsb
xchg
jne
dec
sub
imul
inc
xor
scas
movsb
shll
inc
orl
stos
int3
add
fistpl
int3
xchg
xor
inc
sahf
jl
adc
call
dec
mov
push
gs
and
rcrl
pop
clc
or
insl
enter
adc
in
ljmp
inc
out
cmpsl
imul
mov
cwtl
ficompl
xchg
test
in
shll
add
add
loope
shl
cmp
fistl
popl
fdivs
repz
ljmp
xchg
clc
pushf
in
inc
sbb
inc
mov
mov
test
cmpsl
leave
stos
sub
inc
sub
test
in
in
clc
jne
loopne
inc
fwait
push
sub
or
push
mov
and
mov
inc
mov
jmp
or
and
jbe
repz
movsl
iret
icebp
mov
cmc
fsubrl
test
sub
mov
inc
shlb
nop
pop
cwtl
pusha
sahf
xor
mov
cld
pop
in
pop
cld
push
push
sub
stos
xlat
lods
push
rol
pop
sub
mov
stc
clts
mov
push
test
mov
out
push
insb
fs
cli
out
call
pop
jb
or
test
aam
lret
mov
aam
lret
hlt
push
je
dec
mov
test
movb
inc
add
push
pop
mov
push
mov
das
ljmp
adc
stc
in
mov
ret
lcall
or
call
dec
push
mov
cmp
movsl
mov
inc
stos
icebp
pop
mov
gs
int
xor
lahf
rcrl
push
cli
mov
and
cmp
lods
xor
cmpb
shl
push
insl
xor
inc
stos
jl
aam
sub
dec
mov
sbb
jns
adcb
pop
mov
mov
insl
rorl
xchg
popf
jbe
sub
adc
sbb
outsb
mov
imul
lock
mov
in
shrl
jb
adc
mov
mov
jo
pop
imul
and
push
test
es
sub
out
or
xor
mov
test
push
mov
subl
xchg
and
int3
fsub
repz
mov
aam
je
gs
push
imul
fdivr
iret
jne
mov
popa
cltd
rclb
cmp
js
cs
into
cmp
sbb
leave
idivb
lods
subl
ror
jecxz
and
xor
xchg
mov
mov
cmpsl
cmpsb
out
xor
pop
mov
mov
push
pop
pusha
fpatan
and
lahf
sub
cs
std
xchg
cld
sub
jg
out
repnz
jnp
stos
pop
dec
mov
xor
inc
jp
adc
mov
movsl
cmp
cmc
cmpsb
fldl
sub
mov
xor
rcl
movsb
jbe
sub
repnz
mov
mov
mov
cs
mov
jge
cmp
leave
and
add
pop
cmpsb
std
xchg
aas
fcompl
in
int
iret
xchg
cmp
movsb
xor
mov
mov
pop
xchg
outsb
jns
mov
sbb
imul
sub
xchg
int3
mov
sti
or
es
movb
fdivs
adc
cmp
lret
add
ja
call
cwtl
push
shlb
pop
iret
fmull
add
and
adc
add
xchg
mov
fldenv
lahf
adc
mov
std
sub
inc
js
lret
lods
stos
cmp
icebp
dec
aaa
pop
push
xorb
ds
fprem1
adc
loope
adc
movsl
call
xor
mov
push
push
adc
xchg
add
loop
xchg
or
cli
pop
jle
jg
cmp
pop
movsb
rorl
mov
aaa
sbb
cmpl
es
mov
ficoms
aam
jmp
por
adc
and
jb
dec
std
ss
or
sub
mov
mov
hlt
xchg
loopne
fsubrl
sub
int
cmp
pop
ret
lahf
cmp
je
pop
cmc
nop
pop
sub
das
fwait
xchg
aad
xchg
cld
cld
cld
clc
insb
stos
lret
push
aam
pop
fnsave
leave
mov
push
pop
sti
push
jns
dec
add
adc
nop
mov
push
fwait
xor
bound
call
push
mov
icebp
sbb
lret
lahf
icebp
xchg
sbb
and
xor
call
ja
fisubl
and
leave
gs
and
jge
loope
jle
inc
movsl
test
mov
pop
ja
dec
lret
pusha
and
iret
push
fstl
jns
xchg
test
cmpsb
push
dec
fiaddl
in
scas
mov
data16
or
leave
out
scas
jmp
mov
call
pop
dec
movsb
push
push
xlat
lea
mov
mov
cli
clc
cmp
outsb
fnstcw
decb
mov
out
push
arpl
pop
pop
loop
mov
mov
sub
imul
int
sahf
cld
push
add
mov
out
ficoms
inc
aam
mov
pop
out
shll
mov
sub
inc
aaa
lret
sub
ljmp
xchg
test
mov
mov
bound
idivl
adcl
cmp
mov
and
das
aas
dec
subb
cmp
in
lods
lock
jns
push
add
fcmove
inc
mov
sub
ds
aam
jle
sbb
test
div
cmpsl
sahf
divb
fstpt
mov
adc
mov
sub
jno
push
pusha
cld
sbb
lahf
jae
test
movsb
adc
mov
es
mov
jmp
mov
inc
add
mov
aad
stos
dec
pop
das
lret
fcomip
daa
sub
xchg
push
sahf
add
fstpl
iret
or
daa
dec
in
push
sub
push
push
push
inc
rdmsr
mov
adc
mov
add
inc
out
mov
leave
shll
mov
es
nop
or
lods
jecxz
pop
iret
repz
xchg
mov
in
push
add
sub
aas
add
imul
insb
adc
inc
push
call
mov
mov
lods
mov
loop
jecxz
pop
into
lahf
subb
repz
popa
or
push
or
fwait
pop
test
movsl
xchg
mov
xor
pop
jns
fimuls
pop
mov
fstpl
mov
jnp
mov
adc
inc
xchg
pop
sbb
enter
les
jle
adc
jae
les
int3
xor
dec
mov
mov
iret
fidivrs
add
add
sub
jo
lahf
fisttpll
sbb
push
xchg
test
ja
xor
xor
cltd
daa
mov
dec
sbb
sbb
stos
sbb
or
scas
pop
inc
std
lods
cmp
ja
leave
xchg
iret
mov
inc
sub
mov
ret
cmp
cmp
mov
xchg
les
mov
icebp
sbb
mov
cld
rcrl
xlat
pop
jno
loop
lcall
mov
aaa
outsl
adc
pop
int3
mov
xor
shll
and
pop
roll
and
or
cmpsl
mov
popa
les
nop
test
je
sub
pop
cltd
mov
bound
pushf
arpl
xchg
mov
fnstenv
push
inc
xor
jb
outsl
xchg
stos
aas
dec
dec
push
je
pop
push
or
pop
andb
adc
outsb
mov
mov
int3
xlat
mov
shlb
lret
mov
enter
jmp
mov
jge
aam
xchg
and
adc
ror
scas
mov
push
cmp
mov
inc
xor
mov
push
mov
xchg
lods
mov
inc
xchg
pop
xchg
ljmp
fsub
xchg
and
ds
pushf
repnz
mov
inc
sub
pop
mov
rorl
or
std
repz
shrb
mov
push
pusha
stos
aam
lea
fwait
sbb
fs
push
mov
addr16
fwait
test
jmp
add
insl
xchg
dec
addr16
xlat
or
cmpsb
test
cwtl
pop
adc
repnz
hlt
idivl
outsl
idivl
test
jmp
sbb
movsw
mov
scas
clc
aas
lods
xor
pushf
jns
in
inc
or
enter
cmp
pop
mov
pushf
push
push
and
dec
or
std
imul
dec
xchg
xor
into
jno
xchg
mov
mov
arpl
mov
in
and
cmp
xor
jmp
into
xor
mov
xor
cltd
cli
inc
addr16
or
inc
mov
push
xchg
add
xchg
mov
idivl
movsb
aad
xchg
and
mov
data16
scas
popf
xchg
xchg
data16
jnp
sub
aad
cwtl
push
ja
jp
xor
inc
mov
test
addr16
mov
xchg
std
mov
aaa
inc
mov
and
jno
sub
pop
cmp
xchg
in
push
jg
rorb
mov
nop
sub
insb
enter
and
jmp
mov
jns
jp
xchg
or
mov
fidivrl
dec
add
sub
mov
movsb
scas
incl
fimuls
adc
das
cltd
sub
scas
xor
push
gs
insl
cmpl
fcmovnb
cmc
add
movsb
js
mov
ja
test
je
cwtl
sbb
inc
jno
mov
xor
lea
pop
es
xchg
inc
cmpsl
add
stc
inc
sahf
cmpsl
inc
int
cmp
sbb
dec
push
les
add
mov
jns
dec
pop
lds
icebp
and
mov
in
jb
aas
dec
sti
cmc
lcall
sarb
sub
ljmp
mov
insb
in
inc
lret
fcmovnu
cltd
pop
aas
add
xchg
inc
das
shl
cwtl
gs
add
loope
insb
addr16
stc
sub
addr16
sarl
sbb
ss
in
lds
inc
stos
push
push
ucomiss
lret
test
adc
push
cmpsb
dec
in
popa
mov
sbb
out
sti
rol
arpl
cwtl
xchg
rcrb
or
pop
scas
adc
cmp
xor
cmp
in
in
repnz
lahf
gs
dec
fsubs
lods
dec
jbe
or
xchg
fldt
ret
mov
and
sub
mov
incl
sti
sbb
pusha
aas
aas
add
fwait
jne
add
repz
xchg
daa
sub
dec
dec
lcall
aaa
jno
out
cli
push
jg
mov
mov
or
repz
inc
jbe
dec
inc
pop
mov
das
and
pop
ljmp
sub
adc
xchg
in
xchg
out
or
sbb
fidivs
hlt
push
jl
push
sub
jge
and
push
jecxz
mov
mov
xor
jb
mov
mov
pop
hlt
dec
lahf
push
je
das
cmp
mov
adc
das
mov
rol
je
das
cmc
mov
add
sbbl
cmp
test
inc
inc
push
push
jmp
movsl
mov
jmp
mov
mov
lahf
lods
rclb
adc
sbbb
test
notb
or
inc
mov
mov
add
xor
xor
cmp
jno
fs
mov
mov
and
jle
xchg
mov
dec
xor
lea
gs
sub
inc
inc
dec
cmpsl
fisttps
xchg
jg
popa
add
or
dec
mov
int
cwtl
repz
lea
adc
xor
sub
mov
out
mov
cmp
cmp
add
xchg
dec
mov
sub
loope
mov
pop
or
jecxz
shrl
push
das
imul
cmp
jg
ret
cmp
inc
jae
iret
movsl
sub
shl
fildl
push
shll
fwait
mov
jl
push
inc
mov
sbb
xchg
add
daa
and
les
or
fwait
sub
les
jmp
shrl
jb
test
cli
inc
and
outsl
add
mov
out
pushf
inc
and
and
xchg
sti
stos
add
inc
test
cmpsb
inc
xor
in
inc
add
dec
cmp
mov
jbe
cmpsl
addl
or
psubusw
sbb
outsl
cmp
push
loop
pop
test
jno
dec
or
mov
test
ret
cmpl
outsb
andb
push
push
popa
cmp
fmuls
out
push
cmp
stc
xchg
in
or
dec
jle
orb
xchg
std
jl
add
mov
fs
cwtl
mov
cmc
inc
pop
sbb
jmp
xlat
mov
push
jo
jne
pop
lods
dec
rcrb
jbe
das
out
xchg
or
mov
adc
loop
cmc
cwtl
mov
cmpsb
add
testl
push
int
mov
rorb
adc
cmp
ja
fisttpll
add
xchg
fxch
dec
pop
psubq
cs
push
dec
adc
rorb
aas
fstp
scas
xchg
or
adc
add
in
xchg
adc
adc
cwtl
out
test
in
adc
dec
jbe
xor
mov
adc
ss
sarw
fisttps
add
mov
pop
std
mov
xchg
inc
inc
cs
aam
into
cmp
mov
or
rol
stos
sets
pop
push
push
push
sub
lret
jbe
sbb
aad
addr16
xchg
inc
sbb
bound
cld
xchg
movsl
mov
std
shll
mov
mov
cmp
outsl
loopne
jecxz
jmp
popf
lahf
std
sub
das
aad
inc
movsb
push
fistpl
push
and
inc
or
mov
mov
cmp
cmp
mov
lret
dec
adc
pop
push
add
pop
jecxz
sbb
inc
push
stos
cmp
sti
push
or
cli
sahf
out
repnz
push
mov
dec
sub
sbb
loopne
add
scas
fsubrl
std
xchg
roll
sub
push
inc
ret
stos
aad
xlat
sbb
xchg
or
inc
jbe
jae
repz
loopne
ficompl
mov
data16
mov
sbb
jb
sarl
out
push
push
xor
or
adc
mov
mov
mov
mov
lret
jae
adc
fbld
loope
decb
mov
xor
xor
and
addr16
imul
xchg
std
shll
adc
xchg
cmp
and
rol
dec
lcall
adc
xor
cmp
push
dec
jmp
and
jns
push
test
test
add
cmpsl
into
and
popf
arpl
js
push
std
into
inc
cwtl
jl
inc
negl
stos
iret
add
jl
sbb
mov
add
sbb
cmp
loope
dec
jae
inc
idiv
test
push
xchg
fs
imul
out
add
push
movsb
insb
pop
add
aad
jp
mov
icebp
outsb
inc
sbb
sbb
cmp
inc
sbb
cmp
sahf
jmp
xor
or
sbbb
lret
add
aam
jecxz
sbb
add
popa
pop
xchg
cmp
mov
pop
orl
mov
int
sbb
ret
adc
or
imul
pop
jecxz,pt
inc
inc
jae
dec
ljmp
loop
loope
mov
adcb
sub
stc
mov
ret
push
aam
push
cwtl
xor
sub
imul
sahf
mov
mov
xchg
lret
xor
fs
mov
push
out
rclb
cmp
inc
inc
or
sbb
rcrb
mov
movb
push
adc
or
or
andl
xchg
std
cli
ret
mov
and
popf
es
mov
adc
pop
adc
mov
push
inc
andnps
mov
adc
add
sub
fldl
stos
and
out
pop
cltd
fadds
jmp
adc
add
test
add
ja
adc
sbb
mov
cltd
pop
adc
jmp
sbb
bound
inc
sub
mov
es
call
mov
fdivl
repnz
add
push
aas
pop
mov
pop
call
push
cmpsl
xor
jl
rcr
sbb
outsl
andl
pop
pop
jg
fstps
push
inc
outsb
je
inc
imul
sar
aad
pop
ja
bound
pop
mov
test
mov
pusha
cltd
xchg
jmp
xor
ss
ja
les
xlat
shl
out
inc
inc
out
jg
cltd
or
sahf
test
mov
das
rcll
insb
jnp
pop
push
adc
lods
fdivr
ds
mov
pop
inc
rol
push
xor
test
ret
adc
cmp
mov
iret
stos
cmpsl
call
incb
aaa
push
lds
dec
xchg
xor
adc
mov
add
in
push
mov
jnp
test
arpl
imul
imul
jne
ljmp
inc
inc
push
cld
insl
fcoml
int
mov
mov
sarb
sbb
jb
sbb
cmpsl
repnz
jge
fstl
iret
in
aad
lods
mov
mov
iret
andl
movsb
and
add
cltd
dec
sbb
lahf
into
jmp
add
jno
and
int
ret
push
testl
cmp
aam
mov
fnstenv
dec
xchg
pop
cs
shll
movsb
movsl
jp
ret
and
imul
push
enter
xchg
shll
xchg
cmpsl
fcmovnu
dec
out
xchg
pop
clc
push
push
pushf
sub
mov
cmc
insb
inc
es
xchg
pop
shlb
xchg
pop
stc
sub
test
int
lods
leave
jmp
les
push
mov
mov
add
out
insl
fidivrs
addr16
cmpsl
jl
adc
cld
pop
add
push
loope
sub
mov
aad
mov
cmpsl
movsl
add
adc
mov
or
jo
lds
mov
sub
les
scas
sub
lock
incl
cwtl
lods
int3
xchg
push
xchg
inc
out
jmp
sbb
arpl
nop
xor
popa
dec
bound
cld
jle
cmpsl
adc
test
lods
add
addr16
mov
popf
cmp
or
daa
insl
mov
adc
add
mov
ret
add
and
jne
lods
pop
jge
ret
pop
jmp
push
aad
cltd
loop
les
cld
sti
inc
adc
sub
nop
jp
clc
icebp
imul
es
js
and
add
pop
inc
loop
sbb
int3
lret
or
lret
shll
or
pop
setne
adc
or
imul
insl
mov
outsb
push
cltd
stc
sbb
mov
jnp
push
out
lahf
sbb
rclb
mov
repz
sarb
inc
xchg
test
dec
or
leave
jp
movsl
jge
rcr
repz
movsb
fimull
mov
or
inc
dec
mov
das
mov
jo
or
push
inc
pop
out
ljmp
out
xchg
cmp
iret
loop
inc
movsl
pop
add
cmc
in
xchg
xor
push
divb
lcall
mov
lret
enter
ficoml
xor
cld
inc
lds
dec
lods
xor
out
dec
pop
pop
das
test
pop
jnp
enter
inc
inc
or
xchg
jns
push
adc
adc
dec
jp
mov
clc
or
dec
mov
fcmovne
arpl
inc
cmc
pop
pushf
ds
mov
xor
icebp
adc
xor
mov
pop
popa
orb
daa
es
push
scas
imul
and
mov
outsb
adcb
ds
dec
sub
dec
stos
loopne
mov
iret
mov
xlat
popf
imul
xchg
push
jp
movsb
pcmpeqd
mov
ret
xor
inc
ss
fisubl
and
push
rcl
jno
sbb
pop
aaa
adc
in
enter
mov
sbb
xlat
leave
jno
rolb
mov
inc
pop
int
stos
lahf
outsb
daa
out
sbb
cld
in
mov
fdiv
out
mov
mov
gs
mov
or
popa
xor
pop
imul
or
xor
ja
sub
shl
mov
scas
mov
jg
mov
mov
xchg
lcall
popa
in
loopne
inc
pop
dec
adc
into
push
push
inc
push
rorb
xchg
mov
aad
sub
jae
sbb
jns
or
aas
xlat
adc
je
xor
sti
aad
fwait
or
mov
dec
sub
shll
bound
dec
popf
aam
dec
test
inc
out
xchg
mov
xor
data16
sbb
mov
inc
inc
sub
or
cmpsb
ja
inc
jmp
mov
push
das
lock
push
lret
adc
ljmp
xor
xchg
insl
add
push
cmp
and
jbe
xor
jne
aas
dec
and
or
ljmp
shrl
lret
or
xchg
xor
decb
fldcw
jge
mov
xor
mov
scas
add
lods
cmp
sub
cmc
sbb
daa
sub
sti
jecxz
cmp
xor
lret
mov
mov
adcl
jns
and
xchg
daa
pop
sbb
cmpsb
leave
push
jae
clc
mov
mov
cmp
and
fdivs
xor
jecxz
loopne
outsb
loopne
out
inc
ret
cs
or
mov
dec
xchg
ss
addr16
cwtl
int3
adc
adc
in
daa
xor
mov
outsl
into
sub
call
out
push
sbb
mov
test
sbb
or
leave
add
inc
adc
sub
popf
sub
and
mov
xchg
lret
and
test
fisubrl
insb
imul
push
outsl
pusha
frstor
movsb
shrl
outsl
adc
jl
xchg
xor
repnz
nop
fwait
adc
mov
jle
repz
ss
push
push
ja
cmp
scas
push
imul
xor
fsubrl
mov
mov
inc
aaa
jb
mov
stc
orl
xlat
push
jne
sbb
cli
sbb
out
pop
jb
xchg
cmpsb
dec
das
pushf
mov
dec
pop
ficompl
jmp
pop
mov
cmp
cltd
add
outsl
mov
in
jno
and
fistpl
fdivr
jae,pt
stc
imul
repz
outsl
leave
lods
out
add
xor
dec
loop
not
dec
lea
and
xchg
test
fiaddl
jmp
sub
fs
clc
in
mov
inc
mov
fildll
je
adc
mov
xchg
xor
mov
pushw
test
xor
pushf
and
call
movsl
xor
and
inc
xorb
xchg
cmc
shlb
outsl
xchg
xor
pop
icebp
inc
cmpsb
xchg
push
mov
lock
sbb
xchg
pop
sbb
xchg
cmp
negl
push
inc
test
adc
inc
mov
adcl
dec
xor
cmc
rorl
mov
stos
jle
pop
and
dec
add
inc
and
scas
shll
cmp
les
mov
outsb
testb
cmp
inc
dec
bound
stc
or
dec
xor
sbb
mov
aas
sub
cwtl
adc
js
pop
add
fcompl
xchg
lret
stos
js
xchg
mov
sub
jle
adc
inc
sahf
jb
mov
mov
inc
adc
and
test
jb
jmp
mov
ds
xchg
js
adc
sbb
mov
ret
jns
stos
cmp
or
mov
dec
std
xchg
mov
jmp
jmp
inc
lret
inc
imull
inc
mov
push
sbb
lret
dec
cmp
add
call
int3
sub
sarb
cwtl
mov
dec
call
adc
je
ss
pop
rcl
insb
sti
adc
pop
jnp
loope
mov
inc
dec
jle
jo
mov
adc
push
or
mov
imul
or
cmp
jns
push
daa
ss
sub
push
dec
xor
inc
je
mov
sahf
mov
mov
aam
movsb
leave
cmp
push
fstpt
mov
sub
js
mov
dec
ss
roll
call
test
mov
in
orl
sbb
pusha
js
jge
xchg
popf
rol
and
andl
clc
or
mov
add
outsb
aam
xchg
popf
ret
fwait
aaa
inc
out
sub
stos
nop
icebp
insl
cmp
dec
jae
push
addl
out
or
fcomi
sub
inc
add
shlb
hlt
aas
inc
jmp
mov
adc
dec
icebp
dec
jecxz
mov
test
dec
decl
jge
gs
mov
insl
push
mov
jmp
jbe
sub
xchg
cmp
scas
xchg
movsb
xor
fidivrs
mov
ret
add
mov
mov
fisubl
lock
push
sub
or
or
mov
xchg
push
les
mov
mov
adc
data16
and
lahf
xor
int
fcomip
into
xchg
pop
jle
lcall
enter
jbe
xchg
ds
sbb
add
mov
sbb
enter
scas
fidivl
pusha
lods
and
repnz
jmp
mov
hlt
insb
outsb
lock
das
mov
sarb
shll
adcl
xor
mov
dec
in
mov
inc
dec
sbb
mov
cwtl
movsl
sub
or
mov
sub
push
jecxz
pushl
fldenv
aas
mov
sub
fists
inc
es
nop
or
pop
jg
ss
cmc
push
jbe
data16
dec
mov
xchg
fimuls
aam
lcall
arpl
gs
roll
xchg
repnz
pop
sbb
sub
fistpll
sahf
add
inc
mov
sbb
jg
inc
sbb
in
std
cmp
pop
rol
loope
rclb
xchg
cld
pop
test
outsl
push
sti
mov
adc
loope
bound
sub
add
data16
loopne
int3
lods
in
mov
push
aad
cltd
mov
outsb
arpl
xchg
adc
imul
jae
mov
fwait
idiv
movl
es
out
mov
mov
out
add
das
aaa
cmp
lcall
mov
clc
pop
addr16
push
std
lahf
imul
ret
cli
aaa
loope
add
push
sahf
sub
jp
pop
mov
lcall
movsb
mov
test
sbb
jmp
scas
cmpsb
insb
jns
movsb
mov
call
ret
mov
shlb
pop
jae
les
sti
xor
repz
in
gs
jno
insb
sbb
xchg
mov
mov
mov
movsb
dec
xor
cwtl
dec
push
push
test
lret
and
dec
xlat
iret
enter
adcl
aad
sarb
lock
mov
push
mov
stos
xor
pop
inc
or
out
xlat
aam
subl
push
add
mov
pop
jne
sarl
aam
imul
inc
jmp
mov
pop
dec
fisttps
stos
arpl
push
movsl
aas
stos
sub
xchg
ljmp
repnz
imul
ret
or
sub
pop
insb
lret
sbb
imul
addr16
enter
call
xchg
dec
stos
mov
jno
mov
leave
push
shrb
mov
ss
js
dec
shl
mov
movsb
out
insl
daa
jno
ds
aaa
xchg
dec
lods
pop
xlat
xchg
fdivs
add
sti
mov
shl
into
xchg
movsb
je
pop
ja
xor
push
sbb
jecxz
sbb
inc
jns
pop
fidivrl
repz
sbb
sub
dec
arpl
xor
jg
pop
hlt
roll
pop
repz
loopne
in
movsb
mov
repnz
lcall
test
sbb
mov
xor
cmp
mov
in
call
test
xor
cs
shl
or
mov
stc
xor
mov
and
jle
mov
push
ror
sub
cmpsb
dec
or
pop
in
jne
pop
sarb
add
cmp
push
pop
push
mov
pop
cli
jmp
adc
call
aaa
push
sub
aaa
sub
enter
xor
dec
push
lods
sar
inc
loopne
add
clc
add
scas
mov
cmpsb
or
pop
jmp
xchg
sub
fimull
lret
ret
pop
pop
add
sub
xor
int
lret
ljmp
ljmp
mov
arpl
fwait
cwtl
stos
testb
fiadds
mov
stc
cmc
xchg
popa
push
dec
in
fstps
push
enter
mov
sahf
xor
pop
mov
jae
inc
pop
lods
sbbb
mov
push
ja
mov
push
test
dec
and
adc
arpl
fidivl
pop
rcll
jb
cwtl
and
lods
cmc
xor
sbb
je
mov
adc
loope
std
cmp
jle
xchg
xchg
enter
jecxz
leave
add
pop
in
mov
cmp
adc
fimull
mov
cs
sub
sbb
xchg
jae
popf
or
data16
or
gs
xor
mov
in
mov
call
ljmp
rcrb
or
ljmp
mov
and
mov
sbb
es
pop
test
mov
rclb
test
movsb
adc
jnp
lods
lods
sti
jns
push
and
mov
mov
cmp
imul
push
mov
xchg
not
lds
call
or
mov
sti
pop
call
cmp
add
xchg
push
jno
inc
xor
ljmp
jge
hlt
daa
mov
mov
imul
pushf
pop
inc
rol
outsl
inc
in
cmc
cltd
dec
pop
jo
inc
sub
rcrl
sub
mov
mov
outsb
push
lods
mov
mov
or
sub
xchg
daa
mov
jo
jne
ret
sbb
aas
jecxz
inc
jg
das
pop
pop
xor
bound
jg
scas
xor
es
add
dec
mov
inc
cmp
jge
jo
leave
xlat
stos
sub
fisttps
dec
lea
mov
pop
pop
fwait
test
enter
xor
pop
mov
ret
test
mov
lods
js
cmp
adc
mov
pushf
mov
inc
dec
fs
je
push
push
je
inc
mov
cmp
sbbb
mov
cs
push
or
mov
pop
sbb
std
les
out
cmc
mov
jnp
mov
pop
push
ljmp
data16
test
lret
mov
inc
loope
test
daa
repnz
push
add
cmp
jmp
enter
inc
enter
xor
incb
inc
into
adc
adc
push
sub
mov
mov
cld
or
and
dec
loopne
std
int
sub
push
adc
pop
in
fstpl
outsb
lahf
rorb
push
jge
cmp
sbb
and
jns
mov
iret
xor
test
addl
call
xchg
sub
subl
stos
jge
adc
arpl
sub
adcl
mov
enter
cld
adc
xchg
sahf
sbb
adc
cwtl
and
mov
cmp
add
mov
xor
jb
lods
mov
sti
lea
fisttpll
out
fwait
mov
mov
jmp
sub
and
mov
inc
in
es
mov
imul
or
jmp
cwtl
pop
imul
movsb
or
jmp
xor
jmp
mov
push
mull
cmp
out
ljmp
push
push
aaa
in
cmpsb
stc
mov
loop
push
in
scas
jmp
xchg
sbb
jmp
idivb
sub
add
loope
cwtl
xchg
jge
lods
push
aas
jns
test
push
mov
mov
inc
xor
sbbb
notb
cmc
rorb
call
xchg
jb
hlt
mov
js
fs
cwtl
mov
xor
testb
shrl
push
inc
int
mov
adc
cltd
outsl
movsl
inc
jno
cmpsb
jge
xlat
and
sub
out
push
fs
add
sub
mov
adc
insb
lcall
dec
push
lcall
xchg
jle
mov
fwait
xor
push
ret
fsubp
shll
lods
es
and
insb
es
or
pop
cmpsb
test
cmp
push
jecxz
lods
out
or
std
cli
mov
jb
insl
sub
pop
xchg
push
cmp
mov
lcall
das
sub
int
dec
aad
out
and
mov
movsb
push
ljmp
dec
push
push
mov
mov
and
rcrl
fimuls
jnp
fsubs
insb
pop
sbb
jmp
sahf
pusha
std
aam
sbb
ret
sub
rclb
pop
xor
sub
jne
sbb
fsubrl
or
mov
mulb
adc
sbb
ret
in
sbb
aas
xor
cmpl
js
clc
sbb
idivb
cmc
mov
push
mov
jns
jne
fs
fstpl
push
ljmp
pop
test
bound
leave
xchg
xor
les
or
ds
je
test
add
mov
xchg
popa
jecxz
push
cli
jl
imul
repnz
inc
jmp
inc
push
mov
in
iret
insl
fcmovbe
or
lea
lahf
jg
mov
inc
pop
shlb
push
and
cmp
jnp
sub
mov
adc
dec
mov
xor
fsts
dec
push
ja
inc
mov
jae
dec
fildl
test
pop
pop
mov
lds
pop
icebp
cmpb
fstl
popf
xchg
mov
pop
jbe
push
pop
cmp
pop
mov
stos
xchg
pushf
cmc
iret
lods
push
rol
push
xchg
ret
lock
lret
in
ffreep
xchg
jmp
insb
imul
js
out
test
cwtl
lds
pop
mov
pop
test
lds
imul
sbb
in
loop
mov
mov
sbb
loopne
cmp
into
cmp
pop
mov
aam
xor
shrl
rclb
sub
mov
loopne
or
sub
pop
jle
ds
push
xor
daa
xchg
mov
adc
pop
mov
dec
int
lret
sbb
inc
push
inc
orb
repnz
int
adc
jnp
out
js
cmpsl
cli
sbb
lods
jbe
stos
fdivs
jno
cltd
mov
push
cmp
clc
das
or
ljmp
sahf
inc
int3
xor
stos
movsb
dec
cmp
or
call
xor
jge
outsb
mov
inc
insb
stos
jo
sahf
fwait
jbe
sar
icebp
aam
pop
out
or
jmp
neg
out
je
lods
fildl
mov
xorb
push
int
stc
daa
push
gs
adc
cwtl
fcmovbe
push
xor
pop
ljmp
sarb
add
ljmp
fcomp
xchg
stos
notb
sti
cmpsb
cli
add
sbb
xchg
mov
mov
mov
rorb
pop
fwait
xchg
imul
pop
cld
lds
and
inc
jecxz
jnp
adc
mov
fistps
sub
sbb
or
int
and
loopne
cmpsb
jp
hlt
or
pop
test
ret
sbb
add
popf
or
repnz
nop
cmp
inc
inc
adcl
out
push
or
and
and
inc
cmp
pop
jns
sub
shrl
sbb
inc
mov
mov
xor
xor
sub
mov
aad
xor
cmpb
fs
inc
push
add
ret
sbb
hlt
jp
xchg
or
jo
sbb
and
and
jo
dec
xchg
test
mov
add
pop
push
sub
push
push
xchg
jne
pop
jnp
pop
out
xchg
loop
aam
pop
ds
test
outsl
or
js
sbb
adc
mov
jg
jecxz
mov
add
mov
outsl
mov
jecxz
and
push
xor
mov
rcrl
add
loop
shlb
test
enter
xchg
mov
jecxz
stc
adc
movsl
aad
ffree
add
jo
mov
push
adc
fisubl
jp
data16
repz
sahf
cld
popa
pop
mov
mov
loope
mov
dec
adc
mov
adc
xchg
push
mov
mov
fisttpll
pop
andb
or
inc
popf
in
add
pop
fsubrl
test
mov
or
aam
adc
lret
xchg
mov
test
fidivl
mov
data16
div
pushf
sub
and
mov
dec
dec
mov
jle
popa
mov
xor
jmp
sti
cmp
adc
inc
mov
sub
aaa
or
scas
lea
adc
sub
iret
or
or
mov
sti
aad
fwait
xor
ss
jae
push
mov
outsb
mov
out
push
cmp
push
mov
out
sub
mov
cmp
push
scas
fwait
push
cmpsb
cmp
add
in
rcrb
jbe,pt
mov
aam
pop
int3
scas
jl
call
loopne
nop
push
lods
nop
stos
es
enter
subb
mov
inc
repz
pusha
mov
xchg
lret
rcrl
inc
fidivrs
je
adc
lret
jne
std
add
and
xchg
push
ss
adc
mov
push
out
push
and
xor
mov
clc
ds
adc
cli
les
dec
jmp
xlat
adc
mov
and
sbb
fwait
mov
aaa
push
xchg
cmp
mov
cmpsl
sti
adc
loopne
popa
in
mov
fs
xchg
inc
dec
jno
mov
fwait
pop
lret
and
je
xor
gs
mov
jno
jns
dec
es
and
and
icebp
negb
lahf
mov
mov
sti
loope
push
mov
mov
mov
pop
fsubl
pop
inc
inc
dec
mov
mov
cwtl
xor
cli
imul
ss
scas
icebp
nop
xchg
fs
xor
add
dec
mov
in
add
jae
sub
into
mov
or
mov
addr16
and
fucomp
sbb
pop
add
add
imul
jne
mov
stc
mov
push
outsb
mov
adc
xchg
out
cmp
nop
mov
sbb
add
add
mov
sbb
mov
mov
inc
mov
lds
cmpsb
ret
es
shlb
lret
adc
xchg
rcr
push
fdivp
int
cmc
and
ror
cld
xchg
jmp
xchg
and
insb
fld
dec
inc
lcall
jle
mov
sbb
jb
pop
rolb
popf
jp
push
sbb
cld
mov
lea
adc
cmpsb
push
out
mov
push
push
or
not
jl
xlat
jbe
xor
loop
movsl
test
xor
dec
notb
leave
push
js
sbb
clc
xor
sbb
int
cmp
jns
shrb
lea
popf
lea
push
adc
mov
sub
mov
and
jmp
mov
sub
cwtl
js
sub
inc
xchg
pop
fisubrs
xchg
xchg
inc
pop
sbb
icebp
sbb
mov
mov
insl
cmp
cmp
xchg
jae
cmp
rorl
or
stos
or
xorl
mov
fstpt
test
adc
mov
cmc
pop
sub
shl
lds
jmp
lea
cmp
cmpl
mov
cmp
jle
sub
push
jmp
mov
das
push
inc
rolb
jae
bound
into
jno
push
jo
xchg
push
mov
imul
test
cmp
dec
mov
pop
bound
inc
mov
lods
add
lock
push
imul
je
cmp
cmpsl
push
and
popa
sbb
cmpsb
jmp
push
cwtl
sti
or
push
mov
mov
and
ljmp
pop
push
lcall
lock
xor
lret
test
ja
fs
pop
sub
leave
aas
js
inc
int3
adc
mov
xchg
push
push
mov
dec
mov
push
enter
popf
inc
add
enter
test
cld
sub
pop
hlt
push
das
mov
lds
sub
push
pop
jge
jge
loop
outsb
push
bound
jb
test
jo
fadds
lods
add
push
cld
or
popa
cmp
andb
jbe
mov
cltd
cmc
pop
mov
rolb
int3
test
pop
into
fcmovnu
aad
fidivl
mov
jo
rclb
lcall
imulb
addb
inc
jge
and
ret
lcall
sbb
xor
xchg
xor
fistl
and
imul
dec
roll
movsb
popa
push
hlt
add
inc
scas
dec
pop
lret
scas
fadd
aaa
and
out
jne
xor
sbb
pop
jmp
outsl
pop
in
fistpl
jle
ss
adc
loopne
push
imul
enter
stos
sub
loope
testl
fwait
pushf
pop
and
mov
in
fisubs
mov
repnz
pop
mov
mov
pop
xor
aas
xor
popf
dec
dec
lcall
ficoml
add
mov
test
fistpll
stos
cmp
aam
test
rcrb
ja
loop
sbb
mov
jnp
rcrl
sub
mov
lods
loopne
test
rcrb
rol
jne
sub
cwtl
xor
jne
mov
lcall
jmp
aas
test
fs
lret
or
mov
mov
xor
notl
sbb
fwait
mov
pop
cmpsb
pushf
jae
mov
or
and
or
je
notl
xchg
pop
fidivrl
jge
lds
add
push
iret
add
jbe
cmp
out
out
dec
testb
xchg
out
sbb
xor
stc
inc
mov
les
aad
xor
sbb
outsb
lods
jo
rol
xor
test
mov
push
imul
xor
add
dec
cltd
sub
rcrb
les
mov
mov
imul
movsl
and
mov
mov
aad
mov
mov
mov
movsl
pop
mov
js
add
push
out
xor
sbb
dec
les
enter
mov
rcrb
outsl
or
adc
xchg
fbstp
inc
ljmp
arpl
stc
xchg
push
inc
mov
jbe
sbb
xor
xor
pop
rorb
and
and
in
inc
mov
fs
enter
scas
test
test
push
test
out
leave
push
mov
das
add
xchg
mov
dec
je
out
jbe
sbb
push
lock
adc
jecxz
sub
dec
push
fiaddl
cmc
mov
mov
pop
out
test
inc
sbb
push
mov
add
xchg
pusha
imul
mov
mov
test
and
sub
jp
popf
filds
ret
adc
sti
pop
rolb
stos
pop
push
test
roll
addl
inc
jle
fimuls
ljmp
shr
mov
icebp
insb
sbb
or
inc
imul
jnp
dec
and
aas
push
push
push
sbb
es
jmp
jmp
jae,pn
and
push
dec
push
pop
lods
outsb
push
jg
push
lret
out
lret
fsubs
pop
inc
lock
lods
popf
aam
or
andl
fnstenv
test
mov
jecxz
sbb
sbb
inc
push
ret
cwtl
rcl
and
fisttps
cmpsb
push
mov
dec
addr16
daa
mov
sarl
or
sti
push
scas
mov
adc
mov
adc
xor
ds
popa
shll
adc
mov
jecxz
push
xchg
stc
mov
enter
dec
movsl
mov
addb
mov
pop
rcrb
mov
aam
cmp
loopne
test
push
mov
jno
inc
in
xchg
adc
jo
mov
les
test
sub
mov
shl
jmp
fidivrs
addr16
sub
mov
sbb
jmp
test
push
int
and
adc
mov
or
sub
ja
int3
jb
bound
add
add
scas
repz
push
sarb
mov
sbb
adc
and
mov
mov
adc
rorl
mov
clc
xor
and
cli
mov
pop
inc
imul
dec
mov
cli
sub
hlt
sbb
jg
shll
push
xor
ret
inc
push
fisubs
mov
and
cmpsb
sbb
loop
add
or
xor
hlt
xor
out
repnz
push
int3
test
popa
sbb
mov
adc
lcall
jbe
adc
je
sarb
in
mov
jbe
push
mov
test
in
insl
popa
xchg
repz
add
lret
sbb
cmp
jp
xor
push
call
les
mov
cltd
push
inc
push
cli
push
pushf
push
and
jno
and
push
mov
andl
fisttps
es
rcl
mov
sahf
sub
mov
fcmovnu
clc
aas
outsl
mov
mov
xor
je
gs
lea
addr16
mov
addb
push
cpuid
push
and
cmp
fmuls
ja
fdivs
mov
jecxz
int3
fcomip
mov
pop
sbb
pop
ljmp
fisubs
nop
test
mov
popf
push
and
lret
dec
push
in
mov
sbb
push
push
cmp
notb
pushf
cmp
pop
cmc
xor
les
lret
fdivl
popa
popf
addb
aam
mov
sub
inc
lcall
stc
clc
mov
nop
shlb
and
ljmp
dec
or
mov
outsb
push
test
inc
xchg
or
inc
out
je
push
outsb
leave
cwtl
cmp
sub
dec
xlat
mov
cmpsl
sbb
mov
xchg
dec
and
rcll
mov
mov
sarl
inc
mov
add
es
mov
les
in
js
adc
mov
mov
jnp
icebp
jne
ret
cli
orb
mov
add
add
and
daa
cmpsl
loope
rorl
andl
mov
imul
adc
int
call
push
sub
imul
pop
data16
sub
jle
shlb
xor
dec
rol
cmpsb
xor
loop
out
cmp
daa
movsb
lods
int3
xchg
dec
or
shll
push
testl
mov
stos
fldl
mov
sub
dec
test
xchg
lods
movsb
scas
enter
add
out
sub
scas
jae
mov
push
inc
xlat
push
std
aam
clc
sbb
xchg
fs
jmp
stos
xchg
or
fdivrs
sub
icebp
mov
sbb
push
lea
mov
push
pop
loop
pop
cwtl
popa
daa
mov
popf
rol
dec
lea
xchg
xchg
cmc
push
push
pop
add
int
sub
outsb
adc
cwtl
xchg
push
les
cmp
push
mov
lock
mov
adc
lret
lods
jnp
cmp
xlat
inc
call
rcll
mov
or
out
sub
cmp
or
out
sbb
ret
mov
sub
sahf
mov
std
or
pop
shll
mov
scas
or
xchg
sbb
sbb
sbb
stos
pop
mov
sub
mov
outsl
lcall
sub
push
jno
gs
or
dec
or
cmp
xchg
push
jne
lret
mov
push
sti
xchg
dec
insl
push
mov
aas
push
rcrb
aad
outsl
mov
sub
adcb
inc
lods
iret
adc
das
js
dec
pop
mov
adc
jecxz
mov
jae
cli
add
out
jle
sbb
ja
adc
test
mov
outsb
hlt
xor
sub
dec
dec
out
shll
xchg
xchg
jae
ljmp
lea
and
mov
jno
xchg
arpl
test
les
sbb
lods
iret
fbld
hlt
mov
mov
inc
pop
xchg
cmc
shl
sub
insl
shld
mov
cmp
fwait
push
mov
inc
lret
mov
fstpl
jnp
bound
mov
fcmovne
push
hlt
les
repz
daa
fldcw
aad
dec
loope
lods
ret
mov
sbb
fmull
xor
mov
adc
sbb
je
into
sbb
mov
lods
xlat
inc
mov
or
lret
and
outsl
xor
jb
out
sbb
repnz
out
or
fisubrs
xor
pop
movsb
cmc
add
xchg
push
test
pop
fcmovnb
and
jnp
out
adc
lcall
nop
stos
mov
cmp
int
loope
lock
push
scas
xchg
xor
mov
and
in
insl
sbb
mov
xor
add
vcvtpd2dq
std
decb
xchg
vcvtsd2ss
mov
loope
jno
mov
and
testb
adc
outsb
and
mov
pop
dec
int3
test
cmp
push
sbb
xchg
jmp
imul
stc
in
insb
cli
lcall
pop
mov
dec
sub
out
ret
add
jno
jb
ljmp
sbb
cs
xor
mov
cld
push
aad
xlat
fldl
inc
gs
pextrw
or
xchg
cmp
in
mov
push
pushf
adc
or
icebp
push
pop
iret
in
insb
addb
fwait
cmp
adc
test
out
jmp
sub
shl
mov
cmp
mov
dec
loopne
jp
fdivrl
sahf
jmp
mov
mov
jmp
jnp
insl
sbb
cmp
sbb
sarl
jno
push
or
cld
dec
mov
into
fsubrs
test
mov
mov
sbb
cmpsl
pushw
fdivrl
loop
call
mov
and
icebp
icebp
fstps
rcrb
jmp
push
dec
xchg
cs
adc
inc
pop
pop
and
bound
paddw
push
pusha
cli
or
jbe
and
pop
mov
mov
test
dec
push
jb
dec
sub
clc
push
mov
call
lahf
enter
rcrb
and
fld1
mov
aaa
push
les
enter
cltd
cli
xchg
js
inc
cmpb
aad
adc
sbb
adc
jge
lods
push
es
pushl
mov
popf
add
jnp
jl
scas
pop
dec
xor
lock
sub
leave
push
shll
or
repz
mov
xchg
data16
and
adc
pop
jp
cmp
jae
cmc
push
xchg
aam
lods
pop
aas
ret
fcmovbe
push
mov
sahf
push
sub
push
inc
je
pop
pop
inc
pop
push
iret
mov
mov
cli
scas
test
inc
stc
ss
push
fwait
adc
fidivrs
sub
outsl
test
adc
out
jns
add
clc
pop
daa
mov
repnz
mov
std
icebp
pop
sub
push
mov
jle
mov
clc
icebp
lret
pop
xlat
sub
fwait
inc
pop
adc
gs
jge
shll
jle
adc
jno
lret
daa
in
js
outsl
loop
push
jmp
call
leave
dec
xchg
pop
sbb
mov
or
mov
inc
sbb
push
pushf
xchg
jecxz
xchg
fdiv
sbb
adc
mov
imul
das
and
sub
add
sbb
data16
add
mov
pushf
pop
mov
fdiv
mov
push
dec
movsb
lret
dec
loop
pop
mov
cmpsb
mov
xchg
mov
ret
push
push
mov
mov
cmpsb
add
dec
jp
scas
mov
cmc
adc
adc
incb
dec
and
scas
xchg
cmp
outsb
jne
sub
outsb
add
add
fwait
mov
push
pushf
fiaddl
cmp
stos
xchg
jnp
ss
inc
popl
jno
cld
mov
mov
add
call
fdivrs
ret
pusha
aas
pop
sti
xor
mov
jne
insb
inc
popa
fisubl
aam
push
cltd
outsb
mov
dec
mov
xchg
xchg
popf
sbb
out
adc
icebp
adc
fs
or
xor
call
fcoml
aas
shl
push
lods
inc
out
andb
inc
mov
pop
cmp
aas
sahf
push
dec
test
sahf
cli
pusha
jmp
inc
or
push
jp
icebp
movsl
lds
add
mov
xchg
imul
int
mov
inc
sub
sbb
in
xchg
or
push
repz
mov
repnz
sbb
rcrl
into
or
idivl
inc
adc
ret
out
cld
insl
fsubrl
decb
insb
insb
les
testb
or
repnz
fnstcw
lds
cmp
jl
mov
mov
push
xor
add
push
das
push
fisttps
xchg
lret
subb
insl
or
loop
dec
rcrb
pop
ficoms
call
mov
add
jecxz
pop
adc
lock
cwtl
sub
and
mull
jecxz
js
movsl
mov
popa
and
andb
push
lods
mov
mov
fistl
aad
fldl
mov
jg
jnp
dec
outsl
push
fwait
mov
in
pop
fimull
icebp
pop
mov
xor
sbb
imul
pop
sub
fwait
jnp
add
xchg
stos
cmp
fstpt
push
lret
jle
xorl
adc
rorl
jg
inc
sbb
inc
jg
jbe
mov
cmp
arpl
dec
ljmp
jle
in
data16
mov
test
inc
pushf
mov
aam
fs
imul
addr16
inc
ret
push
jae
and
jp
xchg
in
cmc
mov
repnz
fwait
inc
cmp
sub
mov
pop
in
inc
loop
sub
test
push
out
pop
mov
push
ss
mov
dec
pop
dec
or
xor
xor
pop
push
lahf
test
pop
iret
in
sub
clc
dec
in
psubusw
xlat
pop
adc
push
jmp
stc
fnstenv
fldl
mov
lret
pop
stos
sbb
jb
emms
fildl
ret
jno
cmp
in
dec
add
or
fadds
push
mov
inc
js
in
imul
shlb
mov
mov
push
push
push
mov
gs
mov
adc
fs
data16
scas
cld
bound
clc
fs
pop
das
popf
or
out
or
mov
cmc
jge
jecxz
shll
push
xor
or
inc
mov
out
pushf
inc
dec
stc
mov
sbb
and
xchg
cmp
mov
mov
pop
push
jl
shrb
dec
xor
add
add
aam
mov
xchg
in
rol
mov
testb
cmpsl
jge
test
in
pavgb
out
lret
dec
mov
jb
jae
jne
es
bound
xor
les
dec
pop
mov
pop
add
aaa
inc
jae
pop
push
inc
push
mov
xor
sarb
pushw
ja
push
ss
into
xchg
jns
xor
jmp
inc
inc
pop
mov
loope
adc
aaa
es
addr16
xchg
call
and
test
jmp
jns
or
or
jnp
faddl
sub
pop
push
movsb
lcall
syscall
and
outsb
mov
cli
mov
out
xor
insb
cltd
or
stc
lcall
sub
aaa
aam
pop
mov
test
cmp
cmp
inc
stos
aaa
mov
dec
sub
inc
mov
fiadds
mov
and
inc
lcall
mov
pop
fsubrl
aad
aad
lcall
mov
icebp
jbe
lock
pop
movsl
jno
out
cmp
mov
inc
ja
jmp
mov
jne
mov
mov
imul
out
add
xchg
sub
ds
mov
cmpsb
sub
into
mov
cmpsl
jb
dec
call
sub
dec
mov
out
lea
pushf
jo
pop
mov
ret
jge
xchg
ret
movsb
imul
mov
cmp
xchg
pop
push
fimull
xlat
fdivrp
imul
adc
std
test
rorb
xor
fdiv
dec
cs
loope
inc
dec
xchg
cmp
aad
out
or
pop
xchg
enter
mov
pop
pop
mov
aad
jbe
push
cld
out
es
and
pop
rcrb
jp
popf
test
repnz
repnz
xor
adc
xchg
in
cld
push
push
out
adc
mov
mov
clc
cmp
mov
sahf
push
addr16
movsb
lret
push
arpl
or
call
push
fdivrp
jmp
test
push
fldcw
outsl
dec
mov
nop
sbb
mov
sub
mov
js
xchg
sti
insb
js
lock
aaa
fimuls
dec
sahf
inc
adc
fwait
lea
fdivl
mov
iret
push
push
mov
mov
and
insl
loope
sbb
sbb
mov
mov
out
rorl
dec
outsl
loope
cwtl
fistpl
and
push
push
inc
ss
mov
push
pop
cmp
pop
sub
sbb
out
cwtl
dec
cltd
dec
lcall
ja
rorl
push
into
mov
jns
pusha
mov
xchg
jns
xchg
popa
call
in
in
into
mov
ljmp
mov
mov
shl
push
rclb
dec
pop
inc
jmp
xchg
mov
loope
jbe
lret
pop
mov
or
inc
mov
in
jno
daa
shrl
je
sarl
mov
movsb
aad
stos
jp
aad
sbb
xor
lcall
or
out
les
pop
or
test
sbb
xchg
mov
pop
shl
cmpsb
adc
iret
cmpsl
imull
iret
mov
fidivrl
repz
or
insb
popa
push
cltd
inc
jno
sbb
stos
imul
xchg
aaa
es
lds
add
mov
adc
mov
or
lock
and
js
dec
lret
cwtl
adc
mov
adc
or
xchg
jp
into
sub
jg
cltd
mov
adc
xor
jno
cmc
outsb
jmp
pop
jmp
add
jp
sub
cmc
mov
jle
repz
enter
adc
mov
mov
scas
mov
ljmp
cmp
inc
xchg
fs
test
or
aam
imulb
cmp
xchg
out
loopne
or
cltd
cmp
mov
push
mov
jge
xchg
iret
fabs
cmp
pop
dec
stos
jle
mov
mov
loope
and
std
mov
xchg
xchg
sub
jmp
nop
jmp
adc
stos
sub
add
push
arpl
sbb
push
test
aad
mov
push
in
popf
popf
or
xor
add
call
cmp
int
jns
pop
mov
loopne
sbb
movsl
or
cmp
call
mov
push
cli
inc
mov
pop
add
out
mov
loopne
iret
add
jmp
mov
cmp
outsb
dec
stc
fadd
sub
int3
inc
xchg
mov
inc
xorb
cmpsl
mov
push
or
xor
or
testb
xor
das
push
sub
outsl
js
fdivrl
pop
xor
jp
and
jecxz
test
xchg
mov
insl
insl
xor
aam
jnp
mov
leave
aaa
dec
fmul
mov
jb
mov
test
mov
and
insb
subb
mov
push
in
je
inc
or
add
in
cmpsb
xchg
mov
cld
lods
or
rcr
adc
stos
mov
ffree
jbe
ucomiss
insb
mov
jmp
pop
mov
xchg
add
test
sbb
test
mov
cmp
leave
ljmp
xorl
sahf
fists
int3
add
pmaxub
call
xchg
jecxz
push
fdivp
clc
sbb
leave
dec
idivb
mov
adc
jns
mov
mov
sub
lock
popl
dec
sbb
jb
cwtl
in
mov
aaa
data16
hlt
add
testl
cmp
subb
push
or
jecxz
pusha
push
sbb
pop
sbb
mov
in
loope
ss
sbb
pop
bound
loope
sbb
jne
je
xor
push
mov
repz
fs
xchg
inc
add
lret
cli
cmp
int
push
xor
sub
jo
dec
rclb
clc
int
sbb
xchg
inc
nop
dec
rol
jbe
int
xchg
ljmp
ret
jge
mov
pop
cld
mov
or
repz
aas
insl
pop
movsl
sub
in
and
fdivrs
faddl
add
pop
xchg
scas
adc
repnz
cmpsl
inc
adc
jge
es
popf
mov
inc
sbb
mov
movsl
arpl
xchg
and
ret
pop
sub
sub
mov
cwtl
mov
inc
fmul
in
cmp
int
fists
jo
xchg
repz
fsubrl
lcall
and
dec
clc
inc
adc
xor
enter
cli
xchg
sbb
push
mov
call
fisubl
pop
iret
cs
outsl
ficompl
out
inc
xchg
aaa
or
and
shrl
dec
out
repz
adc
xor
add
inc
push
lcall
int
dec
xchg
adc
cmp
mov
std
push
stc
imul
or
divl
mov
loop
sbb
gs
pop
mov
pop
dec
push
or
mov
xor
daa
testb
mov
jns
mov
stos
xchg
enter
loop
std
movsl
mov
loope
push
jl
adc
cld
sub
inc
sbb
movsb
pop
xchg
pop
aam
bound
lahf
sbb
dec
in
cmp
jge
pushf
imul
cmp
loope
push
mov
jnp
js
add
shrb
pop
fs
jo
lods
mov
dec
mov
repnz
xor
fcomps
daa
nop
scas
push
or
test
popf
repz
xor
jp
stos
clc
add
test
mov
dec
pop
inc
shlb
xchg
pop
leave
cmpsl
sbb
adc
sbb
addr16
push
in
add
pushf
cmp
sub
cli
lcall
mov
or
push
xor
mov
jmp
imul
cmc
jp
jl
into
mov
ljmp
lahf
invd
loopnew
add
pop
sbb
out
int
or
push
mov
mov
fstpt
mov
xchg
cmc
fdivs
mov
cld
add
inc
mov
sahf
imul
sbb
mov
pop
xchg
xchg
xor
push
lds
lcall
insb
sub
fisubl
pop
mov
aam
sbb
out
dec
dec
in
or
jnp
push
mov
ror
pop
loopne
movaps
jg
mov
outsl
add
fbld
outsl
int3
dec
xchg
xchg
jp
pop
ljmp
adc
cmp
jge
add
cmpsl
cli
scas
xchg
pop
pop
data16
sti
sbb
das
pop
in
bound
ss
inc
mov
add
test
inc
xor
daa
inc
mov
out
scas
xchg
imul
jnp
pusha
js
pop
pop
pop
cmp
cmp
sbb
fcoms
push
dec
xor
repz
xchg
or
xsha1
cmpsb
or
ja
mov
adc
xor
sbb
outsb
sbb
popl
aad
jge
and
mov
dec
jge
mov
xchg
in
xor
inc
lahf
and
out
lods
push
in
insl
cwtl
sbb
adc
mov
mov
movzbl
mov
inc
stc
out
aas
int3
rcll
idivl
lret
es
aaa
movsb
inc
mov
add
adc
sbb
sti
cmp
loope
sbbb
pop
xlat
mov
mov
aad
cmpl
movsl
xchg
jno
in
mov
jnp
mov
gs
sub
pop
adc
adc
fisttps
xor
mov
and
cmpsl
lds
xor
stc
push
ret
xchg
push
fsts
mov
fsubr
sbb
push
rcll
aaa
cli
push
pop
xchg
addr16
push
add
loopne
and
lods
scas
mov
pop
out
pop
mov
es
jecxz
sub
mov
sti
loopne
cmp
xchg
in
pop
pop
jbe
dec
ds
add
dec
leave
insl
das
test
shr
xor
dec
mov
xor
repz
push
push
mov
js
cmp
out
out
mov
gs
cmpsl
ja
rcr
jne
cmp
pop
inc
lods
jge
or
imul
out
sbb
adc
mov
shrb
and
push
jbe
in
in
jno
add
jbe
stc
add
dec
and
mov
sub
xchg
insb
in
mov
mov
imul
xlat
ret
xor
sbbl
sbb
in
add
lahf
pop
or
lock
in
mov
out
das
add
stos
scas
repnz
mov
mov
add
xchg
pusha
xchg
mov
pop
pop
ds
cwtl
inc
popf
or
pusha
mov
enter
int3
sbb
cmp
mov
stos
pop
mov
jns
lea
fiaddl
out
rolb
cmp
imul
xchg
int
js
rcll
movsb
leave
jge
mov
cmpsb
or
cmc
aam
shrb
out
rol
cld
dec
mov
and
scas
subl
adc
jns
jg
das
daa
add
insb
adc
insb
je
sti
enter
ds
daa
and
adc
cmp
imulb
outsb
faddl
daa
pop
arpl
push
addl
mov
xchg
lea
in
pop
mov
rcll
xor
hlt
sub
out
cmp
mov
dec
mov
fmull
inc
leave
iret
adc
pop
mov
shll
or
push
xchg
scas
push
mov
ficoml
dec
loop
push
sub
in
cld
adc
cmc
xchg
repz
sarl
mov
jae
lods
cli
stos
or
insl
test
aas
inc
mov
shrl
push
sbb
and
or
inc
out
mov
push
push
clc
xor
orl
sbb
call
loopne
call
movsb
pop
aam
repnz
aad
ja
xchg
xor
xor
mov
mov
lcall
in
dec
pushf
in
outsb
je
iret
adc
add
pop
pop
push
pop
jl
fimuls
push
insl
rcll
lods
in
movsb
fstpl
cmc
xlat
or
popfw
cmp
xchg
xchg
inc
repz
aas
pop
enter
push
push
jo
add
fidivl
jo
loope
leave
xchg
ljmp
mov
loope
jl
bound
lcall
fmull
mov
cwtl
sti
cmp
leave
fsubl
push
mov
les
loop
jbe
enter
sub
jmp
push
push
mov
orb
dec
stos
mov
mov
leave
xchg
pop
add
outsl
mov
push
stos
scas
pusha
bound
les
divb
fldl
lahf
add
fdivrp
pop
popf
lods
les
lahf
stos
mov
xchg
sbb
push
cli
sub
hlt
jle
cli
jp
test
inc
lcall
sub
xchg
xorl
lods
add
stos
xor
fistpll
inc
sbb
out
sub
out
clc
shrl
cmp
sbb
xor
or
les
popf
jmp
call
daa
out
ficompl
lods
jo
movb
fildll
or
les
vmcall
call
lea
enter
int3
bound
inc
add
and
jge
and
push
ret
sti
outsl
dec
cs
mov
cld
pop
jmp
stos
inc
arpl
jg
inc
mov
jns
mov
jecxz
cltd
sarb
mov
inc
lds
pop
adc
stos
push
in
add
les
fldl
scas
in
adc
pop
sti
aas
push
aam
iret
sti
lea
or
sti
pop
movlps
jo
add
sbbb
xchg
loope
cmp
mov
lret
add
js
xchg
sub
jecxz
test
insl
scas
std
imul
dec
cmp
sbb
ja
loope
mov
pause
loop
scas
aas
fsts
loop
or
push
jge
jb
or
mov
pop
jmp
in
or
pushf
das
adc
dec
scas
pop
icebp
mov
ss
idiv
mov
sbb
push
out
imul
and
push
test
mov
divb
loop
ss
cs
xchg
sbbl
in
fcom
inc
jp
adc
fsubs
pop
imul
ljmp
push
add
mov
movsb
ss
outsb
mov
mov
pop
pop
aad
xchg
dec
dec
mov
mov
gs
gs
cli
mov
jo
shll
push
sub
pop
test
and
push
xorl
pop
cmp
jns
pop
fcmove
xor
test
testl
pop
iret
fs
add
sbbl
and
pop
sbb
in
xchg
dec
push
gs
or
sbb
lods
xor
jge
mov
xchg
mov
inc
addl
rcr
test
out
and
dec
pop
out
add
mov
pop
test
stos
inc
stos
mov
repnz
mov
movsl
inc
aas
sub
aaa
loop
jmp
ds
call
add
scas
std
sub
imul
sbbb
and
sarl
sbb
gs
cmp
fmull
pop
xchg
sbb
add
fimuls
sbb
mov
pop
add
push
lahf
sbb
pushf
jmp
dec
cmc
shr
and
fidivrs
test
lods
sub
mov
out
push
pop
shr
adc
arpl
lret
mov
test
leave
repz
xchg
sub
sbb
push
sbb
lods
mov
test
out
mov
xchg
cmp
rorb
lret
push
lahf
sub
repz
cmpsl
jg
mov
cli
insb
fcomp
add
mov
push
shrl
int
aad
cmp
test
xchg
std
scas
adc
out
mov
in
sub
int3
stc
inc
jbe
push
scas
loopne
orb
push
aaa
sub
xchg
mov
sbb
push
dec
cmc
loopne
mov
enter
scas
dec
outsb
insb
fwait
cmp
lret
inc
sti
inc
sbb
and
inc
daa
mov
mov
mov
imulb
out
mov
mov
mov
jno
mov
imul
fwait
xor
test
dec
bound
das
mov
in
fucomi
vandnps
into
pop
test
mov
add
into
gs
in
popa
pop
aas
dec
and
xor
dec
int
mov
mov
mov
es
push
and
test
out
mov
mov
dec
mov
into
jae
adc
or
sar
lcall
arpl
pop
jmp
mov
jbe
shll
and
sub
and
imul
in
iret
pop
pop
pop
dec
xor
repnz
xor
pop
and
cld
lret
push
xchg
add
push
or
roll
mov
jle
jo
ret
sahf
daa
jnp
jae
psrlw
add
adc
push
xchg
pop
mov
jl
sbb
adc
sub
inc
cmpsb
leave
adc
cs
aam
push
cmp
cmp
mov
mov
jge
xchg
imul
enter
mov
in
xor
in
and
xchg
sbb
pop
push
dec
adc
xor
hlt
and
test
xchg
int
insl
movsl
lods
lret
cmpsl
mov
or
dec
shlb
dec
cmp
mov
aas
sbb
cmp
lret
pop
pop
mov
sti
test
mov
imul
jle
xor
insl
mov
popl
sbb
push
sbb
ret
xorl
call
cmc
sahf
xor
dec
dec
push
mov
mov
push
testl
das
mov
cmp
in
push
dec
xor
flds
ret
cmp
ret
pop
aaa
sub
pop
hlt
inc
int
fwait
lods
repz
sub
jl
popf
mov
pop
or
inc
gs
aad
pusha
xor
fidivrs
rcrb
add
hlt
cmpsb
mov
mov
rcrl
or
test
insl
stos
and
fsubs
xor
rcrb
mov
sbb
push
cmovle
sbb
or
sub
sub
insb
fistpl
out
andnps
pusha
loop
in
sbb
sub
push
push
lahf
cmp
lods
jmp
xchg
loop
lcall
mov
xor
cmpl
cmp
fcomps
mov
adc
arpl
and
dec
push
decb
cmpsb
cmpsb
sbb
scas
insb
xchg
or
call
adc
fistps
lods
mov
icebp
or
and
jecxz
repz
lret
xchg
movsl
push
add
and
pop
lods
enter
fidivs
daa
xlat
cmp
icebp
outsb
xchg
xlat
cmp
iret
loope
xchg
jmp
out
pop
xchg
inc
jp
xorb
push
dec
shll
dec
stc
mov
pop
and
dec
lret
stos
cmp
test
fbstp
mov
outsb
out
inc
imul
scas
mov
sbb
fsubs
jecxz
mov
stc
idivb
mov
hlt
fcoml
inc
xchg
inc
cmc
stos
leave
add
xor
or
cwtl
out
sub
lret
cs
cmp
pop
ds
orb
add
adc
push
cmp
xchg
inc
jle
shlb
repz
std
and
or
in
cmpsb
stos
movsb
sbb
xor
fs
jge
mov
jb
sub
mov
andb
mov
push
hlt
add
xchg
mov
imul
insb
xchg
push
sub
repnz
je
aas
arpl
mov
and
push
sahf
pop
xor
pop
push
and
jns
test
mov
mov
fldcw
je
mov
loope
xchg
push
sbb
aaa
lods
rcrb
jg
jo
lret
inc
or
or
rcrl
je
add
sub
enter
andl
xchg
arpl
jp
popa
add
mov
pop
adc
mov
mov
push
mov
cli
lret
add
shlb
pop
jg
push
movl
lahf
inc
pop
and
mov
jnp
xchg
les
mov
mov
cmpsb
les
pop
xchg
adc
aam
jbe
inc
jo
aam
loopne
rorb
add
sti
xchg
push
mov
push
mov
roll
cld
dec
leave
or
xchg
dec
xchg
cld
mov
movsl
xchg
push
cltd
adc
pop
loop
dec
inc
mov
xor
jecxz
mov
outsl
cmpsl
mov
xchg
mov
movsb
pop
xchg
mov
movsb
ss
cmp
lcall
shlb
ja
cmp
or
mov
les
cmc
xor
cli
repz
adc
in
negb
popa
orb
and
cld
mov
or
add
sbb
movsb
jbe
cmp
std
jns
mov
enter
dec
mov
popa
insl
aas
lea
je
add
sub
enter
cmp
popaw
push
fsubl
inc
mov
xlat
repnz
das
movsl
std
pop
push
int3
jecxz
inc
xlat
sbb
and
dec
arpl
leave
xchg
jge
jne
leave
jae
push
or
cmp
hlt
xor
adc
push
hlt
iret
leave
sahf
jmp
mov
fcoms
faddp
fwait
loop
aam
jo
add
dec
bnd
add
sub
push
or
mov
in
sub
push
sub
xchg
loope
inc
loopne
pop
xchg
scas
sbb
rcrb
push
aaa
fidivl
jge
idivl
push
inc
xchg
dec
xor
int
movsb
imulb
test
mov
das
outsb
xchg
push
pusha
in
ds
cli
loop
test
xchg
jb
inc
cli
jnp
xchg
sbbb
push
rorl
daa
aam
and
dec
icebp
and
pusha
inc
fildl
rclb
mov
mov
pop
lods
aad
mov
out
pop
and
sbb
loope
pop
cmp
push
push
or
mov
insl
cld
sub
cmpsb
int
into
ljmp
inc
mov
cld
xchg
pop
cmc
push
ds
pop
lds
jle
rorb
sub
cmpsb
sahf
lods
pushf
sbb
or
xchg
popa
int3
mov
lea
and
mov
frstor
and
and
repz
push
jge
stos
cwtl
or
add
out
cli
pop
or
shll
loop
mov
lret
dec
xchg
std
js
movsl
mov
orl
pop
leave
mov
xchg
adc
decb
out
dec
mov
in
mov
inc
sub
clc
push
xchg
inc
mulb
test
cmovb
xchg
jl
mov
xchg
add
or
adc
xor
cmp
pop
loop
sbb
cltd
lea
inc
sbb
cs
sub
adc
cmpsl
push
jle
adc
push
pushf
mov
xor
adc
sub
inc
orb
dec
pop
fs
sbb
shl
fstpl
sbb
pop
cmp
out
insl
cltd
mov
jae
add
xchg
or
enter
ljmp
adc
iret
and
xlat
aaa
xorb
fwait
mov
mov
jb
rcll
je
lods
lahf
adc
cmp
lret
sti
cltd
push
push
xchg
mov
test
push
icebp
int3
cmpsl
jb
sub
rcrl
xchg
lock
dec
jnp
sub
mov
in
ljmp
cld
lret
aad
xchg
push
adc
lcall
hlt
and
jle
outsb
push
sub
cltd
hlt
lds
scas
loope
daa
data16
dec
out
loop
xor
mov
out
aaa
pop
pop
jo
add
dec
loop
aaa
jae
sub
aas
arpl
insb
mov
aad
ja
cmp
movsb
ss
and
xchg
xchg
stos
jne
lods
jae
repz
movsb
inc
shrl
sub
inc
inc
iret
xchg
push
inc
fs
test
stos
push
pusha
xchg
xchg
fstl
daa
in
pusha
jbe
sub
push
fldl
je
xchg
and
mov
pop
xchg
pop
push
mov
inc
sbb
mov
das
jb
or
mov
pop
cmp
jecxz
nop
xor
ja
loope
jno
es
insl
push
push
push
and
lods
stos
inc
sbb
in
clc
cmpsl
mov
add
add
fimull
mov
leave
jmp
rclb
mov
jns
sub
ja
test
loopne
std
and
sbb
insl
aas
fcmovnbe
das
sub
cltd
pop
outsl
gs
mov
fcoms
test
leave
and
push
outsb
jp
stos
mov
adc
scas
adc
push
movsb
cmpsb
test
sahf
dec
add
aaa
andb
jg
xchg
pop
call
sub
mov
or
dec
or
jns
push
stos
scas
cmp
gs
jge
cmpsb
mov
icebp
cmc
jno
popa
sbb
mov
push
pop
jg
inc
outsl
sti
paddusw
das
ds
inc
xchg
or
outsl
add
pop
shll
pop
fisubrs
dec
sbb
cmp
sub
mov
out
push
mov
ljmp
sub
lret
rcrb
jnp
push
or
outsl
pop
lock
jge
out
dec
add
push
push
push
push
fwait
push
stos
sti
pop
out
orl
rcrb
iret
dec
adc
es
sti
lahf
xchg
inc
filds
cmc
pop
and
repnz
jnp
out
icebp
fisubrs
or
js
jns
scas
hlt
xor
loop
daa
sub
test
icebp
mov
sti
fistps
shl
repz
sbb
sub
xor
idivb
ret
in
inc
movsb
ficoml
sbb
cmp
daa
xchg
lock
sbb
push
les
xchg
dec
mov
arpl
leave
or
stos
in
fwait
js
ret
mov
xchg
stc
jns
xchg
push
daa
mov
stc
ret
mov
shr
dec
adc
scas
fidivrl
jp
pop
je
xchg
iret
pop
dec
stos
jnp
fs
stc
add
cmc
xchg
sub
mov
xor
es
sahf
add
push
add
dec
jp
cwtl
cmp
push
loope
movsl
mov
jbe
ja
aam
ds
sbb
dec
fdivrs
cmp
stos
jae
pop
adc
and
mov
and
ds
add
ret
mov
aaa
or
pop
push
pop
sti
pop
xlat
and
into
cs
add
sbb
pop
jl
lcall
outsl
adc
adc
jb
and
cwtl
pop
pop
fimull
or
in
push
adc
sarb
lds
iret
sub
lret
sbbl
dec
xchg
inc
dec
mov
aaa
test
in
jb
or
cmpsl
push
mov
sub
mov
xlat
sbb
xchg
rcr
scas
mov
mov
xor
lds
mov
adc
test
jle
jl
and
lea
push
lds
sub
ss
rolb
add
jmp
xchg
in
inc
sub
std
ret
movsb
jl
pushf
out
pop
sar
jge
lret
rclb
sahf
std
jle
xor
data16
dec
add
daa
mov
ds
xchg
mov
pop
push
lahf
dec
cs
ja
int
int
out
mov
insb
add
iret
xor
and
gs
fcmovnb
int
mov
dec
cltd
sub
rorl
nop
cwtl
cmpb
push
mov
insl
and
test
gs
mov
jmp
jp
lods
xchg
lahf
mov
cld
ret
sarl
mov
fwait
xchg
data16
outsb
ror
out
iret
pusha
ret
ret
stos
jecxz
add
mov
push
int3
test
in
out
decb
sahf
test
enter
hlt
adc
cmp
xor
xlat
imul
aad
jno
sti
xor
cmpsb
leave
stc
or
pop
outsl
sbb
clc
inc
mov
add
mov
repnz
pop
popa
lret
mov
cmp
mov
aas
xor
cmp
or
fsubrp
dec
imul
das
dec
push
pushf
push
xchg
mov
mov
dec
mov
adc
push
jne
shrl
mov
je
sti
jno
pop
stc
mov
cmp
and
mov
dec
mov
lahf
stos
into
aas
test
push
test
and
xor
enter
popa
jle
mov
cmovbe
add
jmp
inc
adc
cs
xor
stos
sub
pop
and
stc
inc
ret
das
stos
cvtps2pi
pavgw
pop
mov
rcrb
mov
cmp
jp
iret
mov
sbb
cmc
jnp
sbb
sbb
stos
dec
pop
fsubl
sti
inc
dec
jne
cmpsb
cmp
lret
sbb
jo
gs
jbe
push
ret
lret
jae
jb
xor
filds
add
loope
xchg
jge
loope
adc
pop
mov
jne
add
push
arpl
push
into
mov
outsb
mov
xchg
or
lods
jb
iret
cmp
pop
cmc
in
rclb
pop
repz
call
or
insb
add
enter
dec
sahf
xchg
ficoms
jb
ljmp
rol
ja
push
dec
mov
insb
add
cmp
fstl
nop
jmp
icebp
in
ds
out
or
sbb
xchg
pop
out
loop
xchg
add
ja
lahf
rol
int3
or
std
push
pop
leave
sti
dec
pop
out
mov
les
inc
addl
xchg
in
lea
adc
ds
inc
dec
sar
mov
aad
cld
cmc
xchg
punpckhbw
or
xor
adc
push
mov
cmp
sbb
pushf
pop
mov
cmc
lret
mov
and
stc
push
adc
test
or
cmp
jg
push
or
int3
mov
je
test
jecxz
xchg
or
xlat
push
loopne
clc
lret
mov
test
push
or
inc
aas
or
jb
call
xchg
inc
mov
loop
lcall
ret
pop
jbe
repnz
sbb
rorb
xchg
mov
adc
dec
jb
out
dec
pop
dec
adc
data16
push
jle
dec
inc
out
jbe
push
aas
mov
in
pop
cmpsl
jmp
sub
lcall
rol
sbb
xlat
pop
cmp
test
loop
out
into
mov
mov
test
pop
lcall
hlt
lods
jecxz
push
scas
push
lret
loopne
push
pop
add
js
scas
xchg
add
lret
sub
cmp
mov
mov
dec
loop
xchg
out
lahf
jmp
push
jnp
cld
icebp
paddd
shlb
pop
push
rclb
pop
mov
frstor
mov
xchg
fs
dec
xorb
xchg
out
mov
daa
lcall
add
loope
repz
push
mov
jl
aad
out
cld
hlt
jg,pn
lds
xchg
in
outsl
cmp
pop
shl
xor
icebp
insl
imul
mov
xlat
icebp
mov
mov
xchg
jle
adc
inc
loop
xor
dec
pushf
pop
clc
and
stos
pop
xlat
loope
mov
nop
cmp
rolb
or
push
out
adc
and
or
hlt
jns
out
dec
pop
mov
cli
add
outsb
movsl
xchg
xlat
popf
cwtl
dec
mov
xchg
xor
imull
scas
rcrb
push
fstps
ret
cmp
scas
adc
out
pop
rclb
cs
lret
ljmp
test
xchg
xor
push
add
mov
gs
lcall
fcoml
je
dec
dec
xchg
push
aad
int3
jb
jg
insl
mov
lret
imul
lret
jmp
pop
add
ss
cmp
sub
mov
fstl
pop
sbbb
pop
jp
jl
push
addr16
aas
lds
das
dec
jo
pop
sbb
test
xchg
jo
sbb
push
cmp
fsubl
sbb
adc
daa
xchg
adc
movsl
xor
cmp
outsb
xchg
sub
dec
sahf
hlt
mov
jecxz
mov
mov
int3
pop
popf
popf
sub
iret
jge
mov
pop
idivl
mulb
sbb
add
mov
mov
scas
pop
data16
movsb
mov
mov
popf
ds
shll
test
push
data16
test
and
jecxz
xchg
pop
popf
js
cli
call
jg
or
enter
jnp
cmpl
cmp
lret
xchg
inc
fildll
sbb
dec
sbb
mov
arpl
pop
mov
pop
fistpll
mov
into
mov
push
inc
xor
into
and
inc
jo
xor
jmp
push
mov
cli
lods
out
adc
inc
gs
js
xor
leave
notl
punpckhwd
lock
mov
dec
or
lret
lret
mov
jge
mov
inc
push
pop
pop
scas
xor
pop
test
stos
and
mov
xlat
add
pop
xchg
adc
lahf
or
mov
adc
sbb
sbb
cmp
daa
lea
mov
xchg
dec
aam
sub
int3
jae
nop
pop
fcmovb
cmp
inc
mov
pop
stos
int3
lods
sub
enter
daa
ret
cmp
xor
lcall
orl
sbb
lea
pop
arpl
int3
xor
jg
dec
repnz
fnstsw
gs
cwtl
mov
test
lea
out
xchg
lret
cmpsb
loopne
add
roll
xchg
sti
mov
push
xor
push
push
cmp
xor
or
bound
popa
cmpsb
popa
aam
mov
push
mov
ja
mov
push
lods
dec
sub
test
xor
test
test
insl
je
xchg
cmc
push
aad
inc
lea
mov
ljmp
mov
sti
test
lret
dec
int
pop
repnz
mov
sub
cmpsl
lret
js
jnp
mov
sbb
mov
xor
subl
scas
cs
bound
ja
enter
aad
adc
and
mov
insl
and
pop
mov
test
xor
loop
add
jmp
jl
mov
out
push
xchg
adc
icebp
xor
and
inc
les
jb
aaa
fstps
popa
loop
and
adc
adc
aas
sbb
sti
inc
adcl
cld
loopne
cmp
in
ss
jno
mov
or
jns
xor
ficomps
negl
test
mov
stc
cli
pusha
inc
jecxz
cmp
dec
push
rcll
or
pop
xchg
fcom
imul
xor
mov
and
fcom
xchg
push
mov
in
push
sahf
pop
dec
jb
pop
push
mov
jb
mov
test
dec
sub
sbbl
or
gs
lret
jge
enter
mov
xor
cmpsb
mov
insb
movsl
and
in
cmc
scas
sti
ja
jmp
insb
aam
rcll
cmc
cld
or
pop
mov
orb
jecxz
mov
nop
sbb
mov
addl
cmc
xchg
sub
pop
rclb
xlat
or
mov
push
push
jmp
ja
arpl
shl
ud0
mov
or
mov
enter
int
or
aaa
out
ret
cld
int3
mov
inc
or
lea
rorl
cltd
xor
cmp
call
repz
xchg
loop
rcrl
xchg
cmp
stos
add
orb
jl
cmpb
shrb
js
cmpsb
sbb
inc
fnstsw
into
popf
add
push
push
call
roll
push
cltd
test
jmp
or
aaa
push
mov
jge
pop
fstl
arpl
dec
fs
clc
cmc
or
daa
add
fiadds
adc
pop
jg
or
cmp
push
xchg
stos
mov
push
mov
xor
movsl
cmp
sarl
add
outsb
scas
or
cmc
add
push
mov
rcrl
sbb
add
pop
mov
rcrl
inc
jae
aam
pushf
jge
jmp
aaa
mov
mov
out
inc
dec
mov
ljmp
ja
outsl
add
xchg
push
js
add
in
in
or
inc
and
push
push
cwtl
push
test
push
add
mov
pop
jne
cmpsl
cmp
mov
sahf
mov
lods
mov
adc
xor
ss
pop
in
dec
jne
les
mov
in
jl
jmp
into
sub
cmp
iret
fwait
imull
cli
adc
pop
or
jle
mov
in
sub
mov
lods
xchg
insb
into
or
sub
stc
not
and
inc
cli
movsb
xor
aaa
sbb
into
mov
decb
xor
ret
ret
jg
jne
or
testb
xchg
loope
mov
xor
add
test
test
shlb
jns
gs
mov
add
add
and
inc
pop
les
pop
loope
icebp
xchg
mov
sub
mov
push
inc
cmp
cmpb
xor
mov
int
jge
dec
jmp
cmpsl
mov
mov
das
cmp
and
out
mov
adc
insl
jle
or
in
sti
leave
out
xchg
iret
sbb
inc
pop
arpl
leave
jb
lods
out
push
mov
or
addr16
cmp
fnstsw
xchg
or
or
sbb
mov
lods
ds
xchg
xchg
arpl
mov
jns
mov
cwtl
fsubrs
xchg
push
xchg
inc
movb
out
lret
loop
xchg
ja
or
js
push
sbb
push
dec
mov
pusha
pop
lds
mov
lds
insl
int
pop
lret
mov
sarb
filds
subb
imul
and
lcall
pop
ror
nop
and
bound
insl
jne
mov
pop
mov
inc
imul
mov
mov
aaa
fs
jne,pt
jg
jns
imul
test
mov
inc
daa
sbb
and
inc
add
sbb
arpl
dec
std
push
mov
pop
pop
jne
mov
adc
test
jbe
and
and
dec
push
insl
pop
lds
out
add
inc
jo
mov
jl
xor
rclb
and
fld
insl
lcall
aas
xchg
lret
xchg
dec
cmpl
and
fistl
aad
add
std
rcr
loopne
cmpsb
push
cmc
popl
mov
scas
pop
mov
add
pop
scas
cmp
jne
push
mov
mov
jo
fldenv
jno
mov
scas
shl
int
fists
clc
xchg
pop
into
imul
fnstcw
in
es
lock
mov
int3
call
ss
fstpt
xor
inc
push
mov
in
gs
lahf
jp
xchg
dec
dec
jbe
push
repz
pop
jo
mov
stos
call
jb
sbb
dec
andps
and
xor
and
push
movsl
mov
inc
xlat
maxps
or
lods
jg
jns
aam
sti
and
mov
jmp
cltd
pop
jbe
dec
rol
imul
out
test
xor
lret
cmpsl
inc
push
xchg
jecxz
pop
data16
rcr
add
lds
sub
mov
cwtl
lret
adc
inc
push
imul
or
mov
cmpb
pop
lock
adc
dec
sahf
shr
push
push
cmp
aas
adc
sub
sahf
mov
mov
sub
std
incb
push
jne
push
ss
inc
daa
xchg
and
jp
inc
imul
sar
xchg
les
push
jo
aam
stc
sahf
dec
enter
inc
dec
decl
push
rorb
inc
xchg
mov
push
cmp
add
ljmp
push
sbb
lret
into
mov
add
sbb
push
out
adc
loopne
sub
pop
push
add
int
lcall
leave
xchg
int
push
filds
stos
mov
aas
in
pop
xor
arpl
jl
pusha
stc
lea
add
stos
lods
mov
repnz
sbb
mov
int3
jno
dec
lret
leave
sub
adc
jl
lea
lcall
mov
outsl
or
clc
and
int
mov
sub
stos
cwtl
sub
pop
mov
mov
ds
mov
leave
adc
pop
sbb
sbb
and
nop
sub
fwait
shrb
sarl
pop
mov
scas
test
loopne
popf
jge
push
test
ljmp
mov
aad
xor
jge
adc
or
jbe
add
mov
out
cmp
popf
jmp
ret
add
mov
jg
sub
xor
pop
call
fisubl
dec
push
lds
sahf
cmp
das
popa
inc
call
xchg
mov
dec
sarl
mov
cmp
or
lea
cmc
fsts
dec
mov
dec
xchg
pop
push
sbb
mov
mov
shll
add
aam
sub
lock
jmp
mov
loop
aaa
outsl
outsb
mov
gs
inc
loope
mov
scas
dec
and
cmp
insb
jns
aam
movsl
ja
imul
sarl
cmp
cli
mov
divl
sub
lods
cli
fidivs
mov
and
mov
orl
adc
mov
pop
shl
push
rcl
outsb
imul
rorl
push
xor
jmp
loop
daa
ss
pop
xchg
lds
mov
cmp
test
cmpsb
test
getsec
dec
in
push
mov
dec
xchg
sbb
push
stos
mov
mov
xchg
lret
rolb
mov
mov
scas
or
inc
and
or
mov
xchg
lods
cmpb
aaa
scas
jae
outsl
scas
inc
aad
xchg
push
cwtl
insl
jns
fsubrl
add
jg
clc
push
test
out
or
sbb
loop
mov
inc
loopne
push
sub
jl
push
stos
add
mov
imul
lods
dec
mov
mov
cmp
jge
push
add
pop
idiv
es
xor
pop
adc
daa
mov
mov
flds
clc
cld
lret
mov
mov
ds
nop
outsl
packsswb
xchg
lea
in
outsl
clc
jae
rorb
lds
fs
dec
ret
push
dec
xor
out
add
fdivrs
sbb
pop
and
sbb
lock
and
inc
push
call
and
ficoms
rcll
inc
push
jle
mov
inc
scas
sbb
scas
adc
jb
dec
sahf
in
lcall
xorb
mov
rcr
inc
std
mov
mov
and
xchg
and
jecxz
sub
sbb
mov
lahf
cmp
data16
repnz
jl
leave
mov
sbb
pusha
jp
and
scas
mov
lcall
cmp
xchg
jno
inc
incl
xchg
scas
divl
ret
jmp
adc
xor
pop
dec
hlt
and
adc
imul
add
mov
gs
add
mov
jo
pop
cmp
adc
mov
xor
cli
jb
cmp
inc
imul
daa
sbb
test
cld
add
cmp
jecxz,pt
sbb
popa
imul
mov
in
xchg
sbb
arpl
lods
gs
sub
pop
decb
jl
adc
adc
in
jnp
faddl
sbb
ficoml
insb
jmp
add
push
jbe
out
push
jmp
push
pop
iret
movsl
inc
cld
fnstsw
pushf
mov
inc
repnz
adc
in
push
addr16
mov
push
es
or
nop
cmp
jecxz
inc
stc
inc
mov
in
inc
jl
ds
jge
mov
lea
mov
aas
push
iret
js
adc
cmp
push
decb
cmp
jns
xchg
xor
rcr
cld
inc
and
jl
into
mov
pop
shl
lret
bound
lret
jb
dec
popa
outsb
shlb
xor
loopne
je
loop
scas
push
xor
das
repnz
adc
add
push
cmp
in
sub
cs
repz
inc
out
dec
out
cmp
inc
dec
inc
lret
movsl
jae
leave
outsb
popa
push
sub
mov
sub
cwtl
mov
sbb
add
push
xchg
inc
js
jne
xchg
in
pop
adc
dec
dec
xor
cmp
shr
adc
or
aam
lock
je
lret
xchg
mov
fldl
repz
pop
mov
cmp
ret
or
push
jl
test
pop
out
pop
fwait
push
negb
repz
test
and
or
dec
push
mov
enter
sbb
mov
and
ja
inc
stc
stos
fsubl
xor
add
push
and
xor
add
cmp
push
subl
jmp
inc
bound
fwait
cmp
or
leave
mov
push
es
jle
mov
jle
adc
cmpsl
xor
insb
xchg
xor
fs
push
jnp
mov
mov
mov
popa
ret
mov
or
jns
xchg
ss
mov
arpl
fwait
add
imul
in
inc
jg
repz
jle
rorb
les
add
movsb
into
pop
in
imul
dec
inc
jae
adc
repz
dec
fsubrl
daa
mov
icebp
or
loop
adc
fdivrl
jo
sbb
in
cld
mov
sbb
repz
movsb
pop
mov
ds
call
inc
lret
pop
pop
mov
jno
fisttpl
and
sbb
gs
test
out
inc
psubusw
sti
pop
shrl
push
shrl
loopne
push
divb
mov
xchg
sub
std
jle
mov
out
std
adc
int
enter
cs
pop
addl
jle
add
scas
inc
loope
popa
mov
jbe
mov
add
push
cmp
aad
xchg
sub
rcll
outsl
and
ret
mov
rorb
and
inc
pop
push
insb
add
dec
fimull
or
xchg
add
outsl
pop
add
cld
iret
dec
lods
or
orb
or
pop
xchg
fbld
out
aam
mov
push
lret
subb
xchg
mov
jmp
in
cmp
and
cmpl
cs
sub
lret
push
insb
sahf
push
sbb
call
add
sbb
xor
je
jecxz
imul
outsb
aaa
imull
jp
dec
aaa
cmp
mov
shr
xchg
lods
aaa
int3
mov
push
ss
sbb
imul
xor
popl
imul
xchg
and
lea
leave
in
add
pop
dec
jp
mov
push
or
out
and
cmp
int
aaa
nop
ret
mov
adc
pop
fsubrp
cwtl
sbb
mov
maxps
xor
xlat
dec
inc
mov
mov
push
stos
aad
cli
ds
fistl
jae
mov
sahf
lea
rcrb
sub
mov
adc
mov
push
lahf
push
dec
push
lcall
push
cmp
in
push
imul
lret
xchg
xor
sub
mov
stos
mov
pop
cltd
scas
or
mov
jno
mov
pop
iret
fs
and
clc
inc
mov
mov
out
ret
out
xchg
and
cmp
pop
pop
cmpsl
mov
xchg
xchg
adc
shll
or
add
pop
mov
push
jecxz
jne
aaa
xchg
adc
jo
mov
sub
test
imul
push
dec
push
adc
push
sub
inc
cld
add
test
prefetchnta
outsb
fidivrs
xchg
mov
in
lahf
iret
adc
sbb
insl
xor
popf
dec
xlat
push
test
fldt
int
lods
fisubrs
cs
xlat
ss
add
push
xchg
and
adc
stc
pop
loope
add
scas
hlt
sub
test
scas
mov
push
xchg
inc
nop
mov
sub
int3
dec
jmp
add
cmc
pusha
and
data16
fcoms
inc
lea
into
xchg
adc
and
xor
mov
mov
aam
xor
mov
scas
jle
sub
pop
mov
xchg
mov
jbe
sub
sbb
pop
mov
push
xchg
xchg
rcrb
jb
push
out
mov
bound
xchg
pop
mov
pop
or
aas
into
jg
add
mov
popl
add
add
aad
dec
stos
lock
mov
cmovle
stc
popf
push
push
mov
lret
add
daa
pop
aad
test
mov
repnz
mov
mov
adc
insb
mov
pop
add
pop
es
lcall
mov
stc
pop
mov
fsubrl
idivb
addb
xchg
and
xor
int3
in
mov
push
arpl
popf
clc
fwait
imul
outsb
dec
fiadds
test
idiv
xchg
popf
jae
enter
mov
pop
xor
pop
out
jb
in
lods
xor
or
movsl
lods
stos
pop
pop
loopne
std
imul
fisubs
adc
push
mov
jecxz
mov
inc
ret
adc
shll
and
in
and
movsb
xlat
fcmove
jbe
fldcw
popf
and
cmc
rcll
addb
jp
and
jle
fdivl
addr16
addb
std
add
jns
mull
adc
push
mov
jb
xor
mov
mov
pop
mov
cwtl
pop
nop
rorl
popa
pop
mov
test
sub
inc
inc
sub
out
xchg
mov
sub
inc
and
and
and
int
out
sarb
or
sub
push
push
rcl
into
xor
jb
test
or
adcl
xchg
addr16
mov
mov
mov
in
inc
fwait
mov
adc
getsec
gs
mov
rcll
xor
adc
and
mov
cmp
dec
mov
outsl
jns
rorl
inc
lods
add
rorl
mov
mov
adc
and
sahf
sti
xchg
aas
fdivrs
addr16
out
dec
nop
int3
jno
adc
lcall
add
sti
ja
jp
lret
pushl
cltd
rol
subb
cltd
out
dec
mov
nop
inc
adc
mov
pop
jmp
roll
lret
nop
cs
pusha
mov
imul
jmp
and
movsl
mov
adc
or
mov
dec
les
fidivl
dec
sub
dec
pushf
inc
mov
leave
daa
push
aas
push
adc
jns
ljmp
insl
jg
xchg
test
mov
pusha
pop
mov
cli
push
fmuls
cmp
movl
sub
push
mov
pop
dec
ljmp
in
mov
shl
lea
std
dec
in
xor
adc
dec
nop
es
popf
mov
inc
aam
inc
js
push
ljmp
andb
and
xor
or
insb
in
aas
or
mov
aad
in
mov
adc
adc
sbb
push
shrb
leave
ljmp
lds
or
pop
ret
cs
add
adc
aam
mov
into
inc
in
into
mov
cmp
xchg
push
in
je
out
bound
fmuls
cld
inc
cmp
aad
or
push
push
insb
cmp
call
cmp
stos
mov
or
push
hlt
scas
in
stc
es
imul
jns
adc
xchg
dec
cwtl
data16
push
mov
sub
adc
cmp
leave
jg
pop
xchg
fildl
cmpsb
fistpl
or
repnz
push
sarb
xor
loopne
jl
and
dec
cs
repnz
push
nop
icebp
adc
addl
and
stos
inc
mov
xchg
cmp
jns
pushf
sub
fadd
imul
sbb
xor
in
jmp
xchg
mov
clc
scas
mov
insb
pop
mov
cmp
dec
stos
adc
mov
pusha
in
rclb
out
test
pop
pusha
push
loop
js
adc
test
aas
sbb
xor
dec
dec
out
pop
cmp
outsl
add
scas
add
cmp
test
repz
aam
lods
and
and
cltd
aas
popa
mov
mov
push
loop
push
jg
ret
push
jecxz
stos
mov
movsb
lea
mov
mov
loopne
cmp
mov
sub
push
sub
xchg
dec
fistl
fsubl
xor
scas
sub
add
ret
push
mov
das
pop
shl
cvtps2pd
fsubs
loop
pop
stc
loope
mov
adc
mov
push
jbe
mov
addr16
ret
cmp
jne
lcall
sub
into
fnstcw
push
inc
push
cmp
out
xlat
scas
ror
xor
xchg
std
and
mov
cli
sub
imul
jg
add
sub
and
loopne
cmpl
inc
push
xorl
cmpsb
aaa
call
sbbb
xor
ret
popa
shll
insb
xchg
pop
cmp
or
popa
inc
sahf
adc
int
lahf
imul
ret
je
hlt
cmp
and
rcll
cmp
repz
scas
xchg
mov
add
adc
popa
mov
setp
push
dec
sub
outsb
cli
push
lcall
std
xchg
push
fsubrl
jno
jbe
in
sbb
gs
sub
cmpsl
scas
cmp
and
fwait
mov
fnstenv
jge
outsl
add
jno
mov
dec
iret
flds
push
xchg
in
test
repz
shlb
push
adc
ja
stos
adc
fwait
xchg
inc
adc
lea
xlat
mov
idiv
jg
pop
repz
fdivr
add
jmp
test
push
ficompl
insb
push
fistpl
adc
imul
mov
mov
mov
inc
xchg
addl
adc
aam
xchg
jb
adc
ds
push
inc
mov
dec
jne
adc
sub
and
int
fadds
aas
imul
cs
loop
cmpsl
adc
cmp
pusha
ljmp
pop
scas
jne
add
or
xchg
add
add
out
dec
adc
mov
loope
adc
jb
push
pop
mov
xchg
movsl
jge
mov
aaa
push
pushl
jbe
mov
xor
in
cmp
insl
rcl
xchg
push
call
leave
cwtl
mov
pop
jecxz
clc
outsb
ss
je
pop
test
push
into
dec
push
sbb
aaa
movsb
stc
and
add
mov
stc
mov
inc
jns
cmp
jbe
jo
adc
cs
ljmp
scas
aam
mov
jnp
lret
ss
ds
jge
inc
test
jb
jns
or
cmp
jne
inc
push
sub
and
gs
loope
cmp
stos
ljmp
fs
cvtpi2ps
scas
stos
jno
mov
push
mov
and
repz
mov
pop
cmp
push
add
ljmp
pop
cltd
stos
jp
jge
gs
cmpsb
xor
push
movsb
aam
lret
sbb
fldl
sarl
repnz
and
lcall
mov
jae
xchg
push
in
lea
leave
in
les
subl
adc
mov
movsb
lahf
add
push
js
add
das
fistps
pop
lods
push
mov
imul
jmp
cmp
cwtl
add
cli
mov
xor
popa
jmp
or
push
rorb
pop
or
sahf
push
mov
mov
dec
in
xchg
daa
imul
or
adcl
rolw
int3
movsb
stos
lahf
pop
inc
push
repnz
jmp
sub
fwait
call
daa
stc
sbb
stc
or
add
test
push
sub
insb
fiaddl
cmpsb
in
push
stos
lahf
mov
inc
jecxz
fisubrs
push
mov
adc
or
cmp
cmp
adc
testb
lods
scas
pop
iret
xor
das
in
lret
cmp
mov
repnz
popa
into
cmp
mov
insl
xor
lret
mov
pop
mull
mov
mov
sbbl
ljmp
or
adc
mov
push
mov
jge
cltd
xchg
cmp
inc
fldenv
xchg
pusha
mov
js
aas
add
mov
into
pop
subl
xor
shl
mov
cmp
and
rcl
inc
shrl
jl
cwtl
jb
xor
and
dec
mov
or
or
cmp
or
mov
push
shll
xchg
xchg
xor
add
and
bnd
jecxz
ljmp
inc
fadds
flds
xor
leave
scas
sub
les
stc
fsubr
cmp
mov
sub
loope
jl
adc
sub
mov
test
test
andb
sub
mov
cld
xlat
out
sahf
sub
sub
xlat
pop
push
add
scas
push
pop
scas
add
dec
testl
cmp
push
dec
inc
mov
mov
fcom
cmp
in
rol
push
cs
xor
mov
mov
cmp
test
fwait
sbb
fistpll
nop
mov
cli
add
imul
jno
jnp
cmp
jl
cld
idivb
pop
imul
mov
adc
sbb
and
pop
cs
in
mov
dec
sub
push
pop
loope
movsb
ds
fdivrl
fldenv
lods
repnz
push
dec
test
jne
add
sbb
jle
push
test
jp
insb
popa
xlat
or
int
bound
mov
fisubrs
sbb
push
adc
jb
lods
adc
int3
fstl
test
sti
pop
stos
cld
push
pop
pop
cld
push
mov
mov
mov
push
push
xchg
rcrb
and
nop
lds
ja
arpl
ja
scas
push
xor
dec
pop
ret
jmp
xor
push
mov
mov
xor
xchg
stos
repz
push
push
in
xorl
push
push
push
mov
push
xor
push
orl
jmp
mov
stc
inc
addl
fistpll
std
add
repnz
pushl
lret
cmp
push
cmp
inc
inc
lret
jecxz
into
test
cmpsl
jne
sub
push
add
test
push
cmp
sub
fisttps
loop
xchg
cli
inc
sti
fwait
or
loopne
call
push
cltd
lret
es
sahf
out
mov
out
popa
test
sbb
outsl
xchg
push
cmp
popf
dec
lahf
leave
xor
or
insb
xor
aad
jp
dec
push
outsl
stos
fistpll
lods
push
pushf
das
gs
jg
add
mov
mov
sbb
inc
rorl
loope
mov
aaa
out
scas
clc
adc
or
test
test
push
adc
popf
in
lahf
sbb
pop
into
mov
lahf
jae
adc
in
call
lret
fistps
fnstenv
clc
inc
mov
adc
loop
sbbb
push
pusha
mov
cmc
ljmp
ret
pop
mov
or
add
add
add
aaa
or
xor
push
cmp
cld
out
popa
in
lcall
mov
inc
pushf
stos
and
arpl
cmp
lret
mov
adc
imull
sarb
aaa
mov
imul
lret
xchg
repz
and
repz
outsw
dec
mov
ds
and
adc
and
mov
and
loopne
dec
rol
ret
inc
cmc
dec
dec
mov
loope
pop
jl
sbb
xor
ficoms
adc
repnz
mov
pop
push
cmp
xchg
add
out
adc
out
jmp
es
adc
or
loop
bound
dec
cwtl
pop
clc
repz
in
lahf
mov
leave
cli
push
pop
mov
xchg
mov
sub
pop
inc
imul
inc
loop
xchg
sbb
mov
xorb
lcall
insb
push
jb
pop
mov
cli
mov
and
sub
push
or
les
xor
pop
mov
stos
test
leave
mov
fs
fld
sbb
sub
int3
push
shl
sbb
hlt
adc
xor
sbb
cli
insb
je
pop
addr16
fwait
and
xor
cltd
xor
sahf
stc
mov
ja
and
adc
mov
mov
fsubrl
hlt
sub
jl
adc
cs
sub
in
lret
sbb
jmp
jnp
cs
mov
fmul
dec
push
jo
stos
hlt
icebp
jno
ret
xchg
inc
adc
in
outsl
sub
dec
ret
jp
mov
mov
add
jp
fs
into
sub
lds
in
stos
out
sbb
daa
int3
fimull
lahf
push
stos
fidivrs
xor
adc
mov
ja
addr16
das
cmp
icebp
orl
mov
mov
mov
dec
fidivrs
fcmovnbe
sbb
sbb
pop
mov
out
pop
cwtl
cwtl
fildll
test
out
and
aad
jmp
mov
sub
mov
dec
cmp
scas
imul
cmp
rolb
mov
inc
xor
xchg
push
lock
test
adc
pop
jbe
fwait
outsl
jno
fldl
roll
cmp
and
pop
xor
add
fstpt
loope
jmp
sti
es
es
push
movsl
dec
jp
shrb
jb
popa
lods
lock
or
ss
sbb
sub
in
bound
mov
xchg
add
jge
sub
xchg
mov
imul
fdiv
iret
inc
adc
mov
loopne
xor
mov
jns
add
fcoml
xor
inc
inc
mov
fwait
pop
add
mov
mov
fnstcw
sbb
push
ss
pusha
scas
insb
rorb
mov
sbb
push
in
stos
mov
inc
call
mov
push
scas
mov
aas
call
xchg
scas
adc
mov
mov
aas
shrd
in
pop
mov
lock
loop
repz
pop
std
movb
inc
or
les
aam
mov
addr16
popa
dec
or
int3
sbb
fcomip
sub
fistps
mov
adc
xlat
das
loop
lahf
ljmp
sub
out
int
stc
mov
test
inc
and
fwait
inc
mov
ror
aam
or
push
add
sbb
outsl
sbb
dec
dec
push
push
negl
pushf
mov
adcl
mov
add
xchg
dec
pop
stos
push
push
inc
jae
or
mov
sbb
hlt
push
jmp
jecxz
pop
in
int
aad
mov
pop
xchg
sub
int
fidivl
adc
push
pushf
xchg
xchg
push
scas
out
push
aam
cmp
push
mov
jne
sbb
xchg
fcoml
pop
fisubrl
pop
stos
lahf
or
filds
into
sbb
push
xchg
xor
push
je
xchg
fwait
dec
idivl
adc
mov
sbb
inc
jecxz
ror
jbe
lcall
in
repz
cwtl
jb
inc
dec
mov
int3
xchg
or
add
data16
cmc
mov
mov
out
mov
xchg
mov
pop
dec
or
and
fildll
shrb
mov
pop
arpl
pop
mov
aad
mov
sbb
xor
int
imul
sti
sbb
cs
inc
aas
jp
pop
xor
into
out
or
in
sub
jg
repz
jmp
inc
or
cmpsb
pop
mov
mov
or
cld
scas
pop
hlt
dec
dec
test
inc
sub
inc
mov
test
mov
lock
and
inc
add
sahf
out
adc
or
std
inc
scas
sub
adc
ds
pop
roll
jae
adc
mov
sub
jle
and
jp
mov
dec
xor
ss
cmpsb
push
jne
pop
jnp
xchg
inc
fdivr
pusha
fiadds
lret
sbb
pushf
clc
xchg
push
inc
es
mov
sbb
pushf
jne
or
mov
jmp
lret
mov
dec
inc
adc
imull
jb
mov
push
mov
cwtl
pop
mov
cmovno
push
lahf
sahf
or
mov
add
or
sub
leave
cli
xor
push
mov
aaa
inc
mov
es
cmpsb
push
loope
cwtl
push
int
insb
and
xor
xchg
lcall
in
mov
jp
sti
dec
sub
jns
mov
aad
pop
cmp
mov
mov
cmpsl
iret
out
jecxz
ss
mov
jecxz
push
stos
icebp
cwtl
repnz
jne
or
mov
sbb
mov
pop
out
pop
add
mov
dec
xchg
scas
mov
imul
pop
and
mov
test
mov
xor
lret
subb
jb
or
mov
out
lods
sub
cmp
cli
in
aad
dec
xchg
mov
sahf
jecxz
jecxz
pmaxsw
pushf
out
mov
sbb
xlat
cmp
jne
mov
dec
cmp
push
jp
lock
shll
pop
roll
inc
divb
push
pop
xor
jmp
fiadds
add
pop
xor
xchg
jb
lods
scas
in
scas
in
out
or
daa
mov
sub
out
fs
adc
nop
mov
ja
dec
mov
ret
sub
mov
inc
aad
dec
mov
sahf
xchg
imul
nop
scas
js
or
adc
pushf
and
imul
iret
in
mov
fcoms
scas
mov
mov
scas
push
sub
xchg
imul
pop
cwtl
rcll
mov
fcomip
int
push
inc
sar
ret
test
add
adc
or
fsubrp
xlat
xchg
pop
xchg
xchg
in
lods
call
inc
cmp
lods
dec
lods
push
add
hlt
test
jb
insl
mov
dec
sbb
and
cmp
stos
xor
dec
test
adc
nop
ljmp
pminsw
jl
jge
das
sbb
int3
test
mov
jmp
arpl
jmpw
pop
test
out
lret
imul
cmc
or
push
push
insl
sub
mov
cmp
mov
push
pop
jae
das
mov
iret
into
mov
jmp
push
xor
lds
popf
push
jns
insl
mov
and
and
fstps
jge
repz
push
mov
rol
popa
addr16
xchg
out
lea
cli
dec
iret
mov
or
xor
test
jb
cld
daa
inc
pop
jns
mov
movsb
lods
leave
stos
mov
inc
adc
int3
sbb
mov
mov
jns
jmp
test
addr16
fsubrl
test
mov
sbb
and
add
mov
mov
sbb
pop
dec
mov
mov
pusha
sbb
ds
aaa
push
inc
fstl
insb
lret
or
and
in
and
lcall
mov
inc
add
jo
xorl
push
cli
sub
ds
or
cmp
mov
jp
stos
dec
xchg
mov
movsb
push
push
push
inc
fidivs
in
js
cmpsb
in
and
les
sbbl
in
repnz
pop
mov
mov
mov
mov
mov
scas
stc
adc
adc
pop
ja
insb
mov
jbe
movb
fsubrl
test
addr16
push
js
movsl
add
in
mov
pop
cmp
push
pop
sub
cmp
inc
in
mov
lods
lahf
les
inc
mov
fistpll
insl
jmp
lahf
ljmp
xor
in
xchg
test
jne
popf
or
xrelease
push
ljmp
rcll
repz
repnz
sbb
lcall
mov
adc
lret
repz
inc
xlat
adc
int
movsb
je
addr16
xchg
cmp
cli
mov
pop
cmpsl
popa
in
xchg
ret
dec
ss
popf
lds
add
jo
lds
repnz
in
xor
rolb
mov
lcall
push
xchg
lret
data16
daa
cmp
bound
out
ret
enter
inc
xchg
iret
xchg
fs
dec
rcl
pop
mov
adc
sahf
add
rcrl
xor
rolb
dec
push
xor
shr
ret
push
add
in
movsl
sarb
lock
mov
jbe
hlt
ficoml
clc
movsw
mov
cltd
sbb
popf
cmpsl
cltd
sahf
adc
xor
ret
fs
pop
cwtl
aas
arpl
cmp
sarb
lock
int3
cwtl
mov
mov
ret
js
mov
adc
pop
pop
lds
mov
das
ss
add
enter
clc
test
mov
and
nop
imul
mov
ja
sub
into
xchg
out
loopne
scas
and
lcall
pop
jb
mov
push
adc
lcall
pop
mov
lods
jp
sub
jo
leave
mov
insl
inc
cmp
in
dec
mov
cmp
js
test
add
lea
adc
mov
push
hlt
shll
cltd
scas
jne
xchg
xor
pop
shl
sub
add
gs
cli
leave
in
movb
popa
pop
add
mov
testb
push
or
sub
inc
mov
mov
mov
fucomp
fwait
es
jle
mov
cld
int
xor
ret
push
ret
test
mov
es
push
mov
cmc
push
out
jge
nop
push
adc
imul
aas
sbb
les
nop
adc
stos
pop
jle
shll
rolb
adc
adc
push
xchg
pop
in
mov
dec
mov
lea
or
xlat
cltd
lcall
adc
loop
cmp
cwtl
sub
iret
mov
je
sbb
mov
mov
push
xorl
pop
movaps
push
jg
mov
in
inc
push
out
mov
arpl
test
sbb
in
lea
outsl
fisttpll
jo
iret
hlt
popf
lret
add
test
inc
jns
rcrb
jnp
xchg
into
pop
dec
repnz
push
push
enter
lods
cmp
push
push
adc
push
dec
repnz
xchg
pop
dec
sub
loopne
leave
push
sub
and
shll
movsb
in
jg
cmpb
shlb
fwait
lods
int3
aas
xchg
loope
lahf
fwait
mov
or
mov
cmp
dec
pop
jge
xchg
inc
push
fisubl
adc
mov
popf
xor
mov
daa
cmc
and
sub
arpl
add
stc
jne
dec
addb
cli
push
testb
je
or
lret
mov
add
mov
xchg
fidivrs
subl
xor
pop
sub
test
enter
adc
loope
mov
loop
je
xlat
push
les
jne
ljmp
js
sbb
cmp
jge
js
cmp
stc
pop
rorl
daa
pop
xorl
push
shrb
ret
fistpll
push
pusha
xor
mov
nop
adc
pop
scas
jb
ja
jge
je
lods
cld
add
adc
in
and
ljmp
xor
cltd
lahf
mov
xchg
sbb
lea
and
dec
imul
mov
out
insl
mov
icebp
or
fistps
test
pop
loop
jecxz
ja
mov
popf
xchg
mov
hlt
arpl
sahf
mov
xlat
xchg
mov
insb
cld
push
adc
xor
mov
pop
cli
pop
sub
gs
mov
orl
notb
gs
in
mov
jnp
aad
out
pop
add
jg
sti
cld
xor
xchg
mov
cmpsb
sub
dec
das
inc
movl
movsb
inc
divl
repz
out
stc
lcall
ss
out
stos
mov
inc
idivb
or
call
mov
add
dec
mov
pop
adc
xorl
fs
cmp
mov
data16
mov
jecxz
cmovno
inc
movq
ret
pop
sbb
inc
mov
dec
popf
and
push
adc
push
scas
and
push
sbb
cmp
or
test
pusha
shl
jno
add
adc
lcall
test
and
test
mov
repnz
jo
popf
aam
xchg
js
int3
add
sub
xchg
jo
call
jnp
loop
cmpsb
lcall
add
scas
xchg
into
pushf
lea
gs
leave
test
jge
les
sarb
dec
xchg
mov
in
inc
dec
push
hlt
outsb
mov
iret
bound
nop
mov
cmp
pop
in
push
jmp
or
pop
repnz
hlt
das
stos
into
repz
mov
sbb
jae
int3
mov
andl
in
inc
mov
and
loopne
pop
int3
icebp
add
dec
sub
or
mov
roll
sarb
push
ror
push
cmpxchg
hlt
mov
rcr
adc
cmp
jmp
ret
xchg
add
fistpll
scas
mov
repnz
repz
popf
je
insl
mov
jmp
pop
outsl
or
mov
lods
popa
lea
stos
mov
cmpb
xor
push
je
subb
fiaddl
mov
jne
ds
aad
mov
inc
sub
aam
icebp
sub
xchg
pop
jne
outsb
mov
or
je
ret
push
jge
mov
adc
into
aam
fisttps
lret
dec
out
xor
pop
and
or
je
add
xor
cmovp
jmp
or
mov
mov
inc
mov
ja
lret
push
aad
cs
insl
sub
lock
popl
xchg
mov
sahf
enter
leave
loop
out
out
mov
push
mov
daa
or
insl
sub
add
stos
out
sub
arpl
imull
inc
or
inc
inc
out
push
xor
mov
mov
xorl
mov
and
and
mov
push
repz
ja
xor
xchg
int
lods
inc
jbe
xor
sbb
adc
mov
mov
and
push
xchg
or
sahf
rorl
test
out
filds
inc
pop
add
mov
out
dec
xchg
inc
and
push
loop
mov
cli
add
aaa
xchg
outsb
popf
repnz
test
jmp
decb
mov
out
hlt
mov
dec
dec
cmp
push
pop
enter
test
mov
cmovge
mov
lcall
out
ret
cld
cmpsl
pop
fs
dec
add
pop
pop
sub
daa
aas
cli
sahf
cltd
mov
pop
push
aas
stc
mov
jno
repnz
stc
lret
mov
pop
je
ret
cmp
test
add
xor
fildl
pop
fistpll
adc
mov
or
mov
xchg
pop
cmpsl
push
dec
subl
inc
sar
test
in
incb
add
les
push
cmp
scas
xor
fwait
mov
and
rcl
imull
jns
push
cmp
repnz
add
mov
lock
rcrl
mov
daa
test
mov
cmp
call
mov
in
pop
loop
loop
dec
jle
inc
in
add
dec
ljmp
int
idivl
gs
xchg
ss
movsl
popl
push
ja
and
push
cmc
mov
sbb
push
movl
and
subl
add
nop
jns
popa
dec
ffreep
or
andl
stos
nop
mov
sbb
xor
adc
pushl
je
stc
pop
std
dec
roll
push
cwtl
push
cwtl
das
mov
std
std
aaa
dec
sub
push
push
adcl
or
xchg
and
enter
sub
lock
mov
xor
cli
or
mov
nop
and
repnz
ds
push
and
imul
jno
pop
icebp
add
out
push
stos
xchg
insl
insb
iret
pushf
insl
xchg
mov
mov
mov
pop
jg
repz
scas
mov
lret
pushl
xor
lret
aas
out
ror
hlt
cmpsb
repz
fucom
gs
add
js
je
loope
adc
jmp
pop
sub
es
sub
push
xchg
jg
lods
sub
lods
fsub
repz
and
pop
xchg
and
aas
sti
and
push
sbb
dec
jbe
mov
mov
sbb
dec
xchg
js
movsb
mov
push
dec
inc
jp
rorb
inc
dec
cwtl
scas
dec
out
mov
xchg
sub
jno
adc
dec
ss
ss
dec
fwait
bound
pop
push
push
in
fs
xor
push
push
push
lret
aaa
dec
jo
int
push
test
imul
xchg
rorl
rol
and
inc
insl
les
stos
mov
push
int3
push
adc
call
das
data16
push
mov
mov
push
xchg
insl
shll
and
int3
clc
pop
inc
lods
mov
xchg
jbe
outsb
out
lcall
adc
aaa
pop
sub
lcall
push
pop
movsb
popa
xlat
call
insl
sbb
std
cmp
outsb
cmp
ds
sbb
mov
or
add
mov
pop
into
in
adc
jo
fs
cmp
xor
out
mov
cmp
aad
cltd
pop
cs
inc
add
sbbb
movl
rclb
dec
jecxz
pop
add
pushf
fldenv
fs
sub
lock
in
in
xor
loopne
test
int
dec
inc
test
mov
ret
loope
call
mov
sub
dec
pop
mov
into
jl
into
in
adcl
xchg
enter
fstl
inc
test
fimuls
testl
inc
jge
pop
negl
mov
shlb
pop
pusha
xor
pop
and
cld
ja
pop
outsl
cmp
ss
cmp
add
lahf
lock
mov
iret
ret
outsb
mov
inc
sbb
in
pop
scas
roll
rol
mov
je
cmp
xor
aas
mov
ja
mov
adc
pop
cmp
dec
sub
mov
lods
xchg
inc
cwtl
sbb
push
pop
and
sbb
jae
mov
es
pop
daa
or
mov
add
dec
jle
jnp
pop
push
insl
jbe
ror
jno
in
pop
js
insl
lahf
mov
iret
xchg
push
test
and
aad
cwtl
xchg
js
enter
jmp
mov
inc
sub
fnstenv
push
call
mov
shl
sbb
mov
nop
daa
inc
jae
popf
xchg
pop
jo
xchg
cwtl
ret
es
js
in
or
mov
mov
nop
inc
test
xchg
xchg
cwtl
out
ret
dec
test
xchg
je
movsl
imul
jmp
push
xchg
mov
lock
adc
sahf
jnp
inc
xchg
fsubp
jne
inc
cmp
jnp
sub
movsb
or
jge
push
and
mov
sarb
repz
movsl
sti
mov
dec
jo
sub
outsl
and
popa
pop
shl
xchg
cmp
scas
push
push
dec
xchg
outsb
pop
mov
jmp
dec
push
mov
mov
jo
and
cmpsb
xchg
outsl
mov
ss
add
and
jp
lods
pop
dec
aas
fstpl
repnz
mov
cmpb
out
sahf
xchg
inc
mov
movsl
dec
fs
ja
lds
aam
push
fisubrl
fdivl
cmpsb
out
into
adc
in
cltd
xchg
adc
mov
aas
or
dec
call
jne
sbb
fdivrs
cmp
insl
nop
mov
and
inc
xchg
fldenv
leave
push
pop
push
push
mov
push
sbb
fwait
aam
sbb
cltd
mull
xchg
pop
push
lock
xchg
pop
pop
mov
daa
cwtl
cmpb
jb
push
out
cmp
negl
movsb
jle
fists
mov
mov
jbe
jle
and
insl
adc
adc
inc
cli
mov
mov
mov
rcr
jnp
sub
lret
fistpll
addr16
popf
addr16
in
cmpb
or
dec
push
add
push
mov
dec
repnz
loop
rorl
sub
inc
fiadds
xlat
and
mull
cli
jmp
push
adcb
cmp
ret
or
and
test
rorl
lods
push
xor
fcomps
aaa
std
out
mov
sbb
pop
pop
scas
addr16
xchg
mov
clc
fisubrl
fistl
sub
js
sub
lret
push
loope
xchg
adc
cmp
popa
clc
jne
cmp
pop
sbb
sbb
xor
aam
mov
nop
ja
push
xor
std
arpl
aad
popf
rorb
in
enter
mov
mov
push
test
pop
aas
pop
inc
add
popf
cs
push
mov
jne
test
sub
cmp
fisubl
in
mov
not
pusha
addr16
lret
iret
jns
mov
xor
mov
rol
fstl
ss
test
dec
movsl
pop
insl
dec
push
repnz
adc
pop
inc
cmc
xchg
mov
mov
out
xchg
je
or
push
dec
adc
xor
xchg
push
shrb
shrb
shlb
mov
lret
mov
aad
and
inc
dec
add
mov
divl
iret
mov
push
mov
sbb
sahf
push
mov
sbb
icebp
push
xchg
bound
fsub
adc
fnsave
rorb
xor
ficoms
insl
cmp
sahf
jle,pn
rclb
cmpl
sti
mov
test
xchg
and
arpl
mov
pop
push
inc
xlat
mov
loopne
mov
cmp
and
stos
adc
jbe
imul
xlat
pop
adc
test
outsl
in
and
pop
or
cmp
subb
dec
xor
bound
cmp
test
aad
xchg
or
jnp
jecxz
fsubp
adc
iret
xchg
dec
jg
scas
pop
rorb
shr
pop
mov
rcrl
ficoml
test
adc
jae
orl
aad
jg
lods
and
sbb
testl
mov
mov
adc
inc
cmc
jbe
xchg
add
mov
mov
cltd
mov
dec
andb
or
dec
fists
mov
lea
dec
outsl
xchg
mov
into
xchg
icebp
ljmp
or
inc
daa
cmp
fisubrl
pusha
mov
call
and
push
or
adc
in
insb
cli
call
jne
pop
arpl
mov
das
dec
or
rol
lds
fs
scas
inc
aas
leave
lea
sti
outsb
jl
sub
mulb
test
sti
in
outsb
mov
sub
jmp
inc
dec
lret
out
in
xlat
sub
ret
push
mov
add
xchg
xor
mov
sbb
cmp
int
add
insb
lcall
pop
xchg
addl
test
pusha
test
ja
stos
pop
scas
sub
gs
add
sub
subl
aad
nop
sbb
sub
add
pop
cld
or
pop
call
test
nop
imul
pop
icebp
lea
add
cmp
cmp
inc
and
dec
inc
stc
or
outsl
adc
cmp
aad
mov
fprem1
int3
sub
xchg
and
jb
repz
ljmp
xchg
dec
dec
rol
popa
in
mov
test
out
jl
dec
popa
dec
cmc
push
fcmovnu
in
xchg
pop
jecxz
cmpsl
jl
xchg
dec
jo
dec
aad
shll
mov
dec
jnp
jl
dec
xchg
and
cli
ss
sub
loopne
ret
push
jmp
lahf
inc
sub
ds
dec
adc
push
loopne
js
fcmovnb
ds
adc
dec
cmp
js
lcall
mov
mov
dec
mov
add
pop
adc
push
aam
push
mov
std
js
mov
ret
cmpsb
rcrl
and
jb
sbb
or
fstpl
jo
mov
data16
fnsave
lcall
inc
popf
out
loopne
push
sti
sub
aam
sbb
divb
ds
aad
pop
xchg
pop
pop
outsl
sub
mov
jmp
sub
inc
push
les
xchg
arpl
pop
mov
mov
in
rcrb
or
out
inc
mov
cmpsl
and
add
loopne
sbb
push
popa
mov
push
aam
movsl
cltd
push
adc
mov
mov
dec
pop
testl
insb
dec
push
jp
or
scas
push
sarl
loopne
out
cli
push
repnz
adc
and
cs
scas
out
ret
je
inc
cltd
push
pop
lds
xchg
les
clc
jne
outsb
xor
adc
and
adc
fiaddl
or
pop
sahf
fs
mov
dec
push
push
orb
pop
fcoms
test
mov
sbb
pop
and
mov
mov
dec
cmp
dec
cmpsl
jmp
lock
cmpsl
cmpsl
clc
daa
mov
pop
fldt
sti
lds
ja
push
ficomps
in
cmc
sbb
xchg
shr
xchg
enter
add
adc
pop
scas
cmpsl
cld
jns
xchg
adc
neg
dec
inc
test
daa
movsl
call
aas
adc
sti
mov
cmpsb
lea
in
test
cwtl
les
mov
je
pop
frstor
mov
in
push
mov
mov
mov
call
repz
aaa
cmpsl
sbb
pusha
cmp
pop
push
adc
test
jecxz
xor
mov
movsl
pushf
xlat
shrb
sub
sbb
aam
xchg
push
jecxz
outsl
mov
and
lahf
ja
dec
mov
mov
into
pop
jae,pt
sub
and
push
cwtl
jnp
inc
ror
lret
xor
jae
pop
rcrl
jmp
test
mov
lock
cmp
ja
xchg
daa
cld
mov
dec
lock
sub
fnstenv
clc
push
sbb
inc
es
add
stos
inc
popa
mov
in
or
or
jge
push
scas
push
fisubl
xchg
dec
mov
out
add
std
fbstp
je
mov
call
icebp
int
xchg
pop
cmpsb
ja
loope
xor
ret
xchg
test
inc
fwait
mov
out
and
test
cmp
arpl
cld
test
pop
push
jecxz
lret
inc
adc
mov
pusha
jl
sbb
out
sub
and
push
cld
mov
popf
data16
enter
xor
xchg
cmpsb
aas
loop
lcall
call
gs
push
xchg
and
xor
mov
or
xchg
mov
or
adc
xchg
mov
xor
es
and
lods
jle
repz
xor
and
xor
les
mov
out
movsl
ja
fdiv
les
sahf
shrb
xchg
sub
jnp
xchg
add
jo
inc
iret
dec
push
sbb
cmc
sbb
jo
shl
sar
xchg
rcll
xchg
andl
insb
stos
mov
enter
imul
hlt
mov
mov
int3
loop
es
sbb
movb
shl
mov
test
inc
mov
ss
and
mov
xlat
jns
repz
pop
lds
mov
xor
mov
leave
fsubl
repnz
push
mov
out
pop
and
and
popf
fsubrp
int3
cvtps2pd
mov
lods
fs
sbb
and
cld
daa
pop
into
mov
or
movsb
or
push
lock
cltd
cmpsl
js
shr
leave
ss
mov
or
shl
hlt
popl
xchg
inc
mov
out
pop
int3
mov
lret
mov
inc
imul
ffreep
jmp
jge
daa
push
or
push
enter
sbb
jbe
push
sub
bound
fidivrl
jne
pop
mov
in
out
psrad
dec
mov
xor
cltd
daa
push
jae
cmpsl
mov
mov
shl
add
jnp
push
cli
sbb
inc
xchg
lods
loop
clc
cltd
mov
pop
sub
jb
add
sbbb
adc
mov
jp
test
dec
mov
in
ret
push
adcl
pop
push
xor
pop
pop
add
movb
sub
dec
dec
or
cmp
jmp
gs
sahf
test
sub
jno
loope
lods
xor
mov
je
aas
or
shlb
sti
xchg
mov
outsl
mov
int3
test
add
adc
insl
pushf
mov
dec
test
loopne
or
push
xor
lods
inc
sbb
loope
loope
adc
dec
loopne
stos
aas
cli
lods
sub
mov
stos
movsb
daa
cmp
push
add
adc
jle
mov
pop
xor
mov
shrb
negb
mov
push
call
mov
lods
jmp
cmp
les
or
sub
imul
jl
pop
test
rcrl
fidivl
cmp
mov
iret
repnz
sub
out
repz
std
pop
push
jae
inc
or
push
sbb
lock
xchg
xchg
outsl
ffreep
lds
mov
xor
pop
mov
inc
fwait
mov
scas
xchg
icebp
fnstenv
outsl
mov
rorb
rorb
or
movsb
mov
mov
leave
jno
push
xor
sub
int
jmp
mov
leave
adc
insb
dec
mov
jp
cld
mov
scas
mov
sub
lds
aaa
sbb
pop
outsl
in
inc
and
data16
repnz
cmp
push
fiaddl
dec
lcall
sti
xor
sub
fimull
out
aad
pop
and
and
dec
cmpsb
sub
jl
mov
mov
cmpsl
sbb
inc
jbe
ja
or
decb
or
divb
xor
sbb
repz
mov
jnp
popa
fisubrs
lea
mov
jae
sahf
xchg
sbb
and
dec
pop
sarb
repz
or
jo
mov
cmp
scas
pop
repnz
addr16
mov
fcoms
aad
shll
roll
adc
add
aad
je
push
scas
insb
hlt
sbb
xor
push
popa
pop
fistpll
push
in
sti
dec
das
cld
fwait
and
lds
in
cmp
pop
in
mov
bound
addb
loop
push
push
xchg
ret
test
daa
xchg
loopne
sub
js
jns
inc
or
mov
mov
fiaddl
std
and
es
pop
mov
jle
insl
sti
or
sbb
sbb
shrl
leave
sarb
insl
dec
scas
inc
mov
add
arpl
push
frstor
das
and
sbb
cmp
or
imul
jb
dec
dec
test
in
push
xchg
icebp
rcll
jl
rorb
mov
add
jno
pop
sbb
popf
xchg
roll
ljmp
addb
stos
mov
hlt
add
dec
lret
cwtl
insb
inc
out
and
mov
out
cs
scas
add
push
test
test
jle
sbb
push
mov
xchg
mov
and
inc
xor
sub
pusha
loopne
or
xchg
fcmovnu
incb
pop
xchg
lahf
aas
push
and
mov
lods
clc
jg
jmp
mov
pop
cltd
sbb
dec
pop
nop
mov
scas
fmull
sbb
mov
sbb
lds
adc
movsb
mov
pop
or
inc
nop
enter
out
loope
stos
pushf
dec
jg
jge
ss
pop
mov
js
xor
mov
xchg
icebp
add
dec
movsl
mov
cmpsb
pop
mov
sbb
xor
and
dec
push
insb
jno
lds
pop
cmp
in
mov
push
addr16
or
inc
cld
test
xor
int
jle
mov
adc
test
mov
xchg
jb
xor
dec
mov
jo
ja
out
cld
sub
mov
xlat
fbstp
push
movsl
mov
adc
notl
or
ret
push
push
cld
inc
pop
iret
inc
loopne
in
movsl
pop
lds
fisubs
pop
and
fcmovnu
sub
sub
lcall
orl
add
aam
cltd
xor
sub
aad
cmpsb
dec
push
popf
sub
or
outsl
jg
mov
enter
pop
jmp
js
cmp
jne
int
xchg
in
push
outsb
leave
movsl
inc
sub
lods
xor
nop
lods
icebp
lret
push
test
mov
ljmp
sbb
xor
jnp,pt
scas
and
push
or
sub
popf
mov
out
data16
mov
repz
repz
sub
ret
fnstenv
add
pop
shll
adc
inc
mov
iretw
jb
iret
mov
aam
jo
xchg
mov
push
push
lret
pop
xchg
insb
gs
insl
mov
movb
mov
stos
nop
call
ds
sbb
ja
push
xor
inc
xor
std
dec
pop
lahf
test
ret
les
push
xor
jmp
cmp
push
and
das
popa
and
dec
fnstenv
cvtpi2ps
jb
push
jp
xor
sub
cltd
or
xor
addr16
xchg
push
sbb
lret
mov
push
lods
inc
fst
jmp
or
enter
jnp
cmp
jle
iret
xchg
stos
xor
fcomps
popa
jns
cltd
cmp
cltd
xor
mov
fistl
push
cmp
mov
ja
adc
daa
pop
jecxz
mov
and
dec
adc
cmp
fidivl
fldl
nop
jns
testl
inc
xor
addr16
test
mov
ja
mov
pop
jecxz
in
lahf
cmpsl
and
mov
xchg
addr16
clc
xor
push
pop
ret
lods
out
push
sub
mov
int
xor
pop
hlt
lds
es
and
sub
push
movsb
dec
stos
and
pop
sub
or
push
jmp
or
xchg
rcrb
hlt
aas
int3
sub
movsl
in
jns
jne
xor
inc
add
in
push
in
in
into
es
and
lea
rclb
pop
sti
jbe
enter
jne
js
cld
pop
in
insl
mov
cmp
add
call
fisubs
xchg
cmpsb
dec
mov
fpatan
lods
cmpsb
jo
into
inc
in
insl
popa
mov
pop
daa
pop
sbb
cwtl
test
dec
insb
or
mov
das
mov
jp
xchg
xor
negb
aad
in
jmp
lods
and
mov
mov
adc
fwait
incb
lahf
add
lds
daa
sti
lcall
mov
insl
adc
bound
xchg
cmp
inc
sub
mov
test
lea
inc
into
js
pop
int3
movaps
mov
push
icebp
mov
inc
pop
push
and
aas
sbb
push
in
call
cmp
add
xor
jl
xchg
mov
sub
lods
add
lock
pop
out
aaa
repz
outsl
fisubs
mov
push
daa
call
and
fcmove
stos
nop
pop
or
sbb
sti
iret
adc
daa
cmp
inc
mov
mov
xchg
and
cmp
ss
lret
test
mov
fdiv
xchg
psllq
sub
imul
mov
pop
fwait
cmp
xchg
lcall
or
dec
mov
ss
jns
jp
jo
mov
repz
pushf
cmp
push
in
and
rcr
mov
mov
push
xchg
push
lahf
pushf
out
and
decb
imul
inc
and
xlat
sub
iret
mov
leave
and
mov
mov
lea
in
push
push
out
outsl
movsb
test
out
in
push
mov
cmp
pop
cmp
pushf
rcrb
test
pushf
je
lods
dec
sub
stos
loopne
in
sbbb
or
out
repnz
mov
mov
insl
addr16
in
out
cmp
adc
das
loope
fnsave
jae
shll
xchg
jno
mov
ret
fistpll
pop
jp
addr16
cmp
ss
test
in
leave
mov
jbe
ret
inc
nop
in
xchg
sarl
push
sub
test
mov
add
mov
add
cmpsl
cmp
xchg
sub
mov
dec
pop
jae
push
pop
mov
sbb
xchg
pop
lret
jl
lret
push
mov
rcll
push
mov
cmpsb
mov
icebp
jns
and
xlat
dec
mulb
inc
dec
pop
ja
mov
les
rclb
test
fisubs
inc
testb
xchg
popa
in
dec
or
jecxz
addr16
addr16
inc
xor
imul
cli
fnsave
stc
pop
mov
and
xchg
sbb
shl
pop
mov
xchg
movsl
movsl
cmpsb
xchg
dec
movsl
fld
sub
stc
xchg
inc
jmp
xchg
pop
mov
testl
std
jle
in
xor
jmp
divl
xor
mov
mov
sub
or
loop
sti
popf
mov
or
loopne
and
mov
aam
sub
xchg
push
adc
push
and
lcall
dec
shrb
or
mov
push
mov
bound
push
cmp
cmpsb
xor
xchg
icebp
xor
pop
dec
mov
sub
out
test
xchg
pop
cwtl
mov
call
xchg
xchg
int3
push
movsb
jnp
cmpsb
jbe
or
inc
or
jb
insl
jbe
xchg
mov
pop
and
scas
ja
adc
clc
gs
cld
inc
std
pop
mov
pushf
addb
dec
int3
sti
jge
test
jne
dec
xchg
push
fdivrl
dec
lret
int3
or
jnp
rol
mov
jno
and
and
cmc
xor
or
cmc
or
insb
cmp
outsb
rcrl
test
ja
lret
das
incl
push
sub
xor
sbb
mov
mov
leave
jbe
mov
lahf
imul
mov
clc
lahf
sti
in
rcrb
and
shrb
pop
and
jae
dec
or
fs
xor
sub
jo
inc
jae
cs
flds
cwtl
pusha
and
mov
dec
cld
daa
xchg
call
pop
mov
push
jne
imul
add
es
lahf
push
add
jp
dec
sub
das
sbb
ljmp
dec
stos
jns
push
xchg
aaa
addr16
mov
sahf
or
sub
push
push
adc
jbe
in
xchg
pop
js
mov
dec
test
xor
outsb
xor
aam
push
dec
jecxz
or
ret
and
jb
push
mov
mov
icebp
pop
rcl
dec
jecxz
rorl
push
je
mov
cmpsl
pop
cmpsb
loope
jp
push
clc
cmp
mov
aam
xchg
pop
fcom
mov
cmpb
les
icebp
test
sarb
jns
pop
fdivl
sub
cmpsb
cmp
jae
bound
cltd
add
xor
pusha
mov
loope
mov
es
clc
jbe
push
or
cmovp
cmp
ds
out
punpckhdq
xchg
sub
fiadds
lods
into
js
ss
inc
xchg
out
lods
aad
xchg
cmp
movsl
jns
loop
xchg
fstl
movsl
adc
jo
hlt
and
fs
inc
inc
jl
jge
mov
xor
mov
adc
jbe
ret
mov
fistl
nop
mov
jg
xchg
bound
sahf
add
push
push
popf
or
adc
pusha
pop
inc
push
dec
adc
lea
decb
movsb
mov
cwtl
jecxz
aas
pushf
or
js
cmp
and
cli
fidivl
dec
push
test
into
adc
inc
mov
int
shlb
push
adc
test
inc
out
andb
fs
xor
movsl
and
ljmp
aaa
out
rclb
mov
pushf
mov
pop
and
sbb
jo
jecxz
lcall
pop
and
and
mov
test
mov
cmp
loopne
inc
jmp
test
xchg
add
pop
ret
xor
cmp
inc
out
jp
aaa
dec
lahf
popa
lods
popf
fwait
adc
cmpsl
fwait
sub
or
imul
dec
push
cmp
loopne
xchg
mov
dec
mov
push
imul
cwtl
pop
test
mov
js
jp
pop
sub
pusha
jle
jb
cmp
mov
pop
cmpl
ret
mov
inc
cs
xor
test
das
popf
add
fwait
aad
cmpsb
addl
shr
push
outsl
mov
dec
ret
or
dec
or
icebp
sarl
and
mov
in
jae
ds
xchg
mov
cmc
leave
cld
fstps
push
dec
jp
outsl
jge
push
push
xlat
rolb
and
jns
stos
jne
mov
mov
adc
das
adc
cmpsl
xchg
out
adc
xor
lret
adc
popa
pusha
loopne
adc
jmp
sub
mov
popa
pop
cmp
out
cmpsb
lcall
imul
push
movsl
jne
cs
adc
hlt
cmp
and
sahf
jb
lds
jae
stos
add
fisubl
xchg
clc
xchg
push
ljmp
fsubl
popa
and
fistl
xchg
mov
bound
in
push
sti
outsl
ret
orl
dec
or
jno
sahf
pop
inc
inc
pop
addb
lock
sub
fs
mov
add
dec
mov
in
dec
add
inc
cli
and
cli
mov
mov
test
out
mov
jecxz
xchg
jno
sbb
add
add
xchg
aam
push
dec
lods
mov
icebp
fs
xchg
sub
mov
mov
sbbl
jge
fisttps
or
dec
mov
xor
jle
lret
in
repnz
pop
ljmp
fsubr
pusha
cli
addr16
int
aam
divl
mov
pop
xorb
sbb
in
adc
push
fwait
bound
mov
push
negl
rcl
push
jmp
inc
test
inc
push
xchg
sub
out
xor
sbb
xchg
cltd
add
test
roll
inc
push
pushf
rsqrtps
mov
out
in
cs
pop
out
xchg
jae
push
inc
xor
hlt
fstpt
lret
dec
inc
xor
dec
inc
rorb
fsub
inc
lcall
cmc
inc
rclb
push
add
cmp
or
jae
pushf
insb
test
hlt
and
pop
jae
lret
rorb
push
lcall
xchg
daa
mov
popf
mov
int3
or
das
enter
ret
dec
xchg
mov
sub
inc
dec
test
cmpsb
mov
ror
mov
mov
mov
movsb
roll
xor
loope
sahf
pusha
lret
aad
in
push
cmpsb
xor
pop
test
xchg
arpl
stos
dec
mov
cld
adc
idiv
loopne
mov
xchg
adc
aad
jae
ret
and
pop
insl
inc
lcall
out
cmp
adc
aaa
mov
inc
mov
push
xchg
arpl
out
cs
ds
xchg
xor
sub
leave
adc
inc
rolb
mov
dec
sub
cmp
xchg
insb
gs
roll
xor
add
in
pop
icebp
inc
out
popf
push
dec
insl
test
loope
orb
ss
fists
jle
ret
push
ss
adc
pusha
mov
adc
ret
arpl
call
sbb
or
mov
xchg
sahf
or
sahf
add
lds
and
fnsave
leave
jp
inc
xchg
pop
inc
subl
or
cmpsb
adc
adc
xor
loope
xchg
aaa
pop
pop
xor
sub
sahf
push
lock
pop
sbb
xchg
pop
shr
daa
jl
inc
mov
sti
adc
dec
sub
mov
leave
repnz
shl
cmp
xor
loopne
mov
shll
pop
mov
xchg
or
or
lea
pop
cmpsl
das
dec
sub
cs
xchg
ret
movsb
jge
xchg
lcall
adc
stc
mov
aam
aam
fstl
rolb
dec
cmpsb
dec
cmp
negb
cmp
sbb
pop
loope
push
in
mov
mov
adc
pop
adc
loop
adc
and
cmp
mov
mov
adc
out
loope
jb
sarl
push
out
cmp
and
ljmp
cmc
xchg
pop
lea
xor
rcr
mov
loopne
sub
jmp
clc
out
or
mov
add
out
idivl
mov
xor
outsb
pushf
mov
xchg
pop
bound
push
xor
iret
ja
sti
shlb
je
daa
xor
inc
cmp
jno
cmpsb
pop
jl
cmpsl
pushf
cmp
cmpl
or
mov
sarb
and
mov
fcom
scas
cwtl
push
out
sbb
xchg
popa
or
int3
jbe
push
inc
rcl
or
add
sahf
add
sahf
push
jne
mov
xor
inc
stos
jns
mov
and
pop
push
outsb
sub
idivl
jg
sub
rorl
pop
jmp
mov
dec
xchg
leave
and
les
pusha
mov
mov
ljmp
xchg
pop
daa
pop
gs
sti
pop
fs
in
mov
add
rcll
pop
xor
xor
push
or
pop
and
out
xor
leave
sbb
add
cmp
out
cmp
mov
test
sub
aaa
outsl
idivb
je
arpl
stos
add
jo
ud1
cmc
mov
in
fisubrl
subl
add
js
out
js
clc
mov
mov
rclb
add
jge,pn
sub
xor
loop
je
in
xlat
cmp
mov
mov
aad
gs
xor
fwait
stos
loop
adc
loopne
add
out
jecxz
adc
cmp
or
ljmp
xor
pop
in
dec
scas
or
ret
and
xchg
enter
movsl
dec
inc
pushl
xchg
push
adc
push
movsb
fistl
or
pop
xchg
fsubs
push
aas
or
or
int3
push
icebp
cmp
movsl
mov
fcompl
jbe
test
fnstenv
in
xchg
in
loop
jge
mov
dec
into
pop
sbb
fmull
mov
lcall
ss
sbb
mov
dec
jne
mov
inc
sbb
aaa
scas
push
pop
xchg
shr
pop
rcrl
gs
rcr
nop
jp
ja
stc
pop
mov
sbb
pop
xchg
idiv
add
cltd
add
call
int
mov
gs
mov
iret
dec
jge
xchg
aad
add
mov
sbb
test
xlat
out
and
call
and
ds
fwait
or
lahf
in
inc
mov
scas
sbb
lret
addr16
ss
xchg
xchg
jbe
sub
or
push
cwtl
and
imul
pop
push
testl
jae
bound
push
stc
scas
sub
ret
push
aas
in
repnz
gs
sub
dec
inc
gs
jecxz
sub
out
mov
sub
enter
subb
loop
inc
dec
js
and
mov
stc
cmp
popa
mov
xor
cli
pop
sbb
push
add
jge
stos
jl
and
out
inc
into
insl
je
loope
outsb
sub
movb
outsl
xor
mov
xchg
out
jp
clc
jae
frstor
test
mov
mov
pop
bound
sti
push
mov
pusha
xchg
pop
dec
in
add
pop
push
negl
stc
jmp
fwait
mov
add
imul
aad
arpl
xchg
insl
jo
jae
dec
inc
shlb
aaa
xchg
sbb
test
sbb
dec
sarl
fmuls
in
mov
dec
int
out
shlb
add
adc
or
add
jecxz
popa
mov
sbb
cld
add
lock
ret
pushf
shlb
addr16
inc
dec
test
jg
into
inc
jle
repz
mov
push
jmp
sub
sarl
data16
shll
jle
add
mov
pop
dec
scas
lret
adc
lret
xor
or
cld
cmp
cmp
push
mov
cwtl
into
jno
fisttpl
arpl
cmpsb
test
xlat
lods
mov
dec
and
out
lds
dec
sbb
mov
lahf
cmp
outsl
loop
add
scas
and
cmpsb
fdivp
mov
dec
inc
push
repnz
insl
loop
stc
outsl
sub
mov
pusha
fsubrs
push
jmp
movsl
sub
clc
jae
pop
cld
jge
mov
inc
pop
mov
ret
fsin
fcmovb
lds
push
pop
ljmp
movsb
insl
in
out
orb
sub
shlb
ljmp
stc
test
in
sub
jns
inc
xchg
imul
addr16
psubsw
inc
aaa
adc
inc
or
inc
mov
jae
mov
pop
repnz
or
pop
lock
outsl
cmpb
repz
jo
pushf
movsl
daa
pop
jl
pop
ret
mov
lods
jb
xor
mov
sub
sbbb
pushf
mov
and
fiadds
pop
out
rorl
cmpps
insl
adc
fisttpl
popa
ret
jl
lods
mov
sub
jns
mov
xchg
sub
mov
lods
les
mov
sub
push
cmp
iret
push
fwait
inc
xor
repz
xchg
mov
fcmovu
fimull
shll
xor
mov
pop
cli
sahf
sbb
movsl
loope
inc
pop
push
push
arpl
push
in
dec
fbld
inc
aaa
mov
lret
cli
pop
adc
repz
push
sbb
out
and
xchg
xchg
test
sahf
sbb
aam
dec
mov
enter
mov
xchg
add
mov
hlt
and
dec
shrl
stc
pusha
xor
shlb
aam
fimuls
mov
inc
sbb
mov
and
movsl
shrl
mov
std
lret
jmp
hlt
shll
ficompl
sbb
popf
mov
xchg
lret
mov
mov
adc
xor
mov
imul
bnd
ss
cld
mov
pop
enter
push
es
les
popa
stc
jp
into
cltd
mov
adc
push
mov
rcr
dec
stos
nop
arpl
lea
ror
cmpsb
inc
sub
mov
sbb
repnz
xor
adc
daa
pop
out
cwtl
inc
cmp
or
movsb
xor
xchg
cli
in
movsb
scas
push
and
inc
mov
lahf
cmp
fistl
mov
pop
lock
mov
cld
jno
sbb
cwtl
call
imulb
paddusw
sub
in
inc
push
js
daa
aam
mov
adc
cwtl
jecxz
nop
jnp
aam
leave
test
push
imul
ror
xchg
mov
and
fs
out
mov
inc
inc
push
xorl
bswap
cmpsb
iret
or
add
insb
in
mov
or
pushf
add
and
cmp
mov
adc
cs
loop
adc
push
jo
je
pop
out
lret
mov
mov
jge
jge
mov
popf
add
imul
shl
xor
pop
hlt
inc
psrad
dec
das
test
fcmovne
enter
pop
dec
pop
xchg
ret
test
adc
jae
mov
xchg
stos
jno
lods
mov
jp
jp
inc
pushf
cmp
sub
dec
sbb
xchg
mov
lret
aaa
sbb
sti
and
out
dec
push
mov
inc
add
shll
xchg
fs
dec
push
je
repz
setns
inc
push
gs
subb
inc
xlat
push
psubb
mov
aam
loop
inc
loope
out
ss
push
stos
arpl
push
test
inc
adc
stos
stos
jmp
test
and
jae
out
pop
dec
movsb
mov
loop
pop
mov
xchg
xor
inc
daa
fwait
inc
mov
loopne
cmp
xor
cmp
push
ja
push
sub
add
das
cmp
and
pop
cmp
pop
jns
js
pop
insb
pop
jge
out
andb
shr
lcall
je
stos
lret
repz
outsl
lahf
pop
ret
subl
lds
ret
out
xchg
xchg
out
shr
imul
jo
movsl
or
jne
xorb
xchg
testl
data16
fwait
cmc
inc
xchg
or
bound
popf
sbb
and
mov
je
notl
mov
jmp
aad
inc
rorb
and
insb
xchg
add
imul
mov
ficoms
stos
cld
lret
sar
xorb
push
movsl
in
roll
aas
xor
inc
ss
lock
sbb
fs
cmp
insb
mov
push
and
xor
dec
popa
xor
jbe
addr16
loop
jnp
jb
push
pop
sbb
push
and
push
cmp
sbb
shll
mov
push
shll
jo
and
or
ret
jle
or
jnp
outsb
cmp
sbbb
call
test
xorb
int3
sub
notb
add
cld
dec
aam
mov
clc
and
mov
in
xlat
popa
or
mov
lcall
hlt
xor
and
rorb
cltd
pop
insb
lock
mov
iret
add
test
test
jecxz
int
pop
push
cmp
ret
mov
jae
shlb
fcoml
outsb
adc
mov
int3
int3
inc
ds
xor
lods
rorb
lods
push
inc
scas
and
inc
mov
adc
sub
rclb
sahf
pop
xchg
lock
mov
pop
mov
sbb
std
ficompl
dec
push
jg
fiadds
lock
outsl
xchg
xchg
jns
pop
cwtl
js
jecxz
pop
data16
cmp
pop
mov
in
inc
roll
pop
pop
and
fsubrs
fbld
into
adc
sbb
in
jns
movl
mov
mov
outsl
dec
push
inc
repnz
in
mov
mov
imul
scas
fldl
xchg
popa
mov
icebp
addr16
sub
or
sbb
sub
shl
push
pushf
push
loop
push
imul
in
in
mov
lret
push
sbb
test
xchg
jb
cmp
fmuls
fsts
out
adc
add
stos
or
incb
push
incb
fistpl
and
lea
jge
test
xchg
adc
xor
and
xchg
xchg
xorb
pushl
movsl
pop
cmpsl
jl
mov
fmull
lahf
pop
jns
pop
clc
push
lock
jge
cmp
pop
fidivrl
mov
pushl
das
leave
repz
cwtl
sbb
mov
decb
xchg
mov
xchg
call
push
out
cmp
or
test
dec
fstp
aaa
std
jne
mov
hlt
mov
mov
add
popf
bound
xchg
mov
xchg
lcall
and
movsl
pop
insl
cs
lea
lahf
jp
add
inc
adc
mov
imul
daa
cld
and
imull
lret
jg
and
nop
and
mov
pop
shrb
popf
sub
sub
add
bound
cmp
adc
outsl
jl
jg
call
mov
or
pop
imul
push
dec
pop
in
adc
dec
xchg
sub
cmc
mov
mov
out
dec
aad
xchg
jnp
xor
ret
sahf
mov
jbe
cmpsb
lock
fwait
mov
dec
scas
jnp
mov
cli
jmp
int3
test
add
mov
insl
ret
pop
dec
arpl
insl
repz
adc
jl
jp
movups
shlb
xor
jg
shll
inc
in
jmp
and
lret
push
xchg
sar
mov
dec
jle
add
cltd
cmpsl
dec
aas
mov
idiv
mov
mov
rorl
pop
mov
sbb
leave
cld
pop
jecxz
cmp
pop
xor
sbb
lods
jp
shl
imul
pop
and
jbe
popf
mov
lahf
jbe
lea
and
push
fisttpll
lret
mov
jns
fs
pop
cmp
mov
leave
mov
notb
xor
sub
mov
jle
test
test
shlb
dec
pop
mov
inc
mov
fstps
mov
jb
mov
mov
jnp
shll
xchg
xchg
push
adc
jae
dec
mov
dec
aas
push
mov
imul
shlb
sti
repz
cld
and
ret
or
push
and
pushf
aas
mov
mov
les
sub
int
stc
scas
adcl
mov
insb
mov
add
jne
push
in
mov
and
cmp
inc
cmpsl
into
sti
mov
aam
fwait
aas
inc
cmpsb
je
movsl
xor
jl
cli
push
stc
adc
sbb
outsb
cmc
mov
cmp
mov
cmp
or
lcall
xor
popa
cs
push
pop
addr16
jl
or
push
loop
mov
rcll
mov
xlat
jno
shl
mov
and
push
pop
lret
lock
sbb
cmpsl
lea
cmc
insb
lret
pop
shrl
add
mov
cmpsl
in
into
ds
test
sbb
sub
loope
adc
xchg
push
sbb
xor
mov
mov
movsb
enter
xchg
ja
cmp
xchg
cmc
mov
roll
jbe
xchg
add
imul
test
mov
dec
js
add
xor
rol
out
jl
xacquire
jnp
movsl
aam
push
stos
xchg
add
inc
outsb
scas
out
pop
in
pusha
nop
inc
mov
pop
loopne
rorb
call
iret
jg
imul
dec
fwait
out
mov
push
idivl
jbe
xor
mov
mov
jnp
sub
fwait
and
mov
mov
std
jno
hlt
test
lods
sbb
arpl
and
dec
jae
lods
data16
aam
xchg
inc
dec
push
mov
and
lret
mov
test
shll
mov
cwtl
pop
pop
jae
pop
add
jg
loopne
jns
subl
jle
ja
ja
add
push
fcmovb
pop
and
adc
icebp
cli
xchg
stc
lret
and
inc
xchg
icebp
loopne
or
pop
jns
clc
hlt
int3
repnz
idiv
mul
dec
loopne
or
outsl
dec
subb
add
fisubs
sub
movsb
adc
lahf
in
je
clc
gs
dec
popa
inc
fwait
push
pop
rcll
lahf
xchg
or
adc
cmc
lahf
scas
js
hlt
icebp
add
clc
mov
jge
add
in
push
movsb
and
lds
mov
xor
ja
test
lret
and
or
mov
cmpsb
jbe
std
lods
sti
ss
lahf
aad
jbe
or
in
inc
dec
loopne
cmp
subb
in
es
movsb
xlat
loopne
pop
or
xor
bound
loope
xor
push
lahf
out
fcoml
cmp
incb
inc
pop
and
dec
test
ljmp
movsb
movsl
in
mov
outsb
in
or
test
jnp
iret
adc
cmpsb
lahf
pop
cmp
divl
ss
mov
inc
cwtl
xor
and
je
sbb
fwait
lea
pop
or
xchg
ja
cmp
sub
popf
xchg
mov
pushl
and
dec
in
sbb
mov
loop
xlat
xchg
sbb
pmaxub
push
push
scas
push
add
int3
aaa
or
fsubrs
mov
xchg
fs
sahf
fisubs
pushf
mov
repnz
mov
orb
in
adc
inc
inc
dec
or
lods
push
rcrl
cli
pop
test
sbb
cmp
inc
jno
push
lock
pop
cwtl
leave
sbb
push
in
mov
orb
cmc
mov
cltd
ffreep
in
out
inc
mov
xlat
and
lahf
outsb
fstp
xchg
shll
lahf
inc
add
repz
push
lods
sub
rclb
std
jmp
rclb
pushf
or
std
cmp
xchg
imulw
fidivrl
out
in
stc
xchg
andl
int
dec
and
push
lock
pop
in
les
sbb
push
gs
and
pop
ret
lods
inc
mov
call
aaa
pop
nop
adc
orb
pop
push
ja
cmp
je
dec
dec
mov
daa
mull
mov
push
cld
and
cmp
xchg
pop
add
or
cmp
sahf
mov
sbb
push
call
sub
jmp
orb
and
pushf
gs
bound
aad
pop
inc
adc
dec
cmc
dec
loopne
mov
popa
in
daa
push
mov
inc
mov
loopne
adc
cmc
test
aad
fidivrs
ljmp
je
iret
adc
xor
xchg
js
mov
pop
pop
xor
sub
push
push
push
and
and
mov
testl
xchg
xor
dec
pop
xchg
lods
movsl
pop
test
pusha
push
clc
test
inc
xor
je
mov
sbb
fbstp
test
ret
lahf
push
repz
mov
sub
dec
mov
rorl
movsb
bound
mov
dec
sub
mov
std
leave
mov
xor
into
push
es
jle
ret
push
mov
movsl
test
shrl
mov
add
pop
sarb
sub
in
mov
rsm
fisubs
dec
aad
test
jno
pop
adc
call
jb
push
enter
pushf
cld
pusha
xor
sbb
lock
dec
and
lods
xor
das
jecxz
leave
jnp
cltd
ds
or
in
cmp
jno
popa
in
cmc
mov
test
mov
movsl
dec
lods
cwtl
leave
shl
in
push
mov
jl
add
mov
cmp
mov
rcrl
push
mov
or
cmp
jno
add
das
mov
pop
push
push
mov
pop
push
cli
enter
pop
dec
inc
fistps
mov
xor
data16
jae
add
and
push
mov
xchg
dec
icebp
rcrl
push
and
jge
xor
inc
jnp
and
lcall
sbb
scas
mov
lahf
jne
mov
fcmovne
lods
mov
lods
fbstp
mov
test
dec
ja
xor
lcall
lret
mov
out
dec
cmp
ss
pop
fildll
imul
sarb
lock
lret
mov
jmp
mov
pop
xor
pminsw
adc
mov
out
xlat
mov
in
int3
add
add
mov
cmpl
jp
jecxz
mov
and
jo
movsb
in
xchg
xor
sub
pop
fldt
pop
xor
sbb
enter
sub
sbb
sbb
in
mov
mov
pushf
aam
xchg
mov
scas
gs
dec
inc
push
in
xor
dec
jns
cmpsl
insb
fdivrl
stos
inc
jb
test
jb
mov
push
pop
and
into
into
arpl
sahf
bound
pusha
orb
jp
icebp
mov
sub
test
sarl
or
dec
lret
shl
lret
scas
or
cmpsb
lea
mov
fsubrs
dec
daa
lret
arpl
movsl
xchg
mov
push
aad
push
cmp
xchg
mov
jne
jmp
mov
out
lret
stos
push
add
sub
fs
cmp
sub
lret
icebp
pause
dec
pushf
xchg
push
decb
mov
arpl
jg
out
in
dec
aas
pop
add
enter
in
pop
or
stc
ljmp
leave
pop
mov
popa
or
jl
int
repz
lds
cmpsb
jmp
mov
les
or
es
jmp
inc
cmp
push
ja
repnz
jmp
jns
mov
xchg
xchg
jle
loop
mov
mov
jns
xlat
daa
mov
mov
movsb
popf
mov
es
lret
sbb
insl
xchg
outsb
jl
xor
dec
test
bound
lret
shl
dec
adc
fcmovnbe
inc
jmp
push
jge
lcall
pop
push
lods
and
xor
dec
mov
popa
mov
inc
popa
scas
in
add
fs
cmpsb
sbb
add
jp
push
mov
push
fwait
out
ss
lds
lds
cmc
xchg
jno
xchg
mov
pop
sub
fistl
lods
mov
in
and
ds
jle
jbe
out
or
in
dec
jge
cld
or
jg
aad
outsb
shll
int3
cld
das
cmc
fmuls
pop
lea
hlt
sahf
mov
movsl
test
inc
sub
mov
data16
pop
out
sub
imul
push
cmc
int3
xor
mov
add
mov
xor
adc
xchg
dec
aaa
mov
out
outsl
int
mov
fidivrs
pop
das
push
sbb
fistpll
int3
push
outsl
aas
dec
sub
out
ret
imul
das
dec
dec
cmc
push
sar
mov
mov
outsl
add
or
mov
add
out
aad
jno
daa
and
inc
push
sbb
xchg
xlat
lds
xor
das
push
xor
in
sti
xchg
cmpsb
int3
ljmp
add
lea
pop
xchg
jge
or
arpl
xchg
incl
in
sub
jl
movsb
test
mov
mov
leave
lret
fdivl
mov
pop
cld
or
sti
in
push
adc
add
mov
rolb
sub
sbb
inc
mov
daa
sbb
stos
pop
inc
pop
nop
stos
mov
sbbb
push
jecxz
dec
scas
dec
push
jg
test
or
cmp
cmp
into
xor
pop
rcl
jmp
sub
loope
lret
fidivrs
mov
rorl
jmp
rcrb
push
mov
fnstenv
pop
filds
in
cmc
xor
sbb
lods
addr16
scas
arpl
push
pop
inc
mov
jge
mov
ret
add
call
outsl
lds
jne
test
gs
jge
inc
out
push
into
test
loop
in
jmp
mov
ret
ret
and
fnstcw
rolb
fcmovbe
ret
xchg
jne
movsl
xor
mov
push
sbb
popl
fs
mov
std
out
cmp
sti
mov
push
fcmovne
scas
xor
push
bound
popa
xchg
xor
lods
ja
dec
and
jp
mov
xchg
pop
push
inc
lea
xchg
adc
lahf
lods
add
or
dec
xchg
mov
push
addr16
pop
or
les
xor
rcl
call
dec
movsb
sbb
xlat
aas
negb
pop
in
push
fsubrp
popa
xor
cs
xlat
repz
pop
pop
jno
mov
push
pop
or
inc
adc
mov
aam
dec
inc
sbb
sar
call
mov
jnp
dec
xchg
scas
test
sti
jno
sti
fs
cmp
out
sbb
mov
lock
lret
loopne
adc
or
outsl
cmp
lahf
dec
jo
sbb
sahf
inc
cmp
mov
nop
call
dec
icebp
lds
dec
lea
fdivrs
push
push
jmp
loope
sbb
cmpsl
xor
adc
xchg
imul
add
add
mov
xchg
sahf
jle
pop
cs
out
dec
inc
jne
sub
push
cwtl
mov
inc
test
or
or
ret
sbb
add
jae
enter
and
xchg
xchg
subb
loope
jmp
pop
add
setg
ljmp
mov
cmpsb
in
dec
mov
jecxz
pushfw
mov
mov
mov
decb
dec
pop
icebp
pusha
jmp
je
adc
or
loopne
shrl
inc
cmc
push
movsb
adc
mov
or
shl
fsubr
out
in
ret
mov
addr16
cmpsb
xor
cmp
push
addr16
faddl
sti
negb
inc
aas
mov
fwait
inc
sub
popf
mov
pop
pushf
push
pop
sarb
mov
dec
adc
mov
mov
imul
mov
cmpl
pop
pop
sub
or
push
mov
rcll
fmuls
push
fstpt
pushf
into
shlb
push
std
jge
lds
iret
inc
dec
ja
and
aam
jl
loop
setge
jl
cmp
pushf
mov
inc
push
mov
jno
jle
daa
lahf
mov
or
nop
dec
mov
mov
nop
dec
movsb
cwtl
cli
mov
cmpsb
dec
pop
or
scas
fsub
testb
movl
call
cmpsl
xor
jg
repz
js
stos
rorb
inc
test
lahf
out
mov
and
push
pop
scas
add
lahf
lds
add
adc
mov
mov
sub
mov
sub
push
int3
dec
lret
lock
mov
pusha
xchg
addb
inc
pusha
or
or
jns
mov
xchg
mov
pop
add
adc
nop
leave
mov
cmp
mov
mov
jae
cmc
cmp
shlb
test
pushf
roll
add
enter
mov
popa
or
popf
jae
push
add
mov
cmp
andl
fimuls
daa
lods
cmp
les
xchg
sub
mov
insb
mov
sbb
xor
sub
jae
and
sbb
or
aaa
int3
lret
icebp
xchg
pop
jnp
jae
mov
out
and
test
and
cmp
je
dec
es
stos
lods
dec
arpl
cmp
sahf
daa
push
arpl
xor
fwait
sbb
outsl
insb
mov
pop
iret
jo
pushf
cmp
cmp
roll
fdiv
pusha
or
jg
push
gs
adc
imul
idivb
mov
jo
mov
flds
push
pop
test
adc
aas
clc
xor
loope
dec
andl
lods
stc
sbb
xchg
subb
add
adc
inc
gs
dec
adc
inc
clc
fwait
jp
lahf
dec
hlt
out
jne
push
fidivrl
inc
xchg
mov
and
mov
in
or
cs
jns
mov
pop
sti
leave
mov
push
mov
cmp
dec
sbb
jecxz
xchg
mov
pop
test
and
mov
daa
out
mov
stos
sbb
retw
sbb
rcrl
jge
in
in
sbb
cmp
jno
scas
and
cltd
xor
inc
mov
adc
push
notl
push
lcall
in
inc
scas
xor
push
add
shrl
dec
mov
bound
push
or
mov
push
sbb
dec
xchg
repnz
cmc
add
mov
mov
cmpsl
mulb
icebp
inc
ja
push
adc
int3
adc
in
movsb
inc
aas
push
sub
aaa
in
sbb
mov
or
lahf
popf
push
in
clc
xor
cld
movb
push
push
popa
lahf
loope
cmp
setge
sahf
inc
int3
xchg
mov
dec
xchg
xlat
lret
movl
jl
hlt
pop
cwtl
aas
stos
movsb
adc
stos
xor
mov
icebp
or
mov
test
sahf
pop
cltd
popa
pop
and
mov
dec
xchg
in
outsl
inc
rorl
push
sahf
test
sub
faddl
movsl
inc
pushf
test
sbb
daa
dec
aas
loope
ficoml
enter
fstpl
mov
jmp
mov
xor
dec
out
int
adc
cmpb
hlt
mov
jl
aaa
movsb
fidivs
jno
sti
call
dec
sub
xlat
repz
rorl
pop
ret
test
ret
popf
fldt
repnz
fcoms
sbb
dec
push
push
inc
lods
jae
jnp
stos
lea
popa
fwait
addr16
push
mov
mov
into
cmc
out
pusha
mov
mov
jmp
ss
jecxz
mov
xchg
add
adc
es
pop
and
xor
leave
mov
or
hlt
dec
fwait
into
mov
fsubrl
insb
into
pop
mov
jge
sub
add
rcrb
or
push
mov
adc
rorl
xchg
inc
adc
arpl
and
pop
test
sub
mov
xchg
andw
ret
movsl
popf
lret
jnp
adc
mov
jmp
and
jae
push
ret
mov
movsb
loop
repz
cmp
jmp
sub
imul
jbe
mov
dec
mov
les
jle
cmp
cmp
std
outsb
mov
ss
jle
inc
cmp
xchg
xor
and
jmp
jg
push
add
and
inc
fwait
cli
call
cmc
cmp
sub
pop
inc
call
sub
lahf
lock
cmp
push
addr16
sbb
xchg
mov
imul
pop
rorl
dec
int3
xchg
outsb
das
ss
or
xor
cwtl
ror
frndint
push
int
cltd
lods
lret
and
movsl
popf
sub
insb
roll
std
and
adc
push
push
push
dec
pop
inc
inc
mov
fcoml
shrb
mov
imul
xor
xchg
mov
aad
and
mov
dec
shl
pushf
or
xchg
loopne
movsb
mov
or
cld
int3
mov
jmp
lea
lcall
mov
or
mov
pushf
xor
aad
in
pop
jmp
jo
stc
in
dec
sub
std
ds
xchg
pop
xor
sbb
xchg
add
mov
inc
aad
pusha
cld
std
jl
jne
sbb
push
inc
test
fidivl
and
rolb
and
ss
insl
bound
incl
xlat
aas
loope
loop
jne
sbb
cmp
bound
dec
mov
push
clc
mov
push
xchg
mov
fldt
lcall
out
mov
pop
jmp
cmp
repz
cvtps2pd
clc
cmp
and
mov
sbb
int
ret
and
stc
fsubr
xchg
popa
nop
and
jb
cmp
xor
jge
xchg
sub
jl
and
mov
push
push
jbe
bound
leave
push
dec
pusha
cltd
ret
adc
imulb
gs
cmp
pop
jmp
sbb
pushf
iret
mov
imul
insl
loope
arpl
je
std
addr16
cwtl
clc
js
stc
push
call
dec
fisttpl
aaa
fstpl
inc
cmp
push
mov
pop
repz
adc
jae,pn
mov
xchg
frstor
stos
mov
push
mov
mov
out
push
popf
leave
mov
pop
xor
mov
inc
outsb
xchg
jnp
sub
lea
add
repnz
jb
pop
pushl
dec
push
push
jmp
cmp
enter
mov
lea
loope
fadd
sbb
icebp
sbb
jle
jae
insb
lret
xchg
jnp
push
lods
negl
mov
test
fmul
outsb
xor
xor
add
and
push
js
ret
repz
pop
sarb
aaa
scas
mov
fwait
cmpsb
xchg
icebp
mov
and
inc
xor
xchg
mov
ret
xor
and
xchg
shrl
mov
fwait
and
in
mov
cmpsb
addr16
dec
lret
or
xor
cmp
or
pop
test
lahf
xor
enter
int
ss
lret
or
and
dec
fs
scas
pop
into
mov
fbld
imul
push
imul
fldenv
inc
mov
jbe
lods
test
in
pop
mov
add
sbb
iret
fisttpl
cmc
repz
mov
ret
jo
outsl
mov
adc
or
jno
pop
hlt
data16
repz
outsl
lods
push
mov
inc
lock
test
jmp
lock
lret
int
add
mov
mov
jbe
and
int
jo
ret
mov
loop
lods
stc
jns
jnp
hlt
inc
mov
push
mov
mov
repz
mov
pop
push
cltd
or
das
mov
adc
out
xor
jo
inc
adc
out
add
sbb
lds
fwait
xlat
inc
cli
jb
sbb
sbb
pop
idivb
mov
dec
xchg
jle
jb
lds
aaa
fwait
jmp
mov
pop
sti
mov
sbb
testl
inc
or
in
data16
and
mov
jle
je
scas
xchg
mov
jne
jae
movsl
testb
sbb
scas
movsl
stc
popa
xchg
push
mov
cld
dec
lods
outsl
das
mov
or
iret
sub
xchg
mov
dec
lods
sar
jns
mov
push
scas
cs
and
mov
rcrb
ds
dec
test
mov
iret
pop
movsl
mov
push
jl
and
xchg
inc
mov
adc
test
xor
sub
fsubrs
xor
int
pop
in
cmp
mov
pop
fiadds
cmpb
rolb
mov
sbb
pop
sarb
inc
sub
out
lods
and
lods
inc
mov
fwait
sbbb
int3
int3
sbb
jne
sbb
push
lret
rcrb
sarl
fwait
add
jp
sbb
movsl
movsb
mov
lea
adc
adc
hlt
xchg
lds
xor
inc
cmp
mov
cmp
cmp
and
mov
cmc
dec
and
jnp
mov
adc
mov
and
je
pusha
ljmp
push
push
jnp
add
push
sarl
aad
dec
fildl
addr16
stos
test
xor
mov
cld
mov
adc
mov
push
xchg
mov
xor
mov
jl
cmp
jb
out
xchg
movsl
in
jmp
nop
jnp
pop
cmp
cmc
mov
inc
call
fucomi
push
push
lret
sub
or
pop
jmp
pop
or
outsl
or
out
sti
into
dec
cmpsb
and
mov
cli
std
cmc
pop
mov
jnp
or
fsubl
test
sbbb
xor
mov
sbb
ret
lds
or
adc
pusha
pop
aaa
or
or
push
in
int3
sbb
bound
sbb
imul
dec
xchg
dec
rolb
mov
int
shll
int3
xchg
and
pop
mov
pop
fistl
aaa
jae
loopne
popf
and
mov
xchg
inc
dec
sub
aas
lahf
or
fstl
fimull
sub
cmp
mov
loop
and
cmpsl
or
insb
and
push
xchg
pushl
inc
in
test
int3
jmp
push
xchg
or
cmpsl
mov
das
nop
mov
mov
rcr
mov
dec
rolb
add
mov
cmp
xchg
sahf
pop
out
mov
ror
xor
xlat
inc
rol
add
inc
push
incb
and
rorl
and
out
lret
inc
mov
xchg
das
in
stos
or
repz
mov
in
xchg
jbe
or
dec
pop
sti
rolb
ss
out
rcll
add
ja
pop
hlt
jecxz
arpl
sbb
jae
dec
pop
inc
daa
pusha
inc
xor
push
cwtl
xchg
xchg
jl
cmp
xor
stos
dec
xor
fwait
int
pusha
jnp
in
jmp
leave
add
in
enter
icebp
dec
jmp
mov
push
fdivrs
pop
test
pop
mov
mov
popa
in
pop
cmp
popf
sub
adc
lea
pop
mov
dec
cli
push
dec
ficoml
test
clc
sbb
out
pop
ja
shlb
enter
add
mov
mov
insb
mov
mov
movl
test
lret
jae
rolb
push
push
pop
insl
lds
sahf
ja
inc
xchg
mov
leave
sbb
dec
gs
ss
add
cmpl
xor
add
fwait
test
inc
pop
scas
int3
adc
in
push
dec
cmp
loop
xlat
repz
jle
adc
or
pop
lds
std
imul
dec
mov
xor
stc
lret
shlb
sarb
out
das
cwtl
adc
push
inc
test
and
push
mov
cmp
cmc
ret
jns
inc
mov
mov
imul
dec
jg
add
dec
pop
leave
repnz
dec
sbbb
push
add
push
xchg
lret
push
sbb
push
mov
movsl
xor
gs
fistl
dec
sbb
insb
std
fmull
push
pop
pop
xchg
and
dec
mov
dec
mov
adc
loopne
push
out
sub
sahf
sub
inc
push
jns
rorl
mov
les
adc
loope
xor
stos
sbb
jno
outsl
insb
push
movsb
sbb
cmp
or
leave
fidivs
adc
xchg
mov
mov
shl
cli
popl
fucom
js
jnp
das
push
mov
fwait
ja
push
jnp
int3
mov
mov
imul
rorb
lahf
fdivrl
mov
imul
sub
int3
repnz
add
dec
stos
jg
jae
xchg
sti
bound
les
inc
ret
rcrl
dec
and
jnp
stos
fwait
and
out
fadds
cmp
rorl
inc
lods
cltd
andl
pop
ret
btrl
bound
aaa
fldcw
xor
dec
mov
pop
push
movsb
push
movsl
inc
ja
pop
sub
cmpb
cwtl
mov
notb
pusha
cmp
int3
xchg
cmp
dec
test
popa
cmp
cli
pop
inc
dec
xchg
cmpsl
daa
iret
and
xchg
sarb
mov
orb
rcll
iret
or
or
mov
jbe
xchg
mov
div
push
or
mov
in
lahf
xchg
push
lret
push
lret
or
mov
xchg
push
cmc
js
addr16
adcl
aas
out
sub
fcmovne
jle
push
pop
or
xchg
pop
xchg
arpl
divb
test
arpl
xor
ret
and
nop
sub
jno
rcl
push
loop
out
xchg
sub
fistl
cmp
and
ja
and
int3
pop
xor
and
lret
lods
aam
lods
fiaddl
aam
mov
arpl
inc
repz
scas
sub
pop
push
inc
rcl
and
sbb
jns
aam
push
add
push
and
loope
pop
xor
mov
das
pop
push
or
stos
popf
std
into
push
testl
push
pop
clc
sub
mov
ss
aas
pop
inc
sbb
jp
push
jno
or
dec
cmp
and
sbb
cltd
in
scas
sbb
xchg
sub
or
stos
popa
testb
insb
or
pop
and
aas
decl
fmull
inc
orb
sub
mov
mov
js
adc
sub
jmp
push
mov
sub
xchg
mov
dec
push
dec
movl
xor
andb
out
call
inc
cmc
sub
dec
push
or
fadds
mov
and
and
inc
fxch
and
stos
fsubs
ja
mov
push
mov
mov
into
pop
mov
xor
add
push
jl
and
outsb
test
stc
int3
push
insl
into
aam
dec
lret
xchg
sbb
pushf
outsb
pop
mov
je
movsl
push
andl
inc
rorl
roll
xchg
in
push
jns
mov
outsb
xchg
pop
add
xchg
xchg
sar
push
mov
push
jl
xchg
aam
std
and
mov
aam
int3
inc
jle
repnz
inc
push
or
mov
xor
rcrb
xor
mov
out
pop
mov
lcall
fbld
add
cmp
in
mov
ljmp
xor
jl
cmpsb
idivb
sub
repnz
jne
aas
jns
xchg
in
inc
adc
fcmovne
pop
mov
jl
in
mov
daa
fdivs
negb
pop
fdiv
pop
jb
std
pushf
lret
pop
lods
repnz
cmp
and
popa
fwait
push
dec
aaa
adc
stos
scas
push
out
jmp
in
pop
js
adc
dec
push
push
enter
loope
pop
pop
jnp
into
adc
insl
mov
mov
jge
dec
aam
xchg
fidivs
jl
scas
mov
adc
cmpsl
cmpsl
sbb
addr16
mov
adc
add
pusha
jecxz
push
js
mov
add
popa
inc
xchg
int
daa
shrb
jb
imul
je
fisttpl
adc
mov
lret
cld
int
daa
dec
mov
sub
cmp
scas
or
fdivs
mov
jmp
cltd
mov
adc
dec
adc
mov
dec
inc
hlt
inc
sbb
addr16
add
das
mov
inc
lret
ljmp
lcall
mov
add
mov
jmp
repz
arpl
pushw
js
xchg
sbb
sarl
call
pop
push
mov
pop
scas
add
push
xchg
sbb
jge
in
xchg
and
int
pop
mov
jg
jp
mov
jne
dec
out
push
stos
adc
in
es
cmpsb
imul
pop
mov
popa
ljmp
popf
insl
popf
add
xor
mov
push
in
mov
xchg
inc
andb
xchg
mov
pop
jle
sub
dec
pop
imul
js
jo
and
icebp
push
jmp
add
or
pop
add
jo
pop
cld
push
hlt
lcall
pop
aaa
lea
test
std
dec
xchg
inc
xlat
add
test
int3
or
fistl
ljmp
mov
scas
mov
add
ljmp
push
loope
pop
jo
adc
jmp
les
xchg
xchg
adc
cmp
stos
cmpsl
cmpsl
inc
enter
out
mov
in
pushf
add
push
xor
add
faddl
xor
roll
push
mov
dec
mov
jmp
int3
adc
push
jp
pop
xorl
push
addr16
xor
xor
xor
jns
add
cmc
pop
aad
in
insb
fldt
jnp
adc
mov
pop
sub
lret
xchg
cmp
rclb
mov
cmp
je
dec
les
inc
inc
ss
repz
mov
aas
adc
test
lea
push
jmp
inc
scas
push
iret
mov
and
cmp
sub
inc
sahf
or
lods
dec
dec
push
mov
push
cs
inc
pop
cmp
div
mov
dec
jnp
xchg
push
jo
loope
std
js
rolb
dec
loopne
xchg
mov
pop
aaa
cltd
into
sbb
jle
ja
dec
test
shll
aam
nop
jo
movsb
cmpsb
lea
roll
or
stos
pop
shlb
add
popf
lods
jle
jbe
shll
mov
push
insl
jge
pop
dec
stc
psubw
mov
jl
push
jg
sarb
xchg
cli
sub
mov
pop
push
cmp
lock
std
leave
popa
ret
jo
cld
lods
js
xchg
push
push
test
orl
cwtl
pop
mov
mov
sub
das
sub
sbb
add
mov
ficompl
arpl
movsb
mov
ljmpw
or
pmuludq
jno
push
adc
mov
fcmovnbe
cmp
jo
push
dec
xor
sub
cmp
mov
mov
add
push
sbb
stc
cmpsb
add
and
and
sbb
push
pop
mov
jb
mov
mov
dec
push
pop
cmp
mov
push
mov
lds
push
cmc
cmpsb
adc
into
cmpsb
es
into
cld
movsl
mov
stos
pop
xchg
or
outsl
out
stos
mov
outsb
adc
mov
inc
popf
add
mov
xor
xchg
sbb
aaa
movsl
cmp
adc
inc
push
sbb
pushf
push
popa
sub
lock
movsl
dec
push
in
int3
or
mov
gs
xor
mov
mov
push
imul
out
pop
scas
rcll
mov
cld
inc
sub
arpl
inc
fidivs
jae
and
decb
ret
adc
sub
jecxz
jecxz
dec
sbb
and
aad
xorb
jmp
aam
pop
mov
mov
jae
jnp
sub
xchg
mov
mov
lahf
loop
cli
inc
adc
inc
loope
push
daa
std
xor
popa
insb
das
jecxz
daa
es
mov
data16
mov
iret
mov
fs
test
je
scas
je
inc
movsb
pop
test
add
and
mov
loop
adc
cmpsb
mov
popf
jle
addr16
dec
push
das
outsb
adc
sub
jnp
bound
xor
add
rcrb
test
ljmp
mov
daa
movsb
ds
repz
cmp
mov
xchg
es
mov
addl
xchg
sub
sbbl
fs
xorb
fisubs
shll
cmp
xlat
fsubl
mov
mov
mov
jecxz
clc
pop
xchg
out
sub
aas
push
mov
cltd
inc
sbb
mov
dec
into
mov
or
fmull
mov
aas
cmp
jecxz
sub
xor
or
lods
mov
data16
sbb
xor
sti
xchg
adc
inc
inc
lahf
jne
je
nop
orb
jno
movsb
sub
rorb
stos
insl
test
sbb
push
gs
aad
leave
pop
lds
push
jo
xor
inc
xchg
sub
mov
mov
mov
mov
and
sbb
lahf
xor
pop
or
pop
loope
call
sub
ja
mov
outsb
jmp
xchg
loopne
dec
mov
pop
pusha
pop
jecxz
sub
sub
mov
sub
insb
scas
dec
fucomi
mov
iret
outsl
mov
andl
push
fnsave
push
ljmp
lds
popa
cmc
pop
jmp
rcr
inc
push
sub
popa
adc
add
mov
jnp
jb
or
mov
add
fwait
and
xchg
xchg
lret
sbb
loop
dec
les
ds
adc
cli
repz
call
adc
in
add
mov
js
add
push
fidivrl
mov
ljmp
mov
mov
icebp
nop
xchg
pop
fdiv
dec
pop
push
push
jbe
jmp
rolb
push
ljmp
lods
out
fldt
sub
loope
or
xchg
ret
arpl
or
mov
sbb
xchg
scas
in
pushf
out
loop
clc
sahf
jne
cmc
mov
add
mov
mov
jae
adc
or
mov
sub
inc
and
cli
adc
jns
sub
jae
sar
mov
cs
push
jl
and
cmp
and
bound
mov
push
ja
pop
inc
fmuls
imul
sub
inc
fs
mov
loope
jmp
daa
sbb
inc
cmpsb
fs
mov
cli
or
shrb
xchg
dec
std
pop
jle
push
ffree
fwait
mov
fistpl
push
inc
dec
sahf
fmuls
cld
adc
sub
out
std
lahf
mov
add
lret
fnstcw
cs
jmp
sbb
and
roll
in
arpl
in
sbb
xor
ffree
addr16
jl
iret
fmuls
out
arpl
jb
cld
xchg
fiaddl
imul
out
fistpl
outsb
fimuls
es
hlt
fsubr
cmp
dec
push
mov
jg
mov
pop
push
mov
mov
xlat
loop
push
lods
ss
sub
data16
lds
clc
ror
call
pop
insl
sbb
lods
mov
enter
mov
ja
les
add
lahf
jns
jl
mov
adcb
aad
into
xchg
andl
mov
lods
frstor
imul
cmpsb
xor
pop
xor
rolb
insl
jle
xor
inc
pusha
movsl
push
push
jle
test
adc
and
mov
in
sub
mov
mov
jl
ja
sbb
mov
in
test
decl
gs
loope
mov
pushf
xchg
ss
fwait
xor
loopne
add
ja
jge
jmp
popa
daa
test
roll
fsub
cmpsb
sub
jbe
sbb
les
xor
mov
xchg
cli
jecxz
mov
inc
pushf
and
les
mov
les
sub
ud1
push
cmp
gs
int
add
test
js
xchg
adc
jo
adc
loope
dec
rcl
hlt
or
inc
xchg
sbb
js
pusha
push
out
clc
jle
int3
ret
push
sub
inc
xlat
jb
scas
fistpll
inc
sub
mov
xor
xchg
jmp
push
iret
in
mov
xchg
loop
mov
push
inc
xor
or
cmp
cmpsl
dec
rorb
shlb
xor
adc
in
lcall
sbb
mov
mov
adc
mov
test
inc
aad
iret
sbb
pop
cmp
dec
movsb
mov
out
dec
cmp
hlt
fldcw
insl
pop
fsqrt
adc
or
daa
pop
popa
sub
xchg
fstps
test
repnz
pop
or
lcall
sahf
xlat
sbb
mov
in
fcomps
mov
ja
sahf
daa
inc
insb
or
js
sub
ret
push
mov
mov
dec
jbe
add
mov
enter
movsl
fstps
sub
loope
jo
pop
test
js
test
jecxz
ficomps
mov
mov
in
pop
in
mov
mov
cli
inc
dec
xchg
loop
or
push
jg
mov
ficoml
jae
lds
or
test
ds
lock
xchg
rol
cwtl
sahf
dec
cmc
pop
and
out
add
scas
daa
mov
mov
pop
pop
xchg
loopne
dec
dec
jl
cmc
test
dec
setns
into
fiaddl
in
cmc
movsl
js
or
in
imulb
sbb
inc
jge
imulb
fwait
pop
mov
jo
fs
aas
sbb
jae
jle
fadds
outsl
cld
shll
ss
and
xor
lea
lods
jge
enter
and
xor
inc
dec
inc
dec
push
int
and
pop
jbe
ds
cli
push
and
addr16
xchg
cmpsb
pop
stos
xor
adc
push
mov
pop
int3
mov
mov
push
push
sbb
sbb
adc
xchg
sbb
ljmp
lret
outsb
je
arpl
add
mov
das
jmp
cmp
jno
jle
icebp
out
in
insb
out
pop
and
idivl
push
push
sti
ja
mov
pop
pop
mov
ret
pop
mov
shlb
and
inc
cld
in
lcall
jmp
fucomi
decb
imul
rclb
adc
in
test
cmpsb
repz
xchg
hlt
orl
out
movsl
cltd
pop
movsl
inc
stc
dec
icebp
and
xchg
enter
aaa
mov
inc
cmpsb
mov
int
mov
loope
jae
jo
push
and
mov
cld
mov
and
daa
dec
andb
mov
pop
lret
jb
ds
daa
inc
fldt
push
jae
rcrb
out
adcl
xchg
jp
xlat
lahf
popa
cmp
pop
cs
inc
add
lahf
xchg
cmp
in
mov
add
adc
xchg
bound
stc
fisubrl
jne
adc
lea
xor
sbb
faddl
cwtl
add
jbe
inc
and
loopne
push
std
push
das
jo
mov
data16
xor
aas
or
test
pushf
mov
pop
and
mov
je
clc
ror
rorl
mov
xchg
rcrb
add
rcrl
and
add
outsl
adc
and
mov
sbb
xor
fcmovb
das
in
mov
cmp
lods
jle
push
bound
fidivs
add
push
stc
sahf
dec
add
int3
inc
dec
and
jl
icebp
jle
cmc
loop
mov
cmp
sbb
icebp
aad
gs
jb
gs
stc
cmp
mov
dec
and
inc
jb
fistl
sbb
sub
shlb
fcoms
lret
sub
mov
push
jae
sbb
loope
cmp
mov
sbb
shlb
cmp
sub
xor
std
cwtl
clc
pop
inc
int
or
pop
jo
mov
ret
test
scas
mov
mov
mov
mov
imul
add
jp
das
into
mov
test
cld
mov
sbb
push
inc
clc
iret
outsb
gs
in
cwtl
fwait
enter
cmc
outsb
mov
jns
or
orb
and
cmc
aas
ljmp
add
test
test
test
ret
and
out
je
dec
popf
ret
cmp
andb
gs
test
in
aad
ljmp
mov
cmp
std
or
mov
icebp
xor
sbb
adc
sub
fildll
popl
lret
pop
outsl
imul
xchg
dec
jg
loop
push
jns
jp
inc
jl
sub
or
xor
xchg
inc
mov
cmp
xchg
fcomps
cmpsl
mov
jbe
sub
leave
ja
lods
mov
mov
pop
les
lcall
sbb
ret
pushf
dec
cmpsb
push
fidivrl
mov
shrl
aaa
cwtl
or
mov
cwtl
mov
add
xchg
enter
enter
mov
icebp
arpl
push
rolb
fcompl
xchg
mov
and
mov
cmp
insl
inc
adc
pop
jnp
lahf
popf
mov
repz
sub
in
testl
pusha
xchg
sub
insb
je
pop
add
dec
int3
roll
fwait
cltd
add
cmp
push
cmp
imul
rolb
lea
xor
jne
loopne
push
inc
add
sub
push
shrb
or
pushf
push
fs
pop
push
dec
sarl
mov
test
pop
jnp
mov
or
insb
push
push
pop
adc
stos
adc
mov
lcall
adc
mov
stos
and
std
adc
lods
nop
dec
sub
xchg
jmp
popa
push
in
push
lock
mov
cmpsb
sar
jno
cld
cli
mov
xchg
rcr
and
pop
xlat
fidivs
repz
clc
cmp
mov
xor
fcompl
mov
jl
mov
xor
in
add
es
mov
cmp
mov
icebp
push
loope
clc
inc
xchg
and
fisubrl
shll
mov
loope
es
and
frstor
mov
jl
ret
sbb
jp
inc
jae
add
push
ds
test
jle
add
cltd
negl
icebp
push
inc
cmp
jb
and
sub
add
push
leave
out
sbb
stos
mov
pop
jns
jmp
das
add
push
enter
mov
negl
cmp
dec
fcmovnbe
test
mov
mov
ficoml
or
data16
cmc
fildl
ret
bound
push
stos
sahf
sarb
cmp
ret
inc
jbe
fdivs
and
fwait
outsb
test
cli
iret
mov
outsb
cltd
bound
inc
in
adc
or
push
pop
dec
mov
in
movsl
adc
mov
xorl
mov
pop
and
dec
ljmp
ss
jg
sbb
paddsb
dec
int
mov
push
cmc
fisubs
jl
jmp
icebp
and
add
xchg
rcrl
insb
mov
test
aas
into
fdivrs
out
or
lret
xchg
shlb
js
lods
scas
movsl
out
scas
jbe
shr
fsub
or
adc
fstl
enter
fisubrs
add
shl
pop
test
xchg
adc
inc
xchg
dec
arpl
out
or
sbb
mov
push
scas
push
je
sbb
jno
and
nop
cmc
sbb
sub
pop
hlt
decl
divb
pop
add
sub
and
jns
rorb
adc
cmp
ds
push
shl
nop
xlat
inc
xor
subb
jnp
xchg
imul
dec
inc
cli
or
push
mov
mov
cmpsl
dec
mov
in
fisubs
lcall
cmpsl
in
push
lds
push
mov
lahf
inc
mov
movsb
xchg
rorb
ffree
jecxz
fdivr
sbb
pop
repnz
cmpsl
cmc
fists
imul
sub
and
inc
pop
loopne
mov
dec
loopne
inc
lahf
push
leave
clc
mov
jae
mov
je
popf
clc
fmuls
outsb
cld
mov
push
stos
dec
pop
fcompl
inc
stc
int
push
and
inc
ss
imul
out
inc
jecxz
lds
pop
out
test
inc
jp
stos
mov
mov
stos
aam
fstl
push
xchg
push
sbb
push
test
jbe
subb
or
pop
sti
jg
inc
mov
in
outsb
push
xlat
push
adc
and
lea
lea
mov
sub
ret
imull
add
scas
fnstcw
cmp
xchg
lcall
enter
and
sbb
xchg
xchg
xchg
mov
mov
insl
jmp
dec
test
repz
jle
cmp
ss
ret
push
dec
mov
sti
stos
add
out
out
lods
stos
addr16
mov
and
sbb
jp
xchg
xlat
push
fidivrl
popf
sub
dec
cmpsl
add
test
popa
hlt
mov
int3
pop
pop
lret
mov
or
add
and
and
imul
or
daa
dec
push
mov
ljmp
push
push
rcrb
and
or
popl
dec
jmp
pop
dec
add
pop
cmp
mov
push
repnz
push
mov
lret
enter
cmp
mov
in
cmp
cmpsl
fdivp
loopne
lahf
shlb
cmc
ss
out
pop
fisttps
lcall
je
sub
out
mov
cmp
push
add
pop
sub
call
sbb
xor
dec
andl
inc
ljmp
in
scas
mov
sub
fwait
addl
andl
sub
sub
dec
xchg
push
and
push
gs
and
stos
jge
test
or
xor
ja
push
stos
mov
adc
sbb
xor
test
dec
movsb
inc
fisttpll
clc
dec
div
jmp
int3
cmp
push
enter
test
sbb
repz
mov
sbb
popa
es
push
mov
sbb
pop
sbb
rcrl
loope
repnz
add
out
adc
ja
sub
jno
out
into
pop
ss
dec
adcb
loope,pt
inc
test
movsl
lea
jmp
xchg
mov
out
int
xor
inc
and
popa
test
shlb
aam
mov
sbb
aaa
add
cmc
mov
insl
ljmp
aas
mov
xor
lret
xchg
mov
fnstcw
dec
adc
add
fistps
std
loope
sub
push
mov
pop
jl
sbb
and
test
rorb
idivb
int
push
mov
add
sbb
mov
push
fimuls
push
lret
sarb
js
int3
lods
outsb
popl
fs
test
repz
sub
mov
in
pop
fcompl
shlb
and
imul
dec
xchg
scas
das
lea
cltd
pop
das
push
rorb
lods
xchg
add
push
xchg
or
popf
mov
mov
rol
out
adc
lods
in
out
inc
movsb
nop
jbe
insb
js
hlt
xor
adc
sbb
daa
data16
inc
ret
jmp
mov
js
push
and
dec
xchg
flds
stos
inc
mov
pushl
cmc
sti
movsl
dec
ficoml
cmp
aam
cld
xchg
xlat
outsb
stc
cmpsl
pop
cmp
stos
xchg
xchg
mov
andb
in
movsb
out
insb
add
push
movsb
bnd
cmp
jp
push
push
daa
cmp
aad
jl
jmp
jae
pop
mov
xchg
pop
add
in
sar
aaa
cmp
inc
movsl
rorb
movl
imul
ret
inc
xchg
out
sbbb
std
fnstsw
inc
in
sbb
inc
mov
xchg
and
in
add
iret
mov
adc
mov
sub
mov
mov
adc
sti
sbb
addl
dec
stos
inc
add
inc
cmp
nop
data16
jl
xchg
ficoml
sub
jae
add
xor
sub
popa
lds
sub
sbb
adc
mov
imulb
mov
fisttpll
push
insb
shll
daa
push
xchg
insb
arpl
out
xchg
dec
arpl
inc
std
adc
pop
jmp
lret
clc
pop
movsl
adc
or
mov
push
fwait
pushf
xlat
mov
inc
dec
pop
movb
cmpsl
fnsave
mov
lds
ret
es
loope
scas
out
hlt
insl
dec
and
or
les
popf
mov
xchg
and
dec
sub
mov
lret
jne
out
rcl
fbld
adc
aam
mov
push
jns
pop
sbb
jg
outsl
les
adc
pop
enter
push
jle
sub
push
push
orb
push
lret
clc
push
jl
mov
jle
loop
ret
call
jl
pop
adc
hlt
inc
mov
icebp
jne
adc
ret
iret
insb
add
push
int3
push
jae
sbb
orl
and
dec
stos
push
sbb
cmpsl
dec
sub
pop
in
testl
mov
fwait
rcrl
repz
cmp
mov
jno
idiv
repnz
push
cmp
int3
ljmp
sbb
outsl
mov
ja
movsl
inc
jl
and
push
pop
loopne
add
xchg
xchg
lock
dec
pusha
add
fldt
aas
or
adc
xchg
mov
xchg
sbb
insb
mov
and
adc
outsl
jg
or
xchg
push
jae
lods
loopne
or
bound
ficompl
sbb
rcrb
loope
and
and
scas
lea
mov
or
call
out
mov
rorl
xchg
inc
enter
jl
cwtl
shl
jecxz
outsb
das
aam
addr16
cli
mov
outsl
push
out
jl
and
sub
loopne
and
popa
cmp
mov
cmp
mull
stc
pop
enter
in
xor
jecxz
mov
mov
daa
in
and
vmovntps
add
mov
sbb
jb
ja
inc
stos
sub
js
icebp
cmp
je
inc
mov
xor
lods
adc
cmp
and
push
dec
mov
icebp
xlat
iret
in
jecxz
arpl
inc
dec
jl
jae
adc
insb
scas
dec
das
xchg
out
mov
lea
nop
dec
and
ficoms
dec
lock
adc
lods
push
xchg
lahf
enter
jno
btcl
adc
add
call
push
cltd
mov
addl
dec
ss
jo
adc
enter
mov
popa
or
fidivs
ficomps
add
in
add
dec
add
push
mov
xor
push
mov
in
jmp
cmc
clc
sub
or
je
sbb
lds
jae
fnsave
leave
jae
loop
xchg
insb
inc
mov
jg
xor
jns
fcmovnb
dec
imul
jl
bound
imull
out
adc
sub
movsb
clc
das
and
xchg
xchg
repz
cwtl
arpl
push
mov
pushf
repnz
mov
mov
add
or
pop
mov
adc
or
sub
push
sub
loopne
icebp
test
pop
lods
mov
or
or
sbb
ds
mov
pop
and
mov
in
or
adc
xor
test
arpl
mov
jno
mov
mov
lret
xchg
out
hlt
pop
shll
mov
jnp
xor
push
lret
mov
pushf
push
imull
fstpl
add
and
negl
sbb
pushf
xchg
xchg
lods
mov
mov
icebp
test
push
pop
arpl
shlb
in
movsb
push
sub
jp
ret
or
mov
leave
ret
out
push
lock
mov
scas
cwtl
mull
fistpl
outsb
test
shrb
movsl
or
xor
notb
fs
repz
adc
les
dec
dec
sbb
add
dec
cmpsb
les
aam
sub
mov
fdiv
add
lods
call
in
mov
cmp
jecxz
jle
movsb
push
leave
int
ss
jbe
pushl
pusha
inc
mov
xchg
pop
pop
jb
push
adc
mov
testl
int
jp
stc
add
out
jge
fidivl
xor
push
pop
enter
sub
xchg
mov
or
mov
cmp
ja
lods
xor
mov
lods
test
movsl
std
cmpsb
and
imul
inc
mov
ret
sahf
push
lds
outsb
popa
xor
dec
and
outsb
sbb
mov
adc
push
fiaddl
xor
in
movsb
inc
inc
insb
gs
pop
cmp
adc
in
jmp
add
jno
and
dec
mov
in
clc
imul
aas
rcr
push
xor
pop
push
mov
idivb
xchg
sub
push
vmread
pop
push
out
mov
dec
int3
ret
pusha
jp
cmove
bound
outsl
jnp
adc
ficomps
stos
clc
icebp
lds
jg
insl
cmp
shll
pop
sti
sbb
mov
dec
mov
lods
push
jl
dec
or
adc
in
fucom
rorl
stos
outsb
pop
or
adc
and
es
into
adcb
insb
outsl
cmpsl
push
ja
loope
into
inc
popf
movsl
mov
mov
dec
sub
fcomip
push
and
imul
aas
push
enter
stos
push
mov
add
or
jmp
loop
mov
xchg
clc
pop
sub
dec
sar
rcr
pusha
jnp
sub
pushf
fs
add
movsb
outsb
jle
or
jge
dec
pop
sbb
push
fnstenv
fwait
loopne
xor
stos
pushf
mov
or
push
cli
mov
pop
xor
push
mov
xchg
pop
cmp
mov
inc
push
repnz
scas
jecxz
popa
jo
outsl
cli
imull
cmp
mov
div
cmpsl
mov
jns
cmp
mov
lock
add
pop
dec
push
rcrb
in
movsl
stc
imul
or
jno
std
movsb
inc
pop
adc
or
jge
scas
dec
ficompl
pop
mov
xchg
inc
dec
add
add
popa
push
push
jns
xchg
into
js
adc
lret
mov
sbb
loop
adc
push
mov
in
subb
lea
std
cld
mov
ss
mov
test
dec
call
adc
and
and
cs
mov
je
cld
mov
lcall
insb
pop
cmpsb
out
xor
inc
dec
jg
lods
iret
sti
sbb
mov
push
cwtl
mov
fistpl
xchg
cltd
xor
dec
sub
imul
add
inc
ljmp
adc
repnz
mov
mov
orb
jmp
das
cmpsb
insl
cwtl
les
and
adc
mov
lods
jb
sub
push
rcrb
or
add
sub
rol
pushl
cmpsb
shl
popa
les
jmp
iret
loope
inc
movsl
push
mov
fmuls
stos
imull
popa
push
mov
pop
xor
mov
stc
shrl
cmp
mov
sbb
xchg
mov
ret
dec
add
cmp
into
mov
ds
and
jp
jne
fwait
mov
inc
cltd
dec
pop
mov
iret
inc
dec
in
mov
lahf
pop
test
dec
mov
lods
mov
add
stc
push
xor
ret
in
push
add
or
stos
jmp
adc
out
push
loope
adc
clc
je
xor
out
hlt
mov
or
pop
lods
ss
add
add
or
cmp
and
cld
mov
not
lods
sub
imul
or
mov
or
dec
push
xor
test
xchg
das
cltd
and
and
pop
add
dec
jbe
jecxz
fmuls
shrl
ret
sbb
stc
loopne
cmpsb
das
aad
stos
jp
cmp
js
lock
hlt
mov
mov
add
mov
js
sbb
adc
jl
push
mov
cmp
fldl
scas
jl
imul
ret
nop
dec
popf
push
in
scas
jle
sub
stos
dec
rcrl
out
sub
ret
ja
rcrl
cltd
in
mov
arpl
sahf
movsl
cmc
mov
jp
int
out
call
or
rolb
cwtl
aas
xchg
push
inc
dec
push
cmc
sub
lock
or
sub
imul
loop
jbe
pop
ret
jno
shl
aad
jg
imulb
mov
push
sub
sbb
mov
data16
repz
shrb
aas
add
sbb
sbb
add
sub
popa
sbb
push
xchg
mov
mov
sbb
jmp
cmpl
and
cmp
out
dec
shlb
lret
lods
idivl
add
and
rcrl
pop
outsb
repnz
ljmp
jne
nop
sub
mov
dec
filds
xor
xchg
in
xchg
dec
jg
addb
rolb
nop
pop
mov
push
mov
enter
mov
push
or
stos
inc
push
jle
in
sub
jp
scas
or
add
mov
inc
daa
jne
dec
pop
adc
or
mov
push
or
dec
sahf
jmp
je
jg
jg
call
fidivs
in
xchg
sbb
jae
push
mov
sarb
pop
jmp
or
xor
pop
cld
mov
enter
aaa
sarb
jae
iret
push
sub
les
scas
add
jecxz
cmpsb
sahf
adc
add
rorl
sahf
xor
jae
xchg
pop
stc
decb
push
rcll
movsb
stos
pop
adc
jnp
movsb
insl
outsb
jne
sti
test
neg
ljmp
sub
sbb
adc
or
xchg
or
adc
pop
and
test
mov
bound
adc
out
pop
fimull
mov
xchg
fucomi
adc
test
inc
push
push
jbe
int
jp
jecxz
dec
ja
dec
mov
inc
cli
push
ja
jl
loope
in
jl
ljmp
mov
rolb
jp
cmpsb
pop
adcb
inc
jb
subb
lock
iret
loopne
push
push
pop
std
sub
lds
out
jne
dec
loop
mov
cmpsl
mov
sbb
test
mov
sbb
add
mov
push
xor
dec
lods
scas
xchg
lcall
add
pop
push
bound
and
lret
sbb
int
stos
jl
dec
out
test
sbb
movsb
push
lea
adc
add
cmp
idiv
cmp
and
cli
mov
inc
sbb
fwait
sti
scas
movsb
xlat
addl
inc
and
sbb
popl
and
and
bound
ja
sahf
sbb
mov
push
leave
sub
out
popf
call
pop
cmp
mov
aaa
and
pop
stos
mov
lock
pop
mov
dec
outsl
adc
loop
int3
or
sbb
dec
rol
cltd
jns
je
jecxz
sbb
inc
xchg
mov
jl
jbe
es
xchg
mov
pop
cltd
fwait
call
scas
xchg
fidivs
adc
lods
rorb
sub
mov
jp
adc
shr
jo
mov
rolb
lds
inc
ds
pop
jmp
repnz
mov
popf
mull
sbb
addr16
jae
stos
xor
xor
jl
xor
and
cmp
mov
cmpsl
cmpsl
inc
pop
arpl
daa
das
sub
fs
mov
mov
push
or
hlt
pop
jns
adc
insb
cmpsb
mov
lock
gs
or
in
cmpb
mov
test
cmpsb
xchg
add
push
js
ds
lret
aad
lcall
popa
mov
dec
insb
push
sub
fwait
outsb
cmp
loop
pop
aad
js
aas
fdivs
mov
jnp
push
xlat
jmp
inc
push
push
subl
rorl
jne
inc
ja
add
mov
aam
dec
dec
mov
jge
mov
ljmp
repnz
test
xor
lea
adc
pop
jmp
leave
enter
push
push
adcb
jno
repz
mov
shrl
jle
sub
dec
xlat
stos
out
aaa
in
popa
xor
je
repnz
out
hlt
repnz
movsl
or
cmpsl
inc
cs
imul
scas
ja
scas
lods
sbb
mov
lret
out
or
mov
add
lahf
jno
movsb
jnp
push
pop
adc
mov
jo
fisttps
mov
inc
iret
ljmp
cli
sub
das
push
mov
cmp
out
xor
nop
cmpsb
shrb
lock
xor
les
test
pop
sti
add
xchg
mov
inc
lods
pop
adc
sbb
cmpsl
mov
jns
std
je
push
pop
pop
pop
imul
mov
cmovle
je
adcb
addr16
out
dec
out
js
sbb
stos
and
popf
out
nop
sub
or
outsb
xchg
mov
or
dec
pusha
loopne
xchg
out
out
push
scas
rclb
inc
rorb
or
sti
pop
aam
stc
sub
mov
sbb
push
out
pop
sti
xor
jge
mov
es
mov
sub
mov
xchg
nop
dec
inc
xor
inc
add
jecxz
inc
jno
aaa
push
out
xor
jl
xlat
adc
cmc
and
mov
imul
pop
je
sbb
daa
sahf
scas
das
or
sbb
test
add
mov
mov
popa
dec
lods
and
lods
shl
jg
jg
int3
fs
stos
and
add
iret
jb
mov
and
mov
iret
shl
notl
outsb
lods
xlat
xchg
lods
notb
xor
mov
outsb
sub
pop
daa
mov
in
push
outsl
mov
cli
test
ds
xchg
out
rorl
sti
cwtl
repz
mov
mov
lahf
sbb
and
shrb
mov
js
xchg
mov
mov
std
pop
xchg
cmp
mov
ja
orb
pushf
cli
rcrl
lds
adc
lods
push
mov
mov
sub
push
std
inc
adc
out
mov
lcall
dec
arpl
sbb
out
iret
mov
ret
fwait
mov
enter
push
fildl
insb
ljmp
fadds
and
rcrl
cltd
aad
test
les
push
sub
cmc
pop
shll
or
mov
inc
lcall
inc
sbb
aam
mov
push
add
lds
push
push
xchg
adc
fcom
push
out
scas
add
sahf
loopne
cmc
or
xchg
stos
adc
fsubrl
outsb
rclb
or
push
xchg
xchg
cmp
aam
dec
or
adc
popa
lods
xor
fldt
dec
add
popa
andb
push
pop
into
repz
add
fs
popl
sub
mov
in
mov
push
bound
push
push
outsb
mov
fwait
push
cmp
lock
psadbw
cmpsl
in
mov
mov
mov
cmp
and
test
jl
imull
jmp
jae
mov
outsw
sub
pushf
add
push
std
dec
cmp
xlat
push
gs
iret
inc
pushf
cmp
xor
dec
rcrl
jo
xor
out
cmpsb
fstl
or
das
dec
bnd
cmp
mov
push
xor
cmp
imul
xor
mov
jb
sub
sti
icebp
mov
cmpsl
cld
andb
jne
or
lds
sbb
lret
fisubrl
in
int
xor
mov
xchg
mov
sbb
fcomip
cmc
jge
sbb
mov
pop
sbb
push
inc
fidivl
daa
popa
jp
arpl
repz
pop
pop
lret
jp
jb
xor
imul
sbb
scas
xor
sub
ficoml
add
cmpsb
mov
sbb
std
jp
pop
sub
pop
inc
sbb
mov
lcall
inc
inc
mov
cmp
sbb
nop
push
daa
pop
push
nop
ja
div
bnd
mov
xchg
movb
cmpl
xor
or
inc
ljmp
add
and
xchg
pop
sbb
data16
mov
lock
xlat
bound
fwait
mov
xor
es
ret
adc
ljmp
fdivrl
loopne
cmp
addr16
push
inc
xor
inc
xchg
jne
pop
xchg
pop
imul
xchg
and
sahf
jl
cmpsl
in
out
cld
ret
inc
sbb
add
inc
pop
mov
sbb
hlt
and
cmp
push
inc
iret
bound
xor
pop
xchg
dec
sub
push
push
adcb
in
add
fidivrl
ljmp
cmpsb
add
mov
jbe
inc
cli
fistl
outsb
cltd
add
aam
ror
push
out
mov
cld
cld
inc
mov
mov
and
sbb
inc
ss
jmp
inc
mov
mov
mov
loope
jnp
mov
out
data16
fwait
xor
sbb
inc
pop
mov
loopne
rolb
testb
push
cmpsb
in
outsl
mov
ds
jge
inc
movsb
shlb
call
ss
scas
lds
sbb
push
dec
adc
pop
mov
lret
scas
das
mov
xor
push
cmpsl
jecxz
xchg
imul
xchg
dec
adc
pop
dec
out
cmp
dec
int3
pushf
or
je
mov
or
cmp
cmpsl
repnz
mov
adc
inc
sbb
fisttpll
mov
xchg
pusha
mov
and
rolb
push
arpl
out
or
out
mov
push
lret
xchg
jno
adc
scas
mov
inc
add
repz
outsl
adc
rorl
push
out
sub
push
jmp
stc
stos
lret
jbe
popa
pop
popa
sub
out
mov
adcl
jp
imul
cmp
pop
mov
jge
xchg
add
mov
xchg
xchg
mov
mov
loope
mov
movhps
dec
outsb
xchg
cli
mov
jae
or
mov
pop
push
xchg
mov
adc
sbb
mull
sahf
inc
inc
aad
fwait
mov
cmp
mov
scas
jmp
mov
mov
pop
add
cmp
dec
stos
ss
rcrl
mov
add
sbb
inc
cmpsl
adc
sub
or
sbb
or
jle
sub
iret
xchg
mov
or
int3
clc
pop
popf
dec
push
and
push
mov
xchg
pop
xor
gs
cmp
xor
fld
out
shll
enter
and
jmp
and
mov
ljmp
inc
in
mov
mov
jge
hlt
push
push
mov
sub
adcl
iret
inc
xor
sahf
icebp
imul
cmp
rcrb
xlat
mov
aad
push
mov
mov
gs
mov
xor
pusha
call
cmp
sbb
ffree
aam
into
sahf
dec
adc
loope
and
in
pop
push
aaa
andb
cmp
mov
dec
mov
adc
mov
sbb
mov
mov
or
add
jne
mov
inc
mov
in
int3
test
dec
jae
testl
mov
pop
cwtl
leave
add
cmpsb
fwait
cli
ss
sbb
mov
rorb
sub
lods
fldt
cmp
push
push
and
je
fstpt
popa
sbb
inc
pop
jnp
mov
subl
fistl
inc
clc
clc
mov
inc
adc
pop
push
mov
mov
dec
pop
cmpsb
xchg
cmpsl
jp
jbe
push
in
cmp
lods
push
fdivl
pop
add
inc
or
fwait
loopne
xor
push
movsl
es
daa
div
stos
aad
pushf
imul
cmp
ds
iret
stos
and
jmp
aam
add
pop
je
in
cmp
adc
cmpsb
add
mov
pop
inc
jmp
sbb
xchg
or
ds
xchg
jecxz
negl
cmp
add
or
inc
in
jge
sbb
lea
inc
andl
sbb
or
mov
fnstsw
push
mov
ret
les
mov
lds
push
outsb
imul
iret
pop
add
mov
push
and
xor
pushf
ljmp
mov
shll
jl
repnz
xchg
mov
inc
fimull
sarl
hlt
mov
es
int
xor
push
pop
push
cld
test
ljmp
adc
sub
jp
lret
cmp
mov
jne
mov
test
sub
push
in
lcall
stos
jg
jl
pop
outsb
add
sbb
fs
sbb
js
stos
sub
arpl
dec
dec
inc
ficomps
call
imul
sub
out
andb
mov
inc
aas
sbb
pop
icebp
mov
jmp
js
inc
rdtsc
loopne
movsl
lods
les
test
add
jg
test
xchg
add
push
mov
cld
jae
lods
mov
inc
adc
xor
mov
mov
cmp
push
nop
pop
mov
xchg
inc
push
lret
xchg
mov
ds
xchg
pop
xchg
add
push
jmp
imul
mov
insb
xchg
out
ret
push
outsb
mov
xchg
xchg
into
push
out
aam
and
cmp
cmp
sub
in
inc
sarl
mov
repnz
movsb
and
enter
in
outsb
test
adc
jecxz
jns
adc
adc
sbb
insl
sbb
subb
lret
test
cmp
pop
push
add
stc
mov
mov
subl
jne
sub
std
les
inc
lea
in
lret
das
roll
rorb
pop
mov
rorb
inc
add
in
xchg
dec
or
or
pop
inc
add
aas
je
mov
mov
lock
popf
shlb
dec
xor
xchg
repnz
jbe
mov
imul
nop
fnstenv
add
test
xchg
dec
test
add
inc
xchg
nop
dec
xchg
out
inc
push
adc
push
mov
cwtl
int3
negb
in
adc
test
jb
je
sti
jecxz
sub
cmp
dec
and
inc
loope
or
cmpsl
adc
popa
sub
jb
dec
and
sub
xchg
mov
mov
js
pop
cltd
jno
sbb
sub
je
jecxz
iret
sahf
or
mov
lods
enter
test
jl
lock
mov
in
or
js
add
adc
testb
sbb
jg
xchg
mov
test
fucomp
mov
leave
mov
fwait
movsl
push
xchg
arpl
ret
fbld
je
jne
andl
dec
sti
push
cmp
cmp
dec
or
cmpsl
cmpsl
out
pushl
or
xchg
or
int3
adc
aad
js
add
fdivs
ret
call
inc
mov
mov
pushf
ss
enter
dec
in
pop
add
inc
jg
test
push
inc
cmc
mov
adcb
mov
cwtl
in
mov
ret
test
fsubl
jno
dec
push
scas
std
dec
lcall
sbb
dec
mov
or
pop
in
lods
iret
mov
ss
fcom
in
adc
inc
push
xchg
cmp
dec
push
mov
inc
cmpsb
sti
sbb
pop
mov
jo
mov
in
sahf
in
mov
in
xchg
fbstp
dec
push
adc
mov
jle
jno
fcmovnbe
and
or
add
insl
fwait
addr16
jge
push
mov
xlat
rcrb
inc
and
inc
mov
dec
pop
adc
and
sub
outsb
or
fcompl
push
jp
subl
push
test
sub
xor
xchg
push
or
xchg
jge
in
fdivr
and
mov
clc
int
cmpl
xor
dec
jnp
mov
cmp
add
cmpsb
push
inc
and
push
or
adc
mov
nop
incl
adc
sbb
and
adc
movsl
adc
popl
sub
test
xor
pop
fnsave
cwtl
jne
dec
sbb
cli
push
repnz
pop
aad
movsl
sbb
test
mov
notl
in
xchg
sub
jp
adc
xchg
hlt
frstor
and
inc
insb
mov
ss
pop
negb
jmp
cmpsb
in
lods
mov
mov
adc
jo
push
fldt
adc
cmpsb
call
push
outsl
adc
popf
jne
imul
fnstsw
xchg
adc
fmull
cwtl
loop
mov
in
repz
insb
es
push
pop
fdivl
jne
sbb
pusha
lea
ret
and
xor
mov
movsb
or
insl
arpl
test
ficomps
inc
dec
push
rorb
sbb
adc
aas
lret
sbb
stc
mull
mov
test
ja
ja
mov
lahf
mov
loop
cli
jae
lret
addr16
scas
rcll
xchg
dec
mov
lea
insb
xchg
add
inc
pop
lods
sbb
jecxz
pop
xchg
push
push
adc
aam
jnp
data16
rolb
inc
adc
jge
adc
in
push
stos
push
in
adc
xorb
rcll
repz
in
fxam
and
dec
jl
gs
mov
mov
xchg
stos
jo
hlt
or
fsubrl
pop
jmp
dec
xchg
sub
jp
mov
cmp
icebp
and
nop
mov
cmp
das
cmp
fstp
inc
mov
push
mov
mov
notb
mov
std
or
test
push
popf
stos
pushf
dec
mov
push
xchg
loopne
sub
adc
inc
xor
adc
jnp
leave
test
adc
pop
clc
push
outsb
testl
dec
outsb
lret
jle
dec
pop
xor
rol
imul
xchg
add
push
pop
xor
loopne
or
push
add
scas
or
pop
xor
jns
mov
add
fsubs
mov
inc
mov
jecxz
mov
jle
ds
scas
cs
cmp
dec
sbb
inc
inc
add
pop
add
clc
sub
jle
mov
sahf
cmc
jns
mov
mov
rorb
les
stos
lcall
mov
aaa
jns
jl
xchg
movsl
dec
mov
mov
fildll
pusha
sbb
sbb
lea
pop
loop
lret
push
mov
sbb
pop
in
add
mov
sbb
jg
cltd
sub
dec
and
and
mov
push
jne
pop
enter
sti
jae
shll
push
fiadds
in
lret
in
add
mov
leave
leave
clc
adc
inc
hlt
jbe
sbb
insb
push
stc
add
out
pop
fsts
movsl
adc
mov
imul
cwtl
popf
or
inc
loopne
sub
test
popa
loopne
gs
sub
mov
shl
xor
sahf
aaa
push
addl
out
lock
fs
mov
xor
mov
push
gs
inc
rcrb
lret
xor
pop
fsubl
pushf
testl
fwait
in
div
idivl
sarb
sti
and
pop
push
add
jmp
sub
lcall
push
out
loope
adc
dec
xor
adc
dec
sti
cli
out
pop
lods
bound
gs
xor
ficoms
jl
or
in
mov
lcall
clc
mov
cmp
lods
pop
xor
mov
sbb
and
sub
loopne
nop
mov
pop
adc
fwait
xchg
adc
mov
dec
and
pop
jb
call
out
sahf
nop
ffree
mov
lea
mov
fisttpl
out
mov
lods
and
mov
push
loop
jecxz
adc
pushf
fdivl
arpl
and
std
sub
pop
sahf
adc
sbb
addr16
push
adc
call
jmp
repz
ja
lret
cmpsl
xchg
mov
pop
jae
out
in
mov
fldl
hlt
outsb
xchg
jge
pop
daa
adcb
cli
cmp
lods
into
rclb
pop
fildll
mov
push
ret
xor
mov
out
jnp
mov
divb
adc
imul
bound
add
mov
and
fisubrs
sub
scas
insl
cltd
inc
xchg
filds
insb
pop
addr16
mov
adc
cmp
ljmp
xchg
incl
xor
sbb
xor
push
jp
mov
in
adc
and
or
and
nop
xchg
and
cmp
mov
add
pop
inc
ds
pop
cmpsb
xchg
mov
jae
shlb
rcrl
dec
mov
inc
ret
xor
push
aas
mov
push
pop
mov
dec
pop
xor
lock
fcoms
adcl
in
daa
jb
and
mov
xchg
in
repz
mov
incb
inc
insl
mov
xor
cmpsl
pushf
outsl
and
add
mov
stc
adc
push
and
outsl
jl
mov
sbb
push
jecxz
dec
js
and
aaa
imul
jge,pt
loope
xchg
mov
rcrl
pop
jnp
inc
xchg
push
scas
rclb
sarl
movsl
or
jne
or
inc
bound
xchg
imul
pop
adc
movsl
xchg
inc
mov
jnp
dec
inc
mov
pushf
xor
inc
daa
and
push
dec
pop
cmp
mov
in
or
cli
push
and
mov
pop
std
arpl
xor
out
dec
and
inc
rcl
jo
std
push
scas
test
or
inc
and
sub
insl
sub
pop
insb
add
fimull
and
imulb
push
int
hlt
push
mov
iret
ret
xchg
std
push
ljmp
or
xchg
imul
mov
aaa
leave
jecxz
mov
stos
push
mov
jo
js
adc
and
mov
xorl
xlat
and
xchg
sub
dec
imul
xor
icebp
ja
mov
cltd
shr
cmp
jbe
sub
movsb
test
dec
pop
jne
inc
mov
mov
fistps
data16
lds
inc
pop
lock
push
imul
push
push
data16
adc
lds
scas
sub
lods
ja
push
loopne
loopne
das
mov
push
dec
xchg
inc
shrl
jo
std
dec
jns
sbb
insl
xlat
imul
pop
fbstp
xor
loope
lret
popf
fcom
cmp
scas
sub
push
nop
mov
inc
lods
mov
xor
cmpxchg
sbb
jo
fsubrp
jle
cli
sub
inc
sahf
sub
fldl
pusha
inc
fsubl
dec
mov
xchg
mov
push
push
aad
jecxz
mov
sahf
mov
icebp
add
sbb
jns
dec
popa
mov
dec
lds
stos
popa
movsl
cmpsb
and
inc
mov
testl
push
in
xor
push
xchg
jp
lods
cmp
fmuls
jp
std
push
stc
xlat
insb
sub
gs
rcll
or
dec
cmp
jb
jno
icebp
or
mov
dec
sub
lret
inc
mov
xchg
adc
inc
add
popf
pop
push
lret
or
or
inc
nop
cmpsl
push
das
stos
push
fsubl
push
fwait
stc
dec
cmpsl
das
push
loopne
xchg
sahf
hlt
dec
adc
bound
hlt
mov
jg
sbb
jno
mov
insl
ljmp
dec
lods
aam
or
stos
cmp
mov
dec
mov
jb
push
repnz
jb
hlt
repnz
or
xchg
mov
and
cmpsl
loopne
and
faddl
cmp
test
nop
cmpsl
xor
insl
jnp
loop
pop
dec
sub
pop
cs
mov
inc
sub
stc
sub
aam
js
xchg
xchg
mov
push
sbb
and
adc
sub
push
popl
adc
addr16
jecxz
lea
inc
or
dec
es
test
xchg
popa
enter
inc
cltd
mov
int3
xlat
jmp
pop
arpl
stos
vpmulhw
ss
dec
add
insb
push
negb
js
pop
dec
sbbb
jge
mov
in
lods
into
mov
push
add
and
xor
fistpl
mov
icebp
push
xlat
mov
andb
roll
cmpsl
pop
mov
lds
add
fwait
jge
pop
push
pop
icebp
int3
push
and
add
int3
mov
cmp
sbb
or
xchg
ds
fldt
cmpsl
sbb
dec
lret
add
inc
lret
scas
push
andb
cltd
dec
cmp
das
xor
cld
xchg
out
mov
push
cmpsb
popa
jg
adc
mov
jae
lcall
add
xlat
inc
mov
and
ret
mov
xor
rorl
xchg
dec
or
mov
add
mov
mov
mov
or
out
pop
call
aas
fcmovne
mov
cmc
out
in
add
repz
add
mov
ljmp
das
hlt
inc
mov
inc
inc
adcl
scas
add
mov
fxch
mov
add
rcr
ret
int3
jle
movb
cmp
xor
jl
mov
push
lcall
lret
aam
xchg
scas
xchg
mov
mov
mov
stc
je
in
stc
std
aam
or
sub
je
cmp
jb
aam
fwait
inc
cmp
xchg
sub
loope
xchg
mov
dec
and
mov
xlat
push
sub
sbb
pop
adc
mov
mov
rcr
lods
push
jno
pop
push
and
mov
xlat
idivl
popa
lock
and
add
cmpsb
and
iret
jae
addr16
xchg
xchg
lods
lcall
ja
pop
test
sbb
xchg
push
cld
mov
xor
dec
frstor
sbb
xor
mov
adc
and
cli
sbb
lods
jae
cli
out
push
orb
mov
orb
addr16
push
adc
test
out
cmc
mov
sarl
out
and
pop
lcall
sti
lahf
inc
lds
xor
push
xchg
or
lcall
pop
aaa
adc
mov
push
xor
mov
leave
movsl
cld
js
lds
add
out
fistpl
jl
repz
pushf
mov
xor
popf
aas
cmp
hlt
arpl
leave
ljmp
or
popa
aas
mov
pop
in
or
inc
inc
sub
sahf
ja
iret
sub
or
mov
ret
addb
test
sbb
fnsave
push
test
scas
rcr
mov
mov
inc
aas
std
out
push
mov
movb
mov
arpl
jns
dec
mov
clc
imul
loop
dec
cmp
aaa
sub
dec
jno
bound
shrl
adc
and
ds
and
cmp
xchg
lock
or
insl
sub
pop
in
repnz
adc
push
sub
movsb
cs
push
repz
lret
push
inc
rcrb
dec
adc
aad
mov
sbb
sub
loopne
adc
sbb
bound
mov
in
pop
jecxz
mov
pop
inc
xor
sbb
cmp
scas
sub
xor
test
and
out
xchg
je
mov
mov
mov
inc
cmp
jno
lods
or
insb
sub
fbstp
or
sbb
fnstsw
xchg
jmp
jbe
les
andl
testl
test
sbb
mov
push
inc
mov
mov
push
data16
jle
aas
sbbl
ret
cli
aaa
and
sub
adc
inc
lods
lods
cmp
enter
sbb
push
and
xchg
and
pusha
adc
and
jmp
jno
into
and
in
cmp
jp
adc
mov
xorl
cli
add
fisubrs
sub
xor
fisttpl
test
ss
sub
fstl
dec
bound
loop
add
jmp
mov
call
pop
shl
dec
ret
adc
adc
inc
lds
mov
into
rorl
add
mov
sub
popf
push
pop
mov
mov
pop
add
inc
pop
or
dec
and
daa
cmp
xchg
dec
mov
mov
aam
lahf
dec
arpl
adc
in
adc
add
pop
std
push
mov
loope
seto
cwtl
mov
mov
shll
lea
xchg
pushf
mov
insl
mov
jmp
sbb
pop
xlat
inc
enter
pop
dec
movsl
lds
mov
arpl
rcrb
in
sub
mov
mov
cwtl
mov
dec
lods
adc
aaa
sbb
imul
push
cs
mov
cli
lret
stc
cmc
xchg
inc
addr16
or
shlb
jl
inc
inc
sub
aam
pop
out
test
adcb
clc
cmp
jae
adc
ja
push
mov
sub
sahf
jns
test
pop
push
push
ja
jo
add
out
mov
add
repz
jns
stc
push
adc
sbb
cltd
js
cmp
pop
lahf
adc
xchg
dec
push
xor
lods
sub
mov
jb
dec
sbb
and
sbb
lahf
push
push
xor
push
daa
mov
loope
fldcw
mov
push
jns
and
movsl
sub
pop
leave
repnz
mov
aam
dec
in
fmuls
push
sbb
cli
sbbl
and
into
cld
lahf
jp
pop
pushf
jnp
sub
xor
std
push
cmp
cmc
aaa
fbld
mov
cwtl
rcr
adc
cmpsb
lods
pop
and
mov
pusha
sahf
test
ljmp
inc
lds
lcall
push
sbb
stos
pop
test
arpl
dec
xchg
into
mov
repz
pop
lock
mov
xor
add
inc
xor
nop
mov
cmp
gs
ljmp
js
add
sub
out
cmp
xor
mov
fdivs
fwait
pop
cmpsl
push
mov
or
imul
cmp
stos
xchg
cmp
aad
ljmp
pop
aam
cli
jp
lcall
cwtl
popf
addr16
pop
ljmp
lcall
jb
cmp
add
inc
and
imul
daa
cmp
xchg
ja
in
int
imul
xchg
xchg
push
in
lock
out
sub
scas
pop
dec
iret
insl
shll
sub
jg
lock
push
or
cmp
adc
movb
jo
sub
sbb
xorl
mov
lea
xlat
mov
mov
add
pop
pop
enter
shl
mov
ret
adc
jo
cwtl
fucompp
mov
jo
sbb
mov
lods
cmp
inc
xor
dec
pushl
mov
pop
std
adc
rol
or
ljmp
inc
cmp
pop
adc
mov
shl
pop
in
sub
mov
mov
xor
and
fcmovnb
std
sbbb
xchg
and
sbb
sbb
fdivs
fisubrl
xchg
jmp
cmp
loop
shl
sub
push
sarl
pop
lds
es
fs
arpl
xchg
rcl
mov
push
sahf
jle
mov
hlt
inc
sbb
jnp
invlpg
pop
les
out
pop
jne
jle
fcoml
imul
add
aad
js
sub
hlt
jg
inc
dec
xchg
push
out
push
mov
in
cmpl
int3
icebp
mov
mov
loopne
clc
cmp
pop
xor
hlt
nop
pop
in
or
popa
scas
mov
idiv
mov
fadd
add
sbb
pop
push
fstl
aam
mov
gs
jb
loopne
rorb
or
sub
cmpsb
popa
shl
xor
xchg
sbb
inc
fstpl
clc
insb
out
cmp
sti
test
mov
mov
prefetchnta
dec
shlb
push
movsl
rolb
jmp
or
mov
aad
mov
push
pop
pop
movsb
mov
jbe
pop
adc
jle
sbb
nop
decl
cltd
push
nop
hlt
cmc
sub
jne
adc
pop
adc
fwait
add
lahf
rcll
adc
mov
push
mov
shll
mov
jns
or
xchg
mov
xor
cmpsl
sub
xchg
xor
fiadds
shll
xor
pop
adc
pop
jecxz
push
push
ret
into
pusha
shl
mov
sarb
ds
push
mov
xor
mov
popa
or
sbb
sahf
sarb
inc
dec
int3
movsl
xor
shll
mov
or
cmp
xchg
xchg
cwtl
sbb
inc
push
div
xchg
mov
pop
movb
int3
dec
jne
adc
out
cli
pop
jmp
mov
xchg
mov
mov
js
pop
mov
int
cmc
cmp
loopne
outsb
cmp
scas
fnsave
bound
pusha
jne
scas
mov
cmp
and
xlat
add
dec
xchg
xor
sub
mov
insb
mov
aaa
das
and
mov
lret
adc
mov
jecxz
pop
int3
ficomps
and
pop
rclb
cmc
cwtl
inc
cmpsb
add
leave
repz
jno
mov
data16
insl
mov
fsubrs
mov
mov
pop
add
inc
mov
sahf
sbb
pop
incl
cltd
out
and
shl
adc
gs
repz
clc
mov
repz
aaa
lds
gs
dec
imul
andps
or
cli
mov
test
lods
xor
mov
pusha
xor
in
add
stos
ret
inc
mov
sti
mov
sub
pop
pop
fsubr
aaa
dec
xchg
mov
cld
arpl
imul
mov
push
inc
sbb
cwtl
stos
test
lahf
dec
lods
xor
xchg
and
test
ret
iret
cmp
sub
adc
shlb
cmp
mov
lea
lret
cwtl
mov
cmp
or
stc
int
xor
mov
sahf
xchg
lods
pop
pop
aaa
and
loope
jmp
xor
fwait
add
add
push
mov
data16
orl
adc
dec
pop
enter
outsb
cmp
adc
fcoms
jb
jge
pop
xor
loop
cmp
mov
into
std
sub
mov
and
add
xor
nop
loop
push
mov
mov
ret
xchg
xchg
xor
sub
sbb
loope
das
mov
mov
mov
xchg
and
and
pop
ss
insl
fs
ljmp
adc
cli
lret
mov
jnp
fidivs
pop
inc
mov
xchg
mov
call
sbb
adc
call
out
test
ret
pusha
fwait
push
xchg
popa
fwait
mov
xchg
sbb
ret
mov
lods
in
les
cmp
jle
pop
mov
into
clc
fstp
lea
jge
fdivrs
leave
cmpsb
add
inc
shlb
mov
aam
je
dec
sub
repnz
repnz
rorb
mov
fildll
cmp
mov
xchg
mov
sub
call
aam
das
popf
das
push
out
add
fs
mov
mov
inc
shlb
add
nop
jbe
dec
test
es
ja
imul
aam
and
je
pop
push
in
inc
out
dec
cmp
mov
out
rcll
insl
test
mov
xor
mov
cld
or
and
lods
xchg
push
idivb
orb
jae
xor
jnp
or
jmp
cltd
hlt
outsl
and
xchg
inc
fsubrs
cmpsb
push
mov
mov
xlat
push
mov
nop
lods
ss
and
rorb
cmp
mov
sub
and
rcr
pop
cltd
cmp
xor
shll
shrl
adc
in
pop
mov
rclb
and
daa
fcompl
sbb
xor
testl
gs
out
pop
jns
jmp
xchg
pop
and
xor
sbb
fimuls
mov
push
not
leave
adc
mov
aaa
cmpsl
loope
cmc
repz
insb
outsl
dec
cmp
outsb
stos
dec
lret
or
xor
inc
pusha
pop
and
nop
test
roll
enter
cmp
ds
das
cmp
mov
xchg
stos
loope
adc
cmpsl
mov
outsb
rcll
xchg
movl
adc
cli
mov
sti
call
push
inc
bound
mov
jnp
mov
stos
dec
mov
sub
cli
mov
jge
inc
mov
add
stos
sbb
mov
dec
cs
inc
cltd
fsubl
or
sub
jle
sub
mull
clc
add
aam
or
imul
jp
test
adc
mov
mov
mov
add
fsubr
scas
pop
pop
rcrl
add
clc
inc
fcomip
cmp
cmpb
neg
or
outsl
xchg
stos
xchg
cmc
push
push
and
lahf
mov
mov
sbb
jnp
int3
sbb
sub
mov
icebp
insl
repz
jb
jo
pop
movsl
popf
mov
mov
jno
cmc
aaa
mov
jbe
test
stos
js
stc
jae
dec
lahf
fcomi
pop
and
pop
fildl
leave
lea
mov
lahf
add
pop
xchg
push
push
imul
sar
lock
btc
mov
sahf
popf
or
out
roll
scas
into
sahf
jne
mov
shrb
push
inc
cmp
adc
ja
fmuls
out
cmp
add
mov
shl
push
outsl
xchg
ja
jbe
mov
push
sbb
neg
call
pushf
ja
cwtl
daa
mov
cmpl
adc
pop
aad
mov
adc
push
in
inc
push
stos
jl
cmp
testb
es
ret
stos
push
add
out
pop
push
aam
sbb
push
cs
jne
mov
lcall
mov
cmpsb
xor
mov
sub
aas
aas
jmp
test
adc
mov
test
push
mov
pop
fstl
cld
push
pop
add
test
fdivrl
aam
insl
into
divb
pushf
sub
mov
or
push
mov
lcall
mov
jge
xor
xchg
mov
jae
jbe
xlat
jno
jno
daa
icebp
pop
ret
mov
sarl
xor
lock
lods
dec
mov
lock
std
test
iret
jnp
mov
pop
shll
loope
cltd
pop
inc
push
lods
test
jecxz
jnp
fldenv
and
mov
sti
add
xchg
icebp
sbb
hlt
sbb
out
ficompl
push
cmp
loope
fildll
dec
dec
out
pop
sarb
repnz
push
out
test
dec
or
mov
loop
push
lcall
sbb
push
and
jnp
clc
aaa
cmp
pop
sub
in
adc
out
mov
sahf
test
call
adc
cmp
lcall
xor
mov
dec
fstl
sbb
fildl
mov
fwait
mov
xor
ret
mov
xor
roll
pop
mov
dec
push
mov
mov
mov
arpl
adc
cld
mov
repnz
mov
mov
pop
test
adc
aad
sub
jno
pop
rorl
xchg
cmp
sbb
cmp
in
lods
insb
or
cmp
xchg
jne
cld
jg
ds
dec
hlt
test
sbb
push
xchg
pusha
pop
in
or
cmp
dec
jb
or
outsl
popa
mov
roll
push
out
and
cmpl
paddw
and
adc
xchg
cmpb
cmpl
fcomps
mov
iret
and
mov
push
lahf
mov
xor
lret
xchg
dec
test
lret
fwait
jle
xor
das
bound
pop
hlt
xchg
test
movsl
call
mov
rclb
idiv
mov
mov
loopne
dec
mov
mov
aaa
mov
inc
add
sbb
push
jae
push
outsb
lea
jg
mov
push
push
sbb
leave
shlb
dec
push
jp
jb
cmpl
xchg
lea
lods
mov
sbb
ret
pop
lods
js
jne
stos
enter
mov
jle
dec
mov
mov
scas
cmp
leave
sub
sub
push
lahf
xor
inc
test
ret
mov
stc
mov
lcall
icebp
stos
je
and
pushf
cmp
popf
ja
cmp
out
divl
insb
push
cmpsb
mov
add
or
test
cmp
in
jbe
adc
inc
es
and
pop
insb
sbb
jns
fdivs
in
mov
or
sub
sbb
pop
movsl
pushf
ret
ds
stos
adc
and
adc
hlt
jge
out
xchg
or
xchg
lds
mov
mov
addr16
pusha
aaa
fnstcw
inc
xchg
fmull
adc
std
ljmp
jp
cmp
xchg
add
pop
cmpsb
pusha
mov
insw
es
in
dec
mov
lea
add
push
mov
enter
hlt
test
xchg
ljmp
pop
out
push
movb
movsl
pop
sub
jae
pop
xchg
cmp
fistpl
mov
adc
imul
dec
adc
aaa
jp
call
sub
in
push
pop
ljmp
in
movsl
or
pop
sarb
outsl
out
dec
test
xchg
enter
xor
adc
daa
ret
push
lahf
dec
sub
sbb
icebp
add
mov
out
mov
icebp
cmp
fucomi
ret
stos
pop
dec
jnp
lret
lret
test
and
inc
ja
movsl
mov
xor
insb
add
xchg
or
outsb
in
cld
push
daa
cmpsb
mov
imul
cmc
xchg
jl
movsb
andb
jmp
jo
nop
pop
and
mov
sbb
rorl
les
ss
sub
int3
adc
insl
dec
dec
pop
add
mov
adc
pushl
out
jo
scas
insl
dec
sahf
add
bound
out
inc
dec
mov
pop
subb
inc
out
das
jmp
pop
repnz
enter
and
lcall
add
in
inc
push
popf
nop
sbb
jns
jp
nop
mov
fldcw
inc
or
fimull
jae
sbb
scas
cmpsb
enter
pop
loopne
cmpsl
pop
push
out
inc
aas
stc
mov
test
arpl
and
and
imul
jp
mov
mov
jge
sbb
out
addr16
shll
outsb
add
lret
lods
pop
fisttpll
pop
sti
mov
repnz
xchg
mov
nop
sub
xchg
sbb
cwtl
fcompl
push
fcmovnbe
sub
cmp
pop
or
mov
fmull
dec
xchg
xchg
jecxz
cmp
cmp
leave
mov
in
rcr
mov
push
inc
mov
das
pop
sub
daa
lods
in
and
xchg
xchg
mov
mov
mov
ja
mov
lods
sub
pop
lea
add
je
ja
xor
mov
rep
mov
ja
std
push
push
inc
fs
notb
bts
ljmp
pushf
sub
pusha
test
mov
mov
xchg
inc
push
bound
pop
xchg
inc
mov
inc
ffreep
jne
xchg
pop
jl
push
sub
lods
repnz
jmp
mov
std
mov
xchg
into
out
xor
xchg
out
imul
or
pop
cs
imul
test
mov
popa
push
cwtl
dec
add
adcl
fimuls
fdivrl
inc
pop
cmp
loopne
cmp
push
xchg
js
jbe
aam
aas
pop
jmp
stc
gs
scas
adc
mov
mov
sub
pusha
lcall
jb
or
sbb
push
mov
inc
ljmp
adc
test
mov
fistl
dec
sbb
stos
xchg
cli
xchg
cmp
out
jge
and
push
xchg
sbb
std
cmpl
xor
mov
popf
movsl
inc
sub
jg
pushf
cmp
insb
insb
pop
das
lret
sub
aaa
dec
fnstsw
mov
cmpb
call
test
push
daa
inc
mov
xchg
insb
sti
mov
add
imulb
cmpsb
mov
es
divb
loopne
add
jecxz
sti
xor
call
mov
mov
sub
iret
adc
adc
inc
xchg
sbb
and
push
shlb
in
pop
std
je
push
aas
inc
icebp
pusha
sbb
lahf
lcall
xchg
sub
or
mov
movsl
xor
outsb
sahf
or
inc
push
inc
test
lea
cmpsb
add
hlt
mov
push
pop
sahf
test
add
add
sub
rorb
iret
jb
test
dec
xorb
fidivrl
dec
adc
mov
cmp
jg
xchg
outsb
pusha
xchg
incl
and
xor
pop
rep
test
lret
popa
mov
pop
or
push
gs
repnz
hlt
and
cltd
xchg
cmp
movsb
rcrb
mov
mov
lcall
leave
mov
pop
int
cltd
nop
vpxor
push
jmp
mov
repz
ja
ret
test
lcall
jg
inc
in
pop
popa
push
bswap
daa
cmp
imul
push
inc
pop
pop
loop
adc
xchg
dec
mov
dec
mov
and
stos
repnz
xor
push
lods
mov
out
icebp
lret
xchg
test
jle
in
or
pop
add
push
insb
hlt
inc
jnp
sti
jae
js
xchg
inc
xchg
add
mov
sub
lcall
inc
cmc
push
cs
sbb
loopne
sub
sbb
add
lock
pop
jns
les
leave
lret
out
pop
add
inc
xchg
cmpsb
push
loope
jle
stos
movsb
pop
mov
lock
adc
inc
pushf
js
cs
and
int
fidivrs
lock
mov
fildll
inc
nop
orb
clc
push
shl
arpl
adc
sti
mov
mov
xor
jmp
data16
inc
or
mov
inc
jbe
test
shlb
xor
push
xor
sub
repnz
sarl
push
andb
push
test
popa
pop
ds
es
test
mov
adc
inc
aad
lods
and
mov
push
rcrb
ss
mov
lret
test
lret
cmp
mov
pop
mov
rolb
push
into
cmp
sbb
mul
xchg
adc
nop
lods
mov
add
test
mov
mov
push
ret
or
ja
xor
xlat
not
nop
mov
and
icebp
jnp
out
mov
mov
fists
insb
addr16
jg
cmp
push
adc
scas
xor
in
in
pop
jo
sbb
adc
scas
ret
fs
repz
pop
cli
sbb
jg
adc
xchg
stos
das
popf
jno
lods
lods
xchg
adc
pop
and
mov
mov
jo
stc
repnz
mov
inc
iret
adc
testl
sub
daa
subl
scas
xor
jae
mov
mov
jmp
mov
push
sub
mov
seto
jmp
mov
sbb
jns
filds
scas
jb
dec
cltd
sar
or
mov
in
mov
and
xchg
lahf
idiv
jo
adc
jmp
mov
insl
hlt
cmpsb
les
insb
mov
jno
call
rorl
sbb
cwtl
mov
cmp
daa
cwtl
dec
mov
test
push
lahf
xchg
xor
outsl
testb
cltd
jg
or
cli
and
mov
stos
or
ss
addb
les
shl
cmp
dec
repz
int3
daa
push
fnstenv
repz
cwtl
cmp
stos
sub
icebp
lods
out
mov
shll
jl
mov
and
dec
mov
adc
xorl
into
test
lret
rorl
jnp
outsl
cltd
jns
adc
imul
push
sbb
mov
xchg
push
sbb
mov
or
fistps
stc
fcmovu
pop
inc
pop
dec
into
mov
in
js
dec
das
andl
pushl
ja
add
dec
jecxz
out
ss
gs
inc
sbb
xor
mov
rcrl
push
ljmp
js
popa
aad
xchg
ret
or
mov
xchg
cmp
mov
inc
lds
loope
arpl
mov
dec
mov
push
mov
sub
int
lods
dec
lods
adc
idivb
mov
cltd
cmp
out
add
lret
jmp
imul
mov
test
mov
movsl
xlat
xchg
mov
cli
data16
pop
or
cld
add
mov
mov
jle
nop
dec
xorb
dec
stos
mov
loop
js
repz
cmc
lods
test
xor
lock
loop
mov
sarb
mov
add
inc
pop
mov
or
arpl
mov
push
rcr
cmp
mov
lret
sub
xor
push
inc
push
insb
data16
test
push
push
loopne
into
sbb
pusha
aad
enter
and
push
push
mov
dec
and
aad
arpl
mov
scas
add
out
pop
and
cli
test
jns
je
xchg
cmpsl
push
mov
push
fisubrs
rorb
ljmp
test
push
insb
gs
clc
rcrl
mov
loopne
jl
mov
mul
mov
jbe
inc
pop
lahf
das
xchg
rcrb
adc
jg
orl
test
mov
mov
pmaxsw
stos
ds
mov
jl
data16
cli
lcall
or
cmp
sbb
out
shrl
push
cmc
inc
jae
sti
lret
movb
fstpt
data16
mov
xchg
push
sbb
dec
push
nop
and
adc
xchg
into
cmpsb
inc
mov
cli
imul
or
scas
cmc
arpl
iret
add
jp
cmp
mov
insb
in
jnp
adc
in
test
ror
movb
sub
mov
scas
or
enter
or
mov
aad
sbb
or
xchg
inc
xchg
cmp
inc
push
fs
dec
stos
cmp
pop
mov
sti
adcb
popa
sbb
lds
push
add
push
int
fsub
add
scas
jne
and
arpl
or
aam
xchg
mov
test
mov
add
or
or
out
rcl
xor
mov
add
js
cs
repz
mov
fdiv
mov
xchg
fs
xor
jbe
mov
add
movsl
fisubl
xchg
push
xchg
mov
fwait
or
nop
lea
or
iret
testl
insl
arpl
inc
and
cwtl
insb
fs
or
and
jp
ss
lds
sub
cmp
out
xchg
imul
push
insb
push
fists
pop
push
push
fsubs
clc
or
xor
push
leave
insb
lret
push
hlt
icebp
testl
lock
pop
cmpb
push
push
dec
mov
mov
cmp
ret
xchg
adc
pop
or
adc
inc
pop
mov
jecxz
clc
insb
adc
mov
rcll
push
out
sbbl
js
repz
add
xor
push
adc
aad
or
loope
or
stos
jb
dec
and
inc
lds
cmc
cmpsl
lds
or
stc
out
mov
and
fmull
jns
sbbb
mov
jnp
fxam
aas
inc
jns
ficoms
add
mov
clc
adc
pop
xchg
cld
rcrb
in
out
inc
and
sbb
or
sbb
mov
in
insb
ret
into
add
dec
dec
orl
pusha
cmpl
les
out
fwait
lret
add
or
rclb
andb
mov
jno
pop
dec
xor
call
push
out
addb
sbb
and
cld
inc
or
sub
aam
psubd
lds
sub
aaa
xchg
lea
rep
push
cli
xlat
lret
cwtl
fidivs
xlat
xchg
add
sbb
aaa
dec
dec
mov
cmp
or
jno
leave
test
fidivrl
pushf
sub
inc
add
push
xchg
imul
xorl
aam
mov
int3
pusha
fwait
das
cmp
fs
nop
popa
cmp
mov
adc
dec
sub
lea
dec
aas
hlt
sahf
cwtl
jl
sahf
imul
xchg
popa
jo
pop
sarb
repnz
repz
stos
inc
bound
xor
push
rcrb
cld
inc
dec
adc
adc
add
jns
jecxz
jecxz
jl
stos
xor
inc
inc
jae
cmp
in
js
xchg
daa
pop
add
pop
std
popf
sarb
add
xchg
mov
out
rorb
xor
mov
lods
inc
mov
lret
dec
fldl
clc
rcll
imul
jmp
daa
push
insl
add
adc
push
ljmp
adc
imul
mov
insl
push
mov
sbb
cmp
test
mov
sub
mov
imul
sbb
lock
dec
xchg
idivb
cwtl
sub
xchg
cmp
cwtl
mov
add
push
call
add
je
pop
cmpl
adc
and
sbb
popa
je
rclb
cld
mov
add
loopne
arpl
rcrb
cmp
repnz
xor
xor
push
xor
out
movsb
pop
cmpsb
inc
xchg
lret
mov
aas
jns
std
mov
int
dec
jmp
popf
int3
arpl
shrl
std
sub
adc
arpl
inc
fwait
jp
in
test
mov
add
dec
lods
dec
fs
jp
pusha
insl
inc
sub
emms
ret
and
mov
in
mov
fdivrs
sub
sbb
push
nop
cltd
push
les
sub
arpl
int
pop
pop
mov
jne
fcmovne
shlb
cmc
enter
jge
jb
dec
jecxz
mov
pop
sbb
hlt
mov
inc
in
push
sbb
loop
das
in
and
and
mov
out
lods
in
push
pop
mov
je
ret
arpl
add
xchg
mov
mov
push
int3
sub
movsl
xchg
or
xor
icebp
icebp
mov
fsubrl
hlt
sbb
cmc
dec
mov
jo
inc
pop
adc
mov
xor
push
arpl
cltd
fnsave
sbb
leave
stos
lds
cltd
insl
roll
jno
and
je
xchg
sbb
adc
and
xchg
pop
jnp
mov
jae
out
jle
dec
adc
mov
jmp
inc
jl
xchg
jl
stos
test
jmp
test
add
mov
add
push
movsb
imul
jecxz
data16
fimuls
add
lds
js
mov
int3
sahf
sahf
pop
data16
mov
adc
dec
stos
push
push
int
je
les
cmpsb
bound
and
std
les
jmp
mov
xchg
add
orps
mov
sub
and
icebp
cmpsl
lock
dec
orl
sbb
mov
sbb
and
or
push
lods
clc
add
lret
push
or
fdivrp
sbb
pushf
shl
push
xchg
sbb
sub
faddl
fldt
cmpsl
push
ljmp
cmpsb
dec
aaa
lahf
sbb
test
sub
xchg
ljmp
or
popf
popf
or
in
jbe
add
out
cmpsb
and
ret
daa
push
movsb
lock
push
sbb
mov
add
inc
cmpsb
xor
divb
popa
push
dec
aas
sub
in
mov
xor
sub
stos
lret
js
mov
pop
scas
mov
xchg
and
and
insb
je
mov
fistl
arpl
fistl
test
push
out
sbb
adc
gs
imul
icebp
int
pop
popa
shrb
add
mov
mov
fwait
pop
adcb
lds
or
cmp
dec
aas
sbb
test
popf
repnz
adcl
popa
add
push
mov
fiaddl
pshufw
push
sbb
pop
incb
and
outsl
push
popf
sbb
and
or
leave
test
roll
jne
cmpsb
hlt
dec
lods
xor
inc
mov
push
int
sub
arpl
jg
pop
adc
inc
and
lret
and
and
test
push
out
in
repnz
test
bound
nopl
sbb
call
xchg
adc
test
sarl
dec
aam
xor
push
dec
jne
inc
fisttpll
jns
js
pusha
ficoml
popf
dec
push
add
lcall
ja
sub
mov
fwait
add
pop
fiadds
sbb
push
cmp
mov
fsts
dec
mov
fsts
xchg
xchg
push
push
xchg
out
xrelease
or
shll
lods
dec
movsb
cmp
ret
into
adc
xchg
mov
sarl
mov
stc
test
pop
mov
insb
jle
addr16
push
test
xchg
or
mov
sub
aad
and
pusha
sub
pop
mov
mov
jmp
out
xlat
xchg
mov
mov
dec
fcmovu
std
imul
sbb
add
dec
lods
mov
jg
fsubrp
test
xchg
gs
pop
xor
add
out
loope
in
frstpm(287
pop
mov
icebp
add
subb
loope
jne
jne
adc
shl
jne
dec
pop
in
sub
arpl
sbb
jae
push
jbe
adc
les
scas
or
shl
movsl
push
push
mov
lods
scas
cwtl
insb
into
push
lods
aas
mov
mov
imul
jmp
pop
sbb
out
fcomps
std
jbe
and
sub
mov
jge
push
inc
jbe
and
imul
scas
mov
jmp
xor
sub
jne
adc
out
cmc
leave
cmp
loop
sub
sahf
dec
bound
sub
jb
dec
pushf
and
pmaxub
cli
jb
and
hlt
mov
es
fwait
pusha
inc
ret
test
arpl
dec
sti
pop
push
pop
sarl
insl
roll
jae
je
test
push
xchg
int3
aam
test
pop
mov
sahf
lods
icebp
insb
pop
int3
loopne
dec
ficoms
jo
es
lea
xchg
cmp
sbb
cld
adcl
fistpll
mull
xchg
push
cwtl
stos
and
sbb
sbb
lock
cmp
nop
pop
inc
pop
and
pop
cmp
iret
inc
das
push
callw
ficompl
pop
das
dec
sahf
push
cmc
stc
jp
or
loope
outsb
das
or
test
fwait
pop
sub
out
push
outsb
pusha
jo
dec
jmp
or
cli
fidivrs
iret
mov
jecxz
add
cld
popa
xor
pop
imul
sbb
es
shll
adc
daa
mov
sbb
sbb
and
ds
ds
fs
dec
jge
push
mov
sbb
dec
cmp
cmpb
out
xchg
fnstcw
mov
test
sub
jg
cmpsl
mov
jmp
pop
xlat
pusha
or
call
or
sub
push
lea
sub
and
push
cmc
mov
cltd
loopne
mov
xor
clc
cmp
lcall
pop
insb
dec
or
xor
fs
mov
adc
dec
jmp
or
cmp
cmp
push
popa
imul
mov
mov
push
dec
push
popa
push
xor
hlt
ret
cmp
push
xlat
mov
jl
mov
sbb
sub
mov
sbbb
lods
jns
adc
leave
cs
das
popf
rcrb
sub
cli
sti
xchg
fadds
subl
pushf
push
test
and
mov
stos
push
or
mov
gs
das
aam
lcall
and
inc
faddl
xchg
push
lahf
sub
lods
movsl
dec
push
push
xchg
or
mov
mov
jg
sbb
push
mov
sub
cld
mov
jecxz
aas
xchg
ret
mov
das
stos
sbb
or
adc
adc
and
ljmp
jo
and
vmovd
es
jge
mov
aas
lds
popa
xlat
test
xor
mov
imul
cmpsl
iret
sahf
push
add
ljmp
sub
jmp
mov
xor
sarl
mov
out
roll
jb
cmp
and
mov
cwtl
sub
std
ror
iret
push
daa
xor
push
inc
sub
stos
cmp
mov
mov
sub
inc
cs
add
adc
cld
rorb
mov
pop
test
mov
pop
pop
sub
push
or
dec
ljmp
cmpsb
repnz
xchg
fcompl
sarb
add
aam
out
jmp
movsl
and
stos
push
mov
push
test
ja
mov
push
inc
xchg
sbb
mov
bound
jbe
mov
dec
xchg
push
mov
test
and
mov
popaw
pxor
inc
decl
shl
test
fnsave
in
push
ret
or
add
in
out
ss
sbb
mulb
fyl2x
je
aaa
inc
push
xlat
pop
and
fcompl
testl
mov
int
test
add
or
inc
sub
mov
sub
fisubrl
jg
mov
lahf
lea
pop
xchg
out
add
cmp
rcr
hlt
adc
mov
pusha
clc
adc
fmul
lret
aad
adc
xchg
push
push
dec
ret
pop
gs
jo
lret
mov
pop
mov
shlb
inc
ja
dec
or
cmp
test
loope
push
inc
inc
mov
jns
movsb
xor
aam
lock
shll
dec
jp
push
mov
jnp
inc
mov
xchg
cli
sti
xchg
popw
test
jae
call
or
in
xchg
mov
ftst
dec
push
int
jmp
cmc
pop
mov
lret
or
je
rcrl
mov
xchg
movsb
pop
hlt
xchg
or
leave
sbb
mov
cwtl
subl
insl
mov
jnp
mov
push
imul
int3
add
jmp
jmp
cld
imul
das
repnz
in
xor
test
cmpsb
inc
les
bound
pop
jecxz
icebp
push
push
or
mov
xorl
dec
or
mull
adc
jo
jle
std
rorb
stc
mov
xorl
imul
outsb
mov
xchg
pusha
dec
jg
out
lock
mov
jg
mov
xchg
sub
mov
push
sbb
dec
inc
push
bound
adc
lds
mov
and
leave
ds
mov
icebp
inc
cltd
pop
push
popf
ss
mov
imul
inc
data16
stos
or
mov
loopne
gs
mov
jnp
icebp
pop
dec
mov
leave
dec
cmp
jne
in
mov
into
adc
arpl
into
push
int
cmp
jno
stos
pusha
mov
outsl
mov
bound
or
push
sub
add
cmc
sbb
in
gs
mov
sbb
mov
ret
pop
es
inc
cmp
mov
jo
pop
xor
inc
clc
hlt
xlat
repz
je
xchg
imul
dec
jg
cmpl
sti
cmp
push
cmp
cs
jmp
mov
sarl
push
mov
out
jnp
out
mov
or
pusha
clc
mov
push
sti
orl
or
repnz
xor
xchg
mov
adc
jmp
mov
mov
mov
mov
lret
rcrb
pop
sbb
fidivrs
jmp
rdseed
add
mov
xchg
mov
popf
fwait
ds
shr
adc
or
lahf
xchg
push
shll
jo
lds
loop
dec
sti
mov
lahf
sti
aaa
cmp
push
pop
pop
push
sub
push
divl
loopne
mov
lods
lods
sbb
xor
sub
sub
outsl
sti
mov
int
pop
sub
and
xor
scas
sqrtps
ret
test
sbbl
cltd
inc
pop
inc
inc
loopne
jmp
push
and
shll
lahf
push
mov
mov
scas
mov
jl
sub
push
addr16
add
insl
fsubl
mov
inc
out
pop
aas
sbb
pop
ret
push
jbe
fiaddl
mov
inc
pusha
repz
mov
test
cmp
test
cmp
fsts
iret
sub
or
les
addb
sbb
or
inc
in
xor
lcall
fdivl
mov
dec
js
cmp
jl
fsub
test
mov
push
rcr
mov
mov
mov
in
dec
shll
popf
pop
mov
push
clc
dec
jmp
lods
imul
daa
dec
mov
dec
iret
inc
push
cli
inc
xor
xor
or
dec
jle
add
push
jmp
adcl
pop
inc
popa
add
and
fdivs
cltd
add
aad
push
bnd
int
icebp
and
dec
sbb
scas
addr16
add
jmp
xchg
enter
mov
inc
push
push
jo
pop
ret
sub
jle
or
push
mov
addr16
std
adc
ret
fnsave
inc
insb
lock
or
dec
sahf
sub
hlt
xorl
stos
jo
xchg
int
inc
push
sbb
sbb
jb
cltd
fadds
roll
xor
sub
lahf
pop
adcb
ret
divb
repz
add
dec
lahf
movsl
mov
lret
test
pushf
jne
dec
cmp
cmp
jnp
or
lret
mov
cli
mov
lds
repnz
push
and
out
out
jl
in
arpl
repz
jo
adc
mov
std
in
and
lods
loope
bound
lea
pop
outsl
mov
inc
dec
cmp
jno
push
mov
and
adc
cmc
mov
sub
loop
and
pop
mov
das
push
out
cmp
xchg
cmpsb
xor
movl
cmp
cwtl
adc
lods
in
mov
ret
sbb
xchg
xchg
leave
or
mov
or
jle
leave
push
xchg
insl
pop
pop
pop
push
js
dec
xorb
mov
push
inc
mov
imul
out
pop
iret
xor
dec
pop
sahf
jo
mov
mov
sbb
scas
shll
sub
rcrl
mov
out
leave
pop
push
repz
dec
lea
loope
pop
divb
repnz
sbbl
pop
sbb
lcall
cld
push
scas
inc
mov
sub
aaa
xchg
in
scas
lcall
data16
loope
dec
mov
ret
mov
fdiv
dec
loope
pop
cmp
scas
jns
mov
jge
push
aad
xchg
rol
call
lret
bound
cmc
aaa
fisttps
pop
mov
sbb
decb
xor
loop
std
add
lods
pop
adc
iret
and
movsl
arpl
pop
push
cmpsb
fs
fs
roll
inc
xor
dec
mov
lds
repnz
jmp
clc
movsl
fiadds
test
add
idivl
faddp
xchg
sbb
ja
dec
lcall
adc
push
push
sub
lods
cmp
loop
inc
push
mov
mov
gs
lds
shlb
lds
and
int3
xor
xchg
and
xchg
lock
inc
das
cmp
je
mov
rclb
pusha
mov
nop
pusha
sti
int
stc
iret
or
xor
jg
test
sar
dec
cmpsb
dec
mov
stc
in
loop
pop
mov
ss
xchg
dec
out
push
movsb
adc
fwait
pushf
push
sub
int
and
in
imulb
lea
lahf
push
or
mov
mov
nop
pushf
dec
outsb
xchg
sub
es
lahf
xor
adc
xor
loope
insb
xchg
mov
mov
jmp
or
push
test
pop
adc
imul
xchg
jno
lret
pop
and
je
xchg
sarb
lahf
aaa
pop
sub
jmp
adc
jmp
adc
ja
mov
cmp
dec
mov
aaa
jle
out
fs
xchg
std
aas
cmp
cmp
sub
xchg
inc
fisttpl
in
sti
addb
js
ds
sbb
pop
stc
popf
in
and
inc
pop
pop
push
xchg
pop
mov
push
sbb
jge
roll
imul
mov
mov
pop
mov
inc
or
mov
mov
iret
jle
rcrl
pop
xchg
and
les
pop
push
repnz
pushf
ljmp
insb
out
stos
add
insb
xchg
sbb
sbb
sbb
pop
cli
test
mov
sbb
inc
loop
lods
lods
mov
fsubrl
push
ja
inc
pop
add
jb
ret
sbb
call
mov
push
add
and
push
scas
or
fistl
popa
or
push
ss
mov
cli
js
les
sete
or
dec
dec
or
shlb
lcall
mov
pop
clc
addr16
roll
mov
dec
mov
mov
mov
jnp
das
sub
jg
push
pop
mov
cwtl
leave
or
jmp
inc
mov
rorb
sub
jle
or
movsl
lcall
xorl
cltd
int
mov
push
jle
inc
adc
mov
mov
sbb
and
aas
add
into
stos
ljmp
inc
push
push
hlt
mov
inc
mov
in
adc
das
in
push
js
out
into
cmpsb
or
jg
dec
and
mov
xchg
pusha
es
xchg
and
test
xorl
add
ret
shrb
pop
fmull
or
sub
xor
xchg
jg
pusha
or
push
loopne
les
sbb
sub
ja
xor
cltd
xchg
cmp
loopne
adc
cmpb
rcrb
mov
inc
shrl
cmc
push
and
sub
cmp
dec
add
jbe
and
decl
addb
movsl
fstl
cmpl
xchg
add
scas
mov
test
pop
test
es
pushf
cwtd
rcrb
fs
out
and
fildll
insb
jle
imul
mov
sbb
jg
test
scas
hlt
stc
mov
sub
loopne
and
sbbb
xor
mov
pcmpgtw
push
push
sbb
cmc
sbb
xor
and
xlat
das
lods
das
pusha
stc
fnsave
mov
mov
or
mov
mov
xor
dec
test
add
pop
cltd
repz
test
std
out
out
dec
cmp
push
mov
cmp
cmpb
or
inc
rclb
lods
loope
xchg
and
mov
filds
cmpsb
lods
sbb
jae
mov
mov
dec
in
sti
fld
inc
es
jge
jns
cld
mov
into
jmp
push
dec
aaa
mov
inc
test
push
push
lret
test
int3
lcall
je
and
fsubs
int3
into
xor
cld
push
decl
movsl
mov
push
cmp
daa
fcomps
jmp
das
rcrb
mov
inc
cltd
sahf
cmpl
fisttpl
sbb
jle
jl
inc
clc
arpl
stos
jg
inc
jae
adc
cli
mov
negl
fsubp
jp
shl
icebp
jns
cmp
pop
dec
fstpt
xor
mov
arpl
cld
inc
add
faddl
add
mov
and
inc
push
pop
pop
push
fstps
jnp
in
cmp
outsb
incb
jo
aaa
addr16
mov
jl
arpl
jno
fnstenv
fs
push
add
xorb
inc
lods
subb
push
sbb
mov
sub
xorl
insl
fnstcw
mov
xchg
hlt
les
das
jno
aam
add
negb
xchg
dec
mov
jb
xchg
xchg
jo
push
daa
lock
adc
out
test
andnps
sbb
mov
in
dec
push
push
mov
movsl
enter
push
add
sbb
daa
mov
jge
fiaddl
pop
rolb
mov
jle
pushf
repz
test
xchg
sub
testl
jecxz
mov
ljmp
sub
lahf
mov
or
cmpsl
fnstenv
fmuls
outsb
mov
add
push
jb
call
jge
push
orl
std
inc
jp
outsl
mov
adc
inc
mov
xor
loop
stc
repz
dec
push
cltd
cmp
sbb
jno
push
into
add
in
jbe
jne
mov
lock
adc
dec
test
out
repnz
add
gs
in
mov
pop
or
out
lods
repz
inc
scas
add
mov
adc
hlt
mov
js
jbe,pt
aaa
aaa
mov
add
inc
std
add
pop
pop
or
rorb
xor
push
push
out
loopne
nop
mov
pop
mov
test
adc
mov
jmp
push
jbe
mov
or
sbbl
stos
inc
mov
fs
int3
lret
push
fnstenv
mov
sbb
nop
iret
cmpsl
fwait
mov
lahf
sbb
bound
push
std
inc
pop
cwtl
xchg
inc
xor
shrb
xor
pop
and
xlat
fnstsw
xlat
mov
bound
call
inc
rcrl
cli
shr
call
pop
mov
je
test
xchg
cwtl
into
mov
mov
cmc
mov
xchg
sbb
in
mov
pop
jae
or
mov
cltd
cmp
outsl
inc
ljmp
xor
aas
hlt
sbb
and
or
aaa
sahf
mov
dec
mov
ret
pop
outsb
je
mov
push
cwtl
mov
rclb
cli
pop
dec
mov
and
lds
xchg
push
adc
mov
out
mov
shll
push
mov
loop
xchg
je
jnp
push
and
es
adc
mov
or
ret
fsubp
fwait
adc
adc
ds
inc
mov
arpl
test
sub
push
test
pop
sub
or
mov
lea
nop
loopne
mov
subl
jecxz
stc
mov
ljmp
sub
icebp
mov
jno
sub
test
fisttpl
enter
push
cmp
push
jp
shrl
shr
push
sahf
lret
push
and
iret
negb
dec
mov
lds
cmpsl
jp
mov
xor
dec
lea
test
cmpsl
add
add
cmp
cmpsb
int3
xlat
shlb
movsl
test
rclb
in
cmpb
stc
add
lcall
out
cmpsb
aam
ljmp
leave
sar
inc
mov
test
or
mov
jbe
xor
adcb
out
enter
jl
jne
rcrb
jae
lahf
sbb
xorl
mov
mov
in
sub
filds
andl
pop
repnz
cmpsl
jmp
inc
sub
dec
mov
or
sub
push
fldcw
fwait
lret
adc
adc
mov
dec
repz
mov
in
inc
outsb
dec
mov
cmp
dec
push
gs
ss
sets
repz
sbb
mov
mov
hlt
mov
and
lods
push
dec
jo
xchg
adc
out
loope
dec
jge
sahf
popf
fstps
push
jp
xchg
mov
mov
pop
not
cmc
sbb
sarl
iret
stos
ds
inc
mov
pop
jb
les
lcall
adc
push
das
jns
lds
xchg
sbb
xchg
push
or
fisttpll
jno
mov
xchg
adc
dec
addb
loop
pushf
pop
xchg
out
add
rclb
in
loop
je
xchg
xor
mov
int
mov
bound
cli
xchg
fwait
dec
mov
int
cmp
test
insb
cmpsb
stos
and
sub
and
lods
std
cmpsb
push
ret
lds
dec
je
repnz
pusha
loope
repz
insb
mov
mov
mov
mov
push
stc
sub
arpl
pop
cltd
loope
pop
ljmp
es
testw
inc
sbb
cmp
in
adc
pop
aaa
and
lahf
lret
out
insb
push
iret
repnz
shlb
inc
pushl
dec
push
sbb
js
imulb
ret
jo
xchg
mov
mov
in
add
pop
testb
push
and
cmp
cmpsb
in
loopne
pop
dec
cmpsl
cmp
pusha
arpl
push
cli
cs
insb
repz
dec
pop
aaa
pop
out
and
pop
pop
cld
xchg
mov
or
mov
stc
dec
jno
push
xchg
stos
mov
cmp
insl
or
cmpsl
mov
je
mov
adc
imul
xor
pop
stos
addr16
lods
jle
stos
jp
in
push
mov
xchg
cmp
in
nop
imul
inc
jns
push
inc
or
xor
mov
push
scas
cmp
add
mov
inc
xor
push
insb
test
shlb
sbb
dec
daa
pusha
or
inc
out
fisubl
jp
rolb
lahf
fs
cmpsb
ret
xor
and
cmp
cmp
push
pop
sti
sub
pop
push
sbb
jmp
inc
jo
dec
dec
xchg
loopne
adc
lahf
lret
clc
idivl
adc
xchg
in
cmp
pop
ss
out
push
push
jns
aaa
mov
fdivrp
add
or
and
cmp
sbb
gs
in
mov
push
cs
test
into
mov
aaa
xchg
in
icebp
xor
xchg
sub
out
les
pop
jno
les
pop
xor
mov
enter
jmp
fldenv
pop
std
sbb
fcoms
cli
in
xor
inc
push
shll
cmp
movsl
dec
imul
in
dec
nop
inc
xor
fwait
scas
mov
mov
adc
jb
dec
mov
jbe
scas
scas
dec
mov
andl
rorl
lret
cmc
nop
dec
mov
sbb
inc
pop
jb
in
iret
test
std
insl
jae
add
jbe
or
mov
in
out
pop
icebp
and
test
or
imul
fs
sub
rcll
arpl
mov
mov
int3
loope
push
lahf
mov
divl
pop
xor
int
ja
push
gs
popa
xor
stc
xor
jl
sub
int3
sub
fsubs
rcrb
sbbl
cmp
push
rcrl
ss
movsl
sub
movsl
sub
jp
adc
mov
sub
push
dec
xor
dec
push
ret
xchg
push
sar
sbb
mov
mov
das
rcrl
pop
dec
outsb
mov
sahf
sub
test
aas
dec
pop
daa
rcll
pop
pop
xor
mov
pop
insl
les
inc
fnsave
jmp
bound
jb
add
leave
xchg
sub
xor
imul
int
mov
dec
sbb
fsub
add
mov
aad
repz
in
dec
incl
outsl
pusha
or
ror
aad
push
mov
mov
add
dec
add
cli
mov
mov
mov
lahf
adc
jg
pop
xchg
mov
leave
out
push
cwtl
icebp
xchg
dec
dec
loopne
jp
scas
aad
inc
shl
cmp
in
or
push
into
loop
add
mov
lret
enter
jmp
dec
cmp
push
mov
das
push
stc
mov
xlat
sbb
and
sub
or
aad
add
xor
mov
and
rorl
lock
je
test
adc
add
mov
sbb
mov
mov
jbe
lea
pop
pop
lret
jg
pop
shrl
lret
cmovge
xor
int3
repnz
clc
lret
xor
mov
aam
mov
mov
pop
inc
pop
push
clc
adc
outsb
bound
insb
pop
inc
jo
test
add
xchg
stos
popa
push
add
rclb
xchg
setge
push
ljmp
popf
sub
ret
dec
jo
adc
mov
or
loopne
mov
xor
outsl
stos
in
rcrb
xchg
dec
adc
out
lods
int
pop
xlat
pusha
pushf
outsl
into
rcrl
leave
sub
call
xchg
cs
add
adc
or
aad
cmc
nop
cmp
xchg
das
pop
push
inc
hlt
push
push
inc
push
icebp
rcrb
out
and
and
jbe
and
xchg
lock
shr
inc
mov
aam
lahf
insb
push
jg
and
pop
rclb
call
inc
pop
sbb
sti
lods
lahf
sub
add
int3
mov
pop
inc
cmp
pop
adc
pop
jmp
outsb
pop
push
jae
call
shll
xchg
repnz
out
aaa
popf
out
jecxz
pop
cs
js
sub
mov
fsubrl
sub
adc
dec
mov
cmp
out
adc
xor
aad
scas
ret
je
rcrb
xchg
sbb
jmp
xchg
add
adc
fsubrp
pop
and
int
mov
leave
out
or
jecxz
and
insb
ljmp
std
or
xor
cmp
add
cmpsb
popa
daa
bound
mov
pop
imul
ret
ret
push
xor
iret
pop
cmp
aas
cmp
mov
and
sbb
repnz
mov
repz
rcl
dec
addl
cs
push
test
enter
jnp
sub
stos
mov
pop
pushf
imul
sahf
adc
pop
cltd
or
rcrb
addr16
cwtl
sub
mull
pop
mov
loop
inc
push
xchg
imul
stos
and
add
movsb
cwtl
xchg
xchg
cltd
std
sarb
clc
and
mov
inc
enter
pop
andl
orl
fsubrl
loope
mov
mov
adc
pop
jmp
gs
xor
cmpsb
xchg
insb
add
lret
lea
lds
stos
mov
and
and
mov
imul
scas
ss
movsl
nop
xchg
in
inc
xchg
mov
mov
mov
xchg
cmp
inc
sarl
xchg
xchg
or
mov
repnz
int3
std
shlb
pusha
pop
inc
or
add
xchg
jmp
ss
ja
or
fsubr
sbb
je
std
sub
mov
jle
test
out
js
int3
mov
sbb
adc
ret
xor
lret
and
sbbb
add
inc
ljmp
sub
mov
test
stos
push
clc
inc
sub
push
dec
scas
dec
jb
les
shll
test
aaa
lods
popf
in
mov
das
sub
std
jbe
cli
adc
mov
xchg
iret
out
cld
jb
and
repz
cmpsl
mov
and
loopne
xchg
ret
lret
mov
ret
stc
pop
and
mov
add
sbb
or
xor
lret
adc
jmp
shll
addl
cld
add
mov
les
sar
lcall
lahf
sub
inc
push
jecxz
jg
jmp
sub
test
shlb
ss
testl
mov
enter
dec
sub
dec
mov
dec
test
mov
sbb
sbb
out
cmp
inc
lahf
xor
mov
cltd
mov
notb
push
test
test
inc
sub
fxch
dec
jbe
dec
fs
cli
sti
jbe
ds
addr16
dec
bound
mov
subl
xor
out
jne,pt
fsubrs
pop
dec
sbb
dec
mov
dec
out
int3
mov
mov
test
orb
jmp
popa
add
xchg
pop
mov
add
and
xchg
jge
inc
popa
xchg
je
push
aas
jmp
inc
jp
daa
pusha
adc
sub
sbb
mov
std
xlat
cmp
dec
loop
jg
sbb
push
fldl
mov
add
dec
fcmovnu
mov
mov
stos
in
lahf
and
jb
xor
inc
test
xchg
mov
adc
xor
insb
mov
inc
cltd
xlat
sub
std
pushf
pop
and
std
pusha
mov
gs
or
nop
adc
icebp
out
decb
sbb
or
add
dec
jb
adc
aas
jmp
hlt
xchg
imul
outsb
xchg
mov
out
jl
lods
sbbl
mov
sti
mov
xchg
and
fsubl
mov
enter
sub
das
cld
or
pop
mov
push
cmovp
dec
aad
mov
repz
lods
sub
push
ja
pop
or
jns
hlt
inc
push
add
dec
mov
mov
test
inc
add
xor
mov
mov
dec
sub
pop
rclb
dec
out
inc
mov
mov
rolb
dec
aam
sarb
jg
pop
sub
sub
adc
and
out
and
lret
sub
les
ret
clc
clc
sarl
push
jle
dec
mov
lds
das
test
mov
cmp
aas
leave
pop
add
adc
ja
mov
add
mov
inc
leave
inc
out
mov
push
lcall
pop
xchg
sbb
shr
outsl
cmpsl
icebp
push
push
jae
adc
push
rorb
cltd
cmp
mov
imull
lcall
mov
xchg
out
mov
push
mov
mov
jl
rcl
xchg
scas
lea
pop
fwait
xchg
mov
aam
add
adc
frstor
mov
mov
dec
out
repnz
xchg
jg
add
pop
xchg
and
inc
lret
mov
repz
sub
in
adc
push
inc
and
mov
lds
inc
out
push
call
mov
cmp
push
pop
jmp
xchg
repz
stos
ljmp
adc
popa
mov
dec
dec
sub
ja
pop
das
pop
mov
push
aam
jle
mov
sub
push
dec
inc
dec
jne
enter
pop
popa
or
ds
xor
cmp
aad
xor
mov
inc
cmc
and
je
stos
mov
pop
jg
pusha
data16
inc
push
push
adc
roll
push
add
inc
je
xchg
xchg
push
out
sub
ret
cmpsl
or
js
xchg
xor
addr16
inc
mov
pop
pop
gs
ffreep
in
mov
adc
fldt
mov
adcl
xor
push
andl
enter
dec
add
push
loope
sub
jge
icebp
ret
std
aad
dec
je
fildll
cmp
xchg
addr16
dec
pop
sbbb
cld
mov
call
dec
loope
adc
pop
mov
and
lds
pop
jle
pop
jno
fchs
pop
int3
notl
xorb
mov
into
mov
mov
mov
jge
cmp
mov
iret
data16
mov
or
jb
mov
movsb
mov
mov
dec
adc
push
cmpsl
jnp
in
jg
sbb
lret
xchg
test
push
loopne
stos
mov
cmpsl
scas
bound
imul
daa
cltd
int
insl
out
lods
lahf
mov
in
test
pop
loopne
jns
mov
push
mov
adc
ficompl
decl
sbb
shl
inc
jg
jecxz
les
pop
dec
loope
dec
mov
add
pop
adc
inc
inc
pop
lds
fcmovne
or
in
push
fwait
inc
mov
adc
inc
ror
xchg
daa
mov
mov
lret
sbb
lods
or
pop
pop
push
xchg
jecxz
aas
jbe
ss
stc
ja
sub
mov
mov
fs
dec
negl
ja
les
jp
test
and
xchg
fidivl
cmp
arpl
lret
imull
add
xchg
cmp
and
inc
aad
pop
outsb
mov
pop
cld
adc
pop
int
aas
lret
lods
add
mov
xchg
out
testb
imul
notb
lea
mov
sbb
jo
repz
outsl
jp
pop
xor
lods
negl
test
sbb
popf
jns
ljmp
out
jecxz
into
pusha
hlt
mov
cltd
js
push
cli
paddw
mov
push
xor
and
xchg
gs
mov
push
mov
or
out
dec
jb
dec
fisttpl
pop
push
outsl
jb
mov
jbe
mov
xchg
lret
and
repz
and
ljmp
xchg
mov
cmp
add
push
in
xorl
xchg
in
pop
mov
ret
ret
or
aam
sti
imul
call
mov
and
cwtl
adc
add
xor
cltd
movsl
push
push
sbbl
imul
shlb
mov
cmp
cwtl
mov
pop
push
idivb
call
adc
in
xor
mov
cld
push
neg
rorb
repz
stos
mov
dec
jmp
scas
js
aas
addr16
popf
lcall
cmp
adc
iret
imul
adc
addb
and
fstpt
call
sub
popf
dec
imul
adc
mov
adc
ret
loopne
les
sub
add
es
mov
mov
ret
xor
and
stos
push
xchg
inc
push
xlat
and
adc
cmp
xchg
popf
push
xor
sbb
sbb
xchg
out
addr16
sti
jmp
and
jo
outsl
adc
sahf
bound
sbb
and
aaa
add
mov
xchg
cld
cmp
dec
mull
enter
in
aam
sbb
dec
roll
mov
mov
sbbl
daa
push
out
sbb
add
jle
and
sbb
mul
outsl
adc
sbbl
xchg
and
ret
icebp
es
and
add
cmp
int3
daa
pop
call
cmpsl
dec
inc
push
insb
subb
or
or
lea
cmc
ficomps
fsin
sar
negb
out
ficoms
xor
jle
pop
lods
add
out
jmp
dec
mov
iret
nop
sar
subb
jo
pop
push
jae
dec
out
cld
scas
vpminub
mov
fadds
cld
mov
stc
xor
ja
lds
xchg
cs
fwait
lods
xor
ret
insl
lret
popf
mov
xchg
push
lds
sub
dec
sete
add
sub
sbb
cli
xchg
jge
gs
xor
pop
mov
rcrb
push
in
mov
pop
mov
or
dec
data16
dec
outsl
push
xchg
aam
xchg
insb
jne
fscale
mov
pop
ret
in
dec
iret
and
inc
cmp
data16
xchg
jns
push
jbe
xchg
mov
push
and
daa
mov
mov
mov
jae
xchg
lret
ja
fidivrl
or
xor
push
fdivl
aad
mov
mov
call
sbb
add
lods
inc
fdivr
dec
cmpsb
enter
push
repnz
inc
adc
cmp
push
add
test
test
adc
test
sub
dec
pop
pusha
in
sbb
stos
mov
xor
enter
add
je
fbstp
sti
cmp
push
and
xchg
lret
rcll
scas
shll
cs
xchg
inc
das
mov
fs
mov
lods
mov
les
andl
xchg
popa
outsb
test
mov
pop
loope
mov
sbb
aad
jno
adc
pusha
jbe
mov
pop
cmp
mull
stos
xchg
add
mov
sbb
pop
push
ds
cmp
pop
push
dec
lock
push
out
cli
add
dec
push
lcall
sti
or
test
fidivrl
xchg
push
xchg
xor
insb
je
sub
lea
mov
jo
hlt
mov
hlt
jl
mov
add
dec
pop
into
into
fbstp
push
sub
jecxz
pop
sub
mov
das
cmp
insb
cmpsb
jmp
mov
cmp
sub
stos
adc
and
icebp
cli
mov
sbb
and
enter
lcall
pop
jnp
inc
adc
pop
adc
inc
jge
into
or
cli
mov
cmc
arpl
data16
das
cli
test
pop
sub
cmp
adc
mov
out
inc
shl
inc
faddl
mov
mov
mov
mov
push
inc
push
adc
imul
stos
pop
dec
pop
hlt
lret
addr16
xchg
sub
pop
sbb
andl
sbb
lock
push
in
movb
cltd
or
int
xor
repz
xor
xchg
aas
jae
push
repnz
inc
leave
push
testl
es
iret
pop
ja
int
cmpl
mov
push
push
mov
xchg
outsl
adc
xchg
aas
mov
es
push
repz
dec
mov
movsb
js
out
pop
in
mov
fnsave
xor
lods
push
shl
test
or
test
inc
add
add
jnp
cltd
xchg
inc
xor
and
push
xchg
xor
ja
inc
stc
jne
arpl
xchg
xchg
lods
test
and
pop
testl
repnz
stos
mov
push
jle
cld
jns
outsb
xchg
popa
pop
push
push
mov
imul
rcl
aam
ficoms
imul
out
imul
scas
fs
push
mov
call
pop
inc
rcrl
push
les
jo
movsb
sahf
cld
fisubrl
mov
xchg
mov
das
sub
xchg
loope
mov
jge
sub
cwtl
dec
aas
or
das
cmc
cld
push
cmp
adc
xchg
out
mov
inc
mov
adc
xchg
aas
rorl
lret
cmpsl
jecxz
out
xor
fldt
add
scas
or
xchg
or
pop
cmp
or
in
mov
push
pushf
lods
dec
aaa
outsl
sysexit
push
mov
lock
sbb
pop
movsl
push
sbb
dec
jmp
mov
pusha
scas
xchg
out
xchg
and
jecxz
pop
push
jg
dec
clc
jno
rcrb
mov
adc
nop
clc
cld
aad
pop
rcr
and
sub
cmp
jne
pop
insl
push
inc
xorl
aaa
sbb
push
outsl
rcr
subb
push
cmp
jle
cmp
cmpsl
cwtl
popa
jmp
xchg
lret
mov
int
fs
stos
mov
js
scas
mov
jecxz
xchg
jmp
pop
cmpsb
stc
out
sub
leave
loopne
std
aaa
repnz
std
or
mov
sub
push
movsl
xor
mov
xchg
scas
ss
ss
xchg
cltd
jp
and
testl
push
rcrb
mov
test
xorl
dec
clc
call
je
dec
or
mov
mov
dec
sbb
adc
jno
addr16
test
mov
insl
lret
and
jnp
jp
xchg
xor
pop
fnsetpm(287
jecxz
jo
fmuls
stc
fstpt
repnz
outsb
add
cmc
pop
cmp
shl
mov
imul
jns
or
cmpsb
push
xor
in
fwait
pusha
enter
jo
sub
sbb
push
or
mov
mov
into
add
cs
leave
dec
adc
les
adc
add
mov
cwtl
mov
stc
sbb
sub
push
push
hlt
out
cmp
test
loopne
push
xchg
inc
dec
xor
jge
icebp
or
rorb
add
cwtl
std
dec
sbb
orb
dec
into
sub
sahf
push
add
sub
daa
add
add
cmp
mov
adc
push
hlt
repz
mov
inc
mov
push
and
push
mov
jb
in
icebp
or
adc
xor
adc
imul
popa
xchg
faddl
insb
fwait
mov
sbb
inc
clc
nop
jno
cmp
add
push
sti
push
inc
pop
mov
shrb
mov
enter
in
shrd
mov
aas
push
sti
push
mov
imul
pop
push
push
push
rol
mov
loop
push
lock
or
pop
fadds
cmc
sbb
lcall
imul
fsubrl
adc
sbb
cli
jmp
xor
out
stos
popf
fs
jb
sbb
mov
iret
pop
inc
in
sbb
aas
rolb
js
addr16
shl
icebp
adc
pushf
outsb
leave
das
fwait
jle
inc
or
sub
data16
mov
xchg
data16
in
adc
mov
iret
popa
and
mov
in
xchg
mov
xlat
hlt
adc
mov
les
dec
pop
mov
dec
sub
test
pusha
adc
jns
pushl
xor
pop
sub
jmp
repnz
shll
call
and
fistps
roll
adc
sahf
dec
lods
push
aaa
lea
fisubs
push
cwtl
loopne
jecxz
pop
xchg
pop
lcall
in
add
pusha
int
jne
jnp
cmp
mov
insb
stc
inc
ror
dec
mov
shl
stc
push
sub
xchg
cltd
jmp
lods
ffreep
cmp
mov
fsubs
mov
jge
and
mov
sbb
mov
sub
int
orb
loop
punpckhdq
mov
mov
mov
lea
imul
mov
test
jo
cmp
daa
mov
cltd
fs
insl
rol
push
cld
adc
loopne
aas
and
sbb
lock
aaa
and
and
aas
mov
adc
pop
in
sub
subb
mov
cltd
push
mov
xor
mov
mov
cmp
into
stos
popf
mov
adc
inc
in
jb
ret
inc
test
cld
inc
lock
jle
mov
in
repnz
test
sti
insb
xchg
cmpl
std
stos
jmp
push
pop
iret
ret
mov
add
addr16
sub
icebp
and
mov
mov
mov
mov
inc
clc
mov
mov
icebp
xor
inc
pop
and
rcrb
mov
and
aad
ss
jnp
or
mov
mov
js
dec
rorl
dec
aas
jne
push
lods
sub
xchg
or
xor
fwait
jo
pusha
jge
xchg
jmp
repnz
rclb
cltd
aas
fs
aad
lods
shll
jb
dec
scas
cmpsb
add
push
addb
mov
mov
jg
outsl
sbb
push
mov
mov
repz
loope
fidivl
ljmp
cwtl
popa
mov
xor
add
cmp
mov
faddp
movsb
jb
or
push
jle
fbld
outsb
addb
into
ljmp
inc
push
push
adc
jge
daa
jl
not
or
mov
inc
arpl
jge
xchg
bound
mov
lret
mov
rcl
xor
clc
cli
mov
aad
jmp
lea
jo
aaa
in
push
insb
addb
jp
gs
xchg
std
mov
jg
cmp
xor
icebp
mov
lret
hlt
subl
and
inc
push
dec
dec
jnp
sbb
inc
hlt
dec
cmc
fcoml
xor
jmp
icebp
jle
fcoml
add
xchg
popa
dec
xchg
pop
rcrb
fbstp
scas
insl
jg
jno
inc
loop
repnz
not
mov
popf
pop
push
mov
cmpsl
int
dec
lahf
mov
je
fcompl
add
mov
cli
dec
add
scas
push
mov
pop
lea
cmpsb
fdivrl
cmc
push
in
mov
adc
push
mov
out
inc
xor
jno
test
les
push
aad
adc
loop
jnp
jecxz
or
xor
aam
mov
xchg
adc
jecxz
pop
push
lock
daa
dec
xor
cmp
rcrb
xchg
loop
cli
rcll
aad
sahf
mov
xor
push
loopne
in
test
push
adc
rep
cltd
fldl
lret
cli
inc
or
cmp
jnp
pushf
aad
add
mov
pop
pop
int
cltd
imul
rcl
sub
xor
loop
push
adc
mov
sub
ds
lods
and
shll
cmc
decl
in
ror
push
or
sbb
pop
jmp
push
or
sub
lea
push
dec
ljmp
xor
insb
pushf
sbb
pop
jnp
icebp
fisubl
mov
fadds
and
sbb
xchg
push
jbe
jo
inc
roll
mov
repnz
sbb
sarb
imul
iret
ficoml
or
mov
test
xor
mov
out
mov
aaa
xchg
out
jns
xor
add
shlb
icebp
mov
lds
or
push
push
adc
popa
pop
popf
jmp
or
mov
arpl
ret
loopne
jno
cwtl
or
adc
sbb
sbb
push
loopne
je
mov
xchg
rcr
les
sbb
fcomps
ret
test
and
cltd
lcall
mov
jbe
jmp
sub
test
subl
inc
test
pop
mov
lcall
das
mov
mov
cmp
clc
es
fcmovu
cmp
testl
popf
into
jl
and
xchg
sub
das
fmuls
cmc
jne
adc
and
adc
insb
sbb
adc
or
mov
and
push
sbb
push
sahf
movb
add
sub
sbb
je
mov
imul
xchg
mov
std
fists
push
sub
xor
and
test
std
xchg
int
cmp
dec
pop
lods
push
dec
push
rolb
push
pop
test
xchg
xor
dec
imul
roll
fists
test
bound
push
or
jecxz
adc
push
loope
inc
mov
popa
pop
shlb
lret
add
fidivrs
imul
scas
pop
add
lret
jo
std
xchg
push
push
cmc
xlat
adc
fucomip
test
dec
xchg
add
addr16
pop
ja
test
test
xchg
inc
mov
adc
xchg
inc
mov
and
adc
xor
sub
mov
stos
fs
push
stos
ljmp
add
js
pop
sbbb
pop
ret
pusha
jge
sub
hlt
sbb
mov
jmp
cmc
dec
jg
pop
addl
call
push
mov
jle
sbb
popf
and
jp
cmp
add
lds
iret
lret
xor
push
aam
dec
popf
hlt
in
fcomi
dec
int
lods
jne
nop
imul
out
push
lcall
pop
jne
test
pop
int3
mov
inc
dec
pop
addr16
or
push
shll
mov
shr
jo
mov
sbbb
test
mov
sub
sub
mov
cmc
rol
sarl
rcr
and
mov
jmp
jnp
imul
push
mov
pop
popa
lds
dec
dec
or
add
lret
pop
pop
lea
gs
test
xlat
cs
inc
scas
sbb
xchg
js
testb
rcll
aam
sub
add
lahf
push
movb
dec
add
mov
je
addr16
inc
ror
ret
in
ljmp
and
mov
jl
sbb
inc
arpl
loopne
push
ffreep
pop
cld
jno
ds
sahf
and
jno
dec
lret
pop
in
movsb
outsb
xchg
roll
and
int3
mov
icebp
mov
stc
enter
push
dec
or
lret
sub
addr16
and
mov
nop
cmp
lret
pop
mov
push
pop
pop
xchg
dec
and
call
xchg
mov
jns
jge
sub
pop
fucomp
pop
push
mov
out
cmp
jl
shrb
shl
loope
mov
mov
adc
out
mov
sub
test
jge
cmpsl
cmp
push
int
loopne
clc
in
inc
adcl
xor
pop
and
mov
push
xchg
scas
les
jbe
inc
ret
loopne
inc
lods
ja
adc
cwtl
into
insl
cmp
fwait
repnz
orl
jae
out
ja
or
sbb
enter
sbb
cmpl
lock
cmc
les
jecxz
popf
aaa
jb
imul
ss
cmp
shrb
xor
sub
es
add
fdiv
je
jb
mov
push
jg
test
lds
push
into
inc
movsl
mov
dec
fiadds
fbstp
stc
into
or
mov
arpl
repnz
clc
push
jmp
jbe
and
shrl
jge
add
mov
inc
xchg
sub
sub
mov
aaa
cmp
sbb
adc
in
incl
stc
iret
enter
dec
mov
rorl
jge
aam
mov
lahf
fs
or
adc
mov
sub
scas
cltd
jecxz
add
xchg
faddl
mov
xchg
sub
insl
mov
sbb
jne
lahf
sub
push
xor
xchg
imul
or
mov
push
mov
or
repnz
popa
push
mov
cmp
hlt
popa
or
fisttpl
sbb
aad
repnz
in
inc
subl
shrl
cmpw
bound
mov
test
mov
adc
xchg
xor
cmp
stos
dec
add
or
sbb
add
ret
lods
sbb
and
call
pop
jecxz
or
dec
test
fbstp
mov
sbb
fs
rol
push
mov
stc
dec
pop
mov
aaa
std
adcl
inc
sbb
add
test
ja
mov
xchg
sarl
je
sub
and
mov
push
fstp
jle
jecxz
push
hlt
ds
add
push
mov
mov
jl
push
aas
nop
fsubrp
movsb
ja
cmc
inc
rcrl
cld
xor
adc
inc
jmp
push
and
jno
or
cmpsl
mov
and
mov
inc
out
adc
inc
je
push
outsb
ret
cmp
xor
pop
add
pop
std
scas
cld
inc
in
gs
sbb
mov
push
cmpsl
lcall
jnp
repz
or
jae
daa
outsl
mov
arpl
sub
jecxz
pop
insl
xor
cld
add
pop
mov
aam
lock
jmp
xchg
out
xchg
xchg
mov
daa
fidivs
fistl
sub
jb
outsb
icebp
out
arpl
int
pushf
sti
aad
into
or
jmp
adc
fst
cmpsb
mov
loopne
inc
add
and
adc
jbe
or
jle
lods
mov
mov
mov
adc
movsl
xor
test
test
clc
mov
imul
adc
jl
ss
movsl
mov
hlt
inc
jne
sbb
push
sub
cwtl
outsb
xor
xor
sti
xchg
sub
jmp
sbb
test
sub
sub
add
dec
add
xchg
call
push
cmp
movb
pop
sub
out
inc
jno
adc
aad
push
cmp
xchg
enter
sub
insb
inc
scas
fsubrl
jmp
fidivs
push
or
sbb
jmp
mov
lcall
xchg
mov
xchg
mov
sbbl
mov
inc
outsl
mov
imul
or
bound
ret
std
std
mov
andl
rolb
mov
cmp
aam
ret
xchg
test
cmp
pusha
push
repnz
data16
out
sub
sub
cmpsb
adc
ret
shr
out
mov
cli
add
into
or
sahf
adc
mov
sbb
mov
scas
inc
adcl
imul
push
dec
movsl
int
in
jg
aaa
xchg
out
out
ret
repnz
xchg
es
insl
cwtl
pop
cltd
xchg
add
sbb
jb
aad
xor
mov
stc
mov
ret
sahf
into
sahf
jno
and
popa
fsubrp
lret
xor
insb
insb
xor
push
in
jo
and
sub
fcmovb
cltd
xchg
fstps
add
jbe
or
fwait
aas
or
jo
jle
aaa
push
pop
xchg
lods
lods
rcrb
cs
sbb
adc
sub
xchg
in
sbb
mov
out
call
call
iret
in
mov
daa
lret
xchg
cli
jecxz
das
jns
ds
dec
addr16
js
add
ss
dec
sbb
sti
add
lret
lret
inc
inc
scas
jne
nop
in
test
daa
push
push
and
fcmovnbe
mov
out
jb
test
fistpll
or
pop
shlb
mov
fnstsw
pop
or
inc
sub
out
push
lret
mov
xor
fsts
lcall
das
push
sbb
int
loop
inc
pop
jno
sub
fwait
int
lahf
push
test
xchg
dec
jge
xor
jle
ds
xchg
sub
das
outsb
and
cmp
ja
adc
sub
inc
fisubs
and
rcrl
cmp
pop
jmp
movsb
out
ljmpw
iret
fisttpll
enter
fwait
outsb
inc
les
push
xchg
fistpl
and
adc
loope
repnz
sbb
pusha
cmp
sbb
rcl
mov
or
shll
push
nop
repz
pop
cmpsl
xor
push
push
inc
lret
and
or
xor
test
push
les
in
cmp
cmp
mov
outsl
mov
fcomps
daa
nop
icebp
cmpsb
into
and
sarb
insl
rcl
sub
hlt
push
mov
out
pop
testl
dec
or
cmpb
sub
addr16
pushf
icebp
mov
shr
in
sub
lds
inc
movsl
pop
xchg
and
jecxz
sub
add
stos
dec
fistl
lret
xor
add
daa
push
scas
push
add
sbbb
pop
xchg
and
cmp
arpl
push
sbb
sub
cmpsl
and
push
fistps
notb
loope
ljmp
dec
cmp
pop
sbb
out
cli
fwait
jle
pop
mov
xchg
and
fs
mov
fldcw
pop
je
and
mov
adc
push
inc
push
adc
lret
inc
pop
mov
xchg
cmp
repz
or
fbld
scas
das
fmuls
addr16
rcll
mov
add
les
jmp
pushf
jns
adc
aas
in
or
pop
jns
mov
mov
in
aaa
ret
xchg
jg
shll
mov
jmp
jl
in
mov
inc
out
icebp
sar
imul
jno
scas
pushf
cmp
call
xchg
lods
fdivrs
addb
cmp
loop
and
xchg
pop
fcmovnu
enter
aas
fisttps
into
xchg
jle
out
dec
cs
dec
stos
dec
fistpl
lret
inc
sti
ljmp
out
mov
in
sub
ljmp
xor
jb
xor
cmp
sub
inc
fisubrs
out
dec
rclb
and
push
mov
xchg
jecxz
dec
aad
adc
js
in
pusha
in
jb
xchg
outsb
adc
sub
std
orb
jo
in
pop
mov
aam
sub
adc
jbe
lret
sbb
flds
sahf
outsb
jne
mov
adcl
add
repnz
add
lcall
push
imul
test
jnp
pop
dec
add
imul
adc
cmp
adc
fldl
jno
andb
in
sub
shll
jbe
and
xor
cmpsl
decb
sub
cli
jne
xchg
addl
xchg
testl
sub
dec
lret
ficoms
jno
ds
adc
sbb
inc
adc
xchg
test
dec
push
stos
enter
sub
or
scas
aad
cmp
xchg
cmc
push
aam
incl
or
mov
icebp
decb
bound
cld
call
clc
push
push
aad
es
inc
imul
mov
sti
ficoms
test
push
or
sarl
adc
sub
add
fninit
lret
idivl
testb
cmp
ficoms
bound
dec
mov
imul
int3
jmp
int
hlt
mov
out
rorb
mov
mov
and
adc
mov
scas
sub
lcall
pop
gs
mov
sub
jge
icebp
test
ds
adc
pop
xor
xchg
lock
adc
inc
subb
sbb
aas
loopne
rolb
insl
dec
out
jne
push
fwait
imul
cltd
inc
or
in
add
pop
sbb
mov
push
cwtl
pop
adc
ret
and
pop
or
loope
lahf
sbb
pop
pop
push
cmc
xor
cwtl
icebp
jnp
cmpsl
test
jl
leave
mov
pop
pop
insl
leave
lret
sub
shll
mov
gs
std
add
pop
inc
mov
out
ja
cmp
cmp
fsubrp
xchg
cltd
mov
test
bound
sub
mov
stos
test
push
sbb
clc
cmp
xchg
test
pop
xor
xor
clc
insl
mov
mov
loop
movsb
movl
movsb
jl
fldl
push
dec
dec
hlt
push
mov
dec
push
or
xchg
pushf
in
push
icebp
insb
movsb
or
ret
addb
xchg
cmpsl
lahf
sahf
jp
loope
data16
pusha
in
mov
and
sbbl
mov
push
and
popl
out
das
cmp
pop
jp
decb
sub
cwtl
rolb
je
push
dec
outsl
sbb
lea
inc
jmp
push
aaa
fsubrp
testb
xlat
in
cmp
ret
pushf
stos
xchg
add
dec
fsubp
push
cld
push
jne
pusha
dec
pop
pop
jmp
add
jno
xchg
push
mov
xor
push
mov
push
repnz
and
push
bound
imul
cwtl
dec
xor
leave
xchg
xchg
scas
mov
xor
cmp
cwtl
stos
pop
jbe
cld
and
fs
push
push
mov
and
pop
testl
out
stos
and
out
mov
inc
push
aaa
xor
push
adc
pushf
insb
es
cmp
cmpsl
mov
cmp
stos
pop
aas
adc
sti
and
cmp
aaa
dec
or
xor
mov
xchg
call
pusha
mov
testb
stos
outsb
pop
out
pop
data16
xor
inc
mov
in
inc
push
add
aad
inc
sbb
xchg
popf
clc
mov
outsb
inc
xor
adc
ds
xor
cmp
push
es
js
aas
jmp
xchg
test
rolb
leave
mov
mov
push
addr16
out
dec
push
jbe
pushf
int3
xchg
cmpsb
dec
sub
ret
sbb
testl
arpl
cmpsl
imul
lods
test
sar
test
outsb
mov
push
test
pop
mov
mov
mov
mov
xor
mov
xor
fisubrl
and
clc
pcmpeqd
cli
enter
mov
mov
std
xor
mov
lea
xchg
xchg
nop
jo
inc
or
fmulp
add
xchg
adc
lock
mov
cmp
out
stos
mov
test
sbb
scas
cmp
xchg
inc
sbb
fistpll
cmc
sub
push
push
lds
add
leave
fisubrs
sub
ss
cld
shlb
mov
cmp
push
mov
idivb
jbe
addl
gs
call
lcall
xchg
loope
mov
xchg
mov
in
icebp
lds
jg
stc
orl
aam
mov
aad
sbb
outsl
je
push
iret
inc
ret
mov
cmp
add
fmulp
movb
test
and
pushf
scas
inc
loope
push
add
pushf
lds
xchg
mov
jne
into
pop
xor
jne
call
or
icebp
dec
ds
std
sbb
jg
xor
add
inc
test
pop
dec
ljmp
scas
or
in
sti
stos
add
out
fimull
aas
dec
sbb
test
roll
shl
xchg
inc
testb
pop
jle
repnz
mov
adc
fildl
and
loop
xchg
hlt
dec
mov
push
addr16
data16
mov
mov
lods
stos
data16
sahf
push
sbb
jge
pop
sub
pop
ret
pop
pusha
cli
daa
dec
xor
mov
stos
js
xor
shrd
outsb
das
dec
adc
inc
cmpsl
test
call
lods
in
push
mov
repz
cmp
dec
ss
arpl
sub
xor
pusha
xor
fcomps
pop
dec
sbb
sbb
daa
and
jo
inc
repnz
lods
sub
push
nop
jmp
mov
cmp
sti
fnstenv
in
sub
pop
sbb
daa
fbld
call
and
in
xchg
aam
cmp
and
xchg
fstpt
loopne
hlt
jmp
jo
aaa
lock
fnsave
add
repnz
loopne
ret
xor
shll
je
ret
aam
inc
push
sbb
push
inc
sub
ja
in
sbb
loopne
and
scas
xor
ss
cli
xchg
ret
lret
cmp
add
xlat
icebp
dec
pusha
pop
out
mov
xlat
pop
mov
mov
adc
rolb
and
jne
add
sub
push
dec
inc
leave
xchg
dec
mov
jae
mov
inc
jg
ds
sbb
push
out
cmpsl
outsb
mov
cmp
mov
insb
xor
aad
clc
push
jecxz
lods
cmpsl
dec
es
inc
mov
frstor
pop
les
insl
add
std
clc
stc
mov
unpcklps
test
test
dec
dec
lcall
and
in
aas
dec
dec
xchg
inc
cmp
outsb
aas
movsl
repz
xchg
dec
ss
cmp
push
mov
dec
andl
stos
jne
jno
sub
dec
inc
mov
adc
mov
add
jno
and
inc
lahf
cmp
or
xchg
stos
lret
mov
and
and
lea
inc
push
pusha
xor
aaa
enter
test
adc
imul
push
xchg
out
sub
mov
cmp
push
jg
pop
pop
or
dec
imul
orb
lcall
lock
popa
jo
scas
adc
sub
mov
pop
imul
gs
sub
fsubrs
cwtl
adc
fidivrs
out
sbb
insb
shll
pop
inc
inc
mov
sub
lret
inc
outsb
clc
das
inc
pop
ds
cli
adc
jo
je
xchg
dec
pop
and
into
out
and
push
pusha
insl
cltd
lret
cli
and
ret
stos
push
adc
and
mov
adc
xchg
jbe
fldl
ja
push
or
lea
sbb
lods
loopne
jl
jg
loop
negb
fistps
std
jp
pop
lret
test
int3
adc
jge
dec
inc
mov
rcll
dec
fstp
jg
push
test
or
jb
rcll
jg
push
sarb
dec
xor
imul
fwait
push
add
imul
aas
push
push
cld
testl
adc
mov
cmp
arpl
sub
mov
add
call
repnz
cmc
incb
addr16
into
rorb
idivb
dec
xchg
sarl
dec
and
and
out
sub
daa
rclb
jg
pop
gs
gs
cmp
jg
cmp
leave
dec
mov
and
and
ljmp
mov
loop
jno
pop
sub
addl
fsts
dec
movsl
sbb
push
icebp
sarb
sbb
mov
imulb
je
shll
ret
push
movsb
mov
mov
lcall
push
push
xor
mov
fdivs
cmpsl
xchg
inc
inc
lcall
dec
xor
add
sar
fildl
xor
mov
push
ret
mov
push
mov
in
jp
fistpl
mov
leave
sub
mov
push
dec
sbb
iret
jnp
lock
jb
sbb
inc
filds
repnz
lret
add
or
inc
ret
mov
jle
dec
scas
fs
push
wbinvd
test
inc
jne
push
roll
ss
ror
popa
repnz
mov
pop
jnp
mov
ljmp
xor
scas
dec
int3
addl
sbb
lahf
insb
add
cmp
addr16
jecxz
mov
inc
dec
loop
cmpsb
push
push
jmp
pop
cltd
mov
pop
push
aaa
mov
mov
mov
xor
mov
enter
mov
mov
lcall
je
fisttpl
xor
loope
mov
int
mov
pop
add
jno
out
nop
cltd
add
adc
dec
int
mov
mov
xchg
nop
sbb
pop
lcall
dec
sub
ss
cmp
and
in
xchg
push
test
inc
jae
in
lret
fildl
jmp
out
and
xor
enter
sahf
cli
int3
xor
dec
cmp
lock
and
or
pop
mov
iret
pop
push
orl
out
mov
popf
fisubrl
popf
mov
add
sbb
jl
in
mov
jb
mov
xor
pop
xlat
cmp
aam
cmp
subl
add
pop
lea
sbb
jnp
cmp
repz
pop
aam
or
adc
lret
ljmp
or
mov
ljmp
cli
sbb
cmp
jmp
inc
sbb
inc
lds
push
mov
shrd
mov
mov
loop
push
push
les
repz
mov
mov
jns
scas
jb
xor
pop
push
xor
sbb
jbe
inc
repnz
jno
add
dec
cld
insb
fildll
mov
pop
and
test
or
data16
or
lea
xchg
pop
outsb
dec
ret
sub
xor
imul
sbb
out
add
mov
jno
jb
stc
pop
je
mov
aaa
sti
jle
push
call
add
das
shrl
fwait
inc
push
pop
cmp
cmp
sbbl
aaa
lock
sub
dec
jecxz
push
mov
loope
inc
ja
lock
iret
mov
mull
into
jge
fdivs
iret
fisttpll
lcall
rorb
insb
jp
out
popf
test
mov
scas
arpl
scas
out
mov
xlat
cmp
sub
imul
push
pop
shl
sbb
pop
mov
cmp
xchg
mov
lcall
pop
jp
fucomip
loop
fdivrs
jno
add
outsl
fisttps
cmp
mov
pop
xor
push
addr16
mov
pop
in
adc
pop
mov
in
outsb
ljmp
cld
sahf
push
test
push
stos
mov
add
and
push
add
cmp
fcomip
inc
cmp
or
mov
dec
stos
add
mov
mov
cmpb
sub
test
mov
push
cmp
nop
jb
and
das
push
ret
adcb
lea
or
push
push
cmpsl
out
dec
call
mov
mov
imul
int
popa
ja
cmp
push
aam
inc
stc
xchg
movsl
flds
xorb
lret
push
repz
js
cmpsl
push
jge
xchg
ljmp
jns
pop
movsb
jae
in
imul
test
pop
cmpsb
dec
das
jg
adc
pop
ljmp
dec
les
and
orb
or
jl
sbb
and
add
stos
rorb
xchg
adc
inc
cltd
xor
sbb
cmp
repz
adc
mov
rcrl
xor
pop
daa
stc
xorb
mov
pop
adc
sub
push
movsb
jge
jne
fildl
jo
call
pop
outsl
in
jno
sbb
fwait
or
out
fs
xchg
adc
mov
repnz
loope
in
sub
xor
cld
addr16
shl
adc
inc
leave
pop
lock
mov
ds
adc
int
fs
adc
add
jge
mov
add
lds
mov
dec
in
cmp
sbb
mov
and
aas
or
hlt
inc
shll
cmc
push
adc
pop
pop
or
xchg
xchg
xchg
js
sbb
push
or
xor
aaa
add
cld
andb
inc
mov
mov
fwait
dec
sub
inc
iret
xchg
jb
sbb
cmc
mov
lahf
negb
pop
fisttps
dec
sbb
into
mov
call
push
sbb
movsl
andb
xor
push
enter
out
jmp
lcall
addr16
inc
xchg
pop
sub
pop
out
notl
mov
sbbb
push
shrl
xchg
adc
fwait
and
pop
mov
inc
xchg
ss
out
aad
orl
pop
ds
sub
fwait
andl
stc
cmp
jo
lret
fdivrs
jge
inc
sti
push
fxtract
icebp
adc
sub
movsb
adc
add
fwait
pop
fidivrs
inc
jae
xchg
xchg
pop
in
add
sti
add
lds
fnstenv
xchg
adc
jbe
clc
push
popa
pop
adc
addr16
les
enter
out
sbb
std
cld
dec
outsl
call
jno
push
fsub
xlat
lods
idivb
sub
mov
into
dec
jmp
and
ret
inc
dec
mov
push
outsb
rorl
xchg
mov
call
rcr
cmp
into
push
rorb
scas
lods
sub
adc
cmp
rcr
cli
and
mov
cmp
testl
jg
mov
pushf
test
xchg
cmp
xor
and
or
call
xor
ds
cmpsb
sub
sub
fsts
mov
mov
imul
out
push
pop
aas
dec
or
inc
inc
or
in
int3
fldenv
mov
sbb
sbb
adc
lods
sbb
incl
pop
aaa
push
loopne
mov
xchg
mov
loope
cmc
sbb
or
or
mov
xor
push
cmp
pop
out
in
xor
mov
pop
mov
dec
in
push
js
jecxz
xchg
sbb
fdivrs
cmp
out
inc
xchg
pusha
adc
pop
ja
fnsave
mov
daa
cmp
xlat
fnstsw
jno
js
push
cmp
push
sub
jecxz
sbb
test
adc
mov
movsb
faddl
cmp
cld
jbe
popa
dec
adc
dec
cmpsb
jl
jp
jne
cltd
cli
or
sub
pop
adc
lret
stc
adc
and
pop
imul
jbe
cli
pop
in
lock
push
xchg
xor
or
push
jnp
mov
xchg
lcall
lods
xor
loope
shrb
jmp
xorb
mov
xchg
xor
pop
lret
clc
lock
fcompl
pop
out
cli
pushf
add
pop
mov
loop
add
ficoms
xlat
or
xchg
pop
shll
xchg
pop
fldcw
xor
jnp
xchg
movsb
add
fcmovnb
adcl
test
unpcklps
pop
fldt
pop
push
add
jae
push
jl
add
add
pop
add
or
mov
inc
sahf
jae
dec
jle
out
push
stos
push
clc
mov
loopne
rol
imul
lahf
out
add
xchg
in
iret
ljmp
je
insb
enter
int
mov
pop
cmpsl
jbe
mov
testb
fistps
mov
push
cmp
jl
mov
fs
inc
sub
xchg
int
jl
push
mov
mov
aas
and
cmc
jge
movb
rcl
cmc
shrb
and
shlb
das
mov
adcb
jae
das
xor
mov
or
sub
dec
cli
jnp
sti
push
lock
ficompl
outsl
push
cltd
faddl
loopne
push
mov
dec
iret
lea
inc
rcl
xchg
daa
push
inc
xor
jns
pop
int3
jnp
out
lods
int3
or
cmp
add
push
sbb
add
lock
xor
mov
es
outsl
scas
push
imul
stc
sbb
les
gs
iret
subb
adc
dec
sub
sbb
and
cs
sahf
and
std
pop
insl
jo
add
dec
scas
add
out
adc
dec
repnz
adc
std
add
and
aam
loop
or
fdivrl
push
inc
jb
rolb
xchg
cmp
xor
sbbl
cmp
mov
adc
testb
push
lahf
stos
dec
mov
hlt
add
clc
dec
jp
or
jle
imul
jbe
sub
leave
jbe
pusha
in
aam
pop
xchg
jbe
rolb
test
lea
and
sbb
xchg
rol
fiadds
lods
adcl
cli
push
into
mov
in
icebp
std
xlat
push
sub
into
sbb
xor
mov
cmp
cmp
fsts
jmp
lahf
mov
jo
cwtl
lret
imul
popa
jnp
jge
mov
push
lock
pop
pop
and
mov
sub
jp
cld
bound
movl
cmp
adc
into
cli
jle
mov
jae
dec
mov
push
mov
addr16
fwait
lds
and
push
cmp
jo
jbe
stos
ficoml
add
xor
jb
xor
mov
or
movsb
stos
repz
push
in
sub
xchg
pushf
jb
sub
aaa
shl
fmull
rol
or
or
mov
sub
and
push
pop
or
lea
and
iret
push
push
push
adc
and
push
dec
out
push
xor
cmpsb
xchg
adc
dec
sbb
bound
add
loopne
sbb
iret
inc
in
and
loop
mov
stc
in
jg
out
cld
and
inc
push
xor
sbb
mov
fildl
cwtl
fcompl
outsb
outsb
xor
mov
ret
add
cmpsb
push
and
pop
sarb
mov
or
addr16
dec
or
fsts
in
popa
lahf
push
paddd
xor
xor
mov
test
lock
lea
icebp
movsb
icebp
sti
icebp
xor
int
xchg
xchg
xor
push
les
mov
pusha
adc
jmp
lds
lods
shll
pushf
imul
lods
rclb
jb
test
daa
js
inc
insb
aas
mov
or
jl
push
xor
jl
pop
jno
mov
cmp
add
sub
test
test
test
dec
out
mov
mov
lcall
adc
shrl
adc
push
pushf
shr
pushf
sbb
fmull
stos
cld
jmp
and
repz
and
mov
adc
cmp
arpl
mov
fiaddl
cmpsl
xchg
repz
clc
lea
gs
push
outsl
adc
lret
mov
lcall
inc
xchg
lods
out
enter
xchg
adc
test
loop
cmovno
fdivr
into
and
inc
notb
pop
test
inc
pop
push
dec
ja
lret
je
lods
sub
es
mov
add
jb
xchg
arpl
lahf
lock
data16
movsb
cmpsb
lods
pop
xchg
sub
adc
ds
cmp
add
cmpsl
mov
sti
in
sbb
push
sbb
jno
shlb
std
nop
bswap
fldcw
pop
pop
jb
daa
dec
wbinvd
mov
cli
mov
pop
nop
test
insb
pushf
movsl
inc
sbb
mov
rorb
lcall
cwtl
xchg
out
sbb
push
loope
xor
push
xor
out
sar
push
mov
adc
pop
xor
in
mov
gs
push
negb
xchg
mov
movsl
les
sbb
mov
pop
or
and
mov
lret
sbb
adc
jbe
scas
sub
loop
xchg
cwtl
in
imul
cltd
outsl
mov
inc
add
dec
fnstenv
std
fs
lret
stc
jo
hlt
clc
out
add
push
push
cli
sahf
sahf
pop
mov
sbb
and
inc
mull
push
or
ficompl
pop
aaa
lods
out
in
add
lret
sub
xchg
push
js
add
jbe
add
mov
jp
leave
sbb
jno
push
sub
jno
and
lcall
inc
or
fldl
rcr
xor
dec
adc
int
js
daa
outsb
in
sbb
cs
jno
sub
add
js
es
sahf
test
pop
mov
xchg
mov
mul
sbb
lods
xchg
fwait
xchg
lret
add
fnstcw
xchg
and
dec
adc
rcr
inc
into
scas
adc
sbb
mov
jmp
cmp
insb
repnz
int
out
iret
mov
stos
dec
jmp
cmp
mov
and
inc
adc
aad
add
pop
imul
into
mull
fistpl
push
lock
and
xor
ja
inc
dec
call
and
nop
lods
mov
inc
fdivrs
fwait
push
rorb
lods
mov
jecxz
mov
inc
aam
xchg
xlat
mov
pop
or
push
jns
sbb
iret
jg
ret
xor
ffreep
jmp
ret
ljmp
xor
fcompl
dec
stc
fldl
inc
lods
inc
cmp
ja
xchg
mov
xchg
adc
outsb
push
cmp
stc
and
cmpsl
leave
and
pop
push
lret
xchg
popf
cmp
imul
cmp
dec
mov
fstps
jecxz
sub
rcll
jb
repnz
mov
adc
lret
rorb
mov
rcrl
and
jae
fs
imul
into
mov
pusha
mov
push
test
pop
push
add
jno
xchg
or
xchg
je
es
add
jno
mov
xchg
xor
mov
pop
or
pop
fsubr
add
lock
jns
call
test
cmp
xchg
jp
dec
xchg
pop
call
pop
movsb
popl
mov
int3
rcll
stos
and
pop
sti
inc
add
mov
imull
les
inc
insl
inc
jmp
scas
loope
pop
cmp
add
and
and
sbb
adcl
sbb
mov
pop
jbe
ljmp
pop
lahf
mov
popf
in
sbb
mov
cmp
pop
sbb
testl
sub
std
add
leave
jmp
sbb
mov
cmpsl
mull
cwtl
lahf
fcomip
idivl
jno
mov
andb
sbb
pop
lcall
orl
ja
leave
sub
mov
pop
adc
add
rep
adc
jae
jae
or
shrb
push
icebp
shll
sub
xlat
hlt
sub
mov
adc
push
test
and
popf
xchg
aad
mov
xor
mov
jmp
fs
insl
xlat
pop
lret
ret
pop
aad
mov
mov
xlat
test
into
xchg
movsb
iret
imul
mov
xlat
es
xchg
cmp
push
mov
adc
repnz
jl
mov
in
mov
adc
or
call
outsl
lcall
gs
cmpsl
bound
data16
in
xor
or
jecxz
adc
mov
mov
or
test
sti
adc
popa
lret
xchg
sbb
xchg
scas
mov
mov
lods
or
into
popa
and
les
rclb
mov
adc
mov
sarl
adc
cmpsb
or
fisttpl
icebp
jmp
mov
movsl
lret
loop
sbb
into
popa
sub
fiaddl
pop
imul
mov
test
cmp
mov
pusha
xor
or
jo
inc
cmp
push
xchg
sub
adc
lret
inc
sti
movsl
test
sbb
or
rol
lret
sub
or
cmp
jl
sbb
mov
mov
icebp
push
repz
inc
subb
ds
leave
jb
roll
stos
mov
dec
adc
in
enter
add
and
sub
es
mov
pop
cmp
or
idivl
inc
mov
push
fiaddl
add
cmp
mov
aaa
jmp
add
gs
enter
clc
insb
sbb
inc
or
out
scas
pop
jns
hlt
enter
jmp
cmc
sarb
aad
out
cltd
fsubr
dec
aam
dec
jbe
insb
mov
cld
cli
jns,pt
fsubrl
push
jb
jle
jle
jp
mov
xorl
adc
jns
inc
dec
mov
adc
cmp
pushf
pop
sti
bound
je
inc
sub
shl
jnp
or
cs
mov
dec
adc
cltd
adc
fsts
sub
popf
dec
jnp
aas
cltd
shll
add
add
dec
les
cmp
inc
gs
enter
pop
push
inc
loopne
sbb
lea
popf
inc
inc
inc
sbb
sub
call
bound
xlat
mov
mov
pop
movsl
xchg
ja
dec
push
ret
push
push
hlt
jae
je
dec
push
cld
mov
outsb
xor
add
scas
inc
jecxz
jo
cmc
lret
push
push
mov
out
cmp
fistl
lds
rcrl
push
cmovp
ret
movsb
sub
fisubl
xchg
adc
std
cmp
xchg
xchg
test
repnz
loop
ret
or
pop
int
bound
iret
testl
lret
jb
sub
sahf
xchg
stc
ret
cmpsl
out
sbb
xor
sub
mov
jb
ss
popf
mov
cwtl
scas
mov
xorl
inc
lcall
test
nop
das
mov
je
xorb
xchg
xor
icebp
xor
rclb
mov
mov
xchg
sub
push
rorl
add
addr16
out
frstor
stos
lret
shlb
dec
ficompl
sti
mov
sbb
push
cmpsl
dec
sti
or
mov
cld
mov
mov
adc
adc
jecxz
cs
jecxz
xor
mov
cmp
pop
fdivrs
push
stc
xchg
inc
jbe
pop
stos
cmp
mov
fsts
pop
iret
call
mov
sub
mov
lea
lea
test
ss
xor
fdivrl
xor
cli
popa
arpl
pusha
lods
pop
lcall
and
idivb
in
sub
jb
push
or
cmpsl
lock
repz
icebp
xchg
cmp
das
movsl
cli
jno
in
cmp
add
xor
xlat
push
fidivl
sarb
add
add
jnp
aas
dec
push
cmp
lcall
xchg
jle
fnstsw
or
and
mov
ret
loope
test
arpl
mov
fxch
xchg
mov
ret
push
cmp
mov
fldl
das
scas
inc
cmpsl
loop
js
jg
outsl
push
shll
stos
mov
jmp
push
mov
xchg
shlb
mov
adc
and
mulb
or
ljmp
paddd
das
mov
stos
dec
mov
js
push
cmp
push
inc
fistpll
sti
inc
cltd
xor
jb
mov
mov
inc
fbld
xor
inc
ljmp
sbb
into
mov
movsb
imul
or
pop
xchg
add
cli
push
inc
insl
js
mov
imul
movsl
jl
jl
mov
out
call
xchg
stos
add
in
dec
leave
outsl
js
xchg
jl
jmp
jl
fwait
test
push
xor
icebp
lea
lret
cld
ret
subb
test
loope,pn
mov
lock
pusha
pop
loop
jns
gs
cmp
call
addr16
adc
xchg
movsl
pop
shl
jnp
jecxz
ljmp
xor
je
in
adc
in
cld
push
lret
sarl
mov
mov
mov
cmp
adc
movsb
nop
adc
sub
push
pop
stc
adc
dec
mov
ss
or
ret
mov
cmpsl
adcl
xor
loop
jmp
mov
sub
mov
mov
pop
sbb
pop
lock
sti
adc
and
adc
repnz
jne
leave
int3
pop
and
xchg
and
sbb
ja
pop
adcl
fmull
adc
xchg
sar
ljmp
pushw
mov
mov
faddl
sub
lods
dec
cwtl
loope
jle
mov
adc
mov
fdivrl
ret
pop
test
shll
fs
dec
inc
ss
mov
sub
ds
jb
jecxz
adc
imul
mov
cltd
inc
xchg
es
add
mov
mov
jb
call
sti
ds
pop
rolb
fs
into
imul
lahf
insl
xorb
sub
xchg
inc
fs
xchg
les
xor
cmp
out
push
mov
imul
sbb
or
and
fadds
cmc
imul
call
lods
mov
or
mov
dec
sbb
cmp
into
cmp
xorl
mov
outsb
fwait
cld
cmc
dec
jno
mov
je
inc
cmp
add
jne
imul
loope
xchg
or
jb
and
lock
jle
mov
pop
into
ds
rorb
sti
testl
push
jno
dec
out
shrl
dec
jo
add
adc
iret
cmp
test
loop
shl
ficompl
push
xchg
xor
sbb
sti
mov
test
cmpsl
loopne
and
clc
mov
sub
mov
mov
shr
ss
dec
xchg
mov
rclb
jnp
pop
or
iret
jns
mulb
ss
jns
data16
mov
push
push
dec
iret
ret
mov
roll
pop
test
adc
movsl
das
adc
outsb
mov
test
mov
push
and
fsubrl
in
ret
inc
frstor
push
pop
push
insb
subw
adc
movsl
or
imul
push
ret
dec
mov
push
je
pop
loop
push
repz
jnp
js
lea
mov
mov
inc
or
fstps
jno
int
repz
cli
mov
add
jno
dec
dec
jo
push
movsb
pop
movsl
rorb
sbb
and
adc
imul
or
pop
mov
mov
push
mov
cmc
xchg
out
cmp
or
push
add
cwtl
lea
jo
inc
mov
xchg
fcomi
sbb
xchg
cmp
fisubrl
imul
ss
xlat
repz
cmpsl
mov
js
mov
push
sbb
or
mov
push
fdivrl
push
mov
mov
dec
dec
mov
push
test
mov
xor
arpl
movsb
pop
jns
mov
mov
mov
outsb
leave
or
mov
mov
xchg
push
push
pop
insb
pop
stc
idivl
mov
outsl
mov
popf
inc
mov
xor
or
fld
out
mov
fisubrl
movsl
movl
and
fs
aas
in
sarl
fsts
icebp
aam
xchg
mov
loop
bound
movsb
outsl
testl
jecxz
ret
shld
ret
fistl
cmp
shll
hlt
ror
test
stos
jbe
push
addr16
xor
mov
xchg
add
push
xchg
in
int3
add
push
cmp
or
lcall
aam
cmp
mov
and
fldln2
push
mov
push
and
shrb
call
clc
mov
mov
mov
sahf
inc
cld
arpl
cmpsl
fdivs
push
js
xor
lea
daa
pop
mov
pushf
ds
cmp
inc
aad
sarb
outsb
jbe
ror
insl
sbb
xchg
push
xchg
jo
mov
fidivl
mov
nop
xor
insl
mov
sub
stos
aad
sbbb
lea
adc
in
movsl
push
push
notb
enter
cmp
inc
call
mov
stc
adc
dec
pushf
mov
pop
xchg
sub
mov
aaa
cmp
cli
cwtl
rcrl
cmp
cmpsb
movsb
out
xor
jmp
xor
int
or
arpl
shlb
jno
retw
xchg
dec
aaa
dec
dec
int
mov
cmp
jge
in
jo
and
ficompl
jg
bound
pop
incl
data16
sub
pop
lahf
loopne
dec
hlt
divb
mov
push
and
lcall
push
ret
add
loopne
lcall
cs
repz
xchg
mov
dec
and
xchg
fbld
mov
es
mov
dec
sti
xchg
in
sub
ret
sub
out
es
imul
mov
push
jle
mov
or
xor
adc
sub
sub
pop
fimuls
inc
or
test
fimuls
jno
adc
jmp
xor
outsl
js
lret
adc
bound
push
and
or
scas
add
arpl
es
cmp
add
pop
fbld
psrlw
cmp
jge
rcrb
test
push
lods
mov
fcmovu
pop
loope
ret
call
and
xor
loop
je
adc
add
dec
push
hlt
cmp
adc
jp
push
repz
incl
xchg
pop
jp
cmpsl
mov
imul
and
punpcklbw
xor
xor
xor
sub
add
push
cmp
out
adc
mov
sbb
xchg
mov
xchg
movsb
js
mov
mov
jne
mov
pop
filds
jg
in
cltd
xchg
in
push
or
fs
dec
int
adc
fs
ret
pop
push
lods
pop
std
addr16
mov
bnd
ds
leave
adc
cmpsl
sbbb
add
iret
jo
in
mov
or
lods
arpl
add
in
roll
int
xlat
in
gs
in
arpl
dec
enter
nop
xor
mov
mov
and
add
cld
jae
sti
scas
sbb
adc
mov
popf
xor
sub
pushf
aad
mov
faddl
sub
xor
loopne
or
rcl
jno
jmp
pop
iret
inc
mov
sahf
push
lea
imul
addl
cmp
inc
rcrb
insl
jne
mov
xchg
and
push
xor
inc
mov
sbb
adc
aad
insb
and
push
lods
pop
jb
ret
stos
mov
dec
fcompl
movsl
mov
orb
sbb
fndisi(8087
loopne
jae
push
sub
scas
icebp
mov
cmp
mov
pop
jb
mov
gs
mov
jle
push
mov
shl
int
adc
rol
mov
addr16
cmpsl
pop
push
pop
incb
cmp
and
inc
stos
sub
and
loop
into
cltd
xor
test
push
cmpsl
and
mov
outsl
push
jo
mov
inc
test
cwtl
ljmp
ds
jmp
push
xchg
sub
xor
into
and
repz
jg
xor
xchg
imul
push
nop
mov
test
scas
into
pop
add
mov
mov
add
adc
fcoml
orb
push
push
aad
and
sub
jnp
xor
out
push
in
xchg
icebp
stc
scas
pop
adc
jge
jecxz
or
inc
arpl
cld
sbb
icebp
call
fcmovbe
popa
jp
insl
dec
sbb
gs
mov
sbb
sub
mov
jo
sbb
lcall
sbb
pop
mov
lret
loope
jns
pop
and
inc
scas
mov
push
aaa
outsb
add
push
lds
adc
jno
push
cltd
or
je
or
jno
incl
cmc
arpl
dec
sub
daa
int3
jne
or
push
jecxz
outsb
aad
add
xorb
int3
add
divl
je
subb
sub
and
mov
jae
jg
and
mov
xor
xor
mov
popa
scas
adc
jl
inc
pop
ret
mov
stos
pop
icebp
movsb
pop
mov
xchg
jne
inc
dec
filds
mov
xor
jmp
scas
data16
mov
ds
jne
dec
mov
lds
xchg
xor
mov
adc
xor
ss
clc
jp
mov
mov
icebp
popa
dec
jnp
xchg
cltd
in
adc
addr16
or
pushf
inc
gs
xchg
xchg
dec
and
cmpsl
scas
rol
xchg
push
mov
sub
sub
mov
addr16
out
inc
pop
into
ljmp
test
sub
sahf
or
xchg
cltd
aas
jne
lock
pusha
xchg
inc
push
aaa
dec
fidivs
addr16
cmp
inc
mulb
jl
inc
sub
mull
cli
leave
mov
cli
lea
push
sbbl
jbe
test
in
aam
adc
push
jle
dec
stos
push
inc
mov
sub
sbb
lock
or
push
mov
sbbb
loopne
xchg
xchg
mov
bound
loop
popf
mov
lret
dec
ficoml
lret
sub
fsts
stc
sbb
out
mov
adc
xchg
mov
xor
or
push
xlat
int
jb
dec
jb
in
and
mov
push
rcl
or
cld
and
push
iret
cmp
sarb
push
cmpsb
mov
loope
aas
sub
nop
cmp
mov
imul
daa
fnsave
xor
inc
mov
lods
or
dec
sbb
out
lret
lods
mov
add
scas
inc
jne
jp
push
es
rcrb
jle
int
pusha
imul
lods
lcall
outsl
je
pop
dec
jb
and
out
cmp
leave
or
pushf
and
push
mov
subl
xor
cltd
scas
cmp
out
lret
out
dec
fmull
cmp
cwtl
add
mov
push
push
and
out
ss
pop
jmp
addr16
xor
aas
movsl
push
pop
push
aad
pop
add
xchg
pop
cmp
xor
inc
xchg
std
sub
js
and
dec
arpl
add
into
loope
icebp
fcomps
je
mov
push
adc
mov
mov
test
and
jg
cwtl
inc
push
or
pop
jge
jo
daa
icebp
pop
ret
mov
ja
mov
outsb
fs
pusha
aam
push
jne
daa
pusha
cmp
jl
add
pushf
int
mov
add
or
mov
jb
cltd
inc
mov
fimuls
mov
mov
js
dec
or
xchg
jge
cmp
or
fnstenv
mov
decl
add
adc
xor
daa
sbb
fldl
das
sub
lcall
je
jmp
mov
cmc
xor
adc
sub
pop
cmp
lahf
mov
loopne
lret
xchg
ret
jmp
xchg
push
sub
loope
cmp
pop
jle
cmpsb
fdivrs
adc
add
out
or
xchg
mov
loop
mov
call
insl
push
cmp
and
and
and
testl
outsl
and
push
push
sub
test
cmp
mov
addr16
ret
push
or
sbb
jmp
bound
repz
cwtl
add
lods
add
insl
dec
adc
mov
loope
push
add
in
pushf
popf
xchg
mov
mov
pop
pop
leave
or
stos
pop
lret
mov
pusha
ret
lret
push
xorl
sbb
push
jmp
popf
rcrb
stos
imul
fbstp
push
pusha
push
scas
push
test
cmp
imull
pop
adc
adc
xchg
sbb
pushf
rorl
je
outsl
and
or
push
in
and
and
lods
cmp
fadd
fwait
scas
leave
inc
cltd
push
and
add
clc
je
or
push
ljmp
jne
xabort
fisttpl
pop
xlat
xor
mov
push
pop
xchg
dec
lret
in
cli
dec
shll
test
fcomip
push
out
test
mov
cmc
cmc
xor
shlb
ljmp
sub
outsl
shrl
inc
fsubp
cmpsl
pusha
dec
cmp
ficoms
cmp
pop
shrb
dec
test
call
or
add
or
arpl
addr16
xor
pop
decl
inc
xchg
dec
insl
fcmovne
mov
test
xor
lock
mov
aas
and
xchg
into
out
ss
and
mov
cwtl
xchg
xor
fsubs
inc
xchg
push
dec
out
jae
mov
je
push
subb
mov
mov
insb
mov
dec
jecxz
call
stc
sub
popa
in
inc
nopl
js
dec
cwtl
cmpsl
les
out
ficompl
aad
xchg
ret
cmp
enter
adc
dec
sahf
icebp
shrl
sbbl
xor
ljmp
jns
pop
or
dec
mov
xchg
and
fists
pop
arpl
insb
add
cmp
sbb
lret
arpl
fcom
test
mov
or
jge
loopne
les
cmp
push
cmpsb
mov
adc
xchg
mov
outsb
xor
mov
ljmp
dec
in
clc
mov
add
ljmp
or
jo
jb
sub
xorl
hlt
xchg
inc
mov
jb
xchg
inc
stos
leave
xor
adc
mov
lods
mov
xchg
outsl
adc
jle
mov
mov
loopne
shrl
jns
sbb
jbe
sbb
insl
push
repz
add
mov
mov
insb
test
lods
sti
dec
in
fsubrl
dec
push
test
mov
cwtl
jle
pusha
lods
mov
mov
mov
movsb
sbb
xor
iret
push
xchg
fidivs
loopne
mov
in
jmp
les
cmp
lcall
push
aad
sbb
es
fnsave
sub
adcb
pop
jge
and
gs
mov
xchg
lret
pop
scas
out
sbb
jp
add
or
jle
mov
ja
dec
add
inc
or
sub
lock
scas
mov
fldt
xchg
add
pop
ficomps
pushf
iret
dec
sub
shlb
xor
xor
jbe
push
push
shlb
out
add
in
lds
in
call
sub
dec
out
icebp
mov
xchg
loop
rcrl
imul
jmp
push
xor
and
inc
pop
jle
lods
cmpsb
jbe
xor
dec
into
test
jne
cmp
popf
not
data16
dec
sbb
pop
je
sbb
repnz
push
dec
mov
xchg
push
jno
xor
jb
insb
jne
cmpl
mov
xor
mov
sbbb
scas
sbb
mov
aas
and
or
pop
add
jl
cltd
mov
push
mov
cli
xor
pop
std
dec
cmp
int
mov
dec
xor
xchg
popa
mov
inc
xchg
lret
stos
add
xor
inc
sub
sub
push
je
ret
fdivrl
cs
cmpsl
sbb
pop
mov
and
or
and
lods
insb
outsb
or
outsb
imul
pop
push
test
cmpsb
call
xchg
inc
aad
fistl
pushf
arpl
add
jp
inc
cli
add
mov
fisttpl
mov
popa
jne
sub
pop
clc
ret
lods
push
test
xor
inc
idivl
sbb
mov
sub
into
lret
pop
xchg
movsl
push
sbb
jns
cmp
lcall
mov
pop
mov
sub
cmpsb
xchg
fimull
pop
jno
and
or
out
decl
and
bound
stos
jno
xor
push
fadds
xchg
fs
out
or
fmulp
adc
xor
nopl
aad
pop
sbb
popf
test
fwait
xor
jnp
data16
xor
mov
sti
pop
int3
stos
aam
in
out
mov
or
push
xor
mov
mov
in
ljmp
sti
inc
insb
cmp
fildll
jl
inc
popa
retw
in
or
jb
cmpsb
xchg
and
jb
adc
adc
xchg
imul
fdivp
push
shlb
sbb
call
or
xchg
push
movsb
fisubs
xorb
mov
daa
jle
jle
mov
pusha
or
sbb
ljmp
enter
je
jae
and
mov
icebp
lret
cmp
cmc
ret
cld
inc
xchg
adc
daa
out
sbb
push
lahf
das
jle
mov
insl
jb
sub
adc
add
leave
sahf
aad
test
lods
pop
jecxz
inc
mov
or
mov
sarl
dec
pop
js
add
inc
lock
add
fistl
sub
or
in
adc
and
inc
lock
sub
or
adc
sahf
sti
or
pop
sbb
dec
shll
lods
fisttpl
loopne
jnp
pop
jp
mov
test
lds
dec
inc
shlb
add
jb
aam
push
push
dec
xchg
shlb
stc
aad
cmp
xor
ss
loopne
push
mov
test
bound
and
je
ljmp
test
inc
lret
xor
push
in
imul
mov
fbstp
jae
mov
mov
cmp
in
iret
mov
fsubl
or
jg
and
enter
mov
push
pop
insb
inc
jmp
add
cmp
inc
push
enter
xchg
jl
shr
loope
cwtl
pop
mov
push
std
mov
icebp
mov
pop
popf
mov
movsl
mov
add
outsl
fs
mov
loopne
xor
std
loope
mov
xchg
scas
int
jns
add
shl
stos
xchg
scas
sbb
mov
add
iret
xchg
lret
jge
cmp
ja
mov
cmpsl
test
mov
insl
jns
loop
fdivrs
mov
inc
mov
outsb
roll
mov
dec
outsl
mov
inc
pop
popf
cmp
dec
cwtl
xor
insb
in
out
pop
adc
insl
mov
adc
lds
fs
xchg
mov
stos
mov
imul
mov
popa
jns
mov
sahf
xor
out
adc
sub
push
xchg
pop
jne
or
mov
fisttps
mov
addr16
pop
jl
lahf
and
aaa
jg
add
into
imul
shlb
jb
sub
inc
adcb
repz
xchg
xchg
push
push
mov
and
mov
inc
add
fiadds
lds
adc
xchg
adc
pusha
xchg
mov
sub
arpl
iret
xchg
ret
jl
xor
cmpsb
push
xor
enter
ds
test
leave
xor
push
mov
mov
sub
xchg
das
imul
leave
add
pop
fists
mov
mov
data16
or
xchg
pop
jmp
aad
pop
sbb
out
xchg
fbstp
mov
scas
pop
push
cltd
and
fldcw
enter
sub
cli
and
pusha
inc
sub
inc
bound
movl
jg
icebp
inc
js
mov
fisubrl
xor
loop
mov
xchg
cwtl
or
outsl
notb
mov
mov
fwait
out
scas
xchg
int3
mov
sbb
sbb
sahf
xchg
mov
pop
mov
push
mov
shrl
lcall
out
sbb
fadd
out
xor
das
sbb
ja
sub
push
push
ret
ja
mov
xor
aad
pop
sbb
sar
lods
leave
stc
xchg
adc
sbb
push
sbb
loope
or
call
daa
in
ret
xchg
fcoms
test
mov
pop
das
pop
out
mov
imul
add
mov
sub
add
fwait
push
inc
into
movsb
stc
jle
lods
addb
insl
insl
lock
loopne
mov
repnz
mov
mov
fcmove
or
fimull
scas
lahf
dec
aas
sti
push
ja
shrl
jg
sarl
aaa
mov
dec
dec
mov
jmp
lcall
out
lret
or
stc
mov
and
mov
mov
das
movsb
pop
xchg
out
jl
cmc
cmp
push
icebp
dec
clc
inc
jmp
fimuls
inc
loopne
mov
sub
outsl
xor
push
jae
inc
and
xor
and
mov
ds
jae
mov
jb
xor
cli
or
add
lret
aas
and
adc
cmpsl
cli
stos
inc
test
mov
inc
daa
out
adc
arpl
sbb
xor
mov
ja
mov
mov
adc
out
mov
dec
xlat
and
cmpsb
cmp
xchg
inc
cltd
sub
iret
jge
fmulp
daa
shlb
mov
xchg
idivb
shlb
aas
js
mov
adc
xlat
in
sub
lret
arpl
push
stos
insl
cmc
lret
mov
xchg
fabs
dec
jne
outsl
addr16
mov
dec
divl
test
dec
inc
fistl
mov
es
lcall
dec
call
or
inc
fucomi
or
xchg
leave
testl
enter
cmp
arpl
lock
imul
and
push
sub
nop
add
adc
inc
and
sbb
xchg
cmc
pop
iret
sbb
sbb
jo
jge
roll
insl
gs
pushf
repnz
popf
stc
add
and
in
int3
hlt
fmull
mov
fisubs
in
push
pop
add
lcall
sub
add
andl
pop
sti
hlt
pop
pop
or
inc
xchg
pop
push
fmuls
jnp
add
lea
mov
push
mov
jae
xchg
test
mov
add
in
stc
out
aam
jmp
cltd
rolb
aam
lock
pop
ss
adc
sar
mov
push
ret
jl
add
or
cmp
cmpsl
cs
adc
pop
add
lret
and
xor
sar
sub
jo
dec
bound
in
xchg
mov
in
push
pop
sahf
cmpsl
sbb
mov
scas
bound
loop
jo
mov
and
leave
xor
adc
aam
jp
jmp
pusha
outsb
je
mov
mov
jg
push
mov
out
rcrb
pop
stos
stos
cmp
loope
negl
push
adc
dec
jbe
push
scas
xor
jno
dec
shlb
sub
sarb
iret
mov
flds
push
cli
je
ret
pushf
jg
fldcw
lret
mov
pop
jns
add
fists
jp
adc
fcomp
pop
pop
pop
pop
adc
mov
aas
in
xchg
les
cmp
es
loop
ds
and
in
cmc
mov
cmpsl
pushf
ss
mov
jbe
aad
dec
push
ficoml
xor
xor
push
cli
shlb
sbb
mov
int
ljmp
adc
mov
inc
cwtl
sub
cmpsb
int
mov
mov
enter
xchg
adc
jl
sub
cmpsl
push
js
mov
mov
shlb
out
lea
and
cmp
fimull
in
adc
xchg
jle
adc
and
push
dec
imul
dec
push
push
js
adc
in
and
or
aad
bound
rol
sub
insb
push
fs
inc
jbe
pop
aaa
out
adc
xchg
dec
idivb
rol
std
es
js
ds
enter
push
out
mov
push
lahf
inc
push
ret
pop
inc
jns,pt
in
int
or
cmp
pop
jb
pop
lret
fstpt
jmp
ss
xlat
xor
fnstenv
dec
lock
xorb
mov
leave
int3
sbb
insb
mov
into
in
pop
cmp
lcall
loopne
sahf
sub
es
lea
daa
mov
inc
add
sbb
nop
in
jge
sar
out
int
cmp
pop
mov
pop
mov
lahf
pusha
jge
mov
dec
sub
cltd
sbb
push
jle
mov
dec
lcall
sarb
sti
jnp
inc
dec
and
mov
mov
ja
jecxz
out
sub
xlat
popf
mov
shl
test
das
jnp
inc
jg
dec
adc
add
aad
adc
inc
jmp
cmp
scas
cmpsb
jge
dec
push
rorb
jle
lcall
inc
jecxz
jne
jmp
pop
data16
xchg
adc
inc
leave
insb
or
sbb
cwtl
pop
sbb
lahf
test
movsl
push
lcall
sahf
lea
lds
and
ljmp
cltd
mov
mov
out
sub
xchg
sbb
dec
sahf
imul
ss
mov
arpl
sbb
pushf
and
mov
mov
sub
mov
dec
pop
in
inc
filds
popa
outsl
cmpb
test
dec
cmp
stc
mov
lcall
add
push
sub
inc
push
xorl
rorb
cltd
fs
ljmp
jbe
scas
xchg
stos
xchg
jo
lahf
xor
test
dec
loope
imul
or
cmp
stc
inc
outsl
and
test
sbb
push
cmpsb
sbb
sbb
xor
mov
mov
popf
sbb
mov
repnz
movsb
dec
pop
jbe
sub
out
popf
stos
push
aaa
jbe
scas
jae
jmp
mov
sbb
nop
xor
scas
mov
or
rcrl
sbb
cld
pushf
pop
mov
cwtl
imul
test
and
mov
or
ljmp
iret
daa
stc
jle
lret
jle
enter
std
push
inc
sarb
incb
pop
shrl
or
sti
mov
jmp
jb
insl
fmul
hlt
xsaves
cwtl
aad
mov
mov
xchg
movsl
fs
lcall
std
adc
adc
add
out
add
lcall
loope
mov
ret
enter
mov
add
or
mov
cmp
test
sti
push
or
cmp
push
cmc
pop
shlb
push
mov
adc
sbb
sub
addr16
mov
data16
xor
inc
or
cmp
jmp
dec
pop
aaa
inc
das
imul
cmp
sub
adc
adc
mov
imul
mulb
pop
sub
push
in
sarb
mov
roll
ljmp
xor
shrl
out
lret
sub
mov
or
xchg
add
add
dec
aam
sub
repnz
or
and
xlat
jle
push
xlat
xchg
ret
pop
inc
inc
mov
pusha
and
jno
cmpsb
out
cmp
mov
or
test
stc
sub
push
mov
dec
adc
cmpsl
cs
mov
and
nop
mov
mov
ret
aad
sbb
jb
mov
outsb
push
lds
jle
sub
xchg
or
mov
inc
sarl
ds
inc
scas
xor
mov
mov
xchg
mov
aaa
movsb
pop
rorb
ja
in
push
les
xor
or
mov
shlb
mov
lock
adcb
iret
lods
enter
sub
out
iret
jl
aas
mov
cli
jecxz
repz
inc
xchg
or
fs
popl
rcrb
inc
pop
xchg
dec
loopne
flds
out
enter
xor
sub
push
into
pop
ja
lods
stos
sahf
movsl
mov
pop
dec
fmull
std
testb
out
xchg
cmpsl
or
or
inc
push
subl
push
aad
fstpt
out
adc
popf
cmp
das
loopne
or
add
jno
inc
insb
scas
or
xor
fwait
mov
insl
dec
lret
test
sub
cmp
add
int
pop
mulb
push
mov
lret
aas
xchg
sub
insw
aam
mov
mov
xchg
es
adc
and
popf
lods
mov
cmp
fstl
mov
mov
sub
push
pop
add
inc
cwtl
mov
pop
scas
in
dec
jns
and
or
mov
mov
xchg
mov
push
or
sbb
sub
jnp
dec
jns
divb
jno
lea
inc
pusha
push
and
xchg
mov
cltd
cs
xor
int
cwtl
out
shrd
lock
test
mov
dec
std
out
push
sbb
lds
aaa
cmp
call
stos
sbb
pop
mov
ret
cli
jae
xchg
jmp
inc
out
mov
pop
fisttps
dec
mov
push
ret
repnz
outsl
aam
fimull
hlt
lcall
mov
sub
sub
lds
jecxz
dec
popa
cmpsb
mov
mov
inc
xchg
arpl
stc
push
ljmp
pop
pop
rorb
popa
sahf
mov
test
lea
add
arpl
jp
pushf
jl
mov
sub
sub
lea
in
popf
nop
fs
sbb
dec
add
adc
sub
sti
mov
sbb
ljmp
and
and
mov
inc
les
cmc
frstor
xor
ljmp
repnz
xchg
scas
xchg
sbb
movsl
mov
push
xchg
faddl
xchg
jae
jecxz
xchg
cwtl
add
pop
sub
ret
ficompl
xlat
push
push
xchg
xor
in
mov
aas
stos
invd
icebp
addr16
jns
cmc
outsb
add
sbb
add
xor
jae
dec
movsl
testb
sub
pop
iret
sti
ljmp
push
dec
mov
and
aam
jecxz
and
jno
ficoms
pop
dec
rorb
and
or
loopne
add
xchg
sbb
jmp
mov
push
lret
mov
sub
fists
mov
sar
icebp
xchg
rcrl
sub
mov
xchg
mov
int3
xor
jl
mov
orb
incb
shrl
lcall
pop
andb
xchg
jg
ja
addr16
divb
movl
testb
push
sub
add
cld
and
or
jno
mov
imul
in
add
rcrb
hlt
cmpsb
dec
xor
int
or
inc
sub
dec
mov
mov
insb
jmp
notl
jle
mov
lcall
xor
mov
jl
xor
xor
fsts
mov
sbb
mov
enter
sub
add
lds
dec
rolb
shr
jno
pop
sbb
mov
inc
sbb
mov
mov
int3
test
fcmovu
pop
jo
mov
adcl
imul
cmc
mov
lods
orb
lock
mov
shrb
xor
lods
rcll
iret
mov
repnz
movsb
pop
aas
sub
popf
add
adc
push
xor
cmp
movl
ja
push
aad
je
out
vcvttpd2dq
push
cmp
and
lret
in
or
and
add
or
ss
adcl
cli
inc
mov
adc
pushf
xor
sub
jle
rorb
notb
dec
jo
or
inc
jle
into
jnp
dec
fdivrs
mov
aad
es
xor
iret
mov
xchg
iret
sub
daa
jecxz
insl
inc
mov
enter
pop
jmp
xchg
dec
add
imul
pop
sbb
int
jle
push
push
les
loopne
movl
and
scas
and
stos
cld
dec
bound
cmp
lcall
push
inc
jbe
and
aas
in
xor
xchg
jmp
and
test
dec
jb
mov
sub
inc
push
jmp
repnz
mov
ja
mov
inc
mov
das
shll
jne
mov
xlat
lods
cmpsl
repz
inc
jnp
stos
sub
js
iret
cli
shl
cmp
stos
adc
mov
or
cltd
push
jmp
in
daa
lods
jecxz
xor
ljmp
mov
and
cmp
jns
pop
cmp
or
sub
mov
ret
orb
pop
cld
psllw
je
mov
mov
dec
aam
jns
mov
add
hlt
sub
dec
ljmp
sahf
xor
or
je
add
cmpsl
aam
mov
add
and
clc
jle
addr16
fs
xlat
movsb
addr16
fildl
mov
push
inc
clc
repz
xor
adc
je
sbb
lsl
push
rcll
mov
andl
sarb
out
add
mov
in
cmp
adc
out
int
pop
mov
dec
inc
pop
mov
ljmp
sbb
inc
mov
adcl
mul
call
push
movsl
jae
rcll
pop
scas
xor
js
aad
sub
adc
push
adc
mov
jne
jp
in
cltd
xor
dec
jbe
lea
outsl
cmc
dec
js
dec
adc
jns
imul
jle,pt
negl
movsb
stc
add
insl
mov
push
ficompl
out
xchg
stos
les
jp
or
lcall
cld
xorl
add
fldenv
repnz
shrl
repz
jmp
xor
bound
test
dec
les
and
sub
or
mov
icebp
loop
inc
xchg
and
xor
pusha
push
out
sbb
es
push
jnp
sti
jno
sbb
lret
fwait
xchg
fsubr
mov
ds
decb
mov
clc
add
ds
es
insl
mov
pop
out
loope
mov
ja
popa
push
inc
hlt
sub
push
push
mov
pop
addr16
pop
sbb
shlb
aam
xchg
aaa
mov
pushl
sub
jp
and
test
cmpsl
rcrl
lods
mov
lock
inc
sbb
cwtl
fdivrs
int
lea
shl
inc
jl
in
push
inc
push
xchg
xlat
mov
loopne
mov
iret
xor
imul
dec
inc
and
ds
lret
pop
mov
xorl
mov
and
ds
test
xchg
out
and
out
adc
mov
scas
pushf
imul
or
cmpsl
nop
jno
inc
fsubrs
mov
jp
push
pop
push
frstor
jecxz
rcrl
adc
push
stos
lahf
in
jnp
push
inc
aad
fsubr
jb
push
push
mov
pushf
xchg
nop
in
test
aas
ss
inc
xchg
cmp
push
cmp
incb
pop
aaa
faddl
es
fdivr
mov
mov
fstpt
xchg
loopne
pop
aas
xchg
add
sub
enter
outsl
push
lret
cmpsb
or
or
pop
jbe
cmp
lods
sbb
push
stos
adc
clc
xchg
inc
ljmp
sub
out
outsl
movsb
icebp
mov
add
xor
push
int
add
cmp
xchg
push
rcrb
cmp
sarl
ror
sbb
fwait
imul
mov
rcr
fcmovb
dec
add
and
packssdw
mov
jnp
aam
xor
sbb
hlt
or
lock
pop
mov
enter
mov
dec
xchg
jg
inc
pop
or
sub
mov
arpl
popf
cld
pop
mov
sbb
test
push
insb
aad
out
cmp
out
psllq
push
scas
push
jl
pop
pop
rorl
imul
mov
cmpsl
cmp
pusha
lcall
lret
xlat
ja
inc
lock
fcomps
popf
or
movsl
jmp
push
dec
xor
xchg
mov
mov
pop
jo
addr16
aam
xchg
arpl
xor
push
scas
xchg
pusha
out
sub
mov
mov
loope
mov
mov
and
sbb
cmp
lds
pusha
test
mov
mov
subl
sub
or
cmp
out
mov
imul
cmpsl
jp
js
mov
push
in
sbb
lds
mov
fbld
sahf
xchg
adcl
icebp
out
lea
add
pop
push
lahf
mov
iret
jbe
xchg
rorl
shrl
sahf
stos
cld
or
adc
out
fildl
push
stc
xor
scas
jb
stc
mov
das
divl
clc
fwait
rorl
hlt
add
mov
add
xchg
sub
or
jmp
jnp
mov
push
jae
push
mov
clc
mov
lret
xchg
adc
pop
inc
insb
hlt
xchg
sahf
lret
pop
leave
into
sbb
js
adc
inc
adc
or
rolb
addr16
and
cmp
and
adc
xchg
imulb
das
insb
movsb
xchg
add
xlat
subl
mov
fsubs
dec
sbb
sbb
bound
sub
dec
mov
call
lea
loope
mov
xor
ljmp
sub
sbb
mov
popf
aas
dec
rcrb
jecxz
inc
insl
cmc
sarl
mov
cmp
xor
sub
lcall
push
adc
add
test
mov
aam
ret
lods
andl
das
jno
jo
scas
subl
bound
sbb
jmp
or
jg
icebp
xor
mov
mov
js
jle
lods
notl
icebp
push
jae
inc
lock
sbb
xchg
push
mov
push
jns
mov
repz
xchg
xor
rcl
pop
xchg
push
mov
jnp
push
leave
sbb
cmpsb
dec
inc
in
jo
xor
int3
jo
mov
and
out
sbb
imul
xor
push
scas
out
jo
sub
cmc
ljmp
js
scas
aam
push
les
clc
fsubrp
xchg
int
scas
xchg
xchg
push
les
dec
mov
fs
jbe
or
stos
orb
lcall
xchg
mov
inc
int
jle
xorb
push
ja
push
pop
fs
push
sar
mov
cmpsb
es
or
inc
pop
add
jnp
stos
aam
sub
add
lea
idivl
repz
cmpsb
sbb
jns
lahf
sbbl
jne
xchg
rep
sub
roll
pop
jle
inc
movd
xor
mov
jae
fiadds
ret
or
push
mov
mul
sub
sahf
xor
sub
mov
repz
loopne
jecxz
jecxz
xor
out
repz
inc
popa
es
xor
arpl
xor
cmp
aad
pop
push
andl
mov
push
lahf
test
cmpsl
in
cmp
shll
push
xor
xchg
adc
daa
push
sub
mov
and
ss
pusha
lds
rcrb
mov
aad
push
fwait
ret
addb
arpl
mov
inc
xchg
mulb
add
push
pop
pop
sbb
cmp
push
mov
add
mov
sbb
adc
adc
dec
jne
in
xor
sub
mov
cs
lahf
ja
and
lods
mov
cmc
int3
insl
out
inc
xchg
lahf
cmp
dec
jns
mov
in
jg
xchg
mov
mov
clc
stos
jmp
pop
loopne
cmpsl
call
mov
sbb
cwtl
xchg
cmp
std
lahf
ud0
push
jge
loopne
movsl
cld
test
mov
insl
arpl
les
xchg
pop
repz
aam
test
leave
fistpll
leave
sbb
jge
add
or
jmp
arpl
mov
pushf
addr16
cmp
pop
jbe
mov
sub
repz
rolb
mov
lret
sahf
push
inc
mov
dec
and
lock
lods
out
mov
cmp
test
push
and
add
aam
cwtl
sub
push
dec
fcoml
popa
es
mov
xchg
test
fldl
pop
or
or
mov
add
inc
mov
cld
rclb
and
pop
cmpsb
dec
xchg
movsb
push
and
cs
insl
push
jg
das
jl
aad
shr
pop
dec
sub
cmc
cltd
xchg
out
js
or
mov
sbb
push
and
aaa
fwait
mov
aaa
mov
repnz
sbb
push
repnz
sub
jecxz
cmpsl
adc
xchg
add
inc
movsb
sbb
sarb
es
jne
fwait
test
out
jle
lea
push
and
push
mov
arpl
mov
mov
add
add
push
pop
mov
jb
mov
cmp
into
imul
ret
repz
and
inc
dec
icebp
clc
addb
xlat
lods
jl
sbb
std
loopne
sub
addl
outsb
and
lcall
call
gs
xchg
shrl
xchg
aad
es
cmp
cltd
push
adc
adc
dec
sub
jle
enter
cli
fidivrl
cld
xchg
pop
cmp
cmp
mov
mov
push
mov
scas
pusha
stos
mov
cmpsl
cmc
je
fisttps
dec
sbb
push
pop
or
sbb
icebp
loopne
adc
movsb
add
hlt
hlt
pop
cmp
stc
lock
xchg
insl
ljmp
jns
outsb
outsb
and
mov
xchg
inc
test
jle
insb
scas
mov
cmp
xchg
xchg
cwtl
dec
or
pop
mov
add
dec
ljmp
gs
add
jl
lds
adc
lock
in
into
dec
cmp
xchg
repz
imul
in
stos
test
hlt
or
pop
pop
decb
shlb
loope
cmc
mov
popa
jnp
out
mov
sub
andb
pop
pop
xor
mov
sbb
aam
out
xor
add
addr16
push
push
adc
sub
repz
jne
sahf
dec
push
sbb
out
les
mov
mov
xchg
loop
jp
je
push
out
nop
pop
cmp
inc
rcrb
xchg
imul
decl
mov
sub
shr
lahf
aam
dec
shr
push
jbe
sbb
or
xor
pop
lret
pusha
sub
negl
or
lahf
cmp
insb
cmpsl
add
out
xchg
insb
jb
movsl
xchg
sub
xorl
jmp
push
gs
cmp
add
outsb
mov
lret
xchg
mov
ret
mov
std
outsl
stos
imul
sahf
aaa
mov
push
cmpsl
or
daa
mov
inc
lret
fdivs
bswap
mov
xor
pop
xchg
roll
ret
pop
in
xor
sub
push
leave
aam
pushf
call
xchg
out
add
cwtl
popf
inc
movl
pop
jo
imul
clc
lds
and
mov
mov
push
mov
pop
sar
mov
leave
repnz
fxam
fsubr
stos
pusha
fisttpl
ret
mov
pusha
loop
in
sub
nop
fwait
subb
mov
mov
cmp
or
push
push
sbb
mov
lahf
rcrl
inc
hlt
jbe
frndint
cmp
adc
jg
loop
js
xchg
xchg
inc
addr16
fmull
xor
and
sub
iret
cmp
cmp
jbe
popa
mov
pop
xchg
insl
clc
xchg
cmp
jl
dec
mov
call
sar
popa
jns
lret
mov
mov
jecxz
jmp
lds
rcll
inc
pop
cmc
mov
mov
mov
cld
cmp
or
pop
out
sti
inc
shlb
je
mov
jge
lret
push
mov
or
push
imul
sub
inc
cmp
pop
jo
mov
cmp
inc
push
jns
xchg
and
xchg
dec
cld
insl
and
cmp
xchg
aam
adc
imul
imul
inc
sub
cmp
sti
or
icebp
xchg
sub
test
arpl
add
adc
push
dec
stc
roll
jmp
add
dec
imul
andl
or
dec
sub
fisttpl
xor
lods
xchg
mov
xlat
js
pusha
int
ds
hlt
push
jno
adc
mov
fxch
mov
or
mov
pop
popf
xor
pop
call
add
xor
dec
mov
jl
lods
outsl
stc
out
push
inc
scas
idiv
adc
incb
xchg
cmp
nop
mov
jno
push
dec
mov
inc
mov
mov
mov
or
int
hlt
ljmp
pop
and
dec
adc
not
lea
push
sbb
and
mov
cmp
fdivr
call
ss
sbb
or
sub
cmpsb
int3
lds
cli
aas
jmp
cmpl
pusha
repnz
lret
sbb
xor
test
mov
sub
or
mov
mov
adc
pop
clc
mov
push
test
insb
fwait
or
jge
std
lret
lahf
cmpb
sub
or
iret
inc
sahf
cltd
shlb
test
imul
aad
push
pop
xchg
adc
decl
test
outsl
push
jge
orb
nop
aaa
test
dec
xor
xchg
inc
mov
mov
cltd
push
ss
or
push
push
lcall
nop
clc
dec
push
rclb
xchg
enter
or
test
pop
popf
pop
int
int
mov
add
sbb
add
dec
gs
cwtl
js
push
or
xchg
pop
aas
jecxz
and
jle
or
inc
sbb
jl
jnp
arpl
in
mov
outsl
pusha
fwait
js
and
test
cmpsl
mov
push
lods
btr
lock
aad
xor
fldt
stos
test
pop
int
cmp
mov
push
ljmp
adc
cwtl
icebp
aaa
rcl
push
inc
out
les
jle
repz
in
movsb
or
or
das
in
mov
test
mov
sub
xor
xor
je
mov
popf
imul
mov
fistps
aas
mov
mov
dec
ljmp
add
lret
xchg
test
iret
aaa
std
sub
adc
stc
ret
ds
mov
js
insb
into
push
into
mov
loopne
mov
dec
jecxz
daa
mov
movsb
int3
jae
sbb
scas
pop
jnp
sub
movsb
xorb
pop
sub
adc
mov
jne
lea
int3
sub
or
test
adc
dec
add
clc
and
aas
dec
fldcw
jne
ss
jle
movb
and
jle
ss
push
mov
fadds
jae
ret
pop
dec
movsl
adc
rcrl
jne
xor
lods
adc
loop
push
icebp
push
dec
and
jae
cmp
add
scas
roll
and
pop
loopne
jp
out
jae
pop
loopne
mov
mov
jbe
ficomps
mov
adc
adc
push
outsl
incl
cmc
into
pop
xchg
mov
jae
shrl
leave
xor
sbb
cld
or
xor
jae
xchg
jecxz
mov
jne
inc
push
cmp
mov
call
jle
cvtpi2ps
push
repnz
out
sub
jae
jo
xor
mov
cli
sarl
mov
stos
xor
cli
inc
mov
cs
repnz
mov
sbb
or
mov
mov
sub
or
inc
cmpsb
shlb
lret
aas
popa
insl
in
or
mov
add
in
mov
fwait
pop
testl
shll
mov
pop
cltd
fldenv
call
dec
sbb
cltd
test
leave
jg
jo
push
stos
mov
adc
lret
cmpb
add
cmp
mov
mov
loopne
pusha
cltd
shll
cmp
aaa
leave
mov
sbb
out
sub
shrb
cltd
out
jg
add
rol
mov
fistps
sarb
cmpsl
mov
sbb
lea
fsts
dec
stc
add
mov
lcall
in
das
mov
in
add
fucomp
or
xor
ds
sahf
cmpsl
push
outsb
aad
mov
std
cltd
in
mov
pop
shll
mov
add
ja
jle
cmp
repz
sti
xor
push
mov
jbe
and
jmp
ret
cmp
pop
mov
cltd
in
fmull
pop
mov
roll
aam
aad
cmpsl
loope
sub
sub
add
push
mov
sbb
and
fbstp
and
push
push
jge
jg
sahf
xor
popf
out
inc
sbb
push
stc
xchg
push
or
sbb
mov
pop
inc
mov
into
push
daa
mov
push
stos
sti
shlb
and
or
jp
mov
subb
or
mov
cmc
push
dec
cmp
into
imul
cmpl
cmp
push
add
xchg
ljmp
cmp
movsl
es
mov
mov
or
lret
jne
mov
add
fucomi
mov
test
push
add
mov
pop
les
stc
insl
fstps
lret
pushf
add
stc
mov
mov
iret
jg
xchg
scas
adc
imul
test
test
sub
jns
xor
jmp
stos
sti
push
or
mov
out
mov
iret
movsb
sub
stc
pop
cmc
lock
cltd
push
add
aaa
in
movsb
jle
or
xor
clc
repnz
ficoml
mulb
or
outsb
jg
push
into
movsb
jno
repnz
test
aaa
rcrl
insl
mov
and
push
mov
push
stos
lds
dec
xor
dec
dec
sbb
mov
sub
cwtl
decl
into
sub
cmp
std
lea
ja
dec
icebp
push
sbb
inc
inc
in
inc
int
mov
aam
push
xchg
xchg
iret
dec
xchg
loop
insl
nop
xchg
out
mov
ret
mov
ret
push
xchg
ds
mov
cmp
push
and
in
pop
fsubl
es
jno
fucom
js
ret
mov
popa
cs
push
orb
or
popf
adc
gs
call
cld
cli
loopne
adc
cmpsl
cmp
lock
rorl
std
mov
add
inc
sub
stos
pushf
cs
out
rclb
sub
inc
and
add
jecxz
dec
lcall
out
fs
mov
dec
inc
sbbb
js
mov
mov
mov
int3
loope
mov
pop
jle
xor
shrl
mov
int
push
testb
xor
mov
or
mov
jo
iret
xchg
call
mov
rorl
fcmove
mov
add
xchg
pop
xor
pop
bound
xor
jns
pop
sub
fistpll
pop
pop
jb
cld
scas
les
cmp
xchg
xor
inc
push
xor
sub
test
mov
pop
sbb
std
repnz
or
scas
sbb
nop
add
mov
mov
xor
into
stos
lahf
cwtl
addr16
xrelease
mov
repnz
loop
mov
out
sbb
je
cwtl
in
jge
lock
adc
dec
aaa
rcl
xchg
and
mov
and
lret
jle
pop
mov
jb
sahf
lahf
in
iret
adc
leave
ds
pop
aaa
loope
cmpsb
dec
mov
lock
idivb
fadd
xor
enter
jb
mov
xor
imul
xlat
and
int
jo
pusha
gs
rcrl
sub
xor
sbb
xlat
nop
jns
mov
out
lret
lret
cmc
cmpsl
xchg
push
jns
pusha
fs
pop
push
stc
adc
jb,pt
xor
leavew
mov
inc
adc
mov
add
rorl
in
cmp
or
ss
loope
mov
cltd
mov
or
xchg
jmp
push
mov
xchg
cmpsl
scas
gs
xor
add
cmp
sub
mov
lret
imul
cmp
fcmovbe
push
out
mov
xor
xor
cld
dec
js
jg
push
iret
mov
aaa
and
mov
jne
jno
movl
dec
sub
and
mov
ljmp
jle
lods
cmc
sub
cmc
mov
or
mov
fimuls
sub
inc
dec
inc
aad
lea
shll
mov
in
in
in
scas
or
add
sub
mov
dec
xor
dec
jne
addb
lods
ja
mov
jecxz
cmp
out
mov
or
gs
test
xor
mov
out
lcall
mov
push
out
roll
xlat
push
neg
adc
jne
int3
add
cwtl
mov
stos
pop
fmul
mov
mov
shll
jp
popa
popf
sbb
xchg
add
add
sbb
inc
mov
xchg
stos
imul
mov
popf
movsb
int
jbe
jb
jae
lock
mov
sub
cmc
sbb
inc
pop
add
and
lahf
sub
sub
adc
jb
fildl
add
call
fidivl
add
and
mov
ret
shlb
outsb
mov
mov
out
xchg
and
sbb
or
sub
mov
mov
adc
mull
inc
lds
xchg
mov
mov
jns
mov
rolb
sub
rcrl
sar
add
rorl
sahf
adc
aaa
popa
cmp
xchg
sbb
jmp
rcrb
sbb
sbb
dec
ds
icebp
int
mov
ss
pop
fsubrl
xor
xor
xchg
lods
mov
adc
enter
lret
lret
sub
and
dec
sbb
sti
dec
insl
or
cmp
mov
leave
stc
jae
inc
jp
pop
jno
adc
and
xchg
test
fistl
arpl
call
jnp
inc
xor
stos
shlb
cmpsb
pop
pop
sbb
mov
sar
lds
or
cmp
mov
push
add
dec
push
je
adc
cli
pop
inc
mov
xor
xor
mov
mov
mov
add
lods
or
jo
int
testb
mov
add
xlat
xchg
cmp
mov
sub
data16
subl
dec
or
push
add
push
pop
cmc
xchg
popa
inc
ss
mov
cmpsb
push
je
jecxz
aas
das
push
cltd
inc
adc
cld
or
lahf
call
rcll
fnstenv
cld
repz
adc
rclb
jle
cwtl
or
lea
rcr
xor
adc
dec
iret
popa
xor
or
stos
js
push
out
lds
hlt
adc
or
inc
lcall
cld
and
sub
pmullw
insl
dec
mov
or
ror
mov
cmpsb
dec
into
test
addr16
pop
adc
test
pop
mov
mov
mov
push
pushf
dec
imul
enter
push
dec
sbb
jb
dec
jnp
add
clc
fwait
or
shrl
jmp
add
loope
or
out
dec
lods
sub
push
bound
and
sbbb
imulb
add
xor
jno
mov
jg
dec
push
hlt
jge
pusha
or
push
dec
mov
movsb
les
mov
jae
dec
fdivp
pop
test
xchg
sbbl
xor
xor
iret
push
mov
stc
push
mov
lea
shlb
nop
mov
dec
pop
lds
stc
insb
out
in
iret
dec
jo
iret
dec
mov
mov
notl
mov
ds
daa
daa
in
and
lods
fmull
stc
sub
jp
xlat
mov
xchg
lds
stos
or
insl
into
pusha
es
push
sbb
imul
or
xchg
jmp
stos
lock
dec
aad
mov
insl
mov
xlat
lods
mov
js
pusha
cli
mov
sub
cli
popf
daa
repnz
jnp
xchg
fidivrl
lahf
push
fmuls
nop
orl
dec
cmp
mov
push
les
push
dec
shlb
adc
cmp
test
hlt
je
and
jge
add
adcl
inc
dec
call
out
xchg
pop
loope
aad
dec
mov
shrl
jb
and
scas
loop
test
insl
jne
test
adc
fimuls
insl
lcall
test
loopne
jecxz
jecxz
pop
and
dec
jns
faddl
xor
jne
out
xchg
jl
roll
xchg
iret
out
pop
aaa
inc
repnz
dec
pushf
lds
outsb
inc
pop
inc
pop
add
aas
insl
jmp
imul
clc
aam
inc
mov
test
pop
inc
jle
stc
sbb
movsb
cld
sbb
jnp
lods
enter
or
inc
dec
add
mov
jle
xchg
cld
mov
outsl
sbb
enter
call
push
leave
push
or
int3
cs
mov
cmp
cmp
hlt
imul
int3
sub
or
inc
sbb
bound
or
shl
dec
arpl
xlat
inc
scas
xchg
aam
cmp
jb
lcall
mov
pop
popf
xchg
cmovne
rcl
push
sbb
lock
repnz
lods
scas
insl
repz
adc
mov
jmp
mov
xchg
dec
int
xor
sub
jne,pt
test
jmp
dec
pushl
int
loopne
xchg
mov
xor
cli
mov
icebp
mov
cmp
inc
cltd
jne
sbb
ret
popf
push
sbb
arpl
inc
sbb
cmp
pop
cs
icebp
bound
cltd
popf
out
sti
dec
jbe
pop
es
dec
sarb
daa
pop
outsl
add
sub
adc
int3
pop
push
pop
nop
push
mov
iret
mov
jb
sbb
cmc
inc
test
stc
pop
lret
jne
nop
mov
pushf
xorb
loop
aam
and
arpl
stos
orl
cmp
bound
mov
sbb
jo
xchg
cmc
dec
aas
jge
les
jmp
xor
aas
push
cmp
insl
mov
jl
orb
mov
xlat
cwtl
push
mov
xchg
sbb
mov
push
shlb
cmp
rorl
test
std
jmp
sets
pop
pop
outsl
in
scas
jbe
out
adc
pop
or
or
imul
pop
xor
out
and
sub
fs
daa
adc
adc
mov
es
inc
xlat
and
dec
stos
rcll
push
les
je
or
in
cmc
jmp
jl
cld
clc
inc
xchg
cmpsb
xchg
cltd
mov
push
inc
push
mov
lock
rcrl
adc
mov
sub
xor
xlat
sbb
movsb
out
out
imulb
lret
jle
jno
aad
test
outsl
pop
or
pop
int3
mov
ljmp
js
je
sbb
sub
inc
xchg
clc
cmp
mov
adcb
sbb
xor
push
lcall
jbe
int
orl
ret
push
into
arpl
pop
ja
jle
aad
stc
fsubp
xor
adc
test
adc
sbb
push
push
lods
add
shll
pop
adc
dec
rcr
push
adc
sub
push
inc
lcall
push
mov
pop
out
rclb
je
data16
sub
cmpsb
jmp
xchg
xor
add
and
mov
mov
gs
or
daa
out
fmuls
cs
out
out
nop
cmp
cltd
hlt
mov
pop
cmp
cmp
cmpsb
lea
push
pop
xchg
inc
gs
outsl
mov
jp
out
std
cltd
or
out
or
inc
not
sbb
fldcw
stos
fs
jne
out
and
mov
imul
xchg
jg
shll
daa
sub
dec
stos
scas
test
jo
cmc
mov
stc
and
pop
mov
test
mov
sbbb
inc
and
adc
pop
jmp
rcl
jo
out
ret
out
xchg
lret
push
or
cmpsb
cmpsl
inc
jmp
adc
jge
arpl
sbb
outsb
xchg
dec
xor
seto
cmp
sub
cmpsl
data16
mov
jo
xlat
iret
mov
fldenv
lds
aad
dec
pop
lods
fdivp
test
inc
aas
addr16
gs
sahf
pop
dec
cmp
test
mov
dec
fcoml
ret
sub
xor
insl
lcall
inc
inc
cld
push
cld
mov
jmp
mov
mov
pop
pop
cld
xchg
dec
dec
mov
mov
in
lahf
lahf
sbb
xorb
mov
in
mov
sub
pushf
dec
repz
mov
xchg
mov
push
xchg
or
cli
fadds
mov
mov
call
les
mov
pop
dec
pop
les
sbb
adc
mov
cmp
pop
adcb
xchg
cld
out
xor
mov
or
jge
push
leave
mov
loope
cli
dec
es
stc
out
inc
lock
sbb
dec
cs
push
jo
frstor
xchg
push
add
test
mov
lahf
xchg
fucomip
jno
ret
lret
pop
ret
cmp
dec
jo
xchg
test
push
add
dec
sbb
inc
mov
les
sub
cmpsb
lea
xor
cwtl
pop
test
test
divb
in
insb
add
test
mov
jge
lods
mov
sub
mov
adc
xchg
scas
jae
neg
fiaddl
roll
and
push
pop
push
rorb
mov
mov
fldenv
mov
fsub
adc
lods
repnz
test
daa
mov
repnz
cli
insb
out
sbb
cmpsl
and
not
xchg
stos
mov
inc
mov
sub
jmp
and
aam
mov
les
les
cltd
mov
dec
ficomps
or
push
jl
or
sbb
mov
sub
loopne
xchg
push
mov
mov
stos
xlat
adc
and
jge
popa
lods
pop
int3
xchg
std
fwait
mov
mov
jecxz
add
jb
xchg
imul
jno
test
sbb
jle
inc
iretw
sbb
shlb
movsl
andb
inc
les
jmp
mov
xchg
outsb
cmp
push
and
mov
call
scas
scas
jmp
inc
push
mov
mov
shlb
cs
sti
call
sbb
in
adc
and
popa
xchg
lcall
int3
sbb
repz
inc
jbe
cmpsb
pop
iret
ret
xchg
int3
sub
or
mov
fldl
sub
and
add
cs
mov
mov
cmp
add
and
pop
push
inc
push
add
sbb
cmp
add
mov
fs
adc
push
into
sti
cli
pop
loope
sbb
mov
sbb
lods
xchg
xchg
shl
dec
add
adc
bound
repz
outsl
xchg
add
jbe
inc
push
das
fisubrs
aas
inc
inc
shlb
icebp
dec
fcoms
test
xor
pusha
insb
inc
inc
fldt
xor
outsl
lret
cmp
insl
mov
pop
iret
shl
mov
out
test
push
jg
jg
push
js
jbe
push
push
test
mov
push
imul
pop
mov
sbb
pop
fstl
adc
movsb
mov
mov
and
out
mov
xchg
enter
xchg
inc
add
push
shll
fists
xchg
or
dec
cmp
xchg
mov
xchg
push
sbb
add
inc
cmp
notl
mov
das
int
ja
dec
je
roll
jbe
out
jae
hlt
mov
cmp
adc
xor
push
inc
mov
in
stos
sbb
fsts
add
cmp
fwait
lret
ds
and
jmp
lods
divl
gs
pusha
sub
and
pop
imul
orb
add
mov
ds
cmp
and
pop
cmp
cmpsl
cmp
jne
lds
addr16
cli
pop
rorb
or
sbbb
add
mov
ret
mov
aaa
hlt
cs
pop
jl
scas
inc
push
into
fwait
lea
mov
xor
hlt
scas
shll
xchg
pop
rcrb
into
inc
xchg
movsb
and
stc
loope
data16
cmpsb
mov
sbb
pop
inc
idivb
addr16
cmpsb
movsl
mov
and
stc
gs
outsl
fxch
or
ficompl
outsl
sub
sub
fnstcw
push
mov
orb
stc
adc
lahf
es
sub
jp
mov
cmp
ffreep
xor
insb
push
dec
cwtl
ja
mov
push
rol
cmp
jp
enter
imulb
jmp
lcall
cli
adc
cmpsl
packuswb
insb
mov
test
insb
mov
jle
icebp
inc
inc
adc
outsb
adc
mov
mov
xor
test
jecxz
mov
mov
pop
mov
push
mov
mov
test
data16
ret
add
sub
mov
inc
xor
xlat
push
in
add
xchg
or
cwtl
cmpsb
inc
mov
or
jmp
or
cmp
mov
jne
bound
out
push
das
pushf
inc
jmp
lea
pop
mov
dec
or
outsb
pop
push
fcoml
add
iret
cli
add
jne
call
mov
lret
xor
jmp
jge
mov
mov
pop
out
jbe
repz
and
arpl
jg
push
lret
mov
dec
add
out
cltd
es
jp
test
mov
pop
and
dec
fcom
popf
mov
push
jmp
stc
push
fisttpl
mov
lahf
adc
mov
xor
es
flds
sbb
fimull
dec
sbb
dec
adc
stos
in
pop
inc
out
add
ja
dec
sub
movsb
fdivrs
mov
jg
inc
lahf
std
cmpsl
push
in
xchg
mov
jle
loopne
or
xor
or
mov
pop
scas
nop
jbe
int
cmp
test
add
scas
push
shr
lea
lds
jnp
sub
push
jmp
ret
popf
add
ficoml
and
mov
ror
push
and
xchg
repnz
gs
fildll
out
mov
ja
push
mov
ds
xchg
push
jb
imul
push
xchg
and
pop
inc
xchg
xor
or
movsl
lods
mov
std
inc
add
xor
xor
imul
lods
push
ja
mov
les
lret
int
adc
push
fldenv
push
cmp
add
addr16
and
cs
sub
pop
and
ss
push
xor
pop
mov
test
call
enter
adc
ljmp
dec
cmpsb
add
push
lea
imul
rcll
jne
sbb
int
pop
adc
mov
fistpl
add
mov
adc
mov
mov
or
sbb
in
cmpsb
or
or
ds
or
je
js
scas
mov
cli
xchg
xor
pop
cltd
fists
scas
pop
in
xor
std
mov
into
stc
shrb
leave
enter
bound
cmpl
and
push
cmp
call
aas
lock
ds
out
roll
dec
ss
iret
aas
add
lcall
in
in
insl
cld
test
loopnew
cli
mov
in
xorl
and
and
jecxz
pop
inc
inc
xchg
fnstenv
enter
sahf
push
xadd
xchg
jmp
aam
stc
jae
cwtl
imulb
std
xchg
xorl
in
das
xchg
mov
mov
arpl
adc
push
or
arpl
pop
outsl
jo
leave
das
test
or
aaa
jle
lods
add
roll
xor
call
inc
into
push
mov
pop
lods
pop
dec
xchg
or
mov
mov
arpl
jg
sbb
out
adc
adcb
mov
rcl
arpl
loop
iret
stos
inc
dec
adc
sub
out
jge
xlat
and
loop
jmp
or
aaa
adc
xor
in
bound
and
call
mov
mov
push
sbb
addr16
xchg
mov
jne
fimull
xchg
fdivl
fmuls
jo
mov
jle
into
rcll
push
stos
sbb
jns
lods
aam
loopne
adc
and
jnp
xor
push
dec
cltd
cmp
jp
icebp
jns
movsl
aad
mov
lea
jns
dec
cld
lcall
or
bound
push
test
mov
dec
inc
scas
sub
jns
mov
adc
call
mov
inc
shr
cmp
sarb
lahf
push
jp
dec
aaa
fisubrl
sub
push
sub
xor
rclb
xor
popa
sar
xchg
cwtl
repz
dec
jns
mov
xor
push
mov
bnd
mov
mov
shll
push
mov
adc
inc
jne
test
sti
jae
sub
jp
ja
popf
pusha
xlat
shr
adc
cmp
lea
in
fcoml
fxch
pop
pcmpgtb
push
icebp
fnop
lahf
xchg
and
test
sub
mov
jnp
mov
jp
insl
aaa
lcall
inc
sub
xor
jl
or
adc
in
adcl
idivl
sahf
mov
xor
xchg
cwtl
xchg
adc
sbb
xor
rcrl
add
pop
adcb
jge
test
or
rcrl
inc
push
jge
jae
push
pop
cmpsl
test
aas
mov
sbb
fisttpll
xor
aad
mov
idiv
in
inc
stos
add
inc
jae
dec
xor
inc
inc
pop
push
repnz
inc
test
clc
push
scas
jp
mov
xlat
lods
push
xor
aas
add
dec
or
movsb
push
movsl
lret
cmpsb
mov
ljmp
jbe
or
fimuls
out
inc
mov
adc
popa
or
data16
cmp
mov
push
mov
rcrb
ret
js
dec
add
mov
dec
mov
dec
jg
mov
mov
adc
pop
push
xchg
push
add
dec
incb
xchg
fiadds
imul
push
addr16
aad
cmp
in
ljmp
jnp
sbb
fisttpll
sbb
add
jne
ja
mov
popf
fwait
and
lods
mov
jmp
cmp
gs
adc
nop
int3
sti
fs
mov
dec
push
loopne
pop
inc
sbb
pop
jp
sbbl
jmp
cmp
insl
lcall
lock
les
xchg
mov
jge
pusha
lods
inc
fisubrl
stc
xor
xchg
lods
ficompl
xchg
shrl
mov
idiv
fildll
fldcw
daa
mov
xlat
cwtl
mov
pop
sub
pop
popa
or
pop
dec
stc
aas
xchg
jbe
out
jne
adc
sahf
xor
test
xchg
mov
inc
loop
outsl
push
insb
cltd
push
call
fcom
xor
push
mov
dec
je
or
dec
in
xor
push
dec
fxch
inc
sbb
test
stc
loope
out
xor
iret
pop
sbb
dec
insl
cmp
lock
xchg
movzbl
pop
adc
ret
orb
fldcw
scas
call
jo
outsb
sub
daa
adc
jmp
or
loop
xor
vmwrite
jno
frstor
push
pop
repz
arpl
dec
sub
cmp
fwait
mov
jno
insb
roll
push
adc
xchg
cwtl
aas
mov
int3
popa
cmc
pusha
movsl
mov
cmp
cs
jge
sahf
sub
mov
and
mov
icebp
xor
xchg
adc
push
movsl
stc
cwtl
push
add
out
push
xchg
xchg
and
mov
mov
and
add
lgs
inc
push
test
inc
test
pop
pop
jmp
scas
push
push
cmp
xor
fcmovnbe
popf
icebp
or
lock
fucom
dec
movsl
or
test
jo
or
jns
repnz
sub
add
bound
pop
sbb
jbe
fmull
es
xor
lock
std
neg
mov
dec
add
cmp
fdivp
mov
cmp
clc
xor
mov
adc
xlat
sahf
mov
mov
cltd
dec
jge,pt
fcompl
jl
sub
cwtl
arpl
push
popa
in
testb
rorl
aad
paddd
jno
pop
loop
or
dec
add
sbb
hlt
xor
aad
fdivs
int3
jp
jne
cmp
pop
pop
mov
lret
mov
in
mov
jnp
push
pop
pop
jp
out
cwtl
int3
iret
ss
or
mov
ja,pn
aas
repz
xchg
jno
imul
adc
out
lock
or
rclb
faddp
sbb
js
push
daa
dec
pop
pop
rorb
fstl
inc
push
mov
mov
mov
call
mov
add
dec
or
adc
movsl
jp
jecxz
loop
hlt
and
xor
js
in
out
cli
nop
clc
adc
push
inc
movsl
jae
pop
fisttps
leave
add
xchg
cmp
fucomip
xor
jns
add
mov
cld
or
inc
imulb
in
push
adc
fistps
pop
add
bound
lods
sti
xor
xchg
sub
jno
push
mov
fwait
jmp
sbb
in
dec
outsb
imul
scas
inc
pop
add
loope
rcrb
outsl
or
sub
push
mov
test
rcrb
mov
or
dec
adc
mov
iretw
mov
nop
popw
insl
jmp
jl
add
div
mov
sbb
xchg
dec
pushl
xor
cmp
stos
shll
rcr
mov
les
xchg
lret
mov
xchg
ret
fdivrs
cs
or
jbe
dec
ud2
xor
rorl
push
add
inc
stc
test
push
cli
test
pop
mov
movsb
cwtl
pop
add
inc
outsl
mov
in
lock
enter
lock
lahf
in
cmp
out
push
or
jl
jecxz
out
cmovg
push
mov
cmp
clc
and
lods
in
or
gs
shll
cwtl
mov
jmp
jbe
sbb
test
jl
inc
aad
fidivrs
imul
mov
aam
addl
sbb
fistpl
repnz
movsl
loop
loop
in
je
mov
pusha
in
negb
sub
add
pop
lods
aas
mov
sbb
or
dec
cmp
fsubl
mov
aam
xor
lahf
mov
pusha
ja
out
cs
dec
pop
jge
stc
cli
and
dec
outsb
mov
fisubrl
push
mov
cld
sahf
scas
stos
mov
jnp
popf
arpl
push
bnd
jmp
push
xor
mov
call
pop
bound
pop
push
mov
loop
add
das
inc
movsb
pop
add
mov
mov
scas
inc
sbb
or
lods
or
repz
adc
sbb
inc
movsl
xchg
push
and
add
add
cmp
push
jbe
fsubr
adc
pop
in
sub
adc
rclb
repz
lds
es
mov
and
sbb
loop
rcrb
mov
fnsave
add
ror
adc
push
test
gs
mov
sbb
jb
bnd
pop
dec
lcall
inc
lea
mov
bound
imul
add
pop
dec
test
and
or
push
mov
inc
cmp
fwait
inc
push
repnz
aad
pop
mov
inc
popa
in
aam
movsb
cmp
ret
mov
push
pop
loop
cld
inc
test
xchg
cmp
lahf
xchg
pop
xchg
stos
cmpb
outsb
sahf
fldl
cli
imulb
call
sbb
insb
clc
mov
lahf
sbb
pop
aad
and
js
int3
je
dec
ss
xor
int
xchg
cmp
sbb
ss
jns
fldcw
and
mov
data16
cmp
or
lret
jae
and
outsb
fiadds
sahf
data16
gs
je
aam
cmpsb
or
icebp
icebp
mov
jecxz
cmp
push
mov
lods
hlt
add
fcmovnu
push
xor
jle
and
and
adc
les
xchg
in
pop
movsl
fwait
shrl
int3
lcall
aam
and
xchg
shll
pop
mov
out
xor
jg
mov
jb
adc
lret
and
lcall
es
mov
andb
dec
aad
jle
cmp
sahf
push
cmp
xor
sahf
stos
les
sub
push
pop
dec
and
je
les
jecxz
mov
xchg
mov
inc
push
daa
push
scas
shlb
clc
pop
lret
daa
add
sbb
dec
add
std
mov
ja
jno
ret
jno
mov
hlt
aam
mov
das
lock
nop
pusha
aas
je
pop
mov
cld
push
xchg
xchg
cmp
ds
push
enter
mov
sbb
mov
cwtl
mov
loopne
push
mov
jb
or
jg
aad
xor
mov
shlb
rclb
dec
ds
mov
cmp
pop
adc
scas
hlt
ja
dec
sub
sbb
cmp
test
inc
mov
int3
ds
imull
outsb
lcall
scas
adc
push
shlb
xor
test
and
aad
inc
in
xchg
outsl
sbb
cltd
xchg
xor
arpl
xchg
xor
ljmp
dec
mov
and
js
fbstp
add
inc
fs
mov
mov
fwait
and
or
xchg
je
mov
lret
push
mov
mov
jne
jp
imul
ds
push
ret
sbb
add
dec
aas
data16
xchg
shl
loop
out
or
insb
mov
ljmp
or
dec
xor
orl
int3
nop
mov
dec
pop
cmp
dec
out
dec
inc
dec
sub
sub
push
and
in
xlat
sbb
dec
scas
icebp
testl
mov
call
shr
lahf
lcall
and
unpcklps
adc
fistps
jmp
aaa
pop
cmc
sbb
dec
push
cmp
inc
loopne
jecxz
ret
pop
test
in
scas
mov
dec
xchg
repz
sahf
push
popa
mov
adc
sub
or
ficompl
xor
aas
dec
int3
xchg
add
in
cwtl
loope
cwtl
mov
idiv
adc
icebp
or
mov
ja
lahf
mov
mov
push
lret
std
adc
xchg
pusha
pop
ret
adc
scas
or
pop
and
pop
jne
mov
mov
icebp
mov
inc
xchg
fcmovne
inc
pushf
sbb
mov
cli
hlt
aaa
ds
call
xor
mov
dec
mov
loop
lock
mov
aaa
ljmp
xchg
sub
gs
push
stos
xchg
mov
fildll
mov
mov
in
lahf
bound
movsb
sbb
mov
call
mov
fsubs
xchg
adc
roll
mov
dec
daa
inc
jo
je
out
sbb
or
lret
pop
outsl
loope
mov
push
out
jl
pop
lcall
inc
int
pop
int
test
jae
or
sbb
pop
mov
pop
adc
movsl
out
lock
int3
inc
xor
xlat
js
xchg
pop
stos
test
xor
mov
popf
sbbb
sub
mov
leave
sub
cmp
or
cli
pop
scas
outsl
xor
mov
mov
repnz
add
lret
in
std
cltd
pushf
cmp
cmpl
xor
fdivl
cwtl
jns
pop
sub
test
pop
mov
repnz
dec
lods
lods
xchg
out
mov
adc
cmp
aad
mov
jo
jb
cmc
adc
sbb
negl
ss
or
cmp
out
test
stos
xor
lret
jle
sub
rol
scas
mov
sbb
jecxz
push
pop
outsl
test
cmpsb
popa
mov
dec
xlat
mull
sbb
pmaddwd
inc
das
adc
xchg
sub
push
lods
and
sti
mov
fsubl
mov
pop
mov
clc
and
es
push
push
loop
daa
movsb
cmpsl
jne
and
push
jle
mov
inc
repz
mov
pop
outsl
insl
inc
dec
cmp
and
test
sbb
fisttps
mov
pop
arpl
out
inc
aad
xchg
push
ret
das
out
mov
std
xchg
ret
dec
bnd
insl
add
daa
test
lea
fwait
sbb
sub
jecxz
mov
cmp
mov
or
cwtl
pop
outsl
cmp
adc
test
push
jbe
mov
mov
or
icebp
xor
cmp
xlat
gs
sub
dec
aad
shlb
and
in
or
in
xchg
add
push
mov
rolb
outsl
das
xchg
ficompl
je
pusha
mov
jp
stos
jmp
ror
adc
jecxz
imul
push
jmp
lods
mov
mov
pop
inc
and
mov
lds
dec
scas
or
mov
out
daa
sti
dec
rsm
dec
cs
clc
xchg
fcom
into
mov
inc
test
aaa
sarl
nop
movsb
cbtw
jmp
popa
loop
jns
les
sbb
clc
jp
adc
mov
jae
sbb
pop
scas
mov
xchg
fsts
sbb
mov
arpl
mov
add
es
cmp
pop
pop
jo
out
add
nop
inc
lret
rolb
pop
imul
inc
add
inc
mov
movsb
push
dec
cmp
loope
lret
or
iret
mov
enter
icebp
sbb
dec
push
fnsave
pop
mov
rcl
jbe
jnp
cwtl
pop
clc
jg
imul
dec
ljmp
mov
lret
ja
mov
loopne
rol
push
enter
push
es
jle
pop
mov
jo
cmp
xor
arpl
cltd
push
adc
and
xor
mov
dec
jb
mov
and
mov
lock
adcl
push
cmc
mov
dec
xor
inc
add
xchg
lret
pop
inc
jo
test
inc
cmp
jg
inc
hlt
inc
cmc
mov
aaa
add
jmp
jae
pop
push
iret
imul
cmp
popf
fcomip
mov
imul
into
pop
xor
and
shr
add
push
gs
es
and
sub
add
adc
or
xchg
add
sub
push
cmpsb
mov
dec
pop
data16
andl
add
dec
xchg
call
sub
sub
cmp
sbb
mov
in
out
insl
pop
sub
loop
cmp
dec
adc
or
and
mov
fnstenv
ror
scas
jns
mov
js
adc
out
notl
sbb
mov
lds
mov
mov
dec
scas
jno
adc
aaa
cmp
daa
movsl
or
jg
out
cld
dec
lock
enter
pushf
pop
test
out
aad
pusha
mov
xchg
test
jns
fistpl
mov
xchg
prefetch
test
mov
in
adc
lcall
dec
mov
ficoms
jge
pop
add
stc
jae
mov
cmp
mov
rcll
rcrl
rcl
cli
jg
add
dec
xor
jmp
mov
jae
faddl
mov
jecxz
fdivrl
push
sub
mov
pop
dec
add
push
push
fwait
lcall
push
stos
lods
sarl
push
xlat
mov
xor
cmp
aaa
pop
in
add
dec
rcrb
fs
dec
push
pop
sub
in
lods
push
test
in
pop
hlt
pushf
push
cmp
imul
sub
dec
and
in
inc
cmp
pushf
loope
lods
xor
sub
and
jecxz
mov
jb
sub
jle
fcmovu
imul
pop
add
enter
insl
rcr
jno
xor
cs
mov
and
or
scas
sarl
jnp
fsubl
lea
movsl
adcl
dec
add
getsec
mov
lcall
xor
jmp
lret
sbb
mov
xchg
cmp
push
sbb
jl
call
xchg
lock
add
push
mov
aam
pop
jo
mov
mov
fisubs
push
or
sbb
cmpsb
mov
out
hlt
add
push
push
xor
cltd
pushf
add
mov
repnz
out
fnstenv
popa
scas
and
add
ficoms
mov
in
mov
xchg
mov
negl
fiaddl
push
pop
cs
andl
aas
stos
sti
pusha
mov
cmp
xchg
jae
scas
fcoms
stos
push
and
mov
ret
jno
mov
mov
xor
mov
push
hlt
jbe
xchg
addr16
decl
cmp
push
in
das
jne
es
dec
call
cmp
sub
aad
pop
test
xchg
cmp
fs
or
dec
imul
aaa
mov
xchg
push
les
sub
into
daa
sub
out
lcall
cmc
jmp
cmp
int3
or
and
lods
push
or
mov
into
push
push
out
jg
push
sbb
jne
xor
outsb
gs
fnstsw
enter
sub
shrb
aad
jp
cmpsb
add
mov
xor
jecxz
sub
or
pop
aam
mov
mov
adc
idivb
cld
js
dec
stc
int
jae
rcl
mov
inc
push
dec
lret
repnz
ja
scas
adc
xchg
inc
push
cli
sub
ds
mov
and
mov
sahf
loope
mov
add
sbb
xor
xor
testl
cld
out
jl
test
addr16
insb
push
ljmp
mov
mov
stos
add
adc
dec
cmp
adc
cmp
mov
les
xchg
cs
jo
mov
push
inc
push
cwtl
ljmp
insl
mov
fstpt
popa
loope
jg
aas
inc
sub
inc
pop
test
mov
aaa
pop
inc
pop
push
xchg
movsl
rcll
sub
test
iret
xlat
fdiv
rolb
and
xor
in
pop
push
pop
mov
repz
cmp
jg
push
mov
bound
push
aas
and
mov
dec
pop
inc
inc
pop
ljmp
lea
in
shl
push
lea
pop
push
rcrb
sti
lahf
xchg
cmp
push
mov
mov
pop
std
sub
scas
ds
std
cmpsl
scas
scas
and
andb
lret
and
mov
inc
daa
aam
mov
sub
lret
jl
push
fwait
ja
adcl
loope
ret
pop
mov
arpl
ja
adc
ss
aas
test
int3
es
lea
xorl
insl
add
cld
das
xor
mov
js
and
lar
jge
in
lods
mov
inc
roll
dec
mov
fildl
rcll
das
mov
je
in
xor
xchg
cmc
lahf
negb
bound
sub
les
dec
fmuls
jmp
dec
ljmp
and
jmp
iret
stos
and
sahf
clc
fmull
in
icebp
mov
in
cmp
and
mov
mov
sbb
subb
inc
sub
sahf
pop
shlb
insl
push
int
jp
out
inc
add
js
dec
mov
sub
push
int3
sti
lods
neg
outsb
call
out
push
adc
and
dec
xchg
mov
loope
ret
lods
mov
mov
xchg
push
xor
pop
push
addr16
stos
out
add
mov
lret
nop
movsl
add
xlat
cmc
lock
fldenv
mov
stos
inc
sti
lds
jbe
outsl
xchg
shr
push
mov
cmp
mov
add
dec
popf
stc
dec
cmp
pop
push
mov
stos
out
fsts
mov
daa
loop
pusha
dec
cmc
adc
jg
cltd
sub
mov
rcrb
xor
adc
and
je
jmp
add
repnz
lcall
add
js
lret
ja
sub
cmp
call
out
cltd
push
mov
je
clc
push
dec
add
jbe
jnp
jne
adc
adc
sub
jbe
dec
imul
sub
out
popf
jo
pop
xchg
imul
mov
and
cltd
mull
enter
mov
imul
test
dec
or
pop
popl
movsb
or
bound
push
mov
jle
or
fsubl
inc
adc
cmpsb
in
xor
je
ds
out
inc
jno
aam
sub
adc
lahf
cltd
in
loopne
mov
sbb
push
sbb
stos
jb
mov
enter
xchg
add
stos
add
lods
imul
daa
add
fwait
lods
mov
adc
dec
outsb
imul
stos
mov
xor
cmpsl
xor
xchg
subl
add
fsts
repnz
js
adc
sahf
cwtl
repz
imull
hlt
sub
inc
xchg
lea
lock
mov
fsubl
inc
movsl
fsubrs
dec
fdivrs
movl
xchg
popf
xchg
sbb
pop
sbb
inc
clc
mov
push
outsb
dec
stos
fsubrl
inc
loope
jp
pop
xchg
testb
jge
out
sti
int
and
sub
pop
jg
jl
xchg
xchg
outsb
mov
pop
cltd
and
cmp
out
jbe
das
cld
jb
xchg
fwait
cmp
jne
hlt
xchg
and
dec
xor
xchg
cld
lret
jbe
divb
dec
popf
psubusw
stc
dec
push
jle
repz
jmp
lret
dec
mov
call
mov
and
es
lret
xchg
xchg
repnz
xor
jl
or
in
test
das
mov
lds
or
hlt
mov
add
mov
xchg
gs
push
sti
cltd
mov
push
mov
push
pop
or
scas
jns
aam
sahf
sbb
add
jns
test
cmp
pop
lods
pop
mov
jnp
pusha
popf
ds
int
mov
sub
mov
jns
gs
and
pop
push
pop
jp
jnp
lcall
imul
cwtl
leave
mov
js
orb
inc
push
ja
inc
lds
xor
cwtl
or
mov
decl
add
pop
dec
imul
mov
push
cmp
insb
fisttpl
mov
je
mov
xor
dec
out
push
and
xor
subl
rorl
jnp
imul
fcoms
out
and
pop
cli
insl
aaa
xchg
std
lods
jnp
stos
stc
lret
ljmp
jg
mov
popf
stos
add
aaa
mov
inc
mov
aas
addr16
sahf
pop
cwtl
sbb
pop
cltd
insl
cmp
int
addr16
int3
inc
sub
and
inc
add
pop
mov
mov
icebp
mov
fdivr
fs
sbb
inc
adc
mov
aam
jo
leave
push
sbbb
or
inc
xlat
push
cmp
xor
in
mov
mov
adc
mov
cs
jae
dec
orb
rcll
sub
aad
cmp
andl
loop
popf
leave
aam
push
ja
add
test
add
mov
out
sti
cltd
push
add
or
add
cmp
dec
or
inc
pusha
sub
mull
nop
mov
sti
mov
mov
jmp
int
inc
sbb
inc
adc
sarb
dec
sub
fsubl
cmpsl
sub
into
leave
mov
fmull
in
jle
cwtl
outsb
jno
cld
jns
cli
dec
daa
pop
inc
aad
loop
mov
int3
add
stos
push
mov
adc
add
gs
in
std
mov
loopne
or
xchg
adc
stc
jae
loopne
mov
xchg
or
xchg
mov
ds
out
lock
push
add
cmpsb
icebp
sub
push
lock
pop
in
call
pop
adc
push
mov
fdivrp
xor
cwtl
stc
and
loope
push
mov
test
add
or
sarb
out
mov
scas
dec
popf
sub
sbb
or
fistl
scas
aad
mull
lods
in
mov
fbld
fadds
in
adc
or
dec
ret
cmp
int
push
sbb
call
mov
nop
aaa
xchg
lahf
rorb
leave
std
dec
movsb
sbb
ljmp
ss
loopne
cld
xorb
mov
lret
cmpb
mov
mov
movb
xchg
hlt
pusha
cmp
aad
inc
sub
xor
xchg
in
cmc
push
sub
dec
dec
add
push
and
push
popl
minps
test
cltd
lods
mov
inc
ja
mov
notb
stc
sub
add
hlt
add
adc
mov
lahf
mov
outsb
adc
push
iret
nop
insb
lods
std
cmpxchg
stos
enter
xchg
or
dec
xorb
xchg
mov
mov
sti
fcoml
adc
fdivrs
icebp
mov
or
add
repnz
aad
sbb
xor
xor
cmp
mov
lds
lret
out
mov
aam
pop
addb
xorb
add
in
adc
xchg
mov
clc
add
fstp
lds
stc
sbb
mov
les
fldcw
std
sti
add
sbb
mov
divl
lret
pop
je
lods
jb
lahf
or
in
std
xor
scas
mov
pop
in
cmp
in
inc
popl
cli
addr16
and
add
fsubs
loopne
into
xchg
loopne
add
mov
scas
sbb
sbb
daa
cmpsb
xchg
push
daa
or
lret
call
lods
mov
add
aam
push
xchg
repz
fnsave
mov
sar
loopne
push
bound
and
stc
pop
and
fcmovne
sti
fcoml
loopne
xor
movsl
insb
adc
outsl
xor
adc
pushf
xor
fsubrs
adc
insb
sub
test
data16
popf
push
mov
inc
shr
pop
rorl
push
imul
test
mov
jmp
adc
aas
repnz
xchg
xchg
jge
pusha
aas
call
jnp
lret
inc
xor
push
rclb
inc
jmp
pop
in
mov
pop
sbb
repnz
or
outsb
or
mov
popf
xchg
xchg
test
push
rorb
imulb
pop
jmp
adc
call
adc
gs
inc
fwait
inc
insb
add
les
mov
push
popa
pop
in
cld
jmp
pop
push
xchg
movsb
mov
in
lcall
lret
adc
out
or
in
les
mov
mov
pop
lcall
and
adc
dec
mov
rorb
loope
loopne
sbbl
loopne
fidivl
inc
sub
jge
cmp
es
shll
cwtl
mov
ficoml
mov
lods
mov
dec
in
pop
pop
cmp
cmp
psadbw
repnz
and
inc
iret
sti
rcll
test
cld
pop
flds
add
xchg
add
inc
fcoml
sahf
push
jg
mov
mov
and
data16
int3
jns
cmp
jl
and
mov
push
lock
shrb
es
push
jge
push
pushf
and
pop
into
mov
leave
cmp
lock
idivl
pop
xor
sbb
mov
insl
loope
jbe
mov
dec
testl
insb
js
cmp
mov
repnz
aaa
lret
ret
mov
jbe
dec
jmp
push
jno
lea
xchg
out
aas
bound
ret
fwait
or
cmpsl
call
fimull
addb
stos
push
push
xor
in
pop
incb
imul
in
or
mov
test
xchg
push
jns
xor
inc
inc
mov
xor
lds
stc
notb
cmpsl
addr16
mov
js
icebp
call
lds
jge
aad
movsl
sub
pop
push
dec
fnstsw
imul
push
adc
loopne
push
out
adc
sbb
sbb
sub
xchg
lret
add
xchg
in
add
fwait
xor
fcmove
jb
and
or
cmp
or
mov
aad
sub
int3
repz
pop
jl
xor
add
test
fs
mov
xchg
aad
aas
ficoms
mov
mov
inc
call
scas
jg
pushf
sub
out
ret
out
jne
sbb
pop
jecxz
stc
adc
stc
adcl
sub
pop
enter
cmp
data16
mov
inc
sbb
inc
lcall
push
arpl
daa
cs
jnp
test
sbb
xchg
sti
adc
and
inc
scas
pop
lods
sub
inc
xor
push
push
rcrb
push
mov
aam
mov
lock
pop
pop
jle
leave
aaa
xchg
bound
leave
sbb
pop
or
push
mov
sbb
mov
loope
mov
scas
xorb
xor
xor
test
inc
scas
xchg
ljmp
sbb
or
pop
add
push
arpl
and
pop
mov
dec
roll
ja
lods
mov
lods
cli
in
push
adc
into
xrelease
pop
jp
cmc
dec
cltd
add
xorl
or
or
nop
mov
lods
pop
push
les
mov
and
imul
adc
fnstsw
addr16
and
push
fisttpl
mov
stc
or
scas
mov
mov
push
inc
adc
dec
add
sti
sub
pop
aad
out
sbb
mov
xchg
jl
jp
lds
cmp
mov
lods
inc
outsb
sbb
movsl
push
sar
dec
xchg
xor
ljmp
mov
arpl
mov
sar
hlt
adc
mov
xlat
mov
outsb
xor
stos
lds
sub
mov
xchg
sbb
mov
xor
shll
data16
ret
xchg
and
fchs
test
or
es
pop
pop
cmp
jb
movl
movups
out
add
jmp
call
jae
inc
lock
mov
bnd
pop
xor
push
je
pop
xor
push
enter
lods
pop
loop
dec
or
and
inc
xchg
in
jp
add
sahf
shlb
mov
mov
roll
and
pop
adc
push
or
out
jle
mov
jne
adc
in
mov
add
stc
mov
out
rcl
inc
cmp
jmp
pop
pop
cwtl
xchg
in
jecxz
dec
roll
ljmp
jl
popa
mov
data16
or
sub
xchg
bound
daa
fsubs
xchg
out
jp
mov
pop
jno
inc
sbb
push
jo
mov
cli
xchg
int
out
xchg
orb
ret
test
add
xchg
pushf
aas
loope
jo
cmp
testl
gs
lret
push
insl
hlt
ja
sbb
out
clc
push
xor
or
push
mov
imul
mov
outsb
jle
adc
lods
xchg
mov
mov
xor
sbb
inc
enter
xor
inc
stos
xchg
loope
dec
push
ret
les
les
jg
ljmp
shll
fmulp
or
sbb
dec
mov
and
add
push
jmp
repz
jecxz
out
imul
pop
fwait
mov
fxch
add
sbb
pusha
mov
fwait
loopne
insb
xlat
or
addb
mov
pop
les
jl
jl
or
pop
fcompl
jmp
pop
pop
jp
pop
mov
inc
movsl
fmuls
mov
das
clc
mov
subps
sahf
fsub
fnstsw
into
dec
and
outsl
clc
push
cmp
push
mov
js
adc
insb
sbbl
lret
roll
inc
sub
aad
in
mul
in
cmc
sbb
sub
jnp
or
fidivrl
divl
mov
stc
aam
insb
and
dec
push
in
push
fidivrl
cmp
leave
xchg
push
mov
sbb
sti
call
mov
cmp
popf
inc
data16
jo
add
ficoml
cmp
mov
hlt
mov
pop
mov
fadd
or
test
push
sbb
sbb
jg
push
mov
daa
repz
clc
push
push
ret
fs
pusha
fstl
mov
sbb
fwait
or
jnp
sbb
add
mov
out
clc
jg
movsl
or
in
add
and
jno
sbb
in
pop
pop
xor
loop
insl
dec
iret
iret
ds
fs
inc
jnp
or
mov
insl
xchg
lods
sbb
sbb
pop
cmc
popa
adc
mov
inc
or
sub
xchg
aam
lcall
loopne
pusha
or
sahf
mov
lcall
push
xchg
dec
push
packsswb
es
pop
psubusb
mov
inc
or
cmp
js
dec
mov
mov
aam
stos
fstl
data16
imul
fsubrs
shlb
adc
or
adc
jb
notl
mov
icebp
aam
or
xor
mov
add
daa
movsl
add
pop
sbb
in
ljmp
adcl
out
mov
push
sbb
test
mov
sub
mov
pop
stc
movlps
lahf
add
lea
daa
cwtl
xchg
jl
fnstenv
mov
inc
ret
jge
mov
jg
das
push
data16
test
fwait
lods
lret
fcmovnbe
icebp
and
push
fists
or
mov
xchg
sub
cmp
scas
mov
addr16
sbb
xchg
adc
dec
ret
pop
ret
shll
in
fidivrs
mov
jns
add
adc
cmpb
fcmove
xlat
xlat
push
in
stos
adc
call
cwtl
mov
mov
pop
rcll
mov
cmpsb
mov
or
fnstcw
pop
jle
jae
cmp
mov
inc
aam
decl
out
shl
mov
push
lahf
sbb
sub
inc
pop
sbb
jae
scas
cmpsb
dec
scas
insb
in
jecxz
jp
xchg
jnp
cmp
mov
mov
stos
xchg
xchg
mov
xor
jecxz
mov
add
ja
or
test
lock
sub
or
cmp
fs
adc
sbb
pop
sub
xor
cmp
bound
repz
cld
jns
out
shrl
cld
and
mov
and
jmp
mov
test
adc
xor
lret
mov
cli
mov
cmpsl
sbb
jnp,pn
lds
sbb
xchg
aam
dec
xor
jno
push
xchg
xor
jae
subl
or
mov
cmp
incb
test
sbb
je
fistps
sti
rcll
cmp
stc
sbb
xor
ret
es
pop
dec
jo
enter
mov
push
push
jl
mov
pop
imul
fisubs
mov
xor
loop
popa
icebp
jecxz
sbb
sbb
or
push
and
mov
xchg
jns
xor
addl
fs
aam
sub
loope
push
add
sub
xchg
dec
and
mov
jp
cld
mov
push
les
scas
push
pushf
sub
cmpb
inc
flds
inc
or
stc
out
jp
int
stc
fs
movsl
int
cmp
ret
or
xchg
hlt
test
push
or
mov
ss
outsb
push
lock
pop
hlt
rorl
push
inc
out
adc
or
push
xor
xchg
xor
adc
cmc
push
aas
jl
mov
jae
adc
xchg
pushf
decl
js
push
fwait
jns
fsubr
jno
lea
repz
ljmp
clc
push
mov
outsb
in
arpl
jb
scas
pop
pop
cmp
cmp
icebp
les
loopne
xchg
cmp
insl
mov
add
pop
sarl
pop
push
sahf
daa
sub
adc
mov
es
int3
shll
sahf
shlb
je
cmp
stos
pop
ss
or
push
aad
push
imul
stc
mov
ret
pop
pop
cmpsl
mov
and
rcl
jle
mov
je
push
data16
in
cmpl
jbe
xor
es
je
ljmp
xchg
mov
pop
daa
sahf
clc
stc
fstps
roll
sbb
mov
inc
fisubrs
and
jp,pt
adc
mov
jnp
rcpps
push
ss
sub
xchg
sbb
scas
xchg
add
push
and
sbb
mov
cwtl
fldcw
cmp
lock
mov
data16
notb
hlt
xchg
lods
sub
add
mov
mov
push
jo
jo
lods
push
push
roll
sub
and
scas
daa
dec
rdtsc
test
dec
push
test
in
pop
arpl
aaa
stos
cmp
std
push
rorb
mov
pop
jl
testl
mov
in
mov
nop
jae
sub
iret
push
xchg
loop
jbe
xchg
cld
push
xor
shlb
imul
ret
pop
testb
pop
add
inc
out
sbb
dec
out
cli
cli
js
sbb
int3
iret
pop
sub
or
inc
fidivrs
out
mov
lahf
jnp
gs
movsb
iret
xor
mov
or
cltd
jbe
mov
fwait
or
scas
fcmove
rcrb
shl
inc
mov
adc
jns
rcrb
cmpsl
pushf
cmp
ja
and
pop
pop
sub
xor
adc
pop
insb
sbb
add
jl
mov
sub
into
and
out
lds
addr16
adc
dec
sti
sub
xchg
outsl
fcmove
jg
add
aas
mov
pop
dec
mov
in
adc
jle
mov
pop
mov
sub
shl
dec
xlat
jns
lret
imul
or
cs
and
add
dec
call
hlt
mov
movsl
iret
lods
bound
xchg
inc
cltd
cli
pop
fmuls
es
ja
pop
scas
out
lock
sub
das
dec
jno
lea
mov
pop
js
xor
mov
or
testb
sub
sar
or
adcl
mov
push
clc
sub
and
popa
mov
adc
pop
test
xchg
ror
fcmovu
jmp
jb
cmp
shl
xchg
xlat
push
jp
lods
or
mov
xchg
push
inc
mov
out
push
inc
out
jle
test
dec
xor
push
jle
ds
test
orb
xchg
dec
push
mov
mov
mov
inc
cmpsb
xor
rolb
adc
rol
lcall
jl
push
aad
mov
adc
push
out
daa
negl
xchg
cmp
pop
out
pusha
and
sbb
jge
xchg
lea
cmp
sahf
daa
inc
and
inc
pushf
and
in
xchg
pusha
jecxz
stos
sub
inc
xchg
lea
xchg
push
pop
ret
or
cmp
daa
out
dec
mov
cmc
mov
xor
pop
pop
fistpll
loop
enter
mov
and
lret
dec
cmpsb
mov
xchg
lods
shll
js
outsl
sahf
inc
and
push
pushf
add
jns
cli
jl
mov
mov
inc
add
sub
push
lea
xchg
xorb
das
je
cs
lds
mov
push
pop
stos
movlhps
push
push
dec
ret
pushw
and
inc
lds
xchg
lods
shll
mov
call
std
pop
imul
popa
push
jb
pusha
lds
aaa
fisubl
hlt
mov
pop
and
dec
lock
and
fwait
sti
pushf
mov
int
push
call
pop
or
rclb
imul
ss
xchg
cmpsb
sbb
pop
aaa
adc
frstor
xchg
mov
test
xor
sub
cs
je
shl
test
sbb
sbb
daa
xchg
pop
pop
cltd
sub
push
aas
fs
dec
fidivrs
aad
adc
lcall
sbb
sub
clc
sub
stos
cltd
sbb
cwtl
pop
pop
xor
lods
jecxz
inc
cld
adc
popa
mov
call
cmc
dec
sub
xor
push
xlat
clc
sbb
icebp
dec
adc
dec
xor
dec
ret
int
add
mov
or
cld
mov
fs
pop
jns
in
cmp
push
or
or
filds
stc
xchg
pop
and
loope
leave
push
scas
or
pop
ja,pt
lods
aas
mov
xchg
popa
hlt
stc
add
sub
push
or
adcl
adc
mov
fnstenv
mov
cwtl
mov
cmp
dec
rorb
inc
inc
sbb
lods
mov
pop
and
jmp
btc
add
stos
sbb
lret
bound
filds
mov
or
cmp
mov
nop
negl
in
jns
bound
ss
jge
adcb
pop
xchg
das
clc
fwait
andl
call
dec
repnz
xchg
dec
stc
insb
mov
dec
gs
jnp
sub
adc
imul
mov
push
lods
and
mov
mov
leave
mov
pop
sbb
push
mov
sahf
inc
adc
mov
mov
inc
test
jbe
fstpt
sub
inc
mov
dec
jae
xchg
or
leave
je
cmp
inc
push
sub
cld
mov
inc
ss
movsb
in
test
imul
push
pop
std
jl
jge
int3
fs
dec
cmp
leave
pusha
outsb
pop
lds
shlb
mov
inc
push
xor
adc
test
sbb
outsl
loopne
orl
mov
add
or
rclb
mov
push
cmovle
lret
sbb
sbb
push
outsb
adc
divb
insl
jl
test
lock
cld
daa
in
cmp
movsl
mov
shrb
sub
inc
xor
scas
jmp
icebp
push
mov
or
push
outsb
adc
decl
outsb
lret
jnp
cmp
sti
lcall
adc
jns
lods
loopne
jecxz
xor
sbb
jne
and
mov
lea
pop
push
dec
lods
lcall
iret
mov
and
aaa
push
xchg
gs
mov
leave
mov
aaa
leave
rcrl
imul
loopne
fmul
sbb
dec
mov
jbe
cmpl
nop
push
aaa
rep
lods
jl
outsb
xchg
jns
xchg
push
pop
xor
mov
lock
jb
push
insb
jg
out
sbb
data16
add
scas
cmc
das
sahf
fs
mov
paddb
cmp
adc
pop
push
je
mov
outsl
test
sub
subl
mov
inc
xchg
jp
mov
in
push
ffreep
sbb
push
in
pop
in
lcall
push
int
fmull
pop
cld
fnsave
jge
push
xor
sub
test
fsts
cmpsl
pop
mov
or
js
and
rep
dec
repz
pop
and
cmp
or
mov
lods
mov
movsl
push
adc
pop
test
cmc
ss
pop
loopne
int
cmp
jge
jecxz
imul
fmulp
jmp
jge
pop
cltd
dec
out
adc
ljmp
add
rcrl
xchg
mov
ret
in
mov
or
mov
out
scas
cmpsl
push
test
push
and
sbbl
adc
inc
loop
mov
test
mov
test
jae
pop
andl
or
lahf
inc
pop
pop
lret
addr16
scas
xlat
sub
stos
paddusb
scas
mov
xor
cmpsl
push
sub
imul
scas
cld
xchg
or
call
sub
sub
adc
js
popl
sbb
loope
inc
cmc
push
jle
mov
push
sbb
in
cmpsl
push
fwait
pop
jo
ret
adc
sarl
push
sub
inc
sbb
mov
mov
sub
and
jle
sub
or
cmpsl
add
orl
push
jp
fcompl
in
sbb
jo
sbb
sub
aad
mov
sub
inc
adc
loop
inc
or
xchg
add
ret
add
scas
mov
les
callw
dec
aam
inc
jle
stos
in
xor
dec
push
jo
in
rep
ja
pop
cld
int
movsl
or
sti
lods
xchg
shrl
push
xchg
cmp
add
aaa
fwait
cmc
stos
stc
adc
or
cmp
and
mov
fistpll
or
add
xorb
ss
scas
push
xorb
adc
shrb
cmp
jl
mov
jg
movsb
fisubrl
mov
push
js
sub
testb
dec
jle
lahf
xchg
push
pop
dec
sbb
inc
xor
into
das
dec
xchg
aas
scas
pop
add
add
mov
or
fnstcw
adc
jp
arpl
mov
lret
shlb
clc
stc
mov
rcr
lahf
cmp
pop
clc
mov
xor
add
loope
int3
inc
mov
movsb
daa
notb
mov
popa
repz
pushf
mov
inc
dec
lds
fistl
mov
sub
je
pop
cltd
mov
dec
sahf
fsin
mov
iret
adc
inc
out
mov
xor
neg
mov
addr16
xor
mov
int
sbb
cmovno
in
aas
arpl
cmp
fucomi
and
mov
cmc
xchg
test
sbb
int
clc
lock
jb
fildll
mov
repnz
mov
mov
mov
mov
insl
dec
cmpsb
leave
dec
cmpsb
out
sbb
clc
fs
stos
inc
and
ret
movsb
cmc
incl
aam
mov
daa
xorb
enter
gs
ds
repz
cmp
sub
jnp
xor
jbe
cmp
xor
inc
pop
out
pushf
repnz
pop
pop
and
inc
sbb
push
mov
pop
and
push
pop
mov
inc
leave
mov
out
pop
test
mov
cli
mov
jne
mov
dec
test
sahf
test
cld
sbb
test
cli
and
shl
std
push
sub
mov
fs
enter
push
pushf
push
shrb
ss
js
test
or
inc
pop
or
scas
xchg
std
push
sub
je
fidivl
mov
pop
or
test
mov
fdivrl
das
push
adcb
popa
jns
cltd
cmpsl
xor
daa
sbb
addr16
test
push
jo
int
lret
pop
int3
push
cmp
sub
cmp
mov
mov
push
pop
pop
insb
xor
ficoms
ficoml
out
or
sub
outsl
int
xor
xor
or
incb
stc
insl
fdivrl
adc
dec
cmc
out
sub
sahf
mov
aas
or
data16
outsb
lret
ror
sub
imul
sub
insb
fnstcw
cmpl
sbb
scas
int3
dec
in
cltd
cli
int3
adc
jno
push
mov
xor
ds
push
loopne
or
cmpsb
idivl
dec
jg
out
adc
mov
adc
sub
dec
sub
cmp
cmpsl
jg
cmpsb
jmp
rcrb
mov
mov
imul
lret
fildll
mov
aas
add
or
es
adc
sub
nop
call
stos
inc
repz
bnd
xor
xlat
cmc
and
add
dec
pop
int
scas
jge
lcall
push
les
xchg
mov
mul
loopne
fldl
jecxz
rorl
pop
mov
mov
or
xlat
xchg
adc
push
mov
call
cmp
pop
inc
or
fdiv
push
mov
mov
jae
fstl
mov
adc
rcl
outsb
sarl
sub
mov
sub
dec
and
mov
int3
shrl
jge
push
repnz
es
cmp
xor
add
and
pop
cmp
xor
mov
jecxz
fs
mov
mov
sbb
hlt
arpl
jle
dec
xor
mov
dec
mov
mov
push
push
jecxz
lahf
fwait
mov
inc
je
and
enter
and
mov
xchg
das
lods
loop
lods
mov
les
add
push
sub
adc
movsl
push
xchg
js
adc
cmp
mov
fidivs
sub
mov
je
insl
sub
nop
and
shll
out
lahf
jne
test
sahf
pop
std
cmp
cwtl
imul
out
xor
cmp
mov
in
out
push
push
xor
inc
mov
aaa
pop
sarl
xor
mov
jge
loop
xor
inc
sub
inc
in
out
mov
mov
sbb
stc
mov
stc
les
jecxz
shll
sub
xchg
cli
fisttpl
sarb
jle
test
push
enter
mov
inc
xchg
push
push
data16
inc
stc
mov
xchg
or
mov
fsubs
push
push
sbb
dec
aas
push
push
or
inc
dec
push
imul
test
lock
gs
loope
xchg
jmp
sub
outsb
mov
adc
mov
mov
movsl
leave
jnp
js
scas
cmp
je
or
pop
sbbl
and
js
adc
aaa
addr16
jle
add
aas
js
aaa
loope
mov
test
or
xor
insl
xor
ja
imul
mov
aad
shlb
xchg
movsb
pop
or
mov
cmc
gs
sbb
push
shrb
xor
loopne
dec
sbb
mov
imul
xor
sub
rolb
xor
push
mov
jnp
fimuls
stc
cli
cwtl
inc
cli
fstpt
push
adc
scas
jno
or
loope
std
subl
mov
xor
jp
sub
aad
pushf
lods
xchg
andb
mov
add
ljmp
in
test
jne
push
mov
xchg
dec
add
sub
push
out
xchg
add
push
push
xor
xchg
into
sbb
jg
add
arpl
pop
sbb
cmp
jge
movlps
out
sbb
adc
aam
push
jo
sbb
pop
lret
mov
pop
fs
idivb
inc
rcrl
cmp
orl
sbb
into
mov
push
sbb
ds
sbb
loopne
out
cmp
clc
cltd
popa
cltd
or
pop
mov
icebp
jecxz
dec
lcall
dec
jno
cmpsb
addb
fwait
jecxz
xchg
or
pop
repz
loopne
sbb
rcll
pushf
loope
push
xor
ja
inc
imul
pushf
mov
and
add
pusha
mov
inc
hlt
clc
cmpb
imul
out
adc
adc
decb
push
xchg
adc
ret
je
mov
add
sbb
fsubl
adc
sub
bound
cvtdq2ps
repnz
add
jmp
pop
jl
and
into
lods
jmp
jne
sub
inc
add
mov
mov
sub
outsb
add
lahf
jmp
fistps
mov
stc
das
adc
xchg
lea
and
adc
push
daa
fnstenv
cmp
mov
sbb
cwtl
out
std
mov
adc
and
mov
repz
pop
repz
out
test
pop
ret
mov
mov
cmp
add
push
cmp
rcrl
jmp
push
pusha
jge
jecxz
stos
sbb
fs
mov
or
adc
xlat
popf
sub
repz
mov
ja
test
sti
test
and
icebp
push
negb
ficoms
mov
out
mov
notb
rcl
inc
jns
iret
xor
pop
or
mov
sar
xchg
adc
push
rol
fsubrl
mov
movsb
cmp
jecxz
pop
lock
cs
mov
jmp
dec
lahf
bound
cli
in
ficoms
insb
mov
mov
and
jl
std
mov
add
cltd
or
lret
hlt
cmc
imul
out
mov
cmp
out
test
sbb
xor
adcb
repnz
mov
add
lret
add
mov
out
mov
loopw
or
mov
jecxz
movsb
test
jl
pop
push
icebp
test
clc
jmp
imul
cmp
adc
sub
loop
mov
stos
insb
mov
lods
inc
leave
and
mov
lahf
rclb
dec
movsb
sub
cmp
jge
mov
jbe
mov
cmp
mov
mov
imul
cli
mov
int
jno
aam
xor
inc
pop
cmpsb
clc
sbb
scas
jbe
sub
mov
sub
xchg
cmc
sbb
subb
hlt
shlb
sub
mov
jns
rcl
out
mov
ja
ficomps
mov
lods
fldcw
xor
repz
or
and
cmp
xchg
pop
cmpsl
push
movsl
nop
cmpb
loop
in
loopne
cld
mov
xchg
lods
test
push
jmp
cmp
inc
dec
fadds
jno
lahf
xor
xchg
loopne
data16
les
jmp
insl
pop
enter
jg
call
xor
xorl
dec
nop
xor
mov
int3
stos
jbe
pop
jns
clc
add
jg
in
lcall
addl
fnsave
jae
ss
loope
leave
push
cmpsb
iret
and
mov
sahf
push
ret
adc
aad
incl
test
mov
loop
pop
imul
loope
repnz
adc
cltd
cltd
icebp
outsl
shr
cwtl
cltd
loopne
clc
mov
sub
xorb
dec
arpl
testb
adc
xchg
dec
mov
cs
xchg
pop
inc
push
es
sbb
movsb
push
into
inc
pushf
call
mov
sub
or
fildl
fmuls
loopne
and
adcl
arpl
xchg
in
inc
cmp
lods
arpl
xor
lods
sbb
dec
sbb
das
adc
out
xor
insl
xchg
cli
sbb
imul
or
and
xchg
jne
sbb
rolb
or
imul
stos
sub
sbb
test
cmpsb
lea
int3
in
imul
mov
inc
test
jecxz
xchg
or
dec
fisubrl
lds
in
mov
push
adc
push
sub
mov
mov
inc
rolb
test
je
shll
cmp
pushl
ja
lock
xlat
jo
fdivrl
mov
sbb
xor
out
ljmp
xchg
cli
in
popa
xorl
dec
enter
and
dec
fptan
fidivl
daa
ljmp
sbb
sub
fcomps
sbb
rcrb
out
sub
jbe
mov
incb
cld
xchg
push
sub
imull
push
sahf
pop
pop
imul
fdivp
std
sub
push
in
out
out
repnz
mov
mov
pop
outsb
test
lahf
and
push
fwait
aas
mov
je
arpl
arpl
add
daa
xor
out
test
insl
jnp
movsl
roll
imul
mov
adc
push
dec
mov
lret
lods
les
cmp
jno
mov
push
in
sub
popf
pushf
jb
push
je
cmp
mov
xchg
cmp
aas
sti
nop
shlb
ljmp
test
scas
mov
arpl
lcall
push
rorl
mov
jmp
test
pop
mov
hlt
test
enter
jp
dec
out
push
sbb
mov
rcl
out
nop
rdmsr
movsb
mov
jmp
adc
xchg
push
fsubrl
cmc
pop
xchg
sbb
cwtl
mov
and
pop
dec
or
push
xchg
add
idivb
nop
call
push
and
lret
xchg
xchg
mov
xchg
pushf
movsb
push
negl
add
xchg
fs
adc
push
sub
push
ret
mov
lea
sti
add
mov
or
push
add
or
dec
sbb
ret
dec
dec
push
mov
outsl
inc
xchg
cmp
push
sbb
out
xchg
xor
ret
in
nop
sub
enter
pop
fs
mov
clc
pop
aam
push
loope
outsl
shll
cmp
add
rorb
js
add
mov
sub
lret
loop
insb
mov
xor
pop
inc
shrl
stc
sub
fsubs
xor
aam
in
addr16
stos
out
pop
add
and
xor
daa
xchg
rcrb
lahf
add
inc
dec
inc
or
mov
jae
xchg
jge
divl
mov
bound
filds
dec
mov
and
fndisi(8087
adc
out
scas
mov
sbb
dec
lahf
push
mov
jno
popa
xorl
sub
mov
inc
sub
push
push
mov
mov
scas
lcall
mov
inc
jle
test
decl
sbb
jp
nop
sbb
push
sbb
pop
inc
or
shlb
push
jmp
jns
pop
add
sub
sub
repnz
push
mov
cltd
les
orb
add
xor
test
sbb
cmp
sub
xchg
push
dec
leave
cmp
dec
and
fists
movsl
mov
xchg
xchg
int3
fwait
lret
movb
or
lods
in
jno
fldl
xor
push
test
mov
in
lret
add
xor
xchg
idivb
lret
xchg
out
push
rolb
mov
js
pop
in
dec
mov
and
clc
add
add
push
out
insb
lret
mov
dec
xor
mov
test
dec
mov
out
std
mov
movsl
imul
jge
cli
xor
fidivrl
jg
xor
imul
jns
out
push
push
fisubrl
ljmp
ss
pushf
test
test
cmp
adc
iret
dec
push
sti
jle
sbb
pop
mov
sbb
cmc
orb
or
cmp
push
jbe
sahf
mov
jae
inc
je
icebp
outsl
mov
lahf
jno
orb
lahf
hlt
movsl
neg
mov
sahf
mov
adc
or
or
out
das
pop
and
adc
orl
nop
push
mov
dec
les
aaa
test
clc
push
je
adc
enter
leave
lret
mov
movsl
xchg
rclb
shll
andl
outsl
xchg
jg
jmp
mov
movsb
pop
mov
jmp
cmp
in
or
aaa
into
jl
sarb
shll
scas
jne
movsl
xor
pop
mov
adc
jne
ds
xor
jl
fcomps
adc
lcall
dec
fs
sbb
push
test
xchg
mov
popf
jns
sahf
andb
test
lock
xchg
fldcw
sbb
int
bound
inc
inc
sub
sarl
sbb
sar
out
sub
sbb
faddp
mov
in
daa
xchg
mov
ret
xchg
dec
in
movsl
in
sub
xchg
scas
dec
fs
pop
xchg
push
rcrb
push
xor
insl
mov
inc
push
push
jge
sahf
jae
jno
xor
test
or
mov
insb
mov
cmp
loop
and
and
in
or
sbb
jmp
ret
sub
lahf
into
hlt
inc
mov
test
jg
mov
jmp
inc
inc
sahf
pop
mov
xchg
adc
cwtl
cmp
rcrb
rcrb
dec
mov
or
pushf
nop
subb
test
arpl
inc
mov
js
div
or
mov
test
dec
aas
xchg
lret
push
insl
test
sub
pushf
ds
loop
pop
aaa
lret
mov
stc
scas
iret
or
xor
movsl
dec
and
adc
push
dec
add
xchg
leave
fistpl
and
outsb
popf
movsl
daa
or
pop
add
cmpsb
test
jecxz
inc
cmp
xor
iret
lcall
hlt
adc
sbb
jno
jne
pop
cwtl
out
cmp
pop
std
fldl
mov
cmpsl
nop
mov
mov
daa
fs
in
in
pop
pushf
or
std
in
cmp
inc
outsl
mov
dec
ret
ds
orb
aad
cmpb
jae
push
nop
jae
mov
scas
jge
ret
gs
add
sahf
paddw
imul
add
jbe
fistpl
fisttpll
inc
cmp
rorl
les
xchg
xor
push
sub
adc
test
cld
pop
ss
dec
leave
mov
fnstsw
cs
push
sub
mov
mov
aam
pop
and
mov
jae
jb
cmp
push
cwtl
jp
pop
jecxz
and
cltd
mov
ja
ljmp
mov
scas
in
pop
push
jge
xor
idivl
xchg
xor
and
adc
sbb
enter
inc
pop
mov
xchg
daa
enter
jmp
dec
sbb
xchg
add
jmp
inc
or
push
je
ljmp
shrl
mov
push
cs
push
push
and
in
in
out
leave
mov
xor
cltd
adc
dec
lret
popf
sahf
mov
test
inc
test
sbb
mov
mov
or
pop
sbbb
repz
inc
scas
addr16
dec
clc
adc
in
xchg
imul
xchg
mov
hlt
xor
pop
popf
out
loopne
inc
and
pop
mov
loop
pop
popa
mov
ret
adc
mov
pop
adc
xchg
inc
cwtl
or
adc
int3
mov
add
mov
mov
in
loopne
mov
sub
lahf
pop
lock
call
push
jecxz
and
lods
sub
imulb
sub
push
pop
fmuls
xlat
scas
and
std
ljmp
les
sub
pop
leave
sahf
jmp
sbb
stos
push
inc
cmpsb
jge
ds
cs
or
push
pusha
aad
or
pop
xchg
jge
fcomps
cs
xor
out
dec
cmp
or
lret
aas
xor
idivl
mov
xchg
repz
int3
addr16
cmp
sahf
ss
pop
cli
dec
sub
adc
or
es
dec
divb
cmp
int
xor
ret
xlat
int3
gs
rorb
cmp
test
cmpsb
mov
xor
fstps
push
xchg
lods
inc
cmpsb
dec
add
cmp
insl
and
ss
pop
hlt
pop
ja
mov
push
das
xor
xchg
cwtl
cmp
jl
int3
test
outsl
mull
in
xchg
mov
adc
mov
sub
mov
in
sahf
les
xchg
sub
inc
aad
inc
mov
inc
adc
sbb
mov
ffree
push
sub
dec
movsb
xchg
cwtl
test
punpckhdq
xor
mov
and
jg
loopne
aad
fisttpl
dec
aaa
fwait
jno
and
xchg
inc
add
mov
call
insb
outsb
xchg
jne
or
stos
hlt
dec
lcall
pop
xchg
cwtl
in
cwtl
lock
fwait
jp
jmp
push
add
mov
sbb
inc
test
shlb
pcmpeqw
je
jno
imul
dec
pop
push
mov
inc
leave
cmp
sub
cwtl
shl
adc
fisubs
rorb
xchg
pop
dec
lods
int
pushf
add
nop
pop
arpl
dec
sub
sbb
fs
jmp
mov
lcall
cltd
pop
testl
inc
test
test
adc
inc
dec
mov
mov
xchg
outsb
scas
cwtl
int3
sahf
adc
pop
inc
cmp
daa
mov
das
xchg
push
outsb
sub
inc
jl
push
das
push
mull
mov
stos
xor
jge
jo
daa
cmp
sub
mov
cltd
scas
mov
cmpl
sbb
mov
push
movsl
daa
mov
dec
lahf
push
lret
test
mov
clc
pop
adc
mov
mov
stos
test
iret
decl
orb
inc
mov
cmp
es
mov
ret
call
xorb
call
pop
aad
imul
dec
ja
mov
inc
cmp
push
addl
int3
pop
jnp
xor
jne
int3
pop
movsb
cmp
testl
jno
jmp
repz
xchg
add
push
xchg
fucomip
jecxz
or
cmp
adc
push
jmp
test
popf
cmp
das
lds
decl
sub
cli
push
inc
cmp
mov
fistpl
insl
fbstp
jo
push
jge
outsb
test
dec
jecxz
fsubrs
jno
dec
out
in
jecxz
in
test
mov
cmp
js
or
out
dec
mov
sub
sub
and
mov
sub
xchg
or
mov
dec
popf
sub
jg
rcrb
dec
cmp
dec
xor
and
add
mov
outsl
mov
xchg
sub
push
out
lcall
push
mov
mov
sbb
lcall
mov
mov
jns
enter
lods
insl
loope
nop
ja
daa
and
xor
out
rcr
mov
mov
cltd
xchg
jle
push
push
jl
lods
out
rcl
dec
adc
push
lds
daa
sub
fisubrl
leave
and
xor
aad
data16
enter
xor
sti
xor
xor
push
sub
dec
imul
add
cmpsl
adc
mov
sub
aas
xor
es
mov
movaps
or
movsb
mov
sub
int3
pop
sub
int
in
mov
jle
roll
aad
popf
pop
sbbb
in
insl
pop
inc
lahf
movsb
xchg
mov
sub
adc
inc
lcall
sbb
not
mov
pop
lahf
rcrb
sbb
popf
dec
push
icebp
out
iret
sbb
ret
inc
lock
jecxz
sub
fistpl
icebp
mov
jl
ret
sbb
add
les
jnp
fnsave
stos
mov
enter
outsb
repz
inc
cwtl
xchg
rorl
outsl
loopne
inc
adc
stos
scas
inc
icebp
ljmp
inc
lret
mov
add
adc
ja
mov
jae
push
inc
out
addr16
adc
jnp
ret
mov
int3
and
and
xor
sbb
cmp
pop
xchg
adc
jl
xchg
mov
hlt
ret
imul
stos
sub
mov
ret
or
and
lods
ds
and
mov
in
sbb
mov
add
jge
xor
in
inc
adc
cmp
into
jge
loope
fcmovnu
mov
cmpsl
jl
sbb
mov
repnz
fs
mov
mov
fdivrl
test
mov
cmp
and
cli
gs
pushf
and
cmpb
pop
add
mov
mov
shrd
aad
and
sub
stos
mov
lret
xchg
repz
adc
sti
hlt
or
cmp
test
addr16
scas
push
popa
sub
mov
or
or
std
lock
adc
roll
mov
add
fdiv
inc
dec
aaa
push
xchg
mov
sub
repnz
cmp
andb
mov
std
ja
notl
out
test
mov
cmp
sub
repz
lds
les
jmp
ss
rorl
xlat
jae
mov
push
pop
fildll
rolb
or
push
cmp
insl
jg
push
repz
adc
inc
dec
notl
outsl
jb
leave
jg
sbb
repnz
out
jns
outsl
push
inc
je
lret
stc
in
shl
push
mov
push
jg
push
scas
cmp
fiaddl
int
in
sbb
xor
mov
mov
mov
mov
repz
push
jno
es
sub
jne
mov
shlb
sub
sub
mov
jae
add
popf
mov
push
imul
inc
push
sbb
or
fimull
xchg
addr16
mov
into
add
int
push
sti
xor
sbb
xchg
push
jl
cs
inc
lcall
mov
inc
xchg
or
add
mov
sub
mov
jo
addr16
pop
dec
add
mov
les
lods
sbb
out
fs
mov
sub
out
pop
fwait
mov
inc
add
mov
sub
imul
fucomi
icebp
fbstp
movsl
cmpsb
shrl
jne
xchg
test
add
aam
loope
dec
movsb
jbe
outsl
mov
dec
and
adc
stos
in
loop
sub
and
out
inc
nop
dec
jge
testl
fnstenv
or
lock
xor
sub
add
ljmp
mov
fisttpll
jae
push
dec
cld
int
testb
cli
and
popf
lcall
pop
es
hlt
xor
jmp
aam
jns
lods
test
pop
sub
pushf
mov
dec
xchg
stc
xchg
push
in
mov
or
pop
pop
pop
sbb
in
repz
pop
jnp
mov
or
mov
pop
aad
lcall
jb
ljmp
jp
add
pushf
add
push
adc
aam
mov
in
outsl
push
push
push
rclb
daa
lea
inc
jmp
lret
sbb
pushf
dec
lock
mov
xchg
imul
lock
and
inc
dec
fldenv
jnp
xlat
sub
mov
mov
xchg
lods
loopne
rcrl
cmpsb
pop
insb
dec
outsl
add
or
out
lods
stos
into
jp
sbb
addr16
add
adcb
push
jg
loop
jmp
cmpsl
ljmp
enter
mov
les
xchg
lea
mov
cmc
stos
dec
and
sahf
push
data16
mov
cmp
gs
cwtl
lret
in
ja
lock
rcr
repz
and
stc
or
xchg
incl
sub
lods
divb
insb
imul
mov
mov
iret
and
add
lock
inc
pop
push
testb
addr16
lea
dec
or
jno
cmpb
pop
pavgb
into
shrb
adc
pop
int
add
loope
ret
sbb
imul
mov
aas
cmpsb
mov
ret
pop
jae
shrl
inc
or
andl
std
xor
insl
push
add
mov
pop
js
lods
pop
mul
mov
lahf
xlat
add
popl
jge
orl
or
pop
xorl
fisubs
in
add
sbb
xchg
xlat
into
mov
orl
push
mov
push
andb
imul
jl
adc
sahf
dec
xor
add
xor
cmp
push
cmp
xchg
pop
in
xor
push
adc
movsb
sub
push
cltd
mov
mov
adc
pop
mov
movsb
test
cmpsl
outsl
sbb
jmp
daa
mov
lret
mov
dec
and
test
jb
cmp
popl
aad
nop
or
inc
jge
test
fidivl
inc
jecxz
xor
push
aam
push
add
out
add
and
sub
cmp
je
jnp
jno
addr16
aam
fdivrl
mov
xlat
xchg
xor
mov
lods
leave
mov
call
add
pop
int
push
xchg
inc
ficompl
or
fdivr
test
test
dec
and
xlat
mov
rolw
ret
cmc
arpl
fcomp
fisubl
mov
jge
pop
jo
push
jae
jecxz
test
jno
xchg
repnz
sub
js
in
jmp
adc
xchg
sub
ljmp
clc
rcrb
and
into
dec
movups
sbb
inc
mov
outsb
pop
jae
stos
add
inc
sbbl
in
push
mov
enter
mov
leave
pop
pop
mov
shlb
shrb
pop
pop
push
push
pushf
jg
stc
test
or
pop
adc
adc
xor
ds
dec
inc
xchg
xor
das
test
clc
scas
sbb
out
push
and
cmc
sarb
cmpl
aas
cmp
mov
dec
sub
shll
addr16
sti
jl
js
push
adc
daa
movsb
inc
aaa
fmull
lods
call
or
imul
aas
xchg
popf
sub
adc
cmp
dec
testb
es
dec
inc
mov
or
popa
cmpb
cmp
add
pop
imulb
movsb
push
out
xchg
jecxz
cmp
ss
movsb
dec
insl
out
add
push
cmp
or
cld
inc
dec
fldenv
sbb
jg
dec
aad
gs
lea
dec
sbb
dec
mov
call
scas
jb
xchg
mov
xchg
aam
loopnew
insb
push
shl
xchg
and
push
and
mov
xchg
test
addb
push
repz
push
rorb
dec
das
daa
pop
dec
dec
add
mov
push
push
hlt
fistl
lea
loope
insb
js
push
sub
sbbb
mov
cmpsb
mov
mov
nop
lock
inc
jne
jne
loope
mov
scas
aad
aas
adc
push
jnp
in
mov
add
scas
lret
sbb
xchg
pusha
and
or
fwait
call
pop
pop
imul
and
out
xor
xchg
outsl
pop
adc
pop
aas
xor
repz
lds
scas
fwait
sti
aad
jecxz
imulb
ja
es
pop
test
mov
mov
imul
sbb
cli
in
daa
xorb
mov
and
ret
movsl
sbb
ljmp
push
xchg
inc
lret
mov
and
mov
jae
out
inc
jne
and
das
or
arpl
subb
jns
cwtl
push
lcall
enter
es
loop
iret
call
pop
aaa
bound
fcmovnb
pop
loope
fcoms
mov
nop
ja
repz
dec
pusha
adc
subl
fs
dec
daa
pop
sahf
sub
hlt
mov
mov
mov
adc
pop
cmp
dec
ret
mov
popa
inc
fcmovne
cmp
ffreep
mov
in
or
pop
or
out
push
jo
cmpb
xchg
test
xor
mov
out
or
or
movl
pop
dec
dec
lret
icebp
call
push
pop
mov
mov
and
roll
push
andb
rcrl
mov
sti
cld
or
push
fistps
outsb
test
push
lahf
jl
mov
push
xchg
arpl
inc
mov
sarb
inc
insl
inc
mov
fcoms
idivl
shl
lahf
mov
loopne
std
iret
out
pop
pop
repz
mulb
and
sahf
scas
cmp
lods
jb
mov
inc
icebp
fwait
jne
std
add
cli
xor
out
aas
jbe
mov
mov
pop
pop
pop
rcrb
cmp
jne
jmp
inc
dec
stos
repnz
stos
pop
imul
pop
out
shr
push
adc
std
pop
pop
lret
dec
out
mov
enter
pop
cld
adc
cli
and
in
push
pop
and
std
and
mov
out
fs
arpl
fcomps
push
cwtl
popl
lahf
mov
adc
jae
mov
cmc
ret
enter
lret
out
lods
sub
mov
clc
stos
or
test
pop
pop
inc
sahf
adc
mov
lods
insb
mov
xchg
push
daa
mov
cmp
mov
push
mov
clc
jno
iret
test
outsb
inc
daa
fwait
sbb
cmp
pop
das
xor
jnp
jns
and
mov
in
cmp
mov
hlt
and
cmpl
imul
fidivl
jo
xor
pop
mov
mulb
out
mov
pop
mov
jp
mov
push
or
dec
cmpsl
add
out
stos
push
mov
sub
adc
ret
test
imul
inc
mov
mov
sbb
cwtl
test
loope
ja
call
mov
pushl
jge
mul
fildll
ret
cmp
adc
test
lret
pop
jecxz
in
addr16
stc
push
daa
cmp
int
cltd
scas
lret
pop
cmpsb
inc
pusha
out
cmp
out
ja
mov
jno
clc
ss
mov
loope
jno
push
mov
test
test
fidivrs
xor
lahf
and
ficoml
test
sbbb
call
cmp
insb
and
push
aam
sub
sbb
jecxz
es
lcall
mov
stc
mov
repnz
lock
add
out
add
cltd
aas
xchg
in
daa
jmp
cmp
mov
xor
hlt
sub
add
push
movsb
or
jp
insb
in
insb
in
pop
mov
dec
push
xlat
ret
xor
add
jno
out
jbe
loopne
dec
pop
nop
fimuls
xor
stos
lods
mov
xchg
pop
out
lea
mov
in
push
fisubrs
jmp
add
lret
sbb
sbb
xor
test
cmp
cmc
or
dec
sub
out
andb
fbstp
add
pop
jno
sbb
jae
cltd
sub
nop
or
in
pusha
mov
ss
shl
mov
gs
sbb
pushf
sbb
push
jecxz
aam
into
loope
rorl
movsb
rcl
iret
movsl
xor
adc
cwtl
cmpsb
inc
jmp
cmc
mov
lds
adc
fildl
push
sbbb
test
testb
std
int3
adc
mov
cmp
jns
es
mov
data16
sti
test
cmp
add
xchg
sbb
or
in
loop
cmp
mov
adc
push
arpl
rorl
mov
call
out
in
cmpsb
cmp
cmp
adc
shl
push
or
mov
inc
mov
mov
aam
push
test
dec
iret
push
jbe
sub
stc
lock
aas
fdivl
xlat
cmp
mov
shrb
adc
sbb
jmp
rorl
or
sbb
cld
iret
loope
outsb
adc
cs
out
jae
iret
xchg
in
enter
ret
dec
mov
dec
push
xchg
inc
sub
subl
push
jl
lret
xchg
cli
inc
xor
inc
push
lret
lahf
jmp
loope
adc
loop
sub
hlt
add
push
aas
stc
or
bound
cmpsl
pop
mov
mov
stos
mov
push
repnz
shlb
adc
int3
sar
popf
imul
lods
jle
xor
mov
loop
out
cmp
push
sti
push
and
fnsave
incl
lds
push
in
push
lea
js
gs
pop
jbe
pop
push
pushl
rcr
nop
push
or
fdivrl
nop
sbb
mov
in
inc
mov
sbb
pop
xor
pop
push
push
jo
sbb
add
out
push
cs
stos
cs
inc
cwtl
adc
and
out
jg
data16
push
lahf
add
adcb
nop
scas
fsubrs
fsubrl
adc
xor
ficompl
ret
jle
dec
pop
in
inc
sbb
xor
push
nop
movsb
sub
loop
mov
dec
mov
xchg
in
arpl
sub
xor
or
imul
imulb
push
xlat
push
dec
push
idivl
inc
mov
stos
int3
mov
lods
inc
xor
repz
les
sub
mov
adc
mov
push
or
mov
pusha
les
in
mov
add
shll
nop
xor
in
leave
or
push
into
cli
loope
jb
push
leave
je
push
xor
std
out
insl
lcall
adc
in
outsb
pop
or
mov
and
xchg
push
insl
jns
lcall
lds
mov
mov
pop
inc
xchg
jmp
insl
mov
fisubrs
mov
cli
stc
ja
dec
clc
cmp
inc
cmpsb
sti
stos
mov
cltd
xor
addl
or
mov
std
fildll
mov
pop
cmp
cmpsb
loop
inc
aas
ds
adc
inc
xchg
cwtl
imul
mov
loope
sub
jo
call
sbb
add
push
add
xchg
dec
mov
out
or
out
jecxz
xchg
es
sub
lods
out
mov
or
mov
xor
loop
mov
push
pop
lods
out
lds
inc
lret
ja
adc
adc
bound
call
pop
mov
sub
inc
xor
scas
jo
mov
pusha
lcall
add
fistps
jo
sbb
lock
mov
int3
or
into
or
mov
sub
add
cmp
out
cmpsb
pop
out
add
adc
ja
in
sub
or
xchg
les
lea
and
sub
shl
in
stos
pop
add
inc
enter
mov
mov
stos
repnz
add
or
and
shrl
lcall
jecxz
jb
mov
call
fdivs
test
gs
mov
dec
call
xlat
pop
and
les
ret
popf
rol
add
loopne
and
out
mov
push
pop
mov
cld
fbstp
cs
mov
mov
inc
xchg
xchg
xchg
es
cmpsl
cmp
cmp
test
xchg
out
adc
rep
jle
test
xor
fildl
lea
jp
or
sub
les
dec
mov
adc
outsl
sub
testb
divb
das
out
cmp
int
arpl
lahf
outsl
inc
add
xor
outsl
call
shll
push
add
lret
fstpl
je
inc
pop
leave
pop
or
add
add
dec
push
mov
test
mov
dec
jbe
cltd
push
dec
dec
sub
or
fwait
pop
in
je
pop
dec
bound
lock
push
cmp
daa
popa
add
les
test
clc
add
or
insl
pop
fisubrl
cmp
icebp
add
add
push
fcoms
mov
xor
ret
repnz
jecxz
pop
sahf
cwtl
je
sub
mov
cmc
mov
inc
lods
jbe
fcompl
mov
mull
jle
roll
mov
sub
inc
push
cmpsl
iret
lea
mov
mov
insl
test
mov
or
mov
dec
mov
dec
out
aam
cli
mov
sti
fadds
pop
or
jg
pop
popa
out
mov
test
sub
adc
and
arpl
push
outsl
dec
sub
adc
mov
adc
xor
je
imul
pop
or
cmc
xlat
ss
sub
xacquire
scas
hlt
aas
inc
daa
bound
mov
sub
and
push
pop
and
fsubr
cmp
stos
mov
jge
in
xor
xor
jecxz
mov
mov
fs
mov
jmp
xchg
mov
test
cld
inc
int
sub
and
cwtl
pusha
fdivl
sbb
sub
ffreep
mov
cli
scas
xchg
scas
lea
sbb
lods
daa
cs
lock
dec
adc
inc
cmc
cmc
sbb
outsl
jle
test
jge
sub
sbb
fmul
push
jle
cmpsl
push
mov
xor
jb
popa
in
ficompl
aaa
push
das
cli
pusha
shll
sub
push
xor
and
movsb
add
into
inc
xchg
int3
push
insl
fidivs
lods
outsb
pop
cmc
adc
and
jns
push
idivl
add
cmp
sub
mov
divb
push
xchg
add
lcall
mov
push
bswap
inc
jge
sub
xchg
es
aaa
sbb
xchg
sub
std
test
add
sbb
dec
adc
clc
jge
outsl
lahf
jg
xor
mov
xor
jnp
aad
outsl
pusha
adc
shrl
fs
fidivrs
and
int3
mov
std
mov
std
mov
mov
push
jmp
mov
push
insb
add
fsubr
iret
xor
dec
nop
jmp
rorl
fsubr
das
dec
iret
jle
flds
adc
mov
mov
jmp
pop
cld
shl
cs
cmp
test
dec
cs
loop
test
cmpsl
fists
lahf
fisubl
inc
jecxz
adc
or
xchg
in
rcl
cmp
mov
sub
das
stos
ds
mov
out
xor
push
fidivrl
add
rorl
sbb
jl
rcll
lods
xorl
push
push
sub
or
cli
and
add
jb
mov
sub
pop
dec
test
cmp
xorl
pusha
clc
mov
pusha
jnp
and
inc
push
mov
pop
das
mov
xchg
ss
jbe
jae
shrl
add
push
mov
pop
inc
pusha
sub
fmul
inc
nop
enter
mov
and
movsl
test
sub
adc
dec
popa
pushf
xchg
mov
mov
xlat
inc
cmc
add
insb
arpl
das
in
out
or
in
or
pop
sarb
test
push
mov
rorb
xchg
adc
jo
xchg
mov
loop
cltd
pop
mov
mov
push
nop
hlt
fistl
out
push
lds
inc
pop
out
and
push
adc
int3
mov
rorl
cmc
das
icebp
imul
xor
push
adc
push
shlb
sbb
fbstp
por
out
jbe
daa
adc
mov
scas
fstps
jmp
js
insl
xor
and
or
mov
xchg
popa
adc
mov
roll
pop
xchg
loopne
push
mov
fidivrl
pop
je
and
arpl
jb
mov
in
test
ds
xchg
clc
mov
push
xchg
mov
adc
xor
call
lods
push
mov
push
sahf
pop
test
mov
repz
xor
inc
sbb
or
xor
push
mov
mov
imul
loop
adc
popa
lods
jg
and
in
or
sbb
mov
shl
sub
sub
ja
out
pop
jb
inc
cmpsb
jle
je
lahf
popa
movsb
mov
adc
inc
stos
push
lea
push
sahf
dec
aas
cmc
ss
fsin
and
or
adc
cmp
in
jnp
lahf
push
adc
dec
inc
push
mov
fwait
jg
pusha
aad
pop
mov
adc
lcall
mov
mov
push
std
jae
gs
mov
mov
outsl
pop
addr16
std
cmp
mov
sbb
pop
pop
outsb
xor
imul
xchg
test
mov
bound
call
clc
jecxz
push
dec
lret
repnz
aaa
lret
mov
xor
jb
in
cmc
dec
dec
jle
mov
adc
xlat
mov
repz
das
jp
sbbb
ja
stc
push
jg
insl
sub
test
inc
pushf
mov
push
ret
aam
xlat
daa
lret
push
test
xchg
sub
jle
xchg
ret
icebp
lahf
xchg
mov
cmp
mov
or
lcall
jg
int
pushf
xchg
and
icebp
movsl
stos
jle
nop
lcall
repnz
or
sarl
cmp
mov
test
mov
mov
push
or
jg
lods
rcrb
xchg
shr
aas
repz
xor
iret
hlt
lds
leave
adc
inc
lds
push
xorb
imul
jge
and
sahf
lods
sar
jno
sbb
pusha
incl
mov
outsb
or
iret
xor
mov
stos
sub
inc
out
adc
adc
movsb
inc
fwait
adc
sti
inc
pop
movsb
mov
jmp
outsb
test
pop
inc
add
dec
imul
in
sbb
pop
shl
jecxz
popa
push
out
pop
cltd
sahf
cli
mov
cmc
mov
push
sub
sbb
cs
mov
add
sub
iret
enter
insb
push
mov
push
adc
cmp
aad
xor
sub
das
sub
jle
outsb
test
jge
stos
sub
sub
or
push
andb
inc
xor
ja
cli
mov
cmp
push
int3
in
cmp
imul
jl
test
gs
js
and
or
lock
cld
mov
out
pop
jecxz
add
test
lods
fdiv
sub
inc
fs
sbb
iret
mov
push
pushf
mov
pop
pop
xor
mov
sub
inc
cmp
mov
dec
fnstsw
pop
fwait
cmc
sub
and
rcl
and
jo
sahf
or
scas
add
mov
mov
ja
lahf
push
cmc
push
add
push
nop
dec
add
xchg
mov
jbe
jle
dec
xchg
sbb
pandn
repz
shlb
pop
stos
and
or
inc
jl
push
cmp
cmp
mov
mov
pop
sbb
repz
clc
xor
das
inc
pop
xor
je
pop
arpl
sarb
ret
cld
js
nop
and
adc
mov
pop
js
xchg
aad
fs
sarb
jne
push
cld
stos
push
cmp
in
jle
inc
add
xchg
mov
out
mov
push
mov
add
sub
pop
lods
stc
in
xor
insb
imul
inc
lock
test
inc
add
out
cld
aam
loope
and
xor
cltd
mov
imul
rcrb
imul
xor
add
add
aas
test
adcb
mov
or
jmp
jecxz
lods
jmp
adc
jno
loope
cmp
push
mov
dec
outsb
mulb
jns
add
sbb
fwait
popa
cli
sahf
testl
es
xchg
push
or
bound
gs
sarl
cmp
insl
popw
mov
dec
cmp
mov
mov
jo
bound
aad
jecxz
sarb
lret
push
mov
mov
scas
fsubrl
imul
seta
fdivrl
or
je
or
test
fisttpll
ret
int3
sub
aas
je
jb
subl
stos
mov
push
lds
in
mov
jp
jecxz
into
jle
mov
ret
out
inc
mov
mov
adc
jae
xor
or
bound
sbb
xlat
addl
outsb
in
xor
pop
mov
pop
lcall
mov
daa
bound
xlat
fwait
imul
mov
mov
out
lcall
repnz
out
icebp
sbb
imul
dec
pop
or
insb
push
pop
mov
xlat
daa
mov
push
and
and
inc
mov
repnz
shll
aam
push
sbb
lahf
movsl
lcall
fstpt
out
fsubr
outsb
mov
mov
daa
and
cltd
jo
fstpt
sub
arpl
mov
shrl
call
test
pop
mov
insl
pop
xor
xchg
mov
aad
dec
cmc
leave
daa
pop
outsb
push
dec
lret
jb
lret
mov
adc
cmpsb
out
xchg
jle
std
jecxz
jge
lcall
sub
cmp
je
loopne
jns
push
in
jns
pop
push
lea
es
fiadds
mov
insb
mov
xchg
or
push
mov
inc
pushf
jo
fidivs
sbb
push
das
cmpsb
cli
jge
in
pop
sbb
dec
das
push
adc
mov
repz
pop
leave
sub
ja
mov
dec
lret
xchg
sbb
xor
pop
loop
add
and
and
adc
ror
pop
ss
mov
ficoml
pop
arpl
cmp
sbb
sbb
clc
push
popa
je
or
mov
mov
dec
add
xchg
in
movsb
aad
enter
xlat
je
jmp
popf
shrl
idivb
xchg
sub
lods
popa
pushf
imul
xchg
adc
aaa
lret
push
add
stos
dec
xor
aad
test
jl
mov
test
mov
pop
sub
fsubs
ss
fcoml
ljmp
and
ja
adc
shl
pop
adc
scas
push
andl
loope
xor
cmp
xor
movsl
stc
mov
pop
add
outsl
xor
sbb
xchg
pop
add
mov
jns
loop
cmpsl
dec
std
adc
xchg
xor
pop
dec
test
dec
or
or
lahf
sbb
pop
imul
in
cmp
or
mov
das
out
rclb
gs
loopne
and
and
imul
pop
clc
sub
fiaddl
iret
cwtl
iret
ret
mov
dec
or
lea
fldl
jmp
out
or
sub
dec
xor
les
sti
mov
jecxz
inc
cld
outsl
pop
pop
cwtl
xor
jb
xchg
and
pop
jno
mov
cltd
sub
pushf
rcrb
pop
nop
mov
sbb
sub
and
xchg
mov
jbe
bound
mov
dec
xchg
xchg
loopne
cmp
lock
jl
push
dec
adc
dec
adc
ret
adc
ljmp
clc
loopne
rcrb
ds
and
adc
sbb
call
xor
mov
jmp
adc
in
pop
pop
data16
dec
repnz
xor
mov
out
lock
mov
jp
lahf
xor
mov
loopne
aad
mov
pusha
sbb
fdivr
shr
fnstenv
stos
movsl
dec
xor
dec
mov
ljmp
out
sub
sub
dec
mov
or
jo
call
mov
loop
dec
xor
push
dec
jns
lock
movb
mov
or
stos
aaa
shlb
push
xchg
dec
pop
mov
popf
dec
adc
dec
ficomps
inc
bound
out
pop
xor
das
pop
movl
jmp
out
divb
mov
aad
push
lcall
cs
adc
popa
hlt
push
cmpsl
sub
mov
int
shlb
imul
add
cmp
and
mov
jmp
sub
lea
ret
in
sti
in
jmp
adc
fwait
lcall
jp
mov
cmc
loopne
sub
xchg
cli
mov
push
xchg
lods
xchg
mov
jmp
sbb
shll
ret
lahf
lea
out
sbb
dec
cld
shrb
mov
dec
mov
xchg
loope
shrl
arpl
add
lret
dec
shrb
xchg
dec
fldt
xor
ret
pop
mov
xlat
rcrb
pop
pop
daa
jno
loop
mov
sub
insl
jle
and
scas
jno
sbb
mov
dec
mov
out
inc
pop
ret
push
jecxz
lods
das
add
cmc
andb
add
or
push
hlt
sti
cmp
xlat
push
add
fwait
add
cmpsb
stos
jge
pop
shrl
mov
loope
or
data16
or
and
adc
in
fldt
mov
lods
jo
out
imul
fisubrs
jns
ja
or
leave
push
xlat
test
cmp
xor
aam
and
mov
mov
lret
sub
pop
or
int3
jp
je
cmp
fldt
pop
add
out
es
mov
iret
jo
jmp
xchg
xchg
or
daa
or
mov
pusha
dec
mov
jne
mov
orl
out
aam
xor
pushl
xchg
push
jl
xchg
es
stc
push
out
ret
xchg
sub
or
lds
arpl
cmpl
lock
pop
sub
push
addb
mul
inc
ds
lcall
rolb
xor
mov
data16
mov
dec
mov
or
sub
jmp
sub
or
dec
inc
or
mov
hlt
push
das
iret
cmc
js
adc
psadbw
pop
xchg
mov
mov
sub
xchg
stc
lds
fisubl
sbb
jb
mov
inc
inc
sub
scas
jbe
insl
add
imul
es
pusha
data16
lea
ljmp
dec
stos
les
push
sahf
nop
aas
shll
ljmp
ret
sbb
shlb
cmc
and
adc
pop
pop
push
mov
fnstcw
fdivr
xchg
cs
jnp
fwait
pop
rcr
mov
cmp
pop
dec
or
pop
xchg
mov
push
stos
push
in
loopne
xchg
in
jmp
jl
mov
pop
or
push
inc
test
pop
pop
ret
or
xor
mov
mov
arpl
push
enter
mov
cmp
das
std
das
sbb
movsb
addr16
mov
movsb
pushf
lret
lret
stc
xchg
cmp
xlat
mov
mov
cmpsb
cmpsb
in
jno
xchg
cltd
fbstp
mov
or
mov
je
outsl
inc
xor
cli
cmovns
movsb
test
lret
iret
xchg
dec
dec
mov
cli
sbb
sbb
mov
divb
fsubs
aaa
pop
push
lret
adc
xchg
cmp
out
inc
dec
sub
xlat
xor
xchg
inc
sub
sub
dec
xor
add
ret
add
sbb
push
movsb
cmp
or
loopne
jg,pn
xor
xchg
das
imul
inc
stos
xchg
out
sub
cmp
sti
sub
jne
sahf
mov
iret
cmpsl
fcmovb
enter
hlt
pop
in
xor
popa
jnp
push
cmpsb
dec
push
or
mov
dec
xchg
stos
lret
lcall
xchg
cmp
and
dec
push
sub
rcl
sub
cmc
and
mov
test
andl
outsb
into
js
stos
ror
ffree
test
mov
insb
pushf
icebp
jmp
or
subb
arpl
int3
aad
jbe
in
xor
fprem
jg
pop
arpl
sbb
mov
pop
popf
pop
xchg
cmpsb
roll
and
and
sahf
test
jb
lds
fs
xchg
testb
jmp
pop
icebp
xlat
in
pop
repz
cmpsl
xchg
out
cmp
or
scas
movsl
fs
cwtl
loopne
dec
xchg
push
imul
push
xor
lea
addr16
lods
repnz
jne
lret
or
and
mov
xchg
dec
repz
jecxz
mov
icebp
lret
xchg
stos
cwtl
push
xchg
sub
xchg
mov
mov
fstpl
sbb
jecxz
adc
dec
mov
repz
jl
sub
sti
fwait
cmp
dec
gs
sbb
push
mov
sub
dec
pushf
lods
lods
sub
fistpl
les
cmp
add
aam
mov
sub
and
gs
addr16
aas
std
xor
add
pusha
loopne
sbb
sti
fwait
pop
cmc
xor
mov
idiv
imul
add
mov
idivl
stos
fisubrs
adc
js
and
push
mov
push
pop
ss
movsl
or
out
aam
push
mov
jns
and
dec
push
popa
scas
push
mov
xor
xchg
push
push
jo
movsb
inc
inc
incl
fsubrl
or
jle
out
into
push
sbb
xor
sub
add
mov
mov
pop
inc
jb
stc
es
xchg
and
aad
fnstsw
and
mov
ja
dec
enter
jecxz
xor
nop
movsl
js
nop
or
aad
je
imul
dec
mov
jo
dec
and
int
out
xor
rol
push
inc
pop
ss
in
jmp
jns
ffreep
pop
push
push
dec
ljmp
pop
insl
lock
add
fwait
in
sub
xor
fcom
xor
insb
rcll
imul
push
mov
es
or
sub
adc
sbb
ret
xchg
enter
in
or
out
cmp
mov
pop
adc
push
push
xchg
aas
dec
xchg
mov
dec
adc
or
jno
fcmovb
nop
mov
and
push
outsl
divb
mov
mov
in
shlb
dec
sysenter
inc
and
popa
xor
aam
sahf
lea
movsl
mov
ret
adc
xchg
cmc
or
mov
pusha
frstor
sbb
xchg
daa
into
fwait
shrl
shlb
xor
inc
sbb
add
mov
xchg
or
inc
ret
pop
xor
ficoml
dec
lahf
xchg
lea
mov
into
jnp
aad
int
mov
push
clc
movsb
sbb
mov
iret
sbb
mov
jne
and
outsl
jne
xchg
cmp
push
inc
mov
or
outsb
test
xor
inc
push
jge
cld
es
out
clc
jg
add
xchg
stos
xchg
sub
jmp
sub
push
xchg
cmp
sbb
fstpl
jge
sbb
ja
jb
negl
repnz
jo
push
int3
jecxz
je
int3
lcall
ret
push
sub
pop
outsb
push
cltd
scas
sbb
push
xor
sbb
push
pop
xor
ret
insl
inc
pop
mov
push
xlat
mov
les
sub
adc
mov
and
mov
sahf
sahf
in
aas
push
jecxz
dec
je
ss
into
dec
push
ret
scas
cmc
jle
negl
test
push
out
sti
in
jle
pop
aaa
pop
test
sahf
adc
xchg
sub
rcr
imull
inc
add
movsb
ss
xorb
mov
imul
fmull
into
in
mov
outsl
add
mov
movl
push
les
mov
jne
pop
and
or
mov
sub
jmp
test
jne
stos
xor
mov
or
mov
push
sub
add
pop
pop
push
fs
mov
pop
stos
jae
icebp
cmp
dec
sbb
sti
pop
push
mov
xlat
pushf
sbb
cmp
pop
data16
add
icebp
cmpsl
into
cwtl
or
jmp
clc
mov
test
mov
pop
pop
mov
xchg
mov
push
sub
test
pusha
fdivrp
mov
xlat
sahf
push
mov
mov
pushf
xor
push
inc
es
out
lret
int3
xchg
inc
mov
cmc
push
daa
gs
push
js
jmp
push
mov
pop
cmp
es
mov
and
adc
xchg
jae
and
pop
movsb
or
in
mov
pop
adcl
sahf
pusha
iret
or
dec
cli
inc
or
incb
movsb
out
int3
daa
fidivrl
mov
dec
test
psubusb
jno
in
cmp
cmpsl
movl
movb
int
loope
scas
push
mov
jecxz
sbb
adc
mov
subb
adc
lods
inc
inc
std
in
in
es
mov
dec
adc
dec
popf
or
mov
in
je
sbb
adc
mov
cltd
mov
in
push
dec
add
inc
push
orb
aam
pop
fildll
cmp
je
loope
arpl
push
jne
mov
rcrb
int3
or
xor
daa
loop
out
fstps
leave
xor
dec
mov
bound
loop
jne
nop
mov
cld
pop
stos
adc
adc
cli
mov
add
rcl
mov
add
jle
push
lcall
dec
xor
mov
mov
or
fs
insb
add
jle
xchg
cmp
ljmp
arpl
repz
mov
xor
shll
inc
dec
push
and
nop
jp
inc
or
jmp
sbb
mov
popa
sub
stos
dec
and
dec
xchg
or
daa
fcoms
test
lods
sbb
subl
adc
std
cmp
or
mov
cmp
inc
pop
cmp
cmp
das
fstpl
mov
dec
sbbl
call
divl
addr16
xchg
lds
add
mov
outsl
dec
outsl
out
je
push
stos
push
lea
lcall
mov
repnz
stos
jb
push
xlat
cli
pop
lcall
imul
mov
jecxz
and
mov
test
mov
lahf
cmp
and
imul
aas
xchg
stos
xchg
or
or
subb
pop
xor
adc
lea
sbb
jnp
cmp
in
pop
push
into
scas
sub
and
in
outsl
mov
lahf
jnp
icebp
adc
add
xchg
push
arpl
nop
out
outsb
pop
ret
xor
scas
fisubrl
popf
popa
addr16
mov
dec
std
hlt
addl
jno
add
lcall
mov
rcll
mov
test
push
repnz
add
inc
push
jecxz
pop
dec
cmpsl
cmp
addr16
cmp
pop
mov
adc
mov
add
mov
push
jmp
stos
ljmp
icebp
mov
test
dec
repz
push
fldt
add
clc
mov
mov
das
jne
and
arpl
cmc
repz
mov
mov
outsb
mov
xor
cmpsl
add
xchg
in
xor
jg
into
in
cltd
pusha
divb
or
jno
xor
add
sbb
mov
outsb
and
xor
test
dec
push
call
push
push
add
test
es
rclb
stos
cli
xchg
inc
push
mov
pop
in
jae
inc
leave
cmp
les
push
ljmp
xchg
xchg
xlat
arpl
testb
inc
mov
xchg
test
in
push
test
bound
rol
andb
inc
mov
adc
sbb
jae
sbb
je
mov
add
xchg
cwtl
cmp
into
xchg
mov
mov
mov
mov
cld
mov
sub
movsl
and
sub
fisubl
enter
jnp
inc
iret
mov
les
fstpl
pusha
fsts
imulb
test
loop
loopne
xchg
fs
fcoml
mov
imul
lret
rorl
enter
aam
lods
mov
dec
bound
pop
movsb
jo
pop
in
popf
cmpsl
int
out
push
cld
inc
ficoms
sarb
jne
and
mov
lds
gs
fwait
stos
adc
or
pop
adc
sbb
mov
sub
adc
mov
jne
push
mov
inc
push
cmpsl
stc
fiadds
jecxz
sub
inc
aaa
jmp
add
popf
pusha
jns
push
fcmovnu
dec
test
sub
mov
leave
cld
shrb
sbb
pushf
imul
rorl
sub
push
fldcw
mov
orb
leave
aaa
addr16
push
shll
jne
mov
aam
out
fwait
pop
xor
aaa
sbb
in
mov
je
pushf
cli
mov
repnz
pusha
cld
fs
mov
cwtl
or
int3
addl
lods
sub
or
xchg
sub
testl
inc
xchg
dec
mov
outsl
pop
repnz
fstpl
adc
cmp
out
cld
adc
sub
std
ljmp
pusha
sahf
pushf
nop
mov
inc
lret
cmp
lds
dec
test
movsl
xchg
mov
sbb
pop
push
mull
and
inc
insb
dec
cmp
pushf
mov
lods
xchg
in
mov
test
aaa
ret
sbb
pop
sub
pop
mov
xlat
in
cs
lret
mov
pop
or
leave
clc
fisubrl
rcll
loope
shrl
push
bound
andb
and
fisttpll
cli
adc
push
stos
testl
movb
xor
loopne
scas
xor
es
fdivrl
aas
sub
dec
aaa
xor
inc
mov
xchg
int3
dec
mov
pop
mov
aad
jo
inc
add
inc
push
inc
sub
jns
jge
lcall
test
inc
inc
adc
cltd
jp
pop
pop
mov
jge
cld
cltd
pop
adc
adc
or
iret
mov
dec
fiadds
add
into
push
jo
jge
xchg
jbe
negl
jb
out
mov
jnp
and
sti
mov
jge
xor
pop
jle
leave
add
pop
jne
out
dec
pusha
lret
push
shlb
pop
push
jne
flds
xchg
ss
jmp
xor
adc
and
imul
scas
in
sbb
xlat
enter
xchg
pop
notl
inc
and
mov
stos
jg
lret
fs
cmpsl
mov
and
fbld
cmpsl
js
cmp
adc
xchg
lahf
mov
mov
sub
loope
and
lret
fildll
jmp
jb
cmp
fsts
mov
push
xor
mov
enter
pop
aam
xor
lret
loope
push
or
push
pop
ret
movsl
sar
push
sbb
aam
jns
xor
mov
mov
xchg
aas
stc
cmovne
mov
sub
and
inc
outsl
mov
es
jl
cmp
lcall
dec
mov
clc
cmp
mov
pop
jo
or
mov
xor
popa
hlt
les
lods
lahf
jns
filds
std
stos
insl
aaa
pop
xchg
fucomip
sahf
push
testb
cmpsb
or
mov
cwtl
pop
sub
adc
xchg
xchg
je
cmpsl
jb
ljmp
insl
push
cmp
lret
fidivl
push
lahf
xchg
inc
pop
loope
outsb
in
xorb
jae
hlt
xorb
pop
push
add
inc
fbld
xchg
cs
inc
ss
test
pop
mov
push
sub
ds
mov
xor
rcr
mov
cmpsb
outsb
leave
sbb
bnd
jmp
test
push
fwait
inc
test
pusha
clc
or
or
test
stos
fwait
scas
inc
add
jbe
jmp
adc
pop
cs
xor
mov
shlb
pop
fbld
ret
or
mov
pop
iret
test
cltd
lret
jae
pop
xor
jne
icebp
lods
stos
inc
inc
into
pop
jno
cld
sbb
jae
jmp
js
add
inc
xor
add
notb
adc
divl
xchg
sub
jecxz
pop
lcall
mov
adc
imul
xchg
sbb
push
inc
xchg
push
or
adc
pop
push
addr16
cmc
lahf
jmp
add
mov
es
fimuls
int3
dec
push
push
es
sub
add
shr
and
ss
jne
jmp
push
inc
push
xor
sub
xchg
mov
data16
orl
rorb
dec
shll
jb
mov
outsb
cld
ret
ja
mov
subb
repnz
add
jge
out
sbb
lods
ljmp
sub
popf
cmp
aaa
push
and
repnz
dec
mov
sbb
cmp
cmp
cld
push
sbb
inc
rorb
outsb
inc
push
scas
jp
iret
pushf
dec
jmp
push
inc
and
sub
sbb
jo
sti
scas
clc
pushf
jo
inc
adc
shll
je
test
fistpll
or
push
add
in
psrld
lahf
test
push
xchg
fisubl
dec
sbbb
repz
mov
dec
lret
sbb
in
std
es
dec
mov
loop
pop
inc
inc
and
inc
pop
movsl
inc
dec
mov
test
xor
sub
fs
int
mov
idiv
jle
fs
mov
push
xchg
js
push
les
cmpsb
mov
jbe
scas
arpl
test
nop
in
mov
cwtl
xchg
push
push
mov
pop
lds
fnstsw
icebp
sub
negb
je
stos
enter
cli
dec
jp
cmp
cmp
sub
adc
lock
cmpsl
xor
adc
xchg
shlb
dec
arpl
mov
idivl
ds
jecxz
sti
xchg
sub
jecxz
bound
push
arpl
push
adc
loope
lret
xlat
sahf
jmp
les
fdiv
rol
int
cwtl
negb
push
aam
aad
dec
and
imul
sub
cmpsl
pop
xor
std
data16
mov
int3
sub
aam
or
enter
push
pusha
rolb
or
fildll
mov
jmp
inc
xchg
inc
imul
mov
xor
pop
int3
inc
aam
repz
push
icebp
shll
push
sub
mov
jp
sahf
sarb
test
xor
mov
add
ret
imul
rcrb
jne
out
fstl
jo
xchg
arpl
popf
mov
insl
cmpl
push
dec
and
loop
call
and
push
fidivs
xchg
mov
lret
and
scas
nop
sbb
sbb
jns
dec
mov
cmpsb
outsb
scas
cmp
mov
or
clc
add
inc
jno
mov
jp
jmp
je
je
lods
xchg
jno
push
shrl
jg
mov
mov
inc
scas
inc
adc
sub
mov
daa
push
mov
bound
sbb
repnz
lret
lds
adc
pop
inc
shrl
push
leave
xchg
adc
mov
cmp
mov
paddq
mov
roll
shll
xchg
aas
cs
pop
pop
dec
pop
clc
mov
mov
mov
test
ds
mov
cmc
sub
xor
out
cmp
mov
jne
lods
sub
or
jmp
test
mov
sub
or
xchg
data16
or
dec
adc
mov
mov
push
faddl
mov
cmp
testb
cmpsb
stc
insb
gs
scas
fnstsw
enter
jne
pop
ror
movsb
aaa
in
movsl
push
dec
and
adc
scas
sbb
inc
fildll
cmp
in
adc
call
loope
sbb
fdivrp
loop
xchg
adc
cli
push
loop
adc
pop
movsb
dec
cld
int
repz
fildl
shr
jl
mov
or
and
mov
je
jmp
movsb
pop
jno
cmp
mov
imul
fsts
pop
aas
cmp
in
xchg
and
das
out
fbstp
push
leave
imul
mov
and
jno,pn
cwtl
in
adc
dec
push
data16
inc
jbe
dec
cmp
mov
sbb
mov
sbb
lock
xchg
lahf
mov
cmpsb
bound
jle
pushf
icebp
bound
mov
icebp
adc
clc
fwait
sbb
dec
orb
fnsave
jle
jle
sbb
fs
fsubrl
cmc
mov
arpl
jne
cmpsb
mov
test
mov
loope
or
cmp
mov
jge
sti
aaa
gs
push
in
ret
sarb
lret
movsb
es
pop
fisubs
popa
sub
addr16
idivl
clc
rcrb
leave
clc
mov
mov
pop
add
cmpsl
imul
lret
stos
sbb
out
pop
and
in
dec
sbb
xor
pusha
or
xlat
inc
ds
sub
dec
or
jp
pop
sti
mov
adc
lock
stos
push
lret
inc
push
loope
push
mov
ds
fiaddl
stos
push
adc
inc
aas
push
fnclex
inc
pop
add
enter
mov
jb
cltd
pop
add
pop
cltd
nop
inc
inc
mov
mov
push
gs
xor
push
icebp
es
insb
cmp
call
jmp
sub
jns
rcr
push
xchg
sarb
xchg
add
add
adc
aaa
sti
and
push
dec
pop
aam
repnz
hlt
pop
sub
in
add
out
and
push
mov
imul
subb
mov
push
outsl
sub
inc
pop
pop
inc
outsl
adc
daa
cmp
pop
idivb
fisubs
bswap
xchg
fisttps
mov
xchg
outsl
loop
mov
hlt
fwait
mov
lret
dec
sub
push
sahf
insb
mov
cmp
repnz
mov
or
ret
cs
or
jg
loop
fldt
in
jnp
je
shlb
in
jnp
mov
mov
jno
mov
movsb
cmpsl
or
mov
mov
inc
push
bound
dec
mov
push
sahf
aaa
cmp
push
fwait
sub
mov
ret
pusha
hlt
out
inc
stc
pop
xchg
xchg
dec
scas
inc
sbb
bound
mov
fbstp
sti
xchg
repz
in
sub
jle
out
movsl
push
test
push
sub
mov
and
out
or
cli
pop
pusha
test
into
jae
fs
rol
sbb
add
push
adc
scas
push
xorb
out
mov
and
es
mov
enter
xor
cs
lods
ss
push
testb
add
pop
stos
mov
dec
push
inc
and
cmpsl
mov
push
dec
adc
pop
xchg
jb
and
jo
sbb
dec
or
and
cmp
sarl
test
std
inc
sub
sbb
mov
push
mov
mov
cltd
int3
cmc
repnz
xchg
outsb
cltd
jb
out
dec
nop
repz
insb
sbb
fwait
mov
xchg
pop
aam
iret
or
roll
mov
and
ret
imul
push
js
sti
out
jb
xchg
push
cmp
xor
inc
mov
aaa
iret
lds
xchg
stos
bound
movsl
imul
add
dec
pop
ret
mov
xor
movsb
nop
add
setl
push
ljmp
test
lcall
mov
xor
lods
mov
rcl
xor
sub
fwait
mov
xor
mov
inc
xchg
and
adc
jg
push
sahf
aaa
sti
sub
push
push
dec
push
aaa
test
sbb
mov
out
push
out
mov
lock
int
jnp
sbb
sahf
pop
stc
add
dec
xor
mov
mov
call
insl
xchg
lods
jge
mov
mov
xor
cmpsl
add
aam
stos
sarl
push
pop
sub
scas
xchg
adc
or
xor
or
stos
mov
push
pop
out
pop
dec
fisttps
insb
dec
lahf
js
test
fwait
insl
movsl
test
insb
loopne
outsl
out
fdivrl
xor
fidivrl
jo
stos
outsl
cmpsb
popl
test
jno
in
inc
je
mov
pusha
outsl
jmp
xchg
inc
or
je
jb
aam
fsubrl
ret
and
stos
push
aas
push
jne
rcr
adc
repnz
test
lcall
loopne
pop
mov
jmp
test
into
inc
dec
adc
jo
sbb
test
push
repz
mov
stos
shll
inc
test
mov
shrl
push
adc
es
and
jb
push
mov
clc
inc
call
lret
mov
lcall
ss
add
pop
scas
ret
hlt
sahf
mov
outsl
sbbb
fmul
dec
sbb
mov
clc
cld
pop
jb
imul
movsl
or
add
jecxz
lcall
push
in
mull
enter
inc
hlt
add
cmp
cmpsb
mov
popl
inc
mov
aad
pop
dec
inc
lea
push
add
xchg
imul
repz
lret
cltd
xchg
fs
rcl
dec
adc
leave
dec
or
xchg
fcompl
fildll
ljmp
fwait
mov
mov
cmp
add
imul
inc
add
filds
and
or
loopne
push
imul
cmp
mov
push
scas
shll
and
mov
rorl
xchg
lahf
loopne
sub
ljmp
cltd
cmp
cmp
xchg
mov
cmp
cmp
notl
push
mov
jge
insb
mov
test
movsl
fisttpll
int
std
push
push
and
sub
push
jno
loope
jns
xor
xchg
movsb
mov
push
cwtl
dec
xor
adc
rol
std
mov
xor
jmp
cmp
mov
popf
dec
or
dec
inc
inc
fcoml
jp,pn
mov
xlat
adc
std
push
dec
adc
in
imul
xor
sbb
insb
or
cs
incb
outsb
dec
int
lahf
mov
nop
popf
es
xor
jne
imul
or
movsb
subl
mov
mov
adc
push
or
into
repnz
xchg
pop
ljmp
lea
xlat
add
popa
jbe
push
mov
xor
mov
hlt
sub
dec
jg
sbb
lds
das
inc
push
inc
xor
or
js
in
pop
push
or
and
or
sahf
repz
or
jns
ds
sti
sahf
cli
scas
push
into
add
dec
cmpsb
jb
mov
aas
movsl
inc
sub
mov
xchg
incl
mov
sub
xchg
jl
notb
jne
cltd
jge
inc
dec
xor
jae
orl
xlat
pop
jb
shll
mov
sarl
sub
push
mov
into
sub
sbb
divl
jb
bound
push
insb
mov
mov
xchg
push
hlt
out
arpl
push
mov
js
cs
adc
xchg
sub
lea
dec
and
mov
mov
jmp
or
xchg
mov
movsl
xor
pop
insl
or
push
pop
dec
in
add
inc
rcrb
call
jns
pop
lock
jae
adc
push
pop
sahf
mov
dec
in
or
sbb
cmp
bound
std
mov
push
daa
loopne
fadds
xor
push
sub
pusha
and
in
int3
sub
loopne
cltd
lods
push
clc
call
mov
repnz
pop
or
adc
mov
shll
scas
ja
mov
test
leave
xor
aad
jg
pop
adc
test
push
in
daa
lods
add
xor
mov
gs
mov
scas
jne
xchg
test
cmp
or
adc
xor
testl
sbb
push
out
and
sub
add
movsl
xor
movsb
adc
jnp
dec
add
mov
pop
popf
pusha
xor
lcall
jp
shl
cmp
xchg
sahf
push
mov
xor
outsl
xor
into
es
ja
mov
iret
movsl
pushf
adc
shll
addr16
sahf
fsubrl
popa
jns
movsl
push
inc
and
rolb
or
push
in
mov
pop
test
roll
in
push
shll
or
sbb
addl
scas
jo
repz
in
out
xor
sti
mov
sti
sti
mov
adc
movsb
push
push
jl
pop
cmpsl
fwait
dec
push
hlt
jle
push
jg
mov
sbb
xor
movb
jmp
lods
mov
addr16
fwait
xor
xchg
xor
push
mov
fistps
mul
rolb
mov
fidivrl
aam
aaa
les
adc
out
scas
jae
mov
repz
shlb
or
sub
jg
iret
pop
test
sub
and
mov
mov
add
xchg
mov
ret
lods
cmpsb
sub
int3
popa
test
in
je
xorb
ljmp
stos
ret
fildl
xchg
jns
rcrb
cmp
mov
aad
xchg
out
rclb
xor
roll
data16
dec
lcall
es
clc
and
ret
jne
adc
scas
aam
cmp
mov
push
or
dec
mov
cmp
jo
inc
inc
out
fbstp
push
cld
mov
add
ljmp
subb
int3
iret
push
testb
fldt
testl
divl
sarb
js
cmp
xchg
xchg
lret
lods
sahf
out
adc
xlat
inc
jg
je
decl
mov
insb
loop
xchg
and
inc
fldl2e
lret
push
dec
jae
jnp
xchg
lds
stos
pusha
mov
out
dec
mov
add
sbb
adc
or
repnz
jle
inc
dec
ds
cmp
jae
shlb
scas
je
push
es
xchg
or
scas
xchg
adc
cmp
inc
aad
rcrb
pop
imul
fiadds
and
xchg
pop
mov
sarb
push
les
push
dec
or
addb
xchg
xchg
jl
pop
add
inc
inc
movsb
sahf
jg
jmp
mov
mov
pop
mov
mov
dec
inc
addr16
mov
dec
push
outsl
or
aad
outsl
push
or
mov
pop
repnz
lds
insb
xor
cwtl
mov
or
mov
adc
jecxz
mov
push
insb
xchg
rcr
in
stc
sahf
jp
sbb
sub
sub
loope
fidivrl
andl
push
loop
aas
scas
aas
pop
lock
mov
in
xor
daa
xlat
cmp
cmp
in
add
imul
popf
ret
jnp
or
fistps
test
push
loope
enter
cmp
jae
in
pop
outsb
fisttpll
dec
insb
cli
cli
xchg
xchg
int
jge
inc
ficoms
pavgw
dec
mov
mov
outsl
dec
sahf
adc
mov
jae
pop
cmpsl
out
rorb
and
xor
addr16
adc
loope
sub
fadds
cmp
push
xor
decb
pusha
dec
neg
cmc
pop
fdivrs
and
ja
jmp
sbb
fidivrl
mov
mov
jnp
pusha
lock
pop
mov
sbb
inc
sub
or
scas
xor
orl
cmp
aam
gs
data16
pop
dec
sbb
jnp
or
das
dec
ret
fucomp
cwtl
lods
pushf
dec
xchg
xchg
scas
cmp
outsl
inc
lods
std
bound
fwait
lds
fwait
jae
test
inc
bound
mov
fs
mov
xchg
cmp
xchg
pop
cmp
xor
mov
clc
adc
jecxz
ss
mov
push
out
pushf
int3
in
out
popf
push
das
pop
scas
loope
iret
xchg
repnz
inc
xor
dec
outsl
std
dec
xchg
sbb
cld
outsb
ljmp
push
xchg
out
mov
adc
ja
les
fisttpl
sbbb
xor
push
loop
in
movsb
push
and
pop
cmp
sbb
cmp
fiaddl
push
mull
mov
jae
and
add
scas
mov
mov
rcl
nop
adc
sti
inc
loop
xor
lods
sahf
push
dec
cmp
movsl
popf
bnd
add
ljmp
fmul
test
push
adc
cmc
gs
cs
loopne
or
push
js
sbb
adc
pop
aaa
inc
lahf
cmp
and
jb
imul
and
test
push
lcall
sti
sti
fcoms
xchg
push
lea
fbld
enter
xor
jne
jecxz
jnp
sub
clc
cmp
push
mov
out
jp
xchg
rcrb
sbb
push
sbb
or
and
mov
adc
sbb
fcmovnbe
xchg
in
add
dec
or
dec
out
mov
adc
daa
test
repz
dec
mov
push
prefetch
fistps
mov
ja
jb
mov
stos
call
bound
cmp
or
pop
cmpsl
stos
jbe
int3
neg
jne
dec
push
sub
mov
aas
lock
sbb
or
xor
mov
aas
and
adc
pusha
mov
int
and
in
xor
out
rolb
inc
outsb
insl
rcr
and
pushf
pop
sti
push
adc
push
mov
and
addr16
xchg
jg
scas
and
insb
fsubrp
popf
xchg
cli
inc
fstpl
and
lods
test
sbb
mov
cld
ror
repz
fiaddl
adc
inc
loope
nop
cld
push
ljmp
cmp
sub
inc
mov
lods
imul
and
jo
ja
test
jmp
mov
mov
rclb
test
mov
dec
fidivs
rcl
clc
pop
in
cmc
inc
test
xchg
inc
push
or
xchg
in
scas
lret
mov
dec
aad
scas
and
inc
fs
dec
scas
xor
add
pop
sub
fs
and
mov
dec
cmp
fwait
jbe
jg
or
sbb
jp
xchg
movsl
sbb
sub
repz
pop
add
xor
mov
sub
cmp
fcmovbe
mov
std
cmp
pop
hlt
insl
push
pmaddwd
pop
jge
mov
cmp
lcall
xchg
insl
fsubp
fsubrs
fwait
mov
stos
cmp
movsb
jecxz
shrl
ds
jno
sbb
popa
rcrl
adc
push
push
rorl
sahf
shlb
dec
push
aas
adc
mov
data16
cmc
push
push
push
adc
in
cltd
mov
loop
mov
push
movsb
push
test
in
dec
lcall
sub
mov
mov
pop
pop
hlt
pusha
push
jne
into
lock
add
movsb
push
xchg
mov
push
pushf
mov
inc
cmp
mov
push
sar
lods
mov
push
mov
fmuls
xchg
cmp
imul
subl
pop
lahf
add
fidivrl
unpckhps
imul
lds
mov
cli
cmp
adc
jmp
fdivrl
test
int3
sbb
aam
popa
mov
jmp
sarb
sub
cmp
mov
aaa
popf
sub
cmp
add
stc
sbb
inc
outsb
jge
mulb
cwtl
xor
mov
insl
pop
xor
movl
lret
inc
adc
inc
or
inc
or
dec
push
addb
push
mov
ret
mov
fildll
or
rolb
pusha
insb
daa
and
sbb
bound
lret
bound
shr
mov
inc
dec
mov
dec
out
sbb
fs
dec
test
dec
aas
popa
gs
gs
xor
bound
and
mov
rolb
lret
and
and
jp
xchg
cmp
test
rcrb
xor
add
icebp
xor
fucom
and
cmpsl
imul
xor
fs
fs
fwait
xor
xor
cltd
or
add
push
outsb
adc
mov
test
cld
js
jb
inc
movl
iret
aas
insb
jecxz
mov
adc
and
cmpsb
jge
cmp
out
das
push
cmp
xchg
sahf
push
pop
xor
push
call
sbb
pop
das
sub
sbb
loop
pop
jbe
mov
sbb
mov
and
cmp
jae
repnz
inc
das
xchg
jecxz
sub
stos
push
pop
test
pop
lea
dec
js
mov
or
jns
mov
push
dec
addl
scas
dec
shl
cmp
stc
sbb
mov
sub
jg
pop
popf
pop
orl
ret
mov
inc
repnz
sub
xchg
cmp
mov
addr16
imul
in
add
and
mul
int
ljmp
push
jns
jno
pop
sbb
sti
imul
pop
cmpsb
test
jne
add
cmc
stc
dec
mov
frstor
aam
dec
rorb
dec
movsl
xchg
add
jge
lds
jo
enter
jge
in
jo
mov
daa
pop
call
enter
cld
addr16
imul
lcall
movd
cs
daa
or
loop
xor
sbb
cmpb
jge
stc
cmp
mov
out
jno
inc
cmp
rcl
in
icebp
ds
addl
cltd
adc
cli
je
loopne
sti
sbb
xchg
xor
sbb
addl
lods
adc
notb
push
cmp
sti
sbb
inc
out
cs
push
fisttpl
inc
sbb
popa
sub
push
gs
pop
mov
pop
cltd
out
jecxz
xchg
push
adc
dec
or
repnz
xchg
xchg
adc
bound
rcll
mov
lret
xchg
je
gs
mov
repz
mov
pusha
bound
in
jmp
sbb
xor
int
addb
sbb
inc
call
in
add
insl
xchg
or
cmp
inc
mov
std
clc
fdivl
push
and
push
xchg
or
push
jae
push
or
and
ficomps
loope
lret
test
adc
push
ljmp
fistl
mov
inc
xor
pop
aas
arpl
insb
std
xor
repnz
add
sbb
mov
and
aad
and
xchg
incb
push
loopne
jl
adc
mov
push
lods
dec
fiadds
addr16
stos
xchg
cmp
sbb
pop
xor
xchg
mov
daa
call
insb
inc
mov
call
adc
xchg
push
push
xor
movsb
pop
pop
sbb
xor
ja
mov
jle
adc
and
outsb
icebp
test
cmpsl
sbb
lods
fwait
adc
orb
out
and
mov
into
shl
sub
sbb
inc
xchg
cwtl
in
and
push
out
movsl
rcll
push
fisttpl
mov
sbb
xor
out
push
mov
ret
inc
mov
stos
jl
mov
xchg
xor
std
out
orl
or
sti
aam
cmpsl
xchg
mov
or
inc
aam
mov
push
mov
in
mov
adc
out
lock
mov
pop
ds
lret
pop
push
stc
daa
mov
dec
fiaddl
xchg
pusha
faddl
add
jl
in
addr16
mov
cmp
insb
pusha
test
dec
jle
jmp
outsb
das
inc
call
jmp
dec
cmp
rolb
pop
add
pop
es
out
jo
in
push
sub
mov
mov
dec
dec
lock
lahf
xlat
sub
imul
imul
pop
stc
out
push
jae
mov
loop
or
cmovns
lcall
cmc
gs
add
pop
pop
cltd
mov
call
jae
pop
into
mov
add
sub
and
or
movsl
dec
mov
jae
or
fcomi
insl
loope
adc
mov
jb
imul
cmp
cld
xchg
add
mov
fwait
lock
xchg
and
test
dec
xchg
pop
xchg
stc
cs
call
or
mov
fadds
ds
cmp
xchg
add
pop
cmc
cmp
jne
loope
shrb
add
in
imul
dec
jbe
out
xchg
mov
sbb
pop
cwtl
movsb
sarl
sbbb
mov
sbb
push
push
mov
out
sub
test
push
icebp
inc
into
js
pop
mov
mov
rcll
lahf
and
call
scas
shll
gs
jle
ja
xlat
bound
and
or
xchg
or
pop
ja
fiaddl
xchg
add
pop
or
outsl
jne
jb
pop
cmp
imul
xchg
jns
pusha
cltd
mov
mov
les
call
xchg
imul
jge
lcall
sbb
ret
icebp
jnp
or
jno
sti
jno
pop
data16
mov
adc
into
mov
mov
or
lods
dec
es
mov
jp
in
lahf
les
add
pop
jecxz
mov
mov
test
push
sub
mov
cs
sbbl
mov
xchg
data16
jmp
xor
inc
cwtl
aad
or
test
jno
push
test
jo
out
movsl
dec
sub
shll
insl
inc
pop
push
cmpsb
ja
sub
dec
std
insb
les
dec
mov
pusha
ret
dec
ds
nop
cli
shrb
jg
movsl
xchg
cmp
dec
adc
jl
add
push
fnstcw
movsb
xlat
ds
shrb
sub
outsl
das
ja
jl
rolb
inc
les
sub
jb
pop
jmp
data16
mov
rcrl
int
cmpsb
cld
cmp
rcl
xchg
scas
lahf
arpl
rolb
out
or
jns
dec
pop
pop
xchg
sbb
sub
stc
gs
aad
ja
mov
xchg
mov
sti
push
out
int
xor
inc
sarl
sbb
into
pop
hlt
aad
push
push
js
jmp
jge
mov
lods
dec
fbld
in
jl
or
mov
cmp
or
mov
push
pop
in
adcb
fs
cmpsl
pusha
add
sti
aam
std
mov
xlat
sub
cmp
jo
sbbb
push
addr16
scas
adc
xor
mov
push
add
pop
inc
fwait
mov
pop
andb
sub
enter
imul
jge
test
dec
adc
fisubl
xor
mov
jne
add
subb
ds
dec
sbb
sti
lds
data16
xchg
jl
fmull
xor
xchg
cli
lret
mov
into
repnz
cmp
test
add
lods
and
loop
pop
mov
mov
push
sti
test
mov
push
jmp
pop
fcomi
jbe
push
push
sbb
into
push
cli
push
xchg
mov
pop
cmp
pushf
cmp
scas
or
xchg
rcll
push
addr16
icebp
mov
push
in
in
cmp
and
scas
in
cmpsl
xor
je
not
xlat
orl
mov
jno
add
inc
jp
dec
add
hlt
xor
add
test
lods
iret
sbb
ja
add
es
mov
jl
sbb
mov
fwait
pop
sbb
cmc
and
nop
jge
jae
imull
icebp
mov
cmpsl
gs
xor
mov
ud0
repnz
xchg
mov
and
and
push
rorl
xchg
movsl
jge
jle
add
clc
in
enter
adcb
scas
cli
lods
cmp
test
enter
xchg
flds
adc
fnsave
pop
jp
xchg
push
jle,pn
inc
jmp
xchg
inc
mov
loope
nopl
cmp
inc
sbb
xchg
stc
cmpsl
test
adcl
adc
stc
lods
imul
ret
or
stos
les
xchg
push
jns
test
rcll
je
inc
pop
cld
mov
cmp
inc
dec
and
enter
add
repnz
pop
test
xchg
mov
notb
jg
add
lret
mov
nop
xchg
add
cmp
pop
sarl
lods
fcmovu
sbb
mov
movsb
ds
pop
hlt
add
adc
cmc
test
lcall
adc
pusha
dec
xchg
fnstcw
sbb
lret
inc
cmp
popf
push
sub
in
sbbl
clc
cli
xchg
add
stos
jge
das
dec
negb
test
mov
pop
into
popa
scas
ljmp
jle
shl
sbb
lods
and
push
sbb
mov
jae
sbb
sahf
mov
aaa
sub
dec
loope
pop
inc
inc
jne
nop
and
mov
imul
pop
divb
sub
or
pop
dec
xor
pop
rclb
insb
je
mov
insb
ret
jns
or
cld
sbbl
or
add
cmp
jns
dec
popa
sahf
test
stos
data16
icebp
pop
setno
add
arpl
popf
mov
add
or
xor
pop
repnz
mov
dec
cli
popf
mov
add
push
cmp
push
and
xor
not
sbbb
divb
loopne
repz
adc
jl
push
inc
jmp
cmp
xor
jno
push
mov
pop
mov
popl
inc
pop
fldt
xlat
jne
adc
mov
sti
xor
mov
insb
nop
dec
sarl
or
jnp
iret
in
int3
inc
mov
test
sbb
mov
sbb
leave
push
jnp
pop
popf
pop
and
addr16
aad
lret
addb
hlt
sbb
repz
outsb
std
iret
cmp
push
jle
mov
dec
repnz
leave
cmc
add
xor
cmp
popa
out
out
xor
cmpsl
or
add
insl
loopne
jmp
shrl
in
dec
mov
repnz
jns
popa
fucom
dec
hlt
lds
mov
sub
movsb
jbe
xor
out
aas
out
mov
lods
inc
movsb
int3
dec
xchg
adc
dec
lret
add
rcrl
and
outsl
fldl
add
adc
aam
outsb
push
mov
addr16
je
mov
sbb
sub
dec
pop
fst
rol
sbb
mov
repz
clc
fbld
mov
rclb
xchg
aas
pop
stc
sbb
out
ds
rol
xchg
int
mov
fisttpll
dec
jns
fldt
push
insb
ljmp
or
ret
enter
ljmp
clc
cmp
xorl
sub
nop
and
xor
sbb
and
add
mov
dec
call
adc
xor
cwtl
and
xor
shlb
popa
cld
add
mov
aam
insl
cwtl
icebp
jno
ror
jno
cmp
push
or
xlat
lods
and
push
xor
or
sahf
iret
in
jg
add
idivl
cmp
mov
dec
arpl
xchg
push
iret
mov
aad
push
ds
mov
scas
pop
lods
adc
dec
pop
js
roll
sbb
jns
cmp
jo
jb
or
mov
xlat
adc
cli
mov
js
mov
and
out
popf
ja
aam
rcll
setbe
or
inc
or
scas
inc
cli
sbb
mov
test
roll
cmc
xor
add
pop
dec
mov
mov
rcll
dec
cmp
or
mov
pop
inc
jmp
mov
stos
jmp
shrl
add
mov
sar
add
xor
pop
and
in
sub
cmp
cltd
pop
cmpsl
inc
jnp
cmp
ficompl
into
mov
iret
pop
hlt
movsb
push
hlt
pop
lock
mov
xchg
adc
arpl
mov
test
shr
sbb
or
scas
sbb
mov
pop
pop
pop
dec
cmpsl
sub
adc
jnp
add
push
je
lret
push
push
cld
shlb
push
add
repnz
ret
adc
xchg
decl
sub
cmp
pop
and
aaa
xor
lret
loopne
mov
out
adcl
arpl
dec
mov
xchg
xlat
and
sbb
xchg
cmpsl
into
stos
jns
pop
lea
fwait
out
sbb
jb
cwtl
stos
stos
and
and
push
aad
aaa
jl
push
int3
fsubs
push
call
cmp
jns
call
xor
push
loope
std
lahf
sub
push
in
icebp
shl
std
xchg
lock
cld
push
add
sbb
adc
xor
sbb
stos
xchg
test
xor
xor
pop
pop
or
push
fisttps
cmpsl
lds
sbb
in
dec
aas
jecxz
in
scas
sub
inc
jnp
dec
xchg
xchg
loopne
pop
dec
mov
je
loopne
xlat
jmp
js
mov
cmc
mov
fs
lcall
jp
xor
inc
int
fsubrs
sti
add
or
inc
mov
cmpsb
xchg
ret
or
cmp
xor
cli
pop
xchg
sub
rol
sub
js
rcll
cmpsb
in
fcomi
outsb
jb
sub
adc
movsb
adc
ror
aaa
loopne
push
js
xor
sub
rorl
enter
shrl
fdivrs
out
jmp
adc
dec
imul
mov
fldcw
mov
std
cld
jge
and
pop
out
or
dec
jl
pushf
mov
mov
sarl
js
xlat
cmc
lcall
sbb
in
add
xchg
xor
jl
mov
aas
jo
or
push
mov
es
cltd
js
inc
aad
or
push
lret
mov
mov
push
mov
mov
test
out
mov
sub
icebp
das
mov
movsl
xor
cmp
divl
repz
sbb
mov
repnz
fdivrl
jae
mov
adc
xchg
cmp
or
pushf
push
out
test
dec
inc
jg
daa
adc
fstps
mov
aam
sub
xchg
pop
sbb
jmp
andl
push
hlt
stos
aaa
sub
pop
popa
mov
xor
lea
out
add
cwtl
or
mov
out
test
mov
pop
sub
cmp
mov
loopne
pop
adc
xchg
lods
stos
or
inc
rclb
lds
pop
pushf
jmp
mov
xchg
roll
fisubl
pop
movsl
pop
daa
jle
fldt
and
in
push
cltd
jp
cmp
rcrl
inc
or
scas
pushf
and
xchg
cmp
outsb
dec
xchg
pop
cmpsl
call
pop
scas
fdivrs
lahf
or
outsl
out
push
inc
sti
mov
jnp
jo
sub
mov
ret
xlat
gs
add
push
in
or
clc
or
mov
stc
pop
nop
sbbb
out
imul
mov
js
inc
sarl
mov
mov
push
mov
pushf
xchg
xor
mov
mov
popa
adc
nop
es
jg
mov
mov
jb
out
scas
cld
xor
dec
push
fstl
iret
mov
daa
mov
mov
in
and
ret
hlt
outsl
lret
xor
dec
add
mov
scas
pop
in
jecxz
insb
sbb
in
and
and
jne
cmpsb
pop
xchg
fwait
sbb
rcrb
add
nop
in
pop
dec
dec
stos
ret
or
int3
sub
and
sbb
or
out
clc
jo
sub
enter
adcb
popa
test
sbb
jmp
sub
xor
jle
fs
imul
jno
popa
sbb
loopne
int3
sbb
jl
scas
mov
call
cld
xchg
mov
lock
mov
cmc
iret
popf
std
push
or
push
sbbb
xbegin
mov
adc
inc
and
push
jle
xchg
cld
stos
lcall
xchg
ss
mov
jl
repnz
pop
outsb
test
add
icebp
in
xchg
cltd
mov
add
mov
xchg
adc
mov
or
lock
jnp
adcb
scas
xor
int3
or
fadd
ljmp
jmp
push
lea
add
xor
rcr
pop
mov
negb
cmp
das
lods
icebp
imul
mov
sarl
shll
or
dec
daa
es
and
sbb
fsubs
outsl
pop
jbe
lahf
sbb
dec
mov
inc
add
mov
insl
stos
lds
and
jbe
inc
aas
imul
out
enter
jle
cltd
and
push
loope
xor
in
test
jbe
xchg
cmp
out
dec
cwtl
inc
dec
inc
fs
cmc
ja
int
fwait
inc
sub
and
and
sub
insb
insb
imulb
xchg
dec
xor
jmp
adc
leave
xchg
shll
xor
push
adc
dec
jmp
mov
pop
sti
aam
frstor
mov
push
jle
js
or
sub
and
sub
je
jne
mov
jmp
xchg
outsl
sub
mov
push
cmp
sub
out
int
arpl
mov
andl
push
and
xchg
mov
in
mov
es
test
stc
mov
fwait
inc
test
or
hlt
mov
or
xor
scas
cwtl
rorb
mov
mov
adc
mov
incl
lock
and
lds
xchg
fldt
mov
mov
xchg
cmp
sti
mov
fsubs
repnz
xor
push
cmc
out
xor
rclb
fnstenv
cmpsl
cmp
or
dec
out
loope
add
cmp
dec
bound
adc
sub
sbb
lock
adc
xor
icebp
sub
push
lret
sbb
add
dec
adc
int3
lods
rcl
add
xor
dec
test
in
and
inc
sahf
jne
sti
adc
jo
loopne
push
mov
pop
js
mov
xor
cmc
mov
jge
lock
cltd
data16
fsubrl
mov
cmp
out
movsl
adc
xchg
xor
xlat
sub
adc
bound
push
mov
lods
mov
dec
and
hlt
push
xchg
inc
mov
adcb
sbb
call
xchg
push
cmp
popa
dec
dec
jno
aam
pop
sbb
sbb
fisttpl
jle
cmpsl
int3
and
xchg
nop
inc
aad
sub
fmulp
pop
scas
das
lods
ja
mov
adc
pop
cwtl
popa
addr16
std
cld
mov
dec
add
ljmp
cmp
out
inc
jl
outsb
pushf
stos
adc
jno
cmp
lods
jo
pusha
fsubs
pop
dec
mov
and
leave
int
lret
and
ret
xor
or
ret
jns
sti
inc
pushl
outsb
mov
push
aas
pop
inc
pop
pop
fdivl
mov
and
and
pop
mov
inc
add
add
jae
adc
push
pop
je
push
push
inc
push
or
adc
test
je
test
testb
and
fwait
and
bound
pop
push
adc
sti
sbb
xor
push
roll
gs
push
sbb
insb
add
into
repnz
push
and
mov
mov
loopne
mov
mov
stc
cmp
cmp
addl
xor
repz
sub
clc
push
repnz
lods
leave
into
pushf
shlb
mov
int
fisubrs
cmp
sbb
repnz
bound
push
std
dec
sbbl
push
aad
stos
cli
dec
mov
cwtl
add
aaa
imul
xchg
jmp
mov
mov
mov
inc
mov
insl
inc
in
mov
lea
cwtl
xor
or
ret
sahf
sub
jnp
mov
dec
mov
imul
sbb
ds
xchg
lds
or
jne
mov
mov
and
or
out
lods
add
pop
fdivr
adcb
test
arpl
dec
xor
test
inc
lds
mov
and
fimuls
sbb
push
pop
stos
mov
mov
push
out
push
enter
fisttpl
add
xchg
cmpsl
sub
dec
insb
enter
stos
jne
fucomi
cmc
out
loope
addr16
jns
cmp
jnp
ror
inc
and
test
popf
dec
ljmp
sbb
adc
fs
jge,pn
xchg
push
pop
jle
mov
and
adc
cmp
cmp
dec
push
dec
or
sub
jmp
into
pop
jb
js
lcall
ficompl
jne
aam
out
sbb
mov
cld
dec
enter
cmpsl
inc
inc
lcall
or
lret
ljmp
hlt
sub
lahf
adc
mov
lods
sub
xchg
les
cmp
loop
xor
lods
ss
add
mov
jmp
and
or
jbe
lret
or
shl
shll
jmp
loop
xchg
xor
add
clc
insl
es
and
push
test
test
fisubrs
adc
pop
mov
cmp
push
imul
cmp
mov
int
xor
cmp
jno
cmp
sub
jbe
dec
mov
mov
pop
adc
mov
sti
orl
inc
rorl
mov
pushf
and
and
lods
cld
inc
dec
lods
frstor
and
mull
pop
pusha
and
lods
orb
leave
es
push
int3
loope
cmpsl
lret
ljmp
pop
into
push
push
fsubrl
xlat
jb
popf
lods
cmp
adc
mov
mov
jmp
jmp
sbb
adc
into
xor
sub
movb
add
shll
add
mov
addr16
sbb
popa
lret
fistps
js
ret
mov
push
xchg
add
and
in
bound
adc
adc
ret
cmp
fs
sbb
leave
jae
imul
lahf
sbb
fwait
add
cmpsb
mov
adc
fsubrl
mov
lret
loopne
mov
inc
ret
stc
mov
jne
fwait
dec
stos
dec
imul
gs
sub
lahf
and
sar
adc
push
mov
daa
sti
mov
int
sub
sbb
mov
mov
fadds
jae
fidivl
mov
adc
xor
dec
and
push
jge
lock
fs
jge
inc
and
cmp
sub
ret
xorb
and
sbb
pop
inc
or
aad
inc
jmp
aad
mov
clc
or
inc
incb
pop
push
nop
mov
push
mov
mov
mov
sub
loope
repz
sub
ja
pop
mov
dec
std
outsl
sbb
dec
in
mov
arpl
xor
push
je
insl
sbb
fisttpll
lds
popl
data16
lcall
pop
jg
insb
fiadds
cmp
bound
jbe
xor
and
ret
mov
push
outsb
hlt
aas
dec
or
gs
sbbl
repz
xchg
movsl
jmp
fcmovbe
cltd
push
adc
movsl
and
hlt
cld
mov
jmp
jno
dec
push
push
repnz
mov
inc
xor
int3
ret
pop
jl
add
mov
test
or
inc
cmp
or
rcrl
leave
xor
push
or
add
data16
push
xor
inc
push
xchg
dec
and
mov
es
out
add
ret
cmp
pop
jne
fisubrl
int
add
add
xor
lods
fwait
decb
lret
jg
sbb
rcrl
es
ror
jbe
ds
jns
cli
call
fisubs
cs
xchg
pop
pop
adc
addb
inc
lahf
cmp
jns
ss
aas
in
shl
xor
sbb
int
xor
add
arpl
adc
sub
inc
mov
rorl
scas
testl
pop
popf
mov
add
int3
add
add
and
xchg
int
mov
cmp
push
xchg
inc
cmp
jnp
ss
pop
xchg
jg
sbb
mov
bound
push
add
jbe
rorb
sahf
into
push
adc
mov
jb
sbb
cmp
ds
in
add
ljmp
out
sahf
mov
clc
adc
sub
daa
or
shll
cli
in
cmpsb
imul
addr16
xchg
cmpsl
ret
xlat
or
mov
pop
fucomip
imul
shl
test
add
mov
or
js
punpcklwd
cmp
jge
cmp
lcall
lcall
daa
pop
add
in
push
xor
push
pop
mov
xor
sbb
jbe
call
xchg
xchg
jo
jnp
xlat
not
fdivs
sbb
paddd
sub
fcmove
ss
or
mov
sbb
jb
mov
and
nop
movl
scas
test
dec
mov
nop
xlat
lock
pop
and
or
and
sahf
inc
adc
xlat
pop
dec
jecxz,pt
xor
xchg
shll
shll
add
inc
xor
and
lcall
dec
mov
ljmp
loop
insb
xchg
dec
mov
sbb
dec
push
xchg
cmpsl
pop
lea
add
les
pop
mov
arpl
out
adc
arpl
jle
push
dec
jne
arpl
jl
roll
scas
xor
jmp
mov
sub
xchg
stos
push
cmp
cld
and
gs
cmp
mov
xchg
in
xorb
into
mov
mov
out
rorb
xchg
rcl
or
push
push
adc
add
fnstenv
fs
jbe
enter
scas
sub
repnz
or
pop
push
adc
pop
push
mov
jmp
leave
and
mov
xchg
dec
push
cwtl
mov
mov
jne
and
cmp
in
push
pop
in
sbb
pop
pop
xorb
scas
mov
test
pop
ss
and
adcl
xchg
jbe
addb
mov
fmull
lea
pop
stos
popa
xchg
mov
mov
in
sub
fidivrl
push
mov
xchg
test
adc
aas
scas
aad
mov
adc
scas
xchg
aam
xor
xchg
lcall
out
sbb
xor
sbb
push
jp
xchg
call
rorl
shll
sbb
cmp
repnz
outsl
xor
fwait
xor
stos
or
adc
ds
cmpsb
orl
cmovae
insb
xchg
xor
dec
adc
lds
or
or
cmpl
xchg
sub
cld
out
scas
ss
mov
xchg
mov
ja
data16
sahf
pop
sbb
jns
jle
add
mov
faddl
int3
popa
push
and
adcb
std
add
aas
dec
popf
xor
rolb
inc
orb
dec
and
pop
cltd
stos
sub
xlat
dec
sub
or
cld
into
mov
adc
xor
mov
fwait
pop
or
stos
dec
icebp
sti
push
gs
pop
pop
repz
xchg
xchg
jecxz
jb
jmp
fwait
stc
insb
dec
xlat
test
lock
xchg
pop
lcall
and
popf
cmp
xlat
push
jo
mov
xchg
xor
pop
and
aad
push
fisttpl
pushf
clc
sub
mov
in
icebp
out
mov
sahf
das
call
ret
dec
or
in
in
lock
jp
and
imulb
testb
ror
mov
test
cli
add
lret
aam
mov
jmp
ret
push
test
mov
xchg
lahf
adc
push
dec
je
jnp
mov
jp
push
pop
lcall
idivl
cmp
cltd
aas
xchg
mov
fsubl
daa
dec
cmpsl
and
xchg
movsl
jnp
sbb
in
and
xchg
pop
test
xchg
arpl
fimuls
stos
mov
inc
enter
jae
pop
fisttpll
mov
test
lds
nop
hlt
xchg
lods
dec
aas
cmp
dec
outsl
mov
in
jecxz
pop
cmp
mov
jg
jb
add
shll
fdivl
repz
add
dec
adc
xor
or
mov
mov
gs
xor
mov
stc
push
sub
fisubrs
js
mov
fisubrl
aas
add
lret
data16
or
cld
adc
cmp
jae
sbb
xor
jge
stos
lcall
cltd
pusha
inc
call
mov
inc
cmp
mov
fcompl
mov
adc
iret
jg
roll
mov
jp
inc
push
pop
ret
jo
ds
inc
jmp
fmul
movsb
sbb
mov
inc
lods
cmp
inc
movsl
loop
inc
movsb
xchg
pop
fnstsw
test
test
sbb
lret
xor
mov
sbbl
jnp
push
lods
push
mov
push
js
inc
movsl
mov
push
mov
jmp
std
sahf
xor
inc
cmp
sub
pusha
lods
pop
cmp
mov
xor
mov
iret
je
dec
jmp
jmp
int3
fdivrl
or
mov
enter
fsub
jl
sbb
push
mov
sbb
stos
test
xchg
adc
cwtl
loop
add
fisttpll
icebp
pop
inc
int3
adc
mov
jmp
das
outsb
cwtl
pop
cli
mov
iret
or
push
jge
mov
sub
pop
cmc
gs
inc
mov
daa
xor
sbb
gs
xor
pop
outsb
stos
and
orl
mov
mov
mov
fdivl
sbb
pop
or
fstp
cmp
dec
es
jl
popf
cli
push
ds
pop
movsl
inc
insb
jecxz
out
cmp
push
xchg
or
test
shll
mov
lcall
xor
adc
in
add
jo
xchg
xor
jecxz
adc
gs
sbb
mov
test
outsb
mov
jo
subb
iret
fnsave
pop
adc
dec
dec
cmp
push
sub
sbb
mov
mov
imul
push
mov
sti
fildll
add
fmuls
out
xor
push
sub
mov
aas
fisubrs
mov
icebp
jecxz
pop
incb
mov
mov
int3
cmc
pop
aam
sub
aas
fldcw
or
test
dec
jns
rclb
in
push
mov
or
ffreep
dec
popf
add
outsl
jnp
pushf
dec
shl
pop
popa
push
xchg
adc
push
xor
push
mov
dec
jno
repnz
mov
mov
shrb
clc
lods
repz
xchg
add
call
mov
outsl
sti
addr16
push
xchg
or
scas
mov
dec
lea
pop
jp
popf
ja
shll
push
xlat
inc
cmp
in
arpl
or
add
sub
out
cltd
dec
xlat
icebp
cltd
daa
sarl
xor
stos
ret
push
gs
outsl
xchg
push
js
hlt
add
iret
mov
xlat
inc
add
jo
dec
push
icebp
dec
mov
lods
mov
orb
lds
outsl
jle
adc
mov
mov
not
cmpsl
sbb
pop
xor
mov
mov
sub
ljmp
or
insb
cld
dec
fistps
mov
aaa
xlat
mov
cltd
jg
sbb
rclb
inc
jno
mov
xlat
pop
dec
shl
pop
or
adc
in
sbbl
jb
mov
loope
and
mov
mov
popa
nop
in
fsts
fs
cwtl
test
ficompl
jnp
pop
fcmovbe
pop
aad
pop
cmp
cmpsl
scas
mov
decl
lahf
mov
lahf
ljmp
cmp
jge
push
and
mov
fidivs
clc
jbe
pop
pop
adc
ljmp
sub
call
pop
add
mov
pop
imul
shrb
mov
out
add
sbb
jno
in
cmp
adc
sbb
or
jge
dec
inc
pop
mov
ss
lcall
mov
insb
xchg
movq
xchg
xor
aaa
cmp
or
inc
ljmp
mov
sbb
js
add
icebp
fcoml
xor
aaa
or
scas
push
stos
push
and
adc
xor
fsts
popa
leave
inc
mov
push
xor
aas
mov
out
adc
ss
inc
xor
mov
inc
int3
imul
mov
mov
pop
mov
jl
push
and
sub
mov
das
mov
pop
add
fwait
subb
rorb
or
out
dec
in
fidivs
pop
in
inc
xor
stos
or
xchg
adc
push
sahf
push
stos
pop
xchg
dec
pop
in
leave
int
in
or
imull
adcb
jo
and
popf
mov
inc
jge
in
push
sbb
je
push
push
faddl
jmp
xchg
xor
push
push
adc
xchg
out
addl
inc
mov
int3
or
adc
cs
cmpxchg
sbb
jmp
dec
lret
insb
jae
insb
movsb
jl
xor
push
mov
out
jmp
cmp
repz
out
test
mov
push
insb
cmpsl
pop
lods
jns
pushf
cli
sahf
ja
xor
stos
movsl
addr16
pop
xor
lods
inc
out
fs
mov
out
xlat
insb
gs
fbld
rorl
rcl
inc
xchg
gs
test
push
rol
out
xchg
xlat
mov
push
adc
jg
dec
test
clc
es
jg
in
and
pop
fcompl
push
clc
mov
movlps
test
xchg
jl
aaa
dec
mov
dec
pop
rcl
push
sbb
dec
lahf
xor
icebp
pop
jge
stos
inc
das
add
decb
aas
xchg
in
push
lock
mov
adc
cmp
jo
aas
int3
mov
arpl
push
pop
fadds
rcrl
test
out
jecxz
les
outsl
in
sbb
es
std
dec
les
fs
les
adc
outsb
dec
jo
pushl
leave
cld
pusha
sub
cmpsb
adc
mov
adc
jp
xlat
mov
out
pop
adc
mov
lret
push
mov
xlat
lret
repz
xchg
das
repz
add
dec
sahf
in
outsb
mov
cmp
mov
lock
xor
ss
xor
adc
data16
std
lock
pop
daa
js
xorl
mov
push
mov
mov
insb
push
out
add
test
lahf
or
lcall
push
int
fdivr
add
inc
add
inc
lods
pushf
test
dec
fstpt
repz
out
pop
rcrb
not
stc
sub
insb
jecxz
ret
cwtl
mov
mov
and
movsb
inc
jae
jg
aad
or
push
mov
adc
xchg
ret
sbb
or
icebp
roll
dec
xlat
je
cltd
adc
test
or
pop
lret
pop
add
call
gs
lea
mov
in
xor
arpl
cld
test
mov
into
and
sub
bound
inc
popf
out
fld
xor
pop
gs
dec
icebp
mov
sub
mov
mov
leave
in
jnp
pop
es
cmp
dec
mov
mov
sbb
aas
shll
xor
ss
mov
jecxz
testb
mov
ljmp
loope
jp
lret
add
lahf
xchg
sahf
mov
and
jl
xchg
adc
ss
mov
je
adc
add
inc
adc
out
idivb
cmpsb
mov
std
data16
xchg
rorb
ljmp
mov
cmp
inc
popf
mov
test
repz
sbb
aaa
push
adc
xchg
lret
bound
repnz
ffreep
movsb
cmp
fstl
adc
add
sbb
mov
mov
test
adc
fldt
and
mov
and
xchg
in
jo
push
push
sbb
lcall
xor
stos
mov
or
daa
mov
lcall
mov
shl
push
pop
cmpsl
scas
sbb
pop
mov
add
and
scas
icebp
cmp
data16
jmp
jns
or
add
and
or
xrstor
sbb
pop
lods
in
xor
push
mov
leave
movb
dec
cmp
sbb
cwtl
call
push
pop
pop
outsl
mov
jle
jo
sbb
data16
jg
push
pop
and
sbb
xchg
shl
data16
xor
jo
cmp
and
add
sub
sub
sbb
rclb
repnz
jl
or
shrl
out
xor
mov
mov
arpl
insb
mov
ja
ds
cld
xchg
add
dec
xchg
and
push
pop
lcall
repz
out
into
loope
jae
ljmp
and
jo
jle
jo
insl
cmpsb
push
pusha
add
loopne
xor
jnp
insl
cmp
mov
sbb
mov
arpl
js
jnp
push
push
sbb
int
xlat
pop
inc
add
xchg
lods
cltd
sbb
cwtl
push
xchg
lds
mov
jmp
popf
mov
dec
cwtl
jmp
cmp
inc
leave
fisubrs
ret
sub
xchg
loop
outsl
divb
sub
jns
mov
push
mov
add
ss
mov
aas
mov
out
mov
leave
jmp
addr16
lods
and
dec
cltd
mov
and
adc
xor
sbb
or
shl
inc
mov
pop
jmp
pop
mov
xchg
movsl
jne
pusha
hlt
and
cli
push
rorb
imulb
lret
fstpt
mov
int
mov
pop
xor
popf
or
push
hlt
rcll
loope
sbb
fsubrs
fdivl
in
sbb
popa
adcl
dec
cmp
iret
adc
xchg
sbb
pop
xorl
loopne
and
sub
pop
arpl
notl
xchg
xor
imul
mov
sbb
jle
mov
dec
lahf
scas
hlt
or
xor
mov
pop
or
pop
loop
addr16
mov
cwtl
mov
mov
add
pop
and
adc
inc
int
aam
push
mov
aas
push
adc
add
mov
adc
add
dec
sub
jno
pop
aaa
movsl
lcall
mov
icebp
adc
pop
dec
adc
cmp
gs
out
adc
inc
cmp
fdivr
sbb
jecxz
mov
div
adc
xor
sub
imul
imulb
xor
dec
and
jbe
mov
cmp
sub
mov
or
test
push
pop
add
inc
sub
jge
imul
fdiv
jae
cmp
rclb
xlat
mov
popf
add
imul
pop
mov
loop
or
clc
shrl
inc
and
mov
lds
into
sahf
bound
in
jae
or
ffreep
dec
notb
jae
cmpsl
fisttpl
mov
js
xor
lds
ljmp
push
jge
sbb
sbb
or
fidivrs
mov
jg
push
rorb
hlt
jl
lcall
ds
push
sub
adc
loope
fnstenv
out
dec
sub
sub
mov
inc
aas
sar
push
aad
xchg
push
vpunpcklbw
fwait
aad
cmp
nop
sbb
orb
mov
bound
push
fstps
jge
andl
out
aaa
int
fwait
sti
prefetch
jae
aaa
or
ds
ds
dec
xor
inc
pop
or
add
test
and
testl
push
icebp
insb
xor
cmp
popa
jecxz
mov
pop
push
pop
mov
add
add
adc
xor
xchg
test
push
cmp
loope
inc
insl
jl
cmpsb
dec
xor
int
xchg
repz
inc
outsb
jge
mov
jecxz
xor
aam
xchg
xchg
insb
dec
pop
data16
dec
jl
mov
clc
aad
les
repz
dec
out
and
cmp
jbe
sarl
and
lcall
mov
or
sar
int
int3
mov
push
push
scas
pop
push
insb
repnz
xchg
xchg
lahf
addr16
jo
mov
mov
pusha
dec
xorl
mov
xchg
dec
xchg
or
jne
inc
push
push
rorl
movsb
push
inc
jnp
cmc
sbb
rorb
loop
sbb
cmp
dec
sbb
rcll
ret
ja
mov
cmpsl
add
push
ljmp
mov
nop
xor
into
sbb
sub
bound
dec
icebp
mov
outsb
cs
rcl
js
cmpsl
cmp
cltd
adc
pop
cmpb
lea
cs
flds
mov
lods
out
mov
jnp
jecxz
push
mov
rol
jne
sub
mov
repnz
iret
fwait
adc
ficomps
jae,pn
jbe
pushf
xchg
sbb
mov
mov
jmp
ss
sbb
mov
mov
aas
adc
adc
inc
mov
mov
out
jne
jle
sub
mov
sbb
adc
jecxz
pop
xor
and
mov
adc
test
repnz
pop
cltd
mov
repz
sahf
sub
shrb
lret
inc
jmp
sub
es
mov
xchg
stc
or
hlt
scas
sbb
in
sub
dec
add
dec
fbstp
js
sbb
aam
outsb
out
or
fs
cmp
in
fdivs
push
flds
sub
loope
cmpsl
jecxz
jno
or
shlb
mov
idivl
mov
jae
dec
xchg
sbb
int
inc
inc
mov
and
cmp
cmpsl
adc
scas
loop
sub
mov
nop
mov
jbe
insl
mov
fld
sbb
pop
ret
scas
sarb
xchg
nop
add
sbbl
pop
dec
mov
ds
ror
enter
lods
push
test
mov
cmc
pop
fdivr
push
xchg
fisubl
mov
lea
xchg
mov
nop
aad
mov
mov
test
xchg
jg
push
insl
dec
push
int
js
vpunpcklqdq
fstps
adc
imul
pop
jno
push
lods
push
cmp
inc
mov
loopne
out
mull
adc
loopne
stc
daa
sub
mov
insl
scas
sub
test
xchg
fwait
aaa
pop
jle
push
adc
hlt
or
hlt
aam
lods
jecxz
mov
aaa
xor
fisubs
icebp
inc
mov
std
mov
mov
adc
mov
cmc
sbb
testl
cmovns
add
mov
aam
es
jg
and
aaa
mov
xchg
jns
rep
andl
cmp
inc
lods
inc
push
push
notb
cmp
dec
aad
rol
adc
enter
or
jle
dec
ljmp
sub
ds
cmp
and
pop
cmp
out
xor
int3
pop
mov
roll
rorl
sub
call
ret
adc
repnz
dec
fcom
xchg
bound
adc
rorl
and
popa
ret
jle
xor
pushf
pop
inc
dec
les
aaa
cld
dec
and
lods
push
rcll
jae
ret
aaa
stos
inc
jae
lret
std
outsl
mov
add
add
repnz
xor
je
idiv
scas
in
fsubr
popa
les
xor
xchg
add
push
incl
push
iret
fwait
pushf
mov
mov
inc
fs
out
sarl
inc
dec
cmp
or
sub
sbb
push
repnz
aam
adc
shrb
lret
enter
nop
out
fsts
mov
xchg
stos
popf
fiadds
sbb
adc
pop
fdivrs
lret
rol
lcall
push
cltd
gs
fisubl
out
xchg
inc
xor
sub
jae
jbe
bound
dec
push
sub
mov
push
mov
pop
aas
push
mov
movsbl
jle
out
mov
jno
mov
insl
xor
xchg
ret
jns
les
in
jmp
movsb
xor
dec
sub
mov
sahf
std
adc
ret
fstpl
rcl
sub
fdivrl
dec
xchg
lds
gs
or
or
inc
add
mov
jmp
jecxz
in
ljmp
idivl
dec
push
sarl
or
xor
les
pop
in
in
scas
mov
cld
jp
lret
out
repnz
mov
push
mov
xor
cmc
inc
sbb
loopne
mov
sbb
add
cmpsb
out
xor
bound
jmp
sub
and
clc
push
pop
shll
adc
test
pop
xchg
sbb
jg
test
cmpsl
stos
xor
insl
xchg
in
xor
out
fdivrs
mov
sahf
mov
cmp
push
out
inc
sbb
mov
push
into
fdivl
rep
pop
sbb
aas
hlt
mov
mov
push
mov
popa
sub
adc
push
stc
xor
shll
pushf
lret
leave
call
stc
or
mov
xchg
ljmp
mov
adc
cmp
idivl
pop
sub
test
pop
dec
and
push
ficompl
adc
sub
loopne
cli
rorl
xor
push
daa
add
mov
xchg
fistps
jl
sbb
jg
mov
mov
lods
das
mov
imul
mov
int3
imul
adc
xchg
mov
mov
jecxz
mov
lods
fsubr
xchg
inc
xchg
stos
dec
popa
dec
push
mov
cmp
xchg
cmpsl
aam
aas
xchg
pop
lds
sub
add
daa
gs
and
stos
inc
addl
mov
daa
xchg
cmpsl
aam
subl
xchg
mov
rorb
sbb
out
repz
push
push
pop
push
adc
pusha
xchg
mov
xchg
push
test
push
fisttpll
mov
mov
sbb
mov
pop
push
mov
mov
jae
ret
cmp
push
push
sahf
sti
push
mov
div
xor
mov
adc
aad
int
imul
push
stc
sbb
mov
and
cmp
daa
mov
imul
stos
jmp
addr16
add
pop
test
js
ja
dec
shl
or
dec
jo
or
sub
mov
fstps
sub
jne
mov
fimuls
pusha
dec
enter
jns
in
cmp
leave
sti
fisttpll
lds
loopne
cli
cmp
aad
cmpsl
push
rclb
fnstcw
les
out
push
pushf
arpl
dec
jle
xlat
ja
jbe
jae
je
insl
repz
pushf
add
in
xor
and
mov
or
ficomps
subl
pop
cli
hlt
paddb
push
cmp
bound
xchg
inc
notb
pop
cmp
data16
sub
push
mov
pushf
sub
push
mov
jo
out
jae
dec
in
pop
pop
fmuls
cltd
mov
mov
cs
lret
lcall
mov
out
xchg
mov
push
jle
sub
push
pusha
mov
int3
insl
lret
xor
int3
in
lea
or
sbb
lods
jmp
orb
movsb
jnp
pop
inc
or
dec
push
js
mov
enter
clc
sub
sbb
push
cmpl
ja
cmp
mov
xchg
stos
adc
fstl
cs
cmpsl
pushf
sub
insl
pop
push
push
mov
jge
inc
adc
cmp
mov
jb
adc
xor
leave
movsl
mov
adc
in
sbb
push
sbb
ficompl
adc
xchg
mov
idivl
jae
pop
mov
lcall
mov
sub
loop,pt
call
lds
dec
xchg
popa
test
bound
in
add
movsl
out
dec
sub
add
test
cs
inc
sub
pop
cmp
ljmp
incb
inc
and
call
mov
inc
jae
mov
jae
pop
leave
fisttpll
push
push
enter
sar
mov
lods
mov
jecxz
rol
xchg
ljmp
insb
sbb
sub
and
mov
std
bswap
and
adc
or
jmp
or
insl
sbb
out
adc
adcl
dec
movsl
repz
aas
cmp
iret
call
mov
lods
roll
jl
fildll
pop
xchg
mov
xchg
std
push
push
jle
sub
sbbb
pushf
leave
test
call
jbe
pushf
mov
mov
ret
mov
out
aam
cmc
jmp
add
adc
xchg
inc
or
movsb
dec
push
lods
lahf
sub
aaa
and
call
popf
xchg
adc
inc
in
lea
dec
imul
dec
dec
out
stos
xor
mov
jmp
and
mov
ds
aaa
mov
inc
ds
jg
ficoms
push
lds
mov
jns
jno
test
ja
pop
sbb
fdivrs
fadds
dec
adc
roll
and
stc
scas
mov
inc
inc
test
loop
repz
arpl
xchg
sub
rcrb
fnsave
sbb
cltd
add
xchg
fs
xchg
or
jmp
xchg
xor
lcall
nop
lcall
push
dec
or
xchg
pushf
push
jne
addr16
cmp
sbb
pextrw
inc
loopne
add
cmp
mov
sti
arpl
dec
gs
rorl
or
xor
adc
adc
xor
pop
dec
pop
xchg
in
fistps
icebp
js
mov
in
xchg
sub
add
push
xlat
or
aas
xlat
pop
nop
ja
jge
jecxz
dec
push
dec
xchg
mov
jmp
movsl
mov
adcb
in
data16
clc
loopne
adc
or
movsl
cmp
cwtl
outsl
pop
mov
dec
xchg
mov
cmpsb
adc
xchg
icebp
inc
dec
arpl
or
test
pop
pushf
dec
int3
fiaddl
mov
sub
leave
mov
and
ds
dec
push
sbb
push
mov
mov
lods
std
mov
ficoml
cltd
fbstp
fsubl
scas
lret
aam
sub
cmpsb
imul
mov
inc
in
scas
add
fldl
in
mov
add
mov
jns
add
repnz
or
mov
mov
dec
mov
mov
xchg
push
loope
jns
inc
inc
pop
imul
cmp
add
jbe
xchg
sub
inc
inc
clc
divb
mov
gs
and
dec
pop
push
mov
ljmp
loop
ret
push
inc
or
aad
sbb
inc
test
xchg
in
lahf
enter
aam
mov
into
mov
adc
pushf
mov
lea
push
jg
icebp
push
std
mov
pop
loopne
push
push
cmp
mov
sbbl
lcall
mov
aad
xchg
in
dec
stos
cmp
cmpsl
dec
dec
ret
pop
lods
gs
mov
outsl
push
sub
sub
sub
ret
add
inc
fsubs
xchg
test
and
shll
decl
dec
fsubr
pop
not
mov
popa
mov
lret
sbb
push
adc
mov
sti
out
loop
js
lret
push
ljmp
out
pop
jne
mov
clc
jns
adc
stos
sbb
outsl
xchg
into
dec
aam
iret
adc
and
or
rolb
test
lret
out
fwait
and
lods
imul
push
xor
rorb
in
xor
pop
mov
push
scas
sbb
fcomps
mov
and
jl
push
sti
push
adc
pop
xor
lret
stos
or
int3
lcall
or
mov
sub
xlat
leave
leave
cmc
sub
or
push
adc
inc
movups
out
jge
or
sti
mov
bound
lods
mov
xlat
fstl
xchg
rcrl
push
and
mov
sbb
cltd
insl
or
ss
or
je
in
ds
lcall
inc
mov
test
push
int
adc
aaa
jg
aaa
gs
pop
mov
outsb
and
outsl
mov
sbb
jns
rcrl
adc
inc
inc
inc
out
add
in
loope
mov
cltd
loope
mov
push
xor
std
sub
and
xchg
call
mov
mov
push
movsl
popa
fucomp
leave
cmp
push
rclb
ret
push
xchg
outsl
out
clc
adc
outsl
sub
pop
adc
cmp
adcl
mov
push
cli
fwait
scas
dec
inc
pop
int3
jns
xor
mov
xchg
sbb
mov
or
inc
push
or
rcrl
cmp
push
cmp
adc
mov
sbb
aam
or
dec
xchg
push
gs
js
or
js
xchg
mov
or
out
cwtl
stos
ss
or
mov
imul
repnz
dec
ret
rorl
jmp
push
pop
int
sub
js
mov
mov
add
inc
xor
leave
test
and
cmp
xor
mov
fxch
aas
aaa
xchg
popa
and
lods
fs
mov
dec
jp
imull
sub
aam
push
leave
push
inc
ds
aam
out
repnz
push
inc
xor
and
popa
popf
mov
fcoms
jle
sbb
ss
outsb
mov
mov
mov
adc
xchg
add
test
or
rclb
and
ljmp
pushf
sub
push
ret
rorb
jle
push
cmpb
cwtl
adc
and
ja
bound
xchg
cwtl
dec
dec
lret
andb
dec
sbb
cli
mov
xor
sti
lret
incb
pop
dec
int3
and
cmp
sub
sub
push
shlb
xchg
icebp
add
push
icebp
lds
and
inc
js
jg
ret
adc
scas
cmp
cld
bound
shlb
out
test
jmp
arpl
or
jp
addr16
push
call
pop
add
test
jnp
mov
mov
add
sub
cld
mov
cmpsl
xlat
jecxz
popa
lock
push
loopne
or
mov
mov
sbb
test
out
out
clc
xor
push
aam
jp
pop
sahf
mov
in
cmp
xchg
dec
lea
adc
inc
pop
dec
xor
cmp
sbb
xchg
adc
inc
insb
inc
test
scas
jg
fldcw
fs
fisttpl
cmp
sbb
scas
sub
jnp
jge
int
out
nop
jo
test
test
rclb
lcall
outsb
adc
sub
mov
sbb
sbb
inc
out
xchg
in
cmp
loope
or
mov
sarb
xchg
xor
dec
fwait
inc
or
lcall
into
bound
mov
sbb
ss
push
fiaddl
push
insb
rclb
bound
jnp
testl
icebp
mov
pop
pop
stos
push
dec
repnz
pop
je
mov
sbb
and
pop
stos
mov
cmp
subl
subb
mov
dec
cld
xor
inc
mov
or
cmp
jns
sbb
lret
sbb
data16
sub
push
push
lods
pop
cmc
imul
bound
inc
push
outsb
and
ret
mov
mov
in
rolb
mov
call
dec
jl
push
insb
bound
ret
jns
and
idivl
xchg
push
sub
cli
sti
push
dec
and
pop
sub
xchg
shll
xchg
dec
xchg
mov
aaa
mov
outsb
sar
and
cmp
mov
lds
es
jle
xchg
sub
jns
inc
sub
decl
scas
call
pop
adc
data16
jae
hlt
mov
ret
imul
sub
cmpsl
xlat
aaa
les
inc
int3
sbb
and
jno
testb
test
or
jle
imul
dec
into
icebp
ret
xchg
iret
sbb
sub
and
jp
or
or
loopne
fs
jae
mov
lcall
aam
decb
push
xchg
test
inc
pop
test
dec
mov
popa
rcrl
pusha
scas
bound
arpl
jle
rcpps
int
imul
or
ds
call
push
jp
cmpb
or
fsubl
lods
cmp
outsb
cmp
shr
repnz
aad
push
inc
inc
mov
or
inc
dec
sub
les
cli
es
in
inc
loop
jl
cmp
dec
out
stc
sub
push
cld
ja
outsl
into
fstps
pop
jl
fs
sub
fadds
or
inc
pop
jae
xchg
sub
sbb
sbb
outsl
pop
xor
and
cmpsl
dec
sub
pop
xchg
loope
cmpsb
leave
lcall
xchg
push
xchg
xor
add
jns
scas
mov
test
inc
jg
fs
mov
ror
fldl
jl
add
mov
cmp
jae
mov
cwtl
push
add
push
add
into
rclb
stos
ret
push
hlt
lods
test
adc
sub
call
cmp
and
xlat
notl
jecxz
ds
rcll
pop
fdivl
loop
push
pop
enter
frstor
popf
mov
push
mov
sbb
jbe
js
mov
shlb
dec
out
jle
and
push
stos
repnz
mov
mov
or
fs
xor
dec
rol
lods
mov
add
out
xchg
mov
jle
lahf
dec
dec
inc
leave
idivl
and
scas
ret
xchg
insl
fisubl
movsb
popf
aaa
mov
stos
push
shlb
xor
mov
sbb
xor
loop
sbb
ret
push
icebp
lds
sbb
outsl
pop
push
movsl
pop
jp
loope
fwait
xor
sbb
pop
xchg
fimuls
mov
or
les
int
adc
loope
insl
mov
lea
or
int
mov
cmp
xor
stos
pop
ja
hlt
cwtl
mov
in
mov
inc
arpl
fwait
hlt
sub
cmp
mov
adc
and
jp
lgs
in
fwait
cwtl
inc
rclb
inc
mov
je
out
sub
push
sbb
lret
dec
push
adc
add
jbe
push
je
pop
mov
rclb
dec
test
loopne
jl
push
lds
xchg
pop
repz
pop
repz
jne
adc
mov
negl
shlb
ss
mov
sub
lret
jle
mov
dec
andb
fdivl
popa
xor
lea
ja
pop
fwait
int3
push
mov
loope
mov
dec
mov
lcall
movsb
sbb
push
inc
call
cmp
out
mov
push
decb
int
sub
pop
test
sub
xchg
fildl
shr
cld
mov
lea
jg
mov
sub
fdivl
fldcw
jle
add
fwait
lods
js
das
divl
rcrb
jecxz
test
shlb
test
sbb
sbb
ss
xchg
inc
lret
dec
ret
in
in
sbb
dec
jl
cmpsl
jb
lods
ljmp
les
test
lret
popa
orb
pop
xchg
in
cmpsb
hlt
push
icebp
or
fs
adc
xchg
jo
sub
test
test
push
insl
cli
lcall
push
mov
mov
jl
lret
cmp
jno
pop
jnp
filds
cmp
movsb
adc
out
add
and
dec
gs
loop
test
pop
pop
jmp
aam
repnz
jno
sbb
jns
or
xor
sbbl
dec
ja
mov
stc
push
push
inc
repz
frstor
cltd
mov
jp
in
and
xor
fcoms
test
inc
sahf
int3
xchg
mov
dec
ja
sbb
inc
add
xchg
sub
subb
test
stos
lock
push
dec
fs
movsb
ss
les
jnp
push
xlat
es
mov
xchg
in
lods
cs
lock
lea
sarb
das
cmp
rolb
jbe
lahf
cmp
sub
mov
bound
jecxz
cmc
ss
lahf
xor
scas
arpl
out
out
ret
mov
data16
sbb
mov
or
add
rclb
mov
imul
and
push
mov
xor
adc
fistl
mov
test
jns
jg
js
push
jo
idivb
cwtl
inc
std
insl
jne
adc
dec
or
pusha
js
ficoms
mov
mov
enter
mov
pop
es
ret
mov
test
pop
push
scas
in
popf
xchg
or
iret
jno
cmp
sbbb
pop
es
sbb
leave
mov
push
cltd
xor
idiv
jns
and
or
or
push
fwait
xchg
insl
es
sub
cwtl
sbb
dec
adc
icebp
dec
fwait
jns
test
xor
pop
data16
imul
popa
jo
dec
or
dec
rol
cwtl
pop
sarb
xchg
fimull
cmpsb
lods
jge
xchg
addr16
jmp
lods
mov
cli
push
push
fmull
xlat
repnz
cmp
arpl
add
bound
sarl
js
adc
enter
fistpl
into
repz
adc
jae
xchg
mov
lret
rcrb
cmpsb
push
test
pop
sub
push
or
daa
test
push
bound
fcoml
mov
imul
inc
cs
xor
mov
lods
add
pop
inc
dec
sbb
sub
lret
ficomps
sub
mov
cld
fmuls
mov
cmp
icebp
sbb
stos
mov
jle
lock
xor
out
shrb
xchg
mov
ja
mov
int3
mov
inc
es
xorl
lds
fucomip
popf
testb
cld
push
xor
mov
addl
cmp
mov
cwtl
dec
push
fnstenv
xorl
fmul
adc
cmp
bound
movsb
lret
xlat
and
loop
mov
pop
in
clc
movsl
dec
inc
sub
cmc
sub
std
lea
push
stos
xchg
movsb
idivl
daa
sub
sub
jmp
and
mov
sbb
and
lock
sti
mov
and
sbbb
cmp
dec
and
push
in
pop
push
mov
or
cmpsl
lds
and
test
scas
pop
adc
cmp
xchg
test
push
xor
ret
setge
add
jg
xchg
sti
aaa
stc
inc
dec
mov
mov
jge
xor
lcall
mov
xchg
pop
clc
adc
ret
je
fidivrs
jle
inc
pop
xor
adc
jle
mov
ds
xchg
rcrl
xchg
cwtl
aas
pop
pop
int
xchg
xor
je
pop
std
xor
movsb
hlt
arpl
cmpsb
ja
and
jg
addr16
xor
or
push
popa
inc
jnp
sub
sbb
cltd
cmp
push
sub
sub
pop
shlb
faddl
addr16
add
in
adc
and
inc
push
push
sbb
sub
lods
jbe
push
lret
adc
scas
in
jnp
enter
xor
xchg
dec
xor
pop
shl
jae
int3
pop
push
inc
js
jl
push
mov
adc
scas
xchg
mov
dec
jbe
xchg
repz
fistpl
rcrl
pop
jno
mov
pushf
sub
das
cmp
sub
icebp
aam
ror
or
cmpsl
lds
rolb
mov
add
mov
faddp
sarb
and
das
in
mov
xchg
push
neg
cmp
inc
push
leave
adc
jae
adcb
pop
imul
xlat
aam
ljmp
popa
stos
out
xor
jns
cli
or
aad
addr16
ljmp
call
scas
pop
lods
sub
jne
jp
push
int3
stc
pop
pop
inc
xlat
mov
hlt
sbb
lock
shr
jne
das
shl
jno
dec
fisttpll
cmc
and
stos
cmp
jmp
pusha
dec
jle
xchg
adc
push
icebp
mov
into
add
testb
add
adc
sub
add
pusha
imul
sbb
mov
inc
cmpsl
insb
xchg
orl
loopne
lods
pop
inc
sbbl
and
sbb
push
loope
in
pushf
mov
push
andnps
push
sbb
mov
mov
and
push
dec
pusha
push
cmc
mov
lock
and
js
fsub
adc
xchg
mov
stc
inc
inc
add
jo
dec
lret
aas
ds
adc
xchg
xchg
push
sbb
add
stc
popf
mov
add
in
add
sub
and
sbb
test
cs
mov
daa
cwtl
jmp
dec
xor
mov
fisttps
pop
xor
addr16
fwait
dec
jno
nop
xor
mov
movsl
inc
sbb
adc
push
popa
mov
dec
xchg
hlt
mov
mov
pop
sbb
or
sub
enter
inc
push
dec
popf
jns
hlt
push
lret
aad
inc
push
imul
push
inc
mov
sub
sbb
xchg
aad
cld
jo
into
sub
sub
fwait
mov
and
adc
sbb
push
into
xor
insl
clc
adc
dec
sbb
lds
cmc
pop
adc
ret
pop
ret
sbb
xchg
xor
clc
cld
pop
aaa
mov
mov
ja
dec
rolb
push
cmp
aaa
push
jae
xchg
inc
mov
pop
cld
test
mov
aas
int
sbb
xor
add
clc
pop
pop
iret
or
cmp
arpl
stos
in
dec
adc
lret
inc
dec
dec
add
mov
mov
negb
cmp
stc
and
xchg
cmp
push
push
and
jecxz
inc
dec
ret
test
push
push
sahf
xchg
add
jecxz
aad
jecxz
addr16
int3
xchg
mov
push
xchg
icebp
aam
fmulp
cmpsl
mov
pop
mov
adc
dec
push
or
or
push
fmuls
cmp
pop
and
push
movsb
xor
and
subb
rolb
nop
enter
push
cmp
add
int3
push
pause
andb
ljmp
xor
xor
repz
pop
adc
mov
pop
lahf
pusha
mov
cmpsb
shrb
jg
enter
mov
add
sub
mov
cmp
jo
pushf
movsl
rcl
popa
ret
decl
stos
out
addl
fmulp
or
out
lcall
fnstcw
in
daa
shll
mov
loop
icebp
jnp
sbb
fldcw
orb
lahf
inc
ds
lret
sbbl
mov
cltd
sbb
jg
insl
and
ljmp
in
enter
mov
movsb
or
mov
or
addr16
sbb
lea
push
jg
xlat
add
xchg
jg
pop
cwtl
fs
nop
sbb
add
fimull
push
push
int3
inc
jae
and
sti
mov
cmp
iret
xchg
jbe
jl
aam
or
xor
out
sbb
mov
ret
fsubrl
inc
test
int3
push
mov
inc
push
loop
out
popa
fs
mov
mov
inc
lret
push
dec
cmpsb
sbb
xchg
mov
dec
imul
push
shlb
hlt
mov
mov
int3
or
push
in
out
pop
mov
lods
adc
jle
sub
cwtl
lock
enter
inc
call
test
xchg
pop
sbb
lods
sbb
mov
dec
insl
xor
in
xlat
sbb
sti
imul
and
fsts
adcl
mov
fcmovnb
mov
in
stos
adc
sbb
lret
lock
out
cli
push
cmp
mov
adc
push
in
push
push
outsb
mov
or
dec
xor
and
pusha
jno
xor
out
sti
scas
pusha
leave
repnz
inc
pushfw
inc
dec
out
xchg
xor
aam
inc
and
push
inc
push
ljmp
fwait
pop
adc
fcomip
sbb
out
mov
mov
sbb
mov
push
jbe
fildl
popa
mov
scas
mov
add
aad
adc
scas
clc
in
ds
repnz
stos
mov
cmp
sbb
cmp
ficomps
scas
mov
dec
lret
mov
jbe
ja
cmp
insl
xchg
mov
or
repz
nop
sbb
insb
fbstp
imul
dec
dec
mov
mov
push
rclb
rorl
insb
mov
inc
in
dec
aad
dec
mov
push
or
je
add
xchg
es
sub
scas
and
and
test
sbb
sub
jbe
rep
adc
cmpsb
xlat
and
out
sbb
lods
mov
add
sbb
and
xchg
andl
cs
dec
mov
in
sbb
popa
in
cmp
sbb
sbb
leave
sub
ja
inc
mov
daa
dec
or
or
out
mov
inc
iret
scas
imul
mov
push
pop
lods
loop
inc
jo
mov
jmp
nop
xchg
in
jbe
cmpsb
imul
aaa
push
hlt
xchg
mov
jmp
cmpsb
aas
dec
pushf
dec
inc
inc
fisubrl
mov
sbb
xchg
outsl
aaa
insl
jge
jo
repnz
jmp
pop
and
iret
push
add
lods
dec
ret
pusha
shll
mov
push
xor
icebp
ljmp
mov
sbb
bound
js
adc
fwait
popa
push
mov
stos
push
and
cmp
aas
mov
inc
lock
mov
rol
jl
pop
mov
jge
les
mov
andb
push
pop
push
push
jae
stc
clc
cwtl
xchg
shl
jl
mov
push
mov
ret
fistl
lods
pop
nop
pop
sub
xchg
sahf
pop
inc
in
xor
cmc
js
mov
pusha
stos
or
jecxz
gs
enter
dec
sub
shrl
add
rclb
and
test
repnz
insb
mov
cwtl
jp
xchg
aad
loopne
inc
xchg
jne
add
cmp
mov
test
xor
outsl
outsb
sar
adc
aas
xchg
leave
cmc
or
pop
cmp
sbb
dec
scas
gs
mov
push
cmp
jo
fistps
in
or
movsb
mov
arpl
sbb
insb
push
gs
xchg
add
ficomps
sbb
add
arpl
cmp
adc
mov
jae
test
push
je
enter
mov
insl
subb
int
cmpsb
ret
repnz
test
fwait
pop
adc
imul
add
or
aam
inc
leave
xchg
scas
push
adc
rcll
call
clc
cwtl
mov
mov
leave
mov
hlt
push
adc
push
adc
data16
cld
mov
sub
int3
xchg
out
movsl
imul
mov
inc
mov
aaa
outsl
push
mov
xchg
mov
in
movl
sub
cmpsb
mov
out
sub
nop
adc
in
sub
cmp
pop
loopne
dec
sbb
jmp
ljmp
jne
pop
orb
cs
jbe
outsb
push
imul
push
xchg
xor
jle
push
push
lcall
faddl
shrb
or
js
cmc
fiadds
inc
mov
jno
stos
inc
push
ja
inc
sub
in
call
lret
ljmp
hlt
and
adc
out
out
dec
hlt
inc
adc
pop
enter
sub
addr16
bound
push
pop
rolb
fwait
adc
in
pop
pop
clc
je
and
into
fisubs
mov
or
pop
js
sti
jecxz
notb
pop
movsl
lods
sbb
cmp
inc
jne
outsl
movsl
movsb
into
mov
jge
xor
pop
andl
add
outsl
leave
scas
dec
push
mov
rcrb
nop
or
sbb
sub
adc
in
gs
in
aad
jl
adc
cwtl
jae
mov
mov
outsb
lahf
jbe
idivl
jne
pop
paddsw
mov
xchg
adc
push
mov
push
inc
ret
adc
xchg
rcrb
neg
aam
dec
xor
jmp
sbb
movsb
dec
psubw
mov
dec
orb
shrb
dec
mov
mov
sub
icebp
test
lret
add
add
in
jo
mov
pop
and
sub
gs
out
repz
adcb
push
or
in
sbb
mov
cmp
out
sub
sbb
repnz
push
sti
into
dec
and
push
and
movsb
pop
add
test
adc
call
leave
pop
fldt
mov
out
inc
sbb
cmpsl
cld
mov
push
mov
sti
scas
mov
cmp
stos
in
jmp
sti
sbb
divb
xor
aaa
movsl
arpl
das
mov
cmc
xor
xchg
xorl
adcb
cmp
loop
sbb
mov
and
xchg
jns
push
mov
pop
loope
enter
lods
mov
icebp
sub
pop
cmp
jl
je
into
push
test
adc
fistpl
xor
pop
lods
mov
inc
fiaddl
addb
mov
jge
daa
negb
ss
xchg
outsb
mov
mov
scas
pop
xchg
inc
ss
sbbb
es
mov
push
cmp
adc
arpl
xor
jmp
push
jno
cltd
pop
ffreep
loope
adc
into
push
and
lret
dec
and
jbe
xchg
xchg
testl
dec
test
xchg
neg
data16
fwait
movsb
and
mov
call
inc
divl
test
or
push
dec
add
dec
add
lock
enter
xor
stos
jecxz
dec
or
cmp
jecxz
xchg
cmpsb
adc
mov
shll
jno
or
cmp
out
arpl
pop
push
inc
fs
or
ret
pop
lods
mov
xchg
je
ds
mov
sub
jbe
add
jae
or
jne
mov
punpckhdq
mov
rorl
push
popf
pop
inc
out
fnstenv
and
movb
rol
stos
mov
out
dec
mov
xor
cltd
inc
lcall
je
out
stos
adc
cmpsl
jg
rolb
ds
mov
idivl
xchg
sbb
lock
ds
outsb
stos
pusha
add
loop
mov
out
mov
fcoms
jb
mov
aad
fstl
and
lea
xlat
cs
movsl
sbb
and
fidivrs
push
aad
jb
inc
repnz
es
fcmovu
cld
mov
push
aad
cli
mov
fs
in
add
fwait
or
es
stc
mov
fmull
pop
arpl
lods
xchg
cmpsl
or
jne
dec
pop
outsl
arpl
xchg
mov
xor
xor
push
adc
xchg
sub
jne
inc
cmp
stos
push
ds
add
pusha
mov
inc
jp
adc
stc
cmpsl
jge
popf
mov
in
jno
mov
popa
jl
mov
xchg
bound
and
mov
sub
stc
mov
ret
push
mov
out
sahf
cmp
inc
test
jge
mov
mov
sub
push
sub
xor
outsb
mov
cmp
leave
jae
and
jns
dec
jo
and
mov
cs
imul
cmp
sub
stos
lods
push
push
jb
pusha
inc
test
inc
negb
or
push
loope
add
or
or
bound
jb
adc
es
xor
ret
hlt
mull
add
pop
xchg
mov
cmp
jecxz
and
xchg
or
or
int3
movsb
dec
jl,pt
in
inc
jl
test
gs
negb
das
jnp
xadd
cli
jne
xchg
sub
sarl
decl
dec
jnp
cltd
sub
mov
jl
xchg
adc
dec
call
jp
icebp
add
pop
push
mov
or
rcr
fstps
xchg
lock
push
fistpll
sub
ret
pop
out
xor
loope
sub
xchg
xchg
or
dec
push
das
dec
stos
hlt
cmpsb
adc
xchg
xchg
jle
inc
loopne
pop
add
push
fiaddl
popa
ds
mov
ret
notl
inc
mov
pop
insb
test
dec
push
in
outsb
in
les
fidivs
imul
mov
aaa
loope
xchg
les
subl
xchg
cmp
push
jae
fldcw
xchg
mov
je
mov
lea
pop
sbb
lods
mov
f2xm1
popa
pop
popf
adc
mov
cld
mov
sub
mov
dec
cmpsb
dec
inc
mov
inc
in
pop
fdivrs
ret
dec
call
das
push
aad
dec
inc
dec
jecxz
sub
mov
pop
jne
popf
pusha
cmp
cwtl
mov
sahf
ret
movl
mov
repz
cmp
push
xorb
inc
incb
xor
xlat
scas
mov
mov
push
sub
sub
roll
xor
test
daa
out
enter
cmp
clc
mov
mov
mov
pop
into
push
popa
andb
xchg
push
pushf
sub
add
icebp
mov
roll
cmp
lret
ret
add
mov
out
aaa
popf
cmp
loopne
in
das
lcall
inc
or
test
cld
pop
in
mov
mov
nop
mov
or
lahf
push
shrl
outsl
add
or
sarl
outsl
es
ja
adc
test
test
imul
mov
ficoms
pop
xchg
jge
bound
movb
mov
or
or
gs
dec
xor
in
cmp
mov
cld
sub
jecxz
fisubrl
aaa
or
das
push
dec
ret
xchg
sbb
hlt
fs
cmp
jne
push
aad
iret
xorl
ret
dec
stos
pop
jo
xorl
adc
add
lds
cmp
jb
xor
in
pop
cmpsb
xchg
sub
ret
repnz
hlt
xchg
cmpsl
out
push
dec
add
stos
pop
inc
mov
stos
mov
rorb
push
sarb
imul
ja
add
ljmp
clc
test
mov
xor
xor
ljmp
jge
mov
fdivrs
dec
push
sub
nop
mov
bound
xchg
js
into
incl
dec
xchg
es
jno
xor
jbe
sbb
jae
xchg
adc
bound
mov
pop
and
outsb
cwtl
mov
sub
pop
pop
loop
iret
mov
je
adc
popf
dec
stc
xchg
fs
popf
stos
jns
cmp
jo
fs
xor
xchg
mov
pop
popa
mov
and
push
popf
sub
outsl
mov
cmp
jb
pop
add
or
dec
sub
std
push
pop
into
outsl
fbstp
ret
dec
mov
cmpl
hlt
jmp
add
ror
out
sbb
test
test
or
adc
cld
sub
pop
sub
adc
and
movl
repnz
push
xchg
mov
out
jp
lea
lahf
push
pop
jl
push
jno
loope
cmp
push
bound
fcompl
jb
loop
mov
out
sbbl
adc
jno
pop
cmp
inc
push
adc
insl
mov
fwait
push
cmc
lods
xchg
and
dec
shlb
daa
lcall
loopne
pop
in
sbb
mov
data16
ret
jnp
pop
and
stos
xchg
add
and
or
out
icebp
test
push
jnp
inc
cmp
or
out
call
in
loope
rcll
test
stos
xchg
inc
mov
and
lods
mov
pop
or
sbb
dec
mov
icebp
push
xor
cmpsb
imul
xchg
out
lods
fs
cltd
dec
jbe
lcall
aam
xor
imul
mov
add
dec
cmp
jne
pop
ljmp
insl
mov
stos
nopl
lret
dec
push
shrl
lret
mov
cmp
adc
mov
and
inc
ds
mov
sarl
adc
mov
out
je
xchg
mov
ss
dec
orl
orl
ret
fdivl
push
add
fdivl
mov
in
shrb
mov
ret
in
je
mov
dec
cmp
inc
push
sbb
cwtl
cmp
mov
lret
cmp
jae
das
arpl
jl
push
cmpl
sbbb
es
loop
stc
add
repnz
aam
outsb
sbb
jo
add
les
les
insb
pushf
shlb
pop
dec
bound
sub
xchg
mov
in
add
push
scas
and
stc
xchg
adc
nop
or
add
xlat
sub
imul
loope
and
and
mov
xor
sahf
js
jl
stos
inc
in
jmp
fcoms
popa
sbb
xor
xchg
adc
dec
add
aas
push
clc
orb
pop
adc
lods
movsl
lret
xor
lock
xchg
xchg
shlb
test
dec
leave
stos
dec
inc
addr16
pusha
mov
cmp
jb
mov
or
xchg
lret
fldcw
loop
imul
jecxz
stc
or
movsb
add
rcrl
mov
jns
scas
jecxz
xchg
push
in
fcmove
adc
ret
pop
lock
xchg
jge
sub
dec
orb
dec
cmpsb
or
xlat
jle
xchg
int
lret
popa
fmull
xchg
or
clc
pop
or
fistps
out
jo
mulb
fsubs
out
sub
add
dec
dec
ret
xchg
cmp
out
xor
nop
mov
jbe
mov
pop
daa
in
mov
cs
fcoms
sub
shlb
int3
jne
fsincos
xchg
inc
cld
in
adc
cmp
inc
dec
imul
dec
outsb
jbe
addr16
xchg
bound
mov
inc
lcall
out
cld
ja
and
sahf
sub
shlb
push
adc
push
or
lods
sub
mov
adcb
and
xlat
cmp
mov
cmp
and
test
mov
push
repnz
lret
jae
push
lock
push
mov
mov
aaa
cmpsl
repz
aam
jne
cmpsl
lcall
sub
sub
push
lret
orl
mov
cmp
lea
pop
push
add
fs
incb
imul
call
lcall
mov
insb
insl
fs
dec
rolb
xchg
sbb
notl
cmp
scas
xor
das
mov
and
jle
repz
ss
push
inc
sub
mov
cltd
add
push
pop
fsubrs
cmp
add
pop
sysexit
xchg
call
pusha
sbb
rorl
aaa
js
dec
inc
adc
stos
dec
outsb
and
fwait
inc
hlt
or
push
sbb
lds
pop
sbb
sbb
testb
repz
inc
decl
aas
cmpsb
lret
pop
js
push
aaa
jbe
cwtl
lret
stos
lods
mov
cltd
mov
movsb
or
fldpi
adc
cmpsb
lock
bound
repz
dec
dec
xchg
jl
es
icebp
mov
xchg
and
ja
shlb
sbb
rclb
jno
in
rclb
sarl
movzbl
popa
lret
push
mov
out
out
xchg
adc
push
inc
ljmp
push
jp
in
mov
mov
inc
lret
adc
or
ds
push
hlt
mov
jecxz
push
pop
jmp
xchg
ret
xchg
mov
dec
jb
sbb
push
and
movsb
cmp
jnp
sti
les
sub
and
push
adcb
loop
add
call
jle
inc
scas
push
out
sbb
add
push
pop
mov
fcmovnbe
nop
gs
enter
mov
bound
je
loop
addr16
lahf
aaa
sbb
sub
mov
test
ss
add
in
rolb
sub
xchg
mov
inc
inc
jle
pushf
fidivrl
popa
call
aam
adc
cli
xor
push
ja
mov
shrl
pop
icebp
popf
xchg
in
push
mov
push
and
pop
insb
add
in
fnstenv
lret
sahf
cmp
mov
bound
mov
into
dec
jnp
addr16
lcall
mov
push
add
stc
loopne
xor
iret
cs
xor
outsl
roll
sbb
and
insb
sbb
js
push
push
mov
adc
sub
in
jmp
mov
std
data16
add
lcall
in
add
rorb
or
ds
test
xchg
mov
pop
daa
ret
sbb
and
adc
mov
dec
push
add
fmuls
hlt
into
lods
stos
lahf
mov
add
cmp
movsb
mov
outsl
es
add
outsl
mov
andl
out
cld
pop
and
fsubl
pop
cmp
or
cmp
dec
adc
popl
adc
xor
push
inc
fs
ret
ret
popf
movsb
out
cmp
pop
push
mov
inc
sub
notb
adc
insb
push
mov
dec
xchg
mov
nop
fcompl
pop
xor
cmpsb
movsl
sahf
rcll
dec
ds
outsl
in
aaa
aam
or
bound
mov
xor
out
stc
sub
cltd
add
jns
test
xlat
jnp
in
jg
push
pusha
push
cltd
aaa
jge
pop
push
dec
mov
add
and
sbb
jl
sbb
sub
popa
std
subl
cmp
xchg
hlt
or
pop
fstl
cld
fld
push
ja
jl
inc
inc
lods
push
scas
mov
mov
testl
aam
pop
jp,pt
add
cli
mov
into
and
lret
mov
out
xchg
xchg
add
pop
pop
mov
pop
add
ja
push
or
dec
sub
fsubrs
sub
arpl
aas
outsl
dec
and
or
fidivrs
cmp
pop
pop
inc
icebp
jecxz
rcrb
push
mov
imul
loopne
sbb
fadd
cmp
jmp
push
test
imull
mov
jbe
xchg
lret
fisttpll
dec
cld
dec
mov
inc
mov
loope
loopne
mov
dec
es
adc
icebp
stos
fiaddl
out
pop
push
stc
xlat
aam
mov
movsb
dec
aam
lret
ljmp
push
nop
xor
sbb
mov
test
test
daa
bound
test
lahf
sbbb
enter
idivl
fdivl
push
xchg
jne
cld
mov
imul
cld
sarl
js
or
negl
jl
sbb
xchg
jbe
lcall
jle
scas
in
sbb
fwait
mov
cmp
ljmp
push
jbe
adc
fbld
push
imul
pop
test
repz
cmp
dec
inc
mov
shll
ror
popa
xchg
add
dec
insl
push
cmovnp
or
lock
jne
rcll
scas
jmp
mov
popa
sbb
pop
add
cltd
ret
xor
jns
mov
mov
nop
dec
or
cmp
xchg
add
es
add
jbe
mov
dec
xchg
pop
xor
xor
idivb
pop
pop
stos
pand
pop
inc
xchg
xchg
push
xchg
xchg
lahf
cld
mov
cwtl
add
test
pop
push
add
push
stos
mov
clc
cmp
mov
or
imul
gs
sub
xor
test
mov
lock
js
fwait
imul
shll
jae
add
int
mov
inc
in
enter
inc
mov
fldcw
cmp
test
andl
or
xchg
pop
mov
lods
xchg
imul
adc
daa
mov
dec
pop
jl
cld
cmc
sbb
test
mov
push
push
rolb
stos
cmp
pop
inc
roll
cmp
cmpsl
xchg
xchg
jle
nop
orb
and
out
test
xchg
sbb
imul
add
fldt
pop
push
mov
popf
dec
fwait
sbb
faddp
mov
imul
stos
push
loop
jne
push
and
mov
push
xchg
dec
mov
test
xlat
cli
sbb
adc
xchg
aaa
mov
lods
sub
fsubp
scas
jnp
adc
fsts
jae
jp
gs
mov
mov
mov
clc
nop
and
jl
jp
imulb
jmp
push
ret
mov
pop
ljmp
or
adc
adc
xor
push
mov
xlat
cmpsl
lahf
dec
filds
or
adc
fiadds
jg
fwait
mov
repz
xor
mov
adc
fstps
cmp
and
jecxz
test
xchg
sbb
push
movsl
mov
add
lods
push
xchg
div
sbb
in
pop
pop
enter
xchg
push
dec
jp
and
iret
cmpsb
sahf
lret
push
aad
pop
hlt
dec
bound
scas
test
add
jae
mov
fdivr
pop
mov
cmp
cmpsb
xor
fsubrl
cmc
addr16
mov
fsub
xorb
fld1
lcall
push
ret
cmp
cltd
mov
cmpsb
cmp
cld
mov
mov
movsb
in
das
icebp
jae
mov
mov
mov
jp
mov
mov
dec
mov
inc
out
sbb
xchg
cmpsb
es
and
inc
rorb
push
jae
aaa
insl
xor
push
push
jae
enter
inc
jmp
lods
mov
outsb
jecxz
incb
jg
inc
decl
xor
fdivs
into
das
and
adc
mov
pop
repz
jge
scas
sbb
jae
dec
jp
gs
push
idivl
ljmp
mov
mov
loop
mov
xchg
lfs
aaa
pop
js
inc
xchg
dec
sbb
and
mov
insb
cmp
shr
jg
sar
sbbl
sbb
cmp
call
push
lahf
push
test
dec
xor
or
dec
ljmp
jne
or
xchg
int
ljmp
sub
inc
in
shrl
ret
add
sti
pop
fdivrl
jecxz
fwait
fwait
inc
add
imul
adc
cmp
mov
jle
sar
nop
pop
jae
outsb
adc
or
stos
ror
lods
repz
pop
shrb
inc
push
loopne
aas
pop
or
xchg
lret
dec
fcmove
pop
pop
enter
lods
int3
rcrb
mov
push
and
in
in
cmpsl
mov
cmpsb
dec
sbb
ds
sbb
fistps
mov
mov
xchg
fdivrs
scas
cmpsl
clc
into
jp
faddl
iret
pop
bound
mov
mov
dec
call
pop
dec
call
add
les
sub
loop
mov
pop
imul
sbb
inc
mov
mov
test
into
sbb
pop
imul
inc
fisttpl
push
faddl
lret
xchg
addb
aaa
xor
mov
lret
bound
scas
or
mov
and
lahf
add
push
push
cmp
out
fdivl
fs
adc
mov
aaa
sahf
mov
dec
imul
jmp
mov
dec
and
inc
pop
dec
mov
stos
mov
push
jae
sbb
in
mov
lods
push
jnp
clc
dec
das
mov
cmp
xchg
mov
fwait
orb
mulb
sbb
nop
pop
out
mov
and
sub
cltd
shll
sub
xchg
mov
mov
es
dec
xorl
bound
shl
mov
jbe
xor
mov
xchg
xlat
jb
xor
out
inc
push
enter
jo
int3
or
mov
mov
jne
and
sbb
sbb
shl
int
pop
cwtl
push
add
ret
in
sbb
inc
lods
mov
subl
inc
dec
cltd
and
scas
add
and
fdivrp
pop
stos
rcrb
nop
jl
or
hlt
or
sbb
les
sub
lahf
push
jle
mov
call
and
mov
into
mov
push
push
jmp
sbb
ljmp
dec
sub
sub
decl
adc
inc
stos
xchg
or
jbe
cmp
mov
or
movsl
rcrb
stc
xchg
jp
lahf
pop
mov
orl
push
pop
dec
out
icebp
sub
ret
ja
in
roll
out
in
jae
pop
dec
aas
mov
mov
xchg
pushf
sbb
xchg
int3
mov
sub
add
js
rcll
mov
cmc
jns
fbld
lcall
pop
pop
in
add
in
dec
gs
loope
aas
xchg
ds
aas
push
mov
stc
je
dec
pop
mov
sub
ljmp
fs
jo
or
cmp
xor
adc
mov
sbbl
out
ficoml
push
mov
xchg
cmp
inc
or
cld
aam
and
out
jno
enter
cld
ds
maxps
mov
rclb
test
lds
dec
jmp
shl
lods
cmpsl
clc
popl
sahf
adc
fs
push
into
and
xor
popf
dec
push
div
pushf
add
cmpsl
in
popf
lcall
xchg
repnz
and
iret
imul
pop
mov
xor
sbb
mov
xchg
scas
cmc
lret
pop
jge
sub
jbe
scas
std
movsb
repz
xchg
dec
imul
mov
pop
sti
push
xrelease
jle
ds
pushf
rorl
enter
enter
fidivrs
cltd
mov
pop
push
flds
je
mov
xor
arpl
in
mov
std
dec
js
mov
push
cmp
fcmovnb
sbb
sub
test
push
call
adc
test
push
jno
mov
adc
aam
out
rcll
scas
mov
orl
cwtl
out
jo
cmp
mov
les
std
mov
mov
scas
iret
jb
add
dec
xchg
adc
cmpsl
xor
jecxz
push
mov
mov
push
imul
repnz
jae
aad
stc
js
inc
aad
in
rclb
pop
jl
fsubp
xchg
mov
or
call
xor
lock
imul
popf
cmp
or
jl
jne
mov
jns
stos
cwtl
mov
pop
aaa
insb
lcall
mov
xchg
jg
adc
pop
or
dec
or
popa
movsb
lea
out
jns
mov
scas
add
jmp
push
sub
insb
or
mov
lcall
loop
push
fstp
leave
repz
push
mov
ds
pop
mov
xchg
loop
sub
mov
add
sub
leave
cmc
icebp
adc
andl
xor
mov
xor
jp
or
sbb
xlat
push
test
mov
cld
les
in
or
ficomps
xor
adc
ljmp
inc
in
sbb
ficomps
fdivl
add
loopne
dec
add
xchg
xchg
mov
imul
movsb
adc
aaa
js
or
xlat
mov
mov
insl
lods
inc
outsb
stc
cmp
lcall
mov
sbb
mov
outsl
cltd
sub
out
negl
and
imul
dec
pop
sti
sti
pop
leave
push
push
or
loope
jnp
cli
xchg
cmpb
insl
xchg
jp
outsl
sub
sarb
es
push
test
xorb
dec
and
xor
push
aam
xchg
cmpsl
dec
xchg
aaa
loop
pop
jle
push
loop
push
roll
xchg
int
shll
into
adc
xchg
sub
dec
mov
popa
mov
and
push
in
xchg
les
add
pushf
imul
aas
pushf
sub
jns
dec
into
ffree
mov
sub
orb
sub
lret
sub
add
or
add
xchg
out
adc
aaa
gs
imul
shr
sub
adc
cmovno
popf
pop
and
scas
jl
xchg
sbb
enter
mov
cmp
cs
mov
repnz
gs
sub
test
xor
out
push
inc
xchg
pop
xchg
loop
std
fcos
adc
xchg
pop
jnp
jmp
cmpxchg
adc
test
adc
je
add
pop
sub
xchg
cmc
push
fists
mov
mov
fisttps
pmulhuw
ss
and
addr16
jo
xchg
push
cmp
dec
fisubl
pop
add
push
jmp
lahf
push
push
stos
push
rcll
std
and
cmp
in
or
es
push
xchg
test
add
inc
fwait
jno
les
insb
aas
in
mov
scas
push
lods
call
cli
cli
leave
enter
lcall
pop
jne
dec
cmp
in
mov
jecxz
insb
add
out
sub
daa
or
dec
movsl
mov
test
mov
hlt
lahf
push
ss
popa
lret
std
mov
inc
dec
sub
jmp
notl
dec
mov
data16
out
imul
xchg
jno
fwait
sub
mov
mov
inc
cli
cwtl
out
mov
ret
in
insb
mov
pop
aad
pusha
in
lods
or
and
in
je
stos
loop
sbb
ja
test
out
or
loop
xor
stc
testb
fs
sub
mov
jl
ret
sahf
dec
mov
cmpsl
rol
in
ror
int
mov
adc
aad
adc
cmc
jnp
or
int3
ss
or
fwait
setno
adc
aas
dec
iret
jns
jo
push
xchg
cmpsb
jmp
add
xchg
push
ljmp
movsb
mov
ret
jb
sbb
pop
std
cmp
sarl
insb
shll
mov
and
mov
jg
jle
mov
push
and
inc
mov
xchg
sti
outsb
mov
iret
mov
stos
mov
call
addr16
mov
sub
out
jns
xchg
jno
cs
mov
lret
pop
cld
cmc
jae
pop
mov
pop
jb
sub
lret
push
xor
ret
cmpsb
sub
lds
js
lea
mov
dec
xor
cli
jnp
cmp
js
or
jne
nop
inc
ret
pop
sbb
mov
push
push
sti
sbb
xchg
shr
ficomps
cmp
jmp
rcr
loopne
sub
fsubrs
shll
data16
hlt
outsl
imul
and
push
cli
xorb
aaa
lds
in
int3
loopne
jnp
in
test
cmc
cmp
push
scas
fisttpl
sub
jbe
xor
stc
int3
mov
addr16
pusha
insb
loop
outsb
adc
arpl
xchg
out
dec
imul
sbb
xchg
jnp
xor
int3
in
mov
xlat
xorl
shl
sub
call
add
sahf
inc
mov
aam
sbb
lret
testb
push
pop
aas
jo
movl
pushf
push
outsb
shll
in
les
sbb
inc
add
mov
dec
dec
xchg
jecxz
add
jle
lods
shl
leave
push
insb
iret
pop
sub
mov
je
repnz
dec
adc
aas
pushf
popf
adc
or
cwtl
hlt
clc
push
pop
xchg
ret
or
xor
push
aaa
retw
xchg
jmp
aam
cmp
pushf
mov
add
and
or
data16
testl
in
jno
jle
mov
aaa
inc
mov
mov
or
jl
xchg
sahf
outsb
cmpb
pop
out
addr16
lods
data16
repz
xchg
iret
xorl
add
pop
pop
cmp
add
ret
hlt
fdiv
lret
cmc
mov
push
mov
mov
dec
jp
inc
add
sbb
arpl
pop
mov
pop
je
adc
clc
push
rclb
push
jle
xor
mov
sub
int3
imul
push
add
or
adc
rorb
and
stc
push
scas
fisttps
sbb
sbb
mov
enter
xchg
fldenv
cmp
jo
sub
ret
lds
lods
jne
cmpsb
xor
mov
mov
insb
dec
cmp
push
lds
push
inc
div
into
mov
andb
ss
imul
mov
add
mov
or
je
mov
lods
xchg
cmp
xchg
sbb
sub
sub
fmuls
popf
jle
ror
push
inc
repz
data16
lods
sarl
mov
xchg
arpl
xchg
ds
fadds
cld
mov
adc
sbb
xor
js
cli
sbb
jp
aad
and
inc
scas
sub
sub
ja
sbb
imull
mov
das
dec
or
aam
cmpsb
fldl
std
jp
dec
mov
xor
pop
push
adc
sbb
je
jmp
mov
xchg
inc
jbe
sub
jmp
movsb
mov
or
outsl
shll
and
adc
sbb
repz
push
sub
push
pop
insl
icebp
sbb
or
mov
sti
insl
mov
insb
and
pop
mov
mov
push
inc
rcr
out
sub
into
add
ficomps
mov
adc
in
je
test
inc
dec
mov
rol
jg
mov
adc
out
and
ja
and
stc
jecxz
stc
arpl
jl
inc
in
push
or
imul
lock
insb
leave
and
ja
sbb
inc
jmp
popf
dec
mov
aas
cbtw
loopne,pn
jne
in
fisttps
movsb
or
cmp
push
repz
das
shrb
mov
or
inc
imul
cmp
dec
sbb
pop
cs
push
xchg
mov
pop
out
loopne
push
sti
pop
ja
push
push
pop
fsubrl
xchg
pusha
mov
jb
movsb
sbb
mov
cli
inc
ficoms
lods
inc
push
nop
adc
neg
xchg
fcoml
cltd
inc
adc
notl
inc
insb
pop
pop
xor
jp
or
xchg
frstor
cmp
js
insb
pop
dec
call
into
jb
loop
mov
sub
and
cmpl
rcr
mov
mov
es
popf
pop
enter
add
mov
filds
std
mov
cmp
or
scas
pushf
xor
in
cs
or
outsb
jp
jg
lea
add
jle
mov
addl
pop
aad
jae
xchg
xchg
mov
lods
lea
mov
pop
test
mov
mov
ss
into
and
fisubrl
mov
inc
fs
out
pop
mov
pusha
aad
scas
lods
mov
jmp
cmp
fcmovnb
sbb
loope
fistps
mov
cmp
loopne
cs
jns
add
jl
push
in
push
and
or
inc
or
push
cmc
decl
and
test
inc
sub
and
mov
or
call
and
popf
stc
adc
or
jno
nop
js
lods
sub
xchg
sbb
test
sub
std
mov
and
cmp
dec
or
jp
sub
je
sbb
jecxz
mov
loop
hlt
popf
test
test
cmp
mov
mov
orl
movsl
cmc
filds
loope
fdiv
fnsave
xchg
cmp
adc
mov
in
xor
out
ss
pop
cmpsb
pop
pop
xchg
imul
mov
cmp
xor
pop
add
xchg
sar
rclb
and
dec
jp
sub
aaa
mov
movsl
stc
dec
sub
and
push
std
sbb
test
addr16
and
pop
cmp
les
push
cmp
xorl
int
addl
xchg
dec
mov
cwtl
adc
sub
dec
mov
push
sub
pop
mov
mov
cmp
popf
push
in
xchg
out
ret
clc
xor
inc
cwtl
sahf
mov
faddp
or
dec
in
jmp
pop
xchg
or
or
lcall
cli
push
imul
jbe
add
or
add
fistps
mov
sub
push
cmpsb
test
lret
xor
dec
cmpsl
sbb
out
sar
jmp
push
sub
daa
jle
xor
dec
cmc
pop
mov
mov
js
xchg
dec
psrlq
mov
fstps
jecxz
lret
or
popa
push
jb
jae
sbb
mov
psubb
stos
arpl
ja
cmp
or
jmp
sbb
aam
mov
mov
out
into
outsb
out
sub
lahf
scas
sbb
mov
lahf
push
mov
sub
icebp
das
repnz
pop
test
adc
pop
xchg
jmp
jnp
aaa
lea
ds
xor
cmpsw
mov
xchg
enter
iret
adc
subl
or
in
sbb
leave
paddd
inc
pusha
xchg
jns
xor
fldl
outsb
pop
gs
cmp
je
jg
cli
nop
inc
pop
adc
lods
mov
pop
lock
xchg
fs
add
aam
dec
xor
shrl
mov
push
in
out
pusha
xlat
add
add
out
inc
clc
dec
dec
and
inc
cli
repz
xor
pop
pusha
into
mov
pop
push
and
mov
add
icebp
jmp
insb
push
push
jp
pusha
scas
imul
rcrb
sub
outsl
or
ljmp
cs
insl
shrb
ret
mov
adc
sbb
in
movsb
or
pop
mov
push
adc
sahf
pop
sarb
mov
pop
sbb
jmp
mov
and
imul
aaa
aas
push
movzbl
test
lret
and
xor
sub
mov
sbb
and
adc
and
mov
test
ret
idivb
fcmovnu
sbb
inc
je
popf
stos
mov
adc
sbb
cmp
push
aam
in
mov
sbb
sbb
sarb
idiv
push
sub
cmp
jge
lahf
pop
dec
fisubrs
aad
lret
inc
aam
push
jae
out
in
clc
fwait
mov
cmp
sbb
lret
xor
vpunpckhqdq
sub
insb
adc
sub
mov
dec
jbe
int3
adc
int3
pop
pop
faddl
xchg
cmpsb
cmp
jno
lds
inc
or
inc
mov
out
ja
or
push
daa
insl
movsb
inc
sub
push
mov
loop
pusha
sub
fcmovbe
cli
xchg
ja
jne
add
repnz
pop
xchg
mov
xor
pop
jnp
loope
call
fisttpl
inc
adc
int3
xchg
loope
faddp
repz
xchg
aaa
lods
stos
fdivr
adc
mov
stc
dec
iret
mov
adc
or
jp
pop
stos
aaa
clc
sti
adc
fwait
push
mov
xchg
out
jecxz
xchg
mov
ss
lds
rorb
aas
cmp
mov
lcall
pop
lock
lahf
dec
cmp
shr
or
mov
adc
lcall
jge
jns
loopne
les
fisubrs
jge
icebp
mov
add
mov
movsl
mov
inc
mov
pop
orl
imul
or
push
push
daa
aad
mov
mov
and
stos
or
cltd
mov
sub
xchg
call
push
mov
sbb
scas
xchg
daa
and
mov
movsb
mov
mov
sahf
fcmovnu
mov
push
aam
daa
imulb
popa
sbb
pop
or
bound
mov
push
adc
cmpsl
xor
cmp
jge
xchg
and
dec
add
je
stos
frstor
mov
cld
subl
cmc
add
sub
push
insb
sarb
data16
push
dec
mov
add
mov
lods
add
jae
ds
adc
mov
shr
fdivrs
outsl
xor
fdivrs
adcl
jg
cmp
adc
jl
fsubrs
inc
cmp
add
pusha
xorb
test
icebp
jb
jg
out
pusha
int3
cmp
dec
xor
stos
repnz
mov
fdivr
aam
push
xor
fildl
push
lcall
sbb
mov
les
pop
jg
and
mov
std
ret
cltd
push
push
insb
dec
js
xor
daa
jo
push
dec
gs
ss
ret
insl
rcrl
pop
pop
jp
stos
xor
rsm
mov
jg
lret
dec
xor
and
das
subb
jl
or
mov
aaa
jecxz
or
sbb
xchg
out
add
pop
jl
pop
cmc
nop
sbbl
js
dec
push
movsl
push
icebp
js
into
and
sub
popa
dec
jne
mov
push
adc
lret
iret
out
imul
xchg
scas
cmp
sbb
xor
cltd
mov
mov
sbb
pushf
or
rorl
xchg
cltd
dec
shlb
jge
xchg
scas
mov
lds
pop
and
test
notl
or
mov
lea
xor
jbe
insb
stos
add
ret
sbb
cmp
sub
jnp
mov
and
add
dec
frstor
adc
popf
xlat
data16
ds
dec
and
push
add
int
adc
arpl
and
test
sbbb
aam
clc
or
lret
fmul
xchg
out
mov
cld
lods
xor
dec
xchg
mov
push
sbb
sbbb
int
dec
xor
shrl
aam
enter
jae
dec
in
add
jb
in
xor
es
pushf
insb
dec
mov
mov
call
ret
bound
adc
ret
imul
jne
shl
bswap
push
stos
cmc
rorb
sub
dec
push
push
jne
jl
xchg
fisubl
xor
in
cmp
insl
inc
lret
pop
inc
or
data16
scas
aad
loopne
push
in
fldenv
je
cwtl
sbbl
or
sbb
sarl
cli
jle
sbb
mov
insb
iret
insb
clc
fsubrs
ds
mov
in
hlt
scas
mov
xchg
outsl
inc
xchg
dec
jnp
ja
cld
cmp
shr
lods
insl
ret
test
stos
int
mov
inc
hlt
xchg
jmp
rolb
cs
test
ret
sub
sti
sub
loope
cltd
je
dec
sub
push
movb
daa
es
or
mov
or
fcmovnbe
push
dec
xchg
jae
mov
inc
insl
mov
out
jae
ret
inc
int
and
lods
adc
and
loopne
int
or
cltd
leave
jb
addr16
fsubl
fucomip
sub
or
aas
cmpsl
loopne
test
add
vmovddup
push
cmp
push
stos
outsl
outsl
add
jmp
inc
mov
clc
xor
shll
and
mov
jb
sbb
pop
pop
mov
and
inc
dec
or
arpl
mull
cs
or
inc
mov
xor
andb
lods
and
inc
shl
mov
out
sub
push
mov
je
sbb
scas
pop
pop
repz
fnsave
imul
test
outsb
and
add
in
mov
lahf
cs
push
push
and
mov
mov
add
sti
mov
jb
repnz
lahf
and
xchg
jp
dec
outsl
out
popf
mov
lcall
pop
jne
outsl
mov
aaa
add
push
js
pop
cmpsl
cmp
sub
jnp
xchg
pop
xor
sbb
sti
fdivrp
out
insb
daa
sbb
and
fs
movsb
out
mov
jbe
xchg
adc
lods
cmpsl
lcall
movsl
pop
push
insb
mov
push
sahf
mov
mov
icebp
imul
pop
or
popa
stc
fbld
cmp
mov
ja
dec
aas
sub
sar
mov
dec
fwait
inc
pusha
pop
jg
das
mov
inc
xchg
jae
jne
outsl
fwait
lcall
cs
inc
int
push
dec
adc
add
xor
cmp
dec
addl
lods
mulb
hlt
xor
dec
and
add
dec
sti
xor
insb
std
int3
cwtl
iret
mov
into
sbb
mov
mov
mov
push
sub
jae
rorl
pop
in
loop
rcrb
adc
push
or
lods
out
in
sbb
dec
or
inc
xor
and
into
data16
imul
adc
sti
cmc
and
ret
iret
sbb
jno
xchg
jbe
cmpsb
push
xchg
xor
ja
scas
mov
inc
sub
dec
bound
cmp
test
pop
popf
add
inc
jg
cmp
lds
mov
gs
sbbl
mov
dec
cmp
cld
push
repnz
jno
les
push
adc
leave
fimuls
fbstp
inc
mov
xchg
mov
mov
repnz
mov
mov
cmp
jno
add
jle
out
jnp
ret
repz
clc
dec
and
das
iret
jl
stos
int3
bound
pop
sti
arpl
sub
sbb
or
scas
adc
jne
and
sarl
test
xor
imul
subl
and
mov
cmp
and
jg
in
test
mov
mov
jge
pminsw
aas
shl
dec
mov
insl
ljmp
add
stos
movsb
sub
test
dec
lock
add
inc
pop
sub
jmp
jmp
mov
jns
sbb
xchg
mov
jle
mov
out
and
jle
movsb
push
lcall
das
nopl
ja
aad
popf
adc
test
ret
pop
pop
and
and
inc
and
xchg
xor
jg
dec
mov
call
push
pop
xchg
jl
ror
xchg
push
fcoms
mov
rorl
je
jp
and
int3
jns
add
aad
pop
mov
cld
lods
in
sbb
call
imul
jno
push
stos
int3
iret
xor
dec
leave
lret
dec
push
fs
cltd
out
repz
mov
pop
add
pop
or
fidivs
fcompl
xor
rcrl
jge
aas
jbe
jge
imul
inc
push
xchg
mov
lods
popa
jle
inc
inc
xchg
jl
rorl
dec
xchg
jmp
mov
ret
mov
xlat
fwait
push
sub
into
js
and
std
sahf
or
ljmp
and
or
xorb
dec
je
cmp
in
es
repnz
jecxz
mov
inc
sub
xor
popl
cwtl
jle
lahf
pop
test
scas
popa
mov
js
fs
call
in
js
leave
mov
out
push
cmpsb
adc
add
inc
jae
outsb
add
data16
cmp
stos
xchg
sahf
hlt
mov
mov
sbb
clc
enter
shl
lea
subb
or
push
xchg
cltd
dec
mov
les
sub
push
sub
pop
push
in
js
arpl
movsl
dec
dec
adc
push
cmpsb
xor
cmp
push
dec
int
ret
adc
ss
cmp
push
stc
adc
xor
test
push
xor
pop
jg
imul
xchg
movsb
or
jno
jb
push
je
bound
cld
lret
sbb
push
adc
inc
mov
mov
jmp
nop
mov
push
cmpb
fstp
rorl
lock
fnsave
push
adc
mov
inc
xchg
out
sub
fcmove
test
dec
xchg
loope
push
repz
dec
cmp
fsts
fcomi
shlb
popf
or
add
imul
add
call
sub
mov
pop
hlt
mov
xlat
lret
sub
shrl
cmp
push
aam
in
inc
mov
test
outsb
leave
push
inc
push
cmp
fstps
pop
jle
cmpsl
sarl
cmp
jle
push
cmc
xor
ja
add
dec
mov
mov
mov
jle
cmp
ficompl
dec
adc
sbb
repz
imul
mov
cmp
adc
fs
push
xchg
jle
cmp
daa
repnz
mov
pop
loopne
arpl
or
ja
pop
adc
xor
adc
cmp
insb
into
in
mov
test
inc
negb
xor
push
pop
mov
and
scas
outsb
lret
inc
sbb
shlb
cmpsb
mov
sub
pop
sbb
test
cmc
push
insl
jne
hlt
cmp
adc
adc
test
lahf
mov
rcr
sub
cmp
aas
sahf
out
inc
js
cmp
nop
mov
cwtl
lds
lea
pusha
jmp
les
test
mov
inc
cld
sbbb
incb
out
jno
fidivrl
mov
scas
mov
aad
mov
mov
mov
jno
cwtl
cmp
movsl
xchg
jnp
sbb
adc
mov
dec
iret
jmp
cmc
jne
mov
push
jo
adc
hlt
xor
xor
imul
mov
lret
pop
pop
add
xchg
or
shlb
fsubr
scas
movsl
mov
push
pushf
jg
add
cmc
imul
aam
imul
hlt
insl
movb
inc
hlt
adc
icebp
subb
xchg
pop
je
fsub
push
dec
sub
jbe
xlat
pop
and
dec
lods
int3
fiadds
lea
adc
cltd
mov
xor
aaa
jne
xchg
xchg
movsl
shlb
in
nop
adc
sub
push
flds
cwtl
aam
lds
nop
es
or
fs
iret
cltd
push
adc
jne
xchg
xor
pop
movsb
and
mov
jecxz
iret
movsb
pop
pop
arpl
xchg
ffreep
insb
sbb
shlb
cmpsb
imul
adc
sbb
popa
push
push
dec
jnp
test
mov
add
shr
popf
ret
sbb
loopne
icebp
mov
cwtl
int
adc
or
stos
jecxz
stos
cmc
dec
addr16
mov
in
cmpsl
add
push
mov
sub
sub
ds
mov
shl
out
pushf
mov
popf
insb
push
popa
jno
je
dec
xchg
popa
xor
and
pop
into
bound
test
pop
in
push
jo
scas
jns
xlat
mov
stc
lcall
mov
mov
cmp
push
neg
ljmp
jge
pop
xchg
pop
mov
sub
pop
iret
ss
pop
mov
add
in
test
inc
adc
adc
inc
lods
loopne
push
xchg
dec
jmp
lods
in
cmc
lds
aaa
fcomps
mov
cmp
push
aaa
les
in
test
gs
push
sub
sbb
testl
pop
and
mov
dec
mov
mov
in
mov
cmpsl
adc
loopne
xchg
into
ror
sub
pop
cmp
pushf
cvtdq2ps
dec
dec
mov
out
xchg
mov
push
nop
hlt
and
sub
xor
cmpsl
pop
mov
sub
xchg
sti
push
jno
mov
outsl
pop
mov
inc
sbb
push
mov
sub
fwait
rcll
and
mov
popa
movsl
ja
ja
ljmp
jnp
ljmp
jg
or
push
push
nop
imul
mov
ss
mov
clc
sub
js
jge
int3
or
xchg
pop
xchg
movsl
andb
lea
add
cmp
jle
arpl
adc
inc
or
in
push
cmp
add
imul
hlt
rolb
es
rcll
mov
loopne
dec
push
clc
in
rolb
es
sarl
daa
ds
lret
das
pop
mov
cmp
stos
int
shrl
push
mov
sub
sti
je
mov
leave
adc
out
dec
sbb
loopne
pusha
pop
and
add
jne
cmp
repz
mov
mov
push
sbb
and
out
lahf
popf
push
xchg
sbb
sub
jmp
jno
jae
repz
sbb
es
pop
call
adc
data16
mov
jo
mov
jl
test
sahf
in
push
test
add
inc
pop
pop
in
inc
dec
inc
inc
dec
inc
dec
sbb
incl
out
cmpsl
mov
loope
mov
and
gs
shrl
xor
xor
lods
imul
cmpsb
pop
insl
loope
sahf
xchg
gs
cli
in
or
mov
xor
xchg
clc
adc
les
dec
push
sub
jo
adc
or
add
and
dec
scas
inc
out
jns
rorl
in
mov
mov
sub
pop
cltd
mov
push
inc
ss
xor
scas
icebp
sub
or
jle
adc
xor
jp
sub
adc
mov
add
mov
iret
leave
cmp
pusha
aad
data16
clc
cmp
xorb
rorl
cli
add
je
fsub
lahf
stos
es
out
loope
adc
in
repnz
mov
mov
scas
mov
loop
and
jp
add
sub
xchg
outsb
stos
iret
xor
adc
stos
lods
jecxz
jne
cltd
arpl
inc
lds
push
les
test
push
movsb
mov
int3
aad
mov
xchg
inc
shll
mov
stos
sbb
pop
lret
stos
ret
xchg
std
sbb
fsubs
sub
orb
cwtl
mov
jnp
lret
mov
sbb
lea
cltd
aas
int3
cmp
fcmovnu
mov
and
je
mov
out
cmpsl
sbb
fcmovnb
cmpsb
push
push
int3
pop
std
jp
pop
addl
cs
xchg
mov
jp
and
add
loop
hlt
cltd
stos
jg
les
xchg
fldenv
ficoml
mov
mov
cwtl
xchg
pop
pop
cltd
jl
jge
enter
insl
cmp
test
enter
sbb
jle
adcb
adc
and
jae
in
mov
movsl
stos
mov
dec
jno
in
add
sbb
sti
sbb
ja
ljmp
scas
ljmp
sahf
xchg
dec
jecxz
jno
sbb
rclb
push
sub
cmpsb
fdivrs
lret
lret
jl
pop
movl
and
aas
cmp
adc
outsl
push
xchg
inc
js
ds
mov
xor
jns
pop
or
leave
mov
xchg
push
inc
je
loop
sbb
adc
pop
push
lcall
lock
aad
lods
cld
push
fdivr
repz
ja
mov
out
mov
jp
pop
inc
jae
xor
xlat
mov
jno
cmp
pop
mov
dec
push
bound
xor
pop
jbe
lret
or
cmpsl
dec
cmc
je
shlb
call
std
loopne
cs
jbe
inc
mov
stc
ss
cmpb
pop
lods
push
xchg
inc
out
repz
mov
andl
mov
adc
ficoml
sahf
out
cmp
push
sbb
dec
movsb
mov
imul
addr16
f2xm1
inc
pop
clc
inc
push
faddl
push
add
lea
xchg
stos
adc
mov
jnp
inc
sbb
pushf
cwtl
pop
mov
es
add
xchg
adc
jns
mov
cmp
fsts
mov
fmull
jbe
xchg
pop
stos
outsb
xor
push
insl
cmpsl
sbb
mov
js
addl
ret
jns
ss
xor
pushf
push
jo
mov
out
inc
mov
cmp
mov
fstl
cmpsb
mov
je
pop
xchg
mov
je
push
adc
jl
push
cmp
mov
movsb
aas
and
dec
inc
adc
pop
jns
mov
jecxz
mov
or
aad
lcall
xchg
ret
sub
shlb
sbb
outsb
dec
mov
jae
out
fcompl
iret
xlat
lea
mov
dec
iret
mov
testb
adc
mov
sbb
cmp
jb
arpl
orl
jns
out
cmc
jnp
push
adc
movsl
add
pop
sbb
dec
fcoml
and
ret
test
pop
mov
cltd
mov
adcl
dec
insb
adc
push
insl
adc
cmpb
jae
add
outsb
mov
les
stos
inc
insl
cmp
sti
sbb
arpl
adc
es
dec
or
dec
jp
fstpl
and
pop
inc
or
js
jmp
push
aam
fldl
xchg
jmp
in
sub
jle
stos
adc
mov
cld
push
add
xchg
int3
push
das
addr16
js
mov
stos
sbb
insl
mov
mov
jns
add
xchg
dec
mov
lcall
cmc
add
jge
sbb
inc
out
xor
add
jge
and
ljmp
or
fldcw
ljmp
jnp
or
xorl
pop
lcall
jbe
pop
cld
js
cltd
imul
mov
loop
xchg
adc
xor
hlt
mov
jg
or
adc
or
dec
icebp
mov
ret
lods
and
lock
mov
jne
and
iret
cmp
and
add
lret
fcoms
pusha
fsubr
sub
stc
imul
add
fs
pop
shlb
pushf
int3
int
out
pop
mov
pop
clc
sbb
xor
pop
shl
sti
shll
pop
jl
enter
dec
fwait
lret
sbb
mov
or
js
dec
push
enter
cmp
xchg
add
push
bound
push
mov
jb
pop
sahf
jge
arpl
pop
addr16
mov
cmp
xor
cwtl
inc
fsubl
sbb
hlt
notl
sbb
adc
mov
adc
lock
int
sub
inc
mov
insb
mov
mov
test
stos
call
ret
fwait
or
out
mov
adc
fdivs
cmp
and
gs
stc
scas
dec
out
cli
adc
xchg
add
push
pop
js
sbb
jno
loope
and
std
xor
lock
test
scas
shlb
push
jl
enter
cli
loop
mov
add
adc
inc
mov
sar
mov
outsl
jge
dec
imul
and
int3
pop
pop
mov
out
push
mov
ja
push
movsb
xor
cmp
enter
mov
int3
mov
adc
jnp
inc
lahf
cmc
cmp
mov
xlat
ljmp
push
ror
and
jns
neg
int3
cwtl
scas
dec
dec
icebp
push
leave
fldenv
push
xchg
in
hlt
test
cmc
cmp
cmp
xchg
mov
nop
aas
rcrl
add
loopne
loopne
lods
or
mov
js
icebp
push
daa
xchg
sub
sbb
and
std
push
pop
push
push
inc
dec
jae
jbe
mov
cmpsb
mov
popf
es
out
pop
push
fld
cwtl
or
mov
sub
add
adc
repnz
jg
ficoms
rep
mov
es
mov
mov
nop
jge
xor
aaa
lds
ja
pop
data16
lahf
nop
movups
sbb
fdiv
jnp
add
adc
inc
push
lahf
jae
popf
jg
mov
je
adc
pop
push
mov
or
mov
sbb
cmp
fstl
dec
and
cmp
push
or
sahf
out
lock
shr
or
xchg
lret
mov
dec
ja
and
jmp
xor
pop
push
in
int
or
adc
push
pushf
adc
adc
pusha
into
sbb
ss
out
pop
inc
dec
dec
cmp
gs
and
jo
lods
jp
pop
not
shlb
sub
lea
add
ss
cs
push
test
ds
loopne
movb
inc
daa
stos
pop
and
or
dec
pop
in
push
loop
jae
cmpl
push
pop
cmp
adc
mov
inc
dec
adcl
mov
rep
gs
sbb
js
mov
lahf
or
push
push
mov
stos
inc
cmp
and
mov
sahf
adc
test
jg
jnp
addr16
icebp
ret
cwtl
fs
imul
add
adc
xor
scas
xchg
into
ljmp
jno
mov
jae
cmp
push
inc
mov
jge
sbb
push
sub
fdivr
xchg
push
adcb
push
addl
ret
enter
sbb
data16
sbb
lret
xchg
scas
bound
sbb
negl
sub
lret
aaa
sub
xchg
mov
or
pop
fwait
sub
cmp
xor
jg
or
cmp
jp
scas
mov
inc
dec
mov
daa
sahf
pop
mov
xchg
frstor
push
scas
ret
add
aam
adc
mov
xchg
lret
push
mov
pop
hlt
repnz
clc
cmp
add
idivl
mov
negb
mov
fstl
inc
test
testb
pop
cmp
add
dec
jle
xor
out
mov
mov
pop
mov
lods
fistpll
mov
lods
lret
adc
cmp
aam
cmpsl
gs
adc
pop
loop
push
cmp
or
jmp
dec
cwtl
xchg
int3
jl
imul
test
fidivrs
jmp
sahf
arpl
sbb
insl
cwtl
and
jnp
andps
imul
sbb
icebp
xor
mov
sub
test
adc
dec
add
pop
xchg
push
lock
and
adc
mov
dec
sub
cmc
jmp
icebp
jle
lcall
rcrb
cltd
addb
inc
pop
jne
sbb
push
cmp
lods
outsl
mov
mov
clc
jp
pop
lret
add
lcall
jl
fstps
scas
cltd
pushf
sbb
pop
jg
and
add
call
sbb
icebp
cmpsl
sub
adc
das
loope
aad
shll
pop
loopne
push
sbb
nop
sti
je
fisubrs
lods
jg
and
push
or
xchg
xlat
ja
xor
out
out
mov
mov
xchg
push
add
xor
push
je
jecxz
sahf
sbb
test
ficoml
cmp
ficoms
and
adc
je
aaa
push
out
ret
out
pop
cmc
test
gs
dec
das
nop
push
mov
das
and
cltd
in
inc
mov
scas
in
xor
or
push
cmp
xchg
out
repz
and
movsb
prefetch
mov
dec
xor
adc
xor
jge
out
call
add
aaa
xor
adc
ja
push
fwait
sub
pop
cmp
or
xlat
sbb
rcrb
add
jnp
sub
jae
and
jae
sub
aas
es
cmp
js
aaa
add
cmp
call
aaa
xchg
or
rcrl
sub
scas
outsb
xor
push
cmp
repz
sbb
adc
cmc
ret
add
hlt
sbb
xchg
mov
cmp
add
xchg
mov
mov
gs
mov
and
pusha
cwtl
push
das
scas
dec
leave
push
push
iret
je
call
clc
roll
push
test
mov
lock
push
xor
adc
movsb
jle
push
testl
int3
loop
test
fcmove
jne
add
iret
mov
xor
aas
mov
dec
add
fadds
dec
call
popf
push
dec
or
xor
stos
dec
adc
negl
xchg
inc
mov
push
not
sub
aad
fwait
jp
inc
fs
jno
mov
js
test
adc
sbb
push
inc
in
pop
xor
xchg
inc
jp
mov
xor
int3
jbe
imul
mov
mov
jbe
addb
pop
xor
add
shll
out
loopne
xor
fildl
in
rcr
jne
imul
mov
mov
dec
stos
call
add
mov
rcr
je
and
in
mov
inc
imul
inc
jmp
stos
lods
mov
iret
stos
sbb
imul
mov
xchg
mov
lahf
outsl
sysret
insb
cmp
pop
dec
leave
shrb
mov
fdivl
out
test
add
sbb
in
cmpsl
jle
push
push
sbb
lods
jp
test
jl
jp
nop
inc
mov
fnstsw
add
xchg
xor
add
cmpsl
jg
jae
cmp
dec
fcomps
test
push
ljmp
shlb
stos
sub
xchg
lea
or
test
sbb
cmp
inc
xor
jne
lods
and
adc
jno
cmpsl
into
adc
fcmovnu
sub
adc
mov
xchg
leave
xor
jbe
mov
add
sahf
cmp
inc
xor
mov
outsl
out
jo
cmp
leave
lret
fucomi
pop
mull
gs
outsl
fstpt
arpl
sbb
inc
in
inc
movsb
adc
mov
push
imul
ja
push
dec
rcrb
mov
mov
adc
bound
or
pushf
aad
daa
inc
inc
fidivl
ror
sbb
pop
or
gs
cs
pushf
out
inc
add
pop
adcb
imul
push
adc
imul
sbb
leave
in
filds
dec
inc
pop
pop
lea
dec
jae
dec
jp
loop
adc
inc
pop
mov
lods
sbb
cmp
push
and
fcoml
subb
popa
leave
mov
ret
call
mov
imul
into
cmp
movsb
daa
insb
mov
xchg
insl
xchg
mov
xchg
cmpsl
add
jg
loope
xchg
sbb
inc
out
sbb
mov
std
arpl
roll
push
sbb
test
adc
imul
mov
dec
ljmp
fldenv
dec
idiv
data16
cld
lahf
ret
sbb
mov
dec
ja
lcall
push
mov
mov
sbb
dec
adc
in
jbe
aaa
mov
std
repz
xchg
sbb
xchg
xchg
mov
push
jge
outsl
jo
fwait
jbe
jo
out
nop
sub
jl
jp
cmp
icebp
cmp
dec
jge,pt
add
std
test
test
fsubl
cltd
into
mov
mov
sbb
jnp
inc
popa
in
push
ss
fs
fimuls
cmpsb
add
adc
hlt
cltd
jmp
adc
dec
pop
jge
in
mov
decb
mov
jmp
or
push
mov
mov
cmc
jmp
cmp
push
cltd
sbb
inc
xchg
cltd
daa
and
xor
mov
xchg
inc
mov
stc
lods
mov
dec
adc
push
outsb
add
push
sbb
mov
int
or
lret
loop
pop
xchg
in
sar
mov
add
mov
pop
jge
test
clc
hlt
cmp
jmp
pop
popf
mov
jb
aam
data16
jmp
stos
test
out
sarl
xor
in
scas
dec
andl
stos
out
ret
and
sbb
push
clc
insb
xchg
mov
adc
mov
sbb
jo
lret
jg
adcl
jecxz
divl
imul
and
jnp
sbb
jno
xorb
xlat
or
xchg
scas
inc
js
mov
lret
push
cli
sahf
inc
scas
das
add
xchg
movsl
pop
inc
shll
dec
movsl
in
lret
fisubrl
pop
sub
loope
int3
mov
xor
mov
jne
aas
mov
shl
je
fcmovne
mov
aam
call
adc
cmp
pop
sub
adc
sahf
cli
ficoms
sub
jmp
mov
ds
xlat
repnz
sbb
nop
bound
mov
jbe
mov
mov
mov
adc
addr16
lcall
aaa
sbb
aas
xchg
stos
push
push
cltd
leave
rorl
nop
out
sar
jg
cmp
adc
mov
js
mov
and
ret
pop
shrl
mov
xchg
push
mov
pop
insl
mov
cmp
sbb
pop
aad
mov
ds
out
pop
mov
pop
shlb
std
and
jmp
fidivl
lds
aam
repz
in
lret
iret
cmp
fcoml
adc
loop
test
out
sub
lret
jmp
sub
lods
and
xor
mov
je
outsl
repz
enter
or
data16
push
sub
dec
cmpsb
push
sbb
ds
inc
pop
xor
scas
cld
jecxz
inc
ror
dec
int
inc
xorb
rcll
scas
leave
or
mov
call
cmpsb
lret
jp
dec
xor
stc
cld
inc
negb
cmc
andb
jle
hlt
aad
ret
jns
mov
mov
iret
push
es
rcr
dec
xor
sbb
mov
mov
sub
lret
push
loop
je
lods
test
xchg
lock
ret
or
pusha
fnsave
pop
pop
andl
push
mov
pop
aas
in
mov
rorl
mov
mov
add
inc
mov
sub
loop
pop
xchg
add
jno
lods
xchg
push
mov
loope
xchg
jle
pop
aaa
fsubl
mov
xlat
cmp
push
and
aaa
inc
lods
arpl
pop
jo
ficomps
loope
sahf
ds
jnp
sti
adc
lock
lahf
je
shrb
push
or
jno
out
scas
cmp
gs
icebp
xlat
add
movsl
mov
outsl
push
das
subb
sbb
lods
imul
shrb
lds
mov
inc
pop
lret
mov
das
movsl
add
imul
jae
cmpsb
or
ja
and
clc
mov
dec
div
lods
fsubs
mov
leave
push
ficompl
xor
dec
in
out
cmp
push
popf
out
roll
ds
fstp
addr16
inc
repz
add
lds
sbb
or
pusha
jo
mov
popa
lcall
out
fmuls
inc
fsts
sbb
testb
dec
mov
les
fs
call
mov
popl
pop
mov
xchg
xchg
scas
mov
movsl
push
xchg
sahf
mov
cmp
into
aas
adc
lcall
mov
sub
dec
imul
fstpt
pusha
push
test
in
mov
repz
ret
out
jge
ret
mov
sub
push
mov
mov
jmp
and
jl
jle
inc
cmp
sti
imul
std
mov
pop
stos
data16
addr16
inc
xchg
cmpsl
jg
ret
movsb
pusha
movb
cmpsb
dec
or
lods
pop
aad
fldt
cli
push
pop
imul
jb
ret
imul
dec
and
jno
sub
cmc
in
inc
mov
add
test
xchg
push
xchg
ljmp
mov
movsb
pop
or
sub
stos
nop
pop
xchg
cwtl
dec
loop
jmp
xchg
in
jg
jae
mov
imul
jns
in
xchg
sub
push
ss
std
bound
icebp
mov
sub
cmp
int3
pop
push
cltd
xlat
adc
jb
cmp
shlb
stos
adc
shl
xor
subl
int3
addb
inc
mov
cmpb
dec
es
lcall
mov
sbb
shrb
jae
lock
push
test
adc
rcrb
imul
jg
and
jle
inc
icebp
cmc
mov
jno
stc
push
adc
mov
test
push
adc
outsl
sub
jecxz
xor
cltd
int3
bound
jae
push
sub
lcall
pop
lods
jge
mov
ljmp
in
pop
dec
inc
pop
bound
arpl
jno
pop
mov
into
out
mov
lahf
in
movsl
jp
les
aaa
or
mov
dec
bound
fldcw
jecxz
push
pushw
xchg
pop
pop
enter
sub
cmp
sahf
mov
add
fisttpl
aad
push
sub
xchg
inc
cmp
cld
xchg
adc
inc
xor
je
cld
lods
pop
loopne
sbb
js
fiaddl
pop
dec
cmp
call
dec
loop
adc
test
int3
jp
inc
mov
inc
cltd
jae
aam
and
push
cli
mov
jne
sbb
sbb
inc
cs
cs
rorb
jp
cs
mov
xchg
imulb
xchg
xor
pop
ret
or
jl
pop
pop
jmp
lea
xor
call
pop
and
xlat
adcl
and
lret
pop
cmp
leave
xor
and
int3
imul
out
fwait
gs
jae
inc
ret
mov
int3
mov
mov
push
fsubr
inc
mov
mov
ret
lods
imul
fldt
mov
je
dec
xchg
ret
pushf
xlat
dec
stc
out
call
xor
fbld
sahf
and
adc
nop
testl
push
cmp
mov
sbb
stc
cmc
arpl
mov
sahf
je
ja
lcall
jp
jb
bound
scas
add
add
inc
cmp
addl
inc
mov
dec
lods
dec
mov
xor
add
cmp
ret
add
test
sub
insb
popa
mov
loope
sub
mul
mov
rclb
sub
test
and
repz
in
addr16
mov
arpl
or
mov
pop
jp
dec
jge
sub
adc
push
dec
call
inc
push
dec
pop
jo
out
or
sub
cmp
mov
push
mov
data16
inc
jb
flds
dec
inc
adc
mov
sbb
scas
add
es
sbb
mov
pop
jbe
add
cmp
and
and
adc
add
mov
cmpsb
push
shll
dec
adc
les
xor
mov
jecxz
into
xchg
enter
jns
push
test
add
add
mov
adc
dec
jge
test
movsl
imul
sbb
out
push
inc
js
cmpsl
dec
shlb
outsl
lds
insb
adc
lock
sahf
jle
mov
pop
add
mov
push
sub
and
mov
ficoms
pop
popa
and
xchg
stc
scas
mov
pop
cmp
loop
pop
mov
pop
mov
cmp
dec
pop
inc
jmp
sti
insl
filds
xchg
movsb
lea
nop
or
xchg
shlb
add
inc
fimuls
jb
pop
and
adcb
cmp
add
jmp
fistps
sub
inc
ljmp
xchg
mov
push
jo
pop
pop
adc
inc
orb
and
sarb
repz
dec
imul
mov
inc
inc
bound
mov
mov
into
out
push
sbb
jg
fisttpll
jnp
push
test
mov
xor
lahf
ret
or
lahf
cmp
outsb
ret
push
sub
or
mov
stos
mov
add
add
mov
adc
xchg
ljmp
lahf
movsl
xlat
mov
adc
pinsrw
jecxz
shll
lock
jns
mov
dec
inc
test
or
dec
and
mov
test
cwtl
pop
jecxz
adc
sbb
inc
xor
adc
jecxz
jmp
iret
jle
mov
fadd
js
push
int
nop
ja
test
mov
les
mov
mov
shr
enter
daa
arpl
and
leave
arpl
jmp
or
dec
je
out
sbbl
stos
stos
out
loop
fcoml
pop
aam
in
cs
dec
and
pop
push
mov
iret
cltd
dec
out
sti
and
jmp
aad
lcall
xchg
stos
lcall
push
outsb
leave
jbe
lea
sbb
adc
cmp
push
and
subl
ljmp
mov
insl
js
mov
lcall
test
mov
fimuls
filds
push
cld
ja
jecxz
je
stc
fistpll
add
pop
jecxz
jecxz
cltd
add
leave
scas
sub
jb
xor
stos
loop
sahf
push
pop
fstps
clc
les
mov
mov
lds
sahf
push
sbb
out
push
sahf
cwtl
fadd
cld
mov
xchg
ss
out
test
fiaddl
cmp
dec
ret
out
and
cmp
fiaddl
leave
adc
dec
clc
in
xor
inc
dec
fisubrl
in
lea
stos
and
xchg
fs
sbb
rcrb
out
popa
mov
or
outsl
inc
xchg
repnz
test
jp
mov
int3
sysenter
xor
jecxz
lds
scas
push
jl
sti
into
jb
push
inc
pop
sti
jmp
daa
dec
pop
leave
cmp
insl
in
xor
sbb
aaa
adc
mov
inc
les
jge
jb
test
fiadds
popa
dec
mov
xlat
adc
into
and
je
push
cmp
or
add
orl
sbb
test
dec
clc
jecxz
pop
gs
cmp
and
mov
adc
outsl
mov
mov
outsb
sti
xchg
incl
in
xchg
push
jb
mov
fldcw
push
repz
imul
js
jbe
push
push
aaa
mov
repnz
sbb
cmp
inc
sbb
pop
out
dec
or
mov
adc
fistps
pop
out
mov
sbb
loope
mov
loopne
insb
and
shrl
sbb
pop
out
dec
jno
sub
pop
xchg
pop
inc
push
adc
push
adc
cltd
xor
scas
icebp
xchg
in
scas
mov
std
push
xchg
scas
repnz
jb
leave
dec
adc
jecxz
std
sbb
jbe
bound
clc
sbb
leave
dec
stos
lret
mov
arpl
test
rorl
lret
inc
and
mov
movsb
xor
aad
ret
jg
fwait
pop
fdiv
xorb
sbb
sub
cmc
cmp
in
ja
mov
mov
popa
mov
adc
jecxz
add
daa
or
je
test
lret
add
scas
pop
inc
jecxz
jnp,pn
pop
xor
sub
add
xchg
push
mov
mov
jo
adc
xor
adc
sub
idivb
push
loop
insl
push
sti
add
or
fsub
mov
nop
inc
sahf
sbb
int3
pop
or
mov
pop
mov
inc
stc
pop
jno
sbb
fs
in
mov
push
adc
sbb
arpl
out
or
mov
sub
clc
push
sbb
movsl
add
ficoml
arpl
dec
ret
or
push
mov
lds
jmp
cmpsb
push
in
pop
sub
lret
push
jnp
sub
add
add
xchg
sub
jno
dec
mov
fcoml
mov
cmp
fnstsw
jne
scas
and
xchg
cld
push
add
sahf
add
mov
dec
xchg
mov
mov
push
pop
add
test
and
sub
sahf
mull
or
insb
out
mov
mov
bound
pop
adc
outsb
cmp
outsl
jae
in
loopne
cli
pop
mov
sbb
or
rcrb
pop
or
push
outsl
jl
cs
rorb
in
repnz
mov
rcll
enter
mov
sbb
sarl
dec
stos
enter
les
shrl
adc
sbb
adc
mov
shll
xor
je
mov
insb
jecxz
setnp
cmp
and
mov
cwtl
mov
sbb
movsl
stos
pop
push
addr16
repz
fimull
pop
pop
cmp
cmc
rorb
pop
fldt
sbb
xor
ret
repnz
add
mov
add
into
adc
xchg
loopne
jns
lret
mov
dec
shrb
dec
cmp
jae
mov
mov
push
dec
stos
mov
je
loope
inc
xchg
mov
jecxz
pop
mov
test
jg
pop
push
notb
xlat
aaa
add
into
lcall
cmpsb
aad
outsl
stos
add
imulb
inc
aaa
push
data16
fistps
push
mov
cmpsl
sbb
cld
xor
arpl
xor
mov
jge
and
lock
pop
cmp
inc
sub
sbb
pop
fsubrl
mov
jp
in
cltd
mov
mov
sub
push
pop
stc
scas
rorb
flds
lock
lahf
push
sti
add
repz
ficoml
divb
int3
or
dec
pop
mov
xor
jne
stc
clc
stc
mov
inc
lcall
pop
xor
scas
jnp
pop
pushf
adc
push
ret
pop
cmp
sbb
lds
cmpb
mov
cmpl
lret
mov
mov
xchg
mov
inc
jne
xchg
inc
mov
mov
sub
xorl
mov
pusha
mov
mov
data16
jae
test
iret
mov
inc
movsb
ror
mov
xor
insl
ss
outsb
push
iret
jp
lret
cmp
pop
adc
add
mov
cmpsb
push
sbb
and
pop
cmp
mov
jle
sti
movsl
icebp
push
mov
lods
dec
gs
aam
xor
inc
or
dec
mov
xor
dec
mov
stos
fs
mov
test
das
xlat
pop
xlat
inc
xor
jg
hlt
sbb
movsl
aas
mov
pop
push
int3
cli
enter
or
ss
ss
ja
cs
insb
rolb
and
mov
sub
mov
inc
sub
enter
jmp
inc
adc
jbe
xor
mov
jmp
inc
dec
mov
lock
mov
inc
mov
or
mov
lods
cld
inc
inc
jle
mov
jae
pusha
and
ljmp
shll
hlt
ja
xor
mov
pop
sub
les
mov
mov
jbe
mov
rcrb
out
or
jge
fs
pop
imul
cli
and
adc
testb
std
loope
movsb
pop
repnz
popf
pop
mov
into
das
lahf
xchg
dec
je
and
pusha
xor
adc
jge
test
out
mov
ret
outsl
test
jl
cmp
jmp
mov
stos
pop
and
jmp
dec
pop
ljmp
push
push
or
push
mov
addr16
adc
inc
xor
ret
jp
inc
or
xor
stos
neg
shlb
mov
stos
inc
sub
pop
sub
mov
adc
cltd
push
clc
aaa
cmp
scas
in
cmp
jb
dec
cmc
jne
je
shlb
loopne
jmp
jl
les
les
iret
pop
xchg
xor
xchg
mov
add
jne
or
cwtl
add
mov
xor
mov
cmpsb
mov
xor
jl
mov
sub
or
add
mov
xorl
inc
dec
xchg
dec
js
je
mov
cmpsb
dec
cmp
push
into
jg
cmp
pop
push
insl
cmp
jnp
lahf
dec
fcomp
insb
pop
in
stos
scas
mov
popa
addr16
cmp
pop
stc
adc
push
sbb
mov
scas
int3
jnp
cmp
xchg
push
jne
and
and
fildl
jle
xchg
adc
lea
add
movsb
dec
adc
pop
jle
imul
cmp
inc
jg
insl
mov
scas
push
ret
leave
mov
push
pop
lea
jmp
or
mov
pushf
dec
push
repz
dec
ljmp
ret
inc
aam
mov
push
adc
pop
and
addl
ret
cmp
or
sarl
jle
loopne
adc
bound
sub
pop
and
jns
inc
inc
push
cmc
test
pop
repz
ss
cmpl
mov
icebp
mov
sarl
iret
iret
in
inc
scas
inc
fisubl
xchg
pusha
js
stos
sbbl
cltd
mov
insl
add
push
xchg
notb
xchg
xchg
in
subl
pop
dec
test
mov
sbb
mov
lret
loope
jge
das
push
retw
sub
out
jg
ljmp
shlb
int3
xor
push
adc
loop
imul
push
les
rolb
push
inc
add
push
sti
ljmp
imul
inc
pushl
push
out
or
xor
sbb
sub
push
je
test
outsb
lods
jo
ss
insl
xchg
inc
and
push
in
pop
mov
mov
mov
and
pop
fst
dec
mov
test
jmp
fsubl
xchg
dec
dec
das
scas
lahf
push
in
aas
in
adc
cmpb
das
sub
lret
jns
xor
scas
sub
pop
mov
adc
lods
lock
addl
cmpsb
add
repnz
adc
fildl
inc
or
xchg
adc
add
add
cltd
test
popa
cmp
lret
int
xchg
push
ljmp
hlt
inc
lahf
fildll
out
jb
imul
rcr
ror
xchg
test
shrl
test
jmp
in
in
push
fildl
xchg
push
sahf
lea
popa
cwtl
and
adc
addr16
dec
xchg
mov
rcr
sarl
addr16
ds
xor
pop
push
xlat
or
lcall
lods
movsl
sbb
sub
mov
jbe
lock
fs
mov
cmp
int
movsl
fwait
push
jl
push
test
mov
cwtl
imulb
mov
and
je
mov
out
mov
orl
pop
mov
jge
cmp
inc
xchg
int3
adc
out
and
int
pop
iret
xor
inc
pop
icebp
test
das
mov
xchg
shrb
mov
jp
insl
cmp
cmp
mov
loope
subl
jl
daa
sub
packuswb
xchg
pop
cmp
hlt
mov
rorb
mov
pop
xchg
daa
cmp
fists
dec
sarl
jg
test
mov
jns
orl
xor
push
inc
sti
insl
cwtl
out
push
in
xor
mov
sub
rep
shl
dec
push
cmpb
mov
notl
fisubrs
jp
mov
sub
arpl
jl
lcall
adc
nop
sbb
sbb
jno
mov
aaa
cmpsl
cmp
jne
push
dec
and
pop
je
pmaddwd
push
add
stos
outsb
add
cltd
aaa
mov
xor
insl
aad
lods
aas
and
mov
mov
pop
outsb
pavgw
fdivl
fsubr
lahf
push
out
and
sub
testb
and
pop
push
inc
shll
sbb
loope
mov
dec
add
push
mov
out
daa
into
clc
push
daa
cmp
imul
lea
out
mov
sub
stos
dec
popf
add
or
lret
cmp
es
mov
cmpsl
stos
dec
add
test
mov
pop
pop
inc
test
push
test
clc
fwait
sub
mov
adc
push
mov
out
roll
std
inc
rcll
jno
adc
js
push
xor
fucomip
push
and
pop
push
cmp
sub
shl
xor
or
cmpsl
xor
xor
mov
stos
cmp
push
sbbl
dec
push
jle
fimull
ljmp
daa
cmp
push
test
pusha
adc
rorb
dec
cmp
inc
sub
addl
pop
repnz
insl
jnp
movl
and
xor
xchg
stc
cmp
or
jae
loope
sub
xchg
scas
mov
daa
push
sub
push
adc
mov
sub
mov
or
hlt
int3
mov
adc
mov
lcall
push
pop
aaa
jmp
mov
testl
add
jnp
xor
das
adc
xlat
push
push
test
clc
in
shlb
icebp
mov
dec
add
cli
mov
mov
call
ret
outsl
roll
ret
pop
mov
and
mov
adc
fmull
imul
lds
push
arpl
mov
lods
rcl
cmpsb
mov
inc
sub
fcomi
mov
and
out
mov
hlt
inc
cwtl
add
ret
lods
stos
mov
add
loope
out
fidivl
enter
inc
xchg
dec
in
lods
pop
mov
int3
cmpsb
enter
push
mov
mov
push
jp
icebp
push
mov
xor
push
clc
pop
icebp
jnp
pushf
cmp
push
and
pop
xlat
sub
cmc
jmp
popf
adc
iret
jne
push
fistps
inc
mov
pusha
or
inc
mov
stos
jmp
jp
rorl
out
shlb
push
or
outsl
mov
xor
mov
xchg
in
dec
arpl
xor
mov
cmp
jl
setb
xchg
mov
pop
test
or
mov
and
in
jns
add
add
data16
stos
mov
xchg
aad
in
sbb
test
and
dec
and
push
pop
in
push
ljmp
imul
push
mov
mov
cli
mov
punpckhdq
cltd
mov
stos
mov
mov
xchg
mov
sbb
sub
cltd
mov
push
in
and
pop
pushf
push
cmc
bswap
mov
add
sub
adc
testl
push
jno
je
lds
cwtl
shrl
xchg
sub
xchg
mov
mov
xchg
push
les
mov
lcall
lock
ss
inc
lds
pmuludq
inc
xor
div
lahf
mov
aaa
ja
pop
xlat
addr16
out
rorl
push
scas
or
mov
lret
rorl
outsb
cltd
pusha
jb
movsl
js
bound
cwtl
pop
arpl
xor
dec
cs
pand
adc
cmp
lds
int3
sub
int
push
stos
aad
packuswb
push
into
repz
add
jge
fdivl
sbb
orb
jle
push
cmpsb
inc
jo
mov
mov
jb
add
aad
sub
cmp
cmp
fldt
dec
in
sti
push
add
mov
cmpsl
jmp
ljmp
mov
nop
fs
jmp
mov
movsb
jae
push
pop
lds
mov
adc
lcall
testl
dec
xchg
aam
sub
setno
and
decl
xor
insl
adc
or
movsl
pop
stos
cmpsb
lods
jno
cwtl
test
cmp
mov
mov
push
out
in
test
xor
and
add
lcall
lock
jae
inc
ja
mov
mov
inc
pushf
mov
jne
and
inc
jp
add
sbb
pop
fisubrl
mov
mov
jne
aas
xchg
iret
filds
shlb
not
add
les
nop
xchg
orb
mov
adcb
inc
into
inc
sarb
xchg
xor
and
push
cli
jne
jb
push
call
sbb
pop
es
xchg
dec
test
pop
push
fwait
mov
adc
inc
loope
or
call
in
mov
xor
lds
dec
mov
imul
dec
outsb
dec
sbb
mov
in
loopne
shr
js
cmovs
insb
pop
pop
mov
or
cmp
push
push
leave
out
cltd
pcmpeqw
or
inc
mov
ds
mov
push
sbb
ja
xlat
cmpsl
cmc
repnz
sub
mov
pop
mov
cs
sbb
test
cmp
mov
aam
loop
call
mov
mov
data16
sbb
jne
push
out
xchg
add
add
mov
out
inc
sbb
push
out
fmull
mov
xchg
je
ds
push
mov
push
inc
dec
inc
cwtl
jnp
mov
inc
pop
pop
pop
inc
neg
cmp
bound
adcl
shl
pop
cwtl
in
and
sub
pop
addb
cmpsl
xor
outsb
icebp
mov
loope
sub
xor
loop
mov
sbb
and
mov
bound
mov
mov
mov
testb
cmp
clc
movsl
mov
add
dec
lret
mov
fwait
lcall
rclb
sbb
aaa
and
mov
xor
mov
cld
jecxz
loope
mov
adc
rcrb
mov
mov
add
jge
arpl
out
push
push
xchg
cwtl
jg
dec
xchg
jecxz
sub
fcmovnu
dec
out
mov
sub
rol
push
sub
imul
add
cltd
add
dec
mov
adc
sbb
loopne
jge
pop
aaa
adc
pop
mov
adc
xor
jo
lea
mov
test
mov
xor
sti
or
sbb
icebp
pop
mov
push
into
in
mov
pop
notrack
arpl
jmp
xchg
imul
push
clc
cmp
inc
mov
cmpsl
add
ja
incb
fwait
lods
cmc
rcrb
push
cli
xor
stos
icebp
in
imul
xchg
in
cmp
jne
hlt
test
pop
enter
imulb
icebp
mov
xchg
inc
mov
and
popf
shrl
shl
inc
in
pop
insl
int
out
cmp
mov
js
push
jnp
xchg
push
aad
jg
pop
mov
dec
int
sbb
rcrb
jnp
jmp
add
mov
adc
loop
popa
sub
leave
cmp
sub
in
ficompl
out
jl
push
addr16
push
scas
nop
outsb
out
xchg
push
add
pushf
pushf
fidivs
int3
icebp
push
ud2
ja
insb
hlt
andb
sub
jno
push
mov
mov
fnstcw
push
dec
cmp
push
cltd
pop
xchg
pop
or
fcoms
sti
jmp
inc
popa
fwait
jp
test
ret
fsubrs
fmull
rcrb
mov
xchg
mov
in
mov
add
or
sbb
sub
mov
mov
repnz
jbe
mov
cld
dec
fwait
mov
cmp
mov
jp
and
push
adc
sbb
or
mov
shl
popf
in
and
addl
clc
xchg
hlt
sub
ljmp
and
loopne
xchg
insb
pop
xchg
push
fwait
adc
mov
dec
cmpsl
mov
push
push
bound
imul
xchg
shr
cli
es
jo
rorl
pop
mov
mov
mov
push
pop
mov
iret
xlat
mov
std
xchg
or
pushf
je
dec
lea
sqrtps
cmpsb
repz
addr16
jo
add
out
pop
mov
adc
fisubrl
je
rclb
push
imul
mov
jl
adc
jns
aaa
inc
mov
xor
lahf
xor
popa
aam
imull
xchg
xchg
mov
cld
and
inc
push
movsb
mov
cmp
push
das
ljmp
jnp
jmp
fidivl
or
test
xor
sub
arpl
rorl
sbb
arpl
fucom
icebp
es
loop
pop
push
push
lods
shl
mov
int
pop
lods
xchg
xchg
jl
lret
data16
inc
xchg
mov
jns
fdivl
repz
cmp
dec
push
xchg
jmp
fsubrs
sbb
shrl
in
sbb
shlb
jg
sub
decb
inc
xor
add
aas
nop
sub
aad
mov
fcmovu
push
fbld
lret
xchg
mov
iret
jns
and
jmp
stc
xlat
stos
sbb
xchg
add
shll
imul
and
cmp
xor
bound
dec
lods
jmp
mov
push
test
push
outsl
rcll
mov
sub
xor
adc
test
loop
jle
fstps
imul
mov
jae
inc
mov
push
rol
cmp
mov
xchg
sub
mov
cmp
inc
ss
adc
je
cmp
aaa
and
mov
movb
rcr
mov
pop
jg
std
push
sbb
xchg
addb
add
ja
stos
movsl
popf
add
mov
mov
sbb
jnp
pop
sahf
call
test
iret
inc
je
test
push
ss
mov
addr16
bswap
mov
hlt
push
mov
adc
jo
inc
mov
xchg
xlat
imulb
fisubl
push
push
lods
enter
sbb
mov
add
leave
lret
fidivrs
aam
xor
std
pop
or
inc
scas
dec
mov
cmpsb
sbb
jmp
test
xor
rcll
pxor
jno
addr16
pop
lds
mov
sahf
sti
pop
and
rolb
orl
lcall
idiv
mov
out
or
pop
insb
ja
lds
rclb
jg
bound
inc
notb
sbb
aas
cmp
jbe
dec
aas
or
inc
pop
inc
sub
cltd
mov
xchg
mov
inc
push
js
aas
daa
jle
inc
mov
mov
add
sti
loope
mov
nop
aaa
dec
pop
out
addr16
lcall
sbb
divl
jo
push
nop
call
mov
cmpsb
add
pop
test
xchg
and
aad
xor
jns
ffreep
mov
cmpl
sti
test
add
lret
cs
jb
jg
lods
push
jbe
sub
test
addr16
test
add
adc
sub
rclb
xchg
cwtl
loope
jbe
mov
push
ret
push
jb
lret
inc
pop
push
xchg
cmpsl
nop
pop
aaa
or
or
pop
rcrl
push
dec
in
push
sub
mov
mov
cmp
or
sbb
lret
in
into
scas
adc
xor
pop
inc
adc
inc
inc
mov
xor
sub
add
xor
adc
popa
jno
cmpsb
jno
sti
mov
or
xchg
idiv
and
fwait
iret
adc
push
inc
bound
les
jg
jnp
js
xchg
lea
js
sbb
in
lock
mov
test
adcl
jl
je
mov
enter
cmp
cmc
mov
add
lea
push
xor
lret
jle
test
jmp
jl
lcall
inc
ljmp
in
fstpt
shlb
fdivrp
mov
mov
andl
add
push
sub
arpl
lea
leave
mov
stos
push
jl
push
inc
out
test
popf
daa
pop
or
add
cltd
or
fwait
movsl
lret
cmpsl
pusha
xor
enter
cwtl
and
lods
add
add
sbb
xchg
jnp
mov
imul
pop
out
xchg
dec
dec
fisubrs
roll
push
inc
mov
push
or
fisubs
inc
outsb
and
jno
add
pop
jge
ds
push
int
inc
std
test
sub
push
push
iret
xor
enter
push
dec
sub
int
mov
or
outsl
lahf
data16
xchg
mov
mov
sub
cld
pop
xorb
dec
or
and
insl
cld
mull
in
jmp
setg
and
inc
adc
cwtl
cmp
imul
call
xchg
mov
call
sarl
adc
pusha
sub
xchg
cmpsl
xchg
xchg
cmp
sahf
pop
aas
push
or
movsb
and
cltd
jae
sbb
mov
loopne
and
mov
mov
sahf
adc
cwtl
mov
test
scas
mov
sbb
adc
pop
dec
into
mov
mov
inc
cmp
in
ja
scas
ret
fsub
sub
inc
xchg
fbld
dec
and
les
push
js
jne
lahf
testl
pop
pop
loopew
jg
cmpl
test
mov
setae
ret
lcall
sub
outsb
test
mov
sbb
js
xchg
shll
and
cwtl
mov
jl
mov
dec
cmp
xchg
out
sbb
lahf
pop
sahf
pop
mov
clc
test
or
xchg
jo
stc
jl
xor
mov
mov
mov
andl
and
test
cmp
jb,pn
in
sub
stos
sub
jno
inc
cmp
mov
mov
push
adc
stos
push
and
sub
xchg
jecxz
sbb
imul
in
lahf
and
push
insl
sti
and
and
fcmovnbe
pop
mov
mov
les
ret
hlt
dec
ret
sti
or
inc
das
push
push
iret
dec
int3
aad
repnz
cs
lret
mov
xor
add
inc
in
push
in
dec
pop
jge
push
mov
adc
cwtl
and
movsl
dec
lret
shrb
jo
mov
push
je
repnz
push
mov
je
cmpsb
pop
xor
inc
or
mov
xor
sbb
orb
ret
pop
out
pop
int3
xchg
mov
mov
xor
xlat
fildll
ds
push
jne
sti
lret
cmp
in
cmc
xor
cwtl
out
fadd
push
pop
data16
idivl
add
lods
adc
fistpll
out
pushf
adc
out
adc
jb
adc
or
cltd
divb
andl
pop
mov
jmp
pusha
jo
cld
shl
mov
mov
jp
xchg
pushf
cs
jecxz
pop
lock
push
cmp
popf
shl
inc
push
xor
movsb
pusha
xor
jl
push
add
sbb
inc
sti
and
nop
dec
arpl
adc
clc
cmpsl
pusha
test
sbb
pushf
in
popf
mov
aas
push
pushf
xlat
jno
xchg
in
add
sahf
mov
xchg
insl
dec
sub
fsub
mov
sbb
pop
pop
mov
push
and
add
sbb
scas
sub
aaa
imul
pop
fsubs
fcmovb
aad
mov
data16
outsb
mov
push
lcall
daa
jbe
scas
aam
adc
mov
adc
cld
stc
xorl
cmp
imul
outsb
push
mov
mov
out
cmpsl
movl
mov
std
jmp
sbb
sbb
popa
push
push
xchg
push
pop
es
ret
test
in
fs
adc
mov
pop
adc
int3
out
xchg
jp
ja
push
hlt
std
aam
shl
adc
imul
jecxz
inc
iret
lods
pop
aas
ljmp
jns
inc
mov
or
xor
out
fists
insl
mov
add
cmpsb
lock
sub
repnz
and
jbe
loop
jo
lods
fsubrs
stos
inc
pop
into
fstps
jb
in
mov
sub
jne
dec
jno
or
fsubl
sbb
or
jp
sbb
jmp
imul
and
bts
aaa
mov
mov
fidivrl
insb
movsb
sbb
push
mov
scas
pop
sbb
xor
inc
cmp
jb
in
sbb
cmp
pop
mov
ds
movb
dec
push
out
lret
insb
or
add
jmp
push
in
stos
lea
sub
xor
adcl
testl
adc
leave
adc
mov
and
push
int
or
inc
pop
in
mov
aaa
jl
dec
hlt
mov
mov
gs
or
push
xor
add
adc
mov
arpl
lcall
aam
push
mov
fidivl
shrl
shlb
adc
add
fdivrs
or
and
xchg
dec
push
inc
dec
push
or
nop
sbb
or
jb
aad
pop
pop
mov
cwtl
jne
cli
add
inc
insl
xchg
add
loop
stos
mov
test
xor
popa
jg
push
mov
mov
pushf
mov
jb
ret
sbb
lods
and
jnp
push
out
movsl
mov
div
sub
shrl
ret
and
iret
fidivrs
xchg
add
pop
int
adc
in
out
pop
adc
xchg
scas
jne
mov
pop
cli
xchg
rorl
popf
cmp
cld
inc
stos
fwait
inc
jge,pt
mov
push
test
int3
notb
xacquire
cwtl
leave
add
ljmp
iret
add
clc
dec
push
shlb
test
or
flds
dec
enter
cmpsb
daa
je
sbb
mov
lahf
ret
adc
jp
sub
aaa
lods
pop
lcall
sbb
fcmovb
fisubl
repnz
fmull
aad
ffreep
cmp
fisttpll
in
inc
movsb
xchg
jne
in
adc
jp
cli
add
sti
or
adc
add
jno
cli
or
jns
mov
jo
lret
outsb
incl
mov
push
push
dec
int
mov
dec
bound
ja
lret
loop
cs
inc
ljmp
pop
lods
mov
jle
sub
rorb
repz
in
sub
out
cmpsb
dec
push
jg
xor
sbb
or
testl
mov
lret
push
fldcw
push
ror
ja
mov
mov
mov
pusha
icebp
mov
add
jp
inc
gs
jp
js
cmp
sahf
jbe
xchg
out
inc
enter
dec
psubq
push
rorb
xchg
pop
clc
xchg
xchg
lahf
das
cld
xor
sbb
mov
mov
subb
popa
jge
adc
mov
sub
aam
mov
js
mov
ficoms
or
lock
testb
push
mov
lahf
out
jmp
mov
mov
inc
or
push
add
xchg
test
movsb
push
xor
xor
call
fwait
sarb
addr16
sub
xchg
in
in
fdivs
fsubp
outsb
mul
mov
rorb
fldcw
sub
and
stos
jg
inc
pop
push
and
daa
mov
stos
ljmp
outsl
cmp
es
pop
inc
fcomps
cmp
pop
inc
cmpsl
push
es
mov
clc
mov
sub
in
out
mov
std
pop
mov
addr16
mov
and
or
adc
pop
or
xor
or
les
in
dec
xchg
sub
lret
jg
cmp
test
pop
adc
mov
int
adc
pop
sbb
add
mov
pop
shlb
cmp
cmpb
mov
xchg
sub
nop
roll
mov
xor
shr
sbb
sbbl
mov
popf
xchg
stc
ficomps
movsb
sbb
xchg
push
sub
cmp
hlt
fcomi
dec
adc
jecxz
cmc
in
aas
sub
or
sbb
xchg
adc
inc
mov
xor
cld
je
adc
test
push
imul
aam
lock
adc
aam
shll
repnz
cld
jne
inc
ret
and
fcoml
xor
push
mov
std
xchg
stos
inc
jmp
testb
mov
pop
out
or
divl
push
iret
sub
xorb
insl
xchg
adc
mov
int
movsl
jecxz
ret
push
sub
push
xchg
ret
mov
pop
imul
mov
or
cmc
jmp
cmp
mov
arpl
add
sub
cmp
leave
pop
scas
pop
sarl
inc
mov
enter
xchg
in
or
jl
xchg
in
mov
cltd
popf
jmp
push
mov
repz
rcr
outsl
pop
push
std
sub
push
mov
xchg
cmpsb
jecxz
shrb
lock
rorl
xchg
fs
in
andl
inc
mov
sbb
adc
mov
call
xchg
add
adc
enter
xor
cmpsl
push
inc
and
in
xchg
roll
out
push
add
sbb
imul
adc
gs
into
lods
cmp
mov
stos
iret
xor
or
jnp
adc
movsb
mov
loopne
jge
shr
in
push
sbb
js
js
sub
out
mov
outsb
flds
sbb
cmp
adc
ja
int3
pop
pop
sbb
pop
lret
iret
sbb
jle
xor
sbb
sbb
or
loopne
bound
sarb
sbb
fldl2e
call
or
xchg
sbb
dec
mov
jo
mov
mov
cs
loope
nop
and
sahf
pop
ret
sbb
mov
stos
and
jp
ja
jmp
test
fisubs
or
xchg
orb
dec
inc
xchg
movsl
ljmp
pusha
adc
jmp
mov
rolb
mov
repz
mov
xor
sub
lock
jb
xor
dec
test
leave
test
iret
outsb
dec
sbb
xchg
jmp
aad
sarl
bound
cmp
fldenv
xor
jg
iret
in
adc
in
mov
hlt
rcll
outsl
dec
jae
fbld
aam
dec
rorl
lahf
cmp
add
icebp
lea
mov
es
xor
std
dec
push
add
cwtl
movsl
push
lods
adc
lcall
mov
xor
mov
aad
and
push
arpl
mov
inc
xchg
pusha
jmp
add
dec
test
imul
ret
rcl
jp
fstpt
sub
in
int3
adc
stos
jns
or
sub
ds
int
aaa
int3
cltd
shll
ret
das
cltd
xchg
cld
xchg
xchg
push
test
lds
push
push
adc
dec
lods
cmpsb
add
add
fbld
mov
xchg
sub
mov
out
cld
mov
fstp
lea
add
xor
mov
js
mov
push
adc
movsb
in
xorb
sahf
dec
pusha
xchg
ret
es
mov
mov
jno
sub
inc
lahf
inc
mov
xor
pop
mov
pop
push
into
push
insb
scas
adc
mov
push
call
xor
inc
lea
scas
leave
add
js
mov
sbbb
sbb
into
leave
dec
ret
sbb
fldt
adc
test
push
jg
mov
mov
cmp
adcl
inc
fwait
subps
data16
jb
lahf
test
lods
pop
dec
mov
mov
shrl
add
lcall
add
add
and
shll
xor
mov
ljmp
pop
jmp
jno
push
mov
xor
or
mov
mov
ffree
pop
or
movsl
repnz
out
add
cltd
cmp
cli
or
aaa
inc
pop
xchg
cld
lret
mov
loop
mov
ror
mov
mov
adc
cwtl
into
lcall
add
xchg
cmp
xchg
mov
aaa
cmpsb
cmp
sahf
in
in
inc
subb
pop
cmp
dec
inc
pusha
mov
push
mov
lock
cmc
rolb
pop
test
dec
push
fucomi
cs
and
and
cs
loopne
sub
fbstp
jnp
out
pop
sbb
add
adc
sub
cmp
cwtl
and
ds
sbb
fidivrl
mov
jge
push
movsl
mov
push
shlb
mov
push
outsl
pop
bound
xchg
insl
inc
mov
jmp
jl
cmp
xlat
and
in
cwtl
ja
lcall
xchg
cmpsl
mov
add
sub
and
repnz
testb
jbe
clc
stc
movsl
and
stos
mov
gs
je
mov
and
out
test
or
popa
push
sarb
mov
dec
cmp
enter
lods
call
mov
out
mov
shlb
push
aas
loope
aaa
daa
jb
sbb
imul
cmp
xor
insl
mov
xor
cmp
push
js
dec
popa
mov
and
out
mov
mov
and
push
pop
gs
rcr
and
pop
adc
sub
xchg
mov
jg
mov
cmc
fcmovnbe
and
int3
or
jmp
fidivs
mov
out
loopne
xorl
sub
jb
repz
roll
mov
cmpb
ja
inc
aam
mov
xchg
adc
out
scas
js
push
int
mov
jg
push
sub
jl
xor
test
push
xor
ja
enter
les
mov
sbb
std
adcb
outsl
mov
mov
dec
xor
bound
test
out
dec
iret
jg
mov
cli
bswap
cmp
or
pop
je
cmp
xor
aaa
popa
cltd
in
xor
sti
sub
xlat
fnsave
test
dec
sub
scas
add
sub
mov
xchg
push
test
iret
push
popa
dec
ljmp
out
xor
xchg
stc
fcomi
xlat
push
jae
push
add
fcomps
fwait
imul
mov
cmc
roll
lret
das
insb
dec
push
test
xchg
imul
xchg
adc
push
shlb
clc
pop
push
xor
rcrb
adc
push
jle
add
jns
inc
and
or
sbb
xor
sbb
sub
jne
and
daa
nop
leave
jmp
dec
sub
pushf
cmpsb
roll
mov
jno
cmovnp
push
stc
pushf
icebp
lret
sbb
jl,pt
popf
and
push
mov
pop
lods
test
test
xchg
mov
jmp
push
inc
cld
incl
mov
pop
jbe
sbb
sbb
push
stos
mov
imul
cld
dec
dec
cmp
sbb
adc
pushf
add
inc
and
xchg
xor
jmp
mov
cmp
mov
xchg
popa
in
stos
adc
mov
add
mov
lret
fisubs
sbb
sarb
fcmovnb
pop
rolb
out
int
push
sub
and
loope
dec
data16
roll
jb
mov
pop
das
lahf
xchg
popf
inc
xchg
add
sbb
loopne
fdivr
sub
cmp
adc
lods
inc
cmp
dec
mov
stos
sahf
lcall
dec
and
je
mov
in
int
fisttpl
inc
leave
mov
push
mov
xlat
jmp
cmp
sub
lock
sub
ror
lods
xchg
push
cmp
mov
pop
pushf
xchg
xchg
test
cli
fisubs
dec
xchg
test
inc
mov
adc
xchg
cs
and
mov
lock
fldcw
xchg
and
or
jnp
jecxz
xor
fsubp
dec
mov
push
loop
push
jg
fucom
mov
inc
repz
rolb
or
mov
clc
movl
call
popa
jg
sbb
outsl
sbb
xchg
xchg
mov
jecxz
pop
daa
cmp
icebp
call
mov
test
mov
sahf
orl
negl
daa
mov
xchg
push
es
sahf
cld
pop
mov
ljmp
xchg
push
sub
adc
dec
pop
ss
cs
aad
push
rcrb
cmpsb
adc
cmp
push
dec
sub
stc
fmuls
cmp
xchg
out
pop
addl
cmp
inc
rorl
addr16
adc
adc
mov
sbb
push
xor
negb
push
xchg
cli
cmpsb
clc
cmp
aas
loope
jmp
aas
mov
lds
ror
pusha
pop
andb
sbb
cld
and
es
call
inc
daa
pop
mov
and
data16
call
int3
sbb
ljmp
xor
je
in
int3
out
adc
jnp
cltd
out
test
ss
dec
jb
fisubrl
iret
shlb
mov
push
mov
cwtl
dec
dec
int3
jp
xchg
inc
std
aas
xchg
jg
out
in
ja
push
lods
fidivl
loopne
jo
js
loope
das
imul
aaa
dec
flds
inc
imul
ja
mov
cmp
dec
sbb
stos
fdiv
andb
push
push
push
std
subb
xor
jne
scas
aas
add
lods
in
mov
cmp
mov
push
mov
sbb
xor
sub
in
imul
mov
and
cli
das
pop
inc
sub
jl
xchg
mov
pop
push
inc
jge
fcmovbe
js
cmpl
das
mov
push
arpl
xchg
repz
arpl
inc
int3
mov
sub
jo
or
idiv
and
adc
cmc
movsl
pop
mov
pop
jl
movb
xchg
xchg
mov
mov
stos
jno
push
pop
ret
mov
inc
sbb
stc
in
movd
sbb
scas
or
rorb
lcall
or
cmp
es
pop
outsb
xor
mov
jmp
rol
scas
sbb
flds
sti
cltd
aam
xchg
outsb
cmp
add
ljmp
lcall
push
sub
cmp
icebp
insb
or
cmp
sub
inc
jo
xchg
add
jl
jb
jbe
xor
mov
loope
jne
pop
dec
ljmp
sub
jle
xchg
fdivs
add
iret
fldt
mov
movsb
int
jo
cmpsb
pop
or
cmpsl
xor
xor
jb
pop
adc
popa
mov
xchg
jnp
adc
adc
std
ss
pop
jmp
js
inc
adc
xchg
fbld
pop
add
roll
sub
mov
sbb
dec
inc
movsl
cmpsb
xchg
out
push
fsub
sbb
rcr
push
jno
adc
pop
mov
mov
lds
mov
int
cmpsb
jl
iret
add
xor
call
cld
cmp
cmp
arpl
mov
cmp
js
es
inc
inc
ljmp
lret
push
mov
cmp
mov
les
pop
xchg
cmp
adc
adc
cs
rcll
loop
inc
ret
xchg
out
add
adc
loopne
movsl
xchg
pop
mov
in
imul
movsl
push
es
addr16
cltd
jmp
outsb
push
movl
add
pop
sahf
mov
cli
and
cmc
icebp
sbb
push
mov
jb
or
ja
lock
loope
pop
dec
push
insb
xchg
and
fcmovb
insl
stos
mov
sub
fistps
imul
out
add
sbb
cwtl
in
or
icebp
lods
dec
dec
mov
and
cmpsb
test
out
xchg
sahf
xchg
xchg
fldcw
leave
or
cs
movsb
mov
mov
mov
sbb
in
push
aad
pushf
pushf
adc
push
cmp
scas
stos
icebp
popa
mov
in
jne
add
push
push
and
out
cs
pop
xor
push
rcll
dec
fistps
enter
jg
divb
mov
sub
jb
adc
mov
rcrl
or
and
faddl
add
pop
gs
mov
sbb
mov
xchg
sbb
xchg
insb
mov
cmp
dec
into
jb
mov
fcomi
jecxz
add
pop
fcomps
cmpsl
mov
jb
cmp
mov
jmp
insb
fs
adc
mov
pop
push
int
insl
repz
jne
mov
jno
or
sbb
mov
add
sbb
es
notb
xchg
stos
xlat
out
pop
mov
rep
or
jne
jp
test
inc
ds
mov
fs
push
pop
and
jle
cmp
push
pop
iret
stc
or
mov
push
dec
fisubrl
stc
cs
int3
push
dec
fisubrl
or
outsl
add
call
jle
push
jns
push
jne
lret
testl
or
rcll
in
xchg
movhps
icebp
arpl
adc
mov
cmp
mov
cmpsb
push
fwait
cld
fisttpl
rcr
push
int3
mov
imul
lea
mov
dec
test
mov
dec
test
shrl
sub
mov
bound
mov
lret
mov
stc
sbb
mov
into
and
aam
sar
and
inc
pop
lcall
ss
test
sbb
adc
xor
push
lahf
push
daa
dec
insl
cmp
testb
pusha
add
hlt
bound
pop
mov
data16
std
dec
notl
sub
fldcw
sub
or
mov
outsl
sbb
mov
lret
das
push
sbb
xor
jl,pt
pop
and
jge
clc
arpl
mov
gs
mov
movsl
movsb
pcmpgtw
xor
pop
cmpsl
push
roll
inc
inc
rcrl
loope
aam
loope
push
cmp
mov
dec
add
mov
or
arpl
jl
cmp
aas
aad
pop
and
and
push
cltd
mov
icebp
out
stos
jnp
or
push
mov
pushf
lods
jcxz
add
fdivr
mov
xor
add
xor
dec
sub
mov
add
fnsave
aam
fistps
loope
inc
push
fwait
dec
scas
jno
test
dec
in
jp
cmp
in
negl
clc
rcrb
inc
shrl
mov
lods
or
jns
cmp
jl
jae
je
dec
inc
pop
scas
dec
xor
push
push
rcrb
flds
movsl
mov
xchg
cli
and
cmp
aaa
add
es
jmp
mov
mov
or
rcll
repnz
in
aaa
insb
cltd
scas
scas
jns
aaa
jmp
cmc
sbb
leave
addb
mov
and
xchg
cli
out
cmp
or
jno
test
and
js
out
pop
mulb
fs
sbb
dec
mov
sub
outsl
insb
mov
pop
cmp
aas
dec
test
adc
lds
insl
rorl
adc
out
ljmp
insl
stos
cmp
shlb
adc
lds
add
clc
push
jmp
imul
push
pusha
repz
lea
or
test
add
in
mov
lock
cli
clc
pop
sbb
or
push
into
cmp
andb
jb
mov
fdivs
jns
dec
and
adc
repnz
jne
sub
xchg
cmc
xchg
lock
xor
mov
or
jnp
je
mov
pop
dec
mov
jecxz
je
push
push
stc
stos
and
fldt
dec
sahf
hlt
mov
xchg
sbb
push
sbb
xor
sub
sbb
xchg
test
lock
ficoml
adc
les
scas
xchg
sub
aad
daa
mov
movl
adc
fsts
pop
push
scas
cmpsl
repz
arpl
pop
fwait
adc
sbb
xor
stos
adc
mov
iret
sbb
cs
ljmp
cmp
loopne
movsbl
xchg
dec
test
lds
ja
and
cmp
push
sti
mov
loopne
push
or
cwtl
or
inc
push
gs
mov
xchg
cwtl
push
lret
ljmp
mov
jmp
mov
scas
enter
jecxz
or
sbb
push
cld
push
lahf
ds
inc
mov
push
cmp
jecxz
sub
mov
mov
imul
outsl
aas
jno
cmp
aas
add
fimull
add
and
or
outsl
test
adcl
sbb
dec
pop
sub
xchg
loope
test
aas
xor
and
and
sub
cmc
loop
imul
xor
and
icebp
enter
ja
push
cmp
outsl
cld
fwait
xor
fwait
les
mov
jle
mov
push
faddl
out
push
xchg
and
pop
notb
add
sbb
push
into
sub
xchg
mov
cld
jns
mov
sarb
xlat
mov
mov
mov
arpl
inc
movsl
pop
pop
ds
sub
fldt
imul
pop
aad
xchg
fs
fstpt
add
gs
out
xor
dec
xchg
mov
js
dec
pop
test
push
push
mov
jecxz
or
jnp
push
sahf
lock
mov
shlb
sarl
push
in
les
dec
test
jne
aaa
rolb
mulb
cmpsb
push
push
shr
adc
cwtl
aas
push
icebp
xor
mov
subl
and
in
pop
sbb
sub
jne
pop
adc
jbe
data16
fs
pop
xchg
rorb
movsl
push
loop
into
cs
pop
mov
sbb
leave
jmp
push
insl
push
jmp
test
paddd
pop
adcl
mov
gs
or
dec
arpl
sbb
int
movsb
and
mov
jg
imul
jp
into
mov
divl
test
hlt
cmp
jns
add
fcomp
out
sahf
mov
in
dec
push
shlb
push
fstl
xchg
sbb
adc
stc
jno
fists
and
xchg
mov
shr
mov
sahf
and
es
js
addr16
lret
je
icebp
adc
push
add
inc
mov
push
add
mov
fdiv
adc
enter
push
aam
aam
pop
pop
fildll
shll
lods
sahf
push
jp
imul
or
rcrb
jmp
xor
dec
in
push
clc
mov
mov
xor
jp
dec
dec
ja
inc
test
cmc
mov
jo
movsl
sub
movsb
sub
and
inc
aam
sub
mov
fisubrl
in
mov
mov
loop
dec
mov
ret
cld
mov
je
hlt
pop
outsl
mov
pop
add
sahf
sub
sbb
xor
push
and
mov
adc
mov
sub
int
lea
or
push
jg
cmp
out
push
and
add
addr16
fidivl
dec
jl
add
pop
lret
movsl
pushl
mov
out
fdivs
mov
outsl
add
into
aaa
fdivp
ljmp
aad
aaa
jmp
lret
out
mov
push
out
pop
stos
js
pop
aam
jp
add
jl
jl
cmpsb
scas
nop
dec
movsl
mov
ja
arpl
aad
repnz
push
adc
insb
xchg
jg
push
lret
pop
mov
mov
add
ja
ficoml
jecxz
es
addl
popa
mov
push
mov
sbb
jle
ret
or
test
and
pop
sub
int3
call
sahf
jo
xor
fdivrs
aaa
outsb
lret
cmp
jns
pop
xor
sbb
sbb
or
ja
in
or
or
dec
jp
imul
mov
int
enter
movsl
lahf
sahf
push
mov
mov
fs
inc
pop
cmp
fs
pop
decb
add
dec
scas
fistl
lret
leave
cmpsb
pop
inc
loopne
or
pop
cmp
call
shrb
cmpsl
int
add
jl
dec
pop
lock
and
dec
push
add
mov
nop
mov
or
or
mov
xchg
hlt
loop
int3
push
cmc
dec
mov
sti
shl
outsl
pusha
out
arpl
repnz
fstps
pusha
in
jb
outsb
pop
je
daa
lret
xchg
jnp
hlt
xor
cwtl
je
int
inc
loope
inc
xor
lock
lock
fldt
dec
inc
das
mov
fsubrp
clc
adc
notl
pop
xor
in
out
cmp
inc
jg
cmc
sub
daa
fcom
in
mov
fsubrs
fistps
cmp
mov
or
aas
add
int3
cmpl
test
push
dec
mov
xchg
or
adc
or
cld
cwtl
call
dec
mov
cmpl
pop
pop
jecxz
dec
fnstenv
lret
mov
lods
mov
jmp
cmp
push
and
sbb
jo
cli
xor
jb
inc
push
jmp
xor
fistpl
sub
movsl
sub
out
xchg
or
sbb
jbe
shrb
aaa
inc
mov
in
daa
aaa
cmpsl
mul
cmp
xchg
cwtl
in
sbb
ss
and
movsb
movnti
jp
int3
mov
insb
xchg
dec
es
pop
mov
mov
ds
push
imul
std
inc
mov
repz
lahf
mov
lods
sub
push
jmp
ficoml
mov
push
mov
mov
out
rcrb
je
sbb
inc
push
outsl
popa
jecxz
shl
adc
push
xchg
xchg
inc
movsl
dec
or
subl
movsb
mov
inc
in
popa
or
outsb
lods
repnz
fsubr
jp
loope
retw
jne
outsb
mov
aas
add
mov
imul
inc
jmp
not
sbb
mov
je
std
sub
or
jmp
mov
xor
lret
int
push
rorb
fcomps
add
dec
fimuls
nop
sti
sbb
fwait
loop
dec
in
inc
fcmovbe
xchg
sbb
test
stos
test
pop
or
in
mov
push
enter
cmp
jg
xor
jecxz
add
mov
cmpsb
inc
xchg
adc
adc
shl
lret
scas
jg
jo
xlat
lret
push
xchg
iret
adc
jno
lods
popa
lods
decl
repz
lods
into
or
jmp
outsb
movsl
repz
mov
mov
popf
fistps
cmp
repnz
pop
mov
out
mov
or
xlat
mov
fdivrs
cmp
addr16
or
add
cmp
push
xchg
xchg
sbb
xor
lcall
jl
cmp
jns
or
mov
xchg
adc
arpl
int
or
sbb
pushf
dec
ss
jl
cmp
adc
loop
jmp
test
mov
xor
inc
loop
xor
hlt
inc
daa
inc
xchg
test
cld
test
mov
sub
orl
mov
pop
imul
xchg
pop
repnz
inc
xchg
inc
xor
lcall
ljmp
repnz
fwait
lcall
dec
aam
aam
cltd
jne
mov
dec
bt
aas
lret
es
nop
fucomp
arpl
stc
mov
xor
add
jl
fldcw
inc
lret
dec
mov
bound
sysret
mov
test
or
decb
jle
nop
shlb
adc
sbb
xor
mov
mov
add
fsubrl
cwtl
lea
add
push
fidivl
inc
lret
ret
sub
pop
dec
dec
mov
mov
cli
stc
adcl
mov
add
les
xchg
push
scas
pop
pop
dec
jle
enter
lds
inc
stos
mov
push
mov
jns
cs
xchg
push
mov
jecxz
subb
add
pushf
mov
shl
mov
or
lock
iret
push
les
and
jl
lcall
jo
inc
fucomi
in
stos
dec
cs
data16
fisttps
mov
adc
sub
push
int3
jnp
push
dec
adc
and
cmp
dec
inc
cmpsl
push
inc
fcomi
out
add
ljmp
mov
imul
or
pop
das
addr16
dec
push
mov
pop
mov
into
or
pusha
adc
test
inc
and
aas
sub
rcrl
dec
fwait
insb
or
add
jecxz
mov
int
sahf
in
mov
xchg
icebp
pop
mov
pop
fmull
push
pop
aaa
in
fstl
jae
cmp
int
and
int3
repnz
sub
mov
mov
cwtl
fimull
movsl
jne
or
push
xchg
cld
adc
and
aam
divb
jmp
mov
add
movb
inc
stc
fdivrl
add
stc
movsb
push
pop
je
aaa
lds
mov
imul
aam
cmp
dec
or
mov
dec
jnp
sbb
dec
pop
int
fdivr
ja
gs
aam
sub
xchg
cmovp
xor
femms
mov
cwtl
pop
sti
aas
and
or
inc
jo
negl
inc
popa
popa
shrl
xchg
imul
arpl
les
andb
mov
mov
push
add
aam
je
arpl
imul
jecxz
repnz
ret
stos
mov
push
fistpl
xchg
out
push
lock
repnz
int3
mov
sbb
jo
adc
sbb
push
add
cmp
cmp
fstl
ss
int
adc
mov
jg
test
scas
push
mov
jnp
jne
xor
jne
sbb
jecxz
in
jl
and
jmp
ljmp
cmp
xchg
or
add
in
dec
sbb
cmpsb
arpl
xchg
xor
lock
xchg
stc
mov
aam
outsb
orb
test
es
xchg
xor
cmp
mov
lcall
pop
std
test
daa
mov
mov
adc
adc
loope
push
and
mov
shlb
and
or
stos
adc
jns
and
std
lods
test
cmp
jmp
add
lahf
inc
adc
leave
jae
jne
int
shr
mov
addl
add
inc
add
xchg
push
pop
xchg
jns
inc
mov
dec
jl
cmp
xchg
arpl
jne
jmp
iret
call
jmp
test
bound
pop
lods
xor
jo
call
aam
shlb
in
dec
mov
movzbl
popw
dec
es
fadd
clc
push
fldl
sub
push
jge
pop
jnp
sbb
jl
pop
adc
cli
leave
mov
dec
repz
jp
arpl
bound
sub
mov
sti
xchg
jmp
mov
idivl
inc
mov
add
xchg
mov
or
div
ds
fdivr
xor
std
in
ss
ja
adc
movsb
and
xchg
aaa
fnstenv
rolb
test
push
add
add
cmp
rclb
jp
jmp
stc
pop
std
mov
sarb
jo
or
cli
add
data16
dec
cld
sub
cld
mov
xor
or
andl
lds
es
ds
and
pop
call
pop
dec
xor
lcall
pop
adcl
mov
out
sti
xchg
sahf
add
movsl
mov
incl
cs
mov
test
test
pop
out
cmc
fnstsw
jmp
jae
pop
pop
mov
outsb
xchg
enter
adc
xchg
push
loopne
cmp
mov
imul
cmpsl
xchg
add
enter
inc
jae
aas
mov
aaa
rolb
stc
iret
daa
ret
add
jl
sar
jl
dec
xchg
pop
insl
out
cmp
out
xchg
and
call
and
pop
push
or
push
add
ja
popa
cwtl
push
iret
out
jg
mov
xorb
mov
adcb
dec
stos
leave
or
gs
imul
inc
push
mov
cld
aam
and
jl
sub
dec
popf
daa
cwtl
lock
sbb
fmul
add
sub
fdivrl
cmp
sbb
adc
aam
sub
call
adc
adc
mov
fildll
xchg
loopne
outsb
push
pop
xchg
outsb
xor
mov
mov
movsb
ss
test
ret
xchg
cmp
lret
cltd
aad
mov
roll
pusha
adc
and
outsb
sub
adc
or
gs
out
xchg
andb
jno
outsb
dec
dec
cmp
adc
push
popa
adc
outsl
shlb
mov
cmp
into
enter
add
loope
scas
test
test
sbb
gs
scas
xor
pop
adc
jp
sbb
inc
cmp
enter
fdivr
cmc
mov
push
imul
push
fidivrl
fwait
cmp
xchg
adc
push
pop
fsts
jb
push
pop
movsb
je
pop
cmpsb
popa
dec
dec
add
push
adc
es
mov
imul
aas
cwtl
test
sbb
jnp
clc
mov
push
jb
fldenv
sbb
gs
test
sub
sub
or
lds
clc
jns
loop
fadds
jae,pt
jno
jmp
mov
jne
or
jecxz
cmp
xor
ss
mov
nop
push
lds
xchg
or
jnp
add
je
xchg
in
fistl
fisttps
fdiv
xlat
sub
pop
sub
call
jbe
mov
xchg
xor
repz
sbb
sub
pop
aam
cmp
stc
movsb
faddl
xchg
loope
dec
mov
les
pop
fs
insb
insl
data16
in
dec
sub
or
add
push
nop
gs
xchg
mov
adc
imul
and
xchg
cmpb
cmc
mov
loopne
xchg
pop
cmp
mov
or
pop
daa
push
and
xchg
xlat
jp
stos
or
jno
aaa
out
hlt
clc
das
jmp
pop
lds
in
or
shr
sbb
jnp
shufps
mov
repnz
jmp
and
cld
xchg
fscale
icebp
lds
outsb
in
in
push
cmp
pushf
add
es
xor
adc
xor
pop
mov
xchg
insb
addr16
mov
pop
fldt
adc
mov
imul
jmp
and
xor
xchg
inc
jecxz
push
jge
int
mov
push
xchg
push
arpl
xchg
pop
repnz
mov
sub
stos
ret
andb
cwtl
push
cmp
in
sahf
or
mov
inc
xchg
shlb
out
cwtl
add
ljmp
jae
insl
inc
inc
in
mov
aaa
xorl
fstl
les
sbb
add
adc
aas
mov
mov
mov
call
inc
fcomip
sbb
jne
jne
mov
mov
add
enter
cmp
in
enter
out
sub
xor
in
or
pop
cwtl
nop
dec
ja
pusha
cmp
pop
ljmp
cmp
adc
pop
adc
jae
sahf
out
pop
test
or
and
fsubr
push
cltd
or
ficompl
stc
push
movsb
adc
jg
xchg
sub
lahf
jno
movsl
cmp
jo
mov
mov
daa
or
mov
lahf
stos
inc
or
cltd
inc
push
inc
xchg
dec
push
js
pop
aaa
outsb
pusha
and
push
inc
in
push
jns
jecxz
inc
sbb
mov
insb
fmul
adc
inc
jmp
je
mov
rcrl
in
mov
sbb
fwait
cltd
out
pop
or
clc
jae
xor
ds
lahf
das
lea
lcall
lahf
mov
adc
mov
test
jl
add
incl
scas
pop
cs
pop
pushf
jno
adc
adc
adc
int
add
pushf
or
pop
jle
aad
ljmp
movsl
mov
stc
pop
sbb
movsb
pop
shll
pusha
aad
std
sbb
and
lret
mov
mov
mov
xchg
dec
je
xor
test
subl
cmp
mov
cmpsb
mov
pop
inc
xor
loop
sbb
add
sbb
les
jecxz
aas
iret
lahf
dec
bound
ja
and
cmp
imul
aam
sub
les
ficoml
mov
es
inc
sub
into
lods
or
ja
mov
movsl
ja
push
pop
pop
lret
xchg
jae
insb
pusha
scas
pop
scas
cmpsb
subb
stc
lock
adc
pop
push
cmp
test
pushl
dec
cmp
cmpsl
std
aam
adc
int3
imul
cli
lret
mov
jns
int3
fisttpl
pop
adc
xchg
pusha
and
inc
jp
inc
movsb
ss
es
fisttpll
iret
xchg
xchg
inc
mov
hlt
cmp
pop
clc
dec
pop
mov
fwait
stos
shlb
roll
psrad
sbb
mov
addr16
pop
test
fidivl
aas
sub
int3
das
cmp
mov
mov
push
mov
or
lret
sarl
mov
adc
push
fdivp
push
cmpb
mov
popa
fcomps
fsubs
in
cs
addl
cmc
es
seta
aam
or
xlat
mulb
and
xchg
in
ss
dec
jnp
mov
clc
pop
insb
test
jl
mov
xchg
sarl
in
fxtract
iret
push
int
or
fldenv
lock
push
and
jle
xchg
js
jbe
dec
xor
stos
out
xchg
dec
imul
xchg
enter
adc
test
inc
pop
mov
sub
or
fstpl
lret
pop
rol
cmpb
xor
test
sbb
dec
frstor
call
cltd
testb
mov
aam
bswap
imul
mov
push
cwtl
xor
jns
call
or
cmp
cmpsb
mov
mov
xlat
out
xchg
mov
or
push
or
inc
jle
rclb
sti
jmp
xchg
pushf
insb
and
pop
fstl
sbb
ja
jl
shrl
push
loop
movsb
jmp
mov
jmp
fcmovb
mov
or
shll
pop
pop
xchg
scas
ljmp
xor
mov
xlat
in
pop
cmpsb
pop
mov
das
mov
pop
push
rcrl
bound
rclb
test
add
mov
xchg
sub
adc
clc
xchg
push
mov
or
cmp
adc
popf
push
ret
enter
mov
mov
hlt
bound
cmpsl
cs
es
or
cld
call
cld
push
push
das
push
dec
inc
pop
push
mov
xchg
bnd
aaa
hlt
pop
adc
push
push
scas
add
add
sbb
lds
cwtl
stc
cmpsl
push
xchg
add
lcall
add
bound
push
and
push
cltd
dec
sub
loop
test
mov
movsb
mov
push
imul
mov
sbb
sbb
dec
fdivs
inc
pop
mov
aaa
aaa
add
ja
push
cmpsl
jg
jg
iret
push
sbb
stc
loope
xchg
and
hlt
fsubr
dec
dec
sbb
push
js
xchg
cmc
jecxz
inc
adc
subl
pop
lods
daa
pop
jge
and
fists
fcmove
mov
sbb
ljmp
or
adc
jge
mov
push
ss
psubusw
push
shlb
rcrb
sbb
call
cmp
movb
cmp
out
shlb
leave
xchg
or
mov
mov
or
jge
mov
mov
mov
aam
cld
mov
xor
lret
mov
mov
dec
cmp
loop
stos
mov
mov
cmp
lcall
push
xchg
jnp
push
std
in
xchg
fcmovne
nop
repnz
pop
mov
pop
jecxz
and
xchg
rol
mov
adc
ljmp
or
insl
jg
and
push
aam
ficomps
inc
mov
icebp
sub
inc
rcrl
mov
into
ret
sub
test
mov
push
bound
fidivl
sub
pop
mov
js
and
mov
dec
ds
or
popf
and
in
ljmp
movsb
inc
or
add
hlt
and
lcall
push
lods
jle
lock
mov
cli
xor
sbb
pop
stc
sub
xchg
pop
sti
xchg
popa
push
adc
pop
pop
fisubrs
out
push
leave
push
daa
sbbb
test
mov
jge
sub
cmp
xchg
mov
ret
test
loopne
mov
jb
dec
cltd
push
gs
ss
cmp
push
les
pop
xor
out
jns
mov
lods
pop
push
insb
das
rcr
mov
push
roll
and
pop
mov
nop
and
cmp
push
jg
lods
out
outsl
mov
lea
jno
nop
in
push
xor
nop
jne
or
popa
lret
sbb
mov
or
inc
addr16
sti
test
aam
dec
jo
leave
shll
sub
clc
push
cmp
ja
xchg
divl
pusha
cs
mov
and
and
shlb
cmc
pop
pop
cmpb
pop
jae
jae
sbb
lret
pop
mov
test
xor
inc
push
jg
leave
ret
jmp
sarb
dec
add
adc
aaa
sbbb
shll
in
dec
mov
popaw
cmpsl
test
xor
cmpb
cltd
sbb
cld
jl
and
pushf
sbb
std
sbb
cs
cmp
outsl
arpl
sbb
add
push
jmp
push
es
loop
in
xchg
bound
stos
inc
sti
jne
addb
inc
cmp
outsb
std
call
push
jno
loope
loop
mov
lea
int3
fcoms
aam
ficoms
iret
sub
jle
inc
icebp
mov
pop
mov
loopne
push
jecxz
add
cmp
int
ss
rolb
lds
test
xor
movsb
rorl
lret
ljmp
sub
mov
movsb
fwait
and
jmp
and
mov
hlt
cmp
ja
int
rolb
push
push
popa
fwait
imul
pop
pop
xchg
xchg
jmp
test
cmp
inc
hlt
xor
cmp
mov
lahf
jne
iret
and
pop
mov
inc
jne
addb
sub
rcrl
cwtl
xorb
fcomi
stos
adc
cmp
shld
dec
movsl
insb
cmp
adc
inc
mov
popa
mov
cmp
cmp
mov
icebp
sub
mov
adc
mov
jb
pushf
cmp
add
aam
dec
cmp
sub
dec
cmp
sbb
jl
loop
cmpl
mov
enter
mov
xchg
sbb
cmc
ficompl
lcall
int3
cmp
xchg
hlt
rcrl
lock
sub
mov
add
cld
lods
aad
fistpll
pop
cmp
dec
dec
mov
mov
clc
inc
mov
das
mov
pushf
das
aam
jnp
rol
push
aad
cmc
pop
dec
testb
pop
push
cld
add
pop
stos
adc
or
inc
pop
inc
in
mov
dec
daa
sbb
test
adc
stos
jbe
xor
and
sbb
loope
pop
adc
xchg
xchg
dec
mov
inc
push
mov
or
ror
cmp
fwait
push
add
sbb
js
aam
cltd
cmp
cld
mov
incb
loope
lods
mov
pop
mov
xor
fnstenv
add
sbb
dec
fcomip
loope
pop
imul
sahf
nop
enter
adc
push
decl
aas
popf
addr16
cmc
je
or
es
mov
in
pop
lea
rcr
sbb
imul
cmpsl
add
test
sbb
mov
mov
insb
push
xor
push
iret
pop
fdivl
lods
in
push
leave
mov
add
dec
lods
mov
sbb
pop
aam
iret
xchg
or
lret
push
ret
std
push
dec
jecxz
cs
jl
and
shr
int
or
ret
dec
aam
mov
cmc
add
and
inc
movsl
or
or
mulb
mov
repnz
out
push
dec
adc
stos
dec
loop
pop
push
pushf
dec
pop
jb
lods
jmp
add
or
inc
mov
es
lods
stos
xor
or
jle
repz
inc
fisttpl
sbb
aam
inc
sub
jnp
das
mov
or
icebp
jnp
sbb
negb
aam
jmp
gs
adc
out
bnd
or
fnstsw
mov
sbbb
fsub
fxsave
inc
popf
aaa
jg
jge
sahf
push
adc
sub
add
pop
test
and
adc
adc
inc
sbb
or
cli
lods
jae
push
lcall
lea
inc
sti
sub
fstps
push
inc
sahf
dec
jo
aad
mov
sub
clc
lcall
pop
andl
or
ret
mov
daa
pop
and
and
jns
or
dec
repz
outsl
jno
or
inc
adc
xor
and
pop
or
pushf
and
call
and
outsl
stc
clc
adc
xchg
popa
test
out
xchg
insl
jp
hlt
inc
rorl
lea
rolb
test
int3
int3
mov
sbb
in
stc
outsb
mov
push
clc
aad
leave
push
fmull
push
ss
push
inc
sahf
lock
xlat
je
jge
xor
jb
test
out
add
sarl
push
or
rorl
push
jle
mov
daa
sti
xchg
lods
mov
add
inc
and
push
fildl
mov
aad
jne
adc
je
daa
dec
mov
arpl
sub
xor
sub
jae
cmp
mov
or
lret
dec
add
cli
adc
test
cs
cmpsl
xchg
push
or
in
loopne
das
jo
mov
out
in
nop
sbb
or
shrl
sbb
push
xlat
mov
cmpsl
inc
cmp
cmp
jle
cmpsb
jmp
xor
jg
pop
addr16
mov
arpl
lds
aas
xchg
sub
popf
adc
mov
es
jp
pop
push
push
out
rcrb
pop
mov
push
movsb
push
enter
repnz
jmp
aam
cmp
pusha
xor
add
inc
lcall
inc
test
and
adc
xchg
cmp
adc
scas
cs
push
dec
mov
or
push
dec
adc
jns
test
popa
pop
push
stos
mov
push
lods
data16
mov
pop
cs
dec
jp
into
mov
shll
fcomp
mov
push
popa
pmullw
sub
adc
outsb
mov
xchg
sbb
push
xor
rorl
out
or
push
sub
sub
scas
push
jp
pusha
mov
mov
cld
pop
push
test
iret
outsb
jmp
std
aas
out
jns
pop
icebp
stc
call
sti
fs
sbb
nop
xchg
rorl
add
pop
dec
pushf
add
aas
lock
or
movsl
fildll
dec
sub
mov
jne
sbb
dec
add
jae
pop
aaa
xor
test
adc
pop
cld
and
sti
xor
ja
into
mov
jmp
xchg
inc
call
adc
loopne
and
sub
test
nop
jl
test
hlt
aaa
int
sbb
push
das
jne
xchg
jne
sti
jmp
cmp
jo
pop
lret
aad
adc
call
inc
hlt
sbb
push
mov
outsl
rcll
outsb
call
sbb
daa
into
out
out
fdivrs
or
pop
jo
add
mov
jmp
inc
je
out
push
rcrb
fwait
cltd
test
out
pop
lahf
mov
fmul
inc
cs
push
add
xchg
aad
hlt
sbb
aas
das
jnp
popa
mov
sahf
inc
out
popf
jecxz
inc
mov
dec
xchg
cmpsb
mov
fucomi
or
in
jmp
push
fmulp
push
dec
add
fists
pop
imul
sbb
jle
and
pop
pop
pop
jecxz
dec
cvtps2pd
sbb
aas
xor
data16
rcll
cmp
js
pop
shl
jmp
sbb
pop
imul
mov
sahf
push
mul
xrelease
fsubrl
sbb
mov
fs
mov
pop
mul
and
push
adc
xlat
test
stos
mov
jne
xchg
mov
enter
cltd
or
pop
fcmovb
enter
pop
ds
int3
jnp
idiv
bound
cmp
nop
popf
dec
add
stc
push
adc
jp
lret
sub
xchg
sbb
push
pop
jecxz
push
test
stc
ret
jno
hlt
push
pusha
and
jp
jecxz
cmp
rclb
pop
mov
repnz
clc
jl
pop
add
add
lea
iret
rclb
addr16
xor
fisubrs
xor
jb
and
movsl
lods
mov
and
cmp
fidivrs
inc
enter
cmp
clc
mov
dec
cmp
pop
inc
and
push
dec
fisubl
scas
sub
push
cld
movsb
inc
cli
lock
fistpl
mov
lcall
jecxz
and
repnz
or
cmp
push
jae
movsl
sub
mov
mov
cs
sahf
lahf
inc
push
sub
xchg
pusha
icebp
mov
arpl
mov
cli
add
cs
or
and
cwtl
mov
jmp
mov
ds
outsb
in
sbbl
fdivp
stos
or
or
inc
sbb
lods
gs
pop
dec
sti
das
ljmp
das
sub
mov
movsl
rorl
mov
inc
in
aaa
xor
dec
lock
cmc
repz
scas
add
pop
stc
fwait
mov
fldenv
cmpsl
pushf
out
jb
xor
addr16
xchg
js
add
aad
xor
fs
push
sub
xchg
mov
cmp
les
add
icebp
cmp
mov
jle
rcl
mov
jg
sub
lods
cmc
sbb
jmp
and
or
xor
mov
add
test
dec
cli
stc
das
loop
notl
fcom
les
or
jmp
btr
fidivrs
popf
inc
fisttpl
inc
push
mov
inc
loopne
add
xor
mul
rclb
and
aad
out
sbbb
jp
lahf
dec
enter
jge
mov
push
xchg
cld
push
movsb
and
sbb
mov
clc
adc
cmc
int
and
pop
jo
add
cmp
or
orb
sbb
mov
xchg
pop
fdivrs
xchg
aam
shlb
sbb
int
add
ja
push
int3
inc
mov
and
out
shlb
nop
jbe
outsl
pop
aad
test
out
cs
cmp
call
repnz
push
jp
pop
testl
jl
xor
nop
outsl
movsl
mov
mov
aad
fcompl
aas
sar
fwait
add
adc
lods
insb
push
xchg
or
cs
push
adc
jae
dec
sbb
sub
lret
sub
call
sahf
cmp
sti
pop
sbb
xor
sbb
push
xor
adc
cli
jno
stos
ret
jbe
aad
lock
pushl
push
or
xorb
sbb
stc
pop
jp
mov
rcll
mov
fidivl
imul
sub
adcl
ja
mov
movsl
jo
pop
scas
lods
loope
outsl
mov
inc
add
imull
shlb
and
mov
adc
cltd
adc
fcoms
mov
jae
mov
xor
dec
pop
pop
sub
bound
pushf
cmp
add
enter
sahf
push
or
push
mov
rol
ja
mov
leave
jb
xor
dec
ss
push
int3
add
in
or
jo
mov
movsb
test
loop
mov
in
push
or
push
scas
ja
sub
lock
scas
hlt
sub
aam
mov
jg
lods
cmp
push
inc
out
negl
or
imul
mov
jae
or
and
or
pop
test
adc
push
incb
enterw
xor
cmc
ret
sub
xchg
jne
lods
dec
das
push
addr16
inc
addl
int3
xchg
push
jo
andb
test
sub
ds
std
pop
or
push
pushf
push
or
fdivrs
add
test
mov
movsl
inc
shl
stos
out
xchg
cmpb
insl
ret
mov
out
sbb
ljmp
scas
lea
dec
sbb
icebp
nop
pushl
scas
jg
lret
inc
and
in
dec
jns
pop
push
out
test
xchg
sub
push
incb
out
leave
stc
and
and
ficoms
sbb
push
mov
aas
pusha
cli
cmp
lock
or
out
popa
mov
imul
adc
pop
jl
sbb
sbb
call
aam
add
lahf
clc
pop
mov
movl
or
jp
mov
and
sbb
shlb
push
push
xchg
rolb
lahf
fmull
mov
mov
mov
jg
adc
insl
cld
cltd
mov
cmpsb
sarl
mov
xchg
rcl
xor
xchg
adc
pop
in
ffreep
in
sti
sbb
dec
push
sbb
xor
mov
xor
dec
dec
push
lods
ret
jle
mov
popf
xor
inc
subb
movsl
sub
lahf
mov
dec
adc
test
ficompl
enter
sbb
out
sar
bound
mov
sub
scas
in
rorb
fdivr
subl
pushf
add
outsl
std
push
dec
dec
rcrl
arpl
nop
mov
lret
fwait
outsb
lea
push
mov
ds
les
int
popa
dec
mov
mov
mov
fdiv
dec
mov
subb
stos
fnstenv
jecxz
mov
xchg
add
or
add
cmp
push
jp
popl
sub
sbb
js
mov
xlat
stos
movsb
push
imul
cmp
ret
xchg
pusha
xchg
pop
cmp
and
mov
sub
lret
lock
pop
ficoml
pop
add
cmp
bound
or
cli
aam
or
pop
jecxz
pop
cmp
push
in
ret
fisttps
mov
sahf
mov
or
dec
push
arpl
roll
sub
out
andb
sbb
movsb
sbb
lret
xchg
jecxz
int
jns
stc
cmp
xor
xor
dec
fs
cmpsl
dec
dec
out
mov
imul
clc
pusha
test
lock
push
inc
js
insl
and
mov
cmc
aad
xchg
cmp
jno
subb
cwtl
fdivrl
outsb
adc
jno
sbb
mov
jecxz
jge
inc
cmp
pop
mov
insl
xor
repnz
xor
adc
bound
rclb
sub
gs
sub
dec
push
cmp
call
cmp
rorl
jl
fsub
lret
clc
mov
fsub
adc
jae
push
sarb
pop
sub
pop
scas
shll
lret
or
jne
jb
scas
xchg
xor
jne
das
cwtl
leave
in
lock
fldcw
rcrl
mov
mov
lea
jmp
mov
and
psllq
ljmp
and
fs
insb
aad
sub
sub
ret
enter
add
out
push
in
lods
dec
std
mov
fidivl
jae
aaa
inc
lea
and
testb
or
xchg
aam
push
xchg
arpl
xorl
pop
mov
out
push
push
mov
mov
repnz
mov
or
inc
in
orl
dec
jmp
sbb
out
cmp
push
pop
in
pop
jb
inc
int
mov
mov
xor
outsl
inc
jge
xor
gs
fidivrl
push
add
addr16
inc
inc
cli
stc
int3
stos
xchg
std
push
popa
idivb
xchg
xchg
daa
ds
pop
and
xchg
cwtl
imul
shll
lret
inc
popf
cwtl
cmp
sub
out
repnz
sbb
rolb
lods
lret
pop
sbb
mov
mov
test
or
pusha
push
xor
push
push
adc
jno
daa
pop
xor
cmpb
sub
sub
adc
mov
or
sub
mov
cmp
hlt
fcmovu
pop
ja
dec
aas
pop
pusha
or
jne
jo
mov
xchg
fcomps
je
jmp
jbe
sbb
xor
cli
adc
in
and
je
mov
int
sti
int3
into
jle
fwait
scas
shrb
dec
nop
mov
inc
popa
cmp
push
push
pushf
mov
or
pop
adc
cwtl
lret
xlat
movsl
add
jae
jno
lcall
enter
and
lea
int
sub
add
jnp
stc
jnp
and
cmc
popf
int
inc
and
stos
adc
outsl
xor
cmp
fisttpl
dec
push
or
or
out
aas
roll
sbb
dec
and
sub
inc
cmpsl
outsl
cmc
in
xchg
shll
outsb
push
or
mov
imul
sbb
sub
stos
add
xchg
icebp
out
mov
cmp
add
pop
inc
inc
in
popa
rcrl
add
out
dec
int
in
data16
je
cltd
xchg
or
or
jnp
mov
imul
iret
and
xor
and
mov
into
aam
enter
mov
dec
arpl
sub
pop
in
push
test
lret
rcll
addl
hlt
adc
shlb
push
xchg
icebp
push
pusha
jo
and
pop
aad
aad
xchg
or
stos
fstpl
test
cmpsb
test
inc
repz
push
or
lret
cltd
fdiv
jmp
sub
pop
test
mov
leave
mov
andl
dec
add
das
xchg
outsb
rcll
pusha
jb
mov
lret
outsb
sarb
in
add
into
outsb
push
test
loope
jne
dec
test
sub
movsb
unpcklps
pop
movsb
add
pop
fidivs
mov
dec
adc
dec
dec
lret
sbb
hlt
ror
sbb
repnz
xor
imul
xor
ss
repz
leave
ss
push
in
dec
cwtl
pop
lcall
cltd
stos
mov
push
mov
cmpsl
frstor
push
xor
jne
addr16
jle
xchg
lods
aaa
mov
adc
or
cmpsl
insb
hlt
jno
dec
and
test
leave
xchg
jle
je
xor
add
fisubrs
shrb
iret
pushf
xchg
scas
add
adc
cmp
sbb
sbb
add
xor
pushf
sub
dec
mov
mov
pop
lods
mov
nop
or
sbb
cltd
dec
push
int
xor
dec
jns,pn
dec
lods
jns
jge
out
jb
insb
mov
shll
test
add
fisttpl
sub
and
mov
ss
repz
incb
cmp
nop
xchg
imul
jl
mov
pusha
inc
loope
in
add
aam
out
or
scas
sahf
js
mov
pushf
mov
in
cltd
push
cmpsb
xchg
sbb
loopne
js
ja
and
jb
ror
out
fcmovnu
lock
repnz
sub
iret
cmp
addr16
mov
add
lret
out
cmp
mov
cld
in
loope
push
mov
or
rorb
cmp
loope
dec
pushf
inc
push
add
cs
mov
and
in
fcom
add
je,pt
push
imul
fdivrs
sbb
ljmp
scas
dec
ror
adc
pop
or
popa
adc
popf
mov
into
pop
lea
cmp
imulb
mov
push
daa
adc
push
sub
sub
rcrl
mov
in
mov
inc
sti
mov
dec
icebp
mov
add
mull
ss
aad
loop
notl
je
mov
xor
ret
ss
mov
mov
jns
push
in
int
add
adc
mov
out
cmp
test
inc
mov
sbb
mov
in
jb
fsts
in
inc
dec
push
pop
loop
sub
pop
mov
jmp
add
int
add
inc
xchg
in
gs
je
scas
popa
rsqrtps
les
pusha
pop
sbb
jge
popa
mov
fisttpl
xchg
sbb
fimull
subl
pop
imul
pop
addr16
subl
jmp
popa
adc
dec
jns
ret
dec
arpl
test
rorb
xchg
sbb
push
inc
and
xchg
bound
mov
lcall
test
popa
les
inc
mov
xchg
mov
outsl
bnd
lods
das
sbb
mov
roll
mov
pop
dec
jno
jno
icebp
nop
xchg
ret
push
ss
lock
lret
mov
mov
cmp
inc
sub
mov
dec
cltd
nop
in
dec
jmp
mov
adc
sub
repnz
out
cmp
push
pushf
sbb
sub
sub
xlat
mov
mov
mov
xchg
addr16
sbb
pop
xchg
mov
xchg
adc
cmp
and
fwait
movsl
add
pop
push
add
mov
or
push
ds
xor
dec
int
xor
xchg
std
xchg
lret
push
ss
xor
outsl
bound
test
and
bound
xor
and
pop
or
cmpsl
push
jmp
ja
scas
ret
popa
int
das
iret
push
adc
dec
mov
mov
mov
dec
push
jae
mov
dec
aas
mov
dec
int3
mov
gs
xor
out
and
sahf
push
mov
bound
in
mov
push
add
xchg
imul
daa
mov
loop
mov
daa
in
xlat
sbb
mov
jecxz
rorl
pop
out
xchg
cmp
pop
aaa
mov
in
add
scas
sub
pushf
shlb
adc
arpl
sarl
jbe
in
sub
add
daa
xchg
ret
cmp
lods
mov
xchg
jns
loopne
in
add
cmp
pop
and
sbb
xor
push
gs
mov
cmp
adc
jnp
or
pusha
jno
pop
sarl
aam
mov
das
or
jne
test
mov
mov
ja
mov
sub
add
inc
lods
in
jne
fsubrs
or
lods
pop
pop
pop
movsb
inc
add
sub
xor
mov
loope
sahf
xor
mov
dec
stc
add
iret
nop
inc
enter
in
mov
add
xor
out
imul
sbbl
adc
cmp
loope
aam
fisubrs
inc
and
popa
insl
pop
clc
ds
and
sub
lods
popa
ljmp
dec
fstps
or
mov
das
xchg
bound
filds
push
lcall
cld
xchg
push
inc
push
dec
push
mov
jmp
pusha
mov
sub
mov
mov
hlt
sub
xor
sar
fs
cmp
or
adc
jno
loop
mov
xchg
fwait
add
pop
inc
jmp
sub
mov
mov
mov
pop
sub
jbe
cwtl
mov
je
pusha
bound
stos
xlat
xor
inc
jecxz
and
movsb
dec
push
insl
push
xorl
fldenv
mov
mov
add
ficomps
xor
aaa
mov
mov
xchg
in
push
popf
sbb
or
jecxz
xchg
sbb
cmpsb
scas
inc
add
in
arpl
aam
fisttps
xor
mov
sbb
aam
adc
js
adcb
push
pushf
or
xor
inc
fstp
addr16
adc
or
inc
or
xchg
fidivl
pop
pop
mov
cmpsb
mov
xor
sub
mov
stc
pop
mov
mov
dec
je
loope
sub
jg
adc
jns
inc
orb
int
adc
vorpd
je
xchg
add
jo
cmp
rorl
out
std
jmp
jl
mov
xchg
dec
in
arpl
and
add
jo
xor
lods
mov
pop
sti
push
lods
in
jo
mov
or
imul
out
dec
push
dec
sahf
jle
or
xchg
mov
cmc
adc
lock
ss
mov
imul
and
mov
push
call
in
in
pop
int3
jb
in
pop
cmp
inc
je
xchg
pusha
jo
rcll
dec
cmpsl
mov
push
bound
movsb
ficoml
es
out
xchg
xor
test
or
lods
cltd
cmp
dec
rorb
pushf
andl
adc
mov
jg
mov
sub
adc
mov
or
in
xchg
in
sbb
loop
jnp
sbb
lahf
scas
out
pushf
adcb
sub
test
mov
mov
out
or
out
dec
popa
mov
xchg
cmp
dec
cmp
outsb
xchg
fcmovb
iret
fsubrs
rcrl
fwait
push
stos
movsl
sbb
push
mov
sbb
enter
inc
xor
and
mov
jbe
stc
adc
jno
mov
cmp
pop
test
mov
push
scas
aam
loope
push
nop
rdtsc
lret
popf
push
jmp
jae
inc
mov
push
outsb
loopne
jns
adc
std
neg
cmpsb
js
in
or
xor
push
mov
jmp
or
mov
push
mov
loopne
fstpl
cvttps2pi
mov
ds
pop
popa
stc
test
lock
sbb
out
test
std
fs
push
xor
rcrb
das
jnp
sti
scas
add
jbe
or
stos
push
or
mov
dec
pop
ret
push
jg
sbb
jl
push
and
mov
add
sbb
in
cmp
bnd
and
bound
push
adc
jecxz
mov
adc
leave
jecxz
std
cmpsb
add
repnz
scas
imul
mov
jecxz
hlt
insl
or
cmpb
shrb
cld
rolb
imul
add
dec
filds
stos
dec
jb
xchg
bound
and
jbe
xor
lods
jle
ret
fnstsw
pop
rcll
jae
out
loope
out
mov
sbb
in
pusha
flds
jb
adc
mov
pop
arpl
loopne
mov
das
leave
aad
mov
xor
adc
jno
pusha
mov
pusha
cmp
xchg
dec
and
sbbl
lods
sahf
add
mov
imul
mov
add
inc
sbb
cmpsl
sbbb
inc
dec
jo
and
mov
cmp
mov
push
cmp
insb
outsb
jge
inc
inc
push
movl
test
shll
loope
sbb
sub
ljmp
popa
shr
xor
out
das
push
jns
xor
jmp
dec
hlt
jno
stc
out
adc
mov
and
adc
adc
icebp
pop
popa
cld
rcrl
insl
jne
sub
add
mov
pop
lret
mov
and
lret
aas
mov
cmpsl
es
jnp
idivb
pop
jecxz
cmp
dec
repnz
js,pn
and
push
inc
mov
in
dec
mov
pop
pop
pop
out
ss
dec
aaa
jno
dec
dec
cmp
mov
push
scas
xor
mov
jecxz
mov
fsts
mov
mov
loop
cmp
adc
inc
pop
daa
adc
mov
faddp
sbb
jg
outsb
pop
xchg
jge
out
lods
jnp
mov
lcall
lret
add
sbb
daa
popf
mov
roll
add
enter
dec
aas
jecxz
std
stc
shll
xor
imul
push
gs
ss
sub
dec
sbb
jbe
inc
fadds
js
scas
inc
xlat
andb
call
imul
iret
fsubrs
stc
mov
push
incb
clc
add
sub
mov
adc
movsb
adc
mov
popf
adc
push
outsb
fdivs
mov
loope
int
enter
fsubs
mov
push
je
clc
movsl
jg
fadds
test
xlat
fildll
add
in
iret
mov
jbe
shlb
mov
dec
stos
pop
adc
ret
pop
dec
mov
xor
xchg
loope
sub
ret
push
movsb
aam
sub
dec
aam
dec
movsb
hlt
mov
out
jl
loop
jl
shll
ret
lret
je
pop
mov
mov
sub
ror
push
adc
fisttpll
ret
jl
pusha
nop
aaa
mov
and
and
inc
pop
cli
pop
sub
test
out
or
fsub
es
je
jecxz
xlat
stc
leave
mov
adc
push
cld
add
push
dec
push
dec
pop
and
add
inc
or
movaps
sub
mov
jmp
in
cmp
cmpsl
pop
mov
and
lods
jg
xchg
or
pushf
lods
or
fadds
xchg
bound
hlt
lea
stc
ja
jl
xchg
scas
movsl
xlat
xchg
in
xchg
pop
int
pop
jecxz
in
pop
inc
loopne
scas
and
rcll
ret
es
jno
inc
mov
or
add
movsb
cmc
mov
push
add
repz
imul
int
ret
push
pop
fadd
inc
lcall
shlb
fwait
jl
and
subl
inc
mov
lahf
mov
fsub
and
cmp
add
fwait
loop
push
jmp
and
iret
outsl
mov
fwait
mov
cmp
pop
outsb
mov
test
jnp
fistpll
sbb
mov
std
cmpsb
inc
cs
out
fistps
inc
daa
add
movsl
add
mov
out
xchg
insl
cmp
sub
mov
mov
pop
adc
gs
incb
popf
add
das
sub
ja
push
sbb
icebp
bound
push
xchg
sub
lods
fimuls
lods
repnz
and
mov
mov
in
push
mov
in
sbb
mov
inc
push
pop
outsl
push
rclb
dec
mov
cs
std
or
push
xchg
cwtl
out
xchg
mov
int
or
and
push
lds
adc
and
pop
push
rcrl
fs
in
leave
pop
inc
and
and
iret
outsl
ret
adc
icebp
xlat
int3
xchg
push
shll
icebp
test
clc
das
push
leave
adc
xor
jle
insl
mov
fisubs
cmp
add
cmp
rcrl
inc
jmp
pop
test
lds
adc
mov
mov
ljmp
cld
mov
mov
inc
aas
push
dec
les
inc
inc
xchg
push
loopne
adc
data16
push
mov
inc
stos
mov
sbb
loope
je
in
out
lods
mov
jg
sub
cmp
mov
jge
lret
and
fisttpll
jb
imul
jge
xchg
out
inc
adc
mov
popa
dec
into
lods
lock
lret
add
das
loope
jbe
mov
sti
fnstsw
ret
dec
or
cli
inc
mov
mov
mov
mov
aaa
add
popa
jle
fadds
mov
and
mov
push
lods
shr
nop
mov
les
nop
and
cmpsl
sub
subb
or
push
ja
hlt
insl
cmp
xchg
pusha
nop
addr16
lock
fcmovbe
mov
in
add
mov
stos
test
out
add
aaa
mov
testb
push
mov
mov
xorb
add
xor
fs
mov
add
push
jnp
cwtl
popf
adc
movntps
xchg
les
sub
xor
jnp
in
xchg
pop
or
jbe
jno
dec
std
mov
popa
lahf
add
mov
cmc
add
mov
das
jno
mov
mov
or
pop
jno
dec
fsts
mov
fisubs
in
scas
arpl
insb
jge
fists
fldcw
hlt
dec
imul
int3
push
lods
js
fildl
aas
aaa
push
aad
mov
cmp
ljmp
jp
scas
jg
xor
lret
sub
vucomiss
lods
jg
lcall
repnz
je
push
jmp
inc
sub
jge
loopne
mov
xchg
out
jecxz
call
ds
pop
das
cmpb
scas
fisttps
insl
rol
and
xor
outsl
enter
jb
cmc
lods
and
sahf
push
pop
aaa
ja
faddl
jo
dec
cmp
mov
mov
jle
dec
jp
popf
pop
aad
aam
outsb
mov
loop
pop
std
lods
lods
sub
mov
jae
ja
dec
or
cli
outsl
jge
mov
clc
out
ret
fmulp
andl
test
mov
sahf
rcrl
ret
lds
jo
sbb
int
sbbl
and
in
clc
pop
in
push
lret
xor
xchg
les
jecxz
and
clc
adc
negl
jbe
imul
cmpl
sbb
xchg
xor
adc
loope
in
inc
je
mov
cmpl
cmpl
shll
push
push
lcall
and
xchg
testl
or
sahf
jecxz
jl
sub
cmpsl
cmp
lret
out
xorl
xchg
sbb
sbb
push
adc
leave
xlat
shll
repz
into
adc
scas
sbb
cmc
fst
mov
ror
sbb
jg
dec
out
stos
push
ja
add
out
test
cmc
out
push
addb
test
into
les
mov
out
test
and
xor
cwtl
cmp
fdivs
cmp
jl
inc
and
das
loope
mov
adc
adcl
lahf
add
cwtl
mov
jnp
mov
gs
pop
mov
mov
and
shlb
pop
jbe
jle
dec
or
aad
cmc
push
mov
inc
push
test
sbb
jnp
mov
mov
cmpsb
jle
pop
mov
enter
lds
ret
imul
xchg
cmpsb
xor
lea
lods
adc
pop
imul
add
enter
xchg
pop
jecxz
inc
pusha
push
jl
add
inc
and
pop
add
mov
bound
int3
aad
cs
or
in
clc
loopne
mov
stos
jecxz
aam
jnp
xlat
imul
shrb
lods
int3
out
or
fsubs
hlt
xchg
data16
add
dec
push
insl
ret
lods
pop
add
lcall
xor
addr16
sbb
test
add
mov
jg
xchg
clc
out
cmp
mov
mov
mov
jge
movsl
add
pop
imul
add
dec
pop
push
adc
inc
adc
fcompl
and
jns
int3
movsb
fwait
shrb
int
fstl
adc
stos
stos
jl
xor
test
cmpsb
mov
push
dec
aam
dec
push
lret
mov
adc
inc
jnp
adc
pop
xchg
mov
jle
lods
fstpt
xchg
mov
clc
mov
jne
flds
arpl
push
and
ja
mov
arpl
jns
in
fwait
test
lret
shl
xor
insl
add
out
add
das
popf
and
xchg
fdivrs
dec
sbb
aaa
movsb
inc
mov
push
insl
ret
rcr
jnp
cld
cli
jg
imul
adc
pop
jp
sbb
add
sub
enter
les
mov
xchg
push
daa
adc
test
inc
mov
out
jecxz
js
lcall
mov
test
daa
xor
fmulp
loope
push
inc
fnstsw
pop
cmp
cmpsb
push
cmp
xchg
ficoml
push
push
xchg
pop
dec
leave
lds
mov
movsl
pop
add
inc
push
into
xor
ret
fbld
je
out
jmp
rcll
mov
or
jno
lret
shll
in
cwtl
sahf
xchg
xchg
test
enter
movsb
cltd
ret
jo
mov
sbb
cmc
push
xchg
jl
dec
cmp
or
mov
int3
dec
jne
mov
nop
xchg
cmp
add
out
adc
dec
lds
inc
xchg
iret
mov
js
dec
sbb
test
xchg
mov
aaa
enter
aas
movsl
and
out
adc
testl
lods
das
mov
inc
ja
pop
out
push
jnp
mov
jecxz
and
mov
inc
ljmp
jecxz
adc
push
pop
jge
in
cld
jo
or
sub
or
shl
jno
lock
jno
sahf
add
jns
js
mov
push
dec
filds
dec
sbb
cli
ss
leave
cs
mov
js
inc
sbb
in
out
repnz
sbb
lret
ja
push
cmp
sub
cmp
xchg
ret
in
adc
add
inc
sbb
sub
mov
jmp
dec
jno
pushf
inc
jp
xor
repz
int3
pop
das
scas
les
std
imul
jg
push
das
xchg
sbb
sbb
in
jg
mov
les
or
lock
mov
int3
mov
xor
xchg
pop
insl
cmp
es
test
notb
pusha
push
sbb
sbb
inc
lds
bound
jl
xlat
push
jnp
cld
add
cmpsb
xchg
add
in
shld
mov
outsl
and
add
imul
mov
jb
xchg
pop
cmp
ljmp
xor
pslld
adcl
push
jno
pop
bound
loop
in
add
pop
xor
outsl
out
dec
stc
fnsave
jnp
sub
fisubl
jge
lea
jne
pop
stos
mov
icebp
adc
loop
fmuls
sbb
shrl
push
xchg
aaa
mov
pop
pop
add
xchg
hlt
rolb
aad
pop
pop
sti
int3
mov
push
xchg
mov
sbb
xchg
popa
popf
push
leave
ljmp
push
cwtl
jb
popa
inc
aad
ljmp
adc
clc
lods
in
inc
jle
sbb
fwait
nop
push
sbb
jns
xor
jne
fidivs
movsl
nop
int
mov
inc
mulb
shll
inc
pop
adcl
dec
mov
inc
cmp
lahf
ljmp
cmpsb
data16
dec
das
test
push
imul
frstor
jg
nop
or
adc
xchg
jl
loope
cs
mov
mov
fsubr
sub
loopne
insb
lret
std
dec
add
adc
outsl
lahf
xchg
dec
stos
out
clc
mov
jae
in
cwtl
je
fdivrl
fildll
int
mov
cltd
stos
lahf
aam
loopne
jp
insb
aam
push
jae
dec
sbb
loop
mov
push
mov
sub
adcl
out
in
mov
insl
sahf
iret
mov
sbb
adcb
or
insb
popa
mov
add
sbb
fisttpll
lock
cltd
pushf
push
mov
and
mov
push
push
mov
dec
adc
and
iret
mov
pushf
mov
sbb
mov
sbb
or
jae
and
iret
jp
loop
repnz
pop
push
push
xor
inc
insb
imul
insb
jge
out
sub
dec
loop
scas
mov
ja
cmp
xorb
xor
nop
mov
in
iret
add
stos
test
mov
jnp
cld
and
xor
mov
das
idivl
das
xchg
pop
or
sub
mov
mov
adc
mov
xchg
lods
push
cmpsl
dec
jmp
cmc
data16
cltd
mov
xchg
in
xchg
or
sbb
mov
fldln2
or
mov
xchg
inc
into
jno
and
idivb
xchg
xor
hlt
jmp
fs
xchg
es
shlb
or
xchg
ja
lods
jns
fcmovu
push
add
pop
idiv
stc
and
dec
cmpsl
roll
fwait
sub
sbbl
lcall
mov
dec
fwait
add
jge
mov
cs
push
shlb
cmp
mov
cmpsb
mov
fidivl
sub
das
sub
xchg
mov
jns
ss
movsl
bound
sbb
jno
jae
mov
sbb
push
fldcw
lahf
push
loopne
insl
mov
jecxz
daa
adcl
and
mov
js
int
push
hlt
pusha
jae
mov
sahf
ret
cmp
push
sbb
pop
das
into
fcomps
shll
mov
cltd
xor
dec
ret
pushf
aam
pop
rorl
in
or
mov
in
mov
or
movsb
cmp
aam
inc
in
sbb
jno
inc
sub
xchg
cltd
outsb
jb
dec
push
sub
in
popa
mov
xchg
aas
lds
mov
lock
leave
jecxz
mov
ja
popa
push
cmp
lahf
sbb
mov
in
push
xchg
rorb
xor
xor
fsubs
into
in
sub
jl
loopne
out
mov
jmp
pop
pop
xchg
aam
adc
stos
js
les
out
jbe,pn
mov
mov
mov
ret
ficomps
sbb
xor
ss
in
or
dec
sbb
stos
add
inc
mov
jo
cmp
aas
or
in
dec
adc
popa
ss
lahf
stos
sub
push
popa
imul
fwait
mov
pop
push
sbb
std
cmpsb
rclb
arpl
imul
out
mov
mov
gs
repz
das
fbld
sbb
mov
sahf
rclb
push
add
loop
lret
ror
mov
push
add
cld
movsl
daa
out
aas
mov
adc
loop
cmp
or
sti
daa
fstps
pop
xchg
loopne
clc
jl
xlat
popf
lea
fistpl
dec
sub
insb
push
bound
sbb
insb
push
imul
out
sti
fcoms
outsb
cltd
mov
jns
mov
pushf
push
xchg
cmp
lds
pop
push
adc
mov
dec
jmp
inc
sub
mov
push
jle
sbb
mov
insl
or
in
clc
cmp
mov
jns
and
inc
aam
enter
mov
cld
lcall
rolb
ret
aad
rorb
rorl
out
inc
cmp
mov
mov
jge
in
jecxz
jg
add
add
cmc
repz
mov
push
sub
adc
fdivrl
es
adc
mov
and
or
add
data16
pop
mov
loop
cmp
clc
test
and
adc
lock
jmp
dec
xor
bt
sub
fs
xchg
lods
push
movsb
xor
dec
subb
xchg
pop
xchg
fwait
pop
xchg
fsubrl
cmp
xchg
push
loop
fldl
fwait
leave
arpl
ss
push
pusha
pushf
and
dec
add
pop
into
pop
inc
in
adc
jne
mov
pop
call
inc
mov
or
mov
xor
xchg
xchg
out
inc
pop
sti
into
push
cmpsl
jns
dec
stc
jmp
daa
dec
or
js
fsubrs
xor
int
imul
add
pop
lods
mov
sbb
xchg
lret
mov
pusha
xchg
and
xchg
rcrl
push
sbb
and
mov
sahf
add
shlb
pop
in
jbe
jae
and
mov
ds
inc
popf
cmp
fldenv
and
repz
cli
jge
sti
rcll
mov
mov
nop
in
jle
mov
dec
sub
orl
jge
pop
and
pusha
popf
cwtl
test
insb
cmpl
fcoml
imul
xchg
sub
mov
lock
cmp
adc
cmp
lret
or
inc
fs
mov
push
int
or
sbb
or
fsubr
xchg
mov
lds
pop
mov
xchg
and
adc
fdivl
mov
in
jae
leave
pop
imul
mov
or
xchg
jge
leave
insb
scas
cmp
mov
adc
aas
add
loopne
or
add
jg
cmpsb
cmp
mov
insb
mov
dec
aad
clc
arpl
hlt
std
lcall
push
pop
mov
and
add
xchg
mov
lods
jp
xor
mov
in
js
pop
lea
inc
push
push
or
bound
sti
in
pushl
dec
and
lcall
xchg
fcoms
aam
jb
or
jg
pop
fidivrs
dec
dec
imulb
enter
cmp
xor
or
cmc
and
or
and
dec
lock
popa
lds
lods
jo
int
cmp
mov
pop
mov
sub
jne
xor
adc
mov
inc
jns
jb
jge
cmp
push
xchg
mov
jmp
pop
xor
in
and
push
lods
lret
testl
jne
pop
iret
pop
add
cmp
les
out
pop
fsubl
push
sbb
test
adc
push
loope
daa
push
sub
sbb
sbb
mov
lds
mov
out
jg
movsb
sub
es
push
push
lret
pop
pop
test
mov
sbb
aad
inc
nop
pusha
test
dec
and
sbb
mov
outsb
icebp
sub
or
xor
ljmp
xor
and
xor
inc
pop
lret
lret
out
mov
jmp
or
mov
rcll
mov
mov
cmp
sarb
fnsave
fdivrl
cmp
mov
inc
mov
cmc
cltd
or
icebp
aas
inc
pop
push
out
xor
lret
or
hlt
mov
xchg
cmp
push
and
aad
mov
fxch
inc
inc
rolb
into
sub
lea
dec
arpl
ret
shr
wrmsr
sar
jb
jo
sbb
jle
lcall
arpl
pop
adc
jle
mov
sub
std
mov
test
or
sbb
les
outsb
outsl
scas
and
int
xchg
scas
mov
rcrb
mov
mov
inc
inc
mov
ds
jbe
js
mov
ret
andb
loop
add
mov
mov
lahf
lret
rcl
loopne
jns
movsb
std
xchg
cwtl
aad
sar
pop
fadd
cwtl
adc
into
divl
mov
aam
push
jne
and
std
lock
ficoms
mov
test
adc
cltd
adc
mov
xchg
adc
pop
mov
inc
test
es
and
mov
shll
dec
popl
clc
cmpsb
test
divl
mov
jp
lcall
jl
in
jb
test
push
cltd
or
jb
adc
les
sbb
repz
pop
xor
xor
adc
repnz
pop
xor
sbb
cmp
fiaddl
out
adc
cwtl
jae
jg
inc
jb
insl
into
add
cmp
out
outsl
push
sub
jbe
sbb
sub
xor
repnz
shl
loopne
cmp
xchg
push
movsb
pop
rcl
shrb
ret
add
add
mov
push
rcll
cmp
movsl
cmp
mov
jbe
mov
push
mov
xor
mull
push
mov
dec
mov
popf
inc
push
out
popa
pop
aad
and
addr16
push
inc
in
imul
outsl
push
fisttps
pop
insb
jl
adc
je
das
sbb
mov
rolb
mov
ja
out
jb
sbb
push
jnp
lods
into
mov
cmc
out
inc
fstps
loope
or
pop
fwait
sub
ss
sub
push
dec
inc
loop
add
test
das
push
sbb
dec
inc
mov
mov
ja
jmp
mov
loopne
pop
pop
popa
inc
pop
sbb
call
fs
pop
jns
iret
inc
je
push
fistpll
mov
movsl
subb
imul
cmpl
les
lea
mov
cs
outsb
or
adc
mov
ljmp
inc
add
fcoms
in
arpl
sub
lds
mov
lahf
jns
add
push
xchg
cmpsb
cmc
xchg
xor
lahf
jmp
scas
daa
mov
rcrl
inc
sbb
and
iret
mov
js
out
int3
lcall
loop
fistps
imul
add
ss
aaa
test
inc
inc
sub
mov
fstl
jb
lock
movsl
or
sbb
js
xor
popl
sahf
pop
bound
sub
test
mov
mov
adc
mov
cmp
push
add
lds
adc
pop
fwait
push
add
pop
stc
dec
addb
repnz
outsl
cmpsl
imul
shlb
in
dec
xchg
dec
js
mov
mov
jecxz
out
js
mov
lret
jmp
pusha
xchg
les
aad
mov
inc
sub
inc
movsb
mov
in
pop
xchg
xlat
popf
in
es
sub
inc
hlt
movsb
mov
aas
push
cmpsl
movl
les
add
test
mov
jns
push
scas
js
iret
mov
push
mov
mov
xor
lahf
sub
int
mov
sub
scas
jne
dec
adc
stos
mov
imul
sub
repz
cld
add
inc
sbbb
pop
loope
mov
push
call
repnz
fst
or
cmpsl
insb
cmp
jae
or
xchg
inc
test
sbb
arpl
inc
lret
lret
shlb
sub
and
pushf
push
push
jae
fwait
mov
mov
inc
mov
nop
cmp
fidivrs
lock
fcmovu
mov
ds
fildl
mov
in
test
xor
mov
or
mov
push
and
repnz
jbe
clc
xchg
mov
repz
cmp
fcomps
cmp
push
dec
sti
cmpl
loope
mov
cmp
mov
jp
ret
ss
out
aad
mov
cmp
lret
stc
mov
adc
xor
pop
enter
xor
movsl
push
scas
or
test
fistl
mov
or
xchg
mov
out
lahf
movsb
and
cmp
and
xchg
stos
add
pop
lcall
lea
aaa
or
pusha
sbb
inc
imul
repnz
adc
mov
or
pop
into
xchg
dec
ljmp
jnp
fcos
das
and
cli
ljmp
cmp
adc
out
idiv
pop
out
mov
mov
pop
sub
mov
mov
lods
push
test
jno
jg
icebp
je
aad
dec
xlat
or
xor
int3
xchg
inc
jge
xchg
or
mov
sti
icebp
xchg
push
xor
pop
iret
sub
shll
pop
sahf
arpl
mov
cmp
popf
push
loope
lods
shll
mov
popf
lret
xchg
lds
add
addl
xchg
jge
add
mov
xor
ds
lods
and
pop
sub
cmp
pop
push
out
mov
push
mov
ljmp
out
sbb
fcompl
jle
add
stc
std
sbb
das
adc
inc
mov
lods
leave
imul
and
mov
popf
mov
cmp
fisubl
mov
sbb
sub
jns
sub
jge
add
sub
sub
inc
scas
push
adc
mov
mov
sti
mov
fnstenv
jg
lods
mov
in
or
adc
cmc
xor
jno
ja
xor
test
jo
lahf
pop
mov
xor
xchg
sub
repz
rolb
xchg
mov
es
in
sbb
jnp
pusha
movsb
adc
cmp
mov
int3
lods
adc
or
sbb
outsb
outsb
sub
loope
test
xor
mov
lock
lods
add
sub
jl
cmp
repnz
add
subl
test
sahf
or
std
jge,pn
mov
int
ret
outsb
scas
mov
sbb
scas
add
and
sub
or
mov
sub
pop
aas
out
mov
adc
sbb
jo
lock
xor
mov
loope
mov
dec
jb
lahf
inc
jle
inc
lods
punpckldq
pusha
mov
test
popa
in
inc
shrl
sbb
mov
jne
xchg
daa
cmp
in
fstps
or
add
ror
pop
insl
lock
divb
insb
jge
cmp
mov
mov
test
adcl
rorl
xchg
add
stos
lahf
push
das
out
aas
lret
stos
bound
mov
mov
xchg
imul
mov
outsl
jecxz
data16
or
ja
sahf
adc
and
push
cli
fsubl
dec
dec
xchg
xchg
inc
ljmp
imul
lea
pop
push
xor
push
ljmp
sub
sbb
pop
test
sbb
repnz
dec
cld
jne
inc
sti
mov
jle
leave
icebp
xchg
stc
aaa
iret
iret
nop
je
and
mov
xlat
or
inc
clc
fwait
loope
adc
fldpi
sub
sbbl
jmp
lcall
repz
ja
mov
ds
outsb
xor
cmc
js
xor
pusha
adc
pusha
add
mov
addb
ficoms
shlb
cmp
dec
cmc
mov
stos
shlb
je
jne
mov
hlt
mov
fisubl
jo
fisubrl
test
jb
imul
mov
push
add
popf
inc
add
aas
insl
fwait
mov
out
stos
les
adc
out
subb
dec
cmp
mov
xchg
sbb
lahf
xchg
xor
push
ljmp
sbb
mov
mov
inc
jmp
adc
ret
mov
out
pop
jae
mull
inc
stos
mov
cmp
insb
or
call
mov
push
mov
push
inc
sbb
jae
js
push
and
scas
xchg
data16
aad
xchg
push
clc
sub
dec
inc
ret
and
cmpsl
in
mov
xlat
movsb
hlt
pusha
dec
push
add
fstps
pop
and
pop
sahf
cmpsl
andb
js
fisubrs
push
xchg
lods
insb
mov
pop
jle
mov
je
in
xor
mov
bound
and
dec
out
pop
push
subl
mov
add
pop
icebp
jmp
and
mov
fmuls
mov
mov
ds
fdivrp
pop
mov
xchg
xchg
pop
dec
bound
out
js
sub
icebp
shl
push
out
inc
adc
sti
sbb
cs
gs
loope
loopne
negl
dec
notl
outsl
inc
mov
fwait
lea
sub
and
cs
rorb
inc
sbb
pop
push
add
push
mov
xchg
lcall
jge
imul
push
fcmovb
loopne
in
arpl
mov
mov
das
mov
lahf
test
fwait
push
pop
popf
vfmaddsubpd
push
shlb
leave
pop
mov
xchg
shll
outsb
aas
test
scas
rolb
sahf
xor
test
fistpll
jge
nop
sub
pop
xor
fcmovnu
mov
repz
xor
cld
cmp
xchg
pop
xor
jecxz
xor
dec
loopne
push
lods
cwtl
mov
or
mov
pop
lret
jmp
pop
fs
lret
cmpsl
cli
and
jge
je
in
scas
inc
inc
dec
push
jge
adc
in
popa
fisubl
shrb
mov
fbld
dec
loop
inc
addr16
bound
sub
insl
bound
daa
loopne
mov
mov
scas
push
fs
jp
imul
lahf
enter
imul
loop
rol
cmp
lds
push
xchg
push
movsl
inc
jo
pop
inc
cmpsb
xchg
bound
movsb
test
in
add
mov
cli
out
sub
xchg
cmp
call
dec
imul
repnz
loop
xchg
or
test
fdiv
inc
pop
adc
stos
mov
pop
pop
loopne
jmp
dec
jo
int3
cld
hlt
test
orl
jg
cmc
xchg
mov
stc
shrb
mov
jl
loopne
notl
in
xor
or
lods
mov
daa
sbbl
aaa
or
popf
sub
pop
jmp
mov
mov
loop
pusha
adc
mov
jg
out
inc
or
cmp
dec
aas
into
mov
rcll
jns
adc
push
sub
mov
call
repnz
dec
cli
mov
push
sbb
insb
push
scas
mov
insb
sbb
push
mov
loop
incb
bound
xchg
inc
shll
push
mov
mov
mov
fnsave
inc
mov
int
dec
pop
fwait
iret
test
cltd
stos
insb
adc
sub
adc
push
scas
das
sbb
push
das
lret
push
mov
roll
andnps
icebp
adc
add
and
insb
or
cld
aad
pop
fwait
mov
adc
add
or
fsts
mov
mov
jle
stc
xor
cmpsl
jmp
int3
mov
sub
pop
adc
test
repz
xor
xchg
or
gs
popa
mov
pop
xor
sub
cmp
xor
dec
arpl
daa
push
sub
jnp
cs
les
fidivs
and
jnp
pop
mov
lods
xchg
and
ret
sbb
inc
jg
xlat
fdivrs
in
cli
jmp
cmpsl
push
add
in
push
mov
pop
aad
pop
mov
xchg
lods
adc
jmp
jle
cmp
movsb
mov
js
inc
sbb
pop
movsl
mov
pop
call
ljmp
inc
jo
lods
in
imull
pop
aaa
lret
xor
inc
fstpl
jecxz
mov
stos
out
clc
fwait
mov
adc
mov
cmp
adc
push
inc
ds
mov
add
inc
xchg
lea
mov
sbb
add
sti
dec
faddl
dec
cmp
jns
shlb
or
jl
mull
mov
loope
pop
inc
addr16
aas
or
jg
fsubs
nop
and
insb
push
xor
aad
xchg
add
mov
push
repnz
push
push
or
jp
sub
pop
ljmp
mov
bound
fwait
in
adc
inc
sbb
and
shrl
add
dec
int3
xchg
test
sar
cmp
pusha
cwtl
scas
pop
push
or
hlt
aam
jle
repz
pop
lds
pusha
xchg
and
adc
es
lcall
pop
push
mov
push
es
push
ret
lea
scas
mov
dec
mov
pop
ja
adc
into
and
in
cs
sbb
je
mov
jb
addr16
roll
mov
and
aad
lods
cltd
outsb
flds
add
pop
cli
cli
sbb
xor
test
xlat
pop
xchg
fisttpll
mov
jecxz
push
nop
add
call
enter
call
loop
movb
inc
sub
push
cmp
pop
hlt
inc
dec
rolb
jo
in
enter
cmp
stos
pop
pop
int3
stc
xchg
or
sub
adc
je
mov
cmp
pop
movsl
stos
xchg
or
icebp
mov
and
popa
cmpsb
xchg
clc
loopne
in
rclb
scas
mov
sbb
mov
leave
aaa
cltd
inc
scas
or
push
add
out
sub
pop
call
cld
outsl
and
cmpsb
pop
shrb
lds
mov
cwtl
lret
outsb
sub
out
mov
repnz
sub
bound
jno
jno
push
int3
or
data16
iret
dec
mov
test
icebp
push
sub
mov
std
std
cmpl
negl
aaa
mov
dec
inc
lea
int3
pop
pop
ret
ret
ret
lahf
mov
xor
dec
inc
add
mov
cmp
ret
mov
adc
aad
push
rcrb
jp
fcompl
aad
jmp
int3
mov
es
std
je
pop
sub
scas
lcall
adc
test
test
adc
adc
in
push
test
push
inc
add
mov
shlb
loope
rol
imul
dec
lods
sub
cmp
rep
pop
jl
pusha
lahf
pop
stos
popf
push
sub
jns
mov
mov
and
lds
pop
xor
mov
mov
add
setnp
negl
cmp
popa
mov
je
ud2
push
ljmp
inc
push
jne
fwait
push
fwait
or
test
mov
jno
stos
xchg
lret
jb
inc
fdivrp
jmp
sub
cmp
insb
inc
jb
test
and
xchg
decl
imul
dec
test
xchg
add
push
or
push
xchg
les
clc
mov
daa
or
xor
icebp
mov
push
sbb
pop
mov
mov
add
push
aaa
mov
arpl
fsubrl
pop
ja
pusha
mov
int3
inc
popa
xchg
cmp
stos
mov
fmuls
test
cmc
fidivrl
out
or
or
jbe
push
imul
outsl
dec
mov
stos
ja
lock
sub
lock
bound
mov
imul
xchg
pop
cmp
sti
ljmp
stos
jb
push
movsb
cmp
sub
in
shl
data16
es
mov
xchg
xchg
xor
xor
inc
xrelease
ret
xor
sub
addb
out
enter
and
cmp
out
jno
cltd
dec
sarl
xchg
cwtl
adc
mov
lods
insl
imul
daa
push
xchg
fdivrl
and
fwait
hlt
into
xchg
loop
xlat
enter
push
sub
testl
lea
dec
lcall
fdivl
popa
jno
cli
in
push
cmp
xor
jge
pusha
mov
adc
push
cmc
pop
cmp
out
shll
aaa
cmpsl
dec
in
insl
mov
ret
mov
xchg
pop
and
pop
mov
sar
shl
mov
sub
stos
xor
jp
sbb
dec
jne
stos
in
jbe
or
icebp
adc
and
adc
dec
push
lods
adc
and
pop
sbb
jp
xchg
shrb
rclb
testl
cli
outsb
cmp
cmp
ficomps
jecxz
push
pushf
dec
mov
inc
push
xchg
cmp
aaa
ret
push
push
adc
clc
scas
pop
lahf
pop
xchg
sub
push
and
sbb
stos
jno
jmp
inc
in
pop
imul
sub
sub
pop
outsl
inc
ja
dec
inc
shl
sbb
mov
mov
sub
inc
stos
dec
in
jb,pn
push
xor
and
notb
mov
sub
ss
lcall
rorl
add
pop
lret
cli
lea
in
hlt
int
pop
pusha
xorb
stos
loop
mov
rcrl
lret
test
adc
mov
jp
xor
mov
jae
data16
iret
lahf
lea
cwtl
jmp
or
popa
test
repz
bound
adc
xchg
in
std
xor
test
dec
xchg
sub
ja
popa
pop
push
jne
fwait
lret
jo
js
push
loope
pop
inc
loope
jns
adc
jne
lods
cmc
iret
push
xchg
lcall
testb
lahf
or
aas
push
repz
scas
inc
std
cmpsb
adc
dec
xchg
ss
pop
popf
mov
movsb
sub
or
scas
aas
and
adcb
leave
dec
sub
popa
test
mov
in
inc
adcl
push
mov
xchg
fstl
push
and
lea
test
repnz
in
push
int3
xchg
jns
mov
mov
jge
out
call
mov
into
adcb
out
mov
jmp
gs
orb
mov
sub
jle
push
or
mov
push
into
imul
sub
call
xor
sub
lret
popf
out
vmovaps
cwtl
jnp
aaa
das
push
js
jno
mov
inc
mov
ja
push
mov
cmc
neg
sbb
and
or
jno
sbb
or
outsl
dec
xor
push
aad
aas
push
inc
mov
add
and
xchg
in
add
mov
fucomip
xchg
adc
xor
add
insb
add
cli
aas
jmp
push
and
ds
repz
in
lahf
dec
pushf
dec
test
and
bound
scas
int
les
adc
sbb
pusha
jl,pn
imul
out
loop
cmp
in
cs
or
popaw
xchg
out
fildl
xor
in
mov
or
dec
jno
hlt
aas
jmp
mulb
pusha
sbb
into
mov
mov
inc
jge
dec
in
jmp
xor
adc
sti
mov
out
outsb
addr16
sbb
out
movsb
aaa
sbb
sbb
test
std
jl
aas
pop
jnp
push
xchg
leave
mov
mov
sub
jmp
sbb
bound
xchg
shr
mov
xor
ds
jno
cs
mov
inc
add
and
aaa
pop
and
push
mov
outsl
out
mov
mov
mov
test
pushf
ss
aas
pop
push
adc
repnz
fnstenv
cltd
hlt
enter
cli
loopne
mov
adc
cmpsb
inc
inc
inc
add
aaa
imul
ja
ret
cmp
loope
es
add
mov
mov
inc
pop
call
add
enter
pusha
dec
aam
ficoms
fadds
inc
sbb
imul
and
push
sbbl
adc
bound
cld
ffreep
cwtl
adc
sbb
lsl
jae
sub
outsb
daa
adc
or
sbb
xchg
imul
fpatan
fwait
cmp
xchg
inc
xor
rcll
jbe
aas
push
fisubrs
sbbl
lahf
add
fistps
mov
dec
std
fcmovnbe
test
lret
jecxz
aam
and
xor
xor
cwtd
scas
in
cld
cmc
sbb
repz
and
xor
mov
icebp
sbb
mov
mov
stc
pop
xlat
aam
and
cmp
xchg
arpl
inc
test
je
js
sbb
pop
dec
cmp
adc
mov
add
cmpsb
inc
sbb
jecxz
in
dec
push
push
sti
std
add
testl
js
mov
int
pop
sbb
push
addr16
xchg
imul
pop
icebp
mov
jno
scas
pop
jne
push
test
mov
xchg
imul
and
cmpl
popf
ja
push
jmp
xchg
nop
mov
and
sub
xchg
dec
jae
push
lods
ret
notb
mov
lcall
mov
mov
and
jbe
push
out
push
sub
dec
xchg
adc
fldenv
lret
xchg
xchg
mulb
lret
dec
jns
mov
scas
sbb
push
inc
fisubrs
ss
out
stc
push
or
ds
cli
mov
sti
mov
inc
in
jnp
hlt
pop
flds
sub
and
cmp
sar
hlt
bts
jb
sbb
add
aad
ss
pop
jl
pushf
add
or
leave
push
std
cmp
stc
cmp
out
cli
lods
dec
mov
mov
movsl
das
mov
adc
add
mov
mov
mov
rclb
fldcw
sub
jecxz
and
stos
cmpsb
add
in
loopew
mov
pop
and
ficomps
sahf
inc
mov
lds
ret
xchg
add
push
mov
push
jae
inc
pop
add
mov
fildl
cmp
mov
loopne
int
insb
or
xor
pop
dec
in
push
sub
jl
push
mov
std
and
jnp
mov
in
or
mov
mov
xchg
ret
lods
aad
je
inc
sbb
fs
or
cmp
pushf
cmp
adc
xorl
push
addl
daa
adcb
dec
jns
aad
in
or
sbb
push
dec
test
cmp
dec
sbb
adc
and
gs
jmp
aaa
cs
pop
add
test
mov
int3
cmpsb
xor
cmp
fidivrs
fdivrl
xor
mov
inc
or
lock
jb
das
adc
push
inc
cmp
mov
test
les
jb
inc
dec
lret
ror
es
mov
sti
and
int3
aad
xlat
inc
pop
mov
and
push
movsb
cmp
rorb
incb
dec
test
cmpsb
adc
icebp
cmp
movsl
xchg
gs
pop
cli
adc
lea
in
inc
cli
lcall
sbb
xor
adc
popa
arpl
cmp
lret
in
outsb
mov
push
cmpb
repz
adc
inc
adc
xchg
enter
mov
js
dec
adc
or
push
sub
shll
test
push
jae
test
push
mov
dec
lods
imul
mov
outsb
jl
lods
lock
jne
pop
aad
xor
es
testl
mov
ds
mov
outsb
sub
das
cld
xchg
cmp
subb
sti
add
xor
ret
lea
cmp
roll
cltd
jno
ljmp
test
aad
sbb
in
jno
dec
insb
add
int
mov
outsb
movsl
or
mov
inc
fcompl
aad
inc
fisubrl
inc
add
mov
sbb
pop
or
movsb
inc
shrl
int3
and
push
pop
insl
push
xor
lahf
iret
mov
inc
loope,pt
adc
mov
add
xchg
notb
dec
repz
cmp
inc
es
into
pop
inc
sub
mov
jb
sub
cmp
lret
adc
inc
push
adc
into
jg
setnp
mov
pop
insb
addr16
js
addr16
inc
adc
and
nop
repnz
outsl
cmp
shrb
hlt
inc
and
mov
iret
sbb
dec
fidivl
cld
int3
sub
mov
mov
shr
xchg
jbe
std
daa
mov
pushf
mov
push
sub
sub
dec
jno
and
mov
cli
adcb
rolb
jle
and
pop
ljmp
insl
add
movsb
pop
mov
sahf
frstor
loope
sub
int3
fsts
mov
gs
xor
inc
negb
cltd
mov
adc
jnp
rcrb
cld
push
add
lock
jecxz
aam
add
sub
add
daa
into
adc
sub
xor
mov
mov
add
push
hlt
sbbb
pop
xchg
dec
xchg
in
fldl
insb
mov
sti
sbb
lock
mov
jns
pop
cmp
hlt
shl
push
mov
or
cltd
jmp
inc
call
subl
push
rol
sbb
add
sarl
add
push
ds
imul
lock
mov
jecxz
pop
aas
insb
sbb
test
test
jp
xlat
lcall
dec
and
popl
mov
call
xchg
mov
xchg
push
xchg
push
sub
cs
xchg
cli
mov
push
negl
push
nop
jl
cmp
push
adc
call
mov
not
xor
ljmp
psubq
lock
shlb
fildll
mov
pop
popa
loopne
icebp
adc
xor
adc
dec
test
inc
scas
insb
jne
ja
ret
inc
punpckhbw
jmp
mov
push
cmp
mov
popf
rclb
movsb
fsubp
or
loop
add
bswap
jae
sbb
inc
int
jecxz
pusha
rol
fwait
cmp
xchg
pop
cld
int
mov
or
out
inc
aas
fildl
jmp
push
subl
mov
int3
fsubs
cmp
pusha
or
sub
push
insb
and
loopw
out
pop
mov
fnstcw
stos
add
repnz
cmc
mov
aas
fwait
ljmp
or
outsl
mov
outsl
cmp
fmulp
pop
lcallw
lock
or
lret
mov
cmp
cmp
jg
pop
lahf
sbb
cmpl
out
cltd
dec
in
es
pop
rcl
ds
or
dec
inc
inc
sub
sub
inc
in
cmpsb
sbb
cwtl
sub
pop
iret
mov
lret
sub
mov
sahf
in
sbb
ljmp
das
and
dec
aam
cltd
ss
popa
fisubl
jge
fcmovne
je
test
cmpsl
ret
add
mov
icebp
mov
clc
inc
aam
in
je
mov
subb
arpl
pop
or
ja
lcall
callw
insl
data16
dec
jnp
cmp
cld
sub
lods
stos
xor
mov
arpl
sbb
dec
cmp
push
pop
mov
lock
inc
outsb
inc
cwtl
int
pop
into
std
jmp
cmpsl
lea
rcrb
icebp
mov
jnp
fstl
xchg
and
push
in
push
mov
mov
sbb
sub
xor
int
mov
test
adc
jae
aas
mov
mov
ja
mov
dec
int
mov
or
enter
push
int3
clc
mov
mov
xorl
push
pop
xchg
jne
jl
es
push
push
fistpl
inc
loopne
daa
sbb
fsubr
aad
call
sbb
jge
or
es
orb
fs
in
movsb
mov
push
lods
js
push
sti
loope
loop
das
negl
mov
inc
fwait
movsl
cld
movsb
fcom
mov
movsl
sarl
loop
pop
orl
xchg
dec
push
mov
aaa
roll
jno
push
out
js
ret
ljmp
lcall
dec
sbb
es
fimuls
int3
nop
lret
jne
clc
mov
out
push
popa
in
mov
pop
and
and
push
jb
push
push
dec
sbb
or
inc
jo
iret
ljmp
clc
test
mov
cmp
test
inc
int3
aaa
push
pop
call
sub
popf
leave
adc
add
sti
repz
scas
mov
fxtract
add
jo
idiv
mov
xlat
pminub
psrad
lret
xchg
popf
mov
ss
mov
fs
sub
adc
and
pop
jmp
mov
imul
nop
sub
jae
lcall
das
js
xchg
and
lcall
push
xor
mov
xor
push
pop
mov
inc
popf
cmovae
shl
les
int
sarl
shrb
out
mov
pop
decb
cmp
adc
rcl
loop
cmp
cmp
ljmp
xchg
mov
aad
ss
mov
xchg
shll
pop
test
adc
jmp
hlt
int
pusha
push
stc
push
and
add
test
push
sub
dec
jmp
das
fldt
add
xor
inc
lcall
jl
fcomi
push
pusha
gs
fmul
mov
iret
inc
push
fisttpll
stos
xadd
shlb
mov
pop
nop
lcall
insb
ds
in
xchg
out
inc
sbb
jmp
or
pop
jg
inc
jecxz
xchg
rcl
bound
pop
lret
mov
std
aam
pop
jge
mov
sub
jle
jmp
insl
jae
pop
dec
scas
pushf
je
lea
inc
das
outsb
push
popa
xor
ds
in
push
mov
popf
fstl
pop
cmp
flds
dec
pop
add
cs
sbb
pop
lods
out
insb
mov
adc
ret
insb
jg
sub
dec
idivl
fwait
out
adc
inc
xor
xchg
and
ret
scas
cmp
jno
es
cmp
sahf
adc
sbb
mov
xchg
pusha
imul
addr16
xchg
cmp
lret
jl
std
or
adc
lcall
rol
xor
add
ljmp
xchg
sbb
sub
xor
mov
pop
in
inc
add
xor
ret
and
icebp
jmp
loope
nop
dec
cmpsl
add
and
pop
aas
push
testb
sbb
add
inc
fidivrs
insb
mov
cmp
loope
lret
out
xchg
cmp
in
dec
stc
mov
addr16
jmp
xchg
arpl
cmp
js
mov
and
ds
xchg
fs
push
dec
pop
xor
out
lret
pusha
cld
in
sub
fdivrl
dec
mov
mov
mov
in
aaa
jnp
fs
jae
dec
xchg
push
scas
arpl
filds
popa
mov
fnstenv
loopne
cwtl
icebp
cs
mov
mov
adc
ret
pop
or
loopne
cld
jnp
inc
sbb
loope
inc
repnz
push
jne
outsl
outsb
xor
sahf
mov
mov
jge
mov
xchg
cmpsl
andl
ficoms
loope
sti
xor
jge
scas
mov
dec
sbb
push
mov
pop
push
test
cs
mov
jnp
pop
stos
aas
into
mov
outsb
test
xor
adc
adc
testb
pop
sub
out
mov
pushf
xchg
notl
push
jecxz
adc
pop
add
ss
nop
fdivp
idivl
sahf
aas
nop
out
cwtl
cmp
rclb
cmp
lret
jg
incb
leave
cmpsl
lods
outsb
dec
inc
cmp
mov
ret
lret
daa
je
pop
ja
mov
inc
in
cmc
das
scas
repnz
das
sub
mov
pusha
iret
stos
les
dec
mov
jge
cmp
or
inc
bound
inc
in
jno
loop
push
pushf
test
push
fcmove
or
sarb
hlt
cwtl
add
mov
inc
test
es
aas
or
das
jle
data16
lret
inc
repz
scas
or
xor
lea
and
push
mov
mov
and
fstl
sub
sarb
add
lock
dec
ds
push
in
mov
inc
bound
int3
shl
imul
pop
lahf
test
std
in
cwtl
arpl
addb
in
or
hlt
and
jo
jo
mov
mov
add
je
stos
aas
push
loopne
push
push
mov
das
notb
jp
push
push
and
aad
inc
or
jmp
xchg
test
clc
dec
jo
in
xor
and
and
dec
icebp
imul
mov
cmp
and
mov
jo
xor
sbb
stc
out
sbb
aam
mov
mov
nop
das
jg
xchg
pcmpeqd
ljmp
xlat
fistpll
cwtl
stos
scas
shll
out
cmp
mov
jae
xorb
adc
inc
pop
dec
imul
loop
into
call
adc
add
fstpt
adc
addb
popf
imul
mov
sahf
add
icebp
mov
mov
cs
xor
mov
ja
mov
jecxz
aad
cmpsb
cwtl
adc
call
push
scas
out
hlt
mov
jb
push
int
push
jo
mov
mov
xor
je
push
loopne
pop
aad
in
cmp
enter
orl
cld
fdivs
lock
mov
fmuls
xchg
push
jg
push
dec
jo
push
xchg
jp
sbb
test
mov
ss
test
push
mov
and
and
scas
lret
scas
fldln2
push
gs
test
fwait
inc
jecxz
jae
xchg
loopne
aaa
cmpsl
xor
lret
jne
push
push
and
gs
inc
shll
icebp
or
cmp
mov
divl
ljmp
xchg
vmptrld
push
cld
cwtl
and
aaa
adc
js
pop
mov
shll
push
cmp
xchg
mov
adc
stos
jnp
cltd
pop
ret
jns
cmp
adc
add
aaa
adc
or
dec
enter
aas
or
and
fiaddl
jmp
pop
sbb
mov
mov
cmp
aas
stos
dec
and
mov
adc
jne
push
testb
cmp
lods
mov
add
pop
mov
fistl
pop
adc
push
cmp
adc
insb
outsb
mov
insb
mov
push
lret
in
xor
xchg
mov
shrl
xchg
test
mov
pop
or
xchg
nop
test
jno
mov
mov
dec
push
out
lcall
jo
cmp
adc
push
lret
xor
jbe
mov
loop
and
cmp
jl
fadd
ret
fs
sub
addr16
int3
sti
push
lahf
xor
divl
out
xchg
insl
mov
sub
cmp
xor
mov
xor
lcall
sbb
int
pop
es
cld
mov
mov
mov
ss
jae
addr16
out
subb
and
rcrb
mov
insl
lret
jbe
fisttpl
pushf
sub
popa
pop
cmc
cmp
add
jle
add
adcb
mov
xor
loop
mov
mov
cs
jo
xchg
mov
dec
cmp
add
cwtl
mov
pop
inc
aaa
push
and
lcall
es
aas
mov
and
cmp
sbb
sbb
les
lods
jg
sbb
jecxz
add
xor
mov
test
or
cli
push
shll
js,pn
ljmp
scas
jl
mov
out
imul
and
sbb
mov
jno
int
pop
sbb
dec
popf
shll
nop
xor
mov
xchg
bound
mov
push
cli
cmp
xchg
in
jo
cmpb
mov
ret
xlat
sbbb
mov
lret
outsb
mov
mov
in
stos
enter
cwtl
cltd
es
xchg
add
sarb
jno
adc
into
mov
iret
and
shlb
mov
es
sub
out
into
jb
mov
dec
aad
stc
lret
cwtl
inc
sar
dec
cwtl
jns
and
sbb
pop
je
add
lahf
ret
sub
popf
pop
push
aaa
ret
mov
out
xchg
sub
adc
add
jmp
add
sbb
lcall
roll
mov
xor
pop
cmp
cltd
je
adc
inc
and
aaa
lret
stc
push
arpl
mov
orb
xchg
sub
cs
scas
pop
in
xor
call
pop
insl
adc
paddd
cmp
pop
mov
sub
iret
sub
cli
push
jnp
mov
decb
pop
add
mov
cld
sub
or
stc
sub
xlat
sub
inc
jmp
lock
rol
mov
scas
sub
mov
pop
or
push
inc
mov
mov
bound
jg
and
dec
es
sti
sbb
cs
jmp
add
add
scas
aam
icebp
bound
or
xor
fadd
jl
clc
pop
lret
arpl
jg
sub
into
adc
cmpl
stos
adc
leave
scas
xchg
and
jl
hlt
lock
fwait
popf
adc
inc
cmp
insl
ficoml
in
test
clc
ljmp
iret
lret
pop
inc
jns
sarb
arpl
lds
rcll
aam
push
pop
les
mov
mov
lea
loop
adc
incb
icebp
xlat
xor
cmp
sarb
iret
in
jne
push
and
lcall
push
test
hlt
adc
mov
ret
ret
xchg
jle
int
fwait
aas
push
in
mov
and
pop
sbb
lea
loop
mov
jl
push
mov
gs
push
adc
pop
addr16
sbb
cmpl
lahf
into
bswap
add
pushf
inc
pop
jp
insb
jne
dec
push
adc
cmp
jae
lret
test
mov
bound
shl
pop
lret
das
mov
pop
shlb
sub
inc
out
pop
insl
push
sbb
lcall
in
sahf
cmpsb
or
js
sbb
lret
cmc
jmp
int3
push
addl
xor
and
loop
inc
mov
stos
lock
cmc
sub
push
mov
jnp
adc
xor
data16
ja
dec
jbe
aad
nop
push
mov
xchg
inc
and
js
stc
out
push
push
dec
imul
sbb
jl
lret
fcmovbe
pusha
outsl
and
repz
shrb
adc
push
cmpsb
mov
adc
mov
mov
pop
push
in
sbb
jbe
dec
push
sbb
scas
pop
cmp
lahf
out
int3
inc
pop
xchg
push
lods
or
dec
das
lret
jnp
shlb
xchg
cmp
inc
push
push
lea
lock
xchg
mov
xchg
mov
inc
movsb
adc
les
push
movsb
imul
sbb
mov
ret
fisttpl
push
mov
xor
pop
add
fwait
arpl
aam
mov
add
push
cmp
sub
mov
imul
pop
inc
xor
fldt
and
loop
inc
jne
fimull
mov
push
aas
xchg
lds
shll
icebp
pop
in
je
dec
test
mov
dec
pop
mov
dec
pop
fists
mov
cmpsb
pushf
sbb
pop
pop
mov
xor
jmp
imul
and
inc
insb
xchg
je
mov
aad
cli
xchg
test
push
xor
sbb
add
add
arpl
rolb
jae
cld
xor
mov
lahf
sub
cld
dec
jle
lea
into
in
jns
push
inc
mov
imulb
jns
add
xlat
inc
sbb
insl
sbb
add
fdivrs
jmp
pushf
xchg
int
popf
add
push
mov
sti
pop
arpl
adc
xchg
xor
cmp
ss
or
adc
dec
mov
jge
inc
enter
in
stc
jge
mov
sub
sbb
pop
cmp
cltd
mov
std
and
pop
jle
repz
or
out
ja
outsb
fldt
hlt
cwtl
sbbb
mov
in
mov
adc
and
arpl
cmpsl
push
out
incb
scas
inc
or
jmp
mov
inc
mov
inc
dec
sub
imul
push
mov
or
mov
add
pop
and
outsb
jle
dec
fldl
push
movb
jns
jae
push
call
iret
outsl
lea
xlat
adc
mov
dec
stos
into
ja
ja
jg
xchg
mov
dec
mov
sbb
inc
cmp
sub
inc
cs
sbb
xor
dec
push
adc
xchg
jb
in
and
imul
shrb
push
popf
movsb
xchg
loope
jl
xchg
imul
sub
mov
mov
mov
sahf
sub
adc
ljmp
daa
inc
movsl
xlat
and
fwait
sti
out
push
jg
jnp
sti
mov
mov
lret
inc
xchg
loop
cmp
lock
mov
add
inc
test
imul
stos
dec
imul
addr16
and
cmp
sbb
rolb
lock
dec
pusha
sti
xchg
scas
xchg
aam
cmp
fldt
je
cltd
push
iret
mov
or
pop
sti
inc
jle
add
pop
lahf
aaa
adc
push
clc
ret
pop
jge
sarb
das
arpl
jne
or
imul
sbb
add
test
and
and
lock
insl
mov
rcl
popf
jmp
das
pushf
add
lods
dec
cmp
repnz
pop
adc
add
shlb
jns
xor
ret
add
shll
icebp
dec
xchg
or
test
hlt
repz
pop
cmp
mov
fsubl
test
outsb
mov
mov
xor
push
mov
fiadds
jnp
xor
insl
lea
cwtl
inc
push
xor
and
movl
inc
add
mov
sbb
sbb
test
or
add
cltd
lods
or
push
lea
jp
inc
iret
cmpsb
hlt
lret
inc
mov
or
pop
sbb
int
lods
hlt
push
xchg
sbb
inc
or
jmp
push
xlat
icebp
xchg
loopne
xchg
adc
addr16
test
pop
ret
loopne
cmp
push
aam
sti
add
or
in
call
icebp
and
or
enter
or
inc
jg
add
orl
das
nop
lret
into
stos
ficompl
pop
leave
pop
fsubrl
popa
xor
loop
clc
arpl
shll
hlt
scas
pop
stc
xchg
fisubrs
outsb
pop
xor
jge
sti
clc
jmp
or
pop
in
adc
xor
sbb
or
push
loopne
sub
xor
mov
lods
in
aad
inc
imul
adc
lods
pop
aad
int3
sub
sub
cmp
test
pop
cmpb
orb
aad
xor
mov
fnsave
mov
mov
and
sub
mov
lcall
sub
mov
out
fiaddl
xchg
add
adc
adc
xchg
rcll
fmull
aaa
sub
inc
jmp
cmpsl
mov
xchg
push
aad
xor
scas
test
decb
hlt
ss
or
std
jnp
xchg
retw
mov
mov
sbb
in
aad
and
mov
xlat
adc
jno
adc
test
mov
dec
xchg
int3
nop
gs
mov
leave
push
hlt
loop
push
das
fadd
sub
add
xor
lahf
pop
xor
push
mov
out
sub
je
call
shll
cmpsb
icebp
lea
lds
cltd
mov
test
inc
mov
das
adc
mov
aad
jge
inc
addl
loopne
movsl
xchg
adc
xchg
fstpt
xlat
ffreep
pop
iret
and
inc
pop
jmp
imul
or
out
test
testl
and
rolb
es
popa
adc
cmp
and
das
xlat
xchg
dec
adc
movsl
fwait
mov
add
fstp
push
xor
push
rcr
jno
xor
mov
cmp
dec
sub
pop
pop
push
pop
inc
sbb
cltd
push
sbb
xor
xor
sti
pop
je
enter
js
mov
cmp
aad
xchg
or
sub
jo
shl
push
pop
sti
shrl
push
jle
xchg
mov
mov
lahf
ret
movsb
scas
jmp
les
sbb
cmpsb
ret
icebp
jg
fdivrs
in
rcr
fdivrp
es
aam
adc
jae
push
std
xchg
mov
pop
xchg
in
outsl
push
setnp
sub
sbb
jb
fists
cli
sub
pop
mov
test
dec
mov
pop
fcompl
jb
mov
sti
and
dec
sarl
push
xchg
pushf
xor
popa
int3
out
add
cmp
repz
xchg
fcmovbe
xchg
cs
test
mov
mov
fistps
pop
mov
jns
mov
jo
jo
loopne
mov
in
or
sbb
daa
xchg
lods
jge
add
data16
xor
dec
sub
sti
test
je
jb
jmp
aad
sar
push
push
jo
outsl
mov
mov
push
adc
and
pushf
ret
inc
fcmovb
imul
stc
xor
ret
lea
inc
das
outsl
pop
dec
cmpsl
rcl
fs
inc
inc
adc
into
addb
mov
adc
sbb
inc
fistpl
dec
sub
mov
lcall
pusha
sub
sti
shr
and
lock
xlat
lock
mov
lea
out
stc
push
data16
xchg
ficompl
or
inc
push
mov
out
out
ret
jge
add
cli
aaa
out
inc
arpl
out
jnp
mov
xchg
ds
mov
std
sbb
pushl
ds
xor
cmpsl
xor
lea
xor
movsl
jno
dec
sti
stc
mov
dec
push
inc
imul
sti
add
dec
std
adc
pop
insl
jne
cmp
mov
clc
xchg
fbstp
je
mov
shll
mov
rolb
out
movsl
stc
clc
xor
pushf
cltd
subl
jg
xor
sub
xchg
fists
jae
push
push
clc
int3
jo
or
je
test
arpl
test
xchg
std
jb
push
lret
je
aam
lods
enter
jge
js
sti
stos
call
sar
adcb
mov
cs
sbb
test
and
sbb
xor
dec
xor
adc
push
sti
sbb
dec
test
cmp
popa
outsl
jmp
ret
inc
dec
pop
rcll
stos
mov
aam
adc
out
push
mov
cmpsb
hlt
cltd
in
add
in
xor
and
push
dec
es
sti
cmpsl
sub
mov
stos
dec
dec
fiaddl
lcall
icebp
das
addr16
fbld
lods
sbb
or
shll
lock
jnp
lret
nop
shl
inc
pusha
mov
fsts
push
ficomps
pop
mov
jmp
and
lcall
or
in
loopne
push
lds
std
mov
xchg
out
testl
inc
push
test
lods
cvtps2pd
sbb
inc
push
jns
inc
out
ja
cs
inc
jl
imul
or
loope
lcall
xor
jo
xchg
movsl
jmp
pusha
clc
jne
ljmp
xor
daa
lds
stos
repnz
leave
and
xor
and
out
lods
sarb
mov
sub
xchg
outsl
cmp
mov
pop
or
je
xlat
and
dec
mov
adc
and
pop
insb
push
mov
sub
js
loope
sbb
pop
mov
sahf
lds
daa
shr
leave
hlt
xor
inc
xchg
sub
add
or
cltd
and
xchg
insl
xor
loope
loopne
fisttpl
pop
cmpsl
pop
lcall
fldpi
in
xor
sbb
sbb
insb
lods
xchg
mov
sbb
std
pop
loop
mov
insl
pushf
cltd
aam
out
les
scas
mov
or
jge
mov
lcall
push
add
fstps
push
inc
aas
das
iret
js
out
or
xor
fiaddl
adc
sub
jnp
push
jo
lea
dec
arpl
lea
push
push
xchg
stos
or
xlat
sub
cs
and
lock
inc
mov
insb
lret
mov
out
into
mov
push
inc
pop
in
fcoms
jb
adc
push
aad
in
mov
cmp
mov
push
imul
ret
mov
mov
lcall
sub
adc
add
inc
iret
enter
in
sbb
inc
or
push
xor
pop
cmp
inc
add
adcl
aad
gs
mov
cmpsb
jmp
cmp
mov
call
adc
mov
enter
icebp
mov
cmp
xchg
out
ss
pop
and
fcmovnb
std
push
jp
jno
out
inc
test
fisubrl
or
sub
scas
leave
rcrb
sti
inc
mov
pop
int
adc
aam
cmp
int
loop
pop
lret
cltd
cmc
jno
pop
cmp
pop
lret
xor
mov
inc
and
fcoms
jo
jmp
cld
jno
mov
loop
push
xor
mov
loope
iret
js
repnz
mov
push
loope
stc
scas
stos
or
mov
pop
test
outsl
mov
push
stos
jnp
jge
addr16
int3
add
dec
scas
fs
aad
nop
xchg
iret
mov
pop
repnz
sub
jbe
sti
xchg
testl
mov
in
mov
js
repnz
jmp
lahf
outsb
inc
inc
outsb
fisubs
rorl
mov
jb
fnstsw
mov
cmp
pop
lock
fs
inc
and
cmpl
out
jge
testl
sbb
push
repz
sahf
xchg
push
mov
std
sub
xchg
gs
mov
mov
push
mov
jae
pushf
xchg
cld
call
mov
add
cmp
jne
test
add
lahf
jl
adc
aam
arpl
lods
sub
fwait
repnz
into
sbb
jnp
imul
push
dec
mov
jg
push
pusha
add
lods
imulb
loop
dec
xchg
and
outsb
jmp
sbb
mov
sbb
inc
rcll
adc
addr16
and
inc
lods
mov
data16
test
fstpl
mov
subb
pop
lret
sbb
pop
inc
call
aad
test
iret
shl
fisubrl
adc
jbe
bnd
jne
and
jns
sbb
xor
into
mov
ds
into
test
ret
push
popf
pop
daa
mov
cmp
out
orl
addr16
paddd
cmc
mov
push
dec
out
les
mov
push
in
add
fidivrl
nop
jl
andl
jge
addr16
mov
cmp
imul
and
add
sbb
jl
fldt
gs
or
jne
xor
lcall
sahf
mov
add
es
cli
pop
adc
ss
and
and
jge
fldcw
push
mov
cmp
shll
xchg
mov
mov
decl
push
repnz
mov
in
shll
pop
jbe
inc
cmpsl
mov
fildll
loope
xchg
mov
insl
inc
inc
mov
inc
shlb
dec
cltd
cmp
inc
add
repnz
mov
push
jne
out
push
and
push
test
icebp
mov
lret
fistl
mov
pop
xchg
pop
cwtl
addr16
stos
push
pop
push
outsb
add
push
xchg
sub
inc
rorl
push
push
nop
jg
pop
out
popa
in
dec
shl
pushf
cltd
dec
mov
shrl
push
dec
out
xor
xor
or
cmp
in
sub
push
aam
ss
mov
inc
xchg
cmp
and
xor
mov
mov
or
aaa
add
dec
pop
push
divb
and
sub
cmc
sbb
ds
mov
jg
cmc
or
push
orb
mov
jne
or
mul
test
xchg
lcall
int
sbb
pop
fidivrs
xchg
inc
push
fstpl
incb
add
leave
insl
pop
lea
mov
adc
and
sbb
or
fidivrl
stos
test
adc
mov
pop
add
add
adc
lds
jmp
mov
or
int
cmp
aam
add
movd
dec
mov
sbb
sbb
stos
int3
into
mov
rcll
xchg
mov
xor
cld
cltd
push
pop
ljmp
dec
xchg
fs
sbb
jae
cmc
add
or
orl
ljmp
lea
repz
adc
adc
mov
test
push
xor
pushf
das
xchg
and
mov
cli
dec
lods
jbe
bound
testb
orb
movsl
mov
rol
cwtl
les
mov
mov
repz
or
and
sbb
jmp
popf
add
test
cli
les
ja
push
sbb
es
je
fwait
push
mov
je
ljmp
adc
icebp
out
scas
mov
idiv
mov
and
cld
scas
dec
std
scas
fdiv
push
pop
xor
insl
sbb
xlat
jecxz
mov
lds
shrl
movsb
ds
pushf
movsl
and
push
out
mov
push
stc
add
jecxz
and
out
fsubs
inc
popf
sbb
dec
je
jne
leave
repnz
mov
cli
xchg
cmc
push
sub
mov
dec
cmp
adc
dec
cmc
pop
cltd
jns
xor
dec
or
lcall
negl
cwtl
cmpsb
sub
mov
outsl
fmuls
adcl
iret
mov
push
mov
sahf
adc
xchg
push
dec
repnz
xchg
jecxz
xor
sbb
ss
aam
cmpsl
fbstp
and
pop
mov
cmpsl
dec
out
pop
out
inc
pop
in
ljmp
sti
mov
cmp
mov
sahf
pop
ss
cmp
bound
pop
fimuls
mov
aaa
jnp
sahf
xchg
or
sbb
push
cmp
dec
xchg
test
ret
mov
nop
xor
gs
clc
pop
clc
sbb
sbb
cmp
lea
mov
cmp
cld
or
pop
jp
add
into
inc
aaa
ds
rcl
out
mov
jmp
clc
and
cmp
adc
dec
mov
xchg
jecxz
jbe
xchg
or
sub
dec
inc
repz
and
and
and
pop
int3
push
inc
mov
cmpsl
iret
dec
pop
mov
mov
cli
fdivl
cmp
inc
fstl
arpl
roll
int3
mov
pop
add
and
push
addr16
mov
test
bound
imul
fisttpll
jae
inc
cmpsl
xor
fdivrp
imul
mov
arpl
push
stos
inc
sti
xor
and
sub
sbb
mov
lret
test
cmp
pop
xor
adc
test
jae
inc
push
jb
cli
xor
call
movsb
or
imul
mov
stc
xchg
mov
mov
mov
shrb
inc
stc
mov
mov
aam
pop
popa
ja
adc
cmp
xor
mov
gs
ficoml
loop
fldt
mov
je
jp
inc
jbe
xchg
push
out
push
mov
pop
stos
ljmp
pmullw
adc
push
xor
mov
popl
dec
sar
sbb
mov
iret
push
and
outsb
xchg
hlt
cmpl
aas
icebp
enter
xor
scas
jne
mov
fidivs
loope
mov
mov
outsl
sbb
adc
dec
adc
shrl
dec
fwait
dec
pusha
mov
mov
lea
stos
mov
xorb
and
or
adc
mov
push
jmp
mov
xor
ds
cli
mov
and
cltd
pop
in
in
cmpsl
div
or
xlat
xor
lock
out
jae
mov
mov
mov
mov
out
outsb
dec
xchg
push
orb
push
xchg
xchg
test
shlb
out
loopne
mov
gs
push
xor
pop
in
popa
les
jnp
pop
shll
test
inc
adc
adc
push
test
push
filds
inc
xor
fst
popa
add
data16
cmp
pop
hlt
jne
test
pop
loopne
arpl
ret
xor
enter
fistpll
sub
sahf
inc
and
fdiv
jne
jl
jl
jp
jl
cs
push
xchg
mov
add
pop
dec
stc
jl
iret
and
outsb
cmp
mov
push
mov
push
sbb
sahf
into
mov
into
pop
loope
int
mov
mov
movsb
pop
fstps
nop
xor
xchg
sti
dec
leave
push
sub
mov
cmp
jb
repz
pop
sbb
call
lea
stc
test
leave
cltd
fsts
fisubrs
or
sbb
ret
mov
stos
lahf
mov
xchg
push
inc
mov
dec
pop
adc
push
jp
insb
leave
loope
xor
sub
mov
sbb
imul
adc
pusha
inc
mov
pop
jge
int3
or
mov
pop
jb
add
push
mov
lods
jns
cmpsl
push
imul
cmc
xlat
sbbl
ds
pushf
ret
data16
imul
jnp
or
mov
imul
adc
sar
xchg
stos
fldt
je,pn
adc
push
pop
pop
adc
fdivl
in
in
pop
adc
pop
test
inc
das
leave
cmp
mov
mov
mov
or
jno
cmp
jg
mov
jg
adc
xchg
popf
mov
aam
push
call
stos
jnp
xchg
jmp
pusha
jg
in
inc
sub
xorb
or
test
cmp
aas
js
push
ror
xorb
jge
add
or
cmc
andb
popf
jmp
lods
addr16
mov
dec
mov
movsb
mov
and
cmpsl
cmp
inc
test
xchg
scas
ja
pop
int
push
xchg
sbb
add
lea
daa
hlt
mov
cli
jno
sub
daa
xchg
jmp
or
pushf
mov
outsb
pop
cmp
pop
pop
out
dec
adc
jne
cli
xor
inc
jle
daa
cld
aas
in
xchg
aas
xor
jle
rcll
mov
ret
mov
test
dec
and
mov
fnstenv
push
adcl
pop
mov
outsl
xor
fnstsw
dec
or
inc
stos
push
and
mov
push
mov
cmp
jg
int3
test
adcb
mov
mov
inc
or
cmp
loop
loopne
mov
pusha
rcrl
ljmp
and
into
mov
mov
mov
mov
mov
inc
in
addr16
adc
and
xor
insl
jb
push
inc
mov
push
push
pusha
add
bound
mov
std
xor
push
out
inc
aad
push
sahf
dec
adc
test
popa
inc
jno
insl
fidivl
repz
or
cmp
dec
sub
movsb
push
mov
add
loop
xchg
aad
ljmp
cs
add
mov
pop
mov
push
pop
stos
inc
inc
sub
js
mov
cmp
cwtl
ss
or
ja
dec
pop
mov
das
pop
mov
cmp
dec
sbb
push
pop
ss
int
mov
test
pushf
jp
sbbb
cmp
xchg
or
test
inc
sahf
jp
clc
out
lahf
push
jb
ja
dec
dec
inc
mov
std
inc
adc
adc
fstl
pop
jl
mov
fcmove
sbb
loope
push
dec
adc
add
dec
lea
jno
jge
test
insl
lcall
jge
aam
rcrl
mov
sub
cmp
subb
add
hlt
or
leave
test
scas
jp
mov
stos
xor
pop
cltd
icebp
int3
cmp
rorl
xacquire
in
jl
ficoml
clc
mov
outsl
adc
jp
das
in
sub
adc
jnp
outsl
testb
paddusw
rcrl
pop
movsb
lahf
sbb
pop
addr16
mov
pop
add
ljmp
hlt
mov
out
xchg
cld
andb
aad
sbb
ljmp
nop
push
sbb
aad
push
sub
push
inc
or
ss
shll
sub
test
jne
ret
inc
aaa
imul
loop
inc
fimuls
jl
cmp
lea
jns
in
std
pusha
mov
outsl
jbe
out
sahf
push
into
ljmp
cltd
adcb
dec
test
jge
int
stos
in
scas
ret
rcr
aas
push
imul
xchg
fcompl
sbb
fdivl
jg,pn
cmp
dec
fsubl
jb
aas
cmp
cmpb
leave
sti
jnp
inc
rclb
cmpsb
dec
fs
test
imul
xor
add
cltd
push
pop
jns
cmp
sbb
out
hlt
das
in
loopne
decl
testl
mov
pop
rcrl
pop
sbb
mov
xor
fmul
cmp
sbb
jne
or
imul
data16
mov
cmp
mov
or
xchg
xchg
fbstp
xchg
jl
inc
jo
orl
xor
popa
hlt
cmove
pop
add
cwtl
das
pop
sets
test
rcll
pop
sbb
int
cli
mov
insl
mov
pop
inc
push
and
cmp
mov
hlt
mov
mov
sbb
cmp
pop
mov
in
pop
xchg
jp
push
fwait
sbb
fldl
mov
adc
cmp
cmp
mov
mov
addr16
and
adc
add
cmp
ss
es
mov
pushf
addr16
dec
mov
addr16
push
add
jecxz
ror
mov
add
cmpsb
jno
sbb
jb
inc
jle
inc
aaa
sarb
loop
nop
fistpl
clc
xor
cli
pushl
lahf
jns
paddw
enter
in
cmc
hlt
jae
dec
dec
jmp
iret
sbb
jnp
or
mov
mov
add
cmc
shlb
test
loopne
mov
cmp
xchg
add
call
in
notb
aas
andb
in
call
adc
mov
lds
cmp
fs
pop
ds
jb
hlt
mov
mov
lcall
enter
loope
adc
insb
daa
dec
scas
in
shll
jns
clc
pop
push
negl
outsb
pop
pop
add
jmp
outsl
xchg
stos
xor
movsl
cld
sti
mov
or
gs
das
imul
movsb
fistl
push
jno
xorb
and
push
js
ja
cwtl
ds
cmp
lret
dec
cltd
fistpll
ja
movsb
mov
or
or
sti
push
jne
jne
jo
xchg
dec
ret
xlat
push
std
xchg
stc
dec
popl
pop
push
push
out
int3
rol
ljmp
insb
jle
push
and
mov
arpl
and
mov
xlat
jne
xor
jne
jnp
push
add
jge
ret
faddl
pop
lret
sub
mov
test
jno
out
push
rclb
xor
leave
xor
mov
gs
xorl
cmp
or
cmpsl
shr
push
xor
push
sbb
mov
cmpsb
xor
add
jg
xor
out
adc
or
stc
push
repz
stc
sub
cmp
call
lahf
pop
lock
mov
add
into
stos
mov
out
dec
mov
sub
jae
dec
fisubl
mov
negl
lods
rcl
or
aad
fwait
sub
jmp
in
int
cmp
pop
mov
xor
and
sub
test
lret
enter
das
pop
push
pop
jno
and
adc
stos
fists
mov
mov
adcb
stc
add
push
xchg
mov
inc
test
leave
mov
js
push
aaa
mov
mov
ss
test
pusha
in
pop
mov
pop
in
push
mov
test
sbb
mov
jbe
pop
in
cmp
arpl
testl
mov
stc
xchg
mov
push
add
fdivrs
cmpsb
andnps
outsb
scas
push
les
adc
test
xor
fbstp
call
or
pop
xchg
stos
jne
fdivrs
je
cmpsb
insl
pop
cs
xchg
or
mov
sti
add
add
leave
sbb
nop
aaa
sub
mov
mov
cld
daa
inc
aaa
pop
add
push
and
lcall
mov
bound
ljmp
adc
sahf
dec
jge
loope
or
int3
pop
and
xor
andb
std
cmp
add
inc
addl
ljmp
shll
in
insb
pop
add
push
cmp
iret
mov
lods
scas
sbb
dec
cmp
add
cmp
lods
adc
jnp
iret
roll
mov
jg
push
sub
pop
mov
rorb
test
sbb
js
sub
mov
xchg
pop
dec
adc
addr16
lods
out
and
loope
imul
cmp
pop
sbb
cmp
frstor
xchg
adc
dec
adc
into
aaa
pop
js
adc
repnz
push
sbb
push
jle
pop
frstor
idivb
enter
mov
in
jne
int
mov
jmp
lret
add
pop
fidivs
sbb
dec
and
jmp
jno
repnz
add
mov
dec
es
outsb
pop
or
dec
cmp
pop
push
cmpsb
clc
pop
daa
movsb
mov
cmc
rolb
xchg
pop
scas
shlb
mov
out
mov
jg
and
add
dec
mov
mov
cmpsl
push
arpl
inc
add
push
push
dec
bound
xchg
shrb
and
scas
jge
pop
cmp
mov
cmc
bound
sbb
pop
jge
imull
subl
inc
in
test
sahf
jo
lcall
shrb
gs
pop
adc
cmp
out
cmpsl
cmp
jno
lock
stc
xchg
xchg
popf
cmpl
mov
mov
add
pop
aad
and
jno
adc
sub
sub
outsl
or
fsubs
aaa
outsl
jno
sbb
cmp
in
movl
mov
and
add
cwtl
jg
dec
mov
mov
rcl
icebp
clc
mov
and
mov
mov
lea
mov
int3
jns
inc
adc
ja
out
and
jne,pn
movsb
in
dec
jns
and
adc
fidivs
inc
and
into
adc
ljmp
rclb
xchg
jle
fimuls
or
xor
enter
mov
cmc
dec
push
and
test
fnstenv
xchg
sub
test
adc
cli
rcll
lea
jbe
int
push
mov
xorb
test
stos
dec
jmp
cmp
and
neg
test
jne
enter
pop
xor
push
rcrl
int3
ret
lcall
mov
sbb
insb
insb
and
jecxz
jge
mov
fwait
jge
xor
imul
out
mov
push
lcall
pop
mov
or
cmp
stos
xorb
hlt
adcl
sbb
mov
shrb
xchg
and
xchg
push
sub
lods
cmc
or
divb
inc
mov
xor
cltd
pop
sub
insl
test
or
push
std
movsl
sbb
daa
cmc
xchg
mov
add
rolb
add
mov
shlb
mov
mov
and
cmpb
shlb
fxch
push
and
in
pop
mov
xchg
popa
ljmp
push
out
and
frstor
call
int3
jo
pop
cmpsl
int3
mov
xor
pushf
lods
inc
hlt
mov
inc
sti
insl
mov
lret
or
jns
sbb
mov
jle
adc
mov
sub
cld
stos
inc
loop
cmc
xchg
subb
adc
push
hlt
stos
das
mov
shrb
inc
ret
xchg
ja
clc
out
daa
daa
adcl
orl
xchg
in
gs
daa
out
mov
push
mov
or
and
int
jl
mov
call
jo
clc
popf
or
adc
xchg
xchg
dec
mov
push
sub
xor
sub
xchg
mov
test
aam
popa
jo
add
dec
leave
in
cmpsb
cwtl
push
cmpsl
mov
jb
jns
jp
cli
dec
jl
jmp
lea
mov
dec
outsb
mov
repz
push
xlat
jnp
adc
flds
jbe
decb
xbegin
push
push
daa
and
not
and
jnp
push
jl
fs
aas
push
jno
loopne
fwait
jno
pop
mov
mov
mov
pop
mov
imul
loope
cmpsb
rcll
inc
xor
pop
mov
push
inc
int
cmpsb
dec
cmp
faddl
inc
push
stc
sub
shr
outsb
fwait
inc
sub
jecxz
sbbb
push
je
dec
icebp
pop
jb
test
insb
add
int3
repnz
or
fs
sahf
sar
push
outsl
test
lahf
jb
sbb
or
cmovne
addr16
mov
imul
adc
pop
xor
inc
add
push
test
daa
mov
sub
inc
and
roll
jecxz
xor
adc
xor
pop
inc
mul
inc
mov
pusha
enter
pushf
mov
xchg
insl
adc
mov
mov
lahf
dec
adc
push
fidivrl
pop
int3
daa
xorb
mov
fscale
inc
inc
and
xchg
out
jecxz
inc
pop
inc
and
cli
rcll
jnp
or
add
mov
dec
and
loop
aaa
cmp
mov
out
adc
adc
sub
pushf
test
ret
ljmp
jg
test
in
sahf
xor
ror
cmpsb
daa
add
es
push
inc
cmp
daa
mov
dec
gs
sub
in
xlat
in
mov
loope
xor
cmp
in
mov
test
xchg
cwtl
jo
lock
mov
je
test
mov
loop
call
into
divl
mov
into
outsl
stos
jge
psllw
in
loope
out
pop
cmpsb
clc
out
and
push
or
cs
mov
rol
loopne
xchg
and
jmp
and
mov
cltd
inc
xchg
lcall
mov
adc
cmp
out
inc
jp
cs
out
push
cmc
rol
fnsave
test
scas
mov
add
sub
xchg
imul
jno
jl
pop
repz
or
mov
sahf
sbb
ret
es
sub
out
sub
dec
bound
jno
test
xlat
sbb
mov
repz
aam
sbb
mov
jne
add
inc
pop
xor
fwait
insl
jp
cmp
lret
outsl
xor
xchg
es
jg
jns
in
mov
sub
inc
bound
mov
push
add
ljmp
shll
xchg
outsl
xchg
push
mov
dec
scas
iret
shll
mov
cwtl
out
mov
shrb
ljmp
mov
jecxz
insb
stos
mov
cmpsb
push
fs
jb
icebp
data16
jg
stos
jmp
xchg
stos
cltd
or
ja
pusha
enter
pop
adc
fnsave
and
add
lds
pop
gs
add
mov
ds
xor
loop
mov
in
cmp
adc
fcoml
sbb
sbbb
mov
jle
imul
in
ret
testb
fiaddl
mov
mov
lods
mov
add
icebp
push
jns
mov
inc
pop
pop
hlt
into
movsb
out
cmp
imul
shrl
add
and
bnd
lods
or
into
adc
sbbl
mov
or
add
lret
mov
mov
adc
dec
jbe
loope
xlat
adc
mov
subl
repz
repnz
sbb
push
or
pop
push
add
and
ret
jp
outsl
lock
lock
fsubr
rolb
sbb
sub
addb
cmp
popa
aam
jmp
pop
data16
or
sbb
inc
jbe
and
lods
mov
adc
sbb
iret
sub
xor
jno
pop
sbb
jp
pop
pop
cld
inc
loopne
lret
xor
pop
scas
cltd
xchg
pop
ficoms
lret
sub
cmp
lret
mov
inc
push
inc
les
loope
jmp
adc
adcl
cmp
push
push
daa
arpl
xchg
pop
mulb
add
ret
push
push
out
jge
sbb
mov
pop
adcb
loope
push
dec
test
mov
addl
out
faddl
test
mov
movsb
push
int
outsl
movb
dec
and
in
push
mov
sbb
push
loop
mov
and
pop
sbb
mov
dec
aam
add
jmp
mov
push
mov
hlt
adc
add
mov
lahf
decb
dec
push
xchg
push
jno
loop
jmp
dec
enter
inc
push
inc
outsl
mov
adc
lret
dec
push
out
insb
push
fdivrs
pop
shlb
xor
inc
outsl
mov
dec
icebp
jns
xchg
sub
int3
cmpsb
jns
or
push
loopne
int
xor
imul
daa
cmp
sarb
and
sbb
and
push
iret
clc
rcrl
jnp
jp
and
adc
dec
loop
mov
std
push
sbb
mov
jmp
cli
lods
pushf
push
pop
sub
data16
adc
inc
sar
pop
addl
xor
roll
nop
xchg
cmp
int
and
test
pop
arpl
pusha
movsb
cltd
addr16
inc
rorb
push
jbe
xchg
push
fidivs
mov
adc
in
jns
stos
aaa
xor
je
mov
push
or
mov
push
data16
div
push
push
and
pop
sbb
fwait
mov
sbb
pop
flds
fsubr
es
les
sub
xor
push
sub
test
adc
cmp
xchg
xchg
sbb
adc
dec
fsubrl
xchg
into
arpl
clc
xchg
jbe
gs
push
cmp
pmaddwd
pop
cs
and
int
mov
push
scas
jl
jg
imul
lock
gs
push
neg
mov
cmpb
roll
lods
mov
jo
out
iret
or
in
lods
push
mov
cmp
jge
lea
in
and
dec
pop
imul
mov
pop
shrb
enter
jg
xor
pop
push
gs
adc
addr16
or
inc
mov
push
pushf
sub
inc
outsl
scas
movsl
std
ret
test
jae
and
sbb
lcall
add
jle
lods
xchg
xchg
push
notb
loope
xor
inc
adc
mov
mov
adc
or
ficomps
or
push
or
push
icebp
arpl
jne
pop
shlb
sbb
popa
into
inc
cmp
lahf
dec
jne
or
cmp
ret
add
xchg
pand
jl
xchg
scas
idivl
jmp
jl
out
jb
insl
es
adc
bound
jae
sbbb
jmp
leave
xchg
test
adc
pop
and
cmp
xchg
mov
data16
shrb
cmp
push
mov
jle
arpl
insb
cmp
std
sbb
cs
xlat
test
fisttps
adc
or
cli
iret
stos
hlt
mov
inc
dec
test
fdivl
add
mov
fidivs
fildl
fidivrs
outsl
sub
nop
fists
inc
pop
xchg
dec
or
sub
pop
mov
mov
mov
scas
mov
dec
cmp
outsb
lahf
outsb
bound
mov
mov
mov
inc
hlt
adc
add
mov
mov
aaa
lcall
divb
sti
imul
jbe
xchg
int3
popa
ljmp
add
lds
mov
daa
ret
pop
addr16
dec
push
lds
cmp
add
inc
push
cmpsl
loop
jae
pop
repz
and
pop
shlb
popa
filds
shlb
stos
or
cmpsb
into
daa
sti
imulb
xchg
into
inc
pop
jg
js
mov
and
mov
pop
mov
imul
push
adc
out
pusha
jge
orb
movsl
push
mov
subb
sub
add
cmpsl
xchg
jbe
mov
les
fistps
xchg
mov
shl
dec
xchg
test
push
push
loope
scas
shl
fsubr
jg
fisttpll
pop
sbb
icebp
pabsb
cmpsb
sbb
aam
addr16
js
sti
push
mov
sarl
jo
repnz
and
and
int
mov
pop
mov
push
jno
sub
sub
mov
addr16
mov
fisubrl
lock
sub
inc
jl
xchg
test
sub
into
jecxz
insb
jns
loope
notb
call
ret
or
mov
xor
sub
jmp
jnp
js
jbe
inc
xor
sarl
mov
into
sub
out
imull
mov
in
sub
jne
mov
stos
and
loope
cmp
push
sbb
add
push
mov
lock
stos
and
mov
stc
cmp
inc
rcll
inc
lret
inc
cwtl
xor
push
js
repz
sub
mov
and
stc
inc
bnd
push
cs
inc
rclb
xor
sahf
cmp
jp
inc
pop
movl
inc
addr16
jno
outsl
lcall
sub
jge
push
pop
outsb
nop
mov
or
ficompl
lods
add
mov
out
mov
adc
or
idivb
lds
idivl
or
into
mov
sarl
add
adc
aam
add
mov
enter
std
cwtl
ljmp
test
ss
jne
push
lret
shr
mov
xchg
mov
sahf
jmp
push
mov
push
lds
or
lcall
inc
or
and
pop
out
mov
sbb
cli
pop
mov
in
je
jnp
push
stos
mov
es
imul
jecxz
hlt
mov
lahf
ljmp
or
test
add
pop
cmp
bound
gs
incl
imul
das
pop
int3
add
dec
mov
add
add
sbb
ljmp
sub
int3
xchg
push
mov
fmuls
and
test
pop
pusha
shll
dec
dec
stos
imul
sub
loop
test
notb
aam
xchg
int
xchg
and
mov
mov
cmp
add
mov
pusha
pop
loopne
cld
jbe
daa
add
int
das
fcoml
cmp
jle
mov
outsl
sub
pop
repz
jnp
and
pop
jecxz
fs
shl
cli
mov
dec
dec
or
dec
cmpsl
ret
inc
sbb
sbb
xor
dec
repnz
xchg
into
iret
mov
pop
xor
aad
ret
mov
loopne
xchg
icebp
fisttps
cltd
mov
push
cmc
jae
ss
adc
mov
mulb
mov
and
adc
push
inc
out
dec
daa
push
mul
inc
mov
pop
lock
rcr
scas
push
cs
sbb
mov
ss
sub
adc
imul
sub
add
cmp
repnz
inc
push
pop
pop
rorl
repz
sahf
outsl
or
inc
enter
inc
out
out
xor
jbe
mov
xchg
stos
and
sar
xor
mov
sarl
rolb
push
jo
repnz
lret
add
dec
push
push
es
subl
jnp
lret
stc
or
mov
lcall
and
mov
pop
sahf
pop
jno
ret
jns
jbe
in
dec
pop
pop
cmc
icebp
leave
loopne
lods
or
inc
daa
xor
jmp
mov
xor
out
les
in
into
in
cld
add
nop
or
test
cmpsb
sbb
loope
push
pop
sti
pop
or
mov
daa
push
jmp
jae
sbb
or
std
push
inc
lock
out
iret
push
jnp
addl
nop
in
mov
push
cs
scas
jnp
dec
cmp
xchg
or
lret
jmp
cli
and
les
test
imul
pusha
std
mov
dec
rol
or
xchg
pop
andl
sbb
outsb
ja
movl
or
and
popa
push
mov
loop
add
push
mov
push
dec
push
or
mov
andl
sbb
push
cli
notl
nop
sub
push
or
das
stos
pushf
mov
dec
je
sub
into
push
scas
fdivs
adc
cwtl
xchg
sub
or
and
adc
les
and
lea
mov
das
jp
sbb
ss
ja
loop
je
sub
das
aad
mov
jp
cltd
add
mov
cmp
adc
adc
aas
jbe
pop
push
xor
dec
in
adc
sbb
and
lods
ficoms
repnz
jg
fmuls
in
sub
mov
andb
add
jge
xor
scas
dec
roll
js
mov
or
jns
fadds
ss
pop
xchg
pop
pop
adc
aad
mov
and
fxch
aam
jp
or
pop
scas
das
jl
cld
mov
out
lds
pusha
or
mov
inc
lods
pushf
insl
clc
adc
inc
cmp
fnstsw
jle
in
psubb
mov
add
ds
xor
mov
mov
pushf
inc
les
mov
cmp
in
mov
pushf
xchg
inc
mov
mov
ds
xchg
push
hlt
nop
sar
pop
pop
inc
jle
push
push
and
and
iret
push
mov
lret
pusha
jecxz
jno
test
cltd
dec
scas
jnp
inc
mov
sub
jnp
push
repz
iret
mov
clc
mov
inc
in
cmp
and
ds
jbe
cwtl
dec
sti
int3
mov
inc
loop
cli
repz
cmc
push
test
dec
mov
movsl
add
dec
pop
mov
rclb
push
icebp
sub
sub
jecxz
mov
test
cli
pushf
jg
xchg
arpl
addr16
lock
adc
xchg
jbe
and
in
mov
mov
push
xorl
or
aad
jne
rolb
or
cli
sbb
rcrl
ret
adc
xor
leave
les
outsl
fwait
mov
aaa
sub
fnsave
jle
in
sub
cmp
lds
test
scas
push
mov
sub
inc
pop
inc
and
push
aam
cmp
lock
pop
and
mov
push
stc
notl
lea
sbb
dec
sub
aaa
push
inc
stc
sub
add
inc
pop
es
stos
in
pop
shll
jmp
jbe
loop
pop
je
mov
cli
mov
shlb
and
sub
mov
rep
xchg
ja
and
dec
pop
ja
adc
and
pop
inc
test
lcall
es
test
dec
dec
dec
sti
cmp
add
push
insl
mov
cld
inc
mov
movl
cmp
pop
mov
sahf
es
shl
cmp
andl
stc
xchg
mov
sbb
stos
out
cmp
mov
ja
ljmp
push
mov
loope
fisttps
lea
cmp
in
pop
cmp
into
cmpsb
int3
inc
push
ror
cmp
inc
mov
cld
movl
push
and
fnstsw
cwtl
out
xor
xchg
pusha
in
pop
cmp
addr16
add
in
or
sbb
jne
mov
je
fdivr
mov
push
inc
dec
and
out
jo
sahf
sub
add
jnp
les
adcb
nop
cli
pop
jl
xlat
in
cltd
mov
rclb
testb
mov
jbe,pt
mov
push
cli
lods
inc
popf
mov
shrl
mov
push
push
xor
in
inc
bound
push
and
test
jno
sbb
jnp
cli
jb
pop
out
jle
gs
jge
xor
in
hlt
xchg
dec
mov
or
add
xor
adc
push
je,pt
jo
add
movsl
imul
mov
fistpll
lods
jo
ja
or
repz
je
jmp
data16
lock
mov
push
jge
stos
xorb
jno
jbe
lret
lods
and
iret
sbb
mov
add
sbb
jne
or
hlt
mov
movl
jae
test
mov
lahf
ss
test
gs
cmp
test
ds
bnd
in
bound
add
push
cmp
leave
xor
xchg
lods
bnd
daa
dec
pop
push
in
pop
mov
add
push
stos
ja
divb
mov
push
notl
jb
sub
andl
loop
mov
mov
xlat
push
jmp
cmpsl
shl
cwtl
or
pop
push
fmuls
loop
daa
ds
pop
outsl
int3
pop
adc
test
mov
add
icebp
call
inc
lods
scas
pop
mov
cmpsl
xchg
ret
pop
cmp
cld
leave
xchg
add
std
pop
lock
pop
test
jbe
test
cmp
sbb
lret
in
jl
lods
cli
cli
repnz
lcall
jle
dec
imul
or
loop
push
push
movsl
pop
rcrl
movsb
sbb
nop
sbb
add
outsw
shrb
fs
aam
daa
cld
test
rorl
stc
popa
pop
xchg
dec
lods
add
gs
xor
js
pop
outsb
repnz
xchg
sarb
push
xchg
out
inc
test
xor
cmp
lock
ja
daa
or
jb
mov
or
xchg
jb
mov
aam
sar
pop
jno
sbb
inc
xor
inc
lods
add
jo
sub
fincstp
fcomps
pop
xchg
leave
stc
aam
leave
das
adc
jp
mov
xchg
xor
adc
mov
scas
mov
fdivs
lods
inc
cmc
push
loop
shrb
mov
add
test
or
out
push
fildl
faddp
sbb
pop
scas
icebp
fcoml
shll
xchg
lret
fstpt
push
icebp
incl
jne
rol
add
mov
popa
push
cld
push
push
or
loop
sbb
mov
xchg
cwtl
cwtl
xchg
inc
jns
lods
push
hlt
mov
clc
add
sub
inc
repz
inc
mov
popa
icebp
je
mov
cmp
data16
out
mull
pop
sahf
pushf
arpl
xchg
or
xchg
and
pop
scas
pusha
movsb
in
mov
frstor
and
and
xchg
and
pop
jno
cltd
sub
push
leave
sbb
mov
xchg
or
xchg
mov
loope
jns
ljmp
sbb
fcomi
dec
pusha
inc
pusha
adc
lea
adc
sbb
js
jmp
loope
cmp
inc
not
jne
cld
pusha
mov
loop
ljmp
rcl
ss
mov
inc
addb
adc
cld
jbe
pop
sbb
loope
gs
jno
cmp
lcall
lret
xlat
and
push
pop
inc
mov
out
loope
xchg
nop
mov
pushf
pusha
lret
stos
mov
into
int
addr16
xchg
sub
loopne
mov
shrl
mov
popa
mov
cmp
loopne
ljmp
mov
jl
jo
push
inc
xor
add
pop
shlb
jle
cmp
push
adc
mov
outsl
adc
cmp
div
call
jnp
test
std
gs
mov
cld
sbb
aas
out
xchg
mov
insb
and
nop
cltd
mov
cmpsl
sbb
pop
xlat
jecxz
push
ret
pop
cmc
addr16
fadds
sub
mov
int
imul
ja
adc
jo
aas
mov
or
inc
popa
mov
dec
xor
ret
iret
fwait
jg
ret
sti
pop
syscall
jnp
jmp
mov
xchg
xchg
xor
cmp
data16
and
cwtl
jge
loope
xchg
xchg
adc
mov
sbb
mov
add
imulb
dec
cld
and
cli
jb
int3
mov
cmp
mov
lret
mov
dec
cmp
mov
rcrb
in
insl
rcrl
popf
inc
jno
push
adcl
xchg
cli
mov
ss
call
outsb
mov
sbbb
push
cmpsl
mov
pop
repnz
ret
mov
lcall
push
push
aaa
fistl
scas
mov
nop
pop
inc
mov
fistps
popf
mov
add
push
xchg
mov
fcoms
push
pop
mov
andl
stos
xchg
js
outsl
rcr
loop
sti
xchg
mov
rorb
sbbl
idivl
hlt
xorl
cmp
and
sbb
and
and
pop
add
fisubrl
mov
cmpsl
push
lods
icebp
sbb
jge
leave
jbe
mov
sub
lret
mov
test
stc
or
inc
and
nop
mov
inc
hlt
clc
mov
out
outsl
iret
xchg
push
pop
xchg
stos
fistps
sub
icebp
out
imull
cmc
sub
lods
idiv
rclb
jb
jb
push
pusha
mov
ret
adc
fmull
lea
leave
fldenv
stos
jo
dec
sbb
push
mov
cmp
lds
into
xor
leave
add
xor
inc
mov
arpl
or
add
adc
jno
shl
push
daa
vpcmpgtw
push
fchs
fnsave
std
cs
cmpsl
enter
mov
xor
repnz
loope
mov
inc
daa
fsubs
mov
and
xor
in
or
add
push
lcall
test
rcll
lds
sub
cmp
inc
ljmp
mov
or
pop
jl
icebp
add
mov
mov
xchg
adc
jae
xor
movsl
sub
and
je
jmp
xchg
mov
test
fs
xor
in
cpuid
and
dec
push
xor
lahf
dec
mov
test
int
stc
xor
lea
xlat
or
jno
in
mov
cmp
jb
enter
cmpsl
xchg
movb
js
je
sub
ret
bound
jl
push
mov
mov
xchg
jle
aaa
popf
pop
add
mov
pusha
pop
sbb
add
jg
mov
int
bound
test
mov
aam
mov
cmc
je
imul
mov
push
sbbl
adc
mov
pop
mov
cli
dec
enter
adc
and
aad
fidivs
rclb
pop
int3
fsubs
dec
fs
out
in
xchg
jb
sbb
xchg
sub
xchg
aas
inc
pusha
mov
xor
mov
in
add
scas
pop
pushf
test
int
inc
push
aad
fimull
adc
test
das
cmpsl
shl
or
lret
sub
pop
andb
lret
out
loopne
imul
js
pop
fnstcw
mov
pop
inc
push
xor
mov
in
std
in
and
mov
lods
insl
pop
scas
js
ljmp
pushf
mov
mov
and
loop
popf
add
push
mov
and
jl
xor
mov
addr16
jge
push
mov
pop
adc
sub
push
insl
ds
arpl
jne
sarl
inc
cmpsb
mov
mov
rorl
sarb
pop
dec
sub
int
dec
mov
mov
dec
pop
stc
xchg
ret
jno
ret
sbb
jmp
xlat
push
adcl
push
mov
sub
add
pop
rorb
push
push
lcall
outsb
clc
and
sbb
lock
fidivs
js
cmp
fldcw
inc
inc
xor
or
mov
jle
jns
inc
xor
shl
les
loop
adc
andl
adc
jp
test
adc
fcmovne
adc
xchg
sub
mov
or
int
or
and
lods
out
mull
in
push
daa
xor
cmp
mov
add
xor
push
add
xchg
push
lret
movsl
xor
cmpsl
inc
mov
xor
addr16
es
int3
aas
mov
inc
xchg
jne
dec
xchg
cmpb
prefetch
or
cmpsb
xchg
insb
mov
pop
jecxz
inc
out
mov
outsb
xchg
push
adc
sarb
ja
imul
pop
enter
sub
jnp
fdivl
mov
ja
adc
dec
xor
or
rcll
mov
add
sahf
cmp
negb
jl
pand
aam
dec
mov
or
jp
dec
out
pop
and
fiadds
sbbb
push
adc
or
stc
dec
sub
inc
ljmp
rol
lea
bound
push
popa
pop
jb
shrb
gs
movq
jae
push
and
mov
mov
xchg
or
mov
testl
cmp
lods
int
stc
mov
sbb
jle
sub
pop
popa
xchg
adc
jne
dec
in
addb
jg
inc
dec
or
jae
cwtl
test
cld
xchg
xchg
cmc
mov
sbb
and
inc
add
push
xchg
dec
jp
jecxz
xor
andb
dec
sbb
sub
scas
jp
jo
mov
les
and
cmpsl
pop
and
fcmovne
les
sub
sahf
js
sbb
jmp
cli
adc
add
subb
push
jns
push
mov
inc
cmp
inc
dec
hlt
and
lea
or
mov
ret
xchg
add
fsubrs
adc
jge
sti
xchg
sahf
in
rcll
xchg
aaa
mov
mov
mov
pop
add
sub
daa
sbb
add
imul
inc
lds
sub
dec
lods
jnp
out
fstl
mov
jmp
cmp
fildl
lods
lret
mov
sub
sbb
push
pop
mov
mov
icebp
pop
cmpl
adc
movsb
cmp
mov
jg
lret
insl
fbstp
out
add
scas
aad
or
inc
test
add
aas
push
loop
dec
std
pop
bound
push
lods
ret
cmp
int
insl
and
or
xchg
jbe
push
inc
dec
aam
mov
cmpsl
cs
cli
mov
in
sti
and
pushf
jb
adc
sub
jg
xchg
mov
pop
jne
push
adcl
sarb
or
pop
mov
popl
cli
or
repz
mov
add
mov
add
jmp
xchg
cs
xchg
sbb
outsl
pop
je
data16
jno
ja
xor
in
testb
aad
pop
mov
popa
cmc
dec
test
pop
mov
cmp
mov
adc
stos
cmp
aam
push
aam
insl
inc
lock
pop
fdivrs
mov
fwait
adc
dec
mov
iret
mov
stc
lret
dec
fdivrl
mov
mov
nop
shrb
ja
pusha
imull
mov
sbb
sub
xchg
pop
cs
ss
test
or
insb
lret
pusha
inc
int
xor
mov
lock
or
push
pop
jns
xchg
cs
xchg
or
pop
loop
aad
xchg
and
xchg
je
addr16
es
jle
or
pop
cltd
mov
sub
call
mov
push
adc
inc
jbe
xor
add
inc
rcll
push
push
cmpsl
js
inc
stos
adc
fnsave
mov
lods
push
mov
adc
jmp
add
sbb
andl
add
insl
cs
aas
je
sub
test
push
mov
aaa
ret
mov
inc
push
lock
mov
sbb
push
sarl
stc
mov
test
mov
stc
push
aad
jecxz
pushf
out
shrl
jecxz
sub
or
add
lods
add
in
sti
cmp
xor
bound
dec
mov
arpl
fdivrs
cmp
cli
xchg
fsubrl
setnp
xchg
mov
pop
or
push
jp
and
pop
cmpsl
sub
xchg
cltd
rclb
inc
fdivrl
pop
cmp
mov
and
mov
xchg
and
ret
ret
xor
push
fnstsw
xor
gs
inc
daa
push
cmp
dec
xor
ret
pop
push
in
mov
inc
xchg
mov
arpl
mov
jl
int
fsubrs
cmpb
aad
leave
cmp
inc
adc
ja
sub
loope
nop
stos
xchg
das
mov
cmpb
adc
cmp
mov
mov
jae
imul
arpl
fcomip
test
insl
imul
fs
scas
jecxz
mov
cmp
imul
xor
bnd
xor
pop
mov
xor
shll
cs
jle
push
push
cli
andb
repnz
lods
lea
pop
fistl
mov
inc
out
popl
or
into
sub
iret
testb
push
mov
inc
lods
or
pop
xor
or
jge
fstpt
lods
les
lret
dec
loopw
ljmp
jbe
out
pop
std
push
xor
fisttps
js
cltd
pop
add
pop
fcoms
in
pop
mov
in
divl
dec
rolb
xchg
mov
data16
enter
loope
pop
adc
arpl
fbld
cs
mov
js
push
out
stc
sbb
dec
pop
jb
ds
adc
ljmp
rcll
xor
pop
mov
adc
push
jmp
sbb
cmp
lcall
xor
sbb
fsubrs
enter
mov
and
ljmp
pushf
inc
sbbb
int3
out
mov
insl
jnp
mov
jb
imul
js
inc
jne
add
dec
inc
mov
movsb
mov
mov
maxps
negl
sbb
fidivrl
adc
faddp
lret
dec
ret
cmp
stos
pop
cmpb
jl
lret
sar
addr16
mov
ja
ss
and
lods
jl
mov
inc
bound
aas
stos
and
fnstcw
or
cltd
xchg
and
outsb
push
adc
loope
xor
std
mov
and
cmp
cwtl
loopne
loopne
jnp
aam
scas
cmp
out
xor
cwtl
pop
mov
aas
imul
pusha
gs
pop
mov
inc
cmc
fcomip
cmp
scas
push
test
add
xchg
mov
sub
mov
inc
dec
dec
cmp
mov
lret
into
js
push
ds
lds
in
addr16
repz
notl
xchg
idiv
sbb
inc
dec
nop
mov
lea
sbb
or
rcrb
scas
pop
ret
test
insl
and
xor
rolb
dec
jp
jmp
jl
xor
ret
test
add
inc
sub
loop
cmp
mov
inc
mov
js
or
or
aad
xor
testl
orl
aaa
mov
test
dec
add
jp
les
loopne
mov
shrb
xor
imul
cmp
scas
into
xor
xchg
cmp
fwait
out
lods
es
cmp
mov
jmp
out
mov
xor
or
nop
lret
movsb
fmul
loope
mov
jno
fidivs
setnp
inc
add
xchg
or
and
inc
and
inc
push
pushf
shll
xor
loope
xor
push
dec
jbe
outsb
xchg
add
outsb
dec
lds
mov
adc
fdivs
and
inc
dec
mov
pop
mov
cmpsb
das
hlt
ret
sti
into
cwtl
lea
jecxz
rcr
pop
call
std
loop
rcll
mov
pop
xor
sti
pop
adc
pop
adc
lods
aaa
dec
push
and
pop
mov
pushf
or
xor
push
lahf
cmp
in
into
push
mov
fsubrl
clc
mov
das
dec
pushf
xlat
mov
mov
mov
jb
mov
dec
mov
jg
add
test
adc
mov
pop
adc
popa
lret
mov
fcoml
loop
stos
jl
mov
adcl
shr
cmpsb
push
test
xchg
into
mov
lea
xchg
jge
int
sub
mov
and
or
jbe
cmp
xor
shl
mov
bound
test
lret
sub
icebp
out
mov
jo
aaa
clc
or
and
cwtl
cmp
rcrl
push
add
pop
ja
xor
cmp
mov
cmp
decl
pop
insb
mov
push
jns
or
mov
mov
int
jne
cmp
sbb
push
mov
ljmp
out
mov
dec
insb
lds
lcall
dec
or
lods
aaa
daa
stc
mov
xchg
loope
push
push
sbb
inc
xchg
push
pop
js
lods
test
inc
insl
insl
scas
cmpsb
repnz
adc
pusha
adc
in
xor
pop
push
push
push
je
imull
add
pop
sbb
fcmovu
inc
lods
jp
xchg
mov
test
fildll
in
xchg
shll
dec
xchg
rol
shrl
xor
inc
xchg
push
lret
ret
stos
mov
in
bound
jo
xor
cmp
or
add
or
add
cmp
test
xor
stc
pop
shll
add
daa
cwtl
ja
sbb
mov
pop
fs
test
push
sub
imul
outsb
xchg
cmp
insl
dec
lret
push
std
lods
repnz
inc
loope
push
and
push
xlat
jae
push
ror
out
add
mov
jp
int3
cmp
sub
negb
xchg
pop
rcl
sti
dec
lret
pop
test
cwtl
jg
pop
movsl
scas
xchg
pop
xor
jnp
mov
aam
pop
jbe
cmp
push
fildl
dec
and
sub
decl
cmpsl
and
cmp
lods
hlt
xor
inc
pushf
dec
mov
pop
movsb
mov
in
rorb
std
std
pop
mov
inc
adc
mov
jmp
adc
pop
pushf
call
push
insl
mov
xchg
mull
push
push
sub
xchg
movsb
out
sbb
push
lret
mov
push
push
mov
sbb
movsl
sbb
xor
imul
int3
jnp
fisubl
jns
or
dec
cld
aas
negl
inc
dec
test
jecxz
loop
mov
ret
jnp
addl
sbb
shlb
xor
sbb
outsl
call
sub
popa
fs
inc
pop
idiv
fsubr
cmp
lcall
inc
ss
pop
jmp
jnp
mov
loopne
jp
pop
xchg
inc
mov
adcb
inc
sti
cmp
repz
xor
test
hlt
daa
add
push
add
cmp
jb
and
outsb
and
sbbl
in
cmp
repz
shll
push
enter
lcall
cltd
pop
mov
in
andl
ja
fists
jne
fdivrl
jmp
sbb
inc
rcrb
or
xchg
imul
cmp
xchg
pop
cmpsb
push
cs
cmp
sbb
jle
push
aam
mov
leave
push
adc
mov
sahf
xchg
pop
int
out
call
shll
jae
negl
pop
push
leave
leave
es
cmp
add
mov
mov
cmc
cmpsl
orl
xchg
lock
cli
mov
daa
sbb
mov
add
call
cmp
push
push
les
pop
sbb
inc
add
mov
loopne
mov
dec
add
and
stc
sbbl
icebp
push
and
inc
dec
fucom
mov
das
sahf
loop
or
mov
cmc
notb
mov
jle
cs
inc
mov
sti
enter
sbb
aaa
aaa
nop
fsub
jns
xor
fldt
push
test
into
jno
cs
popa
xchg
xor
sub
ja
mov
js
xchg
push
pop
push
xor
cmp
dec
fs
icebp
mov
and
scas
xchg
in
out
or
cmpb
jb
pop
cmpsb
mov
jne
mov
fsqrt
mov
ja
inc
insl
add
pop
push
dec
pushf
mov
ret
ljmp
pop
push
stos
sub
cmpsl
into
mov
fsubl
aas
shl
inc
out
xchg
mov
mov
mov
jle
mov
jne
jecxz
mov
xor
mov
pop
lock
cmp
sbb
sub
aam
inc
insb
pop
popf
loope
or
orl
sbb
pusha
sahf
fcoml
xchg
push
or
xor
mov
stc
mov
clc
jle
mov
or
iret
sub
mov
add
sbb
ss
xchg
jl
push
dec
out
push
pop
aas
stos
out
sub
mov
cmc
in
xor
aaa
cld
dec
es
and
mov
adc
sbb
out
push
call
mov
movsl
sub
int
loopne
and
mov
sub
sbb
pop
jmp
jp
adcl
sbb
into
mov
cmc
in
popa
leave
enter
push
popa
push
and
dec
mov
std
sub
in
add
mov
inc
pop
and
hlt
nop
mulb
lods
pop
push
sub
adc
imul
ljmp
push
jne
leave
lahf
push
push
imulb
and
jg
out
xlat
imul
repz
jne
ljmp
int
sub
cld
push
hlt
aad
dec
shlb
movsl
sbb
sbb
adc
xlat
ret
and
shlb
xor
adc
mov
lret
push
in
push
ljmp
mov
es
or
sbb
divl
pop
add
popf
mov
inc
rcl
pop
or
and
xchg
mov
jle
mov
jbe
push
adc
stos
xor
cs
or
cmpsb
sbb
push
scas
je
repz
loopne
out
jge
push
or
jo
cmp
orl
aam
add
mov
movsb
insl
mov
ficoml
cltd
dec
add
nop
testl
sbb
mov
cmpsl
es
add
or
mov
cld
sbb
sub
xchg
xchg
push
and
mov
shll
sbb
les
test
mov
add
jae
jnp
pop
cmpsb
cld
xor
lods
mov
xor
jge
andb
jle
andl
or
mov
cltd
fstpt
iret
adc
int3
fmuls
cmc
sbb
ja
cmp
and
ja
idiv
mov
pop
mov
xchg
movsl
test
fidivrl
lcall
data16
jmp
and
fs
fs
addl
icebp
mov
aad
and
mov
inc
dec
loope
inc
mov
lock
outsl
lahf
or
int3
mov
dec
cmpsl
lods
push
xchg
dec
jg
shll
insb
in
push
loop
jp
pop
mov
mov
test
loop
movsb
in
ret
jno
mov
inc
and
test
cli
dec
inc
pop
push
loopne
nop
push
mov
and
fmuls
push
out
adc
xor
jae
ds
in
mov
int3
and
insb
jne,pn
in
sbb
es
jae
insb
rolb
cmp
push
arpl
pop
lods
jle
fmull
mov
test
add
inc
stc
sub
icebp
js
xchg
std
cwtl
jmp
loopne
xlat
pop
fs
add
lcall
mov
pop
int
repnz
int3
jle
xor
rorb
push
ja
dec
sbbb
push
push
sub
fidivl
or
cmpsl
inc
ret
jbe
cmpsb
jae
or
inc
xchg
add
stos
jae
outsl
iret
test
mov
dec
inc
dec
out
dec
js
inc
cld
loop
sub
sti
adc
dec
movsb
and
jns
dec
cwtl
ja
inc
mov
ja
xchg
inc
out
xlat
sub
das
imul
mov
dec
cmp
sub
push
push
je
insb
pushf
adc
sub
jecxz
sub
pop
lods
jg
pusha
mov
sub
xor
push
imul
sbb
in
push
in
inc
pop
adc
aam
dec
fidivs
mov
and
sti
test
ficomps
cmp
cmpb
popf
jo
sub
or
xor
xchg
xchg
or
clc
movl
int
mov
loop
out
push
and
pop
cmp
out
das
push
fnstcw
pop
outsb
outsl
mov
mov
imul
sub
cmpsl
int3
imul
in
jecxz
mov
mov
fwait
lret
jecxz
icebp
lea
inc
rcrl
rcrb
cwtl
stc
adc
jle
push
jp
jae
js
test
dec
cmpl
dec
push
or
add
sbb
mov
cmpb
out
jne
stc
sahf
cld
cmp
or
pushf
repz
add
mov
push
inc
xchg
mov
sbb
in
fsubrl
sbb
jmp
xorb
jl
jb
fnstsw
out
xor
gs
test
lret
push
orl
pusha
and
push
movsl
mov
shrl
daa
jbe
jo
div
jg
inc
gs
and
loopne
cld
mov
and
sbb
sbb
dec
dec
sub
inc
mov
lret
ficoms
arpl
scas
inc
jecxz
push
add
and
inc
cmp
lcall
je
subb
fsub
shll
cltd
mov
pusha
int3
lahf
in
xor
fidivl
test
int3
cmpsl
notl
movsb
shr
ljmp
pusha
lahf
pop
push
and
lock
test
xlat
jle
dec
add
fcmovne
cmp
mov
jne
mov
xchg
leave
inc
aam
mov
cwtl
jo
pop
shlb
sarb
jp
rclb
stos
ss
jge
sbb
aam
mov
sub
jle
rorl
sub
sbb
iret
mov
push
cmp
push
or
push
or
add
test
dec
pop
pusha
incb
lcall
mov
sbb
push
repnz
add
mov
in
sub
dec
out
pushf
pop
pop
adc
fcmovbe
cmp
fistps
mov
and
add
mov
push
ljmp
ja
shrl
push
cwtl
ficoms
adc
dec
mov
pop
in
test
cmp
outsb
mov
sub
mov
jno
mov
push
dec
pop
mov
lret
cmp
jmp
inc
mov
lea
add
push
cmp
mov
popa
adc
pop
adc
daa
dec
mov
mov
test
mov
fildl
pusha
ss
ds
adc
mov
dec
frstor
fistl
ds
push
or
movsb
jns
in
repnz
and
dec
andl
cmp
dec
cli
fadds
lahf
pop
popf
insl
mov
or
inc
in
hlt
adc
je
daa
and
add
fdivrp
orb
mov
scas
adc
clc
mov
xor
add
xchg
mov
movsb
stos
add
lret
popf
gs
mov
fcos
fstl
insl
in
cmp
jp
rol
jge
fistpl
adc
test
loope
inc
scas
mov
xor
sub
pop
lahf
mov
shrl
aam
pop
sub
mov
cli
popf
jg
test
adc
aam
cmp
sahf
sub
and
adc
repnz
call
popf
mov
bound
ret
sub
fisttpl
jmp
or
pop
ffreep
or
shrl
or
add
gs
sub
sbb
icebp
push
in
je
hlt
rcl
lea
xor
and
loope
cmc
xchg
jns
les
lret
sbb
push
shr
outsl
sahf
push
addr16
dec
dec
mov
int3
out
into
hlt
shll
mov
mov
in
xchg
ds
or
repz
les
mov
inc
sub
dec
dec
inc
or
mov
cmp
or
enter
stos
fbld
mov
dec
popf
mov
adc
pushf
je
test
repz
cwtl
hlt
bound
or
les
or
fiadds
out
mov
push
jo
inc
sahf
loopne
cmp
add
insb
out
gs
xchg
adc
insb
mov
dec
fsub
pop
push
push
cmpsl
out
sub
pop
xor
add
or
xchg
mov
mov
rcll
add
cltd
into
sub
push
fistl
sahf
push
pop
imul
clc
sub
adc
push
popf
adc
adc
dec
fdivr
pop
lcall
xchg
ss
xor
js
jns
add
adc
nop
jge
mov
jne
inc
in
jmp
jge
roll
ror
ret
int
dec
push
jo
add
push
sub
or
jp
cmovne
stc
inc
into
imul
sbb
cmc
xchg
ror
jmp
or
sub
adc
shrb
xchg
enter
pop
or
ret
dec
ret
push
push
lea
aas
mov
push
jl
jp
xor
iret
inc
lcall
dec
mov
dec
pop
es
cmp
push
push
lods
sbb
xchg
jl
repnz
xchg
in
outsb
sub
scas
outsl
and
mov
xchg
or
xor
nop
inc
jge
sti
les
dec
int
mov
jg
xchg
sbb
repnz
mov
xchg
xor
daa
lret
xorl
xchg
sub
xchg
mov
jne
clc
mov
test
test
stos
sbb
dec
xor
fsubrp
pop
jo
popa
xor
mov
divb
push
in
shl
call
mov
movsb
sbb
jo
mov
cmp
popf
cmp
sub
icebp
inc
je
out
lods
cltd
stos
hlt
xor
pop
sbb
xchg
filds
stc
clc
xchg
pop
sub
jne
inc
popf
ljmp
stc
xchg
sub
outsl
sub
ror
fiadds
inc
cmp
push
mov
xchg
push
dec
pop
icebp
jbe
cmp
inc
lret
mov
and
js
xor
fst
dec
mov
cltd
fiadds
out
dec
iret
xchg
xlat
xchg
jne
add
pop
adc
jo
xchg
jmp
xchg
pop
jl
cmp
pop
fs
sub
loop
jmp
jbe
test
imul
or
sub
inc
xchg
nop
into
icebp
stc
xlat
mov
sbb
xchg
into
jb
sub
mov
lea
sbb
sub
xor
out
dec
es
je
pop
mov
popf
and
icebp
pop
inc
dec
pusha
cmp
sub
jb
rorb
iret
lret
add
rorb
mov
ja
fcompl
movsl
fucomp
cmp
shlb
mov
lods
out
mov
add
inc
out
sub
stc
inc
mov
inc
stos
lahf
cmpsl
xlat
in
mov
push
int3
push
pop
or
sti
dec
mov
fisubs
mov
addr16
sbb
ror
or
sub
sub
push
stc
and
mulb
xor
push
ja
jp
and
xchg
adc
push
or
shll
repz
jno
xor
into
push
xchg
and
aas
imul
fdivl
adc
mov
xchg
jp
fwait
lahf
pop
mov
jns
mov
jo
pop
inc
jae
cmp
testb
movsl
xchg
jl
jl
sub
mov
cmp
xor
mov
lds
nop
jne
mov
cmp
rclb
addl
decb
ljmp
adc
mov
ljmp
iret
movsl
in
sub
cwtl
test
sub
mov
push
leave
xor
add
das
push
or
push
mov
outsb
pop
outsl
out
xchg
mov
cwtl
jnp
cld
inc
cmpsl
xor
add
mov
pop
or
imul
js
push
inc
mov
lahf
or
test
jns
xchg
pop
pop
rorb
es
aam
scas
in
cmp
add
ds
imul
int3
push
lret
pop
aam
lcall
jae
divl
mov
xorb
daa
inc
arpl
jle
lcall
sbb
add
fdivl
jbe
cmp
add
imul
dec
loope
jp
mov
pop
sbb
adc
std
cmpl
cmp
mov
push
xchg
adc
sbb
bound
aaa
and
ret
xchg
pusha
mov
cmpsl
cs
fisttpl
and
fcomi
xor
mov
or
inc
shll
ljmp
subl
xor
cltd
packsswb
mov
jae
or
lahf
sub
das
pop
push
jmp
ljmp
sub
ljmp
xor
xchg
sub
out
push
fwait
add
pop
mov
mov
sahf
jne
mov
push
imul
push
out
push
xor
cmp
mov
je
out
or
adcl
mov
dec
jbe
pop
jae
mov
movhlps
sbb
in
subb
dec
adc
clc
rolb
push
xchg
mov
inc
jle
pop
stc
aaa
lds
and
adc
mov
ss
pop
mov
addr16
imul
outsl
nop
lds
jbe
cli
in
call
push
lods
or
xchg
pop
jp
add
pop
jmp
dec
adc
jne
add
push
icebp
add
out
fs
je
std
scas
xchg
xchg
pop
cld
notb
inc
jecxz
loop
add
push
jae
popa
xchg
adc
pop
cld
push
stos
insl
jl
push
adc
jno
into
sbb
stos
cld
cmp
inc
ret
mov
mov
stc
cmp
lds
movups
pop
test
rol
and
cltd
pop
fisubl
outsl
cmp
pop
mov
push
sub
jnp
push
shrl
sub
shl
icebp
loope
aam
sub
popa
daa
inc
test
cltd
push
lcall
out
cmp
jmp
loop
out
ficomps
cmc
iret
mov
test
or
inc
push
pop
orb
clc
mov
push
fadd
fimull
mov
repnz
dec
push
dec
sarb
arpl
std
jb
outsb
jb
imul
mov
xchg
das
stc
cwtl
inc
mov
mov
and
jmp
int
pop
push
and
pop
movsl
hlt
cmp
add
aaa
popa
and
mov
jno
mov
into
int3
cmp
and
inc
jo
in
test
dec
xchg
xchg
push
rclb
and
lods
je
dec
cmp
pusha
les
lods
les
ljmp
sbb
lret
mov
jmp
adc
mov
cmp
mov
arpl
xchg
mov
push
subl
mov
outsb
addr16
mov
push
or
xor
test
std
lahf
orb
inc
xchg
shl
jmp
imull
cmpb
sub
sub
addr16
jle
dec
std
xchg
js
adc
mov
mov
in
jo
aas
jg
sbb
xchg
adc
xor
inc
adc
sbb
add
je
or
js
mov
cmp
aas
or
sub
sub
insb
jae
pop
push
cmp
dec
xor
mov
movsl
xor
jno
outsb
pop
lea
fwait
xchg
sbb
push
add
push
mov
xchg
sub
gs
pop
push
mov
jmp
dec
xor
stos
outsl
mov
clc
adc
cmpsl
js
jne
jnp
popa
jge
push
in
sub
dec
dec
pop
in
push
dec
sbb
inc
push
dec
xor
jecxz
out
cmp
pop
dec
mov
xor
mov
jb
mov
inc
shr
ja
mov
fdivrs
mull
add
or
dec
push
subb
in
push
ss
jmp
cmpl
imul
sbb
sub
adc
sub
jge
stc
repnz
mov
data16
pop
sub
push
mov
inc
add
adc
jne
xor
sub
xchg
or
mov
in
adc
and
daa
idiv
push
dec
call
push
sti
xorl
dec
in
lret
test
lea
stos
fildl
test
jo
fimuls
xchg
pop
cmc
cmc
xor
sub
call
arpl
adc
mov
xor
mov
pop
pop
push
push
scas
lds
ljmp
push
sbb
sti
outsb
les
push
shrb
inc
imul
notl
imul
dec
imul
mov
push
call
jg
enter
cli
mov
nop
popa
cmp
xchg
inc
mov
mov
dec
pop
loope
push
add
jno
les
ja
or
mov
test
jb
imul
ss
fstps
cld
cmp
sub
scas
stos
lahf
xchg
mov
xchg
dec
ja
or
imul
les
aam
cmp
add
or
cs
aaa
xchg
pop
loope
movsb
mov
push
jmp
push
adc
xor
lods
jle
dec
pusha
jp
adc
jl
aad
inc
cmp
xor
lods
add
push
nop
add
pop
dec
call
pop
pop
push
in
das
mov
shll
daa
lods
mov
test
js
adc
out
pop
outsl
jmp
mov
jbe
fmull
out
out
pop
fldcw
dec
enter
cmp
dec
int
mov
rorl
popw
adc
repz
mov
repz
xchg
jl
sbb
xorps
rorb
cltd
pop
xchg
push
popf
pop
mov
add
sti
add
test
adc
mov
sub
sbb
dec
movsb
mov
add
sbb
sbb
mov
jae
sub
add
mov
inc
repnz
std
out
pop
add
sub
pop
rcrl
mov
dec
pop
leave
mov
inc
fstl
mov
xor
sahf
push
fimull
cmp
xchg
jns
dec
fcomp
lahf
mov
repnz
inc
cmc
popf
xchg
fsubs
lods
clc
dec
out
push
or
test
cli
out
and
pop
dec
sti
mov
mov
popa
cmp
lret
enter
mov
pop
inc
pop
gs
sub
lods
iret
jmp
cmp
inc
or
or
lods
mov
fdivr
xor
and
push
lds
cmc
es
fwait
cmpsl
insl
push
xchg
adc
test
in
or
out
aam
xor
cwtl
or
mov
es
cmpsb
push
outsb
mov
movq
lock
jle
out
mov
jb
dec
ret
jbe
cmp
inc
hlt
test
jge
sbb
sub
jle
fs
xchg
mov
imul
add
lods
and
push
enter
mov
xor
ret
ret
sti
xchg
lods
inc
mov
jbe
loopne
out
inc
ss
sub
push
das
sarl
dec
fucomp
and
jns
call
imul
stos
sub
std
testl
loop
mov
sub
jno
fists
mov
cmp
nop
pop
std
xchg
popa
and
pusha
sbb
fs
icebp
clc
xlat
sbb
lds
push
loop
adc
int
and
mov
add
clc
fwait
test
scas
dec
pusha
push
xor
loop
jge
cmp
stos
fwait
mov
loope
shrl
cltd
arpl
mov
pop
lea
adc
mov
call
leave
add
cmpsl
or
aaa
dec
jle
and
xor
lcall
shlb
jg
xchg
sbb
neg
mov
cs
mov
adc
lods
stos
loop
or
xchg
fldcw
aaa
sub
adc
cmp
mov
out
in
inc
js
add
daa
mov
movsl
and
fbld
les
cltd
and
js
dec
mov
or
outsb
sbb
sahf
test
out
das
cmpb
out
loopne
push
add
xorl
pop
ret
int3
cli
test
xchg
push
cmp
stc
xor
pop
fldt
pop
adc
mov
mov
cmp
adc
test
outsl
sbb
cmpb
test
roll
out
int
xchg
mov
movsl
xor
out
fs
or
xor
gs
call
cld
mov
stc
sbb
ja
dec
inc
clc
push
mov
jno
icebp
xchg
jnp
fildl
jb
repz
adc
ja
out
mov
push
loope
mov
lret
inc
jmp
outsb
xchg
add
sti
and
push
sub
jae
mov
add
xchg
not
imul
push
lahf
xchg
das
fsubl
mov
popa
lods
mov
fcmovbe
cmp
in
je
xchg
xchg
push
pop
jnp
movb
in
xchg
movhps
std
inc
mov
rcll
stos
push
ret
jmp
and
mov
push
popf
add
fidivl
push
cwtl
stos
inc
imul
lea
push
inc
outsl
pop
mov
sbb
fdivrl
inc
je
inc
or
inc
sub
or
jns
mov
add
mov
andb
dec
and
and
test
addr16
dec
push
xchg
addr16
jo
loope
dec
movsl
pop
add
dec
in
aaa
sahf
mov
aam
adc
lcall
sbb
xor
fwait
jle
sti
inc
incl
addr16
gs
jl
mov
push
movb
subl
mov
add
nop
imul
inc
subl
push
stc
dec
lret
hlt
in
fadd
cltd
xor
xor
xchg
or
sub
mov
lds
or
dec
push
pop
or
xchg
imull
pop
pop
mov
xchg
mov
ret
out
mov
jle
roll
fldl
mov
jl
and
jecxz
adc
jo
push
push
imul
and
out
lods
jae
fidivl
or
fnstcw
mov
inc
aad
add
cwtl
or
xchg
pusha
or
jbe
sub
outsl
adc
in
xor
jecxz
test
lds
and
xchg
sub
jae
cltd
dec
jns
push
lds
test
pushl
lss
jo
mov
push
rcr
stos
pop
js
in
pop
fs
push
adc
mov
mov
and
sub
sub
dec
dec
sbb
sbb
js
push
ss
or
cli
mov
fildll
mov
in
or
xchg
popa
test
push
int
fadd
outsb
cmp
mov
or
aaa
test
mov
mov
test
cmpsb
sbb
int
inc
inc
jl
push
push
inc
movsl
xchg
adc
popl
dec
insl
cld
sbbl
lret
pushl
mov
aaa
or
inc
add
ret
imul
inc
sbb
clc
push
mov
out
push
call
dec
cwtl
out
lret
push
mov
icebp
pop
test
lods
outsb
fcomps
pop
out
mov
movsb
add
lcall
mov
enter
cmpsb
sbb
dec
pop
in
mov
dec
cmpsb
rcll
xchg
cmc
push
and
and
xchg
outsl
in
and
mov
xorb
in
fadd
or
fadds
dec
cmp
xchg
in
addr16
inc
cld
out
movsb
jno
inc
loopne
cwtl
sub
or
lcall
fs
in
inc
adc
mov
icebp
dec
xchg
sbb
mov
pop
dec
shl
sbb
and
jb
scas
sub
sahf
add
pop
jne
mov
adc
outsl
xor
ja
stos
jg
inc
into
fistpl
aaa
sub
popf
cld
daa
sbb
add
sbb
pop
cmpsl
cmp
sbb
xchg
or
cmp
loopne
mov
mov
jp
adc
pushf
das
pushf
bound
add
xor
pop
ret
add
dec
fsubs
sub
xchg
pop
cmpl
std
pop
lret
jns
in
pop
mov
adc
xor
repz
fildl
scas
sti
imul
incl
addr16
les
out
sahf
jp
xchg
mov
cmpsw
sbb
in
xchg
pop
int3
out
pusha
aam
aad
mov
shrl
xchg
mov
in
add
inc
cli
call
movsb
jl
dec
sti
pop
lock
lods
cmp
cli
loopne
mov
ret
call
add
test
push
sub
jle
xchg
xchg
test
inc
jecxz
xor
jae
mov
jl
inc
pushf
mov
fistl
fnstsw
in
jl
das
xchg
test
js
or
das
sub
cs
pop
pop
sub
shll
cld
in
jmp
mov
icebp
das
mov
daa
in
mov
jge
int
ja
push
and
ds
push
mov
dec
sbb
pop
mov
lods
icebp
inc
test
gs
mov
or
fwait
sbb
cmp
sbb
jge
sub
ds
imul
inc
adc
test
daa
cmp
popa
adcl
les
pop
fucomp
jecxz
insl
mov
mov
std
fisubrl
mov
ds
cmp
mov
adc
jnp
pop
lods
leave
cmp
lods
cld
adc
sub
cmpb
lret
jg
mov
or
icebp
and
sub
xchg
jl
sbb
sub
mov
or
inc
jecxz
and
dec
sub
int
pop
mov
pop
dec
popa
mov
mov
and
rcrl
jl
test
pusha
add
sbb
mov
and
inc
int
jle
mov
xchg
mov
adc
push
dec
sbb
push
cld
adc
xlat
or
cmp
testb
push
inc
cmp
dec
addb
cld
mov
mov
inc
xchg
adc
or
in
mov
inc
outsl
scas
retw
pop
mov
insl
call
push
push
lcall
enter
je
stc
adc
push
jp
ss
or
and
sub
out
lods
leave
cld
fstpl
sub
jo
xchg
xchg
dec
in
mov
push
pop
lds
out
push
notl
jnp
inc
mov
jb
test
std
mov
inc
aaa
mov
sub
mov
dec
xchg
mov
pop
mov
cs
inc
pop
loope
cli
mov
sbb
inc
pop
lock
push
stc
mov
ja
push
scas
clc
mov
add
or
add
orb
or
sti
push
and
pop
lods
and
fisttpll
roll
xchg
fcmovnb
or
jge
les
and
ret
inc
movsl
and
push
inc
jne
outsl
clc
cmp
push
adc
lret
sbb
in
xor
hlt
mov
jmp
lret
xchg
mov
mov
pop
int3
xchg
repz
cld
dec
cmpsl
cwtl
push
sub
cli
adc
cmp
es
jne
add
jnp
lcall
mov
fsubr
cmovge
imull
jae
mov
mov
and
cmp
or
mov
ss
clc
dec
out
adc
mov
pop
dec
lds
xchg
dec
mov
jnp
xlat
fidivs
xchg
iret
xchg
push
sub
sbb
bound
js
pusha
sub
enter
outsw
mov
icebp
cmpsl
pop
xchg
cmp
push
push
cmpsl
stc
jecxz
inc
int
pop
dec
nop
cmp
sbb
push
out
adc
shrb
pop
fdivrs
in
mov
push
mulb
mov
jae
stos
int3
clc
mov
negl
fwait
mov
pop
cmp
adc
das
mov
dec
adc
sbb
cmp
ss
dec
add
test
push
int
push
test
stc
fsubs
jns
lret
push
pop
cwtl
cmp
popa
mov
int
xor
lahf
pop
je
dec
xor
fnstcw
das
or
pop
aaa
mov
adc
lods
pop
push
mov
mov
fwait
ja
adcb
jecxz
mov
cmp
loop
sahf
cs
pop
and
xor
fwait
sarb
les
sub
xor
xor
xchg
fsubrl
mov
rcrb
js
inc
pop
fsub
rorl
cld
dec
pop
in
cltd
adc
cli
jg
stc
ret
mov
jge
dec
out
push
scas
mov
mov
sbb
cmpsb
and
pusha
popl
imul
mov
lea
dec
xor
stos
rcll
cld
lret
rorl
jp
jmp
ret
enter
pop
popa
rorb
lds
aad
mov
mov
cld
jns
add
sbb
iret
enter
mov
jge
orb
adc
xchg
jg
dec
xor
mov
add
nop
rorl
cld
lcall
pop
xor
mov
clc
and
flds
or
sbb
cmp
cmp
in
mov
test
lods
cmpsl
pop
mov
popf
lods
dec
not
mov
hlt
xor
jp
dec
pop
cmp
mov
sahf
push
stos
imul
inc
xchg
add
mov
inc
test
xchg
and
arpl
lods
cwtl
es
dec
jb
imul
lret
adc
mov
push
dec
jbe
rclb
inc
add
jmp
or
push
popf
inc
mov
jle
int3
mov
sti
fs
and
dec
sbb
push
out
movsb
cmp
ja
fldenv
push
out
sbb
pop
sarl
xchg
imul
xchg
push
push
cmp
in
pop
push
or
clc
popa
add
xchg
dec
iret
ljmp
mov
mov
adc
or
aam
popf
fidivs
mov
sub
adc
push
test
hlt
add
jae
lret
fisttpll
sbb
push
lds
and
and
sti
jecxz
rolb
xor
xchg
outsb
dec
jno
push
jmpw
lahf
xlat
push
cmpsl
sub
gs
and
aam
add
lods
shl
dec
jbe
pop
sbb
sub
mov
and
and
jle
or
push
cmp
out
leave
into
fs
or
cwtl
ret
daa
insb
sbb
sahf
jbe
ret
and
dec
add
dec
mov
fsubs
mov
xor
aam
pop
out
mov
data16
jbe
sbb
or
lods
mov
inc
mov
lea
xchg
jg
movsl
or
add
sbb
shlb
shr
sub
lods
jb
push
fs
mov
sbbl
cld
rcll
pop
push
xlat
xor
xor
and
js
test
mov
xchg
loop
pop
gs
lock
adc
addl
xchg
imul
sbb
cmpsl
aam
jno
add
faddl
inc
orl
ja
mulb
sbb
test
dec
mov
cli
repz
aam
cmp
jmp
mov
clc
rolb
sub
and
xchg
orb
xchg
in
bswap
dec
xor
jne
jb
pusha
clc
xchg
push
stos
iret
jg
test
imul
push
xchg
lock
lods
add
test
sub
jno
aas
out
xchg
das
mov
pop
repnz
decl
repnz
xchg
sbb
icebp
xor
sub
out
mov
or
mov
cmp
and
jb
pop
jo
loopne
dec
outsb
pop
loope
clc
pop
or
pop
enter
sub
repnz
lahf
mov
daa
jne
sub
sub
push
roll
in
pop
mov
pop
std
jns
sbb
inc
jg
out
dec
inc
cmpsb
inc
stos
mov
lods
popa
xor
jb
mov
jnp
mov
mov
icebp
mov
fs
fbstp
out
outsl
push
popa
lret
fsub
sbb
jp
mov
xlat
pop
icebp
rol
addr16
mov
mov
cltd
mov
xchg
insb
insb
fcom
adc
fcmovnb
mov
pop
or
dec
jp
or
pop
pushf
mov
jno
cwtl
dec
mov
bound
adc
or
push
mov
stos
mov
out
mov
test
cwtl
push
mov
or
lods
inc
aad
dec
pop
mov
mov
xchg
inc
xchg
mov
mov
mov
rclb
add
jns
lahf
rorl
outsl
ss
imul
jb
sub
dec
cmp
xchg
ret
cmc
sbb
clc
lret
fadd
insl
and
mov
xchg
inc
out
jnp
push
dec
jp
sbb
sub
jne
loop
fs
pop
mov
mov
jne
dec
mov
rcrl
shlb
jne
mov
xor
cmp
push
jge
lods
sbb
repz
adc
mov
or
repnz
cwtl
mov
push
mov
inc
xchg
loop
pop
push
xor
inc
xlat
xlat
decb
test
mov
and
push
push
jge
xlat
fs
sbb
aas
cmc
pop
sbb
std
dec
dec
push
mov
addr16
push
shll
rcr
mov
aad
andb
mov
loope
mov
es
jo
xor
inc
xchg
imul
ljmp
ret
outsb
add
jbe
stos
lret
or
gs
mov
sub
cmpsl
jge
lret
jnp
or
lods
and
mov
mov
call
scas
mov
sub
aaa
int
shrl
push
xchg
andl
fsubr
mov
cmp
fnstenv
and
mov
adc
pop
call
mov
jg
fmull
in
mov
mov
call
jmp
pop
sbb
cmp
xor
ret
xor
pop
jl
pop
sbbb
mov
mov
jmp
lea
pop
cmp
orl
adc
shlb
test
aam
inc
jle
bound
sahf
xorb
sbb
dec
out
and
rorb
leave
jbe
mov
cmpb
std
rclb
pusha
ja
jg
ret
les
ljmp
sub
lea
enter
xchg
mov
adc
mov
lods
mov
js
mov
add
dec
cmpb
int3
popa
xchg
push
adc
jg
lret
add
fadds
and
paddsb
push
jbe
xor
sub
cmp
adc
mov
and
xor
out
stos
pop
nop
data16
sub
dec
ficoms
or
dec
or
mov
mov
add
insb
xor
pop
xor
push
xchg
repz
cmpsl
mov
insb
pop
addb
or
lahf
inc
jo
inc
sbb
add
push
imul
sbb
orw
sbb
fcompl
int3
test
dec
stos
mov
jmp
movsb
push
sub
cmpl
lret
subb
and
loopne
cltd
icebp
and
jg
fistpll
pop
jmp
pop
loope
xor
mov
push
aad
xchg
enter
pop
subl
fistl
mov
xchg
add
mov
aam
mov
ja
aam
mov
mov
jae
fsubl
and
dec
mov
mov
divl
inc
lret
adc
aam
insb
mov
mov
fisubl
shlb
mov
movsb
mov
mov
xor
lods
adc
inc
sub
dec
dec
sbb
gs
xorb
insb
ja
js
pop
mov
lret
cld
pop
cmp
ret
mov
stos
and
mov
xor
dec
test
ss
data16
mov
dec
cmp
mov
pop
rorl
jecxz
dec
and
mov
xor
add
ja
cmovs
xchg
cmp
dec
test
scas
jno
gs
aam
leave
and
ljmp
xor
jb
stos
mov
in
adc
xor
lds
sub
enter
rcr
lea
test
xchg
and
push
push
add
cmp
adc
cmp
mov
mov
jo
rcl
cmpsb
adc
mov
out
aaa
in
sbb
push
xchg
jp
pop
sub
xor
mov
fwait
addb
xor
icebp
das
jg
mov
testl
jmp
test
jns
pop
adc
ja
push
inc
scas
cmpsl
ret
pop
out
mov
xchg
mov
xchg
ficompl
cmp
ret
mov
bound
js
cli
call
scas
ds
mov
dec
xchg
inc
repnz
jl
inc
out
pop
add
negl
adc
fsubrl
gs
inc
fbstp
cmpsb
sbb
ss
mov
aam
out
cmc
sti
fimuls
fists
clc
add
popf
fwait
icebp
lahf
int3
aas
sbb
out
jge
mov
int
xchg
push
les
jl
sub
or
cmp
jne
jmp
rcrb
inc
sbb
xor
insb
adc
cmpl
aaa
mov
nop
fwait
inc
or
xor
sbb
mov
dec
mov
adc
jno
mov
jne
mov
les
push
xchg
stos
aam
dec
jb
mov
cmc
mov
fwait
stos
cmc
scas
xchg
and
mov
mov
xor
xor
insb
cmp
imul
cld
push
push
sar
dec
add
daa
pusha
dec
cmp
insl
mov
push
cmc
jb
lret
pop
mov
xchg
cltd
dec
es
jns
mov
stos
bound
xor
push
stc
xor
xlat
mov
in
fsub
in
mov
xchg
loop
dec
movsl
bound
adc
fbld
fists
aas
int
pop
adc
add
jb
inc
dec
out
gs
call
dec
out
push
int
in
sub
adc
xchg
hlt
xchg
add
adc
and
lds
roll
cmp
mov
sbb
mov
mov
mov
lea
sub
dec
scas
mov
xchg
lods
dec
mov
repnz
cmp
imul
lret
push
mov
cs
cmp
xchg
xchg
outsb
stc
push
dec
cmc
or
les
ds
push
bound
stos
sbb
ja
cmp
bound
xchg
jne
bound
push
cmp
loop
sbb
jp
and
xchg
test
mov
stc
into
or
push
push
movsl
sbb
push
push
jmp
add
leave
xchg
test
into
fwait
pop
ret
sbb
repz
in
sub
mov
push
add
icebp
in
push
mov
jl
mov
lods
or
fwait
jl
push
jbe
pop
xchg
dec
lret
or
js
xchg
stos
nop
pop
cmp
jmp
inc
adc
sbb
sub
into
test
push
cltd
int3
nop
sub
mov
repnz
in
or
pop
jbe
sub
mov
add
popf
and
sbb
cmc
mov
dec
adc
xor
je
test
imul
cmp
loop
std
dec
pop
jmp
xchg
sub
scas
es
mov
xchg
cmp
ret
xor
je
xchg
mov
fcoml
xchg
mov
xchg
std
in
adc
addl
push
ds
jbe
xor
pop
xchg
mov
pop
xchg
xchg
xor
or
sarb
push
jb
hlt
fs
repz
enter
enter
pop
movsl
xchg
xchg
xor
push
push
jns
jnp
inc
mov
dec
arpl
sahf
push
rorl
dec
dec
roll
pushf
xchg
sbb
cmp
jge
mov
mov
stos
push
pop
dec
fdivrl
xchg
sahf
xor
lods
push
inc
arpl
sti
push
inc
xorl
mov
orl
xlat
jne
and
jp
and
mov
sarl
cld
test
or
fs
lods
cs
or
jge
popa
sbb
sbb
pop
inc
push
sbb
sub
mov
aad
xlat
mulb
pop
xor
jb
lea
xchg
inc
add
ficoms
add
sbb
test
out
popf
out
jg
loope
ja
shll
mov
repnz
xchg
mov
cwtl
mov
mov
hlt
mov
fsub
arpl
ret
adc
pop
aad
dec
push
test
jle
xor
icebp
adc
mov
cltd
mov
pop
or
push
adc
and
daa
movswl
stc
xchg
fs
mov
mov
int3
mov
std
repz
aas
pushf
adc
dec
int
fucomi
sbb
xchg
movsl
je
xchg
jmp
add
mov
pusha
call
xor
sbb
in
xor
cwtl
in
test
push
stos
and
cwtl
out
addl
pop
xlat
jecxz
inc
lahf
and
cmp
inc
and
test
in
stos
inc
lea
mov
out
jecxz
add
cmp
scas
js
push
add
outsb
and
insb
outsl
cs
lods
popa
inc
mov
xor
sub
push
fwait
inc
mov
and
dec
out
push
into
in
data16
xchg
fs
mov
jecxz
scas
sbb
lret
jl
xchg
lock
mov
mov
into
xor
ljmp
stc
cmp
shll
enter
sbb
jecxz
dec
repz
cmp
xstore-rng
cmpsl
xchg
mov
hlt
or
sub
adc
test
jnp
cmp
cmp
inc
mov
mov
jae
test
or
push
ljmp
fisubrs
jle
inc
sub
pop
pop
int
push
test
inc
mov
cmpsb
and
dec
fimuls
mov
inc
dec
mov
cmp
inc
insl
cmpsl
leave
lahf
rcrb
dec
cmpl
xor
test
jb
fs
push
mov
push
ds
cmpsb
sbb
sar
jl
mov
sub
dec
rcrl
aas
inc
or
inc
push
xor
insb
and
cmp
mov
stos
jp
pop
lret
cli
sbbb
lock
xchg
mov
out
xchg
mov
lds
xchg
rclb
push
jns
jg
mov
scas
jbe
mov
in
aad
iret
xlat
mov
cs
push
addr16
in
push
std
test
ljmp
or
cmp
dec
mov
mov
sub
lock
add
ret
pop
roll
mov
inc
sbb
push
scas
pop
push
cmp
out
and
add
mov
pop
out
mov
inc
cmpsb
pop
fmull
xchg
dec
nop
out
aad
pminub
sti
enter
inc
lcall
in
push
push
push
mov
sbb
sahf
dec
cmpsb
xor
sbb
sbb
jne
out
sbb
dec
pop
xchg
or
pop
xlat
pop
push
pop
mov
and
mov
cltd
inc
xchg
shl
xor
fwait
jmp
mov
dec
push
ljmp
cmp
jae
fwait
outsl
push
mov
xlat
fldcw
cli
out
loop
add
ss
outsl
mov
movsl
sub
ja
add
fs
out
sahf
mov
push
add
mov
and
mov
adc
jne
bnd
xlat
lahf
and
jecxz
dec
imul
lahf
push
es
xchg
mov
repz
sahf
dec
xlat
xchg
pop
or
imul
aaa
and
adc
je
icebp
sbb
imul
xchg
fiaddl
sub
pop
cltd
sahf
mov
pusha
add
test
and
xor
fisubrs
jnp
sbb
je
in
xor
leave
nop
adc
lods
pop
test
lahf
push
sbb
daa
sub
imul
dec
clc
jnp
imul
dec
xchg
jno
inc
xchg
xchg
lcall
mov
cmp
adc
mov
fcoms
push
cs
and
es
dec
and
sbb
mov
pop
negl
inc
and
inc
push
insl
test
sub
xchg
lea
or
add
pop
fs
dec
addr16
mov
push
movsb
xchg
pop
hlt
xchg
sub
add
cmc
insl
fs
inc
je
in
shll
fcompl
aas
jns
fcomip
es
enter
pop
mov
cwtl
mov
push
xchg
inc
xor
cmpsl
jge
add
inc
jle
addb
dec
adc
ret
rep
arpl
adc
ja
mov
mov
movsl
and
pop
mov
jmp
add
insl
stos
es
push
fiadds
stos
cmc
or
imul
jns
xor
mov
pop
pop
js
sub
sbb
lds
loop
fmul
pop
dec
jp
and
mov
shl
or
xlat
and
mov
inc
inc
jecxz
lret
inc
jmp
idivl
add
sub
repz
test
jb
dec
push
xor
mov
fisttps
xchg
mov
sti
insb
test
mov
jp
rcll
cmpl
push
inc
je
dec
push
push
jecxz
dec
and
in
iret
mov
mov
in
fdiv
aam
les
dec
sahf
jns
sbbb
mov
jb
mov
cmovnp
adc
mov
pop
sbb
cs
ficompl
in
loope
mov
cmpsl
scas
pop
insl
loope
dec
lods
dec
ds
inc
sbb
mov
inc
shrb
sti
push
add
cmpsb
testl
pop
out
test
sbbl
xor
filds
adc
dec
lea
call
outsl
mov
sub
or
jno
jb
sub
pushf
push
and
sti
icebp
dec
and
mov
mov
xchg
mov
mov
or
cmp
lcall
int
clc
les
jo
inc
add
sub
add
sub
jns
fsubrl
cmp
ja
test
aam
cmpsl
or
mov
leave
outsb
mov
xor
push
push
and
arpl
test
ja
scas
dec
sti
mov
outsb
pop
fcompp
sbbb
cmp
jp
add
in
sub
or
inc
dec
mov
addr16
divl
sub
loop
mov
cmpsl
pop
or
mov
pop
adc
jo
data16
lret
lahf
das
into
ficompl
je
call
ljmp
pop
jne
lds
pop
mov
insb
cltd
and
mov
in
cli
push
xchg
aas
mov
addl
sub
xor
lods
add
mov
and
jae
mov
adc
jge
mov
enter
insb
movl
cmp
ror
mov
pop
xor
cwtl
jbe
inc
pushf
jl
push
push
stc
es
push
ja
push
pop
and
dec
inc
xor
sub
add
arpl
or
cmp
mov
daa
addr16
inc
sbbl
mov
mov
sbb
pop
stos
pop
sub
fcompl
push
testb
jo
lret
lret
pusha
daa
push
popa
and
pop
mov
cmp
xlat
mov
std
sbb
sub
xor
popa
imull
adc
mov
aad
lcall
hlt
ds
mov
aam
andl
cltd
into
add
jbe
dec
stos
push
cmpsl
jo
fistl
cmp
inc
into
inc
into
inc
imul
add
add
xor
mov
fcmove
push
divl
inc
adc
ss
pop
roll
mov
adc
and
insb
xor
mov
or
sti
push
push
cmpsb
adc
rcrb
les
lods
sub
xchg
sbb
xchg
int
push
loope
push
lock
stc
lds
fidivl
pop
push
sub
push
dec
jmp
fistl
xchg
movsb
sbb
inc
aam
cs
pushf
icebp
push
dec
movsl
xchg
gs
mov
cli
dec
mov
icebp
ret
cld
xchg
iret
js
push
sub
jno
in
lcall
pop
push
pop
cmp
cmpsl
inc
call
mov
inc
mov
sbb
testb
inc
sbbl
icebp
aas
sahf
adc
jns
and
sbb
mov
fidivrl
adc
rorb
fsubl
jne
sub
arpl
in
cmp
sub
sbb
jne
movsb
and
jecxz
fcomps
cmp
ret
xchg
aas
into
and
push
sti
xchg
dec
rcr
in
and
pop
cmp
in
js
adc
xchg
fists
xchg
popa
mov
fldt
xchg
xor
dec
adc
pushf
mov
xchg
mov
jbe
dec
sbb
inc
pushl
mov
aad
into
test
hlt
ret
fucomp
push
jo
xor
inc
out
mov
fcmovnbe
push
mov
aas
pop
movl
xor
xchg
imul
xchg
xor
mov
push
out
dec
call
sub
xchg
je
pop
daa
sahf
pop
sub
je
popa
mov
jnp
jbe
add
mov
mov
enter
je
or
pop
insb
xor
out
test
int
fcmove
jmp
push
inc
loop
loope
rorl
mov
out
and
clc
push
movsl
stos
sub
inc
ds
adc
fs
lret
xlat
sbb
sbb
movsb
dec
pop
push
jno
jnp
xchg
xor
pushf
push
stos
sarb
xor
ds
fists
dec
sbb
inc
shr
in
inc
stos
leave
mov
inc
push
inc
out
test
jnp
mov
cmp
mov
or
mov
adc
popa
xor
jge
or
addl
test
cmpsb
pushf
les
mov
lret
es
sbb
test
test
mov
movsl
hlt
adc
jne
icebp
cli
ss
testl
sbb
inc
jae
fs
adc
ret
jae
dec
adc
std
sarb
sub
loopne
xor
pop
gs
mov
lds
add
xor
adc
cli
mov
push
insb
mov
mov
aaa
rclb
decl
mov
pop
jno
jno
outsb
out
sub
inc
sarl
mulb
or
lahf
aaa
xchg
dec
cs
pop
mov
out
iret
lret
dec
xchg
jno
and
and
pop
or
add
and
adc
sub
dec
stc
mov
ja
cmc
ljmp
lea
dec
ds
xchg
xchg
iret
jno
pop
paddd
xor
add
fildl
stc
mov
mov
dec
mov
mov
inc
xchg
jmp
shrb
jne
jp
test
test
or
cli
popf
mov
mov
ds
lods
xchg
es
jmp
and
pop
jno
nopl
adcb
sub
xor
rolb
adc
test
imul
stos
push
add
mov
pop
mov
sub
arpl
push
out
popf
sbb
movl
sahf
cmpsl
mov
dec
pop
push
and
mov
nop
test
push
ss
fbstp
out
inc
xor
dec
je
inc
ljmp
push
adc
loopne
and
push
shrl
aam
and
bound
add
dec
lcall
adc
cmp
jg
lahf
pop
stos
sahf
push
shlb
mov
dec
scas
adc
dec
pop
popa
jl
adc
dec
push
fmuls
inc
mov
out
pop
lcall
es
push
bnd
in
ljmp
inc
lret
cwtl
jecxz
in
xchg
mov
xchg
cmp
out
pop
in
adc
cmc
mov
pop
jo
inc
sbb
jmp
orb
data16
ss
js
in
cmp
out
pop
mov
mov
cmp
and
and
push
mov
inc
sti
adc
ret
and
cs
sub
and
ss
add
and
enter
mov
nop
adc
aam
sbb
std
mov
test
mov
fisubrl
add
mov
inc
dec
out
addb
rorl
mov
sti
mov
lcall
inc
dec
pushf
clc
decb
outsb
pop
jbe
cld
int3
int3
outsb
pusha
leave
or
popa
out
cmc
push
xor
fwait
mov
jge
fdivrl
shlb
cmpl
cmp
aaa
out
mov
outsl
push
stos
pop
test
jmp
outsb
shlb
pop
fisubs
inc
sub
mov
out
dec
fcmovnu
mov
sub
iret
sub
push
in
ljmp
jno
mov
pop
xchg
add
xor
ss
push
dec
push
sub
popf
xor
imul
insb
pop
andb
jmp
bound
mov
cmc
dec
je
sub
mov
push
mov
call
inc
add
rol
mov
xor
insl
push
and
bound
pop
stos
jno
sub
fcomp
sbb
dec
and
push
mov
enter
push
pop
out
inc
or
adc
jns
mov
mov
arpl
test
add
mov
or
lock
sarb
and
and
add
lods
sub
sbb
push
inc
jno
hlt
data16
shl
arpl
outsl
push
adc
pop
pop
fmuls
aad
insl
sbb
mov
andb
mov
push
mov
loop
xchg
xor
mov
outsb
out
sbb
pop
stc
imul
pop
enter
xor
test
mov
sbbb
cmpsl
lret
scas
mov
out
mov
or
pop
or
sarl
pop
cmpsb
fidivrs
xchg
mov
stc
in
movsb
outsb
sub
imul
lods
inc
and
sub
call
lods
mov
lahf
movsb
imul
or
cmp
ret
shrl
bound
out
inc
popa
icebp
ss
pop
and
movsb
sub
push
mov
mulb
or
call
aas
decb
dec
add
fidivl
sub
shl
push
push
inc
rol
add
fdivrs
or
xchg
adc
cwtl
cwtl
sbb
test
dec
jecxz
jnp
or
cmpsl
pop
aam
popl
stos
pop
cmp
push
or
pop
jne
loopne
fdivrs
add
repnz
popa
mov
push
jnp
jb
add
popf
mov
mov
test
xchg
aam
stos
shrl
jle
test
into
adc
je
mov
mov
lods
movsl
jmp
sub
and
mov
pop
xchg
or
adc
adcl
les
aaa
fwait
int3
in
xor
mov
idivb
xchg
stc
fdivrs
lods
mov
inc
mov
popa
dec
sti
aaa
les
sub
fisttpll
lds
cld
lret
add
sbbb
mov
movsl
shl
add
cmc
push
sub
or
xor
xchg
scas
lods
std
jecxz
pop
rcrb
outsl
jmp
jbe
js
stc
mov
lea
in
mov
cld
inc
outsb
shrb
lcall
push
dec
ficomps
aas
rcrl
dec
and
addr16
cmc
sub
lcall
aad
test
shlb
mov
or
rcrb
js
into
xor
fiadds
add
xor
daa
push
int
repz
sbb
xchg
sbb
sbb
cmpsb
mov
mov
inc
sub
and
pop
pop
pop
enter
fimuls
nop
pmaddwd
xchg
jg
call
mov
jo
int
push
push
jae
mov
int
mov
invd
sahf
addr16
add
aas
and
les
nop
int
inc
fs
sbb
lds
cmp
mov
add
lods
hlt
dec
addr16
gs
aam
cli
dec
into
lods
imul
mov
push
ljmp
ret
divb
push
mov
push
scas
shlb
sbb
sarb
lea
xchg
or
das
sub
xor
sub
ss
sub
push
iret
xor
mov
dec
and
add
xchg
mov
daa
mov
jae
into
leave
adc
mov
mov
leave
pop
xlat
xchg
sub
popf
sbbl
xchg
pop
ds
xchg
arpl
and
dec
inc
addr16
out
mov
out
dec
mov
aam
mov
fstps
jns
dec
enter
xor
dec
aad
mov
dec
lods
mov
or
jmp
mov
sbb
mov
dec
nop
mov
sub
cld
mov
shlb
les
inc
ljmp
mov
dec
jmp
sbb
inc
cmpsb
xor
mov
stos
imul
sarl
repz
lods
sahf
adc
mov
fisubs
or
aaa
push
xchg
adc
pop
mov
pop
insb
pop
in
jg
out
pusha
pop
add
mov
sub
movsb
sbb
fidivs
mov
mov
sub
test
xchg
jg
pop
jmp
rorl
push
scas
adc
hlt
lahf
icebp
lds
out
push
xlat
shrb
pop
sbb
out
das
sarl
out
ficomps
jb
lahf
rorl
pop
rolb
lods
xchg
add
mov
lds
push
cwtl
out
sbb
pop
jge
sti
inc
push
jno
stos
pop
xchg
hlt
daa
out
movsl
repz
jl
pop
loope
arpl
int3
cmp
jmp
jb
adc
cmp
cs
dec
movsb
xor
and
push
sub
pop
inc
add
push
cmp
movsl
and
xchg
push
inc
dec
insl
imul
lahf
lret
push
fcmovbe
sub
cmp
pop
lret
inc
dec
iret
int3
cmpsb
xlat
sarl
push
nop
add
xor
push
out
test
fiaddl
leave
xchg
test
sub
jo
outsl
add
fnstcw
jecxz
cmpsb
clc
push
pop
decl
ljmp
adc
jae
mov
pushf
mov
sbb
xchg
arpl
popa
insb
mov
loop
fdivr
mov
xchg
cmp
sub
sub
mov
fimuls
sub
cmpsb
idivl
sti
jmp
mov
ljmp
lds
sarb
pop
mov
inc
dec
push
dec
bound
movq
hlt
sub
jb
scas
inc
sub
push
into
push
pop
repnz
cmp
push
dec
aas
pop
les
jno
push
lock
imul
dec
xchg
xlat
pop
push
mov
cli
loopne
dec
mov
loope
mov
ja
imulb
fs
sub
pop
dec
arpl
divl
pop
dec
lahf
out
jg
stos
and
push
mov
mov
pop
jne
or
mov
outsl
xchg
popa
int3
cwtl
scas
dec
loop
jle
popa
mov
aaa
pop
ja
jno
or
pop
mov
inc
fsubl
mov
sub
fists
js
outsb
sahf
popa
jge
ds
arpl
mov
mov
cs
xor
std
sbb
pop
fmull
leave
out
mov
jns
out
cmp
nop
call
shrb
mov
mov
dec
pusha
xchg
xor
test
fdivl
cmpsl
sbb
adc
push
jle
push
pop
xor
mov
cmp
xchg
gs
imul
mov
and
pushl
aas
xchg
sbb
stos
mov
pop
inc
je
add
cld
mov
fs
cmpsl
cli
ds
insl
inc
movsb
and
aad
xchg
enter
mov
test
pop
mov
pop
pop
push
cwtl
adc
test
or
jne
lea
fsubrs
pop
mov
mov
and
aas
lret
sbb
dec
pop
jb
loop
inc
test
cmp
fidivl
and
adc
aaa
ds
fldcw
movsl
dec
mov
push
or
mov
push
push
jae
mov
add
negl
lcall
stos
jle
jle
xchg
bound
xchg
pop
lods
nop
mov
rorl
jo
outsb
movsb
rol
cli
push
shll
push
add
jmp
sahf
jl
loopne
icebp
mov
dec
loopne
inc
fnstenv
sub
ret
loope
cmp
nop
stc
dec
jnp
out
or
jg
cmpl
or
imul
clc
mov
movsb
and
adc
push
scas
pop
inc
xchg
pop
icebp
mulb
fidivl
ret
mov
cmp
rclb
scas
in
stc
scas
adc
xor
outsb
in
adc
inc
add
add
popf
fwait
mov
scas
in
popf
add
iret
test
mov
rcrb
xor
push
mov
mov
sbb
mov
call
jb
add
mov
sahf
fnstenv
or
fsubl
mov
xchg
inc
jne
outsb
push
jge
imul
int3
out
mov
push
push
mov
lahf
mov
cmp
ljmp
sbb
jns
shl
lea
shr
movsl
shrb
int
sub
pusha
push
shlb
and
cmp
jnp
lea
and
and
out
add
addr16
fwait
mov
jb
bound
add
js
or
out
scas
cmpsb
test
outsl
push
cmp
lods
cmp
mov
push
lods
jmp
lcall
sub
mov
pop
daa
insl
ja
sub
in
rorb
jmp
cmp
cmpsl
and
adc
jae
movl
imul
push
cmp
push
fsub
call
loop
lcall
aas
mov
dec
out
cwtl
mov
and
popa
call
scas
sbb
mov
inc
fdivr
xchg
push
push
orb
fmul
add
jns
fldcw
loope
orb
push
xor
xor
sub
inc
mov
jnp
sbb
cmc
push
push
lods
imul
out
enter
popf
lahf
push
mov
inc
xor
cmp
test
les
adcl
mov
xchg
inc
jmp
fsubs
and
push
arpl
fwait
insl
lret
cli
jmp
cltd
lret
dec
jns
cltd
cmpxchg
bound
ds
push
mov
sbb
addr16
or
in
xor
dec
nop
int3
cmp
out
xchg
cmpsb
sbb
mov
rcrb
dec
or
into
and
stos
arpl
dec
mov
xchg
jg
fldcw
mov
push
or
aas
and
fnstcw
xchg
ljmp
fildl
dec
mov
cltd
dec
hlt
lahf
mov
cmpsb
fnstsw
push
sbb
inc
cli
scas
push
fists
popa
loope
jne
sbb
pop
pop
or
out
fnstcw
rorl
mov
je
push
imul
jb
fimull
xchg
push
mov
out
in
repz
jecxz
xchg
mov
stc
lea
sbb
xchg
fidivs
or
cmc
jns
int3
std
ja
jp
xor
sbb
lods
pop
xor
icebp
les
push
repnz
lds
mov
mov
push
adc
mov
jb
es
inc
cmp
fildll
gs
int
mov
loope
cli
xor
stos
pop
mov
adc
popa
cmp
loop
sbb
mov
inc
fidivs
adc
and
mov
xor
mov
int3
and
xchg
fsubl
aam
mov
out
pop
mov
insl
adc
insb
or
jmp
mov
cmpb
div
xlat
mov
int3
in
mov
add
or
mov
mov
cmpsb
test
pop
mov
fstpt
cld
xor
jle
and
fdivrs
fwait
add
lret
jne
or
aam
pop
out
mov
jae
lret
or
push
push
mulb
xchg
insb
sbb
les
cmc
mov
iret
iret
mov
fildll
inc
dec
mov
mov
add
mov
aas
cmp
fdivrl
mov
xor
fistps
pushf
mov
jb
cmp
pusha
les
cli
dec
xor
jb
and
add
mov
aad
push
fs
xchg
jg
imul
and
mov
and
add
out
movsb
dec
inc
pop
jnp
cmp
mov
push
pop
in
and
jg
je
lods
in
mov
inc
fwait
cs
rcrb
pop
dec
jle
test
ds
out
xor
pop
les
pop
test
pop
add
push
and
jnp
sub
out
dec
mov
inc
popa
in
xorl
cltd
je
movsb
adc
jp
dec
sub
aaa
out
mov
lahf
xor
fwait
aaa
pop
sub
mov
adc
aam
sahf
shl
add
mov
je
lods
clc
dec
mov
and
leave
fcmovnu
sub
ja
push
loope,pn
movsl
sbb
sub
fstpt
cltd
push
int3
idivw
jbe
or
pop
xchg
jns
add
cmp
lock
pop
das
pop
in
mov
adc
cltd
cmp
notl
sub
xchg
jecxz
mov
lret
sbb
scas
out
lods
mov
jp
ret
fcoms
sbb
imul
test
adc
int
push
aaa
mov
pop
push
sbb
xchg
js
pop
ret
es
mov
cmpsl
arpl
loope
repnz
popa
dec
mov
add
gs
jle
int
push
imul
loop
mov
roll
test
mov
jbe
subb
adc
xchg
test
pop
pushl
movsb
push
adc
push
pop
hlt
xchg
adc
dec
mov
or
js
fnstcw
cmp
and
cld
insb
clc
mov
adc
mov
test
pusha
outsl
cmpsl
jbe
push
popf
popa
scas
adc
out
mov
fsubrs
std
out
dec
add
int3
lock
cmp
sub
mov
pop
pop
iret
push
xchg
adc
jg
push
dec
ret
cwtl
pop
rolb
adc
shll
ds
add
and
cli
dec
sub
or
in
xorb
mov
sbb
out
rcr
loope
cmpsb
aam
mov
mov
sub
sub
adc
pop
shlb
daa
mov
push
cmp
lret
push
xor
icebp
xchg
loop
cmp
sbb
ret
adc
sti
mov
ret
js
add
xchg
sub
push
sarb
mov
mov
ds
icebp
pop
es
incl
in
bound
xchg
dec
aam
add
mov
pop
dec
lea
jp
or
mov
sbb
adc
sub
scas
xlat
sar
rcrb
cld
cmpsl
mov
xor
sbb
xchg
or
data16
pop
fnstenv
decl
insb
sbb
lods
or
and
mov
aam
testl
pop
ret
inc
stos
add
int
es
inc
hlt
fmull
mov
jecxz
insb
push
xchg
jmp
push
xlat
popf
mov
cld
scas
sbb
fisubrl
js
sbb
lret
push
push
xchg
cs
cmp
scas
pop
mov
mov
outsl
out
nop
inc
add
clc
adc
dec
xchg
dec
test
pop
sbb
dec
scas
or
mov
jns
adc
inc
jae
sbb
or
arpl
ss
mov
jo
movsl
pop
add
nop
pop
sbb
int
and
lock
out
leave
jnp
push
nop
aas
and
ds
lds
push
xchg
or
test
mov
stos
jns
loopne
and
aad
or
add
stc
pop
repz
shrl
popf
jnp
pop
jp
and
add
dec
cmp
call
push
lahf
jp
pushf
bound
test
aad
jge
int
ror
or
fmuls
nop
aam
cli
stc
push
sbb
sbb
paddd
lret
push
jge
out
fcoms
dec
fistpll
mov
add
pop
mov
push
arpl
sahf
insb
hlt
stos
adc
inc
out
jmp
xor
add
xor
xor
neg
dec
mov
add
mov
add
adc
pop
jno
adc
push
test
xchg
fmull
adc
sbb
aam
inc
aad
xor
test
addl
and
sbb
mov
push
outsb
mov
xchg
jp
in
cs
pop
inc
loop
jp
or
lea
xchg
int3
xchg
rol
aam
fs
sub
dec
and
mov
sbb
fcompl
mov
test
xor
dec
and
das
mov
nop
cltd
scas
es
jb
fs
js
repz
roll
dec
popfw
dec
xor
icebp
add
enter
mov
mov
add
aam
mov
loop
inc
or
pop
jae
xor
aad
mov
or
rorb
xchg
scas
movsb
icebp
sub
stos
mov
push
mov
aaa
cmp
sarl
fists
inc
enter
ror
or
daa
adc
jb
mov
mov
sub
mov
and
or
mov
imul
mov
fcmovne
xchg
push
add
add
lahf
ja
test
xor
xchg
shrl
ds
sbb
cli
or
mov
dec
xchg
es
vpsubusb
cs
hlt
ret
xor
xchg
mul
dec
mov
inc
adc
pop
or
dec
orl
push
out
lret
ret
mov
mov
dec
test
jbe
out
xor
outsb
sbb
out
je
dec
adc
nop
sub
aas
insl
pop
jb
push
mov
dec
cmp
mov
cmpsb
adc
push
loope
push
sti
mov
inc
sahf
or
pop
pop
js
xor
call
call
loop
xchg
push
dec
jbe
or
in
push
sub
dec
pop
push
inc
xchg
movsb
dec
orb
xchg
call
pop
cltd
cwtl
mov
adc
pushf
or
clc
in
mov
sbb
push
clc
push
cltd
xchg
xchg
xchg
mov
cmp
inc
mov
out
fldl
je
jg
into
iret
push
int3
or
call
cmpsb
jge
imul
mov
pop
pushf
js
dec
push
les
fiaddl
mov
mov
iret
sub
aas
push
mov
jb
test
xlat
sti
loopne
gs
lret
test
imull
cmp
gs
add
jmp
pop
addl
add
aad
aas
sub
gs
aam
push
cwtl
mov
popa
notb
bound
cvtdq2ps
push
rcr
idiv
jp
sti
popf
jecxz
repnz
add
xchg
add
mov
push
push
mov
inc
ljmp
dec
rorl
xor
je
xchg
push
xchg
loopne
scas
pusha
fnstcw
clc
out
jae
dec
incl
je
out
mov
arpl
js
inc
lahf
mov
ret
mov
leave
xchg
jae
pop
addr16
mov
push
mov
je
into
enter
sbb
faddp
rcrb
ficompl
sar
inc
imul
sub
fistpll
test
sbb
popf
movsb
cmp
aaa
sub
mov
mov
movsl
mov
fsubp
pcmpeqw
sub
dec
call
sarl
ljmp
test
xchg
add
pusha
int
shlb
mov
xchg
test
xorl
or
insb
add
insb
pop
das
add
cmpsb
insb
jo
xlat
aas
dec
mov
not
sbb
adc
lahf
call
pop
and
xchg
sbb
sbb
sub
popf
adc
dec
inc
xchg
inc
mov
sbb
mov
inc
stos
out
dec
out
je
ja
pop
ljmp
xchg
ret
jmp
jmp
call
pop
add
test
or
jnp
add
inc
mov
cltd
inc
das
pop
es
cs
xor
cmpsl
loop
daa
mov
or
pop
push
adc
mov
xor
scas
fsubp
sbb
decb
dec
jae
arpl
pop
fs
fmull
lds
loope
out
push
sbb
push
cli
in
jo
mov
xchg
ds
pop
jno
dec
sub
jp
jns
ljmp
int
fisubs
jb
adc
mov
addr16
clc
daa
and
nop
add
inc
sbb
aas
imul
sbb
rcrl
adc
mov
jg
test
mov
sub
pop
stos
mov
inc
and
stc
in
sub
repnz
in
test
fisttps
movsb
push
andl
xor
or
les
or
jmp
xchg
mov
mov
xor
les
push
pop
mov
inc
jns
iret
cmc
es
or
aad
or
stc
xor
jmp
stos
mov
dec
andl
xchg
in
mov
popf
ja
repnz
cmp
cmp
cmpsb
aam
pop
ljmp
out
jne
rcll
insb
dec
mov
jl
in
jbe
out
and
push
sbb
mov
jge
jle
bound
mov
mov
xorb
fstl
gs
sbb
cmc
push
rcr
and
mov
push
cmp
test
inc
inc
aaa
sahf
dec
and
jbe
int3
aaa
mov
mov
stos
pop
mov
adc
pop
mov
dec
ja
dec
out
mulps
adc
push
nop
dec
fcomp
pusha
lods
sub
jns
add
in
add
add
sub
sti
or
lahf
movsb
xchg
pop
lret
sub
sahf
stos
push
dec
imul
cmp
out
popf
aaa
jb
cmp
lret
sbb
and
inc
sbb
lret
xchg
sub
cmp
pop
push
scas
in
hlt
outsb
gs
push
push
stos
and
jae
xchg
pop
repnz
movsb
aaa
subb
mov
dec
cmp
xor
repnz
add
cli
sbb
pop
scas
bt
adc
daa
je
xchg
jne
out
shl
dec
imul
stc
femms
and
int
imul
hlt
and
ficompl
pop
ja
mov
test
adc
lock
push
cmpsl
inc
les
clc
mov
addr16
or
inc
push
cmp
in
cmpsl
jge
mov
cwtl
add
inc
push
in
xor
pop
cmp
mov
push
sbb
xchg
adc
jge
in
imul
ljmp
adc
out
movsb
cmp
push
mov
loopne
movsb
mov
imul
push
adc
in
test
dec
cmp
mov
bound
mov
repz
ljmp
add
push
and
movl
arpl
movsl
movsl
mov
and
mov
xchg
and
mov
mov
ret
sbb
adc
pop
fadd
add
push
pop
and
es
xchg
push
fsts
aad
mov
xchg
cmp
mov
outsb
mulb
mov
mov
inc
loope
mov
and
cmpsl
mov
mov
adc
stos
xor
pop
and
or
daa
mov
mov
lock
aam
orb
dec
mov
xor
sahf
jo
pop
jge
lods
and
ljmp
jo
outsb
filds
mov
call
dec
sbb
jo
add
cmp
aad
out
add
pop
jns
push
pop
jne
jl
sbb
push
loop
pop
mov
jns
pop
jne
sbbl
jb
jbe
push
iret
push
pop
fucomp
xor
xlat
fs
aas
fists
test
jmp
jecxz
sbb
mov
and
ljmp
pop
dec
aam
adc
mov
mov
stos
add
mov
fwait
dec
or
out
cltd
push
inc
aam
adc
mov
dec
mov
arpl
fistl
dec
out
mov
pop
les
mov
xchg
lahf
sub
inc
aam
xchg
lahf
xchg
sub
pop
jmp
mov
xchg
adc
stc
add
orb
mov
lahf
loope
mov
push
ret
shll
inc
fcmovbe
cmp
mov
repz
ljmp
fists
lods
add
push
pop
sub
sub
stc
or
aam
push
iret
or
cmp
xchg
add
int
lds
repz
pop
pop
xchg
enter
ds
lret
jnp
jns
sahf
int
sub
and
xchg
mov
jl
nop
push
cwtl
imul
add
ljmp
out
jnp
inc
sub
xchg
add
in
stos
push
cld
jb
rcrl
sbb
dec
mov
fs
sub
outsb
pop
jp
xlat
mov
inc
call
in
in
mov
adc
xchg
adc
cs
lds
or
popa
dec
test
pop
js
push
outsl
leave
icebp
mov
in
lcall
fs
cmovo
jl
aaa
jecxz
mov
rcrb
adc
shll
push
leave
or
or
sbbl
adc
push
arpl
pop
orl
ret
es
idivl
dec
ret
sti
cmp
arpl
int3
pop
jae
jnp
mov
outsl
mov
push
jg
sbb
mov
xor
movsb
in
sbb
pop
xchg
xor
out
xchg
insl
and
stos
popa
or
dec
or
sbb
stc
xchg
xchg
xor
mov
sub
aaa
xchg
pop
mov
adc
repz
mov
aas
cmp
lea
dec
ds
xchg
mov
cltd
adc
adc
mov
or
xchg
adcl
or
add
lahf
fadds
hlt
jnp
inc
adc
lea
in
sub
adc
out
in
rcrl
fldt
repnz
in
mov
mov
lret
sbb
cmp
jmp
pop
cmpsl
lahf
je
push
sbb
lahf
scas
push
lods
and
lea
inc
push
lods
cli
xlat
xlat
jp
gs
and
jno
aad
fcmovu
dec
dec
sub
sbb
lea
jnp
sti
outsl
mov
xor
sub
add
dec
pop
push
and
out
jb
popl
fsubr
imulb
inc
mov
pusha
adc
movsb
and
sti
mov
xchg
xor
js
ss
lcall
push
int3
ret
jmp
push
mov
rolb
fimuls
cli
jp
clc
fidivrs
sub
mov
dec
cwtl
inc
mov
mov
in
push
mov
popa
imul
mov
js
rolb
jg
mov
notl
add
sub
sub
xchg
dec
xlat
outsl
in
adc
int3
iret
inc
notl
push
mov
push
sub
and
jp
mov
notl
mov
pop
sti
dec
scas
int3
je
jb
insb
test
and
pop
out
add
dec
imul
sbb
mull
scas
enter
lcall
mov
stos
sbb
inc
stos
std
popa
lret
pusha
flds
fs
pop
jae
mov
sarb
sub
xchg
push
sahf
aas
add
or
sti
adc
xor
inc
sub
je
xchg
pop
jns
mov
or
and
mov
xor
rcrb
lahf
dec
addr16
inc
stos
es
cmp
icebp
dec
cmc
xchg
test
adc
cmp
push
adc
test
sub
ds
scas
lds
dec
dec
mov
test
sbb
dec
mov
rolb
mov
ficoml
je
hlt
shrl
lahf
or
push
inc
cmp
push
mov
mov
mov
test
lods
push
jbe
sahf
pushf
shll
gs
cmp
sub
pop
push
lock
adc
sub
mov
xchg
mov
pop
sub
inc
es
add
adc
xchg
les
fscale
movsl
lahf
mov
adc
push
jns
sub
fildll
dec
addr16
jne
iret
xchg
sbb
stos
fwait
cmc
adc
es
ljmp
scas
pop
sahf
mov
mov
rcl
dec
and
add
jne
fstpt
aas
lcall
inc
dec
je
push
lcall
jo
and
sbb
pusha
ret
cmp
and
mov
fdiv
cmp
iret
stos
lcall
fisttpl
out
mov
push
out
sar
pop
test
test
stos
pop
andb
jnp
pop
add
rcrb
push
fidivl
scas
popf
out
xchg
loopne
inc
sbbl
cli
repnz
and
push
and
mov
inc
cmpb
push
sarb
fidivl
inc
sub
mov
cmpsl
jle
or
out
das
and
mov
dec
sbb
in
je
pushf
cmp
imul
add
and
add
adc
xor
loop
xor
xchg
adc
pusha
cld
inc
or
int3
mov
xchg
jg
popa
ds
xor
les
dec
test
mov
dec
dec
andl
push
add
or
and
dec
popa
inc
enter
xor
or
cmc
sub
stc
js
in
jle
lret
or
cmp
pop
cmp
sub
pusha
pop
rclb
lds
sub
cmpsl
loop
ljmp
mov
pop
int3
in
dec
mov
xchg
xor
add
xor
push
imul
ret
mov
pop
dec
push
pop
jns
sub
sbb
or
adc
sbb
cmp
jmp
sub
sbb
mov
add
jmp
repnz
cwtl
push
loop
mov
sub
leave
jmp
and
fcomps
movsb
repz
ret
dec
jnp
rcll
repnz
pusha
rep
clc
xor
xlat
sub
test
and
rep
mov
push
jbe
lods
test
inc
cmpsb
cmp
push
inc
fstl
idivb
fstpl
push
ret
dec
and
push
inc
sbb
stos
shlb
push
adc
bound
mov
dec
mov
cwtl
insl
cmp
shlb
ret
in
dec
rorb
es
xchg
test
sub
movsb
jp
pop
pop
data16
adc
cld
mov
mov
repnz
adc
sbb
dec
push
testl
int
add
inc
insl
das
jmp
test
dec
mov
adc
pop
std
pushf
repnz
adc
cmp
push
gs
xchg
pop
and
inc
shr
insl
mov
icebp
push
sbb
mov
mov
std
mov
jecxz
js
pop
aad
jg
mov
mov
repnz
xlat
xchg
insl
jmp
cmp
nop
or
push
push
mov
cmpl
or
imulb
or
mov
inc
push
add
lret
les
int
nop
jg
inc
in
sub
inc
aad
cmp
in
sbb
and
xchg
sub
icebp
jo
inc
push
push
adcl
jb
fwait
cltd
jl
jb
xor
mov
xchg
xor
das
lea
or
lahf
and
in
repnz
icebp
mov
mov
fbld
pop
in
sahf
jb
add
pop
jmp
sub
adcl
xchg
popf
mov
shr
lret
or
lea
dec
pop
and
aad
aad
sbb
xor
lcall
xchg
idivb
test
xchg
mov
scas
xchg
mov
jp
mov
aam
frstor
lds
loop
cmp
jge
cld
pop
loopne
dec
jns
dec
icebp
sub
aaa
loop
js
pop
ljmp
aas
imul
xlat
jb
dec
nop
cmp
shlb
popa
adcl
sbb
test
lods
or
xchg
push
adc
test
test
outsb
jp
sbb
mov
aad
mov
pop
lahf
outsb
pop
jb
pop
movsb
mov
xchg
repz
mov
cmpsb
or
xor
es
fs
aam
aas
pop
mov
je
daa
or
dec
lcall
mov
movsl
mov
mov
cmp
mov
popf
ficoml
fidivs
into
or
cltd
cltd
mov
stos
aaa
xchg
mov
outsl
sbb
rcrl
sub
push
dec
cmpsb
repz
xor
or
inc
push
inc
rcrl
push
loopne
mov
jno
ss
fwait
call
mov
in
xor
imul
dec
push
mov
inc
in
pop
mov
loopne
or
arpl
ror
push
movaps
dec
or
pop
pop
fwait
mov
int
popa
xchg
cmp
mov
cmc
pushf
sbb
rclb
cwtl
out
and
pop
hlt
pop
xor
jae
stos
mov
cmpsb
inc
mov
testl
push
xlat
pop
lock
outsb
fwait
repnz
call
loop
icebp
stc
jbe
jae
enter
push
or
lods
divb
mov
fiaddl
dec
push
cmp
mov
dec
ljmp
or
rolb
ss
inc
lock
jecxz
cltd
pop
sti
xor
push
mov
mov
adc
loope
sub
bnd
inc
mov
cmp
psubb
nop
push
push
imul
mov
mov
mov
push
cmp
dec
jno
or
sti
int3
inc
pop
sub
xor
cli
in
jbe
popf
aam
testb
xchg
jbe
push
sahf
push
xchg
adcl
adc
arpl
inc
adc
cmp
adc
sbb
mov
jno
push
mov
addb
daa
push
test
je
loop
xlat
iret
xchg
xor
pop
lods
addl
cmpsb
push
outsb
cmpb
pop
bndldx
call
pop
test
add
sti
sub
popf
lods
sbb
mov
fisubrl
daa
cmp
cmp
iret
in
sub
stc
mov
inc
sbb
fcomps
insl
notb
out
xor
xor
sbb
pop
enter
sbb
cmpsl
shlb
sbb
rcrl
sbb
in
hlt
rcr
lea
loop
mov
cltd
idivb
cmp
sbb
stc
cmp
inc
adc
outsb
mov
adc
mov
aad
iret
sahf
stos
mov
aas
test
mov
inc
dec
jo
fs
dec
inc
pop
jnp
pop
stc
mov
sahf
mov
out
test
outsl
fcomps
popa
out
out
adc
rcl
jae
mov
add
les
pop
pop
fdivr
loopne
jne
xchg
pushf
inc
push
stc
or
sub
gs
shl
mov
imul
lods
mov
xchg
push
sub
stos
mov
out
scas
xchg
movsl
mov
roll
push
cmpsb
scas
jmp
adc
and
nop
movsl
les
cmp
inc
cmp
or
pop
movsb
xor
and
pop
pop
push
stos
arpl
sub
push
aam
iret
jbe
scas
addr16
mov
enter
jo
not
negb
mov
or
push
out
imul
dec
addb
add
sbb
adc
jns
sti
pop
lret
or
cmp
pop
stc
add
adc
test
jmp
es
stos
mov
inc
jnp
inc
ficomps
or
pop
pusha
insl
or
xlat
lret
xor
ficoms
scas
inc
mov
aas
jge
ret
mov
lods
mov
xchg
inc
jp
vmread
jle
cwtl
mov
sub
into
mov
mov
pop
xlat
dec
inc
sbb
xchg
js
fists
sbb
dec
jg
jne
push
push
outsl
xchg
and
lret
enter
inc
jg
cmp
fucompp
lret
jo
jp
stos
adc
cmpsb
jl
roll
imul
jle
ds
ja
mov
insl
xor
insb
push
and
ffreep
inc
int3
mov
ljmp
xor
push
sbb
nop
out
xor
cmp
pop
dec
push
inc
jl
sahf
fnstcw
cmp
fstl
aam
aas
cmp
cmpsb
push
sbb
les
iret
cmpsb
pop
dec
and
xchg
adc
pop
xor
mov
inc
nop
fnsave
int
loope
negl
push
ret
push
dec
adc
xchg
insb
xlat
add
test
lds
cmc
cld
mov
fnstsw
fldcw
inc
mov
push
cs
mov
pop
js
sbb
ja
flds
fildl
out
xor
jmp
in
xor
inc
sbb
pop
mov
lods
call
cld
dec
pop
insl
pusha
mov
lret
mov
in
cmp
sti
pop
lods
inc
and
aaa
negl
sahf
fildll
and
sub
out
mov
cmp
inc
jae
mov
cltd
lret
fwait
mov
jge
and
insl
jne
mov
gs
pop
fistpll
nop
and
bound
enter
jl
mov
jmp
test
push
dec
inc
test
fsubrl
push
int3
fistpll
ss
leave
ret
mov
sbb
imul
mov
inc
cli
aas
out
mov
mov
fs
loope
jg
loopne
adc
repnz
jo
add
lds
test
fadds
dec
xchg
xor
jg
cli
mov
ss
and
pop
pop
stc
dec
adcl
jne
aad
cs
popf
js
xchg
lods
cmp
sahf
imul
cld
cmp
ds
adcb
addr16
mov
mov
jle
fists
sub
sahf
pop
insl
shl
mov
lock
mov
adc
test
dec
and
xchg
bound
sahf
push
and
mov
sub
cmp
pop
test
icebp
daa
sub
loop
mov
fldt
gs
pop
arpl
pop
mov
fsubs
loopne
or
lods
ss
insl
shlb
or
pop
sub
add
js
add
inc
jo
scas
lods
mov
push
xor
pop
xor
ss
inc
pop
jo
stos
mov
rcrl
es
inc
adc
repz
mov
xchg
xor
out
test
cmc
add
andb
pusha
movl
dec
imul
bound
xor
jp
nop
test
jmp
pop
cs
shrb
scas
jnp
push
lock
and
fisttpll
pop
fcoms
mov
add
je
xor
imul
shrb
shlb
pop
dec
fistpl
lock
mov
ds
xchg
jecxz
mov
adc
push
push
js
push
add
pop
bound
gs
pop
dec
add
les
inc
and
dec
stos
insb
into
cltd
pop
cli
xchg
push
xor
mov
sbb
dec
push
jnp
dec
cmpsb
adc
sbb
sbb
imul
lea
push
minps
push
xchg
cmpsb
out
or
inc
rol
icebp
das
jle
ficompl
inc
sbb
push
arpl
cmp
jg
sahf
ljmp
push
orl
or
and
clc
xchg
and
xchg
cmp
xchg
in
dec
neg
js
xchg
aad
cmp
je
xchg
scas
adc
xchg
push
outsl
xchg
dec
or
jbe
notb
mov
mov
add
loop
neg
xor
mov
scas
fisubrs
in
or
lahf
psrad
pop
sti
lret
aad
insb
cs
aaa
and
fsubrp
mov
out
pop
pop
in
fnstcw
add
cmp
mov
mov
adc
mov
xchg
jge
mov
adc
mov
cmp
aam
mov
or
notb
ss
sbbb
loop
testb
pop
leave
frstor
xchg
das
mov
mov
pop
inc
movsl
in
imul
jmp
cld
ret
fisubs
cmp
and
loop
cli
fcmovnbe
cmp
cmp
inc
xchg
fimull
adc
jae
sbbb
addr16
fnstenv
testb
gs
pop
xchg
jae
xchg
add
xor
shlb
push
mov
inc
loopne
mov
mov
imul
pop
iret
xchg
icebp
rcrb
loope
ret
out
and
ja
lcall
xlat
faddp
icebp
sbb
lahf
popf
or
test
pushf
jb
popa
movsb
and
xchg
insl
pop
fsubrs
jmp
or
and
mov
adc
call
ds
out
fwait
es
jb
inc
cmovl
fistpl
dec
xlat
pop
out
inc
lods
xor
dec
lds
insb
adc
mov
sarb
lock
cmp
inc
push
mov
lock
movsl
call
push
test
mov
xchg
push
mov
pop
les
xchg
sbb
adc
mov
leave
adc
jnp
xor
jnp
xchg
add
bound
lods
fwait
mov
stc
movl
orl
add
fldcw
xchg
xchg
test
mov
pop
sbb
sbb
inc
pop
push
fucom
pop
and
ret
test
mov
jb
stc
xchg
aad
and
inc
mov
xor
push
popa
xor
pop
ss
pushf
push
shl
push
jmp
pop
rcl
jbe
inc
shl
fucomi
arpl
dec
sbb
adc
movsl
fildll
repz
fs
lret
mov
insb
push
clc
inc
add
rcll
or
cmp
jp
test
pop
inc
das
add
mov
notl
call
pop
in
test
outsb
loopne
sbb
mov
out
mov
repnz
add
scas
int3
sub
mov
xchg
mov
xchg
cmc
lods
or
pop
add
or
mov
sub
test
ljmp
sub
les
lret
ret
xchg
cmp
stos
xchg
pop
xor
cli
mov
mov
inc
dec
jp
mov
popa
insb
jb
xor
fcompl
push
add
test
jne
enter
mov
adc
and
dec
cmp
pusha
sub
mov
cmpsl
addr16
xlat
fcompl
fildll
fld
test
js
jno
sti
lock
jae
movsb
shl
mov
test
and
addl
shr
adc
pushf
mov
and
pop
mov
aam
popf
mov
shl
inc
js
cltd
cwtd
and
cmp
jp
mov
ficomps
fisttpll
scas
push
push
jnp
add
test
insl
outsb
fmuls
jle
pop
pop
shrl
inc
mov
and
and
imul
fdivrl
imul
xchg
lret
sbb
lds
push
mov
xor
sbb
imul
push
add
sarb
jge
fsubrs
xchg
pop
xor
jg
nop
shlb
and
sti
mov
jb
dec
call
push
rcl
addb
and
sbb
movb
mov
and
cmp
xchg
push
fnsave
cmp
in
or
xchg
lods
aaa
jl
lea
dec
sbb
insb
cmp
lods
inc
fisttpl
lahf
in
mov
adc
lock
fsts
mov
mov
insl
push
jmp
fucomip
fldl
fdivs
push
fst
andb
inc
rorl
mov
int
insb
inc
sub
cltd
lods
xchg
jnp
dec
iret
push
dec
pmaxub
cmp
jecxz
add
dec
jns
pop
in
ds
and
ret
jecxz
nop
loopne
sub
xchg
cwtl
call
aas
mov
nop
push
mov
cmpsl
push
xchg
dec
popa
je
inc
lcall
sub
ret
lds
test
mov
nop
scas
xchg
or
push
sub
in
in
rcr
rorl
cmc
and
dec
ds
pushf
jmp
ja
and
loop
add
test
imulb
notl
iret
dec
push
das
mov
xor
pusha
dec
pop
fstps
jbe
jne
stc
call
movsb
sbb
aas
popf
ljmp
stc
mov
in
test
sub
in
cmp
push
sbb
imul
pushf
sub
clc
cmpb
inc
jne
dec
les
push
xor
xchg
and
popa
in
cltd
hlt
ds
sbb
divl
cmpsb
divl
scas
cld
and
cmp
push
xlat
arpl
mov
push
sbb
movsl
mov
mov
loopnew
inc
jo
movsl
loopne
dec
stc
je
imul
cmp
ja
aam
scas
adc
loopne
shlb
insl
inc
add
sahf
in
push
fidivrl
adc
jnp
jnp
aad
inc
ds
dec
pop
arpl
lock
jo
shrb
addr16
cli
int3
outsl
popa
int3
adc
push
fisubrs
insl
and
pop
call
fcom
test
xchg
jecxz
add
mov
sbb
aam
cmp
mov
sub
dec
or
push
lods
loop
pop
jle
xor
adcb
and
pmuludq
push
int
add
or
outsb
orb
mov
rorb
add
mov
mov
fdivrs
jb
shlb
sbb
adc
sub
sbb
push
inc
mov
icebp
incb
ror
dec
and
adc
pop
stc
add
lahf
roll
stos
popf
std
or
jae
fldt
popf
shlb
xchg
sub
xlat
cmp
rcrl
pop
icebp
out
mov
inc
es
outsl
add
cmp
push
xchg
outsl
stc
add
push
mov
jnp
in
mov
and
icebp
mov
or
sbb
xor
into
cld
in
mov
loope
xor
mov
cmpsl
cmp
cltd
mov
or
push
lahf
xchg
ret
stc
mov
pushf
fcomps
mov
pusha
outsb
adc
daa
int3
mov
or
dec
ficoml
iret
sbb
mov
mov
hlt
push
test
adc
outsb
push
inc
ds
xchg
arpl
popf
add
aam
lret
pop
int3
test
pop
negb
popf
imul
movsb
repz
enter
bound
int
inc
push
inc
das
mov
add
loopne
scas
or
dec
cmp
test
cmp
inc
push
pop
push
fistps
mov
pop
leave
cmp
loop
fiadds
cmpsb
mov
dec
loop
aaa
out
pop
jle
sbb
dec
jmp
jns
movsl
mov
mov
test
push
jmp
test
or
pop
cmp
jae
and
adc
into
in
xchg
jne
sub
orb
ljmp
mov
cmp
repnz
ret
popa
sub
jne
int
xchg
inc
pop
sbb
stos
lahf
or
hlt
orb
jae
in
mov
pushf
aas
into
inc
insb
fisttpll
adc
test
shll
pop
dec
add
mov
pop
push
pop
pop
imul
test
cltd
jmp
or
xchg
sarl
cmp
mov
out
pop
nop
adc
movsl
cmc
scas
cli
ja
inc
pop
xchg
and
mov
add
daa
pop
aaa
mov
sbb
fists
xchg
jns
inc
fisubrl
scas
sub
ficomps
lea
pop
cmp
nop
sbb
mov
sub
adc
add
aaa
adc
sub
xor
test
out
mov
scas
cmpb
cmp
jns
outsb
sbb
pop
jbe
adc
out
mov
test
repnz
imul
sarl
fwait
scas
mov
into
pop
dec
push
leave
jnp
popa
or
inc
jae
adc
test
add
test
addr16
or
inc
sbb
or
into
loopne
cmp
cmp
sbb
movsb
and
fnstcw
call
rclb
mov
xor
mov
scas
dec
cmpsl
jmp
xchg
cmpxchg
out
outsb
bswap
jl
aam
push
xor
mov
sbb
mov
mov
mov
clc
and
cmc
in
mov
ds
pop
pop
sbb
mov
imul
adc
outsb
sub
stos
xor
pop
push
xchg
ret
pop
adcl
push
je
xchg
xacquire
nop
add
sti
movsl
les
out
cmpsb
cmp
mov
roll
js
jmp
xchg
cmpl
xchg
adc
les
rol
std
adc
push
jle
jecxz
and
pop
repnz
dec
mov
test
incl
cmp
insb
and
es
shrb
out
mov
inc
lea
pop
push
stos
mov
je
or
inc
add
xor
mov
xchg
mov
or
mov
jae
inc
ljmp
shll
rclb
test
in
movsl
mov
sbb
loope
cmp
xchg
inc
pop
aad
enter
or
clc
cli
mov
cmpsb
inc
or
subb
out
imul
and
cmpsl
and
es
insb
out
aam
jmp
lea
or
cmp
and
insl
int
aas
jp
jae
mov
sti
out
sub
lret
pop
movsb
icebp
xor
out
stos
mov
push
scas
xlat
fsts
xor
dec
pop
sub
fwait
ret
push
cli
andb
sub
dec
or
test
sbb
jo
xlat
or
repnz
xor
subb
mov
das
xor
call
mov
lods
stc
les
lods
sub
insb
sbb
sbb
movsl
mov
int
add
add
sub
fcoms
mov
in
ffreep
adc
pop
cmc
or
mov
adc
mov
repz
push
xchg
pop
ja
aas
out
cmpsb
mov
subb
adc
ret
dec
int3
negl
inc
shlb
ljmp
mov
or
jge
xchg
sub
cmp
mov
in
dec
mov
call
push
fnsave
das
ljmp
sti
icebp
js
in
xchg
or
lds
lret
loopne
xchg
popf
out
inc
push
sub
xchg
cli
in
subl
ds
sahf
outsb
popf
dec
adc
rclb
lods
pop
cmp
andb
jmp
int3
jo
inc
cmp
jb
jle
push
test
dec
push
mov
fxch
xor
stos
js
insb
xchg
and
adc
cwtl
std
and
das
cltd
mov
je
sub
or
pcmpeqd
mov
cmpl
pop
fisttpl
mov
mov
stos
fwait
dec
iret
outsb
cmp
lds
std
xor
xchg
push
out
mov
add
inc
cmpsl
popa
sub
imull
ljmp
push
fs
jb
fwait
in
mov
jmp
pop
push
call
in
pop
jo
jns
push
sahf
sub
loope
or
cli
dec
push
inc
out
aam
vandps
mov
jnp
inc
pop
jmp
push
xor
call
repnz
sbb
push
enter
xorl
js
push
add
lahf
gs
dec
outsb
and
xlat
pop
cld
jg
lods
out
mov
dec
repnz
add
xchg
sub
pop
add
outsl
xchg
push
sti
mov
js
stos
rcrb
cmpsl
sbbl
ret
jns
fldcw
mov
imul
xchg
and
scas
jns
popa
dec
adc
pop
outsb
xchg
lds
push
jecxz
fsubl
cmc
pusha
sbb
ds
add
in
sbb
xchg
xchg
movsl
adc
addr16
jmp
mov
or
pop
jns
aad
jae
shlb
fistl
cli
add
jno
or
out
add
pop
cmp
ret
jmp
movsb
pushf
jge
imul
and
jno
incl
push
mov
pop
rclb
and
jbe
sbb
fnsave
movsb
pusha
stc
push
pop
hlt
sub
lods
je
fiadds
mov
clc
mov
pop
push
mov
sbb
or
adc
adc
mov
fdivl
adc
fildl
push
jb
sti
and
add
push
idivb
sub
fmuls
inc
mov
or
popf
mov
xchg
push
daa
mov
rcll
fmul
idivl
mov
addr16
call
repz
dec
cmp
pop
daa
in
repnz
pop
andl
jo
push
fwait
repz
pop
movsl
out
sub
mov
add
cltd
or
and
enter
inc
lret
daa
shlb
repz
sub
ret
add
push
fcmovu
das
sbb
imul
mov
jl
clc
jmp
jne
or
int3
movsb
jge
js
testl
arpl
push
dec
add
in
int3
mov
fwait
add
xlat
jge
pop
in
dec
xchg
push
rorl
es
jle
xor
or
cmpsl
mov
std
inc
addr16
mov
sub
xchg
xor
jnp
aas
or
xor
addr16
rolb
es
test
push
sub
pop
mov
sub
int
scas
adc
push
imul
hlt
sub
incb
pop
add
adc
jg
add
xchg
mov
inc
sub
outsl
mov
imul
jmp
cmp
adc
pop
pop
add
dec
popa
adc
pop
sbb
leave
fst
aad
sbb
in
mov
inc
jecxz
jecxz
pushf
jecxz
sbb
in
mull
xchg
sbb
je
pushw
cmp
bound
add
inc
xor
or
inc
rcrl
aaa
pop
jge
loopne
test
jg
xchg
mov
mov
iret
cmp
dec
jo
add
loope
inc
movsb
cmpsb
cmpsb
std
scas
adc
jo
xor
mov
cmp
push
enter
in
jp
pop
jae
leave
push
cmp
dec
or
popa
sbb
sub
and
sbbl
lret
js
popw
lds
das
mov
push
icebp
mov
lock
pop
jb
sbb
pop
push
shlb
clc
pop
add
lahf
mov
loopne
dec
aad
xorl
addr16
lret
sbb
repz
xor
scas
cmpsl
sub
sub
dec
mov
mov
shl
sub
repz
mov
fstpl
ja
sub
sub
lret
push
popa
lock
and
fistl
add
ret
jns
loopne
pop
divb
inc
sub
xor
stc
cmp
negb
push
cmp
pop
xor
std
arpl
cltd
nop
jmp
lods
out
xchg
ret
filds
test
pop
sti
mov
jae
adc
ds
mov
push
or
jp
mov
fldt
stc
dec
lea
and
pop
dec
ja
dec
mov
jl
jp
jmp
xchg
into
insb
movsb
sarl
or
pop
outsl
loop
mov
fsubr
addr16
jbe
insb
jmp
enter
push
stos
push
cli
inc
subl
fucomip
pop
dec
adc
mov
outsb
push
jl
jp
cmpsb
pushf
adc
jnp
mov
std
and
mov
test
subl
jnp
push
push
add
mov
fimull
mov
and
scas
icebp
dec
and
stc
xchg
rolb
lea
jl
addr16
cwtl
mov
nop
mov
jecxz
and
pop
adc
mov
lret
jp
sub
or
adc
fldpi
idivb
pop
pop
mov
mov
fimull
cltd
xchg
subl
mov
and
or
push
push
filds
sub
cltd
xchg
ret
push
cld
xchg
and
jnp
cmp
in
cmpsl
stos
out
outsb
fists
les
cmp
mov
mov
cmp
outsl
les
push
jge
adc
adcl
lahf
stos
in
mov
leave
enter
dec
in
inc
xchg
loope
jecxz
sbb
ja
cmp
das
xchg
ss
jmp
test
mov
jo
fsubrs
mov
or
orb
gs
repnz
cmp
xchg
scas
mov
mov
push
fbld
xchg
cmc
sbb
mov
data16
movsb
xchg
pop
aam
and
mov
in
sbb
std
mov
fidivrl
arpl
push
rorl
cmpsl
aas
jmp
cmpsb
adc
rolb
adc
std
stos
push
mov
shrb
dec
sub
mov
jno
inc
jge
jp
xchg
sbb
jbe
rorl
fimuls
jbe
add
jb
cmc
xor
sub
ljmp
fsubs
mov
and
das
std
mov
sahf
cmp
push
cld
lds
mov
pushf
inc
mov
out
sbb
xor
into
adc
mov
scas
mov
xchg
push
cmp
ja
lcall
nop
pop
jb
lods
cmc
dec
push
cmpsl
addl
dec
cmp
lret
fsubl
push
mov
pop
xchg
js
cmpl
movsl
repz
mov
jmp
lcall
mov
shl
je
sub
and
pop
jae
sub
aad
pop
lods
in
in
jae
cmp
cwtl
jge
scas
es
nop
jnp
shrb
aaa
and
fcomp
pop
loopne
insb
lock
mov
pandn
lahf
imul
nop
test
cmp
lds
aam
dec
inc
mov
leave
xchg
lock
cmpsl
and
mov
lret
lds
repz
and
insb
fstl
mov
rorb
ljmp
push
add
out
mov
aam
mov
xor
and
push
mov
cs
inc
xchg
cmpsl
and
inc
jnp
add
adcb
rorb
jl
and
mov
call
jp
cmpsb
cmp
loope
push
popa
stos
daa
and
pop
pop
dec
jo
loope
aam
in
ss
jnp
lcall
repz
inc
pop
clc
xchg
and
lds
sbb
in
pop
push
loop
inc
bound
roll
add
fldl2t
or
aad
in
sbb
pop
push
inc
ret
push
in
jge
pop
add
push
inc
xor
dec
testl
add
popa
or
sub
out
into
stos
out
xchg
mov
jnp
jbe
xchg
cmp
in
aam
and
ret
lea
out
repnz
xchg
sub
or
aam
repnz
sbb
jo
sti
loope
lds
xchg
pusha
es
pmaxub
xchg
popf
jbe
iret
in
jb
mov
fisubl
xchg
cmp
adc
and
jecxz
bound
jo
sbb
inc
xchg
sbb
fadds
mov
iret
pop
sti
cwtl
aam
jl
pop
es
xor
push
add
push
lea
jne
mov
lea
aas
cmpsl
test
arpl
pop
test
call
jns
in
pusha
sahf
xor
fidivrl
pop
nop
mov
jnp
cmc
nop
loope
sarb
sti
xchg
cmpl
mov
scas
cltd
insb
push
inc
mov
pop
test
das
stos
mov
and
mov
test
ret
cmc
mov
cli
fnsave
push
lds
adc
inc
and
rcll
or
pusha
scas
jp
popa
jg
mov
sub
fwait
mov
inc
add
xchg
mov
add
inc
movl
pop
aaa
xor
cld
icebp
inc
cmp
inc
xchg
sub
cmp
test
push
ret
jae
call
push
aaa
add
test
or
sub
inc
stc
mov
inc
int
pop
jne
adc
add
mov
lds
pop
sbb
repz
xchg
int3
test
and
pop
adc
into
orl
sbb
mov
adc
xor
sub
push
arpl
sar
in
jl
jecxz
and
dec
mov
adc
add
xorb
data16
das
imul
orb
aam
loop
inc
adc
fdivp
lret
pop
add
or
int3
and
inc
and
movsb
mov
mov
pop
mov
leave
xor
cli
lds
bound
faddl
xchg
jne
int3
in
scas
test
sarb
adc
jb
xor
pop
ljmp
push
jl
sbb
jmp
adc
call
stos
mov
pop
mov
sbb
rcrb
lret
ds
push
into
pop
aad
push
icebp
loope
jb
jmp
push
test
cmc
add
xchg
push
in
fs
ja
lock
push
xchg
repz
fsubrp
adc
mov
ja
stos
je
aaa
cmp
push
xor
andb
mov
push
pop
mov
push
cmp
scas
rorl
stos
clc
ds
jnp
sub
aam
xchg
mov
stc
adc
inc
sub
pop
clc
jno
xlat
fst
mov
and
das
lea
xor
mov
lods
loope
pop
mov
cwtl
ss
sbb
inc
xchg
hlt
lock
adc
adc
xchg
fwait
lods
xchg
andl
mov
push
ror
cmp
dec
jb
test
cwtl
sbb
roll
mov
ss
aas
aam
insl
mov
xor
cmpsb
fmulp
or
js
std
popf
cmc
jmp
xor
push
jmp
int
jl
mov
lret
xchg
jne
mov
xchg
push
mov
mov
adc
mov
mov
pop
arpl
outsb
andl
leave
mov
clc
int3
aad
leave
ja
fucomi
ret
hlt
dec
add
push
sbb
ret
sbb
mov
in
mov
lret
insl
xor
xchg
pop
add
stc
or
adc
js
mov
dec
jecxz
mov
inc
icebp
dec
inc
rcrl
out
cmpsb
pop
shr
jne
dec
mov
or
cs
out
bound
ffreep
pop
inc
or
sbbb
fdivrs
lret
sbb
cmpb
arpl
add
xacquire
test
mov
shr
mov
xchg
pop
and
inc
jo
fisubs
mov
mov
in
shll
dec
sbb
cli
loop
in
fsubrs
or
leave
add
imul
jecxz
mov
cmp
enter
push
mov
jmp
jecxz
outsl
out
jl
fcmove
jmp
outsl
test
sub
arpl
loope
add
loop
testb
mov
inc
sbb
movsl
adc
jge
mov
add
dec
pop
add
mov
leave
xor
ss
pushf
gs
cmp
inc
xchg
pusha
jb
dec
enter
dec
jno
outsb
aas
mov
sbb
inc
inc
dec
repnz
mov
xchg
out
fwait
sub
cmp
mov
adc
loopne
shll
mov
stos
lds
dec
cmp
mov
push
and
or
mov
mov
arpl
scas
push
cmp
in
daa
dec
cmp
test
dec
fsubl
cwtl
xor
imul
or
jbe
out
lret
mov
js
rorb
dec
jmp
lcall
mov
outsb
mov
sti
mov
or
jbe
jbe
push
out
mov
push
arpl
mov
mov
sahf
imulb
cmp
xlat
stc
mov
aas
xchg
adc
or
push
xchg
push
jge
xor
push
cmp
add
dec
xor
push
and
or
pop
dec
lea
xchg
int
cli
dec
mov
sbb
xlat
fnstsw
data16
push
data16
pop
ja
ss
mov
je
imul
and
jecxz
ret
and
cli
stos
jge
movsl
fisttpll
jbe
sbb
lret
jns
add
pop
scas
jb
adcl
sahf
mov
add
testl
add
call
je
mov
jl
in
pop
lret
imul
popa
leave
or
sarl
xchg
mov
or
inc
enter
aas
jo
jecxz
ds
test
pushf
fsubs
aaa
lds
mov
mov
mov
and
js
cmp
dec
iret
out
movsl
add
dec
mov
loop
and
cld
pop
mov
xor
lret
pop
adc
sahf
movsb
add
cmp
push
je
ja
subl
loope
out
fwait
ds
inc
call
fstpt
sbb
das
add
or
mov
outsb
loopne
fimuls
out
dec
dec
loope
outsb
mov
add
cmp
shll
inc
test
sub
dec
inc
inc
icebp
rcl
mov
fnstenv
dec
int3
lock
outsl
outsl
test
or
and
inc
invlpg
scas
popf
push
insb
mov
jae
addl
inc
iret
or
xor
repnz
pop
pushf
je
sub
and
mov
add
xchg
outsl
es
popa
cmp
add
cmpsb
js
mov
mov
sbb
data16
cltd
sbb
jne
mov
fcomip
cmp
push
call
cmpsl
cli
lahf
push
xchg
addl
mov
sarl
ds
sub
fsubrs
loop
inc
or
add
incl
inc
cmp
mov
push
or
mov
fwait
jns
adc
or
dec
fwait
xor
in
int3
cmp
test
fdivl
xor
pop
jp
ret
xor
add
adc
outsl
and
int
mov
add
sub
or
inc
mov
imul
or
inc
sbb
inc
jmp
mov
push
bound
push
xchg
dec
enter
shl
repnz
and
leave
and
loopne
js
pop
xor
lcall
cmp
pop
xchg
sub
ljmp
mov
es
xchg
or
scas
cli
fxch
xor
add
ret
cmp
and
in
push
xchg
clc
cmp
clc
stc
inc
mov
ficoms
mov
in
xor
out
fiaddl
roll
or
xchg
repz
sbb
stos
mov
jo
push
lods
xor
lods
rcll
mov
fs
fptan
insl
adcl
cli
daa
mov
xchg
in
mov
popf
inc
push
cld
sub
xor
aam
stc
dec
jp
lds
jge
add
lahf
fldln2
fstl
mov
pop
iret
or
dec
rol
test
xchg
push
push
or
pop
dec
sub
cwtl
xacquire
inc
enter
int3
add
pop
imul
mov
std
push
test
iret
pop
shrb
shrb
xchg
pop
xor
sbb
call
xor
dec
in
adc
add
mov
cmp
movsl
movsb
pop
movsl
aam
test
mov
ljmp
int3
pop
inc
sub
ss
mov
in
jo
rorl
sub
jo
into
cmp
pushf
ret
rcrl
pop
lret
lods
mov
mov
incl
and
jmp
add
pop
ret
test
cmp
jo
add
and
or
pusha
sbb
out
in
daa
add
scas
push
cmc
adc
xchg
std
test
and
pop
mov
adc
xor
aad
repnz
add
mov
arpl
add
inc
jmp
into
mov
sub
aad
jmp
std
hlt
addr16
aad
rcrl
out
clc
cmc
shll
cwtl
outsb
adc
mov
jle
loop
and
jae
pop
jg
add
pop
pop
xor
stos
jno
mov
sbb
addr16
mov
insb
dec
fnstsw
int
mov
xchg
iret
pop
push
push
cmp
test
leave
push
inc
inc
imul
inc
or
aam
lret
aaa
add
aam
cwtl
cld
pop
mov
adc
aaa
dec
std
fisttps
leave
mov
test
ja
sub
lock
sub
sub
insb
dec
in
push
xchg
xor
jmp
pop
insb
or
add
stos
jno
into
sbb
push
sbb
test
fwait
adcb
std
dec
inc
or
pop
dec
pop
sbb
in
and
std
push
mov
insl
jmp
pop
pop
icebp
daa
jns
xor
pop
ljmp
les
stos
lahf
cli
adc
add
loope
mov
adcb
movsb
xor
pop
repz
cli
mov
sbb
and
iret
inc
dec
mov
jl
jno
data16
test
mov
adc
xchg
sahf
int
in
cs
pop
lods
in
sub
rolb
jl
test
adc
mov
cld
fsubr
mov
adc
popf
sbb
nop
arpl
or
cmovno
and
jg
fsubs
jcxz
xchg
in
sub
mov
filds
pushl
jns
push
leave
mov
out
pushf
sbb
xchg
gs
sub
movsl
out
shl
dec
insl
repnz
test
xchg
mov
imul
mov
mov
push
mov
inc
leave
xor
push
test
push
sub
mov
mov
xchg
sti
call
adc
addr16
dec
mov
cmp
xor
sti
push
dec
faddl
xchg
mov
adc
inc
jns
inc
xlat
sub
orb
int3
pop
pusha
mov
mov
ss
imul
cmp
scas
dec
push
push
arpl
cmp
pop
pushf
pop
and
cld
enter
inc
mov
xchg
call
repz
xchg
mov
loope
cmp
dec
cmp
sub
sarl
ret
dec
jno
je
adc
cmpsl
scas
pop
pop
mov
scas
dec
aam
flds
ljmp
pushf
dec
and
fldenv
mov
hlt
fisttpl
ljmp
out
lret
shlb
aam
lock
adc
nop
or
mov
xor
std
leave
jo
sti
or
lret
hlt
dec
fwait
mov
sub
or
into
and
mov
bound
in
loop
or
aaa
mov
sbb
aam
sbb
add
sbbb
jmp
rcr
loop
fisttps
push
ds
pusha
add
mov
dec
inc
adc
adc
mov
xchg
fcmovnbe
push
fcmovu
lcall
mov
es
mov
and
clc
das
push
sbb
jae
clc
add
repz
sbb
xchg
sub
sub
jmp
loope
push
or
lods
fnsave
loop
fldt
inc
dec
push
mov
call
add
inc
lock
sub
dec
and
xchg
fwait
mov
xchg
pop
ljmp
rol
mov
adc
add
adc
in
ret
xchg
mov
int3
ror
adc
ds
popa
add
sub
sbb
in
aam
dec
mov
push
pop
or
cmp
add
mov
sub
mov
mov
sbb
pop
pop
lahf
or
imul
xchg
add
insb
bound
in
sbb
inc
xor
sub
aam
sbb
xchg
sub
dec
dec
fsubs
ds
loope
call
jge
dec
cld
nop
push
push
fdivp
je
push
test
jnp
inc
jle
dec
lods
push
rol
ret
inc
xor
push
pop
inc
cmc
aad
aas
and
in
jns
cmp
sbb
adc
sbb
subb
cmp
push
movsb
jmp
dec
push
xor
push
add
aam
pop
iret
cmp
clc
lret
cli
cmpsb
xor
ret
xorb
xor
fdivl
test
sub
jle
je
adc
mov
xchg
mov
outsb
jns
cmp
das
jmp
inc
ret
sbb
or
stos
mov
pop
mov
mov
push
hlt
jg
cld
pmaxub
out
das
push
loop
pop
scas
pop
fistpll
aaa
cmp
mov
or
les
in
and
addb
imul
mov
or
inc
jnp
mov
shlb
pop
arpl
push
cmc
and
nop
lret
xchg
daa
cmp
jnp
andl
lods
test
nop
repz
mov
repnz
or
cbtw
ret
mov
xchg
loopne
out
sub
sti
or
aam
clc
sbb
mov
sbb
lods
jmp
aaa
sbb
cwtl
out
mov
rol
aad
cmp
fsub
jmp
stos
xchg
add
outsb
stc
cmp
sbb
out
mov
and
sub
mov
out
push
mov
sub
xchg
xchg
or
push
dec
sbb
fwait
mov
icebp
shrl
mov
test
xchg
sar
dec
nop
fsubrs
pusha
stc
jno
leave
cltd
dec
mov
mov
ljmp
pop
ficompl
xchg
loop
or
mov
fimull
cmpb
dec
sub
fdivrp
ja
out
lahf
cli
adc
sbb
jecxz
daa
iret
mov
pop
and
cld
imul
loop
pop
push
sub
xchg
xchg
sub
or
loop
mulps
push
aad
mov
enter
dec
out
rcr
enter
sti
inc
adc
mov
dec
xor
pop
movsb
pushf
or
fcomps
rcrl
insb
push
out
int
push
ss
arpl
cmc
mov
scas
cmp
mov
push
push
shll
loope
test
sti
movb
dec
jb
test
outsb
mov
dec
test
pop
test
push
dec
xlat
push
stos
rcll
mov
pop
jo
fcmovnb
out
dec
arpl
add
in
adc
aad
gs
dec
adc
add
mulps
sbb
cwtl
test
sub
cmp
and
xlat
out
aas
inc
gs
mov
imul
int
mov
adc
int
sahf
clc
push
into
and
xchg
dec
and
arpl
fildll
test
xchg
inc
and
adc
out
out
das
pop
pop
pop
cmp
sahf
xchg
sub
xor
sub
jns
pop
or
scas
add
in
mov
test
ret
push
cmpsl
movsl
fcompl
sahf
movsb
fisttpll
lret
clc
pop
xor
inc
lret
fcomp
jns
loop
into
orb
or
scas
cmp
rcrb
adc
mov
popa
cmpsl
in
inc
out
dec
iret
xchg
add
xchg
enter
pusha
inc
stos
or
pushl
fiaddl
je
lcall
fdivrl
cmp
sbb
mov
sti
sahf
push
push
pop
push
out
inc
nop
lods
ljmp
adc
shll
in
add
int
js
mov
push
fstpl
or
mov
rol
push
dec
mov
outsl
or
outsl
pop
or
sbb
cli
nop
mov
lods
out
sbb
int3
shll
fbstp
mov
or
ror
push
hlt
push
lock
push
fidivrs
cmpsb
jns
stos
jecxz
es
sub
cmp
andb
xchg
ja
cld
dec
repnz
lock
cmp
cld
scas
push
mov
or
adc
stos
mov
movsb
xchg
sahf
outsl
mov
addr16
pusha
out
test
movsb
sahf
inc
cmp
popf
sbb
popa
je
std
jecxz
cld
outsb
mov
shll
xor
es
out
test
xor
or
sbb
jo
push
dec
mov
jmp
jno
jl
sub
mov
xor
sahf
jnp
or
and
bswap
pop
inc
out
iret
outsl
push
dec
lcall
mov
mov
ds
jb
dec
scas
in
data16
or
movl
mov
add
and
mov
adc
mov
cli
adc
scas
pop
in
or
rcl
mov
adc
push
js
xor
xor
or
sub
push
mov
xlat
movsb
imul
mov
addr16
pop
popf
fildll
daa
mov
test
sub
push
out
popa
push
pop
lock
ret
dec
sbb
es
mov
mulb
movsb
testb
int3
xor
adc
or
test
ret
jle
inc
rolb
add
fiaddl
add
cmp
les
mov
push
inc
mov
in
adc
cltd
jge
ss
sub
xchg
test
stc
sub
xchg
sbb
dec
or
dec
ss
push
push
inc
je
orl
push
scas
adc
dec
fst
sbb
xchg
xor
adcb
sarb
push
mov
frstor
add
je
cmp
sbb
mov
mov
and
sub
mov
jae
xchg
adcl
mov
lret
xor
stos
out
push
mov
mov
xlat
xchg
cmp
repz
test
pop
jns
xlat
inc
jae
insl
xor
clc
or
stos
sub
mov
pop
inc
mov
xchg
pusha
mov
cmp
pop
out
mov
jge
sbb
pushf
push
lcall
mov
pop
mov
pop
arpl
lods
mov
sbb
ret
aam
xor
idivl
sub
xor
sbb
scas
movsl
fsub
push
pop
dec
cmp
xlat
mov
inc
rolb
jne
lahf
cmp
xlat
push
xchg
sbb
shlb
loopne
jmp
lahf
add
stc
mov
mov
mov
enter
sub
test
stos
in
insb
sbb
mov
test
aad
sub
or
xchg
test
cli
scas
mov
push
sbb
push
mov
cmc
mov
bnd
scas
push
fnstcw
mov
inc
scas
push
sbb
cwtl
adc
add
xor
nop
add
ret
xchg
shll
xor
aam
orb
cmpsb
shl
fsubrl
cltd
mov
jecxz
nop
mov
je
addl
or
pop
mov
push
movsb
xor
out
notb
mov
incb
and
cmp
sbb
mov
xor
in
inc
stos
test
push
jnp
jae
fs
rcr
loop
xchg
idivl
jmp
shrb
ljmp
or
dec
icebp
push
xor
fstps
mov
cmp
xorb
cmpsb
mov
and
mov
ljmp
adcl
pop
dec
test
pop
adc
mov
popa
fldt
cli
and
push
xchg
inc
sbb
mov
pop
enter
or
mov
arpl
sub
iret
dec
mov
xchg
dec
cmp
cmpsl
xchg
xorl
aam
f2xm1
sbb
cmp
test
daa
push
pop
lcall
inc
add
xchg
int
sub
mov
sbb
dec
add
dec
pop
cmp
scas
addr16
mov
mov
and
popa
xlat
fbstp
js
mov
jno
pop
popa
std
popf
insl
sbb
and
mov
scas
aam
mov
outsb
adc
push
loope
ja
das
lds
and
dec
ret
movsb
xor
xchg
sbbl
aaa
mov
rcrb
insb
mov
xchg
xchg
pop
push
fucomp
dec
ljmp
push
fimuls
lcall
xchg
xchg
and
gs
xor
lea
jae
loop
pop
clc
sbb
sub
sub
pusha
jb
pop
sub
push
dec
jno
roll
roll
push
mov
mov
sbb
and
pop
xchg
fdecstp
mov
jmp
sar
jae
mov
pop
or
mov
xchg
fldl2t
popf
shrl
push
pop
into
pop
jns
out
test
ds
test
ss
and
es
shr
mov
pusha
sbb
shrb
pop
mov
cmpsb
decb
movsb
loope
outsl
fiadds
stc
cmpsl
das
aas
dec
ret
arpl
sti
push
or
xchg
add
push
repz
or
add
jecxz
stc
loop
and
mov
sbb
imul
inc
imul
inc
icebp
mov
insb
in
inc
rcll
dec
clc
lret
xchg
jle
ret
stos
pushf
stos
jno
ds
push
sbb
jecxz
je
daa
outsl
cmpsl
mov
push
sbb
das
stos
daa
in
gs
cmpsb
aaa
lea
mov
xor
repz
dec
sbb
jb
out
pop
pop
push
push
ds
daa
sub
sub
or
lahf
push
imul
mov
adc
mov
cld
push
inc
pop
lret
xor
in
movsl
lret
xor
lock
enter
movsl
in
cwtl
lcall
addr16
sub
fldenv
jns
int
movl
jb
scas
in
roll
mov
mov
jae
dec
and
mov
sti
mov
repz
dec
or
push
adc
jnp
bound
pushf
sub
inc
std
repnz
sarb
push
sbb
xchg
in
push
mov
out
mov
jb
xor
sub
pop
inc
cld
je
and
or
mov
std
loope
inc
or
add
lret
and
and
repz
mov
fcmove
or
test
sti
xchg
lret
in
or
mov
xchg
dec
cmp
sbb
loop
sarl
xchg
test
fsts
xor
test
mov
jo,pn
in
fcmovnb
rolb
mov
xchg
repz
inc
into
or
adc
cli
adc
repnz
push
ds
and
out
aad
sub
popl
or
push
push
and
inc
jle
push
push
imul
pop
jno
xlat
jnp
mov
cmp
fcompl
aad
lock
repnz
xor
les
cmp
sbb
insb
and
pop
xor
push
rcl
notb
push
movb
daa
push
cwtl
sub
mov
inc
out
add
hlt
jns
xor
cmp
mov
shl
fwait
pop
xchg
icebp
mov
pop
push
pushl
mov
sbb
and
cmp
or
xchg
xlat
mov
sti
scas
jmp
mov
sbb
out
les
or
dec
dec
jge
enter
fcmovbe
imul
ficompl
mov
cli
insl
shll
sti
cld
jle
pop
jbe
xchg
or
sub
jbe
into
into
lret
sbb
add
popa
sbb
call
dec
rep
fimuls
gs
nop
gs
out
test
dec
push
cmpl
sbb
jl
outsb
jo
mov
pusha
sub
ret
adc
cs
fsubrp
mov
mov
das
sarl
push
add
xorb
mov
rcrl
stos
jnp
jns
push
push
push
xor
mov
or
std
movsb
iret
jge
mov
rorb
lods
inc
and
incl
out
lea
test
subb
and
cmp
push
and
or
rclb
int
sbb
fdivl
add
imulb
mov
mov
mov
repz
inc
test
mov
jmp
das
lods
ret
xchg
lds
orb
daa
cwtl
cmp
sbb
mov
jge
push
mov
xor
or
adc
pop
or
add
arpl
popa
sub
sbb
and
ret
aaa
mov
popf
lock
push
push
pushf
xchg
vmwrite
dec
cwtl
mov
cmpb
push
stc
lds
dec
mov
cld
imull
mov
dec
xchg
and
lret
enter
pop
add
stc
adc
movsb
cmp
and
mov
pop
movsl
jno
aad
jno
dec
mov
jo
lods
adc
lcall
ljmp
or
mov
adc
insb
fstl
or
sbb
pop
adc
pop
and
xor
fwait
test
nop
lret
jle
movsb
data16
pushf
jne
je
mov
andb
xchg
aas
imul
pop
pop
cwtl
sbb
jge
xor
or
sbb
in
test
lock
push
cmpb
or
push
xchg
mov
jecxz
mov
js
adc
cmpsb
popf
xchg
lret
jmp
stc
loope
sahf
sbb
or
jg
or
push
push
repz
push
and
pop
push
shl
jbe
das
mov
cmpsl
insl
rolb
stc
xchg
andl
lds
mulb
push
mov
pushf
adcb
pop
aaa
dec
pushf
les
subb
cmp
add
lret
rcll
add
xlat
int3
scas
ficomps
push
in
arpl
sbb
incl
and
push
xlat
rcrl
xor
pusha
ds
and
enter
arpl
jg
mov
stos
adc
int3
cmp
inc
inc
clc
pop
xor
pushf
shlb
arpl
lea
subb
clc
sub
dec
xchg
push
dec
adc
lret
rolb
ss
xchg
lods
cld
and
mov
pop
int
enter
push
ds
sbb
lods
push
test
and
fs
xchg
pop
cmpsl
lock
loope
pop
xchg
mov
adcl
addr16
icebp
ja
std
xor
mov
mov
jnp
and
pop
cmp
pop
test
icebp
gs
shl
repnz
addr16
shlb
sti
dec
into
xor
daa
xchg
mov
mov
incb
stos
sarb
adc
or
fsubl
ja
sbb
cmpsl
adc
frstor
sub
ds
int
pop
ljmp
stos
notl
dec
jae
inc
pop
pop
rolb
xchg
pop
cmp
or
xchg
stos
mov
bound
insl
xchg
sub
jae
loope
sub
cmp
mov
iret
movsl
mov
mov
dec
es
cmp
pop
test
mov
fdivp
mov
daa
mov
cmpsl
test
clc
fcompl
sub
sub
aas
mov
and
jbe
std
jne
pop
pop
xchg
push
insb
stos
mov
jmp
jle
mov
ret
pusha
push
xchg
sub
sub
test
enter
lcall
outsb
js
pop
dec
dec
iret
orl
push
fistpl
aaa
sub
daa
fdivp
mov
pop
adc
xchg
mov
adc
pusha
xchg
cli
mov
cmc
cmpsb
out
out
leave
and
imul
imul
movsb
mov
shll
inc
inc
inc
repnz
push
repnz
mov
aas
test
ror
inc
imul
popf
jg
dec
cmp
xchg
fcmovb
mov
mov
in
jb
jmp
lcall
mov
mov
mov
dec
and
dec
popa
cltd
mov
mov
negl
mov
xchg
hlt
push
cltd
int
iret
movsb
mov
outsl
jb
mov
inc
or
push
sub
jge
stc
in
test
push
adc
and
and
addr16
scas
xchg
insb
sub
inc
mov
add
pop
insl
mov
pop
xchg
aas
pop
push
fwait
lds
and
xor
dec
leave
ss
mov
fisubl
sarl
xchg
push
pusha
mov
cmpsl
out
pop
pop
push
xchg
cltd
fsubrs
ja
js
jp
hlt
cmp
dec
jle
sbb
sub
ds
fdivr
push
stos
addb
mov
sbb
mov
mov
out
push
adc
lahf
sub
filds
jo
dec
mov
xor
lea
sub
jnp
mov
jecxz
xchg
faddl
aam
inc
or
out
and
fldcw
xor
pushf
dec
sbb
dec
in
call
mov
fidivs
out
adcl
ret
idivb
xchg
stos
cwtl
insb
xor
loop
and
dec
insb
mov
and
int
ret
in
xchg
mov
stc
aad
movsl
call
imul
push
push
les
ficompl
push
xchg
add
scas
adc
testl
cli
loope
outsl
pop
cmp
or
jle
arpl
stc
insb
aad
cmpsb
cmpsb
inc
cld
loop
mov
inc
dec
iret
cld
sub
js
shrb
adc
push
mov
mov
sbb
push
xchg
dec
push
mov
adc
xor
sub
pop
int
je
adc
repnz
out
pusha
movsb
leave
push
or
add
mov
ret
xchg
and
cs
mov
jnp
xchg
nop
scas
mov
jmp
orb
xchg
addb
js
flds
inc
mov
lock
ljmp
cmp
clc
insb
push
jecxz
daa
sub
mov
lods
jge
pop
pusha
xchg
inc
sti
jmp
bound
jb
in
mov
or
mov
shrb
lret
pop
addl
cmp
repnz
xchg
adc
or
and
lret
mov
jl
jae
lods
dec
aas
dec
and
lock
lea
pop
jmp
mov
sub
call
insl
sub
les
in
loope
mov
loop
mov
or
icebp
or
ret
xchg
js
cli
dec
adc
and
jl
cmp
cmp
pop
rcr
xchg
test
sbb
cmc
cmp
orb
xchg
scas
push
dec
mov
sub
repnz
sbb
jg
jno
pop
and
pusha
mov
data16
push
das
mov
test
pop
cmpsb
push
add
xor
add
mov
jnp
inc
add
inc
push
or
jae
sub
loope
lret
and
mov
in
sub
pusha
and
sar
jbe
in
mov
sbb
and
mov
inc
sbb
outsl
lock
mov
inc
mov
push
jnp
inc
iret
and
sbb
xor
and
push
dec
inc
scas
dec
jmp
cmpsb
cmp
cmp
mov
sub
cmp
sub
std
lcall
aas
xor
pop
jp
test
sarb
in
gs
inc
mov
enter
sub
mov
mov
fsub
cltd
aam
sbb
mov
enter
fbld
mov
mov
andl
das
test
xlat
push
cmp
fildll
bound
addr16
adc
inc
arpl
push
sub
cmc
test
int
xchg
pop
sbb
daa
insb
fwait
nop
fiaddl
and
out
sub
iret
and
out
inc
scas
pushf
push
mov
enter
in
xor
cmp
shll
xchg
outsb
loope
loope
push
jae
fnstsw
mov
jo
jo
fs
stos
lret
sbb
movsl
push
addr16
cmp
push
inc
mov
push
xor
jbe
sbb
test
fsubr
cli
cltd
ret
add
neg
add
mov
and
shlb
ret
inc
lret
dec
xchg
test
in
dec
sub
xor
add
into
leave
rcrl
hlt
xor
pop
mov
mov
or
pop
scas
aaa
repnz
jnp
ja
adc
mov
pop
je
aad
sarl
jl
push
mov
jl
sti
adc
mov
add
bound
jg
scas
and
sub
aad
stc
mov
outsb
ret
add
or
lret
lret
pop
pushf
xchg
push
xor
out
jbe
adc
push
stos
int
pop
and
push
int
jl
pop
inc
inc
jl
mov
enter
fbstp
repnz
dec
push
sarb
add
push
pop
repz
scas
pop
pop
xchg
sbb
inc
sbb
sbb
xchg
xchg
ret
sahf
sbb
cmp
dec
push
push
mov
mov
outsb
push
inc
lods
add
rcrl
mov
arpl
sbb
fdivrp
cwtl
ds
jne
fimull
pushf
jb
xor
test
pop
inc
mov
dec
xor
hlt
and
mov
cmp
repnz
cmpb
or
arpl
gs
mov
fildll
push
sub
add
jl
and
add
decl
mov
loope
ss
fsub
xorb
mov
and
fcmovbe
lods
rorl
push
cli
outsb
mov
rcll
push
cmpsl
pop
rcll
pop
mov
sub
push
int
and
loop
or
ljmp
movsl
ret
pmullw
ret
sbb
aam
inc
mov
idiv
fs
cmpb
rcrb
pop
adc
lret
inc
es
lret
cmp
ror
jl
cmp
dec
sub
sahf
in
jmp
popf
fnsave
cmp
push
cmp
add
dec
jl
inc
sub
idivb
mov
fcoml
jne
out
negb
push
mov
ja
aam
mov
sbb
pop
aad
outsl
lock
cld
or
pop
pop
jl
fildll
stos
aaa
in
xchg
jecxz
dec
sahf
mov
push
push
decb
inc
adc
cmp
xor
mov
in
and
cmp
ret
aad
lock
sbb
ffree
sahf
aam
mov
int3
test
mov
arpl
aaa
cld
sub
stos
add
test
pop
lock
cmpb
sbb
xchg
jns
or
movsl
fldt
int
orb
jno
jp
jnp
loope
push
roll
out
ror
mov
or
scas
and
loopne
int3
sbb
cli
insl
enter
mov
xchg
sub
test
imul
adc
call
out
iret
jg
daa
shll
push
dec
inc
js
outsb
mov
mov
pop
roll
xorl
pop
icebp
mov
ja
mov
addr16
lods
imul
cmp
test
sub
int3
int3
dec
in
movsb
arpl
mov
std
enter
xlat
ret
xor
jle
fwait
xor
test
repz
popa
ljmp
add
and
in
popa
in
repz
mov
inc
and
imul
negb
dec
or
mov
mov
in
lods
push
push
jnp
xchg
fmuls
stos
add
or
sahf
mov
cmc
and
push
inc
ret
scas
jno
sbbb
and
movsb
cld
xchg
xchg
xchg
enter
hlt
imul
and
adc
mov
xchg
cmpl
mov
xorl
push
mov
orb
movsb
repnz
insb
popf
mov
xor
dec
push
js
sbb
movsb
pop
in
push
sahf
cmpsb
cld
or
ds
mov
scas
hlt
pop
stc
dec
neg
push
inc
jl
mov
sahf
or
mov
push
sbb
out
dec
int3
add
cmp
sbbb
bound
add
fbld
test
push
xchg
add
int3
or
mov
push
push
cmp
mov
ja
mov
sbb
clc
pop
aam
roll
popa
stc
scas
and
adc
mov
adc
cmp
mov
cmpb
das
int3
scas
mov
and
leave
rorb
aad
jle
xor
insb
xchg
pop
adc
movsl
xchg
test
aam
mov
in
lcall
pop
push
jle
jns
fistpll
push
cmp
jg
pop
mov
mov
bndldx
mov
cmp
inc
repz
xor
adc
aaa
sub
mov
lods
insl
mov
aas
xchg
xchg
loope
pop
mov
dec
enter
mov
aas
ret
or
mov
ljmp
xor
jecxz
cwtl
test
or
jns
mov
xchg
arpl
sbb
movsl
sub
dec
je
mov
mov
mov
lret
and
push
ja
ja
sub
push
pushf
rol
les
xor
ljmp
push
sub
test
jae
sarb
or
cmp
add
loop
adc
in
jnp
js
xor
pop
ljmp
push
inc
inc
daa
inc
dec
scas
negl
dec
add
mov
xor
jmp
enter
stos
lods
shll
mov
sbb
dec
push
add
inc
jae
push
mov
xchg
mov
adc
jb
insb
add
lods
or
sub
popa
arpl
testb
xor
cmpsw
dec
sub
mov
insb
inc
sar
leave
lret
inc
add
cmpsb
dec
add
ss
cmp
scas
icebp
and
xor
sbb
xlat
pop
inc
push
mov
test
mov
jnp
fdivrl
outsb
inc
push
sar
sbb
aam
loope
mov
clc
test
shl
int3
stc
aaa
decb
xor
cmp
mov
movsb
lods
cmp
xchg
and
jb
jno
decb
pop
iret
fs
ret
ja
xor
popf
sahf
out
xor
adc
pop
sub
jl
dec
mov
lret
cmc
and
xor
pop
adc
clc
pushl
imul
jno
test
mov
xor
add
outsl
jmp
out
testb
xchg
fmull
out
addr16
adc
andl
daa
xchg
push
loope
mov
xchg
pusha
mov
xor
mov
mov
and
popf
xorb
in
cld
mov
iret
addb
cli
push
lods
out
ds
outsl
adc
mov
daa
roll
pop
add
enter
lods
push
sbb
sbb
ljmp
lcall
mov
mov
sahf
pop
mov
stc
les
cmp
xor
insl
mov
add
inc
insb
test
lea
mulb
mov
and
pop
dec
insl
fdivrs
dec
scas
mov
xchg
jb
push
mov
and
mov
sub
repnz
bound
or
sarb
inc
sbb
xchg
cmpsl
pushf
mov
push
xor
js
nop
sub
push
cmp
sahf
popf
xchg
dec
jns
dec
adc
pop
jno
popa
iret
jne
dec
lahf
push
jb
cmpb
cwtl
mov
mov
lods
or
mov
data16
mov
daa
xchg
std
adc
rcll
mov
xchg
leave
adc
add
lds
adc
or
iret
loope
pop
sahf
out
sub
push
test
lcall
mov
shrl
data16
icebp
sbbl
mov
and
inc
dec
fmuls
adc
es
rcrl
adc
int
loop
mov
sub
in
bound
mov
push
pop
jns
mov
and
in
sbb
push
jge
scas
arpl
sahf
cs
das
aam
xlat
fidivrl
stos
lahf
jb
inc
pop
imul
fimuls
insb
sbb
xor
pop
xor
aas
xchg
jne
adc
mov
adc
pop
sbb
sarl
add
scas
cs
pop
jge
in
add
sbb
in
cld
sahf
mov
lret
sub
cmp
int3
push
lret
xchg
jae
in
xchg
and
sti
mov
jle
mov
clc
mov
push
xchg
int3
test
sbb
cmpsb
jl
pop
or
mov
xor
divb
jecxz
loop
push
ret
mov
pop
mov
sarl
mov
shll
mov
xor
push
adc
pushf
add
inc
in
repz
sarb
out
mov
jge
mov
gs
lds
aaa
in
xlat
xchg
inc
mov
mov
push
cmp
pop
loop
jnp
xchg
in
icebp
js
out
or
fnsave
sub
mov
dec
jp
sub
call
jmp
cmp
cmpb
dec
mov
cs
mov
adc
xor
jle
js
cs
mov
sbb
cmp
jp
loope
add
xor
add
pop
jae
popa
es
push
call
sbb
sarb
test
testl
faddl
adc
mov
pop
in
pop
les
fnstsw
or
push
imulb
sub
int
pop
dec
pop
mov
adc
pop
mov
dec
jno
jp
xor
push
popa
arpl
adc
mov
or
out
sub
addr16
in
aam
pop
fisttps
out
sarl
fwait
sbb
in
fsts
push
xor
push
or
sahf
jne
xor
popa
mov
loopne
aam
int
test
adc
cmpsl
adc
out
mov
bound
or
loope
jge
push
push
push
xchg
sbb
mov
ficoms
xchg
mov
mov
stc
popa
cmpsl
cwtl
sub
pop
shlb
adc
or
cmp
jmp
in
or
mov
je
enter
dec
sub
mov
add
fwait
les
push
mov
xor
pop
mov
fstp
divb
xor
sub
imul
and
repz
mov
add
and
push
pop
and
in
push
js
push
test
in
lods
pusha
sub
push
aam
inc
xor
test
lock
xchg
xor
es
shll
loope
dec
xchg
mov
loope
dec
push
or
dec
mov
les
fnstcw
pop
clc
icebp
mov
mov
adc
lods
test
jno
pop
hlt
jne
cmpb
orl
das
push
push
mov
leave
mov
and
add
and
in
add
sbb
and
outsb
push
loopne
mov
and
jns
sbbl
dec
xor
stc
mov
out
xor
in
sub
out
lahf
sbb
xchg
dec
inc
mov
stc
lods
call
add
outsb
cmp
lods
pushf
xchg
stos
lods
inc
inc
andl
aas
loopne
push
jb
mov
nop
mov
sub
jb,pn
subb
insb
pushl
std
push
inc
inc
adc
mov
add
mov
cmp
addb
dec
pop
and
stc
sahf
out
mov
sbbb
fstps
std
pop
fsts
ds
imul
mov
in
jg
jae
adc
lret
add
dec
loopne
aam
outsb
fxch
aaa
and
pop
dec
cmp
push
mov
xchg
cmp
push
add
cld
mov
or
jno
jo
loope
in
mov
mov
xor
and
in
sub
faddl
loope
nop
inc
popa
lret
popf
out
push
or
jnp
das
sbb
cli
mov
add
pop
fistpl
daa
data16
nop
movsl
add
repnz
mov
adc
or
stos
pop
dec
ja
pop
mov
call
pop
scas
inc
flds
and
mov
cmp
or
sub
jne
xchg
sub
cmp
shl
inc
ret
mov
push
pop
rcrb
aaa
mov
fcmovu
lahf
mov
fcoms
xor
repz
movsl
int3
xor
pop
xchg
or
dec
mov
xlat
adc
pop
test
inc
jl
jne
mov
test
test
flds
sub
jae
sub
sub
pop
int3
roll
shl
outsl
popa
push
sahf
pushf
cwtl
xchg
mov
mov
xchg
fpatan
jb
out
arpl
mov
pop
call
enter
xchg
das
fcomip
pusha
mov
loop
in
mov
or
dec
aaa
xchg
mov
loope
cld
repnz
or
and
mov
test
xor
iret
xchg
dec
adc
sub
mov
lock
lcall
movsl
push
dec
hlt
lods
es
je
loope
fcoms
or
nop
sbbl
test
sbb
dec
jecxz
jnp
enter
pop
push
jae
ret
mov
scas
daa
test
icebp
add
mov
and
fadd
cmp
inc
and
sub
xor
cmpsl
negb
ret
icebp
adc
dec
adc
fnstenv
sbbl
popa
push
mov
cmp
sub
gs
push
sub
jb
push
xor
stos
je
fidivrs
add
mov
jg
movsb
icebp
jmp
in
call
adc
mov
imul
pop
pop
mov
shl
inc
loopne
fisubrl
ss
push
sbb
cs
xor
inc
mov
in
push
in
mov
inc
add
add
cmp
scas
repnz
mov
pop
pop
gs
dec
mov
cmp
fs
push
mov
jl
lock
cmc
lahf
scas
lret
fwait
xchg
adc
xor
arpl
sub
lea
cmp
ljmp
shrb
push
xor
xor
es
pop
cmc
push
les
dec
or
imul
xor
jle
or
repz
shll
pop
rorl
imul
mov
dec
jg
or
cmpsb
cli
inc
sti
test
mov
into
icebp
cmp
xor
mov
movsb
or
icebp
pop
mov
sahf
mov
jae
jb
xchg
push
imul
or
inc
insb
popa
sub
xchg
add
test
adc
cmp
popf
fisttps
cmp
pop
xchg
cld
bound
std
loopne
mov
insl
iret
or
loopne
pop
outsb
sti
cltd
cli
or
dec
or
enter
dec
jp
fdivl
jns
and
inc
lods
rol
in
cltd
sub
push
pushf
shl
mov
xchg
into
add
lea
or
inc
xchg
pop
fs
xchg
pop
dec
in
jne
movsl
add
cmc
xchg
cmp
mov
inc
orl
pushw
adc
in
fbstp
sahf
mov
mov
popa
push
lock
add
xorl
scas
jl
hlt
inc
shll
pop
das
iret
jge
cmp
mov
out
fstpl
or
mov
xchg
loopne
dec
mov
pop
pop
outsb
mov
je
in
or
mov
std
or
add
jbe
call
push
stos
xor
sub
push
ficompl
pop
fisttpll
and
cmp
iret
enter
and
sbb
test
inc
nop
pop
jo
push
xor
cmp
xchg
jle
push
xor
mov
cs
lock
mov
xchg
insl
sbb
push
outsl
xlat
repnz
sub
fdivr
fs
and
xchg
pop
iret
or
int
or
stos
dec
mov
jge
sahf
pop
push
loop
repnz
test
je
inc
cmpb
bound
push
aas
jne
int
push
stc
inc
mov
pop
mov
movsl
sbb
mov
outsl
mov
sbb
shrl
mov
sbb
sub
push
cltd
arpl
push
adc
pop
cwtl
xor
pop
imul
and
jg
stc
push
js
lret
orl
pop
mov
push
iret
in
cli
inc
mov
insl
repz
dec
push
int3
gs
shlb
repz
aaa
daa
gs
outsb
cld
push
xchg
jb
pop
rcrb
adcb
popf
push
pop
pop
out
insl
sub
pop
cmp
movsl
adcb
iret
sbb
or
cmpsb
pop
jo
push
mov
inc
into
xor
repnz
nop
jmp
xor
xchg
fwait
cmp
jmp
mov
jl
cmp
call
idivb
and
add
inc
xor
ret
push
sub
lock
cs
stos
sbb
xchg
jnp
mov
push
pushf
arpl
cmpsb
pop
fstpt
es
xchg
popf
or
push
push
stos
cld
stos
movb
inc
rorb
mov
insl
add
iret
cmp
xor
cltd
sub
inc
cmp
cmp
jnp
ror
repnz
imul
into
jnp
stos
inc
mov
add
lret
pop
stos
lock
cltd
mov
and
or
and
push
lock
ljmp
add
loopne
push
cmp
incl
cld
xor
stos
pop
cmpsl
xor
aas
xorb
scas
xor
popa
add
mov
divl
cmp
loop
sub
dec
sbb
out
mov
xchg
mov
pop
lea
add
mov
push
fildl
adc
imul
push
xor
cmp
insl
data16
cs
andl
push
xchg
cmc
imul
lock
ret
outsb
iret
adcb
shr
pushf
js
dec
mov
divb
popf
addr16
mov
hlt
aad
bound
lcall
dec
out
sti
dec
leave
imul
mov
test
insb
into
mov
out
adc
mov
xor
mov
jmp
cmc
mov
cmp
inc
out
or
decb
popf
mov
adc
mov
dec
push
aas
into
inc
outsl
sub
or
xor
in
cmpb
cmpsl
sbb
dec
aad
orl
pop
inc
xchg
and
fimuls
and
mov
popa
and
pushl
mov
pop
sbb
push
int
test
ja
fmuls
ja
ss
int3
out
mov
xor
test
rcr
jmp
movsb
mov
popf
push
and
or
lret
jmp
scas
fcmovb
mov
jbe
mov
sub
mov
push
stc
inc
sarb
sub
mov
cmp
jne
pop
mov
int
mov
push
das
scas
imul
mov
push
cmp
fsubrl
and
xorl
cmpsl
filds
adc
insb
out
inc
pushf
popa
stos
in
out
sub
push
fmuls
and
dec
push
ds
mov
ret
pop
xchg
xchg
in
in
and
cmp
loope
push
or
aam
outsl
cli
add
flds
jnp
dec
int3
mov
inc
adc
or
aaa
fnstenv
shll
decb
ss
inc
inc
aaa
or
push
push
cld
fsubrs
das
cltd
leave
rcrl
cwtl
enter
push
add
sub
sub
fnsetpm(287
stc
loopne
jne
dec
sbb
insl
dec
fcompl
repnz
pop
jb
jl
cmp
test
and
xchg
adc
imul
mov
pop
jmp
das
jno
insl
pop
inc
test
or
in
mov
mov
ljmp
sub
mov
lahf
jg
mov
xchg
and
and
inc
and
or
js
mov
and
sub
mov
add
push
adc
lea
pop
and
cmc
mov
arpl
cmp
ja
je
or
lods
mov
push
add
outsb
lret
or
add
lods
arpl
cmp
adc
dec
and
out
bound
cmc
push
jecxz
addr16
mov
xorb
mov
mov
pusha
insb
push
sbb
add
or
repnz
icebp
adc
int3
arpl
insb
add
shlb
push
sti
daa
imul
lahf
jl
fs
shlb
mov
adcb
xchg
lahf
inc
mov
or
xor
adc
jae
sub
jns
pop
mov
pop
mov
jbe
or
add
sub
lods
insl
mov
xchg
jbe
mov
jae
lret
test
test
mov
and
inc
xor
lods
nop
xchg
push
test
push
adc
cmp
int3
push
sub
sub
jmp
pop
xchg
sbb
push
sbb
filds
sub
inc
xchg
aas
jae
and
inc
add
scas
filds
jo
aad
jno
jns
inc
das
push
in
pop
divb
roll
loopne
leave
sub
arpl
stc
jb
xor
rcr
subl
cmp
xor
push
mov
lods
out
paddsw
and
andb
cmpsl
or
lea
xor
xchg
sub
test
icebp
andb
mov
lret
int
insb
adcb
push
mov
inc
mov
aas
cmp
icebp
push
loopne
test
push
jecxz
inc
or
xchg
xchg
inc
iret
lcall
mov
xchg
hlt
sub
xchg
flds
xchg
push
loope
sbb
lahf
enter
or
and
and
popa
sub
xor
loope
xor
ret
popf
lahf
outsb
jg
mov
nop
sub
sbb
out
adc
outsl
sbb
or
rcrl
loope
loope
mov
sti
lods
push
lret
cmc
sbb
std
int
lds
xchg
cmpsb
call
push
ret
and
push
adc
int
mov
sbb
inc
imul
mov
push
jmp
aam
xchg
push
mov
dec
popf
and
sub
mov
or
push
cmpsl
loope
jge
imull
scas
push
adc
jp
inc
cmpsl
mov
outsb
dec
add
dec
push
lds
xchg
loop
inc
imul
or
add
inc
xor
mov
mov
mov
add
adc
mov
add
cltd
iret
mov
lcall
subb
and
shll
cmp
or
inc
jne
and
jge
push
add
xchg
sbb
fsubs
jg
jl
ret
insb
pop
mov
ljmp
leave
lcall
or
test
mov
popf
xchg
in
sub
loope
sub
mov
aaa
inc
ss
or
sub
pushf
rol
xchg
daa
or
jb
mov
scas
pushf
sbb
scas
push
adc
dec
lds
leave
pop
scas
xor
dec
mov
pushf
push
xor
int
shll
sahf
pop
push
adc
mov
inc
or
int3
mov
mov
movsb
sbb
push
xchg
and
mov
orl
fs
mov
ja
xor
mov
nop
adc
push
xchg
push
incl
negb
xorb
popa
imul
gs
inc
xor
dec
les
cmpsl
daa
dec
mov
or
repz
fisttpll
mov
scas
dec
cmp
loop
shlb
decl
idivb
bound
stos
movsl
sbb
lods
jb
out
fidivl
std
pop
rcrb
fists
sbb
lcall
mov
push
mov
dec
stc
xchg
jb
push
outsb
cli
jae
and
push
sbb
push
in
popa
mov
arpl
sbb
mov
fst
mov
je
cmp
cmp
fdivrp
xchg
push
xchg
cmpsl
pop
imul
add
push
cmp
or
sbb
ret
andl
mov
popf
cmpsl
xor
jno
push
fildl
repnz
xchg
in
imul
test
test
inc
mov
addr16
fwait
in
pop
out
lret
or
push
cmp
adc
sbb
ja
loop
xor
cwtl
pop
sub
and
xor
sub
xchg
aaa
jge
push
int3
xchg
mov
adc
xor
fstl
mov
aas
add
mov
and
mov
mov
dec
jp
fcompl
fsts
mov
mov
xchg
loopne
sub
cmp
jge
mov
push
in
fdiv
rclb
stos
fimull
xchg
and
xor
stc
cmp
ds
or
je
xchg
xchg
gs
and
jmp
xchg
xchg
subb
fidivs
mov
lds
fwait
shl
loope
xchg
cld
sahf
mov
xchg
lods
dec
mov
loop
out
and
pop
xchg
popf
push
push
into
dec
push
jle
ja
mov
rolb
add
lret
adc
dec
or
dec
or
or
sarl
pop
xor
pop
pop
push
and
xor
or
cmp
mov
in
pop
hlt
icebp
xchg
inc
pop
enter
roll
arpl
lahf
das
cltd
inc
aaa
call
or
or
jge
aam
cwtl
pop
out
outsl
push
adc
inc
push
cs
cmp
outsb
or
leave
jmp
lret
cmp
lret
or
push
push
fwait
je
or
sahf
xor
call
call
push
mov
lret
jno
or
mov
jecxz
sub
mov
loop
jbe
xchg
dec
or
push
dec
add
push
mov
int3
mov
push
lea
push
mov
mov
dec
shl
std
pop
inc
or
sti
clc
pop
jl
aas
adc
sub
dec
data16
mov
lahf
pop
mov
sbb
inc
and
shl
jns
lret
nop
dec
test
inc
add
sahf
pop
cmp
dec
adc
pushf
test
es
xchg
mov
inc
jecxz
repnz
cli
loopne
fnstsw
push
and
cmp
or
rclb
xlat
jmp
aad
icebp
or
adc
push
mov
test
pop
gs
stos
mov
xchg
loop
cmp
mulb
push
push
xchg
adc
cmp
aaa
inc
mov
mov
faddp
test
daa
js
dec
jns
jg
aas
add
sbb
and
adc
or
sbb
ljmp
pop
je
mov
sub
mov
mov
jnp
mov
fsub
mov
loop
adc
fxam
test
xor
sbb
jne
xchg
pusha
mov
xorl
loopne
or
pop
daa
xlat
or
pop
sub
sbb
and
xchg
add
cmp
push
push
addl
pushf
orl
push
push
iret
mov
mov
aas
aad
dec
pop
mov
xchg
daa
pop
add
dec
out
mov
pop
inc
sub
jp
or
jns
adc
push
sub
cmp
xchg
dec
jnp
cwtl
and
jns
push
jbe
sub
push
fldcw
lods
pushf
dec
dec
insb
mov
cwtl
push
adc
push
xor
cs
lret
or
sub
fiadds
xchg
sahf
cmpsb
cs
sbb
outsl
loope
jo
push
push
decl
inc
test
std
push
add
mov
mov
mov
stos
adc
icebp
or
xchg
sub
lea
jnp
addr16
sbb
mov
inc
test
jge
iret
jb
cmp
mov
push
dec
jb
in
leave
rclb
in
sahf
out
mov
cmpsl
pop
lcall
out
outsl
pop
test
sbb
mov
jns
jecxz
movntq
enter
dec
jne
fidivrs
ret
or
mov
push
mov
roll
xchg
adc
shlb
bound
adc
testl
decb
lods
shlb
pop
adc
pop
lret
mov
push
sub
into
mov
add
jg
push
cmp
inc
addr16
xor
xor
repz
dec
jl
int3
xor
and
mov
sti
loope
dec
shll
adcb
sub
in
and
dec
sti
outsl
mov
push
or
jecxz
cmp
outsl
ret
adc
mov
ret
loopne
xchg
rorl
push
pusha
lret
push
inc
cmc
es
mov
push
dec
cmp
loopne
pop
jne
lea
lods
lods
out
stc
mov
pop
leave
push
xchg
pop
das
push
in
push
add
divb
inc
inc
jno
inc
mov
push
dec
jmp
or
sub
psrld
dec
mov
inc
add
cld
xchg
inc
mov
daa
int
cmpsb
add
imul
lds
lods
out
cmp
cltd
cmp
jl
out
xor
pop
testl
mov
pushf
push
loopne
mov
daa
daa
rep
rcrl
push
and
xor
or
fistpll
mov
out
into
add
int3
je
dec
sbb
jae
cmc
cmpsl
mov
sub
sbb
or
lea
fmull
fs
jae
jno
ss
xchg
or
cmpb
lds
mov
dec
fdivr
xorb
mov
xchg
cmp
and
adc
push
push
in
or
in
stos
arpl
hlt
adc
xor
adc
lock
je
lock
sahf
fs
ret
cmpsb
xor
test
sahf
fsubrs
bound
ret
jg
jge
mov
out
test
cmp
icebp
arpl
inc
sti
repz
sbb
add
enter
jmp
test
or
pushf
ror
adc
add
adc
outsb
inc
sti
cs
jo
add
jo
add
dec
push
sub
pusha
or
or
push
mov
pusha
sub
push
cmp
inc
fadds
sub
rolb
stos
cmp
jo
add
fldl
repz
dec
dec
dec
xchg
inc
or
pop
xor
movb
sub
sub
or
pop
inc
and
xchg
mov
rol
sbb
addb
addr16
sbbb
test
mov
sub
cmpsl
jo
fs
enter
jge
aad
jnp
dec
enter
dec
pop
cmp
mov
and
stc
mov
add
vmovhlps
rcrl
es
insb
mov
cmpsb
das
sub
mov
rclb
popf
jo
jp
cli
psllq
imul
push
sbb
sbbl
addl
std
nop
dec
pop
cmp
sbb
clc
in
mov
jb
shlb
mov
mov
inc
jae
in
xlat
dec
and
inc
cmp
lahf
dec
fisubrl
fidivl
mov
inc
cmp
repnz
mov
inc
mov
imul
fsubp
je
fwait
mov
and
jge
adc
scas
push
jecxz
mov
cmp
subl
jle
aad
dec
test
push
pop
stc
pop
mov
pop
jmp
add
into
jle
pop
pop
xor
fucomp
movsb
js
movsl
mov
icebp
mov
fstpl
test
jecxz
call
mov
sub
das
shl
subb
icebp
movsl
clc
aam
rorl
pop
arpl
cld
mov
xor
insb
test
inc
xor
jg
inc
pop
aam
jno
cmpsb
mov
mov
cs
push
jns
mov
mov
dec
mov
add
loopne
cmp
sbb
scas
in
fsubrp
shll
dec
ret
push
cltd
mov
mov
push
adc
scas
push
pop
cs
jl
int
cmp
jp
or
add
push
movsl
mov
daa
cmpsb
adc
leave
xor
loop
lea
cmpsl
out
xchg
pop
lods
ds
cmp
fcoms
dec
outsb
ret
jns
adc
in
lcall
pop
fdiv
inc
cmpsl
inc
shll
mov
mov
imul
rcrb
clc
mov
inc
popa
xchg
icebp
mov
or
inc
cwtl
jp
outsl
pop
push
ret
adc
sbb
gs
cld
sbb
push
sub
sbb
enter
and
js
and
xchg
sub
cmp
pop
jb
dec
cmpsl
jg
or
sub
sub
das
add
jo
int3
in
adc
iret
mov
mov
jg
sbb
and
movsb
pop
adc
adc
push
pop
out
mov
push
jmp
inc
push
mov
adc
clc
testb
jns
in
int
and
pop
add
outsl
and
cmpsb
pop
jle
xchg
insb
and
aas
ss
daa
sbb
repnz
cmp
xchg
or
xchg
mov
sbb
into
cmp
mov
dec
sbb
and
lods
mov
mov
add
andl
jb
push
fidivrs
leave
ljmp
push
dec
mov
loopne
cwtl
mov
cs
mov
out
in
mov
dec
mov
dec
xchg
cltd
push
outsl
jl
imull
pop
out
addr16
mov
mov
sbb
xchg
dec
push
test
mov
inc
xor
fdivrs
sbb
cmp
leave
jno
xchg
sti
pop
pop
into
outsb
cmovp
test
movb
mov
cmp
pop
jecxz
adc
push
out
outsl
mov
pop
lds
mov
xor
cmp
dec
push
in
cmp
fdivl
push
push
insl
hlt
mov
cli
cmp
inc
pop
inc
fs
outsb
xchg
inc
sub
mov
das
cltd
mov
sub
dec
dec
sbb
cli
and
sahf
push
popf
xchg
or
mov
movsl
mov
add
arpl
xor
sbb
adc
mov
inc
xchg
dec
pop
cmpl
lods
adc
xchg
out
jp
add
inc
dec
sub
jnp
cmc
in
shlb
dec
xor
pop
xor
jmp
and
inc
mov
or
xchg
jle
lret
ja
xchg
lret
clc
add
out
adc
xor
cwtl
mov
or
cmp
jno
add
lds
popf
inc
push
js
dec
lea
leave
ja
sti
lret
repz
pusha
je
push
lods
cmp
aaa
push
cltd
icebp
je
xor
cld
xor
sub
dec
ret
aas
in
ja
sub
lret
orl
repz
adc
sub
rcl
stos
dec
and
ljmp
je
sub
mov
loope
lret
arpl
pushf
stc
mov
xchg
mov
popf
dec
pop
mov
neg
sbb
in
mov
movsl
mov
adc
sbb
or
cmp
push
pop
mov
sysexit
scas
test
decl
mov
daa
cmpsl
ds
and
dec
in
sub
pop
adc
mov
xchg
push
cltd
or
inc
sbb
jmp
push
ja
or
xor
dec
mov
dec
mov
push
cmpw
jnp
and
or
mov
dec
rcll
sub
mov
cmp
ror
out
dec
xchg
rorl
adcl
cmp
outsl
scas
jg
test
push
bndldx
scas
mov
xor
mov
stos
les
xor
scas
push
arpl
xor
nop
outsb
sub
data16
daa
jp
sub
or
pop
xchg
movsl
pop
push
xor
test
fimuls
jae
sub
xlat
sbb
jl
jbe
arpl
test
cmpsl
sub
sbb
sub
mov
dec
mov
loop
push
mov
mov
ss
inc
in
orl
fcomi
mov
xor
nop
add
and
adc
cmpsb
cmpsb
xchg
mov
cld
sbb
and
mov
lods
jns
jne
push
movsb
or
sub
adc
mov
push
pop
lods
insb
cwtd
jl
outsb
mov
jno
pusha
jmp
cmp
aaa
or
icebp
test
sti
jg
and
push
rorb
hlt
insl
mov
stos
icebp
mov
scas
cs
in
aas
aam
cmp
inc
sbb
xor
sbb
adc
mov
pop
loopne
jne
in
jl
inc
das
and
cmp
xchg
fs
adc
idiv
out
fsubl
sbb
cmp
adc
push
outsb
outsb
aam
test
imul
lret
push
mov
jo
sub
sub
je
xlat
add
mov
sub
mov
pop
pop
push
mov
add
cmc
sbb
test
shr
xor
bound
push
int
fldcw
andb
out
mov
or
sahf
push
mov
faddl
sahf
adc
mov
xor
jecxz
aas
fwait
stc
or
int3
push
ds
cwtl
push
mov
push
lods
push
aas
sbb
dec
lret
mul
push
in
push
dec
sbb
mov
in
sarl
mov
pop
in
mov
idivl
insb
fmuls
adc
sub
repnz
adcb
icebp
jmp
cmc
loop
rolb
fcoms
incl
pop
ja
pop
and
outsl
jg
dec
outsl
iret
xchg
in
jge
cmp
pop
data16
clc
xchg
push
lcall
push
int3
mov
repz
xor
loope
mov
popa
and
loop
dec
mov
adc
fildll
fstpt
mov
or
mov
xor
movsb
cmp
xchg
fdivrs
rcll
dec
js
cmc
enter
dec
fs
sub
push
test
jge
call
movsb
and
add
push
sub
jae
fs
fcmovnb
leave
push
incb
mov
in
inc
loope
les
in
xor
addr16
jmp
movsb
test
fdivl
lret
cli
inc
js
cmp
mov
or
push
imul
dec
inc
stc
push
pop
lret
mov
test
xchg
inc
mov
adc
push
or
jne
push
mov
cmpsb
sti
pop
mov
jbe
cmc
rclb
out
daa
push
es
sbb
mov
jl
or
inc
mulb
push
addr16
lods
jns
mov
lret
jecxz
add
sub
sbb
inc
adc
fs
shll
orl
inc
rcll
mov
sub
stos
fisubrl
out
xor
aam
fs
scas
xor
popa
into
sti
mov
push
cmp
cmpsb
out
cmp
sub
in
mov
dec
xchg
sbb
movsl
mov
inc
out
inc
mov
call
pop
cli
xchg
aaa
or
xchg
pop
adc
outsb
mov
cmpsb
mov
inc
pop
mov
loop
fildll
lods
roll
fcmovne
ret
push
in
cmpsb
call
lea
mov
mov
xor
shr
btr
fstps
in
dec
fsubrl
add
pop
loope
jmp
adc
adc
jp
xor
add
in
mov
icebp
cmp
es
xor
aaa
adc
mov
xchg
sti
xor
imulb
in
data16
mov
add
lds
shlb
lods
rcrb
add
mov
cmpb
mov
push
negb
loope
daa
test
pop
lret
mov
js
ds
xchg
jge
xor
data16
neg
rorb
add
xor
inc
push
fwait
push
mov
push
aad
mov
and
inc
jnp
movsl
inc
and
stos
mov
mov
xchg
fimuls
fstpl
or
clc
out
andl
dec
cmp
adc
neg
jne
jno
mov
add
inc
imul
out
shrl
jmp
xchg
lcall
dec
xchg
or
cs
sbbl
mov
dec
dec
mov
push
push
xor
dec
test
sub
fwait
jbe
mov
hlt
sub
ja
loopne
in
or
cmp
pop
shr
xchg
sub
test
ficoml
pop
repnz
icebp
shlb
xchg
lcallw
mov
hlt
push
mov
push
ds
xor
lods
jp
in
cmp
jo
add
xchg
lea
cmp
lahf
add
jno
mov
dec
jle
adc
adc
in
scas
clc
jmp
mov
adc
push
lock
dec
hlt
outsl
in
pop
sahf
jae
inc
mov
pop
mov
imul
sbb
js
ja
fbstp
jmp
outsb
mov
push
stos
add
icebp
jle
lock
push
insl
mov
or
sub
adc
fneni(8087
push
sbb
and
pusha
out
ss
loope
cs
or
popa
mov
and
pop
mov
inc
out
in
cmp
imul
mov
test
dec
sbb
fwait
dec
loopne
add
and
shll
div
xor
mov
push
mov
jle
rclb
cmp
aas
xor
mov
jae
and
in
je
inc
shlb
popl
add
out
push
sub
pop
js
icebp
xor
rorl
mov
jbe
scas
test
aas
mov
adc
and
dec
pop
mov
push
add
scas
pop
mov
push
mov
test
aaa
scas
push
mov
je
and
das
fisubrs
sbb
jo
mov
inc
loope
insb
mov
dec
out
ret
pop
xor
adc
hlt
stos
sti
lock
sub
xchg
xorl
cwtl
and
pop
inc
insb
lahf
std
incl
jmp
cwtl
test
fisttpl
icebp
mov
jle
xchg
call
add
insl
mov
dec
popa
cmp
cltd
mov
cmp
mov
fdivrl
sbb
pop
outsl
lea
cmpsb
xor
push
scas
testl
jo
and
test
int
jae
and
jmp
ficoml
mov
xchg
notl
rorl
lret
mov
push
jnp
push
lret
jmp
in
push
mov
mov
in
test
adcl
xor
dec
cmp
subl
pop
test
dec
jecxz
int
mov
ret
outsb
loopne
inc
dec
popa
mov
inc
orb
xchg
syscall
push
popf
imul
roll
sbb
arpl
mov
and
mov
mov
je
mov
aad
xor
cmp
mov
add
es
jl
mov
dec
jl
fcompl
lods
insb
mov
cli
adc
push
out
sbb
aaa
das
test
test
popf
in
fidivs
mov
mov
push
lods
popa
fcmovu
jg
pusha
push
arpl
add
addr16
sarb
lds
sbb
mov
data16
add
icebp
fwait
cmp
ds
inc
adc
pop
sbb
and
loopne
mov
mov
cwtl
cmp
mov
add
dec
pop
dec
inc
jo
cli
or
and
outsb
push
adc
push
jnp
adc
pop
bound
cmpsl
aaa
dec
ja
test
mov
addl
mov
cmp
ss
sbb
cmpsl
cmp
and
cmp
adc
aas
shlb
or
push
clc
sub
add
add
jae,pt
adc
ret
pushf
lret
insl
inc
lds
mov
ss
add
sbb
outsb
imul
call
mov
dec
jl
fists
mov
les
fmull
adc
pusha
or
das
int
scas
testb
or
xlat
sbb
out
jl
int
cwtl
sub
movsb
ds
aaa
push
fidivl
dec
shl
shll
adc
jb
int
into
les
sub
xchg
shlb
stc
adc
jo
enter
scas
jl
andb
mov
scas
push
stos
jp
scas
fildl
lahf
test
std
sbb
leave
dec
jmp
push
popa
dec
outsl
fsubrs
sarb
xchg
in
adc
rorl
dec
xor
pop
adc
mov
jnp
fwait
sub
xor
pusha
jecxz
lahf
mov
or
xlat
add
jne
ficompl
mov
arpl
scas
jno
repnz
push
cmp
test
dec
inc
xchg
dec
clc
add
add
pop
ljmp
lods
pushf
sbb
cmpsb
ret
add
xor
int
js
clc
inc
fsubr
stc
lea
adc
punpcklwd
movsb
iret
add
sub
ss
jle
mov
lahf
mov
cs
scas
movd
inc
inc
xchg
xchg
sub
xchg
movsl
lret
push
adc
loope
xchg
lock
rcr
dec
pushf
mov
adc
jnp
sub
jo
jo
cmp
dec
mov
mov
lahf
frstpm(287
ret
icebp
loopne
or
repnz
aam
sbb
adc
iret
push
fiadds
jns
xchg
push
pop
mov
jp
add
dec
mov
out
lcall
js
shll
pop
loopne
jbe
frstor
add
into
test
adc
int
pop
daa
push
sbb
push
xor
xor
mov
xlat
xor
leave
arpl
pop
into
mov
das
arpl
in
mov
mov
pop
std
lahf
hlt
dec
rol
pop
sub
mov
mov
out
lods
push
ret
or
inc
insb
ljmp
jp
lcall
jnp
sub
push
mov
cmp
loop
pop
ss
in
mov
and
in
imul
nop
sub
and
cmc
pop
push
xchg
ret
mov
icebp
mov
mov
shlb
cmc
out
frstor
xchg
cmp
inc
mov
mov
pop
xor
stos
ds
aas
call
cmp
mov
out
fucom
or
outsb
xchg
out
add
fdivrl
movntq
out
dec
push
jns
outsl
cld
lea
mov
push
iret
jns
pop
jl
xchg
jae
hlt
outsl
insb
hlt
test
mov
cld
mov
mov
adc
or
sub
or
jecxz
ds
xor
adcl
xor
jmp
in
ljmp
cltd
push
ss
sahf
ljmp
inc
xor
test
ffree
ds
mov
ljmp
shlb
add
pop
or
enter
mov
loopne
aam
pop
xchg
lock
das
fwait
or
inc
ret
or
mov
in
scas
in
sbb
cmp
repnz
mov
cmc
shl
mov
sub
jae
js
cmp
aad
sub
cltd
insb
mov
and
and
add
mov
repz
push
mov
xor
rcrl
sarb
inc
adc
add
jle
xlat
ljmp
les
add
mov
xchg
adc
xchg
andb
iret
mov
movsl
jo
ret
lret
jno
mov
pop
mov
ds
orl
mov
sti
dec
popa
mov
push
addr16
imul
push
or
jl
sub
adc
dec
in
mov
js
mov
stc
in
fstp
stos
mov
mov
adc
loop
mov
ss
mov
popa
push
orl
pushw
jno
stos
jnp
xchg
jmp
push
stc
sub
sbb
xchg
mov
imul
dec
sub
imul
repnz
mov
dec
fsubrl
and
adc
lods
pop
push
mov
cmp
aas
lds
int
mov
fcmovnbe
xchg
mov
mov
fcoml
push
jg
or
push
popf
sub
insl
testb
fdivrl
dec
mov
sbb
jmp
mov
jl
cmp
cmc
clc
rol
sub
and
xor
dec
loop
push
sbb
notl
shlb
movsb
inc
cwtl
dec
mov
outsl
outsb
jmp
int3
push
daa
fisubrl
inc
inc
sti
and
lock
xchg
sbb
test
and
aas
add
mov
jl
xchg
repz
ret
stc
lods
cmp
jmp
dec
add
jo
imul
push
and
cmp
mov
out
in
ja
mov
sbb
roll
je
sahf
roll
sub
add
mov
cmp
cmp
lret
sbb
adc
lea
leave
addb
jle
lahf
fsubrl
aam
rcr
jnp
repnz
scas
pop
outsl
jae
push
sti
lea
aas
cmp
inc
push
gs
test
jle
xor
push
arpl
shl
fiaddl
dec
outsl
pxor
and
inc
addb
push
sub
aaa
push
enter
out
popf
rcl
mov
mov
add
pop
jecxz
mov
xchg
cs
aad
es
xchg
cvttps2pi
xor
icebp
loope
inc
ror
int3
xchg
pop
inc
inc
daa
jbe
xchg
gs
clc
jmp
sbb
aaa
pop
lcall
sbb
stos
xlat
cmpl
das
cs
mov
shlb
adc
dec
out
imul
gs
pop
pop
dec
cmc
orb
pop
pop
ja
fstpt
imul
mov
adc
mov
decb
and
mov
insl
outsb
fisubs
mov
add
jne
ficomps
pop
imul
xor
out
fwait
pop
or
pop
sbb
or
lds
andb
lcall
push
pop
fisubrs
sbb
shr
movzwl
sbb
cmp
xor
mov
add
mov
adc
scas
pop
ss
mov
movsb
clc
mov
loope
mov
pop
cmpsl
push
call
inc
loope
dec
xor
mov
cmpsl
sub
cmpsl
xchg
mov
enter
loop
mov
mov
jmp
xlat
int3
jp
sbb
loopne
punpckhwd
mov
push
xor
or
pop
insl
cmc
add
dec
cmp
xchg
sti
rorl
add
or
lods
cmp
aaa
int
fsubrs
mov
and
lret
lcall
jbe
imul
push
add
out
add
ret
out
cmpsb
pop
ljmp
sub
and
mov
jae
dec
and
popa
jge
or
pop
add
add
dec
and
loop
lods
hlt
cwtl
push
pop
in
jle
push
fdivrl
mov
call
out
mov
gs
cld
jo
mov
mov
lahf
repz
adc
inc
repnz
ss
jl
test
std
push
cmp
dec
fwait
stos
ficoms
pusha
mov
jl
out
pop
out
pop
mov
outsb
or
adc
imul
adcl
faddp
pop
lea
cltd
xlat
je
pop
cmp
xchg
mov
jle
xor
in
add
unpcklps
or
lahf
and
fld
out
push
add
adc
int3
mov
pop
cld
push
movsl
mov
sub
inc
xchg
fs
sub
addr16
adc
jae
mov
mov
insb
cwtl
cmp
orl
adc
enter
sbb
loopne
mov
fidivrl
xor
leave
int3
jge
jb
clc
rol
and
or
mov
pop
ss
jecxz
and
and
push
pop
ror
push
mov
and
and
xchg
fldenv
lds
out
shrl
add
push
shr
lcall
mov
xchg
sub
mov
imul
inc
test
inc
jne
inc
jbe
sub
push
mov
mov
repnz
stos
mov
xchg
ja
int3
fs
jne
mov
add
jae
jle
enter
pop
push
js
mov
sbb
lds
lcall
lods
shl
pop
inc
xor
add
rclb
jno
xchg
mul
in
gs
xlat
cmp
push
stos
in
in
push
mov
loope
or
popl
insb
aaa
add
fimull
iret
arpl
mov
cli
mov
mov
decl
or
into
hlt
stc
cmp
aaa
test
sbb
mov
dec
stos
mov
rorb
sub
jmp
jmp
push
jg
adcl
mov
and
jp
lods
stc
hlt
sbb
std
add
lock
mov
pmullw
jle
push
lret
cmp
mov
orl
jmp
nop
and
pop
xchg
stos
pop
jg
test
sarb
mov
cmp
cmp
js
test
or
gs
inc
lahf
loopne
imul
push
aas
fbld
loopne
test
pop
cmpsb
ret
shlb
lcall
lahf
add
or
repnz
les
shll
xchg
rol
add
xor
inc
lea
adc
xor
cmp
stc
movsl
mov
test
popa
cmpsb
dec
pop
call
jae
dec
out
shlb
std
mov
push
mov
sub
sub
add
test
xor
aaa
icebp
iret
lcall
int3
mov
cltd
adc
mov
sub
add
sbb
js
adc
jne
dec
jae
mov
nop
mov
xchg
push
add
xor
fisttpl
push
idiv
sub
insb
sar
ss
int
ffree
mov
cmp
sar
xor
lds
insb
imul
or
cmp
test
jl
out
mov
sahf
inc
cmp
testl
dec
or
push
imul
lret
inc
mov
mov
es
clc
dec
xor
outsb
inc
mov
add
pop
and
and
ds
push
hlt
inc
daa
dec
xchg
pusha
sub
adc
push
shll
mov
negb
loope
sbb
jmp
jno
or
mov
hlt
cltd
inc
aad
rcr
movsl
movsb
adc
out
pusha
dec
popl
xchg
adc
std
and
lds
mov
xchg
fistps
cmp
pop
inc
aas
xor
repnz
daa
dec
or
testl
lcall
mov
sbb
mov
cmp
sbb
pop
sub
cli
mov
lds
xchg
enter
inc
and
sbb
mov
popf
pop
into
cltd
fisubs
adc
xchg
ja
mov
and
out
ss
pop
xorb
enter
cmp
out
movsb
inc
enter
lahf
add
out
mov
xchg
xor
adcl
add
in
xchg
ror
mov
sub
jecxz
scas
and
leave
js
dec
xchg
xchg
push
cmc
faddl
cltd
jl
pusha
xchg
cli
rcrb
cmpsb
pop
pop
xchg
movmskps
xchg
fwait
sub
es
rcr
adc
sbb
sbb
pop
xchg
ja
adc
xchg
inc
scas
outsl
aaa
fistl
jp
int
cmp
cmp
outsl
clc
rcrl
push
jp
xor
roll
stos
les
out
inc
inc
push
xchg
sub
add
pusha
sub
mov
adc
bound
pushf
lods
sbb
xchg
xchg
mov
call
cmpsl
call
loop
popf
repz
into
jae
lods
mov
push
ss
adc
jb
mov
cmp
outsb
sbb
roll
lahf
mov
lret
xchg
push
das
cwtl
fwait
test
les
jno
mov
push
inc
test
mov
push
xchg
cmpsw
scas
bound
jl
call
jne
das
inc
mov
add
and
push
out
or
and
fistps
xchg
rorl
cld
mov
push
mov
xor
dec
jle
orl
sub
sbb
xchg
cvtps2pd
int3
pop
push
add
mov
negb
pop
pop
sbb
sbb
and
pop
bound
ret
jno
jo
ret
daa
imull
cmp
addr16
mov
imul
sbb
sbb
cs
mov
inc
jl
dec
pop
jle
sbb
nop
icebp
sahf
outsb
cmp
add
mov
repnz
push
push
and
mov
leave
mov
or
mov
in
mov
xor
or
add
xchg
cmc
lock
out
jle
rcrb
test
cmpb
jbe
nop
mov
mov
std
repnz
dec
out
mov
jge
ja
fistpll
imul
and
pop
into
packsswb
lret
insl
mov
sub
cmp
push
jecxz
je
ss
ret
sub
js
push
imul
inc
xor
adc
or
dec
test
mov
pop
xchg
adc
repnz
hlt
mov
inc
mov
sar
cld
jmp
mov
jae
sub
xor
cs
bound
ljmp
test
jo
loope
and
ss
fbld
stos
xor
push
inc
lods
stos
mov
dec
lret
push
xor
dec
lahf
xor
xor
dec
movsl
push
insl
pop
lods
or
es
xchg
cwtl
adc
loop
mov
fbstp
cld
hlt
mov
negl
mov
sbb
pop
clc
jge
add
testb
mov
jl
iret
stc
sbb
cmpsb
leave
xchg
mov
loope
mov
add
push
sub
xor
add
lahf
sub
aaa
imull
ljmp
out
mov
shrb
aas
mov
icebp
inc
lods
sarb
mov
jb
testb
mov
jecxz
jo
sub
cltd
inc
loop
sbb
cmp
lret
into
cmp
push
sub
and
out
repz
clc
aad
push
dec
fwait
mov
mov
outsb
and
xchg
pop
shlb
lcall
inc
and
lret
mov
pusha
idivl
lahf
pop
ret
mov
add
outsb
xor
or
pop
insl
cld
cmp
test
add
ljmp
imul
mov
xchg
pop
lret
sub
jge
jno
sar
inc
decl
dec
in
nop
jecxz
mov
fmul
sbb
inc
jbe
pop
imul
mov
sub
incb
test
add
or
xor
pop
jge
inc
and
push
sarb
add
js
push
push
iret
in
add
adc
pop
dec
xchg
stos
nop
cmpsl
std
xor
ret
es
cs
cmpsl
push
mov
mov
popf
mov
mov
test
push
ljmp
cmp
mov
dec
jb,pn
xchg
push
sub
jecxz
orl
cmp
jl
sub
fwait
aad
movl
add
sub
fisttpl
add
dec
push
pop
popa
or
aad
mov
inc
testb
das
xlat
aas
aam
out
lahf
imul
or
mov
lahf
in
and
and
pop
sti
mov
insb
sbb
xchg
out
lods
dec
mov
jns
loope
outsl
mov
lcall
mov
or
movsl
jle
in
and
rcrl
adc
ret
test
sbb
popa
add
push
pop
arpl
dec
psubd
aas
cmc
or
inc
inc
fucomi
push
lock
lock
push
data16
leave
stc
js
and
pop
push
jb
sbb
enter
es
out
stc
ljmp
scas
xchg
in
cmpsl
xchg
inc
pinsrw
dec
dec
push
adc
shl
mov
pop
adc
enter
sub
add
inc
sbb
xorb
pop
outsl
and
push
div
pop
mov
test
imul
mov
pop
add
ss
inc
jle
mov
and
pop
int
xchg
loope
pop
push
pop
loopne
jge
enter
add
stos
mov
add
mov
pop
mov
adc
jg
fwait
int
fstpt
xchg
dec
jg
ljmp
int3
jne
das
inc
mov
mov
les
jno
into
aad
test
inc
pushf
mov
in
outsb
pop
sub
mov
push
xorl
ret
mov
in
sbb
jl
sbb
sahf
dec
hlt
leave
pusha
lods
fdivl
int
daa
add
into
stc
pop
xchg
mov
nop
push
xchg
cmp
pop
das
nop
mov
mov
xor
stos
js
fnstsw
call
out
mov
dec
mov
iret
mov
iret
and
jecxz
and
push
sar
and
push
mov
mov
into
popf
out
add
inc
add
push
cmpsb
xlat
rolb
loopne
stos
sbb
jbe
in
jo
mov
jmp
aas
xor
in
out
push
cmc
dec
test
lcall
fisttpll
add
pop
call
push
push
rclb
jg
fisttpl
pop
icebp
pop
in
imul
xor
pop
enter
add
icebp
inc
iret
push
scas
dec
push
repnz
lcall
cli
mov
bound
jge
inc
or
pop
mov
mov
sbb
sub
mov
and
jbe
adc
nop
imul
movsl
cmpsl
outsl
sbb
lea
push
cmp
xorb
cs
cmp
iret
sbbl
pop
mov
aam
imul
repz
xor
test
fsubrs
and
shl
pop
test
mov
notb
ret
insl
fcomps
mov
outsl
jnp
mov
push
repz
fdivs
push
out
xorl
popa
sub
jmp
inc
mov
andb
cwtl
roll
rcr
xor
ffree
loopne
aam
push
sahf
mov
leave
in
imul
cli
dec
iret
add
dec
roll
stos
arpl
std
cwtl
xor
lahf
call
cmp
dec
sub
hlt
loope
lcall
and
ret
xor
lret
sbb
jl
sti
imul
xchg
mov
mov
addb
push
push
gs
dec
mov
or
push
dec
or
pop
inc
in
lods
pop
push
jne
jno
in
pop
xlat
jge
clc
fdivrs
inc
and
push
out
mov
inc
dec
push
pop
pop
add
xchg
mov
jl
push
fisubl
call
cmpsl
pop
mov
jg
push
popf
inc
iret
loopne
cld
fcoms
cld
mov
cmp
or
push
push
adc
or
aaa
std
enter
imul
xor
cmp
dec
adc
subb
aaa
cmp
shlb
push
jp
pop
jns
jne
sub
fcompl
outsl
xchg
sub
dec
sti
mov
pop
test
or
push
or
inc
rorb
dec
pop
popf
add
xchg
das
out
aam
mov
aam
add
std
mov
in
pop
and
stos
or
dec
pop
cld
and
sbb
push
aaa
std
add
sbb
lret
stos
es
shl
xchg
cmp
int3
fists
mov
push
pop
or
lods
push
mov
in
pop
inc
lds
adc
push
insb
pavgw
mov
lock
andl
inc
and
mov
sbb
enter
fmul
mov
push
dec
fsubr
test
dec
lcall
je
cmp
push
pop
cmpsl
mov
jp
in
lds
cmp
add
ret
adc
cmp
and
inc
and
in
cwtl
outsb
test
and
xorl
in
adcl
les
push
sub
mov
push
ret
and
adc
es
in
jno
dec
stos
aad
add
aad
loop
inc
or
xchg
and
inc
filds
out
push
pop
inc
mov
cs
xor
and
jbe
je
pop
dec
bound
repnz
sbb
pop
repnz
xor
xchg
call
add
mov
ja
sbb
xlat
out
and
lods
pop
and
dec
addr16
rcrb
jnp
js
jbe
loop
inc
in
shrb
xchg
jno
push
decl
inc
adc
push
add
push
xchg
inc
std
dec
push
rolb
arpl
inc
add
pop
popa
or
fsubrs
in
xchg
in
inc
fstpt
in
jae
and
lds
hlt
fsubl
movsb
pop
fcoml
aaa
and
das
jnp
xchg
sti
add
sbb
aas
test
je
in
sahf
push
dec
mov
call
push
adc
add
jo
add
inc
cmc
adc
leave
jl
repnz
aad
or
dec
es
out
sbb
sub
inc
jnp
pop
jae
fdivl
dec
sub
xchg
leave
xchg
cli
ljmp
adc
pusha
sub
jecxz
sti
mov
add
and
and
inc
mov
dec
mov
push
add
pop
test
ds
mov
in
inc
ljmp
jne
aaa
sub
mov
or
jg
cmp
movsl
mov
mov
std
jns
vmwrite
sub
jg
add
pop
je
inc
jne
xchg
xchg
je
push
outsl
lock
mov
sbb
sbb
icebp
faddl
orb
mov
lock
xor
dec
arpl
lret
jp
in
jno
adc
clc
cs
data16
popa
mov
fdivs
scas
cmp
cmp
dec
sbb
mov
mov
cltd
push
jmp
inc
add
lret
in
jge
mov
add
cmp
je
mov
in
filds
enter
popa
sahf
xchg
fldl
adcb
sbb
sub
pusha
clc
mov
into
out
push
cltd
mov
lods
sub
test
and
xchg
or
adc
jbe
outsl
out
sbb
icebp
in
fisubs
or
push
xor
jne,pt
dec
stos
dec
inc
pop
data16
mov
repnz
jb
sbb
repnz
dec
mov
lahf
popa
mov
fdivr
jbe
mov
in
mov
cmp
pop
xchg
xchg
add
mov
movsb
mov
xchg
pop
mov
stos
add
push
xor
mov
cs
or
dec
push
jmp
push
and
inc
mov
pop
rcrl
pop
mov
arpl
xor
mov
mov
push
xchg
jmp
xor
fwait
bound
icebp
insb
jno
outsb
mov
mov
icebp
test
add
mov
xchg
cmp
and
insl
add
mov
clc
xchg
mov
ret
xor
stos
sub
xchg
add
imul
call
push
dec
mov
push
xchg
lock
pop
pop
pop
outsb
test
and
adc
cmp
mov
cli
stc
mov
push
icebp
sbb
test
mov
mov
stos
cmp
shr
movsb
dec
add
jo
test
loope
jg
mov
xlat
sub
shlb
fs
jg
mov
loopne
mov
xor
jnp
arpl
and
out
mov
bound
sbb
add
cli
push
cmpsl
xor
std
stc
nop
sti
adc
or
adc
inc
mov
or
jle
pop
pop
dec
shrb
sub
lods
fisttps
cmc
ret
inc
and
push
out
daa
sahf
movsb
pop
hlt
pop
mov
push
in
push
sbbl
orl
mov
push
mov
sarb
cmp
sbb
test
add
mov
ret
pop
enter
in
and
cmpsb
adc
aaa
test
and
dec
mov
mov
cwtl
gs
mov
or
cmp
lea
fnstcw
mov
dec
and
sar
ds
cld
dec
dec
jo
xchg
pop
call
out
out
in
inc
jne
or
pop
sbb
addr16
dec
cld
or
push
or
in
dec
aam
mov
lahf
xor
clc
repnz
test
xor
jmp
subb
sbb
lahf
cmp
aas
dec
sbb
adc
ja
jmp
sub
imull
jb
call
sti
adc
fcoml
repz
int
jb
push
adc
push
pop
xchg
dec
lds
mov
sbb
cld
xchg
fwait
andb
xchg
and
fsubl
jg
js
gs
and
ds
call
sub
enter
and
ds
xchg
cmp
lret
sub
inc
jns
mov
dec
sub
in
xor
inc
popf
xchg
repnz
stc
cltd
test
adc
or
bnd
mov
or
xchg
mov
adc
mov
xchg
mov
jae
fildll
sahf
int
imul
imul
mov
cwtl
jmp
or
sub
ds
xchg
les
aad
sub
adc
std
sub
jg
push
enter
jne
cmc
hlt
adc
repnz
or
mov
pop
test
cmpsl
mov
popf
push
xchg
jle
ret
loopne
ss
arpl
scas
sub
push
test
hlt
js
cmp
sub
inc
mov
jp
mov
jmp
iret
dec
push
xor
ljmp
pop
sbb
stc
add
mov
cli
or
mov
icebp
xchg
sahf
and
or
xor
sahf
cmp
cld
testb
adc
shll
jns
xor
push
push
mov
and
aas
cwtl
cmp
mull
in
andb
int
push
test
fsubrp
xchg
inc
outsb
pop
or
fistl
aam
addr16
inc
in
imul
dec
sub
and
mov
icebp
dec
and
shl
iret
or
mov
mov
lcall
xchg
rcrl
mov
mov
mov
nop
fwait
adc
cmp
sbb
je
pop
mov
jle
and
sub
or
adc
sub
scas
or
add
scas
inc
dec
mov
roll
pop
in
icebp
ja
push
iret
sub
mov
dec
jle
cmpsb
out
adc
enter
dec
and
jnp
pop
test
mov
shrb
les
sub
rcrl
scas
aas
xchg
sbb
es
or
mov
icebp
popf
adc
mov
mov
mov
dec
add
pop
mov
push
adc
bound
inc
js
loopne
arpl
sbb
dec
mov
fiaddl
mov
push
adc
jo
insl
mov
jne
outsl
scas
jl
jb
ds
cmp
jne
mov
int
gs
and
wrmsr
push
push
fcoml
repnz
fwait
lret
dec
mov
mov
add
rcl
shrl
mov
jg
jecxz
inc
cmpsb
cmpsb
dec
mov
in
push
sbb
hlt
cmp
fs
cmp
test
mov
lds
push
mov
sub
sub
ss
xor
xchg
idivl
orl
daa
fsubr
loope
dec
rolb
out
adc
inc
adc
jle
aam
scas
inc
mov
jb
stos
mov
pop
cmp
xchg
es
in
pusha
sbb
stos
mov
push
pop
mov
shlb
test
lea
add
and
sub
cs
add
mov
sahf
lret
outsl
push
bound
cmc
dec
mov
mov
adc
and
lcall
jle
pop
xor
seto
xor
sub
outsb
jg
int
out
test
movsb
mov
loop
adcb
out
or
sbb
cmpb
lret
imul
mov
test
dec
in
sarl
push
movsl
hlt
pop
daa
sub
shl
imul
lods
push
add
cmp
sub
inc
leave
push
insb
and
andb
cmpsl
or
clc
mov
jle
cli
sub
je
sahf
inc
js
lret
xor
loopne
jl
cmp
aam
fidivrl
pop
out
or
xchg
enter
dec
out
push
stos
out
pop
cmp
addb
mov
adc
push
and
cmp
jle
scas
jl
test
add
cmpsb
pop
fcmove
insl
push
adc
pusha
ret
imul
fld
mov
rcrb
fiaddl
cld
sbb
pop
adc
add
add
out
pop
dec
stos
push
push
mov
in
push
mov
jecxz
push
popf
xchg
out
ret
jge
inc
mov
jne
sbbb
jne
ret
xchg
sarl
sub
adc
lds
lret
ja
and
pop
fcoml
ret
push
cmp
dec
js
hlt
adc
xor
sbb
hlt
cmp
adc
push
jmp
scas
loop
mov
mov
dec
stos
and
xchg
lods
xor
adc
add
imul
xlat
lds
push
icebp
pusha
or
sbb
mov
imul
lea
in
insl
sub
cmpsl
push
cmpsl
dec
stc
pushf
int3
sbbb
in
inc
cmpsl
mov
push
fwait
push
sub
fyl2x
clc
add
call
lret
add
std
sti
mov
dec
sbb
mov
inc
inc
mov
cmp
in
jns
jae
ljmp
mov
iret
lock
cmp
adc
mov
adc
lds
jg
imul
cmp
dec
loopne
imulb
imul
mov
dec
pop
dec
sub
lds
jge
sub
sub
mov
fldt
leave
push
stos
mov
pop
push
std
clc
mov
sub
add
js
hlt
fs
inc
cli
push
mov
fsubrl
icebp
mov
aas
pop
mov
loope
mov
dec
xchg
jne
ds
lea
addr16
aaa
pop
pop
mov
sbb
and
xor
es
lock
xor
adc
in
push
call
push
xor
dec
cmpsl
loope
cmp
mov
push
mov
in
dec
aad
cmp
test
xchg
cmp
mov
aas
sub
shrb
ret
sbb
fsubr
roll
jbe
xchg
jg
out
xchg
push
xor
mov
mov
loopne
into
push
stc
and
call
shufps
dec
push
mov
pop
xlat
xchg
roll
into
jno
cli
add
adcl
outsl
dec
xor
and
cmpsb
jl
lcall
jns
jb
mov
sub
cltd
push
lret
mov
add
scas
cmp
pushf
sbb
mov
pop
pop
add
mov
jl
hlt
out
jmp
scas
xchg
das
int
sbb
mov
popa
jg
sbb
jecxz
push
cld
loopne
and
decb
mov
jnp
test
test
cmpsl
ds
mov
adc
inc
pop
xchg
into
call
add
pop
push
or
lods
jle
mov
pop
negb
sub
sbb
fsub
push
movsb
fnstcw
fs
mov
or
test
inc
cld
mov
cmp
icebp
jns
jno
xchg
lods
out
adc
sahf
stos
icebp
sbb
jae
clc
xchg
mov
js
sub
dec
adc
test
inc
lea
xchg
jae
lsl
je
mov
adc
xchg
mov
jge
ror
dec
lcall
in
dec
dec
cs
push
inc
cmp
es
jecxz
sub
imul
repz
fcmovnbe
jge
repnz
sub
pusha
in
mov
sbb
cmp
loop
mov
sub
icebp
in
push
mov
js
fdivr
repz
mov
in
ret
sbb
mov
sub
cmpsb
jne
sahf
scas
scas
movsl
test
addl
outsl
xor
sbb
lahf
ficoml
jge
ja
xchg
aaa
outsb
xchg
rorl
in
sbb
pop
in
jp
popa
imul
adc
repnz
pop
in
and
pop
pushf
mov
mov
das
enter
daa
jmp
stc
cmp
mov
fcmovnb
les
or
insb
or
xchg
test
xchg
push
cmp
pop
daa
inc
jnp
push
xchg
cwtl
xor
sbb
movsl
repz
insb
rorb
dec
cmpl
test
xchg
pop
cltd
aad
inc
mov
sbb
idivl
stc
xchg
and
imul
xchg
xchg
in
mov
or
push
xchg
xchg
imul
jmp
mov
adc
pop
scas
orb
pop
inc
or
or
mov
and
cwtl
insb
adc
xor
jle
mov
adc
xchg
and
into
cwtl
inc
je
jmp
pop
xor
mov
push
jle
aam
imul
cmpb
xor
scas
imul
sti
mov
inc
add
loope
fs
and
or
das
addl
scas
xor
shl
mov
sbb
sbb
cwtl
inc
movsb
in
js
int3
ja
js
fdivp
gs
pushf
inc
push
dec
xor
push
dec
pop
jecxz
repnz
push
out
xchg
cwtl
sbb
ja
or
outsb
test
mov
pop
loopne
inc
push
pushf
push
int
xchg
mov
sbb
add
xor
sub
or
iret
pusha
adc
dec
pop
pop
xchg
xor
imul
int3
or
les
xchg
mov
push
ja
imul
jle
cmp
adc
and
in
jns
aaa
or
inc
mov
mov
fmul
shrl
jge
push
hlt
mov
add
cltd
imul
pop
call
jns
mov
sub
sub
jmp
jae
imul
mulb
inc
outsl
lods
cltd
jns
rorb
push
sbb
rol
js
or
outsl
das
scas
rorl
add
sbbl
test
pop
popf
xchg
aad
shlb
mov
mov
jbe
in
jmp
pop
inc
loope
out
and
cmp
movsb
push
cli
insb
mov
jae
fsubrl
dec
or
pop
mov
ljmp
cwtl
arpl
sbb
pop
push
test
and
jne
cmp
mov
pop
or
mov
inc
dec
pop
pop
fsubrl
xchg
jp
es
mov
inc
pop
xor
or
jmp
dec
insb
fwait
sub
stos
bound
loope
mov
jb
push
mov
loopne
stos
cltd
call
sbb
aad
icebp
jg
push
in
clc
leave
cmc
fwait
cltd
enter
push
mov
sar
mov
sbb
pusha
mov
cld
adcb
test
fisttpl
sbb
ja
cltd
arpl
addr16
shrb
inc
inc
add
inc
sub
dec
jmp
roll
loope
adc
mov
idivl
and
jbe
xchg
add
push
jmp
cli
dec
sub
cmp
cwtl
rcrb
xchg
mov
into
adc
pop
dec
xchg
fsts
pop
xor
dec
enter
lods
cmp
ds
cmp
adc
nop
sbb
sub
movsb
add
xchg
jge
sbb
jae
outsl
loop
mov
clc
sub
jl
sahf
sub
pusha
and
test
aam
xchg
lcall
and
and
sbb
es
xor
pushf
sub
fsubl
xchg
jne
lock
ror
xor
jmp
jle
out
sub
mov
sbb
mov
mov
lock
jg
xchg
pop
mov
notb
mov
int
sahf
xchg
dec
idivb
push
rolb
pop
adcl
and
sub
cmp
cld
jg
outsb
roll
lods
rorb
fwait
in
and
cld
and
push
shlb
xor
es
cltd
push
dec
mov
rol
fmuls
leave
outsl
dec
inc
lods
cltd
push
movsl
adc
dec
push
inc
mov
sbb
mov
add
aas
push
adc
add
incb
mov
xchg
popa
lea
add
fistl
pop
mov
into
dec
pop
sub
ja
inc
lds
ds
int3
sbb
lcall
jne
shll
mov
scas
aad
add
fs
push
inc
adc
and
inc
dec
in
les
dec
sbb
ljmp
stos
cmp
daa
and
in
cmpsl
lods
shr
pusha
inc
push
cmp
and
cmp
lret
cmp
inc
inc
xchg
mov
jo
mov
dec
xor
adc
stos
aas
out
pop
xor
push
cmp
push
stc
js
add
cmp
mov
or
sbb
push
es
pop
scas
cmp
fstpt
mov
subl
and
fdivrl
add
dec
ljmp
or
sarb
dec
inc
and
cld
and
arpl
xchg
jno
scas
jnp
inc
arpl
daa
outsl
adc
jmp
pop
xchg
cmp
push
out
xor
call
movsl
nop
movsb
cmpsl
orb
mov
es
pop
add
or
shl
loop
inc
fstpt
jnp
dec
xchg
popf
shll
dec
inc
adc
inc
imul
repz
dec
jno
jnp
repnz
push
aaa
insb
adc
int
push
push
mov
movsb
stos
nop
xchg
cmpsb
mov
sbb
ret
inc
jo
jp
test
xor
cli
jb
adc
lahf
addr16
lds
adc
repnz
sbb
adc
jo,pt
imul
aad
and
pop
mov
xor
sar
mov
and
icebp
enter
mov
or
xchg
inc
andl
jecxz
xchg
int3
xor
or
sahf
mov
popa
negl
push
xchg
movsl
notl
stos
cmp
cltd
sahf
sti
or
mov
aaa
rcll
lcall
jp
pop
push
jbe
jl
push
xchg
neg
sbb
or
test
sub
lods
xlat
xor
push
sbb
fstps
mov
xchg
pop
sbb
incl
sub
jg
push
icebp
les
pop
xchg
test
dec
into
movsb
pop
pop
pop
inc
mov
or
sub
lret
in
out
ja
in
inc
mov
push
jns
jle
jo
popf
cmc
dec
movsl
inc
inc
or
bound
inc
sbb
in
adc
push
sbb
mov
adc
xlat
jmp
scas
or
pop
clc
and
mov
imul
int
out
dec
jge
sbb
lea
sub
jnp
pop
ficoml
repnz
lea
sub
enter
sub
fs
jecxz
mov
ret
cmp
ljmp
jge
push
orl
jae
sbb
jg
mov
pop
outsb
adc
pop
xor
cmp
out
dec
cmc
popf
shl
xlat
stos
jp
pop
xor
lret
loopne
leave
das
stc
xorl
int3
pop
jmp
adc
aaa
outsl
loopne
testl
dec
aas
mov
mov
push
jb
shlb
addr16
int3
sub
xchg
mov
mov
fld
das
push
push
iret
inc
std
cmpsl
cltd
cmp
out
loope
push
pop
push
pop
xchg
popf
inc
decl
popa
pop
lcall
cmp
clc
xor
mov
ret
pcmpeqw
stc
jo
popa
clc
ret
sbb
jl
rorb
cs
movl
out
mov
xchg
jp
fs
jle
sbb
and
xchg
sbb
sbb
inc
cmp
stos
out
mov
xor
pusha
adc
insb
inc
out
mov
scas
in
scas
repnz
pop
mov
enter
pop
movsl
sub
add
movsl
push
enter
sbbb
pop
in
xchg
loop
addr16
idiv
pop
adc
shl
ss
mov
pop
scas
mov
into
in
adc
push
or
in
mov
loopne
push
sbb
pop
ror
outsb
cmp
cmc
ret
add
inc
pop
sub
call
in
pop
add
les
cld
aam
pushf
inc
pushf
mov
push
inc
std
ret
xor
loopne
icebp
mov
cltd
and
jl
add
rcll
imul
aaa
ds
add
insb
xchg
dec
and
pop
and
ret
sti
mov
dec
fwait
dec
cmpsl
andl
scas
icebp
leave
mov
and
add
addr16
jns
pop
adc
in
orl
mov
sbb
dec
ficomps
pushf
push
rol
add
mov
sub
jp
jns
cmpsb
test
bswap
shr
out
and
jb
pushf
push
addr16
cmc
data16
lods
and
dec
push
xor
aaa
daa
or
pop
adc
and
xchg
cltd
test
jecxz,pt
scas
aam
mov
jnp
pop
add
cmp
jge
or
loopne
imul
data16
jno
pop
inc
lods
ljmp
sbb
dec
js
inc
xchg
jb
gs
xadd
fsts
cwtl
arpl
popf
out
and
shrb
lods
outsl
mulb
stos
fildll
sahf
mov
cmc
push
cmp
sbb
lds
and
pop
addr16
cmpsl
lahf
popa
xchg
fsubrs
test
dec
sbb
xchg
xchg
orl
adc
mov
adc
das
lret
mov
push
rorb
cmpsb
clc
or
adc
mov
push
sbb
aas
pop
dec
incl
jle
add
jbe
cmp
rcll
test
outsl
pop
sub
mov
popf
cmc
movsl
lods
popa
mov
movsb
aad
cmp
inc
mov
mov
test
stos
mov
cs
bound
andb
aas
sarl
xor
test
rcrb
lret
dec
mov
xchg
xor
sbb
or
jmp
xor
lcall
lea
pushf
adc
aas
pop
addr16
sbb
mov
or
pop
add
aaa
dec
aad
mov
mov
fdivrs
shll
aaa
std
stos
cmp
mov
mov
jae
fisttpl
mov
frstor
inc
sar
pop
cmp
push
jecxz
push
xchg
cmpsb
inc
xchg
pop
iret
xchg
cmp
push
adc
pusha
pusha
pop
clc
call
mov
rclb
xchg
mov
in
ret
call
xchg
leave
lret
popa
jecxz
and
inc
cwtl
sbb
sub
inc
sbb
jmp
mov
or
mov
jns
sub
and
pop
into
add
in
popf
loope
jae
mov
rcl
dec
js
jle
ret
repz
or
add
mov
adc
in
shlb
sub
xor
ficompl
popf
adc
mov
pop
js
xchg
jg
push
lods
outsl
lret
push
push
xchg
fcmovnu
js
xchg
pop
mov
lret
bswap
gs
or
test
xor
loopne
mov
or
add
loop
xchg
cmp
mov
mov
cmp
xchg
mov
sbb
cmp
daa
out
jb
lret
jecxz
xchg
xor
ljmp
jnp
repz
sub
inc
jg
push
loop
mov
and
mov
nop
pop
xchg
andb
incl
sbb
sbb
insb
inc
in
mov
lahf
xchg
lahf
loopne
loope
imul
mov
lods
mov
xor
aaa
test
mov
stos
mov
inc
xor
dec
mov
push
push
nop
cmp
fists
rclb
nop
outsl
dec
imul
cli
pop
fstl
push
or
ret
adc
mov
jp
mov
cmp
mov
ds
repnz
adc
pop
cli
dec
dec
rcrb
add
mov
xchg
insb
popa
insb
psrld
xchg
mov
push
cmp
and
lock
ja
inc
inc
xchg
sub
sarl
mov
dec
jo
fwait
jmp
les
jg
cmc
sbb
nop
adc
ljmp
roll
jge
mov
sbb
pop
cmp
ja
lcall
cs
lret
andw
jae
mov
and
sbb
fsubrs
xlat
imul
push
in
dec
adcl
shll
pop
lahf
lods
push
xor
ror
bound
dec
push
aaa
arpl
int
out
sub
sub
jmp
jle
sub
icebp
jecxz
mov
push
call
pushf
fidivl
jae
adc
arpl
repz
cmp
test
jbe
out
rcr
mov
rcrb
movlps
fstps
inc
xchg
in
inc
xchg
inc
imul
in
xor
sti
icebp
fwait
cmp
repz
xlat
je
add
mov
in
lea
cwtl
mov
push
sub
dec
push
iret
pusha
pop
sub
fwait
out
sti
inc
mov
cmp
jno
mov
and
mov
iret
stc
loopne
xor
jne
movsb
lret
add
clc
pop
cltd
repz
clc
cs
hlt
stc
fadds
push
addr16
cmp
jb
outsl
repnz
fcomi
jg
jae
dec
stos
pop
enter
sbb
scas
int3
insl
jne
inc
call
loope
sub
nop
mov
pusha
out
sub
mov
cmpsl
lock
mov
inc
inc
shrb
dec
fwait
jo
inc
test
mov
scas
xor
out
shll
stc
or
adc
in
adcl
cmpsb
mov
mov
lret
mov
cmp
pusha
mulb
imul
mov
shll
mov
bound
fs
jnp
and
inc
sarl
pop
mov
mov
lds
test
push
divb
pmaxub
imul
jl
pshufw
sbb
insl
mov
cmp
or
push
mov
les
xchg
xor
outsl
cmp
mov
mov
or
mov
pop
pop
sbb
addr16
fisttps
enter
shl
sbb
cli
pop
push
sbb
lds
ja
adc
loop
ljmp
cwtl
out
sub
xchg
push
xchg
scas
incl
idivb
lods
enter
jo
out
cmp
scas
or
mov
fldcw
imul
push
cwtl
pop
mov
adc
dec
pop
loope
lret
mov
push
out
fmul
xchg
lea
inc
jl
jecxz
push
jge
dec
push
shl
jmp
loope
sarb
int
jbe
xlat
loopne
call
test
xor
jmp
jg
faddl
jns
inc
iret
mov
xchg
push
leave
nop
pop
addr16
or
fxch
jne
xchg
je
jecxz
xor
xchg
xchg
pusha
leave
and
xchg
aad
pusha
cmp
std
in
jge,pn
dec
int3
pop
loopne
mov
out
add
mov
sbb
stc
or
add
jne
mov
js
jg
cmovp
pop
clc
cvtps2pd
shlb
movsl
jmp
loopne
ret
je
xchg
jae
cmpb
fistl
sub
dec
jecxz
or
js
loope
adc
push
xchg
xor
cmp
fs
pusha
insb
jo
push
das
xor
pop
add
xchg
imul
js
lahf
mov
test
test
push
xchg
lret
mov
push
aad
inc
call
addr16
das
pop
std
jl
sbb
jns
ljmp
add
mov
mov
mov
xor
arpl
xor
jecxz
jno
scas
inc
xor
inc
cmpsl
sub
xchg
jb
loop
outsb
inc
mov
test
ds
push
and
dec
icebp
rcrl
movmskps
aam
hlt
dec
test
fiadds
rcrb
add
add
xor
mov
push
jge
test
cmpxchg
pusha
data16
cs
movsl
jl
push
std
adc
cmp
lahf
outsb
xchg
fildll
lods
push
fisttpll
insl
sti
sub
fiaddl
mov
jo
sbb
pop
xor
loop
mov
scas
orl
pop
lcall
test
ljmp
data16
xchg
outsl
lret
xor
pop
arpl
ret
out
out
pop
inc
rcrb
sub
popl
dec
dec
mov
push
daa
ss
iret
dec
sub
xchg
and
adc
sub
push
das
adc
fs
rcrl
in
fistl
sub
jecxz
stc
xchg
adc
out
and
sbb
ss
fidivl
mov
lcall
out
jp
ret
push
aad
or
pop
jl
js
xor
lock
or
jnp
xchg
cmp
pop
pop
mov
dec
icebp
or
adc
mov
repnz
push
sub
imul
scas
inc
scas
jnp
sub
mov
inc
mov
push
ret
sub
mov
mov
mov
daa
xor
mov
mov
stos
inc
stc
insl
orb
test
pop
push
mov
inc
pop
and
push
xchg
push
in
xor
lds
sub
loope
push
rcll
into
add
cld
cmp
or
aad
test
fwait
cwtl
bound
cmp
test
daa
pusha
cltd
sub
mov
xor
push
in
test
xchg
push
cmp
loopne
mov
sub
mov
dec
xchg
outsl
adc
push
mov
dec
sub
inc
rcr
arpl
mov
mov
shlb
pop
push
adc
mov
cmp
cmpsb
cmpsl
jmp
rcr
aaa
lcall
daa
imul
popf
mov
xor
push
sub
cltd
aaa
or
lods
fidivl
aad
cwtl
inc
mov
push
mov
pop
sub
notb
adc
dec
or
or
or
xchg
mov
cmp
dec
sar
sub
mov
xchg
mov
adc
and
lahf
cmp
push
dec
mov
inc
jl
sub
sbb
es
outsb
clc
mov
call
xchg
lock
xor
cmp
add
test
push
push
ss
loope
aad
arpl
inc
mov
aaa
test
int
mov
sahf
shll
xor
mov
jmp
shl
lcall
mov
cmp
mov
imul
push
into
imul
inc
sbb
push
cmp
lock
insb
lcall
fstps
cmovnp
rcl
scas
cmp
in
add
xchg
frstor
adc
xor
pushf
in
cmp
in
fcompl
aas
stos
dec
in
xor
mov
ljmp
divl
stos
add
out
mov
fisttpl
sbb
sbb
dec
push
leave
xor
mov
ds
sbb
aaa
xchg
iret
pop
cmc
mov
cmp
push
dec
and
lret
jo
sub
cmp
add
fxrstor
into
test
mov
es
pop
xor
cmc
or
adc
add
clc
ss
ss
sbb
fdivrs
mov
fldcw
cmc
mov
pop
aam
repnz
stc
mov
addr16
in
inc
adc
popa
test
push
add
mov
sbb
aas
aaa
xor
sub
jl
pop
flds
or
jl
bound
dec
pop
xor
adc
hlt
xchg
sbb
xchg
mov
inc
fcoml
rclb
out
cmpsl
mov
fiadds
fidivrs
adc
or
xchg
sub
out
mov
in
lahf
inc
add
xchg
mov
test
testb
or
or
adc
fsubrs
mov
fcompl
mov
cli
adcl
pop
or
mov
sti
clc
lret
and
out
test
repz
mov
inc
and
pop
xor
pushf
and
cmp
cmp
dec
adc
mov
int3
data16
lock
in
fldenv
or
lds
sbbl
lods
mov
sub
mov
sub
xor
dec
or
loope
mov
mov
push
dec
and
jg
mov
icebp
dec
mov
jecxz
rcrb
daa
add
xor
popl
test
fwait
push
inc
call
lods
in
pop
lahf
sbbb
push
aad
pusha
or
dec
jae
fwait
adc
mov
add
fimuls
data16
cmp
ljmp
or
out
pop
ja
inc
and
mov
mov
aad
aaa
jnp
add
lods
fimuls
push
call
pop
pop
das
testb
lods
inc
mov
pop
sub
pop
jns
push
adc
std
outsb
inc
xchg
test
bound
jbe
mov
jg
lods
push
add
adc
nop
sbb
call
popa
mov
arpl
ss
insl
cld
add
andl
and
and
xchg
mov
insb
mov
xchg
hlt
test
inc
ds
mov
cmp
jmp
xor
rorl
cwtl
enter
cltd
ret
popa
popf
repz
int3
lcall
push
jmp
pop
sbb
xchg
out
fs
push
and
or
test
daa
fcmovbe
out
shr
aam
mov
xor
imul
and
cmp
vcvtdq2ps
imul
xor
pop
push
aaa
inc
mov
lret
je
out
cmpsl
xchg
adcb
or
loope
mov
jecxz
xchg
cli
in
lret
cmc
mov
sbbb
add
pop
and
shrl
popf
lods
adc
fwait
sub
xchg
pop
adc
inc
jo
push
in
push
mov
inc
cmp
push
jle
dec
mov
loop
push
in
leave
aas
mov
fcos
cli
sti
incb
lcall
lods
outsl
out
jb
pop
jge
xor
xchg
xor
mov
decl
cs
outsl
roll
pop
jmp
out
dec
and
cmp
scas
fdivrs
out
fisttps
fmul
add
or
test
scas
idivl
je
or
ficoml
sti
fwait
push
insl
add
out
aam
sub
shlb
mov
pop
add
sbb
push
in
jo
dec
sbb
test
push
sbb
dec
pop
movsl
out
jmp
sub
push
dec
aad
sbb
imul
rclb
sub
mov
push
mov
jno
dec
cmc
sbb
xorl
dec
les
push
pop
fwait
push
xchg
mov
jg
fiaddl
dec
test
mov
enter
sub
pushf
xchg
fsubl
push
sub
incl
aas
hlt
mov
jecxz
push
add
push
adc
scas
and
lock
rclb
arpl
jbe
test
imul
and
or
xchg
add
cli
scas
sbb
sbb
iret
add
call
daa
lret
push
lahf
pop
in
iret
lret
dec
jle
fsubr
mov
cmp
int
movsb
cmp
rcrb
push
data16
add
lds
jmp
adc
iret
push
xchg
mov
jmp
sbb
in
dec
sbb
fisubl
cmp
pop
jge
mov
aaa
push
orb
xor
ss
or
jl
pop
into
das
aam
adc
aas
mov
leave
dec
dec
ss
sti
cmc
mov
sub
cmp
mov
mov
cmpb
dec
gs
iret
mov
jnp
mov
rorb
mov
jno
xchg
shlb
fcmovu
hlt
ret
punpckldq
rorl
and
cli
jmp
add
push
and
xchg
movl
mov
xchg
dec
stos
lea
movsb
pop
xor
mov
int3
mov
push
test
jb
jns
out
pushf
andb
jnp
mov
sbb
pop
das
sub
sbb
iret
xchg
movsb
daa
mov
adc
scas
cld
xchg
insb
sbb
insb
cs
jo
pop
lock
xchg
push
cmp
dec
xor
pop
mov
in
and
in
out
inc
mov
lret
push
repnz
cmp
jg
aas
lods
jp
dec
faddl
mov
pop
outsl
mov
jge
je
lds
mov
rol
idivb
popf
or
subl
and
stos
and
fs
aad
hlt
inc
xor
fcompl
xchg
jb
shl
pushl
ja
stos
xchg
mov
rcrl
mov
andl
scas
shl
int
push
das
out
inc
mov
jmp
outsl
adc
inc
iret
popa
and
pop
push
jg
jo
jo
mov
sbbl
inc
in
gs
pop
push
addr16
in
ss
adc
jb
int
stos
int
adc
andl
cli
ja
outsl
or
xor
orl
push
inc
cmp
das
outsb
dec
xchg
cmp
jno
xor
mov
or
ret
pushf
or
mov
gs
add
sahf
test
test
sbb
xchg
xchg
mov
dec
nop
dec
inc
mov
push
mov
jb
std
sub
xor
jl
cltd
sub
xchg
cmp
repnz
xchg
dec
adc
std
pop
clc
dec
lret
aam
cld
dec
das
xor
mull
push
pop
xchg
or
ret
jae
jno
js
lcall
sub
pop
xchg
inc
rcrl
sbb
push
jae
hlt
sub
jbe
inc
aad
lret
fcoml
pop
mov
or
jae
aas
in
scas
lods
cmp
mov
sarl
inc
cmp
cwtl
and
lcall
insl
arpl
pop
in
mov
mov
mov
daa
cmp
out
cwtl
lret
xchg
lret
dec
pop
repz
scas
add
test
js
sub
xchg
ds
cmp
out
sub
pop
cmp
pusha
add
pop
sub
fdivr
or
jmp
pop
mov
mov
sbb
fadds
imul
mov
ret
loop
daa
jp
ss
push
test
mov
jecxz
repz
cmp
xor
dec
lea
pop
mov
shl
xor
mov
sahf
adc
mov
or
aam
aad
lea
mov
lods
cltd
int3
cmp
push
mov
das
mov
pushf
das
or
jns
into
pop
lcall
dec
xchg
mov
inc
add
xchg
and
imul
sbb
insl
ds
ds
aaa
ja
xchg
lods
pop
dec
xchg
cmp
xor
sub
inc
cmp
push
jae
cmp
and
icebp
cwtl
push
and
xchg
jb
rol
cmp
inc
or
cmp
sub
push
xor
xor
mov
movsb
fsts
adc
sub
mov
sbb
pop
mov
test
and
add
mov
mov
xor
dec
cltd
mov
xlat
mov
in
dec
push
lret
test
in
scas
lea
pop
enter
outsl
adc
pop
pop
xor
orb
jb
mov
cmp
mov
test
xor
mov
mov
insb
xor
movsb
and
push
adc
push
inc
xorl
fildl
mov
dec
sub
jmp
stos
fwait
push
les
jge,pt
ficoml
push
lcall
fistl
xchg
mov
fisubrl
jmp
out
stos
rcr
inc
shufps
mov
jmp
jp
xor
aas
xchg
mov
fildl
cmp
fdivl
push
imul
adc
dec
in
push
cmp
fs
clc
js
add
mov
xchg
mov
and
mov
out
and
mulb
jne
sub
adc
and
cmpsl
lods
scas
sub
ficompl
faddl
imul
jl
out
cmp
sahf
mov
test
or
roll
adc
arpl
fildl
loope
cmp
lds
jb
mov
testb
sub
jb
fwait
mov
sub
lret
jbe
or
popf
mov
lret
sbb
push
out
insb
data16
into
xorl
xchg
outsl
jge
int3
shrb
xor
in
pop
lock
jmp
xchg
jg
inc
dec
add
test
cmpsb
xor
shll
sahf
jp
mov
cmp
iret
sub
mov
push
pop
adc
ret
loop
mov
mov
test
lock
jle
add
lahf
pop
pop
add
test
mov
and
cwtl
mov
inc
xchg
mov
adc
ja
iret
ja
push
aas
les
outsl
lcall
add
lds
xchg
roll
fmul
push
subb
or
ljmp
fcomps
icebp
lret
lret
push
out
ss
cld
mov
cmp
subl
push
js
mov
call
adc
mov
pushf
cmc
adcb
push
xor
dec
push
std
scas
inc
mov
pop
out
popf
int
out
xchg
das
out
pop
sbb
inc
shrb
mov
inc
push
out
stc
lret
das
ficoms
clc
push
cmp
mov
addl
pushf
sbb
ds
and
je
xor
ljmp
or
out
mov
adc
das
movb
sub
insb
insl
outsb
push
mov
mov
xchg
dec
lea
int3
arpl
pop
jmp
rol
cmp
adc
loopne
fnstcw
and
inc
fwait
push
pop
xchg
sahf
mov
into
cmp
ficompl
dec
ret
je
push
dec
jmp
sahf
push
shufps
xchg
shll
test
cli
push
ljmp
dec
push
into
push
and
aas
adcb
loop
out
gs
mov
add
jg
cld
movsl
cmp
cmp
mov
cmp
data16
add
int3
mov
je
leave
mov
rclb
pop
mov
sbb
pop
inc
pusha
jge
lret
add
push
call
cmp
pushf
jns
adcb
repnz
int3
pop
jmp
mov
mov
and
cmp
cld
push
fnstenv
push
xchg
or
add
mov
xor
hlt
sub
push
xor
jae
ljmp
jns
nop
xor
insb
sub
pop
mov
pop
scas
addr16
mov
cs
xchg
mov
cmp
mov
inc
inc
jl
xchg
int3
cltd
adc
aad
loope
icebp
pop
dec
lods
dec
hlt
dec
xor
ficompl
xchg
adc
jb
xchg
fnsave
push
pop
xor
and
xchg
jne
or
lcall
add
inc
movsb
pusha
pop
lds
fmuls
sub
dec
stos
mov
push
sub
movsl
fwait
xchg
mov
rorb
repnz
sbb
or
aaa
fwait
push
leave
jnp
mov
popa
cwtl
mov
pop
cmc
sbb
inc
adc
and
mov
mov
into
in
fildll
add
outsb
mov
lods
mov
or
jg
cmp
xchg
arpl
lods
sbb
leave
rcll
aam
sub
popa
cmpsl
add
sbb
lds
rcl
sub
lret
in
jne
mov
push
mov
and
cli
mov
leave
mov
ja
pushw
cmp
or
repz
je
loop
into
xchg
test
stc
cwtl
xor
mov
adc
sub
fchs
int
inc
outsb
pmullw
push
inc
leave
in
cs
dec
xorl
lret
ss
out
sub
xor
mov
popa
insl
insb
movsl
push
sub
pop
cmp
xchg
mov
push
fbstp
pop
jmp
repz
aam
dec
inc
xchg
sub
int3
sarb
mov
cmp
adc
ss
cli
loopne
int
inc
dec
stos
jnp
add
push
into
loope
call
push
inc
insb
mov
dec
add
xor
leave
dec
cmc
and
push
mov
test
mov
push
push
mov
mov
xchg
push
das
sub
xor
sub
idivb
mov
mov
cltd
data16
dec
or
jbe
ss
je
dec
xchg
add
aas
fadds
sbb
and
adc
mov
xor
pushf
and
jp
fisttpl
and
and
jae
shl
xor
inc
xor
scas
adc
mov
and
insl
inc
in
aas
repnz
sti
jb
sub
lods
cwtl
jnp
enter
lahf
or
mov
mov
xor
dec
imul
sbb
mov
into
xor
or
imul
aaa
ret
hlt
adc
leave
push
sbb
insb
cld
call
xchg
sbb
aas
dec
jb
mov
loopnew
pop
stc
fimull
iret
add
cmpsl
loope
pop
sub
jmp
mov
sbb
push
mov
sbb
jecxz
pop
mov
mov
js
test
cs
stos
xchg
fmull
jo
subb
outsb
mov
xor
popa
das
loopne
out
std
aaa
pushw
xchg
xchg
es
dec
push
aam
xchg
into
rcl
pop
sub
sti
lock
sub
call
sub
inc
data16
add
xchg
lods
aad
clc
test
cld
push
add
push
mov
cli
sahf
ret
testb
inc
sbb
repz
dec
xchg
in
xchg
and
out
repnz
adc
test
lret
or
adc
sbb
inc
pop
inc
jne
dec
mov
cmc
mov
dec
xlat
jmp
lods
out
cmp
pop
ljmp
jno
in
jbe
mov
iret
cmp
gs
cmp
les
add
jmp
jo
outsb
movsl
movaps
stc
sub
mov
cltd
out
or
xchg
cmp
and
pop
out
cmp
in
andb
cmp
or
lcall
cmp
cs
mov
pusha
dec
sbb
mov
xchg
inc
jbe
cmp
pop
popa
aaa
xchg
sbb
xchg
mov
fwait
gs
cmpsb
pop
out
arpl
push
fisttpl
pop
out
jae
mov
rcl
movsb
or
mov
and
leave
sbb
adc
test
sbb
and
fcompl
sub
xchg
jno
xchg
sbb
xchg
jae
stc
xchg
outsb
xchg
push
stos
cmp
movsb
mov
call
jl
sbb
mov
jnp
mov
jle
enter
xchg
stos
pusha
xor
inc
cmp
call
push
jnp
ds
mov
adc
fs
ja
cmp
insb
jg
xchg
out
inc
fbstp
jg
ds
stos
inc
adc
aaa
test
adcl
shll
and
std
xchg
rorl
aas
mov
pusha
cmpsb
rol
push
jno
mov
bound
data16
dec
mov
jae
push
jne
pushf
stos
out
pop
pop
rolb
faddl
lods
loopne
mov
xchg
cmp
arpl
mov
imull
cmpsb
adc
nop
bound
inc
arpl
ss
fwait
std
push
cmpsl
pop
stos
sbb
into
shlb
or
jae,pt
stc
sbb
outsb
inc
xchg
xor
rcrl
faddl
das
xor
test
outsl
callw
pop
dec
mov
and
mov
lods
jne
mov
cmp
fnsave
hlt
testl
sahf
stos
jb
leave
lcall
inc
push
push
rcrl
mov
stos
repnz
or
cltd
adc
dec
jbe
inc
scas
neg
cmpsl
sub
and
addb
xor
stos
into
jmp
cli
fnstenv
arpl
sub
fs
sbb
or
sbb
xchg
fucomi
popa
or
add
iret
imul
lea
jo
add
in
adc
cs
xchg
clc
push
and
inc
clc
add
mov
mov
jg
jbe
adc
aas
or
xlat
or
ja
sbb
aad
push
mov
jno
xchg
addl
call
pop
lea
inc
ror
orb
and
or
dec
call
in
xchg
or
ds
pop
push
repnz
mov
xchg
lods
add
xor
mov
add
lods
cmp
imul
mov
pop
push
cli
shrb
cmpsb
outsb
xor
push
das
push
xchg
lret
or
mov
mov
dec
or
xchg
mov
jo
or
sub
mul
cmpsl
filds
std
iret
addr16
or
pop
in
or
jl
fcomps
dec
jp
dec
js
in
arpl
push
outsb
xor
mov
ja
inc
ficoms
pop
sbb
imul
cmp
push
xor
in
push
mov
add
mov
popf
icebp
mov
jmp
or
push
push
xchg
lret
test
or
dec
fs
ficoms
mov
xor
cli
repz
fistpll
mov
ljmp
leavew
push
js
addr16
loopne
insb
mov
shll
fisubs
mov
aas
and
ss
nop
orl
orb
and
out
lods
rolb
bound
inc
add
faddl
movsb
arpl
inc
cs
mov
and
sbb
icebp
shll
cmpsb
pop
add
mov
and
fsubr
add
push
push
xor
sub
xchg
cmp
es
pop
out
into
inc
sbb
and
cld
aad
mov
jmp
faddl
nop
inc
insb
dec
clc
addr16
loop
jmp
add
inc
xchg
adc
mov
push
mov
andps
clc
movsb
decl
mov
mov
push
aas
aas
inc
out
cli
inc
repnz
imull
push
insl
in
in
xor
filds
sbb
lods
scas
pop
dec
lods
sbb
inc
roll
lds
mov
sbb
ffree
negb
lcall
lret
insb
push
inc
call
rcr
imul
fdivl
pop
test
jno
jg
cmp
cmp
les
push
cs
and
cli
pop
dec
inc
sub
lcall
xchg
pop
jg
pop
leave
sbb
lea
out
or
shlb
mov
push
mov
jo
pusha
push
xor
xchg
sbb
stos
jae
pop
xor
jnp
jo
cltd
and
cmc
decb
push
mov
mov
sub
jecxz
push
sub
adc
aam
orb
and
jno
ret
gs
fisubs
notb
pop
fbstp
adc
xor
daa
inc
xchg
jns
pop
fisubs
mov
cs
loopne
mov
mov
in
ret
adc
xor
aas
rolb
jecxz
mov
push
mov
or
orl
xchg
fisttpl
pop
icebp
negl
xor
mov
sub
testl
jne
jne
ds
cli
aam
xor
dec
push
xor
xlat
push
repnz
lret
pop
aaa
call
outsb
add
rclb
cltd
sbb
mov
mov
pop
iret
or
sahf
adc
ficompl
ds
sbb
pop
mov
push
mov
dec
mov
pop
shll
lock
jo
pusha
scas
xchg
and
daa
add
je
pop
das
mov
cmp
adc
push
inc
cltd
stos
call
iret
xchg
rol
scas
mov
mov
adc
inc
inc
outsb
stos
mov
push
add
fcoms
sub
dec
inc
ficompl
sbb
sub
sbbl
add
outsl
cmp
cwtl
mov
bound
rorb
cmpsb
cmp
mov
lret
enter
in
bound
push
xorb
pop
mov
pop
leave
out
imul
pop
or
or
nop
enter
or
or
xor
pop
or
pop
das
imull
ss
push
dec
mov
iret
aaa
aaa
push
jne
push
xchg
jge
pop
loope
shl
lock
repz
push
xor
mov
ljmp
clc
cmc
pop
add
pop
sbb
leave
insl
bound
pop
dec
aaa
cwtl
mov
push
cld
sub
jg
pop
dec
lcall
ds
aam
inc
ret
push
xchg
mov
add
push
out
sub
xor
add
or
movsb
notb
cmp
sti
mov
pop
into
mov
andb
dec
xchg
sub
leave
inc
loopne
add
and
xchg
jg
aas
pop
ja
nop
mov
inc
xchg
repnz
sub
call
or
inc
push
mov
hlt
mov
sub
sub
frstor
daa
and
ss
inc
lahf
push
mov
lret
or
loopne
push
push
jae
lcall
sti
outsl
jb
and
dec
test
cmpsb
lods
sub
cmp
dec
dec
add
jg
or
lret
addl
cmp
xchg
sub
sub
cmp
ljmp
sub
mulb
xor
cli
push
xchg
lea
xchg
decl
pushf
fmull
pop
aaa
aam
dec
jmp
scas
mov
and
stc
pop
and
es
sbb
cmpl
lock
push
scas
sbb
jge
dec
sahf
mov
ss
dec
push
mov
mov
imul
cld
xor
inc
inc
leave
aad
xchg
mov
je
ljmp
nop
pop
iret
hlt
fildll
movsb
cmp
clc
testl
in
fistps
add
stos
not
push
ds
adc
and
call
test
stos
pop
pop
and
popa
rorl
sbb
push
or
sbb
fwait
push
popf
adc
push
adc
pop
xor
add
das
fchs
push
sbb
loopne
sub
ss
cmp
cmp
pop
mov
sub
mov
push
mov
lock
lods
mov
mov
loope
cmp
je
sub
sub
xchg
dec
rcrb
movsl
inc
subb
addr16
scas
cmp
rclb
repz
mov
inc
sahf
test
pop
cs
fs
cmp
mov
mov
sub
jecxz
fincstp
nop
lahf
lods
mov
sub
xchg
iret
xchg
pop
scas
fisttpl
filds
int3
movsl
mov
jne
inc
aas
jb
call
pop
or
mov
fwait
sub
inc
mov
into
lods
rolb
adc
das
imul
cmp
and
cmp
cmp
mov
sti
push
inc
push
xlat
sti
ja
mov
test
aad
push
fildll
stos
mov
ljmp
js
leave
shrb
loop
add
test
jmp
mov
test
in
xchg
and
je
cs
arpl
or
adc
rcll
sahf
lcall
inc
fwait
ja
enter
cltd
push
mov
push
pop
fisubs
jne
inc
rclb
add
and
test
aas
mov
or
ret
mull
mov
mov
repnz
sub
add
ljmp
out
loopne
mov
test
push
ds
fldcw
pop
pop
push
sarl
lret
dec
ret
inc
sti
cmc
cmpsb
sbb
bound
daa
xchg
jge
mov
loope
lock
sbb
push
loopne
outsl
pop
push
in
xchg
ret
pusha
es
inc
loope
enter
shl
sub
shll
jbe
lea
repnz
sbb
lahf
cld
sbb
mov
sbb
mov
ret
xchg
imul
push
inc
es
fwait
dec
mov
insl
push
xor
adc
xor
jp
jg
mov
and
psubsb
in
fistpl
arpl
out
jge
sbb
imul
add
sbb
sbbb
mov
or
lcall
cmp
push
xor
dec
xor
dec
incb
push
sti
enter
pop
dec
ss
dec
pop
stos
pop
cmp
nop
sbb
fidivrl
lds
imul
dec
push
sub
lret
test
hlt
mov
ja
adc
test
scas
out
fwait
aam
adc
xchg
loope
xchg
in
test
and
scas
inc
jp
ljmp
loope
sub
jbe
sub
lock
push
faddl
dec
mov
lret
inc
dec
cmp
mov
pushf
stos
inc
mov
add
dec
push
or
xor
addl
cmp
pop
enter
push
sub
aam
inc
outsb
sar
popf
roll
ljmp
mov
insb
dec
xchg
rolb
jg
pop
jns
mov
dec
adc
jp
pop
mov
nop
mov
leave
add
fs
das
add
repnz
mov
popf
lods
jle
sub
pop
push
inc
inc
loope
call
lea
xchg
push
repz
dec
test
push
cwtl
clc
inc
hlt
jp
xchg
cli
dec
xchg
sbb
sub
loopew
aad
xchg
stc
xchg
imul
xor
or
add
dec
mov
ss
repz
pusha
xor
arpl
adc
xchg
in
pop
and
imul
scas
inc
xchg
stos
fcoml
sar
cmpb
mov
inc
jb
mov
hlt
or
jecxz
add
or
xchg
divl
call
int
dec
xchg
cmp
out
lcall
and
and
dec
shl
pop
lret
dec
scas
lret
pop
popf
mov
icebp
sub
push
and
xchg
repz
mov
mov
fsts
fld1
xchg
cmpsb
sarb
cmc
add
imul
insb
mov
xchg
mov
enter
into
jle
and
leave
sbbl
push
adc
imul
mov
shrl
mov
mov
inc
setg
mov
and
or
mov
fcmovb
dec
jns
jae
inc
sub
cmc
call
in
inc
ja
push
adc
mov
push
sbb
idiv
int3
jae
xlat
iret
xchg
repz
adc
leave
test
jae
sbb
push
push
enter
stos
jp
aam
inc
add
cmpsl
mov
mov
cmpsl
mov
leave
mov
insl
adc
dec
lcall
lret
pop
mov
out
adc
arpl
lods
and
cmpsb
int
subl
scas
ja
xor
xchg
into
push
clc
lcall
push
cld
push
cmovb
dec
sahf
pop
or
mov
lret
push
push
mov
push
push
mov
jb
jle
mov
pushf
xor
stos
inc
pop
lret
inc
out
repnz
jp
stos
lahf
mov
movsl
ja
rcl
outsb
adc
adc
out
inc
scas
ja
jmp
jns
dec
add
sti
push
sub
ret
cmp
jle
out
add
and
xor
je
or
push
xchg
hlt
push
fimull
mov
fcomps
sub
shll
lret
xchg
shlb
mov
xlat
sar
bound
loop
out
adc
pop
dec
and
out
shrb
and
imul
stos
jo
addb
ret
aam
out
ret
jne
jle
mov
pop
add
dec
add
xchg
sub
cmp
mov
mov
mov
add
push
filds
xchg
push
sbb
ret
xor
add
push
pushf
adc
aaa
xchg
xor
push
stos
or
inc
cwtl
sbb
aad
leave
arpl
aam
jge
ret
sbb
out
or
xor
jnp
push
sub
cmc
popa
adc
bound
cmp
sbb
int3
lret
ret
pop
sbb
xor
lods
xor
int
inc
inc
adc
jae
push
outsb
inc
mov
adc
jmp
imul
push
movsb
in
mov
inc
mov
and
inc
or
loopne
mov
in
daa
push
xchg
jp
adcl
or
test
xor
or
out
push
bound
nop
jl
mov
ja
shl
xlat
les
dec
cmp
stos
lods
mov
out
xor
xor
fimull
loop
out
add
add
mov
pop
cld
lods
inc
xchg
push
mov
inc
mov
inc
or
andl
loope
jns
cmp
xchg
sub
aas
movsb
pop
cmp
jecxz
sbb
inc
and
jmp
int
dec
fldl
mov
popa
add
pop
push
fidivrl
xchg
mov
add
sbb
or
daa
xchg
sbb
inc
adc
jnp
xor
add
int
mov
mov
shll
popf
push
into
test
jb
sbb
pop
or
outsl
out
imul
aam
inc
and
sbb
inc
lea
jne
xchg
push
es
xor
mov
dec
xchg
jbe
sub
popf
ljmp
into
jmp
lahf
bound
mov
push
adc
je
mov
gs
push
test
inc
adc
jl
insl
mov
daa
sub
dec
jns
pop
mov
outsb
xchg
ss
add
insb
dec
ret
insb
xchg
insb
mov
sub
push
movsb
hlt
into
movsb
push
sbb
loope
jb
jmp
cmp
or
mov
pop
repnz
outsl
cwtl
test
fwait
sub
xchg
or
xlat
jno
fcoml
or
mov
and
jecxz
stc
aaa
insb
scas
xchg
pminsw
cmpsb
mov
test
push
lret
sbb
test
inc
sahf
push
add
psrlq
sbb
or
rol
cwtl
xchg
cltd
repnz
fmul
test
jns
cwtl
decl
jp
outsb
dec
or
cmp
mov
iret
fwait
push
add
and
xor
outsl
fnstenv
test
enter
xchg
sub
cmpsb
loopnew
sbb
movsb
test
les
pop
jg
movsl
sarb
negb
inc
pop
loopne
xchg
addb
dec
pop
mov
test
push
add
xchg
in
xchg
or
ja
decl
sbb
mov
mov
sub
jne
test
sub
std
stc
cltd
cmpsl
cmpsb
push
cltd
in
add
cwtl
add
nop
pop
cli
out
subb
lods
in
outsl
outsb
push
mov
loopne
pop
repnz
fwait
imul
ror
push
mov
dec
cli
push
pop
dec
aas
add
cmc
adc
jge
test
in
jge
popa
roll
mov
inc
jle
push
fstp
jg
test
sbb
inc
pushl
push
dec
sub
push
out
ss
pop
sarb
cli
push
pop
adcb
cmp
aaa
addb
ret
cmp
stos
cmp
mov
jae
push
in
lods
push
push
cmp
lods
testb
fcmovne
adcl
imul
imul
leave
and
jmp
nop
inc
out
mov
scas
out
repz
push
mov
incl
out
test
in
jbe
push
sbb
inc
pop
mov
mov
int
xor
mov
push
popf
jecxz
je
out
fisttps
adc
andl
push
inc
xchg
push
adcb
jecxz
mov
cmp
aaa
hlt
mov
pop
push
arpl
movb
mov
mov
std
outsb
mov
notb
push
cmpb
mov
xchg
cmp
jb
push
mov
les
stc
xchg
mov
mov
and
outsl
aas
pop
jp
mov
pop
inc
dec
dec
mov
push
imul
and
sub
jo
cmp
add
clc
mov
lret
jno
cmp
push
mov
addb
fdiv
leave
nop
adc
shl
push
outsl
mov
jae
jb
sbb
lcall
inc
outsl
add
cs
stc
icebp
jo
aaa
xchg
gs
ss
out
mov
mov
xor
imul
inc
add
loope
add
adc
mov
dec
ret
push
loop
jg
jbe
mov
sub
mov
popa
cmp
pop
stos
insl
lcall
sub
pop
dec
inc
push
data16
push
dec
ret
cmp
pushf
and
fdivrl
mov
xor
mov
jb
xchg
loop
jge
mov
mov
xchg
sub
push
xchg
cld
sbb
dec
jnp
push
mov
jbe
aas
mov
or
mov
jmp
lret
cld
dec
push
cmp
xchg
xchg
jg
xlat
inc
adc
sbb
cwtl
insl
movsl
mov
mov
movsl
adc
in
add
or
and
cmp
jno
stos
mov
aaa
cmp
mov
insb
push
inc
mov
sbb
sub
dec
pop
out
xlat
mov
mov
gs
imul
push
fildll
add
adcl
xor
ds
push
bound
jl
pusha
daa
lcall
in
lds
pop
mov
repnz
or
mov
test
add
mov
mov
or
inc
test
scas
repnz
out
add
mov
adc
mov
insl
lods
data16
fwait
inc
add
or
popa
je
jb
dec
sub
js
das
jo
or
stc
jne
cmp
inc
xor
sub
xchg
jge
xor
hlt
roll
add
fcomip
sti
inc
pop
fisttpll
loop
outsl
push
dec
decl
or
leave
call
inc
xchg
inc
imul
push
divb
fnstcw
fldz
daa
mov
mov
dec
das
push
sub
sub
pavgw
cmp
cmp
sub
dec
push
pop
sbbb
cmp
pop
xor
mov
shrb
jmp
push
out
cmpsb
sub
shrb
mov
jg
xor
movsl
insl
jl
xchg
inc
lahf
je
push
cmp
fstps
outsb
stos
or
push
xor
xchg
out
popa
push
addr16
mov
jge
push
addr16
imul
dec
sbb
sub
fisttpl
push
add
xchg
fwait
lea
mov
imul
std
jne
repnz
js
add
int
fidivs
mov
adc
hlt
hlt
mov
add
inc
mov
int3
rol
jnp
je
and
ficoms
xchg
fists
testl
pusha
pop
inc
out
mov
mov
inc
sub
push
or
jl
in
dec
sahf
push
shlb
es
and
test
xchg
pop
cmc
or
inc
ljmp
lret
mov
nop
mov
loope
shl
inc
dec
shl
dec
inc
mov
push
xor
test
bnd
xor
in
inc
mov
ljmp
popf
xor
cltd
push
sub
rorl
mov
xchg
jb
shr
or
pop
pop
shlb
aad
sbb
mov
adc
or
push
cmp
mov
sub
or
dec
lret
dec
clc
iret
push
adc
inc
mov
jl
test
jae
xor
test
push
adcb
mov
cwtl
pop
mov
outsb
push
fcomps
pusha
dec
mov
ja
push
clc
push
jmp
sarb
or
mov
sbb
sbb
clc
enter
outsl
loopne
imul
lret
das
in
jle
and
fistps
xlat
sti
add
idivl
cltd
nop
push
cmp
insl
or
ret
dec
in
loop
outsl
xor
insl
jecxz
and
adc
sub
push
cmpsb
sbb
daa
outsb
push
cld
sub
in
daa
pop
in
xlat
sub
mov
add
call
xchg
mov
loope
iret
popa
outsl
in
dec
push
cmp
dec
stos
mov
lret
daa
or
mov
out
gs
push
cwtl
jne
or
cmp
pop
into
mov
enter
int
and
mov
rsqrtps
xor
mov
cmp
add
cmp
push
xchg
in
aaa
jp
shll
push
insl
fcompl
jg
sbb
push
adc
lods
jb
repz
fcoml
jp
rcr
lret
daa
test
pop
test
je
mov
nop
inc
dec
shll
stc
icebp
popa
cmp
jno
hlt
sub
or
cmpl
xchg
in
jns
out
insb
jge
stos
adc
mov
and
lret
xor
cli
addl
inc
adcl
push
shrl
iret
pushl
sbb
outsl
lods
cmpsl
pop
dec
arpl
mov
or
es
cmp
add
test
lock
hlt
nop
xchg
out
hlt
push
mov
inc
dec
test
imul
cmc
xor
mov
push
inc
out
gs
push
lock
adc
test
inc
cmp
test
stos
addr16
cli
push
cld
test
push
or
pop
pop
aaa
pusha
scas
outsb
mov
shl
mov
cltd
mov
add
loopne
lods
popf
jbe
call
pop
iret
jno
dec
lahf
sbb
mov
fucomi
jl
pop
dec
in
pop
fidivrl
cmp
icebp
out
data16
jns
insl
or
jmp
bound
push
fisubrs
dec
push
inc
xchg
fdivs
and
dec
popa
add
pushf
jbe
iret
xor
pop
mov
xchg
cmpsl
mov
fidivrs
leave
sbb
mov
rclb
lret
pop
icebp
stc
sub
icebp
fstl
and
repz
ret
sub
mov
rcrb
push
and
mov
pop
xchg
sub
mov
push
loopne
stos
lcall
inc
inc
into
mov
sub
and
leave
sub
imul
or
mov
jg
push
pmulhw
arpl
mov
ljmp
int
xchg
jae
es
repnz
into
jnp
jge
mov
and
js
push
rcrl
movsb
fidivs
lret
push
cli
aas
mov
scas
addr16
pusha
or
mov
or
mov
jl
add
mov
adcb
jb
sub
out
enter
xchg
lcall
mov
aaa
imul
fiaddl
xor
std
xchg
and
leave
out
mov
bound
cmpsl
and
cld
cmp
push
jns
mov
sub
mov
mov
test
cmp
out
sbb
ds
je
inc
and
xchg
dec
prefetchwt1
jmp
cmp
out
loop
in
hlt
rol
inc
lods
int3
pushf
push
enter
pop
test
ficoms
shlb
dec
nop
xchg
xchg
scas
insb
inc
test
ja
fnsave
jmp
sub
push
and
xchg
xchg
shr
mov
cmp
mov
dec
jecxz
int
pop
arpl
sbb
adc
test
js
aaa
push
outsl
adc
mov
xor
mov
aad
lahf
cmp
lcall
cli
sbb
inc
test
sub
cmpsl
imul
push
mov
lea
dec
dec
orb
sbb
in
and
dec
and
leave
in
mov
imul
push
mov
enter
out
jmp
pop
loope
jmp
fildll
cmp
out
aas
mov
xor
into
jmp
divl
mov
pop
cmp
ret
es
lods
ret
outsb
shlb
push
daa
push
cld
adc
xacquire
pusha
xchg
das
das
sbb
dec
aas
jp
imul
fs
cmc
popf
fdivr
mov
adc
cmpsb
mov
adc
gs
jb
lcall
sbb
ds
or
inc
mov
out
insb
push
shlb
pusha
sbb
inc
mov
sti
xor
ds
sub
push
jns
fists
mov
insl
push
add
daa
push
ss
mov
dec
cmp
push
lahf
and
movsb
xor
jo
std
shlb
adc
scas
loope
lcall
gs
sub
mov
mov
stos
popf
dec
pop
pop
lret
push
add
int3
cmc
pop
out
cmp
in
xor
adcl
les
or
ss
je
adc
ss
ljmp
lcall
pop
wrmsr
loopne
test
out
test
push
inc
jle
jp
push
movsl
movsb
cmpsb
sub
std
movsb
pop
scas
adcb
adc
push
es
je
ss
pop
repz
in
mov
mov
lcall
jbe
rcrb
clc
ffreep
xor
rclb
jo
xchg
and
int
test
js
dec
inc
stos
add
cmp
inc
pop
lret
insb
int3
ret
das
addr16
scas
aas
xlat
cmp
lret
sub
sbb
imul
test
jmp
test
ret
cmp
sub
pop
mov
pop
outsb
movsb
lea
jle
jmp
lea
jmp
pop
push
add
fwait
sarl
xchg
scas
lret
cmp
mov
sbb
jp
stos
in
jge
or
call
cld
shll
pushf
sahf
rcll
push
fs
scas
rcll
icebp
ljmp
push
push
rcr
jecxz
cmp
cmp
jl
inc
imul
pop
cwtl
mov
clc
mov
int
sbb
mov
loop
outsl
clc
rclb
mov
mov
mov
jne
test
out
loope
mov
mov
sti
mov
je
xchg
and
sub
repnz
mov
cmp
pop
sub
cmp
mov
add
insb
shrb
xor
adc
push
mov
lods
mov
cli
je
mov
scas
add
int
cltd
mov
enter
dec
jl
sbb
mov
mov
xchg
mov
push
call
lret
jbe
outsl
repnz
rcrl
and
loope
jge
mov
iret
roll
sub
xor
stos
popf
cmpsb
xor
hlt
dec
cmpb
sbb
popf
leave
dec
mov
imul
imulb
lods
mov
lret
jnp
cltd
movsl
or
and
fcoml
xchg
mov
lods
pop
jae
cltd
sahf
enter
adc
mov
push
imul
dec
sbb
mov
inc
out
mov
test
or
jge
or
adc
cmp
enter
into
cltd
aaa
sbb
hlt
sarb
mov
jo
lahf
fucompp
xchg
cmp
lcall
push
mov
jle
scas
dec
das
movsb
sahf
lahf
in
dec
pop
popf
rolb
xor
pop
push
push
pop
pop
sbb
mov
or
mov
loope
cld
sti
addb
mov
jns
loope
pop
mov
aad
in
fsincos
test
push
test
out
scas
push
pushf
ja
jns
stos
ljmp
dec
mov
aad
or
and
cltd
mov
adcb
addl
mov
push
lahf
jae
ja
gs
lahf
xorl
daa
int3
in
pushl
dec
push
hlt
adc
pop
lock
stos
jg
repnz
push
ds
iret
jne
cld
dec
dec
and
mov
insb
xlat
pop
sub
mov
cltd
in
pop
gs
pop
sub
sarb
sub
fnstsw
push
sti
test
and
stos
in
andl
add
sbb
int3
leave
jae
aaa
dec
add
jns
call
adc
cmp
cmp
sbb
movb
not
jecxz
cli
cmp
mov
hlt
lods
lods
out
js
dec
mov
pop
xchg
inc
mov
inc
das
loopne
push
imul
inc
push
or
dec
int3
outsl
das
pop
inc
fsts
fldlg2
or
movsb
test
sti
iretw
add
sbbb
jg
adc
add
loopne
ja
xor
imul
cmp
dec
lret
shll
xchg
incl
imull
sahf
fldcw
fidivl
sbb
call
jl
test
mov
imul
pop
jo
mov
push
jbe
clc
jmp
shlb
and
sub
mov
cmc
cmpsb
jbe
ds
inc
in
stos
es
xorl
push
add
stc
mov
xchg
add
or
mov
jbe
inc
cs
int3
sbb
add
or
pushf
inc
shll
sbb
mov
jne
js
roll
cmp
pop
faddp
jmp
into
hlt
xchg
fdivr
xchg
aad
sub
mov
in
cmp
pop
mov
out
notb
xchg
or
sbb
sub
mov
xchg
mov
test
imul
int3
popf
stc
stos
mov
xchg
pusha
mov
mov
push
and
loopne
push
dec
add
xor
pop
xor
adc
inc
daa
jmp
pop
add
into
pop
enter
mov
mov
pop
mov
jle
jecxz
arpl
cmc
add
subb
scas
mov
cmp
mov
mulb
mov
inc
mov
inc
xor
lds
fwait
inc
mov
out
aas
or
xchg
fdiv
or
lret
je
popf
imul
pop
inc
push
mov
icebp
inc
adc
sbb
pop
lods
arpl
andl
dec
xor
push
inc
clc
cmp
pop
in
jge
stc
clc
jp
inc
das
addr16
test
dec
aam
adc
cmpsl
dec
je
pop
jp
jg
addl
cmp
mov
repnz
mov
lods
dec
and
sub
or
pop
adc
movlps
ds
iret
cmpsb
addl
add
stos
pop
xchg
mov
push
mov
sti
out
pop
push
mov
inc
sub
scas
xchg
repz
mov
out
mov
aad
out
lret
mov
sub
insb
mov
loopne
ret
aad
xor
push
jmp
mov
xchg
pop
ja
cli
and
jecxz
mov
sbb
sbb
or
and
insl
adc
jae
dec
icebp
mov
pop
decb
xchg
loop
fnsave
xor
filds
sbb
push
idiv
cli
sysenter
adc
movsl
xchg
fs
inc
sbb
xchg
mov
rcrb
leave
lods
test
mov
loope
add
shlb
shr
add
mov
adc
js
dec
inc
xchg
scas
mov
push
xchg
jbe
call
push
fsts
mov
mov
pusha
arpl
roll
cmp
test
in
xor
push
push
sub
mov
push
lods
sti
or
cmp
data16
add
adc
int3
shrl
mov
cli
bound
xor
sti
cwtl
popf
cwtl
lods
outsl
inc
outsb
cmp
mov
jns
ds
xchg
test
jge
inc
loopne
and
pop
fimuls
outsl
lea
ds
addr16
icebp
repnz
out
in
xor
xchg
je
rcrl
jge
das
mov
xor
addr16
ret
inc
pop
test
adc
fbld
or
adc
pop
pop
neg
in
bound
sub
jo
das
cmp
jnp
cmc
and
dec
ljmp
dec
xchg
repnz
and
and
mov
repnz
aam
push
es
mov
xacquire
add
loop
push
mov
sarl
pushf
sub
movsb
push
gs
xchg
add
aaa
cmc
lds
faddl
out
mov
xchg
push
add
mov
sbb
lahf
fidivrl
lods
inc
ds
es
scas
ljmp
negb
sbbl
fadd
repz
sti
sbb
adc
ret
or
push
push
out
and
cmp
jp
mov
dec
in
xor
stos
outsb
pop
lods
lea
mov
mov
insl
stc
pop
sub
adc
push
mov
dec
xchg
cmp
add
xlat
xor
sbb
stos
sbbl
movsl
dec
push
cmpsb
jne
movsl
fldt
xchg
and
test
dec
mov
lret
mov
nop
movsl
mov
test
rol
sub
mov
push
pop
pusha
repnz
icebp
push
stos
fldenv
adc
push
pop
dec
xchg
or
dec
repz
stos
dec
sarb
in
mov
push
rcrl
jmp
mov
sbb
jl
xorl
cli
loopne,pn
fwait
call
loop
or
mov
xchg
gs
mov
loop
dec
insb
xchg
fnstenv
je
xchg
lcall
mov
cwtl
xor
outsl
gs
jmp
push
cmp
subl
mov
xor
fisttpll
add
and
push
ja
cmp
fcomip
add
arpl
push
popa
sbb
cmpsb
bound
cmpsl
push
pusha
mov
fcmovb
adc
cmp
inc
add
lds
sub
leave
shrl
in
sbb
push
pusha
aad
out
xlat
stos
sti
fstl
jne
push
sub
imul
scas
adc
jo
add
mov
mov
lds
imul
xlat
je
add
jno
cmp
lcall
stc
mov
fucomp
mov
adc
dec
into
xchg
out
addl
inc
mov
cmp
out
icebp
dec
and
sti
mov
mov
movsl
mov
jmp
lea
dec
lcall
dec
xor
popf
jbe
and
aas
std
dec
sahf
fs
push
in
shr
dec
push
outsl
jno
subl
ret
or
aas
incl
shll
adc
or
daa
popa
mov
mov
mov
mov
mov
add
sbb
add
inc
addr16
inc
or
xchg
xchg
out
cmpsl
push
push
ror
inc
cltd
enter
lds
inc
add
or
xor
sahf
cmp
jmp
jb
in
xor
add
dec
pop
rorl
inc
xchg
outsb
shll
inc
jl
jb
xor
pushf
xchg
xor
sbb
adc
push
std
ja
mov
jecxz
stos
lds
pop
bound
or
pop
pop
inc
aad
mov
insb
mov
std
mov
push
cltd
jl
push
aaa
fidivrl
imul
fsubl
xchg
jge
adc
cld
add
fstpl
jmp
sbb
xchg
lods
cltd
dec
daa
push
popa
xchg
imul
int
pushf
xchg
sahf
push
mov
addl
jl
push
dec
pop
fs
pop
or
scas
sub
and
ja
sub
orb
jo
in
or
xor
imul
inc
mov
fucom
xchg
mov
lahf
ret
lods
aam
mov
inc
mov
mov
sbb
jne
jmp
cmp
sub
cmc
movsl
inc
mov
adc
stos
and
insb
shlb
shr
loope
mov
stos
xor
bound
lcall
pop
dec
fisubs
xor
mov
sub
jns,pn
imul
mov
in
in
xor
ficompl
pop
in
cli
inc
cmp
mov
rolb
lds
inc
and
sub
je
inc
movsb
cmpsl
xor
adc
pop
scas
cli
add
cmp
mov
adc
inc
loope
test
jns
dec
mov
mov
dec
xchg
push
popf
filds
test
push
push
sbb
or
push
fbld
out
call
jo
cltd
push
cmp
push
mov
fstpt
inc
mov
adc
push
in
or
andb
push
cmp
mov
mov
idiv
mov
pop
das
cmp
mov
fnstcw
mov
iret
push
in
setns
dec
arpl
adcl
enter
pop
inc
ret
jg
sbbl
adc
nop
insb
push
mov
cmp
push
inc
jno
jb
leave
cmp
xchg
pop
repz
lods
inc
and
xor
loope
lahf
sbb
and
daa
mov
insb
xor
jl
mov
loopne
lret
cmp
test
in
inc
sahf
dec
outsl
loop
cmpsb
xchg
sub
lret
cmp
mov
jo
xor
es
jae
mov
xchg
or
mov
jge
sbb
test
fcompl
xchg
fstl
push
add
das
pop
pop
lret
sub
cmpsb
es
icebp
jmp
sub
sub
mov
jl
cld
inc
lds
adc
dec
push
fstp
push
hlt
les
push
pop
enter
sahf
insl
jne
mov
mov
cmp
pop
and
int3
push
mov
mov
pop
stos
fwait
xchg
lcall
dec
mov
fmuls
fnstcw
push
sarl
stos
sahf
movsl
and
lea
add
and
popa
add
movsb
sub
and
in
pop
rcrb
xchg
mov
stos
stc
push
or
iret
dec
mov
idivb
fwait
outsl
and
pop
ret
xor
decb
pushf
cmp
add
dec
std
sbb
xor
not
inc
inc
sub
ret
rorb
inc
loope
xrelease
dec
adc
iret
mov
fadd
mov
xchg
mov
push
in
jp
fidivl
add
dec
imull
sbb
aad
jp
adc
pusha
clc
mov
enter
jmp
jg
loop
or
and
cmpsb
mov
iret
lea
dec
fcmovbe
sahf
adc
mov
test
or
nop
loop
sbb
out
in
int
push
sub
dec
or
or
leave
jno
rorb
aas
arpl
mov
cmp
loope
mov
adc
xchg
aad
in
add
fistps
ficompl
test
dec
jae
add
push
inc
pop
push
or
adc
outsb
pop
rcr
lea
cmp
inc
add
xchg
das
lret
in
cmp
fadd
loopne
adc
pop
mov
popa
add
xchg
jle
aad
addr16
lods
decb
pop
stc
sub
jb
and
mov
inc
daa
cwtl
jnp
test
iret
jecxz
sbb
adc
push
sub
adc
cmp
push
arpl
sbb
adc
je
test
adc
cmp
jns
test
pop
mov
dec
push
add
pushf
mov
pop
idivb
or
add
xor
sub
dec
stos
xchg
fadds
xchg
das
add
in
lds
pop
pop
push
mov
mov
xchg
mov
xor
loopne
mov
mov
cli
scas
sbb
xchg
enter
mov
stos
rcrl
aaa
dec
repnz
outsb
stos
icebp
in
sbb
and
insl
aad
mov
cwtl
cmp
sub
out
mov
cmc
jp
inc
xlat
lahf
or
and
popa
test
sar
pop
cs
out
adc
out
xchg
lret
fstps
jge
push
adc
imul
outsl
rorb
jnp
xor
sbb
jp
pop
rcrl
repnz
mov
lds
fdivr
lret
lahf
lcall
sbb
sub
inc
int
js
in
add
dec
adc
push
or
push
mov
or
pop
xor
xchg
icebp
sub
cmp
push
jnp
dec
jne
or
jno
ss
dec
fwait
add
add
mov
push
mov
arpl
js
in
add
adc
ret
sub
or
jae
or
and
push
mov
pop
jnp
popa
adc
dec
arpl
sub
fildll
mov
adc
mov
mov
dec
lahf
cmp
sbb
adc
add
inc
lds
jbe
mov
in
lods
movsb
sbb
repnz
inc
fldcw
jmp
ds
fldenv
xlat
dec
adc
incl
push
cmp
arpl
movsb
pop
out
pop
push
mov
dec
mov
and
xor
subb
push
cmp
test
sbb
leave
and
and
inc
push
cmp
out
jmp
mov
adc
out
xchg
je
leave
insl
fdivl
jnp
mov
mov
test
adc
xor
pusha
jo
xlat
in
mov
pushf
cld
mov
lods
mov
sbb
rorb
mov
lock
jl
roll
out
pusha
jmp
xchg
aam
fnstenv
jbe
fcmovb
sub
adc
ja
mov
int3
pop
dec
mov
repz
shl
insl
fucom
pop
cli
into
lcall
push
popf
loope
test
push
xchg
fstl
inc
inc
divl
mov
push
jae
and
mov
aam
xor
sbb
mov
testl
dec
aas
mov
rol
dec
sti
sbb
and
mov
jle
scas
pop
xor
test
std
cld
imul
jbe
mov
sbbl
daa
movsb
sbb
sub
push
js
fdivrs
mov
inc
imul
icebp
mov
pop
and
xchg
xchg
filds
lcall
push
pop
lcall
lret
ja
mov
aaa
add
inc
adc
popf
nop
scas
mov
pop
push
or
pop
lea
mov
leave
pusha
out
push
dec
fistl
aam
add
inc
jmp
mov
movsl
out
stc
bound
pop
dec
push
pop
aam
cwtl
es
cmp
shll
inc
cli
stos
mov
fisttpl
jo
sbb
int
pop
cmp
imul
mov
in
xor
cmp
sub
push
out
and
int
fdivl
jno
push
push
xchg
xchg
mov
iret
inc
cmp
pop
shl
lcall
popf
jo
fidivrl
mov
mov
movsl
dec
test
jb
xlat
fisttpll
stos
dec
mov
gs
mov
ja
adc
pop
dec
fs
mov
xchg
pop
or
repz
or
lock
stos
xchg
pop
add
arpl
or
mov
push
sbb
lock
or
adc
mov
movsl
pop
cmp
aam
adcl
mov
stos
inc
push
lods
ss
or
mov
aad
pop
bound
leave
and
mov
mov
dec
xchg
dec
inc
adc
cmp
in
ret
out
outsl
mov
mov
pop
mov
xchg
cmp
xor
push
outsb
lret
je
aas
faddl
add
jecxz
and
movsl
loop
mov
daa
out
pop
shlb
xor
xchg
push
lea
pop
mov
cmp
push
or
pop
add
jne
clc
sbb
daa
jmp
adc
stc
pop
imul
xchg
jmp
and
popa
addl
cmp
dec
test
pop
lea
mov
int3
push
cmp
pop
push
scas
jg
xor
mov
cltd
inc
mov
aad
aaa
jl
out
jb
rcl
pop
pushf
imul
push
adc
cmp
push
arpl
sbb
jns
inc
std
adc
lods
sub
inc
imull
fidivs
loopne
pop
testl
cwtl
cmp
jne
insl
pusha
fucomi
dec
push
shlb
loop
cmp
dec
ror
xchg
test
daa
aaa
loopne
xchg
movsb
mov
add
inc
fists
xchg
dec
xor
pushf
pop
jge
mov
cwtl
inc
mov
imull
sbb
and
xor
jle
das
mov
decb
lock
insl
cwtl
xchg
jmp
cld
int
out
pop
dec
add
mov
lahf
pop
cmpsb
filds
loopne
mov
cs
add
fstpl
pop
cmc
out
push
jno
sbb
mov
leave
pop
fistpl
int
mov
fisttps
out
cwtl
cs
adc
lods
dec
ja
add
fistps
sti
and
out
push
or
add
cmpsb
pop
out
imul
and
gs
pop
movsb
sbb
stc
mov
addb
dec
imul
sahf
pop
mov
lea
sbb
sub
push
loopne
and
sbb
insl
mov
xor
mov
mov
and
xchg
in
jmp
popa
movsb
daa
sub
das
cmp
mov
mov
fistl
data16
pop
dec
lock
js
mov
ja
or
js
mov
rol
push
inc
cmp
mov
mov
movsl
mov
xor
pop
xor
mov
jno
sub
pop
lock
cmc
sub
daa
iret
pop
lea
xchg
fists
lcall
lea
sarl
jae
in
push
cmc
cmc
popa
hlt
shlb
jne
mov
loope
xor
mov
lahf
cmp
test
ja
ret
dec
xchg
mov
lret
or
mov
mov
cwtl
inc
enter
or
and
data16
jns
inc
and
test
inc
scas
stos
inc
loop
stos
shlb
test
movsb
loop
xchg
fsubrl
jl
fidivs
shlb
jecxz
xor
mov
leave
xor
push
jl
fs
inc
push
push
jle
adc
gs
xchg
outsb
dec
fisubrs
dec
pop
sbb
jne
arpl
insb
dec
and
and
mov
es
mov
into
push
or
loopne
lret
call
cmp
mov
jb
add
out
sbbl
cmp
cmp
inc
js
imul
add
mov
adc
loop
shlb
ljmp
repz
insl
mov
pop
das
outsb
jne
loope
sub
idivl
cltd
cmp
lcall
das
dec
hlt
pop
cmp
lahf
push
mov
cld
int3
fwait
xor
dec
dec
jb
fcmovbe
repz
aad
adc
push
add
jne
add
clc
xor
aam
out
adc
shlb
mull
jl
icebp
dec
pop
sub
or
dec
push
insb
push
pop
sub
aas
xchg
into
push
enter
not
lret
lods
jecxz
arpl
cmpl
mov
and
lea
lret
repnz
out
cmpsl
je
push
xor
loope
mov
mov
sahf
jecxz
jno
sub
or
out
ljmp
sub
rorl
fwait
inc
sbb
add
cmp
cwtl
lods
xor
movsl
popl
mov
imulb
dec
xor
sbb
cmpsb
cld
lret
dec
lcall
dec
ds
xchg
pop
test
xor
ret
mov
xor
enter
inc
aad
movsl
adc
cs
outsl
or
mov
repz
fadd
jb
cmp
jbe
cmpsb
test
cmc
sub
pushf
or
push
stos
mov
inc
mov
mov
pop
xor
je
leave
dec
mov
clc
xchg
insb
mov
mov
jg
dec
inc
out
clc
icebp
jecxz
mov
scas
jnp
mov
jl
out
lds
mov
aaa
sbb
add
clc
dec
add
mov
jecxz
stos
scas
bound
pop
ja
add
popa
xchg
mov
data16
xchg
and
loope
fmull
sbb
fldt
xchg
popf
sbb
xchg
mov
js
push
add
ret
lods
jbe
pop
fnclex
rolb
push
push
sbb
mov
dec
aam
or
cmc
idivb
ret
xor
aam
in
mov
jge
sarl
outsb
pop
dec
push
mov
arpl
mov
loope
dec
daa
pop
std
ret
movaps
add
pusha
leave
into
es
jb
add
xchg
in
cmc
jl
fisubrs
xchg
cmpsb
dec
sub
mov
push
enter
out
or
in
push
cmp
into
add
ja
in
mov
mov
clc
in
cld
add
mov
nop
rcr
mov
pop
maxps
pop
push
pop
aad
xorb
push
addr16
popa
divb
popf
mov
or
hlt
int
and
cmp
mov
aas
roll
aam
shll
lret
xchg
in
addl
call
loop
cmp
push
jb
pop
into
call
cmp
xchg
jecxz
dec
push
pop
addb
sbbl
mov
repz
int3
sbb
cmp
lds
icebp
mov
subb
push
jecxz
loope
outsb
out
push
mov
cmp
jns
mov
es
test
mov
cmc
jle
nop
jg
inc
shll
push
jmp
add
insb
or
push
push
fbstp
cmpsb
sti
fildll
xchg
insl
movsb
mov
jae
jbe
inc
outsb
pop
xchg
push
popf
out
mov
mov
push
vpaddb
outsb
jo
sti
in
call
xlat
xor
mov
insl
sub
mov
imul
fmuls
or
movsl
mov
mov
inc
push
rclb
les
inc
cmp
stos
out
aas
pop
out
or
lcall
or
loop
sbb
mov
ret
rol
hlt
es
mov
mov
gs
outsb
and
pavgb
push
repz
cmpb
dec
pop
push
test
fldl
mov
divl
fwait
in
sbb
jge
mov
xorl
imul
xchg
clc
push
cmpsb
outsl
lods
fsubr
inc
cld
notl
push
mov
loop
mov
divb
out
jg
es
mov
cmp
popl
loopne
mov
xor
or
lcall
in
push
fdivl
ret
xchg
sbb
addr16
sub
xor
inc
add
cmpb
or
jbe
shl
or
pop
jmp
cmp
adc
or
ret
aad
pop
xchg
jle
xchg
push
sub
pop
arpl
xchg
mov
jo
dec
in
sub
mov
dec
bound
jle
adc
push
shr
pop
cmp
lret
mov
lods
and
mov
or
lds
lea
int
jg
into
or
out
inc
dec
in
mov
lds
mov
push
pop
pop
pop
and
mov
dec
inc
std
sbb
sub
in
push
sbb
test
ret
xchg
push
std
xchg
sbb
fiadds
out
or
xor
ja
jno
aam
mov
mov
mov
add
repz
inc
movsl
leave
pop
mov
cmp
push
adc
or
ret
push
sub
cmp
imul
cmc
fwait
jecxz
or
inc
mov
daa
and
inc
push
jp
pop
cmp
dec
xchg
push
jns
inc
pop
mov
outsb
add
punpckldq
daa
test
das
mov
pop
int3
out
std
mov
out
std
lcall
sbb
pop
mov
lods
cli
jb
push
movsl
and
aad
mov
xchg
fstpt
mov
data16
test
xchg
rorb
sbb
faddp
je
movsl
sub
and
or
test
fadd
shll
inc
add
cmp
fbstp
repnz
in
lods
or
xor
daa
mov
or
je
in
pusha
xchg
push
mov
jo,pt
lret
jecxz
mov
xor
dec
lret
lock
xchg
and
sub
cmp
jle
push
sub
out
jmp
es
pop
adc
push
cltd
clc
mov
cmpsb
xchg
push
ss
ret
push
int
mov
xchg
mov
push
lahf
push
add
repz
sbb
push
mov
outsb
sub
popa
in
in
pop
pusha
dec
mov
fisubl
cltd
or
sub
ss
mov
fadds
mov
adcb
lcall
in
jnp
loop
cmp
push
cwtl
mov
add
ljmp
jg
cld
dec
das
push
sbb
pop
sbb
imul
cld
mov
iret
mov
mov
pop
imul
test
inc
dec
ja
ficoml
sub
xchg
xchg
and
cmp
push
push
cltd
jo
sbb
mov
js
out
jge
imul
shl
cmp
fsubrl
testl
ret
push
fldcw
lahf
mov
scas
nop
dec
out
clc
rcrb
cmpsb
mov
sbb
jno
repz
push
pop
dec
xchg
in
jns
sub
mov
int3
mov
or
xor
dec
fsts
add
scas
iret
popa
dec
xchg
imul
xor
or
insl
add
test
movsb
xchg
and
daa
adc
stc
mov
les
adc
or
aam
pop
js
inc
ds
mov
stc
lods
pop
ficomps
insl
daa
and
popa
negb
jecxz
aam
rcrb
out
mov
sbb
loope
loope
stos
inc
add
pusha
push
cld
out
mov
lret
push
es
and
pop
mov
adc
out
add
fisttpll
mov
outsb
mov
stc
xchg
cmpsb
cmc
std
and
push
adc
fs
and
scas
hlt
fadd
mov
lea
mov
inc
aam
pop
stc
clc
aam
sub
fimuls
jp
fcmove
sub
sbb
es
xchg
lret
cmp
or
pop
mov
subb
adcl
sub
inc
scas
pop
cld
sbb
fnstsw
add
pop
xchg
inc
js
cmp
or
cmp
inc
insl
mov
sbb
into
je
add
add
cmp
push
aas
or
sub
jnp
inc
iret
or
cmpsl
out
das
add
lock
inc
adc
dec
fsubrl
sbb
data16
scas
loopne
jno
pop
push
xchg
push
pop
cmp
inc
mov
mov
loopne
adc
ljmp
loopne
push
cmp
pushf
popa
sti
mov
cmpsl
pusha
and
mov
out
cmp
fcmovb
mov
js
and
jl
xor
cmp
mov
pop
fsts
ds
hlt
cmpsl
cmc
or
mov
add
or
lods
cmpsb
in
fdivs
lds
les
xlat
icebp
mov
repnz
and
fsubs
ss
mov
lods
adc
loop
loope
inc
add
mov
jb
xchg
loop
push
inc
cmp
xor
scas
jno
xor
sub
add
cmpsl
sbb
xor
xor
dec
jnp
aad
push
mov
and
pop
aad
in
es
mov
aam
mov
ja
jmp
test
sbb
push
push
fsubrl
enter
or
or
xchg
stos
mov
and
fs
outsb
jo
call
aam
xor
lods
lds
arpl
xchg
xor
lret
stc
mov
xlat
psraw
mov
jg
sahf
jnp
test
cmp
out
sar
pop
adc
std
inc
push
out
cmp
mov
mov
fcoml
jp
push
mov
aas
adc
or
mov
sub
push
and
test
mov
cmp
jg
push
add
sahf
arpl
aas
dec
adc
outsb
imul
iret
push
lods
lret
ljmp
fisubrl
bound
fucomp
or
xor
or
test
xchg
bnd
jl
inc
out
iret
adc
dec
into
aad
jmp
mov
sbb
add
mov
inc
ja
arpl
nop
jl
pop
pop
clc
pop
mov
fidivrs
or
imul
mov
inc
lock
mov
jb
fstl
nop
add
sub
lahf
rcl
leave
jno
imul
and
push
repnz
pop
mov
ds
int
je
jmp
in
daa
sbb
fnstcw
cs
pop
adc
mov
rolb
das
test
imulb
fisubrs
mov
nop
js
fcomi
ds
add
pop
outsb
fisubrl
std
jns
xchg
popf
or
adcb
fists
sarb
daa
pop
xor
jo
divl
js
dec
xor
outsl
fwait
addb
loopne
jle
xchg
and
fnstsw
cmpsb
dec
xchg
cmpsb
sbb
sub
mov
fbld
sbb
icebp
sbbb
mov
call
movsb
or
or
ficomps
inc
sbb
or
aad
hlt
cld
fisubl
scas
mov
scas
push
fdivrl
repz
in
cli
stos
cmp
in
mov
or
mov
mov
mov
jne
in
pop
cmpsb
aas
in
repnz
xorb
bound
gs
shll
and
mov
mov
dec
mov
out
adc
adc
or
stc
nop
push
cmp
sub
inc
insl
ja
arpl
ret
or
adc
stc
enter
int
cwtl
test
pop
dec
mov
fstpt
sbb
cmpsb
cmp
out
rcll
jbe
jno
or
nop
push
loope
scas
and
push
jb
xchg
add
in
pop
mov
inc
aam
fcompl
ja
jnp
cmpsl
test
popf
pop
or
pop
clc
cmpsl
ficoms
inc
bound
paddb
mov
xchg
pop
and
push
xchg
adc
lock
rclb
sti
sub
jl
lahf
out
mov
xor
jnp
das
les
pusha
js
jae
pop
aas
aas
andl
cmpsl
dec
pop
adc
fcomip
jl
hlt
enter
getsec
pop
mov
xchg
sti
je
pusha
test
mov
hlt
fcomip
fimuls
cld
jne
div
addr16
mov
or
xor
mov
shlb
push
inc
ret
mov
xor
in
ficoml
stos
lds
pop
add
mov
loop
sbb
adc
ret
adc
insl
push
adcb
popa
pop
mov
push
jl
sbb
push
subb
aam
and
mov
add
xchg
adc
pop
mov
pop
xor
add
push
mov
inc
ljmp
repz
push
ret
jp
std
add
out
jmp
adc
lahf
and
sub
pop
inc
jge
add
mov
xchg
es
mov
xchg
stos
inc
jns
bound
xchg
inc
mov
cmp
dec
sub
int
lock
je
imul
pop
adc
dec
jne
sub
jb
cmpsl
or
inc
leave
pop
pop
cmp
das
shrl
decl
stc
lock
mov
xchg
or
pop
push
pop
shrd
inc
rol
out
shlb
mov
xchg
mov
xchg
push
mov
iret
aaa
imul
arpl
dec
test
sub
mov
sub
sbb
and
pop
repz
ret
dec
adc
js
notb
sbb
bound
lret
mov
loop
jecxz
lret
adc
insb
mov
lret
in
mov
ljmp
or
stos
sub
mov
ja
cmp
pop
mov
bound
sbb
rcrb
sub
shl
arpl
cmpsl
jge
jp
loope
shrb
out
xchg
dec
and
stos
les
pusha
imul
scas
loopne
ret
inc
push
out
and
das
fwait
pusha
dec
dec
insl
or
dec
pop
stos
inc
ljmp
or
cwtl
xchg
inc
dec
pushw
pop
or
jne
dec
int3
mov
add
int
mov
cmp
xchg
xor
xchg
jg
popf
xor
xor
dec
test
pop
and
loopne
and
scas
inc
dec
cltd
jne
adc
and
bound
jl
mov
call
dec
les
dec
out
mov
out
mov
nop
imul
sti
adc
es
mov
ret
xor
fxch
mov
dec
push
jbe
mov
jns
clc
adc
gs
mov
in
or
mov
loop
pop
lods
add
popf
mov
in
pop
mov
xor
mov
inc
arpl
adc
add
shlb
pop
int
js
sbb
mov
xor
dec
mov
cld
adc
fwait
jle
pop
imul
jns,pt
sub
mov
mov
xor
sub
adc
insb
adcl
stos
or
fcmovnu
mov
pushf
aaa
loopne
pop
scas
rorb
xchg
lcall
and
push
aam
es
mov
bound
cwtl
and
mov
xlat
hlt
lret
dec
ja
mov
push
loopne
xchg
aam
mov
js
aaa
mov
mov
jne
mov
push
sbb
cmpsl
sti
pop
mov
adc
dec
mov
lods
aaa
mov
dec
mov
fisubrs
mov
xchg
cmp
cmpsb
notb
mov
outsb
es
sti
loopne
out
pop
add
mov
mov
ja
test
lcall
pop
xor
je
out
ret
js
pop
adc
pop
pop
adc
inc
fidivrl
mov
loope
ljmp
test
sarb
scas
fisttpl
out
hlt
pop
movsb
out
and
ficoml
cmp
sbb
adc
test
divb
add
adc
fldcw
cmp
xor
jno
stc
pop
popa
mov
in
dec
arpl
mov
pop
inc
mov
sti
jne
mov
dec
and
jg
jb
and
add
jns
inc
push
stc
sub
data16
cmp
lods
ret
mov
in
cltd
sbb
popa
jmp
jecxz
das
pop
mov
shl
push
incb
jle
lahf
lcall
cmpsl
jns
add
mov
add
cmpb
lods
push
sbb
shlb
mov
test
push
int
bnd
sti
mov
fmull
jns
mov
aam
scas
insb
mov
and
adc
adc
in
pop
loopne
add
shlb
out
lcall
adcb
aaa
daa
inc
mov
lods
dec
sbb
push
add
pop
in
push
push
rcrb
outsb
dec
cmp
in
icebp
adc
jno
loop
jmp
in
push
cmp
ret
bound
or
jle
gs
hlt
push
push
shrl
gs
adc
push
adc
push
mov
cmc
sbb
add
out
push
mov
in
xchg
pop
inc
push
data16
movsl
sbb
pop
sbb
cwtl
xor
push
mull
lahf
adc
fisttpll
xor
sbb
enter
xor
lods
in
fdivs
fisttpll
sub
int
mov
push
push
jb
or
nop
adc
or
xchg
shl
int3
int3
adc
inc
imul
mov
dec
xchg
cmpsb
es
cmp
shlb
dec
stos
rolb
fldl
or
add
shrl
push
cs
test
aam
push
ss
daa
mov
scas
xchg
nop
mov
lods
pushf
adc
mov
xchg
rorl
add
scas
sub
cmp
pop
pop
mov
dec
or
lock
xchg
cmp
rcll
lret
bound
arpl
xchg
rcrl
xor
xor
xor
lret
xchg
daa
daa
fistpll
enter
imul
push
inc
scas
fdivl
inc
dec
lods
mov
push
jae
pop
mov
cmc
out
andb
cli
stos
jns
enter
and
mov
popf
mov
xorl
mov
mov
xchg
dec
ud2
adc
jns
lods
and
lahf
out
inc
or
adc
fisttpl
mov
imul
shrl
cmp
add
push
adc
sbb
scas
cli
push
fwait
dec
push
add
ds
pushf
call
fwait
movsl
dec
add
jp
fiadds
and
add
dec
je
lods
sti
xor
sub
lods
xchg
mov
push
inc
cmp
jnp
jno
aam
ljmp
cli
fld
adc
mov
dec
pop
mov
jb
jo
dec
movsl
es
jl
and
lds
push
stos
cmp
push
jge
test
push
addr16
inc
or
lret
sub
outsl
push
imull
adc
test
add
mov
lods
push
fstpt
push
jo
jmp
stc
cmp
adc
ss
scas
out
nop
cld
xor
lahf
sbb
in
scas
and
call
ss
addl
and
inc
and
ss
xchg
rcr
cmp
cli
sbb
jno
out
loopne
outsb
lods
inc
sahf
xor
pop
test
aam
outsl
in
jns
out
repnz
movb
xor
ret
enter
or
rcrb
cmp
ja
xchg
ss
sbb
popl
aas
lds
scas
lock
repz
fmull
push
fsts
xor
mov
je
fldenv
xchg
movsl
cli
mov
lahf
mov
mov
sub
shll
mov
andb
push
xchg
jle
mov
adc
jbe
aas
ja
push
xor
xchg
jge
xor
loop
sarb
je
or
mov
add
push
pop
inc
jecxz
add
loope
and
repz
push
push
mov
in
inc
enter
insl
mov
cmc
outsl
mov
rolb
jmp
aad
push
pushf
lcall
lds
cmc
out
cmp
fld
xchg
mov
gs
dec
stc
int
xor
dec
jns
xor
aaa
pop
nop
xor
gs
jl
nop
rorl
jae
inc
push
pop
mov
or
push
and
mov
aaa
cld
inc
pop
cltd
mull
add
add
xchg
shrl
push
int3
mov
add
ss
inc
out
je
push
mov
mov
or
xlat
bound
mov
sahf
adc
xlat
test
adc
sbb
pop
mov
repnz
lds
outsl
cmp
cmp
sbb
xchg
cwtl
mov
js
sub
nop
sbb
mov
lret
pop
and
or
fstl
aaa
add
shl
mov
add
jo
xchg
std
fcmovnu
xor
and
into
mov
ja
lea
inc
or
push
mov
lahf
xor
rcll
dec
push
stc
pop
enter
and
sub
sahf
shl
cmp
das
repnz
jb
or
xchg
jb
sub
iret
aaa
ja
fstpt
push
shl
sbb
scas
sbb
pop
mov
hlt
adc
and
mov
call
mov
or
jle
lock
add
cli
mov
dec
xor
adc
cli
sub
and
ljmp
out
fmull
jnp
lret
mov
inc
ret
data16
mov
sub
mov
stos
sbbl
pop
mov
movsb
push
out
inc
adc
sub
adc
pop
mov
test
mov
mov
test
cld
pop
push
fimull
sbb
mov
test
push
lahf
test
cmp
movsb
shlb
push
clc
cltd
pop
nop
nop
xchg
cmp
cmpsb
ss
jle
leave
out
push
shlb
mov
and
dec
mov
and
xor
mov
shlb
sbb
bound
imul
les
cwtl
sarb
push
add
mov
data16
fcomps
push
subl
clc
test
inc
mov
stos
insb
cmp
jnp
adc
jbe
jmp
popl
fldcw
and
push
cltd
push
mov
movd
xchg
mov
lret
stc
adc
adc
orb
sbb
idivl
sub
adc
lcall
xlat
mov
xchg
mov
loope
clc
fisubrs
xchg
xchg
mov
cmp
dec
push
out
cmp
add
pop
push
sub
xor
xor
jecxz
dec
divl
scas
adc
orl
pop
outsb
or
pop
inc
mov
push
pop
repz
pushf
stc
movsl
add
lret
inc
inc
stos
cmp
jns
sbb
or
insl
insb
icebp
adc
inc
popa
repnz
mov
stc
push
daa
ret
test
sbb
in
mov
xchg
sbb
add
xchg
popa
cwtl
sub
js
adc
add
sbbb
movsl
mov
pop
es
test
xor
ret
aam
xchg
out
lods
fidivrs
imul
add
pop
push
add
xor
addl
dec
test
dec
sahf
pop
jp
mov
aaa
pop
mov
out
dec
or
cwtl
xchg
jnp
mov
fwait
and
cmp
mov
les
rorb
enter
std
mov
pop
pop
adc
push
sub
int
jecxz
pushf
or
stc
inc
xchg
push
add
aas
mov
cmpsl
mov
sar
adc
in
in
xchg
cmp
push
sahf
push
mov
scas
push
shrl
add
dec
dec
pop
roll
adc
xor
shlb
xchg
add
cmpsb
bound
xchg
xchg
xchg
pop
push
mov
push
jge
gs
sarl
mov
push
xor
push
les
lret
ja
mov
outsl
stos
call
adc
cmc
mov
and
cmp
cwtl
mov
add
add
mov
imul
push
pop
lock
lock
jge
ljmp
rcrl
sbb
clc
xchg
xor
mov
mov
repz
xorb
lock
loopne
jne
into
fwait
push
arpl
xlat
lcall
pop
xchg
insb
iret
loope
xchg
mov
fiadds
lahf
gs
xchg
cmpsb
push
xorb
popl
leave
mov
pop
stos
lds
push
inc
mov
clc
xchg
into
xchg
outsb
lret
sub
ja
jl
lock
mov
repnz
add
jl
push
mov
repnz
cwtl
rcrl
cmp
mov
in
stos
dec
movsl
in
sbb
cwtl
adc
dec
lock
add
imul
inc
jb
cli
mov
stos
scas
sbbb
enter
xor
push
aaa
sub
inc
ljmp
icebp
loopne,pn
out
insl
mov
mov
dec
ljmp
and
mov
xor
adc
iret
cltd
daa
dec
bound
pop
js
je
sub
lods
xchg
push
test
mov
and
movsl
loopne
lods
or
xor
cmc
dec
jno
sbb
adc
sbbl
pushf
fwait
or
addr16
arpl
inc
iret
or
pop
push
lods
scas
sub
jnp
mov
push
in
xor
inc
pushf
ljmp
sbb
or
pop
adc
loopne
xchg
lret
mov
out
dec
mov
cmp
push
pushf
scas
and
xchg
pop
cmpb
in
in
stc
add
mov
fnstsw
cli
mov
dec
in
ljmp
roll
imul
sbb
and
pop
mov
outsl
pop
int3
gs
push
mov
aam
mov
xchg
clc
or
dec
add
xchg
cltd
pop
sub
fisttps
roll
jno
and
into
mov
adc
cwtl
sbb
dec
movsl
div
jbe
mov
repnz
xchg
cmp
add
and
mov
daa
dec
mov
int
ficompl
inc
out
jecxz
insl
andb
jle
pop
and
push
cwtl
mov
jno
pop
test
pop
mov
out
ljmp
jnp
inc
mov
daa
mov
ror
cmc
loop
push
ficoml
pushl
dec
push
add
mov
mov
push
scas
inc
xchg
jmp
ret
fistps
or
dec
fnstsw
pushl
mov
dec
and
movsl
lock
dec
push
out
aam
jl
xchg
jmp
jmp
bnd
rolb
bound
cmc
and
sub
clc
loope
adc
sbb
mov
aaa
int
jecxz
int3
enter
jg
or
sti
jnp
fnstsw
adc
sub
je,pt
sub
add
bound
in
dec
into
jnp
movl
sub
test
dec
inc
inc
shl
xor
rcr
stos
mov
sbb
std
sub
pop
in
adc
dec
fwait
out
sub
leave
cmpsb
ret
jge
outsl
nop
jecxz
cli
jbe
push
insl
lds
mov
lock
lods
aas
mov
ds
add
out
jg
dec
push
insl
xor
dec
jns
add
jae
add
push
xchg
lret
fcmovnu
imulb
in
cs
dec
pop
rcll
es
pushf
push
lods
in
or
sbb
xchg
dec
hlt
inc
aad
push
mov
push
fcomps
and
jbe
ja
fmull
mov
and
js
mov
and
fs
iret
lods
xorl
cli
pop
stos
inc
aam
pop
icebp
sbb
sub
inc
bnd
jle
cmp
mov
nop
mov
int
and
mov
pop
stc
sbb
in
jl
test
cmp
mov
push
outsb
mov
orl
sbb
add
clc
cld
shlb
cmp
push
data16
int
sub
rorb
xor
fs
push
mov
ret
and
inc
adc
cwtl
xchg
push
sbb
fs
sbb
lret
jbe
cmc
xor
mov
rclb
pop
ss
movsb
mov
daa
sub
jo
inc
imul
fstpl
adcb
cmp
into
push
sbb
bound
mov
mov
mov
in
mov
cmp
dec
cmpb
cmp
cmp
and
icebp
ss
adc
outsl
xchg
lea
xchg
loope
scas
mov
lret
notl
pop
lcall
sahf
testl
mov
jl
out
clc
out
aaa
push
push
divl
inc
mov
out
pop
pushf
mov
push
fiaddl
imul
out
arpl
sti
and
xchg
fnstenv
xchg
cmp
xor
xchg
xor
jo
mov
adc
adc
xor
mov
rcrl
sub
scas
sbb
or
mov
or
iret
in
cmp
sub
out
sbb
cltd
int
out
sbb
sahf
test
xor
test
jnp
xchg
push
mov
mov
jae
stos
das
idivl
repnz
dec
insb
scas
xlat
out
jbe
cmp
xchg
int3
mov
fidivs
mov
js
pop
ljmp
jns
adc
ret
adc
mov
sub
pop
imul
int
movsb
imul
shrl
cltd
outsb
pop
jae
nop
xor
out
je
jge
adc
lcall
xchg
inc
lret
nop
aam
inc
cmpl
cmp
push
cmp
fwait
inc
or
mov
lds
scas
ret
mov
popf
icebp
sub
gs
mov
shll
aam
cmp
jmp
sbb
popf
rcrl
xor
mulb
mov
xor
aam
jne
lods
mov
fiaddl
fmul
xor
or
push
mov
xchg
mov
adc
popf
lods
cmp
les
inc
adc
std
mov
cltd
pop
xchg
jno
daa
lahf
js
xchg
or
push
adc
mov
insl
int
stos
hlt
dec
bound
fucomi
idivl
xor
mov
scas
int3
mov
add
dec
fistps
lcall
dec
adc
dec
shr
mov
fldl
cmp
sbb
push
mov
and
aam
mov
jl
and
aaa
incl
dec
mov
lret
jge
jne
dec
jae
xlat
push
sti
mov
mov
jb
or
iret
repnz
iret
inc
fs
cs
sahf
push
lds
or
test
xchg
mov
insb
cmp
mov
mov
outsl
sti
aam
call
incl
scas
daa
sahf
aaa
les
pop
jecxz
testb
mov
sub
data16
outsb
icebp
fistl
pop
pop
xchg
je
xor
pop
add
aam
jb
inc
pop
stos
aad
cld
inc
fildl
mov
mov
aas
outsl
movsb
scas
test
dec
push
cwtl
in
push
popa
pop
in
cmp
add
test
pop
or
ficompl
movsb
lods
lds
jge
popf
mov
jle
lds
jnp
inc
cmp
cwtl
fwait
push
cld
stos
scas
cld
pop
dec
and
int3
mov
xchg
xchg
dec
cmp
lds
insl
movsb
int
inc
mov
rol
dec
mov
das
xlat
fisttpll
jb
es
adc
jae
xchg
inc
outsl
into
cmp
ret
mov
in
insl
dec
leave
sbb
cmp
lahf
mov
push
and
cmp
jne
inc
stc
inc
push
mov
sarb
cs
lahf
jle
jbe
mov
xchg
and
or
lahf
adcl
cmpsl
test
inc
repz
flds
notl
pop
pop
test
pop
push
in
mov
mov
out
cmp
push
fsubrp
jg
sbb
jmp
pop
dec
fs
xor
jo
add
leave
call
add
je
daa
shll
adc
ljmp
mov
pop
fs
ja
movups
xor
pop
sbb
adc
out
rclb
leave
and
aam
addb
mov
mov
inc
fiaddl
sahf
out
fisubrl
xchg
in
mov
pop
mov
shlb
mov
inc
add
dec
dec
inc
jge
xchg
pop
mov
adc
sub
adc
and
mov
cmp
movsl
sbb
inc
cmpb
mov
cmp
jmp
adc
or
and
push
mov
push
aad
xchg
daa
lods
stos
add
sbbl
clc
xchg
adc
andl
xchg
repz
je
mov
add
mov
cwtl
out
and
adcl
mov
mov
insb
push
movsl
loopne
jne
pop
repnz
mov
iret
or
xchg
push
mov
and
jo
push
adc
jmp
jnp
xor
mov
jno
nop
inc
push
hlt
pop
pop
xor
das
scas
cmpsl
push
icebp
jne
lret
stos
cmp
test
fcoml
adc
les
sub
dec
js
xchg
mov
xchg
push
inc
or
popa
pop
push
cmc
sarb
hlt
pop
out
pop
push
test
lods
test
mov
push
mov
in
dec
aaa
xor
add
jo
push
sahf
lods
cmp
mov
lcall
dec
roll
sbbb
push
enter
cmc
sbb
call
call
shrb
movsb
mov
out
ror
dec
or
jnp
mov
aas
mov
mov
in
push
orl
jmp
mov
in
out
sbb
scas
pop
sub
stc
std
inc
pop
mov
fucom
cmp
addl
and
aad
lock
lcall
cmpl
push
sar
stc
pop
sbb
das
jno
mov
cwtl
mov
les
or
scas
push
xor
lret
mov
outsl
xchg
adc
pop
mov
je
push
sbb
sahf
push
popl
mov
ljmp
js
mov
xor
pop
arpl
push
sub
js
das
movsb
inc
aaa
adc
nop
or
out
daa
movb
pop
stos
dec
jge
sbb
ret
test
ja
xchg
imul
mov
ljmp
mov
jle
andb
xchg
in
dec
pop
lcall
push
push
adc
inc
mov
icebp
cmp
dec
cltd
pop
test
jne
mov
test
clc
loop
aam
mov
mov
adc
xchg
cmp
push
inc
pusha
sbb
xchg
lret
push
add
sub
mov
lret
aam
jecxz
ja
dec
sti
bnd
xchg
andl
gs
jl
outsb
and
or
daa
aam
sbb
std
sub
jbe
push
inc
xchg
sbb
pop
mov
movsl
mov
cmp
push
lret
or
inc
and
ss
jo
das
aaa
mov
lds
iret
mov
adc
jge
popf
mov
orb
jno
mov
add
inc
in
inc
adc
xchg
mov
jae
mov
dec
adc
mov
xor
sub
mov
icebp
aam
into
test
push
in
lods
push
insl
sahf
gs
mov
mov
mov
sub
enter
cmp
into
aas
loope
hlt
xor
or
push
lahf
mov
std
mov
mov
sbb
pop
insb
and
ds
mov
or
mov
jb
leave
dec
lcall
mov
repnz
push
dec
and
popa
pusha
out
test
out
call
js
push
cli
push
mov
xchg
lret
stc
mov
loopne
cmpb
jg
jle
cmp
push
lcall
ljmp
scas
mov
push
jle
daa
cltd
cmp
lcall
push
aad
push
or
enter
inc
enter
sub
repnz
addr16
cmp
push
cmc
enter
fwait
push
adc
cmp
cmp
jbe
push
dec
sub
movl
sti
xorb
sub
add
xor
negl
cltd
sahf
push
rclb
xor
pop
xchg
add
roll
mov
lods
cmc
daa
xchg
mov
pop
jnp
dec
mov
xor
bound
cmp
je
fcmovb
shlb
lock
jne
mov
cmpsl
push
loope
jp
test
lret
mov
arpl
mov
mov
mov
daa
loope
jns
adc
les
pop
aad
dec
or
mov
data16
pop
xchg
js
jle
and
xor
cmc
rcl
and
shlb
enter
dec
inc
and
inc
andb
inc
mov
ljmp
or
hlt
jo
push
rorb
cmpsb
sbb
dec
arpl
adc
mov
mov
jle
in
std
add
mov
push
cmp
pop
sub
dec
fidivrl
std
loope
inc
mov
adc
aad
sarb
cltd
pop
and
xchg
jg
push
outsl
jbe
push
int3
lcall
dec
cwtl
ret
pop
adcl
inc
or
roll
or
dec
or
add
and
in
ret
loopne
and
inc
dec
dec
in
adc
fwait
sbb
mov
ljmp
int
repz
mov
cwtl
out
ss
inc
xor
jp
push
loope
inc
out
cmp
dec
pusha
or
repz
push
out
adc
ret
cmp
iret
pop
or
inc
lahf
jne
or
xor
lea
jle
lea
jne
outsl
movsb
inc
pop
movsl
pusha
sub
jecxz
jge
dec
call
enter
sub
mov
push
jecxz
fnstsw
mov
sti
push
add
lods
adc
xor
jne
push
xlat
icebp
into
mov
mov
xor
pop
ret
popf
loope
mov
test
adc
mov
xchg
negl
lret
mov
sbb
or
int3
rorb
push
sbb
leave
in
bound
jb
mov
and
mov
mov
push
mov
adc
jmp
pop
or
xor
pop
pop
out
out
sub
jl
jbe
gs
clc
idivb
inc
jno
andl
cmp
xchg
mov
lahf
insb
sahf
out
inc
add
push
inc
push
test
ret
inc
push
pop
test
fs
pop
mov
mov
cwtl
lock
pop
push
test
lea
rorl
dec
jp
rcrl
test
imul
scas
imul
mov
pushf
cmp
xorb
in
push
aaa
decb
rcl
jo
shlb
into
stos
clc
nop
sub
stos
addr16
movsb
loopne
shll
ja
push
outsl
sbb
dec
sahf
lret
xchg
push
xor
and
dec
mov
mov
and
cltd
and
loope
mov
xorl
xlat
xchg
lret
fistpll
fistpl
xchg
cmp
insb
test
sbb
mov
push
xorl
push
jbe
mov
push
rcr
ror
ret
mov
xchg
lods
cmp
pusha
in
pop
and
mov
pushf
sub
clc
mov
loope
push
sub
fidivl
pop
pushf
insb
sub
loope
stos
add
sub
sbb
into
scas
fdivrl
add
or
inc
insl
or
stos
add
push
inc
in
cmp
lcall
pop
or
or
mov
mov
and
fidivrs
inc
mov
jle
sub
imul
fnsave
mov
push
cmp
mov
sbb
call
jecxz
push
cmpsb
ss
rorl
lods
push
enter
lea
aam
addr16
loope,pn
mov
sub
xchg
jb
add
out
push
jae
loop
movsl
add
or
mov
mov
adc
insl
iret
sub
pop
inc
jns
aaa
popf
std
inc
ret
sbb
dec
les
jne,pn
ret
sahf
stc
push
push
stos
mov
lcall
xor
mov
sbb
orb
test
pop
loop
sbb
outsl
in
lds
bnd
fsts
inc
push
xchg
rcrl
push
shrl
jmp
fists
push
cmpb
pop
mov
movsl
stos
jo
pop
or
popl
mov
push
jp
cmp
pop
mov
gs
or
jl
addr16
loope
fwait
leave
xor
shlb
andl
adc
adc
gs
mov
sti
push
loope
adc
sbb
mov
dec
pop
cmp
dec
mov
loope
xchg
xor
sbb
pop
inc
test
test
mov
jg
and
inc
mov
jecxz
out
das
add
lret
lock
test
and
jg
dec
mov
mov
loop
mov
mov
int3
xchg
imul
xchg
addr16
bound
cmp
sub
mov
inc
inc
add
mov
add
xchg
add
dec
je
sbb
jbe
cmp
pop
adc
das
cmp
mov
cmp
test
pop
pusha
jns
loope
outsl
sub
call
fwait
shl
movsl
cmp
jp
daa
ret
pop
int3
mov
adc
dec
pop
leave
inc
add
jecxz
push
cld
jno
jecxz
js
stos
scas
xchg
push
inc
std
rcr
inc
mov
enter
testl
jns
stos
mov
push
test
int
jns,pn
cmc
or
sarb
mov
mov
scas
ret
mov
mov
enter
ds
dec
lret
dec
xchg
or
je
push
ret
das
ja
jae
imul
inc
mov
cmp
movsl
cmc
fidivrl
lea
rclb
call
mov
imul
push
repnz
mov
ret
je
dec
imul
dec
cltd
mov
sub
jg
mov
cmp
loop
insl
aad
scas
xchg
arpl
jno
push
mov
outsl
pushf
add
mov
negb
adc
mov
jmp
neg
xor
mov
rcll
aaa
ljmp
dec
cli
lret
jge
add
mov
cltd
cmp
or
lea
ss
rcrb
dec
rcr
push
aaa
cmp
xchg
test
stos
and
inc
push
inc
faddl
push
mov
aaa
xor
leave
mov
ja
fstps
leave
cmp
aas
out
imul
push
lods
dec
push
push
sub
pop
cmpsl
sarl
es
adc
adc
mov
insl
mov
cmpsb
add
ds
inc
addr16
dec
sbb
lahf
clc
mov
jle
sbb
xor
pop
loop
call
popa
fwait
xchg
test
scas
mov
push
insl
rcrl
or
das
mov
and
mov
ret
mov
pop
cmpsl
stc
mov
les
dec
dec
test
push
mov
popf
lea
out
clc
addr16
mov
repnz
insl
lea
sbb
lret
out
inc
cmp
or
ret
scas
inc
cwtl
and
pop
fstps
xchg
fldt
in
aad
fs
jg
fwait
pop
gs
push
arpl
nop
hlt
or
pusha
sar
jecxz
in
sti
test
in
test
jbe
lock
scas
call
jmpw
push
pop
ss
movsb
clc
sub
shlb
or
outsb
mov
test
cmc
lods
pop
inc
pop
dec
fcoms
cmpl
cwtl
inc
mov
push
sbb
pop
sbb
xor
cwtl
or
dec
xchg
outsw
mov
push
inc
in
addr16
call
dec
in
test
cmpsb
or
fmuls
cld
xor
add
cmp
adc
sti
fcomps
int
pop
test
mov
popf
les
scas
loopne
outsl
enter
arpl
dec
scas
daa
int
add
and
fstpl
ret
pop
mov
and
repnz
lcall
mov
clc
call
xlat
outsl
xor
sbb
mov
xchg
hlt
ljmp
cltd
sub
cmp
leave
cltd
sahf
inc
dec
cmp
push
shll
xchg
add
sub
push
mov
movsl
mov
pop
mov
faddp
xor
test
or
lods
jle
lret
stos
pop
scas
push
mov
or
pop
push
pop
pop
xor
testl
aam
add
call
push
push
jl
jb
lahf
cmp
or
leave
dec
lret
push
scas
into
adcl
sbb
mov
cmc
dec
sub
cmp
cmp
inc
insb
pop
sub
xor
mov
dec
in
jno
pop
repnz
and
mov
inc
dec
dec
sahf
enter
sarb
data16
enter
in
out
into
inc
pop
sub
push
sahf
mov
add
pop
in
xlat
nop
dec
lret
cmpsb
aad
test
decb
jns
ljmp
dec
add
fists
dec
jns
ljmp
sub
mov
aad
sub
mov
insl
call
pop
cmp
pop
popa
cli
in
adc
shll
jne
xor
push
cmp
jge
adc
push
arpl
inc
jno
shrl
test
sahf
push
jns
jp
inc
pop
adc
inc
lock
stc
adc
int3
shll
mov
call
xchg
push
sbb
sbb
push
pop
pushf
mov
pop
fsubrs
xor
cmc
adc
dec
and
push
fsubrp
push
and
in
xchg
out
cmpsb
ljmp
daa
syscall
jbe
xchg
imul
mov
ljmp
dec
pop
popf
dec
insb
mov
test
adcb
mov
or
in
mov
jmp
or
sbb
xchg
imul
pop
aas
lods
and
push
sub
inc
inc
jno
data16
fs
pop
rolb
sar
cld
cmovs
jno
sub
push
push
jmp
out
xlat
pop
sub
lods
incb
jg
imul
push
or
lret
or
fwait
push
xor
pop
sub
inc
jecxz
inc
aaa
lcall
add
sahf
xchg
jns
xchg
arpl
rcll
repnz
lea
xchg
shl
pop
xchg
push
xchg
pop
pushl
insl
inc
outsl
rclb
pop
inc
xchg
into
or
das
cmc
scas
insl
jb
andl
cs
sub
mov
gs
mov
movsb
push
lds
sti
adc
fdivrs
adc
leave
inc
int3
test
lods
mov
sbb
sbb
int
std
cs
bound
cmp
sub
xor
fiaddl
mov
jne
daa
pop
aad
cwtl
jae
cmpsl
pop
jne
int
sub
es
jecxz
mov
jbe
mov
cmpsl
xchg
jb
jmp
adc
data16
mov
xor
stos
mov
add
push
cltd
and
ja
push
test
je
shr
fisubl
jbe
gs
xor
pop
lods
add
xchg
iret
xor
cmp
add
push
loop
inc
mov
push
inc
js
rcll
xchg
dec
outsl
enter
iret
adc
cwtl
mov
xchg
ljmp
xlat
lret
dec
xchg
into
enter
loop
popf
movsb
adc
pop
mov
pop
dec
adc
insb
add
push
outsb
pop
cwtl
jecxz
mov
in
sbb
push
movsb
mov
es
mov
mov
cmp
lock
xchg
js
dec
pop
adc
js
mov
aam
pop
push
js
pop
lea
jno
push
into
jl
hlt
popa
adc
stos
xchg
xchg
jno
sub
sbb
loope
inc
dec
ficoms
fucomip
movsl
jb
lret
fwait
aaa
mov
lcall
and
into
sahf
push
cld
fdivrl
in
lcall
fisubl
mov
aad
sub
pop
mov
in
in
sbb
bound
das
cs
flds
lods
pop
fnstsw
call
mov
sbb
sbb
int3
mov
push
pusha
or
jne
jecxz
inc
insb
xor
fistpl
mov
xchg
sti
mov
shll
outsb
cld
xchg
sbb
faddp
in
cwtl
push
or
pop
add
movsl
jecxz
cmp
daa
lea
cmp
movsl
fucomip
mov
dec
cld
fistps
or
outsl
jg
lcall
sub
lock
sub
inc
xchg
pop
fcomps
lcall
insb
aaa
arpl
sub
mov
sub
xor
mov
jo
mov
in
repz
imul
xor
mov
iret
add
or
jb
sahf
fcmovbe
lea
shlb
adc
test
fbld
test
fimuls
bound
fldl
dec
dec
mov
je
add
xchg
cmp
push
inc
adc
add
testb
mov
adc
enter
jbe
scas
cmpsl
xchg
push
clc
mov
das
mov
jno
mov
adc
cld
insb
mov
lcall
mov
insb
jo
inc
out
mov
outsb
adc
inc
pop
add
and
mov
inc
mov
fs
push
pop
out
dec
sbb
incb
mov
cmc
xchg
mov
or
lahf
jmp
add
dec
dec
push
aad
xchg
pop
scas
out
mov
xor
jbe
sbb
jns
ljmp
stos
lahf
fcomps
aad
pop
aas
mov
sbb
push
and
andl
xor
mov
in
arpl
testl
add
int
add
pop
neg
in
shrb
sub
push
xchg
xchg
shll
clc
bswap
cmpsb
and
aad
add
mov
mov
inc
xchg
xchg
or
xchg
les
ljmp
xor
adc
ja
pop
sbb
push
popf
gs
inc
aam
loopne
sbb
or
add
sub
fisttpll
cmp
lret
jns
lcall
fidivs
cmpsl
fidivl
arpl
jb
push
inc
jnp
je
frstor
dec
inc
xchg
mov
cmc
test
pop
inc
arpl
fsts
std
cmp
jg
pop
push
cmp
cmpsl
lea
sar
les
push
sub
lahf
ficoms
jae
push
ja
adc
repz
mov
enter
jno
andl
dec
jle
sub
hlt
adc
fistps
or
push
in
dec
pop
adcb
call
jnp
sti
call
xchg
stc
mov
sbbb
shll
scas
mov
scas
pop
fildll
fidivs
mov
cmp
inc
push
sub
sbbb
and
cmp
mov
dec
sub
mov
lea
mov
lods
aas
push
push
pop
adc
into
inc
cmpsb
cltd
and
call
test
pop
push
push
in
mov
sar
inc
loope
enter
insb
sbb
popf
aas
jmp
adc
jo
into
dec
ds
or
iret
lock
outsl
lret
mov
cmpsl
test
mov
cwtl
sbb
js
sub
dec
stc
or
mov
jge
jecxz
loop
mov
fsubl
test
mull
ds
adc
or
testb
dec
mov
push
mov
std
jo
or
jnp
push
and
test
call
int
pop
cmpsb
ja
inc
test
add
sub
std
pop
lret
jecxz
sti
push
mov
out
adc
mov
pop
mov
in
movsl
jmpw
scas
jbe
pop
add
inc
jnp
test
std
pop
mov
push
and
icebp
and
and
lds
out
cs
lahf
mov
fdivrl
mov
jae
call
jne
mov
neg
cmp
test
cmc
dec
ljmp
insl
mov
dec
xor
les
mov
mov
cltd
in
dec
xchg
jecxz
sub
rolb
xchg
sub
iret
hlt
or
pop
push
jle
xor
pop
push
out
push
dec
cmp
xor
adcl
loopne
inc
mov
adc
inc
xor
mov
inc
in
mov
in
push
fwait
leave
fistpl
xor
into
pop
xchg
jp
out
les
in
adc
shll
sahf
lds
xor
ror
lods
jmp
mov
insl
subb
mov
popa
pop
fs
pushf
nop
aas
jo
imulb
rorl
or
cld
mov
lret
std
mov
inc
cli
mov
inc
lret
and
push
lods
into
cltd
clc
int
xchg
fdivrs
mov
sbb
inc
arpl
leave
imul
xorb
inc
or
testb
mov
pop
mov
push
lret
cmc
loopne
ljmp
hlt
mov
pop
icebp
push
xchg
imul
std
adc
inc
lea
jne
fstp
push
lret
and
call
es
jo
adc
daa
dec
lods
insl
cmp
pop
pop
mov
adc
mov
inc
sub
pop
ljmp
pop
int3
xchg
add
enter
out
std
and
mov
sbb
cs
cmpsl
test
scas
movsl
loope
loopne
inc
loop
cmpl
mov
ret
adc
int3
cltd
test
loop
notl
cmp
pop
add
icebp
aas
inc
adc
lret
inc
push
data16
lcall
into
jmp
ffreep
jecxz
xchg
jo
jmp
out
mov
stc
fmuls
sub
mov
jmp
or
or
scas
scas
lods
neg
jae
clc
lahf
inc
lcall
js
insl
mov
mov
mov
je
data16
adc
mov
dec
out
fistpl
pop
inc
xchg
pushf
cmpsl
testb
out
dec
jbe
push
cmp
mov
stos
in
and
ljmp
add
cli
sbb
loope
imul
sbb
pop
ficoml
push
lds
xchg
popa
push
nop
addb
jbe
push
aas
fs
xchg
mov
push
aad
pushf
aam
fimull
xchg
mov
xchg
pop
stc
daa
jo
test
pop
xor
imul
loop
mov
les
sbb
test
bound
xor
cmp
and
push
xchg
sub
pop
rolb
mov
dec
ret
pop
rcrb
decl
ret
mov
sbb
and
mov
sbb
test
loope
repz
lahf
cmp
pop
and
mov
pop
xorb
push
sar
mov
insb
jae
mov
and
stos
xlat
les
stos
add
inc
pop
pop
xchg
mov
imul
add
in
and
inc
sbb
aas
subl
adc
lret
inc
addr16
mov
sub
loopne
int
inc
imul
mov
jge
dec
in
scas
repz
imul
mov
inc
cli
sub
cmpsb
cltd
faddl
dec
testl
orb
sbb
mov
and
andb
mov
das
sub
cmpsl
mov
sbb
popf
adc
xchg
aas
push
repnz
aam
lret
std
iret
out
stc
jecxz
notb
dec
jg
or
sbb
push
mov
hlt
out
cltd
cli
imul
xchg
fwait
ja
sbb
lret
hlt
fstps
add
add
mov
cwtl
gs
test
enter
sbb
in
arpl
fcmovb
mov
popf
js
cmpsl
adcl
mov
insb
adc
cmp
notl
arpl
or
xchg
jno
pop
mov
pop
push
int
xchg
ss
pusha
add
pop
stos
daa
cs
lcall
aam
fwait
inc
lods
sbb
push
es
jae
inc
dec
movsb
jl
pop
push
aas
cmp
adc
jg
aam
cmpsl
inc
aaa
dec
lcall
push
xor
mov
mov
push
xchg
dec
das
aam
sbb
xor
adc
xchg
xor
arpl
push
mov
mov
pop
mov
iret
add
adcl
fwait
jl
fimuls
xor
mov
outsl
outsl
out
clc
enter
push
dec
and
and
insb
mov
setb
mov
mov
sbb
aaa
imulb
mov
xchg
jmp
sbb
pop
cmpb
fnstsw
lea
pop
push
or
or
rcr
sbb
add
pop
fistl
xchg
das
sti
sbb
dec
jmp
aad
jg
scas
mov
dec
mov
lret
pop
add
sub
add
push
mov
test
loop
int3
inc
cmp
jnp
push
mov
leave
or
pop
aad
xchg
stos
lods
push
push
fbld
stos
cmp
jne
pop
mov
jne
lret
std
add
cs
inc
fsts
jns
les
out
cld
mov
adc
mov
inc
iret
lret
jae
in
and
les
jno
lret
xor
mov
pop
pop
inc
aad
fucom
outsb
inc
cmp
dec
in
pop
daa
mov
push
mov
cmp
mov
aad
leave
repnz
ret
es
pop
and
mov
lds
in
xchg
hlt
js
loope
scas
insl
cmp
mov
adc
push
cmp
fsubr
les
fldt
rcrb
mov
out
mov
andl
adc
pushf
icebp
xor
dec
add
hlt
sbb
std
cmpsb
push
sub
addr16
hlt
mov
dec
xchg
add
adc
push
outsb
repnz
and
mov
mov
mov
and
xchg
out
testb
mov
movsb
out
adc
dec
inc
mov
sub
jae
xchg
lcall
rorb
in
pop
sub
cmpb
leave
pop
push
inc
adc
dec
movsb
mov
addr16
lret
jmp
inc
call
adc
lea
adc
xchg
ljmp
push
pop
lret
xor
jmp
test
testl
push
sbb
add
sti
ljmp
mov
in
dec
xchg
cs
jg
imul
mov
sbb
jo
lds
rcll
cmp
movsl
mov
mov
test
outsl
inc
xor
out
cmpl
add
xchg
add
mov
imul
daa
fwait
ss
lods
mov
mov
push
adc
sub
mov
and
and
loope
jb
xchg
jmp
out
fildll
fs
cwtl
mov
inc
push
pop
push
mov
mov
mov
es
sub
sahf
add
mov
mov
outsb
mov
xor
loopne
nop
mov
in
pop
in
jnp
icebp
xchg
push
xchg
cmp
jmp
mov
andb
mov
xchg
nop
push
dec
loope
push
dec
mov
negb
push
in
mov
mov
pop
xchg
mov
fsubr
jns
popa
adc
cld
add
or
in
ja
fcmovne
jg
fwait
int3
xor
or
int3
outsl
push
ret
pop
inc
pop
daa
fcomip
sbb
fnstcw
insb
loop
aaa
inc
inc
cmp
ret
je
xchg
sbb
movsl
out
jle
inc
dec
adc
pop
mov
insl
aad
push
xchg
idiv
shll
stos
in
inc
enter
das
jae
mov
imul
shlb
push
cmpsl
sub
sti
mov
fbld
aas
jge
inc
or
jp
in
gs
push
adc
imul
movsb
mov
pop
cmp
adc
jmp
arpl
push
ja
lahf
jge
call
lret
mov
lods
jne
mov
loopne
inc
xor
stos
nop
es
jnp
iret
xor
rcrb
cli
cmpl
add
repz
inc
mov
adc
pop
aas
repnz
lret
pop
pop
insl
xchg
pop
dec
in
lds
mov
cwtl
push
shl
dec
mul
or
int3
or
push
push
jb
mov
shlb
xor
or
test
add
mov
sub
push
bound
xchg
dec
pop
mov
mov
in
cmp
movsl
mov
and
dec
stos
inc
cmp
lcall
pop
out
xchg
lds
sub
aam
dec
mov
aad
jmp
in
aas
in
movsb
pushf
je
faddl
into
ficoms
cs
pop
jmp
shl
lret
mov
iret
pop
or
push
je
inc
lods
sbb
xor
pop
mov
push
pusha
mov
in
stos
in
icebp
mov
jge
arpl
xor
outsl
dec
or
call
clc
push
and
inc
pusha
inc
cmp
mov
cld
and
ss
push
inc
jmp
jecxz
lds
mov
out
mov
sub
jae
and
cmpsl
rcrl
push
icebp
xor
jns
sub
sbb
cmpsb
pop
loop
sub
out
loop
sub
faddl
cmp
jge
adc
out
mov
test
js
lahf
mov
shrl
lahf
scas
pop
xor
push
mov
cltd
add
cltd
xchg
cmp
jecxz
repnz
push
aad
enter
out
movsb
xchg
ljmp
xor
sub
lea
sbb
push
daa
or
es
shlb
cmp
shrl
cmp
push
arpl
dec
test
xchg
movsl
xchg
mov
test
xchg
mov
sub
xchg
pop
dec
inc
push
dec
test
jo
loopne
mov
loop
cs
cwtl
aaa
fadds
imul
clc
or
mov
pop
insb
mov
mov
test
push
bound
cwtl
mov
sub
mov
sarl
cmp
out
lcall
inc
scas
dec
cmpsl
movsb
jb
cs
or
push
int
push
lgs
mov
or
negl
jle
mov
xor
test
push
and
dec
je
jo
fwait
and
ja
add
test
mov
lea
mov
enter
pop
push
pop
sub
mov
xchg
add
and
into
pushf
mov
adc
and
ja
mov
pusha
add
out
sbb
jnp
cwtl
loopne
incb
pop
cmp
xorb
lods
cmp
cmp
mov
xchg
rolb
xchg
lret
fiadds
popf
aas
sbb
jp
clc
test
mov
push
jge
clc
cltd
dec
dec
sub
add
popf
pusha
adc
rsqrtps
mov
mov
loop
negl
push
push
jg
dec
inc
add
or
mov
sbb
add
pop
popa
jg
pushf
insl
imul
and
shlb
fldcw
insl
bound
cmpsl
in
mov
mov
dec
mov
in
int3
imull
sbb
mov
cmp
push
aad
adc
sbb
jp
popf
lock
sbb
cmp
outsb
push
mov
push
aad
xchg
xchg
dec
xor
lret
xchg
inc
jg
fwait
xchg
ror
dec
xchg
cltd
xchg
xor
iret
je
mov
xor
jns
push
int3
icebp
jbe
subb
test
dec
xor
out
mulb
movsl
sub
adc
gs
mov
or
stos
cmp
int3
xchg
ldmxcsr
dec
xlat
fdivrl
test
add
and
sbb
ja
movsb
xor
loop
shlb
or
scas
jp
lea
jmp
out
ret
movsl
rcll
pusha
ret
bound
mov
sbb
in
std
sbb
sahf
sbb
aad
cmc
and
in
push
adc
sub
cmpsl
into
adc
mull
or
xchg
xor
mov
cmpsl
fdivp
or
pop
mov
jecxz
push
std
mov
in
jns
fisubs
cld
mov
leave
lret
pop
in
ret
into
mov
inc
jmp
xor
fildll
das
jp
jmp
test
add
pop
dec
jl
je
add
xchg
mov
fisttpll
loopne
sbbl
sub
hlt
xor
sub
mov
out
popa
jecxz
jge
xor
lods
lock
jg
add
mov
mov
stos
mov
xchg
les
cli
jmp
flds
jnp
js
pop
cmovne
jecxz
test
sahf
pop
test
leave
cmp
enter
add
inc
imul
fstps
push
cmp
mov
jae
sub
add
pop
or
mov
cmp
pop
jo
rolb
lret
mov
sbb
dec
push
or
and
sbb
pop
test
mov
hlt
add
mov
icebp
pop
ds
mov
adc
adc
mov
xchg
xor
sub
shlb
int
xor
inc
inc
or
cwtl
pop
fs
mov
cmpsb
data16
and
xchg
shrl
push
dec
iret
adc
fadds
insl
loope
mov
popa
xchg
and
fs
mov
fisubrs
push
sti
call
insl
mov
jl
pop
in
icebp
cmp
xchg
jno
jle
leave
sub
cmp
push
jae
xchg
negb
xchg
insb
inc
mov
push
pop
xchg
scas
in
mov
sub
test
pop
add
mov
imul
jb
fistl
and
cmp
sti
fs
test
push
ds
adc
push
inc
push
mov
lock
add
lret
cwtl
xor
stos
xor
mov
aaa
aad
xor
mov
dec
mov
stos
sub
mov
imulb
rorb
sub
sbb
or
fcomps
clc
aaa
imul
push
ret
outsl
inc
jl
and
sbbl
adc
add
sub
pop
or
inc
adc
mov
loopne
sti
push
mov
ds
adc
fucomp
inc
mov
sub
push
iret
mov
call
pop
add
adc
popf
stc
sahf
jmp
sarl
lds
in
xchg
sti
jno
add
aam
clc
and
les
inc
pop
xchg
xor
or
sahf
scas
mov
mov
push
inc
in
fstpt
icebp
or
imul
stos
shrb
in
cmc
shl
fists
rcll
cli
les
cwtl
hlt
inc
mov
xor
mov
xorl
outsl
inc
and
sub
xchg
lock
ljmp
ja
cmpsb
or
mov
jns
in
mov
js
or
push
leave
jmp
xchg
daa
mov
outsb
mov
inc
scas
adc
loopne
bound
decl
xchg
lock
loope
mov
push
mov
mov
push
mov
lcall
fchs
lret
gs
fs
push
push
sub
and
xchg
push
lahf
test
sbb
mov
stc
or
aad
mov
cmpsb
push
in
push
jne
test
jbe
stos
mov
inc
pop
cmpb
insb
mov
lret
adc
jp
pop
fiadds
and
mov
mov
sbb
sbb
aam
xor
push
inc
cltd
xchg
add
ds
icebp
mov
or
fdivs
mov
pop
scas
and
adc
jle
cltd
stos
xlat
rcl
sbb
xchg
jae
push
pop
imul
mov
mov
mov
lret
in
lcall
xor
ret
xchg
je
xchg
sub
pushf
inc
in
pop
jl
add
inc
mov
cltd
push
mov
and
cltd
test
inc
push
mov
add
dec
stc
orl
notb
sbb
mov
lods
filds
enter
insl
data16
inc
mov
lret
cmp
jle
pop
hlt
lret
pcmpgtd
adc
cmpsl
arpl
scas
cmpsb
movsl
mov
popf
mov
sbb
int3
sahf
jae
addr16
dec
adc
dec
sub
mov
pusha
cmp
mov
fsubs
dec
cmp
jns
and
jmp
pop
adc
je
lahf
stc
daa
loopne
xchg
fistpll
push
imul
mov
andb
sbb
mov
or
mov
or
mov
leave
jecxz
adc
pop
pop
adc
sbb
imul
jg
stc
inc
lret
add
xor
cmp
fs
push
out
ds
ret
jns
xchg
push
inc
scas
loope
push
sbb
std
push
inc
xchg
dec
xor
hlt
sub
push
push
cwtl
movsb
pushf
inc
jge
mulb
mov
orl
rolb
add
pusha
in
jae
fwait
mov
test
jno
call
aaa
enter
das
sub
outsb
in
lcall
pop
or
adc
mov
pop
iret
test
pusha
xchg
lods
inc
pop
stos
insl
mov
sub
addr16
pusha
inc
sti
xlat
lret
imul
jbe
stos
mov
xor
mov
aaa
dec
jmp
pop
cs
addl
push
xchg
les
mov
icebp
pop
push
cmp
or
fs
inc
cmp
fisttpll
int3
mov
cmpsb
dec
sbb
mov
push
dec
jge
cmp
rcrb
outsl
pop
jbe
dec
cmpsl
mov
mov
cmp
add
jae
jne
jno
int
pushf
popa
popf
shll
lretw
scas
mov
inc
mov
cmpsb
pop
pop
mov
fldl
add
and
jo
arpl
push
lcall
daa
cltd
mov
jno
icebp
push
sbb
xor
sbb
jbe
xor
andnps
cld
popf
xchg
push
xchg
mov
add
mov
push
out
shlb
cmp
addl
jno
mov
pop
sbb
xlat
xor
fimull
movsl
stos
icebp
sbbb
xchg
dec
mov
in
pop
xlat
test
jecxz
cmp
mov
xchg
xchg
movsb
jle
mov
mov
sub
out
xchg
insl
add
push
std
xchg
lds
pop
stos
jb
sbb
cmp
jbe
movsb
cmp
push
int
cmp
xchg
jae
mov
jle
scas
stos
mov
ss
out
mov
test
xchg
loopne
pop
stos
sbb
andb
jno
adc
mov
xchg
pop
xchg
je
xor
or
jo
push
out
lds
dec
push
mov
or
in
mov
cs
stos
roll
in
nop
in
mov
and
call
sub
adc
andb
fcmovu
push
cmpsb
lea
jmp
popf
es
mov
mov
fsts
add
in
xchg
xor
movsl
add
fwait
push
dec
lcall
insb
insb
icebp
clc
mov
xor
cwtl
outsl
scas
sti
mov
testl
fsubrs
neg
dec
mov
scas
mov
push
mov
je
jl
xchg
stos
push
mov
xor
ficomps
cs
sbb
xor
jg
pop
mov
popf
mov
stc
mov
test
call
mov
das
or
jp
lods
sub
imul
in
into
nop
jmp
inc
cmp
sahf
test
jp
or
into
jno
pop
dec
shlb
adc
outsl
adc
enter
dec
mov
jle
out
je
into
insb
filds
cmc
push
in
add
mov
popf
sbb
add
or
mov
jb
push
dec
fmul
call
xor
pop
pop
or
pop
and
clc
xor
fs
adc
fisttps
cmpsb
movsb
push
cmpsb
push
addl
mov
popa
popa
nop
lcall
mov
mov
inc
test
sub
je
mov
bound
les
shr
cs
in
fcoml
inc
cmpsb
lock
pushf
push
enter
jb
ds
pop
iret
mov
out
cmpsl
popf
jae
in
aad
mov
mov
pcmpeqb
cmp
cmp
rorl
and
mov
add
int3
ljmp
push
test
sbb
js
outsl
addr16
popf
push
int3
daa
clc
shlb
fsubr
xor
in
das
pushf
sub
sahf
mov
mov
movsl
fldenv
pop
inc
push
aam
subl
test
xor
icebp
mov
mov
es
lds
mov
fdiv
sbb
ret
jno
pop
sarb
and
cmp
insb
leave
movsb
in
push
pushf
fcmovnu
mov
adc
lods
pop
mov
jmp
mov
pop
xchg
push
hlt
or
dec
daa
sub
pop
pop
out
lcall
xor
test
jae
sbb
arpl
inc
out
test
mov
sbb
lock
rclb
push
aad
rclb
fiadds
pop
shrb
popf
inc
lret
dec
inc
sub
push
test
insl
xor
jo
adc
in
jae
out
sbb
ljmp
jb
push
int
mov
or
inc
adc
jp
xor
cmp
dec
mov
movsb
jp
aam
jnp
xor
inc
and
shr
rorl
cs
ss
sub
ljmp
cmp
mov
and
aaa
sbb
pop
mov
cmpsb
sbb
icebp
loope
jmp
sarb
xchg
inc
or
add
ret
outsb
adc
pushf
inc
ss
insl
jno
sub
push
dec
inc
mov
loopne
movsb
sbbb
dec
clc
xor
jb
add
push
pusha
push
mov
xchg
dec
add
or
rol
movl
add
jmp
dec
push
aam
sub
xchg
and
pop
xor
enter
and
add
pushf
lods
rcl
push
sub
mov
xor
and
aas
push
pop
lods
lock
inc
scas
lds
or
jmp
inc
push
add
addr16
or
or
dec
imul
ret
pop
mov
fcmovnb
xlat
mov
outsb
lahf
scas
cmc
push
loop
mov
enter
or
xorb
in
inc
test
scas
push
xchg
ret
or
pop
inc
int
ljmp
adc
mov
jmp
pop
cmp
lret
sahf
js
dec
sub
adc
aad
mov
enter
push
fst
jno
pop
and
ss
xor
xchg
out
fst
bound
xorps
xor
xchg
or
arpl
mov
inc
mov
fbstp
jle
popa
add
push
hlt
and
dec
sbb
cmp
fsubs
sbb
cmp
jg
push
call
xchg
add
pop
lds
push
lcall
push
xchg
mov
inc
xchg
dec
je
fists
bound
sbb
in
clc
jbe
cmp
pop
add
out
out
imul
shrl
gs
test
mov
add
filds
xchg
sub
xchg
popf
lods
jo
dec
outsl
in
aam
push
sub
fsubrl
jmp
daa
xchg
mov
xchg
scas
mov
cmp
test
int
popl
adc
pop
dec
fiaddl
adc
adc
pop
stc
lock
stc
test
leave
enter
cli
jno
stc
movsl
es
mov
cmc
mov
pop
cld
kmovw
inc
xchg
insl
jecxz
mov
sub
push
sbb
icebp
jg
clc
mov
adc
mov
mov
fisubrs
insb
scas
mov
fisttps
mov
cmp
mov
inc
inc
clc
and
xchg
daa
or
mov
pop
vmptrst
jmp
sbb
jb
mov
add
decb
std
in
inc
add
mov
mov
int3
mov
aam
dec
daa
loope
or
cld
fcmove
imul
mov
inc
push
clc
cltd
in
stos
sbb
add
jae
out
adc
xchg
popa
int3
push
fwait
xchg
mov
mov
leave
or
dec
xor
pop
ret
pop
pusha
pop
pushfw
popa
and
pop
js
mov
jl
mov
fucom
jbe
ret
jge
xor
xchg
dec
add
sub
mov
jb
cmp
mov
xchg
repnz
ret
jb
loopne
xchg
cmp
and
outsb
test
pusha
cmc
sbb
inc
xchg
add
fadds
mov
xor
ret
jge
jb
and
xor
in
test
mov
out
push
xlat
mov
cmp
push
pop
sbb
mov
mov
and
push
dec
int3
xchg
into
fwait
enter
push
adc
mov
enter
dec
mov
dec
and
fucomp
inc
adc
dec
xchg
mov
push
aaa
stc
sti
cmp
mul
push
push
pop
shrl
push
cmp
pop
enter
or
orb
hlt
popf
push
jo
lahf
mov
adc
adc
jg
stos
mov
mov
pop
jge
jae
push
mov
inc
xor
sub
dec
pop
pop
fidivs
fdivs
mov
dec
aad
mov
lret
push
rcrb
inc
aaa
in
inc
sbb
and
xor
stos
push
adc
push
sub
das
xor
movsl
popf
ja
std
adc
call
mov
mov
jnp
leave
gs
jmp
insl
fwait
mov
jl
xchg
rclb
push
xchg
lds
sbbl
addl
and
pop
mov
sbb
push
push
mov
mov
jo
inc
int3
or
jb
icebp
inc
cmpl
les
cld
int
lret
and
jp
in
jne
bound
scas
dec
enter
jo
and
addb
mov
sti
mov
sbb
fld
jmp
cmpl
lea
clc
imul
or
push
mov
call
mov
lcall
pop
cld
loop
sub
push
scas
out
jle
lock
xchg
imul
add
mov
add
add
pop
fmul
dec
dec
out
push
mov
das
push
stc
push
sbb
daa
xor
fisttps
xorb
cmp
cli
pop
sbb
outsl
push
jne
daa
dec
or
mov
test
xor
ret
cmpsl
notl
adc
mov
push
mov
lds
pop
into
or
insb
fildl
mov
or
lods
jecxz
and
idivb
inc
sub
cltd
inc
push
sbb
pushw
cmp
push
add
hlt
cs
inc
not
inc
pusha
aad
sahf
jmp
pushf
es
sbb
cmp
fidivrs
dec
fs
cmpl
pop
jg
je
iret
popf
movsb
xchg
add
and
adc
sub
or
aam
cmpsl
xchg
jae
and
ret
std
pushf
xor
dec
addl
xor
loopne
jno
pop
jmp
add
add
dec
movsl
rorl
sbb
in
sub
repz
cmp
cld
adc
xor
movsb
jne
jmp
into
inc
add
pop
push
je
fldl
mov
mov
mov
push
test
jae
mov
or
jl
push
jecxz
xor
movsb
outsb
fsubrl
loope
adc
in
lods
lods
ljmp
or
loope
ret
test
mov
addr16
jmp
mov
push
inc
and
mov
mov
loopne
in
lock
pop
cmp
adc
add
ficoml
cmp
sti
je
call
lret
dec
or
inc
or
hlt
xchg
sbb
mov
into
jno
push
lods
in
push
setb
sbb
and
in
jae
add
adc
add
and
nop
mov
movsl
and
xor
add
jae
jne
mov
or
test
aam
xor
xor
add
shll
xchg
mov
insl
xor
or
and
pop
inc
and
out
or
push
mov
pop
pop
or
adc
enter
and
mov
cmp
or
adc
iret
and
fmull
fcoms
sbb
cmovns
jns
jae
jnp
cmp
repnz
outsl
pop
pop
push
test
xchg
pop
add
mov
pop
fstps
popa
jle
add
adc
bound
mov
mul
and
sahf
ss
lcall
pop
xchg
lret
inc
insb
and
fdivr
sbb
mov
int3
xchg
fs
lcall
sbb
loope
orb
sbb
addr16
pushf
addr16
fwait
leave
dec
push
out
sti
lds
hlt
out
ficomps
jmp
pop
dec
sub
sbb
mov
sarl
pop
mov
dec
xchg
sbbb
push
xchg
fidivs
stos
jnp
in
jmp
cmp
pop
shlb
shrl
cmpsl
lea
js
out
inc
aaa
out
mov
dec
arpl
xor
pop
nop
je
mov
je
hlt
jb
cmp
ret
inc
jge
repnz
inc
mov
lret
lcall
int
fdiv
sub
push
sbb
mov
int
sub
sar
out
push
or
sub
xchg
into
enter
lahf
fimuls
and
lods
movsb
lahf
les
xlat
std
cs
push
mov
jb
push
jg
ss
jg
mov
xchg
out
cmp
test
mov
xor
imul
popf
inc
sbb
ret
idivl
cmp
fimuls
call
fsubr
sub
mov
pop
repz
or
outsl
mov
or
aas
push
push
xchg
imul
sub
ja
int3
aam
int3
jnp
mov
adc
xchg
mov
xor
sbb
popa
pop
into
scas
imul
cld
pop
leave
shrb
cmc
cmp
fwait
cmp
xor
andl
push
and
cmpsb
mov
pop
movsl
cmpsb
cmpsl
add
and
loopne
fdivp
rolb
insb
arpl
call
adc
xorl
enter
sub
ja
mov
or
fcmovne
lahf
sbb
xchg
sbb
push
or
outsl
xchg
fcomps
into
dec
jg
mov
add
jbe
daa
inc
cmp
mov
icebp
cltd
push
cld
xor
push
daa
pop
inc
ljmp
inc
clc
adc
fisttpll
int
jno
cmp
aas
into
lods
data16
xor
data16
jp
dec
fwait
push
xchg
icebp
xor
push
aaa
and
sbb
sub
lret
std
xchg
dec
cld
loopne
in
mov
pop
xchg
imul
sub
push
daa
or
pop
mov
cltd
shll
aaa
xchg
pop
xchg
or
enter
jl,pt
cmp
xchg
xor
and
subl
push
xchg
stos
ds
jns
js
inc
in
xor
sti
jl
jbe
push
mov
sub
int
xchg
fstl
clc
call
push
std
dec
inc
in
subb
scas
pop
stos
mov
and
xor
ss
aaa
mov
movsl
sti
and
repz
jge
rorb
imul
cmp
arpl
push
dec
inc
cmp
insl
adc
mov
cmpsb
mov
mov
mov
in
adc
mov
jmp
movsl
pop
cmp
aam
pusha
mov
inc
inc
aaa
stos
leave
gs
daa
bound
in
and
push
add
fsubl
into
arpl
int3
pop
into
scas
fistpl
mulb
push
xor
adc
ret
mov
push
sahf
jg
ds
out
push
stos
fwait
push
pop
mov
push
cld
fbstp
jmp
aaa
xor
dec
js
je,pn
xor
inc
daa
jb
fisttps
lock
rolb
add
hlt
and
jbe
pushf
mov
jo
enter
pop
rcrb
outsb
dec
ds
lahf
jp
cmp
sarb
imulb
xor
mov
stc
xor
jne
push
dec
repz
pop
lret
sbb
repz
push
xchg
or
and
stos
mov
gs
push
mov
pop
sub
mov
cwtl
push
popa
cmovno
data16
jl
in
xchg
add
push
pop
mov
mov
dec
cmpsb
dec
cmp
pop
mov
push
jmp
sbbl
andl
cmp
mov
add
pop
lds
mov
sub
icebp
inc
push
aad
push
in
inc
push
or
jecxz
mov
pushf
aaa
jmp
getsec
dec
jmp
ds
clc
pop
push
jb
cmp
cmp
ja
test
or
addr16
add
pushl
loop
mov
inc
jne
cs
das
lret
out
and
mov
xlat
fdivr
outsb
xchg
in
fldcw
jns
sub
movsb
cmp
enter
cmpsb
xchg
mov
subb
test
dec
bnd
vsubss
enter
test
in
add
inc
mov
shl
stc
daa
inc
pop
ret
int3
testl
xchg
leave
and
lret
jle
sbb
add
in
inc
or
adc
dec
pushl
lret
jecxz
repnz
test
xorb
xor
mov
add
popf
ficomps
lods
decl
inc
in
stc
xor
sub
mov
push
fdivrs
sbb
cmpsb
outsl
push
pop
je
adc
out
popf
out
loopne
psubusw
sub
inc
mov
call
fnstsw
mov
mov
xchg
xlat
xor
in
out
mov
adc
mov
or
int3
out
mov
push
sub
mov
data16
or
cmp
imul
jnp
loop
cmp
cmpsb
push
stc
add
mov
mov
and
stos
sti
out
and
mov
lret
js
fbld
nop
aam
test
cmp
xchg
pop
cmpsl
jbe
invd
cmp
cmp
mov
ret
popf
imul
jbe
mov
in
xchg
jmp
or
sbb
xchg
fcoml
push
out
xor
xchg
fidivrs
sub
loopne
fdivl
je
push
dec
test
mov
sbb
mov
and
shr
push
fs
cli
cwtl
data16
add
lods
or
data16
loope
out
mov
jle
sbb
xchg
xchg
push
xchg
imul
movsl
repz
pop
mov
shll
and
lods
sbb
jne
scas
fadds
xchg
stos
sub
pop
add
cltd
mov
daa
mov
mov
xchg
jl
push
xchg
pusha
test
or
add
jmp
ror
mov
and
daa
adc
pop
mov
sub
cmp
lahf
stos
lret
xchg
nop
jns
xchg
cmp
rcrl
sub
jae
sbb
ret
call
scas
and
flds
mov
stc
pop
daa
shl
lock
ljmp
xchg
aaa
call
jg
sbb
movsl
mov
xchg
fs
xor
add
imul
pop
das
dec
pop
call
xchg
cmp
or
jnp
xor
fld
cmp
jl
add
loop
add
dec
enter
add
and
or
out
jmp
inc
icebp
imul
loope
lods
adc
cmpsb
xchg
std
sbb
pop
sbb
cmp
inc
test
rolb
inc
repnz
sbb
and
xchg
or
sahf
ffree
and
mov
sub
and
cs
inc
hlt
add
test
push
repz
js
aas
ja
xor
ds
insb
dec
inc
out
loop
pop
pop
aad
mov
mov
jecxz
pop
mov
sbb
mov
outsb
in
roll
ror
mov
ds
imul
daa
or
rorl
jae
sbb
sbb
out
dec
int
cmp
sbb
test
sub
add
pop
push
mov
pop
xchg
fiaddl
cld
ficompl
sub
movsb
cmpsl
sbb
cmpsb
xchg
cmpsl
mov
mov
mov
je
push
mov
mov
into
jb
lods
out
sbb
ds
xchg
lret
xchg
and
movsb
push
mov
in
scas
jno
les
in
nop
mov
pop
lret
scas
ja
cmpsb
add
lods
clc
out
das
dec
mov
dec
sub
rcll
add
adc
xorl
xor
daa
gs
xchg
adc
jge
mov
outsb
leave
or
insl
sub
mov
fcomps
mov
clc
cmp
push
sar
xor
jns
je
sar
jbe
lods
lods
aas
xchg
test
and
add
lret
dec
mov
mov
inc
rclb
aad
int3
mov
push
xchg
aas
shrb
jbe
in
cmc
lcall
mov
push
jle,pt
ret
and
pop
sbb
pop
decl
cltd
fisubrs
iret
cmp
loop
mov
push
and
mov
es
pop
insl
scas
cmp
push
ss
xchg
dec
cmp
sbb
sub
orb
scas
pop
inc
pop
lea
out
sub
andl
add
push
push
pop
xchg
repnz
mov
pop
dec
jns
xchg
add
notl
adc
push
and
adc
mov
sub
inc
push
jno
fdiv
dec
rclb
in
inc
push
cmc
push
xchg
push
stos
pop
out
xchg
pop
std
decb
push
push
ljmp
dec
jmp
bound
aas
scas
test
xchg
and
jnp
in
mov
adc
sub
mov
mov
rorb
pop
inc
movsb
add
test
or
adc
sbb
adc
mov
das
pop
test
push
add
sub
xchg
cmp
mov
push
aaa
into
scas
xchg
insl
xchg
flds
xchg
jns
inc
fnstcw
hlt
jb
jge
lret
mov
xor
test
jae
and
test
shrb
jae
scas
lea
lahf
adc
outsl
mov
xchg
sub
std
mov
inc
or
notl
cltd
add
push
sub
pop
andb
xchg
je
das
mov
out
shr
sbb
inc
test
adc
neg
lock
aaa
jg
jg
lahf
mov
out
icebp
sti
mov
jo
outsl
and
mov
add
movsb
push
gs
and
fs
rcr
aad
add
cmp
pop
movsl
hlt
lock
das
mov
dec
out
ljmp
cwtl
nop
loopne
jnp
test
orl
sub
cmp
and
mov
rclb
xor
test
sbb
mov
in
in
dec
test
or
shlb
aas
out
push
out
and
ja
push
test
fisubrl
ss
sub
dec
insb
cmpl
dec
movl
mov
iret
pop
dec
pop
into
push
mov
nop
push
pop
mov
ss
fsubrs
push
faddl
jbe
cmp
js
cmp
insb
push
push
add
sub
sti
adc
cmp
push
sarb
cmp
std
adc
cld
inc
mov
movsl
ret
sbb
stc
lahf
shll
cmp
add
ret
int
sbbb
gs
icebp
push
dec
cmp
popf
fstps
xor
xabort
mov
sbb
cwtl
std
mov
sbb
ds
adc
insl
sub
loopne
in
or
movl
or
aas
inc
jb
out
out
inc
and
ret
cmp
sub
fwait
sbb
or
xor
mov
mov
push
mov
add
inc
push
dec
je
cwtl
or
cltd
jle
adc
jne
test
pop
sub
mov
cltd
mov
mov
mov
aam
sbb
add
shll
xchg
int
mov
dec
inc
jp
pop
in
fs
push
mov
jge
push
xor
cs
stos
ja
cmpsl
pop
pushf
insl
filds
je
aaa
or
fcoml
ret
xchg
xor
in
sub
fdivrp
push
orl
lret
filds
lods
cmp
cmp
into
jge
push
inc
sub
les
mov
aam
mov
mov
cmc
add
mov
inc
jnp
rorb
jb
jb
mov
rorl
inc
pop
ret
inc
outsb
mov
cli
aam
movb
aam
sbb
cmp
jns
mov
mov
int
lcall
sbb
adc
xchg
sbb
mov
add
sbb
jno
sti
mov
clc
xchg
das
out
fldl
outsb
mov
lahf
andb
adc
popa
aaa
pop
and
and
sbb
inc
cli
xor
inc
dec
lock
or
test
sahf
jbe
fstpt
xor
mov
subl
add
mov
add
fcoml
mov
loope
lcall
cvttps2pi
dec
sahf
jl
sbb
adc
cmp
ret
or
das
arpl
je
dec
mov
filds
pop
xchg
sti
arpl
mov
mov
cmp
mov
push
insl
ret
dec
pusha
or
sbb
cltd
dec
sahf
outsl
outsl
xchg
pop
pushf
in
imul
xchg
fbstp
cmp
js
repnz
push
jnp
bound
stc
sbbb
push
dec
shlb
cmpsl
clc
dec
and
and
shll
push
cwtl
jo
fs
push
shrl
dec
mov
paddusb
sbb
sub
cmpsl
mov
lret
fsin
mov
push
je
push
int3
inc
mov
pop
xor
call
add
arpl
loopne
das
in
add
push
setnp
sar
mov
and
dec
mov
pop
adc
and
test
jmp
out
cmp
push
mov
mov
jnp
mov
and
inc
test
or
xchg
xchg
imul
std
ljmp
sahf
je
popa
pop
adcb
icebp
int3
inc
jle
jbe
out
loope
ljmp
push
loop
and
push
popf
sahf
cmp
repnz
cmpsb
adc
out
testb
lret
stos
add
mov
fcmovbe
leave
pop
pop
rep
js
pop
mov
xchg
push
push
ja
fisttpl
pop
aad
mov
outsl
insl
xchg
iret
inc
xchg
lods
rcrb
aad
pop
inc
lods
mov
popa
push
mov
ja
dec
and
divb
xchg
and
in
aad
and
or
xor
data16
fmuls
in
or
mov
push
and
mov
jp
fnstcw
fists
out
loope
add
jg
scas
add
hlt
ja
js
int
push
cmpsb
mov
out
mov
sub
lcall
adc
arpl
cltd
stos
test
mov
test
cmp
scas
adc
ficoml
movsl
ret
int
ljmp
shrl
sbb
cli
pop
mov
jae
add
insb
xchg
mov
jle
sti
aad
jle
add
or
loopne
or
sbb
cltd
mov
adc
shll
fdivrl
inc
repnz
xchg
mov
mov
jp
cmp
ds
dec
loope,pn
cmc
cmpsb
imul
cmp
inc
subb
outsb
xor
lret
lahf
lock
or
xlat
sub
cmpsb
pop
outsb
adc
pop
out
jp
xlat
or
stc
pop
inc
in
lds
js
cmc
test
pop
or
outsb
lea
dec
pop
add
test
mov
dec
hlt
or
dec
mov
adcl
inc
and
xchg
idivl
in
mov
aam
loope
xchg
es
nop
mov
icebp
add
sbb
fwait
stos
xor
sub
shr
sub
sbb
mov
rcll
ljmp
dec
lods
cmp
mov
sub
pop
jle
lret
push
ss
sub
lock
sub
fs
sub
fstps
pop
sub
in
ret
imul
and
rcrl
outsl
mov
pop
lret
sarl
dec
mov
cmpsl
mov
add
cmpsb
das
fiaddl
aas
pushf
mov
xchg
push
mov
pushf
dec
sub
out
repz
pop
fimuls
cmpsl
pushf
jg
add
popl
mov
aas
loopne
pop
ret
sahf
pop
pop
xchg
icebp
push
orb
cli
mov
jg
push
xchg
in
mov
sbb
stos
xchg
int3
xor
jns
cmp
mov
loop
fisttpll
or
mov
push
lret
cwtl
mov
daa
sbb
jecxz
pushf
scas
xchg
pop
popf
aas
sbb
cs
and
mov
push
cs
adc
stos
ret
ja
clc
lock
pop
xor
js
mov
nop
std
test
idiv
imul
mov
rorl
xor
scas
cmp
add
add
adc
sti
popa
cld
dec
lahf
xor
pop
and
or
xlat
xchg
jecxz
insl
ret
push
mov
ss
sub
xchg
lcall
test
decl
test
cld
xchg
mov
inc
jno
dec
std
sbb
loopne
leave
adc
cmp
add
cmpsb
pop
pop
cmp
and
imul
mov
pop
and
fistpll
in
dec
and
or
inc
mov
mov
cs
or
sbb
addr16
mov
inc
xlat
and
cmc
sbb
repnz
loop
sub
loop
push
mov
push
pop
pop
dec
pushf
add
in
imul
push
inc
add
pushf
push
sub
jmp
jae
jns
mov
rcll
test
push
fdivl
xor
mov
mov
ss
andb
lods
ja
adc
into
mov
pushf
jle
adc
adc
cmpsb
stos
inc
pop
test
roll
ds
push
inc
sub
xor
dec
loop
out
inc
cmpsb
rcl
xchg
movsl
subl
aam
into
push
mov
add
sub
push
xchg
pop
add
les
lahf
xor
test
or
fsub
push
imul
dec
push
mov
inc
inc
mov
loop
lcall
int
or
adc
fs
dec
cmp
jno
outsb
dec
sub
sbbb
lds
dec
cmpsl
enter
push
adc
pop
add
out
xlat
add
or
pop
inc
sarb
mov
lcall
dec
push
fsubrs
jp
les
xchg
stc
cmp
mov
and
lcall
insl
cmp
cwtl
adc
mov
xchg
sahf
jne
sbb
or
adc
jecxz
sbb
xchg
xchg
fiadds
adc
inc
mov
testl
cmp
loope
stos
int
xchg
lret
xchg
insl
mov
cmp
loopne
xor
test
fsts
xorl
cmp
pusha
pop
xlat
xor
jb
cli
push
jbe
lret
lds
inc
xchg
add
stos
push
inc
dec
dec
mov
jge
sub
pop
sub
jo
sub
sbb
inc
scas
dec
ret
mov
jae
mov
insb
mov
ret
adc
insb
sub
mov
mov
jp
fcomps
repnz
outsb
mov
ror
leave
dec
fs
shl
vpaddusb
das
fsub
pop
ljmp
xchg
jp
das
jb
mov
sbb
ss
scas
sub
inc
scas
xorl
sarb
ret
mov
jns
loop
fs
fistpl
ljmp
pop
cmpsb
lret
add
shll
ds
in
mov
into
ret
fstpt
jecxz
push
cmp
sub
cld
sbb
ja
ja
repz
pop
es
rcll
dec
bound
roll
loop
pop
xor
mov
cwtl
leave
andl
jg
leave
testl
pusha
cmp
mov
shll
sbb
cmp
mov
pop
cwtl
ja
imul
jmp
cmp
adc
dec
inc
movsb
xchg
push
rorb
mov
sarb
push
or
add
movsl
xor
cmpl
mov
fbld
xor
mov
and
fidivs
cmp
add
xlat
cmp
test
fwait
icebp
or
sub
fcoms
stos
jbe
xchg
pop
mov
adcl
movsl
adc
pop
inc
inc
adc
icebp
fistl
test
xchg
and
fs
stos
stc
xchg
xchg
cmp
jmp
stc
lock
lods
sub
out
push
and
cmp
jmp
adc
xor
or
adc
jge
neg
push
push
push
sti
movsb
inc
inc
jmp
mov
ds
xor
add
inc
jmp
sub
aaa
xchg
sub
lahf
lret
or
js
scas
mov
sahf
mov
enter
dec
imul
push
xor
out
imul
mov
inc
mov
aaa
loopne
hlt
insl
jge
or
insl
not
test
sub
fstps
daa
repnz
jg
scas
lcall
nop
cmp
inc
ficomps
iret
or
sti
aas
xchg
jmp
lcall
mov
cmp
jno
js
test
push
les
icebp
test
dec
mov
jae
push
orl
jns
mov
inc
mov
in
mov
sub
or
cmpsb
aas
push
aas
mov
in
or
xchg
sub
andl
cmpsb
ljmp
fldt
sbb
dec
xchg
test
mov
enter
mov
cmp
mov
jnp
adc
std
popf
ds
pop
test
inc
out
lock
hlt
mov
lret
in
inc
and
or
xor
mov
push
es
dec
clc
inc
push
outsl
inc
jl
push
jecxz
adcl
lods
shll
jae
sub
mov
hlt
imul
sub
lods
mov
nop
dec
xor
lea
cmpsb
sbb
xchg
mov
fwait
and
pop
out
in
xor
rorb
mov
push
push
push
adc
imul
sub
negl
out
mov
adc
xor
xchg
iret
mov
push
sbb
mov
pop
sub
lea
add
inc
mov
je
push
arpl
shrl
mov
sub
xchg
out
test
inc
cmp
xchg
pop
iret
mov
sbb
test
sti
mov
iret
dec
lods
xchg
ss
scas
popf
subl
mov
insb
ret
cmpsb
dec
dec
push
or
cmp
xor
push
xchg
adc
push
sbb
rcll
mov
dec
jbe
int3
in
imul
cltd
jmp
push
jb
bound
std
iret
rorl
out
aaa
mov
ja
cmc
int
jecxz
fldenv
jge
adc
es
fwait
dec
and
push
add
hlt
shlb
sub
lss
mov
push
xchg
scas
cwtl
mov
stc
pop
mov
in
mov
test
ret
jge
hlt
sbb
dec
adc
shr
and
setb
scas
sub
repz
push
dec
push
mov
rcr
jp
jmp
int3
sahf
mov
jb
push
and
cmp
jp
push
pop
mov
jnp
clc
sti
insl
jge
addr16
pop
mov
in
mov
pop
cmp
test
cld
es
sub
adc
mov
js
jb
stc
lods
movsb
test
or
sbb
pop
sub
mov
jmp
sub
xchg
xchg
or
xchg
xor
cmp
enter
push
sub
mov
call
sub
stc
pop
jo
jno
fidivrs
and
in
dec
adc
enter
pop
out
fidivrl
insb
into
add
test
and
push
int
push
ror
enter
repnz
hlt
out
jbe
fisubs
sub
cli
testl
rcrb
pop
movsb
mov
mov
sub
jle
sbb
xor
fiadds
lret
lods
xor
jp
xchg
push
adc
push
jg
mov
orb
pop
cwtl
inc
in
mulb
movsl
js
in
in
popa
xchg
mov
imul
push
cmp
xor
stos
cmp
sahf
stc
add
dec
adc
stos
enter
test
arpl
mov
in
inc
rorl
fwait
or
jb
mov
lods
dec
push
iret
push
shrl
cmp
cltd
add
daa
xchg
sbb
sbb
or
sub
insl
sarb
mov
pop
mov
inc
push
pop
repnz
shlb
inc
dec
mov
push
leave
and
push
enter
push
and
xorl
jmp
add
mov
mov
push
cmp
mov
cs
fisubrs
leave
test
xchg
sbb
xchg
xchg
and
xor
inc
lcall
js
scas
imul
int3
mov
push
in
or
scas
inc
cld
jns
mov
lock
jle
ret
sbb
adc
in
outsl
fimuls
fcmovnb
hlt
and
jmp
pop
mov
jne
shrb
xor
mov
adc
js
and
cmc
and
pop
rorb
stos
ffree
mov
cmpsl
cmp
psubw
and
andb
arpl
in
fwait
push
aam
jl
sbb
sbb
sbbl
sub
loop
aad
fisttps
xor
arpl
cmp
in
jne
movsl
iret
add
jns
test
loop
imul
lcall
hlt
jae
pop
hlt
jnp
push
fs
sbb
sbb
aam
adcb
lahf
cmc
adc
push
into
test
xchg
sbb
and
sub
jno
ffree
pop
stos
and
push
jge,pn
vpandn
lods
out
sbb
pop
dec
add
std
sub
in
sub
or
nop
sbb
and
lods
addb
cmc
test
test
imul
test
cli
cltd
inc
inc
push
jg
pop
andl
ljmp
xchg
add
or
es
xor
dec
ds
das
mov
inc
aas
dec
mov
fwait
mov
sahf
mov
inc
dec
hlt
lock
cmp
cld
cmp
insl
divb
stos
hlt
aad
dec
dec
add
retw
adc
popa
stos
lret
mov
out
pushf
sub
push
xor
addr16
repz
cmp
repz
repz
mov
sbbb
lods
cmpl
stc
ror
sahf
ds
pop
pop
push
pop
sub
inc
or
int3
call
shl
les
lds
sub
push
add
mov
jl
push
and
scas
fxam
decb
test
inc
or
jb
cmc
add
fiadds
jns
jns
lret
inc
mov
cmp
xchg
jmp
out
aam
cmp
nop
aas
dec
daa
xchg
popa
inc
insb
clc
notb
sysret
push
push
lcall
mov
xchg
insb
pop
add
and
sbb
enter
test
mov
addr16
pusha
add
in
arpl
mov
mov
cwtl
test
outsb
bound
in
int3
repnz
orl
xchg
cmp
push
fnstcw
dec
sarl
pop
mov
xor
pusha
and
push
xor
fs
push
inc
mov
mov
stos
push
pushw
dec
pop
push
dec
jne
iret
jb
sbb
aas
cmp
je
lret
popl
ret
mov
fucomi
lods
sbb
jno
adc
dec
pushf
lret
adc
scas
adc
out
mov
popa
jae
push
leave
pop
daa
xchg
int
jp
addl
movsl
lock
xor
sbb
push
sbb
lcall
jb
push
jge
addr16
dec
add
push
pushf
pop
dec
arpl
int
mov
cltd
lret
pop
int
test
lcall
mov
bound
insb
dec
sbbb
sbb
ds
and
fcmovbe
insl
out
into
or
cmpsb
orb
jecxz
rep
dec
rclb
bound
and
lret
xchg
ret
adc
stos
sub
jge
or
repnz
ljmp
or
stos
dec
mov
sbb
andl
fstl
in
roll
sbb
and
fdivs
out
sbb
stos
mov
jmp
or
inc
sub
mov
arpl
push
lds
out
daa
pop
out
jno
bound
std
cld
jle
dec
stos
popf
xchg
data16
sub
pop
jo
in
xor
gs
sub
or
add
pop
out
int
mov
sbb
inc
jge
mov
mov
push
mov
jg
addr16
mov
stos
idivl
les
sbb
jge
lret
lods
dec
pop
test
fsubrs
jmp
cmp
sub
out
insb
inc
lock
adc
adc
pop
lea
sahf
aaa
and
js
mov
dec
addr16
and
test
and
mov
clc
cmpsb
insl
add
inc
pop
scas
arpl
or
dec
fnstenv
fdiv
mov
sbbl
mov
add
adc
inc
or
pusha
cmpsb
loopne
arpl
mov
fldenv
cmp
or
dec
int
shlb
negl
dec
in
lcall
aam
mov
or
fcmovu
jle
and
mov
iret
push
sbb
stos
repz
lahf
mov
xlat
or
sbb
and
push
and
test
popf
insl
stc
pop
cmp
cmpb
and
out
push
mov
add
mov
jno
jg
mov
out
frstor
filds
aas
stc
sub
out
imul
sub
fidivl
jo
popf
addr16
movsb
inc
inc
stos
xor
fbld
rclb
push
and
xor
xchg
in
test
iret
xor
inc
repnz
pop
repz
xchg
insb
loopne
pop
push
or
aas
lods
and
ret
std
inc
push
pop
cmpsl
add
aaa
fnsave
and
out
mov
dec
sub
and
test
aad
jle
or
inc
cltd
pusha
add
imul
dec
sbb
notl
or
xchg
pop
ss
in
and
adc
mov
out
sbb
jge
or
cltd
les
fcoml
sbb
and
mov
and
mulb
xchg
test
mov
pushf
ljmp
inc
xorl
xchg
jmp
test
in
jbe
push
out
hlt
jae
hlt
add
adcb
ds
add
and
sarl
out
jl
mov
lea
ss
scas
add
imul
dec
mov
adc
lods
xor
mov
sahf
sbb
test
aam
mov
int3
lods
shrb
aad
pop
pop
xor
sub
mov
xor
pushf
mov
push
xchg
xor
adc
jge
cmp
das
xchg
and
push
adc
mov
mov
jg
popa
lcall
push
mov
or
cmp
cmp
data16
clc
out
push
sub
cli
sub
das
xchg
push
pop
cmp
repz
mov
repz
lret
ret
mov
shl
in
dec
nop
ljmp
daa
or
lret
adc
adc
sub
jnp
mov
push
ficompl
cwtl
frstor
clc
loop
xor
add
adc
xchg
lcall
jae
outsb
aam
cmp
mov
mov
lock
mov
out
outsb
into
inc
pop
test
out
inc
sbb
scas
pushf
sbb
js
pusha
cmp
leave
sbb
decl
mov
and
dec
movsl
fisubrl
push
cld
push
rorb
sub
add
data16
aaa
pop
sub
or
mov
stos
or
push
or
and
pop
push
mov
sub
bound
push
push
mov
push
insl
ja
insb
cld
out
loop
add
add
stos
push
shlb
or
stos
or
xlat
adc
das
mov
sbb
cmp
dec
arpl
mov
cmp
aaa
dec
xchg
popf
lods
sbb
scas
sub
ret
fistl
call
fstps
call
jle
lret
inc
pop
gs
mov
dec
pop
jns
xchg
test
dec
bound
in
loopne
push
dec
pop
or
cld
sbb
add
in
mov
ss
mov
sbb
popf
fcomps
hlt
cmpsb
arpl
orb
movsb
xorl
xor
jbe
xchg
jl
add
ja
sbbl
adc
sahf
fcompl
push
adc
ret
xlat
or
pop
or
and
add
sub
ljmp
push
pop
add
push
push
pop
dec
sahf
push
out
lock
arpl
dec
fisubrl
inc
mov
pop
adc
pop
int3
mov
fwait
push
adc
push
cmp
cmp
jp
ds
mov
push
in
das
and
pop
jmp
jae
cli
push
sbb
daa
pop
pushf
pop
mov
and
into
adc
subb
imul
dec
aad
test
rclb
jle
es
push
lods
push
fwait
jge
mov
fidivl
mov
imul
adc
mov
out
out
sub
pop
fnstenv
sbb
popl
mov
push
into
xor
dec
mov
jnp
lock
ficompl
or
loope
test
test
mov
inc
mov
push
popf
pop
cmc
inc
push
rcll
cmp
pop
arpl
pop
mulb
popa
test
clc
pop
xlat
adc
icebp
pop
mov
call
ficomps
sub
es
pop
test
data16
notl
sbbl
inc
mov
push
jae
mov
cmp
int3
push
push
and
in
push
or
jbe
sarl
push
push
andb
mov
xlat
dec
or
cwtl
mov
xchg
pop
dec
mov
dec
in
dec
sub
and
gs
jecxz
push
outsl
test
dec
cmp
out
sub
pop
mov
xor
sbb
sbb
aad
mov
add
push
rcrb
adc
js
push
xor
push
and
xor
iret
cmpsl
test
hlt
addr16
add
mov
inc
repnz
imul
test
stos
sbb
fsubrl
jb
sub
pop
enter
sbb
int
dec
or
xor
xor
lcall
pop
and
mov
jbe
lods
sahf
xchg
xlat
jge
fwait
xchg
je
mov
stos
xor
negl
cltd
out
pop
call
cld
jle
fistpl
mov
mov
insl
add
cmp
lretw
inc
js
cmc
or
ljmpw
aad
pop
jae
push
push
push
adc
das
les
jno
inc
mov
mov
repnz
sti
jno
addr16
push
mov
outsb
addl
in
popa
xor
nop
push
idivl
jp
arpl
sahf
mov
mov
mov
mov
inc
push
mov
mov
andb
push
lret
dec
test
int3
inc
cmpsb
inc
jno
pop
shll
jbe
sbb
lds
icebp
jno
pop
ja
ffreep
adc
add
cmp
push
test
das
mov
dec
xchg
aad
cwtl
fiaddl
jecxz
cmp
scas
xor
jp
imul
ret
insb
pop
mov
sub
mov
pop
xchg
sbb
xor
jns
jne
inc
ss
dec
or
adc
test
sbb
jnp
nop
mov
fisttpll
ret
out
add
dec
shl
mov
adc
adc
lcall
adc
mov
cmpsl
lds
push
and
outsl
les
push
push
cmp
aam
sbb
mov
dec
or
sub
mov
shrb
rcr
es
jge
or
pop
cmp
jg
mov
mov
cmp
repz
adc
xor
mov
stc
sti
xchg
fcompl
cmp
dec
ljmp
and
mov
or
jns
and
dec
out
mov
les
mov
xor
test
rcr
inc
inc
loop
scas
test
out
movl
icebp
pop
pop
sub
cmpsb
inc
ljmp
xchg
std
fcomip
sbb
bound
cld
inc
repz
lcall
pushl
lret
mov
cmc
aaa
mov
shrl
cmp
push
push
lods
sahf
sub
fdivl
jg
cmpsb
jns
push
mov
add
in
repnz
dec
inc
es
mov
mov
xchg
dec
push
loop
fs
and
mov
daa
testb
fadd
inc
mov
push
jns
cs
add
sbb
xchg
les
add
xor
mov
out
imul
rcrb
jge
sahf
lret
pop
push
enter
mov
mov
adc
fildll
sbb
and
cmp
notb
into
push
mov
into
pop
sub
sub
sbb
mov
jle
mov
insl
adc
insb
dec
push
xchg
ret
jg
arpl
sbb
mov
shll
sub
cwtl
icebp
pop
dec
fnsave
scas
cltd
inc
sbb
pop
adcb
cmp
js
sbb
pusha
mov
add
movsb
imul
sbb
inc
xor
xor
xchg
dec
inc
xor
fldenv
and
dec
mov
adc
sbb
pop
cmp
mov
jecxz
jb
or
inc
mov
test
mov
out
shr
rclb
sub
aaa
pushf
mov
inc
ret
mov
gs
mov
sub
or
or
daa
jo
add
fisubrl
ljmp
aad
jp
decb
int3
cmc
or
leave
or
adc
cmp
test
jns
and
add
rol
loop
cmp
cltd
or
xor
daa
lahf
or
jno
mov
jge
clc
cmp
mov
fldl
jmp
and
mov
ja
nop
leave
jo
cld
mov
mov
push
adc
xchg
sub
add
jle
jecxz
push
inc
div
movsl
push
jnp
shrb
sbb
nop
daa
jg
push
adc
cwtd
cltd
fwait
xchg
in
rorl
stc
cld
shrl
hlt
lods
repz
jb
pop
push
push
popf
mov
jmp
pop
lock
push
push
movsl
loope
xor
js
stos
push
sub
ds
sub
lods
push
clc
pop
pop
rclb
rorb
enter
fldt
inc
popf
and
jp
daa
xor
ljmp
jo
lret
mov
stos
psadbw
jae
add
mov
mov
imul
jge
movsb
sbb
ret
jbe
lock
lret
xor
inc
iret
or
mov
icebp
xchg
mov
mov
xor
arpl
mov
pop
outsl
sub
idivb
les
push
rcll
mov
inc
cmpl
mov
insb
fs
mov
mov
jmp
leave
lahf
sarb
popf
adc
and
xlat
jge
or
fldcw
fists
les
mov
inc
lock
xchg
clc
out
cwtl
inc
movsl
andl
outsb
or
adc
mov
stos
fadd
js
fistpl
cmp
and
inc
adc
adcb
jbe
inc
cmpsl
mov
jecxz
push
iret
fsubs
sbb
mov
xchg
cwtl
or
outsl
shll
fwait
enter
les
mov
sub
into
popa
inc
aas
into
fadds
in
in
mov
xlat
movsl
cli
pushf
in
aas
aad
xchg
mov
xor
add
jae
cld
dec
insb
cmp
fsts
std
pusha
scas
pushf
xor
xchg
jno
cmp
pop
cmp
arpl
int3
xchg
vrsqrtss
stos
roll
daa
inc
repz
fsubr
jl
inc
or
ret
jle
sbb
pop
inc
mov
int3
dec
push
inc
jle
int
sbb
mov
fstps
push
push
lock
into
mov
arpl
xchg
mov
xchg
or
jns
mov
jo
xor
sbb
fstpt
imul
mov
inc
aas
js
mov
scas
loopne
mov
add
mov
and
mov
sub
jmp
sub
xchg
adc
mov
cmc
cmpsb
jae
dec
aas
mov
xor
ror
test
or
aas
xor
cmp
or
xchg
adcl
lea
sub
lods
mov
dec
xor
pop
cltd
popf
movsb
insl
shr
xchg
push
lret
cs
mov
sub
lret
sub
repz
imul
iret
push
mov
pop
sub
push
sub
lahf
cwtl
popf
pop
sbb
adc
testb
lea
mov
push
xchg
out
clc
loope
or
mov
pop
pop
pop
and
ljmp
jecxz
repz
jb
mov
adc
jecxz
jp
es
mov
insl
imul
add
or
aad
cmp
dec
insl
push
mov
pushf
bnd
cmc
jecxz
fisttpl
jnp
push
loope
in
xchg
clc
fcoms
orl
es
sbb
addl
leave
sub
cmp
cmc
and
sbb
mov
das
pop
push
dec
fmul
pop
or
pop
xor
addl
in
push
mov
cmp
inc
popa
das
jns
js
push
in
sbb
sub
imull
or
mov
movsb
arpl
idivl
mov
dec
leave
mov
das
mov
xchg
jno
and
movsb
jecxz
dec
lds
adc
mov
and
imul
push
xchg
and
dec
into
pop
push
fnstcw
test
mov
push
mov
xor
mov
dec
jle
xrelease
js
pop
xor
xor
sarl
cmpsb
mov
insb
sbb
mov
cmpsl
out
lea
cld
lret
les
movsb
mov
xor
scas
xor
or
dec
sub
shrb
sbb
daa
insb
xor
adc
pushl
xchg
push
sub
cli
mov
pop
push
pop
daa
jae
lret
lods
fcoml
mov
dec
les
repnz
mov
pop
xchg
rorl
fistpll
lods
idivl
into
pop
push
jnp
lcall
lods
add
sub
mov
cmp
ret
mov
cltd
js
adc
jecxz
in
pop
sti
in
jno
sbb
pop
sub
dec
int
aam
jmp
mov
lock
adc
fs
shr
sbb
sub
aam
out
cmc
inc
loop
dec
mov
push
sbb
pop
outsl
repnz
or
adc
push
call
add
rcr
mov
test
fisubs
movsl
mov
sub
xor
ljmp
push
mov
dec
push
adc
lcall
cmp
lahf
xchg
ja
jl
and
xchg
dec
or
pop
outsb
pop
sub
stc
push
push
push
xor
adcl
pop
mov
xchg
pop
xor
mov
xchg
jo
mov
iret
add
popa
icebp
popa
mov
adc
dec
add
or
xchg
and
lret
pop
fcomp
je
pop
fnstsw
cltd
push
xchg
inc
subb
in
mov
xchg
push
cmp
xor
je
inc
sbb
or
push
ror
test
inc
jb
xor
imul
xchg
lods
or
push
aad
ja
push
addl
mov
je
in
sbb
jle
sbb
sbb
jp
sar
add
ret
xor
enter
fs
or
js
mov
mov
inc
sbb
mov
out
test
cs
shlb
sbb
out
xchg
jae
push
pop
jl
xchg
lahf
icebp
mov
popa
js
inc
repnz
push
pop
rcl
pop
je
ljmp
cmpsb
jno
or
dec
movsl
das
inc
or
push
cltd
pop
fiadds
mov
cli
arpl
leave
push
icebp
cmp
sub
add
loopne
in
push
mov
push
pop
xchg
inc
add
or
push
cmp
aas
mov
jnp
aad
fsts
jb
in
add
cltd
inc
aaa
das
push
mov
leave
push
insl
push
data16
jle
jns
mov
cmpsl
adc
imul
pop
and
call
aam
push
ret
mov
into
inc
mov
push
leave
mov
scas
xor
or
mov
ljmp
lcall
fidivs
dec
or
shll
add
mov
lods
push
aam
mov
mov
enter
jo
mov
test
ljmp
les
cmpsl
sub
lods
xchg
addr16
rorb
and
int
adcb
sbbl
mov
jge
dec
xor
fisubrs
pusha
lock
and
mov
daa
divb
mov
jmp
push
adc
cltd
lret
xchg
into
fidivrl
xchg
loopne
pushf
ja
push
jns
mov
jno
fadds
jl
add
inc
test
test
push
mov
or
lcall
pop
arpl
pop
or
inc
pop
pop
shlb
pusha
add
xor
icebp
cmpb
shrl
in
or
repz
int
xchg
test
loope
lods
inc
dec
rorb
lahf
dec
jle
sbb
addr16
sbb
or
push
add
jg
sbbl
lcall
sbb
add
mov
lcall
mov
in
roll
insl
push
popf
cld
push
jns
pop
push
dec
push
das
and
je
fimull
jle
inc
pushf
fdivs
xchg
and
sbb
insb
jle
imul
sbb
mov
ljmp
dec
cmp
mov
sbb
sub
incb
push
pop
push
mov
xchg
je
jecxz
cmp
cmp
adc
jmp
lcall
sbb
rol
mov
dec
push
push
testb
jno
dec
jo
jns
cmpb
cld
shlb
fcomps
loop
jae
mov
in
out
and
and
xchg
into
xchg
shll
inc
add
push
pop
push
shll
lods
pop
sub
rcrb
push
sub
addr16
mov
in
rcr
idivb
push
xor
xchg
les
xchg
mov
dec
cld
hlt
cmc
dec
loope
xlat
mov
jg
jno
or
sub
movsb
std
fstps
mov
stos
es
pop
movsb
inc
mov
int3
xchg
sub
out
ljmp
mov
mov
les
and
or
push
daa
add
jp
push
sahf
mov
orb
ffreep
cmp
in
movsb
mov
mov
cmp
jno
adc
mov
sub
fldt
dec
movsb
and
jns
out
sbb
arpl
push
pop
xor
jle
mov
lock
movsl
sub
loope
sbb
sbb
pop
mov
add
add
inc
inc
fistps
jle
jno
dec
dec
sub
push
mov
aad
cmpsl
adc
cmp
mov
mov
add
out
inc
or
inc
mov
ss
xlat
fcmove
mov
fisttpl
bound
shrb
loope
cmpb
push
pop
xor
ret
clc
sbb
popf
inc
pop
or
sbb
push
fldl
push
fidivrs
cltd
lcall
cmp
sti
lds
scas
jl
push
cs
sub
inc
xchg
loop
adc
push
jmp
cli
divb
inc
sahf
fisubrl
push
orl
repnz
xchg
xor
icebp
clc
addl
mov
cltd
fsubrs
push
cmp
pop
and
add
adc
inc
mov
popa
pop
loope
dec
cmc
pop
enter
xchg
sub
aas
sbb
fisttpll
pushf
jg
xlat
jbe
pop
and
and
std
popa
sub
mov
jg
loop
loopne
sbb
lcall
adc
adc
mov
out
and
outsb
in
mov
imul
mulb
inc
mov
add
test
fdivs
dec
cld
xchg
cmpsb
push
and
mov
icebp
loop
outsl
xlat
arpl
rorl
shlb
fnstsw
outsl
cltd
jp
xor
xchg
mov
dec
orl
cld
inc
ss
int
bound
test
addr16
pop
popa
add
xor
inc
test
lods
adc
addb
gs
stos
mov
mov
adc
orl
aas
dec
sub
lcall
and
cmpl
xchg
rorl
mov
outsb
iret
int
shll
jbe
pop
mov
out
stc
sbb
sarl
adc
jmp
jno
sbb
lods
and
dec
in
push
arpl
inc
mov
lods
enter
xchg
mov
scas
and
lcall
push
mov
pop
add
add
mov
jl
cli
testl
add
cli
mov
mul
push
pop
shl
pusha
or
push
sub
test
lret
xchg
mov
cmpsb
pop
lret
push
add
daa
cmp
fs
cmp
inc
inc
push
scas
cld
adc
adc
cmp
cmpsl
xchg
inc
jg
mov
ret
sbb
mov
hlt
js
push
pop
push
jae
les
xorb
outsl
iret
outsl
dec
adc
push
dec
add
scas
mov
mov
mov
roll
popf
aaa
repz
pop
mov
jle
pop
or
vandps
adc
sub
add
shlb
pop
add
push
adc
cltd
add
stc
dec
jg
leave
push
cwtl
out
call
out
hlt
inc
and
adc
jo
xor
lock
and
xor
cs
je
inc
filds
imul
jo
addr16
lcall
jnp
or
loop
neg
mov
push
repnz
cmpsl
xlat
daa
xlat
sub
dec
outsb
xor
aad
sub
cmp
and
loopne
xchg
int3
mov
push
sub
xchg
jnp
push
mov
lods
sbb
push
ja
jne
xor
and
fwait
xchg
lret
mov
test
mov
mov
int3
xorb
fs
fstpt
xchg
push
aaa
sub
lret
mov
mov
cmp
jo
inc
repnz
mov
das
int3
dec
rclb
inc
ja
fistps
pop
add
es
cs
fnclex
cmp
cmp
cli
mov
jb
inc
and
mov
leave
push
and
add
sub
loope
or
sar
frstor
and
cli
mov
and
int
pop
dec
cmp
es
and
in
fisubrl
add
shll
ljmp
andb
xchg
sub
xchg
mov
sub
lret
in
jb
sbb
add
lds
xchg
inc
nop
pop
inc
int3
add
xor
or
jb
xor
loope
test
add
mov
or
popf
pop
pop
lret
pushf
add
outsl
repnz
sbb
mov
push
pop
mov
mov
leave
pop
jle,pt
mov
jl
xchg
add
mov
add
out
out
cld
scas
inc
dec
sub
cmpsl
push
or
cld
jnp
push
jns
mov
sahf
adc
pop
xlat
out
inc
xor
mov
mov
push
pop
pushf
pop
jg
jecxz,pn
cmp
adc
cwtl
sbb
std
mull
pop
and
das
push
mov
adc
dec
sti
cmp
ja
fimull
mov
popf
popf
dec
sti
lea
dec
sub
in
and
jne
lods
sbb
fidivrs
lods
pop
andb
jecxz
adc
sub
sti
mov
mov
shll
inc
jg
dec
inc
sub
lods
fisubl
inc
cmp
sbb
lods
adc
adc
cmp
cmc
jne
adc
sbb
shll
pop
fildll
mov
pop
pop
cmovae
out
das
daa
cmp
ret
sub
sbb
push
clc
xchg
mov
in
adc
test
int
inc
fwait
shlb
add
adc
and
xor
sahf
sbb
xchg
lahf
bound
push
pushf
fs
pop
mov
cmc
sbb
and
or
incl
adc
inc
adc
das
jnp
fs
int3
add
frstor
push
add
add
mov
int
jbe
lods
in
push
imul
xchg
mov
jl
adc
cltd
jmp
cld
or
fwait
scas
test
leave
adc
xchg
je
pop
fsubrs
inc
rolb
xor
jmp
adc
push
sub
std
fnstsw
sbb
inc
and
movsb
xchg
jb
sub
rcll
mov
bound
mov
jmp
cmpsl
test
clc
sbb
rcrb
xchg
dec
mov
insl
cmpsb
in
dec
pop
mov
aas
pop
ret
cmp
mov
mov
add
sbb
out
hlt
movsb
shlb
push
and
cs
sub
xor
mov
cli
xchg
or
andb
pop
jnp
aad
push
roll
mov
int
jmp
adc
mov
out
lods
jbe
adc
inc
popa
gs
int
jge
mov
repnz
out
mov
jg
jne
rcr
je
jecxz
mov
mov
mov
pop
imul
ja
fmulp
into
and
in
repz
or
mov
call
adc
jb
pushf
sub
ja
mov
inc
xor
and
sub
icebp
shl
daa
mov
aaa
les
aaa
aas
mov
popf
xchg
out
mov
roll
clc
add
mov
and
inc
push
test
or
clc
out
mov
adcl
js
mov
out
addr16
jnp
push
nop
xor
push
lret
popa
outsb
jae
enter
mov
mov
ret
pop
dec
outsb
jmp
mov
sbb
in
popa
jb
lcall
adc
outsb
and
mov
sbb
mov
sub
lret
push
fcoms
jp
pop
insb
push
enter
sahf
jbe
add
jmp
mov
lret
es
pushf
push
data16
gs
push
sub
jno
cmc
push
outsl
fists
outsb
inc
scas
sbb
cli
jmp
insl
ret
pop
aam
mov
enter
jp
mov
mov
movsb
xor
rcrl
mov
cld
jle
dec
adc
mov
enter
sarb
std
and
xorb
cmp
cs
leave
nop
ljmp
ja
jle
lret
jle
xchg
push
jo
dec
xchg
mov
xor
inc
daa
lret
je
push
jnp
bound
cmp
mov
mov
stos
test
and
xchg
push
adc
push
push
fld
orl
push
mov
in
and
sub
inc
les
test
scas
add
add
pop
shl
js
out
dec
sbb
loopne
add
popa
stos
jnp
mov
ret
xchg
nop
rorb
jg
stc
jp
mov
in
rorl
sbb
xor
pop
ror
mov
imul
out
gs
cmpsb
das
cmp
out
jno
daa
mov
mov
push
imul
cmp
xchg
push
gs
add
sbb
push
sub
mov
stos
dec
cmp
or
xor
lahf
divl
push
mov
push
mov
iret
mov
cmp
dec
sub
stos
mov
cmp
cli
jnp
aas
and
pop
es
inc
insl
or
mov
clc
pop
cmp
dec
or
inc
pop
push
mov
adc
rclb
jb
and
leave
das
call
push
sahf
xor
mov
pop
pop
gs
sub
jns
push
je
adcb
icebp
pop
lret
xlat
jnp
xchg
push
out
js
xor
rcl
scas
push
imul
jle
das
xchg
negl
push
sub
andb
arpl
or
leave
or
jg
ret
shrb
bound
rorb
loope
cli
dec
adc
jne
cmp
mov
mov
insl
test
add
mov
out
jno
idivl
aad
ljmp
push
jae
repz
pop
dec
dec
lock
mov
jp
mov
xor
out
xchg
pop
sahf
cmpsl
enter
mov
mov
ret
ftst
mov
add
ror
xor
sarb
sub
ljmp
mov
dec
mov
dec
lret
iret
inc
cli
add
xchg
fwait
ja
inc
pop
mov
pop
mov
test
adc
mov
sub
lret
sub
adc
mov
fsubrl
sbb
xchg
adc
ret
loope
jl
push
popa
dec
faddp
push
or
jae
xchg
insb
and
or
subl
lret
shrb
and
lods
fisttps
gs
rclb
insb
add
out
lock
add
sbb
inc
push
cmc
cmp
mov
push
repnz
fdivrs
ja
std
mov
xchg
push
jl
jge
ljmp
pop
fldt
popl
imul
imul
jns
lock
sub
add
out
jle
adc
int3
scas
test
xlat
cmp
jp
xchg
imul
sub
fwait
dec
fidivrs
aad
ds
daa
int
jne
ret
arpl
fs
adcl
and
call
loope
adc
insl
imul
mov
push
and
roll
insl
add
or
inc
add
xor
adc
into
and
push
in
dec
cmpsl
dec
in
test
sub
loop
mov
mov
mov
cwtl
repnz
push
std
xchg
adc
add
push
aam
adcl
jg
or
test
adc
imul
pushf
mov
dec
shll
jb
sub
push
mov
cmpsl
in
mov
push
hlt
and
pop
out
mov
rolb
xlat
mov
mov
pushf
xor
dec
inc
pop
jl
sbbl
gs
mov
notl
aam
mov
mov
je
aas
rcrb
mov
mov
pusha
aad
mov
jne
mov
test
loope
repz
out
xchg
sti
adc
mov
push
popa
push
push
fisttpll
add
add
lods
flds
notl
xor
xchg
inc
enter
fldt
jo
adc
inc
addb
inc
sbb
mov
mov
jbe
ret
test
adc
ja
push
pop
and
xchg
sarb
les
cmpl
mov
pusha
cmpsb
lds
add
stc
jb
enter
rorl
sahf
dec
xor
xor
pop
loope
cltd
push
pusha
xchg
je
cmpsb
stc
inc
iret
adc
out
xchg
or
lahf
cld
push
std
xchg
pop
xchg
clc
lock
loope
mov
outsl
lret
mov
push
cmp
pop
outsb
add
dec
aas
cmpb
add
sti
adc
jp
rorb
sti
outsb
fwait
cli
fists
aaa
test
fidivl
add
les
fdivs
push
das
aas
cs
in
jbe
add
mov
cmc
xor
add
push
lea
int
wrmsr
bound
jl
sub
xchg
mov
cmp
fisubrs
lret
arpl
xchg
test
mov
test
cmpsb
inc
std
mov
sub
mov
jl
icebp
fnsave
les
shl
sub
inc
popf
pop
mov
pop
dec
lahf
rorl
inc
mov
ds
mov
mov
stc
add
xor
outsb
movsb
dec
xchg
push
mov
pop
xchg
negb
jge
mov
add
roll
adc
mov
mov
sbb
cmpsb
lods
add
imul
sub
add
je
loope
push
adc
les
mov
mov
mov
dec
mov
sti
ret
push
push
mov
push
rclb
rcr
pop
jle
hlt
ret
movsl
push
push
jp
push
adc
jae
lcall
js
daa
fisubs
int3
push
jl
ret
in
lock
popf
jecxz
push
pop
xor
xchg
faddp
jle
sbb
scas
push
lock
rorb
orl
leave
insb
mov
dec
cs
sbb
push
jmp
movl
lock
sbb
insw
cwtl
aas
xor
sub
xlat
inc
xchg
dec
dec
dec
cld
fstp
ror
imul
sbb
aas
cmpsl
xlat
stos
push
insb
sub
mov
mov
xor
mov
push
push
sub
mov
stos
mov
dec
cmp
cltd
aam
or
sub
int3
dec
push
mov
cs
ret
sub
pop
int
aad
push
addr16
dec
push
das
lds
lods
notl
int
lret
and
mov
clc
decl
repnz
int3
out
imul
setbe
out
shlb
mov
pusha
dec
outsb
divb
fdivs
push
mov
fs
test
push
jle
dec
gs
scas
decl
clc
jb
enter
jp
jecxz
add
xor
stos
inc
add
dec
call
out
imul
out
sbb
jl,pt
dec
insl
or
test
mov
adc
ficoms
or
sti
dec
pop
sub
add
aad
inc
mov
test
push
mov
imull
and
xchg
stc
int
stos
cli
xchg
pushf
gs
repz
add
mov
pop
mov
and
repnz
mov
loope
iret
ja
imul
push
pushl
mov
jo
xchg
hlt
mov
fisttpl
pop
adcb
adc
bnd
cmp
xor
ds
add
mov
push
xchg
addr16
xor
sub
imul
lret
mov
and
mov
sti
adc
cmpsb
mov
inc
stos
xor
or
rcr
inc
fsubp
gs
ds
insl
jne
insb
pop
add
movsl
xor
bound
xorl
addr16
lahf
mov
jge
mov
and
push
loopne
out
loop
dec
test
pop
inc
popf
mov
out
lret
sbb
in
aam
inc
aaa
xchg
push
mov
in
in
xchg
in
xchg
sub
addr16
notl
ret
clc
mov
ss
mov
xchg
jmp
lds
js
shrl
inc
mov
jg
push
xchg
xchg
push
ss
jbe
pop
push
in
adcb
mov
xor
jmp
fwait
adc
aas
stos
mov
sti
xor
int
jecxz
out
xor
xor
add
mov
testl
xor
pop
sub
or
in
psadbw
xchg
mov
sbb
popf
scas
cmpb
sti
mov
cmc
fldt
fildll
cltd
je
pop
lods
mov
loope
and
in
inc
mov
enter
add
in
cmp
pop
test
mov
push
and
or
jg
xchg
lea
mov
or
pop
imul
js
xchg
loopne
jecxz
movsb
mov
in
mov
or
dec
sbb
mov
leave
sbbl
and
jmp
jns
scas
fs
ss
xchg
dec
dec
enter
jnp
shl
dec
mov
stc
loope
addr16
cltd
xor
or
add
testl
adc
mov
cmp
push
pop
xor
lods
jbe
enter
sub
sbb
jo
fsubrl
push
push
push
sbb
pop
int3
dec
sbb
adc
mov
inc
popl
cs
pop
lahf
mov
gs
xchg
and
fidivs
lods
pop
insl
rcl
outsl
mov
in
dec
ljmp
sbb
cmpsl
ret
sub
dec
jmp
push
in
mov
notb
push
jmp
and
andl
jg
pop
out
or
out
mov
incl
xchg
into
cmc
pushf
adc
xor
clc
inc
outsl
xchg
in
call
push
inc
shll
inc
addr16
fdiv
jle
mov
pushw
adc
sarl
push
lds
cmp
lods
sti
stos
add
popf
dec
lds
mov
aam
test
lret
adc
shll
cmp
subb
adc
pop
xor
inc
or
ja
add
ds
sbb
cmp
jmp
fdivs
pop
jle
dec
out
lds
out
inc
sub
xor
fstl
divb
fcmove
stos
jg
test
aad
mov
xchg
lahf
inc
cld
cli
xor
icebp
loop,pt
or
pop
jnp
adcb
mov
nop
sbb
push
mov
xor
div
sahf
inc
or
loope
push
orl
xchg
adc
sarl
mov
les
repnz
sub
jmp
aad
cmp
push
out
adc
pop
jge
mov
push
xchg
insb
iret
mov
push
ficompl
or
push
in
mov
data16
gs
or
xor
int3
mov
or
pop
stos
out
pop
mov
iret
loope
adc
in
lods
mov
popa
xchg
adc
mov
out
js
mov
frstor
jle
mov
into
lea
xchg
dec
lret
pop
push
cmp
cmpsl
add
mov
sbb
xchg
sbb
leave
dec
mov
mov
clc
adc
test
fisubrl
mov
jmp
push
sub
inc
shll
jo
pop
stos
jnp
into
mov
into
outsb
mov
inc
push
cmpsl
xchg
xor
mov
movsl
mov
cmc
mov
mov
pop
push
adc
arpl
cmp
mov
aaa
or
adc
push
popf
aas
push
cmp
xor
sbb
sub
jge
push
fildll
sbb
ljmp
pop
fcmovbe
add
sahf
pop
push
pushl
stos
add
roll
push
xchg
push
dec
imul
fmull
dec
mov
dec
mov
push
xchg
ret
and
mov
cmp
mov
sub
pop
sub
add
add
mov
sub
out
movsl
jbe
xor
xchg
cmp
pop
adc
dec
movsb
cmc
out
outsb
push
in
xchg
lahf
pushf
and
xchg
jbe
sub
and
and
pop
mov
mov
je
bound
pop
push
or
fisubs
xlat
or
and
icebp
sbb
ja
xchg
sub
xor
leave
jae
jb
mov
mov
icebp
rcll
sub
gs
dec
hlt
aaa
xor
jle
dec
call
addr16
cmp
shll
outsl
mov
mov
out
sbb
cld
push
xorb
fsts
loope
add
ret
mul
sbb
cmp
pop
stos
xchg
jns
pushf
aas
cmpsb
mov
sub
mov
mov
and
out
cmp
cmp
pop
int
or
aam
mov
jbe
or
add
andb
es
inc
mov
icebp
cwtl
pop
mov
mov
rcl
push
jecxz
inc
pushf
enter
sbb
push
jns
jg
aam
mov
mov
mov
inc
icebp
inc
push
add
out
xchg
add
push
inc
xchg
sbb
fidivrl
inc
and
cmpsb
jae
pop
dec
insl
pop
sahf
das
mov
mov
xchg
xchg
sbb
call
mov
mov
test
repz
sbb
in
pop
lret
int3
mov
cli
sbb
mov
test
movsb
jnp
aas
push
gs
pop
jno
adc
adc
jl
addl
mov
jle
orl
outsb
mov
jle
lods
out
xchg
leave
xchg
pop
pop
stos
hlt
add
mov
mov
xchg
ss
push
insb
or
mov
push
push
data16
dec
mov
loopne
mov
lea
and
aas
and
mov
inc
je
popf
mov
enter
jmp
push
leave
pop
lods
mov
into
fmulp
ja
loop
scas
fsubp
and
and
xor
loopne
jb
cmp
cwtl
jno
arpl
popf
iret
int
icebp
stos
ds
cmpsb
mov
pop
lcall
movsl
sub
mov
fstps
pushf
jl
cwtl
jg
dec
add
xor
movsb
insl
testl
mov
dec
fs
add
cs
out
dec
es
aas
xchg
aas
pop
mov
cli
std
and
enter
aas
and
out
rorb
rclb
scas
mov
aas
mov
pop
inc
mov
push
out
jb
xchg
cld
sti
mov
add
daa
cmp
dec
insb
out
clc
mov
xchg
cmp
inc
lcall
popf
aaa
xchg
imulb
mov
lods
rcrb
jnp
jecxz
sarb
jecxz
push
cmpsl
cmp
fcomps
push
js
dec
push
mov
lock
scas
std
cmpsl
inc
cmpsl
jns
lods
add
test
cwtl
sub
fsubrs
cmp
push
imul
pop
xor
xchg
sub
sub
fdivrs
cmp
in
push
scas
es
mov
leave
pop
das
sbb
iret
mov
add
and
divb
jmp
mov
ds
push
dec
xchg
xchg
inc
std
mov
ljmp
ds
ret
movsl
or
fimull
mov
cmpsl
xchg
xor
jle
call
mov
js
sub
lods
push
ja
sbb
xor
iret
or
xor
in
dec
mov
push
rcrl
mov
inc
pop
push
sbbb
shl
add
inc
pop
inc
les
leave
mov
lret
les
daa
shr
sbb
add
loop
adc
mov
mov
sbb
mov
scas
mov
test
mov
dec
cli
cmpl
popf
imul
mov
ljmp
orl
ljmp
mov
and
and
push
mov
sub
stos
shrb
jns
adc
test
aas
adc
out
adc
pop
out
add
adc
mov
enter
jecxz
jne
jge
jae
fstl
fcoml
pop
mov
and
dec
jle
pop
cmpsb
lods
sub
sahf
xchg
sub
cltd
mov
adc
das
inc
mov
aas
movsb
xchg
notl
push
cmp
pop
in
aas
mov
mov
mov
outsl
and
push
jbe
aad
gs
adc
xor
fs
xchg
jmp
lret
cmpl
add
pop
lret
std
jno
pop
add
aad
frstor
pop
fdiv
out
rcrb
cltd
js
ja
dec
sbb
fisttps
or
or
pop
cld
mov
rcrl
jns
in
add
sbb
inc
pusha
pop
sahf
cltd
xor
mov
aam
dec
test
lret
sahf
aam
push
cmp
jge
jbe
mov
dec
xchg
test
bt
ret
jg
scas
dec
xlat
mov
pushf
pushf
pop
cmpsb
cmp
sbbl
sbb
jecxz
push
adc
lock
or
adc
and
cmp
lods
les
cli
addl
lret
aam
push
imulb
adcl
or
xor
xor
jecxz
imul
rcrl
add
mov
lret
mov
icebp
lcall
out
push
pop
gs
push
mov
xchg
xor
adc
lods
bound
adc
cld
ja
sub
sbb
leave
pop
test
dec
jecxz
inc
jmp
add
jne
cmpsb
das
xor
mov
test
jb
std
cmp
jecxz
mov
inc
repz
lock
lea
pushf
add
push
pushf
mull
push
push
cld
cmpsb
pushf
xchg
mov
cmp
pop
mov
aas
jle
add
mov
and
mov
dec
sahf
jge
sarl
scas
mov
xor
jbe
mov
aas
jmp
xchg
movsl
lcall
adc
adc
cmpsl
std
cmp
aas
pop
jb
xor
adcl
in
cmc
das
push
cs
add
imul
shr
pop
sti
out
xchg
pop
xchg
push
xor
cmp
mov
pop
pop
mov
sbb
ds
cwtl
das
sub
jne
data16
sub
test
jo
mov
inc
xor
cmp
pop
sahf
je
out
or
fcomp
enter
push
arpl
inc
and
mov
push
sub
and
add
fists
or
shll
fidivl
mov
push
push
adcl
pusha
les
xchg
daa
popf
pop
push
out
test
jbe
push
dec
or
fdivs
fxch
push
inc
rcll
std
adc
imul
sbb
lret
xlat
sub
jg
fidivrs
ret
xchg
xchg
mov
jne
push
adc
movsl
or
int3
xchg
pop
fcmovne
movl
popf
stos
and
idiv
mov
xchg
sub
sub
xchg
in
adcb
test
dec
mov
scas
lock
sbb
in
ret
stos
shr
sbb
push
daa
sbb
imul
clc
mov
pushf
xor
movsl
push
xchg
fmul
dec
jmp
cmpsl
insb
lods
imul
call
test
lds
lahf
mov
push
fimuls
or
dec
jg
and
jl
out
iret
lods
bound
jmp
repnz
addr16
sarb
cmpl
xor
push
lods
not
shrl
lret
push
jo
mov
rcr
jb
pop
insb
mov
lods
cmpsl
dec
jne
push
cwtl
dec
ja
jns
push
and
dec
outsb
add
addr16
xchg
jo
loope
cmp
pop
es
mov
dec
mov
loope
sub
jo
mov
shl
in
nop
add
xor
and
outsb
dec
jp
fs
dec
and
icebp
fisttps
xchg
sbb
pusha
data16
xlat
dec
out
lcall
inc
leave
aaa
in
stos
mov
dec
or
push
pop
into
nop
and
jne
adcb
adc
cmp
add
popa
popf
icebp
movsl
mov
jae
rcr
test
sbb
jae
in
cltd
cmp
test
add
sbb
jnp
mov
pop
add
cmp
ja
jl
ret
xor
inc
sub
jmp
mov
pop
push
out
jno
in
cld
xchg
pop
lahf
mov
jecxz
imul
test
or
jb
lret
sti
pop
pop
and
cmp
jl
imul
or
in
daa
out
add
or
and
and
add
test
and
lods
dec
xchg
nop
dec
aaa
divl
mov
cmp
push
pusha
rorb
loope
cmpsb
jb
push
jp
mov
imul
inc
mov
adcl
pop
notb
daa
pop
test
mov
pop
mov
hlt
adc
sub
add
shll
and
sbb
push
pop
sahf
movsl
xchg
sub
test
rorb
xor
aaa
insb
jge
outsl
sti
pop
lods
push
lock
sbb
jmp
cltd
das
xor
popa
cmp
leave
jp
fwait
cmp
or
notl
aas
ja
sbb
push
sbb
sub
shrb
ficoms
lods
cmpsl
sub
mov
jbe
fisttpll
cmp
dec
lcall
int
xchg
cmpsb
cli
sub
sbb
xlat
fwait
popa
adc
in
hlt
decl
jne
shll
insl
lahf
jo
jo
loope
cld
and
mov
dec
clc
out
mov
xchg
inc
or
mov
ret
movsl
aad
jecxz
pop
sbb
xlat
and
jne
jo
rcll
sbb
dec
lret
add
pop
xor
cmovae
sbb
call
mov
leave
adc
cwtl
adcl
int3
jnp
int3
pushf
push
xor
sub
xchg
hlt
adcl
jb
std
sub
xor
push
fcoms
into
push
adc
imul
mov
pop
jmp
xor
outsb
sub
xor
test
jbe
mov
push
in
aad
ljmp
push
call
sti
call
push
mov
cmpsl
sti
push
rol
inc
sbb
call
in
push
push
jnp
push
xor
int3
cwtl
arpl
xchg
daa
imul
jle
push
cmc
call
add
pop
push
mov
jp
or
pop
cmp
adcl
repz
into
pusha
and
adc
dec
mov
mov
xor
cltd
fwait
adcb
ljmp
cmp
pop
sti
xchg
xorb
cmc
das
sbb
mov
mov
js
sahf
jecxz
dec
push
loopne
dec
stc
inc
sarb
push
add
add
or
jns
mov
fbld
sti
scas
out
movsl
or
mov
scas
hlt
xor
shr
cmp
jns
out
mov
inc
or
adc
jnp
rclb
dec
mov
in
rcrb
lea
mov
xchg
lods
loopne
adc
mov
xchg
rolb
jns
xchg
imul
sub
mov
cmpsb
mov
pop
imul
sub
mov
mov
or
lcall
in
sbb
push
xchg
push
call
rcrl
push
ficoms
jae
cltd
repz
cs
cwtl
fbld
arpl
jle
inc
jl
out
and
stc
lcall
shll
xchg
push
jbe
adcl
outsb
xchg
and
outsl
aaa
dec
push
sbb
pop
stc
adc
mov
or
mov
mov
lret
insl
movsl
out
jg
test
jle
add
jmp
fdivl
das
shll
pop
loopne
call
or
lds
xchg
push
out
out
les
jg
pop
and
popf
xchg
mov
push
add
ret
dec
call
push
shr
mov
cmc
lcall
and
cmp
fldt
loopne
cmp
pop
jb
or
or
dec
mov
dec
jl
xor
fucomi
sbb
mov
cs
pop
and
roll
add
sbb
xchg
pop
rcll
pusha
cs
or
adc
repz
out
cmp
mov
stc
out
clc
lods
mov
cmpsl
rorl
dec
mov
cmovo
mov
movmskps
iret
cmp
jg
test
and
fisubs
jl
out
lock
pop
idivb
jb
icebp
adc
xchg
sbb
push
dec
xor
popa
sti
adc
sub
jle
cmp
mov
cmp
pop
icebp
xchg
add
test
call
shlb
ret
cmpl
jl
push
fcompl
daa
aaa
or
in
idiv
test
dec
fstpt
mov
xor
sub
mov
scas
insb
gs
jmp
aas
ret
xlat
jg
fldl
xchg
lock
out
out
xor
fcoms
outsb
insl
enter
mov
nop
push
cmp
insl
rclb
sbb
pushf
inc
xor
inc
gs
ljmp
and
mov
in
and
cmp
sbb
dec
scas
sahf
jl
xchg
gs
push
jmp
inc
jle
jnp
daa
sub
cwtl
dec
dec
sub
repnz
lret
adc
nop
inc
dec
mov
jb
add
idivb
sub
or
and
ficompl
pop
outsl
inc
add
sub
add
push
loop
adc
sub
hlt
inc
mov
scas
cld
sar
xchg
test
ss
cmpsb
int3
clc
xor
sub
fdivr
push
cli
cs
jp
xor
or
add
lock
and
arpl
aad
cmpsb
sub
lret
add
push
ret
push
mov
rclb
sub
sbbl
push
pop
cmpsl
sti
cmp
dec
seto
adc
inc
lods
fsubl
jle
pop
adc
in
jns
adc
sub
pop
idivb
jb
xlat
inc
pusha
pop
outsl
mov
sub
setg
cmp
and
or
xchg
dec
aas
push
sti
mov
sub
out
xor
pop
les
xchg
loope
cmp
push
enter
les
mov
push
ljmp
push
xor
jns
das
data16
rclb
loop
inc
mov
xchg
mov
xlat
dec
mov
mov
or
mov
push
rcr
adc
pop
mov
lret
mov
sub
popf
inc
icebp
into
fnstsw
pop
or
arpl
inc
ret
jb
xchg
gs
fdivs
fists
xor
mov
mov
sahf
clc
mov
jecxz
xchg
daa
xor
sub
lock
mov
repnz
inc
pop
test
cwtl
leave
and
mov
mov
jecxz
push
lods
pop
sbbb
fwait
lock
and
mov
pop
aaa
inc
fwait
dec
repnz
shll
out
iret
jecxz
repz
lods
lret
lds
add
push
test
popa
add
addr16
es
or
sub
xchg
test
fstps
decl
jno
add
xchg
mov
ret
ja
je
sti
adc
pop
movsl
lahf
repz
xchg
fbld
out
jge
outsb
test
pop
daa
in
sbb
jge
jo
push
je
add
repnz
fcomps
ffreep
cmp
or
icebp
xchg
stc
inc
bound
and
sbb
mov
add
xor
movzwl
in
pop
xor
aaa
movsb
insl
mov
mov
movsb
push
mov
mov
pop
dec
mov
leave
jnp
fucom
push
add
lds
fnstsw
or
fstp
mov
adc
js
jl
aad
jp
and
jg
scas
js
shlb
fsubl
dec
add
mov
or
mov
or
outsl
add
lcall
or
inc
xor
enter
cmp
sbb
ja
leave
sub
mov
fbld
loopne
ja
insl
outsb
out
xchg
or
imul
mov
sub
mov
sbb
repz
xchg
sub
iret
inc
and
out
pop
jo
jge
popa
fldt
lock
mov
cmp
imull
cmp
les
fstpl
push
call
out
pop
test
add
mov
jb
cwtl
adc
in
and
ret
mov
or
cmp
notl
ja
lret
mov
loop
xchg
dec
clc
pop
ret
pop
jge
lcall
in
test
mov
dec
enter
adc
mov
mov
sbb
test
lcall
mov
cmc
inc
jle
mov
pop
pop
stos
push
in
out
jge
inc
repnz
push
vmulpd
push
pop
aaa
mov
cmpl
jg
dec
mov
and
repnz
test
sbb
mov
jno
jnp
pushf
lret
mov
out
and
cmp
cs
or
sub
add
adc
or
mov
ret
mov
sub
push
mov
fwait
mov
imul
dec
test
inc
lods
jg
cwtl
push
aas
dec
test
sub
gs
mov
mull
js
ljmp
repz
aas
test
nop
ja
outsl
mov
mov
imul
test
inc
js
stc
push
mov
mov
xchg
jb
mov
mov
add
pop
divl
push
xor
xor
imul
ja
push
cmp
outsl
or
xchg
rcl
mov
aaa
repz
lods
test
icebp
xor
or
jge
jl
stc
aam
pop
cmc
insl
rolb
sub
push
mov
pop
mov
push
sub
mov
inc
cmpsb
xor
cltd
enter
in
cmp
xor
ret
idivb
out
or
mov
repnz
ret
push
stc
jo
adc
pop
cmp
mov
lock
mov
fwait
xchg
ljmp
mov
xchg
jae
mov
mov
mov
pushf
int3
push
sbb
cmpsl
pop
pop
inc
mov
xor
repz
mov
jge
mov
movsl
push
or
aas
ret
sub
psrld
das
cmp
cltd
and
stos
divb
jo
add
fcmovu
xor
mov
test
cmp
fwait
cli
ss
ret
scas
lret
ss
insb
push
outsb
mov
mov
icebp
push
or
push
fstp
test
fstpl
scas
and
shlb
xchg
out
cmc
subl
mov
std
push
adcl
jp
sbb
push
mov
xor
lret
stos
ljmp
fistpl
out
dec
and
xor
xchg
add
add
add
test
xchg
roll
gs
cwtl
jmp
lcall
imul
cltd
jle
adc
xor
dec
jo
mov
aas
call
in
mov
ljmp
mov
mov
adcb
repz
xchg
lret
outsb
pop
arpl
iret
mov
cmp
adc
pop
mov
ss
push
pop
fwait
pop
sub
pop
fcompl
xchg
mov
sbb
mov
push
pusha
fs
jg
imul
dec
sub
frstor
call
dec
dec
cli
add
push
xor
jae
pop
mov
lea
mov
mov
pop
in
scas
ljmp
cmp
mov
jbe,pt
into
or
xlat
mov
hlt
repnz
jns
stos
xor
int
cmpl
add
dec
aas
adc
jp
push
movsb
mov
jne
xchg
sub
bnd
push
test
fstpt
in
js
sub
adc
int
sub
data16
jne
loope
fidivrl
xchg
std
fimull
sbb
ss
cmp
dec
in
pop
imul
pop
mov
movsb
pop
fidivrs
sbb
xchg
dec
xchg
push
imul
inc
pop
inc
and
out
ja
and
in
lret
clc
inc
adc
sbb
ror
xor
push
and
mov
xchg
cmpsb
and
mov
cmpl
xor
mov
sbb
and
into
nop
or
popf
aam
scas
addr16
cmp
xchg
lahf
push
sub
movsb
jae
sahf
pop
add
sbb
repnz
adc
cmp
inc
cmp
mov
jmp
mov
stos
andl
mull
fstpl
jne
xchg
add
or
pop
arpl
jnp
out
xchg
push
push
sub
mov
xchg
xchg
pop
je
mov
lahf
mov
ja
pop
inc
or
fisttpll
je
adc
iret
add
std
imul
push
and
insl
push
xchg
fnstenv
sub
frstor
ljmp
sbb
and
cmp
cmp
adc
cltd
push
fs
xchg
sbb
data16
loop
aam
push
cld
mov
xchg
mov
subb
movsb
test
dec
repnz
ficomps
fiaddl
mov
adc
jnp
dec
ljmp
inc
mov
jno
ss
jb
lods
cmp
stc
std
outsw
sbb
cmp
cwtl
mov
inc
jo
shr
xchg
rolb
push
or
cmp
mov
orl
test
lcall
in
cmp
push
mov
pop
lods
pusha
insl
js
cmp
jo
or
cmp
fldt
mov
xor
pusha
sub
fwait
mov
mov
fstp
jne
cmp
inc
cwtl
in
dec
mov
jnp
ja
out
sbb
inc
scas
iret
ret
jb
sbb
sbb
sbb
iret
sahf
sbb
bound
push
or
imul
xor
add
mov
iret
outsl
dec
cmp
cmp
lahf
mul
push
inc
push
fnstenv
pusha
push
aad
in
ds
mov
xchg
mov
lahf
int
insl
dec
mov
xchg
int
dec
imul
daa
sbb
dec
bound
insb
jno
add
hlt
enter
cmc
mov
hlt
inc
outsl
popa
xlat
jle
cmp
mov
in
jb
push
push
out
add
jns
cmpsl
and
adc
pop
fs
add
andb
push
jl
and
xchg
imul
data16
fidivrl
mov
jns
lock
arpl
xchg
cmp
jo
pop
or
sbbb
mov
leave
lcall
xor
cmp
dec
daa
mov
shr
lahf
xchg
inc
lods
test
mov
insb
push
in
pop
xor
dec
insl
call
pop
rclb
popf
pop
dec
mov
ret
xchg
xchg
xor
cmpsb
in
jg
fneni(8087
and
jmp
or
dec
mov
and
push
jecxz
ja
movsb
sahf
adc
int
das
mov
xor
loopne
es
adc
fisttps
add
sub
xchg
xor
sbb
add
aad
in
ret
or
in
in
and
xlat
sbb
les
movaps
cmc
and
lods
dec
hlt
mov
push
shll
sbb
jb
das
repnz
imul
pop
push
mov
and
xchg
out
mov
inc
push
xchg
jb
loope
dec
sbb
adc
jg
aaa
sub
adc
dec
sti
and
paddw
and
test
idivl
mov
std
iret
mov
daa
jecxz
mov
cwtl
xor
add
loopne
add
jecxz
mov
bound
fstl
jo
jg
fists
loop
lods
adc
mov
fistl
lret
gs
clc
xor
gs
inc
jle
enter
jb
push
push
cmp
fiaddl
mov
lods
aaa
ss
cwtl
scas
mov
cwtl
dec
or
xor
xchg
popf
cltd
jg,pn
and
push
cmp
std
leave
pop
adc
inc
test
in
vxorps
inc
cmpl
fcomip
aad
in
test
inc
enter
xchg
xor
loope
pop
and
gs
adc
inc
inc
js
and
sti
popf
jb
xchg
or
lods
add
ss
aaa
leave
pop
cld
sub
loope
in
mov
lds
sbb
fisubs
fwait
movsb
xor
fldcw
pop
xor
mov
xchg
stc
out
mov
cmp
pushf
dec
aas
xchg
push
push
and
push
aas
sahf
sub
pop
test
pop
sub
jle
mov
xor
xchg
adc
mov
mov
cmp
movsb
jnp
adc
xchg
aaa
jne
dec
inc
sub
lds
xchg
out
or
dec
mov
inc
iret
add
cmc
leave
test
nop
and
icebp
lods
dec
pop
pusha
mov
or
xlat
sbb
stc
mov
cmp
call
test
nop
push
arpl
sbb
xlat
cmp
mov
inc
cmpsl
out
iret
xor
in
fnstsw
cmp
jo,pt
pushf
mov
dec
dec
int
lcall
in
out
lret
jne
push
enter
cmp
or
mov
adc
aas
push
jns
and
sub
jmp
pop
xor
mov
dec
pop
sub
xchg
xlat
jbe
xchg
testb
dec
cli
in
out
pop
mov
icebp
pop
ds
shll
xor
cmp
mov
inc
cmp
add
mov
in
xchg
inc
fsts
jle
pusha
enter
jecxz
xlat
or
negb
in
dec
adc
popf
adc
iret
in
pop
aaa
mov
add
gs
cmp
push
xchg
sbb
sub
dec
rcrb
add
cmp
scas
mov
jae
stc
inc
fstps
addl
push
dec
arpl
scas
push
ret
mov
dec
movsb
mov
push
in
lcall
dec
aam
push
fstps
push
xorl
call
inc
test
sub
pop
shlb
inc
pop
adcb
arpl
pop
outsl
fcom
or
mov
and
inc
test
fucom
bound
sahf
rcll
test
cmp
mov
pop
leave
in
inc
push
lods
adc
arpl
dec
inc
mov
push
daa
jb
jmp
mov
sub
adc
jnp
out
rorb
push
jmp
mov
jne
int3
xchg
fldenv
andl
add
lahf
jl
push
push
lret
jg
push
dec
lds
mov
pushf
aaa
lret
int
hlt
sbb
loop
sub
push
add
pop
xchg
xorps
loopne
aad
add
mov
lea
xchg
push
inc
xor
xchg
push
pop
cmp
adc
cmpsl
incl
xchg
inc
dec
mov
cwtl
add
ss
dec
icebp
loopne
sbb
and
stos
jg
gs
aad
subl
sub
mov
sub
mov
sub
enter
mov
sub
inc
aaa
inc
mov
jbe
mov
or
outsl
mov
cmc
mov
ret
insl
out
popf
dec
adc
movsl
jb
pop
mov
pop
mov
inc
call
inc
sbb
push
inc
jne
jp
fisttps
jb
jmp
ds
sbb
or
hlt
mov
dec
pusha
add
lods
repnz
repnz
sub
orb
jne
sbb
mov
dec
jecxz
dec
lret
or
mov
xchg
sub
sahf
pop
std
adc
adc
jmp
add
cmp
aad
mov
nop
jg
inc
mov
push
inc
sub
or
repnz
mov
loop
or
mov
adc
fldcw
sbb
cmpsl
adc
inc
mov
xchg
jns
mov
xchg
scas
jne
cmp
iret
bound
push
add
mov
and
dec
rcrl
pop
inc
shl
scas
mov
lret
sub
dec
mov
jg
daa
lea
pop
cs
sub
add
in
or
lret
inc
adc
pop
sahf
aam
jmp
stos
test
xchg
fcmove
lods
testb
gs
loopne
fmull
and
cmp
or
popa
mov
xchg
lock
stc
xchg
jne
and
into
jl
cs
les
push
mov
in
ss
mov
sub
call
or
and
or
cmc
stos
mov
xchg
call
shrb
sbb
adc
scas
loope
mov
bound
cmp
js
imul
jge
jecxz
mov
out
push
pop
mov
aad
pop
rcrb
imulb
xor
dec
std
mov
loope
mov
cmpsb
aam
in
test
and
cmpl
sbb
or
outsb
aaa
mov
push
sbb
ret
push
out
shr
ja
test
inc
fldenv
out
push
adc
sub
mov
ret
test
loope
loopne
mov
pop
xchg
notl
outsb
cs
jnp
lret
popf
fisttpll
cmp
mov
fisttps
pop
fcomps
test
pop
out
fildll
fs
sbb
xchg
pop
nop
cwtl
js
add
aas
push
orl
dec
cmp
jge
or
push
arpl
pop
pop
or
insl
mov
cwtl
xchg
sahf
lret
out
aaa
adc
mov
incl
pop
fwait
xor
scas
inc
ret
jp
xor
mov
lret
mov
add
pushf
gs
out
add
xorl
out
inc
sbb
add
rol
inc
jecxz
filds
cld
sbb
xor
addl
es
mov
cmpb
push
leave
mulb
stc
mov
add
cmp
leave
rcl
psllq
pop
imul
mov
dec
in
test
mov
mov
hlt
icebp
int
or
mov
mov
int3
sbb
jle
cmp
push
pop
lea
notb
and
jle
sub
push
rep
out
aaa
daa
mull
xchg
pop
fsubrs
mov
lock
les
in
adc
mov
loopne
repz
sbb
jns
mov
lret
dec
cmpl
lret
xchg
or
inc
rcll
mov
lea
lods
jge
and
out
cmp
sarb
cmp
dec
xor
xchg
outsl
or
mov
rclb
and
inc
sub
inc
inc
cmp
insl
xchg
jae
inc
sub
mov
inc
loopne
push
jns
pusha
movsb
sub
sarb
arpl
xor
sbb
jmp
mov
xor
or
jg
stos
push
xchg
dec
xchg
lea
mov
jnp
fldt
sbb
imul
gs
out
jns
es
xchg
loope
pusha
jb
fcmovnu
enter
xchg
xorb
sbb
pop
ljmp
jge
mov
imul
outsb
push
and
mov
mov
idivl
sbb
idivl
push
push
dec
jmp
loopne
test
and
jge
jl
ret
in
pop
adc
out
repz
fs
adc
aaa
test
or
scas
mov
xchg
fwait
xlat
rclb
mov
in
les
aaa
sbb
mov
lods
sbb
lahf
out
dec
cmp
dec
mov
or
lahf
jno
lds
jmp
pusha
into
pop
test
out
push
adc
es
xchg
lods
xor
addr16
daa
dec
addr16
mov
test
movq
adc
dec
sub
mov
inc
jno
in
pop
push
xchg
mov
cmp
adc
bound
ss
add
adc
jg
mov
das
pop
ficompl
push
inc
loope
fadds
test
pop
jle
aaa
or
lds
sti
mov
jbe
inc
leave
cmp
fs
out
xor
imul
ds
inc
orb
pusha
mov
add
mov
pop
rcrb
leave
push
push
pusha
sahf
jle
mov
mov
sub
into
popa
in
cmc
sti
inc
add
sbb
cmp
lods
jmp
cld
ror
or
int3
and
cli
xor
or
inc
cmp
push
test
add
cmp
std
dec
ds
xchg
cmp
nopl
mov
fcomps
mov
sub
shr
jae
mov
clc
sub
cmp
sbb
xchg
inc
xchg
lock
inc
repz
enter
scas
ja
int3
mov
push
hlt
test
sahf
outsl
test
fwait
into
or
cmp
mov
xlat
sbb
add
jbe
xchg
test
cmp
test
test
in
fwait
and
jle
fsub
fmull
lret
and
fcompl
sub
adcw
imul
mov
adc
lea
mov
jne
sub
or
xlat
insb
xor
ja
push
sub
ret
sbb
mov
jne
mov
push
push
pop
jns
jl
cmc
dec
mov
out
pop
xor
or
dec
cmp
and
in
pop
mov
popf
push
pop
icebp
jne
aaa
mov
push
scas
dec
adc
scas
imul
into
pop
addr16
sbb
xchg
adc
sbb
mov
ds
cs
mov
cltd
pop
inc
lret
stc
push
mov
call
popf
es
xor
sub
cmp
in
xor
mov
icebp
jp
push
sub
adc
sub
shll
add
jl
lods
xorb
pop
hlt
cmp
std
mov
lds
push
mov
in
nop
iret
mov
shrb
or
cmp
xlat
loopne
push
jg
movsb
pop
mov
jp
nop
ds
and
cmp
mov
testl
sbb
push
rcrb
out
aas
repnz
ret
aas
mov
incl
sti
flds
push
outsb
pop
push
outsb
sarb
inc
mov
leave
pushl
push
aam
adc
rcl
push
cli
scas
lcall
sbb
imul
int
rcll
in
and
add
outsb
insl
adc
stos
mov
mov
loope
mov
cmp
and
jmp
and
orb
fistl
mov
punpcklwd
stc
sti
mov
les
jmp
mov
aas
push
imul
stos
lea
aas
and
jnp
xchg
push
sub
aam
add
mov
push
lret
push
aam
dec
dec
dec
jmp
mov
xor
clc
fsubrs
xor
mov
mov
hlt
pop
fisttpll
bound
jno
adc
lcall
xchg
add
mov
inc
push
and
leave
dec
in
enter
icebp
lods
outsb
adc
into
shll
into
ss
cmc
sub
mov
pop
stos
sub
mov
push
and
sub
xor
aas
fs
push
jnp
xor
je
test
into
aad
mov
mov
mov
test
mov
pushf
aad
call
ficoms
test
mov
dec
inc
sbb
pop
jle
inc
inc
push
xchg
fldenv
in
ljmp
adc
out
mov
sbb
adc
sbb
lods
mov
xchg
jnp
inc
clc
cmp
push
push
xchg
movsb
mov
mov
mov
shlb
xchg
lods
loope
mov
and
sbb
loope
iret
xchg
insl
scas
in
adc
mov
movsl
in
jne
inc
popa
shlb
inc
lods
sarb
ds
cs
adc
fadd
mov
pop
dec
shlb
dec
sbb
add
mov
aam
mov
fdivrs
or
add
push
mov
sti
dec
ja
fucomp
inc
sbb
jg
jbe
xchg
test
out
mov
nop
in
cli
popf
dec
out
lods
push
xchg
hlt
insb
pop
jb
mov
ret
outsl
push
adc
add
add
mov
cmc
dec
mov
hlt
insb
dec
divb
sbb
out
arpl
es
pop
ljmp
lret
inc
jnp
mov
adcb
and
ss
pop
lock
or
mov
lret
lahf
and
xchg
outsl
pop
xchg
mov
es
hlt
sbbb
jmp
nop
cmp
and
pushf
scas
mov
jns
cltd
sub
sti
jno
push
imul
out
fdivl
mov
js
mov
and
xlat
jns
jb
pop
in
and
addb
in
fsub
dec
pop
mov
sub
adc
test
aaa
push
and
outsb
clc
mov
jae
daa
and
cld
sbb
out
pop
pavgw
rcrl
cmp
mov
aaa
pop
dec
enter
sbb
and
push
sbb
scas
in
sub
lret
arpl
cmpsb
int
push
sub
jb
adc
jnp
mov
mov
cmp
push
sub
or
and
jns
cmp
imul
jl
insl
cmp
loopne
add
pop
movsl
cmp
test
out
push
lods
movsl
push
int
mov
lret
test
push
mov
lea
add
and
dec
pushf
int
shlb
mov
icebp
lods
jo
xchg
jecxz
fidivrl
in
mov
cld
imul
bnd
push
orl
cwtl
xorl
and
and
in
aam
pop
inc
mov
jnp
sbb
or
mov
add
push
mov
das
adc
int3
rorl
push
add
sbb
pop
mov
mov
popa
orb
xchg
xchg
notl
pop
sbb
cmp
sahf
push
jns
xorl
mov
add
lods
sbb
icebp
imul
arpl
fwait
mov
loope
js
aas
out
fs
mov
or
lea
push
out
icebp
icebp
adc
cmpsl
sbb
lock
shrd
xor
cmp
mov
dec
or
add
cmp
inc
clc
mov
jne
mov
or
and
jle
dec
jae
inc
jb
cmp
xor
jae
int3
sbb
dec
xchg
xchg
cmp
ljmp
and
andl
mov
fcmovb
pop
add
push
cmp
icebp
std
adc
aas
dec
ljmp
loop
stos
push
push
push
in
jg
dec
push
sahf
jle
pop
mov
hlt
pop
jne
movsl
or
cmp
jp
lret
or
loope
cs
sub
mov
int3
cmp
push
mov
mov
dec
in
iret
xor
and
xor
ret
mov
in
fwait
mov
int3
imul
jne
inc
xchg
repz
mov
jne
cmp
push
into
adc
push
add
adc
in
push
cmp
inc
dec
jge
dec
lods
pop
jo
iret
push
pop
int3
js
add
fisubl
std
ljmp
in
imulb
mov
pop
nop
xor
push
cmp
das
pop
xchg
jg
inc
add
or
adc
jo
out
inc
sub
sub
shr
pop
movsl
xchg
inc
mov
add
mov
icebp
push
xor
pop
scas
cmpsb
out
arpl
loop
sub
and
push
fs
imul
jne
dec
and
pushf
sbb
push
loopne
xor
xor
or
xchg
cmp
inc
adc
pop
sub
add
aad
loop
movsb
mov
sbb
testl
enter
inc
xchg
les
ud2
and
jp
xor
scas
cmc
adc
outsl
xlat
int3
lret
out
gs
test
mov
sub
mov
mov
ficomps
mov
ja
jo
data16
xlat
out
es
mov
stos
popf
int
push
lea
jle
lods
ds
ljmp
pop
incl
xchg
int
adc
jecxz
cs
pusha
repnz
jae
insl
pusha
pop
and
mov
pusha
sub
into
andl
pop
xchg
outsb
and
sbb
inc
idivl
cli
repnz
out
jge
inc
xchg
jl
out
jno
xlat
into
insl
pusha
and
loope
rorb
push
je
inc
push
mov
push
call
ja
xchg
jo
dec
jno
pop
mov
mov
xchg
xchg
inc
push
stc
and
xchg
pop
imul
fldl
mov
pushf
adc
jnp
push
sbb
aam
push
fcmovnbe
pop
subl
add
std
dec
or
lods
das
popa
inc
jae
leave
andb
push
jnp
fistl
popa
in
aad
je
jae
test
gs
repz
push
popa
mov
outsb
dec
in
sbb
clc
outsb
sub
pop
and
mov
fs
xorl
es
in
sbb
je
adcl
sub
lods
cmp
add
or
in
sub
pushf
aad
cli
and
mov
aad
stc
sub
iret
mov
dec
or
je
mov
cmp
jns
scas
outsb
pop
push
sbb
xchg
test
or
dec
mov
test
jns
int3
sub
and
mov
inc
in
mov
mov
xor
push
test
subl
mov
mov
out
sub
xor
notl
dec
test
lea
jae
push
inc
mov
out
in
push
sub
fwait
or
lock
insl
ret
xchg
aas
or
mov
in
mov
jo
mov
bound
mov
gs
or
sbb
jne
push
test
xor
jno
jns
or
sbb
cwtl
out
imul
mov
dec
cld
in
jns
xor
iret
insb
shlw
xchg
inc
cmp
push
pop
out
notl
push
subl
movsl
int3
outsl
sar
incl
mov
add
fisttpll
jle
in
xchg
jns
fsubs
ss
pop
pxor
scas
sub
and
jae
int3
jmp
mov
orb
mov
sbbb
movsl
in
loop
outsb
xor
xor
dec
mov
mov
lahf
jmp
xchg
rol
jge
jp
xor
xchg
mov
inc
pushf
cwtl
imul
dec
add
dec
dec
ja
jbe
shlb
sub
scas
ja
andb
fs
repnz
or
jns
into
or
lock
dec
jg
or
in
jmp
cli
mov
in
aam
pushf
aad
popf
pop
ljmp
fldl
xor
jb
sti
push
mov
push
in
cmpsw
mov
in
out
and
adcl
inc
or
mov
lahf
sbb
sub
push
pop
mov
mov
inc
dec
int3
movsb
sub
in
shl
test
cld
loope
les
seto
mov
sbb
fsubs
jge
dec
xchg
xor
push
decl
push
sbb
add
adc
out
in
jbe
iret
and
cmp
jno
mov
int3
lea
mov
notl
scas
jg
and
push
mov
mov
sub
or
iret
repz
cmp
cmp
xchg
iret
leave
mov
sub
aas
xchg
iret
mov
orb
mov
pop
jg
testb
pop
mov
sbb
cmp
push
dec
pop
or
into
cmpsb
xchg
int3
cmpb
aas
shrl
cmp
and
test
out
pushf
adc
adc
lods
in
add
je
ret
rorb
gs
cmp
mov
stc
mov
out
pop
aad
mov
mov
xor
imul
cmp
cmp
bound
clc
fs
popa
leave
cmp
andb
rorl
jbe
mov
mov
mov
xor
aas
daa
mov
aam
jle
push
lods
xor
rcr
pop
jne
test
inc
fwait
and
add
test
jne
mov
cltd
insl
fistpl
nop
pop
lock
sbb
jmp
loope
sbb
out
ljmp
mov
lcall
adc
jmp
adc
add
jbe
jnp
in
stc
jp
sub
mov
and
mov
fcmovu
hlt
lcall
jg
nop
sub
xchg
pop
mov
aaa
nop
push
cs
mov
cmp
cwtl
add
and
gs
mov
sti
add
mov
das
xor
push
pop
mov
cmp
push
out
pop
shlb
push
dec
int
mov
mov
pusha
xor
adc
loopne
pop
stc
inc
faddl
test
test
ror
inc
and
ret
jbe
rolb
xchg
pusha
mov
push
ja
sub
sbb
jo
xor
xchg
or
jle
stos
loopne
push
mov
adcb
in
iret
rcll
loopne
xchg
pop
jnp
rcl
mov
movsl
es
push
fwait
cmp
add
ret
inc
fadds
popf
sbb
aaa
scas
test
int3
dec
ror
xor
push
rcrb
stos
in
out
movsb
in
lock
lods
inc
sbb
jnp
std
mov
shrb
cli
jb
orb
and
sub
mov
mov
popf
jne
shr
add
add
jbe
inc
jmp
movsbl
in
ljmp
xchg
je
ror
aas
jle
jns
and
jbe
sbb
xchg
insb
leave
pop
pushw
xor
lret
arpl
ds
adc
sbb
dec
stc
lahf
add
cltd
xchg
dec
dec
shr
sbb
ja
cs
out
push
shrl
and
sbb
inc
pop
gs
idiv
les
and
jno
inc
es
mov
sbb
enter
out
mov
cwtl
xchg
mov
lods
or
stc
cmp
push
out
sub
dec
mov
push
mov
and
bound
and
inc
pop
test
inc
cmp
cmp
xor
mov
daa
or
in
mov
sub
or
lcall
in
icebp
addr16
in
loop
or
push
les
push
xchg
mov
insb
adc
push
xchg
dec
movsl
ds
add
data16
fisubrl
jns
xorw
mov
outsb
or
outsl
mov
arpl
xlat
cmpsb
mov
mov
sbb
xor
pop
add
loopne
add
xor
mov
adc
xor
int3
xchg
pop
add
ss
cmp
xchg
rclb
lcall
in
mov
mov
sbb
jno
dec
push
jno
aaa
sbb
jne
adc
mov
pop
and
outsb
enter
pop
sbb
mov
les
faddl
sub
mov
xor
pop
cmpsl
nop
mov
pop
cwtl
sub
roll
mov
lock
mov
mov
xchg
sub
adc
outsl
xchg
and
fincstp
ja
cmp
aad
xor
xor
cli
jmp
xor
jo
fsubr
sub
mov
aaa
out
xchg
cltd
dec
mov
nop
and
mov
add
dec
adc
jp
jecxz
jmp
sub
lock
cli
jg
fadd
shlb
push
cmp
into
mov
xchg
dec
sti
push
js
leave
sbb
or
sbb
fidivl
mov
cmp
jmp
sub
xchg
int
or
push
cmp
dec
add
mov
inc
add
shrl
ficoml
adc
xor
aam
ljmp
pop
push
jbe
add
mov
mov
aas
fxch
cmpsl
sar
push
lahf
fdivrl
std
movsb
lods
push
dec
stos
repnz
and
stc
jnp
data16
add
push
jns
push
or
repnz
cld
ret
lds
mov
nop
scas
cs
mov
addb
hlt
xchg
fmull
jg
dec
hlt
aam
stos
adc
jg
jmp
stc
adc
lea
cmpsl
sub
cmp
sub
push
inc
jle
fisubrl
fidivl
cmc
popa
loop
arpl
inc
push
xor
das
leave
lods
lcall
and
xor
shlb
in
sub
pop
jae
ret
insl
push
xor
mov
sbb
mov
push
aaa
xor
mov
xor
stos
or
insb
ret
cmp
cld
repnz
cmpsb
bound
clc
cli
repz
or
pop
mov
ja
jns
pop
dec
bound
lods
lret
jnp
cmpsb
arpl
inc
sbb
lea
cwtl
mov
pop
jbe
pop
std
ds
sbb
push
pop
or
lcall
aad
and
lods
lcall
pop
scas
and
sahf
mov
ret
mov
ret
cmc
mov
push
jnp
gs
add
sbb
out
fs
lds
test
test
dec
cmp
dec
test
cmp
xchg
and
mov
shll
jmp
mov
int3
enter
insl
js
pop
jb
push
adc
loopne
xor
mov
and
ja
dec
cmp
xchg
push
lock
mov
mov
cvtps2pd
xchg
add
cmp
xlat
fiaddl
sbb
stc
sar
scas
jae
dec
adc
in
push
fsubrl
jge
repz
sbb
sbb
mov
mov
pop
jnp
mov
push
and
in
mov
popf
xor
fdivl
das
ret
fisubrl
adc
in
pop
adc
add
cmp
cmpsl
mov
dec
mov
cmpsl
push
out
mov
cli
popa
js
jb
add
mov
cs
jae
loopne
inc
jb
pusha
iret
test
cs
in
mov
insl
add
push
out
ja
mov
aam
test
sub
pop
sbb
jae
pop
xor
sbb
jl
mov
aad
or
or
out
sbb
jne
sarb
es
and
mov
adc
stc
daa
cmp
pop
jae
mov
xor
push
mov
add
pop
inc
pop
jno
mov
icebp
mov
sbb
cmc
cs
enter
outsl
popa
sbb
fistps
mov
xchg
push
out
mov
mov
dec
fisubs
cltd
fisubrl
xor
stc
ljmp
es
fisubs
mov
inc
mov
and
jp
cmp
aad
or
pop
push
sub
or
sub
pop
pop
jnp
and
clc
xchg
popa
or
sarb
mov
loope
mov
adc
xor
jne
pop
sti
sbb
jp
pop
jnp
jne
mov
jo
cmc
xchg
lahf
test
out
or
inc
dec
fwait
sti
or
pop
push
aad
insb
fadds
ljmp
setp
into
xchg
xchg
mov
fcomp
sbb
cs
fs
lods
nop
jne
imul
jbe
ficoml
mov
mov
dec
xchg
shrl
call
jge
loope
mov
mov
cmp
imul
fs
divb
test
or
xchg
mov
int
aaa
inc
mov
stc
aas
xchg
adc
jbe
stos
ret
mov
adc
mov
xchg
push
test
add
test
mov
jb
scas
sub
xor
mov
and
in
scas
adc
adc
push
xchg
clc
lret
dec
aad
popf
push
xor
dec
push
scas
cwtl
in
cli
add
push
mov
xchg
sbb
outsb
icebp
mov
repnz
loopne
inc
lcall
mov
sub
push
push
mov
jg
mov
mov
loopne
mov
mov
jecxz
or
ret
xor
add
jae
movsb
ror
rorb
jge
popa
mov
xchg
mov
xchg
lahf
xlat
add
popf
cmpsb
xor
leave
adc
dec
lds
mov
fwait
pop
jno
test
jns
push
jmp
jo
adcb
xchg
push
hlt
inc
and
mov
dec
jne
jl
in
mov
add
std
mov
mov
cmp
mov
xlat
imul
fs
mov
and
cld
push
imul
mov
call
test
mov
rorb
pop
jae
cmpsl
ljmp
sub
mov
into
push
fisubs
movsl
test
out
push
addr16
fcmovnbe
inc
dec
cmpsl
xlat
dec
filds
push
pop
dec
out
loop
mov
stos
fwait
push
pop
stos
subl
dec
cld
andb
and
subb
scas
mov
xchg
jnp
or
mov
data16
aam
sub
and
stos
divl
jl
and
and
movsb
inc
cmp
fs
pop
push
movsl
lcall
repnz
outsl
xor
faddl
ret
mov
in
out
and
pop
jl
inc
pop
movsl
test
imul
inc
mov
aam
dec
sub
xchg
fwait
xor
inc
cltd
out
sbbl
jl
jo
xor
jae
sub
dec
pushf
mov
add
mov
rclb
mov
movsb
and
xchg
sbb
sbb
or
mull
dec
out
sbb
addr16
xchg
out
cld
mov
adc
sbb
aas
iret
sub
push
jle
pop
cmp
aam
mov
stos
mov
lcall
jnp
fsubs
jbe
jae
cmp
jbe
leave
push
mov
push
les
bound
add
fs
cmp
pop
shlb
subl
cmp
jecxz
pop
ljmp
loope
mov
js
xchg
mov
call
cmc
aad
xor
ss
cmp
lock
call
sub
mov
push
stc
or
dec
dec
inc
notb
add
add
pop
cwtl
cmpsl
mov
xchg
imul
or
mov
jo
inc
mov
add
xchg
add
lret
xchg
mov
xchg
or
sarb
pop
pop
nop
mov
cmp
jno
js
test
sub
sub
stc
mov
xchg
jge
sahf
outsl
mov
or
aas
out
jo
push
mov
pop
cmp
push
cmpsb
xlat
loope
prefetcht0
mov
push
add
scas
mov
out
arpl
and
push
mov
out
cwtl
sub
xchg
loopne
mov
test
or
movsb
cltd
test
cmpsl
fistl
add
xchg
rcrl
dec
jg
stc
call
jbe
dec
xor
cmc
mov
iret
xor
jl
mov
pop
sub
jae
add
js
push
sbb
xchg
fcompl
inc
rolb
and
push
fs
mov
es
mov
dec
lds
cmp
add
lret
stos
mov
pop
mov
xor
in
lods
loope
mov
pop
xorb
mov
scas
xchg
sbb
imul
add
lahf
rorl
ss
in
mov
rorl
and
test
insl
sub
pop
sub
pop
pop
xchg
jbe
nop
fwait
test
sbb
cmpsl
cwtl
push
insl
mov
aaa
cmpsl
iret
inc
fldt
andl
out
mov
sub
xchg
fnstcw
cmp
rcll
insb
cmp
add
jae
xchg
sbb
call
rorw
scas
lea
sub
mov
lock
cmp
push
xor
mov
xchg
mov
neg
stos
or
xor
mov
jns
sbb
xlat
lds
push
inc
dec
sbbb
or
mov
aas
dec
dec
push
rcll
cmp
outsl
lcall
mov
xchg
or
iret
icebp
push
xchg
cmp
and
adc
lea
hlt
inc
in
cld
or
ja
test
mov
aaa
idivl
sub
cmp
roll
lea
bound
pop
push
xor
jecxz
in
dec
inc
test
push
pop
dec
loope
or
lcall
out
data16
cmc
inc
mov
add
rcl
inc
aaa
add
imul
test
sahf
pop
dec
push
pop
mov
or
gs
or
dec
test
pop
scas
sbb
push
repz
mov
fists
add
mov
sbb
mov
xchg
js
jo
push
mov
cmc
data16
jecxz
es
bound
enter
cmp
scas
in
ljmp
mov
leave
jle
sbb
ds
push
lea
add
xchg
mov
hlt
inc
add
pushf
outsl
mov
pop
xchg
xchg
loopne
clc
xchg
mov
xchg
les
or
or
jp
popf
daa
loop
inc
cmpsb
pop
sub
das
icebp
mov
adc
in
scas
arpl
popa
dec
and
inc
shll
enter
mov
iret
daa
mov
roll
into
jno
fsubrp
xchg
shl
dec
push
mov
shlb
shlb
ffreep
sbb
mov
cwtl
xor
mov
test
add
push
jo
idivb
cmp
nop
jge
or
pop
inc
cltd
shr
pop
mov
mov
or
pop
mov
cmp
push
sbb
and
pop
or
dec
pop
cmpsb
xchg
mov
mov
call
or
ljmp
and
inc
pop
mov
aas
jl
cmpsb
daa
negb
mov
stos
push
cli
in
fwait
pusha
nop
cmp
xchg
mov
jmp
popf
inc
stc
xor
jecxz
fdivl
sbb
insl
es
pusha
or
push
lcall
mov
jnp
test
inc
hlt
cmp
leave
mov
fmull
inc
iret
sbb
ss
ficomps
adc
fadds
pop
stc
fildl
xor
in
div
or
aas
and
add
and
or
jae
or
loopne
jbe
aad
fisubrs
popf
shlb
arpl
in
lcall
jp
push
notb
ds
insl
fwait
xchg
scas
lods
inc
test
pop
and
in
inc
mov
rclb
shlb
dec
adc
jbe
push
lods
mov
vpcomq
stos
inc
mov
es
enter
and
dec
pop
push
sbb
into
test
insl
dec
jmp
adc
adc
cmpsl
pusha
dec
sub
pop
aam
jo
cld
ljmp
cmp
push
movsb
out
pop
fucomi
dec
in
shll
test
mov
mov
xlat
pop
push
mov
pop
clc
xchg
xor
xor
les
dec
repz
push
scas
jp
scas
jae
out
add
js
mov
cmp
movsb
rorl
ds
lds
sbb
lock
fwait
aad
fs
pop
inc
in
or
stc
push
aam
inc
clc
add
rcll
mov
fld
fadds
into
ss
sbb
push
movsb
test
inc
sub
adc
dec
lea
js
fisubrl
mov
xchg
and
sbb
push
ficomps
pop
jle
sti
mov
xorl
sub
stos
sahf
sub
stos
jne
sbb
lret
mov
inc
or
cs
or
int
mov
xor
push
stos
mov
mov
jp
adc
pop
test
pop
jl
les
jmp
das
repz
insb
mov
cmp
repz
addr16
imul
fadd
mov
movsb
imul
or
je
shll
dec
aas
nop
jo
dec
pop
pop
mov
fidivrl
divl
lret
xchg
subb
inc
add
mov
jp
sbb
sti
mov
mov
sbb
ja
mov
cmp
adc
rcrb
repnz
pop
xchg
daa
mov
test
clc
inc
jge
insl
dec
jnp
into
cwtl
mov
adc
mov
push
and
mov
fdivp
push
mov
cmp
cmpsb
sti
xchg
sti
aaa
int
mov
nop
pop
enter
xchg
cld
insb
adcl
adc
js
jecxz
mov
mov
call
jecxz
mov
rcrb
lcall
nop
mov
arpl
push
mov
push
movsl
pop
xchg
jne
xlat
sbb
mov
f2xm1
jne
lret
pop
into
lods
rorb
push
stos
fstps
push
flds
or
xor
pop
push
ja
pushf
das
bound
clc
xor
movsl
test
sahf
pop
shl
iret
xor
rcrl
mov
loopne
push
sbb
add
in
negb
mov
sbb
push
jl
jnp,pn
insl
xor
ss
sbb
mov
push
scas
aaa
mov
ret
pop
mov
inc
sbb
aam
insl
push
jmp
xchg
aad
scas
dec
cltd
mov
pop
and
sbb
cmc
pop
out
fnstenv
adc
shrb
loope
dec
lret
andb
pop
iret
sbb
in
fs
sbb
out
ja
inc
mov
push
mov
pop
movsb
xchg
cmp
push
lea
movsb
inc
into
dec
mov
test
or
cmp
push
addr16
test
lahf
iret
adc
stos
sub
into
add
test
sub
jl
push
xchg
xlat
lods
sarb
xchg
les
adc
mov
sbb
ljmp
cmp
xchg
mov
mov
push
jb
jae
jb
jb
jp
std
repz
mov
inc
popf
in
jne
mov
adc
xchg
push
rcrb
sahf
negb
rcr
stos
adc
inc
scas
jge
xchg
add
frstor
pop
xchg
mov
xchg
out
icebp
xor
lcall
jae
bound
add
sbb
fstpt
jge
xor
lds
mov
jne
dec
ss
inc
aaa
mov
scas
push
addr16
push
hlt
push
sbb
cmp
jge
lds
lret
sub
lea
and
push
or
out
iret
fwait
outsl
push
or
mov
pop
mov
dec
xor
das
ds
xchg
lea
mov
mov
fdivp
data16
sub
and
mov
dec
push
pop
cmp
pusha
mov
push
dec
cmp
push
jnp
pop
cmpsb
in
dec
ffreep
inc
sub
mov
cmp
imul
and
mov
push
and
sub
insb
ret
pop
pop
cmpsl
pop
out
clc
sbb
xchg
subb
sbb
ljmp
dec
or
cmpsl
or
jnp
lret
xchg
imul
sbb
xchg
xchg
data16
xchg
sarb
pop
mov
ret
pushw
cmc
or
repz
loopne
jno
scas
jg
and
in
mov
mov
or
xor
inc
pop
mov
mov
bound
push
jns
rorl
lret
push
mov
stos
jb
cmp
out
mov
pop
rorb
xor
lds
sbb
shr
jecxz
in
mov
push
pop
dec
divb
pusha
sahf
aas
out
xor
mov
or
fnstcw
outsb
xchg
push
popl
or
sbb
lret
cwtl
dec
fisttpll
fimuls
xchg
or
popa
xor
push
push
ret
or
in
call
inc
cli
cmp
push
jp
in
repz
mov
nop
xchg
insl
pop
xchg
push
inc
fcompl
mov
inc
sub
mov
xchg
gs
jle
orl
push
adc
loop
adc
arpl
pop
shl
mov
mov
dec
pop
push
test
into
fadds
xchg
daa
sbb
sbbl
cmp
insl
xchg
divb
mov
inc
sbb
add
xchg
jo
push
inc
dec
popf
test
adc
mov
loop
push
icebp
dec
aaa
lds
cltd
jne
mov
cmp
xchg
repz
mull
repz
out
jno
icebp
jne
inc
cwtl
pushf
rep
or
ss
mov
pop
push
cmpsb
and
bound
mov
dec
add
ficoml
xor
scas
mov
stos
push
xchg
enterw
dec
movsl
mov
fimuls
dec
stc
sarb
add
fimuls
or
pop
push
or
inc
mov
jmp
arpl
push
adc
push
stos
fcmovne
shl
xor
lret
jae
pop
push
loopne
xchg
pushw
add
xlat
sti
cmpb
xchg
mov
dec
adc
mov
jns
xor
sahf
enter
pop
mov
mov
loop
enter
cltd
add
jo
pop
clc
arpl
xchg
or
mov
cmp
lahf
push
or
jb
jb
bts
popa
repnz
pop
mov
clc
ss
jge
mov
rorb
nop
out
je
mov
ds
xchg
divl
shll
scas
test
sub
pusha
mov
inc
lea
scas
jae
call
mov
lea
int
or
pop
pop
leave
adc
into
push
cmp
ja
nop
dec
loope
or
xchg
fsubl
dec
push
mull
pop
imul
loope
or
sub
jl
mov
adc
mov
adc
adc
std
xor
fs
das
push
cmc
inc
loop
inc
or
mov
mov
stc
stc
cmp
inc
pop
push
lret
ror
xlat
mov
pop
cmp
mov
out
inc
fisubrs
out
mov
loope
aam
pop
mov
jb
movsb
in
icebp
fldl
negl
mov
dec
inc
hlt
sbb
loopne
lret
xchg
pop
xchg
add
adc
fs
jp
cli
aam
or
xchg
arpl
subl
aaa
clc
mov
jns
jo
jbe
imul
mov
mov
jl
pushf
or
pushf
cmp
sub
sbb
sub
loop
daa
jmp
rorl
hlt
lret
adc
mov
jns
cmp
mov
xchg
push
clc
popa
in
lret
mov
xchg
sbbl
jb
lret
mov
test
int3
les
fprem
popa
and
lret
out
lcall
mov
fstpt
cmp
out
inc
xlat
jecxz
jbe
mov
push
ds
sub
and
push
clc
loopne
mov
sub
movd
xor
pop
mov
jo
test
cld
into
inc
cmpsl
and
clc
jae
stc
lret
mov
jg
dec
cmp
das
arpl
in
add
and
insl
fbld
lds
ret
imul
adc
ja
mull
push
test
inc
loopne
or
cmpsl
mov
stos
out
xor
pusha
add
sbb
adcl
mov
mov
fstl
jne
shr
ljmp
rclb
pop
andl
push
xchg
inc
mov
push
add
lock
inc
into
mov
push
fbstp
fwait
sbb
insl
jo
dec
fldcw
mov
shl
rclb
cli
psllq
and
in
andl
dec
aam
rorl
push
imul
pop
dec
dec
cmc
orl
divl
std
cli
fldenv
repz
into
push
cwtl
hlt
stos
jns
jle
push
daa
test
dec
add
add
fdiv
cmp
cmp
push
sub
dec
cmpb
int3
inc
and
data16
sbb
dec
mul
mov
inc
dec
sbb
mov
push
dec
stos
push
ret
bound
or
js
sbb
ja
xorb
fs
jb
fdivl
outsl
jle
mov
shrl
or
in
fidivs
out
fdivrs
sbb
and
hlt
shrb
pop
xor
fwait
push
insb
jae
ja
jo
sarb
int3
rcrl
mov
mov
mov
in
jmp
fistl
lea
pop
out
jb
xor
push
cwtl
fidivl
adc
pop
repz
in
push
cwtl
dec
mov
jmp
inc
jl
mov
hlt
jp
aam
test
xchg
cmpsb
mov
pop
push
dec
jnp
inc
cmp
inc
test
getsec
fs
mov
lret
sbb
mov
push
sbb
xchg
je
fwait
cmpsb
andl
inc
xchg
and
fldenv
cs
pop
pushf
js
and
lcall
dec
lds
mulb
call
sbb
pop
mov
push
test
jnp
shl
cmp
and
cmp
loop
dec
popf
dec
cwtl
clc
sub
push
insl
or
mov
jns
push
mov
pop
cmp
mov
in
inc
ljmp
cmp
mov
jbe
ret
xor
dec
jge
mov
sbb
or
repz
lods
mov
dec
test
jb
jmp
pop
rolb
stos
jns
dec
or
fistpl
arpl
lcall
fdivs
sub
add
xchg
inc
push
andl
cmp
xchg
dec
jno
mov
fsubrs
pusha
mov
data16
lea
outsb
pop
jns
lea
adc
pop
cmp
into
inc
in
dec
lods
cmp
scas
lock
jp
xchg
loope
lock
subl
pop
xchg
int
insb
shll
testb
cmpb
and
icebp
movsb
mov
cmp
call
ret
add
push
jns
xor
lcall
stos
inc
cmp
pop
fnstcw
mov
aaa
and
movsl
xchg
test
cmpl
mov
je
push
jne
test
and
int3
out
iret
pop
pcmpeqd
add
fstps
mov
cli
imul
cmp
sbb
mov
dec
inc
enter
bnd
das
ss
popf
daa
rolb
cmp
xchg
int3
or
sbb
iret
aad
ja
std
lret
mov
clc
mov
loope
repnz
das
xor
enter
inc
lahf
cmp
xchg
jns
adc
loopne
loope
adc
aaa
ds
cmp
arpl
pop
lock
nop
sub
das
and
inc
or
pop
add
push
fstps
pushf
dec
ret
jne
mov
xchg
inc
mov
cmpb
sub
arpl
sub
out
fs
ds
rcrl
sti
xorl
imul
inc
or
dec
dec
pusha
sbb
dec
test
mov
nop
mov
fidivrs
shlb
out
dec
cmpsb
adc
and
gs
push
int
add
leavew
pop
movsl
hlt
jo
in
push
mov
xor
das
jecxz
sti
adc
lock
js
iret
sarl
fistpl
cmp
outsl
shlb
test
pop
test
orb
jl
ret
pop
dec
lahf
pop
and
pop
lods
pop
aaa
negl
inc
mov
and
pushf
dec
stos
jle
sub
sub
push
mov
push
gs
push
divb
adc
neg
cmc
xchg
out
cmp
xchg
adc
aam
aaa
xor
mov
test
stos
rclb
inc
or
add
mov
fidivs
pop
clc
jge,pn
scas
push
loop
cmp
aad
pop
push
jb
inc
shlb
xchg
add
cmc
in
gs
frstor
dec
sub
jo
sti
mov
je
scas
pop
pop
or
pop
test
int
mov
cmp
pusha
cli
push
gs
lret
insb
mov
aas
jge
test
mov
cli
pop
clc
stos
push
mov
sub
push
xchg
push
fists
out
rorl
or
or
cmpsb
adc
daa
cs
xchg
rcl
mov
or
sarl
jecxz
hlt
dec
xchg
xlat
add
bound
xchg
mov
jge
jo
jle
scas
nop
sub
or
std
aas
mov
mov
add
sbb
lcall
iret
adc
adc
lods
jo
fistl
nop
cltd
jg
jl
lods
iret
pop
push
jg
pusha
into
pop
flds
add
inc
push
inc
and
sbb
ud0
sub
jnp
movsb
call
nop
aas
outsb
iret
sbb
sahf
pusha
adc
xchg
and
shll
lds
adc
test
ret
fwait
add
rclb
ficompl
ja
icebp
pop
mov
mov
arpl
scas
push
mov
iret
xor
std
lods
push
pop
or
cmc
fistpl
cmc
mov
mov
push
dec
cltd
mov
pusha
pop
adc
dec
xchg
lea
pop
repz
scas
mov
jp
push
adc
popf
dec
adcb
insb
cmp
mov
mov
sbb
ds
fdivrl
sbb
jmp
mov
mov
mov
inc
cli
mov
jnp
and
or
jp
jae
add
jp
lea
lea
or
push
pop
fsubrs
ret
pop
add
mov
jle
js
scas
icebp
sub
mov
cmp
mov
lret
mov
sbb
push
lods
test
xchg
mov
jb
int
inc
add
push
mov
inc
mov
dec
pop
push
sub
aam
push
cmp
or
fbld
jle
test
arpl
sbb
lret
int
out
das
mov
xchg
cmc
sbb
mov
es
call
xor
clc
jmp
jb
notb
jle
adc
mov
andl
pop
stos
notl
pop
cmp
aaa
push
lock
pop
in
data16
in
pop
mov
test
fidivl
dec
fidivl
mov
pop
xchg
ficomps
mov
and
jl
or
mov
push
or
push
arpl
in
fnstcw
and
push
jbe
adc
adc
pop
or
cmp
aas
test
int
cmp
fs
mov
sbb
cmp
add
cmp
cmp
icebp
test
mov
out
adc
pop
adc
arpl
push
dec
sbb
es
mov
fmuls
mov
call
stos
pop
xchg
testb
ret
adc
cmp
sti
cmc
xor
lcall
jge
nop
cmp
add
mov
inc
xchg
in
mov
jb
mov
sub
jge
notb
fs
les
jecxz
int3
mov
fwait
xor
out
in
mov
cmc
ja
test
cmp
ret
andl
lods
fs
add
push
popfw
lods
jne
pop
inc
adc
nop
repz
sbb
jb
jb
push
ljmp
clc
jae
xchg
ds
sbb
and
xorl
fildl
sub
jg
shll
inc
sti
mov
sub
repnz
out
jle
sub
sub
ds
xchg
add
fidivs
and
jecxz
dec
popa
int3
and
mov
cltd
cmp
inc
inc
sub
sbb
xor
pop
dec
inc
jge
icebp
mov
fidivrs
jno
test
repnz
clc
and
int
stc
or
in
rorl
adc
dec
lods
popf
inc
shlb
xor
jmp
jecxz
or
out
push
ret
lea
mov
pop
data16
add
out
mov
aas
es
aad
cmp
lock
xchg
movsl
pop
inc
mov
push
mov
xor
out
jge
mov
mov
cmp
cmpsb
mov
lods
test
jbe
movsb
xor
jecxz
push
mov
mov
adc
popf
clc
push
jae
rolb
cmp
popa
cwtl
repnz
into
jae
jle
or
js
repz
fcoml
leave
mov
adc
sub
jmp
mov
sbb
ds
ret
std
pushf
je
hlt
and
fisttpl
divl
pop
jne
pop
push
push
push
imul
sahf
xor
js
dec
mov
dec
jecxz
cltd
or
test
push
scas
daa
in
mov
nop
stos
stos
movsb
push
fwait
inc
inc
pop
jae
jecxz
mov
js
fnstsw
inc
mov
and
shlb
ljmp
sbb
popf
pushf
fsubl
add
ret
dec
negl
add
or
dec
stos
mov
mov
lds
mov
push
cwtl
push
pop
push
mov
arpl
inc
inc
roll
adc
xor
out
jl
gs
mov
and
mov
repz
hlt
daa
mov
jmp
aam
pop
add
shr
outsl
dec
aas
dec
mov
and
and
jge
pop
adc
das
fldl2t
mov
lahf
mov
xcrypt-ctr
cmpsl
mov
cmpsl
pushf
xchg
pusha
cmp
cmp
dec
fcmovnb
sbb
stos
testb
sub
or
out
inc
push
add
popf
xchg
add
cmp
std
push
call
repnz
test
fimull
fstpt
sub
mov
out
jns
int3
mov
test
or
lahf
xchg
imull
jmp
sbb
jg
pop
xchg
jge
jo
outsl
push
adc
add
fstp
int3
push
pusha
rcl
sbb
mov
adc
cli
push
test
lret
pop
repz
ret
add
aaa
adc
fcompl
push
cmp
mov
or
scas
lcall
andl
inc
in
popa
pop
in
outsb
mov
jo
inc
inc
call
js
push
mov
addb
test
jg
adc
clc
adc
dec
in
adcl
rorl
adc
mov
add
in
into
loopne
inc
mov
inc
add
pop
mov
mov
and
test
inc
aas
jns
adc
and
jnp
adc
mov
push
dec
cltd
iret
iret
addr16
cli
popf
stos
jb
pop
call
fs
scas
push
push
inc
pop
cmp
imul
test
js
push
ret
cmpsb
sub
pop
pop
push
mov
sub
inc
jo
fimull
pop
xor
les
add
testb
insl
mov
rcll
dec
xor
outsb
add
xor
sti
mov
sbb
mov
xchg
mov
dec
clc
xchg
aam
xchg
sub
and
lea
jmp
sub
adc
fwait
dec
dec
pop
in
out
inc
dec
addl
pusha
jo
inc
cs
mov
push
gs
cmp
scas
xchg
jge
fstpl
imul
xchg
mov
test
pop
push
jg
mov
lods
subl
cld
loopne
lods
aas
gs
outsb
test
mov
fidivs
and
mov
fadds
bound
outsb
out
pop
cltd
scas
adc
push
faddl
mov
inc
test
pop
fistl
mov
lahf
fldcw
jecxz
nop
movsl
ja
dec
lock
out
cld
call
xchg
lea
push
pop
dec
jge
mov
ret
push
test
jecxz
cmp
push
cmp
movsl
into
sbb
es
dec
fcoms
cmp
les
test
xchg
sub
push
lahf
daa
jp
lds
add
inc
push
cmp
dec
daa
mov
and
shll
cld
push
es
aaa
adc
jle
test
into
fistl
das
mov
adc
outsb
inc
sti
lods
dec
ret
fsubr
rcr
pusha
cmp
jmp
or
jne
push
sbb
cli
lret
out
mov
pop
lea
sub
ret
jle
call
xor
adc
pop
xchg
mov
xchg
push
out
movsl
jno
pop
jl
push
and
dec
data16
push
in
push
sub
mov
mov
fbstp
shll
sub
and
pop
lds
pusha
jmp
add
scas
dec
ret
inc
mov
shlb
in
insb
loopne
ds
mov
mov
push
jecxz
jne
ja
dec
sub
xor
aaa
les
into
jp
fstp
in
inc
xchg
or
jg
inc
ss
das
dec
popf
aaa
je
push
push
sbb
mov
sahf
in
fadds
ret
inc
pop
xor
push
movb
jb
fldenv
lea
movsb
icebp
and
aas
mov
mov
fcompl
daa
cmpl
ds
add
ret
aas
cmp
pop
adc
ret
pop
popf
or
jbe
out
xchg
or
or
sub
xor
rol
pusha
gs
shrl
loopew
and
fldl
and
lcall
lcall
push
stos
pop
scas
in
and
xor
cmp
jbe
pop
iret
lea
xor
sbb
cld
aad
into
adc
mov
daa
jno
pop
adc
fsubl
addr16
imul
pop
lret
stos
mov
or
jno
or
sbbb
inc
or
test
call
push
pop
or
add
loope
cli
fdiv
xorl
mov
imul
jecxz
mov
dec
lea
out
rclb
or
mov
mov
aad
lods
call
xor
test
ja
fprem1
push
cmpsb
cli
fmul
or
push
out
pop
xor
sbb
add
loopne
jne
pop
and
lcall
dec
push
iret
mov
and
and
sbb
sbb
fucomi
sub
js
adc
ljmp
cmpsl
fldcw
jbe
mov
inc
pop
sub
stos
gs
or
lea
rol
rorl
sarb
add
cli
in
enter
add
out
mov
pop
xor
lods
xorb
push
xor
inc
xor
push
popa
xchg
jg
or
jo
test
xchg
lret
mov
adc
cmp
cmpl
popf
enter
xchg
les
fildl
ljmp
loope
push
mov
pop
fsubr
outsb
rcr
repz
xchg
stc
into
adc
out
jno
jle
push
adc
mov
je
out
shll
add
mov
sbb
scas
mov
push
push
jae
jbe
adc
and
sbb
fcomp
mov
mov
rcrl
test
movsb
xor
sub
push
jne
mov
in
out
push
lahf
jno
fwait
rcl
pop
adc
push
call
sub
or
cmpl
and
dec
dec
lret
push
sub
sub
hlt
in
decl
pusha
mov
pop
add
mov
mov
lds
test
out
push
pushf
mov
xor
out
jbe
out
mov
movsb
div
mov
lock
inc
jle
push
pop
outsb
mov
jnp
fsubrl
lods
inc
outsb
sub
mov
fisttps
xlat
pop
movsl
pop
push
cmp
imul
cmp
xchg
in
in
imul
sbb
sarl
add
imul
sbb
stc
cmp
inc
mov
or
addr16
adc
push
into
pop
cmp
in
pusha
stc
xchg
jp
push
sbb
cmp
inc
mov
cmp
mov
adc
decb
sub
jmp
sbb
push
sub
inc
jo
or
out
fs
popf
daa
stc
push
mov
aam
sub
fcmovbe
or
ljmp
or
add
cltd
ret
call
push
mov
mov
xor
cmp
adc
jg
arpl
test
pop
movsb
sub
fidivl
popa
nop
mov
mov
push
and
test
sub
dec
jge
add
fdivrs
js
outsl
push
mov
outsl
ficoms
mov
jp
fistpl
rcll
cwtl
or
mov
push
dec
sbb
lret
out
jge
js
mov
inc
nop
jns
jbe
sub
scas
js
popf
aas
insl
sub
push
test
pop
int3
inc
xlat
mov
iret
cltd
dec
fadds
jg
clc
add
cmp
jbe
cmc
lock
in
aam
adcb
xor
mov
or
cmp
lcall
mov
clc
sub
push
fnstcw
mov
mov
push
idivl
dec
ret
jecxz
or
mov
xchg
sub
mov
mov
push
inc
pop
je
popa
outsb
or
pop
jmp
or
jecxz
mov
sbb
adc
xlat
sti
add
jmp
cmp
or
dec
daa
fsub
je
lock
xor
xorb
sub
stos
pop
or
and
pop
xchg
dec
sbb
cld
fisubl
test
frstor
popf
and
fs
loop
outsb
cltd
testb
sahf
arpl
insb
rcrl
or
ja
aaa
pop
fisttps
mov
addb
sbbl
jne
and
inc
xor
rorb
pop
addr16
jnp
ljmp
cmp
loopne
jns
adc
imul
stc
push
inc
fiadds
mov
ja
in
adc
adc
sub
loope
imul
aam
cwtl
stos
sahf
adc
mov
cmp
fildll
cmp
aas
sub
add
jg
push
push
mov
leave
rorb
mov
pop
jae
lods
mov
pop
add
xorl
arpl
or
popa
inc
push
popa
pop
jecxz
pusha
es
cmp
jp
lods
cmc
aaa
and
stc
iret
ret
fstps
in
stos
dec
push
orb
and
pop
jae
and
mov
dec
xor
xchg
pop
inc
cmp
or
movsl
and
push
inc
inc
ret
ret
xchg
inc
leave
cmp
enter
cli
add
outsb
dec
arpl
ss
mov
push
cs
push
outsb
fsubrl
mov
dec
xlat
int
mov
pop
add
push
insl
repnz
and
gs
sub
adcl
les
lods
push
inc
fwait
loop
loop
sub
inc
inc
jmp
mov
icebp
mov
jge
xorb
push
jecxz
es
clc
icebp
cmp
bound
daa
fisubs
add
sub
xchg
scas
xor
call
je
fs
shl
add
sub
mov
adc
leave
push
pop
xchg
aaa
test
sbb
mov
pop
adc
out
cltd
in
push
aaa
mov
push
testb
rclb
mov
adc
dec
dec
cli
insb
add
daa
bound
mov
pop
jne
aad
loope
mov
lahf
push
dec
or
andb
sbb
in
add
inc
push
daa
push
xchg
arpl
add
inc
xchg
mov
add
stos
ja
jnp
xor
out
sbbl
test
stc
pop
fldenv
mov
cmpsb
mov
stc
cltd
sbbb
stos
and
pop
xchg
mov
int3
add
sbb
inc
sub
and
xchg
mov
jae
cmp
dec
and
pop
shr
insl
mov
cmpsb
aaa
add
mov
insb
subb
jecxz
mov
sbbl
popa
xor
mov
test
ja
flds
cmpsl
mov
xchg
mov
fisttpl
pop
mov
rcl
mov
push
in
rcrb
mov
push
sub
jge,pn
repnz
inc
sbb
mov
inc
mov
mov
push
adc
add
sub
push
xchg
jbe
inc
mov
dec
adc
inc
out
add
or
ficompl
mul
out
mov
jle
push
dec
xchg
cmp
mov
fwait
xor
xor
jle
xchg
repz
jp
jp
shl
inc
lcallw
out
cmp
xchg
jle
mov
addr16
add
lret
pop
test
lret
pop
add
scas
sarb
and
fistpl
cli
mov
dec
shr
into
pop
sbb
sbb
sub
mov
popa
jp
jbe
push
in
imul
scas
shl
sub
fildll
pop
js
mov
adc
and
inc
fwait
divb
pop
xchg
cmp
ss
xchg
mov
gs
lahf
jns,pt
or
ds
divl
mov
add
and
adc
mov
mov
jnp
or
mov
and
dec
int
jae
and
stos
xorb
insl
data16
ss
imul
jg
add
cmp
shld
scas
sub
fwait
xchg
test
mov
iret
adc
sub
mov
xor
sbb
pusha
addr16
push
xor
sbbb
push
xor
out
sub
call
shl
mov
mov
xchg
pop
incl
or
mov
outsb
aam
xor
mov
pop
cltd
push
mov
into
xor
jns
out
or
pop
or
cmpsb
cmp
push
push
iret
mov
pop
shll
andl
clc
outsb
scas
add
cli
ds
cs
cmpl
push
and
push
inc
test
out
mov
ljmp
fldcw
ljmp
xchg
push
test
pop
jle
cmpsb
push
pop
les
inc
repnz
mov
sub
es
fnstsw
push
mov
cli
sahf
test
fdivl
aam
arpl
fwait
icebp
cmp
pop
leave
test
ss
xor
roll
lcall
and
dec
lds
lds
jmp
jg
mov
or
dec
lret
sub
scas
clc
lods
jns
int3
adc
loopne
jecxz
bound
popf
test
xchg
pusha
mov
repnz
loopne
push
ret
leave
xchg
rcrb
out
mov
addr16
pop
sarb
in
das
inc
xchg
sub
mov
mov
xor
and
jae
out
shll
ss
jno
fistpll
sub
lahf
jp
cmpsl
lcall
fcmovbe
jne
jecxz
push
jg
dec
jge
push
rorl
aam
mov
cmp
sahf
pusha
sbb
mov
push
mov
adc
inc
push
jnp
sub
fsubrs
jmpw
push
jle
fwait
cmpb
lret
cmpl
mov
cwtl
or
loop
xor
stc
negl
pop
jg
je
cmp
pop
jb
ret
cmp
xchg
cmp
jp
fnstsw
lods
dec
cmp
jg
sbb
gs
mov
jle
dec
fldl
xchg
enter
popf
dec
push
jmp
push
push
cmc
fnstsw
xchg
cmp
pop
clc
nop
sub
lcall
inc
jp
out
insb
aaa
scas
shlb
mov
jecxz
pop
out
sbb
mov
aas
jo
mov
out
mov
jecxz
lods
les
jp
lock
outsl
or
adc
cli
shl
fwait
movsl
adc
xchg
mov
sarl
adc
divb
subb
adc
add
mov
shlb
xchg
dec
fildl
js
or
out
push
loopne
std
ljmp
jl
imul
inc
out
ds
bound
in
sub
scas
pop
mov
js
cltd
jb
lret
mov
mov
std
pop
cmp
mov
push
mov
xchg
mov
mov
dec
jl
outsb
or
add
subb
mov
jne
adc
lods
xor
and
lea
mov
js
out
cmc
iret
lea
and
ds
icebp
imull
test
fmulp
in
lods
or
mov
mov
js
or
adc
push
subl
sub
dec
sbb
je
popa
mov
in
pop
jmp
dec
jp
loopne
mov
sbb
mov
test
aam
iret
push
arpl
cmp
inc
cmc
and
loopne
jne
notl
and
pop
mov
and
jmp
rolb
movsb
dec
das
icebp
in
mov
and
insl
dec
jbe
pop
xor
or
jb
stos
insb
out
ds
jmp
xchg
push
out
out
push
into
jo
subb
cmp
les
int3
movsl
xor
fbld
fnstcw
ret
dec
std
rcl
pop
adc
aad
pushf
jl
adc
ljmp
xor
test
mov
xchg
in
xor
add
stos
out
out
jns
pop
insl
inc
push
lds
mov
aaa
divb
push
ss
xchg
fs
push
pop
jno
pop
inc
push
rcrb
mov
test
lods
pop
stos
gs
dec
ficompl
xchg
call
cmp
add
js
sbb
icebp
sbb
movsl
sub
mov
stc
push
std
jp
sti
xchg
pop
jae
mov
lcall
mov
mov
inc
dec
sahf
rclb
addr16
mov
jne
or
in
repnz
aad
add
sbbl
popa
mov
xor
xor
or
clc
enter
cmpsl
pop
daa
sub
push
push
add
push
xor
dec
pop
jle
dec
stos
data16
pop
xchg
pop
add
sbb
xchg
ja
std
pop
iret
adc
js,pn
push
sbb
fsubs
inc
xchg
fadd
jae
out
lds
mov
test
jae
aad
test
mov
cld
ret
fcomp
leave
push
pop
lret
jbe
into
add
out
in
fistpl
js
mov
cmpl
dec
lock
cmc
mov
ret
xchg
dec
pop
cmp
leave
pop
xor
mov
mov
iret
addr16
enter
icebp
push
mov
jbe
popf
dec
xchg
jge
or
sub
shll
mov
dec
cli
inc
pop
inc
mov
cmp
pushf
mov
push
jle
rclb
jl
mov
mov
mov
icebp
push
imul
mov
add
push
xchg
rcrb
xor
sbbb
fcmovu
hlt
xchg
xor
push
aam
xor
sub
lcall
out
sbb
lahf
iret
js
ficomps
dec
sar
pop
add
or
jl,pn
xor
xor
cmp
shrl
mov
cmp
pushf
mulb
inc
push
aaa
and
shlb
lds
cmp
or
mov
and
or
mov
out
repz
pusha
pop
push
into
inc
enter
lods
in
sbb
mov
lods
sub
stc
jb
push
ret
mov
push
in
js
aam
push
jp
xchg
fldl
outsl
outsl
gs
test
gs
lret
fsts
ja
rol
sub
dec
mov
cmp
enter
es
add
cmp
daa
and
divl
push
outsb
jae
pop
jecxz
and
mov
pop
xorl
and
mov
push
int3
fisubrs
cmp
xlat
or
mov
notb
push
ret
lcall
iret
adc
and
mov
add
add
jp
cmp
sbb
iret
imul
jbe
pop
addr16
add
cmp
mov
addr16
mov
mov
pop
adc
imul
or
sbb
xor
add
stos
jg
popf
sbb
movsb
mov
xlat
cmp
cmp
or
jmp
sbb
inc
adc
lret
sub
mov
sbb
or
xchg
sti
xor
aas
js
xchg
add
xchg
mov
pop
repnz
mov
adc
cmp
addb
push
or
mov
pop
mov
push
packsswb
lock
jne
adc
add
stos
add
jle
test
mov
cld
jle
and
jp
mov
push
cmp
sub
out
das
mov
or
in
cs
andl
inc
arpl
arpl
loopne
xor
loop
mov
xor
insb
xchg
and
in
or
lods
mov
mov
dec
cmpsb
pop
inc
xchg
outsl
pop
xchg
cmc
inc
push
dec
jae
faddl
mov
bound
movl
jl
sti
lret
dec
mov
lret
pop
jp
pop
xchg
imul
test
inc
dec
out
inc
add
je
addr16
fadd
ffreep
les
ljmp
pop
rol
push
out
jle
push
iret
add
movsl
pop
cmp
shrl
mov
leave
rcrb
pop
xor
cli
movsl
je
insb
push
test
pop
xor
popa
jp
sub
call
adc
lahf
hlt
sbb
mov
inc
xor
push
hlt
and
jg
xchg
push
cmp
jmp
mov
mov
test
sub
mov
jl
pop
push
or
mov
fcmovnb
fildl
adc
inc
clc
ret
mov
lret
leave
out
dec
jns
aaa
xchg
mov
fwait
cmova
cmc
or
or
sub
aam
lcall
sub
lods
int3
mov
pop
dec
movl
in
divl
aam
sbb
cmp
repnz
xor
push
or
mov
daa
shrl
cmp
outsl
mov
scas
push
ficoml
pop
bnd
mov
push
fadd
mov
dec
inc
inc
or
fwait
xchg
enter
add
sbb
xchg
pusha
mov
mov
orb
add
lds
mov
sub
xor
or
and
jle
cld
xchg
mov
sub
hlt
mov
or
lret
and
pushf
fxch
xchg
push
fcoms
movsl
mov
dec
dec
mov
stos
lret
mov
test
or
mov
mov
in
lret
cli
or
or
out
push
mov
popa
or
ljmp
dec
pop
repz
pusha
push
push
jns
sar
or
dec
xchg
mov
mov
mov
mov
orl
mov
aas
dec
push
xor
adc
les
insl
inc
adc
pop
or
mov
mov
push
idivl
push
jne
iret
test
addr16
cmp
dec
xor
push
sub
leave
sub
xor
loopne
adc
mov
xchg
pop
fbstp
sub
fprem
jle
in
call
popa
fwait
std
push
pop
add
push
stos
xchg
daa
lods
inc
data16
jae
pop
scas
movmskps
inc
cmp
gs
insl
fidivs
mov
dec
hlt
sub
and
push
xlat
dec
and
mov
sbb
lret
mov
in
shl
pop
xchg
cltd
add
loope
sub
movsl
pop
sahf
jg
dec
xchg
int3
push
inc
inc
sti
mov
pop
testb
daa
aas
sub
lock
cmpsb
loope
aaa
mov
cmc
push
mov
in
jmp
inc
ror
sbb
movl
clc
adc
in
repz
cmpsb
sub
loopne
daa
sub
sahf
adc
add
dec
dec
call
scas
add
mov
pop
jne
sub
fdivrs
pop
sub
add
cmpsl
movsb
pop
inc
ficoml
cmp
mov
data16
insb
loop
imul
cli
cltd
insb
jge
repnz
mov
jle
leave
inc
arpl
push
push
or
mov
sarl
pop
inc
int
dec
aad
pushf
pop
inc
xlat
inc
pusha
sub
push
jo
sbb
stos
xorl
mov
ja
mov
arpl
dec
outsl
cltd
xor
push
enter
or
mov
sub
in
nop
loope
dec
xchg
jge
loop
imull
ss
mov
imul
iret
fsubp
loopne
add
or
test
shll
aam
adc
in
mov
pop
pusha
pop
adc
jle
and
xorb
xchg
mov
popa
sub
inc
push
dec
pop
ds
mov
std
inc
mov
fdivrl
inc
cs
dec
cltd
pop
sub
int3
pop
xchg
push
stos
sti
ret
imul
loopne
pop
data16
lcall
into
iret
cmp
xor
inc
xor
push
mov
scas
add
ficoml
adc
insb
or
lods
or
lcall
sbb
cmp
fwait
int
sbb
add
mov
and
mov
mov
push
jne
popa
icebp
mov
xchg
mov
xorb
in
mov
inc
je
fists
add
dec
icebp
fs
ret
sbb
pop
xor
xchg
cltd
adc
loop
mov
xchg
push
icebp
mov
xchg
setle
call
in
je
rclb
test
xchg
das
sub
lods
or
inc
cs
push
pop
and
push
xor
mov
jl
pop
mov
int3
jbe
fwait
movsb
push
mov
arpl
cmp
xor
cld
fcoml
mov
lock
sub
xor
mov
popf
pop
fidivl
mov
stos
sub
and
in
push
loop
xchg
insb
lahf
popl
pop
push
cmp
adc
iret
sub
xor
xor
mov
push
jl
and
mov
daa
inc
int3
je
push
cmpsl
inc
fimull
aam
js
xlat
sbb
and
fidivl
pop
out
inc
sarb
mov
mov
decb
repnz
rcrb
add
fmuls
mov
mov
ljmp
mov
out
jnp
push
cs
cmp
inc
xlat
push
test
gs
xchg
inc
jge
insl
jle
cmp
mov
dec
push
ffree
and
mov
inc
or
test
es
mov
mov
xor
cwtl
cmp
sbb
aas
test
stos
cwtl
mov
jp
mov
push
pop
jl
sbb
fadd
add
les
outsl
nop
add
inc
jns
sbb
push
and
add
and
add
xor
aas
hlt
sbb
jns
outsl
cltd
sbbl
fldenv
jno
adc
mov
xchg
cmpsl
sub
ja
xor
cwtl
xchg
mov
sbb
xor
fsubrp
mov
cld
mov
gs
shl
xor
aaa
and
mov
and
jle
mov
inc
sahf
xchg
and
add
retw
dec
cmp
cwtl
imul
cmpb
mov
scas
jge
push
sbb
and
cmp
mov
lret
js
mov
sbb
sbbb
or
inc
push
dec
cmp
and
cmp
jns
repnz
shlb
into
cmpsl
jge
aaa
and
mov
in
dec
jp
cwtl
jp
mov
rcrl
jb
xor
adc
mov
jge
xor
jne
sbb
push
test
sbb
mov
pop
nop
lahf
jne
and
into
out
out
testb
dec
flds
xor
push
or
xchg
popl
fistpl
popa
push
mov
cmpsb
lods
inc
shr
push
ljmp
shlb
insb
imul
dec
sahf
lret
loopne
ja
push
xor
cli
out
sub
loop
add
int3
or
push
pop
adc
cmc
xchg
mov
and
ja
popa
test
cmp
rcll
cltd
mov
in
aam
fwait
test
data16
sbb
pop
xlat
mov
sbb
dec
jnp
aaa
mov
xchg
xorb
inc
bound
mov
subl
ds
enter
int3
lahf
pop
mov
out
and
es
je
inc
push
icebp
orb
jecxz
mov
andl
dec
fldt
test
adc
cmpsl
fwait
xchg
cld
xchg
jge
or
popa
scas
fwait
jo
in
lea
outsl
sbb
dec
sahf
and
inc
fwait
jno
lock
or
sbb
cmpsl
mov
jnp
inc
test
inc
push
adc
es
negl
mov
dec
jbe
push
xor
int3
xor
es
cmp
xchg
fisttpl
xor
loope
outsb
in
lahf
into
mov
jns
insb
sti
std
cmpsl
jmp
jmp
mov
ja
mov
mov
add
es
xor
fwait
mov
jae
mov
cli
sbb
daa
cmp
jo
sbb
cmp
xchg
notl
popa
xchg
jo
mov
xchg
fadds
out
ss
movsb
out
and
ret
les
test
and
pop
leave
mov
fistpll
out
mov
shlb
dec
fs
pusha
sbb
and
mov
push
fisttpl
xorl
pop
add
jecxz
dec
outsl
sbb
pop
pop
pop
or
xchg
imul
jnp
sarb
hlt
ret
jns
xchg
pop
rcrl
shll
mov
ja
mov
mov
int
jecxz
in
xchg
ffreep
repz
movsl
push
mov
push
pop
leave
and
push
mov
test
in
out
test
mov
cs
and
mul
hlt
adc
stos
xor
dec
pop
sub
aas
sahf
das
mov
or
jmp
sbb
stc
iret
or
cmc
sbb
bnd
pusha
jb
push
js
fadd
hlt
and
ljmp
and
mov
mov
inc
in
pushf
aas
inc
mov
mov
adc
sub
push
sbb
adc
and
adc
loope
jecxz
in
rcpps
inc
and
imul
fsubrs
cmp
xor
fsubs
xlat
push
aas
mov
xor
stc
pop
mov
loope
popa
int3
and
daa
jo
jns
mulb
push
out
decl
sub
inc
pop
fists
cmc
xor
fisubl
jmp
int
popa
sub
fcompl
pop
shll
outsl
cltd
in
and
loop
pop
cli
sub
xchg
or
push
mov
add
repnz
mov
cltd
cwtl
rorl
or
adc
add
cmp
mov
mov
xchg
ljmp
inc
mov
fcmovb
cmp
xchg
sub
cmpb
pop
add
imul
jbe
out
dec
and
xchg
or
stc
bound
xchg
hlt
add
popf
inc
fstl
testb
das
dec
lock
and
enter
popf
cmp
adc
add
mov
loopne
adc
popf
shr
arpl
pop
pop
add
movsl
test
cmc
jne
cwtl
aas
jnp
lret
mov
and
xor
inc
mov
jecxz
fiaddl
adc
xlat
pop
repz
fdivrl
out
icebp
jmp
jmp
adcb
xor
mov
jge
cmpl
adc
xchg
ja
shlb
cmp
or
or
mov
mov
jl
or
mov
outsl
and
aaa
or
mov
fisubs
dec
out
fisttpll
pop
mov
pop
orb
insl
sarb
clc
push
sub
js
call
outsb
jge
out
mov
inc
pushf
repnz
lds
arpl
push
dec
cmp
call
into
mov
movsb
xchg
lea
mov
and
push
fs
push
adc
xor
xor
cmp
jo
jecxz
sub
pop
mull
pop
cmp
icebp
test
nop
rcll
add
aad
imul
xor
inc
push
mov
sub
push
in
sahf
sbb
cmp
test
arpl
and
add
jge
out
xchg
rcll
cmp
jp
push
orl
outsb
addr16
pop
pop
xor
sub
shrl
pop
add
js
mov
mov
mov
outsl
in
movsl
sahf
clc
outsb
xchg
add
aaa
jp
test
push
and
insb
pushf
jmp
enter
fldpi
roll
add
and
out
mov
pop
jmp
lret
call
imul
jb
lods
sub
xchg
in
cltd
arpl
mov
shrb
push
pop
lret
and
cmp
je
xor
ret
fcoml
cltd
mov
inc
jge
sub
dec
stc
mov
ljmp
scas
dec
addb
push
stos
push
add
stc
imul
push
negb
mov
scas
inc
xchg
mov
sbb
jno
fsubr
mov
cwtl
test
adc
xor
cmp
push
cmc
divl
jl
ja
pop
push
mov
and
xlat
shlb
cmp
out
ret
mov
out
test
or
lret
cmp
jbe
into
jge
movsb
pop
aam
push
movsl
leave
aad
mov
push
out
mov
loop
out
xchg
mov
out
and
adc
out
and
jl
cli
xchg
ja
das
hlt
or
cld
xor
loopne
push
add
or
xchg
xor
inc
xor
data16
in
sbb
pop
int
test
mov
pmaxub
mov
jnp
and
popf
adc
nop
inc
or
aad
jmp
pushf
testb
dec
es
addl
pop
push
mov
jp
imull
jb
adc
push
cli
inc
xchg
pusha
idivl
cmpsl
pusha
outsl
sub
dec
mov
mov
mov
sub
or
push
lcall
add
sbb
ss
in
jecxz
mov
fsubrp
push
subl
test
jmp
inc
fiaddl
mov
fs
push
add
shll
lods
jno
push
cmp
push
pop
mov
jmp
sub
aaa
sub
test
sbb
xor
fldcw
in
je
test
pop
gs
push
cmpsl
mov
adc
in
pop
movsb
movsb
je
jmp
mov
testl
dec
jo
int
outsb
mov
arpl
lcall
mov
divb
and
mov
outsl
sahf
dec
cld
xor
push
xchg
and
shrl
push
add
inc
xor
rcrb
adc
cltd
add
pop
cs
sub
dec
fistl
sub
xchg
call
lcall
xor
mov
pop
adc
inc
repz
jae
mov
daa
xor
push
sub
add
sbb
add
mov
mov
pop
and
inc
fnsave
aaa
mov
mov
adc
or
fcompl
jg
repnz
fistps
ds
mov
pop
xor
insb
sbb
push
jb
or
jle
dec
imul
xor
nop
fnstcw
repnz
filds
and
and
fisubrs
push
daa
sub
push
into
into
insl
in
push
sbb
mov
push
into
fnstsw
test
or
fs
pushf
xchg
mov
cmp
ret
mov
fsubl
lret
pop
sub
cmp
sbb
clc
andl
xchg
or
popf
sbb
pop
adc
adc
movsl
cmp
pop
fwait
mov
fildll
jg
ret
pop
icebp
and
xor
inc
out
push
sub
cmpsl
mov
ret
out
dec
mov
or
cmc
mov
mov
lret
push
sub
fcmovne
aam
jae
fldenv
pusha
sub
and
mov
jmp
mov
bound
or
sub
sbb
inc
js
sub
pop
adc
add
hlt
rorb
jl
sbb
push
mov
int
inc
out
inc
xchg
mov
cmc
or
sbb
dec
and
pop
cli
mov
or
xchg
jns
or
push
push
call
dec
jno
adcb
int3
stos
addl
mov
xchg
movl
ror
mov
mov
int
je
mov
test
cmp
mov
pop
adcl
push
movsl
scas
adc
ds
add
or
and
outsb
mov
pop
mov
push
shl
push
cmpsb
imul
loopne
shll
push
int
jae
and
xchg
pop
movsl
mov
xor
add
add
int3
xchg
mov
dec
imul
mov
cwtl
scas
mov
mov
out
or
push
cmp
imul
aaa
xor
dec
and
push
loop
jno
adc
inc
cmp
jecxz
jb
sbb
jb
cmpsb
repz
cltd
mov
into
mov
mov
jge
pushf
add
test
in
xor
shl
ret
ss
push
xchg
movb
mov
inc
movb
rcrb
pop
sub
xor
sti
jg
mov
addl
jo
in
cmp
stos
iret
inc
inc
and
mov
call
pop
mov
das
shrb
adc
pushf
fwait
js
or
pop
sbb
or
leave
dec
xor
dec
aaa
lahf
push
mov
lahf
daa
cs
jbe
push
jle
test
iret
cmpsb
repnz
fdivrs
add
sbb
insl
repnz
bound
push
add
fcmovbe
fs
stos
arpl
loopne
jbe
mov
out
add
inc
push
fdivs
pop
mov
mov
or
loop
inc
out
pusha
lods
mov
push
mov
scas
addr16
in
adc
adc
jg
xchg
ss
jae
vhsubpd
divb
cwtl
out
and
imul
sub
in
cmp
mov
aam
fwait
enter
or
leave
sbb
jecxz
lock
mov
adc
fwait
adc
sub
dec
mov
push
pavgw
test
or
sub
mov
pop
mov
icebp
movsl
rclb
jecxz
jnp
pop
das
stos
push
adc
repnz
ret
test
cmp
loop
or
loopne
sbb
jp
pop
pop
arpl
daa
push
cmp
push
ret
cmp
inc
push
pusha
dec
fisttpl
jecxz,pn
mov
jb
mov
insl
shlb
mov
fists
inc
loopne
add
cmp
fcomps
fsubl
pop
movsb
and
movb
jp
sahf
mov
xor
loope
pop
addr16
mov
mov
push
imul
aas
mov
movsb
and
mov
or
jb
aas
ror
fisubs
test
roll
and
add
jmp
mov
cmc
mov
cmp
mov
jecxz
xchg
stc
sbb
aad
lret
or
cmp
sub
push
sub
push
fisubl
mov
das
push
fwait
cli
movsb
and
adc
je
lock
rcrl
test
shll
mov
xchg
pop
sbb
push
jns
fistpll
inc
in
jmp
cmpsb
jbe
jle
cmp
movsl
push
mov
sub
insw
cltd
pop
mov
imul
mov
jle
mov
sub
in
dec
imul
inc
addr16
stos
out
imul
dec
pop
push
cmpsl
dec
inc
mov
les
test
dec
popf
clc
shl
xor
addr16
and
jmp
lds
ret
sub
bound
dec
inc
cmp
js
mov
add
inc
cmp
dec
jmp
xchg
cmp
pop
jno
fistl
aad
push
aam
shll
lret
inc
ljmp
popf
and
mov
and
inc
mov
sub
mov
fbstp
and
dec
sub
lcall
cmc
ds
cmpsb
jnp
cmp
sub
inc
in
outsb
and
jnp
fs
das
imul
push
jecxz
nop
scas
lea
dec
mov
into
scas
mov
xor
cmc
xchg
push
subps
mov
rol
cmp
add
adc
pop
jge
loope
and
mov
aaa
sbb
xchg
cmp
out
and
sub
push
pop
cwtl
into
mov
jnp
mov
or
mov
jecxz
std
je
xchg
dec
xor
imul
mov
mov
clc
fcmovbe
xor
push
lcall
and
fsts
popf
cld
mov
lret
jecxz
out
add
pop
mov
mov
add
cli
pop
push
xlat
cwtl
mov
push
sub
add
push
sub
sub
inc
into
insl
mov
pop
cmc
pop
and
leave
cmpsb
lds
lret
test
or
in
sar
pop
daa
faddl
cmp
scas
sub
nop
mov
clc
dec
rorl
add
push
jg
xorl
push
enter
jle
jno
mov
scas
dec
loop
jbe
mov
mov
iret
test
mov
mov
cmpsl
xor
insl
jns
push
push
subb
xor
enter
cmc
cmp
fimuls
cmp
and
xor
pop
push
jle
lret
stos
jb
stos
adc
mov
std
in
xchg
imul
dec
cmp
cmp
sti
lock
xchg
clc
mov
cmp
jl
hlt
lods
mov
pop
mov
add
ljmp
inc
sub
push
sub
mov
or
lahf
lods
decl
add
xor
mov
shrl
push
jo
cmp
add
cli
outsb
xor
shr
xor
adc
jno
out
xor
inc
pop
push
les
testb
out
jmp
sbb
lds
jecxz
shrb
inc
mov
xchg
jo
add
jg
popa
movsl
adc
les
mov
into
iret
push
cmpsl
outsb
mov
pop
movsl
ss
xchg
jo
fbld
xchg
aad
xchg
jl
mov
xor
cmp
pop
inc
in
dec
cmp
and
ljmp
adc
cmp
cltd
sbb
mov
cmp
jge
push
mov
and
dec
fcmovb
sub
push
lock
mov
sub
inc
add
push
sbb
mov
xor
cld
data16
adc
test
jnp
es
movsb
sub
mov
or
nop
push
xor
aaa
jge
or
and
mov
jae
stos
shll
xlat
test
push
rolb
in
push
sbb
lods
dec
cli
and
jmp
loop
imul
repz
cmc
repz
jae
pop
xor
sbb
cli
xor
idivb
lods
jmp
cmp
jl
into
ror
xchg
jo
push
testb
pop
adc
or
pop
ret
filds
int
das
movsl
repnz
into
mov
or
add
or
cmpsb
call
xchg
push
inc
fs
js
aad
icebp
mov
xor
push
mov
pop
jecxz
fcmovu
or
cmc
in
mov
test
stos
pop
dec
mov
lahf
sub
outsb
fcmovb
inc
jns
inc
xchg
dec
jg
arpl
out
cwtl
lret
scas
push
clc
dec
jle
dec
fsubs
repnz
or
mov
mov
adcb
shl
xor
inc
and
mov
sbb
out
xchg
iret
jmp
imul
sub
or
add
or
lcall
ljmp
pop
mov
test
out
sbb
xor
pop
test
aas
pop
test
jecxz
das
dec
add
mov
pop
lods
mov
dec
insw
jae
int
stos
sbb
mov
out
xchg
call
call
pop
shll
or
bound
mov
jo,pt
and
test
sub
mov
adc
add
jecxz
popf
pop
out
sub
inc
add
ja
push
cmp
dec
mov
xchg
popf
shr
push
sbb
dec
jno
test
std
loop
scas
repnz
in
arpl
mov
adc
roll
sahf
jns
jmp
mov
mov
daa
jne
mov
mov
mov
gs
and
jne
mov
and
or
mov
les
mov
mov
lahf
cwtl
xor
fcompl
mov
mov
cmpsb
outsl
repnz
popa
icebp
ret
outsl
sub
test
dec
inc
int3
inc
out
adc
sarb
jge
loop
xchg
dec
xchg
stos
cmp
loopne
aam
stc
das
inc
daa
pop
mov
in
in
jecxz
ret
in
inc
fimull
dec
dec
push
pusha
popf
push
stc
push
repnz
mov
movsl
test
cltd
jae
cwtl
fistps
jp
nop
pushf
ror
shlb
js
mov
push
data16
cmpl
lock
mov
cmp
and
and
int3
fists
inc
ja
cmp
push
gs
jb
mov
mov
mov
orl
inc
mov
lret
mov
cmp
xchg
test
cmpsb
mov
mov
fwait
mov
jb
mov
das
pop
adc
sub
gs
lcall
ror
dec
add
lods
add
jne
mov
call
push
add
jp
push
cmc
inc
mov
pop
into
add
cmp
je
add
out
cmp
push
push
xor
xchg
cmp
lahf
cmp
lods
test
bound
scas
cmp
xchg
pop
pop
xchg
lret
jp
popa
xor
jl
or
je
mov
and
es
psubd
add
ret
or
popf
pop
lahf
mov
stc
outsb
sti
lods
outsl
mov
mov
sbb
dec
xor
or
push
pop
sarb
mov
mov
jecxz
movsb
jmp
jae
enter
sbb
mov
jmp
cs
xor
sbb
xchg
lahf
stc
xor
sbb
cltd
movsl
pop
rclb
leave
fisttpll
push
pop
or
jb
clc
call
call
popf
xchg
daa
add
and
add
bound
ljmp
sbb
call
and
mov
pusha
xchg
mov
xchg
divps
dec
push
or
sub
lods
add
les
mov
push
xor
jno
lea
clc
test
dec
int
cli
repz
int
pop
cmpsb
in
incb
add
cmp
out
out
dec
orl
jnp
push
mov
out
mov
iret
setne
addr16
rorl
pop
popa
std
mov
cmpsb
cmp
lret
cmc
scas
mov
jecxz
add
mov
ljmp
inc
or
push
dec
cmp
cmp
enter
pusha
inc
sub
mov
or
pop
push
pushf
adc
lock
dec
adc
rorl
pop
ss
ret
dec
lds
jmp
aad
fdivr
rol
cmp
mov
or
adc
rcl
sub
addl
js
lahf
cltd
xchg
gs
lods
mov
inc
mov
pop
into
xor
imulb
mov
fdivrs
dec
cmpsl
loop
fisubs
sti
test
imul
ja
sub
push
in
cmp
aad
sbb
nop
sub
push
adc
cmp
push
xor
scas
shrl
adc
sahf
call
negl
fs
inc
jecxz
insb
lcall
pop
repz
xorl
and
js
pop
andl
ss
cmpsl
ja
daa
rep
cmp
and
bt
mov
ss
sub
subb
rol
pop
cmp
jae
insb
andl
dec
adc
cmp
outsl
stos
inc
dec
shll
push
enter
inc
mov
lcall
adc
pop
cmpsl
mov
cmpsl
mov
das
dec
lods
adc
push
push
pop
mov
out
mov
sub
mov
iret
sub
pushf
stos
mov
and
dec
popa
int
jl
repz
and
xchg
mov
push
jg
lret
sbb
imul
pop
mul
mov
sbb
pop
push
test
jnp
test
mull
fisubs
stos
or
xchg
mov
xchg
jle
jle
pop
outsl
rol
and
cmp
or
mov
push
lea
test
lds
cmpsb
int
lock
int
addr16
mov
shr
mov
mov
nop
xchg
sbb
push
std
push
and
cltd
adc
pop
inc
and
pop
std
ret
test
cld
aam
andb
out
adc
pop
je
xor
ficoms
loope
pop
cltd
lea
andl
fsubrl
roll
cmpl
pop
jle
add
lods
je
push
mov
dec
and
mov
idivb
pop
cmp
push
jno
adc
jno
shlb
movsb
or
adc
sub
data16
mov
pop
adc
jl
xor
lock
test
cwtl
cld
dec
shlb
sub
dec
insb
inc
mul
dec
sub
sbb
push
cmp
xor
jmp
jmp
and
lret
cmp
xchg
mov
cmp
aam
jl
jbe
ret
mov
into
xor
ja
shrl
jbe
mov
sbb
imul
pop
inc
or
out
jnp
push
xchg
and
enter
shr
dec
xor
in
out
add
sub
and
jae
pop
mov
mov
fistl
daa
rorb
cltd
xor
push
adc
mov
add
mov
and
push
out
xchg
mov
dec
test
lea
ljmp
movsl
inc
outsb
adc
in
cmp
sbb
aam
xor
xor
inc
das
lods
addb
out
sbb
mov
arpl
adc
cmp
packuswb
movsb
mov
out
jno
inc
xchg
inc
mov
test
repz
subl
popf
sbb
sbb
cmp
push
loope
loop
mov
ljmp
sbb
sub
jne
cmpb
ret
or
jnp
push
and
dec
in
mov
sbb
pushf
jbe
push
and
les
or
arpl
mov
jne
lret
and
dec
and
pop
cld
insb
shlb
sti
out
mov
das
sbb
les
das
scas
cmc
xchg
sub
lods
and
mov
xchg
adc
mov
std
gs
call
inc
push
imul
out
jns
out
xor
ss
pop
cmp
jecxz
jp
sbb
cld
add
mov
xchg
sti
aas
add
inc
jbe
les
pop
mov
inc
out
mov
nop
sub
inc
or
sub
cwtl
aas
testb
mov
push
aaa
cmpsb
leave
xchg
loope
adc
iret
xchg
or
xorl
std
les
cmpsl
repnz
lret
sub
mov
push
cmp
es
arpl
sub
sbb
add
icebp
push
sbb
add
push
in
scas
push
repz
les
inc
cltd
es
mov
lcall
inc
imul
sbb
cltd
sub
mov
pop
add
shl
dec
das
cltd
inc
test
lods
dec
test
or
ljmp
sub
je
sub
rcl
frstor
push
out
pop
loope
xchg
test
fnsave
jmp
fwait
dec
or
push
or
test
cmc
xor
fs
scas
push
xor
inc
inc
lea
add
fdivr
psadbw
inc
cwtl
sti
sub
adc
cld
sarb
cmpb
mov
div
cmpb
jo
dec
add
in
add
jo
sahf
rorl
arpl
scas
dec
out
repz
sub
dec
xor
inc
ret
std
stc
mov
call
insl
mov
push
scas
mov
mov
clc
cli
mov
insl
xor
jo
nop
push
sub
mov
mov
ljmp
xlat
jg
outsl
or
mov
cmp
inc
sub
fistps
dec
pop
mov
sub
pop
pop
sbb
xchg
cmc
movsb
dec
sti
mov
sbb
mov
shr
lret
repz
negb
popa
dec
movsb
sbb
shrb
push
arpl
stos
jbe
js
lea
adc
and
cwtl
adc
dec
sbb
mov
or
jmp
arpl
jae
sbb
mov
jg
aad
or
xchg
daa
push
out
shll
lahf
push
mov
cmp
mov
xor
hlt
or
out
xor
xchg
cmpl
gs
std
adc
jp
xchg
or
xlat
sbb
nop
les
and
jle
add
leave
inc
or
out
scas
pop
imul
add
cld
xor
jb
inc
mov
and
and
jnp
mov
addr16
mov
ficoms
inc
imul
adc
out
repz
cmp
fwait
push
pusha
stos
mov
shrl
add
mov
idivb
clc
mov
add
mov
sarb
fs
out
adcl
inc
mov
movsl
pop
xor
les
push
mov
mov
cmp
test
ja
pop
push
mov
sbb
mov
ss
mov
jmp
mov
and
jmp
mov
js
mov
adc
inc
xor
pop
int
lcall
xchg
add
xchg
iret
mov
insb
jmp
jns
xchg
push
jl
movsb
std
jno
pop
cmpsb
xor
xchg
push
mov
xor
into
push
adc
insb
popf
mov
test
dec
xor
cmc
or
xchg
cmc
jecxz
pop
or
or
jmp
mov
shll
sahf
and
fsubs
bound
enter
push
je
aas
push
scas
fidivs
fdivrs
dec
fs
xor
daa
inc
and
adcb
scas
fcmove
rclb
lret
rclb
mov
addr16
or
incl
incl
repz
mov
fimuls
stos
mov
testl
sub
iret
hlt
or
jg
jae
mov
jne
sbbb
aaa
in
mov
jmp
imul
adc
mov
pusha
adcb
ja
insl
lock
lahf
push
xor
and
xchg
ja
out
jo
cld
rcrl
mull
nop
and
sub
and
stc
mov
sub
insb
pop
dec
adc
push
xor
mov
add
jns
rcrl
mov
inc
mov
jno
dec
inc
popf
xchg
into
jne
in
adc
add
sbb
pop
push
inc
ja
adc
mov
xchg
push
daa
adc
lock
loope
inc
xchg
xorl
xor
or
jp
pop
pmulhw
test
ss
dec
into
test
mov
mov
sub
pop
popf
xlat
mov
and
dec
dec
dec
into
ret
xchg
dec
test
jge
icebp
in
mov
pop
ja
jae
cmc
mov
or
push
sub
ja
testl
sub
and
dec
dec
ljmp
pop
lcall
cmp
dec
lods
cmc
add
dec
aas
jle
or
dec
xchg
enter
mov
daa
lahf
push
jbe
aam
in
add
add
fstpt
and
int
lret
xchg
cltd
xor
mov
mov
cs
dec
lret
loop
popa
jns
inc
sbb
iret
aam
add
mov
jns
or
rorl
shll
arpl
or
in
dec
xor
cld
dec
xchg
testb
lds
int3
mov
ret
aas
ss
add
xchg
jb
cmpsb
xor
sbb
dec
mov
fsubp
and
mov
mov
or
jecxz
addr16
dec
shrl
mov
xchg
ja
pop
dec
mov
adc
repz
push
lcall
inc
pop
jb
or
bswap
lods
ds
push
push
fistl
adc
or
cmp
add
lret
cltd
lret
ds
cwtl
in
in
or
sbb
sarl
ds
push
jmp
aam
mov
jl
int3
mov
push
rcrb
gs
je
pop
or
pop
pop
xchg
jl
xor
mov
dec
out
and
push
sbb
dec
push
addr16
mov
mov
or
movsl
add
cmpsl
shlb
lret
mov
mov
xchg
inc
out
nop
das
pand
das
sbb
dec
sbb
push
jmp
or
sub
mov
push
pop
xor
inc
push
or
cwtl
push
pop
mov
push
inc
nop
mov
add
shlb
imull
jg
jo
iret
and
cs
outsl
add
sub
lds
pop
cmp
insb
les
inc
pop
arpl
mov
popa
popa
jns
lock
lcall
imul
outsl
mov
xor
subl
xorl
bound
fwait
insb
inc
inc
inc
cmpsl
popf
lock
mov
lret
nop
addr16
jge
push
jmp
or
push
orl
xchg
and
fldl2e
outsl
adc
xlat
in
rcrb
jge
js
fcoml
or
ja
int3
jle
ljmp
pop
adc
out
jns
inc
push
mov
rcr
or
mov
or
mov
popa
ja
inc
inc
and
and
loop
mov
nop
iret
shrb
xchg
das
inc
jmp
loop
fst
push
jnp
enter
daa
lcall
loopne
lret
dec
pop
into
es
das
xlat
iret
lock
mov
insl
add
stos
xchg
popa
jmp
dec
mov
mov
push
push
xor
jb
cwtl
sbb
xchg
mull
inc
es
add
es
inc
sub
aam
ret
data16
in
mov
or
stos
mov
das
jg
movsl
test
pop
gs
adc
cltd
data16
insl
ret
sbb
fidivrs
xor
sub
bound
jg,pt
sub
mov
fistpll
xchg
pusha
out
push
leave
outsl
lcall
fsts
scas
andl
inc
inc
lods
dec
movsl
test
fcom
xor
cmp
add
and
and
arpl
test
xchg
push
xor
lods
je
mov
cs
push
pop
test
add
pusha
sub
xchg
pushw
sbb
sub
mov
sti
cwtl
sti
iret
dec
push
cltd
jp
mov
les
stos
pop
sub
pop
pop
cmp
clc
xor
xchg
push
push
pop
aas
jo
fdivp
shll
push
in
inc
int
rcl
cmp
mov
sbb
push
sub
mov
aas
outsb
xchg
jmp
mov
fmuls
cld
or
int
jp
sarb
sti
cld
xchg
sbb
push
add
push
daa
mov
jae
ja
pop
lret
addr16
cmp
dec
sub
sbb
loope
imul
sbb
icebp
rclb
shlb
mov
lods
iret
fs
xchg
cmp
rorb
mov
and
cli
xchg
mov
loop
mov
icebp
mul
push
repnz
xchg
inc
dec
and
xchg
cli
and
bound
lock
sub
inc
mov
mov
mov
lds
push
movsl
aam
mov
in
repnz
inc
ret
les
inc
sbbl
mov
xor
or
cmp
loop
mov
es
push
jo
or
mov
xchg
in
push
out
mov
jp
xor
xor
in
xor
pop
cs
jo
arpl
inc
and
or
sub
xor
jecxz
test
sti
add
insb
popf
scas
push
push
pop
sti
sti
jle
ret
mov
cmpsl
xchg
cli
je
xchg
mov
out
add
mov
mov
sbb
stc
addr16
xor
imul
dec
or
ds
aam
ret
add
inc
cmp
mov
test
shrl
pushf
xor
push
scas
sbb
mov
ret
test
dec
addr16
mov
int
cltd
loop
rep
in
mov
out
je
inc
cmpsl
pop
xchg
fsubp
jo
push
jl
adc
hlt
push
cmp
daa
sub
insb
in
sbb
pop
js
popa
xor
cmp
arpl
mov
push
mov
inc
test
inc
push
mov
sub
sar
stos
and
pop
test
or
sbb
mov
es
sti
dec
aas
mov
ja
jle
xchg
test
dec
push
inc
jge
repnz
test
mov
movsb
sbbl
scas
shlb
add
imul
xchg
adc
dec
cmp
and
push
lock
and
pop
inc
sub
mov
nop
add
push
pop
mov
lock
sub
test
stc
inc
ficoml
icebp
enter
add
lock
aas
push
lret
push
adcl
aad
int3
sub
in
dec
push
into
xchg
sub
inc
inc
adcl
xor
mov
loopne
push
dec
cs
cmpb
movsb
stos
out
fs
call
xchg
and
mov
add
pop
testb
push
jns
outsb
out
addb
jb
dec
jns
iret
mov
jne
mov
mov
jns
icebp
int3
cmp
jle,pt
out
cli
fcoms
push
sbb
std
mov
xchg
divl
mov
pop
sbb
mov
roll
ds
xor
aas
outsl
inc
movsl
loope
and
jno
daa
dec
xor
mov
lcall
add
push
push
cld
fiaddl
cmp
mov
test
sbb
fistl
sub
lods
mov
and
adc
lret
cmpsl
xchg
mov
pushf
cmc
int
pop
rcl
mov
jo
les
lcall
int3
mov
jne
add
je
push
inc
call
xor
lods
sarl
xor
outsb
jg
mov
xor
data16
pop
fdivrp
inc
cmp
jecxz
sbb
sub
inc
rcr
mov
ss
adc
outsl
jl
adc
popa
cmp
dec
mov
sbb
or
push
cmp
fdivr
and
in
add
scas
xchg
pop
or
adc
adc
adc
pushf
adc
sub
test
sub
cmp
mulb
mov
lods
stc
push
aaa
rorb
hlt
xchg
pushf
sub
pop
jo
fcoml
mov
mov
adc
inc
mov
outsl
jns
jge
add
sbbl
mov
push
enter
mov
sbb
cmp
adc
mov
inc
adc
jo
lea
jge
cwtl
cltd
imul
push
inc
pop
push
aad
vmwrite
jl
cli
flds
pop
pop
out
sub
jge
xchg
sub
sbb
add
aad
sbb
pop
inc
xor
lods
mov
sbb
pop
and
mov
and
gs
cmp
lock
xchg
imul
jns
lcall
xchg
mov
pop
stc
aas
lock
stc
ds
sub
je
test
cmpsl
push
fwait
jp
popf
neg
inc
xor
mov
inc
cmpsl
dec
push
push
iret
out
push
push
cmp
aad
scas
imul
xchg
rorl
inc
jecxz
test
lds
add
and
aam
lahf
inc
add
push
sahf
testb
notb
adc
mov
orl
in
push
push
sub
mov
in
mov
ja
xchg
cmp
push
dec
pop
add
lock
cmp
call
icebp
test
fwait
movsl
es
ss
jge
leave
or
pop
fmull
pop
pop
jp
movsl
lahf
test
fdiv
stc
xor
cmpl
mov
or
fidivrs
and
mov
notb
and
jnp
js
sahf
jae
xor
lods
aam
dec
dec
enter
jl
or
cmp
cli
pop
push
push
add
mov
aaa
jle
out
lahf
dec
mov
pop
mulb
mov
les
sub
aam
shlb
imul
sbb
cmp
and
mov
pop
sbb
loopne
mov
sub
cli
repnz
xor
loop
adcl
jle
inc
inc
xor
movsb
add
cmp
push
add
push
cwtl
aad
out
jg
jmp
repz
mov
jb
lods
andb
icebp
fidivl
je
push
sub
pop
adc
data16
aam
in
les
fs
mov
test
sti
adc
mov
lret
adc
imul
jae
push
xchg
les
sub
pop
lret
lods
ds
jle
nop
sti
loopne
movswl
orb
cmp
mov
fcomps
mov
mov
mov
bound
jp
inc
aas
movsb
inc
stos
push
cli
sti
pop
inc
stc
mov
punpcklwd
int
push
shrb
add
mov
fcompp
arpl
mov
xchg
push
fs
orb
jb
xor
mov
mov
cmc
push
xor
cmp
rorb
push
arpl
into
add
daa
inc
xchg
stc
fsubs
pop
les
push
mov
pop
mov
fcmovbe
in
mov
fcmovnb
cmpsl
sti
and
jbe
test
scas
or
fldl
je
jb
jnp
fadds
cltd
jmp
jb
mov
arpl
adc
imul
in
call
repz
cltd
jne
xor
std
cmpsl
cwtd
mov
stos
mov
xchg
sbb
add
loop
mov
mov
ror
push
cmp
faddl
xor
sbb
cmpsb
mov
adc
pop
cli
mov
pop
fdivl
stc
or
fildl
push
mov
ja
movsl
fs
pop
mov
std
pop
stc
cmp
xor
movsb
shl
roll
lcall
push
cwtl
mov
sbb
xchg
inc
fcoml
inc
jge
mov
test
mov
jo
jnp
sub
fisubl
mov
outsb
xchg
jecxz
cmpsb
test
pusha
lods
jle
or
mov
xchg
or
mov
data16
adcl
mov
and
xor
xlat
lods
negl
pop
fldl
stos
out
repnz
loope
gs
xlat
jbe
fisubrs
das
and
xor
jg
add
push
pop
xor
outsb
cmpsb
std
pop
bound
les
movsb
push
mov
movl
add
test
cwtl
mov
xadd
loop
scas
sub
enter
orb
inc
push
aas
mov
add
mov
sbb
xchg
sub
scas
out
out
dec
or
mul
inc
enter
add
xchg
lds
insl
mov
mov
push
and
push
add
add
push
imul
daa
push
push
mov
push
popa
and
jbe
sub
push
push
lods
add
sti
stc
adc
out
cltd
sub
out
or
movl
mov
imul
pop
mov
fbstp
bound
pop
nop
das
jle
jge
stos
jae
push
pop
lods
lock
addr16
xchg
lcall
push
icebp
into
popf
adc
out
lret
push
pop
xlat
mov
ret
clc
mov
or
jg
mov
jae
jge
icebp
stc
push
fdivp
pop
dec
pop
jp
test
in
inc
int
iret
fistpl
dec
aam
movsb
bound
inc
adc
aas
repz
lods
lock
xor
cmp
sub
fld
out
mov
dec
jae
lds
loope
mov
xor
ljmp
int3
sbb
incb
cltd
jne
push
jge
adc
fwait
jg
add
and
adc
sub
ss
or
into
hlt
cs
or
jp
idivl
push
dec
adc
ficomps
mov
les
adc
rcr
orb
xor
cwtl
into
push
adc
test
ds
hlt
mov
lahf
leave
loope
jnp
jb
inc
or
jecxz
dec
lock
push
xlat
dec
dec
sahf
or
cmp
aam
sub
xor
sbb
xchg
in
jb
add
fsub
or
adc
sbb
das
sbb
fildl
adc
sub
inc
es
aas
rcll
insl
push
popl
ud2
ficomps
and
popf
fsubrl
repnz
aad
mov
adc
cmp
lods
xor
add
out
push
mov
xor
aas
cmp
movsb
data16
xchg
and
cmp
pop
movsl
inc
push
stc
aas
pop
negb
push
sbb
je
mov
or
inc
daa
pop
daa
test
sub
xchg
jl
insl
fdivr
ret
stc
imul
sub
mulps
adc
mov
lea
inc
dec
mov
pop
sar
cmp
filds
and
sbb
ret
mov
gs
popa
icebp
fwait
xchg
fs
sbb
mov
nop
rorb
bound
pop
pop
inc
xor
fmulp
nop
mov
stc
dec
adc
test
pop
fnsave
cmp
mov
mov
insl
xchg
mov
rcr
test
sub
aad
sahf
lahf
sub
fimull
shr
push
cmp
repnz
fisubrs
add
sbb
jmp
add
daa
test
sahf
imul
js
loopne
stos
mov
mov
and
cs
jg
sbb
dec
sbb
es
cmp
out
mov
cs
xor
or
out
sahf
jl
mov
inc
and
pop
mov
fistps
push
push
mov
sub
jae
subl
lods
shll
sahf
push
andl
xor
cli
mov
rorl
daa
shl
nop
in
jp
cmp
cs
lock
jns
mov
xor
clc
gs
xchg
scas
dec
iret
push
pushf
aaa
dec
movsl
jmp
pop
ss
push
add
outsb
mov
test
sbb
inc
fwait
bound
mov
sbb
insb
ror
mov
hlt
xchg
push
mov
and
xor
stos
sbb
or
mov
repnz
daa
adc
out
out
loop
int3
push
dec
test
dec
or
jle
pushf
add
dec
cmp
fisttps
shll
movsl
fs
push
sub
cmp
jb
xor
adc
repz
jl
loopne
xlat
outsb
cmpsb
cmp
aad
or
cmpsl
daa
pushf
inc
push
loop
mov
dec
faddl
inc
aad
ja
sub
not
js
cs
jle
outsl
mov
push
pusha
mov
jle
or
iret
sbb
out
and
xchg
cmp
pop
rorl
mov
pop
inc
xor
push
mov
iret
jo
scas
mov
adc
dec
jnp
inc
inc
push
mov
lods
daa
popa
mov
cmp
loopne
inc
repz
lret
cmp
outsl
xor
scas
leave
ljmp
out
nop
in
setl
cmp
dec
push
loop
mov
je
aaa
jb
add
daa
adc
fs
sbb
stos
loope
inc
into
and
cmp
cmpsb
imul
dec
cmovge
sub
mov
clc
jmp
xchg
cmp
xor
xchg
inc
stos
sub
movsb
push
sbb
sti
pop
or
in
jle
jecxz
jne
divl
mov
inc
and
out
adc
dec
and
repz
pop
adc
stos
xchg
xchg
adc
inc
pushf
in
sbb
sbb
mov
add
cltd
xchg
cmpsb
stos
ljmp
mov
jae
mov
push
fisubrl
push
jge
push
lea
mov
out
mov
lock
dec
out
inc
mov
xor
push
cli
xchg
in
or
shrl
adc
sti
imul
rcpps
sub
outsb
mov
repz
sbb
push
mov
xchg
add
cwtl
cwtl
xchg
out
lds
cld
adc
mov
and
lahf
push
xor
mov
repnz
push
add
arpl
push
xchg
pop
ret
add
cli
icebp
gs
jns
repz
pop
mov
lret
jns
add
shll
enter
xlat
lea
scas
arpl
jo
push
sarl
inc
push
pop
push
add
xchg
push
cmpsl
lahf
mov
mov
lahf
ds
jne
fildl
fstpl
push
fnsave
pop
dec
aad
fistl
xchg
dec
push
nop
inc
je
arpl
stos
add
decb
lcall
pushf
mov
cmc
aas
cmp
pop
push
push
nop
push
adc
push
mov
push
push
dec
and
mov
xlat
arpl
lahf
je
ret
loopne
test
add
mov
xchg
cmc
jl
stos
outsl
insl
sbbl
fistps
std
push
pop
inc
push
fcmovu
fidivl
push
sarl
dec
and
adc
sub
adc
cmp
jns
xor
xchg
out
xchg
push
xchg
cmc
and
icebp
sbb
test
sbb
mov
cmp
out
rcr
sbb
shlb
push
das
mov
js
push
imul
repnz
and
fwait
adc
cld
push
add
fcmovbe
mov
or
mov
sbb
pop
add
or
sbb
sub
and
test
lcall
out
stc
cmc
fs
mov
repz
push
insl
insl
mov
mov
imull
inc
pop
pmaddwd
fdivrs
aaa
in
xchg
jno
fidivrs
adc
lret
pop
insl
js
stos
xor
int3
adc
rcll
ret
jmp
pop
or
out
loope
adc
sbb
inc
inc
inc
lea
sbb
push
push
push
popa
pop
lret
movsl
or
sbb
mov
movsb
idiv
xlat
bound
mov
das
cmp
xor
mov
jmp
or
popl
lret
xor
imul
mov
flds
fwait
cmp
clc
cmpsb
je
mov
sahf
or
nop
pop
and
mov
rcll
pop
inc
imul
jae
test
sbb
test
clc
xor
daa
cld
dec
xor
xor
cmpsl
adc
ficoms
push
mov
jnp
sahf
jl
lods
sbb
out
xchg
mov
lahf
xor
jg
xor
xor
icebp
pop
push
mov
or
int3
loop
inc
pusha
nop
mov
mov
pop
out
lret
stos
jp
mov
lock
cmpsb
mov
inc
mov
pushf
mov
sub
aam
cmpsb
cmp
xor
bnd
in
pop
jge
inc
push
pop
fdivrl
in
repnz
sub
jmp
inc
xchg
mov
pop
mov
into
stc
xchg
and
bound
dec
test
dec
or
out
lods
mov
jle
cmp
mov
insl
mov
fsubrs
xor
mov
mov
test
mov
insl
jno
push
pop
mov
mov
push
fidivrs
repnz
and
testb
push
jle
jno
pop
pop
shlb
add
ljmp
xlat
add
sub
movsl
enter
add
mov
mov
mov
mov
notb
ds
mov
lret
fwait
pop
push
mov
mov
push
add
xchg
add
into
jle
push
in
movb
insl
and
ss
cmp
aas
mov
cli
sbb
mov
xchg
fisubs
mov
pop
and
cmp
movsb
in
jge
movsl
xor
cs
xor
cmp
ret
or
xchg
clc
inc
adc
daa
lcall
loopne
movsl
jno
inc
sbb
jmp
jno
mov
int
cld
ds
bound
fmuls
lds
sub
xor
loop
lcall
into
in
jne
mov
fbld
adc
inc
popfw
enter
or
xor
xor
test
dec
pop
into
cld
push
fildll
sarb
movsb
mov
lahf
mov
adcb
mov
jae
stc
xchg
or
mul
lea
push
out
shl
movsb
sub
jb
lret
cli
mov
or
sbb
fiaddl
dec
pop
stc
popa
push
inc
stc
jno
or
std
pop
out
xchg
fcomp
dec
xor
pushf
daa
arpl
add
jg
mov
and
es
adc
outsb
and
fadds
jae
in
lods
cmpsl
ret
scas
fiadds
leave
pop
pop
jno
inc
cmpsl
cmp
jae
pcmpgtb
push
fwait
stos
repnz
in
sahf
into
cmp
test
mov
scas
or
pop
inc
cmp
inc
popa
test
andl
dec
mov
movhps
sbb
int3
jge
insb
mov
test
mov
les
arpl
fidivs
sti
inc
sub
repz
je
add
nop
call
dec
addb
mov
push
add
lcall
sub
ja
maxps
sbb
pop
iret
or
mov
loope
mov
fmull
int3
stc
daa
xchg
pop
jle
sar
xor
sbb
xor
mov
mov
aas
push
push
in
ljmp
insl
popf
cld
xor
inc
lods
push
pop
mov
inc
xchg
xor
cmp
sarb
call
adc
inc
sbb
add
inc
pop
in
xchg
sub
push
bsf
mov
xlat
fcomps
cmp
sub
mov
or
shrb
fmuls
inc
test
es
movsb
cmp
loopne
stc
mov
lahf
jl
sti
cwtl
sbb
lret
xor
addr16
icebp
insb
test
pop
cli
cmp
adc
cmc
adc
xor
jecxz
and
enter
jne
or
aad
enter
cwtl
icebp
xor
push
mov
clc
clc
xchg
sub
cmpsl
int
jns
jae
into
out
push
sbb
test
pop
test
or
in
les
fidivrs
push
sarl
adc
mov
shrb
jnp
xchg
pushf
xor
and
sbb
dec
lods
push
mov
testl
addl
and
test
je
cmc
xor
pop
xchg
fdivrl
xlat
repnz
add
mov
cwtl
xor
outsb
das
repz
pop
pusha
push
jno
mov
xchg
or
lcall
pop
jnp
and
loop
adc
cs
gs
fbstp
fdivrl
arpl
sub
cwtl
mov
nop
test
mov
js
pushf
cmpsl
and
lret
stc
jmp
or
xchg
push
cwtl
inc
dec
xor
push
icebp
leave
inc
mov
scas
pop
bound
std
lret
fs
mov
lahf
pop
sarl
pop
fstps
nop
jecxz
adc
mov
mov
jg
les
je
outsb
xchg
pop
push
sub
into
mov
xlat
icebp
movsb
pop
jp
mov
outsl
and
mov
cmpsl
mov
les
xor
lret
jge
inc
cmpsb
push
sti
pop
mov
fcoml
out
adc
xor
push
inc
mov
loopne
push
inc
hlt
lea
mov
ljmp
dec
push
cmc
sarb
xor
sub
loopne
loop
sub
out
cmc
imul
in
les
ret
cli
sub
inc
into
inc
mov
test
idivl
pop
cmp
cmp
sub
push
test
test
add
clc
dec
jmp
stos
pushf
push
jp
lods
lret
mov
mov
jmp
mov
inc
push
fdecstp
xor
pop
int3
shr
inc
call
pop
cmc
std
pop
xchg
sbb
xor
loope
sahf
jp
lods
add
jnp
stos
das
fs
pusha
jae
ja
repnz
outsb
insb
out
pop
test
rcl
in
sub
mov
lea
lcall
add
or
mov
mov
aam
inc
faddl
xor
xchg
xchg
call
aad
or
inc
fbld
jo
loope
int
push
mov
addl
dec
push
sti
ss
bound
cwtl
pushf
mov
inc
pop
sarb
fs
pushf
mov
sti
int3
popa
xchg
jle
sub
insl
xchg
nop
mov
gs
dec
mov
frstor
jno
adc
lcall
loope
xchg
shrb
scas
in
stc
fldl
pop
dec
jns
in
sub
dec
mov
cltd
scas
pop
fcomip
lcall
push
fidivrs
popf
int
pop
sub
insb
hlt
xor
mov
xor
sbb
insb
in
mov
aaa
xor
adcb
popl
jmp
scas
xor
mov
xor
sbb
and
pop
pop
insl
add
mov
jns
icebp
movsl
jmp
imul
or
xchg
mov
mov
les
aam
icebp
sbb
hlt
std
add
xor
nop
scas
mov
push
mov
lds
cwtl
in
fcmovb
stc
mov
push
mov
jo
rcrb
ret
xchg
xor
out
out
jbe
jge
mov
inc
in
popf
mov
repnz
jb
int
jbe
push
fsubs
or
pop
dec
mov
jno
sbb
stc
mov
mov
repz
push
outsl
cwtl
and
xor
in
das
inc
mov
cmp
adc
cltd
call
and
dec
or
inc
add
ja
mov
loop
mov
sub
or
add
daa
mov
xchg
push
jne
xor
das
push
pop
mov
and
push
movsl
ljmp
mov
and
adc
or
jge
jg
aad
addl
xor
or
push
cmp
sti
in
loope
scas
pop
jns
js
pop
lahf
jnp
mov
lahf
cmpsb
lds
cmpsb
pop
adc
add
adc
xchg
jb
push
mov
out
ss
clc
lret
outsb
xor
pop
sub
sub
and
adc
divl
lahf
daa
pop
dec
inc
and
adc
lock
mov
inc
push
and
lea
push
roll
pop
addr16
fwait
aaa
sbb
add
daa
jb
repz
lods
inc
inc
mov
inc
out
psadbw
adc
pop
push
out
xchg
pusha
rcll
loope
js
add
or
mov
pop
mov
es
mov
cmc
test
mov
push
popa
and
dec
ret
test
cmp
add
aam
xor
cmp
lret
insl
lahf
sbb
pusha
push
xor
cmp
adc
cmc
test
push
insb
cmp
ja
push
adc
pop
pop
jnp
mov
fidivrs
adc
lds
int3
mov
int
scas
addr16
sub
push
test
in
cmp
jge
rolb
into
or
mov
push
cwtl
xchg
lcall
ja
negl
and
aad
cmp
adc
pusha
and
test
mov
das
dec
jecxz
dec
int
shrl
pop
mov
dec
ljmp
dec
cmp
sbb
inc
dec
sub
sub
dec
adc
jno
gs
push
mov
test
loop
ds
sub
sbb
repz
mov
xchg
je
imul
aaa
inc
jae
ret
push
pop
sahf
fwait
or
ja
imul
dec
mov
add
jp
into
adc
lahf
shlb
jg
das
out
inc
nop
frstor
xchg
ss
xlat
sarb
jg
popa
pushw
aam
or
cltd
testl
or
xor
cli
cmovb
sbb
mov
and
pop
cmp
ret
arpl
mov
aaa
jg
repz
je
movsl
in
pop
ja
xor
dec
test
outsb
decl
mov
rorl
sarl
fs
jmp
into
setge
jge
rclb
cmp
out
cmpl
jmp
xor
scas
sub
into
ja
fsubr
aas
data16
adc
or
lret
and
sub
mov
fs
iret
mov
sbbl
aas
pop
xchg
xchg
push
mov
bound
cltd
push
inc
add
faddl
lahf
jmp
ds
test
mov
inc
mov
pop
aam
adc
test
arpl
jno
ss
or
call
jnp
scas
mov
int
xor
sti
clc
movsb
pop
xchg
fwait
lcall
jne
xchg
sub
jnp
pop
xor
xchg
mov
jb
cmp
add
mov
cmp
scas
hlt
int3
xchg
pop
dec
xor
pusha
push
mov
test
cwtl
sub
mov
dec
push
pop
inc
xchg
sti
fmull
push
out
pop
test
in
lahf
add
xchg
bswap
stos
stos
and
pop
push
dec
add
add
cmp
imul
daa
sbb
lahf
aaa
int3
movsl
lds
xlat
mov
fsubl
cmp
dec
out
fwait
loop
call
pop
adc
lcall
cmp
scas
push
je
leave
flds
or
movsb
or
cmp
pop
lods
mov
out
shll
pop
sbb
pop
cld
cld
in
fiadds
dec
and
stc
jge
jno
sub
sbb
push
pop
addr16
fidivl
cld
cmpsb
xchg
inc
sub
and
aas
dec
repz
push
jg
lret
into
jb
jno
jle
xor
leave
add
add
inc
jno
xchg
push
fldcw
xor
and
sbb
rcll
lods
rcrl
jp
adc
add
or
sahf
andb
and
mov
jbe
pop
in
lds
lods
hlt
sbb
add
sbb
sub
sbb
jnp
jmp
dec
dec
xor
xor
and
rcl
shl
cwtl
inc
les
fbstp
in
bound
sbb
fs
mov
or
dec
rcll
jge
sar
and
xchg
cmpsb
add
pop
fld
push
in
sub
cmpsb
xchg
pushl
inc
jg
pop
jns
in
cmp
insl
cmc
loope
jg
xor
xchg
mov
jo
shr
push
mov
lods
add
jb
mov
push
cmpsb
sbb
jno
push
testl
mov
jl
loope
adc
mov
cmp
and
in
faddp
movsb
ror
adc
shll
mov
adc
cmp
jnp
add
sbb
sbb
mov
sahf
cmpsb
xor
ja
or
dec
push
pop
repnz
xlat
stc
adc
inc
fistl
mov
xor
sbb
xor
xor
mov
add
rsqrtps
out
or
xor
sahf
sbb
push
inc
mov
sbb
or
push
sbb
addb
or
mov
or
mov
pop
xor
cli
lcall
lret
ja
push
and
lcall
in
push
mov
cwtl
popf
fs
cmp
jns
ljmp
mov
mov
je
pop
xchg
gs
std
adc
mov
popf
out
jge
xchg
mov
adcl
ret
sbb
mov
xchg
jp
inc
js
xor
leave
or
movsb
xchg
mov
pop
in
xchg
mov
sbb
xor
addb
test
and
mov
add
insl
lds
sbb
xchg
test
ficomps
ficoms
jae
dec
ljmp
inc
push
pop
mov
fwait
mov
mov
aaa
dec
test
fdivr
xor
inc
repz
adc
adc
mov
lahf
xchg
movsb
lock
dec
add
xor
data16
jmp
mov
pop
mov
mov
xchg
and
bound
lods
cmc
into
and
ja
jle
push
xchg
and
insl
sub
add
adc
cmp
cs
xchg
fisubl
cmp
sbb
add
mov
lock
xor
push
or
neg
fs
pushf
jle
cmp
mov
into
push
stc
mov
out
jg
loop
lret
mov
into
pop
xchg
shl
mov
cmc
and
pop
xchg
adc
repnz
mov
das
xor
dec
add
xchg
sub
sub
cwtl
pop
shl
aad
sub
ficomps
xlat
rcrl
out
fdivs
aaa
jno
or
sbb
dec
xor
btr
mov
xlat
stos
fisttpll
push
adc
cmpsb
cs
sbb
fdiv
dec
sbb
sti
xor
lods
push
outsl
adc
adc
jb
and
rorb
xor
nop
ss
inc
daa
loope
dec
ljmp
xor
pop
sbb
pop
sbb
jae
jg
leave
xor
sbb
add
popa
cmp
inc
jl
fucomip
stos
divl
mov
das
cmp
lret
fcomps
add
loope
movsb
negb
fwait
gs
xlat
shll
jge
or
adc
inc
lock
pop
pop
or
jl
push
shll
mov
out
xchg
pop
int3
mov
ret
xchg
jp
dec
inc
das
jmp
fisubrl
int3
add
fwait
mov
aaa
and
xchg
outsb
dec
rcrl
sbb
shrl
dec
aas
das
lds
aad
dec
jg
inc
movsl
cmp
in
out
clc
push
ja
xchg
mov
jnp,pn
jns,pn
call
or
cs
mov
inc
adc
push
adc
stos
cwtl
jp
push
add
sbb
xchg
inc
jmp
jbe
test
adc
push
jl
mov
es
sahf
sbb
push
sub
sbbl
push
push
fcomps
jne,pt
push
pop
push
adc
add
imul
jge
mov
jo
imull
mov
push
loop
mov
mov
dec
push
pop
pop
push
cmc
test
out
mov
mov
xchg
add
push
or
dec
in
fimuls
push
bound
adc
pop
dec
es
lock
add
inc
inc
test
mov
dec
in
inc
aas
ret
cmp
sti
cmp
mov
ljmp
icebp
orl
test
roll
add
dec
jbe
popf
dec
dec
jecxz
or
or
gs
clc
pop
and
adc
mov
int3
into
loope
imul
mov
cli
outsl
push
sbb
aad
test
add
cld
int3
mov
int3
mov
mov
int3
push
and
mov
cmp
dec
lahf
cmp
xchg
jmp
into
aaa
adc
jl
cmpsl
inc
xadd
jnp
out
sub
mov
jle
mov
das
jbe
mov
add
push
lods
xchg
pushf
pop
sahf
insl
sub
dec
fucompp
xchg
outsl
xchg
pop
lret
adc
xchg
adc
in
sbb
cmc
inc
mov
jno
pop
cwtl
shrb
mov
jne
add
sub
aaa
push
stos
outsb
adcl
mov
lods
or
push
inc
sahf
ss
in
fiaddl
outsl
cltd
add
mov
jo
push
push
fldt
loope
movsl
ss
or
push
xchg
xchg
add
mov
pop
inc
test
jae
in
jne
xor
out
dec
f2xm1
xorb
repz
mov
jmp
cmc
arpl
mov
out
shrd
inc
cmpsl
cmp
mov
dec
mov
xchg
loopne
inc
lock
jne
in
mov
fcmove
inc
push
iret
xchg
push
jno
cli
jg
loopne
mov
cmc
mov
cmp
dec
mov
lock
mov
je
mov
lret
cmp
hlt
and
push
push
jecxz
and
pushw
pop
jo
dec
sarl
inc
jo
inc
scas
imul
inc
pop
sbb
cmp
sbb
dec
inc
and
sbb
jo
js
pusha
adc
int3
stc
ret
out
jbe
gs
fmull
push
notb
sbb
lods
dec
jecxz
add
stos
into
movsb
jne
test
orl
inc
lock
test
lds
mov
pushf
xorb
lds
and
inc
sti
sbb
repz
in
xchg
test
lods
repz
pop
push
push
xchg
js
pusha
cmpsl
aaa
mov
js
mov
mov
push
pop
outsl
push
pop
ret
sub
popa
cmovge
movsb
xchg
mull
sahf
lock
mov
out
shlb
mov
movsl
pop
call
rorl
sbb
or
hlt
xchg
ja
pop
fistl
fmull
cld
ljmp
imul
or
xor
in
stc
pop
fsubp
scas
outsl
aaa
push
aad
xor
jle
mov
sub
cs
xchg
ds
jl
xchg
int
ucomiss
out
and
imul
subl
shrb
ret
jns
lods
ss
popa
xorl
shr
cmp
imull
cwtl
icebp
gs
or
scas
jnp
cld
fwait
dec
sub
cwtl
gs
fwait
fwait
clc
or
dec
cli
inc
add
mov
pop
stos
cmpsl
mov
push
fcomip
mov
or
pop
sub
jno
push
imul
popw
ja
xor
mov
pusha
iret
mov
cli
or
adc
and
and
push
jbe
mov
outsl
fidivrl
dec
imulb
jbe
cltd
xor
mov
add
mov
mov
test
ret
dec
shlb
jmp
and
pop
arpl
sbb
mov
jge
sbb
scas
push
pop
mov
aaa
lds
aaa
int
cli
mov
sahf
xchg
sbb
add
mov
shlb
inc
enter
mov
repnz
lds
fwait
insl
and
mov
cld
loop
xor
ljmp
sti
pop
lahf
stos
sbbl
mov
lds
jl
jmp
lds
or
jmp
cmpsl
and
inc
jae
cmp
sbb
lods
call
or
cmp
roll
inc
cmc
sarl
push
ja
add
mov
mov
push
mov
loopne
mov
push
shr
push
arpl
test
pop
mov
in
shl
fs
fistl
push
sub
cmp
psrld
sbb
jecxz
test
or
push
popa
mov
fwait
outsb
inc
push
push
pop
rcr
fstpt
mov
cmc
add
negb
fisubrs
add
sbb
into
lcall
mov
lret
pop
inc
jmp
es
fildll
notl
imul
in
shlb
dec
fstpt
push
add
les
jecxz
add
lcall
gs
push
lods
adc
jae
ss
inc
lret
mov
enter
in
sbb
js
sti
xchg
dec
pop
iret
addr16
jg
mov
mov
xlat
push
push
sti
lods
inc
adc
pop
inc
cmp
dec
or
lds
mov
je
xor
lock
aad
not
stc
push
sahf
cmp
pop
in
sbbb
scas
and
aam
or
xlat
xor
inc
mov
lea
inc
adc
rolb
lock
xor
sbb
pop
fscale
into
shlb
add
stos
cld
add
movsl
mov
xor
dec
fistpll
dec
pop
fildl
sbb
insl
pop
sub
shrb
push
scas
dec
ss
test
fistps
xchg
test
mov
dec
mov
xchg
sbb
clc
jnp
push
pop
push
movsl
daa
cmp
push
sub
icebp
or
or
in
mov
pop
in
insl
and
stos
idiv
lcall
dec
xor
jl
jmp
pop
push
imul
inc
and
lcall
push
insb
sahf
inc
xchg
dec
icebp
jecxz
mov
cli
sub
adc
test
aam
rcll
fwait
insb
aas
mov
jg
dec
xor
bound
cmpsl
cmp
or
mov
or
cmp
imul
sbb
xor
es
aad
mov
sub
pop
insb
add
rcll
lcall
sarb
xor
das
pop
jo
sbb
out
iret
ret
sbb
test
mov
pop
aad
lock
insl
mov
ljmp
mov
cmp
and
mov
arpl
push
jo
es
sub
ret
mov
or
dec
addr16
enter
js
mov
jb
das
mov
and
out
mov
sbb
mov
and
les
mov
out
popf
ret
cmp
push
arpl
loop
and
pop
in
sbb
push
adc
ljmp
into
mov
addl
jno
in
push
ficoms
out
jnp
mov
fcmovb
mov
and
inc
pop
mov
jo
adc
lahf
rorb
jecxz
xchg
inc
enter
sbb
xor
in
movb
inc
fdivrl
or
push
sub
cmc
in
movb
in
pop
imul
sbb
jno
popa
sbb
pop
ja
shlb
int3
and
jns
xchg
xchg
mov
sar
cmp
cwtl
dec
add
jb
pop
push
inc
pop
test
ret
cmp
ljmp
testl
in
outsb
xorl
mov
xchg
scas
dec
shrb
jns
sbb
sti
in
sbb
lods
inc
ja,pt
xchg
mov
or
lea
xlat
push
pop
dec
test
iret
pop
xchg
mov
test
lret
mov
inc
repnz
into
in
hlt
lret
fisttpl
mov
test
das
outsl
insl
rolb
jmp
cltd
mov
mov
sbb
dec
cli
pop
shll
push
out
jno
mov
sbbb
pop
lahf
lods
xchg
iret
jnp
repnz
neg
lea
pop
jmp
imul
lods
pop
mov
cwtl
into
sbbl
stc
cltd
adc
mov
dec
mov
cs
mov
lock
ret
orl
out
xchg
mov
hlt
bound
add
js
mov
jb
gs
enter
and
call
or
and
mov
arpl
fimull
push
xor
mov
or
fwait
jle
jne
and
js
test
adc
sbb
aad
stos
je
sub
sbb
es
div
sarl
push
and
or
scas
pop
testb
jb
imul
lds
cmp
mov
pop
fdivrs
cs
cmp
daa
jmp
mov
mov
pop
jp
xor
aas
arpl
dec
and
out
roll
pusha
ret
dec
adc
push
or
push
jne
andl
jecxz
cwtl
int3
lods
mov
inc
mov
fsubrl
fs
pusha
add
mov
loopne
dec
xchg
sbb
add
dec
sbb
mov
fildll
jne
xorl
mov
pop
ret
fmul
scas
loopne
xor
dec
lahf
mov
cltd
pop
cli
jbe
sarb
sbb
insl
xchg
in
pop
lret
mov
jns
pusha
or
or
arpl
dec
push
xchg
std
in
mov
inc
xor
add
mov
jo
aad
adc
cmp
push
jl
lock
je
js
mov
jns
nop
xchg
adc
repz
repnz
mov
fstp
cwtl
mov
in
shrb
push
pop
mov
leave
xor
or
lea
sub
shll
mov
xor
mov
or
mov
mov
sbb
mov
sarl
andl
inc
aaa
loopne
repnz
pusha
push
test
xorl
adc
pushf
in
xor
adc
sti
mov
aam
cwtl
aas
push
sub
shlb
cmpb
sbbb
pop
mov
cmpsl
aas
mov
jae
stc
outsl
fsubrs
loope
imul
xchg
sub
fwait
push
mov
adc
mov
lret
cmpsb
or
mov
mov
insb
pop
lcall
test
notl
addr16
pushf
out
shrb
pop
cmp
dec
loop
jmp
mov
bound
jnp
out
mov
bound
sub
scas
cmc
mov
pop
inc
lock
inc
mov
mov
adc
data16
mov
pop
inc
insb
ficomps
movsb
or
clc
xor
ljmp
roll
mov
ja
adc
dec
gs
xlat
inc
data16
mov
pusha
add
mov
xchg
jecxz
cmp
seta
dec
inc
dec
dec
sarl
fimull
int3
or
xchg
fstpt
push
xor
fwait
push
clc
jb
mov
sub
mov
mov
addl
nop
pop
sub
add
and
mov
jle
push
stc
rcr
bound
xor
loopne
jecxz
lret
and
mov
mov
jne
pushf
xor
cmc
scas
jecxz
data16
ret
pop
iret
adc
stc
add
icebp
adc
push
xchg
iret
les
xor
add
and
cmc
or
dec
ret
das
push
dec
popf
dec
mov
data16
mov
testb
mov
mov
dec
push
mov
imul
push
and
jb
pop
inc
cmp
nop
rclb
pop
jbe
inc
or
pop
sub
in
fcompl
push
sbb
out
adc
ljmp
icebp
mov
push
lds
jl
mov
out
push
nop
sbb
insl
mov
mov
sbb
loope
mov
iret
inc
shrb
pop
sbb
xor
andb
mov
xchg
addr16
divl
cmp
aam
enter
and
fisttps
movsb
push
mov
into
push
xchg
jge
sub
leave
popa
mov
sti
jl
pop
in
mov
lret
and
movsl
and
cmp
cs
hlt
mov
or
jge
cli
adc
rcll
jl
pop
push
xchg
ret
lret
inc
mov
mov
mov
les
aad
aaa
push
xchg
outsb
dec
sub
mov
mov
xor
inc
push
test
cmp
and
jae
cmc
fsubl
jnp
jecxz
xor
inc
mov
les
stos
mov
mov
mov
dec
mov
dec
cld
leave
rcll
lret
or
mov
daa
dec
xchg
jecxz
mov
sti
xchg
push
pop
mov
and
xchg
cmp
jno
pop
divb
inc
jmp
daa
aaa
push
inc
addr16
cmp
stos
mov
mov
pop
sbb
jo
aad
leave
sbb
sub
ss
or
dec
sub
pop
pop
pop
test
jns
call
push
and
xor
loop
cmp
or
inc
mov
aam
repnz
xor
rolb
je
lret
ficomps
lods
or
rcrl
mov
xchg
xchg
xchg
stos
sub
in
stos
mov
lahf
mov
cmc
adc
push
test
movntq
dec
inc
push
adc
sbb
add
mov
cmp
out
xchg
push
cmp
mov
mov
leave
mov
mov
and
lock
movb
adc
sbb
xchg
fistl
or
enter
lds
push
dec
mov
pop
inc
es
lds
push
cmpsb
sbb
popf
jl
out
lret
pop
stos
mov
lds
test
jb
cld
aam
add
pop
xchg
fmul
mov
mov
add
add
out
jno
stos
xor
lahf
sbb
pop
ss
pop
push
fs
or
sbb
jae
push
cmpsl
xchg
jnp
push
jb
stc
xchg
xchg
xchg
shl
iret
xlat
xchg
and
xor
repnz
pop
xchg
or
js
sti
push
shll
loopne
inc
xor
adc
hlt
dec
scas
mov
add
mov
fistpll
mov
int
xchg
add
ljmp
cli
daa
inc
mov
repz
cmp
xlat
xor
mov
mov
mov
pop
mov
inc
repz
aaa
dec
outsl
lahf
in
cmpsb
rcrl
inc
int3
stos
sub
or
into
repz
push
or
xor
inc
cmc
pop
lock
adc
dec
xchg
mov
add
lds
mov
jge
in
pop
dec
cli
int3
aaa
cwtl
jo
pop
push
ret
jo
and
jle
lret
mov
fwait
test
out
vmwrite
wbinvd
cmp
ret
leave
std
push
or
push
icebp
cmpsl
xchg
xchg
dec
jo
mov
add
push
cmp
jne
std
cmp
cli
dec
js
cmp
cmp
test
hlt
ficompl
test
and
mov
jns
pop
mov
sbb
sbb
insl
arpl
and
cmc
mov
jge
sub
adc
into
sbb
addb
ret
fldenv
lods
jg
dec
add
xor
in
and
and
xchg
cmp
jb
or
andb
xor
lret
or
xchg
mov
jnp
jg
add
sbb
push
in
sahf
iret
jns
jmp
pop
jmp
andb
out
or
lret
in
mov
insl
js
loop
bound
arpl
mov
lock
dec
cli
jecxz
sbb
dec
fcmove
lret
shl
xchg
arpl
fimuls
sbb
stos
ss
lods
xchg
into
in
imul
out
cli
cmpl
movsb
mov
xchg
out
pop
fs
add
ja
cli
int
out
pusha
es
xchg
in
xchg
sub
and
push
ret
xchg
inc
push
iret
lods
aad
je
inc
add
pushf
cmp
lahf
add
es
sub
test
jp
je
xchg
mov
scas
xchg
cli
push
mov
push
and
cli
mov
inc
out
jnp
aaa
sbb
cmpsb
loop
ss
das
enter
or
fstpt
roll
pop
fidivrl
testl
push
pop
repnz
test
and
scas
add
mov
mov
add
mov
std
out
shl
mov
stc
nop
insb
add
dec
push
call
cmp
test
cmp
sahf
pusha
jge
mov
out
aaa
and
add
or
xchg
out
aam
subb
mov
enter
stos
orb
jmp
js
sbb
push
cmp
push
sbb
int
xchg
push
stos
js
stc
cwtl
cli
pop
adc
xchg
and
cmp
fidivs
pop
xor
cmp
movsl
mov
xchg
xchg
shll
andb
sarb
mov
inc
xlat
repz
icebp
mov
pop
pop
outsl
mov
loopne
shll
or
pop
imul
jl
adc
aas
lahf
cmpsl
out
push
cmp
sbbl
lock
mov
inc
push
add
aas
mov
jmp
movsl
jle
stc
das
push
cmpsb
xor
ss
ret
stc
jg
pop
dec
lds
fcom
jns
sar
xlat
add
cltd
push
lret
js
iret
test
sub
sahf
mov
fs
cmpl
push
mov
fsubrs
or
xchg
inc
jnp
fcompl
lods
test
fidivrl
inc
aad
xor
add
in
and
lods
lret
push
inc
cmpsb
or
loop
adc
inc
mov
es
inc
aaa
cmpsb
push
fwait
nop
cmp
sub
pop
xchg
xchg
lcall
jbe
movsb
xlat
pop
jg
pop
fcoml
in
dec
inc
mov
insl
jb
loop
sahf
fmul
mov
or
icebp
adc
mov
xorl
std
arpl
sbb
dec
fbld
pop
test
inc
xorl
stc
fidivl
dec
hlt
adc
fsts
and
jmp
icebp
or
insb
test
loopne
push
push
push
mov
adc
dec
inc
mov
pop
and
ljmp
es
sbb
cmp
dec
inc
jo
inc
xor
cmpsb
mov
mov
jo
je
in
cmp
gs
and
pop
mov
jecxz
daa
fimull
ret
dec
adc
aaa
icebp
sbb
cmp
out
jnp
outsb
outsl
pop
js
jne
dec
movsb
xor
enter
xlat
jo
mov
xor
jp
icebp
jno
or
sub
divl
and
dec
add
ds
fisubrl
mov
sbb
es
cs
pushf
bound
mov
divl
inc
cmpsl
xor
xchg
sarl
push
sbb
ret
dec
imul
pop
std
or
or
aam
call
adc
dec
cmp
mov
shll
inc
jmp
inc
stos
fdivs
incb
sarb
jl
xchg
cmovle
aam
or
out
mov
cs
inc
xchg
mov
pop
out
test
lods
enter
test
jmp
movsl
lahf
movsb
jp
cld
daa
mov
push
lahf
jge
adc
sbb
and
popw
into
cmp
jns
xlat
addb
xchg
push
orb
sbb
das
mov
xlat
rcr
int
mov
test
jmp
in
push
ja
cmp
popf
pop
ds
mov
and
inc
mov
movsb
mov
in
adc
xchg
sbb
sbb
mov
mov
out
mov
leave
out
loop
mov
mov
push
data16
push
add
rol
jge
cmp
sbbb
out
es
jge
hlt
fs
out
int
sub
stos
sarb
movsb
scas
xchg
int3
aam
push
addb
insb
lret
mov
inc
lds
repz
pop
inc
add
adc
mov
nop
jne
cmpsl
es
xchg
daa
cmp
in
jae
fiaddl
sub
mov
jo
xchg
cmc
xlat
cmp
jae
mov
pop
adc
fsubl
fisubrl
test
gs
add
repnz
lods
sub
outsl
push
scas
xchg
outsb
jle
mov
inc
stos
jno
and
lock
mov
lcall
and
loop
and
lret
cwtl
mov
aas
sbb
inc
or
jae
xchg
outsl
or
ret
or
test
inc
push
into
add
and
mov
push
jo
adc
inc
hlt
cmp
push
mov
fs
iret
mov
cmpsb
or
mov
pop
xor
test
mov
cltd
rol
cmp
push
xchg
bound
shr
pop
ds
add
leave
xchg
cmpsl
call
sub
push
mov
jp
xchg
or
cli
outsl
push
imull
addb
xchg
insb
pusha
sahf
aad
addl
loopne
icebp
or
mov
sbb
mov
add
je
xchg
std
or
pop
iret
call
xlat
push
gs
pop
fcmovu
subb
data16
push
ret
mov
fidivs
jbe
push
cwtl
xor
inc
loopne
shlb
cmpsl
inc
mov
mov
sub
mov
aad
mov
lret
movsl
cmc
ret
sbb
dec
xlat
push
mov
pop
fisubs
dec
out
iret
insb
dec
inc
xor
pop
dec
mov
iret
and
sbb
add
and
stos
pop
bound
inc
addb
cmp
jnp
nop
push
daa
push
leave
lahf
stc
jnp
or
jl
push
sbb
add
mov
rcl
aam
inc
aad
aas
in
mov
push
xchg
lods
mov
mov
iret
sarb
in
fmull
ss
push
fwait
ljmp
dec
mov
jecxz
xlat
jnp
outsb
cmp
push
in
stos
jp
mov
test
push
and
pop
lret
lock
fmull
mov
into
scas
aam
cmp
pop
imul
in
jl
outsl
xor
lock
pop
icebp
sub
das
cmp
mov
icebp
pop
lret
jge
es
jno
dec
inc
mov
mov
lds
call
cmc
pop
neg
and
call
pop
aad
mov
test
int3
dec
aam
orb
or
fnstcw
outsl
pop
push
pop
fimuls
lret
xchg
pop
jg
mov
nop
add
pop
imul
and
cld
push
add
or
imul
repz
lret
inc
add
cld
rcrl
leave
cmp
in
shlb
mov
imul
xchg
std
mov
lods
dec
pop
jnp
xchg
aaa
cmpsb
lcall
xchg
idivl
xlat
arpl
out
rcrl
mov
call
jg
mov
cltd
insl
adc
lods
outsb
dec
jmp
aad
inc
jnp
dec
rcrl
pop
scas
scas
xchg
ljmp
shrb
and
ljmp
dec
push
adc
mov
cld
cmp
sbbb
and
pusha
jno
push
test
rcrb
cmp
mov
ljmp
mov
pusha
lret
test
xchg
das
xchg
add
pop
xchg
test
and
xor
pop
jl
pop
popa
dec
or
push
xorl
cld
xchg
dec
inc
jnp
ljmp
movsb
movsb
ss
push
push
stos
iret
add
mov
lret
mov
adc
xchg
xlat
push
pop
cs
outsb
pop
sbb
rcrb
cmpsb
mov
andb
nop
push
jmp
ret
adc
roll
hlt
pop
bound
out
mov
xor
les
or
jp
lock
addl
jae
dec
loope
int
aam
test
div
push
ljmp
mov
inc
iret
xorl
push
jmp
inc
scas
fidivrl
push
loop
imul
mov
js
in
xor
adc
dec
cmp
and
insb
jmp
or
sub
jb
ja
pop
sbb
xchg
out
enter
dec
aaa
xchg
cmp
jns
cmpsl
subl
and
jg
ljmp
mov
push
repnz
mov
fs
test
jbe
push
cmc
icebp
iret
ret
cmp
and
jge
andb
cmp
dec
lds
les
xchg
add
xlat
daa
mov
scas
out
sbb
adc
rorl
addr16
sbb
adc
add
dec
sbb
repz
xor
mov
jb
pop
adc
stc
lcall
cmp
xchg
pcmpeqw
shrl
sub
mov
in
fdiv
fnstsw
lret
inc
lret
in
pop
sub
mov
cmpb
pop
rclb
pushf
out
and
lods
mov
lret
cmpsb
add
les
bswap
call
pop
fsubrs
pop
pop
jbe
or
adc
sub
lock
mov
das
divb
jle
dec
push
std
gs
cltd
pop
sub
xchg
mov
les
adc
das
in
mov
and
mov
push
and
pop
cmpsl
push
cmp
and
pop
pop
dec
push
lahf
rorb
jno
movsb
lods
mov
repz
cmpsb
cmp
push
addr16
ljmp
rclb
inc
scas
pop
or
ja
daa
ficoml
loopne
mov
out
ljmp
inc
mov
push
lcall
decl
dec
or
out
movl
adc
insb
ja
jbe
mov
xor
mov
jno
mov
push
dec
icebp
test
push
add
sbb
pop
hlt
and
sahf
out
push
cmp
push
pop
or
sbb
imul
adc
das
add
enter
stos
data16
xor
mov
push
and
jmp
xchg
gs
iret
stos
sub
pusha
pushf
cltd
cmp
push
mov
mov
ficompl
test
rcr
arpl
or
lcall
cli
cmp
mov
jle
sbb
lock
push
sub
fsin
and
jo
pop
orb
pop
xor
dec
jge
sbb
hlt
in
sbb
lahf
pushf
test
sahf
dec
ss
addr16
movsb
test
neg
shll
pop
out
jp
stos
adc
push
or
jbe
loope
dec
mov
mov
repnz
dec
out
inc
mov
push
neg
xchg
cwtl
daa
and
call
jg
mov
dec
int
fcoml
jnp
mov
pop
xor
jg
rorb
out
xchg
cmp
orb
test
sbb
cmpsb
inc
xor
frstor
pop
repz
jns
lea
in
mov
mov
ss
mov
ror
push
push
dec
outsb
jg
cmpsl
mov
mov
dec
test
stos
adc
and
movsl
enter
lds
push
cmp
and
gs
inc
jge
arpl
sbb
lret
or
or
add
scas
push
cmp
pop
xchg
push
sbb
adc
or
lahf
xor
dec
mov
aad
lcall
adc
push
lock
popf
fldt
sbbb
sub
cltd
jbe
xchg
dec
push
ja
lods
mov
out
add
cmc
mov
je
icebp
clc
jae
movsb
fnstsw
dec
outsb
xlat
mov
pop
inc
lea
cmc
push
inc
cmp
fisubrs
cmp
or
push
xor
xor
mov
movsb
sbb
dec
mov
xchg
mov
push
inc
std
pusha
or
sarb
xor
imul
test
jae
in
jl
sbb
jbe
loopne
add
push
cld
mov
cmp
inc
mov
xchg
roll
fs
inc
out
jecxz
lret
jl
mov
xor
mov
or
sub
test
jl
cltd
lahf
lcall
xchg
mov
and
sbb
int3
mov
repz
movl
dec
sub
mov
xchg
sbb
xorl
leave
pop
add
xchg
adc
xor
push
cmc
loop
fsubrs
sbb
or
adcb
xchg
aam
mov
data16
add
incl
cmp
stc
inc
mov
pop
test
jae
pop
es
pushf
stc
mov
rcrl
or
dec
pop
pshufw
movsb
xchg
dec
out
sub
mov
and
sub
jne
push
aaa
xchg
push
adc
das
inc
cltd
sub
jmp
mov
ja
sbb
inc
dec
fs
inc
rclb
repnz
insl
jo
call
lods
fldl
cmp
stos
mov
loope
mov
clc
into
arpl
mov
loope
jmp
pop
gs
cwtl
mov
test
int3
pop
push
stos
mov
cmpsb
dec
rclb
pop
xchg
adcl
jns
test
pusha
sub
test
inc
lcall
jbe
push
repz
jns
lods
aam
aam
pop
fnstcw
stos
jnp
in
in
sub
mov
adc
lret
cmp
sbb
ret
lods
xor
cmp
jl
pop
imul
in
popf
pop
xlat
adc
mov
mov
frstor
cmp
loope
add
or
mov
shlb
andl
jg
lods
add
push
bound
lahf
mov
inc
or
and
cmpsl
pop
adc
and
sub
inc
mov
dec
dec
rcrl
les
divb
sub
jle
cmc
or
fwait
cmp
pop
xchg
mull
xchg
push
mov
icebp
and
mov
mov
mov
and
cmp
mov
dec
mov
jnp
fmuls
jmp
dec
lahf
out
cmpl
sbb
adc
sub
cld
sub
push
fcomip
adc
jo
xor
in
or
std
sub
cmp
add
inc
dec
fdivr
inc
loopne
das
mov
and
addr16
jno
dec
jae
pop
adc
jl
jmp
mov
jne
add
loop
dec
fmuls
iret
fs
mov
outsl
rcr
push
lods
in
push
inc
daa
js
mov
mov
imul
clc
xor
sub
loope
jge
cmp
xchg
mov
ret
mov
lock
loop
push
dec
jae
gs
sbb
notb
lret
aaa
pop
mov
mov
add
jno
jp
ss
dec
nop
jge
pusha
faddp
push
cmpsl
popa
xchg
push
xor
jg
pop
xchg
lret
aaa
cmc
scas
aaa
sahf
lock
adc
movsl
mov
repnz
hlt
insl
push
cmp
fists
sbb
fcos
sahf
lcall
fs
add
inc
xchg
pop
jle
jo
aaa
daa
flds
dec
loopne
andb
in
pop
test
pop
sarl
add
jnp
xchg
sahf
rolb
add
je
cmp
jne
xor
xor
fucomi
hlt
sqrtps
insb
push
insl
sub
fnstsw
loop
lock
push
pop
js
and
frstor
mov
mov
push
fldenv
frstor
in
cmp
add
cmp
icebp
leave
div
int
dec
hlt
mov
sahf
push
scas
fbld
fmull
adc
test
clc
mov
or
daa
pushw
out
dec
mov
aam
rcl
xchg
shl
sub
push
mov
jg
xchg
sub
mov
pop
and
mov
sbb
mov
fildll
fs
mov
outsb
sub
mov
rol
fnsave
cwtl
sahf
inc
cmp
mov
sahf
sarl
out
mov
pop
addr16
jg
jb
fldenv
pusha
mov
mov
xor
pop
js
mov
mov
dec
call
negl
outsl
or
xor
sbb
sub
mov
jp
sarl
shrb
aad
iret
popl
ss
and
cwtl
incl
fistpll
jmp
aam
aad
test
dec
shl
xor
xorb
push
jo
lds
adc
cmp
lcall
rorl
jl,pn
pushl
adc
bnd
pop
daa
inc
in
add
subl
pop
push
loop
arpl
mov
xchg
push
pop
mov
pusha
inc
je
aas
mov
pop
repz
jnp
out
cmp
bound
xor
ljmp
mov
xchg
xor
dec
lret
jl
jo
or
jp
and
test
sbb
adc
sbb
sbb
sbb
loopne
and
ja
arpl
and
mov
test
sti
inc
outsb
dec
nop
add
mov
and
sub
pop
in
ror
xlat
xor
lock
clc
mov
repz
cmp
arpl
and
push
imul
xchg
jnp
and
or
in
xor
pop
test
icebp
lret
ds
mov
dec
pop
push
cmp
mov
lea
sbb
sub
insl
pop
stos
mov
out
out
adc
cmp
das
xchg
adc
bound
out
je
ljmp
mov
push
mov
add
mov
xor
lcall
pop
jae
push
loopne
cli
into
movsb
xchg
mov
les
sub
push
push
sub
adc
xchg
dec
adc
lret
push
xor
cs
int3
leave
xor
add
mov
pop
xchg
jb
nop
mov
mov
inc
scas
das
sub
push
push
and
scas
in
rorl
adc
mov
mov
pusha
xor
out
add
sub
pop
jbe
in
iret
or
out
mov
les
rcl
add
sbb
inc
or
mov
lock
pop
dec
mov
mov
dec
xchg
popf
pusha
inc
je
and
in
push
inc
mov
pop
test
lret
arpl
xor
mov
sub
mov
movsb
popf
sbb
movsl
les
stos
fadds
xchg
cmpsb
sarl
jne
xchg
in
and
outsl
cmp
aas
and
xorb
mov
mov
sahf
dec
adc
mov
add
mov
cld
int3
mov
dec
test
test
mov
cs
stc
or
jp
xor
add
xor
out
push
inc
bound
test
jp
mov
scas
jg
inc
das
push
in
mov
inc
sbb
jle
xchg
ret
rolb
stos
jl
sbb
add
jle
mov
adc
out
dec
mov
leave
test
aaa
sbb
jl
push
mov
loope
ret
mov
and
dec
addr16
inc
int3
cmc
sti
negb
push
lock
xchg
hlt
push
data16
sub
dec
dec
repz
mov
mov
xchg
adc
xlat
push
call
pop
adc
pop
cltd
stos
mov
push
es
mov
add
scas
repnz
adc
rorl
movsl
movsl
ds
add
mov
cld
and
fldenv
sub
inc
add
dec
aad
sbb
and
mov
popa
mov
lock
dec
dec
js
or
jecxz
cmp
inc
cs
stc
in
xorb
dec
push
jnp
adc
push
sub
jge
pop
out
inc
data16
pusha
push
mov
push
mov
push
push
out
xchg
popf
push
std
xor
idiv
mov
shll
cltd
mov
jno
addb
lods
sti
fistpll
adc
shll
adc
repz
sahf
mov
ficompl
stc
lahf
les
push
push
dec
mov
cmpsl
adc
clc
insl
jns
sahf
inc
rcrl
daa
test
ja
xchg
push
inc
xchg
sub
mov
mov
inc
in
stc
sbb
inc
push
xchg
sbb
lea
testb
mov
andl
adc
jg
outsl
add
cmpsb
adc
mov
mov
aas
push
ja
pop
jl
in
inc
clc
sub
jmp
sahf
ficoms
arpl
pop
orb
mov
sub
xor
hlt
cltd
or
in
push
pop
pop
out
push
and
std
inc
in
adc
xor
sbb
lods
mov
in
xchg
rorb
sbb
scas
push
sbb
dec
push
mov
and
push
adc
mov
push
cmp
sysret
mov
stos
or
dec
mov
js
std
mov
ja
or
cmc
inc
sub
pop
js
aaa
add
sbb
lcall
jbe
idivb
push
stos
sub
jb
notl
leave
sub
and
sub
cmp
or
int3
cli
rorl
mov
push
addl
mov
sbb
sbb
pushf
mov
jnp
cmpsl
inc
dec
iret
into
fwait
xorb
sbb
scas
mov
adc
cmpsl
or
lock
shll
jl
std
push
jmp
jmp
pop
mov
mov
stos
cs
ljmp
xchg
fnstsw
xchg
bound
fidivs
cmc
inc
notb
sub
outsb
nop
lods
out
inc
push
xor
pop
pop
xchg
dec
test
aas
push
push
cmpl
jg
movsb
lret
cmc
xchg
int
add
pop
sbbl
gs
loop
icebp
lods
enter
icebp
aam
mov
sarb
mov
sub
nop
cwtl
sbb
and
cli
mov
popa
aam
pop
loope
fs
daa
add
or
xchg
xchg
decb
cmp
jno
or
jecxz
sbb
fwait
leave
xchg
stos
adc
pop
fnstcw
or
jecxz
cmpsb
popf
pop
pop
push
mov
cwtl
jbe
inc
cmpsb
lods
adc
mov
dec
icebp
push
mov
add
mov
clts
fwait
jne
test
bound
and
insl
movsl
insb
lea
nop
xchg
mov
scas
sub
mov
je
mov
pop
lret
das
mov
hlt
ret
jg
or
test
and
and
jge
int3
push
push
pop
test
enter
fcoml
enter
push
sbb
rolb
sub
adc
inc
adc
mov
xor
aam
mov
mov
xor
inc
jns
cmp
sub
mov
sbb
inc
jle
inc
xchg
sbb
cwtl
xchg
inc
cmpsb
cmpsb
in
cmp
xchg
jns
jg
jo
xchg
xchg
push
push
sti
jnp
and
pushf
jno
test
pop
int3
pop
pusha
mov
ljmp
adc
cltd
jno
adc
lods
mov
in
ror
outsb
loope
not
mov
jno
and
test
nop
inc
sti
out
inc
adc
sbb
and
pop
add
pop
test
lret
xor
das
out
mov
inc
lods
rclb
test
sub
and
mov
xor
inc
adc
jno
mov
xor
xchg
mov
mov
scas
call
fcmovb
cmpsl
pop
lahf
ljmp
scas
into
lahf
imul
sbb
test
dec
vpmulhuw
fisttpl
inc
or
pop
mov
cmp
sahf
fidivl
push
xor
jge
mov
nop
lds
xchg
popf
out
jne
jbe
fsts
pop
test
inc
or
mov
mov
mov
xchg
loop
cwtl
jb
arpl
sub
inc
scas
js
mov
scas
xchg
and
loope
adc
dec
scas
mov
iret
lock
sub
xor
jns
add
mov
push
sbb
imul
in
jb
in
inc
inc
icebp
cmpsl
pop
push
test
cmpsb
add
lds
test
push
adc
mov
dec
mov
gs
dec
and
test
pop
out
outsl
and
lods
jns
or
shlb
xor
add
in
lock
inc
sub
clc
int
mov
loope
fs
sub
aam
pop
xor
movsl
iret
jg
xchg
pop
lret
jbe
cwtl
adc
adc
pop
pusha
test
jnp
pop
push
jns
adc
sbb
mov
or
or
add
rcrl
ret
inc
pop
mov
loopne
cmp
fwait
lahf
and
mov
out
insb
and
movsl
pop
data16
cld
in
jno
or
shl
xchg
ss
add
insl
jbe
push
dec
addr16
push
lock
loopne
jb
sub
bound
mov
mov
nop
or
lcall
dec
adc
mov
int3
jecxz
lcall
pusha
and
jo
or
dec
mov
cmp
shrb
aad
dec
pop
xchg
iret
aam
fbld
cmc
sti
scas
jg
adc
test
push
mov
outsb
lret
mov
push
pop
mov
gs
and
inc
jge
or
data16
mov
loopne
out
mov
add
lahf
mov
sti
adc
adc
mov
sub
mov
add
ja
popa
xorl
xor
arpl
mov
shl
pop
pop
test
movsb
insb
pop
sarb
push
addl
adc
into
adc
sbb
jae
xchg
out
loop
scas
push
mov
jp
jbe
insb
xchg
sahf
cmpsl
and
jmp
pop
push
jecxz
mov
cltd
push
ret
jg
scas
stos
ss
dec
add
scas
jl
addr16
sbb
inc
mov
cmp
pop
pusha
cmp
xchg
inc
lock
xchg
shll
insw
push
in
jbe
xor
or
aad
mov
rclb
inc
stos
rcl
inc
inc
add
outsb
or
and
sarb
dec
ss
jl
and
cmp
sub
gs
mov
ret
sub
jp
ss
mov
cmpsl
inc
jne
neg
shl
out
ss
cmp
int
es
inc
jg
out
sub
cmp
cwtl
fcomp
aam
inc
insb
dec
addr16
stos
dec
sub
jp
jp
stos
cli
mov
jmp
jnp
hlt
je
or
cmpsl
icebp
mov
xchg
repnz
mov
iret
cmp
jmp
mov
mov
sbb
mov
inc
pop
popa
mov
sub
mov
movsl
pop
jg
jnp
dec
pop
cld
adc
adc
push
leave
xchg
cmp
scas
jle
jecxz
imull
pop
popf
pusha
add
popa
dec
xchg
xor
repz
inc
jmp
fldl2t
loope
js
cmp
cmp
sub
and
fs
push
int
cmp
push
loopne
sub
pushl
out
push
dec
inc
jecxz
dec
sub
cld
shlb
insl
bound
dec
les
push
insl
fsts
lret
push
sti
pusha
xchg
sbb
sub
dec
pop
and
cmc
mov
into
stc
js
neg
mov
scas
jmp
mov
jge
or
das
addr16
bts
adc
shlb
ret
jb
lahf
mov
jp
push
sub
pop
add
fdivrs
xchg
out
movsl
adc
stos
push
pop
sbb
sub
or
jb
jb
out
int
or
xor
cmp
les
xchg
in
inc
xchg
pop
loop
ret
push
int
insb
pusha
ja
test
mov
sbb
mov
movsl
fldt
js
dec
jmp
shrl
mov
insb
imulb
adc
jmp
dec
or
jne
or
sbb
adc
mov
div
inc
fwait
jne
imul
mov
pop
scas
xorb
push
mov
sbb
push
xor
std
inc
adc
push
out
jae
test
daa
mov
xor
int3
rorb
outsb
push
jo
cwtl
pop
fisttps
hlt
xor
sbb
ja
mov
cmp
adcl
rclb
pop
sub
fidivrs
sahf
cltd
sbb
push
popf
push
int3
xor
loop
push
sbb
push
jno
dec
and
add
pop
shl
cmp
xchg
int3
mov
inc
repnz
and
cmp
push
and
push
lds
pushf
shll
pushf
xchg
mov
jmp
jp
jle
and
notl
andb
xchg
adc
mov
cs
cmp
stos
pop
mov
xchg
push
mov
out
cmpsb
int
notl
clc
daa
cmp
push
lods
xchg
andb
inc
mov
adc
enter
bswap
mov
push
enter
cmp
or
shrl
mov
mov
insb
aaa
mov
jne
fisttpll
xchg
push
div
xor
sub
mov
jo
xor
cld
adc
mov
push
inc
testb
dec
sbb
pusha
inc
loope
mov
lods
ror
imul
jo
sbb
sti
fcoms
int
into
cmp
rcr
sarl
lods
sbb
jno
mov
or
pop
add
pop
test
ljmp
lods
ja
stos
xchg
cmp
jg
call
fistps
pushf
movsl
inc
jg
flds
testl
mov
stos
cmp
or
cli
arpl
insb
sub
add
pop
and
outsl
insb
mov
adc
adc
xchg
or
lahf
jl
dec
or
mov
lods
lock
and
sbb
mov
inc
out
fists
shlb
fldt
jecxz
ret
or
dec
or
scas
push
aas
scas
adc
jo
loopne
xor
movsb
adc
push
add
mov
es
lcall
inc
ljmp
int3
mov
out
pop
adc
into
adc
mov
inc
jo
ficompl
outsl
or
cmp
or
aaa
sbb
test
mov
jnp
pop
inc
pop
sub
pop
xchg
add
xchg
mov
call
faddl
insl
movsb
or
mov
rclb
mov
pop
cmp
das
xorb
add
cli
pop
je
pop
or
push
lahf
leave
push
mov
mov
fneni(8087
iret
mov
and
pop
pusha
jo
stc
outsb
adc
repz
and
out
clc
cmp
jg
jb
mov
add
pop
mov
sub
or
movsl
leave
mov
mov
push
cs
mov
cmp
aaa
sub
pop
aad
push
fdivrs
pop
out
push
add
mov
cltd
orl
fnstenv
add
std
pop
fistps
fs
xchg
push
movsl
or
push
push
xor
cltd
mov
xor
xor
mov
add
inc
ret
cld
bound
xchg
mov
mov
mov
mov
add
sbb
add
inc
lcall
fidivl
pop
int
subl
adc
push
dec
or
outsb
repnz
dec
aam
and
jb
lret
push
mov
popa
and
sub
mov
cmp
in
pop
push
in
xchg
dec
test
loope
cmp
insl
dec
lods
or
insb
shl
js
mov
dec
popf
std
je
and
jno
outsb
rcl
cld
push
sub
scas
cmpsb
stos
mov
movsb
push
add
pop
add
jns
int3
mov
sub
mov
xor
jne
outsb
aaa
mov
jb
hlt
sbb
rorb
stos
test
dec
pop
shl
mov
icebp
add
ss
mov
int3
dec
pop
push
push
dec
mov
test
mov
lret
aam
mov
mov
adc
insl
test
jae
xchg
pop
lods
mov
cmpsb
mov
mov
push
cmp
pop
adcb
sub
cwtl
roll
loop
fwait
adcl
add
mov
dec
xor
sbb
leave
push
outsb
mov
int
fcoml
inc
cmpsb
push
aas
lds
popa
and
sbb
jle
dec
gs
add
sub
sbb
jle
loope
lcall
jle
lods
imul
testb
fldl
push
xchg
mov
add
sbb
cmp
xchg
loopne
xchg
mov
mov
add
loope
gs
fnstsw
lea
ja
int
adc
test
dec
lock
movsl
iret
jnp
sti
mov
xchg
jp
inc
xorb
and
mov
jns
les
jl
mov
ror
xchg
aad
movsb
jbe
or
xchg
cs
xor
gs
mov
in
clc
cmp
sub
adc
push
stos
ja
mov
push
push
enter
mov
sub
xchg
rolb
jecxz
movsl
sub
in
out
hlt
xchg
outsb
cmpsl
pop
cmp
add
leave
pop
mov
shr
mov
sub
mov
mov
cmp
ret
add
shll
es
cmp
js
xchg
outsl
jecxz
fnsave
lea
inc
xor
sub
outsb
push
cmp
inc
inc
pop
mov
clc
mov
mov
xlat
hlt
sub
cli
jb
subl
dec
out
mov
aad
dec
push
cwtl
mov
mov
xor
in
loopne
stos
mov
cwtl
scas
adc
push
sub
mov
lret
mov
aad
lock
mov
jp
push
xor
outsb
popa
jnp
out
cmp
int
xor
push
cmp
int
int3
push
imul
aas
cmp
push
mov
sbb
push
pop
cmpl
jns
sbb
iretw
lret
sti
scas
mov
in
pop
cwtl
data16
mov
inc
pusha
pop
gs
repz
pop
add
mov
inc
jecxz
add
les
aaa
jns
aaa
xchg
lds
mov
pushf
in
daa
inc
or
fsubrl
in
mov
pushf
loope
fisttpll
inc
pop
icebp
dec
sbb
cmp
inc
sbb
or
mov
popf
movups
sti
and
push
int3
push
jecxz
das
outsb
iret
clc
dec
xor
mov
ja
mov
xchg
xor
cltd
icebp
jae
fwait
xchg
ljmp
data16
scas
cltd
mov
xlat
xor
loope
sub
daa
jl
out
fsubr
push
push
mov
fwait
das
es
mov
je
cmp
scas
add
scas
inc
adc
sbbb
jns
insb
fmul
inc
push
add
sub
pop
jns
popl
sbb
orl
insl
mov
or
mov
iret
inc
mov
or
repz
or
dec
mov
loopne
data16
jl
inc
xor
popa
mov
xchg
dec
cli
loope
hlt
inc
daa
mov
test
roll
iret
addr16
cwtl
jo
sbb
jae
adc
sub
adc
popa
xchg
icebp
xor
mov
mov
or
and
pop
inc
jae
inc
je
pusha
call
sbb
daa
sub
sbb
jg
pop
imul
fidivrl
cld
sub
lahf
je
xchg
pop
push
cmpsb
data16
roll
rolb
xor
insb
xor
je
pop
mov
lods
mov
gs
imul
xchg
jecxz
dec
aas
cmpsl
rcrb
pop
cmp
push
xor
mov
pop
test
xorb
sub
arpl
and
inc
jle
out
add
xchg
mov
mov
cmp
cs
std
mov
in
sti
xchg
xchg
dec
lods
jecxz
or
push
xchg
je
cmc
xlat
addl
push
jns
push
roll
loopne
xchg
jnp
aas
inc
lahf
repz
in
cmp
xlat
mov
mov
sti
es
cld
stos
sub
out
pop
inc
rclb
sbb
ds
xlat
mov
pushf
ret
in
xor
sbb
jae
in
jo
dec
inc
and
push
mov
add
push
push
cmpsl
insl
mov
pop
mov
pushf
lds
stc
xchg
add
jns
fmulp
ret
popa
or
xor
cltd
sub
sbb
jae
popa
imul
loop
pop
xchg
flds
cli
in
scas
pop
mov
rep
subb
leave
fidivs
mov
xor
negl
cmp
mov
ja
and
jae
pop
mov
pusha
jle
fwait
cmpsb
dec
aaa
cmp
nop
inc
jns
js
jmp
cmp
int
lods
sbb
pushf
xchg
jl
sbb
mov
sbb
repz
mov
push
out
jbe
in
repz
clc
mov
test
popa
jae
dec
roll
bound
jo
pop
fmul
xchg
pop
jbe
negb
and
in
push
or
pop
push
stos
sbb
cmc
bound
mov
enter
xor
cmp
shrl
lret
scas
push
popa
enter
out
mov
call
in
and
lods
iret
xor
fxch
mov
scas
push
add
das
ss
filds
cmpsb
dec
xor
mov
cmp
xchg
aad
inc
xchg
enter
call
cmp
loope
mov
push
ret
rorb
cwtl
lcall
jmp
stos
repnz
sub
adc
jnp
push
sbb
loopne
js
pop
jl
or
testb
sbb
out
mov
dec
lret
out
aaa
dec
loop
mov
insb
inc
jne
in
into
test
js
lock
leave
mov
pop
clc
popa
dec
popa
sub
or
insl
adc
xor
addl
repnz
xchg
clc
xor
repz
pop
push
lahf
in
test
fwait
aad
int3
fbld
xlat
mov
lcall
pmulhw
dec
sub
xor
push
mov
xchg
loopne
or
mov
push
ss
sbb
gs
stc
pop
sub
mov
je
mov
pusha
mov
fcomps
shll
data16
mov
adc
mov
cmc
nop
xor
xchg
cmp
or
and
cmp
sub
inc
add
inc
adc
loopne
cmp
divb
out
xor
xor
lret
jle
std
jl
bound
jp
pop
xchg
int3
test
inc
adc
lds
xchg
movsb
je
xor
jecxz
adc
lds
push
mov
js
cmp
add
sbb
pop
popa
or
out
shl
inc
mov
sti
mov
sti
shlb
pop
scas
add
lahf
lea
xchg
jae
inc
jg
lahf
mov
lea
mov
cmp
cmp
jns
repz
ret
pop
pusha
cmp
testb
adc
test
lea
gs
dec
adc
dec
adc
dec
pop
and
jne
dec
ret
lods
or
sub
mov
shl
stc
roll
cwtl
lcall
xor
leave
push
cwtl
jle
push
sub
repz
sbb
dec
addr16
mov
adc
ja
pop
xchg
lods
mov
adc
fcomp
push
stos
and
rcrl
push
fcoms
or
in
ret
adc
ljmp
cmp
xchg
pushf
outsl
adc
shll
aad
fbstp
lods
arpl
mov
mull
mov
jle
mov
cld
push
jl
jecxz
xchg
dec
sbb
cs
xchg
rcrb
fs
xchg
jae
movsb
sub
mov
fildll
das
shrb
fsts
clc
adc
data16
dec
jno
in
xlat
xrelease
jno
cmpsb
arpl
nop
or
cmpsb
sub
stos
sbb
mov
jbe
subl
xchg
mov
in
lcall
cmp
or
cmpps
je
xchg
cmpsb
xor
repnz
pop
imulb
xchg
or
fbstp
jns
outsb
lock
sub
push
sbb
aam
sbb
cmp
cmpsl
sub
or
sahf
jge
sub
push
es
hlt
cmpsb
insb
fidivrl
lret
dec
aaa
inc
hlt
dec
les
sti
mov
pop
fldcw
push
mov
push
stos
ss
dec
push
in
mov
fsubr
scas
sarb
pop
int3
bound
and
cmpsl
adc
in
mov
divl
enter
sahf
aam
jmp
jno
outsl
gs
mov
xor
mov
pusha
xor
sbb
dec
shrb
iret
adc
leave
push
out
push
push
andb
dec
sub
cli
loopne
nop
bndstx
xchg
and
jmp
cmp
ret
mov
cltd
test
repz
push
ds
pop
xor
push
lahf
leave
mov
in
aas
adc
cmp
xchg
cwtl
sbb
jns
sub
cwtl
ret
lahf
adc
add
testl
cmp
and
ss
mov
lret
dec
cmpsl
movsl
push
xor
andl
mov
pop
xor
add
mov
js
sbb
xor
jo
call
jle
into
test
push
shll
faddl
divl
mov
sbb
xchg
lock
test
int
call
mov
imul
lods
xchg
insb
stc
addl
cmpsl
sub
movsl
cli
mov
clc
test
lods
shlb
outsb
cld
sbb
mov
and
popa
or
mov
sbb
lea
push
adc
cs
or
fstpl
adc
dec
mov
in
jns
mov
mov
dec
pop
sbb
repz
out
out
pop
int
jecxz
cmp
sub
sbb
add
int3
add
in
cmc
pop
fsubrp
mov
ja
in
ss
int
lock
shr
dec
jnp
test
mov
fsubr
cmp
jo
and
fwait
sbb
addr16
roll
mov
hlt
je
mov
mov
and
les
stc
aas
call
push
xchg
sbbl
mov
dec
xchg
dec
jb
push
add
jno
dec
icebp
out
ret
add
stos
out
jg
dec
sbb
pushf
mov
decb
xor
push
in
mov
lret
adc
xchg
fs
addr16
xchg
push
ds
imul
jb
mov
insb
mov
inc
or
push
sub
lock
stos
and
pop
and
fldenv
cmc
aad
jb
addr16
stos
mov
jnp
stos
in
cmpsl
das
dec
adc
xlat
ds
and
pusha
xchg
clc
mov
push
pop
dec
mov
shrl
das
sub
inc
shrb
out
mov
clc
mov
loop
inc
push
cmp
mov
lret
jno
push
loopne
pop
mov
xchg
test
sti
ljmp
xchg
or
cmp
xchg
mov
aam
imul
pusha
maskmovq
mull
xor
or
xor
fwait
mov
push
pop
testl
adc
lahf
das
dec
sbb
insl
mov
jmp
mov
ja
or
or
insb
mov
sahf
dec
fld
loope
adc
mov
push
scas
ret
fdivrs
push
addr16
add
data16
push
int
mov
add
mov
dec
mov
dec
sub
es
mov
mov
shrb
ds
icebp
xor
roll
jbe
orl
jle
sub
pop
mov
lock
cmc
loopne
push
mov
rol
cs
push
addr16
fistpll
stc
in
xorb
jnp
pop
adc
shl
aas
jge
cmp
xchg
inc
in
int3
pop
inc
add
mov
lahf
push
add
sub
or
jecxz
jnp
cwtl
into
pop
xor
mov
xchg
stos
mov
sub
out
add
int
adcb
adc
jg
cwtl
arpl
cmc
add
ret
push
add
clc
js
les
cld
insb
in
and
jns
dec
pop
mov
aaa
xor
sub
pusha
jb
imul
jae
nop
xchg
mov
mov
pushf
mov
repz
dec
add
add
sbb
add
jne
clc
pusha
pop
imul
sbb
and
xor
outsb
clc
inc
mov
mov
xor
mov
ret
mov
loop
mov
dec
pop
xchg
dec
and
adc
cmp
fisubl
ja
lahf
dec
and
or
xor
movsl
stos
mov
or
divl
sbb
and
loope
push
sbb
stos
in
mov
cltd
or
xor
xchg
insb
fadds
mov
decl
xor
pop
xchg
out
movsl
add
pop
inc
sbb
test
std
js
sbbb
cmpb
sbb
push
repz
mov
insb
or
stos
sub
fnsave
fwait
jno
sub
repnz
iret
dec
push
and
div
fcompl
push
es
pop
fbld
fs
les
xchg
sub
add
addr16
or
add
mov
pop
xor
mov
push
inc
test
jecxz
loop
sti
xor
dec
push
mov
out
cmpsl
xchg
xchg
mov
stos
mov
dec
inc
jno
scas
mov
scas
cmp
xchg
push
stos
xchg
stos
outsb
popf
or
sbb
pushf
scas
in
clc
cmpsl
repz
jmp
inc
xor
sub
iret
sbb
xchg
repz
ds
les
or
inc
mov
iret
insw
push
daa
ljmp
cmp
adc
clc
lds
cmpsl
xor
xchg
ret
in
insb
sub
fildll
test
xchg
leave
ret
dec
inc
add
inc
fiaddl
outsb
sub
test
sti
lds
sub
sbb
mov
dec
loope
mov
and
push
bound
cs
ljmp
fwait
out
or
popa
das
stos
repz
cmpsb
les
inc
mov
popa
sti
push
addr16
jae
xchg
jp
iret
sub
cmp
in
fdivs
out
cmp
mov
adcl
jb
jno
cli
adc
xchg
xchg
lea
push
mov
and
jno
add
test
and
rorl
push
adc
outsl
pop
and
clc
lcallw
xchg
adc
stos
mov
mov
jl
stos
or
outsb
sub
dec
test
or
and
lahf
stc
adc
int
in
sub
ds
mov
sbb
imul
es
sbb
cltd
xor
and
fstpl
jg
lcall
lcall
popf
push
mov
jnp
mov
or
shlb
pop
sti
dec
test
push
or
xchg
xor
test
aad
aad
movsl
xor
pop
pop
popl
xor
test
jl
rcrb
pop
mov
xor
jne
pop
pop
cmp
jg
pusha
add
ret
xchg
pop
shl
or
xor
and
aad
jmp
jmp
mov
in
fldcw
lcall
jg
hlt
xchg
adc
and
lret
mov
outsl
mov
xlat
into
pop
in
sbb
jb
pop
repnz
aad
dec
ret
xchg
dec
xorl
daa
inc
fwait
jae
sbb
test
adc
sub
pop
cmp
imull
into
push
dec
sub
cs
in
call
mov
pop
sbb
jns
std
sbb
nop
sbb
sub
stc
ljmp
imul
sbbb
push
cmp
in
fidivl
and
pop
cmpb
sbb
js
mov
pop
mov
pop
test
pusha
jle
fwait
pop
or
push
or
xchg
fwait
scas
pop
sub
dec
popf
stos
adc
or
jne
cmp
cmpsl
xchg
mul
pop
lcall
in
popf
sub
cmpsl
scas
add
out
xor
aaa
fwait
add
rolb
jo
sub
outsb
stos
std
jmp
add
cmp
push
stos
push
mov
lods
mov
std
mov
loop
jno
mov
sub
mov
in
push
mov
gs
mov
jno
cmp
cld
mov
add
mov
dec
push
jp
push
dec
xor
imul
sbb
push
or
cli
jae
int
and
or
mov
pop
mov
pop
test
or
push
js
sub
aad
mov
jae
test
or
adc
push
sbb
repz
pusha
in
stc
inc
cs
xchg
imul
andl
enter
lcall
mov
int
mov
xchg
cmpb
inc
popl
in
inc
stos
mov
adc
mov
mov
adc
lds
iret
add
pavgb
out
loopw
xor
subb
jecxz
xchg
xchg
adc
push
insb
ljmp
push
outsl
mov
daa
mov
mov
movsb
sbb
and
push
mov
mov
mov
mov
pop
jp
mov
iret
test
int3
dec
int3
test
fstp
xchg
pop
dec
mov
sbb
push
dec
arpl
jecxz
cwtl
push
inc
call
adc
push
movsb
adc
sbb
cmpsb
inc
push
test
je
mov
push
and
xchg
icebp
sub
inc
repnz
pop
test
sbb
xor
stc
push
or
dec
sbb
mov
push
or
mov
sbb
imul
insb
hlt
and
ljmp
xchg
call
jne
sbb
cmp
push
addr16
repz
jae
outsl
mov
ret
cmc
mulb
inc
in
icebp
sub
pop
mov
in
push
ljmp
xor
int3
mov
sub
inc
mull
mov
dec
xchg
cmp
aaa
and
adc
stos
fs
jge
pop
lea
xor
fimull
jmp
cltd
push
pop
mov
in
inc
xchg
mov
cli
movsb
adc
push
sbb
mov
pop
bound
add
call
int3
out
mov
sahf
cmp
pop
pushl
dec
jno
movb
hlt
in
iret
cs
in
dec
mov
mov
mov
out
fisubrl
rcrl
mov
dec
dec
push
out
arpl
xchg
sub
jns
dec
loope
test
mov
jecxz
xchg
pushl
jmp
jp
xor
push
notb
fisubl
xchg
mov
or
nop
adc
pop
add
adc
jecxz
loopne
or
test
cmp
jmp
sbb
sbb
shll
lcall
clc
repz
or
dec
insl
mov
pop
mov
out
sarb
ret
rorb
lock
out
pop
mov
mov
pop
or
sbb
cmp
sbb
sub
cmp
inc
fptan
xor
and
cwtl
or
push
aad
pop
sub
jb
out
je
inc
out
or
adc
bnd
pusha
outsb
jp
enter
push
test
push
sti
scas
jg
test
gs
xchg
cmp
adc
mov
ds
movsl
mov
and
imul
and
test
cltd
dec
in
ficoms
mov
insl
iret
sub
pop
jmp
inc
sub
inc
ret
jns
pop
addr16
inc
push
dec
lret
or
pushf
jbe
loopne
mov
sub
dec
adc
movsb
xlat
xchg
xor
inc
mov
loopne
clc
add
cmpsl
xor
mov
jbe
mov
mov
sbbl
and
add
pop
sbb
ljmp
sbb
and
imul
mov
pop
and
xchg
sbb
pop
inc
add
pop
hlt
pop
scas
inc
push
mov
lock
rorl
leave
cmpsl
push
jnp
cwtl
mov
movsb
sbb
sbb
decb
mov
jbe
repz
adc
jl
in
movb
sahf
push
out
iret
cmp
fsubrp
inc
sub
repnz
lods
xabort
pop
testb
hlt
or
iret
nop
aaa
inc
outsl
mov
jg
negb
imul
stc
mov
lcall
add
push
ja
xchg
aaa
jp
shll
sbb
inc
pop
ret
jnp
mov
cmpsl
push
jnp
lret
pop
arpl
fstpl
pop
ret
mov
fnstsw
and
call
popf
lcall
imul
and
ja
cmpsl
jecxz
fidivs
and
inc
shll
fcmovnu
cmp
lea
ss
hlt
dec
add
inc
in
add
or
jg
push
xchg
repnz
jnp
in
fisubl
les
bound
aad
hlt
call
pop
mov
mov
test
out
rorb
push
psrlq
or
sub
xchg
sbb
loopne
lods
mov
dec
add
inc
fstl
or
dec
icebp
cli
adc
enter
jmp
sub
adc
mov
test
dec
mov
jb
push
xchg
inc
mulps
notb
jg
dec
or
jo
push
ret
leave
mov
js
xchg
push
pop
adc
leave
fwait
pushf
cmp
push
mov
outsb
sub
xor
inc
xchg
ror
push
les
into
incl
mov
imul
sub
mov
jnp
push
dec
shl
jl
inc
dec
pop
push
loopne
repz
imul
stos
mov
cmc
enter
cmc
sub
jl
mov
mov
loopne
popw
fistpll
lcall
pusha
mov
push
push
imul
in
les
leave
std
jae
and
mov
test
add
push
mov
xor
pushf
push
orl
fsubl
test
add
inc
add
mov
inc
dec
dec
in
inc
out
jae
unpcklps
clc
sbb
mov
das
and
mov
out
sbb
dec
outsb
jno
in
cmp
ds
insl
adc
test
jecxz
inc
shlb
loop
or
or
sub
inc
jmp
and
push
mov
push
add
test
stc
data16
xchg
sbb
lods
push
jae
mov
insb
test
or
dec
push
or
cmp
iret
cltd
lret
jnp
mov
insl
mov
fcomps
mov
sub
pusha
jle
fdiv
data16
sahf
icebp
dec
rcll
shll
bound
pop
push
arpl
inc
jbe
testl
sbb
mov
mov
push
mov
leave
testb
enter
shlb
and
inc
mov
add
aas
dec
dec
je
sbb
icebp
movsl
fldenv
sub
cmp
lret
addb
lods
adc
cmpsb
fdiv
in
inc
jmp
push
mov
sub
ret
pop
fisubs
xchg
hlt
cmc
sbb
jb
stos
repz
dec
lret
popa
sbb
pop
and
addr16
leave
popf
sbb
dec
repnz
inc
dec
vmaskmovdqu
jmp
out
mov
mov
add
xor
in
adcb
mov
push
xchg
stos
gs
pop
sti
sbb
std
cmc
cmpsb
fwait
cmp
push
push
mov
ret
sub
cmc
lods
ss
pop
lods
addb
orl
dec
sub
fmul
dec
sti
dec
or
test
mov
call
push
fistps
and
fiadds
add
std
setnp
xchg
repz
xchg
pop
sbb
cli
out
dec
fsubp
rclb
divb
loopne
inc
hlt
xor
jle
int
lea
sbb
push
inc
push
dec
mov
scas
psubw
ljmp
cwtl
inc
inc
shll
pop
enter
inc
xchg
push
fcomps
mov
add
outsb
out
push
es
mov
dec
notb
fidivrs
push
dec
push
mov
sub
dec
and
mov
cmp
arpl
dec
mov
fcoml
test
xchg
push
or
insl
xchg
push
and
cmp
xor
cmp
mov
mov
data16
insl
or
jle
push
sbb
int3
ds
out
sub
pop
lahf
lahf
push
mov
push
mov
cmp
pop
ret
stos
mov
ljmp
or
dec
sarw
aad
xorl
faddl
pop
addr16
mov
jno
es
fistpl
les
xchg
jno
jecxz
push
jl
jp
sahf
cli
in
xchg
jns
leave
scas
lods
pop
lahf
repnz
aad
mov
lods
push
cld
push
inc
cmp
jmp
cmp
or
jne
jbe
ja
in
fs
into
jo
sub
inc
xor
roll
std
clc
xor
adcb
pushf
les
outsl
rcl
sbb
add
daa
aad
pusha
pusha
adc
lods
mov
jmp
shrl
adc
fildll
pop
pop
pop
adc
dec
les
inc
mov
sbb
xor
jle
adc
leave
std
test
dec
push
das
test
mov
shll
or
push
cmc
into
mov
sbb
aaa
mov
add
mov
fists
and
push
addr16
pusha
jmp
jmp
dec
push
inc
sti
inc
push
mov
sarl
incl
xor
jne
and
imull
pop
fs
mov
gs
out
out
gs
in
test
pop
and
loope
and
mov
xor
imul
stos
inc
sbb
icebp
out
ljmp
mov
xor
add
cmpsl
mov
aam
mov
scas
ja
cmpsb
stc
jmp
bound
data16
xchg
mov
clc
adc
call
mov
fsubrl
cld
insl
mov
lcall
fstpl
and
subl
fsub
into
inc
push
mov
sbb
in
ds
nop
mov
scas
test
lds
inc
fidivrl
sbb
and
outsb
inc
mulb
sarl
or
inc
push
call
jnp
add
lret
push
xor
test
sub
push
jmp
mov
icebp
mov
mov
outsb
mov
je
andl
idivl
repz
or
ja
cwtl
or
sbb
jbe
mov
xor
add
pop
mov
xchg
daa
jne
sti
rorb
sub
and
adc
mov
scas
dec
and
ret
xlat
repz
xor
pop
or
stos
rorb
clc
push
ret
jno
mov
cmpsb
aad
ret
sti
bound
xchg
outsb
cmpsl
sub
pop
push
mov
mov
cltd
jno
sub
mov
mov
add
imul
repz
or
in
mov
inc
jmp
cli
daa
jmp
neg
bnd
mov
popa
adc
out
push
das
jnp
xchg
mov
dec
loop
or
cmp
movsb
xor
aaa
fs
jle
inc
mov
adc
ss
mov
ret
insl
mov
jbe
dec
aaa
pop
or
jae
jns
iret
and
push
test
pusha
push
dec
lahf
inc
iret
sub
rclb
int3
outsl
cmpsl
out
or
dec
xor
gs
sub
push
out
les
das
or
xor
pop
push
push
jne
xchg
xchg
popa
cwtl
mov
push
and
js
pop
xchg
cmp
lods
xchg
sti
jp
stos
adc
cld
mov
xchg
shll
sbb
movswl
stos
mov
icebp
xlat
out
es
test
test
pop
mov
inc
cmpl
push
mov
push
fstpt
fcomip
xchg
dec
mov
add
jl,pt
sbb
fdivrs
cld
and
ja
iret
and
add
fmull
or
aas
mov
inc
cmp
xchg
mov
inc
sub
nop
or
movsb
nop
shll
shll
sbb
out
jmp
xchg
popf
adc
adc
sbb
in
add
shl
fcoml
xor
mov
lock
fcomi
sub
movsl
stos
insl
cli
cmpsb
jecxz
lods
data16
xchg
ret
xor
sbbb
jns
sub
and
jns
sub
pusha
int3
mov
xor
nop
pop
cmp
and
xchg
in
or
dec
shll
dec
xor
and
jl
mov
xor
and
inc
jge
test
bound
incb
pop
lahf
insl
xchg
addb
fnstsw
nop
cmp
jmp
inc
inc
repnz
rcrl
pop
popa
cmp
rcrl
mov
push
es
xchg
outsl
cld
and
push
adc
lock
inc
movsb
ficomps
cmc
and
addl
mov
dec
add
push
icebp
cli
xor
mov
ds
jge
push
cld
dec
gs
jbe
call
loop
sub
mov
mov
subl
lahf
xchg
mov
xor
push
push
sbb
jae
and
pusha
sbb
pop
fwait
mov
add
sub
js
nop
mov
dec
out
sub
addr16
pop
pop
xlat
pop
loop
pop
and
pop
psrld
testl
stc
push
push
xchg
sarb
mov
xchg
cmp
push
lahf
fistpll
aam
mov
sub
ljmp
dec
jo
test
ljmp
int3
mov
aad
ss
push
rol
cmp
push
mov
test
loop
int3
mov
push
sbb
xchg
and
incl
cs
lahf
icebp
jb
mov
pop
xchg
sbb
or
inc
xorb
mov
and
lds
dec
xor
xchg
cmp
mov
push
int3
hlt
push
and
scas
push
xchg
movsb
out
lret
push
insl
inc
mov
loope
sbbb
jecxz
dec
mov
mov
cmp
fsubrl
daa
adc
ret
fistl
hlt
scas
lahf
insl
iret
pop
xchg
fnstenv
dec
std
sbb
test
pop
xchg
jmp
cmp
push
jbe
test
sub
ret
pushf
sub
or
movsb
out
sbb
fldcw
mov
mov
les
mov
push
fildll
sub
pop
mov
dec
cmp
aas
xchg
movsb
loop
xlat
sbb
cmp
pop
out
ret
pop
hlt
jmp
and
xor
call
or
incl
inc
imul
cs
movsb
pop
lcall
sbb
call
int3
cmc
push
ret
jns
mov
jl
xorb
fwait
scas
gs
dec
lret
lcall
adc
outsl
pushf
pop
mov
mov
jno
das
jmp
jle
mov
mov
pop
ss
popf
int
rcl
fiaddl
mov
mov
gs
sub
nop
mov
and
jge
cli
mov
push
push
add
arpl
std
divb
dec
negl
add
fucomp
call
jp
mov
cwtl
pop
aam
xor
jo
hlt
mov
lret
fiaddl
add
shr
call
jns
mov
and
xchg
push
loop
mov
inc
popa
push
xchg
out
mov
decb
fwait
inc
in
and
jle
pushf
test
dec
jp
pop
adc
ficoms
js
nop
push
pusha
and
push
lods
mov
fsubs
addr16
movsb
push
xchg
sbb
arpl
jnp
out
sub
jg
sbb
pop
ljmp
out
jno
fisubl
in
jno
fldcw
repz
sbb
push
insb
mov
test
cli
outsl
cmp
lods
imulb
pop
dec
cmp
ficomps
xchg
push
sub
mov
mov
ret
xchg
jno
int3
inc
cmp
lcall
repnz
out
push
jns
adcl
or
xchg
out
cli
out
mov
pop
lods
push
cli
ja
cltd
shl
mov
fidivs
leave
push
lds
lahf
xlat
icebp
jbe
inc
mov
scas
in
in
imul
xchg
lds
aam
push
push
and
adc
sbbb
xchg
jmp
push
test
ja
dec
jo
in
sbb
inc
adc
pop
adcl
aaa
pop
int3
rdmsr
sahf
push
cmpsl
xor
cmp
xchg
enter
pushf
lea
das
lret
push
sti
mov
lea
mov
loope
rorl
push
ja
popl
mov
std
fsubrs
call
ss
push
mov
imul
js
pop
test
out
cmp
lahf
mov
out
push
es
adc
lock
and
dec
icebp
pop
mov
cld
scas
xchg
enter
hlt
iret
push
sub
mull
sbb
jp
stc
jns
xlat
jae
cmpsl
pop
fdivrs
add
sub
enter
loope
sahf
add
xchg
js
dec
push
mov
mov
pop
adc
shl
jge
fdivl
sahf
imul
or
js
sbb
data16
fstsw
dec
adc
testl
push
cmp
add
cmp
mov
mov
xor
lret
jb
mov
jl
sahf
lock
xchg
lods
inc
movsl
cmc
cli
iret
popa
cltd
dec
add
xlat
mov
cs
xchg
fidivrl
pop
add
fstpl
pop
push
mov
in
adc
mov
xchg
sbb
xlat
std
mov
mov
sub
test
fstpt
fisttpl
jnp
mov
movsb
xchg
dec
push
shll
jne
popa
sbb
xchg
sbb
fs
mov
stos
jo
jmp
jg
in
cmp
jecxz
xchg
jb
stos
enter
mov
mov
aas
daa
push
rcr
js
stos
mov
sub
rclb
pop
and
cmp
mov
sub
xchg
jmp
sarl
repz
std
movsl
xlat
aas
adc
sbb
mov
pop
shll
xchg
add
sbb
sbb
jg
push
xlat
pop
mov
in
aad
lret
mov
mov
push
add
mov
lret
pop
pop
cmp
mov
sub
xchg
xchg
out
aam
stc
sub
inc
add
pop
cmp
sbb
std
pushf
adc
divb
imul
mov
leave
mov
cwtl
pop
stos
mov
int3
inc
inc
mov
mov
pop
test
dec
insw
xor
mov
sbb
cmp
jbe
pushf
ss
imul
mov
inc
sbb
out
jnp
popa
out
pusha
loopne
int3
or
adc
movsl
ss
push
xchg
adcl
xlat
mov
cltd
adc
sbb
js
nop
scas
popa
mov
arpl
cld
ja
push
mov
movb
into
xchg
repnz
xlat
cmp
cmp
jl
jne
in
jo
stos
mov
cmp
stos
inc
sbb
pusha
mov
jo
adc
mov
test
out
hlt
fdivrl
je
jp
gs
xchg
mov
mov
xor
xor
adc
pushl
push
push
mov
and
mov
jg
mov
jo
mov
add
pop
and
jne
outsb
sub
pop
aam
inc
fsubrl
int3
aam
out
sbb
pop
cmp
shl
sbb
xchg
jge
inc
cmp
sbb
mov
jns
xor
xor
mov
xchg
aad
and
shl
pop
cltd
jns
push
cld
sub
jmp
xor
enter
testl
lods
pushf
fimuls
movsb
into
call
sub
int
push
sbb
out
and
mov
sar
sbb
repz
stc
and
pop
aad
adc
mov
jae
mov
out
out
cs
jb
lock
xor
cmp
and
cld
pextrw
and
add
stc
jl
sti
fstps
inc
jmp
and
adc
jno
lahf
addr16
jns
mov
pop
cmp
mov
mov
aad
lea
jnp
addr16
sbb
fistps
clc
mov
xchg
ret
pop
shrb
cld
push
fsubr
or
movsl
mov
jnp
iret
cltd
popa
push
rorl
cltd
gs
mov
mov
xchg
push
rcl
cmp
or
andl
sbb
in
mov
subl
and
sahf
push
movsl
scas
add
repnz
xor
add
je
sub
mov
in
and
jo
cmp
mov
pop
sub
sub
popf
mov
andl
cmp
stc
pop
fdivrs
orl
push
iret
cmp
into
mov
lret
push
inc
imul
xchg
int
pushf
gs
in
faddl
or
cmc
cmp
mov
jns
push
or
popf
dec
pop
enter
cltd
enter
mov
sbb
or
xorl
sbb
fwait
adc
inc
dec
add
jp
push
hlt
sbb
nop
push
pop
and
push
xchg
cmp
fs
mov
rorl
ljmp
out
pop
rcrb
mov
imul
add
lods
xchg
mov
or
mov
mov
ljmp
pop
mov
imul
sub
out
loop
inc
scas
out
sar
add
ret
pop
or
sub
xchg
ss
pop
int3
jge
jg
aad
insl
dec
mov
repz
sbb
xor
xchg
pop
scas
movsb
imul
shlb
lcall
pop
dec
fcmovnu
push
stos
mov
out
cmp
mov
jbe
sbb
push
adc
mov
adc
jp
xchg
jmp
lds
loop
push
subl
cmp
pop
jmp
jmp
jge
adc
or
inc
pop
sbb
add
lret
push
pop
or
sub
out
push
xchg
pop
dec
fdivrl
out
adc
test
adc
jge
les
adc
mov
andl
lods
addr16
or
xchg
jmp
jp
in
aaa
xchg
out
fmuls
push
in
scas
mov
cld
inc
add
sbbb
mov
jge
rorb
test
cmp
rdpmc
mov
mov
lret
push
add
sahf
icebp
movsb
pushf
stos
outsl
or
out
stos
das
aas
sbb
pop
repz
bound
xchg
nop
push
sub
js
mov
test
jg
out
imul
sti
push
add
rolb
std
inc
xchg
sub
mov
mov
movsb
test
fisubrs
lahf
test
sahf
pop
xchg
add
push
and
jge
movsb
xchg
sbb
adc
jge
push
arpl
mov
lods
arpl
xchg
push
push
and
jbe
ret
ljmp
add
dec
xchg
xchg
ret
sub
cs
rclb
cld
mov
leave
shlb
cmpsb
repnz
add
add
fcomp
rorb
cmc
xchg
fwait
push
into
clc
fmull
jbe
cli
push
pop
lods
das
sub
test
mov
or
xchg
sbb
jno
push
inc
lret
movsl
movsb
insl
iret
clc
std
movsl
add
xchg
rcrb
mov
mov
lcall
cltd
cmp
pop
mov
cld
and
lcall
pushl
pop
jl
or
adcb
loopne
sub
dec
inc
cmp
and
cltd
and
sub
or
mov
jecxz
inc
sbb
xor
loop
jg
jb
jle
cwtl
ljmp
aam
cmc
xor
loopne
xchg
xchg
int
fnstcw
mov
jb
cltd
lock
es
cmpsb
dec
and
pop
shll
out
xor
add
sbb
xlat
mov
into
test
fbstp
movsb
mov
xorl
inc
dec
ja
jle
mov
pop
cld
sbb
jae
lods
sbb
filds
push
mov
xor
dec
pushf
lods
and
cmp
mov
adc
adc
xchg
pop
inc
rcrl
in
in
cmp
lods
outsb
divl
mov
lods
and
add
and
push
or
dec
int
roll
cmp
push
mov
mov
shrl
cltd
push
mov
aas
and
fiaddl
push
mov
pop
fwait
das
and
into
adc
jae
mov
mov
cmp
in
inc
add
inc
and
pop
jge
sub
in
mov
shll
fstl
fcoml
and
pop
in
ja
and
repz
cmpsb
stos
pop
xor
jo
pop
sub
cmp
pop
sub
ljmp
repz
int3
push
idiv
call
xchg
push
enter
jle
push
adc
or
aam
js
or
xchg
popa
shll
addr16
outsb
lock
inc
sub
aam
lods
adc
pmulhw
scas
bound
pushf
push
mov
fucom
inc
push
les
mov
stos
lds
add
inc
jecxz
and
hlt
pusha
ljmp
or
and
ss
cmp
daa
orl
pushf
mov
lret
xor
pop
pop
clc
arpl
mov
add
repz
dec
out
inc
test
dec
xchg
adc
cmpsb
andb
in
rolb
xchg
inc
les
add
fwait
add
dec
xchg
or
sub
or
sub
adc
and
and
jecxz
lods
out
insl
imul
cmpl
mov
and
xchg
movl
push
aas
outsb
xorb
mov
call
imul
pop
aas
mov
mov
and
mov
in
inc
push
dec
std
mov
iret
dec
insl
pushf
int
outsl
insb
popf
jg
pop
pushf
stc
xor
nop
aas
mov
insb
imul
imul
test
sbbl
fnstenv
xor
inc
lcall
mov
jl
add
xchg
jle
inc
scas
jl
in
jg
orb
scas
in
and
cld
scas
nop
in
cmpsb
sbb
movsb
lea
xor
cmp
rolb
cmp
mov
sbb
and
stc
repz
mov
popf
lahf
or
fxch
mov
adc
inc
jge
add
icebp
mov
ss
lods
orb
mov
lods
mov
xchg
in
jg
fnsave
jmp
mov
pop
in
icebp
jmp
mov
fwait
and
push
out
dec
out
lds
in
xor
xor
jno
enter
inc
in
ds
pop
data16
clc
loope
fildl
mov
mov
and
mov
mov
dec
shrl
pop
push
dec
cmp
push
cmp
fistpll
les
push
dec
neg
shlb
and
repnz
sbb
inc
aam
cmp
cmp
mov
divb
mov
jp
push
fwait
sbb
cmp
cmp
mov
pushaw
dec
in
sub
xchg
xor
sub
cld
adc
test
in
add
stos
lds
lods
sbb
iret
leave
rcl
pop
je
iret
lret
adc
leave
push
sarb
mov
aad
jnp
arpl
sub
pop
loope
adc
jle
pop
mov
call
xor
jnp
jns
into
cmp
aaa
out
movsb
je
movsb
rcrl
jns
mov
pop
inc
fcomps
and
push
divl
jecxz
mov
mov
add
push
mov
jmp
lcall
mov
xchg
push
icebp
test
or
cmpsb
repz
cmp
push
js
je
paddq
xor
mov
sarb
mov
xchg
xchg
mov
sbb
xchg
pop
add
push
or
push
jae
sbb
push
mov
shr
movsl
inc
scas
sbb
pop
das
xchg
mov
es
sbb
iret
jnp
cmp
mov
sti
pop
mov
popf
out
ret
mov
push
popf
mov
xchg
adc
movsb
sub
and
sbb
cs
inc
mov
cmp
lds
scas
cmp
sbb
jne
push
mov
jae
push
imull
inc
push
push
xchg
mov
int
jge
subb
xor
sbb
inc
mov
mov
and
or
or
rcrb
or
js
in
jo
dec
inc
scas
lds
jle
ds
jo
rorl
jbe
pop
jge
adc
pop
in
dec
sub
or
jmp
shr
mov
mov
xchg
das
xchg
jp
mov
xor
push
loope
imul
ja
fwait
popf
xor
adc
testl
jb
ljmp
cltd
sahf
xor
dec
jno
shl
sbb
xor
pop
and
add
lcall
pop
lods
imul
or
popf
inc
xchg
lcall
xor
sub
stc
sub
add
jle
fdivs
dec
rorb
adc
xchg
and
in
add
fs
sub
mov
xor
cmp
sbb
sar
dec
pop
mov
subb
loop
mov
mov
dec
jo
sbb
stos
mov
mov
xor
mov
cmpsb
add
pop
cmp
int
sub
test
mov
adcb
subl
mov
mov
xor
xchg
shlb
or
cld
adc
mov
lds
loope
jle
jmp
nop
mov
mov
xor
mov
arpl
icebp
bound
xchg
mov
sbb
and
pop
in
cs
mov
jb
in
xchg
scas
jae
insl
cwtl
xchg
fistpl
aad
lods
in
out
cmp
ss
xchg
mov
cwtl
jl
iret
inc
fildl
ja
inc
stos
ljmp
push
test
add
sub
pushf
sbb
or
andl
pop
add
push
and
sub
lods
sbb
add
mov
lahf
lret
xchg
rsqrtps
xor
dec
xor
jg
mov
lock
sub
lret
mov
pop
dec
repnz
xchg
sbb
mov
pop
mov
xchg
movsb
out
aad
cmp
ds
or
cld
mov
cli
pop
sarl
sbb
adc
mov
dec
std
mov
pop
adc
lds
mov
and
xor
mov
test
push
add
xchg
push
and
fcom
jmp
aad
sub
movsb
out
and
jne
jae
adc
pop
imulb
vmptrld
ret
mov
xorb
mov
jb
sbb
leave
hlt
mov
faddl
or
sbb
mov
sub
loopne
dec
ficompl
pop
or
pop
sub
jo
cli
in
or
jl
mov
shlb
xor
push
addl
sti
jnp
mov
xchg
bound
adc
mov
xor
jnp
jb
rolb
les
test
dec
sbb
mov
jo
pop
xor
bound
jne
shrb
fisttps
and
fldcw
lcall
lock
xchg
loopne
int
lods
imul
mov
outsl
adc
dec
shlb
loope
imul
cwtl
jl
jae
sbb
xlat
add
jge
and
push
dec
outsb
repnz
lds
jno
mov
inc
out
lret
xor
aaa
loope
xor
sub
ljmp
mov
xor
scas
adc
jb
mov
jge
or
mov
sub
dec
adc
pop
mov
sbb
out
lds
or
loope
aam
jo
inc
cmp
inc
test
fnstcw
int3
sti
mov
loop
pop
enter
jle
stos
pop
shr
xchg
out
mov
daa
aad
and
inc
lahf
sbb
aaa
pushf
mov
testb
xchg
dec
sti
and
inc
and
and
jbe
mov
and
ljmp
dec
jle
push
out
sbb
loop
pop
mov
xor
test
cli
pop
adc
inc
sti
shrb
xchg
mov
loope
loop
sbb
mov
aam
stos
repnz
xchg
sahf
fmull
mov
mov
mov
sub
out
inc
fildll
xchg
lcall
iret
test
mov
in
cmp
cmp
or
xchg
adc
xor
dec
cmp
push
je
je
mov
adc
mov
pusha
sbb
enter
and
or
outsl
ja
psubw
or
xchg
aaa
lods
cmp
or
dec
xor
arpl
cmp
xorb
repnz
xchg
jge
pop
test
xor
xlat
cld
push
sub
gs
and
stos
hlt
add
mov
or
repnz
or
jl
sbb
adc
call
xor
mov
bound
sahf
outsl
ljmp
movsl
dec
sti
jg
out
xchg
dec
mov
insl
sbb
lret
pop
out
int
cli
sub
cmpsl
repnz
pop
cmpsl
push
lods
cltd
gs
mov
cmp
pop
adc
sarb
neg
adc
pop
xor
icebp
leave
lods
fstpl
lret
push
bound
jne
dec
fldenv
clc
sub
std
push
popf
fldt
loope
imul
out
xor
fwait
or
mov
sbbb
mov
int3
xacquire
fimull
int3
enter
movsb
lcall
sub
mov
es
out
cmpb
push
push
xor
in
nop
int3
add
dec
fnstenv
cmp
jp
and
gs
mul
stos
inc
jle
mov
ds
nop
push
xchg
daa
xchg
into
movntq
mov
sbb
jecxz
fisttps
enter
call
sub
xchg
sbb
inc
cmpsb
test
cmp
jge
clc
je
push
adc
mov
stos
inc
stc
cld
inc
push
aam
and
pop
xchg
xchg
test
mov
dec
mov
dec
ds
and
inc
outsl
jg,pn
xchg
sbb
or
in
or
xlat
repz
test
inc
mov
test
jb
push
leave
xor
ss
push
int3
shlb
jecxz
xchg
in
jno
hlt
idivb
mov
dec
xadd
cmp
stc
je
hlt
sbb
int
clc
gs
cmp
push
inc
inc
scas
sbb
push
in
mov
addb
int
mov
mov
mov
out
jle
popa
push
testb
popf
jecxz
or
ja
push
imul
adc
stos
push
lock
cli
sub
in
fistps
cld
mov
xlat
dec
mov
pop
mov
jp
cmc
fisubs
repnz
cmp
mov
mov
shlb
jne
lods
test
in
xorl
add
cmpsb
sbb
inc
popa
push
std
bound
insl
sbb
adc
ja
pop
add
fcomps
push
push
xchg
jmp
loop
dec
rorb
add
lock
inc
dec
inc
or
leave
ficompl
mov
and
and
jae
insb
and
cs
scas
pop
dec
lock
jns
push
mov
add
nop
jb
int3
addr16
pop
daa
and
repz
addl
int
cwtl
or
adc
arpl
sarb
scas
xor
mov
xchg
jle
in
cltd
xor
adc
cmpsl
mov
pop
cld
in
lods
mov
jae
mov
add
ds
leave
add
cmovb
mov
leave
cli
or
dec
rcrl
in
sub
test
jbe
addr16
sub
xlat
addl
test
pop
add
xchg
adc
les
outsb
or
ficomps
clc
adcb
fstpl
and
test
or
add
pop
xor
fnstsw
popf
in
jp
aam
add
ds
jns
push
jne
out
push
mov
jge
push
outsb
lea
sbb
jns
inc
lcall
icebp
adc
inc
out
push
jp
aad
out
addb
inc
inc
rolb
in
jb
insl
std
in
mov
fmull
mov
scas
push
je
test
or
outsb
cmp
cwtl
pop
lds
adc
push
xor
xor
ficoms
in
pop
gs
xchg
imul
ficompl
and
insb
bound
sbb
sbb
inc
loop
add
out
jge
cli
call
push
mov
mov
nop
jo
adcb
popf
es
jb
cmp
fistpll
adc
mul
aad
jecxz
or
and
test
sub
cmp
mov
add
inc
js
xchg
js
out
fisttpl
divb
lahf
pop
inc
xchg
push
adc
mov
or
pop
js
sbbb
cltd
insb
into
push
push
jne
out
scas
jo
xchg
push
jge
out
and
clc
xchg
push
outsl
lahf
popf
push
call
stc
pop
scas
sbb
inc
pop
jo
aaa
or
sbb
loope
sbb
pop
in
mov
lock
dec
xor
lcall
jne
pop
sti
pop
jo
and
lret
gs
xor
fisttps
cmp
gs
out
or
or
xchg
dec
xor
mov
sbb
mov
dec
jecxz
fiaddl
cmp
mov
imul
out
pop
mov
inc
sbb
xor
jo
vmovaps
std
adc
hlt
xor
pop
cmpsb
ja
testb
push
stos
cltd
sub
decl
dec
and
mov
inc
out
out
das
push
inc
fldl
ret
cli
das
mov
mov
mov
int3
cmpsl
fs
inc
fmuls
out
inc
sbb
push
cmpsl
sub
xchg
testb
mov
ret
push
dec
cltd
cmp
mov
adc
fcoml
sti
inc
mov
fldl
xor
sarb
xchg
clc
mov
insb
mov
dec
sahf
js
mov
mov
std
arpl
pop
xchg
or
lds
ljmp
mov
add
std
mov
lds
sbb
data16
mov
sub
xchg
jb
fs
xlat
ficoml
aam
rolb
mov
shl
bnd
in
adc
mov
call
cwtl
js
jbe
adc
cmp
mov
test
idiv
dec
mov
repz
push
pop
add
stc
aas
sar
ss
sub
jb
pop
out
lret
mov
mov
mov
dec
xor
aam
shll
cmpsl
pop
je
scas
ljmp
scas
jmp
outsl
in
popa
or
aaa
jle
faddp
push
add
mov
mov
lcall
cld
push
ret
std
pop
repnz
out
mov
mov
mov
cmp
into
dec
xchg
inc
fwait
cmp
push
mov
mov
pop
mov
or
imul
mov
loopne
mov
xchg
test
cmp
inc
mov
push
out
test
jecxz
test
ds
lods
jp
and
sbb
mov
inc
mov
cmp
and
jnp
add
xchg
arpl
mov
daa
shrb
aad
pusha
mov
int
inc
call
and
xchg
xor
xor
stos
and
ret
test
iret
aad
jmp
pop
in
jns
sar
ljmp
add
repnz
sub
inc
add
insb
repnz
shl
paddw
xlat
cmpsb
pop
xchg
mov
dec
inc
shr
push
iret
xchg
sub
sahf
out
xlat
sub
imul
jae
sbb
inc
les
pop
and
adc
lret
stos
ds
mov
inc
adcb
movsb
xlat
push
repz
adc
inc
lret
inc
lock
jno
pop
or
pop
push
ja
stos
mov
lds
lods
mov
fstpt
out
add
add
xchg
sbb
mov
sbbl
xchg
xchg
jmp
inc
sub
jbe
cmp
les
out
das
movsl
loop
and
sti
imul
add
sub
push
test
mov
push
pop
rcrb
dec
pop
pop
cmp
js
adc
imul
bound
testl
mov
adc
and
aaa
movsb
mov
outsl
into
xor
andl
add
loope
push
xor
xchg
mov
sub
pop
or
out
dec
mov
dec
mov
xchg
cmp
sub
sub
cli
xchg
and
pop
rcr
cli
pop
mov
inc
add
xor
fiadds
mov
sub
cmc
in
mov
cmpsl
lds
jb
loope
sub
mov
or
hlt
push
movsb
sbb
mov
rcrl
call
mov
out
das
push
sahf
mov
in
or
aas
sub
sbb
lahf
mov
sbb
rcr
or
call
fs
mov
mov
cld
cli
setbe
repnz
das
fnstcw
ret
arpl
sarb
dec
dec
dec
push
daa
cmp
js
fwait
call
cmp
leave
enter
jg
aam
mov
ret
mov
scas
add
mov
sbb
jp
xor
add
and
or
mov
imul
cwtl
lods
out
ret
jnp
neg
call
jecxz
mov
enter
push
pop
stc
daa
or
xchg
fists
shrl
fs
adc
movsb
repz
nop
leave
stos
fs
repz
push
or
mov
mov
fnstcw
dec
movsl
inc
test
shrb
and
push
or
push
mov
movsl
insl
lock
ret
int
xor
cmpxchg
loope
or
and
jo
adc
and
out
in
in
ljmp
popf
popf
cmp
inc
cmpl
orb
dec
icebp
outsl
push
add
mov
xchg
mov
cld
push
lret
es
cmp
cmc
xor
push
and
rcr
add
mov
test
dec
aad
stc
setp
iret
sub
dec
dec
int3
call
adc
cmp
addr16
mov
push
rol
mov
outsb
add
into
fdiv
outsl
mov
imul
dec
mov
push
lret
xchg
and
rclb
inc
lret
nop
in
xchg
in
pushf
jae
leave
mov
clc
frstor
lods
and
mov
xchg
fisubrs
int
jbe
dec
sbb
push
push
mov
or
add
mov
jo
sbb
jl
or
or
mov
mov
les
cmp
ljmp
pop
jge
cmc
inc
sub
hlt
inc
lock
lods
out
out
movsl
ret
outsb
xchg
cmpsb
icebp
fsts
std
sbbl
ret
jecxz
ss
jnp
sbb
xor
dec
dec
fstps
mov
xchg
xchg
fmul
leave
mov
mov
cltd
fisttpll
outsl
popa
xchg
inc
fildll
cmp
cmp
xlat
ljmp
dec
call
mov
xchg
nop
or
in
push
xor
cmp
cli
int3
cmp
push
lcall
mov
pop
les
add
sti
nop
aad
mov
aas
inc
jmp
mov
cmp
add
and
sahf
sbb
or
insb
notb
xor
cmp
inc
aaa
dec
mov
xchg
nop
push
adc
pop
shl
mov
cmp
into
and
je
ja
or
stos
or
xstore-rng
cmpsl
inc
mov
aas
aaa
hlt
adc
ja
inc
mov
jns
adc
mov
push
sub
repz
pop
push
add
inc
sbb
dec
subb
xchg
push
and
test
test
je
clc
adc
xchg
mov
gs
lock
aad
push
hlt
add
sbb
ret
lcall
je
sarl
cmp
out
nop
jb
mov
xchg
cmp
add
sub
popa
mov
push
adc
popa
xchg
cs
add
push
aam
sub
inc
out
repnz
dec
scas
sar
daa
and
xor
xor
popf
rol
in
mov
push
mov
sub
icebp
scas
and
cmpl
js
scas
scas
adc
stc
aad
je
or
sub
jecxz
xlat
imul
cmpl
and
rolb
clc
test
mov
mov
cmp
cmpsl
ss
nop
adc
aaa
add
push
aaa
adc
repnz
pop
repz
std
enter
lcall
mov
push
data16
aam
inc
popa
sub
movsl
in
fcmove
push
inc
dec
idiv
mov
inc
lahf
xchg
leave
repnz
sahf
andl
aaa
arpl
es
nop
xchg
dec
sub
das
mov
ds
or
pusha
sahf
aam
and
push
rorl
mov
fstl
mov
in
mov
xchg
scas
rcll
jmp
jl
pop
nop
add
lret
flds
cmp
lret
adcl
or
scas
js
imul
adc
jl
jne
lahf
mov
mov
fwait
idivb
lods
fs
xor
xchg
and
js
jmp
xchg
pushl
sub
add
repnz
mov
mov
lock
std
push
or
lret
addl
xchg
outsb
test
lret
ja
dec
ret
push
mov
xlat
out
out
sub
loope
jbe
pop
mov
sub
jno
jmp
dec
push
lcall
loop
jecxz
mov
push
ja
inc
daa
test
pop
in
mov
jno
fxch
mov
sbb
sahf
mov
lret
sbb
hlt
and
scas
sti
cmp
lock
pushf
cmc
pop
jl
push
test
dec
or
xor
jle
jne
movsb
loop
push
mov
out
cmpsb
pop
test
or
sbb
aaa
adc
rcr
out
jnp
sub
shl
mov
movsl
cltd
mov
mov
js
lret
pusha
aaa
mov
ret
mov
in
add
aam
add
add
roll
ds
std
jg
rep
xor
push
pop
sbb
pushf
push
insb
jmp
hlt
jmp
ret
mov
cmpb
leave
mov
sbb
sub
fs
mov
sti
ljmp
dec
xor
loope
cmp
testl
sbb
dec
or
mov
push
inc
je
push
cmp
cmp
ds
fidivrs
mov
xor
out
fiaddl
pop
mov
mov
xchg
fs
cmc
cmp
mov
and
popa
dec
jne
lret
loope
leave
xor
xchg
jae
pop
add
mov
insl
or
push
adc
sub
mov
scas
pop
pop
push
xor
jg
fdivrs
jo
movsb
rcll
ret
in
int3
call
xchg
lahf
xchg
rorl
pop
fmuls
lods
and
jb
aad
in
inc
cmc
imul
xor
pop
fs
adc
cmp
outsb
out
arpl
in
dec
jg
xor
int
clc
aas
scas
sub
jne
std
fdivrs
xchg
in
repnz
pop
gs
xlat
sbb
pusha
test
jle
sarl
mov
shll
in
je
fstl
push
xchg
jno
std
mov
aas
enter
xor
aam
xor
aad
imul
pop
fimull
jmp
cld
shrl
push
in
dec
rcrl
inc
inc
pop
mov
push
and
add
outsl
lahf
ss
pop
sub
mov
enter
dec
jo
test
pop
pop
mov
pusha
sbbl
jae
push
into
push
cmp
sbb
loope
es
das
dec
mov
adc
gs
mov
gs
xorl
or
pop
cld
pushf
dec
push
pop
pushf
leave
cld
clc
sbb
insl
push
xchg
mov
sub
cmp
push
out
xor
mov
jmp
pop
push
in
mov
dec
jecxz
xor
dec
lcall
pop
cmp
xchg
mov
and
in
pushf
dec
aas
call
out
std
test
push
xchg
pop
sbb
xchg
mov
pop
push
lret
dec
iret
cmp
roll
mov
rcrl
lock
pushf
sub
ds
std
mov
lods
mov
or
jecxz
mov
pushf
cmpl
pop
pop
pop
jg
in
xor
push
xorl
scas
pop
gs
rclb
lds
dec
iret
xor
mov
pop
test
cmpsb
add
nop
mov
xchg
adc
sbb
jle
mov
aas
mov
sub
jo
sub
pop
outsb
inc
adc
push
aaa
jne
mov
mov
lds
insl
lea
jge
daa
mov
fcom
cmpb
mov
push
push
adc
ret
pop
adc
mov
cwtl
inc
dec
addl
mov
scas
jmp
cmp
jmp
scas
mov
and
push
fcoms
outsb
aad
movsl
popa
or
dec
mov
popa
mov
xor
dec
mov
aaa
lods
scas
cli
adc
out
cmpsl
outsl
fdivrs
fnsave
fisttpll
xchg
jne
jmp
scas
aaa
and
ljmp
scas
push
adc
pop
sbb
push
push
fwait
pop
mov
add
out
clc
nop
jb
rcl
dec
add
cwtl
stos
dec
rolb
mov
pop
add
pop
sbb
mov
mov
add
nop
cmc
inc
lahf
mov
bound
mov
data16
fstps
jp
inc
sbb
loop
movsb
sub
sbb
cmp
subl
test
ljmp
inc
push
fstps
sub
push
iret
jp
pop
mov
xorl
mov
popf
out
or
mov
and
test
or
popa
push
lock
rcrb
negl
or
mov
xchg
jl
lret
sbb
jg
inc
jbe
jmp
adc
idiv
xchg
bndstx
mov
ja
aad
out
popf
mov
sbb
in
add
xor
test
imulb
cs
pop
pushl
loopne
sub
jmp
xchg
repz
mov
lods
fwait
jnp
fdivrp
or
dec
lock
insl
xor
sahf
jnp
adc
xchg
dec
jae
in
dec
inc
pushf
mov
or
cmp
pop
adc
mov
mov
out
xor
cmpl
aam
xchg
cmp
pop
push
inc
cltd
jge
push
repz
push
or
sarb
add
and
movsb
add
adc
xchg
lds
loop
popa
pop
imul
mov
pop
mov
out
cli
dec
mov
and
xabort
inc
inc
push
aam
mov
xchg
rclb
ret
mov
jne
rclb
adc
in
aas
mov
and
sbb
mov
shll
jbe
out
sbb
fwait
aam
icebp
push
nop
idiv
in
dec
mov
and
scas
xchg
movsl
push
add
jmp
push
xchg
mov
rcrl
stos
cmc
shrb
xchg
inc
icebp
es
ljmp
inc
adc
jmp
mov
nop
mov
psadbw
xor
ja
xchg
pop
scas
xor
inc
ljmp
xor
sbb
adc
ds
lcall
and
mov
andb
scas
push
pop
mov
dec
jl
loope
pop
sub
mov
aaa
je
addl
jnp
cmp
dec
xchg
stos
not
ret
out
cmpsb
lret
fwait
inc
int
or
xor
mov
mov
stos
enter
rolb
shrl
dec
jae
xchg
mov
pop
add
jge
movsl
lea
test
rcr
mov
xor
outsb
pop
lock
lea
push
push
xchg
adc
iret
das
jo
jmp
std
pop
ja
out
int3
push
xchg
mov
ret
cmp
and
ror
inc
jg
sbb
sbb
jp
mov
imul
sub
roll
js
orl
xor
xchg
lock
repnz
jns
lahf
shlb
popa
cwtl
lods
repnz
out
push
loopne
jle
aas
ljmp
and
sbb
pushf
jmp
movl
mov
leave
cmp
movsb
roll
and
loop
popa
and
movl
nop
bound
jl
mov
push
or
pop
ss
sbb
arpl
cltd
jge
fmull
test
push
stc
sbb
pop
lahf
arpl
push
lret
xor
cmp
sbb
fldcw
push
sbb
pop
mov
inc
push
cmp
fxch
pop
int
lea
pop
cltd
mov
inc
outsb
push
arpl
mov
daa
jl
jne
aad
mov
or
cwtl
iret
call
mov
insb
adc
adcl
ret
cltd
pop
std
ds
iret
adc
or
push
test
dec
mov
mov
jg
ret
xorb
add
aam
popa
cmp
andl
scas
xchg
dec
pop
adc
outsb
pop
repz
test
nop
xchg
sub
inc
dec
mov
in
pusha
out
aad
dec
fiaddl
call
push
aam
inc
fisubrs
ficoml
out
mov
out
pusha
jb
cld
outsl
sbb
and
xchg
subl
inc
mov
test
orl
dec
ret
shrl
mov
push
jne
stos
stc
ljmp
fbstp
lods
addl
in
inc
push
int
xor
imul
gs
pop
push
pop
xchg
ret
jle
add
int
mov
inc
sbbl
xchg
mov
das
mov
popa
xchg
cwtl
jae
pop
sub
clc
fldt
not
lret
pop
dec
dec
sbb
cld
gs
shrb
repz
ret
push
mulb
les
pop
jle
cmp
mov
inc
mov
add
das
decl
mov
icebp
mov
dec
popf
xchg
jecxz
lods
inc
dec
in
nop
mov
dec
sub
out
lret
xor
les
sbb
clc
inc
cltd
mov
push
cld
mov
sbb
jp
jl
cld
push
bound
lock
fs
les
adc
leave
jb
inc
pop
fwait
rclb
or
mov
pop
inc
iret
stos
inc
fisttpll
ja
cmp
aas
push
push
rcl
test
adc
jp
push
call
mov
push
jne
push
inc
add
and
popa
add
stc
bnd
mov
test
js
xor
xor
test
jecxz
fisubs
or
daa
dec
add
stc
mov
mov
mov
or
inc
jge
xchg
ds
rcl
int
inc
in
ljmp
mov
movsl
cmpl
in
sbb
push
dec
icebp
arpl
push
mov
mov
mov
and
mov
jno
add
in
pop
mov
cltd
push
iret
push
lret
add
mov
out
xchg
push
jns
ss
adc
lahf
or
push
dec
stc
xor
jecxz
cmc
test
dec
sti
lahf
lds
jbe
xchg
sbb
jo
mov
xchg
jmp
mov
and
out
cmpsl
xor
mov
add
rcrb
jmp
repnz
cmpsl
cmp
mov
add
cmp
mov
pop
scas
loop
out
lods
in
movsl
inc
outsb
jl
mov
sahf
out
dec
dec
xchg
add
lcall
mov
bound
inc
test
add
push
push
lahf
cmp
rorl
or
dec
and
scas
push
aaa
sbb
xchg
mov
inc
popf
in
repnz
jecxz
push
aas
sub
test
push
jmp
mov
fnsave
fimuls
insl
stc
xchg
mov
dec
sub
mov
std
cs
clc
cltd
inc
xchg
jno
std
sahf
and
pop
mov
test
pop
xchg
mov
lods
popa
xor
adc
stc
pop
jbe
outsl
loopne
jl
popa
pop
inc
cmp
pop
add
push
mov
icebp
cmp
jg
jmp
adc
roll
inc
cmp
xor
leave
inc
xor
xchg
in
imul
add
or
sub
pop
ljmp
xchg
sub
dec
fdivl
fadd
loop
leave
jp
movsl
popl
ja
in
xor
add
xor
or
scas
pop
in
insl
adc
fcomps
mov
mov
cld
lea
mov
add
loopne
cmp
xchg
outsl
out
add
mov
jbe
int
mov
mov
outsl
js
test
iret
ss
jmp
jl
cmp
pushf
pop
cmp
mov
sbb
cmp
mov
dec
pop
cmp
and
ja
pop
gs
into
in
stos
or
jp
xorb
pop
lcall
dec
bnd
fstps
mov
cwtl
ja
dec
shld
notl
push
movsl
lods
ss
mov
pop
filds
dec
mov
sbb
aad
ja
clc
adcl
ljmp
and
fsubr
and
xor
ror
jl
dec
jl
ret
test
dec
cwtl
test
ljmp
cli
lret
movsl
dec
sbb
and
inc
xchg
add
sbbb
pop
das
push
inc
cwtl
div
cmpsb
insl
or
sbb
sbb
and
adc
lds
shl
shlb
outsl
dec
js
les
sbbl
stc
mov
popa
xor
adc
pop
xor
dec
dec
aad
sbbb
rcrl
dec
pminub
jge
clc
ja
sbbl
push
pop
lcall
in
xchg
mov
push
push
jl
or
xor
shr
mov
pop
adc
filds
psubb
pushf
push
subl
or
ret
movsl
mov
pop
mov
xchg
js
xchg
shr
dec
dec
aad
ret
and
push
jo
sbb
xchg
movl
mov
lret
dec
ret
das
enter
and
pop
jecxz
aam
lods
pop
lods
and
fidivs
jo
les
inc
push
mov
cmp
or
pop
mov
sbb
add
in
jmp
pop
in
add
iret
adc
dec
lcall
cmpsl
imul
cltd
in
mov
outsb
fldt
sub
mov
cmp
lahf
xlat
xchg
dec
int
mov
loopne
dec
not
rcrb
test
or
jp
mov
mov
mov
mov
fiaddl
stos
ret
push
dec
pop
je
inc
imul
pop
inc
mov
into
repnz
adc
xor
add
lret
jecxz
and
int
lock
jnp
jl
pop
mov
loope
cmpsb
bound
ja
fwait
jb
ljmp
pop
outsl
insb
lret
mov
nop
aaa
bound
pop
pop
dec
push
mov
mov
js
ss
cs
fwait
cmpsl
test
das
push
test
jnp
stos
mov
mov
ficompl
jnp
mov
std
aad
cmpsl
mov
int
dec
xchg
cmp
xor
jg
nop
add
fsubl
iret
movsb
loop
loopne,pt
push
loope
sbb
out
add
outsl
ja
mov
repnz
sub
and
sbb
fsubrl
xchg
mov
insb
xor
nop
stc
mov
jge
out
push
orb
cmpsb
enter
mov
inc
and
stc
iret
hlt
xchg
xchg
sbb
mov
iret
aas
dec
test
xor
das
sbb
test
push
fwait
outsb
movsb
add
xchg
mov
daa
dec
mov
jnp
mov
add
pushf
cmc
testl
ret
lahf
fs
cmpsl
dec
std
imul
loope
fs
adc
aad
mov
enter
filds
dec
repnz
cmp
push
fnstsw
lods
mov
adc
push
pop
cmp
adc
push
jne
icebp
idivl
xlat
sahf
cmpsl
push
notb
push
xchg
mov
jbe
push
mov
jae
cwtl
mov
xlat
xor
pop
mov
inc
fcomi
jno
xorl
cwtl
xlat
jmp
pop
push
xchg
push
sbb
out
adc
scas
sub
xchg
loop
fidivrl
cmc
xchg
fistpll
loope
lds
xchg
xchg
movsb
icebp
pop
pop
shlb
outsl
lcall
xchg
fwait
xchg
jns
f2xm1
mov
adcl
enter
add
cli
call
add
sti
xor
xchg
loopne
mov
sub
frstor
outsl
xchg
pop
ret
test
js
out
leave
out
pusha
fisubrl
and
lds
dec
repnz
pop
xchg
mov
mov
mov
mov
jle
jl
rcll
je
adc
dec
lcall
and
mov
add
adc
frstor
add
cmpsl
jmp
sub
or
enter
xor
cmpsb
cmpl
pushf
xchg
jno
mov
mov
out
mov
mov
push
mov
mov
jb
add
loopne
push
inc
mov
subb
xchg
lods
push
fcomps
into
xor
dec
movsb
mov
xchg
cwtl
ficompl
jno
dec
stos
das
fistl
fstpl
nop
lea
imul
inc
outsl
lock
pop
sahf
xchg
out
mull
leave
in
bound
nop
mov
jmp
lcall
mov
pop
int
mov
xor
or
inc
dec
add
pop
mov
rcl
les
decb
or
ret
mov
jmp
int
adcl
aam
xchg
jbe
hlt
leave
or
sbb
ret
sub
jecxz
int
inc
or
mov
cmp
pop
mov
inc
xchg
sbb
int3
daa
ret
push
ret
mov
xor
scas
movsl
iret
repnz
pushf
jo
lock
xlat
les
test
in
repz
ss
pop
mov
popa
cmp
inc
jns
das
and
xchg
cmp
inc
rorl
test
rol
mov
shl
icebp
mov
add
adc
cwtl
outsb
test
mov
push
loope
popf
fisttpl
scas
and
int3
dec
add
or
jb
push
push
lcall
imul
das
mov
push
mov
testl
add
lock
repnz
add
mov
push
adc
and
dec
inc
setge
les
push
or
pop
movsl
mov
bound
fsubs
jne
repz
inc
subl
add
mov
sbb
out
inc
inc
scas
cwtl
sub
jae
test
sbb
aas
test
sbb
jge
xchg
cmp
inc
int
pop
mov
xchg
insl
outsb
sbb
jbe
hlt
stos
adc
add
sbb
loopne
cmpsl
xor
out
sbb
fidivrl
xchg
aam
cmp
jbe
xchg
dec
hlt
scas
dec
lock
push
int3
sbb
bound
jae
cmpsb
es
xchg
cli
xchg
mov
cwtl
mov
in
ljmp
mov
push
lods
dec
clc
ja
and
mov
test
sbb
push
fst
inc
pop
push
nop
lcall
xor
arpl
sahf
movb
cld
popa
pop
mov
mov
push
push
repz
fimuls
lds
lods
cmp
xchg
cwtl
cmc
outsl
add
movsb
xchg
lds
fmuls
push
cmp
jno
push
pop
inc
adc
inc
pop
cwtl
lea
and
lods
xchg
jbe
mov
into
in
es
push
sub
xchg
mov
cmp
cld
jo
pop
cmp
iret
lods
leave
mov
lea
dec
into
jge
xor
jnp
sbb
rorb
inc
lock
jbe
lret
inc
cltd
addl
and
les
mov
loopne
ret
incl
sbb
or
in
adc
and
test
mov
bound
aas
xchg
jnp
jle
pop
inc
outsl
mov
inc
mov
sbb
cmp
mov
testb
test
pop
dec
dec
mov
ficompl
pop
ret
jae
inc
sbb
adcl
out
data16
mov
loop
fistpl
jno
and
pusha
add
mov
mov
dec
in
daa
int3
das
loope
pop
cmp
pop
push
mov
lahf
fdivs
sti
push
popf
rorl
fbld
mov
mov
aas
std
and
nop
loope
push
cmpsl
and
pop
icebp
daa
lret
add
mov
xorb
push
jp
stos
rcr
or
pop
cmp
xor
cmp
sbb
and
or
adc
aam
pmulhrsw
lock
ret
addr16
testb
push
ss
adc
xchg
imul
and
outsb
lcall
cmp
add
jecxz
jge
nop
pop
add
mov
cwtl
leave
and
in
sub
inc
mov
xchg
add
ds
sbb
lahf
fistl
xor
push
add
push
popf
mov
aaa
and
push
nop
loopne
cmpsl
xchg
sbb
sub
lods
gs
mov
adc
sbb
loopne
faddp
lret
f2xm1
lock
repnz
sbb
repnz
ja
sti
data16
dec
decb
cmpsb
inc
les
or
adc
in
xchg
add
jecxz
shlb
sarl
prefetchw
scas
sub
lock
inc
adcl
dec
mov
ss
xchg
mov
push
pusha
repnz
popf
cli
shl
sbb
loope
repnz
mov
mov
or
imull
pop
push
mov
mov
sahf
or
dec
in
test
mulb
mov
adc
jecxz
data16
shl
fwait
sub
lea
sub
sub
or
gs
scas
das
cmp
dec
cmp
mov
pop
add
mov
iret
sti
add
mov
aas
xchg
or
mov
or
imulb
es
cltd
and
fpatan
or
cwtl
xor
mov
sbb
mov
cmp
cld
popa
adc
test
mov
adc
or
mov
push
sub
pusha
aad
aad
adc
cmpsb
stos
lahf
jnp
xlat
in
mov
mov
ja
jae
pop
push
imul
in
pushf
ss
hlt
lock
sub
scas
or
jge
cs
jle
mov
adc
dec
imul
jl
add
adc
push
andb
inc
cmp
xchg
cmp
js
and
outsb
xchg
dec
or
xor
in
lock
sahf
movsb
jp
in
ficoms
pop
addb
test
push
sub
jns
jbe
fdivl
outsl
add
sbb
fsubrl
mov
adc
js
jle
xor
popf
push
out
push
inc
cmp
jns
imul
loope
subl
add
ret
ret
stc
jnp
xchg
mov
cmc
mov
mov
add
iret
bound
inc
jl
jae
cli
stc
mov
leave
inc
xchg
xor
sbb
adc
je
mov
inc
idiv
push
push
push
cmp
dec
xor
lock
repz
cwtl
xchg
mov
or
lret
fs
xchg
pusha
cwtl
mov
xchg
lahf
adc
push
adc
jno
out
mov
mov
cmp
das
dec
stc
ja
bound
pushl
cmp
xchg
repnz
out
es
mov
xor
xchg
or
xchg
mov
mov
mov
addr16
and
out
icebp
mov
jne
iret
cld
adc
add
in
loop
and
inc
pusha
imul
pop
popa
pop
add
mov
adc
shll
imul
dec
add
and
adc
pop
lock
mov
mov
sub
mov
push
movb
add
sub
xchg
ficompl
push
and
push
add
mov
mov
test
adc
inc
sbb
push
mov
mov
mov
mov
cltd
and
std
jno
mov
jns
jge
popa
sti
sub
int3
and
inc
cltd
or
add
ljmp
push
pop
add
mov
jns
int
push
js
and
mov
loop
clc
sub
stos
sar
mov
add
adcl
les
fstps
mov
push
out
cmp
xchg
sarl
jmp
sahf
fistpl
lcall
std
imul
divl
es
pusha
mov
sub
mov
push
xchg
push
cmc
pop
sub
inc
in
xor
sub
movsl
scas
dec
cld
adc
nop
sbb
add
mov
std
pop
sbb
aaa
je
xchg
xchg
ja
jnp
sbb
pop
pop
pop
pop
pop
jecxz
mov
sub
xor
inc
mov
pushf
mov
adc
fimull
dec
adc
sbb
xlat
push
push
stos
adc
jg
xchg
dec
in
and
adc
or
pop
fs
scas
rcrl
nop
push
adc
stos
mov
icebp
into
rcr
aaa
int
mov
xchg
jbe
or
add
inc
es
ja
or
loope
xchg
mov
sub
xor
push
jnp
lahf
cld
stos
repnz
or
out
mov
pop
into
aad
sub
aaa
aam
xor
mov
in
and
inc
aad
pop
idivb
ret
push
push
xor
jecxz
adcb
popa
mov
es
mov
xor
lahf
pop
cmpsb
push
test
or
dec
arpl
and
or
adc
fwait
aad
add
pop
cli
sub
mov
mov
lods
push
ret
pusha
adc
sbb
pushf
cmc
loop
arpl
out
adc
shll
test
fstl
sbb
dec
ja
lods
shll
mov
cs
xor
inc
cli
cmp
pop
jo
movsb
add
das
outsl
xchg
jb
nop
and
push
imul
jne
mov
push
icebp
mov
stc
andb
sub
repz
xor
insl
pop
scas
aad
fs
jno
mov
mov
cwtl
xor
jnp
xchg
jb
fidivl
in
out
mov
xchg
and
lret
mov
cmpb
mov
insb
inc
ss
cmp
mov
dec
cmp
jnp
push
in
ljmp
cld
out
iret
xchg
mov
dec
xlat
push
inc
and
jle
mov
or
mov
or
and
ljmp
ja
xchg
mov
jle
xchg
rcl
jg
adc
inc
std
xchg
test
lds
loopne
repnz
rolb
mov
ss
or
roll
mov
jge
cmp
into
aas
mov
es
leave
lds
pop
insb
lods
sbb
ret
cmp
jg
pop
movq
push
shrl
subl
adc
xchg
mov
sub
in
inc
scas
fcompl
icebp
cmp
aad
lahf
cmp
and
cmp
in
push
cmp
iret
mov
jb
mov
inc
mov
ret
sub
mov
ss
xor
shlb
outsb
pop
std
fdivrl
insb
imul
cmpsl
pop
jmp
sbb
mov
mov
imul
adc
push
in
sub
sbb
push
sarb
cmp
or
jno
pop
ret
or
mov
aam
loope
xchg
xor
out
in
clc
scas
mov
loopne
loop
pop
cwtl
inc
sbb
add
cld
outsl
in
xor
out
arpl
sbb
cltd
mov
enter
arpl
adc
in
add
jl
xlat
mov
dec
mov
cmp
mov
inc
push
ret
dec
mov
aas
js
lahf
sbb
adc
mov
fs
cmc
sarb
pop
dec
lea
es
dec
outsl
mov
mov
call
popf
jp
fcoms
out
repz
sbb
jg
ds
xchg
les
inc
sahf
cmpsl
call
lret
xor
inc
sbb
dec
lcall
fstl
repz
mov
out
out
sub
cli
ja
daa
mov
cmp
pop
fistl
fidivrl
popa
testb
insb
bound
lea
jbe
cmpsl
jb
adc
mov
and
xchg
jae
imul
xor
adc
pusha
adc
xchg
add
xchg
repnz
inc
push
jl
movsl
pop
std
and
inc
push
dec
sub
sub
pop
sub
lret
loopne
stos
inc
stos
std
ds
aas
cmpsb
test
insl
adc
rclb
pop
jl
mov
jle
imul
imul
movsl
or
in
loop
cmp
cld
popa
call
sub
imul
and
add
jbe
out
daa
xchg
add
jne
cmc
mov
mov
lods
fcmovu
fistpl
push
jnp
stos
xchg
out
jo
int
xchg
add
dec
pop
loop
mov
adc
add
sbb
in
xor
es
inc
mov
movsl
adc
data16
dec
fstl
mov
adc
xchg
and
mov
cmp
ljmp
ret
cmp
jo
pop
popf
ss
pop
cmp
in
jbe,pn
xor
lods
aas
xor
loopne
iret
aaa
fstl
out
jecxz
cmp
pop
stc
icebp
xor
jo
outsl
mov
cmpb
aam
outsl
xor
ficomps
call
cmp
fistpl
cmp
scas
movl
insb
enter
repz
sub
cld
andb
push
cmp
inc
lods
push
rcrl
icebp
lds
xor
mov
cmp
imul
mov
sub
mov
out
mov
jo
loop
fimull
sub
mov
xchg
cwtl
sbb
push
sar
xchg
pop
xchg
mov
sti
iret
dec
mov
sub
adc
pop
jb
mov
jecxz
aas
add
inc
mov
faddl
int
inc
cmpsb
clc
dec
jo
adc
cmp
cmpl
xor
mov
xchg
cmp
int3
xchg
xor
mov
aad
pusha
mov
ret
mov
ja
sbb
movsb
popa
movsl
or
xchg
je
cs
aas
mov
sbbb
lea
mov
inc
add
and
fucom
cs
loopne
pop
add
scas
jl
hlt
pop
pop
js
push
scas
enter
mov
testl
and
add
xchg
stc
jae
adc
outsb
mov
pop
test
adc
push
jl
mov
lods
jae
adc
push
je
pop
xor
dec
mov
sahf
add
cmp
rcrl
fxtract
adc
and
cltd
loope
adc
out
jge
popa
jo
outsl
xor
adc
in
cmp
ret
push
inc
sub
and
mov
incl
lds
sub
hlt
aam
mov
pop
mov
mov
addb
cwtl
push
jl
nop
jae
rcrb
inc
test
and
push
mov
repnz
adc
xchg
into
lea
imul
xor
sub
fwait
cmp
mov
pop
push
rclb
xor
add
xchg
ss
cmp
in
das
jno
sbb
rcrb
adc
jge
addl
dec
cltd
in
stos
popf
sar
jne
and
mov
icebp
adc
add
loope
stos
mov
je
sub
popa
and
sbb
dec
aaa
and
cmpsb
out
dec
inc
scas
and
aad
jp
psllw
pop
shrb
outsl
in
cmp
pop
subb
fcoml
ret
xor
mov
in
pop
sbb
lea
jne
es
test
lret
pop
out
movaps
cmp
push
lahf
push
into
push
rclb
rdtsc
cmc
cmp
xor
jns
mov
jp
inc
jae
mov
ss
aam
cmc
cltd
icebp
fdivl
sub
adc
je
and
jle
push
xchg
xchg
mov
inc
adc
negl
cmpsb
sub
cmp
inc
and
mov
shll
push
imul
insl
or
mov
fcmovbe
pushf
pop
lods
or
jmp
push
test
adcb
orb
mov
cwtl
out
pop
or
fistpl
fidivl
mov
ss
push
mov
pop
movsb
jns
fs
mov
fsubrl
dec
sbb
jp
mov
xor
ljmp
call
js
xor
enter
or
std
and
xchg
test
in
xchg
pop
mov
xchg
sbb
jmp
fucomi
aaa
add
adc
xlat
std
clc
jb
add
out
jle
aas
push
div
mov
movsl
xchg
ret
iret
imul
shll
in
xchg
cmpsb
jge
mov
cwtl
sub
aam
add
adc
sbb
jmp
jno
push
test
insb
pop
push
cmc
cmp
mov
fidivl
inc
sti
adc
inc
addr16
add
jp
mull
pop
jp,pn
xchg
bound
push
mov
pop
inc
gs
in
mov
jl
jo
in
lret
cmp
jmp
pop
inc
insl
jo
lcall
int3
xchg
ss
pop
adc
sbb
jb
inc
or
popfw
mov
mov
aaa
pop
ljmp
push
jb
popa
out
inc
insl
outsb
lahf
jns
sbb
int
jo
xor
test
mov
mov
mov
mov
je
adc
jg
jns
cwtl
lret
mov
add
enter
movsb
and
std
mov
add
cmp
jle
push
adc
nop
les
in
pop
dec
or
call
cmp
and
lahf
jp
hlt
fistl
fcomip
dec
outsl
inc
subb
lock
mov
or
pop
fldenv
idivl
pop
push
adc
in
adc
mov
imul
iret
adc
aas
mov
jnp
adc
ss
push
dec
inc
push
imul
fwait
jge
adc
mov
inc
jno
dec
push
cs
pop
sub
mov
clc
stc
adc
enter
clc
xor
movsb
fcomi
jae
scas
dec
jmp
adcl
out
loop
adc
aaa
lods
test
daa
and
mov
in
and
cli
loopne
in
push
pop
adc
iret
inc
ficoms
mov
adc
adc
add
add
enter
movl
mov
mov
lret
cmp
xor
mov
xchg
jnp
fistps
push
mov
sbb
pop
xchg
pop
mov
fldt
fmull
push
xchg
faddl
cmp
mov
lds
xor
dec
test
sub
or
push
sti
sbb
ret
jge
mov
mov
and
mov
mov
repnz
and
sub
lds
aad
imul
pop
ljmp
cltd
cmpsb
pop
stos
xor
push
in
cmp
in
mov
mov
jg
mov
jge
enter
inc
pop
sub
cmp
rclb
testl
popa
shlb
mov
jecxz
neg
pop
idivl
test
sub
mov
repnz
inc
and
adc
or
dec
popa
icebp
movsl
mov
mov
adc
movsb
mov
mov
mov
inc
cmc
lock
les
and
mov
loopne
jl
push
xchg
jge
add
jecxz
fnstenv
push
loopne
xchg
icebp
sub
cs
dec
xchg
cmpsl
and
xchg
das
inc
sbb
icebp
jle
inc
test
adc
push
fstp
loopne
popf
daa
and
push
xchg
pop
cli
inc
xchg
sbb
adc
jge
loope
and
cwtl
jle
or
sbb
decl
rolb
nop
icebp
fs
cmp
pushf
sti
sarl
mov
dec
lds
aas
dec
cmpsb
push
xchg
int3
insb
adc
out
mov
dec
inc
ret
add
clc
lret
push
data16
xchg
adc
gs
loop
into
and
loope
fwait
ss
ss
es
push
pop
lret
stos
mov
pop
xchg
dec
call
insb
stc
mov
rcrl
mov
fdivrs
int3
mov
xor
inc
in
lds
push
rcrb
popf
nop
cltd
jbe
fadds
sbb
call
xchg
adc
xchg
sbb
out
lds
je
add
ret
in
addr16
out
inc
imul
std
inc
xchg
cmp
es
and
fisttps
jl
fwait
mov
lea
cs
adc
and
and
das
rorl
jo
sbb
dec
mov
fidivrs
jbe
nop
dec
pop
jb
mov
xor
push
jmp
push
imul
lods
or
loopne
inc
in
test
adc
jecxz
xor
mov
imul
insb
movsb
mov
in
dec
out
mov
sub
stos
jns
sub
jp
ret
xchg
int
arpl
xchg
into
pop
ljmp
cmpsb
jae
mov
push
jl
cmp
jnp
leave
aaa
loopne
push
cmp
fdivl
in
rcrb
sbb
rclb
push
and
xor
pop
push
repz
out
ljmp
stos
into
sbb
pop
mov
inc
ret
fisubrl
arpl
inc
cmpsb
cs
mov
mov
sub
jb
into
cs
lret
mov
jmp
push
fcomps
outsb
push
push
jp
or
cmpsl
pop
sbb
cmpsb
jecxz
out
add
icebp
jl
mov
test
mov
add
roll
xor
mov
cmc
lahf
push
inc
inc
inc
arpl
jo
popf
xor
lds
pop
mov
adc
leave
xchg
push
rolb
loope
jne
fucom
aam
jl
shlb
jae
rclb
push
xchg
inc
adc
xchg
cmpsl
jp
cltd
mov
or
dec
mov
icebp
jbe
jmp
cmpsb
lahf
adc
push
sub
aad
enter
mov
mov
mov
cmp
fwait
pop
mov
cmpsl
push
and
dec
xor
addr16
roll
adc
dec
into
bound
test
pop
dec
mov
insl
rcrl
adc
dec
stos
imul
push
pop
js
leave
inc
sub
sti
mov
fs
mov
xor
pushf
sbbb
out
out
shlb
rcrl
push
ss
jg
xor
test
ljmp
daa
jne
test
pop
adc
push
jbe
cmp
sbb
push
push
lods
lret
imul
pop
xchg
mov
xlat
xchg
xchg
dec
adc
repnz
pop
fistps
daa
sbb
mov
imul
push
sub
fcmovne
cmpsb
pop
fsubl
dec
andl
mov
mov
popf
popf
mov
add
into
movsl
mov
lret
jnp
and
in
in
inc
negb
test
jno
inc
add
hlt
imul
push
jp
inc
add
cld
dec
sti
jae
and
xchg
ss
sti
scas
cmp
or
js
mov
inc
mov
push
repnz
adc
jle
push
adc
vcomisd
adc
mov
fimuls
movsl
adc
push
mov
dec
cmc
push
lret
arpl
push
aaa
jnp
arpl
fwait
sbb
push
push
push
push
jmp
fstpt
stc
or
ds
scas
fisubrl
mov
sbb
xorb
out
dec
push
imul
movb
jb
cmp
cli
mov
repz
add
fwait
je
jmp
pop
in
push
pop
ds
inc
and
scas
cmpsl
pop
cmp
in
loopne
sbb
dec
push
int3
in
outsl
fildl
and
push
push
lds
pop
roll
insb
adc
faddl
or
sbb
sbb
imul
fcomi
dec
mov
in
imul
mov
adc
jo
jge
in
pop
arpl
jl
popf
in
mov
add
hlt
js
out
cmc
pop
es
mov
mov
mov
fcompl
das
repz
dec
or
push
subl
mov
sub
dec
lods
je
jmp
popa
xor
sar
xchg
xchg
jg
jnp
jle
cs
inc
push
xor
push
push
nop
cli
adc
ffreep
mov
hlt
and
mov
loopne
flds
cmp
xchg
js
mov
push
and
ljmp
ds
lahf
movsl
dec
scas
mov
jmp
sti
mov
push
loopne
fdiv
and
fst
xchg
push
or
movsb
xor
mov
lahf
cli
imul
xor
mov
out
icebp
insb
mov
inc
inc
jmp
dec
sub
andl
icebp
stos
sub
mov
cld
add
xor
lret
push
jg
dec
push
sbb
pop
mov
nop
sub
ljmp
shll
mov
cmp
jge
ja
push
push
pop
fmull
pop
or
adc
sub
cmp
cld
xor
out
cmp
xor
mov
orl
rclb
int3
mov
inc
scas
lods
and
jl
lock
cs
xchg
roll
test
nop
adc
or
les
mov
cltd
dec
stos
aam
dec
pop
or
aam
fs
xchg
out
sti
mov
sub
subb
fsubrs
stc
loop
cmp
mov
icebp
je
jl
mov
cwtl
test
pop
sbb
mov
cmp
xor
bound
in
mov
dec
or
stos
pop
std
dec
out
insb
inc
insl
cmp
in
sahf
push
xchg
pop
lock
sahf
in
add
aaa
jno
insl
xchg
jo
cmp
shrl
les
and
or
mov
hlt
int3
iret
je
int3
ret
mov
or
flds
adc
dec
pop
hlt
or
xchg
imulb
xchg
rorb
daa
cmp
add
test
mov
sbbb
dec
out
xchg
stos
cwtl
pushl
lods
push
mov
xor
mov
add
mov
insl
ds
add
jne
lds
cmp
dec
lcall
xor
lods
andl
fs
fdivr
jnp
xchg
leave
repz
out
add
insl
xchg
sbb
push
lods
sbb
mov
push
out
loop
inc
ret
inc
jno
in
mov
loope
inc
rcll
mov
js
movsl
xchg
std
imul
lret
adc
mov
imul
xor
and
push
add
mov
incl
adc
bound
in
in
mov
mov
dec
add
les
mov
jns
add
fwait
gs
xlat
jb
test
dec
mov
fsubrs
xchg
les
imul
cld
fnstenv
sbb
mov
imul
test
fdivs
fcompl
jbe
cltd
lret
sti
adc
inc
jns
mov
stc
repz
pop
adc
xchg
in
inc
outsl
pop
jbe
sub
dec
rclb
cmp
mov
repz
mov
xor
test
and
mov
pushf
adc
in
dec
iret
and
in
or
sahf
mov
mov
mov
lods
sbb
sub
cmp
push
ss
rcrl
sti
sub
mov
fs
pop
insl
sbb
and
or
outsl
push
xchg
mov
inc
das
call
xchg
cmp
pop
iret
cmp
je
xchg
lods
out
push
ja
add
notb
loopne
mov
lds
sarb
pusha
and
adc
pop
int
dec
or
jg
idivb
push
cmp
daa
push
jbe
adc
lcall
sub
lret
mov
mov
cmpsl
into
movl
fwait
adc
stos
mov
aad
adc
pop
xor
movsb
das
cwtl
mov
outsl
xchg
aad
mov
lcall
dec
inc
dec
fcoms
enter
jo
or
jae
xchg
loopne
push
dec
jb
arpl
enter
enter
mov
fs
xor
and
mov
add
int3
orl
lods
pop
inc
in
testb
sahf
in
xchg
lret
arpl
xchg
pop
push
pop
ffreep
cs
push
cmpsl
xchg
out
xchg
push
cs
lahf
mov
sub
xor
or
jno
push
jmp
jno
xchg
sahf
inc
sbbb
jmp
cmpsl
popf
pop
imul
mov
mov
orb
jb
sub
cmp
test
pop
mov
jg
pusha
aad
inc
bound
or
add
mov
xchg
mov
movsl
insb
jae
test
fcmove
lcall
arpl
mov
std
ljmp
xor
sub
mov
adc
sub
adc
sarl
enter
fstl
ret
xor
in
mov
or
pop
orb
les
push
push
or
add
int
add
pop
push
inc
in
add
or
xchg
add
stos
push
add
mov
lahf
xor
out
sbb
jnp
inc
xchg
or
pop
out
ficompl
aam
mov
cmp
jle
fldl
not
mov
mov
adc
pop
and
xor
call
in
push
adc
mov
adc
pushf
adc
mov
scas
inc
adc
mov
inc
jns
jmp
aas
sbb
lcall
mov
jns
and
aas
mov
or
out
pop
sub
inc
jns
in
add
stos
pop
popf
dec
into
push
xor
stc
dec
dec
adcl
jo
stos
add
fs
jnp
fs
xor
cmp
pop
outsl
repz
push
cmpsb
mov
dec
jb
movsb
lahf
jo
bound
or
mov
lahf
insb
xor
lock
ret
repz
mov
shrb
mov
mov
lahf
sub
and
sti
fcmovnbe
pop
pop
mov
fisttps
in
mov
push
mov
push
int
scas
mov
mov
xchg
test
loopne
sbb
xchg
mov
repz
push
mov
in
inc
leave
jmp
fwait
xorb
rorb
mov
fldcw
mov
in
shl
stos
jmp
out
out
dec
push
inc
ljmp
es
jno
inc
xlat
push
sbb
push
mov
and
repz
call
mov
adc
clc
fxch
popa
ss
jg
movl
shlb
push
jo
dec
cld
and
mov
stos
mov
sbb
jge
es
bound
je
adc
flds
sbb
and
roll
inc
movsl
das
lods
mov
pop
mov
in
sbb
aam
clc
mov
jmp
xchg
bound
add
or
cwtl
pop
adcl
jne
or
adc
cmp
mov
pop
aaa
cmpsl
sub
adc
mov
cmp
push
loopne
enter
cmpl
rclb
jo
sub
movl
jmp
subl
mov
arpl
pusha
sub
stos
rcrl
sbb
push
addb
mov
ljmp
jno
sbb
push
sti
into
outsl
insl
adc
fisubrs
repz
xchg
cmp
insl
pop
pushf
sbb
push
jns
cmpsl
imul
jno
mov
sarb
mov
adc
xchg
subb
pop
mov
xchg
xorb
adc
xor
pop
addr16
stos
aas
es
int3
scas
push
lcall
addb
sahf
mov
daa
xor
add
test
xor
or
stos
call
out
rolb
jg
mov
cmpsl
dec
push
dec
or
aam
lret
scas
orb
dec
loopne
push
fsubrp
mov
aaa
cmp
scas
leave
xlat
mov
xchg
jle
xchg
fmuls
inc
mov
mov
add
sbb
sahf
mov
xchg
daa
aad
cmp
out
or
out
inc
add
inc
addb
and
sti
sbb
lods
les
xor
iret
outsl
jbe
dec
adc
add
jbe
outsl
rep
mov
dec
mov
sub
loope
mov
hlt
xchg
loope
imul
add
push
mov
clc
leave
aad
cld
xchg
aad
dec
push
repnz
xchg
adc
lds
clc
es
adc
add
mov
adc
cltd
cmpsl
push
insl
out
inc
add
clc
inc
out
xlat
or
push
cs
push
xor
sahf
sub
push
cmpsb
jmp
or
mov
xchg
test
test
sbb
push
into
jbe
cmp
roll
outsb
js
push
xor
sub
imul
test
outsl
lret
adc
jle
int3
pop
cld
jp
cmp
or
loop
stos
jp
popf
mov
sar
cld
daa
jo
lea
dec
mov
lea
inc
push
and
adc
cmpsb
jmp
push
push
or
xor
pop
xchg
ds
sub
cmpsb
push
push
iret
sub
imul
addr16
mov
notb
sbb
roll
mov
mov
mov
adc
enter
push
outsl
outsl
inc
jne
cmpsb
jl
dec
scas
mov
xchg
jge
in
shrb
dec
out
pop
push
jg
mov
int3
xor
push
xchg
inc
dec
mov
inc
test
push
mov
or
out
shrl
add
aas
fidivs
pop
int
in
stos
lcall
pop
fwait
adc
jg
fists
pop
das
or
jno
xorb
shr
mov
outsb
dec
or
iret
push
outsb
das
cmp
and
pushf
movsb
adc
mov
adc
fdiv
inc
and
xchg
mov
lahf
push
add
fsub
mov
dec
clc
inc
fs
mov
daa
rorl
daa
call
mov
sbb
outsl
sub
gs
mov
push
sahf
or
adc
repz
inc
xor
js
mov
inc
fs
ret
lret
pop
jnp
sbb
fimuls
sub
mov
rcrb
push
aam
add
pushf
xor
and
sti
flds
xor
sub
daa
into
push
mov
sub
in
cmpsb
nop
ficoml
jne
pop
dec
into
mov
inc
inc
mov
pop
push
pop
jns
ss
push
test
sub
or
and
popa
fst
outsb
int3
mov
xlat
sbb
cmpsl
pop
mov
sub
test
push
aad
enter
dec
sahf
adc
pop
cmpl
subl
ret
pushf
mov
adc
jp
pop
movsl
fwait
mov
jne
mov
sub
sbb
inc
cmp
sbb
xor
in
movsb
loop
fsubrs
stos
pop
mov
lret
mov
xchg
sub
repz
cmp
mov
mov
xchg
dec
lock
repnz
push
pop
push
xchg
jmp
mov
and
mov
jbe
mov
fisttps
notb
push
roll
rcl
frstor
in
pop
push
stos
rorb
inc
nop
scas
jecxz
enter
inc
aas
jle
dec
insl
mov
mov
call
idivb
sbb
or
loope
test
push
into
das
dec
or
repnz
and
js
fwait
pop
add
sbb
add
lock
subb
lea
mov
xchg
lds
loop
scas
call
cmp
test
aaa
mov
xchg
cmc
cli
sbb
push
rorl
mov
cmp
or
and
and
add
test
push
jecxz
mov
int
sbb
xor
call
add
loop
dec
mov
mov
lahf
pop
xchg
xchg
mov
lds
insb
stc
lods
xchg
or
cld
mov
mov
xchg
and
and
inc
push
cmc
lret
aaa
pop
fmull
dec
mov
mov
stos
inc
aas
outsl
das
bnd
sar
call
mov
sbb
xchg
pusha
inc
ret
mov
pop
inc
stos
xor
fwait
inc
fcomps
mov
pop
jns
jmp
into
std
push
gs
fcomp
xchg
je
xchg
sbb
dec
inc
or
sbb
pop
ret
setb
adc
mov
lods
cmp
pop
adc
js
mov
fisubrs
inc
fnstenv
imul
lock
fcoms
out
test
out
jno
sar
adc
cs
push
insb
cmp
fld
in
mov
sbb
inc
in
jbe
mov
mov
pop
push
jbe
addl
dec
fistps
sub
sbb
adc
lods
js
or
inc
xor
dec
dec
pop
leave
in
dec
daa
lcall
out
mov
mov
xchg
mov
sub
jae
pop
stc
fs
push
and
int3
fdivs
pop
xor
icebp
or
mov
pop
mov
add
push
cmc
popf
and
jmp
imul
loopne
aad
aas
pop
cltd
push
imul
stos
sbb
mov
insl
dec
pop
lahf
add
jb
imul
pop
sbb
out
pop
out
lcall
mov
mov
mov
insb
dec
add
sub
add
bound
mov
cmpb
or
and
iret
pusha
aad
add
push
and
mov
mov
test
pop
pop
xchg
ret
sbb
aam
jnp
xchg
out
mov
jl
inc
inc
mov
ret
stc
ret
aas
addl
pop
addr16
mov
mov
movsb
xor
aaa
jbe
sub
mov
jle
push
fnstcw
sbbb
dec
mov
ficoml
xchg
int
sub
xor
enter
push
xchg
pop
adc
daa
loop
inc
imul
stos
mov
outsl
pop
mov
or
popa
pusha
cmp
subl
inc
fidivs
cmp
roll
cmpl
dec
cmp
mov
mov
add
inc
les
lcall
clc
dec
movsb
xchg
outsb
aas
cwtl
cli
xchg
add
xchg
xchg
push
aad
fs
dec
sbb
xchg
movsl
jecxz
inc
dec
add
call
mov
and
push
lcall
ja
out
jmp
out
sbb
push
xchg
push
push
inc
lock
ds
popa
stos
int3
fcmovne
sub
ja
pop
sti
movsb
iret
cs
push
lea
pop
ror
and
fcmovnb
xor
mov
addr16
clc
pop
mov
xchg
jmp
inc
shrl
mov
aas
push
in
lods
xchg
out
cli
pop
fadds
addr16
insb
sub
mov
inc
repnz
push
jne
sbbl
jbe
jno
test
sub
rcl
test
xchg
lods
leave
fidivs
push
insb
fstpt
stos
mov
ds
fs
orl
out
inc
pusha
sbbb
sub
push
push
mov
xchg
test
pusha
push
xorb
add
pop
lock
jl
iret
pop
mov
call
rcrl
pop
xchg
subl
jle
push
push
mov
insl
inc
inc
fcmovne
aam
xor
repz
fs
mov
mov
jb
rclb
dec
gs
sbb
bound
je
sbb
popl
xlat
add
push
hlt
adc
mov
and
das
pop
mov
imul
xchg
pop
out
lock
push
sub
push
lret
out
and
popa
roll
dec
mov
jle
cmp
add
or
sbb
dec
cmp
fcomi
and
and
ljmp
nop
stos
scas
pop
orb
add
jo
xor
sub
aaa
dec
cli
push
jne
jo
outsb
pop
push
push
mov
xchg
cs
adc
mov
inc
stos
dec
std
sub
and
jecxz
push
or
lcall
or
lahf
sub
inc
add
pop
call
cmp
jecxz
and
fisubl
notb
loopne
adc
dec
sbbb
sti
stos
out
jbe
cltd
adc
shrl
mov
imull
pop
in
xchg
lret
sarl
sbb
repnz
inc
loopne
pop
aad
push
mov
mov
dec
push
and
clc
popa
lahf
dec
lcall
test
call
jbe
stc
in
sbb
sbb
jle
cmp
add
mov
lds
cli
cwtl
inc
lods
xchg
adc
push
pop
xchg
or
ss
pop
shlb
int3
mov
sub
insl
xchg
rcrb
lcall
fs
icebp
lods
cmp
lds
add
sub
fmulp
adc
push
xchg
je
lods
mov
leave
mov
adc
ds
repnz
xchg
adcl
xchg
cmc
pop
out
pop
sbb
pop
pop
addr16
mov
jns
loope
dec
mov
imul
cs
mov
fnstenv
sub
test
or
cli
mov
adc
out
sub
xchg
in
or
jns
shlb
pushf
jns
cmp
dec
push
int3
rorb
xor
xchg
jl
popa
pop
mov
add
push
sub
mov
mov
xchg
mov
add
int
xchg
pop
jae,pn
fwait
movsl
mov
cmp
enter
xorb
cmc
cmp
loopne
cmp
inc
popa
mov
dec
cmp
jo
push
lock
rcr
in
sub
xor
xchg
call
jnp
jno
adc
sti
dec
das
or
inc
movsb
jecxz
inc
cld
rcrb
pop
push
pop
decl
in
dec
and
movl
dec
out
xchg
pop
enter
inc
stc
pop
leave
mov
or
push
jmp
mov
inc
into
adc
in
mov
jb
lods
or
push
orb
cli
dec
xchg
mov
lahf
push
sbb
ret
add
aad
jge
push
push
ljmp
fildll
ret
out
jne
push
push
das
inc
add
test
leave
add
sti
jne
mov
and
adc
jns
repz
les
mov
hlt
inc
movsl
push
fidivrs
cs
pop
fistpll
dec
fbld
xchg
divb
xor
mov
mov
mov
fwait
sbb
push
insl
push
dec
jge
iret
add
mov
sbb
cltd
loopne
gs
addl
sub
cld
ja
pop
jns
out
xchg
pop
mov
inc
or
test
adc
jge
mov
dec
cmp
xor
cmp
mov
ja
in
int3
xor
leave
std
xchg
ss
jne
mov
inc
js
leave
or
mov
sub
dec
addl
dec
int
pop
sbb
inc
fdiv
xchg
xchg
add
inc
mov
cmc
sub
sti
es
jnp
mov
xchg
xlat
xor
mov
stos
xor
imul
lods
lahf
aas
xor
or
fmulp
std
pop
insb
or
jne
fnstenv
mov
adc
dec
shr
sub
pop
pushf
scas
xchg
dec
and
outsb
movsb
fisubrs
cmp
out
dec
clc
incl
jp
mov
inc
std
repnz
sbb
sbb
std
sahf
push
imul
sbb
adc
movsb
popf
adc
out
sbb
inc
add
jmp
fsubrs
cltd
loope
outsb
jp
outsl
adc
hlt
jg
jl
mov
jb
add
and
and
outsl
fisubs
mov
pop
or
imull
out
or
aas
push
dec
mov
scas
pop
push
and
movsb
subb
and
adc
pushw
icebp
or
xor
inc
iret
cmp
xchg
mov
sub
enter
inc
repnz
fldt
mov
xor
and
mov
xor
jb
lahf
inc
adc
mov
mov
xchg
mov
sarl
sub
adc
inc
sti
test
pop
push
popa
cmpsl
shr
aaa
mov
roll
in
repz
imul
test
jl
pusha
or
rcr
push
jne
movsl
jo
adc
pushf
or
cmc
iret
inc
mov
xor
push
inc
addb
adc
xchg
mov
pop
inc
mov
fisubs
xor
adc
aad
sarb
mov
lretw
repnz
outsl
mov
mov
popa
fcompl
or
popa
jl
enter
pop
xchg
fistl
in
fisttpll
and
add
lods
inc
add
adc
pop
pop
les
imul
repnz
pop
dec
iret
mov
bound
ljmp
imul
xor
cltd
es
int3
mov
mov
mov
push
into
in
xchg
adc
stos
test
sbb
cld
outsb
jae
adc
and
or
or
xor
lahf
or
or
sar
push
jmpw
sub
mov
icebp
push
je
mov
jns
das
mov
fidivrs
lds
shll
cwtl
adc
push
out
and
mov
jle
gs
notb
fstpt
gs
je
mov
cltd
mov
lods
fwait
pop
adc
add
dec
shlb
sub
lret
jg
call
xchg
mov
pop
xor
jge
dec
in
jmp
add
push
or
subl
jmp
sub
push
jg
bound
xchg
dec
sub
pop
sub
lahf
adc
mov
mov
cmp
xchg
push
hlt
scas
push
int
xor
inc
and
add
dec
rolb
fists
cmpsb
aad
or
dec
jge
or
fildll
out
pop
inc
mov
pop
ja
and
ret
push
add
xchg
xor
mov
jo
push
insb
aad
push
movsb
sub
mov
fcompl
mov
inc
mov
leave
cwtl
xchg
pop
and
cmp
out
cmp
stos
stos
pop
dec
stos
lcall
mov
mov
and
mov
enter
mov
jge
icebp
or
ret
fisubrs
gs
xor
shll
popf
inc
xchg
out
mov
add
mov
daa
in
push
sub
adc
es
push
or
dec
adc
fisubrl
jns
mov
jbe
pop
mov
cmp
bound
stos
jns
test
das
add
scas
loop
mov
jns
repnz
rorb
mov
fsubl
pop
inc
and
fcomps
mov
je
adc
pop
ret
loop
jecxz
fimull
sbb
xchg
push
sbb
cmp
lret
ja
mov
inc
mov
adc
mov
dec
pop
push
pop
xor
les
cld
push
mov
and
or
rol
fstpl
pop
sub
xor
inc
xchg
testl
leave
or
xchg
sbb
push
or
mov
and
jecxz
or
es
push
into
or
dec
fsts
sbb
rcrl
mov
add
sub
pop
lret
pushf
ljmp
pop
add
pop
imul
cmpsb
xchg
cs
sbb
mov
or
aas
outsb
loopne
lods
loopne
repnz
and
inc
in
js
cmp
ret
adc
cltd
jnp
mov
jmp
cmp
idivl
dec
dec
jno
xchg
out
cli
xor
add
clc
add
fisubrl
sbb
push
loop
add
imul
mov
xchg
enter
addr16
iret
xor
ud2
mov
xchg
daa
outsb
add
fcoms
call
out
fimull
in
outsl
dec
lcall
ret
into
pop
repnz
test
jb
sub
jg
lcall
fcmovb
jg
divb
cmp
xor
mov
push
outsb
sub
mov
push
sbb
int3
pop
push
inc
insb
ret
mov
xchg
es
push
and
rolb
sub
repnz
adc
cmp
mov
and
pop
loope
movsl
jmp
jne
cwtl
negb
ljmp
in
cmp
sub
mov
sbb
adc
out
jne
add
push
pop
or
test
jecxz
push
adc
jb
jno
jo
inc
movsb
xor
test
cltd
adc
adc
push
pop
outsl
and
gs
mov
mov
cs
aaa
fnstcw
sbb
sti
arpl
push
insb
mov
add
scas
std
sahf
jmp
jne
sbb
pop
mov
jbe
add
jecxz
dec
mov
pop
xor
jnp
dec
xchg
mov
xchg
addr16
aas
xor
jp
inc
iret
into
mov
movsl
sub
outsl
sbb
mov
mov
dec
or
imul
and
mov
lret
dec
add
mov
push
dec
ds
or
subb
hlt
push
xchg
lods
add
mov
iret
jle
dec
fildll
adc
fistl
xor
sbb
sub
mov
mov
xchg
jg
mov
fwait
lods
scas
cli
enter
jb
pop
aaa
icebp
pop
es
pop
in
test
cld
xchg
jecxz
mov
or
gs
sub
mov
mov
mov
lahf
pushf
ljmp
lahf
cmp
push
cmp
inc
fimuls
add
xor
shll
jmp
add
clc
push
scas
ficomps
mov
inc
lret
pop
imul
lods
cmpb
sahf
inc
fstl
push
mov
pop
inc
mov
cltd
ja
pop
cmp
sub
sti
and
jnp
adc
fcoms
es
test
pusha
xor
mov
int3
lahf
add
cwtl
popa
lods
shr
lcall
and
cld
mov
stc
cmpsb
ret
ljmp
mov
sbb
test
adc
adc
pusha
loop
push
call
mov
daa
dec
xor
mov
cli
mov
push
mov
sub
jb
lock
stos
push
sbb
pusha
xchg
imul
cld
jns
xchg
out
pop
int
xor
lock
inc
stos
or
or
sub
adcl
repnz
adc
and
arpl
pusha
clc
ret
or
sahf
stc
addr16
sbb
adc
and
jns
xchg
pushf
sbb
cmp
push
and
add
sub
sar
mov
lret
ja
stos
out
out
mov
xor
sti
in
cmp
xchg
stos
cwtl
cmp
and
bound
ss
jl
and
ret
stos
dec
dec
dec
sarb
test
xchg
inc
ror
and
xchg
mov
arpl
ljmp
dec
loopne
ret
stc
mov
pop
jl
cmp
sub
lock
imul
dec
ss
jp
cmc
xchg
add
sbbl
repz
pusha
pusha
int3
adc
push
or
lods
mov
insl
add
inc
jne
cmpsl
push
int3
jne
data16
aad
mov
cmp
in
scas
dec
sbb
xor
push
stos
fcoml
fs
inc
pop
int3
sub
sarb
add
or
bound
push
femms
cs
cmp
imul
inc
mov
jp
sbb
int
imul
xor
inc
sub
int3
mov
xchg
cmc
push
dec
fcomps
imul
or
aaa
punpckldq
push
outsb
mov
cmpsl
fwait
loop
outsb
lcall
add
mov
cmp
cmc
stc
lahf
popf
leave
push
pop
pushf
inc
inc
fcmovnbe
jmp
daa
inc
imul
ror
in
sysenter
xbegin
rcrb
push
add
mov
adc
mov
mov
ret
pop
jl
sub
sub
inc
addr16
sub
add
out
mov
push
jp
add
movsl
sub
loop
push
out
pop
movsb
scas
jmp
popa
fiadds
and
inc
inc
sbb
into
faddl
xchg
test
fdivrl
push
in
out
dec
call
inc
int3
jns
adc
call
scas
ja
test
push
roll
leave
dec
pmulhuw
mov
pop
sbb
jmp
sub
ja
sahf
mov
add
cmp
fcompl
decl
lret
mov
sub
pop
lock
sbb
mov
dec
dec
in
sub
dec
test
adc
add
xchg
scas
scas
sbb
imul
shrl
movsb
test
sub
inc
fcomi
int
andb
aaa
stc
inc
xor
insl
pop
dec
insb
ds
fs
test
inc
into
or
add
lods
xchg
aam
fwait
push
call
aad
dec
inc
std
push
jae
jle
test
cmp
and
and
imulb
inc
dec
pop
jmp
xor
sbb
pop
addr16
mov
test
ja
fimuls
and
out
mov
loop
mov
pop
pop
sbb
xor
enter
add
sub
jae
dec
cmpsb
cmp
add
jl
scas
int
inc
into
push
xchg
push
fistps
inc
aad
in
sbb
pop
ret
or
or
sbb
jge
iret
add
mov
mov
jns
movsb
into
inc
xchg
inc
jnp
bound
adc
push
inc
stos
mov
or
push
leave
lret
out
int3
nop
cmp
mov
enter
cmpsb
xchg
mov
ds
pop
into
mov
push
xchg
lods
ret
cs
cmp
jmp
lahf
cmc
fs
add
mov
outsl
push
cmpsb
xor
push
testb
dec
sub
fisttpll
ret
push
mov
das
inc
xor
or
inc
in
aaa
pop
dec
int3
idivl
lods
subb
das
ja
dec
cmpsb
jnp
icebp
leave
push
dec
xor
mov
fiadds
out
xlat
fldcw
lds
lcall
loope
insl
dec
pop
fcoml
jg
cmp
repnz
jae
xchg
xchg
loopne
mov
cmc
jp
ret
fisubs
jmp
mov
inc
add
mov
mov
add
xor
bound
cmp
adc
ljmp
hlt
or
add
jo
movsb
add
jmp
lret
mov
inc
mov
push
fldcw
stc
fists
mov
test
xchg
mov
cmp
fwait
jl
dec
movsl
sbb
add
xor
imul
lret
insl
lcall
lcall
jle
rcll
inc
imul
sub
ret
mov
aad
enter
aaa
mov
mov
mov
push
imul
xor
gs
arpl
jns
xchg
and
inc
lahf
dec
rclb
imul
push
xchg
sbbb
push
xor
pop
dec
or
inc
cltd
notl
dec
mov
shlb
scas
push
mov
pushf
dec
shll
sahf
imul
in
adc
outsl
je
mov
add
pop
fcoms
xor
test
fstpt
or
push
jo
iret
adcb
cs
test
pusha
jne
fwait
mov
jno
cs
cmc
jne
scas
sub
pop
out
lcall
xlat
movsl
mov
ja
mov
pop
jp
fisubs
fcomps
movsl
fldt
and
inc
mov
test
sbbb
movsl
push
adc
ja
xchg
jecxz
inc
imul
xor
mov
test
xorb
sbb
mov
xchg
pop
mov
addr16
and
cmc
stos
add
adc
ficoml
pop
xor
and
mov
shrl
lahf
inc
andb
es
imul
hlt
pop
and
sahf
ret
in
mov
ret
adc
mov
and
outsl
imulb
ret
aas
outsb
push
inc
cmp
shrb
out
pusha
and
mov
jbe
pop
adc
jns
sub
ret
pop
daa
xchg
into
sub
andb
xchg
dec
clc
outsb
das
sub
pop
pop
jnp
pop
push
shr
xor
in
dec
sub
xor
test
das
pushf
cmp
cmp
lock
fucompp
into
hlt
mov
push
js
cmp
inc
cmc
jge
dec
fwait
ds
cld
pop
sbb
std
hlt
push
adc
add
and
lods
mov
sub
ss
and
int3
scas
hlt
test
cmp
inc
adc
jmp
nop
stos
mov
pop
mov
pop
imul
push
stos
cmovno
dec
xchg
mov
fwait
mov
inc
inc
mov
fucomp
stos
mov
fs
mov
push
in
sahf
push
add
outsb
push
outsl
shrl
jb
loop
sbb
xchg
pop
and
in
fcompl
fisubl
jge
in
mov
push
nop
das
mov
xor
push
lods
push
imul
and
mov
out
pusha
push
js
mov
js
aad
sub
mov
mov
aam
mov
shll
in
lds
or
mov
mov
sub
fidivrl
fildll
dec
adc
frstor
push
pushf
and
in
and
dec
enter
into
sub
push
imul
sbb
ret
repz
sahf
xor
cmpsl
adc
gs
push
adc
jo
sub
inc
xor
inc
xchg
and
pop
and
rorl
jmp
loope
add
jmp
jb
mov
xor
mov
loope
adc
mov
cmp
sub
mov
mov
popl
dec
inc
jmp
call
shrl
jp
mov
push
inc
shrb
pop
xchg
jae
mov
loopne
push
cmp
in
mov
pop
lcall
rorb
js
or
xchg
clc
jge
xchg
mov
sub
roll
mov
and
adc
add
arpl
pushf
fmul
cltd
sbb
push
ljmp
xchg
xchg
test
mov
dec
mov
push
out
fs
push
push
sub
outsl
xchg
ret
dec
loope
roll
fmull
pop
inc
cmp
or
sbb
mov
sbb
pop
mov
cmp
pop
into
add
sbb
sub
push
out
push
mov
test
mov
fmull
and
mov
add
loop
in
pop
and
add
cmc
fnstsw
push
and
mov
addr16
ret
pop
push
mov
fs
or
rep
sbb
mov
in
push
pop
push
lods
sbb
fs
dec
jno
and
sti
jo
sub
jae
leave
add
jecxz
xchg
or
loop
into
sub
fs
ja
outsl
push
sub
pushf
aas
mov
mov
rcrb
loopne
inc
movsb
jle
mov
leave
stos
inc
adc
arpl
das
sbb
xor
notl
sarb
jae
sbb
cmp
inc
fbld
sub
jno
cmp
lock
rorb
call
loopne
mov
jmp
ss
mov
sarb
call
push
repnz
push
mov
xor
and
xor
or
inc
adc
inc
fwait
pop
jbe
fdivrl
in
push
daa
push
push
jge
jns
ss
or
mov
inc
andb
xchg
and
jmp
shrb
loope
ja
pop
daa
sbb
cmp
xchg
movsb
test
jmp
sti
mov
push
adc
adc
sub
dec
cmp
push
pusha
mov
or
lcall
mov
movsb
push
fwait
pop
lods
test
scas
xchg
jmp
test
adc
push
add
popf
inc
adc
pop
sbb
loope
adcb
pop
mov
xchg
add
popa
imulb
xor
mov
xor
add
movsb
mov
mov
or
xor
push
jle
add
jmp
or
xor
dec
mov
xor
or
mov
test
clc
dec
add
or
lret
daa
mov
notb
and
mov
lret
clc
or
adc
and
or
xchg
mov
in
fdivrs
jmp
movsb
clc
shrb
push
mov
sub
xchg
ja
ret
dec
sbb
out
popa
ja
in
mov
pop
movups
jecxz
adc
xchg
jo
or
jle
scas
cmp
jno
mov
lcall
and
push
dec
out
add
stc
xchg
lret
sub
lods
pop
shll
out
mov
gs
lret
cmovle
xor
sub
cmp
shrb
ret
xchg
or
inc
imul
mov
adc
inc
testb
mov
sub
mov
test
in
add
decb
sub
or
lock
adcl
cli
pop
mov
fldcw
insb
sbbl
xchg
test
push
enter
int
or
stos
xor
jecxz
add
leave
xchg
mov
mov
mov
add
test
fwait
dec
or
add
sbb
mov
sbb
inc
int3
ret
repnz
fcomp
cmp
cmp
sub
lods
xor
addr16
pop
mov
mov
pop
jbe
lret
movsb
repnz
fs
jae,pt
add
pop
jns
mov
adc
mov
cmpsb
and
outsb
mov
xchg
mov
mov
xor
adc
out
add
or
psubq
clc
jae
or
in
leave
setnp
mov
ret
push
dec
push
imul
adc
lahf
aas
mov
xor
sub
test
adc
popl
mov
push
stc
out
cmp
lds
mov
fldt
jmp
stc
data16
xchg
movsb
sti
pop
mov
test
push
xchg
lock
pop
jg
out
shrl
inc
dec
add
popa
push
mov
rcll
sbb
mov
and
leave
mov
xor
cmp
adc
jmp
pop
jns
sbb
out
test
leave
lret
lahf
or
dec
je
jno
cmpsb
xchg
sub
mov
data16
adc
pop
insb
sbb
and
lret
lahf
int
adc
push
movsl
inc
xor
icebp
xor
sarb
cwtl
addr16
and
xor
and
outsb
mov
xchg
or
sub
clc
push
mov
mov
jmp
or
adc
and
add
sbb
in
push
inc
dec
popa
hlt
lahf
adc
test
call
add
add
lock
pop
adc
popa
inc
or
jp
jo
add
lods
or
push
mov
push
jnp
cli
popa
or
loopne
scas
push
cmp
fisttpl
push
inc
sub
sub
aad
scas
add
bnd
pushf
ficoms
das
xor
dec
dec
xor
dec
jp
cs
push
out
std
scas
xchg
adc
lret
push
jmp
fbstp
push
outsb
jg
pop
xor
fadds
xor
imul
push
les
popf
sbb
out
dec
mov
outsb
pop
testb
daa
add
xor
ret
jl
push
call
jle
addl
pop
aam
inc
add
decb
jbe
push
mov
int
call
jne
insb
nop
dec
clc
lea
sarl
cmp
out
mov
repnz
xor
jl
cld
ljmp
fxam
adc
inc
and
pop
orb
push
lea
jb
les
xor
je
sbb
jp
call
pop
jl
xchg
add
adc
mov
ja
sahf
or
cmpb
addr16
cmp
sti
imul
jl
xchg
pop
adc
addr16
mov
imul
stos
fs
mov
mov
jne
cwtl
aam
sbb
out
lods
test
lea
adc
cmp
mov
in
xchg
sbb
push
sbb
sub
mov
lods
or
dec
jnp
rorb
iret
ja
push
daa
xor
xor
fidivs
xor
mov
jmp
stos
sub
mov
ss
in
cmp
add
lods
jne
cwtl
out
dec
lgs
push
pop
scas
ret
or
jp
inc
fldcw
jbe
or
jb
and
and
inc
inc
xor
adc
ss
push
ret
movsb
sub
cwtl
xor
push
insl
sub
lea
mov
dec
xor
sub
and
inc
rolb
pop
push
mov
add
insb
jns
data16
pop
mov
mov
jecxz
arpl
mov
or
xor
pusha
and
imul
addl
or
xor
mov
fs
add
mov
push
and
xchg
fisttpl
arpl
imul
nop
dec
cmp
out
jge
push
dec
aam
cmp
xchg
ret
cmp
sub
in
divb
pushf
jns
or
xchg
fwait
jb
xchg
or
out
daa
fcoms
into
xor
repz
pop
test
es
les
jae
jae
js
sti
int3
sbb
int
stos
test
xchg
test
lods
cmpsb
imul
or
mov
out
cwtl
push
out
imul
lea
mov
sub
scas
stc
inc
xchg
pop
or
negb
mulb
je
mov
insb
cmp
in
lods
loop
repnz
xor
es
cmp
scas
pusha
cld
jl
jl
xor
mov
push
out
dec
pushf
lahf
lods
mov
cmp
pop
lds
lret
cmc
jmp
and
and
sarl
mov
ret
jge
mov
inc
dec
add
dec
dec
test
ffree
xchg
inc
push
mov
push
fisubs
xor
stos
add
in
jp
xchg
das
mov
fwait
in
vscatterqpd
inc
adc
out
mov
insb
cltd
fbstp
inc
jmp
jle
dec
jg
adc
xor
ja
movl
push
data16
aad
push
ljmp
sbb
mov
mov
xlat
in
adc
in
stos
mov
pop
add
sub
mov
outsl
xchg
insb
cmp
or
push
pop
outsb
mov
adc
int3
test
rcrb
push
ljmp
and
es
jmp
sub
iret
lods
not
add
pop
and
cmovs
fldl
fucom
xor
punpckldq
mov
cmpsb
shlb
inc
roll
mov
std
fnsave
or
mov
lods
inc
shll
xchg
dec
aaa
and
movsb
sub
int
pop
int
fnsave
sti
clc
and
xorb
iret
int
xchg
mov
aas
pop
jle
mov
mov
popa
lds
sarl
sbb
jmp
shrl
push
mov
pop
std
xor
and
pop
fnstenv
adc
or
mov
test
cmp
add
iret
pop
dec
push
adc
les
pop
ljmp
lods
xor
and
push
loopne
cmp
insl
cli
dec
leave
dec
int3
mov
pop
jno
inc
jno
push
mov
xchg
dec
inc
mov
pop
ret
in
push
mov
push
out
mov
adc
xchg
jbe
inc
dec
xchg
fldt
mov
xchg
push
xor
ret
sbb
and
sbb
ror
int3
in
mov
dec
daa
inc
movsl
dec
sub
and
ljmp
xchg
lret
xchg
lods
mov
popa
popa
cmp
xor
fadds
mov
ret
mov
sbb
sub
add
sahf
xchg
mov
andb
cmp
je
jle
popf
mov
mov
outsb
mov
cmp
fisubs
pop
insb
mov
jmp
insb
or
pusha
adc
mov
inc
scas
nop
ss
cwtl
leave
pop
mov
imul
inc
push
nop
scas
movsl
cmc
movsb
mov
hlt
xchg
int3
xchg
and
adc
sbb
bound
pop
int3
jmp
ret
fsubrl
mov
or
int3
add
mov
pop
xchg
cmp
popf
mov
push
movsl
push
das
ja
cs
ror
arpl
pop
inc
out
xchg
cld
int
inc
aad
in
mov
dec
mov
sbb
das
fsts
xor
sbb
ret
stos
and
cmc
fcoml
inc
jae
adc
icebp
jp
imul
imul
out
add
sbb
add
pop
rclb
stos
das
add
std
fdivrs
sub
dec
push
fsubr
inc
dec
dec
and
mov
inc
inc
and
jno
adc
cmp
cmpsl
hlt
sbb
lds
add
adc
push
pop
rep
call
mov
dec
dec
adc
aas
xcrypt-cbc
cmpsl
xchg
out
adc
fmull
pop
xor
out
ret
add
push
pop
lods
mov
dec
and
aaa
pop
fcmovnb
xor
out
or
aas
mov
fistl
xchg
mov
pop
fdivrs
mov
hlt
mov
in
test
mov
sub
clc
mov
mov
add
mov
daa
mov
push
fld
aaa
jg
push
ljmp
popf
mov
enter
int
inc
sbbb
fcmovb
mov
cmp
jmp
dec
mov
call
push
mov
pusha
add
cli
dec
loopne
pop
outsb
xchg
pop
testl
pop
stc
rcrl
scas
cmp
popa
mov
nop
inc
pop
sbb
jle
and
xlat
jnp
sbb
sbb
push
imul
inc
and
fdivrl
cmc
adc
and
jae
mov
or
repnz
or
jno
adc
movsb
ror
imull
xchg
pop
pushf
or
mov
inc
or
push
arpl
stos
jae
stos
xor
fidivrl
lods
ljmp
or
inc
jne
icebp
test
clc
inc
movsl
inc
adc
add
adc
mov
rdmsr
and
push
cmp
dec
mov
loop
daa
ss
mov
push
cmpsb
cmpb
pushf
int3
loope
and
adc
out
ljmp
clc
inc
int
dec
das
jg
sub
mov
push
add
lock
in
push
cmp
pop
pusha
mov
dec
mov
fisttpl
add
or
or
ret
scas
mov
add
nop
loope
inc
data16
sahf
push
loope
rclb
insl
sub
test
cmp
popf
mov
andl
inc
sub
out
ljmp
popfw
mov
mov
bound
mov
inc
jl
mov
add
add
pop
popa
aas
cs
loopne,pt
pop
push
push
cmp
out
popa
and
pop
pop
jae
cmpsb
mov
insl
mov
mov
mov
icebp
lock
mov
xor
lds
jo
sub
adc
loop
inc
bound
inc
lret
xorl
mov
in
mov
fnstcw
lods
jns
xor
sub
aad
call
in
std
sbb
jle
fistpl
mov
in
shlb
mov
popa
or
clc
lds
je
fwait
mov
fidivrs
es
iretw
sahf
idivb
cmp
xchg
pop
mov
addb
dec
sub
hlt
adc
xchg
int3
sbb
fstps
or
sbbb
pop
sub
dec
xchg
flds
pop
sub
jecxz
mov
mov
je
and
xor
push
enter
andl
or
push
sub
es
out
sbb
out
addb
mov
or
xchg
andl
add
mov
inc
lret
jns
and
stc
inc
mov
cs
pop
mov
repz
xor
aad
adc
jno
hlt
or
daa
sbb
insl
mov
fildll
push
cmp
inc
cmc
cs
or
sub
sbb
ljmp
jae
jmp
push
push
push
dec
push
aaa
pop
push
cmp
cmp
or
xchg
insl
pop
xor
mov
ret
dec
dec
jo
aaa
fs
dec
xor
mov
scas
sbb
fstps
into
stos
xor
rcl
push
inc
lods
jns
xor
mov
pop
imul
in
xor
fs
shl
int3
jl
mov
cmp
sbb
cld
push
cmp
mov
dec
shlb
inc
sahf
lret
jo
xchg
pop
jp
sub
and
and
push
fdivrs
fdivp
rorl
jo
mov
mov
lcall
out
jae
sbb
les
add
dec
jge
cmovne
stos
hlt
add
movsb
sub
out
jb
pop
jecxz
mov
adc
aam
xor
mov
sti
int3
stos
int3
call
or
push
pushf
rol
popf
add
sub
mov
jle
xchg
jbe,pt
xlat
jp
notb
lea
xchg
data16
pop
mov
adc
push
fwait
addr16
mov
pop
cs
lods
sub
ret
lods
jb
repnz
bound
dec
inc
mov
in
aad
ss
cmpsl
decb
jl
and
xor
enter
scas
in
stos
jp
xchg
xor
loop
fsubrl
jnp
mov
mov
jle
fsts
loope
push
cmp
out
jae
and
lds
divb
and
and
jp
call
pop
cwtl
add
aad
je
fs
mov
sbb
test
loope
loop
sub
icebp
rcrl
ficoml
xor
fnsave
testl
push
push
or
mov
cmp
sub
rcrl
xlat
testl
or
inc
addl
repnz
mov
std
sbb
add
and
push
data16
out
dec
inc
cltd
lds
push
push
xchg
fwait
xlat
scas
loop
adc
dec
or
sbb
sub
xor
outsl
adc
imul
je
push
xchg
dec
in
popa
push
dec
mov
pop
gs
or
pop
loope
repz
push
cmc
sub
sbb
or
imul
dec
sub
mov
cmp
pop
cmp
and
fimuls
ljmp
mov
les
insl
fsubrs
hlt
mov
daa
outsb
pop
push
adc
insl
sarb
cmp
mov
outsl
push
ficompl
pusha
stos
add
out
gs
stos
inc
cld
cmp
pop
in
fucom
scas
pop
adc
cmp
ds
cmp
mov
push
insb
sub
dec
push
repz
aas
insb
cmpsb
sub
sub
lcall
mov
sub
jb
xorl
and
leave
push
in
push
fwait
sbb
mov
addr16
lret
rol
cmpsl
jne
mov
ret
xchg
pop
aam
js,pn
test
js
add
push
add
add
hlt
sub
sbb
mov
sub
arpl
adc
std
pop
lds
fsubrp
nop
jecxz
mov
pop
les
fstps
sbb
bound
or
pop
pop
mov
inc
mov
movsl
adc
lea
je
lret
enter
inc
shll
ljmp
outsb
fdivp
imul
cmpsb
adc
frstor
js
daa
in
and
in
push
popa
inc
xchg
fistpl
lods
and
test
add
ds
bound
andl
pop
ja
sub
pop
cmp
imul
add
cwtl
pop
push
sub
cmpsl
add
or
cli
cwtl
xchg
xchg
xchg
stos
inc
aaa
mov
mov
pop
mov
xlat
cmp
mov
popf
mov
or
inc
sbb
arpl
idivl
sahf
mov
addb
out
rol
ljmp
lock
jle
gs
daa
lods
push
ficoml
add
adcb
mov
lea
stos
dec
pop
inc
lea
insl
mov
iret
and
stos
das
addb
pop
jg
cmp
pop
sti
xchg
or
repz
mov
sbb
push
imul
push
stos
insl
clc
dec
sbb
arpl
inc
seto
hlt
popf
repnz
loopne
sub
mov
imul
push
arpl
sahf
ljmp
in
aad
inc
or
adc
sub
cmp
sahf
scas
push
xchg
out
subl
sbb
insb
xchg
xchg
shlb
add
loope
leave
and
xchg
test
jae
notb
jb
push
dec
insb
test
fisttpll
pop
hlt
mov
pop
clc
test
fdivs
xorb
dec
adc
cmp
push
pop
mov
xor
mov
out
jno
idivl
jl
dec
push
add
ds
and
dec
fimull
sarl
ljmp
and
loop
jbe
sti
dec
mov
jns
sub
std
cltd
and
repnz
lret
stc
push
mov
shll
adc
ja
ficompl
imul
xchg
int
sub
das
pop
xchg
pop
stc
lret
mov
jns
ja
in
sub
sub
jb
out
ljmp
mov
push
cwtl
pusha
xchg
push
cmpl
rorb
adc
and
mov
mov
lret
inc
leave
out
mov
add
and
fldenv
add
out
clc
push
stc
repnz
enter
and
xor
jo
jmp
push
and
idiv
mov
mov
sbb
mov
scas
std
repnz
add
adc
imul
xlat
fistl
xor
push
push
xchg
lret
cli
sarb
push
rcl
add
xorb
cs
xor
mov
fs
push
pop
mov
cltd
aas
mov
lods
test
lods
mov
outsl
or
xchg
push
cmp
inc
lods
out
mov
out
mov
mov
ljmp
dec
lea
adc
push
pop
pop
fs
ljmp
lret
rcl
rorb
mov
sub
dec
xchg
cmp
xchg
and
adc
add
xchg
out
dec
jmp
sub
jmp
pop
je
cmc
fwait
insb
dec
out
in
fwait
imul
push
sub
add
and
test
pop
xchg
push
mov
adc
lods
mov
jnp
js
sbb
mov
mov
push
outsl
xchg
xor
xchg
lds
sub
sbb
inc
push
dec
repz
loope
adc
push
bnd
lret
lea
lret
pop
sbb
loop
cmp
or
pop
mov
cmc
pop
andl
daa
add
dec
or
add
cmp
dec
cs
cwtl
xlat
outsb
aad
sub
loope
mov
push
fdivl
lret
cmp
or
mov
jbe
mov
xchg
lret
jo
addb
and
mov
ljmp
push
lahf
outsl
ret
out
rcll
xor
inc
testb
call
sbb
jno
aam
dec
cli
je
mov
adc
cwtl
dec
inc
cmc
test
loope
mov
fcmovnu
pushf
cmp
cmpl
and
in
sbb
fistps
xchg
sbb
sbb
mov
fisttps
lret
je
push
push
lret
sub
sarb
or
adc
movb
push
in
jmp
mov
lods
lret
mov
out
insb
nop
ret
push
cmp
repz
jmp
jno
or
mov
dec
xor
in
test
stc
xor
inc
adc
xchg
inc
dec
lcall
inc
out
movsb
icebp
js
gs
xor
and
adc
push
in
xchg
test
push
pop
popa
dec
dec
aam
xor
cwtl
push
stc
jbe
and
in
aaa
jecxz
les
outsb
jne
mov
leave
xchg
imul
mov
aad
das
push
or
je
or
inc
push
cltd
aas
push
xchg
xchg
icebp
sbb
ds
sub
scas
or
repz
mov
inc
xor
daa
mov
adc
popa
in
and
jl
mov
lods
mov
jne
aaa
aad
mov
test
inc
inc
push
stos
scas
aaa
push
cmp
xor
lea
jo
in
icebp
lods
add
inc
jo
mov
mov
cmpsb
movsb
xchg
fistpl
hlt
jp
stos
ds
jle
jb
flds
sub
adc
jno
cli
clc
xchg
lret
push
sbb
popf
cltd
cmp
pop
call
pusha
fimull
sub
enter
scas
inc
jmp
lret
cs
inc
in
and
pushf
scas
out
mov
xchg
addb
lods
dec
cld
sub
adc
cmpsb
xor
sub
or
loope
lret
lea
inc
adc
pop
bt
rorl
add
test
std
jns
aas
pop
jle
les
shrl
outsb
cwtl
jno
or
pop
sbb
pop
xor
push
cmp
add
jbe
jnp
icebp
stos
push
adc
decl
sbb
or
push
fwait
test
add
dec
aaa
xor
and
fnstsw
js
push
sbb
jne
movl
push
mov
pop
push
cli
call
fs
addr16
sbb
jns
lds
pusha
jnp
mov
call
icebp
stos
and
dec
aaa
rcll
scas
jg
jge
out
out
inc
inc
sub
dec
jle
fwait
lret
jb
cs
add
add
fbstp
aad
adc
pushf
push
popf
cmp
inc
adc
sbb
push
sbb
mov
mov
leave
push
or
mov
cmp
sbb
or
jb
fistps
popa
daa
es
sarb
mov
cmpsb
sub
xor
jb
fsub
add
repz
cltd
sti
jns
dec
cmp
inc
sub
ja
call
add
lahf
stc
adc
pushf
xchg
repnz
fcmovbe
lods
fisttps
jo
insl
sbb
in
cmc
jmp
je
pop
jl
clc
imul
cmp
mov
fwait
jg
daa
jg
popa
or
lcall
xchg
adcl
nop
xchg
fucomi
add
push
out
iret
mov
lds
cmp
jecxz
nop
jb
or
adc
repnz
xchg
mov
cs
outsb
sub
xchg
aam
popa
sub
adc
orl
icebp
flds
enter
xor
insl
pop
inc
leave
in
dec
mov
fbld
push
xlat
mov
mov
fwait
js
fistl
jle
sub
test
sub
jecxz
lret
imul
xchg
lods
and
cmpsb
sbb
sahf
dec
push
xchg
nop
xchg
rcr
adc
or
fnstenv
rcr
call
lods
test
data16
inc
fstps
std
iret
testb
pop
jp
out
test
aam
idivl
shll
mov
xor
inc
add
jo
cltd
sti
outsl
leave
cmp
adcl
push
icebp
and
aad
xchg
shlb
in
pop
nop
cmp
adc
jo
outsl
cmp
xorb
outsl
add
lds
mov
push
inc
gs
xor
mov
repnz
jl
fstpl
emms
mov
mov
mov
lds
adc
xchg
rorl
loopne
mov
pop
jae
repz
arpl
mov
loop
adc
mov
pop
cmpsb
add
mov
sub
in
test
add
push
xchg
pop
stos
iret
es
insl
pop
es
or
jbe
and
dec
mov
je
jns
xlat
push
jmp
outsl
sar
mov
test
fnstsw
sahf
xchg
sbb
add
inc
sub
jge
fstpt
pop
sub
loopne
jno
lret
pop
inc
out
jb
pusha
leave
repnz
into
cmp
andl
sbb
and
mov
xchg
pushf
popf
aad
cmp
xor
loopne
push
outsb
jno
inc
cmp
lcall
lcall
inc
and
sbb
lds
mov
push
ds
dec
inc
flds
xchg
xchg
stos
cmpb
es
add
jge
dec
pop
jo
sbb
xlat
inc
pushf
out
test
repnz
mov
xchg
inc
dec
cs
jg
mov
jb
gs
xlat
into
fmuls
jmp
scas
lea
scas
add
and
sbb
icebp
adc
adc
ja
movsb
adc
aam
dec
mov
mov
sub
pop
loopne
cmp
loop
inc
fsubl
iret
pop
push
dec
jnp
lock
lds
bound
fsubl
cmp
add
in
add
add
cltd
out
jecxz
dec
imul
fsubp
push
insl
pushf
aam
test
clc
ljmp
test
shll
jp
or
mov
cmpsl
jne
adc
aad
cltd
mov
inc
add
mov
adc
cmp
movsl
jle
mov
enter
mov
int3
dec
xor
inc
dec
fisttpl
stc
add
cmp
jle
out
xchg
insb
andb
or
push
and
gs
imul
sbb
fcompl
push
movsb
or
sbbb
mov
shlb
lods
out
stc
inc
sub
cwtl
imul
test
xlat
xor
jmp
neg
stc
in
push
daa
test
sarl
sbb
cmpsl
test
and
lret
mov
dec
shr
mov
xor
jg
mov
push
xor
jmp
sbb
daa
sub
mov
inc
cmp
lcall
hlt
nop
sbb
insb
in
out
or
cwtl
cwtl
add
rcl
xchg
or
mov
test
mov
out
mov
es
movsl
mov
or
shll
mov
jo
int
inc
lods
mov
jg
in
mov
sbb
inc
test
call
test
mov
add
andl
jle
fdivp
mov
adc
xchg
jno
sbbb
add
in
sbb
jb
sbb
nop
jns
das
jne
mov
dec
xor
mov
aam
addr16
inc
sbb
push
mov
std
inc
sbb
sbb
jae
ss
sub
shlb
ds
mov
mov
cs
leave
xchg
test
pop
int
sub
leave
cmp
loop
ds
repz
sub
pop
xchg
push
xchg
inc
jl
mov
das
or
mov
jae
and
hlt
aad
mov
lods
js
add
and
fsubrl
into
ret
and
shl
rclb
into
fs
cmp
je
pop
cmp
dec
std
mov
aam
in
data16
inc
cltd
jnp
sahf
ret
test
popf
push
fdivrl
rcrb
repz
xchg
leave
ffreep
push
sti
and
add
push
xorb
arpl
xchg
pop
sbb
cmp
test
or
stc
xchg
xchg
xor
xchg
ds
sbb
cmp
fimull
jo
xchg
add
push
mov
sbb
shll
mov
fsub
or
sbb
mov
out
rcrb
gs
aas
insb
addr16
jo
xchg
aam
sbb
add
or
push
ret
stos
fldcw
pop
cmp
imul
xor
pop
cmp
stos
cs
add
xchg
jno
jae
sahf
fs
testb
sbb
bound
pushl
jns
sbb
jno
mov
push
out
int
call
push
lret
inc
sbb
adc
push
ss
fnstcw
testb
cld
aam
inc
insl
sub
sti
push
and
pop
mov
pusha
add
pop
jg
add
leave
dec
mov
inc
adc
addr16
add
mov
in
push
fs
mov
enter
outsl
flds
cwtl
mov
rorl
test
xchg
lahf
and
cmp
xor
sub
xchg
test
inc
test
jge
inc
das
xchg
popw
in
cmp
rcll
cmp
xchg
mov
dec
mov
sbb
xchg
ljmp
in
push
repnz
jae
jno
sbb
ret
int3
mov
add
pop
pop
sbb
xor
jmp
stos
push
stc
mov
sbb
xor
cmp
daa
jb
push
lods
mov
add
imul
ds
push
jp
and
mov
jb
cmpsl
outsl
mov
iret
popa
jmp
push
lods
cwtl
mov
xor
test
cmp
lock
cmpsl
into
and
fwait
mov
xchg
loopne
adc
dec
or
push
pop
arpl
cld
xchg
adc
lock
sub
cltd
sub
xor
adc
inc
push
mov
jge
test
imul
cwtl
mov
clc
clc
dec
push
inc
call
mov
imul
inc
std
push
in
mov
es
pop
and
je
scas
jge
push
jecxz
pop
jp
inc
xor
rcrb
xchg
jnp
sbb
insl
jmp
je
pushf
pop
push
dec
aaa
sbb
xorb
std
ret
pop
cmp
dec
icebp
jns
out
popa
das
or
popa
jecxz
push
outsl
cmp
mov
push
pop
inc
popa
loop
jle
jp
icebp
pop
popf
outsw
in
cli
lea
call
adc
dec
pop
or
jne
push
aam
movb
pop
and
xchg
inc
push
sti
loope
cmp
fucomp
fistpl
add
sub
pop
sub
cwtl
add
pushf
dec
loope
jp
xchg
inc
idivb
push
and
mov
pushf
inc
cwtl
dec
pop
int
pop
loopne
jg
sbb
or
or
cmpsb
push
push
inc
dec
sbb
xchg
aad
pop
sarl
sbb
pop
lds
sbb
mov
mov
fdivp
popa
jno
cmp
outsl
frstor
jno
push
xchg
frstor
add
addr16
clc
testb
shlb
ret
sbb
push
rcr
lods
adc
mov
xor
insl
ss
xor
fsubrs
sub
mov
jmp
pop
adc
popf
pop
mov
out
mov
dec
ljmp
add
stc
dec
mov
mov
sbb
push
pop
das
rorb
faddl
aam
sub
push
jns
out
push
pop
icebp
fsub
sahf
pop
sbb
lcall
mov
daa
test
loope
jbe
imul
dec
ljmp
mov
mov
adc
cld
adc
adc
add
sub
xchg
iret
inc
or
or
pop
mov
lret
andl
and
cmp
dec
xor
aas
sti
xor
movsb
insb
rolb
sub
insb
lea
cs
add
jns
je
or
jbe
testl
ret
cmp
cli
repnz
stos
push
shr
rcrb
cltd
xor
js
or
cwtl
sbb
xchg
stc
mov
dec
pusha
stos
jo
call
jecxz
push
insl
mov
fiadds
mov
xor
test
push
imul
jmp
mov
push
sbbl
mov
jl
fwait
sub
or
sahf
cmp
cli
mov
iret
sub
xchg
xchg
mov
sub
shll
sti
fistpll
test
lea
pop
and
sbb
daa
mov
sbb
out
enter
sar
popf
ret
xchg
push
mov
insb
sbbl
into
outsb
jg
adc
in
pushf
loop
aad
lods
into
push
mov
sbb
shr
outsb
ret
mov
stc
pop
cld
psrld
push
aam
sbb
clc
sbb
mov
in
adc
push
jmp
stc
es
repz
cld
adc
push
bound
mov
jno
aam
xchg
test
ja
dec
bound
or
repnz
stc
inc
ret
and
out
cwtl
enter
or
aad
cltd
or
rorb
icebp
adc
dec
mov
xor
negb
dec
aam
push
sahf
sub
push
stos
push
dec
adc
jmp
sub
fwait
jge
mov
outsl
jo
dec
mov
orl
and
sti
arpl
imul
es
sbb
iret
adc
adc
icebp
add
dec
divl
cltd
stos
mov
or
sbbb
lea
mov
lcall
fisubrs
push
add
scas
push
in
sub
pusha
or
inc
in
sub
nop
jge
dec
adc
or
and
jno
lret
add
jnp
pop
cmp
jle
push
stos
push
outsl
adc
adc
es
jg
sub
roll
mov
xchg
out
mov
xor
fdivrs
sarl
inc
inc
jnp
pop
cwtl
es
or
pop
xor
push
mov
arpl
add
fimull
mov
mov
mov
out
mov
arpl
scas
gs
das
aas
rcrb
lods
call
dec
mov
setb
subb
or
xchg
xchg
int
sub
rcl
je
or
imul
out
xchg
cmp
in
xchg
jecxz
cmp
jno
dec
xor
scas
insl
mov
mov
sahf
mov
mov
dec
adcw
lea
aaa
sbb
je
ficompl
jmp
lea
cmpsl
ret
pop
sbb
cld
mov
or
inc
cwtl
imul
stos
repz
fprem1
mov
sub
cmp
add
movl
mov
mov
sub
ds
mov
xor
dec
jbe
jge
dec
sub
shlb
push
xchg
push
popa
xchg
insb
cltd
repz
repz
sahf
loop
outsl
ss
jmp
push
add
bnd
mov
xchg
cmpsl
cmp
cltd
out
jecxz
aas
xor
in
push
rol
xor
add
stc
xchg
xor
cwtl
xchg
push
fistl
inc
sbb
lret
cli
pop
xlat
imul
add
das
dec
imul
sbb
pop
gs
sti
aam
sbb
out
pop
mov
sbb
lods
imul
int
ret
fstpt
and
dec
xchg
arpl
cmp
jp
es
push
mov
lret
sbb
add
bound
mov
sahf
add
cmpsl
and
cli
das
or
ljmp
idivb
out
jnp
dec
cmc
jbe
push
or
pop
dec
fadds
fistpl
pop
and
push
push
into
ljmp
fwait
xchg
popa
pushf
aas
aaa
pop
loopne
mov
imull
dec
out
add
test
mov
ds
popf
cs
sti
leave
push
xchg
daa
lahf
add
out
pushf
xchg
negb
xor
loope
sbb
aad
scas
lret
lret
dec
sbb
mov
lods
mov
push
adc
sbb
hlt
lea
and
mov
jnp
rolb
out
sarb
lock
mov
enter
in
insl
stos
mov
add
dec
in
call
dec
ret
aas
shl
popf
in
dec
pusha
pop
orl
adc
jmp
daa
add
push
fdivrs
pop
sti
in
out
push
popa
xor
xor
jo
in
or
pushf
pop
lea
popf
into
cmp
jg
clc
mov
imul
nop
adc
push
fs
enter
out
or
testb
push
out
adc
cmpl
mov
xchg
push
cltd
mov
aad
and
push
lret
ds
ss
das
sbb
sbbl
mov
daa
pop
add
ret
mov
mov
gs
jo
stos
scas
push
xor
sahf
dec
mov
test
insl
push
sbb
mov
adc
cld
sub
fsubs
sub
push
je
pop
adc
pop
jno
mov
push
mov
lds
xor
mov
push
push
adc
and
mov
decl
dec
jns
jl
jge
mov
jmp
push
xor
pop
mov
mov
pop
cmpb
mov
or
cmp
mov
xor
ss
cmp
dec
add
pop
fisubl
out
pop
push
enter
mov
test
mov
fldenv
xchg
pop
lods
inc
dec
and
mov
xor
inc
adc
cs
cmp
jl
or
xlat
in
mov
clc
subl
fcmovbe
ficomps
add
es
lods
mov
mov
push
lea
jb
pusha
mov
pop
inc
lock
inc
into
cld
jmp
cmp
and
scas
out
push
test
xchg
aas
pop
adc
jae
mov
sbb
rorb
fwait
inc
jge
mov
sbb
sub
xchg
xor
outsb
inc
int
jge
fmuls
sbb
adc
lods
dec
cmc
shll
or
push
mov
in
push
repnz
xor
and
sub
insl
sbb
js
push
jmp
ja
xchg
xor
jle
cld
push
out
je
push
sub
dec
popf
jl
imul
xchg
ljmp
xchg
sarb
sbb
in
and
pop
mov
or
lods
add
cltd
add
adc
rcr
outsl
rol
push
adc
fsubrp
dec
cmpsb
jo
test
loopne
push
int
lock
inc
mov
movb
mov
push
mov
mov
loop
stos
mov
into
es
fldl
lds
adc
into
inc
sbb
mov
lock
lret
jns
imul
rorl
sti
vmovups
xchg
mov
cmpl
pop
negb
scas
scas
xor
in
mov
icebp
pop
test
xchg
cwtl
push
pop
fwait
nop
cli
push
pop
outsb
jno
sub
add
mov
lcall
pop
sbb
out
pop
cld
rcrb
lods
dec
and
rorb
pusha
scas
push
dec
jns
test
jecxz
in
cmp
xchg
adc
xlat
pop
rcrb
rcl
test
jg
in
scas
dec
loopne
pop
pop
decb
popa
mov
shlb
mov
lcall
adc
mov
outsb
pop
negl
xor
icebp
xor
mov
cwtl
testb
imul
mov
in
push
add
mov
ret
cmp
add
hlt
call
or
xor
mov
pop
mov
mov
repnz
push
insl
sbb
fwait
addr16
aas
add
pop
jl
xlat
mov
add
push
mov
insl
push
pop
xchg
cmp
pop
dec
sahf
or
and
fwait
sub
dec
fidivrs
mov
in
pop
adc
js
out
mov
sub
cmp
push
sbb
cmp
rcrl
data16
jbe
arpl
dec
into
add
cmp
cmc
jl
sti
aas
inc
or
sbb
adc
mov
clc
gs
stos
fistl
mov
push
push
lea
sub
cld
and
leave
mov
enter
inc
enter
arpl
fwait
jb
push
sarb
das
xchg
jmp
dec
cmc
imul
pop
xchg
pop
insb
pop
pop
imul
jecxz
pop
push
stc
xlat
insb
adc
jns
jl
pop
mov
xchg
sbb
sub
xchg
jb
loop
andb
inc
arpl
sbb
aad
cmp
push
mov
and
add
cmp
fucomip
mov
push
mov
shlb
loopne
clc
adc
xchg
shll
lcall
xchg
stos
and
int
insl
orl
into
cmp
adc
sub
inc
and
int
lret
scas
jp
dec
sub
fwait
stc
sbb
mov
jno
test
mov
in
add
in
mov
scas
mov
pop
adc
mov
and
mov
in
dec
push
mov
jns
sbb
jle
andl
sub
xchg
sbb
ss
imul
iret
stc
popa
popa
sub
push
sahf
xor
and
and
inc
stos
in
xchg
fisttpll
xchg
inc
dec
push
sbb
sbb
mov
pop
ja
sbb
jle
sbb
shl
or
push
enter
mov
jmp
in
push
pop
inc
mov
add
test
repz
pop
in
pop
bound
jl
lods
adc
dec
adc
mov
paddsb
jge
mov
movsl
and
push
movsb
loop
mov
cli
daa
jb
daa
mov
push
sbb
xor
jmp
cmpl
ret
cmpsb
xlat
hlt
xchg
mov
inc
adc
andb
enter
out
pop
addr16
sarl
int3
or
das
jnp
jae
js
data16
das
and
mov
inc
ret
inc
stos
insl
cmp
xchg
mov
test
or
mov
mov
pop
add
or
jne
cmpb
popf
cmpsl
mov
jno
stos
imul
sub
mov
sub
in
adc
inc
out
mov
ret
mov
dec
adc
stc
lret
fcompl
or
add
ds
loope
lcall
fidivl
test
testb
and
pop
outsb
dec
push
fcoms
stc
push
add
mov
dec
insl
xchg
out
test
cmp
mov
ljmp
popf
testl
pop
xor
adc
gs
gs
sub
sub
cwtl
and
sub
add
inc
push
inc
divb
adc
add
add
xor
loopne
inc
mov
mov
ret
rorb
inc
mov
jo,pn
fsubrl
adc
and
decb
int
push
aaa
mov
mov
icebp
iret
jb
push
sbb
dec
sub
clc
lret
imul
pop
jmp
jb
loope
pop
and
lds
loopne
jl
in
lea
xor
mov
cwtl
jae
inc
js
bound
cmpb
loop
cwtl
enter
jg,pt
jae
mov
sbb
enter
ljmp
loope
cmp
inc
mov
xchg
lret
or
divl
les
jecxz
lock
xor
imul
popa
jmp
inc
xor
add
push
lods
outsl
outsb
push
cltd
adc
shrb
hlt
test
lret
icebp
adc
or
dec
incl
ljmp
mov
and
push
adc
lds
dec
mov
dec
or
mov
jmp
out
ljmp
scas
lds
push
mov
fistps
pop
push
mov
pop
push
repz
negl
lds
jmp
rolb
in
notb
inc
arpl
jno
cmp
pop
fsubl
xlat
mov
mov
test
sbb
aaa
xchg
mov
pop
pushf
in
inc
jno
fdivl
xor
out
inc
ret
outsb
sub
xor
inc
mov
outsb
out
loope
imull
adc
ds
dec
repnz
pop
lods
and
xchg
js
pop
enter
stc
cmp
loop
push
push
or
or
jmp
out
adc
add
or
mov
fdivr
outsl
jge
loop
out
insb
add
sbb
loope
jo
popa
in
in
lahf
ret
inc
bound
mov
imul
into
adc
xchg
mov
std
push
out
popl
lods
push
test
mov
adc
rcr
lcall
jb
jnp
pop
xor
leave
mov
scas
lods
cmp
and
jmp
in
nop
iret
jne
arpl
add
and
xchg
xchg
mov
mov
mov
cmp
sub
pushf
bound
arpl
lods
and
scas
jmp
and
in
fildll
xor
dec
cmp
xor
aaa
push
jl
popa
adc
call
or
lds
ljmp
int3
mov
outsb
pop
nop
aad
add
adc
pop
pushf
in
sub
xor
jne
jne
fstl
push
xor
imul
dec
cli
insb
cmp
ds
out
cmp
pop
popa
popf
out
sbb
xchg
dec
mov
loope
ret
jno
sbbl
push
add
push
in
jnp
jmp
repnz
mov
jp
stos
or
int
mov
lret
mov
mov
ficoml
or
shll
into
lahf
lcall
inc
jns
stos
mov
mov
jo
in
popf
test
loop
jmp
xchg
add
jmp
dec
in
sbb
mov
jmp
xorl
bound
fwait
in
rcrb
push
sbb
mov
ss
testl
fldcw
fcoml
js
push
movsl
mov
sub
cmpsl
sub
pop
pop
shrl
jb
and
in
subb
jl
adc
dec
adc
icebp
mov
dec
dec
add
sub
mov
mov
adc
insb
push
jmp
xchg
xchg
dec
dec
dec
mov
sti
adc
jne
push
pop
xlat
adc
jle
jmp
stc
leave
mov
mov
aaa
mov
mov
sub
dec
imul
xchg
inc
outsb
push
mov
popa
lock
mov
stc
xchg
mov
enter
sarb
pop
xchg
movsb
cmp
jne
int
adc
push
dec
cmp
mov
pop
enter
daa
nop
jb
jl
outsl
cmp
dec
fs
fwait
stc
aaa
fdivl
lahf
lock
rcll
js
xchg
ljmp
leave
mov
je
loope
and
inc
inc
mov
je
xlat
jle
test
xchg
stc
ds
sub
add
ljmp
xor
ja
mov
xchg
int3
and
testb
mov
inc
int3
lahf
cmp
cli
and
rolb
jnp
sti
icebp
cld
pop
dec
cli
and
jecxz
mov
lret
scas
ds
sti
or
loopne
scas
das
out
mov
test
lret
xchg
movsl
cmp
sub
stos
jns
jns
scas
aaa
fsubs
xchg
sub
dec
pop
push
repz
in
or
add
add
mov
mov
hlt
sti
js
add
and
andl
jnp
popa
add
jns
aam
and
mov
es
push
xor
inc
mov
sarl
push
mov
imul
into
int
dec
and
or
loop
mov
pop
outsl
push
in
push
jno
decl
es
cmp
pop
add
popa
notl
push
iret
jae
in
sbb
dec
scas
jmp
mov
cmc
mov
fildll
out
fmulp
fimuls
jb
pop
sub
sbb
test
lcall
push
push
jo
mov
and
nop
mov
fcmovnb
and
int
out
es
push
hlt
mov
cli
mov
jl
sub
push
loop
pop
inc
inc
cmpsl
in
cmp
lcall
mov
mov
and
vmwrite
and
leave
push
in
mov
out
lock
jbe
flds
sbb
and
mov
mov
test
xor
pop
fnstenv
insl
das
lods
out
fisubl
imul
cltd
dec
repnz
fstpl
or
decb
xor
mov
dec
and
loope
in
pop
test
inc
add
andl
testb
push
xchg
pop
repz
popa
push
and
dec
sbb
push
shlb
cmpsb
sahf
adc
rcrb
scas
mov
or
or
mov
or
pop
cmp
jecxz
ret
mov
int
add
lahf
sbb
mov
mov
sahf
cmp
mov
push
lcall
xchg
aaa
add
sbb
popa
in
cmp
or
xchg
jle
mov
shrl
imul
es
out
mov
insl
roll
or
scas
clc
stos
cmp
ja
popa
shrl
pop
gs
adc
outsb
out
loop
push
daa
pusha
insb
and
mov
enter
adc
aaa
ret
and
adc
sarl
loop
outsl
add
pop
pop
push
push
rcr
push
out
cs
dec
xchg
push
mov
mov
sbb
push
xor
lods
sub
ja
inc
xor
mov
and
ret
fimull
mov
cltd
xchg
ss
adc
sub
loope
xchg
push
jmp
inc
cmp
mov
mov
enter
sbb
cli
mov
sub
fistl
rorl
sbb
push
or
cmp
mull
cltd
jb
mov
cmpsl
or
inc
and
sti
cmpsl
sbb
mov
mov
dec
scas
jbe
out
shrl
stos
aas
fsts
xchg
xchg
cmp
shl
xlat
lahf
sbb
inc
push
jns
push
dec
mov
dec
inc
mov
xlat
fisttps
adc
push
jo
sbb
lahf
mov
jo
xchg
idivb
popw
clc
mov
or
test
dec
mov
cmp
jmp
popa
jp
cmpsl
mov
sti
out
sub
jae
aam
or
jno
push
xchg
jbe
and
xchg
push
xor
std
jecxz
movsb
push
adc
jbe
push
pop
pfrcp
push
filds
pop
pop
adc
popa
pushf
pop
mov
movl
test
subb
insl
push
insb
mov
cmp
aas
lods
xor
outsl
cmp
rcrb
mov
lret
call
cmp
js
push
push
out
mov
lock
bnd
add
fwait
mov
loop
jmp
mov
mov
mov
mov
xchg
lret
hlt
sahf
roll
mov
rorb
cmp
stc
mov
fcmovne
mov
and
ja
stc
sbb
pop
mov
insl
and
js
test
mov
mov
mov
dec
cmp
fdivl
dec
adc
cmp
repnz
add
in
mov
xor
in
adc
mov
std
xchg
push
ret
or
pop
cmp
icebp
or
xchg
ss
rclb
mov
or
fisttpll
or
ljmp
ja
mov
int
outsb
add
jns
lock
test
rcl
loop
sbb
cs
clc
sbb
dec
add
orl
xchg
cmpsl
xor
dec
fldl
pop
and
je
mov
jbe
and
and
mov
cwtl
sub
and
fistps
xor
dec
repz
inc
mov
shrl
sbb
push
mov
and
inc
push
xor
fs
stos
stc
add
rcll
sarl
inc
lahf
mov
push
jb
add
sbb
iret
out
addr16
mov
cmp
mov
jns
cmpsl
jle
cwtl
adc
outsb
lods
and
mov
leave
push
dec
pushf
mov
repz
dec
fldt
iret
and
cwtl
test
xchg
das
in
orb
into
fmull
in
test
or
scas
pop
pop
inc
stc
lcall
cmp
mov
mov
push
mov
and
loope
mov
insl
movzwl
lea
jecxz
xchg
out
fwait
arpl
mov
xlat
sub
sub
and
push
xchg
ficoml
pop
rcr
and
push
arpl
hlt
dec
xorb
add
int3
addr16
cltd
sbb
fstp
shr
loopne
leave
dec
rcl
rolb
lods
and
out
mov
push
das
movsl
out
cmp
push
addr16
jg
daa
ljmp
adc
push
and
das
pop
dec
cmp
sbb
sbb
ljmp
ret
sub
jns
imulb
push
loope
mov
popa
jmp
aas
mov
fdivrl
icebp
fs
mov
popa
out
mov
negb
clc
pop
mov
roll
push
imul
push
stos
cs
cmpsl
mov
inc
xlat
or
outsb
sub
xchg
shlb
stc
ljmp
popf
dec
int3
xchg
lret
lea
mov
inc
xor
imul
jnp
movsl
push
lahf
es
ss
adcl
mov
pop
rcrl
push
subl
xchg
call
or
imul
cmp
cmpl
cltd
fadds
jl
mov
call
pop
xchg
call
loopne
addl
idivb
jge
jbe
in
add
leave
rcrb
lret
jp
pop
lea
inc
cmp
xor
out
cmp
add
mov
out
push
test
inc
mov
jmp
adcl
ljmp
pop
repnz
jg
sub
dec
jne
add
stos
xor
cmp
clc
cld
dec
lods
cltd
ret
mov
stos
sbb
cli
inc
movb
movsb
xchg
cs
dec
mov
dec
sbb
out
add
adc
jmp
sub
lea
scas
mov
jle
mov
into
xchg
call
insl
fdivrl
inc
lods
outsb
jle
jne
ret
inc
movsb
inc
addr16
mov
xor
cwtl
ret
aas
insb
into
cmp
fisttpl
sub
inc
mov
or
ss
or
xor
jecxz
ret
mov
push
sbb
inc
cmp
jp
ret
data16
imul
sub
sahf
ja
xor
mov
neg
in
jns
mov
adc
sbb
adc
mov
sub
add
lret
loope
fidivrs
push
lret
ficomps
or
je
dec
fwait
jl
add
sti
fldcw
xor
jae
mov
out
jp
leave
jp
repz
pusha
aad
outsl
pop
dec
dec
xchg
notb
mov
or
jb
int
rcr
xor
stc
out
mov
or
mov
ficoms
push
fildll
xlat
loop
movsb
ss
das
push
cmp
push
mov
pop
ret
jmp
dec
mov
or
outsl
adc
mov
mov
sbb
adc
pop
fisttps
addb
clc
xorl
jns
je
pop
sbb
aas
push
xor
int
cmp
cmp
mov
out
sbb
loope
orb
add
mov
outsl
push
call
outsb
call
cmp
inc
xor
pop
xor
sbbl
add
mov
push
or
inc
xchg
jl
aaa
and
mov
push
aas
test
mov
popf
daa
and
push
fnstenv
shl
mov
dec
pop
or
ds
or
les
push
sti
cmp
push
repz
mov
and
dec
in
cmp
push
cmpsb
int3
js
pop
aaa
xchg
ljmp
scas
daa
es
testb
adc
fwait
mov
and
xchg
test
daa
and
lahf
push
repnz
mov
dec
push
in
jl
fdivr
ds
xor
ret
aas
clc
inc
outsl
adc
loope
rcrb
iret
sbb
jns
imul
dec
and
cmpsl
jp
cmp
stos
add
push
clc
xor
inc
jno
enter
cwtl
inc
xchg
xchg
pop
jl
mov
and
push
std
test
frstor
xchg
ret
fwait
test
dec
add
fidivrs
movl
xor
mov
mov
subb
data16
adc
jecxz
dec
out
leave
jp
push
mov
pop
jecxz
mov
push
push
push
loop
inc
insl
inc
fcmovnu
sub
pop
xchg
mov
sbb
testl
imul
push
dec
sub
cmpsl
dec
inc
adc
daa
adc
cli
sarl
adc
jle
shrl
push
pop
cmp
dec
and
dec
mov
push
sbb
sbb
cmpsl
dec
loopne
movsl
insb
cmp
or
jb
imul
dec
mov
xchg
cs
dec
sub
nop
popa
test
sub
dec
pop
shll
cld
nop
or
mov
add
pop
aas
daa
sbb
add
push
popf
lret
pop
lods
jno
pop
divps
xor
les
jp
jl
stos
jg
mov
inc
or
out
scas
dec
or
push
or
in
rorl
push
pusha
jmp
lahf
cmpb
mov
or
and
push
outsb
dec
jo
xchg
mov
xor
ror
xor
jo
jle
dec
repz
out
mov
jae
test
popa
xchg
adc
scas
xchg
xor
jecxz
push
je
movsl
ficompl
das
dec
enter
mov
push
scas
add
cmp
jle
scas
sarb
pushf
cmp
fstpt
sub
dec
clc
mov
lods
add
ljmp
test
loop
cwtl
sbbb
test
cmpsb
inc
pop
sub
jge
or
stos
push
dec
pop
dec
andps
arpl
jae
inc
adcb
decl
pop
dec
enter
out
cltd
addl
gs
xor
fistl
dec
scas
jno
sub
sub
or
cmpsl
fisttps
call
in
lret
inc
mov
subb
mov
inc
mov
iret
lret
xor
lods
popf
xor
xchg
mov
int
pop
imul
push
cmp
lahf
and
mov
mov
jle
rcr
test
push
jl
icebp
xor
mov
sub
pop
je
das
adc
add
test
movsl
imul
push
lock
jo
and
inc
and
cmpsl
insb
daa
test
call
sub
shll
hlt
sub
push
fsts
leave
mov
out
outsb
jp
inc
pop
into
lock
push
sub
push
push
pop
jge
cmp
dec
rcrb
js
add
or
mov
adc
cmpsb
mov
mov
movl
cld
fisttpl
cmpsb
je
lea
les
fwait
inc
sbb
cmp
push
jbe
xor
stos
inc
frstor
orb
fdivp
loop
ljmp
cmp
in
or
stos
out
adc
je
pop
std
rcrb
adc
add
stc
mov
inc
or
cmp
push
sub
leave
int3
outsl
mov
shrb
sbb
push
sub
call
ds
xlat
jo
or
sar
push
inc
mov
xor
and
inc
add
outsl
mov
jnp
xchg
test
xchg
js
or
and
and
scas
mov
data16
fwait
test
adc
xchg
add
mov
out
mov
in
pop
dec
sbb
cmpsl
mov
fbstp
jecxz
lret
popa
fdivrl
add
push
and
addb
mov
or
dec
in
mov
mov
rclb
add
neg
faddp
push
shll
adc
mov
xor
xor
ds
mov
and
scas
cmp
xchg
out
mov
daa
cmpb
sbb
inc
test
or
ja
mulb
xchg
inc
mov
mov
mov
fiadds
xor
int
dec
jno
sbb
add
adc
rorb
in
xlat
mov
ret
pusha
fsubr
outsl
xchg
or
arpl
js
imull
add
out
fucomi
lcall
sub
sub
popf
aaa
push
sbb
fisttps
mov
mov
xchg
pop
sub
sbb
push
test
cmpsl
popa
adc
cmc
jbe
hlt
jae
push
cli
jbe
ja
sub
xchg
push
add
call
lret
loope
pusha
cmp
stos
ficomps
mov
insb
add
cmp
out
lds
pop
mov
adc
test
movsl
popa
push
shlb
sbb
ljmp
and
mov
enter
jno
repnz
mov
out
gs
cwtl
int3
lret
loop
mov
movsb
push
test
insl
iret
icebp
mov
and
cmc
dec
ljmp
jbe
cmp
repnz
mov
jno
stc
xchg
push
jecxz
int3
ljmp
dec
sub
sbbb
mov
das
inc
fsts
dec
pop
cmc
push
das
xchg
xchg
jbe
ja
test
jno
cmp
or
adc
sub
push
cmpsb
xor
orl
cmpsb
add
pop
lahf
mov
and
ret
enter
mov
out
inc
jecxz
aam
js
aas
dec
mov
inc
cs
xor
mov
daa
cmp
ss
add
cmp
icebp
or
js
adc
push
inc
mov
sub
and
pop
jnp
and
push
push
jb
test
test
xor
jmp
xchg
outsb
push
xor
add
out
jmp
andb
pop
lahf
jnp
dec
insb
sahf
and
pop
mov
imul
ljmp
jnp
cs
ljmp
mov
or
fstpl
push
fistpl
ror
scas
leave
jcxz
stos
icebp
mov
cmp
sub
push
cmp
push
xor
or
jno
aad
daa
out
stos
mov
dec
lcall
inc
mov
aas
out
les
lods
xchg
sti
xchg
mov
or
xor
pop
xchg
dec
icebp
pop
sub
out
cmp
imul
push
and
push
mov
dec
and
mov
xchg
cmp
aad
or
push
sti
add
jb
fs
or
les
scas
scas
add
or
shll
movsl
mov
pusha
stc
mov
mov
test
mov
stos
xor
imul
sub
sub
sbb
rolb
cmpsb
cmp
mov
push
imul
aad
cs
cmp
andl
add
jbe
jae
add
cli
sbb
addl
push
ficompl
hlt
sarl
pop
pop
or
xor
inc
dec
out
addr16
adc
lea
sarb
in
loope
xor
xor
in
jbe
xchg
or
pusha
cltd
jmp
sub
inc
les
mov
or
push
mov
pop
rcll
aad
adc
call
shlb
push
mov
push
lds
push
mov
loopne
add
sbb
adcl
adc
jo
mov
pop
pop
dec
hlt
cld
cld
lea
addr16
sbb
leave
lahf
jmp
mov
shr
sbb
cwtl
lods
pusha
adc
ss
xor
mulb
mov
dec
jmp
movsl
mov
fnsave
icebp
adc
ljmp
fcomps
daa
and
inc
iret
mov
fldenv
sbb
sbb
push
mov
cmpl
xor
and
sahf
sbb
dec
or
mov
dec
mov
xor
ja
orl
mov
dec
fcmovnbe
and
push
jne
mov
mov
mov
test
mov
loope
pop
fistps
xchg
js
mov
or
pop
repz
stos
mov
fnstsw
leave
dec
imul
inc
aas
cmp
cmp
addr16
add
adc
cwtl
out
mov
pop
mov
mov
popl
sub
dec
fiaddl
cmpsb
mov
popa
push
jp
loope
enter
push
jae
inc
xchg
xor
xor
out
mov
aam
dec
test
sub
les
push
daa
pop
cs
in
xchg
xor
pop
aas
pop
test
scas
testb
mov
xchg
dec
inc
xchg
lcall
addr16
jno
or
stos
sbb
mov
negl
mov
stos
push
sahf
imul
scas
dec
inc
call
inc
push
incl
ljmp
scas
dec
in
adc
mov
fdivrl
mov
in
jno
lods
in
jbe
mov
dec
hlt
pop
add
cmp
and
fidivrs
sub
jbe
rorb
adc
xchg
test
ljmp
aad
stc
inc
add
xchg
mov
dec
mov
xchg
cwtl
push
lods
mov
mov
inc
test
shll
loope
stc
rcl
aaa
sbb
mov
inc
cmpsl
les
pop
dec
jae
mov
inc
push
fwait
fsts
jnp
push
test
pop
shlb
and
add
repnz
cmp
or
dec
aad
cmp
and
pop
and
jge
adc
sub
mov
test
fs
push
mov
outsb
aad
dec
jns
sti
push
mov
lds
fldl
xchg
or
and
push
sbb
mul
mov
jnp
arpl
pusha
inc
imul
enter
idiv
cmpsb
sbb
lcall
imul
out
push
pop
rcll
mov
xchg
stos
inc
je
fxtract
sub
xchg
cmp
popa
js
mov
enter
dec
scas
xchg
mov
xchg
mov
aaa
das
mov
cmp
pop
xchg
push
xor
add
mov
jne
fidivl
into
je
cs
es
mov
pop
dec
mov
movsb
imul
scas
out
pop
add
loop
sbb
adc
sbb
test
arpl
inc
pop
mov
int3
roll
cs
rcl
sub
mov
sbb
inc
xlat
fdivrs
jno
aas
andl
add
clc
and
dec
fstpt
lcall
mov
adc
mov
mov
xor
cmp
mov
dec
inc
mov
push
das
loop
mov
mov
mov
iret
jl
or
pop
fs
pop
enter
pop
push
lock
push
call
hlt
arpl
flds
les
hlt
sub
mov
xorb
cwtl
testl
aam
mov
sub
gs
cmp
cld
push
mov
dec
scas
outsb
sbbb
inc
shlb
scas
inc
xor
ja
aas
lcall
jno
insb
jbe
dec
push
jo
movsb
push
mov
xchg
cli
lea
mov
int
stc
shll
sub
and
jecxz
sbb
add
sub
daa
loop
imul
aad
jne
push
xor
jo
dec
out
imul
inc
fidivl
lret
aaa
loope
mov
clc
fdivr
pop
dec
mov
dec
mov
and
adc
and
push
xchg
inc
inc
jb
test
test
lock
filds
dec
sub
mov
sub
in
popf
jbe
dec
mov
xchg
and
movsb
pop
mov
mov
adc
xchg
lahf
repnz
leave
and
add
xor
xor
xchg
mov
aaa
mov
outsb
cmp
rorb
cmp
mov
jb
and
mov
imul
rclb
fldcw
mov
lret
faddl
xchg
inc
mov
jecxz
dec
js
or
inc
xchg
and
pop
dec
dec
push
xchg
pop
fxch
or
mov
add
lcall
shrb
call
adc
xchg
mov
jae
sub
pop
push
mov
ljmp
push
jp
mov
hlt
mov
mov
push
test
ret
inc
lds
mov
fs
jae
aas
in
stos
pop
inc
int3
dec
in
push
mov
lret
sbb
and
popf
dec
add
bound
inc
xchg
jno
addl
adc
cmp
inc
ficompl
jg
popa
add
incl
mov
ds
fsub
xor
push
icebp
add
adc
fwait
shrl
cwtl
ret
imul
enter
mov
jae
sbb
cwtl
sbb
subl
mov
or
pop
sbb
jge
pop
add
xorl
mov
dec
lods
dec
pop
and
data16
in
aas
sub
loop
mov
std
lret
std
sti
mov
orb
push
xchg
or
cmpsb
adc
movsl
data16
iret
cmp
scas
insb
repz
in
push
imul
ds
xchg
pop
push
ljmp
xchg
xor
dec
cmp
ljmp
imul
xchg
dec
daa
mov
push
in
pop
pop
inc
and
inc
dec
jb
imul
jb
popw
lret
inc
imull
js
ja
cmp
fcmove
jle
out
add
sti
add
inc
cwtl
daa
push
outsb
scas
ror
lfs
sbb
cmp
outsl
fldl
lock
cwtl
and
xor
pop
xchg
xor
adc
popf
sbb
cld
outsl
mov
shlb
mov
ds
addr16
movsb
sahf
fnstenv
js
adc
xchg
pop
sbb
in
pop
ret
xor
push
lock
xor
xchg
fnstsw
push
adc
and
sbb
push
inc
bound
es
outsb
icebp
mov
xchg
ds
lret
test
out
lock
stos
scas
mov
mov
mov
les
mov
outsl
mov
add
jno
mov
je
out
pop
jle
add
inc
int3
std
push
mov
or
into
ficompl
loopne
dec
into
sub
lock
stc
add
fs
xchg
xlat
dec
leave
adc
adc
dec
daa
popa
or
xchg
in
subb
xchg
cmp
add
addb
jle
xchg
shl
cs
dec
sarb
data16
std
lea
push
xchg
lcall
adc
mov
sbb
push
out
mov
lock
repz
cmp
je
dec
test
xchg
jmp
cli
call
xchg
xor
sub
sahf
in
xchg
xlat
push
inc
nop
mov
push
or
cmc
add
leave
mov
lea
dec
mov
xchg
das
ret
shll
add
fdivrl
inc
jo
sbb
testl
add
jmp
stos
add
aam
push
daa
divb
dec
sbb
mov
call
mov
icebp
pop
add
or
push
mov
add
adc
lea
push
cmp
push
mov
xchg
fwait
jbe
iret
dec
push
mov
loope
out
mov
inc
in
fst
stos
add
and
mov
das
ljmp
cmp
out
jle
sti
push
jmp
and
jg
repnz
pop
jle
sbb
jecxz
xor
cmpsl
jns
cltd
stc
push
scas
sbb
test
mov
xlat
xchg
sbb
jg
imulb
or
xchg
cmc
scas
xor
or
and
lcall
sub
lahf
sub
adc
popa
mov
cmp
test
pop
and
mov
mov
in
es
stos
ljmp
sti
cli
push
dec
fcoms
aad
jo
xchg
ja
xor
push
adc
dec
adc
lret
push
jmp
ds
add
iret
aam
add
dec
hlt
or
aam
pop
pop
cmp
pop
push
int
or
pop
in
insl
jbe
ds
inc
pop
xchg
or
jno
sub
mov
into
push
loope
pop
mov
loope
mov
hlt
xchg
pop
dec
popf
sub
push
inc
mov
jp
dec
addr16
adc
xchg
pusha
pop
sub
movsl
scas
push
cmp
test
adc
insb
fimuls
lea
mov
aas
add
pop
cmp
bnd
ja
mov
inc
loop
add
dec
js
or
stc
movsb
push
push
xor
insb
lcall
xchg
psubq
adc
inc
pop
mov
sbbb
push
mov
ja
cmp
mov
lds
adc
pop
pop
loopne
shl
or
sub
add
js
pop
xchg
fisubrs
loop
lods
mov
jmp
ss
das
xchg
push
roll
popa
xor
outsb
cmpl
sarb
jl
dec
xchg
fmull
and
dec
jbe
rcll
out
jp
jbe
or
mov
mov
pop
daa
fisubrs
scas
mov
inc
clc
sti
out
mov
ljmp
sub
push
sub
jp
fs
pushf
mov
iret
loopne
insb
dec
lods
xchg
les
mov
mov
jp
fldl
inc
aam
ds
loop
shlb
sbb
insb
fsubs
xchg
mov
lahf
fbld
jnp
lds
cmp
xchg
icebp
push
nop
xor
ret
sbb
leave
lods
pop
cmp
test
jb
stos
adc
gs
mov
popa
cltd
outsb
enter
mov
cmp
iret
sub
ds
loopne
inc
jb
inc
ljmp
mov
das
push
and
int3
es
mov
ret
stc
and
shlb
jecxz
mov
fcmove
push
dec
sub
or
mov
mov
pop
loope
pop
xor
inc
push
adc
sahf
dec
add
lea
imul
clc
add
push
and
mov
repz
fs
movsb
leave
or
and
mov
jle
je
mov
mov
jl
sbb
test
dec
test
push
test
mov
mov
dec
xchg
addr16
inc
inc
xchg
imull
subb
and
push
mov
sbb
pop
mov
fsubrs
nop
xchg
pop
insb
arpl
sbb
xor
add
sahf
lock
nop
inc
stos
push
pop
dec
subl
dec
loop
pop
mov
sbb
jle
popa
pop
call
or
ret
adc
lea
xor
inc
mov
push
dec
mov
xchg
pop
or
popaw
mov
adc
movsb
sub
daa
inc
jb
sbb
test
pop
lods
jecxz
add
mov
leave
dec
pop
fs
aam
int
clc
clc
bound
push
rcrl
pop
jmp
sahf
repz
hlt
cmp
add
adc
aas
shl
mov
std
inc
mov
sub
add
xor
xor
adc
mov
dec
inc
movsl
cmpsl
push
dec
daa
das
or
jle
loopne
jmp
je
bound
lret
stos
testb
jae
movsl
leave
and
adc
stc
repz
sub
sbb
das
fs
mov
enter
int3
divb
mov
jecxz
lods
or
movsb
rclb
leave
mov
xor
pop
cmp
mov
pop
popf
in
cmp
inc
jo
rolb
push
lcall
test
push
adc
sub
jae
pop
notl
scas
test
mov
nop
insl
cmpsb
shlb
mov
sbb
dec
idivl
xor
scas
filds
xlat
into
aas
sub
xchg
jb
mov
jae
iret
out
leave
pop
jo
add
mov
std
daa
call
inc
popf
push
ficomps
loopne
gs
jb
cmp
add
movsl
cld
dec
shrb
mov
test
mov
jns
fwait
andb
movsl
or
mov
ss
das
mov
stos
inc
and
daa
lahf
daa
push
mov
cmp
cmpsl
je
bnd
es
add
xor
mov
notl
mov
cmp
ret
icebp
xorw
mov
aam
sub
and
sub
sbb
aam
bound
push
mov
jle
in
sti
popl
add
out
sub
mov
pushf
movsb
sti
out
subl
dec
mov
sbb
push
popa
xchg
imul
sahf
sahf
roll
dec
jbe
dec
push
mov
popf
aaa
pop
adc
dec
loopne
pop
test
jl
loope
int
and
mov
fldenv
aas
and
pop
out
fiaddl
xor
into
push
mov
in
xor
in
push
shl
loopne
jb
pop
xor
sbb
xor
pop
xchg
sbb
push
lret
fiadds
push
enter
mov
dec
js
sbb
dec
sti
lcall
stc
cltd
cmp
popa
and
mov
jl
add
xor
ss
outsb
test
aaa
jne
arpl
stos
add
test
clc
es
ds
pop
add
cmpsl
aaa
aad
sbb
xchg
rorb
add
jmp
and
cwtl
lock
movsl
pop
sub
aad
mov
data16
and
sub
fcompl
cld
adc
lahf
xor
sub
add
and
xor
fcomip
dec
add
jg
fsubr
dec
ds
sahf
je
adc
movsl
add
aaa
arpl
imulb
addr16
test
rclb
sbb
insb
pushf
insb
sbb
jmp
xor
or
adc
xor
aas
icebp
push
adc
loopne
nop
sbb
out
loopne
mov
ja
pop
out
loopne
or
xchg
push
jns
sub
test
adc
mov
jne
cmp
in
int3
ret
mov
mov
pop
cmp
lcall
loope
xchg
jp
in
subl
cmp
sbb
xchg
dec
aam
outsb
or
movsl
nop
jne
sub
pop
xchg
sub
mov
movsl
jno
and
cwtl
sbb
testl
loop
ret
in
inc
xchg
adc
in
mov
mulb
pop
sbb
push
ja
enter
mov
cmpsl
mov
mov
leave
pop
pop
ret
and
dec
jae
hlt
mov
pop
pop
dec
mov
hlt
fmul
adc
scas
lret
or
add
sub
fwait
iret
pop
mov
out
negb
jnp
pop
je
pop
pop
test
xchg
add
sub
lock
sti
inc
in
in
outsl
push
dec
pop
pusha
xor
and
out
or
rcr
loopne
jnp
test
xchg
ljmp
mov
mov
sbb
jge
or
in
push
lret
aaa
sub
mov
adc
mov
jb
call
rolb
xchg
jno
jns
mov
out
or
test
xchg
mov
pop
xor
orb
mov
loopne
aad
push
shr
xor
and
dec
mov
xor
lcall
fisttps
mov
movsb
popf
lahf
mov
inc
imul
add
jmp
adc
cmp
insb
mov
mov
imul
mov
dec
adc
cltd
dec
ja
dec
inc
sbb
aad
enter
popf
pop
sbb
mov
mov
lsl
cmpsb
push
scas
orl
orb
mov
mov
ret
push
fyl2x
cmp
jg
jmp
xor
ss
int3
xlat
or
leave
mov
aad
xchg
inc
cmpsl
insl
xchg
jge
ss
fnsave
cmp
clc
arpl
pop
in
aam
xlat
push
loop
pop
cmc
mov
xchg
imul
clc
pop
shrb
mov
scas
jne
mov
mov
lods
lds
das
lcall
mov
or
imul
or
xchg
jmp
adc
popf
imul
inc
inc
xchg
in
adc
mov
daa
iret
xchg
push
rcrl
inc
fbstp
mov
subl
into
mov
jl
inc
notb
ss
mov
adc
sub
sti
pop
inc
leave
inc
je
jno
pop
inc
jmp
repz
mov
sti
push
iret
ret
xchg
add
adcb
sub
lods
mov
lock
mov
cmp
gs
int3
ret
in
dec
lahf
pop
pusha
loopne
inc
and
cmp
lahf
pop
aam
call
xchg
fcmovnbe
ss
sar
outsb
in
xor
sub
sbb
enter
imul
in
adc
sub
pushf
adc
jmp
das
and
dec
sbb
adc
fdivrl
push
jns
mov
rclb
int3
cld
je
mov
or
out
mov
xor
inc
movsl
or
sbb
fisubrl
inc
icebp
pop
jg
and
or
ja
sarl
std
lcall
jno
push
and
xor
cmp
fimull
and
insb
rolb
aaa
in
cmpsb
test
loope
push
loop
jl
inc
shlb
xor
xchg
jno
jecxz
pusha
mov
insb
add
je
jmp
mov
xlat
adc
mov
sahf
inc
std
jnp
and
xchg
mov
pop
into
in
mov
loopne
dec
jae
jl
js
push
in
divb
test
jp
jge
push
push
dec
jno
lcall
shrl
and
cmp
push
sub
cmp
pop
or
mov
add
cs
inc
loop
icebp
pop
ja
xchg
push
push
pushf
pop
dec
lock
push
sbb
lock
sub
test
addr16
mov
loopne
mov
fisttps
fisubl
cwtl
xor
in
sti
imul
roll
ret
xchg
hlt
jno
or
jb
testb
inc
and
and
sar
xor
test
adc
mov
cmp
cmc
jecxz
dec
jae
inc
rorb
mov
mov
fs
movsb
movsl
sub
aaa
lret
hlt
clc
push
jnp
loope
call
bound
jb
xor
hlt
andl
ficomps
sti
adc
mov
adc
fcoml
adc
std
mov
je
mov
mov
adc
rclb
sti
call
fmulp
pushf
mov
sbb
sbb
pop
fsubl
ret
sub
xor
fimull
data16
out
out
sub
das
push
cmp
dec
ja
leave
je
dec
fs
add
cmp
mov
in
xchg
loop
jbe
dec
inc
aaa
pusha
cmp
dec
js
dec
pusha
mov
das
insb
leave
push
dec
notl
xchg
out
xchg
push
out
sbb
cmp
scas
pop
lock
movsb
cmp
leave
aam
xor
mov
adc
push
fsubrl
out
mov
xor
mov
repz
xor
add
fwait
mov
les
sub
ret
jge
jge
or
fdiv
cltd
lret
aas
js
int
sbb
sahf
xor
dec
mov
pop
in
cli
mov
push
add
pop
sti
jno
mov
push
pop
jne
jns
jbe
cmc
cmc
or
lret
inc
pop
cs
jl
lds
mov
inc
int
clc
mov
cmp
arpl
ja
add
push
pop
xchg
cmp
mov
shl
mov
pop
sti
push
jb
jae
cmp
imul
pop
mov
js
imul
test
aaa
cmp
imull
dec
cmp
out
add
test
mov
pop
out
ljmp
jecxz
jne
mov
jb
cltd
gs
outsb
add
mov
fs
mov
or
jle
dec
out
jmp
out
inc
outsb
mov
iret
imul
inc
cmpsl
mov
inc
mov
test
add
mov
enter
shll
dec
or
xor
dec
lcall
js
or
push
push
xchg
inc
les
cmpsb
js
jns
mov
cmpsb
xchg
adc
jae
cltd
mov
loop
pop
jnp
test
nop
and
lahf
mov
xchg
cld
cmpsb
jae
dec
iret
inc
cld
nop
xchg
lds
mov
mov
in
fs
imull
jge
cmpsb
inc
fwait
or
lret
add
adc
push
jl
pop
xor
mov
add
repnz
test
dec
add
aad
add
stos
jae
push
or
pop
dec
les
sbb
lret
and
cmp
outsl
insl
sbb
sbb
popa
adc
cmc
dec
cmp
inc
mov
xchg
call
xchg
dec
dec
subl
pushf
sub
loop
outsb
das
jne
jnp
movsl
cmp
push
sub
jno
push
adc
sbb
popa
shll
inc
push
dec
sub
lods
push
jae
idivl
or
and
test
in
mov
dec
daa
lea
jae
jno
cmp
or
fcom
adcl
sub
cmpl
ja
xchg
dec
cld
sti
popa
jg
mov
pop
mov
sub
add
dec
push
aad
fs
dec
mov
jecxz
or
adc
ja
mov
outsb
sbb
adc
dec
popa
mov
sub
adc
mov
lods
pop
cltd
push
dec
jle
testb
stc
gs
sbb
mov
mov
dec
enter
xlat
cwtl
push
lea
sar
adc
jle
mov
fcompl
xor
dec
jns
inc
push
mov
cli
add
popl
mov
jb
dec
sub
ret
xchg
das
pop
cmp
jl
subb
pusha
repz
pop
push
data16
jp
lahf
jmp
rcrb
mov
xor
xor
mov
mov
sbb
les
xchg
aaa
sbb
out
adc
mov
shl
aad
pop
cmpsl
mov
mov
popa
fnsave
jg
bound
and
jg
fcmovu
adc
pop
cwtl
xor
cmpsl
push
dec
mov
repz
dec
add
nop
ss
filds
cmp
xor
dec
pop
test
addr16
mov
pop
out
xchg
xchg
mov
sbb
cltd
push
sahf
test
inc
mov
dec
mov
fcoms
imull
dec
jns
orps
add
movsb
inc
jo
cld
insb
cmp
lea
mov
sahf
nop
adc
frstor
ja
inc
and
inc
pushf
imul
or
and
jg
jle
rcll
push
dec
mov
dec
mov
pop
sti
xchg
clc
movsl
mov
push
pushf
add
decl
xchg
and
and
pop
in
out
mov
ret
push
or
mov
xchg
cltd
dec
pop
cmp
mov
push
xchg
in
pop
cmp
jl
fs
out
mov
inc
mov
xlat
loope
fwait
xor
in
pop
inc
orb
arpl
lea
xchg
in
jne
cmpsl
or
mov
sti
inc
repnz
bound
jmp
cwtl
cltd
push
xor
xorl
inc
stos
xor
and
nop
call
mov
xchg
mov
popa
add
cld
lret
push
mov
shl
jne
insb
mov
icebp
movsb
fmulp
mov
test
mov
mov
addr16
pop
mov
leave
cli
loope
adc
pop
insl
sbb
xor
enter
out
fucomip
ds
and
adc
push
es
jno
bound
test
lahf
outsl
push
jno
cmp
sub
inc
xchg
outsl
pop
loope
mov
push
xor
dec
call
push
stos
lahf
dec
jno
cmc
imul
pop
insl
sbb
jno
stc
aas
test
fldt
jmp
ret
adc
dec
idivb
cmp
aad
mov
xor
pop
jge
mov
push
sub
je
xchg
fwait
outsl
hlt
cmp
gs
cmp
adcb
add
out
cs
mov
arpl
or
cmpsb
pop
cmc
aam
and
dec
int
shll
dec
hlt
aad
data16
lahf
inc
add
mov
movsb
les
cmp
add
xchg
pop
push
xor
aas
xchg
cmp
cld
incl
sbb
add
lock
in
adc
cmp
dec
enter
aam
push
mov
adc
mov
dec
sbb
bound
jle
cwtd
sar
ret
mov
gs
xor
pop
arpl
mov
cli
movsl
ljmp
js
fistps
sahf
sub
pop
pop
sbb
insb
push
test
or
stos
out
xchg
aad
lahf
sbb
or
lock
and
ss
cwtl
push
and
call
movb
mov
dec
push
xchg
outsl
inc
add
ja
add
cltd
xchg
add
mov
xchg
stc
or
push
ret
or
inc
ljmp
mov
xor
dec
push
fwait
std
rorl
not
adc
mov
push
cmp
nop
pop
rcrl
lds
mov
add
pushf
mov
hlt
sub
daa
outsb
push
or
inc
mov
rol
pusha
lea
add
ja
dec
push
mov
sub
inc
lret
push
xor
push
mov
jge
sbb
out
jne
dec
pop
out
pop
xchg
or
push
push
jno
imul
push
out
mov
mov
jp
sub
mov
out
sti
int3
lds
mov
cli
movsl
fs
movsb
repnz
pop
aam
fwait
jmp
es
inc
push
les
lcall
inc
xchg
pop
enter
shll
popf
int
add
mov
scas
mov
in
fs
dec
int3
pop
inc
pop
xor
lds
pop
and
fwait
mov
lods
cwtl
lods
ljmp
outsl
pop
xchg
xchg
je
adc
repnz
or
sub
arpl
dec
inc
fstps
inc
xchg
test
mov
popa
and
insb
cmpsl
lcall
mov
jne
in
sub
inc
fsts
jns
bswap
popa
pusha
int
sti
movb
or
and
sar
adc
inc
mov
pop
jns
in
xchg
xor
pop
rcrl
push
in
shl
add
pop
stc
pop
loop
inc
test
jno
ss
es
mov
sub
xchg
aad
std
mov
fisubrl
xor
pop
jg,pn
inc
fchs
popf
sub
sbb
mov
push
push
lahf
fstl
aad
test
shl
fisttps
in
inc
jno
scas
in
jecxz
mov
jo
lods
das
and
push
out
push
jecxz
dec
sbb
add
xchg
das
jmp
push
mul
sub
add
mov
jle
fidivs
push
mov
in
dec
negl
pusha
push
test
out
xor
movsb
sub
out
adc
cmp
or
jbe
pop
pop
xchg
cmp
lret
add
pop
je
aas
pop
shlb
jno
arpl
push
mov
dec
or
in
inc
dec
notl
pop
cs
jmp
enter
dec
dec
fucomip
pop
xchg
mov
shlb
dec
dec
repnz
sti
test
mov
repz
sahf
push
imul
push
sbb
shlb
ret
dec
movl
test
and
mov
orl
es
je
mov
incl
ljmp
stc
and
call
mov
xchg
jo
push
fists
mov
test
fwait
sbb
rcl
pusha
sbb
aad
adc
mov
push
pop
dec
mov
call
pop
sub
xchg
ror
cs
xchg
push
repnz
les
push
lahf
hlt
mov
dec
inc
sub
and
xor
sub
xchg
mov
push
addr16
xchg
mov
mov
shl
ret
insb
shrl
scas
fmull
and
dec
aaa
add
xchg
insb
jne
push
mov
leave
jne
repz
sbb
xor
jb
lahf
inc
sbb
mov
test
jp
in
movsb
push
push
xchg
sbb
std
pop
int3
aam
cltd
aam
repnz
aaa
les
aam
pop
inc
leave
lock
loopne
sti
out
mov
mov
outsl
loope
dec
mov
cmp
lods
cld
js
dec
mov
scas
push
mov
jne
lods
sahf
lods
add
scas
mov
mov
das
and
lea
lret
ss
fdivs
adcl
cmp
sbb
xchg
sub
shlb
mov
es
mov
sbb
jnp
daa
sub
mov
dec
outsb
pop
dec
inc
popf
xor
xor
jne
mov
or
and
jp
and
dec
scas
popf
mov
pushf
inc
fidivl
mov
mov
popf
mov
xchg
or
rorb
pop
cmpsb
shlb
and
sbb
lods
jo
lods
das
add
adc
jle
jmp
mov
dec
mov
fsubs
rcrb
and
aaa
ljmp
inc
jge
xchg
subb
and
and
mov
les
cmp
arpl
dec
push
mov
pop
or
jo
andb
dec
cmp
rclb
push
sti
mov
rclb
fdivrs
popa
sub
add
clc
xchg
mov
add
or
mov
arpl
inc
push
cli
aam
pop
fwait
aam
clc
xchg
mov
pop
cwtl
jae
out
pop
cmpsl
adc
insl
arpl
repnz
adc
addb
ret
cmpsl
mov
mov
jmp
std
adc
sub
cli
cmpsb
js
test
movsl
mov
xchg
mov
jbe
and
pop
mov
cmp
cs
sub
mov
es
and
popa
pop
sbb
adc
test
xchg
imul
push
pop
test
insl
loopne
hlt
sti
shr
imul
mov
pop
xchg
lret
cmp
jg
sub
push
dec
mov
call
inc
pop
mov
gs
scas
add
sahf
inc
lcall
sbb
or
cmp
pop
xchg
orb
xor
cmp
in
pop
cmpsl
test
lcall
mov
mov
adc
inc
mov
out
in
out
fldenv
jbe
shrb
pop
cmp
into
ficoms
and
call
lods
outsb
xchg
pop
addr16
dec
push
jl
mov
push
mov
sub
mov
push
pushf
inc
xor
cli
sbb
ds
xchg
add
or
sahf
shl
adc
and
add
inc
push
fstp
adc
imul
jge
adc
fldt
push
std
aas
jne
pushl
sbb
shlb
and
push
incl
and
aaa
and
ret
cli
flds
sub
in
icebp
out
stc
pusha
insl
test
test
cmpsl
insb
arpl
cli
push
cmc
dec
lea
cli
cmp
in
mov
sahf
or
mov
daa
sub
dec
adc
inc
jbe
lret
mov
xor
jne
iret
ja
dec
pop
mov
lods
add
push
das
pop
hlt
popl
movsb
pop
nop
jnp
xor
out
pop
xchg
xor
dec
fisubl
std
push
cmp
fidivs
sub
mov
sbb
call
xlat
sub
out
fwait
inc
pop
jl
xorl
lods
shll
inc
dec
cmpsb
add
xor
popf
movsb
movsb
in
ljmp
das
ljmp
cmc
in
mov
push
outsl
jb
fidivs
sub
dec
movsb
xchg
adc
and
xchg
stos
mov
cmp
test
addl
jne
mov
xchg
mov
insl
out
inc
mov
lea
and
pusha
mov
arpl
inc
push
jmp
aam
movsb
xchg
int3
add
add
mov
fsubs
jnp
xchg
aad
dec
xchg
inc
in
push
cmpsb
into
negb
jbe
mov
inc
in
add
pop
mov
cld
push
inc
jne,pt
test
xor
cmp
stc
shlb
imul
aaa
pushf
imul
or
lea
pop
pushl
rclb
stos
sbb
jo
sbb
js
cli
xchg
or
cmc
add
je
jecxz
and
imul
adc
dec
getsec
loopne
add
sbb
xor
xor
sahf
jo
aam
pop
mov
xchg
fsub
out
lea
fistpl
adc
and
dec
dec
test
hlt
scas
dec
pop
or
sub
movsl
ss
cmp
jg
ret
mov
pop
fldcw
mov
jl
add
out
sahf
je
sub
adc
push
mov
cmp
cmp
popa
mov
push
jo
cld
xchg
mov
cmpsl
rorl
das
pop
push
jnp
and
mov
stc
loope
or
aas
mov
test
or
pop
imul
es
and
jp
das
and
mov
push
fnstsw
pusha
jmp
inc
xlat
jl
sbb
push
adc
and
inc
rcrl
dec
rol
xorb
shr
loopne
or
stos
or
movsb
dec
fnsave
add
mov
sub
add
dec
push
test
jmp
notb
pop
insb
leave
dec
xor
push
pop
inc
stos
pop
scas
out
sub
xor
jns
movsb
mov
adc
mov
stc
xchg
aas
mov
in
std
add
push
push
fucom
rclb
test
sysenter
jns
push
in
arpl
pop
repz
add
sub
inc
push
lods
hlt
rol
sbb
mov
xor
push
loopne
xor
out
mov
inc
fisttpll
es
scas
lcall
add
add
jecxz
sub
dec
add
insb
xchg
ret
jmp
jp
fcoms
std
add
test
addr16
in
gs
sub
icebp
adc
mov
ljmp
dec
lret
loop
ds
dec
stos
mov
lret
xor
stos
jg
pushf
push
jmp
les
rcrb
jno
jne
push
mov
test
fnsave
bound
cli
mov
cld
lahf
pushf
inc
out
cmpsb
push
das
inc
testl
fildll
das
mov
nop
push
lret
js
dec
in
cmp
inc
jge
add
push
loopne
mov
pop
mov
out
sbb
adc
cli
pop
jne
inc
dec
popf
outsl
fildl
xchg
pop
xsaveopt
aas
jg
sub
lods
inc
dec
sbb
std
inc
mov
dec
xor
sub
int3
scas
mov
sub
add
mov
mov
mov
imul
sub
pusha
imul
and
cmpsl
fisubl
inc
test
je
mov
loop
push
sub
mov
push
loop
dec
hlt
and
inc
or
roll
cmpl
jecxz
scas
mov
mov
xor
dec
ja
cwtl
aad
cmp
mov
imul
mov
aas
adc
iret
cs
rcll
imul
xchg
dec
mov
mov
inc
mov
mov
jg
fistps
add
push
ljmp
lahf
pop
xor
inc
test
cmc
cmp
imul
inc
and
icebp
mov
jmp
jb
pop
call
addl
jle
xor
jns
pop
into
scas
das
mov
loop
sub
inc
mov
fldt
fbstp
in
xchg
mov
pop
pop
stos
movsb
movsb
push
pop
adc
mov
cld
cmp
or
xlat
cmp
jns
dec
stos
cwtl
lods
nop
icebp
cmp
movsl
iret
push
push
jmp
xchg
and
push
leave
push
pusha
idivb
je
xchg
sub
mov
mov
add
sub
cmp
adc
adc
inc
stos
ss
ret
dec
adc
pop
inc
int
push
jmp
sbb
and
inc
mov
push
jb
addr16
aad
es
sub
aas
lods
out
push
lahf
push
out
or
cli
jb
and
mov
inc
lcall
jmp
push
cli
out
sahf
jo
jnp
inc
scas
pushf
cli
fadds
xor
cli
xchg
xor
mov
lahf
lds
xchg
dec
bound
scas
cli
lods
xchg
mov
jp
shll
or
je
push
xchg
jb
ror
fsubrs
into
mov
lret
cmp
stos
fwait
lds
arpl
icebp
push
aas
inc
mov
or
xchg
dec
xor
addl
lahf
jb
jo
mov
mov
rcrl
les
popf
pusha
out
cmp
push
icebp
dec
sbb
and
or
popa
cmp
out
cmp
sbb
pop
out
loope
jae
inc
pop
fisubl
ljmp
jo
test
dec
jo
cmp
ffree
push
iret
loopne
in
jmp
ret
mov
sub
lret
sub
pop
cmp
mov
outsb
jnp
sbb
popa
xchg
sbb
loop
aad
sub
insl
jge
xor
sub
setno
sbb
mov
and
and
sbb
push
cmp
dec
xor
xchg
js
dec
sub
pop
mull
stc
in
movsb
outsl
push
ds
mov
sub
mov
int3
out
push
jg
dec
sti
sub
xchg
adc
sbb
pusha
cmp
inc
jl
add
ja
pop
loopne
push
dec
mov
mov
lahf
sarb
imul
clc
jo
loopne
incb
sub
fnstsw
xchg
icebp
push
inc
jp
movsl
lret
mov
ljmp
mov
lock
mov
adcl
data16
decl
leave
repnz
scas
ss
dec
adc
lea
xchg
and
pop
jle
jecxz
mov
out
ss
cmp
incl
cli
inc
add
mov
xchg
dec
loope
movsb
mov
xor
stos
or
adc
scas
and
sub
push
jae
lcall
sub
popf
lea
pop
inc
adc
leave
les
or
sbb
insl
adc
pop
cmpsb
inc
out
mov
jbe
mov
clc
jg
jns
daa
sbb
aam
mov
adc
mov
lcall
out
mov
aas
cmp
inc
cwtl
push
xchg
aad
dec
clc
jle
and
pop
sub
push
lods
test
loope
ds
xchg
mov
inc
dec
mov
shl
insb
in
iret
pop
sub
in
dec
sbb
mov
push
add
testl
cwtl
idivb
pop
or
sbb
ret
das
not
mov
or
push
and
pop
outsb
sar
sub
mov
jp
add
cmp
mov
xorb
aam
addb
sub
mov
jae
xor
es
push
lret
mov
jmp
scas
xchg
out
mov
pop
inc
daa
dec
xorb
xchg
jno
push
popf
inc
or
push
xor
pop
andps
push
cld
addb
dec
inc
hlt
leave
rcrb
mov
aas
ret
out
add
and
sub
loope
lds
jmp
dec
fbld
into
jo
lret
test
incl
dec
jbe
into
hlt
fiadds
lahf
pushf
lea
xchg
inc
icebp
sbb
outsl
xchg
push
sbb
movsl
adcb
das
sub
or
or
cmp
mov
sbb
pop
icebp
push
mov
mov
xchg
mov
stos
sub
sbb
dec
test
dec
cmp
xchg
pop
in
paddusw
int
mov
sub
movsl
call
mov
movsl
jne
repnz
orl
rcll
inc
mov
adc
fcomps
dec
insl
outsb
movsb
or
xor
js
inc
int
push
dec
std
adc
mov
bound
fcoml
and
xor
lret
loope
js
add
push
pop
outsl
cltd
sti
add
dec
cmp
adc
imul
repz
cmp
rclb
lock
push
cmp
pop
insb
mov
outsl
imul
repnz
test
hlt
inc
xchg
lahf
out
sub
and
adc
loopne
lds
pop
cmp
in
inc
lret
mov
mov
mov
mov
xchg
test
popf
mov
mov
pop
pop
shrl
push
cs
add
xchg
leave
in
lret
xchg
mov
xor
sub
hlt
ret
popa
pop
lret
addb
jne
movsb
mov
insb
xor
and
cmp
ja
jae
jp
iret
shll
scas
aad
push
repnz
add
aam
icebp
cmpsb
xchg
dec
sub
ljmp
outsl
sub
loop
jge
mov
addb
stos
xor
lds
sarl
fs
lods
in
fsubs
int3
das
out
js
out
cli
into
or
int3
xchg
clc
loope
sbb
insl
mov
sbb
mov
jmp
pushf
add
ds
cmp
cwtl
push
out
jb
insb
cmc
pop
xor
subl
rcrb
jbe
mov
leave
jns
adc
inc
in
dec
call
cmpl
out
inc
pop
sub
jg
jns
xor
fimull
int
inc
lahf
mov
jns
test
sbb
sbb
divl
sub
inc
mov
pop
wrmsr
or
adc
into
cltd
hlt
sub
dec
ret
test
mov
call
cmpsb
lds
push
and
cmc
or
adc
dec
mov
pushf
jmp
popf
cmp
dec
movsb
bnd
lcall
inc
fwait
imul
in
in
lahf
push
cltd
sbb
push
sub
jecxz
addr16
stos
popa
mov
sbb
sti
adc
sub
lea
mov
packsswb
pop
sub
loop
xor
fcmovnbe
jbe
adc
es
out
add
or
push
not
es
sub
jo
arpl
dec
and
lcall
pop
cmp
push
cmp
sti
xchg
or
jmp
pop
mov
loopne
xorl
clc
es
pusha
dec
test
test
mov
shll
xor
cmp
sti
xor
fcmovne
aad
cmp
lock
rclb
and
mov
mov
pop
lret
scas
xchg
shlb
or
mov
ja
insl
xchg
fnstsw
aad
xchg
sbb
cmpsl
jp
fwait
xchg
aas
sbb
cmp
inc
loopne
das
mov
pop
or
hlt
mov
clc
lods
fdiv
push
mov
and
sub
mov
lahf
testl
inc
xchg
jp
std
addr16
mull
loop
lods
pop
movsl
xchg
test
int3
cmc
sub
add
xchg
outsb
mov
popl
fdivs
clc
stc
push
out
sbb
jne
lahf
push
daa
sbb
les
mov
ret
xlat
lods
cli
sbb
xchg
fnstcw
or
xchg
adc
jbe
inc
add
cmp
mov
mov
push
dec
fldt
inc
movsl
in
pop
lods
lock
xor
popa
aas
push
repnz
ja
lds
dec
push
aam
inc
arpl
jo
cli
mov
mov
add
pop
xor
sbbb
ret
inc
mov
lahf
adc
leave
stos
enter
cmpsb
add
push
int3
mov
sbb
pop
mov
in
es
pop
jns
pushf
ret
popa
lret
sub
mov
and
sub
add
and
daa
push
rcr
or
dec
push
jg
cltd
icebp
adc
lahf
les
pop
and
scas
mov
pop
mov
scas
icebp
xchg
shlb
dec
push
clc
mov
mov
and
pusha
push
cmp
mov
sbb
ret
lahf
shlb
mov
inc
xor
movb
mov
inc
push
add
add
push
ss
sarb
stc
das
lds
subb
push
pop
jmp
sub
xchg
stos
jnp
imull
pop
lods
or
test
ljmp
fsubs
mov
sub
shll
sbb
in
mov
aas
outsb
mov
daa
xor
loope
push
std
adcl
movsl
andl
call
int3
adc
push
cmp
cmpsb
sbb
lret
mov
das
sub
mov
or
shrb
test
xor
clc
xchg
dec
and
push
inc
roll
int
stc
int
in
mov
pop
orb
das
ficompl
out
jmp
cmp
pop
cmc
jno
packssdw
mov
jmp
scas
cmpsl
test
cmp
mov
sbb
mov
xchg
ds
nop
mov
mov
jne
je
pop
lea
fiaddl
cltd
add
rorl
xor
arpl
nop
fcomp
xchg
mov
gs
clc
fnstcw
and
push
or
inc
test
cwtl
sahf
push
stos
sahf
imul
enter
ljmp
pusha
lods
xchg
xor
rcl
repnz
fmull
xlat
imul
lds
jo
adc
jmp
aas
cmp
add
xchg
sbb
xchg
cmp
mov
pusha
mov
mov
lods
lds
hlt
cmp
data16
fwait
out
clc
pop
sbb
pop
mov
lahf
testl
inc
rol
jg
jle
mov
dec
mov
enter
mov
add
inc
inc
frstor
sbbl
mov
insl
cwtl
or
jl
aas
jg
jle
lea
scas
mov
or
mov
xor
inc
cwtl
xchg
mov
pop
lds
and
and
jecxz
dec
mov
cmp
xchg
or
xor
call
and
xchg
dec
xor
xor
adc
icebp
push
shr
sbb
idiv
cmpsb
ja
mov
mov
sub
jo
mov
push
jp
cwtl
scas
in
mov
cmp
sub
loopne
ds
lock
dec
test
insl
aad
pop
xchg
pop
push
jl
xor
cmc
xchg
push
lahf
int3
sub
xchg
leave
mov
cmp
movsb
cmp
sarb
pop
dec
or
mov
xchg
sub
insl
insb
divl
or
cld
iret
xor
jecxz
fdivrs
push
xchg
and
lret
in
fcoml
xchg
scas
fs
sarb
int
aad
dec
cmp
cwtl
sbb
ficomps
mov
scas
movsl
and
fwait
mov
adcl
mov
ror
in
insb
dec
sub
stos
dec
addb
aaa
jge
fsubrs
popf
inc
mov
mov
fisubrs
call
rcrl
mov
jnp
pop
xchg
cs
xor
inc
add
xchg
pop
lea
out
data16
xchg
test
sbb
add
or
sti
sbb
and
dec
test
lret
ljmp
mov
pop
xchg
dec
lret
add
jl
mov
fisttpll
cmp
xorb
inc
aas
xor
add
dec
shrb
lahf
mov
ds
inc
fidivrs
mov
and
cmp
cld
inc
nop
pop
mov
mov
lea
mov
ljmp
ja
or
mov
gs
pop
in
bound
inc
js
xchg
sub
mov
int
push
aas
add
cmpsl
push
popfw
pop
rcl
dec
pop
jnp
orb
jae
xor
gs
icebp
movsb
adc
stos
push
xchg
pop
nop
inc
sbb
push
sub
mov
sub
out
fsubrs
mov
lret
fadds
popf
and
push
mov
mov
xchg
mov
jae
push
lret
int
loope
cmc
or
push
mov
and
aad
dec
mov
push
jbe
fdivrs
mov
mov
sbb
sti
mov
jg
mov
inc
int3
dec
imul
add
xchg
add
xchg
mov
in
cmpsb
pop
rcrl
pop
filds
loope
outsb
sbb
call
sbb
xchg
fidivs
adc
dec
cmp
ss
mov
pushf
inc
sbb
mov
cmc
and
enter
out
xchg
movsb
and
dec
and
test
mov
inc
je
push
push
cmp
jg
shl
inc
rorl
lock
mov
jne
aad
outsl
and
in
sbb
sbb
pop
mov
xor
sub
pop
inc
push
sub
pop
std
sbb
jne
push
dec
insb
loope
out
subb
xchg
outsl
pop
les
mov
js
call
movsl
pop
hlt
sti
xchg
roll
sub
aad
mov
leave
push
cmp
pop
pop
and
into
xor
sti
call
pushf
stos
dec
dec
push
imul
jge
dec
out
sarl
xchg
mov
shll
sub
adc
mov
pop
outsb
inc
gs
push
inc
fwait
xchg
or
adc
fmuls
xor
adc
fpatan
push
test
and
mov
push
sti
int
sbb
mov
leave
jmp
and
push
dec
xchg
push
xor
in
xchg
das
jmp
sahf
dec
aam
imul
outsl
nop
pop
hlt
repz
cmpsb
outsl
lea
xchg
rcrb
leave
jmp
test
pop
movsb
aam
icebp
scas
sbb
mov
dec
jle
test
fnstcw
mov
in
sub
adc
bnd
mov
rolb
lock
cmp
push
jmp
scas
and
adc
leave
or
and
and
ss
in
mov
and
push
push
out
xor
mov
push
lahf
in
jecxz
cmp
stc
fcompl
xchg
cmpsb
or
sbb
jle
fdiv
sti
xchg
int
repz
sbb
cmc
jnp
add
sub
jge
subl
fmul
mov
mov
push
loope
push
or
shld
mov
pop
inc
add
inc
out
xchg
jmp
ret
cmp
sbb
inc
push
cmpsl
cmp
and
popf
dec
out
xchg
scas
stos
or
xchg
loope
add
dec
stos
pop
int3
xor
in
sub
inc
lcall
inc
dec
cli
mov
jbe
lret
or
pop
fisubs
jge
push
pop
cld
fs
popa
push
sbb
xchg
add
xchg
fcompl
mov
lock
sarl
mov
popf
push
test
mov
ds
mov
filds
ja
mov
in
aam
and
or
xlat
xor
es
int3
lods
xchg
imul
mov
pop
in
popf
bound
adc
aam
lods
stos
scas
popf
out
int
popa
push
ljmp
out
xchg
std
arpl
in
test
jmp
jo
std
ja
lock
ds
or
fmul
nop
mov
lahf
push
test
and
pop
xor
test
movsl
sub
sbb
pop
jnp
push
adc
cwtl
mov
xorl
or
and
nop
jnp,pn
in
cmpsl
fwait
das
decb
or
repnz
push
hlt
xchg
xlat
ret
sub
adc
outsl
stos
iret
sbb
pop
xchg
xor
add
pushf
ja
sub
int3
sbb
adc
ljmp
jg
lods
cmp
mov
push
sub
xlat
test
in
jp
out
fdivrs
cmp
push
mov
movsl
add
repnz
cltd
pop
int3
mov
cmp
mov
jae
mov
push
or
stos
mov
out
mov
dec
push
fldcw
add
leave
xor
lock
mov
enter
mov
mov
fsubl
rcl
jns
cmp
je,pn
pop
push
in
mov
dec
movsb
mov
xlat
adc
mov
dec
fwait
ds
cs
mov
xlat
insl
xchg
sbb
test
jg
iret
sbb
mov
das
cmc
mov
jp
dec
inc
cmp
mov
sbb
pop
push
ljmp
or
lods
pop
cmp
dec
mov
mov
sub
xchg
push
xchg
es
rcll
push
call
mov
cwtl
jb
mov
adc
add
cmp
subb
push
fimuls
bswap
fwait
lret
sub
sbbl
jp
ds
lahf
adc
das
or
mov
cmp
xchg
push
loope
popa
push
add
js
in
fnstenv
pushf
fsubl
mul
fisubs
insb
sub
xor
cli
inc
jo
adc
call
sbb
push
or
fldl
in
adc
mov
mov
test
clc
lods
mov
pop
pop
lods
xor
cmp
sub
sub
in
cmp
femms
push
sarb
sti
rclb
lods
aaa
dec
loop
jbe
inc
sbb
loopne
insl
and
pop
pop
push
rcl
mov
shrl
xor
scas
lret
jg
enter
notl
imul
lret
test
inc
mov
sbb
mov
and
inc
bound
in
loope
fistpl
xchg
jb
sub
inc
lds
push
or
cmp
or
sbb
pop
call
ret
outsb
fisttps
or
fwait
adc
out
icebp
insl
add
jne
stos
jg
inc
loopne
sbb
dec
sbb
and
scas
jecxz
push
jl
es
xor
inc
xchg
lods
lds
adc
dec
dec
daa
data16
mov
fwait
movsl
inc
cmp
cld
shl
xor
inc
or
mov
movsl
mov
out
in
scas
pop
cld
lods
xchg
jmp
push
in
daa
rorl
out
les
cmp
cmp
jp
jp
pop
jmp
stos
adc
xchg
rcrb
imul
outsl
je
repnz
cli
int3
jmp
popa
jb
cwtl
mov
mov
inc
cmp
mov
divl
imul
call
sarl
sar
arpl
jns
sub
xchg
sbb
das
idiv
xor
push
sti
mov
sub
push
lcall
test
dec
pushf
jmp
sub
fadds
lret
inc
sub
mov
ss
pop
cmp
inc
xchg
shll
pop
cmp
not
dec
sarb
pop
add
andb
mov
push
in
sub
popa
lods
inc
fwait
xor
shl
jecxz
shrb
stc
add
fs
out
popf
xchg
inc
push
mov
adc
insb
fildl
les
jp
flds
out
cmc
lret
push
enter
aad
aas
add
and
int3
imul
mov
out
hlt
inc
fmull
lea
mov
cmc
sub
cli
mov
xlat
stc
mov
out
xchg
fisttps
adc
arpl
sub
mov
sub
outsb
or
or
rol
sbb
dec
xchg
xor
jmp
jmp
lods
xchg
iret
daa
in
sub
sahf
lods
xacquire
jns
cmp
test
adc
mov
pop
jns
mov
popl
xchg
push
xchg
test
movsb
in
mov
xchg
lods
pop
outsb
mov
ds
lods
sbb
iret
adc
sti
xor
xchg
jae
mov
in
movsb
mov
pop
shlb
push
aaa
dec
mov
xchg
sbb
lret
pop
dec
adc
shlb
pushf
lret
push
sub
ret
fwait
dec
xor
jo
sbb
pop
and
sub
jb
sub
sub
lahf
xchg
inc
push
movb
add
pop
and
loopne
mov
ss
jg
jbe
clc
and
std
nop
push
or
sub
xchg
cwtl
clc
inc
mov
add
lock
push
cmp
test
cmp
bound
fistpll
sbb
mov
das
jge
cmp
faddl
mov
movsl
lcall
adc
inc
adc
test
out
gs
stos
jg
add
add
fwait
mov
pop
mov
sahf
sbb
popa
jns
jno
shl
sbb
add
pop
sbb
mov
subl
stos
sbb
out
mov
cmp
popa
jmp
mov
mov
adc
and
adc
dec
or
mov
adc
sbb
xchg
out
mov
xor
cmp
into
das
enter
xorl
add
jno
mov
xchg
in
popw
jmp
pop
push
cwtd
je
lods
scas
mov
movsl
fs
aad
sub
fmuls
dec
mov
xor
jbe
adc
push
pop
out
or
or
fbstp
dec
pop
mov
mov
int
dec
je
jp
lahf
fldt
push
iret
add
into
loop
sarl
std
inc
xchg
xor
push
std
mov
aad
sbb
test
adc
movsl
mov
loopne
aas
jmp
dec
push
mov
jmp
mov
inc
sub
pop
dec
pop
leave
lret
mov
ficompl
mov
subb
jns
mov
cmp
jl
test
pop
push
daa
int3
mov
fwait
mov
mov
push
nop
and
out
jmp
movsl
in
lock
ja
or
lahf
xchg
clc
xchg
outsl
mov
push
push
mov
push
mov
cmpsb
sub
mov
and
ljmp
notl
clc
lret
mov
inc
ret
pop
cmp
dec
mov
pop
add
push
loopne
push
lcall
push
repnz
loope
adc
ja
daa
popa
add
xor
mov
sub
xorb
loopne
sbbb
mov
add
or
das
or
push
filds
inc
cli
pop
cmp
push
es
pop
adc
lahf
outsl
pop
sbb
or
insb
xchg
inc
aam
sbb
pusha
sub
dec
shll
dec
int3
fs
popa
bound
imul
in
mov
out
clc
xor
sarb
je
addl
pop
push
cmp
stc
in
add
loopne
aad
dec
and
imul
cmpsb
add
xor
mov
sbb
aaa
and
bound
pusha
jbe
adc
les
leave
pop
stc
mov
inc
dec
data16
jnp
dec
inc
repnz
sub
adc
lea
sub
lds
idiv
setne
fcompl
inc
ret
addr16
or
mov
sbb
aas
inc
jge
add
dec
insb
dec
les
push
ret
test
push
and
add
or
fwait
jno
outsl
mov
js
pop
or
sbb
ret
mov
sahf
lock
or
cli
push
and
test
mov
mov
dec
loopne
or
fdivr
jmp
cmp
mov
or
cmp
jge
ljmp
stc
and
outsl
jbe
stos
test
imul
shl
or
cmpsl
lea
mov
out
nop
jbe
stc
fisubrs
push
push
and
sti
xchg
das
outsb
push
addl
xchg
insl
insl
out
jle
jmp
pop
std
push
adc
mov
lahf
dec
jae
cmp
sbb
xor
nop
and
cli
adc
cs
in
push
rol
add
ss
pop
or
imul
push
sbb
push
ret
pop
cmp
scas
cmpsl
jbe
outsl
xor
inc
jnp
and
mov
dec
cmp
mov
inc
inc
mov
mov
xchg
mov
addr16
jecxz
mov
outsl
leave
jne
push
pop
call
test
cmp
pop
adc
int
movsb
je
ja
dec
into
pop
insb
add
and
or
loope
test
or
out
mov
cwtl
test
sbb
dec
dec
mov
pop
cmpsb
inc
ss
aam
mov
adc
jno
lods
or
test
mov
fsubrl
push
insb
adc
out
cmpsl
js
cmp
repnz
mov
les
adc
mov
fcmovnb
sbbb
mov
in
mov
sub
pop
lds
je
loopne
test
int3
outsb
pushf
mov
push
sbbb
test
out
jb
movsl
cmp
jnp
test
sbb
xchg
enter
rcrb
xor
push
sti
push
mov
or
je
jmp
rcrl
mov
mov
jnp
sti
pop
fmull
sbb
jge
mov
push
jno
mov
test
push
sub
sub
xor
mov
lahf
int3
sbb
outsb
scas
jne
ss
mov
inc
mov
or
cwtl
flds
xor
adc
out
js
dec
or
inc
cltd
dec
xor
int3
fbld
sbb
fdivrl
inc
ret
lea
adc
adc
push
pop
iret
popa
fildll
mov
in
push
pop
stc
pop
dec
js
hlt
pop
pop
fwait
mov
mov
jecxz
xchg
enter
xchg
jae
outsb
popa
addr16
xlat
xchg
divl
rcl
xchg
pop
jmp
xchg
push
xchg
es
cmp
out
adc
jge
xchg
ds
push
push
inc
jmp
add
fbstp
int3
fists
jmp
xlat
push
xchg
xchg
cmpsb
and
dec
ret
or
xchg
dec
fistps
lods
aas
and
mov
scas
iret
mov
sahf
loop
iret
iret
lcall
pushf
and
inc
lret
das
push
out
popa
shll
cli
addl
test
push
scas
sub
xor
mov
in
lds
dec
stos
xchg
pusha
add
xor
lahf
int
decb
dec
adc
mov
xchg
test
inc
mov
mov
shr
sub
rclb
sub
cld
rorl
pop
xor
sbb
ss
xchg
adc
inc
and
mov
rolb
adc
or
jmp
xchg
loop
adc
arpl
rcrl
mov
cmpsl
sbb
mov
dec
int
ss
jmp
in
movsl
sti
shlb
push
push
inc
test
inc
daa
jmp
or
cmp
mov
sub
ds
mov
mov
cmp
add
adc
cs
enter
adc
mov
shl
push
shrb
push
scas
cmp
dec
or
loope
push
cwtl
add
pop
in
movsb
lock
call
pop
ja
inc
sbb
jno
inc
hlt
nop
cld
add
test
pop
adc
mov
xchg
jno
fnstenv
pop
pop
es
gs
inc
mov
push
in
mov
lret
mov
inc
or
sub
inc
mov
push
xchg
cli
rcrb
scas
aad
je
add
imul
lea
adc
sub
test
stos
mov
xchg
inc
jnp
jle
add
xor
dec
lcall
scas
sbb
mov
in
xor
repnz
or
int3
loope
sbb
sub
bound
sub
jb
add
ret
loop
fdivl
mov
push
xchg
mov
push
test
cmpl
xor
cmp
adc
push
outsb
mov
cmp
fcomp
mov
stos
pop
leave
enter
sub
popf
ds
leave
mov
inc
jmp
lret
call
push
or
xchg
mov
mov
jo
outsl
or
or
nop
xchg
pop
fnsave
ja
jmp
mov
cmpsb
cmp
stc
sbb
xchg
cltd
lods
dec
mov
sbb
xchg
or
pop
outsb
or
xlat
lret
mull
ljmp
sbbb
ret
pop
mov
cmp
les
pop
iret
sub
inc
and
es
mov
pop
test
sti
inc
stos
xor
xchg
and
lret
imul
dec
and
push
mov
test
aad
inc
or
outsl
jge
jg
sub
aaa
xchg
clc
lea
xor
and
add
sbb
fdivrp
mov
lock
in
xor
cmc
lahf
xchg
push
push
sbb
mov
pop
mov
insb
xchg
ret
stos
xchg
mov
xchg
and
loope
mov
in
add
es
aad
xor
mov
sbb
outsl
lret
out
and
mov
xchg
rolb
ret
adc
cmp
mov
jecxz
or
pop
pop
cmp
dec
vpunpcklwd
scas
xchg
dec
adc
in
adc
clc
sbb
addb
push
pop
jmp
int
loop
jecxz
fwait
xchg
pop
inc
mov
dec
mov
dec
test
xchg
mov
pop
pop
shr
bound
xor
div
call
mov
in
push
mov
frstor
pop
movsl
ss
sbb
fsubrl
xor
mov
pop
push
sub
and
and
jo
xor
call
xor
lock
test
inc
inc
sub
jle
pop
lcall
jae
in
adc
pop
pop
cmp
test
mov
pop
dec
mov
xor
pop
in
pop
mov
lds
inc
aad
xor
or
popa
adc
fs
test
das
into
inc
adc
fbld
jmp
jo
sub
scas
in
loope
mov
push
jno
imul
inc
mov
imul
adc
jb
mov
cltd
sub
cli
sbb
and
push
js
stos
imull
shlb
daa
mov
scas
xor
or
dec
inc
ret
inc
stos
mov
or
mov
gs
mov
dec
cmp
dec
jecxz
loop
jne
inc
test
loopne
mov
rcr
xchg
sbb
sbb
pop
outsb
pop
frstor
cmp
nop
negb
mov
and
fstl
jp
fwait
lahf
push
cmp
add
movsb
cmp
xchg
lock
push
pop
mov
dec
sbb
leave
adc
lds
sbb
add
ss
data16
enter
mov
shl
enter
cs
jge
imul
mov
pop
mov
loop
add
add
scas
ret
hlt
outsl
jl
pop
jae
xor
add
mov
cmp
xor
int
jp
adc
into
out
test
into
clc
adc
add
inc
dec
pop
push
lock
pop
and
stc
jecxz
filds
cwtl
notb
and
movsb
divl
stc
mov
push
pusha
iret
dec
movsl
adc
lcall
push
fbld
shrl
and
mov
xchg
add
hlt
push
test
or
pop
aad
scas
movsb
push
aas
inc
aaa
cmp
inc
adc
push
cli
sub
addr16
leave
pop
test
inc
mov
and
aad
xchg
sub
dec
sbb
into
mov
pop
es
mov
or
pop
xor
inc
fiadds
push
das
inc
in
pop
mov
popf
lods
pop
push
movsl
lock
scas
mov
js
outsl
int
mov
pop
icebp
out
mov
cld
popf
push
and
or
xchg
jbe
leave
cmp
mov
mov
push
dec
sbb
inc
ds
out
outsl
jg
jp
dec
inc
mov
pop
stc
iret
push
sbb
dec
in
cltd
xchg
loop
adc
jnp
shl
stos
ror
aaa
mov
fstps
adc
sbb
cmp
repnz
jae
orl
ljmp
pop
or
mov
in
popf
add
imul
test
insl
into
sbb
jmp
leave
or
imul
adc
jmp
mov
inc
xchg
sbb
push
test
fdivrl
xchg
pop
and
aas
dec
mov
jle
pop
jmp
rcrb
imul
imul
data16
xor
or
mov
ds
ljmp
xorb
mov
jnp
or
sahf
and
jae
cwtl
push
cld
mov
xchg
push
ficomps
cmc
iret
pushf
lods
adc
out
int
mov
cld
mov
movsl
cld
mov
lods
xor
ss
repz
inc
repz
repnz
xlat
jo
imul
xchg
mov
rolb
sbb
dec
dec
push
fwait
loop
in
pop
aas
xor
popf
in
jmp
ds
pop
dec
subb
mov
adcl
ss
cmp
repnz
loope
push
loope
add
add
sub
adc
repz
outsl
fadd
jbe
push
jl
ljmp
or
ljmp
mov
jo
divl
or
sub
cwtl
inc
xchg
inc
jae
hlt
xchg
and
sub
insb
subl
js
add
fldenv
int
in
cltd
rcrl
das
scas
ret
add
shl
jge
cmp
aas
clc
push
outsl
pop
mov
lock
rcl
dec
leave
shlb
mov
out
cmp
repz
xchg
cli
sarl
pushf
mov
mov
mov
cld
mov
jecxz
xor
std
sub
stos
fs
divl
repnz
and
xchg
jl
das
xchg
mov
repz
inc
in
into
arpl
cmp
pop
cmp
ret
scas
flds
lcall
push
movsb
dec
repnz
daa
pop
mov
xor
sub
mov
iret
pop
or
hlt
sub
ja
pop
cmp
cmc
lds
test
or
push
fwait
orl
mov
popf
or
cs
imul
in
push
push
inc
cli
xor
scas
pushf
mov
adc
mov
movsb
pop
in
fnstenv
out
add
adc
cmpsl
add
push
clc
stos
aad
sub
xchg
fcos
into
lret
lahf
imul
test
push
ret
jmp
dec
pavgb
mov
in
jge
loop
sub
jno
push
clc
shl
imul
xchg
or
jp
in
sub
out
dec
into
data16
jne
jne
js
or
and
imul
call
pop
xchg
fldt
sbb
inc
sbb
fld
fdiv
shll
aad
pop
repnz
ss
repnz
leave
jl
cs
idiv
mov
std
mov
movups
push
negb
lock
xchg
into
pop
jg
inc
movsl
xchg
js
adc
dec
ds
scas
movsl
or
and
insl
pop
test
or
outsl
bound
stos
or
fcmovne
clc
dec
or
push
stc
lahf
fsubrs
cmpsb
inc
nop
inc
pop
lahf
or
roll
push
xchg
jp
arpl
mov
xchg
icebp
in
pop
pop
in
lahf
push
xorb
mov
call
xor
repz
jp
xchg
lock
cmp
cmp
lods
call
adc
or
into
jb
inc
idivl
insl
sbb
ljmp
jge
xchg
add
movsl
xor
cmp
pop
xchg
je
xchg
scas
inc
mov
add
xchg
add
or
xchg
out
ljmp
push
pop
xchg
sub
sub
push
push
ja
iret
push
xor
mov
rcrl
dec
cltd
addr16
test
cmpsl
and
popa
in
insl
xchg
arpl
xchg
pop
in
or
push
std
pushl
inc
pusha
divl
fmulp
sbb
xor
cmpsl
pushf
push
sbb
vphsubdq
cmp
cmp
enter
xchg
imul
pop
leave
into
ja
add
mov
daa
push
gs
or
push
xchg
pop
fwait
test
mov
sub
pop
cltd
popf
xchg
insb
scas
aam
mov
mov
xor
test
add
int3
or
mov
or
pop
sub
adc
mov
nop
sub
ja
loop
js
sbb
es
xor
xor
mov
fsubrl
in
add
push
pop
ret
stos
jle
mov
fcomps
push
dec
mov
loop
and
addb
sbb
mov
xor
add
insb
rcr
sub
dec
mov
xor
arpl
in
push
inc
or
mov
loop
mov
pop
jl
jo
jnp
cmp
pop
negb
inc
ds
and
ret
inc
insl
mov
mov
inc
adc
lret
cmp
adc
shrl
call
daa
imul
gs
aad
lahf
cmp
pop
lds
les
mov
and
inc
mov
cmp
mov
and
clc
jno
pop
sbbb
and
mov
push
testl
pop
in
jb
clts
dec
dec
das
ja
xchg
fucomp
cmp
mov
sbb
inc
push
mov
jnp
adc
popa
mov
or
popl
sbb
mov
aad
test
ret
loopne
or
xchg
xor
dec
in
mov
dec
mov
in
inc
fcompl
aam
ds
into
fsubrs
jg
mov
xor
scas
jbe
jbe
sub
lock
lods
aam
xchg
loopne
inc
fistps
cmp
fldt
test
push
stos
pusha
cmpsb
cmp
mov
push
das
cmpb
std
cmp
push
shrb
fwait
out
addr16
xchg
fsubs
pop
jmp
adc
out
ficomps
movl
aam
mov
mov
jp
xor
stos
jmp
shlb
mov
adc
call
stos
xor
ljmp
fcoms
inc
je
mov
test
mov
push
popa
mov
xor
cmp
jo
fisttps
and
popf
je
in
xchg
jno
push
lods
xlat
fisubrs
cwtl
cld
iret
subl
aas
nop/reserved
mov
ja
sbb
frstor
push
sbb
and
fs
push
in
sub
cmc
xchg
or
imul
sahf
fmuls
sbb
mov
iret
sar
bound
test
test
addr16
xchg
jbe
dec
and
push
lods
add
push
sub
pop
iret
sbb
mov
sub
out
mov
cmpsl
mov
mov
in
push
or
imul
fidivl
aad
or
sub
movsl
out
aad
std
mov
add
imul
jb
push
or
int
jmp
cmc
jns
stos
cmpsb
das
sub
pop
xchg
ljmp
push
mov
mov
mov
jnp
out
lahf
notl
jns
sbb
cmp
shlb
out
fmuls
movsb
ret
daa
fs
out
jo
cltd
cmp
outsb
clc
sbb
sbb
stos
adc
lds
sbb
mov
cmpsl
mov
gs
test
mov
add
stos
cli
jmp
add
and
mov
fadds
cld
cs
adc
test
sub
sbb
mov
adc
and
es
cmp
pushf
cmc
mov
jno
repnz
pop
iret
out
push
inc
jge
lcall
xchg
mov
scas
es
cltd
sub
jmp
dec
pop
movsb
es
lcall
insl
outsb
imull
test
sbb
pop
aad
cld
rcrl
test
xor
xorb
dec
ss
jecxz
adc
ror
add
lods
enter
push
dec
inc
test
pop
xor
jmp
cmp
pop
leave
sub
jns
imul
fistpl
stos
sub
push
movb
and
inc
cs
or
push
in
sub
addr16
jns
mov
clc
or
lcall
cld
cmc
dec
sbb
pop
jl
adc
push
iret
and
add
push
into
jp
dec
mov
cmpsl
ret
sub
mov
cs
gs
xor
cmp
and
into
fistpl
mov
lahf
fst
fsubl
add
hlt
jne
es
int
lock
fcoml
adc
arpl
daa
jnp
addl
rcrb
mov
stc
lods
push
movsb
enter
mov
repz
jae,pt
and
xchg
into
xchg
xor
outsl
jo
or
mov
cmp
pop
cwtl
and
ret
leave
add
mov
jge
sahf
xchg
out
push
mov
and
push
mov
outsl
xor
lock
sbb
push
or
sbb
sbb
test
insl
fisubrl
jmp
pop
add
jge
pop
adc
enter
and
jno
js
pop
movsb
rclb
add
ret
mov
fadds
sbb
inc
insb
inc
pop
mov
push
das
call
xchg
cmp
movsb
sbb
mov
in
jnp
ret
push
or
fcomip
pop
std
sub
add
lods
fidivl
sahf
jne
push
insl
mov
stos
sbb
pop
dec
jge
sub
movb
push
adcb
ja
dec
lahf
pushf
sbbl
jae
imul
xchg
sub
mov
decl
subl
mov
addr16
aad
and
pop
jae
lret
pop
jecxz
sbb
mov
sbb
inc
add
dec
xchg
lea
mov
sbb
cmc
adc
lcall
and
xchg
and
sahf
arpl
out
fildll
js
test
jnp
dec
gs
movsl
xchg
stos
push
mov
mov
dec
popa
insl
xlat
sub
aad
adc
addr16
cmc
movsl
repnz
popa
inc
push
shlb
lea
cmp
mov
imul
dec
mov
jg
push
inc
adc
add
mov
fsubrl
mov
mov
scas
movsl
xchg
cli
call
sbb
pop
jae
lock
push
or
cmp
mov
mov
daa
cmpsb
mov
or
cmp
pop
mov
xor
sbb
sub
leave
iret
shll
xchg
lds
sbb
pop
mov
nop
xchg
pop
in
push
xchg
xchg
dec
adc
add
xchg
aaa
pop
test
shl
mov
lret
inc
outsl
cmp
lea
cmc
sbb
cli
sbb
cmp
push
outsb
in
jnp
fwait
rcrb
mov
into
dec
or
out
test
ja
bound
loope
frstor
pop
add
aaa
jmp
outsb
jb
mull
cmpsb
leave
rcl
pop
push
mov
mov
inc
or
adc
out
inc
leave
xchg
mov
inc
push
mov
xchg
pop
adc
mov
enter
pop
aas
pop
test
jns
dec
repz
xlat
loop
cli
ret
push
mov
cmc
sbb
sub
xchg
jne
jmp
bound
mov
mov
out
push
testl
imul
pop
sbb
inc
inc
jg
ret
add
mov
pop
and
dec
adc
mov
push
ficoml
loop
imul
or
iret
test
pushf
cs
in
rol
jae
cmp
repnz
xchg
inc
cmp
push
push
jge
pop
sbb
jge
repz
out
cli
repz
neg
repz
shlb
sub
mov
imul
mov
ret
cwtl
jns
sbb
inc
mov
insl
stos
ficoms
ja
mov
leave
jns
pop
leave
nop
xor
xchg
pushf
arpl
lods
xchg
sbb
adc
lret
nop
cmp
cmp
movsl
dec
push
aas
jmp
add
das
dec
jmp
insb
nop
ljmp
jno
add
test
cmpsl
iret
bound
or
das
adcl
lods
push
movb
addr16
xor
sbb
scas
xor
out
flds
mov
dec
into
outsb
dec
sahf
test
in
jne
imul
pop
sbb
xchg
lds
jns
add
fstl
cmp
ret
sbb
rol
push
jne
jne
out
mov
cmc
fildll
hlt
clc
pop
or
push
xor
sub
sbb
adc
xchg
jae
fucomip
push
pop
cmpsb
ss
pop
outsl
cmp
lock
js
test
mov
mov
es
stos
mov
dec
icebp
dec
repnz
fdivl
inc
mov
jg
ds
xor
sbb
aaa
jb
sbb
loop
ret
frstor
xor
test
xor
cmovp
mov
mov
lods
out
in
cwtl
dec
cmp
sbb
push
adc
scas
and
inc
test
xor
fsts
pop
les
inc
in
jle
pop
add
or
jbe
mov
cmp
lret
es
lret
mov
loope
aas
rolb
xorb
call
or
mov
mov
mov
or
mov
dec
dec
cltd
dec
outsb
les
jbe
xchg
jo
je
shll
xor
xchg
divl
imul
jbe
xor
sbb
orb
push
push
mov
mov
jp
fildll
xchg
testl
mov
and
jae
inc
es
out
cmc
xlat
lahf
jl
and
add
mov
cmp
adc
mov
pop
js
js
jmp
ljmp
dec
sbb
fdivrs
les
call
push
scas
imul
xor
lods
lret
sub
xor
iret
mov
mov
sti
push
sub
sub
loop
dec
jmp
iret
out
ret
and
cltd
rolb
cmp
sub
movsl
xchg
add
bound
jge
xor
test
sbbb
xor
or
cs
testb
mov
icebp
icebp
xor
pop
fadds
xchg
das
roll
loop
fstps
jecxz
and
les
lds
shl
mov
cmp
pop
xchg
xor
pop
iret
mov
add
adc
adc
das
popa
or
pusha
testb
xor
cmc
fistpl
and
xchg
fsubl
or
pop
push
add
jge
sub
mov
add
xchg
sbb
int
inc
pop
inc
in
cmpsl
cmc
call
inc
cmpsb
imul
or
add
aas
adc
js
ja
sub
mov
pop
mov
xchg
aad
leave
mov
push
roll
aaa
pop
pop
mov
lahf
jns
shlb
outsb
add
bound
xor
ljmp
call
sbb
enter
jp
sbb
and
test
test
daa
xchg
jp
sub
sahf
mov
ficomps
aaa
dec
aaa
fdivr
xchg
cltd
xchg
cmpsl
cmp
mov
pushf
dec
cmpb
jns
mov
mov
add
or
add
imul
out
cmpsl
xchg
adc
sbb
push
jmp
mov
sbb
leave
mov
out
fadds
mov
aam
pop
mov
dec
push
cmp
sbb
or
out
inc
cmp
lahf
adc
enter
cmp
adc
push
push
imul
insb
pop
jle
push
xchg
jne
or
push
lcall
cmp
mov
add
and
ss
jb
subl
scas
cmp
mov
xchg
adc
imul
ss
les
mov
mov
cmp
decb
pop
mov
idivl
mov
xor
mov
data16
pop
into
add
test
int
cltd
test
adc
inc
mov
pop
outsl
repnz
int
push
mov
jae
mov
dec
fistpl
nop
in
cmpsb
lods
hlt
mov
add
push
mov
faddp
fcmovne
stc
cs
hlt
xchg
xchg
jbe
fdivs
fs
das
cmp
cmc
mov
dec
shrb
sub
mov
int
mov
inc
or
jecxz
jmp
pop
inc
sbb
movsl
dec
or
xor
and
cwtl
cmp
and
gs
jnp
xchg
mov
mov
pop
int3
and
jp
pop
mov
in
mov
add
sti
jg
cmp
inc
mov
stos
das
cs
mov
xlat
out
jne
movsb
leave
orl
pop
mov
dec
addr16
xor
mov
mov
sti
ret
fdivr
cmpsl
lret
sbb
cli
push
mov
xchg
inc
ds
ja
dec
xor
xchg
movsb
mov
adc
and
das
mov
roll
pop
hlt
arpl
lock
and
je
xor
in
arpl
sub
xor
fwait
mov
mov
dec
aad
sbb
dec
mov
decb
mov
sti
mov
cmc
dec
add
push
sub
cmp
and
mov
in
lods
ja
clc
fcomip
ja
mov
xor
imul
fsts
outsb
inc
notl
add
sub
or
and
xchg
mov
and
js
idivl
rolb
nop
and
pop
add
sub
aaa
rclb
lds
and
mov
push
orl
adc
sti
imul
sbb
rclb
sbb
add
bound
in
adc
jo
mov
mov
and
or
in
xor
stc
pop
or
xor
inc
mov
cs
sbb
dec
sub
bound
push
popf
lcall
push
sbb
ss
and
push
or
mov
xchg
int
jns
mov
pop
arpl
aam
fldlg2
mov
sti
adcl
push
xchg
mov
jns
inc
leave
sbb
popf
xacquire
push
rol
dec
push
mull
imul
add
cmp
xor
or
fiadds
push
stos
sti
sub
mov
scas
popa
lods
or
mov
mov
in
cmc
icebp
cmp
call
ret
xor
adc
pop
std
sbb
mov
dec
out
rolb
push
push
xor
dec
push
bnd
hlt
outsb
xchg
in
jle
cmpsb
dec
push
inc
push
mov
int3
cltd
sub
fimull
sbb
add
adc
jbe
gs
mov
or
loope
rcr
cmp
test
sbb
cmpsb
jle
and
or
or
test
cltd
jge
sahf
sahf
cs
clc
xchg
xor
mov
adc
clc
xlat
cmp
sub
sub
je
lret
sbbl
cld
inc
lds
inc
repnz
test
jns
loope
or
loope
stos
adc
sar
lods
jmp
adc
hlt
insb
icebp
mov
ja
jmp
fidivl
sbb
jp
loope
push
mov
jecxz
adcb
xchg
cltd
mov
xchg
loope
cltd
xchg
jge
cmp
cmc
rolb
frstor
pop
loop
add
repz
push
movsl
outsb
add
dec
add
jb
les
push
xchg
push
mov
xor
rol
aas
ds
or
pop
or
lods
sbb
push
cmp
ja
xor
and
add
out
sub
daa
ret
test
sbb
insl
in
add
push
adc
jmp
jb
imul
mov
filds
mov
lods
mov
fnstenv
sar
jecxz
jbe
jmp
and
adc
xor
sbb
ret
jp
and
fbstp
adc
pop
repz
out
icebp
test
mov
adcb
jg
dec
push
push
rcrb
mov
int
pop
or
jns
inc
in
jae
daa
push
jge
inc
js
xor
aas
dec
xorb
or
mov
repz
in
outsb
lahf
je
cmp
dec
stc
adc
xor
jns
jb
pop
test
xor
inc
xchg
mov
add
mov
sub
mov
push
mov
loop
test
mov
ljmp
lock
or
ror
sbb
cmpb
ljmp
addl
or
add
add
fsubrs
or
ret
xor
in
jmp
fildll
xchg
sbb
sub
adc
push
mov
xrelease
les
outsb
xor
into
sti
add
sub
xchg
andl
call
mov
scas
or
cmp
cmp
out
mov
push
pop
xor
in
mov
dec
out
mov
mov
cmpsb
fwait
movsb
cltd
lods
or
adc
popf
inc
repnz
daa
or
add
dec
add
mov
je
addl
cld
xchg
sahf
adc
pop
sti
push
jbe
imul
daa
in
and
push
shlb
dec
xchg
jp
call
subl
iret
bound
std
test
fistl
inc
leave
cmpl
fistpl
out
cli
dec
jb
xor
dec
gs
mov
ds
enter
jecxz
popf
dec
fadds
int3
addr16
loope
dec
mov
inc
ljmp
inc
mov
adc
push
test
push
es
mov
xchg
cvtps2pi
loop
imul
imul
imul
nop
or
fdivrl
sub
shlb
pushf
push
pop
add
push
xlat
pop
mov
mov
pop
ja
hlt
lock
and
lock
loop
or
jb
jne,pt
xchg
push
and
add
dec
mov
adc
std
dec
jo
mov
rolb
or
sub
cmpsb
push
push
pop
lods
xor
repnz
dec
fmull
push
shl
cmpb
jne
jecxz
gs
subb
inc
idivb
fidivs
xlat
fidivl
mov
sbb
mov
mov
push
push
cld
fcoms
xchg
cmc
sbb
or
xor
or
out
xor
cmp
stos
inc
mov
pop
mov
scas
stos
mov
xor
imul
xchg
lea
push
pop
dec
or
ss
hlt
fists
add
pop
add
scas
sub
xor
and
mov
xor
jne
pop
xchg
out
ds
out
ljmp
xor
test
arpl
nop
fsts
bnd
sbb
add
pop
sub
pusha
jmp
pop
mov
push
rcrb
data16
pop
outsb
aam
gs
jns
gs
mov
ficoms
sbb
mov
adc
cmc
insl
dec
adc
cmpsb
test
xchg
push
ret
ss
enter
mov
sub
test
inc
test
jle
clc
push
push
jecxz
mov
push
leave
notl
ds
or
repnz
adc
mov
sub
mov
dec
mov
sbb
lods
cmpsl
repnz
lods
ds
dec
xchg
cmp
arpl
inc
aam
mov
mov
loopne
std
push
and
mov
inc
xchg
iret
stc
pop
ficomps
jp
pop
fcmovnb
push
fdivs
pop
lods
or
mov
dec
xchg
pop
cs
cmp
out
cltd
mov
sbb
cmpb
mov
xchg
inc
sub
pushw
fdivrl
jmp
push
xor
mov
jbe
cmp
or
js
loopne
popf
stos
inc
cs
cmp
lcall
mov
and
in
cmp
js
ret
orl
out
mov
sub
sub
or
dec
adc
sbbl
fisubrs
data16
cmpsb
or
inc
jne
out
in
and
sub
lods
lret
pop
mov
cmpsl
gs
cmp
pop
lods
jmp
xlat
dec
push
scas
hlt
sarl
lcall
cmp
test
inc
fsubs
fs
pop
std
pusha
pop
in
mov
lock
push
mov
andb
pop
xchg
pusha
andl
lahf
ds
in
jns
mov
popf
loop
sbb
push
fwait
dec
lret
fnstcw
mov
xor
mov
pop
out
repnz
in
cwtl
mov
cmp
dec
xrelease
mov
add
addr16
inc
ss
mov
cmp
xchg
repnz
push
push
out
push
daa
push
pop
mov
or
xchg
inc
sub
test
adc
lods
inc
or
setg
mov
cmp
mov
or
lret
int
sahf
repz
lret
in
lods
cld
rol
test
bnd
xchg
mov
xor
jno
add
pop
mov
push
push
pop
add
cmc
mov
jle
jns
sub
imul
cmp
insb
cmp
lds
fists
jg
cld
add
xor
add
or
sbb
and
scas
xor
lods
mov
xor
mov
cmp
sub
adc
cmp
repz
fistpl
cmp
inc
sub
out
out
pusha
push
fs
repz
inc
adc
das
jl
std
xchg
imul
jmp
dec
push
faddl
mull
out
add
add
jge
cmp
xor
sub
mov
add
or
or
mov
xchg
mov
adc
icebp
sub
jp
mov
jae
push
mov
dec
divb
xchg
jmp
mov
dec
sbb
stos
outsb
dec
out
lcall
inc
or
pop
sbb
lods
jnp
mov
mov
lds
pop
inc
jns
fucomp
clc
outsb
lds
jp
in
xchg
jns
mov
in
mov
dec
xchg
xchg
push
iret
es
xor
dec
clc
lahf
mov
mov
hlt
adc
scas
push
fisttpll
nop
mov
adc
into
mov
mov
imul
addr16
jg
mov
xchg
cmp
ret
test
sub
xor
in
out
enter
lret
mov
movsl
popf
pushf
mov
jnp
jg
mov
mov
es
fsubl
shll
push
inc
jecxz
mov
mov
repz
and
cmp
mov
cli
inc
add
lret
or
ret
jne
cmp
lds
test
scas
dec
and
pop
orb
add
push
xchg
sub
and
test
in
lds
mov
mov
cs
out
sbbl
cltd
cld
or
es
inc
cmc
xchg
jge
into
cltd
ss
nop
sub
je
sbb
roll
lahf
insb
pop
mov
xchg
dec
cltd
xor
or
inc
xchg
inc
clc
and
lods
mov
sarw
loope
int
lcall
inc
imul
fldt
popf
cmp
loope
shlb
iret
push
add
mov
adcl
adc
in
cmpsl
adc
jae
xchg
and
sub
cmpsl
inc
out
cwtl
adc
fisubl
aaa
jmp
adc
jmp
xlat
jae
sub
std
repz
out
sbb
lds
ja
inc
push
scas
push
cmp
adc
jnp
sbb
stc
mov
push
pop
or
or
cmpb
out
mov
mov
movl
xor
mov
adc
fstpt
or
arpl
sarl
inc
lret
push
mov
jecxz
sbb
sbb
jge
nop
pop
addl
ss
sub
imul
rclb
sbb
lea
push
imul
sub
xor
clc
push
stc
push
bound
mov
push
and
jecxz
jg
jmp
inc
testb
int3
das
add
leave
lret
mov
cmp
xorb
repnz
pop
mov
nop
adc
daa
sbb
lock
jo
inc
inc
adc
mov
mov
push
out
stos
mov
mov
lahf
les
sti
xor
mov
xchg
jb
dec
fisttpl
fimuls
aaa
lahf
in
sbb
scas
lret
xor
loope
jne
sub
jge
int
mov
xor
mov
adc
sbb
add
sti
ljmp
fucom
inc
cmpb
xchg
xchg
sub
cmpsl
mov
movsb
mov
outsb
xchg
sub
rorl
enter
fisttpll
ret
cmp
pushf
inc
sub
or
xchg
and
push
notl
dec
sub
push
data16
gs
dec
popf
ret
in
js
ss
pop
and
call
dec
adc
test
movsb
loope
gs
ret
jns
enter
jmp
testb
push
dec
pop
inc
aam
jl
adcb
cmc
push
hlt
push
sti
mov
addb
sbb
stos
and
lahf
mov
cmp
xchg
and
stc
and
ret
push
aas
sbb
cmc
push
lods
push
stc
loopne
xchg
pop
adc
dec
dec
dec
shll
out
icebp
adcl
gs
cmp
imul
dec
sub
test
pop
sbb
mov
mov
xchg
mov
pop
sar
push
push
fsubrl
push
not
cmp
movsb
mov
imull
nop
bound
cmp
aam
xor
aad
lock
add
and
shll
jp
mov
push
mov
or
mov
in
push
pop
add
inc
add
in
sarb
mov
call
add
pop
repz
cmp
mov
jmp
jge
push
aad
shll
and
add
or
or
hlt
xchg
push
loopne
mov
cli
cmp
jbe
pop
sti
cmp
frstor
xor
popl
js
jae
cltd
sahf
or
pop
fimull
xchg
iret
adc
test
jg
cmp
dec
jmp
push
ss
repnz
stos
dec
hlt
addb
mov
enter
or
clc
sub
pop
movsb
inc
movsb
jg
hlt
and
aad
mov
fwait
dec
pop
neg
jne
xchg
cltd
bound
mov
mov
dec
in
cld
jnp
ret
jnp
rclw
pop
test
pop
xor
adc
or
lcall
xor
mov
stos
jb
decl
data16
insl
and
pop
shll
mov
push
cmp
sub
and
sub
aad
sub
leave
cmp
inc
inc
add
and
dec
out
mov
pop
sarb
fwait
inc
xchg
cmpsb
dec
mov
mov
das
push
imul
inc
mov
cmc
pop
pushf
or
lock
jns
dec
add
testb
sub
cvtdq2ps
orl
enter
sar
xor
jmp
cmp
out
add
mov
pushf
adc
inc
mov
les
xchg
lret
xchg
adc
and
hlt
xlat
or
xlat
adc
mov
divb
ljmp
push
cmp
sti
mov
xchg
cmp
lds
loop
jae
xchg
or
clc
sbb
out
pop
or
enter
scas
push
sahf
cmp
addr16
mov
pop
add
cmp
dec
es
mov
push
addr16
sbb
out
mov
sbb
xlat
arpl
in
cmpl
jnp
xchg
xchg
mov
sahf
das
jge
pop
mov
push
addl
popa
pusha
outsl
stc
add
stc
ss
cmp
aaa
jne
and
in
lock
cmp
scas
jmp
xchg
inc
js
arpl
xchg
aaa
push
shrl
out
dec
in
cmpsl
jns
push
loop
stos
lret
enter
push
insb
jmp
rep
and
jnp
push
jmp
out
inc
pop
push
push
mov
or
dec
jmp
add
jbe
mov
ss
push
int3
sbbb
mov
cld
js
lods
repnz
pusha
pushf
push
push
jle
loope
jne
scas
xchg
push
loopne
push
pop
outsl
jp
ds
std
adc
int3
mov
aas
mov
mov
jle
push
pop
into
jbe
inc
in
arpl
inc
fidivs
movsb
cwtl
nop
lods
mov
jae
iret
mov
cmpsb
jmp
scas
sahf
mov
pop
mov
inc
ret
in
push
xchg
mov
hlt
or
loop
hlt
sbb
inc
cmp
push
jb
and
add
sub
mov
repnz
jmp
lea
mov
add
mov
xchg
not
inc
xchg
jp
scas
sub
test
adc
lahf
xchg
mov
cmpsl
loop
mov
cmp
sahf
sub
jne
push
add
mov
int
cwtl
popl
scas
mov
jg
scas
pop
xor
xchg
out
xchg
mov
loopne
stc
je
pop
pop
into
push
push
rcll
push
aam
into
test
jne
int3
aad
push
cs
cwtl
jmp
mov
jne
add
popf
adc
jge
imul
inc
dec
xchg
mov
push
ret
int3
test
or
test
nop
outsl
daa
sbb
xor
sbb
int
mov
cld
js
and
or
filds
sub
inc
cli
pop
adc
es
fwait
aam
add
jno
std
ret
lds
sarl
push
mov
mov
xchg
adc
cmp
pop
mov
xor
sbb
nop
fstp
mov
stos
mov
popf
movsbl
das
rorb
jo
cld
dec
mov
sbb
and
pop
div
jecxz
inc
push
push
fstpl
data16
test
and
sbb
lds
insb
lods
xchg
adc
lock
test
aaa
frstor
add
or
fcoms
rclb
jge
cltd
xor
pushf
adc
scas
addl
adc
xchg
pop
add
rolb
ret
mov
pop
pop
fwait
mov
call
push
in
addb
mov
icebp
test
add
mov
daa
cs
sbb
repz
dec
push
cmpsb
sbb
pop
lock
push
cwtl
or
sbbb
out
call
jns
sub
pop
or
lods
adc
fwait
xchg
js
add
lods
lcall
or
push
xchg
sub
out
int3
fildll
mov
mov
mov
ficoms
push
jb
test
dec
call
xlat
fs
mov
sbb
lods
rcrb
mov
daa
xor
add
pop
sbb
pop
xor
push
cmp
mov
jp
add
inc
cs
mov
pusha
fcoml
mov
cmp
dec
ret
stos
dec
add
sub
std
ret
cmpsl
movsb
sbb
imul
sbb
inc
and
sub
cmp
aas
and
inc
call
inc
imul
aam
daa
repz
mov
pop
pop
dec
call
xchg
jb
pop
mov
scas
cli
scas
int3
dec
je
jno
xor
hlt
out
mov
pop
cmp
jg
cmpsl
pop
jmp
les
int
mov
adc
cmpsl
mov
mov
mov
leave
pop
push
in
adc
push
push
lea
ret
jmp
outsb
lea
outsb
out
out
pop
in
jne
fwait
push
sti
jmp
test
test
mov
ss
inc
and
push
daa
or
add
fs
es
es
lds
movsl
push
mov
lea
inc
jle
clc
jo
mov
out
call
inc
xchg
subl
leave
outsl
jmp
cmpsb
mov
sarl
add
jmp
and
bound
mov
xor
gs
mov
pushf
xchg
and
mov
dec
lcall
sahf
or
cmp
and
xor
cmp
insl
or
push
jp
pop
clc
test
xor
dec
jns
xor
mov
rcl
popf
popf
inc
sbb
mov
repz
xor
loopne
pop
pop
in
dec
mov
sbb
mov
das
outsb
sbb
iret
mov
lcall
cmp
ret
and
mov
sub
cmp
mov
jb
int3
dec
mov
xor
xchg
scas
mov
sti
push
dec
or
call
js
add
mov
fisubl
push
cmp
test
shll
push
test
pop
lds
and
push
lret
and
cmp
mov
jo
cmp
pop
mov
fs
fcoml
or
jge
scas
sub
push
cmpsb
scas
imul
aad
dec
add
stos
cmp
mov
dec
sti
push
sub
pop
shl
push
ret
mov
imul
ljmp
fbld
int
loope
push
adc
and
aad
push
int
or
cs
push
pop
je
pop
sbb
or
jbe
ret
imul
sub
nop
ficomps
mov
in
mov
dec
ds
cwtl
dec
shlb
pusha
or
adc
aad
std
or
shrl
out
notl
jae
pop
cmc
pop
ljmp
inc
lods
out
cmpsl
jae
push
addr16
lea
es
dec
push
daa
test
inc
fsubrp
jo
fstpl
mov
fwait
or
scas
sub
sub
loopne
mov
jecxz
adc
adc
and
cwtl
dec
add
aad
fwait
mov
insl
jg
push
lods
ret
bound
push
sahf
scas
and
mov
mov
mov
scas
sub
mov
iret
xchg
shrb
arpl
xor
jae
and
push
xorl
and
lods
add
fistl
or
ficompl
fsubrl
je
or
lret
fdivp
sub
jb
es
loope
les
fstpl
testb
mov
mov
mov
hlt
int
or
imul
cltd
out
jb
mov
mov
jnp
push
lods
stc
enter
push
jle
pop
fmuls
xchg
push
jno
cmp
fsubl
pop
fisubl
stc
mov
mov
xchg
pop
dec
inc
adc
pop
jecxz
cld
inc
in
xor
cmpsb
sbb
int3
sti
test
dec
push
dec
jle
fwait
ds
or
mov
xchg
orb
fs
sahf
aaa
loop
sub
mov
ds
xchg
jne
rcr
jnp
pop
shlb
das
in
in
insl
push
push
inc
rcl
xor
pop
xchg
popa
rcrl
cli
testl
adcl
cmp
and
aad
mov
testb
faddl
fisubrl
jb
ds
fnstcw
xchg
lcall
jge
pop
push
call
or
clc
sarb
mov
out
daa
aaa
stos
cmp
and
mov
fisttpll
pop
mov
jmp
push
push
rorb
testb
sub
lock
mov
pushf
cltd
mov
fldenv
mov
pop
imul
lea
inc
mov
xor
inc
lcall
cmpsb
dec
cmpsb
ret
pop
mov
push
mov
ss
mov
mov
js
fistpll
cltd
mov
icebp
xchg
or
sub
scas
push
push
inc
pop
iret
mov
rcll
andl
inc
pop
test
or
ljmp
jle
mov
push
stos
mov
xchg
in
aas
fdiv
mov
mov
mull
outsl
pop
xchg
lock
sub
cmp
orb
add
add
or
insb
test
sub
adc
lret
insb
or
orl
imul
stc
xor
loopne
inc
sub
dec
lcall
adc
pop
push
sbb
mov
not
inc
add
inc
xchg
or
aaa
stc
dec
fistps
fistps
jno
fldt
scas
mov
cmp
or
xorl
jle
add
mov
fmuls
xchg
xor
and
push
jp
loop
lods
lds
adc
adc
dec
fldenv
mov
add
dec
lods
fstps
mov
or
cmp
pusha
ficompl
shrb
rolb
jge
les
mov
mov
iret
pop
cli
mov
xchg
or
pop
xor
mov
pusha
mov
and
inc
jae
mov
and
or
sub
jmp
sub
add
mov
dec
imul
lret
pop
xor
enter
dec
jg
in
test
out
cmc
fstl
jno
jmp
and
and
jo
or
aaa
pop
jmp
xor
shlb
aam
adc
or
cmp
jne
shlb
fwait
sub
mov
daa
add
daa
or
cmpsl
cmpsb
jp
dec
mov
xor
mov
xchg
sahf
popa
dec
mov
ret
add
xchg
iret
stos
jne
add
test
in
push
pop
mov
push
mov
lahf
gs
stc
in
xlat
add
frstor
incb
add
add
enter
pushf
add
sbb
inc
testb
mov
addr16
sub
out
ret
mov
mov
les
push
adc
dec
ja
mov
daa
test
les
les
dec
and
int
add
cmpsb
out
lret
mov
push
popf
inc
cmpsl
sbb
inc
je
fnstcw
jne
mov
les
lahf
je,pn
scas
pop
or
ljmp
outsl
imul
mov
mov
int3
cwtl
mov
inc
sarl
shll
les
es
cli
dec
cmp
imul
pop
xor
mov
aaa
test
xchg
arpl
jo
dec
insb
jb
sbb
cmp
imul
mov
fs
mov
sub
into
mov
sbb
int3
incb
push
jo
cmc
rorb
imul
cmp
test
jmp
pop
addr16
mov
int
push
xchg
or
aam
push
js
mov
fwait
scas
enter
xlat
stc
int
je
out
imul
dec
jo
fdivr
fs
push
fldcw
mov
rorl
ret
test
mov
xchg
data16
pop
sahf
dec
in
push
jno
pop
popf
push
dec
jbe
ret
pop
push
add
adc
aas
mov
aam
jb
dec
jb
dec
test
mov
cmpsb
xor
test
push
jmp
icebp
dec
stos
push
mov
cmp
pop
sub
and
insl
in
das
sarl
in
add
nop
fs
dec
fisubrs
test
ret
sub
push
into
lock
test
jmp
sub
std
xchg
or
ss
mov
mov
loopne
cmp
cmc
in
dec
pop
in
in
int
dec
jg
and
sbb
std
pop
xchg
mov
les
fimull
sahf
imul
mov
idiv
nop
das
in
mov
fistpl
cltd
sub
jns
call
in
push
sub
cwtl
jp
jge
xchg
dec
sub
push
mov
xchg
mov
dec
movsb
xchg
jp
fsave
mov
arpl
addl
adc
jmp
xlat
sub
xchg
sub
fdivrs
cmpsl
aas
mov
loopne
cwtl
cld
xlat
cld
add
lock
pop
pop
cmpsb
mov
adc
fisttpl
ret
push
mov
pop
mov
out
mov
add
hlt
adc
jle
out
repnz
pop
fisttps
pop
sub
cmpsl
dec
jp
js
and
and
iret
lea
out
dec
xlat
or
mov
cmpsb
mov
sbb
sbb
jae
mov
xchg
test
arpl
sti
mov
call
or
cld
xchg
dec
js
adc
in
mov
sub
mov
push
int
leave
xchg
aam
out
and
out
loopne
jne
icebp
push
gs
xchg
outsl
pop
mov
sbb
fisttpl
mov
mov
xchg
xchg
clc
pop
push
aad
xchg
stos
fnsetpm(287
push
cmpsl
cli
aad
scas
mov
movsl
push
fnstsw
ret
ds
push
clc
imul
int3
sbb
add
pop
div
hlt
sub
pop
mov
test
xchg
loop
bound
mov
fcom
jecxz
inc
mov
ds
push
sub
rolb
adcl
nop
xor
cltd
sbb
hlt
mov
data16
push
sahf
lret
out
inc
xorps
lods
sbbb
ljmp
xchg
inc
repz
jmp
aas
mov
sub
xor
xor
and
cmp
pop
pop
and
je
hlt
movsb
push
xor
enter
int
ret
stos
std
push
cwtl
dec
inc
jmp
enter
inc
icebp
mov
adc
sti
and
xchg
cmp
stos
cmpsb
rcrb
mov
xchg
cmc
adc
mov
rolb
and
inc
ret
add
fadds
and
pop
cmp
loope
lods
hlt
inc
lret
mov
xor
je
mov
incl
xor
jg
jo
pusha
mov
pop
jae
leave
es
cmpsl
xor
jo
sbbb
test
lods
mov
mov
lea
cmp
sbb
pop
mov
mov
xor
mov
nop
inc
out
mov
push
test
push
movsb
mov
mov
lods
rorb
add
push
and
or
cmpsl
out
test
fsubs
jge
rclb
mov
insl
inc
add
rol
jl
mov
jg
mov
pushf
ljmp
sbb
and
in
les
sbb
push
lret
mov
pop
aam
lods
jg
dec
xchg
cmp
or
mov
xor
mov
into
cld
in
or
je
mov
loop
aaa
dec
idiv
dec
ror
insb
xchg
mov
jp
push
js
lcall
mov
mov
sbbb
push
xchg
xchg
pop
lcall
or
stc
inc
and
xchg
pop
cmp
lret
stos
loopne
iret
fldt
and
daa
mov
xor
jbe
pop
int
and
jge
add
sarb
and
jno
fsubr
fcompl
out
aas
inc
mov
sbb
fstl
std
sbb
push
add
push
add
inc
pop
jno
mov
addb
sahf
jle
jne
cmp
xchg
xor
xchg
add
outsl
cmp
test
sub
popf
gs
xchg
push
mov
mov
pop
jno
movsb
sbb
xchg
out
push
xorl
lock
or
mov
mov
in
out
pop
or
ds
call
dec
push
aad
inc
lods
add
aas
pop
lods
push
fsub
or
movsl
pop
lret
insl
std
sti
dec
jecxz
les
mov
fidivrl
cmp
lods
mov
ret
push
dec
fisubrs
mov
loope
jns
sub
int3
xor
sbb
jp
mov
daa
mov
xor
push
dec
stc
sub
adc
push
shrl
and
sbb
push
xchg
adc
cmpsl
mov
xchg
call
xchg
gs
icebp
enter
jmp
inc
sti
push
dec
sahf
push
mov
xor
test
fwait
sarb
and
adc
sti
into
das
sub
and
xchg
loope
xor
lea
daa
pop
inc
jg
rcpps
icebp
out
loopne
pop
inc
sbb
sub
lret
pop
pop
xor
sti
xchg
inc
loopne
jg
pop
mov
nop
pop
insl
into
cmp
jle
fsubr
cld
not
add
adc
stos
pop
xchg
leave
jge
call
xorb
and
sub
js
cli
pop
loop
push
xchg
aas
daa
xchg
lock
sbb
xlat
movsl
cld
push
jo
gs
push
call
imul
mov
fidivrs
or
pop
adc
mov
and
adc
loop
xlat
mov
or
rorb
add
lds
movsl
lods
aas
stos
sub
mov
jno
xor
mov
push
mov
dec
cli
jle
mov
jmp
mov
adc
aad
sbb
dec
xor
lcall
add
push
fcoms
pop
lock
mov
jns
fisubs
pop
int3
orl
es
rcll
sbb
in
int3
push
popa
inc
cmpsb
fbld
fildll
pop
mov
cmp
adc
pop
js
and
cmpsb
jae
push
pop
sub
mov
mov
mov
outsb
lcallw
fadds
ficoml
enter
mov
lcall
scas
cmp
inc
push
lods
mov
xrelease
mov
arpl
mov
pop
dec
movsb
insl
test
lods
rorl
cmp
lods
into
loop
xlat
xchg
test
in
add
or
mov
pop
adc
test
pop
mov
or
adc
daa
jle
or
in
shlb
rorb
and
test
xor
jno
iret
les
jb
xchg
inc
push
mov
inc
cmp
push
dec
pop
clc
adc
test
mov
inc
movb
and
ds
dec
dec
cmp
inc
add
xchg
add
imul
lods
and
push
sbb
push
push
cwtl
jns
mov
or
mov
pop
push
in
test
mov
mov
int3
mov
sahf
cwtl
sbb
andl
out
xchg
popf
xlat
pop
pop
test
mov
mov
or
ret
xlat
and
data16
xor
shr
dec
mov
lret
mov
hlt
jge
fldcw
imul
cmp
fsubl
inc
das
mov
mov
in
cmp
xor
sbb
mov
pushf
mov
lods
divl
cltd
and
rcrb
int
push
out
test
fisttpl
or
ljmp
or
adc
sbbb
sbb
into
pop
stos
xor
lret
pop
scas
adc
pushf
push
mov
mov
cltd
cmp
rolb
fldl
xchg
mov
mov
ja
test
test
adc
nop
mov
sti
inc
lods
lock
push
lahf
xor
push
aad
jmp
xchg
or
push
mov
push
popa
enter
xor
or
jo
call
pop
sti
add
or
imul
aam
mov
pop
mov
jo
faddl
ljmp
imul
or
dec
imul
popa
pop
lods
lret
dec
outsb
or
cmp
add
stos
test
insl
and
push
jne
mov
sbbb
in
out
add
test
out
push
sti
push
stc
gs
adc
movsb
xchg
test
cmpb
in
rclb
sbb
fiaddl
addb
cld
inc
test
add
icebp
or
mov
stos
lcall
test
mov
mov
lock
sti
mov
hlt
dec
sbb
inc
xor
mov
fs
jo
in
mov
out
jmp
mov
das
pop
sub
cmc
imul
or
xchg
jno
outsb
dec
fisubrl
push
in
lods
daa
jge
and
pushf
cmpsb
sbb
pop
mov
pop
and
movsb
xchg
dec
fwait
fwait
and
cmpsb
shll
std
xorb
xor
call
pushf
lcall
psllq
xchg
jg
scas
jno
lock
repnz
adc
add
add
scas
ljmp
pusha
test
inc
xor
fcmovb
jb
jle
fsubs
lds
dec
insb
lock
pop
hlt
fisubrl
mov
cmp
mov
sbb
imul
xor
xchg
mov
int3
or
data16
loopne
out
xor
movsb
cmpb
jnp
in
dec
scas
dec
cmpsl
lahf
leave
dec
jns
lods
xchg
xchg
movsb
data16
lods
mov
in
adc
jecxz
out
add
cmp
pop
loope
movsb
out
fs
imul
outsl
dec
dec
ss
icebp
pop
add
mov
add
dec
dec
jno
jmp
lahf
add
and
mov
inc
fiadds
jo
mov
xchg
sbb
loope,pt
test
cmp
loopne
ljmp
cmpsb
leave
int3
pop
scas
pop
xlat
icebp
xlat
mov
icebp
addl
jge
cmc
rorl
sti
dec
fstpl
mov
pop
add
lret
xchg
adc
sub
arpl
outsl
mov
push
xchg
scas
mov
adcb
dec
pop
mov
rorb
pop
adc
shlb
shrb
and
xchg
xlat
in
mov
mov
bound
push
int3
xchg
stos
jae
sub
xlat
add
out
adc
lea
stos
pop
push
iret
inc
ret
daa
sub
add
mov
lds
outsb
xchg
mov
mov
dec
dec
fdivs
bound
scas
pop
lds
pop
xchg
sbb
in
adc
cmp
daa
xor
push
shl
and
sbbb
sbb
mov
or
repnz
cltd
add
mov
cs
orl
iret
adc
pusha
imul
or
inc
mov
jle
xor
push
mov
sti
cmp
fwait
or
in
or
test
sub
cmp
movsl
stos
orb
addr16
pop
insl
jle
jno
mov
loope
cld
push
out
mov
mov
mov
sbb
inc
mov
pop
pop
in
enter
xchg
sahf
mov
sub
js
jecxz
xchg
lds
mov
sbb
xchg
mov
shl
cmpsl
mov
xchg
and
or
int3
hlt
mov
mov
outsl
in
cmpsl
jmp
push
movl
stc
xchg
adc
icebp
cmp
or
imul
lret
subb
in
mov
insb
pop
sub
daa
mov
pcmpeqw
jecxz
mov
mov
push
xchg
mov
dec
adc
je
mov
pop
xrelease
sbb
sub
iret
xchg
bound
and
xor
push
and
sar
leave
add
xchg
cmp
cmp
sahf
cmp
sub
imul
mov
or
cmp
pusha
inc
mov
xchg
xchg
lea
jmp
insb
add
into
cmp
pop
jnp
pop
push
dec
push
daa
mov
push
adc
test
add
jo
adc
ds
test
push
call
mov
sahf
out
add
xchg
jle
xorl
mov
imul
cld
mov
inc
and
insl
pop
lock
pop
sub
push
fnstcw
fwait
mov
scas
icebp
loop
int
cmp
in
jns
movsl
aam
inc
mov
xlat
loope
cmc
shll
sub
loopne
pop
or
push
movsl
loop
push
sub
or
test
int3
call
sub
or
dec
imul
gs
clc
orb
aam
jae
xchg
js
mov
or
lcall
cli
into
jmp
inc
dec
pop
ret
inc
add
or
shlb
cld
ret
mov
je
add
shll
push
adc
add
xor
sti
jne
call
adc
push
push
in
sarl
imul
dec
push
daa
in
mov
insl
xchg
xor
cmpb
or
mov
jne
mov
aam
push
sbb
ss
add
add
sub
mov
jno
adc
add
mov
mov
icebp
lock
push
ret
cld
shrl
stos
sbb
inc
popl
xor
inc
sahf
das
mov
push
ss
xor
aas
ss
and
testl
pop
pop
movsl
ja
jae
or
mov
ds
sub
push
dec
pop
into
ljmp
inc
adc
pop
ss
sbb
js
iret
pusha
movb
push
add
outsl
push
lock
popa
fimull
mov
or
loopne
add
js
ret
push
fwait
pop
fimuls
push
push
jmp
orl
xor
out
das
stos
shlb
sbb
sbb
inc
test
fldt
xchg
enter
fnstcw
popa
loop
sbb
cmp
adc
inc
add
mov
push
cs
jns
inc
jb
xor
jmp
mov
fs
test
mov
xchg
xchg
icebp
inc
punpckhbw
pop
mov
ficomps
cmp
and
insl
adc
mov
nop
mov
lods
push
jge
mov
mov
lahf
xchg
inc
clc
jnp
shlb
xor
xchg
push
mov
clc
leave
into
mov
add
and
imul
add
popa
adc
or
mov
mov
xchg
add
sub
dec
das
mov
dec
leave
xchg
adc
or
neg
out
pop
xchg
xchg
js
cmpsb
rorb
movsl
cmp
adc
popa
or
mov
and
push
in
sti
dec
add
mov
cmpb
sbb
pop
jl
dec
fcomps
aam
xchg
jns
ficoml
push
test
add
jb
add
xchg
testb
sarl
ret
xchg
gs
adc
xor
orb
mov
ret
loope
or
das
imul
mov
xor
in
pop
mov
mov
push
pushf
test
and
fstl
popa
dec
js
inc
jbe
rcrl
mov
decb
sub
sub
mov
cmp
aam
lods
pop
in
out
cmp
lea
and
or
add
sub
insl
les
xor
jb
hlt
in
mov
leave
lahf
pop
jnp
ja
cmp
fwait
outsl
jbe
rorb
mov
push
rcrl
cmp
leave
ja
xchg
cmp
lods
insl
sub
and
adc
mov
pusha
ljmp
nop
sbb
push
mov
stos
test
mov
cmp
adc
sub
je
cli
add
pop
mov
inc
mov
xchg
mov
mov
lds
mov
sar
jb
cmp
popa
sbb
bound
mov
fildll
pop
popf
pop
outsb
inc
jle
lahf
adc
xlat
push
xor
sti
xchg
ret
outsb
int
lret
dec
cmp
lcall
into
test
and
in
hlt
add
movntq
lret
xorb
dec
stos
cmp
scas
mov
jne
ret
push
out
xor
jnp
mov
add
pop
scas
cwtl
push
addl
sarb
lods
dec
daa
out
lea
sub
aam
cmpsl
mov
mov
aad
dec
xlat
jle
xor
pop
rep
stos
cli
lods
add
lods
scas
jno
test
mov
mov
pop
ja
lahf
out
sti
pop
pop
mov
and
loop
test
push
fs
add
js
sbb
cmp
fstp
dec
cld
adc
push
push
cs
imul
enter
jb
xchg
addb
push
cmp
repz
fs
aas
inc
loope
lret
and
inc
in
push
pop
rorb
cmp
pusha
xlat
or
aaa
scas
xchg
in
push
shl
loope
scas
mov
mov
call
adc
loope
shr
pop
xor
cmp
movsb
popa
adc
call
and
xorb
cmp
std
pushf
jle
pop
dec
aas
cmpsb
mov
mov
mov
mov
les
aad
xchg
stos
cmp
inc
jg
iret
and
pop
dec
lahf
xchg
in
dec
fs
jmp
lock
outsb
pop
mov
adc
leave
jle
enter
mov
pop
loop
cmpsb
mov
pop
rcll
inc
mov
push
sbb
ja
mov
cmp
xlat
mov
sbb
mov
push
imul
inc
adc
cld
shlb
sub
stos
mov
pop
lods
add
xor
push
and
jp
ss
rcl
in
cmpsl
inc
mov
int
mov
jno
pop
fmuls
js
push
xchg
or
sbb
push
mov
fs
jns
xorb
pop
lea
aam
push
dec
jbe
fwait
mov
push
lds
mov
jmp
jnp
mov
mov
push
xchg
sti
mov
sub
out
add
jo
clc
jbe
scas
nopl
sbb
jp
xchg
clc
movsb
faddl
or
imul
jnp
inc
cmp
insl
push
and
xor
rclb
dec
mov
repnz
pop
jl
repz
lahf
stos
scas
test
push
xor
or
pop
in
inc
in
and
imul
mov
mov
mov
mov
insl
push
int3
movsb
push
add
cmpl
movb
and
test
lret
cld
inc
popa
push
ficomps
push
fucomp
sub
or
das
imul
push
mov
out
test
xor
xchg
push
xchg
stos
cmp
mov
cmp
popa
in
mov
insl
push
xchg
cli
arpl
sbb
ljmp
pop
add
fs
fnsave
inc
xchg
cld
in
and
adc
pop
cltd
loop
mov
add
add
jmp
f2xm1
pop
frstor
mov
mov
cmp
pop
mov
gs
jne
adc
enter
or
adc
mov
sbb
xor
sbb
int
int
aas
repz
ja
das
test
mov
jo
jae
maxps
out
shll
data16
imul
rcll
mov
mov
mov
sub
lds
cmp
outsl
fnstsw
fdivs
or
in
out
sbb
adc
bound
out
movsb
or
dec
xchg
cmc
pop
aaa
push
xchg
es
fwait
popf
and
jl
mov
ret
inc
inc
pop
and
cmp
sub
lahf
mov
adcl
mov
stos
or
cmp
cmp
fsubs
sub
lret
rcr
scas
jge
jle
dec
jbe
cmp
jge
scas
daa
mov
adc
xor
fwait
js
inc
insb
in
xor
sub
repnz
aaa
pop
addr16
xor
imul
jmp
sub
cmp
sahf
imul
cmp
mov
sub
jae
inc
push
adc
and
enter
lahf
rcrb
push
sub
call
jns
push
lret
cli
push
ds
inc
lcall
pop
mov
popf
imul
sti
or
loop
rcpps
xchg
or
push
addr16
mov
adc
or
psubusw
jno
test
pop
dec
notb
mov
add
sub
and
fs
sub
psubusw
addr16
mov
push
mov
sahf
adc
sub
sahf
adc
jns
into
add
jo
add
insl
inc
addl
mov
ret
fs
bndldx
sbb
cmpsb
inc
sub
mov
pop
adc
adc
mov
xor
cli
push
lock
dec
mov
jp
outsb
dec
repnz
loopne
lcall
sbbl
push
out
pop
or
sbb
sub
das
clc
rcrl
push
jge
ds
stos
xor
inc
dec
mov
mov
arpl
lcall
pushf
push
push
je
pop
cmc
call
out
jo
stc
inc
movsb
ss
mov
shll
arpl
lock
add
loopne
pop
out
outsl
inc
ret
mov
xor
cmp
push
push
ret
sahf
frndint
ss
dec
adc
or
sbb
loope
push
int
jbe
ljmp
data16
cli
or
aas
pop
jmp
movsl
dec
sbb
ds
cmp
dec
or
inc
rol
imul
dec
mov
das
int
push
pop
xor
mov
insb
ret
and
sub
xchg
je
insl
adc
cmp
sbb
out
popa
add
push
sahf
push
jg
dec
je
or
ljmp
xor
repz
jle
lods
dec
aad
pop
scas
mov
arpl
sti
pop
fsts
fbld
xor
xor
addr16
imul
add
mov
mov
mull
jns
sti
xchg
and
or
mov
es
into
or
ja
insl
or
test
addr16
ficomps
imul
jns
cwtl
jle
std
xchg
aam
sti
add
xor
test
test
mov
adc
jecxz
sub
addb
sbb
push
sub
leave
cmp
add
clc
dec
je
mov
jb
rclb
outsb
inc
bound
add
popf
xor
xor
jge
js
xchg
or
dec
dec
fs
jne
add
inc
push
sub
sti
jnp
imul
xchg
in
jle
divb
jne
aam
repz
xor
xor
gs
adc
in
mull
ret
push
outsl
scas
rorl
sub
roll
imul
or
cmp
pop
xchg
and
cltd
adc
push
outsb
int
aam
xorb
push
jno
adc
out
push
inc
and
cmp
add
cmp
loop
into
jb
ds
les
sbb
push
movsl
sahf
call
jns
push
faddl
test
sub
dec
jb
sub
push
sbb
cmp
and
orb
ror
sub
sub
insl
mov
or
sub
xor
pop
out
movsl
sbb
sub
xchg
sbb
sbb
cmp
jnp
inc
cmp
filds
fcom
mov
jle
jmp
into
fnsave
enter
aas
push
inc
loope
jb
sub
test
repnz
pop
sub
int
test
imul
sbb
jbe
pop
xchg
adc
mov
mov
pop
cmp
clc
cmp
sub
jbe
scas
and
loop
sub
xorl
std
shll
add
es
sbb
push
ret
jg
daa
fnstenv
cmp
push
icebp
fcompl
repz
roll
daa
pop
pop
addr16
aas
push
cmp
add
aam
iret
movsb
push
lock
mov
aaa
push
lea
add
lahf
xor
pop
jl
mov
push
jb
fisubl
enter
gs
mov
push
call
adc
in
or
or
pop
cmc
hlt
fwait
bound
test
icebp
movsb
sub
add
or
sub
fs
leave
in
cmp
xor
push
and
out
pop
push
mov
sbb
pushf
clc
in
in
xchg
movsb
loopne
jo
jnp
inc
sub
sbb
jmp
jle
pop
fcoms
xchg
pusha
lds
negb
inc
dec
aaa
in
and
ret
in
push
insl
lret
pusha
inc
es
testl
sub
stc
jbe
sub
add
cmpsb
pusha
jno
loope
sarl
mov
addr16
fwait
test
and
cmp
push
decl
outsl
adc
cmp
jmp
dec
mov
leave
in
int3
push
loop
dec
push
pushf
xchg
and
and
push
aaa
cs
pop
dec
mov
int3
sbb
sub
iret
incb
jl
push
mov
or
lahf
push
sar
inc
xchg
sub
cmp
pop
mov
cwtl
pushf
cli
adc
andl
sbb
loop
push
shll
cld
fimull
mov
mov
pop
adc
fnstcw
into
imul
aaa
aad
and
insb
jbe
bound
push
ss
xchg
push
inc
movsl
sub
jp
fildll
ja
inc
jbe
pop
insl
call
loopne
pop
repz
data16
sbb
les
lret
push
cmc
fldenv
bound
mov
jge
movsb
xor
jne
xchg
pop
cmp
mov
loop
andb
gs
jle
subb
mov
fdivrl
xchg
dec
add
pop
ret
dec
push
mov
xchg
sub
dec
pop
cltd
int
mov
mov
stc
dec
jle
or
aam
inc
dec
outsl
mov
hlt
cmpsl
adc
sbb
xor
enter
inc
cmpsb
fs
mov
xchg
cmc
imulb
cltd
dec
pop
nop
inc
push
sub
mov
in
jo
sbb
sahf
adc
mov
xchg
mov
scas
sub
movsb
pop
sbb
mov
lret
movsb
das
lahf
pop
inc
xchg
fsubs
dec
push
dec
rcrb
loopne
js
pop
sub
pop
sbb
loop
test
push
mov
enter
in
fstps
adcl
rolb
loop
adc
cs
sub
xchg
add
fsubs
fcmovnu
pushl
lsl
out
loopne
movsb
rorb
bound
xchg
adc
in
fisttpll
pop
pop
push
mov
and
incb
gs
mov
and
filds
cmp
mov
repnz
call
sbb
jmp
inc
xchg
push
cmp
pop
pop
xchg
loop
cmpl
mov
sbb
push
push
call
clc
aam
pop
mov
cmc
xlat
dec
imul
mov
cwtl
xor
cli
popf
or
xorb
int3
test
cmpsl
outsb
mov
jle
jns
cmp
mov
mov
in
mov
fsubrs
xor
lret
gs
les
xor
dec
arpl
std
ds
pop
popa
pop
mov
pop
subb
jle
mov
or
mov
andb
push
dec
sarl
xlat
lahf
rcll
clc
fldl
outsb
xor
and
xchg
test
clc
push
insb
popf
mov
xor
mov
sub
mov
add
lret
xchg
add
push
ds
aas
bound
aad
scas
sub
pop
dec
dec
jbe
xchg
mov
into
push
int
iret
pop
mov
pushf
push
gs
adc
cmp
pop
sub
popf
addb
outsb
cwtl
push
xchg
jmp
mov
popf
adc
sbb
inc
dec
dec
sbb
xchg
scas
pusha
xchg
rcrb
popa
sbb
cmpsl
fildl
call
out
stc
push
data16
cmpsl
lea
aad
daa
push
es
and
es
and
pop
push
pop
sysret
pop
movb
cmpsb
add
sub
xor
insb
dec
test
test
in
stc
sub
lods
cmpsl
inc
mov
movsl
movsb
or
testb
jno
xor
pop
loope
sarl
into
cs
daa
or
cmp
add
cmp
jne
inc
push
cmp
inc
xchg
cmc
mov
pop
jnp
jp
xor
jae
out
sbb
mov
pop
pusha
dec
xchg
dec
cmpsb
mov
data16
and
push
cmp
sub
subl
aaa
or
jp
xchg
dec
sbb
in
shl
lret
cmp
cmc
bound
add
adc
fdivrl
outsb
pop
xchg
or
adc
pop
push
sub
mov
pop
pop
aam
mov
mov
jno
add
mov
stc
mull
fmull
aaa
inc
push
pop
jnp
arpl
push
mov
mov
incb
lahf
mov
dec
and
and
or
mov
pop
push
lret
aad
fdivrl
dec
cli
int
inc
sar
pop
cltd
xchg
test
xchg
test
sbb
sbbl
sbb
push
xchg
rcrl
xchg
lahf
mov
fwait
dec
or
andb
xchg
or
fmull
push
daa
into
add
int
stc
lret
xchg
add
mov
test
js
adc
xchg
push
xchg
dec
sbb
cmc
mov
movsb
pop
push
test
pop
inc
sub
pop
sbb
mov
aas
call
mov
dec
dec
jo
icebp
add
and
cmp
inc
ret
add
in
cmp
hlt
cltd
add
cmp
ficoms
dec
sub
mov
sub
fnstenv
push
das
gs
mov
xchg
lods
in
mov
or
shll
fbld
push
loopne
push
inc
or
mov
clc
fisubl
in
jae
ljmp
jle
sahf
js
pop
pushf
ror
xor
adc
std
sbb
pop
rcr
push
clc
mov
and
adc
nop
inc
mov
into
jl
jge
cmp
leave
pusha
dec
lds
ret
insl
lret
shrb
and
mov
inc
lock
push
in
xlat
sarl
fimuls
je
int3
adc
inc
rolb
movsb
cmp
lds
add
mov
sbb
jnp
mov
mov
repnz
ja
xchg
and
jmp
lds
dec
dec
arpl
outsb
std
scas
movsb
pop
call
or
in
adcl
or
lret
mov
cmc
pop
pop
js
ficompl
les
xor
into
stc
test
rorb
jecxz
sbb
scas
cmpsl
pop
xor
mov
xor
dec
lret
cmp
pushf
in
int
inc
sub
push
lods
dec
mov
dec
aas
jg
add
pop
in
filds
ja
and
repz
and
std
pop
xchg
mov
out
dec
xorb
sbb
insl
notl
popf
add
fisttpll
adc
mov
in
mov
mov
xchg
shr
xorl
scas
lock
leave
std
test
sub
inc
rcll
loop
sub
sub
pop
ljmp
loop
or
cwtl
adc
scas
lds
cltd
or
push
inc
insl
cmp
jp
sahf
sbb
popa
lcall
in
and
xor
cmpsl
or
push
popa
ret
fs
add
push
ja
sub
cld
insb
stc
lret
stos
mov
mov
insb
xchg
push
out
mull
clc
xorl
lret
shl
dec
cmp
addr16
imul
addr16
dec
push
cld
push
xor
shll
aas
fwait
jmp
enter
mov
cmp
out
mov
lds
cmpsl
xchg
fnstsw
movsb
bound
fcompl
lds
xchg
icebp
sbb
or
mov
xlat
popa
scas
inc
mov
scas
shlb
lahf
xor
cmp
jae
inc
xchg
and
aam
inc
push
aad
mov
movsl
movsl
movsb
scas
or
inc
xchg
pop
hlt
or
inc
cld
daa
rorb
out
stc
push
ror
les
cld
adc
aas
push
jg
pop
add
xor
aaa
mov
xor
dec
lcall
xchg
jp
push
imul
shll
sar
sub
pop
ret
or
jp
ja
adc
das
sbb
pushf
xchg
lods
sbb
jns
inc
lock
push
sbb
xchg
add
pop
inc
inc
xor
pop
mov
mov
in
pop
out
cmp
aas
jns
mov
divl
pop
js
jg
jle
jnp
fwait
hlt
mov
xor
cmp
push
xchg
sbb
vmovdqu
adc
out
xchg
es
repz
in
add
sub
pop
lahf
nop
fcompl
test
sbb
das
cmc
add
rcr
test
mov
cmp
add
pushl
fadd
add
push
pop
popa
add
ror
gs
das
call
push
mov
loop
pop
fadds
repz
push
sbb
xchg
test
cmpl
cli
xchg
adc
cmp
push
mov
incb
out
rdtsc
xchg
and
inc
movsb
xor
xchg
out
stc
clc
xchg
or
adc
pop
mov
notb
loopne
add
mov
sahf
fwait
icebp
adc
push
mov
fstpt
ret
sub
addr16
fcmovnbe
push
repz
pop
cmp
mov
in
sbb
popf
lea
jbe
dec
xchg
mov
pop
inc
dec
lret
loopne
or
sub
je
test
xlat
add
push
scas
xor
stos
push
push
xchg
jg
arpl
pop
push
pop
mov
xchg
cwtl
lcall
icebp
xchg
mov
lea
sahf
sete
fs
mulb
xchg
xchg
cwtl
dec
fcomps
xchg
dec
int
movsb
out
and
popa
test
adc
dec
fs
int3
xlat
lods
inc
lea
sti
aad
jo
enter
ljmp
cli
insb
mov
std
jae
xchg
pushf
jp
adc
pop
cmp
clc
fistps
cmpsl
cmpsl
iret
je
lods
mov
dec
int3
adc
inc
test
mov
dec
fs
or
loope
xor
out
push
in
fsubrl
rcr
loope
sub
add
aad
ja
jg
ja
mov
inc
leave
mov
push
inc
or
mov
xchg
bound
data16
sub
jb
dec
hlt
xchg
fimull
lods
cwtl
sbb
jle
test
sub
cli
mov
inc
sbb
or
cltd
and
add
mov
in
in
nop
aaa
out
sub
sti
jmp
jecxz
xor
adc
mov
xor
add
clc
pushf
std
mov
ja
subl
mov
imul
rclb
jge
in
xchg
int
imul
ljmp
xchg
jb
sahf
stos
or
int
sub
int3
inc
stc
pop
das
fmuls
sbb
inc
xchg
or
cli
aam
fstps
inc
cwtl
jecxz
push
in
pop
pop
xor
jno
sub
mov
stos
fnstenv
popa
jp
or
cmp
or
mov
push
cmpsb
mov
inc
icebp
orl
insb
aad
mov
xchg
shrl
aam
fwait
int
repz
jo
push
jmp
stos
xor
in
aaa
rcr
sub
gs
adc
insb
call
scas
sub
ljmp
xchg
sub
add
sub
ficoml
insl
ljmp
and
inc
jmp
adc
ret
xchg
dec
ljmp
mov
in
aad
ljmp
int3
mov
pushl
sarl
mov
jle
andl
lret
bound
sub
push
push
mov
shr
jns
jne
mov
in
repz
int3
mov
lods
scas
cli
mov
je
jecxz
pop
cmpsb
sbb
out
pop
jnp
faddl
test
pop
cmp
mov
rorl
std
mov
jl
push
loopne
pop
mov
jmp
push
pop
mov
mov
cmp
in
push
lds
or
jne
outsb
outsl
mov
test
iret
mov
stc
fstl
xchg
mov
dec
pop
push
push
enter
push
pusha
movsl
in
test
dec
fisttpll
scas
test
sbb
xlat
dec
mov
pop
int3
xchg
jno
lahf
pop
test
leavew
xor
mov
movsl
cmpb
data16
mov
seta
fisttps
sub
mov
adc
cmp
jno
lcall
lcall
jl
cmp
mov
inc
inc
mov
adc
test
out
xor
mov
xor
in
cmp
mov
shrl
lods
xchg
scas
imul
inc
into
jbe
rolb
int3
leave
mov
fwait
aad
test
lods
aas
jae
mov
mov
add
pop
dec
cld
jne
and
pavgb
adc
or
ret
es
pusha
insl
in
adc
xchg
or
jns
and
cld
cld
adc
lea
inc
jae
in
xchg
push
add
daa
mov
inc
sti
pushf
mov
mov
sbb
insl
stc
adc
pushf
sub
imul
mov
aad
adc
decb
mov
insb
lods
jbe
loop
or
sbb
aam
sbb
or
jnp
inc
mov
xchg
adc
pop
loope
fcomip
bound
xor
adc
sbb
das
jmp
jl
push
jle
aad
jb
test
loopne
push
adcl
and
outsb
sbbb
repnz
shlb
out
push
out
lret
in
xchg
jmp
loope
into
aad
add
xchg
hlt
inc
mov
cmp
jge
xchg
cs
nop
jp
pop
jge
scas
rorb
mov
pop
mov
adc
in
mov
out
cmp
nop
scas
movsb
sbb
inc
int3
sub
sub
loop
mov
outsl
in
in
and
push
sbbl
dec
jnp
sub
add
imul
movsb
test
inc
lcall
jmp
and
inc
pop
inc
mov
dec
cmp
gs
cmp
xchg
or
aaa
inc
clc
pop
into
inc
movsl
ffree
data16
dec
mov
push
pop
sub
aas
ret
inc
xchg
mov
popa
sbb
icebp
push
shrb
shr
add
ret
mov
mov
test
das
ffree
out
aam
bound
jge
dec
imul
lret
in
mov
aad
and
add
loope
ret
sbb
lock
pop
shl
mov
inc
jno
int
cltd
divb
or
push
lods
inc
jp
xor
xor
movsb
and
sub
pop
sbb
dec
sarb
loope
inc
subb
mov
push
sahf
lods
jne
cmove
push
fnstenv
mov
xor
mov
push
xlat
sbb
call
arpl
cwtl
test
bound
lret
nop
jnp
cmpl
fidivl
and
icebp
mov
mov
dec
ss
sbb
and
addr16
or
pop
dec
adc
stos
int3
movsl
roll
out
fldln2
inc
ss
jnp
std
xchg
xor
mov
test
cmp
cmp
jmp
mov
sahf
xchg
fld
xor
bound
mov
fisttps
ja
xchg
sahf
jnp,pn
adc
jl
scas
test
push
sub
jg
push
pop
xchg
push
iret
stos
mov
adc
or
xorb
test
arpl
pop
adc
lret
insb
icebp
pop
xor
cmc
mov
aad
lods
inc
mov
and
call
into
rolb
std
xor
into
or
nop
test
test
adc
adc
fsubs
stos
fwait
add
push
mov
in
inc
mov
mov
push
outsl
add
sbb
leave
out
test
fcmovnu
push
push
sahf
add
push
negl
and
lret
in
adcb
xlat
jge
or
int
int
push
inc
mov
cli
in
mov
pop
inc
cmpb
outsl
adc
adc
push
inc
les
pop
adc
out
test
cmp
jle
outsb
test
xchg
fwait
cmp
in
test
in
inc
push
std
mov
lret
sub
dec
and
jb
imul
aas
out
push
out
test
dec
outsb
xchg
xchg
cmc
scas
adcl
mulb
pop
inc
adc
out
shll
xor
lret
or
test
ds
cmpsb
in
dec
dec
pop
cld
sbb
xlat
xor
pop
adcb
mov
clc
jns
push
or
fistps
filds
out
pop
notl
pop
xchg
inc
dec
test
imul
je
or
mov
push
outsl
push
add
xor
cs
xor
or
popf
push
push
mov
mov
scas
nop
xor
sbb
push
add
sbb
mov
pop
jle
jge
leave
repz
popa
pop
and
out
and
jp
iret
dec
in
ficompl
mov
mov
pop
inc
dec
rolb
sub
add
xor
mov
insb
inc
cli
adc
xchg
xchg
jmp
mov
push
push
cmp
rol
mov
jg
adc
xor
cmp
scas
pushf
xchg
xchg
ljmp
das
add
cmp
outsl
mov
scas
in
test
adc
mov
xchg
fsubrs
icebp
mov
aad
daa
xor
dec
rcll
inc
cmp
jmp
clc
je
test
pushf
dec
ss
push
ja
mov
mov
adc
imul
clc
into
fisttpl
push
divb
jl
in
push
out
adc
mov
outsl
push
jp
mov
pop
pop
adc
push
clc
jb
push
pop
das
fimull
mov
ja
jns
jae
mov
out
iret
movsl
push
in
jmp
push
inc
inc
fidivrs
adc
pop
fwait
aas
xchg
inc
sbb
clc
jp
jo
xchg
add
adc
mov
jno
movsb
mov
add
cmp
xor
xor
test
push
push
ss
push
rolb
xchg
dec
je
loope
js
scas
fimull
xlat
jge
divl
es
xorb
xchg
pop
les
cmp
cmp
jmp
lods
roll
test
mov
lods
pop
je
insl
inc
adc
loopne
push
xchg
mov
jg
xor
scas
sbb
ret
sub
and
cmp
ja
cmp
dec
xlat
add
inc
stos
and
mov
sub
add
adc
int
loope
scas
nop
add
movsb
mov
enter
mov
lcall
out
xchg
frstor
push
cmpsb
xchg
dec
jns
decb
sub
xor
push
inc
dec
and
sub
and
sbb
clc
mov
lcall
mov
call
mov
jle
cmp
int3
ficompl
sbb
adc
mov
bound
nop
mov
jns
fadd
cmp
jnp
std
cmp
lret
push
ljmp
cmp
mov
xlat
pop
inc
cmp
out
push
int
cld
shll
mov
and
xchg
pop
leave
push
sub
mov
and
sti
lods
cmpsb
push
testb
pop
fisttpl
in
and
pop
mov
pop
mul
add
or
add
je
cwtl
xor
scas
push
sub
jp
hlt
push
loopne
sbb
mov
jae
lahf
test
cwtl
movsb
je
out
aad
in
iret
push
and
and
sysexit
xchg
push
mov
pop
dec
pusha
xlat
inc
jb
jg
int
add
stc
out
daa
jbe
cwtl
mov
rolb
jns
pop
lahf
push
xchg
jmp
sub
cld
adc
call
pop
xor
mov
and
fistps
xor
insl
incl
push
ficoml
jmp
or
push
cwtl
daa
dec
xlat
lret
mov
and
sbbb
mov
sbb
mov
cltd
jl
mov
dec
icebp
adc
enter
repz
jb
mov
and
jb
movsl
lods
cmp
les
insl
jae
push
fistpl
aas
in
jmp
jg
push
addb
mov
pop
flds
adc
mov
ljmp
nopl
test
mov
lock
mov
outsl
imul
in
int
daa
negb
inc
test
in
push
adc
or
incb
push
fnstenv
in
sti
push
pop
sti
lret
scas
mov
push
cmp
arpl
push
bound
decl
mov
cld
push
out
ljmp
mov
jae
sub
into
fs
push
sbb
or
jmp
test
repnz
push
stc
xchg
xor
test
push
xchg
or
mov
ret
aam
repnz
jb
xchg
xchg
push
mov
inc
out
and
jnp
jmp
jmp
ja
ficompl
mov
pop
pop
xchg
xchg
aam
or
mov
pop
jne
cmpb
iret
test
mov
movsb
mov
dec
mov
lock
ret
or
xor
iret
push
enter
fwait
or
lods
xchg
or
das
inc
cmp
mov
mov
push
addr16
ss
inc
in
mov
lods
dec
pop
jl
les
in
cltd
arpl
add
adc
xchg
add
sbb
fdiv
test
adc
cmc
insl
in
daa
lods
xchg
jnp
bswap
loopne
mov
loope
push
in
cmc
repz
or
out
mov
pop
pop
and
and
xchg
xor
pusha
sar
arpl
mov
mov
enter
testl
ds
gs
cld
mov
fidivs
mov
mov
jns
adc
sub
fimull
daa
popf
fs
add
xor
cltd
fnsave
mov
xchg
rcr
sub
xchg
add
std
mov
clc
push
data16
mov
scas
lods
out
lock
ss
fdivrs
or
lahf
mov
sub
cmpsb
pop
imul
adcl
xor
aad
add
ret
loop
inc
lods
add
enter
unpcklps
pop
call
push
and
roll
xor
or
inc
lods
fwait
inc
mov
push
and
jle
pusha
mov
fidivrl
or
mov
ret
push
cmp
and
ljmp
dec
out
ljmp
jge
bound
mov
int3
in
int
dec
outsl
xchg
add
lds
adc
inc
aam
push
push
ret
and
stc
sbb
movsl
cltd
add
sub
mov
xchg
aas
xchg
xchg
mov
lea
dec
mov
push
or
mov
mov
in
test
inc
cltd
mov
sub
lea
inc
mov
test
into
push
xchg
dec
and
mov
cli
mov
pop
aad
or
sbb
dec
ljmp
jbe
push
mov
fnstcw
jl
rorb
loopne
lods
loope
push
les
fistl
and
cmp
push
xlat
adc
xchg
mov
jge
inc
rorl
stc
push
push
jecxz
nop
lock
push
in
out
sbb
dec
sti
aam
mov
xchg
mov
mov
pop
lea
mov
testl
dec
adc
xchg
fwait
dec
ret
lea
xor
fxch
adc
mov
sub
inc
jmp
pop
mov
ja
call
mov
cmp
jge
movsl
jae
outsl
add
std
jbe
or
std
push
inc
shlb
inc
sub
ret
adc
jecxz
push
lds
pop
sub
jl
and
out
push
std
das
jge
xor
in
add
leave
setge
mov
pop
mov
stc
rol
add
dec
push
inc
xchg
call
outsl
mov
pop
adcb
cmp
shlb
or
mov
mov
imul
ret
jne
mov
mov
xor
and
les
push
fidivl
test
clc
imul
sbb
mov
scas
jle
mov
fdivrl
fwait
add
xchg
push
sbb
and
fucom
or
mov
cmp
adc
mov
mov
xchg
mov
cltd
jge
movsb
lret
outsb
mov
insl
pop
xchg
fwait
mov
scas
or
mov
sti
inc
push
mov
shll
ljmp
loop
xchg
into
sub
push
inc
lahf
loopne
fs
enter
pop
jb
fisubrl
mov
ror
aad
pop
popl
out
rol
and
xchg
cmp
mov
mov
repnz
and
shlb
adc
imul
adc
lock
sbb
xchg
lahf
cmp
adc
test
loop
data16
jmp
mov
jmp
mov
fisubrl
movsl
jge
dec
scas
pop
icebp
pop
aas
sub
push
mov
mov
pop
es
lret
mov
clc
inc
xchg
incb
aam
dec
stos
jg
inc
imul
mov
push
push
push
loope
imul
push
push
cmc
bound
adc
mov
ficoml
dec
fnsave
and
and
shlb
mov
sarl
test
fimull
es
add
pop
mov
pop
pop
inc
idivw
pop
mov
int
ds
dec
xor
mov
lds
icebp
ret
lods
movsb
dec
clc
popf
mov
mov
or
fnsave
mov
sbb
sbb
mov
mov
fwait
jl
rorl
inc
shrb
rorl
jno
xchg
xchg
inc
int3
out
ljmp
add
insb
outsl
in
scas
repnz
subl
jno
sbb
imul
lock
and
mov
mov
icebp
xchg
pop
fldl
hlt
add
in
outsl
imul
push
in
nop
jne
ss
cmp
cmpsb
fstpt
mov
into
sarb
insb
les
adc
mov
jb
in
dec
jns
pop
mov
shlb
xor
adc
ljmp
stos
fildll
outsl
pop
and
pop
pusha
popa
dec
xorl
divb
mov
adc
daa
dec
dec
daa
out
fcompl
mov
sbb
aad
das
cmc
dec
xchg
mov
sarl
push
cli
inc
push
movb
jns
shl
cwtl
adc
stos
je
pop
popf
jge
and
push
push
xchg
addl
loop
clc
dec
ret
jl
pushf
cmp
adc
jns
ror
notb
insb
mov
insl
mov
test
das
jnp
dec
push
testb
sbb
out
jg
sub
aas
sahf
iret
imul
out
mov
adc
pop
mov
jg
mov
fcomps
jg
or
and
ss
and
and
add
sbb
fsts
into
pop
dec
mov
xchg
pop
shll
imul
pop
outsb
mov
mov
adc
es
mov
mov
testb
test
call
cli
mov
icebp
push
in
mov
ficoms
out
enter
inc
das
ret
jle
sbb
mov
mov
and
adc
jnp
jns
test
mov
aaa
div
std
mov
fisubl
ffreep
sbb
xchg
icebp
andb
jge
inc
push
and
fiadds
pop
push
cmp
jo
pop
mov
push
popa
insb
arpl
cli
add
pushf
fbld
lret
pop
stc
and
shlb
push
jno
sbb
aaa
push
mov
mov
aam
sahf
mov
loope
xor
add
pop
daa
int3
jmp
lds
sbb
jne
test
out
incl
stos
js
jp
shrb
push
jl
cmp
jno
cmp
cltd
or
into
push
scas
loope
add
loopne
push
dec
adc
or
mov
cmp
mov
mov
int3
in
outsb
popa
ljmp
dec
mov
mov
cmp
adc
stc
adc
mov
les
adc
dec
mov
or
mov
jg
test
add
loopne
xor
mov
dec
ja
sub
mov
mov
jmp
mov
push
mov
imul
loope
testl
int
lahf
pop
jbe
les
movsl
and
imul
inc
push
push
fcoml
dec
or
jmp
pop
and
pop
cmp
pop
fiaddl
or
jo
pop
xchg
and
and
lods
and
lcall
pop
mov
xchg
push
es
sbb
pop
mov
lahf
enter
inc
jnp
jnp
in
popf
mov
rorl
dec
mov
inc
xor
popf
cmp
pop
call
adc
pop
dec
pusha
loopne
push
dec
pop
xchg
andb
pop
idivl
cmpsb
dec
add
cli
jecxz
xchg
je
mov
das
testb
sub
mov
cmp
cmp
stc
jne
sbb
ds
xlat
xor
lahf
mov
je
xchg
mov
shll
cmpsl
insl
xor
xchg
hlt
dec
xor
imul
dec
dec
in
xor
daa
and
mov
or
push
mov
lock
lds
in
mov
xchg
fadd
mov
inc
mov
and
pop
and
sbb
das
outsb
pop
adc
mov
in
inc
into
mov
jno
test
lret
push
fbld
push
dec
or
push
add
addb
je
lods
data16
sti
jge
jns
xor
into
outsb
pop
mov
or
push
or
lcall
negl
pusha
dec
lcall
js
sub
in
icebp
push
sub
sbb
js
aaa
iretw
aad
imul
test
inc
inc
neg
add
ja
or
inc
and
jecxz
loopne
aam
sub
dec
not
ret
mov
sbb
sub
nop
sbb
sub
leave
mov
sub
pop
push
dec
movsb
std
push
insl
sub
ja
inc
mov
imul
mov
xchg
out
pop
cltd
sbb
ret
push
imul
or
or
pop
xlat
adc
or
push
or
jns
and
xor
shlb
fiaddl
lret
cmp
mov
lock
ret
incl
sbb
and
std
or
and
in
mov
push
in
inc
sbb
mov
xchg
aam
mov
fdivl
std
mov
data16
adc
in
jg
jl
jnp
hlt
mov
push
mov
inc
in
jb
lods
add
xor
push
jmp
jmp
hlt
cmpsb
inc
int
out
fidivs
push
test
repnz
aam
jl
and
xor
jae
shl
dec
pop
push
nop
cmp
mov
fists
mov
nop
mov
mov
cmp
sbb
or
divl
jge
int3
add
movsl
daa
sbb
lea
and
fcmovbe
mov
pop
cmp
mov
inc
pop
mov
dec
insl
jb
pop
dec
fs
fs
call
mov
mov
pusha
inc
or
testb
mov
cmp
jecxz
out
pop
test
xchg
mov
rol
gs
rorb
push
xor
pusha
addr16
fcmovbe
mov
push
fstpl
mov
push
das
xchg
out
inc
mov
stc
in
fadd
mov
in
inc
mov
xchg
mov
pop
pop
xchg
cmc
in
xchg
mov
lret
sbb
test
adc
cmp
lds
mov
lahf
mov
push
mov
lods
clc
nop
in
adc
fistps
mov
and
cli
andb
push
mov
adc
pop
or
pop
mov
icebp
mov
lods
sub
clc
xor
pop
mov
mov
aad
and
sbb
lahf
push
xor
mov
fnstcw
pushf
jae
shlb
mov
inc
pop
and
fs
lret
mov
sbb
xchg
sub
cvtss2si
cli
inc
repz
test
repz
dec
shlb
inc
push
andl
add
std
jg
inc
outsl
dec
sub
aaa
xchg
into
inc
xorb
mov
jno
int
hlt
jne
cmp
jbe
inc
ja
out
xchg
in
mov
add
nop
scas
mov
dec
cli
mov
add
subl
sub
fsts
add
loope
and
push
and
dec
cltd
sahf
jnp
adc
dec
lods
mov
adc
rcr
int3
or
xor
ficoms
test
push
not
sub
ljmp
xchg
xor
mov
push
out
call
push
arpl
and
push
push
sar
mov
std
pop
push
sti
les
jbe
xchg
stos
in
mov
push
fisubrs
push
mov
idivl
inc
mov
cmpl
das
aam
mov
fcompl
jmp
arpl
jmp
mov
shrb
movsb
dec
xor
ret
mov
gs
mov
int3
and
mov
mov
inc
out
sar
ljmp
movsl
ss
push
cmp
ss
adc
pop
leave
dec
loope
pop
ficoms
out
lods
mov
sti
out
inc
or
imul
pop
sti
cmc
inc
mov
mov
inc
push
push
mov
cmc
mov
xchg
pushf
shll
mov
popa
sarb
outsl
movsl
pop
out
push
pop
mov
push
out
je
in
enter
mov
out
add
or
mov
push
aad
enter
in
jmp
gs
into
cmp
ret
int3
in
xor
pop
out
fcomps
dec
test
fwait
popf
mov
push
dec
sbb
mov
and
call
jle
sbbl
sbb
dec
fistl
js
pop
cmp
popf
jge
out
pop
jp
ret
aaa
clc
mov
sahf
push
sbb
out
icebp
jb
sbb
xor
cmp
mov
cmp
add
or
daa
dec
jno
add
popa
enter
sti
fwait
das
adc
scas
lods
sbb
xchg
pop
xchg
subb
test
and
ret
pusha
in
test
inc
mov
lahf
push
and
cltd
das
dec
xor
in
sbb
mov
ss
cmp
aas
jno,pn
xchg
cltd
jl
les
pop
mov
fdivrs
mov
out
sbb
jecxz
fucomi
push
lcall
mov
in
jo
mov
or
iret
test
shl
pop
shll
sbb
das
lahf
xchg
aaa
test
test
push
add
jg
xor
int
arpl
cmp
mov
mov
adc
negl
sub
rolb
mov
enter
and
sbb
inc
push
jl
fbstp
pop
mov
inc
loop
inc
sbb
mov
inc
mov
jl
cmp
dec
pop
xor
and
sahf
fisubl
pop
stc
lret
popa
mov
cmc
mov
out
popf
mov
rcr
inc
pusha
inc
mov
push
jmp
pop
mov
iret
mov
setle
mov
add
stc
loop
inc
xor
dec
stos
repnz
add
jl
ljmp
inc
adc
dec
icebp
xchg
mov
notl
or
mov
jo
loopne
add
leave
pop
movsl
jp
mov
pop
ret
add
jb
inc
js
sub
js
mov
and
inc
cmp
sti
lods
xor
je
push
jp
int
xor
fcoms
push
lds
adcb
dec
xor
cld
pop
roll
inc
dec
push
jg
xchg
sbb
call
push
mov
je
sub
cmp
js
pusha
xlat
add
incb
sar
rorl
inc
jno
data16
pop
mov
xorl
das
mov
sub
fnsave
push
lock
sub
inc
add
sar
lock
in
ds
sbb
mov
in
xchg
mov
push
push
std
xchg
cmp
inc
and
shll
das
fisubrl
or
dec
sbb
stos
mov
sarb
in
lds
and
orl
xor
cld
cmp
aam
sti
lds
jae
sti
and
adc
push
ss
push
mov
cwtl
push
daa
mov
dec
daa
sti
dec
sbb
sar
xchg
popa
xchg
fisttpll
incb
stc
and
shrl
mov
out
pop
jecxz
add
pop
adc
pop
cmpsl
sbb
and
sub
lock
cmc
pusha
daa
shrb
and
jp
add
jb
jl
movsl
aaa
mov
stos
cmp
jp
push
fistl
inc
lss
mov
outsl
push
mov
add
ja
ret
xor
and
das
cmpsl
sub
iret
xor
dec
jb
aaa
sbbb
ljmp
ficomps
inc
rorl
movsb
dec
push
lret
inc
ud2
comiss
mov
mov
ret
test
mov
lcall
dec
cli
fsub
inc
insb
add
mov
xchg
or
xchg
enter
scas
shll
cwtl
imul
mov
xor
jno
mov
dec
push
mov
jb
lret
repz
aad
mov
pop
mov
sbb
jno
inc
mov
pop
jg
xlat
icebp
clc
mov
push
push
adc
js
pop
add
pop
insl
xor
cmp
mov
pop
sub
mov
icebp
mov
aas
subb
and
mov
stos
mov
add
pop
mov
or
xchg
pusha
andb
fsts
lret
pop
mov
cmp
ss
mov
in
cltd
fsts
nop
sbb
pop
faddl
rorb
pop
rcrb
or
cmp
mov
rcrb
jb
or
push
mov
testl
fnstcw
lcall
scas
add
sbb
in
leave
xchg
pop
cltd
mov
rolb
shrb
mov
and
sub
dec
pop
in
scas
cmpsl
out
lahf
filds
adc
push
sub
or
mov
mov
cmp
icebp
sbb
clc
mov
fldl
inc
insb
mov
loope
pop
lcall
sbb
and
test
clc
cmc
inc
push
push
jge
pop
jnp
je
cmpsb
lods
mov
cmp
inc
dec
add
inc
cvtpi2ps
int
lods
or
cmp
in
aas
cmp
mov
and
cs
imul
push
inc
lahf
icebp
cld
xchg
dec
ds
das
pop
mov
outsb
mov
push
jg
clc
xor
or
es
daa
aas
cs
push
xchg
jmp
pop
xchg
push
out
sbb
int
xchg
sbb
imull
aaa
mov
cltd
push
sbb
lods
int
inc
or
dec
loope
jle
dec
xchg
cld
mov
and
add
fimuls
cld
mov
jmp
and
sub
adc
push
mov
cmp
ss
adc
cmpsl
jecxz
or
push
negb
ljmp
cmpsb
je
loopne
rcrb
cmp
subl
arpl
cwtl
jl
frstor
test
push
add
test
sarb
sbb
adc
adc
sbb
push
clc
int
fwait
and
movsb
sub
mov
or
sub
pop
lds
loopne
jmp
div
mov
pop
andl
fwait
mov
aas
int3
xor
push
popf
xor
xor
mov
ljmp
dec
add
or
and
int
aam
dec
and
push
roll
cmp
adc
sbb
xchg
pop
dec
mov
push
jns
gs
and
xlat
cltd
push
add
pop
xor
rcll
mov
sbb
ror
insl
gs
mov
push
jmp
imul
repnz
pushf
and
jecxz
mov
xor
inc
jle
cmp
test
xbegin
xchg
cmp
popf
push
push
inc
sbb
fwait
lock
push
mov
test
lret
sbb
mov
fwait
push
push
scas
pop
ja
icebp
mov
sti
sbb
sub
push
cmp
xchg
sti
jp
adc
mov
loop
rorl
xchg
aas
lods
aad
mov
xorb
popf
mov
lret
add
outsl
pop
hlt
ficomps
imul
push
idivl
pop
push
cld
insb
loopne
lods
add
clc
or
cmp
fiadds
in
addr16
outsl
jmp
test
movsb
sub
pop
xor
idivl
loopne
jnp
sahf
cmpb
cmp
in
cmp
inc
xchg
ja
cmp
les
lds
xorl
loopne
test
std
xchg
ffree
insb
mov
mov
cmc
mov
and
mov
lahf
fidivrl
leave
mov
xor
sahf
lods
sti
sbb
insb
nop
shrb
sbb
or
jle
push
sahf
xlat
pop
ja
insb
push
xchg
mov
xor
sbb
jns
ret
rep
xchg
into
mov
mov
out
cld
mov
int3
stos
movsl
lret
adc
cld
mov
push
sub
lock
mov
jecxz
pop
xchg
loopne
in
dec
arpl
negl
std
pop
and
hlt
aam
hlt
or
inc
scas
pop
movsb
fisttpll
pop
sbb
stc
dec
pop
ljmp
les
icebp
cwtl
adc
cmpsb
fcomps
xor
pop
mov
xchg
popf
mov
adc
fwait
cmp
sub
add
xchg
lds
mov
sahf
mov
inc
bound
sbb
mov
int3
clc
clc
cmp
adc
hlt
loope
xor
test
es
je
test
idivb
in
pop
in
sti
in
mov
out
sbb
in
sub
sti
mov
insl
or
jnp
sub
jno
pop
xchg
jmp
lret
mov
dec
push
cmp
xor
and
or
enter
pop
push
mov
out
clc
aaa
sbb
fiaddl
jne
jle
outsb
imull
mov
cmp
add
cmp
add
fmulp
arpl
and
and
add
xchg
mov
rolb
jmp
fdivrp
lahf
xor
scas
ret
ret
movsl
pop
fcmovnbe
mov
lods
in
mov
call
mov
xor
lahf
pop
fwait
mov
add
xchg
dec
lcall
mov
jle
pop
or
mov
inc
jnp
lods
cmp
add
test
ret
sub
mov
and
xchg
sub
testb
jmp
popf
stos
fcoml
push
adc
inc
lcall
pushf
push
cmp
aad
fists
ss
push
adc
mov
and
jg
js
sbb
push
call
xor
xchg
aad
movsl
nop
mov
fsts
jmp
dec
mov
cmpsl
es
hlt
jle
sbb
iret
xchg
cmp
jae
mov
inc
mov
or
leave
mov
mov
movsb
and
fdivl
andl
movsb
mov
sbb
sbb
setle
out
pop
repz
xchg
loop
xor
sbb
inc
push
adc
xor
daa
pop
sub
hlt
or
imul
fstl
mov
mov
inc
adc
imulb
ljmp
fwait
add
dec
fld
adc
mov
repnz
push
sti
pop
jbe
das
xchg
out
nop
xor
mov
or
xchg
pusha
repz
pop
ret
icebp
popa
mov
add
js
ror
jbe
bnd
lahf
sbb
xchg
pop
mov
rcll
scas
pushf
cmp
and
sub
add
ret
add
cli
sbb
xor
ds
subb
cmp
into
and
and
mov
ret
cmp
mov
iret
lcall
mov
jns
xchg
dec
jl
dec
gs
add
add
dec
adcl
inc
or
pop
scas
jle
subb
lret
push
jp
mov
sbb
imul
ja
lret
cwtl
pusha
xchg
xchg
popa
pop
movsb
idiv
stc
jg
and
dec
and
mov
fiadds
sbb
decl
enter
mov
jnp
sub
aas
xor
adc
mov
hlt
mov
xacquire
vpmulhw
sbb
cmpl
xor
jns
dec
popa
sbb
and
test
mov
jle
jb
mov
mov
shlb
in
sub
in
sarl
lea
les
cmp
imul
inc
xchg
lahf
sub
mov
outsb
push
aad
es
xor
out
and
pop
cli
mov
insb
push
mov
mov
sbb
push
and
push
outsl
addb
and
xchg
stos
lcall
dec
cld
inc
fwait
icebp
mov
or
xchg
push
adc
jno
fwait
ret
mov
xchg
mov
pop
add
nop
cs
xchg
or
das
cld
inc
adc
jne
and
adc
add
ror
mov
jmp
jmp
push
test
mov
jle
mov
lods
sub
xchg
sbb
mov
js
lcall
mov
popa
in
lret
adc
pushf
dec
movsl
sub
iret
or
add
stc
mov
rcrb
xchg
out
xlat
adc
loop
in
ret
mov
xchg
bound
ficoms
jae
jmp
jge
jg
or
pop
xchg
rorl
mov
sub
xchg
adc
test
fsubrl
push
mov
ja
inc
inc
cmp
movsb
lcall
mov
aam
push
jmp
test
test
bound
or
out
lret
jno
gs
add
les
sub
mov
inc
pop
cmpsl
xor
cmp
mov
inc
and
data16
or
or
sti
movsb
outsb
fmuls
xchg
and
sub
cmp
divb
movsl
mov
loop
cmpsb
arpl
mov
xchg
sbb
sbb
aaa
repnz
adc
fucompp
mov
jns
mov
add
dec
enter
mov
dec
insb
push
test
mov
ss
add
xor
negl
or
add
mov
pop
in
mov
xor
pop
jmp
add
dec
roll
push
ror
jbe
out
pop
int
stos
pop
xorb
por
mov
jecxz
cld
add
sbb
pop
aad
sub
daa
push
jmp
int3
sbb
pusha
add
mov
mov
or
test
add
cmc
cmpb
adc
mov
push
cmpsl
push
je
lock
pop
ficompl
xor
je
xchg
sub
sbb
fcmovne
aas
jb
dec
mov
sbb
inc
or
push
in
pusha
jmp
inc
xlat
outsb
sbb
adc
sarl
sarb
push
sbb
adc
pop
mov
dec
test
lock
les
add
add
xchg
mov
mov
scas
daa
je
incl
dec
dec
and
jp
mov
cmp
sub
outsb
or
aaa
cltd
mov
xchg
sbb
mov
sbb
jmp
mov
movnti
push
rolb
mov
ljmp
inc
out
lcall
push
add
jmp
in
insb
inc
push
pop
or
ret
cmp
cli
pop
and
dec
dec
or
or
push
or
jno
ss
out
mov
je
adcb
repnz
jmp
mov
push
movsb
sbb
out
lods
or
fnop
data16
andps
mov
in
jo
xchg
rclb
lods
les
stos
scas
sarl
dec
adc
fmul
dec
in
pop
popf
sbb
shl
mov
pusha
push
inc
fmul
push
iret
adc
cmpb
lcall
inc
cs
insb
stc
addr16
mov
iret
inc
xchg
fcmovb
add
andb
pop
adc
push
xchg
xchg
aam
jle
les
xor
fwait
std
loope
mov
cmp
and
jg
push
mov
stos
in
sbb
mov
clc
pop
mov
fsts
int
inc
enter
test
repz
pop
mov
mov
sbb
add
jle
cmp
into
push
lret
cmp
jne
fdiv
and
fwait
pop
stc
jnp
add
cli
mov
fstps
test
repz
pop
ret
loop
lret
jmp
jb
pushf
or
pop
pop
pop
sub
pop
push
aad
aas
popf
dec
and
jns
inc
push
dec
jmp
mov
in
mov
ret
sub
rorb
push
inc
jo
jae
inc
ficomps
jmp
adc
sbbl
mov
jle
cwtl
data16
popa
notb
test
loop
sub
repnz
jno
dec
orb
jno
push
arpl
fnstsw
fisttpll
jp
xchg
mov
pop
jmp
mov
fldenv
dec
pop
sbb
fwait
in
mov
jno
pop
mov
cwtl
fcmovnu
lds
insl
xor
cmpsb
dec
xchg
jl
rorb
lahf
outsl
fsubrs
mov
orb
xchg
les
hlt
repz
test
pop
xchg
sub
and
imul
loop
insl
es
test
shlb
loop
rcrl
fmull
jne
adc
or
dec
mov
aam
sbb
cltd
pop
ret
jle
shll
test
insb
outsl
sahf
mov
mov
pop
test
jnp
stos
test
sti
xchg
repnz
push
inc
sbb
int3
idiv
enter
push
jle
push
dec
sbb
test
je
fimuls
inc
or
mov
jnp
jns
fwait
aad
sbb
scas
inc
xor
sbb
inc
or
in
bound
add
adc
pop
mov
jmp
lea
or
pushf
sbb
mov
mov
push
int3
pop
sbbb
dec
insb
mulb
push
and
mov
xor
sbb
ja
dec
pop
push
loop
sbb
hlt
and
xor
push
pop
jae
cmpb
ret
je
push
add
loop
push
cltd
jge
push
sub
mov
mov
mov
pushl
lahf
aam
lret
repnz
out
ret
cmp
cmpl
add
xchg
or
push
jns
dec
into
jnp
ljmp
dec
mov
add
iret
add
jnp
cmpsl
lret
out
fs
addr16
push
add
imul
das
ss
loope
nopl
xchg
ret
in
lds
aas
inc
jg
pusha
sbb
cmp
dec
repnz
scas
cwtl
inc
adc
mov
or
cmp
daa
add
fdivl
add
outsl
mov
call
mov
mov
les
or
dec
out
mov
dec
adc
mov
jge
lgs
ja
aad
in
inc
cmpsl
xchg
cld
test
mov
jecxz
fdivrl
sti
pusha
enter
add
pop
inc
push
nop
test
out
mov
and
js
inc
fsubs
pop
dec
lahf
jl
arpl
popa
dec
out
fstp
mov
push
push
loop
clc
mov
mov
rolb
xor
inc
sbb
mov
or
mull
dec
mov
mov
push
fisubs
test
mov
cmp
nop
push
add
add
movsl
call
std
cmp
jg
mov
sbbl
mov
test
or
add
das
jbe
das
jnp
and
sbb
mov
inc
cmp
jl
xor
loope
cmpsl
cmp
fwait
lahf
bt
shrl
mov
jne
mov
xchg
mov
sub
mov
xor
push
sbb
fs
mov
lock
push
xchg
loopne
inc
imul
push
or
arpl
xchg
jne
lods
imul
xor
xchg
lahf
push
mov
mov
movsl
repz
add
je
inc
jg
and
and
fcom
cli
jo
xchg
loopne
test
lods
in
xchg
out
sbb
cmc
aas
inc
fisubrs
push
jnp
xor
mov
imul
sbb
out
or
lret
and
adc
nop
mov
adc
fildll
sbb
mov
xor
jp
xor
cmp
cmpsb
lahf
or
lea
sahf
dec
mov
xor
inc
mov
sub
rorb
sub
dec
fcomps
mov
xchg
insl
fucomi
mov
sti
mov
sti
test
repz
in
pop
out
hlt
push
mov
in
sbb
repz
mov
add
mov
popf
out
lahf
mov
test
ret
in
negl
adc
and
popf
add
jg
dec
or
jmp
aad
mov
push
inc
xchg
xor
lret
icebp
fwait
mov
dec
mov
into
cmc
lret
jae
dec
daa
leave
lods
addr16
xchg
mov
scas
fistpll
push
pusha
mov
push
mov
mov
push
lcall
cmp
jl
pop
cmp
mov
ret
pop
mov
ds
sub
mov
je
and
aaa
adc
adc
pop
ret
out
mov
pop
add
insl
aaa
or
out
int
sub
mov
aaa
ret
popw
xchg
inc
push
scas
sub
push
insb
mov
call
xor
push
stc
xchg
jp
add
mov
or
adc
stos
fstpl
inc
mov
jbe
ret
adc
dec
push
inc
xchg
add
mov
enter
mov
cmc
add
pop
cmc
jg
incb
iret
int
dec
and
mov
jmp
fimuls
pop
pop
push
pop
push
js
cmpsl
dec
rorl
dec
int
pop
inc
lock
lret
push
in
cltd
cltd
cmp
and
outsl
rol
add
xchg
std
sbb
and
fwait
je
xor
push
fbld
into
call
xor
roll
pop
and
mov
clc
scas
je
cmpl
push
lock
lret
js
sub
ret
mov
aam
mov
js
bound
loopne
out
ljmp
dec
jge
ljmp
popf
arpl
jnp
lock
andb
adc
sbb
dec
ret
adc
mov
xor
and
lret
xor
cmp
fidivrl
stc
push
mov
repz
aaa
mov
icebp
sbb
dec
int
dec
or
negl
lret
cmpl
and
orl
adc
enter
inc
sarb
cli
push
sub
mov
popl
push
andl
insl
pop
scas
ret
int3
inc
dec
sbb
cmp
lcall
stc
xlat
outsl
outsl
lods
lods
f2xm1
insl
inc
mov
push
lret
stos
data16
mov
mov
mov
mov
inc
pop
adc
insl
push
and
mov
cmp
add
and
xchg
lods
ret
and
das
lods
cmpsl
cmp
ret
adc
stos
in
sti
scas
sahf
mov
nop
mov
sub
ret
jecxz
imul
or
rcl
mov
mov
nop
shrl
and
inc
sub
es
shr
cmp
push
cmp
xor
adc
arpl
dec
mov
test
std
mov
pop
fs
mov
leave
or
popl
stos
or
ds
mov
sub
mov
hlt
bnd
fidivl
jmp
outsb
test
pop
fiadds
and
xor
ror
adc
jb
lock
scas
lahf
es
pop
scas
mov
xchg
int
clc
pusha
ljmp
sub
mov
aad
xchg
mov
shrl
insb
mov
and
repz
sbb
int
cmp
push
sub
or
mov
and
sub
mov
out
neg
cmp
xchg
add
push
sahf
adc
repz
out
add
popa
das
test
push
sub
dec
insl
cltd
hlt
dec
mov
inc
aam
mov
push
into
lret
adc
inc
hlt
adc
xor
andb
or
inc
or
mov
fs
sbb
int
lock
div
sub
popf
int
push
sbb
add
mov
and
dec
pop
lods
gs
mov
test
jne
mov
and
inc
cmp
xchg
xor
in
stos
push
xor
js
xchg
or
sti
jne
inc
mov
lock
ja
and
xor
push
jecxz
cli
sbb
push
test
lods
insb
sbb
aaa
mov
pop
cmpb
mov
push
loop
mov
cmpl
jmp
stos
inc
adc
and
popf
mov
sbbb
adc
xchg
es
adc
jno
push
out
jns
pop
cmp
push
dec
push
mov
sub
imul
scas
fidivs
sar
sti
cmp
js
or
inc
out
test
cs
xor
xor
imul
cltd
subb
mov
cmpsb
js
lods
fs
mov
cmc
mov
xor
jg
das
pop
sbb
mov
sarl
xor
popf
mov
std
mov
out
xor
addb
cmp
cltd
ja
cwtl
repz
xchg
lahf
mov
stos
outsb
gs
leave
push
cld
xor
push
shl
lret
mov
pusha
imul
ss
mov
loope
out
arpl
stc
add
jecxz
sbb
out
add
cs
in
es
jnp
xor
rcl
push
mov
dec
xchg
std
or
sti
popf
xor
lods
xchg
dec
aad
pop
out
mov
adc
cmc
mov
shl
fnsave
mov
mov
pop
sbb
mov
inc
mov
lcall
mov
or
jg
or
mov
sbb
loopne
ljmp
repz
push
and
stc
nop
popf
cld
jmp
addr16
out
pop
div
sbb
sub
push
sar
pop
cmpl
mov
xchg
mov
jmp
rolb
adc
aaa
push
imul
aas
pusha
cmc
fsubrl
sar
rcl
pop
mov
dec
lret
mov
jns
insl
sub
or
pop
rorb
xchg
xor
test
aam
xchg
sub
filds
cmp
std
pop
mov
cmpl
or
pop
and
mov
push
adc
dec
iret
jno
das
mov
jb
fdivrl
push
pusha
ljmp
daa
movsb
or
sub
iret
lahf
in
push
ja
in
mov
decl
lods
adc
sbb
pop
fildl
mov
into
xchg
jp
stos
test
in
testl
push
sub
cmp
mov
and
roll
push
insb
test
lahf
test
loope
mov
jb
inc
test
ljmp
mov
jae
inc
jge
sbb
jge
jmp
adc
cli
adc
sbb
ljmp
ret
iret
cmp
pop
ret
xor
pusha
iret
icebp
push
fsubs
push
pop
adc
inc
mull
pop
loop
sbbl
xor
xor
mov
mov
jbe
lods
cmp
shll
fwait
cmp
dec
fbld
aaa
ss
pushf
sbb
dec
scas
mul
rcll
adc
mov
test
add
in
test
jae
in
xchg
mov
call
xchg
cltd
ja
jno
imul
fisubs
je
or
roll
dec
and
ds
shl
pushf
dec
hlt
adc
pop
popa
push
gs
dec
mov
ljmp
pop
jns
rorb
push
sub
scas
pop
mov
mov
ret
xchg
mov
mov
push
xlat
cmpsb
xchg
push
jmp
mov
sub
aas
in
push
mov
stos
xor
iret
jge,pt
dec
bswap
movsl
lret
addr16
sub
andb
sub
dec
push
andl
jg
dec
loop
and
dec
or
push
outsb
jno
jb
ret
scas
in
jmp
movsb
pop
into
pusha
inc
sbb
ret
cmp
push
hlt
push
cmp
mov
test
adc
jae
sbb
das
lret
sbb
daa
lcall
xlat
cld
sub
push
push
cwtl
ret
pusha
xor
xchg
cmp
ret
addr16
insl
mov
movl
mov
rcrl
add
pop
pop
sbb
inc
jecxz
pop
jae
dec
aas
es
dec
sbb
lea
nop
add
clc
push
add
leave
cmpsb
dec
rcl
sbb
push
push
repnz
inc
movsl
sub
cmp
jo
stos
repz
mov
fidivs
xchg
add
xchg
jb
xchg
adcb
and
push
push
jle
sub
jg
pop
outsb
inc
fadds
adc
scas
lock
adc
hlt
movsl
lret
jbe
dec
or
jle
pop
mov
cmp
loopne
xchg
cli
test
push
xchg
xor
insb
lock
in
mov
sbb
and
call
data16
fstl
jge
ja
add
ljmp
jns
and
lock
pop
popl
enter
xchg
fisubl
add
xchg
das
or
adcl
push
xor
push
or
sti
sub
loopne
out
and
dec
mov
inc
xor
cltd
call
mov
cwtl
mov
sbb
mov
jge
into
dec
bnd
out
mov
loope
imul
push
pop
ljmp
cli
js
in
into
dec
xor
jge
mov
push
ficoml
cs
iret
pop
cmp
push
imul
shr
inc
in
jge
add
jmp
inc
cs
fbstp
and
aas
mov
sbb
push
inc
arpl
ret
rcll
pop
cli
pop
xlat
mov
push
dec
xchg
sti
cltd
xor
cmp
sub
fimull
pop
xorb
jecxz
rolb
sub
mov
push
jmp
and
loopne
inc
fsubrs
dec
pop
loop
negl
push
outsb
or
dec
addr16
add
push
mov
push
or
pop
out
dec
fstpt
scas
repz
cmp
mov
dec
xchg
dec
bnd
adcl
outsb
jmp
pop
cmpsl
inc
cmp
jle
adc
lods
mov
pop
sbb
mov
sbb
xor
add
shlb
imul
movsl
xchg
jmp
scas
insl
push
fiadds
ret
dec
push
mov
adc
fnsave
das
out
xor
sahf
adc
dec
lahf
aad
pusha
push
in
fwait
xchg
dec
add
jbe
or
sub
mov
out
iret
sbb
ficoms
lret
or
mov
mov
loope
mov
adc
dec
dec
mov
lret
enter
inc
jns
pop
out
imul
in
aam
pop
jns
jb
in
cld
pop
cmp
aam
push
int
add
mov
or
testb
ljmp
sub
push
orb
xor
sub
aad
jecxz
test
push
inc
jno
les
inc
aaa
cmp
cld
ss
cmp
in
leave
pop
xchg
sbb
sub
jae
xor
in
mov
mov
addr16
es
push
movsl
lods
xor
dec
mov
aad
bound
xlat
mov
mov
imul
mov
popa
adc
std
and
aad
push
adc
mov
lods
ds
stc
clc
outsl
pop
pusha
inc
dec
or
push
jg
xchg
add
out
jl
jg
imul
dec
xor
je
pop
insb
and
mov
pop
pushf
and
in
xchg
jo
jg
fistps
dec
adc
mov
es
lea
pop
fnstcw
in
push
lret
xor
lahf
gs
popa
jg
cmc
not
repnz
out
and
add
add
inc
mov
sub
cmpsl
inc
mov
and
insb
out
push
xor
test
jae
inc
fiaddl
getsec
push
ret
loop
arpl
imul
fcoms
or
and
push
arpl
push
add
sub
jge
xchg
ljmp
push
push
mov
test
inc
or
mov
jmp
push
xchg
lods
ret
push
cs
cmp
sub
pusha
push
leave
das
lock
enter
xchg
jl
je
jb
iret
out
lock
cmp
int3
adc
mov
mov
push
push
inc
shrb
jae
ljmp
lock
mov
inc
cwtl
mov
movsb
dec
jge
in
mov
outsb
xchg
push
arpl
cmp
clc
xchg
xlat
fadds
push
scas
dec
fs
repz
fucom
std
mov
mov
leave
fwait
sbb
leave
bound
cwtl
mov
sub
lret
ss
pusha
xor
gs
pop
mov
and
adc
jns
pop
pop
mov
insl
lock
icebp
cmpsb
clc
adc
adc
sti
pop
add
jp
xlat
xor
mov
adc
psrlq
adc
xor
and
fldl
or
shrl
insl
test
fiaddl
cmp
cmp
rolb
push
pop
shlb
push
aad
jecxz
cmp
cli
mov
push
adcl
pop
jae
push
fldl
mov
rolb
stc
stos
jecxz
enter
jb
push
xor
pushf
ret
sti
pop
mov
pop
fidivs
aas
repnz
or
rcrl
pop
jo
subb
dec
stos
sub
fwait
jno
rcr
das
mov
xchg
lahf
test
rorb
out
inc
insl
jbe
jecxz
sahf
and
adc
lods
cmpsb
ret
lcall
pop
insl
pop
xchg
imul
xor
push
jns
test
test
inc
mov
pop
je
and
pusha
outsb
rsm
enter
rol
icebp
add
mov
xchg
mov
jns
push
push
lahf
test
cs
mov
mov
cwtl
sahf
fsubrs
xchg
inc
lea
sar
inc
addl
push
mov
xor
xor
pop
inc
fistpll
rcll
fbstp
and
testl
ret
pop
mov
push
inc
adc
ret
ljmp
xor
xchg
pushf
jg
div
dec
sbbl
dec
jbe
mov
jge
xor
test
mov
data16
xor
and
ret
lods
cmp
out
xchg
mov
leave
sbb
int
rcrl
mov
test
inc
repz
push
mov
pcmpeqb
lea
jle
nop
inc
cld
call
ror
mov
add
fadds
xor
movsb
into
imul
xor
push
jne
add
pop
or
xlat
dec
cmc
fwait
jbe
addr16
scas
sbb
inc
loope
mov
xor
stos
ret
dec
pop
lods
lret
fwait
add
mov
add
stos
xchg
jne
out
adc
pop
sub
pop
lcall
dec
lret
mov
sbb
or
jp
fdivs
jb
leave
addr16
sbb
das
jae
push
shl
mov
loop
rcrl
mov
add
rcll
hlt
pushf
scas
out
enter
sbb
lods
mov
inc
pop
movsb
daa
xor
arpl
dec
inc
add
xor
cmp
loop
fwait
sti
test
xor
sbb
mov
lahf
out
mov
dec
and
sti
popf
sub
add
out
adc
xlat
out
dec
loope
int
ja
cltd
pop
jg
lock
out
ret
or
or
cmp
cmp
test
cli
sbb
push
cmpsb
mov
jmp
popa
ret
stos
jne
adc
or
ficompl
test
ds
lea
lods
mov
pop
fidivl
stos
call
pop
in
data16
faddl
je
ret
dec
jge
push
cmp
pop
std
pop
imul
iret
arpl
xor
inc
in
xchg
mov
cld
dec
lahf
dec
imul
inc
aad
sbb
inc
pop
jle
or
push
cld
lret
lcall
pop
mov
insl
pop
xorl
test
and
jb
push
mov
int3
sub
jns
movl
aad
data16
and
mov
adc
pusha
push
pop
clc
xchg
jmp
mov
imul
movsl
mov
sbb
sub
mov
aad
movsb
popa
in
ret
out
or
sub
sbb
repnz
inc
fistps
push
push
push
ret
gs
in
in
in
jne
or
fisubl
int
into
mov
pop
xor
inc
sbb
popf
cmp
sub
lea
popf
loope
cmovne
out
out
out
sub
rorl
xor
cmp
rorl
cmp
sti
test
cmp
jg
dec
sahf
adc
movsb
sahf
addb
sub
sub
test
push
not
and
enter
stos
jl
inc
inc
adc
or
push
ss
insb
fs
jae
cs
dec
jb
pop
pop
sub
adc
cmp
pushf
lret
inc
shll
cmp
mov
sbbl
addr16
inc
aam
fcompl
cmp
sahf
fsubrl
add
leave
shl
push
inc
addr16
cmpl
cltd
pop
pusha
sbb
push
dec
ss
xchg
aaa
inc
cmp
jp
or
pop
sti
cmpsl
xchg
popa
cmp
out
outsb
jge
jns
test
xor
mov
jp
jo
ss
ja
add
ljmp
mov
int3
sbb
loope
popa
mov
aaa
and
xchg
int
cmp
sub
xor
sbb
mov
sbb
mov
iret
jge
mov
es
lock
adc
inc
sub
pop
cmp
lea
pop
jae
mov
sbbb
add
sub
dec
xchg
lea
icebp
fs
xor
hlt
or
xchg
sbb
mov
xor
leave
mov
mov
ja
sub
add
push
imul
jno
and
mov
in
ret
mov
jle
gs
xor
mov
out
outsl
push
and
cwtl
mov
outsb
aam
insb
xchg
sub
fsub
sbb
push
mov
add
arpl
dec
popa
mov
fimuls
int
icebp
sub
inc
pop
pop
push
pop
sub
sbb
shl
jnp
inc
cmpl
int
lods
xor
into
shr
fcmovnb
leave
mov
add
testb
xchg
mov
dec
jmp
test
sbb
mov
inc
or
mov
sbbl
add
testl
fisttpll
pop
jmp
inc
pop
scas
sub
cmp
mov
or
cmp
fs
es
arpl
rclb
xchg
xchg
or
fisttpl
jae
jb,pt
lods
mov
pop
mov
mov
je
cmpsl
jb
sbb
sbb
xorl
xor
test
mov
mov
out
add
or
jnp
fsubrl
lcall
push
xchg
mov
cmpsl
push
mov
dec
scas
cmp
pop
fnstsw
fsubl
and
add
aas
ja
pop
ja
mov
lret
hlt
sub
aaa
or
loope
jg
pop
sbb
xor
xor
xchg
pop
mov
addl
pusha
inc
inc
cli
clc
pop
movsl
and
orl
testl
addb
jnp
lret
adc
xlat
pop
pop
xorb
pop
arpl
das
inc
lods
sahf
leave
jno
iret
jecxz
push
rorl
dec
in
push
pop
mov
pop
xlat
mov
rclb
imul
in
inc
mov
xor
stos
push
mov
dec
push
mov
sub
jle
sbb
pop
sbb
push
sbbb
xchg
sub
inc
mov
repz
popf
test
or
pop
xor
movsb
jmp
cmpl
icebp
mov
aad
sbb
dec
scas
cmp
jle
int3
int
adc
pushf
shl
js
fs
sub
inc
fisttpl
jle
insb
sahf
outsl
sub
mull
fs
add
push
aaa
jmp
addr16
adc
cmc
addr16
das
pop
push
fists
mov
rclb
adc
cmpb
outsl
inc
std
push
pop
lahf
jnp
mov
sbb
js
sbb
fstp
add
scas
xor
cltd
repz
cli
sub
xchg
xchg
mov
test
cltd
push
insl
mov
fnstsw
outsb
addb
xchg
insl
and
mov
loopne
arpl
fcmovne
imul
dec
jo
sarb
popf
sti
movsb
fsubrl
jno
sub
insb
fidivl
jb
jge
fldcw
xchg
test
mov
inc
inc
dec
xor
dec
cmp
call
fwait
sub
jo
mov
xchg
jae
sub
les
lds
mov
add
loop
xchg
movsl
mov
mov
fnsave
lds
gs
dec
and
cld
push
push
stc
pop
mov
mov
out
repnz
dec
mov
add
xor
mov
push
push
adc
xor
sub
pusha
ret
out
lds
flds
pop
adc
add
mov
xchg
jne
bnd
leave
pop
fbstp
in
fnsave
mov
iret
or
xchg
js
dec
or
add
fimuls
jp
lahf
stc
or
lds
dec
xlat
inc
call
xchg
shl
push
mov
pop
out
mov
in
add
jmp
mov
lahf
je
ret
lcall
jbe
lock
adc
push
and
mov
push
stos
call
sub
mov
xchg
push
incb
mov
int3
call
pop
dec
sub
pop
aad
insl
daa
add
ret
add
cmpsb
in
das
push
push
insl
mov
leave
int3
mov
into
jo
fwait
imul
lods
and
jnp
or
outsl
dec
xor
test
xchg
imul
push
or
sub
add
sbb
aas
sub
addr16
imul
pop
pushf
pop
ret
jno
push
cmc
loopne
int3
loopne
lock
addr16
repnz
xor
xor
push
xor
int
aad
cmpsb
cmpsl
xchg
jl
push
repnz
sub
add
popa
shrl
mov
cwtl
adc
cmp
sub
xchg
mov
out
stc
adc
jae
aas
sub
jns
mov
pusha
nopl
filds
arpl
sarb
xchg
inc
xchg
add
loope
ja
std
iret
sub
popf
mov
inc
pop
out
out
in
inc
fs
mov
mov
std
mov
in
into
sub
imul
data16
dec
fs
insb
jbe
cmp
sub
jp
aad
clc
mov
dec
int3
outsb
fidivs
roll
das
cmp
or
push
push
add
or
pop
lock
out
movsl
xchg
inc
pop
std
adc
xchg
push
xchg
aas
aas
sub
jbe
jb
add
mov
out
xor
insb
ret
lods
call
xchg
or
mov
dec
and
mov
dec
jmp
xchg
xor
je
jnp
hlt
jp
mov
cwtl
out
mov
pop
mov
xor
jae
cmpsb
fsts
xchg
jne
pusha
jle
stos
fbstp
xor
push
lds
mov
test
sbb
loopne
mov
data16
mov
into
loope
sbb
pop
mov
jae,pt
shl
dec
jno
xchg
cs
cmp
test
jne
sti
push
cmpb
out
jb
push
jae
dec
cmp
ja
lock
cmpsl
mov
mov
mov
mov
or
lea
fucom
clc
inc
mov
jge
ret
pushf
jmp
mov
xor
push
xor
xchg
mov
cwtl
imul
repz
fs
push
cmp
dec
add
adc
gs
scas
xchg
mov
push
add
jnp
mov
in
cmp
xlat
movsb
mov
push
in
ret
inc
rorb
out
jo
mov
cmc
cmp
rcrl
pop
cmp
add
cmp
adc
adc
pop
pushf
pop
es
jnp
movups
popf
bound
dec
mov
jle
mov
data16
mov
cwtl
fwait
test
popa
sahf
test
movsb
or
dec
cmp
enter
and
xchg
cmpsb
mov
push
loope
fists
lret
repz
mov
cmp
push
mov
mov
shrb
or
rol
pop
cmpsb
push
test
test
push
pop
fisubs
xor
push
lret
jge
subl
loope
mov
xchg
cmp
mov
inc
outsb
ljmp
jge
xchg
fists
nop
xchg
sub
lcall
mov
mov
test
or
push
pop
enter
stc
inc
sub
cwtl
pop
shl
and
add
add
pop
mov
inc
adc
jo
testb
test
mov
cmp
rcrl
xor
and
fimuls
pushl
inc
cmp
push
in
out
pop
idiv
rcrb
inc
daa
jge
lds
push
in
pop
das
cwtl
jmp
push
jmp
stos
popa
loope
push
pusha
xor
jle
jecxz
movsl
out
and
js
clc
loop
dec
dec
adc
sub
sbb
adc
cs
jno
pop
shll
jg
arpl
and
scas
loop
add
imul
mov
push
ud1
ret
add
ljmp
fidivrs
scas
inc
adc
jns
iret
push
subl
movsb
cmp
adc
cmpsb
out
mov
cmpsb
in
dec
mov
data16
in
adc
sub
leave
test
push
jbe
cmp
sub
and
adc
push
mov
daa
pop
mov
in
or
dec
loopne
pop
mov
flds
add
add
push
je
xlat
jbe
int3
fsubs
mov
jns
xor
mov
cli
out
jp
imul
pop
fucomi
aam
mov
loop
fwait
outsl
pusha
jbe
scas
xchg
hlt
pushf
repz
roll
sub
lods
cli
icebp
push
sbb
arpl
int
xchg
test
out
out
repz
enter
push
fdivr
ja
pop
cmp
jle
mov
or
sbb
mov
cmp
fdivrp
jge
jo
jb
cmc
rorl
push
iret
or
inc
ja
xor
lods
into
daa
lahf
jne
pop
je
mov
lret
inc
arpl
stos
jns
cmpsl
xor
cmpsb
jbe
popf
mov
test
test
xchg
pushl
imul
data16
into
jle
or
stos
add
cmp
adc
movsb
out
xor
jnp
inc
addr16
mov
or
popf
add
pop
jo
adc
rcrl
insb
sub
xchg
mov
fs
sahf
aaa
inc
mov
insb
repz
push
aas
rclb
mov
mov
xlat
push
int3
or
lahf
lahf
cmp
dec
in
ret
xchg
xor
xchg
inc
cmp
cmp
cmc
sahf
ret
and
cld
lcall
loope
ror
mov
imul
sahf
adc
jecxz
jecxz
push
push
test
inc
lods
mov
sub
or
je
scas
dec
aam
mov
mov
push
pop
and
pop
mov
loop
movb
xchg
dec
push
pusha
ficoml
sbb
fisttpl
push
or
aaa
jno
sbb
rclb
fdivrs
mov
inc
mov
mov
icebp
lods
inc
je
shr
f2xm1
sbb
pop
jno
adc
repnz
inc
or
jl
inc
pop
pop
fld
cmp
cmc
in
mov
bound
stos
mov
push
fistl
cmp
sub
leave
inc
insl
lcall
mov
aas
gs
add
xor
sbbl
xor
sbbl
leave
mov
out
icebp
sbbb
int
sub
jge
sub
dec
jbe
dec
push
addl
mov
add
shll
call
sbb
fnstsw
adc
mov
adc
scas
stos
sarb
inc
jg
sbb
int3
push
xchg
mov
dec
or
xorl
roll
xchg
cwtl
test
fistpll
cld
inc
int
outsl
pop
xchg
gs
loopne
stc
loope
xchg
testl
test
cwtl
mov
sahf
aas
jb
clc
xlat
mov
mov
sbb
mov
xchg
test
mov
je
fnsave
daa
mov
popf
lea
dec
xor
into
push
mov
popa
and
mov
clc
mov
hlt
pop
inc
xor
cltd
cmc
sbb
xchg
mov
out
pushf
mov
fcompl
arpl
jbe
test
or
std
jg
jae
sbb
popa
push
dec
or
mov
jmp
std
mov
mov
test
xchg
jmp
cmp
cmc
inc
aad
mov
fistps
pop
in
xor
sahf
out
sub
scas
inc
mov
bound
dec
cli
xchg
movsb
stos
push
sub
jle
cmc
xor
test
push
or
jp
fdivrl
in
jg
shll
movsl
ret
bound
movsl
xchg
mov
imulb
fidivrl
jecxz
fcompl
icebp
xor
push
orb
bound
xchg
or
dec
stc
push
push
and
std
mov
mov
xor
push
mov
imul
push
fldt
sub
fs
out
push
je
jmp
adc
mov
daa
bnd
outsb
add
inc
cmp
lods
mov
movsb
jne
in
xor
xchg
cmpsb
insb
jg
pop
adc
push
inc
das
or
xchg
movb
popf
jecxz
aas
daa
stos
mov
call
rcrb
adc
cmp
mov
test
xor
cmp
cltd
ljmp
jp
sub
out
dec
xor
mov
jno
and
dec
dec
cmpsb
ret
dec
xchg
loop
sbb
call
mov
adc
inc
notb
scas
addr16
inc
into
cmpsl
ret
pop
sub
cmp
loopne
jbe
scas
popf
mov
dec
mov
sbb
xor
scas
ljmp
cwtl
sahf
ds
pop
bound
lcall
and
mov
and
das
push
fwait
dec
push
mov
call
stos
jl
mov
jle
jl
jb
enter
gs
cmp
adc
xor
int3
addr16
xchg
pop
pop
lret
mov
popa
adc
mov
iret
mov
ss
lods
lea
jge
or
push
dec
addr16
push
inc
lahf
cmc
sbb
pop
sahf
jnp
mov
shll
sub
xorl
out
shrl
std
dec
adc
cld
cmpsb
push
xor
inc
push
add
arpl
test
mov
xor
dec
mov
mov
shlb
mov
jne
mov
mov
lods
sub
inc
out
jmp
mov
lods
std
js
stos
aam
jle
and
movsb
lock
lea
jns
mov
pushf
dec
outsl
pop
sbb
fnstcw
fiaddl
popf
stc
mov
or
inc
das
or
push
stc
lock
insl
xchg
xchg
jmp
and
adcl
cmp
mov
mov
pop
xchg
xor
cmc
inc
test
je
mov
repnz
cld
mov
push
pop
xor
and
pusha
and
shlb
sub
inc
imul
stos
sbb
pushf
ret
shlb
xchg
loope
insb
or
jp
imul
arpl
xchg
shlb
or
insl
ficoml
or
lcall
decl
stos
fwait
jp
mov
inc
sbb
or
pusha
ds
sbb
inc
ret
jae
push
add
sbb
out
test
pop
popf
jle
jo
movsl
orl
int3
stos
loop
jb
xchg
push
xchg
cmp
lea
pop
pusha
lret
cmp
outsb
nop
das
or
das
add
mov
push
stos
or
jmp
xchg
jb
mov
popa
repnz
fcoms
call
mov
or
jg
shll
call
mov
mov
adc
sbb
hlt
mov
imul
pop
popa
inc
push
roll
mov
inc
nop
sahf
lret
add
pop
adc
sub
mov
repnz
mov
lea
iret
mov
sbb
daa
ror
mov
jle
mov
das
into
pminsw
out
fneni(8087
lea
hlt
rolb
pop
add
iret
fisubrs
jb
cmpl
icebp
div
addr16
push
dec
mov
jmp
cmpsl
add
xor
cwtl
cwtl
dec
in
push
cmp
cmc
in
jno
cli
dec
roll
jle
inc
cs
je
bound
or
cli
dec
push
mov
xor
stos
fldenv
and
jbe
js
sub
ljmp
dec
mov
in
add
test
mov
repnz
sbb
inc
xor
adc
loop
mov
fnstcw
cmp
or
cmp
shrb
gs
jae
mov
pop
repz
cmp
std
jbe
sbb
xlat
inc
jo
scas
mov
pop
add
push
sbb
sbbl
leave
out
sahf
mov
xor
das
xchg
idivb
shrl
repnz
sbb
xchg
imulb
mov
mov
lock
outsl
insb
inc
jb
dec
shrb
mov
pop
xchg
xchg
ljmp
jbe
pop
dec
fstl
shl
pop
and
pop
inc
lds
mov
mov
mov
in
rorb
jo
adc
cmpsb
or
lock
ror
jae
int3
xorl
sbb
jo
out
cld
jle
pop
xor
sub
inc
push
cmp
or
ret
repnz
loop
dec
inc
cli
xchg
sub
cmp
test
cmp
std
dec
sahf
fidivl
cmp
fwait
and
adc
jno
ficoms
cmpsb
call
cmc
lock
out
lods
sbb
and
call
outsb
daa
mov
scas
std
dec
pop
in
and
jmp
lahf
xchg
stos
jae
std
and
adc
mov
add
fwait
pop
push
movsl
shrl
push
test
lret
jmp
addl
dec
mov
outsl
lock
call
push
add
xor
xchg
mov
and
sahf
or
outsb
xchg
mov
jge
out
ljmp
jbe
lcall
or
in
in
add
fnstenv
mov
xchg
inc
imul
pop
dec
or
jge
and
and
xor
les
jns
imul
loopne
push
push
dec
push
push
and
jo
std
stos
xchg
test
jns
das
lock
push
lret
xor
cmp
das
fwait
push
lret
mov
in
fnstenv
shll
stc
cmp
rdtsc
mov
mov
dec
jbe
aad
loopne
xchg
push
push
inc
cmp
lock
mov
xchg
or
add
ss
aaa
loop
cmp
shlb
mov
push
sbb
cli
jns
int
xor
add
jnp
or
sti
mov
inc
mov
mov
adc
rcll
scas
jle
fcoms
jle
mov
xchg
jnp
push
sbb
sahf
sub
mov
clc
pop
mov
in
jle
pop
and
stos
in
mov
lret
rcrl
mov
nop
push
aas
mov
inc
mov
int3
aas
mov
or
push
in
cs
adc
cmpsb
sti
xor
clc
mov
roll
push
cwtl
stos
in
leave
and
subb
repnz
mov
int
rclb
mov
test
mov
out
inc
lds
repnz
loopne
jge
fmull
jmp
and
mov
mov
push
dec
push
push
xor
cmpsb
js
jb
cmpsl
and
popa
sub
pop
cli
pop
test
inc
xchg
mov
mov
jns
add
pop
pusha
clc
sub
rcrb
lret
xchg
testb
fldenv
push
repz
pusha
jmp
pop
in
lret
cmp
add
roll
js
imul
js
inc
jmp
adc
jmp
add
icebp
inc
sbb
rclb
pop
and
dec
loopne
xor
mov
int3
mov
das
xchg
mov
or
stc
scas
mov
enter
aaa
mov
or
shlb
clc
fs
adcb
pop
inc
inc
ds
jle
shlb
out
test
pop
or
mov
fsubrl
stc
adc
push
inc
mov
push
cltd
outsl
add
imul
xchg
push
sub
shl
lret
pop
mov
sub
scas
sbb
mov
xor
push
outsl
mov
jg
add
lods
sbb
or
aad
inc
or
stos
test
popa
add
cld
out
rcrl
sub
lret
jl
xor
fisubrs
jecxz
out
pop
shrb
scas
and
aam
cmp
xor
movsb
sub
xchg
outsl
sbb
fsts
aad
repz
sbb
fisttpl
in
cli
mov
jmp
icebp
xchg
mov
jle
push
mov
ret
xchg
dec
in
mov
mov
sti
insb
nop
das
mov
pusha
cld
andl
movsb
mov
sub
lahf
inc
test
in
jb
mov
or
cs
roll
js
xchg
loop
lock
out
push
mov
jo
pop
xchg
into
inc
stos
dec
xchg
mov
lahf
jns
repz
call
loope
add
jno
insl
push
inc
outsl
jne
cmpsl
loopne
mov
jmp
mov
add
push
out
cmp
add
dec
cwtl
jmp
arpl
and
clc
add
xchg
les
shlb
pop
mov
inc
int
add
out
testl
xor
mov
and
loopne
and
nop
push
sti
sarl
mov
sbb
dec
adc
test
call
adcl
xor
icebp
cwtl
push
jl
sub
mov
int3
ja
ds
shrb
cwtl
xchg
lods
push
movsb
mov
sbb
adc
add
push
mov
dec
in
or
pop
sub
and
je
mov
and
stos
pop
test
int
rorl
push
mov
lock
mov
pushf
les
inc
cmpl
xchg
dec
mov
jl
fwait
and
cmp
dec
enter
sbb
mov
sbb
xor
xchg
add
xchg
pusha
push
dec
fistl
xchg
sti
dec
xor
push
pop
inc
pop
push
adcl
in
jo
outsb
pop
jns
out
bound
dec
sarl
pop
xchg
xlat
sbb
and
sbb
inc
dec
and
lcall
xor
cli
jecxz
sti
push
fs
cmc
ds
sti
jl
sbb
push
in
xchg
setae
je
dec
sbb
cmp
lret
lret
cwtl
adc
ret
push
popa
dec
outsl
stc
or
mov
in
or
in
mov
dec
lret
cmp
adc
push
or
insl
mov
fcmovnu
xchg
dec
out
dec
test
pop
xchg
jne
popf
and
cmp
mov
out
xchg
ljmp
test
adc
outsl
dec
jne
shl
pop
cld
dec
sub
and
and
push
addr16
jle
pop
std
adcl
adc
rcrb
test
decb
loope
movsb
jns
push
mov
or
leave
mov
out
cwtl
jge
mov
pop
imulb
pminsw
cmp
insl
loope
and
and
fs
lcallw
adc
dec
and
out
dec
dec
jae
push
inc
shr
jmp
loope
popf
cwtl
test
xor
mov
loopne
mov
xchg
mov
add
ficomps
jo
mov
jae
imul
mov
and
adc
and
pop
sbb
test
sbb
pop
mov
repz
sub
int
push
mov
xor
ret
pop
fwait
aas
mov
jns
mov
movsb
add
and
dec
stos
in
aad
xchg
push
shlb
dec
dec
mov
mov
sbb
imul
jmp
inc
pushl
or
shll
into
jb
mov
ficompl
or
add
inc
sub
fistpll
popa
or
lods
pop
jnp
mov
arpl
sub
lods
std
test
cmp
out
and
push
insl
in
cmp
popa
popf
mov
or
insl
ss
sbb
jnp
stc
xor
test
int
push
call
push
test
mov
in
or
jp
je
sbb
jno
mov
mov
pop
jnp
and
hlt
and
dec
cmp
and
cmc
xchg
add
ficoms
push
fistpl
arpl
xchg
xchg
xchg
jne
jmp
clc
mov
cli
push
rep
ss
sti
rolb
shrl
cmp
adc
mov
adc
movsb
fcomps
sarb
mov
pop
fmuls
scas
add
sub
cmp
sub
rolb
mov
add
into
sbb
inc
xchg
push
cmpsb
xchg
cmpsl
outsl
sbb
gs
lcall
inc
jb
pusha
push
pop
aaa
mov
cmc
dec
push
leave
jnp
stos
enter
daa
div
fistpl
xchg
mov
ss
inc
lcall
xchg
pop
inc
shll
movsb
sub
fwait
insl
shr
test
lods
lcall
dec
hlt
jbe
in
add
cwtl
lret
push
test
cmpb
mov
andb
push
pop
adc
mov
in
sti
adcl
cmp
cli
sub
movsb
sti
mov
adc
lods
lahf
sahf
add
repz
in
lock
add
inc
mov
daa
filds
test
push
xor
lods
sbb
dec
mov
add
addb
add
clc
aaa
lods
hlt
enter
std
leave
adc
jbe
pop
ret
data16
loopne
adc
or
pop
test
fstpt
lret
ret
insl
sub
icebp
movsb
lock
cmpsl
in
xchg
mov
mov
lcall
and
ds
nop
mov
dec
dec
mov
inc
pop
test
popa
mov
cmpsb
mov
adc
mov
aas
cmc
mov
pop
cmc
cwtl
dec
movsb
and
mov
cld
or
mov
mov
add
dec
pusha
push
mov
add
pop
adc
cmp
int3
dec
icebp
pop
jne
mov
mov
repz
cmp
dec
mov
shl
repz
mov
sbb
jnp
mov
adc
pop
fcoml
mov
pop
xchg
sahf
sbb
push
test
fwait
jne
push
jbe
pminub
xchg
inc
push
or
cmpsl
push
loop
ror
test
cwtl
lret
fwait
fwait
add
pop
lods
jbe
data16
je
repz
jmp
push
xchg
sub
xchg
shl
mov
loop
mov
les
dec
negl
in
jne
sbb
sti
mov
pusha
out
pop
sbb
ja
es
or
inc
inc
jne
mov
or
fistl
xlat
cld
adcb
inc
add
cmp
sbb
add
mov
mov
cltd
insl
sahf
inc
les
out
shl
sub
lret
sbb
mov
je
popa
in
cmp
stos
sti
loop
mov
in
mov
movsl
mov
hlt
sub
inc
pop
xlat
pop
clc
jno
adc
in
mov
xchg
cmp
sbb
mov
lods
movsl
jl
popa
jge
sub
test
stos
fidivs
cmp
jnp
add
outsl
mov
inc
pop
or
repz
fsub
mov
scas
mov
outsb
pop
adc
dec
sub
out
bound
dec
popa
mov
adc
test
mov
ss
ljmp
dec
mov
lods
cmp
inc
cmpsl
add
mov
cmp
test
jne
dec
push
inc
fsubp
adc
push
movsb
ret
mov
cmp
dec
add
mov
mov
arpl
mov
dec
les
mov
mov
push
or
sub
jb
test
sbb
aas
jb
into
test
xor
cmp
pushf
fldt
imul
testl
dec
les
data16
inc
sub
test
pop
aam
lea
pop
adc
pop
orl
jge
pop
or
sbb
call
mov
fistps
push
lods
xor
mov
sbb
fldl2e
jl
je
out
mov
push
push
mov
mov
and
xchg
iret
data16
mov
test
clc
shlb
popf
and
orl
sub
cmp
aas
sub
mov
aas
mov
test
xor
jle
stos
mov
je
scas
jne
mov
adc
or
sub
push
sbb
or
icebp
pusha
loope
mov
sbb
and
mov
movsb
xor
cmp
mov
rorb
jp
jno
jno
into
ret
jbe
sub
incl
popa
pop
ret
arpl
push
popa
cltd
aas
inc
xorl
sub
sub
lods
add
or
lret
adc
iret
push
test
sbb
aaa
into
inc
pop
fcomip
loop
fstpt
in
adc
dec
aam
pop
jle
rcll
aam
inc
test
aam
inc
xchg
inc
in
test
lock
xor
mov
push
push
cmp
ljmp
cli
jle
icebp
nop
sarb
push
xchg
ret
inc
jmp
call
les
push
ds
dec
ffreep
or
xchg
nop
dec
lahf
js
inc
mov
adc
cli
cmp
pop
push
jmp
xchg
xor
stc
cld
bound
adc
fsubr
lcall
imul
xchg
rcrl
into
sbb
fstps
xchg
push
mov
and
mov
cmp
roll
popf
mov
cmp
and
pop
out
jl
or
cs
push
jnp
out
xchg
pop
insb
mov
faddl
ret
lcall
nop
xacquire
push
rcrl
pop
sahf
jbe
and
cmp
xchg
jo
fs
push
pushf
jbe
test
cmpsl
shll
negl
pop
cmp
fs
mov
add
or
aas
pusha
xchg
or
jp
xlat
stos
pop
adc
mov
fisubs
push
mov
rcrb
fstpl
icebp
mov
hlt
ret
mov
ds
loope
push
fiaddl
jbe
data16
shrb
fmuls
push
fiaddl
cwtl
push
popf
push
jle
aas
xchg
cmp
ret
mov
add
or
sub
hlt
mov
jb
fsubs
sub
out
xor
rorb
dec
fsts
jae
test
jg
pop
dec
cli
xor
pop
jg
fists
and
int
nop
xchg
repz
cmp
push
movsl
outsl
inc
out
sbb
sub
loope
and
mov
xchg
inc
cmp
dec
and
adcl
cmp
pshufw
in
pop
neg
addr16
hlt
mulb
inc
or
sbb
sub
mov
jae
pop
mov
add
jl
adc
dec
mov
jg
xor
int3
lret
stos
push
jle
jne
xchg
sub
sbb
sub
xchg
hlt
adc
push
pushf
xchg
hlt
imul
mov
cmp
dec
mov
xor
cs
bound
icebp
bound
in
icebp
push
out
cmc
xchg
cmp
add
das
jge
mov
cmpl
mov
aad
and
movups
cli
stos
xor
add
mov
lahf
pop
dec
push
mov
fimull
push
es
cmp
cmp
jnp
push
rclb
divb
dec
mov
stc
aad
aas
aad
jle
in
mov
lods
int3
mov
jnp
mov
pusha
xchg
mov
sbb
xor
pavgb
popf
insl
insl
dec
in
pusha
fcmovb
pop
aas
stc
push
xchg
lret
sbb
imul
popf
scas
sbb
es
push
es
or
arpl
push
mov
dec
adc
inc
mov
notl
mov
push
mov
cmpsl
dec
jmp
adc
inc
push
fcoml
xchg
cmp
pusha
mov
in
add
cs
sbb
mov
test
pop
mov
dec
xor
dec
sbb
adc
mov
ret
dec
xchg
xchg
out
ret
mov
jle
lcall
fildll
pop
pop
adc
xchg
rcrl
mov
insl
mov
jno
push
push
mov
mov
fiaddl
hlt
add
jge
test
sbb
and
jecxz
xchg
mov
js
or
mov
mov
in
lret
int3
mov
push
gs
in
push
insb
cmp
push
and
or
gs
mov
mov
add
scas
pop
cmc
popa
mov
sub
xchg
jne
int3
lods
push
push
cmpb
and
and
pop
xchg
lods
add
fsts
mov
jno
cmp
cs
addr16
or
stos
cli
pop
jae
push
xchg
aad
mov
pushf
mov
loopne
jns
in
mov
cltd
lahf
cmpsl
sub
cwtl
jl
outsb
lret
insl
sti
sub
mov
push
cmp
fstpt
and
cmp
sbb
cmp
cmp
adc
sbb
or
add
loopne
bound
sti
call
dec
lea
xor
pop
pop
sbb
xchg
push
push
int3
rclb
out
loope
popa
cmp
xchg
add
xchg
imul
jbe
jle
jg
push
push
ret
pop
xor
je
xchg
shrl
popa
xor
cld
sbb
outsb
pop
rcrl
sbb
xchg
pop
inc
and
lods
lods
int3
rorb
cltd
mov
adc
xor
out
int
push
push
lds
push
addl
mov
into
outsl
loope
pushf
mov
hlt
cmp
jo
int3
fnstsw
push
andl
push
cltd
adc
sti
push
push
pop
mov
sbb
lea
in
call
push
aas
test
mov
scas
ljmp
and
mov
adc
jns
stos
in
mov
scas
jmp
outsb
lods
lcall
outsb
push
adc
ds
in
jge
mov
mov
hlt
sar
sbb
and
push
mov
push
sub
or
jle
cmp
inc
pop
rorb
jno
push
xchg
in
xchg
popa
mov
xor
sbb
cmp
xor
or
push
sbb
mov
mov
dec
je
pusha
xchg
xor
enter
dec
jb
push
aas
pop
icebp
fsubl
inc
lock
int
push
pop
mov
pop
push
fimuls
and
js
add
mov
xchg
lods
pushf
push
cltd
push
ror
mov
idivl
sahf
fsubl
loopne
aas
xchg
xor
iret
jns
cwtl
cmp
arpl
aad
daa
loop
inc
dec
bound
imul
sub
lret
mov
xchg
and
rolb
outsl
mov
test
pop
jb
arpl
lock
sarl
ljmp
rolb
jl
out
incb
jmp
sub
test
lea
inc
dec
cmp
mov
aad
sti
pusha
xor
sahf
outsl
mov
jmp
add
leave
fidivl
mov
bound
add
push
hlt
adcb
das
outsb
cli
ds
sub
cmpsb
ljmp
fisubrs
inc
sub
pop
sub
add
push
pop
push
cmp
cmpsb
hlt
insb
pushl
mov
into
sbb
sub
test
push
xchg
lock
xor
out
test
xchg
xchg
xchg
cld
mov
mov
xchg
lahf
cmp
scas
outsb
inc
aas
sti
repz
rolb
add
stc
ret
int
xchg
sahf
ljmp
jmp
push
xor
nop
sbb
push
out
outsl
sbb
sbb
ficompl
leave
insl
xor
lods
mov
lods
in
mov
out
cli
mov
pushf
pop
and
jmp
fs
fstl
call
and
scas
negl
mov
pop
imul
scas
inc
jno
and
push
sub
test
xor
xor
fstl
sub
add
jnp
call
aaa
dec
test
cmp
fcomp
dec
cmp
imul
xchg
and
push
and
mov
and
jg
outsl
push
out
in
pop
xchg
mov
sbb
push
cmpsb
adc
ljmp
xchg
sbb
xchg
and
cmp
mov
jb
adc
pmulhuw
in
pop
sbb
movsl
aas
xchg
stos
push
insb
leave
mov
imul
adc
xchg
pop
jo
stos
hlt
sti
mov
pop
imul
mov
sbb
or
pop
std
xor
inc
mov
fimull
cmp
es
dec
jmp
jmp
lcall
cs
sarb
rcll
dec
repz
stos
pop
pop
addb
dec
lcall
pop
enter
call
dec
fsubrl
repz
add
ja
imul
stc
lahf
popf
ja
mov
xor
or
ret
sbb
rcr
ret
decl
xchg
lret
pop
cmp
aam
cmpsl
scas
lea
out
pop
sub
popf
mov
test
jo
add
and
pushf
mov
jmp
xor
leave
or
aam
xchg
jg
sbb
cli
pop
sbb
jne
fsubrs
and
mov
lea
lods
aas
popa
mov
sbb
leave
lret
and
fprem
leave
and
inc
adc
shl
fwait
adc
int
jecxz
scas
call
mov
dec
orb
cmp
out
and
int
rcll
jb
clc
popa
jb
dec
into
pusha
pop
adc
jno
int
icebp
movsl
movsb
push
mov
decl
mov
lcall
push
xor
adc
jge
test
mov
dec
daa
std
insl
push
popa
sarb
or
mov
mov
popf
sub
cmp
das
mov
lock
repz
inc
inc
shll
mov
ja
imul
xchg
jo
mov
jl
adc
arpl
int
clc
and
xor
inc
xchg
lret
les
xchg
das
adc
call
push
sbb
sub
jno
out
adc
mov
or
mov
stc
repnz
jg
rolb
lock
jl
roll
insb
mov
out
or
out
aam
xchg
fldenv
leave
push
repnz
lret
mov
adc
pop
pop
enter
adc
test
fs
push
sbb
fsubrp
jo
testb
in
fisubl
scas
add
xchg
pop
cmpsb
jbe
shlb
cwtl
fistpll
popa
mov
sahf
and
leave
jg
fadds
rcrb
popl
jge
loopne
push
outsb
mov
sbb
fwait
in
jne
xchg
and
jno
rcll
les
mov
pop
lcall
mov
test
mov
inc
pop
ljmp
push
cmp
jnp
jnp
fs
jge
cmpsl
jl
and
ret
push
ss
lahf
jl
jb
fistps
addb
xchg
div
pop
or
idivl
enter
lods
mov
fcoml
push
mov
pop
icebp
ljmp
es
mov
cltd
shrb
mov
xchg
or
outsl
mov
clc
nop
xchg
insl
add
xchg
outsl
fs
push
daa
clc
xrelease
lcall
push
nop
loope
call
call
cs
lods
or
pushf
stc
stc
xchg
nop
or
xchg
xor
or
cwtl
int
test
ds
cmp
sub
pop
sub
pushf
sub
popa
sub
inc
mov
popf
fsts
mov
nop
mov
xor
popf
xchg
mov
inc
lea
ficoml
mov
sub
lods
shrl
enter
mov
sbbb
adc
jmp
add
out
out
mov
fadds
ror
jl
add
sub
jmp
jecxz
or
mov
insb
lea
mov
in
stos
adc
ljmp
inc
and
cmc
in
lahf
lods
les
out
mov
push
notb
icebp
xlat
mov
notl
sbb
sub
fs
or
jg
and
clc
test
jo
fcmovne
dec
adc
test
mov
ja
dec
call
repz
insl
cmp
in
loop
cltd
mov
and
adc
cmp
add
adc
repnz
mov
jnp
cmp
lock
push
cmc
mov
test
popl
mov
mov
mov
ret
xchg
pop
cwtl
pmaddwd
xor
cmp
jmp
xlat
outsb
fisubrs
and
movsl
pushl
mov
adc
bnd
xor
dec
dec
or
mov
addl
inc
js
dec
je
shr
jb
dec
xchg
pop
sub
roll
arpl
imul
jno
pop
hlt
xchg
adc
aaa
popa
sbb
adc
cwtl
divl
into
lea
lcall
mov
cmp
testl
nop
pop
mov
pusha
ljmp
lea
push
addr16
mov
mov
idivl
fimuls
or
insl
enter
fnstenv
je
rcrb
adc
daa
aaa
jmp
shll
pop
fiaddl
mov
sbbb
cmp
jb
movsb
out
stos
mov
and
add
imul
pushf
xchg
xchg
xchg
fdivr
xor
sbb
stos
sti
mov
push
subl
cltd
repnz
push
scas
sub
mov
popf
xor
adc
inc
into
sbb
stos
sbb
inc
es
mov
int3
jb,pt
fs
lock
ds
lea
xchg
inc
dec
adc
rol
jae
sub
pop
fst
pop
sbb
pop
add
scas
xchg
mov
sub
les
ret
mov
data16
xor
hlt
insl
inc
out
idivb
sahf
lret
inc
andl
bound
shll
jb
adc
mov
jmp
adc
or
in
pop
jne
add
les
xor
adc
push
pop
mov
idivb
push
jne
stos
dec
pop
mov
jl
shrl
loope
cli
xchg
push
dec
cltd
arpl
call
hlt
test
xchg
icebp
lods
cmp
js
ja
mov
mov
mov
cmp
and
xchg
bound
arpl
add
mov
jl
push
xor
sub
fcoml
lcall
lret
cld
cmp
xor
dec
ret
dec
adc
notl
sub
mov
popa
fimuls
aas
scas
inc
cmp
cmp
sub
insb
and
mov
out
idivb
fnstcw
ret
dec
notl
loope,pn
or
cmpsb
test
xor
stos
fnstsw
and
sbb
and
shll
stc
or
mov
add
cmpsl
push
lods
aam
pop
cmp
push
leave
mov
pusha
cmp
dec
mov
lods
addr16
push
push
xor
pop
pop
jnp
adc
in
jl
pop
jp
push
pop
out
pop
or
mov
je
dec
clc
xchg
fisubl
or
shr
movsb
ret
shll
int3
xchg
pushf
ljmp
out
movsb
fsubrl
push
or
mov
push
das
mov
push
xor
xchg
and
or
mov
leave
cmp
dec
notb
dec
add
lock
sbb
dec
outsl
and
icebp
stc
shlb
int3
push
and
insl
mov
cwtl
sti
je
push
add
test
mov
cmc
repnz
sti
inc
mul
xchg
arpl
push
mov
call
inc
adc
mov
lea
push
in
sahf
pusha
imul
xchg
add
xor
popa
loope
ret
and
cmp
lahf
sub
push
popa
dec
adc
scas
imul
adc
sub
sbb
pushf
xchg
cs
sbb
cmc
icebp
scas
sbb
dec
mov
insw
scas
or
fisttps
jnp
jmp
mov
lea
mov
lock
pop
and
mov
xlat
ret
stos
das
inc
insb
in
cmc
nop
imul
xor
data16
test
jecxz
into
inc
cmpsb
jl
add
fstps
int
hlt
rcrl
xor
push
sahf
jle
je
push
push
fwait
sub
pop
imul
adc
push
popf
xchg
fimull
pusha
push
push
out
inc
mov
inc
mov
cld
jecxz
push
divb
mov
add
mov
dec
lcall
imul
mov
sub
dec
mov
mov
maxps
es
shll
scas
xchg
fsubr
jecxz
push
push
out
roll
lret
dec
ljmp
outsl
cmpsb
sub
mov
xchg
pop
mov
adc
jno
imul
cld
push
cmpsb
push
sbb
cmp
sub
loopne
lods
pop
fs
xchg
fsubs
aam
insb
or
out
xchg
stos
push
or
dec
adc
sbbl
dec
aam
clc
add
and
js
fsubs
mov
and
ss
jb
adc
orl
lahf
pop
inc
cs
in
fistpl
adc
and
dec
addb
inc
mov
jae
aam
icebp
pushf
icebp
sbb
mov
daa
cmp
je
xchg
push
inc
and
leave
fiadds
dec
cmp
fldt
call
lret
xchg
out
and
sbb
incl
cltd
mov
std
int3
in
ds
mov
outsb
cmp
mov
jae
push
push
repz
loopne
fchs
dec
sub
jle
push
sti
mov
fcomi
fisubs
xlat
sbb
jge
mov
sbb
andb
in
hlt
push
mov
adc
loope
and
adc
jno
int
mov
lcall
cmpsl
and
out
ss
lods
push
xor
imul
xchg
mov
jle
mov
out
xchg
test
pop
call
js
into
fldcw
add
aad
out
jnp
and
stc
idivb
hlt
pop
mov
and
xchg
fdivr
movsl
addr16
icebp
mov
cmp
add
jb
ficompl
lods
mov
mov
stc
inc
and
rolb
cld
movsl
xchg
or
push
int3
inc
pop
push
push
test
cmp
dec
lret
push
push
xor
xor
je
dec
das
sbb
popa
add
popa
stos
mov
pop
js
sbb
iret
xchg
inc
scas
sbb
pop
jbe
sahf
int3
mov
adc
or
or
testl
inc
sbb
idivb
push
xor
sbb
insb
xchg
imul
mov
addr16
lahf
fisubrl
rorl
and
pop
jge
inc
lret
sub
fwait
arpl
js
pop
movsl
add
adc
testl
mov
les
call
sahf
xor
cld
data16
push
jmp
xor
cmp
add
les
fistpl
jle
sub
loopne
sarl
sbbb
loopne
and
jge
jp
out
push
push
daa
pop
or
movsb
in
insb
dec
and
adc
adc
jnp
push
lea
sbb
push
imul
shlb
pushf
push
sub
jle
adc
sahf
fwait
fwait
test
cwtl
xchg
dec
out
push
lock
lret
lfs
nop
dec
sbb
mov
movsb
jl
mov
pop
sbb
xor
ljmp
hlt
stc
and
sub
lcall
inc
mov
mov
jnp
mov
in
pop
hlt
insb
jecxz
and
in
lret
adc
xchg
int3
mov
mov
pop
xchg
mov
daa
dec
cld
dec
mov
or
dec
add
push
xlat
mov
pop
push
cmp
mov
arpl
sub
mov
pop
jl
lock
lea
js
dec
fists
lahf
xchg
loop
aaa
ret
or
and
aam
cwtl
jmp
add
fists
add
pop
cmp
faddl
rcr
and
arpl
bound
jno
push
mov
out
cld
test
rclb
push
mov
fcoml
sahf
inc
iret
insb
adc
pop
sbb
cmp
test
mov
ss
addr16
xchg
pop
movsb
mov
adc
scas
arpl
sbb
stos
inc
jbe
xorl
icebp
lock
jge
int3
pop
cwtl
dec
adc
sub
sarl
sahf
incl
popa
jecxz
push
lret
call
sbb
cmc
pop
pusha
test
push
xor
cmp
sub
pusha
test
xchg
pusha
pop
cmp
loope
stc
and
pop
test
add
adc
out
scas
push
add
sbb
jbe
ret
incl
jno
mov
cmpsb
subl
out
pop
cmp
stos
xchg
xor
call
repz
pop
mov
in
lods
popf
sti
pop
lahf
lcall
adcl
in
mov
and
cmpb
and
and
inc
add
stc
movl
mov
xchg
dec
jmp
and
ret
add
add
shufps
fcmovnu
xor
mov
mov
dec
std
std
movsl
xchg
gs
fsubrl
bound
hlt
add
push
js
jo
insb
out
mov
push
mov
inc
sbb
cs
loop
iret
mov
and
mov
call
adc
les
lret
sub
fdivrp
insl
jno
push
jle
push
mov
mov
arpl
std
cmpsb
out
sbb
aam
imull
cmpsb
icebp
xchg
loop
xor
push
shrl
xor
int3
out
and
in
stos
add
ja
jae
repnz
les
jmp
dec
jmp
inc
sbb
mov
fdivrs
jg
cmpsl
iret
mov
mov
jns
pop
mov
test
fcoms
shll
mov
mov
mov
les
ror
es
or
mov
fwait
pop
movsl
fidivl
pop
cld
fmul
iret
push
scas
rcrl
mov
loope
lahf
jne
pop
mov
pop
xchg
or
or
adc
in
sbb
pusha
lds
pop
jge
je
cmc
addr16
call
pop
lcall
test
dec
mov
adc
loopne
dec
adc
in
test
std
popl
insl
push
xchg
adc
mov
xchg
sti
test
sbb
jecxz
in
push
cmp
aam
mov
in
xchg
insb
cmp
push
iret
cmp
mov
pop
out
add
mov
xorl
mov
sbb
jbe
push
mov
adc
nop
es
push
dec
inc
fdivrl
int3
xchg
paddb
pop
iret
clc
jp
repnz
dec
cmpsl
mov
pcmpeqb
add
in
movsb
lret
xchg
jbe
sbb
in
ret
in
dec
push
scas
adc
nopl
dec
add
gs
lea
cmp
mov
imul
xchg
bound
sub
vorps
sub
pop
lahf
dec
lea
nop
add
mov
mov
inc
push
cli
xor
cmp
int3
mov
mov
out
jge
ret
jp
nop
pop
mov
add
adcl
jb
dec
mov
ret
adc
dec
xor
sti
pop
adc
push
sbb
mov
ljmp
xor
mov
es
cli
or
aam
in
pop
sti
xor
mov
sarb
test
add
xchg
adc
lods
fimuls
aas
push
add
arpl
lock
enter
cs
cmp
daa
fcom
mov
insl
stos
pop
loopne
jbe
idivl
popa
push
cltd
out
cltd
into
cmp
or
xchg
sub
js
out
andl
icebp
iret
or
nop
cs
xorb
mov
imul
shll
xchg
push
mov
cmp
cmp
lahf
dec
sbb
push
shrl
inc
lock
xchg
test
ret
aad
pop
daa
jmp
shll
dec
add
mov
loope
mov
insb
sbb
insb
mov
cmp
cmp
mov
mov
ds
hlt
cmp
xchg
lret
pop
sbb
sub
std
aaa
repz
jb
jp
sbb
aaa
sub
mov
mov
sub
sahf
inc
shl
adc
imul
aad
pop
std
jno
jbe
inc
or
shrb
outsb
mov
enter
lea
mov
or
bound
mov
lret
push
loop
sbb
jb
push
xor
and
cmp
pop
movsb
xchg
pusha
in
xchg
or
cld
int
mov
push
inc
mov
ds
jmp
sbbb
inc
int3
jo
pop
stos
cmpsl
aas
mov
jmp
lods
mov
insl
xorl
fs
cmpsl
mov
in
dec
cmpsb
jbe
test
out
sub
mov
ss
jb
testb
cmp
pusha
xor
mov
rorl
and
adc
repz
pusha
mov
ljmp
inc
fdivl
int3
mov
push
mov
nop
jo
rcl
and
pop
mov
mov
lcall
data16
mov
mov
xor
sbb
jno
fcom
lods
popf
xchg
mov
bnd
subb
push
out
dec
rorb
into
leave
mov
stc
adc
shll
repz
dec
adc
stos
push
sub
mov
mov
loope
pushf
xchg
push
inc
into
inc
xor
mov
dec
iret
xchg
fs
outsb
out
dec
cmp
in
mov
out
std
or
mov
cmpb
scas
stc
mov
jmp
sbb
movsl
fsubr
sub
inc
loope
pop
fldenv
pop
xchg
cmp
or
push
lods
pop
and
arpl
mov
cmpsb
hlt
lret
adc
sub
mov
or
in
mov
xorb
xchg
push
int3
popa
hlt
push
loope
jbe
mov
cmp
push
and
add
insl
inc
fstpl
stc
cmc
push
cmpsb
jl
out
inc
inc
cmp
insb
fwait
mov
pop
sbbb
out
xor
mov
xchg
inc
inc
loopne
jp
jl
sub
mov
fwait
test
imul
push
lahf
inc
jge
mov
adc
mov
pop
adc
shrl
push
push
mov
aad
iret
mov
mov
sbb
push
insl
sub
jae
aam
xchg
jo
lods
jg
push
pushf
mov
jnp
cli
cs
sbb
test
orb
push
sbb
add
sbb
push
or
sub
jle
mov
fists
enter
arpl
sbb
xchg
aaa
and
mov
or
mov
ret
dec
adc
add
andl
testb
and
sbb
cld
lock
inc
fildll
daa
sub
cmp
mov
dec
call
test
fdivrl
jnp
test
bound
jae
mov
out
mov
jge
push
mov
fs
xchg
dec
jmp
cwtl
loopne
jbe
dec
stc
jmp
arpl
sbb
jle
lcall
comisd
bound
cmp
test
push
ror
cmp
mov
or
jl
jno
nop
and
lds
mov
xor
add
xor
scas
test
cmpsl
mov
inc
mov
std
aas
ljmp
test
aad
loopne
xchg
pop
test
or
adc
dec
and
jecxz
mov
and
sub
pop
cmp
decl
or
bound
pop
or
loopne
testl
push
dec
cmp
mov
dec
popa
mov
adc
bnd
sbbb
test
leave
jl
jb
push
add
push
scas
and
outsl
dec
cld
jns
and
ficompl
outsl
fcompl
sub
mov
jnp
mov
cs
ljmp
cmpsb
push
adc
sub
xchg
mov
pop
mov
jns
dec
in
sbb
inc
dec
scas
dec
mov
push
loop
orb
mov
dec
xchg
push
push
dec
movsb
jle
cmp
mov
jne
sub
stos
jp
jne
sbb
xchg
add
or
dec
pop
adc
xor
cli
stos
jb
and
popf
arpl
ret
add
add
push
and
jp
dec
push
and
popa
push
pop
or
xchg
addr16
ret
dec
je
arpl
rorl
sub
lahf
add
out
lret
lcall
shlb
aas
cltd
js
addps
xor
subl
dec
push
fucomi
gs
dec
or
int
jbe
dec
xor
cmp
les
adc
pop
arpl
jecxz
push
lcall
sti
dec
or
sbb
ret
out
add
leave
dec
sbb
js
orb
popa
cmpsb
and
enter
fadd
shlb
mov
cmp
insl
jb
in
sbb
sahf
fdivrl
popa
mov
inc
addr16
int
aaa
inc
insl
mov
mov
dec
iret
adc
fiadds
or
jl
pop
in
mov
mov
sti
add
and
and
sbb
cmpsl
or
adc
loope
cmp
mov
rcrb
mov
cmp
std
inc
ja
js
addl
add
xchg
mov
js
inc
lahf
xlat
frstor
pop
add
and
mov
loope
xchg
lods
loop
pop
dec
sbb
jmp
cmp
fcompl
into
fcoms
les
int3
outsb
aad
add
jg
lds
jp
lods
xor
dec
hlt
pop
fsts
stos
sub
adc
or
and
fcmovb
mov
out
outsb
inc
mov
aam
jp
and
add
lcall
jno
rcrl
inc
xchg
xor
mov
bound
jmp
sbb
stc
fdivl
aaa
jb
pop
in
mov
or
xor
sub
add
je
pop
add
jecxz
sub
mov
pushf
in
xor
das
test
out
pop
push
mov
sti
xchg
imul
and
stos
lods
mov
test
pop
xor
mov
subps
sahf
mov
xlat
enter
gs
adc
mov
mov
cmp
inc
dec
cmc
cmp
mov
jmp
mov
das
sbb
add
bound
enter
pop
imul
sbb
insb
and
clc
push
jo
xchg
popf
and
add
or
in
jnp
add
loop
hlt
add
xchg
das
mov
xchg
rcrb
ret
jo
xchg
movsb
or
adc
inc
inc
or
lock
pop
adc
mov
mov
dec
dec
pushf
cld
cmp
sbb
jb
dec
cwtl
lods
inc
fsubs
jle
mov
in
gs
xchg
nop
mov
or
daa
sbb
jg
je
mov
inc
sbb
ret
int
mov
loopne
inc
jl
or
sahf
push
push
sbb
jecxz
imul
add
and
jnp
push
pop
jmp
outsb
ljmp
add
icebp
mov
sub
inc
icebp
in
sbb
dec
hlt
je
xchg
and
mov
sbb
test
add
aaa
cmp
cmp
das
sti
adc
cwtl
fildl
mov
and
cltd
je
lret
stos
stc
pushf
loope
jne
cmpsb
inc
pop
mov
jbe
scas
loope
adc
add
add
push
movsb
mov
adc
ja
mov
notl
mov
inc
inc
mov
push
or
mov
jo
mov
or
mov
and
dec
ret
xchg
sahf
push
data16
clc
sti
sahf
xor
cltd
cmpsb
pop
aam
scas
jnp
outsb
jge
inc
lods
int3
dec
repz
xorl
or
mov
outsl
inc
jns
xchg
dec
and
sub
inc
fmulp
xor
out
or
rcl
jmp
imul
jmp
adcl
add
imulb
frstor
jbe
stos
testb
fnstcw
mov
mov
adc
sub
shlb
ret
dec
cld
sub
add
and
test
aaa
xchg
pop
fucomip
jmp
inc
pop
lcall
lret
scas
bndstx
xor
adc
add
inc
leave
xchg
mov
je
push
and
and
imul
sahf
or
push
popa
mov
sbb
xchg
dec
cmpsb
push
roll
jbe
lock
scas
cld
rcll
lods
ror
mov
xchg
test
xchg
push
mov
cmp
sbb
and
sbb
jle
ret
sub
mov
leave
fcmovnb
add
dec
cltd
dec
mov
shl
popa
test
negb
lea
fucomip
push
pop
adc
ss
pop
or
push
inc
mov
data16
out
mov
testb
mov
xchg
push
jne
mov
mov
data16
push
out
imul
or
repz
mov
mov
in
lret
adc
mov
fwait
inc
jp
mov
xor
cmp
xor
add
pop
cmpsb
call
cmp
leave
fcmovne
ljmp
icebp
mov
xor
cmp
icebp
fldl
clc
test
push
cmpsl
xchg
stos
and
xchg
shll
mov
notb
cs
cmpb
cmp
aaa
add
jb
mov
sub
jl
inc
push
jp
imul
aas
pushf
arpl
adc
xchg
adc
aad
add
addl
enter
testb
inc
xor
in
fildl
aaa
push
mov
jecxz
pop
adc
inc
adcl
dec
call
ficomps
inc
or
adc
icebp
pop
adc
leave
inc
sub
loop
stc
pop
mov
and
inc
jo
xor
ret
pop
inc
test
pop
leave
xor
imul
out
lds
push
mov
adc
mov
pop
mov
hlt
pusha
jno
test
inc
sub
jno
or
out
adc
mov
cs
pop
sti
mov
enter
xchg
cmp
or
dec
fldenv
fistpll
pop
fdivl
cmp
mov
push
sti
add
movsl
sbb
mov
clc
push
fistpl
mov
push
adc
or
lds
cltd
hlt
inc
rorl
pop
ds
push
test
filds
js
inc
test
lods
push
orl
xchg
pop
mov
andb
inc
xchg
out
inc
movsl
cmpsb
xchg
repnz
clc
gs
mov
lcall
sub
and
enter
push
and
or
mov
cmpsl
pusha
cs
cmp
cmc
xchg
outsb
adc
sbb
idivl
cmp
push
insb
jg
test
movsb
xlat
lds
loopne
or
pop
shlb
in
into
stos
arpl
aaa
xchg
jno
mov
or
jae
cwtl
fdivrp
cmpsb
dec
imul
cmp
shrb
pusha
sbb
in
sbb
adc
xor
lds
movsb
jnp
shll
mov
aad
mov
fwait
shl
mov
pop
xchg
push
adc
push
and
inc
xorl
or
aad
sub
int
shl
jae
aas
daa
sbb
addr16
aas
ss
and
adc
clc
out
jo
mov
imull
push
or
xchg
fwait
repnz
or
push
pop
fdivl
push
lret
sbb
mov
jge
popf
test
adc
stc
add
fmull
mov
and
add
jge
mov
sbb
lock
cmp
in
js
mov
insl
fistpl
add
test
cmp
sub
fxsave
cwtl
int3
in
push
jle
mov
js
jge
pushf
leave
add
jmp
xchg
sub
lahf
pushf
mov
outsl
test
test
lods
dec
jg
lods
push
adc
mov
dec
rcrb
jl
imul
pop
pop
jecxz
xchg
sub
nop
aam
jecxz
mov
ret
add
ja
rolb
jne
lods
inc
sbb
pop
inc
push
adc
mov
lahf
jecxz
jae
enter
or
int3
inc
popf
cmp
pusha
dec
mov
jmp
bswap
fwait
nop
push
out
mov
icebp
and
dec
pop
pop
aad
push
xor
shl
xor
std
cmp
xlat
jmp
adc
cli
arpl
roll
jbe
xchg
pop
sub
es
push
lret
xchg
imul
mov
fsts
jb
fstpl
inc
xor
inc
xchg
pop
loopne
pop
mov
mov
clc
and
mov
aas
push
xchg
addr16
mov
jp
cwtl
dec
or
adc
adc
stos
cmpsb
jbe
shrb
imul
mov
test
push
xchg
ret
das
dec
dec
outsb
jb
lret
mov
jnp
fidivrl
inc
sub
jne
js
out
dec
cmp
jecxz
andl
fmul
lods
or
ret
add
std
in
ficomps
push
cmc
mov
test
cmp
gs
jae
or
sub
adc
daa
inc
out
pop
inc
subl
ss
lahf
xchg
or
imul
push
or
push
lea
mov
xabort
push
arpl
mov
and
sub
lahf
es
sub
jbe
dec
pop
cmp
fdivs
mov
test
xlat
popa
mov
enter
sbb
enter
push
fadds
fwait
xor
pop
push
sub
rorb
scas
frstor
cmp
fdivr
mov
loop
scas
jnp
stc
gs
imul
cmp
nop
in
adcl
push
rcll
mov
js
insb
jmp
shrb
addr16
jge
rcll
fsts
xchg
aas
inc
inc
add
jmp
add
imul
mov
scas
pop
in
adc
test
mov
fstps
loopne
pop
sub
rol
sub
daa
je
lret
pop
sub
or
cmpsl
out
xchg
xchg
mov
lret
mov
pop
int
aam
mov
cmp
mov
cmp
mov
mov
sbb
je
scas
in
inc
push
in
shlb
add
pop
mov
pop
or
scas
add
cmp
inc
scas
xor
fsubl
bound
sbb
sub
lock
lcall
mov
scas
into
xchg
push
scas
mov
jle
sub
push
mov
jg
movsb
sub
popa
add
pushf
mov
mov
outsl
inc
jg
add
jmp
push
aas
dec
jbe
lods
lcall
aaa
and
dec
inc
jo
in
cltd
negl
and
fidivrs
out
sub
or
call
sbb
sahf
out
jnp
push
cmp
cmp
call
push
mov
or
mov
mov
mov
shl
push
jge
adc
or
and
mov
inc
dec
xchg
and
pushf
ds
insl
xor
push
insb
imul
pop
shufps
frstor
dec
mov
daa
stos
jne
mov
ljmp
les
sub
je
mov
add
in
pop
rorb
xlat
cmpsb
dec
cmp
lea
push
xchg
pop
mov
pop
sbb
lret
fcomps
in
push
mov
mov
mov
jb
sarl
mov
mov
sbb
fnstenv
movsb
push
insb
cld
shrl
test
icebp
mov
movsl
fimuls
xlat
xchg
push
ljmp
jnp
xor
lea
jp
dec
push
cmp
in
jne
sub
into
xor
movsb
dec
rcll
mov
mov
and
mov
jnp
dec
cmp
addr16
sub
mov
sub
outsl
push
gs
outsb
adc
pop
pop
fwait
dec
push
test
adc
xor
add
outsl
das
mov
aas
push
pop
inc
out
inc
push
sbb
fwait
pop
gs
arpl
mov
int
aaa
cs
adc
mov
scas
divl
int3
int3
flds
sub
cmp
rcr
pop
mov
jae
and
ljmp
outsb
xchg
mov
mov
cmpsb
cmp
cmp
negb
ja
repnz
bound
xchg
pop
in
cwtl
ja
pop
ss
lret
mov
int
movsb
dec
push
std
sbb
lods
mov
jno
dec
and
shrb
cmp
ficoms
fcmovnu
pop
sbb
mov
mov
jle
mov
ret
repz
in
inc
push
mov
cmpsl
out
jno
imul
push
sub
movsb
jmp
sub
mov
or
movsl
jge
mov
lcall
push
sub
mov
lods
push
js
or
ljmp
pusha
stos
mov
insl
popf
mov
dec
les
lret
pop
in
dec
inc
stos
adc
push
ds
imul
test
icebp
jne
push
insl
insl
mov
pop
call
ds
cmpsl
lods
push
xchg
inc
notl
xchg
out
dec
push
mov
sarl
out
mov
lods
and
roll
push
daa
loop
test
popl
mov
out
cmp
xchg
xchg
xchg
out
inc
adcl
mov
sar
pop
faddl
jae
mov
fbld
xor
insl
sbb
sahf
imul
pop
in
out
scas
das
popa
fbld
inc
ficomps
add
xchg
sbb
pop
push
ja
jbe
push
jnp
mov
ret
leave
iret
or
xor
mov
mov
xor
jne
adc
jmp
pop
lret
std
xor
in
xor
cmc
testb
test
pop
int3
mov
inc
mov
nop
mov
sbb
xor
or
or
adcl
jb
imul
fstpt
dec
adc
fs
sub
mov
loop
jp
sbb
mov
test
mov
sti
inc
orb
imul
scas
cmp
lods
inc
das
out
cmp
sarb
add
insb
iret
pop
mov
outsb
imul
ret
rdtsc
test
imull
xchg
push
push
push
sbb
mov
inc
mov
xor
iret
cmp
sub
pop
sub
xor
jne
mov
cmpsl
clc
call
mov
sub
inc
dec
test
mov
and
cmpsb
fcmovnbe
xlat
pop
inc
mov
mov
sbb
lret
pop
fistps
xchg
inc
sub
push
imul
lahf
sub
je
push
lock
in
inc
mov
pop
jp
adc
adc
cmc
out
xchg
rol
push
xor
push
je
add
pop
pop
mov
sbb
es
and
out
iret
sub
xchg
pop
lods
je
mov
sub
adc
mov
mov
and
cmp
pop
mov
sub
rorl
mov
and
pop
test
imul
cmpsl
sbb
lahf
adc
movsl
jae
dec
add
add
leave
ss
into
into
pop
ljmp
mov
jns
xor
stos
mov
outsl
cmp
and
xor
sub
insb
fnstsw
in
out
cmpl
xchg
outsl
in
cmp
repnz
popf
jmp
rorl
cmpsl
xor
mov
mov
int
dec
or
jno
xchg
add
and
push
dec
out
js
inc
add
mov
pushf
clc
cli
mov
mov
dec
mov
setnp
sbb
das
ret
adc
cli
dec
jge
mov
cmp
lahf
out
data16
cltd
addr16
jmp
in
jle
and
movsb
mov
pop
out
and
dec
decl
push
mov
icebp
lcall
nop
and
pop
js
inc
aad
loopne
enter
mov
adc
int3
mov
aas
in
cli
aad
inc
es
lcall
push
fbstp
xchg
jmp
and
bound
aam
mov
jb
jo
jg
shr
fwait
xor
in
movaps
cmpsb
add
in
or
outsl
push
and
pushf
loopne
sub
xchg
sub
and
scas
gs
xchg
les
icebp
pop
xchg
xor
dec
loopne
in
aam
imul
cmp
lret
cmc
ret
or
jne
sahf
in
add
inc
mov
roll
dec
mov
das
js
add
cmpsl
or
adc
aam
fadd
inc
add
or
xor
dec
mov
push
pop
mov
xor
insb
cmp
lods
bound
fdivrs
inc
mov
in
popa
testb
imul
jne
ret
fwait
and
mov
mov
mov
push
add
in
clc
xor
and
pop
iret
dec
aam
cltd
xchg
push
sbb
js
and
xor
cmp
sarb
xor
inc
movsl
and
mov
adc
insw
mov
adc
in
xchg
imul
sbb
dec
add
cmpsl
sbb
das
std
ret
mov
or
stc
jmp
and
ret
imul
int
or
push
mov
fadd
xor
clc
fldenv
adc
jns
cwtl
dec
jae
in
aaa
fsubr
jg
rcrl
adc
xor
cmc
push
in
int3
xor
inc
in
sub
fstl
mov
mov
les
sbb
push
les
idivb
adc
jb
imul
lret
int3
sub
mov
pop
fistpll
out
pop
repnz
mov
sub
lcallw
mov
orb
dec
aas
cmp
or
mov
outsb
pop
push
fsubrl
sarb
ret
sub
mov
inc
jne
sbb
dec
xchg
test
not
and
push
mov
inc
mov
mov
rclb
adc
rolb
dec
shlb
adc
idivl
cmc
cmp
mov
adc
pop
mov
xchg
ret
adc
mov
cld
repz
add
mov
icebp
shrl
dec
fnstcw
into
pop
and
loopne
jae
aam
xchg
inc
dec
js
xchg
and
loopne
cli
adc
inc
int
outsl
shrl
mov
test
push
aas
popa
lods
or
ret
mov
movsb
test
pop
inc
rcrb
pop
mov
jno
mov
pop
jmp
in
shll
sbb
cmp
pop
lcallw
adc
inc
pusha
fwait
and
sbb
sub
fisubl
push
lods
pop
movsb
sbb
and
fcmovne
ja
push
cmpsl
stos
aas
dec
loop
sbb
into
and
dec
xchg
dec
pop
movsl
loope
sbb
adc
iret
adc
fiadds
iret
imul
jnp
jmp
inc
adcl
and
negl
mov
inc
pop
mov
aas
fldt
repz
add
lds
ljmp
mov
jg
or
arpl
mov
mov
lds
leave
aad
jbe
pop
pop
sbb
jnp
mov
push
mov
pushf
mov
mov
xchg
pop
pop
push
jg
xchg
add
dec
mov
sub
pop
and
cmc
ljmp
addr16
arpl
jmp
mov
ja
lods
mov
pushf
scas
sbbl
push
push
fistpl
adc
lock
lret
xchg
mov
sbb
adc
inc
mov
aas
nop
out
sbb
sti
in
cld
iret
and
add
cmp
xchg
sub
sti
cwtl
ret
mov
and
stos
daa
imul
xor
and
adc
jecxz
ljmp
jbe
leave
mov
sti
cmpl
sub
popf
inc
xlat
mov
pop
mov
cmpsl
inc
mov
mov
dec
pop
add
mov
jno
and
mov
cld
fsts
loope
roll
sub
mov
sub
enter
cmp
jmp
cmc
adc
clc
xchg
in
xchg
in
inc
jo
cmc
out
stos
cmpsb
andb
pop
adc
lock
pop
mov
xor
push
and
and
xor
mov
cmp
push
sub
adc
mov
push
in
and
xlat
arpl
jmp
fmuls
inc
sbb
adc
fisubs
pop
jmp
aad
lock
aam
push
mov
and
pop
inc
dec
mov
loopne
push
push
aam
sub
pop
xchg
cwtl
pop
sub
push
inc
xsha1
cmpsb
or
pop
std
stos
mov
mov
sub
adc
shlb
stc
inc
loopne
stc
mov
xor
and
mov
shrl
mov
pop
stos
mov
sar
push
pop
jae
in
call
cmp
lret
shr
pop
sub
rcr
sbb
insb
lods
xlat
dec
mov
rol
pop
int3
inc
dec
cmp
adc
into
dec
xchg
repnz
imul
sti
xor
in
adc
mov
imul
or
mov
xor
inc
clc
mov
fdivrl
push
sub
int
lods
cmp
jae
cld
in
ja
xchg
jl
int
mov
mov
inc
lock
sahf
mov
imul
xor
push
fcomps
clc
and
cmp
jle
stos
push
fisubrs
sub
cmp
mov
adc
mov
lock
add
stos
add
and
inc
and
xchg
loopne
push
inc
std
fsubrp
or
and
mov
jb
fstpl
push
and
pmaxub
sbb
jne
sahf
sbb
xor
cmp
lods
sete
andl
jne
out
pop
mov
das
mov
sbb
ficompl
adc
call
jo
cmpsl
push
and
repz
xchg
pop
xor
cwtl
mov
dec
mov
loop
mov
dec
mov
dec
adc
out
out
sbb
es
nop
loop
inc
out
clc
adc
mov
ret
lods
jl
cmp
sub
mov
xchg
shl
dec
xchg
cmc
xchg
push
ds
sbb
dec
mov
xor
cmp
pop
sub
or
sti
xor
mov
js
sub
mov
outsl
into
fistpl
repz
fbstp
aad
mov
adc
cmpsb
push
xchg
push
adc
orb
pop
mov
pop
add
sti
and
lods
cltd
adc
adc
ss
and
dec
push
cmpsl
jge
adc
out
in
dec
push
mov
lret
out
mov
inc
loope
sub
movsb
pop
imul
jo
aaa
pop
and
and
xchg
jmp
lahf
hlt
xchg
iret
xor
aam
adc
subl
add
xor
xor
xorl
ds
bound
dec
xor
flds
jmp
ljmp
test
add
test
fiadds
sti
push
iret
push
add
xchg
pop
jnp
mov
jmp
pop
sti
add
jecxz
repnz
les
lds
jne
in
cmp
stos
pop
movsb
jae
out
add
or
jge
dec
sbb
subl
pushf
push
dec
fcoml
fnstcw
push
cld
div
scas
xor
mov
cmc
imul
std
mov
cmp
in
out
xchg
cmpsb
std
push
repz
xor
mov
in
cmc
xor
mov
push
adc
cmp
mov
cmp
mov
or
sahf
jp
add
adcb
jg
jge
insl
adc
call
aam
and
imul
out
xor
fisubl
cmc
js
aaa
out
orb
gs
xor
mov
pop
push
or
push
ds
faddp
jae
pop
and
cs
aaa
fsubrs
js
sub
xchg
sbb
inc
inc
loopne
lods
fists
jae
fstpl
movups
mov
push
je
add
ret
lahf
icebp
cltd
scas
mov
stos
cmp
in
mov
iret
xor
daa
aam
cmp
push
add
test
xor
push
dec
mov
adc
lahf
sti
idivb
or
aaa
out
mov
jae
fcom
mov
cmp
and
or
sarl
jbe
jmp
imul
inc
loope
data16
popf
sbb
test
out
sub
xchg
imull
shll
iret
push
adc
jno
pop
ret
fstpl
lods
mov
cmp
out
pop
jns
adc
sti
cltd
out
sbb
inc
sbb
insl
jle
cmp
mov
les
shll
xor
sub
and
cmpsl
addr16
test
mov
out
fiadds
or
xchg
jge
mov
std
mov
aas
in
and
in
xchg
scas
adc
shll
xchg
sbbl
sub
push
aam
loopne,pn
xchg
sahf
addr16
imul
or
ret
lock
nop
push
adc
setbe
push
pop
xchg
push
mov
and
fidivl
clc
pop
mov
add
cmp
jbe
sti
mov
sahf
outsl
add
cmp
dec
std
ds
dec
loop
stos
jg
adc
mov
jmp
and
fildll
and
sub
xor
mov
roll
mov
cltd
push
daa
inc
jecxz
push
sub
xchg
pxor
push
cmp
pop
pop
or
mov
push
inc
test
xchg
jb
imul
jg
mov
cmpsb
das
sub
xor
dec
push
adc
push
inc
inc
test
mov
in
popa
pushf
jb
iret
dec
push
loop
cmpsb
push
sbbb
fcomps
xchg
shll
pop
fisubrs
jnp
adc
sub
aad
mov
addr16
mov
fdivl
jp
loop
xchg
jo
test
mov
inc
cmp
or
fbld
mov
push
adc
shrl
aam
push
mov
lahf
inc
push
sarl
paddsb
fisttpl
add
pop
xchg
and
sub
js
sub
mov
fs
jl
lods
ret
mov
cmp
es
cmpsb
and
sub
add
xor
aaa
fdivrp
icebp
gs
push
jbe
lea
mov
in
push
gs
pushf
repz
les
clc
cld
fidivl
mov
jo
std
xchg
push
xchg
push
xlat
pusha
jno
dec
cmp
call
jmp
mov
inc
or
adc
movsl
cmpsl
adc
hlt
dec
mov
xchg
pop
mov
xor
jnp
add
xor
in
mov
pop
das
pop
sbb
pop
mov
ja
add
dec
xor
mov
sbb
popf
xor
mov
push
mov
notb
jbe
loop
dec
into
lea
push
sbb
and
jo
dec
lahf
movsl
push
sbb
in
sub
jmp
repnz
sarl
dec
dec
pop
cltd
stc
out
in
cmpsw
lea
scas
repnz
fwait
xchg
test
test
and
jecxz
mov
add
ds
pusha
mov
push
cli
xchg
je
pop
cs
aaa
aaa
mov
cltd
adc
into
xchg
rcll
enter
test
jae
sub
les
ret
add
xlat
bound
push
sub
xor
or
clc
pop
jbe
cmpsl
dec
rcl
in
lea
sub
push
addr16
movsb
dec
popf
shrb
xchg
mov
lret
inc
fwait
add
rorl
mov
sar
dec
cmc
rorl
cmpl
jne
mov
jmp
sbb
movsb
sbb
jae
aas
lahf
fstp
test
mov
sub
cmp
notb
xchg
xchg
fcmovnu
mov
xor
add
xlat
sar
ljmp
push
mov
test
xor
sbb
fists
cld
imul
push
enter
mov
cmp
and
ret
roll
add
pop
sbb
xchg
repz
sbb
js
lahf
mov
cltd
mov
jmp
pop
sub
mov
shrb
dec
adc
mov
stc
or
out
mov
xorb
shlb
pop
int3
aad
lcall
jne
mov
and
and
cltd
mov
mov
stos
cmp
lods
mov
mov
in
mov
add
fadd
inc
sbb
push
out
repz
and
and
int
mov
dec
mov
cmp
add
sub
adc
adc
push
aaa
dec
dec
xlat
lods
imul
jle
sbb
jne
cs
pop
nop
rcrl
sbb
inc
inc
fcmovne
scas
lcall
and
outsb
fisttpll
fs
xchg
xlat
push
lret
inc
movsl
enter
jo
jb
addr16
adc
mov
pop
jne
ds
stc
mov
cmp
push
inc
push
xchg
or
push
and
in
loope
and
js
jns
mov
cli
sub
add
out
hlt
je
cmp
pusha
icebp
pop
xchg
lods
nop
xor
outsl
cmovne
lcall
loope
pop
sbb
aaa
adc
test
test
outsb
jo
scas
pop
outsb
add
mov
cltd
mov
mov
mov
sti
pop
clc
push
xchg
nop
or
lea
dec
jb
arpl
scas
mov
xor
pusha
movsb
in
insb
mov
inc
cli
or
sti
out
push
jae
mov
movsb
nop
popf
xor
push
popa
test
hlt
jnp
jae
inc
adcb
mov
fs
mov
dec
dec
dec
test
push
mov
jo
mov
or
inc
jno
cmp
ss
loope
inc
cltd
jecxz
and
push
std
pop
enter
sub
jg
movsl
popa
mov
adc
mov
and
sbb
xlat
sbb
dec
xorl
inc
mov
jnp
cmc
popf
add
iret
aam
mov
dec
xchg
cmp
inc
jp
or
mov
or
jmp
aaa
pop
mov
add
push
sub
or
rcl
dec
in
das
inc
addl
push
rcrl
addb
sbb
movsb
aas
or
jae
scas
or
mov
lock
loop
fmulp
enterw
sub
cmp
xchg
mov
mov
mov
jb
jl
dec
add
pop
dec
leave
hlt
jmp
pop
xchg
sar
scas
lea
fidivs
sbb
cmp
mov
mov
in
cmp
adc
adc
jecxz
jg
mov
xor
mov
insl
lret
adc
pusha
lods
mov
adc
mov
sub
pop
adc
push
cmp
cmp
inc
out
iret
out
and
mov
jge
lret
pop
sbb
xchg
clc
cmp
inc
sub
and
or
ss
std
inc
mov
or
sub
adc
mov
test
jg
xor
emms
push
mov
dec
adc
data16
mov
cld
xor
sub
push
jecxz
mov
fcomps
repz
mov
imul
jl
shl
dec
inc
push
je
fsubrl
mov
inc
out
testb
jl
mov
int
xor
jnp
mov
aas
push
mov
or
jbe
fsqrt
out
sbb
call
fsubrl
push
loope
or
mov
insl
add
enter
jae
data16
stos
cmp
mov
es
and
loopne
xchg
add
mov
out
notb
mov
and
adc
adc
sub
das
xchg
xor
jge
mov
xor
jge
jno
mov
xchg
gs
xor
push
push
out
in
cmp
cmp
rcll
cmp
test
xchg
testl
fs
jno
pop
pop
into
mov
scas
inc
fnstcw
mov
push
jg
and
enter
lock
xchg
jnp
mov
mov
jae
test
rorb
xabort
cmp
lcall
push
imul
push
cmpsb
insl
out
jecxz
mov
addr16
rcll
leave
test
cmp
pushl
mov
xor
enter
dec
cmp
int
or
cmp
enter
sbb
mov
and
and
xchg
pop
push
mov
or
xchg
mov
scas
pop
into
mov
push
dec
push
push
push
inc
and
lret
mov
mov
aam
xchg
pop
jo
pop
dec
push
jecxz
fs
ljmp
fwait
in
fistl
out
mov
arpl
dec
fwait
and
loopne
sahf
adc
lods
cld
call
dec
mov
adc
imul
insl
xchg
in
outsl
in
sbb
in
pop
andb
pop
cmp
aam
sarl
aaa
out
mov
mov
into
mov
adc
icebp
inc
pusha
pop
cmp
pop
xor
push
test
repnz
out
popf
mov
pop
scas
arpl
test
sub
lea
movsb
or
push
dec
out
into
mov
cmc
nop
in
mov
inc
scas
mov
and
dec
cmp
jno,pn
xor
sbb
fs
push
aam
leave
hlt
and
sub
xchg
mov
addr16
fldcw
inc
rdtsc
or
cmp
std
and
and
jmp
pop
jae
out
mov
ret
int3
xchg
adc
jle
out
xor
cmp
in
xchg
xchg
jecxz
mov
mov
mov
xor
clc
or
int3
jle
mov
or
mov
mov
cmp
xor
pop
call
cmpsl
dec
adc
or
add
mov
dec
iret
nop
push
fdivrs
and
inc
in
and
stos
rorl
xor
or
push
mov
mov
leave
and
push
sbb
mov
and
aas
mov
fnstenv
pop
stc
loopne
shlb
jecxz
jae
mov
or
inc
or
movsl
inc
inc
xchg
dec
loopne
stc
dec
mov
sahf
inc
popf
cmp
adc
xor
aaa
pop
mov
push
std
xchg
pop
or
lds
adc
and
loopne
dec
push
jns
xor
pop
lock
mov
sbb
mov
sub
jle
jb
and
cs
aad
mov
scas
in
out
adc
movsb
fcmovbe
pop
jnp
roll
dec
out
pop
in
arpl
jb
rorl
cli
cmp
jb
ds
mov
pop
test
out
xchg
jo
cli
inc
or
dec
mov
addr16
mov
dec
mov
mov
push
mov
xor
sbb
mov
xor
push
mov
imul
popa
pusha
cmp
pushf
jl
xor
inc
aas
mov
sbb
cltd
outsb
js
and
xchg
aad
dec
sbb
push
dec
js
adc
lds
loop
xorb
xchg
sub
dec
sbb
jno
js
ret
cmp
inc
lds
lods
in
iret
mov
dec
sbb
inc
jb
ret
in
push
sti
pause
daa
push
sar
jmp
lret
add
sbb
imul
orl
mov
ljmp
inc
xlat
repnz
jmp
jno
xchg
dec
cli
and
pop
add
dec
outsb
test
std
hlt
filds
shll
cmpsl
cmp
sub
mov
adc
inc
cld
mov
dec
out
in
loopne
jmp
pop
popf
or
out
push
mov
xchg
addr16
mov
jae
sahf
inc
sbb
xchg
dec
ds
cwtl
fdiv
popa
in
icebp
push
cmp
push
inc
push
data16
mov
cmp
add
nop
insb
jo
and
mov
cltd
xchg
dec
adc
add
pop
inc
pop
pop
dec
or
jne
fistps
cmp
and
rcll
fdivrl
inc
enter
push
popa
and
push
add
or
sbb
mov
dec
adc
femms
neg
aaa
ds
push
mov
adc
cmp
xor
repnz
daa
pop
sub
or
bound
addr16
add
pop
pop
sub
pop
test
xchg
or
cmpl
rcrb
lods
sub
ja
rcl
mov
insb
inc
arpl
loope
in
imul
inc
cmp
mov
xor
insb
add
cmc
cmp
xchg
and
rolb
jbe
push
outsb
mov
pop
xchg
in
test
inc
xchg
into
sbb
jb
fsubrp
or
push
jae
or
ret
sub
xchg
adc
inc
scas
dec
xchg
pop
ret
mov
les
pop
stos
xor
or
xchg
push
addr16
sbb
cmpb
fistpl
mov
orb
fmuls
mov
jb
cs
mov
jp
dec
nop
inc
or
cmp
in
xchg
mov
sbb
jmp
jns
push
mov
lret
in
push
mov
int
pop
addr16
adc
push
or
ds
cmp
jmp
shlb
or
dec
in
fisttpll
push
shl
fldt
and
test
dec
xor
adc
sarl
arpl
loope
cli
inc
adc
inc
mov
mov
divl
xor
mov
and
mov
mov
dec
pop
sbb
xor
add
sbbb
loop
inc
jl
cmp
ret
sub
lods
xlat
push
xor
insb
outsl
sbb
mov
scas
mov
adc
jo
shrl
and
ss
pop
imul
jbe
insb
ja
mov
insl
push
mul
xor
cld
sbb
fs
gs
adcb
test
dec
xor
xor
add
repz
xchg
push
adc
dec
jg
cmp
imul
dec
or
mov
xchg
mov
addb
jnp
cmp
lea
pcmpeqd
stc
mov
fidivl
les
arpl
out
es
or
jns
fadds
test
sub
xor
or
inc
push
and
insl
cld
jns
adc
fbld
lods
mov
adc
insb
pop
stos
insb
and
sbb
movsb
cmpsl
add
jl
int
jle
cmc
movl
out
ret
outsb
xchg
fcomps
sbb
test
scas
fcmovu
in
outsl
es
in
jne
adcl
ss
lods
shll
xchg
fwait
or
sub
dec
push
inc
mov
xor
sub
mov
les
lods
adc
mov
inc
mov
out
sbb
adcb
lock
jb
jnp
out
xor
cmp
inc
cmpsb
pop
andl
test
lock
sbb
dec
and
xchg
leave
cltd
pop
enter
rol
pop
sub
mov
adc
push
lcall
mov
mov
mov
cmp
lods
and
lea
xor
xor
sub
xor
push
addr16
push
xor
xchg
icebp
int3
xor
dec
loop
ret
movsb
sbb
lret
aam
and
add
mov
aaa
cli
cli
mov
icebp
sarl
es
adc
test
lret
adc
stc
fsub
inc
lret
xor
and
dec
push
push
leave
mov
adc
pop
add
mov
add
cwtl
and
daa
or
sub
pop
or
enter
sbb
jmp
iret
enter
mov
add
popf
sbb
aad
mov
mov
add
scas
cmpsl
addl
nop
ja
repnz
inc
cmp
lcall
cli
dec
imul
inc
xchg
and
cwtl
lods
in
loopne
outsb
adc
insl
adc
and
dec
out
push
mov
xchg
cmp
test
sub
xchg
add
inc
adcl
xchg
mov
mov
gs
daa
jmp
lea
or
shl
inc
xchg
lods
mov
rcrl
scas
js
mov
shl
inc
fcmovnu
push
mov
adc
push
adc
clc
fsts
movsb
push
cmp
mov
icebp
cmp
pop
test
les
xor
xor
jg
xchg
sbb
out
xchg
adc
pop
xor
imul
adc
sbb
jo
jg
es
pop
mov
popa
test
fstps
or
pop
test
shll
in
int
and
test
dec
fwait
ret
and
out
mov
je
xor
js
ss
int3
test
xor
test
sbb
std
xchg
dec
inc
ja
cmc
pop
mov
dec
addb
int3
mov
pop
dec
pop
jl
pop
jbe
cmp
inc
xlat
fisubrl
icebp
adc
jnp
or
popa
out
ret
mov
inc
test
pop
fwait
out
addr16
xchg
inc
push
xchg
addr16
loopne
loopne
push
inc
mov
aam
add
adc
ror
dec
rolb
sarb
adcb
lds
lock
movsb
cmp
loopne
jne
jg
pop
pusha
je
mov
push
jl
mov
push
out
sarb
push
test
sub
pop
loop
aas
lods
xchg
dec
or
jnp
cmp
adc
adc
dec
push
pop
into
pop
jbe
inc
mov
inc
push
push
cmp
push
es
jbe
fwait
add
dec
mov
mov
ret
fldcw
mov
add
sub
stos
mov
jns
aam
ljmp
pop
mov
scas
pop
repz
fstpl
mov
xchg
daa
mov
enter
dec
gs
xor
jnp
or
outsb
cmc
icebp
fisttpl
enter
dec
sti
xchg
lods
cmp
fs
push
es
mov
dec
and
lcall
fwait
sub
addr16
rsm
loope
jne
dec
stc
cld
and
orb
pushf
jl
ja
push
xor
scas
in
movsl
cmp
icebp
aad
mov
xor
into
pop
cmp
mov
jle
inc
popa
add
ss
mov
scas
stos
in
outsb
mov
mov
or
loope
mov
or
aaa
lds
xlat
sbb
bound
or
xchg
insl
in
xchg
inc
cli
mov
enter
xor
cmp
pusha
mov
icebp
xchg
inc
push
push
jbe
sbb
jns
movsl
test
cmp
adc
or
addr16
inc
dec
mov
sbb
pop
xchg
ja
add
cmpsb
and
loop
cmp
or
std
clc
dec
adc
pop
movsl
sub
sub
scas
and
in
repz
inc
addr16
cs
jmp
loop
daa
pop
lea
out
and
idivb
xor
cli
push
mov
lret
add
jl
rcrb
cmpsb
mov
dec
xchg
inc
fwait
xchg
inc
add
inc
subb
out
push
xchg
out
fstl
jge
xor
inc
clc
push
mov
sub
and
xchg
sahf
mov
inc
insb
xor
pop
ret
cwtl
stos
pop
insl
pop
outsb
mov
jge
es
daa
xchg
jmp
push
cmpsl
sub
icebp
sub
jns
rorb
mov
notl
xchg
test
xchg
pop
gs
test
rcll
sub
sti
xor
push
cmpsl
outsb
cltd
ret
shll
jecxz
dec
addr16
add
xchg
addr16
outsb
mov
fsubl
dec
push
or
push
jbe
test
and
mov
xor
imul
sahf
negb
dec
sbb
jmp
or
mov
bound
xor
cmpsl
push
lock
js
mov
sbb
mov
mov
dec
outsb
mov
movsl
lea
imul
stos
incl
fsubrl
or
mov
push
outsl
sub
push
or
xchg
scas
sti
sub
mov
mov
xor
fimull
popa
sub
enter
adc
cmp
xor
sahf
adc
sub
arpl
int3
pop
int
mov
mov
xchg
add
fld
fwait
or
mov
sub
pop
xor
pop
in
stos
daa
orl
movsb
into
mov
popa
std
and
pop
fbstp
inc
popa
call
xchg
mov
add
and
and
xchg
notl
pop
call
and
jno
fdiv
mov
divl
jb
xchg
adc
jge
adc
movsl
shrb
mov
enter
arpl
fs
pop
ret
dec
add
pop
iret
mov
push
jb
or
dec
int3
cs
int
push
pop
aaa
xor
xchg
jg
test
push
or
inc
ret
pop
jmp
aaa
inc
inc
jo,pt
cmp
rcll
imul
add
dec
outsl
cltd
scas
xchg
push
push
jno
mov
add
push
cmp
xchg
xchg
sub
out
xchg
xor
leave
cmpsb
mov
popf
cli
aas
loop
push
adc
pusha
pop
movsb
or
pop
cmp
ret
cmp
dec
leave
jns
es
aam
ja
mov
data16
bound
lcall
xor
jne
pop
gs
dec
ljmp
insl
xchg
adc
loop
mov
sub
and
into
fsubr
push
test
rorl
inc
sub
or
jle
out
lret
repnz
xchg
and
inc
and
leave
dec
cmpl
push
push
adc
or
pushf
pusha
pop
push
jl
aas
pop
xor
push
push
xchg
insb
fdivrl
inc
inc
je
nop
jl
jle
add
jle
xor
jg
dec
jns
insb
lea
rcrb
and
fucomp
dec
mov
pop
lock
pop
push
imul
adc
pushf
mov
push
scas
insb
sbb
fcmovnb
lcall
push
push
mov
ret
xchg
dec
test
imul
jae
ljmp
xchg
lods
dec
jge
rol
ss
mov
outsb
test
imul
mov
xchg
cli
pop
test
adcb
iret
sbb
lock
and
flds
adc
mov
bnd
add
out
test
jns
jg
dec
outsb
leave
push
stc
xchg
test
jae
mov
fimull
lahf
push
ss
mov
inc
mov
in
add
push
pop
xchg
js
insl
sub
fucomi
sbb
js
leave
add
int
and
fcoml
mov
sti
adc
pop
mov
stos
and
push
loop
pop
arpl
and
inc
adc
dec
sub
lods
and
or
push
pop
sbb
sbb
sbb
mov
push
test
add
imul
pop
xchg
jge
and
inc
pop
fucomip
sub
hlt
adc
or
push
inc
push
push
rcl
cltd
sarb
pop
mov
cmc
sub
movsl
xchg
dec
push
testl
push
jecxz
lahf
jecxz
subb
xlat
cmp
or
add
mov
clc
jl
push
push
mov
orl
pusha
adcb
mov
add
mov
adc
out
je
ja
insl
push
dec
cli
jb
add
xchg
dec
mov
and
andl
addr16
lods
inc
push
out
inc
add
fiadds
ja
inc
test
fiaddl
push
mov
leave
lret
sub
xchg
cmpsb
subb
aam
dec
lea
outsl
pop
push
mov
push
out
mov
repnz
or
jg
lods
pop
sub
adc
sub
mov
rcl
xchg
int
cmp
mov
rcrb
push
mov
add
in
cld
cmpsl
out
push
inc
and
movsb
sbb
mov
ret
in
xchg
les
rorl
mov
mov
sbb
add
movsl
cltd
clc
loopne
dec
test
adc
xchg
ds
push
sarb
icebp
or
fisubl
stos
jle
inc
pop
push
cmp
or
in
inc
pop
lock
popf
lds
rolb
outsl
cmc
push
jmp
xchg
dec
popa
les
jns,pt
mov
inc
ret
pop
jno
inc
stos
pop
jg
adc
mov
dec
loop
cmp
jns
or
fidivrs
aad
xchg
xchg
xchg
sti
aaa
add
mov
outsb
cltd
es
sahf
cmp
pop
icebp
in
dec
mov
xor
dec
cmp
lock
gs
lock
jge
shll
sti
mov
or
xor
rol
add
or
pop
adc
xchg
sub
xchg
popf
or
pop
inc
inc
adc
push
test
mov
out
out
aam
mov
pop
daa
sub
filds
divb
or
push
mov
push
mov
mov
dec
xchg
inc
push
aaa
pop
dec
insl
stos
mov
jbe
les
daa
mov
scas
mov
out
pop
push
push
out
adcl
cmpsb
fucomp
mov
inc
add
xor
jl
imul
xor
sub
movsb
clc
rolb
xor
in
push
outsl
adc
arpl
ss
xor
aas
repz
popf
fsts
mov
inc
test
xor
lahf
es
jmp
mov
lret
out
ljmp
dec
adc
jns
pop
ret
jg
adc
or
sbb
rolb
sub
cli
movsl
sbb
nop
or
jne
mov
fwait
or
and
mov
mov
test
mov
shll
sub
cmp
clc
and
push
cmp
test
push
inc
and
movsl
pop
outsl
iret
sti
sub
in
jne
stos
mov
inc
rclb
xor
and
aas
mov
scas
enter
std
fs
jb
xor
lods
movsl
dec
sbb
add
push
jne
lods
dec
cmpsb
nop
jmp
test
or
xchg
sub
xor
lahf
jp
stos
jle
and
outsl
mov
lahf
mov
add
insl
int3
enter
scas
and
xor
insl
cmp
pop
insb
or
and
imul
pushf
ja
pop
sub
cltd
and
adc
sbb
add
push
and
xchg
cmp
dec
mov
mov
xchg
pop
lds
out
xchg
xor
or
dec
rclb
sub
jmp
dec
test
sub
mov
sbb
push
fs
data16
pop
xchg
jmp
js
xchg
xlat
cmpsb
dec
movsb
ss
mov
or
ja
pop
xor
and
xchg
sbb
mov
aam
aas
mov
scas
sbb
cmp
daa
popl
inc
push
es
enter
jbe
ret
or
dec
mov
fsubs
pop
ret
sub
iret
jae
pushf
jb
ja
mov
enter
push
rcr
pop
sub
push
push
fsts
ret
pop
push
and
or
dec
imul
ljmp
sbb
loopne
int3
je
xchg
int3
fadds
ljmp
push
sbb
fcmovb
mov
pop
inc
adc
in
cmp
jbe
lock
mov
push
aam
jle
jmp
adc
enter
or
arpl
sub
sbb
out
iret
clc
or
stos
subb
std
clc
fs
popf
jo
xchg
dec
ja
addr16
dec
loope
mov
fldcw
sub
lds
inc
mov
mov
adc
addr16
daa
stos
push
pop
add
out
dec
xchg
rcrl
hlt
jecxz
loope
push
ret
popf
ret
xor
out
mov
mov
dec
and
mov
dec
out
lock
adc
push
jp
loopne
mov
and
dec
clc
xchg
mov
dec
inc
cmp
fimuls
push
pop
nop
out
aas
lds
add
jp
sarb
pop
lea
ja
or
xchg
cld
fists
xor
aam
xchg
dec
ds
fcmovnu
sbb
mov
push
push
out
in
int
xor
mov
sbb
hlt
icebp
pushf
cmpsl
mov
dec
fildl
mov
imul
pop
aaa
shl
js
jo
in
pop
pop
pop
addb
hlt
dec
cs
lds
mov
pusha
insb
or
cwtl
mov
stc
ja
add
push
cmp
mov
xchg
sahf
pop
insl
popa
push
add
popf
dec
fwait
pop
insl
pop
call
out
insl
cmp
dec
fidivrl
cli
or
loope
adcl
pop
bound
mov
lret
aad
mov
and
push
sub
jmp
add
xchg
mov
xchg
daa
mov
pop
pop
test
mov
idivl
push
jle
add
xlat
jle
sub
je
loopne
leave
jg
stc
xchg
or
xor
sbb
jb
fwait
xor
inc
insb
js
jo
jns
add
push
mov
and
test
fsubrl
out
pop
es
lock
stos
inc
sbb
in
into
dec
sbb
xchg
dec
push
pushf
outsl
rcrb
std
mov
lret
movsl
lahf
mov
int
imul
xchg
cs
cmc
aaa
pop
test
into
mov
push
js
fsubrs
or
xlat
push
mov
pop
xor
in
add
jo
sub
stc
out
ja
sbb
dec
mov
pop
rcl
mov
push
push
sub
jo
inc
ljmp
xor
xor
pop
jp
inc
cld
insb
mov
std
iret
ja
jo
add
lret
test
jb
mov
into
shlb
incl
jge
jmp
rolb
and
jae
push
int3
mov
adc
sbbb
cmp
lahf
cmp
hlt
xchg
dec
jp
push
pop
mov
pop
es
test
mov
lds
sahf
cmpsb
xchg
out
and
in
mov
outsl
sub
xchg
mov
repnz
out
popa
into
push
ret
jns
adc
xor
dec
shrb
cmp
sbb
movsb
icebp
es
dec
adc
cmpsb
jmp
test
sti
pop
notb
lret
pop
mov
xchg
stos
int
dec
shlb
push
int3
xor
jle
sbb
mov
rcrl
jle
or
fwait
jns
xchg
mov
push
movsb
cmp
dec
jb
mov
and
nop
imul
mov
push
sub
mov
or
xchg
mov
or
xor
or
xor
xor
sahf
adc
incl
scas
or
jo
cmp
dec
push
cmpsb
lock
fstpt
mov
daa
inc
or
cmpsl
pushf
stos
mov
cli
push
jae
les
and
xor
jne
in
pop
lahf
fsubl
sub
out
dec
cld
add
xchg
int3
sbb
xchg
out
cmpsb
popf
xor
inc
inc
pushf
push
cwtl
movsb
cmp
loope
push
dec
stos
xchg
adc
xchg
inc
out
pop
out
push
daa
jmp
out
lea
sarb
loopne
jnp
out
lret
fcomps
mov
loopne
scas
xor
adc
add
pop
cmp
fisubrl
sbb
in
push
outsl
andl
xor
mov
cmp
adc
imul
out
push
std
das
add
aas
adc
dec
push
mov
add
push
mov
cmp
stos
mov
ficoml
outsb
add
mov
daa
addl
jmp
jo
bound
rcrb
negl
mov
pop
rcrb
rolb
int
aad
adc
outsl
dec
adc
jge
outsb
lret
bound
daa
mov
sub
fstpl
lcall
orb
pushf
mov
push
inc
inc
rol
cmp
or
andb
data16
xchg
mov
jmp
cmpsb
xchg
mov
fistl
popl
cmp
sbb
cwtl
lret
cmc
sbb
and
jle
sti
add
jns
push
add
push
insl
shll
push
loope
lea
ljmp
es
inc
mov
or
rcr
bswap
dec
out
inc
jge
xchg
push
mov
lock
jns
inc
loopne
pop
dec
das
jmp
scas
sub
adc
fs
xor
or
cmc
call
fwait
pop
negl
cli
push
lcall
push
push
sbb
mov
pop
jne
popf
xchg
fldenv
lahf
into
inc
inc
sub
push
sbb
cli
dec
jnp
lcall
adc
test
add
lock
mov
jl
pop
jl
or
std
arpl
sahf
es
add
jmp
fdivrl
orb
add
andb
mov
clc
add
rorb
inc
es
std
xchg
fmuls
mov
cmp
ljmp
jno
pusha
jl
aam
mov
test
lds
js
xchg
pop
add
scas
movsl
sub
or
xor
std
sbb
add
lahf
cmc
pop
roll
mov
jle
sub
push
jae
andl
test
jmp
rcr
fldenv
aad
pop
push
jle
out
add
dec
pushf
sbb
pop
clc
mov
xor
or
inc
dec
add
dec
test
jge
cmp
es
fldl
add
push
lds
mov
inc
rolb
les
pusha
xor
and
mov
mov
xchg
pusha
mov
add
adc
and
adc
addr16
popf
mov
js
push
sub
stc
cs
mov
leave
flds
in
cmp
inc
imul
es
ljmp
mov
xor
loopne
sbb
hlt
cwtl
or
mov
jecxz
aad
jmp
or
mov
push
sub
enter
cmpb
popf
push
in
mov
jno
jnp
jle
mov
fadds
and
je
out
addl
sahf
iret
loopne
mov
clc
jmp
inc
enter
pusha
sbb
and
cmpsl
out
popa
pop
fiadds
mov
js
or
popa
inc
push
test
outsl
pop
sub
push
cmp
imulb
cmp
sub
inc
es
pushf
and
jg
xchg
xor
fdivrl
dec
stc
add
pop
test
int
and
xor
fidivrl
pop
mov
pmaddwd
cmp
scas
cmpsb
xchg
sbb
ds
in
lea
and
sub
pop
stos
dec
mov
cwtl
enter
in
sbb
shrl
rcrb
cs
mull
push
cmp
sub
fcmovu
or
sti
aaa
sbb
enter
xchg
cmpsb
xchg
stc
gs
jb,pn
ljmp
push
sbb
stc
insl
mov
xor
arpl
adc
aas
fdivl
popf
inc
push
push
and
mov
pop
imull
cmp
cmp
pop
aam
xchg
shl
je
xchg
insb
ret
mov
and
aad
inc
into
inc
popf
or
and
jbe
and
cmp
into
push
mov
je
push
dec
pop
outsb
test
std
js
mov
movsl
jle
aad
or
xchg
inc
cmp
jae
lcall
mov
daa
or
cld
bound
mov
mov
cmc
fcomip
fsts
icebp
sbb
pop
mov
pop
mov
aaa
cmp
js
decl
testb
pop
out
mov
cmp
fcoml
push
xor
stos
jecxz
lret
mov
or
lea
jo
mov
test
cmc
addl
push
ss
insl
push
stos
dec
test
add
sbb
mov
dec
aaa
in
xor
mov
pop
dec
inc
daa
push
stos
lock
inc
sbb
lods
mov
xchg
xchg
and
or
roll
into
xor
inc
xlat
fiadds
stos
xchg
leave
call
loopne
sub
dec
lds
ret
xor
and
fcomi
jae
sahf
inc
loop
fcoml
push
mov
xor
ja
ja
add
lcall
dec
in
adc
addr16
sarl
arpl
enter
test
clc
jbe
jns
and
dec
loope
arpl
lret
add
mov
cmp
lahf
xor
jno
inc
cli
xor
and
xchg
insl
and
fldl
shrd
pusha
and
push
js
or
dec
adc
push
sahf
mov
and
loop
add
js
dec
sub
test
div
ret
in
cwtl
shrb
pusha
push
jne
jg
ja
cmc
dec
insb
xlat
jbe
lods
and
adc
imull
iret
data16
dec
xor
push
inc
xor
and
dec
xor
rclb
pop
jge
cli
ja
popa
movsb
outsb
imul
test
stos
test
pop
stos
stos
mov
repz
push
mov
mov
inc
fldenv
fiaddl
adc
and
sub
outsl
sub
out
mov
mov
dec
lret
mov
mov
sbb
loopne
in
mov
aam
dec
stos
roll
dec
xchg
cmp
shll
xor
lock
push
inc
movhps
in
outsb
pop
adc
jnp
sahf
std
ret
pop
mov
sarl
or
scas
aaa
xchg
nop
pop
push
fistpll
inc
aaa
lret
and
lods
or
call
loope
push
arpl
push
popf
mov
repz
stos
push
aas
in
iret
into
push
loopne
aas
js
sbb
jge
repnz
lea
push
out
in
pop
jecxz
loop
sub
test
or
jbe,pn
pop
sub
iret
filds
outsl
fdivl
mov
push
jg
mov
leave
xchg
sarl
dec
xchg
push
pop
orb
add
or
mov
sbb
arpl
mov
ret
fsubrs
mov
jecxz
xlat
xchg
aam
sti
mov
movsl
ljmp
pop
repz
test
xor
xor
ret
jmp
fwait
insl
jle
jl
movsb
js
add
data16
movsb
push
scas
pop
dec
inc
inc
icebp
nop
fidivrl
sub
loope
mov
pop
les
sarb
sub
jle
or
sub
jg
lds
jno
cld
mov
jg
xchg
push
xor
filds
cmc
inc
and
outsl
loopne
mov
stos
xor
cmc
push
adc
insl
and
cmp
popf
sbb
xchg
sbb
push
mov
cltd
clc
loopne
mov
push
shlb
inc
mov
cmp
stc
clc
or
xchg
shr
test
pop
push
aaa
mov
orl
pop
leave
cmpsl
cmp
in
stos
mov
xchg
mov
cmp
sti
jnp
lahf
std
loopne
xorb
mov
jg
jge
inc
mov
push
mov
sti
out
lds
test
sbb
ret
cltd
sarl
push
push
mov
ret
mov
daa
inc
pop
pop
or
es
xchg
mov
test
adc
dec
mov
insl
rorl
or
pushf
jle
je
ror
jae
or
in
les
insb
call
jl
lret
push
mov
pop
int
mov
cmp
stos
or
and
inc
and
jle
xchg
pop
subb
mov
cwtl
int3
and
jae
les
aaa
mov
mov
mov
push
jbe
mov
movsl
dec
cmovs
push
sbb
lods
sub
mov
test
push
xchg
push
shrl
repz
repz
xlat
add
lret
push
sub
push
loopne
dec
xor
xor
push
sbb
lock
cmpsb
das
jb
mov
and
scas
mov
lods
lock
bound
das
mov
mov
dec
inc
rorb
mov
iret
mov
jg
ds
or
int3
mov
fidivl
mov
push
call
popa
adc
lock
mov
adc
movsl
mov
aaa
lahf
cmp
pop
lods
jbe
or
sbb
aaa
lods
sub
sub
sbb
and
jmp
xor
hlt
icebp
test
rcrl
xchg
repz
jb
add
les
loope
mov
sbb
je
inc
imul
jl
outsb
in
pop
sarl
inc
or
aad
xor
lea
sub
jp
repz
jae
xor
jecxz
icebp
jge
fscale
xchg
cmp
or
fildll
inc
rclb
add
push
xchg
ss
cmp
popw
in
std
jo
into
sarl
push
inc
bound
rclb
mov
adc
mov
out
sub
mov
test
rorl
out
mov
ljmp
or
aam
or
cmp
mov
mov
outsl
and
shl
dec
mov
push
ljmp
bound
add
mov
out
jg
jb
rorl
sahf
out
push
stos
push
jae
push
mov
insb
decb
lods
nop
xchg
cs
subl
mov
stos
inc
cmpsl
pop
iret
incb
repnz
out
bound
xor
out
mov
or
lea
xorl
shrl
add
ret
iret
or
lret
cmc
outsb
xor
enterw
pop
add
aam
aaa
mov
and
or
jp
jbe
sub
cmpsl
aas
and
jo
fcmovne
or
jnp
pop
subl
imul
cmp
mov
jmp
inc
aam
cwtl
mov
cmpl
testb
sub
fs
add
jp
stos
outsl
hlt
adc
or
push
push
push
fists
lahf
test
adc
add
adc
mov
mov
lock
push
sbb
sub
fldcw
movsb
jnp
insb
ret
rolb
inc
sub
outsb
cmp
or
sbb
xchg
mov
fs
test
adc
inc
neg
xor
jmp
or
push
mov
mov
test
clc
aaa
lahf
lock
imul
movsl
sbb
mov
shl
lea
jmp
adc
fidivl
push
xchg
jns
xchg
and
loop
lret
das
mov
push
and
pop
mov
stos
mov
xor
or
sbb
cmp
lcall
or
repz
pop
cmp
xor
cltd
xchg
icebp
mov
mov
lods
pop
xor
push
sti
scas
call
in
call
cmp
mov
dec
pushf
out
and
es
clc
aaa
and
in
dec
das
loope
test
dec
loopne
negl
rcr
fists
rclb
mov
mov
add
cmp
push
insl
xlat
scas
push
aad
inc
outsl
mov
imul
push
in
ljmp
jb
in
add
fs
popa
andl
outsl
imul
cmc
cld
jno
push
and
pop
mov
cmp
call
mov
cltd
hlt
dec
fidivrl
add
cmp
push
and
in
push
stc
rcl
add
pop
xchg
cmc
test
pop
push
mov
sub
dec
lock
cltd
das
adc
lods
add
sbb
mov
jnp
and
jnp
mov
cmpsl
jae
and
sub
pop
test
adc
mov
out
dec
pop
fdivr
mov
popa
push
pop
xchg
nop
inc
cmp
inc
push
xchg
scas
sar
jmp
test
shl
sub
mov
aaa
xlat
pop
repz
add
pop
int
js
and
mov
ss
xor
cmp
push
sub
xchg
inc
int
ficompl
xchg
cmc
fwait
push
out
xchg
or
xor
imul
imul
pop
mov
xor
xchg
dec
jl
les
or
mov
jg
mov
xor
lahf
pushfw
aaa
pop
mulb
mov
cmpsb
and
xor
popf
jbe
pop
stos
jl
mov
sub
inc
lds
pop
aam
mov
shlb
movl
in
push
mov
push
push
xlat
mov
jmp
adcl
lahf
jnp
ja
jo
cmp
jo
sahf
call
jo
jge
xchg
ja
pop
mov
xor
xor
cmp
cmp
call
addr16
shlb
pop
inc
mov
mov
neg
mov
push
popa
daa
sub
push
jne
sub
pop
scas
and
orl
cmc
sub
mov
test
lcall
xchg
jo
xchg
mov
and
lock
stos
out
or
and
test
mov
out
xchg
mov
in
iret
mov
mov
xchg
mov
xchg
sti
dec
jecxz
mov
ljmp
and
insl
push
cs
fcompl
adc
mov
mov
mov
jnp
mov
xor
xor
lret
xchg
js
gs
fistpl
rcrb
cmp
dec
das
xchg
cmpsl
cmpsl
and
out
sbbl
arpl
insb
jnp
ds
ret
andb
push
fldlg2
arpl
xor
sahf
push
inc
inc
lcall
dec
push
inc
out
xchg
pop
pop
lret
jae
cmp
mov
into
add
and
dec
push
cli
pop
fadd
add
push
pop
sbb
imul
movsl
lds
lcall
jae
dec
in
shl
inc
stc
aaa
lcall
mov
sub
pop
xor
aad
pop
mov
repnz
mov
add
mov
add
pop
stos
roll
cmpsl
mov
push
or
mov
movsb
xchg
lods
out
push
inc
cmpsl
aam
add
fisttps
and
xchg
and
jne
fadds
insb
loopne
add
mull
xlat
insb
xor
mov
mov
aad
into
dec
fmuls
cwtl
cwtl
int
rcrb
mov
xor
or
cmpsb
in
popf
xlat
jmp
loopne
xor
rclb
xor
js
in
clc
ret
in
push
setno
subl
lods
add
ret
call
cmp
jp
push
xor
mov
push
pop
testl
ret
push
inc
orl
pop
push
or
js
stos
pop
mov
icebp
dec
dec
add
xlat
movsb
cmp
xchg
pusha
nop
jbe
dec
sahf
xlat
dec
pop
aad
push
mov
mov
and
jle
xchg
adc
xchg
add
scas
adc
les
movsl
stos
mov
mov
orb
add
std
cmpsb
mov
sbb
push
aam
mov
enter
jp
sub
sub
dec
and
out
das
adc
lods
out
popa
sub
js
sbb
mov
stos
daa
in
subb
dec
adc
mov
mov
cld
xor
xor
pop
pop
je
cmp
std
sub
mov
subl
movsb
shrb
pushf
or
push
mov
std
mov
dec
xor
mov
sub
cmpsb
xchg
scas
mov
inc
inc
jno
ljmp
lea
xchg
sub
jne
sbb
fcmovne
or
adc
inc
ss
jno
inc
mov
setbe
loop
fisttpll
int3
pop
mov
rol
stos
sbb
ja
ja
xchg
inc
mov
sub
int
fwait
or
dec
mov
mov
sub
push
cltd
addr16
mov
outsl
out
mov
xchg
mov
jns
test
xor
push
mov
rcll
pop
mov
add
stc
xchg
push
xor
in
iret
sub
cmc
imul
lret
push
daa
arpl
push
jns
add
test
pop
mov
jns
sbb
mov
scas
push
movq
js
mov
and
ret
adc
daa
or
jl
sub
jnp
fcomp
sbb
ss
add
mov
cmp
xor
scas
rcrb
dec
daa
inc
and
pop
push
out
pusha
pop
or
sbb
orl
xchg
inc
rep
sbb
cmc
fdivr
shr
add
xchg
lahf
jo
pop
fs
xor
js
fdivrs
or
outsb
insb
mov
sub
popa
shrl
cmc
cmp
outsl
mov
xlat
lds
xor
push
je
lods
push
clc
push
lock
sub
add
jge
scas
xchg
je
pop
xchg
es
test
jle
stos
mov
push
fmull
fstpt
fiaddl
lds
dec
shrb
xor
pop
mov
lea
je
xchg
lahf
not
cmp
sub
push
ret
aas
fdiv
or
sub
mov
mov
dec
es
dec
out
pop
inc
int
jno
xchg
dec
inc
outsl
inc
in
cli
dec
jno
sub
jg
sub
inc
ds
cmp
lock
call
sti
cmp
inc
push
mov
xchg
dec
in
insb
jge
mov
sub
fwait
out
push
xor
into
cmpsb
lods
push
lret
jg
cmc
lods
flds
xor
xchg
xchg
adc
aad
nop
cmp
incl
fstps
inc
mov
jbe
sbb
dec
cs
xor
jae
and
call
out
push
add
sub
je
dec
xchg
pop
push
test
mov
lods
inc
in
cmpsl
xchg
xchg
pop
pop
addr16
mov
mov
mov
mov
repnz
dec
jne
fwait
and
repnz
jecxz
out
and
inc
iret
mov
jmp
cs
add
lret
mov
xor
nop
out
pop
and
ds
out
cmp
sub
sub
fdivs
or
cmp
cmc
stos
xor
dec
pop
mov
push
ret
mov
aam
pop
mov
test
add
dec
dec
pushf
stos
out
outsb
cmp
xlat
push
stc
es
bound
out
addr16
xchg
in
cmpl
fisttps
lret
and
leave
mov
inc
fcom
cltd
push
jae
adc
cld
rorl
push
ret
adc
or
lcall
es
xor
sub
cmpsl
dec
rclb
movsl
mov
sbb
pop
mov
out
andb
lods
xchg
in
mov
mov
cmpb
jle
adc
fisttpl
push
lret
dec
mov
xchg
xchg
pop
ret
xor
push
fdivrp
push
mov
jp
in
test
gs
pop
stos
lret
rorl
jae
in
out
adc
loopne
js
mov
xorl
aam
or
jb
sti
imul
jl
dec
fistl
cltd
jp
sarb
add
int
mov
lret
aam
or
stos
and
je
cmp
into
ja
sbb
scas
pushf
aam
ss
add
bound
fmuls
inc
push
pop
sub
dec
xor
push
dec
div
data16
dec
sbb
hlt
mov
shrb
push
lahf
xchg
out
loope
enter
and
xchg
sub
in
sbb
pop
xor
ss
stos
fstpl
mov
xorb
mov
mov
data16
ror
push
addr16
int
lahf
xchg
cmp
mov
sub
push
xor
jg
xchg
fstpt
pop
pop
adc
xchg
data16
push
push
push
push
xchg
mov
adc
xchg
pop
or
daa
popf
mov
dec
xor
xchg
rol
xlat
ds
test
add
lods
mov
ljmp
dec
popf
mov
aaa
insb
mov
mov
std
mov
push
jmp
sbb
jl
aas
and
lahf
cmpsb
mov
sbb
adc
pushf
adc
jge
mov
loope
orl
addr16
mov
dec
add
mov
cmpsb
inc
sub
lds
pushf
bound
inc
push
cmp
dec
dec
adc
push
aaa
addb
sbb
arpl
outsb
dec
arpl
sub
and
repnz
adc
scas
das
pusha
mov
mov
dec
lods
rcl
cmp
lods
mull
sub
jns
in
lcall
mov
sbb
aas
rcl
xor
and
push
ror
mov
test
push
push
fisubrl
js
call
popa
push
je
out
movsb
or
arpl
test
fdiv
add
cmpsl
jmp
arpl
push
xorl
pop
sbb
mov
adc
sub
lea
shlb
fucom
test
ret
or
test
pusha
sti
xchg
loop
js
cs
push
mov
stc
fstps
in
add
ljmp
imul
test
ds
add
mov
jl
incb
stos
xor
add
ds
shll
push
and
pop
jo
roll
mov
dec
mov
imul
or
cmpsb
cli
stc
addb
stos
iret
sbb
icebp
sub
lretw
or
and
mov
cmpb
lret
ret
dec
pop
pop
mov
and
int3
or
add
jl
xorl
xor
cmp
xor
loopne
stos
push
jl
xchg
outsl
push
jno
out
sub
fiaddl
xchg
mov
jnp
lock
dec
push
incb
lock
aad
and
scas
enter
fs
add
cmpsb
mov
loopne
xchg
mov
push
cmc
and
and
ret
rep
xchg
movsb
jns
das
aad
shl
fisttps
xchg
in
and
test
xor
hlt
sub
out
shr
add
mov
mov
sub
mov
jae
mov
sub
mov
inc
sub
mov
add
dec
stos
cmp
mov
jo
stc
xchg
je
lods
out
test
icebp
cmp
sub
pop
cli
cld
xchg
jmp
xlat
jae
lock
in
jo
pop
sti
cmp
cmpsl
xchg
fcomps
jno
mov
clc
aad
in
cmp
or
or
in
jbe
jle
insl
and
int3
and
xchg
stos
sbb
and
ret
push
loope
shrb
xchg
pop
movsb
call
adc
pushf
movsl
pop
or
cwtl
jecxz
pop
repz
cmp
pusha
daa
pop
shr
mov
pop
imulb
pop
pop
pavgw
scas
push
inc
adcl
fldt
jl
rcrb
jo
mov
xchg
xchg
xchg
mov
push
mov
cmp
out
repnz
inc
jge
arpl
aaa
nop
fnsave
dec
sbb
inc
rorb
and
jb
mov
sbb
xchg
pause
fwait
xor
mov
pop
cmp
mov
dec
into
stc
push
dec
push
test
testl
cli
andl
inc
pop
pop
mov
sub
adc
fcmovnb
aad
subl
push
mov
sub
mov
imul
mov
inc
cmp
pushf
cmp
dec
jo
movsb
mov
test
in
iret
mov
pusha
xchg
sub
nop
adc
ss
leave
inc
push
mov
adc
jg
js
mull
dec
and
pushf
sbb
stos
into
int3
fdivl
sbb
push
add
cmpsl
mov
push
mov
iret
hlt
and
sub
adc
jmp
dec
xchg
div
pop
arpl
xor
hlt
loopew
out
cmp
mov
xor
bswap
out
push
scas
mov
or
xchg
adc
orl
lds
out
cmp
fucom
jmp
jmp
addr16
xchg
lcall
mov
pop
rorb
mov
cmp
jmp
or
sarb
adc
call
arpl
sub
sbb
xchg
stos
dec
div
pop
pop
push
leave
jge
add
xchg
or
mov
jge
mov
bound
out
and
das
or
enter
cmc
xor
mov
xor
dec
xchg
add
hlt
popa
test
fisubrl
xor
xor
das
stc
arpl
jo
out
xor
lret
mov
negl
xchg
lods
cmp
push
scas
push
ja
push
pusha
or
pop
jb
fsubrl
xchg
cmpsl
add
pop
lret
pushf
xchg
dec
imul
mov
add
imul
in
push
xor
in
inc
int3
das
mov
pop
inc
in
mov
notl
xlat
add
and
jbe
xor
dec
jae
movsb
dec
out
fstps
scas
push
xor
and
pop
pop
sbb
cmp
sub
in
pop
cld
jecxz
cltd
adc
push
pop
aad
adc
dec
stos
test
xor
sub
mov
add
dec
add
in
mov
or
jg
ljmp
sbb
inc
xchg
and
push
sbb
dec
pusha
and
test
in
in
cmp
jmp
cmp
addr16
mov
xlat
or
std
push
fxch
mov
mov
cmp
in
jp,pn
loop
cli
inc
femms
imul
icebp
ss
iret
cli
mov
sub
lods
cld
fs
std
sbb
mov
nop
divb
sti
jno
pop
js
rol
popa
repz
js
addb
fchs
fildl
dec
popa
xchg
fstl
into
pop
push
int
sub
es
das
insl
push
xor
lods
jg
jb
dec
xor
cmpl
and
out
push
push
add
mov
je
in
xchg
mov
mov
mov
fimuls
xor
int
call
adc
in
popf
mov
inc
fcoms
mov
sbbl
out
mov
notb
nopl
test
mov
test
notb
in
lret
ja
fchs
pop
add
leave
mov
outsl
addr16
cltd
xchg
addr16
fdivl
mov
insl
int3
test
lret
mov
jl
in
xor
mov
nop
loope
insb
adc
in
pusha
cmp
sub
jge
shll
adc
in
inc
cmc
fs
imul
cmp
push
or
push
test
outsb
clc
xor
faddl
or
fisubrs
insl
int3
mov
lret
rolb
sbb
push
imul
cmp
jne
enter
xlat
enter
loopne
xor
out
lods
orl
xchg
mov
add
or
jl
push
cmpsb
addl
or
jge
xchg
or
add
or
or
aaa
ss
ja
adc
je
sahf
inc
mov
mov
jle
inc
push
repz
stos
and
dec
or
push
lcall
lcall
js
and
cmpsb
adc
mov
or
mov
fsts
pop
add
and
sub
mov
js
pop
lcall
out
aad
mov
sub
jae
xor
mov
rclb
jg
inc
ds
test
inc
lcall
inc
cs
fcoms
daa
inc
pop
les
cmp
popf
lods
pop
cmc
add
stc
inc
inc
dec
jg
sbb
xchg
int3
outsl
add
orb
popf
add
aad
push
pop
test
lea
jge
cld
cmpsl
dec
daa
mov
xchg
arpl
jb
pop
push
push
aam
mov
cmp
cmp
adc
mov
xchg
aad
es
ss
repnz
pop
ljmp
fdivrl
gs
in
add
fadds
movsl
cmc
jne
sbb
cmc
test
xor
jb
aaa
pop
xor
jle
insl
sahf
lcall
dec
les
stc
mov
das
sti
test
sti
and
loop
cmp
pushf
negl
mov
lock
loope
jb
add
bnd
enter
rorl
cmp
gs
dec
clc
jge
nop
push
imul
stos
sbbb
sbb
je
jg
dec
sub
add
mov
sub
and
je
and
mov
rorb
insb
mov
inc
lds
pop
lds
cs
jmp
fninit
shrl
leave
ret
int3
xchg
idivl
pop
bound
or
sbb
push
pop
mov
jnp
mov
mov
loop
aas
out
pop
in
imul
xchg
push
and
cmp
sub
cwtl
daa
fcoms
dec
mov
stos
push
mov
mov
sub
lods
mov
xor
push
push
imul
hlt
push
mov
out
and
test
lea
and
lea
out
stos
cld
jnp
add
ja
cmp
add
sbb
call
jp
jmp
or
xchg
inc
lea
in
dec
xor
mov
push
or
add
call
sub
pushf
sbb
pop
jp
in
int
cwtl
mov
mov
cmpsb
adc
add
nop
pop
les
dec
cltd
lret
je
sub
inc
loopne
dec
outsl
jmp
push
push
xchg
pop
and
and
adc
mov
push
cmp
je
mov
out
loope
sarb
andb
inc
dec
aad
les
lds
sbb
data16
xchg
jne
mov
xor
xchg
pop
and
ljmp
js
xor
test
add
push
aad
push
hlt
das
or
mov
repz
jnp
add
jbe
popf
mov
inc
lahf
jne
test
xor
cwtl
daa
mov
xor
lahf
nop
mov
mov
fistps
imul
call
sti
inc
pop
outsb
cmp
fsubrs
stc
pusha
mov
leave
and
lret
mov
mov
test
ret
jns
mov
mov
and
mov
mov
jb
mov
xchg
mov
push
bound
mov
stos
out
jnp
mov
jecxz
mov
adc
lret
dec
aad
stos
out
xchg
bound
ret
push
jl
mov
dec
cmp
cmp
cmpsl
mov
dec
push
xor
inc
call
inc
mov
sub
and
xlat
xor
and
out
loop
xor
add
cmc
iret
cmp
fdivs
fcmovnu
cmpsb
push
mov
pop
dec
push
xor
sub
ret
rorl
insl
sbb
pop
jl,pn
mov
mov
cwtl
leave
push
outsb
das
ret
repnz
dec
das
jl
ljmp
aas
repnz
stos
fidivrl
cmp
mov
mov
enter
pop
jmp
jmp
ljmp
inc
test
push
js
jmp
xchg
push
call
mov
pop
int
scas
xlat
divl
jmp
fbld
fildll
in
add
jecxz
add
xchg
sti
add
push
pop
ds
xor
addr16
aaa
push
xchg
pop
mov
lret
mov
dec
sahf
xor
xchg
adc
sub
out
cs
addr16
or
inc
loope
test
fldl
mov
movl
scas
insb
mov
loope
outsl
shl
pusha
sti
add
jmp
rorl
push
inc
cli
adc
adcl
jo
in
outsb
dec
xchg
mov
add
loop
shlb
add
xor
cmp
mov
and
sbb
mov
sbb
out
xchg
jg
add
xchg
mov
push
push
stc
pop
push
pop
cmc
lock
add
jae
aas
ret
int
adc
jne
enter
mov
jae
jb
pusha
rcll
imull
sub
loop
xor
sub
in
and
scas
daa
add
sbb
movb
xchg
lods
jno
lds
fcompl
push
fistl
add
push
andl
or
adc
idiv
mov
mov
in
not
fisttpl
push
xchg
pop
inc
adc
jb
loopne
fistl
outsl
in
outsb
xchg
lret
sub
pop
loop
lahf
fcomps
sbb
rolb
into
sbb
fildl
ret
jns
popf
jb
insb
cmp
popa
mov
in
sub
imulb
iret
les
push
xlat
test
in
jle
push
int3
dec
pop
push
aad
xchg
add
dec
inc
sbb
lret
fprem1
fcompp
inc
mov
shl
mov
adc
in
lds
lret
dec
int
adc
jg
fcompl
imul
mov
lcall
mov
or
mov
or
dec
insl
in
push
xchg
cmpsb
and
add
jne
fidivrs
pop
pop
aaa
in
rcr
js
inc
mov
sub
out
das
push
pop
jns
aad
jnp
testb
xchg
es
adc
into
pop
inc
or
xor
mov
das
mov
pop
sbb
dec
out
out
fistl
cmp
pushf
pop
arpl
fiaddl
pop
jecxz
xchg
xor
pop
icebp
inc
cltd
dec
fucomp
test
daa
push
movsl
aad
aas
pusha
pop
addl
xchg
xchg
xrelease
push
dec
dec
jne
xor
cs
les
adc
cmp
sbb
leave
lahf
sub
mov
sbb
push
xchg
loope
add
push
or
xchg
sbb
mov
xlat
lret
lret
sbb
mov
fimull
mov
inc
sbb
or
pop
push
push
ljmp
popa
loopne
mov
lods
jnp
les
out
xor
into
xchg
test
inc
cmp
inc
clc
and
hlt
add
fs
jo
jecxz
lret
out
xchg
xor
in
cmp
clc
xor
sbb
xlat
out
scas
push
jne
push
mov
fnstcw
add
neg
mov
arpl
mov
adc
pop
push
cmpsb
jecxz
jmp
aas
sarl
les
jmp
xchg
insl
sub
sbb
ficomps
jecxz
dec
int3
pop
scas
cli
xchg
cld
inc
xorl
mov
jne
add
xor
pop
push
int
bnd
in
and
lods
inc
stos
out
insl
inc
lahf
dec
mov
inc
mov
inc
movsl
adc
pop
movsb
xchg
mov
mov
sub
ret
lcall
cmp
stos
arpl
adc
sarl
shrb
faddl
notb
inc
inc
mov
sub
and
push
jnp
fs
lcall
bound
out
test
insl
push
sub
cltd
imul
xchg
ret
fstpl
out
pop
lret
sbb
call
cmp
ljmp
xchg
dec
jb
test
sbb
dec
int
push
popa
andb
pop
adc
clc
in
test
fldenv
std
mov
push
and
adc
int
jb
lea
js
jbe
push
mov
fiaddl
sub
sbbb
xchg
adc
jo
jns
and
aas
loopne
mov
dec
xor
dec
xchg
and
sub
call
cmp
and
jae
nop
inc
inc
in
adc
jl
push
push
cli
pusha
lret
push
cmc
fsubrs
subb
cld
hlt
fwait
add
cltd
ret
adcl
add
inc
cmp
stc
rol
loope
inc
jne
mov
lea
insl
lds
adcl
loop
fists
loopne
rolb
push
dec
aaa
sbb
repz
call
mov
and
sub
out
cltd
fdivs
dec
fs
mov
outsl
jl
cltd
inc
sub
push
sbb
add
inc
loopne
imul
xor
mov
clc
jmp
pop
pop
dec
scas
lods
and
mov
repnz
into
or
rolb
add
add
mov
sahf
sarl
fnstenv
mov
incl
push
jmp
add
inc
adc
jmp
pop
jo
repz
inc
scas
std
inc
mov
mov
fdivrl
fbld
add
lret
push
mov
int
push
gs
or
sub
fwait
gs
add
outsb
xor
data16
loop
mov
data16
loop
movsl
icebp
ficoml
lods
fs
mulb
imul
jmp
daa
out
dec
push
push
mov
fidivs
cmp
sub
rorl
pop
aaa
pushf
jle
shlb
pop
or
jbe
and
dec
inc
ds
je
xor
add
xor
adc
mov
dec
sub
popf
aaa
daa
inc
rcrb
mov
lahf
movsl
fldenv
and
jmp
sahf
xlat
rcrb
xor
stc
jne
cmp
sbb
pop
test
mov
adc
sbb
es
sub
dec
xchg
sbb
mov
and
std
dec
dec
aam
xor
inc
iret
jb
pop
cmp
lcall
push
adc
add
adc
in
lods
shl
push
jae
cmp
cs
lods
sub
aaa
sbb
hlt
out
push
jne
js
jae
lock
xor
sti
imul
push
outsb
out
cmp
and
push
jl
jmp
fwait
repz
sahf
je
pushf
jp
inc
lods
sti
mov
data16
lret
les
pop
les
push
xchg
jge
lock
pop
dec
loop
out
mov
cmpsl
adc
mov
call
cmp
adc
test
movsb
xchg
mov
sub
inc
mov
aam
mov
mov
lods
call
mov
in
mov
stos
inc
or
mov
jnp
sbb
push
add
and
push
adc
and
sbbl
or
and
mov
or
lea
mov
or
mov
xor
fcmovnu
pop
pushl
pop
pop
lret
mov
mov
inc
dec
cmp
add
jns
dec
cmp
xchg
pop
outsl
pop
sarb
adc
inc
push
and
add
inc
pop
in
mov
pop
push
mov
dec
and
sub
call
idivl
sub
adc
sbb
xor
and
jbe
in
scas
push
addr16
jp
cmp
dec
jno
xorb
std
repz
movsl
in
xchg
insb
cmp
cmpsl
inc
mov
lea
pop
adc
movsl
push
subb
ljmp
inc
mov
stos
adc
adc
or
inc
or
in
mov
ret
mov
sbb
add
mov
jle
icebp
mov
jb
cmp
icebp
ffree
inc
into
dec
scas
pusha
sbb
mov
inc
dec
sbb
inc
arpl
jmp
jo
loop
jl
subl
rcrl
jnp
pop
lods
jnp
outsb
insb
pop
sub
aas
or
cs
popa
lret
insl
cld
lret
adc
dec
add
xchg
out
mov
and
insl
mov
std
push
push
and
xorb
imul
in
fs
push
outsl
aad
mov
push
ret
cmp
lds
fs
lahf
pop
add
xchg
addr16
or
jne
pusha
push
shlb
test
mov
pushf
adc
xchg
js
add
imul
fldcw
bnd
popa
mov
push
fldcw
dec
xchg
fdivp
jnp
sub
cli
add
sbb
lock
jmp
lcall
and
outsl
pushf
stc
nop
mov
or
sbb
subl
jae
int
adc
mov
xor
push
mov
mov
xchg
mov
inc
faddp
bound
repnz
dec
mov
jbe
push
xchg
sub
push
test
sub
cmp
or
icebp
cmp
cltd
mov
das
cmpsl
cli
sbb
mov
xchg
xchg
out
pop
repz
adc
ror
add
pushf
mov
cltd
in
pop
jl
movb
jnp
das
or
pop
in
test
fnstenv
jo
out
shll
mov
mov
mov
push
in
cmp
inc
out
test
xchg
mov
mov
xor
add
mov
adc
std
and
mov
lcall
adc
mov
pop
test
stc
push
or
fnstcw
jno
dec
adc
and
adc
mov
test
dec
mov
fwait
inc
push
push
aaa
mov
mov
les
inc
adc
jl
push
data16
out
dec
sub
outsb
mov
mov
in
negl
nop
mov
mov
or
ret
mov
push
jne
in
adc
sbb
pop
loop
add
push
xchg
subl
imul
aas
jge
xchg
pushf
push
dec
out
out
in
fcmovbe
aaa
out
jle
pop
movsb
jnp
mov
pop
or
dec
mov
jno
stos
gs
addr16
xchg
mov
hlt
repz
ret
xor
add
mov
hlt
or
lods
push
movsl
inc
mov
arpl
pop
push
mov
fldenv
jne
or
push
mov
mov
jnp
rolb
pop
outsb
inc
and
cltd
arpl
adc
and
pop
jbe
push
enter
test
testb
in
mov
dec
dec
add
push
and
or
push
dec
in
sar
sbb
lea
mov
fabs
mov
pusha
fists
popa
push
sbb
in
mov
repz
int
ja
aad
hlt
cltd
lret
test
jo
out
aas
in
xchg
xlat
mov
in
scas
push
adc
mov
jb
jg
out
dec
cld
mov
mov
pop
mov
cmp
cld
pop
out
cmp
cs
sbb
repnz
loopne
sbb
les
sahf
out
lock
test
lret
cmpsl
cmpsb
outsl
cwtl
lcall
push
movsl
push
mov
and
mov
hlt
rorl
sbb
pop
sbb
dec
jmp
mov
stos
ret
daa
mov
cmovno
adc
shr
sbb
dec
loop
scas
gs
or
and
fidivl
and
hlt
lds
adc
lea
pop
xchg
jns
aaa
rcrl
clc
add
stc
bnd
cltd
flds
imul
sub
sbb
inc
inc
scas
dec
push
or
test
mov
mov
test
cs
xchg
fisubrs
mov
mov
pop
or
in
ret
sbb
pop
jae
push
mov
mov
mov
add
cmpsb
mov
test
ret
mov
cli
adc
sub
mov
jo
or
mov
lods
jle
or
push
mov
scas
jl
sub
call
sbb
fmull
xchg
adc
sbb
or
cmp
mov
ja
fmull
ss
stos
xor
or
addb
mov
jo,pn
jae
mov
leave
loope
xchg
xor
rcrl
cltd
movsb
mov
imul
inc
add
xlat
xor
sahf
jg
stos
jg
dec
fistps
popa
stos
sbb
shlb
loope
push
inc
les
mov
cmc
in
ds
iret
dec
int3
push
imul
aam
lods
mov
cmp
or
in
jge
push
jmp
sahf
call
roll
cltd
mov
jnp
pop
or
ja
lret
jbe
jl
lret
dec
jns
dec
jecxz
ret
loope
push
aas
jb
jp
mov
and
test
pusha
cmp
xlat
sub
dec
mov
lret
xchg
sub
push
push
int3
cmpl
scas
sbb
lock
sbb
mov
popf
xor
aam
inc
and
inc
sbb
test
jno
adc
cmp
sub
pop
orl
leave
and
imul
inc
ja
pop
push
pushf
bnd
mov
shlb
mov
pop
enter
mov
mov
pusha
pop
cltd
je
scas
jmp
mov
sub
mov
in
mov
and
and
js
dec
lods
stos
js
fs
xor
sub
push
add
js
jmp
push
pop
fsubrs
out
cmp
pop
in
cmp
adc
iret
jmp
fdivrs
outsb
mov
pop
enter
xor
inc
out
loope
push
sub
js
add
and
nop
sbb
adc
cmpb
dec
in
push
mov
fisttpll
push
ret
lcall
loopne
xchg
insl
dec
xchg
xor
pop
shrb
sarl
in
cmp
popl
adc
cmp
test
sbb
mov
xlat
in
mov
sub
inc
fneni(8087
cld
test
out
push
cld
sbbl
xor
popf
clc
xlat
iret
imul
cmpsb
fimuls
sbb
dec
aaa
lret
or
test
lret
int3
adc
mov
xchg
in
jbe
cmp
xchg
sub
rcrl
ret
call
stc
lods
pushf
gs
popf
cmp
in
fs
lea
iret
push
lock
adc
icebp
ds
mov
dec
data16
std
int3
pop
mov
cmp
add
imul
andb
fisubrs
roll
dec
aam
pop
pop
push
dec
sub
insb
xchg
iret
aad
addr16
dec
xchg
fsubrs
dec
cmc
cmc
jae
js
aam
push
jle
das
pusha
sbb
lds
icebp
stc
es
add
mov
pop
stc
and
or
call
es
dec
sbb
ret
insb
test
mov
inc
pop
ja
sbb
and
push
xor
cmp
cwtl
sbb
pop
aam
and
and
mov
ret
mov
mov
mov
inc
scas
ljmp
sbb
jecxz
pop
add
in
addb
nop
movsl
push
xchg
std
in
out
cmpsl
adc
and
xor
popf
adc
inc
into
sbb
nop
std
aas
pop
xor
cmp
das
cmc
out
lea
xor
addr16
ljmp
mov
sbb
sbb
or
lock
and
movsb
push
ss
pop
outsb
sbb
mov
jne
xor
stos
push
out
jb
loopne
xchg
push
add
pop
fsqrt
or
pop
dec
movsb
ficoml
xor
and
mov
jg
mov
xor
sub
mulb
outsl
stc
in
xor
lock
lds
adc
push
clc
xor
pusha
or
mov
fcmovnb
jmp
xlat
stos
fs
dec
jecxz
bswap
in
push
cwtl
cli
inc
sub
movsl
mov
movsl
mov
int3
mov
movsl
mov
imul
add
in
mov
sub
mov
aas
movsb
xor
sbb
dec
push
sbb
jae
outsl
adc
outsb
sti
xchg
mov
rcrb
adc
int
xchg
xor
mov
lea
out
pop
lods
adc
shll
xor
dec
push
or
pop
pop
cmp
adcl
push
lahf
in
fcomps
push
mov
dec
stos
push
loop
sub
cmpsl
xlat
icebp
ret
lret
sbb
call
loop
dec
lcall
xchg
jmp
cli
scas
insb
or
ja
xor
mov
xlat
fs
addl
cmp
ja
sub
adc
shlb
pop
lcall
xchg
sbb
inc
or
hlt
loopne
not
iret
ret
pop
sbb
test
out
mov
lds
in
cmp
xor
add
mov
pop
imul
fisubrs
jo
insl
outsb
mov
push
je
test
in
mov
iret
xchg
cmpsb
adcb
test
add
mov
or
xchg
sub
stc
test
stos
rcr
push
out
pop
loop
mov
push
hlt
or
insl
and
shl
shl
inc
rorb
mov
jnp
lods
lods
cmpsb
mov
and
cmp
movsl
je
pop
mov
xchg
or
shlb
popf
or
das
out
clc
pop
mov
and
or
sbbb
dec
mov
sbb
mov
sub
sub
notb
sub
mov
pop
mov
xchg
stc
push
xchg
das
test
or
mov
pop
or
mov
cmp
int3
int
add
or
cltd
pop
xor
test
sub
lret
inc
sub
mov
test
and
fistps
xor
shl
pop
xor
outsb
or
xchg
fnsave
out
iret
cmpsl
pop
aad
out
lods
pop
fcmovnbe
scas
notl
mov
fisubl
sub
or
mov
jp
sub
pop
dec
jmp
xchg
clc
es
and
outsb
adc
leave
movsb
inc
mov
mov
dec
fldcw
add
cmp
mov
repnz
push
or
daa
mov
mov
test
or
push
pop
xor
dec
orl
xchg
xchg
jbe
movsb
ret
fisubs
cwtl
leave
enter
mov
gs
std
mov
aad
gs
ljmp
cmp
hlt
dec
xorl
iret
rcrb
add
sbb
lcall
mov
pop
hlt
inc
in
sbb
ret
inc
nop
or
incl
xor
push
lds
sub
stc
pusha
or
mov
addb
or
push
xchg
in
xor
cmp
pop
xchg
xchg
rcl
and
pusha
mov
pushf
arpl
aad
mov
mov
mov
mov
repz
xlat
adc
cmpsl
push
and
add
adc
ljmp
push
and
mov
in
cltd
mov
pop
das
mov
pop
gs
add
mov
or
movsb
mov
aas
xchg
enter
loopne
or
cmc
ret
sbb
sbb
sti
and
adc
xlat
imul
flds
pop
push
pop
mov
popa
shll
adc
xchg
in
mov
inc
outsb
pop
add
faddp
inc
leave
mov
add
and
push
xchg
shrb
push
pop
lds
rcr
push
and
jp
inc
fistps
xorl
xor
inc
test
incl
negl
ja
daa
inc
pusha
xor
pushf
clc
or
add
outsl
roll
fdivs
cmp
mov
sub
push
sbb
sarl
adc
out
dec
adc
in
lods
repz
cmpsb
adc
fldt
enter
ror
sub
cmp
mov
rol
sub
add
push
rep
lcall
dec
xchg
mov
add
mov
fisubs
movsb
and
inc
cmpsl
mov
inc
cmp
leave
out
inc
mov
cmp
aam
enter
adc
adc
js
jge
or
mov
pop
and
pop
fistpl
push
cwtl
or
mov
insb
or
and
push
mov
sbb
pop
mov
ret
test
in
aam
cmp
js
mov
int
dec
lret
popl
pusha
into
insl
pop
daa
dec
xchg
push
pusha
and
add
and
mov
out
mov
or
push
inc
push
cmp
rcll
mov
mov
scas
jmp
cs
sbb
and
insb
mov
mov
xor
orb
sub
and
mov
add
mov
mov
and
nop
sub
cmp
push
jae
daa
stc
inc
lea
neg
push
xor
and
lock
lret
sub
jmp
jne
fiaddl
mov
lods
mov
dec
add
push
xchg
dec
xchg
daa
mov
scas
loope
loop
sbb
fwait
push
lds
mov
add
pop
dec
outsb
lds
cmp
imul
dec
push
jns
rcrb
or
inc
frstor
popa
movsl
xor
push
xchg
mov
repz
ljmp
mov
fsts
sbb
iret
sub
fbld
lods
movsb
bound
xchg
jo
sub
cmp
adc
test
push
mov
imul
test
cmp
mov
add
jae
clc
jle
xchg
shrb
ret
cwtl
das
adc
jb
xchg
xchg
loopne
xchg
adc
arpl
mov
ret
mov
aam
std
push
cwtl
and
xor
icebp
or
jae
push
stos
pushf
out
pop
mov
ljmp
jmp
out
mov
subl
xchg
lret
hlt
and
cli
out
add
push
shll
insb
xchg
push
push
lds
scas
xor
pop
shl
adc
or
shr
test
mov
and
adc
jnp
mov
jno
add
or
sbb
test
pop
jo
rclb
inc
outsl
in
dec
jmp
or
shl
pushw
xor
in
mov
or
test
jnp
nop
mov
lock
lcall
out
push
jmp
or
lret
pop
mov
and
out
fists
sbb
in
ss
lahf
cwtl
in
lea
test
inc
outsb
insl
gs
aas
stos
dec
scas
add
sahf
adc
lret
xor
xchg
jne
jb,pt
clc
fs
xchg
sub
inc
stos
add
in
rclb
clc
nop
xchg
mov
jg
dec
lcall
jne
aam
and
iret
and
insb
inc
icebp
mov
or
xorl
mov
add
loopne
or
js
fs
aad
xchg
or
ret
in
cmp
dec
lods
lods
shl
dec
or
dec
in
pop
fistps
or
icebp
jecxz
mov
in
lods
pop
or
or
imul
pop
inc
loope
xchg
mov
bound
sub
inc
mov
mov
daa
lcall
outsl
rcrb
inc
lods
add
fnsave
ret
xor
add
jl
fiadds
movsb
mov
fs
clc
imul
lea
pop
flds
adc
push
sbb
pop
push
les
das
iret
call
inc
test
sub
int
or
pusha
add
stos
and
jb
sbb
movsb
cmp
or
xchg
insb
icebp
pop
in
ret
fistl
hlt
jg
clc
add
int3
sub
jno
les
test
add
fwait
out
mov
in
ror
xchg
add
cld
inc
jae
lods
pop
daa
lcall
scas
pushf
in
arpl
xchg
test
iret
adc
xchg
push
sbb
xor
lds
pushf
jmp
and
rcr
in
mov
out
pop
sarb
sub
xor
arpl
jno
sahf
jle
int
inc
push
xor
out
or
fists
out
push
pop
dec
jb
adc
mov
lahf
ret
xchg
outsl
fnstenv
mov
xor
imul
jnp
pop
imul
jmp
mov
lds
popa
insb
mov
push
outsb
xchg
lea
mov
in
clc
cld
cmp
cmp
rcll
rcll
and
xchg
cmp
sbb
lea
pop
mov
xchg
rcr
or
sbb
outsb
jp
xor
pop
push
lods
push
pop
test
mov
sti
mov
mov
mov
mov
fdivl
outsb
mov
fstpl
les
movsb
in
pop
in
inc
jb
cmc
sbb
pop
cli
in
fwait
cmp
push
cmp
jg
xchg
pop
mov
sub
aad
dec
ss
adc
push
leave
sbb
pushf
imul
mov
sub
dec
rep
cwtl
test
cwtl
shll
or
sub
sbb
in
xorb
mov
out
inc
pop
or
mov
aas
or
pusha
mov
fisubrs
mov
nop
clc
inc
imul
and
mov
and
hlt
cmpsl
repnz
cltd
or
dec
imul
enter
out
pop
cld
mov
add
pop
mov
jecxz
or
pop
xchg
adc
fmul
inc
add
inc
or
adc
repz
and
imul
call
sub
test
mov
addr16
movsl
lret
cli
jg
test
cmp
mov
rolb
jno
test
mov
loop
fldcw
popa
cwtl
clc
int
add
repnz
xor
js
add
jbe
dec
lret
mov
adc
inc
ds
movsb
xchg
sbb
sbb
mov
iret
rcr
inc
sub
out
and
popa
js
fwait
gs
test
leave
jmp
notb
test
cmpxchg
cmpsb
out
cmp
ret
sti
add
inc
test
jle
mov
jb
mov
pop
inc
ret
xorb
fs
sbb
int
adc
lar
fisubrs
ret
jge
dec
fs
sarl
jo
inc
push
ret
addb
testb
add
sbb
int3
fistpl
add
mov
cmp
xchg
mov
mov
test
scas
inc
mov
loopne
inc
xchg
dec
popa
xchg
dec
inc
xchg
test
sti
stos
xchg
jmp
fs
xchg
pop
ss
in
pop
hlt
add
stc
xor
stos
pop
mov
insl
xchg
push
mov
and
rcrl
lock
je
jge
lods
adc
mov
mov
jo
inc
std
xor
mov
cli
and
cltd
cmp
xchg
out
xchg
fbstp
mov
adc
jg
mov
adc
jae
lret
out
data16
mov
mov
cmp
push
jb
ds
add
lock
movsl
incl
in
xor
and
pop
inc
sti
jge
push
mov
adc
pop
sbb
xchg
fistps
mov
mov
xchg
inc
adc
test
add
pop
movsl
sbb
pop
xchg
scas
pop
mov
inc
inc
sbbb
adc
jle
std
jnp
cmp
xlat
pop
aaa
outsl
cmp
jns
add
jne
mov
mov
jl
in
and
aam
dec
mov
sbb
sbb
aam
cmpsl
mov
inc
pop
jno
xchg
testb
sbb
mov
std
adc
mov
bound
nop
push
daa
mov
jb
out
pusha
dec
or
inc
out
and
inc
dec
jae
inc
adc
mov
ss
sbb
enter
enter
cmpsl
mov
sbb
psubsw
push
push
pop
jne
cmp
push
nop
ret
cwtl
add
and
xchg
ds
ljmp
fs
cmp
mov
mov
sti
aad
jge
rep
or
push
mov
cmpsl
outsb
in
xchg
and
es
and
out
inc
test
jp
jle
sub
mov
fwait
test
inc
sbbl
lods
aas
mov
leave
and
pop
loope
pop
inc
loopne
dec
imull
cmp
cmp
lretw
jae
neg
mov
cmp
clc
pop
mov
daa
adc
ja
pop
lea
lret
ljmpw
or
negl
scas
shlb
jnp
fisubrl
jno
in
add
leave
out
sbb
mov
and
cmpsb
inc
pop
das
cmc
out
insl
jns
icebp
mov
icebp
mov
push
pop
xor
sbb
add
xor
scas
std
loopne
mov
in
and
fdivp
loop
arpl
xchg
lods
jbe
ds
pusha
insl
mov
add
sub
push
jp
cmp
pop
lahf
sub
vmovaps
push
sub
pop
aas
cmc
sbb
jo
in
jo
xor
aam
add
stos
cltd
jle
inc
mov
dec
cmc
movsl
std
and
lret
dec
inc
pop
mov
dec
pop
cli
aas
sbb
out
or
call
andb
popa
daa
popa
sti
orb
aas
pop
jo
sub
adc
ja
call
fwait
cmc
sub
js
std
sbb
lret
aam
mov
cwtl
movsl
push
leave
jbe
iret
stos
pusha
pop
lea
fisttpll
dec
or
mov
inc
xor
outsl
cli
out
fstpl
jo
sub
andl
mov
cltd
xlat
or
adc
out
stos
xchg
call
add
addr16
push
repnz
sbb
lret
fists
xlat
cmp
aaa
cmpsb
pusha
data16
adc
movsl
add
jbe
aad
or
sub
xor
pop
add
mov
lea
pop
jo
fimull
and
enter
adc
jns
add
out
jmp
fdivr
imul
and
adc
cmpl
imul
add
out
lret
mov
sub
sbb
add
or
push
shll
inc
jge
in
or
scas
push
mov
mov
aam
jae
pop
pushf
pop
dec
sub
mov
sub
adc
hlt
shrl
sub
jns
or
pop
inc
pop
sub
and
int3
stos
xor
jecxz
xchg
xchg
or
jb
mov
mov
push
orl
aaa
adc
das
inc
imul
stc
es
gs
pop
jno
ret
jo
sub
je
bound
sub
pop
xchg
or
int
fldcw
mov
pop
cld
or
push
sbb
inc
inc
popf
pop
mov
shr
jnp
cwtl
push
std
lcall
lahf
cmp
in
insl
jno
jne
in
lods
aas
and
imul
dec
xchg
ja
adc
mov
fidivl
repz
and
mov
stos
popf
xor
cmpsb
repz
loop
jns
pop
aas
cmovo
sbb
jo
outsb
rcr
mov
sahf
push
ds
mov
aas
dec
sbb
dec
sarl
jno
pusha
push
inc
lods
movsl
shlb
sbbb
inc
scas
mov
int
ja
cmpsl
call
call
add
sarb
in
and
mov
inc
test
ret
push
xchg
leave
jle
roll
lds
inc
jecxz
push
in
cmc
lcall
cltd
pop
pop
iret
sti
jp
es
int
adc
test
addb
ret
jle
xor
lock
cvtdq2ps
jle
jp
test
jge
or
into
lcall
icebp
in
cmp
ja
cmc
and
jbe
dec
mov
lds
fwait
xor
imul
push
and
icebp
rcll
sbb
pop
push
rcll
int3
pusha
push
pop
int
mov
clc
sub
scas
inc
pop
jne
push
mov
icebp
dec
pop
fildl
pop
jp
andps
icebp
cs
xor
in
je
xlat
out
cld
mov
push
mov
cld
sbb
lret
pop
and
push
fisttpll
mov
lea
mov
int3
stos
stos
cmp
sub
sbbl
lcall
and
aad
xor
inc
mov
and
sbb
mov
shrl
icebp
sbb
dec
ret
and
cmp
pop
add
mov
adc
insl
cmp
xor
jne
cs
dec
jp
jge
insb
cmp
jo
pop
movsl
adc
aaa
imul
in
and
xor
cld
popa
jle
popf
push
dec
insb
cmpsb
fwait
mov
test
fisttpl
imul
inc
dec
test
push
mov
cli
jnp
add
psllw
mov
push
sti
mov
inc
daa
int
mov
xor
gs
add
int3
mov
out
mov
inc
rcl
lcall
mov
pop
cwtl
mov
mov
fucompp
inc
loope
xlat
pop
jl
xchg
fldl
insl
rcr
cmc
jmp
pop
lcall
or
xchg
loopne
adc
jnp
xchg
in
mov
into
les
dec
lcall
inc
mov
or
dec
or
std
mov
adc
leave
aaa
pop
fcoml
bnd
movsl
and
xchg
imul
add
gs
cmpsl
dec
xchg
mov
sahf
and
imul
adc
cmp
mov
push
dec
out
sbb
adc
ret
mov
into
jg
es
test
cmp
insb
dec
outsb
and
jnp
imul
inc
test
sub
sarb
loopne
jo
or
aaa
std
pop
ljmp
mov
cmp
daa
mov
adc
mov
inc
dec
or
sbb
imul
insl
stc
mov
mov
adc
test
js
mov
cltd
cmp
mov
inc
sub
rcrb
xchg
nop
sbb
push
in
cwtl
mov
insl
ljmp
pop
ret
mov
sbb
mov
push
es
mov
mov
cmpsb
and
lods
jecxz
loopne
sahf
pop
lea
bound
ja
dec
jp
int3
lahf
outsb
jecxz
pop
cld
dec
cltd
loopne
sub
scas
mov
pop
fiadds
add
out
pop
lods
sbbb
sub
arpl
scas
popa
out
cmp
lcall
test
push
adc
cli
xchg
xor
stc
pop
insb
lea
repz
mov
adc
mov
xchg
xor
mov
aam
in
and
hlt
pushf
push
mull
sarb
fnstenv
test
cwtl
mov
xchg
rcll
mov
mov
aas
ss
and
std
lea
or
cmp
jge
jne
or
hlt
in
pop
arpl
adc
mov
mov
and
lcall
push
test
lods
aas
stos
or
sub
in
fldl
xlat
aam
addr16
push
xchg
adc
mov
sub
sub
int3
out
outsb
add
or
xor
fisubrs
mov
and
pop
mov
test
mov
adc
mov
icebp
bound
lcall
or
fimuls
jae
daa
pop
or
ljmp
mov
pop
jno
mov
ret
jmp
xor
sbb
int3
jl
movsb
mov
mov
add
mov
hlt
mov
roll
mov
sub
jnp
dec
fisubrl
jmp
dec
and
pop
data16
push
dec
dec
jmp
loopne
pop
pushf
push
adc
iret
outsl
pushf
mov
cmp
dec
push
lahf
in
jle
rcrb
and
xchg
push
lds
sbb
cltd
leave
sbb
dec
inc
add
out
cld
aas
add
mov
les
test
sub
stos
jno
add
stc
adc
out
and
sbb
sub
adc
dec
jecxz
xlat
shrb
dec
dec
nop
adc
mov
out
push
sub
mov
push
out
push
iret
popf
or
pop
mov
imul
mov
sub
fsubrl
insb
dec
inc
xchg
xor
das
sbb
icebp
fstpl
shrb
fadd
movsb
int3
std
cmp
jmp
ja
cmpl
test
cmp
mov
adc
sbb
sub
xor
cmpsb
or
jge
ror
mov
xlat
mov
mov
and
mov
iret
push
jbe
icebp
mov
inc
popf
fcom
jne
ret
lds
xor
jo
out
cwtl
int
and
jns
mov
loopne
jae
adc
hlt
lcall
sahf
test
lea
add
fistps
popa
xor
lcall
sub
int3
jle
inc
insl
jmp
hlt
mov
cwtl
inc
push
addr16
or
out
jmp
mov
fwait
pop
imul
lea
lcall
pop
mov
outsb
imulb
adc
or
cmp
xor
push
shrl
ds
jge
pop
xchg
sub
push
test
and
clc
leave
aaa
push
aaa
push
hlt
sti
ret
les
inc
out
cltd
int3
iret
mov
clc
loope
mov
push
test
pusha
jae
xchg
les
push
inc
dec
xor
sub
loope
insl
call
push
daa
icebp
lcall
stc
pop
mov
mov
aad
sbb
mulb
lcall
shrb
pop
aad
add
push
sbb
imul
dec
jg
shlb
push
adc
pop
enter
or
lret
cmp
fsts
and
bound
fcomip
sbb
daa
and
or
movsl
in
mov
imul
adc
les
pop
mov
movsb
loopne
outsl
fprem
lret
aad
test
outsb
xchg
push
test
mov
pslld
push
pusha
js
test
mov
or
es
lret
mov
loop
sbb
mov
adc
pop
lahf
pushf
jo
outsb
loop
fsubrl
bound
adc
shrb
scas
inc
xor
sbb
ja
pop
adc
lods
mov
or
aad
dec
loope
mov
cmp
ljmpw
lcall
lods
stc
dec
ds
pushf
int3
jnp
mov
or
mov
arpl
mov
loopne
ficompl
daa
push
xor
pop
sti
sbb
repz
or
inc
push
and
xor
clc
sub
loopne
xchg
mov
pop
jns
xchg
les
hlt
inc
mov
rorb
sbb
mulb
jl
enter
dec
xor
iret
jnp
mov
cmpsb
xchg
loope
or
push
jbe
popfw
fsubrs
or
mov
sbb
loop
add
int3
pusha
pop
xor
hlt
jne
or
add
movsl
pop
shl
lods
and
nop
dec
and
fwait
pop
repz
notl
dec
pop
insb
gs
jbe
hlt
push
insl
pop
dec
cwtl
mov
rcr
lods
lret
in
iret
aaa
jns
flds
lock
xor
mov
mov
add
test
dec
add
js
jge
sbb
xchg
fs
sub
data16
pop
mov
cmpl
or
push
mov
out
dec
push
mov
in
out
pop
rcl
imul
jle
mov
add
in
fnstcw
arpl
dec
mov
cmp
shrl
push
aam
cmp
xchg
hlt
hlt
jnp
or
sub
jg
push
addr16
adc
ret
xchg
push
int
cli
inc
shlb
loop
jg
ror
mov
pop
jne
pop
add
jnp
arpl
jp
aaa
int3
or
je
daa
test
out
pop
mov
mov
leave
mov
jg
and
or
cmp
push
mov
dec
cltd
push
jb
jnp
stos
jae
hlt
sub
jnp
mov
xor
imul
loope
mov
cld
mov
and
mov
ss
cmp
stos
mov
pop
add
mull
sbb
repnz
in
add
mov
scas
xor
lahf
popa
sub
lahf
xchg
push
in
jbe
mov
bound
mov
sbb
push
popf
or
push
lcall
out
lods
movsl
mov
xor
mov
in
dec
fcomps
dec
jecxz
jge
fsubrs
inc
mov
push
xchg
pop
clc
mov
and
pushf
dec
sbb
inc
je
xchg
jo
stos
lret
jg
sbb
cmp
ret
ret
imul
fcmovne
cld
imul
mov
xor
divl
pop
rcrl
push
int
push
fstpt
mov
or
push
stos
dec
jo
lock
out
adc
fmull
in
xchg
aam
lods
jl
push
xchg
jb
mov
rorl
mov
cld
loopne
adc
xor
leave
push
push
hlt
sar
jbe
imul
ret
test
adc
das
cmp
jns
call
inc
jle
scas
pop
pop
cli
mov
xchg
mov
int
xor
testb
ljmp
daa
cs
mov
push
mov
xor
cmp
addr16
mov
outsb
jg
sahf
jo
fxch
ds
imul
popa
shll
or
cmpsl
aam
shrl
pusha
out
stc
push
popa
dec
jl
adc
mov
cld
lock
fdivrp
int
xchg
and
sahf
mov
lods
out
bound
lret
bound
aas
ja
rolb
popa
fcmove
jnp
ret
mov
bound
dec
iret
xor
and
mul
push
mov
in
sub
sbb
cmp
inc
cmp
inc
out
push
es
and
inc
sbb
adc
aas
mov
mov
loop
add
jle
push
mov
cs
aam
cld
out
movsb
addr16
movsl
cmp
mov
sahf
mov
dec
pusha
mov
fsubrp
mov
xchg
push
sub
and
ret
push
in
cmp
xor
xor
push
cltd
dec
out
push
gs
push
jecxz
push
add
mov
int3
xchg
pop
stos
sub
and
or
insl
in
push
enter
jae
cli
adc
outsb
in
test
mov
icebp
mov
sti
cmp
das
shll
inc
js
pop
jge
jo
nop
rcll
lret
lods
in
arpl
imul
test
mov
push
push
fnstsw
sbb
arpl
pop
jle
fisubrs
lahf
jmp
mov
mov
pushf
mov
fwait
jecxz
test
stc
xor
ret
add
jns
das
add
movsb
int
lcall
pop
lea
inc
jns
push
test
or
inc
test
stc
sub
and
add
push
and
aad
aaa
cmp
rep
jg
mov
xchg
push
or
xlat
mov
mov
fst
jnp
aad
in
leave
push
pop
sub
pop
push
push
push
fiaddl
rorb
adcl
ja
pop
mov
cmpsb
mov
mov
cmp
daa
fimull
inc
repz
jne
push
outsl
push
add
push
mov
in
shrb
fcmovne
dec
xchg
sub
ret
mov
push
jge
mov
and
into
enter
lcall
test
popf
outsl
icebp
mov
mov
sbb
sub
add
lcall
insl
orl
outsl
sahf
or
mov
pop
bound
adc
adc
xchg
or
jecxz
ret
mov
mov
inc
lea
mov
dec
dec
mov
or
adc
mov
fwait
jae
adc
lods
xchg
jnp
mov
daa
adc
or
dec
jb
ljmp
adcl
loopne
sub
int
sbb
outsl
popa
dec
je
cmp
inc
nop
dec
add
adc
push
push
lock
pusha
or
aaa
jb
aaa
cmp
repz
call
xor
and
pop
sbb
rcl
lds
sbb
out
adc
aaa
jnp
inc
xchg
or
data16
add
sahf
and
cltd
addl
jb
cmpsb
adc
test
push
jnp
pusha
xor
fucomi
mov
push
idivl
int
dec
xchg
cmp
pop
pushf
je
jg
loopne
xor
out
sbb
mov
push
adc
xorb
and
dec
xchg
addr16
sbb
aam
outsb
cmp
or
jno
push
andb
inc
cmp
stc
pusha
jnp
dec
add
insb
out
bound
lock
xchg
fmulp
push
add
subl
sbb
xchg
hlt
pusha
sbb
jecxz
popf
adc
jmp
daa
js
dec
and
jbe
rorl
xchg
jl
pop
fstl
out
fisubl
adc
pop
cmpl
cmp
xor
outsb
cmp
mov
mov
mov
sbb
les
aas
or
cmp
ljmp
pusha
add
jl
push
mov
shlb
jge
lds
jne
movsl
push
push
push
mov
test
ja
xorb
add
inc
aam
repz
loope
adc
lret
and
xchg
and
test
inc
adc
cmp
xchg
or
sub
lds
in
mov
out
pushf
mov
inc
mov
add
in
es
xchg
cld
pushf
pop
into
lods
push
add
bound
mov
pusha
adc
push
jns
out
adc
sub
dec
pop
or
jmp
mov
addr16
pusha
lock
cli
cli
lret
mov
cmp
jmp
aad
dec
add
cmpsl
es
jno
dec
sub
popf
inc
mov
push
ljmp
cltd
lods
pop
add
sbb
shl
xor
mov
iret
in
cwtl
cltd
mov
mov
test
fwait
lock
lods
cmp
shll
add
daa
add
or
test
mov
xlat
pop
cmp
mov
or
pop
lret
cmpsl
loopne
sub
mov
pop
jmp
fwait
add
or
test
in
outsl
mov
mov
jae
dec
or
mov
pop
lods
loope
xchg
mov
addr16
arpl
jae
dec
fcoms
cmc
dec
sbb
or
pop
js
aaa
sbb
sbb
cmpsl
sub
es
and
add
jp
xchg
jg
jg
in
xchg
push
push
or
mov
jg
pop
pop
int3
ja
repz
rorb
sub
std
roll
jecxz
jle
sub
ret
mov
stc
sub
inc
and
add
push
inc
loope
sub
in
mov
pop
xchg
or
sub
sbb
mov
out
pop
sub
out
sahf
xor
cmp
imul
imul
pushf
lods
les
scas
popa
aam
mov
jecxz
js
aad
loope
dec
add
cmpsb
std
mov
cld
outsb
dec
add
mov
pop
cmp
push
lea
push
rorl
ja
or
sti
add
add
push
fwait
outsb
cli
pusha
jge
in
inc
gs
mov
push
adc
xchg
adc
test
xchg
dec
xchg
xchg
mov
and
and
sbb
and
int
cwtl
iret
insb
push
xchg
jmp
xchg
lret
loop
mov
shlb
sahf
and
or
push
in
int
pop
shll
sub
in
sarb
sub
fcmovne
push
mov
sub
ljmp
pusha
call
sahf
push
dec
ret
mov
ficoml
mov
bound
ss
shll
dec
sub
shrl
test
add
out
mov
adc
jnp
repnz
js
loop
sahf
dec
xchg
andb
or
daa
cmpsb
lret
pop
inc
dec
fisttps
in
inc
xor
test
inc
mov
and
xor
shl
cltd
ds
lods
inc
andb
sbb
fcomi
xchg
rcrl
ljmp
xchg
call
pop
lods
sbbb
mov
out
fcoms
dec
sbb
das
pop
clc
mov
jno
adc
mov
data16
mov
stos
fs
pop
dec
mov
dec
sub
lret
or
cmpsl
mov
loope
mov
dec
add
and
inc
xchg
xchg
es
in
and
cs
sub
xor
dec
ljmp
rcrb
rorb
dec
push
jp
mov
mov
mov
push
or
xor
in
add
lret
jecxz
and
stos
sbb
jae
arpl
pop
test
shrl
dec
pop
xchg
jbe
inc
push
popf
popa
stc
test
cmp
cmp
mov
dec
ret
push
mov
inc
inc
push
in
fdivrp
cmp
sahf
sub
push
jp
in
or
cmp
sbb
or
fistpll
adc
pop
sub
mov
mov
out
mov
int3
lahf
dec
stc
fs
and
dec
orb
rep
cmp
pop
negl
in
mov
shl
je
loop
add
add
dec
pop
mov
icebp
mov
cltd
sbbb
std
or
into
add
mov
mov
outsl
test
sub
cmp
pop
dec
daa
pop
call
mov
push
movsl
into
cmpl
dec
inc
push
sti
jnp
mov
add
xor
aad
cmp
push
pop
cli
pop
mov
cmp
leave
jae
scas
or
or
aaa
push
inc
mov
push
pushf
inc
and
icebp
loop
add
imul
pusha
jecxz
in
xor
cmp
add
jnp
cmpb
jbe
out
xor
sub
scas
sbb
sub
andb
call
cli
dec
sub
popa
adc
outsl
push
jae
and
push
dec
mov
nop
mov
mov
loop
and
xchg
enter
or
adc
ja
rep
mov
test
sbb
sahf
sahf
pushl
push
pop
xlat
stos
adc
dec
clc
insl
fwait
lock
mov
mov
push
popa
cld
mov
ja
inc
pop
inc
scas
jbe
fbld
pop
pop
scas
xchg
bound
xor
shll
test
test
inc
das
subl
dec
pop
push
jg
mov
cmpsl
cmp
inc
loope
ret
movsb
dec
mov
popw
inc
mov
cmp
push
mov
fcoms
sbb
pop
pop
and
sarb
xchg
xor
stc
sbb
push
sub
stos
jb
fdivrp
cld
pop
cmp
movsb
add
jne
and
imul
or
cmp
cmp
pop
and
cmp
cmp
test
pop
daa
test
mov
adc
sub
sub
xor
jbe
mov
xor
mov
rcrl
push
push
xchg
popa
fnstsw
and
bound
cwtl
cli
push
mov
clc
ss
movsb
leave
loopne
aam
lods
mov
inc
cltd
mov
fildl
ss
jl
jl
inc
push
popf
jb
xchg
bound
dec
jb
add
jno
mov
bound
adc
in
dec
jecxz
mov
xor
sahf
mov
sbb
cmp
push
loope
push
call
push
adc
movsl
stc
imul
lret
mov
cmpsb
into
push
dec
divl
and
bound
mov
aad
xchg
stos
inc
test
roll
mov
inc
sahf
stc
fdivr
out
or
clc
idivl
dec
xlat
push
pop
jp
mov
jae
enter
adc
or
ret
testb
dec
jl
xlat
push
dec
lret
or
xor
loop
mov
lock
push
cli
pop
add
hlt
push
int3
mov
inc
outsl
mov
cld
jle
and
push
mov
or
aam
xchg
sbb
aam
aad
adc
aam
lea
cmp
stos
in
test
in
je
rorb
pop
pop
roll
movsl
or
pop
xchg
and
dec
rcr
cli
cld
lds
arpl
lret
mov
in
add
xlat
sub
lret
loopne
xchg
mov
popa
push
lret
mov
dec
stos
add
push
les
mov
addl
das
push
data16
gs
or
in
mov
popa
ret
cmp
adc
iret
push
push
enter
or
or
cmp
sbb
jle
mov
lods
sub
xor
mov
adc
arpl
add
inc
and
sbb
mov
addl
jae
insb
xchg
sbb
fldenv
nop
dec
out
adc
scas
cwtl
aam
loope
enter
xchg
loop
inc
push
adc
adc
mov
das
lret
adc
pop
test
fimull
inc
xlat
cs
outsb
push
xchg
rol
lock
jecxz
test
addl
lcall
xchg
fstps
push
adc
lock
sub
scas
mov
daa
repz
dec
test
out
xor
pop
push
ljmp
in
shll
nop
out
mov
mov
push
lret
sub
sub
xchg
cmpsl
pop
dec
fstl
push
xor
jno
lcall
sub
push
add
loopne
pop
mov
aam
sbb
and
adc
inc
lret
cmpsl
inc
out
int3
sbb
movsl
xchg
inc
aas
sarl
leave
jb
lret
xchg
cltd
push
sub
sub
jmp
xor
and
jae
jge
enter
out
xor
shlb
inc
add
xchg
stos
jb
fisubs
xor
idiv
cmp
fwait
fwait
insb
sbb
pop
in
lds
jne
call
int3
jle
or
adc
out
dec
cltd
ja
in
dec
das
xchg
and
cltd
test
mov
jecxz
lret
fwait
test
pusha
movsl
lea
pushf
add
mov
mov
sbb
std
push
sbb
jo
shl
popa
sbb
mov
test
mov
pop
lret
jno
outsb
pop
into
stc
cmp
push
inc
fwait
cmp
jge
jp
cmp
cmp
cmp
ss
push
pop
sub
popf
inc
and
mov
and
orl
push
and
pusha
xchg
mov
sahf
xlat
or
mov
mov
js
xchg
fcmovbe
cmp
push
out
std
loope
xor
push
inc
xor
fs
sub
out
jg
add
out
out
xor
mov
dec
leave
xor
ror
jns
push
dec
dec
xor
jo
add
testl
imul
push
cmp
outsb
sub
push
and
leave
ficompl
mov
dec
fidivrs
imul
repnz
fwait
push
mov
mov
insl
nop
jecxz
rcrl
mov
psubusw
mov
lret
mov
sub
mov
pop
js
lcall
xchg
add
out
fstpl
lcall
lds
iret
aad
sbb
test
jae
loope
pop
pop
addr16
movl
test
xchg
inc
mov
stos
push
jnp
lcall
out
jmp
repz
jne
mov
mov
xor
inc
fcompl
test
sbb
or
pop
incl
sbb
faddl
in
dec
pusha
jno
jb
xchg
dec
push
xor
ja
xchg
mov
stos
push
push
push
fsubs
negb
adc
xlat
lcall
xchg
add
test
fnstenv
and
sub
mov
jo
fldcw
xchg
int
loop
icebp
pushf
and
cs
scas
cmp
mov
sbb
sbb
and
jge
jp
jne
mov
cwtl
ficompl
mov
dec
add
mov
mov
mov
xorl
imul
cwtl
sbb
shll
lods
and
cmp
in
das
dec
push
fcmovnbe
adc
pop
xor
aas
roll
sub
or
dec
xor
ret
and
lret
out
jmp
popf
jae
hlt
leave
cld
sbb
sub
fistl
xorb
xor
cwtl
adc
orb
push
sub
jo
mov
jle
out
jae
pop
jno
pop
jae
test
push
sti
fs
rcrb
es
pop
in
daa
mull
cli
sub
repz
push
dec
aam
lock
cld
cmp
xchg
mov
test
pop
xchg
icebp
xchg
repnz
mov
dec
mov
mov
in
out
jbe
and
cli
fcomi
cmpsl
bound
ret
rcll
mov
adc
mov
mov
js
stc
repnz
push
and
add
xor
xor
mov
popa
andl
lret
js
test
iret
mov
mov
mov
movsl
dec
jb
mov
mov
cmpsb
mov
lret
jns
push
or
repz
out
lock
jmp
jg
cmpsb
cmp
xor
or
jb
sbb
mov
lods
ret
mov
mov
ficoms
jnp
and
stc
in
es
mov
notl
js
xor
mov
roll
pop
and
adc
mov
imul
or
dec
movsb
sbb
pop
cmpsl
lahf
inc
popf
js
aas
pop
pusha
cmp
jo
xor
mov
loop
or
xchg
jns
fnstsw
sub
ficompl
pop
ss
jo
xchg
iret
push
xchg
push
mov
test
jb
loopne
cmp
sbb
mov
rcrl
bound
pop
push
dec
add
mov
mov
enter
push
mov
jne
out
inc
xor
pop
push
test
inc
bound
out
outsl
data16
cmp
fildll
mov
and
divl
ret
ficoms
cmp
pop
loop
aam
adc
fdivl
xchg
movsb
xchg
jne
mov
in
dec
xor
popa
mov
cmp
xchg
mov
xor
and
nop
inc
je
loop
cmp
es
and
fildll
xchg
jge
imul
sbb
mov
sarl
push
push
mov
sahf
mov
jp
insb
mov
dec
add
out
outsb
cli
mov
jo
push
mov
call
divb
push
xor
sahf
roll
js
mov
cmp
outsl
and
inc
fstps
push
fdivs
inc
out
shll
lods
dec
inc
out
daa
inc
mov
insl
arpl
jns
xchg
inc
cmpsl
sbb
iret
xchg
sbb
in
jg
push
mov
jne
iret
rcr
repnz
mov
jge
sti
push
mov
sbb
lods
push
xor
fldt
xchg
scas
push
jge
push
inc
mov
cmp
in
xchg
fs
mov
loopne
xor
aad
xchg
stos
and
inc
daa
add
aas
adc
add
pop
inc
je
inc
test
cli
mov
push
sarb
gs
cwtl
xor
out
cwtl
lea
jne
clc
pusha
jp
pop
nop
ja
sbb
data16
arpl
cmp
nop
inc
push
imul
cmpsl
pop
insb
jmp
in
mov
push
stc
sahf
xor
outsl
fmuls
pop
stos
and
adc
imul
ja
movsl
adc
dec
add
inc
ret
sar
test
lods
aaa
dec
push
or
stc
shlb
push
mov
hlt
mov
sbb
jecxz
sub
dec
loope
je
iret
repnz
cmp
out
mov
jge
out
or
jno
cmpsl
repnz
sub
mov
mov
mov
insl
push
punpckhbw
ret
jmp
and
fwait
mov
js
outsl
fidivrs
jo
out
jno
mov
cli
cmp
mov
psrld
mov
and
popa
inc
pop
js
imul
rorb
ds
es
cmp
pop
mov
adc
or
xor
loop
mov
jmp
jns
adc
cltd
cmc
fdivrp
xchg
roll
jo
popl
sub
mov
test
cmpb
jle
stos
cwtl
fsubl
sbb
leave
gs
adcl
xor
dec
sbb
mull
ja
clc
jno
mov
adc
sbb
mov
dec
and
mov
out
mov
cmc
dec
and
je
pushf
cmp
fidivrs
and
mov
push
mov
dec
dec
mov
jns
push
enter
mov
mov
or
nop
mov
js
jecxz
icebp
shlb
in
loope
cmp
fmuls
loop
cmp
xchg
push
xorl
adc
mov
into
lret
inc
repz
aaa
out
add
sbb
xlat
add
shl
jns
adc
idivb
jnp
subl
dec
jne
xor
jb
aad
push
pslld
bound
jg
fildll
xor
pop
push
and
pop
mov
jp
nop
dec
movsl
je
push
test
sub
cmpsl
jle
add
jne
mov
je,pt
or
pop
pop
roll
hlt
adc
jge
out
and
and
out
sbb
mov
inc
cmpsl
adc
aam
aad
and
adcl
addr16
in
mov
in
mov
rol
inc
cmp
push
add
lods
xor
ficompl
sub
pop
lret
xlat
cmp
loopne
je
sahf
adc
lret
leave
xchg
jecxz
sbb
dec
adc
sub
sbb
xchg
push
sar
insb
mov
es
es
xchg
add
mov
sbb
fstl
pop
sub
sbb
mov
mov
in
dec
flds
mov
xor
add
imul
fcoml
xchg
push
gs
adc
sahf
inc
xchg
lods
aas
rcll
or
mov
stos
add
xchg
push
aas
push
loop
dec
sbb
jne
pusha
fsts
int
lock
decl
push
add
push
inc
outsl
and
jns
mov
or
mov
cmpsl
int3
test
cmp
dec
sbb
rcll
adc
xchg
outsb
pop
mov
in
jbe
jbe
mov
rcrl
and
cltd
push
xor
fwait
cltd
pop
ss
fs
dec
xchg
test
adc
loope
roll
lret
jne
loop
xor
jmp
repz
loopne
and
lret
push
lret
jp
data16
repnz
mov
jae
jmp
mov
pop
pop
sub
inc
cwtl
xorb
cmp
hlt
sbb
and
icebp
adc
lds
fstl
div
int
shrl
popf
rorl
push
das
sub
outsb
inc
js
push
mov
inc
dec
push
adc
fsts
cmpsb
mov
fistl
je
loop
in
jle
ret
and
pop
test
and
dec
cli
iret
xor
jae
and
scas
das
dec
sti
pop
out
or
xchg
lret
xor
andl
mov
inc
enter
rorb
pop
push
sahf
dec
rep
and
js
mov
loopne
gs
mov
lret
sub
fs
fs
scas
jmp
imul
sub
push
cmp
adc
repnz
mov
arpl
add
lock
cmp
inc
xchg
push
lret
sbb
daa
xchg
test
add
mov
sub
mov
jnp
mov
in
jo
sarb
loopne
jnp
fsts
xchg
and
and
addb
test
movsb
jae
sahf
sub
test
pop
sub
ret
dec
cmp
adc
movsb
fists
xchg
pushf
jmp
imul
mov
hlt
stos
repz
add
enter
cli
or
pop
insl
sbb
testl
mov
lods
sbb
dec
push
sbb
pushf
out
and
fsqrt
dec
rcll
dec
pop
pop
and
in
popf
and
cmpsl
push
dec
fwait
jbe
cmp
xchg
mov
sub
aam
test
js
xchg
or
sbb
xchg
fidivrs
push
mov
or
pop
and
jmp
xor
imul
imul
or
xlat
enter
lcall
test
dec
lea
pop
pop
mov
add
xchg
sub
mov
jp
mov
sub
pop
inc
pop
adc
push
pop
in
das
dec
and
jle
push
inc
jnp
int
lret
xchg
jns
pop
jle
xchg
rclb
sbb
jne
into
pop
and
fisubl
jne
test
iret
addr16
jge
jne
pop
dec
jno
testl
cmpsb
loop
mov
mov
pop
dec
pop
jbe
repz
xchg
insl
xchg
int
add
in
fsubrl
daa
lea
out
mov
daa
movsb
pop
je
cmp
fs
and
mov
sbb
jbe
out
xchg
cmp
fwait
rolb
adc
jmp
lea
adc
outsb
add
ret
push
popa
int3
lcall
cmp
and
xchg
mov
and
cmp
cmp
stos
adc
mov
pop
es
movsb
xchg
dec
loop
pop
jo
repz
in
mov
cli
push
mov
xchg
add
add
imull
pop
push
ret
xor
cld
insl
xor
and
pop
into
jg
sub
clc
mov
mov
or
add
repz
cltd
xor
rclb
shl
sub
jbe
aaa
data16
pop
sub
cmp
pop
fiaddl
popa
jae
leave
cmc
pushf
repnz
out
push
js
pop
mov
aaa
mov
cwtl
dec
xchg
movsb
mov
ret
mov
fcmovne
inc
sbb
stos
push
cmpsb
gs
xchg
mov
prefetch
rcr
repnz
push
test
or
jge
outsl
and
jp
lods
mov
lods
cmp
xchg
xchg
or
pop
cmp
adc
jbe
cmp
sub
mov
scas
pushf
adc
cmpsl
pop
fisubl
adc
or
aad
jb
lcall
out
shlb
or
out
pop
shlb
xchg
adc
jbe
daa
inc
enter
pop
jnp
lret
sar
mov
mov
lds
inc
push
stos
insb
pop
or
mov
ret
arpl
mov
push
add
cmp
and
push
outsl
pop
sub
insl
cld
jns
or
fcoml
fs
sbb
cld
cmpsl
movsb
mov
fisubl
cmc
xor
xor
inc
pop
jle
test
fdivr
or
xor
insl
pop
repz
sti
push
jne
lcall
pop
test
cmp
jle
mov
jmp
dec
xlat
xor
fs
dec
cmpsl
aam
lret
and
scas
lods
xchg
push
jge
cmpsl
add
sbb
sub
dec
rcr
loope
divl
inc
and
jnp
notb
dec
sub
int3
out
popa
mov
adc
repz
cltd
jecxz
xor
and
push
push
mov
bound
imul
jb
inc
pop
jne
test
loop
addr16
xchg
nop
ja
inc
icebp
shlb
lahf
loop
negl
imul
xchg
es
cld
push
xchg
outsl
jo
xchg
xlat
pop
in
xchg
inc
push
out
rolb
testl
movsb
pop
test
add
fs
adc
cmpsb
fildll
jecxz
mov
out
mov
sub
push
add
repz
push
test
xor
sbb
add
gs
sbb
xchg
or
mov
jecxz
js
push
inc
int
std
rorl
pop
fistpl
loop
jns
jmp
mov
cmc
mov
shll
movb
xor
xorb
mov
repz
mov
sbb
cs
popf
mov
fidivrl
stc
mov
or
or
sbb
fnstsw
sti
outsb
mov
jbe
cmp
push
ds
mov
daa
push
fldenv
jne
pop
mov
jge
sti
daa
jl
push
data16
roll
and
js
sub
push
movsb
lds
ja
sbb
in
jae
imul
scas
and
xchg
inc
pop
inc
xchg
jbe
loop,pt
std
test
mov
sbb
inc
mov
mov
cmp
inc
std
mov
ret
rolb
repz
cmc
add
or
fdivs
push
pop
and
lret
pop
lret
xchg
dec
and
pop
imul
mov
mov
jl
dec
mov
mov
in
mov
sub
nop
fs
add
add
outsb
aam
sub
or
js
sub
pop
xchg
fdivrl
cmp
xchg
aad
movsb
mov
or
mov
lret
lock
mov
push
push
mov
mov
mov
jmp
cmc
adc
and
movhps
lret
lcall
cmp
push
cwtl
mov
fidivrs
mov
jno
xlat
jg
add
mov
cmp
jne
fisubrs
cmpsl
mov
inc
jo
sbb
addr16
mov
stos
dec
or
ds
xlat
aas
xor
xchg
jle
stos
and
jb
mov
leave
push
push
pop
cmc
stos
mov
daa
sbb
nop
es
mov
sbb
or
ss
lea
arpl
sub
mov
xor
push
push
push
inc
test
imul
jl
flds
lods
dec
insb
sbb
dec
or
lods
mov
rolb
int3
cwtl
jecxz
xchg
xor
sbb
call
in
or
xor
xchg
or
xor
push
inc
daa
mov
aaa
loope
adc
adc
jnp
dec
mov
jg
adc
fisubrs
xor
mov
clc
rolb
cmc
dec
inc
loope
repnz
jge
or
or
cmpsl
xchg
push
lret
adc
jae
data16
mov
aas
pop
or
dec
xchg
rclb
jecxz
mov
lea
jno
int
pop
cmp
add
sub
repz
lahf
cmp
sub
add
jnp
leave
dec
fisubl
xchg
imul
xchg
int
sub
stos
rolb
cmp
xchg
pop
shl
lea
ljmp
sub
sbb
mov
sbb
das
mov
scas
sub
xor
out
hlt
jnp
push
mov
sbb
sbb
test
repnz
mov
loopne
es
hlt
xchg
sub
sbb
xchg
lret
repz
stos
insb
adc
mov
dec
mov
xchg
xor
rcl
dec
mov
inc
xchg
das
mov
insl
mov
sub
mov
enter
bound
xlat
mov
decl
jp
aas
outsl
frstor
out
ret
or
push
out
mov
push
lock
adc
mov
jnp
repnz
mov
cmp
sub
outsl
ret
mov
lcall
dec
add
hlt
mov
ret
mov
int
add
pop
dec
repz
outsl
xchg
xchg
mov
pop
iret
call
or
push
xchg
mov
cs
adc
jno
sub
xchg
and
jne
test
adcb
fadds
pop
and
pusha
or
addl
sbb
mov
lea
jg
and
cmpsb
mov
push
sbb
adc
jmp
pop
lods
mov
mov
cld
pushf
inc
fldl
add
lret
adc
lods
and
aaa
rolb
loop
cmp
mulb
mov
insb
lods
adc
mov
sbb
mov
notb
aas
mov
push
js
dec
pop
mov
in
or
stos
cli
xor
inc
out
gs
lcall
dec
andl
cld
mov
cmp
inc
sti
mov
sbb
cmpsb
subl
cli
fwait
pop
aam
push
rcr
data16
add
insb
sahf
sub
shrb
sub
stos
mov
cmp
sub
cmp
aaa
lret
jns
pop
mov
pop
cmc
outsb
aas
pop
ss
ja
jns
add
loope
pop
cmp
sub
push
in
or
sbb
stos
xchg
inc
orb
imul
out
outsb
cmpb
rorb
ficomps
loopne
jp
repz
data16
jo
data16
jno
and
push
adc
pop
dec
das
test
or
arpl
stos
rol
add
sbb
lds
cmp
outsb
push
ds
data16
lret
test
lods
mov
xlat
les
sti
loope
aas
insb
jnp
push
mov
lret
push
loopne
aam
mov
shll
loope
push
pop
rolb
lret
das
pop
enter
aam
cmp
pop
lret
stos
adc
daa
ficomps
sub
fucomp
pop
jbe
or
xor
das
out
mov
sub
sarb
push
rcrb
xor
xor
mov
cmp
movl
sbb
cmpsb
mov
mov
es
andl
sub
mov
inc
roll
cmp
dec
lcall
sbb
jbe
or
cmp
xor
loopne
or
adc
aad
leave
callw
loope
aam
shll
mov
and
or
cmp
call
adc
mov
and
push
xor
cmp
adc
xor
sarb
das
cmpl
in
and
pop
mov
js
out
lods
fcompl
imulb
push
or
xor
xchg
xor
aas
pop
vmovq
lahf
pop
mov
loopne
xor
jb
cmpsl
add
cmp
mov
insb
jle
subl
scas
cmpsb
mov
imul
fstl
ret
xchg
cmp
mov
lods
and
mov
cmp
sbb
stc
into
aad
mov
cwtl
int3
jecxz
cmp
jge
mov
cmp
int3
xor
std
out
adc
dec
push
test
xchg
mov
mov
jnp
imul
clc
stc
shrb
xor
dec
sub
repnz
cld
sbb
test
mov
dec
mov
and
jae
movsl
in
mov
cltd
mov
and
dec
cs
cmp
xor
jl
clc
stos
dec
cmp
test
fistps
mov
cmp
rcrb
shl
daa
lcall
push
std
ss
push
stos
sub
icebp
aad
push
or
jnp
stc
push
mov
push
lea
sbb
pusha
inc
xchg
into
in
pop
stos
pop
jne
adc
jge
push
adc
mov
ret
inc
mov
pushf
mov
aaa
sbb
stos
clc
jne
fistpll
mov
xchg
adc
repz
add
jecxz,pn
iret
iret
mov
test
push
loope
daa
and
dec
in
daa
adc
shlb
cbtw
leave
scas
mov
xchg
jecxz
add
inc
fwait
imul
inc
push
imul
mov
sbb
xor
push
movsb
cmp
cwtl
icebp
sbb
push
mul
sar
or
cwtl
and
mov
mov
int
scas
leave
jecxz
inc
pop
lret
pushf
dec
mov
div
inc
cs
xchg
icebp
lods
sahf
lahf
into
popf
pop
and
mov
loop
fstps
inc
jae
dec
cs
test
stos
popa
insl
bound
rcrb
and
ds
sbb
cmp
fwait
jmp
out
pop
lods
and
push
cmc
dec
es
or
cmc
ljmp
push
mov
mov
repnz
mov
xor
adc
lahf
adc
in
lret
dec
cmc
jecxz
add
add
inc
test
sbb
sub
push
in
insb
sbb
cmc
mov
stc
sbb
xchg
cwtl
mov
mov
push
sbb
dec
add
sub
or
mov
mov
cli
stos
mov
cltd
push
test
test
ja
mov
pop
std
cli
fcmovnb
in
lcall
xchg
pop
cvtps2pi
inc
sbb
or
sub
jbe
ss
lods
sub
inc
dec
scas
outsl
cmp
xchg
fisubl
xor
lahf
mov
movsb
mov
repz
cmpsb
dec
inc
mov
jmp
and
add
mov
test
arpl
loope
sbb
inc
xchg
pop
arpl
sub
adc
sbb
mov
mov
movsl
in
mov
in
popa
sub
push
mov
movsb
jmp
cld
in
or
adc
and
loopne
insl
mov
js
sbb
pop
sarl
adc
mov
pop
and
dec
xchg
je
jge
fsts
inc
sbb
or
loope
jle
inc
in
inc
add
inc
sti
push
jns
adc
pop
pushf
aad
fs
sub
stc
enter
dec
fdivs
mov
dec
jle
or
ja
ret
dec
jge
add
pop
lret
sub
push
mov
out
xchg
call
add
lcall
loope
std
pop
subl
dec
addr16
jns
mov
dec
ljmp
xorb
dec
sub
enter
lahf
jne
imulb
cmp
adc
pop
in
shlb
int
xor
loopne
out
gs
mov
testb
mov
cmp
and
push
sbb
mov
push
pop
mov
cmp
mov
cmp
sub
dec
lret
sahf
dec
xchg
das
xor
shll
fisttpl
enter
aam
das
mov
inc
in
fwait
dec
jp
sahf
jmp
or
dec
mov
xchg
adc
adc
mov
push
jne
mov
fldenv
push
shll
add
dec
add
mov
mov
cmc
scas
sarb
ret
roll
cmc
mov
pusha
inc
in
loop
movsl
adcl
icebp
test
mov
mov
dec
repz
pop
adc
jnp
sahf
out
cmp
int3
push
pop
xchg
das
scas
scas
pop
push
pop
mov
adc
dec
fcomip
std
or
dec
sbb
in
cmp
fstpt
push
int
fwait
add
and
sbb
sub
adc
cmpsb
mov
pushf
and
stos
call
shrb
jo
push
push
mov
imul
test
push
jbe
notb
mov
in
sbb
mov
imul
dec
dec
fisubrs
clc
in
mov
das
fdivl
mov
roll
lds
movsb
adc
cmc
mov
inc
mov
outsb
pop
add
test
inc
sub
push
fmul
mov
push
enter
aam
int3
mov
mov
push
cmp
jnp
bound
jae
insl
adc
inc
gs
iret
push
into
idivl
ja
add
fstps
jg
loope
cld
cmp
push
mov
cmpsl
inc
scas
test
push
mov
jmp
cmp
sbb
add
lods
int3
or
lea
lahf
sarl
sub
or
repnz
push
cmp
arpl
cmp
jecxz
jbe
sbb
iret
sub
pop
ficompl
jae
adc
mov
mov
pop
clc
xchg
and
mov
pop
pop
lea
xlat
ret
xchg
testl
aam
jbe
mov
aad
inc
mov
nop
stos
sub
popa
rol
jge
fsubrl
mov
sbb
addr16
xor
cmp
push
loopne
js
lds
lret
enter
rol
sub
sbbb
aaa
mov
addr16
sub
les
test
divb
jge
dec
ja
mov
mov
inc
ja
dec
jmp
xlat
test
es
cltd
adc
mov
shrb
sub
cmp
ljmp
int3
imul
sbb
loop
cmpsl
jge
cmp
mov
push
hlt
or
data16
ror
push
pop
xchg
aas
fwait
clc
jae
add
insb
fsub
sub
out
push
adc
pop
in
iret
push
aam
pop
and
test
sbbb
scas
imul
add
fstl
pop
xor
sub
jge
jb
add
fistpll
pushl
sbb
jae
lods
pop
in
jnp
push
inc
push
jp
rcrb
pop
unpcklps
sub
and
jnp
dec
rcll
fstl
iret
pop
adcb
ljmp
lea
stos
xchg
enter
lds
push
push
jns
imul
cmp
jle
add
mov
pop
cmc
std
ja
inc
sbb
pop
inc
test
pop
inc
aam
popf
xchg
mov
jnp
xchg
les
push
ret
out
sahf
xlat
movsb
sbb
lcall
add
or
pop
or
inc
pushf
mov
divb
pop
mov
fiaddl
lcall
scas
clc
jecxz
mov
and
in
and
enter
sbb
mov
xchg
fistps
dec
xchg
addl
fildl
cld
jmp
jns
lock
les
popf
xchg
and
lds
push
enter
mov
mov
add
pop
mov
cmp
mov
lods
ja
lods
inc
arpl
adcl
push
repnz
fildl
hlt
adc
out
fsub
xor
push
int3
push
inc
stc
sbb
and
mov
inc
rcr
xchg
adc
and
rorb
lret
movsb
add
mov
xchg
push
pop
sub
and
xor
and
in
test
xor
xchg
shl
push
cmpsl
popf
mov
in
mov
cmc
les
pop
lods
insl
cmc
test
loop
and
imul
das
subl
lods
push
dec
push
loope
jg
or
and
push
das
mov
mov
movsl
mov
mov
xor
lock
movsb
sti
inc
enter
pop
mov
pop
or
in
sahf
cmp
lds
sbb
cmp
dec
repz
push
lods
in
mov
sbbl
popa
mov
sbbb
bound
cli
aaa
add
cwtl
loop
pop
fcomps
or
dec
xlat
mov
cmp
jp
hlt
arpl
test
test
leavew
aas
mov
ja
stos
int3
or
mov
sbb
pop
xchg
das
xchg
lret
jp
ret
adcb
insl
pushl
fstpt
pop
subb
int
lock
clc
mov
out
xchg
bound
ss
aaa
aas
je
popa
or
icebp
cmp
mov
pop
je
or
push
out
sub
jp
ljmp
dec
lods
push
clc
int
je
mov
sbb
sti
mov
jmp
fstl
in
and
iret
ret
mov
test
xor
test
sub
sarb
fwait
jmp
cmp
cmp
mov
mov
mov
aam
cli
sbbb
mov
or
addr16
cmp
mov
loopne,pn
dec
sub
inc
adc
loopne
fdivrs
xor
add
data16
fbld
xchg
fxch
lret
pop
sbb
ret
pop
stc
ljmp
xor
fs
pop
testl
fsubl
sub
jo
inc
fimull
sub
mov
mov
push
push
adcb
fsubl
add
lret
xor
or
test
test
xchg
xchg
fmuls
repz
jns
sbb
popa
shll
popf
pop
fistpll
cmp
gs
int3
in
or
and
mov
inc
lds
cmp
mov
and
lds
jbe
addb
jle
cwtl
cs
and
inc
adc
xor
dec
fisubl
mull
mov
pop
rorl
mov
dec
xchg
mov
dec
jl
or
pop
stc
push
xchg
push
in
rorb
popa
repz
leave
pop
sbb
lret
mov
aaa
outsb
pop
push
lcall
sbb
insb
xchg
jp
inc
or
lahf
dec
jmp
cli
pop
enter
mov
xchg
dec
mov
andb
sub
xchg
les
push
dec
ret
je
pop
push
adc
stos
or
mov
aas
das
mov
out
imul
xchg
xchg
pop
add
lahf
outsl
cmp
movl
call
pop
dec
out
popa
jge
nop
ret
xor
xchg
inc
pop
mov
jmp
or
adc
sub
cmp
push
ja
stos
stos
outsb
cs
fsubl
inc
mov
xlat
xchg
fcoml
pop
push
pop
loopne
mov
lahf
insl
mov
xor
push
jmp
adcl
testb
aad
out
sbb
inc
add
or
roll
int3
addr16
jno
movsl
negb
add
adc
pop
das
cs
xchg
hlt
mov
lds
xchg
jle
jmp
fs
push
add
hlt
sub
test
mov
pushf
dec
mov
pop
sbb
jae
mov
cli
jecxz
xchg
and
call
stc
ja
daa
inc
notl
jbe
gs
xchg
adc
and
sbb
outsb
ja
mov
xchg
jecxz
dec
cmpsl
fxch
cwtl
xchg
xchg
imul
in
lds
stos
xchg
or
inc
push
sub
gs
daa
xor
xchg
pop
sbb
mov
and
iret
sub
xlat
test
movl
mov
test
or
aas
out
popa
mov
popa
pop
pop
sub
and
pop
stos
mov
mov
insb
imul
loop
jg
data16
test
jp
mov
add
ss
fiaddl
ds
pop
imul
and
pop
jo
in
lret
in
shrb
xchg
sbb
stc
clc
jle
cmpsb
out
aaa
or
sub
into
jno
decl
es
mov
mov
scas
stos
mov
xor
sub
pop
and
leave
icebp
fnstsw
add
pop
arpl
pop
ss
test
dec
fs
dec
adc
jecxz
js
inc
mov
dec
cmpsl
pop
push
nop
xor
xchg
adc
into
stos
and
dec
ret
lods
lret
or
dec
lret
pop
stos
cmpsl
mov
scas
xchg
push
xchg
test
xchg
int
cmp
sub
jo
nop
mov
lods
mov
xchg
and
imul
xor
sub
es
mov
pop
push
cmp
into
mov
std
popf
push
xor
out
movsl
sbb
inc
fdivr
or
xchg
and
jle
xor
lcall
in
cli
fstl
mov
or
data16
inc
idivb
adc
je
out
fdiv
lret
inc
pop
inc
out
fwait
jne
xor
sbb
data16
cmc
insl
mov
add
push
mov
or
lods
adc
movsb
jnp
add
fdivrl
jl
push
xor
cld
data16
dec
lret
xchg
ja
jl
mov
jecxz
push
int
mov
xchg
sarl
add
sub
add
dec
insb
push
ljmp
xchg
push
or
push
or
adc
cli
fidivl
out
cmp
fmull
push
pop
pop
pusha
jo
add
adc
jo
ret
xchg
mov
lret
jno
mov
jae
adc
ds
in
or
call
cli
ljmp
sbb
aas
loope
in
fmull
inc
lret
mov
mov
add
add
imul
das
iret
xor
sbb
stc
sbb
aas
enter
daa
pop
jbe
cmp
fwait
iret
mov
pusha
jbe
out
repnz
pop
lock
das
in
push
add
fistpll
insb
cmc
nop
cmp
dec
jge
iret
xor
or
sub
inc
mov
cmp
scas
xchg
push
ret
xor
lahf
arpl
adc
dec
test
jecxz
imull
movsl
leave
pop
mov
mov
aam
mov
daa
jbe
jb
push
fwait
arpl
call
shl
outsl
mov
cmp
fs
pop
std
ss
dec
icebp
insb
jne
sbb
mov
mov
xchg
jae
bound
mov
and
rclb
daa
fsubl
sub
xchg
imulb
cmp
inc
cli
shrl
out
lret
mov
push
jo
into
mov
inc
adc
fsts
dec
js
ret
mov
inc
sbb
and
cwtl
lods
test
pushf
xchg
mov
dec
into
data16
fsubl
fisubrl
or
gs
inc
ljmp
lahf
inc
xor
sarb
jle
lret
cld
jmp
movsl
adc
rcrl
sbb
mov
adc
mov
or
test
jl
sub
push
cli
arpl
inc
pop
sahf
lret
jg
out
cli
add
mov
add
sub
xor
test
dec
into
cli
push
mov
adc
enter
inc
xchg
fsub
inc
ret
mov
cmp
dec
mov
sahf
or
push
xchg
shlb
cltd
ret
cmp
xchg
int
or
lea
ds
test
push
pop
lock
push
and
enter
lods
pop
roll
xor
xor
sub
ljmp
into
push
xchg
push
mov
je
and
out
jns
bound
xor
pop
nop
repnz
cwtl
test
xor
or
mov
sbb
int
js
rclb
sub
sahf
xchg
mov
xchg
into
or
js
xor
std
mov
je
popf
inc
push
ret
jnp
inc
push
pushf
adc
out
inc
xchg
cmp
out
addr16
push
cmpsl
or
ljmp
mov
xor
mov
sbb
adc
into
bndldx
mov
into
scas
ret
ja
xchg
inc
sub
dec
mov
fwait
pop
sbb
push
inc
jl
mov
dec
add
jg
adc
ret
nop
push
add
daa
fcmovnb
test
cmpsb
jmp
fstpl
inc
dec
adc
adc
mov
add
lret
cwtl
xchg
dec
and
mov
daa
mov
mov
and
movsb
ret
gs
out
mov
aaa
push
andb
push
fs
cmpsb
push
iret
inc
gs
add
leave
xchg
pop
jecxz
ret
pusha
sbb
out
and
leave
jne
cmpsb
inc
rorb
outsl
push
leave
add
nop
adc
adc
lea
ss
cmp
add
int3
push
jnp
dec
mov
mov
sbb
adc
fsts
xor
and
shr
fadd
pop
sbb
insl
push
jae
cmp
mov
sbb
shlb
xor
in
cmp
sub
adc
gs
or
int3
pinsrw
dec
popf
sub
movsb
mov
jmp
pop
lods
gs
test
sub
cmpsl
adc
push
jne
out
mov
fidivrs
push
or
push
pop
fwait
sarl
mov
push
shrl
test
jmp
xor
dec
inc
loop
xchg
fisttpl
pop
loop
xor
xchg
mov
hlt
add
and
popf
lods
cmp
clc
adc
ljmp
js
ljmp
jne
push
add
inc
jb
jecxz
adc
in
jno
test
out
cmpsb
call
jmp
pop
sbb
loopne
lahf
testb
mov
xor
xchg
xor
adc
xchg
and
add
xchg
or
sub
andb
lcall
sub
sbb
mov
out
xchg
adc
mov
xlat
push
adc
jle
rorl
fsub
mov
pop
xor
int
lock
mov
mov
dec
lret
or
xchg
or
mov
shlb
fs
jle
adc
lds
push
pop
lahf
or
ja
movsb
adc
ljmp
jp
imul
pop
push
fdivrs
lret
add
jo
inc
out
jbe
xchg
imul
push
or
mov
inc
idiv
repnz
and
stc
test
jae
xor
fldlg2
xchg
inc
lcall
std
mov
and
xlat
addr16
sub
mov
mov
sahf
xor
jg
lods
xrelease
movb
xor
and
in
fldenv
mov
aas
inc
mov
jg
mov
das
test
cmp
jno
mov
call
mov
cmp
ja
push
xchg
mov
je
ds
adc
jae
adc
js
inc
sbb
pause
lea
jecxz
scas
cli
jae,pt
push
int
cltd
mov
test
and
push
dec
mov
in
jb
xor
in
mov
js
stc
repz
popf
mov
fdivl
sub
mov
call
bound
push
insb
jp
int
cmpsb
int
dec
stos
sub
jg
cmp
rcrb
hlt
lods
sbb
in
dec
or
jae
xlat
xchg
sahf
push
sti
mov
xor
cmp
outsl
leave
jg
dec
inc
inc
sub
jno
aas
ror
push
movsl
jmp
cwtl
or
lret
pop
sub
mov
xchg
mov
sbb
jno
dec
test
inc
out
iret
aaa
mov
int3
jl
rorb
ja
cmpsl
stos
and
mov
xor
repnz
stos
cld
clc
sahf
push
hlt
pop
sahf
mov
lret
mov
xchg
sbb
fs
mov
jb
mov
or
sbb
rorl
imul
ljmp
mov
mov
push
xchg
inc
in
andb
mov
pusha
stc
scas
xchg
flds
punpcklwd
add
lret
adc
jo
sbb
sahf
xchg
shr
mov
test
outsl
nop
or
dec
mov
lahf
or
sub
jae
adc
mov
pop
sbb
mov
iret
mov
das
arpl
and
mov
out
sub
orl
repz
mov
jae
or
sbb
shrl
dec
sti
imul
sbb
and
xor
sbbb
add
adc
lea
lret
pop
pop
inc
xchg
xorb
loop
xchg
mov
mov
nop
ror
xor
loopne
inc
arpl
test
pusha
add
mov
mov
lods
add
loope,pn
adc
mov
jno
pop
inc
dec
jecxz
sar
jnp
jge
xor
jge
aam
add
push
lock
adc
inc
loopne
mov
ja
push
xlat
repnz
pop
sahf
mov
cmp
in
sub
cmp
ss
cmp
pop
fcmovu
cvtpi2ps
jmp
mov
add
out
sbb
push
mov
jno
rcll
push
xchg
repz
jo
xchg
mov
fnstsw
xor
jecxz
insb
repnz
addr16
fiadds
out
sbb
jae
push
cmp
pop
sbb
clc
push
xchg
adc
gs
pop
icebp
aad
ljmp
in
push
fdivl
dec
push
dec
out
or
nop
cmpl
cmp
push
jge
neg
ret
dec
lock
lods
lods
xchg
push
push
or
cmp
ds
mov
or
filds
push
mov
pop
mov
push
ss
or
push
sub
mov
cmp
pop
and
jnp
pop
mov
mulb
push
or
xchg
push
push
push
mov
sbb
and
or
jae
pop
inc
jo
mov
push
jno
vsubpd
inc
aaa
push
and
add
je
or
sub
and
add
stos
xorl
daa
jl,pt
mov
sbb
or
push
movl
cmp
sub
push
cmp
jle
push
rcrb
into
inc
jmp
push
and
xchg
mov
sbb
cmc
into
dec
cmp
repz
push
dec
xor
bound
loopne
push
xor
aas
imul
sbb
sbb
and
aad
imul
mov
loopne
mov
fisttps
or
mov
into
jp
pop
js
xor
int3
fmull
insb
dec
jecxz
mov
iret
inc
sarb
stc
xor
fiaddl
dec
loop
or
andl
xor
stos
mov
dec
mov
stos
add
xchg
das
mov
imul
mov
jo
mov
inc
fnsave
push
sub
push
aam
and
pushw
jmp
add
inc
jecxz
es
andl
sub
outsl
popa
in
pop
es
sbb
sbb
fildll
fwait
sahf
xchg
test
xchg
add
mov
push
imul
mov
int3
movsb
pop
xor
shrd
push
or
adc
bound
lret
mov
lods
loope
fmuls
lea
or
cmp
cmp
mov
rcrl
sub
in
mov
jbe
xchg
int3
int3
inc
imul
xchg
mov
popf
movsl
imul
outsb
loope
xchg
add
push
push
into
sub
ret
mov
in
gs
ficompl
or
jns
sub
outsb
jns
jl
js
sti
sub
sbb
add
push
pushl
sub
clts
out
xlat
outsb
lcall
popf
jae
dec
push
mov
sbb
mov
es
inc
aam
pop
cmc
xlat
mov
sbb
clc
push
mov
add
outsl
notw
xchg
adc
shlb
cmp
mov
mov
outsb
and
sarb
aas
mov
iret
rclb
sub
push
and
sub
adcl
test
xchg
shll
out
xor
insb
push
loope
popl
repz
lret
xchg
push
lods
loop
movq
jo
sti
or
in
push
adc
frstor
jno
or
mov
mov
pop
out
test
inc
pop
loopne
sub
mov
cwtl
nop
int3
sbb
loopne
mov
push
mov
movsb
jmp
cld
in
inc
push
out
scas
test
sbb
ljmp
or
cmpsl
lret
out
cmp
jae
andl
xor
add
inc
push
scas
roll
out
mov
mov
add
push
dec
pop
jae
sahf
lahf
add
xchg
aaa
or
pop
popf
inc
sub
std
jbe
mov
and
push
jne
adc
jmp
sahf
in
loop
inc
push
push
stos
push
xor
mov
xorb
xor
sahf
add
pop
daa
cmpb
neg
jge
pop
das
pop
jg
bound
sub
daa
mov
adc
mov
mov
dec
xchg
cmp
loopne
lods
sub
add
movzwl
cmp
xor
ret
sub
pop
sub
cmp
cmc
fpatan
stos
cs
mov
mov
outsb
ljmp
xchg
scas
pop
fsubrl
aaa
cmp
mov
pop
pop
js
jno
sbbl
lahf
lret
aas
fildl
out
clc
je
xchg
or
clc
bound
into
push
stos
or
stos
xor
jo
add
jmp
shlb
dec
test
cmp
std
testl
sub
incb
inc
cmpsl
xor
lds
std
add
dec
test
xchg
shrb
pop
cmp
jmp
or
lcall
cmc
test
mov
jecxz
push
nop
lret
test
push
adc
ret
push
ds
sahf
cld
dec
test
push
leave
sub
add
ret
data16
push
mov
addb
or
scas
aaa
leave
sahf
sub
pop
arpl
cli
mov
dec
mov
ret
jg
int3
rol
or
loop
enter
pop
fsubrs
les
pop
shl
pop
dec
pop
mov
ja
pop
test
and
lahf
outsl
mov
inc
bound
or
jno
mov
jecxz
aam
mov
mov
cmpsl
in
outsb
cli
dec
pop
sbb
nop
outsl
pop
movsl
in
jp
hlt
int3
sahf
mov
push
xchg
push
sbb
pop
push
push
xchg
sbb
movsb
repz
js
rcl
scas
mov
fnsave
lods
aad
clc
xchg
mov
cmc
dec
push
jmp
push
push
test
stos
arpl
mov
enter
hlt
sbbb
arpl
jbe
inc
nop
add
rorl
cmc
dec
jbe
inc
pop
xchg
arpl
or
sbb
popa
dec
je
in
leave
or
mov
mov
pop
rcrl
push
psrld
dec
dec
jno
cmc
out
sub
adc
cwtl
or
mov
mov
dec
mov
mov
dec
popa
mov
dec
push
es
out
add
lcall
test
inc
std
ss
or
mov
shr
jp
inc
jp
dec
nop
pop
pushf
lcall
ljmp
cwtl
sbb
test
lods
and
cmp
jp,pt
jno
insb
loop
mov
clc
mov
pop
int
add
data16
in
icebp
psubusw
pusha
enter
cmp
pop
pop
and
mov
mov
adc
ss
or
mov
cmp
cwtl
mov
call
clc
fneni(8087
mov
call
ret
imul
adc
shlb
lahf
or
jmp
sub
lea
pusha
fadds
dec
add
aaa
fs
xchg
cmp
jo
inc
add
push
cwtd
jb
xchg
pop
in
inc
sbb
and
mov
es
mov
mov
fld
add
jnp
add
dec
aam
or
es
or
addr16
mov
push
or
adc
pushf
ss
mov
cmc
addb
mov
mov
or
inc
xor
cmc
loop
jae
push
dec
ds
arpl
push
jb
shrb
lods
repz
inc
pop
xchg
in
push
xor
daa
mov
push
dec
scas
or
push
ds
arpl
shl
lahf
sbb
test
stos
adc
xor
jae
aad
icebp
aaa
adc
jae
pop
dec
xor
aam
pop
pop
jnp
xchg
xchg
mov
outsb
jp
and
fwait
pop
sarb
sbbb
sub
sbb
dec
in
push
sahf
add
inc
jmp
test
pop
fidivrl
cmpsb
mov
xor
cmc
jne
repnz
mov
fnop
mov
mov
cmp
xor
cld
jmp
push
dec
addr16
cwtl
pop
jns
arpl
push
sub
push
and
or
xor
add
mov
sbb
lcall
clc
or
pushf
je
inc
push
lods
std
sarb
add
jo
sbb
xchg
std
jbe
repz
cmp
scas
mov
fcompl
fcom
jne
pop
rorl
loop
mov
jae
jno
push
lret
mov
jmp
mov
je
push
rclb
inc
adc
out
sti
cmp
ds
outsb
sbb
xchg
xchg
cli
cmp
lds
xchg
sbb
enter
sbb
add
sub
inc
enter
adc
sub
push
popa
mov
inc
pop
mov
jge
add
es
arpl
sub
lcall
mov
cmp
add
or
inc
cltd
in
dec
daa
rcr
icebp
je
lcall
xchg
inc
cmp
mov
inc
jmp
hlt
nop
mov
imul
jae
xchg
xor
iret
adc
inc
or
repz
sub
adcb
mov
jp
inc
adc
jle
mov
inc
xchg
out
pop
out
repz
outsb
or
imul
out
pop
fisubs
jp
mov
and
push
cmp
int3
jmp
mov
push
cmp
nop
xor
out
shrl
loope
out
fcoml
aaa
shrb
call
xor
adc
mov
rcrl
adc
stos
addr16
ss
pop
jg
cmp
sahf
dec
mov
mov
jg
adc
xchg
adc
lock
push
fcompl
jecxz
clc
xchg
sub
mov
aas
jmp
mov
fistpl
cmp
sub
filds
inc
xchg
cwtl
ror
mov
in
dec
aaa
and
mov
cwtl
sub
out
cmpsb
mov
pop
mov
push
mov
jb
jle
call
pop
incl
jo
pop
fcmovu
shl
cmpsb
inc
xchg
sbb
lret
fwait
mov
cmp
dec
pop
or
pop
or
fsubl
stos
out
cmpsl
mov
andl
adc
hlt
add
pushf
lret
jbe
adc
adc
pop
mov
inc
aaa
leave
mov
push
test
inc
xchg
ret
fucomp
sar
add
jns
arpl
push
in
mov
sub
mov
add
pusha
scas
sub
out
inc
dec
mov
xlat
xchg
imull
outsl
sub
pop
sub
add
push
xor
xchg
test
cmp
fs
gs
aad
jo
mov
movsb
sub
pop
and
scas
ss
or
push
icebp
mov
add
inc
ljmp
dec
sub
lods
push
scas
and
xchg
popa
out
pop
lea
lcall
fstp
sbb
fdivrs
mov
cmc
add
repnz
in
push
mov
mov
repnz
push
lea
inc
clc
in
or
loope
pushf
int
dec
aaa
mov
std
aam
xchg
push
xor
rorb
sub
jne
nop
enter
rcrb
jae
leave
cmp
into
mov
jb
testl
dec
dec
shrb
or
cmpl
pop
shlb
pop
jp
dec
mov
dec
push
inc
xor
js
mov
ja
mov
int3
filds
shrl
xchg
jns
sub
pusha
shll
sub
fsubs
xchg
lock
mov
shlb
loop
lods
daa
inc
pop
mov
fstps
dec
mov
mov
sub
cmp
mov
push
jl
lods
sbb
das
pop
int3
cmp
mov
daa
loopne
add
daa
jp
adc
in
in
pop
outsb
sarl
xchg
pop
lret
jg
adc
xchg
or
jge
cmp
pop
add
xchg
out
or
out
lahf
mov
stos
push
cld
xchg
mov
dec
dec
xor
bound
lcall
xchg
frstor
pushf
fs
push
dec
lret
add
xchg
adc
lods
dec
fxch
add
ds
mov
dec
dec
lods
subl
jmp
lret
loop
movsb
iret
fcoms
loope
dec
lds
or
loopne
lds
xor
add
or
outsb
jb
outsb
es
sub
adc
lcallw
adc
jp
or
mov
ss
inc
test
add
das
das
cmpsl
jmp
adc
push
mov
or
mov
and
into
ljmp
or
cmp
retw
add
lea
xor
lcall
and
sti
std
xchg
lcall
shrl
sub
lret
lahf
push
sbb
test
frstor
pop
rcr
ja
stos
mov
dec
je
xchg
fs
test
mull
into
loop
js
bound
pop
cmpb
ds
push
addr16
loop
popf
rcll
push
clc
mov
into
test
xor
push
clc
mov
cmp
ficoms
repz
inc
ss
push
and
icebp
xchg
push
pop
add
test
psrlw
lcall
xor
jo
mov
or
push
mov
aad
mov
sbb
aam
out
mov
and
negl
stos
jo
mov
cmp
jp
lahf
jp
mov
mulb
xlat
pop
leave
dec
icebp
and
lea
mov
and
sbb
inc
xor
or
jne
jno
popa
arpl
iret
sbb
mov
lret
icebp
into
xor
pop
shr
enter
rorb
jge
cmp
pop
pop
mov
cmpsb
xlat
mov
push
cmp
sbb
push
sti
call
cmp
sub
cmp
push
or
xchg
mov
sub
mov
lods
mov
mov
cmp
addr16
pushf
inc
out
das
nop
push
lcall
int
mov
mov
in
xor
jle
cmp
or
and
add
stos
popa
ds
lea
pop
jmp
cmp
xor
outsb
or
mov
mov
xor
in
repnz
jmp
push
mov
and
lods
repz
ret
mov
adc
jns
cmp
or
shll
inc
aam
and
jle
pushf
xor
outsb
add
test
pushfw
dec
imul
adc
mov
stos
scas
arpl
xchg
stc
fs
sub
jno
dec
jecxz
addl
fidivl
adc
arpl
jno
push
pop
xchg
adc
pop
aad
in
mov
aam
data16
shlb
mov
add
sub
ljmp
mov
dec
mov
mov
pop
aaa
pop
fstpt
jno
sub
addr16
int3
inc
mov
stc
jge
sub
pop
inc
dec
ss
xchg
insb
data16
ret
cmpsb
enter
je
lret
iret
leave
in
dec
movsl
sub
lahf
notl
bound
cmp
xchg
scas
and
mov
fisubl
lret
sub
add
xchg
ja
cs
cmpsb
fs
sbb
movsl
subb
int
sbb
sbb
lods
and
jge
ss
out
mov
icebp
jb
imul
inc
lcall
jnp
imul
pop
pusha
enter
xchg
or
jb
xchg
je
sub
xchg
xchg
push
loop
mov
pushf
jmp
lahf
sbb
scas
sub
scas
xchg
scas
inc
pop
pop
mov
inc
adc
flds
xor
mov
jae
sub
loope
lret
incl
test
ret
jl
xchg
push
pop
data16
call
test
lahf
pop
pusha
test
shlb
arpl
mov
insb
sub
sbb
xchg
lds
sub
in
xor
shrb
or
lea
sbb
sbb
fwait
lock
lods
lea
mov
mov
sub
jecxz
inc
es
pop
cmp
add
pop
adc
mov
sbb
jnp
mov
push
dec
shll
out
inc
mov
pushf
cmp
movsb
xchg
aas
aam
xor
movb
mov
in
lods
xlat
dec
xchg
mov
adc
xor
sbbl
cmp
ja
add
out
js
outsl
lea
xchg
daa
scas
mov
mov
js
fdivrl
ja
jmp
inc
into
into
sahf
jo
stc
or
lahf
cltd
ficoml
mov
sub
dec
repz
push
iret
jecxz
into
adc
xchg
mov
mov
sub
add
mov
into
icebp
je
test
cltd
testb
xchg
mov
add
fs
mov
jae
outsl
mov
jmp
mov
xchg
sbb
sbb
int
mov
lock
xor
mov
lds
iret
xchg
decl
iretw
xlat
pop
orb
jle
pop
xor
psrld
and
mov
gs
add
adc
push
jle
and
insb
lea
jle
push
scas
repnz
xor
adc
shrl
add
push
inc
cs
and
or
jecxz
mov
pusha
lahf
es
add
or
fcomi
push
mov
jns
push
in
into
jp
ljmp
mov
movsb
mov
pop
and
out
and
mov
fdivs
outsb
xorl
inc
pop
mov
xor
or
in
xor
jg
lcall
mov
int
xchg
inc
into
push
aaa
mov
adc
int3
push
mov
adc
push
or
adc
and
stos
movsl
cmpsl
mov
test
cmc
stc
mov
xor
iret
insb
adc
mov
pop
pushf
movzwl
sub
pop
xchg
pop
xchg
xchg
dec
sub
js
xchg
mov
mov
cltd
pop
repz
inc
jecxz
xor
scas
cltd
and
sti
inc
sahf
pop
jns
or
imul
filds
loopne
inc
movsb
enter
leave
int3
add
cmp
test
sbb
sub
pop
xchg
daa
mov
mov
aaa
orl
xor
lods
cmp
xor
out
cmp
xchg
xorl
sbb
int3
jne
mov
jb
in
lds
adc
xchg
adc
movsl
dec
icebp
mov
rol
outsb
cs
lahf
es
mov
lods
shrb
mov
bound
mov
or
cmp
enter
dec
out
ds
mov
mov
cli
inc
rcl
lret
mov
xchg
push
mov
je
lods
cltd
adc
in
pop
jmp
leave
test
jno
xchg
imul
ret
sahf
inc
popf
cmp
xchg
add
push
push
shlb
jns
leave
mov
repnz
sti
out
or
imul
inc
out
mov
inc
lods
test
or
inc
inc
mov
or
push
cwtl
fsubrs
adc
ret
out
or
imul
jl
lcall
mov
adc
pop
pop
inc
sarb
outsb
lock
cmp
movsl
in
xor
xchg
inc
scas
jle
dec
mov
frstor
shll
mov
lahf
lds
sahf
pop
int
jo
pop
cltd
jno
inc
xchg
sub
or
lods
jp
ja
jo
xor
adcb
popf
dec
arpl
inc
adc
aad
pop
aas
lea
or
scas
rcrb
jno
shll
shll
push
push
dec
adc
in
aad
dec
cmp
mov
stc
test
mov
in
je
sahf
pop
mov
ret
push
pop
cmc
addr16
jge
adc
push
jae
sub
xor
mov
inc
cmova
cmpsl
adc
scas
leave
mov
sub
push
dec
xor
pop
and
ret
int3
test
pop
in
xchg
mov
pop
mov
sbb
dec
repnz
push
nop
inc
sbb
xor
xor
sbbb
mov
stc
inc
std
fdivl
fstps
jae
ret
stc
sbb
out
sbb
mov
lahf
sub
xor
sub
loope
call
or
mov
sub
inc
mov
jle
push
scas
cli
inc
jmp
inc
adc
cwtl
sbb
mov
cwtl
es
jae
dec
mov
mov
and
lahf
out
cmp
std
dec
aas
adc
pusha
cmp
lds
xchg
hlt
insb
xor
jp
xchg
add
push
xchg
add
mov
in
shll
cmp
ficompl
sbb
sbb
cmc
mov
out
mov
push
sub
outsl
pusha
ret
into
shll
pop
punpcklwd
loop
dec
push
xchg
ljmp
rclb
xchg
mov
lret
lret
stc
pop
push
pop
aaa
cwtl
sbb
or
sub
clc
imul
cwtl
dec
cwtl
sbb
call
in
lcall
pop
xchg
insb
leave
arpl
push
adc
std
xchg
jno
jge
ljmp
sub
je
mov
jnp
icebp
mov
int3
mov
je
push
into
mov
cli
xor
es
test
pushf
push
and
loop
cmp
faddl
fdivrs
addr16
jmp
adc
mov
test
fistps
daa
cmp
cmpsb
aam
daa
jl
shlb
cmc
lahf
cmc
fidivrs
push
pop
imul
lcall
fsubr
fxch
into
out
subb
rcrb
das
gs
lret
push
mov
cmpsb
sbb
fadds
push
lea
ret
sahf
movsl
aaa
push
mov
mov
push
or
push
movsb
xchg
push
dec
rclb
mov
push
lahf
sbb
inc
fwait
cmp
xchg
les
rclb
pop
push
movsb
mov
mov
lock
inc
sub
mov
out
sub
push
fistpl
testb
test
dec
vsqrtps
and
mov
movsb
inc
outsb
mov
jb
cs
push
mov
fldenv
mov
pop
xor
and
xchg
adc
pop
das
orl
ss
cmp
adc
inc
outsb
and
bound
add
push
pop
mov
int3
cmp
cmp
clc
sbb
jb
pop
xor
mov
scas
ret
cld
stos
in
and
inc
cmp
pop
std
fwait
leave
jmp
lods
xor
dec
xchg
mov
icebp
pop
andb
pop
lret
dec
push
cmc
inc
sub
cs
daa
push
out
mov
push
dec
das
push
cmp
aad
xlat
mov
add
sbb
hlt
add
faddl
jnp
adc
popa
lea
adcl
xchg
movsb
scas
testl
js
pop
lcall
movsb
or
lods
lretw
stc
dec
fistps
sbb
add
push
insb
cltd
xchg
insb
jmp
mov
out
or
push
xorb
sarl
pop
sbb
pop
xor
mov
ret
jge
sahf
stos
pop
inc
push
pop
jle
pop
lock
mov
leave
daa
push
sub
outsb
mov
cltd
ret
cmp
popf
movl
add
dec
push
xchg
pop
or
or
jl
pushf
stos
fmull
push
int3
mov
push
stos
mov
mov
xchg
mov
push
adc
mov
or
adc
shrb
scas
adc
clc
clc
mov
clc
dec
movsl
pop
add
nop
cmp
negb
sbb
lahf
xor
rcll
mov
jne
es
nop
fistpl
sbb
ror
pminub
push
jl
lret
lds
ljmp
in
mov
pushf
push
icebp
out
fistpll
mov
adc
aam
fstpt
popa
mov
xchg
xlat
lcall
mov
subb
fdiv
aad
ljmp
and
jns
or
cmp
add
faddl
inc
xchg
jns
fwait
mov
daa
mov
pop
xor
add
mov
mov
orb
jg
enter
mov
inc
jb
push
mov
pop
cmp
pop
mov
add
in
inc
aad
cmp
pushf
mov
out
stc
xor
push
mov
call
xchg
cwtl
pop
test
es
cmp
cmp
imul
pop
push
sbb
xchg
fisubs
adc
test
adc
or
mov
mov
iret
jecxz
sarl
xchg
lahf
xor
add
xlat
add
xchg
mov
jecxz
hlt
aam
int
stos
sbb
aam
push
outsl
in
sahf
adc
insl
and
das
xor
out
xlat
fwait
sbb
imul
jbe
inc
jp
jb
jle
fdivrs
jbe
sahf
or
iret
pop
pusha
outsl
iret
pop
adc
add
js
mov
pop
push
lcall
loop
jb
mov
inc
xchg
aaa
and
sbb
popa
rol
fs
adc
jne
jp
xor
jno
aaa
in
cmpsb
jecxz
in
out
sub
sahf
lcall
insl
mov
int3
scas
enter
insb
dec
cmp
cmpsl
aam
sbb
xchg
jl
mov
pop
imul
pusha
icebp
cmp
hlt
rcrl
fisttpll
push
dec
lock
jns
dec
iret
lret
pop
adc
dec
loopne
lock
loop
xlat
divl
scas
mov
sub
push
shl
push
push
push
iret
adc
cmp
adc
adc
cmp
jge
arpl
xchg
add
sarl
cmpsl
pop
dec
dec
lret
stc
inc
cs
pusha
lea
or
mov
inc
jp
push
mov
xchg
aam
addr16
lahf
and
std
fs
xor
fimuls
xor
addb
xchg
call
fidivl
stos
popa
loopne
pusha
mov
adc
ja
mov
xor
mov
fidivs
xor
pop
adc
xchg
mov
push
mov
je
hlt
push
xchg
add
fldl
sub
in
push
pop
out
lods
sbb
xchg
inc
fwait
or
out
repz
aad
push
push
sbb
jbe
inc
stos
cltd
mov
adcl
cli
cmp
mov
push
or
cwtl
mov
int
sub
add
repz
push
pop
les
xchg
mov
les
and
cmp
frstor
sub
add
inc
push
inc
dec
leave
ja
cmp
movb
fcmovu
mov
ja
inc
mov
clc
jo
iret
sbb
push
mov
mov
jge
aad
add
cmp
fdivrs
divl
cmp
data16
lcall
pop
icebp
sub
icebp
daa
and
or
icebp
pusha
pop
leave
cmpsb
jp
insl
mov
jno
fdivs
xor
test
fs
pushf
sbb
push
sbb
xchg
clc
sbb
mov
rcrb
jl
notl
iret
push
mov
pusha
loope
sbb
xchg
xor
pop
jb
enter
pop
dec
in
xor
scas
fwait
aaa
mov
xor
mov
lret
imul
arpl
mov
mov
ret
decb
xchg
push
pop
shlb
pop
clc
push
das
sbb
xchg
rcrb
pop
idiv
mov
add
cmpsl
outsl
jno
sub
mov
dec
out
pop
shlb
mov
xchg
jg
dec
mov
cwtl
mov
jl
cltd
push
movsl
push
dec
mov
mov
inc
outsl
push
adc
or
sub
add
sub
cli
push
inc
adc
mov
sub
mov
push
add
xchg
cmpsb
dec
shlb
div
mov
data16
fimull
push
xchg
mov
std
pop
sbb
pop
push
into
pop
mov
pop
dec
inc
jnp
xor
popa
loop
cmp
rcpps
scas
sub
ret
test
jg
jb
sbb
lret
dec
xchg
mov
jge
inc
xchg
addr16
sub
imul
pop
xchg
push
sbb
xor
push
loope
stos
repnz
aad
outsb
xchg
addr16
gs
jbe
mov
lret
cmpsl
push
jae
fildl
test
mov
sub
out
push
pop
cmp
cmc
out
and
mov
cmp
call
mov
int
in
add
inc
pushf
mov
mov
sti
xor
lods
addr16
sub
adc
filds
push
pop
lock
push
mov
nop
xor
cmp
hlt
mov
out
test
std
sahf
loopne
clc
cwtl
dec
mov
mov
out
ja
ss
inc
xchg
ret
push
test
inc
pop
mov
daa
pop
aam
loop
lods
sub
dec
aas
dec
aam
and
sbb
stc
inc
xor
lret
mov
insb
enter
push
rcrl
mov
arpl
cltd
push
sub
or
scas
pop
sub
imul
imul
cwtl
cmp
mov
adc
and
mov
insb
lahf
or
mov
sub
push
xlat
mov
xchg
iret
xchg
cmp
stos
dec
adc
in
jge
out
sbb
xor
pop
sub
mov
adc
arpl
sbb
add
and
in
movsb
ja
jns
lds
xor
test
mov
add
mov
and
cmp
push
roll
ljmp
add
mov
mov
mov
daa
jbe
aas
repnz
aam
sarb
and
bound
inc
div
and
fistpll
das
xchg
adc
or
aaa
jmp
sbb
sbb
jbe
inc
adc
ds
mov
inc
dec
sbb
int
jmp
addb
cli
mov
pxor
test
out
lock
call
push
xlat
pop
sti
str
pop
ja
aaa
inc
les
cwtl
or
cmc
pop
pop
pop
xchg
dec
jnp
popa
jo
jae
loop
dec
xchg
aad
neg
inc
xor
loope,pt
test
int3
test
jo
lods
cmovp
ja
into
xchg
mov
add
mov
das
test
xorb
pop
mov
das
fsubrp
xchg
addr16
ss
mov
pusha
xorb
cmp
add
jno
and
int
dec
icebp
and
and
push
movsb
movsl
test
mov
je
icebp
add
fmuls
sbb
mov
mov
sbb
dec
pop
sub
jge
mov
sahf
and
push
mov
jg
xchg
mov
pushw
sti
pop
pop
dec
push
scas
jnp
repnz
mov
leave
mov
sahf
pusha
mov
bnd
and
leavew
mov
testl
jle
pop
inc
scas
pop
cmp
repz
in
iret
fwait
and
inc
mov
cltd
dec
jmp
mov
mov
xor
xchg
pop
mov
loope
and
xchg
mov
ret
pusha
and
cmpl
add
or
sub
sahf
dec
fistpl
mov
adc
xor
jge
push
orb
jge
push
mov
dec
mov
das
lea
outsb
das
and
dec
mov
xor
lret
nop
roll
sbb
xor
pop
imul
adc
mov
xor
inc
ja
push
leave
mov
rorb
adc
jae
dec
aas
add
popa
xlat
lock
pop
xchg
xor
loopne
jns
inc
enter
xor
push
imul
les
push
cmpb
andnps
inc
xchg
mov
push
cmp
movsb
lods
pop
fs
or
adcb
xchg
into
xchg
icebp
stc
shlw
gs
jnp
pop
loopne
lods
jle
clc
test
xor
xchg
add
ds
mov
dec
lock
xchg
mov
imul
pop
cld
dec
icebp
nop
subl
push
bound
and
loope
leave
pusha
popa
add
push
sbb
mov
test
js
push
les
test
cmp
test
fistpll
test
jae
stc
add
hlt
jae
push
cwtl
cli
inc
add
sub
aam
aas
mov
out
jb
sub
sbb
ror
sbbl
aam
mov
inc
mov
int3
insb
push
lcall
flds
outsb
inc
sbb
cmp
sti
mov
repz
inc
inc
lret
adc
jne
add
das
int3
in
cld
in
stc
ljmp
sbb
jae
cmpsb
loope
lahf
cli
es
test
add
xchg
xchg
imul
jae
dec
xor
cwtl
bt
and
xchg
popf
mov
orb
imul
add
push
gs
ret
adc
iret
out
jns
mov
add
fstpl
ud1
mov
cmp
mov
arpl
inc
push
fmulp
test
mov
pusha
cmc
lods
sub
cmpsb
pop
xor
inc
popf
jecxz
cmp
xchg
pop
jmp
insl
cmp
cmpb
insl
stc
in
dec
insb
mov
fimuls
repnz
jnp
and
and
testl
jae
testb
lods
pop
xchg
mov
and
aaa
cli
fucomip
mul
pop
mov
insl
stos
inc
mov
xor
push
scas
mov
sbb
dec
cld
sbb
dec
out
add
in
lcall
iret
mov
xor
cmpsb
add
sub
xchg
lret
xor
inc
les
dec
jp
loopne
repnz
jmp
or
imul
jnp
enter
call
out
and
loopne
cwtl
test
pop
mov
or
dec
ja
in
es
fsubrl
and
mov
fdivrs
mov
cmp
jge
sub
jnp
pop
fnstenv
sbb
mov
jne
push
imul
jbe
inc
add
test
rcl
gs
jle
inc
cmpsb
fwait
pusha
pop
sub
je
and
push
cmp
in
mov
push
mov
shlb
sub
out
cmp
cltd
mov
mov
add
out
stos
pop
sbb
xchg
mov
push
daa
mov
repnz
xchg
and
sub
cwtl
pop
bound
int
aam
jb
rol
ret
fwait
mov
pop
xchg
loopne
je
add
mov
add
pop
pop
insb
jmp
notb
adc
imul
mov
in
push
es
lret
pop
adc
cmp
mov
pop
sub
and
adc
push
inc
inc
inc
cld
outsl
jno
jecxz
divb
sbb
rorb
jle
stc
cmp
xchg
mov
roll
lcall
or
cmpsl
mov
test
aas
push
sahf
mov
dec
add
aad
gs
subb
push
sub
mov
call
cmpb
stc
dec
stos
sub
xchg
sbb
pop
and
stos
iret
test
addr16
jne
movsb
adc
xchg
push
into
cmp
xchg
mov
mov
fcmovnb
add
jb
sbb
jbe
jo
jns
mov
xchg
or
inc
pop
das
icebp
lret
repnz
insl
out
inc
lods
cmp
sti
inc
adc
pop
lock
xor
dec
inc
dec
pop
aam
stc
stos
adc
incl
cmp
xchg
and
cmp
mov
sub
mov
fnstcw
mov
cli
cltd
inc
es
int
add
movsb
aas
lock
pop
in
adc
imul
push
inc
lds
jl
int
mov
loop
loope
out
int
sti
cmc
ds
jae
sub
cli
fimuls
pop
arpl
sbb
and
outsb
pop
decb
cmp
int
and
add
cmc
stos
mov
scas
pop
dec
and
fmulp
clc
cmp
movsb
sbb
test
lods
testb
lahf
loope
jecxz
sbbb
fs
mov
hlt
xor
or
push
sahf
fisubl
jecxz
leave
movb
lea
addr16
shr
cmc
jbe
in
je
or
jmp
push
lods
loop
sahf
in
sub
cmp
push
mov
loop
pop
scas
sbbl
mov
pop
shlb
nop
xor
mov
flds
mov
inc
adc
dec
fiadds
loopne
adc
mov
fisubrl
jmp
xor
pop
xor
jle
pop
repz
rclb
scas
sbb
jp
sub
add
popa
bound
inc
dec
imul
or
add
sbb
fnstsw
cmp
cli
jb
fwait
out
sbb
inc
mov
scas
hlt
jg
xchg
dec
or
or
test
outsl
jp
adc
dec
aas
mov
int3
add
push
xor
push
stos
jl
cs
mov
pop
cld
insl
or
loopne
loopne
adc
lds
jp
call
jne
ret
xchg
sbb
fmuls
pop
adc
pop
mov
push
and
sub
mov
aad
mov
fcomps
mov
clc
xchg
push
push
xchg
sbb
cltd
or
mov
ret
outsl
data16
dec
sbb
pusha
jb
add
dec
push
sbb
mov
fwait
dec
jo
adc
or
inc
mov
push
repnz
fwait
mov
popa
lret
push
jno
aaa
push
pop
or
lret
push
push
hlt
ljmp
arpl
test
and
pusha
dec
dec
fnstcw
cmpsl
stos
sub
xchg
push
jb
out
insl
scas
sbb
inc
mov
mov
or
std
jle
imul
das
lret
outsb
mov
pop
sbb
nop
repnz
movsl
bound
jae
lret
add
js
mov
mov
in
outsl
mov
mov
fs
das
bound
cli
mov
movsl
stos
repnz
mov
sub
cmp
test
out
jbe
xchg
adc
sarl
mov
div
inc
xorb
mov
mov
dec
imul
dec
mov
mov
pop
enter
nop
das
mov
mov
pop
inc
pop
out
pop
or
xor
xchg
mov
or
mov
xor
hlt
in
jl
jne
lcall
push
xor
out
jno
cmp
or
pop
gs
push
mov
gs
pop
or
fwait
repz
aas
scas
push
pop
popa
mov
dec
test
inc
mov
or
int3
stos
lea
and
test
mov
mov
int
lea
bound
xor
ffreep
xor
mov
shrb
scas
cwtl
xchg
outsb
outsb
invd
fisubrs
xchg
jmp
daa
xchg
sarl
jne
cld
mov
pop
xor
sbbb
mov
scas
mov
std
pushf
inc
inc
sub
mov
in
lret
shrl
leave
and
nop
dec
mov
sti
mov
mov
ffree
cltd
xchg
in
cli
inc
cli
sbb
and
or
cmpsb
inc
repz
out
loopw
jns
xchg
nop
xchg
mov
fnstsw
rorb
adc
or
push
dec
jne
movsl
xor
push
pusha
mov
jbe
imulb
stc
mov
insl
stos
sbb
pop
mov
cmpsb
lock
pop
pop
jecxz
loopne
pop
push
cwtl
or
std
inc
int3
or
adc
shrb
mov
pop
test
fildl
sbb
data16
sub
lds
xchg
push
adc
mov
xor
ret
enter
subl
mov
mov
or
pop
test
sahf
or
lods
les
test
pop
sub
repz
lock
push
clc
mov
xchg
or
scas
mov
push
int3
push
rorb
push
xor
aas
fptan
gs
inc
push
daa
adc
push
call
mov
xchg
rcrl
fsubr
push
iret
sarl
cwtl
stc
sbb
dec
insb
mov
filds
hlt
or
xchg
push
fstl
movb
mov
test
mov
in
add
dec
fmuls
push
insl
out
inc
outsl
fbstp
adc
imul
stos
and
ret
sbb
xchg
daa
fsubrs
cwtl
into
add
push
push
adc
ret
inc
fnstenv
jno
mov
adc
stos
and
and
sti
mov
insl
jg
lahf
loope
and
aam
das
push
inc
xor
mov
js
adc
jne
in
cmpsl
xchg
inc
aaa
jmp
add
mov
sahf
sbb
test
inc
fsub
or
das
out
repnz
shll
dec
add
sbbl
push
pop
loopne
in
jg
out
jns
pusha
push
add
cmp
lods
sub
subb
cltd
sub
movsb
nop
je
icebp
xchg
fwait
aam
fcmovnbe
add
clc
enter
nop
popf
cwtl
stos
xchg
adc
dec
lcall
adc
ret
xchg
data16
push
mov
pop
ret
jmp
jbe
mov
pop
inc
sti
pusha
mov
cmp
dec
mov
movsb
push
sub
fidivrl
rorb
cmp
loope
jnp
lcall
or
into
testl
subl
push
fwait
das
push
xchg
clc
pop
pusha
mov
lea
push
test
sbb
mov
arpl
loop
fiaddl
sub
adc
scas
scas
sbb
in
push
je
sbb
jle
jecxz
fimull
stos
das
xor
fwait
test
cmpsl
test
andl
dec
rdmsr
xchg
shll
inc
mov
fprem
push
mov
scas
sbb
das
pop
movsb
imul
cli
addr16
sbb
idiv
push
push
dec
cmpsb
test
xchg
std
fwait
adc
push
push
div
lret
push
jge
adc
push
bound
cli
cmpsb
jb
jne
es
les
jecxz
shl
lret
data16
loope
loope
sub
inc
xchg
fsubs
cmc
inc
mov
imul
sbb
xchg
inc
mov
in
xor
mov
loope
pop
and
out
mov
lds
insl
xor
sub
shrb
and
lcall
std
jecxz
cmp
iret
fsubl
cmp
les
sbb
xor
ljmp
mov
test
xchg
ret
jne
popf
test
adc
pop
sbb
jp
fisttpl
mov
pop
test
sbb
xlat
loop
or
xorb
and
add
cmp
xchg
insb
mov
inc
push
sub
jbe
mov
jl
mov
lock
movsl
jne
mov
les
dec
shll
ja
shll
mov
adc
pop
dec
xor
iret
lret
iret
or
movsb
mov
pushf
leave
notl
movsb
test
mov
add
dec
out
clc
lods
sbb
xchg
jo
sub
outsl
orb
push
dec
cmp
add
sar
fwait
add
scas
icebp
mov
scas
xor
nop
pop
jbe
pop
aaa
or
negl
ret
loopne
cmp
xchg
cmc
je
mov
mov
orl
cmp
pop
cmc
lret
fs
push
cmp
jge
imul
ret
dec
add
mov
sti
and
mov
dec
psrlw
repnz
icebp
subb
or
hlt
test
lea
mov
int
jmp
add
ja
push
dec
mov
imul
xchg
aas
ds
popa
pop
pop
leave
imul
int
imul
popf
mov
and
xchg
lods
pop
push
adc
mov
or
cmp
or
cli
popa
outsb
loopne
dec
jo
das
mov
lds
rorb
cmpb
dec
scas
addb
push
dec
pop
call
pop
sbb
xor
jecxz
mov
lock
jmp
ret
cmc
xlat
xchg
inc
pop
sub
fidivs
in
cli
inc
sar
mov
sti
aas
mov
or
mov
xchg
pop
js
rorb
dec
enter
pushf
inc
push
or
ret
flds
loopne
stos
jnp
ljmp
and
fildl
fcmovnu
dec
orb
mov
popf
push
and
lock
movsl
or
mov
fucomip
sbb
maxps
mov
cwtl
jns
mov
lea
in
push
adc
dec
rorl
push
adc
ja
xor
lods
decl
sbb
inc
mov
loope
cmp
hlt
sbb
hlt
insl
and
lret
inc
adc
mov
das
xchg
imul
shll
or
or
mov
mov
or
mov
int3
jbe
aas
dec
inc
fnstsw
ljmp
dec
cmp
sbb
dec
iret
cld
mov
test
lea
sbb
adc
dec
xchg
rol
cmp
popf
and
inc
sbb
insb
fisubrl
mov
sub
dec
sub
xchg
mov
mov
cmp
push
xor
push
rcl
fstpt
cmp
jp
cwtl
arpl
dec
cmovle
xchg
dec
mov
scas
and
pop
pop
sbb
sbb
xorl
repz
in
xlat
loope
add
popf
insb
shr
lea
mov
test
mov
repnz
lock
mov
jnp
das
inc
add
lods
inc
jmp
out
sbb
adc
sub
call
ficompl
out
inc
and
xchg
in
mov
lods
test
flds
adc
fwait
mov
jns
xchg
pop
or
lock
dec
sub
addb
jg
rolb
data16
mov
movsl
sub
pop
mov
mov
adc
push
xchg
sub
mov
sub
pop
out
pop
pushf
pop
scas
out
lret
jle
stc
cmp
movsb
xorb
cmp
dec
mov
ffreep
sbb
push
in
xor
push
subb
jnp
jge
add
stos
data16
test
cmpsb
pop
mov
out
shrb
adc
scas
leave
fs
rcl
cwtl
push
xor
call
jb
pop
imul
push
test
mov
or
insb
lods
and
add
and
cmp
ret
mov
imull
sbb
and
and
nop
gs
repz
in
fnsave
or
sub
lret
nop
inc
ret
in
data16
arpl
stos
notl
or
jb
pop
sarb
fcmovb
jp
xor
stos
cmpsb
and
lret
lcall
sahf
lds
xchg
adc
adc
lcall
push
fdivrs
pop
dec
imul
loop
imul
lret
xchg
push
xchg
pop
fs
mov
cmp
adc
daa
xor
sub
test
mov
hlt
iret
sbb
push
pop
pop
sbb
xchg
in
in
sbb
test
push
mov
iret
call
cmp
mov
pop
mov
aad
jl
xor
js
js
int
fildl
std
adc
fimull
lods
adc
rcll
lret
push
mov
std
xor
sbb
jmp
add
push
sbb
sub
js
xor
ret
adc
lods
fdiv
out
mov
jl
and
sahf
insb
out
jne
mov
add
and
fucomip
mov
pop
jle
addl
fsubs
inc
jb
adcb
movsb
jp
icebp
lret
mov
mov
xchg
dec
in
sahf
mov
test
out
xor
movsb
xor
dec
repnz
adc
out
xchg
jnp
pop
fdivrl
jle
push
jp
cld
dec
js
mov
jae
adc
std
dec
loope
add
jg
xchg
stos
scas
or
cmpsb
pop
add
lods
xor
dec
dec
out
fwait
inc
push
lock
or
popf
jp
lock
add
mov
jge
daa
inc
out
popf
leave
sahf
repnz
faddl
icebp
faddl
add
sahf
and
shll
and
jne
out
fdivrl
jbe
xchg
faddp
pop
popf
out
rorl
scas
icebp
sbb
mov
int3
out
js
sbb
mov
jge
repnz
xchg
into
in
ffreep
idiv
int3
pop
mov
xor
sub
push
hlt
rorl
jp
jl
xchg
fwait
sbb
push
fs
clc
sub
push
push
push
push
xchg
mov
mov
out
mov
loopne
push
imul
inc
jcxz
mov
sub
xchg
out
or
mov
rorb
ss
ja
scas
and
int
out
fs
pop
jp
xchg
push
and
push
and
dec
mov
or
cmp
mov
fs
pop
inc
adc
lods
cmp
and
mov
cmpsl
sahf
mov
adc
dec
mov
push
fisubl
lcall
ja
mov
insl
movsb
test
push
mov
dec
xor
jae
sti
mov
push
push
mov
xchg
js
int3
call
pusha
fidivl
add
jo
loope
ret
test
push
nop
adc
cmc
mov
and
xor
lahf
in
pop
lea
repz
mov
scas
icebp
scas
push
add
mov
inc
xorb
add
fisubs
mov
mov
outsb
mov
jl
rorl
adc
arpl
rcrl
inc
mov
test
xor
lahf
leave
jecxz
shr
mov
mov
sub
test
adc
icebp
scas
push
jae
push
sub
repz
jns
push
out
data16
push
sub
mov
out
in
data16
mov
mov
test
cmp
xor
rclb
je
mov
xchg
mov
ss
ds
inc
mov
mov
lret
lds
xchg
mov
jae
cwtl
inc
inc
nop
push
les
or
or
xchg
lret
sub
das
cwtl
cmpb
lret
movsb
push
insl
rcrl
cmpsl
xlat
leave
clc
adc
cmp
jo
es
addr16
adc
shrl
js
cmp
cmp
xor
adc
repz
fstp
das
xchg
mov
mov
sbb
enter
into
iret
js
adc
repz
xlat
xor
jb
dec
or
imul
lret
mov
loop
shrl
imulb
in
add
repz
jnp
ds
lret
mov
pop
dec
aaa
sti
fmuls
mov
aad
cltd
or
inc
cli
fldcw
into
dec
xorl
lcall
scas
rcrl
stc
leave
ja
mov
xchg
adcl
push
lock
or
mov
and
mov
loope
mov
and
push
add
std
pop
fwait
pop
xor
cltd
popa
mov
ss
jmp
jle
pop
and
mov
pop
sahf
nop
test
stos
sahf
jecxz
adc
push
and
faddl
add
cli
je
add
or
jmp
or
test
and
decl
dec
jnp
ret
xorb
inc
adc
xor
rcrb
stos
add
lret
das
lds
fdiv
jbe
add
fcompl
jae
cmc
mov
in
lret
adc
push
in
inc
and
inc
sub
lods
xor
xor
cli
pop
inc
cmp
mov
dec
mov
xchg
scas
in
cltd
jo
add
pusha
or
push
xchg
jb
push
lcall
shrl
pop
mov
jns
mov
push
loopne
test
xchg
out
inc
add
mulb
pop
mov
pop
loope
sbb
jb
jl
or
scas
push
lret
dec
clc
or
sbb
sub
mov
adc
lds
mov
sbb
pop
popa
pop
mov
adc
and
adc
and
das
xor
xchg
cmp
mov
mov
rorl
dec
es
mov
or
mov
mov
push
mov
inc
jb
and
mov
gs
pop
jl
out
lea
shll
shll
push
inc
or
xor
popa
in
xor
mov
cmp
jl
sub
cmp
inc
pop
pop
mov
push
lret
push
push
fnstsw
add
jnp
jnp
push
mov
int3
adc
sub
mov
sbbl
das
xlat
clc
incl
jnp
outsl
xchg
scas
sahf
dec
outsl
mov
in
push
jecxz
mov
dec
lds
das
stc
js
cs
mov
scas
fs
and
pop
xchg
mov
loop
out
cmp
dec
das
push
cmp
mov
ss
and
aam
int3
jb
cmp
cmp
adc
jne
push
stos
andb
push
sub
mov
mov
add
mov
in
lea
lods
sub
push
and
jle
mov
push
ljmp
cmpsl
pop
sub
out
pusha
out
cmp
fsubrp
cmp
loopne
jns
fcmovbe
pop
cltd
fs
or
xor
shl
or
mov
ret
cld
inc
lock
jge
pushf
outsb
test
mov
sbb
jp
cld
cmc
addr16
in
mov
and
dec
xchg
push
push
xorb
mov
cmp
stos
pop
cmp
dec
mov
inc
fists
cmp
inc
rcll
and
adc
sahf
sbb
pop
out
ja
cmp
sub
stos
rorb
pop
scas
inc
or
out
int3
and
movsl
sbb
movsl
sub
push
je
shlb
repnz
jne
inc
jle
lret
pushf
xor
xchg
push
pushf
add
js
xor
div
xchg
push
out
ljmp
movsb
mov
sbb
xchg
daa
cld
movsl
call
lods
lea
adc
mov
js
sub
mov
jae
aaa
jnp
mov
adc
mov
jb
mov
pusha
push
aad
mov
in
repnz
pop
mov
lcall
rcrb
or
xchg
jmp
xor
and
sbb
out
xor
push
adc
push
stos
ss
add
out
stc
mov
mov
pushf
xchg
int3
movsb
mov
mov
pop
xor
sub
mov
jbe
cmp
pushf
adc
js
in
jae
out
out
stos
cmc
adc
adc
push
sub
fwait
mov
lods
fstp
mov
xchg
xchg
jbe
mov
rcl
movsl
bound
sbb
aas
dec
out
mov
mov
mov
shll
jbe
es
std
push
xchg
push
shlb
lahf
jo
aaa
leave
pop
xchg
mov
int3
adc
mov
add
ljmp
pop
fsubs
jne
lods
sub
adc
out
xchg
inc
push
orb
fnsave
orl
test
inc
call
into
les
sub
mov
sahf
pop
sbb
mov
push
lret
lods
cli
test
mov
jg
mov
jb
xchg
mov
leave
push
jg
nop
lock
repnz
shrl
mov
mov
out
inc
mov
push
imul
shrl
adc
lcall
les
mov
add
fsts
inc
iret
push
nop
popf
movsb
xor
dec
out
and
mov
loope
jae
dec
cwtl
sub
stos
dec
mov
nop
adc
jp
dec
out
jns
xchg
push
push
int3
insb
jmp
lcall
bound
xchg
and
enter
movsb
xor
inc
mov
adc
outsl
jb
inc
aad
test
or
sbb
mov
mov
fildll
cmp
pop
pusha
mov
sub
sub
inc
jle
lret
cmpsl
push
fmuls
push
out
adc
push
push
das
mov
cmp
push
sbb
repz
cmpsb
lahf
xchg
pop
sub
lods
pop
lcall
inc
or
repz
shrl
test
ret
addr16
inc
lock
sbb
rclb
inc
xor
jmp
addr16
pop
cmp
push
mov
lret
inc
pop
in
lret
outsb
inc
push
adc
jmp
jo
push
or
and
insb
jl
jbe
aad
mov
xorb
inc
push
xor
jecxz
cmp
dec
mov
enter
lcall
xchg
mov
adc
add
jl
sbb
push
mov
xor
int
out
sbb
shll
imul
mov
aaa
dec
or
cmpsl
mov
cmp
mov
jo
ret
or
xlat
jge
cwtl
push
inc
jle
or
loop
sbb
mov
clc
push
int
jge
xchg
in
jmp
aaa
nop
jg
lret
xchg
stc
inc
lret
enter
call
roll
cmpl
pop
and
stos
fwait
sti
test
pop
cmpsb
sbb
out
lret
aas
call
mov
add
cmp
das
fwait
aaa
jmp
adc
sub
mov
inc
sub
mov
clc
mov
ret
and
bound
push
push
inc
aad
movsl
js
andb
fisubs
pusha
das
fdiv
mov
dec
ret
add
xor
xor
mov
xchg
and
ljmp
je
adc
jmp
and
jle
mov
sahf
scas
or
iretw
jmp
add
or
xlat
addr16
repz
loopne
pop
in
mov
test
loopne
nop
ret
lret
mov
mov
pusha
push
shll
xorb
cmp
xchg
xchg
pusha
insb
cmp
cmp
repz
std
xor
jge
pop
mov
sti
daa
mov
xlat
push
popf
scas
lret
lahf
cmp
loopne
mov
inc
out
sub
into
inc
pop
xchg
std
mov
or
aam
sub
jmp
jo
jecxz
inc
lcall
and
shll
cmp
xchg
int
and
xchg
test
inc
cltd
mov
pop
push
dec
rol
inc
out
jg
pushl
leave
jbe
gs
push
lcall
add
mov
repz
or
xor
sub
mov
jle
in
lods
jno
inc
sete
mov
call
hlt
stos
dec
push
push
cwtl
das
pusha
push
inc
cmp
jmp
addr16
mov
dec
mov
xor
dec
scas
dec
or
mov
jnp
ret
cmp
repz
out
test
sub
inc
dec
outsl
lock
test
xor
jne
ret
mov
push
add
out
dec
ficoms
jp
adc
push
in
add
aaa
jg
xor
sbb
data16
mov
xchg
mov
icebp
sub
pusha
dec
lds
cmc
xor
test
or
nop
pop
add
mov
movsl
push
notl
push
mov
mov
and
imul
jo
mull
int3
inc
js
adc
mov
xchg
adc
and
jp
cwtl
sbb
jne
pop
out
sti
stc
out
incl
addr16
movsl
jnp
mov
cmp
sbb
popa
dec
push
fcmovne
shlb
and
jecxz
fs
test
cmp
fstl
sbb
dec
loop
cmp
cmp
push
ljmp
push
sbb
jle
mov
jns
push
je
lods
jb
je
popf
arpl
mov
xchg
ja
test
mov
push
sbb
or
pushf
or
xor
aad
stc
and
movsl
nop
pop
xchg
inc
xchg
and
lods
cli
das
adc
stos
and
or
andl
loopne
orb
out
repnz
dec
jmp
jl
fisubs
xchg
cmp
test
cs
lret
movsl
stc
rorb
in
in
sti
adc
int3
test
jne
incl
clc
cli
jo
pushf
dec
push
and
push
push
testl
jb
jp
sub
das
inc
mov
pop
jecxz
dec
mov
mov
mov
mov
add
and
jl
mov
cmpsb
leave
shrl
or
and
out
dec
mov
out
nop
pop
jne
fwait
or
ja
mov
mov
or
or
push
prefetch
xchg
mov
sub
jl
sub
gs
shll
es
xchg
in
pusha
jb
or
xor
mov
xchg
dec
mov
lock
mov
fstpt
insb
xchg
jecxz
loopw
addb
pop
mov
xrelease
out
notb
popf
test
lret
out
push
scas
jo
int3
out
add
sbb
or
in
dec
mov
pop
pop
push
out
xchg
sub
or
pop
inc
pushf
dec
pop
dec
rol
int3
jecxz
dec
andl
xor
push
out
out
scas
xor
or
lods
mov
stc
int
nop
enter
mov
inc
sbb
and
test
outsl
sbb
pop
in
call
testl
pop
inc
adc
xchg
jae
outsl
nop
repz
sbb
adc
shl
mov
loope
inc
pop
and
jae
add
sub
loope
push
push
sub
mov
insb
mov
or
xor
xor
movsl
pop
mov
sar
sbb
les
cmpsl
mov
mov
fbstp
mov
dec
inc
xchg
mov
insl
ja
cmp
mov
and
test
outsb
sbb
iret
jg
fdivs
cli
sbb
sbb
les
mov
andl
scas
shrb
gs
and
or
ljmp
sub
pop
xor
push
cld
test
popf
pop
loopne
mov
lds
push
dec
sahf
inc
add
and
xchg
loop
pop
mov
and
jecxz
xchg
lock
sahf
add
adc
xchg
lods
arpl
jl
daa
mov
push
fdivr
pop
roll
data16
xchg
das
scas
ds
or
dec
add
xlat
hlt
xchg
not
scas
sub
xchg
jl
adc
mov
repz
mov
out
imul
in
mov
cwtl
jbe
cltd
jno
rolb
xor
cli
into
cmp
cmp
jmp
int
sbb
jecxz
sub
dec
lds
jle
sbb
in
add
imul
adc
xchg
jno
sub
outsb
lods
add
in
sbb
out
in
aas
jae
fwait
mov
mov
or
std
lock
outsl
icebp
pushf
add
aam
xlat
add
repz
pusha
dec
or
mov
cmpl
dec
mov
ljmp
outsl
fmull
call
call
mov
outsb
lods
lock
inc
or
lcall
insb
mov
fisubs
scas
rcrl
movsb
ljmp
mov
pop
inc
or
pop
lods
sti
or
ss
lods
mov
in
insb
sbb
sub
adcl
sbb
xchg
inc
push
dec
and
mov
cs
popl
lret
sbbl
in
sbb
adc
inc
xchg
push
lret
and
lahf
push
outsb
std
cmp
lea
lods
loop
dec
lock
mov
lods
xchg
pop
dec
lret
cmp
and
out
movsb
inc
inc
rcll
cltd
inc
lret
jp
sub
negl
jne
add
sub
dec
jmp
fcomip
aam
xor
cmp
lock
lret
movsl
out
and
xchg
imul
mov
sarl
das
pop
insl
cltd
mov
xchg
scas
jmp
arpl
mov
aas
xchg
aaa
in
xor
sbb
nop
pop
popa
jae
fs
mov
cli
sbb
mov
movb
and
pop
idivl
pop
mov
sbbl
aam
jge
or
and
or
data16
movsl
push
push
xchg
dec
popa
mov
jmp
imull
subl
dec
adc
mov
inc
stos
insl
ret
sbb
mov
cmp
mov
lret
sbb
lcall
cmp
add
dec
in
hlt
pop
jge
push
sbb
movsl
push
rcl
xchg
lds
aad
lea
xor
mov
mov
addr16
subb
cmp
pop
adc
nop
mov
aas
adc
or
testl
fiaddl
jne
inc
inc
js
shlb
sub
lahf
pop
loope
push
or
andl
or
ljmp
dec
fwait
dec
lods
mov
pop
int
imul
test
mov
inc
mov
sti
and
xor
inc
cmp
fs
sbb
inc
test
push
shl
add
data16
cs
xor
loop
mov
mov
push
sbb
push
sub
mov
inc
fisttpll
jmp
addr16
jnp
jge
imul
pusha
inc
aam
dec
inc
mov
pop
mov
dec
lds
in
add
pop
frstor
and
popf
mov
divl
ficomps
jb
aad
testl
in
xchg
aam
xor
lods
push
adc
xchg
jae
push
jl
loop
sahf
out
dec
mov
or
push
sub
or
push
sub
ret
pop
inc
test
out
and
sub
push
nop
sbb
jae
jl
stos
mov
jnp
dec
scas
enter
shl
ja
lret
std
mov
mov
nop
sti
xchg
jle
mov
mov
dec
mov
fsubr
aam
ss
cmp
loope
js
mov
stos
push
ret
test
xchg
cwtl
adc
je
lret
lds
cltd
les
lcall
xchg
imul
nopl
mov
sub
std
mov
sbb
fisttps
sbb
js
push
push
divl
jb
and
ja
stos
lds
loop
pop
int
orb
loope
rorb
add
data16
add
xchg
hlt
and
xchg
push
loop
push
pop
and
inc
lret
cwtl
fists
and
fldz
addb
xchg
movl
and
cmp
and
pushf
xor
sarl
push
jl
adcb
shl
adc
repnz
loopne
sbb
loop
iret
adc
cmp
adc
out
nop
sbb
call
in
mov
dec
or
pop
sub
inc
add
int3
jne
jo
pop
nop
push
cs
or
fs
orb
stos
inc
cmpsl
inc
xor
fldt
gs
pop
pop
cmp
pop
mov
dec
lret
mov
or
mov
and
dec
xchg
add
ficomps
pop
pop
mov
push
adc
std
insb
adc
loopne
jb
imul
aad
cld
jmp
jo
call
push
jl
cltd
mov
ja
leave
xchg
mov
mov
push
loop
dec
dec
inc
and
adc
push
mov
dec
unpckhps
arpl
clc
sub
movsb
xor
xor
or
xor
xchg
int3
fdivrs
push
out
enter
push
mov
jbe
inc
and
loopne
xchg
dec
or
lds
sub
in
inc
mov
inc
fdivs
movsl
add
mov
fldenv
cmp
fsubp
dec
dec
or
in
das
ss
xor
inc
out
push
push
ret
mov
dec
pop
sub
dec
mov
fsubs
shrl
dec
cwtl
mov
mov
lds
rorl
fstl
xchg
imul
xchg
inc
or
imul
xor
cmp
or
pop
push
imul
test
rcll
or
imul
push
test
jb
cvtps2pi
jnp
pop
ja
mov
jo
dec
push
enter
mov
mov
xor
into
mov
push
pusha
ss
repnz
add
mov
pop
add
jb
add
jnp
add
jmp
fs
call
nop
push
idivb
lods
je
adc
enter
jne
jbe
mov
cmp
hlt
into
push
sub
pop
jbe
sub
imul
pop
and
imul
and
lahf
adc
clc
xchg
push
cltd
shll
dec
dec
inc
add
push
cmp
loope
mov
call
dec
outsb
push
in
loope
lahf
insl
cld
pop
addr16
shlb
mov
xor
xchg
into
outsl
mov
lds
imul
aam
dec
scas
lock
mov
call
xchg
xor
mull
out
fldenv
call
clc
aaa
popf
scas
sub
adc
sbb
or
rcr
std
dec
and
xchg
jmp
mov
lock
or
mov
testb
rcr
jae
bound
dec
lods
jns
inc
sahf
das
fidivrs
xchg
mov
inc
or
xchg
pop
xchg
adc
in
lcall
shl
div
aam
or
test
mov
dec
aaa
iret
sbb
push
imul
cmp
or
in
out
enter
xchg
mov
lahf
or
cmp
xchg
xchg
icebp
push
ret
mov
xor
push
in
and
in
cld
mov
adc
popa
sub
ljmp
mov
mov
popa
sbb
or
aas
jns
and
sbb
lods
in
push
pop
movsb
pop
jne
loope
mov
and
cmp
xchg
adc
int
xor
mov
or
std
mov
clc
mov
popf
aad
push
push
cmp
sub
cwtl
sbb
test
xor
stos
or
and
push
fisttpll
stc
je
pop
mov
mov
xor
or
push
add
fsub
out
rorb
cltd
xor
lahf
and
ret
adc
xor
jp
imul
loope
sbb
mov
add
aas
xchg
xchg
push
jno
mov
push
pop
xor
xchg
jno
addb
or
cmp
xor
andl
shll
ret
sub
arpl
add
cmp
inc
lods
lret
cmp
jle
lret
ret
lcall
inc
inc
pop
loope
xchg
cmp
hlt
jle
mov
imulb
push
fwait
into
push
push
xchg
ror
mov
rorl
cld
ja
pop
xchg
sbb
icebp
sub
je
push
popf
aaa
cmp
es
lea
push
push
jle
lahf
mov
xchg
sbb
test
or
cmp
sbb
xadd
movsb
rcr
nop
fistl
sub
out
cli
aaa
xor
in
stc
add
or
js
sbb
scas
ljmp
lahf
lahf
mov
js
xchg
mov
emms
sbbl
es
cmp
inc
jp
inc
inc
xlat
mov
cs
pop
mov
lretw
mov
push
popa
dec
mov
mov
pop
jle
adc
scas
and
xchg
jb
jp
gs
mov
shrl
mov
and
jbe
pushf
in
mov
cmp
xor
fmuls
fwait
dec
icebp
push
xor
mov
pop
jae
fisubrs
and
dec
fs
push
shll
rcrl
ljmp
je
mull
nop
leave
and
ss
sbb
fldlg2
popa
xor
push
or
loop
sub
cmp
sbb
daa
sub
out
sub
rcrl
push
adc
mov
jne
inc
gs
enter
cmc
leave
inc
lods
xor
loopne
daa
mov
add
push
mov
mov
lahf
rcrl
loopne
jg
push
jmp
lcall
pop
cmp
stos
mov
in
dec
sbb
xor
enter
sbb
and
imul
stc
test
jns
lret
push
xor
jae
scas
in
mov
js
mov
cmp
and
testb
sub
lods
outsl
test
js
cli
insl
loopne
mov
fisubl
or
lods
in
mov
sub
fbld
aam
icebp
pusha
out
xor
mov
and
ljmp
lret
or
in
scas
xchg
nop
jg,pn
inc
mov
lock
dec
scas
mov
cmp
jg
outsl
mov
xorl
addr16
mov
test
sub
mov
mov
clc
icebp
popf
cmp
jle
lods
push
repnz
add
out
fistpl
pop
jns
xchg
jg
test
andb
cld
aaa
addl
add
push
rcl
mov
lock
mov
idivb
ds
decb
inc
mov
mov
dec
push
nop
jno
push
jb
icebp
pop
mov
adc
push
cli
out
jecxz
jmp
cmc
aaa
and
xor
dec
dec
mov
jne
mov
stos
dec
mov
xor
mov
mov
inc
in
mov
xchg
xlat
dec
pop
inc
adc
sub
loopne
lods
or
add
sub
xchg
xchg
mov
pop
popf
in
fisubrs
test
aam
pusha
ret
cli
pop
push
and
push
stos
or
movsb
test
mov
mov
xchg
cmpsb
sbb
sahf
inc
lods
sbb
aaa
mov
into
xchg
xor
fbstp
nop
iret
lcall
mov
push
mov
je
les
out
xchg
sbb
fsubrl
inc
jbe
inc
aad
push
divb
push
test
xor
cmp
mov
cmp
push
addr16
push
mov
jnp
inc
pop
adc
fldenv
xchg
lcall
push
loope
sbbb
aad
cmpsl
dec
shrl
xor
aam
fmuls
jecxz
mov
les
icebp
cmp
push
push
xchg
nop
and
inc
mulb
inc
into
xorb
jns
cmc
ds
push
add
xchg
sub
sub
add
push
popa
popf
clc
shll
mov
fwait
and
push
cmpsl
sub
push
loopne
adc
xchg
and
scas
scas
add
cmp
sbb
leave
and
push
pushf
jp
push
push
sub
jg
add
inc
popf
jg
fiadds
jnp
fdivs
mov
mov
xchg
xor
jle
icebp
popa
adc
xchg
mov
or
pop
cmp
fstl
inc
adc
mov
jb
dec
scas
cltd
mov
andl
mov
add
mov
ja
add
ljmp
insb
mov
dec
sahf
push
icebp
aam
std
xor
aas
stc
and
mov
push
ret
and
loope
mov
loopne
sbb
fwait
xchg
cld
xchg
dec
xchg
jns
push
lods
jne
xchg
or
inc
shl
daa
ja
jge
sub
pop
test
mov
call
xchg
bound
fistl
jg
popf
pop
icebp
xor
adc
mov
cltd
daa
jmp
or
xor
pop
lret
repnz
test
xor
push
lret
loop
and
jno
cmpsb
dec
nop
insl
lahf
lcall
clc
or
mov
movsb
jecxz
and
inc
leave
pop
adc
in
leave
mov
pop
out
and
push
stc
lods
scas
mov
xchg
mov
daa
mov
and
cmpsl
sub
lock
lock
or
inc
jmp
loope
imul
cmpsl
xchg
push
stos
lock
dec
insb
cwtl
adc
sub
jecxz
lret
int
ds
mov
in
clc
outsb
mov
add
les
lea
incl
xorb
sbb
sbb
pop
out
cmpsb
addr16
sbb
and
mov
fidivrl
add
jno
or
rep
sub
loope
lahf
and
scas
out
fwait
test
push
test
add
scas
jb
fidivrl
aas
sub
mov
cld
stos
clc
clc
sub
push
push
push
sbb
pop
push
jp
outsb
ret
push
inc
call
inc
add
dec
sbb
xlat
clc
and
adc
mov
lea
das
mov
cmp
fimull
test
lret
jg
lea
dec
push
test
pop
loope
inc
mov
inc
adc
or
mov
gs
mov
mov
fisubrs
sub
es
insl
mov
mov
idivl
pushl
outsl
scas
jnp
xchg
xchg
leave
jbe
ss
in
cs
xchg
pop
xchg
push
iret
fisttpll
and
xor
aaa
adc
enter
data16
dec
stos
push
xchg
xor
xor
test
clc
jge
push
fwait
jge
and
lret
jne
call
es
stos
mov
shl
add
ret
movsb
add
and
jecxz,pt
inc
fwait
ljmp
sbb
push
fwait
mov
iret
call
movsl
out
or
aam
inc
sbb
scas
cmp
add
nop
mov
enter
adc
clc
pop
mov
stos
mov
inc
in
mov
xor
inc
cmpsb
in
loope
loop
adc
test
rcrb
push
inc
lahf
sbb
je
sub
das
sub
in
icebp
ret
push
push
les
inc
int
insb
loop
fld
or
test
add
jnp
push
and
push
incb
sub
insl
push
pop
xchg
mov
mov
pop
jb
sbb
mov
jle
jnp
insl
lret
add
cmpsb
push
sub
ficoms
imul
sub
bnd
sbb
dec
pop
enter
mov
sti
jo
add
inc
lea
rclb
sbb
pop
pushf
hlt
fwait
adc
sub
mov
push
daa
push
imul
ds
xor
data16
pop
jmp
cmp
xor
pusha
pop
shll
push
outsb
testb
mov
hlt
in
or
cld
outsb
mov
popf
inc
cld
inc
int3
int3
push
cwtl
int
inc
imul
and
les
les
arpl
bound
xchg
icebp
in
push
sub
mov
dec
negb
push
mov
sbb
push
push
xchg
xchg
cltd
push
add
mov
add
lea
movsl
negb
xor
jae
adc
sbb
mov
or
lock
sub
sub
lods
leave
insb
dec
mov
xor
cmpps
addr16
lods
dec
and
and
insb
popf
cmpsb
sbb
jo
xchg
push
inc
dec
popf
or
fisttpl
dec
fmul
xor
dec
jecxz
adc
fisubrs
std
sbb
fadds
jne
out
dec
mov
cs
idivb
ljmp
dec
push
push
inc
adc
lcall
cmp
push
push
test
jne
ja
push
sub
addr16
scas
mov
or
test
jnp
jae
js
loopne
fcompl
mov
pop
mov
rcll
xor
insb
leave
es
mov
push
jge
pop
dec
divl
add
das
js
iret
outsl
lret
jb
dec
or
hlt
inc
mov
sbb
xchg
xchg
pop
and
fimuls
and
aas
stos
xchg
daa
call
rcl
aas
mov
jno
ljmp
jp
add
cmp
xor
clc
push
cli
notb
in
int
jge
jno
cmp
es
inc
inc
aaa
xchg
mov
mov
inc
mov
imul
add
sbb
into
sbb
scas
out
push
in
lret
mov
sti
and
fs
cs
test
mov
add
lods
inc
repnz
pop
and
or
xorb
scas
rorb
adc
outsl
mov
lret
adc
rcr
test
sub
and
xor
and
and
cli
es
pop
jns
cmp
cmp
xor
rcll
cs
add
scas
call
jns
ret
in
xor
fcmove
adc
xchg
jge
in
dec
imul
mov
or
inc
lret
insl
mov
aaa
jg
and
cmpsb
mov
xor
mov
add
xchg
movsl
insl
je
pop
dec
int3
or
mov
dec
cmp
gs
mov
jle
xchg
mov
fdivl
push
dec
iret
frstor
adc
rep
insl
lcall
cmpsb
in
ret
xchg
push
out
and
loopne
mov
out
jae
pop
inc
inc
cmc
lea
aad
sub
fistpll
dec
add
orb
mov
outsb
imul
mov
push
repnz
cltd
std
lcall
fbstp
test
fnstsw
mov
xchg
iret
ficoml
cmpsb
sbb
pop
pusha
xchg
lret
cmp
sbbl
ss
lods
into
ss
es
mov
outsl
cmpsl
mov
cmpsl
in
subl
push
fiaddl
push
loopne
imul
stos
test
jmp
pusha
dec
inc
aas
push
sub
mov
dec
lods
sahf
test
ljmp
loop
or
call
or
push
push
pusha
pop
pop
aaa
and
inc
dec
repnz
cmpsb
jg
nop
ret
mov
push
dec
push
inc
lea
mov
xchg
xchg
xor
and
cmp
loopne
dec
dec
add
dec
outsl
and
and
push
mov
inc
xchg
test
fisubs
test
shll
mov
sbb
lret
test
pop
and
xor
adc
into
in
icebp
pop
mov
jmp
jne
and
mov
mov
pop
ret
mov
cs
inc
or
stos
outsl
cmp
icebp
dec
push
repz
xchg
mov
mov
in
add
xchg
lret
imul
sbbb
clc
sarb
xchg
sahf
imul
ficompl
test
lcall
movsb
jns
js
jno
test
or
xchg
int
movsb
mov
add
orl
imul
adc
loop
loop
stc
or
leave
mov
insb
sarb
fdivl
cmpl
mov
add
inc
iret
js
insl
pop
fsts
ret
in
cmp
rcll
dec
pop
xchg
rolb
inc
xchg
lahf
aaa
popa
xlat
mov
enter
mov
ds
pop
and
in
jmp
add
or
sub
mov
es
and
lods
popa
fildl
or
adc
clc
pop
mov
sub
shlb
out
adc
mov
mov
sbb
loop
andl
adc
add
and
push
mov
jnp
jae
push
addr16
stos
push
adc
insl
add
cmp
dec
imul
pcmpeqw
xchg
out
jo
mov
sbb
shrl
jbe
imul
inc
in
jmp
int3
arpl
inc
mov
outsb
pop
cmp
int3
adc
mov
mov
arpl
negl
ret
push
aad
scas
and
mov
sbb
sub
sti
fwait
lret
xchg
jmp
xchg
or
mov
ss
in
mov
xor
cmp
inc
fistps
aas
aam
push
push
daa
cmpsb
and
mov
fsub
test
test
mov
mov
mov
sbb
dec
sub
mov
ss
rolb
nop
arpl
jns
adc
mov
sbb
sub
push
mov
sbb
iret
icebp
cmp
xchg
xchg
jp
scas
ret
cltd
lahf
or
popa
jbe
jae
inc
mov
aas
inc
pushw
inc
outsb
lods
call
ljmp
dec
enter
xchg
mov
call
add
sub
cmp
cmp
adc
pop
fdivs
sub
dec
xor
mov
lret
or
cmpsl
popa
lock
xor
dec
mov
jl
mov
aaa
jl
push
lea
sbb
ljmp
mov
test
mov
hlt
add
push
clc
sub
dec
mov
jo
inc
cld
je
lahf
sbb
cwtl
imul
adc
lahf
inc
les
cmp
sbb
push
faddl
fwait
je
dec
outsl
mov
pop
das
push
mov
sti
adc
cmp
pop
xor
mov
adc
xchg
mov
adc
sbb
les
in
inc
mov
mov
scas
and
and
addl
ljmp
subb
stos
rolb
jbe
and
mov
loopne
fistl
mov
pop
push
shrb
sub
sbb
arpl
pop
sub
out
or
and
push
xchg
sub
cmpsl
mov
and
mov
push
or
cmp
stc
repz
pop
mov
xchg
or
lahf
mov
jae
sahf
cmc
add
push
cmpsl
inc
add
xchg
rorb
adc
push
sub
call
inc
inc
pop
mov
lods
popa
lret
or
cli
xor
pop
adc
sbb
imul
sbb
test
sbb
lcall
jnp
mov
sbb
cmc
or
mov
lods
xlat
daa
dec
in
clc
jbe
sub
pop
dec
jmp
mov
out
imul
mov
ret
insl
mov
xor
idiv
mov
push
std
stos
sbb
mov
push
push
xchg
inc
or
cld
sub
icebp
int3
lahf
adc
bound
outsb
push
cltd
sbb
adc
notb
cmc
xchg
iret
outsb
lods
push
rcll
dec
pop
sub
fstps
sbb
mov
lcall
fisubrs
loopne
or
xchg
fstl
les
push
dec
imul
dec
jb
les
add
jno
test
aas
jb
add
pop
jbe
stc
cmp
arpl
adc
repz
notb
push
fwait
fistpl
jnp
sbb
sahf
or
mov
lods
dec
fwait
push
xlat
add
jecxz
nop
loop
iret
sahf
rolb
shll
data16
dec
push
and
cmp
cmpsb
sub
sub
dec
mov
dec
dec
jl
popa
cmp
out
mov
cmp
les
inc
sub
xor
lock
out
aam
and
jne
addb
lods
stos
pop
ds
push
and
stc
imul
inc
sti
loopne
or
mov
pop
add
sub
xor
sub
cmp
xchg
cmpb
and
imul
dec
in
call
popf
mov
jno
jo
or
lret
dec
mov
sbb
into
popf
repz
jp
mov
adc
in
dec
dec
mov
cmc
adc
cs
add
mov
mov
sarb
mov
pop
movsl
mov
in
xchg
rcl
sub
mov
pop
or
test
out
sub
popa
pop
sub
bnd
dec
lea
xor
ljmp
bound
sahf
xchg
outsb
and
push
insb
push
add
into
ret
enter
and
cmp
shl
cmp
mov
scas
and
sbb
xor
mov
or
cmp
xor
mov
add
fwait
inc
aas
mov
pop
cmp
ret
vandpd
lods
or
insb
ds
lcall
arpl
and
jnp
in
les
aaa
cli
cmp
jg
adc
mov
out
push
inc
test
push
jb
mov
inc
add
push
sarb
shl
lods
inc
lea
mov
mov
mov
mov
cmp
mov
xor
fists
iret
push
faddp
cmp
out
ja
jns
test
out
mov
mov
cltd
cld
jae
push
test
lahf
add
fcompp
je
push
rol
nop
push
mov
cwtl
pop
xor
std
xor
fneni(8087
test
sbb
push
call
popf
mov
cli
fadd
mov
loop
aaa
cmp
cltd
mov
outsl
push
mov
xchg
or
pop
aaa
pop
mov
adc
out
jb
repz
mov
int3
loopne
dec
fidivrs
stc
inc
cmpb
inc
outsb
stc
xor
cltd
or
and
xor
and
mov
sub
cmp
pop
int3
out
pop
jne
les
inc
pusha
push
adc
adc
aas
scas
pop
je
sub
ret
inc
cmp
mov
pop
and
sbb
jno
and
add
sub
mov
mov
out
sbb
adc
pop
mov
lock
dec
out
xor
icebp
das
test
stos
cwtl
adcb
pop
mov
mov
fnstcw
gs
and
dec
fsubl
shll
std
setnp
lock
aam
iret
arpl
push
add
ja
jmp
xchg
outsb
xor
xchg
cmp
loopne
pop
and
stos
xchg
pushl
in
mov
or
fdivl
sbb
mov
xorl
xchg
or
dec
aad
data16
jb
or
addr16
mov
add
sbb
or
sub
js
jg
loop
out
cwtl
je
push
cmp
clc
repnz
xchg
xchg
or
cmp
ret
inc
push
jl
xlat
pop
int3
scas
test
out
gs
or
push
js
scas
pop
pop
and
mov
mov
popf
pop
dec
sub
ficomps
push
xor
std
lods
jle
pusha
gs
or
jecxz
fucomi
movsl
adc
push
and
jns
adc
pop
mov
jb
cmpsb
xorl
cmpb
fsubl
lock
loope
mov
cmp
pop
dec
pop
lods
sbb
ds
fucomi
pop
push
pushf
daa
stos
dec
xchg
gs
lock
adc
inc
push
test
leave
fsubr
aam
fisttpll
jnp
lods
out
pusha
sub
jl
pop
out
xor
scas
cli
imul
jl
les
insb
sbb
out
call
int3
dec
fnsave
cmovo
cmc
mov
mov
inc
cli
int3
push
fwait
lret
fiaddl
mov
ja
jns
rclb
cmp
dec
fbstp
ds
jns
push
adc
mov
or
lea
outsb
push
test
fsubrp
adc
pop
xor
inc
mov
notb
inc
fs
inc
mov
adc
pop
lcall
orl
inc
xor
je
jbe
outsb
ret
sub
mov
inc
js
repz
dec
push
xor
xlat
xor
scas
outsl
pop
cmp
orl
pop
out
mov
movsl
pusha
cmc
outsb
jp
sub
lock
mov
lret
xchg
loopne
adc
mov
cmpsb
dec
cmp
adc
jb
push
pop
repz
test
dec
jge
pop
mov
push
fimull
add
inc
jno
mov
adc
je
mov
insl
sub
mov
cmp
push
stos
ret
or
inc
fisttpll
push
fldenv
or
mov
cmp
add
mov
rclb
xlat
je
lret
push
push
mov
xlat
cmp
vcmppd
gs
and
test
sub
scas
lods
in
dec
dec
stos
insl
sbb
jb
mov
in
shr
jge
pushf
push
repnz
ljmp
mov
or
enter
icebp
mov
mov
and
lcall
mov
in
xor
sbb
in
dec
pop
push
fs
xorb
mov
aas
mov
lcall
sub
sbb
outsl
mov
mov
inc
mov
mov
inc
fldcw
cmp
adc
add
mov
pop
lret
mov
mov
push
cmc
loop
inc
sbb
or
lret
xchg
pop
dec
mov
lods
cld
pop
xlat
and
repz
lcall
lock
cwtl
xor
stc
fisubrs
sbb
inc
ljmp
les
scas
dec
mov
ss
sub
addl
add
ljmp
jb
test
pop
filds
int3
push
mul
lahf
sbb
negl
bound
add
bound
xchg
mov
jmp
mov
popa
xchg
nop
add
fdivrs
lret
mov
popf
sbb
lcall
test
pop
push
sbb
dec
rcll
rorb
xor
pop
mov
js
adc
mov
shll
xchg
in
or
stos
std
in
adc
or
sbb
dec
cld
sub
adc
stos
dec
pop
inc
into
sub
or
mov
scas
sub
dec
inc
or
repz
stos
xchg
push
shl
cltd
pop
shlb
or
push
inc
sbb
es
fimull
push
jle
sub
dec
pop
and
andb
jg
jno
mov
aam
lods
push
pop
fcomp
push
ret
sub
cli
negb
jmp
jns
cmpsb
adcl
cmp
stos
mov
mov
sub
aas
pop
pop
enter
jl
std
or
fisubl
sarb
loopne
push
sub
mov
aaa
sahf
daa
adc
add
loop
js
xor
daa
das
jnp
fdivs
and
das
push
iret
cltd
sbb
imul
jbe
lock
pop
xor
test
or
mov
xchg
jb,pn
mov
fsubl
inc
shl
mov
dec
aad
ss
test
inc
xchg
out
iret
jnp
outsl
jmp
daa
dec
mov
xchg
movsb
push
lods
data16
cltd
sub
outsb
push
jmp
scas
shlb
add
mov
cli
sbb
cld
mov
sbb
dec
shlb
inc
fstl
lods
shlb
adc
cld
cmp
sbb
dec
adc
mov
dec
repz
fstpt
xchg
shl
mov
inc
sbb
pusha
xchg
push
xchg
sub
push
fucomp
out
xor
mov
popa
and
mov
testb
push
jge
jbe
jl
push
daa
lahf
insb
mov
fcomps
jmp
out
insb
cmp
jno
or
add
ja
sbb
mov
insl
test
fninit
jecxz
sub
dec
sub
mov
orb
push
push
mov
shl
mov
int
int
loopne
enter
repz
xchg
sar
sbb
pushf
test
sahf
sbb
nop
and
mov
in
xchg
cmp
inc
or
xor
popl
pusha
dec
inc
xor
cmp
in
lods
mov
ret
inc
rorb
pop
sub
nop
das
stc
lds
dec
dec
mov
xchg
jnp
and
in
push
test
sub
jb
xchg
rolb
aam
aas
or
mov
ds
sti
ss
mov
pop
inc
adc
testb
fisttps
sub
ret
jae
stc
out
ja
or
popf
int
int
jbe
jl
and
aaa
lcall
mov
push
xor
les
cmp
mov
stos
jno
or
xor
lcall
mov
mov
shlb
push
vmread
loope
or
dec
cli
inc
and
aas
imul
dec
mov
shlb
dec
sub
cld
roll
pop
or
pop
nop
mov
cmp
and
jmp
mov
jno
jno
push
jbe
test
push
xchg
inc
cmp
jle
popf
in
notb
outsl
rcrl
cmpsb
hlt
shrl
dec
fcoms
jg
js
mov
cmpsl
fbstp
mov
shlb
imul
test
shll
and
loope
dec
pop
sar
sahf
es
add
xor
xor
push
sub
faddp
push
or
mov
sbb
inc
addl
mov
push
sub
call
cmpb
add
mov
or
es
sub
push
je
cmpsl
addl
pushl
and
or
adc
jno
mov
clc
jbe
mov
inc
outsl
xchg
mov
push
lret
out
jle
into
adc
sub
cmpsb
add
fidivs
sub
clc
ja
stc
cld
dec
inc
mov
test
xor
adc
jo
popf
mov
jg
cmp
int
aam
in
loopne
inc
int3
in
dec
call
rorl
out
int3
mov
adcl
rclb
sub
lea
xchg
dec
push
mov
inc
inc
hlt
rcrl
mov
mov
inc
divl
xor
mov
inc
xlat
ljmp
mov
xor
adc
mov
or
aam
js
mov
mov
cmp
add
scas
push
or
push
add
push
rcrb
sahf
push
jnp
int3
jbe
orl
imul
lods
jecxz
dec
call
xor
sub
jecxz
push
ror
dec
ds
mov
leave
adc
jle
das
sti
lds
insl
sub
lds
mov
cmpsl
xor
jnp,pt
mov
jmp
dec
xchg
jnp
mov
xchg
jle
out
push
mov
pusha
push
jg
mov
jecxz
fs
fsubl
outsl
jns
pusha
in
ljmp
mov
mov
xor
shrb
push
sub
cmp
mov
and
cmc
and
push
adc
mov
push
xchg
aad
mov
jg
loope
adc
push
imul
stc
test
insb
xor
xchg
adc
and
aas
int3
xchg
push
adc
or
cmp
cmp
leave
das
push
sub
std
ja
aad
xchg
jbe
aas
mov
js
jns
cld
sub
ja
pop
movb
jae
xor
or
sbb
and
mov
sbbb
dec
cltd
inc
mov
mov
jne
lret
xchg
clc
pushf
cmp
push
cltd
into
push
stos
push
mov
loopne
aaa
jno
shlb
jae
aad
xor
jmp
inc
mov
xor
lock
or
push
insb
pop
jmp
xor
inc
adc
sbb
int3
sbb
call
xchg
add
mov
popf
add
fidivrs
jle
mov
into
add
mov
jo
push
mov
fdiv
jmp
mov
jge
inc
dec
into
sbb
cmpsb
aas
mov
adc
jg
push
xor
xchg
clc
adc
pop
and
je
xchg
push
adc
bound
cld
ds
fisttps
std
imulb
jl
xor
pusha
stos
scas
sbb
cmpb
rolb
adc
pop
and
popf
mov
outsb
mov
jne
push
nop
xchg
outsl
jnp
ret
jge
pop
daa
arpl
pop
leave
jge
popa
mov
mov
imul
iret
scas
mov
mov
ffreep
in
mov
xchg
inc
rcrb
push
mov
add
leave
shlb
sbb
inc
shlb
cmp
sbb
fdiv
jnp
lret
out
mov
jg
enter
out
mov
mov
aaa
and
cld
dec
fwait
sbb
pop
aaa
mov
pop
scas
dec
loopne
push
mov
jnp
mov
stc
mov
mov
xchg
jmp
inc
sub
movsb
jae
cmc
xlat
negl
movsb
jno
int3
dec
push
sti
cltd
add
std
iret
arpl
push
pop
add
das
scas
add
mov
add
lret
mov
outsl
pop
push
call
cltd
enter
xor
sbb
or
or
mov
out
into
aas
loope
mov
pop
int3
outsl
call
movsb
xchg
test
cmpsl
scas
push
or
insl
mov
sub
push
fistpl
mov
out
dec
inc
lock
and
push
sbb
push
push
sti
fsubrp
jle
icebp
push
sti
mov
lret
or
test
stos
arpl
pop
sub
push
adc
or
repz
xchg
outsb
mov
mov
sarl
lods
out
movsb
or
mov
ss
push
in
call
das
rcrl
pop
mov
pop
loopne
test
add
and
and
loopne
insb
ret
xchg
cmp
xchg
insl
lret
xor
sbb
mov
leave
lahf
cwtl
mov
sbb
popa
sub
dec
pop
sti
sbb
test
int3
xor
sbb
lock
lods
xchg
sub
aam
jecxz
cmpsl
cmp
popa
enter
mov
xor
sbb
lods
or
repz
mov
sub
syscall
jae
inc
inc
sbb
bound
mov
push
sub
push
fsubrl
sbb
dec
cltd
xorl
gs
mov
cld
or
mov
sub
sti
in
xchg
push
jle
movsl
pop
or
fldenv
xchg
aas
xchg
lea
lcall
outsb
xchg
mov
addr16
es
cltd
pop
push
jno
sub
jecxz
in
adc
nop
movsl
push
fwait
aaa
arpl
xchg
and
cmpl
jmp
sub
rolb
inc
pushf
sahf
sbb
out
dec
inc
pop
cli
xlat
roll
fstps
cld
push
fisttpll
iret
test
mov
xor
push
sub
mov
in
mov
mov
repz
mov
nop
fidivrl
loope
aaa
fistpl
sub
push
dec
fcmovnb
mov
xchg
mov
ret
shrb
adc
jmp
push
iret
inc
sbb
jns
add
xchg
sahf
adc
dec
jecxz
pushf
mov
div
call
push
mov
imul
daa
out
clc
push
inc
sub
sub
sbb
push
lock
insb
push
add
js
sbb
cs
push
push
inc
imul
gs
int
jmp
inc
pop
gs
or
icebp
fbstp
int3
ja
test
out
cmp
dec
stos
pop
cltd
scas
adc
xor
test
in
shlb
addl
test
pusha
incl
jge
push
adc
js
adc
push
sbb
lea
shrl
mov
inc
push
es
and
pop
idiv
pop
jmp
icebp
popf
enter
loope
dec
mov
mov
cwtl
pop
or
jecxz
imul
add
inc
mov
pop
or
cmp
sub
adc
xchg
sub
mov
aad
es
insb
lea
jb
test
push
iret
xor
mov
xchg
adc
cmc
pushl
ja
sub
clc
pop
aaa
dec
aam
fwait
mull
dec
push
dec
mov
rorb
in
or
xchg
add
lods
pop
mov
xor
cmc
xor
sub
andb
push
loop
jmp
xlat
sbb
outsl
cmpb
loopne
ds
pop
mov
mov
mov
inc
dec
insl
scas
push
mov
dec
and
into
add
mov
push
jmp
jne
jbe
adc
test
sbb
fucomp
cmp
jb
sbb
adc
sarb
sti
in
rorl
mov
add
out
add
or
xchg
hlt
data16
sahf
jb
pop
rclb
pop
inc
into
inc
and
nop
adc
ret
lahf
or
adc
pop
cli
gs
xchg
arpl
scas
cli
xor
or
rolb
not
lcall
mov
jg
ficoml
push
mov
int3
jae
in
sbb
push
mov
xlat
mov
stos
sarl
in
lret
mov
loop
clc
add
bound
xlat
mov
dec
jb
repz
xchg
or
mov
and
leave
not
xchg
insb
mov
fstpl
inc
dec
sbb
leave
jno
xchg
dec
shlb
test
push
mov
mov
sti
shrb
cmp
outsl
ret
jg
test
jp
aad
xchg
push
pop
movsb
and
and
mov
sub
daa
jns
pop
and
push
inc
pop
cmpsb
push
ss
sub
fwait
call
and
mov
jmp
dec
stos
subb
xor
ds
dec
stc
leave
dec
in
push
iret
hlt
scas
iret
xor
mov
mov
jg
sbb
and
outsb
xor
fwait
xor
sub
sub
xor
rcll
hlt
xchg
push
jp
sarb
sbb
daa
mov
scas
jle
add
pop
lret
xor
mov
dec
inc
aas
mov
movsb
sbb
inc
andb
adc
mov
jle
dec
jb
inc
std
scas
xchg
subb
xchg
fisubrs
inc
dec
cld
and
mov
mov
lds
mov
flds
rcll
iret
or
mov
imul
call
loop
pop
mov
call
insl
xor
insl
repz
add
xor
push
incb
jno
sub
sbb
sbb
pop
xchg
lods
mov
clc
push
cmp
mov
imul
mov
xchg
lock
cmpsb
std
xlat
cli
add
in
inc
mul
xor
sub
adc
pop
mov
cld
jmp
add
rorb
mov
add
xchg
sub
lods
push
fadds
pop
arpl
dec
daa
pop
in
enter
lods
orl
inc
enter
nop
push
jp
inc
sbb
jg
aam
xchg
jb
adc
dec
pop
imul
sar
scas
movsb
clc
sub
adc
stos
inc
xchg
xor
mov
mov
enter
test
dec
dec
lcall
sub
mov
sahf
sbb
sbb
sub
mov
popa
sbb
roll
andb
and
mov
pop
ja
test
fidivs
add
add
and
mov
adc
cmpsb
bound
loope
push
and
mov
push
mov
add
sub
or
or
int
mov
mov
ss
xor
push
lods
pop
dec
push
pop
and
pop
add
push
sbb
loope,pn
ss
jns
aaa
in
mov
pushl
jecxz
pop
jge
lahf
inc
idivl
out
testl
jno
push
sti
rcrl
or
clc
stos
ljmp
dec
pushf
mov
lret
rorl
fists
jne
dec
out
pop
xor
mov
icebp
pop
stc
test
jle
and
sub
call
jge
test
xchg
hlt
xchg
ds
dec
aam
xor
inc
mov
in
pop
add
int3
pop
clc
and
mov
mov
pushf
dec
xchg
push
jo
movsb
stos
pushf
jl
pop
mov
mov
pop
lahf
pop
popa
add
rolb
int3
mov
roll
neg
jae
xchg
adc
adc
popf
xchg
gs
arpl
movsl
test
push
lahf
or
cmp
stos
mov
pusha
out
adc
mov
mov
inc
dec
int
pop
adc
int3
enter
sbb
jge
mov
xchg
jl
jne
sbb
mov
jecxz
arpl
push
mov
inc
xlat
es
dec
pushf
or
and
shr
or
stos
or
lret
vpmaddwd
dec
xchg
sbb
push
paddsb
mov
ss
sub
stc
mov
dec
das
push
es
addr16
fisttps
xchg
add
sub
inc
add
icebp
sbb
mov
mov
jmp
rorl
insb
notb
test
mov
inc
dec
repnz
popa
cmp
or
jne
xchg
cmc
jo
sbb
xchg
test
ret
dec
pop
in
test
cmc
jno
push
jp
daa
sbb
fdivrs
pop
mov
inc
push
inc
xchg
jns
into
xchg
in
insb
ret
call
mov
push
mov
cld
dec
scas
je
mov
cmp
sbb
std
adc
gs
ja
adc
repz
xor
cmp
mov
jmp
sub
mov
mov
ja
jno
cmp
xorb
jmp
shlb
repnz
sub
jnp
sub
or
dec
dec
mov
out
daa
fsubrl
sub
xlat
push
mov
jmp
pop
push
test
mov
mov
push
mov
jo
arpl
repnz
xchg
clc
sbbb
stos
mov
mov
js
in
lahf
sub
cli
or
xor
sahf
movlps
dec
aam
xor
iret
xor
jecxz
sbb
jmp
cmp
ljmp
sbb
lret
rorl
dec
ret
stos
pop
cltd
in
fldt
decb
sbb
rol
push
cmc
mov
sbb
loope
cmp
int
pop
mov
inc
sbb
aas
xchg
sbb
dec
lea
or
sub
popa
xchg
xchg
rcll
mov
jle,pn
push
and
jno
jmp
adc
inc
sbb
xchg
jns
iret
sarl
xchg
test
insl
pop
xor
into
mov
mov
mov
pop
mov
sbb
and
popf
pushf
fcomi
xchg
out
inc
mov
mov
xchg
mov
aaa
xchg
xor
pop
dec
das
mov
xchg
dec
push
push
stos
cli
pop
push
lods
cwtl
mov
adc
ret
aad
push
inc
inc
and
mov
pushf
lret
fnstcw
xor
jno
ret
enter
lods
fisubrs
lods
pop
mov
loope
mov
cwtl
sbb
jl
leave
pop
es
test
cmp
jl
push
or
je
lret
mov
xchg
sbb
mov
pop
jg
loop
js
and
daa
bound
rcrb
cmp
scas
mov
insl
loope
mov
and
push
nop
shrb
mov
jbe
lock
push
iret
dec
cmp
cmp
sub
ficompl
inc
jne
xlat
cld
mov
adc
fisubrs
mov
stos
inc
dec
sbb
jecxz,pn
ret
arpl
or
out
or
inc
out
xor
add
es
cmc
stos
xlat
pop
sub
scas
jns
push
dec
clc
mov
ds
sbb
push
aaa
dec
add
add
jno
test
repnz
xor
hlt
sub
pop
cmp
lock
pop
sbbb
das
fs
insl
sub
mov
sbb
inc
imul
cmp
sahf
addr16
jb
cmovno
sbb
xor
clc
movl
lret
call
ds
add
xchg
xchg
mov
stos
mov
data16
xor
cli
mov
sub
cmp
out
jne
out
or
cltd
loope
pop
pop
adc
cmp
shl
sub
push
incb
int3
pop
out
sar
mov
fsts
repnz
lods
stos
es
jb
in
xchg
aaa
adc
stos
int3
dec
dec
add
xchg
test
pop
aaa
imulb
das
pop
rcll
shlb
inc
cs
das
push
cmpsb
pop
ret
imul
hlt
ret
sahf
pop
mov
or
push
and
jns
lret
push
icebp
or
cli
push
lock
mov
or
jg
cmpsb
cmp
mov
sti
nop
mov
jnp
clc
out
cmp
dec
lahf
xchg
sub
or
push
out
adcl
push
into
mov
ja
mov
testl
mov
mov
insb
push
sub
adc
lock
negl
sbb
dec
pop
sbb
sub
inc
shrl
idivb
push
xor
or
xor
xor
jmp
test
cwtl
aam
in
movsb
mov
out
dec
or
cmp
push
mov
fstps
bound
mov
mov
aam
ja
inc
jno
add
and
mov
pop
sti
int
lret
in
pop
frstor
call
xor
lods
fstl
lock
decb
push
mov
and
rorl
ljmp
sub
dec
mov
ficompl
test
mov
push
cld
test
loopne
test
xor
and
xlat
inc
adc
mov
push
cmp
js
mov
loope
mov
adc
adcb
jo
daa
or
outsl
lea
fstpt
cmp
add
ret
test
lahf
lret
and
pop
inc
andb
push
or
hlt
sub
lods
jmp
add
pushf
pop
insl
out
inc
dec
je
or
xchg
nop
flds
shlb
icebp
dec
shll
and
jnp
das
test
or
scas
jno
pop
fs
loope
mov
inc
fsubrs
jnp
add
stos
ret
cwtl
jno
xor
mov
rorb
adc
pop
js
hlt
mov
imul
mov
add
and
adc
or
pusha
fstl
cmp
lods
push
aas
mov
sub
add
pop
lods
sbb
int3
inc
adc
data16
ja
loopne
fisttps
push
sbb
jae
lock
fidivs
imulb
push
sub
cld
imul
imul
sbb
cmp
stos
sub
addr16
pop
sti
pop
or
mov
push
sar
clc
aam
xchg
push
fwait
pop
cli
or
pop
dec
dec
adc
faddp
push
mov
inc
rorb
mov
xchg
leave
mov
punpckhdq
jmp
div
mov
adc
loop
loopne
push
jae
xor
cmp
sbb
pop
cmpsl
cmpsb
mov
jno
pop
loope
sbb
ljmp
mov
sbb
jge
mov
loope
push
dec
call
imul
sbb
std
insb
pop
mov
out
add
push
inc
cld
push
sub
stos
data16
push
or
add
xor
sti
cmp
fidivrs
push
push
sbb
gs
dec
xlat
psllw
aam
xchg
push
imulb
mov
sbb
push
stos
xchg
lahf
clc
fstpl
xchg
inc
mov
or
cmp
dec
mov
call
test
lcall
jne
pushf
sub
adc
fisttpl
jmp
mov
or
mov
loopne
dec
rcrl
ret
xchg
outsb
jecxz
inc
or
push
push
pop
mov
xor
insb
bound
jo
dec
jo
iret
mov
lods
or
daa
dec
inc
push
sti
ss
hlt
sbb
mov
and
fidivrs
cmp
sbb
mov
mov
dec
aas
ds
fisttps
sbb
pushl
mov
mov
push
out
mov
mov
lea
insb
lods
fwait
dec
xor
out
pop
mov
into
pop
stos
je
cltd
jge
or
jmp
fstpl
jns
mov
sub
push
jecxz
inc
mov
mov
out
imul
jle
js
pop
aaa
jecxz
mov
push
jne
scas
lds
cmpsb
fldenv
jle
outsb
inc
inc
aam
sbb
js
cmp
push
movsb
xchg
loope
mov
aaa
lahf
xlat
sbb
adc
cwtl
inc
data16
mov
in
rcrl
into
mov
cltd
mov
hlt
xor
mov
scas
scas
sub
mov
fisttpl
adc
jne
mov
addb
push
push
push
xlat
mov
dec
sub
clc
cmp
fidivs
popf
push
mov
enter
outsl
shlb
xor
test
popf
jp
jp
push
repnz
test
xor
cmpb
movsb
js
inc
push
and
push
into
std
call
xchg
movsb
jl
xchg
push
mov
push
dec
inc
daa
pop
push
push
pop
sbb
fbstp
in
dec
jns
mov
xchg
or
xchg
inc
xlat
sbb
pop
adc
std
in
loopne
sbb
sahf
push
sahf
xchg
or
test
call
mov
inc
push
push
mov
ret
cmpsl
out
dec
call
sub
jno
or
dec
ficoms
ret
jne
pop
call
shrl
xchg
dec
jb
mov
jmp
ljmp
sbb
loopne
and
add
jne
xchg
mov
cwtl
rorb
xor
jp
pop
ss
mov
fidivrs
mov
call
mov
popf
es
rcll
shll
pop
lcall
lock
leave
push
mov
addr16
xchg
dec
pop
jg
mov
cmc
addr16
cmpb
leave
xchg
inc
pop
lds
mov
push
sub
cmc
mov
mov
sbb
mov
sbb
repnz
push
in
pop
pop
jae
inc
cltd
dec
sbb
xlat
outsb
mov
js
sbb
insb
ss
cltd
inc
inc
lods
xchg
out
sub
outsl
push
mov
loop
dec
loope
iret
out
movsl
jmp
rorl
pop
sub
cltd
jns
mov
sahf
inc
inc
ja
jno
xchg
sbb
mov
ret
mov
xor
mov
xor
ja
pusha
aas
sub
cmc
mov
in
cmovne
cli
inc
mov
mov
int3
mov
roll
pop
inc
or
sub
lret
mov
rcrl
push
and
dec
out
repnz
add
out
aam
xor
addr16
into
pop
lret
xchg
stc
add
pushf
int
mov
cmp
jbe
xor
mov
sbb
mov
hlt
or
int3
stc
sbb
or
jo
pop
lods
jp
sub
jne
out
add
cmp
mov
adcl
movsl
jge
cld
repz
xchg
cmpsb
inc
push
scas
cmp
mov
into
pop
pop
out
push
scas
in
les
jge
inc
push
adc
clc
xchg
fwait
sub
mov
and
mov
jle
popa
cmp
ja
or
lods
adc
out
pop
popl
jo
aam
inc
loope
fstps
jne
jmp
adcl
rorb
pop
jae
test
out
jecxz
and
pop
ret
fwait
adc
inc
insb
jne
mov
out
fwait
jno
and
xchg
sahf
idiv
pop
sahf
out
xchg
sbb
or
mov
fs
stos
mov
rolb
pushw
add
shll
cmpsl
mov
mov
dec
fldenv
jp
outsl
enter
sti
lret
das
cmp
pop
xchg
cwtl
inc
or
or
cltd
sub
dec
jnp
btr
push
adc
pop
push
popf
imul
dec
and
dec
or
lcall
mov
dec
ljmp
cld
inc
fldenv
pop
pop
in
mov
xor
add
sbb
out
xchg
pop
mov
imul
lods
js
out
push
xchg
mov
dec
jge
push
dec
popf
repz
pop
repnz
jne
jmp
pop
iret
test
divb
push
ret
mov
cmp
rcr
fstpl
jne
mov
cmpl
cmp
clc
cmpsl
repz
jmp
insl
sbb
test
jbe
test
sbb
les
test
in
sub
in
pop
lea
js
sub
mov
jle
dec
dec
xchg
fcomip
fs
push
jp
xor
dec
lea
adc
push
dec
push
mov
push
jge
ret
push
test
stos
loopne
dec
mov
pop
xor
in
out
xlat
cmp
mov
faddl
mov
cmp
xlat
pop
push
push
daa
fldt
repnz
ret
push
ja
loope
sbb
jge
mov
movsl
cmp
push
xor
jbe
sbb
adc
pop
pop
fstl
loop
outsb
push
adcb
sbb
ljmp
popf
sub
int
shlb
out
inc
daa
or
insl
sarl
jne
adcb
add
sbb
push
or
jg
push
loopne
xor
mov
aas
cmpsl
jg
mov
mov
inc
cltd
mov
inc
stc
jecxz
into
movsb
xchg
jns
popf
rolb
jbe
xchg
lcall
fsubrl
in
mov
or
lock
loopne
repz
mov
xor
imul
mov
into
stos
aam
inc
test
incl
mov
or
orb
sahf
add
aad
fwait
dec
stos
dec
stos
and
adc
sbbb
fimull
arpl
jmp
cmp
adc
mov
and
pusha
clc
jnp
imul
cmpsb
mov
sbbb
push
repz
push
popa
lcall
sbb
jbe
fmull
xchg
into
stc
sar
arpl
sbb
xchg
cmp
xor
insb
adc
add
jge
mov
mov
test
jle
adc
popa
jg
add
lret
pusha
cld
sub
xchg
adc
or
fcoml
xor
ljmp
sub
pop
inc
out
lea
nop
lret
pusha
jb
mov
pop
js
nop
pop
repnz
dec
lock
nop
into
scas
push
cli
inc
outsl
mov
movsl
xor
xchg
sti
sarl
or
inc
push
decb
cli
cmpsb
idivb
push
clc
out
fwait
jbe
xor
sbb
and
xchg
in
call
or
lods
xchg
fs
or
push
sbb
add
mov
pcmpeqd
into
jne
xor
push
insl
inc
loopne
fldenv
fdivp
mov
lcall
repz
es
dec
xchg
in
add
pop
outsl
jle
mov
in
adc
jae
sbb
icebp
jg
xor
jge
repz
xlat
std
sbb
sub
jo
scas
dec
sub
xor
scas
aam
out
adcb
into
push
cli
jnp
loope
lret
adc
arpl
pop
xchg
sbb
push
in
push
push
fadds
push
mov
adc
xchg
mov
nop
push
fwait
shlb
hlt
and
xchg
rcl
hlt
mov
inc
sbb
cmp
mov
int3
enter
popa
mov
cltd
pop
mov
ror
insb
mov
aad
dec
push
lock
test
mov
mov
fimull
movsb
lods
fdivr
cs
movsl
dec
pop
jmp
mov
sub
mov
jno
sub
test
test
jl
addr16
popa
mov
ja
push
add
xchg
or
mov
pop
dec
xlat
ja
fidivl
sub
gs
inc
jo
xchg
out
fwait
in
mov
sub
insl
je
xor
shl
loopne
xchg
js
stc
frstor
out
mov
and
push
add
mov
out
mov
adc
cli
add
fucomi
call
push
cmpsl
aam
stos
adc
shlb
cmpsw
int
std
es
xchg
cwtl
push
or
int
xchg
incl
insl
test
mov
cmc
inc
fmuls
lods
add
sub
sub
push
sbbl
in
fcomps
xor
fwait
call
sbb
jne
push
decb
mov
das
lea
adc
jns
outsb
loopne
xchg
aad
mov
gs
xor
outsb
stc
enter
rcrl
jg
call
xor
insb
and
adc
cld
test
pop
push
pusha
mov
or
mov
fbld
iret
jmp
xchg
mov
pop
repz
push
into
flds
test
mov
dec
push
sahf
cld
xchg
xchg
mov
outsb
or
pop
cmp
xor
xor
cmpsl
adc
sbb
mov
or
fstpt
pop
cmpl
mov
push
clc
push
test
mov
repz
sti
loopne
push
outsb
iret
mov
addr16
arpl
jb
pop
mov
inc
gs
dec
inc
shl
mov
fdivr
cmp
add
dec
mov
jns
and
scas
xorl
pop
cmp
orl
repz
stos
push
orl
cmp
hlt
cmpsl
arpl
cld
rorb
insl
cmc
cli
mov
jecxz
mov
pop
into
test
push
je
mov
mov
lahf
aam
dec
mov
or
lds
cs
jne
push
lret
mov
pop
mov
aad
and
je
push
les
xchg
loopne
call
sub
sahf
and
jno
test
pop
fstpt
pop
dec
fs
popa
mov
lds
jnp
dec
das
or
sbbb
mov
in
add
xor
cmp
inc
pop
pop
mov
xchg
adc
mov
pop
inc
pop
dec
and
mov
ret
test
movsb
add
pop
pop
dec
pop
dec
dec
cltd
push
push
xchg
ds
sbb
mov
loop
xchg
lret
cltd
fbstp
out
pusha
loopne
fwait
mov
in
dec
adc
out
test
fisttpl
rol
pop
xchg
fwait
rolb
pop
cmp
movl
xchg
lds
pop
test
dec
test
leave
clc
fiaddl
fwait
aaa
insb
cmp
push
fisubrs
and
or
mov
mov
sub
inc
dec
test
xor
add
repz
xchg
xchg
into
fsubs
popa
xor
leave
pop
xor
test
sbb
mov
divl
mov
lret
lods
or
std
loope
and
cmp
adcl
mov
fisubs
stos
mov
scas
jb
sub
in
outsl
scas
push
test
mov
seta
xor
clc
xor
into
aam
adc
stos
dec
repz
adc
xchg
and
das
jo
xchg
in
mov
mov
mov
jb
adc
xchg
inc
add
xchg
mov
xor
xor
mov
dec
test
lods
cwtl
mov
insl
xor
pop
aam
dec
loop
dec
pop
es
adc
stc
mov
mov
cs
fildl
inc
sub
lcall
cmpsb
pop
mov
sbb
xor
pop
in
enter
roll
or
xor
jmp
inc
adc
out
mov
lods
mov
movl
test
inc
mov
jecxz
push
push
cmpsl
shlb
enter
dec
ja
movsb
out
push
cwtl
icebp
mov
testb
pop
mov
fcoms
push
in
fcoml
cwtl
notl
sarl
cmc
es
inc
cwtl
inc
jmp
add
cmp
testl
cltd
movsb
fidivrl
cmp
pop
jmp
xorl
pop
and
ljmp
nop
mov
enter
mov
jmp
popa
add
das
out
pop
add
repnz
out
test
and
jo
dec
xor
sbbb
push
sar
mov
test
popa
nopl
and
je
pop
das
lahf
mov
adc
shlb
addr16
lea
mov
hlt
cmpsl
pop
xchg
mov
cmp
sub
hlt
dec
mov
mov
mov
xor
bound
pusha
sbb
add
push
pop
out
push
mov
ret
mov
kunpckbw
fwait
insb
mov
fisttpl
adc
or
jne
xchg
imul
lods
mov
leave
movsl
add
mov
lds
jae
add
fstpt
popf
in
sbb
pop
leave
std
cmpsl
pop
dec
jge
test
or
xor
sub
lret
inc
xor
stos
call
icebp
stos
cmp
neg
divl
dec
lahf
test
popf
mov
daa
jg
add
xchg
in
or
je
jge
notl
ja
enter
xchg
add
dec
sub
and
scas
sbb
testb
aas
aam
popa
mov
jno
cmpsl
jno
mov
test
shll
pop
sbb
and
mov
int3
int
pushf
jmp
int
add
clc
stos
add
jg
in
sahf
insl
sub
add
test
or
mov
mov
pop
xchg
pop
adc
sahf
cltd
jecxz
shlb
or
push
fcmovnb
stos
fsubr
mov
add
lods
pop
jnp
movsb
fwait
adc
je
add
shr
mov
popf
sbb
lcall
outsb
imul
dec
jecxz
cmp
and
repnz
lea
cs
iret
cmc
dec
fwait
mov
popf
cmp
test
lret
lret
add
cli
notl
push
lret
ficomps
pop
xorl
push
outsb
sub
push
jecxz
jecxz
inc
and
xor
das
mov
pop
cmpsb
stc
mov
dec
dec
sbb
xchg
or
in
mov
scas
inc
mov
sbb
mov
push
mov
insl
push
jns
in
mov
sbb
aam
data16
testb
mov
cmp
mov
cmp
sahf
dec
repnz
fsubp
cltd
fdivrl
loopne
leave
jae
adc
in
clc
fwait
xor
mov
and
xchg
testb
js
cmp
adc
not
add
gs
add
inc
mov
shlb
cli
fiaddl
lea
push
push
inc
mov
inc
jb
out
inc
shll
lcall
sub
nop
sbb
in
data16
xor
cmp
sbb
aam
dec
lods
xchg
into
and
insb
aad
inc
daa
mov
mov
imulb
int
stos
in
imul
cmpsl
aam
or
leave
xchg
mov
shll
push
into
leave
frstor
cld
out
cli
mov
jp
ds
xor
in
shlb
mov
dec
sbb
adc
icebp
mov
out
cmpl
or
fidivl
repz
jp
jmp
ficompl
repz
adc
mov
xchg
leave
jg
pop
push
loopne
lods
or
leave
lret
scas
ss
ret
mov
into
adc
xchg
push
pusha
adc
and
stos
pop
in
nop
popa
lcall
xchg
int3
loope
aad
jge
das
or
jae
int
push
sbb
jae
loope
imul
imul
xor
and
xchg
pop
fistpl
lock
sbb
js
sub
jno
mov
sub
rolb
push
and
subl
imul
lahf
mov
xchg
paddusb
cmp
out
xchg
xor
movsb
dec
pop
add
dec
cmp
mov
not
shll
loope
lcall
pop
mov
push
ret
insl
insb
fcomps
notb
mov
push
mov
dec
xor
lds
adc
pop
jnp
or
add
and
mov
cmp
ret
xor
push
sub
rol
aaa
notl
cmp
adc
add
dec
pusha
sahf
and
lret
push
aas
ret
mov
push
mov
aas
jmp
pop
pop
scas
int3
xlat
in
inc
outsb
xorl
sahf
psraw
rolb
sbb
xchg
sub
ficoml
dec
jg
adc
push
cmc
sub
jne
push
mov
mov
repnz
fcomip
ficoms
cmc
xor
movsb
sub
movsl
add
push
in
insl
ljmp
sbb
jle
and
mov
cmp
mov
pop
outsl
sti
xor
dec
or
lret
pop
pusha
std
dec
loop
arpl
outsl
sub
mov
or
clc
inc
andb
pushl
ficompl
xor
pop
pushf
fsubl
loope
bound
mov
nop
outsb
call
lds
test
mov
mov
jmp
xlat
dec
cmp
xchg
xchg
jb
push
and
push
xlat
and
lock
lret
scas
pop
or
xchg
in
pop
popa
aaa
mov
test
xchg
jb
or
add
movsl
js
push
mov
rcl
ret
gs
sbb
mov
push
xchg
sbb
outsl
pop
dec
addr16
inc
pop
lods
xchg
stos
fcomi
int
or
test
mov
sub
mov
jnp
aas
fs
shll
stos
xor
dec
sub
jge
sbb
add
xor
add
scas
mov
cmp
sarb
sub
shld
fsubs
ja
js
cmc
sti
sub
dec
mov
rorl
pop
ja
fwait
push
int3
loopne
stos
iret
shlb
dec
pop
cmpsb
jnp
inc
mov
add
fdivr
inc
pop
mov
repnz
inc
pop
and
adc
out
leave
rcrl
ret
or
dec
aam
loope
jae
imul
leave
xchg
rorb
xor
rcll
pop
pop
lock
out
in
push
imul
mov
stos
pop
dec
jns
shl
add
icebp
rcl
stos
sbb
lret
out
push
jle
adc
push
enter
out
shr
sti
sti
lea
xlat
pop
mov
mov
and
clc
mov
add
fsubl
xchg
andl
pushf
or
mov
rorb
imul
or
mov
add
add
movsb
ret
add
or
sub
push
lods
add
inc
pop
mov
xchg
insb
mov
pop
dec
fcmove
test
mov
mov
lock
jl
mov
fsts
cmpsb
inc
into
xchg
rorl
icebp
sub
mov
xor
inc
sub
mov
sub
mov
push
stos
filds
sti
lret
and
sub
jecxz
mov
scas
xor
pop
movsl
and
xor
es
stos
mov
mov
mov
jno
fsubs
xor
push
std
jp
adcl
jmp
das
cwtl
pop
or
loop
mov
push
ror
xchg
popf
mov
cmpsl
in
aaa
inc
pushf
fwait
sbb
mov
hlt
adc
xchg
dec
outsb
inc
in
dec
jbe
and
repnz
push
and
insb
mov
daa
outsb
jmp
jbe
in
or
shl
sbb
popf
ds
xchg
xchg
in
inc
mov
ja
push
clc
jecxz
cmp
or
sbb
repnz
mov
inc
pop
or
lds
push
call
sub
daa
out
mov
and
or
lcall
jns
daa
xchg
sbbb
imul
xor
add
pop
shll
jecxz
sbb
mov
lea
test
push
lret
push
int
dec
adc
cmp
hlt
addl
xchg
xor
ljmp
mov
mov
xor
sub
pop
ficoms
call
bound
clc
cmp
orb
in
and
pop
add
out
push
and
jb
in
push
lret
cli
in
adc
and
sti
push
adc
test
sub
sub
xchg
shrb
es
push
push
or
fstl
cld
adc
lahf
fdivrs
jecxz
shlb
pop
orl
js
sub
inc
xor
mov
push
pop
cmc
jle
mov
mov
imul
lahf
and
push
adc
idivb
cmp
outsl
xchg
roll
xor
je
loopne
cltd
das
mov
ds
mov
cmp
repz
movl
mov
divb
xchg
fldl
push
enter
ret
pop
jmp
pop
lret
insl
dec
push
dec
ss
enter
inc
adc
out
pop
mov
xor
cmp
jne
or
imul
pcmpgtw
cmp
mov
call
mov
test
hlt
add
incb
jge
mov
dec
xor
dec
out
push
push
sti
xor
ficoml
dec
stos
push
pop
out
loopne
adc
pop
addl
add
jne
add
xchg
negl
dec
inc
jmp
scas
popa
testl
sub
jo
mov
int3
cwtl
rcr
jae
imul
das
inc
pop
push
or
dec
pushf
ret
jbe
ja
pop
popf
mov
inc
add
pop
xor
stos
add
imul
mov
lret
mov
insb
je
dec
in
or
fidivl
inc
daa
mov
push
mov
adc
fstp
pop
dec
aad
push
xor
push
test
lret
add
or
xchg
mov
jae
pop
mov
in
inc
dec
fistl
mov
and
rclb
popa
addr16
lret
push
scas
push
dec
mov
jo
jle
addr16
jbe
jl
push
scas
push
ljmp
adc
sahf
push
shll
or
in
push
push
js
sbb
sbb
daa
test
rorl
aaa
filds
jmp
jecxz
js
xchg
and
jle
arpl
mov
shl
xchg
sbb
lahf
ficoms
mov
aas
push
imul
jp
mov
dec
pop
pop
sub
xchg
insl
imull
xor
mov
jmp
fsubrs
out
sub
mov
inc
ret
aam
enter
pop
mov
sbb
js
xchg
ret
leave
inc
push
movsb
lods
jp
add
cmp
pushf
inc
dec
nop
sub
sqrtps
add
out
push
pop
rorb
sub
dec
cmp
stc
push
rcrb
jl
and
and
mov
xor
sbb
es
lock
divl
sub
rorl
jns
aam
xor
xchg
std
cmp
mov
lret
fstpl
or
cmp
sub
mov
mov
fnstenv
loope
mov
aas
cmc
or
or
iret
dec
rorl
fidivs
inc
mov
dec
lea
add
xchg
push
dec
jno
flds
loope
xlat
cmp
fsubrs
dec
sarb
int3
sbb
push
pushf
dec
lret
cld
dec
adc
mov
jmp
push
pop
test
sarl
orb
jg
popa
fcoml
jmp
iret
jbe
mov
rcll
lea
pop
outsl
out
sub
nop
in
cld
inc
addb
cmpsb
mov
iret
and
outsl
cmp
gs
sarb
dec
xchg
pop
shrb
ljmp
lcall
ret
mov
addb
xor
jg
push
jns
adc
add
lret
mov
and
jp
aad
ljmp
sub
or
in
cmp
sub
aaa
push
pop
push
int3
ja
aas
hlt
push
paddd
or
ljmp
ret
fwait
ja
adc
add
push
cmp
mov
xlat
rcll
lcall
movsl
cmc
das
adc
fucom
jb
in
cmc
pop
out
mov
pop
xor
rcrb
fs
push
repz
add
ret
into
push
imul
push
xchg
sub
outsl
mov
sbb
loopne
out
leave
pusha
push
xlat
xchg
adc
adc
int3
lret
rclb
adc
imul
outsl
xchg
dec
push
push
cmc
icebp
push
sub
xorb
outsl
pop
test
andl
pop
or
cmpsl
adc
inc
adc
into
imul
fstl
jae
jae
insl
aad
jl
aam
movsb
and
nop
imul
jl
fstpl
mov
cmp
mov
insl
xchg
stc
into
push
and
inc
fildl
or
sub
scas
xchg
out
andb
push
sbb
cltd
adc
repnz
jo
lret
sbb
sahf
mov
in
mov
lret
xchg
nop
jg
push
push
xor
cmp
shll
mov
sbb
icebp
mov
push
mov
xchg
mov
jne
lock
loope
inc
jns
popl
movsl
nop
dec
fs
or
paddq
jecxz
jmp
bound
mov
test
xchg
movsl
xchg
inc
loop
ds
adc
test
mov
fidivrl
loop
or
sbb
lods
pop
jecxz
movsl
stos
loope
cli
js
mov
lds
popf
aam
int3
rcrl
call
idivl
inc
insb
jge
subl
or
adc
bt
sarb
mov
ret
xor
xorl
push
div
test
or
mov
sbb
popa
insl
iret
cld
add
stc
mov
pop
or
dec
jmp
pop
mov
jl
add
test
jno,pn
es
dec
xor
inc
icebp
and
out
jb
test
lods
adcl
and
pop
pop
mov
cmp
add
push
pop
add
cmp
les
sbb
divl
jmp
push
xchg
rclb
imul
je
inc
into
and
dec
sub
sub
mov
sub
cmpsb
ficoms
mov
cmpl
fdivrl
xchg
mov
xchg
cwtl
mov
sbb
lea
push
jo
out
add
js
shrb
sti
movsl
adcb
ret
adc
fcompl
xchg
push
subl
stc
xchg
outsb
orl
cmpsb
jl
lods
add
call
xchg
mov
mov
ficoml
xchg
pushf
mov
stos
pop
out
sbb
push
dec
pop
add
cmpsb
mov
or
pop
mov
sbb
scas
mov
daa
sub
sbb
mov
xorb
leave
scas
pushf
or
sub
fisubrs
std
les
sbb
mov
xor
cs
push
cwtl
adc
mov
mov
mov
mov
mov
sahf
loop
xor
and
das
repnz
out
fwait
lds
mov
sbb
jno
sti
sub
xor
scas
sub
pop
mov
push
outsl
ds
mov
aam
xchg
inc
xor
sti
mov
insb
mov
sahf
lock
dec
sub
pop
loope
ss
in
lds
add
aad
jnp
cld
mov
jno
push
pop
push
shrl
loop
cmp
jle
enter
nop
lahf
pop
pusha
and
aas
xor
mov
or
call
inc
scas
cltd
add
cmp
aad
sub
jo
jb
mov
fnstsw
ror
into
inc
push
insl
cltd
imul
mul
mov
test
shlb
and
dec
cmpsb
pop
movl
popa
inc
add
push
jae
movsb
rcr
mov
or
lcall
mov
or
and
enter
ret
cmp
add
pop
out
int
mov
mov
addr16
les
xorb
fwait
mov
stos
or
xchg
mov
les
and
addr16
mov
jne
sub
inc
mov
fucom
and
mov
pop
push
stc
add
imul
fisubl
mov
jne
mov
dec
in
or
push
sbb
outsl
mov
push
shr
mov
mov
mov
test
cwtl
aas
mov
mov
and
ds
sub
out
cmp
test
cmc
sub
dec
mov
rol
inc
or
add
add
out
imul
push
int
jge
pop
inc
and
jo
leave
add
out
jbe
movsl
xchg
sbb
movsb
mov
repnz
mov
rcrl
pop
leave
and
pop
jno
xor
mov
pop
aaa
fnsave
rcll
fucomip
out
mov
jle
mov
xchg
mov
mov
lcall
and
push
inc
add
xorb
popa
sti
pop
jo,pn
div
movsl
mov
fsubr
xor
sub
mov
scas
fadds
mov
loop
repz
rcr
outsb
pop
cltd
push
ficoms
push
sti
or
loope
movsl
cmp
movsl
cmc
mov
cwtl
ja
push
push
or
repz
cmp
push
aad
sbb
std
in
xor
sub
or
aad
enter
pop
push
and
orb
pop
out
jmp
add
push
in
cwtl
cmp
adc
jle
ja
leave
popf
dec
bound
loope
aad
push
mov
sbb
push
mov
fnstsw
in
lret
jecxz
cs
fisubl
xor
jae
mov
arpl
js
pop
dec
aas
mov
pop
jmp
mov
roll
inc
dec
jecxz
and
testb
pop
clc
idivb
inc
inc
pop
lock
in
ljmp
xor
sub
jae
cld
mov
cmp
pusha
ds
sbb
push
imul
push
adc
sub
or
jmp
addr16
sub
lea
mov
cli
mov
sbb
sub
pop
sub
sbb
pop
jl
xchg
pop
scas
mov
jge
aam
fbld
mov
sbb
xor
jg
mov
ficoml
imul
push
cmp
mov
cwtl
xor
lret
imul
repnz
addb
mov
xlat
push
dec
in
jns
pmaxsw
pop
xchg
imul
add
stos
les
enter
xchg
xchg
fistl
or
cmp
xchg
hlt
mov
mov
and
pop
xor
jmp
jecxz
ret
jp
push
cld
xchg
jg
cmp
in
push
jl
loopne
loopne
mov
jg
movsb
jge
out
outsl
mov
arpl
addr16
arpl
rcrl
cmc
inc
push
mov
fimuls
jns
fsubs
mov
test
sbb
xor
imul
rorl
call
xor
das
pop
ret
sub
inc
dec
sub
mov
stc
scas
mov
push
popa
jns
popa
sbb
lock
test
scas
inc
sbb
and
imul
jne
pop
jecxz
mov
sti
mov
fistpll
lds
negb
jmp
jmp
or
add
sbb
in
xchg
mov
bound
jbe
out
loope
lea
jg
inc
cmp
sbb
sub
adc
push
mov
lcall
ja
pop
fstl
cmp
inc
cmp
xchg
xchg
push
jns
notl
fldcw
aaa
sbb
and
mov
sub
mov
pop
jnp
into
sbb
cmpsb
or
adcl
sbb
or
lea
dec
test
pop
jb
or
sub
sbb
lcall
mov
cs
in
dec
cld
shlb
lahf
cmpsl
enter
push
mov
fwait
cwtl
sbb
xchg
lods
mov
data16
mov
into
dec
fisttps
cmp
les
inc
inc
xlat
and
mov
shrb
pop
dec
ficompl
shl
jnp
clc
into
sub
xchg
dec
jns
mov
cmp
jb
aas
outsb
iret
sub
or
ljmp
test
or
ljmp
adcb
mov
outsb
pop
cmp
icebp
lods
push
mov
adc
mov
clc
ds
aaa
jns
and
lahf
lcallw
mov
xor
arpl
sub
inc
xchg
ljmp
mov
jae
jno
pop
in
jno
popa
jbe
repz
mov
inc
dec
mov
pop
xchg
add
xchg
mov
lods
add
dec
adc
xchg
pop
jg
lahf
sub
leave
sub
dec
or
mov
lret
out
ds
lods
stos
into
in
out
and
sub
fwait
inc
outsb
xor
dec
je
dec
pop
jns
int3
adc
mov
xor
push
subl
pushf
mov
mov
sbb
sub
add
xchg
xor
pop
mov
mov
ficoms
push
jnp
push
mov
or
inc
mov
lret
push
push
mov
and
jns
jb
pop
cmc
fsts
nop
data16
or
out
xlat
inc
xchg
in
add
push
ret
cmc
push
ficompl
fidivrl
shll
movsl
inc
sbb
sub
dec
xor
sbb
pop
mov
js
stos
fs
inc
xchg
adc
lods
pop
sub
jno
fidivrs
in
add
pop
cld
jno
movsl
pop
cmp
jnp
push
xchg
push
mov
push
cwtl
mov
stos
push
notl
mov
mov
or
dec
dec
fdivs
push
sahf
enter
jge
leave
dec
lret
sbb
repz
lret
data16
negb
sti
inc
in
add
push
sub
fmul
mov
jns
sbb
mov
cmp
pop
rcl
cmp
lds
cmp
and
inc
xor
mov
sbbl
in
mov
ja
jmp
sub
mov
insb
jmp
cld
lods
movsb
lock
cmpl
js
sarl
push
mov
sub
cmp
dec
cmpsb
sahf
out
popf
sbb
add
and
sub
adc
jl
nop
sub
cmc
jb
out
repz
nop
leave
adc
mov
pushf
xor
fcmovu
pop
push
adc
mov
fistl
lea
push
es
hlt
shlb
and
xchg
mov
mov
dec
sub
adc
xchg
faddl
test
scas
sub
inc
std
mov
fimull
gs
xchg
or
or
stc
dec
dec
testb
pop
mov
mov
push
sti
imul
shll
in
inc
or
out
je
shll
outsb
adc
inc
bound
or
jb
jmp
shl
mov
test
fildl
or
inc
or
aaa
push
stc
cmp
adc
into
in
mov
cmp
mov
fbstp
jp
mov
cli
pop
pop
aaa
insl
pop
jle
push
pop
out
mov
or
out
mov
loop
dec
subb
inc
jns
mov
imul
aad
ret
popf
xor
mov
mov
jge
in
outsl
cmp
sub
in
dec
loopne
push
jge
cld
sub
pop
addr16
enter
mov
pop
adc
sahf
push
jb
rolb
xlat
outsl
jo
popf
hlt
sub
mov
adc
loope
mov
outsb
adc
inc
mov
mov
xor
loop
cmpsl
negb
and
popw
iret
dec
outsl
daa
dec
lret
out
xchg
loop
je
loope
aam
out
sbb
outsb
out
mov
aas
js
push
lcall
jnp
or
mov
pop
mov
lds
test
or
pop
and
sti
pusha
ret
mov
shll
or
sub
xor
dec
xchg
push
add
call
cmpsl
sbb
daa
add
cmp
cld
jbe
and
hlt
sub
pusha
daa
fidivs
push
push
or
push
mov
xchg
pusha
je
popf
mov
popf
roll
pavgw
pop
adc
push
cmp
or
mov
mov
jle
fcmovnu
push
je
test
jecxz
dec
jno
xor
sbb
int
popf
les
xchg
fnstenv
nop
sub
mov
adc
idiv
add
add
mov
ss
xor
cmp
inc
or
aas
imul
jmp
mov
dec
xchg
mov
arpl
ret
xor
insl
popa
cmp
dec
adc
xchg
cmpsb
inc
jb
mov
fwait
cmp
fucomip
mov
addr16
jbe
int
adc
dec
imul
loopne
outsl
push
sbb
daa
sbb
mov
cmpsl
pop
loopne
lods
mov
addr16
cli
lods
sti
xchg
or
xor
mov
and
push
mov
cli
lods
push
pop
stos
xor
mov
lcall
cmp
cmp
jecxz
cld
and
jb
cmpl
jl
int
jecxz
mov
sub
or
xchg
fdivs
xorl
mov
or
push
sub
pop
stc
js
push
ds
dec
and
and
cmp
in
add
mov
aad
and
mov
mov
mov
pop
xchg
mov
movl
xor
in
lea
scas
frstor
clc
lods
push
test
cmp
push
mov
xchg
xor
jno
std
cmpb
daa
daa
pop
xor
jno
adc
shrl
sbb
push
pushf
mov
lds
jbe
pop
mov
inc
mov
xchg
cld
adc
mov
cltd
js
xor
pop
adc
rcrl
pop
sub
jle
pop
imul
or
sahf
push
xchg
and
jbe
icebp
jmp
nop
pusha
mov
inc
mov
or
cmp
loop
jge
movb
shlb
pop
pop
sub
into
inc
lock
xor
mov
sarb
imul
adc
add
je
xchg
int3
sub
push
inc
mov
call
push
jl
xor
ret
cs
jmp
ret
fmuls
bound
mov
sbb
lods
lods
sbb
jmp
ret
and
mov
addr16
push
jb
mov
insb
inc
or
fcmovnu
scas
xor
pop
lret
sub
dec
mov
ja
pop
add
mov
and
lretw
repnz
mov
popf
and
popf
mov
out
jo
loope
cmpsl
aad
lds
mov
movsb
insl
xchg
cmpsl
sub
jg
and
jns
or
and
std
dec
aaa
es
mov
stos
les
rclb
mov
jae
decb
test
xor
sbb
test
adcl
int
push
add
repz
pop
sar
mov
xlat
jecxz
lods
test
push
scas
sub
pop
int
xor
loop
sbb
fsubp
push
je
push
mov
imul
in
out
outsb
push
rcl
push
out
stos
aad
xor
jb
push
lcall
cmc
rorl
imul
test
xchg
imul
fsubrp
inc
mov
and
out
dec
jmp
in
sbb
repz
in
movsl
ja
ds
hlt
cltd
aad
into
popa
push
mov
push
lds
inc
sub
dec
leave
mov
mov
lret
call
pop
cli
xchg
adc
fnstsw
jns
rcrl
out
push
mov
pop
mov
pop
pop
pop
push
mov
xchg
xchg
shll
lret
aad
lret
and
fisubl
aas
xor
xchg
jmp
cmpsl
adc
push
or
stos
ja
sub
inc
daa
dec
cmove
push
xchg
push
or
add
sub
xchg
mov
adc
pop
loopne
adc
je
dec
cld
dec
adc
inc
rcr
fs
pop
fbstp
int3
scas
daa
pop
mov
stc
inc
icebp
subl
test
insb
jge
data16
xor
sub
xchg
jl
mov
adc
inc
shll
lock
pop
jl
insb
inc
fisubl
inc
in
xor
xor
fisubrl
out
and
mov
add
push
jle
test
out
inc
je
orl
inc
std
xchg
sub
sahf
popf
mov
cmpsb
lcall
test
jecxz
xor
push
in
out
add
fimuls
mov
mov
cmp
sahf
repnz
dec
cs
pusha
sti
mov
mov
ljmp
popa
shlb
pop
jb
imul
gs
mov
stos
xor
inc
xchg
nop
js
jno
xchg
pop
test
fcomps
test
pop
outsl
imul
add
pop
push
xor
mov
aas
jp
inc
call
and
in
jl
lds
push
mov
aad
das
push
mov
fadd
push
adc
xlat
pop
push
add
push
fwait
iret
xchg
push
cmp
cmp
push
dec
push
shrl
shl
stos
xor
dec
ret
pop
mov
cwtl
dec
lea
jne
sbb
pop
adc
repz
pop
decl
jns
sbb
xor
movsb
jno
loope
add
push
xor
stos
jg
ret
and
icebp
cmp
loopne
pop
mov
leave
je
repz
shlb
clc
xchg
test
xchg
jmp
cmp
ja
and
push
lret
shll
sbb
push
inc
adc
sti
and
and
test
mov
outsb
in
out
rcll
cltd
xchg
push
aam
inc
out
fistpl
pop
out
and
icebp
add
leave
lds
xor
std
or
sub
jo
sti
dec
test
insl
icebp
dec
and
gs
jp
aas
inc
imul
fsts
sbb
out
mov
mov
dec
icebp
stos
inc
xchg
pop
cmpsl
aad
xor
inc
adcb
outsb
xor
out
and
mov
lea
out
or
mov
sarl
loopne
mov
push
xchg
in
add
mov
xor
mov
lea
cmp
cmp
adc
and
mov
dec
push
or
add
or
jle
dec
xchg
inc
ja
mov
mov
push
and
lods
pushf
jmp
stos
movsb
sti
or
jne
cmc
lret
pop
es
sarl
pop
insl
addl
fwait
insb
cmp
cmp
xor
jecxz
stos
cmp
subb
nop
nop
cmpsb
std
or
lock
nop
pop
jne
mov
xor
cs
or
xorl
dec
cmc
push
cli
adc
lods
add
iret
in
push
mov
cld
jp
ret
jno
sub
insl
push
cmpb
std
sub
pop
xchg
inc
sub
stos
lea
pop
xor
pop
icebp
in
jns
pop
and
or
mov
cmp
and
xor
xchg
loopne
jae
sub
jne
popa
sbb
stos
lods
xorl
mov
jno
loope
sbb
mov
icebp
shl
pop
neg
lcall
and
push
cmp
leave
out
xchg
and
sbb
adc
xor
bound
test
sbb
enter
mov
cmc
pop
inc
test
outsl
mov
sub
push
pop
jbe
aad
fsts
mov
aaa
adc
aad
inc
mov
cwtl
dec
loope
sub
pushf
jne
lea
jecxz
or
outsl
jge
sarb
fstl
adc
xchg
out
sub
mov
lret
aad
push
test
sbb
test
les
imull
and
cld
dec
cmpsl
lret
in
lret
inc
mov
xor
adc
cmp
jae
scas
imul
mov
orl
outsb
movsb
fdiv
sbb
out
mov
jne
dec
jo
insl
mov
xlat
ret
into
fnsave
sbb
xor
jecxz
imul
cld
pop
mov
jl
xchg
inc
mov
xor
loopne
add
pop
icebp
das
into
ljmp
fistpll
dec
in
rcl
mov
mov
int
push
pop
mov
mov
jg
cli
hlt
sub
fcoml
scas
out
repnz
fildl
adc
les
cld
pop
imul
jg
pop
sbb
mov
imul
test
std
mov
sub
stc
cmpsb
or
testl
inc
arpl
divw
pop
es
mov
pop
movsb
jb
mov
add
push
popa
dec
or
or
repnz
test
mov
cmpsb
rclb
pop
sub
inc
mov
out
das
xor
adc
testl
pop
loop
fs
pop
in
pusha
add
sti
mov
jne
stc
test
call
negb
xchg
filds
inc
jae
or
inc
out
xor
push
dec
cmp
dec
in
sub
xor
jns
mov
dec
out
fstl
xchg
xor
arpl
jne
dec
jns
xor
push
repz
outsb
lds
xor
cli
aas
mov
gs
inc
arpl
insl
jne
cs
mov
scas
loopne
xchg
push
dec
js
xchg
sbb
loop
clc
movsl
xor
dec
jg
and
out
inc
inc
fcmovnu
pop
dec
pop
mov
lods
shrb
lods
pop
or
xchg
out
daa
xlat
fnstcw
outsb
std
mov
sbb
add
mov
shl
inc
in
out
add
dec
cmpsb
scas
mov
push
call
out
cmpsl
icebp
pop
iret
int3
or
js
adc
rolb
imul
fidivs
daa
test
mov
sbb
mov
iret
aam
in
adc
clc
xchg
and
and
pushf
push
mov
dec
or
call
pop
mov
pop
xor
pushf
pop
popa
repnz
in
inc
out
mov
rorl
push
jge
aam
or
sbb
pop
push
adcl
in
cwtl
test
in
out
out
jo
aad
shll
in
push
cwtl
mov
xchg
out
ret
dec
andb
mov
sub
cltd
popa
andps
push
xchg
cmpsb
sbb
inc
or
xchg
adc
inc
mov
mov
ret
dec
inc
cs
subb
xchg
test
in
pusha
subb
out
andb
jo
gs
int
pop
xchg
movsl
pushf
stc
in
cmp
push
out
dec
push
xchg
inc
and
int3
mov
sbb
movsl
jecxz
xor
mov
mov
sahf
loope
sub
cli
adc
frstpm(287
xchg
inc
inc
xchg
pop
mov
and
jbe
push
mov
test
xor
lahf
aas
out
jns
mov
jmp
pop
pop
lahf
loopne
dec
sub
mov
mov
mov
xor
scas
shrl
movsl
xchg
xor
mov
out
inc
inc
mov
addr16
ret
mov
sbb
push
push
xor
sub
jp
fcomp
mov
cmp
dec
jnp
xchg
jmp
inc
int3
inc
nop
sbb
mov
pusha
outsl
or
sub
pop
stos
push
idivb
mov
jbe
je
lods
cmp
aam
xor
cmpsl
push
out
mov
adcb
or
xchg
inc
and
pop
xor
sbb
int3
mov
jecxz
mov
das
insl
das
and
jne
cmp
lcall
sahf
call
dec
cmpl
shlb
and
iret
push
fidivrl
shll
leave
jbe
dec
or
je
fwait
or
repz
addr16
or
jl
repz
fcomps
int
scas
and
outsl
es
hlt
out
mov
and
scas
mov
xchg
fdivs
sbb
push
addl
aas
ficoml
in
cmp
add
imul
pop
decl
inc
es
jg
fimull
sbbb
pop
pop
jnp
clc
mov
les
add
add
mov
mov
add
xor
pusha
cli
adc
outsb
jl
in
xchg
inc
bound
sbb
in
add
pop
movsb
int3
ret
in
adc
ret
and
inc
mov
dec
aad
push
jno
mov
popa
mov
xchg
icebp
sbb
mov
inc
and
je
loopne
or
mov
cld
popa
cmp
shr
lock
cs
fsubrs
xor
mov
jns
fbstp
lahf
into
incb
mov
repz
and
iret
push
lcall
ss
cmp
pop
into
fisubl
movsl
dec
aam
sub
mov
adc
nop
inc
pusha
or
or
stos
out
and
mov
xor
stc
cmp
or
mov
shll
in
push
mov
add
sbb
stos
xor
clc
lea
sbb
inc
mov
ficompl
rcrb
stos
jnp
fldcw
aam
in
mov
xchg
icebp
mov
adc
mov
jns
les
or
sbb
es
mov
cmp
int
cltd
cmp
mov
mov
cmc
jae
mov
mov
dec
mov
push
rorl
nop
adc
mov
jb
dec
adc
adc
xchg
div
sbbb
loop
cmc
shrb
in
dec
xor
mov
dec
jno
xchg
pop
andl
psubd
lods
or
aaa
sti
xchg
insb
xor
test
ss
xor
cmp
ljmp
and
jmp
xchg
mov
stos
in
stos
mov
mov
repz
lods
aaa
mov
icebp
outsb
xor
imul
and
es
mov
ret
pop
or
mov
push
cmp
pop
mov
lret
fwait
xchg
adc
pop
ja
and
lcall
mov
ljmp
sub
hlt
push
cmpb
sbb
or
and
popf
mov
mov
stos
pop
adc
cld
addl
push
daa
call
cmp
mov
add
mov
cmp
gs
incb
test
jae
fwait
cli
faddl
xor
fdivr
fmuls
pop
pop
shl
or
movsb
out
xor
call
andb
lock
enter
add
push
push
and
fwait
stos
js
rclb
inc
bound
inc
adc
into
fsubs
fstpl
shl
stos
pop
pop
lret
addb
test
mov
mov
push
fistl
xor
out
fisubrs
fstpt
pop
in
inc
jmp
inc
or
pop
mov
icebp
inc
push
adc
dec
lret
mov
add
loope
push
call
and
jle
jo
pusha
dec
jb
push
cmovae
sbb
adc
stos
cld
mov
lahf
ljmp
dec
add
dec
cmp
mov
jecxz
xchg
mov
scas
mov
xor
ja
sti
in
mov
fs
push
mov
xchg
adc
movsb
mov
xchg
mov
jecxz
or
jnp
mov
dec
pop
cmp
cmpsl
cld
imul
cmp
xorl
cltd
push
call
cmp
and
and
lcall
dec
cltd
sub
sbb
and
and
jecxz
into
sar
imul
jp
add
mov
and
mull
mov
sbb
pop
cltd
xor
mov
lret
je
xchg
push
cmp
test
dec
adcl
push
das
jb
jge
add
jae
jno
or
out
xchg
mov
and
sbb
inc
loop
xchg
dec
jle
dec
mov
dec
in
sbb
sub
movsl
mov
ss
adc
sbb
inc
hlt
fmul
out
push
fisubl
xorb
push
dec
push
adc
and
test
mov
pop
xor
pushf
hlt
or
pop
test
jg
outsb
sti
call
or
lea
rcll
test
enter
mov
in
cld
int
jl
leave
cmp
inc
sti
cli
xor
das
ret
movsb
shll
pop
pop
out
inc
push
jae
xchg
andb
and
push
fcmovbe
int
mov
in
and
push
movsb
fcomps
adc
addb
rclb
pop
sbb
stos
call
clc
pusha
movsb
xor
adc
cmc
sbb
shl
mov
rclb
mov
add
sub
aaa
or
sbb
sbb
mov
hlt
xor
loop,pn
sti
and
call
daa
sti
ja
and
in
mov
pop
xor
enter
dec
dec
add
filds
aaa
ret
xor
je
jnp
sti
jbe
dec
fwait
fs
bound
ja
mov
or
dec
xchg
jns
and
fstpl
cmp
fisttpl
sbb
sub
and
inc
jg
out
jle
shrl
cmp
sbb
sarb
in
pop
pushf
lcall
xchg
mov
mov
in
leave
lock
jmp
daa
fs
inc
mov
pop
in
aas
jmp
mov
cmp
push
lea
mov
std
push
mov
ja
or
repnz
xchg
loopne
insl
lret
sub
aas
dec
mov
push
stc
subl
mov
sahf
jae
jge
shrb
jmp
and
jmp
mov
call
mov
push
les
adc
sbb
in
pop
push
xchg
mov
dec
or
mov
sbb
sub
dec
inc
shrb
cmp
enter
cmc
inc
adc
dec
enter
sbbb
loop
mov
ret
or
std
mov
push
les
jge
insb
dec
out
xchg
and
jo
fwait
adcb
mov
inc
or
jg
in
pop
fwait
xchg
mov
sbb
das
dec
or
inc
pop
mov
rcrb
fwait
push
mov
and
jg
fmuls
xlat
mov
test
sbb
lret
ljmp
les
std
mov
jge
in
and
and
outsl
arpl
test
sbb
inc
inc
in
in
mov
cld
movsb
lods
add
xlat
notb
sbb
sub
movsb
sub
jne
ret
mov
xor
ffree
dec
pop
fsubrs
add
outsl
pop
cmp
xor
fildl
ror
ret
xchg
add
sahf
xchg
stos
icebp
cwtl
mov
inc
cmp
pop
stc
das
pusha
call
or
mov
notl
mov
xchg
xchg
ret
rcr
testl
sbb
push
pusha
fldcw
cmc
adc
cltd
std
popf
aas
cs
nop
cltd
or
fldl
repz
pop
push
les
adc
adc
enter
shrb
or
aaa
pop
fwait
push
pop
pop
cmpsb
fsubr
xor
scas
xchg
jb,pt
inc
or
jbe
aad
imul
sbb
cmp
les
int3
cmp
enter
dec
cmc
stc
ja
divb
sahf
cli
imul
mov
filds
push
test
orl
lret
loop
and
xchg
cmp
loope
add
ds
add
movsl
lods
xor
mov
loopne
add
mov
inc
pusha
pop
add
adc
cmpsl
shufps
push
inc
fwait
mov
mov
fwait
inc
jle
in
adc
push
sti
in
dec
imul
inc
in
sub
popa
xor
dec
mov
or
pushf
leave
int3
nop
mov
fistl
inc
jge
int
jle
pop
push
fstl
aam
or
jecxz
dec
jnp
push
imul
or
gs
repnz
loop
sbb
add
mov
push
orb
sahf
popa
jbe
cmp
popf
sbb
dec
pop
idivb
mov
int3
jne
cs
pop
jg
xchg
les
loopne
pop
shlb
jmp
jecxz
and
fmull
mov
test
mov
sub
adc
leave
arpl
rcrb
out
pop
pop
dec
inc
mov
arpl
xchg
cs
ljmp
sub
rep
lcall
mov
push
mov
sbb
aas
testl
dec
stos
xchg
pop
xor
mov
fimull
mov
jmp
mov
sub
mov
jle
sub
cmpsb
subl
sbb
xlat
in
test
jp
fstpt
jg
arpl
push
pop
mov
lods
xchg
insb
pop
pop
xor
clc
push
xlat
or
inc
mov
aaa
xlat
sub
mov
cli
inc
cmp
loop
inc
pop
aam
mov
dec
pop
cmp
jmp
adc
mov
fwait
or
xchg
inc
adc
cmp
fnstsw
cli
dec
loop
repz
mov
bound
push
data16
mov
add
push
insl
inc
mov
cmp
lret
iret
mov
sub
rolb
ss
add
aas
dec
fdivs
or
jmp
cmpsl
jg
hlt
data16
or
xchg
dec
mov
sarb
add
lods
pop
stos
cwtl
push
jmp
dec
sbb
decb
ficoms
sub
sub
sub
loop
mov
jae
or
cmp
push
pusha
inc
lret
mov
js
sbb
sub
cs
add
cmp
iret
mov
mov
inc
adc
call
lret
inc
ljmp
fs
or
enter
dec
outsl
inc
scas
push
fwait
mov
mov
adc
stc
jb
call
cmp
jl
fadd
mov
adc
aas
cwtl
pushl
lahf
cltd
int3
scas
aas
lret
xchg
out
add
cmp
adc
and
ljmp
stc
lea
cmp
lea
ret
dec
cmp
dec
pop
dec
ret
addl
cmp
sub
loop
cmp
shll
add
lock
jp
push
xchg
test
ret
mov
loop
mov
addb
shlb
mov
and
cmp
jl
fildll
test
repnz
sti
cmpsl
daa
rep
push
fwait
inc
push
cmpsb
mov
xchg
out
dec
xor
aad
jne
loop
imulb
mov
adc
jg
enter
push
in
push
mov
adc
scas
aam
outsb
pushf
push
pusha
ficoml
jne
pop
sahf
pushf
cmp
outsl
sub
scas
pop
test
adc
fwait
cmp
test
aaa
les
leave
jmp
add
or
lock
add
jne
fildll
sarl
out
loop
aad
popf
scas
cmp
pop
jnp
adcb
insl
hlt
bound
es
je
sub
adc
movzbl
or
test
in
adc
fldenv
jo
sub
gs
dec
xlat
loop
pop
adc
lahf
xor
decl
adc
mov
sbb
xor
pop
mov
aas
jecxz
lret
insb
mov
or
outsb
adc
cmp
lcall
ffreep
shr
jge
gs
inc
mov
stos
inc
shrl
push
ret
inc
std
inc
call
subl
ljmp
pop
dec
xor
and
cmp
fs
dec
push
jg
mov
mov
cs
push
outsb
pop
adc
pop
ret
and
pop
into
jmp
in
fnstenv
sub
shrl
push
cwtl
xor
dec
insl
lods
mov
loope
adc
std
nop
ljmp
mov
lahf
roll
jae
dec
sub
mov
push
je
dec
jp
cwtl
jmp
cmp
fistpl
inc
aas
mov
add
scas
dec
mov
jle
ret
daa
cmpl
out
mov
stos
push
mov
inc
repnz
call
test
out
nop
rol
fdivs
adc
sarl
cmp
out
or
and
inc
sbb
push
and
not
xorb
jp
repz
test
lods
out
dec
daa
sbb
jbe
addr16
and
stos
scas
pop
lret
scas
andl
sbb
mov
xchg
jb
out
mov
mov
xlat
pop
xor
pop
add
lds
not
dec
test
movsl
mov
inc
dec
cmp
and
fnstsw
insl
xor
or
adc
out
push
push
cld
aad
and
lret
xchg
clc
jmp
inc
pop
add
mov
jle
adc
jecxz
jge
in
push
movsb
push
and
dec
xchg
mov
je
scas
cli
push
ret
imul
mov
and
popf
mov
roll
jnp
cmpsb
push
mov
scas
jmp
xchg
ss
xchg
popl
dec
mov
sub
mov
lcall
add
dec
mov
pop
add
pop
mov
add
lret
push
mov
leave
mov
mov
push
or
setl
sub
xor
int
es
pop
fisubl
and
pop
xchg
stos
pop
lods
shlb
and
xor
mov
lock
jp
sahf
mov
pop
or
or
jl
add
sbb
mov
xchg
aam
mov
cmpsb
imul
out
ljmp
cmp
and
lcall
xchg
xchg
inc
xchg
inc
js
or
loopne
or
push
xor
jl
xchg
xchg
loop
and
pushf
cwtl
cmp
sbb
lcall
lods
push
jl
call
add
into
fidivs
out
mov
repnz
mov
xchg
push
push
add
je
inc
aad
fisttpl
sub
sbb
fcmovnbe
mov
scas
inc
push
out
call
std
out
orl
in
aas
test
adc
or
dec
lods
frstor
shl
in
inc
lods
xor
pand
or
cmp
cmp
and
and
or
cmp
pushf
jp
testl
ffree
stc
and
popa
xor
cltd
mov
dec
inc
mov
dec
jge
xchg
out
fwait
xor
movsb
jnp
cmp
cwtl
fsubr
adc
test
outsl
fs
out
inc
lock
xorl
popa
or
movsb
insl
push
outsl
test
push
cmp
cs
mov
rcll
inc
imul
mov
or
jge
inc
add
int3
js
and
daa
in
enter
loop
ljmp
into
xor
or
push
popf
add
movsb
and
out
jns
and
mov
nop
ja
jne
clc
dec
sub
inc
mov
jns
in
shll
adc
in
js
xor
inc
pop
inc
lds
test
xor
shl
jb
fimull
fidivrs
mov
adc
leave
xor
jle
xchg
fists
paddsb
repnz
xchg
out
std
fsub
sbb
push
xor
sbb
xchg
in
jge
push
sub
dec
mov
cld
roll
inc
scas
cmp
mov
pop
leave
adc
out
mov
int
test
fldenv
mov
es
lahf
push
adcb
hlt
and
and
orb
pslld
lret
jbe
sti
mov
mov
dec
fs
jl
xor
or
or
out
cmpsb
rcrb
pushf
mov
ret
fldl
shll
cmpl
fistl
out
mov
hlt
popa
add
popa
mov
out
cmp
xor
cmp
xlat
cmp
ljmp
add
mov
jae
xchg
xchg
jno
fisttps
repnz
pop
xor
dec
push
or
jge
pop
mov
or
fimuls
jb
push
rorl
pop
xchg
push
sbb
insb
push
rorl
sub
push
and
adc
sbb
sbb
insb
daa
jmp
in
fnsave
mov
mov
and
add
int3
adc
fistpll
pop
push
dec
cmpsl
cmp
enter
rcll
dec
inc
shll
mov
mov
xchg
adc
fucomp
outsl
xchg
jmp
fisubrs
dec
dec
outsl
pop
mov
xchg
mov
cli
inc
popa
and
adc
movsl
or
loope
and
out
stos
mov
cmpsl
in
cmp
iret
mov
hlt
dec
adcl
or
lods
mov
ret
jo
jp
push
test
lcall
pop
out
sbbb
je
mov
xchg
adc
fadds
dec
movsb
xor
pop
sbb
sti
xchg
call
mov
xor
inc
testb
fucomi
lods
enter
add
cld
gs
sub
jecxz
pushf
sub
sub
xchg
addr16
pop
cmpsl
cmp
xchg
adc
jns
lcall
adc
mov
jge
syscall
mov
pop
sub
imul
fcomi
mov
test
push
lods
pusha
loope
dec
inc
stos
mul
xor
or
sbb
lea
rcll
sbb
pop
loope
out
jle
rcrl
xor
lods
xchg
mov
or
out
mov
inc
fwait
mov
test
push
sahf
jne
mov
ja
repnz
das
xchg
sbb
lcall
insb
stos
dec
mov
sub
jg
sahf
or
pop
sahf
sub
lods
stos
loope
sbb
xor
subb
xor
ljmp
cli
test
mov
and
and
jecxz
mov
imul
stos
lods
push
xor
pop
adc
jne
ret
pop
fcmovne
dec
pop
cmc
push
jb
add
jl
into
pop
dec
mov
icebp
inc
sbb
rcll
nop
push
jnp
es
pop
or
adc
cmp
cwtl
jo,pn
jns
ret
add
xchg
add
dec
call
iret
fnstenv
inc
aaa
test
dec
mov
push
sub
daa
or
addr16
cltd
add
or
pop
enter
xchg
cmp
cmp
cmp
sub
testb
ja
mov
push
or
sbb
mov
sti
stos
mov
jno
jecxz
pop
xchg
dec
mov
xchg
shlb
xor
das
jp
or
or
lods
dec
mov
movsl
or
lahf
cmp
sub
jl
shll
stos
jne
movb
adc
decb
cmpsl
mov
mov
xchg
xor
xor
cmp
data16
in
fsts
add
xor
cwtl
jl
push
xchg
push
pop
pusha
loope
imul
rolb
rolb
mov
pop
jmp
add
std
add
mov
loopne
add
cwtl
bound
test
lods
add
jae
and
push
cli
push
std
out
cmp
dec
mov
ljmp
out
pop
cmp
stos
add
test
xchg
dec
arpl
fcoml
adc
sbb
cwtl
fiaddl
lods
mov
cmpsl
lahf
iret
loope
sbbl
sahf
test
clc
fdivr
call
movsl
out
int
adc
test
rcrl
in
repnz
inc
pop
mov
movsb
lret
dec
pop
movsb
cmp
dec
clc
loopne
lea
jnp
lock
sub
mov
add
sbb
inc
mov
loop
fwait
add
lock
gs
xchg
mov
lcall
ficomps
mov
dec
fsts
mov
cmp
inc
fcmove
dec
mov
jno
jecxz
jecxz
out
stos
or
mov
imul
xchg
pop
sbb
in
jnp
mov
mov
jl
out
cltd
es
fimull
cwtl
push
inc
mov
imul
je
mov
ret
dec
mov
sar
inc
mov
out
pop
jmp
ja
frstor
and
sbb
je
sub
push
nop
sti
jecxz
cmp
std
in
ret
pop
jne
adc
movups
sarb
cmpsl
daa
out
and
add
mulb
testb
imul
mov
mov
adc
sbb
inc
notl
xor
or
jle
mov
push
push
pop
sbb
in
sbb
sub
inc
adc
inc
fisttps
inc
xchg
pop
in
xor
mov
or
gs
pop
adc
jle
iret
lahf
adc
add
icebp
cmpsb
daa
mov
sub
int3
cmp
aad
lahf
pop
stc
hlt
outsl
pop
pop
xor
out
dec
scas
call
and
inc
data16
imul
jno
and
mov
mov
mov
clc
mov
scas
cmp
gs
inc
dec
setle
out
jno
jne
jo
and
daa
mov
push
inc
push
pushl
mov
mov
ret
lea
lret
das
call
xorb
jns
and
mov
enter
jle
adc
inc
repz
loopne
es
xor
mov
loop
add
mov
mov
lds
xchg
pop
or
and
js
dec
xchg
nop
inc
inc
stos
out
mov
sbb
lock
popa
xchg
xchg
inc
mov
es
stos
sti
jl
dec
cltd
cmp
lahf
adc
xchg
push
loop
es
jmp
mov
clc
cmc
in
xor
arpl
ss
rcrl
rcrb
push
xchg
fbld
clc
scas
mov
ret
das
xor
xor
stos
fisttps
int
out
add
mov
mov
pop
cmpsb
mov
aam
data16
inc
ds
mov
hlt
lahf
int3
and
fisttpl
addb
jge
add
adc
test
sarb
and
enter
mov
mov
roll
dec
movb
stos
ficoml
lods
jmp
jno
dec
popf
mov
aaa
jns
mov
dec
enter
and
sbb
xorb
adc
push
int3
sbb
cmp
cmp
fnsave
aaa
mov
jge
loop
sbb
or
push
jmp
or
push
adc
pusha
out
out
mov
jne
xchg
clc
push
loop
mov
jne
movb
cmp
jbe
popf
sbb
pop
loopne
mov
jbe
push
js
dec
sub
cltd
cmpsl
pop
mov
out
mov
sub
pop
test
push
out
out
and
data16
cld
inc
test
mov
inc
rolb
jp
sahf
inc
pop
sbb
push
ljmp
fidivs
jecxz
add
lea
cmpsb
decl
cmp
ret
jle
dec
jl
hlt
mov
mov
iret
aam
push
jl
cs
add
in
scas
add
sbb
int3
xorl
jbe
aam
push
dec
in
inc
clc
sti
stc
add
fildl
lret
cmpsl
dec
mov
inc
or
xchg
in
or
dec
cmp
aad
xchg
pop
dec
mov
mov
cs
sub
rolb
inc
mov
jp
es
sbb
pop
pop
adc
adc
cmp
inc
fistps
mov
xchg
mov
test
push
xorb
lcall
in
data16
push
jge
mov
jle
arpl
dec
push
ds
jae
js
inc
pop
dec
lods
sbb
jp
addl
mov
nop
mov
scas
jmp
sbb
repnz
shrl
jne
dec
pop
mov
sub
mov
scas
xor
test
lods
adc
cltd
dec
aas
adc
shlb
aam
xchg
push
sbb
in
inc
test
and
enter
mov
xchg
push
mov
add
adc
mov
das
xchg
sahf
mov
cmpsl
mov
data16
in
mov
xchg
lea
sub
subl
mov
inc
lret
push
pusha
xor
sahf
jnp,pt
loop
inc
xchg
inc
pop
pop
mov
add
aas
loopne
hlt
aad
and
pushl
inc
push
lahf
aam
into
xchg
xor
sahf
in
push
pop
push
mov
int
mov
mov
xchg
insb
push
in
aad
fmuls
jle
inc
in
lods
mov
xor
shll
dec
xchg
stos
sbb
push
cmpsl
mov
and
popa
imulb
ret
add
mov
and
inc
es
movsl
popf
xchg
stos
stos
lods
push
aaa
jae
cli
jae
call
jg
cmp
cmp
dec
dec
jns
inc
jge
xor
aad
xchg
adc
add
mov
mov
lock
cmpsb
xchg
mov
pop
fs
setns
fwait
iret
xchg
sub
fiaddl
sub
cmpsb
pop
jbe
sahf
pop
xchg
mov
imul
pop
xor
pop
rcrl
shll
push
pop
out
and
movsb
in
adc
xchg
mov
dec
dec
fadds
cmp
mov
flds
clc
mov
add
sub
nop
mov
and
mov
lret
sub
cld
lret
add
in
mov
das
jl
scas
sti
roll
mov
cmp
sahf
push
mov
pop
sbb
sti
sbb
push
into
push
lret
xlat
aad
add
pusha
rol
mov
in
insl
mov
mov
push
sbb
mov
xchg
sbb
outsb
std
std
lcall
push
cmp
inc
das
shl
pop
in
push
imul
insl
enter
scas
xor
ss
aas
popf
outsl
or
xor
hlt
push
insl
pusha
and
mul
inc
or
mov
lret
adc
imul
clc
adc
mov
push
shr
dec
jge
xlat
jg
cmpsb
ja
test
scas
sbb
icebp
xor
out
mov
lods
xor
sbb
xor
cmp
dec
fcomp
xchg
jo
pop
std
xchg
int
lret
loope
popl
cmp
dec
lods
jmp
lahf
adc
rcrl
push
sbb
js
push
icebp
sbb
arpl
inc
jp
add
jl
add
cmpsl
mov
out
pushf
and
stos
sar
pop
outsb
nop
xchg
add
pcmpgtw
adc
sub
and
test
cmpsl
mov
cwtl
pop
jmp
or
in
repz
push
outsl
cltd
push
inc
sbb
dec
pop
or
rcll
mov
lcall
mov
call
sbb
dec
xor
sub
imul
inc
xchg
pusha
cmp
adc
cltd
xchg
inc
inc
rolb
loopne
xor
stc
mov
call
outsb
popa
das
inc
fs
dec
loopne
mov
and
and
add
add
pushl
aam
sti
adc
in
push
sub
fcoml
jmp
cvtps2pi
sub
lods
mov
cmp
jae,pt
inc
divb
push
jbe
cwtl
add
loop
stos
xor
ficoml
pusha
jge
and
inc
add
inc
inc
jmp
inc
loope
inc
jmp
adc
repnz
in
adc
xor
xor
mov
mov
outsl
push
or
sub
xor
xchg
jecxz
mov
inc
out
std
cmp
xchg
ret
aas
sbb
xor
sbbl
mov
neg
cs
stos
add
cmpsb
mov
add
mov
xlat
and
adc
mov
hlt
cmp
je
sbb
outsb
daa
mov
std
sbb
out
mov
stos
jp
fisttps
xchg
adc
jmp
xor
and
jmp
aad
scas
dec
inc
or
test
push
jmp
jae
das
shl
shrl
inc
fwait
push
int3
sarb
and
mov
shll
pop
xor
ficomps
pop
cli
int3
cmp
and
test
xchg
sbb
sub
mov
ja
mov
test
dec
jae
pushf
adc
and
cmp
mull
fsubp
ja
int
and
inc
cmp
cmpsb
fs
test
gs
jg
cmpsb
xchg
pop
je
add
scas
cmpsb
lods
scas
cmpsl
inc
shll
and
lea
fwait
lods
sub
inc
inc
es
jp
shll
sahf
sar
xchg
fwait
jl
xlat
sarl
inc
iret
adc
fmuls
push
mov
sarl
cmpsl
inc
sub
js
dec
and
fs
dec
pushf
push
enter
test
out
fwait
jmp
jmp
cmpsl
push
pop
xor
jmp
or
test
add
daa
mov
fnsave
jns
mov
adc
scas
or
es
or
xchg
out
test
xor
call
in
pop
aad
nop
push
sbb
or
xchg
in
leave
dec
jns
mov
mov
pop
pop
jne
or
int
lcall
add
mov
cmp
lret
popf
add
rcrl
fdivs
or
push
movsl
sbb
call
in
adc
fcomps
mov
in
mov
into
and
xchg
das
icebp
push
pop
sbb
mov
or
inc
jmp
pop
pop
xchg
ljmpw
xchg
pop
std
pop
pop
jle
mov
and
cmp
dec
ss
dec
mov
insb
jecxz
int
fsubr
mov
in
cltd
test
and
ljmp
js
cmpl
sbb
rcll
push
fdivr
push
sti
mov
aam
push
inc
cmp
jne
mov
push
enter
mov
jbe
vpmulhw
xor
stos
jno
mov
scas
xor
test
sub
jno
in
sbb
enter
out
mov
push
add
sahf
inc
out
sub
clc
sbb
jae
jg
dec
push
nop
fldl
sbbl
enter
pop
or
gs
sti
jmp
scas
hlt
inc
stos
pop
sbb
mov
cmp
daa
shlb
ss
mov
sbb
outsb
xchg
fdivrp
inc
mov
test
pop
shrl
inc
flds
cwtl
mov
mov
xchg
mov
outsb
push
adc
xchg
icebp
add
dec
mov
in
in
dec
pushf
dec
loopne
mov
cltd
jnp
xor
adc
jp
mull
ss
addl
dec
out
mov
mov
das
lods
cwtl
mov
fs
icebp
icebp
lods
ljmp
cmp
push
pushf
je
mov
mov
sub
in
pop
std
sbbb
js
cmp
mov
js
mov
mov
dec
jb
cmp
mov
cmp
fs
fisubrl
jge
cmp
mov
cmp
mov
lcall
pop
xor
xchg
ljmp
sub
hlt
and
and
inc
subb
mov
jo,pt
cmpsl
and
and
das
push
cmp
adc
mov
gs
or
in
jge
mov
pop
pop
mov
or
je
adc
aaa
out
xor
cwtl
mov
out
inc
les
pop
cld
add
adc
sub
enter
add
add
mov
push
arpl
or
jg
push
movsl
sbb
push
ja
dec
xor
sub
enter
mov
xor
add
mov
push
push
je
sbb
xchg
imul
jmp
incb
test
jnp
and
ss
orl
dec
jmp
aam
add
jge
scas
std
mov
push
int
sahf
lret
jmp
sbbl
mov
push
rorl
sbb
inc
push
sbb
xchg
mov
aad
xor
inc
mov
add
fstpt
lret
sbb
xchg
xchg
repnz
push
or
cmpsl
pop
push
aas
imul
mov
stc
cmp
mov
sbb
jl
lahf
or
mov
leave
movsl
add
and
cli
xor
push
xor
and
cmpsl
or
add
adc
fldcw
xchg
lea
div
push
jb
test
ret
scas
mov
fstpt
add
sub
test
cltd
cmp
sbb
fdivrs
fnstenv
xor
add
xchg
cmp
mov
cmp
or
xor
adc
mov
and
adc
daa
cmp
sbb
xchg
cmpsl
xor
jbe
nop
or
cmp
sub
cld
dec
lret
aad
jbe
fbld
jne
pop
popf
adc
xlat
ret
fs
jbe
in
sub
sbb
mov
std
loope
rcrl
and
arpl
fwait
cmp
addl
int
jo
inc
loop
cmpsb
and
mov
or
cmpsl
loopne
or
testb
xor
repz
pusha
inc
gs
mov
pusha
popa
xor
xchg
hlt
sub
arpl
hlt
insb
jle
bound
rcrl
cmp
xchg
lret
data16
add
xor
pop
lcall
mull
inc
cmpsl
out
js
jae
dec
jo
mov
cmp
dec
pop
jne
imul
sti
mov
add
cmp
mov
mov
mov
pop
xchg
jne
sbb
outsl
notl
outsb
and
mov
imul
pop
rclb
popf
pop
iret
jle
jl
dec
shrb
dec
inc
mov
lea
inc
xchg
sub
jno
mov
sub
sub
popa
nop
test
cs
push
not
addr16
or
pop
xchg
hlt
iret
xchg
insb
add
loop
int3
stc
jne
pop
sarb
flds
lea
enter
sbb
mov
dec
loop
and
pop
or
push
call
lds
idivl
clc
dec
cld
leave
lcall
add
out
roll
push
or
sub
hlt
call
and
adc
mov
out
icebp
jle
or
add
fwait
mov
lods
push
in
push
push
push
shlb
cmp
dec
cmp
push
adc
mov
push
psraw
xor
fimuls
jl
push
lods
jo
xchg
mov
rolb
daa
pushf
jp
pop
add
jno
add
jae
in
in
clc
jnp
xor
inc
cmpl
loope
or
mov
dec
bound
call
daa
mov
rorl
sub
mov
shr
in
icebp
aam
push
stc
mov
mov
xchg
xchg
sub
xchg
or
cmp
arpl
mov
je
stc
lahf
mov
jg
rcll
and
add
fwait
orb
in
jnp
cwtl
adc
mov
aam
das
dec
inc
icebp
rclb
mov
shll
out
nop
clc
sbb
mov
sbb
push
movsb
ss
lods
orl
push
jge
shlb
xchg
xorb
pusha
inc
dec
mov
mov
aad
mov
pop
jne
or
and
cmpsb
inc
dec
add
pusha
lcall
fs
push
shlb
push
pushf
addl
aas
sub
jmp
xchg
aaa
adc
arpl
add
in
push
or
loop
sbb
into
xor
insl
adc
sahf
or
cs
dec
lods
outsl
pusha
daa
sbb
insl
jnp
int
xchg
out
pop
mov
shlb
aaa
in
xor
or
pop
xor
lock
sub
push
outsl
lret
outsb
lds
sbb
jecxz
mov
add
xor
cmp
cmpsb
icebp
jb
lret
cmp
pop
sub
lahf
mov
or
fidivs
xchg
sarl
xor
clc
push
inc
aaa
cmp
std
mov
push
or
mov
pop
arpl
out
cmpsl
in
in
jmp
sti
ficoms
into
icebp
sub
pop
jg
or
aad
add
push
in
and
imul
cmp
lret
mov
sbb
push
rol
pushf
fimull
daa
jnp
push
imul
push
lahf
or
in
loopne
or
test
ret
das
cmp
enter
cmpsl
dec
lret
pop
inc
mov
jmp
mov
imul
loope
cltd
dec
cli
xchg
lods
jle
adc
cmp
push
out
pop
in
dec
lret
out
repz
dec
rorl
outsl
push
cmpsb
mov
mov
outsb
stos
lods
hlt
test
adc
mov
lret
dec
les
xchg
sar
rorb
pop
jl
push
cltd
cmp
scas
or
or
jge
stos
test
lods
fcoml
dec
aad
sbbl
or
pop
push
sahf
sub
fmull
stos
lcall
sub
cmp
sub
sbb
gs
xlat
and
int
loope
movsb
leave
sbb
jecxz
arpl
xchg
adc
xor
or
xchg
icebp
xor
cmp
lea
jp
lret
dec
sub
xchg
cmp
lea
lret
cs
mov
pop
insl
daa
std
jge
movl
cmp
sub
pop
scas
test
and
bnd
mov
inc
mov
push
inc
sbb
dec
not
outsb
lds
xchg
cmp
nop
push
out
notl
fldl
adc
mov
test
add
mov
xlat
clc
mov
aad
insl
sbb
jbe
add
mov
cmp
scas
cmp
dec
cmp
mov
test
out
out
std
xor
ret
cwtl
and
mov
clc
dec
sbb
leave
lds
add
mov
push
push
es
mov
shrb
and
xchg
sub
scas
add
cmc
dec
add
stc
leave
arpl
add
cmp
mov
mov
fdivp
sbb
pop
shrb
cmpsl
xchg
push
repz
pop
jbe
daa
inc
aas
cmp
jae
mov
test
sahf
push
shll
das
fisttpll
xchg
icebp
xchg
leave
and
xchg
mov
fisttpll
dec
enter
adc
ret
dec
and
and
sbb
ljmp
sub
fistpl
faddl
in
outsb
jnp
jno
sti
cmp
push
dec
gs
push
subl
shrl
ret
dec
and
jne
out
in
inc
dec
gs
pop
das
or
bnd
xchg
test
inc
fisttps
mov
inc
test
stos
add
add
mov
cmpb
fmulp
clc
push
inc
push
int
cmovle
daa
mov
cmc
shrl
mov
xchg
mov
sub
and
inc
mov
data16
ffreep
jle
xchg
arpl
scas
inc
and
cmp
cmp
jle
mov
sub
add
lods
ret
test
and
and
test
dec
push
daa
jb
mov
fcmove
testb
arpl
xor
out
or
jne
aaa
cmpb
fsub
jge
mov
insl
cmpl
rcrb
mov
inc
mov
in
cmp
or
or
pop
mov
inc
aaa
clc
cmp
or
scas
mov
dec
dec
in
push
or
int
cmp
jp
mov
xchg
das
imul
test
jbe
imul
cld
sbb
daa
pop
repz
movsl
lahf
lret
adc
and
bswap
pop
or
sub
pop
bound
lahf
stos
ret
popf
out
mov
inc
lret
mov
mov
dec
mov
stos
das
testb
cltd
fdivrl
icebp
adc
int3
mov
mov
pop
aad
test
testb
iret
push
nop
dec
lds
das
mul
mov
mov
popa
aad
inc
test
and
cmpsl
pop
pop
cltd
aas
or
int
add
and
cwtl
rcr
xor
jbe
push
add
cwtl
xor
pusha
sbb
nop
outsb
out
inc
movsb
mov
lea
out
push
pop
js
and
in
dec
addb
mov
mov
sbb
outsl
mov
into
sub
cld
inc
pop
xor
xor
adc
paddb
cmp
xor
shrb
pushf
mov
lods
arpl
pop
pop
fnclex
test
popf
sbb
mov
jmp
in
icebp
xor
mov
fcmovu
dec
sub
cli
cmp
rolb
nop
pop
rolb
js
lahf
int
push
and
cmpsl
xchg
jb
cltd
enter
jb
jmp
xchg
pop
sbb
push
ss
sbb
push
jo
mov
adc
mov
sub
imul
out
arpl
cld
scas
add
rolb
enter
add
and
mov
push
stos
add
outsb
sub
dec
shll
or
sbb
insl
sub
or
pop
push
gs
cmpsb
mov
imul
mov
js
icebp
sub
outsl
sarb
cmp
aam
sub
sub
inc
mov
hlt
xor
insl
dec
test
pop
adc
sbb
mov
mov
std
xlat
nop
mov
shl
mov
push
sbb
xchg
pop
icebp
jp
jae
repz
pop
cmp
insl
popf
stc
push
outsb
ss
and
mov
push
cmp
xor
mov
inc
mov
lret
add
jg
fcomps
scas
fiaddl
xor
adcl
xchg
jae
mov
test
add
sub
shlb
test
sbb
ss
jbe
shr
and
xchg
or
int
aaa
nop
push
sti
lods
xor
add
xor
cmc
mov
test
ret
mov
mov
in
mov
xor
outsl
imul
shl
xor
inc
hlt
js
cs
subb
pop
mov
cmp
xchg
fs
cmpsl
arpl
adc
fldl
ja
int3
cltd
rep
inc
inc
inc
mov
cwtl
pop
pop
gs
mov
inc
lods
or
repz
call
out
sahf
in
push
lahf
mov
mov
push
mov
out
jnp
pop
ret
stos
dec
sbb
or
push
mov
mov
mov
or
cltd
sahf
mov
aad
cld
das
or
cmp
jg
psrlw
xor
mov
sub
cli
sbb
jne
stos
mov
outsl
imul
stos
popf
sub
push
imull
or
xorl
sub
cmp
aaa
pop
aaa
xor
ds
ljmp
lods
push
cli
mov
push
mov
mov
jno
mov
and
xlat
and
pop
sub
jg
loope
insb
gs
xor
jne
sub
mov
test
inc
js
sbb
inc
stos
xor
adc
outsb
add
mov
popa
pop
push
daa
fnstcw
dec
xchg
lods
daa
cmp
loopne
scas
pop
push
je
jnp
fstpl
scas
and
jle
add
add
inc
in
jge
mov
mov
xor
sub
je
push
cltd
in
cli
mov
imul
inc
xchg
orb
enter
je
lret
cld
or
and
rcrl
cmpsb
sbb
fstpt
dec
cmp
cs
icebp
mov
into
mov
insl
jmp
je
bound
jns
stc
pop
stos
int
test
outsb
xchg
add
lods
push
mov
add
mov
ret
in
cltd
ljmp
cmp
outsl
mov
jne
mov
outsl
clc
add
add
and
and
cmp
repz
sbb
icebp
jecxz
scas
jge
cmp
mov
cmp
xor
adc
and
fidivs
push
ss
mov
mov
insl
lods
enter
shl
mov
jl
fidivrs
std
pop
in
or
or
imul
add
xchg
loop
lds
xor
add
push
fdivrp
test
and
jge
js
sbb
xor
cmpb
inc
insl
fmull
mov
data16
jns
lahf
sub
push
shll
shll
les
adc
jnp
push
jmp
sub
sahf
fcompl
add
mov
mov
adc
sbb
inc
sbb
jae
add
mov
cmpsl
pop
adc
inc
gs
cmp
and
push
xchg
adc
add
dec
iret
mov
push
push
test
js
mov
pop
mov
adc
inc
xchg
inc
cld
bound
outsb
push
xor
inc
or
imul
fimuls
dec
stos
pop
adc
popl
xchg
in
leave
jbe
loop
sbb
inc
sub
popf
cmp
xchg
aam
movsb
push
jp
inc
enter
or
push
insb
pushl
rcrl
mov
ret
test
sub
cld
add
jbe
jo
jp
outsb
outsl
xlat
scas
cmpsl
enter
inc
mov
ljmp
push
mov
xchg
xchg
and
inc
js
lods
xor
mov
xchg
pop
jbe
add
out
out
aam
cmp
xchg
test
aam
push
fimull
push
out
aas
xchg
jp
es
movsl
dec
xchg
add
add
lds
sbb
fstpt
adc
jmp
cltd
cs
jp
test
and
dec
push
mov
iret
xor
inc
sub
arpl
lret
xchg
out
mov
idivb
xchg
add
inc
jb
fisubrl
shrb
or
outsl
mov
fisubrs
or
cmpsl
adc
xchg
sbb
fistl
daa
popa
sub
mov
adc
dec
call
and
jae
mov
ljmp
mov
and
inc
mov
add
imul
ljmp
xchg
gs
adc
xor
iret
lods
adc
sbb
xor
adc
andl
xor
ljmp
in
lcall
cmp
mov
inc
dec
pop
rcrb
inc
sbb
mov
adc
push
xchg
push
fxch
nop
inc
in
scas
add
aad
fnstenv
bound
clc
pop
add
xor
dec
dec
scas
loop
jge
inc
mov
xlat
insb
ljmp
add
stc
enter
in
jge
mov
inc
sbb
lret
cmp
cld
outsb
mov
push
jp
ret
int
scas
or
jle
fldt
in
loopne
jge
pushf
fs
ja
mov
push
cld
ss
and
ret
mov
inc
cmpsb
mov
add
shll
mov
jg
adc
dec
loopne
cs
aad
add
in
add
mov
scas
jl
mov
push
les
and
sbb
and
imul
pop
dec
stos
xor
dec
addl
sbb
sbb
outsb
cmp
mov
push
sbb
test
daa
push
test
hlt
or
add
inc
push
rcll
or
test
and
push
dec
cmp
outsb
test
test
idivl
mov
clc
xchg
add
fs
pusha
sub
les
cmp
cmp
cltd
push
cmp
mov
ffree
add
repz
inc
mov
and
add
mov
into
sahf
mov
and
sarb
push
mov
cli
bnd
dec
push
mov
add
jmp
inc
sbb
mov
xchg
and
jecxz
fcompl
fstpt
stos
frstor
shlb
xor
cmpsb
rorl
cmpsb
or
cltd
subb
cld
lods
xor
test
mov
cmpsl
mov
jg
adc
jno
mov
mov
jp
mov
mov
out
call
xor
popa
push
iret
ljmp
frstor
mov
fldcw
gs
sbb
sbb
xchg
imulb
cmp
jmp
cmpsl
mov
or
ror
loop
jg
movb
push
sti
pop
mov
jle
xchg
adc
xor
popf
mov
out
aaa
jle
push
js
lds
push
push
lock
fs
push
xchg
test
fwait
scas
cld
aas
inc
aaa
push
and
sub
in
insb
imul
dec
popf
cmp
or
dec
push
mov
jle
subb
adc
mov
jp
enter
or
ror
dec
add
arpl
stos
movsb
ret
ds
iret
test
sub
push
outsl
nop
mov
sti
push
mov
xor
push
jge
mov
mov
pop
negl
hlt
mov
dec
sub
subb
je,pt
lcall
and
in
in
add
mov
lods
std
mov
pop
or
and
push
and
mov
popf
int3
or
mov
out
xchg
aad
inc
xchg
cmp
shrl
cmpl
add
dec
sbb
add
add
adc
popf
mov
jmp
mov
sub
sbb
jne
adc
xchg
mov
in
fisubrl
sti
rcll
scas
insl
in
jnp
mov
stc
sub
movsl
inc
adc
testb
mov
jecxz
mov
lock
adc
mov
add
and
jp
mov
jmp
inc
es
inc
xchg
aad
mov
mov
or
inc
lret
dec
cmp
xchg
or
dec
mov
push
mov
int
enter
lret
shlb
insb
adc
mov
enter
std
imul
push
fildl
xor
mov
mov
sub
divb
scas
jb
pop
test
addb
adc
and
popa
add
out
sub
jns
sbb
imul
cmp
xor
inc
std
push
out
add
and
or
pop
popa
inc
pushf
cmp
bnd
dec
ret
cs
jecxz
sbb
jo
xchg
arpl
outsl
inc
jp
test
mov
push
mov
xor
pop
add
jo
xor
js,pt
push
sub
pop
xor
stc
sbb
jo
lcall
sbb
inc
mov
leave
add
aam
pop
aam
popf
enter
or
jmp
and
sub
mov
inc
nop
cwtl
add
and
rorb
jl
sbb
cmp
sub
push
mov
fisttpll
push
rcll
cmpsl
pop
pop
mov
in
mov
xor
xor
fbstp
jle
test
mov
insl
aam
sub
mov
dec
pop
mov
enter
mov
push
inc
mov
xlat
mov
push
mov
sbb
cld
testb
or
je
frstor
shrl
bound
push
push
mov
sahf
std
mov
mov
add
xor
imul
jbe
lods
data16
mov
idivb
stc
das
cmp
push
mov
cmc
imul
jb
mov
add
mov
mov
mov
xlat
push
mov
inc
cs
mov
dec
add
cs
sbb
mov
pusha
add
rcll
inc
or
sub
jnp
mov
fildll
sarl
outsl
adc
add
adc
stos
nop
sbb
or
cwtl
mov
pop
and
sbb
push
mov
mov
pushf
mov
movsb
test
aad
push
jle
outsl
popa
jne
lret
mov
lcall
mov
mov
in
mov
cmc
push
sti
sub
mov
cmp
into
mov
jle
cmp
mov
jnp
daa
clc
mov
jg
lods
imul
std
jecxz
jp
icebp
lcall
pop
clc
aaa
fmulp
pop
xor
push
xchg
gs
mov
ds
and
xchg
hlt
int
push
test
jg
mov
push
fisubrs
dec
inc
inc
add
pop
mov
insl
out
lock
iret
pushf
xchg
sub
arpl
xor
out
pop
loope
jns
xchg
mov
lcall
into
je
xchg
adc
and
xor
in
push
and
in
adc
or
add
pop
push
cmp
aam
mov
mov
fsub
jns
xorb
jb
pop
xor
and
add
mov
sbb
mov
addb
or
jmp
sbb
dec
cs
mov
mov
push
push
sbb
push
sbb
inc
aas
stos
enter
push
add
stos
jae
enter
and
test
and
add
cmp
xor
mov
jmp
lods
xlat
bnd
mov
movsb
rorb
or
adc
pusha
bound
outsb
and
xchg
aas
ljmp
push
push
aas
sub
loopw
push
mov
out
dec
sarl
enter
pop
iret
rclb
ja
test
shr
cmpsb
vpcmpeqd
xor
mov
int
lret
das
jecxz
jle
sub
dec
sub
insl
addr16
hlt
arpl
add
inc
jecxz
aas
rcrl
push
ret
and
xor
push
or
out
std
fimuls
fmul
or
stos
cli
mov
ds
and
subb
mov
bound
sub
fwait
dec
pop
xchg
call
stos
xor
dec
cmp
testb
jge
je
cmpsb
outsl
pop
xchg
xchg
stc
lea
incb
dec
and
dec
mov
out
icebp
fbstp
xor
into
xor
into
jae
mov
or
rcrl
sub
inc
sub
or
mov
pop
xlat
pushf
pushl
and
pop
or
outsl
pushf
mov
jo
jne
dec
popa
lcall
inc
jbe
into
orb
sub
idivl
push
sbb
mov
mov
aas
dec
dec
scas
out
xchg
and
sbb
arpl
mov
adc
out
fucomip
push
xlat
adc
xchg
pop
fnstenv
imul
add
pop
faddl
push
pop
mov
data16
dec
sbb
ja
or
add
scas
inc
xchg
sti
mov
imul
pushf
cltd
mov
or
cmp
ret
fistps
sahf
pop
pop
stos
mov
jmp
pop
test
inc
cmp
lds
pop
jecxz
xchg
js
test
cmp
ds
aas
xchg
jge
adc
rol
add
call
in
xchg
cwtl
mov
push
add
push
movsl
lcall
shlb
xorb
sub
pop
push
dec
lock
dec
mov
sbb
shlb
xchg
sbb
wrmsr
adc
data16
lock
push
cmpsl
hlt
ret
es
push
push
cli
sbb
or
push
dec
xor
outsl
movl
jbe
mov
mov
negl
cs
icebp
rcrl
xchg
mov
pop
push
mov
test
fcoml
sub
cmc
xchg
loop
xchg
jno
jbe
inc
loop
es
mov
shll
jle
mov
push
mov
pop
sub
aas
mov
mov
xchg
cld
or
xchg
mov
sub
jmp
cli
add
idivb
inc
sub
fiadds
or
cmpsl
imul
xchg
adc
clc
rcll
daa
nop
pop
fmuls
fdivp
outsb
push
sbb
das
fsubr
lea
das
push
sbb
jge
jnp
dec
xchg
imul
pushf
sahf
mov
cmp
pop
out
xchg
xor
push
jno
mov
pusha
ret
test
pop
aad
sti
aas
xor
add
ret
mov
or
xor
jl
jge
push
xchg
addb
adc
pusha
gs
sbb
sbb
call
or
das
jle
int3
andl
mov
aaa
outsb
cmpsb
jmp
movsb
jb
rorl
pop
je
push
leave
jo
movsb
aaa
insl
dec
imul
cmpl
outsb
fldt
int
mov
idiv
stc
push
and
stc
outsb
nop
xor
cmp
cld
out
pop
add
xchg
xchg
push
sub
sbb
iret
sub
subb
faddp
cmp
dec
xchg
aam
das
xor
pop
pop
outsl
and
mov
jge
pop
fwait
or
mov
mov
jnp
adc
mov
pushf
jne
jb
dec
fs
xchg
pop
mov
jnp
mul
or
jne
inc
mov
popf
popa
jg
fwait
jmp
outsb
lock
pushf
and
std
jecxz
sbb
js
and
jb
xor
xor
std
xchg
jnp
cltd
mov
vmovmskps
es
orl
data16
xor
adc
push
mov
sar
call
jge
mov
fmuls
xchg
xchg
jg
aas
sub
sbb
cmp
out
arpl
mov
cli
dec
mov
cmp
into
arpl
push
inc
jmp
pushf
push
mov
cld
js
out
or
adc
iret
lods
cwtl
xchg
movsl
icebp
cli
jp
mov
rclb
lret
add
jbe
popa
jne
loop
or
or
lcall
aam
ja
mov
fs
clc
mov
out
dec
loop
outsl
add
lcall
jb
and
aam
xlat
ds
out
cwtl
rclb
jle
add
dec
and
add
or
mov
les
sahf
ljmp
jb
mov
adc
loope
xchg
pop
loop
cli
sbb
in
xchg
sub
jle
jecxz
cmp
imull
imul
test
push
inc
cmp
enter
sti
jge
and
xor
mov
call
lds
sti
xchg
jmp
loope
mov
iret
pop
inc
jo
vmovdqa
inc
mov
jo
pop
mov
insb
or
sti
pop
xchg
adcl
popa
rol
push
pop
in
mov
vpcmpgtd
xchg
jle
nop
das
popf
scas
inc
popl
cmp
cmp
add
pop
and
movsl
cmc
imul
push
frstor
cmp
sahf
jns
mov
jg
int
mov
test
je
inc
add
mov
into
mov
add
fwait
mov
xchg
lods
add
adc
arpl
mov
jae
push
add
mov
sbb
adc
pusha
xor
mov
sbb
jno
movsl
pop
es
jp
les
sub
adc
mov
inc
adc
repnz
shlb
aaa
mov
mov
xor
repz
jbe
popa
mov
shl
jb
inc
sub
mov
jl
mov
push
xorb
mov
inc
mov
push
clc
sbb
inc
xchg
sub
imul
repnz
cmp
cli
sub
pop
gs
push
or
and
pop
fsubrl
subl
insl
inc
popa
stos
add
add
cmp
mov
xlat
pusha
pop
push
int3
sub
mov
aaa
xor
push
rcl
cmpb
mov
addb
pop
stos
jl
mov
pushf
lods
mov
roll
cmp
mov
popa
dec
mov
test
decl
lcall
jnp
push
out
lock
mov
sbb
xor
in
inc
call
daa
repz
adc
lret
rcrl
les
or
dec
inc
insl
jno
bound
fidivrs
cmp
inc
sbb
cmp
fidivs
dec
sti
jle
es
mov
or
call
pop
push
call
sti
pop
cmp
inc
adc
test
mov
clc
ds
clc
scas
mov
push
pop
pop
shll
insl
lcall
cmp
dec
mov
out
inc
insl
jp
or
loope
sub
dec
sub
mov
or
push
lods
jmp
push
push
hlt
inc
xor
cmp
dec
cmp
lods
lret
test
rorl
push
cmp
and
outsb
jb
and
insb
add
bound
stc
sub
inc
lods
test
js
in
inc
lahf
aas
stos
mov
es
fcmovb
mov
ja
addr16
pop
pusha
hlt
out
nop
dec
pop
das
je
xchg
ror
sub
mov
repz
iret
push
out
outsl
ffreep
je
pop
pop
mov
xor
inc
push
adc
add
lock
push
mov
xchg
and
cmp
imulb
jae
lods
dec
lea
adcl
cmpsb
and
mov
inc
std
xor
ds
stc
rorl
inc
sahf
mov
mov
adc
ja
or
pop
call
add
pop
ror
aad
cmp
stos
push
add
aam
add
iret
push
call
scas
dec
cmp
add
dec
xchg
aad
and
cmp
out
mov
mov
xchg
test
repnz
cmp
lea
cli
mov
js
aad
shrl
fnstenv
cmp
and
stos
sub
xchg
fs
cmp
pop
ljmp
insb
mov
insb
jno
dec
mov
xlat
push
mov
pop
stc
ja
scas
mov
out
jmp
adc
arpl
xor
add
cmpsb
cli
ret
push
inc
mov
mov
xchg
mov
jge
adc
lea
call
inc
into
sub
mull
sub
fnstsw
int
in
mov
in
gs
mov
pop
and
and
jmp
mov
hlt
jp
movsb
into
cmpsl
sub
sub
push
call
xchg
xchg
mov
movsb
fwait
xchg
sub
pushf
sbb
fwait
data16
test
mov
es
xorl
lcall
pop
push
out
ljmp
repz
xor
or
orb
sub
xchg
sarb
movsb
jl
add
out
cwtl
inc
xor
rorb
jecxz
arpl
scas
mov
and
push
dec
mov
adc
push
sarb
jbe
mov
scas
sub
push
mov
das
mov
addb
rsqrtps
push
adc
jecxz
dec
outsb
pop
push
sarb
repnz
subl
xlat
pop
mov
shrl
adc
jmp
inc
mov
loop
ret
outsb
inc
lea
push
ret
or
popf
in
aam
jl
dec
xor
lock
mov
xchg
pop
xchg
add
dec
cmp
fstpl
adc
andb
mov
xor
inc
ds
pop
push
inc
jecxz
cli
dec
fstpt
mov
sarb
rcl
in
test
inc
push
sti
fs
rorl
lret
aaa
dec
loope
sbb
pop
mov
lret
sbb
or
notb
mov
aad
stos
sub
dec
or
mov
cmp
add
pcmpgtw
xchg
stc
mov
ret
in
dec
mov
xor
pop
data16
mov
xor
pop
jae
arpl
jmp
scas
push
xor
pop
pop
cmp
push
dec
mov
movsb
jmp
loopne
lods
and
ret
sbb
adc
jne
push
out
cmpsb
test
mov
pop
or
popa
gs
insb
and
scas
aas
cwtl
and
push
leave
lds
in
jg
ljmp
pop
dec
cmp
push
lret
int3
sbb
sub
inc
sub
test
stos
arpl
and
fisubrs
inc
dec
add
fsubrs
pushl
and
jg
nop
or
xor
push
dec
xor
lods
ficoms
and
rcr
inc
aaa
jnp
xlat
pop
jl
call
outsl
mov
repz
stc
push
add
sub
jmp
insb
mov
mov
sar
mov
jmp
sarb
mov
inc
in
mov
shrb
inc
jg
shrb
nop
ja
pop
inc
cmc
lea
mov
and
int
push
sub
jge
xchg
out
xchg
iret
clc
test
lock
inc
fidivl
jmp
dec
outsl
and
dec
push
jmp
test
inc
sub
and
cwtl
test
fimuls
pop
dec
ds
or
push
mull
adc
in
sub
jns
jecxz
mov
lret
mov
sub
cmp
popf
push
es
mov
pop
testb
pop
sarb
fdivl
sub
subl
loop
ret
mov
fidivs
or
xor
mov
mov
sub
xchg
inc
add
cmc
jp
push
mov
mov
fistpll
add
adc
dec
inc
movsl
sub
jns
shll
movsl
les
mov
aaa
jmp
xor
jg
aad
sub
and
xchg
subl
test
lods
push
or
adc
sub
ds
out
dec
stos
jl
sti
test
lds
mov
jp
pop
fdivr
stc
jns
pushf
push
scas
push
push
hlt
lcall
pop
push
mov
mov
ficomps
ds
or
stos
mov
fisttpl
pop
push
push
call
lahf
orl
mov
adc
mov
xchg
aad
pop
cmpl
jo
dec
mov
fsubr
xchg
sarb
sti
cwtl
rcrl
or
cmp
or
test
and
ret
mov
repnz
lahf
dec
mov
movsb
inc
add
push
sbb
jo
xor
rcll
stos
aas
push
cmc
adc
pop
jb
jge
sub
xchg
and
push
pop
loop
add
mov
jo
call
fildl
pop
stos
stos
repnz
mov
or
int3
cmp
nopl
mov
rdpmc
imul
imul
rcrb
divl
and
rolb
adc
push
imull
mov
movsb
popf
adc
iret
cmp
cltd
push
stc
sub
mov
test
outsl
cmp
inc
icebp
js
cld
mov
pop
sbb
mov
sbbb
mov
lahf
jp
shrb
sub
mov
loop
outsl
xor
addr16
inc
ja
or
mov
test
clc
fdivr
inc
lods
jae
xor
dec
out
hlt
adc
lret
sub
sub
mov
mov
mov
dec
sub
test
sub
repnz
movsl
xchg
jmp
push
push
insl
inc
jge
inc
mov
mov
xchg
mov
xchg
dec
cmp
push
or
gs
sbb
iret
jl
pop
mov
mov
dec
aas
loope
mov
jbe
loope
fs
sti
mov
inc
outsb
das
clc
mov
in
ds
sub
pushf
xor
out
sbb
jmp
ret
aam
int
sub
pop
mov
scas
fcomps
dec
jmp
pop
mov
mov
stc
sub
sub
dec
mov
arpl
stc
stc
mov
gs
pop
and
and
enter
dec
pop
mov
sub
fnsave
sti
pop
xor
mov
cmpsl
or
and
lret
test
in
rcl
sbb
lds
hlt
xchg
xchg
dec
adc
jmp
imul
xchg
pop
sbb
lock
xchg
jno
xor
gs
mov
xchg
orl
ror
push
inc
adc
incb
aam
inc
aad
adc
out
add
icebp
jae
inc
pushf
inc
push
dec
shlb
sub
sub
stc
stc
ljmp
roll
xor
mov
idiv
jl
cmp
jge
or
cmp
ljmp
cmp
or
jnp
sub
cmp
lods
xlat
mov
clc
call
std
into
leave
or
bound
fnstcw
pop
dec
jbe
or
pop
movsl
cmp
push
test
fwait
jle
mov
in
mov
cmc
sbbl
mov
lea
push
into
aas
lods
mov
pop
sarl
loop
pop
fsubl
andl
push
je
push
sbb
leave
jno
outsb
xor
in
sub
dec
and
mov
mov
add
lods
inc
jmp
jo
cmp
jge
or
mov
lret
and
inc
inc
fwait
lods
dec
jno
lods
clc
lds
mov
mov
bound
sub
xchg
insl
inc
and
nop
dec
push
and
jge
rol
call
adc
mov
adc
das
add
sub
push
xchg
jnp
insb
je
lahf
xchg
lds
stc
fsubp
mov
cmp
jbe
mov
xchg
std
mov
shl
push
sbb
xor
cmc
lret
cli
mov
rsqrtps
lahf
cmpsb
mov
lods
dec
inc
cmp
mov
mov
into
cli
cmp
jg
fwait
psubsw
mov
jmp
loopne
mov
jbe
lea
pop
jmp
pop
rorl
push
adc
mov
bound
and
jns
shrb
pop
or
lret
faddl
xor
mov
jecxz
mov
out
mov
bound
enter
adc
dec
push
jp
or
jl
or
mov
cltd
jle
or
sarb
or
add
lcall
jbe
iret
scas
sbb
leave
mul
add
gs
jne
cmpsl
lods
mov
stos
inc
xchg
jp
popf
pushf
mov
shlb
add
ljmp
sub
movl
mov
cmp
daa
cwtl
popf
sub
movsl
cwtl
adc
adc
push
inc
pop
cmp
pop
aaa
jl
icebp
jnp
movsl
inc
faddl
push
aad
cmc
sub
sub
or
insl
mov
lahf
stos
idivb
imul
jae
jmp
outsb
out
mov
inc
jb
in
loop
fcmovbe
inc
adc
stos
xor
ror
push
loope
inc
adc
fldenv
addr16
sbb
clc
cmp
in
pop
daa
xchg
sbb
psrlw
andl
jns
inc
call
mov
pop
inc
xchg
jb
mov
mov
fsubrl
adc
ljmp
call
sbb
adc
gs
lret
cmp
lock
push
mov
sub
add
imul
dec
pushf
mov
jl
mov
test
add
shll
fwait
push
xchg
or
mov
add
xor
xor
nop
scas
pop
pop
jle
aaa
cmp
mov
pop
ljmp
dec
enter
stos
in
sbb
int3
icebp
shl
jno
addb
js
cmp
xchg
lods
loop
fldcw
mov
cld
repz
dec
mov
mov
rorb
dec
js
icebp
pop
les
sbb
rorb
cs
imul
clc
std
xor
jnp
mov
test
mov
or
jbe
scas
nop
cmp
pop
sub
mov
clc
inc
add
cmp
mov
or
inc
push
dec
fdivl
jecxz
stos
and
test
push
pop
add
xchg
enter
nop
jge
add
mov
fs
mov
xor
mov
mov
sahf
add
pop
sahf
stos
add
iret
inc
xchg
movsl
xchg
xchg
mov
out
and
jae
sbb
dec
ljmp
mov
lods
mov
and
and
sbb
lock
mov
lret
mov
pop
leave
jno
mov
dec
out
inc
xor
add
nop
mov
jne
adc
and
sarl
dec
test
adc
mov
mov
inc
data16
icebp
push
adc
rolb
out
rdpmc
iret
add
push
rcll
negb
push
add
dec
inc
imul
fdivl
andb
xchg
push
xor
aam
xor
mov
cmp
or
std
imul
sub
cmpsl
or
dec
dec
imul
cmp
jmp
jbe
jmp
lock
in
jp
push
pushf
push
or
cld
mov
pop
scas
fstpl
mov
loopne
xchg
shlb
fildl
int3
pop
pop
dec
mov
and
outsb
sbb
sub
xor
inc
push
ss
adcb
rorl
or
mov
jecxz
roll
in
out
add
jge
pop
ret
sub
popf
xchg
push
cltd
push
adc
out
xor
adc
xchg
adc
sbb
xchg
cmp
pop
sbb
push
lods
pop
test
scas
or
imul
into
into
sub
sub
mov
shl
mov
and
push
cmp
jne
sbb
inc
jl
enter
fcoml
mov
out
mov
cltd
cld
insb
bswap
das
and
jle
in
or
push
clc
sbb
mov
pusha
push
jae
mov
xchg
sub
pop
adc
ljmp
dec
out
pop
ljmp
dec
divb
inc
cmp
stos
pop
loopne
repz
cmp
pop
xor
or
cmpsl
dec
mov
rcr
sbb
push
jne
sub
cmp
aas
adc
sub
adc
push
in
sub
push
mov
ret
xchg
das
shll
lret
call
mov
lods
orl
mov
popa
jae
je
popl
loope
mov
pop
in
mov
mov
xor
pop
push
imul
aad
jmp
outsb
out
push
sub
sbb
jno
sarb
or
push
xchg
cmp
shrb
fwait
fcom
add
pop
pop
jae
sbb
lock
fwait
ret
jnp
cwtl
dec
call
sub
ljmp
outsb
lret
or
out
pop
lods
inc
and
shl
ret
mov
into
adc
sbb
pop
out
lret
dec
adc
jg
loopne
mov
lds
cmpsl
add
notl
inc
jmp
xchg
fldcw
pop
xchg
push
jmp
imul
sub
stos
sbb
insl
cld
hlt
scas
adcl
call
in
testl
sub
adc
and
popf
pop
in
fs
cmp
dec
adc
cmp
out
ja
dec
aaa
lds
dec
enter
sub
loopne
stos
mov
cmp
cmp
mov
int
shl
scas
sbb
in
sbb
or
jle
cmp
mov
sahf
ss
fdivl
pop
mov
aad
ljmp
cmp
inc
movsl
cmp
sub
faddl
push
sub
inc
fs
sbb
xchg
cmpsb
mov
addr16
fs
add
push
gs
adc
loope
gs
out
movsl
out
iret
stos
mov
mov
jmp
mov
aaa
add
push
dec
mov
aas
xlat
xchg
cmp
arpl
cli
mov
lods
arpl
xchg
daa
lahf
rolb
dec
adc
mov
or
enter
dec
sub
or
adc
ret
lock
repnz
ss
sti
enter
pop
out
enter
aaa
int3
and
pop
mov
mov
cmc
sub
das
in
test
mov
leave
mov
mov
adc
mov
pop
or
rolb
scas
push
stos
ss
ret
ds
cmp
jns
xor
loope
enter
lret
mov
movsb
popf
rol
les
lret
push
mov
adc
mov
sub
and
mov
lret
addr16
sub
add
ja
movsb
js
stc
xor
and
jno
inc
flds
sbb
jb
or
je
sub
add
insb
and
push
jne
pop
repz
ret
push
stos
jnp
cli
pop
xchg
int
mov
out
mov
das
inc
stc
movsb
mov
mov
xchg
das
es
fcmovnb
arpl
mov
pop
loopne
dec
push
movsl
mov
rorb
cmp
push
in
mov
lret
push
jbe
rorb
sbb
std
imul
nop
jb
shl
stos
adc
in
jnp
aam
sub
sbb
outsl
jno
insb
sub
test
adc
and
repnz
mov
mov
lcall
dec
sub
popf
imul
not
outsl
lea
lcall
push
loope
sbb
adc
xor
cmp
sbb
enter
jmp
xor
sbb
inc
mov
dec
xchg
jl
inc
mov
adc
add
test
in
xchg
dec
rcrl
cmp
fstl
sbb
imul
idivl
sub
and
movsb
rorb
xchg
stc
or
mov
jo
lahf
movsb
xchg
adc
out
inc
add
mov
mov
inc
outsl
ficompl
mov
out
repz
or
xchg
inc
mov
cmp
sub
mov
insl
jl
cmpsb
jg
int
repnz
push
popa
cltd
dec
shlb
push
and
jecxz
push
pop
mov
int
push
addr16
pop
xchg
lahf
mov
shlb
jne
xchg
jnp
xchg
out
fcoml
jecxz
out
sbb
test
inc
xchg
bound
and
hlt
lods
add
mov
and
inc
jno
mov
mov
arpl
sub
lahf
addl
out
cmc
xchg
cmpsb
jb
in
sarb
sub
popf
or
loopne
mov
sbb
out
pop
or
popa
cmp
mov
mov
sbb
pop
pushf
mov
jne
lds
notl
push
sub
aaa
outsl
mov
mov
add
dec
adc
or
lds
pushf
push
int3
adc
jno
jnp
shlb
mov
icebp
and
movsb
mov
or
sbb
sti
fisubrl
fcompl
sti
out
mov
mov
insb
adc
or
movsb
bound
xchg
insl
push
js
mov
cmp
test
push
pop
dec
out
inc
cmp
xchg
bound
add
inc
std
fdivrl
inc
add
jbe
lcall
xchg
andb
mov
xor
pop
mov
rorl
fs
pop
mov
testb
dec
mov
stc
icebp
mov
pavgb
or
inc
or
cwtl
mov
or
push
enter
pop
loopne
or
sbbb
insb
cmp
fcoml
pop
fbld
xchg
loopne
daa
out
sbb
xorb
out
sbb
push
adc
subl
jecxz
push
nop
jmp
mov
jge
sarl
insl
iret
movsl
cmp
lods
mov
cmpsb
mov
add
pushf
in
dec
sbb
xchg
out
sbb
dec
pushf
push
push
xor
mov
adc
sbb
cld
aad
loope
sti
mov
sub
fs
sub
lods
in
sbbb
pop
call
cmpl
or
pop
dec
movsb
decb
ret
gs
lcall
mov
dec
outsb
mov
xor
cmp
inc
inc
inc
mov
jp
pusha
rorl
xchg
sti
add
ds
xor
mov
dec
sub
pop
mov
into
mov
popf
pop
mov
pushf
cmpsb
jno
scas
js
mov
add
cmp
push
inc
xlat
es
pop
xlat
add
sarb
popf
jp
jne
test
mov
scas
cmp
or
push
mov
xlat
in
mov
adc
adc
fsubl
aad
sub
dec
scas
and
xchg
lret
mov
xchg
orl
pushl
out
mov
rcrl
cmpsb
lock
mov
mov
pop
clc
pop
lods
inc
out
mov
insl
test
cmp
cwtl
push
cli
pop
mov
stos
stos
lret
movsb
jne
push
dec
iret
arpl
dec
repz
xchg
dec
jg
cmpsb
insl
mov
lea
pop
lret
andnps
pushf
out
jmp
xor
repz
loope
stc
push
cmp
lret
adcl
xchg
stos
divb
fadds
out
sahf
cli
or
scas
icebp
pop
int3
pop
and
lods
mov
inc
jle
inc
and
idivb
in
iret
jnp
jl
int
mov
jne
out
ja
xor
out
and
jb
test
pop
mov
lcall
pushf
cmpsl
add
jb
or
and
push
adc
dec
and
call
cmpsl
mov
xor
mov
lret
sbb
test
sbb
scas
nop
ror
ret
jno
std
sub
aad
stos
ret
imul
popa
fdiv
loope
mov
pop
jge
pop
test
lds
fwait
sti
gs
xor
stos
jno
int3
mov
das
mov
jo
cs
cmp
test
movsb
daa
and
call
bound
in
cmp
xchg
in
ds
push
fbstp
lea
cmpsb
outsb
cmc
icebp
pop
test
pop
scas
call
arpl
mov
and
cmp
or
sti
addr16
and
and
add
xchg
pop
adc
xlat
sbb
sub
rcr
aam
lret
mov
cmc
fs
push
inc
jb
mov
push
mov
pushf
mov
adc
into
cwtl
ret
push
mov
adc
shll
cmc
test
mov
in
jb
pop
xor
pop
loop
xchg
ret
sti
ds
pusha
dec
sarl
mov
outsl
mov
mov
jno
pop
adc
xchg
sbbb
lcall
lods
mov
std
shll
rorl
jp
pmulhuw
cltd
mov
clc
jl
xchg
inc
mov
scas
aas
sbb
mov
cmpsl
or
cmp
icebp
rolb
scas
jmp
std
add
rdmsr
push
inc
aam
adc
imul
stos
and
enter
aam
outsb
iret
shrb
dec
mov
incb
pop
addr16
cmp
rdtsc
sbb
pop
dec
lcall
cli
js
cmc
sahf
daa
pop
push
cmp
pop
insl
testb
repnz
aaa
fisubrs
xlat
jbe
pop
add
cwtl
insb
rorl
test
rol
and
pop
mov
inc
rorb
push
mov
leave
dec
in
adc
repz
cmp
popa
arpl
test
scas
popa
stos
push
ljmp
push
ss
outsl
nop
add
inc
lock
fwait
xchg
jl
hlt
in
pop
and
inc
jge
sbb
out
xor
test
or
sbb
push
jle
jecxz
mov
cmp
xchg
mov
xchg
ss
aas
call
loope
and
adc
lea
pusha
sub
rclb
lds
lahf
adc
lret
mov
rcrb
rcrl
clc
pusha
maxps
mov
xchg
xchg
subb
enter
aam
fnsave
inc
aad
mov
jo
fstl
mov
in
int3
jp
mov
stos
mov
scas
mov
iret
in
jnp
inc
cmpsb
fisttpll
mov
sub
bound
lret
call
jle
cmpsl
push
push
adc
push
cmp
insb
mov
inc
scas
into
out
lahf
add
push
imul
leave
out
xor
sbb
mov
outsl
lds
das
jae
xchg
adc
test
cli
or
adc
sti
fbstp
ss
or
lods
sar
leave
push
and
mov
fildll
xor
mov
xor
inc
imul
adc
sbb
pop
push
mov
xor
mov
inc
adc
addr16
shlb
or
adc
push
mov
stos
mov
pop
mov
or
test
cmp
or
addr16
xchg
fildl
popf
jecxz
push
fistpll
dec
mov
nop
ds
inc
mov
shr
push
shlb
pop
push
ret
pop
mov
out
ret
sbbl
addb
sbb
les
imul
sbb
std
gs
fcomps
in
mov
out
mov
js
xorb
push
mov
dec
mov
adc
je
xor
dec
daa
add
into
cli
outsb
dec
lret
clc
hlt
cli
scas
popa
xor
in
iret
dec
not
push
sbb
pop
sub
add
lods
xchg
cmp
test
scas
mov
lods
aaa
fsub
popa
pushf
mov
xchg
cmp
mov
xor
mov
mov
dec
cwtl
lea
push
test
nop
pop
loop
lret
add
mov
pop
dec
mov
popf
in
fistl
or
lcall
stos
pop
sbb
cltd
test
push
stc
stos
and
aaa
jle
mov
loopne
cmp
and
lret
and
inc
addr16
sub
out
js
imul
add
mov
cmpsl
dec
arpl
add
dec
xor
adc
xchg
xchg
jg
call
mov
and
test
add
mov
mov
xor
shll
jg
mov
cmpsb
push
mov
adc
arpl
fldenv
orb
xchg
xchg
mov
lds
xor
mov
sarb
pop
cmp
subl
xlat
mov
mov
test
or
in
pusha
fbld
adc
int
lret
add
pusha
mov
xchg
out
adc
and
or
lods
cmove
jecxz
sbb
repz
inc
push
lods
lea
fldt
cmp
sub
lock
lock
mov
and
lds
fcompl
cmp
add
aas
push
incl
faddp
dec
cltd
loopne
addb
lret
loope
movsb
push
rol
xor
pop
fildll
aam
sbb
bound
call
cmp
not
sbb
clc
je
idivl
push
jnp
out
mov
adc
xor
xor
movsl
push
inc
pop
or
mov
sbb
sbb
fists
mov
or
push
cmpsb
push
test
mov
rcl
mov
xchg
jns
cmp
pushf
lods
pop
lods
mov
pop
push
ret
cli
xchg
mov
popl
xor
jb
adc
pop
rolb
mov
and
fld
push
sub
js
clc
add
jne
xorl
in
movsl
pop
movsb
xlat
pop
sbb
or
add
scas
xor
dec
repnz
xor
xchg
and
mov
add
push
push
fstps
arpl
in
inc
in
das
ficomps
in
gs
test
jecxz
sub
mov
loop
ret
into
mov
sbb
pop
xchg
dec
pushf
loopne
cmp
dec
cmc
testb
jae
jge
out
rcrb
adc
pop
ret
pop
test
inc
cmp
sbb
fcomip
adc
inc
push
scas
out
mov
pop
fucom
mov
mov
lods
les
cmp
pop
movsb
shlb
aam
loope
adc
sub
imul
mov
test
add
loope
mov
lret
pusha
jl
hlt
cmc
repnz
fisubs
pusha
cwtl
lret
inc
into
mov
lret
pop
or
insb
scas
mov
cld
sarb
cmc
decl
push
sub
and
sbb
pop
xlat
pop
xchg
adc
ret
mov
call
and
jp
je
cmp
test
mov
mov
hlt
jmp
cmpsl
out
testl
cmp
sarb
xor
in
aam
enter
pop
in
sbbl
in
pop
mov
push
in
jge
ljmp
adc
sub
mov
jbe
shrl
ret
xchg
es
jb
xchg
jge
into
outsb
lahf
xchg
mov
out
clc
lods
or
push
call
pop
aad
ja
xor
fdivl
pop
out
lcall
enter
out
push
or
and
mov
adc
mov
cltd
push
xrelease
sub
adc
adc
adc
scas
imul
push
or
pop
aam
inc
lds
stos
adc
lcall
jecxz
arpl
dec
pop
jg
cmp
dec
push
or
pop
jbe
fwait
xchg
cld
das
and
pop
jbe
stc
push
jb
adc
xchg
imul
shll
je
icebp
sbb
jp
test
cmp
jp
shrl
mov
aas
outsl
jbe
mov
or
scas
mov
cmpb
add
mov
fdivrs
lcall
pop
das
jno
cmp
push
stc
clc
pop
add
add
or
mov
and
je
push
ret
lahf
cmpl
xchg
sahf
test
shll
ja
in
mov
lcall
lahf
subl
cli
fs
es
int
sub
mov
dec
push
mov
lret
push
xor
rcr
sub
pop
inc
jle
stos
je
test
cwtl
adc
icebp
inc
xchg
xchg
ja
inc
fidivl
jae
fwait
xchg
fs
and
insl
pushf
and
push
adc
gs
push
sub
dec
aad
pushf
int
es
xor
lret
mov
test
mov
mov
pop
jecxz
mov
loope
mov
in
adcl
inc
pop
and
divb
inc
inc
stc
rorb
jno
dec
jecxz
dec
xchg
pop
add
or
iret
dec
adc
in
mov
adc
sbb
leave
rorb
int3
lods
sbb
pop
cli
ss
mov
leave
pop
shrb
dec
cmp
xlat
les
insl
cld
lcall
push
add
aaa
add
fstl
add
fstl
xchg
xor
mov
rol
clc
jl
das
std
bound
cmp
outsl
rcrb
packsswb
test
addr16
mov
sub
shll
mov
cmp
jae
mov
cwtl
sub
xor
jge
enter
das
aas
push
pop
inc
gs
test
jmp
add
or
dec
mov
mov
popf
dec
xlat
xchg
push
les
push
pop
gs
sub
jmp
mov
inc
lcall
adc
cmp
arpl
push
jo
sub
inc
jge
or
fisttpl
mov
push
lods
pop
dec
push
sub
dec
push
test
out
addr16
mov
cmpb
cwtl
xchg
enter
or
add
or
xlat
sub
mov
inc
addl
ja
addr16
fs
cmp
clc
lods
ljmp
push
scas
sbb
cwtl
xchg
jo
inc
push
nop
movsl
jnp
sahf
sbb
cltd
push
shll
push
icebp
scas
fcmove
jg
mov
push
and
adc
pop
insb
vmovaps
sub
xchg
sbb
ret
das
add
lahf
lods
sahf
test
mov
mov
sub
mov
call
shr
sarl
mov
stos
pop
loopne
xchg
inc
sub
addb
popf
shll
loopne
call
ljmp
push
push
icebp
sbb
adc
aam
ja
xchg
pop
ljmp
cmp
push
pop
ljmp
fs
arpl
repnz
jp
inc
ds
pop
or
stc
fwait
aas
adc
jne
dec
cld
xlat
xor
jl
js
sbbl
outsl
or
js
imul
mul
lcall
sub
push
cltd
dec
aaa
aad
xlat
cmp
cmp
aad
xchg
std
pop
push
and
jge
cmp
push
gs
aam
aas
inc
iret
repnz
add
ss
test
dec
mov
xchg
push
fstp
sub
cltd
push
shlb
adc
in
push
aaa
xchg
add
lahf
adc
cmp
fsts
push
push
mov
loopne
xchg
jg
jo
movsl
mov
lret
jge
sbbb
ficompl
shll
jmp
xchg
inc
inc
cmpsl
push
in
ds
mov
xlat
mov
add
shll
insb
fldl
test
jbe
push
bound
jnp
or
shll
sbb
cmp
stos
adc
inc
cmpsl
test
ljmp
jp
ret
mov
cmpl
lret
adc
jae
pop
add
movsb
mov
add
add
pop
xor
and
sub
jnp
mov
sub
sbb
out
cmp
or
movsb
push
icebp
ds
into
jecxz
mov
mov
mov
lods
sbb
push
push
js
dec
or
rol
adc
outsl
sti
and
imul
insb
jmp
jmp
dec
jecxz
fwait
adc
out
add
dec
dec
mov
xlat
aam
int
pop
adc
sbb
mov
imul
insb
out
cmp
cmpsl
xchg
rcl
es
jb
test
in
jnp
mov
test
test
fidivrl
push
mov
xor
gs
mov
mov
xchg
mov
mov
xlat
push
push
aad
cmp
rclb
popa
inc
repnz
mov
jns
sbb
pop
ret
cli
aad
mov
pop
test
dec
adc
mov
aad
pop
jb
ss
daa
pop
out
jp
stc
jecxz
lock
lret
ja
loop
dec
out
out
in
mov
jo
enter
cli
sbb
adc
lds
xchg
cli
addb
punpckhwd
mov
xchg
movsl
insl
fwait
sub
adc
movsb
jl
clc
inc
mov
std
fistpl
lea
add
push
cmpsb
imul
mov
ljmp
lcall
or
sub
cmp
dec
movsb
movsl
mov
xor
or
dec
enter
add
or
rorb
out
or
cmpb
dec
loopne
fsubrs
loope
pushf
scas
or
repz
xchg
jmp
orl
add
pop
fwait
and
pop
sub
vmovaps
enter
or
mov
cli
mov
hlt
aas
inc
sarb
jo
mov
arpl
xor
movsb
cwtl
cltd
xlat
jo
pop
jne
mov
xor
int3
inc
clc
mov
jne
lds
ja
xor
xchg
adc
fs
push
add
ds
adc
sub
loopne
add
xchg
idivl
lock
inc
mov
adc
nop
mov
les
cs
add
sbb
dec
inc
out
scas
ljmp
movsl
push
shll
test
pop
ret
sub
sub
push
pop
mov
xor
jmp
xchg
xlat
jo
ljmp
mov
cmp
jns
ja
cmp
add
push
dec
mov
ja
mov
lcall
popf
sar
adc
pop
sub
aad
lahf
inc
dec
in
mov
iret
out
lds
pop
jecxz
mov
ds
xor
sahf
out
cwtl
mov
arpl
movb
jecxz
and
test
mov
scas
out
repz
test
inc
xchg
pushf
lods
popf
nop
cli
sub
jecxz
ja
push
fbld
push
mov
cmpsb
dec
pop
add
fimuls
jp
push
xchg
lret
sbb
or
ret
ret
add
dec
fmulp
in
in
arpl
mov
adc
in
call
movsb
cli
sahf
xor
jo
call
or
push
sub
xchg
stos
aaa
stos
or
lret
fsts
dec
bnd
aaa
fwait
mov
and
sbb
out
negl
fiadds
jae
loope
jno
xchg
rcl
mov
test
xchg
mov
addr16
mov
jge
sahf
inc
popf
jnp
imul
mov
cmpsb
xor
fs
sbb
ret
mov
lea
cmp
sub
cmp
push
and
insb
jecxz
dec
pop
add
pop
jmp
mov
dec
inc
popf
add
es
outsb
out
xor
out
dec
xchg
movsl
pop
aam
mov
dec
jae
into
push
fists
popf
iret
cwtl
shlb
sbb
xchg
adc
test
push
cmp
xchg
add
popf
or
sub
add
popa
int
push
pop
push
mov
mov
js
mov
test
dec
sbb
ret
inc
das
int3
and
dec
idiv
jns
cwtl
push
imul
insb
pop
into
adcb
or
xchg
cwtl
gs
aad
push
mov
sbb
inc
pushf
dec
stc
mov
mov
js
int3
sub
adc
mov
push
cmc
inc
jg
jle
cltd
test
bound
xchg
arpl
sbb
adc
pop
xchg
shr
stc
pop
xchg
pop
or
sar
js
mov
adc
xlat
daa
mov
push
lods
dec
mov
cmp
and
nop
jle
cmpsb
inc
scas
cmp
inc
ds
jne
stos
or
insb
mov
pop
or
enter
mov
testb
scas
add
adc
mov
enter
loope
xchg
mov
sub
jle
inc
and
dec
inc
jns
lea
inc
push
inc
push
inc
xchg
sbb
adc
mov
subb
sub
out
or
cld
mov
cltd
jae
pop
pop
cmp
adc
and
imul
stos
or
aam
lret
xchg
xchg
aaa
les
jns
jno
push
and
jae
pop
fs
mov
insl
adc
jmp
fstpt
mov
cmpsb
ds
jl
fwait
xchg
cmpb
inc
sbb
test
pushf
rolb
int3
aad
mov
es
sbb
test
push
in
push
sub
cmpsl
popf
push
sub
dec
adc
sbb
lods
rcll
cmp
ds
mov
xor
xchg
testl
arpl
push
pop
fstpt
insb
aas
lea
pop
jnp
cmp
jmp
and
xchg
aaa
mov
inc
mov
in
outsl
enter
add
repz
popf
push
sti
mov
mov
jmp
out
test
orb
mov
sbb
fisttpl
clc
dec
xchg
test
mov
aaa
outsl
jnp
popf
push
sarb
nop
inc
jmp
sti
push
dec
mov
aad
je
mov
sub
loopne
int3
lds
mov
les
mov
inc
mov
adc
rcrl
imul
scas
out
push
add
lods
cli
jge
fsubp
ja
push
rcrl
cli
push
adc
ret
adcb
fisubl
and
xchg
es
jl
cmp
xchg
fsubrs
jmp
adc
jg
jne
xchg
inc
fmull
fs
sub
lock
sbb
cmp
ret
je
cwtl
lret
mov
bound
test
sbb
xchg
xchg
sti
mov
xchg
mov
pop
testb
cmc
jo,pn
std
push
dec
test
xor
xlat
insl
loope
pusha
push
pop
in
insb
cltd
out
nop
ret
xor
jmp
leave
test
orb
mov
imul
fisubs
popf
push
sub
in
xor
mov
xchg
das
inc
outsl
push
mov
or
jmp
icebp
pop
mov
sub
pop
mov
add
xlat
cmpb
cmp
loopne
leave
dec
into
jno
mov
loopne
dec
xor
popf
fnstenv
rcr
push
mov
out
mov
push
mov
dec
mov
stos
mov
inc
xchg
or
cmpsb
fucomi
jbe
fwait
aam
sbb
clc
aas
push
cld
cmpsb
xchg
dec
mov
aam
pop
inc
push
ja
xor
cltd
xor
gs
push
sub
sbb
lds
cmc
jbe
aas
test
push
adcb
cmp
mov
mov
std
push
call
addr16
and
inc
clc
lret
rol
popf
mov
lea
das
cltd
or
sbb
or
fstpl
out
sti
loopne
lea
sti
xchg
sbb
outsl
adc
mov
jbe
pop
stos
pop
addr16
notl
in
cwtl
sbb
fistpl
sub
sbb
adc
inc
out
xor
shlb
cmp
sbb
inc
icebp
popa
dec
sti
notb
shlb
fiaddl
cli
add
lods
sub
adc
sbb
leave
adc
xchg
cmpsb
gs
int
dec
xchg
xor
mov
mov
jp
out
fwait
sub
stos
jbe
cmpl
push
mov
lcall
cmp
mov
and
inc
cmp
pop
jne
inc
push
or
xlat
or
ja
adc
inc
es
test
das
sub
out
in
mov
mov
shr
fwait
movl
pop
subb
add
ja
inc
adc
stc
xor
adc
cmp
push
ret
adc
adc
dec
push
or
mov
mov
rclb
mov
adc
inc
popa
enter
and
xchg
es
imul
adc
cmc
inc
out
hlt
add
out
es
hlt
sbb
daa
leave
clc
jo
fstpt
adc
cmp
adcb
dec
test
ljmp
jp
arpl
ljmp
repnz
pusha
fldcw
cmp
into
movsl
pop
cmp
lret
int3
cmp
cwtl
push
loopne
jb
outsl
and
lret
in
sbb
into
xchg
mov
test
cmp
xor
dec
out
inc
repz
lret
push
lcall
daa
inc
mov
es
push
xlat
or
mov
in
ljmp
fs
ret
imul
cmc
jmp
out
dec
mov
mov
jne
cmp
rclb
sub
dec
popa
mov
sbb
lock
adc
aad
pop
dec
jne
xor
mov
ja
lcall
mov
push
xchg
xchg
ret
adc
lods
dec
test
pushf
std
sub
xchg
inc
enter
pop
ljmp
ds
jo
push
and
or
je
cmp
cmp
cs
add
mov
cmpsl
push
mov
mov
loop
push
adc
test
pop
mov
mov
push
sbb
addr16
push
push
jge
cld
mov
fnstsw
sbb
rorb
decb
loopne
sub
mov
dec
cld
adc
std
insb
push
xor
add
mov
jno
cli
jns
in
inc
ss
addb
data16
fisubs
xchg
mov
in
or
inc
lds
mov
sub
mov
adc
sbb
sbb
aad
mov
out
sub
lods
ret
push
fcoml
or
push
pop
popa
fisubrs
je
jns
shl
mov
lods
mov
mov
andl
cli
mov
mov
test
lret
push
lea
lods
lahf
in
inc
loopne
ss
inc
and
repz
insl
pop
fisubrl
mov
lahf
in
es
push
repz
hlt
insl
push
lds
xchg
sbb
pop
mov
or
into
xor
vpcmpgtd
push
sbbb
pop
in
mov
mov
xor
shrl
xor
das
dec
je
lods
mov
mov
lds
mov
adc
dec
push
mov
pop
pop
rorl
clc
dec
shlb
loope
inc
jle
jne
imul
sbb
inc
xrelease
ljmp
pop
mov
loopne
xlat
addr16
sti
pop
mov
cld
jb
mov
xchg
sbb
push
roll
inc
std
gs
fucomp
movsl
outsb
mov
int3
mov
lods
jne
inc
sarl
out
add
mov
in
add
mov
aad
sbb
shrl
pop
into
pop
das
rolb
inc
pop
stc
jnp
jecxz
push
movsb
insb
jmp
jg
dec
data16
jle
in
sub
push
imul
in
imul
push
scas
into
or
mov
bound
sbb
mov
mov
jnp
adc
pop
push
inc
inc
addr16
bnd
jbe
enter
xchg
xchg
jg
add
jl
js
pop
inc
sbb
insb
jmp
scas
jne
xor
mov
pushf
leave
ret
lahf
pop
je
sbb
mov
mov
jno
subb
adc
shll
out
pop
xchg
test
shl
add
jle
jmp
inc
cmp
push
out
aas
mov
std
xor
std
push
out
arpl
inc
gs
lock
push
imul
imul
imul
rcr
pop
and
mov
jno
vmptrld
into
test
cmp
gs
mov
loopne
cmp
sbb
sub
cmp
rcrb
test
jp
icebp
incl
xchg
inc
outsb
repz
int
out
roll
jg
shrl
ja
add
out
in
mov
cmpsb
bound
shlb
xchg
add
jp
add
sbb
imul
cmp
hlt
adc
arpl
adc
adc
sub
jno
aas
pushf
je
lds
sub
lcall
xchg
mov
sbb
xor
scas
sub
pop
mov
popf
sbb
xor
ss
xchg
inc
dec
repnz
mov
clc
aam
aam
adc
lock
or
mov
mov
ret
mov
les
cld
sbb
mov
inc
data16
sbbb
out
inc
adc
aaa
add
lahf
test
sub
in
jle
insb
jns
pop
and
mov
mov
stos
dec
cs
fwait
aas
cmpsb
sbbb
push
xlat
jg
cld
push
test
inc
shll
cmp
jne
sub
fildl
arpl
ljmp
push
mov
jmp
clc
inc
mov
movl
xor
push
mov
push
add
xchg
adc
lods
pop
sub
mov
mov
outsb
lret
cmp
adc
pop
pushf
sahf
xchg
addr16
xchg
and
mov
mov
fsub
rol
push
popf
fidivrs
int3
adc
rcl
popf
loopne
shl
ljmp
sarb
dec
xor
ret
popa
gs
out
cmpsl
ficoml
xlat
add
mov
jecxz
popa
push
call
ljmp
dec
add
aam
or
xchg
into
pop
jno
test
sbb
push
pop
in
cltd
pop
subb
mov
inc
dec
mov
dec
and
in
jnp
and
sbb
leave
ds
lret
adc
dec
adc
movsb
jg
test
jns
pop
mov
mov
incl
xor
shrl
popf
pop
insb
jmp
daa
cmp
xorb
mov
jecxz
xchg
fstpt
call
push
out
lret
add
xor
cmpsb
popl
aam
push
xchg
ja
aad
push
in
lahf
fdivr
adc
shll
or
or
movsw
xchg
dec
insl
fs
inc
test
bound
pop
nop
pop
icebp
iret
inc
cmpl
mov
fisttpll
jne
testl
cmp
add
aam
aas
push
fidivrs
or
xor
vmulsd
incl
nop
inc
aas
sbb
mov
mov
mov
outsb
or
adc
std
mov
ret
inc
pop
mov
push
xor
repz
push
push
test
ja
push
add
cmp
shrl
pop
or
mov
lock
pop
xor
mov
test
insl
jg
sbb
leave
icebp
jo
jge
sbbb
aad
aaa
js
imull
mov
jp
pop
int
and
mov
xor
adc
fimuls
mov
push
mov
inc
fcmovb
aas
dec
pushf
sub
orb
fistps
loope
adc
mov
push
xchg
pop
mov
aaa
jbe
push
xor
mov
or
adcl
cltd
test
out
xchg
and
js
mov
cmpl
cmp
shrb
cmpl
inc
pop
sahf
sbb
insl
cmp
and
je
outsl
mov
lds
daa
push
ja
js
dec
cld
push
push
jecxz
movsl
lds
in
lock
and
add
sub
sub
xchg
xor
loope
lods
insb
lret
cwtl
enter
adc
add
lret
jg
push
hlt
es
mov
loop
out
push
cltd
mov
jb
rcrl
fstpt
inc
mov
sbb
jbe
shlb
push
or
movsl
mov
ss
dec
fidivs
and
xlat
add
jns
or
shr
stos
es
sbb
add
inc
ss
movsl
adc
push
push
dec
push
test
rorb
and
cmp
imul
jne
adc
mov
ljmp
xor
add
xchg
mov
mov
fsubs
cmpsl
aas
mov
jb
scas
sub
mov
cmp
icebp
mov
in
sbb
fwait
adc
adc
lret
mov
pop
or
fisubs
mov
repnz
mov
decb
inc
jae
pop
jle
outsl
mov
sub
call
in
add
nop
adc
repz
push
xor
jae
aad
shl
and
call
xchg
push
mov
xchg
xchg
push
icebp
ret
insl
cld
pop
jns
test
lea
jae
mov
ljmp
orb
pusha
mov
dec
in
mov
rcrb
movsl
incl
mov
mov
out
and
and
les
lea
jge
xor
mov
sbb
mov
mov
cmc
pop
sti
mov
sub
outsb
insb
movsl
add
push
xchg
bound
push
and
cmpsl
aam
sbb
push
lods
sub
aam
mov
adc
jb
jmp
jl
mov
enter
xor
mov
dec
mov
out
sub
xchg
cltd
jge
jne
incl
cmp
fnstcw
stc
and
push
leave
xor
xchg
adc
xchg
sub
xchg
in
sub
sbb
inc
mov
inc
daa
sbb
pop
jo
arpl
mov
xchg
mov
mov
pop
cmp
andl
mov
mov
mov
mov
aam
and
popf
xchg
imull
jecxz
int
test
fldt
mov
dec
js
xchg
push
mov
je
add
loopne
movsb
aad
test
addr16
mov
jb
les
jo
cmc
pop
dec
jne
test
dec
addb
xor
push
jl
jmp
xor
mov
in
cli
cli
icebp
lock
mov
mov
fcoml
dec
sub
lds
call
std
xlat
push
insb
push
lods
bound
lds
rolb
push
hlt
dec
in
scas
pop
cwtl
fistpl
mov
popa
inc
push
lret
jge
pop
inc
out
dec
cltd
outsb
cmpsb
jb
pop
jbe
pop
std
rcll
popl
out
sub
lret
in
push
popf
shrl
dec
int3
daa
fwait
in
sysexit
lret
sub
lods
cmpsl
adc
mov
or
fistl
out
cli
pop
add
mov
jl
push
jns
sub
jle
test
mov
push
mov
insb
stc
mov
scas
xchg
pop
sub
sti
setge
nop
sub
aam
xor
add
push
jbe
xor
cs
push
cmp
iret
mov
mov
cmp
test
xchg
add
pop
sub
scas
xor
xor
sbbl
pop
negb
gs
movsl
jne
mov
jae
in
les
cmpsb
jbe
or
aaa
adc
filds
dec
pop
nop
jmp
popf
ss
xchg
sub
jecxz
lahf
iret
pop
dec
xor
cmp
push
and
inc
stc
repz
mov
cltd
fbstp
shlb
les
in
cld
enter
dec
cmp
jo
movl
push
xor
div
scas
xchg
push
push
mov
xchg
roll
jge
imul
loopne
xor
fwait
shlb
shll
in
pusha
movsl
pop
rcll
cltd
mov
sti
jp
jne
outsb
test
mov
jnp
mov
pop
imull
inc
inc
xchg
lret
jle
mov
dec
jnp
mov
inc
cmpsb
pop
xor
jge
xor
adcl
sub
lods
popf
add
jp
xchg
cmp
xchg
fprem1
inc
rcr
xchg
mov
sub
clc
cmpsl
add
sarb
stos
test
popl
popa
nop
inc
into
not
popa
in
mov
aas
fisubl
jmp
sbb
and
push
pop
pop
divb
mulb
shr
rcll
fmull
shll
dec
mov
add
imull
imul
fwait
jl
sarb
shll
shlb
jb
insb
les
fs
mov
scas
pop
hlt
mov
shll
arpl
aas
lds
adc
repnz
xor
add
test
adc
out
sti
test
or
mov
das
pop
popf
and
xchg
sub
lcall
in
xchg
push
dec
sbb
pushf
insb
nop
ret
inc
and
lds
loope
loop
es
fidivrs
dec
ss
adc
mov
lods
orl
rcrb
dec
sahf
sbb
mov
mov
outsl
into
push
mov
movsl
setb
pop
inc
out
repnz
push
inc
cmp
std
jb
cltd
sub
xchg
paddb
fs
clc
sbb
sub
pushf
mov
push
dec
sar
fists
int3
and
mov
je
fnstenv
or
inc
ja
mov
cmpsl
inc
jecxz
mov
sbb
cmp
hlt
loopne
xchg
dec
loop
testl
shrl
pop
cmp
dec
pop
sbb
pop
in
bound
addr16
pusha
test
or
test
in
sahf
xchg
sarb
pop
call
das
out
stos
ret
out
subb
fmuls
sar
clc
adc
out
ss
lods
adc
dec
cmpl
in
ljmp
cmp
xorb
push
ficomps
sbb
push
movsl
js
or
xchg
push
jns
and
mov
sbb
mov
psllq
push
push
rcrb
arpl
int
test
add
jl
rcll
jbe
cwtl
cli
fiaddl
nop
lock
js
mov
inc
jno
xor
sbb
cwtl
pop
pop
mov
dec
sti
sbb
ss
dec
mov
inc
pop
in
and
icebp
inc
mov
outsb
mov
aad
js
xchg
adc
dec
add
das
dec
out
orb
xchg
push
mov
sub
pusha
aam
sbb
je
xchg
fcmovu
jp
dec
mov
xor
push
add
sbb
or
mov
and
or
cmp
loop
ss
ret
sbb
out
loop
fistl
cmp
add
mov
test
xor
pusha
dec
pusha
pop
shll
popa
and
out
sbb
adc
push
mov
aad
jne
cli
outsb
mov
add
sbb
shlb
or
cmp
and
mov
out
xlat
call
adc
sahf
js
or
scas
cmp
fcomps
cmpsb
adc
cld
mov
dec
cmp
cli
push
addl
sub
lods
xchg
in
cmp
stos
mov
fiaddl
mov
or
push
push
or
rcll
repz
cmp
test
pusha
inc
cmp
adc
adc
push
lret
movsb
adc
adc
lock
movsb
jge
push
mov
jmp
mov
cli
shll
pusha
or
sub
inc
cwtl
ljmp
cmpsl
lods
ret
test
mov
sbb
xchg
scas
push
cmp
mov
and
pop
push
popf
cmp
add
fidivl
loopne
jnp
aam
jge
test
cmp
outsb
xor
cmp
jg
loopne
mov
int
xchg
mov
mov
xor
cmp
lret
int
andl
xchg
jae
dec
rol
sbb
mov
fcmovu
into
jge
call
push
mov
or
ficoms
mov
xchg
loope
test
mov
inc
xor
jb
and
popa
pushf
aad
mov
xchg
cmp
xor
or
loopne
mov
stos
cs
ret
out
cmp
dec
mov
xchg
mov
xchg
and
inc
das
dec
mov
fstpl
test
sub
adcl
mov
out
jne
or
testl
inc
or
jns
adcb
dec
iret
test
mov
icebp
cmp
lods
out
jno
sbb
jb
jg
or
fs
dec
in
adc
test
xor
loop
cltd
cmp
idivl
add
repz
imul
insl
pop
cmp
std
mov
dec
or
test
mov
push
and
xchg
jo
ss
test
sub
icebp
mov
cmp
cmp
test
and
scas
cmp
gs
out
cmp
and
fidivrl
or
outsb
aad
outsb
sub
fidivl
and
pushf
repz
lahf
add
sbb
or
das
outsl
mulb
push
or
dec
aad
rep
inc
dec
push
lock
sbb
rcrb
test
in
jb
frstor
dec
aad
jg
or
adc
loop
je
dec
mull
push
sbb
or
stos
and
insb
fiaddl
das
std
push
mov
je
jp
mov
mov
pushf
arpl
inc
sub
dec
adc
sarl
in
call
jle
mov
mov
shrb
dec
jmp
negl
icebp
add
xchg
lock
icebp
outsl
push
js
and
mov
sbb
xor
pop
pop
inc
and
add
sahf
testb
outsl
xchg
outsl
int3
sbb
cwtl
rcll
mov
mov
jl
les
mov
sti
cmp
push
mov
pop
inc
sub
xchg
xor
in
scas
cmp
add
sbb
xor
mov
dec
out
into
mov
xlat
sti
fucomp
inc
dec
wrmsr
out
test
fwait
scas
push
sti
clc
insb
sahf
adc
sbb
add
sub
add
dec
out
mov
lds
xor
fisttpll
push
cmpsl
xor
jnp
lods
in
daa
sahf
and
mov
xlat
mov
cli
mov
jne
bound
and
call
popa
cld
cmp
cs
in
adcb
repz
outsl
ss
jne
add
outsl
mov
mov
aad
call
out
aad
mov
popf
mov
mov
add
insb
outsb
in
mov
mov
adc
cld
xchg
mov
push
dec
addr16
sub
sbbl
mov
insb
aad
lcall
push
and
ret
jmp
lock
data16
mov
dec
mov
cmc
sbb
mov
push
or
cmp
movsl
lret
or
sbb
pop
lret
fdivr
insl
sbb
and
insb
into
xlat
repz
jbe,pn
xchg
pop
xor
cmpsl
push
xor
call
addr16
cs
jmp
jecxz
sub
rorl
jge
fnstenv
fwait
loop
add
sti
leave
bound
mov
mov
outsb
xor
std
or
push
movsl
daa
fstpl
pop
out
xor
clc
mov
loope
and
jecxz
mov
or
movsb
nop
sub
mov
into
xchg
adc
or
loopne
or
inc
push
dec
xchg
mov
xlat
xor
jae
mov
out
ss
lret
pop
cmpsl
pusha
js
push
pop
xchg
repz
xor
divl
cmp
out
cmpsl
lahf
cmp
cmp
in
inc
repz
cmp
adc
test
sbb
addr16
ror
and
les
cwtl
mov
fisttps
cmp
call
neg
jecxz
arpl
adc
mov
push
cmp
ja
push
out
mov
mov
cmp
inc
es
ja
mov
leave
dec
pop
dec
loop
sub
sbb
dec
inc
movsl
jbe
mov
cld
lock
popa
ds
xchg
das
pop
inc
sub
xchg
fwait
and
jne
insb
and
pop
les
add
dec
xchg
popf
js
mov
mov
add
mov
cmp
jbe
sbb
push
pop
loop
push
or
aad
ss
arpl
cmc
xchg
pop
push
out
cmp
gs
dec
iret
xchg
xchg
and
push
lock
insl
shll
mov
lods
lock
mov
je
jno
push
fdiv
fs
push
popf
ss
push
dec
fadds
adc
add
subb
dec
sti
into
orb
and
push
mov
mov
outsb
dec
cmp
outsb
mov
in
adc
sub
jns
sbb
in
mov
lret
imul
movsl
push
inc
jne
mov
xchg
xchg
adc
xor
sbb
or
mov
push
sarb
xchg
mov
push
pop
adc
scas
mov
ret
fdiv
mov
jns
std
cmp
mov
xor
and
das
dec
mov
pop
sahf
add
pop
dec
ror
inc
scas
call
aaa
adc
mov
rcl
nop
jg
push
mov
sbb
dec
mov
adc
or
lahf
inc
ret
leave
cli
dec
lds
xchg
push
push
adc
test
sbb
in
mov
test
or
cmp
aad
push
int
push
push
xchg
inc
pop
lahf
insb
xchg
jb
imul
push
inc
mov
push
push
mov
add
cmpsl
adc
testb
out
mov
and
mov
pop
out
sub
mov
push
and
gs
faddp
ret
incl
pop
subb
sbb
mov
ja
add
mov
ret
addr16
cltd
push
mov
jns
adc
insl
imul
dec
jl
xchg
test
xor
aad
adc
mov
repnz
inc
or
xor
add
pop
test
imul
or
ljmp
cld
testb
lea
lret
pusha
out
sbb
outsb
je
xchg
mov
lcall
cmp
fidivl
insb
push
js
mov
mov
iret
popa
push
jbe
jnp
test
mov
inc
pusha
adc
and
test
popa
fnstenv
ret
cld
fs
js
or
ljmp
rolb
push
adc
pop
movsb
dec
js
jl
xor
push
addl
jno
xlat
bound
outsb
push
mov
movsl
gs
insl
dec
rcll
xchg
jge
das
dec
les
or
add
sti
push
jmp
mul
dec
mov
add
mov
and
adc
push
adc
rcll
flds
or
and
ret
push
push
cmp
aas
popf
mov
mov
sbb
jp
sub
xlat
cmpsb
neg
sub
sbb
test
fadds
xchg
xchg
lock
sub
pop
jb
std
icebp
cmc
mov
and
enter
mov
lock
mov
hlt
cld
addr16
stc
xchg
inc
inc
add
sti
ljmp
jnp
cmp
movsl
mov
jae
sbb
xchg
add
adcl
add
add
dec
orl
mov
outsl
icebp
push
adc
mov
and
push
cs
lahf
sbb
cmp
cmp
xor
bound
fidivs
jp
dec
jmp
xchg
push
jecxz
stc
dec
jnp
outsb
sbb
aad
ljmp
test
std
mov
jg
loopne
cmp
loopne
push
ret
jb
jb
adc
and
fisttps
mov
hlt
loop
shlb
out
mov
mov
inc
xor
outsb
in
scas
andb
push
or
xchg
jnp
add
jns
xlat
and
out
ss
add
icebp
xchg
aas
lret
pop
or
dec
xor
lock
pop
fwait
mov
pop
divl
rcrl
les
or
xor
in
popa
daa
arpl
cmp
mov
mov
sub
out
lcall
les
jne
outsb
aaa
adc
jp
pop
ret
cmp
push
mov
aas
push
mov
test
and
xor
mov
out
add
lea
pusha
imul
xchg
jno
push
inc
xor
adc
push
xchg
movsl
stos
xor
ja
xor
xor
sub
sub
outsb
jl
xchg
loope
sub
mov
sub
mull
push
leave
ja
aad
or
push
jbe
popa
clc
mov
cmp
cmpl
cmp
adcb
es
adc
hlt
jge
lret
arpl
test
imulb
lret
cmpsl
cltd
mov
addb
ss
xor
rcl
adc
scas
mov
push
push
and
je
sub
or
cmp
int3
lods
ljmp
loopne
dec
int
in
fimuls
fisttpll
loopne
jle
mov
test
in
push
cmpsb
pop
and
gs
aad
jle
sbb
popf
and
and
sub
fstl
inc
inc
jne
push
pusha
jb
stos
dec
or
jecxz
fbld
sub
dec
inc
in
icebp
xchg
pop
and
pop
jae
sbb
stos
rolb
in
push
das
in
cmp
mov
sub
xchg
rolb
inc
stos
mov
xlat
nop
inc
mov
xor
aad
adc
shrl
lods
add
and
mov
sahf
enter
lods
pop
push
add
fiadds
fidivrs
mov
imul
aas
jle
jo
inc
lcall
out
mov
pop
stc
ret
add
xor
divl
mov
daa
ds
add
push
xor
and
inc
and
xchg
mov
cmpsb
adc
rorb
in
inc
push
cmpsb
jae
jg
adcl
enter
or
scas
fistpl
addl
loope
lahf
in
mov
cmpsl
dec
aam
push
jnp
scas
int
stos
jns
pop
rcrl
insl
jbe
idivb
cmp
in
leave
inc
popf
ficompl
mov
fcompl
pop
mov
push
lret
outsb
imul
push
sbb
icebp
add
xor
xchg
cmp
inc
push
pop
dec
cli
outsb
pop
mov
dec
std
sbb
rcrb
daa
rcrb
jge
inc
roll
adc
out
loopne
ficoms
cmpsb
jb
data16
push
add
mov
loope
enter
test
mov
fildll
cltd
lahf
fwait
sub
mov
frstor
pop
mov
cmp
lret
lods
stc
and
mov
mov
jnp
insl
mov
and
sub
mov
xchg
push
cmp
addr16
stos
inc
fisubl
mov
in
mov
jns
pop
xchg
xchg
aaa
push
dec
push
mov
stos
addr16
sub
and
aaa
testb
ficoms
pop
xchg
sub
push
jae
pushf
popa
ja
or
add
mov
cmpsb
cmp
jle
out
push
cltd
sub
pop
out
xor
xchg
push
fcomp
xor
arpl
dec
xchg
mov
add
pusha
out
add
jb
ficoms
add
push
dec
pop
jo
test
mov
test
and
cmp
adc
in
fsub
xor
ret
sbb
dec
xchg
leave
xor
pop
rcrl
inc
aam
fwait
sub
cmc
negl
pop
scas
mov
pusha
mov
lahf
pop
lds
das
lea
mov
mov
lcall
cli
addr16
and
and
push
mov
popf
jp
fldt
sub
jnp
lods
adc
mov
push
adc
inc
daa
and
incb
dec
stc
jle,pn
push
cmc
sbb
and
dec
mov
test
ljmp
xchg
notl
pop
jo
push
scas
and
xchg
scas
in
das
mov
lcall
xchg
sub
xor
cmp
mov
mov
ss
aad
call
jnp
sahf
inc
push
lret
mov
out
cmp
and
nop
stos
xor
mov
mov
popa
out
sbb
inc
in
inc
or
pop
mov
jo
inc
cmp
lods
sub
or
cli
mov
inc
ss
xchg
dec
mov
mov
cmpsb
add
cmp
mov
testb
lods
fstpt
inc
inc
jmp
add
out
pusha
xlat
sarb
xchg
mov
and
int3
js
sub
add
pop
push
cmpsl
mov
pop
in
or
rol
loope
jecxz
sub
cmp
ja
adc
aas
cltd
aaa
xchg
aad
cwtl
sub
popf
pop
xchg
or
fdivrs
cmp
loopne
hlt
popf
out
addr16
xor
call
stos
je
popf
jg
xchg
add
inc
and
cwtl
fdivrs
bswap
mov
mov
mov
fiaddl
xchg
adc
mov
sahf
in
ret
add
aad
dec
mov
rcr
push
leave
adc
jnp
outsl
pop
lahf
xchg
xchg
pop
push
inc
push
and
xor
xor
dec
mov
int3
pop
sbbb
mov
nop
jp
cmp
es
xorl
lcall
andl
jbe
lock
aam
cmpsl
mov
ret
rclb
or
cmpsb
inc
ss
sahf
add
mov
jp
adcb
repnz
or
bound
daa
cmp
mov
and
pushf
call
inc
mov
jmp
inc
push
xlat
lods
pop
push
lret
aaa
mov
cmp
lea
cmp
adc
lret
in
loope
adc
inc
adc
decb
pushf
frstor
popf
cmpsl
push
dec
neg
lea
iret
sub
addr16
push
push
dec
div
gs
pop
cld
lret
sarb
ds
xlat
cmpsl
bound
pushf
stos
shrl
and
jbe
bound
popf
sbb
ja
push
xlat
lret
adc
adc
jmp
inc
adc
or
es
xchg
shrb
jecxz
sbb
adc
inc
fbstp
lock
dec
pop
stos
icebp
fadds
or
dec
mov
test
imul
mov
or
mov
pop
sbb
pop
loopne
xor
lcall
aam
push
mov
mov
in
aam
pop
loopne
push
sub
cmp
rclb
inc
inc
mov
sbb
das
shlb
lds
inc
sub
cld
lea
sub
pop
cwtl
xchg
outsb
mov
mov
imul
cmpsl
outsb
gs
add
inc
or
jns
outsl
bound
inc
push
ret
in
push
stos
push
xlat
xchg
rcrb
aas
fadds
data16
imul
add
incl
leave
dec
lods
fisttpll
out
mov
imul
mov
jg
jnp
cwtl
adc
mov
dec
lret
int
push
push
or
push
pop
pushf
add
pop
add
add
and
movsl
in
xchg
xchg
pop
shlb
in
jmp
xor
sub
fcoml
idivb
sub
jno
mov
and
pushf
mov
xor
lods
aaa
add
cltd
and
and
arpl
jmp
test
mov
sbb
xchg
mov
and
mov
movsb
bound
loop
mov
loopne
roll
test
aaa
es
dec
ja
inc
jo
mov
sbb
mov
dec
dec
icebp
jo
lahf
or
mov
test
andb
data16
out
cmc
and
imul
pop
jb
pusha
ret
jle
popl
inc
testl
mov
cmp
sub
pop
loop
cmpsl
inc
adc
ret
bound
cwtl
sbb
enter
sub
xor
dec
push
cmpsl
pop
int
in
or
dec
jl
or
pop
repz
xor
push
jnp
pop
sub
js
add
xchg
addr16
cmp
lock
mov
mov
mov
fcomps
sbb
inc
mov
push
test
pusha
ret
repnz
insl
scas
push
cmp
push
push
adc
cmpb
cmpsb
out
test
mov
add
scas
bound
es
incb
mov
cltd
or
mov
clc
divb
dec
fimull
fadds
xchg
jge
in
xor
daa
sub
jl
repnz
test
dec
mov
pop
jno
jae
inc
push
xor
jo
fidivrl
ss
xor
pop
xor
ja
cld
roll
push
adc
movsb
adc
and
stos
sub
out
lret
loopne
jp
xor
cmpsb
sub
dec
bound
clc
pop
mov
mov
aas
add
mov
mov
cmp
jnp
mov
xchg
stos
in
movsl
outsl
push
push
in
in
push
jns
call
out
lds
mov
mov
sbb
xor
jbe
dec
test
daa
out
scas
push
test
std
mov
stos
jno
inc
cmp
mov
pushf
int
xor
out
jmp
addb
pusha
ss
mov
sub
andl
xor
aas
ret
mov
and
lahf
dec
or
push
mov
sub
dec
mov
scas
dec
sti
outsl
cmpsl
in
or
cmpsb
push
xchg
jp
push
add
out
xor
outsb
xchg
dec
fwait
andb
lret
in
mov
xchg
or
cs
icebp
or
shll
imul
and
push
jno
cmpsb
cmp
out
jle
popa
adc
mov
imul
repz
shrb
int
mov
adc
pop
mov
xor
dec
inc
dec
jecxz
inc
mov
sub
and
out
inc
fmul
or
xchg
push
xlat
lret
jmp
fcompl
clc
test
and
ja
add
rol
xor
mov
je
fmul
loop
jge
or
lret
cmp
call
cs
iret
push
lret
cmp
dec
mov
mov
jbe
cld
xchg
ret
mov
bndldx
mov
sub
pushf
push
adc
test
jle
aam
test
xadd
stos
fbstp
mov
std
call
frstor
insb
xlat
sub
mov
mov
xchg
mov
imul
ficompl
jb
cwtl
aas
adc
pushf
enter
sti
adc
adc
push
push
test
mov
sub
in
out
mov
xchg
mov
and
fsub
dec
enter
jp
out
xor
mov
xor
jnp
add
fmull
mov
pop
and
mov
lret
js
mov
stc
pusha
sahf
mov
xchg
repz
lret
jnp
cmp
mov
add
xchg
mov
and
add
loope
lock
jp
cmpsl
icebp
inc
sbb
mov
sbb
jno
popa
aas
cmp
mov
cld
fidivrl
dec
aas
es
in
push
xor
je
ljmp
xor
mov
roll
jne
push
js
sti
and
imul
fs
cmp
int
mov
std
out
shl
mov
in
push
fcoms
cmp
xchg
sub
jle
stos
outsl
addr16
inc
leave
sti
xor
dec
jbe
andb
sub
sub
add
jno
or
lret
or
dec
stos
out
iret
xchg
xchg
and
mov
mov
fadds
lcall
and
out
jmp
outsl
inc
imul
gs
and
ds
cmp
mov
out
pop
mov
add
push
jecxz
flds
shlb
sub
pop
insl
imul
xor
jno
decb
imul
jge
pop
and
fldt
repnz
fsubl
int
mov
aad
mov
mov
nop
dec
dec
pop
int
mov
mov
shlb
ss
pmulhw
jmp
xchg
ljmp
mov
and
xchg
aam
lds
cs
das
cmp
sub
orl
mov
add
mov
std
push
movsl
push
adcl
push
dec
xor
push
sub
mov
mov
dec
mov
sbb
pop
add
rorl
shll
and
dec
arpl
mov
out
in
lds
dec
lds
jae
sbb
jmp
movsl
les
dec
pop
imul
push
push
pop
xchg
dec
push
xchg
jbe
pop
push
out
cltd
adc
ss
test
jle
mov
cmpsl
scas
mov
divb
push
mov
sti
xchg
push
sub
int
in
test
xrelease
pop
ja
scas
cmpsb
add
sarb
lods
push
mov
and
test
mulb
cmp
jbe
lods
call
mov
mov
fisubrl
aaa
add
pop
sahf
adc
call
dec
bound
fsubs
pop
lods
adc
and
inc
mov
pop
jne
sbb
sbb
jg
ss
pop
ret
pop
xchg
cli
popaw
mov
roll
hlt
sub
dec
outsl
aam
inc
dec
push
xchg
dec
clc
mov
int
and
cmpsb
leave
xchg
sbb
add
xor
aad
imul
add
sub
add
mov
ljmp
in
xor
addr16
rol
jle
xchg
shr
sub
xchg
pusha
jge
popa
arpl
jo
add
in
test
fsqrt
lahf
pop
lcall
pop
add
mov
lret
inc
sub
out
and
xor
outsb
jae
int3
sbb
cld
mov
mov
stc
mov
or
and
daa
lahf
subl
push
adc
ljmp
daa
iret
lahf
jge
cli
or
ja
test
out
data16
xchg
aaa
xchg
iret
inc
imul
lock
sbb
loopne
out
jb
pop
mov
lret
mov
in
and
adc
jbe
jb
das
mov
in
pushf
lahf
or
dec
insl
and
loop
mov
leave
fcmovnb
clc
mov
leave
xor
hlt
jae
addr16
ficompl
iret
inc
movsl
jmp
shl
fadds
pop
test
test
lods
adc
jl
xorl
lods
cmp
pop
sbb
inc
mov
mov
lods
sbb
cmp
lods
sub
stos
mov
insb
mov
xor
pop
cwtl
shr
or
jge
and
xor
aas
push
push
popa
mov
nop
xor
lods
jmp
dec
or
scas
jp
mov
test
lahf
cmp
aad
js
roll
and
sub
adc
xchg
sbb
sbb
aam
xor
mov
add
hlt
mov
aaa
mov
movsb
ss
jne
pop
enter
call
jb
scas
jb
js
popf
xchg
mov
xchg
mov
mov
in
and
pop
sub
pop
push
out
das
into
insb
lods
fnstenv
pop
inc
add
jp
pop
stos
nop
movsl
lods
xor
aas
lret
lea
insl
bound
jmp
jl
lods
int
inc
jecxz
dec
fisttpll
push
insb
xchg
outsl
sbb
fisubrl
movsl
out
test
cmp
stc
lahf
sbb
adc
xchg
jle
xor
mov
adcb
into
loop
mov
cld
cmp
out
jb
adc
xor
mov
movl
push
jg
dec
adcl
rorb
dec
dec
es
scas
in
iret
push
stos
scas
push
pop
dec
jmp
jg
jle
dec
push
jp
mov
sbb
dec
sarl
pop
movsb
and
arpl
mov
ficoms
aad
cltd
pop
xchg
push
add
es
dec
call
push
cmp
or
aad
aas
das
repnz
rep
outsl
shll
and
out
push
pop
cs
fcmovnu
fistl
and
fsub
cmp
fiaddl
adc
cmp
mov
cmpsb
mov
sbb
adc
sub
inc
addr16
inc
iret
cs
mov
iret
aas
add
push
cmpsl
mov
fisttps
lea
push
push
popf
mov
fcmovu
ja
mov
mov
in
cmpsb
pusha
xchg
xchg
std
loopne
sarb
mov
in
stc
sarl
pop
mov
fwait
test
fs
pop
mov
test
lock
jb
out
push
cmp
mov
mov
adc
inc
mov
jbe
in
push
test
push
inc
or
test
push
cmp
int3
shl
cmp
jle
int
js
incl
xor
js
sub
out
addr16
pop
sbb
cltd
out
loop
ljmp
cmpsl
or
ficompl
sub
jmp
std
inc
fwait
push
test
xchg
xchg
lret
add
mov
mov
pop
inc
jmp
sub
mov
shrl
jle
mov
lea
or
jmp
roll
pop
push
push
mov
test
adcl
in
sub
push
dec
scas
and
out
cli
fisubl
std
imul
mov
pop
pop
nop
shrl
rcrl
jno
cmp
inc
cmp
dec
les
outsl
adc
xchg
pop
pop
dec
pop
mov
mov
mov
roll
add
iret
or
outsb
jge
ss
or
cli
jo
out
xchg
cmpsl
int3
jae
jp
add
sub
jg
cmp
lea
xchg
dec
aaa
fs
enter
xchg
xor
sub
jb
and
rcrl
pop
sub
scas
or
cmpl
cmp
movb
jge
lock
adc
lahf
jno
inc
add
aaa
sbb
scas
push
inc
mov
js
mov
push
inc
fstpt
stos
jmp
sub
cmp
outsb
dec
test
in
cmp
rorl
dec
mov
cld
jmp
cltd
push
cld
xchg
test
and
jmp
adc
pop
xchg
inc
test
scas
and
mov
mov
xor
adc
push
repnz
cmc
fisttps
call
push
sub
jge
mov
loopne
inc
add
sbb
ret
dec
dec
daa
mov
xchg
inc
mov
adc
mov
es
mov
mov
outsl
cs
xchg
xchg
scas
adc
nop
and
int
push
sbb
mov
push
push
ss
xor
mov
and
push
inc
loope
xchg
push
loope
jle
pushf
outsb
dec
xchg
inc
sbb
out
and
sti
ljmp
divl
xor
sub
mov
fisubrl
lret
lds
xchg
pop
inc
adc
shlb
out
xchg
add
pop
adc
cmc
fidivrs
add
sbb
push
adc
call
mov
adc
dec
dec
sahf
lahf
mov
in
pusha
popf
push
adc
and
mov
jae
push
sub
cmp
pop
out
mov
nop
xor
fsubrs
or
adc
mov
mov
dec
das
and
add
mov
mov
cltd
cli
sub
push
sub
movsl
sahf
nop
rcrl
sti
sbb
imul
pop
aaa
adc
mov
fisttpl
lds
pop
fmuls
xor
dec
push
push
pop
jbe
sbb
in
adc
push
xor
push
js
pop
or
mov
loop
cwtl
sub
pop
int
int
and
adc
push
gs
add
xchg
test
xchg
outsb
es
dec
cmc
pop
cwtl
ret
pop
xor
mov
pusha
jns
in
mov
and
bound
mov
push
rcrl
adc
jno
outsl
fs
xor
jg
nop
mov
in
sahf
nop
or
ret
jbe
out
jne
into
negb
pop
xchg
lret
outsb
test
xchg
enter
js
lea
xchg
xchg
jle
jecxz
insl
add
jge
lret
and
pop
jmp
fucomip
push
scas
adc
cmp
xor
jl
jecxz
sub
add
sbb
notb
pop
addr16
loop
inc
mov
negl
cld
xchg
mov
xor
push
jge
jne
xchg
imul
js
sbb
lcall
and
incl
jo
cs
lcall
insb
int3
into
add
or
jno
call
call
and
and
pop
ds
xchg
sub
mov
pop
in
add
dec
sbb
mov
pminsw
or
fdivrp
popf
jno
fists
pop
bswap
xchg
mov
stos
gs
mov
or
aad
jns
cmp
or
test
std
pop
mov
jne
ds
fdivr
mov
inc
mov
insl
int3
dec
nop
dec
fiadds
xchg
push
xlat
adc
push
mov
adc
pusha
sub
cs
jp
pushf
adc
sbb
pop
mov
pop
mov
mov
call
jle
stos
and
adc
mov
pusha
xchg
mov
call
inc
mov
in
pop
lock
lahf
mov
int
inc
inc
iret
xor
cmc
dec
cwtl
sbb
mov
enter
push
test
mov
pop
and
in
aad
fwait
xor
cmp
push
repz
mov
shlb
pop
out
int
stos
add
xor
iret
into
push
cwtl
pop
sti
popa
adc
pushf
std
pop
push
sub
and
xchg
add
push
cmpsl
stos
divl
xchg
inc
pusha
adc
xor
insl
stos
lahf
jne
xor
pushf
subl
dec
add
pop
fs
test
nop
pop
sbb
jg
fisttpl
or
sbbb
lds
lock
inc
mov
push
in
xor
fnsave
push
push
xor
mov
popf
movsb
pop
sbb
movsb
sbb
pop
mov
sbb
cltd
add
mov
sahf
rol
dec
add
push
jb
mov
pop
xor
lods
xor
enter
fimull
and
stos
subl
mov
mov
outsl
in
pop
push
jp
cmp
push
in
mov
incb
notb
and
push
inc
add
in
pop
dec
pop
aaa
lahf
imul
dec
mov
sbb
inc
mov
nop
pop
pop
adc
out
jl
cmp
push
pop
rclb
pop
pop
ljmp
push
outsb
mov
push
cmpsl
test
lret
fisttpl
ficoml
in
cmp
xor
jae
fcmovbe
xchg
ficoml
cmpb
jl
addr16
jp
push
lret
call
arpl
xchg
stc
sub
adc
lods
inc
subb
sti
cmp
push
xor
xor
jbe
inc
mov
mov
arpl
lcall
pop
push
add
push
mov
mov
adc
jge
mov
fnstsw
sahf
sahf
cld
imul
pop
inc
mov
add
pop
mov
repnz
test
andb
xchg
mov
fsubr
fisubs
pusha
mov
mov
loopne
testl
mov
xchg
jne
or
test
subl
lds
gs
stos
outsl
xor
pop
test
aad
int3
inc
in
ss
jp
sub
movl
mov
dec
out
dec
cltd
jg
jle
scas
jo
fildl
mov
jge
or
inc
pop
jge
inc
add
insl
sbbb
sarb
addr16
sub
lds
or
mov
iret
xchg
cmp
inc
popa
sub
daa
xchg
sbbb
and
jno
xor
mov
cmp
xchg
ret
mov
imul
xchg
mov
push
push
or
decl
jmp
rcl
notb
test
test
loope
jp
imul
or
mov
push
adc
imul
mov
cmp
fucomi
bnd
mov
push
xchg
jae
jge
loop
xor
mov
pusha
stos
movsb
in
cmpsb
mov
cltd
aas
or
cmp
cltd
ud0
mov
mov
add
shlb
das
xchg
stos
inc
adc
fsubrl
jnp
push
repnz
push
lret
pop
mov
movsl
mov
pusha
xchg
xchg
sbb
mov
lahf
je
push
in
or
lds
fldl
sub
in
sbb
sbb
pop
shrb
mov
cmp
fistpll
daa
jl
mov
lock
dec
mov
inc
sti
mov
inc
mov
push
fcoml
pop
and
add
xchg
dec
stc
xchg
mov
cli
mov
cmp
jae
xor
pop
cmp
fistps
xor
inc
sbb
cmp
lock
push
inc
pop
adc
jnp
xchg
cmc
in
pushf
dec
add
jl
icebp
loop
arpl
mov
xor
aaa
add
out
ja
mov
mov
int3
mov
pop
add
je
stc
lret
lahf
jmp
insl
testb
stos
aaa
sub
xchg
mov
inc
dec
cwtl
aas
mov
xor
push
cmp
cld
dec
inc
xchg
movsb
or
xchg
or
dec
or
sub
shl
jns
sbb
jnp
and
mov
adc
adc
and
cmpb
sti
pop
fucomp
fisubrl
repnz
mov
imul
sbb
int3
out
mov
push
and
push
sub
test
adc
test
adc
cld
xchg
cmpsl
insb
into
jge
inc
adc
je
lahf
scas
insb
adcb
inc
inc
mov
dec
daa
and
imull
loopne
ret
arpl
mov
sub
dec
sub
jnp
stc
sahf
push
in
ss
xor
cmp
repz
movsb
arpl
adc
rol
jae
or
leave
sti
fwait
sub
loope
xchg
mov
out
ret
shrb
addr16
jle
stc
in
test
or
and
jp
stos
aas
sub
inc
and
lret
insb
faddl
scas
clc
jb
jp
lcall
in
call
inc
push
push
sub
fs
dec
sahf
pop
pop
pop
cmpsb
stc
bound
adcl
daa
and
mov
sbb
lea
xchg
sub
mov
loope
xchg
cmp
out
cli
or
mov
cli
add
jp
cmp
popa
icebp
rorb
int
rorl
test
call
push
loope
stos
iret
dec
push
leave
jle
mov
mov
xor
cmp
push
imul
lds
stos
cmpsl
into
ret
jnp
rcl
sbb
mov
js
test
cmpsb
add
jmp
cmc
in
xchg
in
int3
ljmp
addr16
outsl
data16
jbe
ret
inc
nop
dec
bound
imul
dec
xchg
mov
ficomps
stos
sti
jmp
push
popf
daa
jbe
fdivr
test
jbe
sub
push
or
adc
addr16
mov
sub
movsb
push
mov
adc
xchg
sub
jns
shrl
jecxz
mov
cmp
cmp
xor
xchg
mov
iret
inc
cs
xchg
sbb
stc
mov
mov
adc
cwtl
sub
ffree
add
sub
cli
push
stos
mov
fisttpll
cmp
jno
bound
aam
inc
pop
xor
jae
imul
mov
sahf
xchg
pop
jmp
jbe
dec
shlb
sub
mov
das
lods
lock
push
daa
or
pop
fsubl
dec
ds
nop
mov
in
movsb
or
push
inc
fisttps
sub
jmp
adc
add
jae
cmp
adc
in
cltd
pop
into
fldt
push
jo
mov
test
or
mov
push
or
rcr
lods
loopne
sbb
hlt
rclb
xchg
clc
inc
dec
mov
sbb
dec
aam
mov
jns
adcl
sbb
popf
inc
and
jge
fcmovu
imul
mov
repz
sub
mov
idivl
jnp
movsl
pop
pop
icebp
lret
sti
cmpsb
ret
mov
sub
cld
adc
cli
hlt
or
jne
xchg
mov
mov
add
mov
clc
jp
inc
push
jb
sub
mov
loop
adc
push
mov
xchg
inc
cmp
push
fldenv
or
outsb
push
add
aam
fisubs
push
mov
sbb
popf
push
pop
bound
jo
jne
data16
into
push
stos
in
aas
fstp
and
xor
push
pop
cmp
int3
inc
imul
cmp
dec
enter
mov
jns
imull
pushf
dec
cltd
xor
mov
inc
movups
mov
or
mov
test
addr16
pop
pop
jo
jno
mov
mov
jmp
dec
enter
push
xchg
dec
mov
xchg
sbb
jnp
adc
filds
jbe
push
in
adc
or
inc
jl
jo
in
ss
into
das
push
sbb
ljmp
data16
divl
cld
adc
les
xor
and
test
mov
popf
lahf
mov
loop
hlt
sub
and
and
push
pop
sbb
lcall
lock
jg
xor
dec
ljmp
lods
aaa
imul
mov
xchg
push
push
out
xchg
sub
mov
stos
nop
pcmpgtb
jnp
mov
push
inc
mov
rorl
movsb
add
jmp
test
sti
je
cmc
les
iret
call
in
mov
inc
into
sbb
aad
sbb
int3
add
iret
xlat
pushf
inc
cmp
add
pop
fnsave
rcll
pop
into
xor
jecxz
cltd
push
shlb
pop
lcall
mov
fst
sbb
inc
cltd
lret
xchg
jmp
xor
lcall
inc
sub
and
jmp
xor
mov
fcmovnu
adc
out
mov
icebp
pop
sbb
inc
bound
lret
dec
frstor
and
cmpsl
sti
popf
pop
dec
xchg
sti
sbb
or
test
insb
ljmp
cld
mov
jno
or
cmp
or
ss
lods
push
xor
cli
fcompl
xchg
das
inc
pop
push
and
mov
ret
cmpsl
ret
in
loope
mov
push
or
data16
or
add
enter
adc
xchg
mov
jne
loop
in
lock
test
sbb
cmp
int3
jne
xchg
mov
mov
pop
mov
mov
inc
mov
leave
xchg
push
stc
pop
pop
arpl
sbb
jne
dec
fmull
sbb
xor
mov
mov
cltd
mov
push
pop
stc
cmp
adc
or
xchg
pop
inc
dec
push
fs
imul
js
push
call
gs
mov
int
push
mov
cmc
add
xor
and
movsb
mov
cmp
pop
sbb
jge
pop
int
mov
rcr
push
add
sbb
cmc
jl
and
in
js
lret
gs
sub
push
jg
sbb
mov
mul
hlt
in
cs
int3
daa
les
mov
mov
clc
loope
enter
call
jge
clc
adcl
aam
cmp
imul
scas
shr
cs
mov
cmpsb
and
mov
adc
lret
inc
daa
jp
ljmp
cmp
out
add
push
int
mov
mov
ss
cmp
inc
outsl
inc
addb
sbb
xor
sbb
push
ja
xchg
pusha
test
pushf
cli
inc
icebp
test
push
aam
jecxz
sar
or
pushf
das
stos
mov
push
jmp
mov
mov
lds
in
bound
loop
imul
shr
xchg
cmp
not
cmp
mov
faddl
jno
mov
repz
xchg
test
dec
push
mov
inc
rcll
jecxz
cmp
stos
idiv
cmc
fmuls
jmp
xorl
dec
out
lret
or
pop
scas
inc
imul
mov
mov
sbb
push
sbb
jmp
cmpsl
mov
pop
aad
test
push
xor
cmc
mov
shrl
xchg
pop
xchg
out
scas
arpl
dec
stos
ret
xchg
clc
lock
mov
add
mov
repnz
cwtl
inc
pop
adcb
jns
jbe
mov
adc
mov
jae
lock
fnstenv
and
sbb
aam
cs
mov
scas
ds
nop
cli
jle
cmp
pop
cmp
repz
mov
loope
pop
les
jno
outsl
sahf
mov
repnz
addr16
jo
inc
xchg
int3
insb
jbe
jnp
add
outsb
stos
cmp
jl
test
movsl
xchg
testb
daa
outsb
xchg
push
add
dec
pushl
cwtl
and
dec
add
loopne
adc
outsl
cwtl
pop
mov
test
dec
mov
cmp
push
mov
pop
mov
cld
shrb
aas
mov
out
sub
in
into
push
mov
test
lods
cld
daa
inc
adc
cmp
daa
sahf
inc
jbe
shr
fwait
testb
push
test
lds
shrb
fsub
arpl
pop
lcall
in
stc
and
mov
jae
mov
dec
dec
stc
add
jmp
and
lods
inc
leave
addr16
lret
xchg
inc
inc
bound
sub
loopne
in
push
pop
cwtl
test
stc
in
pop
cwtl
pop
js
lods
xchg
pop
pop
push
cmp
enter
ds
into
mov
imul
dec
testl
mov
shl
or
and
shll
or
and
and
pop
lods
cmp
xor
pop
call
call
nop
mov
mov
int3
mov
fdivs
ss
hlt
es
stc
jbe
lret
push
cli
fnsave
call
ljmp
shl
lods
mov
cltd
test
xchg
lds
inc
out
mov
outsb
nop
fs
fstl
mov
jg
cmp
jg
xlat
inc
push
ja
sub
sub
add
dec
popf
sbb
pop
dec
int
jp
pop
mov
shlb
xor
mov
test
jnp
cmp
adcl
pop
cld
ret
in
xchg
xchg
pop
hlt
mov
mov
subl
pop
movb
ret
dec
adc
and
cmp
or
shrb
shrl
inc
sti
xchg
push
xor
jnp
add
sub
test
sti
test
xor
mov
mov
addb
lea
mov
dec
xchg
xchg
mov
mov
pop
cmc
mov
sbb
add
outsb
cwtl
lret
add
lock
cmpsl
icebp
pop
pushf
jns
add
mov
roll
stos
test
mov
test
xor
pop
fsts
add
push
out
push
sahf
pop
mov
out
jbe
mov
lods
fxch
sarb
mov
popf
xor
ret
sub
add
orb
dec
jns
in
stos
lods
adc
shl
jp
push
pop
pop
mov
sti
xchg
mov
pop
xor
jg
adc
sbb
dec
jb
pop
inc
adc
xchg
add
scas
dec
and
xchg
in
jl
and
ljmp
pop
imul
fcoml
push
push
xor
mov
stos
lea
add
mov
push
in
push
sbb
stos
daa
arpl
sbb
dec
jnp
loop,pn
insb
push
push
jne
fcomp
aad
add
je
add
shll
push
mov
pushf
jle
dec
fs
mov
sarb
shlb
dec
pushf
jne
cmp
add
lret
inc
test
adc
iret
adc
dec
pop
movsb
repnz
test
sahf
inc
push
dec
mov
push
push
add
push
jle
int
xchg
dec
pop
sub
pusha
push
mov
sub
test
test
mov
insl
push
lcall
or
test
xor
add
xor
sti
lret
adc
les
sbb
cltd
jbe
lods
shlb
std
jle
mov
aaa
hlt
xor
xor
pushl
xor
xchg
or
cli
xchg
std
icebp
mov
push
call
loope
xchg
mov
repz
xchg
rorl
mov
xor
repnz
or
fnstsw
ret
test
sub
stos
sub
mov
adc
xchg
stc
cli
hlt
jmp
aas
add
adc
negb
sarb
call
push
popl
pop
loop
movsl
addr16
xor
aaa
or
mov
out
lea
inc
nop
orl
cltd
andb
and
and
lcall
insl
fcomi
shll
sub
mov
push
cmpsb
lods
xchg
push
push
rcrl
and
cmp
sahf
std
jecxz,pt
hlt
stc
lahf
icebp
xor
add
insb
and
cmpsb
mov
lock
movsb
das
xchg
movsl
jge
stc
inc
mov
movsb
xchg
jp
imul
jl
jl
insb
cmc
add
jb
pop
mov
mov
xor
lock
loopew
jae
mov
js
push
xchg
mov
ss
push
sub
cmp
or
sub
push
adc
mov
pop
adc
sbb
ss
aam
push
fnstcw
insb
mov
xlat
push
mov
inc
popf
mov
jno
push
mov
xlat
cmp
or
sub
mov
mov
aad
inc
adc
stc
out
xchg
jbe
push
inc
clc
in
push
lds
mov
mov
jbe
sub
ds
out
or
mov
loope
in
mov
lea
push
push
xchg
fisubs
inc
inc
lcall
xchg
mov
movsb
loopne
sbbl
sarb
fidivrs
inc
sbb
cli
shll
call
outsl
dec
mov
jo
dec
pop
mov
push
push
pop
imul
push
lock
mov
xor
sub
sub
mov
mov
fistpl
pop
mov
insl
pop
dec
in
add
insl
mov
pop
and
out
push
push
stos
or
inc
pop
xor
pushf
mov
xor
out
loop
and
ret
movsl
in
and
jae
adcb
decb
push
adc
test
adc
sbb
and
sarl
outsb
xor
loopne
ds
arpl
xchg
and
movsl
aad
test
pusha
ss
int3
mov
or
jo
push
sbb
jae
and
jle
andl
xchg
or
je
ljmp
std
fldl
mov
mov
jmp
mov
mov
lock
das
inc
pop
cmp
aas
mov
hlt
stos
dec
add
les
jl
mov
cmp
int3
lea
pop
mov
adc
dec
mov
mov
sbb
lret
and
ret
es
mov
mov
lds
data16
cmpsb
jp
or
shrb
mov
add
jo
out
rcr
insb
jne
loop
mov
in
insl
or
xchg
insl
or
in
or
popa
sti
mov
and
test
xor
outsl
outsl
rorl
pop
js
lock
mov
arpl
sub
push
movsb
inc
xchg
jp
ficompl
push
mov
push
sbb
pushf
jae
mov
mov
push
cmp
aam
ret
imul
outsl
arpl
adc
adc
les
ret
pop
enter
mov
daa
xchg
push
imul
add
arpl
lds
push
icebp
scas
aaa
lcall
mov
outsl
js
xchg
aam
out
ljmp
fcmovu
cmp
add
sbb
outsl
call
add
sbb
mov
dec
ljmp
in
stc
jns
dec
inc
xor
add
jo
arpl
out
sub
mov
mov
xor
sbb
arpl
jmp
scas
xor
adc
ljmp
pop
clc
fdivl
dec
in
nop
repnz
push
mov
mov
sub
shrl
aam
lahf
cld
cmp
das
push
pop
push
jge
bound
addr16
mov
and
jae
sbb
mov
sahf
fucomp
test
inc
jo
sub
stos
lret
nop
pop
pop
xchg
mov
mov
push
aas
ss
xor
mov
add
aam
lcall
shrb
fsubr
mov
arpl
stos
cld
cmp
clc
and
and
add
fiadds
lret
imull
cli
scas
jg
or
push
xor
push
inc
or
lock
pop
push
and
cmp
dec
inc
mov
push
add
mov
mov
and
or
mov
pop
movsb
dec
loopne
imul
push
inc
popa
push
pop
icebp
push
dec
lahf
and
mov
jbe
or
xchg
xchg
mov
dec
stc
outsb
dec
int3
arpl
test
cld
das
inc
bound
mov
in
mov
int
ret
imul
movsb
push
ret
pop
rcrl
testl
cmp
arpl
imul
out
in
dec
pop
loop
adc
test
dec
bound
popa
imul
adc
mov
out
mov
icebp
mov
cmp
es
aam
aaa
mov
push
and
insb
fcmovb
sub
jge
lods
loop
xor
int
sarl
pop
cmp
les
mov
push
sub
dec
js
mov
jmp
push
dec
jno
leave
pusha
repnz
rcl
lock
fwait
jp
pop
rorl
mov
and
inc
sub
mov
xor
dec
push
add
std
orb
sub
aam
movsl
inc
loopne
adc
add
push
or
sub
test
cmp
popf
and
aas
aaa
cltd
mov
mov
mov
outsl
cwtl
sbb
filds
adc
sahf
push
push
mov
dec
add
xlat
mov
call
mov
and
and
push
inc
ss
push
sbbb
clc
adc
les
mov
xchg
xor
pop
rorb
int
add
add
outsl
lods
sbb
xchg
arpl
mov
and
aaa
dec
and
pop
insb
lret
es
rorb
mov
fcmove
xchg
cmc
dec
dec
lock
arpl
mov
std
aad
cmp
inc
mov
enter
dec
dec
xor
sbb
sbb
mov
inc
jbe
sti
mov
cmpsl
sub
mov
sbb
sub
pop
jl
dec
into
pop
sbb
push
jg
mov
aas
js
call
rcrl
mov
cmp
mov
inc
stos
inc
adc
adc
cltd
shll
cli
pop
insl
add
lock
arpl
sbb
or
test
push
cmpsb
and
pop
dec
xchg
nop
bound
mov
mov
fwait
pusha
sbb
jnp
fiadds
into
loopne
das
lock
sub
xchg
mov
sub
fcompl
mov
imul
xchg
fadd
mov
mov
data16
or
cs
mov
add
pop
iret
lcall
pop
fstps
dec
adc
mov
popf
popw
lcall
nop
cltd
aas
xchg
jbe
or
andb
out
clc
movsl
push
push
arpl
mov
or
std
fwait
mov
test
jle
mov
dec
out
xor
mov
cmp
mov
mov
dec
rcr
jp
add
mov
fmull
nop
pop
push
sahf
or
xor
jae
cltd
pusha
cmpsl
pusha
int
mov
jp
xchg
cmpsl
xor
jmp
jge
clc
xor
add
xor
jo
std
cmp
enter
jmp
rolb
jo
inc
cltd
sub
pop
sbb
pop
cmp
lcall
pusha
ds
sar
jecxz
sahf
data16
xor
stos
and
loope
andb
dec
dec
in
scas
dec
lret
pop
cmp
push
mov
xor
notl
cmpsb
push
sub
ja
pop
test
cmp
push
push
lods
sub
movsl
jle
sbb
xor
mov
mov
iret
rcll
frstor
jmp
test
out
pushf
dec
xchg
mov
jle
xlat
xorb
push
inc
data16
mov
fisubrl
xchg
inc
lcall
pushw
inc
mov
mov
fsubs
scas
xchg
xchg
add
lods
add
call
mov
or
mov
jmp
mov
repnz
test
and
mulb
iret
mov
sbb
aas
adc
pop
stos
repz
shr
mov
push
mov
mov
xor
pop
int
and
loope,pt
ljmp
test
push
jns
sbb
pop
and
cltd
lahf
sub
daa
inc
fwait
test
or
outsb
inc
pop
aad
pop
js
insl
xchg
mov
repnz
xor
adc
leave
add
mov
push
jno
mov
mov
lock
xor
shll
rcl
push
jg
aas
jl
loop
xchg
gs
push
and
in
jb
mov
mov
outsl
cmc
dec
dec
adc
shrl
xor
or
std
mov
out
mov
cmp
int
iret
ss
out
subl
push
mov
adc
addb
or
and
subl
dec
dec
pop
pusha
icebp
xchg
pusha
mov
in
pop
movsl
pusha
mov
jno
sarb
bound
int3
std
jb
jnp
dec
in
xchg
and
repz
test
outsl
mov
repz
sbb
cmc
ds
cmp
xchg
das
lods
or
pop
das
shll
or
inc
lods
subl
je
jns
lock
xchg
or
cmc
inc
add
iret
roll
lods
hlt
sub
daa
mov
xchg
jge,pt
jne
cmpsb
mov
mov
iret
fbld
jno
ficoml
mov
or
jb
dec
in
or
sarb
dec
popl
sbb
push
xlat
shll
stc
add
sti
xchg
xchg
cmp
cmovae
xchg
xorl
jp
outsl
rcrb
ljmp
cmp
mov
lock
xor
popf
sti
fimull
les
xlat
jg
pop
ds
arpl
insb
insb
mov
leave
jbe
mov
push
aas
mov
sahf
dec
out
inc
movsl
out
divl
dec
enter
pusha
je
in
sti
cmc
ds
into
cmc
iret
ljmp
icebp
cmp
xchg
dec
add
loopne
pop
ror
push
sbb
lcall
sub
jmp
cmpb
sub
shl
mov
mov
lret
push
and
mov
xor
lods
jge
push
sbb
fwait
jl
xor
mov
out
xrelease
shl
jo
sbbb
pop
push
pop
sub
xchg
mov
mov
cmp
cmp
add
jnp
mov
inc
mov
jecxz
or
inc
jmp
aad
pop
test
out
mov
sbb
cmp
dec
jae
push
cmp
je
mov
mov
inc
xchg
out
cmpsb
fcomps
cmpsb
aam
adc
repz
pop
dec
xor
cmc
outsl
cmp
and
int
xchg
xchg
jae
in
pop
adc
mul
subl
mov
sti
sub
outsl
add
pushf
scas
and
ret
dec
aaa
dec
fidivrl
mov
jl
and
les
enter
xchg
fldt
mov
testb
jmp
je
xchg
jae
in
imul
sub
inc
jmp
inc
jle
std
fcoms
rcrl
ds
pop
mov
mov
popf
sbb
push
dec
outsl
add
jae
das
leave
sbb
sub
xor
outsb
cmp
or
mov
sub
cmp
mov
pop
mov
sbb
out
sub
imul
pop
rcrl
add
and
rorb
fiadds
sahf
lds
and
sbb
or
loopne
pcmpeqd
out
push
mov
insl
add
and
rcrl
stc
sbb
dec
jo
fbstp
mov
sbb
daa
inc
cmpb
lahf
sub
inc
sub
push
bound
jae
xchg
xchg
inc
dec
std
cmpsb
sbb
fisubrs
inc
psllw
stos
sub
mov
call
lret
adc
inc
mull
out
cwtl
cltd
imul
cmp
in
cmp
sbb
popa
repnz
jmp
dec
nop
out
or
scas
pop
in
aaa
mov
into
lcall
sub
cs
sar
jmp
mov
add
fdiv
pop
xchg
add
jb
push
call
jno
or
imul
leave
shlb
jmp
testl
mov
repz
das
pop
mov
xor
and
push
xor
mov
sbb
pop
jb
out
xor
ljmp
ds
test
divl
xchg
mov
lods
testb
jb
fdivrs
and
dec
sub
cmp
inc
sub
leave
adc
rcr
xor
jle
shlb
nop
and
in
je
cmp
cmp
test
dec
stos
in
lcall
adc
dec
pop
inc
movb
cwtl
adc
cmpsl
int3
sbb
xchg
in
xchg
cs
push
clc
add
push
sbb
fs
inc
in
add
cmpsl
ret
xchg
mov
dec
xchg
fidivrl
std
pop
and
out
push
shl
push
jge
insl
push
and
pusha
inc
rorb
repz
mov
push
dec
xor
dec
cltd
stc
jle
aas
int3
lds
xchg
pop
mov
imul
cwtl
jns
fdivr
and
xor
scas
hlt
imul
loope
xchg
dec
and
dec
jns
ljmp
js
icebp
rcrb
call
imul
arpl
stos
lret
mov
dec
aaa
sbb
jg
push
mov
add
cli
mov
arpl
stos
rcrl
int3
jnp
lcall
in
pop
mov
imull
scas
mov
cld
cmpsl
popf
std
lea
ljmp
add
cld
imul
jmp
hlt
adc
cmp
cld
mov
fistps
xchg
scas
and
dec
js
xchg
ret
push
push
sub
push
rcl
insl
js
cmpb
test
bound
inc
in
es
pop
add
test
add
cs
insb
inc
cmc
sub
stos
pusha
ds
out
sysexit
out
enter
mov
sahf
das
std
dec
push
psadbw
mov
mov
pop
int3
into
dec
pop
mov
call
xchg
pop
jg
ds
jge
rcrl
dec
cltd
push
jo
adc
pushl
add
je
fwait
sub
and
andl
add
subb
fwait
xor
push
add
rorl
pushf
mov
ret
dec
sbb
out
inc
pop
pop
mov
push
cltd
mov
adcb
fldl
pop
mov
sbb
pop
movsl
xor
mov
jb
pop
adcl
aaa
or
out
mov
imul
sbb
mov
int
add
insb
jns
mov
xor
dec
addl
insb
inc
sub
filds
or
adc
jl
aam
cltd
testl
movsl
inc
mov
mov
stos
and
outsl
pop
xchg
push
sub
dec
adc
add
jmp
sahf
or
ss
xor
xorl
das
xsave
inc
jbe
mov
loop
adc
rorb
and
adc
pusha
sbb
inc
sbb
mov
push
dec
rcrb
stos
iret
xor
std
cmpb
iret
cmpb
je
adc
cmp
test
jmp
fbld
int3
and
add
cmc
and
xchg
outsb
push
inc
mov
jns
js
out
pop
and
ja
lea
fcmove
xchg
loope
stos
mov
out
sti
mov
ljmp
stos
test
jge
popf
cltd
jmp
int3
loope
sub
push
xor
or
cli
push
in
in
mov
push
enter
cmp
ror
outsb
lahf
sbb
pop
xchg
hlt
fwait
in
adc
jl
add
inc
test
inc
adc
and
lcall
pusha
in
stc
lcall
jne
adc
repz
jne
fwait
mov
clc
mov
xor
daa
dec
adc
push
sbbl
xchg
rcll
gs
js
out
rolb
and
xchg
sbb
jo
out
lcall
dec
inc
xor
insl
sbb
jbe
cmp
pop
daa
push
jbe
clc
jne
mov
jmp
mov
gs
dec
push
daa
loop
mov
mov
mov
orl
push
pusha
inc
mov
lret
roll
sub
adc
xlat
cs
or
out
test
mulb
inc
mov
fcmovnb
and
lods
cmpsl
inc
daa
push
or
mov
shlb
xlat
gs
mov
pop
xor
xchg
test
lds
xor
out
or
pop
adc
mov
in
iret
movsl
rclb
ret
sub
cmp
mov
enter
lahf
roll
dec
mov
pusha
pop
aam
xchg
cmp
sarl
inc
mov
fmull
aaa
out
xchg
ret
mov
popf
addr16
push
adc
fs
loope
ret
stos
xlat
pushf
fs
out
jne
and
out
pop
lea
cli
aas
cltd
inc
enter
cmp
in
sub
add
stc
inc
stos
pop
lds
mov
push
push
in
push
sub
iret
inc
std
dec
inc
cmpsl
dec
hlt
out
jle
jmp
push
lret
adc
int
repz
mov
xchg
rcll
loope
ss
test
inc
jmp
aaa
sbb
hlt
in
call
jae
repnz
cwtl
loope
outsb
imul
outsl
mov
or
pop
jle
xchg
mov
fwait
mov
test
dec
push
insl
test
gs
xor
mov
push
mov
lahf
es
frstor
out
rcll
dec
jle
loopne
ret
push
lds
mov
stc
lcall
xor
fisttpll
decl
mov
addb
adc
fnstenv
adc
cld
sbb
pusha
pop
xor
cli
inc
mov
adc
and
jnp
test
mov
icebp
lea
es
xor
out
push
lret
jmp
dec
mov
push
ljmp
bound
push
cmpsb
mov
mov
repz
mov
je
sub
lock
mov
inc
test
jae
adc
out
push
imul
inc
cmp
data16
cmc
idivl
mov
push
rolb
gs
xchg
sub
xor
int3
lods
mov
inc
jb
cld
rolb
pop
rorb
dec
movsl
js
push
enter
jo
cmp
inc
and
jo
dec
ja
sub
ds
cmpb
and
jb
js
aas
and
pop
shl
inc
jmp
add
imul
lahf
aam
and
stc
pop
mov
pop
addr16
lcall
cmpsb
mov
jle
pop
fwait
sub
lret
adc
mov
mov
xor
movsl
dec
inc
je
test
jl
add
jno
sub
clc
inc
push
je
hlt
pushf
xorb
fs
mov
xchg
sbb
xchg
jo
sbb
das
push
inc
mov
cmp
bnd
and
sbb
mov
push
lds
push
push
dec
mov
out
sub
push
in
loop
jne
aad
sbb
push
inc
int
pop
sahf
sbb
out
ja
cmp
in
cltd
icebp
cmpsb
sbb
mov
pop
sub
sbb
lahf
mov
jle
add
nop
mov
dec
cmp
sarb
enter
mov
mov
jo
inc
fcoms
subl
adc
cwtl
cmpsb
sbb
mov
lret
std
scas
jns
adc
adc
loope
sahf
dec
fisubrs
cmpsl
pop
insb
dec
xor
and
pop
or
push
push
pop
stc
sbb
jmp
ret
mov
jbe
addr16
pusha
in
imul
daa
cmp
pop
loope
shl
push
sub
dec
mov
jno
loop
pop
mov
sbb
rorl
iret
std
cmp
jl
mov
jbe
push
leave
inc
mov
stos
cmp
loopne
shr
filds
inc
aaa
and
pop
or
xor
push
sub
dec
push
ret
cwtl
mov
stos
ret
repz
call
mov
pop
xor
cs
stos
out
adc
insl
aad
sub
out
shll
das
orb
xor
fidivl
cli
dec
sub
loope
rcrb
xchg
int3
fwait
pop
mov
ficompl
nop
lahf
ljmp
sub
jno
pop
mov
negl
ficoms
jno
fistps
sbb
mov
mov
xor
andl
int
in
xchg
and
fistpll
out
inc
push
add
add
pushf
add
xor
fisubrs
pusha
xor
pop
push
or
pop
dec
popf
inc
xor
xchg
sbb
int
xchg
push
xchg
add
jmp
aad
xchg
cs
in
cwtl
sub
fld
ret
scas
inc
mov
push
cs
add
adc
fsubrs
imul
dec
sbb
call
dec
mov
add
das
mov
jp
pushf
or
loopne
sub
adc
das
repz
sub
test
pusha
lods
arpl
hlt
in
mov
pop
adc
adc
data16
lret
sbb
addr16
flds
sar
jecxz
inc
call
add
mov
sub
sub
enter
inc
and
lock
enter
jmp
xchg
sbb
adc
rorl
fldenv
mov
loope
imul
sub
lds
dec
mov
cmp
add
scas
out
jp
arpl
mov
or
xchg
xchg
mov
push
sub
xchg
push
mov
fidivrs
cwtl
insl
ja
sti
cmp
addr16
cltd
outsl
jb
pushf
mov
fidivs
sbb
scas
and
scas
addr16
mov
sub
stc
jmp
mov
arpl
test
inc
je
test
int3
adc
jns
adc
push
jne
dec
add
and
andl
sbb
in
loopne
mulb
inc
shrb
icebp
dec
cmpl
cmpl
lret
lahf
in
movsb
pop
outsl
loop
mov
mov
xchg
mov
out
mov
sub
push
jle
fsubrs
xchg
and
pop
or
bound
inc
xchg
fists
insb
add
sahf
mov
sub
in
test
daa
cmc
jecxz
rcr
jp
movsl
pavgw
push
xchg
xor
rol
xchg
mov
xor
imul
inc
bound
adc
mov
call
inc
xor
vsqrtps
sub
adc
push
cmp
sbb
pop
pop
adc
cmpsl
sub
xchg
mov
shll
test
sub
ljmp
dec
es
nop
stos
add
cmp
adc
in
mov
mov
mov
xchg
add
loopne
dec
add
ja
pop
sahf
or
mov
clc
int
mov
fs
aas
xchg
imul
sub
into
jo
push
jmp
mov
add
jne
shrl
dec
dec
dec
push
test
jl
push
test
mov
aas
adc
les
mov
fwait
insb
scas
aad
popa
xchg
fldt
cs
jb
scas
aaa
sbb
xchg
jno
xchg
xchg
inc
jne
std
out
aam
test
mov
mov
cwtl
sahf
inc
aas
jnp
ljmp
xor
repnz
push
int
xchg
dec
lods
cmpsb
mov
sbb
pop
out
fwait
pop
hlt
xchg
push
add
inc
cmpsl
adc
bound
pop
jmp
sahf
inc
mov
out
mov
jnp
orb
cmp
mov
adcb
popf
movsb
fldenv
adc
jmp
mov
gs
test
add
popa
and
xor
sub
outsl
sub
pop
movsb
mov
loopne
loopw
popa
addr16
mov
mov
lcall
pop
bound
aam
mov
dec
dec
aad
jno
ljmp
xchg
or
xchg
sub
sub
addr16
and
insb
into
adc
push
mov
sbb
popf
shll
out
setle
push
mov
icebp
fcom
inc
pop
into
jmp
push
repnz
mov
repnz
push
add
jp
sub
fidivl
push
test
sbb
add
inc
or
pop
and
sbb
stos
cmp
fisubl
pop
xchg
pop
adc
cmp
test
lret
mov
lock
xchg
push
mov
push
pop
movsl
xor
jae
pop
cmpsb
lea
xchg
popa
test
cwtl
push
stos
mov
popa
jne
nop
fcmovnu
sub
fwait
lahf
sbb
enter
les
imul
mov
mov
imul
push
mov
and
jns
subb
jno
shlb
add
lods
and
aaa
xorb
into
mov
aam
movaps
nop
pop
adc
xorl
ret
notb
and
lret
aad
mov
sbb
xchg
xlat
fdivl
xchg
outsl
lea
fisttpll
adc
push
in
stc
daa
fsubrl
inc
sub
out
ficoml
xor
sbb
fidivrs
inc
mov
ret
xchg
mov
ret
int3
mov
dec
and
jb
insb
or
addr16
daa
aad
int
in
mov
or
out
js
divl
pop
lea
cmpsb
jnp
mov
mov
arpl
adc
push
js
inc
adc
cwtl
scas
out
inc
lret
dec
jns
xlat
or
jle
data16
ljmp
push
scas
out
jmp
sub
jbe
push
dec
cmp
filds
sub
inc
pop
fildl
lret
popl
cmpsb
and
icebp
inc
jle
sbb
cs
ss
xor
or
jle
sbb
push
das
sbb
sbb
fdivrs
add
roll
paddd
test
or
cmpsl
aas
jb
int3
or
lcall
mov
push
add
sub
adc
jg
xlat
pushl
or
add
arpl
xchg
cmpb
leave
push
stc
into
push
or
or
mov
jmp
insl
sub
and
xchg
rcrb
cli
jmp
jns
addr16
inc
xchg
popf
inc
mov
push
test
xchg
fstps
cmpb
out
std
lret
push
jp
loope
cli
xchg
int
negl
arpl
lret
frstor
lret
pop
push
mov
loopne
icebp
and
and
push
mov
cmp
pop
rclb
test
mov
mov
or
ljmp
inc
dec
fcoml
sub
js
inc
lret
inc
push
movsb
push
dec
cmp
lea
or
in
jle
int
sub
sbbl
add
aaa
repnz
xor
fldl
xlat
pusha
out
pop
xlat
sbb
adc
ret
ds
cli
sub
shll
dec
clc
adc
and
or
xchg
cwtl
xorl
lret
lock
es
mov
mov
or
rcrb
cmpsb
loope
fildll
mov
mov
mov
inc
sbb
icebp
xor
rcrl
xor
or
mov
sbb
sbb
or
in
mov
xchg
pushf
adc
add
lahf
or
or
mov
or
movsl
jp
pop
into
inc
or
add
push
cmpsb
adc
out
mul
sbb
test
pusha
mov
add
stos
ljmp
repz
pop
nop
mov
lahf
jns
mov
push
outsl
inc
jle
jge
mov
mov
dec
mov
jae
cmc
xor
xchg
insb
ret
scas
dec
xchg
add
sub
mov
add
mov
and
push
popa
jb
movsl
or
inc
jne
in
jle
scas
pop
sub
add
inc
xor
inc
jmp
xchg
add
mov
jle
jecxz
and
cltd
cmp
sub
loopne
dec
movsb
inc
or
ds
out
stos
lahf
rcr
sub
mov
cli
jbe
out
fisubl
pop
dec
icebp
cmp
clc
xchg
or
push
loope
sahf
sbb
sbb
addb
out
mov
sbb
movsl
mov
sbb
cmpsl
arpl
or
push
cmp
mov
insl
or
pop
inc
add
xchg
test
lods
lcall
aad
adc
inc
jl
dec
jns
pusha
roll
and
push
imul
inc
jne
jg
or
aas
movsl
push
lcall
pushf
test
inc
movsb
imul
cmpsb
xor
sub
add
stc
daa
imul
jge
pop
dec
adc
mov
sbb
or
out
shlb
mov
cmp
push
imul
fstp
push
jg
sbb
mov
movsb
xlat
clc
bound
test
das
inc
ret
mov
cmp
mov
enter
cld
into
jbe
out
les
mov
push
in
cli
inc
xchg
add
scas
xchg
cs
movzwl
test
ja
or
inc
sahf
cmp
sbb
popf
push
andb
push
das
adc
lea
mov
jl
mov
xchg
int3
add
xchg
call
fiadds
mov
or
push
lcall
subb
mov
jl
rorl
test
std
lea
cmp
iret
loope
mov
ret
ja
sub
jbe
cld
in
mov
mov
pushl
add
js
lret
inc
into
dec
mov
mov
comiss
jge
sahf
xchg
pop
ss
lret
imul
push
std
xlat
xchg
iret
pop
pushf
dec
lea
stos
out
aaa
adcb
mov
loop
into
sub
or
jne
cmp
fwait
push
inc
xchg
mov
out
mov
cmp
add
dec
pop
lods
out
mov
in
loope
shlb
inc
rcrb
push
jae
push
mov
icebp
ds
mov
cmpsb
pop
jg
jge
out
jo
cmp
in
iret
je
std
push
xor
dec
sbb
xchg
push
out
repnz
int3
mov
dec
and
add
mov
and
cmpsl
sub
mov
lods
ret
leave
xlat
push
scas
mov
cli
pop
add
clc
out
dec
adc
jmp
lahf
or
movsb
lds
pop
in
pop
sbb
jns
inc
push
repz
xchg
push
bound
gs
mov
in
lock
add
div
lock
rcl
mov
push
adc
jecxz
sar
inc
into
lret
inc
insb
mov
or
test
popl
stos
pop
test
jl
ds
dec
push
and
fmulp
jp
sahf
inc
pop
dec
scas
sbb
add
pop
push
scas
cli
mov
in
jl
test
imul
mov
or
pop
cmpsl
mov
das
xchg
fwait
dec
scas
test
sbb
ss
fisttpl
pop
js
aam
sbb
mov
xor
add
cpuid
cmc
mov
jno
ret
push
out
and
xchg
fs
sarb
adc
hlt
fsub
or
sbb
add
sbb
mov
pop
lea
push
imul
cmpsb
icebp
mov
push
imul
jecxz
adcl
pop
in
xchg
outsl
das
cld
push
loope
popf
sbb
mov
add
jb
dec
sbb
test
dec
lods
pop
shrb
sub
mov
mov
jp
jne
out
or
scas
gs
test
sbb
push
mov
or
lcall
repnz
mov
insb
fs
ret
movsb
sub
addr16
adcl
mov
push
xchg
test
cmc
add
cwtl
pop
lea
pop
sbb
call
ja
and
movsb
push
js
mov
pop
mov
shr
mov
jnp
stos
cmpsb
pop
aad
out
push
and
push
cmp
repnz
loopne
xor
fs
clc
aam
or
xchg
dec
jno
cmpsb
sbb
insb
jno
push
jne
or
inc
sbb
inc
push
neg
xchg
pop
movsl
pop
mov
mov
inc
pop
fildll
mov
je
lods
add
dec
and
inc
mov
and
fisubrs
je
mov
push
pop
pop
dec
mov
mov
or
clc
data16
stos
add
and
dec
cmp
out
or
cli
adc
pop
add
mov
and
js
mov
das
adc
push
dec
jle
dec
lea
pop
fisttpl
mov
fistpl
je
cmpsl
mov
emms
add
push
inc
mov
adc
xchg
outsb
pop
icebp
rep
fs
cmp
mov
xchg
mov
jno
fiadds
sub
movsl
mov
std
mov
mov
mov
outsl
pop
stos
cmpsb
xor
or
sbb
out
in
ret
sahf
ret
and
sub
jp
sbb
mov
nop
iret
popa
cli
lea
jmp
flds
add
ret
test
inc
jns
rcr
stos
fs
mov
in
cmpsl
mov
push
push
cmp
fisttps
and
mov
adc
push
xorl
and
xor
lds
mull
adcl
inc
jae
inc
pop
out
icebp
pop
rcl
pop
mov
mov
loop
popa
cmp
xor
pop
cmpsl
xlat
pop
cltd
jns
cmp
xchg
out
push
ds
cmp
fs
sbb
fisubl
and
jge
inc
xor
cmp
or
xchg
loop
adc
mov
jo
dec
call
test
mov
inc
xchg
dec
inc
popf
inc
jle
push
imull
leave
push
scas
fdiv
cmp
xorb
out
jne
push
sub
lds
push
test
and
int
cs
popf
dec
cmp
aas
mov
dec
pop
fisttps
mov
fimuls
xchg
ljmp
sub
or
jo
cld
imul
inc
xchg
stc
pushf
xor
inc
jnp
cmpsb
jnp
call
jecxz
sti
out
mov
clc
jb
add
xchg
pop
push
std
add
js
add
mov
push
sub
or
imul
pop
xor
dec
cs
insl
sub
loop
sbb
out
bound
loop
lcall
ss
repnz
jnp
or
scas
sub
aaa
gs
insl
negb
in
mov
ljmp
mov
add
jmp
xchg
push
imul
xor
jbe
adc
fisttpl
xchg
sbb
insb
xor
push
frstor
shl
xchg
in
clc
pushf
mov
push
and
cltd
scas
ss
or
daa
in
loop
js
gs
push
shlb
in
test
insb
or
sub
popa
cltd
shll
in
fdivp
sub
xchg
push
mov
push
pop
jns
push
ja
pop
pop
push
fisttps
dec
mov
cltd
add
dec
mov
es
push
in
fbld
inc
andl
sarl
xchg
loop
adc
mov
faddp
or
jp
adc
xchg
das
popf
mov
fwait
add
es
pop
xorl
scas
nop
cmp
ja
dec
mov
push
shll
lods
mov
jns
or
movsl
or
lock
lods
loopne
outsl
pop
push
pop
or
push
adc
dec
sbb
xor
jne
mov
xorb
mov
shlb
sub
test
sub
clc
jg
sti
dec
jno
fstpt
xor
add
jno
mov
sbb
aad
fiadds
aas
mov
iret
fists
jne
inc
cmpsb
cld
sbb
jmp
sub
pop
push
ret
jo
mov
movsb
bound
add
shll
ss
aas
adc
jae
outsb
cli
ret
enter
loop
or
inc
aas
das
neg
int3
test
into
dec
xorb
and
test
pop
adc
jne
and
out
nop
imul
test
pop
push
mov
rcl
shll
dec
jp
pop
adc
mov
xchg
mov
or
or
xchg
fwait
movsb
adc
mov
in
or
pop
scas
sbb
inc
add
clc
jno
mov
cmp
icebp
stc
or
add
inc
jmp
imul
std
push
push
gs
sbb
imul
stos
repz
cmp
rcl
ds
push
jns
jp,pt
mov
fsubrs
and
or
inc
push
and
jp
movsb
mov
scas
je
push
out
xchg
dec
xchg
pushf
and
loopne
dec
in
mov
lea
outsl
jmp
jecxz
push
pop
push
or
push
push
shl
imul
and
cmpsb
xchg
stos
dec
jge
popf
mov
inc
pop
fistpll
out
lods
push
jnp
sahf
lahf
fdivrs
stc
in
or
cmp
xor
mov
push
mov
outsb
lahf
lret
push
movsl
out
movb
or
add
jae
iret
mov
insl
out
aad
popl
and
lods
dec
cmpsl
sbb
fnstenv
rcl
call
jnp
push
lods
pop
jne
in
repnz
push
jg
cmp
cmp
and
enter
and
xorl
rorl
sbb
push
ret
ja,pt
das
insb
sub
jo
and
inc
xor
adc
jae
jmp
adc
into
adc
ficomps
mov
ds
sub
sarl
ljmp
hlt
filds
cmpsb
jmp
int3
test
dec
cmp
data16
inc
loopne
dec
test
out
cmp
scas
mov
cmp
inc
or
ja
mov
push
pop
mov
mov
data16
loopne
int
xor
outsl
fnsave
mov
cmp
inc
pop
add
rcrb
push
in
cld
out
cmp
adc
mov
das
pushf
and
ror
iret
pop
cmpsb
ret
sbb
push
mov
out
lcall
adc
std
fistpll
xchg
fcmovnu
push
icebp
mov
sbb
hlt
orb
mov
push
jae
xor
jne
les
push
cmp
push
pop
push
test
scas
xor
mov
lea
negl
mov
xchg
cmp
and
push
mov
and
call
cmp
ret
add
movsb
pop
inc
mov
das
xchg
mov
mov
roll
mov
mov
out
stos
insl
push
test
push
jle
imul
lods
xorb
sbb
add
scas
mov
outsb
in
js
xor
leave
jg
jecxz
mov
lahf
iret
call
mov
push
fistpl
or
js
repz
movsl
xlat
cs
jmp
jnp
jle
sbb
jp
sbb
sub
dec
call
mov
andb
sub
sub
or
mov
gs
fwait
xchg
lahf
rcrl
jp
mov
fwait
mov
mov
add
stos
xlat
mov
imul
lea
sti
jno
cs
mov
push
ret
xor
xor
xor
fisubs
testl
cmpl
bound
pop
push
hlt
mov
mov
aam
inc
cmp
mov
or
xor
popa
scas
fisubs
lods
xchg
pop
fisttpll
mov
pop
inc
mov
insb
cltd
mov
jnp
xchg
int3
pop
cmpsb
inc
and
adc
shrb
xchg
adc
sbb
adc
ljmp
sub
sbb
lcall
inc
arpl
orl
push
lcall
pop
std
cmp
mov
lock
mov
push
and
mov
nop
fsubl
iret
movsl
push
jne
inc
daa
cmp
fstl
sbb
jbe
adc
pop
leave
sub
add
push
xchg
add
push
in
sub
cs
jae
mov
lcall
dec
xchg
scas
mov
mov
es
int
lahf
scas
mulb
xor
cmp
jl
cmp
push
cmp
mov
mov
mov
jo
repz
stc
adc
scas
sub
jb
sbbb
mov
dec
aad
sub
pop
cmp
orl
lahf
mov
ja
mov
dec
cmp
add
lock
rsm
bound
xor
fldl
dec
popa
xchg
insb
push
pop
xor
cmp
loop
mov
push
add
lret
add
and
scas
pop
jnp
in
test
pop
xor
pop
jecxz
sub
xchg
movsl
mov
leave
enter
pusha
jp
jbe
in
pop
ficomps
mov
out
cmp
or
adc
add
lahf
inc
push
sub
inc
mov
js
scas
jns
gs
and
test
out
dec
or
mov
sub
dec
add
out
fldt
xchg
flds
mov
adc
pop
mov
or
pop
test
xor
dec
das
or
addr16
lret
push
fnstsw
pop
add
mov
cmpsb
adc
xchg
adc
mov
push
stos
ffreep
fucomp
and
call
sti
sub
inc
outsb
xchg
popa
cmc
sbb
pop
push
push
mov
add
lret
mov
jmp
xchg
inc
fldlg2
out
push
pop
cmp
outsb
test
push
ret
pop
in
sarb
movsb
mov
fisubrl
mov
addr16
call
cmc
in
cmp
les
insl
movsl
mov
mov
or
sub
sub
imul
test
cmpsb
or
jb
mov
stos
cmp
mov
fwait
mov
js
cmc
jne
bound
mov
pop
push
inc
cld
js
out
lret
or
jb
loope
insl
pop
xchg
in
or
push
mov
mov
sahf
shrb
repz
cmpsb
lcall
hlt
clc
jg
jl
out
shrb
call
jp
rcr
loop
mov
enter
aad
mov
repnz
movsb
push
mov
orb
sub
xor
stos
dec
jle
leave
push
adc
cmc
sbb
mov
sub
jecxz
fisttpll
pop
iret
aam
push
shll
jg
mov
cmpl
inc
xchg
je
cmp
cmp
daa
push
push
ficoml
mov
fwait
sub
cwtl
xchg
lahf
inc
dec
fcoms
out
xchg
insl
jmp
xchg
fcmovnbe
shrb
and
inc
inc
test
rcrl
pop
mov
cmpsb
repz
mov
add
adc
loop
pop
push
cli
cli
sub
adc
cmpsb
pop
pop
and
sbbl
jno
and
xlat
aas
cld
movsb
adc
int3
outsl
xchg
mov
mov
mov
dec
out
cmp
xchg
sarl
outsb
cmpsl
bound
cmp
pop
rolb
int3
and
xor
pop
inc
mov
daa
aam
lea
scas
cwtl
cmp
shlb
loop
lahf
scas
and
sbb
and
mov
adc
mov
call
or
xchg
xchg
xchg
adc
in
pop
hlt
mov
popa
pop
and
mov
adc
cwtl
jl
sbbl
jle
scas
daa
jb
adc
scas
pop
dec
rcll
cmpsl
add
imul
popa
ljmp
aas
loop
out
mov
sbb
xchg
add
jbe
xchg
adc
out
push
psrlq
bound
mov
mov
movsb
xor
in
pop
jl
mov
inc
xchg
and
pop
sbb
mov
sbb
jbe
rcl
inc
bnd
into
imul
add
add
ljmp
cmp
or
inc
iret
pop
add
xchg
arpl
lahf
ljmp
loop
imull
in
mov
divb
mov
pop
pop
pop
out
adc
mov
and
xor
mov
jae
cmp
fisttpl
shll
push
add
push
push
je
xchg
jle
add
sbb
mov
leave
mov
xor
push
ss
cs
push
cmp
std
mov
xchg
jae
shll
sbb
push
mov
mov
ja
push
xor
adc
shrl
leave
cld
aaa
das
or
push
dec
adc
xor
je
in
mov
mov
and
adc
mov
push
insl
push
sbb
hlt
dec
lea
or
jl
test
out
sub
xchg
repz
add
xor
out
jne
addb
mov
pop
xchg
adc
leave
sbb
pop
idivl
outsl
pop
fcmovnbe
test
lret
imul
pop
inc
mov
pop
fwait
mov
add
push
mov
push
jl
cld
fs
mov
mov
push
add
ds
dec
inc
push
xor
jnp
mov
add
popf
or
adc
fcomip
jo
adc
xchg
test
push
imul
adc
lods
popa
lods
add
push
add
ljmp
pop
xchg
cmp
xor
xor
pop
mov
mov
cwtl
jge
mov
xchg
mov
inc
xor
rorb
bound
popf
cs
loopw
jbe
xor
push
push
jno
fwait
adc
loopne
fsts
fwait
mov
cmp
shlb
inc
xor
enter
rcrl
mov
jmp
andl
inc
xor
push
out
sbb
add
inc
repnz
imul
inc
adc
ret
inc
fwait
mov
mov
pop
call
push
jl
add
in
lock
xor
cwtl
js
lds
aas
add
sbbb
mov
dec
popf
adc
std
repz
jno
mov
sbb
stos
sti
adc
fldenv
por
and
push
jb
insl
adc
adc
or
mov
negb
es
mov
loopne
in
mov
loope
sub
js
ret
es
mov
push
das
push
shll
push
sub
push
dec
dec
ds
rorb
add
nop
jnp
push
push
adc
jno
push
inc
jno
mull
add
movl
mov
in
adc
jne
mov
fbld
cli
lcall
xchg
stos
xchg
into
lods
pop
and
js
mov
lods
fwait
jb
jmp
nop
mov
outsl
and
loopne
cld
inc
in
nop
xor
mov
aaa
hlt
fadds
mov
mov
push
xchg
add
xor
loopne
sub
leave
fbld
add
mov
shrb
xor
lods
aaa
inc
les
ds
push
cmpsb
stos
pushf
inc
ret
sub
aas
insb
insl
mov
sar
aas
lret
or
test
cwtl
lahf
enter
or
movsl
dec
lahf
add
jns
pop
in
adc
cld
sub
xchg
mov
dec
xchg
lret
adc
jmp
repnz
cmpsl
mov
int
test
sti
jb
nop
mov
pop
sbb
fstps
subb
add
scas
test
or
mov
ja
jne
daa
popf
in
data16
mov
decl
cli
add
and
or
jne
cmc
fs
xor
in
aad
sub
mov
or
stos
repz
pop
jg
hlt
enter
mov
dec
jecxz
dec
mov
sub
mov
loopne
ror
imul
adc
lods
into
loopne
fs
mov
or
aam
pop
adc
pop
rclb
xchg
push
and
ret
scas
cmp
scas
cmp
out
ret
fisttpll
cltd
xchg
into
sbb
or
sub
jp
ret
sub
mov
mov
adc
out
mov
filds
push
sub
notl
mov
push
fstl
jge
enter
push
sub
sbb
inc
sbb
mov
and
shll
push
in
push
in
inc
test
test
jmp
addr16
in
hlt
mov
cwtl
movsl
cmpsl
sbb
cltd
ret
mov
popf
shl
bound
std
fsubrs
test
mov
and
adc
xchg
pop
mov
pushf
cmp
aaa
push
inc
add
hlt
xchg
xor
dec
mov
xor
sub
into
enter
mov
dec
add
sahf
jge
das
ret
jnp
mov
sub
inc
add
jno
push
hlt
sbb
imul
mov
popf
lret
pop
popa
fwait
ret
into
xor
mov
push
out
dec
jno
jb
cmpsl
xchg
repnz
mov
aad
add
mov
lcall
bswap
or
mov
cs
sarb
mov
inc
jmp
call
sbb
pusha
jp
pushf
sub
sahf
pop
xchg
xchg
scas
in
sub
inc
pop
stos
test
aas
dec
loopne
push
xchg
jno
clc
jmp
pop
lods
enter
dec
adc
fs
cmpb
cmp
xor
push
xor
adc
sbb
adc
int
test
jg
cmp
scas
lods
ss
cmp
push
push
xor
fistps
cmpb
sub
lea
lret
aam
and
xchg
sub
loope
jbe
je
andb
jne
enter
sub
dec
in
sbb
fmull
fidivrl
out
mov
sbb
data16
jp
pop
std
lcall
mov
add
cmp
dec
push
fdivrs
fsubrl
cmp
add
adcb
inc
loop
hlt
ljmp
inc
adc
jl
cltd
test
rcl
jo
push
outsb
push
push
sub
cmp
dec
fldl2t
xor
movsb
dec
xor
cmpsl
notb
mov
cmp
adc
loope
or
mov
flds
sbb
mov
pop
stos
dec
fldt
mov
cli
scas
pop
xchg
and
cwtl
shr
xchg
mov
jns
mov
push
dec
test
hlt
adc
test
dec
sti
cs
add
xchg
lret
cmpsl
insb
xor
cltd
jbe
gs
adc
aam
xlat
mov
xor
orb
sub
shl
out
mov
xchg
ss
jns
pop
push
test
movsb
imul
outsl
sti
dec
add
test
sub
mov
sbb
mov
jae
cltd
xchg
outsb
lcall
fldcw
js
adcb
nop
decb
ljmp
arpl
push
stos
jg
rclb
sub
ret
xchg
xchg
imul
sub
xchg
test
jae
in
inc
out
xor
pop
dec
imul
mov
nop
add
mov
cli
adc
lock
jns
dec
cltd
addb
sub
ret
dec
stc
push
sti
lods
pop
push
and
fsubs
inc
daa
mov
push
ja
bnd
push
add
mov
cmpsl
popa
loop
test
adc
inc
push
xor
sbb
in
out
cmpsl
add
call
jge
icebp
jmp
push
popf
cwtl
sub
das
fisubs
shrl
repz
pushf
movsl
push
iret
test
fsts
dec
sarb
and
lret
xchg
push
mov
jmp
mov
add
and
sub
inc
rclb
mov
xor
inc
fmull
push
xchg
mov
aad
add
jo
xorl
dec
loope
subl
in
mov
mov
xchg
shll
add
jg
out
leave
loopne
ret
ret
jg
rclb
jg
jmp
sbb
js
push
jne
mov
imul
mov
adc
outsl
xchg
das
or
orl
or
or
pop
mov
outsl
xor
sub
pushf
popf
and
cltd
es
imul
add
push
dec
cmpsl
ljmp
mov
or
cmp
lods
cmpsl
sub
mov
aas
icebp
icebp
nop
pop
sbb
xchg
lret
int
adc
xorb
xchg
aad
or
into
adcl
sbb
scas
dec
add
and
int3
inc
mov
fwait
and
popa
imul
push
lret
cs
aam
cs
add
mov
jno
xchg
sbb
ds
adc
lahf
ret
xchg
and
jno
sbb
sub
pop
xchg
mov
jns
mov
mov
std
insb
xor
aam
shlb
ret
daa
and
mov
mov
adc
jo
loopne
mov
lret
pop
sbb
ret
aad
fninit
ficoml
xor
pop
inc
imul
cmp
and
test
std
stos
push
sarl
ljmp
idivb
stc
mov
pop
dec
adc
push
or
adc
movsb
out
mov
std
enter
fwait
je
into
dec
sti
mov
mov
mov
sub
insl
jo
lahf
nop
sbb
fstps
std
cmp
ret
pop
fistpl
cmp
xor
push
and
cld
xchg
mov
or
xor
push
int3
pop
mov
fnstsw
dec
popa
push
lock
fs
sub
test
xlat
fwait
add
inc
cli
imul
js
clc
fstps
ret
add
inc
push
inc
xor
mov
dec
mov
push
bound
into
xor
pop
inc
inc
and
fs
add
jnp
mov
dec
sbb
jo
enter
mov
cwtl
test
dec
fstpt
andb
push
adc
add
mov
rorl
mov
aaa
push
pusha
push
test
mov
in
sbb
push
test
data16
fsubl
loopne
mov
mov
mov
ficomps
rorb
nop
xorps
mov
add
pusha
mov
into
mov
inc
or
sub
repz
dec
and
repz
mov
fstpl
mov
xor
xor
and
movb
loopne
loop
mov
hlt
repnz
jno
in
jbe
nop
ja
xor
inc
or
inc
es
or
shll
push
adc
ret
xor
inc
sbb
pushf
std
sbb
mov
jb
push
mov
es
shl
pusha
cmp
imul
mov
or
sbb
inc
mov
xchg
push
ds
insl
cmp
jne
jne
sub
sub
rorb
loop
fsubp
addr16
inc
sub
dec
pop
or
mov
mov
sub
inc
test
stc
ss
cmc
std
aaa
aad
mov
cmp
mov
pop
or
mov
mov
fwait
cmc
out
movsl
repz
or
sbb
js
in
push
adc
shlb
mov
jecxz
popa
mov
arpl
std
int3
inc
mov
imul
lds
lock
jo
mov
push
cmp
inc
sub
cld
or
inc
cltd
int3
in
mov
lds
xchg
xor
jecxz
xor
mov
into
popf
jne
cld
adc
dec
mov
in
jne
inc
rol
dec
shll
popf
pop
sti
push
repz
call
rolb
push
ja
mov
or
in
sub
icebp
lahf
inc
inc
pop
shlb
push
push
movsl
push
ja
pushf
loope
inc
outsl
sbb
jae
adc
mov
in
fwait
jo
sub
sub
data16
das
ljmp
fstpt
pusha
mov
lods
mov
lahf
shlb
inc
filds
outsb
pop
push
sbb
push
or
jno
sbb
cmp
mov
roll
ljmp
andl
das
fwait
xchg
aaa
mov
lcall
inc
dec
sbb
ds
dec
push
orb
adc
fcomp
out
out
pop
fadds
stos
add
js
cs
cmpsl
jbe
out
jge
push
into
js
push
ret
movsl
loope
int
mov
sti
lock
xchg
push
out
cmpl
scas
pause
ljmp
out
jl
pop
sub
dec
rcll
das
sti
jp
mov
popf
es
stos
mov
popf
popf
iret
insl
cs
out
add
shll
hlt
mov
test
and
jp
xor
in
cmpsl
mov
jno
mov
pop
adc
add
aad
xchg
adc
adc
and
add
sub
and
cld
addr16
out
aaa
mov
inc
dec
in
dec
add
pop
sbb
lods
add
lahf
cmp
adc
cld
pop
out
insl
sbb
xchg
adc
sbb
mov
ret
aam
mov
or
dec
negb
loop
test
outsb
jb
test
test
mov
lods
loopne
imul
xor
ds
in
cmpsl
xchg
xchg
xchg
mov
jae
inc
push
cmp
mov
es
push
pop
cmp
jl
inc
nop
cs
xchg
dec
push
jecxz
adc
test
adc
call
pop
arpl
fildl
pop
mov
test
cmp
cmp
sbb
jnp
xor
pop
jae
mov
ja
xchg
jg
mov
mov
and
jnp
loopne
inc
test
das
fmull
add
andl
icebp
push
jne
aas
pop
pop
mov
lods
push
ret
xlat
mov
test
jecxz
or
cmp
pushf
sbb
rcrl
sbb
insl
outsl
mov
and
clc
andb
mov
jo
stos
fistl
jl
cmp
sub
mov
mov
xchg
in
or
inc
hlt
test
xlat
adc
sar
cli
sbb
popf
rorb
sbb
sbb
jnp
xchg
leave
in
bound
push
clc
sbb
dec
jmp
dec
dec
pop
jmp
pusha
sub
xor
xlat
push
sub
mov
fnstenv
push
sub
rcrb
aas
fucom
cmp
aas
push
js
iret
cmp
decl
pop
addr16
aad
ret
jne
lods
cltd
jo
jge
imul
je
or
subb
adc
push
jno
shlb
mov
rclb
jecxz
push
lcall
loopne
idiv
dec
movsl
je
xorl
retw
adc
xchg
push
rcll
push
sbb
xchg
mov
flds
outsb
and
lea
adc
mov
push
call
subl
ds
repnz
into
jns
fstl
or
cwtl
jge
popa
into
ljmp
cmp
dec
xchg
adc
or
add
jo
test
mov
mov
out
push
mov
in
in
andb
test
aad
fimull
xchg
mov
xor
arpl
jecxz
inc
scas
cmp
mov
dec
and
xor
sti
nopl
adc
jecxz
rol
sbb
pmullw
mov
xchg
add
sti
jb
out
xor
fisttps
push
mov
cmpsb
repnz
mov
push
movsl
sbb
or
pop
aam
cmc
cwtl
repnz
test
cs
cltd
cmp
or
rorb
fdivr
clc
std
ja
ljmp
mov
push
add
dec
pop
unpcklps
ljmp
les
dec
mov
xchg
inc
sub
mov
or
jl
in
loop
jecxz
shlb
enter
xor
into
adc
lea
int
pop
cli
ljmp
mov
aam
jnp
mov
pop
outsb
clc
mov
fstps
mov
bound
adc
sahf
pop
fcomps
insl
pop
or
pop
xchg
sti
sbb
pop
orl
push
pop
and
lods
je
int
pop
sub
dec
jmp
sbb
pop
mov
and
or
or
loop
ja
pop
jmp
inc
dec
int
lret
scas
cmp
jle
loope
xor
out
pop
mov
dec
mov
cmpsb
mov
lcall
ror
mov
push
shl
dec
adc
cmc
lret
js
xor
xchg
mov
jle
mov
imul
mov
mov
cld
pop
dec
daa
sbb
sbb
movsb
xchg
stc
sbb
jbe
cmp
pop
xor
inc
xor
and
jne
mov
cltd
dec
imul
divl
add
mov
lret
cmpsl
insb
push
pop
imul
sbb
add
sti
mov
mov
cmp
pop
stos
pop
jle
das
xor
sub
scas
lods
std
xchg
scas
out
subl
pop
mov
and
fwait
push
sbb
cmp
mov
enter
jo
shrl
mov
push
dec
in
lock
mov
jns
mov
xor
push
dec
push
jmp
add
pop
mov
fmul
mov
cmc
cmp
aad
xorb
pop
fsubrs
out
mov
fidivl
or
push
or
xor
mov
pop
data16
dec
mov
icebp
cli
push
jns
jbe
lods
imul
cwtl
fnstenv
mov
mov
lods
cltd
pop
cmp
xor
imul
test
fisttps
pop
dec
dec
add
popf
bound
dec
jae
shll
mov
cli
sub
shrb
pop
loope
into
lcall
in
mov
add
push
popf
int
add
sbb
xchg
pusha
hlt
push
cwtl
gs
add
xor
aaa
sub
shl
div
repz
les
cmpsb
in
sub
int
popf
dec
mov
leave
in
scas
xchg
int3
addl
andl
push
movsl
sbb
pop
jno
dec
adc
mov
inc
pop
int
shrb
mov
sub
push
sub
popf
leave
mov
jmp
mov
popf
data16
sbb
icebp
mov
fs
insl
fwait
repz
mov
inc
dec
sbb
fidivrs
adc
lea
test
inc
push
inc
jns
xchg
jb
cld
test
stos
or
sahf
sbb
mov
enter
add
addb
mov
dec
adc
cmp
mov
lock
sti
lahf
scas
adc
fdivrs
push
popa
mov
insl
xchg
xlat
sub
xor
lcall
cmc
sbb
dec
mov
lea
shll
loopne
pop
test
shr
xor
fcompl
jb
and
int
rcrl
mov
rcrl
leave
scas
lret
out
mov
mulb
lcall
jne
in
cld
lock
sbb
mov
dec
negl
mov
aam
fisubrs
xor
es
push
in
lahf
cmp
mov
les
fcomps
dec
sub
pop
jnp
movaps
adc
repz
scas
mov
cmp
idivb
inc
lahf
popa
mov
mov
sbb
push
addl
outsb
add
je
frstor
pop
xlat
fsubrp
dec
lret
repnz
insb
push
scas
addb
adc
out
cwtl
mov
icebp
mov
scas
aaa
mov
and
fsts
push
fs
dec
sbb
fldcw
cmc
lahf
loopne
adc
sbb
ds
lods
es
out
movsb
sub
faddl
push
scas
xchg
xor
pop
xchg
mov
sub
or
adc
and
adc
push
push
add
jne
push
movsl
iret
jns
adc
hlt
mov
fdivl
jbe
xor
and
daa
jp
jl
repz
mov
les
push
or
mov
xchg
jnp
js
out
lret
cmp
add
mov
mov
jbe
cmpsl
jbe
push
int
mov
cs
and
cltd
cmp
cmp
rcll
xchg
aam
mov
jno
jg
xor
mov
mov
jmp
imul
repnz
movsb
mov
xor
mov
pop
cmp
add
cmp
adc
sets
jns
outsl
cmp
in
fistl
setno
mov
jns
in
jns
mov
and
fimull
stc
movsl
aam
xchg
sbb
out
adc
call
negl
xchg
orb
aad
test
gs
ss
je
or
notb
add
aad
icebp
fucomi
push
sub
shlb
jle
push
add
lret
mov
fcoml
mov
aaa
orb
pop
push
dec
push
fnstenv
out
push
push
and
cld
mov
insb
clc
lds
xlat
scas
clc
cwtl
stos
fs
icebp
push
bound
sahf
mov
shrl
fstl
aas
mov
cmp
push
aad
fidivl
gs
mov
adc
int3
and
call
test
cmp
test
pop
sub
movsl
mov
and
lea
push
push
clc
jns
sbb
mov
dec
into
inc
adc
je
jo
sub
aaa
cmpsb
inc
mov
dec
aad
jbe
les
push
push
pop
shlb
add
ret
lcall
pop
fwait
aas
mov
movsb
push
mov
rcrb
std
in
jb
jmp
jae
mov
inc
out
cli
out
subl
xor
imul
sub
mov
aas
into
call
push
inc
mov
incb
testb
xchg
das
das
dec
idivl
std
fdivs
ljmp
jmp
add
xchg
jecxz
lds
jb
cmp
ror
xchg
outsb
test
adc
push
and
rcrb
cmpsl
sarl
pushl
jno
jge
and
mov
rorl
jnp
imul
dec
or
gs
mov
inc
jle
inc
jmp
xor
mov
movsb
dec
addr16
in
push
imul
cmpsb
rol
xlat
push
jae
scas
inc
push
fisubrs
adc
add
push
testl
movsb
pop
stos
cmp
inc
adc
aad
jle
dec
test
insl
jnp
mov
jp
sbb
push
xchg
mov
stos
sbb
out
imul
xchg
inc
mov
movsl
xor
mov
push
jp
sub
mov
jp
shlb
sbb
into
les
sbb
aas
mov
jecxz
jno
lret
pop
cli
mov
je
ljmp
sti
mov
fisubl
inc
sar
aam
es
push
cmc
stc
addr16
jg
add
popa
mov
jecxz
stos
ljmp
andb
dec
jge
cmpsl
dec
mov
lock
push
addr16
dec
sub
push
xchg
push
jo
js
and
dec
mov
bound
jno
add
and
in
fstps
lret
pop
testb
insl
pop
dec
cld
and
dec
mov
roll
out
std
dec
push
xchg
jecxz
mov
mov
xchg
aad
xchg
pop
lret
ret
fldl
out
mov
push
xchg
fsub
cmpsb
lods
mov
xchg
and
mov
add
es
adc
movl
mov
test
rolb
sbb
and
outsl
sbb
pusha
ret
xor
pop
arpl
pushl
sti
les
fadd
jmp
pop
mov
ror
mov
cmp
pop
fisubl
dec
add
mov
jge
lods
inc
sarb
dec
ret
leave
pop
out
pop
inc
dec
je
dec
jmp
aad
dec
pushf
loopne
mov
inc
test
or
sub
es
cwtl
add
and
ds
push
push
pop
out
je
fwait
std
and
mov
or
shrb
jbe
divb
pop
sub
push
icebp
sub
xacquire
xlat
push
jne
shrl
xor
out
jmp
xor
and
xchg
bound
lret
mov
aad
mov
les
pop
and
lods
xor
mov
mov
mov
movsl
xchg
repz
es
xchg
mull
dec
or
sub
les
xor
pop
fwait
out
pop
insl
insl
jns
loop
sub
nop
mov
adc
push
lods
lods
mov
loopne
push
gs
xlat
cs
mov
xchg
jg
les
xchg
fcoml
add
jae
dec
mov
dec
mov
push
inc
jne
fwait
int
enter
sbb
mov
fisttps
pushf
pop
mov
aas
stc
data16
pop
ss
adc
in
mov
push
outsb
xor
sbb
xchg
notb
add
and
xchg
pusha
pop
ja
push
xchg
aam
xlat
mov
and
cltd
jge
add
mov
in
inc
push
mov
mov
inc
or
and
cmp
and
inc
pop
mov
inc
add
ss
xchg
xlat
aas
jg
pop
xor
pop
xor
leave
mov
test
insb
or
mov
mov
test
push
mov
mov
popa
stos
xor
stos
mov
mov
jge
scas
add
dec
sbb
adc
test
gs
jbe
stos
dec
cmp
cmpsb
call
out
icebp
jns
adc
fstl
into
mov
jae
pop
and
cli
mov
inc
movsb
lods
outsl
sub
xchg
inc
ja
sub
test
inc
or
mov
sbb
movhlps
push
cld
dec
imul
imul
int
mov
sub
mov
add
lahf
imul
sub
pop
cld
inc
sub
inc
mov
jbe
mov
mov
hlt
stos
jecxz
mov
mov
out
ror
cmpsb
xor
mov
mov
sub
push
mov
jp
pop
inc
pop
aaa
adc
sbb
in
pop
das
lods
push
movl
lahf
push
adc
xchg
mov
and
popf
ss
ljmp
mov
scas
cli
cltd
inc
or
inc
mov
xor
and
das
xchg
xchg
pop
scas
mov
loop
cmpsb
sub
xor
in
adc
dec
mov
stos
lret
adc
inc
div
ret
fdivrs
mov
lret
mov
movsl
cmp
fcomip
dec
ljmp
stos
rolb
test
fildl
pusha
or
testb
aas
pop
inc
rorb
sahf
movzbl
push
ss
and
lret
lods
in
dec
lret
das
popa
pop
mov
pop
adc
rcrb
sub
jno
or
gs
adc
out
jns
push
inc
scas
stos
mov
cmpsl
add
lea
lea
inc
mov
leave
mov
mov
imul
xchg
ret
popa
lcall
add
mov
les
mov
and
addr16
dec
clc
jl
aad
repz
sbb
loopne
jns
outsb
jno
bound
pushf
xor
ret
data16
movsl
test
sub
fdivrl
dec
mov
bound
pop
wbinvd
fwait
xorb
addl
jno
mov
cmp
or
or
insb
cmp
into
xor
out
inc
xchg
add
lret
inc
ret
push
cmp
xor
imul
loop
jl
ss
sbb
xor
sahf
int
mov
popf
out
cmp
cmp
push
push
add
pushf
cs
sbb
dec
out
ret
cld
push
push
loop
jp
andl
fcomi
int
rcrb
add
fdivr
les
cmc
mov
xor
ja
sbb
mov
popf
leave
mov
icebp
pop
xlat
popf
lgs
xchg
sarb
pop
xchg
xchg
jb
ljmp
icebp
mov
jecxz
data16
daa
je
cmp
hlt
add
jbe
gs
aad
mov
xchg
jge
dec
dec
add
sub
lret
mov
fstpl
int3
pop
jl
popa
es
je
or
out
xor
pop
mov
outsb
in
movsb
add
out
pop
imul
lds
sbb
scas
push
push
push
test
repz
repz
je
and
sub
std
mov
enter
xchg
mov
sbb
jge
cmc
push
daa
jb
xor
dec
adcl
in
jnp,pt
pop
inc
sbb
jg
fmuls
aaa
outsb
leave
and
sbb
loope
and
dec
sbb
xchg
cltd
pop
inc
adc
lea
inc
pop
cli
dec
inc
adc
sti
mov
loopne
int3
sbb
jle
movl
push
imul
cli
push
cmp
adc
jge
mov
loop
mov
pop
call
lods
inc
and
pop
push
popf
jmp
sub
mov
movsb
xchg
xchg
or
inc
adc
add
push
cltd
call
loopne
push
pusha
int3
or
hlt
pop
shrl
shrb
dec
scas
mov
lock
jmp
jo
int3
push
mov
adc
xchg
mov
pop
pusha
lods
ret
mov
adc
push
mov
pop
push
dec
test
xchg
add
movsl
mov
xor
mov
mov
pop
loopne
dec
jns
aad
or
xchg
insb
cmp
jne
mov
mov
add
adc
fnstenv
pop
sbb
out
mov
push
add
aas
les
imul
pushf
sub
insb
fwait
movsl
mov
adc
pop
cwtl
stos
enter
or
mov
pop
dec
xchg
sub
mov
xor
mov
cltd
sbb
inc
mov
pop
lahf
jge
lahf
in
push
mov
inc
xor
repz
repz
in
sahf
lret
xchg
push
js
out
or
mov
movsl
insb
jno
mov
adc
pop
mov
cmp
sub
or
cmp
shlb
shl
xchg
pop
nop
cmp
xchg
les
test
push
push
loope
push
xchg
mov
gs
or
inc
or
mov
roll
mov
sub
dec
in
repz
push
div
fmul
mov
loope
aam
mov
mov
cmpsl
bound
dec
jnp
fdivrp
sub
and
inc
dec
xchg
xchg
xchg
mov
push
lods
mov
cs
fidivs
rcrb
push
jae
xor
adc
jmp
hlt
fstp
call
scas
into
mov
or
dec
mov
adc
push
test
into
push
mov
xchg
lahf
aad
test
dec
pop
mov
pop
adc
or
mov
xchg
push
cmpsb
pusha
pusha
push
dec
pop
int
rcrl
jbe
xor
sub
sbb
lds
ret
push
jne
xor
cmc
and
lret
push
ds
mov
lods
test
mov
rcr
das
fiadds
adc
fwait
js
push
adcl
pop
pop
test
mov
xlat
pushf
inc
mov
inc
movsb
scas
mov
inc
mov
outsb
ds
cmpsl
js
clc
jg
fxch
cs
or
loop
jg
add
aaa
mov
add
loop
and
cmc
xorl
or
xor
iret
inc
ljmp
push
clc
rorl
aam
in
leave
sbb
mov
mov
adc
cmpsl
xlat
jbe
ss
push
in
jo
adc
mov
cmp
xchg
in
scas
repnz
or
adc
movsb
pushf
mov
cwtl
push
cmp
ss
mov
notl
int3
push
int3
dec
mov
xlat
mov
inc
pop
lods
mov
push
inc
mov
test
in
rcrb
or
jns
in
jl
data16
mov
std
adc
stc
sbb
andl
mov
or
rcrl
jg
mov
mov
in
xor
cmc
pop
fildl
movsb
or
pop
fimull
dec
xor
test
adc
mov
jne
push
repz
in
fwait
scas
lret
into
ja
sub
aaa
ds
push
mov
cmpsb
mov
cmp
fcomps
dec
loope
imul
sarl
cmp
insb
push
sub
mov
rclb
mov
pushf
jmp
sbbb
add
ret
pushf
sarl
or
ret
shl
lods
shr
data16
repnz
xchg
cmpsl
lcall
mov
test
inc
add
lahf
xor
sarl
mov
ljmp
gs
inc
push
lods
mov
lods
and
in
xor
and
lret
mov
data16
xor
mov
mov
pushf
sti
mov
sub
xor
mov
rolb
daa
inc
cmpsl
sub
cld
mov
testb
add
ret
imul
lcall
pop
adc
mov
add
mov
pop
aas
adc
scas
jle
das
push
scas
inc
jl
jo
imul
rcrl
pop
enter
fnstenv
nop
out
fucomi
inc
cltd
push
leave
stc
jecxz
inc
dec
xor
nop
add
divl
nop
fs
shl
inc
mov
add
jns
xchg
mov
lock
xor
dec
fmull
fdivs
retw
in
das
and
or
or
aam
orl
daa
int3
cmp
fwait
ret
pusha
js
pushl
test
dec
movl
and
add
out
adc
fstps
mov
cwtl
pop
jo
add
xchg
push
mov
sub
shll
daa
jg
push
or
push
or
lds
ss
es
scas
out
std
psubusb
sub
pop
fsts
sbb
mov
xchg
xor
aaa
mov
inc
push
xorl
mov
mov
push
std
jecxz
int
sbb
inc
shl
mov
addr16
fwait
scas
push
mov
mov
mov
data16
int
insl
enter
cmp
mov
mov
iret
sbb
leave
js
in
adc
cmp
adc
fldenv
or
popa
mov
scas
sbb
lods
push
sub
inc
nop
sub
inc
imul
cmp
out
push
fimull
lret
inc
leave
push
pop
jmp
scas
mov
aad
mov
xchg
adc
push
popa
mov
add
pop
xchg
or
fcmove
outsb
add
rclb
and
mov
adc
repnz
and
push
xchg
test
aam
cmpsl
cmpsb
mov
idivl
lret
fcompl
rclb
pusha
repnz
mov
cs
mov
fld
testl
jo
lret
lods
and
and
jl
lock
sbb
ja
inc
mov
mov
scas
repz
mov
fldenv
xor
sarb
call
or
loope
adc
fisubl
pop
jns
fs
stc
out
sub
dec
dec
add
dec
das
lret
mov
push
jge
pop
aad
push
jno
lcall
sub
loope
insl
repnz
mov
repz
dec
call
sub
mov
inc
mov
dec
imul
push
lds
push
scas
push
mov
cmp
je
push
iret
xchg
xchg
scas
pop
xchg
push
fisubs
imul
divb
xor
sub
lcall
outsb
pop
sahf
cmpsl
sub
scas
xchg
mov
lret
pop
lds
jecxz
out
int
faddl
sbb
fnstenv
aam
adc
xchg
sub
ljmp
shlb
pop
xchg
fs
xor
loopne
and
add
outsb
ret
lahf
divl
cmp
in
xchg
out
jmp
stos
or
iret
dec
and
lcall
xchg
test
sub
mov
leave
popa
ljmp
ss
pop
in
cmp
lock
mov
push
pop
jb
jbe
cmp
shll
cmc
jno
sbb
shlb
bound
std
ret
call
call
in
nop
jmp
mov
and
call
ljmp
scas
fdivrl
push
adc
nop
ss
and
loopne
mov
rcrl
fsubp
pop
and
xchg
mov
pop
cs
insb
mov
jmp
pushf
enter
sbb
stos
imul
out
loopne
sbb
adc
cmp
mov
push
in
shrl
push
push
movsl
and
mov
in
xchg
inc
push
xor
fisttpll
ljmp
in
mov
pusha
fldl
inc
leave
xchg
in
hlt
jae
icebp
cld
test
loop
jne
cmp
pop
push
jbe,pn
outsb
outsb
push
bound
aas
and
mov
mov
mov
aas
add
sbb
push
sbb
sbb
rcrl
pop
les
and
sbbb
cmpsb
adc
lret
arpl
push
sti
sahf
dec
adc
mov
mov
mov
jns
sarb
jp
dec
sub
jb
inc
xchg
repnz
xchg
enter
dec
je
dec
lock
lret
fstl
psraw
fcomps
fcompl
fdivl
cmp
xchg
xchg
cltd
cmp
inc
out
inc
popa
adc
jo
aas
mov
arpl
push
push
or
movsb
lea
movsb
mov
faddl
jmp
lods
jne
lcall
pop
cmc
xor
cli
movl
addr16
mov
push
rcl
mov
mov
or
xchg
inc
lds
not
push
sbb
fcoml
mov
out
adc
aaa
mov
loop
mov
dec
divb
sbb
les
cmpsl
pop
inc
shl
sbb
das
sub
scas
jo
inc
fldcw
insb
adcl
scas
jp
fwait
jle
bound
push
ds
rorb
in
xor
loope
cwtl
xchg
mov
cld
loopne
add
loope
jg
int
pop
mov
sub
adc
std
jne
pop
bnd
jae
leave
pushf
ja
inc
xchg
inc
repnz
push
andl
jecxz
cmp
lds
aas
mov
sub
sbb
loopne
add
xchg
sbbl
outsb
sub
inc
and
test
jne
insl
mov
popa
lods
cs
mov
sbb
cmpsl
mov
out
inc
lahf
shll
sub
cmp
pop
jmp
push
or
cmp
jbe
das
xor
loop
cltd
dec
xchg
inc
lret
arpl
fisttpll
rorb
sub
sbb
inc
push
fwait
iret
iret
jo
or
sti
xor
mov
outsl
or
xor
sub
push
ret
test
cmp
inc
mov
push
cmp
or
call
inc
lods
mov
out
pop
ret
rolb
ret
cmc
or
call
push
sub
xchg
mov
jb
cmp
adc
aas
fnsave
or
repnz
adc
ret
push
jmp
cld
cmc
mov
data16
lods
call
jmp
jb
jle
add
mov
inc
dec
addb
ds
mov
lcall
cltd
pushf
sub
test
imul
push
lea
loope
jae
int
aas
shll
jge
lods
cmc
mov
popa
dec
xor
out
mov
dec
leave
or
popf
mov
mov
shlb
adc
jo
inc
xchg
sahf
out
lea
mov
es
shl
ja
xchg
fadd
roll
push
shll
push
sbb
mov
mov
jle
imul
int
dec
cmc
outsl
add
dec
mov
repnz
pop
cld
sub
leave
ror
mov
lret
add
cmp
sub
mov
ja
cld
or
lcall
scas
notl
scas
mul
push
lods
pop
ds
pop
scas
scas
imul
xor
push
mov
xchg
in
imul
mov
ja
cmp
ret
inc
std
pop
xchg
cld
incb
push
lock
loop
add
sarb
paddusw
mov
jb
and
push
add
sahf
add
xor
das
insb
jp
jecxz
insl
popa
loope
lock
xrelease
lcall
or
mov
mov
push
cmp
jns
mov
lea
out
push
sti
fucomp
pop
cmpsb
fldl
pop
add
fcmove
pop
aad
jg
movsb
dec
xlat
jae
or
rorb
push
test
sbb
sar
push
scas
mov
jnp
inc
fldcw
mov
xchg
adc
addr16
ljmp
sbb
jno
dec
aam
mov
hlt
lods
fwait
mov
adc
mov
js
push
ds
pusha
enter
push
xchg
xchg
inc
xor
push
adc
rorl
cwtl
mov
int3
movsl
fcoms
mov
repnz
mov
ja
sbb
sbb
loop
lahf
faddl
in
jl
pusha
mov
cmpsb
ljmp
faddp
scas
jg
cmpsl
cmpsb
xchg
add
shlb
insb
push
sbb
add
leave
mov
push
pop
rorl
xor
fldl
sahf
mov
add
push
js
aad
dec
jp
pop
test
cs
pop
stos
cmp
imul
aad
and
test
jl
sti
sbb
xor
xlat
add
pop
es
push
jle
les
mov
sbb
in
jle
xchg
sub
fcmovnbe
jl
movsl
xchg
fmull
pushf
cmpsb
sbb
pop
dec
es
mov
lahf
mov
cli
aad
mov
pop
das
xlat
jae
add
sub
stc
adc
ror
fstpt
pop
adc
jmp
cli
xchg
sbb
mov
inc
inc
rolb
mov
stc
in
aas
pop
push
outsb
repnz
fisubrl
push
shlb
test
xchg
sub
add
mov
and
adc
jmp
enter
nop
mov
xchg
mov
dec
push
and
outsb
add
sbb
std
dec
inc
ss
shlb
xor
or
mov
mov
xchg
hlt
jmp
in
inc
sub
rcrb
or
fsubl
lds
adc
adc
jbe
std
popa
enter
pop
out
mov
push
and
pop
sarb
dec
mov
pop
call
mov
movsl
dec
adc
xor
lahf
fwait
sbb
js
loop
and
pop
bound
mov
add
cli
sub
iret
int3
pop
or
mov
jmp
mov
push
xchg
and
add
mov
ret
xchg
xor
mov
out
push
sarl
pop
cmp
insb
xor
mov
and
cmp
sbb
aad
icebp
xchg
pop
dec
fcomip
xor
xchg
add
movsl
pop
mov
xchg
test
mov
dec
mov
mov
mov
les
jbe
add
scas
mov
xor
add
stc
or
lods
mov
and
mov
stos
add
je
pop
dec
lock
pop
pop
add
xchg
fstpl
dec
mov
jg
loop
mov
cmp
jge
mov
pushf
jmp
outsl
xchg
int3
mov
out
ret
popl
mov
fisubrl
scas
pop
test
add
jg
mov
pop
test
fiaddl
inc
lods
or
xchg
dec
std
out
push
addr16
je
add
jmp
pop
lcall
icebp
xorb
es
push
cmp
xadd
push
out
xchg
add
sub
insb
mov
and
cltd
or
and
out
add
sbb
cmc
lock
xchg
hlt
test
mov
lret
jnp
std
xlat
xor
mov
lea
ljmp
insb
mov
int
inc
xchg
xchg
add
jmp
add
loope
dec
inc
and
mov
xor
jb
lds
sub
ljmp
cwtl
jle
mov
dec
lret
sub
cld
or
lcall
in
aam
cld
and
push
scas
xchg
xor
cmc
push
and
popa
bound
cli
cmp
push
fiaddl
int3
orb
push
mov
jb
xchg
or
data16
add
adcl
lret
sbb
or
adc
adc
and
mov
lahf
xchg
push
mov
shrl
movsl
movsb
daa
and
sarb
hlt
xchg
xor
shrl
xchg
hlt
fdivs
mov
mov
cmpsb
sti
je
int
outsl
xor
or
ljmp
lret
xchg
sti
push
mov
push
fwait
cmp
or
outsl
and
sbb
sbb
bound
mov
mov
mov
or
pop
cs
repnz
sarl
and
into
imul
enter
push
mov
mov
or
test
stos
sub
mov
xchg
das
add
es
clc
js
mov
push
out
test
push
or
or
xor
rcrw
sbb
or
movsl
push
xchg
rcrb
out
inc
mov
adc
out
lahf
sub
movsl
mov
les
mov
pop
and
popa
inc
lea
cmp
xor
int
stos
test
inc
iret
mov
dec
inc
or
enter
pop
add
ja
xor
inc
and
aam
int3
xchg
imul
cmp
pop
adc
mov
jno
mov
or
fstpt
in
imul
mov
or
push
subl
repnz
les
jle
inc
adcb
fdivrl
dec
in
shrb
mov
fstpt
or
adc
cld
mov
jge
fwait
sbb
jne
add
sahf
adc
sub
push
cltd
cli
lods
or
fdivrs
mov
out
fnstcw
jecxz
xor
shlb
inc
mov
call
shll
adc
xlat
mov
sti
ljmp
mov
mov
mov
cltd
jecxz
std
pop
ss
nop
inc
sbb
sbb
xlat
push
js
and
push
mov
mov
inc
jg
decl
into
lret
or
cmp
cmpsb
out
cmp
jg
pop
mov
out
lcall
mov
jne
mov
pop
add
dec
lea
adc
or
lahf
out
int3
sub
decl
fnstcw
jge
xchg
lcall
outsb
mov
lods
mov
fs
push
cwtl
mov
xor
mov
push
dec
jle
xor
xor
int3
sub
push
movsl
sbb
and
jne
push
jns
fistl
xchg
pop
sahf
sahf
add
adc
jnp
data16
dec
loop
adc
mov
push
out
daa
and
pushf
repz
lock
push
or
popf
push
js
cld
push
pop
pushf
adc
iret
and
adc
data16
sub
or
inc
stos
jns
leave
jo
lea
pop
or
stos
pop
sti
push
mov
cmp
ja
dec
int
jb
adc
sub
test
xchg
pop
daa
inc
mov
lcall
mov
xchg
mov
and
bound
imul
in
sbb
pop
fistpll
adc
sahf
std
decb
push
repnz
mov
pop
xchg
push
dec
sarl
les
cwtl
jl
add
jb
pop
mov
add
xchg
mov
xchg
mov
jge
cs
aaa
pop
pop
mov
add
mov
loop
popa
lods
and
xor
clc
push
push
out
and
movsb
aas
fiadds
rcrb
incb
sbb
and
repz
jl
cs
inc
or
pop
arpl
sarl
inc
xor
xchg
mov
and
icebp
lods
add
lahf
fimull
sahf
or
sub
cmp
sbb
adc
xor
xchg
test
ret
xlat
mov
je
xchg
mov
fsub
iret
sbb
xor
push
cmpsl
dec
mov
jb
aad
fimull
dec
jp
xchg
lods
cmp
repz
aad
sarl
push
xchg
stos
pop
mov
imul
mov
jle
xor
iret
fadds
sarb
test
test
push
jne
adc
icebp
ret
jnp
test
lods
mov
stos
data16
jge
dec
ljmp
jle
les
stc
test
in
or
sbb
fildll
jae
arpl
mov
sub
jne
mov
xor
das
ds
movsb
push
jl
aam
int3
jl
incb
icebp
jp
movsb
mull
sub
arpl
mov
inc
adc
es
push
xchg
test
or
sub
dec
jb
xor
daa
push
loop
inc
outsb
xchg
xor
in
mov
imul
out
inc
cmp
add
mov
sub
cmp
fdivl
into
test
mov
lds
add
jg
jecxz
sahf
sub
scas
in
xchg
xor
aam
out
jg
inc
imul
adc
cwtl
push
enter
daa
add
adc
in
cwtl
pop
sarl
popa
bound
mov
ljmp
sbb
mov
nop
arpl
or
adc
lea
std
cmp
jge
stos
test
mov
pop
mov
mov
repnz
xchg
cmpsl
xchg
ret
cmpb
nop
sub
imul
cmp
sbb
mov
mov
rorb
or
add
xchg
sub
push
into
nop
aaa
mov
pop
pop
daa
jnp
int
cmpsb
mov
jecxz,pn
dec
and
sbb
pop
je
mov
lds
les
push
bound
push
jl
notl
stc
and
cli
or
pop
mov
outsb
push
in
popa
cwtl
mov
cmpsb
pushf
dec
pop
mov
add
imul
inc
cmpb
xchg
clc
or
push
pop
jmp
dec
xchg
and
sahf
add
pop
inc
loopne
jecxz
aam
cmp
sti
repz
mul
iret
rol
insl
mov
sub
shrl
mov
and
add
shl
in
into
loop
inc
push
out
xchg
inc
adc
stos
fstpt
out
imul
lahf
sbb
sbb
sti
cmp
out
push
outsb
mov
jmp
xor
jl
xchg
dec
gs
mov
inc
ds
out
jp
fsubr
dec
mov
sbb
and
pop
jecxz
lds
adc
movsb
add
xor
leave
and
in
stos
xchg
icebp
xchg
jmp
mov
insl
pop
mov
ljmp
jns
push
add
cwtl
pop
aad
pop
dec
sarb
std
push
data16
repnz
inc
insl
mov
jg
test
lcall
inc
xor
add
push
sarb
in
xchg
xchg
outsl
xchg
and
push
mov
bound
push
jl
test
sub
pop
jecxz
dec
test
pop
inc
sub
lods
pop
jmp
xchg
jno
or
add
mov
stos
int
sbb
cmc
mov
loopne
mov
add
push
fwait
inc
movsb
or
out
sbb
jne
out
mov
push
sahf
sub
wbinvd
adc
int
pop
adc
dec
cwtl
mov
or
sar
stos
lds
rolb
pushf
fsubp
and
ret
mov
rcl
pop
pop
test
insl
sub
fs
stos
xor
xlat
out
or
scas
pop
mov
imul
aam
fadds
jl
cmc
shlb
xor
sbb
xlat
test
mov
insb
add
ja
inc
lcall
jge
mov
insb
add
lds
push
sbb
fbld
cmp
jnp
outsb
repnz
std
push
sbb
popa
or
fsubs
cmp
outsl
aam
dec
mov
gs
cmp
rcl
sub
out
dec
test
jle
leave
ss
xlat
and
cmp
addr16
ficoms
jns
lea
out
loop
insl
mov
scas
sub
insb
cmp
icebp
adc
add
mov
jl
addr16
sbb
out
lahf
fstl
ficomps
sar
rcrb
ret
and
mov
or
out
fdivrl
les
insl
jo
xor
xor
or
fldt
xor
iret
test
push
xor
jle
cmp
rorb
add
das
dec
dec
repz
or
addr16
hlt
mov
pop
dec
daa
jo
adc
jl
aaa
xor
add
jmp
icebp
xchg
into
movsb
mov
popf
dec
sub
xchg
je
sub
sub
mov
push
mov
mov
adc
cmp
dec
mov
push
push
int3
ljmp
loope
pop
and
push
ret
xchg
imul
je
jnp
scas
fists
inc
movlps
std
into
mov
push
jecxz
sbb
dec
push
jp
hlt
push
xchg
and
cmovbe
in
imul
fdivrp
ja
stc
cmp
dec
dec
dec
cmp
or
add
lcall
xor
test
mov
imul
popf
js
jnp
or
out
enter
mov
mov
jnp
leave
push
xchg
xchg
jge
loope
sub
icebp
stc
pop
inc
ss
aad
push
imul
fisubrl
out
push
adc
push
xlat
jo
lcall
in
pop
jns
jae
loopne
testb
xchg
mov
sti
movsb
ficompl
jp
pop
leave
fs
divl
roll
mov
ret
cmp
adc
fidivrs
shlb
fs
push
pop
xchg
sbb
xor
pop
jbe
push
movsl
xchg
cmp
ss
xorb
inc
jns
add
sbb
loopne
test
push
mov
jbe
pop
popa
ja
jne
fldcw
cmc
xchg
xor
mov
sbb
imul
xor
loop
mov
stc
or
xlat
insl
adc
repz
popf
jmp
mov
ret
dec
xor
xor
sbb
aas
lods
add
mov
mov
add
pop
ja
mov
mov
test
jns
jno
add
adc
lock
mov
gs
out
xchg
lock
outsb
push
test
xor
lods
cmpsl
or
mov
jl
and
inc
or
aaa
imul
mov
dec
mov
subl
push
out
test
pop
jp
xor
pop
iret
subb
xchg
loop
sarb
sbb
sub
and
mov
shlb
push
scas
fldt
out
hlt
lock
add
dec
jecxz
out
pop
bound
inc
js
cmpl
and
mov
sub
sub
out
enter
js
xor
cmp
into
lds
push
and
mov
push
lcall
fsubrl
sahf
dec
sbb
xchg
xchg
mov
cwtl
cmpb
cmp
nop
daa
adcl
test
mov
push
jns
add
out
inc
push
inc
cmp
fsubr
adc
aam
enter
jno
adc
cmp
inc
mov
push
mov
xchg
mov
pop
js
mov
imul
inc
stos
add
xchg
ljmp
enter
jae
and
xchg
rclb
addr16
mov
mov
pop
pop
inc
dec
mov
sub
fadds
dec
mov
dec
in
outsb
jno
jl
outsb
mov
rolb
aas
mov
lea
and
aad
test
sbb
arpl
movb
std
pop
or
fldl
push
or
inc
popa
aaa
outsb
punpckhdq
in
push
clc
mov
adc
shll
lret
push
or
cli
rolb
fs
xor
push
aam
ljmp
ror
insb
fdivl
out
ds
sbb
shrl
outsb
popa
push
out
sub
pushf
outsl
cltd
ficomps
pop
sbb
push
lods
gs
cmp
ficompl
dec
cmpb
xchg
addr16
and
or
cmpsl
adc
data16
fisubrl
je
fiaddl
cmpsb
cmp
mov
stos
mov
arpl
dec
movsb
adc
mov
inc
fidivl
int
sub
fnstenv
cwtl
sub
jae
loop
jb
xor
xor
mov
inc
icebp
jle
add
adc
pop
bound
adc
lahf
pop
cs
roll
dec
xchg
cmovp
mov
insl
add
inc
les
sbb
mov
xor
jg
fs
jne
repnz
data16
mov
out
xlat
jp
pop
mov
fs
dec
adc
push
out
cmpsl
jo
popa
push
daa
adc
xor
sub
mov
fisttps
mov
mov
push
movsl
pop
xorl
sub
pop
sahf
aam
dec
fwait
add
nop
xchg
adcl
rcll
pushf
mov
std
pop
test
aad
mov
movsl
ds
mov
mov
or
cs
outsl
addr16
push
jno
adc
insl
mov
push
std
shll
std
pop
or
clc
int3
enter
out
jnp
sti
pop
jle
inc
add
cmpsb
mov
push
jge
cmp
shll
fistps
inc
jno
sub
mov
push
xor
cld
ficompl
loop
sbb
out
popa
mov
je
pop
lock
push
xlat
ljmp
mov
jl
mov
pushf
add
dec
jmp
adc
mov
movsl
movsl
addb
dec
adcl
fnstenv
and
out
lcall
repnz
imul
cli
stos
xchg
dec
in
das
cltd
pop
push
call
push
add
xchg
dec
mov
push
xchg
cmp
sub
movsl
xchg
hlt
cld
aad
and
ret
insl
aas
insl
loop
mov
lea
xor
jl
out
and
push
pop
fnstsw
jns
sub
or
shrl
pop
test
xchg
ret
fdivl
aaa
push
movsl
movsl
ds
xchg
fisubl
sub
cmpsl
jge
or
jmp
inc
dec
sub
push
dec
in
inc
mov
jl
inc
iret
aad
push
or
push
sarl
lods
xor
loopne
or
scas
mov
xor
subl
mov
addl
out
pop
and
adc
mov
mov
nop
stc
or
push
pop
js
daa
std
add
scas
xchg
icebp
jmp
divl
xchg
xor
add
xor
or
shlb
sbb
sub
cmp
and
stc
scas
xlat
inc
pavgb
jne
pop
xchg
repnz
cmc
xchg
js
xchg
pop
cmp
add
cmp
mov
adc
notb
pop
mov
test
adc
cmpl
xchg
in
push
cmp
leave
dec
jecxz
sub
mov
mov
mov
test
dec
arpl
jbe
inc
clc
jno
mov
mov
aas
vpcmpeqb
test
test
xlat
outsb
or
push
aam
jne
sub
cmp
jbe
adc
popf
push
xchg
sub
lock
or
outsl
dec
cli
daa
inc
cs
jbe
or
jl
test
cmp
shlb
mov
js
cmp
and
jl
xor
cmp
hlt
push
pop
ror
xor
loopne
ficoms
pop
cmp
cwtl
stos
xchg
adc
fmull
fmulp
imul
adc
inc
jle
adc
scas
jae
movsb
pop
sbb
mov
xor
and
je
ret
or
adc
insb
xor
scas
ss
cli
mov
out
mulps
aaa
clc
cltd
mov
stos
jno
cmp
adc
mov
icebp
cmp
pop
lcall
xchg
sarb
cld
test
xchg
les
iret
push
aam
ss
test
sbb
js
jnp
jp
stos
inc
ds
mov
jns
sub
jne
xchg
dec
es
dec
add
sub
jmp
mov
pop
mov
stos
xor
mov
mov
xor
test
inc
adc
mov
or
xchg
mov
mov
pop
dec
or
inc
mov
addr16
cmp
push
lods
es
lret
icebp
mov
fldt
mov
pushf
jp
jne
mov
test
ret
pop
jle
xor
rcll
addr16
into
xor
out
scas
mov
fwait
and
and
dec
fadds
cmp
sti
insl
test
and
mov
imul
enter
repnz
out
icebp
push
mov
xor
pop
daa
xchg
pop
andb
lds
push
dec
jbe
cld
push
cmpsl
das
cmp
adc
push
adc
pushf
or
cmp
loop
mov
or
sbb
jbe
imul
repz
cmp
cmp
mov
cld
scas
push
sbb
lds
adc
rcr
or
outsb
dec
pop
orl
imul
push
inc
xchg
pop
mov
ds
pop
mov
int3
inc
push
adc
sbb
push
push
cmpsl
ljmp
pop
or
aaa
rcl
lock
pusha
dec
lds
movsb
in
pop
push
sbb
sbb
dec
iret
cmpsb
loop
and
fldcw
int3
sahf
sbb
daa
ret
je
mov
cmp
mov
aaa
jl
cld
sbb
adc
ret
jmp
sti
mov
push
xchg
jge
mov
cmp
mov
shll
adc
inc
fdivs
and
mov
mov
add
imul
fisttpl
fdivs
push
idivb
leave
mul
fidivs
pop
cmp
add
adc
fwait
pushf
and
pop
jecxz
cmp
and
out
lcall
lret
sub
movsb
push
sub
adc
xlat
lods
ficompl
addr16
aaa
pop
popa
in
in
in
cwtl
sbb
mov
aam
subl
stos
std
orb
pop
rclb
adc
push
sbb
rorb
out
out
rcrb
shl
inc
test
das
mov
test
cld
sbb
aaa
push
push
sub
into
shrl
pop
pop
or
pushf
fnsave
sahf
dec
popf
sbb
out
addb
repz
outsb
inc
xor
push
jle
sub
arpl
data16
xor
cmpsb
insl
jecxz
test
aaa
imul
inc
push
sbb
mov
iret
cmp
add
mov
repz
and
popa
sbb
mov
int
daa
cmp
addr16
xchg
cs
and
movl
cmpsl
sbbl
cmpsl
or
stc
stc
aaa
lods
stos
mov
xor
stc
pop
mov
fsts
outsl
shr
pop
cmpl
mov
bound
mov
cmp
call
es
sbb
test
pop
cld
push
xlat
and
push
pop
incl
xor
lcall
xchg
inc
test
addr16
arpl
scas
sub
jne
mov
repnz
push
cltd
or
ss
insb
rcr
mov
lock
jmp
aad
ret
das
sub
push
rcrl
stos
mov
leave
loope
dec
shrl
sbb
sub
mov
enter
fiaddl
popf
ljmp
lods
mov
dec
xchg
das
pop
cmp
fsubs
cmp
cmp
xchg
aad
cwtl
push
add
mov
dec
xor
outsl
push
jne
sahf
mov
add
add
int3
jl
aaa
rcrb
in
dec
popf
jge,pn
jge
les
insl
imul
pop
jecxz
imul
inc
iret
out
mov
mov
lea
jl
push
push
es
or
mov
iret
push
sub
adc
pop
push
stos
push
cmpsl
lret
pop
sbb
les
and
cmpsl
adc
in
xchg
les
cmp
jp
test
jp
cmp
add
cmp
stos
ffreep
ret
mov
pop
dec
sahf
lods
adcb
ffreep
call
in
es
jecxz
ljmp
outsl
add
daa
scas
adc
aam
and
or
push
xor
addl
fisubrl
std
imul
jnp
jbe
mov
inc
inc
jbe
jle
and
mov
out
push
xchg
jg
jp
xchg
popa
adc
data16
xchg
inc
pop
loope
xor
pop
or
ret
addr16
and
fldl
pop
lahf
inc
in
aas
mov
hlt
dec
inc
push
push
cmpsb
or
xor
dec
popf
pop
adc
push
mov
imulb
xor
andb
jne
pop
lds
sub
in
dec
cmc
adc
jp
push
or
mov
or
and
xor
sbb
int3
pop
cmp
pusha
scas
xchg
js
add
mov
xor
fcomps
jge
lret
xor
sbb
jge
std
pop
and
cmpsb
jo
jp
sub
ret
cmp
pop
repnz
enter
jnp
push
pop
or
cmp
ljmp
sbb
std
in
shll
xchg
sbb
test
sbb
inc
scas
xor
sbb
outsb
fcompl
and
cmc
pop
jle
adc
push
jg
ss
lock
dec
xchg
or
cmpsl
aad
hlt
cmp
aam
mov
mov
scas
fxch
repz
xchg
sub
insb
test
mov
mov
hlt
xor
and
in
sbbb
ds
sbb
fscale
stos
xor
mov
lods
dec
arpl
imul
mov
mulb
sub
test
jnp
add
insl
and
cmp
call
call
add
arpl
and
mov
gs
scas
mov
shr
push
lock
sbb
and
cld
cmp
lods
hlt
fstpt
cltd
mov
rorb
adc
jae
sub
add
adc
popa
and
enter
mov
dec
xchg
xchg
cmp
pusha
call
inc
ret
mov
and
std
xchg
insl
pop
push
test
stc
sub
mov
push
movsb
and
sbb
enter
sbb
push
ficoms
stc
rol
stc
and
or
enter
dec
bound
jecxz
inc
jns
xchg
into
xchg
mov
xchg
movsl
mov
lea
shll
cmpsl
f2xm1
lea
mov
int
int3
cwtl
sbb
mov
ret
cli
mov
xor
add
mov
jmp
adc
push
jnp
and
mov
enter
sub
outsl
sub
rolb
insb
dec
int3
jno
adc
idivl
dec
inc
push
movsl
xchg
push
add
test
leave
stos
clc
sbb
sbb
loop
mov
mov
test
jo
loopne
inc
fsubrs
pushf
pop
ja
mov
ds
pusha
sbb
mov
cmp
stos
int3
stc
stc
mov
testb
int
fistpl
pop
insb
or
xchg
pop
sbb
mov
lds
mov
out
test
aam
shll
xlat
or
movsb
xor
lret
shrb
mov
sarl
push
and
adc
popa
leave
leave
or
lret
cmp
cmp
mov
jo
inc
mov
mov
and
add
sub
xchg
jnp
mov
cmp
cli
popf
dec
fsubs
fisubrl
inc
adc
dec
jnp
cmp
dec
jno
jl
inc
push
pusha
int3
or
in
and
adc
movsb
popa
xorl
hlt
and
or
or
icebp
or
ds
int
das
cld
mov
pop
out
fs
mov
push
mov
ja
jo
mov
jo
shr
pop
out
cmpb
fdivs
scas
testl
jno
int3
jge
setle
mov
rcrb
cwtl
rclb
sub
mov
or
jns
mov
mov
outsl
sub
outsb
lret
dec
pop
mov
inc
lret
insb
dec
sbb
mov
cmp
cmp
into
mov
sub
cli
loope
negb
lcall
inc
pop
hlt
enter
test
fists
xlat
daa
outsb
dec
cmpl
das
pop
fmull
push
cmc
xchg
adc
inc
ss
adc
aas
jno
enter
mov
cmp
lret
ficoml
push
sbbl
into
xchg
adcb
or
loopne
xchg
popf
jbe
stc
push
shl
aaa
int3
orb
push
sub
mov
inc
add
adc
mov
cmp
mov
mov
inc
into
int3
sub
mov
or
testl
cmp
or
sarb
rcl
sbb
mov
add
xchg
push
cld
jp
scas
ljmp
pop
bound
mov
lret
iret
sbb
outsl
pop
shrl
mov
lret
xchg
xchg
aas
cli
js
stos
fdivrs
push
into
shll
das
xchg
pop
lcall
test
arpl
mov
popf
data16
jae
bound
testb
pop
adc
add
loopne
jl
xchg
ljmp
lcall
mov
push
dec
das
sub
cmpsl
imul
sub
stos
mov
jbe
popf
mov
sbb
std
inc
imul
cmp
jl
arpl
jge
out
fcmovnb
pop
int3
push
xchg
push
int3
xchg
es
cmp
movl
mov
jno
popf
push
mov
std
xlat
jns
xchg
std
mov
dec
xchg
pop
adc
call
xchg
xchg
push
stc
popa
std
add
xor
ja
test
in
xchg
inc
mov
js
jno
ja
in
mov
movsl
pop
jge
call
mov
dec
pushf
pop
setb
pop
cld
cmp
inc
cs
sarl
aad
sbb
stc
push
cmp
mov
lock
and
mov
cmp
xor
adc
ret
mov
cmpsl
rorl
enter
mov
stos
mov
ds
xchg
decl
out
mov
xor
loopne
dec
cmpb
jl
push
inc
out
sub
mov
and
sbb
pop
dec
cmc
out
mov
push
and
or
dec
into
out
mov
lcall
cmp
or
adc
in
subb
ret
cmp
jp
sbb
mov
adc
xchg
int3
mov
pop
out
lods
lock
scas
aas
mov
xlat
add
rclb
sbb
dec
inc
dec
pop
loopne
in
cmc
push
in
mov
ljmp
int
test
les
mov
sarl
fcoml
jg
idivb
outsl
iret
subl
dec
push
mov
addb
fwait
std
mov
ficompl
pusha
dec
jns
adcl
adc
cmp
xor
cli
sarb
addr16
pop
cld
idivl
and
adc
js
inc
or
ret
adcb
pop
adcb
pop
inc
test
cmp
bound
push
or
mov
out
add
mov
popf
in
data16
mov
push
fdivr
mov
repz
std
pop
cmc
sbb
push
adc
insl
fisttpl
pop
xchg
ret
sbb
sbb
insb
call
fwait
test
cmp
push
dec
sub
subw
icebp
xchg
push
mov
xchg
call
inc
xor
je
jmp
sbb
int
jns
add
out
mov
xchg
sub
rorb
insb
ljmp
call
add
gs
ret
add
test
push
mov
cmc
fs
add
add
mov
mov
mov
addl
inc
mov
sub
xchg
mov
jb
repz
cli
test
adc
push
mov
push
fs
jecxz
into
cmpl
sub
pop
mov
or
xchg
loopne
cltd
push
jne
mov
xchg
ja
cmp
inc
sbb
into
cltd
jb
cmp
and
stos
sahf
push
dec
out
testl
and
dec
xlat
jb
xchg
repnz
mov
xor
jmp
add
imulb
ja
fwait
mov
pop
mov
int3
mov
xchg
sub
xchg
lret
ficoml
ds
mov
inc
mov
pushf
pop
sbb
cmp
mov
inc
stc
jne
gs
xor
into
push
and
dec
je
notb
mov
mov
mov
das
iret
nop
jmp
rcrb
or
fnsave
xor
std
inc
movsb
cmp
andb
push
in
leave
cltd
pop
mov
add
jmp
jp
outsl
ror
in
je
cltd
nop
lahf
xlat
sbb
mov
outsb
sub
xlat
fnstenv
xchg
loopne
xor
sbb
or
and
aad
iret
stos
scas
mov
pop
pop
popa
mov
push
mov
subl
insl
or
dec
sbb
pop
sbbl
jno
repz
dec
and
cmp
int3
leave
pushf
ljmp
jns
xor
lret
jle
or
call
aaa
xorb
ret
ja
je
dec
cs
negl
sbb
xor
xor
int
fs
cmp
mulb
push
mov
sub
psrlw
aad
pop
jecxz
outsl
loop
jae
cwtl
jae
fs
or
repz
int
imulb
jmp
inc
or
push
fsubs
jg
jp
inc
pop
mov
frstor
iret
xchg
outsb
pop
xlat
add
and
mov
and
mov
jmp
jns
in
jp
lret
aam
lods
les
sub
in
orl
jno
xchg
cs
fistpl
scas
sti
push
movsb
addr16
and
lret
and
sbb
adc
xor
add
and
xor
std
repnz
and
ja
jbe
leave
insb
adc
jecxz
add
int
sbbl
sbb
fistps
daa
pop
inc
push
out
mov
push
std
dec
jl
popf
dec
pushf
xchg
dec
jmp
xchg
xchg
push
jp
sarb
sbb
shlb
push
repnz
adc
and
mov
inc
sub
sbb
jp
testl
loop
add
mov
ljmp
cmp
das
imull
fs
adc
jmp
jl
cmpl
pushf
in
sbb
push
ret
movsl
lods
push
out
je
or
xchg
mov
push
cmp
clc
test
cmp
aad
test
xlat
cmp
mov
cmpsb
repz
fidivrl
test
push
pop
ss
std
ficoml
lret
xorl
xchg
hlt
mov
outsb
mov
sbb
push
pushf
enter
add
mov
inc
cmc
and
inc
in
movsl
testl
lret
pusha
enter
xchg
imul
adcb
push
xchg
inc
jno
jbe
pop
addr16
cmpsl
xor
nop
jbe
repnz
ja
cld
inc
jle
inc
sbb
imul
and
cltd
and
jecxz
insl
outsl
mov
jmp
test
add
faddl
push
enter
pop
mov
jnp
mov
mov
push
pop
mov
pop
nop
aad
push
mov
dec
fcomp
into
push
jmp
into
pusha
out
aaa
inc
adc
daa
fnstenv
xor
cs
mov
mov
pop
mov
dec
jae
pop
mov
lret
cmp
in
inc
pop
mov
mov
popf
out
arpl
cltd
movsl
call
adc
out
shrb
stos
test
loope
pop
js
insb
jge
cwtl
inc
rclb
cmpsl
scas
cmpsb
fldenv
mov
out
pop
clc
cmp
sbb
dec
sub
and
add
dec
test
sbb
xchg
push
popa
adc
adc
jns
fwait
shlb
inc
dec
sti
dec
inc
jo
adcb
sbb
icebp
bound
lcall
aas
sub
rol
fs
xchg
pop
repz
or
cmp
out
movsl
or
lea
outsl
outsb
pop
pop
test
and
mov
lock
mov
adc
dec
jg
push
add
adc
test
mov
aas
ljmp
and
add
imul
inc
outsl
adcb
xchg
imul
jae
pop
jae
pop
outsb
jb
in
push
cmp
int
test
push
lahf
iret
ja
xlat
pop
movsb
mov
loop
cmpsb
fistpl
dec
lods
cwtl
pop
das
cld
xchg
jnp
jne
mov
sbb
stos
insb
sub
cs
fisttpl
sub
xor
stos
push
mov
mov
mov
push
lds
sti
adc
mov
stos
push
pop
mov
inc
fstpl
pop
cli
pop
lea
cld
push
in
insl
sub
lret
mov
xchg
sbb
xor
xchg
mov
scas
and
cmc
push
adc
xchg
mov
xor
out
mov
fcoml
jae
negl
cld
mov
int
mov
lds
mov
push
cmp
cmp
add
jecxz
or
stos
mov
dec
enter
push
aam
les
stc
or
stc
lods
mov
call
or
mov
pop
sub
int
adc
xchg
leave
ret
movsb
shr
insb
rol
cmpsb
iret
pop
dec
cmp
sti
push
fnstenv
or
jbe
pop
je
out
dec
jae
mov
pop
sbb
mov
dec
inc
sti
in
int
cmp
push
scas
jb
xchg
sahf
sbb
popa
shll
inc
icebp
cmp
push
add
mov
cmp
mov
lcall
push
sbbb
in
ds
int
lock
sub
and
xchg
push
jae
sbb
mov
xchg
push
jns
out
cli
cmc
jg
rcrl
imul
orb
mov
xchg
push
xchg
xchg
lods
fcmovne
cmp
xor
idivb
stc
and
jge
enter
inc
adc
cmp
in
mov
ffree
mov
mov
inc
sbb
push
addr16
sbb
mov
jno
dec
adcl
cltd
jl
aas
pop
sti
jno
insb
pop
shlb
sub
jae
ds
mov
loope
leave
and
andl
fnstcw
sub
dec
jmp
xor
dec
dec
mov
dec
jl
adc
test
cmp
sbb
add
movsl
addr16
lret
pop
xor
push
push
clc
mov
in
cltd
push
test
out
lret
dec
test
cmpsb
sbb
cmpsl
push
sub
pop
vpsubd
push
cmp
cs
sbb
adc
sbb
mov
xor
mov
addb
cmp
lret
sbb
xor
jo
xchg
js
mov
pop
cwtl
rolb
movsb
jne
mov
loop
clc
mov
mov
imul
xlat
insl
sbb
adc
rcll
test
pop
imul
or
xorl
push
ds
jg
cmp
or
das
stc
xor
jne
sub
pop
lods
out
jle
std
int
sub
xlat
cmp
stc
jle
xor
cmp
mov
hlt
pop
pop
lea
sbb
jns
jno
push
cmp
xor
pop
sub
mov
sbb
jecxz
aaa
dec
jns
adc
ret
mov
lahf
fwait
cmpsb
or
cli
jl
cmpl
icebp
and
sub
mov
sbb
dec
je
sub
cmc
icebp
loope
push
and
cmp
adc
pop
test
add
aam
xor
push
and
add
fs
mov
mov
and
fistpl
and
xor
mov
sbb
xchg
and
mov
xor
inc
lods
fwait
adc
dec
sbb
and
xchg
popf
add
das
add
lcall
clc
ficompl
stos
stos
fsubrs
push
outsb
ss
add
insb
pusha
dec
mov
xorb
mov
scas
test
repz
fwait
pushl
cli
mov
xor
stos
xchg
push
push
movsb
mov
pop
fstps
inc
or
pop
mov
scas
notl
mov
mov
call
and
mov
in
orb
add
push
dec
jle
mov
cld
mov
scas
pop
aas
movsl
adc
lret
jmp
add
cmp
popf
out
add
cs
mov
cmp
pop
cmpsl
push
lods
push
out
jecxz
pop
dec
loop
dec
or
jg
mov
adc
push
or
mov
insl
cmc
out
test
xchg
xchg
test
mov
sbb
lea
jmp
pop
ja
jne
stos
sbb
jecxz
or
adc
mov
push
and
mov
and
cmpb
lock
ficoms
cmc
je
add
test
pop
mov
sub
add
adc
je
push
jno
leave
jge
dec
cmpsb
shll
ffreep
xor
pop
test
cmpsl
nop
fldl
xchg
push
jg
sbb
jo
hlt
or
pop
sub
xchg
sub
inc
or
pushf
inc
gs
mov
mov
fs
and
mov
aam
jle
mov
loopne
or
push
mov
pusha
out
bound
mov
enter
cltd
adc
sub
enter
sbb
les
add
mov
dec
out
mov
aad
pop
dec
rclb
pop
imul
mov
fimuls
gs
inc
dec
and
pusha
xor
in
das
or
lock
rorb
pop
xlat
jle
dec
into
cli
sbb
dec
mov
fcomps
je
dec
mov
cmc
sahf
adc
pop
call
mov
xlat
int3
jno
fnstenv
mov
mov
push
fs
jnp
and
ret
add
decb
cmpsl
sub
iret
dec
mov
jnp
mov
fs
in
jecxz
ss
loopne
mov
mov
aaa
stc
aas
or
hlt
lock
push
push
mov
dec
push
fdiv
xchg
cmpb
pop
arpl
mov
adcb
out
fs
in
rcll
adcb
stos
mov
xor
cli
push
pop
mov
sti
and
or
push
adc
inc
sub
es
repnz
fcmovu
test
inc
cmp
icebp
pop
das
xlat
push
inc
adc
jb
jp
mov
inc
or
and
adc
jbe
fldl2e
cmpsb
je
mov
xchg
sbb
cmpsb
push
dec
ljmp
insb
jp
inc
inc
scas
lahf
dec
inc
cmp
pop
pusha
sub
mov
ja
inc
stc
dec
push
insb
movsl
outsb
jo
jns
xor
push
aad
stc
fiadds
cmp
int
push
rcr
push
mov
daa
adc
jnp
out
stos
xor
mov
adc
or
cbtw
xchg
lea
addr16
or
sbb
fcmove
xlat
outsb
jno
sbb
sub
dec
inc
cmpsl
jecxz
aas
mov
pushl
aam
sub
sbb
shlb
mov
inc
leave
add
dec
mov
push
push
xlat
test
rorl
mov
ja
sahf
adc
dec
data16
mov
fisubl
pop
push
scas
pop
dec
leave
jno
mov
imul
jno
xchg
xchg
mov
or
xlat
mov
xchg
icebp
movsb
lds
mov
adc
imul
cmp
or
adc
outsl
lods
aaa
popa
xchg
sbb
cwtl
cmpl
sub
ljmp
xlat
xor
jl
sti
or
aad
fidivl
pop
mov
cmc
mov
in
inc
in
data16
adc
cmp
lret
xchg
jns
pop
into
jmp
jp
pop
dec
dec
ficoml
and
pusha
mov
loope
arpl
mov
mov
cmpsb
hlt
inc
es
jno
out
inc
shrl
ja
and
cwtl
inc
push
jl
insb
mov
xor
icebp
sub
out
xchg
mov
lret
xchg
or
dec
xchg
std
push
and
daa
dec
dec
sub
fucom
in
out
ja
xchg
dec
sub
iret
or
dec
inc
sub
xor
aaa
int
cli
pop
scas
mov
mov
sub
fs
call
xor
pop
push
cwtl
lahf
popa
add
mov
in
push
and
je
aas
adc
mov
imul
cmp
loop
loope
test
popf
push
adc
mov
sub
sub
or
push
pop
pop
into
dec
push
dec
pusha
cmpsb
pop
test
mov
mov
les
frstor
shll
push
or
int
inc
les
sub
sbb
adc
in
mov
xor
or
setg
inc
jbe
sub
mov
xchg
pop
mov
or
das
insl
mov
test
and
mov
cmp
lds
or
ljmp
mov
mov
jecxz
dec
or
cld
or
mov
cmp
add
fdivrs
pop
jl
mov
and
jbe
call
loope
call
xor
dec
and
pop
daa
movsb
fs
dec
fisttps
lds
or
fcoml
out
repnz
mov
sub
test
cmpsb
in
in
ds
sahf
and
out
scas
sbb
test
jp
das
jl
mov
aas
mov
inc
pop
mov
test
add
cld
pop
push
sbb
scas
loop
out
mov
xlat
loop
fwait
jnp
xchg
cld
movsl
inc
cs
push
cmp
xor
push
sti
pusha
je
dec
mov
jl
aad
add
sbbb
mov
push
pop
leave
js
push
jle
adc
mov
in
add
imul
sarb
mov
pushf
lcall
test
lret
sub
hlt
in
mov
pop
lock
jmp
inc
rolb
roll
or
mov
lods
stc
or
add
sub
rclb
fcomp
or
adc
jge
idivb
aam
mov
fwait
sahf
adc
fwait
mov
mov
mov
dec
testb
out
inc
lahf
and
push
cmp
rorb
ret
rclb
in
inc
mov
jg
adc
divl
je
sub
add
sbb
or
shr
mov
push
ja
stc
call
mov
cmp
pop
xchg
inc
int
mov
lahf
cmp
and
cmp
sbb
push
push
sbb
pop
lds
leave
mov
lods
sbb
xchg
iret
loop
sahf
cmpl
sub
or
popa
cmpsl
inc
repz
in
out
repz
ja
int
add
push
pop
xchg
enter
dec
sbb
sbb
stos
xchg
arpl
jo
xor
subl
push
js
sbb
jmp
rolb
inc
sub
xchg
cwtl
std
jp
push
jns,pn
pop
push
add
pushf
mov
inc
cltd
and
xchg
pop
dec
mov
test
push
cs
adc
inc
lea
xchg
ljmp
fstpl
and
cmp
xor
scas
insl
mov
pop
popa
jecxz
or
ja
inc
pop
inc
or
push
or
jl
popl
shl
xor
mov
in
jbe
push
lea
mov
jle
dec
lret
mov
cmp
hlt
or
cmp
mov
and
cmpsl
repnz
lock
mov
push
leave
lods
stos
mov
and
out
insl
fs
mov
jnp
sbb
mov
sub
ja
cwtl
addl
rcrl
mov
test
mov
adc
pop
sahf
pop
jmp
lahf
push
jae
dec
daa
xor
int3
push
bnd
inc
push
int3
lods
and
orl
sbb
movsb
out
mov
notb
inc
ds
xchg
stc
in
mov
test
xchg
ficompl
js
adc
ds
inc
xchg
pusha
cwtl
jnp
fidivl
or
push
mov
push
int
push
dec
dec
mov
xor
imul
lods
outsb
fcomp
nop
jbe
jne
in
lods
popf
jmp
or
out
enter
sbb
icebp
subb
sbb
rclb
mov
aas
mov
iret
push
push
mov
xchg
roll
std
mov
or
nop
sbb
jbe
sbb
xchg
push
push
xchg
sub
mull
sub
test
or
adc
jbe
daa
xor
mov
push
sbb
xor
ret
jno
fidivrl
push
cmp
stos
iret
addr16
je
jle
cmp
popf
cmpsl
cmp
and
inc
nop
sub
mov
push
inc
jg
inc
inc
xchg
mov
hlt
sub
sahf
cli
iret
pop
stos
push
test
fldt
xor
adc
mulb
xor
call
cwtl
push
pop
jnp
xchg
leave
in
or
mov
fyl2xp1
jnp
int
xchg
or
dec
js
pop
in
jb
pop
push
push
filds
mov
bnd
dec
xor
push
jmp
xor
stc
js
in
dec
sub
jnp
mov
add
push
sub
ljmp
xchg
sbb
add
rcrb
test
mov
icebp
xor
stos
jb
add
pop
dec
sub
adc
mov
sub
mov
fisttpl
inc
push
lods
lahf
enter
outsb
xor
in
jb
mov
shrb
fdivrs
cmp
repz
xchg
xchg
xor
jne
ja
xchg
popf
xor
xlat
sub
inc
test
sbb
xor
xchg
mov
adc
and
rorl
aaa
push
xorb
js
mov
lea
sbb
insl
cmp
jmp
mov
nop
cmpsb
es
xchg
negb
mov
es
dec
rolb
shl
sub
testb
xor
mov
sub
ja
xor
movsl
inc
mov
cmp
movsl
movsb
cs
sahf
imul
and
sbb
adc
lds
iret
fcomip
loop
xchg
xchg
cmc
jmp
jle
scas
test
movsl
popf
in
mov
lds
outsb
dec
out
fdivs
pop
ret
sub
and
test
jecxz
mov
test
adc
iret
add
scas
cli
add
sbb
test
subb
stos
rolb
sub
iret
jle
push
fwait
adc
jle
mov
sar
cmc
sbb
mov
gs
cmpsl
daa
cld
push
push
add
push
jg
and
filds
mov
push
mov
fsubr
into
ja
pop
mov
cmp
sub
sub
lods
sti
sub
in
je
lret
jns
push
cmpb
mov
adc
push
and
xor
inc
hlt
call
or
in
or
dec
lret
int
lea
dec
pusha
dec
mov
xor
outsl
aaa
push
push
pop
aaa
rcrl
inc
xchg
imul
fst
mov
mov
or
cmc
int
inc
xor
push
pop
lock
cwtl
dec
cld
dec
pop
dec
in
push
mov
pop
push
jno
mov
sub
cwtl
xchg
shrb
sbb
sbb
sub
movsl
mov
jbe
push
imulb
dec
mov
mov
fadds
dec
pop
cmc
fldl
xchg
jnp
test
jmp
jb
ljmp
pop
pusha
fwait
cmp
xlat
shl
insl
int
lahf
arpl
dec
jmp
jmp
dec
ljmp
cmp
stos
pop
push
iret
dec
jne
jo
xor
cmp
xchg
fists
test
push
out
stc
pop
sbb
sti
adc
lea
scas
shll
paddw
jb
and
mov
test
cli
inc
mov
call
jno
fwait
subl
sbb
loope
sub
inc
xchg
sub
and
rcrl
lods
imul
lahf
outsl
push
out
in
xchg
ds
lahf
add
jbe
mov
or
sbb
roll
mov
inc
or
xchg
mov
mov
sub
test
inc
and
sub
mov
gs
sub
xor
or
ljmp
or
adc
xchg
loop
loope
or
pop
imul
aaa
cmp
aas
jmp
mov
mov
xor
dec
cmpsl
or
mov
mov
xchg
insl
out
cmc
hlt
js
or
je
lahf
push
or
mov
into
push
sbb
pop
pop
pop
cmp
sub
mov
xchg
sub
stos
in
pop
test
jmp
sbb
ffreep
adc
add
or
cltd
orb
iret
notb
push
inc
cmpsl
aad
test
xor
in
jmp
int
test
js
pop
bound
out
out
cmpsb
pop
cs
mov
hlt
rorl
dec
xor
pusha
stc
jecxz,pt
xchg
push
adc
mov
leave
mov
ja
cld
jnp
or
mov
xchg
cltd
sahf
mov
push
cltd
in
add
rclb
repnz
jns
out
mov
outsl
pop
mov
cmp
xchg
les
incl
in
pop
pop
fnop
mov
xor
xlat
jl
loop
cs
xor
push
adc
push
push
shl
sahf
movsb
ret
aas
inc
xchg
mov
pop
fs
and
pop
add
leave
mov
mov
fidivl
sub
push
jl
mov
and
jg
jbe
or
push
mov
sbb
fwait
shlb
call
xchg
sbb
mul
cld
mov
pop
fldcw
lods
stc
jmp
imul
mov
cmp
shll
out
push
in
jmp
push
mov
lcall
push
fisttpl
add
aam
out
or
mov
xor
adc
imul
loope
les
mov
pop
iret
jl
imul
js
ja
mov
out
or
mov
adc
std
scas
or
jl
fldt
add
repnz
aad
push
mov
idivb
mov
mov
sbb
pop
daa
dec
ret
jnp
jecxz
xchg
test
mov
fwait
and
jmp
aam
or
das
dec
push
sub
pop
xchg
jbe
aaa
out
add
dec
sti
ret
jns
cmp
jo
movl
and
cmp
sbb
imul
out
inc
mov
sahf
movsb
push
mov
lods
xor
jmp
mov
mov
cltd
cwtl
das
fdivrs
aas
sarl
mov
test
in
adc
scas
mov
mov
int3
cmc
add
xchg
stos
cmp
adc
cmp
push
lods
scas
jl
mov
mov
roll
push
ret
js
outsl
sbb
fisttps
dec
neg
mov
ja
cmp
and
sbbb
inc
jb
loop
inc
xchg
scas
bound
gs
int
bound
xchg
shlb
xchg
adc
add
negl
test
push
mov
jnp
sti
or
mov
jge
sbb
push
testb
jae
sahf
vdivss
icebp
out
cmp
ss
aaa
dec
jmp
or
fisubl
loop
mov
jecxz
add
decb
jo
push
imul
cmp
jae
add
rcll
lock
addr16
push
cmp
cltd
fildl
movsb
je
shlb
shll
jmp
or
inc
inc
sub
push
mov
loop
jp
cmp
imull
clc
mov
pop
rclb
movsl
adc
pop
iret
mov
add
xor
xor
sbb
in
clc
and
mov
stos
push
subb
aaa
xchg
xor
daa
lods
push
or
in
push
in
test
loop
imul
sbb
sbb
fdivs
test
mov
scas
dec
sbb
in
lahf
fstpt
inc
ljmp
xchg
xor
lahf
dec
pop
add
mov
xchg
fisubrl
dec
je
andb
xchg
ret
rcll
pop
push
addr16
leave
add
icebp
xchg
push
mov
dec
push
and
sub
pop
inc
mov
out
shll
loope
int
scas
cmp
notb
push
cltd
negl
jmp
popf
imul
jecxz
ret
dec
add
push
repnz
jmp
mov
push
movl
enter
mov
rorl
xchg
addr16
test
and
movl
or
cmp
push
sbb
imul
out
push
sbb
pop
inc
leave
sub
xchg
dec
mov
cltd
imul
or
pop
pop
mov
dec
inc
dec
pop
sbbl
ffreep
or
ja
into
gs
mov
sub
jno
push
mov
pop
fwait
cmp
loopne
and
clc
rol
rol
out
cmp
iret
mov
test
les
xor
inc
ja
jp
lcall
inc
lea
dec
por
xor
mov
inc
insl
clc
xchg
mull
out
pop
sub
xlat
push
fsubl
ret
push
aas
hlt
dec
or
pusha
mov
lret
into
inc
inc
into
loopne
clc
sbb
sub
packssdw
stos
outsl
add
and
rep
movsb
gs
xchg
lret
jb
xor
sbb
and
push
sub
xor
fmuls
sub
jns
fcoms
mov
mov
xchg
sbb
push
rcll
jo,pn
and
xor
jo
inc
rcl
es
in
dec
cmp
dec
sbb
aaa
in
mov
push
sub
pushl
xor
insl
inc
das
sub
mov
xchg
push
mov
sbb
scas
js
js
jecxz
push
cmp
adc
stos
mov
popf
dec
daa
sub
pushf
ljmp
icebp
jle
mov
xchg
pop
jg
xchg
das
jge
ljmp
js
add
out
sti
das
sub
inc
es
pusha
cmpsb
xor
shll
push
xchg
rcl
mov
les
hlt
cmpsl
fwait
insl
repnz
test
push
sbb
add
leave
mov
adc
push
in
or
or
js
inc
mov
outsl
xor
movsl
xchg
js
loopne
in
inc
sbb
je
inc
add
pop
mov
pusha
inc
aad
cmpsb
push
pop
mov
xchg
int
and
imul
imul
movsl
xchg
or
dec
mov
test
loope
mov
subl
push
cmp
in
cmpsl
or
mov
sbb
aam
in
repz
aaa
rcrl
cmpsb
mov
pop
add
sbb
hlt
pop
repz
ja
ret
daa
mov
jo
pop
imul
ret
adc
pcmpeqw
jge
mov
lods
cmp
mov
hlt
das
inc
mov
aad
sbb
push
mov
cli
fisttps
bound
xchg
shlb
shlb
test
inc
pop
lahf
shl
xor
fcmovnb
cmc
xorl
jns
jmp
popa
jns
sbb
jg
roll
call
js
mov
push
mov
test
pop
push
pop
xchg
lods
rorb
repnz
mov
jae
insb
adc
adc
sub
aam
adc
push
mov
and
dec
fdivs
jg
mov
mov
sbb
les
mov
enter
outsl
inc
imul
dec
mov
ror
lods
push
cli
cbtw
loope
mov
sbb
push
loope
inc
call
loop
rcll
ret
ds
ja
cli
gs
loop
insb
lds
jg
push
mov
jbe
pop
ja
dec
in
dec
or
push
push
add
cmp
xor
lods
inc
into
fidivs
ljmp
ret
mov
push
pop
xchg
std
xchg
lahf
out
clc
nop
nop
add
and
xor
mov
xor
leave
and
adc
cmpsl
aaa
sub
mull
xchg
mov
cld
repnz
mov
push
addr16
xchg
sub
cmpsb
daa
pop
int3
jns
or
xor
sti
mov
lods
popf
sbb
test
loope
pop
outsl
cmpsb
mov
mov
cmp
bound
mov
lcall
dec
push
out
mov
outsl
fimull
pop
rcrb
jge
loop
pop
into
bound
xchg
mov
pop
outsl
inc
push
inc
mov
adc
adc
and
jno
mov
cmpsl
or
push
mov
mov
clc
mov
addb
call
pushf
mov
arpl
lea
faddl
sub
fildl
or
push
into
dec
mov
fs
sarl
push
adc
sbb
sub
sbbb
daa
lret
cmpl
dec
xorl
mov
or
les
iret
test
inc
mov
stos
push
xor
xor
xchg
xchg
xor
push
adcl
push
and
sub
pushf
xlat
mov
lret
int
daa
sahf
xchg
in
das
test
out
sub
mov
jge
rcr
sub
outsb
sbb
sub
std
and
sbb
mov
jns
ret
mov
mov
mov
mov
and
into
push
dec
inc
dec
fistpll
xchg
pop
addr16
xor
xchg
cwtl
insl
dec
push
jg
rolb
or
roll
cwtl
cmpsl
mov
loop
into
inc
not
dec
data16
add
mov
jno
out
mov
mov
inc
movsl
mov
push
inc
aad
mov
or
nop
fisubrs
xchg
dec
leave
dec
aaa
fildll
les
inc
push
lods
dec
jl
ret
xor
jnp
cwtl
add
inc
pop
cmp
sbb
loopne
jmp
ret
adc
push
shlb
fs
and
pushf
cs
out
test
shl
arpl
inc
pop
adc
inc
cli
inc
add
jno
sub
pushf
in
out
addl
mov
sub
mov
xor
pop
xor
inc
sub
stos
inc
mov
movl
aaa
inc
fisttps
cmp
lea
pop
push
sub
movsb
jl
pop
mov
pop
dec
and
movsb
pop
jmp
and
pop
push
xlat
inc
sub
daa
rcrl
lahf
fiaddl
push
test
enter
and
ja
sahf
sub
enter
and
mov
inc
ret
add
mov
rorl
xor
or
jecxz
aad
and
jp
and
xlat
or
test
test
andb
js
push
and
lret
dec
arpl
in
imul
cltd
add
dec
inc
and
sbb
add
loop
adc
loopew
stos
push
mov
xor
dec
xchg
jge
pop
ljmp
inc
xorb
stc
popa
xchg
push
mov
mov
jge
pop
push
lods
fnstenv
dec
out
icebp
shll
pop
xor
sbb
fcoml
cld
cmp
insb
add
push
mov
jle
sbbb
mov
nop
fimull
shrl
pop
ret
inc
inc
fwait
ror
push
dec
shl
sub
sbb
adc
dec
jge
push
pop
add
bnd
mov
sahf
lcall
add
fs
mov
xor
fwait
loope
sbb
mov
test
in
out
cld
orb
push
push
xchg
mov
movsl
inc
in
xor
jmp
jno
movsl
and
push
and
sub
imul
or
push
xchg
subl
scas
pop
and
mov
jecxz
pop
sbb
cs
push
sti
fucomp
ror
mov
ret
fwait
push
mov
mov
pop
dec
jnp
pop
test
lock
stos
shrl
mov
xchg
shl
push
sbb
fcmove
icebp
and
ficoml
push
adc
push
std
rep
jae
out
fcmovu
cli
pushf
enter
jge
add
iret
xchg
ljmp
adc
bound
fadd
xlat
pop
xor
lcall
add
pop
inc
cmpsb
test
ds
stos
stc
and
jb
comiss
test
xchg
add
pop
sti
jnp
mov
cmpsl
testl
pop
aam
test
lods
enter
aaa
andb
and
or
testl
cmp
lods
and
sbb
cmp
ja
mov
lods
push
or
ds
repz
dec
mov
pushf
sbb
push
add
adc
dec
test
imulb
sub
cmc
mov
inc
cli
or
test
bound
jb
ficoml
mov
adc
adc
mov
shrl
mov
push
push
xchg
inc
jno
sti
jnp
stos
loopne
negb
cmp
int
loope
jg
fcoms
movsl
ficoml
cmp
jno
ja
add
push
xchg
bound
sbb
iret
arpl
mov
dec
sbb
push
inc
xor
test
inc
icebp
fcoms
jle
cmp
js
pop
lea
push
jns
test
sub
arpl
push
popa
ret
dec
call
aam
movsb
je
mov
and
sahf
dec
not
insb
out
call
stos
or
scas
push
cwtl
jno
xchg
dec
lods
or
andl
test
lahf
imul
mov
push
sti
and
fdivs
fnstenv
in
xorb
xchg
test
lds
cmp
ljmp
push
lcall
inc
dec
adc
mov
test
inc
fnstcw
cmc
jne
and
popa
fdivrs
repnz
ljmp
mov
dec
gs
jle
add
sar
push
bound
jae
dec
dec
out
adc
movb
aam
lcall
loope
pop
test
out
out
mov
jp
sahf
and
sti
divl
or
pop
ds
sbb
xchg
lretw
into
fisttpll
stos
or
js
cmp
gs
dec
sbb
mov
mov
fisttpl
xchg
sbb
mov
lahf
std
and
mov
sti
out
and
testb
cmp
jg
fdiv
xchg
sub
xor
hlt
ja
and
in
sbb
mov
pop
out
out
mov
shrb
dec
js
and
and
fwait
sbb
arpl
out
stos
cltd
sub
fcmovu
sub
sub
imul
in
aad
in
cmpsb
dec
lock
xor
sbb
mov
xor
rcrb
mov
clc
or
jns
xor
jns
or
jne
and
sub
std
lods
in
mov
lock
ljmp
fwait
ds
repz
and
add
mov
mov
xor
outsl
cmpsl
inc
add
les
sbb
sbb
rcrb
daa
or
gs
cltd
out
sub
out
xor
dec
rol
jne
mov
popa
popf
insl
mov
inc
push
movsb
popf
dec
fiaddl
xor
xor
mov
mov
jne
cs
jb
dec
cmp
pushl
mov
xor
outsb
mov
sub
nop
rolb
jae
lea
add
pop
pushf
xor
sub
test
sbb
xorl
fmuls
mov
dec
xchg
inc
lods
loopne
cmp
sub
jnp
ds
movsl
sarl
loopnew
and
cwtl
and
pop
push
lahf
fidivrl
out
mov
sub
adcl
inc
mov
popf
out
fcomi
jecxz
pop
or
mov
pop
add
popf
jnp
jl
or
xchg
lahf
lock
inc
cmc
cs
shrb
cmpsl
dec
jae
pop
repz
push
ds
push
sbb
lds
dec
mov
xlat
push
adc
scas
sub
sbb
pusha
mov
dec
adc
and
push
imul
out
jnp
mov
loop
loop
dec
pop
fcomps
add
lret
xchg
mov
cld
out
jecxz
xchg
pop
mov
out
and
es
lods
push
out
cmc
stc
xor
adc
push
xchg
mov
xor
inc
cmp
outsb
imull
movsb
and
cld
add
mov
xorl
iret
cmc
mov
mov
fwait
scas
mov
out
out
and
push
aaa
jno
in
or
push
pusha
sub
jmp
cmc
int
mov
mov
pop
aaa
mov
jg
fisttps
addb
cmp
cmc
nop
mov
and
pushf
test
push
pop
shrl
sub
leave
lret
int
enter
lahf
pop
inc
rclb
inc
lods
daa
jl
xor
out
pushf
and
repz
test
movsl
xchg
mov
xchg
xor
rcrl
push
xchg
test
jge
jl
jo
cmp
shrb
mov
repnz
ss
mov
xor
mov
jge
pop
pop
bound
push
mov
mov
int3
test
loope
and
and
loopne
andb
sub
jge
and
add
das
test
dec
sub
pop
inc
scas
enter
fwait
popf
icebp
imulb
cmpb
scas
fbstp
insb
sbb
dec
sbb
stc
inc
pop
imul
push
add
sub
popa
mov
cmc
cmp
ds
lret
rclb
inc
xor
xor
mov
in
lods
frstor
or
sbb
mov
push
cltd
adc
sbb
dec
call
aaa
cmp
push
pop
jl
aaa
fdivrl
push
pop
push
mov
ret
out
fwait
leave
dec
insl
jo
repz
jae
add
data16
jmp
scas
push
mov
sub
test
mov
mov
push
fcoms
call
jmp
pushl
adc
mov
fwait
mov
adc
das
clc
sti
andb
nop
xchg
inc
ret
test
or
jg
ds
adc
lcall
push
inc
mov
pop
ljmp
dec
testb
push
lock
mov
push
mov
cld
and
ror
mov
add
cmp
je
subl
add
cmpsb
insl
mov
les
jne
mov
pop
xor
mov
cmp
sbb
ja
push
push
mov
jo
xchg
mov
add
sbb
xor
adc
aaa
icebp
dec
xchg
repnz
dec
cmc
ljmp
dec
cld
adc
out
repnz
std
addr16
das
cmp
push
aas
adc
icebp
dec
rcr
pop
cmp
scas
mov
dec
cmpb
loope
dec
jmp
scas
dec
cmc
out
dec
in
movsl
mov
mov
sbb
lret
movsb
in
arpl
inc
arpl
adc
fwait
nop
imul
and
incl
cmc
push
and
adc
mov
cld
cmp
push
inc
subb
decl
adc
pop
fsubrl
jb
cmpsl
lods
xchg
push
out
int3
icebp
pop
gs
dec
push
pop
xchg
mov
or
mov
sahf
ror
movsl
inc
in
std
cmp
pop
lds
fwait
movsb
stos
lods
push
xchg
dec
fcomps
or
xor
test
xchg
push
push
jg
dec
stos
jecxz
adc
es
movb
mov
xchg
daa
iret
or
cmp
mov
jge
jmp
imul
lods
lcall
call
push
push
mov
push
adc
insl
or
es
rcrl
in
jmp
adc
in
mov
mov
cmp
sbb
lea
pop
xor
mov
int
cmp
xchg
lods
addr16
insl
popf
test
or
mov
out
fstl
ficomps
out
sub
cmp
adc
and
dec
dec
pop
dec
addr16
mov
add
cmp
sti
aaa
hlt
hlt
xchg
mov
mov
cmp
shrl
pop
lods
and
fidivl
add
aam
stos
sbbb
sti
sbb
fldenv
repnz
dec
inc
xchg
je
push
jg
mov
add
mov
or
pop
bound
cltd
insl
ss
mulps
adc
inc
add
add
pop
xor
in
jg
pop
loop
pop
pop
mov
repz
aaa
ja
jns
fsubrs
mov
adc
ds
and
test
cmp
mov
pop
push
sahf
das
cli
or
shrb
pop
xchg
pop
fsts
add
adc
sbb
inc
movsl
in
push
cmp
into
fcompl
and
dec
or
andb
jns
inc
adc
cmpsb
pop
mov
sti
pop
int3
push
push
pop
adc
sub
push
cwtl
std
mov
jle
push
aad
sti
cmpsl
xor
aaa
bound
cmpsl
fdivl
push
pop
outsl
into
out
pop
fidivrl
arpl
and
aam
sub
push
imul
sbbl
in
cwtl
xchg
xchg
scas
lods
pop
sub
inc
dec
clc
or
xchg
notb
loopne
xor
cmp
mov
jae
pusha
cmp
adc
pop
mov
arpl
fnstsw
xor
lods
mov
scas
fistps
popf
xor
lock
mov
outsb
xchg
shll
lret
stos
adc
mov
mov
jb
push
ret
ja
sbb
imul
push
add
jle
cltd
xchg
or
jnp
xor
or
sti
adc
shr
mov
sbb
push
cli
cli
pop
sub
mov
push
sub
loopne
mov
adc
xchg
add
insl
mov
xchg
ja
pop
in
mov
pop
gs
fs
sahf
mov
testl
clc
cwtl
lcall
dec
mov
jno
shlb
push
jge
stc
rcrb
push
roll
inc
stos
pop
iret
or
and
jne
incl
in
and
mov
sbb
unpcklps
rorb
jp
push
gs
and
call
js
loope
push
sbb
cltd
cmp
sbb
add
cmc
popf
xchg
mov
imul
fstl
push
inc
cmc
push
push
add
lock
add
mov
loope
or
pop
adc
jp
jo
adc
push
stos
push
jmp
arpl
jecxz
inc
jecxz
pushl
popa
and
xchg
mov
push
or
stc
rclb
adc
cmpsl
jno
out
jo
cltd
cmpsl
inc
and
mov
out
push
pop
mov
insl
sbb
bnd
fcmove
in
sbb
movsl
xor
fcmovnu
pop
and
mov
insb
dec
push
mov
sahf
sbb
and
in
aam
mov
push
cs
push
cltd
xchg
dec
add
leave
bound
fsts
add
call
aaa
jo
aad
roll
push
xchg
dec
add
jecxz
sub
clc
lret
arpl
inc
mov
jnp
aam
mov
notb
or
pop
mov
jbe
push
addr16
mov
sub
stc
pop
lock
pop
or
ss
imul
inc
int3
and
mov
stc
inc
rcrb
mov
shl
fcomp
lret
aaa
jge
ss
mov
arpl
mov
dec
mov
ret
fisttps
mov
cltd
loope
mov
nop
or
cmc
mov
mov
mov
ljmp
jge
rcrl
sub
mov
and
ss
mov
mov
or
jl
fcomi
sub
dec
rclb
les
cmp
sbb
stc
or
add
inc
xchg
popa
and
cwtl
add
lods
les
lods
xlat
pusha
and
sub
pushf
mov
pop
xchg
fnstsw
sbbl
mov
sub
ffreep
mov
sub
inc
ficompl
cld
push
or
sub
dec
push
orb
divb
mov
lods
cmpsb
and
push
add
imull
sbb
xchg
xchg
or
and
xor
popa
mov
idivb
scas
sub
nop
in
cs
pop
fwait
jecxz
ja
pop
icebp
push
add
mov
and
inc
imul
jno
rol
or
lcall
test
outsb
mov
add
ss
cmc
sbb
dec
mov
mov
mov
sbb
xor
push
mov
xchg
mov
cltd
dec
add
inc
mov
std
ljmp
inc
daa
mov
xor
sub
push
mov
cmp
push
xor
jo
int3
cmpsl
push
mov
in
mov
sbb
fbld
pop
push
mov
inc
into
xchg
cmp
lock
mov
add
imul
jle
push
rcll
arpl
movsl
jnp
cmp
inc
mov
push
cmp
adc
enter
aas
pop
mov
sbb
inc
add
aam
divl
adc
subb
push
mov
movsl
dec
mov
jle
dec
mov
in
cmc
and
mov
iret
lea
cmpsb
adcl
or
sti
in
cltd
mov
in
int3
cmp
jg
outsb
repnz
fidivl
jno
repz
xor
pop
leave
loop
adc
sub
je
xor
mov
pop
xlat
aaa
add
add
movsb
or
cmpsl
fs
lret
sbb
xchg
stc
arpl
scas
push
pop
mov
xor
xchg
cmp
mov
fldt
pop
stc
scas
sub
pushf
jnp
jge
pop
ljmp
outsb
fisubrl
mov
loopne
call
xchg
inc
push
daa
cs
adc
into
inc
inc
or
popa
test
scas
add
fdiv
jl
sbb
cmp
icebp
xor
jnp
xchg
fsub
cmpsl
imul
mov
cltd
test
xor
pop
fwait
pop
stc
adc
into
sbb
pop
xor
js
xor
push
mov
adc
and
in
mov
paddsw
test
lret
mov
fwait
or
dec
cwtl
mov
cmpsl
movsw
cmp
push
imul
push
mov
mov
or
adc
pop
fisttps
inc
cmpsl
data16
mov
dec
xchg
cmp
repnz
aas
sbb
dec
mov
in
mov
add
and
addr16
stos
mov
jg
pushf
es
das
dec
cmpsb
xchg
push
mov
and
mov
jns
cwtl
pop
shl
mov
movsl
adc
hlt
lock
in
leave
xchg
arpl
jl
fwait
sub
inc
or
lret
lret
add
add
mov
out
cli
cmp
mov
aas
push
xor
call
pop
popf
mov
scas
dec
jne
jb
push
insl
mov
pushf
mov
push
lcall
movsl
pop
mov
and
popf
daa
stos
into
push
loopne
pop
hlt
jae
inc
mov
loop
push
aam
repz
negl
imulb
sbb
popl
jae
clc
dec
outsb
push
flds
std
and
add
cli
out
pop
outsb
mov
test
cmp
pop
out
cmp
test
loope
bound
imul
mov
out
gs
inc
mov
xchg
in
mov
xor
sbbb
xchg
bswap
mov
aam
jnp
sbb
ret
jle
jnp
mull
jb
mov
dec
setb
sub
cmp
jp
mov
mov
daa
and
lods
and
mov
jnp
xchg
rorb
mov
lret
ret
pushw
lret
push
xor
nop
add
sbb
fbstp
insl
mov
cld
ljmp
insl
nop
insb
push
mov
cmp
sahf
inc
pop
cmp
cmp
movsl
pop
sbb
add
popf
rorb
mov
imul
push
addb
dec
add
int
mov
es
ljmp
sarl
sub
mov
popa
lcall
jb
xchg
stos
mov
xchg
pop
cld
mov
cmp
and
pop
mov
int
jae
mulb
test
int3
mov
into
push
pop
bound
inc
data16
cmpsl
mov
push
or
popf
jle
xor
in
in
int3
dec
cli
add
gs
lret
mov
stos
cmpsb
daa
pop
pop
dec
cmp
test
leave
pop
ds
xchg
pop
jno
adc
sbb
jae
cmp
sti
jecxz
int3
mov
out
popa
inc
rcl
lcall
std
mov
xor
addr16
sahf
mov
les
mov
mov
mov
jae
rcr
mov
inc
dec
imul
mov
leave
mov
popl
add
out
lea
ja
add
cltd
and
xlat
ja
clc
call
sbb
sahf
and
push
sbb
pop
in
std
pop
das
test
add
ss
sbb
iret
add
jge
nop
push
jg
pop
mov
cmp
and
sbb
sbb
adc
jns
adc
mov
cmpsl
ss
testl
fstps
jne
mov
rcll
das
xchg
mov
mov
sbb
adc
xchg
sub
stos
push
xor
jmp
enter
push
or
push
pop
insb
jne
les
lahf
xchg
sbb
xchg
pop
cwtl
insl
cmpsb
xlat
ffree
push
std
pop
scas
out
rol
fiadds
mov
notl
xchg
lret
cwtl
xchg
fwait
inc
cmp
cmp
lods
xchg
incb
and
and
add
mov
ret
push
out
mov
jae
push
mov
loop
xchg
icebp
test
xchg
mull
pusha
dec
or
rolb
lods
xor
cmp
pop
lods
mov
xchg
push
jmp
hlt
inc
sub
rcr
jmp
popf
jecxz
in
and
cmpsl
das
orb
sahf
pop
fsubrp
inc
pop
testl
cmp
ret
dec
cs
dec
cmp
xor
push
xchg
adc
push
mov
xchg
loop
loop
jecxz
stc
adc
scas
jecxz
xor
mov
adc
mov
mov
out
addr16
xchg
addr16
cld
fdivrs
xor
mov
cli
mov
cmpsl
daa
pop
loop
lea
push
insb
pop
xchg
add
inc
clc
jle
mov
pop
aam
pop
inc
mov
lock
ss
mov
and
and
mov
push
sbb
lock
and
sub
xor
xor
pop
lods
or
nop
testb
cmpsl
ret
test
cmp
mov
inc
push
xchg
jg
clc
mov
add
jle
loop
sahf
mov
enter
sub
sbb
and
xor
testl
out
daa
mov
enter
arpl
mov
pop
iret
insb
lods
sub
mov
adc
insl
inc
jne
mov
lods
jl
js
and
test
inc
insb
int
mov
jge
push
xchg
mov
testl
jo
call
cmpsb
sbb
mov
jns
popa
mov
adc
dec
shrb
xor
or
xchg
cltd
hlt
jmp
enter
pop
cmpsb
mov
mov
icebp
xor
cli
pop
aad
sbb
push
out
std
or
or
add
out
xchg
dec
push
adc
jg
xchg
adc
push
inc
lods
loopne
mov
inc
cmpl
out
test
jne
sbb
mov
pop
je
sub
inc
add
sahf
cli
lahf
sti
std
and
out
sub
lcall
mov
loop
js
int3
inc
call
cwtl
test
xor
sbb
je
ja
cmc
pop
imul
in
test
daa
imul
mov
mov
push
inc
fs
sarl
jmp
xor
jl
pop
leave
test
pop
cmpsl
ds
lret
lret
cmpsl
pmulhuw
scas
ret
lret
clc
cmp
jno
mov
mov
mov
data16
test
cmp
mov
and
jae
xchg
movsb
adc
stos
aad
mov
fnstenv
cmpsl
test
loope
add
aad
or
jae
jne
sub
sbb
dec
mov
ficoms
jnp
lds
mov
lock
dec
add
sub
arpl
mov
sbb
imul
das
sub
in
push
push
sub
sbb
mov
fstpt
cmpsl
pop
xor
aas
fsubl
cmp
cmpsl
inc
pushf
test
mov
cmp
mov
inc
mov
lods
das
xchg
push
lret
mov
test
out
arpl
dec
xchg
lcall
cmp
movsl
cmp
mov
ss
adc
std
mov
pop
dec
ror
cwtl
punpckldq
mov
add
sub
cmpl
xchg
enter
pop
jne
int3
dec
scas
xor
in
jge
sub
outsl
fnstcw
sbb
pop
pop
sbb
ret
je
xchg
cli
cmp
add
xor
pop
jge
out
roll
mov
std
stos
push
cld
add
or
dec
mov
mov
xor
cmp
mov
cmp
pop
sbb
inc
adcb
sbb
push
aaa
ds
pop
or
add
dec
test
or
or
sbb
stos
mov
cmp
add
sbb
movsb
sub
mov
pop
xor
xor
test
inc
jl
xchg
sti
sahf
mov
movsl
es
lods
jo
lods
lds
add
sti
adcl
sti
nop
xchg
adc
jmp
sub
fsincos
pushf
out
incb
mov
cmp
popl
mov
mov
mul
jmp
cld
mov
js
inc
xor
mov
lods
scas
or
in
xchg
add
push
sahf
adc
push
pop
xchg
cmc
jle
jmp
lahf
cli
cmc
test
movsb
or
push
imul
jmp
pop
scas
push
sub
mov
add
cmp
sbbl
mov
push
xor
inc
pop
testb
fadds
mov
movsb
cli
enter
jl
adc
scas
in
add
inc
push
xor
jo
sub
mov
inc
xor
shlb
jecxz
cmpsl
fucomi
loop
gs
mov
push
jbe
nop
test
or
pop
test
aaa
nop
cmpsb
call
lcall
icebp
push
jg
mov
cmp
jge
inc
mov
jle
dec
mov
or
daa
pop
inc
pop
into
mov
flds
scas
mov
sub
mov
cmp
push
pavgb
addl
addr16
mov
xor
loop
mov
rcrb
cmc
lcall
cmp
jne
inc
dec
inc
orl
incl
repz
notb
popf
sub
in
lods
pop
dec
mov
xlat
int3
in
sbb
mov
stc
xchg
fld
push
mov
add
jbe
fiaddl
mov
cwtl
xlat
sub
shlb
jecxz
inc
movsl
add
and
push
movsl
lds
cwtl
sahf
jno
add
ja
xor
lret
and
fwait
adc
repz
insl
dec
cmpsl
sbb
outsb
call
push
xor
sbb
pop
lahf
pop
int3
incl
push
test
fcomp
sub
scas
and
leave
xorb
mov
mov
fdivrl
inc
lahf
sbb
inc
aam
adc
push
sbb
cmpsb
jnp
mov
notl
insl
and
dec
bound
cwtl
orb
and
jg
and
mov
int3
cmp
into
lock
ror
dec
cmpsb
cmc
inc
out
mov
fbstp
push
out
lahf
mov
dec
xchg
sahf
mov
imul
jne,pt
shll
dec
inc
sbb
mov
sarl
iret
xor
test
dec
sbb
and
adc
push
mov
pop
call
inc
cmp
stos
mov
sub
test
lcall
jnp
mov
ja
cwtl
dec
icebp
shlb
lahf
fs
mov
gs
out
cwtl
lds
rorl
nop
jecxz
arpl
test
loop
out
and
aam
int
mov
or
mov
mov
popf
fdivr
mov
or
testl
rclb
leave
mov
mov
in
mov
adc
xor
ret
push
imul
sub
decb
movsl
aaa
jae
xchg
insl
mov
in
mov
mov
outsl
sbb
popf
popa
cltd
cmp
out
lret
dec
cmp
sub
adc
mov
pop
jmp
sub
xorl
int3
xchg
jecxz
jl
loopne
add
sti
popa
nop
int
pop
inc
inc
sarl
push
dec
dec
mov
sbb
lcall
es
ds
push
mov
hlt
arpl
sub
loop
adc
inc
ds
add
cmp
dec
out
mov
gs
inc
add
or
jmp
rcll
orl
int3
jg
data16
cltd
inc
test
je
sbb
loop
pusha
sar
push
dec
ljmp
mov
fisubl
daa
aas
jbe
aam
daa
push
or
test
cltd
int
repnz
pop
test
ficoms
pop
mov
fmuls
insl
sahf
mul
scas
dec
iret
sub
dec
sub
aam
mov
jg
fs
fmulp
push
xchg
in
fdivrs
outsl
arpl
lods
cmpsl
ret
dec
outsl
jge
lea
cmp
mov
aaa
mov
bound
loop
stc
nop
lahf
cs
cmp
outsb
imul
add
push
int
dec
or
adc
fsin
pop
jo
mov
and
movsb
pop
push
jne
into
mov
xchg
adc
enter
hlt
cmpsb
outsl
xchg
adc
ds
add
lret
xchg
jmp
mov
dec
fwait
cld
and
ret
mov
adc
jb
icebp
lahf
lret
stc
lcall
ss
out
shll
xor
add
sahf
bound
push
addr16
sahf
sbb
das
bound
add
xor
jp
mov
mov
adc
or
cld
lock
mov
jl
loope
cld
das
jge
repz
arpl
xchg
ss
push
mov
cwtl
out
xor
add
add
test
stos
mov
fs
push
sub
sub
negb
push
icebp
fstpl
jg
xchg
dec
sbb
mov
cmp
push
mov
cld
push
icebp
setge
in
or
push
or
cmpsl
movsb
mov
lahf
jae
fisubs
cmp
sub
sbb
xor
push
jbe
ja
mov
pop
cmp
je
mov
rcrl
lcall
shll
dec
addr16
jmp
xchg
xchg
movsb
jbe
or
inc
into
fs
pop
int
mov
pop
jbe
insb
pop
or
loop
fwait
sarb
fcompl
loop
sub
clc
aad
jp
jl
mov
mov
jmp
insl
cwtl
inc
fucomp
imul
dec
in
cmpsl
jnp
or
xchg
jo
adc
call
jo
sub
das
and
ljmp
and
add
sub
push
ds
jno
jb
shll
mov
js
xlat
leave
insb
fisubs
xlat
lcall
add
sub
mov
mov
aad
lret
daa
and
fcompl
lcall
inc
pop
jecxz
ds
pop
clc
imul
push
arpl
pop
rcll
mov
outsl
fists
jae
das
mov
mov
jg
cld
loope
popf
sbb
push
sbb
mov
aas
mulb
xchg
lock
jne
sub
out
push
or
jo
mov
icebp
test
into
pmaxub
inc
or
jne
and
sarb
mov
cs
dec
stos
push
lret
pop
cmp
clc
lret
imul
lock
cs
sbb
sbb
jnp
xchg
sub
movsl
stos
jnp
andb
sbb
outsb
mov
pminub
sub
mov
cmp
mov
dec
sbb
or
scas
jae
scas
xor
mov
sbb
mov
in
pusha
je
mov
sub
es
or
cld
mov
mov
push
xchg
les
ja
or
adc
loop
hlt
aaa
xor
jb
outsl
mov
cwtl
roll
or
faddp
jb
test
ret
sub
xchg
adcl
jp
fstps
test
sbb
push
sub
bound
xor
outsb
mov
add
jmp
in
jl
mov
mov
insl
or
sub
outsl
mov
fs
push
push
mov
push
fstl
jge
lds
daa
arpl
add
jnp
shl
call
cmp
xor
adc
movsl
aas
add
mov
cmpsb
repz
jecxz
cwtl
dec
adc
mov
mov
pop
or
jbe
cmpsl
loopne
dec
sbb
mov
xchg
mov
dec
sub
or
dec
inc
hlt
cwtl
andb
jnp
pop
int3
insb
jnp
test
pop
movsl
ret
je
mov
lea
das
cmp
les
xor
sbb
insb
lock
pop
pop
or
jne
inc
mov
and
inc
mov
mov
cli
nop
mov
into
mov
out
gs
lods
sbb
mov
outsl
add
dec
xchg
mov
push
and
xchg
pusha
add
cs
xchg
imul
mov
popf
iret
clc
add
mov
sub
or
dec
cmp
ljmp
mov
fmull
fisttpl
popa
push
icebp
test
mov
and
add
mov
pop
push
push
cli
cmp
mov
pop
pop
lahf
xlat
pop
sbb
iret
pushf
inc
stos
clc
sahf
mov
sub
add
add
roll
iret
dec
jle
or
pop
inc
jl
ljmp
mov
pop
sub
push
inc
push
daa
sbb
lret
orb
mov
das
xor
sti
cli
mov
vmread
call
adc
push
icebp
and
lods
jnp
push
cmpsl
push
mov
xlat
jno
lock
dec
enter
js
mov
push
sub
out
out
xor
lcall
mov
cwtl
mov
in
jae
or
lock
mov
sub
out
mov
inc
popa
roll
or
push
bnd
push
mov
xchg
adc
fsubr
out
scas
fcoml
mov
in
movsb
sub
fdivl
shrl
or
mov
out
mov
cmc
jns
cbtw
mov
mov
repnz
sub
aas
push
orb
ds
and
push
icebp
fildl
aaa
cmp
push
lock
push
mov
jns
fldcw
loope
jge
les
adc
jecxz
aaa
iret
jnp
mov
push
loope
in
mull
mov
xchg
pop
cmc
pop
and
fadds
jmp
das
mov
imul
lds
imul
inc
mov
mov
dec
xchg
adc
inc
mov
sti
outsb
add
ror
xchg
fidivrs
sub
jno
adc
aad
sbb
mov
push
test
mov
cwtl
pop
xchg
xlat
sub
jbe
cmp
icebp
aaa
fdivl
mov
pop
clc
fidivrs
add
xchg
mov
jnp
inc
nop
dec
bound
loop
movsb
jnp
rcrl
mov
pop
cmp
inc
push
test
test
ret
pop
ja
add
in
ja
adc
xor
or
pop
mov
clc
pop
push
popaw
push
cmc
mov
lcall
mov
cmp
fstpl
dec
dec
xlat
test
push
adc
inc
imul
xchg
cmp
sbb
pop
je
xchg
notl
xchg
and
gs
lds
sbb
icebp
cmp
and
xchg
lret
sub
dec
int3
cltd
add
mov
roll
jo
lret
add
cld
aaa
imulb
test
fcoms
adcl
add
bound
push
stos
stc
mov
xlat
fisttpll
xchg
cmc
mov
cmp
lods
lret
xor
sbb
bound
call
sbb
arpl
pushf
out
or
dec
dec
sbb
add
inc
test
jb
imul
loopne
insb
mov
cs
jne
push
pop
sahf
sub
jno
pop
sub
sbb
jbe,pn
fbld
push
inc
push
mov
mov
insb
add
push
cmovs
addr16
out
faddl
xor
push
mov
sbb
push
fucomip
cmpsl
popf
mov
jge
mov
and
push
fcompl
push
std
cmp
enter
mov
stos
ja
vmwrite
into
pop
inc
mov
xor
fsts
and
pop
cmp
push
inc
jns
in
movsb
pop
nop
fldenv
push
add
pop
int3
movsb
mov
outsl
push
xor
lret
pop
xchg
jbe
cmpsb
lahf
pusha
ret
les
mov
insl
dec
mov
lds
sbb
sarl
mov
addl
push
xchg
out
fcmove
sbb
mov
and
sbb
dec
es
aaa
xchg
sub
mov
in
jbe
test
cmp
xchg
mov
nop
mov
clc
push
mov
push
mov
pop
sahf
and
shrl
mov
mov
pop
cltd
mov
sub
hlt
cs
adc
mov
inc
ljmp
push
imul
orb
mov
jge
xchg
dec
mov
add
jl
mov
in
pop
dec
pop
dec
lea
aam
mov
push
cmpsb
out
mov
mov
add
and
call
jle
lret
inc
adc
push
in
imul
imul
movsl
and
test
mov
ljmp
subl
test
hlt
cmp
rcr
stc
arpl
adc
loop
adc
stos
adc
sub
or
mov
in
mov
cmpsl
adc
jmp
mov
icebp
rorl
fists
mov
ret
ss
xchg
jbe
movups
mov
les
jns
jae
je
fsubr
outsl
sbb
sbb
cmpb
notb
adc
xchg
lret
mov
adc
sahf
inc
sbb
sub
incb
add
sub
das
add
jns
and
dec
roll
fwait
hlt
xor
cmp
ss
pop
inc
jmp
in
jo
fidivs
enter
push
loop
xchg
shr
fiaddl
into
add
subl
mov
jmp
lods
jl
lret
inc
mov
nop
lds
adc
mov
push
or
bound
imul
shl
xor
in
gs
addb
push
aaa
push
xchg
aad
mov
ljmp
int
mov
cmc
dec
push
orb
punpckldq
sbb
mov
and
in
sbb
cli
pop
adcb
mov
scas
sub
sbb
scas
sbb
movsl
pop
hlt
and
mov
lock
call
mov
xor
cmp
pop
rorb
andl
pop
inc
lea
jne
cmp
aaa
addr16
sbb
push
arpl
sbbb
rorl
xchg
sbb
sarl
xor
pop
les
pushf
cmp
and
mov
ret
xor
cli
popf
sbb
xor
arpl
and
xchg
sub
in
out
push
push
imul
ret
insl
subl
xchg
popf
sub
leave
test
xchg
cli
push
out
or
push
in
or
mov
mov
scas
dec
pop
loope
pop
inc
lods
adc
sbb
sub
ljmp
cmp
lock
ror
scas
or
jg,pt
dec
int
cltd
clc
dec
dec
jno
cld
dec
sub
cmpsl
testb
in
out
int3
add
add
aam
mov
pop
test
cs
dec
xchg
mov
mov
mov
imul
and
and
xor
or
loopne
and
test
addr16
and
sahf
xor
outsb
mov
push
pop
popf
jge
pop
jge
and
push
jle
mov
movsb
jl
jae
dec
arpl
dec
add
mov
fsubr
insb
xchg
negl
frstor
les
sbb
pop
xchg
add
adc
and
and
rcll
pusha
pop
lock
jl
sbb
movsb
testl
mov
mov
ljmp
push
in
mov
jno
xor
aas
icebp
push
dec
lahf
out
adc
or
or
lahf
jp
push
jno
pop
fcomps
and
ja
nop
inc
xchg
imul
es
cmp
add
aaa
mov
push
dec
jg
or
fldt
xchg
divl
adc
lret
imul
jmp
ljmp
adc
int3
mov
out
mov
cmp
mov
insb
jmp
int3
mov
nop
mov
notl
xor
inc
dec
movsl
jp
aaa
xchg
xchg
adc
mov
xchg
cmp
clc
ror
sbb
leave
push
jae
int
int3
pushf
mov
je
insl
add
sti
cld
or
mov
cli
mov
mov
adc
nop
xchg
lahf
and
mov
sbb
cmpsl
test
fnstcw
pop
add
outsb
jl
lea
fistpll
lcall
insl
jbe
dec
push
cmovbe
rol
imul
fcom
dec
out
xor
enter
jne
aad
jecxz
mov
leave
movsl
ds
add
sbb
icebp
cmp
add
sahf
inc
mov
xchg
shll
inc
leave
pop
and
pushf
sbb
mov
loope
scas
enter
es
or
out
loop
inc
cmp
std
xor
movsb
cwtl
pop
dec
imull
sub
or
dec
ljmp
add
xor
rcll
push
add
pop
aaa
outsl
ds
stc
fadd
cli
mov
jle
cmp
insb
jmp
sbb
inc
mul
cmpsl
movsl
aaa
push
jmp
pop
das
int3
sbbl
test
ret
enter
roll
jmp
gs
dec
jb
or
pop
mov
inc
lds
dec
push
mov
std
and
or
adc
push
loopne
aam
jg
movswl
shrl
cmp
test
pushf
sub
mov
push
cli
xchg
mov
mov
in
jg
adc
sbb
lds
cmpsb
jo
push
dec
hlt
dec
dec
and
clc
push
xchg
mov
xor
or
mov
cmp
and
cmpsb
or
sub
fdivrs
mov
jae
popa
push
jle
dec
in
les
xchg
repz
cld
sub
mov
add
jge
int
add
xchg
js
xor
cs
xchg
jne
fs
lock
int3
mov
xor
mov
lahf
sub
mov
inc
loop
pop
loop
scas
test
lea
lidtl
sbb
out
cld
cmp
jb
pop
mov
inc
cmpsb
push
js
adc
mov
pop
arpl
mov
add
cmp
lret
mov
or
cmpsb
mov
orb
adc
dec
outsl
cmp
cmpsb
repnz
or
sbb
or
pop
aaa
rcl
lcall
xor
xor
and
daa
lds
hlt
out
frstor
cltd
jbe
dec
lods
sub
movsl
ret
mov
pop
je
and
sti
dec
test
cmovg
mov
in
and
jl
mov
call
push
bound
mov
adc
or
push
add
pusha
cmp
pop
das
scas
sbb
pushf
jae
repnz
repz
push
cmp
sbb
test
inc
mov
iret
mov
fs
test
push
sub
dec
test
adc
sub
jne
or
pop
fstl
jns
pushf
loope
imul
mov
dec
jge
fldenv
inc
cltd
fcoms
xchg
jge
sbb
and
es
sahf
cltd
adc
sbb
stos
mov
scas
addb
js
pop
ja
jle
mov
mov
push
sarl
inc
sbb
cld
sahf
mov
adc
xchg
fdivrl
sarl
adc
jmp
scas
lea
scas
mov
sar
lock
or
push
sub
xlat
and
ret
jmp
push
push
das
popa
adc
dec
fisttps
xchg
push
inc
filds
fidivs
add
sbb
add
cmc
add
shrl
popa
sub
aam
icebp
inc
sub
and
sub
and
leave
cwtl
cmp
scas
ljmp
lahf
cli
imul
push
sbb
push
adc
bound
out
aam
pop
push
shlb
cmp
fldl
jb
inc
call
movl
push
mov
push
inc
sahf
cld
cwtl
rcll
jecxz
jae
iret
inc
clc
lea
pop
jo
adc
ljmp
loopne
adc
and
clc
inc
sbb
xchg
jmp
push
jl
adc
data16
mov
push
inc
mov
and
sbb
mov
dec
mov
mov
pop
adc
out
mov
cltd
push
xchg
push
imul
jo
rol
rcrb
pop
cmp
movsb
mov
clc
mov
mov
insl
jg
sti
push
or
out
loop
test
cmp
add
xor
in
ss
into
je
mov
xor
subb
cmp
notb
outsb
xchg
loop
lock
mov
xchg
arpl
mov
testb
cmp
bound
cltd
cmp
enter
or
scas
movl
test
icebp
call
andl
popf
mov
fwait
pop
dec
mov
pop
push
fst
fdivs
movsb
xor
jo
fstps
jecxz
ljmp
sbb
out
mov
push
jne
dec
icebp
jg
inc
scas
push
insb
xor
movsl
pop
inc
pop
fldt
and
cltd
arpl
or
fld
and
jae
and
cmpsl
pop
jmp
sub
inc
lcall
ucomiss
inc
addr16
and
ds
inc
nop
xor
mov
or
lret
jae
popa
mov
pusha
xchg
fisubrl
xchg
dec
lds
mov
les
mov
ret
jle
and
dec
xchg
pushf
cmp
sub
xchg
ljmp
data16
inc
mov
loopne
and
fidivs
mov
or
mov
repz
dec
xchg
outsl
push
lea
and
xchg
xchg
rorb
outsb
push
outsb
iret
add
dec
add
push
mov
push
jb
mov
outsb
pop
add
mov
repz
or
dec
mov
push
daa
lret
cmc
dec
lds
insb
mov
je
popa
jne
mov
fcomp
out
jl
jecxz
mov
adc
pusha
das
sbb
cli
sub
jmp
mov
es
mov
mov
mov
das
dec
cmpsl
sub
rclb
movsb
roll
pop
mov
ret
push
sbb
das
mov
daa
cs
cmp
popf
pop
inc
pop
mov
lret
nop
fsts
xchg
orl
jp
subl
push
js
in
xchg
out
ret
sub
sarl
push
push
pop
mov
mov
lods
ret
test
popf
dec
nop
ret
loopne
xchg
outsb
xor
or
jge
sbb
cs
daa
add
xchg
xorl
hlt
outsb
pop
add
pop
dec
jmp
inc
js
inc
shrb
mov
mov
sbb
xor
xor
pop
xor
scas
jno
inc
sub
and
dec
inc
outsb
mov
lahf
scas
inc
clc
push
push
daa
daa
push
jnp
inc
or
scas
push
xchg
add
aad
xchg
xor
sub
es
lcall
mov
pop
or
pop
push
leave
cmp
aam
imul
movsl
push
adc
and
mov
mov
test
or
sbb
in
adc
xlat
jnp
cmp
push
mov
fistpl
mov
mov
sbb
shlb
loop
pop
arpl
repnz
into
mov
and
jne
inc
popa
aam
mov
fnsave
add
add
or
cmp
and
inc
stos
bound
push
cltd
clc
shll
jp
cltd
sbb
cmpsl
pop
pop
cld
xchg
xchg
dec
fldl
adc
inc
cwtl
and
fstpl
xchg
mov
adc
adc
mov
xchg
pop
mov
dec
call
pop
dec
inc
pop
mov
ret
cmp
bound
mov
pop
fidivrs
mov
out
daa
int
and
lret
into
out
mov
inc
addr16
push
mulb
mov
adc
push
sti
mov
jp
adc
pop
mul
scas
insb
cwtl
xchg
lret
pop
dec
dec
or
inc
and
hlt
stos
das
push
or
pop
idivl
repz
ds
iret
les
insl
insb
pushf
cmp
cli
lret
mov
push
sub
inc
mov
dec
in
aas
lret
mov
roll
add
add
and
jo
push
xchg
cmp
add
test
add
fwait
pop
insb
add
loope
ja
push
aaa
dec
loop
jo
jmp
push
icebp
lahf
add
lods
mov
adc
test
dec
inc
into
dec
sarl
fidivrl
jo
repz
cmpsb
out
lret
arpl
ret
addr16
push
add
fnstsw
pop
xchg
cli
add
xchg
loop
cwtl
popf
sub
pop
test
mov
repnz
xor
mulb
call
jb
inc
in
nop
xchg
push
sub
jmp
fisttps
pushf
pushf
stos
jb
xchg
pop
add
push
aaa
fucom
jnp
cmp
scas
fistps
add
mov
leave
jmp
jns
frstor
cmp
pop
xor
jl
xor
hlt
add
mov
in
in
mov
xor
mov
inc
dec
fsub
pop
adc
and
sub
lock
bound
repz
cld
cltd
mov
cmp
sub
mov
dec
sub
pop
sbb
pop
bound
pushf
sbb
daa
cmp
mov
icebp
or
pop
xorb
fsts
insl
lahf
int3
bound
repnz
out
xchg
outsb
push
jge
aad
sbb
les
adc
cmp
imul
lea
int3
xor
push
cmp
movsl
into
push
adc
out
pop
mov
sub
cmp
dec
adc
jmp
ret
insb
shll
and
mov
add
andb
ret
cmp
mov
sahf
xor
loop
out
mov
xchg
inc
push
rclb
bound
cmp
shl
rcrb
dec
sub
mov
jecxz
into
jp
imulb
scas
xchg
std
ud0
cmp
into
js
in
jge
int3
ds
movsl
mov
or
cltd
pushf
cmpsb
repz
mov
aad
ss
push
push
sbb
adc
xchg
dec
fwait
bound
sub
flds
pop
das
push
insl
dec
clc
inc
out
cmp
cmp
and
jb
jge
sbb
dec
nop
stc
xor
in
push
nop
incb
cmp
fstps
xchg
ret
shr
push
push
aaa
sti
push
push
jecxz
in
push
add
sbb
adc
addr16
into
imul
inc
pop
lods
adc
push
fwait
aaa
test
loope
cmpsl
in
pop
ja
lret
xlat
mov
and
pusha
dec
xchg
jl
fisubs
add
pop
enter
xchg
dec
mov
mov
add
xchg
cmp
cwtl
sub
mov
mov
mov
bound
cmpsb
xchg
fwait
mov
push
lret
push
int3
aad
lds
les
out
jl
repz
test
cmp
movsb
pop
nop
sub
mov
ja
adc
sbb
mov
scas
lcall
or
frstor
je
cmp
repz
adc
rclb
cmc
insl
dec
sbbl
mov
jmp
rclb
ds
pop
packuswb
sbbb
in
cmpsb
lods
mov
out
jno
add
ja
xchg
push
out
jp
jo
push
xchg
fadd
test
pop
test
les
aam
fs
adc
fimuls
pop
stos
fwait
mov
les
mov
xchg
mov
inc
fmull
push
sarb
enter
pop
arpl
orl
fmuls
mov
jo
push
pop
popf
mov
pushl
cmc
dec
and
cs
ds
subb
sub
xor
flds
gs
cmp
loope
pusha
adc
push
jo
push
pusha
int
incl
sub
inc
fwait
in
sub
push
insl
pushf
and
mov
out
xchg
push
and
imull
inc
mov
rorl
or
fstpl
mov
inc
adc
jbe
inc
bound
dec
stc
or
loopne
ret
xor
mov
mov
in
es
or
push
into
or
les
or
xchg
rclb
arpl
and
xchg
jnp,pn
push
adc
mov
sub
add
mov
adc
ja
cmp
sti
ficompl
cmpsl
int
shll
inc
pop
out
dec
mov
lock
call
nop
cltd
loopne
outsb
mov
int3
nop
xchg
out
popl
call
inc
pop
scas
das
and
in
inc
mov
xchg
js
mov
adc
cmpb
pop
cli
inc
sub
sti
xor
jbe
mov
insb
dec
pop
inc
jecxz
cli
lods
pusha
inc
sub
push
stos
bound
int3
mov
ds
pop
lret
jmp
and
or
sarl
je
loopne
mov
push
les
sbb
iret
pop
mov
sti
mov
es
pop
mov
add
mov
cmp
scas
sti
mov
and
mov
xor
stc
cmpsb
out
mov
cwtl
adc
bound
nop
lds
cwtl
or
fstpl
loop
lock
mov
xchg
adc
or
das
xchg
pop
roll
and
aam
jle
or
xchg
pop
lret
aas
sahf
jle
mov
inc
mov
icebp
stc
je
adc
cltd
fmulp
sahf
add
divl
adc
mov
sbbb
test
sbb
fidivl
or
js
mov
sbb
push
fisttps
shlb
lods
inc
cltd
mov
andl
xchg
mov
xor
arpl
pop
inc
pop
test
mov
fadds
mov
inc
popa
lods
add
cmp
lcall
js
aas
popf
sub
dec
add
xchg
sbbb
inc
movsl
cmp
sub
sbb
movsb
jae
add
ja
sub
adc
adc
fistpl
push
outsb
add
sub
jg
xor
jge
jg
push
sbb
es
cmpb
fldl
ja
lret
fmuls
add
dec
add
add
jbe
stos
int3
xor
dec
jae
mov
imul
mov
mov
cmp
sub
jbe
jb
outsl
mov
xlat
jne
jl
nop
sub
xchg
cmp
fs
in
sbb
aaa
pop
or
mov
call
stc
ss
repnz
push
ss
xchg
enter
sub
mov
and
mov
insl
mov
mov
pop
cs
push
mov
movsb
jmp
mov
sub
and
mov
test
jnp
arpl
enter
push
push
push
jecxz
mov
fwait
popa
push
xor
mov
sub
out
xor
xchg
movsl
sub
pop
cmpl
loop
xchg
lods
push
push
pop
dec
bound
shll
sub
and
sarl
mov
jb
push
sarl
mov
push
test
pushf
fistpll
cmpsl
insb
adc
sub
test
js
adc
lahf
dec
daa
mov
cmp
pop
lahf
sub
mov
sbb
push
loopne
inc
mov
pop
inc
sub
xlat
jp
call
das
xor
mov
je
enter
push
leave
pop
jns
sub
sbb
gs
jno
and
mov
in
push
inc
lahf
push
popf
jb
mov
sti
ret
andl
xchg
out
push
and
or
cmpsl
add
sub
inc
and
mov
and
outsl
lret
push
mov
and
push
icebp
mov
xchg
cmp
cli
dec
xchg
inc
xchg
or
aad
add
out
data16
sub
imul
test
lods
insl
adc
ja
mov
jle
jg
xor
mov
mov
in
out
pop
jae
mov
mov
and
sbb
pop
xor
test
and
ja
or
pusha
mov
fwait
xchg
cmp
aad
push
jecxz
aas
push
outsb
mov
dec
push
add
pop
sub
dec
mov
and
mov
mov
mov
test
adc
push
mov
or
movsl
dec
and
dec
mov
sti
mov
push
ds
sti
out
and
outsl
mov
or
jne
or
xchg
fcomip
into
cmp
sar
pushf
repnz
cltd
pop
mov
jl
mov
ss
pusha
repz
pushf
push
leave
xchg
xor
int3
inc
xchg
roll
sbb
rcll
or
lea
or
sub
xchg
iret
jb
testl
outsb
mov
subb
leave
jecxz
daa
cs
sub
mov
hlt
pop
pop
jbe
mov
orb
orl
adc
add
pop
pop
hlt
js
push
mov
repnz
mov
inc
out
out
or
idivb
inc
pop
mov
dec
daa
mov
bound
fsubl
scas
add
icebp
sbb
lds
clc
jne
stc
scas
dec
xorb
mov
nop
cli
push
test
out
mov
sub
pop
xor
pusha
push
in
int
sbbb
sub
stc
pop
sbb
aam
inc
pop
mov
subl
push
movsb
sub
jo
aas
jb
aam
scas
lret
and
int
jp
dec
les
or
sub
test
jg
leave
mov
sbb
xchg
or
jecxz
lods
jp,pn
cmc
or
test
xchg
mov
push
loope
out
push
sti
ficompl
pop
inc
rcr
jns
pop
cwtl
push
fimuls
pop
mov
mov
mov
int3
scas
adc
cmp
xorl
xchg
mov
pop
xor
rorb
fbstp
sbb
mov
sbb
fs
icebp
sub
jno
fidivrl
inc
ficomps
out
call
aas
jmp
lret
inc
inc
je
scas
insl
and
shufps
stos
orb
repz
outsl
popa
or
jbe
cli
mov
xchg
movsl
mov
add
jb
decb
int3
arpl
jmp
hlt
shrb
xchg
push
mov
sbb
test
repz
adc
xchg
in
jo
pusha
pop
addr16
sub
mov
pop
mov
dec
mov
jmp
loopne
ja
xlat
mov
and
mov
mov
stc
outsl
int3
mov
data16
dec
adc
out
shr
mov
mov
xor
fisubl
cmpsl
stos
xor
sahf
push
mov
cli
jbe
in
int3
mov
sbb
cmpsb
pop
add
xchg
and
inc
aam
mov
pushf
mov
xchg
xchg
stos
cmpsb
scas
cmpsb
pop
jl
repz
test
pop
mov
xchg
jmp
mov
mov
sub
sti
lcall
test
data16
call
sub
cmp
sbb
push
inc
jle
push
mov
jb
mov
dec
rorl
jo
or
sahf
inc
cmpsb
flds
inc
repz
xchg
jns
outsl
mov
xchg
sub
into
mov
enter
insb
add
add
jne
sarb
outsb
iret
jmp
sbb
xor
dec
leave
lahf
fmull
data16
xchg
scas
dec
add
daa
and
sbb
xchg
push
stos
mov
xchg
push
push
nop
clc
int3
stc
sti
pop
out
dec
lea
wrmsr
leave
gs
out
xor
int3
mov
int
push
aad
inc
outsb
je
insb
add
mov
in
sti
lahf
in
fcomi
insb
lret
xchg
lock
bound
sub
out
popf
mov
leave
les
mov
insb
stos
sbb
fs
bound
and
jmp
xor
mov
add
mov
aam
mov
jb
and
gs
repnz
and
addr16
push
mov
das
xchg
mov
gs
push
int3
jbe
push
mov
movsb
adc
cs
or
jnp
rol
or
sub
push
sahf
ljmp
sub
pop
push
mov
mov
push
sarl
add
out
aam
xchg
je
fistps
scas
xchg
inc
push
lret
push
mov
aaa
push
rcr
loope
adc
int3
sbb
aas
cs
ljmp
sbb
xchg
shr
adc
stos
xor
subb
daa
sbb
stos
inc
mov
into
mov
push
js
xlat
scas
daa
inc
rol
push
testl
jg
popf
dec
in
cmpsb
ljmp
pop
aaa
aaa
push
pop
call
jne
dec
aaa
inc
cmc
imul
bnd
out
cli
cs
stc
in
add
sbb
and
cmpsb
push
jp
mov
sahf
cmp
lea
dec
jl
mov
std
bound
jg
mov
push
ljmp
pushf
push
adc
inc
inc
ss
ficoms
hlt
pop
cmp
push
cltd
insb
inc
inc
or
popf
jl
aaa
jle
jmp
out
mov
inc
hlt
xchg
sbb
xchg
pusha
mov
sbb
jmp
lcall
aam
enter
lds
inc
shll
jp
pop
dec
cli
cmp
push
xchg
enter
push
dec
xor
popa
push
nop
cli
xor
adc
and
mov
mov
insb
sub
pop
mov
arpl
and
sub
lcall
insb
inc
and
aam
loopne
jnp
sbb
aad
paddq
push
in
pop
xor
mov
and
push
sub
pusha
jne
push
sbb
js
imul
push
iret
loope
mov
dec
fildl
dec
xchg
jae
frstor
sbb
mov
adc
das
fisttpl
sub
gs
pop
mov
jb
mov
sub
fs
mov
sbb
and
lret
mov
loopne
test
inc
sbb
add
ret
jae
mov
lea
cmp
push
xchg
in
xchg
pop
jl
leave
xlat
loope
and
jb
and
push
pop
inc
cmp
sbb
ret
out
dec
xchg
mov
and
mov
pop
loopne
ds
dec
push
repz
jge
ja
or
inc
in
inc
aas
inc
movsb
sub
push
loopne
add
cmp
adc
xor
and
mov
fistpll
xorb
leave
inc
pop
lret
xor
imul
cmp
adc
pop
jl
mov
mov
imul
rcll
lods
lods
push
xchg
xor
mov
xchg
rep
es
jae,pn
leave
xor
and
outsl
shll
cli
popa
popf
lea
push
int
push
outsl
pop
add
mov
push
or
push
iret
xchg
pop
inc
movsb
push
leave
icebp
or
cmp
fcmove
lods
out
pop
inc
enter
fbld
sub
movsb
dec
jl
mov
adc
xchg
inc
call
push
dec
addl
iret
pop
std
xor
scas
aas
mull
fwait
sti
pop
pushf
or
rorb
cmp
bound
jg
inc
into
inc
xchg
mov
pusha
xchg
int
sub
sbb
or
add
mov
test
pop
mov
pop
cmp
movzbl
push
leave
and
push
xor
pop
pop
pop
out
ret
cmp
nop
ficoms
out
or
outsl
dec
insl
jecxz
sahf
test
lret
lret
fstpt
cmp
dec
test
mov
inc
mov
mov
mov
cmp
and
lea
mov
popa
fwait
in
out
aam
stos
mov
sbb
je
sahf
fisttpll
xchg
push
xchg
adc
xchg
sbb
add
mov
leave
lcall
loopne
jp
xor
mov
xchg
pop
add
popa
sub
add
sub
popa
in
gs
cmpsl
lret
push
imull
mov
adc
push
xor
sbb
mov
pop
and
bound
jmp
or
jo
xchg
jg
pop
lods
push
mov
shlb
movsb
xchg
mov
jle
add
or
sbbb
cmpb
cwtl
shlb
add
dec
loope
test
nop
jl
subps
xchg
pop
in
les
add
xor
insl
sbb
lods
mov
das
mov
ja
fcoml
sarl
hlt
pop
int3
popa
popf
rol
idivl
xchg
call
daa
mov
jmp
add
sbb
lcall
add
dec
mov
pop
pop
repnz
popa
fdivl
daa
dec
nop
fbstp
out
rcll
pandn
push
sbb
mull
nop
rcr
shlb
xchg
sahf
cltd
mov
dec
fdivrs
movsl
decl
mov
cmpsb
mov
mov
test
fcmovnbe
cmp
mov
xor
xlat
loopne
fisubs
add
jecxz
test
jae
sub
in
mov
lret
cmp
add
pop
sbb
faddp
push
insl
xchg
pop
dec
jae
dec
and
jle
push
movb
lret
push
mov
aam
test
sbb
dec
jl
out
cltd
dec
notl
fucomip
jne
lcall
cld
pop
inc
roll
mov
or
add
inc
inc
jo
sub
arpl
lods
repnz
jge
xchg
inc
mov
push
push
les
clc
push
xchg
insb
dec
fs
fdiv
std
mov
shrl
jne
or
mov
insl
movsl
add
outsb
push
push
scas
pop
pop
jg
cltd
fcmovu
xchg
int3
xchg
aad
test
xlat
bound
in
mov
push
mov
push
push
aad
filds
shl
stc
mov
sub
xchg
test
mov
gs
dec
lret
cmpsb
push
sti
outsb
add
scas
sbb
and
sbb
pushf
pop
xorb
xchg
mov
xor
nop
lret
pop
mov
jg
fnsave
jge
pop
or
adc
inc
and
sahf
xor
fs
jb
mov
sahf
cs
or
or
push
xchg
dec
ret
icebp
adc
rolb
jo
inc
popa
cmp
push
lods
hlt
adc
cmp
lods
push
mov
stos
outsl
loopne
inc
out
pushf
stos
scas
pop
push
lods
mov
lret
pop
pushl
adc
imull
and
or
adcl
and
cmc
xor
mulb
scas
xchg
int
popa
pop
orb
inc
jb
lret
pushf
mov
or
fimuls
mov
cmp
rcr
push
mov
arpl
shlb
xchg
jmp
inc
mov
negl
xlat
addb
pop
mov
std
sti
out
fnsave
movsl
add
out
and
adc
sbb
mov
xchg
icebp
mov
ljmp
and
mov
cmpsl
mov
ds
push
mov
pop
mov
ss
xchg
lds
mov
adc
jecxz
lcall
outsl
xor
cmp
sbb
add
add
xor
adc
shrb
mov
mov
xchg
or
pop
in
xor
out
in
sbb
add
cmp
pop
sbb
fs
mov
das
addr16
mov
mov
mov
sti
mov
loopne
lock
ja
cld
lods
and
stc
jb
dec
push
cmp
add
cli
pop
hlt
mov
ficoml
push
sub
adc
frstor
jle
imul
cmp
int3
jg
xor
mov
insl
dec
je
and
sbb
ja
jecxz
xor
or
or
and
cmp
xchg
inc
neg
fwait
lret
xor
inc
subl
sarb
stos
xchg
scas
mov
in
jmp
test
push
in
xchg
pusha
movsb
cs
lret
push
fmuls
decb
ret
cld
push
sbb
cmp
xchg
mov
xchg
lcall
sbbl
inc
add
sub
inc
cmpb
test
out
adcb
push
push
call
cli
dec
sbb
add
stc
aad
sahf
and
clc
mov
ds
inc
cmp
pop
xchg
mov
fistl
rcrl
daa
mov
push
rcrb
hlt
aaa
imul
std
sbb
inc
pusha
cmp
dec
push
xchg
lds
bnd
psubusb
dec
cmp
stos
hlt
sub
push
jb
and
movsl
rolb
das
in
jae
loopne
sub
shll
shrl
nop
mov
ljmp
pop
lock
xchg
mov
push
daa
stc
insl
mov
outsb
sbb
xchg
stos
cmp
adc
cli
movsl
jge
xchg
into
call
xchg
andl
stos
outsb
push
addr16
dec
into
xchg
lcall
lods
popa
lahf
addl
call
call
int3
add
add
aas
mov
repz
addr16
push
in
stc
jo
adc
adc
in
mov
shrl
jo
out
mov
dec
xchg
fdivr
popa
mov
insb
mov
pop
fcomip
xchg
dec
int3
jae
out
stc
sub
sub
xchg
sub
loope
adc
pop
xor
andl
jbe
adc
mov
cs
test
add
daa
cmpsl
mov
or
add
sub
and
pusha
jmp
add
mov
or
repz
pop
or
cmc
push
int
jge
movsl
into
cli
mov
push
pusha
adc
sub
negb
add
adc
popf
movsb
xlat
roll
lcall
push
insb
jb
sub
mov
notl
fldt
cmp
notl
in
mov
popl
cmp
lock
jg
xchg
imul
clc
push
int
and
call
dec
push
les
pop
cmpsl
sub
loopne
xchg
loop
add
ficomps
or
mov
js
scas
stos
ret
rolb
cmp
mov
and
or
cli
mov
outsb
scas
adc
arpl
fs
dec
test
stos
inc
mov
pop
jl
das
sbb
fstp
insl
mov
rcrb
test
in
push
es
lcall
inc
xor
enter
ljmp
loope
fwait
out
mov
shll
add
jecxz
std
add
pop
mov
aaa
add
cwtl
fdecstp
jbe
ljmp
cmp
repz
lret
cltd
dec
pusha
xorb
into
iret
iret
jb
xor
cli
lahf
faddp
insb
in
leave
adc
push
je
test
lret
cmp
fisubrs
jg
loop
aam
xor
es
int
pop
nop
fistpl
leave
stc
xchg
sarl
mov
repz
add
icebp
cmp
sbb
dec
idiv
outsb
cmc
xor
or
cmp
add
int3
push
mov
jbe
mov
jne
cwtl
fldenv
xorl
nop
out
aas
rcrl
cmp
fistpll
enter
jb
shll
repz
shl
loopne
jp,pn
inc
xor
lds
or
fiaddl
jae
mov
fcmovu
clts
fcomps
pop
push
cltd
repnz
mov
mov
mov
add
mov
daa
sbb
lcall
xor
aam
ds
ljmp
adc
test
push
test
adc
in
mov
inc
out
cltd
add
fdivs
or
icebp
and
lret
adc
cmpb
enter
xlat
mov
clc
dec
add
sub
into
mov
cltd
add
fldenv
je
lock
aas
mov
adc
or
out
call
xchg
jns
jnp
mov
jno
lret
or
cld
lret
or
cmpsw
out
fs
or
mov
int3
push
push
cmp
out
mov
aaa
sbb
aas
mov
add
mov
xchg
lahf
lcall
mov
fnstsw
stos
xlat
imul
pop
stos
push
lods
gs
lods
inc
sahf
mov
mov
mov
adc
mov
push
adc
stos
add
dec
pop
popa
push
sub
pop
mov
pusha
stc
in
ds
popf
jbe
jnp
fstl
fs
sbb
cmp
pop
and
fwait
and
jns
mov
inc
hlt
cmp
xchg
mov
loope
loop
nop
push
arpl
fwait
mov
frstor
jb
mov
cmc
ljmp
cmp
pop
lds
sub
aaa
ljmp
out
xor
sahf
lret
sub
xchg
mov
push
mov
xchg
add
xor
adc
imul
enter
aad
cltd
dec
mov
fistpll
dec
sarl
jle
and
add
mov
ret
push
add
mov
jns
in
dec
fildl
dec
dec
repz
out
clc
inc
or
mov
jae
mov
dec
mov
xlat
cltd
cwtl
cltd
mov
mov
insl
lret
push
loopne
xchg
repz
push
mov
push
fcoms
pop
jle
push
test
mov
pop
inc
loope
jl
push
rorb
or
push
pop
sbb
mov
mov
xor
movsl
jae
insl
xor
std
xchg
cld
and
sub
mov
sbb
sarl
sub
or
inc
mov
movsl
test
jae
shll
test
sub
push
aad
cmp
xchg
mov
es
or
and
dec
mov
gs
lahf
cs
lret
mov
jmp
or
adc
push
or
pop
in
out
enter
nop
lods
rcrl
jl
add
imulb
or
aaa
add
inc
aam
shrl
adc
push
scas
adc
mov
dec
xor
mov
es
sbbb
das
lods
add
aas
popf
mov
ficoms
mov
mov
xchg
lahf
dec
aas
test
cmp
push
lret
shr
jae
mov
fildll
push
mov
arpl
add
insb
xlat
test
adc
das
cmp
xchg
sbb
mov
ficoml
iret
shrb
xchg
cmp
mov
push
into
movsb
ja
xchg
ret
inc
lahf
outsl
sub
or
pop
pop
mov
mov
pushl
jp
xchg
cwtl
add
or
mov
jno
aam
and
outsb
lahf
adc
push
jae
outsb
or
test
daa
lret
test
and
orl
xchg
stos
inc
cwtl
aas
popf
icebp
lahf
xchg
into
mov
sbb
outsb
mov
test
in
pop
xor
lds
cltd
adc
pop
pop
cwtl
test
out
push
sti
pop
aaa
xchg
push
cmp
xor
xchg
stos
jge
sbb
sahf
cmpsb
lahf
or
jo
mov
aad
cltd
jae
stc
jno
jp
jns
pop
push
invd
sbb
popa
jno
jno
addr16
jecxz
cmp
pop
mov
iret
dec
pop
shll
inc
push
daa
jl
dec
jge
mov
and
or
dec
sbb
sbb
scas
jg
aam
nop
add
xor
jne
cmpb
call
adcb
les
popf
jecxz
jg
cld
sar
fistpll
scas
test
inc
stc
pop
pop
sub
jne
out
addr16
inc
ffree
fnsave
sub
in
cli
xchg
in
sbb
sub
dec
push
jb
mov
testl
mov
iret
mov
pop
out
aaa
movsb
mov
or
cmp
sub
xor
out
mov
adc
dec
js
push
dec
pop
sbb
in
cmc
pop
mov
mov
data16
xchg
je
inc
add
add
sub
popf
xchg
test
test
daa
cmc
enter
les
insb
popl
xchg
cmpsb
sbbb
xlat
rcr
jmp
arpl
mov
mov
dec
add
xor
movsl
rcrl
mov
sbb
leave
push
outsl
push
xlat
decl
push
jae
ror
and
add
leave
cwtl
cmp
sbb
xchg
push
loopne
or
jmp
xlat
loope
rclb
loope
insb
fstl
jno
ret
cmp
xchg
out
aas
xchg
dec
mov
jb
sahf
ljmp
ret
mov
inc
dec
mov
ds
out
fstps
ja
and
push
adc
xor
sub
jns
insb
fbld
sub
mov
scas
lods
sbb
repz
fs
xor
jae
adc
mov
in
mov
cmpl
ret
mov
xchg
lock
stos
pop
push
and
lock
das
sbb
out
and
fildll
cmp
mov
push
mov
xor
mov
scas
add
ljmp
lcall
pop
jnp
and
rclb
and
cmp
jge
ret
fwait
dec
pop
dec
mov
xchg
mov
cmp
inc
mov
enter
mov
sub
push
out
movsl
aad
mov
std
lods
push
or
pop
mov
int
les
sub
cmp
das
push
mov
iret
lods
lods
je
lock
ret
add
dec
lcall
or
xor
lods
loope
pop
mov
test
inc
lds
xchg
aad
in
shr
sub
mov
add
push
aas
mov
arpl
push
scas
outsl
cmp
push
mov
scas
cmp
inc
xor
in
hlt
mov
mov
push
ficoml
dec
inc
mov
outsb
inc
aas
lret
iret
pop
add
jge
int3
sub
aam
pushf
pop
sub
out
fcoms
lock
push
sub
mov
push
and
xchg
mov
push
out
into
mov
dec
jno
or
mov
cmp
push
lea
push
xor
fldl
inc
mov
cmpsl
ljmp
scas
scas
dec
xor
rclb
ror
cltd
cmp
xchg
pop
and
jne
cmpsb
cmp
pushl
mov
mov
outsl
xchg
int
test
inc
pop
les
inc
repnz
pop
movsl
add
add
push
pop
xor
pop
sub
sbb
dec
or
out
in
sub
icebp
xor
fs
sti
push
cmp
pop
jg
fmull
pop
xchg
pop
sub
or
and
idiv
jo
jp
xor
or
add
xorb
dec
sbb
sub
repnz
sub
add
bound
adc
cmpsl
outsb
repz
add
je
cmpsb
mov
jno
shll
add
xor
mov
dec
inc
jb
leave
push
aad
outsb
icebp
jae
jp
imul
cmpsl
emms
in
inc
mov
je
mov
mov
scas
ss
xchg
xchg
mov
fbstp
nop
xchg
pushf
jae
sbb
shrl
sub
sbb
mov
pushf
push
dec
mov
mov
fistpl
jns
mov
decb
xor
fs
push
push
jmp
pop
pop
sbb
or
push
in
mov
out
in
sub
pop
test
ret
add
cmp
jnp
or
stos
sub
push
int3
int3
sti
fnstenv
push
daa
je
mov
js
scas
lcall
hlt
cs
fwait
mov
mov
push
out
push
cmp
xor
sahf
repz
dec
xor
lock
into
jnp
test
cli
std
stos
cmp
jnp
adc
sti
add
xchg
push
pop
push
loope,pt
xchg
lret
addr16
jbe
cwtl
mov
dec
js
imul
aas
or
int
mov
or
add
in
push
cwtl
stos
fs
popa
xlat
or
mov
pushf
push
clc
mov
bnd
test
dec
movsb
out
and
inc
inc
mov
sub
ror
jnp
repz
jo
enter
mov
push
jns
popa
xor
jnp
scas
loopne
mov
pop
dec
cmc
adc
in
dec
inc
decb
mov
scas
in
jae
and
addr16
push
mov
sub
gs
enter
and
daa
xor
aaa
scas
ficoml
int
mov
cwtl
es
out
or
xchg
mov
js
inc
mov
add
jbe
pop
push
jne
std
lret
test
stos
jae
cmp
test
pop
lret
xchg
add
aad
scas
dec
out
mov
outsb
mov
sarb
divb
mov
insb
xchg
loopne
repz
lods
jecxz
and
mov
xor
and
stos
aam
sbb
push
loop
push
fidivrl
mov
pop
pop
imul
cmp
sbb
push
dec
lds
mov
ret
in
push
je
test
std
inc
imul
inc
mov
cmp
arpl
and
jns
mov
xlat
add
jbe
mov
cmpsb
xor
out
pop
js
push
push
xchg
push
inc
test
in
mov
and
out
pop
and
adc
test
out
loope
dec
mov
cs
sahf
or
leave
push
hlt
int3
sub
cltd
fisttpll
aad
push
mov
in
imul
loop
adc
iret
sub
cli
fmuls
mov
push
lahf
xchg
jl
push
into
pop
mov
jne
dec
sub
aaa
mov
sub
mov
call
cmpsl
mov
push
jbe
adc
sub
cltd
adc
ljmp
pop
jl
clc
sahf
inc
insl
xor
clc
pop
xchg
mov
xchg
push
xor
cltd
dec
push
js
lret
push
cmc
lods
ja
mov
dec
daa
xchg
lret
dec
pushf
idiv
mov
daa
mov
mov
dec
push
dec
dec
mov
xor
jbe
xchg
mov
fisubl
and
les
xchg
mov
or
sahf
jo
lahf
scas
mov
mov
mov
jb
ja
stc
aaa
lahf
repz
mov
cmpb
clc
sub
int
das
movsl
and
scas
dec
stos
adcl
iret
es
sbb
add
jg
dec
imul
mov
ret
les
dec
fstps
insl
push
mov
dec
xchg
cmpsl
insb
fmul
lds
sub
sub
push
popa
cli
sbb
ret
cltd
add
aad
inc
adc
inc
sahf
mov
mov
cli
pop
stc
add
push
fildll
ret
xor
cwtl
mov
sub
and
mov
push
andb
test
dec
jbe
cmp
fisttps
test
aad
jp
jbe
insl
cmpsl
inc
repz
arpl
add
push
jmp
xor
inc
xchg
xchg
xchg
rcrb
fldl
in
jge
dec
loope
push
addr16
imul
lods
mov
cmp
out
lods
xor
fdivrl
gs
sub
stos
xchg
es
add
sub
int3
and
call
mov
mov
dec
pop
movsl
subl
mov
fbld
js
cltd
or
stc
mov
outsl
lods
sbb
mov
or
or
jmp
pop
scas
dec
cmc
popa
jg
or
mov
xor
sbb
mov
push
dec
loop
out
dec
adc
mov
pushf
dec
or
rclb
push
adc
icebp
or
pop
adc
repz
bound
cmp
jmp
pop
dec
gs
das
jmp
shl
mov
mov
test
sub
inc
addr16
add
or
pop
imul
jmp
add
dec
sti
enter
push
dec
adc
ret
sub
push
xor
shll
cmp
xor
pop
xchg
mov
fnstenv
and
cmp
pop
push
jle
add
dec
jo
xorw
popa
test
insb
ret
cmp
mov
mov
fucom
xor
dec
aas
insb
mov
mov
out
jge
pushl
lea
xchg
and
sub
ds
cmp
inc
xor
iret
pop
lea
push
shl
add
ds
or
mov
enter
mov
sahf
lock
gs
test
call
mov
xchg
mov
jmp
and
fisttpl
push
xchg
and
sbb
mov
dec
les
add
mov
push
pop
scas
push
rolb
adc
cmp
mov
push
pop
and
pop
fisubrs
jmp
jecxz
mov
ds
jmp
mov
call
mov
push
pop
xorb
sbb
aaa
leave
xor
or
scas
ljmp
or
insl
loope
sbb
mov
lret
mov
add
loope
sbb
push
adc
ss
jo
ret
pop
lcall
jns
and
loop
lret
mov
dec
xor
cmp
add
mov
sub
fiaddl
lret
lds
or
out
mov
inc
add
mov
inc
xchg
popf
cmp
jg
loope
or
mov
imul
popf
dec
push
pop
lods
xor
lea
sub
test
adc
push
sbb
pop
sbb
xchg
loop
jno
jmp
fwait
call
pop
jns
adc
inc
push
jbe
int3
call
xchg
push
lcall
dec
cmp
ja
dec
add
inc
out
inc
mov
dec
and
mov
mov
movsl
xchg
sbb
xchg
mov
in
cmpsb
xor
cmp
or
int3
outsb
std
mov
pop
scas
pop
lock
lock
nop
push
adc
mov
mov
popa
stos
popa
mov
ret
and
pop
outsb
dec
mov
pop
cwtl
into
lods
scas
xor
data16
mov
mov
ret
fidivrs
sbb
xchg
sub
xchg
xor
jp
mov
cmc
aad
dec
out
aam
dec
loope
and
sbbl
mov
dec
dec
js
scas
sbb
cs
fldenv
movb
fisubrl
mov
add
aas
leave
inc
call
shlb
pop
mov
bound
iret
popa
push
sbb
cmpsl
inc
test
loope
pop
scas
cltd
push
incl
stc
loope
in
cmp
scas
ficoml
mov
fsubl
jo
add
stos
ret
push
out
pop
pop
std
rcl
orl
push
mov
inc
test
mov
fimuls
push
mov
out
insl
movsb
imul
adc
xor
jecxz
cmc
push
lret
clc
movsb
sti
mov
clc
sti
into
or
cmc
jecxz
pop
pop
les
xor
jo
inc
mov
mov
xor
and
sahf
loop
fcoms
ds
pop
mov
cmp
push
jmp
dec
inc
dec
cmc
xchg
lret
in
mov
or
push
fists
jmp
lea
jo
xchg
dec
add
sub
inc
test
in
sub
loope
push
mov
repz
sbb
cmpsb
stos
push
lods
iret
leave
jmp
xchg
mov
popw
lods
test
and
sub
ljmp
lock
mov
or
adc
clc
lock
movsl
and
mov
mov
out
jge
adc
add
rol
xchg
pop
sub
mov
inc
nopl
lret
iret
pop
jmp
inc
out
mov
out
pop
sbb
rolb
les
add
dec
add
stc
dec
mov
mov
cltd
loop
push
scas
push
aaa
arpl
pop
xor
push
dec
cmp
adcb
jp
test
pop
arpl
dec
mov
sub
mov
pop
sbb
icebp
pop
xchg
dec
aam
sbbl
enter
xchg
inc
or
xchg
inc
pop
push
mov
cmc
mov
vmovsd
cmpsb
imul
jmp
sub
mov
out
push
lock
mov
sub
scas
add
gs
dec
das
into
mov
add
mov
mov
mov
dec
fucomp
xchg
pusha
loopne
imul
mov
xor
mov
andb
sti
imul
xor
insb
clc
add
aaa
fdivrl
stc
inc
in
xchg
pop
lea
bound
fiadds
dec
shrb
jge
push
push
cwtl
sti
pop
fucom
mov
adc
ja
jae
test
sti
orb
add
cmp
fcomps
lock
jne
mov
imull
adc
imull
sarl
enter
and
cmpsb
sub
shl
mov
cmpsb
inc
push
push
inc
push
in
rolb
mov
add
xchg
xor
pop
dec
dec
cli
popa
push
adc
cmpsb
pop
adc
adc
add
ja
dec
or
lds
sarl
and
inc
les
ret
dec
adc
clc
xchg
dec
icebp
dec
mov
popa
pop
repnz
xor
cmpsb
outsb
dec
into
mov
push
mov
cwtl
adc
mov
mov
out
mov
inc
push
cld
jl
sahf
shlb
out
in
daa
jmp
les
outsl
addr16
es
out
xchg
hlt
add
incl
clc
mov
jbe
jno
icebp
data16
cmp
add
aad
std
lret
loopne
and
cmp
stos
mov
inc
jge
mov
mov
mov
imul
icebp
lea
pop
xor
mov
xchg
mov
mov
or
movsb
adc
clc
lcall
cmpsb
popf
fldt
fisttpl
dec
push
adc
lds
out
mov
aad
adc
mov
adc
and
sbb
push
sbb
sub
sbb
hlt
out
or
bound
mov
ss
lret
add
int3
cmp
cmp
adc
test
or
push
jo
adc
inc
push
add
into
out
mov
dec
push
movsl
std
arpl
fistpll
in
jge
iret
or
dec
ds
add
mov
sti
dec
adc
xchg
dec
jne
fwait
mov
loop
add
mov
lds
xor
and
clc
or
movsl
sbb
jno
jp
pop
cmp
xchg
loopne
pop
shll
or
imul
add
lcall
fwait
daa
mov
mov
push
adc
xchg
andps
or
notb
or
movsl
cmp
ljmp
loopne
out
sbb
add
jmp
mov
es
scas
mov
xchg
or
mov
filds
cmp
add
inc
idivb
pop
jmp
sahf
das
mov
fnstsw
jne
test
outsl
or
push
les
mov
cmp
xor
add
aad
mov
mov
cmc
lods
adc
loope
jg
aaa
mov
mov
jmp
decl
stc
repnz
add
cld
clc
in
hlt
mov
pop
jb
cs
sbb
adc
cmc
vmptrst
xor
sti
add
gs
dec
mov
sbb
stos
mov
std
sub
xchg
pop
mov
adc
std
or
mov
imul
mov
rclb
sahf
and
outsl
mov
xchg
push
sbb
or
mov
sub
mov
jmp
out
mov
adc
dec
mov
pop
aam
inc
xor
jne
inc
inc
inc
xor
and
and
jle
mov
std
test
push
das
cmp
mov
cmp
out
adc
mov
xchg
cmc
dec
mov
imul
aam
cltd
sar
addr16
push
out
fisubl
ja
aad
adc
jae
cmpsl
sub
dec
xchg
ret
lds
popf
cmp
mov
dec
flds
inc
dec
out
popa
ljmp
dec
jecxz
jnp
pushf
cmc
pop
jl
ret
icebp
mov
in
in
jne
xchg
mov
xor
inc
fwait
add
in
sahf
mov
ljmp
repz
ljmp
sbb
sbb
in
cmp
jnp
lcall
je
fists
sub
lret
jl
gs
jmp
les
or
int3
xorl
sahf
jg
divb
lds
mov
jnp
decb
leave
push
shr
inc
shll
dec
mov
insb
mov
inc
jbe
sub
out
sub
pushf
in
stos
repz
lods
movsb
fdivr
or
mov
ret
insb
icebp
cmp
xor
xor
adc
fistl
ss
mov
mov
sub
sub
push
lea
mov
sahf
sbb
loope
adc
mov
dec
data16
cltd
in
icebp
clc
jle
sti
jno
popa
pop
adc
fdivs
sbb
rolb
push
and
add
push
push
mov
add
mov
movsl
enter
sbb
and
negl
mov
push
call
and
aas
lock
filds
sub
mov
xor
fmul
mov
inc
fsub
aad
jecxz
and
push
mul
xchg
fsubrl
scas
cmc
jge
rorb
scas
mov
icebp
aam
adc
mov
mov
imul
sbb
pop
lahf
out
pop
mov
in
das
loopne
add
stc
xor
or
loope
inc
sub
test
sub
xchg
mov
jo
xor
xor
push
adcl
inc
dec
paddsb
call
shrd
adc
in
xchg
inc
cmp
daa
adc
shr
cmp
push
in
movsl
and
adc
mov
fdivs
inc
mov
cltd
lods
mov
xor
out
xchg
inc
push
add
cmp
pushf
test
xchg
rol
xchg
cmpl
push
or
push
push
ljmp
xchg
ret
pushf
mov
and
imull
lock
cmpsb
dec
xor
neg
xchg
jmp
sub
sarl
fdivl
adc
sbb
nop
push
jecxz
sub
mov
int
add
rorl
dec
pop
lds
push
out
jbe
popf
dec
and
pop
aam
ja
aaa
and
lods
jb
iret
sub
sub
cmp
mov
arpl
rcll
shl
mov
popa
mov
loop
inc
out
sahf
jecxz
mov
push
dec
mov
mov
push
xchg
shll
mov
lcall
mov
bound
adc
xchg
mov
dec
jo
arpl
in
testl
push
stos
mov
stos
imul
iret
mov
insb
mov
test
aam
or
mov
call
sub
aas
cwtl
jne
dec
mov
pop
sbb
sbbl
clc
scas
mov
gs
cmp
sarb
lock
cs
rcl
cmp
sbb
das
jbe
insl
push
mov
push
push
repnz
fmull
xchg
inc
inc
dec
icebp
push
insb
in
xor
cmpsl
inc
roll
adc
aas
mov
repnz
xchg
scas
xor
dec
mov
dec
ret
dec
mov
sbb
xor
sbb
mov
mov
mov
mov
fnstcw
ljmp
aas
cmc
cmc
or
dec
xchg
call
mov
adc
fimuls
sbb
mov
in
pop
mov
stc
push
rcll
pop
sarb
cltd
add
mov
ja
in
dec
mov
in
sbb
push
mov
sbb
loopne
mov
daa
adc
push
lods
in
test
nopl
es
mov
mov
or
sbb
push
enter
lea
lret
cmc
fstps
mov
mov
cmp
test
cmp
sub
lds
iret
pinsrw
inc
and
imul
call
cwtl
insl
fwait
test
mov
enter
dec
imul
stc
addb
jns
call
push
mov
sub
scas
daa
inc
pusha
int3
add
inc
jae
out
fildll
loope
inc
testl
ja
xchg
call
mov
dec
ficompl
xchg
cmp
mov
arpl
xchg
push
jle
in
mov
jne
add
mov
push
xchg
shrb
pop
in
lea
mov
in
cld
cld
daa
xor
jg
mov
lahf
aaa
cmpsl
call
aam
flds
fstl
dec
xchg
loopne
fdivl
cli
addr16
jecxz
jns
stos
mov
cmc
cmovo
cmc
data16
jp
or
pop
xchg
cli
ja
pusha
push
icebp
jo
out
push
inc
and
shll
jns
push
mov
xor
fdivr
loopne
sahf
mov
add
addl
sub
lret
mov
mov
dec
sub
sub
stos
cld
loopne
stc
xlat
push
and
add
mov
aaa
inc
dec
test
add
pusha
mov
cwtl
int
push
pop
mov
fldt
and
mov
les
jae
and
mov
inc
mov
jno
mov
test
fwait
movsl
popf
xchg
sbb
mov
push
xchg
bound
mov
popf
and
cltd
scas
scas
mov
loop
ret
ss
cmpsb
xor
dec
lret
addr16
fmulp
jmp
inc
clc
cmpsb
loopne
rcrl
mov
test
push
in
into
sti
and
ficompl
push
or
cmp
mov
push
jb
cmp
sub
dec
ljmp
frstor
jnp
xchg
cmp
xchg
jmp
leave
nop
adc
xchg
lahf
fsubs
push
cld
out
ret
inc
outsl
mov
pop
sub
outsl
inc
hlt
jp
push
insb
arpl
sub
mov
dec
lcall
scas
push
pusha
into
mov
loop
and
inc
lods
mov
pop
dec
push
jl
push
push
push
adc
sarl
sbb
xchg
push
rol
mov
sbb
jo,pt
xlat
mov
mov
cmp
jg,pn
fs
dec
test
fs
loope
in
pop
xchg
fstpl
ret
mov
or
nop
cmp
jle
out
fsubs
rcrb
mov
push
add
out
pop
subb
jo
xchg
loopne
popa
xchg
mov
insb
add
clc
stc
sub
aaa
inc
pop
mov
and
aad
dec
xchg
and
es
inc
pop
push
lret
xor
mov
jnp
mov
add
xor
pop
dec
and
mov
sbb
sbb
cmp
cmpsl
in
and
lret
ret
inc
xchg
mov
add
loopne
adc
lzcnt
testb
sub
dec
in
pop
add
scas
aaa
mov
int3
jno
ficoml
lcall
sub
adc
mov
arpl
inc
in
sub
cmp
arpl
inc
mov
adc
test
pop
stc
mov
mov
mov
push
pop
add
inc
mov
pop
nopl
cltd
in
movsb
sbb
and
and
fisubrs
sbb
add
dec
imul
sub
pop
or
imul
inc
call
lcall
dec
ret
fdivp
mov
xor
popf
jne
pop
xchg
ds
int3
push
xchg
hlt
jo
push
cs
add
fbstp
lods
loopne
stos
xor
push
cmp
jle
loopne
pop
fsqrt
xlat
ljmp
xor
sub
bound
pop
fwait
or
sub
pusha
sahf
cli
push
push
test
or
xchg
push
pushf
sysret
out
movl
cmp
add
int3
cltd
out
in
enter
fistl
mov
hlt
ret
xor
push
push
xchg
iret
adc
inc
cwtl
ficoml
out
adc
jg
in
mov
into
and
mov
adc
cs
inc
in
jne
roll
sarl
int3
add
cs
push
push
jns
xchg
out
leave
mov
imul
jns
lahf
mov
or
add
out
loop
mov
jne
sahf
outsb
cmpsl
repnz
stos
ljmp
mov
into
les
jl
ljmp
mov
inc
mov
stc
xor
jecxz
push
pop
mov
mov
mov
adc
cld
mov
iret
or
pushf
push
repz
stos
sarb
stos
loopne
xchg
stc
jbe
in
ret
xchg
js
rcrb
scas
jno
push
push
cmp
xlat
out
loop
enter
jmp
fcmovnbe
cld
add
ljmp
ret
pop
movl
mov
xor
inc
notl
test
lcall
scas
sub
add
push
push
out
repz
fwait
pushf
add
jns
dec
lock
dec
and
js
jmp
lret
inc
out
ret
mov
jns
call
scas
xor
jnp
pop
xchg
cwtl
push
pop
or
push
rcrl
xchg
loope
movsb
ja
icebp
pop
xchg
int3
sub
jne
loopne
inc
push
push
xchg
sbb
add
aaa
adc
imul
test
rcrl
sub
pop
cwtl
xor
insb
pop
inc
cli
pop
gs
inc
adc
sub
in
push
ja
jbe
xor
jl
jmp
test
push
test
cmc
dec
fstpt
push
push
insb
rorl
xchg
sub
loop
dec
ljmp
jb
dec
and
leave
xchg
fsubrs
lcall
and
jp
cwtl
icebp
fwait
pop
fcompl
xchg
push
repz
test
fists
je
sbb
sbb
xchg
sbb
stos
test
and
dec
test
push
adc
mov
push
mov
mov
pop
xchg
lret
cltd
call
out
cmp
xchg
mov
jae
push
sbb
cmp
cmp
aam
xor
mov
push
push
xor
lcall
lcall
push
jge
xor
push
ds
jno
sbb
cmp
repz
xchg
stc
dec
adc
sbb
data16
sub
mov
rcl
out
orl
dec
icebp
arpl
or
cmp
repnz
mov
adc
sub
or
out
call
dec
fildl
mov
mov
ljmp
cld
mov
dec
rorl
jnp
push
xor
or
sub
outsl
imul
mov
test
sbb
sbbl
fld1
dec
lods
jb
and
xchg
sub
gs
ja
mov
sbb
mov
adc
jecxz
das
iret
xchg
add
mov
cs
xchg
arpl
scas
stc
xchg
inc
jbe
xchg
insl
pop
xchg
sub
adc
stos
ljmp
xchg
add
adc
ret
xchg
jecxz
imul
inc
or
push
ds
xor
and
pop
pop
daa
xchg
dec
mov
ret
and
lret
add
push
hlt
ja
sub
fnsave
pop
out
in
or
clc
jp
add
or
mov
cs
outsl
movsb
mov
ret
ss
call
jno
and
add
and
mov
subb
xchg
inc
mov
js
xorb
push
pop
sbb
insb
subl
test
or
outsb
je
pop
daa
aam
or
jns
or
mov
pop
adc
mov
jmp
pop
dec
add
jl
push
test
int3
movsb
bound
add
add
loope
xchg
shll
dec
jmp
mov
ret
inc
repz
gs
sub
pop
dec
leave
repz
dec
xchg
imul
sarb
fs
cmp
fs
in
lock
insb
dec
cld
outsl
dec
adc
aaa
jmp
orb
sti
insb
mull
push
ret
and
shrl
xor
test
fnstsw
push
xchg
jp
mov
dec
rolb
inc
repnz
out
call
or
jae
adc
lret
std
inc
in
mov
jge
repz
gs
test
iret
pushf
shl
cmp
push
mov
inc
or
mov
and
pop
in
add
and
cmp
inc
in
loop
xchg
je
mov
add
xchg
dec
pop
das
inc
jg
fldcw
ljmp
out
jns
scas
push
out
mov
push
loope
push
mov
xor
fwait
or
inc
pop
data16
clc
add
scas
push
and
cld
add
mov
xchg
mov
jo
adc
adc
and
test
mov
inc
sbb
loopne
sbb
sub
mov
mov
std
adc
sbb
and
inc
push
hlt
adc
shrl
insl
dec
jl
xchg
push
movl
std
cmpl
or
movzwl
add
jl
or
jecxz
js
and
mov
es
jecxz
je
sbb
lea
cmp
xchg
mov
icebp
pop
std
fstpt
mov
testb
mov
xor
jecxz
xor
xor
or
scas
call
out
mov
pop
pop
dec
rolb
mov
sub
sbb
adc
ds
sub
xor
xchg
push
adc
js
lds
adc
mov
mov
xor
xor
jp
jne
sarl
lret
repz
sti
and
sbb
pop
pop
ljmp
inc
ljmp
testb
lahf
jmp
cmpsl
mov
ficoml
mov
cmpsb
jbe
cwtl
push
fadds
adc
loop
mov
jg
pop
test
pop
cwtl
and
pop
mov
or
adc
cmpsl
fdivrl
jmp
in
in
inc
xor
xor
sub
je
pop
movsb
mov
sbb
or
push
addr16
xchg
push
divl
push
adcb
jg
pop
adcb
push
test
mov
adc
sarb
sub
cmp
mov
btl
push
and
lds
insl
push
lret
movsl
inc
ret
icebp
add
dec
fs
nop
test
mov
mov
mov
test
sub
xor
xchg
aam
imul
xchg
test
inc
ss
push
stos
negb
and
mov
mov
loop
sub
rolb
inc
addr16
nop
insb
dec
enter
iret
push
arpl
add
lea
push
sub
out
pop
iret
mov
push
iret
mov
inc
lea
movsl
sti
add
icebp
mov
jb
lods
xor
pushf
nop
rorl
cld
nop
repnz
jo,pn
push
bound
pop
or
sbb
xor
jle
pop
lds
jecxz
mov
shrb
hlt
cmp
push
data16
lahf
arpl
outsl
jg
mov
icebp
sahf
pop
push
push
rolb
bound
pusha
sbbb
pusha
sub
push
inc
ficoms
xor
and
lods
sbb
or
sahf
mov
jbe
inc
adc
mov
bound
xor
dec
pop
cmp
ror
clc
fcompl
dec
std
repz
push
inc
daa
aaa
lret
shrb
test
int3
stc
xchg
out
xchg
arpl
js
shl
loope
imul
call
xor
inc
js
mov
or
mov
arpl
leave
incb
ljmp
movsb
mov
inc
push
test
adcl
xor
test
inc
retw
ja
fsubrl
aaa
sub
sub
das
cmp
jns
dec
in
addr16
loopne
jae
fimuls
pop
subl
mov
shrl
cmp
sbb
push
inc
call
cmp
outsb
imul
lods
fstl
lret
pop
testb
sub
add
subl
loopne
pop
scas
lods
inc
dec
push
lret
sub
add
jp
pop
loope
cmp
cmp
inc
jb
dec
leave
xchg
cltd
add
ja
add
mov
fldt
insl
dec
jo
mov
ds
pusha
and
lahf
shll
jge
dec
fldenvs
scas
test
adc
sub
jecxz
and
mov
xor
fdivs
cmp
nop
mov
mov
sbb
jno
pop
ja
pop
or
out
aas
mov
cmp
repz
testl
xor
add
xchg
in
cmp
loop
outsb
popf
fidivrl
icebp
lock
dec
aad
sub
cmp
cmp
inc
adc
sub
outsl
decl
mov
pop
iret
insl
xchg
fidivl
std
addb
jge
push
push
fld1
les
mov
jmp
xor
push
pop
push
js
inc
int3
movl
push
sub
mov
inc
push
addl
scas
lods
pop
and
sub
mov
mov
mov
push
aad
mov
popf
mov
inc
call
sti
imul
mov
add
cmpsl
push
dec
jo
enter
call
ret
jl
test
xchg
jecxz
cmp
and
adc
adc
inc
shlb
jno
push
dec
les
jo
and
cmp
out
inc
lea
movl
cmp
inc
pop
dec
js
and
add
jns
fs
rcrl
mov
cmp
loop
jge
fistps
mov
int3
jne
in
insl
repz
sbbl
popf
pop
aaa
dec
sub
fnstenv
push
repz
mov
mov
je
out
stc
test
mov
jmp
in
loop
stos
das
int
ret
daa
xchg
aad
adc
js
in
out
and
mov
sub
add
sub
repz
punpckhdq
cli
hlt
sahf
xor
mov
push
dec
xchg
mov
xor
bswap
jmp
stos
in
jp
jbe
ljmp
sub
rcl
jge
stos
pop
cmp
outsb
test
mov
jg
loop
pop
sub
dec
stc
cmpsb
and
imul
inc
into
inc
cmp
repnz
negb
popa
add
data16
loope
ret
in
sub
mov
sub
sub
aad
test
je
cmp
cmp
push
movsl
add
mov
std
pop
mov
imul
ljmp
iret
popa
sub
sub
pop
dec
xor
int
incl
loope
ja
cmc
stos
or
ret
cli
mov
sbb
cmp
xor
mov
pop
mov
bound
negl
pop
and
inc
cs
rol
inc
sahf
cmpl
lea
sub
fnstcw
ja
aam
jne
stc
push
sbbb
rcll
jb
jp
push
xorl
int3
aam
pop
lods
cmc
adc
scas
jnp
push
jb,pn
add
imul
push
imul
lock
cmpsl
dec
les
ja
or
dec
xor
aas
push
jns
fistps
cmp
pop
fbstp
xchg
inc
fwait
aad
inc
jmp
imulb
push
fadd
arpl
mov
and
call
jg
dec
sbb
sub
loopne
cmp
dec
cld
mov
mov
mov
jae
cmp
imul
fistpll
arpl
clc
mov
push
inc
out
pushf
jp
inc
mov
das
pop
cld
stos
inc
mov
ds
aam
ja
cli
pop
scas
shrl
xchg
in
imul
push
adc
fsts
arpl
js
xchg
mov
xor
les
mov
jp
pop
shrl
lcall
sbb
repz
aaa
pop
shr
xlat
jge
test
push
int
call
es
in
fcomp
pop
push
scas
push
inc
jge
popl
inc
jns
push
mov
out
std
or
pushf
and
ret
mov
imul
out
pop
sbb
inc
cs
in
out
lahf
xor
cli
mov
shrl
xor
xor
lcall
icebp
dec
pop
or
push
and
scas
xor
dec
mov
lahf
test
and
or
in
test
in
mov
add
ficomps
sub
data16
adc
lock
jl
ljmp
ja
clc
mov
xchg
jl
test
repz
mov
icebp
dec
fs
sbb
push
cmpsl
xchg
mov
pop
stos
or
sub
movsb
or
int3
outsb
and
fildll
jge
js
xor
xchg
inc
scas
cmp
mov
adc
mov
aas
loopne
test
bound
jp
cli
sahf
flds
jp
addr16
xor
lods
bound
loop
inc
sbb
cli
sub
mov
push
gs
mov
test
enter
cli
insl
pop
add
mov
lret
mov
fisttps
mov
jno
loop
test
cmp
inc
mov
fadds
int
xlat
loop
xchg
jno
inc
jmp
dec
dec
push
shll
push
jg
add
in
pop
mov
arpl
adc
cmp
or
cmp
xchg
lret
pop
enter
xor
dec
mov
push
loope
sub
xor
hlt
mov
jae
lock
ds
movl
ret
inc
scas
enter
pusha
les
scas
ds
dec
and
push
les
add
lea
movsl
cli
push
dec
into
and
inc
gs
arpl
mov
test
mov
movsl
adc
mov
fs
or
inc
iret
in
or
add
push
sti
sarb
or
cmp
fs
mov
loopne
fwait
xchg
int3
add
adc
cmp
pop
mov
add
ret
jecxz
jecxz
fistps
lret
aas
push
push
pop
mov
lret
stos
push
xchg
jbe
les
mov
push
je
or
or
push
iret
imul
in
insb
mov
xchg
nop
cli
ret
cmpsl
test
pop
std
aam
icebp
pusha
or
push
xchg
in
pop
push
fsubrs
je
xchg
push
inc
sarl
mov
adc
pop
xor
rorb
sti
sbb
dec
jbe
xchg
jae
imull
xor
lock
mov
xchg
pop
out
ljmp
inc
lcall
mov
cmp
mov
and
xchg
xlat
add
rol
push
push
shll
inc
imul
dec
adc
test
mov
sub
or
xchg
mov
out
fwait
sbb
data16
push
jno
mov
add
mov
dec
daa
mov
dec
sahf
pop
xor
int
sub
les
mov
fwait
dec
insl
inc
icebp
fldl
mov
insl
dec
lea
repnz
xchg
and
jns
sbb
scas
jnp
add
sub
jg
adc
movsl
rcrl
in
mov
aam
mov
shrl
inc
mov
mov
out
mov
xchg
dec
iret
insl
decb
jp
jmp
mov
or
nop
mov
lahf
cmp
adc
sarb
out
sub
aas
push
cmpsl
add
sub
xor
mov
ret
lcall
push
jecxz
nop
adc
bound
xchg
mov
or
jno
dec
jb
rcrl
mov
mov
in
sub
loope
pop
cli
cltd
cmp
xor
gs
mov
mov
mov
aad
in
dec
sbb
adc
dec
inc
loope
xchg
mov
pusha
out
fidivs
push
xchg
mov
out
scas
dec
cmp
out
dec
lods
js
mov
scas
pop
mov
mov
lock
jl
ljmp
dec
mov
sub
lock
sbb
xchg
push
xchg
or
pop
mov
push
xor
dec
mov
imul
pop
ss
ficoms
push
jmp
sti
lds
sbb
xchg
and
in
pop
sahf
sbb
dec
adc
mov
outsl
add
sub
mov
or
call
pop
mov
dec
stos
test
pop
and
adc
or
inc
add
fistl
scas
inc
test
aam
scas
ficomps
lock
pop
mov
daa
mov
xor
adc
mov
push
add
ja
call
rcl
push
ss
xchg
xchg
cmpsl
cmp
dec
jg
cli
mov
xchg
mov
push
lret
xor
iret
xlat
dec
jp
adc
mov
adc
das
sbbb
loopne
sti
mov
mov
cmc
sbb
or
push
jno
lock
mov
in
mov
fs
fs
sub
adc
ror
jle
fistpll
mov
mov
mov
mov
shrl
adc
adc
loopne
lods
xor
jg
lock
lret
add
stos
lods
nop
mov
mov
outsb
jp
cltd
xchg
or
fnstenv
mov
xchg
mov
repz
jl
xor
fs
int3
xor
sbb
divl
xlat
push
or
cs
adc
imul
ret
inc
mov
aaa
ss
inc
sti
push
inc
imulb
fisubrl
sti
ss
fldcw
sub
inc
push
push
mov
lret
imull
add
xor
cmpsb
dec
inc
cmp
and
push
test
aam
xchg
in
jae
push
xchg
pop
lahf
pop
out
mov
mov
sub
arpl
fidivrl
hlt
add
int3
xchg
mov
cld
pop
jg
push
pop
les
repnz
mov
out
mov
popf
inc
sub
add
ljmp
enter
sbb
sar
jmp
es
mov
cltd
loope
movsb
test
xor
jb
add
xchg
inc
stos
inc
jbe
xchg
lcall
xchg
push
test
dec
cmp
rcll
outsl
int
cmp
add
scas
adc
push
adcl
xor
and
sbb
adc
xor
dec
fdivl
stos
imul
inc
iret
filds
push
sbb
mov
insb
pop
mov
test
movsb
out
movsb
jne
push
mov
insb
xchg
sbb
pop
test
dec
adc
mov
xchg
push
jbe
mov
mov
decl
mov
fildll
jp
out
sub
dec
and
shlb
push
pop
jne
rcrb
fbstp
push
sub
scas
mov
jmp
mov
test
or
inc
js
inc
jbe
xlat
adc
mov
mov
mov
test
cld
sub
lea
xor
or
dec
or
fimull
loope
fbld
aam
rolb
xchg
mov
arpl
std
lret
lcall
divl
mov
sub
in
pop
hlt
cltd
pusha
sbb
pop
loope
push
aam
mov
int
addb
add
cmp
cmpsb
dec
bound
mov
sbb
jmp
cmc
mov
xor
add
hlt
sbb
cs
and
push
repz
outsl
jl
dec
pop
insl
popa
xchg
lcall
mov
and
movsb
ret
cmp
cmp
adc
movsl
push
ljmp
push
and
imul
mov
xchg
jnp
mov
in
adc
leave
xchg
mov
incb
cmc
mov
lock
scas
cli
jmp
aad
mov
jge
pushf
mov
adc
mov
int3
cmpb
stos
dec
lahf
hlt
sarb
inc
inc
mov
cmp
js
mov
and
cmpsl
mov
add
stc
cld
mov
inc
das
jge
xchg
pushf
fwait
into
xchg
adc
repnz
ficoml
cmpsl
int3
jbe
inc
aam
pop
in
js
sbb
mov
test
mov
addr16
mov
inc
lcall
outsl
lcall
jne
dec
les
jmp
fidivrs
or
mov
stos
enter
int
rorl
lds
pop
hlt
shlb
sarb
clc
fs
ret
iret
sbb
out
adc
shrb
setp
hlt
jno
pushf
enter
cmc
jg
xchg
repnz
daa
sahf
cmc
inc
inc
pushl
mov
and
cmp
shll
push
push
xchg
xor
xor
ljmp
stos
out
or
fwait
sub
xor
cwtl
divl
fwait
cwtl
out
push
mov
scas
lret
or
and
jg
mov
in
sarb
add
xchg
sub
test
repz
in
or
sarl
push
xchg
enter
mov
fstl
push
pusha
insb
xchg
sub
rcl
cltd
popl
rorl
enter
dec
and
je
ret
sbb
ljmp
dec
mov
mov
jo
repz
sarb
sbb
clc
pop
sahf
and
outsl
in
push
push
inc
sub
fnsave
call
push
test
scas
or
inc
or
and
test
sub
mov
icebp
inc
out
fnstcw
push
jb
add
pop
mov
mov
movsb
dec
mov
pop
pop
ss
les
push
in
aad
pop
lret
std
ja
shlb
int3
fsubr
sub
sti
sbb
sbb
xchg
mov
cmpsl
cmpsl
js
scas
outsl
dec
shld
push
movsb
sbb
mov
jne
ficoms
cli
sbb
add
fwait
xchg
stos
and
push
rorb
jge
sub
inc
stc
jns
sub
inc
sub
cltd
mov
ret
xchg
leave
shr
sub
in
rclb
inc
out
cltd
mov
dec
jl
pop
in
push
pusha
mov
mov
stos
lods
sbb
dec
pop
xchg
pop
aad
adc
insb
int
stc
jg
or
push
mov
adc
cld
in
loope
shrb
mov
lret
ret
insl
les
mov
add
scas
push
push
insl
mov
xchg
push
sti
push
jmp
cmc
inc
dec
mov
lock
sbb
sub
mov
inc
xor
xchg
daa
add
in
mov
pop
movsl
push
pop
xchg
mov
sub
xchg
popf
sub
and
jns
cmc
xchg
clc
or
icebp
cmp
and
sub
sub
dec
cmpsl
sbb
fcoms
in
sub
inc
loop
je
mov
inc
mov
push
jae
jne
inc
cmp
mov
mov
jbe
push
ret
repz
pop
das
imul
xlat
xchg
idivb
fstl
stc
pop
adc
mov
cmc
jl
in
and
lea
fidivl
fsubl
xchg
jae
ret
add
jle
inc
xchg
inc
push
xor
mov
or
jno
mov
mov
jl
dec
push
out
stos
jg
jnp
cmp
xchg
lods
xor
sbb
mov
fildll
mov
aam
mov
add
aam
sti
jmp
sub
jns
pop
pop
enter
imul
int
or
bound
mov
aam
mov
jecxz
std
and
push
call
pop
mov
loop
repz
mov
jecxz
jno
repnz
sub
mov
pop
xchg
inc
andl
hlt
lcall
lds
cld
inc
sbb
mov
fistl
mov
xchg
sub
xor
or
push
push
mov
lds
rorb
fdivs
mov
sbbl
insb
int
in
and
push
mov
cmp
add
jecxz
hlt
mov
mov
push
mov
out
pop
hlt
dec
imull
sub
push
or
mov
ds
inc
aas
mov
fdivr
ds
es
xchg
mov
les
sbb
sbb
jno
lea
mov
lods
int
pop
out
loopne
and
mov
and
orb
mov
and
push
jmp
pushf
push
pop
and
daa
push
jb
mov
jb
pop
push
mov
daa
inc
push
jbe
stc
sahf
sub
test
idiv
cli
pop
pop
xchg
add
mov
and
dec
aaa
pop
popa
clc
inc
adc
into
gs
add
cld
xchg
xchg
jns
mov
adc
fs
mov
pop
ss
sub
js
pop
sub
lds
repz
sbb
sar
mov
cltd
mov
mov
imul
inc
add
jle
xchg
sub
sbb
ret
leave
jb
sbb
cld
add
cwtl
int
cmp
pop
aaa
pop
xor
mov
add
adc
inc
out
add
sbb
hlt
inc
bound
shlb
and
mov
loopne
ljmp
mov
scas
adc
aam
xchg
jecxz
scas
jp
cmp
xchg
jp
outsb
jno
into
sahf
in
xchg
andb
mov
or
mov
jl
jge
push
and
pop
lahf
sbb
jno
and
mov
fisttpll
mov
xchg
lahf
cmp
inc
or
pop
fistpll
jno
xor
xchg
repnz
out
adc
outsb
jl
shl
adc
ds
nop
cmpl
mov
lods
and
rcrl
fiaddl
mov
sbb
test
or
push
int3
popf
cmc
movb
in
sar
jg
movsb
outsl
sbb
mov
outsb
ret
cli
iret
mov
leave
movsl
pop
mov
and
gs
mov
mov
mov
cmpsb
jmp
outsb
jne
daa
packssdw
ret
sbb
sahf
cltd
mov
call
sub
mov
les
ds
adc
daa
pop
push
mov
jg
or
out
and
mov
cld
sub
lods
fistpl
inc
hlt
hlt
es
push
jp
sub
mov
jg
movsl
aas
jns
movsb
cmp
stos
mov
add
test
stos
cmp
dec
mov
push
mov
jle
mov
lods
mov
out
add
test
jb
cli
test
adc
in
lcall
xchg
out
mov
std
pop
inc
cmpl
sbbl
sbb
ret
inc
inc
push
inc
xor
jecxz
movsl
popf
inc
hlt
repz
and
jg
sub
and
jg
loop
inc
aam
int
daa
xchg
je
test
test
arpl
in
cmp
cmc
add
loope
dec
mov
ds
sub
sbb
mov
lods
fisubrs
and
mov
neg
scas
arpl
js
cli
pop
pusha
cs
imul
enter
xor
push
ljmp
mov
mov
lret
xor
outsl
test
and
pop
sbb
aam
lcall
mov
xchg
into
inc
sbbb
ret
in
out
loop
jp
call
mov
adc
jle
xchg
push
movsl
mov
sbb
hlt
dec
mov
mov
cmp
dec
xor
test
adc
shlb
daa
filds
sbb
mov
int
jo
not
jmp
dec
stos
das
and
cli
iret
push
cli
je
inc
stc
jno
nopl
or
jp
les
fstp
ljmp
fldenv
xor
les
daa
add
js
ljmp
sarl
arpl
push
push
cmpsl
pushf
je
sbb
fs
sub
mov
aam
fimull
cmp
cmpsl
push
xor
insl
push
mov
xchg
outsl
shlb
push
mov
jmp
fucomi
dec
fsubl
rcrl
xor
insb
add
fcomps
inc
sbb
push
mov
aaa
popf
jb
inc
call
iret
xchg
lds
pop
shll
pop
add
enter
sub
das
xchg
mov
sti
xor
fldl
fmul
mov
push
pop
dec
outsl
daa
rcrb
sbb
sbb
push
xchg
lea
mov
or
adc
out
sbb
scas
imul
ljmp
test
je
popa
adc
loope
aam
sar
pop
cmpsb
loop
pop
push
popa
imul
mov
push
jo
jmp
jl
sub
dec
rorb
enter
mov
jbe
fdivr
ret
mov
scas
inc
mov
fisttpl
aas
sbb
iret
iret
in
movsl
jae
mov
aam
sti
xor
jbe
fimull
lods
aaa
mov
pop
jno
mov
or
rcl
loope
lcall
test
dec
push
or
inc
ror
and
mov
mov
test
mov
into
lds
in
call
fsubr
inc
fisubl
sub
jecxz
jo
lea
jp
stos
dec
aas
add
mov
push
push
test
inc
push
cld
dec
jg
inc
pop
mov
ja
gs
push
xor
jmp
sub
jnp
outsl
or
ljmp
cmp
or
cmpsl
ficompl
jecxz
into
enter
popf
in
or
jae
adc
inc
dec
mov
cltd
ljmp
dec
jmp
sub
repnz
jno
jbe
mov
es
out
mov
sub
cli
jne
jmp
and
pop
jb
ja
movswl
mov
cmpsb
inc
loopne
nop
pop
mov
and
jl
pusha
ss
repz
push
pusha
or
mov
lods
notb
push
jle
sub
xchg
scas
sarl
lcall
mov
cmpsb
jle
xlat
test
hlt
push
hlt
in
push
shr
add
mov
xchg
and
push
dec
sbb
stc
sbb
xchg
inc
outsl
mov
test
aas
adc
lea
sub
xor
pop
mull
aad
pop
sbb
or
jmp
lret
div
cs
sti
push
movsl
add
cltd
imul
push
aas
sub
out
push
movsl
pop
imul
push
cmp
loopne
mov
ljmp
mull
inc
movsb
sub
stc
fists
push
stc
gs
cmp
sub
lea
cwtl
jecxz
mov
dec
cltd
adc
and
or
jmp
sub
xchg
jnp
in
pop
fildl
jge
call
adc
mov
int
jns
nop
push
das
sbb
jg
jecxz
adc
add
ret
ds
test
fsts
repnz
js
inc
pop
and
rolb
or
xor
mov
scas
mov
xchg
dec
pop
popa
lcall
addl
sub
mov
mov
ret
movsb
mov
mov
xchg
mov
or
popf
mov
arpl
out
xchg
mov
std
push
popa
adc
sbb
or
pop
mov
sbb
ja
xor
insl
dec
or
xchg
mov
mov
fbstp
and
xlat
outsb
fadds
sub
jnp
mov
dec
add
repnz
rol
out
or
add
outsl
insl
pop
icebp
shrb
fistpll
jp
and
push
add
inc
loop
xchg
fbld
add
or
pop
jl
mov
add
enter
ja
sub
fs
pop
nop
flds
frstor
jns
adc
xchg
jecxz
jp,pn
push
flds
ret
aas
andb
negl
popf
int3
iret
dec
hlt
xchg
or
adc
xor
nop
sbb
leave
adc
lds
rep
mov
mov
sub
lods
in
lock
sub
pop
dec
out
pop
or
dec
out
js
adc
pushf
dec
inc
cmp
push
adc
stos
test
sbb
test
dec
jnp
adc
pop
iret
ja
mov
lods
mov
subb
pop
shl
sbbl
enter
dec
push
iret
aam
and
cwtl
es
in
jae
pop
insb
xlat
das
stc
jmp
fcoms
int3
outsb
inc
outsb
call
sub
add
add
fiaddl
fwait
icebp
popf
jg
jnp
jae
scas
gs
out
push
arpl
pop
mov
dec
xor
pushl
mov
jecxz
pop
xchg
xor
movsl
movsl
in
cmp
cmc
arpl
or
sub
mov
sbb
cmp
jns
andl
pop
out
icebp
mov
xor
incb
and
mov
cmp
xor
mov
jge
pop
add
aam
lret
mov
mov
out
lods
aad
cmpsb
xor
cmc
imulb
outsl
int
jge
or
das
push
scas
jb
lock
dec
push
cmpsl
fisubrl
imul
cmpsl
ljmp
cmpsl
pop
shrl
fchs
push
cmp
icebp
nop
mov
popf
imulb
imul
cmp
test
sub
dec
mov
int
xchg
in
mov
icebp
and
pop
sbb
jecxz
xchg
lahf
add
inc
sahf
mov
popf
lret
jecxz
fwait
push
aas
mov
jae
cs
scas
sbb
aad
sub
xchg
insl
cmp
pop
jnp
roll
loop
std
daa
test
cmpsb
jo
and
pop
in
loopne
cli
jmp
xchg
xchg
sar
jmp
mov
ljmp
pop
shll
or
icebp
add
mov
jae
ljmp
mov
out
pop
mov
pop
enter
xchg
imul
sub
outsb
xor
call
push
sbb
shrl
popf
jmp
push
mov
insl
and
pop
popf
dec
ficomps
fucom
jg
test
dec
pop
imul
sbb
movsb
dec
push
push
arpl
sbb
xchg
push
loop
and
fs
mov
in
dec
or
pop
push
push
mov
cmpsl
xchg
mov
movsl
shll
jg
bound
xor
scas
sub
fildll
arpl
dec
cltd
jae
js
push
push
testb
pop
jmp
scas
scas
inc
mov
cmp
std
cmp
jns
adc
sub
mov
xor
pop
dec
jp
pop
mov
pop
sar
popf
mov
ficompl
fldl
jbe
aaa
mov
jecxz
shlb
arpl
inc
addr16
mov
mov
nopl
sub
and
movsl
sbb
or
cltd
lods
push
xchg
fucomip
cltd
stos
fstl
dec
adc
push
cmc
sahf
jbe
hlt
mov
mov
jecxz
cmpsb
adc
flds
jne
addb
inc
inc
or
adc
test
and
dec
cmp
loop
ja
fadds
out
xor
lahf
lret
repz
inc
pop
fdivl
lea
test
mov
out
xor
lret
sahf
aaa
cmp
decb
cwtl
repnz
rcrl
js
jae
xlat
cmp
les
push
lahf
lcall
sbb
jbe
or
imul
testb
loope
jb
xor
cmp
into
out
push
rcll
sarl
icebp
xchg
scas
inc
adc
dec
call
push
sub
xchg
cli
pop
adc
mov
sub
pop
inc
arpl
pop
dec
pop
divl
popf
scas
or
fcoms
cld
jae
add
or
pop
sbb
rclb
lds
pop
pop
lahf
sub
mov
daa
mov
or
xor
imul
lret
mov
cmp
scas
sub
cmpsl
js
cmc
fstp
adc
int3
lret
mov
fdivp
pop
imul
rorb
and
xorl
add
mov
stos
adc
pop
test
xor
mov
add
mov
movsb
dec
je
cmp
or
test
pushf
xlat
outsb
pop
test
ss
adc
push
int
jne
gs
sbbl
jg,pn
sub
xchg
hlt
and
idivl
or
rol
cmp
inc
sub
es
into
add
cld
xchg
hlt
cmp
jge
shrb
adc
jne
pop
dec
adc
mov
adc
rcll
stos
pop
sbb
popf
cmp
pop
scas
dec
push
loopne
adc
xor
pushf
negb
jae
pop
cmp
pop
dec
inc
ficoml
loopne
mov
xor
movsb
scas
in
fwait
pusha
adc
fwait
ja
cmpsb
por
push
pop
lret
mov
iret
jl
addr16
popf
inc
in
mov
inc
xchg
xor
cmp
add
std
fldl
notl
push
adc
sbb
jo
int
sbb
clc
or
into
jbe
or
imul
popa
cmp
mov
ljmp
inc
jmp
or
sub
mov
jb
mov
frstor
std
xchg
sbb
xor
lods
xchg
cs
xor
push
ret
sub
jbe
lods
in
pop
lock
push
sbb
or
shll
sarb
fcmovb
sbb
outsl
ret
in
sahf
adc
dec
cmp
out
movsl
or
pop
sbb
sbb
clc
adc
sub
dec
jbe
sbb
add
pusha
mov
cmp
test
enter
loope
push
jne
mulb
movsb
icebp
aad
jne
out
sbb
js
dec
pop
test
fstl
insb
jb
arpl
cwtl
push
cmp
add
movsl
fisubl
popf
repz
sub
jae
or
mov
aad
popa
adc
notl
repz
mov
xor
jb
enter
and
pop
in
stc
das
cmp
lahf
pop
fimuls
cmp
fbld
add
cmp
mov
hlt
and
pushf
imul
cmp
dec
ljmp
xor
cmp
sbb
jne
mov
mov
lock
sub
loopne
inc
pop
js
mov
cmpl
xchg
sub
daa
les
lahf
enter
sbb
bound
push
adc
push
xchg
sub
fdivrl
mov
fcomps
fisttpl
adc
cmpsl
pop
movsl
fnsave
and
push
repz
push
movsb
stc
sub
ret
push
rcr
xchg
jae
shl
mov
mov
push
lods
cmpsb
dec
fbstp
sti
rolb
lock
test
stos
fisttpl
pop
inc
aam
add
loop
push
and
inc
pop
mov
jmp
out
fistps
xor
or
inc
or
xor
cltd
mov
add
and
jns
pop
or
sbb
jne
push
jns
inc
xor
in
mov
movsl
lods
jecxz
mov
das
mov
xchg
or
dec
add
push
add
dec
pop
imul
mov
cmpsl
or
jge
push
out
mov
movsb
jae
adc
ret
jp
mov
push
mov
pusha
mov
inc
or
sbb
push
sub
in
sarl
movsb
jmp
testl
pop
ljmp
test
div
in
push
scas
cmp
sahf
mov
mov
inc
cld
jle
rol
cmp
filds
add
loopne
roll
out
xchg
adc
pop
push
in
jmp
xchg
jmp
ret
insb
movsb
push
fnstenv
push
mov
leave
xchg
cmpsl
jl
cld
cvtps2pd
adc
shr
jbe
sbb
add
orb
aad
add
add
sbb
out
mov
cmpsl
rcrl
pop
mov
push
call
sub
adc
jo
and
mov
cmp
adc
and
inc
inc
dec
das
lock
mov
int3
mov
jnp
xor
out
lock
or
dec
dec
inc
mov
mov
dec
stc
mov
aad
mov
jmp
jg
push
sub
adc
je
sub
and
or
insb
jno
nop
mov
sub
cld
fiaddl
xlat
jp
adc
mov
mov
xor
daa
mov
and
or
xchg
fwait
pushf
out
sbb
push
xor
push
inc
fldenv
aaa
cmpsb
cmpl
ljmp
xor
cltd
dec
mov
jnp
orb
dec
aaa
outsl
jae
add
stos
lahf
in
xor
mov
cmp
lock
mov
sbbl
andnps
bound
test
ret
jl
or
and
ds
jmp
js
inc
pop
enter
push
mov
adc
push
cs
push
push
pop
xchg
push
cld
sbb
test
add
stos
jg
push
mov
loope
adc
push
push
frstor
cmpsb
xor
lock
inc
dec
sub
pop
add
sub
sbb
sub
std
jne
je
xchg
cmp
adc
xor
xchg
ja
in
xor
mov
add
jns
mov
fcoml
stos
movsb
add
add
cmp
stos
loope
repz
cld
shll
sbb
xor
dec
call
roll
lods
in
fsubl
sub
repnz
iret
aam
mov
xor
push
clc
cmpsl
out
adc
push
popa
or
mov
stc
sub
cs
fucomp
into
cli
push
adcl
cmpb
xchg
bound
aaa
les
inc
daa
std
out
sarb
cmp
jg
test
sub
vmovntpd
int3
mov
inc
int
cmc
and
lret
imul
push
imul
imul
pop
sub
mov
dec
cmpsb
movsb
out
or
xchg
inc
stc
mov
imul
shlb
test
cmp
sub
add
dec
sarb
sbb
hlt
in
fcoms
xor
icebp
sbb
aad
jns
or
dec
imul
aad
jmp
stc
push
ret
fadd
mov
loopne
into
sahf
inc
mov
ljmp
mov
pop
movsb
push
lods
aaa
adc
mov
cmp
and
ds
push
sub
cli
cmpb
call
rorl
stos
fimull
scas
jmp
push
testl
lds
int3
xchg
sub
lahf
scas
out
ficompl
push
test
sub
out
mov
adc
cmp
loopne
loop
xchg
cli
shl
enter
fsubrs
cli
lahf
xor
or
sub
clc
out
mov
lret
mov
cmpsb
scas
dec
stc
xchg
das
xlat
sub
and
adc
add
add
mov
mov
icebp
cld
and
rclb
ds
cmp
orl
adc
enter
rorb
mov
xchg
out
and
xchg
dec
fwait
rcrb
scas
sub
adc
jle
jmp
mov
cmp
jae
xor
popa
out
mov
push
mov
adc
mov
jbe
in
lock
jmp
cmc
pop
jo
seta
enter
sbb
mov
or
push
lcall
outsl
pop
iret
add
loopne
push
adc
dec
test
xacquire
inc
inc
pop
stos
das
add
in
jae
or
xchg
xor
xchg
in
jb
or
inc
std
scas
ret
ss
adc
jne
xchg
xor
mov
dec
mov
and
jecxz,pn
dec
pusha
pushf
enter
loope
mov
mov
cmpsb
lods
loopne
inc
inc
loope
scas
cmc
or
xor
hlt
out
jge
test
mov
jecxz
movsb
push
test
or
cltd
add
sub
lea
pusha
lret
mov
mov
sar
repz
jns
dec
stos
mov
jle
cld
movsl
lret
xor
sub
test
lret
sub
movsb
dec
mov
fwait
mov
mov
cmp
mov
push
and
lea
daa
cmp
sub
cmp
cmp
testl
mov
lods
xchg
push
lds
jl
or
xor
shlb
xchg
pusha
cltd
stos
adc
lods
xchg
fs
cmc
icebp
repnz
adc
jecxz
push
jl
add
or
outsb
inc
xchg
mov
inc
out
mov
push
inc
faddl
sub
test
jo
mov
enter
xchg
pushf
mov
xchg
adc
pop
into
sub
lret
cwtl
pop
add
les
ja
sti
loopne
cmc
loope
jmp
xor
mov
fs
mov
aas
cmp
cmp
inc
adc
xchg
outsb
pop
jo
ficompl
sahf
jns
mov
pushl
cmp
jo
pop
in
mov
push
sbb
mov
xchg
mov
jae
pop
mov
in
in
aam
data16
mov
xchg
adc
ljmp
dec
adc
sub
and
lahf
sub
and
xchg
jp
mov
stc
sbb
mov
xchg
pop
orl
push
jnp
sbb
sbb
inc
push
mov
leave
mov
jns
push
std
inc
lcall
push
in
push
loope
cmpb
sub
add
dec
and
cs
lods
sbb
add
add
fcmovu
aas
jns
lds
mov
dec
frstor
in
push
popa
dec
cmpl
inc
enter
mov
ja
in
loope
jp
sub
iret
lahf
adcl
jns
pop
dec
add
mov
lods
jl
and
hlt
xorb
dec
stos
fmuls
fisubs
push
xchg
dec
push
xchg
add
jbe
xor
push
jle
lock
xchg
imul
int3
shl
xor
lock
dec
pop
psubw
cmp
push
cmc
insb
dec
imul
ret
ljmp
inc
out
xchg
pop
sub
xor
loope
popa
inc
gs
xor
shlb
jmp
ret
rcl
adc
clc
push
sub
xor
sbb
out
sbb
push
jp
inc
imul
inc
mov
das
add
add
lahf
or
xor
cmpsl
mov
adc
xchg
jne
std
js
push
mov
mov
sbb
or
lret
ds
jb
mov
dec
xchg
xchg
xchg
daa
test
dec
loop
ljmp
mov
stc
cli
out
pop
cwtl
ss
push
xchg
mov
xchg
test
sub
insb
dec
loop
dec
shlb
add
aad
lds
shlb
adc
ja
cwtl
push
xor
dec
lcall
and
std
cmp
adc
aam
xchg
mov
xchg
lcall
test
sub
imul
push
pop
sbb
scas
inc
pop
or
add
call
sub
xchg
in
push
mov
cs
dec
sbbl
mov
push
xor
push
fisttpl
sub
xchg
add
in
insl
call
push
xor
out
rclb
sbb
enter
sub
dec
jle
or
xor
mov
mov
cltd
popf
mov
inc
xchg
lahf
icebp
mov
pusha
movsl
ret
lret
mov
mov
add
movsl
repz
or
cmp
out
aas
sti
movsb
sub
ror
aaa
les
stc
imul
icebp
jbe
pop
jmp
js
jne
data16
cmpsb
and
inc
cmp
ja
inc
pop
es
mov
repnz
sbb
push
hlt
leave
roll
xor
push
imul
sbb
js
jge
sarl
inc
mov
xor
imul
ljmp
mov
adc
sub
mov
pop
and
add
in
repz
jmp
out
pop
inc
fistpl
cmpsl
pushf
cmp
sti
sbb
xor
dec
add
scas
mulb
in
ljmp
mov
subb
movsb
push
repz
sub
sbb
lea
adc
cld
mov
mov
fsubs
inc
scas
push
scas
call
mov
push
cmpsl
sahf
add
daa
cmp
cltd
xchg
cmp
mov
fimull
sub
jne
add
and
fistl
into
jmp
adc
mov
xchg
mov
add
xor
das
in
insb
jno
pushl
xchg
into
jae
adc
mov
lret
scas
mov
imul
jecxz
call
mov
ret
pushf
xchg
les
fwait
cmp
sbb
xor
jg
cwtl
cmp
pop
jo
js
cmpsb
jg
push
dec
dec
xor
xor
loop
lods
xor
pusha
pusha
push
stos
insb
out
idivb
ss
in
in
idiv
xlat
jns
addr16
sub
mov
cmp
hlt
mov
iret
lret
or
or
test
imul
xchg
call
and
iret
fiadds
dec
push
push
lods
leave
jge
dec
mov
pusha
add
mov
dec
add
pop
xor
xor
inc
push
int3
pop
sti
cmp
sub
inc
orl
js
subb
inc
inc
iret
leave
sti
push
mov
jae
xor
cld
pop
or
jle
push
xorl
sub
add
cmp
inc
sbb
and
mov
shl
call
add
clc
sub
cs
orb
imul
aam
cs
enter
fnsave
lret
cmp
movsl
adc
push
ljmp
mov
daa
test
xor
fistpl
add
jae
lret
mov
mov
stos
test
push
in
test
jge
test
cs
outsl
pop
xchg
scas
xchg
mov
xchg
sbb
mov
push
mov
dec
xor
and
dec
pusha
mov
or
lods
je
seto
and
jne
and
cmp
les
into
in
xor
scas
mov
sub
fcoms
sti
cmp
pushf
aad
fsubrs
cmpsl
cltd
nop
mov
pusha
fsubl
inc
push
addr16
push
enter
xlat
push
adc
mov
push
test
out
cmpb
jg
or
cwtl
mov
pop
pop
popf
cmp
aaa
inc
in
add
xchg
ljmp
lahf
cmpsl
jmp
je,pn
xlat
fs
jmp
cmpsl
les
jo
jg
or
dec
and
mov
cmp
jecxz
add
pop
repnz
pop
sbbb
xchg
leave
sub
sahf
movsb
inc
dec
adc
cmp
scas
xchg
shll
stos
push
lcall
out
jbe
push
lea
jne
out
pop
in
in
mov
xchg
lcall
imull
or
sub
and
jl
and
movsl
je
xor
sub
leave
xchg
lcall
arpl
pop
inc
push
gs
lahf
rcll
es
dec
lahf
pop
movsb
fsubr
mov
push
in
cmpsb
sub
aaa
sti
and
inc
out
push
insb
xor
call
push
outsl
fisttpl
push
aas
jo
xor
cld
das
clc
jle
lret
rorb
inc
rol
push
push
jg
aas
fistpll
cmp
jo
add
sub
mov
lds
divb
clc
sub
pusha
adcb
dec
sub
fistpl
mov
pop
daa
or
push
cli
and
fucomp
iret
sbb
fdivs
inc
or
stos
xchg
cmp
lret
shlb
mov
sbb
arpl
adc
mov
fldl
mov
sbb
es
pushf
inc
out
adc
pushf
icebp
xchg
es
inc
js
mov
je
test
lret
adc
push
popf
incb
ja
or
cld
cmpb
mov
mov
jl
lods
lods
sub
jl
pushf
sub
mov
jb
in
imul
sub
cltd
arpl
adc
outsb
adc
mov
push
mov
inc
dec
imul
mov
mov
xlat
xchg
cmp
pop
inc
pushf
sbb
dec
xchg
jecxz
xor
insl
in
inc
cmc
shlb
ja
mov
icebp
dec
pop
ja
push
in
ljmp
in
dec
mov
push
out
popa
popa
loop
push
add
pop
dec
mov
in
inc
test
gs
aaa
out
xor
mov
dec
rcl
dec
push
jb
push
stos
inc
xor
repz
push
imul
test
dec
shrb
nop
loop
and
mov
xchg
rcl
loope
pop
arpl
inc
push
gs
movsl
out
mov
sbb
cmp
mov
sub
sub
in
es
xchg
pusha
mov
lods
ror
outsl
inc
xlat
lods
or
add
std
mov
pusha
jge
movsl
out
aaa
mov
dec
or
or
int3
jne
jae
jecxz
loopne
repnz
sarl
xchg
aas
clc
mov
aas
cwtl
pop
xor
jo
mov
fcoms
xor
and
aad
xor
jae
sub
mov
mov
repnz
movsl
fisubrl
jmp
pop
insl
mov
std
insb
cmpsl
repnz
fwait
rolb
cld
push
lods
jae
push
cmp
out
mov
and
iret
test
mov
int3
jmp
es
std
pop
adc
fiadds
ja
adc
dec
push
in
fidivrs
jmp
shlb
sbb
movsb
int3
adc
push
out
and
jg
mov
in
cmpsb
add
jbe
xchg
into
outsb
hlt
xchg
or
sub
mov
in
cmp
xchg
sbb
enter
and
cmp
dec
push
xor
pop
in
stc
mov
pop
mov
jae
aad
push
fists
cmc
cmp
mov
cmpsb
cmpsl
test
rcrb
or
or
pop
stos
cmc
fwait
adc
add
jne
movsb
scas
sub
es
push
xchg
xchg
in
mov
or
or
or
aam
daa
adc
das
fisubrl
lods
push
or
es
pop
fnstcw
dec
hlt
xchg
jl
mov
mov
mov
pop
lahf
xor
or
aaa
dec
lcall
dec
cli
ljmp
cmp
push
daa
jle
inc
lret
xor
lret
adc
enter
mov
pop
and
pushf
rcll
out
or
pop
cmpsb
test
push
stos
movsb
jmp
pop
pop
out
les
testb
pop
jmp
push
subl
and
inc
mov
mov
sti
ret
xlat
repz
out
dec
add
sub
dec
fstpl
aam
push
mov
push
ret
or
daa
mov
sahf
enter
fsub
cmpsl
adc
mov
inc
cmp
jbe
movsb
repnz
xchg
arpl
xor
mul
cltd
lahf
xchg
ja
xchg
mov
pop
roll
repnz
sarb
cmp
jne
nop
mov
je
sub
js
xor
xor
popf
popa
aad
lods
lret
repz
mov
fisttps
push
sub
push
pop
js
cmp
adc
or
add
mov
loopne
mov
test
hlt
adc
push
mov
scas
mov
fimuls
add
xchg
sahf
pop
mov
fiadds
sub
jge
sahf
or
loopne
xchg
out
pop
ret
mov
cltd
decl
or
jl
mov
or
stc
hlt
dec
mov
xor
xor
mov
frstor
cmp
int3
das
pop
sbb
sbb
out
push
popf
ret
jg
add
xchg
dec
inc
lahf
popa
inc
xchg
sbb
push
repz
mov
xor
jmp
mov
jle
add
cmp
dec
sbb
iret
loope
psubw
outsb
mov
push
aaa
or
shr
outsl
int
notl
push
pusha
xchg
pop
lods
add
or
mov
mov
repz
lods
cld
pop
inc
mov
aaa
addr16
mov
sahf
les
popf
stos
dec
mov
pop
jne
popa
and
mov
mov
xor
fcmovne
and
xorb
clc
xchg
sbb
add
jo
add
jl
or
sbb
pop
das
in
sub
push
jns
ja
dec
pop
inc
add
push
push
mov
loope
test
xchg
xchg
mov
sahf
cmp
fisttpll
xchg
comiss
test
xchg
inc
pop
sbb
mov
ret
sbb
fistpl
jns
sbb
jns
pop
mov
sub
adc
lret
lret
lsl
clc
aaa
fbstp
cmc
aad
mov
xor
inc
inc
lahf
notl
pop
push
add
iret
mov
xor
dec
test
cwtl
sub
xchg
cmp
loopne
bound
nop
xchg
or
mov
cmp
adc
cmp
push
iret
cmpb
xlat
icebp
imul
push
or
in
mov
aaa
inc
sbb
push
rolb
rclb
mov
pusha
rolb
insl
dec
pop
cmp
cmp
pop
aad
insb
mov
insb
mov
adc
adc
mov
sub
pop
pop
push
outsl
sar
loopne
ficompl
hlt
out
xchg
sbb
repz
add
pop
push
push
fistps
aam
mov
out
fs
jb
leave
mov
xchg
loope
mov
arpl
jne
dec
faddl
aas
xor
jge
hlt
enter
shll
dec
repnz
lea
lret
sub
icebp
sub
jno
mov
push
in
dec
sbb
xchg
xchg
push
scas
mov
dec
int
mov
mov
xchg
pop
or
jl
pop
sahf
bnd
lock
fisubrl
lret
lcall
fsubrs
cld
inc
add
fisubrs
or
mov
loop
inc
jle
das
jb
aam
and
cwtl
pushf
fisttpll
out
fadds
xchg
in
ja
mov
leave
or
std
mov
sub
or
mov
pop
clc
int
mov
test
jns
jno
ret
in
cmp
cmp
or
fsubrs
jb
cmp
dec
sbb
es
gs
pop
pushf
dec
shrl
scas
xor
push
dec
test
push
and
pop
add
fldl
ss
rcll
nop
or
cmc
adc
movsl
xor
pop
jo
pop
mov
xor
add
push
sbb
adc
xchg
jo
jae
insl
dec
adc
pop
sub
cld
add
cltd
xor
pop
lcall
testl
jo
cmpl
inc
stos
fwait
andnps
xchg
xchg
dec
in
mov
pop
lods
aad
mov
arpl
and
lret
and
imul
cli
sbb
addr16
pop
subb
adc
in
scas
inc
shl
jl
push
xchg
pop
inc
pop
out
pop
lcall
in
shll
and
push
pop
ljmp
rorb
cmp
data16
or
adc
notl
inc
inc
and
inc
rcll
nop
pusha
xchg
sar
enter
rorb
out
jae
jl
ljmp
inc
add
jns
jp
fidivrs
in
add
lea
out
cmp
push
mov
aad
xchg
inc
mov
add
mov
xchg
inc
lock
insb
or
push
sbb
jp
jle
setae
in
dec
pop
xchg
pop
xchg
rolb
int3
cmp
add
cmpsb
lods
in
les
mov
xor
push
fsubrl
clc
sub
pop
mov
jg
xchg
xchg
cmp
in
aad
rorl
repz
popa
cmp
sub
xor
hlt
push
cmc
adc
fnstsw
iret
imul
test
sub
cmpl
flds
sub
push
test
in
inc
sub
scas
int
cmp
push
scas
cmp
mov
lds
or
and
xchg
mov
jno
repnz
xchg
cmp
mov
fadds
jns
xchg
out
jno
test
mov
sbb
in
jae
shrl
out
int3
mov
rorb
cmc
xchg
fnstcw
jl
push
jecxz
flds
dec
xchg
mov
mov
jo
lock
jae
subl
cmpb
mov
dec
adc
mov
adc
out
daa
mov
inc
mov
adc
mov
sub
divl
ss
inc
push
add
sbb
pop
sub
push
pop
xor
or
clc
rcll
cmc
push
inc
pop
enter
out
sub
clc
inc
cmp
sbb
add
ljmp
subl
push
dec
xor
lods
or
sbb
push
mov
out
insl
sbb
jae
and
mov
iret
das
push
xchg
testb
inc
inc
push
push
cmp
pop
mov
jnp
fdivrl
and
cwtl
ljmp
xchg
inc
inc
js
push
ja
pop
lret
lods
test
fidivl
xchg
cmc
int3
sbb
stos
rcrl
inc
out
bnd
stc
xlat
aas
mov
cmp
inc
push
sbb
jae
gs
pop
enter
mov
jns
stc
xor
adc
enter
nop
push
push
adc
and
pop
lcall
xchg
push
jl
or
mov
pop
inc
jb
fldt
xor
femms
pop
sub
cmp
pop
mov
bnd
inc
leave
mov
mov
xor
jb
push
adc
jae
nop
jb
lahf
jae
pop
mov
push
lock
mov
inc
dec
stos
inc
sbb
mov
loope
lock
stos
jnp
fidivrl
incb
in
cld
cmp
cmpsl
inc
jg
in
std
cmp
pop
sbb
cmpsb
jno
rcrl
call
mov
mov
pushf
xchg
aam
fs
jmp
pop
xor
adc
bound
and
rcrl
sbb
pop
das
pop
mov
dec
jge
sti
mov
inc
es
cmc
mov
imul
or
scas
in
aas
loopne
xchg
xor
sub
fadds
stc
and
in
arpl
repnz
fidivl
stos
push
sbb
mov
es
and
addr16
idivl
fisubrs
dec
xchg
int
mov
add
mov
xchg
inc
and
jg
and
stc
inc
pop
fnstenv
cmpsb
inc
and
mov
or
hlt
sahf
stc
sbb
jecxz
xchg
aas
cmp
adc
insl
add
or
cmpsl
iret
xlat
popf
out
stc
xchg
in
cmp
pop
test
ljmp
in
push
sahf
rorl
jns
push
sub
repnz
sti
jmp
stos
cmc
add
lret
pop
mov
add
dec
roll
mov
pop
jo
mov
sbb
int3
cwtl
push
repnz
add
sarl
mov
repz
push
test
dec
stos
decl
mov
cmp
or
cmc
in
mov
into
cs
cmp
mov
push
and
std
jo
sub
or
add
xor
adcl
push
int
std
fs
cmpsl
lret
pop
adc
shll
in
sti
je
into
xchg
flds
cmpsl
aas
cld
or
ret
mov
jmp
sbb
mov
aam
scas
sbb
jns
fidivrs
lock
inc
lret
lods
pushf
jno
cmp
sub
jne
mov
pop
scas
pop
cltd
mov
std
inc
aad
jne
jo
dec
movsl
fisubl
dec
rclb
je
add
orl
imul
enter
xchg
std
and
add
jp
js
push
or
out
dec
das
mov
stos
das
movq
push
jg
xchg
mov
mov
in
stos
imul
sarb
test
rcrb
adc
xor
ret
push
or
jb
sub
hlt
sbb
push
test
daa
cmp
cmpsl
push
loope
adc
add
inc
out
sti
jb
sub
lcall
mov
hlt
dec
std
repz
out
jbe
ja
cmp
int
in
iret
fimull
ja
loop
mov
adc
mov
mov
and
in
mov
adc
pop
cmp
push
mov
mov
add
je
or
ret
in
add
call
jns
sar
fwait
add
pushl
mov
sti
cmp
mov
in
mov
sub
sub
ja
pushf
sbb
jo
dec
in
call
movsl
cli
sbb
les
dec
jp
out
xor
and
daa
int3
jbe
jae
add
fdivrl
sub
jno
fwait
rol
int
subl
xchg
push
adc
xchg
fmull
add
dec
mov
fcmovbe
and
clc
mov
sysret
shll
dec
add
gs
das
iret
std
mov
icebp
pop
rcr
outsl
fidivrs
mov
xchg
pop
lods
mov
cld
aad
imul
imul
inc
and
mov
inc
pushf
adc
jae
jo
sub
cli
jmp
jmp
mov
lret
sbb
pushf
xor
int
imul
test
les
stc
pop
push
outsb
sbb
xchg
lock
mov
adc
in
xor
sub
aas
dec
and
dec
push
xchg
mov
in
scas
adc
inc
test
inc
push
rorb
std
xchg
sbb
cmp
in
xor
insb
iret
imul
imul
cmp
in
jg
lcall
sahf
in
jae
jp
mov
mov
aas
sahf
lods
mov
cmp
movsl
je
out
pushf
or
mov
push
and
cmp
jno
dec
add
mov
arpl
sahf
and
fiadds
int3
jns
scas
xchg
sbb
xchg
sbb
lock
fucomip
outsb
dec
mov
cmpsl
std
adc
adc
in
mov
and
int
mov
jns
push
xlat
into
dec
pop
xchg
mov
xchg
insb
and
xchg
lcall
popf
sbb
inc
sahf
xlat
shl
push
xrelease
insb
std
shrl
bound
xor
xor
or
repnz
addr16
xor
mov
leave
cmpsl
cmp
adc
jb
cmpsl
xchg
mov
mov
pop
in
cwtl
icebp
mov
in
scas
outsl
add
int3
push
int
repnz
fsubrl
mov
jns
mov
xlat
adc
dec
xchg
rorl
push
xchg
add
clc
sub
test
dec
clc
and
cld
jo
mov
iret
scas
dec
mov
pusha
pop
call
or
sbb
pop
mov
mov
inc
xchg
in
hlt
lret
lods
insb
ljmp
pop
arpl
into
lret
sub
ss
pushf
hlt
mov
mov
das
daa
jo
mov
dec
iret
xor
lcall
xor
mov
sbb
mov
pop
int3
outsb
push
pop
jb
clc
fisubrs
mov
inc
out
push
mov
shl
inc
mov
mov
xor
push
into
mov
pop
clc
fwait
sarb
mov
xor
mov
sbb
cmpsl
push
sbb
adc
mov
sub
pop
inc
rcrl
and
fsts
and
pop
stos
or
jecxz
scas
bnd
cli
add
arpl
mov
aaa
xchg
or
flds
jle
dec
sbb
subl
jno
enter
fisubs
mov
lds
rep
adc
mov
or
js
popa
mov
xchg
add
mov
jns
xchg
mov
inc
cmp
or
mov
lods
int
mov
pop
inc
fdivrs
mov
in
shl
xchg
xor
adcb
je
dec
jg
jle
sbb
cmc
mov
pop
shll
sahf
icebp
loop
add
ljmp
mov
stos
xor
lds
loopne
shll
sub
cs
je
fs
out
mov
imul
jmp
pop
in
push
mov
cmp
jl
lods
aad
jae
xchg
mov
jecxz
sbb
bound
das
lods
cmp
stos
mov
xor
push
ss
pushf
mov
lahf
xor
and
shrl
gs
push
imul
ja
test
loopne
pop
or
cmp
dec
cmpsl
push
sub
imul
mulb
out
pop
filds
loope
add
cmpsb
rclb
and
in
adc
negl
add
inc
ja
jns
std
aas
lahf
push
out
lods
sbb
out
pop
shl
jg
pop
mov
ja
cmp
ret
outsl
out
test
sbb
les
and
sbb
shlb
lret
out
and
or
rclb
clc
pop
aaa
in
aam
shl
mov
dec
xchg
or
iret
into
xor
inc
xchg
sti
outsb
adc
add
test
or
pop
adc
push
sub
pop
subl
outsl
ret
xchg
push
test
or
add
and
in
mov
dec
lods
pop
je
mov
xor
pop
xlat
jno
inc
inc
int
xor
scas
lods
dec
mov
sub
adc
enter
divb
jbe
mov
jno
xchg
push
test
js
push
stos
gs
add
push
sbb
adc
sub
add
jge
pushf
jae
das
roll
adc
dec
stc
cmp
jae
out
pop
sub
fistl
xchg
fcoms
iret
adc
sbb
push
mov
mov
popf
mov
lock
mov
xorb
std
rorb
rsqrtps
popl
jno
shrl
cmpsl
mov
mov
push
icebp
inc
test
addb
jae
inc
mov
inc
push
inc
call
ret
imul
push
mov
adc
inc
mov
pop
in
fs
enter
sbb
push
adcl
pop
xchg
lcall
xor
adc
int3
cmp
mov
out
scas
push
ja
and
jle
or
pop
mov
les
sbb
push
add
hlt
leave
xor
mov
jecxz
fldl
test
in
push
cwtl
jb
or
mov
ja
idivl
fisubl
pop
pop
sbb
outsb
push
lods
div
adc
mov
dec
mov
out
mov
adc
jb
hlt
int3
or
pop
popa
imul
jecxz
xchg
enter
das
mov
fs
adc
pop
jg
lock
mov
js
scas
mov
in
jp
gs
cmp
leave
hlt
pop
les
cld
stos
mov
in
fwait
mov
cmp
add
mov
and
xchg
cmpsb
cli
test
data16
mov
jp
pusha
flds
sub
daa
fs
cmp
inc
mov
arpl
xchg
push
ret
or
call
jo
test
loopne
pop
dec
ficoml
hlt
add
std
aas
jmp
les
jne
pop
add
sbb
fcmovne
ds
test
popf
inc
pop
sub
dec
icebp
bnd
into
xchg
lea
xor
cmpsl
imul
mov
ffree
dec
cmp
dec
jg
inc
dec
pop
cmp
stc
adc
lret
push
and
fisttps
xchg
mov
jl
jns
int3
jns
mov
mov
sarb
and
and
imul
xchg
es
lret
imul
or
arpl
lret
mov
jno
sub
je
lahf
loope
pop
and
or
dec
ret
sbb
cmp
jmp
jmp
cli
dec
mov
jmp
cmp
mov
lahf
mov
mov
icebp
xor
aad
push
mov
mov
outsb
pop
sbb
call
jnp
add
ja
mov
mov
movsl
xor
or
mov
add
pop
jge
mov
fstps
in
daa
push
mov
push
dec
outsb
les
xchg
mov
test
sbb
push
enter
cmpsb
jg
mov
std
jmp
push
fwait
inc
sar
in
in
or
fwait
mov
nop
jne
orl
fistpll
lods
and
mov
data16
in
fwait
mov
pop
push
push
ds
mov
sub
fmull
std
ds
xlat
cld
inc
mov
mov
inc
push
push
bound
ds
pop
jae
dec
fstpl
inc
push
scas
clc
clc
js
mov
fbstp
lods
fimull
hlt
pop
mov
push
std
notl
or
pop
xor
daa
add
imul
sbb
adc
or
cwtl
add
push
imul
and
mov
inc
add
psllq
or
pusha
cltd
dec
sbb
cmpsb
pop
lcall
test
mov
cli
icebp
mov
das
mov
sbb
jmp
aam
push
les
in
pop
mov
and
stc
out
mov
into
lods
subl
jne
dec
jge
ret
cmp
cmpsb
lods
mov
shlb
es
and
lods
mov
sub
loope
gs
pushf
ds
push
add
cmp
loopne
jge
push
inc
mov
lcall
repnz
or
outsb
fs
xor
imul
push
es
std
fcmovne
cmp
inc
push
fs
sbb
pusha
xchg
jb
sbb
dec
popf
cs
push
insl
jle
vpmacssdd
xor
stos
or
cli
add
lahf
popf
gs
cmp
in
xchg
push
sbb
rolb
sub
ret
mov
notl
fisubs
mov
das
dec
negl
insl
ja
push
xchg
push
mov
xor
sahf
jecxz
lcall
cmpb
or
xchg
jb
rcll
pop
ds
xchg
pop
adc
out
adc
xchg
iret
push
nop
test
je
sub
arpl
orb
sbb
addr16
movsl
aaa
and
jo
pmaxsw
xor
call
push
hlt
scas
pop
cwtl
push
xchg
lcall
mov
clc
pop
in
jle
xchg
fsubrs
add
fs
jg
mull
jle
dec
add
aaa
mov
xchg
push
mov
mov
repnz
pop
jmp
adcl
sbb
sbbb
aad
dec
subb
iret
loopne
pushf
in
call
stos
movsl
loop
xor
test
sub
scas
push
xchg
sbb
lds
mov
dec
pushf
mov
or
cmp
jmp
jbe
fwait
inc
mov
ljmp
sti
mov
js
leave
stos
ss
pop
cmc
sbb
cli
bound
push
jae
xchg
mov
pop
bound
aas
bound
or
mov
fdivr
je
lock
out
shlb
lods
mov
subl
xchg
xchg
or
mov
pusha
cmpsl
mov
and
ds
dec
mov
cmp
fdivs
sarl
out
mov
dec
xchg
cltd
movsb
inc
add
mov
dec
rclb
sub
pop
in
sahf
je
xorl
mov
jmp
sbb
pop
pusha
mov
fisttpll
mov
jge
or
xor
pushf
dec
daa
xchg
sbb
dec
xor
aad
lock
int3
mov
fiaddl
out
cld
dec
mulb
inc
add
daa
mov
faddl
cmp
hlt
mov
sbb
inc
cltd
dec
addb
add
or
mov
mov
aaa
pop
jle
pop
xchg
add
in
in
negl
shl
adc
gs
mov
add
mov
jnp
mov
dec
inc
pop
cmp
xchg
iret
popf
fwait
outsl
movb
pop
clc
mov
push
mov
test
inc
insl
and
subl
fcomps
and
enter
and
lret
lcall
loop
xchg
pop
push
inc
cmp
mov
mov
mov
clc
jl
xchg
call
cmp
das
or
add
call
sub
and
out
push
out
ss
lahf
sbb
les
pushf
sbb
xor
or
sub
xor
lret
popf
in
pusha
jae
pop
sbb
dec
add
cli
dec
lret
subl
adcl
test
fdiv
or
add
in
sbb
jle
push
mov
pop
aam
mov
lock
mov
clc
lahf
and
stos
subl
test
push
jle
rcll
jmp
mov
jno
and
mov
bound
dec
cmc
mov
arpl
ficoml
aad
gs
rcr
sar
cmp
jns
fildl
jmp
out
cli
inc
xor
sarb
xchg
xor
rorb
lret
or
roll
cmp
add
cwtl
dec
jge
into
and
mov
adc
lcall
test
cs
outsb
les
lret
xor
loop
ffreep
adc
lret
out
cmc
cmp
out
sub
stc
gs
mov
pusha
and
fisubl
sti
movsl
loopne
mov
loop
or
fcompl
into
xor
lcall
cmpsl
repnz
dec
xor
sbb
ja
ds
push
bound
clc
sbb
and
movsl
and
xchg
test
mov
mov
push
mov
sbb
and
add
mov
sbb
mov
push
imulb
and
jle
push
mov
cs
or
jnp
insl
mov
xor
mov
xchg
scas
dec
adc
jp
cmpl
bound
sub
fsubl
dec
dec
scas
xlat
mov
cmpsb
mov
outsl
test
add
dec
out
cmp
cmp
mov
jg
jae
lock
das
fcmovu
cmp
cmpb
lret
mov
out
mov
and
cwtl
pop
lods
test
addr16
inc
insb
dec
sbb
scas
dec
mov
add
pop
xchg
icebp
sub
inc
ds
arpl
push
ret
mov
mov
into
lret
cmp
mov
inc
imul
push
cmpsl
js
rolb
mov
lcall
pop
fwait
mov
xlat
xor
fptan
cwtl
gs
rorl
mov
inc
lock
xlat
stos
pop
jmp
lahf
addb
repz
int
test
adc
jge
test
mov
into
bound
xchg
cmp
sub
push
xchg
sbb
xor
jg
sbb
mov
in
lods
movsl
xchg
pop
add
adc
movsl
das
xchg
aas
ret
mov
into
mov
jbe
push
lds
sbb
adc
sti
lcall
jmp
mov
cltd
push
out
jmp
push
adc
xchg
adc
cld
cmp
aaa
arpl
addb
imul
mov
mov
outsl
jae
shrb
inc
lea
orl
cmp
daa
cmpsl
jg
outsb
dec
add
std
filds
rcrb
xchg
ffree
addr16
enter
or
xchg
push
or
cld
jae
cmp
clc
clc
inc
lods
arpl
xor
fcompl
int3
jl
jmp
mov
adcb
pop
jle
adcb
push
es
push
add
jecxz
or
sahf
xchg
imull
subl
mov
push
enter
mov
pop
dec
pop
pop
cmc
fwait
stos
add
pop
cmc
xor
es
cmc
arpl
push
loope
adcb
insb
push
push
jmp
imul
cmp
outsl
scas
push
or
sub
jecxz
dec
mov
test
ret
getsec
imull
pop
popa
mov
push
sar
stos
lret
nop
pop
jno
cmp
add
shll
xor
cmp
loop
insl
out
jg
mov
adc
fnclex
les
dec
jp
cmc
xchg
ret
pop
stos
inc
ja
mov
mov
or
xchg
lods
inc
aad
adc
jb
xchg
and
sbb
cmp
push
insb
push
add
into
aam
test
mov
shl
loop
xchg
stos
mov
ss
mul
adc
scas
pop
sbb
adc
cmp
stos
inc
in
pop
stc
cmp
xor
out
inc
ret
xchg
daa
addb
jmp
insl
lock
push
mov
testb
pop
cmp
mov
movsl
bound
ret
mov
pop
in
jle
lret
divl
lret
rorb
xchg
movsb
psubsw
sbb
call
in
jae
xchg
and
decb
lret
fists
adc
jb
mov
add
mov
sbb
loope
adc
ja
cmp
or
cmp
adc
rorb
sub
lods
ficoms
ret
dec
cmpsb
lods
pop
sbb
stc
ljmp
mov
xchg
mov
lods
mov
mov
dec
jne
cmp
scas
js
insb
nop
inc
mov
adcl
xchg
mov
jge
inc
sti
mov
mov
dec
cltd
outsl
mov
and
enter
dec
sti
cmc
fbstp
hlt
rcrb
jmp
xchg
lahf
and
loop
jno
gs
lock
test
shl
fs
push
sub
test
sub
mov
pop
mov
jecxz
popa
inc
jns
xorl
xor
in
push
sbb
insb
xchg
mov
or
xchg
ffreep
push
int3
je
and
nop
ret
ds
or
mov
icebp
aam
insb
dec
xor
dec
fcoml
pushf
push
adc
mov
popa
cmp
cmp
adc
fimuls
push
bound
iret
adc
movsl
sbb
mov
sub
mov
xor
imul
mov
adc
xlat
xchg
jnp
cli
and
sbb
sub
scas
cmp
mov
sbb
jg
xor
mov
mov
xchg
lods
icebp
mov
shlb
pushf
fidivs
cwtl
or
or
inc
leave
dec
test
test
std
lret
mulb
adc
fcoms
mov
add
adc
push
mov
repnz
pushf
adc
or
jg
sbb
push
mov
xchg
iret
aaa
xor
jle
arpl
inc
dec
push
aad
jmp
jge
push
movsl
js
mov
xor
outsb
addr16
jbe
ja
pop
mov
popa
add
adc
mov
sbb
das
outsl
add
fst
mov
das
dec
adc
icebp
and
mov
mov
push
pop
adc
sub
xchg
icebp
sbb
fstl
sarb
lcall
adc
inc
push
pop
leave
cmp
lods
mov
daa
ret
jnp
xchg
jno,pn
jae
pop
xor
mov
aaa
or
jne
icebp
mov
insb
test
sub
xlat
or
into
cs
xlat
stos
push
sbb
int
xor
in
shll
adcl
pop
jg
push
lock
fs
or
dec
mov
loope
lcall
inc
lcall
fsubrl
test
bound
xchg
push
imul
les
pop
sub
neg
push
sahf
push
adc
andl
or
popf
mov
insl
push
adcb
pop
sbb
dec
pop
nop
xor
xchg
lock
fdiv
pop
cmp
xchg
mov
int
sub
ret
rorb
jecxz
add
outsl
mov
and
divb
iret
add
ss
ret
ljmp
push
vpshldvd
cmpsl
push
sub
loopne
repz
and
pop
sub
movsb
scas
sbb
daa
mov
fs
fimull
cmc
jecxz
test
and
mov
lret
dec
enter
mov
cmp
pop
mov
cmp
imul
or
fnsave
jo
rol
das
lea
mov
movsb
in
mov
call
add
lcall
mov
jmp
add
movsl
movsl
and
scas
mov
cmp
mov
xchg
rcrl
push
test
dec
mov
inc
mov
xchg
dec
mov
xor
ja
sub
sbb
incl
arpl
pop
cmc
rclb
jmp
jnp
call
rcll
out
cld
cmpsb
sub
cmp
enter
jno
scas
adc
pusha
ljmp
clc
mov
mov
cmc
pop
sbb
cli
int
jne
mov
add
mov
aam
and
shr
xor
lret
in
cwtl
hlt
outsl
fstpl
pusha
xor
pop
outsl
mov
inc
in
push
dec
cld
xchg
push
dec
insb
add
cmpsl
loop
in
mov
mov
pop
dec
push
mov
bound
dec
aas
adc
imul
bnd
out
aam
popf
push
adc
mov
xchg
mov
mov
rcll
aad
lcall
or
test
add
pop
out
out
int
in
std
sub
repz
mov
or
dec
inc
mov
repnz
stc
adc
dec
cld
aas
push
insl
cwtl
mov
loope
lret
mov
insb
std
insl
mov
adc
push
std
xchg
icebp
imul
xchg
stos
mov
aaa
adc
xchg
jge
test
sub
dec
add
rcr
and
addr16
push
iret
dec
scas
out
fidivs
std
mov
add
scas
adc
imul
or
xchg
ret
stc
fdivrs
xor
jbe
push
cmpsb
sub
ds
insb
movsb
std
pop
and
sahf
stc
mov
leave
sub
cwtl
sub
cmp
lahf
mov
in
cmp
mov
test
or
mov
sbb
push
out
dec
es
sub
divl
jo
push
and
adc
insl
adc
xchg
pop
jns
divl
sub
les
loopne
xchg
xor
mov
mul
leave
cld
scas
mov
inc
mov
stos
push
xorb
pop
or
and
xor
loop
mov
or
out
jns
fimuls
in
ja
out
enter
insb
stos
gs
jl
add
into
or
shlb
cs
push
and
jg
mov
pop
mov
mov
push
enter
bound
jmp
std
stos
mov
test
ljmp
test
jbe
insb
rcll
inc
jp
adc
jg
push
cld
dec
pushf
add
orb
or
sahf
inc
movsb
mov
idivl
and
jbe
cld
daa
xchg
and
mov
lods
std
in
sub
lcall
inc
into
aas
clc
mov
out
add
loop
jno
push
add
cmp
movl
cmp
mov
push
pop
and
ds
mov
adc
mov
incl
and
push
and
inc
nop
loopne
jne
into
cmp
and
sbb
mov
mov
sub
push
rolb
das
sbb
imul
push
push
inc
sub
ja
ret
or
adc
popf
jb
cmp
mov
dec
jp
pop
adc
lret
cwtl
xchg
movsl
lods
jae
pushf
rcr
ja
les
jp
push
xor
adc
dec
or
xlat
inc
sbb
inc
stc
push
pop
lock
cs
add
int3
add
mov
arpl
fists
outsl
pop
bound
dec
mov
ja
insb
pop
push
movsb
leave
and
hlt
push
pop
call
add
gs
test
sub
inc
or
pop
daa
push
loopne
add
sbb
pusha
add
mov
stos
xchg
cld
test
dec
aas
push
sbb
jb
and
pop
pop
and
or
leave
dec
mov
mov
lahf
test
jge
jns
mov
cmp
xchg
shrl
popf
daa
nop
jge
jmp
jb
push
add
pop
in
cwtl
push
data16
adc
jmp
push
pop
je
and
push
jecxz
mov
adc
pop
push
setno
dec
jmp
push
mul
nop
sbbl
movd
rorl
mov
movsl
jecxz
outsb
outsb
in
lahf
cmc
in
outsb
and
xchg
pop
notb
pop
add
fldl
out
push
pop
xor
testl
pop
mov
jecxz
mov
push
pop
test
cmp
fmul
sub
scas
call
aas
fdivs
mov
mov
and
div
or
mov
mov
pop
mov
loopne
sbb
dec
xchg
cmpsb
cli
rcl
dec
adc
push
lcall
mov
sbbl
xor
and
push
sub
mov
xor
enter
or
jno
adc
cmp
inc
out
aam
pop
sbb
jne
mov
fs
push
orl
outsl
dec
lea
into
je
lret
sarb
lock
adc
xchg
pusha
push
or
lret
push
popf
adc
movsb
mov
dec
lds
fbld
in
add
insl
cmc
add
mov
ja
imul
cmp
mov
ss
cmpb
pop
pop
push
and
jnp
fstl
pop
xor
dec
cmp
rclb
les
xchg
sub
jle
xchg
mov
mov
mov
js
rclb
fwait
arpl
sbb
in
nop
les
sbb
aad
ljmp
scas
and
outsl
mov
es
ds
lock
ret
push
leave
inc
pop
stc
add
test
test
mov
negb
mov
loop
cmc
popf
adc
leave
outsl
shrb
shll
fld
jbe,pt
mov
popl
xchg
imul
imull
dec
aaa
shll
push
sub
in
dec
testl
push
sub
cmp
movsl
adc
pop
sub
cmp
mov
aad
lret
sbb
test
imul
jae
stc
out
lea
cmpl
aad
jg
leave
push
push
rorl
lods
insb
call
mov
adc
and
push
fucomi
or
push
std
xchg
clc
inc
cmp
xchg
rcrl
and
insl
dec
rcr
mov
and
addr16
and
aas
xor
dec
je
clc
push
jnp
sub
adc
or
aaa
xor
xor
popa
mov
bound
mov
clc
push
xchg
out
adc
or
sbb
cld
jnp
int3
ret
mov
pop
push
andb
sbb
stos
adc
outsb
enter
push
mov
lret
xorb
lcall
inc
sub
or
push
pop
xchg
aam
push
mov
in
lds
mov
adc
jl
fs
sbb
andb
lcall
dec
xchg
pop
into
dec
mov
lds
out
mov
mov
push
insb
inc
cli
arpl
cmpsb
push
out
iret
mov
inc
cmpsb
in
jmp
fsubl
mov
add
pop
sti
cmp
adc
lds
sbb
jp
mov
adc
stc
mov
pop
dec
jb
cmp
sub
pushf
repz
aaa
pop
adc
scas
ja
mov
add
push
push
mov
movsl
adc
loope
stc
jecxz
es
shlb
sbb
popa
sub
test
xor
sbb
adc
das
mov
xor
push
dec
sub
pop
push
imul
out
leave
cmpsb
push
inc
add
std
pop
inc
push
or
fsubr
mov
push
leave
jno
enter
stos
pop
dec
loope
inc
sub
push
adc
andb
or
ss
insl
push
fcomp
repz
hlt
push
test
icebp
mov
lcall
ret
inc
xchg
jne
subl
hlt
ja
push
leave
mov
push
sbb
dec
pop
xchg
je
xor
and
sub
jmp
pop
sub
adc
push
cmpsl
js
xchg
cmp
inc
inc
inc
popf
inc
xor
fnsave
test
ret
jmp
xor
jge
jl
test
popa
mov
outsb
push
jb
pop
sub
pusha
pop
in
pop
mov
dec
xchg
mov
push
pop
push
mov
mov
mov
dec
out
adc
push
mov
dec
ja
std
jle
movsb
lock
sbb
negl
repz
pusha
subl
aaa
mov
out
inc
push
add
loopne
jp
sahf
jb
shrb
shll
push
and
ds
xchg
push
lds
or
stc
mov
imul
xor
sub
mov
jbe
fs
data16
push
dec
gs
jmp
mov
sub
jle
mov
dec
mov
and
mov
pushf
jnp
mov
cwtl
ret
movsb
push
jle
fwait
ret
sub
push
stc
sbb
lods
cs
addr16
or
stos
pop
xor
popf
lret
pop
cmc
pop
pusha
add
shlb
push
push
pop
iret
dec
sbb
fmuls
test
push
movsb
add
enter
sarb
xchg
mov
incl
rclb
and
int3
sbb
add
and
pop
icebp
cmp
fcompl
ret
popf
xchg
scas
aam
test
push
jg
fsts
jns
jno
inc
mov
mov
loope
sub
cmpl
xchg
and
repz
xchg
ficoms
ljmp
out
sti
jp
shrb
shlb
sbb
test
inc
test
xchg
adc
jnp
or
xor
notb
ja
mov
enter
cmp
xchg
push
sub
jo
mov
adc
outsb
mov
jge
int3
mov
hlt
out
sahf
adc
imulb
cld
mov
inc
loop
mov
mov
lret
shrb
and
sub
lea
arpl
sub
jns
shrb
unpckhps
push
int
sub
cltd
sub
xchg
or
inc
adc
xchg
mov
xchg
mov
iret
sbb
add
xor
jbe
dec
inc
pop
push
mov
fists
rorl
push
cmp
pop
fsub
scas
insb
mov
xchg
push
jl
in
pop
adc
movsl
push
cmp
push
jl
or
lds
push
cmp
push
add
add
stos
stos
jle
lahf
fcoml
mov
data16
aas
lock
push
lret
adc
dec
push
dec
xchg
adcl
hlt
push
lock
out
lcall
int
jns
sub
in
scas
rcrl
and
xchg
push
pop
cli
xor
jno
jge
fmul
jb
push
lods
sbb
dec
jmp
hlt
mov
mov
push
aam
add
dec
repz
add
ss
outsl
mov
push
xchg
rcr
arpl
xchg
and
pop
insb
into
sahf
out
lods
repnz
add
iret
jl
ja
mov
pop
jecxz
jno
pop
lods
mov
mov
stos
mov
inc
int3
aas
mov
pop
shll
dec
sbb
pop
into
jnp
sub
jg
jl
or
inc
mov
sbb
enter
shrl
xchg
fwait
lret
push
cwtl
or
cmpsl
xchg
add
push
sub
cmpsl
cvtdq2ps
aad
cmpsl
dec
push
jp
xchg
ss
mov
xlat
ret
pop
sbb
fsts
mov
scas
and
icebp
sti
faddp
mov
cmp
sbb
mull
xchg
cs
and
push
push
xor
popf
jne
outsl
dec
jnp
lcall
jle
sub
jp
ds
les
fbld
mov
adc
pop
out
inc
ljmp
ja
xchg
mov
ljmp
rol
outsl
cli
adc
arpl
adc
mov
daa
daa
test
loop
lods
in
pop
adcb
jmp
jnp
mov
imul
xor
cltd
ret
pop
fsts
cmp
nop
jge
mov
jle
jg
push
dec
cmp
in
lcall
in
jb
std
sub
loop
cmp
sub
xchg
shll
sbb
out
rorb
jnp
jle
test
faddl
pop
pushf
rcrb
test
in
mov
jg
mov
xor
mov
popf
out
jne
dec
push
lret
push
sub
mov
inc
daa
or
pop
dec
pop
loopne
lcall
xorl
jecxz
and
push
inc
int
hlt
dec
sti
hlt
sub
jo
push
or
outsb
mov
xor
push
insb
rorl
ss
mov
cmp
sub
pop
sti
push
gs
popa
push
shlb
in
sub
dec
movsb
mulb
fldl
mov
mov
addr16
out
lcall
cmp
dec
mov
or
cmc
ret
jbe
add
lods
das
ret
shll
sub
pushf
cli
push
jbe
xor
ja
ljmp
jbe
xor
dec
xchg
int3
mov
lcall
mov
mov
jmp
xor
cmc
pop
xchg
sbb
repz
jp
xchg
fs
pop
pop
xchg
adc
ja
jns
fldl
adc
test
sub
cmp
je
xchg
sub
fldln2
inc
test
push
push
mov
out
cmp
or
mov
adc
sahf
pop
jb
mov
and
mov
pop
je
xchg
leave
add
ret
aam
insb
adcl
cmp
mov
add
mov
div
lds
mov
int3
add
pushf
insb
sbb
mov
pop
mov
mov
cmp
pop
popa
bound
sbb
xor
inc
jp
scas
jns
xchg
lret
lods
test
in
sbb
jmp
mov
jecxz
out
xchg
aaa
sub
movsb
mov
in
adc
sub
mov
mov
sahf
add
movsl
and
movsb
jg
repnz
push
ljmp
lcall
sub
adc
jl
cmpsl
pop
push
mov
mov
nop
push
jb
xchg
and
xchg
sbb
gs
repz
xor
ficompl
push
mov
add
loope
or
cwtl
push
vphaddubd
sbb
movsl
xchg
xlat
mov
mov
add
inc
mov
mov
in
add
mov
jbe
iret
xor
push
imul
xchg
xchg
fs
test
cmp
insl
sbbb
cmc
fucomp
dec
sbb
bnd
dec
xchg
cwtl
sbb
pop
out
dec
mov
frstor
jmp
sbbb
adc
fbld
cmpsl
pop
sti
divb
jne
pop
dec
test
sar
ds
int
mov
cmpsb
dec
and
inc
cmp
push
cmp
pop
jge
xor
and
adc
hlt
out
mov
mov
lcall
lock
add
pop
jg
mov
pushf
jmp
xchg
mov
outsl
je
cmp
mov
cmp
or
fbld
insl
punpcklbw
mov
cld
in
das
jmp
daa
xchg
hlt
cwtl
out
adc
add
leave
out
fs
mov
inc
add
sub
in
xorl
fs
xor
cmp
or
or
inc
ja
fsub
inc
arpl
lret
js
dec
jnp
mov
add
jbe
add
clc
outsl
xchg
imul
dec
jl
fs
mov
into
lea
jb
repz
loop
scas
add
les
dec
negl
or
mov
fcoml
inc
xchg
mov
xor
js
push
jbe
push
push
add
arpl
repnz
cmpsl
adc
iret
mov
adc
pop
iret
mov
das
xchg
push
out
mov
adcl
nop
insb
xor
mov
xlat
add
sbb
mov
inc
loopne
mov
push
xchg
push
out
jg
xor
out
adc
aaa
icebp
mov
mov
mov
sarl
xor
mov
aad
xchg
push
mov
scas
mov
xlat
mov
jne
lcall
or
and
mov
sbb
push
mov
sbb
pusha
loop
cmp
dec
xorb
in
daa
xor
jge
sub
sub
test
pop
or
dec
or
xor
mov
shll
adc
or
int
xchg
adc
dec
movsl
sbb
push
push
test
gs
add
lea
arpl
add
and
mov
pop
mull
jp
test
push
or
xor
add
jo
fsubr
mov
sbb
cwtl
lahf
or
jae
push
pop
cmc
jbe
pop
hlt
jnp
fbstp
adc
cmc
adc
je
adc
and
or
mov
mov
xor
xchg
push
lds
popa
and
ret
stc
cmp
dec
rorl
jmp
loop
loopne
mov
pusha
xchg
lahf
inc
adc
xor
ret
inc
rorl
jmp
mov
jb
sti
ss
push
insb
mov
pop
arpl
mov
test
lret
dec
je
mov
xchg
sub
rolb
mov
int3
mov
andl
pop
mov
test
lock
add
aad
pop
mov
test
pop
out
xchg
jle
sbb
int3
add
or
gs
lret
clc
xor
mov
pusha
mov
sub
subb
mov
push
orb
adc
jno
jmp
adc
test
cmp
std
fincstp
mov
mov
test
add
or
arpl
das
pop
pop
pop
bound
sub
call
loope
hlt
out
or
sbbb
sbb
inc
fidivrl
xchg
lahf
cltd
aam
mov
mov
jns
jge
pop
mov
or
outsb
dec
out
adc
adc
dec
cs
test
shlb
and
fiaddl
fisttpl
jp
test
div
shl
inc
mov
fmuls
mov
sub
adc
arpl
and
inc
and
push
sahf
ret
and
push
xchg
cmpsb
outsl
xor
lret
dec
mov
pop
mov
cmpb
jg
stos
mulb
sbb
jmp
enter
adc
mov
clc
mov
jne
jmp
push
lcall
inc
dec
movsb
sub
mov
push
and
nop
filds
testb
sub
shlb
fdivrs
lret
lahf
mov
leave
jmp
xor
mov
popf
mov
inc
xchg
jmp
les
repz
mov
sub
xor
repnz
and
push
sub
mov
sbb
pop
pop
push
xor
mov
mov
jl
fidivrs
xchg
icebp
dec
pop
insb
cs
std
sub
jp
into
cmpsb
add
sub
fwait
xor
push
push
rcll
repz
xchg
fidivl
das
iret
pop
loope
jecxz
leave
mov
cmpsl
pop
push
stos
aad
leave
mov
xlat
mov
sbb
leave
xor
push
and
insl
icebp
mov
cs
nop
add
dec
scas
xlat
icebp
jl
insl
xchg
xor
sbb
lods
xor
lods
push
adc
ss
and
mov
in
push
xchg
lods
out
dec
pop
jecxz
pop
push
aaa
jecxz
xchg
xchg
call
jb
fs
pextrw
ss
dec
rorb
iret
or
popf
jo
scas
mov
out
mov
pop
sbb
fwait
aaa
mov
xor
lcall
sbb
push
mov
rcrb
scas
pop
inc
mov
adc
add
push
cs
pop
aas
cmp
xchg
stos
mov
push
push
pop
pop
dec
mov
push
clc
xchg
pushf
xchg
adc
sbb
mov
adc
add
mov
arpl
cmpsl
fwait
and
jmp
jmp
mov
push
sahf
and
add
and
out
lcall
xor
mov
faddl
pop
mov
cmp
xor
or
sbb
dec
jno
cs
mov
mov
add
sbb
mov
aam
ljmp
or
outsb
imul
cmpsb
mov
xchg
mov
mov
or
lods
sar
aam
test
pop
lock
out
add
and
add
pop
ljmp
cmp
xlat
jmp
add
and
xchg
aas
sahf
andl
sbb
outsl
popa
popf
cmc
or
xchg
aas
cli
mov
or
imul
sub
mov
adc
add
xchg
test
jl
cmp
sub
pushl
xchg
sti
mov
lcall
sub
lcall
cmp
cltd
shll
mov
jns
les
faddl
cmp
mov
aad
sbb
lea
mov
jns
inc
enter
add
xor
pop
sahf
jbe
in
cmpsb
pop
or
jne
jmp
cmp
test
mov
jge
sahf
test
pop
xchg
lods
dec
pop
pop
mov
aaa
cli
push
notl
outsb
xchg
movsl
dec
and
stos
fmull
call
mov
jb
inc
xor
out
insb
movsl
mov
add
je
shll
pop
push
xor
xchg
mov
jl
inc
xor
ljmp
stc
nop
mov
jp
out
into
adc
cmpsb
lea
or
test
mov
adc
faddl
xor
fcomip
pop
outsl
mov
mov
insb
dec
outsb
outsb
fidivs
adc
stc
imul
das
and
test
sbb
xchg
push
psllq
orb
mov
push
xor
lret
and
jecxz
aam
dec
cmp
xor
mov
xor
insb
pushf
test
cmp
pop
stos
fistpl
mov
in
sbb
or
insl
int3
aad
mov
bound
mov
xchg
inc
sbb
pop
shlb
xchg
mov
btr
out
pop
xor
stos
sub
pop
cmc
int
test
rcrb
sarb
daa
bound
lea
loope
aam
insb
lahf
add
or
fidivs
push
movsl
jmp
imul
rol
adc
leave
stos
pusha
jmp
mov
stos
push
stc
jmp
sti
inc
enter
out
dec
insb
rol
lahf
leave
mov
adc
pop
cwtl
cmp
xor
mov
inc
das
fbld
xchg
aad
stos
lahf
add
push
sbb
dec
es
push
mov
xor
stc
loop
sbb
push
or
rclb
pop
imul
cmc
ds
adc
pop
pop
push
mov
sbb
push
mov
mov
fsubr
push
inc
dec
popf
mov
and
push
sub
cld
adc
pop
lea
cwtl
loope
push
and
and
loopne
popf
dec
das
and
cs
dec
testl
daa
sub
xor
mov
pop
pop
mov
imul
pop
add
inc
aas
mov
movsb
fisttpl
cmp
push
xor
jp
clc
test
je
out
cmp
mov
adc
mov
negb
cmp
lods
jmp
and
ljmp
mov
or
pusha
pop
pop
test
arpl
mov
adc
adc
aaa
sbb
and
js
xchg
stos
pop
jbe
ficoms
ffree
add
jno
mov
jle
repnz
push
testl
mov
andl
mov
sbb
stc
sbb
cs
xor
sarl
jp
and
fimuls
movsl
sahf
loope
les
pop
xor
mov
adcb
test
jns
push
inc
cltd
inc
push
cmovb
push
sahf
pop
push
jge
daa
jb
stos
fldcw
sub
fsub
imul
add
xchg
jae
popf
es
call
xchg
inc
cmc
pop
lea
lea
adc
dec
jle
sub
mov
jnp
popw
xchg
push
hlt
ret
loope
ret
jae
lea
pop
dec
push
int
push
mov
lahf
push
lahf
cs
test
lcall
mov
aam
add
movsl
clc
and
jns
repnz
sbbl
xchg
push
mov
arpl
mov
hlt
notb
dec
orl
mov
cmp
xor
add
push
inc
rolb
inc
jecxz
pop
shll
int
fistpl
mov
mov
rclb
mov
adc
mov
rorl
mov
shlb
scas
scas
test
xchg
add
cli
or
jg
and
ds
jne
xchg
mov
cmp
shll
test
or
in
jno
jb
or
loop
inc
mov
lahf
cs
loopne
cli
xchg
mov
lea
mov
mov
test
sbb
pop
push
shr
call
mov
push
icebp
mov
cs
repz
flds
in
xchg
enter
fisubl
ficomps
push
cmp
hlt
mov
push
pop
or
clc
pop
ss
cwtl
cltd
inc
mov
cmp
lods
sub
mov
jle
pop
ljmp
es
adc
imul
loopne
into
mov
into
out
xchg
lock
add
pop
sbb
popf
add
mov
mov
je
adc
and
mov
shl
cmp
adc
gs
pop
jg
test
je
cmp
jl
addl
gs
sub
jb
and
or
stc
cmp
add
mov
idiv
enter
pushf
sti
jb
add
push
mov
stc
in
mov
jle
rorl
clc
sbb
faddp
jle
clc
inc
popf
inc
test
loopne
lods
stos
in
idivl
mov
mov
jb
xlat
ljmp
xchg
push
push
mov
mov
cmpsb
aam
mov
das
add
and
ficoml
and
aaa
push
mov
es
adc
pop
adc
sbb
and
mov
jge
add
hlt
pop
dec
push
cli
mov
cmp
push
adc
pop
cwtl
sbb
or
pop
gs
xorl
and
rclb
lahf
lret
pushf
fsub
enter
adc
xchg
int3
sbb
ja
cmpsb
mov
pop
arpl
push
and
mov
jae
cmp
ss
icebp
fisttps
xor
sahf
xchg
lahf
dec
js
jne
daa
pop
mov
xchg
addl
lret
xchg
icebp
and
outsl
xor
push
mov
leave
sub
testb
sub
jne
mov
inc
xor
imul
push
pop
cld
pop
mov
cmpsb
jb
imulb
jge
mov
roll
pop
jnp
cmp
cmp
clc
inc
subl
sbb
lock
mov
mov
xor
pop
shrb
stos
push
sbb
xor
int
fcmove
xchg
in
or
mov
xchg
jl
sarb
cmp
inc
pop
clc
inc
loopne
data16
lods
fs
sahf
inc
jnp
sub
add
sub
inc
into
imul
cmc
jmp
jmp
fisubl
push
push
pop
daa
add
mov
stc
add
dec
xor
stos
inc
aad
xchg
dec
nop
jns
jbe
cmp
call
in
lock
cmp
xchg
mov
stos
sub
lods
jb
adc
add
jae
mov
pushf
pop
mov
add
xor
pop
pop
add
subb
aad
dec
cmpsb
rcrb
pop
roll
pushf
and
jne
cmp
pop
pop
lods
mov
out
lcall
mov
das
push
jmp
adc
inc
xchg
xor
test
sbb
sbb
je
push
xor
hlt
inc
and
add
movsb
cs
or
in
int3
test
ja
push
call
xor
push
inc
push
cmc
xchg
adcl
cli
mov
lea
sub
ds
mov
pop
sbb
dec
dec
or
xchg
out
xchg
ret
mov
movsb
test
test
lcall
sbb
cmp
outsl
or
xor
jl
pop
xchg
mov
lcall
arpl
adc
orb
jge
sahf
mov
mov
fcompl
jge
pop
jg
jb
repz
pop
out
cltd
mov
test
je
sub
pop
xchg
and
or
gs
xor
xor
imul
mov
jmp
cmpl
enter
pop
and
shlb
sbb
add
nopl
cs
sub
jae
es
pushf
outsb
and
orb
fwait
addr16
xchg
aam
icebp
out
iret
dec
xor
push
push
dec
and
iret
or
out
sub
xor
ret
jb
mov
jmp
or
or
std
pop
out
jl
int3
rcl
sbb
popa
or
jae
ds
inc
dec
mov
mov
jl
cmp
cmp
shrl
loop
hlt
push
dec
loop
fisubrs
push
xchg
add
adc
mov
and
and
dec
cmp
push
fstp
push
lret
into
cltd
inc
shlb
xchg
and
push
popa
or
mulb
shlb
fdivrs
jg
fcoml
jg
out
cmp
pop
loope
xlat
inc
or
int
dec
popa
jmp
add
stc
adc
fisubl
jne
ja
mov
add
jle
dec
movsl
inc
fisubs
or
jle
cmp
pop
popf
adc
stos
adc
hlt
arpl
lcall
arpl
fldcw
or
js
int3
sbb
sub
inc
jl
fs
loope
inc
jae
cs
mov
vcmpss
neg
mov
lea
sbb
fpatan
adc
adc
mov
mov
jno
jg
jns
cmp
pop
imulb
and
cmpsl
enter
pop
cmp
push
jb
rcrb
mov
fcomps
push
xchg
dec
cmp
add
mov
lret
loop
ss
stos
cmpsb
into
xchg
rorb
sbb
call
dec
fisubrs
mov
jmp
shrl
pusha
mov
or
outsb
and
dec
add
icebp
lock
push
pop
push
or
dec
sti
jnp
mov
mov
loop
loopne
jecxz
push
hlt
fisttpl
stc
lock
ret
lds
add
push
test
xor
mov
pop
sarb
cld
jl
xchg
mov
mov
sub
cmp
ss
imul
mov
or
test
xchg
mov
and
call
imul
das
mov
inc
push
dec
daa
cmp
xor
bound
das
pop
mov
insb
xchg
and
outsl
negb
lret
jbe
or
es
test
int3
jbe
dec
add
hlt
rorb
fcomps
pusha
cmc
cmp
adc
push
mov
aad
pop
popf
or
cmp
lods
sub
fadds
dec
jo
or
fdivrl
cmp
sub
inc
movsl
xorl
es
test
cltd
mov
push
cld
mov
lret
bound
xor
xchg
sahf
push
push
bound
enter
mov
or
clc
imul
jnp
rclb
mov
cmp
and
out
mov
pop
pop
sbb
les
push
push
icebp
shl
stc
lret
add
fstpt
cli
fcompl
stc
mov
xchg
xchg
mov
jecxz
dec
xor
data16
subl
sbb
lock
push
pop
add
add
xchg
cld
push
jg
shrb
pop
inc
jbe
sbb
xor
xchg
insb
cmp
sub
mov
fwait
pop
xor
mov
mov
cmp
adc
xchg
xor
pop
in
test
sub
cs
mov
pop
sarb
xor
jl
adc
mov
inc
int
sub
and
push
loop
mov
push
lret
mov
add
rolb
cmp
lcall
cmp
add
lods
jne
pop
lret
xor
sub
mov
jne
leave
inc
cwtl
or
mov
xchg
jmp
fidivrs
imul
push
ret
or
aas
dec
out
mov
jecxz
cs
daa
inc
shrb
fwait
stos
fs
xlat
jae
outsb
xor
cmc
jbe
imul
cmp
or
inc
pop
fildll
cmpsb
int3
sub
and
push
popf
outsb
rcr
mov
in
lcall
push
pop
or
xchg
data16
jl
pushf
and
out
xchg
or
and
and
push
shl
sbb
dec
cmc
fs
ficompl
mov
in
jne
sbb
mov
arpl
popa
xor
das
imul
mov
pop
jno
mov
jbe
jbe
or
pop
mov
cmc
stos
fists
outsb
push
in
mov
jnp
mov
or
stos
xorb
stos
es
rcrl
and
cmpsb
push
push
les
sbb
mov
xor
arpl
pop
lahf
int3
repz
and
mov
aas
push
jmp
out
mov
in
jp
aam
movsb
dec
outsb
movsb
add
push
add
jle
jae
nop
sarl
xchg
into
out
or
fucomip
xor
dec
mov
imul
bound
xlat
subl
push
daa
push
movsb
and
fildl
int3
fidivrl
mov
jmp
pop
add
enter
insb
hlt
xchg
cli
dec
sbbl
clc
push
push
sub
and
enter
mov
and
cli
adc
sbb
cmp
sub
mov
inc
mov
mov
fsubs
rclb
sub
ret
adc
pop
std
mov
pop
pop
xchg
mov
test
xor
ret
out
daa
or
add
or
xchg
mov
mov
xchg
jmp
sub
adc
cmp
divb
inc
out
aad
mov
mov
mul
aad
mov
lahf
push
in
pop
jne
cmp
mull
int
push
inc
nop
mov
inc
dec
inc
lock
lods
fsubp
xchg
jle
lcall
mov
mov
push
scas
test
pop
jo
mov
insb
xlat
push
out
sbb
loope
iret
ss
sbb
aaa
sub
dec
cli
inc
test
mov
pusha
and
sub
push
pop
mov
cwtl
and
or
notb
pushf
adc
shll
jnp
test
add
push
nop
popf
dec
cmpsl
sahf
movsb
pop
ss
cld
fidivrl
and
and
mov
sti
mov
dec
lcall
inc
add
xchg
xchg
fidivs
mov
mov
mov
outsl
outsl
out
jg
vmread
xchg
cld
sub
rcrb
jbe
push
sub
mov
cmp
cmp
mov
xchg
movsl
adc
mov
cmp
cmpsl
das
aam
xchg
cmpsl
mov
mov
mov
add
pop
add
mov
cmpl
push
and
jno
mov
mov
sbb
mov
ret
xor
add
jb
insl
addr16
mov
mov
push
pop
stos
rorl
aam
rorb
add
cld
xchg
imulb
fs
hlt
sahf
mov
push
and
mov
and
cmp
mov
adc
adc
cmp
sbbl
and
pop
cmc
add
loopne
jp
fiadds
jge
sbb
test
jno
push
mov
ds
shlb
push
ja
inc
add
jmp
and
push
mov
loop
jae
popa
xor
pop
ret
and
loope
jge
repnz
test
popa
add
lock
std
loopne
adc
fwait
imul
dec
xchg
xchg
dec
fisttps
sub
mov
sub
scas
mov
loopne
js
stos
dec
push
addl
jo
inc
outsl
jmp
add
insl
aad
cmp
ficoms
and
test
jle
xchg
stos
in
xor
xchg
pusha
xchg
fidivl
cmp
jno
lcall
imull
sbb
cmpsb
mov
pop
pop
dec
or
add
mov
push
mov
cmp
enter
mov
sahf
cmc
int
push
out
adc
and
mov
cli
xchg
cmpsl
push
and
out
inc
lods
push
lcall
push
lods
shl
add
sub
leave
inc
and
dec
push
dec
adc
xchg
call
pusha
xor
call
sub
or
or
in
es
sub
ret
mov
arpl
xchg
or
dec
ret
dec
dec
jb
pop
rcrl
add
fiadds
mov
test
jecxz
or
xchg
aaa
sub
ret
xchg
inc
jo
adcl
pop
mov
mov
cmp
roll
and
int
xor
or
hlt
inc
repnz
mov
push
xlat
jbe
aam
mov
and
push
addr16
inc
mov
sub
push
or
int
aam
daa
insl
push
dec
jge
aad
and
aam
repnz
scas
ds
jne
or
loopne
jge
ja
das
adc
inc
clc
imul
xor
push
sbb
mov
or
xchg
enter
xlat
ss
les
pop
pop
inc
cwtl
sub
in
outsb
pop
xor
arpl
push
ret
jecxz
jb
mov
jmp
ljmp
ds
sahf
push
rcr
lods
pusha
or
test
lret
or
and
das
aaa
pop
addb
test
pop
inc
pop
mov
jnp
cld
mov
loopne
jecxz
mov
sub
xlat
cli
push
ja
and
pusha
mov
adc
loopne
out
js
in
mov
add
xor
jg
push
mov
jno
mov
add
or
pop
in
out
mov
inc
les
sub
push
jns
sahf
stos
push
sub
movsb
adc
jo
sub
mov
out
push
xchg
add
mov
jmp
nop
insb
rorl
ja
sbb
test
push
push
stc
in
scas
push
adc
pop
pop
in
insl
sbb
push
ret
mov
mov
jecxz
pop
cltd
xor
mov
pop
inc
xchg
or
sarl
sbb
filds
out
insl
inc
jo
sbb
push
sub
jo
call
ja
aas
inc
mov
lods
pop
lret
lds
sbb
addr16
jp
outsb
jnp
cmp
sbb
iret
mov
pop
xor
and
dec
or
lds
cli
mov
sub
add
jns
mov
jnp
adc
stos
cmpsb
mov
dec
clc
adc
cmp
adc
push
enter
jno
std
sti
pop
mov
cli
lods
aas
and
jmp
scas
or
gs
outsl
test
mov
and
lods
jnp
loop
sbb
xchg
movsb
fiadds
and
inc
jecxz
push
pop
pop
xor
jae
push
add
jl
jl
ljmp
xchg
sti
mov
cld
xor
xor
mov
movntq
shll
in
int3
out
lcall
bound
dec
out
push
cltd
dec
fsubl
sbb
loop
jmp
jl
ja
mov
dec
sbb
test
xor
and
loope
mov
popf
or
mov
cmpsb
jp
outsb
dec
mov
ja
hlt
mov
pop
adc
jl
mov
sub
sub
push
jne
sbb
or
jl
sub
jmp
movsl
jle
jp
xchg
cmpb
repnz
push
mov
scas
xchg
divb
psllw
push
dec
lea
push
mov
mov
and
mov
dec
sbb
pop
sub
decl
lds
push
das
or
inc
sahf
popa
lods
dec
js
inc
sub
sbb
or
iret
mov
mov
inc
negl
inc
cmpsb
cmc
and
jg
loope
mov
or
loope
cld
popa
xchg
fcomps
inc
in
in
test
mov
ds
dec
xorb
aas
scas
and
or
jmp
xor
xor
dec
sbb
femms
out
adc
lods
aad
push
mov
lret
inc
cli
int3
add
lods
jno
pop
sub
dec
lds
jnp
add
enter
sbb
rclb
or
pop
iret
adc
insl
cli
fcomi
hlt
nop
cmp
sub
std
testl
jns
ret
jge
inc
jb
xchg
mov
pusha
lret
out
subb
addl
pop
mov
mov
push
push
hlt
push
mov
xor
jne
sub
sub
push
faddp
adc
pusha
mov
xchg
dec
jecxz
mov
pop
in
fs
xchg
loope
pop
xor
retw
xchg
test
xor
out
mov
jmp
cmp
ja
inc
stos
dec
add
enter
jmp
xchg
fs
push
adc
push
xchg
dec
mov
inc
ljmp
addr16
scas
movsl
int3
cli
push
lock
mov
jl
xchg
roll
jecxz
cltd
jne
lret
test
mov
jns
aaa
cmpb
pushf
movsb
js
or
mov
or
inc
imulb
xor
jmp
lods
aaa
sbb
imul
arpl
repnz
and
scas
sub
xchg
pop
or
addr16
pop
dec
into
lock
shr
fldt
stc
mov
push
fimuls
jnp
lret
int3
cmp
dec
jle
push
push
popa
popa
fdivs
mov
roll
inc
lahf
dec
cs
jb
fildl
bound
sbbb
fwait
and
test
xor
addr16
mov
out
pop
cmpsb
jmp
xor
sub
jbe
scas
jnp
inc
lock
inc
cmp
xlat
loope
fidivs
mov
es
push
imul
xchg
dec
std
sub
pop
std
arpl
xchg
aad
jecxz
mov
aad
or
xchg
test
or
and
and
lock
sub
int
push
adc
and
dec
cmp
dec
ret
cmp
icebp
lods
test
or
gs
fmull
fistl
fisttps
and
or
les
sahf
mov
xchg
xchg
push
test
test
jmp
mov
inc
pop
and
xchg
push
hlt
sbb
cmp
outsl
adc
or
icebp
lds
push
mov
rcrl
xor
loop
movq
lret
testb
adc
xor
cmp
add
dec
pop
inc
out
je
and
rol
js
cmp
shl
out
push
out
add
bound
out
or
inc
sbb
xlat
sub
daa
cld
fwait
inc
sbb
push
mov
rcll
lcall
mov
and
add
lea
mov
jp
in
mov
xor
sub
ja
mov
leave
ja
fnstcw
ljmp
adc
cmp
mov
ret
ljmp
mov
scas
iret
dec
notl
repz
inc
jo
enter
push
sbb
fadds
dec
inc
mov
inc
and
jmp
jnp
jmp
mov
adc
mov
push
inc
cmpsl
repz
xchg
adc
jmp
and
xchg
adc
cmp
and
aaa
aas
push
mov
inc
popa
ljmp
cmp
lods
fnstcw
or
mov
inc
dec
lock
push
iret
pop
inc
and
jp
ffree
lock
loopne
popf
shll
aam
test
push
and
gs
xchg
push
push
loop
fcmovnu
or
frstor
adc
cli
fs
or
in
push
jmp
xchg
pop
xor
fistpll
cmc
imul
dec
and
fcmovb
mov
test
jb
adc
fs
adc
mov
mov
cmp
or
mov
shrl
mov
push
int3
xchg
push
jmp
out
jo
imul
pop
jmp
pop
add
call
pcmpgtw
push
and
sub
mov
xchg
sbb
in
push
orb
mov
inc
add
out
movsb
repz
jmp
loope
jge
push
jecxz
pop
or
pop
dec
loopne
adc
repz
and
or
cs
inc
stc
push
loopne
movsb
pop
lret
jnp
mov
lods
cmpsb
mov
push
inc
sarl
test
ret
and
mov
push
jecxz
cmpsb
mov
fimuls
test
ret
jb
xor
dec
xchg
xor
jae
iret
scas
inc
orb
cmp
addb
out
adc
jle
in
lret
xchg
std
pop
mov
sarl
xchg
pushf
jb
mov
mov
xchg
fsub
lock
add
push
dec
nop
xchg
mov
orb
or
inc
mov
xchg
push
pop
sahf
movsb
jg
sub
mov
cmp
popa
push
out
gs
cmp
ficoml
cmpsb
cmpsb
jbe
test
rcl
and
arpl
subl
add
cmp
add
mov
pop
lcall
fwait
xor
loopne
cmp
cmc
xor
pushf
pop
mov
das
movsl
mov
icebp
fucomip
mov
push
ficomps
pop
push
cmp
insl
dec
adc
cmc
insb
movsb
mov
loopne
pop
cmpsb
loope
sub
out
in
dec
pop
pop
lret
cmp
into
jnp
ror
test
pushf
cmpsb
roll
add
scas
fiaddl
outsl
sub
dec
movsl
pop
fsubs
jge
inc
cmp
cli
repnz
jge
cmpsb
jns
jb
inc
arpl
cltd
dec
dec
testb
aaa
ret
imul
pop
leave
and
and
jmp
sahf
pop
pop
insb
xchg
pushf
add
popf
arpl
imul
movsb
sbb
repz
sub
in
push
sub
das
sti
test
or
lock
push
lcall
jno
jne
jae
aas
mov
push
in
adc
inc
xor
mov
sbb
iret
push
jp
mulb
and
adc
divl
and
loop
jecxz
mov
push
ficoml
imul
rolb
je
ficomps
dec
sub
sbb
pop
frstor
and
dec
hlt
movsb
inc
jae
push
sub
sbb
jnp
icebp
dec
sub
stos
cmp
vpshaw
js
pop
xchg
dec
mov
xchg
fwait
cwtl
adc
push
lds
in
addr16
insl
scas
test
adc
lods
jg
xchg
shll
je
rcl
ret
scas
xchg
cld
lods
stc
cmp
or
orb
pusha
mov
push
or
iret
add
jl
xorl
and
add
lahf
or
les
scas
cmp
add
mov
mov
out
or
in
push
xor
jbe
adc
adc
dec
roll
xchg
push
loopne
jo
pushf
out
outsl
xor
pop
rorl
orl
or
mov
test
sbb
lahf
imul
daa
jecxz
dec
stos
pop
imul
push
sbb
sub
and
xor
inc
jl
pop
mov
mov
mov
jecxz
adc
mov
imulb
popa
add
mov
incl
iret
das
push
sti
xor
lret
movnti
add
fistpll
cli
nop
add
inc
push
clc
rorb
out
push
xor
sub
into
jge
xor
push
xor
jg
inc
adc
inc
mov
popf
lods
sub
and
add
pop
test
cmp
loopne
les
aad
nop
jecxz
pextrw
sub
in
push
loope
pop
jno
ljmp
lcall
stc
rcrl
mov
incb
xor
mov
jne
add
enter
dec
push
ja
popf
aam
lcall
das
in
fucom
cli
sbb
mov
cli
adc
test
xchg
mov
mov
adc
xchg
stos
mov
stos
dec
fimull
clc
cwtl
jns
dec
push
inc
jmp
pop
mov
inc
mulb
cs
jb
mov
sbb
mov
fmull
andb
scas
push
mov
or
mov
mov
stos
push
cltd
mov
sub
add
mov
or
or
mov
in
push
jg
mov
sub
xor
lea
or
std
rcr
pushf
inc
mov
add
ss
mov
into
pop
es
les
cmp
or
ljmp
faddp
aas
add
or
pop
inc
and
mov
inc
adc
pop
aam
loopne
repz
pop
push
out
stc
adc
cs
mov
sub
das
mov
lret
mov
je
adc
jns
push
movsb
mov
or
dec
movsb
and
mov
lret
jmp
mov
lcall
dec
fnstcw
jns
xor
mov
pop
adc
ret
add
and
lds
lret
xor
sbb
mov
das
mov
and
fldcw
mov
cltd
xchg
sub
cmp
or
and
loopne
xor
stc
movsb
jns
mov
pop
sbb
in
mov
push
or
popf
jbe
and
addr16
sbb
pop
out
mov
pushf
jp
pop
jmp
jnp
imul
sub
std
jg
push
xchg
shlb
sbb
jns
imul
xchg
add
dec
in
mov
mov
or
mov
test
jge
pop
inc
cmp
call
push
mov
jmp
out
adc
sub
inc
add
pop
inc
xor
cmp
ds
dec
cltd
movsl
je
std
loop
mov
add
inc
inc
add
outsb
mov
mov
push
stos
push
xor
sti
and
mov
leave
mov
bound
cltd
addr16
xchg
mov
add
vpsraw
sub
es
out
jecxz
and
cld
not
cmp
jle
gs
rep
les
inc
sti
sub
das
pop
movsl
mov
push
sub
ljmp
jae
dec
lahf
outsb
mov
fucomp
imull
stos
lea
mov
fwait
lods
xchg
inc
pop
sbb
ds
sbb
sti
rcll
mov
xor
sbb
inc
clc
in
pop
mov
pusha
pop
out
shl
cmp
and
mov
jns
mov
push
in
add
ja
dec
rclb
shll
es
pop
jl
call
push
call
and
adc
jo
jnp
jecxz
sub
ficompl
mov
insl
jge
xor
xchg
or
fildll
shlb
sbb
xchg
mov
xchg
or
sahf
mov
xor
sar
cmp
lcall
das
lods
rorb
orb
dec
js
loopne
push
push
sbb
xchg
dec
addr16
push
push
movsl
push
stc
push
pusha
mov
das
sbb
sahf
pop
data16
mov
stc
into
jecxz
add
sahf
xchg
nop
in
cmp
notl
inc
push
gs
push
push
sbb
xchg
cmp
out
push
push
xor
and
mov
cli
in
push
jnp
pushf
inc
xchg
cmpsb
hlt
or
cltd
fwait
mov
pop
inc
and
add
mov
jnp
dec
add
or
mov
or
lret
cmp
dec
and
pop
or
loopne
xchg
jae
js
nop
pop
ja
inc
in
fstpt
lds
sbb
lahf
es
test
xor
ss
mov
dec
dec
daa
or
fwait
mov
pop
std
xlat
arpl
jb
inc
popa
orl
ret
faddl
dec
and
inc
rolb
mov
frstor
addr16
out
out
fildl
aaa
add
popl
and
xor
cmp
hlt
cmpsb
dec
or
push
push
inc
push
in
fildl
daa
mov
in
nop
test
adc
iret
jo
pop
aad
add
les
mov
and
xchg
popa
jae
push
xor
aas
push
cmp
lock
and
inc
sub
cld
mov
jecxz
addl
aad
repnz
push
insb
lods
outsl
leave
xchg
jne
push
iret
adc
scas
fnstsw
sti
sbb
mov
lcall
xor
lret
les
mov
xchg
jnp
push
popl
jbe
addl
in
jp
mov
daa
lods
lahf
push
stc
int
add
inc
pop
xchg
cmp
daa
and
test
sarl
shl
sbb
xchg
push
mov
sahf
jg
mov
cmpb
mov
jmp
sub
inc
je
sub
notb
push
xchg
dec
dec
jmp
or
movsb
clc
cmp
mov
xchg
leave
popa
in
out
xchg
mov
mov
shl
dec
aaa
insb
cmp
inc
mov
es
push
inc
xchg
dec
mov
je
pop
mov
test
and
ret
pusha
xor
dec
push
push
stos
mov
jo
arpl
dec
lock
cwtl
ljmp
cmpsb
nop
lret
cld
stos
ljmp
ss
mov
cmpsb
out
aaa
cmp
add
sti
in
xchg
sbb
repnz
cmp
rolb
mov
aaa
es
jnp
and
mov
and
icebp
scas
rcrb
or
pop
jo
nop
stc
xchg
xchg
ja
and
sbb
dec
and
mov
out
cld
xor
insb
push
push
sti
imul
or
negl
push
mov
jno
imul
jge
jp
lods
add
pop
negl
mov
jo
lahf
adc
lea
push
adc
mov
cmp
jo
xor
and
and
mov
insb
xchg
cmpsl
lret
jl
cmp
cwtl
cmpb
fistl
xchg
sarb
bound
ss
fdivp
fstpt
jl
jae
es
and
daa
push
push
pop
mov
sub
pop
mov
repz
shll
sahf
arpl
add
lods
das
imul
hlt
lods
mov
or
or
inc
dec
sbb
test
lods
out
xor
adc
mov
push
mov
into
ret
jecxz
test
sbb
xorb
push
jb
adc
or
push
outsl
jns
dec
insb
push
inc
es
mov
mov
aam
push
les
xchg
cmp
mov
dec
mov
adc
mov
mov
dec
xchg
inc
icebp
daa
enter
and
je
mov
arpl
sbb
lcall
sbb
xor
adc
out
repnz
push
fdivr
cli
addl
fcomps
outsl
cltd
js
mov
jnp
cmp
decl
imul
mov
in
arpl
out
sbb
mov
mov
sbb
fnsave
ljmp
pop
xor
adcb
lcall
lock
mov
jmp
mov
pop
int
sub
stc
add
aam
stos
int3
jmp
enter
push
cmp
sarl
sahf
fstps
out
mov
cwtl
popa
jno
jns
add
std
fnclex
inc
rorl
pop
sbb
mov
xchg
jo
jae
cli
push
xor
jmp
jno
jg
loop
fs
lods
pop
shr
nop
mov
in
push
loope
adc
jecxz
lock
jae
or
daa
push
push
xchg
mov
push
fmuls
shr
mov
ss
xor
add
shl
orl
inc
or
imul
mov
xchg
movsb
addr16
or
movsl
sbb
pop
imul
pop
push
mov
or
aad
add
icebp
aad
leave
mov
mov
inc
xor
or
test
rcrb
cmc
jmp
adcl
fwait
test
int3
xchg
cmpsl
enter
cld
sbb
mov
and
in
sub
jno
jle
xchg
sub
dec
in
sub
fistpl
mov
aad
push
mov
xor
sbb
mov
jne
test
fisubs
or
sub
daa
inc
pop
and
ret
pushl
and
mov
hlt
xchg
inc
push
add
sub
rcrb
adc
in
push
out
test
dec
pusha
sbb
dec
jp
xchg
arpl
add
pop
sub
mov
inc
addr16
fs
sub
inc
ret
mov
in
aas
and
jecxz
and
iret
sbb
mov
cmc
pop
mov
xor
add
test
aam
les
add
push
xchg
dec
sub
movsb
scas
test
outsl
insl
mov
mov
mov
call
int
aas
pushf
lret
out
adc
mov
iret
jno
adc
mov
fsts
stos
sbb
int3
fxch
and
and
push
adc
pop
icebp
jle
popa
mov
int3
popa
adc
jge
cs
sbb
icebp
shlb
cld
nop
test
pop
ljmp
pop
cwtl
lods
xchg
fisubs
addr16
push
sahf
mov
fdivl
push
pusha
out
push
rorb
lret
in
sub
or
in
push
and
outsl
loopne
add
sub
adc
push
inc
xchg
xchg
bswap
push
pop
in
add
add
xchg
sbb
loopne
in
jle
adc
fstps
pop
xchg
mov
add
imul
lahf
sbb
push
push
sarb
mul
and
dec
ss
psubusw
popf
mov
cwtl
ficoml
dec
hlt
sbb
add
or
jmp
mov
fwait
loop
mov
push
ja
mov
aad
sarb
daa
pop
cmpl
das
sti
movsb
and
jl
out
je
cmp
int3
or
push
sub
idivl
mov
mov
fisubs
pop
jp
cld
sub
push
insb
inc
in
mov
rclb
repz
xchg
inc
lods
loope
test
mov
roll
cli
dec
or
out
movsb
add
push
pop
push
xor
sahf
adc
mov
adc
shlb
dec
insb
dec
cmc
icebp
cmp
adc
dec
push
shlb
adc
ret
ret
mov
arpl
push
jbe
stc
and
jmp
dec
lock
lret
out
push
clc
ss
pop
dec
jns
out
ljmp
add
dec
cmp
sub
ret
mov
out
jmp
out
mov
cmp
jmp
ds
xlat
and
sbb
fs
sub
sbb
sbb
movsb
sub
xchg
pop
mov
hlt
enter
loope
lret
ret
sub
scas
mov
cwtl
cmc
lods
push
xchg
aas
call
cmp
addr16
and
inc
shrb
xchg
mov
inc
mov
jmp
mov
aad
scas
or
incl
pop
aas
sub
xchg
mov
xor
aas
and
fwait
mov
pop
jnp
pop
shll
mov
pop
sub
pop
adc
pop
movsb
sub
scas
ror
sub
cmp
mov
js
popf
xchg
push
sub
popf
je
and
ret
xchg
cld
aas
aas
mov
or
sbb
lea
sbb
push
pop
pop
xchg
ss
mov
mov
arpl
stos
adc
jmp
cmp
sbb
cmpsl
xchg
mov
inc
sbb
fcmovnbe
fisttpll
xor
out
dec
jl
inc
jg
sbb
push
dec
testb
shrl
repz
jl
imul
andb
pop
lds
out
push
jb
jp
movsb
imul
pop
or
dec
call
push
mov
cmp
xor
mov
push
xchg
and
pop
dec
push
mov
leave
and
jnp
test
mov
gs
mov
or
push
mov
mov
xor
pop
les
jae
mov
xchg
movsb
dec
jne
mov
testb
dec
cmp
fsubl
adc
mov
and
push
daa
inc
mov
xor
inc
mov
push
ds
mov
push
fldl
mov
sub
push
and
fmul
pop
pop
push
fisubrl
xchg
mov
sub
push
xlat
faddl
into
dec
nop
jecxz
dec
test
cmp
push
cli
mov
pop
sbb
bnd
fidivs
mov
cmc
pop
push
jl
adc
dec
add
cmp
jl
adc
cmp
push
lcall
xor
arpl
out
jl
lds
daa
sub
xchg
dec
out
dec
cmp
cmp
imul
sub
pop
out
jp
fs
mov
idivb
mov
fwait
pop
jb
mov
iret
clc
pop
mov
outsl
xor
mov
fcomip
daa
pop
fisubrl
lcall
mov
sahf
push
pop
popa
jbe
or
enter
adc
movsb
shrb
leave
inc
in
pop
es
sub
cmp
aaa
push
pop
mov
js
dec
mov
xchg
leave
dec
aad
jbe
dec
ljmp
jmp
push
mov
mov
lret
aaa
popf
js
sbb
add
ss
lcall
fs
out
fistps
jns
ljmp
jnp
and
adc
jnp
sub
lods
popa
sub
xchg
mov
add
pop
das
adc
in
mov
ljmp
lock
imul
sti
mov
lcall
dec
cmp
cmp
les
inc
mov
adc
inc
pop
loopne
pop
iret
aas
sub
mov
std
or
inc
cld
push
enter
mov
mov
fists
mov
adc
pusha
jns
fildll
adc
in
sub
aam
js
jg
jno
inc
ret
mov
xchg
jns
inc
out
inc
out
pop
push
xor
push
aas
addr16
repz
dec
push
shlb
mov
adc
jno
lcall
jp
insb
jnp
xchg
mov
inc
out
mov
jge
push
lods
mov
nop
out
pop
daa
shrl
dec
mov
xchg
stos
test
ss
mov
repnz
inc
stos
inc
lock
mov
lret
jg
jb
jbe
popa
testb
ljmp
dec
movsl
pop
or
mov
lahf
xor
sbbb
in
xor
push
lock
add
push
add
mov
push
inc
clc
cltd
loope
and
sbb
xchg
mov
ds
xor
sub
mov
jns
push
add
inc
jg
jg
pushf
xor
xchg
push
mov
loopne
mov
lret
xchg
inc
lret
add
xlat
idivl
jnp
add
inc
adc
es
sbb
jae
jle
mov
popf
je
mov
test
sub
out
cmp
xchg
mov
sub
ljmp
jp
jo
adc
repz
push
or
popf
gs
js
adc
pop
push
inc
mov
mov
xlat
dec
call
aam
xchg
and
inc
pop
add
add
add
lahf
les
call
adc
push
xor
push
or
hlt
flds
adc
and
sti
mov
xor
sbb
inc
aam
jmp
pop
mov
mov
or
divl
pop
jle
push
push
xchg
xchg
jge
cmp
in
mov
rol
cld
inc
sti
jmp
inc
sub
xor
leave
push
hlt
and
lods
loope
fsubl
mov
jno
enter
adc
xor
jge
sub
pushf
sbb
xchg
stc
lret
lods
std
xchg
ficompl
mov
aas
inc
cwtl
jecxz
cmpsl
dec
andb
test
lcall
and
aas
push
dec
les
or
mov
jne
faddp
outsl
inc
jb,pn
sarb
xor
sub
or
js
jno
and
xor
popa
pop
jmp
inc
aaa
pop
xchg
or
cmpb
inc
and
out
add
sarb
stos
mov
in
xchg
add
imul
mov
mov
in
mov
es
jns
fidivrl
mov
jns
lahf
pop
js
pop
pop
sbb
cmp
je
jns
push
int3
loope
cmp
push
fidivs
fsubr
outsb
gs
mov
sbb
xchg
cwtl
js
and
sub
xchg
call
scas
sub
jae
pop
popf
int
push
stos
popf
cmp
decl
aas
pop
neg
mov
rol
lds
mov
push
out
popl
mov
out
int
and
inc
jns
leave
les
xchg
in
insl
jp
ljmp
sti
xchg
outsl
mov
cmp
jge
sub
pop
mov
dec
dec
inc
test
pusha
sti
scas
and
imul
xchg
idivb
rcrl
idivb
lahf
aas
and
out
jnp
mov
imul
or
pop
inc
jae
test
jle
pop
dec
add
inc
cwtl
shll
and
cmpsl
popf
inc
adc
mov
jne
xor
rcll
push
test
fisubrs
cmp
cltd
lcall
push
adc
ja
repz
xchg
pop
lods
or
jecxz
ds
cli
and
stos
mov
and
mov
sbbl
pop
mov
xor
mov
add
adc
rcr
pop
lret
mov
jb
xchg
mov
xchg
repnz
sub
mov
rolb
pusha
out
mov
dec
loop
jmp
add
xor
push
lret
cli
imul
xor
and
lcall
push
push
cmp
je
sahf
lds
push
mov
or
inc
pop
leave
mov
mov
mov
sub
bound
mov
jle
insl
inc
shl
inc
in
fstpt
push
loope
sbb
mov
clc
test
bound
pushf
or
xor
jmp
xor
fsubrl
in
les
loop
outsl
and
testb
enter
jmp
mov
pop
mov
test
decl
and
out
mov
sbb
jl
cltd
jbe
bound
fidivs
pop
imul
push
push
cli
adc
dec
push
jb
hlt
ret
mov
push
jno
push
mov
cmp
lret
push
and
cs
mov
out
push
rorb
rolb
adc
and
cmp
ret
popf
lods
ret
ret
aad
mov
movsl
jbe
clc
pop
out
sub
je
popa
divb
add
mov
xor
adc
push
pop
inc
add
dec
mov
push
adc
adc
jmp
jns
in
lret
mov
nop
int
pop
mov
xor
in
movsl
enter
xlat
push
les
or
cld
jb
daa
jnp
mov
gs
adc
sbb
sub
aam
lea
popf
insl
sti
outsb
daa
inc
in
add
scas
dec
mov
mov
loop
push
stos
jp
bound
enter
imul
or
sub
mov
cmp
or
scas
call
mov
sbb
cmp
out
add
mov
mov
push
ja
js
pop
jle
jl
push
jno
adc
inc
js
sbb
lea
scas
sbbl
test
sub
and
inc
add
in
addr16
and
push
push
fs
or
stc
repz
pop
xchg
lahf
imul
int
rorl
fwait
roll
inc
and
in
test
cmp
pusha
icebp
lods
sbb
jp
push
sbb
sub
lock
push
and
or
jnp
lods
cmpsb
push
adc
shl
leave
xor
outsl
push
xchg
call
push
lcall
xor
and
adc
push
mov
pop
dec
mov
je
test
jne
sbb
mov
pop
leave
std
jne
fsubl
int
inc
sar
dec
mov
fcoml
jae
pop
cmp
or
or
push
insl
push
add
jb
jmp
in
cli
fst
mov
xchg
or
mov
int3
sub
xor
leave
push
movsb
bound
mov
xor
leave
lret
pop
sbb
sub
inc
mov
pop
aaa
out
xorl
mov
adc
pop
sub
sbb
outsb
jmp
insl
das
and
dec
cwtl
xchg
xchg
mov
xchg
mov
daa
mov
dec
fisubs
pushf
jp
out
pop
jno
xor
loop
test
popf
movsl
rcr
jns
ds
push
pop
cmp
js
scas
loop
jp
mov
adc
inc
mov
pop
into
xchg
mov
pop
push
sbb
cltd
das
mov
in
jns
pusha
nop
push
rclb
ret
mov
sbbb
adc
mov
or
dec
and
sbb
sub
push
dec
jo
adc
pop
or
lret
sahf
pop
jne
fsubrs
and
repnz
cmc
pop
je
fs
dec
out
push
dec
sub
divb
push
jg
inc
rep
stos
inc
or
or
aad
test
mov
pusha
test
or
mov
mov
sbb
and
or
outsb
aam
repz
jmp
adc
ja
inc
mov
push
inc
jbe
stc
pop
fsubrs
xchg
out
adc
shl
add
push
dec
daa
out
int3
lcall
negl
xchg
and
sbb
pusha
push
xchg
xor
subl
test
xor
lods
sbb
xchg
mov
or
js
cwtl
pop
cmpsl
fsubrs
pop
cmpsb
aas
mov
inc
push
aad
cmp
xor
sar
cltd
inc
cmpsl
xlat
cmp
dec
mov
and
pop
int3
popf
shll
or
and
mov
in
push
cld
inc
cmp
sarb
scas
add
mov
repz
add
ret
iret
pop
mov
cli
fnstsw
add
push
sbb
mov
jge
jns
outsb
push
sbb
or
jbe
and
xchg
jb
adc
iret
clc
push
ljmp
mov
scas
push
xlat
ss
fsubl
lods
popf
cmpsl
or
adc
adc
push
repnz
testb
jp
push
in
lcall
and
negl
ss
dec
jnp
rorl
inc
jbe
cld
iret
popf
or
rcrb
xlat
imul
xchg
or
sub
cmp
sbb
or
dec
cwtl
cmc
es
lods
add
sti
imul
dec
and
mov
je
cmp
push
mov
cltd
xchg
pop
inc
mov
out
bnd
mov
arpl
pop
insl
sub
push
ja
lock
lods
dec
jnp
leave
or
or
rorl
ja
lds
mov
push
adc
outsb
out
mov
jmp
xor
testb
cld
cwtl
in
pop
imul
subl
dec
mov
inc
cmpsb
movl
pop
mov
lret
fidivl
lret
scas
aam
mov
cmp
dec
pop
xorl
test
das
mov
sub
lret
jle
mov
es
mov
fmuls
rorl
test
pop
sbb
and
mov
jg
lret
ret
faddp
outsl
aaa
sti
loopne
testl
push
movsb
rorl
scas
sbb
lock
nop
jmp
mov
ret
lea
inc
aas
cmc
mov
jmp
mov
sbb
stos
jl
push
test
data16
cmpsl
push
mov
push
addl
sbb
pop
or
scas
shll
cmpsb
pop
dec
add
cmp
push
imul
addr16
dec
aam
xchg
inc
inc
lods
mov
sbb
cmp
pushf
stos
jns
pusha
xor
cmp
loop
call
jp
adc
out
mov
and
add
out
pop
mov
fwait
into
mov
jecxz
xchg
lahf
xchg
sarl
inc
dec
sbb
pop
out
scas
add
stos
jo
cmc
mov
and
out
test
cmp
sbb
inc
xorl
mov
sbbl
and
cld
sub
fs
les
and
fsubrl
or
and
mov
adc
and
fidivrs
cmp
shl
out
xorb
or
mov
xchg
stos
cmp
add
push
and
or
and
xor
mov
repnz
sub
dec
push
aas
push
loopne
dec
aam
mov
sbb
pop
movl
push
test
dec
insl
testb
into
sbb
sub
push
std
cli
jbe
adc
test
xlat
lcall
scas
jo
aas
mov
and
lods
and
call
sbbl
mov
xchg
dec
inc
push
sbbl
shll
or
cmpsl
mov
sub
bound
cs
enter
loope
sub
jno
aas
outsb
add
pop
std
mov
mov
iret
cmpsl
adc
cmp
pop
pop
clc
insb
jle
and
ds
mov
dec
or
testl
fists
daa
xor
sub
push
jae
dec
rclb
loope
fisttpll
orl
add
insl
dec
in
aas
cld
mov
iret
sub
fnsave
dec
adc
fcom
push
pop
out
cmc
test
hlt
fwait
adc
rolb
and
push
mov
add
gs
test
repnz
cs
adc
addr16
and
mov
mov
dec
popf
lds
decb
inc
jg
mov
dec
jmp
in
out
mov
mov
sbb
or
outsb
add
and
or
sbb
mov
pop
xor
addb
les
adc
es
pop
adc
mov
js,pn
mov
add
cmc
fnstsw
pop
mov
andl
dec
cmp
clc
inc
fsubrs
cltd
push
or
es
leave
xchg
push
scas
add
and
in
xchg
mov
push
mov
lods
pop
mov
dec
pop
pop
loop
ret
add
int
int
fucomp
rorl
push
mov
dec
xchg
js
js
or
test
test
jcxz
cmp
push
cmpsl
mov
jle
or
sub
mov
and
cmc
mov
filds
push
mov
sbb
adc
pop
cmp
xor
add
xchg
sub
adc
leave
lcall
insb
rcll
mov
lds
mov
jl
xor
leave
stos
pushf
mov
popf
fdivr
adc
js,pn
and
repz
cmp
xor
testl
jmp
testl
fdivp
ds
xchg
mov
mov
adc
aad
lahf
adc
repnz
mov
xor
adc
in
push
push
test
shrl
dec
bsr
mov
inc
lret
and
inc
in
sbb
ret
shr
lahf
add
inc
push
roll
jp
cmp
int3
ja
pop
and
add
mov
push
repz
pop
lcall
add
popf
jge
push
inc
cltd
int3
mov
aas
insb
insb
and
xor
push
std
lret
daa
inc
inc
pop
ficomps
cld
lods
std
ss
or
test
jns
sub
popf
in
mov
jb
arpl
sub
inc
nop
les
insl
mov
push
push
push
xchg
jmp
add
mov
mov
dec
push
lret
xchg
jo
pop
cltd
and
xchg
xlat
imul
ds
testl
add
in
and
sub
adcb
push
fninit
and
or
lcall
sbb
loop
ja
movsl
jl
add
and
es
in
movl
out
cmpsl
mov
mov
jb
loope
jmp
sub
mov
mov
xchg
adc
dec
cmp
mov
loope
push
jp
cmp
adc
pop
pushf
push
xor
popf
cmp
or
cmp
and
aaa
fisubrl
and
cwtl
adc
sub
cmp
jmp
xor
xchg
xor
or
mov
ljmp
jno
jmp
dec
mov
or
popa
shll
and
push
cmp
inc
cmp
mov
cmp
pop
out
ds
or
addl
data16
xchg
mov
cmp
idiv
fidivrs
push
mov
and
sub
ss
or
and
je
mov
std
lods
cmpsl
sub
lret
or
mov
fucomp
mov
mov
cs
xchg
call
outsb
lcall
mov
fadd
cld
sub
lea
push
rolb
mov
inc
out
cmp
sub
sub
push
jmp
addr16
icebp
cltd
push
or
dec
mov
and
mov
jl
test
lret
fadds
pop
test
rcll
mov
subl
test
push
add
mov
and
movsl
mov
shrb
lret
mov
aam
pop
mov
lods
cltd
inc
adc
lcall
mov
pop
jmp
cmc
jns
pop
sub
mov
add
mov
sarb
test
mov
add
push
jecxz
push
jb
fbld
mov
in
inc
sbb
sbb
testb
sub
mov
cmp
inc
cmpsb
repnz
cmpsb
xchg
aam
and
push
xchg
inc
and
les
mov
pop
ret
and
xchg
stc
sbb
dec
shl
dec
dec
ss
aaa
pop
lods
mov
pop
ss
in
jle
insl
pop
add
jae
sbb
mov
sbb
les
xlat
adc
pusha
out
iret
inc
xchg
cmc
out
or
or
lret
sahf
push
lret
push
inc
cltd
outsb
fwait
jmp
test
mov
mov
in
iret
je
hlt
mov
cmp
scas
lret
push
jl
call
repz
mov
cmp
fcmovnbe
adcb
aaa
ja
adc
aas
lods
mov
xor
pop
xor
enter
fcoml
push
sub
jo
les
dec
xchg
dec
aaa
xor
addr16
jae
das
popf
lahf
out
in
lcall
jge
cmp
faddl
cmp
push
pop
or
pop
push
adc
jne
cmp
stos
das
xchg
xor
sbb
enter
mov
push
jge
inc
jge
mov
rol
lea
mov
out
xor
pop
loopne
pop
sarb
sahf
add
mov
mul
shl
out
loope
jle
dec
clc
xorl
lods
jmp
hlt
lods
aad
outsb
jge
jecxz
mov
cmp
bound
adc
xor
int3
scas
test
fisubrs
dec
lret
push
in
mov
fs
pop
scas
and
cltd
mov
das
test
xchg
push
mov
sub
hlt
jl
popa
in
or
jno
xchg
adc
push
mov
outsb
and
cmc
lahf
pusha
in
jmp
pop
inc
lret
es
mov
rolb
xor
sbb
and
outsl
ret
shrb
in
and
sbb
mov
sub
ret
mov
cwtl
addr16
pop
ss
jno
insb
es
lcall
je
jbe
movaps
std
jle
outsl
stos
push
push
aad
popa
int
filds
add
mov
push
scas
icebp
ret
shrl
aad
adc
mov
xchg
push
sub
adc
xor
and
scas
mov
sub
fimull
dec
sar
lcall
add
push
cli
push
pop
cmp
outsb
or
mov
sub
test
pushf
jns
call
jmp
add
pop
pop
xchg
jmp
loopne
leave
mov
icebp
cltd
je
outsl
fs
test
cmpsl
ss
pop
and
faddl
jge
mov
xchg
out
add
outsl
adc
lods
mov
lret
jnp
inc
sarl
shrb
stos
or
inc
xor
cmp
mov
int
pop
cli
fsts
inc
pop
cmpsl
jo
mov
xchg
pop
sar
mov
es
pop
movsb
lcall
jmp
sub
add
jne
enter
xor
test
mov
pop
sti
or
sub
test
fwait
ret
jg
fwait
loopne
xchg
sub
mov
iret
cli
out
mov
mov
jae
cltd
not
xor
sbb
enter
xor
or
cmp
sub
mov
int3
inc
dec
icebp
mov
popa
cmp
fists
cs
dec
cli
orl
shlb
outsl
push
pushf
and
xlat
add
xor
dec
xchg
sub
xbegin
in
ljmp
les
les
test
and
sub
push
sbb
mov
fnstcw
push
cwtl
mov
addr16
inc
enter
icebp
addl
ds
idivb
je
aaa
movsl
int
lret
sub
push
push
adc
inc
aam
ljmp
jns
cmc
lret
cwtl
push
gs
push
icebp
or
mov
scas
push
mov
addl
mov
pop
daa
and
adc
cmpsb
push
bound
sbb
lock
clc
repnz
test
ret
xchg
popa
mov
scas
lret
dec
mov
int
test
iret
aam
mov
psraw
pop
pushf
ja
shll
mov
mov
lret
inc
fstpt
shr
fistl
cmp
pop
jge
cmp
xchg
sbb
add
pop
push
les
sub
gs
jl
in
popa
pop
adc
mov
cmpsl
push
add
lahf
push
enter
ss
fistpl
push
xchg
fs
sarb
mov
dec
xchg
pop
mov
mov
fmull
mov
fwait
bnd
mov
jo
hlt
pop
xor
jmp
sbb
nop
fidivrl
test
mov
push
adc
push
or
pop
leave
stc
jbe
push
add
cmp
xchg
mov
cmp
add
addr16
test
incb
cmp
dec
je
shlb
leave
fstpl
inc
mov
xchg
inc
mov
inc
mov
xor
inc
or
enter
mov
repz
jae
and
mov
fs
sub
sub
push
int
adc
enter
sub
mov
lahf
faddl
paddw
mov
out
inc
adc
cmpsl
mov
jbe
sub
push
ljmp
pop
in
mov
sub
sub
and
push
fbld
ss
ret
xor
jg
daa
push
nop
ret
pop
xchg
std
out
xchg
mov
sbb
insl
xchg
in
or
out
movsl
notb
ficompl
in
xchg
popa
rcll
popa
dec
pusha
jg
adc
stos
sahf
cmp
movsb
popa
inc
lock
popf
add
std
clc
int
sahf
lods
negl
gs
movsl
fdivrl
fstl
test
in
popf
rcr
sub
pop
lret
adc
mov
sbb
repnz
xchg
fidivl
test
jbe
into
testl
mov
ds
jl
popl
popf
sbb
push
enter
fsubrs
aad
dec
subl
movsb
lahf
repnz
push
loopne
pusha
jge
iret
ds
mov
mov
push
sub
and
jmp
jns
repz
icebp
or
add
enter
pop
outsl
aas
popf
jle
out
arpl
clc
incl
add
add
addr16
mov
lret
sub
in
mov
aaa
ret
stc
xor
mov
adc
mov
icebp
cmp
xchg
outsl
push
movsb
sub
test
mov
fmuls
mov
sbb
into
cmp
das
cli
test
nop
movsb
mov
ret
rcrb
or
sbb
mov
fdivrp
pop
jp
or
cli
xchg
rcrl
add
jmp
clc
xchg
mov
stc
test
dec
aaa
bound
mov
int3
push
fistpl
loope
mov
notl
add
pop
push
mov
pop
loop
lret
inc
jmp
in
data16
scas
sbb
sub
sub
adc
insb
and
ss
out
pop
adc
pop
mov
adcb
cmpsb
sub
xor
fmull
jno
or
cwtl
jnp
push
push
imul
lds
mov
pop
mov
pop
lcall
rcll
add
sbb
orl
fwait
mov
mov
xchg
xchg
in
mov
stos
lods
pop
loopne
mov
or
add
out
xor
mov
rcll
dec
jnp
cld
jne
in
xor
jbe
mov
lock
mov
cmp
jg
inc
fstps
test
mov
cmc
mov
sahf
pushf
jl
cld
lea
xor
int3
test
idivl
ret
jle
iret
pushl
adc
stc
mov
mov
pusha
push
movsl
lcall
sub
xchg
rcl
test
call
xchg
cltd
mov
daa
arpl
mov
xor
lret
xlat
out
fisttpll
out
movsb
fdivs
xor
xchg
mov
mov
fstpl
lods
lcall
sbb
xor
sahf
xchg
or
neg
lods
sarb
mov
push
ret
push
adc
mov
popf
jle
mov
test
lret
push
lret
mov
mov
add
and
out
les
dec
outsb
pop
aas
movsl
aas
and
push
popa
xor
aam
pop
iret
sbb
fsts
inc
xor
and
fistpl
mov
shlb
rorl
jle
or
mov
mov
scas
or
xor
outsb
add
pop
xchg
dec
dec
jns
stos
or
in
int3
jg
xchg
push
sbb
pop
dec
jbe
dec
gs
dec
push
cli
jl
inc
adc
clc
shrb
mov
pusha
dec
sahf
test
push
rclb
jmp
hlt
lods
cmpl
push
imul
popa
test
pusha
jg
mov
and
cmpsl
stos
mov
pusha
pop
inc
dec
mov
xor
test
lods
mov
adc
daa
cwtl
mov
pop
or
xchg
stc
sub
data16
lods
rcll
or
jnp
cmp
pusha
js
aaa
sub
shll
xchg
adc
in
aad
aam
xchg
add
push
pop
fdivrs
out
popf
xor
ss
adc
jle
xor
adc
push
cld
push
adc
mov
test
sub
inc
les
rep
in
jge
test
inc
xchg
xor
es
popa
xchg
jmp
out
bound
mov
cltd
cmp
push
lea
mov
ja
push
fstpl
and
in
leave
jecxz
mov
subl
sub
mov
data16
xchg
call
daa
xor
xorw
or
test
dec
jbe
daa
mov
insl
lock
mov
jb
cmp
je
mov
cs
fcoml
outsb
push
addl
xorb
mov
cwtl
rclb
and
xchg
repnz
adc
xor
sub
adc
daa
les
lods
lds
cmc
loopne
loop
pushf
xchg
pop
mov
push
inc
arpl
lret
and
dec
dec
inc
popf
std
mov
xchg
or
inc
std
mov
ret
rcrb
pushf
mov
mov
js
lock
scas
xor
das
cmp
outsb
jae
pop
call
incb
jne
push
cmp
sub
fnstcw
inc
jmp
ret
jle
je
aaa
and
scas
xor
ja
movsl
insb
lock
dec
lods
push
push
cs
sti
xlat
xchg
fstps
sbb
lahf
stos
sbb
test
mov
hlt
dec
push
gs
stc
dec
push
outsl
addr16
repnz
add
popa
stos
sahf
jl
dec
pop
sahf
inc
clc
dec
sbb
ja
add
bound
call
pop
lods
mov
lock
ljmp
pop
les
subb
push
scas
inc
sbb
bound
mov
sbb
dec
std
fildll
inc
jg
xchg
arpl
jg
test
push
pop
inc
popf
inc
fildll
test
cli
xor
out
aaa
inc
push
ja
jno
push
and
clc
adc
adc
push
int3
or
add
outsb
dec
mov
inc
rcll
test
imul
xor
lods
jmp
xor
jecxz
mov
clc
call
xor
jp
in
mov
add
or
in
ja
mov
mov
rcll
xchg
in
mov
pop
js
xor
jp
inc
stos
mov
mov
pop
dec
xchg
and
scas
fcomp
jp
pop
stos
imul
test
dec
push
daa
ret
lods
fsub
out
test
jge
pushf
js
fstp
mov
ret
sub
outsl
gs
in
mov
lea
adc
push
sahf
in
gs
int3
mov
and
mov
rol
xchg
mov
mov
jb
in
sbb
test
arpl
call
pop
mov
mov
mov
push
out
mov
jns
jg
insl
jecxz
lret
mov
mov
mov
into
pop
adc
lret
sub
mov
pop
das
xlat
incb
cltd
pop
call
andl
pop
in
ljmp
insb
dec
enter
cmc
lods
pusha
dec
out
adc
xchg
adc
and
xchg
or
push
xchg
mov
inc
mov
ret
push
push
mov
stos
icebp
inc
jo
andb
push
gs
mov
int3
sub
or
or
loope
jb
iret
mov
sbb
jbe
stos
out
ss
out
mov
je
iret
roll
sbb
add
out
in
ret
xchg
mov
xchg
jb
mov
jecxz
mov
sbb
scas
dec
xor
shl
sbb
xor
outsl
fistl
cwtl
repz
push
ss
inc
test
bound
jno
sub
sahf
cmp
adc
push
xlat
pop
mov
sti
outsl
cltd
std
das
and
sub
mov
add
sub
lock
fs
idivl
lods
stc
push
out
mov
cwtl
and
jo
rclb
dec
sub
mov
and
int
icebp
cli
sahf
nop
mov
fs
je
xor
xchg
fcom
scas
mov
jle
jo
test
fdivl
bound
jg
lods
iret
rolb
aad
mov
xchg
add
orl
adc
inc
cmp
lahf
inc
mov
push
sub
shll
pop
mov
out
int
jno
dec
scas
imull
pop
arpl
shlb
inc
inc
mov
jmp
loope
int3
test
mov
jecxz
push
shrl
shrl
and
mov
cmc
sbb
mov
ds
pop
xlat
add
daa
rol
fstpl
dec
cld
gs
pop
sahf
pmaxsw
pop
das
xchg
int
and
xorb
std
in
clc
aam
pusha
insb
and
jbe
jecxz
adc
inc
mov
jno
cmp
in
iret
movsb
jbe
mov
mull
xor
aad
in
rorl
arpl
add
stc
es
cltd
mov
jl
xlat
pop
in
inc
mov
pop
shl
mov
and
xchg
mov
cli
cmp
in
adc
cwtl
cmpsl
or
pusha
jb
pushf
aad
or
jecxz
ret
enter
jmp
sub
mov
pop
xchg
and
or
fdivr
sbb
test
lds
xchg
cli
mov
pusha
xlat
adc
adc
push
in
nop
ffree
inc
in
xlat
jg
jmp
mov
adc
test
out
movsb
mov
mov
mov
xchg
cmp
repz
not
int3
lret
out
adc
xchg
out
push
inc
sbb
adc
mov
sub
in
cwtl
lock
add
adc
mov
jle
add
fstl
or
dec
lds
loopne
pop
stos
mov
fwait
idivb
push
push
pop
data16
adc
aad
out
test
aad
mov
jg
pushf
inc
jno
dec
mov
icebp
loope
rolb
out
shr
push
addr16
mov
loope
fwait
adc
inc
dec
stos
dec
xchg
mov
loope
and
iret
jno
xor
rcrl
or
sub
sub
xlat
sbb
dec
mov
mov
mov
xchg
sbb
imul
push
or
push
push
xchg
pop
rolb
call
mov
data16
pop
add
push
push
rclb
shll
push
shrb
rorl
outsl
or
or
mov
mov
daa
scas
in
mov
ljmp
mov
lahf
xchg
dec
mov
cmpsl
mov
mov
mov
mov
inc
dec
cmpsb
jnp
xchg
repz
pop
imul
stos
ficomps
inc
enter
jbe
dec
mov
mov
pop
int3
adc
jmp
imul
pop
jg
adc
iret
ja
daa
jl
xchg
dec
jle
sbb
push
jg
add
dec
ja
jmp
fsubs
mov
ds
cmp
aas
jns
xor
jecxz
push
mov
dec
fcomp
xchg
loopne
xchg
jle
jmp
imul
jns
scas
pop
add
lcall
push
add
push
push
inc
js
dec
lcall
das
out
mov
xor
cmp
pop
add
mov
xor
into
and
scas
rol
pop
lcall
scas
pop
pushl
cld
adc
fldcw
fisubs
int
cmp
xor
icebp
and
les
fwait
imul
adc
xchg
cmp
sub
xchg
lea
ficoml
insl
inc
sbb
inc
imulw
pusha
enter
jbe
arpl
adc
out
cmp
aaa
add
sub
mov
mov
ljmp
jb
and
dec
xlat
ret
loopne
outsb
sub
add
jg
push
sbb
les
xor
jnp
push
inc
in
ds
imul
js
add
cltd
rol
icebp
dec
xlat
adc
xchg
pop
roll
repnz
ret
loop
push
push
es
mov
gs
mov
sub
popa
stc
and
mov
cld
out
xchg
mov
dec
cmp
ss
cmp
sahf
mov
ficoml
mov
cmp
pop
cmp
push
and
loop
mov
divb
add
sub
repnz
addr16
jae
sbb
jle
repz
cmpsl
hlt
add
cmp
arpl
xchg
pop
pop
mov
push
mov
out
insl
jmp
psrlw
jle
test
jl
lret
outsb
negb
push
sub
pop
inc
cmp
lods
lods
xchg
imul
dec
shlb
sbb
mov
ret
mov
pop
mov
stos
mov
gs
mov
cmpxchg8b
enter
call
cli
dec
ja
andb
les
rcll
mov
outsb
dec
popa
ss
mov
push
imul
dec
push
mov
xor
das
ss
and
cmp
insb
pop
js
ss
cmp
movsl
xlat
loopne
adc
mov
xor
jbe
mov
scas
cmpsb
or
jno
insb
lcall
lock
dec
xor
jecxz
xor
cmp
cs
and
mov
je
lret
push
sbb
cmp
rolb
or
xchg
inc
sbb
push
adc
inc
fnstenv
das
gs
andl
int3
insb
jno
lods
add
ret
inc
popf
cmp
cld
push
movl
push
iret
jl
test
add
cli
mov
pop
in
push
xor
repnz
pop
push
xchg
std
xor
mov
jbe
lods
mov
stos
mov
lahf
xchg
test
sahf
jp
mov
cmpsl
rol
loope
sub
lock
daa
call
lret
iret
mov
xor
xor
shl
mov
xchg
das
imul
movnti
loope
xor
lcall
ljmp
jnp
mov
popf
addr16
push
pop
into
outsl
mov
pop
inc
pop
movsl
je
stos
or
or
movsl
sbb
addl
xchg
and
sub
enter
xchg
dec
lret
repnz
cltd
mov
ret
lret
cmp
les
add
int
inc
jne
pop
aaa
cmpsb
loopne
subl
ficoms
jg
xchg
adcl
xchg
adc
jns
cltd
fldcw
pop
jbe
cmp
cld
cli
lahf
std
aam
adc
imul
repz
dec
xchg
cs
and
fcompl
cmp
cwtl
andb
or
jne
mov
lea
xor
jg
pop
add
mov
scas
mov
lahf
add
cmc
add
dec
jo
inc
sbb
sub
or
mov
jl
sbb
jmp
jl
jns
and
ficomps
mov
mov
imul
movsl
mov
push
push
repz
cltd
and
mov
jmp
inc
imul
aas
mov
sub
gs
sahf
gs
out
jg
push
mov
ret
loop
mov
xchg
stc
test
mov
fisttpl
ficoml
xor
iret
jg
mov
test
out
shll
cld
xchg
pop
test
aaa
mov
loop
push
fiaddl
mov
decl
inc
or
push
xorb
lds
sbb
add
loopne
jbe
cmp
push
sti
pop
jns
mov
mov
push
dec
dec
and
cmpsl
popa
mov
mov
rolb
and
sbb
sbb
dec
mov
add
cmp
bound
and
xchg
fiadds
mov
push
enter
lahf
scas
inc
push
jp
ret
adc
mov
inc
ret
repz
add
cmp
loopne
lods
ss
xchg
sub
out
pop
sbb
rcrb
jge
cmp
movsb
nop
xor
mov
lret
lods
mov
mov
cmp
bndcn
fwait
mov
add
inc
pop
dec
imul
sbb
adc
dec
inc
push
jne
mov
mov
sub
lods
xchg
adc
fidivrs
adc
emms
cli
insb
insb
loopne
gs
pop
and
cmp
mov
stos
imul
push
push
mov
loop
cmpsb
mov
or
rorl
rolb
ds
mov
ret
or
je
mov
jg
adcb
inc
inc
inc
rcrb
mov
sbb
pusha
arpl
test
mov
cmpsl
mov
adc
adc
sbb
mov
jl
jns
mov
outsl
pop
sar
inc
imul
mov
pop
sbb
scas
jbe
negl
into
dec
sti
inc
dec
test
pop
fwait
xor
gs
mov
inc
hlt
in
lcall
cmp
push
pushf
ss
in
pop
leave
lret
dec
pop
jle
movsb
scas
mov
rolb
mov
sub
lods
dec
loopne
push
shl
leave
lods
sub
lea
push
pop
mov
push
es
scas
sbb
xor
les
add
cmp
sbb
mov
stos
fiadds
adc
cltd
loope
jmp
pop
roll
in
pop
xchg
jge
jbe
pop
popf
je
xchg
clc
mov
inc
stc
and
fwait
daa
sub
nop
imul
inc
add
and
adc
mov
popa
sbb
inc
out
mov
aaa
psubw
xchg
leave
rorl
inc
rorl
aaa
pop
out
in
inc
cmp
jmp
jo
or
je
imul
jmp
ficompl
imulb
enter
iret
inc
sub
pushf
xchg
xchg
cmp
pop
mov
cwtl
insb
jbe
in
por
dec
popf
lods
pop
inc
jne
cmp
out
or
jle
inc
outsb
ljmp
test
mov
sbb
xchg
rclb
inc
xchg
mov
dec
push
sbb
imul
es
jbe
sub
cld
mov
pop
pusha
mov
pushf
mov
iret
test
addl
pop
inc
aaa
pop
sti
in
jns
fnsave
mov
add
cmp
mov
jae
sub
hlt
push
rcl
ja
mov
lcall
shll
orl
sti
stos
sub
imul
xor
les
pop
sub
xchg
cmpsb
lock
lcall
fs
scas
out
dec
in
xor
pop
call
sbb
or
push
jbe
xchg
dec
pop
movsb
movsb
mov
mov
aad
lock
xor
test
and
addb
movsb
mov
pop
jecxz
add
xor
int3
dec
scas
jno
stos
clc
dec
leave
mov
inc
call
push
pop
jge
in
fmul
movsb
jmp
adc
leave
push
push
mov
sub
out
and
sub
addr16
pusha
add
jae
inc
adc
into
in
test
adc
ja
mov
call
or
cmp
mov
jb
or
mov
gs
enter
out
sbb
push
cmpsb
jo
or
pop
xor
mov
mov
rcrb
fcmovnu
adc
shll
xor
mov
or
out
mov
aaa
sub
rclb
mov
xor
in
movsb
mov
std
adc
sub
add
cmpsb
lret
add
dec
jns
pop
inc
aad
insl
add
add
push
dec
push
repnz
jb
jns
lret
shrl
jg
out
pushf
rorb
int3
mov
cmpsl
xchg
ret
inc
jg
repnz
inc
push
outsb
ss
jg
xor
daa
popa
pop
mov
out
cmp
mov
inc
fucomip
and
pushf
mov
stc
xor
mov
test
mov
mov
inc
movsb
sub
nop
sbb
leave
divb
dec
sbb
add
in
dec
div
xlat
mov
push
std
insl
sbb
push
mov
or
add
stos
dec
sbb
pop
mov
sbb
ds
popf
pusha
xchg
sub
mov
popf
enter
dec
add
cmp
pop
imulb
shll
jbe
test
icebp
out
pop
insl
pop
or
mov
xchg
adc
xchg
dec
mov
test
mov
aam
std
jle
test
and
or
adc
jmp
fmull
push
mov
arpl
cmpl
mov
mov
cmpsl
pop
pop
xor
int
inc
arpl
push
push
aam
loop
insl
dec
lock
test
sub
mov
divb
fistl
push
sub
lods
xlat
loopne
and
lea
test
enter
dec
inc
push
mov
rcll
sbb
rclb
push
sub
mov
sbbl
aad
dec
inc
icebp
or
add
inc
inc
pop
insb
lahf
mov
fiadds
lret
ret
mov
cmp
and
leave
mov
cmpsl
dec
mov
scas
andl
sbb
jp
mov
sbb
je
loopne
rep
or
out
test
jg
add
adc
jb
jge
loop
cmp
push
add
dec
stos
mov
stos
fs
adc
or
lret
jle
bnd
xor
jp
lock
inc
js
stc
sub
pop
xchg
popa
mov
rolb
call
cld
and
jne
dec
mov
rcll
es
pop
sbb
xlat
cmp
psllq
addb
xor
shl
sub
jb
dec
xorl
dec
gs
adc
pop
xlat
ret
sbb
je
adc
add
fistpl
xchg
cmp
rcrl
or
cmp
outsb
sahf
mov
lods
js
sub
repz
or
add
gs
stos
xchg
and
xor
mov
xor
cwtl
call
stc
jecxz
mov
dec
aad
aaa
inc
pop
jge
mov
push
test
pushf
rorb
xchg
pop
mov
pusha
scas
test
inc
sub
insb
cli
xor
mov
mov
std
dec
jmp
jae
test
popa
xor
lea
push
inc
test
cmp
call
in
pop
faddp
fdivrs
aam
or
call
les
aaa
and
push
ret
rcrl
xchg
sub
cmp
pushf
sti
adc
dec
mov
jl
enter
scas
xor
in
mov
lret
pushf
mov
sub
test
sub
mov
push
sub
insb
test
dec
add
in
test
add
bound
adc
or
or
add
leave
and
mov
sbb
gs
sub
mov
xor
lods
shr
icebp
fildll
mov
sbb
dec
xor
push
cli
jne
repz
cmc
inc
in
icebp
scas
fists
mov
shl
sbb
adc
mov
cs
push
addb
sub
mov
dec
aas
std
push
add
out
cmp
and
lret
add
and
and
pop
and
cltd
sbb
inc
adc
push
out
dec
in
or
pop
mov
push
jne
inc
jecxz
mov
mov
mov
inc
cmp
cltd
andb
rcll
add
fsubl
dec
hlt
add
repnz
pop
aam
pop
test
xchg
scas
cs
in
mov
push
jns
xor
inc
push
popa
fwait
out
add
cmp
pop
ja
xchg
pop
mov
add
into
mov
mov
call
inc
inc
insb
push
enter
fldl
es
popa
xor
dec
xor
add
clc
cmp
je
dec
lahf
enter
jae
mov
sbb
or
rolb
insl
stc
or
cwtl
cwtl
loopne
cltd
push
jg
xchg
xchg
mov
pop
adcl
sti
jb
ret
dec
mov
xor
xor
cmp
mov
and
cmp
js
mov
fisubl
lret
mov
imulb
pushf
dec
push
adc
lcall
ljmp
push
lock
cmc
cmpsl
ljmp
cmp
push
jno
out
cmp
sbb
mull
mov
ljmp
sbb
adc
repnz
jl
shlb
jne
mov
sub
fdivl
jo
scas
xlat
cwtl
adc
push
jmp
mov
sbb
iret
out
loop
lfs
imul
add
roll
or
mov
fists
cld
cmpsb
lahf
sub
nop
jno
add
and
movsb
inc
fsubrl
lcall
shrl
push
push
push
sub
dec
sbb
mov
outsl
mov
jbe
pop
mov
mov
int3
push
stos
stc
scas
daa
mov
movsl
add
sbb
add
fstl
inc
repz
lret
bt
fsubrl
lock
cmpsb
xchg
mov
cmp
xor
loope
add
dec
sbb
or
and
out
jge
icebp
push
ds
ret
sahf
or
lahf
movsb
dec
adc
lock
inc
lret
pop
fimull
or
mov
addr16
push
loopne
mov
mov
aad
pop
cld
mov
push
insw
repnz
pop
cwtl
xor
sbb
dec
lods
or
push
and
cmp
aad
mov
clc
add
adc
and
sbb
pusha
mov
push
pop
sub
jle
lds
leave
movsl
cli
sub
inc
mov
adc
mov
mov
sbb
xchg
out
sbb
sbb
sbb
pop
pop
je
and
cmp
mov
sbb
scas
xchg
xchg
out
ret
mov
mov
in
pop
aad
sbb
inc
dec
nop
mov
imul
out
scas
mov
add
add
mov
test
aam
scas
add
in
addr16
push
imul
pop
adc
sbbb
xchg
cli
and
inc
test
sarl
xchg
addr16
rcrl
daa
mov
pushf
jecxz
mov
sbb
adc
mov
jge
cmpsb
test
std
sub
push
sub
scas
xor
fdivrs
arpl
adc
or
movsb
jo
cmp
mov
add
mov
dec
lret
aaa
pop
dec
dec
cmp
add
ret
out
jno
arpl
enter
add
sahf
aaa
sbb
in
fsubs
ret
sti
orb
std
inc
imul
fwait
and
aam
or
add
gs
mov
daa
outsb
mov
mov
fimull
mov
and
add
pop
jno
jno
lods
cli
in
fidivrs
jl
fcmove
mov
aaa
outsl
rcll
cmpsl
pop
loop
fwait
cmp
jnp
ss
or
sti
fiaddl
xor
lret
inc
sbb
lcall
fwait
aad
in
mov
ss
int3
inc
cli
ja
test
mulb
jno
mov
pop
shrb
insl
mov
jp
fidivl
pusha
jp
int
sahf
movsb
sbb
mov
jae
and
dec
dec
test
sbb
bound
mov
xor
in
adc
fcom
lods
inc
lcall
cmp
insl
mov
cmp
pushf
xchg
dec
xchg
pushf
inc
xor
sub
push
lods
aas
sti
inc
scas
cs
in
pop
jne
adc
aaa
mov
test
ja
sub
iret
and
leave
inc
outsb
xor
xchg
xchg
xlat
in
cmc
lods
adc
pop
push
clc
hlt
ret
jns
daa
movsb
aad
femms
mov
pop
cmp
ret
hlt
sbb
xor
dec
xchg
push
push
mov
mov
shll
incl
in
mov
mov
movsl
outsl
movsb
lret
notl
aam
mov
cld
lret
fidivrs
test
pop
stos
lcall
mov
sbb
mov
cmpsb
jle
addr16
jae
pushf
out
mov
or
jecxz
push
lods
aaa
push
mov
xchg
push
inc
dec
mov
int3
xchg
and
adc
mov
jnp
mov
xchg
and
add
test
push
leave
fwait
dec
ret
push
adc
jb
xchg
movsl
adc
jbe
test
sbb
fdivp
les
jecxz
ret
loopne
mov
popf
mov
mov
mov
lods
mov
mov
scas
imul
jmp
lods
xchg
outsb
jg,pt
xchg
pop
and
frstor
sbb
mov
push
xor
gs
lahf
cmp
mov
iret
xchg
jno
cmpsb
dec
in
fdivrs
adc
cmp
jmp
sub
sbb
add
push
sub
or
adc
jnp
sti
mov
dec
inc
das
in
and
jne
or
inc
cmc
ss
add
repz
xchg
jne
mov
addr16
push
nop
test
push
outsb
pop
loop
jl
mov
aaa
jmp
mov
stc
xor
push
out
xor
mov
add
movsl
inc
or
ds
mov
sub
imul
popf
arpl
in
in
xchg
push
popa
fnstsw
and
adc
adc
jl
xchg
dec
and
mov
in
mov
jno
or
icebp
sub
xchg
or
in
inc
pop
out
loope
push
inc
test
popa
pop
or
ja
pop
lea
pop
sbb
jp
mov
or
pushf
inc
in
lcall
outsl
fidivrs
dec
leave
and
inc
je
and
addr16
lcall
sub
pop
xchg
cmp
sbb
test
imul
data16
mov
mov
mov
xlat
mov
out
out
scas
and
les
icebp
dec
sub
inc
addr16
push
mov
xchg
pop
popa
inc
into
lret
sbb
pop
cwtl
pop
cmp
push
inc
mov
dec
popa
push
les
adc
loopne
or
adc
add
in
rolb
add
cmc
pop
dec
xor
lret
push
fcoml
mov
sub
push
jge
xor
js
cmp
jo
ss
and
mov
xchg
pop
lds
dec
lcall
push
cltd
jbe
mov
xchg
insb
inc
sti
jge
and
outsl
pop
jecxz
fcoml
push
inc
pop
jnp
aam
adc
imul
repz
push
lds
bound
jge
cs
aas
outsl
das
testl
pop
sbb
icebp
mov
test
sub
mov
adc
pop
sub
aam
push
sub
inc
rcrb
xchg
fisttpl
cltd
insl
daa
push
add
cmpb
mov
mov
fyl2xp1
push
inc
adc
adc
enter
mov
or
out
push
sbb
inc
mov
inc
push
sub
mov
or
ljmp
repnz
das
sarb
adc
es
sub
mov
stos
pop
int
jg
test
scas
pop
mov
hlt
and
ficoms
in
mov
je
mov
insb
xor
mov
lcall
jle
int3
aam
mov
dec
adc
nop
pop
lds
cmp
addr16
sub
add
stos
lea
xchg
dec
jne
mov
push
aaa
das
and
adc
jo
jg
pop
int
outsl
nop
push
pop
mov
stc
mov
mov
xchg
xchg
mov
dec
fwait
mov
filds
push
enter
add
sbb
clc
fdivr
inc
push
push
lods
leave
jb
pushf
mov
add
jne
pop
out
lret
adc
pusha
xor
push
xchg
fldt
cmp
inc
cmp
and
mov
dec
iret
fwait
dec
movsl
movsl
jmp
jg
jmp
push
jmp
repz
mov
xor
jg
inc
je
aaa
je
xor
negb
sub
jb
mov
sbb
or
fnstcw
pop
lock
mov
test
mov
jns
pop
jnp
xor
cltd
cltd
shlb
xchg
xor
sbb
mov
jne
push
adc
jo
and
push
aaa
jle
std
mov
hlt
jno
pop
icebp
adc
scas
cmpsb
fsubs
jmp
repz
cltd
sti
or
dec
cmpsb
stc
inc
or
sahf
fcoml
clc
xchg
lods
mov
cltd
dec
aam
xchg
test
cmp
push
add
jo,pt
outsl
mov
inc
mov
lods
ljmp
jp
scas
mov
cmp
pusha
dec
outsb
es
imul
push
scas
inc
add
jae
or
testb
fwait
jo
out
jo
fs
dec
in
jecxz
aas
inc
aad
test
cmp
and
ret
jg
xchg
inc
ljmp
pop
ficompl
fcmovb
inc
daa
xchg
test
addl
jns
divb
jmp
testl
push
lcall
xchg
pop
sti
xor
gs
sbb
pop
mov
mov
fsub
jle
ds
popf
add
mov
imul
movsl
bound
outsb
pop
das
xor
test
ret
mov
sti
mov
stos
pop
cmp
adc
jg
out
and
jge
in
bound
and
or
ljmp
outsb
push
dec
mov
sub
ja
loope
jb
dec
xchg
movl
dec
jno
call
mov
and
jbe
and
call
and
jae
lds
out
movsl
imul
mov
xlat
xchg
ja
adc
jmp
lret
jb
jbe
je
jo
fsubrl
mov
adc
mov
pop
pop
xchg
leave
jl
mov
movsb
dec
rolb
adc
jmp
inc
mov
cmp
test
rcrl
mov
and
iret
pop
adc
add
shr
inc
or
xor
cmp
or
test
or
int3
sbb
js
xchg
push
call
sbb
imul
fnsetpm(287
or
imul
inc
inc
push
inc
xchg
repnz
bound
fwait
mov
fimuls
xor
pop
adc
push
jl
or
cmpsb
cltd
jns
pusha
push
idivl
adc
pop
pop
xor
and
enter
xchg
dec
jle
sub
ret
loope
cmp
daa
pusha
xchg
sub
aas
and
movsl
push
push
adc
shll
mov
dec
pop
fwait
movsl
dec
pop
or
imul
mov
dec
cs
xchg
cmp
push
sub
outsl
mov
sbb
movsb
lds
jb
ljmp
fs
mov
in
push
shrb
inc
call
fcmovnu
out
jb
add
adc
hlt
cmpsb
push
stos
mov
outsb
and
dec
mov
xchg
int3
mov
xor
loop
std
stos
and
adc
push
push
pushf
pop
xor
push
ss
mov
mov
aaa
cmp
call
dec
out
dec
pop
add
push
cmp
push
stos
addl
dec
mov
popf
push
clc
leave
dec
jno
fcmovbe
add
xchg
and
lea
pop
jo
int3
in
jnp
cmp
mov
pop
xchg
lahf
push
pop
mov
shrl
push
sub
rolb
dec
mov
push
es
icebp
outsl
das
ljmp
fwait
movsl
or
sub
cmpb
mov
mov
je
clc
mov
mov
cld
lea
adc
sbb
inc
les
je
loope
sub
out
mov
jmp
push
addr16
popf
sbb
xchg
pop
fdivr
cmpsb
icebp
sub
dec
insl
bound
add
add
shlb
lahf
bound
jle
mov
and
popa
push
mov
and
sti
inc
inc
xorl
jmp
pop
inc
test
push
xchg
sbb
testl
sahf
adc
sub
sar
push
xor
mov
jnp
jbe
xchg
pusha
mov
adc
push
into
jmp
jg
ds
out
and
sub
pop
mov
popf
test
enter
jnp
xchg
adc
subb
push
pop
jmp
in
inc
in
or
and
cmp
inc
inc
arpl
mov
shl
dec
cld
adc
outsl
sub
outsl
bound
inc
jp
dec
outsb
pop
jno
xchg
jno
cmp
inc
dec
ficompl
push
dec
es
ret
jae
lods
lret
mov
xchg
out
mov
std
pop
dec
std
cmpsl
aad
insb
movsb
sbb
lea
and
xadd
fcoml
loopne
stos
test
dec
les
adc
movb
or
or
adc
sbb
clc
ja
cmpsl
cmp
jb
cmp
mov
xchg
jnp
insl
jae
dec
inc
xor
imul
xor
in
lcall
push
jb
sub
fwait
mov
push
jmp
lods
std
insl
rclb
and
es
mov
pop
mov
rcl
aam
pusha
stos
jno
jmp
jp
adc
dec
scas
cmp
aam
js
push
xor
mov
cmp
sbb
dec
dec
imul
inc
cmp
test
lret
fbld
sbb
std
pop
lret
addb
push
sub
out
sar
xor
enter
xor
mov
cmp
popa
jno
fs
mov
ljmp
cwtl
adc
test
cmp
test
xor
sub
test
pusha
cmpb
int
inc
add
pop
and
push
inc
fs
in
mov
out
xor
in
jbe
pop
into
lea
dec
inc
ret
sub
stos
fnstsw
mov
jns
stos
xchg
adc
ljmp
fcomip
sub
mov
inc
movsl
bswap
iret
icebp
or
add
pop
stos
push
xchg
ds
cmp
jne
into
ljmp
mov
or
mov
in
out
jns
push
test
icebp
mov
rcll
dec
addb
jl
lret
subl
xor
pop
fisubrs
sbb
pop
push
adc
sbb
movb
pop
add
lods
es
push
xchg
mov
dec
pop
inc
cwtl
loop
inc
xchg
jnp
pop
lret
xor
push
call
adc
push
and
mov
cmp
scas
xor
in
lahf
xor
fnstenv
mov
dec
divps
repz
addl
push
mov
xchg
push
jmp
test
shrl
out
add
sub
pop
push
jne
fcmove
xor
nop
dec
insl
shll
jg
push
adc
negb
scas
pushf
inc
cmp
sub
sti
mov
and
pop
pop
je
imul
add
pusha
fcomip
fildl
jb
inc
sub
mul
xchg
fisubs
in
movsl
mov
ljmp
stos
mov
cmpb
and
roll
and
daa
mov
ret
test
or
js
ss
in
xchg
lret
js
xchg
add
mov
lcall
jp
out
dec
pushf
repz
mov
in
test
pop
dec
dec
adc
mov
scas
leave
rcrb
enter
add
pop
jge
in
cmp
xchg
or
or
popa
faddl
push
mov
mov
mov
push
lea
lea
js
cs
je
jno
popa
imul
pop
mov
jmp
jecxz
xchg
daa
ss
out
or
xchg
or
sub
adc
and
mov
rcrb
aad
or
arpl
movl
lret
mov
sbb
inc
dec
mov
pop
mov
lret
sub
sbb
push
inc
lcall
pushl
add
cmpsb
in
inc
rorl
imul
jecxz
rcrb
int3
xchg
sbb
lret
js
inc
or
push
xchg
sbb
test
sub
pop
mov
mov
mov
xchg
cmp
and
or
pop
xor
cmp
stos
dec
lods
dec
mov
in
xchg
cs
xchg
mov
das
sti
cs
mov
stc
je
rorb
imul
pop
sqrtps
dec
loopne
pop
push
pusha
mov
xchg
movsb
repnz
rorl
icebp
stc
mov
xor
sti
jo
ja
std
or
push
in
pop
jg
adcb
mov
xor
sub
sbb
outsl
add
or
push
push
cmp
jmp
loop
push
in
lcall
jo
xor
bound
cmp
xchg
pop
cmp
or
pop
dec
cmp
out
dec
xor
pop
jnp
shlb
data16
push
das
shll
jb
in
mov
rclb
cmp
daa
adc
jg
pop
lods
pop
xor
negb
sbb
popa
sbb
sub
lock
pop
pop
push
mov
mov
and
inc
repnz
call
sti
in
test
xchg
inc
jo
adc
cs
cmc
xor
lods
jge
ja
xorb
fwait
xor
rolb
iret
cld
out
ret
jmp
or
ljmp
mov
add
xor
xor
mov
adc
mov
shl
test
iret
pop
push
xchg
mov
fs
xchg
pusha
movsl
push
std
xchg
pop
xchg
push
scas
xor
movl
ret
gs
ds
pop
cmp
inc
dec
adc
iret
dec
mov
aam
mov
jmp
jnp
loope
imul
cmp
lret
ret
xchg
movsl
dec
mov
in
jge
xchg
and
jnp
pop
xor
xchg
inc
jle
jge
and
fs
jecxz
or
sub
dec
ficoms
addl
and
inc
or
loope
and
scas
daa
adc
add
stos
dec
vpminsw
jmp
icebp
repz
sbb
adc
xlat
jmp
pop
mov
xor
adc
sbb
mov
push
jo
mov
sub
cmp
xchg
scas
std
inc
sbb
divb
push
dec
nop
inc
sti
popa
mov
stos
jl
pop
inc
dec
adc
int3
stos
mov
xchg
sti
xor
insb
dec
push
mov
add
mov
arpl
stos
cld
add
rorl
fnstsw
sub
push
push
sbb
ljmp
push
xor
mov
sbb
mov
mov
into
or
mov
jno
movsb
dec
xor
cli
cmp
and
imul
in
adc
lret
or
xorb
adc
and
mov
bswap
cmpsb
sub
mov
inc
mov
or
mov
int
int3
outsb
cwtl
decl
int
xor
or
jle
and
xor
inc
ss
and
pop
mov
dec
test
mov
inc
je
pop
mov
fisttps
dec
mov
cwtl
shll
js
int
out
inc
cs
mov
sbb
xchg
pop
mov
stos
jecxz
mov
scas
sub
int
lods
jae
in
daa
cmp
pop
loop
mov
lret
add
mov
jne
fdiv
test
or
pop
mov
adc
sub
push
cs
sub
add
push
cmpsl
movsb
mov
movsl
xor
xlat
call
and
mul
shll
lahf
int3
imul
push
jnp
adc
sub
inc
jg
mov
jp
aas
test
out
js
lcall
pop
data16
jp
js
movsl
lret
xchg
rclb
xchg
add
xchg
pop
jb
fnstsw
ja
in
sbb
out
inc
mov
mov
scas
mov
and
inc
add
xchg
scas
pop
jp
mov
adc
test
jge
push
inc
pusha
cltd
xchg
out
inc
hlt
sub
dec
fwait
jmp
popf
aad
pop
lods
pop
clc
lea
sub
and
mov
daa
pop
push
xor
icebp
mov
sbb
lds
and
jns
xchg
adc
lock
push
mov
popf
cld
jns
sub
insl
dec
popa
xor
imul
iret
inc
lock
call
fcoms
cmp
ds
push
jl
mov
jae
pop
mov
cmpl
hlt
test
lret
fiaddl
add
sub
add
pop
xor
sbb
in
adcb
add
add
lret
daa
rcrb
sbbb
iret
imul
or
cltd
pop
addr16
inc
and
ss
xchg
pop
and
pop
cli
divb
pop
sub
or
dec
stos
sbb
push
or
enter
fcompl
sti
inc
into
dec
fs
outsl
xor
enter
or
mov
loopne
mov
mov
xor
adc
xor
mov
dec
inc
fidivrl
or
pop
scas
pop
jecxz
lods
xlat
shl
mov
scas
insl
pusha
aas
loop
loopne
ja
or
jne
xchg
sbb
push
into
dec
fisttpll
mov
jmp
sub
add
mov
imul
xor
cmpsb
push
vpmaddwd
loope
and
out
popa
lret
push
push
sbb
js
rclb
jne
mov
out
xchg
ud0
in
ret
push
cli
inc
xor
push
mov
or
cmc
push
cli
jmp
cli
xchg
test
dec
xchg
mov
jno
jmp
das
nopl
cmp
lods
jno
sub
out
xor
mov
sbb
int
mov
add
sbb
gs
pop
mov
xchg
sbb
mov
push
aad
cmpsb
pop
inc
cld
jp
and
icebp
push
ret
cld
xlat
jle
aaa
pop
daa
pusha
pop
stos
fucomip
sbb
bound
pop
inc
sahf
sti
xlat
cwtl
mov
sqrtps
mov
repnz
popf
add
inc
xor
mov
fists
inc
test
rolb
out
mov
jl
enter
scas
mov
sub
movsb
push
mov
push
imul
cmpsb
cmc
adc
cmpsb
clc
jo
or
xchg
shl
stos
imul
shl
dec
dec
aam
and
mov
jge
sbb
fisttpl
mov
enter
ljmp
cs
pop
clc
rcll
cmp
pop
shl
xchg
jmp
test
outsl
fs
shlb
dec
rcrb
shlb
xor
test
add
xchg
loope
sub
fwait
or
and
jp
paddsw
and
int3
mov
frstor
xchg
cltd
pop
inc
xor
lock
adc
fs
fsubs
cmc
adc
mov
sahf
cmp
cmp
in
imul
and
in
call
xchg
lahf
imull
into
adc
or
rclb
ret
ja
stos
mov
stc
mov
cmpb
in
push
pushf
test
xchg
push
or
mov
int
cmc
popa
xor
push
jle
xlat
jmp
popa
adcb
ret
scas
mov
sbb
outsb
cmp
mov
jo
and
sbb
cwtl
bound
outsb
inc
mov
lds
test
in
xchg
mov
int
arpl
inc
ljmp
or
mov
ret
mov
incb
cmp
and
data16
inc
mov
stc
inc
int3
repz
and
pop
mov
push
arpl
popf
idiv
adc
es
xchg
jae
dec
stos
icebp
mov
adc
ss
mov
jmp
cmpsl
pop
mov
testl
xor
jge
jg
sbb
fidivl
sub
cwtl
ret
shr
daa
inc
add
fnstsw
pop
push
mov
inc
mov
loop
adc
xor
cmp
loope
jl
sbbl
mov
inc
push
orl
mov
leave
or
test
je
and
mov
add
mov
add
test
jno
sub
push
sbb
repz
test
inc
mov
mov
loopne
jge
outsb
dec
in
adc
mov
rcrb
insl
lea
fidivrs
xchg
mov
push
lods
xor
rcrl
addr16
bound
pop
mov
push
mov
jb
imul
scas
inc
cmp
outsl
fimuls
push
jg
sub
jo
in
jae
mov
pop
loope
mov
int3
sbb
out
xor
dec
cmpb
and
cmpsl
mov
pinsrw
jp
and
sub
out
cmp
push
dec
sub
inc
rolb
lret
mov
push
xchg
mov
ss
iret
stos
test
jno
or
sub
ss
mov
push
xchg
test
je
ud2
jmp
fistpll
sbb
pusha
stc
icebp
mov
sub
divl
inc
test
sub
pusha
lcall
inc
mov
and
or
jbe
mov
xchg
or
pop
pop
pusha
jo
jb
push
jecxz
adc
idivl
popf
or
loop
dec
imul
ljmp
sar
xchg
inc
mov
popf
fcomip
fisubrl
sub
xor
lcall
jge
mov
mov
rorb
popa
stc
ffree
fstpt
xor
inc
jne
bound
xor
nop
push
and
lods
gs
filds
jb
cmp
jge
sar
or
lcall
pop
nopl
jle
jg
lock
and
xchg
subb
aas
popa
push
lods
adc
test
or
jnp
out
std
sbb
xor
mull
inc
mov
out
out
inc
or
mov
lret
inc
imul
subb
xor
not
jno
xchg
leave
cmovo
pop
push
or
sbb
adc
inc
push
mov
cltd
std
lret
jbe
and
aas
pop
cmp
lds
add
dec
pushf
mov
mov
sbb
inc
dec
loope
xchg
cmp
pop
test
inc
lds
xor
imul
mov
or
int3
test
inc
mov
aad
outsb
lods
cmpb
test
stos
js
imul
mov
jnp
popa
movsb
add
add
cwtl
xlat
push
xor
cmp
into
add
pop
sbb
add
les
stos
out
push
mov
adc
addr16
push
and
jge
jge
cwtl
mov
addl
cmpsb
rorb
pop
pop
sahf
lcall
shll
cmpsb
ret
mov
sbb
aam
mov
cmp
lock
nop
lds
sub
in
jnp
mov
jo
cltd
ficompl
imul
mov
cmp
les
pop
imul
cmp
insl
rcrb
out
jno
mov
aaa
hlt
adc
cs
pop
leave
add
sub
aas
mov
loope
cmp
ja
jne
js
scas
rorb
or
adc
mov
mov
bound
mov
ljmp
lds
lock
cmp
scas
adc
push
gs
mov
jmp
inc
sbb
ss
loope
inc
iret
test
sti
inc
loop
add
adc
fdivl
stc
shll
inc
clc
loop
out
adc
movsl
bswap
jg
test
mov
test
in
test
lahf
dec
sarl
push
sub
aam
test
sub
dec
dec
xor
stc
sbb
int3
push
pop
sbb
and
popa
xor
xchg
or
adc
arpl
shl
orl
icebp
xchg
fmulp
dec
fisubrl
repz
xchg
jmp
int
inc
inc
ss
push
test
push
data16
lea
jmp
adc
sub
fmuls
xchg
xchg
or
mov
in
cmp
int
fidivl
jb
lret
lods
pop
aad
xor
pushf
sub
repz
or
and
lock
sub
les
mov
sbb
mov
movsb
push
jns
xchg
and
insb
hlt
push
imul
adc
dec
int
jbe
mov
xchg
add
xchg
jle
jmp
std
jnp
jg
and
or
cmp
xchg
loop
es
rep
or
fdivs
rolb
cmc
jge
stc
shll
mov
stos
shrb
scas
push
fnstsw
insl
sub
sub
stos
lret
and
fcomi
push
rorb
je
das
sbb
cmc
sub
xor
pop
rcrl
adc
insb
jmp
cmp
repz
and
movsb
xor
addr16
les
cmp
aas
pop
jmp
adc
cmp
mov
icebp
into
pushl
xlat
pop
xor
mov
or
lds
mov
push
adc
lea
ds
jg
jnp
ljmp
and
fisubs
test
mov
mov
out
add
lret
dec
imul
int3
jne
sbb
dec
inc
xchg
out
jns
inc
jp
in
stc
push
ret
push
sub
mov
inc
addr16
mov
inc
mov
push
outsb
jno
loop
fs
push
das
xor
iret
fisttps
jae
jle
push
leave
mov
dec
jb
call
sbb
cmp
pop
js
mov
xchg
outsb
jecxz
sbb
mov
xchg
jb
mov
cltd
roll
mov
or
das
imul
push
mov
jb
jns
jp
stc
mov
inc
and
sub
add
rcrb
imul
pop
inc
sub
imull
push
and
cld
orb
shll
dec
lahf
and
movsl
jl
or
jecxz,pt
sub
out
xchg
pop
inc
jmp
jb
and
fiaddl
adc
dec
stc
bound
inc
push
add
icebp
inc
jp
cmp
pop
jno
hlt
fidivrl
xchg
sbbb
add
sbb
outsl
mov
notb
sbb
sti
scas
or
js
repz
pop
mov
jle
pop
pop
xlat
aam
subb
jl
mov
mov
mov
jnp
or
dec
insl
enter
ret
ss
decb
sub
rorb
aam
push
gs
and
int3
add
scas
xor
in
push
leave
jnp
andl
std
push
adc
add
dec
jae
lcall
sub
push
mov
sub
add
mov
ds
adc
je
movsl
dec
ds
popa
roll
jbe
jl
mov
pop
clc
arpl
dec
call
adc
jp
mov
sub
in
dec
fcmove
and
inc
rolb
xchg
or
pop
cmp
ss
pop
cwtl
mov
std
lcall
mov
adc
outsl
cmp
xchg
pop
dec
leave
jge
inc
ds
push
dec
popa
ret
mov
add
push
xor
push
insl
call
addr16
bound
jns
popf
add
stos
push
mov
cld
addr16
adc
push
and
push
fdivrs
xchg
les
lds
mov
inc
pop
or
fwait
push
out
fsubr
not
fcmove
or
gs
ffreep
cmc
push
inc
ds
fs
aas
mov
push
xor
dec
lret
adc
xor
mov
jg
push
mov
aaa
dec
and
das
lahf
lock
in
jmp
inc
pop
in
pop
arpl
cmp
fists
inc
xchg
cmpsl
es
sub
or
push
push
lahf
pop
pop
call
jno
das
dec
je
cmpsl
pop
popf
jo
insb
fidivrs
iret
mov
pop
ljmp
stc
or
or
xor
cmc
inc
cmp
xchg
sub
sbb
push
and
or
pop
adc
pop
push
fincstp
pop
ljmp
cmpsl
mov
fidivs
jnp
push
stos
stos
xchg
sti
mov
ret
pop
es
jmp
push
in
orl
bnd
adc
mov
or
in
gs
shrl
push
pop
or
jnp
pop
or
or
mov
pop
movl
inc
insl
mov
mov
mov
cmp
mov
pop
pop
mov
loopne
aaa
test
addr16
lret
inc
ror
and
cmp
roll
pop
push
js
loopne
nop
push
insl
arpl
inc
push
mov
gs
xchg
mov
push
jl
mov
and
inc
mov
or
xchg
mov
jb
pop
mov
aad
sahf
jbe
movsl
mov
sub
sbb
test
movsl
pop
dec
loopne
mov
jmp
push
mov
push
int
mov
arpl
add
mov
cwtl
je
das
push
xor
mov
sbb
fldcw
popa
imul
xor
dec
jne
das
push
inc
test
nop
scas
adc
aas
and
popf
jb
inc
lea
adc
sub
nop
sbb
push
aad
inc
jg
mov
xchg
and
sub
les
mov
and
jo
mov
push
mov
push
xchg
movsl
mov
addr16
leave
sub
ret
and
dec
hlt
popf
movsl
xor
xor
sbb
cmpl
lcall
fisttpll
xor
mov
arpl
loopne
testb
js
sub
nop
push
pop
repz
mov
mov
repz
xlat
dec
repz
xchg
pop
mov
mov
xchg
in
fs
out
sub
dec
inc
adc
out
or
jge
faddl
hlt
insl
repnz
scas
push
xchg
repnz
pop
push
jl
stc
mov
push
aas
and
jp
out
xchg
int
cmpsb
sub
jg
sbb
push
and
jae
mov
sbbl
inc
add
out
sub
movsl
jmp
sbb
gs
push
fdivrs
test
dec
bound
push
jp
xchg
xchg
mov
mov
fwait
int3
in
xchg
test
inc
mov
ljmp
pusha
mov
addl
jge
cmp
push
testb
pop
sub
shrb
test
in
lds
jle
and
inc
popa
xor
ret
icebp
insl
scas
jle
pop
addb
out
loopne
mov
xchg
sahf
repz
mov
int3
dec
xor
jl
pop
cmc
cwtl
and
loop
push
sub
jns
dec
rorl
bound
cwtl
negb
cld
call
mov
jno
int3
ret
and
push
loop
and
sub
popf
xchg
and
dec
pop
inc
mov
movsl
sarb
mov
and
imul
jns
sbb
jle
sub
jmp
das
pop
mov
jb
jge
push
push
or
jns
adcb
and
pop
cmp
in
shrd
cmpsb
inc
jae
test
push
inc
xor
inc
aaa
lods
jle
shll
cmpb
out
jb
icebp
mov
or
mov
or
add
add
lods
jb
fsubrs
mov
ja,pt
clc
push
pusha
mov
data16
pusha
xchg
movsl
inc
leave
pop
int
jg
movsb
or
push
pushf
rolb
mov
aam
iret
sahf
daa
mov
rorb
mov
lods
cmp
imul
lahf
push
cmc
fwait
mov
adc
add
enter
mov
xor
mov
fisubl
xor
loope
mov
jecxz
imulb
push
enter
push
pop
jae
inc
xchg
and
ds
shll
int
stc
push
add
mov
cmpsl
or
insl
arpl
dec
mov
inc
pop
jne
data16
push
sub
loop
les
cmp
pop
pop
push
jmp
in
lods
xchg
lcall
jo,pn
bnd
fistps
fcoms
xchg
inc
fmull
jne
jbe
mov
fdivrl
adc
int3
sbb
and
sub
xor
jl
xchg
shll
ljmp
movsl
test
push
dec
or
xor
aam
jle
add
mov
sbbl
out
lods
iret
adc
jne
mov
push
rol
push
test
arpl
mov
sti
fimull
loopne
push
sbbl
lock
adc
popa
mov
dec
leave
inc
adc
jecxz
stos
sbb
mov
aas
jle
in
xchg
loop
fwait
mov
divl
mov
repnz
or
flds
pop
mov
mov
ja
test
loopne
pop
pop
cwtl
pshufw
rorl
mov
xor
or
adcl
inc
xor
cltd
add
xchg
mov
jnp
mov
add
outsb
or
fstpt
lahf
dec
mov
mov
andl
cmp
mov
pop
jns
cs
cmp
mov
lcall
add
psubusw
pop
or
stos
subb
enter
adcb
sbb
xchg
mov
arpl
loop
xor
fistpl
test
es
mov
icebp
or
cmp
jne
pop
mov
int
cmovb
jbe
sbb
daa
leave
pop
mov
sub
aam
test
inc
dec
iret
ret
jnp
push
shlb
mov
in
lods
movsb
cmc
stos
inc
adcb
call
add
insl
inc
clc
pop
mov
imul
stos
push
xor
and
sub
outsb
or
fs
xor
inc
insb
movsl
in
dec
inc
sbb
xchg
std
add
mov
test
addr16
cltd
mov
xchg
cltd
lock
fwait
jge
les
mov
xchg
jnp
subb
xor
mov
or
imulb
cmpsl
sti
pop
push
or
and
xor
xchg
aaa
cmp
cs
ficompl
push
lea
cld
ror
arpl
fstps
and
int3
cli
mov
or
and
cmpsl
fs
sbb
outsl
lahf
insb
scas
mov
sti
xor
testb
push
fbstp
ljmp
in
fdiv
jmp
les
in
xchg
jg
add
test
xchg
mov
push
jnp
aaa
sahf
aam
ror
cmc
lea
jg
sub
adc
iret
xor
outsb
aad
sti
nop
mov
pop
xchg
outsl
and
xchg
je
or
js
and
xor
fists
cmp
adc
adc
cmp
pop
fs
loop
enter
sub
or
aad
xchg
lret
push
push
xor
ja
and
rorl
sarl
sub
lahf
xchg
imul
xor
out
add
movsb
js
mov
xchg
push
dec
jo
data16
into
fdivrs
dec
sahf
fbstp
jge
test
xchg
or
push
cmp
adc
test
xchg
sub
xchg
sbb
loop
cmp
push
pop
push
imull
enter
mov
gs
fsubs
repz
jbe
mov
adc
sahf
sub
mov
or
gs
push
dec
and
mov
dec
dec
push
jmp
aad
cmp
cmp
enter
fdivs
sbb
mov
push
add
pop
notl
dec
negb
cli
mov
cltd
jle
add
bound
out
inc
dec
pop
icebp
xor
xor
sbb
or
sbb
xchg
stos
arpl
out
pop
test
jp
dec
in
dec
push
bound
in
cmp
push
mov
fs
pushf
push
rclb
or
lahf
les
adc
out
sub
pop
and
in
roll
shlb
filds
inc
imul
addr16
adc
xchg
sbb
je
and
lods
push
dec
adc
dec
mov
jbe,pt
leave
inc
in
lock
add
pop
inc
test
sbb
mov
lahf
sbb
or
movsb
jno
adc
sbb
mov
xchg
je
xchg
sub
jp
imul
dec
shlb
mov
or
mov
mov
pop
add
sub
xor
fldcw
loopne
add
mov
adc
loopne
mov
xchg
mov
jecxz
adc
in
xor
lock
fwait
mov
shl
cli
adc
cmc
inc
popf
orl
dec
js
jno
push
cmpsl
push
outsb
ret
mov
hlt
loope
outsl
xchg
pop
sbb
out
leave
xchg
andb
loop
inc
jno
pop
add
sbb
pop
loop
adc
int3
aas
push
movsb
adc
subb
add
sub
pop
ja
cmp
test
popa
sbb
ja
and
icebp
dec
jno
icebp
js
sub
mov
mov
into
pop
into
test
cmp
aaa
push
dec
cmpsl
into
fimull
jl
dec
push
popf
dec
test
push
jo
jno
fisubrs
faddl
rorl
sti
mov
in
jg
shlb
icebp
mov
call
inc
sub
cltd
cmp
std
sbb
or
icebp
mov
mov
fs
mov
das
mov
adc
repnz
mov
jp
mov
rcr
add
or
dec
enter
sub
dec
push
addr16
movsb
movsl
orb
push
jne
clc
mov
ret
push
and
dec
scas
mov
and
pop
mov
popf
aas
enter
xchg
xlat
outsl
pop
xchg
stc
jnp
ret
mov
jae
dec
inc
push
xor
ja
hlt
jl
outsb
mov
filds
movsl
dec
into
pusha
ljmp
cmp
inc
jno
movb
dec
push
into
mov
subb
incl
repz
adc
adc
mov
cwtl
shll
lahf
ds
mov
div
adc
fisttps
movl
cmc
out
fnsave
xchg
cmp
inc
lahf
leave
pop
iret
dec
icebp
pop
sub
push
add
cld
dec
pop
ret
scas
les
scas
out
and
ret
sbb
lahf
mov
ret
and
cmpsl
out
clc
int
xor
push
mov
push
jae
add
nop
xor
add
sarl
push
inc
pop
xchg
pop
cmpl
or
fsubs
dec
xor
in
sahf
pop
loope
or
outsl
xchg
push
adc
sub
jg
nop
out
mov
and
or
push
cmc
rcll
cltd
mov
aam
pusha
psubusb
xor
and
xor
and
mov
jns
test
push
and
test
imul
adc
jnp
sbb
jne
jl
mov
add
mov
sahf
les
loope
adc
hlt
adc
xchg
push
sarl
pop
jl
rcrb
xchg
in
xor
xor
mov
movl
xor
daa
push
in
movl
push
add
ds
cmp
repz
aas
hlt
arpl
xchg
pop
jne
cmpsl
cli
dec
rcll
icebp
mov
out
or
cwtl
out
dec
adc
insb
and
gs
fcmovnbe
ja
rcl
sbb
dec
inc
push
fstps
inc
cwtl
mov
mov
jne
xor
cmpsb
ret
adc
mov
fstl
jmp
add
pop
mov
push
sbb
add
pop
adc
dec
mov
or
pusha
test
rorl
or
icebp
xchg
sub
push
mov
adc
arpl
test
lock
loope
lcall
out
add
inc
dec
add
repz
jns
call
pop
out
push
lret
popa
xor
loope
fisubl
mov
dec
stos
jecxz
enter
push
sahf
loop
inc
ss
es
ret
mov
adc
div
insl
je
mov
dec
js
insb
iret
jo
sbb
fadds
jne
mov
hlt
mov
jg
pop
ret
dec
hlt
or
scas
xchg
cwtl
scas
cmp
and
push
or
imull
sbb
mov
fisttpl
cmp
std
ret
pop
lock
insb
jne
shl
mov
ss
push
loope
add
pop
mulb
xor
or
mov
insb
ds
popa
add
addr16
mov
sub
stos
lret
jp
sarl
sub
jle
dec
repz
loopne
or
and
pop
in
mov
ss
cmp
into
loope
or
test
xor
mov
dec
leave
adc
inc
jb
in
out
mov
out
sbb
push
lods
sub
push
jge
sub
push
lret
jl
aam
jge
mov
add
xor
inc
pop
movsb
add
jae
loope
vpminsw
movsb
sarl
cmp
and
addr16
ret
mov
sbbl
orb
addr16
add
pop
mov
incl
loopne
add
in
jecxz
pop
lds
les
lcall
loop
popf
add
shlb
pop
das
insb
iret
adc
xchg
inc
cld
scas
or
movsb
and
test
jecxz
dec
insl
ljmp
xchg
and
in
out
pop
int
lods
faddl
sbb
sbb
sbb
inc
sahf
test
sarl
test
jb
xchg
push
jle
iret
mov
lcall
aad
jmp
outsl
cmpsl
pop
xchg
lods
adcl
dec
popa
mov
les
pop
loopne
js
adc
dec
leave
dec
push
sub
popf
ja
ret
xorl
pop
arpl
scas
stos
push
loop,pn
xchg
mov
or
jmp
inc
sub
mov
and
mov
call
je
mov
out
cmp
adc
mov
xor
call
lea
cmp
mov
lock
push
insb
sub
stc
xor
and
in
add
xchg
sbb
test
mov
daa
mov
ret
or
cli
dec
xchg
pop
inc
xor
add
fs
mov
rorb
jno
lret
loop
stc
sahf
xor
out
out
mov
out
sbb
aaa
dec
lahf
into
sbb
xchg
sub
xorl
xor
jno
ds
cltd
lock
mov
mov
std
inc
fbld
into
adc
fs
lea
inc
mov
data16
push
stos
jae
mov
mov
fldl2t
mov
pop
popf
es
sub
xchg
pop
insb
jae
daa
jmp
fcom
jae
inc
mov
clc
xchg
pop
and
mov
ds
cwtl
or
mov
push
stc
pop
jl
push
test
pop
clc
cmp
mov
add
mov
sub
jmp
jmp
mov
and
scas
xor
lock
cmp
push
imul
mov
cld
cmp
aad
loop
dec
adc
jbe
xlat
int
dec
leave
add
cmpb
sub
leave
leave
xchg
notb
nop
mov
inc
pop
repnz
test
out
pusha
out
int3
test
aam
pop
call
pusha
xor
and
test
add
xor
pusha
cs
in
pop
aaa
and
hlt
push
mov
mov
pop
pop
mov
out
test
in
out
and
mov
lods
pop
jnp
lcall
jb
xor
jo
movq
xor
add
inc
imul
cmp
cmp
jle
inc
jnp
pop
loop
sub
inc
insl
add
mov
in
dec
es
lods
les
mov
lods
ret
mov
lea
mov
adc
sub
pop
sub
pop
add
arpl
xchg
test
orl
call
mov
adc
fildll
lahf
adc
jge
inc
jno
aas
jbe
loope
jg
mov
sub
or
loop
xor
adc
fstpl
add
lea
sbb
xchg
or
gs
push
and
inc
sbb
sti
adc
stos
jns
add
push
enter
sub
add
mov
sub
pop
in
adc
loope
test
cwtl
sub
outsb
enter
xor
lea
ds
fcoml
cli
inc
jle
jl
xor
aas
cwtl
cwtl
aaa
sarl
mov
cmp
lods
xor
fs
ret
adc
aam
out
pop
daa
mov
hlt
mov
imul
jae
roll
aas
pop
and
pop
aas
jo
add
xchg
mov
adc
dec
js
ljmp
cmp
fisubl
mov
pop
sbb
ss
fbld
push
mov
iret
clc
call
ror
sub
mov
xor
aad
and
pusha
jae
adc
in
xchg
je
jbe
mov
push
cwtl
subb
push
push
aad
mov
sbb
jno
sbb
xor
mov
xor
fwait
shll
in
int
dec
xor
adc
outsb
leave
ss
add
mov
cli
movb
jno
push
mov
pushf
mov
cltd
ret
mov
lds
push
pop
sbb
ds
stc
jmp
outsb
push
pop
add
gs
inc
shlb
jo
fstps
mov
sahf
test
repnz
cmpsb
dec
push
imul
stc
in
insb
jne
insb
das
jnp,pt
cld
cmp
xor
cmpsb
mov
test
mov
mov
adc
dec
jne
insl
fisubs
xchg
inc
ficompl
mov
mov
xorb
out
sub
mov
shlb
mov
cld
inc
enter
icebp
ljmp
lock
mov
daa
mov
mov
lock
push
xlat
dec
mov
fsubl
pop
mov
cmp
xorl
inc
mov
es
ror
fwait
std
out
and
ja
mov
xor
arpl
mov
insl
in
rcrb
lcall
int
ret
out
aaa
or
or
add
mov
cwtl
mov
cmp
or
movl
jo
mov
cmp
mov
dec
in
adc
mov
sub
outsb
and
xchg
dec
cmp
adc
lret
aaa
pop
jecxz
cmp
xlat
pop
in
xor
inc
mov
aaa
movsl
icebp
push
jl
mov
push
lock
in
cmp
clc
push
mov
in
les
orb
cwtl
sbb
mov
add
aam
xchg
mov
movsb
xor
out
xor
leave
es
mov
sbb
xchg
stc
leave
insl
ret
test
sbb
push
rorb
data16
lds
pop
dec
cmp
out
notl
pop
lock
xor
and
push
adc
dec
xor
sahf
pop
dec
lcall
inc
inc
inc
xor
pop
lcall
dec
xchg
xchg
sub
xor
dec
mov
lret
imul
sahf
xor
aad
cmc
adcb
adc
jne
push
push
outsb
jge
dec
outsl
or
jmp
push
lock
movsl
imul
mov
sbb
push
lods
aam
frstor
std
repz
sbb
mov
jmp
test
pop
in
addr16
out
fsubrs
dec
and
leave
sub
or
aam
xchg
dec
sub
mov
cmpsl
or
cmp
mov
and
rorl
xor
aas
mov
sbb
xchg
fsubrs
into
out
mov
pop
dec
cld
xchg
flds
fisttpl
mov
and
add
xchg
sti
adc
popf
imul
ljmp
or
aaa
ret
push
adc
insl
iret
and
cld
mov
test
ljmp
imul
and
xor
imul
inc
jnp
sub
mov
or
call
and
pop
mov
in
cmc
push
pop
add
orb
je
inc
jb
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
dec
jg
mov
inc
sti
lahf
je
rorb
pop
fldenv
and
push
add
imul
push
jo
jno
inc
ficoms
movsl
lret
inc
pop
sarb
jb
fidivrs
adc
or
dec
inc
inc
loope
cmpsb
fwait
pop
mov
lds
push
insb
mov
adc
pop
pop
xor
mov
push
mov
push
popf
inc
xor
mov
and
insb
sbb
rorb
pop
dec
inc
adc
add
clc
iret
xor
incb
inc
dec
fiaddl
or
or
cmpsl
jle
mov
fs
decb
xchg
mov
sub
fisubrl
cs
loopne
pop
movsl
fisttps
xchg
adc
sbb
mov
fdivl
call
push
dec
cld
fidivrl
jns
mov
shrb
test
movsb
aaa
lds
mov
shr
mov
pop
push
adc
nop
or
push
imul
vcomisd
out
pop
jo
mov
cli
repnz
in
xchg
lods
out
lahf
mov
mov
mov
sub
adc
push
cld
add
fdivrl
in
adc
or
add
cmp
imul
or
fdivl
or
aam
test
inc
push
gs
mov
xchg
loop
jo
arpl
fisttpl
or
sub
xchg
inc
fsubs
das
push
mov
es
or
dec
lea
fimull
push
add
insl
or
lret
test
mov
cmp
into
push
loop
cltd
fsubrs
push
cs
pop
jg
in
or
pop
mov
or
test
pop
pminub
pop
enter
pop
push
int3
arpl
jns
fsubrp
xchg
pop
fldt
cli
pop
cmp
imul
pushf
shrl
dec
insb
mov
sub
mov
jp
ret
mov
scas
mov
enter
inc
push
jmp
inc
in
cmpsl
sub
dec
popa
xchg
out
mov
push
push
add
loope
lret
jle
fistpll
decb
xor
pop
cmp
and
clc
mov
fstps
xor
cmp
fcoms
insb
xchg
cmp
pop
mov
flds
fcomps
add
pop
insb
imul
and
push
mov
lret
push
sbb
data16
push
je
mov
mov
das
add
push
jle
pusha
iret
mov
cltd
dec
xchg
pop
fwait
or
sub
stos
stos
cmp
repz
xlat
lods
xchg
rclb
lret
add
int3
jg
bound
push
adc
push
push
jae
cmpl
rol
and
loop
lods
mov
mov
sub
and
add
adc
sahf
je
insb
enter
repnz
in
je
mov
pushf
xchg
ret
dec
and
inc
pop
adc
cli
std
icebp
mov
rcl
pop
pop
frstor
into
in
jmp
repnz
fs
add
icebp
sub
dec
mov
or
xchg
or
push
sbb
adc
enter
stc
ljmp
mov
mov
out
jno
aam
fs
pop
sahf
xor
or
lods
sub
or
aas
fadd
ja
mov
jno
adc
sub
das
push
xchg
rorl
adc
test
pop
dec
addr16
lock
aad
faddp
cwtl
cli
cs
jl
call
lahf
shlb
lahf
jbe
pop
dec
mov
cmp
sti
gs
fdivrl
aam
pop
and
dec
jge
addr16
outsb
cmp
es
xlat
jecxz
or
stc
incl
sbb
adc
push
repnz
xchg
lods
mov
push
mov
lea
shl
or
cmp
add
movsl
sbb
pop
jne
push
lods
jnp
lret
ljmp
data16
andb
and
mov
or
out
inc
repnz
fiaddl
inc
lret
jo
pop
jmpw
add
adc
lret
aam
enter
jbe
pop
or
pop
add
loop
test
insb
and
mov
fdivp
js
mov
mov
pop
xor
fildll
jne
jae
xlat
mov
or
imul
nop
and
mov
or
aaa
test
subl
incl
inc
cmp
push
or
xchg
sub
out
and
das
in
jb
jb
lods
mov
call
aad
movsl
mov
xchg
mov
cmpsb
lds
xor
pusha
cmp
addr16
insb
sahf
lods
mov
add
ficoml
ror
pop
cmp
aaa
leave
fs
mov
mov
jmp
and
sbb
mov
in
orb
xor
jbe
inc
fsubrl
arpl
or
adc
xor
pop
imul
mov
fdivr
nop
cld
arpl
pusha
pop
lret
and
shrb
ljmp
push
xor
ret
jno
ja
outsb
test
fiaddl
rcrl
or
into
xor
dec
mov
mov
mov
xchg
jbe
add
aad
or
in
or
adc
repnz
xor
sbb
pop
fsubrs
adc
fs
jmp
cltd
popf
sbb
jmp
imul
mov
ljmp
outsb
dec
adcl
mov
pop
jae
and
loope
mov
shll
inc
push
stos
outsl
cwtl
ret
imul
fidivl
loopne
sbb
add
push
testb
mov
aad
adc
pop
fwait
jne
jecxz
and
sub
jg
mov
stos
sbb
ror
xchg
fiaddl
mov
fsubs
lock
adc
mov
mov
dec
add
or
sub
mov
jno
and
jbe
pop
adc
xor
rcpps
push
test
mov
xchg
ljmp
js
xchg
popa
push
popf
fs
shrb
mov
aad
lret
sbbl
pop
xchg
xor
stc
adc
les
inc
loop
frstor
cmp
or
and
cmp
push
and
fs
dec
push
push
add
push
inc
bnd
repnz
pop
ss
aam
aaa
std
ret
and
jmp
mov
dec
inc
push
lahf
pop
call
ss
sub
mov
out
shl
popf
lcall
je,pn
dec
mov
arpl
mov
push
repz
out
aaa
gs
into
xor
or
xchg
cmp
sub
sbb
jg
jge
jmp
daa
add
xor
pusha
pop
aaa
mov
leave
sqrtps
leave
add
pop
dec
xchg
enter
jo
add
mov
cmp
xor
test
lock
inc
out
push
dec
cmp
inc
push
pop
sbb
xchg
add
add
add
add
pop
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
